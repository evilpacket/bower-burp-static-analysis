{
    "url": "http://localhost:9999/3wks/thundr-bigmetrics/dist/thundr-bigmetrics.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "DOM data manipulation (DOM-based)",
    "issueType": 5247488,
    "severity": "Information",
    "confidence": "Firm",
    "issueBackground": "DOM-based DOM data manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a data field within the DOM that is used within the visible UI or client-side application logic. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the appearance or behavior of the client-side UI. An attacker may be able to leverage this to perform virtual defacement of the application, or possibly to induce the user to perform unintended actions.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based DOM data manipulation vulnerabilities is not to dynamically write to DOM data fields any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored. In general, this is best achieved by using a whitelist of permitted values.",
    "issueDetail": "The application may be vulnerable to DOM-based DOM data manipulation. Data is read from <b>window.name</b> and written to <b>the 'name' property of a DOM element</b> via the following statement:<ul><li>window.name= window.name.replace(NG_DEFER_B..., \"\" ) </li></ul><b>Note:</b> The name of the current window is a valid attack vector for DOM-based vulnerabilities. An attacker can directly control the name of the targeted application's window by using code on their own domain to load the targeted page using either window.open() or an iframe tag, and specifying the desired window name. ",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/3wks/thundr-bigmetrics/dist/thundr-bigmetrics.js",
                "path": "/3wks/thundr-bigmetrics/dist/thundr-bigmetrics.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC8zd2tzL3RodW5kci1iaWdtZXRyaWNzL2Rpc3QvdGh1bmRyLWJpZ21ldHJpY3MuanMgSFRUUC8xLjENCkhvc3Q6IGxvY2FsaG9zdDo5OTk5DQoNCg==",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNzc1NTUzDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBTYXQsIDA4IE5vdiAyMDE0IDIwOjA1OjQ0IEdNVA0KTGFzdC1Nb2RpZmllZDogU2F0LCAwOCBOb3YgMjAxNCAyMDowNTo0MyBHTVQNCg0KInVzZSBzdHJpY3QiOyFmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7Im9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJiJvYmplY3QiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9Z2xvYmFsLmRvY3VtZW50P2ZhY3RvcnkoZ2xvYmFsLCEwKTpmdW5jdGlvbih3KXtpZighdy5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnQiKTtyZXR1cm4gZmFjdG9yeSh3KX06ZmFjdG9yeShnbG9iYWwpfSgidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbih3aW5kb3csbm9HbG9iYWwpe2Z1bmN0aW9uIGlzQXJyYXlsaWtlKG9iail7dmFyIGxlbmd0aD1vYmoubGVuZ3RoLHR5cGU9alF1ZXJ5LnR5cGUob2JqKTtyZXR1cm4iZnVuY3Rpb24iPT09dHlwZXx8alF1ZXJ5LmlzV2luZG93KG9iaik/ITE6MT09PW9iai5ub2RlVHlwZSYmbGVuZ3RoPyEwOiJhcnJheSI9PT10eXBlfHwwPT09bGVuZ3RofHwibnVtYmVyIj09dHlwZW9mIGxlbmd0aCYmbGVuZ3RoPjAmJmxlbmd0aC0xIGluIG9ian1mdW5jdGlvbiB3aW5ub3coZWxlbWVudHMscXVhbGlmaWVyLG5vdCl7aWYoalF1ZXJ5LmlzRnVuY3Rpb24ocXVhbGlmaWVyKSlyZXR1cm4galF1ZXJ5LmdyZXAoZWxlbWVudHMsZnVuY3Rpb24oZWxlbSxpKXtyZXR1cm4hIXF1YWxpZmllci5jYWxsKGVsZW0saSxlbGVtKSE9PW5vdH0pO2lmKHF1YWxpZmllci5ub2RlVHlwZSlyZXR1cm4galF1ZXJ5LmdyZXAoZWxlbWVudHMsZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW09PT1xdWFsaWZpZXIhPT1ub3R9KTtpZigic3RyaW5nIj09dHlwZW9mIHF1YWxpZmllcil7aWYocmlzU2ltcGxlLnRlc3QocXVhbGlmaWVyKSlyZXR1cm4galF1ZXJ5LmZpbHRlcihxdWFsaWZpZXIsZWxlbWVudHMsbm90KTtxdWFsaWZpZXI9alF1ZXJ5LmZpbHRlcihxdWFsaWZpZXIsZWxlbWVudHMpfXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cyxmdW5jdGlvbihlbGVtKXtyZXR1cm4gaW5kZXhPZi5jYWxsKHF1YWxpZmllcixlbGVtKT49MCE9PW5vdH0pfWZ1bmN0aW9uIHNpYmxpbmcoY3VyLGRpcil7Zm9yKDsoY3VyPWN1cltkaXJdKSYmMSE9PWN1ci5ub2RlVHlwZTspO3JldHVybiBjdXJ9ZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyhvcHRpb25zKXt2YXIgb2JqZWN0PW9wdGlvbnNDYWNoZVtvcHRpb25zXT17fTtyZXR1cm4galF1ZXJ5LmVhY2gob3B0aW9ucy5tYXRjaChybm90d2hpdGUpfHxbXSxmdW5jdGlvbihfLGZsYWcpe29iamVjdFtmbGFnXT0hMH0pLG9iamVjdH1mdW5jdGlvbiBjb21wbGV0ZWQoKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixjb21wbGV0ZWQsITEpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIixjb21wbGV0ZWQsITEpLGpRdWVyeS5yZWFkeSgpfWZ1bmN0aW9uIERhdGEoKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcy5jYWNoZT17fSwwLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm57fX19KSx0aGlzLmV4cGFuZG89alF1ZXJ5LmV4cGFuZG8rTWF0aC5yYW5kb20oKX1mdW5jdGlvbiBkYXRhQXR0cihlbGVtLGtleSxkYXRhKXt2YXIgbmFtZTtpZih2b2lkIDA9PT1kYXRhJiYxPT09ZWxlbS5ub2RlVHlwZSlpZihuYW1lPSJkYXRhLSIra2V5LnJlcGxhY2Uocm11bHRpRGFzaCwiLSQxIikudG9Mb3dlckNhc2UoKSxkYXRhPWVsZW0uZ2V0QXR0cmlidXRlKG5hbWUpLCJzdHJpbmciPT10eXBlb2YgZGF0YSl7dHJ5e2RhdGE9InRydWUiPT09ZGF0YT8hMDoiZmFsc2UiPT09ZGF0YT8hMToibnVsbCI9PT1kYXRhP251bGw6K2RhdGErIiI9PT1kYXRhPytkYXRhOnJicmFjZS50ZXN0KGRhdGEpP2pRdWVyeS5wYXJzZUpTT04oZGF0YSk6ZGF0YX1jYXRjaChlKXt9ZGF0YV91c2VyLnNldChlbGVtLGtleSxkYXRhKX1lbHNlIGRhdGE9dm9pZCAwO3JldHVybiBkYXRhfWZ1bmN0aW9uIHJldHVyblRydWUoKXtyZXR1cm4hMH1mdW5jdGlvbiByZXR1cm5GYWxzZSgpe3JldHVybiExfWZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCl7dHJ5e3JldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50fWNhdGNoKGVycil7fX1mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoZWxlbSxjb250ZW50KXtyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKGVsZW0sInRhYmxlIikmJmpRdWVyeS5ub2RlTmFtZSgxMSE9PWNvbnRlbnQubm9kZVR5cGU/Y29udGVudDpjb250ZW50LmZpcnN0Q2hpbGQsInRyIik/ZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJvZHkiKVswXXx8ZWxlbS5hcHBlbmRDaGlsZChlbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGJvZHkiKSk6ZWxlbX1mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KGVsZW0pe3JldHVybiBlbGVtLnR5cGU9KG51bGwhPT1lbGVtLmdldEF0dHJpYnV0ZSgidHlwZSIpKSsiLyIrZWxlbS50eXBlLGVsZW19ZnVuY3Rpb24gcmVzdG9yZVNjcmlwdChlbGVtKXt2YXIgbWF0Y2g9cnNjcmlwdFR5cGVNYXNrZWQuZXhlYyhlbGVtLnR5cGUpO3JldHVybiBtYXRjaD9lbGVtLnR5cGU9bWF0Y2hbMV06ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoInR5cGUiKSxlbGVtfWZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoZWxlbXMscmVmRWxlbWVudHMpe2Zvcih2YXIgaT0wLGw9ZWxlbXMubGVuZ3RoO2w+aTtpKyspZGF0YV9wcml2LnNldChlbGVtc1tpXSwiZ2xvYmFsRXZhbCIsIXJlZkVsZW1lbnRzfHxkYXRhX3ByaXYuZ2V0KHJlZkVsZW1lbnRzW2ldLCJnbG9iYWxFdmFsIikpfWZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KHNyYyxkZXN0KXt2YXIgaSxsLHR5cGUscGRhdGFPbGQscGRhdGFDdXIsdWRhdGFPbGQsdWRhdGFDdXIsZXZlbnRzO2lmKDE9PT1kZXN0Lm5vZGVUeXBlKXtpZihkYXRhX3ByaXYuaGFzRGF0YShzcmMpJiYocGRhdGFPbGQ9ZGF0YV9wcml2LmFjY2VzcyhzcmMpLHBkYXRhQ3VyPWRhdGFfcHJpdi5zZXQoZGVzdCxwZGF0YU9sZCksZXZlbnRzPXBkYXRhT2xkLmV2ZW50cykpe2RlbGV0ZSBwZGF0YUN1ci5oYW5kbGUscGRhdGFDdXIuZXZlbnRzPXt9O2Zvcih0eXBlIGluIGV2ZW50cylmb3IoaT0wLGw9ZXZlbnRzW3R5cGVdLmxlbmd0aDtsPmk7aSsrKWpRdWVyeS5ldmVudC5hZGQoZGVzdCx0eXBlLGV2ZW50c1t0eXBlXVtpXSl9ZGF0YV91c2VyLmhhc0RhdGEoc3JjKSYmKHVkYXRhT2xkPWRhdGFfdXNlci5hY2Nlc3Moc3JjKSx1ZGF0YUN1cj1qUXVlcnkuZXh0ZW5kKHt9LHVkYXRhT2xkKSxkYXRhX3VzZXIuc2V0KGRlc3QsdWRhdGFDdXIpKX19ZnVuY3Rpb24gZ2V0QWxsKGNvbnRleHQsdGFnKXt2YXIgcmV0PWNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWU/Y29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWd8fCIqIik6Y29udGV4dC5xdWVyeVNlbGVjdG9yQWxsP2NvbnRleHQucXVlcnlTZWxlY3RvckFsbCh0YWd8fCIqIik6W107cmV0dXJuIHZvaWQgMD09PXRhZ3x8dGFnJiZqUXVlcnkubm9kZU5hbWUoY29udGV4dCx0YWcpP2pRdWVyeS5tZXJnZShbY29udGV4dF0scmV0KTpyZXR9ZnVuY3Rpb24gZml4SW5wdXQoc3JjLGRlc3Qpe3ZhciBub2RlTmFtZT1kZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7ImlucHV0Ij09PW5vZGVOYW1lJiZyY2hlY2thYmxlVHlwZS50ZXN0KHNyYy50eXBlKT9kZXN0LmNoZWNrZWQ9c3JjLmNoZWNrZWQ6KCJpbnB1dCI9PT1ub2RlTmFtZXx8InRleHRhcmVhIj09PW5vZGVOYW1lKSYmKGRlc3QuZGVmYXVsdFZhbHVlPXNyYy5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIGFjdHVhbERpc3BsYXkobmFtZSxkb2Mpe3ZhciBzdHlsZSxlbGVtPWpRdWVyeShkb2MuY3JlYXRlRWxlbWVudChuYW1lKSkuYXBwZW5kVG8oZG9jLmJvZHkpLGRpc3BsYXk9d2luZG93LmdldERlZmF1bHRDb21wdXRlZFN0eWxlJiYoc3R5bGU9d2luZG93LmdldERlZmF1bHRDb21wdXRlZFN0eWxlKGVsZW1bMF0pKT9zdHlsZS5kaXNwbGF5OmpRdWVyeS5jc3MoZWxlbVswXSwiZGlzcGxheSIpO3JldHVybiBlbGVtLmRldGFjaCgpLGRpc3BsYXl9ZnVuY3Rpb24gZGVmYXVsdERpc3BsYXkobm9kZU5hbWUpe3ZhciBkb2M9ZG9jdW1lbnQsZGlzcGxheT1lbGVtZGlzcGxheVtub2RlTmFtZV07cmV0dXJuIGRpc3BsYXl8fChkaXNwbGF5PWFjdHVhbERpc3BsYXkobm9kZU5hbWUsZG9jKSwibm9uZSIhPT1kaXNwbGF5JiZkaXNwbGF5fHwoaWZyYW1lPShpZnJhbWV8fGpRdWVyeSgiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPiIpKS5hcHBlbmRUbyhkb2MuZG9jdW1lbnRFbGVtZW50KSxkb2M9aWZyYW1lWzBdLmNvbnRlbnREb2N1bWVudCxkb2Mud3JpdGUoKSxkb2MuY2xvc2UoKSxkaXNwbGF5PWFjdHVhbERpc3BsYXkobm9kZU5hbWUsZG9jKSxpZnJhbWUuZGV0YWNoKCkpLGVsZW1kaXNwbGF5W25vZGVOYW1lXT1kaXNwbGF5KSxkaXNwbGF5fWZ1bmN0aW9uIGN1ckNTUyhlbGVtLG5hbWUsY29tcHV0ZWQpe3ZhciB3aWR0aCxtaW5XaWR0aCxtYXhXaWR0aCxyZXQsc3R5bGU9ZWxlbS5zdHlsZTtyZXR1cm4gY29tcHV0ZWQ9Y29tcHV0ZWR8fGdldFN0eWxlcyhlbGVtKSxjb21wdXRlZCYmKHJldD1jb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpfHxjb21wdXRlZFtuYW1lXSksY29tcHV0ZWQmJigiIiE9PXJldHx8alF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKXx8KHJldD1qUXVlcnkuc3R5bGUoZWxlbSxuYW1lKSkscm51bW5vbnB4LnRlc3QocmV0KSYmcm1hcmdpbi50ZXN0KG5hbWUpJiYod2lkdGg9c3R5bGUud2lkdGgsbWluV2lkdGg9c3R5bGUubWluV2lkdGgsbWF4V2lkdGg9c3R5bGUubWF4V2lkdGgsc3R5bGUubWluV2lkdGg9c3R5bGUubWF4V2lkdGg9c3R5bGUud2lkdGg9cmV0LHJldD1jb21wdXRlZC53aWR0aCxzdHlsZS53aWR0aD13aWR0aCxzdHlsZS5taW5XaWR0aD1taW5XaWR0aCxzdHlsZS5tYXhXaWR0aD1tYXhXaWR0aCkpLHZvaWQgMCE9PXJldD9yZXQrIiI6cmV0fWZ1bmN0aW9uIGFkZEdldEhvb2tJZihjb25kaXRpb25Gbixob29rRm4pe3JldHVybntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gY29uZGl0aW9uRm4oKT92b2lkIGRlbGV0ZSB0aGlzLmdldDoodGhpcy5nZXQ9aG9va0ZuKS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX1mdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZShzdHlsZSxuYW1lKXtpZihuYW1lIGluIHN0eWxlKXJldHVybiBuYW1lO2Zvcih2YXIgY2FwTmFtZT1uYW1lWzBdLnRvVXBwZXJDYXNlKCkrbmFtZS5zbGljZSgxKSxvcmlnTmFtZT1uYW1lLGk9Y3NzUHJlZml4ZXMubGVuZ3RoO2ktLTspaWYobmFtZT1jc3NQcmVmaXhlc1tpXStjYXBOYW1lLG5hbWUgaW4gc3R5bGUpcmV0dXJuIG5hbWU7cmV0dXJuIG9yaWdOYW1lfWZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKGVsZW0sdmFsdWUsc3VidHJhY3Qpe3ZhciBtYXRjaGVzPXJudW1zcGxpdC5leGVjKHZhbHVlKTtyZXR1cm4gbWF0Y2hlcz9NYXRoLm1heCgwLG1hdGNoZXNbMV0tKHN1YnRyYWN0fHwwKSkrKG1hdGNoZXNbMl18fCJweCIpOnZhbHVlfWZ1bmN0aW9uIGF1Z21lbnRXaWR0aE9ySGVpZ2h0KGVsZW0sbmFtZSxleHRyYSxpc0JvcmRlckJveCxzdHlsZXMpe2Zvcih2YXIgaT1leHRyYT09PShpc0JvcmRlckJveD8iYm9yZGVyIjoiY29udGVudCIpPzQ6IndpZHRoIj09PW5hbWU/MTowLHZhbD0wOzQ+aTtpKz0yKSJtYXJnaW4iPT09ZXh0cmEmJih2YWwrPWpRdWVyeS5jc3MoZWxlbSxleHRyYStjc3NFeHBhbmRbaV0sITAsc3R5bGVzKSksaXNCb3JkZXJCb3g/KCJjb250ZW50Ij09PWV4dHJhJiYodmFsLT1qUXVlcnkuY3NzKGVsZW0sInBhZGRpbmciK2Nzc0V4cGFuZFtpXSwhMCxzdHlsZXMpKSwibWFyZ2luIiE9PWV4dHJhJiYodmFsLT1qUXVlcnkuY3NzKGVsZW0sImJvcmRlciIrY3NzRXhwYW5kW2ldKyJXaWR0aCIsITAsc3R5bGVzKSkpOih2YWwrPWpRdWVyeS5jc3MoZWxlbSwicGFkZGluZyIrY3NzRXhwYW5kW2ldLCEwLHN0eWxlcyksInBhZGRpbmciIT09ZXh0cmEmJih2YWwrPWpRdWVyeS5jc3MoZWxlbSwiYm9yZGVyIitjc3NFeHBhbmRbaV0rIldpZHRoIiwhMCxzdHlsZXMpKSk7cmV0dXJuIHZhbH1mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KGVsZW0sbmFtZSxleHRyYSl7dmFyIHZhbHVlSXNCb3JkZXJCb3g9ITAsdmFsPSJ3aWR0aCI9PT1uYW1lP2VsZW0ub2Zmc2V0V2lkdGg6ZWxlbS5vZmZzZXRIZWlnaHQsc3R5bGVzPWdldFN0eWxlcyhlbGVtKSxpc0JvcmRlckJveD0iYm9yZGVyLWJveCI9PT1qUXVlcnkuY3NzKGVsZW0sImJveFNpemluZyIsITEsc3R5bGVzKTtpZigwPj12YWx8fG51bGw9PXZhbCl7aWYodmFsPWN1ckNTUyhlbGVtLG5hbWUsc3R5bGVzKSwoMD52YWx8fG51bGw9PXZhbCkmJih2YWw9ZWxlbS5zdHlsZVtuYW1lXSkscm51bW5vbnB4LnRlc3QodmFsKSlyZXR1cm4gdmFsO3ZhbHVlSXNCb3JkZXJCb3g9aXNCb3JkZXJCb3gmJihzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCl8fHZhbD09PWVsZW0uc3R5bGVbbmFtZV0pLHZhbD1wYXJzZUZsb2F0KHZhbCl8fDB9cmV0dXJuIHZhbCthdWdtZW50V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmF8fChpc0JvcmRlckJveD8iYm9yZGVyIjoiY29udGVudCIpLHZhbHVlSXNCb3JkZXJCb3gsc3R5bGVzKSsicHgifWZ1bmN0aW9uIHNob3dIaWRlKGVsZW1lbnRzLHNob3cpe2Zvcih2YXIgZGlzcGxheSxlbGVtLGhpZGRlbix2YWx1ZXM9W10saW5kZXg9MCxsZW5ndGg9ZWxlbWVudHMubGVuZ3RoO2xlbmd0aD5pbmRleDtpbmRleCsrKWVsZW09ZWxlbWVudHNbaW5kZXhdLGVsZW0uc3R5bGUmJih2YWx1ZXNbaW5kZXhdPWRhdGFfcHJpdi5nZXQoZWxlbSwib2xkZGlzcGxheSIpLGRpc3BsYXk9ZWxlbS5zdHlsZS5kaXNwbGF5LHNob3c/KHZhbHVlc1tpbmRleF18fCJub25lIiE9PWRpc3BsYXl8fChlbGVtLnN0eWxlLmRpc3BsYXk9IiIpLCIiPT09ZWxlbS5zdHlsZS5kaXNwbGF5JiZpc0hpZGRlbihlbGVtKSYmKHZhbHVlc1tpbmRleF09ZGF0YV9wcml2LmFjY2VzcyhlbGVtLCJvbGRkaXNwbGF5IixkZWZhdWx0RGlzcGxheShlbGVtLm5vZGVOYW1lKSkpKTooaGlkZGVuPWlzSGlkZGVuKGVsZW0pLCJub25lIj09PWRpc3BsYXkmJmhpZGRlbnx8ZGF0YV9wcml2LnNldChlbGVtLCJvbGRkaXNwbGF5IixoaWRkZW4/ZGlzcGxheTpqUXVlcnkuY3NzKGVsZW0sImRpc3BsYXkiKSkpKTtmb3IoaW5kZXg9MDtsZW5ndGg+aW5kZXg7aW5kZXgrKyllbGVtPWVsZW1lbnRzW2luZGV4XSxlbGVtLnN0eWxlJiYoc2hvdyYmIm5vbmUiIT09ZWxlbS5zdHlsZS5kaXNwbGF5JiYiIiE9PWVsZW0uc3R5bGUuZGlzcGxheXx8KGVsZW0uc3R5bGUuZGlzcGxheT1zaG93P3ZhbHVlc1tpbmRleF18fCIiOiJub25lIikpO3JldHVybiBlbGVtZW50c31mdW5jdGlvbiBUd2VlbihlbGVtLG9wdGlvbnMscHJvcCxlbmQsZWFzaW5nKXtyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KGVsZW0sb3B0aW9ucyxwcm9wLGVuZCxlYXNpbmcpfWZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmeE5vdz12b2lkIDB9KSxmeE5vdz1qUXVlcnkubm93KCl9ZnVuY3Rpb24gZ2VuRngodHlwZSxpbmNsdWRlV2lkdGgpe3ZhciB3aGljaCxpPTAsYXR0cnM9e2hlaWdodDp0eXBlfTtmb3IoaW5jbHVkZVdpZHRoPWluY2x1ZGVXaWR0aD8xOjA7ND5pO2krPTItaW5jbHVkZVdpZHRoKXdoaWNoPWNzc0V4cGFuZFtpXSxhdHRyc1sibWFyZ2luIit3aGljaF09YXR0cnNbInBhZGRpbmciK3doaWNoXT10eXBlO3JldHVybiBpbmNsdWRlV2lkdGgmJihhdHRycy5vcGFjaXR5PWF0dHJzLndpZHRoPXR5cGUpLGF0dHJzfWZ1bmN0aW9uIGNyZWF0ZVR3ZWVuKHZhbHVlLHByb3AsYW5pbWF0aW9uKXtmb3IodmFyIHR3ZWVuLGNvbGxlY3Rpb249KHR3ZWVuZXJzW3Byb3BdfHxbXSkuY29uY2F0KHR3ZWVuZXJzWyIqIl0pLGluZGV4PTAsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoO2xlbmd0aD5pbmRleDtpbmRleCsrKWlmKHR3ZWVuPWNvbGxlY3Rpb25baW5kZXhdLmNhbGwoYW5pbWF0aW9uLHByb3AsdmFsdWUpKXJldHVybiB0d2Vlbn1mdW5jdGlvbiBkZWZhdWx0UHJlZmlsdGVyKGVsZW0scHJvcHMsb3B0cyl7dmFyIHByb3AsdmFsdWUsdG9nZ2xlLHR3ZWVuLGhvb2tzLG9sZGZpcmUsZGlzcGxheSxjaGVja0Rpc3BsYXksYW5pbT10aGlzLG9yaWc9e30sc3R5bGU9ZWxlbS5zdHlsZSxoaWRkZW49ZWxlbS5ub2RlVHlwZSYmaXNIaWRkZW4oZWxlbSksZGF0YVNob3c9ZGF0YV9wcml2LmdldChlbGVtLCJmeHNob3ciKTtvcHRzLnF1ZXVlfHwoaG9va3M9alF1ZXJ5Ll9xdWV1ZUhvb2tzKGVsZW0sImZ4IiksbnVsbD09aG9va3MudW5xdWV1ZWQmJihob29rcy51bnF1ZXVlZD0wLG9sZGZpcmU9aG9va3MuZW1wdHkuZmlyZSxob29rcy5lbXB0eS5maXJlPWZ1bmN0aW9uKCl7aG9va3MudW5xdWV1ZWR8fG9sZGZpcmUoKX0pLGhvb2tzLnVucXVldWVkKyssYW5pbS5hbHdheXMoZnVuY3Rpb24oKXthbmltLmFsd2F5cyhmdW5jdGlvbigpe2hvb2tzLnVucXVldWVkLS0salF1ZXJ5LnF1ZXVlKGVsZW0sImZ4IikubGVuZ3RofHxob29rcy5lbXB0eS5maXJlKCl9KX0pKSwxPT09ZWxlbS5ub2RlVHlwZSYmKCJoZWlnaHQiaW4gcHJvcHN8fCJ3aWR0aCJpbiBwcm9wcykmJihvcHRzLm92ZXJmbG93PVtzdHlsZS5vdmVyZmxvdyxzdHlsZS5vdmVyZmxvd1gsc3R5bGUub3ZlcmZsb3dZXSxkaXNwbGF5PWpRdWVyeS5jc3MoZWxlbSwiZGlzcGxheSIpLGNoZWNrRGlzcGxheT0ibm9uZSI9PT1kaXNwbGF5P2RhdGFfcHJpdi5nZXQoZWxlbSwib2xkZGlzcGxheSIpfHxkZWZhdWx0RGlzcGxheShlbGVtLm5vZGVOYW1lKTpkaXNwbGF5LCJpbmxpbmUiPT09Y2hlY2tEaXNwbGF5JiYibm9uZSI9PT1qUXVlcnkuY3NzKGVsZW0sImZsb2F0IikmJihzdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siKSksb3B0cy5vdmVyZmxvdyYmKHN0eWxlLm92ZXJmbG93PSJoaWRkZW4iLGFuaW0uYWx3YXlzKGZ1bmN0aW9uKCl7c3R5bGUub3ZlcmZsb3c9b3B0cy5vdmVyZmxvd1swXSxzdHlsZS5vdmVyZmxvd1g9b3B0cy5vdmVyZmxvd1sxXSxzdHlsZS5vdmVyZmxvd1k9b3B0cy5vdmVyZmxvd1syXX0pKTtmb3IocHJvcCBpbiBwcm9wcylpZih2YWx1ZT1wcm9wc1twcm9wXSxyZnh0eXBlcy5leGVjKHZhbHVlKSl7aWYoZGVsZXRlIHByb3BzW3Byb3BdLHRvZ2dsZT10b2dnbGV8fCJ0b2dnbGUiPT09dmFsdWUsdmFsdWU9PT0oaGlkZGVuPyJoaWRlIjoic2hvdyIpKXtpZigic2hvdyIhPT12YWx1ZXx8IWRhdGFTaG93fHx2b2lkIDA9PT1kYXRhU2hvd1twcm9wXSljb250aW51ZTtoaWRkZW49ITB9b3JpZ1twcm9wXT1kYXRhU2hvdyYmZGF0YVNob3dbcHJvcF18fGpRdWVyeS5zdHlsZShlbGVtLHByb3ApfWVsc2UgZGlzcGxheT12b2lkIDA7aWYoalF1ZXJ5LmlzRW1wdHlPYmplY3Qob3JpZykpImlubGluZSI9PT0oIm5vbmUiPT09ZGlzcGxheT9kZWZhdWx0RGlzcGxheShlbGVtLm5vZGVOYW1lKTpkaXNwbGF5KSYmKHN0eWxlLmRpc3BsYXk9ZGlzcGxheSk7ZWxzZXtkYXRhU2hvdz8iaGlkZGVuImluIGRhdGFTaG93JiYoaGlkZGVuPWRhdGFTaG93LmhpZGRlbik6ZGF0YVNob3c9ZGF0YV9wcml2LmFjY2VzcyhlbGVtLCJmeHNob3ciLHt9KSx0b2dnbGUmJihkYXRhU2hvdy5oaWRkZW49IWhpZGRlbiksaGlkZGVuP2pRdWVyeShlbGVtKS5zaG93KCk6YW5pbS5kb25lKGZ1bmN0aW9uKCl7alF1ZXJ5KGVsZW0pLmhpZGUoKX0pLGFuaW0uZG9uZShmdW5jdGlvbigpe3ZhciBwcm9wO2RhdGFfcHJpdi5yZW1vdmUoZWxlbSwiZnhzaG93Iik7Zm9yKHByb3AgaW4gb3JpZylqUXVlcnkuc3R5bGUoZWxlbSxwcm9wLG9yaWdbcHJvcF0pfSk7Zm9yKHByb3AgaW4gb3JpZyl0d2Vlbj1jcmVhdGVUd2VlbihoaWRkZW4/ZGF0YVNob3dbcHJvcF06MCxwcm9wLGFuaW0pLHByb3AgaW4gZGF0YVNob3d8fChkYXRhU2hvd1twcm9wXT10d2Vlbi5zdGFydCxoaWRkZW4mJih0d2Vlbi5lbmQ9dHdlZW4uc3RhcnQsdHdlZW4uc3RhcnQ9IndpZHRoIj09PXByb3B8fCJoZWlnaHQiPT09cHJvcD8xOjApKX19ZnVuY3Rpb24gcHJvcEZpbHRlcihwcm9wcyxzcGVjaWFsRWFzaW5nKXt2YXIgaW5kZXgsbmFtZSxlYXNpbmcsdmFsdWUsaG9va3M7Zm9yKGluZGV4IGluIHByb3BzKWlmKG5hbWU9alF1ZXJ5LmNhbWVsQ2FzZShpbmRleCksZWFzaW5nPXNwZWNpYWxFYXNpbmdbbmFtZV0sdmFsdWU9cHJvcHNbaW5kZXhdLGpRdWVyeS5pc0FycmF5KHZhbHVlKSYmKGVhc2luZz12YWx1ZVsxXSx2YWx1ZT1wcm9wc1tpbmRleF09dmFsdWVbMF0pLGluZGV4IT09bmFtZSYmKHByb3BzW25hbWVdPXZhbHVlLGRlbGV0ZSBwcm9wc1tpbmRleF0pLGhvb2tzPWpRdWVyeS5jc3NIb29rc1tuYW1lXSxob29rcyYmImV4cGFuZCJpbiBob29rcyl7dmFsdWU9aG9va3MuZXhwYW5kKHZhbHVlKSxkZWxldGUgcHJvcHNbbmFtZV07Zm9yKGluZGV4IGluIHZhbHVlKWluZGV4IGluIHByb3BzfHwocHJvcHNbaW5kZXhdPXZhbHVlW2luZGV4XSxzcGVjaWFsRWFzaW5nW2luZGV4XT1lYXNpbmcpfWVsc2Ugc3BlY2lhbEVhc2luZ1tuYW1lXT1lYXNpbmd9ZnVuY3Rpb24gQW5pbWF0aW9uKGVsZW0scHJvcGVydGllcyxvcHRpb25zKXt2YXIgcmVzdWx0LHN0b3BwZWQsaW5kZXg9MCxsZW5ndGg9YW5pbWF0aW9uUHJlZmlsdGVycy5sZW5ndGgsZGVmZXJyZWQ9alF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKGZ1bmN0aW9uKCl7ZGVsZXRlIHRpY2suZWxlbX0pLHRpY2s9ZnVuY3Rpb24oKXtpZihzdG9wcGVkKXJldHVybiExO2Zvcih2YXIgY3VycmVudFRpbWU9ZnhOb3d8fGNyZWF0ZUZ4Tm93KCkscmVtYWluaW5nPU1hdGgubWF4KDAsYW5pbWF0aW9uLnN0YXJ0VGltZSthbmltYXRpb24uZHVyYXRpb24tY3VycmVudFRpbWUpLHRlbXA9cmVtYWluaW5nL2FuaW1hdGlvbi5kdXJhdGlvbnx8MCxwZXJjZW50PTEtdGVtcCxpbmRleD0wLGxlbmd0aD1hbmltYXRpb24udHdlZW5zLmxlbmd0aDtsZW5ndGg+aW5kZXg7aW5kZXgrKylhbmltYXRpb24udHdlZW5zW2luZGV4XS5ydW4ocGVyY2VudCk7cmV0dXJuIGRlZmVycmVkLm5vdGlmeVdpdGgoZWxlbSxbYW5pbWF0aW9uLHBlcmNlbnQscmVtYWluaW5nXSksMT5wZXJjZW50JiZsZW5ndGg/cmVtYWluaW5nOihkZWZlcnJlZC5yZXNvbHZlV2l0aChlbGVtLFthbmltYXRpb25dKSwhMSl9LGFuaW1hdGlvbj1kZWZlcnJlZC5wcm9taXNlKHtlbGVtOmVsZW0scHJvcHM6alF1ZXJ5LmV4dGVuZCh7fSxwcm9wZXJ0aWVzKSxvcHRzOmpRdWVyeS5leHRlbmQoITAse3NwZWNpYWxFYXNpbmc6e319LG9wdGlvbnMpLG9yaWdpbmFsUHJvcGVydGllczpwcm9wZXJ0aWVzLG9yaWdpbmFsT3B0aW9uczpvcHRpb25zLHN0YXJ0VGltZTpmeE5vd3x8Y3JlYXRlRnhOb3coKSxkdXJhdGlvbjpvcHRpb25zLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihwcm9wLGVuZCl7dmFyIHR3ZWVuPWpRdWVyeS5Ud2VlbihlbGVtLGFuaW1hdGlvbi5vcHRzLHByb3AsZW5kLGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmdbcHJvcF18fGFuaW1hdGlvbi5vcHRzLmVhc2luZyk7cmV0dXJuIGFuaW1hdGlvbi50d2VlbnMucHVzaCh0d2VlbiksdHdlZW59LHN0b3A6ZnVuY3Rpb24oZ290b0VuZCl7dmFyIGluZGV4PTAsbGVuZ3RoPWdvdG9FbmQ/YW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg6MDtpZihzdG9wcGVkKXJldHVybiB0aGlzO2ZvcihzdG9wcGVkPSEwO2xlbmd0aD5pbmRleDtpbmRleCsrKWFuaW1hdGlvbi50d2VlbnNbaW5kZXhdLnJ1bigxKTtyZXR1cm4gZ290b0VuZD9kZWZlcnJlZC5yZXNvbHZlV2l0aChlbGVtLFthbmltYXRpb24sZ290b0VuZF0pOmRlZmVycmVkLnJlamVjdFdpdGgoZWxlbSxbYW5pbWF0aW9uLGdvdG9FbmRdKSx0aGlzfX0pLHByb3BzPWFuaW1hdGlvbi5wcm9wcztmb3IocHJvcEZpbHRlcihwcm9wcyxhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nKTtsZW5ndGg+aW5kZXg7aW5kZXgrKylpZihyZXN1bHQ9YW5pbWF0aW9uUHJlZmlsdGVyc1tpbmRleF0uY2FsbChhbmltYXRpb24sZWxlbSxwcm9wcyxhbmltYXRpb24ub3B0cykpcmV0dXJuIHJlc3VsdDtyZXR1cm4galF1ZXJ5Lm1hcChwcm9wcyxjcmVhdGVUd2VlbixhbmltYXRpb24pLGpRdWVyeS5pc0Z1bmN0aW9uKGFuaW1hdGlvbi5vcHRzLnN0YXJ0KSYmYW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbChlbGVtLGFuaW1hdGlvbiksalF1ZXJ5LmZ4LnRpbWVyKGpRdWVyeS5leHRlbmQodGljayx7ZWxlbTplbGVtLGFuaW06YW5pbWF0aW9uLHF1ZXVlOmFuaW1hdGlvbi5vcHRzLnF1ZXVlfSkpLGFuaW1hdGlvbi5wcm9ncmVzcyhhbmltYXRpb24ub3B0cy5wcm9ncmVzcykuZG9uZShhbmltYXRpb24ub3B0cy5kb25lLGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlKS5mYWlsKGFuaW1hdGlvbi5vcHRzLmZhaWwpLmFsd2F5cyhhbmltYXRpb24ub3B0cy5hbHdheXMpfWZ1bmN0aW9uIGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyhzdHJ1Y3R1cmUpe3JldHVybiBmdW5jdGlvbihkYXRhVHlwZUV4cHJlc3Npb24sZnVuYyl7InN0cmluZyIhPXR5cGVvZiBkYXRhVHlwZUV4cHJlc3Npb24mJihmdW5jPWRhdGFUeXBlRXhwcmVzc2lvbixkYXRhVHlwZUV4cHJlc3Npb249IioiKTt2YXIgZGF0YVR5cGUsaT0wLGRhdGFUeXBlcz1kYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5tYXRjaChybm90d2hpdGUpfHxbXTtpZihqUXVlcnkuaXNGdW5jdGlvbihmdW5jKSlmb3IoO2RhdGFUeXBlPWRhdGFUeXBlc1tpKytdOykiKyI9PT1kYXRhVHlwZVswXT8oZGF0YVR5cGU9ZGF0YVR5cGUuc2xpY2UoMSl8fCIqIiwoc3RydWN0dXJlW2RhdGFUeXBlXT1zdHJ1Y3R1cmVbZGF0YVR5cGVdfHxbXSkudW5zaGlmdChmdW5jKSk6KHN0cnVjdHVyZVtkYXRhVHlwZV09c3RydWN0dXJlW2RhdGFUeXBlXXx8W10pLnB1c2goZnVuYyl9fWZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKHN0cnVjdHVyZSxvcHRpb25zLG9yaWdpbmFsT3B0aW9ucyxqcVhIUil7ZnVuY3Rpb24gaW5zcGVjdChkYXRhVHlwZSl7dmFyIHNlbGVjdGVkO3JldHVybiBpbnNwZWN0ZWRbZGF0YVR5cGVdPSEwLGpRdWVyeS5lYWNoKHN0cnVjdHVyZVtkYXRhVHlwZV18fFtdLGZ1bmN0aW9uKF8scHJlZmlsdGVyT3JGYWN0b3J5KXt2YXIgZGF0YVR5cGVPclRyYW5zcG9ydD1wcmVmaWx0ZXJPckZhY3Rvcnkob3B0aW9ucyxvcmlnaW5hbE9wdGlvbnMsanFYSFIpO3JldHVybiJzdHJpbmciIT10eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydHx8c2Vla2luZ1RyYW5zcG9ydHx8aW5zcGVjdGVkW2RhdGFUeXBlT3JUcmFuc3BvcnRdP3NlZWtpbmdUcmFuc3BvcnQ/IShzZWxlY3RlZD1kYXRhVHlwZU9yVHJhbnNwb3J0KTp2b2lkIDA6KG9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoZGF0YVR5cGVPclRyYW5zcG9ydCksaW5zcGVjdChkYXRhVHlwZU9yVHJhbnNwb3J0KSwhMSl9KSxzZWxlY3RlZH12YXIgaW5zcGVjdGVkPXt9LHNlZWtpbmdUcmFuc3BvcnQ9c3RydWN0dXJlPT09dHJhbnNwb3J0cztyZXR1cm4gaW5zcGVjdChvcHRpb25zLmRhdGFUeXBlc1swXSl8fCFpbnNwZWN0ZWRbIioiXSYmaW5zcGVjdCgiKiIpfWZ1bmN0aW9uIGFqYXhFeHRlbmQodGFyZ2V0LHNyYyl7dmFyIGtleSxkZWVwLGZsYXRPcHRpb25zPWpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnN8fHt9O2ZvcihrZXkgaW4gc3JjKXZvaWQgMCE9PXNyY1trZXldJiYoKGZsYXRPcHRpb25zW2tleV0/dGFyZ2V0OmRlZXB8fChkZWVwPXt9KSlba2V5XT1zcmNba2V5XSk7cmV0dXJuIGRlZXAmJmpRdWVyeS5leHRlbmQoITAsdGFyZ2V0LGRlZXApLHRhcmdldH1mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKHMsanFYSFIscmVzcG9uc2VzKXtmb3IodmFyIGN0LHR5cGUsZmluYWxEYXRhVHlwZSxmaXJzdERhdGFUeXBlLGNvbnRlbnRzPXMuY29udGVudHMsZGF0YVR5cGVzPXMuZGF0YVR5cGVzOyIqIj09PWRhdGFUeXBlc1swXTspZGF0YVR5cGVzLnNoaWZ0KCksdm9pZCAwPT09Y3QmJihjdD1zLm1pbWVUeXBlfHxqcVhIUi5nZXRSZXNwb25zZUhlYWRlcigiQ29udGVudC1UeXBlIikpO2lmKGN0KWZvcih0eXBlIGluIGNvbnRlbnRzKWlmKGNvbnRlbnRzW3R5cGVdJiZjb250ZW50c1t0eXBlXS50ZXN0KGN0KSl7ZGF0YVR5cGVzLnVuc2hpZnQodHlwZSk7YnJlYWt9aWYoZGF0YVR5cGVzWzBdaW4gcmVzcG9uc2VzKWZpbmFsRGF0YVR5cGU9ZGF0YVR5cGVzWzBdO2Vsc2V7Zm9yKHR5cGUgaW4gcmVzcG9uc2VzKXtpZighZGF0YVR5cGVzWzBdfHxzLmNvbnZlcnRlcnNbdHlwZSsiICIrZGF0YVR5cGVzWzBdXSl7ZmluYWxEYXRhVHlwZT10eXBlO2JyZWFrfWZpcnN0RGF0YVR5cGV8fChmaXJzdERhdGFUeXBlPXR5cGUpfWZpbmFsRGF0YVR5cGU9ZmluYWxEYXRhVHlwZXx8Zmlyc3REYXRhVHlwZX1yZXR1cm4gZmluYWxEYXRhVHlwZT8oZmluYWxEYXRhVHlwZSE9PWRhdGFUeXBlc1swXSYmZGF0YVR5cGVzLnVuc2hpZnQoZmluYWxEYXRhVHlwZSkscmVzcG9uc2VzW2ZpbmFsRGF0YVR5cGVdKTp2b2lkIDB9ZnVuY3Rpb24gYWpheENvbnZlcnQocyxyZXNwb25zZSxqcVhIUixpc1N1Y2Nlc3Mpe3ZhciBjb252MixjdXJyZW50LGNvbnYsdG1wLHByZXYsY29udmVydGVycz17fSxkYXRhVHlwZXM9cy5kYXRhVHlwZXMuc2xpY2UoKTtpZihkYXRhVHlwZXNbMV0pZm9yKGNvbnYgaW4gcy5jb252ZXJ0ZXJzKWNvbnZlcnRlcnNbY29udi50b0xvd2VyQ2FzZSgpXT1zLmNvbnZlcnRlcnNbY29udl07Zm9yKGN1cnJlbnQ9ZGF0YVR5cGVzLnNoaWZ0KCk7Y3VycmVudDspaWYocy5yZXNwb25zZUZpZWxkc1tjdXJyZW50XSYmKGpxWEhSW3MucmVzcG9uc2VGaWVsZHNbY3VycmVudF1dPXJlc3BvbnNlKSwhcHJldiYmaXNTdWNjZXNzJiZzLmRhdGFGaWx0ZXImJihyZXNwb25zZT1zLmRhdGFGaWx0ZXIocmVzcG9uc2Uscy5kYXRhVHlwZSkpLHByZXY9Y3VycmVudCxjdXJyZW50PWRhdGFUeXBlcy5zaGlmdCgpKWlmKCIqIj09PWN1cnJlbnQpY3VycmVudD1wcmV2O2Vsc2UgaWYoIioiIT09cHJldiYmcHJldiE9PWN1cnJlbnQpe2lmKGNvbnY9Y29udmVydGVyc1twcmV2KyIgIitjdXJyZW50XXx8Y29udmVydGVyc1siKiAiK2N1cnJlbnRdLCFjb252KWZvcihjb252MiBpbiBjb252ZXJ0ZXJzKWlmKHRtcD1jb252Mi5zcGxpdCgiICIpLHRtcFsxXT09PWN1cnJlbnQmJihjb252PWNvbnZlcnRlcnNbcHJldisiICIrdG1wWzBdXXx8Y29udmVydGVyc1siKiAiK3RtcFswXV0pKXtjb252PT09ITA/Y29udj1jb252ZXJ0ZXJzW2NvbnYyXTpjb252ZXJ0ZXJzW2NvbnYyXSE9PSEwJiYoY3VycmVudD10bXBbMF0sZGF0YVR5cGVzLnVuc2hpZnQodG1wWzFdKSk7YnJlYWt9aWYoY29udiE9PSEwKWlmKGNvbnYmJnNbInRocm93cyJdKXJlc3BvbnNlPWNvbnYocmVzcG9uc2UpO2Vsc2UgdHJ5e3Jlc3BvbnNlPWNvbnYocmVzcG9uc2UpfWNhdGNoKGUpe3JldHVybntzdGF0ZToicGFyc2VyZXJyb3IiLGVycm9yOmNvbnY/ZToiTm8gY29udmVyc2lvbiBmcm9tICIrcHJldisiIHRvICIrY3VycmVudH19fXJldHVybntzdGF0ZToic3VjY2VzcyIsZGF0YTpyZXNwb25zZX19ZnVuY3Rpb24gYnVpbGRQYXJhbXMocHJlZml4LG9iaix0cmFkaXRpb25hbCxhZGQpe3ZhciBuYW1lO2lmKGpRdWVyeS5pc0FycmF5KG9iaikpalF1ZXJ5LmVhY2gob2JqLGZ1bmN0aW9uKGksdil7dHJhZGl0aW9uYWx8fHJicmFja2V0LnRlc3QocHJlZml4KT9hZGQocHJlZml4LHYpOmJ1aWxkUGFyYW1zKHByZWZpeCsiWyIrKCJvYmplY3QiPT10eXBlb2Ygdj9pOiIiKSsiXSIsdix0cmFkaXRpb25hbCxhZGQpfSk7ZWxzZSBpZih0cmFkaXRpb25hbHx8Im9iamVjdCIhPT1qUXVlcnkudHlwZShvYmopKWFkZChwcmVmaXgsb2JqKTtlbHNlIGZvcihuYW1lIGluIG9iailidWlsZFBhcmFtcyhwcmVmaXgrIlsiK25hbWUrIl0iLG9ialtuYW1lXSx0cmFkaXRpb25hbCxhZGQpfWZ1bmN0aW9uIGdldFdpbmRvdyhlbGVtKXtyZXR1cm4galF1ZXJ5LmlzV2luZG93KGVsZW0pP2VsZW06OT09PWVsZW0ubm9kZVR5cGUmJmVsZW0uZGVmYXVsdFZpZXd9dmFyIGFycj1bXSxzbGljZT1hcnIuc2xpY2UsY29uY2F0PWFyci5jb25jYXQscHVzaD1hcnIucHVzaCxpbmRleE9mPWFyci5pbmRleE9mLGNsYXNzMnR5cGU9e30sdG9TdHJpbmc9Y2xhc3MydHlwZS50b1N0cmluZyxoYXNPd249Y2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eSxzdXBwb3J0PXt9LGRvY3VtZW50PXdpbmRvdy5kb2N1bWVudCx2ZXJzaW9uPSIyLjEuMSIsalF1ZXJ5PWZ1bmN0aW9uKHNlbGVjdG9yLGNvbnRleHQpe3JldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoc2VsZWN0b3IsY29udGV4dCl9LHJ0cmltPS9eW1xzXHVGRUZGXHhBMF0rfFtcc1x1RkVGRlx4QTBdKyQvZyxybXNQcmVmaXg9L14tbXMtLyxyZGFzaEFscGhhPS8tKFtcZGEtel0pL2dpLGZjYW1lbENhc2U9ZnVuY3Rpb24oYWxsLGxldHRlcil7cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpfTtqUXVlcnkuZm49alF1ZXJ5LnByb3RvdHlwZT17anF1ZXJ5OnZlcnNpb24sY29uc3RydWN0b3I6alF1ZXJ5LHNlbGVjdG9yOiIiLGxlbmd0aDowLHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gc2xpY2UuY2FsbCh0aGlzKX0sZ2V0OmZ1bmN0aW9uKG51bSl7cmV0dXJuIG51bGwhPW51bT8wPm51bT90aGlzW251bSt0aGlzLmxlbmd0aF06dGhpc1tudW1dOnNsaWNlLmNhbGwodGhpcyl9LHB1c2hTdGFjazpmdW5jdGlvbihlbGVtcyl7dmFyIHJldD1qUXVlcnkubWVyZ2UodGhpcy5jb25zdHJ1Y3RvcigpLGVsZW1zKTtyZXR1cm4gcmV0LnByZXZPYmplY3Q9dGhpcyxyZXQuY29udGV4dD10aGlzLmNvbnRleHQscmV0fSxlYWNoOmZ1bmN0aW9uKGNhbGxiYWNrLGFyZ3Mpe3JldHVybiBqUXVlcnkuZWFjaCh0aGlzLGNhbGxiYWNrLGFyZ3MpfSxtYXA6ZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiB0aGlzLnB1c2hTdGFjayhqUXVlcnkubWFwKHRoaXMsZnVuY3Rpb24oZWxlbSxpKXtyZXR1cm4gY2FsbGJhY2suY2FsbChlbGVtLGksZWxlbSl9KSl9LHNsaWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHNsaWNlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LGVxOmZ1bmN0aW9uKGkpe3ZhciBsZW49dGhpcy5sZW5ndGgsaj0raSsoMD5pP2xlbjowKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soaj49MCYmbGVuPmo/W3RoaXNbal1dOltdKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcihudWxsKX0scHVzaDpwdXNoLHNvcnQ6YXJyLnNvcnQsc3BsaWNlOmFyci5zcGxpY2V9LGpRdWVyeS5leHRlbmQ9alF1ZXJ5LmZuLmV4dGVuZD1mdW5jdGlvbigpe3ZhciBvcHRpb25zLG5hbWUsc3JjLGNvcHksY29weUlzQXJyYXksY2xvbmUsdGFyZ2V0PWFyZ3VtZW50c1swXXx8e30saT0xLGxlbmd0aD1hcmd1bWVudHMubGVuZ3RoLGRlZXA9ITE7Zm9yKCJib29sZWFuIj09dHlwZW9mIHRhcmdldCYmKGRlZXA9dGFyZ2V0LHRhcmdldD1hcmd1bWVudHNbaV18fHt9LGkrKyksIm9iamVjdCI9PXR5cGVvZiB0YXJnZXR8fGpRdWVyeS5pc0Z1bmN0aW9uKHRhcmdldCl8fCh0YXJnZXQ9e30pLGk9PT1sZW5ndGgmJih0YXJnZXQ9dGhpcyxpLS0pO2xlbmd0aD5pO2krKylpZihudWxsIT0ob3B0aW9ucz1hcmd1bWVudHNbaV0pKWZvcihuYW1lIGluIG9wdGlvbnMpc3JjPXRhcmdldFtuYW1lXSxjb3B5PW9wdGlvbnNbbmFtZV0sdGFyZ2V0IT09Y29weSYmKGRlZXAmJmNvcHkmJihqUXVlcnkuaXNQbGFpbk9iamVjdChjb3B5KXx8KGNvcHlJc0FycmF5PWpRdWVyeS5pc0FycmF5KGNvcHkpKSk/KGNvcHlJc0FycmF5Pyhjb3B5SXNBcnJheT0hMSxjbG9uZT1zcmMmJmpRdWVyeS5pc0FycmF5KHNyYyk/c3JjOltdKTpjbG9uZT1zcmMmJmpRdWVyeS5pc1BsYWluT2JqZWN0KHNyYyk/c3JjOnt9LHRhcmdldFtuYW1lXT1qUXVlcnkuZXh0ZW5kKGRlZXAsY2xvbmUsY29weSkpOnZvaWQgMCE9PWNvcHkmJih0YXJnZXRbbmFtZV09Y29weSkpO3JldHVybiB0YXJnZXR9LGpRdWVyeS5leHRlbmQoe2V4cGFuZG86ImpRdWVyeSIrKHZlcnNpb24rTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXEQvZywiIiksaXNSZWFkeTohMCxlcnJvcjpmdW5jdGlvbihtc2cpe3Rocm93IG5ldyBFcnJvcihtc2cpfSxub29wOmZ1bmN0aW9uKCl7fSxpc0Z1bmN0aW9uOmZ1bmN0aW9uKG9iail7cmV0dXJuImZ1bmN0aW9uIj09PWpRdWVyeS50eXBlKG9iail9LGlzQXJyYXk6QXJyYXkuaXNBcnJheSxpc1dpbmRvdzpmdW5jdGlvbihvYmope3JldHVybiBudWxsIT1vYmomJm9iaj09PW9iai53aW5kb3d9LGlzTnVtZXJpYzpmdW5jdGlvbihvYmope3JldHVybiFqUXVlcnkuaXNBcnJheShvYmopJiZvYmotcGFyc2VGbG9hdChvYmopPj0wfSxpc1BsYWluT2JqZWN0OmZ1bmN0aW9uKG9iail7cmV0dXJuIm9iamVjdCIhPT1qUXVlcnkudHlwZShvYmopfHxvYmoubm9kZVR5cGV8fGpRdWVyeS5pc1dpbmRvdyhvYmopPyExOm9iai5jb25zdHJ1Y3RvciYmIWhhc093bi5jYWxsKG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsImlzUHJvdG90eXBlT2YiKT8hMTohMH0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihvYmope3ZhciBuYW1lO2ZvcihuYW1lIGluIG9iailyZXR1cm4hMTtyZXR1cm4hMH0sdHlwZTpmdW5jdGlvbihvYmope3JldHVybiBudWxsPT1vYmo/b2JqKyIiOiJvYmplY3QiPT10eXBlb2Ygb2JqfHwiZnVuY3Rpb24iPT10eXBlb2Ygb2JqP2NsYXNzMnR5cGVbdG9TdHJpbmcuY2FsbChvYmopXXx8Im9iamVjdCI6dHlwZW9mIG9ian0sZ2xvYmFsRXZhbDpmdW5jdGlvbihjb2RlKXt2YXIgc2NyaXB0LGluZGlyZWN0PWV2YWw7Y29kZT1qUXVlcnkudHJpbShjb2RlKSxjb2RlJiYoMT09PWNvZGUuaW5kZXhPZigidXNlIHN0cmljdCIpPyhzY3JpcHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iiksc2NyaXB0LnRleHQ9Y29kZSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpKTppbmRpcmVjdChjb2RlKSl9LGNhbWVsQ2FzZTpmdW5jdGlvbihzdHJpbmcpe3JldHVybiBzdHJpbmcucmVwbGFjZShybXNQcmVmaXgsIm1zLSIpLnJlcGxhY2UocmRhc2hBbHBoYSxmY2FtZWxDYXNlKX0sbm9kZU5hbWU6ZnVuY3Rpb24oZWxlbSxuYW1lKXtyZXR1cm4gZWxlbS5ub2RlTmFtZSYmZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09bmFtZS50b0xvd2VyQ2FzZSgpfSxlYWNoOmZ1bmN0aW9uKG9iaixjYWxsYmFjayxhcmdzKXt2YXIgdmFsdWUsaT0wLGxlbmd0aD1vYmoubGVuZ3RoLGlzQXJyYXk9aXNBcnJheWxpa2Uob2JqKTtpZihhcmdzKXtpZihpc0FycmF5KWZvcig7bGVuZ3RoPmkmJih2YWx1ZT1jYWxsYmFjay5hcHBseShvYmpbaV0sYXJncyksdmFsdWUhPT0hMSk7aSsrKTtlbHNlIGZvcihpIGluIG9iailpZih2YWx1ZT1jYWxsYmFjay5hcHBseShvYmpbaV0sYXJncyksdmFsdWU9PT0hMSlicmVha31lbHNlIGlmKGlzQXJyYXkpZm9yKDtsZW5ndGg+aSYmKHZhbHVlPWNhbGxiYWNrLmNhbGwob2JqW2ldLGksb2JqW2ldKSx2YWx1ZSE9PSExKTtpKyspO2Vsc2UgZm9yKGkgaW4gb2JqKWlmKHZhbHVlPWNhbGxiYWNrLmNhbGwob2JqW2ldLGksb2JqW2ldKSx2YWx1ZT09PSExKWJyZWFrO3JldHVybiBvYmp9LHRyaW06ZnVuY3Rpb24odGV4dCl7cmV0dXJuIG51bGw9PXRleHQ/IiI6KHRleHQrIiIpLnJlcGxhY2UocnRyaW0sIiIpfSxtYWtlQXJyYXk6ZnVuY3Rpb24oYXJyLHJlc3VsdHMpe3ZhciByZXQ9cmVzdWx0c3x8W107cmV0dXJuIG51bGwhPWFyciYmKGlzQXJyYXlsaWtlKE9iamVjdChhcnIpKT9qUXVlcnkubWVyZ2UocmV0LCJzdHJpbmciPT10eXBlb2YgYXJyP1thcnJdOmFycik6cHVzaC5jYWxsKHJldCxhcnIpKSxyZXR9LGluQXJyYXk6ZnVuY3Rpb24oZWxlbSxhcnIsaSl7cmV0dXJuIG51bGw9PWFycj8tMTppbmRleE9mLmNhbGwoYXJyLGVsZW0saSl9LG1lcmdlOmZ1bmN0aW9uKGZpcnN0LHNlY29uZCl7Zm9yKHZhciBsZW49K3NlY29uZC5sZW5ndGgsaj0wLGk9Zmlyc3QubGVuZ3RoO2xlbj5qO2orKylmaXJzdFtpKytdPXNlY29uZFtqXTtyZXR1cm4gZmlyc3QubGVuZ3RoPWksZmlyc3R9LGdyZXA6ZnVuY3Rpb24oZWxlbXMsY2FsbGJhY2ssaW52ZXJ0KXtmb3IodmFyIGNhbGxiYWNrSW52ZXJzZSxtYXRjaGVzPVtdLGk9MCxsZW5ndGg9ZWxlbXMubGVuZ3RoLGNhbGxiYWNrRXhwZWN0PSFpbnZlcnQ7bGVuZ3RoPmk7aSsrKWNhbGxiYWNrSW52ZXJzZT0hY2FsbGJhY2soZWxlbXNbaV0saSksY2FsbGJhY2tJbnZlcnNlIT09Y2FsbGJhY2tFeHBlY3QmJm1hdGNoZXMucHVzaChlbGVtc1tpXSk7cmV0dXJuIG1hdGNoZXN9LG1hcDpmdW5jdGlvbihlbGVtcyxjYWxsYmFjayxhcmcpe3ZhciB2YWx1ZSxpPTAsbGVuZ3RoPWVsZW1zLmxlbmd0aCxpc0FycmF5PWlzQXJyYXlsaWtlKGVsZW1zKSxyZXQ9W107aWYoaXNBcnJheSlmb3IoO2xlbmd0aD5pO2krKyl2YWx1ZT1jYWxsYmFjayhlbGVtc1tpXSxpLGFyZyksbnVsbCE9dmFsdWUmJnJldC5wdXNoKHZhbHVlKTtlbHNlIGZvcihpIGluIGVsZW1zKXZhbHVlPWNhbGxiYWNrKGVsZW1zW2ldLGksYXJnKSxudWxsIT12YWx1ZSYmcmV0LnB1c2godmFsdWUpO3JldHVybiBjb25jYXQuYXBwbHkoW10scmV0KX0sZ3VpZDoxLHByb3h5OmZ1bmN0aW9uKGZuLGNvbnRleHQpe3ZhciB0bXAsYXJncyxwcm94eTtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGNvbnRleHQmJih0bXA9Zm5bY29udGV4dF0sY29udGV4dD1mbixmbj10bXApLGpRdWVyeS5pc0Z1bmN0aW9uKGZuKT8oYXJncz1zbGljZS5jYWxsKGFyZ3VtZW50cywyKSxwcm94eT1mdW5jdGlvbigpe3JldHVybiBmbi5hcHBseShjb250ZXh0fHx0aGlzLGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSkpfSxwcm94eS5ndWlkPWZuLmd1aWQ9Zm4uZ3VpZHx8alF1ZXJ5Lmd1aWQrKyxwcm94eSk6dm9pZCAwfSxub3c6RGF0ZS5ub3csc3VwcG9ydDpzdXBwb3J0fSksalF1ZXJ5LmVhY2goIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IiLnNwbGl0KCIgIiksZnVuY3Rpb24oaSxuYW1lKXtjbGFzczJ0eXBlWyJbb2JqZWN0ICIrbmFtZSsiXSJdPW5hbWUudG9Mb3dlckNhc2UoKX0pO3ZhciBTaXp6bGU9ZnVuY3Rpb24od2luZG93KXtmdW5jdGlvbiBTaXp6bGUoc2VsZWN0b3IsY29udGV4dCxyZXN1bHRzLHNlZWQpe3ZhciBtYXRjaCxlbGVtLG0sbm9kZVR5cGUsaSxncm91cHMsb2xkLG5pZCxuZXdDb250ZXh0LG5ld1NlbGVjdG9yO2lmKChjb250ZXh0P2NvbnRleHQub3duZXJEb2N1bWVudHx8Y29udGV4dDpwcmVmZXJyZWREb2MpIT09ZG9jdW1lbnQmJnNldERvY3VtZW50KGNvbnRleHQpLGNvbnRleHQ9Y29udGV4dHx8ZG9jdW1lbnQscmVzdWx0cz1yZXN1bHRzfHxbXSwhc2VsZWN0b3J8fCJzdHJpbmciIT10eXBlb2Ygc2VsZWN0b3IpcmV0dXJuIHJlc3VsdHM7aWYoMSE9PShub2RlVHlwZT1jb250ZXh0Lm5vZGVUeXBlKSYmOSE9PW5vZGVUeXBlKXJldHVybltdO2lmKGRvY3VtZW50SXNIVE1MJiYhc2VlZCl7aWYobWF0Y2g9cnF1aWNrRXhwci5leGVjKHNlbGVjdG9yKSlpZihtPW1hdGNoWzFdKXtpZig5PT09bm9kZVR5cGUpe2lmKGVsZW09Y29udGV4dC5nZXRFbGVtZW50QnlJZChtKSwhZWxlbXx8IWVsZW0ucGFyZW50Tm9kZSlyZXR1cm4gcmVzdWx0cztpZihlbGVtLmlkPT09bSlyZXR1cm4gcmVzdWx0cy5wdXNoKGVsZW0pLHJlc3VsdHN9ZWxzZSBpZihjb250ZXh0Lm93bmVyRG9jdW1lbnQmJihlbGVtPWNvbnRleHQub3duZXJEb2N1bWVudC5nZXRFbGVtZW50QnlJZChtKSkmJmNvbnRhaW5zKGNvbnRleHQsZWxlbSkmJmVsZW0uaWQ9PT1tKXJldHVybiByZXN1bHRzLnB1c2goZWxlbSkscmVzdWx0c31lbHNle2lmKG1hdGNoWzJdKXJldHVybiBwdXNoLmFwcGx5KHJlc3VsdHMsY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZShzZWxlY3RvcikpLHJlc3VsdHM7aWYoKG09bWF0Y2hbM10pJiZzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSlyZXR1cm4gcHVzaC5hcHBseShyZXN1bHRzLGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShtKSkscmVzdWx0c31pZihzdXBwb3J0LnFzYSYmKCFyYnVnZ3lRU0F8fCFyYnVnZ3lRU0EudGVzdChzZWxlY3RvcikpKXtpZihuaWQ9b2xkPWV4cGFuZG8sbmV3Q29udGV4dD1jb250ZXh0LG5ld1NlbGVjdG9yPTk9PT1ub2RlVHlwZSYmc2VsZWN0b3IsMT09PW5vZGVUeXBlJiYib2JqZWN0IiE9PWNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSl7Zm9yKGdyb3Vwcz10b2tlbml6ZShzZWxlY3RvciksKG9sZD1jb250ZXh0LmdldEF0dHJpYnV0ZSgiaWQiKSk/bmlkPW9sZC5yZXBsYWNlKHJlc2NhcGUsIlxcJCYiKTpjb250ZXh0LnNldEF0dHJpYnV0ZSgiaWQiLG5pZCksbmlkPSJbaWQ9JyIrbmlkKyInXSAiLGk9Z3JvdXBzLmxlbmd0aDtpLS07KWdyb3Vwc1tpXT1uaWQrdG9TZWxlY3Rvcihncm91cHNbaV0pO25ld0NvbnRleHQ9cnNpYmxpbmcudGVzdChzZWxlY3RvcikmJnRlc3RDb250ZXh0KGNvbnRleHQucGFyZW50Tm9kZSl8fGNvbnRleHQsbmV3U2VsZWN0b3I9Z3JvdXBzLmpvaW4oIiwiKX1pZihuZXdTZWxlY3Rvcil0cnl7cmV0dXJuIHB1c2guYXBwbHkocmVzdWx0cyxuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwobmV3U2VsZWN0b3IpKSxyZXN1bHRzfWNhdGNoKHFzYUVycm9yKXt9ZmluYWxseXtvbGR8fGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCJpZCIpfX19cmV0dXJuIHNlbGVjdChzZWxlY3Rvci5yZXBsYWNlKHJ0cmltLCIkMSIpLGNvbnRleHQscmVzdWx0cyxzZWVkKX1mdW5jdGlvbiBjcmVhdGVDYWNoZSgpe2Z1bmN0aW9uIGNhY2hlKGtleSx2YWx1ZSl7cmV0dXJuIGtleXMucHVzaChrZXkrIiAiKT5FeHByLmNhY2hlTGVuZ3RoJiZkZWxldGUgY2FjaGVba2V5cy5zaGlmdCgpXSxjYWNoZVtrZXkrIiAiXT12YWx1ZX12YXIga2V5cz1bXTtyZXR1cm4gY2FjaGV9ZnVuY3Rpb24gbWFya0Z1bmN0aW9uKGZuKXtyZXR1cm4gZm5bZXhwYW5kb109ITAsZm59ZnVuY3Rpb24gYXNzZXJ0KGZuKXt2YXIgZGl2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RyeXtyZXR1cm4hIWZuKGRpdil9Y2F0Y2goZSl7cmV0dXJuITF9ZmluYWxseXtkaXYucGFyZW50Tm9kZSYmZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZGl2KSxkaXY9bnVsbH19ZnVuY3Rpb24gYWRkSGFuZGxlKGF0dHJzLGhhbmRsZXIpe2Zvcih2YXIgYXJyPWF0dHJzLnNwbGl0KCJ8IiksaT1hdHRycy5sZW5ndGg7aS0tOylFeHByLmF0dHJIYW5kbGVbYXJyW2ldXT1oYW5kbGVyfWZ1bmN0aW9uIHNpYmxpbmdDaGVjayhhLGIpe3ZhciBjdXI9YiYmYSxkaWZmPWN1ciYmMT09PWEubm9kZVR5cGUmJjE9PT1iLm5vZGVUeXBlJiYofmIuc291cmNlSW5kZXh8fE1BWF9ORUdBVElWRSktKH5hLnNvdXJjZUluZGV4fHxNQVhfTkVHQVRJVkUpO2lmKGRpZmYpcmV0dXJuIGRpZmY7aWYoY3VyKWZvcig7Y3VyPWN1ci5uZXh0U2libGluZzspaWYoY3VyPT09YilyZXR1cm4tMTtyZXR1cm4gYT8xOi0xfWZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKHR5cGUpe3JldHVybiBmdW5jdGlvbihlbGVtKXt2YXIgbmFtZT1lbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuImlucHV0Ij09PW5hbWUmJmVsZW0udHlwZT09PXR5cGV9fWZ1bmN0aW9uIGNyZWF0ZUJ1dHRvblBzZXVkbyh0eXBlKXtyZXR1cm4gZnVuY3Rpb24oZWxlbSl7dmFyIG5hbWU9ZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybigiaW5wdXQiPT09bmFtZXx8ImJ1dHRvbiI9PT1uYW1lKSYmZWxlbS50eXBlPT09dHlwZX19ZnVuY3Rpb24gY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmbil7cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbihhcmd1bWVudCl7cmV0dXJuIGFyZ3VtZW50PSthcmd1bWVudCxtYXJrRnVuY3Rpb24oZnVuY3Rpb24oc2VlZCxtYXRjaGVzKXtmb3IodmFyIGosbWF0Y2hJbmRleGVzPWZuKFtdLHNlZWQubGVuZ3RoLGFyZ3VtZW50KSxpPW1hdGNoSW5kZXhlcy5sZW5ndGg7aS0tOylzZWVkW2o9bWF0Y2hJbmRleGVzW2ldXSYmKHNlZWRbal09IShtYXRjaGVzW2pdPXNlZWRbal0pKX0pfSl9ZnVuY3Rpb24gdGVzdENvbnRleHQoY29udGV4dCl7cmV0dXJuIGNvbnRleHQmJnR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lIT09c3RydW5kZWZpbmVkJiZjb250ZXh0fWZ1bmN0aW9uIHNldEZpbHRlcnMoKXt9ZnVuY3Rpb24gdG9TZWxlY3Rvcih0b2tlbnMpe2Zvcih2YXIgaT0wLGxlbj10b2tlbnMubGVuZ3RoLHNlbGVjdG9yPSIiO2xlbj5pO2krKylzZWxlY3Rvcis9dG9rZW5zW2ldLnZhbHVlO3JldHVybiBzZWxlY3Rvcn1mdW5jdGlvbiBhZGRDb21iaW5hdG9yKG1hdGNoZXIsY29tYmluYXRvcixiYXNlKXt2YXIgZGlyPWNvbWJpbmF0b3IuZGlyLGNoZWNrTm9uRWxlbWVudHM9YmFzZSYmInBhcmVudE5vZGUiPT09ZGlyLGRvbmVOYW1lPWRvbmUrKztyZXR1cm4gY29tYmluYXRvci5maXJzdD9mdW5jdGlvbihlbGVtLGNvbnRleHQseG1sKXtmb3IoO2VsZW09ZWxlbVtkaXJdOylpZigxPT09ZWxlbS5ub2RlVHlwZXx8Y2hlY2tOb25FbGVtZW50cylyZXR1cm4gbWF0Y2hlcihlbGVtLGNvbnRleHQseG1sKX06ZnVuY3Rpb24oZWxlbSxjb250ZXh0LHhtbCl7dmFyIG9sZENhY2hlLG91dGVyQ2FjaGUsbmV3Q2FjaGU9W2RpcnJ1bnMsZG9uZU5hbWVdO2lmKHhtbCl7Zm9yKDtlbGVtPWVsZW1bZGlyXTspaWYoKDE9PT1lbGVtLm5vZGVUeXBlfHxjaGVja05vbkVsZW1lbnRzKSYmbWF0Y2hlcihlbGVtLGNvbnRleHQseG1sKSlyZXR1cm4hMH1lbHNlIGZvcig7ZWxlbT1lbGVtW2Rpcl07KWlmKDE9PT1lbGVtLm5vZGVUeXBlfHxjaGVja05vbkVsZW1lbnRzKXtpZihvdXRlckNhY2hlPWVsZW1bZXhwYW5kb118fChlbGVtW2V4cGFuZG9dPXt9KSwob2xkQ2FjaGU9b3V0ZXJDYWNoZVtkaXJdKSYmb2xkQ2FjaGVbMF09PT1kaXJydW5zJiZvbGRDYWNoZVsxXT09PWRvbmVOYW1lKXJldHVybiBuZXdDYWNoZVsyXT1vbGRDYWNoZVsyXTtpZihvdXRlckNhY2hlW2Rpcl09bmV3Q2FjaGUsbmV3Q2FjaGVbMl09bWF0Y2hlcihlbGVtLGNvbnRleHQseG1sKSlyZXR1cm4hMH19fWZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKG1hdGNoZXJzKXtyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoPjE/ZnVuY3Rpb24oZWxlbSxjb250ZXh0LHhtbCl7Zm9yKHZhciBpPW1hdGNoZXJzLmxlbmd0aDtpLS07KWlmKCFtYXRjaGVyc1tpXShlbGVtLGNvbnRleHQseG1sKSlyZXR1cm4hMTtyZXR1cm4hMH06bWF0Y2hlcnNbMF19ZnVuY3Rpb24gbXVsdGlwbGVDb250ZXh0cyhzZWxlY3Rvcixjb250ZXh0cyxyZXN1bHRzKXtmb3IodmFyIGk9MCxsZW49Y29udGV4dHMubGVuZ3RoO2xlbj5pO2krKylTaXp6bGUoc2VsZWN0b3IsY29udGV4dHNbaV0scmVzdWx0cyk7cmV0dXJuIHJlc3VsdHN9ZnVuY3Rpb24gY29uZGVuc2UodW5tYXRjaGVkLG1hcCxmaWx0ZXIsY29udGV4dCx4bWwpe2Zvcih2YXIgZWxlbSxuZXdVbm1hdGNoZWQ9W10saT0wLGxlbj11bm1hdGNoZWQubGVuZ3RoLG1hcHBlZD1udWxsIT1tYXA7bGVuPmk7aSsrKShlbGVtPXVubWF0Y2hlZFtpXSkmJighZmlsdGVyfHxmaWx0ZXIoZWxlbSxjb250ZXh0LHhtbCkpJiYobmV3VW5tYXRjaGVkLnB1c2goZWxlbSksbWFwcGVkJiZtYXAucHVzaChpKSk7cmV0dXJuIG5ld1VubWF0Y2hlZH1mdW5jdGlvbiBzZXRNYXRjaGVyKHByZUZpbHRlcixzZWxlY3RvcixtYXRjaGVyLHBvc3RGaWx0ZXIscG9zdEZpbmRlcixwb3N0U2VsZWN0b3Ipe3JldHVybiBwb3N0RmlsdGVyJiYhcG9zdEZpbHRlcltleHBhbmRvXSYmKHBvc3RGaWx0ZXI9c2V0TWF0Y2hlcihwb3N0RmlsdGVyKSkscG9zdEZpbmRlciYmIXBvc3RGaW5kZXJbZXhwYW5kb10mJihwb3N0RmluZGVyPXNldE1hdGNoZXIocG9zdEZpbmRlcixwb3N0U2VsZWN0b3IpKSxtYXJrRnVuY3Rpb24oZnVuY3Rpb24oc2VlZCxyZXN1bHRzLGNvbnRleHQseG1sKXt2YXIgdGVtcCxpLGVsZW0scHJlTWFwPVtdLHBvc3RNYXA9W10scHJlZXhpc3Rpbmc9cmVzdWx0cy5sZW5ndGgsZWxlbXM9c2VlZHx8bXVsdGlwbGVDb250ZXh0cyhzZWxlY3Rvcnx8IioiLGNvbnRleHQubm9kZVR5cGU/W2NvbnRleHRdOmNvbnRleHQsW10pLG1hdGNoZXJJbj0hcHJlRmlsdGVyfHwhc2VlZCYmc2VsZWN0b3I/ZWxlbXM6Y29uZGVuc2UoZWxlbXMscHJlTWFwLHByZUZpbHRlcixjb250ZXh0LHhtbCksbWF0Y2hlck91dD1tYXRjaGVyP3Bvc3RGaW5kZXJ8fChzZWVkP3ByZUZpbHRlcjpwcmVleGlzdGluZ3x8cG9zdEZpbHRlcik/W106cmVzdWx0czptYXRjaGVySW47aWYobWF0Y2hlciYmbWF0Y2hlcihtYXRjaGVySW4sbWF0Y2hlck91dCxjb250ZXh0LHhtbCkscG9zdEZpbHRlcilmb3IodGVtcD1jb25kZW5zZShtYXRjaGVyT3V0LHBvc3RNYXApLHBvc3RGaWx0ZXIodGVtcCxbXSxjb250ZXh0LHhtbCksaT10ZW1wLmxlbmd0aDtpLS07KShlbGVtPXRlbXBbaV0pJiYobWF0Y2hlck91dFtwb3N0TWFwW2ldXT0hKG1hdGNoZXJJbltwb3N0TWFwW2ldXT1lbGVtKSk7aWYoc2VlZCl7aWYocG9zdEZpbmRlcnx8cHJlRmlsdGVyKXtpZihwb3N0RmluZGVyKXtmb3IodGVtcD1bXSxpPW1hdGNoZXJPdXQubGVuZ3RoO2ktLTspKGVsZW09bWF0Y2hlck91dFtpXSkmJnRlbXAucHVzaChtYXRjaGVySW5baV09ZWxlbSk7cG9zdEZpbmRlcihudWxsLG1hdGNoZXJPdXQ9W10sdGVtcCx4bWwpfWZvcihpPW1hdGNoZXJPdXQubGVuZ3RoO2ktLTspKGVsZW09bWF0Y2hlck91dFtpXSkmJih0ZW1wPXBvc3RGaW5kZXI/aW5kZXhPZi5jYWxsKHNlZWQsZWxlbSk6cHJlTWFwW2ldKT4tMSYmKHNlZWRbdGVtcF09IShyZXN1bHRzW3RlbXBdPWVsZW0pKX19ZWxzZSBtYXRjaGVyT3V0PWNvbmRlbnNlKG1hdGNoZXJPdXQ9PT1yZXN1bHRzP21hdGNoZXJPdXQuc3BsaWNlKHByZWV4aXN0aW5nLG1hdGNoZXJPdXQubGVuZ3RoKTptYXRjaGVyT3V0KSxwb3N0RmluZGVyP3Bvc3RGaW5kZXIobnVsbCxyZXN1bHRzLG1hdGNoZXJPdXQseG1sKTpwdXNoLmFwcGx5KHJlc3VsdHMsbWF0Y2hlck91dCl9KX1mdW5jdGlvbiBtYXRjaGVyRnJvbVRva2Vucyh0b2tlbnMpe2Zvcih2YXIgY2hlY2tDb250ZXh0LG1hdGNoZXIsaixsZW49dG9rZW5zLmxlbmd0aCxsZWFkaW5nUmVsYXRpdmU9RXhwci5yZWxhdGl2ZVt0b2tlbnNbMF0udHlwZV0saW1wbGljaXRSZWxhdGl2ZT1sZWFkaW5nUmVsYXRpdmV8fEV4cHIucmVsYXRpdmVbIiAiXSxpPWxlYWRpbmdSZWxhdGl2ZT8xOjAsbWF0Y2hDb250ZXh0PWFkZENvbWJpbmF0b3IoZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW09PT1jaGVja0NvbnRleHR9LGltcGxpY2l0UmVsYXRpdmUsITApLG1hdGNoQW55Q29udGV4dD1hZGRDb21iaW5hdG9yKGZ1bmN0aW9uKGVsZW0pe3JldHVybiBpbmRleE9mLmNhbGwoY2hlY2tDb250ZXh0LGVsZW0pPi0xfSxpbXBsaWNpdFJlbGF0aXZlLCEwKSxtYXRjaGVycz1bZnVuY3Rpb24oZWxlbSxjb250ZXh0LHhtbCl7cmV0dXJuIWxlYWRpbmdSZWxhdGl2ZSYmKHhtbHx8Y29udGV4dCE9PW91dGVybW9zdENvbnRleHQpfHwoKGNoZWNrQ29udGV4dD1jb250ZXh0KS5ub2RlVHlwZT9tYXRjaENvbnRleHQoZWxlbSxjb250ZXh0LHhtbCk6bWF0Y2hBbnlDb250ZXh0KGVsZW0sY29udGV4dCx4bWwpKX1dO2xlbj5pO2krKylpZihtYXRjaGVyPUV4cHIucmVsYXRpdmVbdG9rZW5zW2ldLnR5cGVdKW1hdGNoZXJzPVthZGRDb21iaW5hdG9yKGVsZW1lbnRNYXRjaGVyKG1hdGNoZXJzKSxtYXRjaGVyKV07ZWxzZXtpZihtYXRjaGVyPUV4cHIuZmlsdGVyW3Rva2Vuc1tpXS50eXBlXS5hcHBseShudWxsLHRva2Vuc1tpXS5tYXRjaGVzKSxtYXRjaGVyW2V4cGFuZG9dKXtmb3Ioaj0rK2k7bGVuPmomJiFFeHByLnJlbGF0aXZlW3Rva2Vuc1tqXS50eXBlXTtqKyspO3JldHVybiBzZXRNYXRjaGVyKGk+MSYmZWxlbWVudE1hdGNoZXIobWF0Y2hlcnMpLGk+MSYmdG9TZWxlY3Rvcih0b2tlbnMuc2xpY2UoMCxpLTEpLmNvbmNhdCh7dmFsdWU6IiAiPT09dG9rZW5zW2ktMl0udHlwZT8iKiI6IiJ9KSkucmVwbGFjZShydHJpbSwiJDEiKSxtYXRjaGVyLGo+aSYmbWF0Y2hlckZyb21Ub2tlbnModG9rZW5zLnNsaWNlKGksaikpLGxlbj5qJiZtYXRjaGVyRnJvbVRva2Vucyh0b2tlbnM9dG9rZW5zLnNsaWNlKGopKSxsZW4+aiYmdG9TZWxlY3Rvcih0b2tlbnMpKX1tYXRjaGVycy5wdXNoKG1hdGNoZXIpfXJldHVybiBlbGVtZW50TWF0Y2hlcihtYXRjaGVycyl9ZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKGVsZW1lbnRNYXRjaGVycyxzZXRNYXRjaGVycyl7dmFyIGJ5U2V0PXNldE1hdGNoZXJzLmxlbmd0aD4wLGJ5RWxlbWVudD1lbGVtZW50TWF0Y2hlcnMubGVuZ3RoPjAsc3VwZXJNYXRjaGVyPWZ1bmN0aW9uKHNlZWQsY29udGV4dCx4bWwscmVzdWx0cyxvdXRlcm1vc3Qpe3ZhciBlbGVtLGosbWF0Y2hlcixtYXRjaGVkQ291bnQ9MCxpPSIwIix1bm1hdGNoZWQ9c2VlZCYmW10sc2V0TWF0Y2hlZD1bXSxjb250ZXh0QmFja3VwPW91dGVybW9zdENvbnRleHQsZWxlbXM9c2VlZHx8YnlFbGVtZW50JiZFeHByLmZpbmQuVEFHKCIqIixvdXRlcm1vc3QpLGRpcnJ1bnNVbmlxdWU9ZGlycnVucys9bnVsbD09Y29udGV4dEJhY2t1cD8xOk1hdGgucmFuZG9tKCl8fC4xLGxlbj1lbGVtcy5sZW5ndGg7Zm9yKG91dGVybW9zdCYmKG91dGVybW9zdENvbnRleHQ9Y29udGV4dCE9PWRvY3VtZW50JiZjb250ZXh0KTtpIT09bGVuJiZudWxsIT0oZWxlbT1lbGVtc1tpXSk7aSsrKXtpZihieUVsZW1lbnQmJmVsZW0pe2ZvcihqPTA7bWF0Y2hlcj1lbGVtZW50TWF0Y2hlcnNbaisrXTspaWYobWF0Y2hlcihlbGVtLGNvbnRleHQseG1sKSl7cmVzdWx0cy5wdXNoKGVsZW0pO2JyZWFrfW91dGVybW9zdCYmKGRpcnJ1bnM9ZGlycnVuc1VuaXF1ZSl9YnlTZXQmJigoZWxlbT0hbWF0Y2hlciYmZWxlbSkmJm1hdGNoZWRDb3VudC0tLHNlZWQmJnVubWF0Y2hlZC5wdXNoKGVsZW0pKX1pZihtYXRjaGVkQ291bnQrPWksYnlTZXQmJmkhPT1tYXRjaGVkQ291bnQpe2ZvcihqPTA7bWF0Y2hlcj1zZXRNYXRjaGVyc1tqKytdOyltYXRjaGVyKHVubWF0Y2hlZCxzZXRNYXRjaGVkLGNvbnRleHQseG1sKTtpZihzZWVkKXtpZihtYXRjaGVkQ291bnQ+MClmb3IoO2ktLTspdW5tYXRjaGVkW2ldfHxzZXRNYXRjaGVkW2ldfHwoc2V0TWF0Y2hlZFtpXT1wb3AuY2FsbChyZXN1bHRzKSk7c2V0TWF0Y2hlZD1jb25kZW5zZShzZXRNYXRjaGVkKX1wdXNoLmFwcGx5KHJlc3VsdHMsc2V0TWF0Y2hlZCksb3V0ZXJtb3N0JiYhc2VlZCYmc2V0TWF0Y2hlZC5sZW5ndGg+MCYmbWF0Y2hlZENvdW50K3NldE1hdGNoZXJzLmxlbmd0aD4xJiZTaXp6bGUudW5pcXVlU29ydChyZXN1bHRzKX1yZXR1cm4gb3V0ZXJtb3N0JiYoZGlycnVucz1kaXJydW5zVW5pcXVlLG91dGVybW9zdENvbnRleHQ9Y29udGV4dEJhY2t1cCksdW5tYXRjaGVkfTtyZXR1cm4gYnlTZXQ/bWFya0Z1bmN0aW9uKHN1cGVyTWF0Y2hlcik6c3VwZXJNYXRjaGVyfXZhciBpLHN1cHBvcnQsRXhwcixnZXRUZXh0LGlzWE1MLHRva2VuaXplLGNvbXBpbGUsc2VsZWN0LG91dGVybW9zdENvbnRleHQsc29ydElucHV0LGhhc0R1cGxpY2F0ZSxzZXREb2N1bWVudCxkb2N1bWVudCxkb2NFbGVtLGRvY3VtZW50SXNIVE1MLHJidWdneVFTQSxyYnVnZ3lNYXRjaGVzLG1hdGNoZXMsY29udGFpbnMsZXhwYW5kbz0ic2l6emxlIistbmV3IERhdGUscHJlZmVycmVkRG9jPXdpbmRvdy5kb2N1bWVudCxkaXJydW5zPTAsZG9uZT0wLGNsYXNzQ2FjaGU9Y3JlYXRlQ2FjaGUoKSx0b2tlbkNhY2hlPWNyZWF0ZUNhY2hlKCksY29tcGlsZXJDYWNoZT1jcmVhdGVDYWNoZSgpLHNvcnRPcmRlcj1mdW5jdGlvbihhLGIpe3JldHVybiBhPT09YiYmKGhhc0R1cGxpY2F0ZT0hMCksMH0sc3RydW5kZWZpbmVkPSJ1bmRlZmluZWQiLE1BWF9ORUdBVElWRT0xPDwzMSxoYXNPd249e30uaGFzT3duUHJvcGVydHksYXJyPVtdLHBvcD1hcnIucG9wLHB1c2hfbmF0aXZlPWFyci5wdXNoLHB1c2g9YXJyLnB1c2gsc2xpY2U9YXJyLnNsaWNlLGluZGV4T2Y9YXJyLmluZGV4T2Z8fGZ1bmN0aW9uKGVsZW0pe2Zvcih2YXIgaT0wLGxlbj10aGlzLmxlbmd0aDtsZW4+aTtpKyspaWYodGhpc1tpXT09PWVsZW0pcmV0dXJuIGk7cmV0dXJuLTF9LGJvb2xlYW5zPSJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZCIsd2hpdGVzcGFjZT0iW1xceDIwXFx0XFxyXFxuXFxmXSIsY2hhcmFjdGVyRW5jb2Rpbmc9Iig/OlxcXFwufFtcXHctXXxbXlxceDAwLVxceGEwXSkrIixpZGVudGlmaWVyPWNoYXJhY3RlckVuY29kaW5nLnJlcGxhY2UoInciLCJ3IyIpLGF0dHJpYnV0ZXM9IlxcWyIrd2hpdGVzcGFjZSsiKigiK2NoYXJhY3RlckVuY29kaW5nKyIpKD86Iit3aGl0ZXNwYWNlKyIqKFsqXiR8IX5dPz0pIit3aGl0ZXNwYWNlKyIqKD86JygoPzpcXFxcLnxbXlxcXFwnXSkqKSd8XCIoKD86XFxcXC58W15cXFxcXCJdKSopXCJ8KCIraWRlbnRpZmllcisiKSl8KSIrd2hpdGVzcGFjZSsiKlxcXSIscHNldWRvcz0iOigiK2NoYXJhY3RlckVuY29kaW5nKyIpKD86XFwoKCgnKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcIil8KCg/OlxcXFwufFteXFxcXCgpW1xcXV18IithdHRyaWJ1dGVzKyIpKil8LiopXFwpfCkiLHJ0cmltPW5ldyBSZWdFeHAoIl4iK3doaXRlc3BhY2UrIit8KCg/Ol58W15cXFxcXSkoPzpcXFxcLikqKSIrd2hpdGVzcGFjZSsiKyQiLCJnIikscmNvbW1hPW5ldyBSZWdFeHAoIl4iK3doaXRlc3BhY2UrIiosIit3aGl0ZXNwYWNlKyIqIikscmNvbWJpbmF0b3JzPW5ldyBSZWdFeHAoIl4iK3doaXRlc3BhY2UrIiooWz4rfl18Iit3aGl0ZXNwYWNlKyIpIit3aGl0ZXNwYWNlKyIqIikscmF0dHJpYnV0ZVF1b3Rlcz1uZXcgUmVnRXhwKCI9Iit3aGl0ZXNwYWNlKyIqKFteXFxdJ1wiXSo/KSIrd2hpdGVzcGFjZSsiKlxcXSIsImciKSxycHNldWRvPW5ldyBSZWdFeHAocHNldWRvcykscmlkZW50aWZpZXI9bmV3IFJlZ0V4cCgiXiIraWRlbnRpZmllcisiJCIpLG1hdGNoRXhwcj17SUQ6bmV3IFJlZ0V4cCgiXiMoIitjaGFyYWN0ZXJFbmNvZGluZysiKSIpLENMQVNTOm5ldyBSZWdFeHAoIl5cXC4oIitjaGFyYWN0ZXJFbmNvZGluZysiKSIpLFRBRzpuZXcgUmVnRXhwKCJeKCIrY2hhcmFjdGVyRW5jb2RpbmcucmVwbGFjZSgidyIsIncqIikrIikiKSxBVFRSOm5ldyBSZWdFeHAoIl4iK2F0dHJpYnV0ZXMpLFBTRVVETzpuZXcgUmVnRXhwKCJeIitwc2V1ZG9zKSxDSElMRDpuZXcgUmVnRXhwKCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXCgiK3doaXRlc3BhY2UrIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK3doaXRlc3BhY2UrIiooPzooWystXXwpIit3aGl0ZXNwYWNlKyIqKFxcZCspfCkpIit3aGl0ZXNwYWNlKyIqXFwpfCkiLCJpIiksYm9vbDpuZXcgUmVnRXhwKCJeKD86Iitib29sZWFucysiKSQiLCJpIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoIl4iK3doaXRlc3BhY2UrIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcKCIrd2hpdGVzcGFjZSsiKigoPzotXFxkKT9cXGQqKSIrd2hpdGVzcGFjZSsiKlxcKXwpKD89W14tXXwkKSIsImkiKX0scmlucHV0cz0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLHJoZWFkZXI9L15oXGQkL2kscm5hdGl2ZT0vXltee10rXHtccypcW25hdGl2ZSBcdy8scnF1aWNrRXhwcj0vXig/OiMoW1x3LV0rKXwoXHcrKXxcLihbXHctXSspKSQvLHJzaWJsaW5nPS9bK35dLyxyZXNjYXBlPS8nfFxcL2cscnVuZXNjYXBlPW5ldyBSZWdFeHAoIlxcXFwoW1xcZGEtZl17MSw2fSIrd2hpdGVzcGFjZSsiP3woIit3aGl0ZXNwYWNlKyIpfC4pIiwiaWciKSxmdW5lc2NhcGU9ZnVuY3Rpb24oXyxlc2NhcGVkLGVzY2FwZWRXaGl0ZXNwYWNlKXt2YXIgaGlnaD0iMHgiK2VzY2FwZWQtNjU1MzY7CnJldHVybiBoaWdoIT09aGlnaHx8ZXNjYXBlZFdoaXRlc3BhY2U/ZXNjYXBlZDowPmhpZ2g/U3RyaW5nLmZyb21DaGFyQ29kZShoaWdoKzY1NTM2KTpTdHJpbmcuZnJvbUNoYXJDb2RlKGhpZ2g+PjEwfDU1Mjk2LDEwMjMmaGlnaHw1NjMyMCl9O3RyeXtwdXNoLmFwcGx5KGFycj1zbGljZS5jYWxsKHByZWZlcnJlZERvYy5jaGlsZE5vZGVzKSxwcmVmZXJyZWREb2MuY2hpbGROb2RlcyksYXJyW3ByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aF0ubm9kZVR5cGV9Y2F0Y2goZSl7cHVzaD17YXBwbHk6YXJyLmxlbmd0aD9mdW5jdGlvbih0YXJnZXQsZWxzKXtwdXNoX25hdGl2ZS5hcHBseSh0YXJnZXQsc2xpY2UuY2FsbChlbHMpKX06ZnVuY3Rpb24odGFyZ2V0LGVscyl7Zm9yKHZhciBqPXRhcmdldC5sZW5ndGgsaT0wO3RhcmdldFtqKytdPWVsc1tpKytdOyk7dGFyZ2V0Lmxlbmd0aD1qLTF9fX1zdXBwb3J0PVNpenpsZS5zdXBwb3J0PXt9LGlzWE1MPVNpenpsZS5pc1hNTD1mdW5jdGlvbihlbGVtKXt2YXIgZG9jdW1lbnRFbGVtZW50PWVsZW0mJihlbGVtLm93bmVyRG9jdW1lbnR8fGVsZW0pLmRvY3VtZW50RWxlbWVudDtyZXR1cm4gZG9jdW1lbnRFbGVtZW50PyJIVE1MIiE9PWRvY3VtZW50RWxlbWVudC5ub2RlTmFtZTohMX0sc2V0RG9jdW1lbnQ9U2l6emxlLnNldERvY3VtZW50PWZ1bmN0aW9uKG5vZGUpe3ZhciBoYXNDb21wYXJlLGRvYz1ub2RlP25vZGUub3duZXJEb2N1bWVudHx8bm9kZTpwcmVmZXJyZWREb2MscGFyZW50PWRvYy5kZWZhdWx0VmlldztyZXR1cm4gZG9jIT09ZG9jdW1lbnQmJjk9PT1kb2Mubm9kZVR5cGUmJmRvYy5kb2N1bWVudEVsZW1lbnQ/KGRvY3VtZW50PWRvYyxkb2NFbGVtPWRvYy5kb2N1bWVudEVsZW1lbnQsZG9jdW1lbnRJc0hUTUw9IWlzWE1MKGRvYykscGFyZW50JiZwYXJlbnQhPT1wYXJlbnQudG9wJiYocGFyZW50LmFkZEV2ZW50TGlzdGVuZXI/cGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoInVubG9hZCIsZnVuY3Rpb24oKXtzZXREb2N1bWVudCgpfSwhMSk6cGFyZW50LmF0dGFjaEV2ZW50JiZwYXJlbnQuYXR0YWNoRXZlbnQoIm9udW5sb2FkIixmdW5jdGlvbigpe3NldERvY3VtZW50KCl9KSksc3VwcG9ydC5hdHRyaWJ1dGVzPWFzc2VydChmdW5jdGlvbihkaXYpe3JldHVybiBkaXYuY2xhc3NOYW1lPSJpIiwhZGl2LmdldEF0dHJpYnV0ZSgiY2xhc3NOYW1lIil9KSxzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lPWFzc2VydChmdW5jdGlvbihkaXYpe3JldHVybiBkaXYuYXBwZW5kQ2hpbGQoZG9jLmNyZWF0ZUNvbW1lbnQoIiIpKSwhZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RofSksc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lPXJuYXRpdmUudGVzdChkb2MuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSkmJmFzc2VydChmdW5jdGlvbihkaXYpe3JldHVybiBkaXYuaW5uZXJIVE1MPSI8ZGl2IGNsYXNzPSdhJz48L2Rpdj48ZGl2IGNsYXNzPSdhIGknPjwvZGl2PiIsZGl2LmZpcnN0Q2hpbGQuY2xhc3NOYW1lPSJpIiwyPT09ZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImkiKS5sZW5ndGh9KSxzdXBwb3J0LmdldEJ5SWQ9YXNzZXJ0KGZ1bmN0aW9uKGRpdil7cmV0dXJuIGRvY0VsZW0uYXBwZW5kQ2hpbGQoZGl2KS5pZD1leHBhbmRvLCFkb2MuZ2V0RWxlbWVudHNCeU5hbWV8fCFkb2MuZ2V0RWxlbWVudHNCeU5hbWUoZXhwYW5kbykubGVuZ3RofSksc3VwcG9ydC5nZXRCeUlkPyhFeHByLmZpbmQuSUQ9ZnVuY3Rpb24oaWQsY29udGV4dCl7aWYodHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQhPT1zdHJ1bmRlZmluZWQmJmRvY3VtZW50SXNIVE1MKXt2YXIgbT1jb250ZXh0LmdldEVsZW1lbnRCeUlkKGlkKTtyZXR1cm4gbSYmbS5wYXJlbnROb2RlP1ttXTpbXX19LEV4cHIuZmlsdGVyLklEPWZ1bmN0aW9uKGlkKXt2YXIgYXR0cklkPWlkLnJlcGxhY2UocnVuZXNjYXBlLGZ1bmVzY2FwZSk7cmV0dXJuIGZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLmdldEF0dHJpYnV0ZSgiaWQiKT09PWF0dHJJZH19KTooZGVsZXRlIEV4cHIuZmluZC5JRCxFeHByLmZpbHRlci5JRD1mdW5jdGlvbihpZCl7dmFyIGF0dHJJZD1pZC5yZXBsYWNlKHJ1bmVzY2FwZSxmdW5lc2NhcGUpO3JldHVybiBmdW5jdGlvbihlbGVtKXt2YXIgbm9kZT10eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlIT09c3RydW5kZWZpbmVkJiZlbGVtLmdldEF0dHJpYnV0ZU5vZGUoImlkIik7cmV0dXJuIG5vZGUmJm5vZGUudmFsdWU9PT1hdHRySWR9fSksRXhwci5maW5kLlRBRz1zdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lP2Z1bmN0aW9uKHRhZyxjb250ZXh0KXtyZXR1cm4gdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPT1zdHJ1bmRlZmluZWQ/Y29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWcpOnZvaWQgMH06ZnVuY3Rpb24odGFnLGNvbnRleHQpe3ZhciBlbGVtLHRtcD1bXSxpPTAscmVzdWx0cz1jb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZyk7aWYoIioiPT09dGFnKXtmb3IoO2VsZW09cmVzdWx0c1tpKytdOykxPT09ZWxlbS5ub2RlVHlwZSYmdG1wLnB1c2goZWxlbSk7cmV0dXJuIHRtcH1yZXR1cm4gcmVzdWx0c30sRXhwci5maW5kLkNMQVNTPXN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmZnVuY3Rpb24oY2xhc3NOYW1lLGNvbnRleHQpe3JldHVybiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lIT09c3RydW5kZWZpbmVkJiZkb2N1bWVudElzSFRNTD9jb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKTp2b2lkIDB9LHJidWdneU1hdGNoZXM9W10scmJ1Z2d5UVNBPVtdLChzdXBwb3J0LnFzYT1ybmF0aXZlLnRlc3QoZG9jLnF1ZXJ5U2VsZWN0b3JBbGwpKSYmKGFzc2VydChmdW5jdGlvbihkaXYpe2Rpdi5pbm5lckhUTUw9IjxzZWxlY3QgbXNhbGxvd2NsaXA9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD4iLGRpdi5xdWVyeVNlbGVjdG9yQWxsKCJbbXNhbGxvd2NsaXBePScnXSIpLmxlbmd0aCYmcmJ1Z2d5UVNBLnB1c2goIlsqXiRdPSIrd2hpdGVzcGFjZSsiKig/OicnfFwiXCIpIiksZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIltzZWxlY3RlZF0iKS5sZW5ndGh8fHJidWdneVFTQS5wdXNoKCJcXFsiK3doaXRlc3BhY2UrIiooPzp2YWx1ZXwiK2Jvb2xlYW5zKyIpIiksZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIjpjaGVja2VkIikubGVuZ3RofHxyYnVnZ3lRU0EucHVzaCgiOmNoZWNrZWQiKX0pLGFzc2VydChmdW5jdGlvbihkaXYpe3ZhciBpbnB1dD1kb2MuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtpbnB1dC5zZXRBdHRyaWJ1dGUoInR5cGUiLCJoaWRkZW4iKSxkaXYuYXBwZW5kQ2hpbGQoaW5wdXQpLnNldEF0dHJpYnV0ZSgibmFtZSIsIkQiKSxkaXYucXVlcnlTZWxlY3RvckFsbCgiW25hbWU9ZF0iKS5sZW5ndGgmJnJidWdneVFTQS5wdXNoKCJuYW1lIit3aGl0ZXNwYWNlKyIqWypeJHwhfl0/PSIpLGRpdi5xdWVyeVNlbGVjdG9yQWxsKCI6ZW5hYmxlZCIpLmxlbmd0aHx8cmJ1Z2d5UVNBLnB1c2goIjplbmFibGVkIiwiOmRpc2FibGVkIiksZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIiosOngiKSxyYnVnZ3lRU0EucHVzaCgiLC4qOiIpfSkpLChzdXBwb3J0Lm1hdGNoZXNTZWxlY3Rvcj1ybmF0aXZlLnRlc3QobWF0Y2hlcz1kb2NFbGVtLm1hdGNoZXN8fGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3Rvcnx8ZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yfHxkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSkmJmFzc2VydChmdW5jdGlvbihkaXYpe3N1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2g9bWF0Y2hlcy5jYWxsKGRpdiwiZGl2IiksbWF0Y2hlcy5jYWxsKGRpdiwiW3MhPScnXTp4IikscmJ1Z2d5TWF0Y2hlcy5wdXNoKCIhPSIscHNldWRvcyl9KSxyYnVnZ3lRU0E9cmJ1Z2d5UVNBLmxlbmd0aCYmbmV3IFJlZ0V4cChyYnVnZ3lRU0Euam9pbigifCIpKSxyYnVnZ3lNYXRjaGVzPXJidWdneU1hdGNoZXMubGVuZ3RoJiZuZXcgUmVnRXhwKHJidWdneU1hdGNoZXMuam9pbigifCIpKSxoYXNDb21wYXJlPXJuYXRpdmUudGVzdChkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSxjb250YWlucz1oYXNDb21wYXJlfHxybmF0aXZlLnRlc3QoZG9jRWxlbS5jb250YWlucyk/ZnVuY3Rpb24oYSxiKXt2YXIgYWRvd249OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YSxidXA9YiYmYi5wYXJlbnROb2RlO3JldHVybiBhPT09YnVwfHwhKCFidXB8fDEhPT1idXAubm9kZVR5cGV8fCEoYWRvd24uY29udGFpbnM/YWRvd24uY29udGFpbnMoYnVwKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGJ1cCkpKX06ZnVuY3Rpb24oYSxiKXtpZihiKWZvcig7Yj1iLnBhcmVudE5vZGU7KWlmKGI9PT1hKXJldHVybiEwO3JldHVybiExfSxzb3J0T3JkZXI9aGFzQ29tcGFyZT9mdW5jdGlvbihhLGIpe2lmKGE9PT1iKXJldHVybiBoYXNEdXBsaWNhdGU9ITAsMDt2YXIgY29tcGFyZT0hYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gY29tcGFyZT9jb21wYXJlOihjb21wYXJlPShhLm93bmVyRG9jdW1lbnR8fGEpPT09KGIub3duZXJEb2N1bWVudHx8Yik/YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKToxLDEmY29tcGFyZXx8IXN1cHBvcnQuc29ydERldGFjaGVkJiZiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGEpPT09Y29tcGFyZT9hPT09ZG9jfHxhLm93bmVyRG9jdW1lbnQ9PT1wcmVmZXJyZWREb2MmJmNvbnRhaW5zKHByZWZlcnJlZERvYyxhKT8tMTpiPT09ZG9jfHxiLm93bmVyRG9jdW1lbnQ9PT1wcmVmZXJyZWREb2MmJmNvbnRhaW5zKHByZWZlcnJlZERvYyxiKT8xOnNvcnRJbnB1dD9pbmRleE9mLmNhbGwoc29ydElucHV0LGEpLWluZGV4T2YuY2FsbChzb3J0SW5wdXQsYik6MDo0JmNvbXBhcmU/LTE6MSl9OmZ1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGhhc0R1cGxpY2F0ZT0hMCwwO3ZhciBjdXIsaT0wLGF1cD1hLnBhcmVudE5vZGUsYnVwPWIucGFyZW50Tm9kZSxhcD1bYV0sYnA9W2JdO2lmKCFhdXB8fCFidXApcmV0dXJuIGE9PT1kb2M/LTE6Yj09PWRvYz8xOmF1cD8tMTpidXA/MTpzb3J0SW5wdXQ/aW5kZXhPZi5jYWxsKHNvcnRJbnB1dCxhKS1pbmRleE9mLmNhbGwoc29ydElucHV0LGIpOjA7aWYoYXVwPT09YnVwKXJldHVybiBzaWJsaW5nQ2hlY2soYSxiKTtmb3IoY3VyPWE7Y3VyPWN1ci5wYXJlbnROb2RlOylhcC51bnNoaWZ0KGN1cik7Zm9yKGN1cj1iO2N1cj1jdXIucGFyZW50Tm9kZTspYnAudW5zaGlmdChjdXIpO2Zvcig7YXBbaV09PT1icFtpXTspaSsrO3JldHVybiBpP3NpYmxpbmdDaGVjayhhcFtpXSxicFtpXSk6YXBbaV09PT1wcmVmZXJyZWREb2M/LTE6YnBbaV09PT1wcmVmZXJyZWREb2M/MTowfSxkb2MpOmRvY3VtZW50fSxTaXp6bGUubWF0Y2hlcz1mdW5jdGlvbihleHByLGVsZW1lbnRzKXtyZXR1cm4gU2l6emxlKGV4cHIsbnVsbCxudWxsLGVsZW1lbnRzKX0sU2l6emxlLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihlbGVtLGV4cHIpe2lmKChlbGVtLm93bmVyRG9jdW1lbnR8fGVsZW0pIT09ZG9jdW1lbnQmJnNldERvY3VtZW50KGVsZW0pLGV4cHI9ZXhwci5yZXBsYWNlKHJhdHRyaWJ1dGVRdW90ZXMsIj0nJDEnXSIpLCEoIXN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yfHwhZG9jdW1lbnRJc0hUTUx8fHJidWdneU1hdGNoZXMmJnJidWdneU1hdGNoZXMudGVzdChleHByKXx8cmJ1Z2d5UVNBJiZyYnVnZ3lRU0EudGVzdChleHByKSkpdHJ5e3ZhciByZXQ9bWF0Y2hlcy5jYWxsKGVsZW0sZXhwcik7aWYocmV0fHxzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNofHxlbGVtLmRvY3VtZW50JiYxMSE9PWVsZW0uZG9jdW1lbnQubm9kZVR5cGUpcmV0dXJuIHJldH1jYXRjaChlKXt9cmV0dXJuIFNpenpsZShleHByLGRvY3VtZW50LG51bGwsW2VsZW1dKS5sZW5ndGg+MH0sU2l6emxlLmNvbnRhaW5zPWZ1bmN0aW9uKGNvbnRleHQsZWxlbSl7cmV0dXJuKGNvbnRleHQub3duZXJEb2N1bWVudHx8Y29udGV4dCkhPT1kb2N1bWVudCYmc2V0RG9jdW1lbnQoY29udGV4dCksY29udGFpbnMoY29udGV4dCxlbGVtKX0sU2l6emxlLmF0dHI9ZnVuY3Rpb24oZWxlbSxuYW1lKXsoZWxlbS5vd25lckRvY3VtZW50fHxlbGVtKSE9PWRvY3VtZW50JiZzZXREb2N1bWVudChlbGVtKTt2YXIgZm49RXhwci5hdHRySGFuZGxlW25hbWUudG9Mb3dlckNhc2UoKV0sdmFsPWZuJiZoYXNPd24uY2FsbChFeHByLmF0dHJIYW5kbGUsbmFtZS50b0xvd2VyQ2FzZSgpKT9mbihlbGVtLG5hbWUsIWRvY3VtZW50SXNIVE1MKTp2b2lkIDA7cmV0dXJuIHZvaWQgMCE9PXZhbD92YWw6c3VwcG9ydC5hdHRyaWJ1dGVzfHwhZG9jdW1lbnRJc0hUTUw/ZWxlbS5nZXRBdHRyaWJ1dGUobmFtZSk6KHZhbD1lbGVtLmdldEF0dHJpYnV0ZU5vZGUobmFtZSkpJiZ2YWwuc3BlY2lmaWVkP3ZhbC52YWx1ZTpudWxsfSxTaXp6bGUuZXJyb3I9ZnVuY3Rpb24obXNnKXt0aHJvdyBuZXcgRXJyb3IoIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246ICIrbXNnKX0sU2l6emxlLnVuaXF1ZVNvcnQ9ZnVuY3Rpb24ocmVzdWx0cyl7dmFyIGVsZW0sZHVwbGljYXRlcz1bXSxqPTAsaT0wO2lmKGhhc0R1cGxpY2F0ZT0hc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzLHNvcnRJbnB1dD0hc3VwcG9ydC5zb3J0U3RhYmxlJiZyZXN1bHRzLnNsaWNlKDApLHJlc3VsdHMuc29ydChzb3J0T3JkZXIpLGhhc0R1cGxpY2F0ZSl7Zm9yKDtlbGVtPXJlc3VsdHNbaSsrXTspZWxlbT09PXJlc3VsdHNbaV0mJihqPWR1cGxpY2F0ZXMucHVzaChpKSk7Zm9yKDtqLS07KXJlc3VsdHMuc3BsaWNlKGR1cGxpY2F0ZXNbal0sMSl9cmV0dXJuIHNvcnRJbnB1dD1udWxsLHJlc3VsdHN9LGdldFRleHQ9U2l6emxlLmdldFRleHQ9ZnVuY3Rpb24oZWxlbSl7dmFyIG5vZGUscmV0PSIiLGk9MCxub2RlVHlwZT1lbGVtLm5vZGVUeXBlO2lmKG5vZGVUeXBlKXtpZigxPT09bm9kZVR5cGV8fDk9PT1ub2RlVHlwZXx8MTE9PT1ub2RlVHlwZSl7aWYoInN0cmluZyI9PXR5cGVvZiBlbGVtLnRleHRDb250ZW50KXJldHVybiBlbGVtLnRleHRDb250ZW50O2ZvcihlbGVtPWVsZW0uZmlyc3RDaGlsZDtlbGVtO2VsZW09ZWxlbS5uZXh0U2libGluZylyZXQrPWdldFRleHQoZWxlbSl9ZWxzZSBpZigzPT09bm9kZVR5cGV8fDQ9PT1ub2RlVHlwZSlyZXR1cm4gZWxlbS5ub2RlVmFsdWV9ZWxzZSBmb3IoO25vZGU9ZWxlbVtpKytdOylyZXQrPWdldFRleHQobm9kZSk7cmV0dXJuIHJldH0sRXhwcj1TaXp6bGUuc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86bWFya0Z1bmN0aW9uLG1hdGNoOm1hdGNoRXhwcixhdHRySGFuZGxlOnt9LGZpbmQ6e30scmVsYXRpdmU6eyI+Ijp7ZGlyOiJwYXJlbnROb2RlIixmaXJzdDohMH0sIiAiOntkaXI6InBhcmVudE5vZGUifSwiKyI6e2RpcjoicHJldmlvdXNTaWJsaW5nIixmaXJzdDohMH0sIn4iOntkaXI6InByZXZpb3VzU2libGluZyJ9fSxwcmVGaWx0ZXI6e0FUVFI6ZnVuY3Rpb24obWF0Y2gpe3JldHVybiBtYXRjaFsxXT1tYXRjaFsxXS5yZXBsYWNlKHJ1bmVzY2FwZSxmdW5lc2NhcGUpLG1hdGNoWzNdPShtYXRjaFszXXx8bWF0Y2hbNF18fG1hdGNoWzVdfHwiIikucmVwbGFjZShydW5lc2NhcGUsZnVuZXNjYXBlKSwifj0iPT09bWF0Y2hbMl0mJihtYXRjaFszXT0iICIrbWF0Y2hbM10rIiAiKSxtYXRjaC5zbGljZSgwLDQpfSxDSElMRDpmdW5jdGlvbihtYXRjaCl7cmV0dXJuIG1hdGNoWzFdPW1hdGNoWzFdLnRvTG93ZXJDYXNlKCksIm50aCI9PT1tYXRjaFsxXS5zbGljZSgwLDMpPyhtYXRjaFszXXx8U2l6emxlLmVycm9yKG1hdGNoWzBdKSxtYXRjaFs0XT0rKG1hdGNoWzRdP21hdGNoWzVdKyhtYXRjaFs2XXx8MSk6MiooImV2ZW4iPT09bWF0Y2hbM118fCJvZGQiPT09bWF0Y2hbM10pKSxtYXRjaFs1XT0rKG1hdGNoWzddK21hdGNoWzhdfHwib2RkIj09PW1hdGNoWzNdKSk6bWF0Y2hbM10mJlNpenpsZS5lcnJvcihtYXRjaFswXSksbWF0Y2h9LFBTRVVETzpmdW5jdGlvbihtYXRjaCl7dmFyIGV4Y2Vzcyx1bnF1b3RlZD0hbWF0Y2hbNl0mJm1hdGNoWzJdO3JldHVybiBtYXRjaEV4cHIuQ0hJTEQudGVzdChtYXRjaFswXSk/bnVsbDoobWF0Y2hbM10/bWF0Y2hbMl09bWF0Y2hbNF18fG1hdGNoWzVdfHwiIjp1bnF1b3RlZCYmcnBzZXVkby50ZXN0KHVucXVvdGVkKSYmKGV4Y2Vzcz10b2tlbml6ZSh1bnF1b3RlZCwhMCkpJiYoZXhjZXNzPXVucXVvdGVkLmluZGV4T2YoIikiLHVucXVvdGVkLmxlbmd0aC1leGNlc3MpLXVucXVvdGVkLmxlbmd0aCkmJihtYXRjaFswXT1tYXRjaFswXS5zbGljZSgwLGV4Y2VzcyksbWF0Y2hbMl09dW5xdW90ZWQuc2xpY2UoMCxleGNlc3MpKSxtYXRjaC5zbGljZSgwLDMpKX19LGZpbHRlcjp7VEFHOmZ1bmN0aW9uKG5vZGVOYW1lU2VsZWN0b3Ipe3ZhciBub2RlTmFtZT1ub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UocnVuZXNjYXBlLGZ1bmVzY2FwZSkudG9Mb3dlckNhc2UoKTtyZXR1cm4iKiI9PT1ub2RlTmFtZVNlbGVjdG9yP2Z1bmN0aW9uKCl7cmV0dXJuITB9OmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLm5vZGVOYW1lJiZlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1ub2RlTmFtZX19LENMQVNTOmZ1bmN0aW9uKGNsYXNzTmFtZSl7dmFyIHBhdHRlcm49Y2xhc3NDYWNoZVtjbGFzc05hbWUrIiAiXTtyZXR1cm4gcGF0dGVybnx8KHBhdHRlcm49bmV3IFJlZ0V4cCgiKF58Iit3aGl0ZXNwYWNlKyIpIitjbGFzc05hbWUrIigiK3doaXRlc3BhY2UrInwkKSIpKSYmY2xhc3NDYWNoZShjbGFzc05hbWUsZnVuY3Rpb24oZWxlbSl7cmV0dXJuIHBhdHRlcm4udGVzdCgic3RyaW5nIj09dHlwZW9mIGVsZW0uY2xhc3NOYW1lJiZlbGVtLmNsYXNzTmFtZXx8dHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlIT09c3RydW5kZWZpbmVkJiZlbGVtLmdldEF0dHJpYnV0ZSgiY2xhc3MiKXx8IiIpfSl9LEFUVFI6ZnVuY3Rpb24obmFtZSxvcGVyYXRvcixjaGVjayl7cmV0dXJuIGZ1bmN0aW9uKGVsZW0pe3ZhciByZXN1bHQ9U2l6emxlLmF0dHIoZWxlbSxuYW1lKTtyZXR1cm4gbnVsbD09cmVzdWx0PyIhPSI9PT1vcGVyYXRvcjpvcGVyYXRvcj8ocmVzdWx0Kz0iIiwiPSI9PT1vcGVyYXRvcj9yZXN1bHQ9PT1jaGVjazoiIT0iPT09b3BlcmF0b3I/cmVzdWx0IT09Y2hlY2s6Il49Ij09PW9wZXJhdG9yP2NoZWNrJiYwPT09cmVzdWx0LmluZGV4T2YoY2hlY2spOiIqPSI9PT1vcGVyYXRvcj9jaGVjayYmcmVzdWx0LmluZGV4T2YoY2hlY2spPi0xOiIkPSI9PT1vcGVyYXRvcj9jaGVjayYmcmVzdWx0LnNsaWNlKC1jaGVjay5sZW5ndGgpPT09Y2hlY2s6In49Ij09PW9wZXJhdG9yPygiICIrcmVzdWx0KyIgIikuaW5kZXhPZihjaGVjayk+LTE6Inw9Ij09PW9wZXJhdG9yP3Jlc3VsdD09PWNoZWNrfHxyZXN1bHQuc2xpY2UoMCxjaGVjay5sZW5ndGgrMSk9PT1jaGVjaysiLSI6ITEpOiEwfX0sQ0hJTEQ6ZnVuY3Rpb24odHlwZSx3aGF0LGFyZ3VtZW50LGZpcnN0LGxhc3Qpe3ZhciBzaW1wbGU9Im50aCIhPT10eXBlLnNsaWNlKDAsMyksZm9yd2FyZD0ibGFzdCIhPT10eXBlLnNsaWNlKC00KSxvZlR5cGU9Im9mLXR5cGUiPT09d2hhdDtyZXR1cm4gMT09PWZpcnN0JiYwPT09bGFzdD9mdW5jdGlvbihlbGVtKXtyZXR1cm4hIWVsZW0ucGFyZW50Tm9kZX06ZnVuY3Rpb24oZWxlbSxjb250ZXh0LHhtbCl7dmFyIGNhY2hlLG91dGVyQ2FjaGUsbm9kZSxkaWZmLG5vZGVJbmRleCxzdGFydCxkaXI9c2ltcGxlIT09Zm9yd2FyZD8ibmV4dFNpYmxpbmciOiJwcmV2aW91c1NpYmxpbmciLHBhcmVudD1lbGVtLnBhcmVudE5vZGUsbmFtZT1vZlR5cGUmJmVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSx1c2VDYWNoZT0heG1sJiYhb2ZUeXBlO2lmKHBhcmVudCl7aWYoc2ltcGxlKXtmb3IoO2Rpcjspe2Zvcihub2RlPWVsZW07bm9kZT1ub2RlW2Rpcl07KWlmKG9mVHlwZT9ub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1uYW1lOjE9PT1ub2RlLm5vZGVUeXBlKXJldHVybiExO3N0YXJ0PWRpcj0ib25seSI9PT10eXBlJiYhc3RhcnQmJiJuZXh0U2libGluZyJ9cmV0dXJuITB9aWYoc3RhcnQ9W2ZvcndhcmQ/cGFyZW50LmZpcnN0Q2hpbGQ6cGFyZW50Lmxhc3RDaGlsZF0sZm9yd2FyZCYmdXNlQ2FjaGUpe2ZvcihvdXRlckNhY2hlPXBhcmVudFtleHBhbmRvXXx8KHBhcmVudFtleHBhbmRvXT17fSksY2FjaGU9b3V0ZXJDYWNoZVt0eXBlXXx8W10sbm9kZUluZGV4PWNhY2hlWzBdPT09ZGlycnVucyYmY2FjaGVbMV0sZGlmZj1jYWNoZVswXT09PWRpcnJ1bnMmJmNhY2hlWzJdLG5vZGU9bm9kZUluZGV4JiZwYXJlbnQuY2hpbGROb2Rlc1tub2RlSW5kZXhdO25vZGU9Kytub2RlSW5kZXgmJm5vZGUmJm5vZGVbZGlyXXx8KGRpZmY9bm9kZUluZGV4PTApfHxzdGFydC5wb3AoKTspaWYoMT09PW5vZGUubm9kZVR5cGUmJisrZGlmZiYmbm9kZT09PWVsZW0pe291dGVyQ2FjaGVbdHlwZV09W2RpcnJ1bnMsbm9kZUluZGV4LGRpZmZdO2JyZWFrfX1lbHNlIGlmKHVzZUNhY2hlJiYoY2FjaGU9KGVsZW1bZXhwYW5kb118fChlbGVtW2V4cGFuZG9dPXt9KSlbdHlwZV0pJiZjYWNoZVswXT09PWRpcnJ1bnMpZGlmZj1jYWNoZVsxXTtlbHNlIGZvcig7KG5vZGU9Kytub2RlSW5kZXgmJm5vZGUmJm5vZGVbZGlyXXx8KGRpZmY9bm9kZUluZGV4PTApfHxzdGFydC5wb3AoKSkmJigob2ZUeXBlP25vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9PW5hbWU6MSE9PW5vZGUubm9kZVR5cGUpfHwhKytkaWZmfHwodXNlQ2FjaGUmJigobm9kZVtleHBhbmRvXXx8KG5vZGVbZXhwYW5kb109e30pKVt0eXBlXT1bZGlycnVucyxkaWZmXSksbm9kZSE9PWVsZW0pKTspO3JldHVybiBkaWZmLT1sYXN0LGRpZmY9PT1maXJzdHx8ZGlmZiVmaXJzdD09PTAmJmRpZmYvZmlyc3Q+PTB9fX0sUFNFVURPOmZ1bmN0aW9uKHBzZXVkbyxhcmd1bWVudCl7dmFyIGFyZ3MsZm49RXhwci5wc2V1ZG9zW3BzZXVkb118fEV4cHIuc2V0RmlsdGVyc1twc2V1ZG8udG9Mb3dlckNhc2UoKV18fFNpenpsZS5lcnJvcigidW5zdXBwb3J0ZWQgcHNldWRvOiAiK3BzZXVkbyk7cmV0dXJuIGZuW2V4cGFuZG9dP2ZuKGFyZ3VtZW50KTpmbi5sZW5ndGg+MT8oYXJncz1bcHNldWRvLHBzZXVkbywiIixhcmd1bWVudF0sRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KHBzZXVkby50b0xvd2VyQ2FzZSgpKT9tYXJrRnVuY3Rpb24oZnVuY3Rpb24oc2VlZCxtYXRjaGVzKXtmb3IodmFyIGlkeCxtYXRjaGVkPWZuKHNlZWQsYXJndW1lbnQpLGk9bWF0Y2hlZC5sZW5ndGg7aS0tOylpZHg9aW5kZXhPZi5jYWxsKHNlZWQsbWF0Y2hlZFtpXSksc2VlZFtpZHhdPSEobWF0Y2hlc1tpZHhdPW1hdGNoZWRbaV0pfSk6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGZuKGVsZW0sMCxhcmdzKX0pOmZufX0scHNldWRvczp7bm90Om1hcmtGdW5jdGlvbihmdW5jdGlvbihzZWxlY3Rvcil7dmFyIGlucHV0PVtdLHJlc3VsdHM9W10sbWF0Y2hlcj1jb21waWxlKHNlbGVjdG9yLnJlcGxhY2UocnRyaW0sIiQxIikpO3JldHVybiBtYXRjaGVyW2V4cGFuZG9dP21hcmtGdW5jdGlvbihmdW5jdGlvbihzZWVkLG1hdGNoZXMsY29udGV4dCx4bWwpe2Zvcih2YXIgZWxlbSx1bm1hdGNoZWQ9bWF0Y2hlcihzZWVkLG51bGwseG1sLFtdKSxpPXNlZWQubGVuZ3RoO2ktLTspKGVsZW09dW5tYXRjaGVkW2ldKSYmKHNlZWRbaV09IShtYXRjaGVzW2ldPWVsZW0pKX0pOmZ1bmN0aW9uKGVsZW0sY29udGV4dCx4bWwpe3JldHVybiBpbnB1dFswXT1lbGVtLG1hdGNoZXIoaW5wdXQsbnVsbCx4bWwscmVzdWx0cyksIXJlc3VsdHMucG9wKCl9fSksaGFzOm1hcmtGdW5jdGlvbihmdW5jdGlvbihzZWxlY3Rvcil7cmV0dXJuIGZ1bmN0aW9uKGVsZW0pe3JldHVybiBTaXp6bGUoc2VsZWN0b3IsZWxlbSkubGVuZ3RoPjB9fSksY29udGFpbnM6bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKHRleHQpe3JldHVybiBmdW5jdGlvbihlbGVtKXtyZXR1cm4oZWxlbS50ZXh0Q29udGVudHx8ZWxlbS5pbm5lclRleHR8fGdldFRleHQoZWxlbSkpLmluZGV4T2YodGV4dCk+LTF9fSksbGFuZzptYXJrRnVuY3Rpb24oZnVuY3Rpb24obGFuZyl7cmV0dXJuIHJpZGVudGlmaWVyLnRlc3QobGFuZ3x8IiIpfHxTaXp6bGUuZXJyb3IoInVuc3VwcG9ydGVkIGxhbmc6ICIrbGFuZyksbGFuZz1sYW5nLnJlcGxhY2UocnVuZXNjYXBlLGZ1bmVzY2FwZSkudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihlbGVtKXt2YXIgZWxlbUxhbmc7ZG8gaWYoZWxlbUxhbmc9ZG9jdW1lbnRJc0hUTUw/ZWxlbS5sYW5nOmVsZW0uZ2V0QXR0cmlidXRlKCJ4bWw6bGFuZyIpfHxlbGVtLmdldEF0dHJpYnV0ZSgibGFuZyIpKXJldHVybiBlbGVtTGFuZz1lbGVtTGFuZy50b0xvd2VyQ2FzZSgpLGVsZW1MYW5nPT09bGFuZ3x8MD09PWVsZW1MYW5nLmluZGV4T2YobGFuZysiLSIpO3doaWxlKChlbGVtPWVsZW0ucGFyZW50Tm9kZSkmJjE9PT1lbGVtLm5vZGVUeXBlKTtyZXR1cm4hMX19KSx0YXJnZXQ6ZnVuY3Rpb24oZWxlbSl7dmFyIGhhc2g9d2luZG93LmxvY2F0aW9uJiZ3aW5kb3cubG9jYXRpb24uaGFzaDtyZXR1cm4gaGFzaCYmaGFzaC5zbGljZSgxKT09PWVsZW0uaWR9LHJvb3Q6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW09PT1kb2NFbGVtfSxmb2N1czpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbT09PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJighZG9jdW1lbnQuaGFzRm9jdXN8fGRvY3VtZW50Lmhhc0ZvY3VzKCkpJiYhIShlbGVtLnR5cGV8fGVsZW0uaHJlZnx8fmVsZW0udGFiSW5kZXgpfSxlbmFibGVkOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLmRpc2FibGVkPT09ITF9LGRpc2FibGVkOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLmRpc2FibGVkPT09ITB9LGNoZWNrZWQ6ZnVuY3Rpb24oZWxlbSl7dmFyIG5vZGVOYW1lPWVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4iaW5wdXQiPT09bm9kZU5hbWUmJiEhZWxlbS5jaGVja2VkfHwib3B0aW9uIj09PW5vZGVOYW1lJiYhIWVsZW0uc2VsZWN0ZWR9LHNlbGVjdGVkOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLnBhcmVudE5vZGUmJmVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LGVsZW0uc2VsZWN0ZWQ9PT0hMH0sZW1wdHk6ZnVuY3Rpb24oZWxlbSl7Zm9yKGVsZW09ZWxlbS5maXJzdENoaWxkO2VsZW07ZWxlbT1lbGVtLm5leHRTaWJsaW5nKWlmKGVsZW0ubm9kZVR5cGU8NilyZXR1cm4hMTtyZXR1cm4hMH0scGFyZW50OmZ1bmN0aW9uKGVsZW0pe3JldHVybiFFeHByLnBzZXVkb3MuZW1wdHkoZWxlbSl9LGhlYWRlcjpmdW5jdGlvbihlbGVtKXtyZXR1cm4gcmhlYWRlci50ZXN0KGVsZW0ubm9kZU5hbWUpfSxpbnB1dDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gcmlucHV0cy50ZXN0KGVsZW0ubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24oZWxlbSl7dmFyIG5hbWU9ZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiJpbnB1dCI9PT1uYW1lJiYiYnV0dG9uIj09PWVsZW0udHlwZXx8ImJ1dHRvbiI9PT1uYW1lfSx0ZXh0OmZ1bmN0aW9uKGVsZW0pe3ZhciBhdHRyO3JldHVybiJpbnB1dCI9PT1lbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJiJ0ZXh0Ij09PWVsZW0udHlwZSYmKG51bGw9PShhdHRyPWVsZW0uZ2V0QXR0cmlidXRlKCJ0eXBlIikpfHwidGV4dCI9PT1hdHRyLnRvTG93ZXJDYXNlKCkpfSxmaXJzdDpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKG1hdGNoSW5kZXhlcyxsZW5ndGgpe3JldHVybltsZW5ndGgtMV19KSxlcTpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKG1hdGNoSW5kZXhlcyxsZW5ndGgsYXJndW1lbnQpe3JldHVyblswPmFyZ3VtZW50P2FyZ3VtZW50K2xlbmd0aDphcmd1bWVudF19KSxldmVuOmNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24obWF0Y2hJbmRleGVzLGxlbmd0aCl7Zm9yKHZhciBpPTA7bGVuZ3RoPmk7aSs9MiltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksb2RkOmNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24obWF0Y2hJbmRleGVzLGxlbmd0aCl7Zm9yKHZhciBpPTE7bGVuZ3RoPmk7aSs9MiltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksbHQ6Y3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbihtYXRjaEluZGV4ZXMsbGVuZ3RoLGFyZ3VtZW50KXtmb3IodmFyIGk9MD5hcmd1bWVudD9hcmd1bWVudCtsZW5ndGg6YXJndW1lbnQ7LS1pPj0wOyltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksZ3Q6Y3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbihtYXRjaEluZGV4ZXMsbGVuZ3RoLGFyZ3VtZW50KXtmb3IodmFyIGk9MD5hcmd1bWVudD9hcmd1bWVudCtsZW5ndGg6YXJndW1lbnQ7KytpPGxlbmd0aDspbWF0Y2hJbmRleGVzLnB1c2goaSk7cmV0dXJuIG1hdGNoSW5kZXhlc30pfX0sRXhwci5wc2V1ZG9zLm50aD1FeHByLnBzZXVkb3MuZXE7Zm9yKGkgaW57cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0pRXhwci5wc2V1ZG9zW2ldPWNyZWF0ZUlucHV0UHNldWRvKGkpO2ZvcihpIGlue3N1Ym1pdDohMCxyZXNldDohMH0pRXhwci5wc2V1ZG9zW2ldPWNyZWF0ZUJ1dHRvblBzZXVkbyhpKTtyZXR1cm4gc2V0RmlsdGVycy5wcm90b3R5cGU9RXhwci5maWx0ZXJzPUV4cHIucHNldWRvcyxFeHByLnNldEZpbHRlcnM9bmV3IHNldEZpbHRlcnMsdG9rZW5pemU9U2l6emxlLnRva2VuaXplPWZ1bmN0aW9uKHNlbGVjdG9yLHBhcnNlT25seSl7dmFyIG1hdGNoZWQsbWF0Y2gsdG9rZW5zLHR5cGUsc29GYXIsZ3JvdXBzLHByZUZpbHRlcnMsY2FjaGVkPXRva2VuQ2FjaGVbc2VsZWN0b3IrIiAiXTtpZihjYWNoZWQpcmV0dXJuIHBhcnNlT25seT8wOmNhY2hlZC5zbGljZSgwKTtmb3Ioc29GYXI9c2VsZWN0b3IsZ3JvdXBzPVtdLHByZUZpbHRlcnM9RXhwci5wcmVGaWx0ZXI7c29GYXI7KXsoIW1hdGNoZWR8fChtYXRjaD1yY29tbWEuZXhlYyhzb0ZhcikpKSYmKG1hdGNoJiYoc29GYXI9c29GYXIuc2xpY2UobWF0Y2hbMF0ubGVuZ3RoKXx8c29GYXIpLGdyb3Vwcy5wdXNoKHRva2Vucz1bXSkpLG1hdGNoZWQ9ITEsKG1hdGNoPXJjb21iaW5hdG9ycy5leGVjKHNvRmFyKSkmJihtYXRjaGVkPW1hdGNoLnNoaWZ0KCksdG9rZW5zLnB1c2goe3ZhbHVlOm1hdGNoZWQsdHlwZTptYXRjaFswXS5yZXBsYWNlKHJ0cmltLCIgIil9KSxzb0Zhcj1zb0Zhci5zbGljZShtYXRjaGVkLmxlbmd0aCkpO2Zvcih0eXBlIGluIEV4cHIuZmlsdGVyKSEobWF0Y2g9bWF0Y2hFeHByW3R5cGVdLmV4ZWMoc29GYXIpKXx8cHJlRmlsdGVyc1t0eXBlXSYmIShtYXRjaD1wcmVGaWx0ZXJzW3R5cGVdKG1hdGNoKSl8fChtYXRjaGVkPW1hdGNoLnNoaWZ0KCksdG9rZW5zLnB1c2goe3ZhbHVlOm1hdGNoZWQsdHlwZTp0eXBlLG1hdGNoZXM6bWF0Y2h9KSxzb0Zhcj1zb0Zhci5zbGljZShtYXRjaGVkLmxlbmd0aCkpO2lmKCFtYXRjaGVkKWJyZWFrfXJldHVybiBwYXJzZU9ubHk/c29GYXIubGVuZ3RoOnNvRmFyP1NpenpsZS5lcnJvcihzZWxlY3Rvcik6dG9rZW5DYWNoZShzZWxlY3Rvcixncm91cHMpLnNsaWNlKDApfSxjb21waWxlPVNpenpsZS5jb21waWxlPWZ1bmN0aW9uKHNlbGVjdG9yLG1hdGNoKXt2YXIgaSxzZXRNYXRjaGVycz1bXSxlbGVtZW50TWF0Y2hlcnM9W10sY2FjaGVkPWNvbXBpbGVyQ2FjaGVbc2VsZWN0b3IrIiAiXTtpZighY2FjaGVkKXtmb3IobWF0Y2h8fChtYXRjaD10b2tlbml6ZShzZWxlY3RvcikpLGk9bWF0Y2gubGVuZ3RoO2ktLTspY2FjaGVkPW1hdGNoZXJGcm9tVG9rZW5zKG1hdGNoW2ldKSxjYWNoZWRbZXhwYW5kb10/c2V0TWF0Y2hlcnMucHVzaChjYWNoZWQpOmVsZW1lbnRNYXRjaGVycy5wdXNoKGNhY2hlZCk7Y2FjaGVkPWNvbXBpbGVyQ2FjaGUoc2VsZWN0b3IsbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKGVsZW1lbnRNYXRjaGVycyxzZXRNYXRjaGVycykpLGNhY2hlZC5zZWxlY3Rvcj1zZWxlY3Rvcn1yZXR1cm4gY2FjaGVkfSxzZWxlY3Q9U2l6emxlLnNlbGVjdD1mdW5jdGlvbihzZWxlY3Rvcixjb250ZXh0LHJlc3VsdHMsc2VlZCl7dmFyIGksdG9rZW5zLHRva2VuLHR5cGUsZmluZCxjb21waWxlZD0iZnVuY3Rpb24iPT10eXBlb2Ygc2VsZWN0b3ImJnNlbGVjdG9yLG1hdGNoPSFzZWVkJiZ0b2tlbml6ZShzZWxlY3Rvcj1jb21waWxlZC5zZWxlY3Rvcnx8c2VsZWN0b3IpO2lmKHJlc3VsdHM9cmVzdWx0c3x8W10sMT09PW1hdGNoLmxlbmd0aCl7aWYodG9rZW5zPW1hdGNoWzBdPW1hdGNoWzBdLnNsaWNlKDApLHRva2Vucy5sZW5ndGg+MiYmIklEIj09PSh0b2tlbj10b2tlbnNbMF0pLnR5cGUmJnN1cHBvcnQuZ2V0QnlJZCYmOT09PWNvbnRleHQubm9kZVR5cGUmJmRvY3VtZW50SXNIVE1MJiZFeHByLnJlbGF0aXZlW3Rva2Vuc1sxXS50eXBlXSl7aWYoY29udGV4dD0oRXhwci5maW5kLklEKHRva2VuLm1hdGNoZXNbMF0ucmVwbGFjZShydW5lc2NhcGUsZnVuZXNjYXBlKSxjb250ZXh0KXx8W10pWzBdLCFjb250ZXh0KXJldHVybiByZXN1bHRzO2NvbXBpbGVkJiYoY29udGV4dD1jb250ZXh0LnBhcmVudE5vZGUpLHNlbGVjdG9yPXNlbGVjdG9yLnNsaWNlKHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCl9Zm9yKGk9bWF0Y2hFeHByLm5lZWRzQ29udGV4dC50ZXN0KHNlbGVjdG9yKT8wOnRva2Vucy5sZW5ndGg7aS0tJiYodG9rZW49dG9rZW5zW2ldLCFFeHByLnJlbGF0aXZlW3R5cGU9dG9rZW4udHlwZV0pOylpZigoZmluZD1FeHByLmZpbmRbdHlwZV0pJiYoc2VlZD1maW5kKHRva2VuLm1hdGNoZXNbMF0ucmVwbGFjZShydW5lc2NhcGUsZnVuZXNjYXBlKSxyc2libGluZy50ZXN0KHRva2Vuc1swXS50eXBlKSYmdGVzdENvbnRleHQoY29udGV4dC5wYXJlbnROb2RlKXx8Y29udGV4dCkpKXtpZih0b2tlbnMuc3BsaWNlKGksMSksc2VsZWN0b3I9c2VlZC5sZW5ndGgmJnRvU2VsZWN0b3IodG9rZW5zKSwhc2VsZWN0b3IpcmV0dXJuIHB1c2guYXBwbHkocmVzdWx0cyxzZWVkKSxyZXN1bHRzO2JyZWFrfX1yZXR1cm4oY29tcGlsZWR8fGNvbXBpbGUoc2VsZWN0b3IsbWF0Y2gpKShzZWVkLGNvbnRleHQsIWRvY3VtZW50SXNIVE1MLHJlc3VsdHMscnNpYmxpbmcudGVzdChzZWxlY3RvcikmJnRlc3RDb250ZXh0KGNvbnRleHQucGFyZW50Tm9kZSl8fGNvbnRleHQpLHJlc3VsdHN9LHN1cHBvcnQuc29ydFN0YWJsZT1leHBhbmRvLnNwbGl0KCIiKS5zb3J0KHNvcnRPcmRlcikuam9pbigiIik9PT1leHBhbmRvLHN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcz0hIWhhc0R1cGxpY2F0ZSxzZXREb2N1bWVudCgpLHN1cHBvcnQuc29ydERldGFjaGVkPWFzc2VydChmdW5jdGlvbihkaXYxKXtyZXR1cm4gMSZkaXYxLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpKX0pLGFzc2VydChmdW5jdGlvbihkaXYpe3JldHVybiBkaXYuaW5uZXJIVE1MPSI8YSBocmVmPScjJz48L2E+IiwiIyI9PT1kaXYuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoImhyZWYiKX0pfHxhZGRIYW5kbGUoInR5cGV8aHJlZnxoZWlnaHR8d2lkdGgiLGZ1bmN0aW9uKGVsZW0sbmFtZSxpc1hNTCl7cmV0dXJuIGlzWE1MP3ZvaWQgMDplbGVtLmdldEF0dHJpYnV0ZShuYW1lLCJ0eXBlIj09PW5hbWUudG9Mb3dlckNhc2UoKT8xOjIpfSksc3VwcG9ydC5hdHRyaWJ1dGVzJiZhc3NlcnQoZnVuY3Rpb24oZGl2KXtyZXR1cm4gZGl2LmlubmVySFRNTD0iPGlucHV0Lz4iLGRpdi5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSgidmFsdWUiLCIiKSwiIj09PWRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgidmFsdWUiKX0pfHxhZGRIYW5kbGUoInZhbHVlIixmdW5jdGlvbihlbGVtLG5hbWUsaXNYTUwpe3JldHVybiBpc1hNTHx8ImlucHV0IiE9PWVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT92b2lkIDA6ZWxlbS5kZWZhdWx0VmFsdWV9KSxhc3NlcnQoZnVuY3Rpb24oZGl2KXtyZXR1cm4gbnVsbD09ZGl2LmdldEF0dHJpYnV0ZSgiZGlzYWJsZWQiKX0pfHxhZGRIYW5kbGUoYm9vbGVhbnMsZnVuY3Rpb24oZWxlbSxuYW1lLGlzWE1MKXt2YXIgdmFsO3JldHVybiBpc1hNTD92b2lkIDA6ZWxlbVtuYW1lXT09PSEwP25hbWUudG9Mb3dlckNhc2UoKToodmFsPWVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKSkmJnZhbC5zcGVjaWZpZWQ/dmFsLnZhbHVlOm51bGx9KSxTaXp6bGV9KHdpbmRvdyk7alF1ZXJ5LmZpbmQ9U2l6emxlLGpRdWVyeS5leHByPVNpenpsZS5zZWxlY3RvcnMsalF1ZXJ5LmV4cHJbIjoiXT1qUXVlcnkuZXhwci5wc2V1ZG9zLGpRdWVyeS51bmlxdWU9U2l6emxlLnVuaXF1ZVNvcnQsalF1ZXJ5LnRleHQ9U2l6emxlLmdldFRleHQsalF1ZXJ5LmlzWE1MRG9jPVNpenpsZS5pc1hNTCxqUXVlcnkuY29udGFpbnM9U2l6emxlLmNvbnRhaW5zO3ZhciBybmVlZHNDb250ZXh0PWpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dCxyc2luZ2xlVGFnPS9ePChcdyspXHMqXC8/Pig/OjxcL1wxPnwpJC8scmlzU2ltcGxlPS9eLlteOiNcW1wuLF0qJC87alF1ZXJ5LmZpbHRlcj1mdW5jdGlvbihleHByLGVsZW1zLG5vdCl7dmFyIGVsZW09ZWxlbXNbMF07cmV0dXJuIG5vdCYmKGV4cHI9Ijpub3QoIitleHByKyIpIiksMT09PWVsZW1zLmxlbmd0aCYmMT09PWVsZW0ubm9kZVR5cGU/alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKGVsZW0sZXhwcik/W2VsZW1dOltdOmpRdWVyeS5maW5kLm1hdGNoZXMoZXhwcixqUXVlcnkuZ3JlcChlbGVtcyxmdW5jdGlvbihlbGVtKXtyZXR1cm4gMT09PWVsZW0ubm9kZVR5cGV9KSl9LGpRdWVyeS5mbi5leHRlbmQoe2ZpbmQ6ZnVuY3Rpb24oc2VsZWN0b3Ipe3ZhciBpLGxlbj10aGlzLmxlbmd0aCxyZXQ9W10sc2VsZj10aGlzO2lmKCJzdHJpbmciIT10eXBlb2Ygc2VsZWN0b3IpcmV0dXJuIHRoaXMucHVzaFN0YWNrKGpRdWVyeShzZWxlY3RvcikuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGk9MDtsZW4+aTtpKyspaWYoalF1ZXJ5LmNvbnRhaW5zKHNlbGZbaV0sdGhpcykpcmV0dXJuITB9KSk7Zm9yKGk9MDtsZW4+aTtpKyspalF1ZXJ5LmZpbmQoc2VsZWN0b3Isc2VsZltpXSxyZXQpO3JldHVybiByZXQ9dGhpcy5wdXNoU3RhY2sobGVuPjE/alF1ZXJ5LnVuaXF1ZShyZXQpOnJldCkscmV0LnNlbGVjdG9yPXRoaXMuc2VsZWN0b3I/dGhpcy5zZWxlY3RvcisiICIrc2VsZWN0b3I6c2VsZWN0b3IscmV0fSxmaWx0ZXI6ZnVuY3Rpb24oc2VsZWN0b3Ipe3JldHVybiB0aGlzLnB1c2hTdGFjayh3aW5ub3codGhpcyxzZWxlY3Rvcnx8W10sITEpKX0sbm90OmZ1bmN0aW9uKHNlbGVjdG9yKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2sod2lubm93KHRoaXMsc2VsZWN0b3J8fFtdLCEwKSl9LGlzOmZ1bmN0aW9uKHNlbGVjdG9yKXtyZXR1cm4hIXdpbm5vdyh0aGlzLCJzdHJpbmciPT10eXBlb2Ygc2VsZWN0b3ImJnJuZWVkc0NvbnRleHQudGVzdChzZWxlY3Rvcik/alF1ZXJ5KHNlbGVjdG9yKTpzZWxlY3Rvcnx8W10sITEpLmxlbmd0aH19KTt2YXIgcm9vdGpRdWVyeSxycXVpY2tFeHByPS9eKD86XHMqKDxbXHdcV10rPilbXj5dKnwjKFtcdy1dKikpJC8saW5pdD1qUXVlcnkuZm4uaW5pdD1mdW5jdGlvbihzZWxlY3Rvcixjb250ZXh0KXt2YXIgbWF0Y2gsZWxlbTtpZighc2VsZWN0b3IpcmV0dXJuIHRoaXM7aWYoInN0cmluZyI9PXR5cGVvZiBzZWxlY3Rvcil7aWYobWF0Y2g9IjwiPT09c2VsZWN0b3JbMF0mJiI+Ij09PXNlbGVjdG9yW3NlbGVjdG9yLmxlbmd0aC0xXSYmc2VsZWN0b3IubGVuZ3RoPj0zP1tudWxsLHNlbGVjdG9yLG51bGxdOnJxdWlja0V4cHIuZXhlYyhzZWxlY3RvciksIW1hdGNofHwhbWF0Y2hbMV0mJmNvbnRleHQpcmV0dXJuIWNvbnRleHR8fGNvbnRleHQuanF1ZXJ5Pyhjb250ZXh0fHxyb290alF1ZXJ5KS5maW5kKHNlbGVjdG9yKTp0aGlzLmNvbnN0cnVjdG9yKGNvbnRleHQpLmZpbmQoc2VsZWN0b3IpO2lmKG1hdGNoWzFdKXtpZihjb250ZXh0PWNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnk/Y29udGV4dFswXTpjb250ZXh0LGpRdWVyeS5tZXJnZSh0aGlzLGpRdWVyeS5wYXJzZUhUTUwobWF0Y2hbMV0sY29udGV4dCYmY29udGV4dC5ub2RlVHlwZT9jb250ZXh0Lm93bmVyRG9jdW1lbnR8fGNvbnRleHQ6ZG9jdW1lbnQsITApKSxyc2luZ2xlVGFnLnRlc3QobWF0Y2hbMV0pJiZqUXVlcnkuaXNQbGFpbk9iamVjdChjb250ZXh0KSlmb3IobWF0Y2ggaW4gY29udGV4dClqUXVlcnkuaXNGdW5jdGlvbih0aGlzW21hdGNoXSk/dGhpc1ttYXRjaF0oY29udGV4dFttYXRjaF0pOnRoaXMuYXR0cihtYXRjaCxjb250ZXh0W21hdGNoXSk7cmV0dXJuIHRoaXN9cmV0dXJuIGVsZW09ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWF0Y2hbMl0pLGVsZW0mJmVsZW0ucGFyZW50Tm9kZSYmKHRoaXMubGVuZ3RoPTEsdGhpc1swXT1lbGVtKSx0aGlzLmNvbnRleHQ9ZG9jdW1lbnQsdGhpcy5zZWxlY3Rvcj1zZWxlY3Rvcix0aGlzfXJldHVybiBzZWxlY3Rvci5ub2RlVHlwZT8odGhpcy5jb250ZXh0PXRoaXNbMF09c2VsZWN0b3IsdGhpcy5sZW5ndGg9MSx0aGlzKTpqUXVlcnkuaXNGdW5jdGlvbihzZWxlY3Rvcik/InVuZGVmaW5lZCIhPXR5cGVvZiByb290alF1ZXJ5LnJlYWR5P3Jvb3RqUXVlcnkucmVhZHkoc2VsZWN0b3IpOnNlbGVjdG9yKGpRdWVyeSk6KHZvaWQgMCE9PXNlbGVjdG9yLnNlbGVjdG9yJiYodGhpcy5zZWxlY3Rvcj1zZWxlY3Rvci5zZWxlY3Rvcix0aGlzLmNvbnRleHQ9c2VsZWN0b3IuY29udGV4dCksalF1ZXJ5Lm1ha2VBcnJheShzZWxlY3Rvcix0aGlzKSl9O2luaXQucHJvdG90eXBlPWpRdWVyeS5mbixyb290alF1ZXJ5PWpRdWVyeShkb2N1bWVudCk7dmFyIHJwYXJlbnRzcHJldj0vXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxndWFyYW50ZWVkVW5pcXVlPXtjaGlsZHJlbjohMCxjb250ZW50czohMCxuZXh0OiEwLHByZXY6ITB9O2pRdWVyeS5leHRlbmQoe2RpcjpmdW5jdGlvbihlbGVtLGRpcix1bnRpbCl7Zm9yKHZhciBtYXRjaGVkPVtdLHRydW5jYXRlPXZvaWQgMCE9PXVudGlsOyhlbGVtPWVsZW1bZGlyXSkmJjkhPT1lbGVtLm5vZGVUeXBlOylpZigxPT09ZWxlbS5ub2RlVHlwZSl7aWYodHJ1bmNhdGUmJmpRdWVyeShlbGVtKS5pcyh1bnRpbCkpYnJlYWs7bWF0Y2hlZC5wdXNoKGVsZW0pfXJldHVybiBtYXRjaGVkfSxzaWJsaW5nOmZ1bmN0aW9uKG4sZWxlbSl7Zm9yKHZhciBtYXRjaGVkPVtdO247bj1uLm5leHRTaWJsaW5nKTE9PT1uLm5vZGVUeXBlJiZuIT09ZWxlbSYmbWF0Y2hlZC5wdXNoKG4pO3JldHVybiBtYXRjaGVkfX0pLGpRdWVyeS5mbi5leHRlbmQoe2hhczpmdW5jdGlvbih0YXJnZXQpe3ZhciB0YXJnZXRzPWpRdWVyeSh0YXJnZXQsdGhpcyksbD10YXJnZXRzLmxlbmd0aDtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oKXtmb3IodmFyIGk9MDtsPmk7aSsrKWlmKGpRdWVyeS5jb250YWlucyh0aGlzLHRhcmdldHNbaV0pKXJldHVybiEwfSl9LGNsb3Nlc3Q6ZnVuY3Rpb24oc2VsZWN0b3JzLGNvbnRleHQpe2Zvcih2YXIgY3VyLGk9MCxsPXRoaXMubGVuZ3RoLG1hdGNoZWQ9W10scG9zPXJuZWVkc0NvbnRleHQudGVzdChzZWxlY3RvcnMpfHwic3RyaW5nIiE9dHlwZW9mIHNlbGVjdG9ycz9qUXVlcnkoc2VsZWN0b3JzLGNvbnRleHR8fHRoaXMuY29udGV4dCk6MDtsPmk7aSsrKWZvcihjdXI9dGhpc1tpXTtjdXImJmN1ciE9PWNvbnRleHQ7Y3VyPWN1ci5wYXJlbnROb2RlKWlmKGN1ci5ub2RlVHlwZTwxMSYmKHBvcz9wb3MuaW5kZXgoY3VyKT4tMToxPT09Y3VyLm5vZGVUeXBlJiZqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoY3VyLHNlbGVjdG9ycykpKXttYXRjaGVkLnB1c2goY3VyKTticmVha31yZXR1cm4gdGhpcy5wdXNoU3RhY2sobWF0Y2hlZC5sZW5ndGg+MT9qUXVlcnkudW5pcXVlKG1hdGNoZWQpOm1hdGNoZWQpfSxpbmRleDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbT8ic3RyaW5nIj09dHlwZW9mIGVsZW0/aW5kZXhPZi5jYWxsKGpRdWVyeShlbGVtKSx0aGlzWzBdKTppbmRleE9mLmNhbGwodGhpcyxlbGVtLmpxdWVyeT9lbGVtWzBdOmVsZW0pOnRoaXNbMF0mJnRoaXNbMF0ucGFyZW50Tm9kZT90aGlzLmZpcnN0KCkucHJldkFsbCgpLmxlbmd0aDotMX0sYWRkOmZ1bmN0aW9uKHNlbGVjdG9yLGNvbnRleHQpe3JldHVybiB0aGlzLnB1c2hTdGFjayhqUXVlcnkudW5pcXVlKGpRdWVyeS5tZXJnZSh0aGlzLmdldCgpLGpRdWVyeShzZWxlY3Rvcixjb250ZXh0KSkpKX0sYWRkQmFjazpmdW5jdGlvbihzZWxlY3Rvcil7cmV0dXJuIHRoaXMuYWRkKG51bGw9PXNlbGVjdG9yP3RoaXMucHJldk9iamVjdDp0aGlzLnByZXZPYmplY3QuZmlsdGVyKHNlbGVjdG9yKSl9fSksalF1ZXJ5LmVhY2goe3BhcmVudDpmdW5jdGlvbihlbGVtKXt2YXIgcGFyZW50PWVsZW0ucGFyZW50Tm9kZTtyZXR1cm4gcGFyZW50JiYxMSE9PXBhcmVudC5ub2RlVHlwZT9wYXJlbnQ6bnVsbH0scGFyZW50czpmdW5jdGlvbihlbGVtKXtyZXR1cm4galF1ZXJ5LmRpcihlbGVtLCJwYXJlbnROb2RlIil9LHBhcmVudHNVbnRpbDpmdW5jdGlvbihlbGVtLGksdW50aWwpe3JldHVybiBqUXVlcnkuZGlyKGVsZW0sInBhcmVudE5vZGUiLHVudGlsKX0sbmV4dDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gc2libGluZyhlbGVtLCJuZXh0U2libGluZyIpfSxwcmV2OmZ1bmN0aW9uKGVsZW0pe3JldHVybiBzaWJsaW5nKGVsZW0sInByZXZpb3VzU2libGluZyIpfSxuZXh0QWxsOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkuZGlyKGVsZW0sIm5leHRTaWJsaW5nIil9LHByZXZBbGw6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGpRdWVyeS5kaXIoZWxlbSwicHJldmlvdXNTaWJsaW5nIil9LG5leHRVbnRpbDpmdW5jdGlvbihlbGVtLGksdW50aWwpe3JldHVybiBqUXVlcnkuZGlyKGVsZW0sIm5leHRTaWJsaW5nIix1bnRpbCl9LHByZXZVbnRpbDpmdW5jdGlvbihlbGVtLGksdW50aWwpe3JldHVybiBqUXVlcnkuZGlyKGVsZW0sInByZXZpb3VzU2libGluZyIsdW50aWwpfSxzaWJsaW5nczpmdW5jdGlvbihlbGVtKXtyZXR1cm4galF1ZXJ5LnNpYmxpbmcoKGVsZW0ucGFyZW50Tm9kZXx8e30pLmZpcnN0Q2hpbGQsZWxlbSl9LGNoaWxkcmVuOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkuc2libGluZyhlbGVtLmZpcnN0Q2hpbGQpfSxjb250ZW50czpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnR8fGpRdWVyeS5tZXJnZShbXSxlbGVtLmNoaWxkTm9kZXMpfX0sZnVuY3Rpb24obmFtZSxmbil7alF1ZXJ5LmZuW25hbWVdPWZ1bmN0aW9uKHVudGlsLHNlbGVjdG9yKXt2YXIgbWF0Y2hlZD1qUXVlcnkubWFwKHRoaXMsZm4sdW50aWwpO3JldHVybiJVbnRpbCIhPT1uYW1lLnNsaWNlKC01KSYmKHNlbGVjdG9yPXVudGlsKSxzZWxlY3RvciYmInN0cmluZyI9PXR5cGVvZiBzZWxlY3RvciYmKG1hdGNoZWQ9alF1ZXJ5LmZpbHRlcihzZWxlY3RvcixtYXRjaGVkKSksdGhpcy5sZW5ndGg+MSYmKGd1YXJhbnRlZWRVbmlxdWVbbmFtZV18fGpRdWVyeS51bmlxdWUobWF0Y2hlZCkscnBhcmVudHNwcmV2LnRlc3QobmFtZSkmJm1hdGNoZWQucmV2ZXJzZSgpKSx0aGlzLnB1c2hTdGFjayhtYXRjaGVkKX19KTt2YXIgcm5vdHdoaXRlPS9cUysvZyxvcHRpb25zQ2FjaGU9e307alF1ZXJ5LkNhbGxiYWNrcz1mdW5jdGlvbihvcHRpb25zKXtvcHRpb25zPSJzdHJpbmciPT10eXBlb2Ygb3B0aW9ucz9vcHRpb25zQ2FjaGVbb3B0aW9uc118fGNyZWF0ZU9wdGlvbnMob3B0aW9ucyk6alF1ZXJ5LmV4dGVuZCh7fSxvcHRpb25zKTt2YXIgbWVtb3J5LGZpcmVkLGZpcmluZyxmaXJpbmdTdGFydCxmaXJpbmdMZW5ndGgsZmlyaW5nSW5kZXgsbGlzdD1bXSxzdGFjaz0hb3B0aW9ucy5vbmNlJiZbXSxmaXJlPWZ1bmN0aW9uKGRhdGEpe2ZvcihtZW1vcnk9b3B0aW9ucy5tZW1vcnkmJmRhdGEsZmlyZWQ9ITAsZmlyaW5nSW5kZXg9ZmlyaW5nU3RhcnR8fDAsZmlyaW5nU3RhcnQ9MCxmaXJpbmdMZW5ndGg9bGlzdC5sZW5ndGgsZmlyaW5nPSEwO2xpc3QmJmZpcmluZ0xlbmd0aD5maXJpbmdJbmRleDtmaXJpbmdJbmRleCsrKWlmKGxpc3RbZmlyaW5nSW5kZXhdLmFwcGx5KGRhdGFbMF0sZGF0YVsxXSk9PT0hMSYmb3B0aW9ucy5zdG9wT25GYWxzZSl7bWVtb3J5PSExO2JyZWFrfWZpcmluZz0hMSxsaXN0JiYoc3RhY2s/c3RhY2subGVuZ3RoJiZmaXJlKHN0YWNrLnNoaWZ0KCkpOm1lbW9yeT9saXN0PVtdOnNlbGYuZGlzYWJsZSgpKX0sc2VsZj17YWRkOmZ1bmN0aW9uKCl7aWYobGlzdCl7dmFyIHN0YXJ0PWxpc3QubGVuZ3RoOyFmdW5jdGlvbiBhZGQoYXJncyl7alF1ZXJ5LmVhY2goYXJncyxmdW5jdGlvbihfLGFyZyl7dmFyIHR5cGU9alF1ZXJ5LnR5cGUoYXJnKTsiZnVuY3Rpb24iPT09dHlwZT9vcHRpb25zLnVuaXF1ZSYmc2VsZi5oYXMoYXJnKXx8bGlzdC5wdXNoKGFyZyk6YXJnJiZhcmcubGVuZ3RoJiYic3RyaW5nIiE9PXR5cGUmJmFkZChhcmcpfSl9KGFyZ3VtZW50cyksZmlyaW5nP2ZpcmluZ0xlbmd0aD1saXN0Lmxlbmd0aDptZW1vcnkmJihmaXJpbmdTdGFydD1zdGFydCxmaXJlKG1lbW9yeSkpfXJldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gbGlzdCYmalF1ZXJ5LmVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKF8sYXJnKXtmb3IodmFyIGluZGV4OyhpbmRleD1qUXVlcnkuaW5BcnJheShhcmcsbGlzdCxpbmRleCkpPi0xOylsaXN0LnNwbGljZShpbmRleCwxKSxmaXJpbmcmJihmaXJpbmdMZW5ndGg+PWluZGV4JiZmaXJpbmdMZW5ndGgtLSxmaXJpbmdJbmRleD49aW5kZXgmJmZpcmluZ0luZGV4LS0pfSksdGhpc30saGFzOmZ1bmN0aW9uKGZuKXtyZXR1cm4gZm4/alF1ZXJ5LmluQXJyYXkoZm4sbGlzdCk+LTE6ISghbGlzdHx8IWxpc3QubGVuZ3RoKX0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gbGlzdD1bXSxmaXJpbmdMZW5ndGg9MCx0aGlzfSxkaXNhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIGxpc3Q9c3RhY2s9bWVtb3J5PXZvaWQgMCx0aGlzfSxkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiFsaXN0fSxsb2NrOmZ1bmN0aW9uKCl7cmV0dXJuIHN0YWNrPXZvaWQgMCxtZW1vcnl8fHNlbGYuZGlzYWJsZSgpLHRoaXN9LGxvY2tlZDpmdW5jdGlvbigpe3JldHVybiFzdGFja30sZmlyZVdpdGg6ZnVuY3Rpb24oY29udGV4dCxhcmdzKXtyZXR1cm4hbGlzdHx8ZmlyZWQmJiFzdGFja3x8KGFyZ3M9YXJnc3x8W10sYXJncz1bY29udGV4dCxhcmdzLnNsaWNlP2FyZ3Muc2xpY2UoKTphcmdzXSxmaXJpbmc/c3RhY2sucHVzaChhcmdzKTpmaXJlKGFyZ3MpKSx0aGlzfSxmaXJlOmZ1bmN0aW9uKCl7cmV0dXJuIHNlbGYuZmlyZVdpdGgodGhpcyxhcmd1bWVudHMpLHRoaXN9LGZpcmVkOmZ1bmN0aW9uKCl7cmV0dXJuISFmaXJlZH19O3JldHVybiBzZWxmfSxqUXVlcnkuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihmdW5jKXt2YXIgdHVwbGVzPVtbInJlc29sdmUiLCJkb25lIixqUXVlcnkuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLCJyZXNvbHZlZCJdLFsicmVqZWN0IiwiZmFpbCIsalF1ZXJ5LkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSwicmVqZWN0ZWQiXSxbIm5vdGlmeSIsInByb2dyZXNzIixqUXVlcnkuQ2FsbGJhY2tzKCJtZW1vcnkiKV1dLHN0YXRlPSJwZW5kaW5nIixwcm9taXNlPXtzdGF0ZTpmdW5jdGlvbigpe3JldHVybiBzdGF0ZX0sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGRlZmVycmVkLmRvbmUoYXJndW1lbnRzKS5mYWlsKGFyZ3VtZW50cyksdGhpc30sdGhlbjpmdW5jdGlvbigpe3ZhciBmbnM9YXJndW1lbnRzO3JldHVybiBqUXVlcnkuRGVmZXJyZWQoZnVuY3Rpb24obmV3RGVmZXIpe2pRdWVyeS5lYWNoKHR1cGxlcyxmdW5jdGlvbihpLHR1cGxlKXt2YXIgZm49alF1ZXJ5LmlzRnVuY3Rpb24oZm5zW2ldKSYmZm5zW2ldO2RlZmVycmVkW3R1cGxlWzFdXShmdW5jdGlvbigpe3ZhciByZXR1cm5lZD1mbiYmZm4uYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybmVkJiZqUXVlcnkuaXNGdW5jdGlvbihyZXR1cm5lZC5wcm9taXNlKT9yZXR1cm5lZC5wcm9taXNlKCkuZG9uZShuZXdEZWZlci5yZXNvbHZlKS5mYWlsKG5ld0RlZmVyLnJlamVjdCkucHJvZ3Jlc3MobmV3RGVmZXIubm90aWZ5KTpuZXdEZWZlclt0dXBsZVswXSsiV2l0aCJdKHRoaXM9PT1wcm9taXNlP25ld0RlZmVyLnByb21pc2UoKTp0aGlzLGZuP1tyZXR1cm5lZF06YXJndW1lbnRzKX0pfSksZm5zPW51bGx9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24ob2JqKXtyZXR1cm4gbnVsbCE9b2JqP2pRdWVyeS5leHRlbmQob2JqLHByb21pc2UpOnByb21pc2V9fSxkZWZlcnJlZD17fTtyZXR1cm4gcHJvbWlzZS5waXBlPXByb21pc2UudGhlbixqUXVlcnkuZWFjaCh0dXBsZXMsZnVuY3Rpb24oaSx0dXBsZSl7dmFyIGxpc3Q9dHVwbGVbMl0sc3RhdGVTdHJpbmc9dHVwbGVbM107cHJvbWlzZVt0dXBsZVsxXV09bGlzdC5hZGQsc3RhdGVTdHJpbmcmJmxpc3QuYWRkKGZ1bmN0aW9uKCl7c3RhdGU9c3RhdGVTdHJpbmd9LHR1cGxlc1sxXmldWzJdLmRpc2FibGUsdHVwbGVzWzJdWzJdLmxvY2spLGRlZmVycmVkW3R1cGxlWzBdXT1mdW5jdGlvbigpe3JldHVybiBkZWZlcnJlZFt0dXBsZVswXSsiV2l0aCJdKHRoaXM9PT1kZWZlcnJlZD9wcm9taXNlOnRoaXMsYXJndW1lbnRzKSx0aGlzfSxkZWZlcnJlZFt0dXBsZVswXSsiV2l0aCJdPWxpc3QuZmlyZVdpdGh9KSxwcm9taXNlLnByb21pc2UoZGVmZXJyZWQpLGZ1bmMmJmZ1bmMuY2FsbChkZWZlcnJlZCxkZWZlcnJlZCksZGVmZXJyZWR9LHdoZW46ZnVuY3Rpb24oc3Vib3JkaW5hdGUpe3ZhciBwcm9ncmVzc1ZhbHVlcyxwcm9ncmVzc0NvbnRleHRzLHJlc29sdmVDb250ZXh0cyxpPTAscmVzb2x2ZVZhbHVlcz1zbGljZS5jYWxsKGFyZ3VtZW50cyksbGVuZ3RoPXJlc29sdmVWYWx1ZXMubGVuZ3RoLHJlbWFpbmluZz0xIT09bGVuZ3RofHxzdWJvcmRpbmF0ZSYmalF1ZXJ5LmlzRnVuY3Rpb24oc3Vib3JkaW5hdGUucHJvbWlzZSk/bGVuZ3RoOjAsZGVmZXJyZWQ9MT09PXJlbWFpbmluZz9zdWJvcmRpbmF0ZTpqUXVlcnkuRGVmZXJyZWQoKSx1cGRhdGVGdW5jPWZ1bmN0aW9uKGksY29udGV4dHMsdmFsdWVzKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUpe2NvbnRleHRzW2ldPXRoaXMsdmFsdWVzW2ldPWFyZ3VtZW50cy5sZW5ndGg+MT9zbGljZS5jYWxsKGFyZ3VtZW50cyk6dmFsdWUsdmFsdWVzPT09cHJvZ3Jlc3NWYWx1ZXM/ZGVmZXJyZWQubm90aWZ5V2l0aChjb250ZXh0cyx2YWx1ZXMpOi0tcmVtYWluaW5nfHxkZWZlcnJlZC5yZXNvbHZlV2l0aChjb250ZXh0cyx2YWx1ZXMpfX07aWYobGVuZ3RoPjEpZm9yKHByb2dyZXNzVmFsdWVzPW5ldyBBcnJheShsZW5ndGgpLHByb2dyZXNzQ29udGV4dHM9bmV3IEFycmF5KGxlbmd0aCkscmVzb2x2ZUNvbnRleHRzPW5ldyBBcnJheShsZW5ndGgpO2xlbmd0aD5pO2krKylyZXNvbHZlVmFsdWVzW2ldJiZqUXVlcnkuaXNGdW5jdGlvbihyZXNvbHZlVmFsdWVzW2ldLnByb21pc2UpP3Jlc29sdmVWYWx1ZXNbaV0ucHJvbWlzZSgpLmRvbmUodXBkYXRlRnVuYyhpLHJlc29sdmVDb250ZXh0cyxyZXNvbHZlVmFsdWVzKSkuZmFpbChkZWZlcnJlZC5yZWplY3QpLnByb2dyZXNzKHVwZGF0ZUZ1bmMoaSxwcm9ncmVzc0NvbnRleHRzLHByb2dyZXNzVmFsdWVzKSk6LS1yZW1haW5pbmc7cmV0dXJuIHJlbWFpbmluZ3x8ZGVmZXJyZWQucmVzb2x2ZVdpdGgocmVzb2x2ZUNvbnRleHRzLHJlc29sdmVWYWx1ZXMpLGRlZmVycmVkLnByb21pc2UoKX19KTt2YXIgcmVhZHlMaXN0O2pRdWVyeS5mbi5yZWFkeT1mdW5jdGlvbihmbil7cmV0dXJuIGpRdWVyeS5yZWFkeS5wcm9taXNlKCkuZG9uZShmbiksdGhpc30salF1ZXJ5LmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxob2xkUmVhZHk6ZnVuY3Rpb24oaG9sZCl7aG9sZD9qUXVlcnkucmVhZHlXYWl0Kys6alF1ZXJ5LnJlYWR5KCEwKX0scmVhZHk6ZnVuY3Rpb24od2FpdCl7KHdhaXQ9PT0hMD8tLWpRdWVyeS5yZWFkeVdhaXQ6alF1ZXJ5LmlzUmVhZHkpfHwoalF1ZXJ5LmlzUmVhZHk9ITAsd2FpdCE9PSEwJiYtLWpRdWVyeS5yZWFkeVdhaXQ+MHx8KHJlYWR5TGlzdC5yZXNvbHZlV2l0aChkb2N1bWVudCxbalF1ZXJ5XSksalF1ZXJ5LmZuLnRyaWdnZXJIYW5kbGVyJiYoalF1ZXJ5KGRvY3VtZW50KS50cmlnZ2VySGFuZGxlcigicmVhZHkiKSxqUXVlcnkoZG9jdW1lbnQpLm9mZigicmVhZHkiKSkpKX19KSxqUXVlcnkucmVhZHkucHJvbWlzZT1mdW5jdGlvbihvYmope3JldHVybiByZWFkeUxpc3R8fChyZWFkeUxpc3Q9alF1ZXJ5LkRlZmVycmVkKCksImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGU/c2V0VGltZW91dChqUXVlcnkucmVhZHkpOihkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixjb21wbGV0ZWQsITEpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixjb21wbGV0ZWQsITEpKSkscmVhZHlMaXN0LnByb21pc2Uob2JqKX0salF1ZXJ5LnJlYWR5LnByb21pc2UoKTt2YXIgYWNjZXNzPWpRdWVyeS5hY2Nlc3M9ZnVuY3Rpb24oZWxlbXMsZm4sa2V5LHZhbHVlLGNoYWluYWJsZSxlbXB0eUdldCxyYXcpe3ZhciBpPTAsbGVuPWVsZW1zLmxlbmd0aCxidWxrPW51bGw9PWtleTtpZigib2JqZWN0Ij09PWpRdWVyeS50eXBlKGtleSkpe2NoYWluYWJsZT0hMDtmb3IoaSBpbiBrZXkpalF1ZXJ5LmFjY2VzcyhlbGVtcyxmbixpLGtleVtpXSwhMCxlbXB0eUdldCxyYXcpfWVsc2UgaWYodm9pZCAwIT09dmFsdWUmJihjaGFpbmFibGU9ITAsalF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpfHwocmF3PSEwKSxidWxrJiYocmF3Pyhmbi5jYWxsKGVsZW1zLHZhbHVlKSxmbj1udWxsKTooYnVsaz1mbixmbj1mdW5jdGlvbihlbGVtLGtleSx2YWx1ZSl7cmV0dXJuIGJ1bGsuY2FsbChqUXVlcnkoZWxlbSksdmFsdWUpfSkpLGZuKSlmb3IoO2xlbj5pO2krKylmbihlbGVtc1tpXSxrZXkscmF3P3ZhbHVlOnZhbHVlLmNhbGwoZWxlbXNbaV0saSxmbihlbGVtc1tpXSxrZXkpKSk7cmV0dXJuIGNoYWluYWJsZT9lbGVtczpidWxrP2ZuLmNhbGwoZWxlbXMpOmxlbj9mbihlbGVtc1swXSxrZXkpOmVtcHR5R2V0fTtqUXVlcnkuYWNjZXB0RGF0YT1mdW5jdGlvbihvd25lcil7cmV0dXJuIDE9PT1vd25lci5ub2RlVHlwZXx8OT09PW93bmVyLm5vZGVUeXBlfHwhK293bmVyLm5vZGVUeXBlfSxEYXRhLnVpZD0xLERhdGEuYWNjZXB0cz1qUXVlcnkuYWNjZXB0RGF0YSxEYXRhLnByb3RvdHlwZT17a2V5OmZ1bmN0aW9uKG93bmVyKXtpZighRGF0YS5hY2NlcHRzKG93bmVyKSlyZXR1cm4gMDt2YXIgZGVzY3JpcHRvcj17fSx1bmxvY2s9b3duZXJbdGhpcy5leHBhbmRvXTtpZighdW5sb2NrKXt1bmxvY2s9RGF0YS51aWQrKzt0cnl7ZGVzY3JpcHRvclt0aGlzLmV4cGFuZG9dPXt2YWx1ZTp1bmxvY2t9LE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG93bmVyLGRlc2NyaXB0b3IpfWNhdGNoKGUpe2Rlc2NyaXB0b3JbdGhpcy5leHBhbmRvXT11bmxvY2ssalF1ZXJ5LmV4dGVuZChvd25lcixkZXNjcmlwdG9yKX19cmV0dXJuIHRoaXMuY2FjaGVbdW5sb2NrXXx8KHRoaXMuY2FjaGVbdW5sb2NrXT17fSksdW5sb2NrfSxzZXQ6ZnVuY3Rpb24ob3duZXIsZGF0YSx2YWx1ZSl7dmFyIHByb3AsdW5sb2NrPXRoaXMua2V5KG93bmVyKSxjYWNoZT10aGlzLmNhY2hlW3VubG9ja107aWYoInN0cmluZyI9PXR5cGVvZiBkYXRhKWNhY2hlW2RhdGFdPXZhbHVlO2Vsc2UgaWYoalF1ZXJ5LmlzRW1wdHlPYmplY3QoY2FjaGUpKWpRdWVyeS5leHRlbmQodGhpcy5jYWNoZVt1bmxvY2tdLGRhdGEpO2Vsc2UgZm9yKHByb3AgaW4gZGF0YSljYWNoZVtwcm9wXT1kYXRhW3Byb3BdO3JldHVybiBjYWNoZX0sZ2V0OmZ1bmN0aW9uKG93bmVyLGtleSl7dmFyIGNhY2hlPXRoaXMuY2FjaGVbdGhpcy5rZXkob3duZXIpXTtyZXR1cm4gdm9pZCAwPT09a2V5P2NhY2hlOmNhY2hlW2tleV19LGFjY2VzczpmdW5jdGlvbihvd25lcixrZXksdmFsdWUpe3ZhciBzdG9yZWQ7cmV0dXJuIHZvaWQgMD09PWtleXx8a2V5JiYic3RyaW5nIj09dHlwZW9mIGtleSYmdm9pZCAwPT09dmFsdWU/KHN0b3JlZD10aGlzLmdldChvd25lcixrZXkpLHZvaWQgMCE9PXN0b3JlZD9zdG9yZWQ6dGhpcy5nZXQob3duZXIsalF1ZXJ5LmNhbWVsQ2FzZShrZXkpKSk6KHRoaXMuc2V0KG93bmVyLGtleSx2YWx1ZSksdm9pZCAwIT09dmFsdWU/dmFsdWU6a2V5KX0scmVtb3ZlOmZ1bmN0aW9uKG93bmVyLGtleSl7dmFyIGksbmFtZSxjYW1lbCx1bmxvY2s9dGhpcy5rZXkob3duZXIpLGNhY2hlPXRoaXMuY2FjaGVbdW5sb2NrXTtpZih2b2lkIDA9PT1rZXkpdGhpcy5jYWNoZVt1bmxvY2tdPXt9O2Vsc2V7alF1ZXJ5LmlzQXJyYXkoa2V5KT9uYW1lPWtleS5jb25jYXQoa2V5Lm1hcChqUXVlcnkuY2FtZWxDYXNlKSk6KGNhbWVsPWpRdWVyeS5jYW1lbENhc2Uoa2V5KSxrZXkgaW4gY2FjaGU/bmFtZT1ba2V5LGNhbWVsXToobmFtZT1jYW1lbCxuYW1lPW5hbWUgaW4gY2FjaGU/W25hbWVdOm5hbWUubWF0Y2gocm5vdHdoaXRlKXx8W10pKSxpPW5hbWUubGVuZ3RoO2Zvcig7aS0tOylkZWxldGUgY2FjaGVbbmFtZVtpXV19fSxoYXNEYXRhOmZ1bmN0aW9uKG93bmVyKXtyZXR1cm4halF1ZXJ5LmlzRW1wdHlPYmplY3QodGhpcy5jYWNoZVtvd25lclt0aGlzLmV4cGFuZG9dXXx8e30pfSxkaXNjYXJkOmZ1bmN0aW9uKG93bmVyKXtvd25lclt0aGlzLmV4cGFuZG9dJiZkZWxldGUgdGhpcy5jYWNoZVtvd25lclt0aGlzLmV4cGFuZG9dXX19O3ZhciBkYXRhX3ByaXY9bmV3IERhdGEsZGF0YV91c2VyPW5ldyBEYXRhLHJicmFjZT0vXig/Olx7W1x3XFddKlx9fFxbW1x3XFddKlxdKSQvLHJtdWx0aURhc2g9LyhbQS1aXSkvZztqUXVlcnkuZXh0ZW5kKHtoYXNEYXRhOmZ1bmN0aW9uKGVsZW0pe3JldHVybiBkYXRhX3VzZXIuaGFzRGF0YShlbGVtKXx8ZGF0YV9wcml2Lmhhc0RhdGEoZWxlbSl9LGRhdGE6ZnVuY3Rpb24oZWxlbSxuYW1lLGRhdGEpe3JldHVybiBkYXRhX3VzZXIuYWNjZXNzKGVsZW0sbmFtZSxkYXRhKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihlbGVtLG5hbWUpe2RhdGFfdXNlci5yZW1vdmUoZWxlbSxuYW1lKX0sX2RhdGE6ZnVuY3Rpb24oZWxlbSxuYW1lLGRhdGEpe3JldHVybiBkYXRhX3ByaXYuYWNjZXNzKGVsZW0sbmFtZSxkYXRhKX0sX3JlbW92ZURhdGE6ZnVuY3Rpb24oZWxlbSxuYW1lKXtkYXRhX3ByaXYucmVtb3ZlKGVsZW0sbmFtZSl9fSksalF1ZXJ5LmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihrZXksdmFsdWUpe3ZhciBpLG5hbWUsZGF0YSxlbGVtPXRoaXNbMF0sYXR0cnM9ZWxlbSYmZWxlbS5hdHRyaWJ1dGVzO2lmKHZvaWQgMD09PWtleSl7aWYodGhpcy5sZW5ndGgmJihkYXRhPWRhdGFfdXNlci5nZXQoZWxlbSksMT09PWVsZW0ubm9kZVR5cGUmJiFkYXRhX3ByaXYuZ2V0KGVsZW0sImhhc0RhdGFBdHRycyIpKSl7Zm9yKGk9YXR0cnMubGVuZ3RoO2ktLTspYXR0cnNbaV0mJihuYW1lPWF0dHJzW2ldLm5hbWUsMD09PW5hbWUuaW5kZXhPZigiZGF0YS0iKSYmKG5hbWU9alF1ZXJ5LmNhbWVsQ2FzZShuYW1lLnNsaWNlKDUpKSxkYXRhQXR0cihlbGVtLG5hbWUsZGF0YVtuYW1lXSkpKTtkYXRhX3ByaXYuc2V0KGVsZW0sImhhc0RhdGFBdHRycyIsITApfXJldHVybiBkYXRhfXJldHVybiJvYmplY3QiPT10eXBlb2Yga2V5P3RoaXMuZWFjaChmdW5jdGlvbigpe2RhdGFfdXNlci5zZXQodGhpcyxrZXkpfSk6YWNjZXNzKHRoaXMsZnVuY3Rpb24odmFsdWUpe3ZhciBkYXRhLGNhbWVsS2V5PWpRdWVyeS5jYW1lbENhc2Uoa2V5KTtpZihlbGVtJiZ2b2lkIDA9PT12YWx1ZSl7aWYoZGF0YT1kYXRhX3VzZXIuZ2V0KGVsZW0sa2V5KSx2b2lkIDAhPT1kYXRhKXJldHVybiBkYXRhO2lmKGRhdGE9ZGF0YV91c2VyLmdldChlbGVtLGNhbWVsS2V5KSx2b2lkIDAhPT1kYXRhKXJldHVybiBkYXRhOwppZihkYXRhPWRhdGFBdHRyKGVsZW0sY2FtZWxLZXksdm9pZCAwKSx2b2lkIDAhPT1kYXRhKXJldHVybiBkYXRhfWVsc2UgdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGRhdGE9ZGF0YV91c2VyLmdldCh0aGlzLGNhbWVsS2V5KTtkYXRhX3VzZXIuc2V0KHRoaXMsY2FtZWxLZXksdmFsdWUpLC0xIT09a2V5LmluZGV4T2YoIi0iKSYmdm9pZCAwIT09ZGF0YSYmZGF0YV91c2VyLnNldCh0aGlzLGtleSx2YWx1ZSl9KX0sbnVsbCx2YWx1ZSxhcmd1bWVudHMubGVuZ3RoPjEsbnVsbCwhMCl9LHJlbW92ZURhdGE6ZnVuY3Rpb24oa2V5KXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZGF0YV91c2VyLnJlbW92ZSh0aGlzLGtleSl9KX19KSxqUXVlcnkuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihlbGVtLHR5cGUsZGF0YSl7dmFyIHF1ZXVlO3JldHVybiBlbGVtPyh0eXBlPSh0eXBlfHwiZngiKSsicXVldWUiLHF1ZXVlPWRhdGFfcHJpdi5nZXQoZWxlbSx0eXBlKSxkYXRhJiYoIXF1ZXVlfHxqUXVlcnkuaXNBcnJheShkYXRhKT9xdWV1ZT1kYXRhX3ByaXYuYWNjZXNzKGVsZW0sdHlwZSxqUXVlcnkubWFrZUFycmF5KGRhdGEpKTpxdWV1ZS5wdXNoKGRhdGEpKSxxdWV1ZXx8W10pOnZvaWQgMH0sZGVxdWV1ZTpmdW5jdGlvbihlbGVtLHR5cGUpe3R5cGU9dHlwZXx8ImZ4Ijt2YXIgcXVldWU9alF1ZXJ5LnF1ZXVlKGVsZW0sdHlwZSksc3RhcnRMZW5ndGg9cXVldWUubGVuZ3RoLGZuPXF1ZXVlLnNoaWZ0KCksaG9va3M9alF1ZXJ5Ll9xdWV1ZUhvb2tzKGVsZW0sdHlwZSksbmV4dD1mdW5jdGlvbigpe2pRdWVyeS5kZXF1ZXVlKGVsZW0sdHlwZSl9OyJpbnByb2dyZXNzIj09PWZuJiYoZm49cXVldWUuc2hpZnQoKSxzdGFydExlbmd0aC0tKSxmbiYmKCJmeCI9PT10eXBlJiZxdWV1ZS51bnNoaWZ0KCJpbnByb2dyZXNzIiksZGVsZXRlIGhvb2tzLnN0b3AsZm4uY2FsbChlbGVtLG5leHQsaG9va3MpKSwhc3RhcnRMZW5ndGgmJmhvb2tzJiZob29rcy5lbXB0eS5maXJlKCl9LF9xdWV1ZUhvb2tzOmZ1bmN0aW9uKGVsZW0sdHlwZSl7dmFyIGtleT10eXBlKyJxdWV1ZUhvb2tzIjtyZXR1cm4gZGF0YV9wcml2LmdldChlbGVtLGtleSl8fGRhdGFfcHJpdi5hY2Nlc3MoZWxlbSxrZXkse2VtcHR5OmpRdWVyeS5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IikuYWRkKGZ1bmN0aW9uKCl7ZGF0YV9wcml2LnJlbW92ZShlbGVtLFt0eXBlKyJxdWV1ZSIsa2V5XSl9KX0pfX0pLGpRdWVyeS5mbi5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKHR5cGUsZGF0YSl7dmFyIHNldHRlcj0yO3JldHVybiJzdHJpbmciIT10eXBlb2YgdHlwZSYmKGRhdGE9dHlwZSx0eXBlPSJmeCIsc2V0dGVyLS0pLGFyZ3VtZW50cy5sZW5ndGg8c2V0dGVyP2pRdWVyeS5xdWV1ZSh0aGlzWzBdLHR5cGUpOnZvaWQgMD09PWRhdGE/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgcXVldWU9alF1ZXJ5LnF1ZXVlKHRoaXMsdHlwZSxkYXRhKTtqUXVlcnkuX3F1ZXVlSG9va3ModGhpcyx0eXBlKSwiZngiPT09dHlwZSYmImlucHJvZ3Jlc3MiIT09cXVldWVbMF0mJmpRdWVyeS5kZXF1ZXVlKHRoaXMsdHlwZSl9KX0sZGVxdWV1ZTpmdW5jdGlvbih0eXBlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LmRlcXVldWUodGhpcyx0eXBlKX0pfSxjbGVhclF1ZXVlOmZ1bmN0aW9uKHR5cGUpe3JldHVybiB0aGlzLnF1ZXVlKHR5cGV8fCJmeCIsW10pfSxwcm9taXNlOmZ1bmN0aW9uKHR5cGUsb2JqKXt2YXIgdG1wLGNvdW50PTEsZGVmZXI9alF1ZXJ5LkRlZmVycmVkKCksZWxlbWVudHM9dGhpcyxpPXRoaXMubGVuZ3RoLHJlc29sdmU9ZnVuY3Rpb24oKXstLWNvdW50fHxkZWZlci5yZXNvbHZlV2l0aChlbGVtZW50cyxbZWxlbWVudHNdKX07Zm9yKCJzdHJpbmciIT10eXBlb2YgdHlwZSYmKG9iaj10eXBlLHR5cGU9dm9pZCAwKSx0eXBlPXR5cGV8fCJmeCI7aS0tOyl0bXA9ZGF0YV9wcml2LmdldChlbGVtZW50c1tpXSx0eXBlKyJxdWV1ZUhvb2tzIiksdG1wJiZ0bXAuZW1wdHkmJihjb3VudCsrLHRtcC5lbXB0eS5hZGQocmVzb2x2ZSkpO3JldHVybiByZXNvbHZlKCksZGVmZXIucHJvbWlzZShvYmopfX0pO3ZhciBwbnVtPS9bKy1dPyg/OlxkKlwufClcZCsoPzpbZUVdWystXT9cZCt8KS8uc291cmNlLGNzc0V4cGFuZD1bIlRvcCIsIlJpZ2h0IiwiQm90dG9tIiwiTGVmdCJdLGlzSGlkZGVuPWZ1bmN0aW9uKGVsZW0sZWwpe3JldHVybiBlbGVtPWVsfHxlbGVtLCJub25lIj09PWpRdWVyeS5jc3MoZWxlbSwiZGlzcGxheSIpfHwhalF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKX0scmNoZWNrYWJsZVR5cGU9L14oPzpjaGVja2JveHxyYWRpbykkL2k7IWZ1bmN0aW9uKCl7dmFyIGZyYWdtZW50PWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxkaXY9ZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpLGlucHV0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7aW5wdXQuc2V0QXR0cmlidXRlKCJ0eXBlIiwicmFkaW8iKSxpbnB1dC5zZXRBdHRyaWJ1dGUoImNoZWNrZWQiLCJjaGVja2VkIiksaW5wdXQuc2V0QXR0cmlidXRlKCJuYW1lIiwidCIpLGRpdi5hcHBlbmRDaGlsZChpbnB1dCksc3VwcG9ydC5jaGVja0Nsb25lPWRpdi5jbG9uZU5vZGUoITApLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmNoZWNrZWQsZGl2LmlubmVySFRNTD0iPHRleHRhcmVhPng8L3RleHRhcmVhPiIsc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZD0hIWRpdi5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWV9KCk7dmFyIHN0cnVuZGVmaW5lZD0idW5kZWZpbmVkIjtzdXBwb3J0LmZvY3VzaW5CdWJibGVzPSJvbmZvY3VzaW4iaW4gd2luZG93O3ZhciBya2V5RXZlbnQ9L15rZXkvLHJtb3VzZUV2ZW50PS9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudSl8Y2xpY2svLHJmb2N1c01vcnBoPS9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLyxydHlwZW5hbWVzcGFjZT0vXihbXi5dKikoPzpcLiguKyl8KSQvO2pRdWVyeS5ldmVudD17Z2xvYmFsOnt9LGFkZDpmdW5jdGlvbihlbGVtLHR5cGVzLGhhbmRsZXIsZGF0YSxzZWxlY3Rvcil7dmFyIGhhbmRsZU9iakluLGV2ZW50SGFuZGxlLHRtcCxldmVudHMsdCxoYW5kbGVPYmosc3BlY2lhbCxoYW5kbGVycyx0eXBlLG5hbWVzcGFjZXMsb3JpZ1R5cGUsZWxlbURhdGE9ZGF0YV9wcml2LmdldChlbGVtKTtpZihlbGVtRGF0YSlmb3IoaGFuZGxlci5oYW5kbGVyJiYoaGFuZGxlT2JqSW49aGFuZGxlcixoYW5kbGVyPWhhbmRsZU9iakluLmhhbmRsZXIsc2VsZWN0b3I9aGFuZGxlT2JqSW4uc2VsZWN0b3IpLGhhbmRsZXIuZ3VpZHx8KGhhbmRsZXIuZ3VpZD1qUXVlcnkuZ3VpZCsrKSwoZXZlbnRzPWVsZW1EYXRhLmV2ZW50cyl8fChldmVudHM9ZWxlbURhdGEuZXZlbnRzPXt9KSwoZXZlbnRIYW5kbGU9ZWxlbURhdGEuaGFuZGxlKXx8KGV2ZW50SGFuZGxlPWVsZW1EYXRhLmhhbmRsZT1mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGpRdWVyeSE9PXN0cnVuZGVmaW5lZCYmalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCE9PWUudHlwZT9qUXVlcnkuZXZlbnQuZGlzcGF0Y2guYXBwbHkoZWxlbSxhcmd1bWVudHMpOnZvaWQgMH0pLHR5cGVzPSh0eXBlc3x8IiIpLm1hdGNoKHJub3R3aGl0ZSl8fFsiIl0sdD10eXBlcy5sZW5ndGg7dC0tOyl0bXA9cnR5cGVuYW1lc3BhY2UuZXhlYyh0eXBlc1t0XSl8fFtdLHR5cGU9b3JpZ1R5cGU9dG1wWzFdLG5hbWVzcGFjZXM9KHRtcFsyXXx8IiIpLnNwbGl0KCIuIikuc29ydCgpLHR5cGUmJihzcGVjaWFsPWpRdWVyeS5ldmVudC5zcGVjaWFsW3R5cGVdfHx7fSx0eXBlPShzZWxlY3Rvcj9zcGVjaWFsLmRlbGVnYXRlVHlwZTpzcGVjaWFsLmJpbmRUeXBlKXx8dHlwZSxzcGVjaWFsPWpRdWVyeS5ldmVudC5zcGVjaWFsW3R5cGVdfHx7fSxoYW5kbGVPYmo9alF1ZXJ5LmV4dGVuZCh7dHlwZTp0eXBlLG9yaWdUeXBlOm9yaWdUeXBlLGRhdGE6ZGF0YSxoYW5kbGVyOmhhbmRsZXIsZ3VpZDpoYW5kbGVyLmd1aWQsc2VsZWN0b3I6c2VsZWN0b3IsbmVlZHNDb250ZXh0OnNlbGVjdG9yJiZqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdChzZWxlY3RvciksbmFtZXNwYWNlOm5hbWVzcGFjZXMuam9pbigiLiIpfSxoYW5kbGVPYmpJbiksKGhhbmRsZXJzPWV2ZW50c1t0eXBlXSl8fChoYW5kbGVycz1ldmVudHNbdHlwZV09W10saGFuZGxlcnMuZGVsZWdhdGVDb3VudD0wLHNwZWNpYWwuc2V0dXAmJnNwZWNpYWwuc2V0dXAuY2FsbChlbGVtLGRhdGEsbmFtZXNwYWNlcyxldmVudEhhbmRsZSkhPT0hMXx8ZWxlbS5hZGRFdmVudExpc3RlbmVyJiZlbGVtLmFkZEV2ZW50TGlzdGVuZXIodHlwZSxldmVudEhhbmRsZSwhMSkpLHNwZWNpYWwuYWRkJiYoc3BlY2lhbC5hZGQuY2FsbChlbGVtLGhhbmRsZU9iaiksaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZHx8KGhhbmRsZU9iai5oYW5kbGVyLmd1aWQ9aGFuZGxlci5ndWlkKSksc2VsZWN0b3I/aGFuZGxlcnMuc3BsaWNlKGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywwLGhhbmRsZU9iaik6aGFuZGxlcnMucHVzaChoYW5kbGVPYmopLGpRdWVyeS5ldmVudC5nbG9iYWxbdHlwZV09ITApfSxyZW1vdmU6ZnVuY3Rpb24oZWxlbSx0eXBlcyxoYW5kbGVyLHNlbGVjdG9yLG1hcHBlZFR5cGVzKXt2YXIgaixvcmlnQ291bnQsdG1wLGV2ZW50cyx0LGhhbmRsZU9iaixzcGVjaWFsLGhhbmRsZXJzLHR5cGUsbmFtZXNwYWNlcyxvcmlnVHlwZSxlbGVtRGF0YT1kYXRhX3ByaXYuaGFzRGF0YShlbGVtKSYmZGF0YV9wcml2LmdldChlbGVtKTtpZihlbGVtRGF0YSYmKGV2ZW50cz1lbGVtRGF0YS5ldmVudHMpKXtmb3IodHlwZXM9KHR5cGVzfHwiIikubWF0Y2gocm5vdHdoaXRlKXx8WyIiXSx0PXR5cGVzLmxlbmd0aDt0LS07KWlmKHRtcD1ydHlwZW5hbWVzcGFjZS5leGVjKHR5cGVzW3RdKXx8W10sdHlwZT1vcmlnVHlwZT10bXBbMV0sbmFtZXNwYWNlcz0odG1wWzJdfHwiIikuc3BsaXQoIi4iKS5zb3J0KCksdHlwZSl7Zm9yKHNwZWNpYWw9alF1ZXJ5LmV2ZW50LnNwZWNpYWxbdHlwZV18fHt9LHR5cGU9KHNlbGVjdG9yP3NwZWNpYWwuZGVsZWdhdGVUeXBlOnNwZWNpYWwuYmluZFR5cGUpfHx0eXBlLGhhbmRsZXJzPWV2ZW50c1t0eXBlXXx8W10sdG1wPXRtcFsyXSYmbmV3IFJlZ0V4cCgiKF58XFwuKSIrbmFtZXNwYWNlcy5qb2luKCJcXC4oPzouKlxcLnwpIikrIihcXC58JCkiKSxvcmlnQ291bnQ9aj1oYW5kbGVycy5sZW5ndGg7ai0tOyloYW5kbGVPYmo9aGFuZGxlcnNbal0sIW1hcHBlZFR5cGVzJiZvcmlnVHlwZSE9PWhhbmRsZU9iai5vcmlnVHlwZXx8aGFuZGxlciYmaGFuZGxlci5ndWlkIT09aGFuZGxlT2JqLmd1aWR8fHRtcCYmIXRtcC50ZXN0KGhhbmRsZU9iai5uYW1lc3BhY2UpfHxzZWxlY3RvciYmc2VsZWN0b3IhPT1oYW5kbGVPYmouc2VsZWN0b3ImJigiKioiIT09c2VsZWN0b3J8fCFoYW5kbGVPYmouc2VsZWN0b3IpfHwoaGFuZGxlcnMuc3BsaWNlKGosMSksaGFuZGxlT2JqLnNlbGVjdG9yJiZoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS0sc3BlY2lhbC5yZW1vdmUmJnNwZWNpYWwucmVtb3ZlLmNhbGwoZWxlbSxoYW5kbGVPYmopKTtvcmlnQ291bnQmJiFoYW5kbGVycy5sZW5ndGgmJihzcGVjaWFsLnRlYXJkb3duJiZzcGVjaWFsLnRlYXJkb3duLmNhbGwoZWxlbSxuYW1lc3BhY2VzLGVsZW1EYXRhLmhhbmRsZSkhPT0hMXx8alF1ZXJ5LnJlbW92ZUV2ZW50KGVsZW0sdHlwZSxlbGVtRGF0YS5oYW5kbGUpLGRlbGV0ZSBldmVudHNbdHlwZV0pfWVsc2UgZm9yKHR5cGUgaW4gZXZlbnRzKWpRdWVyeS5ldmVudC5yZW1vdmUoZWxlbSx0eXBlK3R5cGVzW3RdLGhhbmRsZXIsc2VsZWN0b3IsITApO2pRdWVyeS5pc0VtcHR5T2JqZWN0KGV2ZW50cykmJihkZWxldGUgZWxlbURhdGEuaGFuZGxlLGRhdGFfcHJpdi5yZW1vdmUoZWxlbSwiZXZlbnRzIikpfX0sdHJpZ2dlcjpmdW5jdGlvbihldmVudCxkYXRhLGVsZW0sb25seUhhbmRsZXJzKXt2YXIgaSxjdXIsdG1wLGJ1YmJsZVR5cGUsb250eXBlLGhhbmRsZSxzcGVjaWFsLGV2ZW50UGF0aD1bZWxlbXx8ZG9jdW1lbnRdLHR5cGU9aGFzT3duLmNhbGwoZXZlbnQsInR5cGUiKT9ldmVudC50eXBlOmV2ZW50LG5hbWVzcGFjZXM9aGFzT3duLmNhbGwoZXZlbnQsIm5hbWVzcGFjZSIpP2V2ZW50Lm5hbWVzcGFjZS5zcGxpdCgiLiIpOltdO2lmKGN1cj10bXA9ZWxlbT1lbGVtfHxkb2N1bWVudCwzIT09ZWxlbS5ub2RlVHlwZSYmOCE9PWVsZW0ubm9kZVR5cGUmJiFyZm9jdXNNb3JwaC50ZXN0KHR5cGUralF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCkmJih0eXBlLmluZGV4T2YoIi4iKT49MCYmKG5hbWVzcGFjZXM9dHlwZS5zcGxpdCgiLiIpLHR5cGU9bmFtZXNwYWNlcy5zaGlmdCgpLG5hbWVzcGFjZXMuc29ydCgpKSxvbnR5cGU9dHlwZS5pbmRleE9mKCI6Iik8MCYmIm9uIit0eXBlLGV2ZW50PWV2ZW50W2pRdWVyeS5leHBhbmRvXT9ldmVudDpuZXcgalF1ZXJ5LkV2ZW50KHR5cGUsIm9iamVjdCI9PXR5cGVvZiBldmVudCYmZXZlbnQpLGV2ZW50LmlzVHJpZ2dlcj1vbmx5SGFuZGxlcnM/MjozLGV2ZW50Lm5hbWVzcGFjZT1uYW1lc3BhY2VzLmpvaW4oIi4iKSxldmVudC5uYW1lc3BhY2VfcmU9ZXZlbnQubmFtZXNwYWNlP25ldyBSZWdFeHAoIihefFxcLikiK25hbWVzcGFjZXMuam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIik6bnVsbCxldmVudC5yZXN1bHQ9dm9pZCAwLGV2ZW50LnRhcmdldHx8KGV2ZW50LnRhcmdldD1lbGVtKSxkYXRhPW51bGw9PWRhdGE/W2V2ZW50XTpqUXVlcnkubWFrZUFycmF5KGRhdGEsW2V2ZW50XSksc3BlY2lhbD1qUXVlcnkuZXZlbnQuc3BlY2lhbFt0eXBlXXx8e30sb25seUhhbmRsZXJzfHwhc3BlY2lhbC50cmlnZ2VyfHxzcGVjaWFsLnRyaWdnZXIuYXBwbHkoZWxlbSxkYXRhKSE9PSExKSl7aWYoIW9ubHlIYW5kbGVycyYmIXNwZWNpYWwubm9CdWJibGUmJiFqUXVlcnkuaXNXaW5kb3coZWxlbSkpe2ZvcihidWJibGVUeXBlPXNwZWNpYWwuZGVsZWdhdGVUeXBlfHx0eXBlLHJmb2N1c01vcnBoLnRlc3QoYnViYmxlVHlwZSt0eXBlKXx8KGN1cj1jdXIucGFyZW50Tm9kZSk7Y3VyO2N1cj1jdXIucGFyZW50Tm9kZSlldmVudFBhdGgucHVzaChjdXIpLHRtcD1jdXI7dG1wPT09KGVsZW0ub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZldmVudFBhdGgucHVzaCh0bXAuZGVmYXVsdFZpZXd8fHRtcC5wYXJlbnRXaW5kb3d8fHdpbmRvdyl9Zm9yKGk9MDsoY3VyPWV2ZW50UGF0aFtpKytdKSYmIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7KWV2ZW50LnR5cGU9aT4xP2J1YmJsZVR5cGU6c3BlY2lhbC5iaW5kVHlwZXx8dHlwZSxoYW5kbGU9KGRhdGFfcHJpdi5nZXQoY3VyLCJldmVudHMiKXx8e30pW2V2ZW50LnR5cGVdJiZkYXRhX3ByaXYuZ2V0KGN1ciwiaGFuZGxlIiksaGFuZGxlJiZoYW5kbGUuYXBwbHkoY3VyLGRhdGEpLGhhbmRsZT1vbnR5cGUmJmN1cltvbnR5cGVdLGhhbmRsZSYmaGFuZGxlLmFwcGx5JiZqUXVlcnkuYWNjZXB0RGF0YShjdXIpJiYoZXZlbnQucmVzdWx0PWhhbmRsZS5hcHBseShjdXIsZGF0YSksZXZlbnQucmVzdWx0PT09ITEmJmV2ZW50LnByZXZlbnREZWZhdWx0KCkpO3JldHVybiBldmVudC50eXBlPXR5cGUsb25seUhhbmRsZXJzfHxldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8c3BlY2lhbC5fZGVmYXVsdCYmc3BlY2lhbC5fZGVmYXVsdC5hcHBseShldmVudFBhdGgucG9wKCksZGF0YSkhPT0hMXx8IWpRdWVyeS5hY2NlcHREYXRhKGVsZW0pfHxvbnR5cGUmJmpRdWVyeS5pc0Z1bmN0aW9uKGVsZW1bdHlwZV0pJiYhalF1ZXJ5LmlzV2luZG93KGVsZW0pJiYodG1wPWVsZW1bb250eXBlXSx0bXAmJihlbGVtW29udHlwZV09bnVsbCksalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZD10eXBlLGVsZW1bdHlwZV0oKSxqUXVlcnkuZXZlbnQudHJpZ2dlcmVkPXZvaWQgMCx0bXAmJihlbGVtW29udHlwZV09dG1wKSksZXZlbnQucmVzdWx0fX0sZGlzcGF0Y2g6ZnVuY3Rpb24oZXZlbnQpe2V2ZW50PWpRdWVyeS5ldmVudC5maXgoZXZlbnQpO3ZhciBpLGoscmV0LG1hdGNoZWQsaGFuZGxlT2JqLGhhbmRsZXJRdWV1ZT1bXSxhcmdzPXNsaWNlLmNhbGwoYXJndW1lbnRzKSxoYW5kbGVycz0oZGF0YV9wcml2LmdldCh0aGlzLCJldmVudHMiKXx8e30pW2V2ZW50LnR5cGVdfHxbXSxzcGVjaWFsPWpRdWVyeS5ldmVudC5zcGVjaWFsW2V2ZW50LnR5cGVdfHx7fTtpZihhcmdzWzBdPWV2ZW50LGV2ZW50LmRlbGVnYXRlVGFyZ2V0PXRoaXMsIXNwZWNpYWwucHJlRGlzcGF0Y2h8fHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCh0aGlzLGV2ZW50KSE9PSExKXtmb3IoaGFuZGxlclF1ZXVlPWpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKHRoaXMsZXZlbnQsaGFuZGxlcnMpLGk9MDsobWF0Y2hlZD1oYW5kbGVyUXVldWVbaSsrXSkmJiFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOylmb3IoZXZlbnQuY3VycmVudFRhcmdldD1tYXRjaGVkLmVsZW0saj0wOyhoYW5kbGVPYmo9bWF0Y2hlZC5oYW5kbGVyc1tqKytdKSYmIWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCk7KSghZXZlbnQubmFtZXNwYWNlX3JlfHxldmVudC5uYW1lc3BhY2VfcmUudGVzdChoYW5kbGVPYmoubmFtZXNwYWNlKSkmJihldmVudC5oYW5kbGVPYmo9aGFuZGxlT2JqLGV2ZW50LmRhdGE9aGFuZGxlT2JqLmRhdGEscmV0PSgoalF1ZXJ5LmV2ZW50LnNwZWNpYWxbaGFuZGxlT2JqLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8aGFuZGxlT2JqLmhhbmRsZXIpLmFwcGx5KG1hdGNoZWQuZWxlbSxhcmdzKSx2b2lkIDAhPT1yZXQmJihldmVudC5yZXN1bHQ9cmV0KT09PSExJiYoZXZlbnQucHJldmVudERlZmF1bHQoKSxldmVudC5zdG9wUHJvcGFnYXRpb24oKSkpO3JldHVybiBzcGVjaWFsLnBvc3REaXNwYXRjaCYmc3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLGV2ZW50KSxldmVudC5yZXN1bHR9fSxoYW5kbGVyczpmdW5jdGlvbihldmVudCxoYW5kbGVycyl7dmFyIGksbWF0Y2hlcyxzZWwsaGFuZGxlT2JqLGhhbmRsZXJRdWV1ZT1bXSxkZWxlZ2F0ZUNvdW50PWhhbmRsZXJzLmRlbGVnYXRlQ291bnQsY3VyPWV2ZW50LnRhcmdldDtpZihkZWxlZ2F0ZUNvdW50JiZjdXIubm9kZVR5cGUmJighZXZlbnQuYnV0dG9ufHwiY2xpY2siIT09ZXZlbnQudHlwZSkpZm9yKDtjdXIhPT10aGlzO2N1cj1jdXIucGFyZW50Tm9kZXx8dGhpcylpZihjdXIuZGlzYWJsZWQhPT0hMHx8ImNsaWNrIiE9PWV2ZW50LnR5cGUpe2ZvcihtYXRjaGVzPVtdLGk9MDtkZWxlZ2F0ZUNvdW50Pmk7aSsrKWhhbmRsZU9iaj1oYW5kbGVyc1tpXSxzZWw9aGFuZGxlT2JqLnNlbGVjdG9yKyIgIix2b2lkIDA9PT1tYXRjaGVzW3NlbF0mJihtYXRjaGVzW3NlbF09aGFuZGxlT2JqLm5lZWRzQ29udGV4dD9qUXVlcnkoc2VsLHRoaXMpLmluZGV4KGN1cik+PTA6alF1ZXJ5LmZpbmQoc2VsLHRoaXMsbnVsbCxbY3VyXSkubGVuZ3RoKSxtYXRjaGVzW3NlbF0mJm1hdGNoZXMucHVzaChoYW5kbGVPYmopO21hdGNoZXMubGVuZ3RoJiZoYW5kbGVyUXVldWUucHVzaCh7ZWxlbTpjdXIsaGFuZGxlcnM6bWF0Y2hlc30pfXJldHVybiBkZWxlZ2F0ZUNvdW50PGhhbmRsZXJzLmxlbmd0aCYmaGFuZGxlclF1ZXVlLnB1c2goe2VsZW06dGhpcyxoYW5kbGVyczpoYW5kbGVycy5zbGljZShkZWxlZ2F0ZUNvdW50KX0pLGhhbmRsZXJRdWV1ZX0scHJvcHM6ImFsdEtleSBidWJibGVzIGNhbmNlbGFibGUgY3RybEtleSBjdXJyZW50VGFyZ2V0IGV2ZW50UGhhc2UgbWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaCIuc3BsaXQoIiAiKSxmaXhIb29rczp7fSxrZXlIb29rczp7cHJvcHM6ImNoYXIgY2hhckNvZGUga2V5IGtleUNvZGUiLnNwbGl0KCIgIiksZmlsdGVyOmZ1bmN0aW9uKGV2ZW50LG9yaWdpbmFsKXtyZXR1cm4gbnVsbD09ZXZlbnQud2hpY2gmJihldmVudC53aGljaD1udWxsIT1vcmlnaW5hbC5jaGFyQ29kZT9vcmlnaW5hbC5jaGFyQ29kZTpvcmlnaW5hbC5rZXlDb2RlKSxldmVudH19LG1vdXNlSG9va3M6e3Byb3BzOiJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VYIHBhZ2VZIHNjcmVlblggc2NyZWVuWSB0b0VsZW1lbnQiLnNwbGl0KCIgIiksZmlsdGVyOmZ1bmN0aW9uKGV2ZW50LG9yaWdpbmFsKXt2YXIgZXZlbnREb2MsZG9jLGJvZHksYnV0dG9uPW9yaWdpbmFsLmJ1dHRvbjtyZXR1cm4gbnVsbD09ZXZlbnQucGFnZVgmJm51bGwhPW9yaWdpbmFsLmNsaWVudFgmJihldmVudERvYz1ldmVudC50YXJnZXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQsZG9jPWV2ZW50RG9jLmRvY3VtZW50RWxlbWVudCxib2R5PWV2ZW50RG9jLmJvZHksZXZlbnQucGFnZVg9b3JpZ2luYWwuY2xpZW50WCsoZG9jJiZkb2Muc2Nyb2xsTGVmdHx8Ym9keSYmYm9keS5zY3JvbGxMZWZ0fHwwKS0oZG9jJiZkb2MuY2xpZW50TGVmdHx8Ym9keSYmYm9keS5jbGllbnRMZWZ0fHwwKSxldmVudC5wYWdlWT1vcmlnaW5hbC5jbGllbnRZKyhkb2MmJmRvYy5zY3JvbGxUb3B8fGJvZHkmJmJvZHkuc2Nyb2xsVG9wfHwwKS0oZG9jJiZkb2MuY2xpZW50VG9wfHxib2R5JiZib2R5LmNsaWVudFRvcHx8MCkpLGV2ZW50LndoaWNofHx2b2lkIDA9PT1idXR0b258fChldmVudC53aGljaD0xJmJ1dHRvbj8xOjImYnV0dG9uPzM6NCZidXR0b24/MjowKSxldmVudH19LGZpeDpmdW5jdGlvbihldmVudCl7aWYoZXZlbnRbalF1ZXJ5LmV4cGFuZG9dKXJldHVybiBldmVudDt2YXIgaSxwcm9wLGNvcHksdHlwZT1ldmVudC50eXBlLG9yaWdpbmFsRXZlbnQ9ZXZlbnQsZml4SG9vaz10aGlzLmZpeEhvb2tzW3R5cGVdO2ZvcihmaXhIb29rfHwodGhpcy5maXhIb29rc1t0eXBlXT1maXhIb29rPXJtb3VzZUV2ZW50LnRlc3QodHlwZSk/dGhpcy5tb3VzZUhvb2tzOnJrZXlFdmVudC50ZXN0KHR5cGUpP3RoaXMua2V5SG9va3M6e30pLGNvcHk9Zml4SG9vay5wcm9wcz90aGlzLnByb3BzLmNvbmNhdChmaXhIb29rLnByb3BzKTp0aGlzLnByb3BzLGV2ZW50PW5ldyBqUXVlcnkuRXZlbnQob3JpZ2luYWxFdmVudCksaT1jb3B5Lmxlbmd0aDtpLS07KXByb3A9Y29weVtpXSxldmVudFtwcm9wXT1vcmlnaW5hbEV2ZW50W3Byb3BdO3JldHVybiBldmVudC50YXJnZXR8fChldmVudC50YXJnZXQ9ZG9jdW1lbnQpLDM9PT1ldmVudC50YXJnZXQubm9kZVR5cGUmJihldmVudC50YXJnZXQ9ZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUpLGZpeEhvb2suZmlsdGVyP2ZpeEhvb2suZmlsdGVyKGV2ZW50LG9yaWdpbmFsRXZlbnQpOmV2ZW50fSxzcGVjaWFsOntsb2FkOntub0J1YmJsZTohMH0sZm9jdXM6e3RyaWdnZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcyE9PXNhZmVBY3RpdmVFbGVtZW50KCkmJnRoaXMuZm9jdXM/KHRoaXMuZm9jdXMoKSwhMSk6dm9pZCAwfSxkZWxlZ2F0ZVR5cGU6ImZvY3VzaW4ifSxibHVyOnt0cmlnZ2VyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXM9PT1zYWZlQWN0aXZlRWxlbWVudCgpJiZ0aGlzLmJsdXI/KHRoaXMuYmx1cigpLCExKTp2b2lkIDB9LGRlbGVnYXRlVHlwZToiZm9jdXNvdXQifSxjbGljazp7dHJpZ2dlcjpmdW5jdGlvbigpe3JldHVybiJjaGVja2JveCI9PT10aGlzLnR5cGUmJnRoaXMuY2xpY2smJmpRdWVyeS5ub2RlTmFtZSh0aGlzLCJpbnB1dCIpPyh0aGlzLmNsaWNrKCksITEpOnZvaWQgMH0sX2RlZmF1bHQ6ZnVuY3Rpb24oZXZlbnQpe3JldHVybiBqUXVlcnkubm9kZU5hbWUoZXZlbnQudGFyZ2V0LCJhIil9fSxiZWZvcmV1bmxvYWQ6e3Bvc3REaXNwYXRjaDpmdW5jdGlvbihldmVudCl7dm9pZCAwIT09ZXZlbnQucmVzdWx0JiZldmVudC5vcmlnaW5hbEV2ZW50JiYoZXZlbnQub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZT1ldmVudC5yZXN1bHQpfX19LHNpbXVsYXRlOmZ1bmN0aW9uKHR5cGUsZWxlbSxldmVudCxidWJibGUpe3ZhciBlPWpRdWVyeS5leHRlbmQobmV3IGpRdWVyeS5FdmVudCxldmVudCx7dHlwZTp0eXBlLGlzU2ltdWxhdGVkOiEwLG9yaWdpbmFsRXZlbnQ6e319KTtidWJibGU/alF1ZXJ5LmV2ZW50LnRyaWdnZXIoZSxudWxsLGVsZW0pOmpRdWVyeS5ldmVudC5kaXNwYXRjaC5jYWxsKGVsZW0sZSksZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmZXZlbnQucHJldmVudERlZmF1bHQoKX19LGpRdWVyeS5yZW1vdmVFdmVudD1mdW5jdGlvbihlbGVtLHR5cGUsaGFuZGxlKXtlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXImJmVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLGhhbmRsZSwhMSl9LGpRdWVyeS5FdmVudD1mdW5jdGlvbihzcmMscHJvcHMpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50PyhzcmMmJnNyYy50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9c3JjLHRoaXMudHlwZT1zcmMudHlwZSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1zcmMuZGVmYXVsdFByZXZlbnRlZHx8dm9pZCAwPT09c3JjLmRlZmF1bHRQcmV2ZW50ZWQmJnNyYy5yZXR1cm5WYWx1ZT09PSExP3JldHVyblRydWU6cmV0dXJuRmFsc2UpOnRoaXMudHlwZT1zcmMscHJvcHMmJmpRdWVyeS5leHRlbmQodGhpcyxwcm9wcyksdGhpcy50aW1lU3RhbXA9c3JjJiZzcmMudGltZVN0YW1wfHxqUXVlcnkubm93KCksdm9pZCh0aGlzW2pRdWVyeS5leHBhbmRvXT0hMCkpOm5ldyBqUXVlcnkuRXZlbnQoc3JjLHByb3BzKX0salF1ZXJ5LkV2ZW50LnByb3RvdHlwZT17aXNEZWZhdWx0UHJldmVudGVkOnJldHVybkZhbHNlLGlzUHJvcGFnYXRpb25TdG9wcGVkOnJldHVybkZhbHNlLGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOnJldHVybkZhbHNlLHByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPXJldHVyblRydWUsZSYmZS5wcmV2ZW50RGVmYXVsdCYmZS5wcmV2ZW50RGVmYXVsdCgpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1yZXR1cm5UcnVlLGUmJmUuc3RvcFByb3BhZ2F0aW9uJiZlLnN0b3BQcm9wYWdhdGlvbigpfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZD1yZXR1cm5UcnVlLGUmJmUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uJiZlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHRoaXMuc3RvcFByb3BhZ2F0aW9uKCl9fSxqUXVlcnkuZWFjaCh7bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCIscG9pbnRlcmVudGVyOiJwb2ludGVyb3ZlciIscG9pbnRlcmxlYXZlOiJwb2ludGVyb3V0In0sZnVuY3Rpb24ob3JpZyxmaXgpe2pRdWVyeS5ldmVudC5zcGVjaWFsW29yaWddPXtkZWxlZ2F0ZVR5cGU6Zml4LGJpbmRUeXBlOmZpeCxoYW5kbGU6ZnVuY3Rpb24oZXZlbnQpe3ZhciByZXQsdGFyZ2V0PXRoaXMscmVsYXRlZD1ldmVudC5yZWxhdGVkVGFyZ2V0LGhhbmRsZU9iaj1ldmVudC5oYW5kbGVPYmo7cmV0dXJuKCFyZWxhdGVkfHxyZWxhdGVkIT09dGFyZ2V0JiYhalF1ZXJ5LmNvbnRhaW5zKHRhcmdldCxyZWxhdGVkKSkmJihldmVudC50eXBlPWhhbmRsZU9iai5vcmlnVHlwZSxyZXQ9aGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGV2ZW50LnR5cGU9Zml4KSxyZXR9fX0pLHN1cHBvcnQuZm9jdXNpbkJ1YmJsZXN8fGpRdWVyeS5lYWNoKHtmb2N1czoiZm9jdXNpbiIsYmx1cjoiZm9jdXNvdXQifSxmdW5jdGlvbihvcmlnLGZpeCl7dmFyIGhhbmRsZXI9ZnVuY3Rpb24oZXZlbnQpe2pRdWVyeS5ldmVudC5zaW11bGF0ZShmaXgsZXZlbnQudGFyZ2V0LGpRdWVyeS5ldmVudC5maXgoZXZlbnQpLCEwKX07alF1ZXJ5LmV2ZW50LnNwZWNpYWxbZml4XT17c2V0dXA6ZnVuY3Rpb24oKXt2YXIgZG9jPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxhdHRhY2hlcz1kYXRhX3ByaXYuYWNjZXNzKGRvYyxmaXgpO2F0dGFjaGVzfHxkb2MuYWRkRXZlbnRMaXN0ZW5lcihvcmlnLGhhbmRsZXIsITApLGRhdGFfcHJpdi5hY2Nlc3MoZG9jLGZpeCwoYXR0YWNoZXN8fDApKzEpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3ZhciBkb2M9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLGF0dGFjaGVzPWRhdGFfcHJpdi5hY2Nlc3MoZG9jLGZpeCktMTthdHRhY2hlcz9kYXRhX3ByaXYuYWNjZXNzKGRvYyxmaXgsYXR0YWNoZXMpOihkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcihvcmlnLGhhbmRsZXIsITApLGRhdGFfcHJpdi5yZW1vdmUoZG9jLGZpeCkpfX19KSxqUXVlcnkuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbih0eXBlcyxzZWxlY3RvcixkYXRhLGZuLG9uZSl7dmFyIG9yaWdGbix0eXBlO2lmKCJvYmplY3QiPT10eXBlb2YgdHlwZXMpeyJzdHJpbmciIT10eXBlb2Ygc2VsZWN0b3ImJihkYXRhPWRhdGF8fHNlbGVjdG9yLHNlbGVjdG9yPXZvaWQgMCk7Zm9yKHR5cGUgaW4gdHlwZXMpdGhpcy5vbih0eXBlLHNlbGVjdG9yLGRhdGEsdHlwZXNbdHlwZV0sb25lKTtyZXR1cm4gdGhpc31pZihudWxsPT1kYXRhJiZudWxsPT1mbj8oZm49c2VsZWN0b3IsZGF0YT1zZWxlY3Rvcj12b2lkIDApOm51bGw9PWZuJiYoInN0cmluZyI9PXR5cGVvZiBzZWxlY3Rvcj8oZm49ZGF0YSxkYXRhPXZvaWQgMCk6KGZuPWRhdGEsZGF0YT1zZWxlY3RvcixzZWxlY3Rvcj12b2lkIDApKSxmbj09PSExKWZuPXJldHVybkZhbHNlO2Vsc2UgaWYoIWZuKXJldHVybiB0aGlzO3JldHVybiAxPT09b25lJiYob3JpZ0ZuPWZuLGZuPWZ1bmN0aW9uKGV2ZW50KXtyZXR1cm4galF1ZXJ5KCkub2ZmKGV2ZW50KSxvcmlnRm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmbi5ndWlkPW9yaWdGbi5ndWlkfHwob3JpZ0ZuLmd1aWQ9alF1ZXJ5Lmd1aWQrKykpLHRoaXMuZWFjaChmdW5jdGlvbigpe2pRdWVyeS5ldmVudC5hZGQodGhpcyx0eXBlcyxmbixkYXRhLHNlbGVjdG9yKX0pfSxvbmU6ZnVuY3Rpb24odHlwZXMsc2VsZWN0b3IsZGF0YSxmbil7cmV0dXJuIHRoaXMub24odHlwZXMsc2VsZWN0b3IsZGF0YSxmbiwxKX0sb2ZmOmZ1bmN0aW9uKHR5cGVzLHNlbGVjdG9yLGZuKXt2YXIgaGFuZGxlT2JqLHR5cGU7aWYodHlwZXMmJnR5cGVzLnByZXZlbnREZWZhdWx0JiZ0eXBlcy5oYW5kbGVPYmopcmV0dXJuIGhhbmRsZU9iaj10eXBlcy5oYW5kbGVPYmosalF1ZXJ5KHR5cGVzLmRlbGVnYXRlVGFyZ2V0KS5vZmYoaGFuZGxlT2JqLm5hbWVzcGFjZT9oYW5kbGVPYmoub3JpZ1R5cGUrIi4iK2hhbmRsZU9iai5uYW1lc3BhY2U6aGFuZGxlT2JqLm9yaWdUeXBlLGhhbmRsZU9iai5zZWxlY3RvcixoYW5kbGVPYmouaGFuZGxlciksdGhpcztpZigib2JqZWN0Ij09dHlwZW9mIHR5cGVzKXtmb3IodHlwZSBpbiB0eXBlcyl0aGlzLm9mZih0eXBlLHNlbGVjdG9yLHR5cGVzW3R5cGVdKTtyZXR1cm4gdGhpc31yZXR1cm4oc2VsZWN0b3I9PT0hMXx8ImZ1bmN0aW9uIj09dHlwZW9mIHNlbGVjdG9yKSYmKGZuPXNlbGVjdG9yLHNlbGVjdG9yPXZvaWQgMCksZm49PT0hMSYmKGZuPXJldHVybkZhbHNlKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtqUXVlcnkuZXZlbnQucmVtb3ZlKHRoaXMsdHlwZXMsZm4sc2VsZWN0b3IpfSl9LHRyaWdnZXI6ZnVuY3Rpb24odHlwZSxkYXRhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LmV2ZW50LnRyaWdnZXIodHlwZSxkYXRhLHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKHR5cGUsZGF0YSl7dmFyIGVsZW09dGhpc1swXTtyZXR1cm4gZWxlbT9qUXVlcnkuZXZlbnQudHJpZ2dlcih0eXBlLGRhdGEsZWxlbSwhMCk6dm9pZCAwfX0pO3ZhciByeGh0bWxUYWc9LzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW1x3Ol0rKVtePl0qKVwvPi9naSxydGFnTmFtZT0vPChbXHc6XSspLyxyaHRtbD0vPHwmIz9cdys7Lyxybm9Jbm5lcmh0bWw9LzwoPzpzY3JpcHR8c3R5bGV8bGluaykvaSxyY2hlY2tlZD0vY2hlY2tlZFxzKig/OltePV18PVxzKi5jaGVja2VkLikvaSxyc2NyaXB0VHlwZT0vXiR8XC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kscnNjcmlwdFR5cGVNYXNrZWQ9L150cnVlXC8oLiopLyxyY2xlYW5TY3JpcHQ9L15ccyo8ISg/OlxbQ0RBVEFcW3wtLSl8KD86XF1cXXwtLSk+XHMqJC9nLHdyYXBNYXA9e29wdGlvbjpbMSwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsIjwvc2VsZWN0PiJdLHRoZWFkOlsxLCI8dGFibGU+IiwiPC90YWJsZT4iXSxjb2w6WzIsIjx0YWJsZT48Y29sZ3JvdXA+IiwiPC9jb2xncm91cD48L3RhYmxlPiJdLHRyOlsyLCI8dGFibGU+PHRib2R5PiIsIjwvdGJvZHk+PC90YWJsZT4iXSx0ZDpbMywiPHRhYmxlPjx0Ym9keT48dHI+IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il0sX2RlZmF1bHQ6WzAsIiIsIiJdfTt3cmFwTWFwLm9wdGdyb3VwPXdyYXBNYXAub3B0aW9uLHdyYXBNYXAudGJvZHk9d3JhcE1hcC50Zm9vdD13cmFwTWFwLmNvbGdyb3VwPXdyYXBNYXAuY2FwdGlvbj13cmFwTWFwLnRoZWFkLHdyYXBNYXAudGg9d3JhcE1hcC50ZCxqUXVlcnkuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbihlbGVtLGRhdGFBbmRFdmVudHMsZGVlcERhdGFBbmRFdmVudHMpe3ZhciBpLGwsc3JjRWxlbWVudHMsZGVzdEVsZW1lbnRzLGNsb25lPWVsZW0uY2xvbmVOb2RlKCEwKSxpblBhZ2U9alF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKTtpZighKHN1cHBvcnQubm9DbG9uZUNoZWNrZWR8fDEhPT1lbGVtLm5vZGVUeXBlJiYxMSE9PWVsZW0ubm9kZVR5cGV8fGpRdWVyeS5pc1hNTERvYyhlbGVtKSkpZm9yKGRlc3RFbGVtZW50cz1nZXRBbGwoY2xvbmUpLHNyY0VsZW1lbnRzPWdldEFsbChlbGVtKSxpPTAsbD1zcmNFbGVtZW50cy5sZW5ndGg7bD5pO2krKylmaXhJbnB1dChzcmNFbGVtZW50c1tpXSxkZXN0RWxlbWVudHNbaV0pO2lmKGRhdGFBbmRFdmVudHMpaWYoZGVlcERhdGFBbmRFdmVudHMpZm9yKHNyY0VsZW1lbnRzPXNyY0VsZW1lbnRzfHxnZXRBbGwoZWxlbSksZGVzdEVsZW1lbnRzPWRlc3RFbGVtZW50c3x8Z2V0QWxsKGNsb25lKSxpPTAsbD1zcmNFbGVtZW50cy5sZW5ndGg7bD5pO2krKyljbG9uZUNvcHlFdmVudChzcmNFbGVtZW50c1tpXSxkZXN0RWxlbWVudHNbaV0pO2Vsc2UgY2xvbmVDb3B5RXZlbnQoZWxlbSxjbG9uZSk7cmV0dXJuIGRlc3RFbGVtZW50cz1nZXRBbGwoY2xvbmUsInNjcmlwdCIpLGRlc3RFbGVtZW50cy5sZW5ndGg+MCYmc2V0R2xvYmFsRXZhbChkZXN0RWxlbWVudHMsIWluUGFnZSYmZ2V0QWxsKGVsZW0sInNjcmlwdCIpKSxjbG9uZX0sYnVpbGRGcmFnbWVudDpmdW5jdGlvbihlbGVtcyxjb250ZXh0LHNjcmlwdHMsc2VsZWN0aW9uKXtmb3IodmFyIGVsZW0sdG1wLHRhZyx3cmFwLGNvbnRhaW5zLGosZnJhZ21lbnQ9Y29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbm9kZXM9W10saT0wLGw9ZWxlbXMubGVuZ3RoO2w+aTtpKyspaWYoZWxlbT1lbGVtc1tpXSxlbGVtfHwwPT09ZWxlbSlpZigib2JqZWN0Ij09PWpRdWVyeS50eXBlKGVsZW0pKWpRdWVyeS5tZXJnZShub2RlcyxlbGVtLm5vZGVUeXBlP1tlbGVtXTplbGVtKTtlbHNlIGlmKHJodG1sLnRlc3QoZWxlbSkpe2Zvcih0bXA9dG1wfHxmcmFnbWVudC5hcHBlbmRDaGlsZChjb250ZXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpKSx0YWc9KHJ0YWdOYW1lLmV4ZWMoZWxlbSl8fFsiIiwiIl0pWzFdLnRvTG93ZXJDYXNlKCksd3JhcD13cmFwTWFwW3RhZ118fHdyYXBNYXAuX2RlZmF1bHQsdG1wLmlubmVySFRNTD13cmFwWzFdK2VsZW0ucmVwbGFjZShyeGh0bWxUYWcsIjwkMT48LyQyPiIpK3dyYXBbMl0saj13cmFwWzBdO2otLTspdG1wPXRtcC5sYXN0Q2hpbGQ7alF1ZXJ5Lm1lcmdlKG5vZGVzLHRtcC5jaGlsZE5vZGVzKSx0bXA9ZnJhZ21lbnQuZmlyc3RDaGlsZCx0bXAudGV4dENvbnRlbnQ9IiJ9ZWxzZSBub2Rlcy5wdXNoKGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoZWxlbSkpO2ZvcihmcmFnbWVudC50ZXh0Q29udGVudD0iIixpPTA7ZWxlbT1ub2Rlc1tpKytdOylpZigoIXNlbGVjdGlvbnx8LTE9PT1qUXVlcnkuaW5BcnJheShlbGVtLHNlbGVjdGlvbikpJiYoY29udGFpbnM9alF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKSx0bXA9Z2V0QWxsKGZyYWdtZW50LmFwcGVuZENoaWxkKGVsZW0pLCJzY3JpcHQiKSxjb250YWlucyYmc2V0R2xvYmFsRXZhbCh0bXApLHNjcmlwdHMpKWZvcihqPTA7ZWxlbT10bXBbaisrXTspcnNjcmlwdFR5cGUudGVzdChlbGVtLnR5cGV8fCIiKSYmc2NyaXB0cy5wdXNoKGVsZW0pO3JldHVybiBmcmFnbWVudH0sY2xlYW5EYXRhOmZ1bmN0aW9uKGVsZW1zKXtmb3IodmFyIGRhdGEsZWxlbSx0eXBlLGtleSxzcGVjaWFsPWpRdWVyeS5ldmVudC5zcGVjaWFsLGk9MDt2b2lkIDAhPT0oZWxlbT1lbGVtc1tpXSk7aSsrKXtpZihqUXVlcnkuYWNjZXB0RGF0YShlbGVtKSYmKGtleT1lbGVtW2RhdGFfcHJpdi5leHBhbmRvXSxrZXkmJihkYXRhPWRhdGFfcHJpdi5jYWNoZVtrZXldKSkpe2lmKGRhdGEuZXZlbnRzKWZvcih0eXBlIGluIGRhdGEuZXZlbnRzKXNwZWNpYWxbdHlwZV0/alF1ZXJ5LmV2ZW50LnJlbW92ZShlbGVtLHR5cGUpOmpRdWVyeS5yZW1vdmVFdmVudChlbGVtLHR5cGUsZGF0YS5oYW5kbGUpO2RhdGFfcHJpdi5jYWNoZVtrZXldJiZkZWxldGUgZGF0YV9wcml2LmNhY2hlW2tleV19ZGVsZXRlIGRhdGFfdXNlci5jYWNoZVtlbGVtW2RhdGFfdXNlci5leHBhbmRvXV19fX0pLGpRdWVyeS5mbi5leHRlbmQoe3RleHQ6ZnVuY3Rpb24odmFsdWUpe3JldHVybiBhY2Nlc3ModGhpcyxmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZvaWQgMD09PXZhbHVlP2pRdWVyeS50ZXh0KHRoaXMpOnRoaXMuZW1wdHkoKS5lYWNoKGZ1bmN0aW9uKCl7KDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKSYmKHRoaXMudGV4dENvbnRlbnQ9dmFsdWUpfSl9LG51bGwsdmFsdWUsYXJndW1lbnRzLmxlbmd0aCl9LGFwcGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cyxmdW5jdGlvbihlbGVtKXtpZigxPT09dGhpcy5ub2RlVHlwZXx8MTE9PT10aGlzLm5vZGVUeXBlfHw5PT09dGhpcy5ub2RlVHlwZSl7dmFyIHRhcmdldD1tYW5pcHVsYXRpb25UYXJnZXQodGhpcyxlbGVtKTt0YXJnZXQuYXBwZW5kQ2hpbGQoZWxlbSl9fSl9LHByZXBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24oZWxlbSl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciB0YXJnZXQ9bWFuaXB1bGF0aW9uVGFyZ2V0KHRoaXMsZWxlbSk7dGFyZ2V0Lmluc2VydEJlZm9yZShlbGVtLHRhcmdldC5maXJzdENoaWxkKX19KX0sYmVmb3JlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKGVsZW0pe3RoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtLHRoaXMpfSl9LGFmdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKGVsZW0pe3RoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtLHRoaXMubmV4dFNpYmxpbmcpfSl9LHJlbW92ZTpmdW5jdGlvbihzZWxlY3RvcixrZWVwRGF0YSl7Zm9yKHZhciBlbGVtLGVsZW1zPXNlbGVjdG9yP2pRdWVyeS5maWx0ZXIoc2VsZWN0b3IsdGhpcyk6dGhpcyxpPTA7bnVsbCE9KGVsZW09ZWxlbXNbaV0pO2krKylrZWVwRGF0YXx8MSE9PWVsZW0ubm9kZVR5cGV8fGpRdWVyeS5jbGVhbkRhdGEoZ2V0QWxsKGVsZW0pKSxlbGVtLnBhcmVudE5vZGUmJihrZWVwRGF0YSYmalF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKSYmc2V0R2xvYmFsRXZhbChnZXRBbGwoZWxlbSwic2NyaXB0IikpLGVsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtKSk7cmV0dXJuIHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7Zm9yKHZhciBlbGVtLGk9MDtudWxsIT0oZWxlbT10aGlzW2ldKTtpKyspMT09PWVsZW0ubm9kZVR5cGUmJihqUXVlcnkuY2xlYW5EYXRhKGdldEFsbChlbGVtLCExKSksZWxlbS50ZXh0Q29udGVudD0iIik7cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGRhdGFBbmRFdmVudHMsZGVlcERhdGFBbmRFdmVudHMpe3JldHVybiBkYXRhQW5kRXZlbnRzPW51bGw9PWRhdGFBbmRFdmVudHM/ITE6ZGF0YUFuZEV2ZW50cyxkZWVwRGF0YUFuZEV2ZW50cz1udWxsPT1kZWVwRGF0YUFuZEV2ZW50cz9kYXRhQW5kRXZlbnRzOmRlZXBEYXRhQW5kRXZlbnRzLHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGpRdWVyeS5jbG9uZSh0aGlzLGRhdGFBbmRFdmVudHMsZGVlcERhdGFBbmRFdmVudHMpfSl9LGh0bWw6ZnVuY3Rpb24odmFsdWUpe3JldHVybiBhY2Nlc3ModGhpcyxmdW5jdGlvbih2YWx1ZSl7dmFyIGVsZW09dGhpc1swXXx8e30saT0wLGw9dGhpcy5sZW5ndGg7aWYodm9pZCAwPT09dmFsdWUmJjE9PT1lbGVtLm5vZGVUeXBlKXJldHVybiBlbGVtLmlubmVySFRNTDtpZigic3RyaW5nIj09dHlwZW9mIHZhbHVlJiYhcm5vSW5uZXJodG1sLnRlc3QodmFsdWUpJiYhd3JhcE1hcFsocnRhZ05hbWUuZXhlYyh2YWx1ZSl8fFsiIiwiIl0pWzFdLnRvTG93ZXJDYXNlKCldKXt2YWx1ZT12YWx1ZS5yZXBsYWNlKHJ4aHRtbFRhZywiPCQxPjwvJDI+Iik7dHJ5e2Zvcig7bD5pO2krKyllbGVtPXRoaXNbaV18fHt9LDE9PT1lbGVtLm5vZGVUeXBlJiYoalF1ZXJ5LmNsZWFuRGF0YShnZXRBbGwoZWxlbSwhMSkpLGVsZW0uaW5uZXJIVE1MPXZhbHVlKTtlbGVtPTB9Y2F0Y2goZSl7fX1lbGVtJiZ0aGlzLmVtcHR5KCkuYXBwZW5kKHZhbHVlKX0sbnVsbCx2YWx1ZSxhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgYXJnPWFyZ3VtZW50c1swXTtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24oZWxlbSl7YXJnPXRoaXMucGFyZW50Tm9kZSxqUXVlcnkuY2xlYW5EYXRhKGdldEFsbCh0aGlzKSksYXJnJiZhcmcucmVwbGFjZUNoaWxkKGVsZW0sdGhpcyl9KSxhcmcmJihhcmcubGVuZ3RofHxhcmcubm9kZVR5cGUpP3RoaXM6dGhpcy5yZW1vdmUoKX0sZGV0YWNoOmZ1bmN0aW9uKHNlbGVjdG9yKXtyZXR1cm4gdGhpcy5yZW1vdmUoc2VsZWN0b3IsITApfSxkb21NYW5pcDpmdW5jdGlvbihhcmdzLGNhbGxiYWNrKXthcmdzPWNvbmNhdC5hcHBseShbXSxhcmdzKTt2YXIgZnJhZ21lbnQsZmlyc3Qsc2NyaXB0cyxoYXNTY3JpcHRzLG5vZGUsZG9jLGk9MCxsPXRoaXMubGVuZ3RoLHNldD10aGlzLGlOb0Nsb25lPWwtMSx2YWx1ZT1hcmdzWzBdLGlzRnVuY3Rpb249alF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpO2lmKGlzRnVuY3Rpb258fGw+MSYmInN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmIXN1cHBvcnQuY2hlY2tDbG9uZSYmcmNoZWNrZWQudGVzdCh2YWx1ZSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpbmRleCl7dmFyIHNlbGY9c2V0LmVxKGluZGV4KTtpc0Z1bmN0aW9uJiYoYXJnc1swXT12YWx1ZS5jYWxsKHRoaXMsaW5kZXgsc2VsZi5odG1sKCkpKSxzZWxmLmRvbU1hbmlwKGFyZ3MsY2FsbGJhY2spfSk7aWYobCYmKGZyYWdtZW50PWpRdWVyeS5idWlsZEZyYWdtZW50KGFyZ3MsdGhpc1swXS5vd25lckRvY3VtZW50LCExLHRoaXMpLGZpcnN0PWZyYWdtZW50LmZpcnN0Q2hpbGQsMT09PWZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoJiYoZnJhZ21lbnQ9Zmlyc3QpLGZpcnN0KSl7Zm9yKHNjcmlwdHM9alF1ZXJ5Lm1hcChnZXRBbGwoZnJhZ21lbnQsInNjcmlwdCIpLGRpc2FibGVTY3JpcHQpLGhhc1NjcmlwdHM9c2NyaXB0cy5sZW5ndGg7bD5pO2krKylub2RlPWZyYWdtZW50LGkhPT1pTm9DbG9uZSYmKG5vZGU9alF1ZXJ5LmNsb25lKG5vZGUsITAsITApLGhhc1NjcmlwdHMmJmpRdWVyeS5tZXJnZShzY3JpcHRzLGdldEFsbChub2RlLCJzY3JpcHQiKSkpLGNhbGxiYWNrLmNhbGwodGhpc1tpXSxub2RlLGkpO2lmKGhhc1NjcmlwdHMpZm9yKGRvYz1zY3JpcHRzW3NjcmlwdHMubGVuZ3RoLTFdLm93bmVyRG9jdW1lbnQsalF1ZXJ5Lm1hcChzY3JpcHRzLHJlc3RvcmVTY3JpcHQpLGk9MDtoYXNTY3JpcHRzPmk7aSsrKW5vZGU9c2NyaXB0c1tpXSxyc2NyaXB0VHlwZS50ZXN0KG5vZGUudHlwZXx8IiIpJiYhZGF0YV9wcml2LmFjY2Vzcyhub2RlLCJnbG9iYWxFdmFsIikmJmpRdWVyeS5jb250YWlucyhkb2Msbm9kZSkmJihub2RlLnNyYz9qUXVlcnkuX2V2YWxVcmwmJmpRdWVyeS5fZXZhbFVybChub2RlLnNyYyk6alF1ZXJ5Lmdsb2JhbEV2YWwobm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKHJjbGVhblNjcmlwdCwiIikpKX1yZXR1cm4gdGhpc319KSxqUXVlcnkuZWFjaCh7YXBwZW5kVG86ImFwcGVuZCIscHJlcGVuZFRvOiJwcmVwZW5kIixpbnNlcnRCZWZvcmU6ImJlZm9yZSIsaW5zZXJ0QWZ0ZXI6ImFmdGVyIixyZXBsYWNlQWxsOiJyZXBsYWNlV2l0aCJ9LGZ1bmN0aW9uKG5hbWUsb3JpZ2luYWwpe2pRdWVyeS5mbltuYW1lXT1mdW5jdGlvbihzZWxlY3Rvcil7Zm9yKHZhciBlbGVtcyxyZXQ9W10saW5zZXJ0PWpRdWVyeShzZWxlY3RvciksbGFzdD1pbnNlcnQubGVuZ3RoLTEsaT0wO2xhc3Q+PWk7aSsrKWVsZW1zPWk9PT1sYXN0P3RoaXM6dGhpcy5jbG9uZSghMCksalF1ZXJ5KGluc2VydFtpXSlbb3JpZ2luYWxdKGVsZW1zKSxwdXNoLmFwcGx5KHJldCxlbGVtcy5nZXQoKSk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHJldCl9fSk7dmFyIGlmcmFtZSxlbGVtZGlzcGxheT17fSxybWFyZ2luPS9ebWFyZ2luLyxybnVtbm9ucHg9bmV3IFJlZ0V4cCgiXigiK3BudW0rIikoPyFweClbYS16JV0rJCIsImkiKSxnZXRTdHlsZXM9ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGVsZW0sbnVsbCl9OyFmdW5jdGlvbigpe2Z1bmN0aW9uIGNvbXB1dGVQaXhlbFBvc2l0aW9uQW5kQm94U2l6aW5nUmVsaWFibGUoKXtkaXYuc3R5bGUuY3NzVGV4dD0iLXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDoxJTt0b3A6MSU7Ym9yZGVyOjFweDtwYWRkaW5nOjFweDt3aWR0aDo0cHg7cG9zaXRpb246YWJzb2x1dGUiLGRpdi5pbm5lckhUTUw9IiIsZG9jRWxlbS5hcHBlbmRDaGlsZChjb250YWluZXIpO3ZhciBkaXZTdHlsZT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkaXYsbnVsbCk7cGl4ZWxQb3NpdGlvblZhbD0iMSUiIT09ZGl2U3R5bGUudG9wLGJveFNpemluZ1JlbGlhYmxlVmFsPSI0cHgiPT09ZGl2U3R5bGUud2lkdGgsZG9jRWxlbS5yZW1vdmVDaGlsZChjb250YWluZXIpfXZhciBwaXhlbFBvc2l0aW9uVmFsLGJveFNpemluZ1JlbGlhYmxlVmFsLGRvY0VsZW09ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGNvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxkaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZGl2LnN0eWxlJiYoZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwPSJjb250ZW50LWJveCIsZGl2LmNsb25lTm9kZSghMCkuc3R5bGUuYmFja2dyb3VuZENsaXA9IiIsc3VwcG9ydC5jbGVhckNsb25lU3R5bGU9ImNvbnRlbnQtYm94Ij09PWRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCxjb250YWluZXIuc3R5bGUuY3NzVGV4dD0iYm9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHg7bWFyZ2luLXRvcDoxcHg7cG9zaXRpb246YWJzb2x1dGUiLGNvbnRhaW5lci5hcHBlbmRDaGlsZChkaXYpLHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlJiZqUXVlcnkuZXh0ZW5kKHN1cHBvcnQse3BpeGVsUG9zaXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gY29tcHV0ZVBpeGVsUG9zaXRpb25BbmRCb3hTaXppbmdSZWxpYWJsZSgpLHBpeGVsUG9zaXRpb25WYWx9LGJveFNpemluZ1JlbGlhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PWJveFNpemluZ1JlbGlhYmxlVmFsJiZjb21wdXRlUGl4ZWxQb3NpdGlvbkFuZEJveFNpemluZ1JlbGlhYmxlKCksYm94U2l6aW5nUmVsaWFibGVWYWx9LHJlbGlhYmxlTWFyZ2luUmlnaHQ6ZnVuY3Rpb24oKXt2YXIgcmV0LG1hcmdpbkRpdj1kaXYuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpO3JldHVybiBtYXJnaW5EaXYuc3R5bGUuY3NzVGV4dD1kaXYuc3R5bGUuY3NzVGV4dD0iLXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94O2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzowIixtYXJnaW5EaXYuc3R5bGUubWFyZ2luUmlnaHQ9bWFyZ2luRGl2LnN0eWxlLndpZHRoPSIwIixkaXYuc3R5bGUud2lkdGg9IjFweCIsZG9jRWxlbS5hcHBlbmRDaGlsZChjb250YWluZXIpLHJldD0hcGFyc2VGbG9hdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShtYXJnaW5EaXYsbnVsbCkubWFyZ2luUmlnaHQpLGRvY0VsZW0ucmVtb3ZlQ2hpbGQoY29udGFpbmVyKSxyZXR9fSkpfSgpLGpRdWVyeS5zd2FwPWZ1bmN0aW9uKGVsZW0sb3B0aW9ucyxjYWxsYmFjayxhcmdzKXt2YXIgcmV0LG5hbWUsb2xkPXt9O2ZvcihuYW1lIGluIG9wdGlvbnMpb2xkW25hbWVdPWVsZW0uc3R5bGVbbmFtZV0sZWxlbS5zdHlsZVtuYW1lXT1vcHRpb25zW25hbWVdO3JldD1jYWxsYmFjay5hcHBseShlbGVtLGFyZ3N8fFtdKTtmb3IobmFtZSBpbiBvcHRpb25zKWVsZW0uc3R5bGVbbmFtZV09b2xkW25hbWVdO3JldHVybiByZXR9O3ZhciByZGlzcGxheXN3YXA9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLHJudW1zcGxpdD1uZXcgUmVnRXhwKCJeKCIrcG51bSsiKSguKikkIiwiaSIpLHJyZWxOdW09bmV3IFJlZ0V4cCgiXihbKy1dKT0oIitwbnVtKyIpIiwiaSIpLGNzc1Nob3c9e3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdmlzaWJpbGl0eToiaGlkZGVuIixkaXNwbGF5OiJibG9jayJ9LGNzc05vcm1hbFRyYW5zZm9ybT17bGV0dGVyU3BhY2luZzoiMCIsZm9udFdlaWdodDoiNDAwIn0sY3NzUHJlZml4ZXM9WyJXZWJraXQiLCJPIiwiTW96IiwibXMiXTtqUXVlcnkuZXh0ZW5kKHtjc3NIb29rczp7b3BhY2l0eTp7Z2V0OmZ1bmN0aW9uKGVsZW0sY29tcHV0ZWQpe2lmKGNvbXB1dGVkKXt2YXIgcmV0PWN1ckNTUyhlbGVtLCJvcGFjaXR5Iik7cmV0dXJuIiI9PT1yZXQ/IjEiOnJldH19fX0sY3NzTnVtYmVyOntjb2x1bW5Db3VudDohMCxmaWxsT3BhY2l0eTohMCxmbGV4R3JvdzohMCxmbGV4U2hyaW5rOiEwLGZvbnRXZWlnaHQ6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwfSxjc3NQcm9wczp7ImZsb2F0IjoiY3NzRmxvYXQifSxzdHlsZTpmdW5jdGlvbihlbGVtLG5hbWUsdmFsdWUsZXh0cmEpe2lmKGVsZW0mJjMhPT1lbGVtLm5vZGVUeXBlJiY4IT09ZWxlbS5ub2RlVHlwZSYmZWxlbS5zdHlsZSl7dmFyIHJldCx0eXBlLGhvb2tzLG9yaWdOYW1lPWpRdWVyeS5jYW1lbENhc2UobmFtZSksc3R5bGU9ZWxlbS5zdHlsZTtyZXR1cm4gbmFtZT1qUXVlcnkuY3NzUHJvcHNbb3JpZ05hbWVdfHwoalF1ZXJ5LmNzc1Byb3BzW29yaWdOYW1lXT12ZW5kb3JQcm9wTmFtZShzdHlsZSxvcmlnTmFtZSkpLGhvb2tzPWpRdWVyeS5jc3NIb29rc1tuYW1lXXx8alF1ZXJ5LmNzc0hvb2tzW29yaWdOYW1lXSx2b2lkIDA9PT12YWx1ZT9ob29rcyYmImdldCJpbiBob29rcyYmdm9pZCAwIT09KHJldD1ob29rcy5nZXQoZWxlbSwhMSxleHRyYSkpP3JldDpzdHlsZVtuYW1lXToodHlwZT10eXBlb2YgdmFsdWUsInN0cmluZyI9PT10eXBlJiYocmV0PXJyZWxOdW0uZXhlYyh2YWx1ZSkpJiYodmFsdWU9KHJldFsxXSsxKSpyZXRbMl0rcGFyc2VGbG9hdChqUXVlcnkuY3NzKGVsZW0sbmFtZSkpLHR5cGU9Im51bWJlciIpLG51bGwhPXZhbHVlJiZ2YWx1ZT09PXZhbHVlJiYoIm51bWJlciIhPT10eXBlfHxqUXVlcnkuY3NzTnVtYmVyW29yaWdOYW1lXXx8KHZhbHVlKz0icHgiKSxzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZXx8IiIhPT12YWx1ZXx8MCE9PW5hbWUuaW5kZXhPZigiYmFja2dyb3VuZCIpfHwoc3R5bGVbbmFtZV09ImluaGVyaXQiKSxob29rcyYmInNldCJpbiBob29rcyYmdm9pZCAwPT09KHZhbHVlPWhvb2tzLnNldChlbGVtLHZhbHVlLGV4dHJhKSl8fChzdHlsZVtuYW1lXT12YWx1ZSkpLHZvaWQgMCl9fSxjc3M6ZnVuY3Rpb24oZWxlbSxuYW1lLGV4dHJhLHN0eWxlcyl7dmFyIHZhbCxudW0saG9va3Msb3JpZ05hbWU9alF1ZXJ5LmNhbWVsQ2FzZShuYW1lKTtyZXR1cm4gbmFtZT1qUXVlcnkuY3NzUHJvcHNbb3JpZ05hbWVdfHwoalF1ZXJ5LmNzc1Byb3BzW29yaWdOYW1lXT12ZW5kb3JQcm9wTmFtZShlbGVtLnN0eWxlLG9yaWdOYW1lKSksaG9va3M9alF1ZXJ5LmNzc0hvb2tzW25hbWVdfHxqUXVlcnkuY3NzSG9va3Nbb3JpZ05hbWVdLGhvb2tzJiYiZ2V0ImluIGhvb2tzJiYodmFsPWhvb2tzLmdldChlbGVtLCEwLGV4dHJhKSksdm9pZCAwPT09dmFsJiYodmFsPWN1ckNTUyhlbGVtLG5hbWUsc3R5bGVzKSksIm5vcm1hbCI9PT12YWwmJm5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtJiYodmFsPWNzc05vcm1hbFRyYW5zZm9ybVtuYW1lXSksIiI9PT1leHRyYXx8ZXh0cmE/KG51bT1wYXJzZUZsb2F0KHZhbCksZXh0cmE9PT0hMHx8alF1ZXJ5LmlzTnVtZXJpYyhudW0pP251bXx8MDp2YWwpOnZhbH19KSxqUXVlcnkuZWFjaChbImhlaWdodCIsIndpZHRoIl0sZnVuY3Rpb24oaSxuYW1lKXtqUXVlcnkuY3NzSG9va3NbbmFtZV09e2dldDpmdW5jdGlvbihlbGVtLGNvbXB1dGVkLGV4dHJhKXtyZXR1cm4gY29tcHV0ZWQ/cmRpc3BsYXlzd2FwLnRlc3QoalF1ZXJ5LmNzcyhlbGVtLCJkaXNwbGF5IikpJiYwPT09ZWxlbS5vZmZzZXRXaWR0aD9qUXVlcnkuc3dhcChlbGVtLGNzc1Nob3csZnVuY3Rpb24oKXtyZXR1cm4gZ2V0V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEpfSk6Z2V0V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEpOnZvaWQgMH0sc2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUsZXh0cmEpe3ZhciBzdHlsZXM9ZXh0cmEmJmdldFN0eWxlcyhlbGVtKTtyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoZWxlbSx2YWx1ZSxleHRyYT9hdWdtZW50V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEsImJvcmRlci1ib3giPT09alF1ZXJ5LmNzcyhlbGVtLCJib3hTaXppbmciLCExLHN0eWxlcyksc3R5bGVzKTowKX19fSksalF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0PWFkZEdldEhvb2tJZihzdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQsZnVuY3Rpb24oZWxlbSxjb21wdXRlZCl7cmV0dXJuIGNvbXB1dGVkP2pRdWVyeS5zd2FwKGVsZW0se2Rpc3BsYXk6ImlubGluZS1ibG9jayJ9LGN1ckNTUyxbZWxlbSwibWFyZ2luUmlnaHQiXSk6dm9pZCAwfSksalF1ZXJ5LmVhY2goe21hcmdpbjoiIixwYWRkaW5nOiIiLGJvcmRlcjoiV2lkdGgifSxmdW5jdGlvbihwcmVmaXgsc3VmZml4KXtqUXVlcnkuY3NzSG9va3NbcHJlZml4K3N1ZmZpeF09e2V4cGFuZDpmdW5jdGlvbih2YWx1ZSl7Zm9yKHZhciBpPTAsZXhwYW5kZWQ9e30scGFydHM9InN0cmluZyI9PXR5cGVvZiB2YWx1ZT92YWx1ZS5zcGxpdCgiICIpOlt2YWx1ZV07ND5pO2krKylleHBhbmRlZFtwcmVmaXgrY3NzRXhwYW5kW2ldK3N1ZmZpeF09cGFydHNbaV18fHBhcnRzW2ktMl18fHBhcnRzWzBdO3JldHVybiBleHBhbmRlZH19LHJtYXJnaW4udGVzdChwcmVmaXgpfHwoalF1ZXJ5LmNzc0hvb2tzW3ByZWZpeCtzdWZmaXhdLnNldD1zZXRQb3NpdGl2ZU51bWJlcil9KSxqUXVlcnkuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24obmFtZSx2YWx1ZSl7cmV0dXJuIGFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGVsZW0sbmFtZSx2YWx1ZSl7dmFyIHN0eWxlcyxsZW4sbWFwPXt9LGk9MDtpZihqUXVlcnkuaXNBcnJheShuYW1lKSl7Zm9yKHN0eWxlcz1nZXRTdHlsZXMoZWxlbSksbGVuPW5hbWUubGVuZ3RoO2xlbj5pO2krKyltYXBbbmFtZVtpXV09alF1ZXJ5LmNzcyhlbGVtLG5hbWVbaV0sITEsc3R5bGVzKTtyZXR1cm4gbWFwfXJldHVybiB2b2lkIDAhPT12YWx1ZT9qUXVlcnkuc3R5bGUoZWxlbSxuYW1lLHZhbHVlKTpqUXVlcnkuY3NzKGVsZW0sbmFtZSl9LG5hbWUsdmFsdWUsYXJndW1lbnRzLmxlbmd0aD4xKX0sc2hvdzpmdW5jdGlvbigpe3JldHVybiBzaG93SGlkZSh0aGlzLCEwKX0saGlkZTpmdW5jdGlvbigpe3JldHVybiBzaG93SGlkZSh0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKHN0YXRlKXtyZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiBzdGF0ZT9zdGF0ZT90aGlzLnNob3coKTp0aGlzLmhpZGUoKTp0aGlzLmVhY2goZnVuY3Rpb24oKXtpc0hpZGRlbih0aGlzKT9qUXVlcnkodGhpcykuc2hvdygpOmpRdWVyeSh0aGlzKS5oaWRlKCl9KX19KSxqUXVlcnkuVHdlZW49VHdlZW4sVHdlZW4ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUd2Vlbixpbml0OmZ1bmN0aW9uKGVsZW0sb3B0aW9ucyxwcm9wLGVuZCxlYXNpbmcsdW5pdCl7dGhpcy5lbGVtPWVsZW0sdGhpcy5wcm9wPXByb3AsdGhpcy5lYXNpbmc9ZWFzaW5nfHwic3dpbmciLHRoaXMub3B0aW9ucz1vcHRpb25zLHRoaXMuc3RhcnQ9dGhpcy5ub3c9dGhpcy5jdXIoKSx0aGlzLmVuZD1lbmQsdGhpcy51bml0PXVuaXR8fChqUXVlcnkuY3NzTnVtYmVyW3Byb3BdPyIiOiJweCIpfSxjdXI6ZnVuY3Rpb24oKXt2YXIgaG9va3M9VHdlZW4ucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIGhvb2tzJiZob29rcy5nZXQ/aG9va3MuZ2V0KHRoaXMpOlR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbihwZXJjZW50KXt2YXIgZWFzZWQsaG9va3M9VHdlZW4ucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIHRoaXMucG9zPWVhc2VkPXRoaXMub3B0aW9ucy5kdXJhdGlvbj9qUXVlcnkuZWFzaW5nW3RoaXMuZWFzaW5nXShwZXJjZW50LHRoaXMub3B0aW9ucy5kdXJhdGlvbipwZXJjZW50LDAsMSx0aGlzLm9wdGlvbnMuZHVyYXRpb24pOnBlcmNlbnQsdGhpcy5ub3c9KHRoaXMuZW5kLXRoaXMuc3RhcnQpKmVhc2VkK3RoaXMuc3RhcnQsdGhpcy5vcHRpb25zLnN0ZXAmJnRoaXMub3B0aW9ucy5zdGVwLmNhbGwodGhpcy5lbGVtLHRoaXMubm93LHRoaXMpLGhvb2tzJiZob29rcy5zZXQ/aG9va3Muc2V0KHRoaXMpOlR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQodGhpcyksdGhpc319LFR3ZWVuLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZT1Ud2Vlbi5wcm90b3R5cGUsVHdlZW4ucHJvcEhvb2tzPXtfZGVmYXVsdDp7Z2V0OmZ1bmN0aW9uKHR3ZWVuKXt2YXIgcmVzdWx0O3JldHVybiBudWxsPT10d2Vlbi5lbGVtW3R3ZWVuLnByb3BdfHx0d2Vlbi5lbGVtLnN0eWxlJiZudWxsIT10d2Vlbi5lbGVtLnN0eWxlW3R3ZWVuLnByb3BdPyhyZXN1bHQ9alF1ZXJ5LmNzcyh0d2Vlbi5lbGVtLHR3ZWVuLnByb3AsIiIpLHJlc3VsdCYmImF1dG8iIT09cmVzdWx0P3Jlc3VsdDowKTp0d2Vlbi5lbGVtW3R3ZWVuLnByb3BdfSxzZXQ6ZnVuY3Rpb24odHdlZW4pe2pRdWVyeS5meC5zdGVwW3R3ZWVuLnByb3BdP2pRdWVyeS5meC5zdGVwW3R3ZWVuLnByb3BdKHR3ZWVuKTp0d2Vlbi5lbGVtLnN0eWxlJiYobnVsbCE9dHdlZW4uZWxlbS5zdHlsZVtqUXVlcnkuY3NzUHJvcHNbdHdlZW4ucHJvcF1dfHxqUXVlcnkuY3NzSG9va3NbdHdlZW4ucHJvcF0pP2pRdWVyeS5zdHlsZSh0d2Vlbi5lbGVtLHR3ZWVuLnByb3AsdHdlZW4ubm93K3R3ZWVuLnVuaXQpOnR3ZWVuLmVsZW1bdHdlZW4ucHJvcF09dHdlZW4ubm93fX19LFR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3A9VHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQ9e3NldDpmdW5jdGlvbih0d2Vlbil7dHdlZW4uZWxlbS5ub2RlVHlwZSYmdHdlZW4uZWxlbS5wYXJlbnROb2RlJiYodHdlZW4uZWxlbVt0d2Vlbi5wcm9wXT10d2Vlbi5ub3cpfX0salF1ZXJ5LmVhc2luZz17bGluZWFyOmZ1bmN0aW9uKHApe3JldHVybiBwfSxzd2luZzpmdW5jdGlvbihwKXtyZXR1cm4uNS1NYXRoLmNvcyhwKk1hdGguUEkpLzJ9fSxqUXVlcnkuZng9VHdlZW4ucHJvdG90eXBlLmluaXQsalF1ZXJ5LmZ4LnN0ZXA9e307dmFyIGZ4Tm93LHRpbWVySWQscmZ4dHlwZXM9L14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLHJmeG51bT1uZXcgUmVnRXhwKCJeKD86KFsrLV0pPXwpKCIrcG51bSsiKShbYS16JV0qKSQiLCJpIikscnJ1bj0vcXVldWVIb29rcyQvLGFuaW1hdGlvblByZWZpbHRlcnM9W2RlZmF1bHRQcmVmaWx0ZXJdLHR3ZWVuZXJzPXsiKiI6W2Z1bmN0aW9uKHByb3AsdmFsdWUpe3ZhciB0d2Vlbj10aGlzLmNyZWF0ZVR3ZWVuKHByb3AsdmFsdWUpLHRhcmdldD10d2Vlbi5jdXIoKSxwYXJ0cz1yZnhudW0uZXhlYyh2YWx1ZSksdW5pdD1wYXJ0cyYmcGFydHNbM118fChqUXVlcnkuY3NzTnVtYmVyW3Byb3BdPyIiOiJweCIpLHN0YXJ0PShqUXVlcnkuY3NzTnVtYmVyW3Byb3BdfHwicHgiIT09dW5pdCYmK3RhcmdldCkmJnJmeG51bS5leGVjKGpRdWVyeS5jc3ModHdlZW4uZWxlbSxwcm9wKSksc2NhbGU9MSxtYXhJdGVyYXRpb25zPTIwO2lmKHN0YXJ0JiZzdGFydFszXSE9PXVuaXQpe3VuaXQ9dW5pdHx8c3RhcnRbM10scGFydHM9cGFydHN8fFtdLHN0YXJ0PSt0YXJnZXR8fDE7ZG8gc2NhbGU9c2NhbGV8fCIuNSIsc3RhcnQvPXNjYWxlLGpRdWVyeS5zdHlsZSh0d2Vlbi5lbGVtLHByb3Asc3RhcnQrdW5pdCk7d2hpbGUoc2NhbGUhPT0oc2NhbGU9dHdlZW4uY3VyKCkvdGFyZ2V0KSYmMSE9PXNjYWxlJiYtLW1heEl0ZXJhdGlvbnMpfXJldHVybiBwYXJ0cyYmKHN0YXJ0PXR3ZWVuLnN0YXJ0PStzdGFydHx8K3RhcmdldHx8MCx0d2Vlbi51bml0PXVuaXQsdHdlZW4uZW5kPXBhcnRzWzFdP3N0YXJ0KyhwYXJ0c1sxXSsxKSpwYXJ0c1syXTorcGFydHNbMl0pLHR3ZWVufV19O2pRdWVyeS5BbmltYXRpb249alF1ZXJ5LmV4dGVuZChBbmltYXRpb24se3R3ZWVuZXI6ZnVuY3Rpb24ocHJvcHMsY2FsbGJhY2spe2pRdWVyeS5pc0Z1bmN0aW9uKHByb3BzKT8oY2FsbGJhY2s9cHJvcHMscHJvcHM9WyIqIl0pOnByb3BzPXByb3BzLnNwbGl0KCIgIik7Zm9yKHZhciBwcm9wLGluZGV4PTAsbGVuZ3RoPXByb3BzLmxlbmd0aDtsZW5ndGg+aW5kZXg7aW5kZXgrKylwcm9wPXByb3BzW2luZGV4XSx0d2VlbmVyc1twcm9wXT10d2VlbmVyc1twcm9wXXx8W10sdHdlZW5lcnNbcHJvcF0udW5zaGlmdChjYWxsYmFjayl9LHByZWZpbHRlcjpmdW5jdGlvbihjYWxsYmFjayxwcmVwZW5kKXtwcmVwZW5kP2FuaW1hdGlvblByZWZpbHRlcnMudW5zaGlmdChjYWxsYmFjayk6YW5pbWF0aW9uUHJlZmlsdGVycy5wdXNoKGNhbGxiYWNrKX19KSxqUXVlcnkuc3BlZWQ9ZnVuY3Rpb24oc3BlZWQsZWFzaW5nLGZuKXt2YXIgb3B0PXNwZWVkJiYib2JqZWN0Ij09dHlwZW9mIHNwZWVkP2pRdWVyeS5leHRlbmQoe30sc3BlZWQpOntjb21wbGV0ZTpmbnx8IWZuJiZlYXNpbmd8fGpRdWVyeS5pc0Z1bmN0aW9uKHNwZWVkKSYmc3BlZWQsZHVyYXRpb246c3BlZWQsZWFzaW5nOmZuJiZlYXNpbmd8fGVhc2luZyYmIWpRdWVyeS5pc0Z1bmN0aW9uKGVhc2luZykmJmVhc2luZ307cmV0dXJuIG9wdC5kdXJhdGlvbj1qUXVlcnkuZngub2ZmPzA6Im51bWJlciI9PXR5cGVvZiBvcHQuZHVyYXRpb24/b3B0LmR1cmF0aW9uOm9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzP2pRdWVyeS5meC5zcGVlZHNbb3B0LmR1cmF0aW9uXTpqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0LChudWxsPT1vcHQucXVldWV8fG9wdC5xdWV1ZT09PSEwKSYmKG9wdC5xdWV1ZT0iZngiKSxvcHQub2xkPW9wdC5jb21wbGV0ZSxvcHQuY29tcGxldGU9ZnVuY3Rpb24oKXtqUXVlcnkuaXNGdW5jdGlvbihvcHQub2xkKSYmb3B0Lm9sZC5jYWxsKHRoaXMpLG9wdC5xdWV1ZSYmalF1ZXJ5LmRlcXVldWUodGhpcyxvcHQucXVldWUpCn0sb3B0fSxqUXVlcnkuZm4uZXh0ZW5kKHtmYWRlVG86ZnVuY3Rpb24oc3BlZWQsdG8sZWFzaW5nLGNhbGxiYWNrKXtyZXR1cm4gdGhpcy5maWx0ZXIoaXNIaWRkZW4pLmNzcygib3BhY2l0eSIsMCkuc2hvdygpLmVuZCgpLmFuaW1hdGUoe29wYWNpdHk6dG99LHNwZWVkLGVhc2luZyxjYWxsYmFjayl9LGFuaW1hdGU6ZnVuY3Rpb24ocHJvcCxzcGVlZCxlYXNpbmcsY2FsbGJhY2spe3ZhciBlbXB0eT1qUXVlcnkuaXNFbXB0eU9iamVjdChwcm9wKSxvcHRhbGw9alF1ZXJ5LnNwZWVkKHNwZWVkLGVhc2luZyxjYWxsYmFjayksZG9BbmltYXRpb249ZnVuY3Rpb24oKXt2YXIgYW5pbT1BbmltYXRpb24odGhpcyxqUXVlcnkuZXh0ZW5kKHt9LHByb3ApLG9wdGFsbCk7KGVtcHR5fHxkYXRhX3ByaXYuZ2V0KHRoaXMsImZpbmlzaCIpKSYmYW5pbS5zdG9wKCEwKX07cmV0dXJuIGRvQW5pbWF0aW9uLmZpbmlzaD1kb0FuaW1hdGlvbixlbXB0eXx8b3B0YWxsLnF1ZXVlPT09ITE/dGhpcy5lYWNoKGRvQW5pbWF0aW9uKTp0aGlzLnF1ZXVlKG9wdGFsbC5xdWV1ZSxkb0FuaW1hdGlvbil9LHN0b3A6ZnVuY3Rpb24odHlwZSxjbGVhclF1ZXVlLGdvdG9FbmQpe3ZhciBzdG9wUXVldWU9ZnVuY3Rpb24oaG9va3Mpe3ZhciBzdG9wPWhvb2tzLnN0b3A7ZGVsZXRlIGhvb2tzLnN0b3Asc3RvcChnb3RvRW5kKX07cmV0dXJuInN0cmluZyIhPXR5cGVvZiB0eXBlJiYoZ290b0VuZD1jbGVhclF1ZXVlLGNsZWFyUXVldWU9dHlwZSx0eXBlPXZvaWQgMCksY2xlYXJRdWV1ZSYmdHlwZSE9PSExJiZ0aGlzLnF1ZXVlKHR5cGV8fCJmeCIsW10pLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBkZXF1ZXVlPSEwLGluZGV4PW51bGwhPXR5cGUmJnR5cGUrInF1ZXVlSG9va3MiLHRpbWVycz1qUXVlcnkudGltZXJzLGRhdGE9ZGF0YV9wcml2LmdldCh0aGlzKTtpZihpbmRleClkYXRhW2luZGV4XSYmZGF0YVtpbmRleF0uc3RvcCYmc3RvcFF1ZXVlKGRhdGFbaW5kZXhdKTtlbHNlIGZvcihpbmRleCBpbiBkYXRhKWRhdGFbaW5kZXhdJiZkYXRhW2luZGV4XS5zdG9wJiZycnVuLnRlc3QoaW5kZXgpJiZzdG9wUXVldWUoZGF0YVtpbmRleF0pO2ZvcihpbmRleD10aW1lcnMubGVuZ3RoO2luZGV4LS07KXRpbWVyc1tpbmRleF0uZWxlbSE9PXRoaXN8fG51bGwhPXR5cGUmJnRpbWVyc1tpbmRleF0ucXVldWUhPT10eXBlfHwodGltZXJzW2luZGV4XS5hbmltLnN0b3AoZ290b0VuZCksZGVxdWV1ZT0hMSx0aW1lcnMuc3BsaWNlKGluZGV4LDEpKTsoZGVxdWV1ZXx8IWdvdG9FbmQpJiZqUXVlcnkuZGVxdWV1ZSh0aGlzLHR5cGUpfSl9LGZpbmlzaDpmdW5jdGlvbih0eXBlKXtyZXR1cm4gdHlwZSE9PSExJiYodHlwZT10eXBlfHwiZngiKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgaW5kZXgsZGF0YT1kYXRhX3ByaXYuZ2V0KHRoaXMpLHF1ZXVlPWRhdGFbdHlwZSsicXVldWUiXSxob29rcz1kYXRhW3R5cGUrInF1ZXVlSG9va3MiXSx0aW1lcnM9alF1ZXJ5LnRpbWVycyxsZW5ndGg9cXVldWU/cXVldWUubGVuZ3RoOjA7Zm9yKGRhdGEuZmluaXNoPSEwLGpRdWVyeS5xdWV1ZSh0aGlzLHR5cGUsW10pLGhvb2tzJiZob29rcy5zdG9wJiZob29rcy5zdG9wLmNhbGwodGhpcywhMCksaW5kZXg9dGltZXJzLmxlbmd0aDtpbmRleC0tOyl0aW1lcnNbaW5kZXhdLmVsZW09PT10aGlzJiZ0aW1lcnNbaW5kZXhdLnF1ZXVlPT09dHlwZSYmKHRpbWVyc1tpbmRleF0uYW5pbS5zdG9wKCEwKSx0aW1lcnMuc3BsaWNlKGluZGV4LDEpKTtmb3IoaW5kZXg9MDtsZW5ndGg+aW5kZXg7aW5kZXgrKylxdWV1ZVtpbmRleF0mJnF1ZXVlW2luZGV4XS5maW5pc2gmJnF1ZXVlW2luZGV4XS5maW5pc2guY2FsbCh0aGlzKTtkZWxldGUgZGF0YS5maW5pc2h9KX19KSxqUXVlcnkuZWFjaChbInRvZ2dsZSIsInNob3ciLCJoaWRlIl0sZnVuY3Rpb24oaSxuYW1lKXt2YXIgY3NzRm49alF1ZXJ5LmZuW25hbWVdO2pRdWVyeS5mbltuYW1lXT1mdW5jdGlvbihzcGVlZCxlYXNpbmcsY2FsbGJhY2spe3JldHVybiBudWxsPT1zcGVlZHx8ImJvb2xlYW4iPT10eXBlb2Ygc3BlZWQ/Y3NzRm4uYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuYW5pbWF0ZShnZW5GeChuYW1lLCEwKSxzcGVlZCxlYXNpbmcsY2FsbGJhY2spfX0pLGpRdWVyeS5lYWNoKHtzbGlkZURvd246Z2VuRngoInNob3ciKSxzbGlkZVVwOmdlbkZ4KCJoaWRlIiksc2xpZGVUb2dnbGU6Z2VuRngoInRvZ2dsZSIpLGZhZGVJbjp7b3BhY2l0eToic2hvdyJ9LGZhZGVPdXQ6e29wYWNpdHk6ImhpZGUifSxmYWRlVG9nZ2xlOntvcGFjaXR5OiJ0b2dnbGUifX0sZnVuY3Rpb24obmFtZSxwcm9wcyl7alF1ZXJ5LmZuW25hbWVdPWZ1bmN0aW9uKHNwZWVkLGVhc2luZyxjYWxsYmFjayl7cmV0dXJuIHRoaXMuYW5pbWF0ZShwcm9wcyxzcGVlZCxlYXNpbmcsY2FsbGJhY2spfX0pLGpRdWVyeS50aW1lcnM9W10salF1ZXJ5LmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgdGltZXIsaT0wLHRpbWVycz1qUXVlcnkudGltZXJzO2ZvcihmeE5vdz1qUXVlcnkubm93KCk7aTx0aW1lcnMubGVuZ3RoO2krKyl0aW1lcj10aW1lcnNbaV0sdGltZXIoKXx8dGltZXJzW2ldIT09dGltZXJ8fHRpbWVycy5zcGxpY2UoaS0tLDEpO3RpbWVycy5sZW5ndGh8fGpRdWVyeS5meC5zdG9wKCksZnhOb3c9dm9pZCAwfSxqUXVlcnkuZngudGltZXI9ZnVuY3Rpb24odGltZXIpe2pRdWVyeS50aW1lcnMucHVzaCh0aW1lciksdGltZXIoKT9qUXVlcnkuZnguc3RhcnQoKTpqUXVlcnkudGltZXJzLnBvcCgpfSxqUXVlcnkuZnguaW50ZXJ2YWw9MTMsalF1ZXJ5LmZ4LnN0YXJ0PWZ1bmN0aW9uKCl7dGltZXJJZHx8KHRpbWVySWQ9c2V0SW50ZXJ2YWwoalF1ZXJ5LmZ4LnRpY2ssalF1ZXJ5LmZ4LmludGVydmFsKSl9LGpRdWVyeS5meC5zdG9wPWZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbCh0aW1lcklkKSx0aW1lcklkPW51bGx9LGpRdWVyeS5meC5zcGVlZHM9e3Nsb3c6NjAwLGZhc3Q6MjAwLF9kZWZhdWx0OjQwMH0salF1ZXJ5LmZuLmRlbGF5PWZ1bmN0aW9uKHRpbWUsdHlwZSl7cmV0dXJuIHRpbWU9alF1ZXJ5LmZ4P2pRdWVyeS5meC5zcGVlZHNbdGltZV18fHRpbWU6dGltZSx0eXBlPXR5cGV8fCJmeCIsdGhpcy5xdWV1ZSh0eXBlLGZ1bmN0aW9uKG5leHQsaG9va3Mpe3ZhciB0aW1lb3V0PXNldFRpbWVvdXQobmV4dCx0aW1lKTtob29rcy5zdG9wPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHRpbWVvdXQpfX0pfSxmdW5jdGlvbigpe3ZhciBpbnB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpLHNlbGVjdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKSxvcHQ9c2VsZWN0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpKTtpbnB1dC50eXBlPSJjaGVja2JveCIsc3VwcG9ydC5jaGVja09uPSIiIT09aW5wdXQudmFsdWUsc3VwcG9ydC5vcHRTZWxlY3RlZD1vcHQuc2VsZWN0ZWQsc2VsZWN0LmRpc2FibGVkPSEwLHN1cHBvcnQub3B0RGlzYWJsZWQ9IW9wdC5kaXNhYmxlZCxpbnB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpLGlucHV0LnZhbHVlPSJ0IixpbnB1dC50eXBlPSJyYWRpbyIsc3VwcG9ydC5yYWRpb1ZhbHVlPSJ0Ij09PWlucHV0LnZhbHVlfSgpO3ZhciBub2RlSG9vayxib29sSG9vayxhdHRySGFuZGxlPWpRdWVyeS5leHByLmF0dHJIYW5kbGU7alF1ZXJ5LmZuLmV4dGVuZCh7YXR0cjpmdW5jdGlvbihuYW1lLHZhbHVlKXtyZXR1cm4gYWNjZXNzKHRoaXMsalF1ZXJ5LmF0dHIsbmFtZSx2YWx1ZSxhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKG5hbWUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtqUXVlcnkucmVtb3ZlQXR0cih0aGlzLG5hbWUpfSl9fSksalF1ZXJ5LmV4dGVuZCh7YXR0cjpmdW5jdGlvbihlbGVtLG5hbWUsdmFsdWUpe3ZhciBob29rcyxyZXQsblR5cGU9ZWxlbS5ub2RlVHlwZTtpZihlbGVtJiYzIT09blR5cGUmJjghPT1uVHlwZSYmMiE9PW5UeXBlKXJldHVybiB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGU9PT1zdHJ1bmRlZmluZWQ/alF1ZXJ5LnByb3AoZWxlbSxuYW1lLHZhbHVlKTooMT09PW5UeXBlJiZqUXVlcnkuaXNYTUxEb2MoZWxlbSl8fChuYW1lPW5hbWUudG9Mb3dlckNhc2UoKSxob29rcz1qUXVlcnkuYXR0ckhvb2tzW25hbWVdfHwoalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KG5hbWUpP2Jvb2xIb29rOm5vZGVIb29rKSksdm9pZCAwPT09dmFsdWU/aG9va3MmJiJnZXQiaW4gaG9va3MmJm51bGwhPT0ocmV0PWhvb2tzLmdldChlbGVtLG5hbWUpKT9yZXQ6KHJldD1qUXVlcnkuZmluZC5hdHRyKGVsZW0sbmFtZSksbnVsbD09cmV0P3ZvaWQgMDpyZXQpOm51bGwhPT12YWx1ZT9ob29rcyYmInNldCJpbiBob29rcyYmdm9pZCAwIT09KHJldD1ob29rcy5zZXQoZWxlbSx2YWx1ZSxuYW1lKSk/cmV0OihlbGVtLnNldEF0dHJpYnV0ZShuYW1lLHZhbHVlKyIiKSx2YWx1ZSk6dm9pZCBqUXVlcnkucmVtb3ZlQXR0cihlbGVtLG5hbWUpKX0scmVtb3ZlQXR0cjpmdW5jdGlvbihlbGVtLHZhbHVlKXt2YXIgbmFtZSxwcm9wTmFtZSxpPTAsYXR0ck5hbWVzPXZhbHVlJiZ2YWx1ZS5tYXRjaChybm90d2hpdGUpO2lmKGF0dHJOYW1lcyYmMT09PWVsZW0ubm9kZVR5cGUpZm9yKDtuYW1lPWF0dHJOYW1lc1tpKytdOylwcm9wTmFtZT1qUXVlcnkucHJvcEZpeFtuYW1lXXx8bmFtZSxqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QobmFtZSkmJihlbGVtW3Byb3BOYW1lXT0hMSksZWxlbS5yZW1vdmVBdHRyaWJ1dGUobmFtZSl9LGF0dHJIb29rczp7dHlwZTp7c2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUpe2lmKCFzdXBwb3J0LnJhZGlvVmFsdWUmJiJyYWRpbyI9PT12YWx1ZSYmalF1ZXJ5Lm5vZGVOYW1lKGVsZW0sImlucHV0Iikpe3ZhciB2YWw9ZWxlbS52YWx1ZTtyZXR1cm4gZWxlbS5zZXRBdHRyaWJ1dGUoInR5cGUiLHZhbHVlKSx2YWwmJihlbGVtLnZhbHVlPXZhbCksdmFsdWV9fX19fSksYm9vbEhvb2s9e3NldDpmdW5jdGlvbihlbGVtLHZhbHVlLG5hbWUpe3JldHVybiB2YWx1ZT09PSExP2pRdWVyeS5yZW1vdmVBdHRyKGVsZW0sbmFtZSk6ZWxlbS5zZXRBdHRyaWJ1dGUobmFtZSxuYW1lKSxuYW1lfX0salF1ZXJ5LmVhY2goalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1x3Ky9nKSxmdW5jdGlvbihpLG5hbWUpe3ZhciBnZXR0ZXI9YXR0ckhhbmRsZVtuYW1lXXx8alF1ZXJ5LmZpbmQuYXR0cjthdHRySGFuZGxlW25hbWVdPWZ1bmN0aW9uKGVsZW0sbmFtZSxpc1hNTCl7dmFyIHJldCxoYW5kbGU7cmV0dXJuIGlzWE1MfHwoaGFuZGxlPWF0dHJIYW5kbGVbbmFtZV0sYXR0ckhhbmRsZVtuYW1lXT1yZXQscmV0PW51bGwhPWdldHRlcihlbGVtLG5hbWUsaXNYTUwpP25hbWUudG9Mb3dlckNhc2UoKTpudWxsLGF0dHJIYW5kbGVbbmFtZV09aGFuZGxlKSxyZXR9fSk7dmFyIHJmb2N1c2FibGU9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaTtqUXVlcnkuZm4uZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKG5hbWUsdmFsdWUpe3JldHVybiBhY2Nlc3ModGhpcyxqUXVlcnkucHJvcCxuYW1lLHZhbHVlLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZVByb3A6ZnVuY3Rpb24obmFtZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2RlbGV0ZSB0aGlzW2pRdWVyeS5wcm9wRml4W25hbWVdfHxuYW1lXX0pfX0pLGpRdWVyeS5leHRlbmQoe3Byb3BGaXg6eyJmb3IiOiJodG1sRm9yIiwiY2xhc3MiOiJjbGFzc05hbWUifSxwcm9wOmZ1bmN0aW9uKGVsZW0sbmFtZSx2YWx1ZSl7dmFyIHJldCxob29rcyxub3R4bWwsblR5cGU9ZWxlbS5ub2RlVHlwZTtpZihlbGVtJiYzIT09blR5cGUmJjghPT1uVHlwZSYmMiE9PW5UeXBlKXJldHVybiBub3R4bWw9MSE9PW5UeXBlfHwhalF1ZXJ5LmlzWE1MRG9jKGVsZW0pLG5vdHhtbCYmKG5hbWU9alF1ZXJ5LnByb3BGaXhbbmFtZV18fG5hbWUsaG9va3M9alF1ZXJ5LnByb3BIb29rc1tuYW1lXSksdm9pZCAwIT09dmFsdWU/aG9va3MmJiJzZXQiaW4gaG9va3MmJnZvaWQgMCE9PShyZXQ9aG9va3Muc2V0KGVsZW0sdmFsdWUsbmFtZSkpP3JldDplbGVtW25hbWVdPXZhbHVlOmhvb2tzJiYiZ2V0ImluIGhvb2tzJiZudWxsIT09KHJldD1ob29rcy5nZXQoZWxlbSxuYW1lKSk/cmV0OmVsZW1bbmFtZV19LHByb3BIb29rczp7dGFiSW5kZXg6e2dldDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5oYXNBdHRyaWJ1dGUoInRhYmluZGV4Iil8fHJmb2N1c2FibGUudGVzdChlbGVtLm5vZGVOYW1lKXx8ZWxlbS5ocmVmP2VsZW0udGFiSW5kZXg6LTF9fX19KSxzdXBwb3J0Lm9wdFNlbGVjdGVkfHwoalF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZD17Z2V0OmZ1bmN0aW9uKGVsZW0pe3ZhciBwYXJlbnQ9ZWxlbS5wYXJlbnROb2RlO3JldHVybiBwYXJlbnQmJnBhcmVudC5wYXJlbnROb2RlJiZwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LG51bGx9fSksalF1ZXJ5LmVhY2goWyJ0YWJJbmRleCIsInJlYWRPbmx5IiwibWF4TGVuZ3RoIiwiY2VsbFNwYWNpbmciLCJjZWxsUGFkZGluZyIsInJvd1NwYW4iLCJjb2xTcGFuIiwidXNlTWFwIiwiZnJhbWVCb3JkZXIiLCJjb250ZW50RWRpdGFibGUiXSxmdW5jdGlvbigpe2pRdWVyeS5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pO3ZhciByY2xhc3M9L1tcdFxyXG5cZl0vZztqUXVlcnkuZm4uZXh0ZW5kKHthZGRDbGFzczpmdW5jdGlvbih2YWx1ZSl7dmFyIGNsYXNzZXMsZWxlbSxjdXIsY2xhenosaixmaW5hbFZhbHVlLHByb2NlZWQ9InN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmdmFsdWUsaT0wLGxlbj10aGlzLmxlbmd0aDtpZihqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihqKXtqUXVlcnkodGhpcykuYWRkQ2xhc3ModmFsdWUuY2FsbCh0aGlzLGosdGhpcy5jbGFzc05hbWUpKX0pO2lmKHByb2NlZWQpZm9yKGNsYXNzZXM9KHZhbHVlfHwiIikubWF0Y2gocm5vdHdoaXRlKXx8W107bGVuPmk7aSsrKWlmKGVsZW09dGhpc1tpXSxjdXI9MT09PWVsZW0ubm9kZVR5cGUmJihlbGVtLmNsYXNzTmFtZT8oIiAiK2VsZW0uY2xhc3NOYW1lKyIgIikucmVwbGFjZShyY2xhc3MsIiAiKToiICIpKXtmb3Ioaj0wO2NsYXp6PWNsYXNzZXNbaisrXTspY3VyLmluZGV4T2YoIiAiK2NsYXp6KyIgIik8MCYmKGN1cis9Y2xhenorIiAiKTtmaW5hbFZhbHVlPWpRdWVyeS50cmltKGN1ciksZWxlbS5jbGFzc05hbWUhPT1maW5hbFZhbHVlJiYoZWxlbS5jbGFzc05hbWU9ZmluYWxWYWx1ZSl9cmV0dXJuIHRoaXN9LHJlbW92ZUNsYXNzOmZ1bmN0aW9uKHZhbHVlKXt2YXIgY2xhc3NlcyxlbGVtLGN1cixjbGF6eixqLGZpbmFsVmFsdWUscHJvY2VlZD0wPT09YXJndW1lbnRzLmxlbmd0aHx8InN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmdmFsdWUsaT0wLGxlbj10aGlzLmxlbmd0aDtpZihqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihqKXtqUXVlcnkodGhpcykucmVtb3ZlQ2xhc3ModmFsdWUuY2FsbCh0aGlzLGosdGhpcy5jbGFzc05hbWUpKX0pO2lmKHByb2NlZWQpZm9yKGNsYXNzZXM9KHZhbHVlfHwiIikubWF0Y2gocm5vdHdoaXRlKXx8W107bGVuPmk7aSsrKWlmKGVsZW09dGhpc1tpXSxjdXI9MT09PWVsZW0ubm9kZVR5cGUmJihlbGVtLmNsYXNzTmFtZT8oIiAiK2VsZW0uY2xhc3NOYW1lKyIgIikucmVwbGFjZShyY2xhc3MsIiAiKToiIikpe2ZvcihqPTA7Y2xheno9Y2xhc3Nlc1tqKytdOylmb3IoO2N1ci5pbmRleE9mKCIgIitjbGF6eisiICIpPj0wOyljdXI9Y3VyLnJlcGxhY2UoIiAiK2NsYXp6KyIgIiwiICIpO2ZpbmFsVmFsdWU9dmFsdWU/alF1ZXJ5LnRyaW0oY3VyKToiIixlbGVtLmNsYXNzTmFtZSE9PWZpbmFsVmFsdWUmJihlbGVtLmNsYXNzTmFtZT1maW5hbFZhbHVlKX1yZXR1cm4gdGhpc30sdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24odmFsdWUsc3RhdGVWYWwpe3ZhciB0eXBlPXR5cGVvZiB2YWx1ZTtyZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiBzdGF0ZVZhbCYmInN0cmluZyI9PT10eXBlP3N0YXRlVmFsP3RoaXMuYWRkQ2xhc3ModmFsdWUpOnRoaXMucmVtb3ZlQ2xhc3ModmFsdWUpOnRoaXMuZWFjaChqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSk/ZnVuY3Rpb24oaSl7alF1ZXJ5KHRoaXMpLnRvZ2dsZUNsYXNzKHZhbHVlLmNhbGwodGhpcyxpLHRoaXMuY2xhc3NOYW1lLHN0YXRlVmFsKSxzdGF0ZVZhbCl9OmZ1bmN0aW9uKCl7aWYoInN0cmluZyI9PT10eXBlKWZvcih2YXIgY2xhc3NOYW1lLGk9MCxzZWxmPWpRdWVyeSh0aGlzKSxjbGFzc05hbWVzPXZhbHVlLm1hdGNoKHJub3R3aGl0ZSl8fFtdO2NsYXNzTmFtZT1jbGFzc05hbWVzW2krK107KXNlbGYuaGFzQ2xhc3MoY2xhc3NOYW1lKT9zZWxmLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk6c2VsZi5hZGRDbGFzcyhjbGFzc05hbWUpO2Vsc2UodHlwZT09PXN0cnVuZGVmaW5lZHx8ImJvb2xlYW4iPT09dHlwZSkmJih0aGlzLmNsYXNzTmFtZSYmZGF0YV9wcml2LnNldCh0aGlzLCJfX2NsYXNzTmFtZV9fIix0aGlzLmNsYXNzTmFtZSksdGhpcy5jbGFzc05hbWU9dGhpcy5jbGFzc05hbWV8fHZhbHVlPT09ITE/IiI6ZGF0YV9wcml2LmdldCh0aGlzLCJfX2NsYXNzTmFtZV9fIil8fCIiKX0pfSxoYXNDbGFzczpmdW5jdGlvbihzZWxlY3Rvcil7Zm9yKHZhciBjbGFzc05hbWU9IiAiK3NlbGVjdG9yKyIgIixpPTAsbD10aGlzLmxlbmd0aDtsPmk7aSsrKWlmKDE9PT10aGlzW2ldLm5vZGVUeXBlJiYoIiAiK3RoaXNbaV0uY2xhc3NOYW1lKyIgIikucmVwbGFjZShyY2xhc3MsIiAiKS5pbmRleE9mKGNsYXNzTmFtZSk+PTApcmV0dXJuITA7cmV0dXJuITF9fSk7dmFyIHJyZXR1cm49L1xyL2c7alF1ZXJ5LmZuLmV4dGVuZCh7dmFsOmZ1bmN0aW9uKHZhbHVlKXt2YXIgaG9va3MscmV0LGlzRnVuY3Rpb24sZWxlbT10aGlzWzBdO3tpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiBpc0Z1bmN0aW9uPWpRdWVyeS5pc0Z1bmN0aW9uKHZhbHVlKSx0aGlzLmVhY2goZnVuY3Rpb24oaSl7dmFyIHZhbDsxPT09dGhpcy5ub2RlVHlwZSYmKHZhbD1pc0Z1bmN0aW9uP3ZhbHVlLmNhbGwodGhpcyxpLGpRdWVyeSh0aGlzKS52YWwoKSk6dmFsdWUsbnVsbD09dmFsP3ZhbD0iIjoibnVtYmVyIj09dHlwZW9mIHZhbD92YWwrPSIiOmpRdWVyeS5pc0FycmF5KHZhbCkmJih2YWw9alF1ZXJ5Lm1hcCh2YWwsZnVuY3Rpb24odmFsdWUpe3JldHVybiBudWxsPT12YWx1ZT8iIjp2YWx1ZSsiIn0pKSxob29rcz1qUXVlcnkudmFsSG9va3NbdGhpcy50eXBlXXx8alF1ZXJ5LnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0saG9va3MmJiJzZXQiaW4gaG9va3MmJnZvaWQgMCE9PWhvb2tzLnNldCh0aGlzLHZhbCwidmFsdWUiKXx8KHRoaXMudmFsdWU9dmFsKSl9KTtpZihlbGVtKXJldHVybiBob29rcz1qUXVlcnkudmFsSG9va3NbZWxlbS50eXBlXXx8alF1ZXJ5LnZhbEhvb2tzW2VsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0saG9va3MmJiJnZXQiaW4gaG9va3MmJnZvaWQgMCE9PShyZXQ9aG9va3MuZ2V0KGVsZW0sInZhbHVlIikpP3JldDoocmV0PWVsZW0udmFsdWUsInN0cmluZyI9PXR5cGVvZiByZXQ/cmV0LnJlcGxhY2UocnJldHVybiwiIik6bnVsbD09cmV0PyIiOnJldCl9fX0pLGpRdWVyeS5leHRlbmQoe3ZhbEhvb2tzOntvcHRpb246e2dldDpmdW5jdGlvbihlbGVtKXt2YXIgdmFsPWpRdWVyeS5maW5kLmF0dHIoZWxlbSwidmFsdWUiKTtyZXR1cm4gbnVsbCE9dmFsP3ZhbDpqUXVlcnkudHJpbShqUXVlcnkudGV4dChlbGVtKSl9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbihlbGVtKXtmb3IodmFyIHZhbHVlLG9wdGlvbixvcHRpb25zPWVsZW0ub3B0aW9ucyxpbmRleD1lbGVtLnNlbGVjdGVkSW5kZXgsb25lPSJzZWxlY3Qtb25lIj09PWVsZW0udHlwZXx8MD5pbmRleCx2YWx1ZXM9b25lP251bGw6W10sbWF4PW9uZT9pbmRleCsxOm9wdGlvbnMubGVuZ3RoLGk9MD5pbmRleD9tYXg6b25lP2luZGV4OjA7bWF4Pmk7aSsrKWlmKG9wdGlvbj1vcHRpb25zW2ldLCEoIW9wdGlvbi5zZWxlY3RlZCYmaSE9PWluZGV4fHwoc3VwcG9ydC5vcHREaXNhYmxlZD9vcHRpb24uZGlzYWJsZWQ6bnVsbCE9PW9wdGlvbi5nZXRBdHRyaWJ1dGUoImRpc2FibGVkIikpfHxvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCYmalF1ZXJ5Lm5vZGVOYW1lKG9wdGlvbi5wYXJlbnROb2RlLCJvcHRncm91cCIpKSl7aWYodmFsdWU9alF1ZXJ5KG9wdGlvbikudmFsKCksb25lKXJldHVybiB2YWx1ZTt2YWx1ZXMucHVzaCh2YWx1ZSl9cmV0dXJuIHZhbHVlc30sc2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUpe2Zvcih2YXIgb3B0aW9uU2V0LG9wdGlvbixvcHRpb25zPWVsZW0ub3B0aW9ucyx2YWx1ZXM9alF1ZXJ5Lm1ha2VBcnJheSh2YWx1ZSksaT1vcHRpb25zLmxlbmd0aDtpLS07KW9wdGlvbj1vcHRpb25zW2ldLChvcHRpb24uc2VsZWN0ZWQ9alF1ZXJ5LmluQXJyYXkob3B0aW9uLnZhbHVlLHZhbHVlcyk+PTApJiYob3B0aW9uU2V0PSEwKTtyZXR1cm4gb3B0aW9uU2V0fHwoZWxlbS5zZWxlY3RlZEluZGV4PS0xKSx2YWx1ZXN9fX19KSxqUXVlcnkuZWFjaChbInJhZGlvIiwiY2hlY2tib3giXSxmdW5jdGlvbigpe2pRdWVyeS52YWxIb29rc1t0aGlzXT17c2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUpe3JldHVybiBqUXVlcnkuaXNBcnJheSh2YWx1ZSk/ZWxlbS5jaGVja2VkPWpRdWVyeS5pbkFycmF5KGpRdWVyeShlbGVtKS52YWwoKSx2YWx1ZSk+PTA6dm9pZCAwfX0sc3VwcG9ydC5jaGVja09ufHwoalF1ZXJ5LnZhbEhvb2tzW3RoaXNdLmdldD1mdW5jdGlvbihlbGVtKXtyZXR1cm4gbnVsbD09PWVsZW0uZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpPyJvbiI6ZWxlbS52YWx1ZX0pfSksalF1ZXJ5LmVhY2goImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCBsb2FkIHJlc2l6ZSBzY3JvbGwgdW5sb2FkIGNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIGNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IgY29udGV4dG1lbnUiLnNwbGl0KCIgIiksZnVuY3Rpb24oaSxuYW1lKXtqUXVlcnkuZm5bbmFtZV09ZnVuY3Rpb24oZGF0YSxmbil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKG5hbWUsbnVsbCxkYXRhLGZuKTp0aGlzLnRyaWdnZXIobmFtZSl9fSksalF1ZXJ5LmZuLmV4dGVuZCh7aG92ZXI6ZnVuY3Rpb24oZm5PdmVyLGZuT3V0KXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGZuT3ZlcikubW91c2VsZWF2ZShmbk91dHx8Zm5PdmVyKX0sYmluZDpmdW5jdGlvbih0eXBlcyxkYXRhLGZuKXtyZXR1cm4gdGhpcy5vbih0eXBlcyxudWxsLGRhdGEsZm4pfSx1bmJpbmQ6ZnVuY3Rpb24odHlwZXMsZm4pe3JldHVybiB0aGlzLm9mZih0eXBlcyxudWxsLGZuKX0sZGVsZWdhdGU6ZnVuY3Rpb24oc2VsZWN0b3IsdHlwZXMsZGF0YSxmbil7cmV0dXJuIHRoaXMub24odHlwZXMsc2VsZWN0b3IsZGF0YSxmbil9LHVuZGVsZWdhdGU6ZnVuY3Rpb24oc2VsZWN0b3IsdHlwZXMsZm4pe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLm9mZihzZWxlY3RvciwiKioiKTp0aGlzLm9mZih0eXBlcyxzZWxlY3Rvcnx8IioqIixmbil9fSk7dmFyIG5vbmNlPWpRdWVyeS5ub3coKSxycXVlcnk9L1w/LztqUXVlcnkucGFyc2VKU09OPWZ1bmN0aW9uKGRhdGEpe3JldHVybiBKU09OLnBhcnNlKGRhdGErIiIpfSxqUXVlcnkucGFyc2VYTUw9ZnVuY3Rpb24oZGF0YSl7dmFyIHhtbCx0bXA7aWYoIWRhdGF8fCJzdHJpbmciIT10eXBlb2YgZGF0YSlyZXR1cm4gbnVsbDt0cnl7dG1wPW5ldyBET01QYXJzZXIseG1sPXRtcC5wYXJzZUZyb21TdHJpbmcoZGF0YSwidGV4dC94bWwiKX1jYXRjaChlKXt4bWw9dm9pZCAwfXJldHVybigheG1sfHx4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInBhcnNlcmVycm9yIikubGVuZ3RoKSYmalF1ZXJ5LmVycm9yKCJJbnZhbGlkIFhNTDogIitkYXRhKSx4bWx9O3ZhciBhamF4TG9jUGFydHMsYWpheExvY2F0aW9uLHJoYXNoPS8jLiokLyxydHM9LyhbPyZdKV89W14mXSovLHJoZWFkZXJzPS9eKC4qPyk6WyBcdF0qKFteXHJcbl0qKSQvZ20scmxvY2FsUHJvdG9jb2w9L14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8scm5vQ29udGVudD0vXig/OkdFVHxIRUFEKSQvLHJwcm90b2NvbD0vXlwvXC8vLHJ1cmw9L14oW1x3ListXSs6KSg/OlwvXC8oPzpbXlwvPyNdKkB8KShbXlwvPyM6XSopKD86OihcZCspfCl8KS8scHJlZmlsdGVycz17fSx0cmFuc3BvcnRzPXt9LGFsbFR5cGVzPSIqLyIuY29uY2F0KCIqIik7dHJ5e2FqYXhMb2NhdGlvbj1sb2NhdGlvbi5ocmVmfWNhdGNoKGUpe2FqYXhMb2NhdGlvbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIiksYWpheExvY2F0aW9uLmhyZWY9IiIsYWpheExvY2F0aW9uPWFqYXhMb2NhdGlvbi5ocmVmfWFqYXhMb2NQYXJ0cz1ydXJsLmV4ZWMoYWpheExvY2F0aW9uLnRvTG93ZXJDYXNlKCkpfHxbXSxqUXVlcnkuZXh0ZW5kKHthY3RpdmU6MCxsYXN0TW9kaWZpZWQ6e30sZXRhZzp7fSxhamF4U2V0dGluZ3M6e3VybDphamF4TG9jYXRpb24sdHlwZToiR0VUIixpc0xvY2FsOnJsb2NhbFByb3RvY29sLnRlc3QoYWpheExvY1BhcnRzWzFdKSxnbG9iYWw6ITAscHJvY2Vzc0RhdGE6ITAsYXN5bmM6ITAsY29udGVudFR5cGU6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsYWNjZXB0czp7IioiOmFsbFR5cGVzLHRleHQ6InRleHQvcGxhaW4iLGh0bWw6InRleHQvaHRtbCIseG1sOiJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sIixqc29uOiJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQifSxjb250ZW50czp7eG1sOi94bWwvLGh0bWw6L2h0bWwvLGpzb246L2pzb24vfSxyZXNwb25zZUZpZWxkczp7eG1sOiJyZXNwb25zZVhNTCIsdGV4dDoicmVzcG9uc2VUZXh0Iixqc29uOiJyZXNwb25zZUpTT04ifSxjb252ZXJ0ZXJzOnsiKiB0ZXh0IjpTdHJpbmcsInRleHQgaHRtbCI6ITAsInRleHQganNvbiI6alF1ZXJ5LnBhcnNlSlNPTiwidGV4dCB4bWwiOmpRdWVyeS5wYXJzZVhNTH0sZmxhdE9wdGlvbnM6e3VybDohMCxjb250ZXh0OiEwfX0sYWpheFNldHVwOmZ1bmN0aW9uKHRhcmdldCxzZXR0aW5ncyl7cmV0dXJuIHNldHRpbmdzP2FqYXhFeHRlbmQoYWpheEV4dGVuZCh0YXJnZXQsalF1ZXJ5LmFqYXhTZXR0aW5ncyksc2V0dGluZ3MpOmFqYXhFeHRlbmQoalF1ZXJ5LmFqYXhTZXR0aW5ncyx0YXJnZXQpfSxhamF4UHJlZmlsdGVyOmFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyhwcmVmaWx0ZXJzKSxhamF4VHJhbnNwb3J0OmFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyh0cmFuc3BvcnRzKSxhamF4OmZ1bmN0aW9uKHVybCxvcHRpb25zKXtmdW5jdGlvbiBkb25lKHN0YXR1cyxuYXRpdmVTdGF0dXNUZXh0LHJlc3BvbnNlcyxoZWFkZXJzKXt2YXIgaXNTdWNjZXNzLHN1Y2Nlc3MsZXJyb3IscmVzcG9uc2UsbW9kaWZpZWQsc3RhdHVzVGV4dD1uYXRpdmVTdGF0dXNUZXh0OzIhPT1zdGF0ZSYmKHN0YXRlPTIsdGltZW91dFRpbWVyJiZjbGVhclRpbWVvdXQodGltZW91dFRpbWVyKSx0cmFuc3BvcnQ9dm9pZCAwLHJlc3BvbnNlSGVhZGVyc1N0cmluZz1oZWFkZXJzfHwiIixqcVhIUi5yZWFkeVN0YXRlPXN0YXR1cz4wPzQ6MCxpc1N1Y2Nlc3M9c3RhdHVzPj0yMDAmJjMwMD5zdGF0dXN8fDMwND09PXN0YXR1cyxyZXNwb25zZXMmJihyZXNwb25zZT1hamF4SGFuZGxlUmVzcG9uc2VzKHMsanFYSFIscmVzcG9uc2VzKSkscmVzcG9uc2U9YWpheENvbnZlcnQocyxyZXNwb25zZSxqcVhIUixpc1N1Y2Nlc3MpLGlzU3VjY2Vzcz8ocy5pZk1vZGlmaWVkJiYobW9kaWZpZWQ9anFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIkxhc3QtTW9kaWZpZWQiKSxtb2RpZmllZCYmKGpRdWVyeS5sYXN0TW9kaWZpZWRbY2FjaGVVUkxdPW1vZGlmaWVkKSxtb2RpZmllZD1qcVhIUi5nZXRSZXNwb25zZUhlYWRlcigiZXRhZyIpLG1vZGlmaWVkJiYoalF1ZXJ5LmV0YWdbY2FjaGVVUkxdPW1vZGlmaWVkKSksMjA0PT09c3RhdHVzfHwiSEVBRCI9PT1zLnR5cGU/c3RhdHVzVGV4dD0ibm9jb250ZW50IjozMDQ9PT1zdGF0dXM/c3RhdHVzVGV4dD0ibm90bW9kaWZpZWQiOihzdGF0dXNUZXh0PXJlc3BvbnNlLnN0YXRlLHN1Y2Nlc3M9cmVzcG9uc2UuZGF0YSxlcnJvcj1yZXNwb25zZS5lcnJvcixpc1N1Y2Nlc3M9IWVycm9yKSk6KGVycm9yPXN0YXR1c1RleHQsKHN0YXR1c3x8IXN0YXR1c1RleHQpJiYoc3RhdHVzVGV4dD0iZXJyb3IiLDA+c3RhdHVzJiYoc3RhdHVzPTApKSksanFYSFIuc3RhdHVzPXN0YXR1cyxqcVhIUi5zdGF0dXNUZXh0PShuYXRpdmVTdGF0dXNUZXh0fHxzdGF0dXNUZXh0KSsiIixpc1N1Y2Nlc3M/ZGVmZXJyZWQucmVzb2x2ZVdpdGgoY2FsbGJhY2tDb250ZXh0LFtzdWNjZXNzLHN0YXR1c1RleHQsanFYSFJdKTpkZWZlcnJlZC5yZWplY3RXaXRoKGNhbGxiYWNrQ29udGV4dCxbanFYSFIsc3RhdHVzVGV4dCxlcnJvcl0pLGpxWEhSLnN0YXR1c0NvZGUoc3RhdHVzQ29kZSksc3RhdHVzQ29kZT12b2lkIDAsZmlyZUdsb2JhbHMmJmdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKGlzU3VjY2Vzcz8iYWpheFN1Y2Nlc3MiOiJhamF4RXJyb3IiLFtqcVhIUixzLGlzU3VjY2Vzcz9zdWNjZXNzOmVycm9yXSksY29tcGxldGVEZWZlcnJlZC5maXJlV2l0aChjYWxsYmFja0NvbnRleHQsW2pxWEhSLHN0YXR1c1RleHRdKSxmaXJlR2xvYmFscyYmKGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCJhamF4Q29tcGxldGUiLFtqcVhIUixzXSksLS1qUXVlcnkuYWN0aXZlfHxqUXVlcnkuZXZlbnQudHJpZ2dlcigiYWpheFN0b3AiKSkpfSJvYmplY3QiPT10eXBlb2YgdXJsJiYob3B0aW9ucz11cmwsdXJsPXZvaWQgMCksb3B0aW9ucz1vcHRpb25zfHx7fTt2YXIgdHJhbnNwb3J0LGNhY2hlVVJMLHJlc3BvbnNlSGVhZGVyc1N0cmluZyxyZXNwb25zZUhlYWRlcnMsdGltZW91dFRpbWVyLHBhcnRzLGZpcmVHbG9iYWxzLGkscz1qUXVlcnkuYWpheFNldHVwKHt9LG9wdGlvbnMpLGNhbGxiYWNrQ29udGV4dD1zLmNvbnRleHR8fHMsZ2xvYmFsRXZlbnRDb250ZXh0PXMuY29udGV4dCYmKGNhbGxiYWNrQ29udGV4dC5ub2RlVHlwZXx8Y2FsbGJhY2tDb250ZXh0LmpxdWVyeSk/alF1ZXJ5KGNhbGxiYWNrQ29udGV4dCk6alF1ZXJ5LmV2ZW50LGRlZmVycmVkPWpRdWVyeS5EZWZlcnJlZCgpLGNvbXBsZXRlRGVmZXJyZWQ9alF1ZXJ5LkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSxzdGF0dXNDb2RlPXMuc3RhdHVzQ29kZXx8e30scmVxdWVzdEhlYWRlcnM9e30scmVxdWVzdEhlYWRlcnNOYW1lcz17fSxzdGF0ZT0wLHN0ckFib3J0PSJjYW5jZWxlZCIsanFYSFI9e3JlYWR5U3RhdGU6MCxnZXRSZXNwb25zZUhlYWRlcjpmdW5jdGlvbihrZXkpe3ZhciBtYXRjaDtpZigyPT09c3RhdGUpe2lmKCFyZXNwb25zZUhlYWRlcnMpZm9yKHJlc3BvbnNlSGVhZGVycz17fTttYXRjaD1yaGVhZGVycy5leGVjKHJlc3BvbnNlSGVhZGVyc1N0cmluZyk7KXJlc3BvbnNlSGVhZGVyc1ttYXRjaFsxXS50b0xvd2VyQ2FzZSgpXT1tYXRjaFsyXTttYXRjaD1yZXNwb25zZUhlYWRlcnNba2V5LnRvTG93ZXJDYXNlKCldfXJldHVybiBudWxsPT1tYXRjaD9udWxsOm1hdGNofSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gMj09PXN0YXRlP3Jlc3BvbnNlSGVhZGVyc1N0cmluZzpudWxsfSxzZXRSZXF1ZXN0SGVhZGVyOmZ1bmN0aW9uKG5hbWUsdmFsdWUpe3ZhciBsbmFtZT1uYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIHN0YXRlfHwobmFtZT1yZXF1ZXN0SGVhZGVyc05hbWVzW2xuYW1lXT1yZXF1ZXN0SGVhZGVyc05hbWVzW2xuYW1lXXx8bmFtZSxyZXF1ZXN0SGVhZGVyc1tuYW1lXT12YWx1ZSksdGhpc30sb3ZlcnJpZGVNaW1lVHlwZTpmdW5jdGlvbih0eXBlKXtyZXR1cm4gc3RhdGV8fChzLm1pbWVUeXBlPXR5cGUpLHRoaXN9LHN0YXR1c0NvZGU6ZnVuY3Rpb24obWFwKXt2YXIgY29kZTtpZihtYXApaWYoMj5zdGF0ZSlmb3IoY29kZSBpbiBtYXApc3RhdHVzQ29kZVtjb2RlXT1bc3RhdHVzQ29kZVtjb2RlXSxtYXBbY29kZV1dO2Vsc2UganFYSFIuYWx3YXlzKG1hcFtqcVhIUi5zdGF0dXNdKTtyZXR1cm4gdGhpc30sYWJvcnQ6ZnVuY3Rpb24oc3RhdHVzVGV4dCl7dmFyIGZpbmFsVGV4dD1zdGF0dXNUZXh0fHxzdHJBYm9ydDtyZXR1cm4gdHJhbnNwb3J0JiZ0cmFuc3BvcnQuYWJvcnQoZmluYWxUZXh0KSxkb25lKDAsZmluYWxUZXh0KSx0aGlzfX07aWYoZGVmZXJyZWQucHJvbWlzZShqcVhIUikuY29tcGxldGU9Y29tcGxldGVEZWZlcnJlZC5hZGQsanFYSFIuc3VjY2Vzcz1qcVhIUi5kb25lLGpxWEhSLmVycm9yPWpxWEhSLmZhaWwscy51cmw9KCh1cmx8fHMudXJsfHxhamF4TG9jYXRpb24pKyIiKS5yZXBsYWNlKHJoYXNoLCIiKS5yZXBsYWNlKHJwcm90b2NvbCxhamF4TG9jUGFydHNbMV0rIi8vIikscy50eXBlPW9wdGlvbnMubWV0aG9kfHxvcHRpb25zLnR5cGV8fHMubWV0aG9kfHxzLnR5cGUscy5kYXRhVHlwZXM9alF1ZXJ5LnRyaW0ocy5kYXRhVHlwZXx8IioiKS50b0xvd2VyQ2FzZSgpLm1hdGNoKHJub3R3aGl0ZSl8fFsiIl0sbnVsbD09cy5jcm9zc0RvbWFpbiYmKHBhcnRzPXJ1cmwuZXhlYyhzLnVybC50b0xvd2VyQ2FzZSgpKSxzLmNyb3NzRG9tYWluPSEoIXBhcnRzfHxwYXJ0c1sxXT09PWFqYXhMb2NQYXJ0c1sxXSYmcGFydHNbMl09PT1hamF4TG9jUGFydHNbMl0mJihwYXJ0c1szXXx8KCJodHRwOiI9PT1wYXJ0c1sxXT8iODAiOiI0NDMiKSk9PT0oYWpheExvY1BhcnRzWzNdfHwoImh0dHA6Ij09PWFqYXhMb2NQYXJ0c1sxXT8iODAiOiI0NDMiKSkpKSxzLmRhdGEmJnMucHJvY2Vzc0RhdGEmJiJzdHJpbmciIT10eXBlb2Ygcy5kYXRhJiYocy5kYXRhPWpRdWVyeS5wYXJhbShzLmRhdGEscy50cmFkaXRpb25hbCkpLGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKHByZWZpbHRlcnMscyxvcHRpb25zLGpxWEhSKSwyPT09c3RhdGUpcmV0dXJuIGpxWEhSO2ZpcmVHbG9iYWxzPXMuZ2xvYmFsLGZpcmVHbG9iYWxzJiYwPT09alF1ZXJ5LmFjdGl2ZSsrJiZqUXVlcnkuZXZlbnQudHJpZ2dlcigiYWpheFN0YXJ0Iikscy50eXBlPXMudHlwZS50b1VwcGVyQ2FzZSgpLHMuaGFzQ29udGVudD0hcm5vQ29udGVudC50ZXN0KHMudHlwZSksY2FjaGVVUkw9cy51cmwscy5oYXNDb250ZW50fHwocy5kYXRhJiYoY2FjaGVVUkw9cy51cmwrPShycXVlcnkudGVzdChjYWNoZVVSTCk/IiYiOiI/Iikrcy5kYXRhLGRlbGV0ZSBzLmRhdGEpLHMuY2FjaGU9PT0hMSYmKHMudXJsPXJ0cy50ZXN0KGNhY2hlVVJMKT9jYWNoZVVSTC5yZXBsYWNlKHJ0cywiJDFfPSIrbm9uY2UrKyk6Y2FjaGVVUkwrKHJxdWVyeS50ZXN0KGNhY2hlVVJMKT8iJiI6Ij8iKSsiXz0iK25vbmNlKyspKSxzLmlmTW9kaWZpZWQmJihqUXVlcnkubGFzdE1vZGlmaWVkW2NhY2hlVVJMXSYmanFYSFIuc2V0UmVxdWVzdEhlYWRlcigiSWYtTW9kaWZpZWQtU2luY2UiLGpRdWVyeS5sYXN0TW9kaWZpZWRbY2FjaGVVUkxdKSxqUXVlcnkuZXRhZ1tjYWNoZVVSTF0mJmpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIklmLU5vbmUtTWF0Y2giLGpRdWVyeS5ldGFnW2NhY2hlVVJMXSkpLChzLmRhdGEmJnMuaGFzQ29udGVudCYmcy5jb250ZW50VHlwZSE9PSExfHxvcHRpb25zLmNvbnRlbnRUeXBlKSYmanFYSFIuc2V0UmVxdWVzdEhlYWRlcigiQ29udGVudC1UeXBlIixzLmNvbnRlbnRUeXBlKSxqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCJBY2NlcHQiLHMuZGF0YVR5cGVzWzBdJiZzLmFjY2VwdHNbcy5kYXRhVHlwZXNbMF1dP3MuYWNjZXB0c1tzLmRhdGFUeXBlc1swXV0rKCIqIiE9PXMuZGF0YVR5cGVzWzBdPyIsICIrYWxsVHlwZXMrIjsgcT0wLjAxIjoiIik6cy5hY2NlcHRzWyIqIl0pO2ZvcihpIGluIHMuaGVhZGVycylqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKGkscy5oZWFkZXJzW2ldKTtpZihzLmJlZm9yZVNlbmQmJihzLmJlZm9yZVNlbmQuY2FsbChjYWxsYmFja0NvbnRleHQsanFYSFIscyk9PT0hMXx8Mj09PXN0YXRlKSlyZXR1cm4ganFYSFIuYWJvcnQoKTtzdHJBYm9ydD0iYWJvcnQiO2ZvcihpIGlue3N1Y2Nlc3M6MSxlcnJvcjoxLGNvbXBsZXRlOjF9KWpxWEhSW2ldKHNbaV0pO2lmKHRyYW5zcG9ydD1pbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyh0cmFuc3BvcnRzLHMsb3B0aW9ucyxqcVhIUikpe2pxWEhSLnJlYWR5U3RhdGU9MSxmaXJlR2xvYmFscyYmZ2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoImFqYXhTZW5kIixbanFYSFIsc10pLHMuYXN5bmMmJnMudGltZW91dD4wJiYodGltZW91dFRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtqcVhIUi5hYm9ydCgidGltZW91dCIpfSxzLnRpbWVvdXQpKTt0cnl7c3RhdGU9MSx0cmFuc3BvcnQuc2VuZChyZXF1ZXN0SGVhZGVycyxkb25lKX1jYXRjaChlKXtpZighKDI+c3RhdGUpKXRocm93IGU7ZG9uZSgtMSxlKX19ZWxzZSBkb25lKC0xLCJObyBUcmFuc3BvcnQiKTtyZXR1cm4ganFYSFJ9LGdldEpTT046ZnVuY3Rpb24odXJsLGRhdGEsY2FsbGJhY2spe3JldHVybiBqUXVlcnkuZ2V0KHVybCxkYXRhLGNhbGxiYWNrLCJqc29uIil9LGdldFNjcmlwdDpmdW5jdGlvbih1cmwsY2FsbGJhY2spe3JldHVybiBqUXVlcnkuZ2V0KHVybCx2b2lkIDAsY2FsbGJhY2ssInNjcmlwdCIpfX0pLGpRdWVyeS5lYWNoKFsiZ2V0IiwicG9zdCJdLGZ1bmN0aW9uKGksbWV0aG9kKXtqUXVlcnlbbWV0aG9kXT1mdW5jdGlvbih1cmwsZGF0YSxjYWxsYmFjayx0eXBlKXtyZXR1cm4galF1ZXJ5LmlzRnVuY3Rpb24oZGF0YSkmJih0eXBlPXR5cGV8fGNhbGxiYWNrLGNhbGxiYWNrPWRhdGEsZGF0YT12b2lkIDApLGpRdWVyeS5hamF4KHt1cmw6dXJsLHR5cGU6bWV0aG9kLGRhdGFUeXBlOnR5cGUsZGF0YTpkYXRhLHN1Y2Nlc3M6Y2FsbGJhY2t9KX19KSxqUXVlcnkuZWFjaChbImFqYXhTdGFydCIsImFqYXhTdG9wIiwiYWpheENvbXBsZXRlIiwiYWpheEVycm9yIiwiYWpheFN1Y2Nlc3MiLCJhamF4U2VuZCJdLGZ1bmN0aW9uKGksdHlwZSl7alF1ZXJ5LmZuW3R5cGVdPWZ1bmN0aW9uKGZuKXtyZXR1cm4gdGhpcy5vbih0eXBlLGZuKX19KSxqUXVlcnkuX2V2YWxVcmw9ZnVuY3Rpb24odXJsKXtyZXR1cm4galF1ZXJ5LmFqYXgoe3VybDp1cmwsdHlwZToiR0VUIixkYXRhVHlwZToic2NyaXB0Iixhc3luYzohMSxnbG9iYWw6ITEsInRocm93cyI6ITB9KX0salF1ZXJ5LmZuLmV4dGVuZCh7d3JhcEFsbDpmdW5jdGlvbihodG1sKXt2YXIgd3JhcDtyZXR1cm4galF1ZXJ5LmlzRnVuY3Rpb24oaHRtbCk/dGhpcy5lYWNoKGZ1bmN0aW9uKGkpe2pRdWVyeSh0aGlzKS53cmFwQWxsKGh0bWwuY2FsbCh0aGlzLGkpKX0pOih0aGlzWzBdJiYod3JhcD1qUXVlcnkoaHRtbCx0aGlzWzBdLm93bmVyRG9jdW1lbnQpLmVxKDApLmNsb25lKCEwKSx0aGlzWzBdLnBhcmVudE5vZGUmJndyYXAuaW5zZXJ0QmVmb3JlKHRoaXNbMF0pLHdyYXAubWFwKGZ1bmN0aW9uKCl7Zm9yKHZhciBlbGVtPXRoaXM7ZWxlbS5maXJzdEVsZW1lbnRDaGlsZDspZWxlbT1lbGVtLmZpcnN0RWxlbWVudENoaWxkO3JldHVybiBlbGVtfSkuYXBwZW5kKHRoaXMpKSx0aGlzKX0sd3JhcElubmVyOmZ1bmN0aW9uKGh0bWwpe3JldHVybiB0aGlzLmVhY2goalF1ZXJ5LmlzRnVuY3Rpb24oaHRtbCk/ZnVuY3Rpb24oaSl7alF1ZXJ5KHRoaXMpLndyYXBJbm5lcihodG1sLmNhbGwodGhpcyxpKSl9OmZ1bmN0aW9uKCl7dmFyIHNlbGY9alF1ZXJ5KHRoaXMpLGNvbnRlbnRzPXNlbGYuY29udGVudHMoKTtjb250ZW50cy5sZW5ndGg/Y29udGVudHMud3JhcEFsbChodG1sKTpzZWxmLmFwcGVuZChodG1sKX0pfSx3cmFwOmZ1bmN0aW9uKGh0bWwpe3ZhciBpc0Z1bmN0aW9uPWpRdWVyeS5pc0Z1bmN0aW9uKGh0bWwpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7alF1ZXJ5KHRoaXMpLndyYXBBbGwoaXNGdW5jdGlvbj9odG1sLmNhbGwodGhpcyxpKTpodG1sKX0pfSx1bndyYXA6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXJlbnQoKS5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5Lm5vZGVOYW1lKHRoaXMsImJvZHkiKXx8alF1ZXJ5KHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KS5lbmQoKX19KSxqUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbj1mdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5vZmZzZXRXaWR0aDw9MCYmZWxlbS5vZmZzZXRIZWlnaHQ8PTB9LGpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJsZT1mdW5jdGlvbihlbGVtKXtyZXR1cm4halF1ZXJ5LmV4cHIuZmlsdGVycy5oaWRkZW4oZWxlbSl9O3ZhciByMjA9LyUyMC9nLHJicmFja2V0PS9cW1xdJC8sckNSTEY9L1xyP1xuL2cscnN1Ym1pdHRlclR5cGVzPS9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxyc3VibWl0dGFibGU9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO2pRdWVyeS5wYXJhbT1mdW5jdGlvbihhLHRyYWRpdGlvbmFsKXt2YXIgcHJlZml4LHM9W10sYWRkPWZ1bmN0aW9uKGtleSx2YWx1ZSl7dmFsdWU9alF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpP3ZhbHVlKCk6bnVsbD09dmFsdWU/IiI6dmFsdWUsc1tzLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KGtleSkrIj0iK2VuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSl9O2lmKHZvaWQgMD09PXRyYWRpdGlvbmFsJiYodHJhZGl0aW9uYWw9alF1ZXJ5LmFqYXhTZXR0aW5ncyYmalF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbCksalF1ZXJ5LmlzQXJyYXkoYSl8fGEuanF1ZXJ5JiYhalF1ZXJ5LmlzUGxhaW5PYmplY3QoYSkpalF1ZXJ5LmVhY2goYSxmdW5jdGlvbigpe2FkZCh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcihwcmVmaXggaW4gYSlidWlsZFBhcmFtcyhwcmVmaXgsYVtwcmVmaXhdLHRyYWRpdGlvbmFsLGFkZCk7cmV0dXJuIHMuam9pbigiJiIpLnJlcGxhY2UocjIwLCIrIil9LGpRdWVyeS5mbi5leHRlbmQoe3NlcmlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiBqUXVlcnkucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgZWxlbWVudHM9alF1ZXJ5LnByb3AodGhpcywiZWxlbWVudHMiKTtyZXR1cm4gZWxlbWVudHM/alF1ZXJ5Lm1ha2VBcnJheShlbGVtZW50cyk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3ZhciB0eXBlPXRoaXMudHlwZTtyZXR1cm4gdGhpcy5uYW1lJiYhalF1ZXJ5KHRoaXMpLmlzKCI6ZGlzYWJsZWQiKSYmcnN1Ym1pdHRhYmxlLnRlc3QodGhpcy5ub2RlTmFtZSkmJiFyc3VibWl0dGVyVHlwZXMudGVzdCh0eXBlKSYmKHRoaXMuY2hlY2tlZHx8IXJjaGVja2FibGVUeXBlLnRlc3QodHlwZSkpfSkubWFwKGZ1bmN0aW9uKGksZWxlbSl7dmFyIHZhbD1qUXVlcnkodGhpcykudmFsKCk7cmV0dXJuIG51bGw9PXZhbD9udWxsOmpRdWVyeS5pc0FycmF5KHZhbCk/alF1ZXJ5Lm1hcCh2YWwsZnVuY3Rpb24odmFsKXtyZXR1cm57bmFtZTplbGVtLm5hbWUsdmFsdWU6dmFsLnJlcGxhY2UockNSTEYsIlxyXG4iKX19KTp7bmFtZTplbGVtLm5hbWUsdmFsdWU6dmFsLnJlcGxhY2UockNSTEYsIlxyXG4iKX19KS5nZXQoKX19KSxqUXVlcnkuYWpheFNldHRpbmdzLnhocj1mdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0fWNhdGNoKGUpe319O3ZhciB4aHJJZD0wLHhockNhbGxiYWNrcz17fSx4aHJTdWNjZXNzU3RhdHVzPXswOjIwMCwxMjIzOjIwNH0seGhyU3VwcG9ydGVkPWpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7d2luZG93LkFjdGl2ZVhPYmplY3QmJmpRdWVyeSh3aW5kb3cpLm9uKCJ1bmxvYWQiLGZ1bmN0aW9uKCl7Zm9yKHZhciBrZXkgaW4geGhyQ2FsbGJhY2tzKXhockNhbGxiYWNrc1trZXldKCl9KSxzdXBwb3J0LmNvcnM9ISF4aHJTdXBwb3J0ZWQmJiJ3aXRoQ3JlZGVudGlhbHMiaW4geGhyU3VwcG9ydGVkLHN1cHBvcnQuYWpheD14aHJTdXBwb3J0ZWQ9ISF4aHJTdXBwb3J0ZWQsalF1ZXJ5LmFqYXhUcmFuc3BvcnQoZnVuY3Rpb24ob3B0aW9ucyl7dmFyIGNhbGxiYWNrO3JldHVybiBzdXBwb3J0LmNvcnN8fHhoclN1cHBvcnRlZCYmIW9wdGlvbnMuY3Jvc3NEb21haW4/e3NlbmQ6ZnVuY3Rpb24oaGVhZGVycyxjb21wbGV0ZSl7dmFyIGkseGhyPW9wdGlvbnMueGhyKCksaWQ9Kyt4aHJJZDtpZih4aHIub3BlbihvcHRpb25zLnR5cGUsb3B0aW9ucy51cmwsb3B0aW9ucy5hc3luYyxvcHRpb25zLnVzZXJuYW1lLG9wdGlvbnMucGFzc3dvcmQpLG9wdGlvbnMueGhyRmllbGRzKWZvcihpIGluIG9wdGlvbnMueGhyRmllbGRzKXhocltpXT1vcHRpb25zLnhockZpZWxkc1tpXTtvcHRpb25zLm1pbWVUeXBlJiZ4aHIub3ZlcnJpZGVNaW1lVHlwZSYmeGhyLm92ZXJyaWRlTWltZVR5cGUob3B0aW9ucy5taW1lVHlwZSksb3B0aW9ucy5jcm9zc0RvbWFpbnx8aGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdfHwoaGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdPSJYTUxIdHRwUmVxdWVzdCIpO2ZvcihpIGluIGhlYWRlcnMpeGhyLnNldFJlcXVlc3RIZWFkZXIoaSxoZWFkZXJzW2ldKTtjYWxsYmFjaz1mdW5jdGlvbih0eXBlKXtyZXR1cm4gZnVuY3Rpb24oKXtjYWxsYmFjayYmKGRlbGV0ZSB4aHJDYWxsYmFja3NbaWRdLGNhbGxiYWNrPXhoci5vbmxvYWQ9eGhyLm9uZXJyb3I9bnVsbCwiYWJvcnQiPT09dHlwZT94aHIuYWJvcnQoKToiZXJyb3IiPT09dHlwZT9jb21wbGV0ZSh4aHIuc3RhdHVzLHhoci5zdGF0dXNUZXh0KTpjb21wbGV0ZSh4aHJTdWNjZXNzU3RhdHVzW3hoci5zdGF0dXNdfHx4aHIuc3RhdHVzLHhoci5zdGF0dXNUZXh0LCJzdHJpbmciPT10eXBlb2YgeGhyLnJlc3BvbnNlVGV4dD97dGV4dDp4aHIucmVzcG9uc2VUZXh0fTp2b2lkIDAseGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSl9fSx4aHIub25sb2FkPWNhbGxiYWNrKCkseGhyLm9uZXJyb3I9Y2FsbGJhY2soImVycm9yIiksY2FsbGJhY2s9eGhyQ2FsbGJhY2tzW2lkXT1jYWxsYmFjaygiYWJvcnQiKTt0cnl7eGhyLnNlbmQob3B0aW9ucy5oYXNDb250ZW50JiZvcHRpb25zLmRhdGF8fG51bGwpfWNhdGNoKGUpe2lmKGNhbGxiYWNrKXRocm93IGV9fSxhYm9ydDpmdW5jdGlvbigpe2NhbGxiYWNrJiZjYWxsYmFjaygpfX06dm9pZCAwfSksalF1ZXJ5LmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OiJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdCJ9LGNvbnRlbnRzOntzY3JpcHQ6Lyg/OmphdmF8ZWNtYSlzY3JpcHQvfSxjb252ZXJ0ZXJzOnsidGV4dCBzY3JpcHQiOmZ1bmN0aW9uKHRleHQpe3JldHVybiBqUXVlcnkuZ2xvYmFsRXZhbCh0ZXh0KSx0ZXh0fX19KSxqUXVlcnkuYWpheFByZWZpbHRlcigic2NyaXB0IixmdW5jdGlvbihzKXt2b2lkIDA9PT1zLmNhY2hlJiYocy5jYWNoZT0hMSkscy5jcm9zc0RvbWFpbiYmKHMudHlwZT0iR0VUIil9KSxqUXVlcnkuYWpheFRyYW5zcG9ydCgic2NyaXB0IixmdW5jdGlvbihzKXtpZihzLmNyb3NzRG9tYWluKXt2YXIgc2NyaXB0LGNhbGxiYWNrO3JldHVybntzZW5kOmZ1bmN0aW9uKF8sY29tcGxldGUpe3NjcmlwdD1qUXVlcnkoIjxzY3JpcHQ+IikucHJvcCh7YXN5bmM6ITAsY2hhcnNldDpzLnNjcmlwdENoYXJzZXQsc3JjOnMudXJsfSkub24oImxvYWQgZXJyb3IiLGNhbGxiYWNrPWZ1bmN0aW9uKGV2dCl7c2NyaXB0LnJlbW92ZSgpLGNhbGxiYWNrPW51bGwsZXZ0JiZjb21wbGV0ZSgiZXJyb3IiPT09ZXZ0LnR5cGU/NDA0OjIwMCxldnQudHlwZSl9KSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdFswXSl9LGFib3J0OmZ1bmN0aW9uKCl7Y2FsbGJhY2smJmNhbGxiYWNrKCl9fX19KTt2YXIgb2xkQ2FsbGJhY2tzPVtdLHJqc29ucD0vKD0pXD8oPz0mfCQpfFw/XD8vO2pRdWVyeS5hamF4U2V0dXAoe2pzb25wOiJjYWxsYmFjayIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBjYWxsYmFjaz1vbGRDYWxsYmFja3MucG9wKCl8fGpRdWVyeS5leHBhbmRvKyJfIitub25jZSsrO3JldHVybiB0aGlzW2NhbGxiYWNrXT0hMCxjYWxsYmFja319KSxqUXVlcnkuYWpheFByZWZpbHRlcigianNvbiBqc29ucCIsZnVuY3Rpb24ocyxvcmlnaW5hbFNldHRpbmdzLGpxWEhSKXt2YXIgY2FsbGJhY2tOYW1lLG92ZXJ3cml0dGVuLHJlc3BvbnNlQ29udGFpbmVyLGpzb25Qcm9wPXMuanNvbnAhPT0hMSYmKHJqc29ucC50ZXN0KHMudXJsKT8idXJsIjoic3RyaW5nIj09dHlwZW9mIHMuZGF0YSYmIShzLmNvbnRlbnRUeXBlfHwiIikuaW5kZXhPZigiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIikmJnJqc29ucC50ZXN0KHMuZGF0YSkmJiJkYXRhIik7cmV0dXJuIGpzb25Qcm9wfHwianNvbnAiPT09cy5kYXRhVHlwZXNbMF0/KGNhbGxiYWNrTmFtZT1zLmpzb25wQ2FsbGJhY2s9alF1ZXJ5LmlzRnVuY3Rpb24ocy5qc29ucENhbGxiYWNrKT9zLmpzb25wQ2FsbGJhY2soKTpzLmpzb25wQ2FsbGJhY2ssanNvblByb3A/c1tqc29uUHJvcF09c1tqc29uUHJvcF0ucmVwbGFjZShyanNvbnAsIiQxIitjYWxsYmFja05hbWUpOnMuanNvbnAhPT0hMSYmKHMudXJsKz0ocnF1ZXJ5LnRlc3Qocy51cmwpPyImIjoiPyIpK3MuanNvbnArIj0iK2NhbGxiYWNrTmFtZSkscy5jb252ZXJ0ZXJzWyJzY3JpcHQganNvbiJdPWZ1bmN0aW9uKCl7cmV0dXJuIHJlc3BvbnNlQ29udGFpbmVyfHxqUXVlcnkuZXJyb3IoY2FsbGJhY2tOYW1lKyIgd2FzIG5vdCBjYWxsZWQiKSxyZXNwb25zZUNvbnRhaW5lclswXX0scy5kYXRhVHlwZXNbMF09Impzb24iLG92ZXJ3cml0dGVuPXdpbmRvd1tjYWxsYmFja05hbWVdLHdpbmRvd1tjYWxsYmFja05hbWVdPWZ1bmN0aW9uKCl7cmVzcG9uc2VDb250YWluZXI9YXJndW1lbnRzfSxqcVhIUi5hbHdheXMoZnVuY3Rpb24oKXt3aW5kb3dbY2FsbGJhY2tOYW1lXT1vdmVyd3JpdHRlbixzW2NhbGxiYWNrTmFtZV0mJihzLmpzb25wQ2FsbGJhY2s9b3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrLG9sZENhbGxiYWNrcy5wdXNoKGNhbGxiYWNrTmFtZSkpLHJlc3BvbnNlQ29udGFpbmVyJiZqUXVlcnkuaXNGdW5jdGlvbihvdmVyd3JpdHRlbikmJm92ZXJ3cml0dGVuKHJlc3BvbnNlQ29udGFpbmVyWzBdKSxyZXNwb25zZUNvbnRhaW5lcj1vdmVyd3JpdHRlbj12b2lkIDB9KSwic2NyaXB0Iik6dm9pZCAwfSksalF1ZXJ5LnBhcnNlSFRNTD1mdW5jdGlvbihkYXRhLGNvbnRleHQsa2VlcFNjcmlwdHMpe2lmKCFkYXRhfHwic3RyaW5nIiE9dHlwZW9mIGRhdGEpcmV0dXJuIG51bGw7ImJvb2xlYW4iPT10eXBlb2YgY29udGV4dCYmKGtlZXBTY3JpcHRzPWNvbnRleHQsY29udGV4dD0hMSksY29udGV4dD1jb250ZXh0fHxkb2N1bWVudDt2YXIgcGFyc2VkPXJzaW5nbGVUYWcuZXhlYyhkYXRhKSxzY3JpcHRzPSFrZWVwU2NyaXB0cyYmW107cmV0dXJuIHBhcnNlZD9bY29udGV4dC5jcmVhdGVFbGVtZW50KHBhcnNlZFsxXSldOihwYXJzZWQ9alF1ZXJ5LmJ1aWxkRnJhZ21lbnQoW2RhdGFdLGNvbnRleHQsc2NyaXB0cyksc2NyaXB0cyYmc2NyaXB0cy5sZW5ndGgmJmpRdWVyeShzY3JpcHRzKS5yZW1vdmUoKSxqUXVlcnkubWVyZ2UoW10scGFyc2VkLmNoaWxkTm9kZXMpKX07dmFyIF9sb2FkPWpRdWVyeS5mbi5sb2FkO2pRdWVyeS5mbi5sb2FkPWZ1bmN0aW9uKHVybCxwYXJhbXMsY2FsbGJhY2spe2lmKCJzdHJpbmciIT10eXBlb2YgdXJsJiZfbG9hZClyZXR1cm4gX2xvYWQuYXBwbHkodGhpcyxhcmd1bWVudHMpO3ZhciBzZWxlY3Rvcix0eXBlLHJlc3BvbnNlLHNlbGY9dGhpcyxvZmY9dXJsLmluZGV4T2YoIiAiKTtyZXR1cm4gb2ZmPj0wJiYoc2VsZWN0b3I9alF1ZXJ5LnRyaW0odXJsLnNsaWNlKG9mZikpLHVybD11cmwuc2xpY2UoMCxvZmYpKSxqUXVlcnkuaXNGdW5jdGlvbihwYXJhbXMpPyhjYWxsYmFjaz1wYXJhbXMscGFyYW1zPXZvaWQgMCk6cGFyYW1zJiYib2JqZWN0Ij09dHlwZW9mIHBhcmFtcyYmKHR5cGU9IlBPU1QiKSxzZWxmLmxlbmd0aD4wJiZqUXVlcnkuYWpheCh7dXJsOnVybCx0eXBlOnR5cGUsZGF0YVR5cGU6Imh0bWwiLGRhdGE6cGFyYW1zfSkuZG9uZShmdW5jdGlvbihyZXNwb25zZVRleHQpe3Jlc3BvbnNlPWFyZ3VtZW50cyxzZWxmLmh0bWwoc2VsZWN0b3I/alF1ZXJ5KCI8ZGl2PiIpLmFwcGVuZChqUXVlcnkucGFyc2VIVE1MKHJlc3BvbnNlVGV4dCkpLmZpbmQoc2VsZWN0b3IpOnJlc3BvbnNlVGV4dCl9KS5jb21wbGV0ZShjYWxsYmFjayYmZnVuY3Rpb24oanFYSFIsc3RhdHVzKXtzZWxmLmVhY2goY2FsbGJhY2sscmVzcG9uc2V8fFtqcVhIUi5yZXNwb25zZVRleHQsc3RhdHVzLGpxWEhSXSl9KSx0aGlzfSxqUXVlcnkuZXhwci5maWx0ZXJzLmFuaW1hdGVkPWZ1bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkuZ3JlcChqUXVlcnkudGltZXJzLGZ1bmN0aW9uKGZuKXtyZXR1cm4gZWxlbT09PWZuLmVsZW19KS5sZW5ndGh9O3ZhciBkb2NFbGVtPXdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7alF1ZXJ5Lm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKGVsZW0sb3B0aW9ucyxpKXt2YXIgY3VyUG9zaXRpb24sY3VyTGVmdCxjdXJDU1NUb3AsY3VyVG9wLGN1ck9mZnNldCxjdXJDU1NMZWZ0LGNhbGN1bGF0ZVBvc2l0aW9uLHBvc2l0aW9uPWpRdWVyeS5jc3MoZWxlbSwicG9zaXRpb24iKSxjdXJFbGVtPWpRdWVyeShlbGVtKSxwcm9wcz17fTsic3RhdGljIj09PXBvc2l0aW9uJiYoZWxlbS5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiKSxjdXJPZmZzZXQ9Y3VyRWxlbS5vZmZzZXQoKSxjdXJDU1NUb3A9alF1ZXJ5LmNzcyhlbGVtLCJ0b3AiKSxjdXJDU1NMZWZ0PWpRdWVyeS5jc3MoZWxlbSwibGVmdCIpLGNhbGN1bGF0ZVBvc2l0aW9uPSgiYWJzb2x1dGUiPT09cG9zaXRpb258fCJmaXhlZCI9PT1wb3NpdGlvbikmJihjdXJDU1NUb3ArY3VyQ1NTTGVmdCkuaW5kZXhPZigiYXV0byIpPi0xLGNhbGN1bGF0ZVBvc2l0aW9uPyhjdXJQb3NpdGlvbj1jdXJFbGVtLnBvc2l0aW9uKCksY3VyVG9wPWN1clBvc2l0aW9uLnRvcCxjdXJMZWZ0PWN1clBvc2l0aW9uLmxlZnQpOihjdXJUb3A9cGFyc2VGbG9hdChjdXJDU1NUb3ApfHwwLGN1ckxlZnQ9cGFyc2VGbG9hdChjdXJDU1NMZWZ0KXx8MCksalF1ZXJ5LmlzRnVuY3Rpb24ob3B0aW9ucykmJihvcHRpb25zPW9wdGlvbnMuY2FsbChlbGVtLGksY3VyT2Zmc2V0KSksbnVsbCE9b3B0aW9ucy50b3AmJihwcm9wcy50b3A9b3B0aW9ucy50b3AtY3VyT2Zmc2V0LnRvcCtjdXJUb3ApLG51bGwhPW9wdGlvbnMubGVmdCYmKHByb3BzLmxlZnQ9b3B0aW9ucy5sZWZ0LWN1ck9mZnNldC5sZWZ0K2N1ckxlZnQpLCJ1c2luZyJpbiBvcHRpb25zP29wdGlvbnMudXNpbmcuY2FsbChlbGVtLHByb3BzKTpjdXJFbGVtLmNzcyhwcm9wcyl9fSxqUXVlcnkuZm4uZXh0ZW5kKHtvZmZzZXQ6ZnVuY3Rpb24ob3B0aW9ucyl7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdm9pZCAwPT09b3B0aW9ucz90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihpKXtqUXVlcnkub2Zmc2V0LnNldE9mZnNldCh0aGlzLG9wdGlvbnMsaSl9KTt2YXIgZG9jRWxlbSx3aW4sZWxlbT10aGlzWzBdLGJveD17dG9wOjAsbGVmdDowfSxkb2M9ZWxlbSYmZWxlbS5vd25lckRvY3VtZW50O2lmKGRvYylyZXR1cm4gZG9jRWxlbT1kb2MuZG9jdW1lbnRFbGVtZW50LGpRdWVyeS5jb250YWlucyhkb2NFbGVtLGVsZW0pPyh0eXBlb2YgZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QhPT1zdHJ1bmRlZmluZWQmJihib3g9ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSksd2luPWdldFdpbmRvdyhkb2MpLHt0b3A6Ym94LnRvcCt3aW4ucGFnZVlPZmZzZXQtZG9jRWxlbS5jbGllbnRUb3AsbGVmdDpib3gubGVmdCt3aW4ucGFnZVhPZmZzZXQtZG9jRWxlbS5jbGllbnRMZWZ0fSk6Ym94fSxwb3NpdGlvbjpmdW5jdGlvbigpe2lmKHRoaXNbMF0pe3ZhciBvZmZzZXRQYXJlbnQsb2Zmc2V0LGVsZW09dGhpc1swXSxwYXJlbnRPZmZzZXQ9e3RvcDowLGxlZnQ6MH07cmV0dXJuImZpeGVkIj09PWpRdWVyeS5jc3MoZWxlbSwicG9zaXRpb24iKT9vZmZzZXQ9ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKToob2Zmc2V0UGFyZW50PXRoaXMub2Zmc2V0UGFyZW50KCksb2Zmc2V0PXRoaXMub2Zmc2V0KCksalF1ZXJ5Lm5vZGVOYW1lKG9mZnNldFBhcmVudFswXSwiaHRtbCIpfHwocGFyZW50T2Zmc2V0PW9mZnNldFBhcmVudC5vZmZzZXQoKSkscGFyZW50T2Zmc2V0LnRvcCs9alF1ZXJ5LmNzcyhvZmZzZXRQYXJlbnRbMF0sImJvcmRlclRvcFdpZHRoIiwhMCkscGFyZW50T2Zmc2V0LmxlZnQrPWpRdWVyeS5jc3Mob2Zmc2V0UGFyZW50WzBdLCJib3JkZXJMZWZ0V2lkdGgiLCEwKSkse3RvcDpvZmZzZXQudG9wLXBhcmVudE9mZnNldC50b3AtalF1ZXJ5LmNzcyhlbGVtLCJtYXJnaW5Ub3AiLCEwKSxsZWZ0Om9mZnNldC5sZWZ0LXBhcmVudE9mZnNldC5sZWZ0LWpRdWVyeS5jc3MoZWxlbSwibWFyZ2luTGVmdCIsITApfX19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe2Zvcih2YXIgb2Zmc2V0UGFyZW50PXRoaXMub2Zmc2V0UGFyZW50fHxkb2NFbGVtO29mZnNldFBhcmVudCYmIWpRdWVyeS5ub2RlTmFtZShvZmZzZXRQYXJlbnQsImh0bWwiKSYmInN0YXRpYyI9PT1qUXVlcnkuY3NzKG9mZnNldFBhcmVudCwicG9zaXRpb24iKTspb2Zmc2V0UGFyZW50PW9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7cmV0dXJuIG9mZnNldFBhcmVudHx8ZG9jRWxlbX0pfX0pLGpRdWVyeS5lYWNoKHtzY3JvbGxMZWZ0OiJwYWdlWE9mZnNldCIsc2Nyb2xsVG9wOiJwYWdlWU9mZnNldCJ9LGZ1bmN0aW9uKG1ldGhvZCxwcm9wKXt2YXIgdG9wPSJwYWdlWU9mZnNldCI9PT1wcm9wO2pRdWVyeS5mblttZXRob2RdPWZ1bmN0aW9uKHZhbCl7cmV0dXJuIGFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGVsZW0sbWV0aG9kLHZhbCl7dmFyIHdpbj1nZXRXaW5kb3coZWxlbSk7cmV0dXJuIHZvaWQgMD09PXZhbD93aW4/d2luW3Byb3BdOmVsZW1bbWV0aG9kXTp2b2lkKHdpbj93aW4uc2Nyb2xsVG8odG9wP3dpbmRvdy5wYWdlWE9mZnNldDp2YWwsdG9wP3ZhbDp3aW5kb3cucGFnZVlPZmZzZXQpOmVsZW1bbWV0aG9kXT12YWwpfSxtZXRob2QsdmFsLGFyZ3VtZW50cy5sZW5ndGgsbnVsbCl9fSksalF1ZXJ5LmVhY2goWyJ0b3AiLCJsZWZ0Il0sZnVuY3Rpb24oaSxwcm9wKXtqUXVlcnkuY3NzSG9va3NbcHJvcF09YWRkR2V0SG9va0lmKHN1cHBvcnQucGl4ZWxQb3NpdGlvbixmdW5jdGlvbihlbGVtLGNvbXB1dGVkKXtyZXR1cm4gY29tcHV0ZWQ/KGNvbXB1dGVkPWN1ckNTUyhlbGVtLHByb3ApLHJudW1ub25weC50ZXN0KGNvbXB1dGVkKT9qUXVlcnkoZWxlbSkucG9zaXRpb24oKVtwcm9wXSsicHgiOmNvbXB1dGVkKTp2b2lkIDB9KX0pLGpRdWVyeS5lYWNoKHtIZWlnaHQ6ImhlaWdodCIsV2lkdGg6IndpZHRoIn0sZnVuY3Rpb24obmFtZSx0eXBlKXtqUXVlcnkuZWFjaCh7cGFkZGluZzoiaW5uZXIiK25hbWUsY29udGVudDp0eXBlLCIiOiJvdXRlciIrbmFtZX0sZnVuY3Rpb24oZGVmYXVsdEV4dHJhLGZ1bmNOYW1lKXtqUXVlcnkuZm5bZnVuY05hbWVdPWZ1bmN0aW9uKG1hcmdpbix2YWx1ZSl7dmFyIGNoYWluYWJsZT1hcmd1bWVudHMubGVuZ3RoJiYoZGVmYXVsdEV4dHJhfHwiYm9vbGVhbiIhPXR5cGVvZiBtYXJnaW4pLGV4dHJhPWRlZmF1bHRFeHRyYXx8KG1hcmdpbj09PSEwfHx2YWx1ZT09PSEwPyJtYXJnaW4iOiJib3JkZXIiKTtyZXR1cm4gYWNjZXNzKHRoaXMsZnVuY3Rpb24oZWxlbSx0eXBlLHZhbHVlKXt2YXIgZG9jO3JldHVybiBqUXVlcnkuaXNXaW5kb3coZWxlbSk/ZWxlbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbImNsaWVudCIrbmFtZV06OT09PWVsZW0ubm9kZVR5cGU/KGRvYz1lbGVtLmRvY3VtZW50RWxlbWVudCxNYXRoLm1heChlbGVtLmJvZHlbInNjcm9sbCIrbmFtZV0sZG9jWyJzY3JvbGwiK25hbWVdLGVsZW0uYm9keVsib2Zmc2V0IituYW1lXSxkb2NbIm9mZnNldCIrbmFtZV0sZG9jWyJjbGllbnQiK25hbWVdKSk6dm9pZCAwPT09dmFsdWU/alF1ZXJ5LmNzcyhlbGVtLHR5cGUsZXh0cmEpOmpRdWVyeS5zdHlsZShlbGVtLHR5cGUsdmFsdWUsZXh0cmEpfSx0eXBlLGNoYWluYWJsZT9tYXJnaW46dm9pZCAwLGNoYWluYWJsZSxudWxsKX19KX0pLGpRdWVyeS5mbi5zaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RofSxqUXVlcnkuZm4uYW5kU2VsZj1qUXVlcnkuZm4uYWRkQmFjaywiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoImpxdWVyeSIsW10sZnVuY3Rpb24oKXtyZXR1cm4galF1ZXJ5fSk7dmFyIF9qUXVlcnk9d2luZG93LmpRdWVyeSxfJD13aW5kb3cuJDtyZXR1cm4galF1ZXJ5Lm5vQ29uZmxpY3Q9ZnVuY3Rpb24oZGVlcCl7cmV0dXJuIHdpbmRvdy4kPT09alF1ZXJ5JiYod2luZG93LiQ9XyQpLGRlZXAmJndpbmRvdy5qUXVlcnk9PT1qUXVlcnkmJih3aW5kb3cualF1ZXJ5PV9qUXVlcnkpLGpRdWVyeX0sdHlwZW9mIG5vR2xvYmFsPT09c3RydW5kZWZpbmVkJiYod2luZG93LmpRdWVyeT13aW5kb3cuJD1qUXVlcnkpLGpRdWVyeX0pLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYmFzZUluZGV4T2YoYXJyYXksdmFsdWUsZnJvbUluZGV4KXtmb3IodmFyIGluZGV4PShmcm9tSW5kZXh8fDApLTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowOysraW5kZXg8bGVuZ3RoOylpZihhcnJheVtpbmRleF09PT12YWx1ZSlyZXR1cm4gaW5kZXg7cmV0dXJuLTF9ZnVuY3Rpb24gY2FjaGVJbmRleE9mKGNhY2hlLHZhbHVlKXt2YXIgdHlwZT10eXBlb2YgdmFsdWU7aWYoY2FjaGU9Y2FjaGUuY2FjaGUsImJvb2xlYW4iPT10eXBlfHxudWxsPT12YWx1ZSlyZXR1cm4gY2FjaGVbdmFsdWVdPzA6LTE7Im51bWJlciIhPXR5cGUmJiJzdHJpbmciIT10eXBlJiYodHlwZT0ib2JqZWN0Iik7dmFyIGtleT0ibnVtYmVyIj09dHlwZT92YWx1ZTprZXlQcmVmaXgrdmFsdWU7cmV0dXJuIGNhY2hlPShjYWNoZT1jYWNoZVt0eXBlXSkmJmNhY2hlW2tleV0sIm9iamVjdCI9PXR5cGU/Y2FjaGUmJmJhc2VJbmRleE9mKGNhY2hlLHZhbHVlKT4tMT8wOi0xOmNhY2hlPzA6LTF9ZnVuY3Rpb24gY2FjaGVQdXNoKHZhbHVlKXt2YXIgY2FjaGU9dGhpcy5jYWNoZSx0eXBlPXR5cGVvZiB2YWx1ZTtpZigiYm9vbGVhbiI9PXR5cGV8fG51bGw9PXZhbHVlKWNhY2hlW3ZhbHVlXT0hMDtlbHNleyJudW1iZXIiIT10eXBlJiYic3RyaW5nIiE9dHlwZSYmKHR5cGU9Im9iamVjdCIpO3ZhciBrZXk9Im51bWJlciI9PXR5cGU/dmFsdWU6a2V5UHJlZml4K3ZhbHVlLHR5cGVDYWNoZT1jYWNoZVt0eXBlXXx8KGNhY2hlW3R5cGVdPXt9KTsib2JqZWN0Ij09dHlwZT8odHlwZUNhY2hlW2tleV18fCh0eXBlQ2FjaGVba2V5XT1bXSkpLnB1c2godmFsdWUpOnR5cGVDYWNoZVtrZXldPSEwfX1mdW5jdGlvbiBjaGFyQXRDYWxsYmFjayh2YWx1ZSl7cmV0dXJuIHZhbHVlLmNoYXJDb2RlQXQoMCl9ZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyhhLGIpe2Zvcih2YXIgYWM9YS5jcml0ZXJpYSxiYz1iLmNyaXRlcmlhLGluZGV4PS0xLGxlbmd0aD1hYy5sZW5ndGg7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9YWNbaW5kZXhdLG90aGVyPWJjW2luZGV4XTtpZih2YWx1ZSE9PW90aGVyKXtpZih2YWx1ZT5vdGhlcnx8InVuZGVmaW5lZCI9PXR5cGVvZiB2YWx1ZSlyZXR1cm4gMTtpZihvdGhlcj52YWx1ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBvdGhlcilyZXR1cm4tMX19cmV0dXJuIGEuaW5kZXgtYi5pbmRleH1mdW5jdGlvbiBjcmVhdGVDYWNoZShhcnJheSl7dmFyIGluZGV4PS0xLGxlbmd0aD1hcnJheS5sZW5ndGgsZmlyc3Q9YXJyYXlbMF0sbWlkPWFycmF5W2xlbmd0aC8yfDBdLGxhc3Q9YXJyYXlbbGVuZ3RoLTFdO2lmKGZpcnN0JiYib2JqZWN0Ij09dHlwZW9mIGZpcnN0JiZtaWQmJiJvYmplY3QiPT10eXBlb2YgbWlkJiZsYXN0JiYib2JqZWN0Ij09dHlwZW9mIGxhc3QpcmV0dXJuITE7CnZhciBjYWNoZT1nZXRPYmplY3QoKTtjYWNoZVsiZmFsc2UiXT1jYWNoZVsibnVsbCJdPWNhY2hlWyJ0cnVlIl09Y2FjaGUudW5kZWZpbmVkPSExO3ZhciByZXN1bHQ9Z2V0T2JqZWN0KCk7Zm9yKHJlc3VsdC5hcnJheT1hcnJheSxyZXN1bHQuY2FjaGU9Y2FjaGUscmVzdWx0LnB1c2g9Y2FjaGVQdXNoOysraW5kZXg8bGVuZ3RoOylyZXN1bHQucHVzaChhcnJheVtpbmRleF0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gZXNjYXBlU3RyaW5nQ2hhcihtYXRjaCl7cmV0dXJuIlxcIitzdHJpbmdFc2NhcGVzW21hdGNoXX1mdW5jdGlvbiBnZXRBcnJheSgpe3JldHVybiBhcnJheVBvb2wucG9wKCl8fFtdfWZ1bmN0aW9uIGdldE9iamVjdCgpe3JldHVybiBvYmplY3RQb29sLnBvcCgpfHx7YXJyYXk6bnVsbCxjYWNoZTpudWxsLGNyaXRlcmlhOm51bGwsImZhbHNlIjohMSxpbmRleDowLCJudWxsIjohMSxudW1iZXI6bnVsbCxvYmplY3Q6bnVsbCxwdXNoOm51bGwsc3RyaW5nOm51bGwsInRydWUiOiExLHVuZGVmaW5lZDohMSx2YWx1ZTpudWxsfX1mdW5jdGlvbiBpc05vZGUodmFsdWUpe3JldHVybiJmdW5jdGlvbiIhPXR5cGVvZiB2YWx1ZS50b1N0cmluZyYmInN0cmluZyI9PXR5cGVvZih2YWx1ZSsiIil9ZnVuY3Rpb24gcmVsZWFzZUFycmF5KGFycmF5KXthcnJheS5sZW5ndGg9MCxhcnJheVBvb2wubGVuZ3RoPG1heFBvb2xTaXplJiZhcnJheVBvb2wucHVzaChhcnJheSl9ZnVuY3Rpb24gcmVsZWFzZU9iamVjdChvYmplY3Qpe3ZhciBjYWNoZT1vYmplY3QuY2FjaGU7Y2FjaGUmJnJlbGVhc2VPYmplY3QoY2FjaGUpLG9iamVjdC5hcnJheT1vYmplY3QuY2FjaGU9b2JqZWN0LmNyaXRlcmlhPW9iamVjdC5vYmplY3Q9b2JqZWN0Lm51bWJlcj1vYmplY3Quc3RyaW5nPW9iamVjdC52YWx1ZT1udWxsLG9iamVjdFBvb2wubGVuZ3RoPG1heFBvb2xTaXplJiZvYmplY3RQb29sLnB1c2gob2JqZWN0KX1mdW5jdGlvbiBzbGljZShhcnJheSxzdGFydCxlbmQpe3N0YXJ0fHwoc3RhcnQ9MCksInVuZGVmaW5lZCI9PXR5cGVvZiBlbmQmJihlbmQ9YXJyYXk/YXJyYXkubGVuZ3RoOjApO2Zvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWVuZC1zdGFydHx8MCxyZXN1bHQ9QXJyYXkoMD5sZW5ndGg/MDpsZW5ndGgpOysraW5kZXg8bGVuZ3RoOylyZXN1bHRbaW5kZXhdPWFycmF5W3N0YXJ0K2luZGV4XTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHJ1bkluQ29udGV4dChjb250ZXh0KXtmdW5jdGlvbiBsb2Rhc2godmFsdWUpe3JldHVybiB2YWx1ZSYmIm9iamVjdCI9PXR5cGVvZiB2YWx1ZSYmIWlzQXJyYXkodmFsdWUpJiZoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCJfX3dyYXBwZWRfXyIpP3ZhbHVlOm5ldyBsb2Rhc2hXcmFwcGVyKHZhbHVlKX1mdW5jdGlvbiBsb2Rhc2hXcmFwcGVyKHZhbHVlLGNoYWluQWxsKXt0aGlzLl9fY2hhaW5fXz0hIWNoYWluQWxsLHRoaXMuX193cmFwcGVkX189dmFsdWV9ZnVuY3Rpb24gYmFzZUJpbmQoYmluZERhdGEpe2Z1bmN0aW9uIGJvdW5kKCl7aWYocGFydGlhbEFyZ3Mpe3ZhciBhcmdzPXNsaWNlKHBhcnRpYWxBcmdzKTtwdXNoLmFwcGx5KGFyZ3MsYXJndW1lbnRzKX1pZih0aGlzIGluc3RhbmNlb2YgYm91bmQpe3ZhciB0aGlzQmluZGluZz1iYXNlQ3JlYXRlKGZ1bmMucHJvdG90eXBlKSxyZXN1bHQ9ZnVuYy5hcHBseSh0aGlzQmluZGluZyxhcmdzfHxhcmd1bWVudHMpO3JldHVybiBpc09iamVjdChyZXN1bHQpP3Jlc3VsdDp0aGlzQmluZGluZ31yZXR1cm4gZnVuYy5hcHBseSh0aGlzQXJnLGFyZ3N8fGFyZ3VtZW50cyl9dmFyIGZ1bmM9YmluZERhdGFbMF0scGFydGlhbEFyZ3M9YmluZERhdGFbMl0sdGhpc0FyZz1iaW5kRGF0YVs0XTtyZXR1cm4gc2V0QmluZERhdGEoYm91bmQsYmluZERhdGEpLGJvdW5kfWZ1bmN0aW9uIGJhc2VDbG9uZSh2YWx1ZSxpc0RlZXAsY2FsbGJhY2ssc3RhY2tBLHN0YWNrQil7aWYoY2FsbGJhY2spe3ZhciByZXN1bHQ9Y2FsbGJhY2sodmFsdWUpO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgcmVzdWx0KXJldHVybiByZXN1bHR9dmFyIGlzT2JqPWlzT2JqZWN0KHZhbHVlKTtpZighaXNPYmopcmV0dXJuIHZhbHVlO3ZhciBjbGFzc05hbWU9dG9TdHJpbmcuY2FsbCh2YWx1ZSk7aWYoIWNsb25lYWJsZUNsYXNzZXNbY2xhc3NOYW1lXXx8IXN1cHBvcnQubm9kZUNsYXNzJiZpc05vZGUodmFsdWUpKXJldHVybiB2YWx1ZTt2YXIgY3Rvcj1jdG9yQnlDbGFzc1tjbGFzc05hbWVdO3N3aXRjaChjbGFzc05hbWUpe2Nhc2UgYm9vbENsYXNzOmNhc2UgZGF0ZUNsYXNzOnJldHVybiBuZXcgY3RvcigrdmFsdWUpO2Nhc2UgbnVtYmVyQ2xhc3M6Y2FzZSBzdHJpbmdDbGFzczpyZXR1cm4gbmV3IGN0b3IodmFsdWUpO2Nhc2UgcmVnZXhwQ2xhc3M6cmV0dXJuIHJlc3VsdD1jdG9yKHZhbHVlLnNvdXJjZSxyZUZsYWdzLmV4ZWModmFsdWUpKSxyZXN1bHQubGFzdEluZGV4PXZhbHVlLmxhc3RJbmRleCxyZXN1bHR9dmFyIGlzQXJyPWlzQXJyYXkodmFsdWUpO2lmKGlzRGVlcCl7dmFyIGluaXRlZFN0YWNrPSFzdGFja0E7c3RhY2tBfHwoc3RhY2tBPWdldEFycmF5KCkpLHN0YWNrQnx8KHN0YWNrQj1nZXRBcnJheSgpKTtmb3IodmFyIGxlbmd0aD1zdGFja0EubGVuZ3RoO2xlbmd0aC0tOylpZihzdGFja0FbbGVuZ3RoXT09dmFsdWUpcmV0dXJuIHN0YWNrQltsZW5ndGhdO3Jlc3VsdD1pc0Fycj9jdG9yKHZhbHVlLmxlbmd0aCk6e319ZWxzZSByZXN1bHQ9aXNBcnI/c2xpY2UodmFsdWUpOmFzc2lnbih7fSx2YWx1ZSk7cmV0dXJuIGlzQXJyJiYoaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwiaW5kZXgiKSYmKHJlc3VsdC5pbmRleD12YWx1ZS5pbmRleCksaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwiaW5wdXQiKSYmKHJlc3VsdC5pbnB1dD12YWx1ZS5pbnB1dCkpLGlzRGVlcD8oc3RhY2tBLnB1c2godmFsdWUpLHN0YWNrQi5wdXNoKHJlc3VsdCksKGlzQXJyP2Jhc2VFYWNoOmZvck93bikodmFsdWUsZnVuY3Rpb24ob2JqVmFsdWUsa2V5KXtyZXN1bHRba2V5XT1iYXNlQ2xvbmUob2JqVmFsdWUsaXNEZWVwLGNhbGxiYWNrLHN0YWNrQSxzdGFja0IpfSksaW5pdGVkU3RhY2smJihyZWxlYXNlQXJyYXkoc3RhY2tBKSxyZWxlYXNlQXJyYXkoc3RhY2tCKSkscmVzdWx0KTpyZXN1bHR9ZnVuY3Rpb24gYmFzZUNyZWF0ZShwcm90b3R5cGUpe3JldHVybiBpc09iamVjdChwcm90b3R5cGUpP25hdGl2ZUNyZWF0ZShwcm90b3R5cGUpOnt9fWZ1bmN0aW9uIGJhc2VDcmVhdGVDYWxsYmFjayhmdW5jLHRoaXNBcmcsYXJnQ291bnQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBmdW5jKXJldHVybiBpZGVudGl0eTtpZigidW5kZWZpbmVkIj09dHlwZW9mIHRoaXNBcmd8fCEoInByb3RvdHlwZSJpbiBmdW5jKSlyZXR1cm4gZnVuYzt2YXIgYmluZERhdGE9ZnVuYy5fX2JpbmREYXRhX187aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBiaW5kRGF0YSYmKHN1cHBvcnQuZnVuY05hbWVzJiYoYmluZERhdGE9IWZ1bmMubmFtZSksYmluZERhdGE9YmluZERhdGF8fCFzdXBwb3J0LmZ1bmNEZWNvbXAsIWJpbmREYXRhKSl7dmFyIHNvdXJjZT1mblRvU3RyaW5nLmNhbGwoZnVuYyk7c3VwcG9ydC5mdW5jTmFtZXN8fChiaW5kRGF0YT0hcmVGdW5jTmFtZS50ZXN0KHNvdXJjZSkpLGJpbmREYXRhfHwoYmluZERhdGE9cmVUaGlzLnRlc3Qoc291cmNlKSxzZXRCaW5kRGF0YShmdW5jLGJpbmREYXRhKSl9aWYoYmluZERhdGE9PT0hMXx8YmluZERhdGEhPT0hMCYmMSZiaW5kRGF0YVsxXSlyZXR1cm4gZnVuYztzd2l0Y2goYXJnQ291bnQpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24odmFsdWUpe3JldHVybiBmdW5jLmNhbGwodGhpc0FyZyx2YWx1ZSl9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24oYSxiKXtyZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsYSxiKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbih2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKXtyZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsdmFsdWUsaW5kZXgsY29sbGVjdGlvbil9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24oYWNjdW11bGF0b3IsdmFsdWUsaW5kZXgsY29sbGVjdGlvbil7cmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLGFjY3VtdWxhdG9yLHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pfX1yZXR1cm4gYmluZChmdW5jLHRoaXNBcmcpfWZ1bmN0aW9uIGJhc2VDcmVhdGVXcmFwcGVyKGJpbmREYXRhKXtmdW5jdGlvbiBib3VuZCgpe3ZhciB0aGlzQmluZGluZz1pc0JpbmQ/dGhpc0FyZzp0aGlzO2lmKHBhcnRpYWxBcmdzKXt2YXIgYXJncz1zbGljZShwYXJ0aWFsQXJncyk7cHVzaC5hcHBseShhcmdzLGFyZ3VtZW50cyl9aWYoKHBhcnRpYWxSaWdodEFyZ3N8fGlzQ3VycnkpJiYoYXJnc3x8KGFyZ3M9c2xpY2UoYXJndW1lbnRzKSkscGFydGlhbFJpZ2h0QXJncyYmcHVzaC5hcHBseShhcmdzLHBhcnRpYWxSaWdodEFyZ3MpLGlzQ3VycnkmJmFyZ3MubGVuZ3RoPGFyaXR5KSlyZXR1cm4gYml0bWFza3w9MTYsYmFzZUNyZWF0ZVdyYXBwZXIoW2Z1bmMsaXNDdXJyeUJvdW5kP2JpdG1hc2s6LTQmYml0bWFzayxhcmdzLG51bGwsdGhpc0FyZyxhcml0eV0pO2lmKGFyZ3N8fChhcmdzPWFyZ3VtZW50cyksaXNCaW5kS2V5JiYoZnVuYz10aGlzQmluZGluZ1trZXldKSx0aGlzIGluc3RhbmNlb2YgYm91bmQpe3RoaXNCaW5kaW5nPWJhc2VDcmVhdGUoZnVuYy5wcm90b3R5cGUpO3ZhciByZXN1bHQ9ZnVuYy5hcHBseSh0aGlzQmluZGluZyxhcmdzKTtyZXR1cm4gaXNPYmplY3QocmVzdWx0KT9yZXN1bHQ6dGhpc0JpbmRpbmd9cmV0dXJuIGZ1bmMuYXBwbHkodGhpc0JpbmRpbmcsYXJncyl9dmFyIGZ1bmM9YmluZERhdGFbMF0sYml0bWFzaz1iaW5kRGF0YVsxXSxwYXJ0aWFsQXJncz1iaW5kRGF0YVsyXSxwYXJ0aWFsUmlnaHRBcmdzPWJpbmREYXRhWzNdLHRoaXNBcmc9YmluZERhdGFbNF0sYXJpdHk9YmluZERhdGFbNV0saXNCaW5kPTEmYml0bWFzayxpc0JpbmRLZXk9MiZiaXRtYXNrLGlzQ3Vycnk9NCZiaXRtYXNrLGlzQ3VycnlCb3VuZD04JmJpdG1hc2ssa2V5PWZ1bmM7cmV0dXJuIHNldEJpbmREYXRhKGJvdW5kLGJpbmREYXRhKSxib3VuZH1mdW5jdGlvbiBiYXNlRGlmZmVyZW5jZShhcnJheSx2YWx1ZXMpe3ZhciBpbmRleD0tMSxpbmRleE9mPWdldEluZGV4T2YoKSxsZW5ndGg9YXJyYXk/YXJyYXkubGVuZ3RoOjAsaXNMYXJnZT1sZW5ndGg+PWxhcmdlQXJyYXlTaXplJiZpbmRleE9mPT09YmFzZUluZGV4T2YscmVzdWx0PVtdO2lmKGlzTGFyZ2Upe3ZhciBjYWNoZT1jcmVhdGVDYWNoZSh2YWx1ZXMpO2NhY2hlPyhpbmRleE9mPWNhY2hlSW5kZXhPZix2YWx1ZXM9Y2FjaGUpOmlzTGFyZ2U9ITF9Zm9yKDsrK2luZGV4PGxlbmd0aDspe3ZhciB2YWx1ZT1hcnJheVtpbmRleF07aW5kZXhPZih2YWx1ZXMsdmFsdWUpPDAmJnJlc3VsdC5wdXNoKHZhbHVlKX1yZXR1cm4gaXNMYXJnZSYmcmVsZWFzZU9iamVjdCh2YWx1ZXMpLHJlc3VsdH1mdW5jdGlvbiBiYXNlRmxhdHRlbihhcnJheSxpc1NoYWxsb3csaXNTdHJpY3QsZnJvbUluZGV4KXtmb3IodmFyIGluZGV4PShmcm9tSW5kZXh8fDApLTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowLHJlc3VsdD1bXTsrK2luZGV4PGxlbmd0aDspe3ZhciB2YWx1ZT1hcnJheVtpbmRleF07aWYodmFsdWUmJiJvYmplY3QiPT10eXBlb2YgdmFsdWUmJiJudW1iZXIiPT10eXBlb2YgdmFsdWUubGVuZ3RoJiYoaXNBcnJheSh2YWx1ZSl8fGlzQXJndW1lbnRzKHZhbHVlKSkpe2lzU2hhbGxvd3x8KHZhbHVlPWJhc2VGbGF0dGVuKHZhbHVlLGlzU2hhbGxvdyxpc1N0cmljdCkpO3ZhciB2YWxJbmRleD0tMSx2YWxMZW5ndGg9dmFsdWUubGVuZ3RoLHJlc0luZGV4PXJlc3VsdC5sZW5ndGg7Zm9yKHJlc3VsdC5sZW5ndGgrPXZhbExlbmd0aDsrK3ZhbEluZGV4PHZhbExlbmd0aDspcmVzdWx0W3Jlc0luZGV4KytdPXZhbHVlW3ZhbEluZGV4XX1lbHNlIGlzU3RyaWN0fHxyZXN1bHQucHVzaCh2YWx1ZSl9cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiBiYXNlSXNFcXVhbChhLGIsY2FsbGJhY2ssaXNXaGVyZSxzdGFja0Esc3RhY2tCKXtpZihjYWxsYmFjayl7dmFyIHJlc3VsdD1jYWxsYmFjayhhLGIpO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgcmVzdWx0KXJldHVybiEhcmVzdWx0fWlmKGE9PT1iKXJldHVybiAwIT09YXx8MS9hPT0xL2I7dmFyIHR5cGU9dHlwZW9mIGEsb3RoZXJUeXBlPXR5cGVvZiBiO2lmKCEoYSE9PWF8fGEmJm9iamVjdFR5cGVzW3R5cGVdfHxiJiZvYmplY3RUeXBlc1tvdGhlclR5cGVdKSlyZXR1cm4hMTtpZihudWxsPT1hfHxudWxsPT1iKXJldHVybiBhPT09Yjt2YXIgY2xhc3NOYW1lPXRvU3RyaW5nLmNhbGwoYSksb3RoZXJDbGFzcz10b1N0cmluZy5jYWxsKGIpO2lmKGNsYXNzTmFtZT09YXJnc0NsYXNzJiYoY2xhc3NOYW1lPW9iamVjdENsYXNzKSxvdGhlckNsYXNzPT1hcmdzQ2xhc3MmJihvdGhlckNsYXNzPW9iamVjdENsYXNzKSxjbGFzc05hbWUhPW90aGVyQ2xhc3MpcmV0dXJuITE7c3dpdGNoKGNsYXNzTmFtZSl7Y2FzZSBib29sQ2xhc3M6Y2FzZSBkYXRlQ2xhc3M6cmV0dXJuK2E9PStiO2Nhc2UgbnVtYmVyQ2xhc3M6cmV0dXJuIGEhPSthP2IhPStiOjA9PWE/MS9hPT0xL2I6YT09K2I7Y2FzZSByZWdleHBDbGFzczpjYXNlIHN0cmluZ0NsYXNzOnJldHVybiBhPT1TdHJpbmcoYil9dmFyIGlzQXJyPWNsYXNzTmFtZT09YXJyYXlDbGFzcztpZighaXNBcnIpe3ZhciBhV3JhcHBlZD1oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsIl9fd3JhcHBlZF9fIiksYldyYXBwZWQ9aGFzT3duUHJvcGVydHkuY2FsbChiLCJfX3dyYXBwZWRfXyIpO2lmKGFXcmFwcGVkfHxiV3JhcHBlZClyZXR1cm4gYmFzZUlzRXF1YWwoYVdyYXBwZWQ/YS5fX3dyYXBwZWRfXzphLGJXcmFwcGVkP2IuX193cmFwcGVkX186YixjYWxsYmFjayxpc1doZXJlLHN0YWNrQSxzdGFja0IpO2lmKGNsYXNzTmFtZSE9b2JqZWN0Q2xhc3N8fCFzdXBwb3J0Lm5vZGVDbGFzcyYmKGlzTm9kZShhKXx8aXNOb2RlKGIpKSlyZXR1cm4hMTt2YXIgY3RvckE9IXN1cHBvcnQuYXJnc09iamVjdCYmaXNBcmd1bWVudHMoYSk/T2JqZWN0OmEuY29uc3RydWN0b3IsY3RvckI9IXN1cHBvcnQuYXJnc09iamVjdCYmaXNBcmd1bWVudHMoYik/T2JqZWN0OmIuY29uc3RydWN0b3I7aWYoY3RvckEhPWN0b3JCJiYhKGlzRnVuY3Rpb24oY3RvckEpJiZjdG9yQSBpbnN0YW5jZW9mIGN0b3JBJiZpc0Z1bmN0aW9uKGN0b3JCKSYmY3RvckIgaW5zdGFuY2VvZiBjdG9yQikmJiJjb25zdHJ1Y3RvciJpbiBhJiYiY29uc3RydWN0b3IiaW4gYilyZXR1cm4hMX12YXIgaW5pdGVkU3RhY2s9IXN0YWNrQTtzdGFja0F8fChzdGFja0E9Z2V0QXJyYXkoKSksc3RhY2tCfHwoc3RhY2tCPWdldEFycmF5KCkpO2Zvcih2YXIgbGVuZ3RoPXN0YWNrQS5sZW5ndGg7bGVuZ3RoLS07KWlmKHN0YWNrQVtsZW5ndGhdPT1hKXJldHVybiBzdGFja0JbbGVuZ3RoXT09Yjt2YXIgc2l6ZT0wO2lmKHJlc3VsdD0hMCxzdGFja0EucHVzaChhKSxzdGFja0IucHVzaChiKSxpc0Fycil7aWYobGVuZ3RoPWEubGVuZ3RoLHNpemU9Yi5sZW5ndGgscmVzdWx0PXNpemU9PWxlbmd0aCxyZXN1bHR8fGlzV2hlcmUpZm9yKDtzaXplLS07KXt2YXIgaW5kZXg9bGVuZ3RoLHZhbHVlPWJbc2l6ZV07aWYoaXNXaGVyZSlmb3IoO2luZGV4LS0mJiEocmVzdWx0PWJhc2VJc0VxdWFsKGFbaW5kZXhdLHZhbHVlLGNhbGxiYWNrLGlzV2hlcmUsc3RhY2tBLHN0YWNrQikpOyk7ZWxzZSBpZighKHJlc3VsdD1iYXNlSXNFcXVhbChhW3NpemVdLHZhbHVlLGNhbGxiYWNrLGlzV2hlcmUsc3RhY2tBLHN0YWNrQikpKWJyZWFrfX1lbHNlIGZvckluKGIsZnVuY3Rpb24odmFsdWUsa2V5LGIpe3JldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGIsa2V5KT8oc2l6ZSsrLHJlc3VsdD1oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsa2V5KSYmYmFzZUlzRXF1YWwoYVtrZXldLHZhbHVlLGNhbGxiYWNrLGlzV2hlcmUsc3RhY2tBLHN0YWNrQikpOnZvaWQgMH0pLHJlc3VsdCYmIWlzV2hlcmUmJmZvckluKGEsZnVuY3Rpb24odmFsdWUsa2V5LGEpe3JldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGEsa2V5KT9yZXN1bHQ9LS1zaXplPi0xOnZvaWQgMH0pO3JldHVybiBzdGFja0EucG9wKCksc3RhY2tCLnBvcCgpLGluaXRlZFN0YWNrJiYocmVsZWFzZUFycmF5KHN0YWNrQSkscmVsZWFzZUFycmF5KHN0YWNrQikpLHJlc3VsdH1mdW5jdGlvbiBiYXNlTWVyZ2Uob2JqZWN0LHNvdXJjZSxjYWxsYmFjayxzdGFja0Esc3RhY2tCKXsoaXNBcnJheShzb3VyY2UpP2ZvckVhY2g6Zm9yT3duKShzb3VyY2UsZnVuY3Rpb24oc291cmNlLGtleSl7dmFyIGZvdW5kLGlzQXJyLHJlc3VsdD1zb3VyY2UsdmFsdWU9b2JqZWN0W2tleV07aWYoc291cmNlJiYoKGlzQXJyPWlzQXJyYXkoc291cmNlKSl8fGlzUGxhaW5PYmplY3Qoc291cmNlKSkpe2Zvcih2YXIgc3RhY2tMZW5ndGg9c3RhY2tBLmxlbmd0aDtzdGFja0xlbmd0aC0tOylpZihmb3VuZD1zdGFja0Fbc3RhY2tMZW5ndGhdPT1zb3VyY2Upe3ZhbHVlPXN0YWNrQltzdGFja0xlbmd0aF07YnJlYWt9aWYoIWZvdW5kKXt2YXIgaXNTaGFsbG93O2NhbGxiYWNrJiYocmVzdWx0PWNhbGxiYWNrKHZhbHVlLHNvdXJjZSksKGlzU2hhbGxvdz0idW5kZWZpbmVkIiE9dHlwZW9mIHJlc3VsdCkmJih2YWx1ZT1yZXN1bHQpKSxpc1NoYWxsb3d8fCh2YWx1ZT1pc0Fycj9pc0FycmF5KHZhbHVlKT92YWx1ZTpbXTppc1BsYWluT2JqZWN0KHZhbHVlKT92YWx1ZTp7fSksc3RhY2tBLnB1c2goc291cmNlKSxzdGFja0IucHVzaCh2YWx1ZSksaXNTaGFsbG93fHxiYXNlTWVyZ2UodmFsdWUsc291cmNlLGNhbGxiYWNrLHN0YWNrQSxzdGFja0IpfX1lbHNlIGNhbGxiYWNrJiYocmVzdWx0PWNhbGxiYWNrKHZhbHVlLHNvdXJjZSksInVuZGVmaW5lZCI9PXR5cGVvZiByZXN1bHQmJihyZXN1bHQ9c291cmNlKSksInVuZGVmaW5lZCIhPXR5cGVvZiByZXN1bHQmJih2YWx1ZT1yZXN1bHQpO29iamVjdFtrZXldPXZhbHVlfSl9ZnVuY3Rpb24gYmFzZVJhbmRvbShtaW4sbWF4KXtyZXR1cm4gbWluK2Zsb29yKG5hdGl2ZVJhbmRvbSgpKihtYXgtbWluKzEpKX1mdW5jdGlvbiBiYXNlVW5pcShhcnJheSxpc1NvcnRlZCxjYWxsYmFjayl7dmFyIGluZGV4PS0xLGluZGV4T2Y9Z2V0SW5kZXhPZigpLGxlbmd0aD1hcnJheT9hcnJheS5sZW5ndGg6MCxyZXN1bHQ9W10saXNMYXJnZT0haXNTb3J0ZWQmJmxlbmd0aD49bGFyZ2VBcnJheVNpemUmJmluZGV4T2Y9PT1iYXNlSW5kZXhPZixzZWVuPWNhbGxiYWNrfHxpc0xhcmdlP2dldEFycmF5KCk6cmVzdWx0O2lmKGlzTGFyZ2Upe3ZhciBjYWNoZT1jcmVhdGVDYWNoZShzZWVuKTtpbmRleE9mPWNhY2hlSW5kZXhPZixzZWVuPWNhY2hlfWZvcig7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9YXJyYXlbaW5kZXhdLGNvbXB1dGVkPWNhbGxiYWNrP2NhbGxiYWNrKHZhbHVlLGluZGV4LGFycmF5KTp2YWx1ZTsoaXNTb3J0ZWQ/IWluZGV4fHxzZWVuW3NlZW4ubGVuZ3RoLTFdIT09Y29tcHV0ZWQ6aW5kZXhPZihzZWVuLGNvbXB1dGVkKTwwKSYmKChjYWxsYmFja3x8aXNMYXJnZSkmJnNlZW4ucHVzaChjb21wdXRlZCkscmVzdWx0LnB1c2godmFsdWUpKX1yZXR1cm4gaXNMYXJnZT8ocmVsZWFzZUFycmF5KHNlZW4uYXJyYXkpLHJlbGVhc2VPYmplY3Qoc2VlbikpOmNhbGxiYWNrJiZyZWxlYXNlQXJyYXkoc2VlbikscmVzdWx0fWZ1bmN0aW9uIGNyZWF0ZUFnZ3JlZ2F0b3Ioc2V0dGVyKXtyZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbixjYWxsYmFjayx0aGlzQXJnKXt2YXIgcmVzdWx0PXt9O2lmKGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpLGlzQXJyYXkoY29sbGVjdGlvbikpZm9yKHZhciBpbmRleD0tMSxsZW5ndGg9Y29sbGVjdGlvbi5sZW5ndGg7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9Y29sbGVjdGlvbltpbmRleF07c2V0dGVyKHJlc3VsdCx2YWx1ZSxjYWxsYmFjayh2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKSxjb2xsZWN0aW9uKX1lbHNlIGJhc2VFYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUsa2V5LGNvbGxlY3Rpb24pe3NldHRlcihyZXN1bHQsdmFsdWUsY2FsbGJhY2sodmFsdWUsa2V5LGNvbGxlY3Rpb24pLGNvbGxlY3Rpb24pfSk7cmV0dXJuIHJlc3VsdH19ZnVuY3Rpb24gY3JlYXRlV3JhcHBlcihmdW5jLGJpdG1hc2sscGFydGlhbEFyZ3MscGFydGlhbFJpZ2h0QXJncyx0aGlzQXJnLGFyaXR5KXt2YXIgaXNCaW5kPTEmYml0bWFzayxpc0JpbmRLZXk9MiZiaXRtYXNrLGlzQ3Vycnk9NCZiaXRtYXNrLGlzUGFydGlhbD0xNiZiaXRtYXNrLGlzUGFydGlhbFJpZ2h0PTMyJmJpdG1hc2s7aWYoIWlzQmluZEtleSYmIWlzRnVuY3Rpb24oZnVuYykpdGhyb3cgbmV3IFR5cGVFcnJvcjtpc1BhcnRpYWwmJiFwYXJ0aWFsQXJncy5sZW5ndGgmJihiaXRtYXNrJj0tMTcsaXNQYXJ0aWFsPXBhcnRpYWxBcmdzPSExKSxpc1BhcnRpYWxSaWdodCYmIXBhcnRpYWxSaWdodEFyZ3MubGVuZ3RoJiYoYml0bWFzayY9LTMzLGlzUGFydGlhbFJpZ2h0PXBhcnRpYWxSaWdodEFyZ3M9ITEpO3ZhciBiaW5kRGF0YT1mdW5jJiZmdW5jLl9fYmluZERhdGFfXztpZihiaW5kRGF0YSYmYmluZERhdGEhPT0hMClyZXR1cm4gYmluZERhdGE9c2xpY2UoYmluZERhdGEpLGJpbmREYXRhWzJdJiYoYmluZERhdGFbMl09c2xpY2UoYmluZERhdGFbMl0pKSxiaW5kRGF0YVszXSYmKGJpbmREYXRhWzNdPXNsaWNlKGJpbmREYXRhWzNdKSksIWlzQmluZHx8MSZiaW5kRGF0YVsxXXx8KGJpbmREYXRhWzRdPXRoaXNBcmcpLCFpc0JpbmQmJjEmYmluZERhdGFbMV0mJihiaXRtYXNrfD04KSwhaXNDdXJyeXx8NCZiaW5kRGF0YVsxXXx8KGJpbmREYXRhWzVdPWFyaXR5KSxpc1BhcnRpYWwmJnB1c2guYXBwbHkoYmluZERhdGFbMl18fChiaW5kRGF0YVsyXT1bXSkscGFydGlhbEFyZ3MpLGlzUGFydGlhbFJpZ2h0JiZ1bnNoaWZ0LmFwcGx5KGJpbmREYXRhWzNdfHwoYmluZERhdGFbM109W10pLHBhcnRpYWxSaWdodEFyZ3MpLGJpbmREYXRhWzFdfD1iaXRtYXNrLGNyZWF0ZVdyYXBwZXIuYXBwbHkobnVsbCxiaW5kRGF0YSk7dmFyIGNyZWF0ZXI9MT09Yml0bWFza3x8MTc9PT1iaXRtYXNrP2Jhc2VCaW5kOmJhc2VDcmVhdGVXcmFwcGVyO3JldHVybiBjcmVhdGVyKFtmdW5jLGJpdG1hc2sscGFydGlhbEFyZ3MscGFydGlhbFJpZ2h0QXJncyx0aGlzQXJnLGFyaXR5XSl9ZnVuY3Rpb24gY3JlYXRlSXRlcmF0b3IoKXtpdGVyYXRvckRhdGEuc2hhZG93ZWRQcm9wcz1zaGFkb3dlZFByb3BzLGl0ZXJhdG9yRGF0YS5hcnJheT1pdGVyYXRvckRhdGEuYm90dG9tPWl0ZXJhdG9yRGF0YS5sb29wPWl0ZXJhdG9yRGF0YS50b3A9IiIsaXRlcmF0b3JEYXRhLmluaXQ9Iml0ZXJhYmxlIixpdGVyYXRvckRhdGEudXNlSGFzPSEwO2Zvcih2YXIgb2JqZWN0LGluZGV4PTA7b2JqZWN0PWFyZ3VtZW50c1tpbmRleF07aW5kZXgrKylmb3IodmFyIGtleSBpbiBvYmplY3QpaXRlcmF0b3JEYXRhW2tleV09b2JqZWN0W2tleV07dmFyIGFyZ3M9aXRlcmF0b3JEYXRhLmFyZ3M7aXRlcmF0b3JEYXRhLmZpcnN0QXJnPS9eW14sXSsvLmV4ZWMoYXJncylbMF07dmFyIGZhY3Rvcnk9RnVuY3Rpb24oImJhc2VDcmVhdGVDYWxsYmFjaywgZXJyb3JDbGFzcywgZXJyb3JQcm90bywgaGFzT3duUHJvcGVydHksIGluZGljYXRvck9iamVjdCwgaXNBcmd1bWVudHMsIGlzQXJyYXksIGlzU3RyaW5nLCBrZXlzLCBvYmplY3RQcm90bywgb2JqZWN0VHlwZXMsIG5vbkVudW1Qcm9wcywgc3RyaW5nQ2xhc3MsIHN0cmluZ1Byb3RvLCB0b1N0cmluZyIsInJldHVybiBmdW5jdGlvbigiK2FyZ3MrIikge1xuIitpdGVyYXRvclRlbXBsYXRlKGl0ZXJhdG9yRGF0YSkrIlxufSIpO3JldHVybiBmYWN0b3J5KGJhc2VDcmVhdGVDYWxsYmFjayxlcnJvckNsYXNzLGVycm9yUHJvdG8saGFzT3duUHJvcGVydHksaW5kaWNhdG9yT2JqZWN0LGlzQXJndW1lbnRzLGlzQXJyYXksaXNTdHJpbmcsaXRlcmF0b3JEYXRhLmtleXMsb2JqZWN0UHJvdG8sb2JqZWN0VHlwZXMsbm9uRW51bVByb3BzLHN0cmluZ0NsYXNzLHN0cmluZ1Byb3RvLHRvU3RyaW5nKX1mdW5jdGlvbiBlc2NhcGVIdG1sQ2hhcihtYXRjaCl7cmV0dXJuIGh0bWxFc2NhcGVzW21hdGNoXX1mdW5jdGlvbiBnZXRJbmRleE9mKCl7dmFyIHJlc3VsdD0ocmVzdWx0PWxvZGFzaC5pbmRleE9mKT09PWluZGV4T2Y/YmFzZUluZGV4T2Y6cmVzdWx0O3JldHVybiByZXN1bHR9ZnVuY3Rpb24gaXNOYXRpdmUodmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZSYmcmVOYXRpdmUudGVzdCh2YWx1ZSl9ZnVuY3Rpb24gc2hpbUlzUGxhaW5PYmplY3QodmFsdWUpe3ZhciBjdG9yLHJlc3VsdDtyZXR1cm4hdmFsdWV8fHRvU3RyaW5nLmNhbGwodmFsdWUpIT1vYmplY3RDbGFzc3x8KGN0b3I9dmFsdWUuY29uc3RydWN0b3IsaXNGdW5jdGlvbihjdG9yKSYmIShjdG9yIGluc3RhbmNlb2YgY3RvcikpfHwhc3VwcG9ydC5hcmdzQ2xhc3MmJmlzQXJndW1lbnRzKHZhbHVlKXx8IXN1cHBvcnQubm9kZUNsYXNzJiZpc05vZGUodmFsdWUpPyExOnN1cHBvcnQub3duTGFzdD8oZm9ySW4odmFsdWUsZnVuY3Rpb24odmFsdWUsa2V5LG9iamVjdCl7cmV0dXJuIHJlc3VsdD1oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxrZXkpLCExfSkscmVzdWx0IT09ITEpOihmb3JJbih2YWx1ZSxmdW5jdGlvbih2YWx1ZSxrZXkpe3Jlc3VsdD1rZXl9KSwidW5kZWZpbmVkIj09dHlwZW9mIHJlc3VsdHx8aGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSxyZXN1bHQpKX1mdW5jdGlvbiB1bmVzY2FwZUh0bWxDaGFyKG1hdGNoKXtyZXR1cm4gaHRtbFVuZXNjYXBlc1ttYXRjaF19ZnVuY3Rpb24gaXNBcmd1bWVudHModmFsdWUpe3JldHVybiB2YWx1ZSYmIm9iamVjdCI9PXR5cGVvZiB2YWx1ZSYmIm51bWJlciI9PXR5cGVvZiB2YWx1ZS5sZW5ndGgmJnRvU3RyaW5nLmNhbGwodmFsdWUpPT1hcmdzQ2xhc3N8fCExfWZ1bmN0aW9uIGNsb25lKHZhbHVlLGlzRGVlcCxjYWxsYmFjayx0aGlzQXJnKXtyZXR1cm4iYm9vbGVhbiIhPXR5cGVvZiBpc0RlZXAmJm51bGwhPWlzRGVlcCYmKHRoaXNBcmc9Y2FsbGJhY2ssY2FsbGJhY2s9aXNEZWVwLGlzRGVlcD0hMSksYmFzZUNsb25lKHZhbHVlLGlzRGVlcCwiZnVuY3Rpb24iPT10eXBlb2YgY2FsbGJhY2smJmJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDEpKX1mdW5jdGlvbiBjbG9uZURlZXAodmFsdWUsY2FsbGJhY2ssdGhpc0FyZyl7cmV0dXJuIGJhc2VDbG9uZSh2YWx1ZSwhMCwiZnVuY3Rpb24iPT10eXBlb2YgY2FsbGJhY2smJmJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDEpKX1mdW5jdGlvbiBjcmVhdGUocHJvdG90eXBlLHByb3BlcnRpZXMpe3ZhciByZXN1bHQ9YmFzZUNyZWF0ZShwcm90b3R5cGUpO3JldHVybiBwcm9wZXJ0aWVzP2Fzc2lnbihyZXN1bHQscHJvcGVydGllcyk6cmVzdWx0fWZ1bmN0aW9uIGZpbmRLZXkob2JqZWN0LGNhbGxiYWNrLHRoaXNBcmcpe3ZhciByZXN1bHQ7cmV0dXJuIGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpLGZvck93bihvYmplY3QsZnVuY3Rpb24odmFsdWUsa2V5LG9iamVjdCl7cmV0dXJuIGNhbGxiYWNrKHZhbHVlLGtleSxvYmplY3QpPyhyZXN1bHQ9a2V5LCExKTp2b2lkIDB9KSxyZXN1bHR9ZnVuY3Rpb24gZmluZExhc3RLZXkob2JqZWN0LGNhbGxiYWNrLHRoaXNBcmcpe3ZhciByZXN1bHQ7cmV0dXJuIGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpLGZvck93blJpZ2h0KG9iamVjdCxmdW5jdGlvbih2YWx1ZSxrZXksb2JqZWN0KXtyZXR1cm4gY2FsbGJhY2sodmFsdWUsa2V5LG9iamVjdCk/KHJlc3VsdD1rZXksITEpOnZvaWQgMH0pLHJlc3VsdH1mdW5jdGlvbiBmb3JJblJpZ2h0KG9iamVjdCxjYWxsYmFjayx0aGlzQXJnKXt2YXIgcGFpcnM9W107Zm9ySW4ob2JqZWN0LGZ1bmN0aW9uKHZhbHVlLGtleSl7cGFpcnMucHVzaChrZXksdmFsdWUpfSk7dmFyIGxlbmd0aD1wYWlycy5sZW5ndGg7Zm9yKGNhbGxiYWNrPWJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpO2xlbmd0aC0tJiZjYWxsYmFjayhwYWlyc1tsZW5ndGgtLV0scGFpcnNbbGVuZ3RoXSxvYmplY3QpIT09ITE7KTtyZXR1cm4gb2JqZWN0fWZ1bmN0aW9uIGZvck93blJpZ2h0KG9iamVjdCxjYWxsYmFjayx0aGlzQXJnKXt2YXIgcHJvcHM9a2V5cyhvYmplY3QpLGxlbmd0aD1wcm9wcy5sZW5ndGg7Zm9yKGNhbGxiYWNrPWJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpO2xlbmd0aC0tOyl7dmFyIGtleT1wcm9wc1tsZW5ndGhdO2lmKGNhbGxiYWNrKG9iamVjdFtrZXldLGtleSxvYmplY3QpPT09ITEpYnJlYWt9cmV0dXJuIG9iamVjdH1mdW5jdGlvbiBmdW5jdGlvbnMob2JqZWN0KXt2YXIgcmVzdWx0PVtdO3JldHVybiBmb3JJbihvYmplY3QsZnVuY3Rpb24odmFsdWUsa2V5KXtpc0Z1bmN0aW9uKHZhbHVlKSYmcmVzdWx0LnB1c2goa2V5KX0pLHJlc3VsdC5zb3J0KCl9ZnVuY3Rpb24gaGFzKG9iamVjdCxrZXkpe3JldHVybiBvYmplY3Q/aGFzT3duUHJvcGVydHkuY2FsbChvYmplY3Qsa2V5KTohMX1mdW5jdGlvbiBpbnZlcnQob2JqZWN0KXtmb3IodmFyIGluZGV4PS0xLHByb3BzPWtleXMob2JqZWN0KSxsZW5ndGg9cHJvcHMubGVuZ3RoLHJlc3VsdD17fTsrK2luZGV4PGxlbmd0aDspe3ZhciBrZXk9cHJvcHNbaW5kZXhdO3Jlc3VsdFtvYmplY3Rba2V5XV09a2V5fXJldHVybiByZXN1bHR9ZnVuY3Rpb24gaXNCb29sZWFuKHZhbHVlKXtyZXR1cm4gdmFsdWU9PT0hMHx8dmFsdWU9PT0hMXx8dmFsdWUmJiJvYmplY3QiPT10eXBlb2YgdmFsdWUmJnRvU3RyaW5nLmNhbGwodmFsdWUpPT1ib29sQ2xhc3N8fCExfWZ1bmN0aW9uIGlzRGF0ZSh2YWx1ZSl7cmV0dXJuIHZhbHVlJiYib2JqZWN0Ij09dHlwZW9mIHZhbHVlJiZ0b1N0cmluZy5jYWxsKHZhbHVlKT09ZGF0ZUNsYXNzfHwhMX1mdW5jdGlvbiBpc0VsZW1lbnQodmFsdWUpe3JldHVybiB2YWx1ZSYmMT09PXZhbHVlLm5vZGVUeXBlfHwhMX1mdW5jdGlvbiBpc0VtcHR5KHZhbHVlKXt2YXIgcmVzdWx0PSEwO2lmKCF2YWx1ZSlyZXR1cm4gcmVzdWx0O3ZhciBjbGFzc05hbWU9dG9TdHJpbmcuY2FsbCh2YWx1ZSksbGVuZ3RoPXZhbHVlLmxlbmd0aDtyZXR1cm4gY2xhc3NOYW1lPT1hcnJheUNsYXNzfHxjbGFzc05hbWU9PXN0cmluZ0NsYXNzfHwoc3VwcG9ydC5hcmdzQ2xhc3M/Y2xhc3NOYW1lPT1hcmdzQ2xhc3M6aXNBcmd1bWVudHModmFsdWUpKXx8Y2xhc3NOYW1lPT1vYmplY3RDbGFzcyYmIm51bWJlciI9PXR5cGVvZiBsZW5ndGgmJmlzRnVuY3Rpb24odmFsdWUuc3BsaWNlKT8hbGVuZ3RoOihmb3JPd24odmFsdWUsZnVuY3Rpb24oKXtyZXR1cm4gcmVzdWx0PSExfSkscmVzdWx0KX1mdW5jdGlvbiBpc0VxdWFsKGEsYixjYWxsYmFjayx0aGlzQXJnKXtyZXR1cm4gYmFzZUlzRXF1YWwoYSxiLCJmdW5jdGlvbiI9PXR5cGVvZiBjYWxsYmFjayYmYmFzZUNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMikpfWZ1bmN0aW9uIGlzRmluaXRlKHZhbHVlKXtyZXR1cm4gbmF0aXZlSXNGaW5pdGUodmFsdWUpJiYhbmF0aXZlSXNOYU4ocGFyc2VGbG9hdCh2YWx1ZSkpfWZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSl7cmV0dXJuISghdmFsdWV8fCFvYmplY3RUeXBlc1t0eXBlb2YgdmFsdWVdKX1mdW5jdGlvbiBpc05hTih2YWx1ZSl7cmV0dXJuIGlzTnVtYmVyKHZhbHVlKSYmdmFsdWUhPSt2YWx1ZX1mdW5jdGlvbiBpc051bGwodmFsdWUpe3JldHVybiBudWxsPT09dmFsdWV9ZnVuY3Rpb24gaXNOdW1iZXIodmFsdWUpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdmFsdWV8fHZhbHVlJiYib2JqZWN0Ij09dHlwZW9mIHZhbHVlJiZ0b1N0cmluZy5jYWxsKHZhbHVlKT09bnVtYmVyQ2xhc3N8fCExfWZ1bmN0aW9uIGlzUmVnRXhwKHZhbHVlKXtyZXR1cm4gdmFsdWUmJm9iamVjdFR5cGVzW3R5cGVvZiB2YWx1ZV0mJnRvU3RyaW5nLmNhbGwodmFsdWUpPT1yZWdleHBDbGFzc3x8ITF9ZnVuY3Rpb24gaXNTdHJpbmcodmFsdWUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdmFsdWV8fHZhbHVlJiYib2JqZWN0Ij09dHlwZW9mIHZhbHVlJiZ0b1N0cmluZy5jYWxsKHZhbHVlKT09c3RyaW5nQ2xhc3N8fCExfWZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbHVlKXtyZXR1cm4idW5kZWZpbmVkIj09dHlwZW9mIHZhbHVlfWZ1bmN0aW9uIG1hcFZhbHVlcyhvYmplY3QsY2FsbGJhY2ssdGhpc0FyZyl7dmFyIHJlc3VsdD17fTtyZXR1cm4gY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyksZm9yT3duKG9iamVjdCxmdW5jdGlvbih2YWx1ZSxrZXksb2JqZWN0KXtyZXN1bHRba2V5XT1jYWxsYmFjayh2YWx1ZSxrZXksb2JqZWN0KX0pLHJlc3VsdH1mdW5jdGlvbiBtZXJnZShvYmplY3Qpe3ZhciBhcmdzPWFyZ3VtZW50cyxsZW5ndGg9MjtpZighaXNPYmplY3Qob2JqZWN0KSlyZXR1cm4gb2JqZWN0O2lmKCJudW1iZXIiIT10eXBlb2YgYXJnc1syXSYmKGxlbmd0aD1hcmdzLmxlbmd0aCksbGVuZ3RoPjMmJiJmdW5jdGlvbiI9PXR5cGVvZiBhcmdzW2xlbmd0aC0yXSl2YXIgY2FsbGJhY2s9YmFzZUNyZWF0ZUNhbGxiYWNrKGFyZ3NbLS1sZW5ndGgtMV0sYXJnc1tsZW5ndGgtLV0sMik7ZWxzZSBsZW5ndGg+MiYmImZ1bmN0aW9uIj09dHlwZW9mIGFyZ3NbbGVuZ3RoLTFdJiYoY2FsbGJhY2s9YXJnc1stLWxlbmd0aF0pO2Zvcih2YXIgc291cmNlcz1zbGljZShhcmd1bWVudHMsMSxsZW5ndGgpLGluZGV4PS0xLHN0YWNrQT1nZXRBcnJheSgpLHN0YWNrQj1nZXRBcnJheSgpOysraW5kZXg8bGVuZ3RoOyliYXNlTWVyZ2Uob2JqZWN0LHNvdXJjZXNbaW5kZXhdLGNhbGxiYWNrLHN0YWNrQSxzdGFja0IpO3JldHVybiByZWxlYXNlQXJyYXkoc3RhY2tBKSxyZWxlYXNlQXJyYXkoc3RhY2tCKSxvYmplY3R9ZnVuY3Rpb24gb21pdChvYmplY3QsY2FsbGJhY2ssdGhpc0FyZyl7dmFyIHJlc3VsdD17fTtpZigiZnVuY3Rpb24iIT10eXBlb2YgY2FsbGJhY2spe3ZhciBwcm9wcz1bXTtmb3JJbihvYmplY3QsZnVuY3Rpb24odmFsdWUsa2V5KXtwcm9wcy5wdXNoKGtleSl9KSxwcm9wcz1iYXNlRGlmZmVyZW5jZShwcm9wcyxiYXNlRmxhdHRlbihhcmd1bWVudHMsITAsITEsMSkpO2Zvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPXByb3BzLmxlbmd0aDsrK2luZGV4PGxlbmd0aDspe3ZhciBrZXk9cHJvcHNbaW5kZXhdO3Jlc3VsdFtrZXldPW9iamVjdFtrZXldfX1lbHNlIGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpLGZvckluKG9iamVjdCxmdW5jdGlvbih2YWx1ZSxrZXksb2JqZWN0KXtjYWxsYmFjayh2YWx1ZSxrZXksb2JqZWN0KXx8KHJlc3VsdFtrZXldPXZhbHVlKX0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gcGFpcnMob2JqZWN0KXtmb3IodmFyIGluZGV4PS0xLHByb3BzPWtleXMob2JqZWN0KSxsZW5ndGg9cHJvcHMubGVuZ3RoLHJlc3VsdD1BcnJheShsZW5ndGgpOysraW5kZXg8bGVuZ3RoOyl7dmFyIGtleT1wcm9wc1tpbmRleF07cmVzdWx0W2luZGV4XT1ba2V5LG9iamVjdFtrZXldXX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHBpY2sob2JqZWN0LGNhbGxiYWNrLHRoaXNBcmcpe3ZhciByZXN1bHQ9e307aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGNhbGxiYWNrKWZvcih2YXIgaW5kZXg9LTEscHJvcHM9YmFzZUZsYXR0ZW4oYXJndW1lbnRzLCEwLCExLDEpLGxlbmd0aD1pc09iamVjdChvYmplY3QpP3Byb3BzLmxlbmd0aDowOysraW5kZXg8bGVuZ3RoOyl7dmFyIGtleT1wcm9wc1tpbmRleF07a2V5IGluIG9iamVjdCYmKHJlc3VsdFtrZXldPW9iamVjdFtrZXldKX1lbHNlIGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpLGZvckluKG9iamVjdCxmdW5jdGlvbih2YWx1ZSxrZXksb2JqZWN0KXtjYWxsYmFjayh2YWx1ZSxrZXksb2JqZWN0KSYmKHJlc3VsdFtrZXldPXZhbHVlKX0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gdHJhbnNmb3JtKG9iamVjdCxjYWxsYmFjayxhY2N1bXVsYXRvcix0aGlzQXJnKXt2YXIgaXNBcnI9aXNBcnJheShvYmplY3QpO2lmKG51bGw9PWFjY3VtdWxhdG9yKWlmKGlzQXJyKWFjY3VtdWxhdG9yPVtdO2Vsc2V7dmFyIGN0b3I9b2JqZWN0JiZvYmplY3QuY29uc3RydWN0b3IscHJvdG89Y3RvciYmY3Rvci5wcm90b3R5cGU7YWNjdW11bGF0b3I9YmFzZUNyZWF0ZShwcm90byl9cmV0dXJuIGNhbGxiYWNrJiYoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsNCksKGlzQXJyP2Jhc2VFYWNoOmZvck93bikob2JqZWN0LGZ1bmN0aW9uKHZhbHVlLGluZGV4LG9iamVjdCl7cmV0dXJuIGNhbGxiYWNrKGFjY3VtdWxhdG9yLHZhbHVlLGluZGV4LG9iamVjdCl9KSksYWNjdW11bGF0b3J9ZnVuY3Rpb24gdmFsdWVzKG9iamVjdCl7Zm9yKHZhciBpbmRleD0tMSxwcm9wcz1rZXlzKG9iamVjdCksbGVuZ3RoPXByb3BzLmxlbmd0aCxyZXN1bHQ9QXJyYXkobGVuZ3RoKTsrK2luZGV4PGxlbmd0aDspcmVzdWx0W2luZGV4XT1vYmplY3RbcHJvcHNbaW5kZXhdXTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGF0KGNvbGxlY3Rpb24pe3ZhciBhcmdzPWFyZ3VtZW50cyxpbmRleD0tMSxwcm9wcz1iYXNlRmxhdHRlbihhcmdzLCEwLCExLDEpLGxlbmd0aD1hcmdzWzJdJiZhcmdzWzJdW2FyZ3NbMV1dPT09Y29sbGVjdGlvbj8xOnByb3BzLmxlbmd0aCxyZXN1bHQ9QXJyYXkobGVuZ3RoKTtmb3Ioc3VwcG9ydC51bmluZGV4ZWRDaGFycyYmaXNTdHJpbmcoY29sbGVjdGlvbikmJihjb2xsZWN0aW9uPWNvbGxlY3Rpb24uc3BsaXQoIiIpKTsrK2luZGV4PGxlbmd0aDspcmVzdWx0W2luZGV4XT1jb2xsZWN0aW9uW3Byb3BzW2luZGV4XV07cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiBjb250YWlucyhjb2xsZWN0aW9uLHRhcmdldCxmcm9tSW5kZXgpe3ZhciBpbmRleD0tMSxpbmRleE9mPWdldEluZGV4T2YoKSxsZW5ndGg9Y29sbGVjdGlvbj9jb2xsZWN0aW9uLmxlbmd0aDowLHJlc3VsdD0hMTtyZXR1cm4gZnJvbUluZGV4PSgwPmZyb21JbmRleD9uYXRpdmVNYXgoMCxsZW5ndGgrZnJvbUluZGV4KTpmcm9tSW5kZXgpfHwwLGlzQXJyYXkoY29sbGVjdGlvbik/cmVzdWx0PWluZGV4T2YoY29sbGVjdGlvbix0YXJnZXQsZnJvbUluZGV4KT4tMToibnVtYmVyIj09dHlwZW9mIGxlbmd0aD9yZXN1bHQ9KGlzU3RyaW5nKGNvbGxlY3Rpb24pP2NvbGxlY3Rpb24uaW5kZXhPZih0YXJnZXQsZnJvbUluZGV4KTppbmRleE9mKGNvbGxlY3Rpb24sdGFyZ2V0LGZyb21JbmRleCkpPi0xOmJhc2VFYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUpe3JldHVybisraW5kZXg+PWZyb21JbmRleD8hKHJlc3VsdD12YWx1ZT09PXRhcmdldCk6dm9pZCAwfSkscmVzdWx0fWZ1bmN0aW9uIGV2ZXJ5KGNvbGxlY3Rpb24sY2FsbGJhY2ssdGhpc0FyZyl7dmFyIHJlc3VsdD0hMDtpZihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxpc0FycmF5KGNvbGxlY3Rpb24pKWZvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoOysraW5kZXg8bGVuZ3RoJiYocmVzdWx0PSEhY2FsbGJhY2soY29sbGVjdGlvbltpbmRleF0saW5kZXgsY29sbGVjdGlvbikpOyk7ZWxzZSBiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe3JldHVybiByZXN1bHQ9ISFjYWxsYmFjayh2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKX0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gZmlsdGVyKGNvbGxlY3Rpb24sY2FsbGJhY2ssdGhpc0FyZyl7dmFyIHJlc3VsdD1bXTtpZihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxpc0FycmF5KGNvbGxlY3Rpb24pKWZvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoOysraW5kZXg8bGVuZ3RoOyl7dmFyIHZhbHVlPWNvbGxlY3Rpb25baW5kZXhdO2NhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pJiZyZXN1bHQucHVzaCh2YWx1ZSl9ZWxzZSBiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe2NhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pJiZyZXN1bHQucHVzaCh2YWx1ZSl9KTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGZpbmQoY29sbGVjdGlvbixjYWxsYmFjayx0aGlzQXJnKXtpZihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSwhaXNBcnJheShjb2xsZWN0aW9uKSl7dmFyIHJlc3VsdDtyZXR1cm4gYmFzZUVhY2goY29sbGVjdGlvbixmdW5jdGlvbih2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKXtyZXR1cm4gY2FsbGJhY2sodmFsdWUsaW5kZXgsY29sbGVjdGlvbik/KHJlc3VsdD12YWx1ZSwhMSk6dm9pZCAwfSkscmVzdWx0fWZvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoOysraW5kZXg8bGVuZ3RoOyl7dmFyIHZhbHVlPWNvbGxlY3Rpb25baW5kZXhdO2lmKGNhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pKXJldHVybiB2YWx1ZX19ZnVuY3Rpb24gZmluZExhc3QoY29sbGVjdGlvbixjYWxsYmFjayx0aGlzQXJnKXt2YXIgcmVzdWx0O3JldHVybiBjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxmb3JFYWNoUmlnaHQoY29sbGVjdGlvbixmdW5jdGlvbih2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKXtyZXR1cm4gY2FsbGJhY2sodmFsdWUsaW5kZXgsY29sbGVjdGlvbik/KHJlc3VsdD12YWx1ZSwhMSk6dm9pZCAwfSkscmVzdWx0fWZ1bmN0aW9uIGZvckVhY2goY29sbGVjdGlvbixjYWxsYmFjayx0aGlzQXJnKXtpZihjYWxsYmFjayYmInVuZGVmaW5lZCI9PXR5cGVvZiB0aGlzQXJnJiZpc0FycmF5KGNvbGxlY3Rpb24pKWZvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoOysraW5kZXg8bGVuZ3RoJiZjYWxsYmFjayhjb2xsZWN0aW9uW2luZGV4XSxpbmRleCxjb2xsZWN0aW9uKSE9PSExOyk7ZWxzZSBiYXNlRWFjaChjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpO3JldHVybiBjb2xsZWN0aW9ufWZ1bmN0aW9uIGZvckVhY2hSaWdodChjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpe3ZhciBpdGVyYWJsZT1jb2xsZWN0aW9uLGxlbmd0aD1jb2xsZWN0aW9uP2NvbGxlY3Rpb24ubGVuZ3RoOjA7aWYoY2FsbGJhY2s9Y2FsbGJhY2smJiJ1bmRlZmluZWQiPT10eXBlb2YgdGhpc0FyZz9jYWxsYmFjazpiYXNlQ3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxpc0FycmF5KGNvbGxlY3Rpb24pKWZvcig7bGVuZ3RoLS0mJmNhbGxiYWNrKGNvbGxlY3Rpb25bbGVuZ3RoXSxsZW5ndGgsY29sbGVjdGlvbikhPT0hMTspO2Vsc2V7aWYoIm51bWJlciIhPXR5cGVvZiBsZW5ndGgpe3ZhciBwcm9wcz1rZXlzKGNvbGxlY3Rpb24pO2xlbmd0aD1wcm9wcy5sZW5ndGh9ZWxzZSBzdXBwb3J0LnVuaW5kZXhlZENoYXJzJiZpc1N0cmluZyhjb2xsZWN0aW9uKSYmKGl0ZXJhYmxlPWNvbGxlY3Rpb24uc3BsaXQoIiIpKTtiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGtleSxjb2xsZWN0aW9uKXtyZXR1cm4ga2V5PXByb3BzP3Byb3BzWy0tbGVuZ3RoXTotLWxlbmd0aCxjYWxsYmFjayhpdGVyYWJsZVtrZXldLGtleSxjb2xsZWN0aW9uKX0pfXJldHVybiBjb2xsZWN0aW9ufWZ1bmN0aW9uIGludm9rZShjb2xsZWN0aW9uLG1ldGhvZE5hbWUpe3ZhciBhcmdzPXNsaWNlKGFyZ3VtZW50cywyKSxpbmRleD0tMSxpc0Z1bmM9ImZ1bmN0aW9uIj09dHlwZW9mIG1ldGhvZE5hbWUsbGVuZ3RoPWNvbGxlY3Rpb24/Y29sbGVjdGlvbi5sZW5ndGg6MCxyZXN1bHQ9QXJyYXkoIm51bWJlciI9PXR5cGVvZiBsZW5ndGg/bGVuZ3RoOjApO3JldHVybiBmb3JFYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUpe3Jlc3VsdFsrK2luZGV4XT0oaXNGdW5jP21ldGhvZE5hbWU6dmFsdWVbbWV0aG9kTmFtZV0pLmFwcGx5KHZhbHVlLGFyZ3MpfSkscmVzdWx0fWZ1bmN0aW9uIG1hcChjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpe3ZhciBpbmRleD0tMSxsZW5ndGg9Y29sbGVjdGlvbj9jb2xsZWN0aW9uLmxlbmd0aDowLHJlc3VsdD1BcnJheSgibnVtYmVyIj09dHlwZW9mIGxlbmd0aD9sZW5ndGg6MCk7aWYoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyksaXNBcnJheShjb2xsZWN0aW9uKSlmb3IoOysraW5kZXg8bGVuZ3RoOylyZXN1bHRbaW5kZXhdPWNhbGxiYWNrKGNvbGxlY3Rpb25baW5kZXhdLGluZGV4LGNvbGxlY3Rpb24pO2Vsc2UgYmFzZUVhY2goY29sbGVjdGlvbixmdW5jdGlvbih2YWx1ZSxrZXksY29sbGVjdGlvbil7cmVzdWx0WysraW5kZXhdPWNhbGxiYWNrKHZhbHVlLGtleSxjb2xsZWN0aW9uKX0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gbWF4KGNvbGxlY3Rpb24sY2FsbGJhY2ssdGhpc0FyZyl7dmFyIGNvbXB1dGVkPS0xLzAscmVzdWx0PWNvbXB1dGVkO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBjYWxsYmFjayYmdGhpc0FyZyYmdGhpc0FyZ1tjYWxsYmFja109PT1jb2xsZWN0aW9uJiYoY2FsbGJhY2s9bnVsbCksbnVsbD09Y2FsbGJhY2smJmlzQXJyYXkoY29sbGVjdGlvbikpZm9yKHZhciBpbmRleD0tMSxsZW5ndGg9Y29sbGVjdGlvbi5sZW5ndGg7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9Y29sbGVjdGlvbltpbmRleF07dmFsdWU+cmVzdWx0JiYocmVzdWx0PXZhbHVlKX1lbHNlIGNhbGxiYWNrPW51bGw9PWNhbGxiYWNrJiZpc1N0cmluZyhjb2xsZWN0aW9uKT9jaGFyQXRDYWxsYmFjazpsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe3ZhciBjdXJyZW50PWNhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pO2N1cnJlbnQ+Y29tcHV0ZWQmJihjb21wdXRlZD1jdXJyZW50LHJlc3VsdD12YWx1ZSl9KTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIG1pbihjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpe3ZhciBjb21wdXRlZD0xLzAscmVzdWx0PWNvbXB1dGVkO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBjYWxsYmFjayYmdGhpc0FyZyYmdGhpc0FyZ1tjYWxsYmFja109PT1jb2xsZWN0aW9uJiYoY2FsbGJhY2s9bnVsbCksbnVsbD09Y2FsbGJhY2smJmlzQXJyYXkoY29sbGVjdGlvbikpZm9yKHZhciBpbmRleD0tMSxsZW5ndGg9Y29sbGVjdGlvbi5sZW5ndGg7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9Y29sbGVjdGlvbltpbmRleF07cmVzdWx0PnZhbHVlJiYocmVzdWx0PXZhbHVlKX1lbHNlIGNhbGxiYWNrPW51bGw9PWNhbGxiYWNrJiZpc1N0cmluZyhjb2xsZWN0aW9uKT9jaGFyQXRDYWxsYmFjazpsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKSxiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe3ZhciBjdXJyZW50PWNhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pO2NvbXB1dGVkPmN1cnJlbnQmJihjb21wdXRlZD1jdXJyZW50LHJlc3VsdD12YWx1ZSl9KTtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHJlZHVjZShjb2xsZWN0aW9uLGNhbGxiYWNrLGFjY3VtdWxhdG9yLHRoaXNBcmcpe3ZhciBub2FjY3VtPWFyZ3VtZW50cy5sZW5ndGg8MztpZihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZyw0KSxpc0FycmF5KGNvbGxlY3Rpb24pKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoO2Zvcihub2FjY3VtJiYoYWNjdW11bGF0b3I9Y29sbGVjdGlvblsrK2luZGV4XSk7KytpbmRleDxsZW5ndGg7KWFjY3VtdWxhdG9yPWNhbGxiYWNrKGFjY3VtdWxhdG9yLGNvbGxlY3Rpb25baW5kZXhdLGluZGV4LGNvbGxlY3Rpb24pfWVsc2UgYmFzZUVhY2goY29sbGVjdGlvbixmdW5jdGlvbih2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKXthY2N1bXVsYXRvcj1ub2FjY3VtPyhub2FjY3VtPSExLHZhbHVlKTpjYWxsYmFjayhhY2N1bXVsYXRvcix2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKX0pO3JldHVybiBhY2N1bXVsYXRvcn1mdW5jdGlvbiByZWR1Y2VSaWdodChjb2xsZWN0aW9uLGNhbGxiYWNrLGFjY3VtdWxhdG9yLHRoaXNBcmcpe3ZhciBub2FjY3VtPWFyZ3VtZW50cy5sZW5ndGg8MztyZXR1cm4gY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsNCksZm9yRWFjaFJpZ2h0KGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUsaW5kZXgsY29sbGVjdGlvbil7YWNjdW11bGF0b3I9bm9hY2N1bT8obm9hY2N1bT0hMSx2YWx1ZSk6Y2FsbGJhY2soYWNjdW11bGF0b3IsdmFsdWUsaW5kZXgsY29sbGVjdGlvbil9KSxhY2N1bXVsYXRvcn1mdW5jdGlvbiByZWplY3QoY29sbGVjdGlvbixjYWxsYmFjayx0aGlzQXJnKXtyZXR1cm4gY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyksZmlsdGVyKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUsaW5kZXgsY29sbGVjdGlvbil7cmV0dXJuIWNhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pfSl9ZnVuY3Rpb24gc2FtcGxlKGNvbGxlY3Rpb24sbixndWFyZCl7aWYoY29sbGVjdGlvbiYmIm51bWJlciIhPXR5cGVvZiBjb2xsZWN0aW9uLmxlbmd0aD9jb2xsZWN0aW9uPXZhbHVlcyhjb2xsZWN0aW9uKTpzdXBwb3J0LnVuaW5kZXhlZENoYXJzJiZpc1N0cmluZyhjb2xsZWN0aW9uKSYmKGNvbGxlY3Rpb249Y29sbGVjdGlvbi5zcGxpdCgiIikpLG51bGw9PW58fGd1YXJkKXJldHVybiBjb2xsZWN0aW9uP2NvbGxlY3Rpb25bYmFzZVJhbmRvbSgwLGNvbGxlY3Rpb24ubGVuZ3RoLTEpXTp1bmRlZmluZWQ7dmFyIHJlc3VsdD1zaHVmZmxlKGNvbGxlY3Rpb24pO3JldHVybiByZXN1bHQubGVuZ3RoPW5hdGl2ZU1pbihuYXRpdmVNYXgoMCxuKSxyZXN1bHQubGVuZ3RoKSxyZXN1bHR9ZnVuY3Rpb24gc2h1ZmZsZShjb2xsZWN0aW9uKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWNvbGxlY3Rpb24/Y29sbGVjdGlvbi5sZW5ndGg6MCxyZXN1bHQ9QXJyYXkoIm51bWJlciI9PXR5cGVvZiBsZW5ndGg/bGVuZ3RoOjApO3JldHVybiBmb3JFYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24odmFsdWUpe3ZhciByYW5kPWJhc2VSYW5kb20oMCwrK2luZGV4KTtyZXN1bHRbaW5kZXhdPXJlc3VsdFtyYW5kXSxyZXN1bHRbcmFuZF09dmFsdWV9KSxyZXN1bHR9ZnVuY3Rpb24gc2l6ZShjb2xsZWN0aW9uKXt2YXIgbGVuZ3RoPWNvbGxlY3Rpb24/Y29sbGVjdGlvbi5sZW5ndGg6MDtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIGxlbmd0aD9sZW5ndGg6a2V5cyhjb2xsZWN0aW9uKS5sZW5ndGh9ZnVuY3Rpb24gc29tZShjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpe3ZhciByZXN1bHQ7aWYoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyksaXNBcnJheShjb2xsZWN0aW9uKSlmb3IodmFyIGluZGV4PS0xLGxlbmd0aD1jb2xsZWN0aW9uLmxlbmd0aDsrK2luZGV4PGxlbmd0aCYmIShyZXN1bHQ9Y2FsbGJhY2soY29sbGVjdGlvbltpbmRleF0saW5kZXgsY29sbGVjdGlvbikpOyk7ZWxzZSBiYXNlRWFjaChjb2xsZWN0aW9uLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pe3JldHVybiEocmVzdWx0PWNhbGxiYWNrKHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pKX0pO3JldHVybiEhcmVzdWx0fWZ1bmN0aW9uIHNvcnRCeShjb2xsZWN0aW9uLGNhbGxiYWNrLHRoaXNBcmcpe3ZhciBpbmRleD0tMSxpc0Fycj1pc0FycmF5KGNhbGxiYWNrKSxsZW5ndGg9Y29sbGVjdGlvbj9jb2xsZWN0aW9uLmxlbmd0aDowLHJlc3VsdD1BcnJheSgibnVtYmVyIj09dHlwZW9mIGxlbmd0aD9sZW5ndGg6MCk7Zm9yKGlzQXJyfHwoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMykpLGZvckVhY2goY29sbGVjdGlvbixmdW5jdGlvbih2YWx1ZSxrZXksY29sbGVjdGlvbil7dmFyIG9iamVjdD1yZXN1bHRbKytpbmRleF09Z2V0T2JqZWN0KCk7aXNBcnI/b2JqZWN0LmNyaXRlcmlhPW1hcChjYWxsYmFjayxmdW5jdGlvbihrZXkpe3JldHVybiB2YWx1ZVtrZXldfSk6KG9iamVjdC5jcml0ZXJpYT1nZXRBcnJheSgpKVswXT1jYWxsYmFjayh2YWx1ZSxrZXksY29sbGVjdGlvbiksb2JqZWN0LmluZGV4PWluZGV4LG9iamVjdC52YWx1ZT12YWx1ZX0pLGxlbmd0aD1yZXN1bHQubGVuZ3RoLHJlc3VsdC5zb3J0KGNvbXBhcmVBc2NlbmRpbmcpO2xlbmd0aC0tOyl7dmFyIG9iamVjdD1yZXN1bHRbbGVuZ3RoXTtyZXN1bHRbbGVuZ3RoXT1vYmplY3QudmFsdWUsaXNBcnJ8fHJlbGVhc2VBcnJheShvYmplY3QuY3JpdGVyaWEpLHJlbGVhc2VPYmplY3Qob2JqZWN0KX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHRvQXJyYXkoY29sbGVjdGlvbil7cmV0dXJuIGNvbGxlY3Rpb24mJiJudW1iZXIiPT10eXBlb2YgY29sbGVjdGlvbi5sZW5ndGg/c3VwcG9ydC51bmluZGV4ZWRDaGFycyYmaXNTdHJpbmcoY29sbGVjdGlvbik/Y29sbGVjdGlvbi5zcGxpdCgiIik6c2xpY2UoY29sbGVjdGlvbik6dmFsdWVzKGNvbGxlY3Rpb24pfWZ1bmN0aW9uIGNvbXBhY3QoYXJyYXkpe2Zvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowLHJlc3VsdD1bXTsrK2luZGV4PGxlbmd0aDspe3ZhciB2YWx1ZT1hcnJheVtpbmRleF07dmFsdWUmJnJlc3VsdC5wdXNoKHZhbHVlKX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIGRpZmZlcmVuY2UoYXJyYXkpe3JldHVybiBiYXNlRGlmZmVyZW5jZShhcnJheSxiYXNlRmxhdHRlbihhcmd1bWVudHMsITAsITAsMSkpfWZ1bmN0aW9uIGZpbmRJbmRleChhcnJheSxjYWxsYmFjayx0aGlzQXJnKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowO2ZvcihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKTsrK2luZGV4PGxlbmd0aDspaWYoY2FsbGJhY2soYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KSlyZXR1cm4gaW5kZXg7cmV0dXJuLTF9ZnVuY3Rpb24gZmluZExhc3RJbmRleChhcnJheSxjYWxsYmFjayx0aGlzQXJnKXt2YXIgbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowO2ZvcihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKTtsZW5ndGgtLTspaWYoY2FsbGJhY2soYXJyYXlbbGVuZ3RoXSxsZW5ndGgsYXJyYXkpKXJldHVybiBsZW5ndGg7cmV0dXJuLTF9ZnVuY3Rpb24gZmlyc3QoYXJyYXksY2FsbGJhY2ssdGhpc0FyZyl7dmFyIG49MCxsZW5ndGg9YXJyYXk/YXJyYXkubGVuZ3RoOjA7aWYoIm51bWJlciIhPXR5cGVvZiBjYWxsYmFjayYmbnVsbCE9Y2FsbGJhY2spe3ZhciBpbmRleD0tMTtmb3IoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyk7KytpbmRleDxsZW5ndGgmJmNhbGxiYWNrKGFycmF5W2luZGV4XSxpbmRleCxhcnJheSk7KW4rK31lbHNlIGlmKG49Y2FsbGJhY2ssbnVsbD09bnx8dGhpc0FyZylyZXR1cm4gYXJyYXk/YXJyYXlbMF06dW5kZWZpbmVkO3JldHVybiBzbGljZShhcnJheSwwLG5hdGl2ZU1pbihuYXRpdmVNYXgoMCxuKSxsZW5ndGgpKX1mdW5jdGlvbiBmbGF0dGVuKGFycmF5LGlzU2hhbGxvdyxjYWxsYmFjayx0aGlzQXJnKXtyZXR1cm4iYm9vbGVhbiIhPXR5cGVvZiBpc1NoYWxsb3cmJm51bGwhPWlzU2hhbGxvdyYmKHRoaXNBcmc9Y2FsbGJhY2ssY2FsbGJhY2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGlzU2hhbGxvdyYmdGhpc0FyZyYmdGhpc0FyZ1tpc1NoYWxsb3ddPT09YXJyYXk/bnVsbDppc1NoYWxsb3csaXNTaGFsbG93PSExKSxudWxsIT1jYWxsYmFjayYmKGFycmF5PW1hcChhcnJheSxjYWxsYmFjayx0aGlzQXJnKSksYmFzZUZsYXR0ZW4oYXJyYXksaXNTaGFsbG93KX1mdW5jdGlvbiBpbmRleE9mKGFycmF5LHZhbHVlLGZyb21JbmRleCl7aWYoIm51bWJlciI9PXR5cGVvZiBmcm9tSW5kZXgpe3ZhciBsZW5ndGg9YXJyYXk/YXJyYXkubGVuZ3RoOjA7ZnJvbUluZGV4PTA+ZnJvbUluZGV4P25hdGl2ZU1heCgwLGxlbmd0aCtmcm9tSW5kZXgpOmZyb21JbmRleHx8MH1lbHNlIGlmKGZyb21JbmRleCl7dmFyIGluZGV4PXNvcnRlZEluZGV4KGFycmF5LHZhbHVlKTtyZXR1cm4gYXJyYXlbaW5kZXhdPT09dmFsdWU/aW5kZXg6LTF9cmV0dXJuIGJhc2VJbmRleE9mKGFycmF5LHZhbHVlLGZyb21JbmRleCl9ZnVuY3Rpb24gaW5pdGlhbChhcnJheSxjYWxsYmFjayx0aGlzQXJnKXt2YXIgbj0wLGxlbmd0aD1hcnJheT9hcnJheS5sZW5ndGg6MDtpZigibnVtYmVyIiE9dHlwZW9mIGNhbGxiYWNrJiZudWxsIT1jYWxsYmFjayl7dmFyIGluZGV4PWxlbmd0aDtmb3IoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyk7aW5kZXgtLSYmY2FsbGJhY2soYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KTspbisrfWVsc2Ugbj1udWxsPT1jYWxsYmFja3x8dGhpc0FyZz8xOmNhbGxiYWNrfHxuO3JldHVybiBzbGljZShhcnJheSwwLG5hdGl2ZU1pbihuYXRpdmVNYXgoMCxsZW5ndGgtbiksbGVuZ3RoKSl9ZnVuY3Rpb24gaW50ZXJzZWN0aW9uKCl7Zm9yKHZhciBhcmdzPVtdLGFyZ3NJbmRleD0tMSxhcmdzTGVuZ3RoPWFyZ3VtZW50cy5sZW5ndGgsY2FjaGVzPWdldEFycmF5KCksaW5kZXhPZj1nZXRJbmRleE9mKCksdHJ1c3RJbmRleE9mPWluZGV4T2Y9PT1iYXNlSW5kZXhPZixzZWVuPWdldEFycmF5KCk7KythcmdzSW5kZXg8YXJnc0xlbmd0aDspe3ZhciB2YWx1ZT1hcmd1bWVudHNbYXJnc0luZGV4XTsoaXNBcnJheSh2YWx1ZSl8fGlzQXJndW1lbnRzKHZhbHVlKSkmJihhcmdzLnB1c2godmFsdWUpLGNhY2hlcy5wdXNoKHRydXN0SW5kZXhPZiYmdmFsdWUubGVuZ3RoPj1sYXJnZUFycmF5U2l6ZSYmY3JlYXRlQ2FjaGUoYXJnc0luZGV4P2FyZ3NbYXJnc0luZGV4XTpzZWVuKSkpfXZhciBhcnJheT1hcmdzWzBdLGluZGV4PS0xLGxlbmd0aD1hcnJheT9hcnJheS5sZW5ndGg6MCxyZXN1bHQ9W107b3V0ZXI6Zm9yKDsrK2luZGV4PGxlbmd0aDspe3ZhciBjYWNoZT1jYWNoZXNbMF07aWYodmFsdWU9YXJyYXlbaW5kZXhdLChjYWNoZT9jYWNoZUluZGV4T2YoY2FjaGUsdmFsdWUpOmluZGV4T2Yoc2Vlbix2YWx1ZSkpPDApe2ZvcihhcmdzSW5kZXg9YXJnc0xlbmd0aCwoY2FjaGV8fHNlZW4pLnB1c2godmFsdWUpOy0tYXJnc0luZGV4OylpZihjYWNoZT1jYWNoZXNbYXJnc0luZGV4XSwoY2FjaGU/Y2FjaGVJbmRleE9mKGNhY2hlLHZhbHVlKTppbmRleE9mKGFyZ3NbYXJnc0luZGV4XSx2YWx1ZSkpPDApY29udGludWUgb3V0ZXI7cmVzdWx0LnB1c2godmFsdWUpfX1mb3IoO2FyZ3NMZW5ndGgtLTspY2FjaGU9Y2FjaGVzW2FyZ3NMZW5ndGhdLGNhY2hlJiZyZWxlYXNlT2JqZWN0KGNhY2hlKTtyZXR1cm4gcmVsZWFzZUFycmF5KGNhY2hlcykscmVsZWFzZUFycmF5KHNlZW4pLHJlc3VsdH1mdW5jdGlvbiBsYXN0KGFycmF5LGNhbGxiYWNrLHRoaXNBcmcpe3ZhciBuPTAsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowO2lmKCJudW1iZXIiIT10eXBlb2YgY2FsbGJhY2smJm51bGwhPWNhbGxiYWNrKXt2YXIgaW5kZXg9bGVuZ3RoO2ZvcihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKTtpbmRleC0tJiZjYWxsYmFjayhhcnJheVtpbmRleF0saW5kZXgsYXJyYXkpOyluKyt9ZWxzZSBpZihuPWNhbGxiYWNrLG51bGw9PW58fHRoaXNBcmcpcmV0dXJuIGFycmF5P2FycmF5W2xlbmd0aC0xXTp1bmRlZmluZWQ7cmV0dXJuIHNsaWNlKGFycmF5LG5hdGl2ZU1heCgwLGxlbmd0aC1uKSl9ZnVuY3Rpb24gbGFzdEluZGV4T2YoYXJyYXksdmFsdWUsZnJvbUluZGV4KXt2YXIgaW5kZXg9YXJyYXk/YXJyYXkubGVuZ3RoOjA7Zm9yKCJudW1iZXIiPT10eXBlb2YgZnJvbUluZGV4JiYoaW5kZXg9KDA+ZnJvbUluZGV4P25hdGl2ZU1heCgwLGluZGV4K2Zyb21JbmRleCk6bmF0aXZlTWluKGZyb21JbmRleCxpbmRleC0xKSkrMSk7aW5kZXgtLTspaWYoYXJyYXlbaW5kZXhdPT09dmFsdWUpcmV0dXJuIGluZGV4O3JldHVybi0xfWZ1bmN0aW9uIHB1bGwoYXJyYXkpe2Zvcih2YXIgYXJncz1hcmd1bWVudHMsYXJnc0luZGV4PTAsYXJnc0xlbmd0aD1hcmdzLmxlbmd0aCxsZW5ndGg9YXJyYXk/YXJyYXkubGVuZ3RoOjA7KythcmdzSW5kZXg8YXJnc0xlbmd0aDspZm9yKHZhciBpbmRleD0tMSx2YWx1ZT1hcmdzW2FyZ3NJbmRleF07KytpbmRleDxsZW5ndGg7KWFycmF5W2luZGV4XT09PXZhbHVlJiYoc3BsaWNlLmNhbGwoYXJyYXksaW5kZXgtLSwxKSxsZW5ndGgtLSk7cmV0dXJuIGFycmF5fWZ1bmN0aW9uIHJhbmdlKHN0YXJ0LGVuZCxzdGVwKXtzdGFydD0rc3RhcnR8fDAsc3RlcD0ibnVtYmVyIj09dHlwZW9mIHN0ZXA/c3RlcDorc3RlcHx8MSxudWxsPT1lbmQmJihlbmQ9c3RhcnQsc3RhcnQ9MCk7Zm9yKHZhciBpbmRleD0tMSxsZW5ndGg9bmF0aXZlTWF4KDAsY2VpbCgoZW5kLXN0YXJ0KS8oc3RlcHx8MSkpKSxyZXN1bHQ9QXJyYXkobGVuZ3RoKTsrK2luZGV4PGxlbmd0aDspcmVzdWx0W2luZGV4XT1zdGFydCxzdGFydCs9c3RlcDtyZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHJlbW92ZShhcnJheSxjYWxsYmFjayx0aGlzQXJnKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowLHJlc3VsdD1bXTtmb3IoY2FsbGJhY2s9bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMyk7KytpbmRleDxsZW5ndGg7KXt2YXIgdmFsdWU9YXJyYXlbaW5kZXhdO2NhbGxiYWNrKHZhbHVlLGluZGV4LGFycmF5KSYmKHJlc3VsdC5wdXNoKHZhbHVlKSxzcGxpY2UuY2FsbChhcnJheSxpbmRleC0tLDEpLGxlbmd0aC0tKX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHJlc3QoYXJyYXksY2FsbGJhY2ssdGhpc0FyZyl7aWYoIm51bWJlciIhPXR5cGVvZiBjYWxsYmFjayYmbnVsbCE9Y2FsbGJhY2spe3ZhciBuPTAsaW5kZXg9LTEsbGVuZ3RoPWFycmF5P2FycmF5Lmxlbmd0aDowO2ZvcihjYWxsYmFjaz1sb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssdGhpc0FyZywzKTsrK2luZGV4PGxlbmd0aCYmY2FsbGJhY2soYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KTspbisrfWVsc2Ugbj1udWxsPT1jYWxsYmFja3x8dGhpc0FyZz8xOm5hdGl2ZU1heCgwLGNhbGxiYWNrKTtyZXR1cm4gc2xpY2UoYXJyYXksbil9ZnVuY3Rpb24gc29ydGVkSW5kZXgoYXJyYXksdmFsdWUsY2FsbGJhY2ssdGhpc0FyZyl7dmFyIGxvdz0wLGhpZ2g9YXJyYXk/YXJyYXkubGVuZ3RoOmxvdztmb3IoY2FsbGJhY2s9Y2FsbGJhY2s/bG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLHRoaXNBcmcsMSk6aWRlbnRpdHksdmFsdWU9Y2FsbGJhY2sodmFsdWUpO2hpZ2g+bG93Oyl7dmFyIG1pZD1sb3craGlnaD4+PjE7Y2FsbGJhY2soYXJyYXlbbWlkXSk8dmFsdWU/bG93PW1pZCsxOmhpZ2g9bWlkfXJldHVybiBsb3d9ZnVuY3Rpb24gdW5pb24oKXtyZXR1cm4gYmFzZVVuaXEoYmFzZUZsYXR0ZW4oYXJndW1lbnRzLCEwLCEwKSl9ZnVuY3Rpb24gdW5pcShhcnJheSxpc1NvcnRlZCxjYWxsYmFjayx0aGlzQXJnKXtyZXR1cm4iYm9vbGVhbiIhPXR5cGVvZiBpc1NvcnRlZCYmbnVsbCE9aXNTb3J0ZWQmJih0aGlzQXJnPWNhbGxiYWNrLGNhbGxiYWNrPSJmdW5jdGlvbiIhPXR5cGVvZiBpc1NvcnRlZCYmdGhpc0FyZyYmdGhpc0FyZ1tpc1NvcnRlZF09PT1hcnJheT9udWxsOmlzU29ydGVkLGlzU29ydGVkPSExKSxudWxsIT1jYWxsYmFjayYmKGNhbGxiYWNrPWxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDMpKSxiYXNlVW5pcShhcnJheSxpc1NvcnRlZCxjYWxsYmFjayl9ZnVuY3Rpb24gd2l0aG91dChhcnJheSl7cmV0dXJuIGJhc2VEaWZmZXJlbmNlKGFycmF5LHNsaWNlKGFyZ3VtZW50cywxKSkKfWZ1bmN0aW9uIHhvcigpe2Zvcih2YXIgaW5kZXg9LTEsbGVuZ3RoPWFyZ3VtZW50cy5sZW5ndGg7KytpbmRleDxsZW5ndGg7KXt2YXIgYXJyYXk9YXJndW1lbnRzW2luZGV4XTtpZihpc0FycmF5KGFycmF5KXx8aXNBcmd1bWVudHMoYXJyYXkpKXZhciByZXN1bHQ9cmVzdWx0P2Jhc2VVbmlxKGJhc2VEaWZmZXJlbmNlKHJlc3VsdCxhcnJheSkuY29uY2F0KGJhc2VEaWZmZXJlbmNlKGFycmF5LHJlc3VsdCkpKTphcnJheX1yZXR1cm4gcmVzdWx0fHxbXX1mdW5jdGlvbiB6aXAoKXtmb3IodmFyIGFycmF5PWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHM6YXJndW1lbnRzWzBdLGluZGV4PS0xLGxlbmd0aD1hcnJheT9tYXgocGx1Y2soYXJyYXksImxlbmd0aCIpKTowLHJlc3VsdD1BcnJheSgwPmxlbmd0aD8wOmxlbmd0aCk7KytpbmRleDxsZW5ndGg7KXJlc3VsdFtpbmRleF09cGx1Y2soYXJyYXksaW5kZXgpO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gemlwT2JqZWN0KGtleXMsdmFsdWVzKXt2YXIgaW5kZXg9LTEsbGVuZ3RoPWtleXM/a2V5cy5sZW5ndGg6MCxyZXN1bHQ9e307Zm9yKHZhbHVlc3x8IWxlbmd0aHx8aXNBcnJheShrZXlzWzBdKXx8KHZhbHVlcz1bXSk7KytpbmRleDxsZW5ndGg7KXt2YXIga2V5PWtleXNbaW5kZXhdO3ZhbHVlcz9yZXN1bHRba2V5XT12YWx1ZXNbaW5kZXhdOmtleSYmKHJlc3VsdFtrZXlbMF1dPWtleVsxXSl9cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiBhZnRlcihuLGZ1bmMpe2lmKCFpc0Z1bmN0aW9uKGZ1bmMpKXRocm93IG5ldyBUeXBlRXJyb3I7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLS1uPDE/ZnVuYy5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dm9pZCAwfX1mdW5jdGlvbiBiaW5kKGZ1bmMsdGhpc0FyZyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+Mj9jcmVhdGVXcmFwcGVyKGZ1bmMsMTcsc2xpY2UoYXJndW1lbnRzLDIpLG51bGwsdGhpc0FyZyk6Y3JlYXRlV3JhcHBlcihmdW5jLDEsbnVsbCxudWxsLHRoaXNBcmcpfWZ1bmN0aW9uIGJpbmRBbGwob2JqZWN0KXtmb3IodmFyIGZ1bmNzPWFyZ3VtZW50cy5sZW5ndGg+MT9iYXNlRmxhdHRlbihhcmd1bWVudHMsITAsITEsMSk6ZnVuY3Rpb25zKG9iamVjdCksaW5kZXg9LTEsbGVuZ3RoPWZ1bmNzLmxlbmd0aDsrK2luZGV4PGxlbmd0aDspe3ZhciBrZXk9ZnVuY3NbaW5kZXhdO29iamVjdFtrZXldPWNyZWF0ZVdyYXBwZXIob2JqZWN0W2tleV0sMSxudWxsLG51bGwsb2JqZWN0KX1yZXR1cm4gb2JqZWN0fWZ1bmN0aW9uIGJpbmRLZXkob2JqZWN0LGtleSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+Mj9jcmVhdGVXcmFwcGVyKGtleSwxOSxzbGljZShhcmd1bWVudHMsMiksbnVsbCxvYmplY3QpOmNyZWF0ZVdyYXBwZXIoa2V5LDMsbnVsbCxudWxsLG9iamVjdCl9ZnVuY3Rpb24gY29tcG9zZSgpe2Zvcih2YXIgZnVuY3M9YXJndW1lbnRzLGxlbmd0aD1mdW5jcy5sZW5ndGg7bGVuZ3RoLS07KWlmKCFpc0Z1bmN0aW9uKGZ1bmNzW2xlbmd0aF0pKXRocm93IG5ldyBUeXBlRXJyb3I7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBhcmdzPWFyZ3VtZW50cyxsZW5ndGg9ZnVuY3MubGVuZ3RoO2xlbmd0aC0tOylhcmdzPVtmdW5jc1tsZW5ndGhdLmFwcGx5KHRoaXMsYXJncyldO3JldHVybiBhcmdzWzBdfX1mdW5jdGlvbiBjdXJyeShmdW5jLGFyaXR5KXtyZXR1cm4gYXJpdHk9Im51bWJlciI9PXR5cGVvZiBhcml0eT9hcml0eTorYXJpdHl8fGZ1bmMubGVuZ3RoLGNyZWF0ZVdyYXBwZXIoZnVuYyw0LG51bGwsbnVsbCxudWxsLGFyaXR5KX1mdW5jdGlvbiBkZWJvdW5jZShmdW5jLHdhaXQsb3B0aW9ucyl7dmFyIGFyZ3MsbWF4VGltZW91dElkLHJlc3VsdCxzdGFtcCx0aGlzQXJnLHRpbWVvdXRJZCx0cmFpbGluZ0NhbGwsbGFzdENhbGxlZD0wLG1heFdhaXQ9ITEsdHJhaWxpbmc9ITA7aWYoIWlzRnVuY3Rpb24oZnVuYykpdGhyb3cgbmV3IFR5cGVFcnJvcjtpZih3YWl0PW5hdGl2ZU1heCgwLHdhaXQpfHwwLG9wdGlvbnM9PT0hMCl7dmFyIGxlYWRpbmc9ITA7dHJhaWxpbmc9ITF9ZWxzZSBpc09iamVjdChvcHRpb25zKSYmKGxlYWRpbmc9b3B0aW9ucy5sZWFkaW5nLG1heFdhaXQ9Im1heFdhaXQiaW4gb3B0aW9ucyYmKG5hdGl2ZU1heCh3YWl0LG9wdGlvbnMubWF4V2FpdCl8fDApLHRyYWlsaW5nPSJ0cmFpbGluZyJpbiBvcHRpb25zP29wdGlvbnMudHJhaWxpbmc6dHJhaWxpbmcpO3ZhciBkZWxheWVkPWZ1bmN0aW9uKCl7dmFyIHJlbWFpbmluZz13YWl0LShub3coKS1zdGFtcCk7aWYoMD49cmVtYWluaW5nKXttYXhUaW1lb3V0SWQmJmNsZWFyVGltZW91dChtYXhUaW1lb3V0SWQpO3ZhciBpc0NhbGxlZD10cmFpbGluZ0NhbGw7bWF4VGltZW91dElkPXRpbWVvdXRJZD10cmFpbGluZ0NhbGw9dW5kZWZpbmVkLGlzQ2FsbGVkJiYobGFzdENhbGxlZD1ub3coKSxyZXN1bHQ9ZnVuYy5hcHBseSh0aGlzQXJnLGFyZ3MpLHRpbWVvdXRJZHx8bWF4VGltZW91dElkfHwoYXJncz10aGlzQXJnPW51bGwpKX1lbHNlIHRpbWVvdXRJZD1zZXRUaW1lb3V0KGRlbGF5ZWQscmVtYWluaW5nKX0sbWF4RGVsYXllZD1mdW5jdGlvbigpe3RpbWVvdXRJZCYmY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCksbWF4VGltZW91dElkPXRpbWVvdXRJZD10cmFpbGluZ0NhbGw9dW5kZWZpbmVkLCh0cmFpbGluZ3x8bWF4V2FpdCE9PXdhaXQpJiYobGFzdENhbGxlZD1ub3coKSxyZXN1bHQ9ZnVuYy5hcHBseSh0aGlzQXJnLGFyZ3MpLHRpbWVvdXRJZHx8bWF4VGltZW91dElkfHwoYXJncz10aGlzQXJnPW51bGwpKX07cmV0dXJuIGZ1bmN0aW9uKCl7aWYoYXJncz1hcmd1bWVudHMsc3RhbXA9bm93KCksdGhpc0FyZz10aGlzLHRyYWlsaW5nQ2FsbD10cmFpbGluZyYmKHRpbWVvdXRJZHx8IWxlYWRpbmcpLG1heFdhaXQ9PT0hMSl2YXIgbGVhZGluZ0NhbGw9bGVhZGluZyYmIXRpbWVvdXRJZDtlbHNle21heFRpbWVvdXRJZHx8bGVhZGluZ3x8KGxhc3RDYWxsZWQ9c3RhbXApO3ZhciByZW1haW5pbmc9bWF4V2FpdC0oc3RhbXAtbGFzdENhbGxlZCksaXNDYWxsZWQ9MD49cmVtYWluaW5nO2lzQ2FsbGVkPyhtYXhUaW1lb3V0SWQmJihtYXhUaW1lb3V0SWQ9Y2xlYXJUaW1lb3V0KG1heFRpbWVvdXRJZCkpLGxhc3RDYWxsZWQ9c3RhbXAscmVzdWx0PWZ1bmMuYXBwbHkodGhpc0FyZyxhcmdzKSk6bWF4VGltZW91dElkfHwobWF4VGltZW91dElkPXNldFRpbWVvdXQobWF4RGVsYXllZCxyZW1haW5pbmcpKX1yZXR1cm4gaXNDYWxsZWQmJnRpbWVvdXRJZD90aW1lb3V0SWQ9Y2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk6dGltZW91dElkfHx3YWl0PT09bWF4V2FpdHx8KHRpbWVvdXRJZD1zZXRUaW1lb3V0KGRlbGF5ZWQsd2FpdCkpLGxlYWRpbmdDYWxsJiYoaXNDYWxsZWQ9ITAscmVzdWx0PWZ1bmMuYXBwbHkodGhpc0FyZyxhcmdzKSksIWlzQ2FsbGVkfHx0aW1lb3V0SWR8fG1heFRpbWVvdXRJZHx8KGFyZ3M9dGhpc0FyZz1udWxsKSxyZXN1bHR9fWZ1bmN0aW9uIGRlZmVyKGZ1bmMpe2lmKCFpc0Z1bmN0aW9uKGZ1bmMpKXRocm93IG5ldyBUeXBlRXJyb3I7dmFyIGFyZ3M9c2xpY2UoYXJndW1lbnRzLDEpO3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZnVuYy5hcHBseSh1bmRlZmluZWQsYXJncyl9LDEpfWZ1bmN0aW9uIGRlbGF5KGZ1bmMsd2FpdCl7aWYoIWlzRnVuY3Rpb24oZnVuYykpdGhyb3cgbmV3IFR5cGVFcnJvcjt2YXIgYXJncz1zbGljZShhcmd1bWVudHMsMik7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmdW5jLmFwcGx5KHVuZGVmaW5lZCxhcmdzKX0sd2FpdCl9ZnVuY3Rpb24gbWVtb2l6ZShmdW5jLHJlc29sdmVyKXtpZighaXNGdW5jdGlvbihmdW5jKSl0aHJvdyBuZXcgVHlwZUVycm9yO3ZhciBtZW1vaXplZD1mdW5jdGlvbigpe3ZhciBjYWNoZT1tZW1vaXplZC5jYWNoZSxrZXk9cmVzb2x2ZXI/cmVzb2x2ZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOmtleVByZWZpeCthcmd1bWVudHNbMF07cmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoY2FjaGUsa2V5KT9jYWNoZVtrZXldOmNhY2hlW2tleV09ZnVuYy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiBtZW1vaXplZC5jYWNoZT17fSxtZW1vaXplZH1mdW5jdGlvbiBvbmNlKGZ1bmMpe3ZhciByYW4scmVzdWx0O2lmKCFpc0Z1bmN0aW9uKGZ1bmMpKXRocm93IG5ldyBUeXBlRXJyb3I7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHJhbj9yZXN1bHQ6KHJhbj0hMCxyZXN1bHQ9ZnVuYy5hcHBseSh0aGlzLGFyZ3VtZW50cyksZnVuYz1udWxsLHJlc3VsdCl9fWZ1bmN0aW9uIHBhcnRpYWwoZnVuYyl7cmV0dXJuIGNyZWF0ZVdyYXBwZXIoZnVuYywxNixzbGljZShhcmd1bWVudHMsMSkpfWZ1bmN0aW9uIHBhcnRpYWxSaWdodChmdW5jKXtyZXR1cm4gY3JlYXRlV3JhcHBlcihmdW5jLDMyLG51bGwsc2xpY2UoYXJndW1lbnRzLDEpKX1mdW5jdGlvbiB0aHJvdHRsZShmdW5jLHdhaXQsb3B0aW9ucyl7dmFyIGxlYWRpbmc9ITAsdHJhaWxpbmc9ITA7aWYoIWlzRnVuY3Rpb24oZnVuYykpdGhyb3cgbmV3IFR5cGVFcnJvcjtyZXR1cm4gb3B0aW9ucz09PSExP2xlYWRpbmc9ITE6aXNPYmplY3Qob3B0aW9ucykmJihsZWFkaW5nPSJsZWFkaW5nImluIG9wdGlvbnM/b3B0aW9ucy5sZWFkaW5nOmxlYWRpbmcsdHJhaWxpbmc9InRyYWlsaW5nImluIG9wdGlvbnM/b3B0aW9ucy50cmFpbGluZzp0cmFpbGluZyksZGVib3VuY2VPcHRpb25zLmxlYWRpbmc9bGVhZGluZyxkZWJvdW5jZU9wdGlvbnMubWF4V2FpdD13YWl0LGRlYm91bmNlT3B0aW9ucy50cmFpbGluZz10cmFpbGluZyxkZWJvdW5jZShmdW5jLHdhaXQsZGVib3VuY2VPcHRpb25zKX1mdW5jdGlvbiB3cmFwKHZhbHVlLHdyYXBwZXIpe3JldHVybiBjcmVhdGVXcmFwcGVyKHdyYXBwZXIsMTYsW3ZhbHVlXSl9ZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB2YWx1ZX19ZnVuY3Rpb24gY3JlYXRlQ2FsbGJhY2soZnVuYyx0aGlzQXJnLGFyZ0NvdW50KXt2YXIgdHlwZT10eXBlb2YgZnVuYztpZihudWxsPT1mdW5jfHwiZnVuY3Rpb24iPT10eXBlKXJldHVybiBiYXNlQ3JlYXRlQ2FsbGJhY2soZnVuYyx0aGlzQXJnLGFyZ0NvdW50KTtpZigib2JqZWN0IiE9dHlwZSlyZXR1cm4gcHJvcGVydHkoZnVuYyk7dmFyIHByb3BzPWtleXMoZnVuYyksa2V5PXByb3BzWzBdLGE9ZnVuY1trZXldO3JldHVybiAxIT1wcm9wcy5sZW5ndGh8fGEhPT1hfHxpc09iamVjdChhKT9mdW5jdGlvbihvYmplY3Qpe2Zvcih2YXIgbGVuZ3RoPXByb3BzLmxlbmd0aCxyZXN1bHQ9ITE7bGVuZ3RoLS0mJihyZXN1bHQ9YmFzZUlzRXF1YWwob2JqZWN0W3Byb3BzW2xlbmd0aF1dLGZ1bmNbcHJvcHNbbGVuZ3RoXV0sbnVsbCwhMCkpOyk7cmV0dXJuIHJlc3VsdH06ZnVuY3Rpb24ob2JqZWN0KXt2YXIgYj1vYmplY3Rba2V5XTtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT0xL2IpfX1mdW5jdGlvbiBlc2NhcGUoc3RyaW5nKXtyZXR1cm4gbnVsbD09c3RyaW5nPyIiOlN0cmluZyhzdHJpbmcpLnJlcGxhY2UocmVVbmVzY2FwZWRIdG1sLGVzY2FwZUh0bWxDaGFyKX1mdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSl7cmV0dXJuIHZhbHVlfWZ1bmN0aW9uIG1peGluKG9iamVjdCxzb3VyY2Usb3B0aW9ucyl7dmFyIGNoYWluPSEwLG1ldGhvZE5hbWVzPXNvdXJjZSYmZnVuY3Rpb25zKHNvdXJjZSk7c291cmNlJiYob3B0aW9uc3x8bWV0aG9kTmFtZXMubGVuZ3RoKXx8KG51bGw9PW9wdGlvbnMmJihvcHRpb25zPXNvdXJjZSksY3Rvcj1sb2Rhc2hXcmFwcGVyLHNvdXJjZT1vYmplY3Qsb2JqZWN0PWxvZGFzaCxtZXRob2ROYW1lcz1mdW5jdGlvbnMoc291cmNlKSksb3B0aW9ucz09PSExP2NoYWluPSExOmlzT2JqZWN0KG9wdGlvbnMpJiYiY2hhaW4iaW4gb3B0aW9ucyYmKGNoYWluPW9wdGlvbnMuY2hhaW4pO3ZhciBjdG9yPW9iamVjdCxpc0Z1bmM9aXNGdW5jdGlvbihjdG9yKTtmb3JFYWNoKG1ldGhvZE5hbWVzLGZ1bmN0aW9uKG1ldGhvZE5hbWUpe3ZhciBmdW5jPW9iamVjdFttZXRob2ROYW1lXT1zb3VyY2VbbWV0aG9kTmFtZV07aXNGdW5jJiYoY3Rvci5wcm90b3R5cGVbbWV0aG9kTmFtZV09ZnVuY3Rpb24oKXt2YXIgY2hhaW5BbGw9dGhpcy5fX2NoYWluX18sdmFsdWU9dGhpcy5fX3dyYXBwZWRfXyxhcmdzPVt2YWx1ZV07cHVzaC5hcHBseShhcmdzLGFyZ3VtZW50cyk7dmFyIHJlc3VsdD1mdW5jLmFwcGx5KG9iamVjdCxhcmdzKTtpZihjaGFpbnx8Y2hhaW5BbGwpe2lmKHZhbHVlPT09cmVzdWx0JiZpc09iamVjdChyZXN1bHQpKXJldHVybiB0aGlzO3Jlc3VsdD1uZXcgY3RvcihyZXN1bHQpLHJlc3VsdC5fX2NoYWluX189Y2hhaW5BbGx9cmV0dXJuIHJlc3VsdH0pfSl9ZnVuY3Rpb24gbm9Db25mbGljdCgpe3JldHVybiBjb250ZXh0Ll89b2xkRGFzaCx0aGlzfWZ1bmN0aW9uIG5vb3AoKXt9ZnVuY3Rpb24gcHJvcGVydHkoa2V5KXtyZXR1cm4gZnVuY3Rpb24ob2JqZWN0KXtyZXR1cm4gb2JqZWN0W2tleV19fWZ1bmN0aW9uIHJhbmRvbShtaW4sbWF4LGZsb2F0aW5nKXt2YXIgbm9NaW49bnVsbD09bWluLG5vTWF4PW51bGw9PW1heDtpZihudWxsPT1mbG9hdGluZyYmKCJib29sZWFuIj09dHlwZW9mIG1pbiYmbm9NYXg/KGZsb2F0aW5nPW1pbixtaW49MSk6bm9NYXh8fCJib29sZWFuIiE9dHlwZW9mIG1heHx8KGZsb2F0aW5nPW1heCxub01heD0hMCkpLG5vTWluJiZub01heCYmKG1heD0xKSxtaW49K21pbnx8MCxub01heD8obWF4PW1pbixtaW49MCk6bWF4PSttYXh8fDAsZmxvYXRpbmd8fG1pbiUxfHxtYXglMSl7dmFyIHJhbmQ9bmF0aXZlUmFuZG9tKCk7cmV0dXJuIG5hdGl2ZU1pbihtaW4rcmFuZCoobWF4LW1pbitwYXJzZUZsb2F0KCIxZS0iKygocmFuZCsiIikubGVuZ3RoLTEpKSksbWF4KX1yZXR1cm4gYmFzZVJhbmRvbShtaW4sbWF4KX1mdW5jdGlvbiByZXN1bHQob2JqZWN0LGtleSl7aWYob2JqZWN0KXt2YXIgdmFsdWU9b2JqZWN0W2tleV07cmV0dXJuIGlzRnVuY3Rpb24odmFsdWUpP29iamVjdFtrZXldKCk6dmFsdWV9fWZ1bmN0aW9uIHRlbXBsYXRlKHRleHQsZGF0YSxvcHRpb25zKXt2YXIgc2V0dGluZ3M9bG9kYXNoLnRlbXBsYXRlU2V0dGluZ3M7dGV4dD1TdHJpbmcodGV4dHx8IiIpLG9wdGlvbnM9ZGVmYXVsdHMoe30sb3B0aW9ucyxzZXR0aW5ncyk7dmFyIGlzRXZhbHVhdGluZyxpbXBvcnRzPWRlZmF1bHRzKHt9LG9wdGlvbnMuaW1wb3J0cyxzZXR0aW5ncy5pbXBvcnRzKSxpbXBvcnRzS2V5cz1rZXlzKGltcG9ydHMpLGltcG9ydHNWYWx1ZXM9dmFsdWVzKGltcG9ydHMpLGluZGV4PTAsaW50ZXJwb2xhdGU9b3B0aW9ucy5pbnRlcnBvbGF0ZXx8cmVOb01hdGNoLHNvdXJjZT0iX19wICs9ICciLHJlRGVsaW1pdGVycz1SZWdFeHAoKG9wdGlvbnMuZXNjYXBlfHxyZU5vTWF0Y2gpLnNvdXJjZSsifCIraW50ZXJwb2xhdGUuc291cmNlKyJ8IisoaW50ZXJwb2xhdGU9PT1yZUludGVycG9sYXRlP3JlRXNUZW1wbGF0ZTpyZU5vTWF0Y2gpLnNvdXJjZSsifCIrKG9wdGlvbnMuZXZhbHVhdGV8fHJlTm9NYXRjaCkuc291cmNlKyJ8JCIsImciKTt0ZXh0LnJlcGxhY2UocmVEZWxpbWl0ZXJzLGZ1bmN0aW9uKG1hdGNoLGVzY2FwZVZhbHVlLGludGVycG9sYXRlVmFsdWUsZXNUZW1wbGF0ZVZhbHVlLGV2YWx1YXRlVmFsdWUsb2Zmc2V0KXtyZXR1cm4gaW50ZXJwb2xhdGVWYWx1ZXx8KGludGVycG9sYXRlVmFsdWU9ZXNUZW1wbGF0ZVZhbHVlKSxzb3VyY2UrPXRleHQuc2xpY2UoaW5kZXgsb2Zmc2V0KS5yZXBsYWNlKHJlVW5lc2NhcGVkU3RyaW5nLGVzY2FwZVN0cmluZ0NoYXIpLGVzY2FwZVZhbHVlJiYoc291cmNlKz0iJyArXG5fX2UoIitlc2NhcGVWYWx1ZSsiKSArXG4nIiksZXZhbHVhdGVWYWx1ZSYmKGlzRXZhbHVhdGluZz0hMCxzb3VyY2UrPSInO1xuIitldmFsdWF0ZVZhbHVlKyI7XG5fX3AgKz0gJyIpLGludGVycG9sYXRlVmFsdWUmJihzb3VyY2UrPSInICtcbigoX190ID0gKCIraW50ZXJwb2xhdGVWYWx1ZSsiKSkgPT0gbnVsbCA/ICcnIDogX190KSArXG4nIiksaW5kZXg9b2Zmc2V0K21hdGNoLmxlbmd0aCxtYXRjaH0pLHNvdXJjZSs9Iic7XG4iO3ZhciB2YXJpYWJsZT1vcHRpb25zLnZhcmlhYmxlLGhhc1ZhcmlhYmxlPXZhcmlhYmxlO2hhc1ZhcmlhYmxlfHwodmFyaWFibGU9Im9iaiIsc291cmNlPSJ3aXRoICgiK3ZhcmlhYmxlKyIpIHtcbiIrc291cmNlKyJcbn1cbiIpLHNvdXJjZT0oaXNFdmFsdWF0aW5nP3NvdXJjZS5yZXBsYWNlKHJlRW1wdHlTdHJpbmdMZWFkaW5nLCIiKTpzb3VyY2UpLnJlcGxhY2UocmVFbXB0eVN0cmluZ01pZGRsZSwiJDEiKS5yZXBsYWNlKHJlRW1wdHlTdHJpbmdUcmFpbGluZywiJDE7Iiksc291cmNlPSJmdW5jdGlvbigiK3ZhcmlhYmxlKyIpIHtcbiIrKGhhc1ZhcmlhYmxlPyIiOnZhcmlhYmxlKyIgfHwgKCIrdmFyaWFibGUrIiA9IHt9KTtcbiIpKyJ2YXIgX190LCBfX3AgPSAnJywgX19lID0gXy5lc2NhcGUiKyhpc0V2YWx1YXRpbmc/IiwgX19qID0gQXJyYXkucHJvdG90eXBlLmpvaW47XG5mdW5jdGlvbiBwcmludCgpIHsgX19wICs9IF9fai5jYWxsKGFyZ3VtZW50cywgJycpIH1cbiI6IjtcbiIpK3NvdXJjZSsicmV0dXJuIF9fcFxufSI7dmFyIHNvdXJjZVVSTD0iXG4vKlxuLy8jIHNvdXJjZVVSTD0iKyhvcHRpb25zLnNvdXJjZVVSTHx8Ii9sb2Rhc2gvdGVtcGxhdGUvc291cmNlWyIrdGVtcGxhdGVDb3VudGVyKysgKyJdIikrIlxuKi8iO3RyeXt2YXIgcmVzdWx0PUZ1bmN0aW9uKGltcG9ydHNLZXlzLCJyZXR1cm4gIitzb3VyY2Urc291cmNlVVJMKS5hcHBseSh1bmRlZmluZWQsaW1wb3J0c1ZhbHVlcyl9Y2F0Y2goZSl7dGhyb3cgZS5zb3VyY2U9c291cmNlLGV9cmV0dXJuIGRhdGE/cmVzdWx0KGRhdGEpOihyZXN1bHQuc291cmNlPXNvdXJjZSxyZXN1bHQpfWZ1bmN0aW9uIHRpbWVzKG4sY2FsbGJhY2ssdGhpc0FyZyl7bj0obj0rbik+LTE/bjowO3ZhciBpbmRleD0tMSxyZXN1bHQ9QXJyYXkobik7Zm9yKGNhbGxiYWNrPWJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjayx0aGlzQXJnLDEpOysraW5kZXg8bjspcmVzdWx0W2luZGV4XT1jYWxsYmFjayhpbmRleCk7cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiB1bmVzY2FwZShzdHJpbmcpe3JldHVybiBudWxsPT1zdHJpbmc/IiI6U3RyaW5nKHN0cmluZykucmVwbGFjZShyZUVzY2FwZWRIdG1sLHVuZXNjYXBlSHRtbENoYXIpfWZ1bmN0aW9uIHVuaXF1ZUlkKHByZWZpeCl7dmFyIGlkPSsraWRDb3VudGVyO3JldHVybiBTdHJpbmcobnVsbD09cHJlZml4PyIiOnByZWZpeCkraWR9ZnVuY3Rpb24gY2hhaW4odmFsdWUpe3JldHVybiB2YWx1ZT1uZXcgbG9kYXNoV3JhcHBlcih2YWx1ZSksdmFsdWUuX19jaGFpbl9fPSEwLHZhbHVlfWZ1bmN0aW9uIHRhcCh2YWx1ZSxpbnRlcmNlcHRvcil7cmV0dXJuIGludGVyY2VwdG9yKHZhbHVlKSx2YWx1ZX1mdW5jdGlvbiB3cmFwcGVyQ2hhaW4oKXtyZXR1cm4gdGhpcy5fX2NoYWluX189ITAsdGhpc31mdW5jdGlvbiB3cmFwcGVyVG9TdHJpbmcoKXtyZXR1cm4gU3RyaW5nKHRoaXMuX193cmFwcGVkX18pfWZ1bmN0aW9uIHdyYXBwZXJWYWx1ZU9mKCl7cmV0dXJuIHRoaXMuX193cmFwcGVkX199Y29udGV4dD1jb250ZXh0P18uZGVmYXVsdHMocm9vdC5PYmplY3QoKSxjb250ZXh0LF8ucGljayhyb290LGNvbnRleHRQcm9wcykpOnJvb3Q7dmFyIEFycmF5PWNvbnRleHQuQXJyYXksQm9vbGVhbj1jb250ZXh0LkJvb2xlYW4sRGF0ZT1jb250ZXh0LkRhdGUsRXJyb3I9Y29udGV4dC5FcnJvcixGdW5jdGlvbj1jb250ZXh0LkZ1bmN0aW9uLE1hdGg9Y29udGV4dC5NYXRoLE51bWJlcj1jb250ZXh0Lk51bWJlcixPYmplY3Q9Y29udGV4dC5PYmplY3QsUmVnRXhwPWNvbnRleHQuUmVnRXhwLFN0cmluZz1jb250ZXh0LlN0cmluZyxUeXBlRXJyb3I9Y29udGV4dC5UeXBlRXJyb3IsYXJyYXlSZWY9W10sZXJyb3JQcm90bz1FcnJvci5wcm90b3R5cGUsb2JqZWN0UHJvdG89T2JqZWN0LnByb3RvdHlwZSxzdHJpbmdQcm90bz1TdHJpbmcucHJvdG90eXBlLG9sZERhc2g9Y29udGV4dC5fLHRvU3RyaW5nPW9iamVjdFByb3RvLnRvU3RyaW5nLHJlTmF0aXZlPVJlZ0V4cCgiXiIrU3RyaW5nKHRvU3RyaW5nKS5yZXBsYWNlKC9bLiorP14ke30oKXxbXF1cXF0vZywiXFwkJiIpLnJlcGxhY2UoL3RvU3RyaW5nfCBmb3IgW15cXV0rL2csIi4qPyIpKyIkIiksY2VpbD1NYXRoLmNlaWwsY2xlYXJUaW1lb3V0PWNvbnRleHQuY2xlYXJUaW1lb3V0LGZsb29yPU1hdGguZmxvb3IsZm5Ub1N0cmluZz1GdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcsZ2V0UHJvdG90eXBlT2Y9aXNOYXRpdmUoZ2V0UHJvdG90eXBlT2Y9T2JqZWN0LmdldFByb3RvdHlwZU9mKSYmZ2V0UHJvdG90eXBlT2YsaGFzT3duUHJvcGVydHk9b2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHkscHVzaD1hcnJheVJlZi5wdXNoLHByb3BlcnR5SXNFbnVtZXJhYmxlPW9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlLHNldFRpbWVvdXQ9Y29udGV4dC5zZXRUaW1lb3V0LHNwbGljZT1hcnJheVJlZi5zcGxpY2UsdW5zaGlmdD1hcnJheVJlZi51bnNoaWZ0LGRlZmluZVByb3BlcnR5PWZ1bmN0aW9uKCl7dHJ5e3ZhciBvPXt9LGZ1bmM9aXNOYXRpdmUoZnVuYz1PYmplY3QuZGVmaW5lUHJvcGVydHkpJiZmdW5jLHJlc3VsdD1mdW5jKG8sbyxvKSYmZnVuY31jYXRjaChlKXt9cmV0dXJuIHJlc3VsdH0oKSxuYXRpdmVDcmVhdGU9aXNOYXRpdmUobmF0aXZlQ3JlYXRlPU9iamVjdC5jcmVhdGUpJiZuYXRpdmVDcmVhdGUsbmF0aXZlSXNBcnJheT1pc05hdGl2ZShuYXRpdmVJc0FycmF5PUFycmF5LmlzQXJyYXkpJiZuYXRpdmVJc0FycmF5LG5hdGl2ZUlzRmluaXRlPWNvbnRleHQuaXNGaW5pdGUsbmF0aXZlSXNOYU49Y29udGV4dC5pc05hTixuYXRpdmVLZXlzPWlzTmF0aXZlKG5hdGl2ZUtleXM9T2JqZWN0LmtleXMpJiZuYXRpdmVLZXlzLG5hdGl2ZU1heD1NYXRoLm1heCxuYXRpdmVNaW49TWF0aC5taW4sbmF0aXZlUGFyc2VJbnQ9Y29udGV4dC5wYXJzZUludCxuYXRpdmVSYW5kb209TWF0aC5yYW5kb20sY3RvckJ5Q2xhc3M9e307Y3RvckJ5Q2xhc3NbYXJyYXlDbGFzc109QXJyYXksY3RvckJ5Q2xhc3NbYm9vbENsYXNzXT1Cb29sZWFuLGN0b3JCeUNsYXNzW2RhdGVDbGFzc109RGF0ZSxjdG9yQnlDbGFzc1tmdW5jQ2xhc3NdPUZ1bmN0aW9uLGN0b3JCeUNsYXNzW29iamVjdENsYXNzXT1PYmplY3QsY3RvckJ5Q2xhc3NbbnVtYmVyQ2xhc3NdPU51bWJlcixjdG9yQnlDbGFzc1tyZWdleHBDbGFzc109UmVnRXhwLGN0b3JCeUNsYXNzW3N0cmluZ0NsYXNzXT1TdHJpbmc7dmFyIG5vbkVudW1Qcm9wcz17fTtub25FbnVtUHJvcHNbYXJyYXlDbGFzc109bm9uRW51bVByb3BzW2RhdGVDbGFzc109bm9uRW51bVByb3BzW251bWJlckNsYXNzXT17Y29uc3RydWN0b3I6ITAsdG9Mb2NhbGVTdHJpbmc6ITAsdG9TdHJpbmc6ITAsdmFsdWVPZjohMH0sbm9uRW51bVByb3BzW2Jvb2xDbGFzc109bm9uRW51bVByb3BzW3N0cmluZ0NsYXNzXT17Y29uc3RydWN0b3I6ITAsdG9TdHJpbmc6ITAsdmFsdWVPZjohMH0sbm9uRW51bVByb3BzW2Vycm9yQ2xhc3NdPW5vbkVudW1Qcm9wc1tmdW5jQ2xhc3NdPW5vbkVudW1Qcm9wc1tyZWdleHBDbGFzc109e2NvbnN0cnVjdG9yOiEwLHRvU3RyaW5nOiEwfSxub25FbnVtUHJvcHNbb2JqZWN0Q2xhc3NdPXtjb25zdHJ1Y3RvcjohMH0sZnVuY3Rpb24oKXtmb3IodmFyIGxlbmd0aD1zaGFkb3dlZFByb3BzLmxlbmd0aDtsZW5ndGgtLTspe3ZhciBrZXk9c2hhZG93ZWRQcm9wc1tsZW5ndGhdO2Zvcih2YXIgY2xhc3NOYW1lIGluIG5vbkVudW1Qcm9wcyloYXNPd25Qcm9wZXJ0eS5jYWxsKG5vbkVudW1Qcm9wcyxjbGFzc05hbWUpJiYhaGFzT3duUHJvcGVydHkuY2FsbChub25FbnVtUHJvcHNbY2xhc3NOYW1lXSxrZXkpJiYobm9uRW51bVByb3BzW2NsYXNzTmFtZV1ba2V5XT0hMSl9fSgpLGxvZGFzaFdyYXBwZXIucHJvdG90eXBlPWxvZGFzaC5wcm90b3R5cGU7dmFyIHN1cHBvcnQ9bG9kYXNoLnN1cHBvcnQ9e307IWZ1bmN0aW9uKCl7dmFyIGN0b3I9ZnVuY3Rpb24oKXt0aGlzLng9MX0sb2JqZWN0PXswOjEsbGVuZ3RoOjF9LHByb3BzPVtdO2N0b3IucHJvdG90eXBlPXt2YWx1ZU9mOjEseToxfTtmb3IodmFyIGtleSBpbiBuZXcgY3Rvcilwcm9wcy5wdXNoKGtleSk7Zm9yKGtleSBpbiBhcmd1bWVudHMpO3N1cHBvcnQuYXJnc0NsYXNzPXRvU3RyaW5nLmNhbGwoYXJndW1lbnRzKT09YXJnc0NsYXNzLHN1cHBvcnQuYXJnc09iamVjdD1hcmd1bWVudHMuY29uc3RydWN0b3I9PU9iamVjdCYmIShhcmd1bWVudHMgaW5zdGFuY2VvZiBBcnJheSksc3VwcG9ydC5lbnVtRXJyb3JQcm9wcz1wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGVycm9yUHJvdG8sIm1lc3NhZ2UiKXx8cHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChlcnJvclByb3RvLCJuYW1lIiksc3VwcG9ydC5lbnVtUHJvdG90eXBlcz1wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKGN0b3IsInByb3RvdHlwZSIpLHN1cHBvcnQuZnVuY0RlY29tcD0haXNOYXRpdmUoY29udGV4dC5XaW5SVEVycm9yKSYmcmVUaGlzLnRlc3QocnVuSW5Db250ZXh0KSxzdXBwb3J0LmZ1bmNOYW1lcz0ic3RyaW5nIj09dHlwZW9mIEZ1bmN0aW9uLm5hbWUsc3VwcG9ydC5ub25FbnVtQXJncz0wIT1rZXksc3VwcG9ydC5ub25FbnVtU2hhZG93cz0hL3ZhbHVlT2YvLnRlc3QocHJvcHMpLHN1cHBvcnQub3duTGFzdD0ieCIhPXByb3BzWzBdLHN1cHBvcnQuc3BsaWNlT2JqZWN0cz0oYXJyYXlSZWYuc3BsaWNlLmNhbGwob2JqZWN0LDAsMSksIW9iamVjdFswXSksc3VwcG9ydC51bmluZGV4ZWRDaGFycz0ieCJbMF0rT2JqZWN0KCJ4IilbMF0hPSJ4eCI7dHJ5e3N1cHBvcnQubm9kZUNsYXNzPSEodG9TdHJpbmcuY2FsbChkb2N1bWVudCk9PW9iamVjdENsYXNzJiYhKHt0b1N0cmluZzowfSsiIikpfWNhdGNoKGUpe3N1cHBvcnQubm9kZUNsYXNzPSEwfX0oMSksbG9kYXNoLnRlbXBsYXRlU2V0dGluZ3M9e2VzY2FwZTovPCUtKFtcc1xTXSs/KSU+L2csZXZhbHVhdGU6LzwlKFtcc1xTXSs/KSU+L2csaW50ZXJwb2xhdGU6cmVJbnRlcnBvbGF0ZSx2YXJpYWJsZToiIixpbXBvcnRzOntfOmxvZGFzaH19O3ZhciBpdGVyYXRvclRlbXBsYXRlPWZ1bmN0aW9uKG9iail7dmFyIF9fcD0idmFyIGluZGV4LCBpdGVyYWJsZSA9ICIrb2JqLmZpcnN0QXJnKyIsIHJlc3VsdCA9ICIrb2JqLmluaXQrIjtcbmlmICghaXRlcmFibGUpIHJldHVybiByZXN1bHQ7XG4iK29iai50b3ArIjsiO29iai5hcnJheT8oX19wKz0iXG52YXIgbGVuZ3RoID0gaXRlcmFibGUubGVuZ3RoOyBpbmRleCA9IC0xO1xuaWYgKCIrb2JqLmFycmF5KyIpIHsgICIsc3VwcG9ydC51bmluZGV4ZWRDaGFycyYmKF9fcCs9IlxuICBpZiAoaXNTdHJpbmcoaXRlcmFibGUpKSB7XG4gICAgaXRlcmFibGUgPSBpdGVyYWJsZS5zcGxpdCgnJylcbiAgfSAgIiksX19wKz0iXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgIitvYmoubG9vcCsiO1xuICB9XG59XG5lbHNlIHsgICIpOnN1cHBvcnQubm9uRW51bUFyZ3MmJihfX3ArPSJcbiAgdmFyIGxlbmd0aCA9IGl0ZXJhYmxlLmxlbmd0aDsgaW5kZXggPSAtMTtcbiAgaWYgKGxlbmd0aCAmJiBpc0FyZ3VtZW50cyhpdGVyYWJsZSkpIHtcbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgaW5kZXggKz0gJyc7XG4gICAgICAiK29iai5sb29wKyI7XG4gICAgfVxuICB9IGVsc2UgeyAgIiksc3VwcG9ydC5lbnVtUHJvdG90eXBlcyYmKF9fcCs9IlxuICB2YXIgc2tpcFByb3RvID0gdHlwZW9mIGl0ZXJhYmxlID09ICdmdW5jdGlvbic7XG4gICIpLHN1cHBvcnQuZW51bUVycm9yUHJvcHMmJihfX3ArPSJcbiAgdmFyIHNraXBFcnJvclByb3BzID0gaXRlcmFibGUgPT09IGVycm9yUHJvdG8gfHwgaXRlcmFibGUgaW5zdGFuY2VvZiBFcnJvcjtcbiAgIik7dmFyIGNvbmRpdGlvbnM9W107aWYoc3VwcG9ydC5lbnVtUHJvdG90eXBlcyYmY29uZGl0aW9ucy5wdXNoKCchKHNraXBQcm90byAmJiBpbmRleCA9PSAicHJvdG90eXBlIiknKSxzdXBwb3J0LmVudW1FcnJvclByb3BzJiZjb25kaXRpb25zLnB1c2goJyEoc2tpcEVycm9yUHJvcHMgJiYgKGluZGV4ID09ICJtZXNzYWdlIiB8fCBpbmRleCA9PSAibmFtZSIpKScpLG9iai51c2VIYXMmJm9iai5rZXlzKV9fcCs9IlxuICB2YXIgb3duSW5kZXggPSAtMSxcbiAgICAgIG93blByb3BzID0gb2JqZWN0VHlwZXNbdHlwZW9mIGl0ZXJhYmxlXSAmJiBrZXlzKGl0ZXJhYmxlKSxcbiAgICAgIGxlbmd0aCA9IG93blByb3BzID8gb3duUHJvcHMubGVuZ3RoIDogMDtcblxuICB3aGlsZSAoKytvd25JbmRleCA8IGxlbmd0aCkge1xuICAgIGluZGV4ID0gb3duUHJvcHNbb3duSW5kZXhdO1xuIixjb25kaXRpb25zLmxlbmd0aCYmKF9fcCs9IiAgICBpZiAoIitjb25kaXRpb25zLmpvaW4oIiAmJiAiKSsiKSB7XG4gICIpLF9fcCs9b2JqLmxvb3ArIjsgICAgIixjb25kaXRpb25zLmxlbmd0aCYmKF9fcCs9IlxuICAgIH0iKSxfX3ArPSJcbiAgfSAgIjtlbHNlIGlmKF9fcCs9IlxuICBmb3IgKGluZGV4IGluIGl0ZXJhYmxlKSB7XG4iLG9iai51c2VIYXMmJmNvbmRpdGlvbnMucHVzaCgiaGFzT3duUHJvcGVydHkuY2FsbChpdGVyYWJsZSwgaW5kZXgpIiksY29uZGl0aW9ucy5sZW5ndGgmJihfX3ArPSIgICAgaWYgKCIrY29uZGl0aW9ucy5qb2luKCIgJiYgIikrIikge1xuICAiKSxfX3ArPW9iai5sb29wKyI7ICAgICIsY29uZGl0aW9ucy5sZW5ndGgmJihfX3ArPSJcbiAgICB9IiksX19wKz0iXG4gIH0gICAgIixzdXBwb3J0Lm5vbkVudW1TaGFkb3dzKXtmb3IoX19wKz0iXG5cbiAgaWYgKGl0ZXJhYmxlICE9PSBvYmplY3RQcm90bykge1xuICAgIHZhciBjdG9yID0gaXRlcmFibGUuY29uc3RydWN0b3IsXG4gICAgICAgIGlzUHJvdG8gPSBpdGVyYWJsZSA9PT0gKGN0b3IgJiYgY3Rvci5wcm90b3R5cGUpLFxuICAgICAgICBjbGFzc05hbWUgPSBpdGVyYWJsZSA9PT0gc3RyaW5nUHJvdG8gPyBzdHJpbmdDbGFzcyA6IGl0ZXJhYmxlID09PSBlcnJvclByb3RvID8gZXJyb3JDbGFzcyA6IHRvU3RyaW5nLmNhbGwoaXRlcmFibGUpLFxuICAgICAgICBub25FbnVtID0gbm9uRW51bVByb3BzW2NsYXNzTmFtZV07XG4gICAgICAiLGs9MDs3Pms7aysrKV9fcCs9IlxuICAgIGluZGV4ID0gJyIrb2JqLnNoYWRvd2VkUHJvcHNba10rIic7XG4gICAgaWYgKCghKGlzUHJvdG8gJiYgbm9uRW51bVtpbmRleF0pICYmIGhhc093blByb3BlcnR5LmNhbGwoaXRlcmFibGUsIGluZGV4KSkiLG9iai51c2VIYXN8fChfX3ArPSIgfHwgKCFub25FbnVtW2luZGV4XSAmJiBpdGVyYWJsZVtpbmRleF0gIT09IG9iamVjdFByb3RvW2luZGV4XSkiKSxfX3ArPSIpIHtcbiAgICAgICIrb2JqLmxvb3ArIjtcbiAgICB9ICAgICAgIjtfX3ArPSJcbiAgfSAgICAifXJldHVybihvYmouYXJyYXl8fHN1cHBvcnQubm9uRW51bUFyZ3MpJiYoX19wKz0iXG59IiksX19wKz1vYmouYm90dG9tKyI7XG5yZXR1cm4gcmVzdWx0In07bmF0aXZlQ3JlYXRlfHwoYmFzZUNyZWF0ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIE9iamVjdCgpe31yZXR1cm4gZnVuY3Rpb24ocHJvdG90eXBlKXtpZihpc09iamVjdChwcm90b3R5cGUpKXtPYmplY3QucHJvdG90eXBlPXByb3RvdHlwZTt2YXIgcmVzdWx0PW5ldyBPYmplY3Q7T2JqZWN0LnByb3RvdHlwZT1udWxsfXJldHVybiByZXN1bHR8fGNvbnRleHQuT2JqZWN0KCl9fSgpKTt2YXIgc2V0QmluZERhdGE9ZGVmaW5lUHJvcGVydHk/ZnVuY3Rpb24oZnVuYyx2YWx1ZSl7ZGVzY3JpcHRvci52YWx1ZT12YWx1ZSxkZWZpbmVQcm9wZXJ0eShmdW5jLCJfX2JpbmREYXRhX18iLGRlc2NyaXB0b3IpfTpub29wO3N1cHBvcnQuYXJnc0NsYXNzfHwoaXNBcmd1bWVudHM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZSYmIm9iamVjdCI9PXR5cGVvZiB2YWx1ZSYmIm51bWJlciI9PXR5cGVvZiB2YWx1ZS5sZW5ndGgmJmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsImNhbGxlZSIpJiYhcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh2YWx1ZSwiY2FsbGVlIil8fCExfSk7dmFyIGlzQXJyYXk9bmF0aXZlSXNBcnJheXx8ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZSYmIm9iamVjdCI9PXR5cGVvZiB2YWx1ZSYmIm51bWJlciI9PXR5cGVvZiB2YWx1ZS5sZW5ndGgmJnRvU3RyaW5nLmNhbGwodmFsdWUpPT1hcnJheUNsYXNzfHwhMX0sc2hpbUtleXM9Y3JlYXRlSXRlcmF0b3Ioe2FyZ3M6Im9iamVjdCIsaW5pdDoiW10iLHRvcDoiaWYgKCEob2JqZWN0VHlwZXNbdHlwZW9mIG9iamVjdF0pKSByZXR1cm4gcmVzdWx0Iixsb29wOiJyZXN1bHQucHVzaChpbmRleCkifSksa2V5cz1uYXRpdmVLZXlzP2Z1bmN0aW9uKG9iamVjdCl7cmV0dXJuIGlzT2JqZWN0KG9iamVjdCk/c3VwcG9ydC5lbnVtUHJvdG90eXBlcyYmImZ1bmN0aW9uIj09dHlwZW9mIG9iamVjdHx8c3VwcG9ydC5ub25FbnVtQXJncyYmb2JqZWN0Lmxlbmd0aCYmaXNBcmd1bWVudHMob2JqZWN0KT9zaGltS2V5cyhvYmplY3QpOm5hdGl2ZUtleXMob2JqZWN0KTpbXX06c2hpbUtleXMsZWFjaEl0ZXJhdG9yT3B0aW9ucz17YXJnczoiY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmciLHRvcDoiY2FsbGJhY2sgPSBjYWxsYmFjayAmJiB0eXBlb2YgdGhpc0FyZyA9PSAndW5kZWZpbmVkJyA/IGNhbGxiYWNrIDogYmFzZUNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKSIsYXJyYXk6InR5cGVvZiBsZW5ndGggPT0gJ251bWJlciciLGtleXM6a2V5cyxsb29wOiJpZiAoY2FsbGJhY2soaXRlcmFibGVbaW5kZXhdLCBpbmRleCwgY29sbGVjdGlvbikgPT09IGZhbHNlKSByZXR1cm4gcmVzdWx0In0sZGVmYXVsdHNJdGVyYXRvck9wdGlvbnM9e2FyZ3M6Im9iamVjdCwgc291cmNlLCBndWFyZCIsdG9wOiJ2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICBhcmdzSW5kZXggPSAwLFxuICAgIGFyZ3NMZW5ndGggPSB0eXBlb2YgZ3VhcmQgPT0gJ251bWJlcicgPyAyIDogYXJncy5sZW5ndGg7XG53aGlsZSAoKythcmdzSW5kZXggPCBhcmdzTGVuZ3RoKSB7XG4gIGl0ZXJhYmxlID0gYXJnc1thcmdzSW5kZXhdO1xuICBpZiAoaXRlcmFibGUgJiYgb2JqZWN0VHlwZXNbdHlwZW9mIGl0ZXJhYmxlXSkgeyIsa2V5czprZXlzLGxvb3A6ImlmICh0eXBlb2YgcmVzdWx0W2luZGV4XSA9PSAndW5kZWZpbmVkJykgcmVzdWx0W2luZGV4XSA9IGl0ZXJhYmxlW2luZGV4XSIsYm90dG9tOiIgIH1cbn0ifSxmb3JPd25JdGVyYXRvck9wdGlvbnM9e3RvcDoiaWYgKCFvYmplY3RUeXBlc1t0eXBlb2YgaXRlcmFibGVdKSByZXR1cm4gcmVzdWx0O1xuIitlYWNoSXRlcmF0b3JPcHRpb25zLnRvcCxhcnJheTohMX0saHRtbEVzY2FwZXM9eyImIjoiJmFtcDsiLCI8IjoiJmx0OyIsIj4iOiImZ3Q7IiwnIic6IiZxdW90OyIsIiciOiImIzM5OyJ9LGh0bWxVbmVzY2FwZXM9aW52ZXJ0KGh0bWxFc2NhcGVzKSxyZUVzY2FwZWRIdG1sPVJlZ0V4cCgiKCIra2V5cyhodG1sVW5lc2NhcGVzKS5qb2luKCJ8IikrIikiLCJnIikscmVVbmVzY2FwZWRIdG1sPVJlZ0V4cCgiWyIra2V5cyhodG1sRXNjYXBlcykuam9pbigiIikrIl0iLCJnIiksYmFzZUVhY2g9Y3JlYXRlSXRlcmF0b3IoZWFjaEl0ZXJhdG9yT3B0aW9ucyksYXNzaWduPWNyZWF0ZUl0ZXJhdG9yKGRlZmF1bHRzSXRlcmF0b3JPcHRpb25zLHt0b3A6ZGVmYXVsdHNJdGVyYXRvck9wdGlvbnMudG9wLnJlcGxhY2UoIjsiLCI7XG5pZiAoYXJnc0xlbmd0aCA+IDMgJiYgdHlwZW9mIGFyZ3NbYXJnc0xlbmd0aCAtIDJdID09ICdmdW5jdGlvbicpIHtcbiAgdmFyIGNhbGxiYWNrID0gYmFzZUNyZWF0ZUNhbGxiYWNrKGFyZ3NbLS1hcmdzTGVuZ3RoIC0gMV0sIGFyZ3NbYXJnc0xlbmd0aC0tXSwgMik7XG59IGVsc2UgaWYgKGFyZ3NMZW5ndGggPiAyICYmIHR5cGVvZiBhcmdzW2FyZ3NMZW5ndGggLSAxXSA9PSAnZnVuY3Rpb24nKSB7XG4gIGNhbGxiYWNrID0gYXJnc1stLWFyZ3NMZW5ndGhdO1xufSIpLGxvb3A6InJlc3VsdFtpbmRleF0gPSBjYWxsYmFjayA/IGNhbGxiYWNrKHJlc3VsdFtpbmRleF0sIGl0ZXJhYmxlW2luZGV4XSkgOiBpdGVyYWJsZVtpbmRleF0ifSksZGVmYXVsdHM9Y3JlYXRlSXRlcmF0b3IoZGVmYXVsdHNJdGVyYXRvck9wdGlvbnMpLGZvckluPWNyZWF0ZUl0ZXJhdG9yKGVhY2hJdGVyYXRvck9wdGlvbnMsZm9yT3duSXRlcmF0b3JPcHRpb25zLHt1c2VIYXM6ITF9KSxmb3JPd249Y3JlYXRlSXRlcmF0b3IoZWFjaEl0ZXJhdG9yT3B0aW9ucyxmb3JPd25JdGVyYXRvck9wdGlvbnMpO2lzRnVuY3Rpb24oL3gvKSYmKGlzRnVuY3Rpb249ZnVuY3Rpb24odmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZSYmdG9TdHJpbmcuY2FsbCh2YWx1ZSk9PWZ1bmNDbGFzc30pO3ZhciBpc1BsYWluT2JqZWN0PWdldFByb3RvdHlwZU9mP2Z1bmN0aW9uKHZhbHVlKXtpZighdmFsdWV8fHRvU3RyaW5nLmNhbGwodmFsdWUpIT1vYmplY3RDbGFzc3x8IXN1cHBvcnQuYXJnc0NsYXNzJiZpc0FyZ3VtZW50cyh2YWx1ZSkpcmV0dXJuITE7dmFyIHZhbHVlT2Y9dmFsdWUudmFsdWVPZixvYmpQcm90bz1pc05hdGl2ZSh2YWx1ZU9mKSYmKG9ialByb3RvPWdldFByb3RvdHlwZU9mKHZhbHVlT2YpKSYmZ2V0UHJvdG90eXBlT2Yob2JqUHJvdG8pO3JldHVybiBvYmpQcm90bz92YWx1ZT09b2JqUHJvdG98fGdldFByb3RvdHlwZU9mKHZhbHVlKT09b2JqUHJvdG86c2hpbUlzUGxhaW5PYmplY3QodmFsdWUpfTpzaGltSXNQbGFpbk9iamVjdCxjb3VudEJ5PWNyZWF0ZUFnZ3JlZ2F0b3IoZnVuY3Rpb24ocmVzdWx0LHZhbHVlLGtleSl7aGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQsa2V5KT9yZXN1bHRba2V5XSsrOnJlc3VsdFtrZXldPTF9KSxncm91cEJ5PWNyZWF0ZUFnZ3JlZ2F0b3IoZnVuY3Rpb24ocmVzdWx0LHZhbHVlLGtleSl7KGhhc093blByb3BlcnR5LmNhbGwocmVzdWx0LGtleSk/cmVzdWx0W2tleV06cmVzdWx0W2tleV09W10pLnB1c2godmFsdWUpfSksaW5kZXhCeT1jcmVhdGVBZ2dyZWdhdG9yKGZ1bmN0aW9uKHJlc3VsdCx2YWx1ZSxrZXkpe3Jlc3VsdFtrZXldPXZhbHVlfSkscGx1Y2s9bWFwLHdoZXJlPWZpbHRlcixub3c9aXNOYXRpdmUobm93PURhdGUubm93KSYmbm93fHxmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxwYXJzZUludD04PT1uYXRpdmVQYXJzZUludCh3aGl0ZXNwYWNlKyIwOCIpP25hdGl2ZVBhcnNlSW50OmZ1bmN0aW9uKHZhbHVlLHJhZGl4KXtyZXR1cm4gbmF0aXZlUGFyc2VJbnQoaXNTdHJpbmcodmFsdWUpP3ZhbHVlLnJlcGxhY2UocmVMZWFkaW5nU3BhY2VzQW5kWmVyb3MsIiIpOnZhbHVlLHJhZGl4fHwwKX07cmV0dXJuIGxvZGFzaC5hZnRlcj1hZnRlcixsb2Rhc2guYXNzaWduPWFzc2lnbixsb2Rhc2guYXQ9YXQsbG9kYXNoLmJpbmQ9YmluZCxsb2Rhc2guYmluZEFsbD1iaW5kQWxsLGxvZGFzaC5iaW5kS2V5PWJpbmRLZXksbG9kYXNoLmNoYWluPWNoYWluLGxvZGFzaC5jb21wYWN0PWNvbXBhY3QsbG9kYXNoLmNvbXBvc2U9Y29tcG9zZSxsb2Rhc2guY29uc3RhbnQ9Y29uc3RhbnQsbG9kYXNoLmNvdW50Qnk9Y291bnRCeSxsb2Rhc2guY3JlYXRlPWNyZWF0ZSxsb2Rhc2guY3JlYXRlQ2FsbGJhY2s9Y3JlYXRlQ2FsbGJhY2ssbG9kYXNoLmN1cnJ5PWN1cnJ5LGxvZGFzaC5kZWJvdW5jZT1kZWJvdW5jZSxsb2Rhc2guZGVmYXVsdHM9ZGVmYXVsdHMsbG9kYXNoLmRlZmVyPWRlZmVyLGxvZGFzaC5kZWxheT1kZWxheSxsb2Rhc2guZGlmZmVyZW5jZT1kaWZmZXJlbmNlLGxvZGFzaC5maWx0ZXI9ZmlsdGVyLGxvZGFzaC5mbGF0dGVuPWZsYXR0ZW4sbG9kYXNoLmZvckVhY2g9Zm9yRWFjaCxsb2Rhc2guZm9yRWFjaFJpZ2h0PWZvckVhY2hSaWdodCxsb2Rhc2guZm9ySW49Zm9ySW4sbG9kYXNoLmZvckluUmlnaHQ9Zm9ySW5SaWdodCxsb2Rhc2guZm9yT3duPWZvck93bixsb2Rhc2guZm9yT3duUmlnaHQ9Zm9yT3duUmlnaHQsbG9kYXNoLmZ1bmN0aW9ucz1mdW5jdGlvbnMsbG9kYXNoLmdyb3VwQnk9Z3JvdXBCeSxsb2Rhc2guaW5kZXhCeT1pbmRleEJ5LGxvZGFzaC5pbml0aWFsPWluaXRpYWwsbG9kYXNoLmludGVyc2VjdGlvbj1pbnRlcnNlY3Rpb24sbG9kYXNoLmludmVydD1pbnZlcnQsbG9kYXNoLmludm9rZT1pbnZva2UsbG9kYXNoLmtleXM9a2V5cyxsb2Rhc2gubWFwPW1hcCxsb2Rhc2gubWFwVmFsdWVzPW1hcFZhbHVlcyxsb2Rhc2gubWF4PW1heCxsb2Rhc2gubWVtb2l6ZT1tZW1vaXplLGxvZGFzaC5tZXJnZT1tZXJnZSxsb2Rhc2gubWluPW1pbixsb2Rhc2gub21pdD1vbWl0LGxvZGFzaC5vbmNlPW9uY2UsbG9kYXNoLnBhaXJzPXBhaXJzLGxvZGFzaC5wYXJ0aWFsPXBhcnRpYWwsbG9kYXNoLnBhcnRpYWxSaWdodD1wYXJ0aWFsUmlnaHQsbG9kYXNoLnBpY2s9cGljayxsb2Rhc2gucGx1Y2s9cGx1Y2ssbG9kYXNoLnByb3BlcnR5PXByb3BlcnR5LGxvZGFzaC5wdWxsPXB1bGwsbG9kYXNoLnJhbmdlPXJhbmdlLGxvZGFzaC5yZWplY3Q9cmVqZWN0LGxvZGFzaC5yZW1vdmU9cmVtb3ZlLGxvZGFzaC5yZXN0PXJlc3QsbG9kYXNoLnNodWZmbGU9c2h1ZmZsZSxsb2Rhc2guc29ydEJ5PXNvcnRCeSxsb2Rhc2gudGFwPXRhcCxsb2Rhc2gudGhyb3R0bGU9dGhyb3R0bGUsbG9kYXNoLnRpbWVzPXRpbWVzLGxvZGFzaC50b0FycmF5PXRvQXJyYXksbG9kYXNoLnRyYW5zZm9ybT10cmFuc2Zvcm0sbG9kYXNoLnVuaW9uPXVuaW9uLGxvZGFzaC51bmlxPXVuaXEsbG9kYXNoLnZhbHVlcz12YWx1ZXMsbG9kYXNoLndoZXJlPXdoZXJlLGxvZGFzaC53aXRob3V0PXdpdGhvdXQsbG9kYXNoLndyYXA9d3JhcCxsb2Rhc2gueG9yPXhvcixsb2Rhc2guemlwPXppcCxsb2Rhc2guemlwT2JqZWN0PXppcE9iamVjdCxsb2Rhc2guY29sbGVjdD1tYXAsbG9kYXNoLmRyb3A9cmVzdCxsb2Rhc2guZWFjaD1mb3JFYWNoLGxvZGFzaC5lYWNoUmlnaHQ9Zm9yRWFjaFJpZ2h0LGxvZGFzaC5leHRlbmQ9YXNzaWduLGxvZGFzaC5tZXRob2RzPWZ1bmN0aW9ucyxsb2Rhc2gub2JqZWN0PXppcE9iamVjdCxsb2Rhc2guc2VsZWN0PWZpbHRlcixsb2Rhc2gudGFpbD1yZXN0LGxvZGFzaC51bmlxdWU9dW5pcSxsb2Rhc2gudW56aXA9emlwLG1peGluKGxvZGFzaCksbG9kYXNoLmNsb25lPWNsb25lLGxvZGFzaC5jbG9uZURlZXA9Y2xvbmVEZWVwLGxvZGFzaC5jb250YWlucz1jb250YWlucyxsb2Rhc2guZXNjYXBlPWVzY2FwZSxsb2Rhc2guZXZlcnk9ZXZlcnksbG9kYXNoLmZpbmQ9ZmluZCxsb2Rhc2guZmluZEluZGV4PWZpbmRJbmRleCxsb2Rhc2guZmluZEtleT1maW5kS2V5LGxvZGFzaC5maW5kTGFzdD1maW5kTGFzdCxsb2Rhc2guZmluZExhc3RJbmRleD1maW5kTGFzdEluZGV4LGxvZGFzaC5maW5kTGFzdEtleT1maW5kTGFzdEtleSxsb2Rhc2guaGFzPWhhcyxsb2Rhc2guaWRlbnRpdHk9aWRlbnRpdHksbG9kYXNoLmluZGV4T2Y9aW5kZXhPZixsb2Rhc2guaXNBcmd1bWVudHM9aXNBcmd1bWVudHMsbG9kYXNoLmlzQXJyYXk9aXNBcnJheSxsb2Rhc2guaXNCb29sZWFuPWlzQm9vbGVhbixsb2Rhc2guaXNEYXRlPWlzRGF0ZSxsb2Rhc2guaXNFbGVtZW50PWlzRWxlbWVudCxsb2Rhc2guaXNFbXB0eT1pc0VtcHR5LGxvZGFzaC5pc0VxdWFsPWlzRXF1YWwsbG9kYXNoLmlzRmluaXRlPWlzRmluaXRlLGxvZGFzaC5pc0Z1bmN0aW9uPWlzRnVuY3Rpb24sbG9kYXNoLmlzTmFOPWlzTmFOLGxvZGFzaC5pc051bGw9aXNOdWxsLGxvZGFzaC5pc051bWJlcj1pc051bWJlcixsb2Rhc2guaXNPYmplY3Q9aXNPYmplY3QsbG9kYXNoLmlzUGxhaW5PYmplY3Q9aXNQbGFpbk9iamVjdCxsb2Rhc2guaXNSZWdFeHA9aXNSZWdFeHAsbG9kYXNoLmlzU3RyaW5nPWlzU3RyaW5nLGxvZGFzaC5pc1VuZGVmaW5lZD1pc1VuZGVmaW5lZCxsb2Rhc2gubGFzdEluZGV4T2Y9bGFzdEluZGV4T2YsbG9kYXNoLm1peGluPW1peGluLGxvZGFzaC5ub0NvbmZsaWN0PW5vQ29uZmxpY3QsbG9kYXNoLm5vb3A9bm9vcCxsb2Rhc2gubm93PW5vdyxsb2Rhc2gucGFyc2VJbnQ9cGFyc2VJbnQsbG9kYXNoLnJhbmRvbT1yYW5kb20sbG9kYXNoLnJlZHVjZT1yZWR1Y2UsbG9kYXNoLnJlZHVjZVJpZ2h0PXJlZHVjZVJpZ2h0LGxvZGFzaC5yZXN1bHQ9cmVzdWx0LGxvZGFzaC5ydW5JbkNvbnRleHQ9cnVuSW5Db250ZXh0LGxvZGFzaC5zaXplPXNpemUsbG9kYXNoLnNvbWU9c29tZSxsb2Rhc2guc29ydGVkSW5kZXg9c29ydGVkSW5kZXgsbG9kYXNoLnRlbXBsYXRlPXRlbXBsYXRlLGxvZGFzaC51bmVzY2FwZT11bmVzY2FwZSxsb2Rhc2gudW5pcXVlSWQ9dW5pcXVlSWQsbG9kYXNoLmFsbD1ldmVyeSxsb2Rhc2guYW55PXNvbWUsbG9kYXNoLmRldGVjdD1maW5kLGxvZGFzaC5maW5kV2hlcmU9ZmluZCxsb2Rhc2guZm9sZGw9cmVkdWNlLGxvZGFzaC5mb2xkcj1yZWR1Y2VSaWdodCxsb2Rhc2guaW5jbHVkZT1jb250YWlucyxsb2Rhc2guaW5qZWN0PXJlZHVjZSxtaXhpbihmdW5jdGlvbigpe3ZhciBzb3VyY2U9e307cmV0dXJuIGZvck93bihsb2Rhc2gsZnVuY3Rpb24oZnVuYyxtZXRob2ROYW1lKXtsb2Rhc2gucHJvdG90eXBlW21ldGhvZE5hbWVdfHwoc291cmNlW21ldGhvZE5hbWVdPWZ1bmMpfSksc291cmNlfSgpLCExKSxsb2Rhc2guZmlyc3Q9Zmlyc3QsbG9kYXNoLmxhc3Q9bGFzdCxsb2Rhc2guc2FtcGxlPXNhbXBsZSxsb2Rhc2gudGFrZT1maXJzdCxsb2Rhc2guaGVhZD1maXJzdCxmb3JPd24obG9kYXNoLGZ1bmN0aW9uKGZ1bmMsbWV0aG9kTmFtZSl7dmFyIGNhbGxiYWNrYWJsZT0ic2FtcGxlIiE9PW1ldGhvZE5hbWU7bG9kYXNoLnByb3RvdHlwZVttZXRob2ROYW1lXXx8KGxvZGFzaC5wcm90b3R5cGVbbWV0aG9kTmFtZV09ZnVuY3Rpb24obixndWFyZCl7dmFyIGNoYWluQWxsPXRoaXMuX19jaGFpbl9fLHJlc3VsdD1mdW5jKHRoaXMuX193cmFwcGVkX18sbixndWFyZCk7cmV0dXJuIGNoYWluQWxsfHxudWxsIT1uJiYoIWd1YXJkfHxjYWxsYmFja2FibGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBuKT9uZXcgbG9kYXNoV3JhcHBlcihyZXN1bHQsY2hhaW5BbGwpOnJlc3VsdH0pfSksbG9kYXNoLlZFUlNJT049IjIuNC4xIixsb2Rhc2gucHJvdG90eXBlLmNoYWluPXdyYXBwZXJDaGFpbixsb2Rhc2gucHJvdG90eXBlLnRvU3RyaW5nPXdyYXBwZXJUb1N0cmluZyxsb2Rhc2gucHJvdG90eXBlLnZhbHVlPXdyYXBwZXJWYWx1ZU9mLGxvZGFzaC5wcm90b3R5cGUudmFsdWVPZj13cmFwcGVyVmFsdWVPZixiYXNlRWFjaChbImpvaW4iLCJwb3AiLCJzaGlmdCJdLGZ1bmN0aW9uKG1ldGhvZE5hbWUpe3ZhciBmdW5jPWFycmF5UmVmW21ldGhvZE5hbWVdO2xvZGFzaC5wcm90b3R5cGVbbWV0aG9kTmFtZV09ZnVuY3Rpb24oKXt2YXIgY2hhaW5BbGw9dGhpcy5fX2NoYWluX18scmVzdWx0PWZ1bmMuYXBwbHkodGhpcy5fX3dyYXBwZWRfXyxhcmd1bWVudHMpO3JldHVybiBjaGFpbkFsbD9uZXcgbG9kYXNoV3JhcHBlcihyZXN1bHQsY2hhaW5BbGwpOnJlc3VsdH19KSxiYXNlRWFjaChbInB1c2giLCJyZXZlcnNlIiwic29ydCIsInVuc2hpZnQiXSxmdW5jdGlvbihtZXRob2ROYW1lKXt2YXIgZnVuYz1hcnJheVJlZlttZXRob2ROYW1lXTtsb2Rhc2gucHJvdG90eXBlW21ldGhvZE5hbWVdPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmMuYXBwbHkodGhpcy5fX3dyYXBwZWRfXyxhcmd1bWVudHMpLHRoaXN9fSksYmFzZUVhY2goWyJjb25jYXQiLCJzbGljZSIsInNwbGljZSJdLGZ1bmN0aW9uKG1ldGhvZE5hbWUpe3ZhciBmdW5jPWFycmF5UmVmW21ldGhvZE5hbWVdO2xvZGFzaC5wcm90b3R5cGVbbWV0aG9kTmFtZV09ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGxvZGFzaFdyYXBwZXIoZnVuYy5hcHBseSh0aGlzLl9fd3JhcHBlZF9fLGFyZ3VtZW50cyksdGhpcy5fX2NoYWluX18pfX0pLHN1cHBvcnQuc3BsaWNlT2JqZWN0c3x8YmFzZUVhY2goWyJwb3AiLCJzaGlmdCIsInNwbGljZSJdLGZ1bmN0aW9uKG1ldGhvZE5hbWUpe3ZhciBmdW5jPWFycmF5UmVmW21ldGhvZE5hbWVdLGlzU3BsaWNlPSJzcGxpY2UiPT1tZXRob2ROYW1lO2xvZGFzaC5wcm90b3R5cGVbbWV0aG9kTmFtZV09ZnVuY3Rpb24oKXt2YXIgY2hhaW5BbGw9dGhpcy5fX2NoYWluX18sdmFsdWU9dGhpcy5fX3dyYXBwZWRfXyxyZXN1bHQ9ZnVuYy5hcHBseSh2YWx1ZSxhcmd1bWVudHMpO3JldHVybiAwPT09dmFsdWUubGVuZ3RoJiZkZWxldGUgdmFsdWVbMF0sY2hhaW5BbGx8fGlzU3BsaWNlP25ldyBsb2Rhc2hXcmFwcGVyKHJlc3VsdCxjaGFpbkFsbCk6cmVzdWx0fX0pLGxvZGFzaH12YXIgdW5kZWZpbmVkLGFycmF5UG9vbD1bXSxvYmplY3RQb29sPVtdLGlkQ291bnRlcj0wLGluZGljYXRvck9iamVjdD17fSxrZXlQcmVmaXg9K25ldyBEYXRlKyIiLGxhcmdlQXJyYXlTaXplPTc1LG1heFBvb2xTaXplPTQwLHdoaXRlc3BhY2U9IiAJC1xmwqDvu79cblxyXHUyMDI4XHUyMDI54ZqA4aCO4oCA4oCB4oCC4oCD4oCE4oCF4oCG4oCH4oCI4oCJ4oCK4oCv4oGf44CAIixyZUVtcHR5U3RyaW5nTGVhZGluZz0vXGJfX3AgXCs9ICcnOy9nLHJlRW1wdHlTdHJpbmdNaWRkbGU9L1xiKF9fcCBcKz0pICcnIFwrL2cscmVFbXB0eVN0cmluZ1RyYWlsaW5nPS8oX19lXCguKj9cKXxcYl9fdFwpKSBcK1xuJyc7L2cscmVFc1RlbXBsYXRlPS9cJFx7KFteXFx9XSooPzpcXC5bXlxcfV0qKSopXH0vZyxyZUZsYWdzPS9cdyokLyxyZUZ1bmNOYW1lPS9eXHMqZnVuY3Rpb25bIFxuXHJcdF0rXHcvLHJlSW50ZXJwb2xhdGU9LzwlPShbXHNcU10rPyklPi9nLHJlTGVhZGluZ1NwYWNlc0FuZFplcm9zPVJlZ0V4cCgiXlsiK3doaXRlc3BhY2UrIl0qMCsoPz0uJCkiKSxyZU5vTWF0Y2g9LygkXikvLHJlVGhpcz0vXGJ0aGlzXGIvLHJlVW5lc2NhcGVkU3RyaW5nPS9bJ1xuXHJcdFx1MjAyOFx1MjAyOVxcXS9nLGNvbnRleHRQcm9wcz1bIkFycmF5IiwiQm9vbGVhbiIsIkRhdGUiLCJFcnJvciIsIkZ1bmN0aW9uIiwiTWF0aCIsIk51bWJlciIsIk9iamVjdCIsIlJlZ0V4cCIsIlN0cmluZyIsIl8iLCJhdHRhY2hFdmVudCIsImNsZWFyVGltZW91dCIsImlzRmluaXRlIiwiaXNOYU4iLCJwYXJzZUludCIsInNldFRpbWVvdXQiXSxzaGFkb3dlZFByb3BzPVsiY29uc3RydWN0b3IiLCJoYXNPd25Qcm9wZXJ0eSIsImlzUHJvdG90eXBlT2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvTG9jYWxlU3RyaW5nIiwidG9TdHJpbmciLCJ2YWx1ZU9mIl0sdGVtcGxhdGVDb3VudGVyPTAsYXJnc0NsYXNzPSJbb2JqZWN0IEFyZ3VtZW50c10iLGFycmF5Q2xhc3M9IltvYmplY3QgQXJyYXldIixib29sQ2xhc3M9IltvYmplY3QgQm9vbGVhbl0iLGRhdGVDbGFzcz0iW29iamVjdCBEYXRlXSIsZXJyb3JDbGFzcz0iW29iamVjdCBFcnJvcl0iLGZ1bmNDbGFzcz0iW29iamVjdCBGdW5jdGlvbl0iLG51bWJlckNsYXNzPSJbb2JqZWN0IE51bWJlcl0iLG9iamVjdENsYXNzPSJbb2JqZWN0IE9iamVjdF0iLHJlZ2V4cENsYXNzPSJbb2JqZWN0IFJlZ0V4cF0iLHN0cmluZ0NsYXNzPSJbb2JqZWN0IFN0cmluZ10iLGNsb25lYWJsZUNsYXNzZXM9e307Y2xvbmVhYmxlQ2xhc3Nlc1tmdW5jQ2xhc3NdPSExLGNsb25lYWJsZUNsYXNzZXNbYXJnc0NsYXNzXT1jbG9uZWFibGVDbGFzc2VzW2FycmF5Q2xhc3NdPWNsb25lYWJsZUNsYXNzZXNbYm9vbENsYXNzXT1jbG9uZWFibGVDbGFzc2VzW2RhdGVDbGFzc109Y2xvbmVhYmxlQ2xhc3Nlc1tudW1iZXJDbGFzc109Y2xvbmVhYmxlQ2xhc3Nlc1tvYmplY3RDbGFzc109Y2xvbmVhYmxlQ2xhc3Nlc1tyZWdleHBDbGFzc109Y2xvbmVhYmxlQ2xhc3Nlc1tzdHJpbmdDbGFzc109ITA7dmFyIGRlYm91bmNlT3B0aW9ucz17bGVhZGluZzohMSxtYXhXYWl0OjAsdHJhaWxpbmc6ITF9LGRlc2NyaXB0b3I9e2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiExLHZhbHVlOm51bGwsd3JpdGFibGU6ITF9LGl0ZXJhdG9yRGF0YT17YXJnczoiIixhcnJheTpudWxsLGJvdHRvbToiIixmaXJzdEFyZzoiIixpbml0OiIiLGtleXM6bnVsbCxsb29wOiIiLHNoYWRvd2VkUHJvcHM6bnVsbCxzdXBwb3J0Om51bGwsdG9wOiIiLHVzZUhhczohMX0sb2JqZWN0VHlwZXM9eyJib29sZWFuIjohMSwiZnVuY3Rpb24iOiEwLG9iamVjdDohMCxudW1iZXI6ITEsc3RyaW5nOiExLHVuZGVmaW5lZDohMX0sc3RyaW5nRXNjYXBlcz17IlxcIjoiXFwiLCInIjoiJyIsIlxuIjoibiIsIlxyIjoiciIsIgkiOiJ0IiwiXHUyMDI4IjoidTIwMjgiLCJcdTIwMjkiOiJ1MjAyOSJ9LHJvb3Q9b2JqZWN0VHlwZXNbdHlwZW9mIHdpbmRvd10mJndpbmRvd3x8dGhpcyxmcmVlRXhwb3J0cz1vYmplY3RUeXBlc1t0eXBlb2YgZXhwb3J0c10mJmV4cG9ydHMmJiFleHBvcnRzLm5vZGVUeXBlJiZleHBvcnRzLGZyZWVNb2R1bGU9b2JqZWN0VHlwZXNbdHlwZW9mIG1vZHVsZV0mJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlLG1vZHVsZUV4cG9ydHM9ZnJlZU1vZHVsZSYmZnJlZU1vZHVsZS5leHBvcnRzPT09ZnJlZUV4cG9ydHMmJmZyZWVFeHBvcnRzLGZyZWVHbG9iYWw9b2JqZWN0VHlwZXNbdHlwZW9mIGdsb2JhbF0mJmdsb2JhbDshZnJlZUdsb2JhbHx8ZnJlZUdsb2JhbC5nbG9iYWwhPT1mcmVlR2xvYmFsJiZmcmVlR2xvYmFsLndpbmRvdyE9PWZyZWVHbG9iYWx8fChyb290PWZyZWVHbG9iYWwpO3ZhciBfPXJ1bkluQ29udGV4dCgpOyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJiJvYmplY3QiPT10eXBlb2YgZGVmaW5lLmFtZCYmZGVmaW5lLmFtZD8ocm9vdC5fPV8sZGVmaW5lKGZ1bmN0aW9uKCl7cmV0dXJuIF99KSk6ZnJlZUV4cG9ydHMmJmZyZWVNb2R1bGU/bW9kdWxlRXhwb3J0cz8oZnJlZU1vZHVsZS5leHBvcnRzPV8pLl89XzpmcmVlRXhwb3J0cy5fPV86cm9vdC5fPV99LmNhbGwodGhpcyksZnVuY3Rpb24oJCl7JC5jb2xvcj17fSwkLmNvbG9yLm1ha2U9ZnVuY3Rpb24ocixnLGIsYSl7dmFyIG89e307cmV0dXJuIG8ucj1yfHwwLG8uZz1nfHwwLG8uYj1ifHwwLG8uYT1udWxsIT1hP2E6MSxvLmFkZD1mdW5jdGlvbihjLGQpe2Zvcih2YXIgaT0wO2k8Yy5sZW5ndGg7KytpKW9bYy5jaGFyQXQoaSldKz1kO3JldHVybiBvLm5vcm1hbGl6ZSgpfSxvLnNjYWxlPWZ1bmN0aW9uKGMsZil7Zm9yKHZhciBpPTA7aTxjLmxlbmd0aDsrK2kpb1tjLmNoYXJBdChpKV0qPWY7cmV0dXJuIG8ubm9ybWFsaXplKCl9LG8udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gby5hPj0xPyJyZ2IoIitbby5yLG8uZyxvLmJdLmpvaW4oIiwiKSsiKSI6InJnYmEoIitbby5yLG8uZyxvLmIsby5hXS5qb2luKCIsIikrIikifSxvLm5vcm1hbGl6ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGNsYW1wKG1pbix2YWx1ZSxtYXgpe3JldHVybiBtaW4+dmFsdWU/bWluOnZhbHVlPm1heD9tYXg6dmFsdWV9cmV0dXJuIG8ucj1jbGFtcCgwLHBhcnNlSW50KG8uciksMjU1KSxvLmc9Y2xhbXAoMCxwYXJzZUludChvLmcpLDI1NSksby5iPWNsYW1wKDAscGFyc2VJbnQoby5iKSwyNTUpLG8uYT1jbGFtcCgwLG8uYSwxKSxvfSxvLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuICQuY29sb3IubWFrZShvLnIsby5iLG8uZyxvLmEpfSxvLm5vcm1hbGl6ZSgpfSwkLmNvbG9yLmV4dHJhY3Q9ZnVuY3Rpb24oZWxlbSxjc3Mpe3ZhciBjO2Rve2lmKGM9ZWxlbS5jc3MoY3NzKS50b0xvd2VyQ2FzZSgpLCIiIT1jJiYidHJhbnNwYXJlbnQiIT1jKWJyZWFrO2VsZW09ZWxlbS5wYXJlbnQoKX13aGlsZShlbGVtLmxlbmd0aCYmISQubm9kZU5hbWUoZWxlbS5nZXQoMCksImJvZHkiKSk7cmV0dXJuInJnYmEoMCwgMCwgMCwgMCkiPT1jJiYoYz0idHJhbnNwYXJlbnQiKSwkLmNvbG9yLnBhcnNlKGMpfSwkLmNvbG9yLnBhcnNlPWZ1bmN0aW9uKHN0cil7dmFyIHJlcyxtPSQuY29sb3IubWFrZTtpZihyZXM9L3JnYlwoXHMqKFswLTldezEsM30pXHMqLFxzKihbMC05XXsxLDN9KVxzKixccyooWzAtOV17MSwzfSlccypcKS8uZXhlYyhzdHIpKXJldHVybiBtKHBhcnNlSW50KHJlc1sxXSwxMCkscGFyc2VJbnQocmVzWzJdLDEwKSxwYXJzZUludChyZXNbM10sMTApKTtpZihyZXM9L3JnYmFcKFxzKihbMC05XXsxLDN9KVxzKixccyooWzAtOV17MSwzfSlccyosXHMqKFswLTldezEsM30pXHMqLFxzKihbMC05XSsoPzpcLlswLTldKyk/KVxzKlwpLy5leGVjKHN0cikpcmV0dXJuIG0ocGFyc2VJbnQocmVzWzFdLDEwKSxwYXJzZUludChyZXNbMl0sMTApLHBhcnNlSW50KHJlc1szXSwxMCkscGFyc2VGbG9hdChyZXNbNF0pKTtpZihyZXM9L3JnYlwoXHMqKFswLTldKyg/OlwuWzAtOV0rKT8pXCVccyosXHMqKFswLTldKyg/OlwuWzAtOV0rKT8pXCVccyosXHMqKFswLTldKyg/OlwuWzAtOV0rKT8pXCVccypcKS8uZXhlYyhzdHIpKXJldHVybiBtKDIuNTUqcGFyc2VGbG9hdChyZXNbMV0pLDIuNTUqcGFyc2VGbG9hdChyZXNbMl0pLDIuNTUqcGFyc2VGbG9hdChyZXNbM10pKTtpZihyZXM9L3JnYmFcKFxzKihbMC05XSsoPzpcLlswLTldKyk/KVwlXHMqLFxzKihbMC05XSsoPzpcLlswLTldKyk/KVwlXHMqLFxzKihbMC05XSsoPzpcLlswLTldKyk/KVwlXHMqLFxzKihbMC05XSsoPzpcLlswLTldKyk/KVxzKlwpLy5leGVjKHN0cikpcmV0dXJuIG0oMi41NSpwYXJzZUZsb2F0KHJlc1sxXSksMi41NSpwYXJzZUZsb2F0KHJlc1syXSksMi41NSpwYXJzZUZsb2F0KHJlc1szXSkscGFyc2VGbG9hdChyZXNbNF0pKTtpZihyZXM9LyMoW2EtZkEtRjAtOV17Mn0pKFthLWZBLUYwLTldezJ9KShbYS1mQS1GMC05XXsyfSkvLmV4ZWMoc3RyKSlyZXR1cm4gbShwYXJzZUludChyZXNbMV0sMTYpLHBhcnNlSW50KHJlc1syXSwxNikscGFyc2VJbnQocmVzWzNdLDE2KSk7aWYocmVzPS8jKFthLWZBLUYwLTldKShbYS1mQS1GMC05XSkoW2EtZkEtRjAtOV0pLy5leGVjKHN0cikpcmV0dXJuIG0ocGFyc2VJbnQocmVzWzFdK3Jlc1sxXSwxNikscGFyc2VJbnQocmVzWzJdK3Jlc1syXSwxNikscGFyc2VJbnQocmVzWzNdK3Jlc1szXSwxNikpO3ZhciBuYW1lPSQudHJpbShzdHIpLnRvTG93ZXJDYXNlKCk7cmV0dXJuInRyYW5zcGFyZW50Ij09bmFtZT9tKDI1NSwyNTUsMjU1LDApOihyZXM9bG9va3VwQ29sb3JzW25hbWVdfHxbMCwwLDBdLG0ocmVzWzBdLHJlc1sxXSxyZXNbMl0pKX07dmFyIGxvb2t1cENvbG9ycz17YXF1YTpbMCwyNTUsMjU1XSxhenVyZTpbMjQwLDI1NSwyNTVdLGJlaWdlOlsyNDUsMjQ1LDIyMF0sYmxhY2s6WzAsMCwwXSxibHVlOlswLDAsMjU1XSxicm93bjpbMTY1LDQyLDQyXSxjeWFuOlswLDI1NSwyNTVdLGRhcmtibHVlOlswLDAsMTM5XSxkYXJrY3lhbjpbMCwxMzksMTM5XSxkYXJrZ3JleTpbMTY5LDE2OSwxNjldLGRhcmtncmVlbjpbMCwxMDAsMF0sZGFya2toYWtpOlsxODksMTgzLDEwN10sZGFya21hZ2VudGE6WzEzOSwwLDEzOV0sZGFya29saXZlZ3JlZW46Wzg1LDEwNyw0N10sZGFya29yYW5nZTpbMjU1LDE0MCwwXSxkYXJrb3JjaGlkOlsxNTMsNTAsMjA0XSxkYXJrcmVkOlsxMzksMCwwXSxkYXJrc2FsbW9uOlsyMzMsMTUwLDEyMl0sZGFya3Zpb2xldDpbMTQ4LDAsMjExXSxmdWNoc2lhOlsyNTUsMCwyNTVdLGdvbGQ6WzI1NSwyMTUsMF0sZ3JlZW46WzAsMTI4LDBdLGluZGlnbzpbNzUsMCwxMzBdLGtoYWtpOlsyNDAsMjMwLDE0MF0sbGlnaHRibHVlOlsxNzMsMjE2LDIzMF0sbGlnaHRjeWFuOlsyMjQsMjU1LDI1NV0sbGlnaHRncmVlbjpbMTQ0LDIzOCwxNDRdLGxpZ2h0Z3JleTpbMjExLDIxMSwyMTFdLGxpZ2h0cGluazpbMjU1LDE4MiwxOTNdLGxpZ2h0eWVsbG93OlsyNTUsMjU1LDIyNF0sbGltZTpbMCwyNTUsMF0sbWFnZW50YTpbMjU1LDAsMjU1XSxtYXJvb246WzEyOCwwLDBdLG5hdnk6WzAsMCwxMjhdLG9saXZlOlsxMjgsMTI4LDBdLG9yYW5nZTpbMjU1LDE2NSwwXSxwaW5rOlsyNTUsMTkyLDIwM10scHVycGxlOlsxMjgsMCwxMjhdLHZpb2xldDpbMTI4LDAsMTI4XSxyZWQ6WzI1NSwwLDBdLHNpbHZlcjpbMTkyLDE5MiwxOTJdLHdoaXRlOlsyNTUsMjU1LDI1NV0seWVsbG93OlsyNTUsMjU1LDBdfX0oalF1ZXJ5KSxmdW5jdGlvbigkKXtmdW5jdGlvbiBDYW52YXMoY2xzLGNvbnRhaW5lcil7dmFyIGVsZW1lbnQ9Y29udGFpbmVyLmNoaWxkcmVuKCIuIitjbHMpWzBdO2lmKG51bGw9PWVsZW1lbnQmJihlbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGVsZW1lbnQuY2xhc3NOYW1lPWNscywkKGVsZW1lbnQpLmNzcyh7ZGlyZWN0aW9uOiJsdHIiLHBvc2l0aW9uOiJhYnNvbHV0ZSIsbGVmdDowLHRvcDowfSkuYXBwZW5kVG8oY29udGFpbmVyKSwhZWxlbWVudC5nZXRDb250ZXh0KSl7aWYoIXdpbmRvdy5HX3ZtbENhbnZhc01hbmFnZXIpdGhyb3cgbmV3IEVycm9yKCJDYW52YXMgaXMgbm90IGF2YWlsYWJsZS4gSWYgeW91J3JlIHVzaW5nIElFIHdpdGggYSBmYWxsLWJhY2sgc3VjaCBhcyBFeGNhbnZhcywgdGhlbiB0aGVyZSdzIGVpdGhlciBhIG1pc3Rha2UgaW4geW91ciBjb25kaXRpb25hbCBpbmNsdWRlLCBvciB0aGUgcGFnZSBoYXMgbm8gRE9DVFlQRSBhbmQgaXMgcmVuZGVyaW5nIGluIFF1aXJrcyBNb2RlLiIpO2VsZW1lbnQ9d2luZG93Lkdfdm1sQ2FudmFzTWFuYWdlci5pbml0RWxlbWVudChlbGVtZW50KX10aGlzLmVsZW1lbnQ9ZWxlbWVudDt2YXIgY29udGV4dD10aGlzLmNvbnRleHQ9ZWxlbWVudC5nZXRDb250ZXh0KCIyZCIpLGRldmljZVBpeGVsUmF0aW89d2luZG93LmRldmljZVBpeGVsUmF0aW98fDEsYmFja2luZ1N0b3JlUmF0aW89Y29udGV4dC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvfHxjb250ZXh0Lm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW98fGNvbnRleHQubXNCYWNraW5nU3RvcmVQaXhlbFJhdGlvfHxjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvfHxjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW98fDE7dGhpcy5waXhlbFJhdGlvPWRldmljZVBpeGVsUmF0aW8vYmFja2luZ1N0b3JlUmF0aW8sdGhpcy5yZXNpemUoY29udGFpbmVyLndpZHRoKCksY29udGFpbmVyLmhlaWdodCgpKSx0aGlzLnRleHRDb250YWluZXI9bnVsbCx0aGlzLnRleHQ9e30sdGhpcy5fdGV4dENhY2hlPXt9fWZ1bmN0aW9uIFBsb3QocGxhY2Vob2xkZXIsZGF0YV8sb3B0aW9uc18scGx1Z2lucyl7ZnVuY3Rpb24gZXhlY3V0ZUhvb2tzKGhvb2ssYXJncyl7YXJncz1bcGxvdF0uY29uY2F0KGFyZ3MpO2Zvcih2YXIgaT0wO2k8aG9vay5sZW5ndGg7KytpKWhvb2tbaV0uYXBwbHkodGhpcyxhcmdzKX1mdW5jdGlvbiBpbml0UGx1Z2lucygpe2Zvcih2YXIgY2xhc3Nlcz17Q2FudmFzOkNhbnZhc30saT0wO2k8cGx1Z2lucy5sZW5ndGg7KytpKXt2YXIgcD1wbHVnaW5zW2ldO3AuaW5pdChwbG90LGNsYXNzZXMpLHAub3B0aW9ucyYmJC5leHRlbmQoITAsb3B0aW9ucyxwLm9wdGlvbnMpfX1mdW5jdGlvbiBwYXJzZU9wdGlvbnMob3B0cyl7JC5leHRlbmQoITAsb3B0aW9ucyxvcHRzKSxvcHRzJiZvcHRzLmNvbG9ycyYmKG9wdGlvbnMuY29sb3JzPW9wdHMuY29sb3JzKSxudWxsPT1vcHRpb25zLnhheGlzLmNvbG9yJiYob3B0aW9ucy54YXhpcy5jb2xvcj0kLmNvbG9yLnBhcnNlKG9wdGlvbnMuZ3JpZC5jb2xvcikuc2NhbGUoImEiLC4yMikudG9TdHJpbmcoKSksbnVsbD09b3B0aW9ucy55YXhpcy5jb2xvciYmKG9wdGlvbnMueWF4aXMuY29sb3I9JC5jb2xvci5wYXJzZShvcHRpb25zLmdyaWQuY29sb3IpLnNjYWxlKCJhIiwuMjIpLnRvU3RyaW5nKCkpLG51bGw9PW9wdGlvbnMueGF4aXMudGlja0NvbG9yJiYob3B0aW9ucy54YXhpcy50aWNrQ29sb3I9b3B0aW9ucy5ncmlkLnRpY2tDb2xvcnx8b3B0aW9ucy54YXhpcy5jb2xvciksbnVsbD09b3B0aW9ucy55YXhpcy50aWNrQ29sb3ImJihvcHRpb25zLnlheGlzLnRpY2tDb2xvcj1vcHRpb25zLmdyaWQudGlja0NvbG9yfHxvcHRpb25zLnlheGlzLmNvbG9yKSxudWxsPT1vcHRpb25zLmdyaWQuYm9yZGVyQ29sb3ImJihvcHRpb25zLmdyaWQuYm9yZGVyQ29sb3I9b3B0aW9ucy5ncmlkLmNvbG9yKSxudWxsPT1vcHRpb25zLmdyaWQudGlja0NvbG9yJiYob3B0aW9ucy5ncmlkLnRpY2tDb2xvcj0kLmNvbG9yLnBhcnNlKG9wdGlvbnMuZ3JpZC5jb2xvcikuc2NhbGUoImEiLC4yMikudG9TdHJpbmcoKSk7dmFyIGksYXhpc09wdGlvbnMsYXhpc0NvdW50LGZvbnRTaXplPXBsYWNlaG9sZGVyLmNzcygiZm9udC1zaXplIiksZm9udFNpemVEZWZhdWx0PWZvbnRTaXplPytmb250U2l6ZS5yZXBsYWNlKCJweCIsIiIpOjEzLGZvbnREZWZhdWx0cz17c3R5bGU6cGxhY2Vob2xkZXIuY3NzKCJmb250LXN0eWxlIiksc2l6ZTpNYXRoLnJvdW5kKC44KmZvbnRTaXplRGVmYXVsdCksdmFyaWFudDpwbGFjZWhvbGRlci5jc3MoImZvbnQtdmFyaWFudCIpLHdlaWdodDpwbGFjZWhvbGRlci5jc3MoImZvbnQtd2VpZ2h0IiksZmFtaWx5OnBsYWNlaG9sZGVyLmNzcygiZm9udC1mYW1pbHkiKX07CmZvcihheGlzQ291bnQ9b3B0aW9ucy54YXhlcy5sZW5ndGh8fDEsaT0wO2F4aXNDb3VudD5pOysraSlheGlzT3B0aW9ucz1vcHRpb25zLnhheGVzW2ldLGF4aXNPcHRpb25zJiYhYXhpc09wdGlvbnMudGlja0NvbG9yJiYoYXhpc09wdGlvbnMudGlja0NvbG9yPWF4aXNPcHRpb25zLmNvbG9yKSxheGlzT3B0aW9ucz0kLmV4dGVuZCghMCx7fSxvcHRpb25zLnhheGlzLGF4aXNPcHRpb25zKSxvcHRpb25zLnhheGVzW2ldPWF4aXNPcHRpb25zLGF4aXNPcHRpb25zLmZvbnQmJihheGlzT3B0aW9ucy5mb250PSQuZXh0ZW5kKHt9LGZvbnREZWZhdWx0cyxheGlzT3B0aW9ucy5mb250KSxheGlzT3B0aW9ucy5mb250LmNvbG9yfHwoYXhpc09wdGlvbnMuZm9udC5jb2xvcj1heGlzT3B0aW9ucy5jb2xvciksYXhpc09wdGlvbnMuZm9udC5saW5lSGVpZ2h0fHwoYXhpc09wdGlvbnMuZm9udC5saW5lSGVpZ2h0PU1hdGgucm91bmQoMS4xNSpheGlzT3B0aW9ucy5mb250LnNpemUpKSk7Zm9yKGF4aXNDb3VudD1vcHRpb25zLnlheGVzLmxlbmd0aHx8MSxpPTA7YXhpc0NvdW50Pmk7KytpKWF4aXNPcHRpb25zPW9wdGlvbnMueWF4ZXNbaV0sYXhpc09wdGlvbnMmJiFheGlzT3B0aW9ucy50aWNrQ29sb3ImJihheGlzT3B0aW9ucy50aWNrQ29sb3I9YXhpc09wdGlvbnMuY29sb3IpLGF4aXNPcHRpb25zPSQuZXh0ZW5kKCEwLHt9LG9wdGlvbnMueWF4aXMsYXhpc09wdGlvbnMpLG9wdGlvbnMueWF4ZXNbaV09YXhpc09wdGlvbnMsYXhpc09wdGlvbnMuZm9udCYmKGF4aXNPcHRpb25zLmZvbnQ9JC5leHRlbmQoe30sZm9udERlZmF1bHRzLGF4aXNPcHRpb25zLmZvbnQpLGF4aXNPcHRpb25zLmZvbnQuY29sb3J8fChheGlzT3B0aW9ucy5mb250LmNvbG9yPWF4aXNPcHRpb25zLmNvbG9yKSxheGlzT3B0aW9ucy5mb250LmxpbmVIZWlnaHR8fChheGlzT3B0aW9ucy5mb250LmxpbmVIZWlnaHQ9TWF0aC5yb3VuZCgxLjE1KmF4aXNPcHRpb25zLmZvbnQuc2l6ZSkpKTtmb3Iob3B0aW9ucy54YXhpcy5ub1RpY2tzJiZudWxsPT1vcHRpb25zLnhheGlzLnRpY2tzJiYob3B0aW9ucy54YXhpcy50aWNrcz1vcHRpb25zLnhheGlzLm5vVGlja3MpLG9wdGlvbnMueWF4aXMubm9UaWNrcyYmbnVsbD09b3B0aW9ucy55YXhpcy50aWNrcyYmKG9wdGlvbnMueWF4aXMudGlja3M9b3B0aW9ucy55YXhpcy5ub1RpY2tzKSxvcHRpb25zLngyYXhpcyYmKG9wdGlvbnMueGF4ZXNbMV09JC5leHRlbmQoITAse30sb3B0aW9ucy54YXhpcyxvcHRpb25zLngyYXhpcyksb3B0aW9ucy54YXhlc1sxXS5wb3NpdGlvbj0idG9wIixudWxsPT1vcHRpb25zLngyYXhpcy5taW4mJihvcHRpb25zLnhheGVzWzFdLm1pbj1udWxsKSxudWxsPT1vcHRpb25zLngyYXhpcy5tYXgmJihvcHRpb25zLnhheGVzWzFdLm1heD1udWxsKSksb3B0aW9ucy55MmF4aXMmJihvcHRpb25zLnlheGVzWzFdPSQuZXh0ZW5kKCEwLHt9LG9wdGlvbnMueWF4aXMsb3B0aW9ucy55MmF4aXMpLG9wdGlvbnMueWF4ZXNbMV0ucG9zaXRpb249InJpZ2h0IixudWxsPT1vcHRpb25zLnkyYXhpcy5taW4mJihvcHRpb25zLnlheGVzWzFdLm1pbj1udWxsKSxudWxsPT1vcHRpb25zLnkyYXhpcy5tYXgmJihvcHRpb25zLnlheGVzWzFdLm1heD1udWxsKSksb3B0aW9ucy5ncmlkLmNvbG9yZWRBcmVhcyYmKG9wdGlvbnMuZ3JpZC5tYXJraW5ncz1vcHRpb25zLmdyaWQuY29sb3JlZEFyZWFzKSxvcHRpb25zLmdyaWQuY29sb3JlZEFyZWFzQ29sb3ImJihvcHRpb25zLmdyaWQubWFya2luZ3NDb2xvcj1vcHRpb25zLmdyaWQuY29sb3JlZEFyZWFzQ29sb3IpLG9wdGlvbnMubGluZXMmJiQuZXh0ZW5kKCEwLG9wdGlvbnMuc2VyaWVzLmxpbmVzLG9wdGlvbnMubGluZXMpLG9wdGlvbnMucG9pbnRzJiYkLmV4dGVuZCghMCxvcHRpb25zLnNlcmllcy5wb2ludHMsb3B0aW9ucy5wb2ludHMpLG9wdGlvbnMuYmFycyYmJC5leHRlbmQoITAsb3B0aW9ucy5zZXJpZXMuYmFycyxvcHRpb25zLmJhcnMpLG51bGwhPW9wdGlvbnMuc2hhZG93U2l6ZSYmKG9wdGlvbnMuc2VyaWVzLnNoYWRvd1NpemU9b3B0aW9ucy5zaGFkb3dTaXplKSxudWxsIT1vcHRpb25zLmhpZ2hsaWdodENvbG9yJiYob3B0aW9ucy5zZXJpZXMuaGlnaGxpZ2h0Q29sb3I9b3B0aW9ucy5oaWdobGlnaHRDb2xvciksaT0wO2k8b3B0aW9ucy54YXhlcy5sZW5ndGg7KytpKWdldE9yQ3JlYXRlQXhpcyh4YXhlcyxpKzEpLm9wdGlvbnM9b3B0aW9ucy54YXhlc1tpXTtmb3IoaT0wO2k8b3B0aW9ucy55YXhlcy5sZW5ndGg7KytpKWdldE9yQ3JlYXRlQXhpcyh5YXhlcyxpKzEpLm9wdGlvbnM9b3B0aW9ucy55YXhlc1tpXTtmb3IodmFyIG4gaW4gaG9va3Mpb3B0aW9ucy5ob29rc1tuXSYmb3B0aW9ucy5ob29rc1tuXS5sZW5ndGgmJihob29rc1tuXT1ob29rc1tuXS5jb25jYXQob3B0aW9ucy5ob29rc1tuXSkpO2V4ZWN1dGVIb29rcyhob29rcy5wcm9jZXNzT3B0aW9ucyxbb3B0aW9uc10pfWZ1bmN0aW9uIHNldERhdGEoZCl7c2VyaWVzPXBhcnNlRGF0YShkKSxmaWxsSW5TZXJpZXNPcHRpb25zKCkscHJvY2Vzc0RhdGEoKX1mdW5jdGlvbiBwYXJzZURhdGEoZCl7Zm9yKHZhciByZXM9W10saT0wO2k8ZC5sZW5ndGg7KytpKXt2YXIgcz0kLmV4dGVuZCghMCx7fSxvcHRpb25zLnNlcmllcyk7bnVsbCE9ZFtpXS5kYXRhPyhzLmRhdGE9ZFtpXS5kYXRhLGRlbGV0ZSBkW2ldLmRhdGEsJC5leHRlbmQoITAscyxkW2ldKSxkW2ldLmRhdGE9cy5kYXRhKTpzLmRhdGE9ZFtpXSxyZXMucHVzaChzKX1yZXR1cm4gcmVzfWZ1bmN0aW9uIGF4aXNOdW1iZXIob2JqLGNvb3JkKXt2YXIgYT1vYmpbY29vcmQrImF4aXMiXTtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGEmJihhPWEubiksIm51bWJlciIhPXR5cGVvZiBhJiYoYT0xKSxhfWZ1bmN0aW9uIGFsbEF4ZXMoKXtyZXR1cm4gJC5ncmVwKHhheGVzLmNvbmNhdCh5YXhlcyksZnVuY3Rpb24oYSl7cmV0dXJuIGF9KX1mdW5jdGlvbiBjYW52YXNUb0F4aXNDb29yZHMocG9zKXt2YXIgaSxheGlzLHJlcz17fTtmb3IoaT0wO2k8eGF4ZXMubGVuZ3RoOysraSlheGlzPXhheGVzW2ldLGF4aXMmJmF4aXMudXNlZCYmKHJlc1sieCIrYXhpcy5uXT1heGlzLmMycChwb3MubGVmdCkpO2ZvcihpPTA7aTx5YXhlcy5sZW5ndGg7KytpKWF4aXM9eWF4ZXNbaV0sYXhpcyYmYXhpcy51c2VkJiYocmVzWyJ5IitheGlzLm5dPWF4aXMuYzJwKHBvcy50b3ApKTtyZXR1cm4gdm9pZCAwIT09cmVzLngxJiYocmVzLng9cmVzLngxKSx2b2lkIDAhPT1yZXMueTEmJihyZXMueT1yZXMueTEpLHJlc31mdW5jdGlvbiBheGlzVG9DYW52YXNDb29yZHMocG9zKXt2YXIgaSxheGlzLGtleSxyZXM9e307Zm9yKGk9MDtpPHhheGVzLmxlbmd0aDsrK2kpaWYoYXhpcz14YXhlc1tpXSxheGlzJiZheGlzLnVzZWQmJihrZXk9IngiK2F4aXMubixudWxsPT1wb3Nba2V5XSYmMT09YXhpcy5uJiYoa2V5PSJ4IiksbnVsbCE9cG9zW2tleV0pKXtyZXMubGVmdD1heGlzLnAyYyhwb3Nba2V5XSk7YnJlYWt9Zm9yKGk9MDtpPHlheGVzLmxlbmd0aDsrK2kpaWYoYXhpcz15YXhlc1tpXSxheGlzJiZheGlzLnVzZWQmJihrZXk9InkiK2F4aXMubixudWxsPT1wb3Nba2V5XSYmMT09YXhpcy5uJiYoa2V5PSJ5IiksbnVsbCE9cG9zW2tleV0pKXtyZXMudG9wPWF4aXMucDJjKHBvc1trZXldKTticmVha31yZXR1cm4gcmVzfWZ1bmN0aW9uIGdldE9yQ3JlYXRlQXhpcyhheGVzLG51bWJlcil7cmV0dXJuIGF4ZXNbbnVtYmVyLTFdfHwoYXhlc1tudW1iZXItMV09e246bnVtYmVyLGRpcmVjdGlvbjpheGVzPT14YXhlcz8ieCI6InkiLG9wdGlvbnM6JC5leHRlbmQoITAse30sYXhlcz09eGF4ZXM/b3B0aW9ucy54YXhpczpvcHRpb25zLnlheGlzKX0pLGF4ZXNbbnVtYmVyLTFdfWZ1bmN0aW9uIGZpbGxJblNlcmllc09wdGlvbnMoKXt2YXIgaSxuZWVkZWRDb2xvcnM9c2VyaWVzLmxlbmd0aCxtYXhJbmRleD0tMTtmb3IoaT0wO2k8c2VyaWVzLmxlbmd0aDsrK2kpe3ZhciBzYz1zZXJpZXNbaV0uY29sb3I7bnVsbCE9c2MmJihuZWVkZWRDb2xvcnMtLSwibnVtYmVyIj09dHlwZW9mIHNjJiZzYz5tYXhJbmRleCYmKG1heEluZGV4PXNjKSl9bWF4SW5kZXg+PW5lZWRlZENvbG9ycyYmKG5lZWRlZENvbG9ycz1tYXhJbmRleCsxKTt2YXIgYyxjb2xvcnM9W10sY29sb3JQb29sPW9wdGlvbnMuY29sb3JzLGNvbG9yUG9vbFNpemU9Y29sb3JQb29sLmxlbmd0aCx2YXJpYXRpb249MDtmb3IoaT0wO25lZWRlZENvbG9ycz5pO2krKyljPSQuY29sb3IucGFyc2UoY29sb3JQb29sW2klY29sb3JQb29sU2l6ZV18fCIjNjY2IiksaSVjb2xvclBvb2xTaXplPT0wJiZpJiYodmFyaWF0aW9uPXZhcmlhdGlvbj49MD8uNT52YXJpYXRpb24/LXZhcmlhdGlvbi0uMjowOi12YXJpYXRpb24pLGNvbG9yc1tpXT1jLnNjYWxlKCJyZ2IiLDErdmFyaWF0aW9uKTt2YXIgcyxjb2xvcmk9MDtmb3IoaT0wO2k8c2VyaWVzLmxlbmd0aDsrK2kpe2lmKHM9c2VyaWVzW2ldLG51bGw9PXMuY29sb3I/KHMuY29sb3I9Y29sb3JzW2NvbG9yaV0udG9TdHJpbmcoKSwrK2NvbG9yaSk6Im51bWJlciI9PXR5cGVvZiBzLmNvbG9yJiYocy5jb2xvcj1jb2xvcnNbcy5jb2xvcl0udG9TdHJpbmcoKSksbnVsbD09cy5saW5lcy5zaG93KXt2YXIgdixzaG93PSEwO2Zvcih2IGluIHMpaWYoc1t2XSYmc1t2XS5zaG93KXtzaG93PSExO2JyZWFrfXNob3cmJihzLmxpbmVzLnNob3c9ITApfW51bGw9PXMubGluZXMuemVybyYmKHMubGluZXMuemVybz0hIXMubGluZXMuZmlsbCkscy54YXhpcz1nZXRPckNyZWF0ZUF4aXMoeGF4ZXMsYXhpc051bWJlcihzLCJ4IikpLHMueWF4aXM9Z2V0T3JDcmVhdGVBeGlzKHlheGVzLGF4aXNOdW1iZXIocywieSIpKX19ZnVuY3Rpb24gcHJvY2Vzc0RhdGEoKXtmdW5jdGlvbiB1cGRhdGVBeGlzKGF4aXMsbWluLG1heCl7bWluPGF4aXMuZGF0YW1pbiYmbWluIT0tZmFrZUluZmluaXR5JiYoYXhpcy5kYXRhbWluPW1pbiksbWF4PmF4aXMuZGF0YW1heCYmbWF4IT1mYWtlSW5maW5pdHkmJihheGlzLmRhdGFtYXg9bWF4KX12YXIgaSxqLGssbSxzLHBvaW50cyxwcyx2YWwsZixwLGRhdGEsZm9ybWF0LHRvcFNlbnRyeT1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksYm90dG9tU2VudHJ5PU51bWJlci5ORUdBVElWRV9JTkZJTklUWSxmYWtlSW5maW5pdHk9TnVtYmVyLk1BWF9WQUxVRTtmb3IoJC5lYWNoKGFsbEF4ZXMoKSxmdW5jdGlvbihfLGF4aXMpe2F4aXMuZGF0YW1pbj10b3BTZW50cnksYXhpcy5kYXRhbWF4PWJvdHRvbVNlbnRyeSxheGlzLnVzZWQ9ITF9KSxpPTA7aTxzZXJpZXMubGVuZ3RoOysraSlzPXNlcmllc1tpXSxzLmRhdGFwb2ludHM9e3BvaW50czpbXX0sZXhlY3V0ZUhvb2tzKGhvb2tzLnByb2Nlc3NSYXdEYXRhLFtzLHMuZGF0YSxzLmRhdGFwb2ludHNdKTtmb3IoaT0wO2k8c2VyaWVzLmxlbmd0aDsrK2kpe2lmKHM9c2VyaWVzW2ldLGRhdGE9cy5kYXRhLGZvcm1hdD1zLmRhdGFwb2ludHMuZm9ybWF0LCFmb3JtYXQpe2lmKGZvcm1hdD1bXSxmb3JtYXQucHVzaCh7eDohMCxudW1iZXI6ITAscmVxdWlyZWQ6ITB9KSxmb3JtYXQucHVzaCh7eTohMCxudW1iZXI6ITAscmVxdWlyZWQ6ITB9KSxzLmJhcnMuc2hvd3x8cy5saW5lcy5zaG93JiZzLmxpbmVzLmZpbGwpe3ZhciBhdXRvc2NhbGU9ISEocy5iYXJzLnNob3cmJnMuYmFycy56ZXJvfHxzLmxpbmVzLnNob3cmJnMubGluZXMuemVybyk7Zm9ybWF0LnB1c2goe3k6ITAsbnVtYmVyOiEwLHJlcXVpcmVkOiExLGRlZmF1bHRWYWx1ZTowLGF1dG9zY2FsZTphdXRvc2NhbGV9KSxzLmJhcnMuaG9yaXpvbnRhbCYmKGRlbGV0ZSBmb3JtYXRbZm9ybWF0Lmxlbmd0aC0xXS55LGZvcm1hdFtmb3JtYXQubGVuZ3RoLTFdLng9ITApfXMuZGF0YXBvaW50cy5mb3JtYXQ9Zm9ybWF0fWlmKG51bGw9PXMuZGF0YXBvaW50cy5wb2ludHNpemUpe3MuZGF0YXBvaW50cy5wb2ludHNpemU9Zm9ybWF0Lmxlbmd0aCxwcz1zLmRhdGFwb2ludHMucG9pbnRzaXplLHBvaW50cz1zLmRhdGFwb2ludHMucG9pbnRzO3ZhciBpbnNlcnRTdGVwcz1zLmxpbmVzLnNob3cmJnMubGluZXMuc3RlcHM7Zm9yKHMueGF4aXMudXNlZD1zLnlheGlzLnVzZWQ9ITAsaj1rPTA7ajxkYXRhLmxlbmd0aDsrK2osays9cHMpe3A9ZGF0YVtqXTt2YXIgbnVsbGlmeT1udWxsPT1wO2lmKCFudWxsaWZ5KWZvcihtPTA7cHM+bTsrK20pdmFsPXBbbV0sZj1mb3JtYXRbbV0sZiYmKGYubnVtYmVyJiZudWxsIT12YWwmJih2YWw9K3ZhbCxpc05hTih2YWwpP3ZhbD1udWxsOjEvMD09dmFsP3ZhbD1mYWtlSW5maW5pdHk6dmFsPT0tMS8wJiYodmFsPS1mYWtlSW5maW5pdHkpKSxudWxsPT12YWwmJihmLnJlcXVpcmVkJiYobnVsbGlmeT0hMCksbnVsbCE9Zi5kZWZhdWx0VmFsdWUmJih2YWw9Zi5kZWZhdWx0VmFsdWUpKSkscG9pbnRzW2srbV09dmFsO2lmKG51bGxpZnkpZm9yKG09MDtwcz5tOysrbSl2YWw9cG9pbnRzW2srbV0sbnVsbCE9dmFsJiYoZj1mb3JtYXRbbV0sZi5hdXRvc2NhbGUhPT0hMSYmKGYueCYmdXBkYXRlQXhpcyhzLnhheGlzLHZhbCx2YWwpLGYueSYmdXBkYXRlQXhpcyhzLnlheGlzLHZhbCx2YWwpKSkscG9pbnRzW2srbV09bnVsbDtlbHNlIGlmKGluc2VydFN0ZXBzJiZrPjAmJm51bGwhPXBvaW50c1trLXBzXSYmcG9pbnRzW2stcHNdIT1wb2ludHNba10mJnBvaW50c1trLXBzKzFdIT1wb2ludHNbaysxXSl7Zm9yKG09MDtwcz5tOysrbSlwb2ludHNbaytwcyttXT1wb2ludHNbayttXTtwb2ludHNbaysxXT1wb2ludHNbay1wcysxXSxrKz1wc319fX1mb3IoaT0wO2k8c2VyaWVzLmxlbmd0aDsrK2kpcz1zZXJpZXNbaV0sZXhlY3V0ZUhvb2tzKGhvb2tzLnByb2Nlc3NEYXRhcG9pbnRzLFtzLHMuZGF0YXBvaW50c10pO2ZvcihpPTA7aTxzZXJpZXMubGVuZ3RoOysraSl7cz1zZXJpZXNbaV0scG9pbnRzPXMuZGF0YXBvaW50cy5wb2ludHMscHM9cy5kYXRhcG9pbnRzLnBvaW50c2l6ZSxmb3JtYXQ9cy5kYXRhcG9pbnRzLmZvcm1hdDt2YXIgeG1pbj10b3BTZW50cnkseW1pbj10b3BTZW50cnkseG1heD1ib3R0b21TZW50cnkseW1heD1ib3R0b21TZW50cnk7Zm9yKGo9MDtqPHBvaW50cy5sZW5ndGg7ais9cHMpaWYobnVsbCE9cG9pbnRzW2pdKWZvcihtPTA7cHM+bTsrK20pdmFsPXBvaW50c1tqK21dLGY9Zm9ybWF0W21dLGYmJmYuYXV0b3NjYWxlIT09ITEmJnZhbCE9ZmFrZUluZmluaXR5JiZ2YWwhPS1mYWtlSW5maW5pdHkmJihmLngmJih4bWluPnZhbCYmKHhtaW49dmFsKSx2YWw+eG1heCYmKHhtYXg9dmFsKSksZi55JiYoeW1pbj52YWwmJih5bWluPXZhbCksdmFsPnltYXgmJih5bWF4PXZhbCkpKTtpZihzLmJhcnMuc2hvdyl7dmFyIGRlbHRhO3N3aXRjaChzLmJhcnMuYWxpZ24pe2Nhc2UibGVmdCI6ZGVsdGE9MDticmVhaztjYXNlInJpZ2h0IjpkZWx0YT0tcy5iYXJzLmJhcldpZHRoO2JyZWFrO2RlZmF1bHQ6ZGVsdGE9LXMuYmFycy5iYXJXaWR0aC8yfXMuYmFycy5ob3Jpem9udGFsPyh5bWluKz1kZWx0YSx5bWF4Kz1kZWx0YStzLmJhcnMuYmFyV2lkdGgpOih4bWluKz1kZWx0YSx4bWF4Kz1kZWx0YStzLmJhcnMuYmFyV2lkdGgpfXVwZGF0ZUF4aXMocy54YXhpcyx4bWluLHhtYXgpLHVwZGF0ZUF4aXMocy55YXhpcyx5bWluLHltYXgpfSQuZWFjaChhbGxBeGVzKCksZnVuY3Rpb24oXyxheGlzKXtheGlzLmRhdGFtaW49PXRvcFNlbnRyeSYmKGF4aXMuZGF0YW1pbj1udWxsKSxheGlzLmRhdGFtYXg9PWJvdHRvbVNlbnRyeSYmKGF4aXMuZGF0YW1heD1udWxsKX0pfWZ1bmN0aW9uIHNldHVwQ2FudmFzZXMoKXtwbGFjZWhvbGRlci5jc3MoInBhZGRpbmciLDApLmNoaWxkcmVuKCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuISQodGhpcykuaGFzQ2xhc3MoImZsb3Qtb3ZlcmxheSIpJiYhJCh0aGlzKS5oYXNDbGFzcygiZmxvdC1iYXNlIil9KS5yZW1vdmUoKSwic3RhdGljIj09cGxhY2Vob2xkZXIuY3NzKCJwb3NpdGlvbiIpJiZwbGFjZWhvbGRlci5jc3MoInBvc2l0aW9uIiwicmVsYXRpdmUiKSxzdXJmYWNlPW5ldyBDYW52YXMoImZsb3QtYmFzZSIscGxhY2Vob2xkZXIpLG92ZXJsYXk9bmV3IENhbnZhcygiZmxvdC1vdmVybGF5IixwbGFjZWhvbGRlciksY3R4PXN1cmZhY2UuY29udGV4dCxvY3R4PW92ZXJsYXkuY29udGV4dCxldmVudEhvbGRlcj0kKG92ZXJsYXkuZWxlbWVudCkudW5iaW5kKCk7dmFyIGV4aXN0aW5nPXBsYWNlaG9sZGVyLmRhdGEoInBsb3QiKTtleGlzdGluZyYmKGV4aXN0aW5nLnNodXRkb3duKCksb3ZlcmxheS5jbGVhcigpKSxwbGFjZWhvbGRlci5kYXRhKCJwbG90IixwbG90KX1mdW5jdGlvbiBiaW5kRXZlbnRzKCl7b3B0aW9ucy5ncmlkLmhvdmVyYWJsZSYmKGV2ZW50SG9sZGVyLm1vdXNlbW92ZShvbk1vdXNlTW92ZSksZXZlbnRIb2xkZXIuYmluZCgibW91c2VsZWF2ZSIsb25Nb3VzZUxlYXZlKSksb3B0aW9ucy5ncmlkLmNsaWNrYWJsZSYmZXZlbnRIb2xkZXIuY2xpY2sob25DbGljayksZXhlY3V0ZUhvb2tzKGhvb2tzLmJpbmRFdmVudHMsW2V2ZW50SG9sZGVyXSl9ZnVuY3Rpb24gc2h1dGRvd24oKXtyZWRyYXdUaW1lb3V0JiZjbGVhclRpbWVvdXQocmVkcmF3VGltZW91dCksZXZlbnRIb2xkZXIudW5iaW5kKCJtb3VzZW1vdmUiLG9uTW91c2VNb3ZlKSxldmVudEhvbGRlci51bmJpbmQoIm1vdXNlbGVhdmUiLG9uTW91c2VMZWF2ZSksZXZlbnRIb2xkZXIudW5iaW5kKCJjbGljayIsb25DbGljayksZXhlY3V0ZUhvb2tzKGhvb2tzLnNodXRkb3duLFtldmVudEhvbGRlcl0pfWZ1bmN0aW9uIHNldFRyYW5zZm9ybWF0aW9uSGVscGVycyhheGlzKXtmdW5jdGlvbiBpZGVudGl0eSh4KXtyZXR1cm4geH12YXIgcyxtLHQ9YXhpcy5vcHRpb25zLnRyYW5zZm9ybXx8aWRlbnRpdHksaXQ9YXhpcy5vcHRpb25zLmludmVyc2VUcmFuc2Zvcm07IngiPT1heGlzLmRpcmVjdGlvbj8ocz1heGlzLnNjYWxlPXBsb3RXaWR0aC9NYXRoLmFicyh0KGF4aXMubWF4KS10KGF4aXMubWluKSksbT1NYXRoLm1pbih0KGF4aXMubWF4KSx0KGF4aXMubWluKSkpOihzPWF4aXMuc2NhbGU9cGxvdEhlaWdodC9NYXRoLmFicyh0KGF4aXMubWF4KS10KGF4aXMubWluKSkscz0tcyxtPU1hdGgubWF4KHQoYXhpcy5tYXgpLHQoYXhpcy5taW4pKSksYXhpcy5wMmM9dD09aWRlbnRpdHk/ZnVuY3Rpb24ocCl7cmV0dXJuKHAtbSkqc306ZnVuY3Rpb24ocCl7cmV0dXJuKHQocCktbSkqc30sYXhpcy5jMnA9aXQ/ZnVuY3Rpb24oYyl7cmV0dXJuIGl0KG0rYy9zKX06ZnVuY3Rpb24oYyl7cmV0dXJuIG0rYy9zfX1mdW5jdGlvbiBtZWFzdXJlVGlja0xhYmVscyhheGlzKXtmb3IodmFyIG9wdHM9YXhpcy5vcHRpb25zLHRpY2tzPWF4aXMudGlja3N8fFtdLGxhYmVsV2lkdGg9b3B0cy5sYWJlbFdpZHRofHwwLGxhYmVsSGVpZ2h0PW9wdHMubGFiZWxIZWlnaHR8fDAsbWF4V2lkdGg9bGFiZWxXaWR0aHx8KCJ4Ij09YXhpcy5kaXJlY3Rpb24/TWF0aC5mbG9vcihzdXJmYWNlLndpZHRoLyh0aWNrcy5sZW5ndGh8fDEpKTpudWxsKSxsZWdhY3lTdHlsZXM9YXhpcy5kaXJlY3Rpb24rIkF4aXMgIitheGlzLmRpcmVjdGlvbitheGlzLm4rIkF4aXMiLGxheWVyPSJmbG90LSIrYXhpcy5kaXJlY3Rpb24rIi1heGlzIGZsb3QtIitheGlzLmRpcmVjdGlvbitheGlzLm4rIi1heGlzICIrbGVnYWN5U3R5bGVzLGZvbnQ9b3B0cy5mb250fHwiZmxvdC10aWNrLWxhYmVsIHRpY2tMYWJlbCIsaT0wO2k8dGlja3MubGVuZ3RoOysraSl7dmFyIHQ9dGlja3NbaV07aWYodC5sYWJlbCl7dmFyIGluZm89c3VyZmFjZS5nZXRUZXh0SW5mbyhsYXllcix0LmxhYmVsLGZvbnQsbnVsbCxtYXhXaWR0aCk7bGFiZWxXaWR0aD1NYXRoLm1heChsYWJlbFdpZHRoLGluZm8ud2lkdGgpLGxhYmVsSGVpZ2h0PU1hdGgubWF4KGxhYmVsSGVpZ2h0LGluZm8uaGVpZ2h0KX19YXhpcy5sYWJlbFdpZHRoPW9wdHMubGFiZWxXaWR0aHx8bGFiZWxXaWR0aCxheGlzLmxhYmVsSGVpZ2h0PW9wdHMubGFiZWxIZWlnaHR8fGxhYmVsSGVpZ2h0fWZ1bmN0aW9uIGFsbG9jYXRlQXhpc0JveEZpcnN0UGhhc2UoYXhpcyl7dmFyIGx3PWF4aXMubGFiZWxXaWR0aCxsaD1heGlzLmxhYmVsSGVpZ2h0LHBvcz1heGlzLm9wdGlvbnMucG9zaXRpb24saXNYQXhpcz0ieCI9PT1heGlzLmRpcmVjdGlvbix0aWNrTGVuZ3RoPWF4aXMub3B0aW9ucy50aWNrTGVuZ3RoLGF4aXNNYXJnaW49b3B0aW9ucy5ncmlkLmF4aXNNYXJnaW4scGFkZGluZz1vcHRpb25zLmdyaWQubGFiZWxNYXJnaW4saW5uZXJtb3N0PSEwLG91dGVybW9zdD0hMCxmaXJzdD0hMCxmb3VuZD0hMTskLmVhY2goaXNYQXhpcz94YXhlczp5YXhlcyxmdW5jdGlvbihpLGEpe2EmJihhLnNob3d8fGEucmVzZXJ2ZVNwYWNlKSYmKGE9PT1heGlzP2ZvdW5kPSEwOmEub3B0aW9ucy5wb3NpdGlvbj09PXBvcyYmKGZvdW5kP291dGVybW9zdD0hMTppbm5lcm1vc3Q9ITEpLGZvdW5kfHwoZmlyc3Q9ITEpKX0pLG91dGVybW9zdCYmKGF4aXNNYXJnaW49MCksbnVsbD09dGlja0xlbmd0aCYmKHRpY2tMZW5ndGg9Zmlyc3Q/ImZ1bGwiOjUpLGlzTmFOKCt0aWNrTGVuZ3RoKXx8KHBhZGRpbmcrPSt0aWNrTGVuZ3RoKSxpc1hBeGlzPyhsaCs9cGFkZGluZywiYm90dG9tIj09cG9zPyhwbG90T2Zmc2V0LmJvdHRvbSs9bGgrYXhpc01hcmdpbixheGlzLmJveD17dG9wOnN1cmZhY2UuaGVpZ2h0LXBsb3RPZmZzZXQuYm90dG9tLGhlaWdodDpsaH0pOihheGlzLmJveD17dG9wOnBsb3RPZmZzZXQudG9wK2F4aXNNYXJnaW4saGVpZ2h0OmxofSxwbG90T2Zmc2V0LnRvcCs9bGgrYXhpc01hcmdpbikpOihsdys9cGFkZGluZywibGVmdCI9PXBvcz8oYXhpcy5ib3g9e2xlZnQ6cGxvdE9mZnNldC5sZWZ0K2F4aXNNYXJnaW4sd2lkdGg6bHd9LHBsb3RPZmZzZXQubGVmdCs9bHcrYXhpc01hcmdpbik6KHBsb3RPZmZzZXQucmlnaHQrPWx3K2F4aXNNYXJnaW4sYXhpcy5ib3g9e2xlZnQ6c3VyZmFjZS53aWR0aC1wbG90T2Zmc2V0LnJpZ2h0LHdpZHRoOmx3fSkpLGF4aXMucG9zaXRpb249cG9zLGF4aXMudGlja0xlbmd0aD10aWNrTGVuZ3RoLGF4aXMuYm94LnBhZGRpbmc9cGFkZGluZyxheGlzLmlubmVybW9zdD1pbm5lcm1vc3R9ZnVuY3Rpb24gYWxsb2NhdGVBeGlzQm94U2Vjb25kUGhhc2UoYXhpcyl7IngiPT1heGlzLmRpcmVjdGlvbj8oYXhpcy5ib3gubGVmdD1wbG90T2Zmc2V0LmxlZnQtYXhpcy5sYWJlbFdpZHRoLzIsYXhpcy5ib3gud2lkdGg9c3VyZmFjZS53aWR0aC1wbG90T2Zmc2V0LmxlZnQtcGxvdE9mZnNldC5yaWdodCtheGlzLmxhYmVsV2lkdGgpOihheGlzLmJveC50b3A9cGxvdE9mZnNldC50b3AtYXhpcy5sYWJlbEhlaWdodC8yLGF4aXMuYm94LmhlaWdodD1zdXJmYWNlLmhlaWdodC1wbG90T2Zmc2V0LmJvdHRvbS1wbG90T2Zmc2V0LnRvcCtheGlzLmxhYmVsSGVpZ2h0KX1mdW5jdGlvbiBhZGp1c3RMYXlvdXRGb3JUaGluZ3NTdGlja2luZ091dCgpe3ZhciBpLG1pbk1hcmdpbj1vcHRpb25zLmdyaWQubWluQm9yZGVyTWFyZ2luO2lmKG51bGw9PW1pbk1hcmdpbilmb3IobWluTWFyZ2luPTAsaT0wO2k8c2VyaWVzLmxlbmd0aDsrK2kpbWluTWFyZ2luPU1hdGgubWF4KG1pbk1hcmdpbiwyKihzZXJpZXNbaV0ucG9pbnRzLnJhZGl1cytzZXJpZXNbaV0ucG9pbnRzLmxpbmVXaWR0aC8yKSk7dmFyIG1hcmdpbnM9e2xlZnQ6bWluTWFyZ2luLHJpZ2h0Om1pbk1hcmdpbix0b3A6bWluTWFyZ2luLGJvdHRvbTptaW5NYXJnaW59OyQuZWFjaChhbGxBeGVzKCksZnVuY3Rpb24oXyxheGlzKXtheGlzLnJlc2VydmVTcGFjZSYmYXhpcy50aWNrcyYmYXhpcy50aWNrcy5sZW5ndGgmJigieCI9PT1heGlzLmRpcmVjdGlvbj8obWFyZ2lucy5sZWZ0PU1hdGgubWF4KG1hcmdpbnMubGVmdCxheGlzLmxhYmVsV2lkdGgvMiksbWFyZ2lucy5yaWdodD1NYXRoLm1heChtYXJnaW5zLnJpZ2h0LGF4aXMubGFiZWxXaWR0aC8yKSk6KG1hcmdpbnMuYm90dG9tPU1hdGgubWF4KG1hcmdpbnMuYm90dG9tLGF4aXMubGFiZWxIZWlnaHQvMiksbWFyZ2lucy50b3A9TWF0aC5tYXgobWFyZ2lucy50b3AsYXhpcy5sYWJlbEhlaWdodC8yKSkpfSkscGxvdE9mZnNldC5sZWZ0PU1hdGguY2VpbChNYXRoLm1heChtYXJnaW5zLmxlZnQscGxvdE9mZnNldC5sZWZ0KSkscGxvdE9mZnNldC5yaWdodD1NYXRoLmNlaWwoTWF0aC5tYXgobWFyZ2lucy5yaWdodCxwbG90T2Zmc2V0LnJpZ2h0KSkscGxvdE9mZnNldC50b3A9TWF0aC5jZWlsKE1hdGgubWF4KG1hcmdpbnMudG9wLHBsb3RPZmZzZXQudG9wKSkscGxvdE9mZnNldC5ib3R0b209TWF0aC5jZWlsKE1hdGgubWF4KG1hcmdpbnMuYm90dG9tLHBsb3RPZmZzZXQuYm90dG9tKSl9ZnVuY3Rpb24gc2V0dXBHcmlkKCl7dmFyIGksYXhlcz1hbGxBeGVzKCksc2hvd0dyaWQ9b3B0aW9ucy5ncmlkLnNob3c7Zm9yKHZhciBhIGluIHBsb3RPZmZzZXQpe3ZhciBtYXJnaW49b3B0aW9ucy5ncmlkLm1hcmdpbnx8MDtwbG90T2Zmc2V0W2FdPSJudW1iZXIiPT10eXBlb2YgbWFyZ2luP21hcmdpbjptYXJnaW5bYV18fDB9ZXhlY3V0ZUhvb2tzKGhvb2tzLnByb2Nlc3NPZmZzZXQsW3Bsb3RPZmZzZXRdKTtmb3IodmFyIGEgaW4gcGxvdE9mZnNldClwbG90T2Zmc2V0W2FdKz0ib2JqZWN0Ij09dHlwZW9mIG9wdGlvbnMuZ3JpZC5ib3JkZXJXaWR0aD9zaG93R3JpZD9vcHRpb25zLmdyaWQuYm9yZGVyV2lkdGhbYV06MDpzaG93R3JpZD9vcHRpb25zLmdyaWQuYm9yZGVyV2lkdGg6MDtpZigkLmVhY2goYXhlcyxmdW5jdGlvbihfLGF4aXMpe3ZhciBheGlzT3B0cz1heGlzLm9wdGlvbnM7YXhpcy5zaG93PW51bGw9PWF4aXNPcHRzLnNob3c/YXhpcy51c2VkOmF4aXNPcHRzLnNob3csYXhpcy5yZXNlcnZlU3BhY2U9bnVsbD09YXhpc09wdHMucmVzZXJ2ZVNwYWNlP2F4aXMuc2hvdzpheGlzT3B0cy5yZXNlcnZlU3BhY2Usc2V0UmFuZ2UoYXhpcyl9KSxzaG93R3JpZCl7dmFyIGFsbG9jYXRlZEF4ZXM9JC5ncmVwKGF4ZXMsZnVuY3Rpb24oYXhpcyl7cmV0dXJuIGF4aXMuc2hvd3x8YXhpcy5yZXNlcnZlU3BhY2V9KTtmb3IoJC5lYWNoKGFsbG9jYXRlZEF4ZXMsZnVuY3Rpb24oXyxheGlzKXtzZXR1cFRpY2tHZW5lcmF0aW9uKGF4aXMpLHNldFRpY2tzKGF4aXMpLHNuYXBSYW5nZVRvVGlja3MoYXhpcyxheGlzLnRpY2tzKSxtZWFzdXJlVGlja0xhYmVscyhheGlzKX0pLGk9YWxsb2NhdGVkQXhlcy5sZW5ndGgtMTtpPj0wOy0taSlhbGxvY2F0ZUF4aXNCb3hGaXJzdFBoYXNlKGFsbG9jYXRlZEF4ZXNbaV0pO2FkanVzdExheW91dEZvclRoaW5nc1N0aWNraW5nT3V0KCksJC5lYWNoKGFsbG9jYXRlZEF4ZXMsZnVuY3Rpb24oXyxheGlzKXthbGxvY2F0ZUF4aXNCb3hTZWNvbmRQaGFzZShheGlzKX0pfXBsb3RXaWR0aD1zdXJmYWNlLndpZHRoLXBsb3RPZmZzZXQubGVmdC1wbG90T2Zmc2V0LnJpZ2h0LHBsb3RIZWlnaHQ9c3VyZmFjZS5oZWlnaHQtcGxvdE9mZnNldC5ib3R0b20tcGxvdE9mZnNldC50b3AsJC5lYWNoKGF4ZXMsZnVuY3Rpb24oXyxheGlzKXtzZXRUcmFuc2Zvcm1hdGlvbkhlbHBlcnMoYXhpcyl9KSxzaG93R3JpZCYmZHJhd0F4aXNMYWJlbHMoKSxpbnNlcnRMZWdlbmQoKX1mdW5jdGlvbiBzZXRSYW5nZShheGlzKXt2YXIgb3B0cz1heGlzLm9wdGlvbnMsbWluPSsobnVsbCE9b3B0cy5taW4/b3B0cy5taW46YXhpcy5kYXRhbWluKSxtYXg9KyhudWxsIT1vcHRzLm1heD9vcHRzLm1heDpheGlzLmRhdGFtYXgpLGRlbHRhPW1heC1taW47aWYoMD09ZGVsdGEpe3ZhciB3aWRlbj0wPT1tYXg/MTouMDE7bnVsbD09b3B0cy5taW4mJihtaW4tPXdpZGVuKSwobnVsbD09b3B0cy5tYXh8fG51bGwhPW9wdHMubWluKSYmKG1heCs9d2lkZW4pfWVsc2V7dmFyIG1hcmdpbj1vcHRzLmF1dG9zY2FsZU1hcmdpbjtudWxsIT1tYXJnaW4mJihudWxsPT1vcHRzLm1pbiYmKG1pbi09ZGVsdGEqbWFyZ2luLDA+bWluJiZudWxsIT1heGlzLmRhdGFtaW4mJmF4aXMuZGF0YW1pbj49MCYmKG1pbj0wKSksbnVsbD09b3B0cy5tYXgmJihtYXgrPWRlbHRhKm1hcmdpbixtYXg+MCYmbnVsbCE9YXhpcy5kYXRhbWF4JiZheGlzLmRhdGFtYXg8PTAmJihtYXg9MCkpKX1heGlzLm1pbj1taW4sYXhpcy5tYXg9bWF4fWZ1bmN0aW9uIHNldHVwVGlja0dlbmVyYXRpb24oYXhpcyl7dmFyIG5vVGlja3Msb3B0cz1heGlzLm9wdGlvbnM7bm9UaWNrcz0ibnVtYmVyIj09dHlwZW9mIG9wdHMudGlja3MmJm9wdHMudGlja3M+MD9vcHRzLnRpY2tzOi4zKk1hdGguc3FydCgieCI9PWF4aXMuZGlyZWN0aW9uP3N1cmZhY2Uud2lkdGg6c3VyZmFjZS5oZWlnaHQpO3ZhciBkZWx0YT0oYXhpcy5tYXgtYXhpcy5taW4pL25vVGlja3MsZGVjPS1NYXRoLmZsb29yKE1hdGgubG9nKGRlbHRhKS9NYXRoLkxOMTApLG1heERlYz1vcHRzLnRpY2tEZWNpbWFscztudWxsIT1tYXhEZWMmJmRlYz5tYXhEZWMmJihkZWM9bWF4RGVjKTt2YXIgc2l6ZSxtYWduPU1hdGgucG93KDEwLC1kZWMpLG5vcm09ZGVsdGEvbWFnbjtpZigxLjU+bm9ybT9zaXplPTE6Mz5ub3JtPyhzaXplPTIsbm9ybT4yLjI1JiYobnVsbD09bWF4RGVjfHxtYXhEZWM+PWRlYysxKSYmKHNpemU9Mi41LCsrZGVjKSk6c2l6ZT03LjU+bm9ybT81OjEwLHNpemUqPW1hZ24sbnVsbCE9b3B0cy5taW5UaWNrU2l6ZSYmc2l6ZTxvcHRzLm1pblRpY2tTaXplJiYoc2l6ZT1vcHRzLm1pblRpY2tTaXplKSxheGlzLmRlbHRhPWRlbHRhLGF4aXMudGlja0RlY2ltYWxzPU1hdGgubWF4KDAsbnVsbCE9bWF4RGVjP21heERlYzpkZWMpLGF4aXMudGlja1NpemU9b3B0cy50aWNrU2l6ZXx8c2l6ZSwidGltZSI9PW9wdHMubW9kZSYmIWF4aXMudGlja0dlbmVyYXRvcil0aHJvdyBuZXcgRXJyb3IoIlRpbWUgbW9kZSByZXF1aXJlcyB0aGUgZmxvdC50aW1lIHBsdWdpbi4iKTtpZihheGlzLnRpY2tHZW5lcmF0b3J8fChheGlzLnRpY2tHZW5lcmF0b3I9ZnVuY3Rpb24oYXhpcyl7dmFyIHByZXYsdGlja3M9W10sc3RhcnQ9Zmxvb3JJbkJhc2UoYXhpcy5taW4sYXhpcy50aWNrU2l6ZSksaT0wLHY9TnVtYmVyLk5hTjtkbyBwcmV2PXYsdj1zdGFydCtpKmF4aXMudGlja1NpemUsdGlja3MucHVzaCh2KSwrK2k7d2hpbGUodjxheGlzLm1heCYmdiE9cHJldik7cmV0dXJuIHRpY2tzfSxheGlzLnRpY2tGb3JtYXR0ZXI9ZnVuY3Rpb24odmFsdWUsYXhpcyl7dmFyIGZhY3Rvcj1heGlzLnRpY2tEZWNpbWFscz9NYXRoLnBvdygxMCxheGlzLnRpY2tEZWNpbWFscyk6MSxmb3JtYXR0ZWQ9IiIrTWF0aC5yb3VuZCh2YWx1ZSpmYWN0b3IpL2ZhY3RvcjtpZihudWxsIT1heGlzLnRpY2tEZWNpbWFscyl7dmFyIGRlY2ltYWw9Zm9ybWF0dGVkLmluZGV4T2YoIi4iKSxwcmVjaXNpb249LTE9PWRlY2ltYWw/MDpmb3JtYXR0ZWQubGVuZ3RoLWRlY2ltYWwtMTtpZihwcmVjaXNpb248YXhpcy50aWNrRGVjaW1hbHMpcmV0dXJuKHByZWNpc2lvbj9mb3JtYXR0ZWQ6Zm9ybWF0dGVkKyIuIikrKCIiK2ZhY3Rvcikuc3Vic3RyKDEsYXhpcy50aWNrRGVjaW1hbHMtcHJlY2lzaW9uKX1yZXR1cm4gZm9ybWF0dGVkfSksJC5pc0Z1bmN0aW9uKG9wdHMudGlja0Zvcm1hdHRlcikmJihheGlzLnRpY2tGb3JtYXR0ZXI9ZnVuY3Rpb24odixheGlzKXtyZXR1cm4iIitvcHRzLnRpY2tGb3JtYXR0ZXIodixheGlzKX0pLG51bGwhPW9wdHMuYWxpZ25UaWNrc1dpdGhBeGlzKXt2YXIgb3RoZXJBeGlzPSgieCI9PWF4aXMuZGlyZWN0aW9uP3hheGVzOnlheGVzKVtvcHRzLmFsaWduVGlja3NXaXRoQXhpcy0xXTtpZihvdGhlckF4aXMmJm90aGVyQXhpcy51c2VkJiZvdGhlckF4aXMhPWF4aXMpe3ZhciBuaWNlVGlja3M9YXhpcy50aWNrR2VuZXJhdG9yKGF4aXMpO2lmKG5pY2VUaWNrcy5sZW5ndGg+MCYmKG51bGw9PW9wdHMubWluJiYoYXhpcy5taW49TWF0aC5taW4oYXhpcy5taW4sbmljZVRpY2tzWzBdKSksbnVsbD09b3B0cy5tYXgmJm5pY2VUaWNrcy5sZW5ndGg+MSYmKGF4aXMubWF4PU1hdGgubWF4KGF4aXMubWF4LG5pY2VUaWNrc1tuaWNlVGlja3MubGVuZ3RoLTFdKSkpLGF4aXMudGlja0dlbmVyYXRvcj1mdW5jdGlvbihheGlzKXt2YXIgdixpLHRpY2tzPVtdO2ZvcihpPTA7aTxvdGhlckF4aXMudGlja3MubGVuZ3RoOysraSl2PShvdGhlckF4aXMudGlja3NbaV0udi1vdGhlckF4aXMubWluKS8ob3RoZXJBeGlzLm1heC1vdGhlckF4aXMubWluKSx2PWF4aXMubWluK3YqKGF4aXMubWF4LWF4aXMubWluKSx0aWNrcy5wdXNoKHYpO3JldHVybiB0aWNrc30sIWF4aXMubW9kZSYmbnVsbD09b3B0cy50aWNrRGVjaW1hbHMpe3ZhciBleHRyYURlYz1NYXRoLm1heCgwLC1NYXRoLmZsb29yKE1hdGgubG9nKGF4aXMuZGVsdGEpL01hdGguTE4xMCkrMSksdHM9YXhpcy50aWNrR2VuZXJhdG9yKGF4aXMpO3RzLmxlbmd0aD4xJiYvXC4uKjAkLy50ZXN0KCh0c1sxXS10c1swXSkudG9GaXhlZChleHRyYURlYykpfHwoYXhpcy50aWNrRGVjaW1hbHM9ZXh0cmFEZWMpfX19fWZ1bmN0aW9uIHNldFRpY2tzKGF4aXMpe3ZhciBvdGlja3M9YXhpcy5vcHRpb25zLnRpY2tzLHRpY2tzPVtdO251bGw9PW90aWNrc3x8Im51bWJlciI9PXR5cGVvZiBvdGlja3MmJm90aWNrcz4wP3RpY2tzPWF4aXMudGlja0dlbmVyYXRvcihheGlzKTpvdGlja3MmJih0aWNrcz0kLmlzRnVuY3Rpb24ob3RpY2tzKT9vdGlja3MoYXhpcyk6b3RpY2tzKTt2YXIgaSx2O2ZvcihheGlzLnRpY2tzPVtdLGk9MDtpPHRpY2tzLmxlbmd0aDsrK2kpe3ZhciBsYWJlbD1udWxsLHQ9dGlja3NbaV07Im9iamVjdCI9PXR5cGVvZiB0Pyh2PSt0WzBdLHQubGVuZ3RoPjEmJihsYWJlbD10WzFdKSk6dj0rdCxudWxsPT1sYWJlbCYmKGxhYmVsPWF4aXMudGlja0Zvcm1hdHRlcih2LGF4aXMpKSxpc05hTih2KXx8YXhpcy50aWNrcy5wdXNoKHt2OnYsbGFiZWw6bGFiZWx9KX19ZnVuY3Rpb24gc25hcFJhbmdlVG9UaWNrcyhheGlzLHRpY2tzKXtheGlzLm9wdGlvbnMuYXV0b3NjYWxlTWFyZ2luJiZ0aWNrcy5sZW5ndGg+MCYmKG51bGw9PWF4aXMub3B0aW9ucy5taW4mJihheGlzLm1pbj1NYXRoLm1pbihheGlzLm1pbix0aWNrc1swXS52KSksbnVsbD09YXhpcy5vcHRpb25zLm1heCYmdGlja3MubGVuZ3RoPjEmJihheGlzLm1heD1NYXRoLm1heChheGlzLm1heCx0aWNrc1t0aWNrcy5sZW5ndGgtMV0udikpKX1mdW5jdGlvbiBkcmF3KCl7c3VyZmFjZS5jbGVhcigpLGV4ZWN1dGVIb29rcyhob29rcy5kcmF3QmFja2dyb3VuZCxbY3R4XSk7dmFyIGdyaWQ9b3B0aW9ucy5ncmlkO2dyaWQuc2hvdyYmZ3JpZC5iYWNrZ3JvdW5kQ29sb3ImJmRyYXdCYWNrZ3JvdW5kKCksZ3JpZC5zaG93JiYhZ3JpZC5hYm92ZURhdGEmJmRyYXdHcmlkKCk7Zm9yKHZhciBpPTA7aTxzZXJpZXMubGVuZ3RoOysraSlleGVjdXRlSG9va3MoaG9va3MuZHJhd1NlcmllcyxbY3R4LHNlcmllc1tpXV0pLGRyYXdTZXJpZXMoc2VyaWVzW2ldKTtleGVjdXRlSG9va3MoaG9va3MuZHJhdyxbY3R4XSksZ3JpZC5zaG93JiZncmlkLmFib3ZlRGF0YSYmZHJhd0dyaWQoKSxzdXJmYWNlLnJlbmRlcigpLHRyaWdnZXJSZWRyYXdPdmVybGF5KCl9ZnVuY3Rpb24gZXh0cmFjdFJhbmdlKHJhbmdlcyxjb29yZCl7Zm9yKHZhciBheGlzLGZyb20sdG8sa2V5LGF4ZXM9YWxsQXhlcygpLGk9MDtpPGF4ZXMubGVuZ3RoOysraSlpZihheGlzPWF4ZXNbaV0sYXhpcy5kaXJlY3Rpb249PWNvb3JkJiYoa2V5PWNvb3JkK2F4aXMubisiYXhpcyIscmFuZ2VzW2tleV18fDEhPWF4aXMubnx8KGtleT1jb29yZCsiYXhpcyIpLHJhbmdlc1trZXldKSl7ZnJvbT1yYW5nZXNba2V5XS5mcm9tLHRvPXJhbmdlc1trZXldLnRvO2JyZWFrfWlmKHJhbmdlc1trZXldfHwoYXhpcz0ieCI9PWNvb3JkP3hheGVzWzBdOnlheGVzWzBdLGZyb209cmFuZ2VzW2Nvb3JkKyIxIl0sdG89cmFuZ2VzW2Nvb3JkKyIyIl0pLG51bGwhPWZyb20mJm51bGwhPXRvJiZmcm9tPnRvKXt2YXIgdG1wPWZyb207ZnJvbT10byx0bz10bXB9cmV0dXJue2Zyb206ZnJvbSx0bzp0byxheGlzOmF4aXN9fWZ1bmN0aW9uIGRyYXdCYWNrZ3JvdW5kKCl7Y3R4LnNhdmUoKSxjdHgudHJhbnNsYXRlKHBsb3RPZmZzZXQubGVmdCxwbG90T2Zmc2V0LnRvcCksY3R4LmZpbGxTdHlsZT1nZXRDb2xvck9yR3JhZGllbnQob3B0aW9ucy5ncmlkLmJhY2tncm91bmRDb2xvcixwbG90SGVpZ2h0LDAsInJnYmEoMjU1LCAyNTUsIDI1NSwgMCkiKSxjdHguZmlsbFJlY3QoMCwwLHBsb3RXaWR0aCxwbG90SGVpZ2h0KSxjdHgucmVzdG9yZSgpfWZ1bmN0aW9uIGRyYXdHcmlkKCl7dmFyIGksYXhlcyxidyxiYztjdHguc2F2ZSgpLGN0eC50cmFuc2xhdGUocGxvdE9mZnNldC5sZWZ0LHBsb3RPZmZzZXQudG9wKTt2YXIgbWFya2luZ3M9b3B0aW9ucy5ncmlkLm1hcmtpbmdzO2lmKG1hcmtpbmdzKWZvcigkLmlzRnVuY3Rpb24obWFya2luZ3MpJiYoYXhlcz1wbG90LmdldEF4ZXMoKSxheGVzLnhtaW49YXhlcy54YXhpcy5taW4sYXhlcy54bWF4PWF4ZXMueGF4aXMubWF4LGF4ZXMueW1pbj1heGVzLnlheGlzLm1pbixheGVzLnltYXg9YXhlcy55YXhpcy5tYXgsbWFya2luZ3M9bWFya2luZ3MoYXhlcykpLGk9MDtpPG1hcmtpbmdzLmxlbmd0aDsrK2kpe3ZhciBtPW1hcmtpbmdzW2ldLHhyYW5nZT1leHRyYWN0UmFuZ2UobSwieCIpLHlyYW5nZT1leHRyYWN0UmFuZ2UobSwieSIpO2lmKG51bGw9PXhyYW5nZS5mcm9tJiYoeHJhbmdlLmZyb209eHJhbmdlLmF4aXMubWluKSxudWxsPT14cmFuZ2UudG8mJih4cmFuZ2UudG89eHJhbmdlLmF4aXMubWF4KSxudWxsPT15cmFuZ2UuZnJvbSYmKHlyYW5nZS5mcm9tPXlyYW5nZS5heGlzLm1pbiksbnVsbD09eXJhbmdlLnRvJiYoeXJhbmdlLnRvPXlyYW5nZS5heGlzLm1heCksISh4cmFuZ2UudG88eHJhbmdlLmF4aXMubWlufHx4cmFuZ2UuZnJvbT54cmFuZ2UuYXhpcy5tYXh8fHlyYW5nZS50bzx5cmFuZ2UuYXhpcy5taW58fHlyYW5nZS5mcm9tPnlyYW5nZS5heGlzLm1heCkpe3hyYW5nZS5mcm9tPU1hdGgubWF4KHhyYW5nZS5mcm9tLHhyYW5nZS5heGlzLm1pbikseHJhbmdlLnRvPU1hdGgubWluKHhyYW5nZS50byx4cmFuZ2UuYXhpcy5tYXgpLHlyYW5nZS5mcm9tPU1hdGgubWF4KHlyYW5nZS5mcm9tLHlyYW5nZS5heGlzLm1pbikseXJhbmdlLnRvPU1hdGgubWluKHlyYW5nZS50byx5cmFuZ2UuYXhpcy5tYXgpO3ZhciB4ZXF1YWw9eHJhbmdlLmZyb209PT14cmFuZ2UudG8seWVxdWFsPXlyYW5nZS5mcm9tPT09eXJhbmdlLnRvO2lmKCF4ZXF1YWx8fCF5ZXF1YWwpaWYoeHJhbmdlLmZyb209TWF0aC5mbG9vcih4cmFuZ2UuYXhpcy5wMmMoeHJhbmdlLmZyb20pKSx4cmFuZ2UudG89TWF0aC5mbG9vcih4cmFuZ2UuYXhpcy5wMmMoeHJhbmdlLnRvKSkseXJhbmdlLmZyb209TWF0aC5mbG9vcih5cmFuZ2UuYXhpcy5wMmMoeXJhbmdlLmZyb20pKSx5cmFuZ2UudG89TWF0aC5mbG9vcih5cmFuZ2UuYXhpcy5wMmMoeXJhbmdlLnRvKSkseGVxdWFsfHx5ZXF1YWwpe3ZhciBsaW5lV2lkdGg9bS5saW5lV2lkdGh8fG9wdGlvbnMuZ3JpZC5tYXJraW5nc0xpbmVXaWR0aCxzdWJQaXhlbD1saW5lV2lkdGglMj8uNTowO2N0eC5iZWdpblBhdGgoKSxjdHguc3Ryb2tlU3R5bGU9bS5jb2xvcnx8b3B0aW9ucy5ncmlkLm1hcmtpbmdzQ29sb3IsY3R4LmxpbmVXaWR0aD1saW5lV2lkdGgseGVxdWFsPyhjdHgubW92ZVRvKHhyYW5nZS50bytzdWJQaXhlbCx5cmFuZ2UuZnJvbSksY3R4LmxpbmVUbyh4cmFuZ2UudG8rc3ViUGl4ZWwseXJhbmdlLnRvKSk6KGN0eC5tb3ZlVG8oeHJhbmdlLmZyb20seXJhbmdlLnRvK3N1YlBpeGVsKSxjdHgubGluZVRvKHhyYW5nZS50byx5cmFuZ2UudG8rc3ViUGl4ZWwpKSxjdHguc3Ryb2tlKCl9ZWxzZSBjdHguZmlsbFN0eWxlPW0uY29sb3J8fG9wdGlvbnMuZ3JpZC5tYXJraW5nc0NvbG9yLGN0eC5maWxsUmVjdCh4cmFuZ2UuZnJvbSx5cmFuZ2UudG8seHJhbmdlLnRvLXhyYW5nZS5mcm9tLHlyYW5nZS5mcm9tLXlyYW5nZS50byl9fWF4ZXM9YWxsQXhlcygpLGJ3PW9wdGlvbnMuZ3JpZC5ib3JkZXJXaWR0aDtmb3IodmFyIGo9MDtqPGF4ZXMubGVuZ3RoOysrail7dmFyIHgseSx4b2ZmLHlvZmYsYXhpcz1heGVzW2pdLGJveD1heGlzLmJveCx0PWF4aXMudGlja0xlbmd0aDtpZihheGlzLnNob3cmJjAhPWF4aXMudGlja3MubGVuZ3RoKXtmb3IoY3R4LmxpbmVXaWR0aD0xLCJ4Ij09YXhpcy5kaXJlY3Rpb24/KHg9MCx5PSJmdWxsIj09dD8idG9wIj09YXhpcy5wb3NpdGlvbj8wOnBsb3RIZWlnaHQ6Ym94LnRvcC1wbG90T2Zmc2V0LnRvcCsoInRvcCI9PWF4aXMucG9zaXRpb24/Ym94LmhlaWdodDowKSk6KHk9MCx4PSJmdWxsIj09dD8ibGVmdCI9PWF4aXMucG9zaXRpb24/MDpwbG90V2lkdGg6Ym94LmxlZnQtcGxvdE9mZnNldC5sZWZ0KygibGVmdCI9PWF4aXMucG9zaXRpb24/Ym94LndpZHRoOjApKSxheGlzLmlubmVybW9zdHx8KGN0eC5zdHJva2VTdHlsZT1heGlzLm9wdGlvbnMuY29sb3IsY3R4LmJlZ2luUGF0aCgpLHhvZmY9eW9mZj0wLCJ4Ij09YXhpcy5kaXJlY3Rpb24/eG9mZj1wbG90V2lkdGgrMTp5b2ZmPXBsb3RIZWlnaHQrMSwxPT1jdHgubGluZVdpZHRoJiYoIngiPT1heGlzLmRpcmVjdGlvbj95PU1hdGguZmxvb3IoeSkrLjU6eD1NYXRoLmZsb29yKHgpKy41KSxjdHgubW92ZVRvKHgseSksY3R4LmxpbmVUbyh4K3hvZmYseSt5b2ZmKSxjdHguc3Ryb2tlKCkpLGN0eC5zdHJva2VTdHlsZT1heGlzLm9wdGlvbnMudGlja0NvbG9yLGN0eC5iZWdpblBhdGgoKSxpPTA7aTxheGlzLnRpY2tzLmxlbmd0aDsrK2kpe3ZhciB2PWF4aXMudGlja3NbaV0udjt4b2ZmPXlvZmY9MCxpc05hTih2KXx8djxheGlzLm1pbnx8dj5heGlzLm1heHx8ImZ1bGwiPT10JiYoIm9iamVjdCI9PXR5cGVvZiBidyYmYndbYXhpcy5wb3NpdGlvbl0+MHx8Ync+MCkmJih2PT1heGlzLm1pbnx8dj09YXhpcy5tYXgpfHwoIngiPT1heGlzLmRpcmVjdGlvbj8oeD1heGlzLnAyYyh2KSx5b2ZmPSJmdWxsIj09dD8tcGxvdEhlaWdodDp0LCJ0b3AiPT1heGlzLnBvc2l0aW9uJiYoeW9mZj0teW9mZikpOih5PWF4aXMucDJjKHYpLHhvZmY9ImZ1bGwiPT10Py1wbG90V2lkdGg6dCwibGVmdCI9PWF4aXMucG9zaXRpb24mJih4b2ZmPS14b2ZmKSksMT09Y3R4LmxpbmVXaWR0aCYmKCJ4Ij09YXhpcy5kaXJlY3Rpb24/eD1NYXRoLmZsb29yKHgpKy41Onk9TWF0aC5mbG9vcih5KSsuNSksY3R4Lm1vdmVUbyh4LHkpLGN0eC5saW5lVG8oeCt4b2ZmLHkreW9mZikpfWN0eC5zdHJva2UoKX19YncmJihiYz1vcHRpb25zLmdyaWQuYm9yZGVyQ29sb3IsIm9iamVjdCI9PXR5cGVvZiBid3x8Im9iamVjdCI9PXR5cGVvZiBiYz8oIm9iamVjdCIhPXR5cGVvZiBidyYmKGJ3PXt0b3A6YncscmlnaHQ6YncsYm90dG9tOmJ3LGxlZnQ6Ynd9KSwib2JqZWN0IiE9dHlwZW9mIGJjJiYoYmM9e3RvcDpiYyxyaWdodDpiYyxib3R0b206YmMsbGVmdDpiY30pLGJ3LnRvcD4wJiYoY3R4LnN0cm9rZVN0eWxlPWJjLnRvcCxjdHgubGluZVdpZHRoPWJ3LnRvcCxjdHguYmVnaW5QYXRoKCksY3R4Lm1vdmVUbygwLWJ3LmxlZnQsMC1idy50b3AvMiksY3R4LmxpbmVUbyhwbG90V2lkdGgsMC1idy50b3AvMiksY3R4LnN0cm9rZSgpKSxidy5yaWdodD4wJiYoY3R4LnN0cm9rZVN0eWxlPWJjLnJpZ2h0LGN0eC5saW5lV2lkdGg9YncucmlnaHQsY3R4LmJlZ2luUGF0aCgpLGN0eC5tb3ZlVG8ocGxvdFdpZHRoK2J3LnJpZ2h0LzIsMC1idy50b3ApLGN0eC5saW5lVG8ocGxvdFdpZHRoK2J3LnJpZ2h0LzIscGxvdEhlaWdodCksY3R4LnN0cm9rZSgpKSxidy5ib3R0b20+MCYmKGN0eC5zdHJva2VTdHlsZT1iYy5ib3R0b20sY3R4LmxpbmVXaWR0aD1idy5ib3R0b20sY3R4LmJlZ2luUGF0aCgpLGN0eC5tb3ZlVG8ocGxvdFdpZHRoK2J3LnJpZ2h0LHBsb3RIZWlnaHQrYncuYm90dG9tLzIpLGN0eC5saW5lVG8oMCxwbG90SGVpZ2h0K2J3LmJvdHRvbS8yKSxjdHguc3Ryb2tlKCkpLGJ3LmxlZnQ+MCYmKGN0eC5zdHJva2VTdHlsZT1iYy5sZWZ0LGN0eC5saW5lV2lkdGg9YncubGVmdCxjdHguYmVnaW5QYXRoKCksY3R4Lm1vdmVUbygwLWJ3LmxlZnQvMixwbG90SGVpZ2h0K2J3LmJvdHRvbSksY3R4LmxpbmVUbygwLWJ3LmxlZnQvMiwwKSxjdHguc3Ryb2tlKCkpKTooY3R4LmxpbmVXaWR0aD1idyxjdHguc3Ryb2tlU3R5bGU9b3B0aW9ucy5ncmlkLmJvcmRlckNvbG9yLGN0eC5zdHJva2VSZWN0KC1idy8yLC1idy8yLHBsb3RXaWR0aCtidyxwbG90SGVpZ2h0K2J3KSkpLGN0eC5yZXN0b3JlKCl9ZnVuY3Rpb24gZHJhd0F4aXNMYWJlbHMoKXskLmVhY2goYWxsQXhlcygpLGZ1bmN0aW9uKF8sYXhpcyl7dmFyIHRpY2sseCx5LGhhbGlnbix2YWxpZ24sYm94PWF4aXMuYm94LGxlZ2FjeVN0eWxlcz1heGlzLmRpcmVjdGlvbisiQXhpcyAiK2F4aXMuZGlyZWN0aW9uK2F4aXMubisiQXhpcyIsbGF5ZXI9ImZsb3QtIitheGlzLmRpcmVjdGlvbisiLWF4aXMgZmxvdC0iK2F4aXMuZGlyZWN0aW9uK2F4aXMubisiLWF4aXMgIitsZWdhY3lTdHlsZXMsZm9udD1heGlzLm9wdGlvbnMuZm9udHx8ImZsb3QtdGljay1sYWJlbCB0aWNrTGFiZWwiO2lmKHN1cmZhY2UucmVtb3ZlVGV4dChsYXllciksYXhpcy5zaG93JiYwIT1heGlzLnRpY2tzLmxlbmd0aClmb3IodmFyIGk9MDtpPGF4aXMudGlja3MubGVuZ3RoOysraSl0aWNrPWF4aXMudGlja3NbaV0sIXRpY2subGFiZWx8fHRpY2sudjxheGlzLm1pbnx8dGljay52PmF4aXMubWF4fHwoIngiPT1heGlzLmRpcmVjdGlvbj8oaGFsaWduPSJjZW50ZXIiLHg9cGxvdE9mZnNldC5sZWZ0K2F4aXMucDJjKHRpY2sudiksImJvdHRvbSI9PWF4aXMucG9zaXRpb24/eT1ib3gudG9wK2JveC5wYWRkaW5nOih5PWJveC50b3ArYm94LmhlaWdodC1ib3gucGFkZGluZyx2YWxpZ249ImJvdHRvbSIpKToodmFsaWduPSJtaWRkbGUiLHk9cGxvdE9mZnNldC50b3ArYXhpcy5wMmModGljay52KSwibGVmdCI9PWF4aXMucG9zaXRpb24/KHg9Ym94LmxlZnQrYm94LndpZHRoLWJveC5wYWRkaW5nLGhhbGlnbj0icmlnaHQiKTp4PWJveC5sZWZ0K2JveC5wYWRkaW5nKSxzdXJmYWNlLmFkZFRleHQobGF5ZXIseCx5LHRpY2subGFiZWwsZm9udCxudWxsLG51bGwsaGFsaWduLHZhbGlnbikpfSl9ZnVuY3Rpb24gZHJhd1NlcmllcyhzZXJpZXMpe3Nlcmllcy5saW5lcy5zaG93JiZkcmF3U2VyaWVzTGluZXMoc2VyaWVzKSxzZXJpZXMuYmFycy5zaG93JiZkcmF3U2VyaWVzQmFycyhzZXJpZXMpLHNlcmllcy5wb2ludHMuc2hvdyYmZHJhd1Nlcmllc1BvaW50cyhzZXJpZXMpfWZ1bmN0aW9uIGRyYXdTZXJpZXNMaW5lcyhzZXJpZXMpe2Z1bmN0aW9uIHBsb3RMaW5lKGRhdGFwb2ludHMseG9mZnNldCx5b2Zmc2V0LGF4aXN4LGF4aXN5KXt2YXIgcG9pbnRzPWRhdGFwb2ludHMucG9pbnRzLHBzPWRhdGFwb2ludHMucG9pbnRzaXplLHByZXZ4PW51bGwscHJldnk9bnVsbDtjdHguYmVnaW5QYXRoKCk7Zm9yKHZhciBpPXBzO2k8cG9pbnRzLmxlbmd0aDtpKz1wcyl7dmFyIHgxPXBvaW50c1tpLXBzXSx5MT1wb2ludHNbaS1wcysxXSx4Mj1wb2ludHNbaV0seTI9cG9pbnRzW2krMV07aWYobnVsbCE9eDEmJm51bGwhPXgyKXtpZih5Mj49eTEmJnkxPGF4aXN5Lm1pbil7aWYoeTI8YXhpc3kubWluKWNvbnRpbnVlO3gxPShheGlzeS5taW4teTEpLyh5Mi15MSkqKHgyLXgxKSt4MSx5MT1heGlzeS5taW59ZWxzZSBpZih5MT49eTImJnkyPGF4aXN5Lm1pbil7aWYoeTE8YXhpc3kubWluKWNvbnRpbnVlO3gyPShheGlzeS5taW4teTEpLyh5Mi15MSkqKHgyLXgxKSt4MSx5Mj1heGlzeS5taW59aWYoeTE+PXkyJiZ5MT5heGlzeS5tYXgpe2lmKHkyPmF4aXN5Lm1heCljb250aW51ZTt4MT0oYXhpc3kubWF4LXkxKS8oeTIteTEpKih4Mi14MSkreDEseTE9YXhpc3kubWF4fWVsc2UgaWYoeTI+PXkxJiZ5Mj5heGlzeS5tYXgpe2lmKHkxPmF4aXN5Lm1heCljb250aW51ZTt4Mj0oYXhpc3kubWF4LXkxKS8oeTIteTEpKih4Mi14MSkreDEseTI9YXhpc3kubWF4fWlmKHgyPj14MSYmeDE8YXhpc3gubWluKXtpZih4MjxheGlzeC5taW4pY29udGludWU7eTE9KGF4aXN4Lm1pbi14MSkvKHgyLXgxKSooeTIteTEpK3kxLHgxPWF4aXN4Lm1pbn1lbHNlIGlmKHgxPj14MiYmeDI8YXhpc3gubWluKXtpZih4MTxheGlzeC5taW4pY29udGludWU7eTI9KGF4aXN4Lm1pbi14MSkvKHgyLXgxKSooeTIteTEpK3kxLHgyPWF4aXN4Lm1pbn1pZih4MT49eDImJngxPmF4aXN4Lm1heCl7aWYoeDI+YXhpc3gubWF4KWNvbnRpbnVlO3kxPShheGlzeC5tYXgteDEpLyh4Mi14MSkqKHkyLXkxKSt5MSx4MT1heGlzeC5tYXh9ZWxzZSBpZih4Mj49eDEmJngyPmF4aXN4Lm1heCl7aWYoeDE+YXhpc3gubWF4KWNvbnRpbnVlO3kyPShheGlzeC5tYXgteDEpLyh4Mi14MSkqKHkyLXkxKSt5MSx4Mj1heGlzeC5tYXh9KHgxIT1wcmV2eHx8eTEhPXByZXZ5KSYmY3R4Lm1vdmVUbyhheGlzeC5wMmMoeDEpK3hvZmZzZXQsYXhpc3kucDJjKHkxKSt5b2Zmc2V0KSxwcmV2eD14MixwcmV2eT15MixjdHgubGluZVRvKGF4aXN4LnAyYyh4MikreG9mZnNldCxheGlzeS5wMmMoeTIpK3lvZmZzZXQpfX1jdHguc3Ryb2tlKCl9ZnVuY3Rpb24gcGxvdExpbmVBcmVhKGRhdGFwb2ludHMsYXhpc3gsYXhpc3kpe2Zvcih2YXIgcG9pbnRzPWRhdGFwb2ludHMucG9pbnRzLHBzPWRhdGFwb2ludHMucG9pbnRzaXplLGJvdHRvbT1NYXRoLm1pbihNYXRoLm1heCgwLGF4aXN5Lm1pbiksYXhpc3kubWF4KSxpPTAsYXJlYU9wZW49ITEseXBvcz0xLHNlZ21lbnRTdGFydD0wLHNlZ21lbnRFbmQ9MDs7KXtpZihwcz4wJiZpPnBvaW50cy5sZW5ndGgrcHMpYnJlYWs7aSs9cHM7dmFyIHgxPXBvaW50c1tpLXBzXSx5MT1wb2ludHNbaS1wcyt5cG9zXSx4Mj1wb2ludHNbaV0seTI9cG9pbnRzW2kreXBvc107aWYoYXJlYU9wZW4pe2lmKHBzPjAmJm51bGwhPXgxJiZudWxsPT14Mil7c2VnbWVudEVuZD1pLHBzPS1wcyx5cG9zPTI7Y29udGludWV9aWYoMD5wcyYmaT09c2VnbWVudFN0YXJ0K3BzKXtjdHguZmlsbCgpLGFyZWFPcGVuPSExLHBzPS1wcyx5cG9zPTEsaT1zZWdtZW50U3RhcnQ9c2VnbWVudEVuZCtwcztjb250aW51ZX19aWYobnVsbCE9eDEmJm51bGwhPXgyKXtpZih4Mj49eDEmJngxPGF4aXN4Lm1pbil7aWYoeDI8YXhpc3gubWluKWNvbnRpbnVlO3kxPShheGlzeC5taW4teDEpLyh4Mi14MSkqKHkyLXkxKSt5MSx4MT1heGlzeC5taW59ZWxzZSBpZih4MT49eDImJngyPGF4aXN4Lm1pbil7aWYoeDE8YXhpc3gubWluKWNvbnRpbnVlO3kyPShheGlzeC5taW4teDEpLyh4Mi14MSkqKHkyLXkxKSt5MSx4Mj1heGlzeC5taW59aWYoeDE+PXgyJiZ4MT5heGlzeC5tYXgpe2lmKHgyPmF4aXN4Lm1heCljb250aW51ZTt5MT0oYXhpc3gubWF4LXgxKS8oeDIteDEpKih5Mi15MSkreTEseDE9YXhpc3gubWF4fWVsc2UgaWYoeDI+PXgxJiZ4Mj5heGlzeC5tYXgpe2lmKHgxPmF4aXN4Lm1heCljb250aW51ZTt5Mj0oYXhpc3gubWF4LXgxKS8oeDIteDEpKih5Mi15MSkreTEseDI9YXhpc3gubWF4fWlmKGFyZWFPcGVufHwoY3R4LmJlZ2luUGF0aCgpLGN0eC5tb3ZlVG8oYXhpc3gucDJjKHgxKSxheGlzeS5wMmMoYm90dG9tKSksYXJlYU9wZW49ITApLHkxPj1heGlzeS5tYXgmJnkyPj1heGlzeS5tYXgpY3R4LmxpbmVUbyhheGlzeC5wMmMoeDEpLGF4aXN5LnAyYyhheGlzeS5tYXgpKSxjdHgubGluZVRvKGF4aXN4LnAyYyh4MiksYXhpc3kucDJjKGF4aXN5Lm1heCkpO2Vsc2UgaWYoeTE8PWF4aXN5Lm1pbiYmeTI8PWF4aXN5Lm1pbiljdHgubGluZVRvKGF4aXN4LnAyYyh4MSksYXhpc3kucDJjKGF4aXN5Lm1pbikpLGN0eC5saW5lVG8oYXhpc3gucDJjKHgyKSxheGlzeS5wMmMoYXhpc3kubWluKSk7ZWxzZXt2YXIgeDFvbGQ9eDEseDJvbGQ9eDI7eTI+PXkxJiZ5MTxheGlzeS5taW4mJnkyPj1heGlzeS5taW4/KHgxPShheGlzeS5taW4teTEpLyh5Mi15MSkqKHgyLXgxKSt4MSx5MT1heGlzeS5taW4pOnkxPj15MiYmeTI8YXhpc3kubWluJiZ5MT49YXhpc3kubWluJiYoeDI9KGF4aXN5Lm1pbi15MSkvKHkyLXkxKSooeDIteDEpK3gxLHkyPWF4aXN5Lm1pbikseTE+PXkyJiZ5MT5heGlzeS5tYXgmJnkyPD1heGlzeS5tYXg/KHgxPShheGlzeS5tYXgteTEpLyh5Mi15MSkqKHgyLXgxKSt4MSx5MT1heGlzeS5tYXgpOnkyPj15MSYmeTI+YXhpc3kubWF4JiZ5MTw9YXhpc3kubWF4JiYoeDI9KGF4aXN5Lm1heC15MSkvKHkyLXkxKSooeDIteDEpK3gxLHkyPWF4aXN5Lm1heCkseDEhPXgxb2xkJiZjdHgubGluZVRvKGF4aXN4LnAyYyh4MW9sZCksYXhpc3kucDJjKHkxKSksY3R4LmxpbmVUbyhheGlzeC5wMmMoeDEpLGF4aXN5LnAyYyh5MSkpLGN0eC5saW5lVG8oYXhpc3gucDJjKHgyKSxheGlzeS5wMmMoeTIpKSx4MiE9eDJvbGQmJihjdHgubGluZVRvKGF4aXN4LnAyYyh4MiksYXhpc3kucDJjKHkyKSksY3R4LmxpbmVUbyhheGlzeC5wMmMoeDJvbGQpLGF4aXN5LnAyYyh5MikpKX19fX1jdHguc2F2ZSgpLGN0eC50cmFuc2xhdGUocGxvdE9mZnNldC5sZWZ0LHBsb3RPZmZzZXQudG9wKSxjdHgubGluZUpvaW49InJvdW5kIjt2YXIgbHc9c2VyaWVzLmxpbmVzLmxpbmVXaWR0aCxzdz1zZXJpZXMuc2hhZG93U2l6ZTtpZihsdz4wJiZzdz4wKXtjdHgubGluZVdpZHRoPXN3LGN0eC5zdHJva2VTdHlsZT0icmdiYSgwLDAsMCwwLjEpIjt2YXIgYW5nbGU9TWF0aC5QSS8xODtwbG90TGluZShzZXJpZXMuZGF0YXBvaW50cyxNYXRoLnNpbihhbmdsZSkqKGx3LzIrc3cvMiksTWF0aC5jb3MoYW5nbGUpKihsdy8yK3N3LzIpLHNlcmllcy54YXhpcyxzZXJpZXMueWF4aXMpLGN0eC5saW5lV2lkdGg9c3cvMixwbG90TGluZShzZXJpZXMuZGF0YXBvaW50cyxNYXRoLnNpbihhbmdsZSkqKGx3LzIrc3cvNCksTWF0aC5jb3MoYW5nbGUpKihsdy8yK3N3LzQpLHNlcmllcy54YXhpcyxzZXJpZXMueWF4aXMpfWN0eC5saW5lV2lkdGg9bHcsY3R4LnN0cm9rZVN0eWxlPXNlcmllcy5jb2xvcjt2YXIgZmlsbFN0eWxlPWdldEZpbGxTdHlsZShzZXJpZXMubGluZXMsc2VyaWVzLmNvbG9yLDAscGxvdEhlaWdodCk7ZmlsbFN0eWxlJiYoY3R4LmZpbGxTdHlsZT1maWxsU3R5bGUscGxvdExpbmVBcmVhKHNlcmllcy5kYXRhcG9pbnRzLHNlcmllcy54YXhpcyxzZXJpZXMueWF4aXMpKSxsdz4wJiZwbG90TGluZShzZXJpZXMuZGF0YXBvaW50cywwLDAsc2VyaWVzLnhheGlzLHNlcmllcy55YXhpcyksY3R4LnJlc3RvcmUoKX1mdW5jdGlvbiBkcmF3U2VyaWVzUG9pbnRzKHNlcmllcyl7ZnVuY3Rpb24gcGxvdFBvaW50cyhkYXRhcG9pbnRzLHJhZGl1cyxmaWxsU3R5bGUsb2Zmc2V0LHNoYWRvdyxheGlzeCxheGlzeSxzeW1ib2wpe2Zvcih2YXIgcG9pbnRzPWRhdGFwb2ludHMucG9pbnRzLHBzPWRhdGFwb2ludHMucG9pbnRzaXplLGk9MDtpPHBvaW50cy5sZW5ndGg7aSs9cHMpe3ZhciB4PXBvaW50c1tpXSx5PXBvaW50c1tpKzFdO251bGw9PXh8fHg8YXhpc3gubWlufHx4PmF4aXN4Lm1heHx8eTxheGlzeS5taW58fHk+YXhpc3kubWF4fHwoY3R4LmJlZ2luUGF0aCgpLHg9YXhpc3gucDJjKHgpLHk9YXhpc3kucDJjKHkpK29mZnNldCwiY2lyY2xlIj09c3ltYm9sP2N0eC5hcmMoeCx5LHJhZGl1cywwLHNoYWRvdz9NYXRoLlBJOjIqTWF0aC5QSSwhMSk6c3ltYm9sKGN0eCx4LHkscmFkaXVzLHNoYWRvdyksY3R4LmNsb3NlUGF0aCgpLGZpbGxTdHlsZSYmKGN0eC5maWxsU3R5bGU9ZmlsbFN0eWxlLGN0eC5maWxsKCkpLGN0eC5zdHJva2UoKSl9fWN0eC5zYXZlKCksY3R4LnRyYW5zbGF0ZShwbG90T2Zmc2V0LmxlZnQscGxvdE9mZnNldC50b3ApO3ZhciBsdz1zZXJpZXMucG9pbnRzLmxpbmVXaWR0aCxzdz1zZXJpZXMuc2hhZG93U2l6ZSxyYWRpdXM9c2VyaWVzLnBvaW50cy5yYWRpdXMsc3ltYm9sPXNlcmllcy5wb2ludHMuc3ltYm9sO2lmKDA9PWx3JiYobHc9MWUtNCksbHc+MCYmc3c+MCl7dmFyIHc9c3cvMjtjdHgubGluZVdpZHRoPXcsY3R4LnN0cm9rZVN0eWxlPSJyZ2JhKDAsMCwwLDAuMSkiLHBsb3RQb2ludHMoc2VyaWVzLmRhdGFwb2ludHMscmFkaXVzLG51bGwsdyt3LzIsITAsc2VyaWVzLnhheGlzLHNlcmllcy55YXhpcyxzeW1ib2wpLGN0eC5zdHJva2VTdHlsZT0icmdiYSgwLDAsMCwwLjIpIixwbG90UG9pbnRzKHNlcmllcy5kYXRhcG9pbnRzLHJhZGl1cyxudWxsLHcvMiwhMCxzZXJpZXMueGF4aXMsc2VyaWVzLnlheGlzLHN5bWJvbCl9Y3R4LmxpbmVXaWR0aD1sdyxjdHguc3Ryb2tlU3R5bGU9c2VyaWVzLmNvbG9yLHBsb3RQb2ludHMoc2VyaWVzLmRhdGFwb2ludHMscmFkaXVzLGdldEZpbGxTdHlsZShzZXJpZXMucG9pbnRzLHNlcmllcy5jb2xvciksMCwhMSxzZXJpZXMueGF4aXMsc2VyaWVzLnlheGlzLHN5bWJvbCksY3R4LnJlc3RvcmUoKX1mdW5jdGlvbiBkcmF3QmFyKHgseSxiLGJhckxlZnQsYmFyUmlnaHQsZmlsbFN0eWxlQ2FsbGJhY2ssYXhpc3gsYXhpc3ksYyxob3Jpem9udGFsLGxpbmVXaWR0aCl7dmFyIGxlZnQscmlnaHQsYm90dG9tLHRvcCxkcmF3TGVmdCxkcmF3UmlnaHQsZHJhd1RvcCxkcmF3Qm90dG9tLHRtcDtob3Jpem9udGFsPyhkcmF3Qm90dG9tPWRyYXdSaWdodD1kcmF3VG9wPSEwLGRyYXdMZWZ0PSExLGxlZnQ9YixyaWdodD14LHRvcD15K2JhckxlZnQsYm90dG9tPXkrYmFyUmlnaHQsbGVmdD5yaWdodCYmKHRtcD1yaWdodCxyaWdodD1sZWZ0LGxlZnQ9dG1wLGRyYXdMZWZ0PSEwLGRyYXdSaWdodD0hMSkpOihkcmF3TGVmdD1kcmF3UmlnaHQ9ZHJhd1RvcD0hMCxkcmF3Qm90dG9tPSExLGxlZnQ9eCtiYXJMZWZ0LHJpZ2h0PXgrYmFyUmlnaHQsYm90dG9tPWIsdG9wPXksYm90dG9tPnRvcCYmKHRtcD10b3AsdG9wPWJvdHRvbSxib3R0b209dG1wLGRyYXdCb3R0b209ITAsZHJhd1RvcD0hMSkpLHJpZ2h0PGF4aXN4Lm1pbnx8bGVmdD5heGlzeC5tYXh8fHRvcDxheGlzeS5taW58fGJvdHRvbT5heGlzeS5tYXh8fChsZWZ0PGF4aXN4Lm1pbiYmKGxlZnQ9YXhpc3gubWluLGRyYXdMZWZ0PSExKSxyaWdodD5heGlzeC5tYXgmJihyaWdodD1heGlzeC5tYXgsZHJhd1JpZ2h0PSExKSxib3R0b208YXhpc3kubWluJiYoYm90dG9tPWF4aXN5Lm1pbixkcmF3Qm90dG9tPSExKSx0b3A+YXhpc3kubWF4JiYodG9wPWF4aXN5Lm1heCxkcmF3VG9wPSExKSxsZWZ0PWF4aXN4LnAyYyhsZWZ0KSxib3R0b209YXhpc3kucDJjKGJvdHRvbSkscmlnaHQ9YXhpc3gucDJjKHJpZ2h0KSx0b3A9YXhpc3kucDJjKHRvcCksZmlsbFN0eWxlQ2FsbGJhY2smJihjLmZpbGxTdHlsZT1maWxsU3R5bGVDYWxsYmFjayhib3R0b20sdG9wKSxjLmZpbGxSZWN0KGxlZnQsdG9wLHJpZ2h0LWxlZnQsYm90dG9tLXRvcCkpLGxpbmVXaWR0aD4wJiYoZHJhd0xlZnR8fGRyYXdSaWdodHx8ZHJhd1RvcHx8ZHJhd0JvdHRvbSkmJihjLmJlZ2luUGF0aCgpLGMubW92ZVRvKGxlZnQsYm90dG9tKSxkcmF3TGVmdD9jLmxpbmVUbyhsZWZ0LHRvcCk6Yy5tb3ZlVG8obGVmdCx0b3ApLGRyYXdUb3A/Yy5saW5lVG8ocmlnaHQsdG9wKTpjLm1vdmVUbyhyaWdodCx0b3ApLGRyYXdSaWdodD9jLmxpbmVUbyhyaWdodCxib3R0b20pOmMubW92ZVRvKHJpZ2h0LGJvdHRvbSksZHJhd0JvdHRvbT9jLmxpbmVUbyhsZWZ0LGJvdHRvbSk6Yy5tb3ZlVG8obGVmdCxib3R0b20pLGMuc3Ryb2tlKCkpKX1mdW5jdGlvbiBkcmF3U2VyaWVzQmFycyhzZXJpZXMpe2Z1bmN0aW9uIHBsb3RCYXJzKGRhdGFwb2ludHMsYmFyTGVmdCxiYXJSaWdodCxmaWxsU3R5bGVDYWxsYmFjayxheGlzeCxheGlzeSl7Zm9yKHZhciBwb2ludHM9ZGF0YXBvaW50cy5wb2ludHMscHM9ZGF0YXBvaW50cy5wb2ludHNpemUsaT0wO2k8cG9pbnRzLmxlbmd0aDtpKz1wcyludWxsIT1wb2ludHNbaV0mJmRyYXdCYXIocG9pbnRzW2ldLHBvaW50c1tpKzFdLHBvaW50c1tpKzJdLGJhckxlZnQsYmFyUmlnaHQsZmlsbFN0eWxlQ2FsbGJhY2ssYXhpc3gsYXhpc3ksY3R4LHNlcmllcy5iYXJzLmhvcml6b250YWwsc2VyaWVzLmJhcnMubGluZVdpZHRoKX1jdHguc2F2ZSgpLGN0eC50cmFuc2xhdGUocGxvdE9mZnNldC5sZWZ0LHBsb3RPZmZzZXQudG9wKSxjdHgubGluZVdpZHRoPXNlcmllcy5iYXJzLmxpbmVXaWR0aCxjdHguc3Ryb2tlU3R5bGU9c2VyaWVzLmNvbG9yO3ZhciBiYXJMZWZ0O3N3aXRjaChzZXJpZXMuYmFycy5hbGlnbil7Y2FzZSJsZWZ0IjpiYXJMZWZ0PTA7YnJlYWs7Y2FzZSJyaWdodCI6YmFyTGVmdD0tc2VyaWVzLmJhcnMuYmFyV2lkdGg7YnJlYWs7ZGVmYXVsdDpiYXJMZWZ0PS1zZXJpZXMuYmFycy5iYXJXaWR0aC8yfXZhciBmaWxsU3R5bGVDYWxsYmFjaz1zZXJpZXMuYmFycy5maWxsP2Z1bmN0aW9uKGJvdHRvbSx0b3Ape3JldHVybiBnZXRGaWxsU3R5bGUoc2VyaWVzLmJhcnMsc2VyaWVzLmNvbG9yLGJvdHRvbSx0b3ApfTpudWxsO3Bsb3RCYXJzKHNlcmllcy5kYXRhcG9pbnRzLGJhckxlZnQsYmFyTGVmdCtzZXJpZXMuYmFycy5iYXJXaWR0aCxmaWxsU3R5bGVDYWxsYmFjayxzZXJpZXMueGF4aXMsc2VyaWVzLnlheGlzKSxjdHgucmVzdG9yZSgpfWZ1bmN0aW9uIGdldEZpbGxTdHlsZShmaWxsb3B0aW9ucyxzZXJpZXNDb2xvcixib3R0b20sdG9wKXt2YXIgZmlsbD1maWxsb3B0aW9ucy5maWxsO2lmKCFmaWxsKXJldHVybiBudWxsO2lmKGZpbGxvcHRpb25zLmZpbGxDb2xvcilyZXR1cm4gZ2V0Q29sb3JPckdyYWRpZW50KGZpbGxvcHRpb25zLmZpbGxDb2xvcixib3R0b20sdG9wLHNlcmllc0NvbG9yKTt2YXIgYz0kLmNvbG9yLnBhcnNlKHNlcmllc0NvbG9yKTtyZXR1cm4gYy5hPSJudW1iZXIiPT10eXBlb2YgZmlsbD9maWxsOi40LGMubm9ybWFsaXplKCksYy50b1N0cmluZygpfWZ1bmN0aW9uIGluc2VydExlZ2VuZCgpe2lmKG51bGwhPW9wdGlvbnMubGVnZW5kLmNvbnRhaW5lcj8kKG9wdGlvbnMubGVnZW5kLmNvbnRhaW5lcikuaHRtbCgiIik6cGxhY2Vob2xkZXIuZmluZCgiLmxlZ2VuZCIpLnJlbW92ZSgpLG9wdGlvbnMubGVnZW5kLnNob3cpe2Zvcih2YXIgcyxsYWJlbCxmcmFnbWVudHM9W10sZW50cmllcz1bXSxyb3dTdGFydGVkPSExLGxmPW9wdGlvbnMubGVnZW5kLmxhYmVsRm9ybWF0dGVyLGk9MDtpPHNlcmllcy5sZW5ndGg7KytpKXM9c2VyaWVzW2ldLHMubGFiZWwmJihsYWJlbD1sZj9sZihzLmxhYmVsLHMpOnMubGFiZWwsbGFiZWwmJmVudHJpZXMucHVzaCh7bGFiZWw6bGFiZWwsY29sb3I6cy5jb2xvcn0pKTtpZihvcHRpb25zLmxlZ2VuZC5zb3J0ZWQpaWYoJC5pc0Z1bmN0aW9uKG9wdGlvbnMubGVnZW5kLnNvcnRlZCkpZW50cmllcy5zb3J0KG9wdGlvbnMubGVnZW5kLnNvcnRlZCk7ZWxzZSBpZigicmV2ZXJzZSI9PW9wdGlvbnMubGVnZW5kLnNvcnRlZCllbnRyaWVzLnJldmVyc2UoKTtlbHNle3ZhciBhc2NlbmRpbmc9ImRlc2NlbmRpbmciIT1vcHRpb25zLmxlZ2VuZC5zb3J0ZWQ7ZW50cmllcy5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEubGFiZWw9PWIubGFiZWw/MDphLmxhYmVsPGIubGFiZWwhPWFzY2VuZGluZz8xOi0xfSl9Zm9yKHZhciBpPTA7aTxlbnRyaWVzLmxlbmd0aDsrK2kpe3ZhciBlbnRyeT1lbnRyaWVzW2ldO2klb3B0aW9ucy5sZWdlbmQubm9Db2x1bW5zPT0wJiYocm93U3RhcnRlZCYmZnJhZ21lbnRzLnB1c2goIjwvdHI+IiksZnJhZ21lbnRzLnB1c2goIjx0cj4iKSxyb3dTdGFydGVkPSEwKSxmcmFnbWVudHMucHVzaCgnPHRkIGNsYXNzPSJsZWdlbmRDb2xvckJveCI+PGRpdiBzdHlsZT0iYm9yZGVyOjFweCBzb2xpZCAnK29wdGlvbnMubGVnZW5kLmxhYmVsQm94Qm9yZGVyQ29sb3IrJztwYWRkaW5nOjFweCI+PGRpdiBzdHlsZT0id2lkdGg6NHB4O2hlaWdodDowO2JvcmRlcjo1cHggc29saWQgJytlbnRyeS5jb2xvcisnO292ZXJmbG93OmhpZGRlbiI+PC9kaXY+PC9kaXY+PC90ZD48dGQgY2xhc3M9ImxlZ2VuZExhYmVsIj4nK2VudHJ5LmxhYmVsKyI8L3RkPiIpfWlmKHJvd1N0YXJ0ZWQmJmZyYWdtZW50cy5wdXNoKCI8L3RyPiIpLDAhPWZyYWdtZW50cy5sZW5ndGgpe3ZhciB0YWJsZT0nPHRhYmxlIHN0eWxlPSJmb250LXNpemU6c21hbGxlcjtjb2xvcjonK29wdGlvbnMuZ3JpZC5jb2xvcisnIj4nK2ZyYWdtZW50cy5qb2luKCIiKSsiPC90YWJsZT4iO2lmKG51bGwhPW9wdGlvbnMubGVnZW5kLmNvbnRhaW5lcikkKG9wdGlvbnMubGVnZW5kLmNvbnRhaW5lcikuaHRtbCh0YWJsZSk7ZWxzZXt2YXIgcG9zPSIiLHA9b3B0aW9ucy5sZWdlbmQucG9zaXRpb24sbT1vcHRpb25zLmxlZ2VuZC5tYXJnaW47Cm51bGw9PW1bMF0mJihtPVttLG1dKSwibiI9PXAuY2hhckF0KDApP3Bvcys9InRvcDoiKyhtWzFdK3Bsb3RPZmZzZXQudG9wKSsicHg7IjoicyI9PXAuY2hhckF0KDApJiYocG9zKz0iYm90dG9tOiIrKG1bMV0rcGxvdE9mZnNldC5ib3R0b20pKyJweDsiKSwiZSI9PXAuY2hhckF0KDEpP3Bvcys9InJpZ2h0OiIrKG1bMF0rcGxvdE9mZnNldC5yaWdodCkrInB4OyI6InciPT1wLmNoYXJBdCgxKSYmKHBvcys9ImxlZnQ6IisobVswXStwbG90T2Zmc2V0LmxlZnQpKyJweDsiKTt2YXIgbGVnZW5kPSQoJzxkaXYgY2xhc3M9ImxlZ2VuZCI+Jyt0YWJsZS5yZXBsYWNlKCdzdHlsZT0iJywnc3R5bGU9InBvc2l0aW9uOmFic29sdXRlOycrcG9zKyI7IikrIjwvZGl2PiIpLmFwcGVuZFRvKHBsYWNlaG9sZGVyKTtpZigwIT1vcHRpb25zLmxlZ2VuZC5iYWNrZ3JvdW5kT3BhY2l0eSl7dmFyIGM9b3B0aW9ucy5sZWdlbmQuYmFja2dyb3VuZENvbG9yO251bGw9PWMmJihjPW9wdGlvbnMuZ3JpZC5iYWNrZ3JvdW5kQ29sb3IsYz1jJiYic3RyaW5nIj09dHlwZW9mIGM/JC5jb2xvci5wYXJzZShjKTokLmNvbG9yLmV4dHJhY3QobGVnZW5kLCJiYWNrZ3JvdW5kLWNvbG9yIiksYy5hPTEsYz1jLnRvU3RyaW5nKCkpO3ZhciBkaXY9bGVnZW5kLmNoaWxkcmVuKCk7JCgnPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7d2lkdGg6JytkaXYud2lkdGgoKSsicHg7aGVpZ2h0OiIrZGl2LmhlaWdodCgpKyJweDsiK3BvcysiYmFja2dyb3VuZC1jb2xvcjoiK2MrJzsiPiA8L2Rpdj4nKS5wcmVwZW5kVG8obGVnZW5kKS5jc3MoIm9wYWNpdHkiLG9wdGlvbnMubGVnZW5kLmJhY2tncm91bmRPcGFjaXR5KX19fX19ZnVuY3Rpb24gZmluZE5lYXJieUl0ZW0obW91c2VYLG1vdXNlWSxzZXJpZXNGaWx0ZXIpe3ZhciBpLGoscHMsbWF4RGlzdGFuY2U9b3B0aW9ucy5ncmlkLm1vdXNlQWN0aXZlUmFkaXVzLHNtYWxsZXN0RGlzdGFuY2U9bWF4RGlzdGFuY2UqbWF4RGlzdGFuY2UrMSxpdGVtPW51bGw7Zm9yKGk9c2VyaWVzLmxlbmd0aC0xO2k+PTA7LS1pKWlmKHNlcmllc0ZpbHRlcihzZXJpZXNbaV0pKXt2YXIgcz1zZXJpZXNbaV0sYXhpc3g9cy54YXhpcyxheGlzeT1zLnlheGlzLHBvaW50cz1zLmRhdGFwb2ludHMucG9pbnRzLG14PWF4aXN4LmMycChtb3VzZVgpLG15PWF4aXN5LmMycChtb3VzZVkpLG1heHg9bWF4RGlzdGFuY2UvYXhpc3guc2NhbGUsbWF4eT1tYXhEaXN0YW5jZS9heGlzeS5zY2FsZTtpZihwcz1zLmRhdGFwb2ludHMucG9pbnRzaXplLGF4aXN4Lm9wdGlvbnMuaW52ZXJzZVRyYW5zZm9ybSYmKG1heHg9TnVtYmVyLk1BWF9WQUxVRSksYXhpc3kub3B0aW9ucy5pbnZlcnNlVHJhbnNmb3JtJiYobWF4eT1OdW1iZXIuTUFYX1ZBTFVFKSxzLmxpbmVzLnNob3d8fHMucG9pbnRzLnNob3cpZm9yKGo9MDtqPHBvaW50cy5sZW5ndGg7ais9cHMpe3ZhciB4PXBvaW50c1tqXSx5PXBvaW50c1tqKzFdO2lmKG51bGwhPXgmJiEoeC1teD5tYXh4fHwtbWF4eD54LW14fHx5LW15Pm1heHl8fC1tYXh5PnktbXkpKXt2YXIgZHg9TWF0aC5hYnMoYXhpc3gucDJjKHgpLW1vdXNlWCksZHk9TWF0aC5hYnMoYXhpc3kucDJjKHkpLW1vdXNlWSksZGlzdD1keCpkeCtkeSpkeTtzbWFsbGVzdERpc3RhbmNlPmRpc3QmJihzbWFsbGVzdERpc3RhbmNlPWRpc3QsaXRlbT1baSxqL3BzXSl9fWlmKHMuYmFycy5zaG93JiYhaXRlbSl7dmFyIGJhckxlZnQsYmFyUmlnaHQ7c3dpdGNoKHMuYmFycy5hbGlnbil7Y2FzZSJsZWZ0IjpiYXJMZWZ0PTA7YnJlYWs7Y2FzZSJyaWdodCI6YmFyTGVmdD0tcy5iYXJzLmJhcldpZHRoO2JyZWFrO2RlZmF1bHQ6YmFyTGVmdD0tcy5iYXJzLmJhcldpZHRoLzJ9Zm9yKGJhclJpZ2h0PWJhckxlZnQrcy5iYXJzLmJhcldpZHRoLGo9MDtqPHBvaW50cy5sZW5ndGg7ais9cHMpe3ZhciB4PXBvaW50c1tqXSx5PXBvaW50c1tqKzFdLGI9cG9pbnRzW2orMl07bnVsbCE9eCYmKHNlcmllc1tpXS5iYXJzLmhvcml6b250YWw/bXg8PU1hdGgubWF4KGIseCkmJm14Pj1NYXRoLm1pbihiLHgpJiZteT49eStiYXJMZWZ0JiZ5K2JhclJpZ2h0Pj1teTpteD49eCtiYXJMZWZ0JiZ4K2JhclJpZ2h0Pj1teCYmbXk+PU1hdGgubWluKGIseSkmJm15PD1NYXRoLm1heChiLHkpKSYmKGl0ZW09W2ksai9wc10pfX19cmV0dXJuIGl0ZW0/KGk9aXRlbVswXSxqPWl0ZW1bMV0scHM9c2VyaWVzW2ldLmRhdGFwb2ludHMucG9pbnRzaXplLHtkYXRhcG9pbnQ6c2VyaWVzW2ldLmRhdGFwb2ludHMucG9pbnRzLnNsaWNlKGoqcHMsKGorMSkqcHMpLGRhdGFJbmRleDpqLHNlcmllczpzZXJpZXNbaV0sc2VyaWVzSW5kZXg6aX0pOm51bGx9ZnVuY3Rpb24gb25Nb3VzZU1vdmUoZSl7b3B0aW9ucy5ncmlkLmhvdmVyYWJsZSYmdHJpZ2dlckNsaWNrSG92ZXJFdmVudCgicGxvdGhvdmVyIixlLGZ1bmN0aW9uKHMpe3JldHVybiAwIT1zLmhvdmVyYWJsZX0pfWZ1bmN0aW9uIG9uTW91c2VMZWF2ZShlKXtvcHRpb25zLmdyaWQuaG92ZXJhYmxlJiZ0cmlnZ2VyQ2xpY2tIb3ZlckV2ZW50KCJwbG90aG92ZXIiLGUsZnVuY3Rpb24oKXtyZXR1cm4hMX0pfWZ1bmN0aW9uIG9uQ2xpY2soZSl7dHJpZ2dlckNsaWNrSG92ZXJFdmVudCgicGxvdGNsaWNrIixlLGZ1bmN0aW9uKHMpe3JldHVybiAwIT1zLmNsaWNrYWJsZX0pfWZ1bmN0aW9uIHRyaWdnZXJDbGlja0hvdmVyRXZlbnQoZXZlbnRuYW1lLGV2ZW50LHNlcmllc0ZpbHRlcil7dmFyIG9mZnNldD1ldmVudEhvbGRlci5vZmZzZXQoKSxjYW52YXNYPWV2ZW50LnBhZ2VYLW9mZnNldC5sZWZ0LXBsb3RPZmZzZXQubGVmdCxjYW52YXNZPWV2ZW50LnBhZ2VZLW9mZnNldC50b3AtcGxvdE9mZnNldC50b3AscG9zPWNhbnZhc1RvQXhpc0Nvb3Jkcyh7bGVmdDpjYW52YXNYLHRvcDpjYW52YXNZfSk7cG9zLnBhZ2VYPWV2ZW50LnBhZ2VYLHBvcy5wYWdlWT1ldmVudC5wYWdlWTt2YXIgaXRlbT1maW5kTmVhcmJ5SXRlbShjYW52YXNYLGNhbnZhc1ksc2VyaWVzRmlsdGVyKTtpZihpdGVtJiYoaXRlbS5wYWdlWD1wYXJzZUludChpdGVtLnNlcmllcy54YXhpcy5wMmMoaXRlbS5kYXRhcG9pbnRbMF0pK29mZnNldC5sZWZ0K3Bsb3RPZmZzZXQubGVmdCwxMCksaXRlbS5wYWdlWT1wYXJzZUludChpdGVtLnNlcmllcy55YXhpcy5wMmMoaXRlbS5kYXRhcG9pbnRbMV0pK29mZnNldC50b3ArcGxvdE9mZnNldC50b3AsMTApKSxvcHRpb25zLmdyaWQuYXV0b0hpZ2hsaWdodCl7Zm9yKHZhciBpPTA7aTxoaWdobGlnaHRzLmxlbmd0aDsrK2kpe3ZhciBoPWhpZ2hsaWdodHNbaV07aC5hdXRvIT1ldmVudG5hbWV8fGl0ZW0mJmguc2VyaWVzPT1pdGVtLnNlcmllcyYmaC5wb2ludFswXT09aXRlbS5kYXRhcG9pbnRbMF0mJmgucG9pbnRbMV09PWl0ZW0uZGF0YXBvaW50WzFdfHx1bmhpZ2hsaWdodChoLnNlcmllcyxoLnBvaW50KX1pdGVtJiZoaWdobGlnaHQoaXRlbS5zZXJpZXMsaXRlbS5kYXRhcG9pbnQsZXZlbnRuYW1lKX1wbGFjZWhvbGRlci50cmlnZ2VyKGV2ZW50bmFtZSxbcG9zLGl0ZW1dKX1mdW5jdGlvbiB0cmlnZ2VyUmVkcmF3T3ZlcmxheSgpe3ZhciB0PW9wdGlvbnMuaW50ZXJhY3Rpb24ucmVkcmF3T3ZlcmxheUludGVydmFsO3JldHVybi0xPT10P3ZvaWQgZHJhd092ZXJsYXkoKTp2b2lkKHJlZHJhd1RpbWVvdXR8fChyZWRyYXdUaW1lb3V0PXNldFRpbWVvdXQoZHJhd092ZXJsYXksdCkpKX1mdW5jdGlvbiBkcmF3T3ZlcmxheSgpe3JlZHJhd1RpbWVvdXQ9bnVsbCxvY3R4LnNhdmUoKSxvdmVybGF5LmNsZWFyKCksb2N0eC50cmFuc2xhdGUocGxvdE9mZnNldC5sZWZ0LHBsb3RPZmZzZXQudG9wKTt2YXIgaSxoaTtmb3IoaT0wO2k8aGlnaGxpZ2h0cy5sZW5ndGg7KytpKWhpPWhpZ2hsaWdodHNbaV0saGkuc2VyaWVzLmJhcnMuc2hvdz9kcmF3QmFySGlnaGxpZ2h0KGhpLnNlcmllcyxoaS5wb2ludCk6ZHJhd1BvaW50SGlnaGxpZ2h0KGhpLnNlcmllcyxoaS5wb2ludCk7b2N0eC5yZXN0b3JlKCksZXhlY3V0ZUhvb2tzKGhvb2tzLmRyYXdPdmVybGF5LFtvY3R4XSl9ZnVuY3Rpb24gaGlnaGxpZ2h0KHMscG9pbnQsYXV0byl7aWYoIm51bWJlciI9PXR5cGVvZiBzJiYocz1zZXJpZXNbc10pLCJudW1iZXIiPT10eXBlb2YgcG9pbnQpe3ZhciBwcz1zLmRhdGFwb2ludHMucG9pbnRzaXplO3BvaW50PXMuZGF0YXBvaW50cy5wb2ludHMuc2xpY2UocHMqcG9pbnQscHMqKHBvaW50KzEpKX12YXIgaT1pbmRleE9mSGlnaGxpZ2h0KHMscG9pbnQpOy0xPT1pPyhoaWdobGlnaHRzLnB1c2goe3NlcmllczpzLHBvaW50OnBvaW50LGF1dG86YXV0b30pLHRyaWdnZXJSZWRyYXdPdmVybGF5KCkpOmF1dG98fChoaWdobGlnaHRzW2ldLmF1dG89ITEpfWZ1bmN0aW9uIHVuaGlnaGxpZ2h0KHMscG9pbnQpe2lmKG51bGw9PXMmJm51bGw9PXBvaW50KXJldHVybiBoaWdobGlnaHRzPVtdLHZvaWQgdHJpZ2dlclJlZHJhd092ZXJsYXkoKTtpZigibnVtYmVyIj09dHlwZW9mIHMmJihzPXNlcmllc1tzXSksIm51bWJlciI9PXR5cGVvZiBwb2ludCl7dmFyIHBzPXMuZGF0YXBvaW50cy5wb2ludHNpemU7cG9pbnQ9cy5kYXRhcG9pbnRzLnBvaW50cy5zbGljZShwcypwb2ludCxwcyoocG9pbnQrMSkpfXZhciBpPWluZGV4T2ZIaWdobGlnaHQocyxwb2ludCk7LTEhPWkmJihoaWdobGlnaHRzLnNwbGljZShpLDEpLHRyaWdnZXJSZWRyYXdPdmVybGF5KCkpfWZ1bmN0aW9uIGluZGV4T2ZIaWdobGlnaHQocyxwKXtmb3IodmFyIGk9MDtpPGhpZ2hsaWdodHMubGVuZ3RoOysraSl7dmFyIGg9aGlnaGxpZ2h0c1tpXTtpZihoLnNlcmllcz09cyYmaC5wb2ludFswXT09cFswXSYmaC5wb2ludFsxXT09cFsxXSlyZXR1cm4gaX1yZXR1cm4tMX1mdW5jdGlvbiBkcmF3UG9pbnRIaWdobGlnaHQoc2VyaWVzLHBvaW50KXt2YXIgeD1wb2ludFswXSx5PXBvaW50WzFdLGF4aXN4PXNlcmllcy54YXhpcyxheGlzeT1zZXJpZXMueWF4aXMsaGlnaGxpZ2h0Q29sb3I9InN0cmluZyI9PXR5cGVvZiBzZXJpZXMuaGlnaGxpZ2h0Q29sb3I/c2VyaWVzLmhpZ2hsaWdodENvbG9yOiQuY29sb3IucGFyc2Uoc2VyaWVzLmNvbG9yKS5zY2FsZSgiYSIsLjUpLnRvU3RyaW5nKCk7aWYoISh4PGF4aXN4Lm1pbnx8eD5heGlzeC5tYXh8fHk8YXhpc3kubWlufHx5PmF4aXN5Lm1heCkpe3ZhciBwb2ludFJhZGl1cz1zZXJpZXMucG9pbnRzLnJhZGl1cytzZXJpZXMucG9pbnRzLmxpbmVXaWR0aC8yO29jdHgubGluZVdpZHRoPXBvaW50UmFkaXVzLG9jdHguc3Ryb2tlU3R5bGU9aGlnaGxpZ2h0Q29sb3I7dmFyIHJhZGl1cz0xLjUqcG9pbnRSYWRpdXM7eD1heGlzeC5wMmMoeCkseT1heGlzeS5wMmMoeSksb2N0eC5iZWdpblBhdGgoKSwiY2lyY2xlIj09c2VyaWVzLnBvaW50cy5zeW1ib2w/b2N0eC5hcmMoeCx5LHJhZGl1cywwLDIqTWF0aC5QSSwhMSk6c2VyaWVzLnBvaW50cy5zeW1ib2wob2N0eCx4LHkscmFkaXVzLCExKSxvY3R4LmNsb3NlUGF0aCgpLG9jdHguc3Ryb2tlKCl9fWZ1bmN0aW9uIGRyYXdCYXJIaWdobGlnaHQoc2VyaWVzLHBvaW50KXt2YXIgYmFyTGVmdCxoaWdobGlnaHRDb2xvcj0ic3RyaW5nIj09dHlwZW9mIHNlcmllcy5oaWdobGlnaHRDb2xvcj9zZXJpZXMuaGlnaGxpZ2h0Q29sb3I6JC5jb2xvci5wYXJzZShzZXJpZXMuY29sb3IpLnNjYWxlKCJhIiwuNSkudG9TdHJpbmcoKSxmaWxsU3R5bGU9aGlnaGxpZ2h0Q29sb3I7c3dpdGNoKHNlcmllcy5iYXJzLmFsaWduKXtjYXNlImxlZnQiOmJhckxlZnQ9MDticmVhaztjYXNlInJpZ2h0IjpiYXJMZWZ0PS1zZXJpZXMuYmFycy5iYXJXaWR0aDticmVhaztkZWZhdWx0OmJhckxlZnQ9LXNlcmllcy5iYXJzLmJhcldpZHRoLzJ9b2N0eC5saW5lV2lkdGg9c2VyaWVzLmJhcnMubGluZVdpZHRoLG9jdHguc3Ryb2tlU3R5bGU9aGlnaGxpZ2h0Q29sb3IsZHJhd0Jhcihwb2ludFswXSxwb2ludFsxXSxwb2ludFsyXXx8MCxiYXJMZWZ0LGJhckxlZnQrc2VyaWVzLmJhcnMuYmFyV2lkdGgsZnVuY3Rpb24oKXtyZXR1cm4gZmlsbFN0eWxlfSxzZXJpZXMueGF4aXMsc2VyaWVzLnlheGlzLG9jdHgsc2VyaWVzLmJhcnMuaG9yaXpvbnRhbCxzZXJpZXMuYmFycy5saW5lV2lkdGgpfWZ1bmN0aW9uIGdldENvbG9yT3JHcmFkaWVudChzcGVjLGJvdHRvbSx0b3AsZGVmYXVsdENvbG9yKXtpZigic3RyaW5nIj09dHlwZW9mIHNwZWMpcmV0dXJuIHNwZWM7Zm9yKHZhciBncmFkaWVudD1jdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCx0b3AsMCxib3R0b20pLGk9MCxsPXNwZWMuY29sb3JzLmxlbmd0aDtsPmk7KytpKXt2YXIgYz1zcGVjLmNvbG9yc1tpXTtpZigic3RyaW5nIiE9dHlwZW9mIGMpe3ZhciBjbz0kLmNvbG9yLnBhcnNlKGRlZmF1bHRDb2xvcik7bnVsbCE9Yy5icmlnaHRuZXNzJiYoY289Y28uc2NhbGUoInJnYiIsYy5icmlnaHRuZXNzKSksbnVsbCE9Yy5vcGFjaXR5JiYoY28uYSo9Yy5vcGFjaXR5KSxjPWNvLnRvU3RyaW5nKCl9Z3JhZGllbnQuYWRkQ29sb3JTdG9wKGkvKGwtMSksYyl9cmV0dXJuIGdyYWRpZW50fXZhciBzZXJpZXM9W10sb3B0aW9ucz17Y29sb3JzOlsiI2VkYzI0MCIsIiNhZmQ4ZjgiLCIjY2I0YjRiIiwiIzRkYTc0ZCIsIiM5NDQwZWQiXSxsZWdlbmQ6e3Nob3c6ITAsbm9Db2x1bW5zOjEsbGFiZWxGb3JtYXR0ZXI6bnVsbCxsYWJlbEJveEJvcmRlckNvbG9yOiIjY2NjIixjb250YWluZXI6bnVsbCxwb3NpdGlvbjoibmUiLG1hcmdpbjo1LGJhY2tncm91bmRDb2xvcjpudWxsLGJhY2tncm91bmRPcGFjaXR5Oi44NSxzb3J0ZWQ6bnVsbH0seGF4aXM6e3Nob3c6bnVsbCxwb3NpdGlvbjoiYm90dG9tIixtb2RlOm51bGwsZm9udDpudWxsLGNvbG9yOm51bGwsdGlja0NvbG9yOm51bGwsdHJhbnNmb3JtOm51bGwsaW52ZXJzZVRyYW5zZm9ybTpudWxsLG1pbjpudWxsLG1heDpudWxsLGF1dG9zY2FsZU1hcmdpbjpudWxsLHRpY2tzOm51bGwsdGlja0Zvcm1hdHRlcjpudWxsLGxhYmVsV2lkdGg6bnVsbCxsYWJlbEhlaWdodDpudWxsLHJlc2VydmVTcGFjZTpudWxsLHRpY2tMZW5ndGg6bnVsbCxhbGlnblRpY2tzV2l0aEF4aXM6bnVsbCx0aWNrRGVjaW1hbHM6bnVsbCx0aWNrU2l6ZTpudWxsLG1pblRpY2tTaXplOm51bGx9LHlheGlzOnthdXRvc2NhbGVNYXJnaW46LjAyLHBvc2l0aW9uOiJsZWZ0In0seGF4ZXM6W10seWF4ZXM6W10sc2VyaWVzOntwb2ludHM6e3Nob3c6ITEscmFkaXVzOjMsbGluZVdpZHRoOjIsZmlsbDohMCxmaWxsQ29sb3I6IiNmZmZmZmYiLHN5bWJvbDoiY2lyY2xlIn0sbGluZXM6e2xpbmVXaWR0aDoyLGZpbGw6ITEsZmlsbENvbG9yOm51bGwsc3RlcHM6ITF9LGJhcnM6e3Nob3c6ITEsbGluZVdpZHRoOjIsYmFyV2lkdGg6MSxmaWxsOiEwLGZpbGxDb2xvcjpudWxsLGFsaWduOiJsZWZ0Iixob3Jpem9udGFsOiExLHplcm86ITB9LHNoYWRvd1NpemU6MyxoaWdobGlnaHRDb2xvcjpudWxsfSxncmlkOntzaG93OiEwLGFib3ZlRGF0YTohMSxjb2xvcjoiIzU0NTQ1NCIsYmFja2dyb3VuZENvbG9yOm51bGwsYm9yZGVyQ29sb3I6bnVsbCx0aWNrQ29sb3I6bnVsbCxtYXJnaW46MCxsYWJlbE1hcmdpbjo1LGF4aXNNYXJnaW46OCxib3JkZXJXaWR0aDoyLG1pbkJvcmRlck1hcmdpbjpudWxsLG1hcmtpbmdzOm51bGwsbWFya2luZ3NDb2xvcjoiI2Y0ZjRmNCIsbWFya2luZ3NMaW5lV2lkdGg6MixjbGlja2FibGU6ITEsaG92ZXJhYmxlOiExLGF1dG9IaWdobGlnaHQ6ITAsbW91c2VBY3RpdmVSYWRpdXM6MTB9LGludGVyYWN0aW9uOntyZWRyYXdPdmVybGF5SW50ZXJ2YWw6MWUzLzYwfSxob29rczp7fX0sc3VyZmFjZT1udWxsLG92ZXJsYXk9bnVsbCxldmVudEhvbGRlcj1udWxsLGN0eD1udWxsLG9jdHg9bnVsbCx4YXhlcz1bXSx5YXhlcz1bXSxwbG90T2Zmc2V0PXtsZWZ0OjAscmlnaHQ6MCx0b3A6MCxib3R0b206MH0scGxvdFdpZHRoPTAscGxvdEhlaWdodD0wLGhvb2tzPXtwcm9jZXNzT3B0aW9uczpbXSxwcm9jZXNzUmF3RGF0YTpbXSxwcm9jZXNzRGF0YXBvaW50czpbXSxwcm9jZXNzT2Zmc2V0OltdLGRyYXdCYWNrZ3JvdW5kOltdLGRyYXdTZXJpZXM6W10sZHJhdzpbXSxiaW5kRXZlbnRzOltdLGRyYXdPdmVybGF5OltdLHNodXRkb3duOltdfSxwbG90PXRoaXM7cGxvdC5zZXREYXRhPXNldERhdGEscGxvdC5zZXR1cEdyaWQ9c2V0dXBHcmlkLHBsb3QuZHJhdz1kcmF3LHBsb3QuZ2V0UGxhY2Vob2xkZXI9ZnVuY3Rpb24oKXtyZXR1cm4gcGxhY2Vob2xkZXJ9LHBsb3QuZ2V0Q2FudmFzPWZ1bmN0aW9uKCl7cmV0dXJuIHN1cmZhY2UuZWxlbWVudH0scGxvdC5nZXRQbG90T2Zmc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHBsb3RPZmZzZXR9LHBsb3Qud2lkdGg9ZnVuY3Rpb24oKXtyZXR1cm4gcGxvdFdpZHRofSxwbG90LmhlaWdodD1mdW5jdGlvbigpe3JldHVybiBwbG90SGVpZ2h0fSxwbG90Lm9mZnNldD1mdW5jdGlvbigpe3ZhciBvPWV2ZW50SG9sZGVyLm9mZnNldCgpO3JldHVybiBvLmxlZnQrPXBsb3RPZmZzZXQubGVmdCxvLnRvcCs9cGxvdE9mZnNldC50b3Asb30scGxvdC5nZXREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHNlcmllc30scGxvdC5nZXRBeGVzPWZ1bmN0aW9uKCl7dmFyIHJlcz17fTtyZXR1cm4gJC5lYWNoKHhheGVzLmNvbmNhdCh5YXhlcyksZnVuY3Rpb24oXyxheGlzKXtheGlzJiYocmVzW2F4aXMuZGlyZWN0aW9uKygxIT1heGlzLm4/YXhpcy5uOiIiKSsiYXhpcyJdPWF4aXMpfSkscmVzfSxwbG90LmdldFhBeGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHhheGVzfSxwbG90LmdldFlBeGVzPWZ1bmN0aW9uKCl7cmV0dXJuIHlheGVzfSxwbG90LmMycD1jYW52YXNUb0F4aXNDb29yZHMscGxvdC5wMmM9YXhpc1RvQ2FudmFzQ29vcmRzLHBsb3QuZ2V0T3B0aW9ucz1mdW5jdGlvbigpe3JldHVybiBvcHRpb25zfSxwbG90LmhpZ2hsaWdodD1oaWdobGlnaHQscGxvdC51bmhpZ2hsaWdodD11bmhpZ2hsaWdodCxwbG90LnRyaWdnZXJSZWRyYXdPdmVybGF5PXRyaWdnZXJSZWRyYXdPdmVybGF5LHBsb3QucG9pbnRPZmZzZXQ9ZnVuY3Rpb24ocG9pbnQpe3JldHVybntsZWZ0OnBhcnNlSW50KHhheGVzW2F4aXNOdW1iZXIocG9pbnQsIngiKS0xXS5wMmMoK3BvaW50LngpK3Bsb3RPZmZzZXQubGVmdCwxMCksdG9wOnBhcnNlSW50KHlheGVzW2F4aXNOdW1iZXIocG9pbnQsInkiKS0xXS5wMmMoK3BvaW50LnkpK3Bsb3RPZmZzZXQudG9wLDEwKX19LHBsb3Quc2h1dGRvd249c2h1dGRvd24scGxvdC5kZXN0cm95PWZ1bmN0aW9uKCl7c2h1dGRvd24oKSxwbGFjZWhvbGRlci5yZW1vdmVEYXRhKCJwbG90IikuZW1wdHkoKSxzZXJpZXM9W10sb3B0aW9ucz1udWxsLHN1cmZhY2U9bnVsbCxvdmVybGF5PW51bGwsZXZlbnRIb2xkZXI9bnVsbCxjdHg9bnVsbCxvY3R4PW51bGwseGF4ZXM9W10seWF4ZXM9W10saG9va3M9bnVsbCxoaWdobGlnaHRzPVtdLHBsb3Q9bnVsbH0scGxvdC5yZXNpemU9ZnVuY3Rpb24oKXt2YXIgd2lkdGg9cGxhY2Vob2xkZXIud2lkdGgoKSxoZWlnaHQ9cGxhY2Vob2xkZXIuaGVpZ2h0KCk7c3VyZmFjZS5yZXNpemUod2lkdGgsaGVpZ2h0KSxvdmVybGF5LnJlc2l6ZSh3aWR0aCxoZWlnaHQpfSxwbG90Lmhvb2tzPWhvb2tzLGluaXRQbHVnaW5zKHBsb3QpLHBhcnNlT3B0aW9ucyhvcHRpb25zXyksc2V0dXBDYW52YXNlcygpLHNldERhdGEoZGF0YV8pLHNldHVwR3JpZCgpLGRyYXcoKSxiaW5kRXZlbnRzKCk7dmFyIGhpZ2hsaWdodHM9W10scmVkcmF3VGltZW91dD1udWxsfWZ1bmN0aW9uIGZsb29ySW5CYXNlKG4sYmFzZSl7cmV0dXJuIGJhc2UqTWF0aC5mbG9vcihuL2Jhc2UpfXZhciBoYXNPd25Qcm9wZXJ0eT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5OyQuZm4uZGV0YWNofHwoJC5mbi5kZXRhY2g9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyl9KX0pLENhbnZhcy5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKHdpZHRoLGhlaWdodCl7aWYoMD49d2lkdGh8fDA+PWhlaWdodCl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgZGltZW5zaW9ucyBmb3IgcGxvdCwgd2lkdGggPSAiK3dpZHRoKyIsIGhlaWdodCA9ICIraGVpZ2h0KTt2YXIgZWxlbWVudD10aGlzLmVsZW1lbnQsY29udGV4dD10aGlzLmNvbnRleHQscGl4ZWxSYXRpbz10aGlzLnBpeGVsUmF0aW87dGhpcy53aWR0aCE9d2lkdGgmJihlbGVtZW50LndpZHRoPXdpZHRoKnBpeGVsUmF0aW8sZWxlbWVudC5zdHlsZS53aWR0aD13aWR0aCsicHgiLHRoaXMud2lkdGg9d2lkdGgpLHRoaXMuaGVpZ2h0IT1oZWlnaHQmJihlbGVtZW50LmhlaWdodD1oZWlnaHQqcGl4ZWxSYXRpbyxlbGVtZW50LnN0eWxlLmhlaWdodD1oZWlnaHQrInB4Iix0aGlzLmhlaWdodD1oZWlnaHQpLGNvbnRleHQucmVzdG9yZSgpLGNvbnRleHQuc2F2ZSgpLGNvbnRleHQuc2NhbGUocGl4ZWxSYXRpbyxwaXhlbFJhdGlvKX0sQ2FudmFzLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuY29udGV4dC5jbGVhclJlY3QoMCwwLHRoaXMud2lkdGgsdGhpcy5oZWlnaHQpfSxDYW52YXMucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3ZhciBjYWNoZT10aGlzLl90ZXh0Q2FjaGU7Zm9yKHZhciBsYXllcktleSBpbiBjYWNoZSlpZihoYXNPd25Qcm9wZXJ0eS5jYWxsKGNhY2hlLGxheWVyS2V5KSl7dmFyIGxheWVyPXRoaXMuZ2V0VGV4dExheWVyKGxheWVyS2V5KSxsYXllckNhY2hlPWNhY2hlW2xheWVyS2V5XTtsYXllci5oaWRlKCk7Zm9yKHZhciBzdHlsZUtleSBpbiBsYXllckNhY2hlKWlmKGhhc093blByb3BlcnR5LmNhbGwobGF5ZXJDYWNoZSxzdHlsZUtleSkpe3ZhciBzdHlsZUNhY2hlPWxheWVyQ2FjaGVbc3R5bGVLZXldO2Zvcih2YXIga2V5IGluIHN0eWxlQ2FjaGUpaWYoaGFzT3duUHJvcGVydHkuY2FsbChzdHlsZUNhY2hlLGtleSkpe2Zvcih2YXIgcG9zaXRpb24scG9zaXRpb25zPXN0eWxlQ2FjaGVba2V5XS5wb3NpdGlvbnMsaT0wO3Bvc2l0aW9uPXBvc2l0aW9uc1tpXTtpKyspcG9zaXRpb24uYWN0aXZlP3Bvc2l0aW9uLnJlbmRlcmVkfHwobGF5ZXIuYXBwZW5kKHBvc2l0aW9uLmVsZW1lbnQpLHBvc2l0aW9uLnJlbmRlcmVkPSEwKToocG9zaXRpb25zLnNwbGljZShpLS0sMSkscG9zaXRpb24ucmVuZGVyZWQmJnBvc2l0aW9uLmVsZW1lbnQuZGV0YWNoKCkpOzA9PXBvc2l0aW9ucy5sZW5ndGgmJmRlbGV0ZSBzdHlsZUNhY2hlW2tleV19fWxheWVyLnNob3coKX19LENhbnZhcy5wcm90b3R5cGUuZ2V0VGV4dExheWVyPWZ1bmN0aW9uKGNsYXNzZXMpe3ZhciBsYXllcj10aGlzLnRleHRbY2xhc3Nlc107cmV0dXJuIG51bGw9PWxheWVyJiYobnVsbD09dGhpcy50ZXh0Q29udGFpbmVyJiYodGhpcy50ZXh0Q29udGFpbmVyPSQoIjxkaXYgY2xhc3M9J2Zsb3QtdGV4dCc+PC9kaXY+IikuY3NzKHtwb3NpdGlvbjoiYWJzb2x1dGUiLHRvcDowLGxlZnQ6MCxib3R0b206MCxyaWdodDowLCJmb250LXNpemUiOiJzbWFsbGVyIixjb2xvcjoiIzU0NTQ1NCJ9KS5pbnNlcnRBZnRlcih0aGlzLmVsZW1lbnQpKSxsYXllcj10aGlzLnRleHRbY2xhc3Nlc109JCgiPGRpdj48L2Rpdj4iKS5hZGRDbGFzcyhjbGFzc2VzKS5jc3Moe3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdG9wOjAsbGVmdDowLGJvdHRvbTowLHJpZ2h0OjB9KS5hcHBlbmRUbyh0aGlzLnRleHRDb250YWluZXIpKSxsYXllcn0sQ2FudmFzLnByb3RvdHlwZS5nZXRUZXh0SW5mbz1mdW5jdGlvbihsYXllcix0ZXh0LGZvbnQsYW5nbGUsd2lkdGgpe3ZhciB0ZXh0U3R5bGUsbGF5ZXJDYWNoZSxzdHlsZUNhY2hlLGluZm87aWYodGV4dD0iIit0ZXh0LHRleHRTdHlsZT0ib2JqZWN0Ij09dHlwZW9mIGZvbnQ/Zm9udC5zdHlsZSsiICIrZm9udC52YXJpYW50KyIgIitmb250LndlaWdodCsiICIrZm9udC5zaXplKyJweC8iK2ZvbnQubGluZUhlaWdodCsicHggIitmb250LmZhbWlseTpmb250LGxheWVyQ2FjaGU9dGhpcy5fdGV4dENhY2hlW2xheWVyXSxudWxsPT1sYXllckNhY2hlJiYobGF5ZXJDYWNoZT10aGlzLl90ZXh0Q2FjaGVbbGF5ZXJdPXt9KSxzdHlsZUNhY2hlPWxheWVyQ2FjaGVbdGV4dFN0eWxlXSxudWxsPT1zdHlsZUNhY2hlJiYoc3R5bGVDYWNoZT1sYXllckNhY2hlW3RleHRTdHlsZV09e30pLGluZm89c3R5bGVDYWNoZVt0ZXh0XSxudWxsPT1pbmZvKXt2YXIgZWxlbWVudD0kKCI8ZGl2PjwvZGl2PiIpLmh0bWwodGV4dCkuY3NzKHtwb3NpdGlvbjoiYWJzb2x1dGUiLCJtYXgtd2lkdGgiOndpZHRoLHRvcDotOTk5OX0pLmFwcGVuZFRvKHRoaXMuZ2V0VGV4dExheWVyKGxheWVyKSk7Im9iamVjdCI9PXR5cGVvZiBmb250P2VsZW1lbnQuY3NzKHtmb250OnRleHRTdHlsZSxjb2xvcjpmb250LmNvbG9yfSk6InN0cmluZyI9PXR5cGVvZiBmb250JiZlbGVtZW50LmFkZENsYXNzKGZvbnQpLGluZm89c3R5bGVDYWNoZVt0ZXh0XT17d2lkdGg6ZWxlbWVudC5vdXRlcldpZHRoKCEwKSxoZWlnaHQ6ZWxlbWVudC5vdXRlckhlaWdodCghMCksZWxlbWVudDplbGVtZW50LHBvc2l0aW9uczpbXX0sZWxlbWVudC5kZXRhY2goKX1yZXR1cm4gaW5mb30sQ2FudmFzLnByb3RvdHlwZS5hZGRUZXh0PWZ1bmN0aW9uKGxheWVyLHgseSx0ZXh0LGZvbnQsYW5nbGUsd2lkdGgsaGFsaWduLHZhbGlnbil7dmFyIGluZm89dGhpcy5nZXRUZXh0SW5mbyhsYXllcix0ZXh0LGZvbnQsYW5nbGUsd2lkdGgpLHBvc2l0aW9ucz1pbmZvLnBvc2l0aW9uczsiY2VudGVyIj09aGFsaWduP3gtPWluZm8ud2lkdGgvMjoicmlnaHQiPT1oYWxpZ24mJih4LT1pbmZvLndpZHRoKSwibWlkZGxlIj09dmFsaWduP3ktPWluZm8uaGVpZ2h0LzI6ImJvdHRvbSI9PXZhbGlnbiYmKHktPWluZm8uaGVpZ2h0KTtmb3IodmFyIHBvc2l0aW9uLGk9MDtwb3NpdGlvbj1wb3NpdGlvbnNbaV07aSsrKWlmKHBvc2l0aW9uLng9PXgmJnBvc2l0aW9uLnk9PXkpcmV0dXJuIHZvaWQocG9zaXRpb24uYWN0aXZlPSEwKTtwb3NpdGlvbj17YWN0aXZlOiEwLHJlbmRlcmVkOiExLGVsZW1lbnQ6cG9zaXRpb25zLmxlbmd0aD9pbmZvLmVsZW1lbnQuY2xvbmUoKTppbmZvLmVsZW1lbnQseDp4LHk6eX0scG9zaXRpb25zLnB1c2gocG9zaXRpb24pLHBvc2l0aW9uLmVsZW1lbnQuY3NzKHt0b3A6TWF0aC5yb3VuZCh5KSxsZWZ0Ok1hdGgucm91bmQoeCksInRleHQtYWxpZ24iOmhhbGlnbn0pfSxDYW52YXMucHJvdG90eXBlLnJlbW92ZVRleHQ9ZnVuY3Rpb24obGF5ZXIseCx5LHRleHQsZm9udCxhbmdsZSl7aWYobnVsbD09dGV4dCl7dmFyIGxheWVyQ2FjaGU9dGhpcy5fdGV4dENhY2hlW2xheWVyXTtpZihudWxsIT1sYXllckNhY2hlKWZvcih2YXIgc3R5bGVLZXkgaW4gbGF5ZXJDYWNoZSlpZihoYXNPd25Qcm9wZXJ0eS5jYWxsKGxheWVyQ2FjaGUsc3R5bGVLZXkpKXt2YXIgc3R5bGVDYWNoZT1sYXllckNhY2hlW3N0eWxlS2V5XTtmb3IodmFyIGtleSBpbiBzdHlsZUNhY2hlKWlmKGhhc093blByb3BlcnR5LmNhbGwoc3R5bGVDYWNoZSxrZXkpKWZvcih2YXIgcG9zaXRpb24scG9zaXRpb25zPXN0eWxlQ2FjaGVba2V5XS5wb3NpdGlvbnMsaT0wO3Bvc2l0aW9uPXBvc2l0aW9uc1tpXTtpKyspcG9zaXRpb24uYWN0aXZlPSExfX1lbHNlIGZvcih2YXIgcG9zaXRpb24scG9zaXRpb25zPXRoaXMuZ2V0VGV4dEluZm8obGF5ZXIsdGV4dCxmb250LGFuZ2xlKS5wb3NpdGlvbnMsaT0wO3Bvc2l0aW9uPXBvc2l0aW9uc1tpXTtpKyspcG9zaXRpb24ueD09eCYmcG9zaXRpb24ueT09eSYmKHBvc2l0aW9uLmFjdGl2ZT0hMSl9LCQucGxvdD1mdW5jdGlvbihwbGFjZWhvbGRlcixkYXRhLG9wdGlvbnMpe3ZhciBwbG90PW5ldyBQbG90KCQocGxhY2Vob2xkZXIpLGRhdGEsb3B0aW9ucywkLnBsb3QucGx1Z2lucyk7cmV0dXJuIHBsb3R9LCQucGxvdC52ZXJzaW9uPSIwLjguMyIsJC5wbG90LnBsdWdpbnM9W10sJC5mbi5wbG90PWZ1bmN0aW9uKGRhdGEsb3B0aW9ucyl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpeyQucGxvdCh0aGlzLGRhdGEsb3B0aW9ucyl9KX19KGpRdWVyeSksZnVuY3Rpb24oKXt2YXIgY2xzLGdldFZhbHVlSGFuZGxlcixyZWdpc3RlclZhbHVlSGFuZGxlcixzcXVlbCxfZXh0ZW5kLF9yZWYsX3JlZjEsX3JlZjIsX3JlZjMsX3JlZjQsX3dpdGhvdXQsX19zbGljZT1bXS5zbGljZSxfX2hhc1Byb3A9e30uaGFzT3duUHJvcGVydHksX19leHRlbmRzPWZ1bmN0aW9uKGNoaWxkLHBhcmVudCl7ZnVuY3Rpb24gY3Rvcigpe3RoaXMuY29uc3RydWN0b3I9Y2hpbGR9Zm9yKHZhciBrZXkgaW4gcGFyZW50KV9faGFzUHJvcC5jYWxsKHBhcmVudCxrZXkpJiYoY2hpbGRba2V5XT1wYXJlbnRba2V5XSk7cmV0dXJuIGN0b3IucHJvdG90eXBlPXBhcmVudC5wcm90b3R5cGUsY2hpbGQucHJvdG90eXBlPW5ldyBjdG9yLGNoaWxkLl9fc3VwZXJfXz1wYXJlbnQucHJvdG90eXBlLGNoaWxkfSxfX2JpbmQ9ZnVuY3Rpb24oZm4sbWUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBmbi5hcHBseShtZSxhcmd1bWVudHMpfX07Y2xzPXt9LF9leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgZHN0LGssc291cmNlcyxzcmMsdixfaSxfbGVuO2lmKGRzdD1hcmd1bWVudHNbMF0sc291cmNlcz0yPD1hcmd1bWVudHMubGVuZ3RoP19fc2xpY2UuY2FsbChhcmd1bWVudHMsMSk6W10pZm9yKF9pPTAsX2xlbj1zb3VyY2VzLmxlbmd0aDtfbGVuPl9pO19pKyspaWYoc3JjPXNvdXJjZXNbX2ldKWZvcihrIGluIHNyYylfX2hhc1Byb3AuY2FsbChzcmMsaykmJih2PXNyY1trXSxkc3Rba109dik7cmV0dXJuIGRzdH0sX3dpdGhvdXQ9ZnVuY3Rpb24oKXt2YXIgZHN0LG9iaixwLHByb3BlcnRpZXMsX2ksX2xlbjtmb3Iob2JqPWFyZ3VtZW50c1swXSxwcm9wZXJ0aWVzPTI8PWFyZ3VtZW50cy5sZW5ndGg/X19zbGljZS5jYWxsKGFyZ3VtZW50cywxKTpbXSxkc3Q9X2V4dGVuZCh7fSxvYmopLF9pPTAsX2xlbj1wcm9wZXJ0aWVzLmxlbmd0aDtfbGVuPl9pO19pKyspcD1wcm9wZXJ0aWVzW19pXSxkZWxldGUgZHN0W3BdO3JldHVybiBkc3R9LGNscy5EZWZhdWx0UXVlcnlCdWlsZGVyT3B0aW9ucz17YXV0b1F1b3RlVGFibGVOYW1lczohMSxhdXRvUXVvdGVGaWVsZE5hbWVzOiExLGF1dG9RdW90ZUFsaWFzTmFtZXM6ITAsbmFtZVF1b3RlQ2hhcmFjdGVyOiJgIix0YWJsZUFsaWFzUXVvdGVDaGFyYWN0ZXI6ImAiLGZpZWxkQWxpYXNRdW90ZUNoYXJhY3RlcjonIicsdmFsdWVIYW5kbGVyczpbXSxudW1iZXJlZFBhcmFtZXRlcnM6ITEscmVwbGFjZVNpbmdsZVF1b3RlczohMSxzaW5nbGVRdW90ZVJlcGxhY2VtZW50OiInJyIsc2VwYXJhdG9yOiIgIn0sY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnM9W10scmVnaXN0ZXJWYWx1ZUhhbmRsZXI9ZnVuY3Rpb24oaGFuZGxlcnMsdHlwZSxoYW5kbGVyKXt2YXIgdHlwZUhhbmRsZXIsX2ksX2xlbjtpZigiZnVuY3Rpb24iIT10eXBlb2YgdHlwZSYmInN0cmluZyIhPXR5cGVvZiB0eXBlKXRocm93IG5ldyBFcnJvcigidHlwZSBtdXN0IGJlIGEgY2xhc3MgY29uc3RydWN0b3Igb3Igc3RyaW5nIGRlbm90aW5nICd0eXBlb2YnIHJlc3VsdCIpO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBoYW5kbGVyKXRocm93IG5ldyBFcnJvcigiaGFuZGxlciBtdXN0IGJlIGEgZnVuY3Rpb24iKTtmb3IoX2k9MCxfbGVuPWhhbmRsZXJzLmxlbmd0aDtfbGVuPl9pO19pKyspaWYodHlwZUhhbmRsZXI9aGFuZGxlcnNbX2ldLHR5cGVIYW5kbGVyLnR5cGU9PT10eXBlKXJldHVybiB2b2lkKHR5cGVIYW5kbGVyLmhhbmRsZXI9aGFuZGxlcik7cmV0dXJuIGhhbmRsZXJzLnB1c2goe3R5cGU6dHlwZSxoYW5kbGVyOmhhbmRsZXJ9KX0sZ2V0VmFsdWVIYW5kbGVyPWZ1bmN0aW9uKCl7dmFyIGhhbmRsZXJMaXN0cyxoYW5kbGVycyx0eXBlSGFuZGxlcix2YWx1ZSxfaSxfaixfbGVuLF9sZW4xO2Zvcih2YWx1ZT1hcmd1bWVudHNbMF0saGFuZGxlckxpc3RzPTI8PWFyZ3VtZW50cy5sZW5ndGg/X19zbGljZS5jYWxsKGFyZ3VtZW50cywxKTpbXSxfaT0wLF9sZW49aGFuZGxlckxpc3RzLmxlbmd0aDtfbGVuPl9pO19pKyspZm9yKGhhbmRsZXJzPWhhbmRsZXJMaXN0c1tfaV0sX2o9MCxfbGVuMT1oYW5kbGVycy5sZW5ndGg7X2xlbjE+X2o7X2orKylpZih0eXBlSGFuZGxlcj1oYW5kbGVyc1tfal0sdHlwZUhhbmRsZXIudHlwZT09PXR5cGVvZiB2YWx1ZXx8InN0cmluZyIhPXR5cGVvZiB0eXBlSGFuZGxlci50eXBlJiZ2YWx1ZSBpbnN0YW5jZW9mIHR5cGVIYW5kbGVyLnR5cGUpcmV0dXJuIHR5cGVIYW5kbGVyLmhhbmRsZXI7cmV0dXJuIHZvaWQgMH0sY2xzLnJlZ2lzdGVyVmFsdWVIYW5kbGVyPWZ1bmN0aW9uKHR5cGUsaGFuZGxlcil7cmV0dXJuIHJlZ2lzdGVyVmFsdWVIYW5kbGVyKGNscy5nbG9iYWxWYWx1ZUhhbmRsZXJzLHR5cGUsaGFuZGxlcil9LGNscy5DbG9uZWFibGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBDbG9uZWFibGUoKXt9cmV0dXJuIENsb25lYWJsZS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbmV3SW5zdGFuY2U7cmV0dXJuIG5ld0luc3RhbmNlPW5ldyB0aGlzLmNvbnN0cnVjdG9yLF9leHRlbmQobmV3SW5zdGFuY2UsSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzKSkpfSxDbG9uZWFibGV9KCksY2xzLkJhc2VCdWlsZGVyPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gQmFzZUJ1aWxkZXIob3B0aW9ucyl7dmFyIGRlZmF1bHRzO2RlZmF1bHRzPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoY2xzLkRlZmF1bHRRdWVyeUJ1aWxkZXJPcHRpb25zKSksdGhpcy5vcHRpb25zPV9leHRlbmQoe30sZGVmYXVsdHMsb3B0aW9ucyl9cmV0dXJuIF9fZXh0ZW5kcyhCYXNlQnVpbGRlcixfc3VwZXIpLEJhc2VCdWlsZGVyLnByb3RvdHlwZS5yZWdpc3RlclZhbHVlSGFuZGxlcj1mdW5jdGlvbih0eXBlLGhhbmRsZXIpe3JldHVybiByZWdpc3RlclZhbHVlSGFuZGxlcih0aGlzLm9wdGlvbnMudmFsdWVIYW5kbGVycyx0eXBlLGhhbmRsZXIpLHRoaXN9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZ2V0T2JqZWN0Q2xhc3NOYW1lPWZ1bmN0aW9uKG9iail7dmFyIGFycjtyZXR1cm4gb2JqJiZvYmouY29uc3RydWN0b3ImJm9iai5jb25zdHJ1Y3Rvci50b1N0cmluZyYmKGFycj1vYmouY29uc3RydWN0b3IudG9TdHJpbmcoKS5tYXRjaCgvZnVuY3Rpb25ccyooXHcrKS8pLGFyciYmMj09PWFyci5sZW5ndGgpP2FyclsxXTp2b2lkIDB9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVDb25kaXRpb249ZnVuY3Rpb24oY29uZGl0aW9uKXtpZighKGNvbmRpdGlvbiBpbnN0YW5jZW9mIGNscy5FeHByZXNzaW9uKSYmInN0cmluZyIhPXR5cGVvZiBjb25kaXRpb24pdGhyb3cgbmV3IEVycm9yKCJjb25kaXRpb24gbXVzdCBiZSBhIHN0cmluZyBvciBFeHByZXNzaW9uIGluc3RhbmNlIik7cmV0dXJuIGNvbmRpdGlvbn0sQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9zYW5pdGl6ZU5hbWU9ZnVuY3Rpb24odmFsdWUsdHlwZSl7aWYoInN0cmluZyIhPXR5cGVvZiB2YWx1ZSl0aHJvdyBuZXcgRXJyb3IoIiIrdHlwZSsiIG11c3QgYmUgYSBzdHJpbmciKTtyZXR1cm4gdmFsdWV9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVGaWVsZD1mdW5jdGlvbihpdGVtLGZvcm1hdHRpbmdPcHRpb25zKXt2YXIgcXVvdGVDaGFyO3JldHVybiBudWxsPT1mb3JtYXR0aW5nT3B0aW9ucyYmKGZvcm1hdHRpbmdPcHRpb25zPXt9KSxpdGVtIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlcj9pdGVtPSIoIitpdGVtKyIpIjooaXRlbT10aGlzLl9zYW5pdGl6ZU5hbWUoaXRlbSwiZmllbGQgbmFtZSIpLHRoaXMub3B0aW9ucy5hdXRvUXVvdGVGaWVsZE5hbWVzJiYocXVvdGVDaGFyPXRoaXMub3B0aW9ucy5uYW1lUXVvdGVDaGFyYWN0ZXIsaXRlbT1mb3JtYXR0aW5nT3B0aW9ucy5pZ25vcmVQZXJpb2RzRm9yRmllbGROYW1lUXVvdGVzPyIiK3F1b3RlQ2hhcitpdGVtK3F1b3RlQ2hhcjppdGVtLnNwbGl0KCIuIikubWFwKGZ1bmN0aW9uKHYpe3JldHVybiIqIj09PXY/djoiIitxdW90ZUNoYXIrditxdW90ZUNoYXJ9KS5qb2luKCIuIikpKSxpdGVtfSxCYXNlQnVpbGRlci5wcm90b3R5cGUuX3Nhbml0aXplVGFibGU9ZnVuY3Rpb24oaXRlbSxhbGxvd05lc3RlZCl7dmFyIHNhbml0aXplZDtpZihudWxsPT1hbGxvd05lc3RlZCYmKGFsbG93TmVzdGVkPSExKSxhbGxvd05lc3RlZCl7aWYoInN0cmluZyIhPXR5cGVvZiBpdGVtKXtpZihpdGVtIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlciYmaXRlbS5pc05lc3RhYmxlKCkpcmV0dXJuIGl0ZW07dGhyb3cgbmV3IEVycm9yKCJ0YWJsZSBuYW1lIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBuZXN0YWJsZSBxdWVyeSBpbnN0YW5jZSIpfXNhbml0aXplZD1pdGVtfWVsc2Ugc2FuaXRpemVkPXRoaXMuX3Nhbml0aXplTmFtZShpdGVtLCJ0YWJsZSBuYW1lIik7cmV0dXJuIHRoaXMub3B0aW9ucy5hdXRvUXVvdGVUYWJsZU5hbWVzPyIiK3RoaXMub3B0aW9ucy5uYW1lUXVvdGVDaGFyYWN0ZXIrc2FuaXRpemVkK3RoaXMub3B0aW9ucy5uYW1lUXVvdGVDaGFyYWN0ZXI6c2FuaXRpemVkfSxCYXNlQnVpbGRlci5wcm90b3R5cGUuX3Nhbml0aXplVGFibGVBbGlhcz1mdW5jdGlvbihpdGVtKXt2YXIgc2FuaXRpemVkO3JldHVybiBzYW5pdGl6ZWQ9dGhpcy5fc2FuaXRpemVOYW1lKGl0ZW0sInRhYmxlIGFsaWFzIiksdGhpcy5vcHRpb25zLmF1dG9RdW90ZUFsaWFzTmFtZXM/IiIrdGhpcy5vcHRpb25zLnRhYmxlQWxpYXNRdW90ZUNoYXJhY3RlcitzYW5pdGl6ZWQrdGhpcy5vcHRpb25zLnRhYmxlQWxpYXNRdW90ZUNoYXJhY3RlcjpzYW5pdGl6ZWR9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fc2FuaXRpemVGaWVsZEFsaWFzPWZ1bmN0aW9uKGl0ZW0pe3ZhciBzYW5pdGl6ZWQ7cmV0dXJuIHNhbml0aXplZD10aGlzLl9zYW5pdGl6ZU5hbWUoaXRlbSwiZmllbGQgYWxpYXMiKSx0aGlzLm9wdGlvbnMuYXV0b1F1b3RlQWxpYXNOYW1lcz8iIit0aGlzLm9wdGlvbnMuZmllbGRBbGlhc1F1b3RlQ2hhcmFjdGVyK3Nhbml0aXplZCt0aGlzLm9wdGlvbnMuZmllbGRBbGlhc1F1b3RlQ2hhcmFjdGVyOnNhbml0aXplZH0sQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0PWZ1bmN0aW9uKHZhbHVlKXtpZih2YWx1ZT1wYXJzZUludCh2YWx1ZSksMD52YWx1ZXx8aXNOYU4odmFsdWUpKXRocm93IG5ldyBFcnJvcigibGltaXQvb2Zmc2V0IG11c3QgYmUgPj0gMCIpO3JldHVybiB2YWx1ZX0sQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9zYW5pdGl6ZVZhbHVlPWZ1bmN0aW9uKGl0ZW0pe3ZhciBpdGVtVHlwZSx0eXBlSXNWYWxpZDtpZihpdGVtVHlwZT10eXBlb2YgaXRlbSxudWxsPT09aXRlbSk7ZWxzZSBpZigic3RyaW5nIj09PWl0ZW1UeXBlfHwibnVtYmVyIj09PWl0ZW1UeXBlfHwiYm9vbGVhbiI9PT1pdGVtVHlwZSk7ZWxzZSBpZihpdGVtIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlciYmaXRlbS5pc05lc3RhYmxlKCkpO2Vsc2UgaWYodHlwZUlzVmFsaWQ9dm9pZCAwIT09Z2V0VmFsdWVIYW5kbGVyKGl0ZW0sdGhpcy5vcHRpb25zLnZhbHVlSGFuZGxlcnMsY2xzLmdsb2JhbFZhbHVlSGFuZGxlcnMpLCF0eXBlSXNWYWxpZCl0aHJvdyBuZXcgRXJyb3IoImZpZWxkIHZhbHVlIG11c3QgYmUgYSBzdHJpbmcsIG51bWJlciwgYm9vbGVhbiwgbnVsbCBvciBvbmUgb2YgdGhlIHJlZ2lzdGVyZWQgY3VzdG9tIHZhbHVlIHR5cGVzIik7cmV0dXJuIGl0ZW19LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZXNjYXBlVmFsdWU9ZnVuY3Rpb24odmFsdWUpe3JldHVybiEwIT09dGhpcy5vcHRpb25zLnJlcGxhY2VTaW5nbGVRdW90ZXM/dmFsdWU6dmFsdWUucmVwbGFjZSgvXCcvZyx0aGlzLm9wdGlvbnMuc2luZ2xlUXVvdGVSZXBsYWNlbWVudCl9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZm9ybWF0Q3VzdG9tVmFsdWU9ZnVuY3Rpb24odmFsdWUpe3ZhciBjdXN0b21IYW5kbGVyO3JldHVybiBjdXN0b21IYW5kbGVyPWdldFZhbHVlSGFuZGxlcih2YWx1ZSx0aGlzLm9wdGlvbnMudmFsdWVIYW5kbGVycyxjbHMuZ2xvYmFsVmFsdWVIYW5kbGVycyksY3VzdG9tSGFuZGxlciYmKHZhbHVlPWN1c3RvbUhhbmRsZXIodmFsdWUpKSx2YWx1ZX0sQmFzZUJ1aWxkZXIucHJvdG90eXBlLl9mb3JtYXRWYWx1ZUFzUGFyYW09ZnVuY3Rpb24odmFsdWUpe3ZhciBfdGhpcz10aGlzO3JldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKT92YWx1ZS5tYXAoZnVuY3Rpb24odil7cmV0dXJuIF90aGlzLl9mb3JtYXRWYWx1ZUFzUGFyYW0odil9KTp2YWx1ZSBpbnN0YW5jZW9mIGNscy5RdWVyeUJ1aWxkZXImJnZhbHVlLmlzTmVzdGFibGUoKT8iIit2YWx1ZTp0aGlzLl9mb3JtYXRDdXN0b21WYWx1ZSh2YWx1ZSl9LEJhc2VCdWlsZGVyLnByb3RvdHlwZS5fZm9ybWF0VmFsdWU9ZnVuY3Rpb24odmFsdWUsZm9ybWF0dGluZ09wdGlvbnMpe3ZhciBfdGhpcz10aGlzO3JldHVybiBudWxsPT1mb3JtYXR0aW5nT3B0aW9ucyYmKGZvcm1hdHRpbmdPcHRpb25zPXt9KSx2YWx1ZT10aGlzLl9mb3JtYXRDdXN0b21WYWx1ZSh2YWx1ZSksQXJyYXkuaXNBcnJheSh2YWx1ZSk/KHZhbHVlPXZhbHVlLm1hcChmdW5jdGlvbih2KXtyZXR1cm4gX3RoaXMuX2Zvcm1hdFZhbHVlKHYpfSksdmFsdWU9IigiK3ZhbHVlLmpvaW4oIiwgIikrIikiKTpudWxsPT09dmFsdWU/dmFsdWU9Ik5VTEwiOiJib29sZWFuIj09dHlwZW9mIHZhbHVlP3ZhbHVlPXZhbHVlPyJUUlVFIjoiRkFMU0UiOnZhbHVlIGluc3RhbmNlb2YgY2xzLlF1ZXJ5QnVpbGRlcj92YWx1ZT0iKCIrdmFsdWUrIikiOiJudW1iZXIiIT10eXBlb2YgdmFsdWUmJih2YWx1ZT10aGlzLl9lc2NhcGVWYWx1ZSh2YWx1ZSksdmFsdWU9Zm9ybWF0dGluZ09wdGlvbnMuZG9udFF1b3RlPyIiK3ZhbHVlOiInIit2YWx1ZSsiJyIpLHZhbHVlfSxCYXNlQnVpbGRlcn0oY2xzLkNsb25lYWJsZSksY2xzLkV4cHJlc3Npb249ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBFeHByZXNzaW9uKCl7dmFyIF90aGlzPXRoaXM7RXhwcmVzc2lvbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzKSx0aGlzLnRyZWU9e3BhcmVudDpudWxsLG5vZGVzOltdfSx0aGlzLmN1cnJlbnQ9dGhpcy50cmVlLHRoaXMuX2JlZ2luPWZ1bmN0aW9uKG9wKXt2YXIgbmV3X3RyZWU7cmV0dXJuIG5ld190cmVlPXt0eXBlOm9wLHBhcmVudDpfdGhpcy5jdXJyZW50LG5vZGVzOltdfSxfdGhpcy5jdXJyZW50Lm5vZGVzLnB1c2gobmV3X3RyZWUpLF90aGlzLmN1cnJlbnQ9X3RoaXMuY3VycmVudC5ub2Rlc1tfdGhpcy5jdXJyZW50Lm5vZGVzLmxlbmd0aC0xXSxfdGhpc319cmV0dXJuIF9fZXh0ZW5kcyhFeHByZXNzaW9uLF9zdXBlciksRXhwcmVzc2lvbi5wcm90b3R5cGUudHJlZT1udWxsLEV4cHJlc3Npb24ucHJvdG90eXBlLmN1cnJlbnQ9bnVsbCxFeHByZXNzaW9uLnByb3RvdHlwZS5hbmRfYmVnaW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYmVnaW4oIkFORCIpfSxFeHByZXNzaW9uLnByb3RvdHlwZS5vcl9iZWdpbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9iZWdpbigiT1IiKX0sRXhwcmVzc2lvbi5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7aWYoIXRoaXMuY3VycmVudC5wYXJlbnQpdGhyb3cgbmV3IEVycm9yKCJiZWdpbigpIG5lZWRzIHRvIGJlIGNhbGxlZCIpO3JldHVybiB0aGlzLmN1cnJlbnQ9dGhpcy5jdXJyZW50LnBhcmVudCx0aGlzfSxFeHByZXNzaW9uLnByb3RvdHlwZS5hbmQ9ZnVuY3Rpb24oZXhwcixwYXJhbSl7aWYoIWV4cHJ8fCJzdHJpbmciIT10eXBlb2YgZXhwcil0aHJvdyBuZXcgRXJyb3IoImV4cHIgbXVzdCBiZSBhIHN0cmluZyIpO3JldHVybiB0aGlzLmN1cnJlbnQubm9kZXMucHVzaCh7dHlwZToiQU5EIixleHByOmV4cHIscGFyYTpwYXJhbX0pLHRoaXN9LEV4cHJlc3Npb24ucHJvdG90eXBlLm9yPWZ1bmN0aW9uKGV4cHIscGFyYW0pe2lmKCFleHByfHwic3RyaW5nIiE9dHlwZW9mIGV4cHIpdGhyb3cgbmV3IEVycm9yKCJleHByIG11c3QgYmUgYSBzdHJpbmciKTtyZXR1cm4gdGhpcy5jdXJyZW50Lm5vZGVzLnB1c2goe3R5cGU6Ik9SIixleHByOmV4cHIscGFyYTpwYXJhbX0pLHRoaXN9LEV4cHJlc3Npb24ucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7aWYobnVsbCE9PXRoaXMuY3VycmVudC5wYXJlbnQpdGhyb3cgbmV3IEVycm9yKCJlbmQoKSBuZWVkcyB0byBiZSBjYWxsZWQiKTtyZXR1cm4gdGhpcy5fdG9TdHJpbmcodGhpcy50cmVlKX0sRXhwcmVzc2lvbi5wcm90b3R5cGUudG9QYXJhbT1mdW5jdGlvbigpe2lmKG51bGwhPT10aGlzLmN1cnJlbnQucGFyZW50KXRocm93IG5ldyBFcnJvcigiZW5kKCkgbmVlZHMgdG8gYmUgY2FsbGVkIik7cmV0dXJuIHRoaXMuX3RvU3RyaW5nKHRoaXMudHJlZSwhMCl9LEV4cHJlc3Npb24ucHJvdG90eXBlLl90b1N0cmluZz1mdW5jdGlvbihub2RlLHBhcmFtTW9kZSl7dmFyIGNoaWxkLGluU3RyLG5vZGVTdHIscGFyYW1zLHN0cixfaSxfbGVuLF9yZWY7Zm9yKG51bGw9PXBhcmFtTW9kZSYmKHBhcmFtTW9kZT0hMSksc3RyPSIiLHBhcmFtcz1bXSxfcmVmPW5vZGUubm9kZXMsX2k9MCxfbGVuPV9yZWYubGVuZ3RoO19sZW4+X2k7X2krKyljaGlsZD1fcmVmW19pXSxudWxsIT1jaGlsZC5leHByPyhub2RlU3RyPWNoaWxkLmV4cHIsbnVsbCE9Y2hpbGQucGFyYSYmKHBhcmFtTW9kZT8ocGFyYW1zPXBhcmFtcy5jb25jYXQodGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKGNoaWxkLnBhcmEpKSxBcnJheS5pc0FycmF5KGNoaWxkLnBhcmEpJiYoaW5TdHI9QXJyYXkuYXBwbHkobnVsbCxuZXcgQXJyYXkoY2hpbGQucGFyYS5sZW5ndGgpKS5tYXAoZnVuY3Rpb24oKXtyZXR1cm4iPyJ9KSxub2RlU3RyPW5vZGVTdHIucmVwbGFjZSgiPyIsIigiK2luU3RyLmpvaW4oIiwgIikrIikiKSkpOm5vZGVTdHI9bm9kZVN0ci5yZXBsYWNlKCI/Iix0aGlzLl9mb3JtYXRWYWx1ZShjaGlsZC5wYXJhKSkpKToobm9kZVN0cj10aGlzLl90b1N0cmluZyhjaGlsZCxwYXJhbU1vZGUpLHBhcmFtTW9kZSYmKHBhcmFtcz1wYXJhbXMuY29uY2F0KG5vZGVTdHIudmFsdWVzKSxub2RlU3RyPW5vZGVTdHIudGV4dCksIiIhPT1ub2RlU3RyJiYobm9kZVN0cj0iKCIrbm9kZVN0cisiKSIpKSwiIiE9PW5vZGVTdHImJigiIiE9PXN0ciYmKHN0cis9IiAiK2NoaWxkLnR5cGUrIiAiKSxzdHIrPW5vZGVTdHIpO3JldHVybiBwYXJhbU1vZGU/e3RleHQ6c3RyLHZhbHVlczpwYXJhbXN9OnN0cn0sRXhwcmVzc2lvbi5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgbmV3SW5zdGFuY2UsX2Nsb25lVHJlZTtyZXR1cm4gbmV3SW5zdGFuY2U9bmV3IHRoaXMuY29uc3RydWN0b3IsKF9jbG9uZVRyZWU9ZnVuY3Rpb24obm9kZSl7dmFyIGNoaWxkLF9pLF9sZW4sX3JlZixfcmVzdWx0cztmb3IoX3JlZj1ub2RlLm5vZGVzLF9yZXN1bHRzPVtdLF9pPTAsX2xlbj1fcmVmLmxlbmd0aDtfbGVuPl9pO19pKyspY2hpbGQ9X3JlZltfaV0sbnVsbCE9Y2hpbGQuZXhwcj9fcmVzdWx0cy5wdXNoKG5ld0luc3RhbmNlLmN1cnJlbnQubm9kZXMucHVzaChKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGNoaWxkKSkpKToobmV3SW5zdGFuY2UuX2JlZ2luKGNoaWxkLnR5cGUpLF9jbG9uZVRyZWUoY2hpbGQpLF9yZXN1bHRzLnB1c2goIXRoaXMuY3VycmVudD09PWNoaWxkP25ld0luc3RhbmNlLmVuZCgpOnZvaWQgMCkpO3JldHVybiBfcmVzdWx0c30pKHRoaXMudHJlZSksbmV3SW5zdGFuY2V9LEV4cHJlc3Npb259KGNscy5CYXNlQnVpbGRlciksY2xzLkJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gQmxvY2soKXtyZXR1cm4gX3JlZj1CbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBfX2V4dGVuZHMoQmxvY2ssX3N1cGVyKSxCbG9jay5wcm90b3R5cGUuZXhwb3NlZE1ldGhvZHM9ZnVuY3Rpb24oKXt2YXIgYXR0cixyZXQsdmFsdWU7cmV0PXt9O2ZvcihhdHRyIGluIHRoaXMpdmFsdWU9dGhpc1thdHRyXSwiZnVuY3Rpb24iIT10eXBlb2YgdmFsdWV8fCJfIj09PWF0dHIuY2hhckF0KDApfHxjbHMuQmxvY2sucHJvdG90eXBlW2F0dHJdfHwocmV0W2F0dHJdPXZhbHVlKTtyZXR1cm4gcmV0fSxCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtyZXR1cm4iIn0sQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW09ZnVuY3Rpb24ocXVlcnlCdWlsZGVyKXtyZXR1cm57dGV4dDp0aGlzLmJ1aWxkU3RyKHF1ZXJ5QnVpbGRlciksdmFsdWVzOltdfX0sQmxvY2t9KGNscy5CYXNlQnVpbGRlciksY2xzLlN0cmluZ0Jsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gU3RyaW5nQmxvY2sob3B0aW9ucyxzdHIpe1N0cmluZ0Jsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5zdHI9c3RyfXJldHVybiBfX2V4dGVuZHMoU3RyaW5nQmxvY2ssX3N1cGVyKSxTdHJpbmdCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdHJ9LFN0cmluZ0Jsb2NrfShjbHMuQmxvY2spLGNscy5BYnN0cmFjdFRhYmxlQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBBYnN0cmFjdFRhYmxlQmxvY2sob3B0aW9ucyl7QWJzdHJhY3RUYWJsZUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy50YWJsZXM9W119cmV0dXJuIF9fZXh0ZW5kcyhBYnN0cmFjdFRhYmxlQmxvY2ssX3N1cGVyKSxBYnN0cmFjdFRhYmxlQmxvY2sucHJvdG90eXBlLl90YWJsZT1mdW5jdGlvbih0YWJsZSxhbGlhcyl7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksYWxpYXMmJihhbGlhcz10aGlzLl9zYW5pdGl6ZVRhYmxlQWxpYXMoYWxpYXMpKSx0YWJsZT10aGlzLl9zYW5pdGl6ZVRhYmxlKHRhYmxlLHRoaXMub3B0aW9ucy5hbGxvd05lc3RlZHx8ITEpLHRoaXMub3B0aW9ucy5zaW5nbGVUYWJsZSYmKHRoaXMudGFibGVzPVtdKSx0aGlzLnRhYmxlcy5wdXNoKHt0YWJsZTp0YWJsZSxhbGlhczphbGlhc30pfSxBYnN0cmFjdFRhYmxlQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7dmFyIHRhYmxlLHRhYmxlcyxfaSxfbGVuLF9yZWYxO2lmKDA+PXRoaXMudGFibGVzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIl90YWJsZSgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpO2Zvcih0YWJsZXM9IiIsX3JlZjE9dGhpcy50YWJsZXMsX2k9MCxfbGVuPV9yZWYxLmxlbmd0aDtfbGVuPl9pO19pKyspdGFibGU9X3JlZjFbX2ldLCIiIT09dGFibGVzJiYodGFibGVzKz0iLCAiKSx0YWJsZXMrPSJzdHJpbmciPT10eXBlb2YgdGFibGUudGFibGU/dGFibGUudGFibGU6IigiK3RhYmxlLnRhYmxlKyIpIix0YWJsZS5hbGlhcyYmKHRhYmxlcys9IiAiK3RhYmxlLmFsaWFzKTtyZXR1cm4gdGFibGVzfSxBYnN0cmFjdFRhYmxlQmxvY2t9KGNscy5CbG9jayksY2xzLlVwZGF0ZVRhYmxlQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBVcGRhdGVUYWJsZUJsb2NrKCl7cmV0dXJuIF9yZWYxPVVwZGF0ZVRhYmxlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKFVwZGF0ZVRhYmxlQmxvY2ssX3N1cGVyKSxVcGRhdGVUYWJsZUJsb2NrLnByb3RvdHlwZS50YWJsZT1mdW5jdGlvbih0YWJsZSxhbGlhcyl7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksdGhpcy5fdGFibGUodGFibGUsYWxpYXMpfSxVcGRhdGVUYWJsZUJsb2NrfShjbHMuQWJzdHJhY3RUYWJsZUJsb2NrKSxjbHMuRnJvbVRhYmxlQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBGcm9tVGFibGVCbG9jaygpe3JldHVybiBfcmVmMj1Gcm9tVGFibGVCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBfX2V4dGVuZHMoRnJvbVRhYmxlQmxvY2ssX3N1cGVyKSxGcm9tVGFibGVCbG9jay5wcm90b3R5cGUuZnJvbT1mdW5jdGlvbih0YWJsZSxhbGlhcyl7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksdGhpcy5fdGFibGUodGFibGUsYWxpYXMpfSxGcm9tVGFibGVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24ocXVlcnlCdWlsZGVyKXt2YXIgdGFibGVzO2lmKDA+PXRoaXMudGFibGVzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoImZyb20oKSBuZWVkcyB0byBiZSBjYWxsZWQiKTtyZXR1cm4gdGFibGVzPUZyb21UYWJsZUJsb2NrLl9fc3VwZXJfXy5idWlsZFN0ci5jYWxsKHRoaXMscXVlcnlCdWlsZGVyKSwiRlJPTSAiK3RhYmxlc30sRnJvbVRhYmxlQmxvY2t9KGNscy5BYnN0cmFjdFRhYmxlQmxvY2spLGNscy5JbnRvVGFibGVCbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIEludG9UYWJsZUJsb2NrKG9wdGlvbnMpe0ludG9UYWJsZUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy50YWJsZT1udWxsfXJldHVybiBfX2V4dGVuZHMoSW50b1RhYmxlQmxvY2ssX3N1cGVyKSxJbnRvVGFibGVCbG9jay5wcm90b3R5cGUuaW50bz1mdW5jdGlvbih0YWJsZSl7cmV0dXJuIHRoaXMudGFibGU9dGhpcy5fc2FuaXRpemVUYWJsZSh0YWJsZSwhMSl9LEludG9UYWJsZUJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe2lmKCF0aGlzLnRhYmxlKXRocm93IG5ldyBFcnJvcigiaW50bygpIG5lZWRzIHRvIGJlIGNhbGxlZCIpO3JldHVybiJJTlRPICIrdGhpcy50YWJsZX0sSW50b1RhYmxlQmxvY2t9KGNscy5CbG9jayksY2xzLkdldEZpZWxkQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBHZXRGaWVsZEJsb2NrKG9wdGlvbnMpe0dldEZpZWxkQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLl9maWVsZHM9W119cmV0dXJuIF9fZXh0ZW5kcyhHZXRGaWVsZEJsb2NrLF9zdXBlciksR2V0RmllbGRCbG9jay5wcm90b3R5cGUuZmllbGRzPWZ1bmN0aW9uKF9maWVsZHMsb3B0aW9ucyl7dmFyIGFsaWFzLGZpZWxkLF9yZXN1bHRzO251bGw9PW9wdGlvbnMmJihvcHRpb25zPXt9KSxfcmVzdWx0cz1bXTtmb3IoZmllbGQgaW4gX2ZpZWxkcylhbGlhcz1fZmllbGRzW2ZpZWxkXSxfcmVzdWx0cy5wdXNoKHRoaXMuZmllbGQoZmllbGQsYWxpYXMsb3B0aW9ucykpO3JldHVybiBfcmVzdWx0c30sR2V0RmllbGRCbG9jay5wcm90b3R5cGUuZmllbGQ9ZnVuY3Rpb24oZmllbGQsYWxpYXMsb3B0aW9ucyl7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksbnVsbD09b3B0aW9ucyYmKG9wdGlvbnM9e30pLGZpZWxkPXRoaXMuX3Nhbml0aXplRmllbGQoZmllbGQsb3B0aW9ucyksYWxpYXMmJihhbGlhcz10aGlzLl9zYW5pdGl6ZUZpZWxkQWxpYXMoYWxpYXMpKSx0aGlzLl9maWVsZHMucHVzaCh7bmFtZTpmaWVsZCxhbGlhczphbGlhc30pfSxHZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3ZhciBmaWVsZCxmaWVsZHMsX2ksX2xlbixfcmVmMztmb3IoZmllbGRzPSIiLF9yZWYzPXRoaXMuX2ZpZWxkcyxfaT0wLF9sZW49X3JlZjMubGVuZ3RoO19sZW4+X2k7X2krKylmaWVsZD1fcmVmM1tfaV0sIiIhPT1maWVsZHMmJihmaWVsZHMrPSIsICIpLGZpZWxkcys9ZmllbGQubmFtZSxmaWVsZC5hbGlhcyYmKGZpZWxkcys9IiBBUyAiK2ZpZWxkLmFsaWFzKTtyZXR1cm4iIj09PWZpZWxkcz8iKiI6ZmllbGRzfSxHZXRGaWVsZEJsb2NrfShjbHMuQmxvY2spLGNscy5BYnN0cmFjdFNldEZpZWxkQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBBYnN0cmFjdFNldEZpZWxkQmxvY2sob3B0aW9ucyl7QWJzdHJhY3RTZXRGaWVsZEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5maWVsZE9wdGlvbnM9W10sdGhpcy5maWVsZHM9W10sdGhpcy52YWx1ZXM9W119cmV0dXJuIF9fZXh0ZW5kcyhBYnN0cmFjdFNldEZpZWxkQmxvY2ssX3N1cGVyKSxBYnN0cmFjdFNldEZpZWxkQmxvY2sucHJvdG90eXBlLl9zZXQ9ZnVuY3Rpb24oZmllbGQsdmFsdWUsb3B0aW9ucyl7dmFyIGluZGV4O2lmKG51bGw9PW9wdGlvbnMmJihvcHRpb25zPXt9KSx0aGlzLnZhbHVlcy5sZW5ndGg+MSl0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBjYWxsIHNldCBvciBzZXRGaWVsZHMgb24gbXVsdGlwbGUgcm93cyBvZiBmaWVsZHMuIik7cmV0dXJuIHZvaWQgMCE9PXZhbHVlJiYodmFsdWU9dGhpcy5fc2FuaXRpemVWYWx1ZSh2YWx1ZSkpLGluZGV4PXRoaXMuZmllbGRzLmluZGV4T2YodGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCxvcHRpb25zKSksLTEhPT1pbmRleD8odGhpcy52YWx1ZXNbMF1baW5kZXhdPXZhbHVlLHRoaXMuZmllbGRPcHRpb25zWzBdW2luZGV4XT1vcHRpb25zKToodGhpcy5maWVsZHMucHVzaCh0aGlzLl9zYW5pdGl6ZUZpZWxkKGZpZWxkLG9wdGlvbnMpKSxpbmRleD10aGlzLmZpZWxkcy5sZW5ndGgtMSxBcnJheS5pc0FycmF5KHRoaXMudmFsdWVzWzBdKT8odGhpcy52YWx1ZXNbMF1baW5kZXhdPXZhbHVlLHRoaXMuZmllbGRPcHRpb25zWzBdW2luZGV4XT1vcHRpb25zKToodGhpcy52YWx1ZXMucHVzaChbdmFsdWVdKSx0aGlzLmZpZWxkT3B0aW9ucy5wdXNoKFtvcHRpb25zXSkpKSx0aGlzfSxBYnN0cmFjdFNldEZpZWxkQmxvY2sucHJvdG90eXBlLl9zZXRGaWVsZHM9ZnVuY3Rpb24oZmllbGRzLG9wdGlvbnMpe3ZhciBmaWVsZDtpZihudWxsPT1vcHRpb25zJiYob3B0aW9ucz17fSksIm9iamVjdCIhPXR5cGVvZiBmaWVsZHMpdGhyb3cgbmV3IEVycm9yKCJFeHBlY3RlZCBhbiBvYmplY3QgYnV0IGdvdCAiK3R5cGVvZiBmaWVsZHMpO2ZvcihmaWVsZCBpbiBmaWVsZHMpX19oYXNQcm9wLmNhbGwoZmllbGRzLGZpZWxkKSYmdGhpcy5fc2V0KGZpZWxkLGZpZWxkc1tmaWVsZF0sb3B0aW9ucyk7cmV0dXJuIHRoaXN9LEFic3RyYWN0U2V0RmllbGRCbG9jay5wcm90b3R5cGUuX3NldEZpZWxkc1Jvd3M9ZnVuY3Rpb24oZmllbGRzUm93cyxvcHRpb25zKXt2YXIgZmllbGQsaSxpbmRleCx2YWx1ZSxfaSxfcmVmMyxfcmVmNDtpZihudWxsPT1vcHRpb25zJiYob3B0aW9ucz17fSksIUFycmF5LmlzQXJyYXkoZmllbGRzUm93cykpdGhyb3cgbmV3IEVycm9yKCJFeHBlY3RlZCBhbiBhcnJheSBvZiBvYmplY3RzIGJ1dCBnb3QgIit0eXBlb2YgZmllbGRzUm93cyk7Zm9yKHRoaXMuZmllbGRzPVtdLHRoaXMudmFsdWVzPVtdLGk9X2k9MCxfcmVmMz1maWVsZHNSb3dzLmxlbmd0aDtfcmVmMz49MD9fcmVmMz5faTpfaT5fcmVmMztpPV9yZWYzPj0wPysrX2k6LS1faSl7X3JlZjQ9ZmllbGRzUm93c1tpXTtmb3IoZmllbGQgaW4gX3JlZjQpaWYoX19oYXNQcm9wLmNhbGwoX3JlZjQsZmllbGQpKXtpZihpbmRleD10aGlzLmZpZWxkcy5pbmRleE9mKHRoaXMuX3Nhbml0aXplRmllbGQoZmllbGQsb3B0aW9ucykpLGk+MCYmLTE9PT1pbmRleCl0aHJvdyBuZXcgRXJyb3IoIkFsbCBmaWVsZHMgaW4gc3Vic2VxdWVudCByb3dzIG11c3QgbWF0Y2ggdGhlIGZpZWxkcyBpbiB0aGUgZmlyc3Qgcm93Iik7LTE9PT1pbmRleCYmKHRoaXMuZmllbGRzLnB1c2godGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCxvcHRpb25zKSksaW5kZXg9dGhpcy5maWVsZHMubGVuZ3RoLTEpLHZhbHVlPXRoaXMuX3Nhbml0aXplVmFsdWUoZmllbGRzUm93c1tpXVtmaWVsZF0pLEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZXNbaV0pPyh0aGlzLnZhbHVlc1tpXVtpbmRleF09dmFsdWUsdGhpcy5maWVsZE9wdGlvbnNbaV1baW5kZXhdPW9wdGlvbnMpOih0aGlzLnZhbHVlc1tpXT1bdmFsdWVdLHRoaXMuZmllbGRPcHRpb25zW2ldPVtvcHRpb25zXSl9fXJldHVybiB0aGlzfSxBYnN0cmFjdFNldEZpZWxkQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJOb3QgeWV0IGltcGxlbWVudGVkIil9LEFic3RyYWN0U2V0RmllbGRCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiTm90IHlldCBpbXBsZW1lbnRlZCIpfSxBYnN0cmFjdFNldEZpZWxkQmxvY2t9KGNscy5CbG9jayksY2xzLlNldEZpZWxkQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBTZXRGaWVsZEJsb2NrKCl7cmV0dXJuIF9yZWYzPVNldEZpZWxkQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKFNldEZpZWxkQmxvY2ssX3N1cGVyKSxTZXRGaWVsZEJsb2NrLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZmllbGQsdmFsdWUsb3B0aW9ucyl7cmV0dXJuIHRoaXMuX3NldChmaWVsZCx2YWx1ZSxvcHRpb25zKX0sU2V0RmllbGRCbG9jay5wcm90b3R5cGUuc2V0RmllbGRzPWZ1bmN0aW9uKGZpZWxkcyxvcHRpb25zKXtyZXR1cm4gdGhpcy5fc2V0RmllbGRzKGZpZWxkcyxvcHRpb25zKX0sU2V0RmllbGRCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXt2YXIgZmllbGQsZmllbGRPcHRpb25zLGksc3RyLHZhbHVlLF9pLF9yZWY0O2lmKDA+PXRoaXMuZmllbGRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoInNldCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpO2ZvcihzdHI9IiIsaT1faT0wLF9yZWY0PXRoaXMuZmllbGRzLmxlbmd0aDtfcmVmND49MD9fcmVmND5faTpfaT5fcmVmNDtpPV9yZWY0Pj0wPysrX2k6LS1faSlmaWVsZD10aGlzLmZpZWxkc1tpXSwiIiE9PXN0ciYmKHN0cis9IiwgIiksdmFsdWU9dGhpcy52YWx1ZXNbMF1baV0sZmllbGRPcHRpb25zPXRoaXMuZmllbGRPcHRpb25zWzBdW2ldLHN0cis9InVuZGVmaW5lZCI9PXR5cGVvZiB2YWx1ZT9maWVsZDoiIitmaWVsZCsiID0gIit0aGlzLl9mb3JtYXRWYWx1ZSh2YWx1ZSxmaWVsZE9wdGlvbnMpO3JldHVybiJTRVQgIitzdHJ9LFNldEZpZWxkQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW09ZnVuY3Rpb24oKXt2YXIgZmllbGQsaSxzdHIsdmFscyx2YWx1ZSxfaSxfcmVmNDtpZigwPj10aGlzLmZpZWxkcy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJzZXQoKSBuZWVkcyB0byBiZSBjYWxsZWQiKTtmb3Ioc3RyPSIiLHZhbHM9W10saT1faT0wLF9yZWY0PXRoaXMuZmllbGRzLmxlbmd0aDtfcmVmND49MD9fcmVmND5faTpfaT5fcmVmNDtpPV9yZWY0Pj0wPysrX2k6LS1faSlmaWVsZD10aGlzLmZpZWxkc1tpXSwiIiE9PXN0ciYmKHN0cis9IiwgIiksdmFsdWU9dGhpcy52YWx1ZXNbMF1baV0sInVuZGVmaW5lZCI9PXR5cGVvZiB2YWx1ZT9zdHIrPWZpZWxkOihzdHIrPSIiK2ZpZWxkKyIgPSA/Iix2YWxzLnB1c2godGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKHZhbHVlKSkpO3JldHVybnt0ZXh0OiJTRVQgIitzdHIsdmFsdWVzOnZhbHN9fSxTZXRGaWVsZEJsb2NrfShjbHMuQWJzdHJhY3RTZXRGaWVsZEJsb2NrKSxjbHMuSW5zZXJ0RmllbGRWYWx1ZUJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gSW5zZXJ0RmllbGRWYWx1ZUJsb2NrKCl7cmV0dXJuIF9yZWY0PUluc2VydEZpZWxkVmFsdWVCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBfX2V4dGVuZHMoSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLF9zdXBlciksSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZmllbGQsdmFsdWUsb3B0aW9ucyl7cmV0dXJuIG51bGw9PW9wdGlvbnMmJihvcHRpb25zPXt9KSx0aGlzLl9zZXQoZmllbGQsdmFsdWUsb3B0aW9ucyl9LEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuc2V0RmllbGRzPWZ1bmN0aW9uKGZpZWxkcyxvcHRpb25zKXtyZXR1cm4gdGhpcy5fc2V0RmllbGRzKGZpZWxkcyxvcHRpb25zKX0sSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5zZXRGaWVsZHNSb3dzPWZ1bmN0aW9uKGZpZWxkc1Jvd3Msb3B0aW9ucyl7cmV0dXJuIHRoaXMuX3NldEZpZWxkc1Jvd3MoZmllbGRzUm93cyxvcHRpb25zKX0sSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5fYnVpbGRWYWxzPWZ1bmN0aW9uKCl7dmFyIGZvcm1hdHRlZFZhbHVlLGksaix2YWxzLF9pLF9qLF9yZWY1LF9yZWY2O2Zvcih2YWxzPVtdLGk9X2k9MCxfcmVmNT10aGlzLnZhbHVlcy5sZW5ndGg7X3JlZjU+PTA/X3JlZjU+X2k6X2k+X3JlZjU7aT1fcmVmNT49MD8rK19pOi0tX2kpZm9yKGo9X2o9MCxfcmVmNj10aGlzLnZhbHVlc1tpXS5sZW5ndGg7X3JlZjY+PTA/X3JlZjY+X2o6X2o+X3JlZjY7aj1fcmVmNj49MD8rK19qOi0tX2opZm9ybWF0dGVkVmFsdWU9dGhpcy5fZm9ybWF0VmFsdWUodGhpcy52YWx1ZXNbaV1bal0sdGhpcy5maWVsZE9wdGlvbnNbaV1bal0pLCJzdHJpbmciPT10eXBlb2YgdmFsc1tpXT92YWxzW2ldKz0iLCAiK2Zvcm1hdHRlZFZhbHVlOnZhbHNbaV09IiIrZm9ybWF0dGVkVmFsdWU7CnJldHVybiB2YWxzfSxJbnNlcnRGaWVsZFZhbHVlQmxvY2sucHJvdG90eXBlLl9idWlsZFZhbFBhcmFtcz1mdW5jdGlvbigpe3ZhciBpLGoscGFyYW1zLHZhbHMsX2ksX2osX3JlZjUsX3JlZjY7Zm9yKHZhbHM9W10scGFyYW1zPVtdLGk9X2k9MCxfcmVmNT10aGlzLnZhbHVlcy5sZW5ndGg7X3JlZjU+PTA/X3JlZjU+X2k6X2k+X3JlZjU7aT1fcmVmNT49MD8rK19pOi0tX2kpZm9yKGo9X2o9MCxfcmVmNj10aGlzLnZhbHVlc1tpXS5sZW5ndGg7X3JlZjY+PTA/X3JlZjY+X2o6X2o+X3JlZjY7aj1fcmVmNj49MD8rK19qOi0tX2opcGFyYW1zLnB1c2godGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKHRoaXMudmFsdWVzW2ldW2pdKSksInN0cmluZyI9PXR5cGVvZiB2YWxzW2ldP3ZhbHNbaV0rPSIsID8iOnZhbHNbaV09Ij8iO3JldHVybnt2YWxzOnZhbHMscGFyYW1zOnBhcmFtc319LEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtpZigwPj10aGlzLmZpZWxkcy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJzZXQoKSBuZWVkcyB0byBiZSBjYWxsZWQiKTtyZXR1cm4iKCIrdGhpcy5maWVsZHMuam9pbigiLCAiKSsiKSBWQUxVRVMgKCIrdGhpcy5fYnVpbGRWYWxzKCkuam9pbigiKSwgKCIpKyIpIn0sSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5idWlsZFBhcmFtPWZ1bmN0aW9uKCl7dmFyIGkscGFyYW1zLHN0cix2YWxzLF9pLF9yZWY1LF9yZWY2O2lmKDA+PXRoaXMuZmllbGRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoInNldCgpIG5lZWRzIHRvIGJlIGNhbGxlZCIpO2ZvcihzdHI9IiIsX3JlZjU9dGhpcy5fYnVpbGRWYWxQYXJhbXMoKSx2YWxzPV9yZWY1LnZhbHMscGFyYW1zPV9yZWY1LnBhcmFtcyxpPV9pPTAsX3JlZjY9dGhpcy5maWVsZHMubGVuZ3RoO19yZWY2Pj0wP19yZWY2Pl9pOl9pPl9yZWY2O2k9X3JlZjY+PTA/KytfaTotLV9pKSIiIT09c3RyJiYoc3RyKz0iLCAiKSxzdHIrPXRoaXMuZmllbGRzW2ldO3JldHVybnt0ZXh0OiIoIitzdHIrIikgVkFMVUVTICgiK3ZhbHMuam9pbigiKSwgKCIpKyIpIix2YWx1ZXM6cGFyYW1zfX0sSW5zZXJ0RmllbGRWYWx1ZUJsb2NrfShjbHMuQWJzdHJhY3RTZXRGaWVsZEJsb2NrKSxjbHMuRGlzdGluY3RCbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIERpc3RpbmN0QmxvY2sob3B0aW9ucyl7RGlzdGluY3RCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMpLHRoaXMudXNlRGlzdGluY3Q9ITF9cmV0dXJuIF9fZXh0ZW5kcyhEaXN0aW5jdEJsb2NrLF9zdXBlciksRGlzdGluY3RCbG9jay5wcm90b3R5cGUuZGlzdGluY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51c2VEaXN0aW5jdD0hMH0sRGlzdGluY3RCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51c2VEaXN0aW5jdD8iRElTVElOQ1QiOiIifSxEaXN0aW5jdEJsb2NrfShjbHMuQmxvY2spLGNscy5Hcm91cEJ5QmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBHcm91cEJ5QmxvY2sob3B0aW9ucyl7R3JvdXBCeUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5ncm91cHM9W119cmV0dXJuIF9fZXh0ZW5kcyhHcm91cEJ5QmxvY2ssX3N1cGVyKSxHcm91cEJ5QmxvY2sucHJvdG90eXBlLmdyb3VwPWZ1bmN0aW9uKGZpZWxkKXtyZXR1cm4gZmllbGQ9dGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCksdGhpcy5ncm91cHMucHVzaChmaWVsZCl9LEdyb3VwQnlCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXt2YXIgZixncm91cHMsX2ksX2xlbixfcmVmNTtpZihncm91cHM9IiIsMDx0aGlzLmdyb3Vwcy5sZW5ndGgpe2ZvcihfcmVmNT10aGlzLmdyb3VwcyxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylmPV9yZWY1W19pXSwiIiE9PWdyb3VwcyYmKGdyb3Vwcys9IiwgIiksZ3JvdXBzKz1mO2dyb3Vwcz0iR1JPVVAgQlkgIitncm91cHN9cmV0dXJuIGdyb3Vwc30sR3JvdXBCeUJsb2NrfShjbHMuQmxvY2spLGNscy5PZmZzZXRCbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIE9mZnNldEJsb2NrKG9wdGlvbnMpe09mZnNldEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5vZmZzZXRzPW51bGx9cmV0dXJuIF9fZXh0ZW5kcyhPZmZzZXRCbG9jayxfc3VwZXIpLE9mZnNldEJsb2NrLnByb3RvdHlwZS5vZmZzZXQ9ZnVuY3Rpb24oc3RhcnQpe3JldHVybiBzdGFydD10aGlzLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0KHN0YXJ0KSx0aGlzLm9mZnNldHM9c3RhcnR9LE9mZnNldEJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9mZnNldHM/Ik9GRlNFVCAiK3RoaXMub2Zmc2V0czoiIn0sT2Zmc2V0QmxvY2t9KGNscy5CbG9jayksY2xzLldoZXJlQmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBXaGVyZUJsb2NrKG9wdGlvbnMpe1doZXJlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLndoZXJlcz1bXX1yZXR1cm4gX19leHRlbmRzKFdoZXJlQmxvY2ssX3N1cGVyKSxXaGVyZUJsb2NrLnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbigpe3ZhciBjLGNvbmRpdGlvbixmaW5hbENvbmRpdGlvbixmaW5hbFZhbHVlcyxpZHgsaW5WYWx1ZXMsaXRlbSxuZXh0VmFsdWUsdCx2YWx1ZXMsX2ksX2osX2xlbixfcmVmNTtpZihjb25kaXRpb249YXJndW1lbnRzWzBdLHZhbHVlcz0yPD1hcmd1bWVudHMubGVuZ3RoP19fc2xpY2UuY2FsbChhcmd1bWVudHMsMSk6W10sY29uZGl0aW9uPXRoaXMuX3Nhbml0aXplQ29uZGl0aW9uKGNvbmRpdGlvbiksZmluYWxDb25kaXRpb249IiIsZmluYWxWYWx1ZXM9W10sY29uZGl0aW9uIGluc3RhbmNlb2YgY2xzLkV4cHJlc3Npb24pdD1jb25kaXRpb24udG9QYXJhbSgpLGZpbmFsQ29uZGl0aW9uPXQudGV4dCxmaW5hbFZhbHVlcz10LnZhbHVlcztlbHNlIGZvcihpZHg9X2k9MCxfcmVmNT1jb25kaXRpb24ubGVuZ3RoO19yZWY1Pj0wP19yZWY1Pl9pOl9pPl9yZWY1O2lkeD1fcmVmNT49MD8rK19pOi0tX2kpaWYoYz1jb25kaXRpb24uY2hhckF0KGlkeCksIj8iPT09YyYmMDx2YWx1ZXMubGVuZ3RoKWlmKG5leHRWYWx1ZT12YWx1ZXMuc2hpZnQoKSxBcnJheS5pc0FycmF5KG5leHRWYWx1ZSkpe2ZvcihpblZhbHVlcz1bXSxfaj0wLF9sZW49bmV4dFZhbHVlLmxlbmd0aDtfbGVuPl9qO19qKyspaXRlbT1uZXh0VmFsdWVbX2pdLGluVmFsdWVzLnB1c2godGhpcy5fc2FuaXRpemVWYWx1ZShpdGVtKSk7ZmluYWxWYWx1ZXM9ZmluYWxWYWx1ZXMuY29uY2F0KGluVmFsdWVzKSxmaW5hbENvbmRpdGlvbis9IigiK2Z1bmN0aW9uKCl7dmFyIF9rLF9sZW4xLF9yZXN1bHRzO2ZvcihfcmVzdWx0cz1bXSxfaz0wLF9sZW4xPWluVmFsdWVzLmxlbmd0aDtfbGVuMT5faztfaysrKWl0ZW09aW5WYWx1ZXNbX2tdLF9yZXN1bHRzLnB1c2goIj8iKTtyZXR1cm4gX3Jlc3VsdHN9KCkuam9pbigiLCAiKSsiKSJ9ZWxzZSBmaW5hbENvbmRpdGlvbis9Ij8iLGZpbmFsVmFsdWVzLnB1c2godGhpcy5fc2FuaXRpemVWYWx1ZShuZXh0VmFsdWUpKTtlbHNlIGZpbmFsQ29uZGl0aW9uKz1jO3JldHVybiIiIT09ZmluYWxDb25kaXRpb24/dGhpcy53aGVyZXMucHVzaCh7dGV4dDpmaW5hbENvbmRpdGlvbix2YWx1ZXM6ZmluYWxWYWx1ZXN9KTp2b2lkIDB9LFdoZXJlQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7dmFyIGMsaWR4LHBJbmRleCx3aGVyZSx3aGVyZVN0cixfaSxfaixfbGVuLF9yZWY1LF9yZWY2O2lmKDA+PXRoaXMud2hlcmVzLmxlbmd0aClyZXR1cm4iIjtmb3Iod2hlcmVTdHI9IiIsX3JlZjU9dGhpcy53aGVyZXMsX2k9MCxfbGVuPV9yZWY1Lmxlbmd0aDtfbGVuPl9pO19pKyspaWYod2hlcmU9X3JlZjVbX2ldLCIiIT09d2hlcmVTdHImJih3aGVyZVN0cis9IikgQU5EICgiKSwwPHdoZXJlLnZhbHVlcy5sZW5ndGgpZm9yKHBJbmRleD0wLGlkeD1faj0wLF9yZWY2PXdoZXJlLnRleHQubGVuZ3RoO19yZWY2Pj0wP19yZWY2Pl9qOl9qPl9yZWY2O2lkeD1fcmVmNj49MD8rK19qOi0tX2opYz13aGVyZS50ZXh0LmNoYXJBdChpZHgpLHdoZXJlU3RyKz0iPyI9PT1jP3RoaXMuX2Zvcm1hdFZhbHVlKHdoZXJlLnZhbHVlc1twSW5kZXgrK10pOmM7ZWxzZSB3aGVyZVN0cis9d2hlcmUudGV4dDtyZXR1cm4iV0hFUkUgKCIrd2hlcmVTdHIrIikifSxXaGVyZUJsb2NrLnByb3RvdHlwZS5idWlsZFBhcmFtPWZ1bmN0aW9uKCl7dmFyIHJldCx2LHZhbHVlLHdoZXJlLHdoZXJlU3RyLF9pLF9qLF9sZW4sX2xlbjEsX3JlZjUsX3JlZjY7aWYocmV0PXt0ZXh0OiIiLHZhbHVlczpbXX0sMD49dGhpcy53aGVyZXMubGVuZ3RoKXJldHVybiByZXQ7Zm9yKHdoZXJlU3RyPSIiLF9yZWY1PXRoaXMud2hlcmVzLF9pPTAsX2xlbj1fcmVmNS5sZW5ndGg7X2xlbj5faTtfaSsrKWZvcih3aGVyZT1fcmVmNVtfaV0sIiIhPT13aGVyZVN0ciYmKHdoZXJlU3RyKz0iKSBBTkQgKCIpLHdoZXJlU3RyKz13aGVyZS50ZXh0LF9yZWY2PXdoZXJlLnZhbHVlcyxfaj0wLF9sZW4xPV9yZWY2Lmxlbmd0aDtfbGVuMT5fajtfaisrKXY9X3JlZjZbX2pdLHJldC52YWx1ZXMucHVzaCh0aGlzLl9mb3JtYXRWYWx1ZUFzUGFyYW0odikpLHZhbHVlPXRoaXMuX2Zvcm1hdFZhbHVlQXNQYXJhbSh2YWx1ZSk7cmV0dXJuIHJldC50ZXh0PSJXSEVSRSAoIit3aGVyZVN0cisiKSIscmV0fSxXaGVyZUJsb2NrfShjbHMuQmxvY2spLGNscy5PcmRlckJ5QmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBPcmRlckJ5QmxvY2sob3B0aW9ucyl7T3JkZXJCeUJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5vcmRlcnM9W10sdGhpcy5fdmFsdWVzPVtdfXJldHVybiBfX2V4dGVuZHMoT3JkZXJCeUJsb2NrLF9zdXBlciksT3JkZXJCeUJsb2NrLnByb3RvdHlwZS5vcmRlcj1mdW5jdGlvbigpe3ZhciBhc2MsZmllbGQsdmFsdWVzO3JldHVybiBmaWVsZD1hcmd1bWVudHNbMF0sYXNjPWFyZ3VtZW50c1sxXSx2YWx1ZXM9Mzw9YXJndW1lbnRzLmxlbmd0aD9fX3NsaWNlLmNhbGwoYXJndW1lbnRzLDIpOltdLG51bGw9PWFzYyYmKGFzYz0hMCksZmllbGQ9dGhpcy5fc2FuaXRpemVGaWVsZChmaWVsZCksdGhpcy5fdmFsdWVzPXZhbHVlcyx0aGlzLm9yZGVycy5wdXNoKHtmaWVsZDpmaWVsZCxkaXI6YXNjPyEwOiExfSl9LE9yZGVyQnlCbG9jay5wcm90b3R5cGUuX2J1aWxkU3RyPWZ1bmN0aW9uKHRvUGFyYW0pe3ZhciBjLGZzdHIsaWR4LG8sb3JkZXJzLHBJbmRleCxfaSxfaixfbGVuLF9yZWY1LF9yZWY2O2lmKG51bGw9PXRvUGFyYW0mJih0b1BhcmFtPSExKSwwPHRoaXMub3JkZXJzLmxlbmd0aCl7Zm9yKHBJbmRleD0wLG9yZGVycz0iIixfcmVmNT10aGlzLm9yZGVycyxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKyl7aWYobz1fcmVmNVtfaV0sIiIhPT1vcmRlcnMmJihvcmRlcnMrPSIsICIpLGZzdHI9IiIsdG9QYXJhbSlmc3RyPW8uZmllbGQ7ZWxzZSBmb3IoaWR4PV9qPTAsX3JlZjY9by5maWVsZC5sZW5ndGg7X3JlZjY+PTA/X3JlZjY+X2o6X2o+X3JlZjY7aWR4PV9yZWY2Pj0wPysrX2o6LS1failjPW8uZmllbGQuY2hhckF0KGlkeCksZnN0cis9Ij8iPT09Yz90aGlzLl9mb3JtYXRWYWx1ZSh0aGlzLl92YWx1ZXNbcEluZGV4KytdKTpjO29yZGVycys9IiIrZnN0cisiICIrKG8uZGlyPyJBU0MiOiJERVNDIil9cmV0dXJuIk9SREVSIEJZICIrb3JkZXJzfXJldHVybiIifSxPcmRlckJ5QmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2J1aWxkU3RyKCl9LE9yZGVyQnlCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbT1mdW5jdGlvbigpe3ZhciBfdGhpcz10aGlzO3JldHVybnt0ZXh0OnRoaXMuX2J1aWxkU3RyKCEwKSx2YWx1ZXM6dGhpcy5fdmFsdWVzLm1hcChmdW5jdGlvbih2KXtyZXR1cm4gX3RoaXMuX2Zvcm1hdFZhbHVlQXNQYXJhbSh2KX0pfX0sT3JkZXJCeUJsb2NrfShjbHMuQmxvY2spLGNscy5MaW1pdEJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gTGltaXRCbG9jayhvcHRpb25zKXtMaW1pdEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5saW1pdHM9bnVsbH1yZXR1cm4gX19leHRlbmRzKExpbWl0QmxvY2ssX3N1cGVyKSxMaW1pdEJsb2NrLnByb3RvdHlwZS5saW1pdD1mdW5jdGlvbihtYXgpe3JldHVybiBtYXg9dGhpcy5fc2FuaXRpemVMaW1pdE9mZnNldChtYXgpLHRoaXMubGltaXRzPW1heH0sTGltaXRCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5saW1pdHM/IkxJTUlUICIrdGhpcy5saW1pdHM6IiJ9LExpbWl0QmxvY2t9KGNscy5CbG9jayksY2xzLkpvaW5CbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIEpvaW5CbG9jayhvcHRpb25zKXtKb2luQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLmpvaW5zPVtdfXJldHVybiBfX2V4dGVuZHMoSm9pbkJsb2NrLF9zdXBlciksSm9pbkJsb2NrLnByb3RvdHlwZS5qb2luPWZ1bmN0aW9uKHRhYmxlLGFsaWFzLGNvbmRpdGlvbix0eXBlKXtyZXR1cm4gbnVsbD09YWxpYXMmJihhbGlhcz1udWxsKSxudWxsPT1jb25kaXRpb24mJihjb25kaXRpb249bnVsbCksbnVsbD09dHlwZSYmKHR5cGU9IklOTkVSIiksdGFibGU9dGhpcy5fc2FuaXRpemVUYWJsZSh0YWJsZSwhMCksYWxpYXMmJihhbGlhcz10aGlzLl9zYW5pdGl6ZVRhYmxlQWxpYXMoYWxpYXMpKSxjb25kaXRpb24mJihjb25kaXRpb249dGhpcy5fc2FuaXRpemVDb25kaXRpb24oY29uZGl0aW9uKSksdGhpcy5qb2lucy5wdXNoKHt0eXBlOnR5cGUsdGFibGU6dGFibGUsYWxpYXM6YWxpYXMsY29uZGl0aW9uOmNvbmRpdGlvbn0pLHRoaXN9LEpvaW5CbG9jay5wcm90b3R5cGUubGVmdF9qb2luPWZ1bmN0aW9uKHRhYmxlLGFsaWFzLGNvbmRpdGlvbil7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksbnVsbD09Y29uZGl0aW9uJiYoY29uZGl0aW9uPW51bGwpLHRoaXMuam9pbih0YWJsZSxhbGlhcyxjb25kaXRpb24sIkxFRlQiKX0sSm9pbkJsb2NrLnByb3RvdHlwZS5yaWdodF9qb2luPWZ1bmN0aW9uKHRhYmxlLGFsaWFzLGNvbmRpdGlvbil7cmV0dXJuIG51bGw9PWFsaWFzJiYoYWxpYXM9bnVsbCksbnVsbD09Y29uZGl0aW9uJiYoY29uZGl0aW9uPW51bGwpLHRoaXMuam9pbih0YWJsZSxhbGlhcyxjb25kaXRpb24sIlJJR0hUIil9LEpvaW5CbG9jay5wcm90b3R5cGUub3V0ZXJfam9pbj1mdW5jdGlvbih0YWJsZSxhbGlhcyxjb25kaXRpb24pe3JldHVybiBudWxsPT1hbGlhcyYmKGFsaWFzPW51bGwpLG51bGw9PWNvbmRpdGlvbiYmKGNvbmRpdGlvbj1udWxsKSx0aGlzLmpvaW4odGFibGUsYWxpYXMsY29uZGl0aW9uLCJPVVRFUiIpfSxKb2luQmxvY2sucHJvdG90eXBlLmxlZnRfb3V0ZXJfam9pbj1mdW5jdGlvbih0YWJsZSxhbGlhcyxjb25kaXRpb24pe3JldHVybiBudWxsPT1hbGlhcyYmKGFsaWFzPW51bGwpLG51bGw9PWNvbmRpdGlvbiYmKGNvbmRpdGlvbj1udWxsKSx0aGlzLmpvaW4odGFibGUsYWxpYXMsY29uZGl0aW9uLCJMRUZUIE9VVEVSIil9LEpvaW5CbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXt2YXIgaixqb2lucyxfaSxfbGVuLF9yZWY1O2Zvcihqb2lucz0iIixfcmVmNT10aGlzLmpvaW5zfHxbXSxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylqPV9yZWY1W19pXSwiIiE9PWpvaW5zJiYoam9pbnMrPSIgIiksam9pbnMrPSIiK2oudHlwZSsiIEpPSU4gIixqb2lucys9InN0cmluZyI9PXR5cGVvZiBqLnRhYmxlP2oudGFibGU6IigiK2oudGFibGUrIikiLGouYWxpYXMmJihqb2lucys9IiAiK2ouYWxpYXMpLGouY29uZGl0aW9uJiYoam9pbnMrPSIgT04gKCIrai5jb25kaXRpb24rIikiKTtyZXR1cm4gam9pbnN9LEpvaW5CbG9ja30oY2xzLkJsb2NrKSxjbHMuUXVlcnlCdWlsZGVyPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gUXVlcnlCdWlsZGVyKG9wdGlvbnMsYmxvY2tzKXt2YXIgYmxvY2ssbWV0aG9kQm9keSxtZXRob2ROYW1lLF9mbixfaSxfbGVuLF9yZWY1LF9yZWY2LF90aGlzPXRoaXM7Zm9yKFF1ZXJ5QnVpbGRlci5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMpLHRoaXMuYmxvY2tzPWJsb2Nrc3x8W10sX3JlZjU9dGhpcy5ibG9ja3MsX2k9MCxfbGVuPV9yZWY1Lmxlbmd0aDtfbGVuPl9pO19pKyspe2Jsb2NrPV9yZWY1W19pXSxfcmVmNj1ibG9jay5leHBvc2VkTWV0aG9kcygpLF9mbj1mdW5jdGlvbihibG9jayxuYW1lLGJvZHkpe3JldHVybiBfdGhpc1tuYW1lXT1mdW5jdGlvbigpe3JldHVybiBib2R5LmFwcGx5KGJsb2NrLGFyZ3VtZW50cyksX3RoaXN9fTtmb3IobWV0aG9kTmFtZSBpbiBfcmVmNil7aWYobWV0aG9kQm9keT1fcmVmNlttZXRob2ROYW1lXSxudWxsIT10aGlzW21ldGhvZE5hbWVdKXRocm93IG5ldyBFcnJvcigiIit0aGlzLl9nZXRPYmplY3RDbGFzc05hbWUodGhpcykrIiBhbHJlYWR5IGhhcyBhIGJ1aWxkZXIgbWV0aG9kIGNhbGxlZDogIittZXRob2ROYW1lKTtfZm4oYmxvY2ssbWV0aG9kTmFtZSxtZXRob2RCb2R5KX19fXJldHVybiBfX2V4dGVuZHMoUXVlcnlCdWlsZGVyLF9zdXBlciksUXVlcnlCdWlsZGVyLnByb3RvdHlwZS5yZWdpc3RlclZhbHVlSGFuZGxlcj1mdW5jdGlvbih0eXBlLGhhbmRsZXIpe3ZhciBibG9jayxfaSxfbGVuLF9yZWY1O2ZvcihfcmVmNT10aGlzLmJsb2NrcyxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylibG9jaz1fcmVmNVtfaV0sYmxvY2sucmVnaXN0ZXJWYWx1ZUhhbmRsZXIodHlwZSxoYW5kbGVyKTtyZXR1cm4gUXVlcnlCdWlsZGVyLl9fc3VwZXJfXy5yZWdpc3RlclZhbHVlSGFuZGxlci5jYWxsKHRoaXMsdHlwZSxoYW5kbGVyKSx0aGlzfSxRdWVyeUJ1aWxkZXIucHJvdG90eXBlLnVwZGF0ZU9wdGlvbnM9ZnVuY3Rpb24ob3B0aW9ucyl7dmFyIGJsb2NrLF9pLF9sZW4sX3JlZjUsX3Jlc3VsdHM7Zm9yKHRoaXMub3B0aW9ucz1fZXh0ZW5kKHt9LHRoaXMub3B0aW9ucyxvcHRpb25zKSxfcmVmNT10aGlzLmJsb2NrcyxfcmVzdWx0cz1bXSxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylibG9jaz1fcmVmNVtfaV0sX3Jlc3VsdHMucHVzaChibG9jay5vcHRpb25zPV9leHRlbmQoe30sYmxvY2sub3B0aW9ucyxvcHRpb25zKSk7cmV0dXJuIF9yZXN1bHRzfSxRdWVyeUJ1aWxkZXIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGJsb2NrO3JldHVybiBmdW5jdGlvbigpe3ZhciBfaSxfbGVuLF9yZWY1LF9yZXN1bHRzO2ZvcihfcmVmNT10aGlzLmJsb2NrcyxfcmVzdWx0cz1bXSxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylibG9jaz1fcmVmNVtfaV0sX3Jlc3VsdHMucHVzaChibG9jay5idWlsZFN0cih0aGlzKSk7cmV0dXJuIF9yZXN1bHRzfS5jYWxsKHRoaXMpLmZpbHRlcihmdW5jdGlvbih2KXtyZXR1cm4gMDx2Lmxlbmd0aH0pLmpvaW4odGhpcy5vcHRpb25zLnNlcGFyYXRvcil9LFF1ZXJ5QnVpbGRlci5wcm90b3R5cGUudG9QYXJhbT1mdW5jdGlvbigpe3ZhciBibG9jayxibG9ja3MsaSxyZXN1bHQsX3JlZjU7cmV0dXJuIHJlc3VsdD17dGV4dDoiIix2YWx1ZXM6W119LGJsb2Nrcz1mdW5jdGlvbigpe3ZhciBfaSxfbGVuLF9yZWY1LF9yZXN1bHRzO2ZvcihfcmVmNT10aGlzLmJsb2NrcyxfcmVzdWx0cz1bXSxfaT0wLF9sZW49X3JlZjUubGVuZ3RoO19sZW4+X2k7X2krKylibG9jaz1fcmVmNVtfaV0sX3Jlc3VsdHMucHVzaChibG9jay5idWlsZFBhcmFtKHRoaXMpKTtyZXR1cm4gX3Jlc3VsdHN9LmNhbGwodGhpcykscmVzdWx0LnRleHQ9ZnVuY3Rpb24oKXt2YXIgX2ksX2xlbixfcmVzdWx0cztmb3IoX3Jlc3VsdHM9W10sX2k9MCxfbGVuPWJsb2Nrcy5sZW5ndGg7X2xlbj5faTtfaSsrKWJsb2NrPWJsb2Nrc1tfaV0sX3Jlc3VsdHMucHVzaChibG9jay50ZXh0KTtyZXR1cm4gX3Jlc3VsdHN9KCkuZmlsdGVyKGZ1bmN0aW9uKHYpe3JldHVybiAwPHYubGVuZ3RofSkuam9pbih0aGlzLm9wdGlvbnMuc2VwYXJhdG9yKSxyZXN1bHQudmFsdWVzPShfcmVmNT1bXSkuY29uY2F0LmFwcGx5KF9yZWY1LGZ1bmN0aW9uKCl7dmFyIF9pLF9sZW4sX3Jlc3VsdHM7Zm9yKF9yZXN1bHRzPVtdLF9pPTAsX2xlbj1ibG9ja3MubGVuZ3RoO19sZW4+X2k7X2krKylibG9jaz1ibG9ja3NbX2ldLF9yZXN1bHRzLnB1c2goYmxvY2sudmFsdWVzKTtyZXR1cm4gX3Jlc3VsdHN9KCkpLHRoaXMub3B0aW9ucy5udW1iZXJlZFBhcmFtZXRlcnMmJihpPTAscmVzdWx0LnRleHQ9cmVzdWx0LnRleHQucmVwbGFjZSgvXD8vZyxmdW5jdGlvbigpe3JldHVybiIkIisgKytpfSkpLHJlc3VsdH0sUXVlcnlCdWlsZGVyLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBibG9jaztyZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5vcHRpb25zLGZ1bmN0aW9uKCl7dmFyIF9pLF9sZW4sX3JlZjUsX3Jlc3VsdHM7Zm9yKF9yZWY1PXRoaXMuYmxvY2tzLF9yZXN1bHRzPVtdLF9pPTAsX2xlbj1fcmVmNS5sZW5ndGg7X2xlbj5faTtfaSsrKWJsb2NrPV9yZWY1W19pXSxfcmVzdWx0cy5wdXNoKGJsb2NrLmNsb25lKCkpO3JldHVybiBfcmVzdWx0c30uY2FsbCh0aGlzKSl9LFF1ZXJ5QnVpbGRlci5wcm90b3R5cGUuaXNOZXN0YWJsZT1mdW5jdGlvbigpe3JldHVybiExfSxRdWVyeUJ1aWxkZXJ9KGNscy5CYXNlQnVpbGRlciksY2xzLlNlbGVjdD1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIFNlbGVjdChvcHRpb25zLGJsb2Nrcyl7bnVsbD09YmxvY2tzJiYoYmxvY2tzPW51bGwpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJTRUxFQ1QiKSxuZXcgY2xzLkRpc3RpbmN0QmxvY2sob3B0aW9ucyksbmV3IGNscy5HZXRGaWVsZEJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuRnJvbVRhYmxlQmxvY2soX2V4dGVuZCh7fSxvcHRpb25zLHthbGxvd05lc3RlZDohMH0pKSxuZXcgY2xzLkpvaW5CbG9jayhfZXh0ZW5kKHt9LG9wdGlvbnMse2FsbG93TmVzdGVkOiEwfSkpLG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSxuZXcgY2xzLkdyb3VwQnlCbG9jayhvcHRpb25zKSxuZXcgY2xzLk9yZGVyQnlCbG9jayhvcHRpb25zKSxuZXcgY2xzLkxpbWl0QmxvY2sob3B0aW9ucyksbmV3IGNscy5PZmZzZXRCbG9jayhvcHRpb25zKV0pLFNlbGVjdC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMsYmxvY2tzKX1yZXR1cm4gX19leHRlbmRzKFNlbGVjdCxfc3VwZXIpLFNlbGVjdC5wcm90b3R5cGUuaXNOZXN0YWJsZT1mdW5jdGlvbigpe3JldHVybiEwfSxTZWxlY3R9KGNscy5RdWVyeUJ1aWxkZXIpLGNscy5VcGRhdGU9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBVcGRhdGUob3B0aW9ucyxibG9ja3Mpe251bGw9PWJsb2NrcyYmKGJsb2Nrcz1udWxsKSxibG9ja3N8fChibG9ja3M9W25ldyBjbHMuU3RyaW5nQmxvY2sob3B0aW9ucywiVVBEQVRFIiksbmV3IGNscy5VcGRhdGVUYWJsZUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuU2V0RmllbGRCbG9jayhvcHRpb25zKSxuZXcgY2xzLldoZXJlQmxvY2sob3B0aW9ucyksbmV3IGNscy5PcmRlckJ5QmxvY2sob3B0aW9ucyksbmV3IGNscy5MaW1pdEJsb2NrKG9wdGlvbnMpXSksVXBkYXRlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoVXBkYXRlLF9zdXBlciksVXBkYXRlfShjbHMuUXVlcnlCdWlsZGVyKSxjbHMuRGVsZXRlPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gRGVsZXRlKG9wdGlvbnMsYmxvY2tzKXtudWxsPT1ibG9ja3MmJihibG9ja3M9bnVsbCksYmxvY2tzfHwoYmxvY2tzPVtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsIkRFTEVURSIpLG5ldyBjbHMuRnJvbVRhYmxlQmxvY2soX2V4dGVuZCh7fSxvcHRpb25zLHtzaW5nbGVUYWJsZTohMH0pKSxuZXcgY2xzLkpvaW5CbG9jayhvcHRpb25zKSxuZXcgY2xzLldoZXJlQmxvY2sob3B0aW9ucyksbmV3IGNscy5PcmRlckJ5QmxvY2sob3B0aW9ucyksbmV3IGNscy5MaW1pdEJsb2NrKG9wdGlvbnMpXSksRGVsZXRlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoRGVsZXRlLF9zdXBlciksRGVsZXRlfShjbHMuUXVlcnlCdWlsZGVyKSxjbHMuSW5zZXJ0PWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gSW5zZXJ0KG9wdGlvbnMsYmxvY2tzKXtudWxsPT1ibG9ja3MmJihibG9ja3M9bnVsbCksYmxvY2tzfHwoYmxvY2tzPVtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsIklOU0VSVCIpLG5ldyBjbHMuSW50b1RhYmxlQmxvY2sob3B0aW9ucyksbmV3IGNscy5JbnNlcnRGaWVsZFZhbHVlQmxvY2sob3B0aW9ucyldKSxJbnNlcnQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zLGJsb2Nrcyl9cmV0dXJuIF9fZXh0ZW5kcyhJbnNlcnQsX3N1cGVyKSxJbnNlcnR9KGNscy5RdWVyeUJ1aWxkZXIpLHNxdWVsPXtWRVJTSU9OOiIzLjguMSIsZXhwcjpmdW5jdGlvbigpe3JldHVybiBuZXcgY2xzLkV4cHJlc3Npb259LHNlbGVjdDpmdW5jdGlvbihvcHRpb25zLGJsb2Nrcyl7cmV0dXJuIG5ldyBjbHMuU2VsZWN0KG9wdGlvbnMsYmxvY2tzKX0sdXBkYXRlOmZ1bmN0aW9uKG9wdGlvbnMsYmxvY2tzKXtyZXR1cm4gbmV3IGNscy5VcGRhdGUob3B0aW9ucyxibG9ja3MpfSxpbnNlcnQ6ZnVuY3Rpb24ob3B0aW9ucyxibG9ja3Mpe3JldHVybiBuZXcgY2xzLkluc2VydChvcHRpb25zLGJsb2Nrcyl9LCJkZWxldGUiOmZ1bmN0aW9uKG9wdGlvbnMsYmxvY2tzKXtyZXR1cm4gbmV3IGNscy5EZWxldGUob3B0aW9ucyxibG9ja3MpfSxyZWdpc3RlclZhbHVlSGFuZGxlcjpjbHMucmVnaXN0ZXJWYWx1ZUhhbmRsZXJ9LHNxdWVsLnJlbW92ZT1zcXVlbFsiZGVsZXRlIl0sc3F1ZWwuY2xzPWNscywoInVuZGVmaW5lZCIhPXR5cGVvZiBkZWZpbmUmJm51bGwhPT1kZWZpbmU/ZGVmaW5lLmFtZDp2b2lkIDApP2RlZmluZShmdW5jdGlvbigpe3JldHVybiBzcXVlbH0pOigidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbnVsbCE9PW1vZHVsZT9tb2R1bGUuZXhwb3J0czp2b2lkIDApP21vZHVsZS5leHBvcnRzPXNxdWVsOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZudWxsIT09d2luZG93JiYod2luZG93LnNxdWVsPXNxdWVsKSxzcXVlbC5mbGF2b3Vycz17fSxzcXVlbC51c2VGbGF2b3VyPWZ1bmN0aW9uKGZsYXZvdXIpe2lmKCEoc3F1ZWwuZmxhdm91cnNbZmxhdm91cl1pbnN0YW5jZW9mIEZ1bmN0aW9uKSl0aHJvdyBuZXcgRXJyb3IoIkZsYXZvdXIgbm90IGF2YWlsYWJsZTogIitmbGF2b3VyKTtyZXR1cm4gc3F1ZWwuZmxhdm91cnNbZmxhdm91cl0uY2FsbChudWxsLHNxdWVsKSxzcXVlbH0sc3F1ZWwuZmxhdm91cnMucG9zdGdyZXM9ZnVuY3Rpb24oKXtyZXR1cm4gY2xzPXNxdWVsLmNscyxjbHMuRGVmYXVsdFF1ZXJ5QnVpbGRlck9wdGlvbnMubnVtYmVyZWRQYXJhbWV0ZXJzPSEwLGNscy5SZXR1cm5pbmdCbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIFJldHVybmluZ0Jsb2NrKG9wdGlvbnMpe1JldHVybmluZ0Jsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5fc3RyPW51bGx9cmV0dXJuIF9fZXh0ZW5kcyhSZXR1cm5pbmdCbG9jayxfc3VwZXIpLFJldHVybmluZ0Jsb2NrLnByb3RvdHlwZS5yZXR1cm5pbmc9ZnVuY3Rpb24ocmV0KXtyZXR1cm4gdGhpcy5fc3RyPXRoaXMuX3Nhbml0aXplRmllbGQocmV0KX0sUmV0dXJuaW5nQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0cj8iUkVUVVJOSU5HICIrdGhpcy5fc3RyOiIifSxSZXR1cm5pbmdCbG9ja30oY2xzLkJsb2NrKSxjbHMuSW5zZXJ0PWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gSW5zZXJ0KG9wdGlvbnMsYmxvY2tzKXtudWxsPT1ibG9ja3MmJihibG9ja3M9bnVsbCksYmxvY2tzfHwoYmxvY2tzPVtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsIklOU0VSVCIpLG5ldyBjbHMuSW50b1RhYmxlQmxvY2sob3B0aW9ucyksbmV3IGNscy5JbnNlcnRGaWVsZFZhbHVlQmxvY2sob3B0aW9ucyksbmV3IGNscy5SZXR1cm5pbmdCbG9jayhvcHRpb25zKV0pLEluc2VydC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMsYmxvY2tzKX1yZXR1cm4gX19leHRlbmRzKEluc2VydCxfc3VwZXIpLEluc2VydH0oY2xzLlF1ZXJ5QnVpbGRlciksY2xzLlVwZGF0ZT1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIFVwZGF0ZShvcHRpb25zLGJsb2Nrcyl7bnVsbD09YmxvY2tzJiYoYmxvY2tzPW51bGwpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJVUERBVEUiKSxuZXcgY2xzLlVwZGF0ZVRhYmxlQmxvY2sob3B0aW9ucyksbmV3IGNscy5TZXRGaWVsZEJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSxuZXcgY2xzLk9yZGVyQnlCbG9jayhvcHRpb25zKSxuZXcgY2xzLkxpbWl0QmxvY2sob3B0aW9ucyksbmV3IGNscy5SZXR1cm5pbmdCbG9jayhvcHRpb25zKV0pLFVwZGF0ZS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMsYmxvY2tzKX1yZXR1cm4gX19leHRlbmRzKFVwZGF0ZSxfc3VwZXIpLFVwZGF0ZX0oY2xzLlF1ZXJ5QnVpbGRlciksY2xzLkRlbGV0ZT1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIERlbGV0ZShvcHRpb25zLGJsb2Nrcyl7bnVsbD09YmxvY2tzJiYoYmxvY2tzPW51bGwpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJERUxFVEUiKSxuZXcgY2xzLkZyb21UYWJsZUJsb2NrKF9leHRlbmQoe30sb3B0aW9ucyx7c2luZ2xlVGFibGU6ITB9KSksbmV3IGNscy5Kb2luQmxvY2sob3B0aW9ucyksbmV3IGNscy5XaGVyZUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuT3JkZXJCeUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuTGltaXRCbG9jayhvcHRpb25zKSxuZXcgY2xzLlJldHVybmluZ0Jsb2NrKG9wdGlvbnMpXSksRGVsZXRlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoRGVsZXRlLF9zdXBlciksRGVsZXRlfShjbHMuUXVlcnlCdWlsZGVyKX0sc3F1ZWwuZmxhdm91cnMubXlzcWw9ZnVuY3Rpb24oKXt2YXIgX3JlZjU7cmV0dXJuIGNscz1zcXVlbC5jbHMsY2xzLk15c3FsT25EdXBsaWNhdGVLZXlVcGRhdGVCbG9jaz1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIE15c3FsT25EdXBsaWNhdGVLZXlVcGRhdGVCbG9jaygpe3JldHVybiBfcmVmNT1NeXNxbE9uRHVwbGljYXRlS2V5VXBkYXRlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKE15c3FsT25EdXBsaWNhdGVLZXlVcGRhdGVCbG9jayxfc3VwZXIpLE15c3FsT25EdXBsaWNhdGVLZXlVcGRhdGVCbG9jay5wcm90b3R5cGUub25EdXBVcGRhdGU9ZnVuY3Rpb24oZmllbGQsdmFsdWUsb3B0aW9ucyl7cmV0dXJuIHRoaXMuX3NldChmaWVsZCx2YWx1ZSxvcHRpb25zKX0sTXlzcWxPbkR1cGxpY2F0ZUtleVVwZGF0ZUJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3ZhciBmaWVsZCxmaWVsZE9wdGlvbnMsaSxzdHIsdmFsdWUsX2ksX3JlZjY7Zm9yKHN0cj0iIixpPV9pPTAsX3JlZjY9dGhpcy5maWVsZHMubGVuZ3RoO19yZWY2Pj0wP19yZWY2Pl9pOl9pPl9yZWY2O2k9X3JlZjY+PTA/KytfaTotLV9pKWZpZWxkPXRoaXMuZmllbGRzW2ldLCIiIT09c3RyJiYoc3RyKz0iLCAiKSx2YWx1ZT10aGlzLnZhbHVlc1swXVtpXSxmaWVsZE9wdGlvbnM9dGhpcy5maWVsZE9wdGlvbnNbMF1baV0sc3RyKz0idW5kZWZpbmVkIj09dHlwZW9mIHZhbHVlP2ZpZWxkOiIiK2ZpZWxkKyIgPSAiK3RoaXMuX2Zvcm1hdFZhbHVlKHZhbHVlLGZpZWxkT3B0aW9ucyk7cmV0dXJuIiI9PT1zdHI/IiI6Ik9OIERVUExJQ0FURSBLRVkgVVBEQVRFICIrc3RyfSxNeXNxbE9uRHVwbGljYXRlS2V5VXBkYXRlQmxvY2sucHJvdG90eXBlLmJ1aWxkUGFyYW09ZnVuY3Rpb24oKXt2YXIgZmllbGQsaSxzdHIsdmFscyx2YWx1ZSxfaSxfcmVmNjtmb3Ioc3RyPSIiLHZhbHM9W10saT1faT0wLF9yZWY2PXRoaXMuZmllbGRzLmxlbmd0aDtfcmVmNj49MD9fcmVmNj5faTpfaT5fcmVmNjtpPV9yZWY2Pj0wPysrX2k6LS1faSlmaWVsZD10aGlzLmZpZWxkc1tpXSwiIiE9PXN0ciYmKHN0cis9IiwgIiksdmFsdWU9dGhpcy52YWx1ZXNbMF1baV0sInVuZGVmaW5lZCI9PXR5cGVvZiB2YWx1ZT9zdHIrPWZpZWxkOihzdHIrPSIiK2ZpZWxkKyIgPSA/Iix2YWxzLnB1c2godGhpcy5fZm9ybWF0VmFsdWVBc1BhcmFtKHZhbHVlKSkpO3JldHVybnt0ZXh0OiIiPT09c3RyPyIiOiJPTiBEVVBMSUNBVEUgS0VZIFVQREFURSAiK3N0cix2YWx1ZXM6dmFsc319LE15c3FsT25EdXBsaWNhdGVLZXlVcGRhdGVCbG9ja30oY2xzLkFic3RyYWN0U2V0RmllbGRCbG9jayksY2xzLkluc2VydD1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIEluc2VydChvcHRpb25zLGJsb2Nrcyl7bnVsbD09YmxvY2tzJiYoYmxvY2tzPW51bGwpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJJTlNFUlQiKSxuZXcgY2xzLkludG9UYWJsZUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuSW5zZXJ0RmllbGRWYWx1ZUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuTXlzcWxPbkR1cGxpY2F0ZUtleVVwZGF0ZUJsb2NrKG9wdGlvbnMpXSksSW5zZXJ0Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoSW5zZXJ0LF9zdXBlciksSW5zZXJ0fShjbHMuUXVlcnlCdWlsZGVyKX0sX2V4dGVuZD1mdW5jdGlvbigpe3ZhciBkc3Qsayxzb3VyY2VzLHNyYyx2LF9pLF9sZW47aWYoZHN0PWFyZ3VtZW50c1swXSxzb3VyY2VzPTI8PWFyZ3VtZW50cy5sZW5ndGg/X19zbGljZS5jYWxsKGFyZ3VtZW50cywxKTpbXSlmb3IoX2k9MCxfbGVuPXNvdXJjZXMubGVuZ3RoO19sZW4+X2k7X2krKylpZihzcmM9c291cmNlc1tfaV0pZm9yKGsgaW4gc3JjKV9faGFzUHJvcC5jYWxsKHNyYyxrKSYmKHY9c3JjW2tdLGRzdFtrXT12KTtyZXR1cm4gZHN0fSxzcXVlbC5mbGF2b3Vycy5tc3NxbD1mdW5jdGlvbigpe3JldHVybiBjbHM9c3F1ZWwuY2xzLGNscy5EZWZhdWx0UXVlcnlCdWlsZGVyT3B0aW9ucy5yZXBsYWNlU2luZ2xlUXVvdGVzPSEwLGNscy5EZWZhdWx0UXVlcnlCdWlsZGVyT3B0aW9ucy5hdXRvUXVvdGVBbGlhc05hbWVzPSExLHNxdWVsLnJlZ2lzdGVyVmFsdWVIYW5kbGVyKERhdGUsZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIiIrZGF0ZS5nZXRVVENGdWxsWWVhcigpKyItIisoZGF0ZS5nZXRVVENNb250aCgpKzEpKyItIitkYXRlLmdldFVUQ0RhdGUoKSsiICIrZGF0ZS5nZXRVVENIb3VycygpKyI6IitkYXRlLmdldFVUQ01pbnV0ZXMoKSsiOiIrZGF0ZS5nZXRVVENTZWNvbmRzKCl9KSxjbHMuTXNzcWxMaW1pdE9mZnNldFRvcEJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gTXNzcWxMaW1pdE9mZnNldFRvcEJsb2NrKG9wdGlvbnMpe01zc3FsTGltaXRPZmZzZXRUb3BCbG9jay5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMpLHRoaXMubGltaXRzPW51bGwsdGhpcy5vZmZzZXRzPW51bGx9dmFyIExpbWl0QmxvY2ssT2Zmc2V0QmxvY2ssUGFyZW50QmxvY2ssVG9wQmxvY2ssX2xpbWl0LF9yZWY1LF9yZWY2LF9yZWY3O3JldHVybiBfX2V4dGVuZHMoTXNzcWxMaW1pdE9mZnNldFRvcEJsb2NrLF9zdXBlciksX2xpbWl0PWZ1bmN0aW9uKG1heCl7cmV0dXJuIG1heD10aGlzLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0KG1heCksdGhpcy5fcGFyZW50LmxpbWl0cz1tYXh9LFBhcmVudEJsb2NrPWZ1bmN0aW9uKF9zdXBlcjEpe2Z1bmN0aW9uIFBhcmVudEJsb2NrKHBhcmVudCl7UGFyZW50QmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxwYXJlbnQub3B0aW9ucyksdGhpcy5fcGFyZW50PXBhcmVudH1yZXR1cm4gX19leHRlbmRzKFBhcmVudEJsb2NrLF9zdXBlcjEpLFBhcmVudEJsb2NrfShjbHMuQmxvY2spLExpbWl0QmxvY2s9ZnVuY3Rpb24oX3N1cGVyMSl7ZnVuY3Rpb24gTGltaXRCbG9jaygpe3JldHVybiBfcmVmNT1MaW1pdEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIF9fZXh0ZW5kcyhMaW1pdEJsb2NrLF9zdXBlcjEpLExpbWl0QmxvY2sucHJvdG90eXBlLmxpbWl0PV9saW1pdCxMaW1pdEJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXJlbnQubGltaXRzJiZ0aGlzLl9wYXJlbnQub2Zmc2V0cz8iRkVUQ0ggTkVYVCAiK3RoaXMuX3BhcmVudC5saW1pdHMrIiBST1dTIE9OTFkiOiIifSxMaW1pdEJsb2NrfShQYXJlbnRCbG9jayksVG9wQmxvY2s9ZnVuY3Rpb24oX3N1cGVyMSl7ZnVuY3Rpb24gVG9wQmxvY2soKXtyZXR1cm4gX3JlZjY9VG9wQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKFRvcEJsb2NrLF9zdXBlcjEpLFRvcEJsb2NrLnByb3RvdHlwZS50b3A9X2xpbWl0LFRvcEJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXJlbnQubGltaXRzJiYhdGhpcy5fcGFyZW50Lm9mZnNldHM/IlRPUCAoIit0aGlzLl9wYXJlbnQubGltaXRzKyIpIjoiIn0sVG9wQmxvY2t9KFBhcmVudEJsb2NrKSxPZmZzZXRCbG9jaz1mdW5jdGlvbihfc3VwZXIxKXtmdW5jdGlvbiBPZmZzZXRCbG9jaygpe3JldHVybiB0aGlzLm9mZnNldD1fX2JpbmQodGhpcy5vZmZzZXQsdGhpcyksX3JlZjc9T2Zmc2V0QmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKE9mZnNldEJsb2NrLF9zdXBlcjEpLE9mZnNldEJsb2NrLnByb3RvdHlwZS5vZmZzZXQ9ZnVuY3Rpb24oc3RhcnQpe3JldHVybiBzdGFydD10aGlzLl9zYW5pdGl6ZUxpbWl0T2Zmc2V0KHN0YXJ0KSx0aGlzLl9wYXJlbnQub2Zmc2V0cz1zdGFydH0sT2Zmc2V0QmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmVudC5vZmZzZXRzPyJPRkZTRVQgIit0aGlzLl9wYXJlbnQub2Zmc2V0cysiIFJPV1MiOiIifSxPZmZzZXRCbG9ja30oUGFyZW50QmxvY2spLE1zc3FsTGltaXRPZmZzZXRUb3BCbG9jay5wcm90b3R5cGUuTElNSVQ9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3Iob3B0aW9ucyksbmV3IExpbWl0QmxvY2sodGhpcyl9LE1zc3FsTGltaXRPZmZzZXRUb3BCbG9jay5wcm90b3R5cGUuVE9QPWZ1bmN0aW9uKG9wdGlvbnMpe3JldHVybiB0aGlzLmNvbnN0cnVjdG9yKG9wdGlvbnMpLG5ldyBUb3BCbG9jayh0aGlzKX0sTXNzcWxMaW1pdE9mZnNldFRvcEJsb2NrLnByb3RvdHlwZS5PRkZTRVQ9ZnVuY3Rpb24ob3B0aW9ucyl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3Iob3B0aW9ucyksbmV3IE9mZnNldEJsb2NrKHRoaXMpfSxNc3NxbExpbWl0T2Zmc2V0VG9wQmxvY2t9LmNhbGwodGhpcyxjbHMuQmxvY2spLGNscy5Nc3NxbFVwZGF0ZVRvcEJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gTXNzcWxVcGRhdGVUb3BCbG9jayhvcHRpb25zKXtNc3NxbFVwZGF0ZVRvcEJsb2NrLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5saW1pdHM9bnVsbH12YXIgX2xpbWl0O3JldHVybiBfX2V4dGVuZHMoTXNzcWxVcGRhdGVUb3BCbG9jayxfc3VwZXIpLF9saW1pdD1mdW5jdGlvbihtYXgpe3JldHVybiBtYXg9dGhpcy5fc2FuaXRpemVMaW1pdE9mZnNldChtYXgpLHRoaXMubGltaXRzPW1heH0sTXNzcWxVcGRhdGVUb3BCbG9jay5wcm90b3R5cGUubGltaXQ9X2xpbWl0LE1zc3FsVXBkYXRlVG9wQmxvY2sucHJvdG90eXBlLnRvcD1fbGltaXQsTXNzcWxVcGRhdGVUb3BCbG9jay5wcm90b3R5cGUuYnVpbGRTdHI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5saW1pdHM/IlRPUCAoIit0aGlzLmxpbWl0cysiKSI6IiJ9LE1zc3FsVXBkYXRlVG9wQmxvY2t9KGNscy5CbG9jayksY2xzLk1zc3FsSW5zZXJ0RmllbGRWYWx1ZUJsb2NrPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gTXNzcWxJbnNlcnRGaWVsZFZhbHVlQmxvY2sob3B0aW9ucyl7TXNzcWxJbnNlcnRGaWVsZFZhbHVlQmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLm91dHB1dHM9W119cmV0dXJuIF9fZXh0ZW5kcyhNc3NxbEluc2VydEZpZWxkVmFsdWVCbG9jayxfc3VwZXIpLE1zc3FsSW5zZXJ0RmllbGRWYWx1ZUJsb2NrLnByb3RvdHlwZS5vdXRwdXQ9ZnVuY3Rpb24oZmllbGRzKXt2YXIgZixfaSxfbGVuLF9yZXN1bHRzO2lmKCJzdHJpbmciPT10eXBlb2YgZmllbGRzKXJldHVybiB0aGlzLm91dHB1dHMucHVzaCgiSU5TRVJURUQuIit0aGlzLl9zYW5pdGl6ZUZpZWxkKGZpZWxkcykpO2ZvcihfcmVzdWx0cz1bXSxfaT0wLF9sZW49ZmllbGRzLmxlbmd0aDtfbGVuPl9pO19pKyspZj1maWVsZHNbX2ldLF9yZXN1bHRzLnB1c2godGhpcy5vdXRwdXRzLnB1c2goIklOU0VSVEVELiIrdGhpcy5fc2FuaXRpemVGaWVsZChmKSkpO3JldHVybiBfcmVzdWx0c30sTXNzcWxJbnNlcnRGaWVsZFZhbHVlQmxvY2sucHJvdG90eXBlLmJ1aWxkU3RyPWZ1bmN0aW9uKCl7aWYoMD49dGhpcy5maWVsZHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcigic2V0KCkgbmVlZHMgdG8gYmUgY2FsbGVkIik7cmV0dXJuIigiK3RoaXMuZmllbGRzLmpvaW4oIiwgIikrIikgIisoMCE9PXRoaXMub3V0cHV0cy5sZW5ndGg/Ik9VVFBVVCAiK3RoaXMub3V0cHV0cy5qb2luKCIsICIpKyIgIjoiIikrIlZBTFVFUyAoIit0aGlzLl9idWlsZFZhbHMoKS5qb2luKCIpLCAoIikrIikifSxNc3NxbEluc2VydEZpZWxkVmFsdWVCbG9jay5wcm90b3R5cGUuYnVpbGRQYXJhbT1mdW5jdGlvbigpe3ZhciBpLHBhcmFtcyxzdHIsdmFscyxfaSxfcmVmNSxfcmVmNjtpZigwPj10aGlzLmZpZWxkcy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJzZXQoKSBuZWVkcyB0byBiZSBjYWxsZWQiKTtmb3Ioc3RyPSIiLF9yZWY1PXRoaXMuX2J1aWxkVmFsUGFyYW1zKCksdmFscz1fcmVmNS52YWxzLHBhcmFtcz1fcmVmNS5wYXJhbXMsaT1faT0wLF9yZWY2PXRoaXMuZmllbGRzLmxlbmd0aDtfcmVmNj49MD9fcmVmNj5faTpfaT5fcmVmNjtpPV9yZWY2Pj0wPysrX2k6LS1faSkiIiE9PXN0ciYmKHN0cis9IiwgIiksc3RyKz10aGlzLmZpZWxkc1tpXTtyZXR1cm57dGV4dDoiKCIrc3RyKyIpICIrKDAhPT10aGlzLm91dHB1dHMubGVuZ3RoPyJPVVRQVVQgIit0aGlzLm91dHB1dHMuam9pbigiLCAiKSsiICI6IiIpKyJWQUxVRVMgKCIrdmFscy5qb2luKCIpLCAoIikrIikiLHZhbHVlczpwYXJhbXN9fSxNc3NxbEluc2VydEZpZWxkVmFsdWVCbG9ja30oY2xzLkluc2VydEZpZWxkVmFsdWVCbG9jayksY2xzLk1zc3FsVXBkYXRlT3V0cHV0QmxvY2s9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBNc3NxbFVwZGF0ZU91dHB1dEJsb2NrKG9wdGlvbnMpe01zc3FsVXBkYXRlT3V0cHV0QmxvY2suX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLl9vdXRwdXRzPVtdfXJldHVybiBfX2V4dGVuZHMoTXNzcWxVcGRhdGVPdXRwdXRCbG9jayxfc3VwZXIpLE1zc3FsVXBkYXRlT3V0cHV0QmxvY2sucHJvdG90eXBlLm91dHB1dHM9ZnVuY3Rpb24oX291dHB1dHMpe3ZhciBhbGlhcyxvdXRwdXQsX3Jlc3VsdHM7X3Jlc3VsdHM9W107Zm9yKG91dHB1dCBpbiBfb3V0cHV0cylhbGlhcz1fb3V0cHV0c1tvdXRwdXRdLF9yZXN1bHRzLnB1c2godGhpcy5vdXRwdXQob3V0cHV0LGFsaWFzKSk7cmV0dXJuIF9yZXN1bHRzfSxNc3NxbFVwZGF0ZU91dHB1dEJsb2NrLnByb3RvdHlwZS5vdXRwdXQ9ZnVuY3Rpb24ob3V0cHV0LGFsaWFzKXtyZXR1cm4gbnVsbD09YWxpYXMmJihhbGlhcz1udWxsKSxvdXRwdXQ9dGhpcy5fc2FuaXRpemVGaWVsZChvdXRwdXQpLGFsaWFzJiYoYWxpYXM9dGhpcy5fc2FuaXRpemVGaWVsZEFsaWFzKGFsaWFzKSksdGhpcy5fb3V0cHV0cy5wdXNoKHtuYW1lOiJJTlNFUlRFRC4iK291dHB1dCxhbGlhczphbGlhc30pfSxNc3NxbFVwZGF0ZU91dHB1dEJsb2NrLnByb3RvdHlwZS5idWlsZFN0cj1mdW5jdGlvbigpe3ZhciBvdXRwdXQsb3V0cHV0cyxfaSxfbGVuLF9yZWY1O2lmKG91dHB1dHM9IiIsdGhpcy5fb3V0cHV0cy5sZW5ndGg+MCl7Zm9yKF9yZWY1PXRoaXMuX291dHB1dHMsX2k9MCxfbGVuPV9yZWY1Lmxlbmd0aDtfbGVuPl9pO19pKyspb3V0cHV0PV9yZWY1W19pXSwiIiE9PW91dHB1dHMmJihvdXRwdXRzKz0iLCAiKSxvdXRwdXRzKz1vdXRwdXQubmFtZSxvdXRwdXQuYWxpYXMmJihvdXRwdXRzKz0iIEFTICIrb3V0cHV0LmFsaWFzKTtvdXRwdXRzPSJPVVRQVVQgIitvdXRwdXRzfXJldHVybiBvdXRwdXRzfSxNc3NxbFVwZGF0ZU91dHB1dEJsb2NrfShjbHMuQmxvY2spLGNscy5TZWxlY3Q9ZnVuY3Rpb24oX3N1cGVyKXtmdW5jdGlvbiBTZWxlY3Qob3B0aW9ucyxibG9ja3Mpe3ZhciBsaW1pdE9mZnNldFRvcEJsb2NrO251bGw9PWJsb2NrcyYmKGJsb2Nrcz1udWxsKSxsaW1pdE9mZnNldFRvcEJsb2NrPW5ldyBjbHMuTXNzcWxMaW1pdE9mZnNldFRvcEJsb2NrKG9wdGlvbnMpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJTRUxFQ1QiKSxuZXcgY2xzLkRpc3RpbmN0QmxvY2sob3B0aW9ucyksbGltaXRPZmZzZXRUb3BCbG9jay5UT1Aob3B0aW9ucyksbmV3IGNscy5HZXRGaWVsZEJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuRnJvbVRhYmxlQmxvY2soX2V4dGVuZCh7fSxvcHRpb25zLHthbGxvd05lc3RlZDohMH0pKSxuZXcgY2xzLkpvaW5CbG9jayhfZXh0ZW5kKHt9LG9wdGlvbnMse2FsbG93TmVzdGVkOiEwfSkpLG5ldyBjbHMuV2hlcmVCbG9jayhvcHRpb25zKSxuZXcgY2xzLkdyb3VwQnlCbG9jayhvcHRpb25zKSxuZXcgY2xzLk9yZGVyQnlCbG9jayhvcHRpb25zKSxsaW1pdE9mZnNldFRvcEJsb2NrLk9GRlNFVChvcHRpb25zKSxsaW1pdE9mZnNldFRvcEJsb2NrLkxJTUlUKG9wdGlvbnMpXSksU2VsZWN0Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoU2VsZWN0LF9zdXBlciksU2VsZWN0LnByb3RvdHlwZS5pc05lc3RhYmxlPWZ1bmN0aW9uKCl7cmV0dXJuITB9LFNlbGVjdH0oY2xzLlF1ZXJ5QnVpbGRlciksY2xzLlVwZGF0ZT1mdW5jdGlvbihfc3VwZXIpe2Z1bmN0aW9uIFVwZGF0ZShvcHRpb25zLGJsb2Nrcyl7bnVsbD09YmxvY2tzJiYoYmxvY2tzPW51bGwpLGJsb2Nrc3x8KGJsb2Nrcz1bbmV3IGNscy5TdHJpbmdCbG9jayhvcHRpb25zLCJVUERBVEUiKSxuZXcgY2xzLk1zc3FsVXBkYXRlVG9wQmxvY2sob3B0aW9ucyksbmV3IGNscy5VcGRhdGVUYWJsZUJsb2NrKG9wdGlvbnMpLG5ldyBjbHMuU2V0RmllbGRCbG9jayhvcHRpb25zKSxuZXcgY2xzLk1zc3FsVXBkYXRlT3V0cHV0QmxvY2sob3B0aW9ucyksbmV3IGNscy5XaGVyZUJsb2NrKG9wdGlvbnMpXSksVXBkYXRlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoVXBkYXRlLF9zdXBlciksVXBkYXRlfShjbHMuUXVlcnlCdWlsZGVyKSxjbHMuRGVsZXRlPWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gRGVsZXRlKG9wdGlvbnMsYmxvY2tzKXtudWxsPT1ibG9ja3MmJihibG9ja3M9bnVsbCksYmxvY2tzfHwoYmxvY2tzPVtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsIkRFTEVURSIpLG5ldyBjbHMuRnJvbVRhYmxlQmxvY2soX2V4dGVuZCh7fSxvcHRpb25zLHtzaW5nbGVUYWJsZTohMH0pKSxuZXcgY2xzLkpvaW5CbG9jayhvcHRpb25zKSxuZXcgY2xzLldoZXJlQmxvY2sob3B0aW9ucyksbmV3IGNscy5PcmRlckJ5QmxvY2sob3B0aW9ucyksbmV3IGNscy5MaW1pdEJsb2NrKG9wdGlvbnMpXSksRGVsZXRlLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsb3B0aW9ucyxibG9ja3MpfXJldHVybiBfX2V4dGVuZHMoRGVsZXRlLF9zdXBlciksRGVsZXRlfShjbHMuUXVlcnlCdWlsZGVyKSxjbHMuSW5zZXJ0PWZ1bmN0aW9uKF9zdXBlcil7ZnVuY3Rpb24gSW5zZXJ0KG9wdGlvbnMsYmxvY2tzKXtudWxsPT1ibG9ja3MmJihibG9ja3M9bnVsbCksYmxvY2tzfHwoYmxvY2tzPVtuZXcgY2xzLlN0cmluZ0Jsb2NrKG9wdGlvbnMsIklOU0VSVCIpLG5ldyBjbHMuSW50b1RhYmxlQmxvY2sob3B0aW9ucyksbmV3IGNscy5Nc3NxbEluc2VydEZpZWxkVmFsdWVCbG9jayhvcHRpb25zKV0pLEluc2VydC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLG9wdGlvbnMsYmxvY2tzKX1yZXR1cm4gX19leHRlbmRzKEluc2VydCxfc3VwZXIpLEluc2VydH0oY2xzLlF1ZXJ5QnVpbGRlcil9fS5jYWxsKHRoaXMpLGZ1bmN0aW9uKHVuZGVmaW5lZCl7ZnVuY3Rpb24gZGZsKGEsYixjKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAyOnJldHVybiBudWxsIT1hP2E6YjtjYXNlIDM6cmV0dXJuIG51bGwhPWE/YTpudWxsIT1iP2I6YztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiSW1wbGVtZW50IG1lIil9fWZ1bmN0aW9uIGhhc093blByb3AoYSxiKXtyZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChhLGIpfWZ1bmN0aW9uIGRlZmF1bHRQYXJzaW5nRmxhZ3MoKXtyZXR1cm57ZW1wdHk6ITEsdW51c2VkVG9rZW5zOltdLHVudXNlZElucHV0OltdLG92ZXJmbG93Oi0yLGNoYXJzTGVmdE92ZXI6MCxudWxsSW5wdXQ6ITEsaW52YWxpZE1vbnRoOm51bGwsaW52YWxpZEZvcm1hdDohMSx1c2VySW52YWxpZGF0ZWQ6ITEsaXNvOiExfX1mdW5jdGlvbiBwcmludE1zZyhtc2cpe21vbWVudC5zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZ3M9PT0hMSYmInVuZGVmaW5lZCIhPXR5cGVvZiBjb25zb2xlJiZjb25zb2xlLndhcm4mJmNvbnNvbGUud2FybigiRGVwcmVjYXRpb24gd2FybmluZzogIittc2cpfWZ1bmN0aW9uIGRlcHJlY2F0ZShtc2csZm4pe3ZhciBmaXJzdFRpbWU9ITA7cmV0dXJuIGV4dGVuZChmdW5jdGlvbigpe3JldHVybiBmaXJzdFRpbWUmJihwcmludE1zZyhtc2cpLGZpcnN0VGltZT0hMSksZm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmbil9ZnVuY3Rpb24gZGVwcmVjYXRlU2ltcGxlKG5hbWUsbXNnKXtkZXByZWNhdGlvbnNbbmFtZV18fChwcmludE1zZyhtc2cpLGRlcHJlY2F0aW9uc1tuYW1lXT0hMCl9ZnVuY3Rpb24gcGFkVG9rZW4oZnVuYyxjb3VudCl7cmV0dXJuIGZ1bmN0aW9uKGEpe3JldHVybiBsZWZ0WmVyb0ZpbGwoZnVuYy5jYWxsKHRoaXMsYSksY291bnQpfX1mdW5jdGlvbiBvcmRpbmFsaXplVG9rZW4oZnVuYyxwZXJpb2Qpe3JldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkub3JkaW5hbChmdW5jLmNhbGwodGhpcyxhKSxwZXJpb2QpfX1mdW5jdGlvbiBMb2NhbGUoKXt9ZnVuY3Rpb24gTW9tZW50KGNvbmZpZyxza2lwT3ZlcmZsb3cpe3NraXBPdmVyZmxvdyE9PSExJiZjaGVja092ZXJmbG93KGNvbmZpZyksY29weUNvbmZpZyh0aGlzLGNvbmZpZyksdGhpcy5fZD1uZXcgRGF0ZSgrY29uZmlnLl9kKX1mdW5jdGlvbiBEdXJhdGlvbihkdXJhdGlvbil7dmFyIG5vcm1hbGl6ZWRJbnB1dD1ub3JtYWxpemVPYmplY3RVbml0cyhkdXJhdGlvbikseWVhcnM9bm9ybWFsaXplZElucHV0LnllYXJ8fDAscXVhcnRlcnM9bm9ybWFsaXplZElucHV0LnF1YXJ0ZXJ8fDAsbW9udGhzPW5vcm1hbGl6ZWRJbnB1dC5tb250aHx8MCx3ZWVrcz1ub3JtYWxpemVkSW5wdXQud2Vla3x8MCxkYXlzPW5vcm1hbGl6ZWRJbnB1dC5kYXl8fDAsaG91cnM9bm9ybWFsaXplZElucHV0LmhvdXJ8fDAsbWludXRlcz1ub3JtYWxpemVkSW5wdXQubWludXRlfHwwLHNlY29uZHM9bm9ybWFsaXplZElucHV0LnNlY29uZHx8MCxtaWxsaXNlY29uZHM9bm9ybWFsaXplZElucHV0Lm1pbGxpc2Vjb25kfHwwO3RoaXMuX21pbGxpc2Vjb25kcz0rbWlsbGlzZWNvbmRzKzFlMypzZWNvbmRzKzZlNCptaW51dGVzKzM2ZTUqaG91cnMsdGhpcy5fZGF5cz0rZGF5cys3KndlZWtzLHRoaXMuX21vbnRocz0rbW9udGhzKzMqcXVhcnRlcnMrMTIqeWVhcnMsdGhpcy5fZGF0YT17fSx0aGlzLl9sb2NhbGU9bW9tZW50LmxvY2FsZURhdGEoKSx0aGlzLl9idWJibGUoKX1mdW5jdGlvbiBleHRlbmQoYSxiKXtmb3IodmFyIGkgaW4gYiloYXNPd25Qcm9wKGIsaSkmJihhW2ldPWJbaV0pO3JldHVybiBoYXNPd25Qcm9wKGIsInRvU3RyaW5nIikmJihhLnRvU3RyaW5nPWIudG9TdHJpbmcpLGhhc093blByb3AoYiwidmFsdWVPZiIpJiYoYS52YWx1ZU9mPWIudmFsdWVPZiksYX1mdW5jdGlvbiBjb3B5Q29uZmlnKHRvLGZyb20pe3ZhciBpLHByb3AsdmFsO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5faXNBTW9tZW50T2JqZWN0JiYodG8uX2lzQU1vbWVudE9iamVjdD1mcm9tLl9pc0FNb21lbnRPYmplY3QpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5faSYmKHRvLl9pPWZyb20uX2kpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fZiYmKHRvLl9mPWZyb20uX2YpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fbCYmKHRvLl9sPWZyb20uX2wpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fc3RyaWN0JiYodG8uX3N0cmljdD1mcm9tLl9zdHJpY3QpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fdHptJiYodG8uX3R6bT1mcm9tLl90em0pLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5faXNVVEMmJih0by5faXNVVEM9ZnJvbS5faXNVVEMpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fb2Zmc2V0JiYodG8uX29mZnNldD1mcm9tLl9vZmZzZXQpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fcGYmJih0by5fcGY9ZnJvbS5fcGYpLCJ1bmRlZmluZWQiIT10eXBlb2YgZnJvbS5fbG9jYWxlJiYodG8uX2xvY2FsZT1mcm9tLl9sb2NhbGUpLG1vbWVudFByb3BlcnRpZXMubGVuZ3RoPjApZm9yKGkgaW4gbW9tZW50UHJvcGVydGllcylwcm9wPW1vbWVudFByb3BlcnRpZXNbaV0sdmFsPWZyb21bcHJvcF0sInVuZGVmaW5lZCIhPXR5cGVvZiB2YWwmJih0b1twcm9wXT12YWwpO3JldHVybiB0b31mdW5jdGlvbiBhYnNSb3VuZChudW1iZXIpe3JldHVybiAwPm51bWJlcj9NYXRoLmNlaWwobnVtYmVyKTpNYXRoLmZsb29yKG51bWJlcil9ZnVuY3Rpb24gbGVmdFplcm9GaWxsKG51bWJlcix0YXJnZXRMZW5ndGgsZm9yY2VTaWduKXtmb3IodmFyIG91dHB1dD0iIitNYXRoLmFicyhudW1iZXIpLHNpZ249bnVtYmVyPj0wO291dHB1dC5sZW5ndGg8dGFyZ2V0TGVuZ3RoOylvdXRwdXQ9IjAiK291dHB1dDtyZXR1cm4oc2lnbj9mb3JjZVNpZ24/IisiOiIiOiItIikrb3V0cHV0fWZ1bmN0aW9uIHBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2UoYmFzZSxvdGhlcil7dmFyIHJlcz17bWlsbGlzZWNvbmRzOjAsbW9udGhzOjB9O3JldHVybiByZXMubW9udGhzPW90aGVyLm1vbnRoKCktYmFzZS5tb250aCgpKzEyKihvdGhlci55ZWFyKCktYmFzZS55ZWFyKCkpLGJhc2UuY2xvbmUoKS5hZGQocmVzLm1vbnRocywiTSIpLmlzQWZ0ZXIob3RoZXIpJiYtLXJlcy5tb250aHMscmVzLm1pbGxpc2Vjb25kcz0rb3RoZXItK2Jhc2UuY2xvbmUoKS5hZGQocmVzLm1vbnRocywiTSIpLHJlc31mdW5jdGlvbiBtb21lbnRzRGlmZmVyZW5jZShiYXNlLG90aGVyKXt2YXIgcmVzO3JldHVybiBvdGhlcj1tYWtlQXMob3RoZXIsYmFzZSksYmFzZS5pc0JlZm9yZShvdGhlcik/cmVzPXBvc2l0aXZlTW9tZW50c0RpZmZlcmVuY2UoYmFzZSxvdGhlcik6KHJlcz1wb3NpdGl2ZU1vbWVudHNEaWZmZXJlbmNlKG90aGVyLGJhc2UpLHJlcy5taWxsaXNlY29uZHM9LXJlcy5taWxsaXNlY29uZHMscmVzLm1vbnRocz0tcmVzLm1vbnRocykscmVzfWZ1bmN0aW9uIGNyZWF0ZUFkZGVyKGRpcmVjdGlvbixuYW1lKXtyZXR1cm4gZnVuY3Rpb24odmFsLHBlcmlvZCl7dmFyIGR1cix0bXA7cmV0dXJuIG51bGw9PT1wZXJpb2R8fGlzTmFOKCtwZXJpb2QpfHwoZGVwcmVjYXRlU2ltcGxlKG5hbWUsIm1vbWVudCgpLiIrbmFtZSsiKHBlcmlvZCwgbnVtYmVyKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIG1vbWVudCgpLiIrbmFtZSsiKG51bWJlciwgcGVyaW9kKS4iKSx0bXA9dmFsLHZhbD1wZXJpb2QscGVyaW9kPXRtcCksdmFsPSJzdHJpbmciPT10eXBlb2YgdmFsPyt2YWw6dmFsLGR1cj1tb21lbnQuZHVyYXRpb24odmFsLHBlcmlvZCksYWRkT3JTdWJ0cmFjdER1cmF0aW9uRnJvbU1vbWVudCh0aGlzLGR1cixkaXJlY3Rpb24pLHRoaXN9fWZ1bmN0aW9uIGFkZE9yU3VidHJhY3REdXJhdGlvbkZyb21Nb21lbnQobW9tLGR1cmF0aW9uLGlzQWRkaW5nLHVwZGF0ZU9mZnNldCl7dmFyIG1pbGxpc2Vjb25kcz1kdXJhdGlvbi5fbWlsbGlzZWNvbmRzLGRheXM9ZHVyYXRpb24uX2RheXMsbW9udGhzPWR1cmF0aW9uLl9tb250aHM7dXBkYXRlT2Zmc2V0PW51bGw9PXVwZGF0ZU9mZnNldD8hMDp1cGRhdGVPZmZzZXQsbWlsbGlzZWNvbmRzJiZtb20uX2Quc2V0VGltZSgrbW9tLl9kK21pbGxpc2Vjb25kcyppc0FkZGluZyksZGF5cyYmcmF3U2V0dGVyKG1vbSwiRGF0ZSIscmF3R2V0dGVyKG1vbSwiRGF0ZSIpK2RheXMqaXNBZGRpbmcpLG1vbnRocyYmcmF3TW9udGhTZXR0ZXIobW9tLHJhd0dldHRlcihtb20sIk1vbnRoIikrbW9udGhzKmlzQWRkaW5nKSx1cGRhdGVPZmZzZXQmJm1vbWVudC51cGRhdGVPZmZzZXQobW9tLGRheXN8fG1vbnRocyl9ZnVuY3Rpb24gaXNBcnJheShpbnB1dCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpbnB1dCl9ZnVuY3Rpb24gaXNEYXRlKGlucHV0KXtyZXR1cm4iW29iamVjdCBEYXRlXSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpfHxpbnB1dCBpbnN0YW5jZW9mIERhdGV9ZnVuY3Rpb24gY29tcGFyZUFycmF5cyhhcnJheTEsYXJyYXkyLGRvbnRDb252ZXJ0KXt2YXIgaSxsZW49TWF0aC5taW4oYXJyYXkxLmxlbmd0aCxhcnJheTIubGVuZ3RoKSxsZW5ndGhEaWZmPU1hdGguYWJzKGFycmF5MS5sZW5ndGgtYXJyYXkyLmxlbmd0aCksZGlmZnM9MDtmb3IoaT0wO2xlbj5pO2krKykoZG9udENvbnZlcnQmJmFycmF5MVtpXSE9PWFycmF5MltpXXx8IWRvbnRDb252ZXJ0JiZ0b0ludChhcnJheTFbaV0pIT09dG9JbnQoYXJyYXkyW2ldKSkmJmRpZmZzKys7cmV0dXJuIGRpZmZzK2xlbmd0aERpZmZ9ZnVuY3Rpb24gbm9ybWFsaXplVW5pdHModW5pdHMpe2lmKHVuaXRzKXt2YXIgbG93ZXJlZD11bml0cy50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLyguKXMkLywiJDEiKTt1bml0cz11bml0QWxpYXNlc1t1bml0c118fGNhbWVsRnVuY3Rpb25zW2xvd2VyZWRdfHxsb3dlcmVkfXJldHVybiB1bml0c31mdW5jdGlvbiBub3JtYWxpemVPYmplY3RVbml0cyhpbnB1dE9iamVjdCl7dmFyIG5vcm1hbGl6ZWRQcm9wLHByb3Asbm9ybWFsaXplZElucHV0PXt9O2Zvcihwcm9wIGluIGlucHV0T2JqZWN0KWhhc093blByb3AoaW5wdXRPYmplY3QscHJvcCkmJihub3JtYWxpemVkUHJvcD1ub3JtYWxpemVVbml0cyhwcm9wKSxub3JtYWxpemVkUHJvcCYmKG5vcm1hbGl6ZWRJbnB1dFtub3JtYWxpemVkUHJvcF09aW5wdXRPYmplY3RbcHJvcF0pKTtyZXR1cm4gbm9ybWFsaXplZElucHV0fWZ1bmN0aW9uIG1ha2VMaXN0KGZpZWxkKXt2YXIgY291bnQsc2V0dGVyO2lmKDA9PT1maWVsZC5pbmRleE9mKCJ3ZWVrIikpY291bnQ9NyxzZXR0ZXI9ImRheSI7ZWxzZXtpZigwIT09ZmllbGQuaW5kZXhPZigibW9udGgiKSlyZXR1cm47Y291bnQ9MTIsc2V0dGVyPSJtb250aCJ9bW9tZW50W2ZpZWxkXT1mdW5jdGlvbihmb3JtYXQsaW5kZXgpe3ZhciBpLGdldHRlcixtZXRob2Q9bW9tZW50Ll9sb2NhbGVbZmllbGRdLHJlc3VsdHM9W107aWYoIm51bWJlciI9PXR5cGVvZiBmb3JtYXQmJihpbmRleD1mb3JtYXQsZm9ybWF0PXVuZGVmaW5lZCksZ2V0dGVyPWZ1bmN0aW9uKGkpe3ZhciBtPW1vbWVudCgpLnV0YygpLnNldChzZXR0ZXIsaSk7cmV0dXJuIG1ldGhvZC5jYWxsKG1vbWVudC5fbG9jYWxlLG0sZm9ybWF0fHwiIil9LG51bGwhPWluZGV4KXJldHVybiBnZXR0ZXIoaW5kZXgpO2ZvcihpPTA7Y291bnQ+aTtpKyspcmVzdWx0cy5wdXNoKGdldHRlcihpKSk7cmV0dXJuIHJlc3VsdHN9fWZ1bmN0aW9uIHRvSW50KGFyZ3VtZW50Rm9yQ29lcmNpb24pe3ZhciBjb2VyY2VkTnVtYmVyPSthcmd1bWVudEZvckNvZXJjaW9uLHZhbHVlPTA7cmV0dXJuIDAhPT1jb2VyY2VkTnVtYmVyJiZpc0Zpbml0ZShjb2VyY2VkTnVtYmVyKSYmKHZhbHVlPWNvZXJjZWROdW1iZXI+PTA/TWF0aC5mbG9vcihjb2VyY2VkTnVtYmVyKTpNYXRoLmNlaWwoY29lcmNlZE51bWJlcikpLHZhbHVlfWZ1bmN0aW9uIGRheXNJbk1vbnRoKHllYXIsbW9udGgpe3JldHVybiBuZXcgRGF0ZShEYXRlLlVUQyh5ZWFyLG1vbnRoKzEsMCkpLmdldFVUQ0RhdGUoKX1mdW5jdGlvbiB3ZWVrc0luWWVhcih5ZWFyLGRvdyxkb3kpe3JldHVybiB3ZWVrT2ZZZWFyKG1vbWVudChbeWVhciwxMSwzMStkb3ctZG95XSksZG93LGRveSkud2Vla31mdW5jdGlvbiBkYXlzSW5ZZWFyKHllYXIpe3JldHVybiBpc0xlYXBZZWFyKHllYXIpPzM2NjozNjV9ZnVuY3Rpb24gaXNMZWFwWWVhcih5ZWFyKXtyZXR1cm4geWVhciU0PT09MCYmeWVhciUxMDAhPT0wfHx5ZWFyJTQwMD09PTB9ZnVuY3Rpb24gY2hlY2tPdmVyZmxvdyhtKXt2YXIgb3ZlcmZsb3c7bS5fYSYmLTI9PT1tLl9wZi5vdmVyZmxvdyYmKG92ZXJmbG93PW0uX2FbTU9OVEhdPDB8fG0uX2FbTU9OVEhdPjExP01PTlRIOm0uX2FbREFURV08MXx8bS5fYVtEQVRFXT5kYXlzSW5Nb250aChtLl9hW1lFQVJdLG0uX2FbTU9OVEhdKT9EQVRFOm0uX2FbSE9VUl08MHx8bS5fYVtIT1VSXT4yMz9IT1VSOm0uX2FbTUlOVVRFXTwwfHxtLl9hW01JTlVURV0+NTk/TUlOVVRFOm0uX2FbU0VDT05EXTwwfHxtLl9hW1NFQ09ORF0+NTk/U0VDT05EOm0uX2FbTUlMTElTRUNPTkRdPDB8fG0uX2FbTUlMTElTRUNPTkRdPjk5OT9NSUxMSVNFQ09ORDotMSxtLl9wZi5fb3ZlcmZsb3dEYXlPZlllYXImJihZRUFSPm92ZXJmbG93fHxvdmVyZmxvdz5EQVRFKSYmKG92ZXJmbG93PURBVEUpLG0uX3BmLm92ZXJmbG93PW92ZXJmbG93KX1mdW5jdGlvbiBpc1ZhbGlkKG0pe3JldHVybiBudWxsPT1tLl9pc1ZhbGlkJiYobS5faXNWYWxpZD0haXNOYU4obS5fZC5nZXRUaW1lKCkpJiZtLl9wZi5vdmVyZmxvdzwwJiYhbS5fcGYuZW1wdHkmJiFtLl9wZi5pbnZhbGlkTW9udGgmJiFtLl9wZi5udWxsSW5wdXQmJiFtLl9wZi5pbnZhbGlkRm9ybWF0JiYhbS5fcGYudXNlckludmFsaWRhdGVkLG0uX3N0cmljdCYmKG0uX2lzVmFsaWQ9bS5faXNWYWxpZCYmMD09PW0uX3BmLmNoYXJzTGVmdE92ZXImJjA9PT1tLl9wZi51bnVzZWRUb2tlbnMubGVuZ3RoKSksbS5faXNWYWxpZH1mdW5jdGlvbiBub3JtYWxpemVMb2NhbGUoa2V5KXtyZXR1cm4ga2V5P2tleS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoIl8iLCItIik6a2V5fWZ1bmN0aW9uIGNob29zZUxvY2FsZShuYW1lcyl7Zm9yKHZhciBqLG5leHQsbG9jYWxlLHNwbGl0LGk9MDtpPG5hbWVzLmxlbmd0aDspe2ZvcihzcGxpdD1ub3JtYWxpemVMb2NhbGUobmFtZXNbaV0pLnNwbGl0KCItIiksaj1zcGxpdC5sZW5ndGgsbmV4dD1ub3JtYWxpemVMb2NhbGUobmFtZXNbaSsxXSksbmV4dD1uZXh0P25leHQuc3BsaXQoIi0iKTpudWxsO2o+MDspe2lmKGxvY2FsZT1sb2FkTG9jYWxlKHNwbGl0LnNsaWNlKDAsaikuam9pbigiLSIpKSlyZXR1cm4gbG9jYWxlO2lmKG5leHQmJm5leHQubGVuZ3RoPj1qJiZjb21wYXJlQXJyYXlzKHNwbGl0LG5leHQsITApPj1qLTEpYnJlYWs7CmotLX1pKyt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gbG9hZExvY2FsZShuYW1lKXt2YXIgb2xkTG9jYWxlPW51bGw7aWYoIWxvY2FsZXNbbmFtZV0mJmhhc01vZHVsZSl0cnl7b2xkTG9jYWxlPW1vbWVudC5sb2NhbGUoKSxyZXF1aXJlKCIuL2xvY2FsZS8iK25hbWUpLG1vbWVudC5sb2NhbGUob2xkTG9jYWxlKX1jYXRjaChlKXt9cmV0dXJuIGxvY2FsZXNbbmFtZV19ZnVuY3Rpb24gbWFrZUFzKGlucHV0LG1vZGVsKXtyZXR1cm4gbW9kZWwuX2lzVVRDP21vbWVudChpbnB1dCkuem9uZShtb2RlbC5fb2Zmc2V0fHwwKTptb21lbnQoaW5wdXQpLmxvY2FsKCl9ZnVuY3Rpb24gcmVtb3ZlRm9ybWF0dGluZ1Rva2VucyhpbnB1dCl7cmV0dXJuIGlucHV0Lm1hdGNoKC9cW1tcc1xTXS8pP2lucHV0LnJlcGxhY2UoL15cW3xcXSQvZywiIik6aW5wdXQucmVwbGFjZSgvXFwvZywiIil9ZnVuY3Rpb24gbWFrZUZvcm1hdEZ1bmN0aW9uKGZvcm1hdCl7dmFyIGksbGVuZ3RoLGFycmF5PWZvcm1hdC5tYXRjaChmb3JtYXR0aW5nVG9rZW5zKTtmb3IoaT0wLGxlbmd0aD1hcnJheS5sZW5ndGg7bGVuZ3RoPmk7aSsrKWFycmF5W2ldPWZvcm1hdFRva2VuRnVuY3Rpb25zW2FycmF5W2ldXT9mb3JtYXRUb2tlbkZ1bmN0aW9uc1thcnJheVtpXV06cmVtb3ZlRm9ybWF0dGluZ1Rva2VucyhhcnJheVtpXSk7cmV0dXJuIGZ1bmN0aW9uKG1vbSl7dmFyIG91dHB1dD0iIjtmb3IoaT0wO2xlbmd0aD5pO2krKylvdXRwdXQrPWFycmF5W2ldaW5zdGFuY2VvZiBGdW5jdGlvbj9hcnJheVtpXS5jYWxsKG1vbSxmb3JtYXQpOmFycmF5W2ldO3JldHVybiBvdXRwdXR9fWZ1bmN0aW9uIGZvcm1hdE1vbWVudChtLGZvcm1hdCl7cmV0dXJuIG0uaXNWYWxpZCgpPyhmb3JtYXQ9ZXhwYW5kRm9ybWF0KGZvcm1hdCxtLmxvY2FsZURhdGEoKSksZm9ybWF0RnVuY3Rpb25zW2Zvcm1hdF18fChmb3JtYXRGdW5jdGlvbnNbZm9ybWF0XT1tYWtlRm9ybWF0RnVuY3Rpb24oZm9ybWF0KSksZm9ybWF0RnVuY3Rpb25zW2Zvcm1hdF0obSkpOm0ubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCl9ZnVuY3Rpb24gZXhwYW5kRm9ybWF0KGZvcm1hdCxsb2NhbGUpe2Z1bmN0aW9uIHJlcGxhY2VMb25nRGF0ZUZvcm1hdFRva2VucyhpbnB1dCl7cmV0dXJuIGxvY2FsZS5sb25nRGF0ZUZvcm1hdChpbnB1dCl8fGlucHV0fXZhciBpPTU7Zm9yKGxvY2FsRm9ybWF0dGluZ1Rva2Vucy5sYXN0SW5kZXg9MDtpPj0wJiZsb2NhbEZvcm1hdHRpbmdUb2tlbnMudGVzdChmb3JtYXQpOylmb3JtYXQ9Zm9ybWF0LnJlcGxhY2UobG9jYWxGb3JtYXR0aW5nVG9rZW5zLHJlcGxhY2VMb25nRGF0ZUZvcm1hdFRva2VucyksbG9jYWxGb3JtYXR0aW5nVG9rZW5zLmxhc3RJbmRleD0wLGktPTE7cmV0dXJuIGZvcm1hdH1mdW5jdGlvbiBnZXRQYXJzZVJlZ2V4Rm9yVG9rZW4odG9rZW4sY29uZmlnKXt2YXIgYSxzdHJpY3Q9Y29uZmlnLl9zdHJpY3Q7c3dpdGNoKHRva2VuKXtjYXNlIlEiOnJldHVybiBwYXJzZVRva2VuT25lRGlnaXQ7Y2FzZSJEREREIjpyZXR1cm4gcGFyc2VUb2tlblRocmVlRGlnaXRzO2Nhc2UiWVlZWSI6Y2FzZSJHR0dHIjpjYXNlImdnZ2ciOnJldHVybiBzdHJpY3Q/cGFyc2VUb2tlbkZvdXJEaWdpdHM6cGFyc2VUb2tlbk9uZVRvRm91ckRpZ2l0cztjYXNlIlkiOmNhc2UiRyI6Y2FzZSJnIjpyZXR1cm4gcGFyc2VUb2tlblNpZ25lZE51bWJlcjtjYXNlIllZWVlZWSI6Y2FzZSJZWVlZWSI6Y2FzZSJHR0dHRyI6Y2FzZSJnZ2dnZyI6cmV0dXJuIHN0cmljdD9wYXJzZVRva2VuU2l4RGlnaXRzOnBhcnNlVG9rZW5PbmVUb1NpeERpZ2l0cztjYXNlIlMiOmlmKHN0cmljdClyZXR1cm4gcGFyc2VUb2tlbk9uZURpZ2l0O2Nhc2UiU1MiOmlmKHN0cmljdClyZXR1cm4gcGFyc2VUb2tlblR3b0RpZ2l0cztjYXNlIlNTUyI6aWYoc3RyaWN0KXJldHVybiBwYXJzZVRva2VuVGhyZWVEaWdpdHM7Y2FzZSJEREQiOnJldHVybiBwYXJzZVRva2VuT25lVG9UaHJlZURpZ2l0cztjYXNlIk1NTSI6Y2FzZSJNTU1NIjpjYXNlImRkIjpjYXNlImRkZCI6Y2FzZSJkZGRkIjpyZXR1cm4gcGFyc2VUb2tlbldvcmQ7Y2FzZSJhIjpjYXNlIkEiOnJldHVybiBjb25maWcuX2xvY2FsZS5fbWVyaWRpZW1QYXJzZTtjYXNlIlgiOnJldHVybiBwYXJzZVRva2VuVGltZXN0YW1wTXM7Y2FzZSJaIjpjYXNlIlpaIjpyZXR1cm4gcGFyc2VUb2tlblRpbWV6b25lO2Nhc2UiVCI6cmV0dXJuIHBhcnNlVG9rZW5UO2Nhc2UiU1NTUyI6cmV0dXJuIHBhcnNlVG9rZW5EaWdpdHM7Y2FzZSJNTSI6Y2FzZSJERCI6Y2FzZSJZWSI6Y2FzZSJHRyI6Y2FzZSJnZyI6Y2FzZSJISCI6Y2FzZSJoaCI6Y2FzZSJtbSI6Y2FzZSJzcyI6Y2FzZSJ3dyI6Y2FzZSJXVyI6cmV0dXJuIHN0cmljdD9wYXJzZVRva2VuVHdvRGlnaXRzOnBhcnNlVG9rZW5PbmVPclR3b0RpZ2l0cztjYXNlIk0iOmNhc2UiRCI6Y2FzZSJkIjpjYXNlIkgiOmNhc2UiaCI6Y2FzZSJtIjpjYXNlInMiOmNhc2UidyI6Y2FzZSJXIjpjYXNlImUiOmNhc2UiRSI6cmV0dXJuIHBhcnNlVG9rZW5PbmVPclR3b0RpZ2l0cztjYXNlIkRvIjpyZXR1cm4gcGFyc2VUb2tlbk9yZGluYWw7ZGVmYXVsdDpyZXR1cm4gYT1uZXcgUmVnRXhwKHJlZ2V4cEVzY2FwZSh1bmVzY2FwZUZvcm1hdCh0b2tlbi5yZXBsYWNlKCJcXCIsIiIpKSwiaSIpKX19ZnVuY3Rpb24gdGltZXpvbmVNaW51dGVzRnJvbVN0cmluZyhzdHJpbmcpe3N0cmluZz1zdHJpbmd8fCIiO3ZhciBwb3NzaWJsZVR6TWF0Y2hlcz1zdHJpbmcubWF0Y2gocGFyc2VUb2tlblRpbWV6b25lKXx8W10sdHpDaHVuaz1wb3NzaWJsZVR6TWF0Y2hlc1twb3NzaWJsZVR6TWF0Y2hlcy5sZW5ndGgtMV18fFtdLHBhcnRzPSh0ekNodW5rKyIiKS5tYXRjaChwYXJzZVRpbWV6b25lQ2h1bmtlcil8fFsiLSIsMCwwXSxtaW51dGVzPSsoNjAqcGFydHNbMV0pK3RvSW50KHBhcnRzWzJdKTtyZXR1cm4iKyI9PT1wYXJ0c1swXT8tbWludXRlczptaW51dGVzfWZ1bmN0aW9uIGFkZFRpbWVUb0FycmF5RnJvbVRva2VuKHRva2VuLGlucHV0LGNvbmZpZyl7dmFyIGEsZGF0ZVBhcnRBcnJheT1jb25maWcuX2E7c3dpdGNoKHRva2VuKXtjYXNlIlEiOm51bGwhPWlucHV0JiYoZGF0ZVBhcnRBcnJheVtNT05USF09MyoodG9JbnQoaW5wdXQpLTEpKTticmVhaztjYXNlIk0iOmNhc2UiTU0iOm51bGwhPWlucHV0JiYoZGF0ZVBhcnRBcnJheVtNT05USF09dG9JbnQoaW5wdXQpLTEpO2JyZWFrO2Nhc2UiTU1NIjpjYXNlIk1NTU0iOmE9Y29uZmlnLl9sb2NhbGUubW9udGhzUGFyc2UoaW5wdXQpLG51bGwhPWE/ZGF0ZVBhcnRBcnJheVtNT05USF09YTpjb25maWcuX3BmLmludmFsaWRNb250aD1pbnB1dDticmVhaztjYXNlIkQiOmNhc2UiREQiOm51bGwhPWlucHV0JiYoZGF0ZVBhcnRBcnJheVtEQVRFXT10b0ludChpbnB1dCkpO2JyZWFrO2Nhc2UiRG8iOm51bGwhPWlucHV0JiYoZGF0ZVBhcnRBcnJheVtEQVRFXT10b0ludChwYXJzZUludChpbnB1dCwxMCkpKTticmVhaztjYXNlIkRERCI6Y2FzZSJEREREIjpudWxsIT1pbnB1dCYmKGNvbmZpZy5fZGF5T2ZZZWFyPXRvSW50KGlucHV0KSk7YnJlYWs7Y2FzZSJZWSI6ZGF0ZVBhcnRBcnJheVtZRUFSXT1tb21lbnQucGFyc2VUd29EaWdpdFllYXIoaW5wdXQpO2JyZWFrO2Nhc2UiWVlZWSI6Y2FzZSJZWVlZWSI6Y2FzZSJZWVlZWVkiOmRhdGVQYXJ0QXJyYXlbWUVBUl09dG9JbnQoaW5wdXQpO2JyZWFrO2Nhc2UiYSI6Y2FzZSJBIjpjb25maWcuX2lzUG09Y29uZmlnLl9sb2NhbGUuaXNQTShpbnB1dCk7YnJlYWs7Y2FzZSJIIjpjYXNlIkhIIjpjYXNlImgiOmNhc2UiaGgiOmRhdGVQYXJ0QXJyYXlbSE9VUl09dG9JbnQoaW5wdXQpO2JyZWFrO2Nhc2UibSI6Y2FzZSJtbSI6ZGF0ZVBhcnRBcnJheVtNSU5VVEVdPXRvSW50KGlucHV0KTticmVhaztjYXNlInMiOmNhc2Uic3MiOmRhdGVQYXJ0QXJyYXlbU0VDT05EXT10b0ludChpbnB1dCk7YnJlYWs7Y2FzZSJTIjpjYXNlIlNTIjpjYXNlIlNTUyI6Y2FzZSJTU1NTIjpkYXRlUGFydEFycmF5W01JTExJU0VDT05EXT10b0ludCgxZTMqKCIwLiIraW5wdXQpKTticmVhaztjYXNlIlgiOmNvbmZpZy5fZD1uZXcgRGF0ZSgxZTMqcGFyc2VGbG9hdChpbnB1dCkpO2JyZWFrO2Nhc2UiWiI6Y2FzZSJaWiI6Y29uZmlnLl91c2VVVEM9ITAsY29uZmlnLl90em09dGltZXpvbmVNaW51dGVzRnJvbVN0cmluZyhpbnB1dCk7YnJlYWs7Y2FzZSJkZCI6Y2FzZSJkZGQiOmNhc2UiZGRkZCI6YT1jb25maWcuX2xvY2FsZS53ZWVrZGF5c1BhcnNlKGlucHV0KSxudWxsIT1hPyhjb25maWcuX3c9Y29uZmlnLl93fHx7fSxjb25maWcuX3cuZD1hKTpjb25maWcuX3BmLmludmFsaWRXZWVrZGF5PWlucHV0O2JyZWFrO2Nhc2UidyI6Y2FzZSJ3dyI6Y2FzZSJXIjpjYXNlIldXIjpjYXNlImQiOmNhc2UiZSI6Y2FzZSJFIjp0b2tlbj10b2tlbi5zdWJzdHIoMCwxKTtjYXNlImdnZ2ciOmNhc2UiR0dHRyI6Y2FzZSJHR0dHRyI6dG9rZW49dG9rZW4uc3Vic3RyKDAsMiksaW5wdXQmJihjb25maWcuX3c9Y29uZmlnLl93fHx7fSxjb25maWcuX3dbdG9rZW5dPXRvSW50KGlucHV0KSk7YnJlYWs7Y2FzZSJnZyI6Y2FzZSJHRyI6Y29uZmlnLl93PWNvbmZpZy5fd3x8e30sY29uZmlnLl93W3Rva2VuXT1tb21lbnQucGFyc2VUd29EaWdpdFllYXIoaW5wdXQpfX1mdW5jdGlvbiBkYXlPZlllYXJGcm9tV2Vla0luZm8oY29uZmlnKXt2YXIgdyx3ZWVrWWVhcix3ZWVrLHdlZWtkYXksZG93LGRveSx0ZW1wO3c9Y29uZmlnLl93LG51bGwhPXcuR0d8fG51bGwhPXcuV3x8bnVsbCE9dy5FPyhkb3c9MSxkb3k9NCx3ZWVrWWVhcj1kZmwody5HRyxjb25maWcuX2FbWUVBUl0sd2Vla09mWWVhcihtb21lbnQoKSwxLDQpLnllYXIpLHdlZWs9ZGZsKHcuVywxKSx3ZWVrZGF5PWRmbCh3LkUsMSkpOihkb3c9Y29uZmlnLl9sb2NhbGUuX3dlZWsuZG93LGRveT1jb25maWcuX2xvY2FsZS5fd2Vlay5kb3ksd2Vla1llYXI9ZGZsKHcuZ2csY29uZmlnLl9hW1lFQVJdLHdlZWtPZlllYXIobW9tZW50KCksZG93LGRveSkueWVhciksd2Vlaz1kZmwody53LDEpLG51bGwhPXcuZD8od2Vla2RheT13LmQsZG93PndlZWtkYXkmJisrd2Vlayk6d2Vla2RheT1udWxsIT13LmU/dy5lK2Rvdzpkb3cpLHRlbXA9ZGF5T2ZZZWFyRnJvbVdlZWtzKHdlZWtZZWFyLHdlZWssd2Vla2RheSxkb3ksZG93KSxjb25maWcuX2FbWUVBUl09dGVtcC55ZWFyLGNvbmZpZy5fZGF5T2ZZZWFyPXRlbXAuZGF5T2ZZZWFyfWZ1bmN0aW9uIGRhdGVGcm9tQ29uZmlnKGNvbmZpZyl7dmFyIGksZGF0ZSxjdXJyZW50RGF0ZSx5ZWFyVG9Vc2UsaW5wdXQ9W107aWYoIWNvbmZpZy5fZCl7Zm9yKGN1cnJlbnREYXRlPWN1cnJlbnREYXRlQXJyYXkoY29uZmlnKSxjb25maWcuX3cmJm51bGw9PWNvbmZpZy5fYVtEQVRFXSYmbnVsbD09Y29uZmlnLl9hW01PTlRIXSYmZGF5T2ZZZWFyRnJvbVdlZWtJbmZvKGNvbmZpZyksY29uZmlnLl9kYXlPZlllYXImJih5ZWFyVG9Vc2U9ZGZsKGNvbmZpZy5fYVtZRUFSXSxjdXJyZW50RGF0ZVtZRUFSXSksY29uZmlnLl9kYXlPZlllYXI+ZGF5c0luWWVhcih5ZWFyVG9Vc2UpJiYoY29uZmlnLl9wZi5fb3ZlcmZsb3dEYXlPZlllYXI9ITApLGRhdGU9bWFrZVVUQ0RhdGUoeWVhclRvVXNlLDAsY29uZmlnLl9kYXlPZlllYXIpLGNvbmZpZy5fYVtNT05USF09ZGF0ZS5nZXRVVENNb250aCgpLGNvbmZpZy5fYVtEQVRFXT1kYXRlLmdldFVUQ0RhdGUoKSksaT0wOzM+aSYmbnVsbD09Y29uZmlnLl9hW2ldOysraSljb25maWcuX2FbaV09aW5wdXRbaV09Y3VycmVudERhdGVbaV07Zm9yKDs3Pmk7aSsrKWNvbmZpZy5fYVtpXT1pbnB1dFtpXT1udWxsPT1jb25maWcuX2FbaV0/Mj09PWk/MTowOmNvbmZpZy5fYVtpXTtjb25maWcuX2Q9KGNvbmZpZy5fdXNlVVRDP21ha2VVVENEYXRlOm1ha2VEYXRlKS5hcHBseShudWxsLGlucHV0KSxudWxsIT1jb25maWcuX3R6bSYmY29uZmlnLl9kLnNldFVUQ01pbnV0ZXMoY29uZmlnLl9kLmdldFVUQ01pbnV0ZXMoKStjb25maWcuX3R6bSl9fWZ1bmN0aW9uIGRhdGVGcm9tT2JqZWN0KGNvbmZpZyl7dmFyIG5vcm1hbGl6ZWRJbnB1dDtjb25maWcuX2R8fChub3JtYWxpemVkSW5wdXQ9bm9ybWFsaXplT2JqZWN0VW5pdHMoY29uZmlnLl9pKSxjb25maWcuX2E9W25vcm1hbGl6ZWRJbnB1dC55ZWFyLG5vcm1hbGl6ZWRJbnB1dC5tb250aCxub3JtYWxpemVkSW5wdXQuZGF5LG5vcm1hbGl6ZWRJbnB1dC5ob3VyLG5vcm1hbGl6ZWRJbnB1dC5taW51dGUsbm9ybWFsaXplZElucHV0LnNlY29uZCxub3JtYWxpemVkSW5wdXQubWlsbGlzZWNvbmRdLGRhdGVGcm9tQ29uZmlnKGNvbmZpZykpfWZ1bmN0aW9uIGN1cnJlbnREYXRlQXJyYXkoY29uZmlnKXt2YXIgbm93PW5ldyBEYXRlO3JldHVybiBjb25maWcuX3VzZVVUQz9bbm93LmdldFVUQ0Z1bGxZZWFyKCksbm93LmdldFVUQ01vbnRoKCksbm93LmdldFVUQ0RhdGUoKV06W25vdy5nZXRGdWxsWWVhcigpLG5vdy5nZXRNb250aCgpLG5vdy5nZXREYXRlKCldfWZ1bmN0aW9uIG1ha2VEYXRlRnJvbVN0cmluZ0FuZEZvcm1hdChjb25maWcpe2lmKGNvbmZpZy5fZj09PW1vbWVudC5JU09fODYwMSlyZXR1cm4gdm9pZCBwYXJzZUlTTyhjb25maWcpO2NvbmZpZy5fYT1bXSxjb25maWcuX3BmLmVtcHR5PSEwO3ZhciBpLHBhcnNlZElucHV0LHRva2Vucyx0b2tlbixza2lwcGVkLHN0cmluZz0iIitjb25maWcuX2ksc3RyaW5nTGVuZ3RoPXN0cmluZy5sZW5ndGgsdG90YWxQYXJzZWRJbnB1dExlbmd0aD0wO2Zvcih0b2tlbnM9ZXhwYW5kRm9ybWF0KGNvbmZpZy5fZixjb25maWcuX2xvY2FsZSkubWF0Y2goZm9ybWF0dGluZ1Rva2Vucyl8fFtdLGk9MDtpPHRva2Vucy5sZW5ndGg7aSsrKXRva2VuPXRva2Vuc1tpXSxwYXJzZWRJbnB1dD0oc3RyaW5nLm1hdGNoKGdldFBhcnNlUmVnZXhGb3JUb2tlbih0b2tlbixjb25maWcpKXx8W10pWzBdLHBhcnNlZElucHV0JiYoc2tpcHBlZD1zdHJpbmcuc3Vic3RyKDAsc3RyaW5nLmluZGV4T2YocGFyc2VkSW5wdXQpKSxza2lwcGVkLmxlbmd0aD4wJiZjb25maWcuX3BmLnVudXNlZElucHV0LnB1c2goc2tpcHBlZCksc3RyaW5nPXN0cmluZy5zbGljZShzdHJpbmcuaW5kZXhPZihwYXJzZWRJbnB1dCkrcGFyc2VkSW5wdXQubGVuZ3RoKSx0b3RhbFBhcnNlZElucHV0TGVuZ3RoKz1wYXJzZWRJbnB1dC5sZW5ndGgpLGZvcm1hdFRva2VuRnVuY3Rpb25zW3Rva2VuXT8ocGFyc2VkSW5wdXQ/Y29uZmlnLl9wZi5lbXB0eT0hMTpjb25maWcuX3BmLnVudXNlZFRva2Vucy5wdXNoKHRva2VuKSxhZGRUaW1lVG9BcnJheUZyb21Ub2tlbih0b2tlbixwYXJzZWRJbnB1dCxjb25maWcpKTpjb25maWcuX3N0cmljdCYmIXBhcnNlZElucHV0JiZjb25maWcuX3BmLnVudXNlZFRva2Vucy5wdXNoKHRva2VuKTtjb25maWcuX3BmLmNoYXJzTGVmdE92ZXI9c3RyaW5nTGVuZ3RoLXRvdGFsUGFyc2VkSW5wdXRMZW5ndGgsc3RyaW5nLmxlbmd0aD4wJiZjb25maWcuX3BmLnVudXNlZElucHV0LnB1c2goc3RyaW5nKSxjb25maWcuX2lzUG0mJmNvbmZpZy5fYVtIT1VSXTwxMiYmKGNvbmZpZy5fYVtIT1VSXSs9MTIpLGNvbmZpZy5faXNQbT09PSExJiYxMj09PWNvbmZpZy5fYVtIT1VSXSYmKGNvbmZpZy5fYVtIT1VSXT0wKSxkYXRlRnJvbUNvbmZpZyhjb25maWcpLGNoZWNrT3ZlcmZsb3coY29uZmlnKX1mdW5jdGlvbiB1bmVzY2FwZUZvcm1hdChzKXtyZXR1cm4gcy5yZXBsYWNlKC9cXChcWyl8XFwoXF0pfFxbKFteXF1cW10qKVxdfFxcKC4pL2csZnVuY3Rpb24obWF0Y2hlZCxwMSxwMixwMyxwNCl7cmV0dXJuIHAxfHxwMnx8cDN8fHA0fSl9ZnVuY3Rpb24gcmVnZXhwRXNjYXBlKHMpe3JldHVybiBzLnJlcGxhY2UoL1stXC9cXF4kKis/LigpfFtcXXt9XS9nLCJcXCQmIil9ZnVuY3Rpb24gbWFrZURhdGVGcm9tU3RyaW5nQW5kQXJyYXkoY29uZmlnKXt2YXIgdGVtcENvbmZpZyxiZXN0TW9tZW50LHNjb3JlVG9CZWF0LGksY3VycmVudFNjb3JlO2lmKDA9PT1jb25maWcuX2YubGVuZ3RoKXJldHVybiBjb25maWcuX3BmLmludmFsaWRGb3JtYXQ9ITAsdm9pZChjb25maWcuX2Q9bmV3IERhdGUoMC8wKSk7Zm9yKGk9MDtpPGNvbmZpZy5fZi5sZW5ndGg7aSsrKWN1cnJlbnRTY29yZT0wLHRlbXBDb25maWc9Y29weUNvbmZpZyh7fSxjb25maWcpLG51bGwhPWNvbmZpZy5fdXNlVVRDJiYodGVtcENvbmZpZy5fdXNlVVRDPWNvbmZpZy5fdXNlVVRDKSx0ZW1wQ29uZmlnLl9wZj1kZWZhdWx0UGFyc2luZ0ZsYWdzKCksdGVtcENvbmZpZy5fZj1jb25maWcuX2ZbaV0sbWFrZURhdGVGcm9tU3RyaW5nQW5kRm9ybWF0KHRlbXBDb25maWcpLGlzVmFsaWQodGVtcENvbmZpZykmJihjdXJyZW50U2NvcmUrPXRlbXBDb25maWcuX3BmLmNoYXJzTGVmdE92ZXIsY3VycmVudFNjb3JlKz0xMCp0ZW1wQ29uZmlnLl9wZi51bnVzZWRUb2tlbnMubGVuZ3RoLHRlbXBDb25maWcuX3BmLnNjb3JlPWN1cnJlbnRTY29yZSwobnVsbD09c2NvcmVUb0JlYXR8fHNjb3JlVG9CZWF0PmN1cnJlbnRTY29yZSkmJihzY29yZVRvQmVhdD1jdXJyZW50U2NvcmUsYmVzdE1vbWVudD10ZW1wQ29uZmlnKSk7ZXh0ZW5kKGNvbmZpZyxiZXN0TW9tZW50fHx0ZW1wQ29uZmlnKX1mdW5jdGlvbiBwYXJzZUlTTyhjb25maWcpe3ZhciBpLGwsc3RyaW5nPWNvbmZpZy5faSxtYXRjaD1pc29SZWdleC5leGVjKHN0cmluZyk7aWYobWF0Y2gpe2Zvcihjb25maWcuX3BmLmlzbz0hMCxpPTAsbD1pc29EYXRlcy5sZW5ndGg7bD5pO2krKylpZihpc29EYXRlc1tpXVsxXS5leGVjKHN0cmluZykpe2NvbmZpZy5fZj1pc29EYXRlc1tpXVswXSsobWF0Y2hbNl18fCIgIik7YnJlYWt9Zm9yKGk9MCxsPWlzb1RpbWVzLmxlbmd0aDtsPmk7aSsrKWlmKGlzb1RpbWVzW2ldWzFdLmV4ZWMoc3RyaW5nKSl7Y29uZmlnLl9mKz1pc29UaW1lc1tpXVswXTticmVha31zdHJpbmcubWF0Y2gocGFyc2VUb2tlblRpbWV6b25lKSYmKGNvbmZpZy5fZis9IloiKSxtYWtlRGF0ZUZyb21TdHJpbmdBbmRGb3JtYXQoY29uZmlnKX1lbHNlIGNvbmZpZy5faXNWYWxpZD0hMX1mdW5jdGlvbiBtYWtlRGF0ZUZyb21TdHJpbmcoY29uZmlnKXtwYXJzZUlTTyhjb25maWcpLGNvbmZpZy5faXNWYWxpZD09PSExJiYoZGVsZXRlIGNvbmZpZy5faXNWYWxpZCxtb21lbnQuY3JlYXRlRnJvbUlucHV0RmFsbGJhY2soY29uZmlnKSl9ZnVuY3Rpb24gbWFwKGFycixmbil7dmFyIGkscmVzPVtdO2ZvcihpPTA7aTxhcnIubGVuZ3RoOysraSlyZXMucHVzaChmbihhcnJbaV0saSkpO3JldHVybiByZXN9ZnVuY3Rpb24gbWFrZURhdGVGcm9tSW5wdXQoY29uZmlnKXt2YXIgbWF0Y2hlZCxpbnB1dD1jb25maWcuX2k7aW5wdXQ9PT11bmRlZmluZWQ/Y29uZmlnLl9kPW5ldyBEYXRlOmlzRGF0ZShpbnB1dCk/Y29uZmlnLl9kPW5ldyBEYXRlKCtpbnB1dCk6bnVsbCE9PShtYXRjaGVkPWFzcE5ldEpzb25SZWdleC5leGVjKGlucHV0KSk/Y29uZmlnLl9kPW5ldyBEYXRlKCttYXRjaGVkWzFdKToic3RyaW5nIj09dHlwZW9mIGlucHV0P21ha2VEYXRlRnJvbVN0cmluZyhjb25maWcpOmlzQXJyYXkoaW5wdXQpPyhjb25maWcuX2E9bWFwKGlucHV0LnNsaWNlKDApLGZ1bmN0aW9uKG9iail7cmV0dXJuIHBhcnNlSW50KG9iaiwxMCl9KSxkYXRlRnJvbUNvbmZpZyhjb25maWcpKToib2JqZWN0Ij09dHlwZW9mIGlucHV0P2RhdGVGcm9tT2JqZWN0KGNvbmZpZyk6Im51bWJlciI9PXR5cGVvZiBpbnB1dD9jb25maWcuX2Q9bmV3IERhdGUoaW5wdXQpOm1vbWVudC5jcmVhdGVGcm9tSW5wdXRGYWxsYmFjayhjb25maWcpfWZ1bmN0aW9uIG1ha2VEYXRlKHksbSxkLGgsTSxzLG1zKXt2YXIgZGF0ZT1uZXcgRGF0ZSh5LG0sZCxoLE0scyxtcyk7cmV0dXJuIDE5NzA+eSYmZGF0ZS5zZXRGdWxsWWVhcih5KSxkYXRlfWZ1bmN0aW9uIG1ha2VVVENEYXRlKHkpe3ZhciBkYXRlPW5ldyBEYXRlKERhdGUuVVRDLmFwcGx5KG51bGwsYXJndW1lbnRzKSk7cmV0dXJuIDE5NzA+eSYmZGF0ZS5zZXRVVENGdWxsWWVhcih5KSxkYXRlfWZ1bmN0aW9uIHBhcnNlV2Vla2RheShpbnB1dCxsb2NhbGUpe2lmKCJzdHJpbmciPT10eXBlb2YgaW5wdXQpaWYoaXNOYU4oaW5wdXQpKXtpZihpbnB1dD1sb2NhbGUud2Vla2RheXNQYXJzZShpbnB1dCksIm51bWJlciIhPXR5cGVvZiBpbnB1dClyZXR1cm4gbnVsbH1lbHNlIGlucHV0PXBhcnNlSW50KGlucHV0LDEwKTtyZXR1cm4gaW5wdXR9ZnVuY3Rpb24gc3Vic3RpdHV0ZVRpbWVBZ28oc3RyaW5nLG51bWJlcix3aXRob3V0U3VmZml4LGlzRnV0dXJlLGxvY2FsZSl7cmV0dXJuIGxvY2FsZS5yZWxhdGl2ZVRpbWUobnVtYmVyfHwxLCEhd2l0aG91dFN1ZmZpeCxzdHJpbmcsaXNGdXR1cmUpfWZ1bmN0aW9uIHJlbGF0aXZlVGltZShwb3NOZWdEdXJhdGlvbix3aXRob3V0U3VmZml4LGxvY2FsZSl7dmFyIGR1cmF0aW9uPW1vbWVudC5kdXJhdGlvbihwb3NOZWdEdXJhdGlvbikuYWJzKCksc2Vjb25kcz1yb3VuZChkdXJhdGlvbi5hcygicyIpKSxtaW51dGVzPXJvdW5kKGR1cmF0aW9uLmFzKCJtIikpLGhvdXJzPXJvdW5kKGR1cmF0aW9uLmFzKCJoIikpLGRheXM9cm91bmQoZHVyYXRpb24uYXMoImQiKSksbW9udGhzPXJvdW5kKGR1cmF0aW9uLmFzKCJNIikpLHllYXJzPXJvdW5kKGR1cmF0aW9uLmFzKCJ5IikpLGFyZ3M9c2Vjb25kczxyZWxhdGl2ZVRpbWVUaHJlc2hvbGRzLnMmJlsicyIsc2Vjb25kc118fDE9PT1taW51dGVzJiZbIm0iXXx8bWludXRlczxyZWxhdGl2ZVRpbWVUaHJlc2hvbGRzLm0mJlsibW0iLG1pbnV0ZXNdfHwxPT09aG91cnMmJlsiaCJdfHxob3VyczxyZWxhdGl2ZVRpbWVUaHJlc2hvbGRzLmgmJlsiaGgiLGhvdXJzXXx8MT09PWRheXMmJlsiZCJdfHxkYXlzPHJlbGF0aXZlVGltZVRocmVzaG9sZHMuZCYmWyJkZCIsZGF5c118fDE9PT1tb250aHMmJlsiTSJdfHxtb250aHM8cmVsYXRpdmVUaW1lVGhyZXNob2xkcy5NJiZbIk1NIixtb250aHNdfHwxPT09eWVhcnMmJlsieSJdfHxbInl5Iix5ZWFyc107cmV0dXJuIGFyZ3NbMl09d2l0aG91dFN1ZmZpeCxhcmdzWzNdPStwb3NOZWdEdXJhdGlvbj4wLGFyZ3NbNF09bG9jYWxlLHN1YnN0aXR1dGVUaW1lQWdvLmFwcGx5KHt9LGFyZ3MpfWZ1bmN0aW9uIHdlZWtPZlllYXIobW9tLGZpcnN0RGF5T2ZXZWVrLGZpcnN0RGF5T2ZXZWVrT2ZZZWFyKXt2YXIgYWRqdXN0ZWRNb21lbnQsZW5kPWZpcnN0RGF5T2ZXZWVrT2ZZZWFyLWZpcnN0RGF5T2ZXZWVrLGRheXNUb0RheU9mV2Vlaz1maXJzdERheU9mV2Vla09mWWVhci1tb20uZGF5KCk7cmV0dXJuIGRheXNUb0RheU9mV2Vlaz5lbmQmJihkYXlzVG9EYXlPZldlZWstPTcpLGVuZC03PmRheXNUb0RheU9mV2VlayYmKGRheXNUb0RheU9mV2Vlays9NyksYWRqdXN0ZWRNb21lbnQ9bW9tZW50KG1vbSkuYWRkKGRheXNUb0RheU9mV2VlaywiZCIpLHt3ZWVrOk1hdGguY2VpbChhZGp1c3RlZE1vbWVudC5kYXlPZlllYXIoKS83KSx5ZWFyOmFkanVzdGVkTW9tZW50LnllYXIoKX19ZnVuY3Rpb24gZGF5T2ZZZWFyRnJvbVdlZWtzKHllYXIsd2Vlayx3ZWVrZGF5LGZpcnN0RGF5T2ZXZWVrT2ZZZWFyLGZpcnN0RGF5T2ZXZWVrKXt2YXIgZGF5c1RvQWRkLGRheU9mWWVhcixkPW1ha2VVVENEYXRlKHllYXIsMCwxKS5nZXRVVENEYXkoKTtyZXR1cm4gZD0wPT09ZD83OmQsd2Vla2RheT1udWxsIT13ZWVrZGF5P3dlZWtkYXk6Zmlyc3REYXlPZldlZWssZGF5c1RvQWRkPWZpcnN0RGF5T2ZXZWVrLWQrKGQ+Zmlyc3REYXlPZldlZWtPZlllYXI/NzowKS0oZmlyc3REYXlPZldlZWs+ZD83OjApLGRheU9mWWVhcj03Kih3ZWVrLTEpKyh3ZWVrZGF5LWZpcnN0RGF5T2ZXZWVrKStkYXlzVG9BZGQrMSx7eWVhcjpkYXlPZlllYXI+MD95ZWFyOnllYXItMSxkYXlPZlllYXI6ZGF5T2ZZZWFyPjA/ZGF5T2ZZZWFyOmRheXNJblllYXIoeWVhci0xKStkYXlPZlllYXJ9fWZ1bmN0aW9uIG1ha2VNb21lbnQoY29uZmlnKXt2YXIgaW5wdXQ9Y29uZmlnLl9pLGZvcm1hdD1jb25maWcuX2Y7cmV0dXJuIGNvbmZpZy5fbG9jYWxlPWNvbmZpZy5fbG9jYWxlfHxtb21lbnQubG9jYWxlRGF0YShjb25maWcuX2wpLG51bGw9PT1pbnB1dHx8Zm9ybWF0PT09dW5kZWZpbmVkJiYiIj09PWlucHV0P21vbWVudC5pbnZhbGlkKHtudWxsSW5wdXQ6ITB9KTooInN0cmluZyI9PXR5cGVvZiBpbnB1dCYmKGNvbmZpZy5faT1pbnB1dD1jb25maWcuX2xvY2FsZS5wcmVwYXJzZShpbnB1dCkpLG1vbWVudC5pc01vbWVudChpbnB1dCk/bmV3IE1vbWVudChpbnB1dCwhMCk6KGZvcm1hdD9pc0FycmF5KGZvcm1hdCk/bWFrZURhdGVGcm9tU3RyaW5nQW5kQXJyYXkoY29uZmlnKTptYWtlRGF0ZUZyb21TdHJpbmdBbmRGb3JtYXQoY29uZmlnKTptYWtlRGF0ZUZyb21JbnB1dChjb25maWcpLG5ldyBNb21lbnQoY29uZmlnKSkpfWZ1bmN0aW9uIHBpY2tCeShmbixtb21lbnRzKXt2YXIgcmVzLGk7aWYoMT09PW1vbWVudHMubGVuZ3RoJiZpc0FycmF5KG1vbWVudHNbMF0pJiYobW9tZW50cz1tb21lbnRzWzBdKSwhbW9tZW50cy5sZW5ndGgpcmV0dXJuIG1vbWVudCgpO2ZvcihyZXM9bW9tZW50c1swXSxpPTE7aTxtb21lbnRzLmxlbmd0aDsrK2kpbW9tZW50c1tpXVtmbl0ocmVzKSYmKHJlcz1tb21lbnRzW2ldKTtyZXR1cm4gcmVzfWZ1bmN0aW9uIHJhd01vbnRoU2V0dGVyKG1vbSx2YWx1ZSl7dmFyIGRheU9mTW9udGg7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmKHZhbHVlPW1vbS5sb2NhbGVEYXRhKCkubW9udGhzUGFyc2UodmFsdWUpLCJudW1iZXIiIT10eXBlb2YgdmFsdWUpP21vbTooZGF5T2ZNb250aD1NYXRoLm1pbihtb20uZGF0ZSgpLGRheXNJbk1vbnRoKG1vbS55ZWFyKCksdmFsdWUpKSxtb20uX2RbInNldCIrKG1vbS5faXNVVEM/IlVUQyI6IiIpKyJNb250aCJdKHZhbHVlLGRheU9mTW9udGgpLG1vbSl9ZnVuY3Rpb24gcmF3R2V0dGVyKG1vbSx1bml0KXtyZXR1cm4gbW9tLl9kWyJnZXQiKyhtb20uX2lzVVRDPyJVVEMiOiIiKSt1bml0XSgpfWZ1bmN0aW9uIHJhd1NldHRlcihtb20sdW5pdCx2YWx1ZSl7cmV0dXJuIk1vbnRoIj09PXVuaXQ/cmF3TW9udGhTZXR0ZXIobW9tLHZhbHVlKTptb20uX2RbInNldCIrKG1vbS5faXNVVEM/IlVUQyI6IiIpK3VuaXRdKHZhbHVlKX1mdW5jdGlvbiBtYWtlQWNjZXNzb3IodW5pdCxrZWVwVGltZSl7cmV0dXJuIGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gbnVsbCE9dmFsdWU/KHJhd1NldHRlcih0aGlzLHVuaXQsdmFsdWUpLG1vbWVudC51cGRhdGVPZmZzZXQodGhpcyxrZWVwVGltZSksdGhpcyk6cmF3R2V0dGVyKHRoaXMsdW5pdCl9fWZ1bmN0aW9uIGRheXNUb1llYXJzKGRheXMpe3JldHVybiA0MDAqZGF5cy8xNDYwOTd9ZnVuY3Rpb24geWVhcnNUb0RheXMoeWVhcnMpe3JldHVybiAxNDYwOTcqeWVhcnMvNDAwfWZ1bmN0aW9uIG1ha2VEdXJhdGlvbkdldHRlcihuYW1lKXttb21lbnQuZHVyYXRpb24uZm5bbmFtZV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YVtuYW1lXX19ZnVuY3Rpb24gbWFrZUdsb2JhbChzaG91bGREZXByZWNhdGUpeyJ1bmRlZmluZWQiPT10eXBlb2YgZW5kZXImJihvbGRHbG9iYWxNb21lbnQ9Z2xvYmFsU2NvcGUubW9tZW50LGdsb2JhbFNjb3BlLm1vbWVudD1zaG91bGREZXByZWNhdGU/ZGVwcmVjYXRlKCJBY2Nlc3NpbmcgTW9tZW50IHRocm91Z2ggdGhlIGdsb2JhbCBzY29wZSBpcyBkZXByZWNhdGVkLCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGFuIHVwY29taW5nIHJlbGVhc2UuIixtb21lbnQpOm1vbWVudCl9Zm9yKHZhciBtb21lbnQsb2xkR2xvYmFsTW9tZW50LGksVkVSU0lPTj0iMi44LjMiLGdsb2JhbFNjb3BlPSJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDp0aGlzLHJvdW5kPU1hdGgucm91bmQsaGFzT3duUHJvcGVydHk9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxZRUFSPTAsTU9OVEg9MSxEQVRFPTIsSE9VUj0zLE1JTlVURT00LFNFQ09ORD01LE1JTExJU0VDT05EPTYsbG9jYWxlcz17fSxtb21lbnRQcm9wZXJ0aWVzPVtdLGhhc01vZHVsZT0idW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMsYXNwTmV0SnNvblJlZ2V4PS9eXC8/RGF0ZVwoKFwtP1xkKykvaSxhc3BOZXRUaW1lU3Bhbkpzb25SZWdleD0vKFwtKT8oPzooXGQqKVwuKT8oXGQrKVw6KFxkKykoPzpcOihcZCspXC4/KFxkezN9KT8pPy8saXNvRHVyYXRpb25SZWdleD0vXigtKT9QKD86KD86KFswLTksLl0qKVkpPyg/OihbMC05LC5dKilNKT8oPzooWzAtOSwuXSopRCk/KD86VCg/OihbMC05LC5dKilIKT8oPzooWzAtOSwuXSopTSk/KD86KFswLTksLl0qKVMpPyk/fChbMC05LC5dKilXKSQvLGZvcm1hdHRpbmdUb2tlbnM9LyhcW1teXFtdKlxdKXwoXFwpPyhNb3xNTT9NP00/fERvfERERG98REQ/RD9EP3xkZGQ/ZD98ZG8/fHdbb3x3XT98V1tvfFddP3xRfFlZWVlZWXxZWVlZWXxZWVlZfFlZfGdnKGdnZz8pP3xHRyhHR0c/KT98ZXxFfGF8QXxoaD98SEg/fG1tP3xzcz98U3sxLDR9fFh8eno/fFpaP3wuKS9nLGxvY2FsRm9ybWF0dGluZ1Rva2Vucz0vKFxbW15cW10qXF0pfChcXCk/KExUfExMP0w/TD98bHsxLDR9KS9nLHBhcnNlVG9rZW5PbmVPclR3b0RpZ2l0cz0vXGRcZD8vLHBhcnNlVG9rZW5PbmVUb1RocmVlRGlnaXRzPS9cZHsxLDN9LyxwYXJzZVRva2VuT25lVG9Gb3VyRGlnaXRzPS9cZHsxLDR9LyxwYXJzZVRva2VuT25lVG9TaXhEaWdpdHM9L1srXC1dP1xkezEsNn0vLHBhcnNlVG9rZW5EaWdpdHM9L1xkKy8scGFyc2VUb2tlbldvcmQ9L1swLTldKlsnYS16XHUwMEEwLVx1MDVGRlx1MDcwMC1cdUQ3RkZcdUY5MDAtXHVGRENGXHVGREYwLVx1RkZFRl0rfFtcdTA2MDAtXHUwNkZGXC9dKyhccyo/W1x1MDYwMC1cdTA2RkZdKyl7MSwyfS9pLHBhcnNlVG9rZW5UaW1lem9uZT0vWnxbXCtcLV1cZFxkOj9cZFxkL2dpLHBhcnNlVG9rZW5UPS9UL2kscGFyc2VUb2tlblRpbWVzdGFtcE1zPS9bXCtcLV0/XGQrKFwuXGR7MSwzfSk/LyxwYXJzZVRva2VuT3JkaW5hbD0vXGR7MSwyfS8scGFyc2VUb2tlbk9uZURpZ2l0PS9cZC8scGFyc2VUb2tlblR3b0RpZ2l0cz0vXGRcZC8scGFyc2VUb2tlblRocmVlRGlnaXRzPS9cZHszfS8scGFyc2VUb2tlbkZvdXJEaWdpdHM9L1xkezR9LyxwYXJzZVRva2VuU2l4RGlnaXRzPS9bKy1dP1xkezZ9LyxwYXJzZVRva2VuU2lnbmVkTnVtYmVyPS9bKy1dP1xkKy8saXNvUmVnZXg9L15ccyooPzpbKy1dXGR7Nn18XGR7NH0pLSg/OihcZFxkLVxkXGQpfChXXGRcZCQpfChXXGRcZC1cZCl8KFxkXGRcZCkpKChUfCApKFxkXGQoOlxkXGQoOlxkXGQoXC5cZCspPyk/KT8pPyhbXCtcLV1cZFxkKD86Oj9cZFxkKT98XHMqWik/KT8kLyxpc29Gb3JtYXQ9IllZWVktTU0tRERUSEg6bW06c3NaIixpc29EYXRlcz1bWyJZWVlZWVktTU0tREQiLC9bKy1dXGR7Nn0tXGR7Mn0tXGR7Mn0vXSxbIllZWVktTU0tREQiLC9cZHs0fS1cZHsyfS1cZHsyfS9dLFsiR0dHRy1bV11XVy1FIiwvXGR7NH0tV1xkezJ9LVxkL10sWyJHR0dHLVtXXVdXIiwvXGR7NH0tV1xkezJ9L10sWyJZWVlZLURERCIsL1xkezR9LVxkezN9L11dLGlzb1RpbWVzPVtbIkhIOm1tOnNzLlNTU1MiLC8oVHwgKVxkXGQ6XGRcZDpcZFxkXC5cZCsvXSxbIkhIOm1tOnNzIiwvKFR8IClcZFxkOlxkXGQ6XGRcZC9dLFsiSEg6bW0iLC8oVHwgKVxkXGQ6XGRcZC9dLFsiSEgiLC8oVHwgKVxkXGQvXV0scGFyc2VUaW1lem9uZUNodW5rZXI9LyhbXCtcLV18XGRcZCkvZ2ksdW5pdE1pbGxpc2Vjb25kRmFjdG9ycz0oIkRhdGV8SG91cnN8TWludXRlc3xTZWNvbmRzfE1pbGxpc2Vjb25kcyIuc3BsaXQoInwiKSx7TWlsbGlzZWNvbmRzOjEsU2Vjb25kczoxZTMsTWludXRlczo2ZTQsSG91cnM6MzZlNSxEYXlzOjg2NGU1LE1vbnRoczoyNTkyZTYsWWVhcnM6MzE1MzZlNn0pLHVuaXRBbGlhc2VzPXttczoibWlsbGlzZWNvbmQiLHM6InNlY29uZCIsbToibWludXRlIixoOiJob3VyIixkOiJkYXkiLEQ6ImRhdGUiLHc6IndlZWsiLFc6Imlzb1dlZWsiLE06Im1vbnRoIixROiJxdWFydGVyIix5OiJ5ZWFyIixEREQ6ImRheU9mWWVhciIsZToid2Vla2RheSIsRToiaXNvV2Vla2RheSIsZ2c6IndlZWtZZWFyIixHRzoiaXNvV2Vla1llYXIifSxjYW1lbEZ1bmN0aW9ucz17ZGF5b2Z5ZWFyOiJkYXlPZlllYXIiLGlzb3dlZWtkYXk6Imlzb1dlZWtkYXkiLGlzb3dlZWs6Imlzb1dlZWsiLHdlZWt5ZWFyOiJ3ZWVrWWVhciIsaXNvd2Vla3llYXI6Imlzb1dlZWtZZWFyIn0sZm9ybWF0RnVuY3Rpb25zPXt9LHJlbGF0aXZlVGltZVRocmVzaG9sZHM9e3M6NDUsbTo0NSxoOjIyLGQ6MjYsTToxMX0sb3JkaW5hbGl6ZVRva2Vucz0iREREIHcgVyBNIEQgZCIuc3BsaXQoIiAiKSxwYWRkZWRUb2tlbnM9Ik0gRCBIIGggbSBzIHcgVyIuc3BsaXQoIiAiKSxmb3JtYXRUb2tlbkZ1bmN0aW9ucz17TTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vbnRoKCkrMX0sTU1NOmZ1bmN0aW9uKGZvcm1hdCl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1vbnRoc1Nob3J0KHRoaXMsZm9ybWF0KX0sTU1NTTpmdW5jdGlvbihmb3JtYXQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS5tb250aHModGhpcyxmb3JtYXQpfSxEOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0ZSgpfSxEREQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXlPZlllYXIoKX0sZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRheSgpfSxkZDpmdW5jdGlvbihmb3JtYXQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5c01pbih0aGlzLGZvcm1hdCl9LGRkZDpmdW5jdGlvbihmb3JtYXQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5c1Nob3J0KHRoaXMsZm9ybWF0KX0sZGRkZDpmdW5jdGlvbihmb3JtYXQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5cyh0aGlzLGZvcm1hdCl9LHc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53ZWVrKCl9LFc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc29XZWVrKCl9LFlZOmZ1bmN0aW9uKCl7cmV0dXJuIGxlZnRaZXJvRmlsbCh0aGlzLnllYXIoKSUxMDAsMil9LFlZWVk6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMueWVhcigpLDQpfSxZWVlZWTpmdW5jdGlvbigpe3JldHVybiBsZWZ0WmVyb0ZpbGwodGhpcy55ZWFyKCksNSl9LFlZWVlZWTpmdW5jdGlvbigpe3ZhciB5PXRoaXMueWVhcigpLHNpZ249eT49MD8iKyI6Ii0iO3JldHVybiBzaWduK2xlZnRaZXJvRmlsbChNYXRoLmFicyh5KSw2KX0sZ2c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMud2Vla1llYXIoKSUxMDAsMil9LGdnZ2c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMud2Vla1llYXIoKSw0KX0sZ2dnZ2c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMud2Vla1llYXIoKSw1KX0sR0c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMuaXNvV2Vla1llYXIoKSUxMDAsMil9LEdHR0c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMuaXNvV2Vla1llYXIoKSw0KX0sR0dHR0c6ZnVuY3Rpb24oKXtyZXR1cm4gbGVmdFplcm9GaWxsKHRoaXMuaXNvV2Vla1llYXIoKSw1KX0sZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLndlZWtkYXkoKX0sRTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmlzb1dlZWtkYXkoKX0sYTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS5tZXJpZGllbSh0aGlzLmhvdXJzKCksdGhpcy5taW51dGVzKCksITApfSxBOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm1lcmlkaWVtKHRoaXMuaG91cnMoKSx0aGlzLm1pbnV0ZXMoKSwhMSl9LEg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ob3VycygpfSxoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG91cnMoKSUxMnx8MTJ9LG06ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5taW51dGVzKCl9LHM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWNvbmRzKCl9LFM6ZnVuY3Rpb24oKXtyZXR1cm4gdG9JbnQodGhpcy5taWxsaXNlY29uZHMoKS8xMDApfSxTUzpmdW5jdGlvbigpe3JldHVybiBsZWZ0WmVyb0ZpbGwodG9JbnQodGhpcy5taWxsaXNlY29uZHMoKS8xMCksMil9LFNTUzpmdW5jdGlvbigpe3JldHVybiBsZWZ0WmVyb0ZpbGwodGhpcy5taWxsaXNlY29uZHMoKSwzKX0sU1NTUzpmdW5jdGlvbigpe3JldHVybiBsZWZ0WmVyb0ZpbGwodGhpcy5taWxsaXNlY29uZHMoKSwzKX0sWjpmdW5jdGlvbigpe3ZhciBhPS10aGlzLnpvbmUoKSxiPSIrIjtyZXR1cm4gMD5hJiYoYT0tYSxiPSItIiksYitsZWZ0WmVyb0ZpbGwodG9JbnQoYS82MCksMikrIjoiK2xlZnRaZXJvRmlsbCh0b0ludChhKSU2MCwyKX0sWlo6ZnVuY3Rpb24oKXt2YXIgYT0tdGhpcy56b25lKCksYj0iKyI7cmV0dXJuIDA+YSYmKGE9LWEsYj0iLSIpLGIrbGVmdFplcm9GaWxsKHRvSW50KGEvNjApLDIpK2xlZnRaZXJvRmlsbCh0b0ludChhKSU2MCwyKX0sejpmdW5jdGlvbigpe3JldHVybiB0aGlzLnpvbmVBYmJyKCl9LHp6OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuem9uZU5hbWUoKX0sWDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnVuaXgoKX0sUTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnF1YXJ0ZXIoKX19LGRlcHJlY2F0aW9ucz17fSxsaXN0cz1bIm1vbnRocyIsIm1vbnRoc1Nob3J0Iiwid2Vla2RheXMiLCJ3ZWVrZGF5c1Nob3J0Iiwid2Vla2RheXNNaW4iXTtvcmRpbmFsaXplVG9rZW5zLmxlbmd0aDspaT1vcmRpbmFsaXplVG9rZW5zLnBvcCgpLGZvcm1hdFRva2VuRnVuY3Rpb25zW2krIm8iXT1vcmRpbmFsaXplVG9rZW4oZm9ybWF0VG9rZW5GdW5jdGlvbnNbaV0saSk7Zm9yKDtwYWRkZWRUb2tlbnMubGVuZ3RoOylpPXBhZGRlZFRva2Vucy5wb3AoKSxmb3JtYXRUb2tlbkZ1bmN0aW9uc1tpK2ldPXBhZFRva2VuKGZvcm1hdFRva2VuRnVuY3Rpb25zW2ldLDIpO2Zvcm1hdFRva2VuRnVuY3Rpb25zLkREREQ9cGFkVG9rZW4oZm9ybWF0VG9rZW5GdW5jdGlvbnMuRERELDMpLGV4dGVuZChMb2NhbGUucHJvdG90eXBlLHtzZXQ6ZnVuY3Rpb24oY29uZmlnKXt2YXIgcHJvcCxpO2ZvcihpIGluIGNvbmZpZylwcm9wPWNvbmZpZ1tpXSwiZnVuY3Rpb24iPT10eXBlb2YgcHJvcD90aGlzW2ldPXByb3A6dGhpc1siXyIraV09cHJvcH0sX21vbnRoczoiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlciIuc3BsaXQoIl8iKSxtb250aHM6ZnVuY3Rpb24obSl7cmV0dXJuIHRoaXMuX21vbnRoc1ttLm1vbnRoKCldfSxfbW9udGhzU2hvcnQ6Ikphbl9GZWJfTWFyX0Fwcl9NYXlfSnVuX0p1bF9BdWdfU2VwX09jdF9Ob3ZfRGVjIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OmZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLl9tb250aHNTaG9ydFttLm1vbnRoKCldfSxtb250aHNQYXJzZTpmdW5jdGlvbihtb250aE5hbWUpe3ZhciBpLG1vbSxyZWdleDtmb3IodGhpcy5fbW9udGhzUGFyc2V8fCh0aGlzLl9tb250aHNQYXJzZT1bXSksaT0wOzEyPmk7aSsrKWlmKHRoaXMuX21vbnRoc1BhcnNlW2ldfHwobW9tPW1vbWVudC51dGMoWzJlMyxpXSkscmVnZXg9Il4iK3RoaXMubW9udGhzKG1vbSwiIikrInxeIit0aGlzLm1vbnRoc1Nob3J0KG1vbSwiIiksdGhpcy5fbW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cChyZWdleC5yZXBsYWNlKCIuIiwiIiksImkiKSksdGhpcy5fbW9udGhzUGFyc2VbaV0udGVzdChtb250aE5hbWUpKXJldHVybiBpfSxfd2Vla2RheXM6IlN1bmRheV9Nb25kYXlfVHVlc2RheV9XZWRuZXNkYXlfVGh1cnNkYXlfRnJpZGF5X1NhdHVyZGF5Ii5zcGxpdCgiXyIpLHdlZWtkYXlzOmZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLl93ZWVrZGF5c1ttLmRheSgpXX0sX3dlZWtkYXlzU2hvcnQ6IlN1bl9Nb25fVHVlX1dlZF9UaHVfRnJpX1NhdCIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OmZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLl93ZWVrZGF5c1Nob3J0W20uZGF5KCldfSxfd2Vla2RheXNNaW46IlN1X01vX1R1X1dlX1RoX0ZyX1NhIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOmZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLl93ZWVrZGF5c01pblttLmRheSgpXX0sd2Vla2RheXNQYXJzZTpmdW5jdGlvbih3ZWVrZGF5TmFtZSl7dmFyIGksbW9tLHJlZ2V4O2Zvcih0aGlzLl93ZWVrZGF5c1BhcnNlfHwodGhpcy5fd2Vla2RheXNQYXJzZT1bXSksaT0wOzc+aTtpKyspaWYodGhpcy5fd2Vla2RheXNQYXJzZVtpXXx8KG1vbT1tb21lbnQoWzJlMywxXSkuZGF5KGkpLHJlZ2V4PSJeIit0aGlzLndlZWtkYXlzKG1vbSwiIikrInxeIit0aGlzLndlZWtkYXlzU2hvcnQobW9tLCIiKSsifF4iK3RoaXMud2Vla2RheXNNaW4obW9tLCIiKSx0aGlzLl93ZWVrZGF5c1BhcnNlW2ldPW5ldyBSZWdFeHAocmVnZXgucmVwbGFjZSgiLiIsIiIpLCJpIikpLHRoaXMuX3dlZWtkYXlzUGFyc2VbaV0udGVzdCh3ZWVrZGF5TmFtZSkpcmV0dXJuIGl9LF9sb25nRGF0ZUZvcm1hdDp7TFQ6Img6bW0gQSIsTDoiTU0vREQvWVlZWSIsTEw6Ik1NTU0gRCwgWVlZWSIsTExMOiJNTU1NIEQsIFlZWVkgTFQiLExMTEw6ImRkZGQsIE1NTU0gRCwgWVlZWSBMVCJ9LGxvbmdEYXRlRm9ybWF0OmZ1bmN0aW9uKGtleSl7dmFyIG91dHB1dD10aGlzLl9sb25nRGF0ZUZvcm1hdFtrZXldO3JldHVybiFvdXRwdXQmJnRoaXMuX2xvbmdEYXRlRm9ybWF0W2tleS50b1VwcGVyQ2FzZSgpXSYmKG91dHB1dD10aGlzLl9sb25nRGF0ZUZvcm1hdFtrZXkudG9VcHBlckNhc2UoKV0ucmVwbGFjZSgvTU1NTXxNTXxERHxkZGRkL2csZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsLnNsaWNlKDEpfSksdGhpcy5fbG9uZ0RhdGVGb3JtYXRba2V5XT1vdXRwdXQpLG91dHB1dH0saXNQTTpmdW5jdGlvbihpbnB1dCl7cmV0dXJuInAiPT09KGlucHV0KyIiKS50b0xvd2VyQ2FzZSgpLmNoYXJBdCgwKX0sX21lcmlkaWVtUGFyc2U6L1thcF1cLj9tP1wuPy9pLG1lcmlkaWVtOmZ1bmN0aW9uKGhvdXJzLG1pbnV0ZXMsaXNMb3dlcil7cmV0dXJuIGhvdXJzPjExP2lzTG93ZXI/InBtIjoiUE0iOmlzTG93ZXI/ImFtIjoiQU0ifSxfY2FsZW5kYXI6e3NhbWVEYXk6IltUb2RheSBhdF0gTFQiLG5leHREYXk6IltUb21vcnJvdyBhdF0gTFQiLG5leHRXZWVrOiJkZGRkIFthdF0gTFQiLGxhc3REYXk6IltZZXN0ZXJkYXkgYXRdIExUIixsYXN0V2VlazoiW0xhc3RdIGRkZGQgW2F0XSBMVCIsc2FtZUVsc2U6IkwifSxjYWxlbmRhcjpmdW5jdGlvbihrZXksbW9tKXt2YXIgb3V0cHV0PXRoaXMuX2NhbGVuZGFyW2tleV07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIG91dHB1dD9vdXRwdXQuYXBwbHkobW9tKTpvdXRwdXR9LF9yZWxhdGl2ZVRpbWU6e2Z1dHVyZToiaW4gJXMiLHBhc3Q6IiVzIGFnbyIsczoiYSBmZXcgc2Vjb25kcyIsbToiYSBtaW51dGUiLG1tOiIlZCBtaW51dGVzIixoOiJhbiBob3VyIixoaDoiJWQgaG91cnMiLGQ6ImEgZGF5IixkZDoiJWQgZGF5cyIsTToiYSBtb250aCIsTU06IiVkIG1vbnRocyIseToiYSB5ZWFyIix5eToiJWQgeWVhcnMifSxyZWxhdGl2ZVRpbWU6ZnVuY3Rpb24obnVtYmVyLHdpdGhvdXRTdWZmaXgsc3RyaW5nLGlzRnV0dXJlKXt2YXIgb3V0cHV0PXRoaXMuX3JlbGF0aXZlVGltZVtzdHJpbmddO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBvdXRwdXQ/b3V0cHV0KG51bWJlcix3aXRob3V0U3VmZml4LHN0cmluZyxpc0Z1dHVyZSk6b3V0cHV0LnJlcGxhY2UoLyVkL2ksbnVtYmVyKX0scGFzdEZ1dHVyZTpmdW5jdGlvbihkaWZmLG91dHB1dCl7dmFyIGZvcm1hdD10aGlzLl9yZWxhdGl2ZVRpbWVbZGlmZj4wPyJmdXR1cmUiOiJwYXN0Il07cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGZvcm1hdD9mb3JtYXQob3V0cHV0KTpmb3JtYXQucmVwbGFjZSgvJXMvaSxvdXRwdXQpfSxvcmRpbmFsOmZ1bmN0aW9uKG51bWJlcil7cmV0dXJuIHRoaXMuX29yZGluYWwucmVwbGFjZSgiJWQiLG51bWJlcil9LF9vcmRpbmFsOiIlZCIscHJlcGFyc2U6ZnVuY3Rpb24oc3RyaW5nKXtyZXR1cm4gc3RyaW5nfSxwb3N0Zm9ybWF0OmZ1bmN0aW9uKHN0cmluZyl7cmV0dXJuIHN0cmluZ30sd2VlazpmdW5jdGlvbihtb20pe3JldHVybiB3ZWVrT2ZZZWFyKG1vbSx0aGlzLl93ZWVrLmRvdyx0aGlzLl93ZWVrLmRveSkud2Vla30sX3dlZWs6e2RvdzowLGRveTo2fSxfaW52YWxpZERhdGU6IkludmFsaWQgZGF0ZSIsaW52YWxpZERhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW52YWxpZERhdGV9fSksbW9tZW50PWZ1bmN0aW9uKGlucHV0LGZvcm1hdCxsb2NhbGUsc3RyaWN0KXt2YXIgYztyZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiBsb2NhbGUmJihzdHJpY3Q9bG9jYWxlLGxvY2FsZT11bmRlZmluZWQpLGM9e30sYy5faXNBTW9tZW50T2JqZWN0PSEwLGMuX2k9aW5wdXQsYy5fZj1mb3JtYXQsYy5fbD1sb2NhbGUsYy5fc3RyaWN0PXN0cmljdCxjLl9pc1VUQz0hMSxjLl9wZj1kZWZhdWx0UGFyc2luZ0ZsYWdzKCksbWFrZU1vbWVudChjKX0sbW9tZW50LnN1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5ncz0hMSxtb21lbnQuY3JlYXRlRnJvbUlucHV0RmFsbGJhY2s9ZGVwcmVjYXRlKCJtb21lbnQgY29uc3RydWN0aW9uIGZhbGxzIGJhY2sgdG8ganMgRGF0ZS4gVGhpcyBpcyBkaXNjb3VyYWdlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHVwY29taW5nIG1ham9yIHJlbGVhc2UuIFBsZWFzZSByZWZlciB0byBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMTQwNyBmb3IgbW9yZSBpbmZvLiIsZnVuY3Rpb24oY29uZmlnKXtjb25maWcuX2Q9bmV3IERhdGUoY29uZmlnLl9pKX0pLG1vbWVudC5taW49ZnVuY3Rpb24oKXt2YXIgYXJncz1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtyZXR1cm4gcGlja0J5KCJpc0JlZm9yZSIsYXJncyl9LG1vbWVudC5tYXg9ZnVuY3Rpb24oKXt2YXIgYXJncz1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtyZXR1cm4gcGlja0J5KCJpc0FmdGVyIixhcmdzKX0sbW9tZW50LnV0Yz1mdW5jdGlvbihpbnB1dCxmb3JtYXQsbG9jYWxlLHN0cmljdCl7dmFyIGM7cmV0dXJuImJvb2xlYW4iPT10eXBlb2YgbG9jYWxlJiYoc3RyaWN0PWxvY2FsZSxsb2NhbGU9dW5kZWZpbmVkKSxjPXt9LGMuX2lzQU1vbWVudE9iamVjdD0hMCxjLl91c2VVVEM9ITAsYy5faXNVVEM9ITAsYy5fbD1sb2NhbGUsYy5faT1pbnB1dCxjLl9mPWZvcm1hdCxjLl9zdHJpY3Q9c3RyaWN0LGMuX3BmPWRlZmF1bHRQYXJzaW5nRmxhZ3MoKSxtYWtlTW9tZW50KGMpLnV0YygpfSxtb21lbnQudW5peD1mdW5jdGlvbihpbnB1dCl7cmV0dXJuIG1vbWVudCgxZTMqaW5wdXQpfSxtb21lbnQuZHVyYXRpb249ZnVuY3Rpb24oaW5wdXQsa2V5KXt2YXIgc2lnbixyZXQscGFyc2VJc28sZGlmZlJlcyxkdXJhdGlvbj1pbnB1dCxtYXRjaD1udWxsO3JldHVybiBtb21lbnQuaXNEdXJhdGlvbihpbnB1dCk/ZHVyYXRpb249e21zOmlucHV0Ll9taWxsaXNlY29uZHMsZDppbnB1dC5fZGF5cyxNOmlucHV0Ll9tb250aHN9OiJudW1iZXIiPT10eXBlb2YgaW5wdXQ/KGR1cmF0aW9uPXt9LGtleT9kdXJhdGlvbltrZXldPWlucHV0OmR1cmF0aW9uLm1pbGxpc2Vjb25kcz1pbnB1dCk6KG1hdGNoPWFzcE5ldFRpbWVTcGFuSnNvblJlZ2V4LmV4ZWMoaW5wdXQpKT8oc2lnbj0iLSI9PT1tYXRjaFsxXT8tMToxLGR1cmF0aW9uPXt5OjAsZDp0b0ludChtYXRjaFtEQVRFXSkqc2lnbixoOnRvSW50KG1hdGNoW0hPVVJdKSpzaWduLG06dG9JbnQobWF0Y2hbTUlOVVRFXSkqc2lnbixzOnRvSW50KG1hdGNoW1NFQ09ORF0pKnNpZ24sbXM6dG9JbnQobWF0Y2hbTUlMTElTRUNPTkRdKSpzaWdufSk6KG1hdGNoPWlzb0R1cmF0aW9uUmVnZXguZXhlYyhpbnB1dCkpPyhzaWduPSItIj09PW1hdGNoWzFdPy0xOjEscGFyc2VJc289ZnVuY3Rpb24oaW5wKXt2YXIgcmVzPWlucCYmcGFyc2VGbG9hdChpbnAucmVwbGFjZSgiLCIsIi4iKSk7cmV0dXJuKGlzTmFOKHJlcyk/MDpyZXMpKnNpZ259LGR1cmF0aW9uPXt5OnBhcnNlSXNvKG1hdGNoWzJdKSxNOnBhcnNlSXNvKG1hdGNoWzNdKSxkOnBhcnNlSXNvKG1hdGNoWzRdKSxoOnBhcnNlSXNvKG1hdGNoWzVdKSxtOnBhcnNlSXNvKG1hdGNoWzZdKSxzOnBhcnNlSXNvKG1hdGNoWzddKSx3OnBhcnNlSXNvKG1hdGNoWzhdKX0pOiJvYmplY3QiPT10eXBlb2YgZHVyYXRpb24mJigiZnJvbSJpbiBkdXJhdGlvbnx8InRvImluIGR1cmF0aW9uKSYmKGRpZmZSZXM9bW9tZW50c0RpZmZlcmVuY2UobW9tZW50KGR1cmF0aW9uLmZyb20pLG1vbWVudChkdXJhdGlvbi50bykpLGR1cmF0aW9uPXt9LGR1cmF0aW9uLm1zPWRpZmZSZXMubWlsbGlzZWNvbmRzLGR1cmF0aW9uLk09ZGlmZlJlcy5tb250aHMpLHJldD1uZXcgRHVyYXRpb24oZHVyYXRpb24pLG1vbWVudC5pc0R1cmF0aW9uKGlucHV0KSYmaGFzT3duUHJvcChpbnB1dCwiX2xvY2FsZSIpJiYocmV0Ll9sb2NhbGU9aW5wdXQuX2xvY2FsZSkscmV0fSxtb21lbnQudmVyc2lvbj1WRVJTSU9OLG1vbWVudC5kZWZhdWx0Rm9ybWF0PWlzb0Zvcm1hdCxtb21lbnQuSVNPXzg2MDE9ZnVuY3Rpb24oKXt9LG1vbWVudC5tb21lbnRQcm9wZXJ0aWVzPW1vbWVudFByb3BlcnRpZXMsbW9tZW50LnVwZGF0ZU9mZnNldD1mdW5jdGlvbigpe30sbW9tZW50LnJlbGF0aXZlVGltZVRocmVzaG9sZD1mdW5jdGlvbih0aHJlc2hvbGQsbGltaXQpe3JldHVybiByZWxhdGl2ZVRpbWVUaHJlc2hvbGRzW3RocmVzaG9sZF09PT11bmRlZmluZWQ/ITE6bGltaXQ9PT11bmRlZmluZWQ/cmVsYXRpdmVUaW1lVGhyZXNob2xkc1t0aHJlc2hvbGRdOihyZWxhdGl2ZVRpbWVUaHJlc2hvbGRzW3RocmVzaG9sZF09bGltaXQsITApfSxtb21lbnQubGFuZz1kZXByZWNhdGUoIm1vbWVudC5sYW5nIGlzIGRlcHJlY2F0ZWQuIFVzZSBtb21lbnQubG9jYWxlIGluc3RlYWQuIixmdW5jdGlvbihrZXksdmFsdWUpe3JldHVybiBtb21lbnQubG9jYWxlKGtleSx2YWx1ZSl9KSxtb21lbnQubG9jYWxlPWZ1bmN0aW9uKGtleSx2YWx1ZXMpe3ZhciBkYXRhO3JldHVybiBrZXkmJihkYXRhPSJ1bmRlZmluZWQiIT10eXBlb2YgdmFsdWVzP21vbWVudC5kZWZpbmVMb2NhbGUoa2V5LHZhbHVlcyk6bW9tZW50LmxvY2FsZURhdGEoa2V5KSxkYXRhJiYobW9tZW50LmR1cmF0aW9uLl9sb2NhbGU9bW9tZW50Ll9sb2NhbGU9ZGF0YSkpLG1vbWVudC5fbG9jYWxlLl9hYmJyfSxtb21lbnQuZGVmaW5lTG9jYWxlPWZ1bmN0aW9uKG5hbWUsdmFsdWVzKXtyZXR1cm4gbnVsbCE9PXZhbHVlcz8odmFsdWVzLmFiYnI9bmFtZSxsb2NhbGVzW25hbWVdfHwobG9jYWxlc1tuYW1lXT1uZXcgTG9jYWxlKSxsb2NhbGVzW25hbWVdLnNldCh2YWx1ZXMpLG1vbWVudC5sb2NhbGUobmFtZSksbG9jYWxlc1tuYW1lXSk6KGRlbGV0ZSBsb2NhbGVzW25hbWVdLG51bGwpfSxtb21lbnQubGFuZ0RhdGE9ZGVwcmVjYXRlKCJtb21lbnQubGFuZ0RhdGEgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbWVudC5sb2NhbGVEYXRhIGluc3RlYWQuIixmdW5jdGlvbihrZXkpe3JldHVybiBtb21lbnQubG9jYWxlRGF0YShrZXkpfSksbW9tZW50LmxvY2FsZURhdGE9ZnVuY3Rpb24oa2V5KXt2YXIgbG9jYWxlO2lmKGtleSYma2V5Ll9sb2NhbGUmJmtleS5fbG9jYWxlLl9hYmJyJiYoa2V5PWtleS5fbG9jYWxlLl9hYmJyKSwha2V5KXJldHVybiBtb21lbnQuX2xvY2FsZTtpZighaXNBcnJheShrZXkpKXtpZihsb2NhbGU9bG9hZExvY2FsZShrZXkpKXJldHVybiBsb2NhbGU7a2V5PVtrZXldfXJldHVybiBjaG9vc2VMb2NhbGUoa2V5KX0sbW9tZW50LmlzTW9tZW50PWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiBpbnN0YW5jZW9mIE1vbWVudHx8bnVsbCE9b2JqJiZoYXNPd25Qcm9wKG9iaiwiX2lzQU1vbWVudE9iamVjdCIpfSxtb21lbnQuaXNEdXJhdGlvbj1mdW5jdGlvbihvYmope3JldHVybiBvYmogaW5zdGFuY2VvZiBEdXJhdGlvbn07Zm9yKGk9bGlzdHMubGVuZ3RoLTE7aT49MDstLWkpbWFrZUxpc3QobGlzdHNbaV0pO21vbWVudC5ub3JtYWxpemVVbml0cz1mdW5jdGlvbih1bml0cyl7cmV0dXJuIG5vcm1hbGl6ZVVuaXRzKHVuaXRzKX0sbW9tZW50LmludmFsaWQ9ZnVuY3Rpb24oZmxhZ3Mpe3ZhciBtPW1vbWVudC51dGMoMC8wKTtyZXR1cm4gbnVsbCE9ZmxhZ3M/ZXh0ZW5kKG0uX3BmLGZsYWdzKTptLl9wZi51c2VySW52YWxpZGF0ZWQ9ITAsbX0sbW9tZW50LnBhcnNlWm9uZT1mdW5jdGlvbigpe3JldHVybiBtb21lbnQuYXBwbHkobnVsbCxhcmd1bWVudHMpLnBhcnNlWm9uZSgpfSxtb21lbnQucGFyc2VUd29EaWdpdFllYXI9ZnVuY3Rpb24oaW5wdXQpe3JldHVybiB0b0ludChpbnB1dCkrKHRvSW50KGlucHV0KT42OD8xOTAwOjJlMyl9LGV4dGVuZChtb21lbnQuZm49TW9tZW50LnByb3RvdHlwZSx7Y2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbW9tZW50KHRoaXMpfSx2YWx1ZU9mOmZ1bmN0aW9uKCl7cmV0dXJuK3RoaXMuX2QrNmU0Kih0aGlzLl9vZmZzZXR8fDApfSx1bml4OmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguZmxvb3IoK3RoaXMvMWUzKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmxvY2FsZSgiZW4iKS5mb3JtYXQoImRkZCBNTU0gREQgWVlZWSBISDptbTpzcyBbR01UXVpaIil9LHRvRGF0ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vZmZzZXQ/bmV3IERhdGUoK3RoaXMpOnRoaXMuX2R9LHRvSVNPU3RyaW5nOmZ1bmN0aW9uKCl7dmFyIG09bW9tZW50KHRoaXMpLnV0YygpO3JldHVybiAwPG0ueWVhcigpJiZtLnllYXIoKTw9OTk5OT9mb3JtYXRNb21lbnQobSwiWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1taXSIpOmZvcm1hdE1vbWVudChtLCJZWVlZWVktTU0tRERbVF1ISDptbTpzcy5TU1NbWl0iKX0sdG9BcnJheTpmdW5jdGlvbigpe3ZhciBtPXRoaXM7cmV0dXJuW20ueWVhcigpLG0ubW9udGgoKSxtLmRhdGUoKSxtLmhvdXJzKCksbS5taW51dGVzKCksbS5zZWNvbmRzKCksbS5taWxsaXNlY29uZHMoKV19LGlzVmFsaWQ6ZnVuY3Rpb24oKXtyZXR1cm4gaXNWYWxpZCh0aGlzKX0saXNEU1RTaGlmdGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2E/dGhpcy5pc1ZhbGlkKCkmJmNvbXBhcmVBcnJheXModGhpcy5fYSwodGhpcy5faXNVVEM/bW9tZW50LnV0Yyh0aGlzLl9hKTptb21lbnQodGhpcy5fYSkpLnRvQXJyYXkoKSk+MDohMX0scGFyc2luZ0ZsYWdzOmZ1bmN0aW9uKCl7cmV0dXJuIGV4dGVuZCh7fSx0aGlzLl9wZil9LGludmFsaWRBdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wZi5vdmVyZmxvd30sdXRjOmZ1bmN0aW9uKGtlZXBMb2NhbFRpbWUpe3JldHVybiB0aGlzLnpvbmUoMCxrZWVwTG9jYWxUaW1lKX0sbG9jYWw6ZnVuY3Rpb24oa2VlcExvY2FsVGltZSl7cmV0dXJuIHRoaXMuX2lzVVRDJiYodGhpcy56b25lKDAsa2VlcExvY2FsVGltZSksdGhpcy5faXNVVEM9ITEsa2VlcExvY2FsVGltZSYmdGhpcy5hZGQodGhpcy5fZGF0ZVR6T2Zmc2V0KCksIm0iKSksdGhpc30sZm9ybWF0OmZ1bmN0aW9uKGlucHV0U3RyaW5nKXt2YXIgb3V0cHV0PWZvcm1hdE1vbWVudCh0aGlzLGlucHV0U3RyaW5nfHxtb21lbnQuZGVmYXVsdEZvcm1hdCk7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQob3V0cHV0KX0sYWRkOmNyZWF0ZUFkZGVyKDEsImFkZCIpLHN1YnRyYWN0OmNyZWF0ZUFkZGVyKC0xLCJzdWJ0cmFjdCIpLGRpZmY6ZnVuY3Rpb24oaW5wdXQsdW5pdHMsYXNGbG9hdCl7dmFyIGRpZmYsb3V0cHV0LGRheXNBZGp1c3QsdGhhdD1tYWtlQXMoaW5wdXQsdGhpcyksem9uZURpZmY9NmU0Kih0aGlzLnpvbmUoKS10aGF0LnpvbmUoKSk7cmV0dXJuIHVuaXRzPW5vcm1hbGl6ZVVuaXRzKHVuaXRzKSwieWVhciI9PT11bml0c3x8Im1vbnRoIj09PXVuaXRzPyhkaWZmPTQzMmU1Kih0aGlzLmRheXNJbk1vbnRoKCkrdGhhdC5kYXlzSW5Nb250aCgpKSxvdXRwdXQ9MTIqKHRoaXMueWVhcigpLXRoYXQueWVhcigpKSsodGhpcy5tb250aCgpLXRoYXQubW9udGgoKSksZGF5c0FkanVzdD10aGlzLW1vbWVudCh0aGlzKS5zdGFydE9mKCJtb250aCIpLSh0aGF0LW1vbWVudCh0aGF0KS5zdGFydE9mKCJtb250aCIpKSxkYXlzQWRqdXN0LT02ZTQqKHRoaXMuem9uZSgpLW1vbWVudCh0aGlzKS5zdGFydE9mKCJtb250aCIpLnpvbmUoKS0odGhhdC56b25lKCktbW9tZW50KHRoYXQpLnN0YXJ0T2YoIm1vbnRoIikuem9uZSgpKSksb3V0cHV0Kz1kYXlzQWRqdXN0L2RpZmYsInllYXIiPT09dW5pdHMmJihvdXRwdXQvPTEyKSk6KGRpZmY9dGhpcy10aGF0LG91dHB1dD0ic2Vjb25kIj09PXVuaXRzP2RpZmYvMWUzOiJtaW51dGUiPT09dW5pdHM/ZGlmZi82ZTQ6ImhvdXIiPT09dW5pdHM/ZGlmZi8zNmU1OiJkYXkiPT09dW5pdHM/KGRpZmYtem9uZURpZmYpLzg2NGU1OiJ3ZWVrIj09PXVuaXRzPyhkaWZmLXpvbmVEaWZmKS82MDQ4ZTU6ZGlmZiksYXNGbG9hdD9vdXRwdXQ6YWJzUm91bmQob3V0cHV0KX0sZnJvbTpmdW5jdGlvbih0aW1lLHdpdGhvdXRTdWZmaXgpe3JldHVybiBtb21lbnQuZHVyYXRpb24oe3RvOnRoaXMsZnJvbTp0aW1lfSkubG9jYWxlKHRoaXMubG9jYWxlKCkpLmh1bWFuaXplKCF3aXRob3V0U3VmZml4KX0sZnJvbU5vdzpmdW5jdGlvbih3aXRob3V0U3VmZml4KXtyZXR1cm4gdGhpcy5mcm9tKG1vbWVudCgpLHdpdGhvdXRTdWZmaXgpfSxjYWxlbmRhcjpmdW5jdGlvbih0aW1lKXt2YXIgbm93PXRpbWV8fG1vbWVudCgpLHNvZD1tYWtlQXMobm93LHRoaXMpLnN0YXJ0T2YoImRheSIpLGRpZmY9dGhpcy5kaWZmKHNvZCwiZGF5cyIsITApLGZvcm1hdD0tNj5kaWZmPyJzYW1lRWxzZSI6LTE+ZGlmZj8ibGFzdFdlZWsiOjA+ZGlmZj8ibGFzdERheSI6MT5kaWZmPyJzYW1lRGF5IjoyPmRpZmY/Im5leHREYXkiOjc+ZGlmZj8ibmV4dFdlZWsiOiJzYW1lRWxzZSI7cmV0dXJuIHRoaXMuZm9ybWF0KHRoaXMubG9jYWxlRGF0YSgpLmNhbGVuZGFyKGZvcm1hdCx0aGlzKSl9LGlzTGVhcFllYXI6ZnVuY3Rpb24oKXtyZXR1cm4gaXNMZWFwWWVhcih0aGlzLnllYXIoKSl9LGlzRFNUOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuem9uZSgpPHRoaXMuY2xvbmUoKS5tb250aCgwKS56b25lKCl8fHRoaXMuem9uZSgpPHRoaXMuY2xvbmUoKS5tb250aCg1KS56b25lKCl9LGRheTpmdW5jdGlvbihpbnB1dCl7dmFyIGRheT10aGlzLl9pc1VUQz90aGlzLl9kLmdldFVUQ0RheSgpOnRoaXMuX2QuZ2V0RGF5KCk7cmV0dXJuIG51bGwhPWlucHV0PyhpbnB1dD1wYXJzZVdlZWtkYXkoaW5wdXQsdGhpcy5sb2NhbGVEYXRhKCkpLHRoaXMuYWRkKGlucHV0LWRheSwiZCIpKTpkYXl9LG1vbnRoOm1ha2VBY2Nlc3NvcigiTW9udGgiLCEwKSxzdGFydE9mOmZ1bmN0aW9uKHVuaXRzKXtzd2l0Y2godW5pdHM9bm9ybWFsaXplVW5pdHModW5pdHMpKXtjYXNlInllYXIiOnRoaXMubW9udGgoMCk7Y2FzZSJxdWFydGVyIjpjYXNlIm1vbnRoIjp0aGlzLmRhdGUoMSk7Y2FzZSJ3ZWVrIjpjYXNlImlzb1dlZWsiOmNhc2UiZGF5Ijp0aGlzLmhvdXJzKDApO2Nhc2UiaG91ciI6dGhpcy5taW51dGVzKDApO2Nhc2UibWludXRlIjp0aGlzLnNlY29uZHMoMCk7Y2FzZSJzZWNvbmQiOnRoaXMubWlsbGlzZWNvbmRzKDApfXJldHVybiJ3ZWVrIj09PXVuaXRzP3RoaXMud2Vla2RheSgwKToiaXNvV2VlayI9PT11bml0cyYmdGhpcy5pc29XZWVrZGF5KDEpLCJxdWFydGVyIj09PXVuaXRzJiZ0aGlzLm1vbnRoKDMqTWF0aC5mbG9vcih0aGlzLm1vbnRoKCkvMykpLHRoaXN9LGVuZE9mOmZ1bmN0aW9uKHVuaXRzKXtyZXR1cm4gdW5pdHM9bm9ybWFsaXplVW5pdHModW5pdHMpLHRoaXMuc3RhcnRPZih1bml0cykuYWRkKDEsImlzb1dlZWsiPT09dW5pdHM/IndlZWsiOnVuaXRzKS5zdWJ0cmFjdCgxLCJtcyIpfSxpc0FmdGVyOmZ1bmN0aW9uKGlucHV0LHVuaXRzKXtyZXR1cm4gdW5pdHM9bm9ybWFsaXplVW5pdHMoInVuZGVmaW5lZCIhPXR5cGVvZiB1bml0cz91bml0czoibWlsbGlzZWNvbmQiKSwibWlsbGlzZWNvbmQiPT09dW5pdHM/KGlucHV0PW1vbWVudC5pc01vbWVudChpbnB1dCk/aW5wdXQ6bW9tZW50KGlucHV0KSwrdGhpcz4raW5wdXQpOit0aGlzLmNsb25lKCkuc3RhcnRPZih1bml0cyk+K21vbWVudChpbnB1dCkuc3RhcnRPZih1bml0cyl9LGlzQmVmb3JlOmZ1bmN0aW9uKGlucHV0LHVuaXRzKXtyZXR1cm4gdW5pdHM9bm9ybWFsaXplVW5pdHMoInVuZGVmaW5lZCIhPXR5cGVvZiB1bml0cz91bml0czoibWlsbGlzZWNvbmQiKSwibWlsbGlzZWNvbmQiPT09dW5pdHM/KGlucHV0PW1vbWVudC5pc01vbWVudChpbnB1dCk/aW5wdXQ6bW9tZW50KGlucHV0KSwraW5wdXQ+K3RoaXMpOit0aGlzLmNsb25lKCkuc3RhcnRPZih1bml0cyk8K21vbWVudChpbnB1dCkuc3RhcnRPZih1bml0cyl9LGlzU2FtZTpmdW5jdGlvbihpbnB1dCx1bml0cyl7cmV0dXJuIHVuaXRzPW5vcm1hbGl6ZVVuaXRzKHVuaXRzfHwibWlsbGlzZWNvbmQiKSwibWlsbGlzZWNvbmQiPT09dW5pdHM/KGlucHV0PW1vbWVudC5pc01vbWVudChpbnB1dCk/aW5wdXQ6bW9tZW50KGlucHV0KSwrdGhpcz09PStpbnB1dCk6K3RoaXMuY2xvbmUoKS5zdGFydE9mKHVuaXRzKT09PSttYWtlQXMoaW5wdXQsdGhpcykuc3RhcnRPZih1bml0cyl9LG1pbjpkZXByZWNhdGUoIm1vbWVudCgpLm1pbiBpcyBkZXByZWNhdGVkLCB1c2UgbW9tZW50Lm1pbiBpbnN0ZWFkLiBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMTU0OCIsZnVuY3Rpb24ob3RoZXIpe3JldHVybiBvdGhlcj1tb21lbnQuYXBwbHkobnVsbCxhcmd1bWVudHMpLHRoaXM+b3RoZXI/dGhpczpvdGhlcn0pLG1heDpkZXByZWNhdGUoIm1vbWVudCgpLm1heCBpcyBkZXByZWNhdGVkLCB1c2UgbW9tZW50Lm1heCBpbnN0ZWFkLiBodHRwczovL2dpdGh1Yi5jb20vbW9tZW50L21vbWVudC9pc3N1ZXMvMTU0OCIsZnVuY3Rpb24ob3RoZXIpe3JldHVybiBvdGhlcj1tb21lbnQuYXBwbHkobnVsbCxhcmd1bWVudHMpLG90aGVyPnRoaXM/dGhpczpvdGhlcn0pLHpvbmU6ZnVuY3Rpb24oaW5wdXQsa2VlcExvY2FsVGltZSl7dmFyIGxvY2FsQWRqdXN0LG9mZnNldD10aGlzLl9vZmZzZXR8fDA7cmV0dXJuIG51bGw9PWlucHV0P3RoaXMuX2lzVVRDP29mZnNldDp0aGlzLl9kYXRlVHpPZmZzZXQoKTooInN0cmluZyI9PXR5cGVvZiBpbnB1dCYmKGlucHV0PXRpbWV6b25lTWludXRlc0Zyb21TdHJpbmcoaW5wdXQpKSxNYXRoLmFicyhpbnB1dCk8MTYmJihpbnB1dD02MCppbnB1dCksIXRoaXMuX2lzVVRDJiZrZWVwTG9jYWxUaW1lJiYobG9jYWxBZGp1c3Q9dGhpcy5fZGF0ZVR6T2Zmc2V0KCkpLHRoaXMuX29mZnNldD1pbnB1dCx0aGlzLl9pc1VUQz0hMCxudWxsIT1sb2NhbEFkanVzdCYmdGhpcy5zdWJ0cmFjdChsb2NhbEFkanVzdCwibSIpLG9mZnNldCE9PWlucHV0JiYoIWtlZXBMb2NhbFRpbWV8fHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M/YWRkT3JTdWJ0cmFjdER1cmF0aW9uRnJvbU1vbWVudCh0aGlzLG1vbWVudC5kdXJhdGlvbihvZmZzZXQtaW5wdXQsIm0iKSwxLCExKTp0aGlzLl9jaGFuZ2VJblByb2dyZXNzfHwodGhpcy5fY2hhbmdlSW5Qcm9ncmVzcz0hMCxtb21lbnQudXBkYXRlT2Zmc2V0KHRoaXMsITApLHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M9bnVsbCkpLHRoaXMpfSx6b25lQWJicjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1VUQz8iVVRDIjoiIn0sem9uZU5hbWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNVVEM/IkNvb3JkaW5hdGVkIFVuaXZlcnNhbCBUaW1lIjoiIn0scGFyc2Vab25lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R6bT90aGlzLnpvbmUodGhpcy5fdHptKToic3RyaW5nIj09dHlwZW9mIHRoaXMuX2kmJnRoaXMuem9uZSh0aGlzLl9pKSx0aGlzfSxoYXNBbGlnbmVkSG91ck9mZnNldDpmdW5jdGlvbihpbnB1dCl7cmV0dXJuIGlucHV0PWlucHV0P21vbWVudChpbnB1dCkuem9uZSgpOjAsKHRoaXMuem9uZSgpLWlucHV0KSU2MD09PTB9LGRheXNJbk1vbnRoOmZ1bmN0aW9uKCl7cmV0dXJuIGRheXNJbk1vbnRoKHRoaXMueWVhcigpLHRoaXMubW9udGgoKSl9LGRheU9mWWVhcjpmdW5jdGlvbihpbnB1dCl7dmFyIGRheU9mWWVhcj1yb3VuZCgobW9tZW50KHRoaXMpLnN0YXJ0T2YoImRheSIpLW1vbWVudCh0aGlzKS5zdGFydE9mKCJ5ZWFyIikpLzg2NGU1KSsxOwpyZXR1cm4gbnVsbD09aW5wdXQ/ZGF5T2ZZZWFyOnRoaXMuYWRkKGlucHV0LWRheU9mWWVhciwiZCIpfSxxdWFydGVyOmZ1bmN0aW9uKGlucHV0KXtyZXR1cm4gbnVsbD09aW5wdXQ/TWF0aC5jZWlsKCh0aGlzLm1vbnRoKCkrMSkvMyk6dGhpcy5tb250aCgzKihpbnB1dC0xKSt0aGlzLm1vbnRoKCklMyl9LHdlZWtZZWFyOmZ1bmN0aW9uKGlucHV0KXt2YXIgeWVhcj13ZWVrT2ZZZWFyKHRoaXMsdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWsuZG93LHRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRveSkueWVhcjtyZXR1cm4gbnVsbD09aW5wdXQ/eWVhcjp0aGlzLmFkZChpbnB1dC15ZWFyLCJ5Iil9LGlzb1dlZWtZZWFyOmZ1bmN0aW9uKGlucHV0KXt2YXIgeWVhcj13ZWVrT2ZZZWFyKHRoaXMsMSw0KS55ZWFyO3JldHVybiBudWxsPT1pbnB1dD95ZWFyOnRoaXMuYWRkKGlucHV0LXllYXIsInkiKX0sd2VlazpmdW5jdGlvbihpbnB1dCl7dmFyIHdlZWs9dGhpcy5sb2NhbGVEYXRhKCkud2Vlayh0aGlzKTtyZXR1cm4gbnVsbD09aW5wdXQ/d2Vlazp0aGlzLmFkZCg3KihpbnB1dC13ZWVrKSwiZCIpfSxpc29XZWVrOmZ1bmN0aW9uKGlucHV0KXt2YXIgd2Vlaz13ZWVrT2ZZZWFyKHRoaXMsMSw0KS53ZWVrO3JldHVybiBudWxsPT1pbnB1dD93ZWVrOnRoaXMuYWRkKDcqKGlucHV0LXdlZWspLCJkIil9LHdlZWtkYXk6ZnVuY3Rpb24oaW5wdXQpe3ZhciB3ZWVrZGF5PSh0aGlzLmRheSgpKzctdGhpcy5sb2NhbGVEYXRhKCkuX3dlZWsuZG93KSU3O3JldHVybiBudWxsPT1pbnB1dD93ZWVrZGF5OnRoaXMuYWRkKGlucHV0LXdlZWtkYXksImQiKX0saXNvV2Vla2RheTpmdW5jdGlvbihpbnB1dCl7cmV0dXJuIG51bGw9PWlucHV0P3RoaXMuZGF5KCl8fDc6dGhpcy5kYXkodGhpcy5kYXkoKSU3P2lucHV0OmlucHV0LTcpfSxpc29XZWVrc0luWWVhcjpmdW5jdGlvbigpe3JldHVybiB3ZWVrc0luWWVhcih0aGlzLnllYXIoKSwxLDQpfSx3ZWVrc0luWWVhcjpmdW5jdGlvbigpe3ZhciB3ZWVrSW5mbz10aGlzLmxvY2FsZURhdGEoKS5fd2VlaztyZXR1cm4gd2Vla3NJblllYXIodGhpcy55ZWFyKCksd2Vla0luZm8uZG93LHdlZWtJbmZvLmRveSl9LGdldDpmdW5jdGlvbih1bml0cyl7cmV0dXJuIHVuaXRzPW5vcm1hbGl6ZVVuaXRzKHVuaXRzKSx0aGlzW3VuaXRzXSgpfSxzZXQ6ZnVuY3Rpb24odW5pdHMsdmFsdWUpe3JldHVybiB1bml0cz1ub3JtYWxpemVVbml0cyh1bml0cyksImZ1bmN0aW9uIj09dHlwZW9mIHRoaXNbdW5pdHNdJiZ0aGlzW3VuaXRzXSh2YWx1ZSksdGhpc30sbG9jYWxlOmZ1bmN0aW9uKGtleSl7dmFyIG5ld0xvY2FsZURhdGE7cmV0dXJuIGtleT09PXVuZGVmaW5lZD90aGlzLl9sb2NhbGUuX2FiYnI6KG5ld0xvY2FsZURhdGE9bW9tZW50LmxvY2FsZURhdGEoa2V5KSxudWxsIT1uZXdMb2NhbGVEYXRhJiYodGhpcy5fbG9jYWxlPW5ld0xvY2FsZURhdGEpLHRoaXMpfSxsYW5nOmRlcHJlY2F0ZSgibW9tZW50KCkubGFuZygpIGlzIGRlcHJlY2F0ZWQuIFVzZSBtb21lbnQoKS5sb2NhbGVEYXRhKCkgaW5zdGVhZC4iLGZ1bmN0aW9uKGtleSl7cmV0dXJuIGtleT09PXVuZGVmaW5lZD90aGlzLmxvY2FsZURhdGEoKTp0aGlzLmxvY2FsZShrZXkpfSksbG9jYWxlRGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2NhbGV9LF9kYXRlVHpPZmZzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMTUqTWF0aC5yb3VuZCh0aGlzLl9kLmdldFRpbWV6b25lT2Zmc2V0KCkvMTUpfX0pLG1vbWVudC5mbi5taWxsaXNlY29uZD1tb21lbnQuZm4ubWlsbGlzZWNvbmRzPW1ha2VBY2Nlc3NvcigiTWlsbGlzZWNvbmRzIiwhMSksbW9tZW50LmZuLnNlY29uZD1tb21lbnQuZm4uc2Vjb25kcz1tYWtlQWNjZXNzb3IoIlNlY29uZHMiLCExKSxtb21lbnQuZm4ubWludXRlPW1vbWVudC5mbi5taW51dGVzPW1ha2VBY2Nlc3NvcigiTWludXRlcyIsITEpLG1vbWVudC5mbi5ob3VyPW1vbWVudC5mbi5ob3Vycz1tYWtlQWNjZXNzb3IoIkhvdXJzIiwhMCksbW9tZW50LmZuLmRhdGU9bWFrZUFjY2Vzc29yKCJEYXRlIiwhMCksbW9tZW50LmZuLmRhdGVzPWRlcHJlY2F0ZSgiZGF0ZXMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIGRhdGUgaW5zdGVhZC4iLG1ha2VBY2Nlc3NvcigiRGF0ZSIsITApKSxtb21lbnQuZm4ueWVhcj1tYWtlQWNjZXNzb3IoIkZ1bGxZZWFyIiwhMCksbW9tZW50LmZuLnllYXJzPWRlcHJlY2F0ZSgieWVhcnMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIHllYXIgaW5zdGVhZC4iLG1ha2VBY2Nlc3NvcigiRnVsbFllYXIiLCEwKSksbW9tZW50LmZuLmRheXM9bW9tZW50LmZuLmRheSxtb21lbnQuZm4ubW9udGhzPW1vbWVudC5mbi5tb250aCxtb21lbnQuZm4ud2Vla3M9bW9tZW50LmZuLndlZWssbW9tZW50LmZuLmlzb1dlZWtzPW1vbWVudC5mbi5pc29XZWVrLG1vbWVudC5mbi5xdWFydGVycz1tb21lbnQuZm4ucXVhcnRlcixtb21lbnQuZm4udG9KU09OPW1vbWVudC5mbi50b0lTT1N0cmluZyxleHRlbmQobW9tZW50LmR1cmF0aW9uLmZuPUR1cmF0aW9uLnByb3RvdHlwZSx7X2J1YmJsZTpmdW5jdGlvbigpe3ZhciBzZWNvbmRzLG1pbnV0ZXMsaG91cnMsbWlsbGlzZWNvbmRzPXRoaXMuX21pbGxpc2Vjb25kcyxkYXlzPXRoaXMuX2RheXMsbW9udGhzPXRoaXMuX21vbnRocyxkYXRhPXRoaXMuX2RhdGEseWVhcnM9MDtkYXRhLm1pbGxpc2Vjb25kcz1taWxsaXNlY29uZHMlMWUzLHNlY29uZHM9YWJzUm91bmQobWlsbGlzZWNvbmRzLzFlMyksZGF0YS5zZWNvbmRzPXNlY29uZHMlNjAsbWludXRlcz1hYnNSb3VuZChzZWNvbmRzLzYwKSxkYXRhLm1pbnV0ZXM9bWludXRlcyU2MCxob3Vycz1hYnNSb3VuZChtaW51dGVzLzYwKSxkYXRhLmhvdXJzPWhvdXJzJTI0LGRheXMrPWFic1JvdW5kKGhvdXJzLzI0KSx5ZWFycz1hYnNSb3VuZChkYXlzVG9ZZWFycyhkYXlzKSksZGF5cy09YWJzUm91bmQoeWVhcnNUb0RheXMoeWVhcnMpKSxtb250aHMrPWFic1JvdW5kKGRheXMvMzApLGRheXMlPTMwLHllYXJzKz1hYnNSb3VuZChtb250aHMvMTIpLG1vbnRocyU9MTIsZGF0YS5kYXlzPWRheXMsZGF0YS5tb250aHM9bW9udGhzLGRhdGEueWVhcnM9eWVhcnN9LGFiczpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9taWxsaXNlY29uZHM9TWF0aC5hYnModGhpcy5fbWlsbGlzZWNvbmRzKSx0aGlzLl9kYXlzPU1hdGguYWJzKHRoaXMuX2RheXMpLHRoaXMuX21vbnRocz1NYXRoLmFicyh0aGlzLl9tb250aHMpLHRoaXMuX2RhdGEubWlsbGlzZWNvbmRzPU1hdGguYWJzKHRoaXMuX2RhdGEubWlsbGlzZWNvbmRzKSx0aGlzLl9kYXRhLnNlY29uZHM9TWF0aC5hYnModGhpcy5fZGF0YS5zZWNvbmRzKSx0aGlzLl9kYXRhLm1pbnV0ZXM9TWF0aC5hYnModGhpcy5fZGF0YS5taW51dGVzKSx0aGlzLl9kYXRhLmhvdXJzPU1hdGguYWJzKHRoaXMuX2RhdGEuaG91cnMpLHRoaXMuX2RhdGEubW9udGhzPU1hdGguYWJzKHRoaXMuX2RhdGEubW9udGhzKSx0aGlzLl9kYXRhLnllYXJzPU1hdGguYWJzKHRoaXMuX2RhdGEueWVhcnMpLHRoaXN9LHdlZWtzOmZ1bmN0aW9uKCl7cmV0dXJuIGFic1JvdW5kKHRoaXMuZGF5cygpLzcpfSx2YWx1ZU9mOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21pbGxpc2Vjb25kcys4NjRlNSp0aGlzLl9kYXlzK3RoaXMuX21vbnRocyUxMioyNTkyZTYrMzE1MzZlNip0b0ludCh0aGlzLl9tb250aHMvMTIpfSxodW1hbml6ZTpmdW5jdGlvbih3aXRoU3VmZml4KXt2YXIgb3V0cHV0PXJlbGF0aXZlVGltZSh0aGlzLCF3aXRoU3VmZml4LHRoaXMubG9jYWxlRGF0YSgpKTtyZXR1cm4gd2l0aFN1ZmZpeCYmKG91dHB1dD10aGlzLmxvY2FsZURhdGEoKS5wYXN0RnV0dXJlKCt0aGlzLG91dHB1dCkpLHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQob3V0cHV0KX0sYWRkOmZ1bmN0aW9uKGlucHV0LHZhbCl7dmFyIGR1cj1tb21lbnQuZHVyYXRpb24oaW5wdXQsdmFsKTtyZXR1cm4gdGhpcy5fbWlsbGlzZWNvbmRzKz1kdXIuX21pbGxpc2Vjb25kcyx0aGlzLl9kYXlzKz1kdXIuX2RheXMsdGhpcy5fbW9udGhzKz1kdXIuX21vbnRocyx0aGlzLl9idWJibGUoKSx0aGlzfSxzdWJ0cmFjdDpmdW5jdGlvbihpbnB1dCx2YWwpe3ZhciBkdXI9bW9tZW50LmR1cmF0aW9uKGlucHV0LHZhbCk7cmV0dXJuIHRoaXMuX21pbGxpc2Vjb25kcy09ZHVyLl9taWxsaXNlY29uZHMsdGhpcy5fZGF5cy09ZHVyLl9kYXlzLHRoaXMuX21vbnRocy09ZHVyLl9tb250aHMsdGhpcy5fYnViYmxlKCksdGhpc30sZ2V0OmZ1bmN0aW9uKHVuaXRzKXtyZXR1cm4gdW5pdHM9bm9ybWFsaXplVW5pdHModW5pdHMpLHRoaXNbdW5pdHMudG9Mb3dlckNhc2UoKSsicyJdKCl9LGFzOmZ1bmN0aW9uKHVuaXRzKXt2YXIgZGF5cyxtb250aHM7aWYodW5pdHM9bm9ybWFsaXplVW5pdHModW5pdHMpLCJtb250aCI9PT11bml0c3x8InllYXIiPT09dW5pdHMpcmV0dXJuIGRheXM9dGhpcy5fZGF5cyt0aGlzLl9taWxsaXNlY29uZHMvODY0ZTUsbW9udGhzPXRoaXMuX21vbnRocysxMipkYXlzVG9ZZWFycyhkYXlzKSwibW9udGgiPT09dW5pdHM/bW9udGhzOm1vbnRocy8xMjtzd2l0Y2goZGF5cz10aGlzLl9kYXlzK3llYXJzVG9EYXlzKHRoaXMuX21vbnRocy8xMiksdW5pdHMpe2Nhc2Uid2VlayI6cmV0dXJuIGRheXMvNyt0aGlzLl9taWxsaXNlY29uZHMvNjA0OGU1O2Nhc2UiZGF5IjpyZXR1cm4gZGF5cyt0aGlzLl9taWxsaXNlY29uZHMvODY0ZTU7Y2FzZSJob3VyIjpyZXR1cm4gMjQqZGF5cyt0aGlzLl9taWxsaXNlY29uZHMvMzZlNTtjYXNlIm1pbnV0ZSI6cmV0dXJuIDI0KmRheXMqNjArdGhpcy5fbWlsbGlzZWNvbmRzLzZlNDtjYXNlInNlY29uZCI6cmV0dXJuIDI0KmRheXMqNjAqNjArdGhpcy5fbWlsbGlzZWNvbmRzLzFlMztjYXNlIm1pbGxpc2Vjb25kIjpyZXR1cm4gTWF0aC5mbG9vcigyNCpkYXlzKjYwKjYwKjFlMykrdGhpcy5fbWlsbGlzZWNvbmRzO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJVbmtub3duIHVuaXQgIit1bml0cyl9fSxsYW5nOm1vbWVudC5mbi5sYW5nLGxvY2FsZTptb21lbnQuZm4ubG9jYWxlLHRvSXNvU3RyaW5nOmRlcHJlY2F0ZSgidG9Jc29TdHJpbmcoKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIHRvSVNPU3RyaW5nKCkgaW5zdGVhZCAobm90aWNlIHRoZSBjYXBpdGFscykiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9JU09TdHJpbmcoKX0pLHRvSVNPU3RyaW5nOmZ1bmN0aW9uKCl7dmFyIHllYXJzPU1hdGguYWJzKHRoaXMueWVhcnMoKSksbW9udGhzPU1hdGguYWJzKHRoaXMubW9udGhzKCkpLGRheXM9TWF0aC5hYnModGhpcy5kYXlzKCkpLGhvdXJzPU1hdGguYWJzKHRoaXMuaG91cnMoKSksbWludXRlcz1NYXRoLmFicyh0aGlzLm1pbnV0ZXMoKSksc2Vjb25kcz1NYXRoLmFicyh0aGlzLnNlY29uZHMoKSt0aGlzLm1pbGxpc2Vjb25kcygpLzFlMyk7cmV0dXJuIHRoaXMuYXNTZWNvbmRzKCk/KHRoaXMuYXNTZWNvbmRzKCk8MD8iLSI6IiIpKyJQIisoeWVhcnM/eWVhcnMrIlkiOiIiKSsobW9udGhzP21vbnRocysiTSI6IiIpKyhkYXlzP2RheXMrIkQiOiIiKSsoaG91cnN8fG1pbnV0ZXN8fHNlY29uZHM/IlQiOiIiKSsoaG91cnM/aG91cnMrIkgiOiIiKSsobWludXRlcz9taW51dGVzKyJNIjoiIikrKHNlY29uZHM/c2Vjb25kcysiUyI6IiIpOiJQMEQifSxsb2NhbGVEYXRhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvY2FsZX19KSxtb21lbnQuZHVyYXRpb24uZm4udG9TdHJpbmc9bW9tZW50LmR1cmF0aW9uLmZuLnRvSVNPU3RyaW5nO2ZvcihpIGluIHVuaXRNaWxsaXNlY29uZEZhY3RvcnMpaGFzT3duUHJvcCh1bml0TWlsbGlzZWNvbmRGYWN0b3JzLGkpJiZtYWtlRHVyYXRpb25HZXR0ZXIoaS50b0xvd2VyQ2FzZSgpKTttb21lbnQuZHVyYXRpb24uZm4uYXNNaWxsaXNlY29uZHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcygibXMiKX0sbW9tZW50LmR1cmF0aW9uLmZuLmFzU2Vjb25kcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzKCJzIil9LG1vbWVudC5kdXJhdGlvbi5mbi5hc01pbnV0ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcygibSIpfSxtb21lbnQuZHVyYXRpb24uZm4uYXNIb3Vycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzKCJoIil9LG1vbWVudC5kdXJhdGlvbi5mbi5hc0RheXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcygiZCIpfSxtb21lbnQuZHVyYXRpb24uZm4uYXNXZWVrcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzKCJ3ZWVrcyIpfSxtb21lbnQuZHVyYXRpb24uZm4uYXNNb250aHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcygiTSIpfSxtb21lbnQuZHVyYXRpb24uZm4uYXNZZWFycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFzKCJ5Iil9LG1vbWVudC5sb2NhbGUoImVuIix7b3JkaW5hbDpmdW5jdGlvbihudW1iZXIpe3ZhciBiPW51bWJlciUxMCxvdXRwdXQ9MT09PXRvSW50KG51bWJlciUxMDAvMTApPyJ0aCI6MT09PWI/InN0IjoyPT09Yj8ibmQiOjM9PT1iPyJyZCI6InRoIjtyZXR1cm4gbnVtYmVyK291dHB1dH19KSxoYXNNb2R1bGU/bW9kdWxlLmV4cG9ydHM9bW9tZW50OiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/KGRlZmluZSgibW9tZW50IixmdW5jdGlvbihyZXF1aXJlLGV4cG9ydHMsbW9kdWxlKXtyZXR1cm4gbW9kdWxlLmNvbmZpZyYmbW9kdWxlLmNvbmZpZygpJiZtb2R1bGUuY29uZmlnKCkubm9HbG9iYWw9PT0hMCYmKGdsb2JhbFNjb3BlLm1vbWVudD1vbGRHbG9iYWxNb21lbnQpLG1vbWVudH0pLG1ha2VHbG9iYWwoITApKTptYWtlR2xvYmFsKCl9LmNhbGwodGhpcyksZnVuY3Rpb24ocm9vdCxmYWN0b3J5KXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbIm1vbWVudCJdLGZhY3RvcnkpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1mYWN0b3J5KHJlcXVpcmUoIm1vbWVudCIpKTpmYWN0b3J5KHJvb3QubW9tZW50KX0odGhpcyxmdW5jdGlvbihtb21lbnQpe2Z1bmN0aW9uIGNoYXJDb2RlVG9JbnQoY2hhckNvZGUpe3JldHVybiBjaGFyQ29kZT45Nj9jaGFyQ29kZS04NzpjaGFyQ29kZT42ND9jaGFyQ29kZS0yOTpjaGFyQ29kZS00OH1mdW5jdGlvbiB1bnBhY2tCYXNlNjAoc3RyaW5nKXt2YXIgbnVtLGk9MCxwYXJ0cz1zdHJpbmcuc3BsaXQoIi4iKSx3aG9sZT1wYXJ0c1swXSxmcmFjdGlvbmFsPXBhcnRzWzFdfHwiIixtdWx0aXBsaWVyPTEsb3V0PTAsc2lnbj0xO2Zvcig0NT09PXN0cmluZy5jaGFyQ29kZUF0KDApJiYoaT0xLHNpZ249LTEpLGk7aTx3aG9sZS5sZW5ndGg7aSsrKW51bT1jaGFyQ29kZVRvSW50KHdob2xlLmNoYXJDb2RlQXQoaSkpLG91dD02MCpvdXQrbnVtO2ZvcihpPTA7aTxmcmFjdGlvbmFsLmxlbmd0aDtpKyspbXVsdGlwbGllci89NjAsbnVtPWNoYXJDb2RlVG9JbnQoZnJhY3Rpb25hbC5jaGFyQ29kZUF0KGkpKSxvdXQrPW51bSptdWx0aXBsaWVyO3JldHVybiBvdXQqc2lnbn1mdW5jdGlvbiBhcnJheVRvSW50KGFycmF5KXtmb3IodmFyIGk9MDtpPGFycmF5Lmxlbmd0aDtpKyspYXJyYXlbaV09dW5wYWNrQmFzZTYwKGFycmF5W2ldKX1mdW5jdGlvbiBpbnRUb1VudGlsKGFycmF5LGxlbmd0aCl7Zm9yKHZhciBpPTA7bGVuZ3RoPmk7aSsrKWFycmF5W2ldPU1hdGgucm91bmQoKGFycmF5W2ktMV18fDApKzZlNCphcnJheVtpXSk7YXJyYXlbbGVuZ3RoLTFdPTEvMH1mdW5jdGlvbiBtYXBJbmRpY2VzKHNvdXJjZSxpbmRpY2VzKXt2YXIgaSxvdXQ9W107Zm9yKGk9MDtpPGluZGljZXMubGVuZ3RoO2krKylvdXRbaV09c291cmNlW2luZGljZXNbaV1dO3JldHVybiBvdXR9ZnVuY3Rpb24gdW5wYWNrKHN0cmluZyl7dmFyIGRhdGE9c3RyaW5nLnNwbGl0KCJ8Iiksb2Zmc2V0cz1kYXRhWzJdLnNwbGl0KCIgIiksaW5kaWNlcz1kYXRhWzNdLnNwbGl0KCIiKSx1bnRpbHM9ZGF0YVs0XS5zcGxpdCgiICIpO3JldHVybiBhcnJheVRvSW50KG9mZnNldHMpLGFycmF5VG9JbnQoaW5kaWNlcyksYXJyYXlUb0ludCh1bnRpbHMpLGludFRvVW50aWwodW50aWxzLGluZGljZXMubGVuZ3RoKSx7bmFtZTpkYXRhWzBdLGFiYnJzOm1hcEluZGljZXMoZGF0YVsxXS5zcGxpdCgiICIpLGluZGljZXMpLG9mZnNldHM6bWFwSW5kaWNlcyhvZmZzZXRzLGluZGljZXMpLHVudGlsczp1bnRpbHN9fWZ1bmN0aW9uIFpvbmUocGFja2VkU3RyaW5nKXtwYWNrZWRTdHJpbmcmJnRoaXMuX3NldCh1bnBhY2socGFja2VkU3RyaW5nKSl9ZnVuY3Rpb24gbm9ybWFsaXplTmFtZShuYW1lKXtyZXR1cm4obmFtZXx8IiIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXC8vZywiXyIpfWZ1bmN0aW9uIGFkZFpvbmUocGFja2VkKXt2YXIgaSx6b25lLHpvbmVOYW1lO2Zvcigic3RyaW5nIj09dHlwZW9mIHBhY2tlZCYmKHBhY2tlZD1bcGFja2VkXSksaT0wO2k8cGFja2VkLmxlbmd0aDtpKyspem9uZT1uZXcgWm9uZShwYWNrZWRbaV0pLHpvbmVOYW1lPW5vcm1hbGl6ZU5hbWUoem9uZS5uYW1lKSx6b25lc1t6b25lTmFtZV09em9uZSx1cGdyYWRlTGlua3NUb1pvbmVzKHpvbmVOYW1lKX1mdW5jdGlvbiBnZXRab25lKG5hbWUpe3JldHVybiB6b25lc1tub3JtYWxpemVOYW1lKG5hbWUpXXx8bnVsbH1mdW5jdGlvbiBnZXROYW1lcygpe3ZhciBpLG91dD1bXTtmb3IoaSBpbiB6b25lcyl6b25lcy5oYXNPd25Qcm9wZXJ0eShpKSYmem9uZXNbaV0mJm91dC5wdXNoKHpvbmVzW2ldLm5hbWUpO3JldHVybiBvdXQuc29ydCgpfWZ1bmN0aW9uIGFkZExpbmsoYWxpYXNlcyl7dmFyIGksYWxpYXM7Zm9yKCJzdHJpbmciPT10eXBlb2YgYWxpYXNlcyYmKGFsaWFzZXM9W2FsaWFzZXNdKSxpPTA7aTxhbGlhc2VzLmxlbmd0aDtpKyspYWxpYXM9YWxpYXNlc1tpXS5zcGxpdCgifCIpLHB1c2hMaW5rKGFsaWFzWzBdLGFsaWFzWzFdKSxwdXNoTGluayhhbGlhc1sxXSxhbGlhc1swXSl9ZnVuY3Rpb24gdXBncmFkZUxpbmtzVG9ab25lcyh6b25lTmFtZSl7aWYobGlua3Nbem9uZU5hbWVdKXt2YXIgaSx6b25lPXpvbmVzW3pvbmVOYW1lXSxsaW5rTmFtZXM9bGlua3Nbem9uZU5hbWVdO2ZvcihpPTA7aTxsaW5rTmFtZXMubGVuZ3RoO2krKyljb3B5Wm9uZVdpdGhOYW1lKHpvbmUsbGlua05hbWVzW2ldKTtsaW5rc1t6b25lTmFtZV09bnVsbH19ZnVuY3Rpb24gY29weVpvbmVXaXRoTmFtZSh6b25lLG5hbWUpe3ZhciBsaW5rWm9uZT16b25lc1tub3JtYWxpemVOYW1lKG5hbWUpXT1uZXcgWm9uZTtsaW5rWm9uZS5fc2V0KHpvbmUpLGxpbmtab25lLm5hbWU9bmFtZX1mdW5jdGlvbiBwdXNoTGluayh6b25lTmFtZSxsaW5rTmFtZSl7em9uZU5hbWU9bm9ybWFsaXplTmFtZSh6b25lTmFtZSksem9uZXNbem9uZU5hbWVdP2NvcHlab25lV2l0aE5hbWUoem9uZXNbem9uZU5hbWVdLGxpbmtOYW1lKToobGlua3Nbem9uZU5hbWVdPWxpbmtzW3pvbmVOYW1lXXx8W10sbGlua3Nbem9uZU5hbWVdLnB1c2gobGlua05hbWUpKX1mdW5jdGlvbiBsb2FkRGF0YShkYXRhKXthZGRab25lKGRhdGEuem9uZXMpLGFkZExpbmsoZGF0YS5saW5rcyksdHouZGF0YVZlcnNpb249ZGF0YS52ZXJzaW9ufWZ1bmN0aW9uIHpvbmVFeGlzdHMobmFtZSl7cmV0dXJuIHpvbmVFeGlzdHMuZGlkU2hvd0Vycm9yfHwoem9uZUV4aXN0cy5kaWRTaG93RXJyb3I9ITAsbG9nRXJyb3IoIm1vbWVudC50ei56b25lRXhpc3RzKCciK25hbWUrIicpIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgIW1vbWVudC50ei56b25lKCciK25hbWUrIicpIikpLCEhZ2V0Wm9uZShuYW1lKX1mdW5jdGlvbiBuZWVkc09mZnNldChtKXtyZXR1cm4hKCFtLl9hfHx2b2lkIDAhPT1tLl90em0pfWZ1bmN0aW9uIGxvZ0Vycm9yKG1lc3NhZ2UpeyJ1bmRlZmluZWQiIT10eXBlb2YgY29uc29sZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNvbnNvbGUuZXJyb3ImJmNvbnNvbGUuZXJyb3IobWVzc2FnZSl9ZnVuY3Rpb24gdHooKXt2YXIgYXJncz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCwtMSksbmFtZT1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSx6b25lPWdldFpvbmUobmFtZSksb3V0PW1vbWVudC51dGMuYXBwbHkobnVsbCxhcmdzKTtyZXR1cm4gem9uZSYmbmVlZHNPZmZzZXQob3V0KSYmb3V0LmFkZCh6b25lLnBhcnNlKG91dCksIm1pbnV0ZXMiKSxvdXQudHoobmFtZSksb3V0fWZ1bmN0aW9uIGFiYnJXcmFwKG9sZCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3o/dGhpcy5fei5hYmJyKHRoaXMpOm9sZC5jYWxsKHRoaXMpfX1mdW5jdGlvbiByZXNldFpvbmVXcmFwKG9sZCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3o9bnVsbCxvbGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfX1pZih2b2lkIDAhPT1tb21lbnQudHopcmV0dXJuIG1vbWVudDt2YXIgVkVSU0lPTj0iMC4yLjIiLHpvbmVzPXt9LGxpbmtzPXt9LG1vbWVudFZlcnNpb249bW9tZW50LnZlcnNpb24uc3BsaXQoIi4iKSxtYWpvcj0rbW9tZW50VmVyc2lvblswXSxtaW5vcj0rbW9tZW50VmVyc2lvblsxXTsoMj5tYWpvcnx8Mj09PW1ham9yJiY2Pm1pbm9yKSYmbG9nRXJyb3IoIk1vbWVudCBUaW1lem9uZSByZXF1aXJlcyBNb21lbnQuanMgPj0gMi42LjAuIFlvdSBhcmUgdXNpbmcgTW9tZW50LmpzICIrbW9tZW50LnZlcnNpb24rIi4gU2VlIG1vbWVudGpzLmNvbSIpLFpvbmUucHJvdG90eXBlPXtfc2V0OmZ1bmN0aW9uKHVucGFja2VkKXt0aGlzLm5hbWU9dW5wYWNrZWQubmFtZSx0aGlzLmFiYnJzPXVucGFja2VkLmFiYnJzLHRoaXMudW50aWxzPXVucGFja2VkLnVudGlscyx0aGlzLm9mZnNldHM9dW5wYWNrZWQub2Zmc2V0c30sX2luZGV4OmZ1bmN0aW9uKHRpbWVzdGFtcCl7dmFyIGksdGFyZ2V0PSt0aW1lc3RhbXAsdW50aWxzPXRoaXMudW50aWxzO2ZvcihpPTA7aTx1bnRpbHMubGVuZ3RoO2krKylpZih0YXJnZXQ8dW50aWxzW2ldKXJldHVybiBpfSxwYXJzZTpmdW5jdGlvbih0aW1lc3RhbXApe3ZhciBvZmZzZXQsb2Zmc2V0TmV4dCxvZmZzZXRQcmV2LGksdGFyZ2V0PSt0aW1lc3RhbXAsb2Zmc2V0cz10aGlzLm9mZnNldHMsdW50aWxzPXRoaXMudW50aWxzLG1heD11bnRpbHMubGVuZ3RoLTE7Zm9yKGk9MDttYXg+aTtpKyspaWYob2Zmc2V0PW9mZnNldHNbaV0sb2Zmc2V0TmV4dD1vZmZzZXRzW2krMV0sb2Zmc2V0UHJldj1vZmZzZXRzW2k/aS0xOmldLG9mZnNldE5leHQ+b2Zmc2V0JiZ0ei5tb3ZlQW1iaWd1b3VzRm9yd2FyZD9vZmZzZXQ9b2Zmc2V0TmV4dDpvZmZzZXQ+b2Zmc2V0UHJldiYmdHoubW92ZUludmFsaWRGb3J3YXJkJiYob2Zmc2V0PW9mZnNldFByZXYpLHRhcmdldDx1bnRpbHNbaV0tNmU0Km9mZnNldClyZXR1cm4gb2Zmc2V0c1tpXTtyZXR1cm4gb2Zmc2V0c1ttYXhdfSxhYmJyOmZ1bmN0aW9uKG1vbSl7cmV0dXJuIHRoaXMuYWJicnNbdGhpcy5faW5kZXgobW9tKV19LG9mZnNldDpmdW5jdGlvbihtb20pe3JldHVybiB0aGlzLm9mZnNldHNbdGhpcy5faW5kZXgobW9tKV19fSx0ei52ZXJzaW9uPVZFUlNJT04sdHouZGF0YVZlcnNpb249IiIsdHouX3pvbmVzPXpvbmVzLHR6Ll9saW5rcz1saW5rcyx0ei5hZGQ9YWRkWm9uZSx0ei5saW5rPWFkZExpbmssdHoubG9hZD1sb2FkRGF0YSx0ei56b25lPWdldFpvbmUsdHouem9uZUV4aXN0cz16b25lRXhpc3RzLHR6Lm5hbWVzPWdldE5hbWVzLHR6LlpvbmU9Wm9uZSx0ei51bnBhY2s9dW5wYWNrLHR6LnVucGFja0Jhc2U2MD11bnBhY2tCYXNlNjAsdHoubmVlZHNPZmZzZXQ9bmVlZHNPZmZzZXQsdHoubW92ZUludmFsaWRGb3J3YXJkPSEwLHR6Lm1vdmVBbWJpZ3VvdXNGb3J3YXJkPSExO3ZhciBmbj1tb21lbnQuZm47bW9tZW50LnR6PXR6LG1vbWVudC51cGRhdGVPZmZzZXQ9ZnVuY3Rpb24obW9tLGtlZXBUaW1lKXt2YXIgb2Zmc2V0O21vbS5feiYmKG9mZnNldD1tb20uX3oub2Zmc2V0KG1vbSksTWF0aC5hYnMob2Zmc2V0KTwxNiYmKG9mZnNldC89NjApLG1vbS56b25lKG9mZnNldCxrZWVwVGltZSkpfSxmbi50ej1mdW5jdGlvbihuYW1lKXtyZXR1cm4gbmFtZT8odGhpcy5fej1nZXRab25lKG5hbWUpLHRoaXMuX3o/bW9tZW50LnVwZGF0ZU9mZnNldCh0aGlzKTpsb2dFcnJvcigiTW9tZW50IFRpbWV6b25lIGhhcyBubyBkYXRhIGZvciAiK25hbWUrIi4gU2VlIGh0dHA6Ly9tb21lbnRqcy5jb20vdGltZXpvbmUvZG9jcy8jL2RhdGEtbG9hZGluZy8uIiksdGhpcyk6dGhpcy5fej90aGlzLl96Lm5hbWU6dm9pZCAwfSxmbi56b25lTmFtZT1hYmJyV3JhcChmbi56b25lTmFtZSksZm4uem9uZUFiYnI9YWJicldyYXAoZm4uem9uZUFiYnIpLGZuLnV0Yz1yZXNldFpvbmVXcmFwKGZuLnV0Yyk7dmFyIG1vbWVudFByb3BlcnRpZXM9bW9tZW50Lm1vbWVudFByb3BlcnRpZXM7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChtb21lbnRQcm9wZXJ0aWVzKT8obW9tZW50UHJvcGVydGllcy5wdXNoKCJfeiIpLG1vbWVudFByb3BlcnRpZXMucHVzaCgiX2EiKSk6bW9tZW50UHJvcGVydGllcyYmKG1vbWVudFByb3BlcnRpZXMuX3o9bnVsbCksbG9hZERhdGEoe3ZlcnNpb246IjIwMTRnIix6b25lczpbIkFmcmljYS9BYmlkamFufEdNVHwwfDB8IiwiQWZyaWNhL0FkZGlzX0FiYWJhfEVBVHwtMzB8MHwiLCJBZnJpY2EvQWxnaWVyc3xDRVR8LTEwfDB8IiwiQWZyaWNhL0Jhbmd1aXxXQVR8LTEwfDB8IiwiQWZyaWNhL0JsYW50eXJlfENBVHwtMjB8MHwiLCJBZnJpY2EvQ2Fpcm98RUVUIEVFU1R8LTIwIC0zMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFDYnkwIEZiMCBjMTAgOG4wIDhOZDAgZ0wwIGUxMCBtbjAgMW8xMCBqejAgZ04wIHBiMCAxcU4wIGRYMCBlMTAgeHowIDFvMTAgYmIwIGUxMCBBbjAgMW8xMCA1ejAgZTEwIEZYMCAxbzEwIDJMMCBlMTAgSUwwIDFDMTAgTHowIiwiQWZyaWNhL0Nhc2FibGFuY2F8V0VUIFdFU1R8MCAtMTB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUNjbzAgRGIwIDF6ZDAgTHowIDFOZjAgd00wIGNvMCBnbzAgMW8wMCBzMDAgZEEwIHZjMCAxMUEwIEEwMCBlMDAgeTAwIDExQTAgdW8wIGUwMCBEQTAgMTFBMCByQTAgZTAwIEpjMCBXTTAgbTAwIGdNMCBNMDAgV00wIGpjMCBlMDAgUkEwIDExQTAgZEEwIGUwMCBVbzAgMTFBMCA4MDAgZ00wIFhjMCIsIkFmcmljYS9DZXV0YXxDRVQgQ0VTVHwtMTAgLTIwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV3AwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAiLCJBZnJpY2EvSm9oYW5uZXNidXJnfFNBU1R8LTIwfDB8IiwiQWZyaWNhL1RyaXBvbGl8RUVUIENFVCBDRVNUfC0yMCAtMTAgLTIwfDAxMjB8MUlsQTAgVEEwIDFvMDAiLCJBZnJpY2EvV2luZGhvZWt8V0FTVCBXQVR8LTIwIC0xMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzFjMCAxMUIwIDFuWDAgMTFCMCAxblgwIDExQjAgMXFMMCBXTjAgMXFMMCAxMUIwIDFuWDAgMTFCMCAxblgwIDExQjAgMW5YMCAxMUIwIDFuWDAgMTFCMCAxcUwwIFdOMCAxcUwwIDExQjAiLCJBbWVyaWNhL0FkYWt8SEFTVCBIQURUfGEwIDkwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCUjAwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgUmQwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAiLCJBbWVyaWNhL0FuY2hvcmFnZXxBS1NUIEFLRFR8OTAgODB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJRWDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBSZDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCIsIkFtZXJpY2EvQW5ndWlsbGF8QVNUfDQwfDB8IiwiQW1lcmljYS9BcmFndWFpbmF8QlJUIEJSU1R8MzAgMjB8MDEwfDFJZEQwIEx6MCIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlc3xBUlR8MzB8MHwiLCJBbWVyaWNhL0FzdW5jaW9ufFBZU1QgUFlUfDMwIDQwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFDNDMwIDFhMTAgMWZ6MCAxYTEwIDFmejAgMWNOMCAxN2IwIDFpcDAgMTdiMCAxaXAwIDE3YjAgMWlwMCAxOVgwIDFmQjAgMTlYMCAxZkIwIDE5WDAgMWlwMCAxN2IwIDFpcDAgMTdiMCAxaXAwIiwiQW1lcmljYS9BdGlrb2thbnxFU1R8NTB8MHwiLCJBbWVyaWNhL0JhaGlhfEJSVCBCUlNUfDMwIDIwfDAxMHwxRkpmMCBSYjAiLCJBbWVyaWNhL0JhaGlhX0JhbmRlcmFzfE1TVCBDRFQgQ1NUfDcwIDUwIDYwfDAxMjEyMTIxMjEyMTIxMjEyMTIxMjEyfDFDMWwwIDFuVzAgMTFCMCAxblgwIDExQjAgMW5YMCAxNHAwIDFsYjAgMTRwMCAxbGIwIDE0cDAgMWxiMCAxNHAwIDFuWDAgMTFCMCAxblgwIDExQjAgMW5YMCAxNHAwIDFsYjAgMTRwMCAxbGIwIiwiQW1lcmljYS9CZWxlbXxCUlR8MzB8MHwiLCJBbWVyaWNhL0JlbGl6ZXxDU1R8NjB8MHwiLCJBbWVyaWNhL0JvYV9WaXN0YXxBTVR8NDB8MHwiLCJBbWVyaWNhL0JvZ290YXxDT1R8NTB8MHwiLCJBbWVyaWNhL0JvaXNlfE1TVCBNRFR8NzAgNjB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJRVjAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBSZDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCIsIkFtZXJpY2EvQ2FtcG9fR3JhbmRlfEFNU1QgQU1UfDMwIDQwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCSXIwIDF6ZDAgT24wIDF6ZDAgUmIwIDF6ZDAgTHowIDFDMTAgTHowIDFDMTAgT24wIDF6ZDAgT24wIDF6ZDAgT24wIDF6ZDAgT24wIDFDMTAgTHowIDFDMTAgTHowIDFDMTAiLCJBbWVyaWNhL0NhbmN1bnxDU1QgQ0RUfDYwIDUwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFDMWswIDFuWDAgMTFCMCAxblgwIDExQjAgMW5YMCAxNHAwIDFsYjAgMTRwMCAxbGIwIDE0cDAgMWxiMCAxNHAwIDFuWDAgMTFCMCAxblgwIDExQjAgMW5YMCAxNHAwIDFsYjAgMTRwMCAxbGIwIiwiQW1lcmljYS9DYXJhY2FzfFZFVHw0dXwwfCIsIkFtZXJpY2EvQ2F5ZW5uZXxHRlR8MzB8MHwiLCJBbWVyaWNhL0NoaWNhZ298Q1NUIENEVHw2MCA1MHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQlFVMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIFJkMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIiwiQW1lcmljYS9DaGlodWFodWF8TVNUIE1EVHw3MCA2MHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzFsMCAxblgwIDExQjAgMW5YMCAxMUIwIDFuWDAgMTRwMCAxbGIwIDE0cDAgMWxiMCAxNHAwIDFsYjAgMTRwMCAxblgwIDExQjAgMW5YMCAxMUIwIDFuWDAgMTRwMCAxbGIwIDE0cDAgMWxiMCIsIkFtZXJpY2EvQ3Jlc3RvbnxNU1R8NzB8MHwiLCJBbWVyaWNhL0Rhd3NvbnxQU1QgUERUfDgwIDcwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCUVcwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgUmQwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAiLCJBbWVyaWNhL0RldHJvaXR8RVNUIEVEVHw1MCA0MHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQlFUMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIFJkMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIiwiQW1lcmljYS9FaXJ1bmVwZXxBTVQgQUNUfDQwIDUwfDAxfDFLTEUwIiwiQW1lcmljYS9HbGFjZV9CYXl8QVNUIEFEVHw0MCAzMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQlFTMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIFJkMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIE9wMCAxemIwIiwiQW1lcmljYS9Hb2R0aGFifFdHVCBXR1NUfDMwIDIwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV3AwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAiLCJBbWVyaWNhL0dvb3NlX0JheXxBU1QgQURUfDQwIDMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCUVExIDF6YjAgT3AwIDF6Y1ggT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgUmQwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAiLCJBbWVyaWNhL0dyYW5kX1R1cmt8RVNUIEVEVCBBU1R8NTAgNDAgNDB8MDEwMTAxMDEwMTJ8MUJRVDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCIsIkFtZXJpY2EvR3VheWFxdWlsfEVDVHw1MHwwfCIsIkFtZXJpY2EvR3V5YW5hfEdZVHw0MHwwfCIsIkFtZXJpY2EvSGF2YW5hfENTVCBDRFR8NTAgNDB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJRUjAgMXdvMCBVMDAgMXpjMCBVMDAgMXFNMCBPbzAgMXpjMCBPbzAgMXpjMCBPbzAgMXpjMCBSYzAgMXpjMCBPbzAgMXpjMCBPbzAgMXpjMCBPbzAgMXpjMCBPbzAgMXpjMCIsIkFtZXJpY2EvTGFfUGF6fEJPVHw0MHwwfCIsIkFtZXJpY2EvTGltYXxQRVR8NTB8MHwiLCJBbWVyaWNhL01ldGxha2F0bGF8UFNUfDgwfDB8IiwiQW1lcmljYS9NaXF1ZWxvbnxQTVNUIFBNRFR8MzAgMjB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJRUjAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBSZDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCIsIkFtZXJpY2EvTW9udGV2aWRlb3xVWVNUIFVZVHwyMCAzMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQlFRMCAxbGQwIDE0bjAgMWxkMCAxNG4wIDFvMTAgMTF6MCAxbzEwIDExejAgMW8xMCAxMXowIDFvMTAgMTRuMCAxbGQwIDE0bjAgMWxkMCAxNG4wIDFvMTAgMTF6MCAxbzEwIDExejAgMW8xMCIsIkFtZXJpY2EvTm9yb25oYXxGTlR8MjB8MHwiLCJBbWVyaWNhL05vcnRoX0Rha290YS9CZXVsYWh8TVNUIE1EVCBDU1QgQ0RUfDcwIDYwIDYwIDUwfDAxMjMyMzIzMjMyMzIzMjMyMzIzMjMyfDFCUVYwIDF6YjAgT28wIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgUmQwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAiLCJBbWVyaWNhL1BhcmFtYXJpYm98U1JUfDMwfDB8IiwiQW1lcmljYS9Qb3J0LWF1LVByaW5jZXxFU1QgRURUfDUwIDQwfDAxMDEwMTAxMDEwMTAxMDEwMTB8MUdJNzAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBSZDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCBPcDAgMXpiMCIsIkFtZXJpY2EvU2FudGFfSXNhYmVsfFBTVCBQRFR8ODAgNzB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUMxbTAgMW5YMCAxMUIwIDFuWDAgMTFCMCAxblgwIDE0cDAgMWxiMCAxNHAwIDFsYjAgMTRwMCAxbGIwIDE0cDAgMW5YMCAxMUIwIDFuWDAgMTFCMCAxblgwIDE0cDAgMWxiMCAxNHAwIDFsYjAiLCJBbWVyaWNhL1NhbnRpYWdvfENMU1QgQ0xUfDMwIDQwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFDMWYwIDFmQjAgMW5YMCBHMTAgMUVMMCBPcDAgMXpiMCBSZDAgMXduMCBSZDAgMXduMCBSZDAgMXduMCBSZDAgMXduMCBSZDAgMXpiMCBPcDAgMXpiMCBSZDAgMXduMCBSZDAiLCJBbWVyaWNhL1Nhb19QYXVsb3xCUlNUIEJSVHwyMCAzMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQklxMCAxemQwIE9uMCAxemQwIFJiMCAxemQwIEx6MCAxQzEwIEx6MCAxQzEwIE9uMCAxemQwIE9uMCAxemQwIE9uMCAxemQwIE9uMCAxQzEwIEx6MCAxQzEwIEx6MCAxQzEwIiwiQW1lcmljYS9TY29yZXNieXN1bmR8RUdUIEVHU1R8MTAgMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQldwMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIiwiQW1lcmljYS9TdF9Kb2huc3xOU1QgTkRUfDN1IDJ1fDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCUVB2IDF6YjAgT3AwIDF6Y1ggT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgUmQwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAgT3AwIDF6YjAiLCJBbnRhcmN0aWNhL0Nhc2V5fENBU1QgQVdTVHwtYjAgLTgwfDAxMDF8MUJOMzAgNDBQMCBLTDAiLCJBbnRhcmN0aWNhL0RhdmlzfERBVlQgREFWVHwtNTAgLTcwfDAxMDF8MUJQdzAgM1duMCBLTjAiLCJBbnRhcmN0aWNhL0R1bW9udERVcnZpbGxlfEREVVR8LWEwfDB8IiwiQW50YXJjdGljYS9NYWNxdWFyaWV8QUVEVCBNSVNUfC1iMCAtYjB8MDF8MUMxNDAiLCJBbnRhcmN0aWNhL01hd3NvbnxNQVdUfC01MHwwfCIsIkFudGFyY3RpY2EvTWNNdXJkb3xOWkRUIE5aU1R8LWQwIC1jMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzEyMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFhMDAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCIsIkFudGFyY3RpY2EvUm90aGVyYXxST1RUfDMwfDB8IiwiQW50YXJjdGljYS9TeW93YXxTWU9UfC0zMHwwfCIsIkFudGFyY3RpY2EvVHJvbGx8VVRDIENFU1R8MCAtMjB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJXcDAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCIsIkFudGFyY3RpY2EvVm9zdG9rfFZPU1R8LTYwfDB8IiwiQXNpYS9BZGVufEFTVHwtMzB8MHwiLCJBc2lhL0FsbWF0eXxBTE1UfC02MHwwfCIsIkFzaWEvQW1tYW58RUVUIEVFU1R8LTIwIC0zMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJWeTAgMXFNMCAxMUEwIDFvMDAgMTFBMCA0YlgwIERkMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFxTTAiLCJBc2lhL0FuYWR5cnxBTkFUIEFOQVNUIEFOQVR8LWMwIC1jMCAtYjB8MDEyMHwxQldlMCAxcU4wIFdNMCIsIkFzaWEvQXF0YXV8QVFUVHwtNTB8MHwiLCJBc2lhL0FzaGdhYmF0fFRNVHwtNTB8MHwiLCJBc2lhL0Jha3V8QVpUIEFaU1R8LTQwIC01MHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQldvMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIiwiQXNpYS9CYW5na29rfElDVHwtNzB8MHwiLCJBc2lhL0JlaXJ1dHxFRVQgRUVTVHwtMjAgLTMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV20wIDFxTDAgV04wIDFxTDAgV04wIDFxTDAgMTFCMCAxblgwIDExQjAgMW5YMCAxMUIwIDFuWDAgMTFCMCAxcUwwIFdOMCAxcUwwIFdOMCAxcUwwIDExQjAgMW5YMCAxMUIwIDFuWDAiLCJBc2lhL0Jpc2hrZWt8S0dUfC02MHwwfCIsIkFzaWEvQnJ1bmVpfEJOVHwtODB8MHwiLCJBc2lhL0NhbGN1dHRhfElTVHwtNXV8MHwiLCJBc2lhL0NoaXRhfFlBS1QgWUFLU1QgWUFLVCBJUktUfC05MCAtYTAgLWEwIC04MHwwMTAyM3wxQldoMCAxcU0wIFdNMCA4SHowIiwiQXNpYS9DaG9pYmFsc2FufENIT1R8LTgwfDB8IiwiQXNpYS9DaG9uZ3Fpbmd8Q1NUfC04MHwwfCIsIkFzaWEvRGFjY2F8QkRUfC02MHwwfCIsIkFzaWEvRGFtYXNjdXN8RUVUIEVFU1R8LTIwIC0zMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzBtMCAxblgwIDExQjAgMW5YMCAxMUIwIDFuWDAgMTFCMCAxblgwIDExQjAgMXFMMCBXTjAgMXFMMCBXTjAgMXFMMCAxMUIwIDFuWDAgMTFCMCAxblgwIDExQjAgMW5YMCAxMUIwIDFxTDAiLCJBc2lhL0RpbGl8VExUfC05MHwwfCIsIkFzaWEvRHViYWl8R1NUfC00MHwwfCIsIkFzaWEvRHVzaGFuYmV8VEpUfC01MHwwfCIsIkFzaWEvR2F6YXxFRVQgRUVTVHwtMjAgLTMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCVlcxIFNLWCAxeGQxIE1LWCAxQU4wIDFhMDAgMWZBMCAxY0wwIDFjTjAgMWNMMCAxY04wIDFjTDAgMWZCMCAxOVgwIDFmQjAgMTlYMCAxZkIwIDE5WDAgMWZCMCAxY0wwIDFjTjAgMWNMMCIsIkFzaWEvSGVicm9ufEVFVCBFRVNUfC0yMCAtMzB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQlZ5MCBUYjAgMXhkMSBNS1ggYkIwIGNuMCAxY04wIDFhMDAgMWZBMCAxY0wwIDFjTjAgMWNMMCAxY04wIDFjTDAgMWZCMCAxOVgwIDFmQjAgMTlYMCAxZkIwIDE5WDAgMWZCMCAxY0wwIDFjTjAgMWNMMCIsIkFzaWEvSG9uZ19Lb25nfEhLVHwtODB8MHwiLCJBc2lhL0hvdmR8SE9WVHwtNzB8MHwiLCJBc2lhL0lya3V0c2t8SVJLVCBJUktTVCBJUktUfC04MCAtOTAgLTkwfDAxMDIwfDFCV2kwIDFxTTAgV00wIDhIejAiLCJBc2lhL0lzdGFuYnVsfEVFVCBFRVNUfC0yMCAtMzB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJXcDAgMXFNMCBYYzAgMXFvMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTIwMCAxbkEwIDExQTAgMW8wMCAxMUEwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCIsIkFzaWEvSmFrYXJ0YXxXSUJ8LTcwfDB8IiwiQXNpYS9KYXlhcHVyYXxXSVR8LTkwfDB8IiwiQXNpYS9KZXJ1c2FsZW18SVNUIElEVHwtMjAgLTMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCVkEwIDE3WDAgMWtwMCAxZHowIDFjMTAgMWFMMCAxZU4wIDFvTDAgMTBOMCAxb0wwIDEwTjAgMW9MMCAxME4wIDFyejAgVzEwIDFyejAgVzEwIDFyejAgMTBOMCAxb0wwIDEwTjAgMW9MMCIsIkFzaWEvS2FidWx8QUZUfC00dXwwfCIsIkFzaWEvS2FtY2hhdGthfFBFVFQgUEVUU1QgUEVUVHwtYzAgLWMwIC1iMHwwMTIwfDFCV2UwIDFxTjAgV00wIiwiQXNpYS9LYXJhY2hpfFBLVHwtNTB8MHwiLCJBc2lhL0thc2hnYXJ8WEpUfC02MHwwfCIsIkFzaWEvS2F0aG1hbmR1fE5QVHwtNUp8MHwiLCJBc2lhL0toYW5keWdhfFZMQVQgVkxBU1QgVkxBVCBZQUtUIFlBS1R8LWEwIC1iMCAtYjAgLWEwIC05MHwwMTAyMzR8MUJXZzAgMXFNMCBXTTAgMTdWMCA3ekQwIiwiQXNpYS9LcmFzbm95YXJza3xLUkFUIEtSQVNUIEtSQVR8LTcwIC04MCAtODB8MDEwMjB8MUJXajAgMXFNMCBXTTAgOEh6MCIsIkFzaWEvS3VhbGFfTHVtcHVyfE1ZVHwtODB8MHwiLCJBc2lhL01hZ2FkYW58TUFHVCBNQUdTVCBNQUdUIE1BR1R8LWIwIC1jMCAtYzAgLWEwfDAxMDIzfDFCV2YwIDFxTTAgV00wIDhIejAiLCJBc2lhL01ha2Fzc2FyfFdJVEF8LTgwfDB8IiwiQXNpYS9NYW5pbGF8UEhUfC04MHwwfCIsIkFzaWEvTmljb3NpYXxFRVQgRUVTVHwtMjAgLTMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV3AwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAiLCJBc2lhL05vdm9rdXpuZXRza3xLUkFUIE5PVlNUIE5PVlQgTk9WVHwtNzAgLTcwIC02MCAtNzB8MDEyMzB8MUJXajAgMXFOMCBXTTAgOEh6MCIsIkFzaWEvTm92b3NpYmlyc2t8Tk9WVCBOT1ZTVCBOT1ZUfC02MCAtNzAgLTcwfDAxMDIwfDFCV2swIDFxTTAgV00wIDhIejAiLCJBc2lhL09tc2t8T01TVCBPTVNTVCBPTVNUfC02MCAtNzAgLTcwfDAxMDIwfDFCV2swIDFxTTAgV00wIDhIejAiLCJBc2lhL09yYWx8T1JBVHwtNTB8MHwiLCJBc2lhL1B5b25neWFuZ3xLU1R8LTkwfDB8IiwiQXNpYS9ReXp5bG9yZGF8UVlaVHwtNjB8MHwiLCJBc2lhL1Jhbmdvb258TU1UfC02dXwwfCIsIkFzaWEvU2FraGFsaW58U0FLVCBTQUtTVCBTQUtUfC1hMCAtYjAgLWIwfDAxMDIwfDFCV2cwIDFxTTAgV00wIDhIejAiLCJBc2lhL1NhbWFya2FuZHxVWlR8LTUwfDB8IiwiQXNpYS9TaW5nYXBvcmV8U0dUfC04MHwwfCIsIkFzaWEvU3JlZG5la29seW1za3xNQUdUIE1BR1NUIE1BR1QgU1JFVHwtYjAgLWMwIC1jMCAtYjB8MDEwMjN8MUJXZjAgMXFNMCBXTTAgOEh6MCIsIkFzaWEvVGJpbGlzaXxHRVR8LTQwfDB8IiwiQXNpYS9UZWhyYW58SVJTVCBJUkRUfC0zdSAtNHV8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJUVXUgMWR6MCAxY3AwIDFkejAgMWNwMCAxZHowIDFjTjAgMWR6MCAxY3AwIDFkejAgMWNwMCAxZHowIDFjcDAgMWR6MCAxY04wIDFkejAgMWNwMCAxZHowIDFjcDAgMWR6MCAxY3AwIDFkejAiLCJBc2lhL1RoaW1idXxCVFR8LTYwfDB8IiwiQXNpYS9Ub2t5b3xKU1R8LTkwfDB8IiwiQXNpYS9VbGFhbmJhYXRhcnxVTEFUfC04MHwwfCIsIkFzaWEvVXN0LU5lcmF8TUFHVCBNQUdTVCBNQUdUIFZMQVQgVkxBVHwtYjAgLWMwIC1jMCAtYjAgLWEwfDAxMDIzNHwxQldmMCAxcU0wIFdNMCAxN1YwIDd6RDAiLCJBc2lhL1ZsYWRpdm9zdG9rfFZMQVQgVkxBU1QgVkxBVHwtYTAgLWIwIC1iMHwwMTAyMHwxQldnMCAxcU0wIFdNMCA4SHowIiwiQXNpYS9ZYWt1dHNrfFlBS1QgWUFLU1QgWUFLVHwtOTAgLWEwIC1hMHwwMTAyMHwxQldoMCAxcU0wIFdNMCA4SHowIiwiQXNpYS9ZZWthdGVyaW5idXJnfFlFS1QgWUVLU1QgWUVLVHwtNTAgLTYwIC02MHwwMTAyMHwxQldsMCAxcU0wIFdNMCA4SHowIiwiQXNpYS9ZZXJldmFufEFNVCBBTVNUfC00MCAtNTB8MDEwMTB8MUJXbTAgMXFNMCBXTTAgMXFNMCIsIkF0bGFudGljL0F6b3Jlc3xBWk9UIEFaT1NUfDEwIDB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJXcDAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCIsIkF0bGFudGljL0NhbmFyeXxXRVQgV0VTVHwwIC0xMHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQldwMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIiwiQXRsYW50aWMvQ2FwZV9WZXJkZXxDVlR8MTB8MHwiLCJBdGxhbnRpYy9Tb3V0aF9HZW9yZ2lhfEdTVHwyMHwwfCIsIkF0bGFudGljL1N0YW5sZXl8RktTVCBGS1R8MzAgNDB8MDEwfDFDNlIwIFUxMCIsIkF1c3RyYWxpYS9BQ1R8QUVEVCBBRVNUfC1iMCAtYTB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUMxNDAgMWNNMCAxY00wIDFjTTAgMWNNMCAxZkEwIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxZkEwIDFjTTAgMWNNMCAxY00wIDFjTTAiLCJBdXN0cmFsaWEvQWRlbGFpZGV8QUNEVCBBQ1NUfC1hdSAtOXV8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUMxNHUgMWNNMCAxY00wIDFjTTAgMWNNMCAxZkEwIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxY00wIDFjTTAgMWNNMCAxZkEwIDFjTTAgMWNNMCAxY00wIDFjTTAiLCJBdXN0cmFsaWEvQnJpc2JhbmV8QUVTVHwtYTB8MHwiLCJBdXN0cmFsaWEvRGFyd2lufEFDU1R8LTl1fDB8IiwiQXVzdHJhbGlhL0V1Y2xhfEFDV1NUfC04SnwwfCIsIkF1c3RyYWxpYS9MSEl8TEhEVCBMSFNUfC1iMCAtYXV8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUMxMzAgMWNNdSAxY0x1IDFjTXUgMWNMdSAxZkF1IDFjTHUgMWNNdSAxY0x1IDFjTXUgMWNMdSAxY011IDFjTHUgMWNNdSAxY0x1IDFjTXUgMWNMdSAxZkF1IDFjTHUgMWNNdSAxY0x1IDFjTXUiLCJBdXN0cmFsaWEvUGVydGh8QVdTVHwtODB8MHwiLCJDaGlsZS9FYXN0ZXJJc2xhbmR8RUFTU1QgRUFTVHw1MCA2MHwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzFmMCAxZkIwIDFuWDAgRzEwIDFFTDAgT3AwIDF6YjAgUmQwIDF3bjAgUmQwIDF3bjAgUmQwIDF3bjAgUmQwIDF3bjAgUmQwIDF6YjAgT3AwIDF6YjAgUmQwIDF3bjAgUmQwIiwiRWlyZXxHTVQgSVNUfDAgLTEwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV3AwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFvMDAgMTFBMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMUEwIDFvMDAiLCJFdGMvR01UKzF8R01UKzF8MTB8MHwiLCJFdGMvR01UKzEwfEdNVCsxMHxhMHwwfCIsIkV0Yy9HTVQrMTF8R01UKzExfGIwfDB8IiwiRXRjL0dNVCsxMnxHTVQrMTJ8YzB8MHwiLCJFdGMvR01UKzJ8R01UKzJ8MjB8MHwiLCJFdGMvR01UKzN8R01UKzN8MzB8MHwiLCJFdGMvR01UKzR8R01UKzR8NDB8MHwiLCJFdGMvR01UKzV8R01UKzV8NTB8MHwiLCJFdGMvR01UKzZ8R01UKzZ8NjB8MHwiLCJFdGMvR01UKzd8R01UKzd8NzB8MHwiLCJFdGMvR01UKzh8R01UKzh8ODB8MHwiLCJFdGMvR01UKzl8R01UKzl8OTB8MHwiLCJFdGMvR01ULTF8R01ULTF8LTEwfDB8IiwiRXRjL0dNVC0xMHxHTVQtMTB8LWEwfDB8IiwiRXRjL0dNVC0xMXxHTVQtMTF8LWIwfDB8IiwiRXRjL0dNVC0xMnxHTVQtMTJ8LWMwfDB8IiwiRXRjL0dNVC0xM3xHTVQtMTN8LWQwfDB8IiwiRXRjL0dNVC0xNHxHTVQtMTR8LWUwfDB8IiwiRXRjL0dNVC0yfEdNVC0yfC0yMHwwfCIsIkV0Yy9HTVQtM3xHTVQtM3wtMzB8MHwiLCJFdGMvR01ULTR8R01ULTR8LTQwfDB8IiwiRXRjL0dNVC01fEdNVC01fC01MHwwfCIsIkV0Yy9HTVQtNnxHTVQtNnwtNjB8MHwiLCJFdGMvR01ULTd8R01ULTd8LTcwfDB8IiwiRXRjL0dNVC04fEdNVC04fC04MHwwfCIsIkV0Yy9HTVQtOXxHTVQtOXwtOTB8MHwiLCJFdGMvVUNUfFVDVHwwfDB8IiwiRXRjL1VUQ3xVVEN8MHwwfCIsIkV1cm9wZS9CZWxmYXN0fEdNVCBCU1R8MCAtMTB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJXcDAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCIsIkV1cm9wZS9LYWxpbmluZ3JhZHxFRVQgRUVTVCBGRVR8LTIwIC0zMCAtMzB8MDEwMjB8MUJXbzAgMXFNMCBXTTAgOEh6MCIsIkV1cm9wZS9NaW5za3xFRVQgRUVTVCBGRVR8LTIwIC0zMCAtMzB8MDEwMnwxQldvMCAxcU0wIFdNMCIsIkV1cm9wZS9Nb3Njb3d8TVNLIE1TRCBNU0t8LTMwIC00MCAtNDB8MDEwMjB8MUJXbjAgMXFNMCBXTTAgOEh6MCIsIkV1cm9wZS9TYW1hcmF8U0FNVCBTQU1TVCBTQU1UfC00MCAtNDAgLTMwfDAxMjB8MUJXbTAgMXFOMCBXTTAiLCJFdXJvcGUvU2ltZmVyb3BvbHxFRVQgRUVTVCBNU0sgTVNLfC0yMCAtMzAgLTQwIC0zMHwwMTAxMDEwMTAyM3wxQldwMCAxcU0wIFdNMCAxcU0wIFdNMCAxcU0wIDExQTAgMW8wMCAxMXowIDFuVzAiLCJFdXJvcGUvVm9sZ29ncmFkfE1TSyBNU0t8LTMwIC00MHwwMTAxMHwxQlduMCAxcU0wIFdNMCA4SHowIiwiSFNUfEhTVHxhMHwwfCIsIkluZGlhbi9DaGFnb3N8SU9UfC02MHwwfCIsIkluZGlhbi9DaHJpc3RtYXN8Q1hUfC03MHwwfCIsIkluZGlhbi9Db2Nvc3xDQ1R8LTZ1fDB8IiwiSW5kaWFuL0tlcmd1ZWxlbnxURlR8LTUwfDB8IiwiSW5kaWFuL01haGV8U0NUfC00MHwwfCIsIkluZGlhbi9NYWxkaXZlc3xNVlR8LTUwfDB8IiwiSW5kaWFuL01hdXJpdGl1c3xNVVR8LTQwfDB8IiwiSW5kaWFuL1JldW5pb258UkVUfC00MHwwfCIsIkt3YWphbGVpbnxNSFR8LWMwfDB8IiwiTUVUfE1FVCBNRVNUfC0xMCAtMjB8MDEwMTAxMDEwMTAxMDEwMTAxMDEwMTB8MUJXcDAgMXFNMCBXTTAgMXFNMCBXTTAgMXFNMCAxMUEwIDFvMDAgMTFBMCAxbzAwIDExQTAgMW8wMCAxMUEwIDFxTTAgV00wIDFxTTAgV00wIDFxTTAgMTFBMCAxbzAwIDExQTAgMW8wMCIsIk5aLUNIQVR8Q0hBRFQgQ0hBU1R8LWRKIC1jSnwwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMHwxQzEyMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFhMDAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCIsIlBhY2lmaWMvQXBpYXxTU1QgU0RUIFdTRFQgV1NTVHxiMCBhMCAtZTAgLWQwfDAxMDEyMzIzMjMyMzIzMjMyMzIzMjMyfDFEYm4wIDFmZjAgMWEwMCBDSTAgQVEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFhMDAgMWZBMCAxYTAwIDFmQTAgMWEwMCAxZkEwIDFjTTAgMWZBMCAxYTAwIDFmQTAgMWEwMCIsIlBhY2lmaWMvQ2h1dWt8Q0hVVHwtYTB8MHwiLCJQYWNpZmljL0VmYXRlfFZVVHwtYjB8MHwiLCJQYWNpZmljL0VuZGVyYnVyeXxQSE9UfC1kMHwwfCIsIlBhY2lmaWMvRmFrYW9mb3xUS1QgVEtUfGIwIC1kMHwwMXwxR2ZuMCIsIlBhY2lmaWMvRmlqaXxGSlNUIEZKVHwtZDAgLWMwfDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwfDFCV2UwIDFvMDAgUmMwIDF3bzAgQW8wIDFOYzAgQW8wIDFRMDAgeHowIDFRMTAgeHowIDFRMTAgQW4wIDFOZDAgQW4wIDFOZDAgQW4wIDFOZDAgQW4wIDFRMTAgeHowIDFRMTAiLCJQYWNpZmljL0Z1bmFmdXRpfFRWVHwtYzB8MHwiLCJQYWNpZmljL0dhbGFwYWdvc3xHQUxUfDYwfDB8IiwiUGFjaWZpYy9HYW1iaWVyfEdBTVR8OTB8MHwiLCJQYWNpZmljL0d1YWRhbGNhbmFsfFNCVHwtYjB8MHwiLCJQYWNpZmljL0d1YW18Q2hTVHwtYTB8MHwiLCJQYWNpZmljL0tpcml0aW1hdGl8TElOVHwtZTB8MHwiLCJQYWNpZmljL0tvc3JhZXxLT1NUfC1iMHwwfCIsIlBhY2lmaWMvTWFycXVlc2FzfE1BUlR8OXV8MHwiLCJQYWNpZmljL01pZHdheXxTU1R8YjB8MHwiLCJQYWNpZmljL05hdXJ1fE5SVHwtYzB8MHwiLCJQYWNpZmljL05pdWV8TlVUfGIwfDB8IiwiUGFjaWZpYy9Ob3Jmb2xrfE5GVHwtYnV8MHwiLCJQYWNpZmljL05vdW1lYXxOQ1R8LWIwfDB8IiwiUGFjaWZpYy9QYWxhdXxQV1R8LTkwfDB8IiwiUGFjaWZpYy9Qb2hucGVpfFBPTlR8LWIwfDB8IiwiUGFjaWZpYy9Qb3J0X01vcmVzYnl8UEdUfC1hMHwwfCIsIlBhY2lmaWMvUmFyb3RvbmdhfENLVHxhMHwwfCIsIlBhY2lmaWMvVGFoaXRpfFRBSFR8YTB8MHwiLCJQYWNpZmljL1RhcmF3YXxHSUxUfC1jMHwwfCIsIlBhY2lmaWMvVG9uZ2F0YXB1fFRPVHwtZDB8MHwiLCJQYWNpZmljL1dha2V8V0FLVHwtYzB8MHwiLCJQYWNpZmljL1dhbGxpc3xXRlR8LWMwfDB8Il0sbGlua3M6WyJBZnJpY2EvQWJpZGphbnxBZnJpY2EvQWNjcmEiLCJBZnJpY2EvQWJpZGphbnxBZnJpY2EvQmFtYWtvIiwiQWZyaWNhL0FiaWRqYW58QWZyaWNhL0Jhbmp1bCIsIkFmcmljYS9BYmlkamFufEFmcmljYS9CaXNzYXUiLCJBZnJpY2EvQWJpZGphbnxBZnJpY2EvQ29uYWtyeSIsIkFmcmljYS9BYmlkamFufEFmcmljYS9EYWthciIsIkFmcmljYS9BYmlkamFufEFmcmljYS9GcmVldG93biIsIkFmcmljYS9BYmlkamFufEFmcmljYS9Mb21lIiwiQWZyaWNhL0FiaWRqYW58QWZyaWNhL01vbnJvdmlhIiwiQWZyaWNhL0FiaWRqYW58QWZyaWNhL05vdWFrY2hvdHQiLCJBZnJpY2EvQWJpZGphbnxBZnJpY2EvT3VhZ2Fkb3Vnb3UiLCJBZnJpY2EvQWJpZGphbnxBZnJpY2EvU2FvX1RvbWUiLCJBZnJpY2EvQWJpZGphbnxBZnJpY2EvVGltYnVrdHUiLCJBZnJpY2EvQWJpZGphbnxBbWVyaWNhL0Rhbm1hcmtzaGF2biIsIkFmcmljYS9BYmlkamFufEF0bGFudGljL1JleWtqYXZpayIsIkFmcmljYS9BYmlkamFufEF0bGFudGljL1N0X0hlbGVuYSIsIkFmcmljYS9BYmlkamFufEV0Yy9HTVQiLCJBZnJpY2EvQWJpZGphbnxFdGMvR01UKzAiLCJBZnJpY2EvQWJpZGphbnxFdGMvR01ULTAiLCJBZnJpY2EvQWJpZGphbnxFdGMvR01UMCIsIkFmcmljYS9BYmlkamFufEV0Yy9HcmVlbndpY2giLCJBZnJpY2EvQWJpZGphbnxHTVQiLCJBZnJpY2EvQWJpZGphbnxHTVQrMCIsIkFmcmljYS9BYmlkamFufEdNVC0wIiwiQWZyaWNhL0FiaWRqYW58R01UMCIsIkFmcmljYS9BYmlkamFufEdyZWVud2ljaCIsIkFmcmljYS9BYmlkamFufEljZWxhbmQiLCJBZnJpY2EvQWRkaXNfQWJhYmF8QWZyaWNhL0FzbWFyYSIsIkFmcmljYS9BZGRpc19BYmFiYXxBZnJpY2EvQXNtZXJhIiwiQWZyaWNhL0FkZGlzX0FiYWJhfEFmcmljYS9EYXJfZXNfU2FsYWFtIiwiQWZyaWNhL0FkZGlzX0FiYWJhfEFmcmljYS9Eamlib3V0aSIsIkFmcmljYS9BZGRpc19BYmFiYXxBZnJpY2EvSnViYSIsIkFmcmljYS9BZGRpc19BYmFiYXxBZnJpY2EvS2FtcGFsYSIsIkFmcmljYS9BZGRpc19BYmFiYXxBZnJpY2EvS2hhcnRvdW0iLCJBZnJpY2EvQWRkaXNfQWJhYmF8QWZyaWNhL01vZ2FkaXNodSIsIkFmcmljYS9BZGRpc19BYmFiYXxBZnJpY2EvTmFpcm9iaSIsIkFmcmljYS9BZGRpc19BYmFiYXxJbmRpYW4vQW50YW5hbmFyaXZvIiwiQWZyaWNhL0FkZGlzX0FiYWJhfEluZGlhbi9Db21vcm8iLCJBZnJpY2EvQWRkaXNfQWJhYmF8SW5kaWFuL01heW90dGUiLCJBZnJpY2EvQWxnaWVyc3xBZnJpY2EvVHVuaXMiLCJBZnJpY2EvQmFuZ3VpfEFmcmljYS9CcmF6emF2aWxsZSIsIkFmcmljYS9CYW5ndWl8QWZyaWNhL0RvdWFsYSIsIkFmcmljYS9CYW5ndWl8QWZyaWNhL0tpbnNoYXNhIiwiQWZyaWNhL0Jhbmd1aXxBZnJpY2EvTGFnb3MiLCJBZnJpY2EvQmFuZ3VpfEFmcmljYS9MaWJyZXZpbGxlIiwiQWZyaWNhL0Jhbmd1aXxBZnJpY2EvTHVhbmRhIiwiQWZyaWNhL0Jhbmd1aXxBZnJpY2EvTWFsYWJvIiwiQWZyaWNhL0Jhbmd1aXxBZnJpY2EvTmRqYW1lbmEiLCJBZnJpY2EvQmFuZ3VpfEFmcmljYS9OaWFtZXkiLCJBZnJpY2EvQmFuZ3VpfEFmcmljYS9Qb3J0by1Ob3ZvIiwiQWZyaWNhL0JsYW50eXJlfEFmcmljYS9CdWp1bWJ1cmEiLCJBZnJpY2EvQmxhbnR5cmV8QWZyaWNhL0dhYm9yb25lIiwiQWZyaWNhL0JsYW50eXJlfEFmcmljYS9IYXJhcmUiLCJBZnJpY2EvQmxhbnR5cmV8QWZyaWNhL0tpZ2FsaSIsIkFmcmljYS9CbGFudHlyZXxBZnJpY2EvTHVidW1iYXNoaSIsIkFmcmljYS9CbGFudHlyZXxBZnJpY2EvTHVzYWthIiwiQWZyaWNhL0JsYW50eXJlfEFmcmljYS9NYXB1dG8iLCJBZnJpY2EvQ2Fpcm98RWd5cHQiLCJBZnJpY2EvQ2FzYWJsYW5jYXxBZnJpY2EvRWxfQWFpdW4iLCJBZnJpY2EvQ2V1dGF8QXJjdGljL0xvbmd5ZWFyYnllbiIsIkFmcmljYS9DZXV0YXxBdGxhbnRpYy9KYW5fTWF5ZW4iLCJBZnJpY2EvQ2V1dGF8Q0VUIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9BbXN0ZXJkYW0iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0FuZG9ycmEiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0JlbGdyYWRlIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9CZXJsaW4iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0JyYXRpc2xhdmEiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0JydXNzZWxzIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9CdWRhcGVzdCIsIkFmcmljYS9DZXV0YXxFdXJvcGUvQnVzaW5nZW4iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0NvcGVuaGFnZW4iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL0dpYnJhbHRhciIsIkFmcmljYS9DZXV0YXxFdXJvcGUvTGp1YmxqYW5hIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9MdXhlbWJvdXJnIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9NYWRyaWQiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL01hbHRhIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9Nb25hY28iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL09zbG8iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL1BhcmlzIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9Qb2Rnb3JpY2EiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL1ByYWd1ZSIsIkFmcmljYS9DZXV0YXxFdXJvcGUvUm9tZSIsIkFmcmljYS9DZXV0YXxFdXJvcGUvU2FuX01hcmlubyIsIkFmcmljYS9DZXV0YXxFdXJvcGUvU2FyYWpldm8iLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL1Nrb3BqZSIsIkFmcmljYS9DZXV0YXxFdXJvcGUvU3RvY2tob2xtIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9UaXJhbmUiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL1ZhZHV6IiwiQWZyaWNhL0NldXRhfEV1cm9wZS9WYXRpY2FuIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9WaWVubmEiLCJBZnJpY2EvQ2V1dGF8RXVyb3BlL1dhcnNhdyIsIkFmcmljYS9DZXV0YXxFdXJvcGUvWmFncmViIiwiQWZyaWNhL0NldXRhfEV1cm9wZS9adXJpY2giLCJBZnJpY2EvQ2V1dGF8UG9sYW5kIiwiQWZyaWNhL0pvaGFubmVzYnVyZ3xBZnJpY2EvTWFzZXJ1IiwiQWZyaWNhL0pvaGFubmVzYnVyZ3xBZnJpY2EvTWJhYmFuZSIsIkFmcmljYS9Ucmlwb2xpfExpYnlhIiwiQW1lcmljYS9BZGFrfEFtZXJpY2EvQXRrYSIsIkFtZXJpY2EvQWRha3xVUy9BbGV1dGlhbiIsIkFtZXJpY2EvQW5jaG9yYWdlfEFtZXJpY2EvSnVuZWF1IiwiQW1lcmljYS9BbmNob3JhZ2V8QW1lcmljYS9Ob21lIiwiQW1lcmljYS9BbmNob3JhZ2V8QW1lcmljYS9TaXRrYSIsIkFtZXJpY2EvQW5jaG9yYWdlfEFtZXJpY2EvWWFrdXRhdCIsIkFtZXJpY2EvQW5jaG9yYWdlfFVTL0FsYXNrYSIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9BbnRpZ3VhIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0FydWJhIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0JhcmJhZG9zIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0JsYW5jLVNhYmxvbiIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9DdXJhY2FvIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0RvbWluaWNhIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0dyZW5hZGEiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvR3VhZGVsb3VwZSIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9LcmFsZW5kaWprIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL0xvd2VyX1ByaW5jZXMiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvTWFyaWdvdCIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9NYXJ0aW5pcXVlIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL01vbnRzZXJyYXQiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvUG9ydF9vZl9TcGFpbiIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9QdWVydG9fUmljbyIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9TYW50b19Eb21pbmdvIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL1N0X0JhcnRoZWxlbXkiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvU3RfS2l0dHMiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvU3RfTHVjaWEiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvU3RfVGhvbWFzIiwiQW1lcmljYS9Bbmd1aWxsYXxBbWVyaWNhL1N0X1ZpbmNlbnQiLCJBbWVyaWNhL0FuZ3VpbGxhfEFtZXJpY2EvVG9ydG9sYSIsIkFtZXJpY2EvQW5ndWlsbGF8QW1lcmljYS9WaXJnaW4iLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvQ2F0YW1hcmNhIiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvQXJnZW50aW5hL0NvbW9kUml2YWRhdmlhIiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvQXJnZW50aW5hL0NvcmRvYmEiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvSnVqdXkiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvTGFfUmlvamEiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvTWVuZG96YSIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlc3xBbWVyaWNhL0FyZ2VudGluYS9SaW9fR2FsbGVnb3MiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvU2FsdGEiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvU2FuX0p1YW4iLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvU2FuX0x1aXMiLCJBbWVyaWNhL0FyZ2VudGluYS9CdWVub3NfQWlyZXN8QW1lcmljYS9BcmdlbnRpbmEvVHVjdW1hbiIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlc3xBbWVyaWNhL0FyZ2VudGluYS9Vc2h1YWlhIiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvQnVlbm9zX0FpcmVzIiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvQ2F0YW1hcmNhIiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvQ29yZG9iYSIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlc3xBbWVyaWNhL0p1anV5IiwiQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzfEFtZXJpY2EvTWVuZG96YSIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlc3xBbWVyaWNhL1Jvc2FyaW8iLCJBbWVyaWNhL0F0aWtva2FufEFtZXJpY2EvQ2F5bWFuIiwiQW1lcmljYS9BdGlrb2thbnxBbWVyaWNhL0NvcmFsX0hhcmJvdXIiLCJBbWVyaWNhL0F0aWtva2FufEFtZXJpY2EvSmFtYWljYSIsIkFtZXJpY2EvQXRpa29rYW58QW1lcmljYS9QYW5hbWEiLCJBbWVyaWNhL0F0aWtva2FufEVTVCIsIkFtZXJpY2EvQXRpa29rYW58SmFtYWljYSIsIkFtZXJpY2EvQmVsZW18QW1lcmljYS9Gb3J0YWxlemEiLCJBbWVyaWNhL0JlbGVtfEFtZXJpY2EvTWFjZWlvIiwiQW1lcmljYS9CZWxlbXxBbWVyaWNhL1JlY2lmZSIsIkFtZXJpY2EvQmVsZW18QW1lcmljYS9TYW50YXJlbSIsIkFtZXJpY2EvQmVsaXplfEFtZXJpY2EvQ29zdGFfUmljYSIsIkFtZXJpY2EvQmVsaXplfEFtZXJpY2EvRWxfU2FsdmFkb3IiLCJBbWVyaWNhL0JlbGl6ZXxBbWVyaWNhL0d1YXRlbWFsYSIsIkFtZXJpY2EvQmVsaXplfEFtZXJpY2EvTWFuYWd1YSIsIkFtZXJpY2EvQmVsaXplfEFtZXJpY2EvUmVnaW5hIiwiQW1lcmljYS9CZWxpemV8QW1lcmljYS9Td2lmdF9DdXJyZW50IiwiQW1lcmljYS9CZWxpemV8QW1lcmljYS9UZWd1Y2lnYWxwYSIsIkFtZXJpY2EvQmVsaXplfENhbmFkYS9FYXN0LVNhc2thdGNoZXdhbiIsIkFtZXJpY2EvQmVsaXplfENhbmFkYS9TYXNrYXRjaGV3YW4iLCJBbWVyaWNhL0JvYV9WaXN0YXxBbWVyaWNhL01hbmF1cyIsIkFtZXJpY2EvQm9hX1Zpc3RhfEFtZXJpY2EvUG9ydG9fVmVsaG8iLCJBbWVyaWNhL0JvYV9WaXN0YXxCcmF6aWwvV2VzdCIsIkFtZXJpY2EvQm9pc2V8QW1lcmljYS9DYW1icmlkZ2VfQmF5IiwiQW1lcmljYS9Cb2lzZXxBbWVyaWNhL0RlbnZlciIsIkFtZXJpY2EvQm9pc2V8QW1lcmljYS9FZG1vbnRvbiIsIkFtZXJpY2EvQm9pc2V8QW1lcmljYS9JbnV2aWsiLCJBbWVyaWNhL0JvaXNlfEFtZXJpY2EvT2ppbmFnYSIsIkFtZXJpY2EvQm9pc2V8QW1lcmljYS9TaGlwcm9jayIsIkFtZXJpY2EvQm9pc2V8QW1lcmljYS9ZZWxsb3drbmlmZSIsIkFtZXJpY2EvQm9pc2V8Q2FuYWRhL01vdW50YWluIiwiQW1lcmljYS9Cb2lzZXxNU1Q3TURUIiwiQW1lcmljYS9Cb2lzZXxOYXZham8iLCJBbWVyaWNhL0JvaXNlfFVTL01vdW50YWluIiwiQW1lcmljYS9DYW1wb19HcmFuZGV8QW1lcmljYS9DdWlhYmEiLCJBbWVyaWNhL0NhbmN1bnxBbWVyaWNhL01lcmlkYSIsIkFtZXJpY2EvQ2FuY3VufEFtZXJpY2EvTWV4aWNvX0NpdHkiLCJBbWVyaWNhL0NhbmN1bnxBbWVyaWNhL01vbnRlcnJleSIsIkFtZXJpY2EvQ2FuY3VufE1leGljby9HZW5lcmFsIiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvSW5kaWFuYS9Lbm94IiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvSW5kaWFuYS9UZWxsX0NpdHkiLCJBbWVyaWNhL0NoaWNhZ298QW1lcmljYS9Lbm94X0lOIiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvTWF0YW1vcm9zIiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvTWVub21pbmVlIiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvTm9ydGhfRGFrb3RhL0NlbnRlciIsIkFtZXJpY2EvQ2hpY2Fnb3xBbWVyaWNhL05vcnRoX0Rha290YS9OZXdfU2FsZW0iLCJBbWVyaWNhL0NoaWNhZ298QW1lcmljYS9SYWlueV9SaXZlciIsIkFtZXJpY2EvQ2hpY2Fnb3xBbWVyaWNhL1Jhbmtpbl9JbmxldCIsIkFtZXJpY2EvQ2hpY2Fnb3xBbWVyaWNhL1Jlc29sdXRlIiwiQW1lcmljYS9DaGljYWdvfEFtZXJpY2EvV2lubmlwZWciLCJBbWVyaWNhL0NoaWNhZ298Q1NUNkNEVCIsIkFtZXJpY2EvQ2hpY2Fnb3xDYW5hZGEvQ2VudHJhbCIsIkFtZXJpY2EvQ2hpY2Fnb3xVUy9DZW50cmFsIiwiQW1lcmljYS9DaGljYWdvfFVTL0luZGlhbmEtU3RhcmtlIiwiQW1lcmljYS9DaGlodWFodWF8QW1lcmljYS9NYXphdGxhbiIsIkFtZXJpY2EvQ2hpaHVhaHVhfE1leGljby9CYWphU3VyIiwiQW1lcmljYS9DcmVzdG9ufEFtZXJpY2EvRGF3c29uX0NyZWVrIiwiQW1lcmljYS9DcmVzdG9ufEFtZXJpY2EvSGVybW9zaWxsbyIsIkFtZXJpY2EvQ3Jlc3RvbnxBbWVyaWNhL1Bob2VuaXgiLCJBbWVyaWNhL0NyZXN0b258TVNUIiwiQW1lcmljYS9DcmVzdG9ufFVTL0FyaXpvbmEiLCJBbWVyaWNhL0Rhd3NvbnxBbWVyaWNhL0Vuc2VuYWRhIiwiQW1lcmljYS9EYXdzb258QW1lcmljYS9Mb3NfQW5nZWxlcyIsIkFtZXJpY2EvRGF3c29ufEFtZXJpY2EvVGlqdWFuYSIsIkFtZXJpY2EvRGF3c29ufEFtZXJpY2EvVmFuY291dmVyIiwiQW1lcmljYS9EYXdzb258QW1lcmljYS9XaGl0ZWhvcnNlIiwiQW1lcmljYS9EYXdzb258Q2FuYWRhL1BhY2lmaWMiLCJBbWVyaWNhL0Rhd3NvbnxDYW5hZGEvWXVrb24iLCJBbWVyaWNhL0Rhd3NvbnxNZXhpY28vQmFqYU5vcnRlIiwiQW1lcmljYS9EYXdzb258UFNUOFBEVCIsIkFtZXJpY2EvRGF3c29ufFVTL1BhY2lmaWMiLCJBbWVyaWNhL0Rhd3NvbnxVUy9QYWNpZmljLU5ldyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0ZvcnRfV2F5bmUiLCJBbWVyaWNhL0RldHJvaXR8QW1lcmljYS9JbmRpYW5hL0luZGlhbmFwb2xpcyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0luZGlhbmEvTWFyZW5nbyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0luZGlhbmEvUGV0ZXJzYnVyZyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0luZGlhbmEvVmV2YXkiLCJBbWVyaWNhL0RldHJvaXR8QW1lcmljYS9JbmRpYW5hL1ZpbmNlbm5lcyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0luZGlhbmEvV2luYW1hYyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0luZGlhbmFwb2xpcyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0lxYWx1aXQiLCJBbWVyaWNhL0RldHJvaXR8QW1lcmljYS9LZW50dWNreS9Mb3Vpc3ZpbGxlIiwiQW1lcmljYS9EZXRyb2l0fEFtZXJpY2EvS2VudHVja3kvTW9udGljZWxsbyIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL0xvdWlzdmlsbGUiLCJBbWVyaWNhL0RldHJvaXR8QW1lcmljYS9Nb250cmVhbCIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL05hc3NhdSIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL05ld19Zb3JrIiwiQW1lcmljYS9EZXRyb2l0fEFtZXJpY2EvTmlwaWdvbiIsIkFtZXJpY2EvRGV0cm9pdHxBbWVyaWNhL1BhbmduaXJ0dW5nIiwiQW1lcmljYS9EZXRyb2l0fEFtZXJpY2EvVGh1bmRlcl9CYXkiLCJBbWVyaWNhL0RldHJvaXR8QW1lcmljYS9Ub3JvbnRvIiwiQW1lcmljYS9EZXRyb2l0fENhbmFkYS9FYXN0ZXJuIiwiQW1lcmljYS9EZXRyb2l0fEVTVDVFRFQiLCJBbWVyaWNhL0RldHJvaXR8VVMvRWFzdC1JbmRpYW5hIiwiQW1lcmljYS9EZXRyb2l0fFVTL0Vhc3Rlcm4iLCJBbWVyaWNhL0RldHJvaXR8VVMvTWljaGlnYW4iLCJBbWVyaWNhL0VpcnVuZXBlfEFtZXJpY2EvUG9ydG9fQWNyZSIsIkFtZXJpY2EvRWlydW5lcGV8QW1lcmljYS9SaW9fQnJhbmNvIiwiQW1lcmljYS9FaXJ1bmVwZXxCcmF6aWwvQWNyZSIsIkFtZXJpY2EvR2xhY2VfQmF5fEFtZXJpY2EvSGFsaWZheCIsIkFtZXJpY2EvR2xhY2VfQmF5fEFtZXJpY2EvTW9uY3RvbiIsIkFtZXJpY2EvR2xhY2VfQmF5fEFtZXJpY2EvVGh1bGUiLCJBbWVyaWNhL0dsYWNlX0JheXxBdGxhbnRpYy9CZXJtdWRhIiwiQW1lcmljYS9HbGFjZV9CYXl8Q2FuYWRhL0F0bGFudGljIiwiQW1lcmljYS9IYXZhbmF8Q3ViYSIsIkFtZXJpY2EvTWV0bGFrYXRsYXxQYWNpZmljL1BpdGNhaXJuIiwiQW1lcmljYS9Ob3JvbmhhfEJyYXppbC9EZU5vcm9uaGEiLCJBbWVyaWNhL1NhbnRpYWdvfEFudGFyY3RpY2EvUGFsbWVyIiwiQW1lcmljYS9TYW50aWFnb3xDaGlsZS9Db250aW5lbnRhbCIsIkFtZXJpY2EvU2FvX1BhdWxvfEJyYXppbC9FYXN0IiwiQW1lcmljYS9TdF9Kb2huc3xDYW5hZGEvTmV3Zm91bmRsYW5kIiwiQW50YXJjdGljYS9NY011cmRvfEFudGFyY3RpY2EvU291dGhfUG9sZSIsIkFudGFyY3RpY2EvTWNNdXJkb3xOWiIsIkFudGFyY3RpY2EvTWNNdXJkb3xQYWNpZmljL0F1Y2tsYW5kIiwiQXNpYS9BZGVufEFzaWEvQmFnaGRhZCIsIkFzaWEvQWRlbnxBc2lhL0JhaHJhaW4iLCJBc2lhL0FkZW58QXNpYS9LdXdhaXQiLCJBc2lhL0FkZW58QXNpYS9RYXRhciIsIkFzaWEvQWRlbnxBc2lhL1JpeWFkaCIsIkFzaWEvQXF0YXV8QXNpYS9BcXRvYmUiLCJBc2lhL0FzaGdhYmF0fEFzaWEvQXNoa2hhYmFkIiwiQXNpYS9CYW5na29rfEFzaWEvSG9fQ2hpX01pbmgiLCJBc2lhL0Jhbmdrb2t8QXNpYS9QaG5vbV9QZW5oIiwiQXNpYS9CYW5na29rfEFzaWEvU2FpZ29uIiwiQXNpYS9CYW5na29rfEFzaWEvVmllbnRpYW5lIiwiQXNpYS9DYWxjdXR0YXxBc2lhL0NvbG9tYm8iLCJBc2lhL0NhbGN1dHRhfEFzaWEvS29sa2F0YSIsIkFzaWEvQ2hvbmdxaW5nfEFzaWEvQ2h1bmdraW5nIiwiQXNpYS9DaG9uZ3Fpbmd8QXNpYS9IYXJiaW4iLCJBc2lhL0Nob25ncWluZ3xBc2lhL01hY2FvIiwiQXNpYS9DaG9uZ3Fpbmd8QXNpYS9NYWNhdSIsIkFzaWEvQ2hvbmdxaW5nfEFzaWEvU2hhbmdoYWkiLCJBc2lhL0Nob25ncWluZ3xBc2lhL1RhaXBlaSIsIkFzaWEvQ2hvbmdxaW5nfFBSQyIsIkFzaWEvQ2hvbmdxaW5nfFJPQyIsIkFzaWEvRGFjY2F8QXNpYS9EaGFrYSIsIkFzaWEvRHViYWl8QXNpYS9NdXNjYXQiLCJBc2lhL0hvbmdfS29uZ3xIb25na29uZyIsIkFzaWEvSXN0YW5idWx8RXVyb3BlL0lzdGFuYnVsIiwiQXNpYS9Jc3RhbmJ1bHxUdXJrZXkiLCJBc2lhL0pha2FydGF8QXNpYS9Qb250aWFuYWsiLCJBc2lhL0plcnVzYWxlbXxBc2lhL1RlbF9Bdml2IiwiQXNpYS9KZXJ1c2FsZW18SXNyYWVsIiwiQXNpYS9LYXNoZ2FyfEFzaWEvVXJ1bXFpIiwiQXNpYS9LYXRobWFuZHV8QXNpYS9LYXRtYW5kdSIsIkFzaWEvS3VhbGFfTHVtcHVyfEFzaWEvS3VjaGluZyIsIkFzaWEvTWFrYXNzYXJ8QXNpYS9VanVuZ19QYW5kYW5nIiwiQXNpYS9OaWNvc2lhfEVFVCIsIkFzaWEvTmljb3NpYXxFdXJvcGUvQXRoZW5zIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9CdWNoYXJlc3QiLCJBc2lhL05pY29zaWF8RXVyb3BlL0NoaXNpbmF1IiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9IZWxzaW5raSIsIkFzaWEvTmljb3NpYXxFdXJvcGUvS2lldiIsIkFzaWEvTmljb3NpYXxFdXJvcGUvTWFyaWVoYW1uIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9OaWNvc2lhIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9SaWdhIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9Tb2ZpYSIsIkFzaWEvTmljb3NpYXxFdXJvcGUvVGFsbGlubiIsIkFzaWEvTmljb3NpYXxFdXJvcGUvVGlyYXNwb2wiLCJBc2lhL05pY29zaWF8RXVyb3BlL1V6aGdvcm9kIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9WaWxuaXVzIiwiQXNpYS9OaWNvc2lhfEV1cm9wZS9aYXBvcm96aHllIiwiQXNpYS9QeW9uZ3lhbmd8QXNpYS9TZW91bCIsIkFzaWEvUHlvbmd5YW5nfFJPSyIsIkFzaWEvU2FtYXJrYW5kfEFzaWEvVGFzaGtlbnQiLCJBc2lhL1NpbmdhcG9yZXxTaW5nYXBvcmUiLCJBc2lhL1RlaHJhbnxJcmFuIiwiQXNpYS9UaGltYnV8QXNpYS9UaGltcGh1IiwiQXNpYS9Ub2t5b3xKYXBhbiIsIkFzaWEvVWxhYW5iYWF0YXJ8QXNpYS9VbGFuX0JhdG9yIiwiQXRsYW50aWMvQ2FuYXJ5fEF0bGFudGljL0ZhZXJvZSIsIkF0bGFudGljL0NhbmFyeXxBdGxhbnRpYy9GYXJvZSIsIkF0bGFudGljL0NhbmFyeXxBdGxhbnRpYy9NYWRlaXJhIiwiQXRsYW50aWMvQ2FuYXJ5fEV1cm9wZS9MaXNib24iLCJBdGxhbnRpYy9DYW5hcnl8UG9ydHVnYWwiLCJBdGxhbnRpYy9DYW5hcnl8V0VUIiwiQXVzdHJhbGlhL0FDVHxBdXN0cmFsaWEvQ2FuYmVycmEiLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9DdXJyaWUiLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9Ib2JhcnQiLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9NZWxib3VybmUiLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9OU1ciLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9TeWRuZXkiLCJBdXN0cmFsaWEvQUNUfEF1c3RyYWxpYS9UYXNtYW5pYSIsIkF1c3RyYWxpYS9BQ1R8QXVzdHJhbGlhL1ZpY3RvcmlhIiwiQXVzdHJhbGlhL0FkZWxhaWRlfEF1c3RyYWxpYS9Ccm9rZW5fSGlsbCIsIkF1c3RyYWxpYS9BZGVsYWlkZXxBdXN0cmFsaWEvU291dGgiLCJBdXN0cmFsaWEvQWRlbGFpZGV8QXVzdHJhbGlhL1lhbmNvd2lubmEiLCJBdXN0cmFsaWEvQnJpc2JhbmV8QXVzdHJhbGlhL0xpbmRlbWFuIiwiQXVzdHJhbGlhL0JyaXNiYW5lfEF1c3RyYWxpYS9RdWVlbnNsYW5kIiwiQXVzdHJhbGlhL0RhcndpbnxBdXN0cmFsaWEvTm9ydGgiLCJBdXN0cmFsaWEvTEhJfEF1c3RyYWxpYS9Mb3JkX0hvd2UiLCJBdXN0cmFsaWEvUGVydGh8QXVzdHJhbGlhL1dlc3QiLCJDaGlsZS9FYXN0ZXJJc2xhbmR8UGFjaWZpYy9FYXN0ZXIiLCJFaXJlfEV1cm9wZS9EdWJsaW4iLCJFdGMvVUNUfFVDVCIsIkV0Yy9VVEN8RXRjL1VuaXZlcnNhbCIsIkV0Yy9VVEN8RXRjL1p1bHUiLCJFdGMvVVRDfFVUQyIsIkV0Yy9VVEN8VW5pdmVyc2FsIiwiRXRjL1VUQ3xadWx1IiwiRXVyb3BlL0JlbGZhc3R8RXVyb3BlL0d1ZXJuc2V5IiwiRXVyb3BlL0JlbGZhc3R8RXVyb3BlL0lzbGVfb2ZfTWFuIiwiRXVyb3BlL0JlbGZhc3R8RXVyb3BlL0plcnNleSIsIkV1cm9wZS9CZWxmYXN0fEV1cm9wZS9Mb25kb24iLCJFdXJvcGUvQmVsZmFzdHxHQiIsIkV1cm9wZS9CZWxmYXN0fEdCLUVpcmUiLCJFdXJvcGUvTW9zY293fFctU1UiLCJIU1R8UGFjaWZpYy9Ib25vbHVsdSIsIkhTVHxQYWNpZmljL0pvaG5zdG9uIiwiSFNUfFVTL0hhd2FpaSIsIkt3YWphbGVpbnxQYWNpZmljL0t3YWphbGVpbiIsIkt3YWphbGVpbnxQYWNpZmljL01hanVybyIsIk5aLUNIQVR8UGFjaWZpYy9DaGF0aGFtIiwiUGFjaWZpYy9DaHV1a3xQYWNpZmljL1RydWsiLCJQYWNpZmljL0NodXVrfFBhY2lmaWMvWWFwIiwiUGFjaWZpYy9HdWFtfFBhY2lmaWMvU2FpcGFuIiwiUGFjaWZpYy9NaWR3YXl8UGFjaWZpYy9QYWdvX1BhZ28iLCJQYWNpZmljL01pZHdheXxQYWNpZmljL1NhbW9hIiwiUGFjaWZpYy9NaWR3YXl8VVMvU2Ftb2EiLCJQYWNpZmljL1BvaG5wZWl8UGFjaWZpYy9Qb25hcGUiXX0pLG1vbWVudAp9KSxmdW5jdGlvbih3aW5kb3csZG9jdW1lbnQsdW5kZWZpbmVkKXtmdW5jdGlvbiBtaW5FcnIobW9kdWxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbWVzc2FnZSxpLGNvZGU9YXJndW1lbnRzWzBdLHByZWZpeD0iWyIrKG1vZHVsZT9tb2R1bGUrIjoiOiIiKStjb2RlKyJdICIsdGVtcGxhdGU9YXJndW1lbnRzWzFdLHRlbXBsYXRlQXJncz1hcmd1bWVudHMsc3RyaW5naWZ5PWZ1bmN0aW9uKG9iail7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIG9iaj9vYmoudG9TdHJpbmcoKS5yZXBsYWNlKC8gXHtbXHNcU10qJC8sIiIpOiJ1bmRlZmluZWQiPT10eXBlb2Ygb2JqPyJ1bmRlZmluZWQiOiJzdHJpbmciIT10eXBlb2Ygb2JqP0pTT04uc3RyaW5naWZ5KG9iaik6b2JqfTtmb3IobWVzc2FnZT1wcmVmaXgrdGVtcGxhdGUucmVwbGFjZSgvXHtcZCtcfS9nLGZ1bmN0aW9uKG1hdGNoKXt2YXIgYXJnLGluZGV4PSttYXRjaC5zbGljZSgxLC0xKTtyZXR1cm4gaW5kZXgrMjx0ZW1wbGF0ZUFyZ3MubGVuZ3RoPyhhcmc9dGVtcGxhdGVBcmdzW2luZGV4KzJdLCJmdW5jdGlvbiI9PXR5cGVvZiBhcmc/YXJnLnRvU3RyaW5nKCkucmVwbGFjZSgvID9ce1tcc1xTXSokLywiIik6InVuZGVmaW5lZCI9PXR5cGVvZiBhcmc/InVuZGVmaW5lZCI6InN0cmluZyIhPXR5cGVvZiBhcmc/dG9Kc29uKGFyZyk6YXJnKTptYXRjaH0pLG1lc3NhZ2U9bWVzc2FnZSsiXG5odHRwOi8vZXJyb3JzLmFuZ3VsYXJqcy5vcmcvMS4yLjI1LyIrKG1vZHVsZT9tb2R1bGUrIi8iOiIiKStjb2RlLGk9MjtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKW1lc3NhZ2U9bWVzc2FnZSsoMj09aT8iPyI6IiYiKSsicCIrKGktMikrIj0iK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnkoYXJndW1lbnRzW2ldKSk7cmV0dXJuIG5ldyBFcnJvcihtZXNzYWdlKX19ZnVuY3Rpb24gaXNBcnJheUxpa2Uob2JqKXtpZihudWxsPT1vYmp8fGlzV2luZG93KG9iaikpcmV0dXJuITE7dmFyIGxlbmd0aD1vYmoubGVuZ3RoO3JldHVybiAxPT09b2JqLm5vZGVUeXBlJiZsZW5ndGg/ITA6aXNTdHJpbmcob2JqKXx8aXNBcnJheShvYmopfHwwPT09bGVuZ3RofHwibnVtYmVyIj09dHlwZW9mIGxlbmd0aCYmbGVuZ3RoPjAmJmxlbmd0aC0xIGluIG9ian1mdW5jdGlvbiBmb3JFYWNoKG9iaixpdGVyYXRvcixjb250ZXh0KXt2YXIga2V5O2lmKG9iailpZihpc0Z1bmN0aW9uKG9iaikpZm9yKGtleSBpbiBvYmopInByb3RvdHlwZSI9PWtleXx8Imxlbmd0aCI9PWtleXx8Im5hbWUiPT1rZXl8fG9iai5oYXNPd25Qcm9wZXJ0eSYmIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpfHxpdGVyYXRvci5jYWxsKGNvbnRleHQsb2JqW2tleV0sa2V5KTtlbHNlIGlmKGlzQXJyYXkob2JqKXx8aXNBcnJheUxpa2Uob2JqKSlmb3Ioa2V5PTA7a2V5PG9iai5sZW5ndGg7a2V5KyspaXRlcmF0b3IuY2FsbChjb250ZXh0LG9ialtrZXldLGtleSk7ZWxzZSBpZihvYmouZm9yRWFjaCYmb2JqLmZvckVhY2ghPT1mb3JFYWNoKW9iai5mb3JFYWNoKGl0ZXJhdG9yLGNvbnRleHQpO2Vsc2UgZm9yKGtleSBpbiBvYmopb2JqLmhhc093blByb3BlcnR5KGtleSkmJml0ZXJhdG9yLmNhbGwoY29udGV4dCxvYmpba2V5XSxrZXkpO3JldHVybiBvYmp9ZnVuY3Rpb24gc29ydGVkS2V5cyhvYmope3ZhciBrZXlzPVtdO2Zvcih2YXIga2V5IGluIG9iailvYmouaGFzT3duUHJvcGVydHkoa2V5KSYma2V5cy5wdXNoKGtleSk7cmV0dXJuIGtleXMuc29ydCgpfWZ1bmN0aW9uIGZvckVhY2hTb3J0ZWQob2JqLGl0ZXJhdG9yLGNvbnRleHQpe2Zvcih2YXIga2V5cz1zb3J0ZWRLZXlzKG9iaiksaT0wO2k8a2V5cy5sZW5ndGg7aSsrKWl0ZXJhdG9yLmNhbGwoY29udGV4dCxvYmpba2V5c1tpXV0sa2V5c1tpXSk7cmV0dXJuIGtleXN9ZnVuY3Rpb24gcmV2ZXJzZVBhcmFtcyhpdGVyYXRvckZuKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUsa2V5KXtpdGVyYXRvckZuKGtleSx2YWx1ZSl9fWZ1bmN0aW9uIG5leHRVaWQoKXtmb3IodmFyIGRpZ2l0LGluZGV4PXVpZC5sZW5ndGg7aW5kZXg7KXtpZihpbmRleC0tLGRpZ2l0PXVpZFtpbmRleF0uY2hhckNvZGVBdCgwKSw1Nz09ZGlnaXQpcmV0dXJuIHVpZFtpbmRleF09IkEiLHVpZC5qb2luKCIiKTtpZig5MCE9ZGlnaXQpcmV0dXJuIHVpZFtpbmRleF09U3RyaW5nLmZyb21DaGFyQ29kZShkaWdpdCsxKSx1aWQuam9pbigiIik7dWlkW2luZGV4XT0iMCJ9cmV0dXJuIHVpZC51bnNoaWZ0KCIwIiksdWlkLmpvaW4oIiIpfWZ1bmN0aW9uIHNldEhhc2hLZXkob2JqLGgpe2g/b2JqLiQkaGFzaEtleT1oOmRlbGV0ZSBvYmouJCRoYXNoS2V5fWZ1bmN0aW9uIGV4dGVuZChkc3Qpe3ZhciBoPWRzdC4kJGhhc2hLZXk7cmV0dXJuIGZvckVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKG9iail7b2JqIT09ZHN0JiZmb3JFYWNoKG9iaixmdW5jdGlvbih2YWx1ZSxrZXkpe2RzdFtrZXldPXZhbHVlfSl9KSxzZXRIYXNoS2V5KGRzdCxoKSxkc3R9ZnVuY3Rpb24gaW50KHN0cil7cmV0dXJuIHBhcnNlSW50KHN0ciwxMCl9ZnVuY3Rpb24gaW5oZXJpdChwYXJlbnQsZXh0cmEpe3JldHVybiBleHRlbmQobmV3KGV4dGVuZChmdW5jdGlvbigpe30se3Byb3RvdHlwZTpwYXJlbnR9KSksZXh0cmEpfWZ1bmN0aW9uIG5vb3AoKXt9ZnVuY3Rpb24gaWRlbnRpdHkoJCl7cmV0dXJuICR9ZnVuY3Rpb24gdmFsdWVGbih2YWx1ZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZhbHVlfX1mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWx1ZSl7cmV0dXJuInVuZGVmaW5lZCI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc0RlZmluZWQodmFsdWUpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgdmFsdWV9ZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpe3JldHVybiBudWxsIT12YWx1ZSYmIm9iamVjdCI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc051bWJlcih2YWx1ZSl7cmV0dXJuIm51bWJlciI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc0RhdGUodmFsdWUpe3JldHVybiJbb2JqZWN0IERhdGVdIj09PXRvU3RyaW5nLmNhbGwodmFsdWUpfWZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZX1mdW5jdGlvbiBpc1JlZ0V4cCh2YWx1ZSl7cmV0dXJuIltvYmplY3QgUmVnRXhwXSI9PT10b1N0cmluZy5jYWxsKHZhbHVlKX1mdW5jdGlvbiBpc1dpbmRvdyhvYmope3JldHVybiBvYmomJm9iai5kb2N1bWVudCYmb2JqLmxvY2F0aW9uJiZvYmouYWxlcnQmJm9iai5zZXRJbnRlcnZhbH1mdW5jdGlvbiBpc1Njb3BlKG9iail7cmV0dXJuIG9iaiYmb2JqLiRldmFsQXN5bmMmJm9iai4kd2F0Y2h9ZnVuY3Rpb24gaXNGaWxlKG9iail7cmV0dXJuIltvYmplY3QgRmlsZV0iPT09dG9TdHJpbmcuY2FsbChvYmopfWZ1bmN0aW9uIGlzQmxvYihvYmope3JldHVybiJbb2JqZWN0IEJsb2JdIj09PXRvU3RyaW5nLmNhbGwob2JqKX1mdW5jdGlvbiBpc1Byb21pc2VMaWtlKG9iail7cmV0dXJuIG9iaiYmaXNGdW5jdGlvbihvYmoudGhlbil9ZnVuY3Rpb24gaXNFbGVtZW50KG5vZGUpe3JldHVybiEoIW5vZGV8fCEobm9kZS5ub2RlTmFtZXx8bm9kZS5wcm9wJiZub2RlLmF0dHImJm5vZGUuZmluZCkpfWZ1bmN0aW9uIG1hcChvYmosaXRlcmF0b3IsY29udGV4dCl7dmFyIHJlc3VsdHM9W107cmV0dXJuIGZvckVhY2gob2JqLGZ1bmN0aW9uKHZhbHVlLGluZGV4LGxpc3Qpe3Jlc3VsdHMucHVzaChpdGVyYXRvci5jYWxsKGNvbnRleHQsdmFsdWUsaW5kZXgsbGlzdCkpfSkscmVzdWx0c31mdW5jdGlvbiBpbmNsdWRlcyhhcnJheSxvYmope3JldHVybi0xIT1pbmRleE9mKGFycmF5LG9iail9ZnVuY3Rpb24gaW5kZXhPZihhcnJheSxvYmope2lmKGFycmF5LmluZGV4T2YpcmV0dXJuIGFycmF5LmluZGV4T2Yob2JqKTtmb3IodmFyIGk9MDtpPGFycmF5Lmxlbmd0aDtpKyspaWYob2JqPT09YXJyYXlbaV0pcmV0dXJuIGk7cmV0dXJuLTF9ZnVuY3Rpb24gYXJyYXlSZW1vdmUoYXJyYXksdmFsdWUpe3ZhciBpbmRleD1pbmRleE9mKGFycmF5LHZhbHVlKTtyZXR1cm4gaW5kZXg+PTAmJmFycmF5LnNwbGljZShpbmRleCwxKSx2YWx1ZX1mdW5jdGlvbiBjb3B5KHNvdXJjZSxkZXN0aW5hdGlvbixzdGFja1NvdXJjZSxzdGFja0Rlc3Qpe2lmKGlzV2luZG93KHNvdXJjZSl8fGlzU2NvcGUoc291cmNlKSl0aHJvdyBuZ01pbkVycigiY3B3cyIsIkNhbid0IGNvcHkhIE1ha2luZyBjb3BpZXMgb2YgV2luZG93IG9yIFNjb3BlIGluc3RhbmNlcyBpcyBub3Qgc3VwcG9ydGVkLiIpO2lmKGRlc3RpbmF0aW9uKXtpZihzb3VyY2U9PT1kZXN0aW5hdGlvbil0aHJvdyBuZ01pbkVycigiY3BpIiwiQ2FuJ3QgY29weSEgU291cmNlIGFuZCBkZXN0aW5hdGlvbiBhcmUgaWRlbnRpY2FsLiIpO2lmKHN0YWNrU291cmNlPXN0YWNrU291cmNlfHxbXSxzdGFja0Rlc3Q9c3RhY2tEZXN0fHxbXSxpc09iamVjdChzb3VyY2UpKXt2YXIgaW5kZXg9aW5kZXhPZihzdGFja1NvdXJjZSxzb3VyY2UpO2lmKC0xIT09aW5kZXgpcmV0dXJuIHN0YWNrRGVzdFtpbmRleF07c3RhY2tTb3VyY2UucHVzaChzb3VyY2UpLHN0YWNrRGVzdC5wdXNoKGRlc3RpbmF0aW9uKX12YXIgcmVzdWx0O2lmKGlzQXJyYXkoc291cmNlKSl7ZGVzdGluYXRpb24ubGVuZ3RoPTA7Zm9yKHZhciBpPTA7aTxzb3VyY2UubGVuZ3RoO2krKylyZXN1bHQ9Y29weShzb3VyY2VbaV0sbnVsbCxzdGFja1NvdXJjZSxzdGFja0Rlc3QpLGlzT2JqZWN0KHNvdXJjZVtpXSkmJihzdGFja1NvdXJjZS5wdXNoKHNvdXJjZVtpXSksc3RhY2tEZXN0LnB1c2gocmVzdWx0KSksZGVzdGluYXRpb24ucHVzaChyZXN1bHQpfWVsc2V7dmFyIGg9ZGVzdGluYXRpb24uJCRoYXNoS2V5O2lzQXJyYXkoZGVzdGluYXRpb24pP2Rlc3RpbmF0aW9uLmxlbmd0aD0wOmZvckVhY2goZGVzdGluYXRpb24sZnVuY3Rpb24odmFsdWUsa2V5KXtkZWxldGUgZGVzdGluYXRpb25ba2V5XX0pO2Zvcih2YXIga2V5IGluIHNvdXJjZSlyZXN1bHQ9Y29weShzb3VyY2Vba2V5XSxudWxsLHN0YWNrU291cmNlLHN0YWNrRGVzdCksaXNPYmplY3Qoc291cmNlW2tleV0pJiYoc3RhY2tTb3VyY2UucHVzaChzb3VyY2Vba2V5XSksc3RhY2tEZXN0LnB1c2gocmVzdWx0KSksZGVzdGluYXRpb25ba2V5XT1yZXN1bHQ7c2V0SGFzaEtleShkZXN0aW5hdGlvbixoKX19ZWxzZSBkZXN0aW5hdGlvbj1zb3VyY2Usc291cmNlJiYoaXNBcnJheShzb3VyY2UpP2Rlc3RpbmF0aW9uPWNvcHkoc291cmNlLFtdLHN0YWNrU291cmNlLHN0YWNrRGVzdCk6aXNEYXRlKHNvdXJjZSk/ZGVzdGluYXRpb249bmV3IERhdGUoc291cmNlLmdldFRpbWUoKSk6aXNSZWdFeHAoc291cmNlKT8oZGVzdGluYXRpb249bmV3IFJlZ0V4cChzb3VyY2Uuc291cmNlLHNvdXJjZS50b1N0cmluZygpLm1hdGNoKC9bXlwvXSokLylbMF0pLGRlc3RpbmF0aW9uLmxhc3RJbmRleD1zb3VyY2UubGFzdEluZGV4KTppc09iamVjdChzb3VyY2UpJiYoZGVzdGluYXRpb249Y29weShzb3VyY2Use30sc3RhY2tTb3VyY2Usc3RhY2tEZXN0KSkpO3JldHVybiBkZXN0aW5hdGlvbn1mdW5jdGlvbiBzaGFsbG93Q29weShzcmMsZHN0KXtpZihpc0FycmF5KHNyYykpe2RzdD1kc3R8fFtdO2Zvcih2YXIgaT0wO2k8c3JjLmxlbmd0aDtpKyspZHN0W2ldPXNyY1tpXX1lbHNlIGlmKGlzT2JqZWN0KHNyYykpe2RzdD1kc3R8fHt9O2Zvcih2YXIga2V5IGluIHNyYykhaGFzT3duUHJvcGVydHkuY2FsbChzcmMsa2V5KXx8IiQiPT09a2V5LmNoYXJBdCgwKSYmIiQiPT09a2V5LmNoYXJBdCgxKXx8KGRzdFtrZXldPXNyY1trZXldKX1yZXR1cm4gZHN0fHxzcmN9ZnVuY3Rpb24gZXF1YWxzKG8xLG8yKXtpZihvMT09PW8yKXJldHVybiEwO2lmKG51bGw9PT1vMXx8bnVsbD09PW8yKXJldHVybiExO2lmKG8xIT09bzEmJm8yIT09bzIpcmV0dXJuITA7dmFyIGxlbmd0aCxrZXksa2V5U2V0LHQxPXR5cGVvZiBvMSx0Mj10eXBlb2YgbzI7aWYodDE9PXQyJiYib2JqZWN0Ij09dDEpe2lmKCFpc0FycmF5KG8xKSl7aWYoaXNEYXRlKG8xKSlyZXR1cm4gaXNEYXRlKG8yKT9pc05hTihvMS5nZXRUaW1lKCkpJiZpc05hTihvMi5nZXRUaW1lKCkpfHxvMS5nZXRUaW1lKCk9PT1vMi5nZXRUaW1lKCk6ITE7aWYoaXNSZWdFeHAobzEpJiZpc1JlZ0V4cChvMikpcmV0dXJuIG8xLnRvU3RyaW5nKCk9PW8yLnRvU3RyaW5nKCk7aWYoaXNTY29wZShvMSl8fGlzU2NvcGUobzIpfHxpc1dpbmRvdyhvMSl8fGlzV2luZG93KG8yKXx8aXNBcnJheShvMikpcmV0dXJuITE7a2V5U2V0PXt9O2ZvcihrZXkgaW4gbzEpaWYoIiQiIT09a2V5LmNoYXJBdCgwKSYmIWlzRnVuY3Rpb24obzFba2V5XSkpe2lmKCFlcXVhbHMobzFba2V5XSxvMltrZXldKSlyZXR1cm4hMTtrZXlTZXRba2V5XT0hMH1mb3Ioa2V5IGluIG8yKWlmKCFrZXlTZXQuaGFzT3duUHJvcGVydHkoa2V5KSYmIiQiIT09a2V5LmNoYXJBdCgwKSYmbzJba2V5XSE9PXVuZGVmaW5lZCYmIWlzRnVuY3Rpb24obzJba2V5XSkpcmV0dXJuITE7cmV0dXJuITB9aWYoIWlzQXJyYXkobzIpKXJldHVybiExO2lmKChsZW5ndGg9bzEubGVuZ3RoKT09bzIubGVuZ3RoKXtmb3Ioa2V5PTA7bGVuZ3RoPmtleTtrZXkrKylpZighZXF1YWxzKG8xW2tleV0sbzJba2V5XSkpcmV0dXJuITE7cmV0dXJuITB9fXJldHVybiExfWZ1bmN0aW9uIGNvbmNhdChhcnJheTEsYXJyYXkyLGluZGV4KXtyZXR1cm4gYXJyYXkxLmNvbmNhdChzbGljZS5jYWxsKGFycmF5MixpbmRleCkpfWZ1bmN0aW9uIHNsaWNlQXJncyhhcmdzLHN0YXJ0SW5kZXgpe3JldHVybiBzbGljZS5jYWxsKGFyZ3Msc3RhcnRJbmRleHx8MCl9ZnVuY3Rpb24gYmluZChzZWxmLGZuKXt2YXIgY3VycnlBcmdzPWFyZ3VtZW50cy5sZW5ndGg+Mj9zbGljZUFyZ3MoYXJndW1lbnRzLDIpOltdO3JldHVybiFpc0Z1bmN0aW9uKGZuKXx8Zm4gaW5zdGFuY2VvZiBSZWdFeHA/Zm46Y3VycnlBcmdzLmxlbmd0aD9mdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP2ZuLmFwcGx5KHNlbGYsY3VycnlBcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cywwKSkpOmZuLmFwcGx5KHNlbGYsY3VycnlBcmdzKX06ZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD9mbi5hcHBseShzZWxmLGFyZ3VtZW50cyk6Zm4uY2FsbChzZWxmKX19ZnVuY3Rpb24gdG9Kc29uUmVwbGFjZXIoa2V5LHZhbHVlKXt2YXIgdmFsPXZhbHVlO3JldHVybiJzdHJpbmciPT10eXBlb2Yga2V5JiYiJCI9PT1rZXkuY2hhckF0KDApP3ZhbD11bmRlZmluZWQ6aXNXaW5kb3codmFsdWUpP3ZhbD0iJFdJTkRPVyI6dmFsdWUmJmRvY3VtZW50PT09dmFsdWU/dmFsPSIkRE9DVU1FTlQiOmlzU2NvcGUodmFsdWUpJiYodmFsPSIkU0NPUEUiKSx2YWx9ZnVuY3Rpb24gdG9Kc29uKG9iaixwcmV0dHkpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2Ygb2JqP3VuZGVmaW5lZDpKU09OLnN0cmluZ2lmeShvYmosdG9Kc29uUmVwbGFjZXIscHJldHR5PyIgICI6bnVsbCl9ZnVuY3Rpb24gZnJvbUpzb24oanNvbil7cmV0dXJuIGlzU3RyaW5nKGpzb24pP0pTT04ucGFyc2UoanNvbik6anNvbn1mdW5jdGlvbiB0b0Jvb2xlYW4odmFsdWUpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZSl2YWx1ZT0hMDtlbHNlIGlmKHZhbHVlJiYwIT09dmFsdWUubGVuZ3RoKXt2YXIgdj1sb3dlcmNhc2UoIiIrdmFsdWUpO3ZhbHVlPSEoImYiPT12fHwiMCI9PXZ8fCJmYWxzZSI9PXZ8fCJubyI9PXZ8fCJuIj09dnx8IltdIj09dil9ZWxzZSB2YWx1ZT0hMTtyZXR1cm4gdmFsdWV9ZnVuY3Rpb24gc3RhcnRpbmdUYWcoZWxlbWVudCl7ZWxlbWVudD1qcUxpdGUoZWxlbWVudCkuY2xvbmUoKTt0cnl7ZWxlbWVudC5lbXB0eSgpfWNhdGNoKGUpe312YXIgVEVYVF9OT0RFPTMsZWxlbUh0bWw9anFMaXRlKCI8ZGl2PiIpLmFwcGVuZChlbGVtZW50KS5odG1sKCk7dHJ5e3JldHVybiBlbGVtZW50WzBdLm5vZGVUeXBlPT09VEVYVF9OT0RFP2xvd2VyY2FzZShlbGVtSHRtbCk6ZWxlbUh0bWwubWF0Y2goL14oPFtePl0rPikvKVsxXS5yZXBsYWNlKC9ePChbXHdcLV0rKS8sZnVuY3Rpb24obWF0Y2gsbm9kZU5hbWUpe3JldHVybiI8Iitsb3dlcmNhc2Uobm9kZU5hbWUpfSl9Y2F0Y2goZSl7cmV0dXJuIGxvd2VyY2FzZShlbGVtSHRtbCl9fWZ1bmN0aW9uIHRyeURlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSl7dHJ5e3JldHVybiBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpfWNhdGNoKGUpe319ZnVuY3Rpb24gcGFyc2VLZXlWYWx1ZShrZXlWYWx1ZSl7dmFyIGtleV92YWx1ZSxrZXksb2JqPXt9O3JldHVybiBmb3JFYWNoKChrZXlWYWx1ZXx8IiIpLnNwbGl0KCImIiksZnVuY3Rpb24oa2V5VmFsdWUpe2lmKGtleVZhbHVlJiYoa2V5X3ZhbHVlPWtleVZhbHVlLnJlcGxhY2UoL1wrL2csIiUyMCIpLnNwbGl0KCI9Iiksa2V5PXRyeURlY29kZVVSSUNvbXBvbmVudChrZXlfdmFsdWVbMF0pLGlzRGVmaW5lZChrZXkpKSl7dmFyIHZhbD1pc0RlZmluZWQoa2V5X3ZhbHVlWzFdKT90cnlEZWNvZGVVUklDb21wb25lbnQoa2V5X3ZhbHVlWzFdKTohMDtoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpP2lzQXJyYXkob2JqW2tleV0pP29ialtrZXldLnB1c2godmFsKTpvYmpba2V5XT1bb2JqW2tleV0sdmFsXTpvYmpba2V5XT12YWx9fSksb2JqfWZ1bmN0aW9uIHRvS2V5VmFsdWUob2JqKXt2YXIgcGFydHM9W107cmV0dXJuIGZvckVhY2gob2JqLGZ1bmN0aW9uKHZhbHVlLGtleSl7aXNBcnJheSh2YWx1ZSk/Zm9yRWFjaCh2YWx1ZSxmdW5jdGlvbihhcnJheVZhbHVlKXtwYXJ0cy5wdXNoKGVuY29kZVVyaVF1ZXJ5KGtleSwhMCkrKGFycmF5VmFsdWU9PT0hMD8iIjoiPSIrZW5jb2RlVXJpUXVlcnkoYXJyYXlWYWx1ZSwhMCkpKX0pOnBhcnRzLnB1c2goZW5jb2RlVXJpUXVlcnkoa2V5LCEwKSsodmFsdWU9PT0hMD8iIjoiPSIrZW5jb2RlVXJpUXVlcnkodmFsdWUsITApKSl9KSxwYXJ0cy5sZW5ndGg/cGFydHMuam9pbigiJiIpOiIifWZ1bmN0aW9uIGVuY29kZVVyaVNlZ21lbnQodmFsKXtyZXR1cm4gZW5jb2RlVXJpUXVlcnkodmFsLCEwKS5yZXBsYWNlKC8lMjYvZ2ksIiYiKS5yZXBsYWNlKC8lM0QvZ2ksIj0iKS5yZXBsYWNlKC8lMkIvZ2ksIisiKX1mdW5jdGlvbiBlbmNvZGVVcmlRdWVyeSh2YWwscGN0RW5jb2RlU3BhY2VzKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkucmVwbGFjZSgvJTQwL2dpLCJAIikucmVwbGFjZSgvJTNBL2dpLCI6IikucmVwbGFjZSgvJTI0L2csIiQiKS5yZXBsYWNlKC8lMkMvZ2ksIiwiKS5yZXBsYWNlKC8lMjAvZyxwY3RFbmNvZGVTcGFjZXM/IiUyMCI6IisiKX1mdW5jdGlvbiBhbmd1bGFySW5pdChlbGVtZW50LGJvb3RzdHJhcCl7ZnVuY3Rpb24gYXBwZW5kKGVsZW1lbnQpe2VsZW1lbnQmJmVsZW1lbnRzLnB1c2goZWxlbWVudCl9dmFyIGFwcEVsZW1lbnQsbW9kdWxlLGVsZW1lbnRzPVtlbGVtZW50XSxuYW1lcz1bIm5nOmFwcCIsIm5nLWFwcCIsIngtbmctYXBwIiwiZGF0YS1uZy1hcHAiXSxOR19BUFBfQ0xBU1NfUkVHRVhQPS9cc25nWzpcLV1hcHAoOlxzKihbXHdcZF9dKyk7Pyk/XHMvO2ZvckVhY2gobmFtZXMsZnVuY3Rpb24obmFtZSl7bmFtZXNbbmFtZV09ITAsYXBwZW5kKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5hbWUpKSxuYW1lPW5hbWUucmVwbGFjZSgiOiIsIlxcOiIpLGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCYmKGZvckVhY2goZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuIituYW1lKSxhcHBlbmQpLGZvckVhY2goZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuIituYW1lKyJcXDoiKSxhcHBlbmQpLGZvckVhY2goZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCJbIituYW1lKyJdIiksYXBwZW5kKSl9KSxmb3JFYWNoKGVsZW1lbnRzLGZ1bmN0aW9uKGVsZW1lbnQpe2lmKCFhcHBFbGVtZW50KXt2YXIgY2xhc3NOYW1lPSIgIitlbGVtZW50LmNsYXNzTmFtZSsiICIsbWF0Y2g9TkdfQVBQX0NMQVNTX1JFR0VYUC5leGVjKGNsYXNzTmFtZSk7bWF0Y2g/KGFwcEVsZW1lbnQ9ZWxlbWVudCxtb2R1bGU9KG1hdGNoWzJdfHwiIikucmVwbGFjZSgvXHMrL2csIiwiKSk6Zm9yRWFjaChlbGVtZW50LmF0dHJpYnV0ZXMsZnVuY3Rpb24oYXR0cil7IWFwcEVsZW1lbnQmJm5hbWVzW2F0dHIubmFtZV0mJihhcHBFbGVtZW50PWVsZW1lbnQsbW9kdWxlPWF0dHIudmFsdWUpfSl9fSksYXBwRWxlbWVudCYmYm9vdHN0cmFwKGFwcEVsZW1lbnQsbW9kdWxlP1ttb2R1bGVdOltdKX1mdW5jdGlvbiBib290c3RyYXAoZWxlbWVudCxtb2R1bGVzKXt2YXIgZG9Cb290c3RyYXA9ZnVuY3Rpb24oKXtpZihlbGVtZW50PWpxTGl0ZShlbGVtZW50KSxlbGVtZW50LmluamVjdG9yKCkpe3ZhciB0YWc9ZWxlbWVudFswXT09PWRvY3VtZW50PyJkb2N1bWVudCI6c3RhcnRpbmdUYWcoZWxlbWVudCk7dGhyb3cgbmdNaW5FcnIoImJ0c3RycGQiLCJBcHAgQWxyZWFkeSBCb290c3RyYXBwZWQgd2l0aCB0aGlzIEVsZW1lbnQgJ3swfSciLHRhZy5yZXBsYWNlKC88LywiJmx0OyIpLnJlcGxhY2UoLz4vLCImZ3Q7IikpfW1vZHVsZXM9bW9kdWxlc3x8W10sbW9kdWxlcy51bnNoaWZ0KFsiJHByb3ZpZGUiLGZ1bmN0aW9uKCRwcm92aWRlKXskcHJvdmlkZS52YWx1ZSgiJHJvb3RFbGVtZW50IixlbGVtZW50KX1dKSxtb2R1bGVzLnVuc2hpZnQoIm5nIik7dmFyIGluamVjdG9yPWNyZWF0ZUluamVjdG9yKG1vZHVsZXMpO3JldHVybiBpbmplY3Rvci5pbnZva2UoWyIkcm9vdFNjb3BlIiwiJHJvb3RFbGVtZW50IiwiJGNvbXBpbGUiLCIkaW5qZWN0b3IiLCIkYW5pbWF0ZSIsZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxjb21waWxlLGluamVjdG9yKXtzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtlbGVtZW50LmRhdGEoIiRpbmplY3RvciIsaW5qZWN0b3IpLGNvbXBpbGUoZWxlbWVudCkoc2NvcGUpfSl9XSksaW5qZWN0b3J9LE5HX0RFRkVSX0JPT1RTVFJBUD0vXk5HX0RFRkVSX0JPT1RTVFJBUCEvO3JldHVybiB3aW5kb3cmJiFOR19ERUZFUl9CT09UU1RSQVAudGVzdCh3aW5kb3cubmFtZSk/ZG9Cb290c3RyYXAoKTood2luZG93Lm5hbWU9d2luZG93Lm5hbWUucmVwbGFjZShOR19ERUZFUl9CT09UU1RSQVAsIiIpLHZvaWQoYW5ndWxhci5yZXN1bWVCb290c3RyYXA9ZnVuY3Rpb24oZXh0cmFNb2R1bGVzKXtmb3JFYWNoKGV4dHJhTW9kdWxlcyxmdW5jdGlvbihtb2R1bGUpe21vZHVsZXMucHVzaChtb2R1bGUpfSksZG9Cb290c3RyYXAoKX0pKX1mdW5jdGlvbiBzbmFrZV9jYXNlKG5hbWUsc2VwYXJhdG9yKXtyZXR1cm4gc2VwYXJhdG9yPXNlcGFyYXRvcnx8Il8iLG5hbWUucmVwbGFjZShTTkFLRV9DQVNFX1JFR0VYUCxmdW5jdGlvbihsZXR0ZXIscG9zKXtyZXR1cm4ocG9zP3NlcGFyYXRvcjoiIikrbGV0dGVyLnRvTG93ZXJDYXNlKCl9KX1mdW5jdGlvbiBiaW5kSlF1ZXJ5KCl7alF1ZXJ5PXdpbmRvdy5qUXVlcnksalF1ZXJ5JiZqUXVlcnkuZm4ub24/KGpxTGl0ZT1qUXVlcnksZXh0ZW5kKGpRdWVyeS5mbix7c2NvcGU6SlFMaXRlUHJvdG90eXBlLnNjb3BlLGlzb2xhdGVTY29wZTpKUUxpdGVQcm90b3R5cGUuaXNvbGF0ZVNjb3BlLGNvbnRyb2xsZXI6SlFMaXRlUHJvdG90eXBlLmNvbnRyb2xsZXIsaW5qZWN0b3I6SlFMaXRlUHJvdG90eXBlLmluamVjdG9yLGluaGVyaXRlZERhdGE6SlFMaXRlUHJvdG90eXBlLmluaGVyaXRlZERhdGF9KSxqcUxpdGVQYXRjaEpRdWVyeVJlbW92ZSgicmVtb3ZlIiwhMCwhMCwhMSksanFMaXRlUGF0Y2hKUXVlcnlSZW1vdmUoImVtcHR5IiwhMSwhMSwhMSksanFMaXRlUGF0Y2hKUXVlcnlSZW1vdmUoImh0bWwiLCExLCExLCEwKSk6anFMaXRlPUpRTGl0ZSxhbmd1bGFyLmVsZW1lbnQ9anFMaXRlfWZ1bmN0aW9uIGFzc2VydEFyZyhhcmcsbmFtZSxyZWFzb24pe2lmKCFhcmcpdGhyb3cgbmdNaW5FcnIoImFyZXEiLCJBcmd1bWVudCAnezB9JyBpcyB7MX0iLG5hbWV8fCI/IixyZWFzb258fCJyZXF1aXJlZCIpO3JldHVybiBhcmd9ZnVuY3Rpb24gYXNzZXJ0QXJnRm4oYXJnLG5hbWUsYWNjZXB0QXJyYXlBbm5vdGF0aW9uKXtyZXR1cm4gYWNjZXB0QXJyYXlBbm5vdGF0aW9uJiZpc0FycmF5KGFyZykmJihhcmc9YXJnW2FyZy5sZW5ndGgtMV0pLGFzc2VydEFyZyhpc0Z1bmN0aW9uKGFyZyksbmFtZSwibm90IGEgZnVuY3Rpb24sIGdvdCAiKyhhcmcmJiJvYmplY3QiPT10eXBlb2YgYXJnP2FyZy5jb25zdHJ1Y3Rvci5uYW1lfHwiT2JqZWN0Ijp0eXBlb2YgYXJnKSksYXJnfWZ1bmN0aW9uIGFzc2VydE5vdEhhc093blByb3BlcnR5KG5hbWUsY29udGV4dCl7aWYoImhhc093blByb3BlcnR5Ij09PW5hbWUpdGhyb3cgbmdNaW5FcnIoImJhZG5hbWUiLCJoYXNPd25Qcm9wZXJ0eSBpcyBub3QgYSB2YWxpZCB7MH0gbmFtZSIsY29udGV4dCl9ZnVuY3Rpb24gZ2V0dGVyKG9iaixwYXRoLGJpbmRGblRvU2NvcGUpe2lmKCFwYXRoKXJldHVybiBvYmo7Zm9yKHZhciBrZXksa2V5cz1wYXRoLnNwbGl0KCIuIiksbGFzdEluc3RhbmNlPW9iaixsZW49a2V5cy5sZW5ndGgsaT0wO2xlbj5pO2krKylrZXk9a2V5c1tpXSxvYmomJihvYmo9KGxhc3RJbnN0YW5jZT1vYmopW2tleV0pO3JldHVybiFiaW5kRm5Ub1Njb3BlJiZpc0Z1bmN0aW9uKG9iaik/YmluZChsYXN0SW5zdGFuY2Usb2JqKTpvYmp9ZnVuY3Rpb24gZ2V0QmxvY2tFbGVtZW50cyhub2Rlcyl7dmFyIHN0YXJ0Tm9kZT1ub2Rlc1swXSxlbmROb2RlPW5vZGVzW25vZGVzLmxlbmd0aC0xXTtpZihzdGFydE5vZGU9PT1lbmROb2RlKXJldHVybiBqcUxpdGUoc3RhcnROb2RlKTt2YXIgZWxlbWVudD1zdGFydE5vZGUsZWxlbWVudHM9W2VsZW1lbnRdO2Rve2lmKGVsZW1lbnQ9ZWxlbWVudC5uZXh0U2libGluZywhZWxlbWVudClicmVhaztlbGVtZW50cy5wdXNoKGVsZW1lbnQpfXdoaWxlKGVsZW1lbnQhPT1lbmROb2RlKTtyZXR1cm4ganFMaXRlKGVsZW1lbnRzKX1mdW5jdGlvbiBzZXR1cE1vZHVsZUxvYWRlcih3aW5kb3cpe2Z1bmN0aW9uIGVuc3VyZShvYmosbmFtZSxmYWN0b3J5KXtyZXR1cm4gb2JqW25hbWVdfHwob2JqW25hbWVdPWZhY3RvcnkoKSl9dmFyICRpbmplY3Rvck1pbkVycj1taW5FcnIoIiRpbmplY3RvciIpLG5nTWluRXJyPW1pbkVycigibmciKSxhbmd1bGFyPWVuc3VyZSh3aW5kb3csImFuZ3VsYXIiLE9iamVjdCk7cmV0dXJuIGFuZ3VsYXIuJCRtaW5FcnI9YW5ndWxhci4kJG1pbkVycnx8bWluRXJyLGVuc3VyZShhbmd1bGFyLCJtb2R1bGUiLGZ1bmN0aW9uKCl7dmFyIG1vZHVsZXM9e307cmV0dXJuIGZ1bmN0aW9uKG5hbWUscmVxdWlyZXMsY29uZmlnRm4pe3ZhciBhc3NlcnROb3RIYXNPd25Qcm9wZXJ0eT1mdW5jdGlvbihuYW1lLGNvbnRleHQpe2lmKCJoYXNPd25Qcm9wZXJ0eSI9PT1uYW1lKXRocm93IG5nTWluRXJyKCJiYWRuYW1lIiwiaGFzT3duUHJvcGVydHkgaXMgbm90IGEgdmFsaWQgezB9IG5hbWUiLGNvbnRleHQpfTtyZXR1cm4gYXNzZXJ0Tm90SGFzT3duUHJvcGVydHkobmFtZSwibW9kdWxlIikscmVxdWlyZXMmJm1vZHVsZXMuaGFzT3duUHJvcGVydHkobmFtZSkmJihtb2R1bGVzW25hbWVdPW51bGwpLGVuc3VyZShtb2R1bGVzLG5hbWUsZnVuY3Rpb24oKXtmdW5jdGlvbiBpbnZva2VMYXRlcihwcm92aWRlcixtZXRob2QsaW5zZXJ0TWV0aG9kKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gaW52b2tlUXVldWVbaW5zZXJ0TWV0aG9kfHwicHVzaCJdKFtwcm92aWRlcixtZXRob2QsYXJndW1lbnRzXSksbW9kdWxlSW5zdGFuY2V9fWlmKCFyZXF1aXJlcyl0aHJvdyAkaW5qZWN0b3JNaW5FcnIoIm5vbW9kIiwiTW9kdWxlICd7MH0nIGlzIG5vdCBhdmFpbGFibGUhIFlvdSBlaXRoZXIgbWlzc3BlbGxlZCB0aGUgbW9kdWxlIG5hbWUgb3IgZm9yZ290IHRvIGxvYWQgaXQuIElmIHJlZ2lzdGVyaW5nIGEgbW9kdWxlIGVuc3VyZSB0aGF0IHlvdSBzcGVjaWZ5IHRoZSBkZXBlbmRlbmNpZXMgYXMgdGhlIHNlY29uZCBhcmd1bWVudC4iLG5hbWUpO3ZhciBpbnZva2VRdWV1ZT1bXSxydW5CbG9ja3M9W10sY29uZmlnPWludm9rZUxhdGVyKCIkaW5qZWN0b3IiLCJpbnZva2UiKSxtb2R1bGVJbnN0YW5jZT17X2ludm9rZVF1ZXVlOmludm9rZVF1ZXVlLF9ydW5CbG9ja3M6cnVuQmxvY2tzLHJlcXVpcmVzOnJlcXVpcmVzLG5hbWU6bmFtZSxwcm92aWRlcjppbnZva2VMYXRlcigiJHByb3ZpZGUiLCJwcm92aWRlciIpLGZhY3Rvcnk6aW52b2tlTGF0ZXIoIiRwcm92aWRlIiwiZmFjdG9yeSIpLHNlcnZpY2U6aW52b2tlTGF0ZXIoIiRwcm92aWRlIiwic2VydmljZSIpLHZhbHVlOmludm9rZUxhdGVyKCIkcHJvdmlkZSIsInZhbHVlIiksY29uc3RhbnQ6aW52b2tlTGF0ZXIoIiRwcm92aWRlIiwiY29uc3RhbnQiLCJ1bnNoaWZ0IiksYW5pbWF0aW9uOmludm9rZUxhdGVyKCIkYW5pbWF0ZVByb3ZpZGVyIiwicmVnaXN0ZXIiKSxmaWx0ZXI6aW52b2tlTGF0ZXIoIiRmaWx0ZXJQcm92aWRlciIsInJlZ2lzdGVyIiksY29udHJvbGxlcjppbnZva2VMYXRlcigiJGNvbnRyb2xsZXJQcm92aWRlciIsInJlZ2lzdGVyIiksZGlyZWN0aXZlOmludm9rZUxhdGVyKCIkY29tcGlsZVByb3ZpZGVyIiwiZGlyZWN0aXZlIiksY29uZmlnOmNvbmZpZyxydW46ZnVuY3Rpb24oYmxvY2spe3JldHVybiBydW5CbG9ja3MucHVzaChibG9jayksdGhpc319O3JldHVybiBjb25maWdGbiYmY29uZmlnKGNvbmZpZ0ZuKSxtb2R1bGVJbnN0YW5jZX0pfX0pfWZ1bmN0aW9uIHB1Ymxpc2hFeHRlcm5hbEFQSShhbmd1bGFyKXtleHRlbmQoYW5ndWxhcix7Ym9vdHN0cmFwOmJvb3RzdHJhcCxjb3B5OmNvcHksZXh0ZW5kOmV4dGVuZCxlcXVhbHM6ZXF1YWxzLGVsZW1lbnQ6anFMaXRlLGZvckVhY2g6Zm9yRWFjaCxpbmplY3RvcjpjcmVhdGVJbmplY3Rvcixub29wOm5vb3AsYmluZDpiaW5kLHRvSnNvbjp0b0pzb24sZnJvbUpzb246ZnJvbUpzb24saWRlbnRpdHk6aWRlbnRpdHksaXNVbmRlZmluZWQ6aXNVbmRlZmluZWQsaXNEZWZpbmVkOmlzRGVmaW5lZCxpc1N0cmluZzppc1N0cmluZyxpc0Z1bmN0aW9uOmlzRnVuY3Rpb24saXNPYmplY3Q6aXNPYmplY3QsaXNOdW1iZXI6aXNOdW1iZXIsaXNFbGVtZW50OmlzRWxlbWVudCxpc0FycmF5OmlzQXJyYXksdmVyc2lvbjp2ZXJzaW9uLGlzRGF0ZTppc0RhdGUsbG93ZXJjYXNlOmxvd2VyY2FzZSx1cHBlcmNhc2U6dXBwZXJjYXNlLGNhbGxiYWNrczp7Y291bnRlcjowfSwkJG1pbkVycjptaW5FcnIsJCRjc3A6Y3NwfSksYW5ndWxhck1vZHVsZT1zZXR1cE1vZHVsZUxvYWRlcih3aW5kb3cpO3RyeXthbmd1bGFyTW9kdWxlKCJuZ0xvY2FsZSIpfWNhdGNoKGUpe2FuZ3VsYXJNb2R1bGUoIm5nTG9jYWxlIixbXSkucHJvdmlkZXIoIiRsb2NhbGUiLCRMb2NhbGVQcm92aWRlcil9YW5ndWxhck1vZHVsZSgibmciLFsibmdMb2NhbGUiXSxbIiRwcm92aWRlIixmdW5jdGlvbigkcHJvdmlkZSl7JHByb3ZpZGUucHJvdmlkZXIoeyQkc2FuaXRpemVVcmk6JCRTYW5pdGl6ZVVyaVByb3ZpZGVyfSksJHByb3ZpZGUucHJvdmlkZXIoIiRjb21waWxlIiwkQ29tcGlsZVByb3ZpZGVyKS5kaXJlY3RpdmUoe2E6aHRtbEFuY2hvckRpcmVjdGl2ZSxpbnB1dDppbnB1dERpcmVjdGl2ZSx0ZXh0YXJlYTppbnB1dERpcmVjdGl2ZSxmb3JtOmZvcm1EaXJlY3RpdmUsc2NyaXB0OnNjcmlwdERpcmVjdGl2ZSxzZWxlY3Q6c2VsZWN0RGlyZWN0aXZlLHN0eWxlOnN0eWxlRGlyZWN0aXZlLG9wdGlvbjpvcHRpb25EaXJlY3RpdmUsbmdCaW5kOm5nQmluZERpcmVjdGl2ZSxuZ0JpbmRIdG1sOm5nQmluZEh0bWxEaXJlY3RpdmUsbmdCaW5kVGVtcGxhdGU6bmdCaW5kVGVtcGxhdGVEaXJlY3RpdmUsbmdDbGFzczpuZ0NsYXNzRGlyZWN0aXZlLG5nQ2xhc3NFdmVuOm5nQ2xhc3NFdmVuRGlyZWN0aXZlLG5nQ2xhc3NPZGQ6bmdDbGFzc09kZERpcmVjdGl2ZSxuZ0Nsb2FrOm5nQ2xvYWtEaXJlY3RpdmUsbmdDb250cm9sbGVyOm5nQ29udHJvbGxlckRpcmVjdGl2ZSxuZ0Zvcm06bmdGb3JtRGlyZWN0aXZlLG5nSGlkZTpuZ0hpZGVEaXJlY3RpdmUsbmdJZjpuZ0lmRGlyZWN0aXZlLG5nSW5jbHVkZTpuZ0luY2x1ZGVEaXJlY3RpdmUsbmdJbml0Om5nSW5pdERpcmVjdGl2ZSxuZ05vbkJpbmRhYmxlOm5nTm9uQmluZGFibGVEaXJlY3RpdmUsbmdQbHVyYWxpemU6bmdQbHVyYWxpemVEaXJlY3RpdmUsbmdSZXBlYXQ6bmdSZXBlYXREaXJlY3RpdmUsbmdTaG93Om5nU2hvd0RpcmVjdGl2ZSxuZ1N0eWxlOm5nU3R5bGVEaXJlY3RpdmUsbmdTd2l0Y2g6bmdTd2l0Y2hEaXJlY3RpdmUsbmdTd2l0Y2hXaGVuOm5nU3dpdGNoV2hlbkRpcmVjdGl2ZSxuZ1N3aXRjaERlZmF1bHQ6bmdTd2l0Y2hEZWZhdWx0RGlyZWN0aXZlLG5nT3B0aW9uczpuZ09wdGlvbnNEaXJlY3RpdmUsbmdUcmFuc2NsdWRlOm5nVHJhbnNjbHVkZURpcmVjdGl2ZSxuZ01vZGVsOm5nTW9kZWxEaXJlY3RpdmUsbmdMaXN0Om5nTGlzdERpcmVjdGl2ZSxuZ0NoYW5nZTpuZ0NoYW5nZURpcmVjdGl2ZSxyZXF1aXJlZDpyZXF1aXJlZERpcmVjdGl2ZSxuZ1JlcXVpcmVkOnJlcXVpcmVkRGlyZWN0aXZlLG5nVmFsdWU6bmdWYWx1ZURpcmVjdGl2ZX0pLmRpcmVjdGl2ZSh7bmdJbmNsdWRlOm5nSW5jbHVkZUZpbGxDb250ZW50RGlyZWN0aXZlfSkuZGlyZWN0aXZlKG5nQXR0cmlidXRlQWxpYXNEaXJlY3RpdmVzKS5kaXJlY3RpdmUobmdFdmVudERpcmVjdGl2ZXMpLCRwcm92aWRlLnByb3ZpZGVyKHskYW5jaG9yU2Nyb2xsOiRBbmNob3JTY3JvbGxQcm92aWRlciwkYW5pbWF0ZTokQW5pbWF0ZVByb3ZpZGVyLCRicm93c2VyOiRCcm93c2VyUHJvdmlkZXIsJGNhY2hlRmFjdG9yeTokQ2FjaGVGYWN0b3J5UHJvdmlkZXIsJGNvbnRyb2xsZXI6JENvbnRyb2xsZXJQcm92aWRlciwkZG9jdW1lbnQ6JERvY3VtZW50UHJvdmlkZXIsJGV4Y2VwdGlvbkhhbmRsZXI6JEV4Y2VwdGlvbkhhbmRsZXJQcm92aWRlciwkZmlsdGVyOiRGaWx0ZXJQcm92aWRlciwkaW50ZXJwb2xhdGU6JEludGVycG9sYXRlUHJvdmlkZXIsJGludGVydmFsOiRJbnRlcnZhbFByb3ZpZGVyLCRodHRwOiRIdHRwUHJvdmlkZXIsJGh0dHBCYWNrZW5kOiRIdHRwQmFja2VuZFByb3ZpZGVyLCRsb2NhdGlvbjokTG9jYXRpb25Qcm92aWRlciwkbG9nOiRMb2dQcm92aWRlciwkcGFyc2U6JFBhcnNlUHJvdmlkZXIsJHJvb3RTY29wZTokUm9vdFNjb3BlUHJvdmlkZXIsJHE6JFFQcm92aWRlciwkc2NlOiRTY2VQcm92aWRlciwkc2NlRGVsZWdhdGU6JFNjZURlbGVnYXRlUHJvdmlkZXIsJHNuaWZmZXI6JFNuaWZmZXJQcm92aWRlciwkdGVtcGxhdGVDYWNoZTokVGVtcGxhdGVDYWNoZVByb3ZpZGVyLCR0aW1lb3V0OiRUaW1lb3V0UHJvdmlkZXIsJHdpbmRvdzokV2luZG93UHJvdmlkZXIsJCRyQUY6JCRSQUZQcm92aWRlciwkJGFzeW5jQ2FsbGJhY2s6JCRBc3luY0NhbGxiYWNrUHJvdmlkZXJ9KX1dKX1mdW5jdGlvbiBqcU5leHRJZCgpe3JldHVybisranFJZH1mdW5jdGlvbiBjYW1lbENhc2UobmFtZSl7cmV0dXJuIG5hbWUucmVwbGFjZShTUEVDSUFMX0NIQVJTX1JFR0VYUCxmdW5jdGlvbihfLHNlcGFyYXRvcixsZXR0ZXIsb2Zmc2V0KXtyZXR1cm4gb2Zmc2V0P2xldHRlci50b1VwcGVyQ2FzZSgpOmxldHRlcn0pLnJlcGxhY2UoTU9aX0hBQ0tfUkVHRVhQLCJNb3okMSIpfWZ1bmN0aW9uIGpxTGl0ZVBhdGNoSlF1ZXJ5UmVtb3ZlKG5hbWUsZGlzcGF0Y2hUaGlzLGZpbHRlckVsZW1zLGdldHRlcklmTm9Bcmd1bWVudHMpe2Z1bmN0aW9uIHJlbW92ZVBhdGNoKHBhcmFtKXt2YXIgc2V0LHNldEluZGV4LHNldExlbmd0aCxlbGVtZW50LGNoaWxkSW5kZXgsY2hpbGRMZW5ndGgsY2hpbGRyZW4sbGlzdD1maWx0ZXJFbGVtcyYmcGFyYW0/W3RoaXMuZmlsdGVyKHBhcmFtKV06W3RoaXNdLGZpcmVFdmVudD1kaXNwYXRjaFRoaXM7aWYoIWdldHRlcklmTm9Bcmd1bWVudHN8fG51bGwhPXBhcmFtKWZvcig7bGlzdC5sZW5ndGg7KWZvcihzZXQ9bGlzdC5zaGlmdCgpLHNldEluZGV4PTAsc2V0TGVuZ3RoPXNldC5sZW5ndGg7c2V0TGVuZ3RoPnNldEluZGV4O3NldEluZGV4KyspZm9yKGVsZW1lbnQ9anFMaXRlKHNldFtzZXRJbmRleF0pLGZpcmVFdmVudD9lbGVtZW50LnRyaWdnZXJIYW5kbGVyKCIkZGVzdHJveSIpOmZpcmVFdmVudD0hZmlyZUV2ZW50LGNoaWxkSW5kZXg9MCxjaGlsZExlbmd0aD0oY2hpbGRyZW49ZWxlbWVudC5jaGlsZHJlbigpKS5sZW5ndGg7Y2hpbGRMZW5ndGg+Y2hpbGRJbmRleDtjaGlsZEluZGV4KyspbGlzdC5wdXNoKGpRdWVyeShjaGlsZHJlbltjaGlsZEluZGV4XSkpO3JldHVybiBvcmlnaW5hbEpxRm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBvcmlnaW5hbEpxRm49alF1ZXJ5LmZuW25hbWVdO29yaWdpbmFsSnFGbj1vcmlnaW5hbEpxRm4uJG9yaWdpbmFsfHxvcmlnaW5hbEpxRm4scmVtb3ZlUGF0Y2guJG9yaWdpbmFsPW9yaWdpbmFsSnFGbixqUXVlcnkuZm5bbmFtZV09cmVtb3ZlUGF0Y2h9ZnVuY3Rpb24ganFMaXRlSXNUZXh0Tm9kZShodG1sKXtyZXR1cm4hSFRNTF9SRUdFWFAudGVzdChodG1sKX1mdW5jdGlvbiBqcUxpdGVCdWlsZEZyYWdtZW50KGh0bWwsY29udGV4dCl7dmFyIHRtcCx0YWcsd3JhcCxpLGosamosZnJhZ21lbnQ9Y29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbm9kZXM9W107aWYoanFMaXRlSXNUZXh0Tm9kZShodG1sKSlub2Rlcy5wdXNoKGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoaHRtbCkpO2Vsc2V7Zm9yKHRtcD1mcmFnbWVudC5hcHBlbmRDaGlsZChjb250ZXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpKSx0YWc9KFRBR19OQU1FX1JFR0VYUC5leGVjKGh0bWwpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpLHdyYXA9d3JhcE1hcFt0YWddfHx3cmFwTWFwLl9kZWZhdWx0LHRtcC5pbm5lckhUTUw9IjxkaXY+JiMxNjA7PC9kaXY+Iit3cmFwWzFdK2h0bWwucmVwbGFjZShYSFRNTF9UQUdfUkVHRVhQLCI8JDE+PC8kMj4iKSt3cmFwWzJdLHRtcC5yZW1vdmVDaGlsZCh0bXAuZmlyc3RDaGlsZCksaT13cmFwWzBdO2ktLTspdG1wPXRtcC5sYXN0Q2hpbGQ7Zm9yKGo9MCxqaj10bXAuY2hpbGROb2Rlcy5sZW5ndGg7amo+ajsrK2opbm9kZXMucHVzaCh0bXAuY2hpbGROb2Rlc1tqXSk7dG1wPWZyYWdtZW50LmZpcnN0Q2hpbGQsdG1wLnRleHRDb250ZW50PSIifXJldHVybiBmcmFnbWVudC50ZXh0Q29udGVudD0iIixmcmFnbWVudC5pbm5lckhUTUw9IiIsbm9kZXN9ZnVuY3Rpb24ganFMaXRlUGFyc2VIVE1MKGh0bWwsY29udGV4dCl7Y29udGV4dD1jb250ZXh0fHxkb2N1bWVudDt2YXIgcGFyc2VkO3JldHVybihwYXJzZWQ9U0lOR0xFX1RBR19SRUdFWFAuZXhlYyhodG1sKSk/W2NvbnRleHQuY3JlYXRlRWxlbWVudChwYXJzZWRbMV0pXTpqcUxpdGVCdWlsZEZyYWdtZW50KGh0bWwsY29udGV4dCl9ZnVuY3Rpb24gSlFMaXRlKGVsZW1lbnQpe2lmKGVsZW1lbnQgaW5zdGFuY2VvZiBKUUxpdGUpcmV0dXJuIGVsZW1lbnQ7aWYoaXNTdHJpbmcoZWxlbWVudCkmJihlbGVtZW50PXRyaW0oZWxlbWVudCkpLCEodGhpcyBpbnN0YW5jZW9mIEpRTGl0ZSkpe2lmKGlzU3RyaW5nKGVsZW1lbnQpJiYiPCIhPWVsZW1lbnQuY2hhckF0KDApKXRocm93IGpxTGl0ZU1pbkVycigibm9zZWwiLCJMb29raW5nIHVwIGVsZW1lbnRzIHZpYSBzZWxlY3RvcnMgaXMgbm90IHN1cHBvcnRlZCBieSBqcUxpdGUhIFNlZTogaHR0cDovL2RvY3MuYW5ndWxhcmpzLm9yZy9hcGkvYW5ndWxhci5lbGVtZW50Iik7cmV0dXJuIG5ldyBKUUxpdGUoZWxlbWVudCl9aWYoaXNTdHJpbmcoZWxlbWVudCkpe2pxTGl0ZUFkZE5vZGVzKHRoaXMsanFMaXRlUGFyc2VIVE1MKGVsZW1lbnQpKTt2YXIgZnJhZ21lbnQ9anFMaXRlKGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSk7ZnJhZ21lbnQuYXBwZW5kKHRoaXMpfWVsc2UganFMaXRlQWRkTm9kZXModGhpcyxlbGVtZW50KX1mdW5jdGlvbiBqcUxpdGVDbG9uZShlbGVtZW50KXtyZXR1cm4gZWxlbWVudC5jbG9uZU5vZGUoITApfWZ1bmN0aW9uIGpxTGl0ZURlYWxvYyhlbGVtZW50KXtqcUxpdGVSZW1vdmVEYXRhKGVsZW1lbnQpO2Zvcih2YXIgaT0wLGNoaWxkcmVuPWVsZW1lbnQuY2hpbGROb2Rlc3x8W107aTxjaGlsZHJlbi5sZW5ndGg7aSsrKWpxTGl0ZURlYWxvYyhjaGlsZHJlbltpXSl9ZnVuY3Rpb24ganFMaXRlT2ZmKGVsZW1lbnQsdHlwZSxmbix1bnN1cHBvcnRlZCl7aWYoaXNEZWZpbmVkKHVuc3VwcG9ydGVkKSl0aHJvdyBqcUxpdGVNaW5FcnIoIm9mZmFyZ3MiLCJqcUxpdGUjb2ZmKCkgZG9lcyBub3Qgc3VwcG9ydCB0aGUgYHNlbGVjdG9yYCBhcmd1bWVudCIpO3ZhciBldmVudHM9anFMaXRlRXhwYW5kb1N0b3JlKGVsZW1lbnQsImV2ZW50cyIpLGhhbmRsZT1qcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiaGFuZGxlIik7aGFuZGxlJiYoaXNVbmRlZmluZWQodHlwZSk/Zm9yRWFjaChldmVudHMsZnVuY3Rpb24oZXZlbnRIYW5kbGVyLHR5cGUpe3JlbW92ZUV2ZW50TGlzdGVuZXJGbihlbGVtZW50LHR5cGUsZXZlbnRIYW5kbGVyKSxkZWxldGUgZXZlbnRzW3R5cGVdfSk6Zm9yRWFjaCh0eXBlLnNwbGl0KCIgIiksZnVuY3Rpb24odHlwZSl7aXNVbmRlZmluZWQoZm4pPyhyZW1vdmVFdmVudExpc3RlbmVyRm4oZWxlbWVudCx0eXBlLGV2ZW50c1t0eXBlXSksZGVsZXRlIGV2ZW50c1t0eXBlXSk6YXJyYXlSZW1vdmUoZXZlbnRzW3R5cGVdfHxbXSxmbil9KSl9ZnVuY3Rpb24ganFMaXRlUmVtb3ZlRGF0YShlbGVtZW50LG5hbWUpe3ZhciBleHBhbmRvSWQ9ZWxlbWVudC5uZzMzOSxleHBhbmRvU3RvcmU9anFDYWNoZVtleHBhbmRvSWRdO2lmKGV4cGFuZG9TdG9yZSl7aWYobmFtZSlyZXR1cm4gdm9pZCBkZWxldGUganFDYWNoZVtleHBhbmRvSWRdLmRhdGFbbmFtZV07ZXhwYW5kb1N0b3JlLmhhbmRsZSYmKGV4cGFuZG9TdG9yZS5ldmVudHMuJGRlc3Ryb3kmJmV4cGFuZG9TdG9yZS5oYW5kbGUoe30sIiRkZXN0cm95IiksanFMaXRlT2ZmKGVsZW1lbnQpKSxkZWxldGUganFDYWNoZVtleHBhbmRvSWRdLGVsZW1lbnQubmczMzk9dW5kZWZpbmVkfX1mdW5jdGlvbiBqcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCxrZXksdmFsdWUpe3ZhciBleHBhbmRvSWQ9ZWxlbWVudC5uZzMzOSxleHBhbmRvU3RvcmU9anFDYWNoZVtleHBhbmRvSWR8fC0xXTtyZXR1cm4gaXNEZWZpbmVkKHZhbHVlKT8oZXhwYW5kb1N0b3JlfHwoZWxlbWVudC5uZzMzOT1leHBhbmRvSWQ9anFOZXh0SWQoKSxleHBhbmRvU3RvcmU9anFDYWNoZVtleHBhbmRvSWRdPXt9KSx2b2lkKGV4cGFuZG9TdG9yZVtrZXldPXZhbHVlKSk6ZXhwYW5kb1N0b3JlJiZleHBhbmRvU3RvcmVba2V5XX1mdW5jdGlvbiBqcUxpdGVEYXRhKGVsZW1lbnQsa2V5LHZhbHVlKXt2YXIgZGF0YT1qcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiZGF0YSIpLGlzU2V0dGVyPWlzRGVmaW5lZCh2YWx1ZSksa2V5RGVmaW5lZD0haXNTZXR0ZXImJmlzRGVmaW5lZChrZXkpLGlzU2ltcGxlR2V0dGVyPWtleURlZmluZWQmJiFpc09iamVjdChrZXkpO2lmKGRhdGF8fGlzU2ltcGxlR2V0dGVyfHxqcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiZGF0YSIsZGF0YT17fSksaXNTZXR0ZXIpZGF0YVtrZXldPXZhbHVlO2Vsc2V7aWYoIWtleURlZmluZWQpcmV0dXJuIGRhdGE7aWYoaXNTaW1wbGVHZXR0ZXIpcmV0dXJuIGRhdGEmJmRhdGFba2V5XTtleHRlbmQoZGF0YSxrZXkpfX1mdW5jdGlvbiBqcUxpdGVIYXNDbGFzcyhlbGVtZW50LHNlbGVjdG9yKXtyZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGU/KCIgIisoZWxlbWVudC5nZXRBdHRyaWJ1dGUoImNsYXNzIil8fCIiKSsiICIpLnJlcGxhY2UoL1tcblx0XS9nLCIgIikuaW5kZXhPZigiICIrc2VsZWN0b3IrIiAiKT4tMTohMX1mdW5jdGlvbiBqcUxpdGVSZW1vdmVDbGFzcyhlbGVtZW50LGNzc0NsYXNzZXMpe2Nzc0NsYXNzZXMmJmVsZW1lbnQuc2V0QXR0cmlidXRlJiZmb3JFYWNoKGNzc0NsYXNzZXMuc3BsaXQoIiAiKSxmdW5jdGlvbihjc3NDbGFzcyl7ZWxlbWVudC5zZXRBdHRyaWJ1dGUoImNsYXNzIix0cmltKCgiICIrKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIikrIiAiKS5yZXBsYWNlKC9bXG5cdF0vZywiICIpLnJlcGxhY2UoIiAiK3RyaW0oY3NzQ2xhc3MpKyIgIiwiICIpKSl9KX1mdW5jdGlvbiBqcUxpdGVBZGRDbGFzcyhlbGVtZW50LGNzc0NsYXNzZXMpe2lmKGNzc0NsYXNzZXMmJmVsZW1lbnQuc2V0QXR0cmlidXRlKXt2YXIgZXhpc3RpbmdDbGFzc2VzPSgiICIrKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIikrIiAiKS5yZXBsYWNlKC9bXG5cdF0vZywiICIpO2ZvckVhY2goY3NzQ2xhc3Nlcy5zcGxpdCgiICIpLGZ1bmN0aW9uKGNzc0NsYXNzKXtjc3NDbGFzcz10cmltKGNzc0NsYXNzKSwtMT09PWV4aXN0aW5nQ2xhc3Nlcy5pbmRleE9mKCIgIitjc3NDbGFzcysiICIpJiYoZXhpc3RpbmdDbGFzc2VzKz1jc3NDbGFzcysiICIpfSksZWxlbWVudC5zZXRBdHRyaWJ1dGUoImNsYXNzIix0cmltKGV4aXN0aW5nQ2xhc3NlcykpfX1mdW5jdGlvbiBqcUxpdGVBZGROb2Rlcyhyb290LGVsZW1lbnRzKXtpZihlbGVtZW50cyl7ZWxlbWVudHM9ZWxlbWVudHMubm9kZU5hbWV8fCFpc0RlZmluZWQoZWxlbWVudHMubGVuZ3RoKXx8aXNXaW5kb3coZWxlbWVudHMpP1tlbGVtZW50c106ZWxlbWVudHM7Zm9yKHZhciBpPTA7aTxlbGVtZW50cy5sZW5ndGg7aSsrKXJvb3QucHVzaChlbGVtZW50c1tpXSl9fWZ1bmN0aW9uIGpxTGl0ZUNvbnRyb2xsZXIoZWxlbWVudCxuYW1lKXtyZXR1cm4ganFMaXRlSW5oZXJpdGVkRGF0YShlbGVtZW50LCIkIisobmFtZXx8Im5nQ29udHJvbGxlciIpKyJDb250cm9sbGVyIil9ZnVuY3Rpb24ganFMaXRlSW5oZXJpdGVkRGF0YShlbGVtZW50LG5hbWUsdmFsdWUpezk9PWVsZW1lbnQubm9kZVR5cGUmJihlbGVtZW50PWVsZW1lbnQuZG9jdW1lbnRFbGVtZW50KTtmb3IodmFyIG5hbWVzPWlzQXJyYXkobmFtZSk/bmFtZTpbbmFtZV07ZWxlbWVudDspe2Zvcih2YXIgaT0wLGlpPW5hbWVzLmxlbmd0aDtpaT5pO2krKylpZigodmFsdWU9anFMaXRlLmRhdGEoZWxlbWVudCxuYW1lc1tpXSkpIT09dW5kZWZpbmVkKXJldHVybiB2YWx1ZTtlbGVtZW50PWVsZW1lbnQucGFyZW50Tm9kZXx8MTE9PT1lbGVtZW50Lm5vZGVUeXBlJiZlbGVtZW50Lmhvc3R9fWZ1bmN0aW9uIGpxTGl0ZUVtcHR5KGVsZW1lbnQpe2Zvcih2YXIgaT0wLGNoaWxkTm9kZXM9ZWxlbWVudC5jaGlsZE5vZGVzO2k8Y2hpbGROb2Rlcy5sZW5ndGg7aSsrKWpxTGl0ZURlYWxvYyhjaGlsZE5vZGVzW2ldKTtmb3IoO2VsZW1lbnQuZmlyc3RDaGlsZDspZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpfWZ1bmN0aW9uIGdldEJvb2xlYW5BdHRyTmFtZShlbGVtZW50LG5hbWUpe3ZhciBib29sZWFuQXR0cj1CT09MRUFOX0FUVFJbbmFtZS50b0xvd2VyQ2FzZSgpXTtyZXR1cm4gYm9vbGVhbkF0dHImJkJPT0xFQU5fRUxFTUVOVFNbZWxlbWVudC5ub2RlTmFtZV0mJmJvb2xlYW5BdHRyfWZ1bmN0aW9uIGNyZWF0ZUV2ZW50SGFuZGxlcihlbGVtZW50LGV2ZW50cyl7dmFyIGV2ZW50SGFuZGxlcj1mdW5jdGlvbihldmVudCx0eXBlKXtpZihldmVudC5wcmV2ZW50RGVmYXVsdHx8KGV2ZW50LnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7ZXZlbnQucmV0dXJuVmFsdWU9ITF9KSxldmVudC5zdG9wUHJvcGFnYXRpb258fChldmVudC5zdG9wUHJvcGFnYXRpb249ZnVuY3Rpb24oKXtldmVudC5jYW5jZWxCdWJibGU9ITB9KSxldmVudC50YXJnZXR8fChldmVudC50YXJnZXQ9ZXZlbnQuc3JjRWxlbWVudHx8ZG9jdW1lbnQpLGlzVW5kZWZpbmVkKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpKXt2YXIgcHJldmVudD1ldmVudC5wcmV2ZW50RGVmYXVsdDtldmVudC5wcmV2ZW50RGVmYXVsdD1mdW5jdGlvbigpe2V2ZW50LmRlZmF1bHRQcmV2ZW50ZWQ9ITAscHJldmVudC5jYWxsKGV2ZW50KX0sZXZlbnQuZGVmYXVsdFByZXZlbnRlZD0hMX1ldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXZlbnQuZGVmYXVsdFByZXZlbnRlZHx8ZXZlbnQucmV0dXJuVmFsdWU9PT0hMX07dmFyIGV2ZW50SGFuZGxlcnNDb3B5PXNoYWxsb3dDb3B5KGV2ZW50c1t0eXBlfHxldmVudC50eXBlXXx8W10pO2ZvckVhY2goZXZlbnRIYW5kbGVyc0NvcHksZnVuY3Rpb24oZm4pe2ZuLmNhbGwoZWxlbWVudCxldmVudCl9KSw4Pj1tc2llPyhldmVudC5wcmV2ZW50RGVmYXVsdD1udWxsLGV2ZW50LnN0b3BQcm9wYWdhdGlvbj1udWxsLGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZD1udWxsKTooZGVsZXRlIGV2ZW50LnByZXZlbnREZWZhdWx0LGRlbGV0ZSBldmVudC5zdG9wUHJvcGFnYXRpb24sZGVsZXRlIGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCl9O3JldHVybiBldmVudEhhbmRsZXIuZWxlbT1lbGVtZW50LGV2ZW50SGFuZGxlcn1mdW5jdGlvbiBoYXNoS2V5KG9iaixuZXh0VWlkRm4pe3ZhciBrZXksb2JqVHlwZT10eXBlb2Ygb2JqO3JldHVybiJmdW5jdGlvbiI9PW9ialR5cGV8fCJvYmplY3QiPT1vYmpUeXBlJiZudWxsIT09b2JqPyJmdW5jdGlvbiI9PXR5cGVvZihrZXk9b2JqLiQkaGFzaEtleSk/a2V5PW9iai4kJGhhc2hLZXkoKTprZXk9PT11bmRlZmluZWQmJihrZXk9b2JqLiQkaGFzaEtleT0obmV4dFVpZEZufHxuZXh0VWlkKSgpKTprZXk9b2JqLG9ialR5cGUrIjoiK2tleX1mdW5jdGlvbiBIYXNoTWFwKGFycmF5LGlzb2xhdGVkVWlkKXtpZihpc29sYXRlZFVpZCl7dmFyIHVpZD0wO3RoaXMubmV4dFVpZD1mdW5jdGlvbigpe3JldHVybisrdWlkfX1mb3JFYWNoKGFycmF5LHRoaXMucHV0LHRoaXMpfWZ1bmN0aW9uIGFubm90YXRlKGZuKXt2YXIgJGluamVjdCxmblRleHQsYXJnRGVjbCxsYXN0O3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBmbj8oJGluamVjdD1mbi4kaW5qZWN0KXx8KCRpbmplY3Q9W10sZm4ubGVuZ3RoJiYoZm5UZXh0PWZuLnRvU3RyaW5nKCkucmVwbGFjZShTVFJJUF9DT01NRU5UUywiIiksYXJnRGVjbD1mblRleHQubWF0Y2goRk5fQVJHUyksZm9yRWFjaChhcmdEZWNsWzFdLnNwbGl0KEZOX0FSR19TUExJVCksZnVuY3Rpb24oYXJnKXthcmcucmVwbGFjZShGTl9BUkcsZnVuY3Rpb24oYWxsLHVuZGVyc2NvcmUsbmFtZSl7JGluamVjdC5wdXNoKG5hbWUpfSl9KSksZm4uJGluamVjdD0kaW5qZWN0KTppc0FycmF5KGZuKT8obGFzdD1mbi5sZW5ndGgtMSxhc3NlcnRBcmdGbihmbltsYXN0XSwiZm4iKSwkaW5qZWN0PWZuLnNsaWNlKDAsbGFzdCkpOmFzc2VydEFyZ0ZuKGZuLCJmbiIsITApLCRpbmplY3R9ZnVuY3Rpb24gY3JlYXRlSW5qZWN0b3IobW9kdWxlc1RvTG9hZCl7ZnVuY3Rpb24gc3VwcG9ydE9iamVjdChkZWxlZ2F0ZSl7cmV0dXJuIGZ1bmN0aW9uKGtleSx2YWx1ZSl7cmV0dXJuIGlzT2JqZWN0KGtleSk/dm9pZCBmb3JFYWNoKGtleSxyZXZlcnNlUGFyYW1zKGRlbGVnYXRlKSk6ZGVsZWdhdGUoa2V5LHZhbHVlKX19ZnVuY3Rpb24gcHJvdmlkZXIobmFtZSxwcm92aWRlcl8pe2lmKGFzc2VydE5vdEhhc093blByb3BlcnR5KG5hbWUsInNlcnZpY2UiKSwoaXNGdW5jdGlvbihwcm92aWRlcl8pfHxpc0FycmF5KHByb3ZpZGVyXykpJiYocHJvdmlkZXJfPXByb3ZpZGVySW5qZWN0b3IuaW5zdGFudGlhdGUocHJvdmlkZXJfKSksIXByb3ZpZGVyXy4kZ2V0KXRocm93ICRpbmplY3Rvck1pbkVycigicGdldCIsIlByb3ZpZGVyICd7MH0nIG11c3QgZGVmaW5lICRnZXQgZmFjdG9yeSBtZXRob2QuIixuYW1lKTtyZXR1cm4gcHJvdmlkZXJDYWNoZVtuYW1lK3Byb3ZpZGVyU3VmZml4XT1wcm92aWRlcl99ZnVuY3Rpb24gZmFjdG9yeShuYW1lLGZhY3RvcnlGbil7cmV0dXJuIHByb3ZpZGVyKG5hbWUseyRnZXQ6ZmFjdG9yeUZufSl9ZnVuY3Rpb24gc2VydmljZShuYW1lLGNvbnN0cnVjdG9yKXtyZXR1cm4gZmFjdG9yeShuYW1lLFsiJGluamVjdG9yIixmdW5jdGlvbigkaW5qZWN0b3Ipe3JldHVybiAkaW5qZWN0b3IuaW5zdGFudGlhdGUoY29uc3RydWN0b3IpfV0pfWZ1bmN0aW9uIHZhbHVlKG5hbWUsdmFsKXtyZXR1cm4gZmFjdG9yeShuYW1lLHZhbHVlRm4odmFsKSl9ZnVuY3Rpb24gY29uc3RhbnQobmFtZSx2YWx1ZSl7YXNzZXJ0Tm90SGFzT3duUHJvcGVydHkobmFtZSwiY29uc3RhbnQiKSxwcm92aWRlckNhY2hlW25hbWVdPXZhbHVlLGluc3RhbmNlQ2FjaGVbbmFtZV09dmFsdWV9ZnVuY3Rpb24gZGVjb3JhdG9yKHNlcnZpY2VOYW1lLGRlY29yRm4pe3ZhciBvcmlnUHJvdmlkZXI9cHJvdmlkZXJJbmplY3Rvci5nZXQoc2VydmljZU5hbWUrcHJvdmlkZXJTdWZmaXgpLG9yaWckZ2V0PW9yaWdQcm92aWRlci4kZ2V0O29yaWdQcm92aWRlci4kZ2V0PWZ1bmN0aW9uKCl7dmFyIG9yaWdJbnN0YW5jZT1pbnN0YW5jZUluamVjdG9yLmludm9rZShvcmlnJGdldCxvcmlnUHJvdmlkZXIpO3JldHVybiBpbnN0YW5jZUluamVjdG9yLmludm9rZShkZWNvckZuLG51bGwseyRkZWxlZ2F0ZTpvcmlnSW5zdGFuY2V9KX19ZnVuY3Rpb24gbG9hZE1vZHVsZXMobW9kdWxlc1RvTG9hZCl7dmFyIG1vZHVsZUZuLGludm9rZVF1ZXVlLGksaWkscnVuQmxvY2tzPVtdO3JldHVybiBmb3JFYWNoKG1vZHVsZXNUb0xvYWQsZnVuY3Rpb24obW9kdWxlKXtpZighbG9hZGVkTW9kdWxlcy5nZXQobW9kdWxlKSl7bG9hZGVkTW9kdWxlcy5wdXQobW9kdWxlLCEwKTt0cnl7aWYoaXNTdHJpbmcobW9kdWxlKSlmb3IobW9kdWxlRm49YW5ndWxhck1vZHVsZShtb2R1bGUpLHJ1bkJsb2Nrcz1ydW5CbG9ja3MuY29uY2F0KGxvYWRNb2R1bGVzKG1vZHVsZUZuLnJlcXVpcmVzKSkuY29uY2F0KG1vZHVsZUZuLl9ydW5CbG9ja3MpLGludm9rZVF1ZXVlPW1vZHVsZUZuLl9pbnZva2VRdWV1ZSxpPTAsaWk9aW52b2tlUXVldWUubGVuZ3RoO2lpPmk7aSsrKXt2YXIgaW52b2tlQXJncz1pbnZva2VRdWV1ZVtpXSxwcm92aWRlcj1wcm92aWRlckluamVjdG9yLmdldChpbnZva2VBcmdzWzBdKTtwcm92aWRlcltpbnZva2VBcmdzWzFdXS5hcHBseShwcm92aWRlcixpbnZva2VBcmdzWzJdKX1lbHNlIGlzRnVuY3Rpb24obW9kdWxlKT9ydW5CbG9ja3MucHVzaChwcm92aWRlckluamVjdG9yLmludm9rZShtb2R1bGUpKTppc0FycmF5KG1vZHVsZSk/cnVuQmxvY2tzLnB1c2gocHJvdmlkZXJJbmplY3Rvci5pbnZva2UobW9kdWxlKSk6YXNzZXJ0QXJnRm4obW9kdWxlLCJtb2R1bGUiKX1jYXRjaChlKXt0aHJvdyBpc0FycmF5KG1vZHVsZSkmJihtb2R1bGU9bW9kdWxlW21vZHVsZS5sZW5ndGgtMV0pLGUubWVzc2FnZSYmZS5zdGFjayYmLTE9PWUuc3RhY2suaW5kZXhPZihlLm1lc3NhZ2UpJiYoZT1lLm1lc3NhZ2UrIlxuIitlLnN0YWNrKSwkaW5qZWN0b3JNaW5FcnIoIm1vZHVsZXJyIiwiRmFpbGVkIHRvIGluc3RhbnRpYXRlIG1vZHVsZSB7MH0gZHVlIHRvOlxuezF9Iixtb2R1bGUsZS5zdGFja3x8ZS5tZXNzYWdlfHxlKX19fSkscnVuQmxvY2tzfWZ1bmN0aW9uIGNyZWF0ZUludGVybmFsSW5qZWN0b3IoY2FjaGUsZmFjdG9yeSl7ZnVuY3Rpb24gZ2V0U2VydmljZShzZXJ2aWNlTmFtZSl7aWYoY2FjaGUuaGFzT3duUHJvcGVydHkoc2VydmljZU5hbWUpKXtpZihjYWNoZVtzZXJ2aWNlTmFtZV09PT1JTlNUQU5USUFUSU5HKXRocm93ICRpbmplY3Rvck1pbkVycigiY2RlcCIsIkNpcmN1bGFyIGRlcGVuZGVuY3kgZm91bmQ6IHswfSIsc2VydmljZU5hbWUrIiA8LSAiK3BhdGguam9pbigiIDwtICIpKTtyZXR1cm4gY2FjaGVbc2VydmljZU5hbWVdfXRyeXtyZXR1cm4gcGF0aC51bnNoaWZ0KHNlcnZpY2VOYW1lKSxjYWNoZVtzZXJ2aWNlTmFtZV09SU5TVEFOVElBVElORyxjYWNoZVtzZXJ2aWNlTmFtZV09ZmFjdG9yeShzZXJ2aWNlTmFtZSl9Y2F0Y2goZXJyKXt0aHJvdyBjYWNoZVtzZXJ2aWNlTmFtZV09PT1JTlNUQU5USUFUSU5HJiZkZWxldGUgY2FjaGVbc2VydmljZU5hbWVdLGVycn1maW5hbGx5e3BhdGguc2hpZnQoKX19ZnVuY3Rpb24gaW52b2tlKGZuLHNlbGYsbG9jYWxzKXt2YXIgbGVuZ3RoLGksa2V5LGFyZ3M9W10sJGluamVjdD1hbm5vdGF0ZShmbik7Zm9yKGk9MCxsZW5ndGg9JGluamVjdC5sZW5ndGg7bGVuZ3RoPmk7aSsrKXtpZihrZXk9JGluamVjdFtpXSwic3RyaW5nIiE9dHlwZW9mIGtleSl0aHJvdyAkaW5qZWN0b3JNaW5FcnIoIml0a24iLCJJbmNvcnJlY3QgaW5qZWN0aW9uIHRva2VuISBFeHBlY3RlZCBzZXJ2aWNlIG5hbWUgYXMgc3RyaW5nLCBnb3QgezB9IixrZXkpO2FyZ3MucHVzaChsb2NhbHMmJmxvY2Fscy5oYXNPd25Qcm9wZXJ0eShrZXkpP2xvY2Fsc1trZXldOmdldFNlcnZpY2Uoa2V5KSl9cmV0dXJuIGlzQXJyYXkoZm4pJiYoZm49Zm5bbGVuZ3RoXSksZm4uYXBwbHkoc2VsZixhcmdzKX1mdW5jdGlvbiBpbnN0YW50aWF0ZShUeXBlLGxvY2Fscyl7dmFyIGluc3RhbmNlLHJldHVybmVkVmFsdWUsQ29uc3RydWN0b3I9ZnVuY3Rpb24oKXt9O3JldHVybiBDb25zdHJ1Y3Rvci5wcm90b3R5cGU9KGlzQXJyYXkoVHlwZSk/VHlwZVtUeXBlLmxlbmd0aC0xXTpUeXBlKS5wcm90b3R5cGUsaW5zdGFuY2U9bmV3IENvbnN0cnVjdG9yLHJldHVybmVkVmFsdWU9aW52b2tlKFR5cGUsaW5zdGFuY2UsbG9jYWxzKSxpc09iamVjdChyZXR1cm5lZFZhbHVlKXx8aXNGdW5jdGlvbihyZXR1cm5lZFZhbHVlKT9yZXR1cm5lZFZhbHVlOmluc3RhbmNlfXJldHVybntpbnZva2U6aW52b2tlLGluc3RhbnRpYXRlOmluc3RhbnRpYXRlLGdldDpnZXRTZXJ2aWNlLGFubm90YXRlOmFubm90YXRlLGhhczpmdW5jdGlvbihuYW1lKXtyZXR1cm4gcHJvdmlkZXJDYWNoZS5oYXNPd25Qcm9wZXJ0eShuYW1lK3Byb3ZpZGVyU3VmZml4KXx8Y2FjaGUuaGFzT3duUHJvcGVydHkobmFtZSl9fX12YXIgSU5TVEFOVElBVElORz17fSxwcm92aWRlclN1ZmZpeD0iUHJvdmlkZXIiLHBhdGg9W10sbG9hZGVkTW9kdWxlcz1uZXcgSGFzaE1hcChbXSwhMCkscHJvdmlkZXJDYWNoZT17JHByb3ZpZGU6e3Byb3ZpZGVyOnN1cHBvcnRPYmplY3QocHJvdmlkZXIpLGZhY3Rvcnk6c3VwcG9ydE9iamVjdChmYWN0b3J5KSxzZXJ2aWNlOnN1cHBvcnRPYmplY3Qoc2VydmljZSksdmFsdWU6c3VwcG9ydE9iamVjdCh2YWx1ZSksY29uc3RhbnQ6c3VwcG9ydE9iamVjdChjb25zdGFudCksZGVjb3JhdG9yOmRlY29yYXRvcn19LHByb3ZpZGVySW5qZWN0b3I9cHJvdmlkZXJDYWNoZS4kaW5qZWN0b3I9Y3JlYXRlSW50ZXJuYWxJbmplY3Rvcihwcm92aWRlckNhY2hlLGZ1bmN0aW9uKCl7dGhyb3cgJGluamVjdG9yTWluRXJyKCJ1bnByIiwiVW5rbm93biBwcm92aWRlcjogezB9IixwYXRoLmpvaW4oIiA8LSAiKSl9KSxpbnN0YW5jZUNhY2hlPXt9LGluc3RhbmNlSW5qZWN0b3I9aW5zdGFuY2VDYWNoZS4kaW5qZWN0b3I9Y3JlYXRlSW50ZXJuYWxJbmplY3RvcihpbnN0YW5jZUNhY2hlLGZ1bmN0aW9uKHNlcnZpY2VuYW1lKXt2YXIgcHJvdmlkZXI9cHJvdmlkZXJJbmplY3Rvci5nZXQoc2VydmljZW5hbWUrcHJvdmlkZXJTdWZmaXgpO3JldHVybiBpbnN0YW5jZUluamVjdG9yLmludm9rZShwcm92aWRlci4kZ2V0LHByb3ZpZGVyKX0pO3JldHVybiBmb3JFYWNoKGxvYWRNb2R1bGVzKG1vZHVsZXNUb0xvYWQpLGZ1bmN0aW9uKGZuKXtpbnN0YW5jZUluamVjdG9yLmludm9rZShmbnx8bm9vcCl9KSxpbnN0YW5jZUluamVjdG9yfWZ1bmN0aW9uICRBbmNob3JTY3JvbGxQcm92aWRlcigpe3ZhciBhdXRvU2Nyb2xsaW5nRW5hYmxlZD0hMDt0aGlzLmRpc2FibGVBdXRvU2Nyb2xsaW5nPWZ1bmN0aW9uKCl7YXV0b1Njcm9sbGluZ0VuYWJsZWQ9ITF9LHRoaXMuJGdldD1bIiR3aW5kb3ciLCIkbG9jYXRpb24iLCIkcm9vdFNjb3BlIixmdW5jdGlvbigkd2luZG93LCRsb2NhdGlvbiwkcm9vdFNjb3BlKXtmdW5jdGlvbiBnZXRGaXJzdEFuY2hvcihsaXN0KXt2YXIgcmVzdWx0PW51bGw7cmV0dXJuIGZvckVhY2gobGlzdCxmdW5jdGlvbihlbGVtZW50KXtyZXN1bHR8fCJhIiE9PWxvd2VyY2FzZShlbGVtZW50Lm5vZGVOYW1lKXx8KHJlc3VsdD1lbGVtZW50KX0pLHJlc3VsdH1mdW5jdGlvbiBzY3JvbGwoKXt2YXIgZWxtLGhhc2g9JGxvY2F0aW9uLmhhc2goKTtoYXNoPyhlbG09ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaGFzaCkpP2VsbS5zY3JvbGxJbnRvVmlldygpOihlbG09Z2V0Rmlyc3RBbmNob3IoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoaGFzaCkpKT9lbG0uc2Nyb2xsSW50b1ZpZXcoKToidG9wIj09PWhhc2gmJiR3aW5kb3cuc2Nyb2xsVG8oMCwwKTokd2luZG93LnNjcm9sbFRvKDAsMCl9dmFyIGRvY3VtZW50PSR3aW5kb3cuZG9jdW1lbnQ7cmV0dXJuIGF1dG9TY3JvbGxpbmdFbmFibGVkJiYkcm9vdFNjb3BlLiR3YXRjaChmdW5jdGlvbigpe3JldHVybiAkbG9jYXRpb24uaGFzaCgpfSxmdW5jdGlvbigpeyRyb290U2NvcGUuJGV2YWxBc3luYyhzY3JvbGwpfSksc2Nyb2xsfV19ZnVuY3Rpb24gJCRBc3luY0NhbGxiYWNrUHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkJHJBRiIsIiR0aW1lb3V0IixmdW5jdGlvbigkJHJBRiwkdGltZW91dCl7cmV0dXJuICQkckFGLnN1cHBvcnRlZD9mdW5jdGlvbihmbil7cmV0dXJuICQkckFGKGZuKX06ZnVuY3Rpb24oZm4pe3JldHVybiAkdGltZW91dChmbiwwLCExKX19XX1mdW5jdGlvbiBCcm93c2VyKHdpbmRvdyxkb2N1bWVudCwkbG9nLCRzbmlmZmVyKXtmdW5jdGlvbiBjb21wbGV0ZU91dHN0YW5kaW5nUmVxdWVzdChmbil7dHJ5e2ZuLmFwcGx5KG51bGwsc2xpY2VBcmdzKGFyZ3VtZW50cywxKSl9ZmluYWxseXtpZihvdXRzdGFuZGluZ1JlcXVlc3RDb3VudC0tLDA9PT1vdXRzdGFuZGluZ1JlcXVlc3RDb3VudClmb3IoO291dHN0YW5kaW5nUmVxdWVzdENhbGxiYWNrcy5sZW5ndGg7KXRyeXtvdXRzdGFuZGluZ1JlcXVlc3RDYWxsYmFja3MucG9wKCkoKX1jYXRjaChlKXskbG9nLmVycm9yKGUpfX19ZnVuY3Rpb24gc3RhcnRQb2xsZXIoaW50ZXJ2YWwsc2V0VGltZW91dCl7IWZ1bmN0aW9uIGNoZWNrKCl7Zm9yRWFjaChwb2xsRm5zLGZ1bmN0aW9uKHBvbGxGbil7cG9sbEZuKCl9KSxwb2xsVGltZW91dD1zZXRUaW1lb3V0KGNoZWNrLGludGVydmFsKX0oKX1mdW5jdGlvbiBmaXJlVXJsQ2hhbmdlKCl7bmV3TG9jYXRpb249bnVsbCxsYXN0QnJvd3NlclVybCE9c2VsZi51cmwoKSYmKGxhc3RCcm93c2VyVXJsPXNlbGYudXJsKCksZm9yRWFjaCh1cmxDaGFuZ2VMaXN0ZW5lcnMsZnVuY3Rpb24obGlzdGVuZXIpe2xpc3RlbmVyKHNlbGYudXJsKCkpfSkpfXZhciBzZWxmPXRoaXMscmF3RG9jdW1lbnQ9ZG9jdW1lbnRbMF0sbG9jYXRpb249d2luZG93LmxvY2F0aW9uLGhpc3Rvcnk9d2luZG93Lmhpc3Rvcnksc2V0VGltZW91dD13aW5kb3cuc2V0VGltZW91dCxjbGVhclRpbWVvdXQ9d2luZG93LmNsZWFyVGltZW91dCxwZW5kaW5nRGVmZXJJZHM9e307c2VsZi5pc01vY2s9ITE7dmFyIG91dHN0YW5kaW5nUmVxdWVzdENvdW50PTAsb3V0c3RhbmRpbmdSZXF1ZXN0Q2FsbGJhY2tzPVtdO3NlbGYuJCRjb21wbGV0ZU91dHN0YW5kaW5nUmVxdWVzdD1jb21wbGV0ZU91dHN0YW5kaW5nUmVxdWVzdCxzZWxmLiQkaW5jT3V0c3RhbmRpbmdSZXF1ZXN0Q291bnQ9ZnVuY3Rpb24oKXtvdXRzdGFuZGluZ1JlcXVlc3RDb3VudCsrfSxzZWxmLm5vdGlmeVdoZW5Ob091dHN0YW5kaW5nUmVxdWVzdHM9ZnVuY3Rpb24oY2FsbGJhY2spe2ZvckVhY2gocG9sbEZucyxmdW5jdGlvbihwb2xsRm4pe3BvbGxGbigpfSksMD09PW91dHN0YW5kaW5nUmVxdWVzdENvdW50P2NhbGxiYWNrKCk6b3V0c3RhbmRpbmdSZXF1ZXN0Q2FsbGJhY2tzLnB1c2goY2FsbGJhY2spfTt2YXIgcG9sbFRpbWVvdXQscG9sbEZucz1bXTtzZWxmLmFkZFBvbGxGbj1mdW5jdGlvbihmbil7cmV0dXJuIGlzVW5kZWZpbmVkKHBvbGxUaW1lb3V0KSYmc3RhcnRQb2xsZXIoMTAwLHNldFRpbWVvdXQpLHBvbGxGbnMucHVzaChmbiksZm59O3ZhciBsYXN0QnJvd3NlclVybD1sb2NhdGlvbi5ocmVmLGJhc2VFbGVtZW50PWRvY3VtZW50LmZpbmQoImJhc2UiKSxuZXdMb2NhdGlvbj1udWxsO3NlbGYudXJsPWZ1bmN0aW9uKHVybCxyZXBsYWNlKXtpZihsb2NhdGlvbiE9PXdpbmRvdy5sb2NhdGlvbiYmKGxvY2F0aW9uPXdpbmRvdy5sb2NhdGlvbiksaGlzdG9yeSE9PXdpbmRvdy5oaXN0b3J5JiYoaGlzdG9yeT13aW5kb3cuaGlzdG9yeSksdXJsKXtpZihsYXN0QnJvd3NlclVybD09dXJsKXJldHVybjsKcmV0dXJuIGxhc3RCcm93c2VyVXJsPXVybCwkc25pZmZlci5oaXN0b3J5P3JlcGxhY2U/aGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCwiIix1cmwpOihoaXN0b3J5LnB1c2hTdGF0ZShudWxsLCIiLHVybCksYmFzZUVsZW1lbnQuYXR0cigiaHJlZiIsYmFzZUVsZW1lbnQuYXR0cigiaHJlZiIpKSk6KG5ld0xvY2F0aW9uPXVybCxyZXBsYWNlP2xvY2F0aW9uLnJlcGxhY2UodXJsKTpsb2NhdGlvbi5ocmVmPXVybCksc2VsZn1yZXR1cm4gbmV3TG9jYXRpb258fGxvY2F0aW9uLmhyZWYucmVwbGFjZSgvJTI3L2csIiciKX07dmFyIHVybENoYW5nZUxpc3RlbmVycz1bXSx1cmxDaGFuZ2VJbml0PSExO3NlbGYub25VcmxDaGFuZ2U9ZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiB1cmxDaGFuZ2VJbml0fHwoJHNuaWZmZXIuaGlzdG9yeSYmanFMaXRlKHdpbmRvdykub24oInBvcHN0YXRlIixmaXJlVXJsQ2hhbmdlKSwkc25pZmZlci5oYXNoY2hhbmdlP2pxTGl0ZSh3aW5kb3cpLm9uKCJoYXNoY2hhbmdlIixmaXJlVXJsQ2hhbmdlKTpzZWxmLmFkZFBvbGxGbihmaXJlVXJsQ2hhbmdlKSx1cmxDaGFuZ2VJbml0PSEwKSx1cmxDaGFuZ2VMaXN0ZW5lcnMucHVzaChjYWxsYmFjayksY2FsbGJhY2t9LHNlbGYuJCRjaGVja1VybENoYW5nZT1maXJlVXJsQ2hhbmdlLHNlbGYuYmFzZUhyZWY9ZnVuY3Rpb24oKXt2YXIgaHJlZj1iYXNlRWxlbWVudC5hdHRyKCJocmVmIik7cmV0dXJuIGhyZWY/aHJlZi5yZXBsYWNlKC9eKGh0dHBzP1w6KT9cL1wvW15cL10qLywiIik6IiJ9O3ZhciBsYXN0Q29va2llcz17fSxsYXN0Q29va2llU3RyaW5nPSIiLGNvb2tpZVBhdGg9c2VsZi5iYXNlSHJlZigpO3NlbGYuY29va2llcz1mdW5jdGlvbihuYW1lLHZhbHVlKXt2YXIgY29va2llTGVuZ3RoLGNvb2tpZUFycmF5LGNvb2tpZSxpLGluZGV4O2lmKCFuYW1lKXtpZihyYXdEb2N1bWVudC5jb29raWUhPT1sYXN0Q29va2llU3RyaW5nKWZvcihsYXN0Q29va2llU3RyaW5nPXJhd0RvY3VtZW50LmNvb2tpZSxjb29raWVBcnJheT1sYXN0Q29va2llU3RyaW5nLnNwbGl0KCI7ICIpLGxhc3RDb29raWVzPXt9LGk9MDtpPGNvb2tpZUFycmF5Lmxlbmd0aDtpKyspY29va2llPWNvb2tpZUFycmF5W2ldLGluZGV4PWNvb2tpZS5pbmRleE9mKCI9IiksaW5kZXg+MCYmKG5hbWU9dW5lc2NhcGUoY29va2llLnN1YnN0cmluZygwLGluZGV4KSksbGFzdENvb2tpZXNbbmFtZV09PT11bmRlZmluZWQmJihsYXN0Q29va2llc1tuYW1lXT11bmVzY2FwZShjb29raWUuc3Vic3RyaW5nKGluZGV4KzEpKSkpO3JldHVybiBsYXN0Q29va2llc312YWx1ZT09PXVuZGVmaW5lZD9yYXdEb2N1bWVudC5jb29raWU9ZXNjYXBlKG5hbWUpKyI9O3BhdGg9Iitjb29raWVQYXRoKyI7ZXhwaXJlcz1UaHUsIDAxIEphbiAxOTcwIDAwOjAwOjAwIEdNVCI6aXNTdHJpbmcodmFsdWUpJiYoY29va2llTGVuZ3RoPShyYXdEb2N1bWVudC5jb29raWU9ZXNjYXBlKG5hbWUpKyI9Iitlc2NhcGUodmFsdWUpKyI7cGF0aD0iK2Nvb2tpZVBhdGgpLmxlbmd0aCsxLGNvb2tpZUxlbmd0aD40MDk2JiYkbG9nLndhcm4oIkNvb2tpZSAnIituYW1lKyInIHBvc3NpYmx5IG5vdCBzZXQgb3Igb3ZlcmZsb3dlZCBiZWNhdXNlIGl0IHdhcyB0b28gbGFyZ2UgKCIrY29va2llTGVuZ3RoKyIgPiA0MDk2IGJ5dGVzKSEiKSl9LHNlbGYuZGVmZXI9ZnVuY3Rpb24oZm4sZGVsYXkpe3ZhciB0aW1lb3V0SWQ7cmV0dXJuIG91dHN0YW5kaW5nUmVxdWVzdENvdW50KyssdGltZW91dElkPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtkZWxldGUgcGVuZGluZ0RlZmVySWRzW3RpbWVvdXRJZF0sY29tcGxldGVPdXRzdGFuZGluZ1JlcXVlc3QoZm4pfSxkZWxheXx8MCkscGVuZGluZ0RlZmVySWRzW3RpbWVvdXRJZF09ITAsdGltZW91dElkfSxzZWxmLmRlZmVyLmNhbmNlbD1mdW5jdGlvbihkZWZlcklkKXtyZXR1cm4gcGVuZGluZ0RlZmVySWRzW2RlZmVySWRdPyhkZWxldGUgcGVuZGluZ0RlZmVySWRzW2RlZmVySWRdLGNsZWFyVGltZW91dChkZWZlcklkKSxjb21wbGV0ZU91dHN0YW5kaW5nUmVxdWVzdChub29wKSwhMCk6ITF9fWZ1bmN0aW9uICRCcm93c2VyUHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkd2luZG93IiwiJGxvZyIsIiRzbmlmZmVyIiwiJGRvY3VtZW50IixmdW5jdGlvbigkd2luZG93LCRsb2csJHNuaWZmZXIsJGRvY3VtZW50KXtyZXR1cm4gbmV3IEJyb3dzZXIoJHdpbmRvdywkZG9jdW1lbnQsJGxvZywkc25pZmZlcil9XX1mdW5jdGlvbiAkQ2FjaGVGYWN0b3J5UHJvdmlkZXIoKXt0aGlzLiRnZXQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBjYWNoZUZhY3RvcnkoY2FjaGVJZCxvcHRpb25zKXtmdW5jdGlvbiByZWZyZXNoKGVudHJ5KXtlbnRyeSE9ZnJlc2hFbmQmJihzdGFsZUVuZD9zdGFsZUVuZD09ZW50cnkmJihzdGFsZUVuZD1lbnRyeS5uKTpzdGFsZUVuZD1lbnRyeSxsaW5rKGVudHJ5Lm4sZW50cnkucCksbGluayhlbnRyeSxmcmVzaEVuZCksZnJlc2hFbmQ9ZW50cnksZnJlc2hFbmQubj1udWxsKX1mdW5jdGlvbiBsaW5rKG5leHRFbnRyeSxwcmV2RW50cnkpe25leHRFbnRyeSE9cHJldkVudHJ5JiYobmV4dEVudHJ5JiYobmV4dEVudHJ5LnA9cHJldkVudHJ5KSxwcmV2RW50cnkmJihwcmV2RW50cnkubj1uZXh0RW50cnkpKX1pZihjYWNoZUlkIGluIGNhY2hlcyl0aHJvdyBtaW5FcnIoIiRjYWNoZUZhY3RvcnkiKSgiaWlkIiwiQ2FjaGVJZCAnezB9JyBpcyBhbHJlYWR5IHRha2VuISIsY2FjaGVJZCk7dmFyIHNpemU9MCxzdGF0cz1leHRlbmQoe30sb3B0aW9ucyx7aWQ6Y2FjaGVJZH0pLGRhdGE9e30sY2FwYWNpdHk9b3B0aW9ucyYmb3B0aW9ucy5jYXBhY2l0eXx8TnVtYmVyLk1BWF9WQUxVRSxscnVIYXNoPXt9LGZyZXNoRW5kPW51bGwsc3RhbGVFbmQ9bnVsbDtyZXR1cm4gY2FjaGVzW2NhY2hlSWRdPXtwdXQ6ZnVuY3Rpb24oa2V5LHZhbHVlKXtpZihjYXBhY2l0eTxOdW1iZXIuTUFYX1ZBTFVFKXt2YXIgbHJ1RW50cnk9bHJ1SGFzaFtrZXldfHwobHJ1SGFzaFtrZXldPXtrZXk6a2V5fSk7cmVmcmVzaChscnVFbnRyeSl9aWYoIWlzVW5kZWZpbmVkKHZhbHVlKSlyZXR1cm4ga2V5IGluIGRhdGF8fHNpemUrKyxkYXRhW2tleV09dmFsdWUsc2l6ZT5jYXBhY2l0eSYmdGhpcy5yZW1vdmUoc3RhbGVFbmQua2V5KSx2YWx1ZX0sZ2V0OmZ1bmN0aW9uKGtleSl7aWYoY2FwYWNpdHk8TnVtYmVyLk1BWF9WQUxVRSl7dmFyIGxydUVudHJ5PWxydUhhc2hba2V5XTtpZighbHJ1RW50cnkpcmV0dXJuO3JlZnJlc2gobHJ1RW50cnkpfXJldHVybiBkYXRhW2tleV19LHJlbW92ZTpmdW5jdGlvbihrZXkpe2lmKGNhcGFjaXR5PE51bWJlci5NQVhfVkFMVUUpe3ZhciBscnVFbnRyeT1scnVIYXNoW2tleV07aWYoIWxydUVudHJ5KXJldHVybjtscnVFbnRyeT09ZnJlc2hFbmQmJihmcmVzaEVuZD1scnVFbnRyeS5wKSxscnVFbnRyeT09c3RhbGVFbmQmJihzdGFsZUVuZD1scnVFbnRyeS5uKSxsaW5rKGxydUVudHJ5Lm4sbHJ1RW50cnkucCksZGVsZXRlIGxydUhhc2hba2V5XX1kZWxldGUgZGF0YVtrZXldLHNpemUtLX0scmVtb3ZlQWxsOmZ1bmN0aW9uKCl7ZGF0YT17fSxzaXplPTAsbHJ1SGFzaD17fSxmcmVzaEVuZD1zdGFsZUVuZD1udWxsfSxkZXN0cm95OmZ1bmN0aW9uKCl7ZGF0YT1udWxsLHN0YXRzPW51bGwsbHJ1SGFzaD1udWxsLGRlbGV0ZSBjYWNoZXNbY2FjaGVJZF19LGluZm86ZnVuY3Rpb24oKXtyZXR1cm4gZXh0ZW5kKHt9LHN0YXRzLHtzaXplOnNpemV9KX19fXZhciBjYWNoZXM9e307cmV0dXJuIGNhY2hlRmFjdG9yeS5pbmZvPWZ1bmN0aW9uKCl7dmFyIGluZm89e307cmV0dXJuIGZvckVhY2goY2FjaGVzLGZ1bmN0aW9uKGNhY2hlLGNhY2hlSWQpe2luZm9bY2FjaGVJZF09Y2FjaGUuaW5mbygpfSksaW5mb30sY2FjaGVGYWN0b3J5LmdldD1mdW5jdGlvbihjYWNoZUlkKXtyZXR1cm4gY2FjaGVzW2NhY2hlSWRdfSxjYWNoZUZhY3Rvcnl9fWZ1bmN0aW9uICRUZW1wbGF0ZUNhY2hlUHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkY2FjaGVGYWN0b3J5IixmdW5jdGlvbigkY2FjaGVGYWN0b3J5KXtyZXR1cm4gJGNhY2hlRmFjdG9yeSgidGVtcGxhdGVzIil9XX1mdW5jdGlvbiAkQ29tcGlsZVByb3ZpZGVyKCRwcm92aWRlLCQkc2FuaXRpemVVcmlQcm92aWRlcil7dmFyIGhhc0RpcmVjdGl2ZXM9e30sU3VmZml4PSJEaXJlY3RpdmUiLENPTU1FTlRfRElSRUNUSVZFX1JFR0VYUD0vXlxzKmRpcmVjdGl2ZVw6XHMqKFtcZFx3X1wtXSspXHMrKC4qKSQvLENMQVNTX0RJUkVDVElWRV9SRUdFWFA9LygoW1xkXHdfXC1dKykoPzpcOihbXjtdKykpPzs/KS8sRVZFTlRfSEFORExFUl9BVFRSX1JFR0VYUD0vXihvblthLXpdK3xmb3JtYWN0aW9uKSQvO3RoaXMuZGlyZWN0aXZlPWZ1bmN0aW9uIHJlZ2lzdGVyRGlyZWN0aXZlKG5hbWUsZGlyZWN0aXZlRmFjdG9yeSl7cmV0dXJuIGFzc2VydE5vdEhhc093blByb3BlcnR5KG5hbWUsImRpcmVjdGl2ZSIpLGlzU3RyaW5nKG5hbWUpPyhhc3NlcnRBcmcoZGlyZWN0aXZlRmFjdG9yeSwiZGlyZWN0aXZlRmFjdG9yeSIpLGhhc0RpcmVjdGl2ZXMuaGFzT3duUHJvcGVydHkobmFtZSl8fChoYXNEaXJlY3RpdmVzW25hbWVdPVtdLCRwcm92aWRlLmZhY3RvcnkobmFtZStTdWZmaXgsWyIkaW5qZWN0b3IiLCIkZXhjZXB0aW9uSGFuZGxlciIsZnVuY3Rpb24oJGluamVjdG9yLCRleGNlcHRpb25IYW5kbGVyKXt2YXIgZGlyZWN0aXZlcz1bXTtyZXR1cm4gZm9yRWFjaChoYXNEaXJlY3RpdmVzW25hbWVdLGZ1bmN0aW9uKGRpcmVjdGl2ZUZhY3RvcnksaW5kZXgpe3RyeXt2YXIgZGlyZWN0aXZlPSRpbmplY3Rvci5pbnZva2UoZGlyZWN0aXZlRmFjdG9yeSk7aXNGdW5jdGlvbihkaXJlY3RpdmUpP2RpcmVjdGl2ZT17Y29tcGlsZTp2YWx1ZUZuKGRpcmVjdGl2ZSl9OiFkaXJlY3RpdmUuY29tcGlsZSYmZGlyZWN0aXZlLmxpbmsmJihkaXJlY3RpdmUuY29tcGlsZT12YWx1ZUZuKGRpcmVjdGl2ZS5saW5rKSksZGlyZWN0aXZlLnByaW9yaXR5PWRpcmVjdGl2ZS5wcmlvcml0eXx8MCxkaXJlY3RpdmUuaW5kZXg9aW5kZXgsZGlyZWN0aXZlLm5hbWU9ZGlyZWN0aXZlLm5hbWV8fG5hbWUsZGlyZWN0aXZlLnJlcXVpcmU9ZGlyZWN0aXZlLnJlcXVpcmV8fGRpcmVjdGl2ZS5jb250cm9sbGVyJiZkaXJlY3RpdmUubmFtZSxkaXJlY3RpdmUucmVzdHJpY3Q9ZGlyZWN0aXZlLnJlc3RyaWN0fHwiQSIsZGlyZWN0aXZlcy5wdXNoKGRpcmVjdGl2ZSl9Y2F0Y2goZSl7JGV4Y2VwdGlvbkhhbmRsZXIoZSl9fSksZGlyZWN0aXZlc31dKSksaGFzRGlyZWN0aXZlc1tuYW1lXS5wdXNoKGRpcmVjdGl2ZUZhY3RvcnkpKTpmb3JFYWNoKG5hbWUscmV2ZXJzZVBhcmFtcyhyZWdpc3RlckRpcmVjdGl2ZSkpLHRoaXN9LHRoaXMuYUhyZWZTYW5pdGl6YXRpb25XaGl0ZWxpc3Q9ZnVuY3Rpb24ocmVnZXhwKXtyZXR1cm4gaXNEZWZpbmVkKHJlZ2V4cCk/KCQkc2FuaXRpemVVcmlQcm92aWRlci5hSHJlZlNhbml0aXphdGlvbldoaXRlbGlzdChyZWdleHApLHRoaXMpOiQkc2FuaXRpemVVcmlQcm92aWRlci5hSHJlZlNhbml0aXphdGlvbldoaXRlbGlzdCgpfSx0aGlzLmltZ1NyY1Nhbml0aXphdGlvbldoaXRlbGlzdD1mdW5jdGlvbihyZWdleHApe3JldHVybiBpc0RlZmluZWQocmVnZXhwKT8oJCRzYW5pdGl6ZVVyaVByb3ZpZGVyLmltZ1NyY1Nhbml0aXphdGlvbldoaXRlbGlzdChyZWdleHApLHRoaXMpOiQkc2FuaXRpemVVcmlQcm92aWRlci5pbWdTcmNTYW5pdGl6YXRpb25XaGl0ZWxpc3QoKX0sdGhpcy4kZ2V0PVsiJGluamVjdG9yIiwiJGludGVycG9sYXRlIiwiJGV4Y2VwdGlvbkhhbmRsZXIiLCIkaHR0cCIsIiR0ZW1wbGF0ZUNhY2hlIiwiJHBhcnNlIiwiJGNvbnRyb2xsZXIiLCIkcm9vdFNjb3BlIiwiJGRvY3VtZW50IiwiJHNjZSIsIiRhbmltYXRlIiwiJCRzYW5pdGl6ZVVyaSIsZnVuY3Rpb24oJGluamVjdG9yLCRpbnRlcnBvbGF0ZSwkZXhjZXB0aW9uSGFuZGxlciwkaHR0cCwkdGVtcGxhdGVDYWNoZSwkcGFyc2UsJGNvbnRyb2xsZXIsJHJvb3RTY29wZSwkZG9jdW1lbnQsJHNjZSwkYW5pbWF0ZSwkJHNhbml0aXplVXJpKXtmdW5jdGlvbiBjb21waWxlKCRjb21waWxlTm9kZXMsdHJhbnNjbHVkZUZuLG1heFByaW9yaXR5LGlnbm9yZURpcmVjdGl2ZSxwcmV2aW91c0NvbXBpbGVDb250ZXh0KXskY29tcGlsZU5vZGVzIGluc3RhbmNlb2YganFMaXRlfHwoJGNvbXBpbGVOb2Rlcz1qcUxpdGUoJGNvbXBpbGVOb2RlcykpLGZvckVhY2goJGNvbXBpbGVOb2RlcyxmdW5jdGlvbihub2RlLGluZGV4KXszPT1ub2RlLm5vZGVUeXBlJiZub2RlLm5vZGVWYWx1ZS5tYXRjaCgvXFMrLykmJigkY29tcGlsZU5vZGVzW2luZGV4XT1ub2RlPWpxTGl0ZShub2RlKS53cmFwKCI8c3Bhbj48L3NwYW4+IikucGFyZW50KClbMF0pfSk7dmFyIGNvbXBvc2l0ZUxpbmtGbj1jb21waWxlTm9kZXMoJGNvbXBpbGVOb2Rlcyx0cmFuc2NsdWRlRm4sJGNvbXBpbGVOb2RlcyxtYXhQcmlvcml0eSxpZ25vcmVEaXJlY3RpdmUscHJldmlvdXNDb21waWxlQ29udGV4dCk7cmV0dXJuIHNhZmVBZGRDbGFzcygkY29tcGlsZU5vZGVzLCJuZy1zY29wZSIpLGZ1bmN0aW9uKHNjb3BlLGNsb25lQ29ubmVjdEZuLHRyYW5zY2x1ZGVDb250cm9sbGVycyxwYXJlbnRCb3VuZFRyYW5zY2x1ZGVGbil7YXNzZXJ0QXJnKHNjb3BlLCJzY29wZSIpO3ZhciAkbGlua05vZGU9Y2xvbmVDb25uZWN0Rm4/SlFMaXRlUHJvdG90eXBlLmNsb25lLmNhbGwoJGNvbXBpbGVOb2Rlcyk6JGNvbXBpbGVOb2Rlcztmb3JFYWNoKHRyYW5zY2x1ZGVDb250cm9sbGVycyxmdW5jdGlvbihpbnN0YW5jZSxuYW1lKXskbGlua05vZGUuZGF0YSgiJCIrbmFtZSsiQ29udHJvbGxlciIsaW5zdGFuY2UpfSk7Zm9yKHZhciBpPTAsaWk9JGxpbmtOb2RlLmxlbmd0aDtpaT5pO2krKyl7dmFyIG5vZGU9JGxpbmtOb2RlW2ldLG5vZGVUeXBlPW5vZGUubm9kZVR5cGU7KDE9PT1ub2RlVHlwZXx8OT09PW5vZGVUeXBlKSYmJGxpbmtOb2RlLmVxKGkpLmRhdGEoIiRzY29wZSIsc2NvcGUpfXJldHVybiBjbG9uZUNvbm5lY3RGbiYmY2xvbmVDb25uZWN0Rm4oJGxpbmtOb2RlLHNjb3BlKSxjb21wb3NpdGVMaW5rRm4mJmNvbXBvc2l0ZUxpbmtGbihzY29wZSwkbGlua05vZGUsJGxpbmtOb2RlLHBhcmVudEJvdW5kVHJhbnNjbHVkZUZuKSwkbGlua05vZGV9fWZ1bmN0aW9uIHNhZmVBZGRDbGFzcygkZWxlbWVudCxjbGFzc05hbWUpe3RyeXskZWxlbWVudC5hZGRDbGFzcyhjbGFzc05hbWUpfWNhdGNoKGUpe319ZnVuY3Rpb24gY29tcGlsZU5vZGVzKG5vZGVMaXN0LHRyYW5zY2x1ZGVGbiwkcm9vdEVsZW1lbnQsbWF4UHJpb3JpdHksaWdub3JlRGlyZWN0aXZlLHByZXZpb3VzQ29tcGlsZUNvbnRleHQpe2Z1bmN0aW9uIGNvbXBvc2l0ZUxpbmtGbihzY29wZSxub2RlTGlzdCwkcm9vdEVsZW1lbnQscGFyZW50Qm91bmRUcmFuc2NsdWRlRm4pe3ZhciBub2RlTGlua0ZuLGNoaWxkTGlua0ZuLG5vZGUsY2hpbGRTY29wZSxpLGlpLG4sY2hpbGRCb3VuZFRyYW5zY2x1ZGVGbixub2RlTGlzdExlbmd0aD1ub2RlTGlzdC5sZW5ndGgsc3RhYmxlTm9kZUxpc3Q9bmV3IEFycmF5KG5vZGVMaXN0TGVuZ3RoKTtmb3IoaT0wO25vZGVMaXN0TGVuZ3RoPmk7aSsrKXN0YWJsZU5vZGVMaXN0W2ldPW5vZGVMaXN0W2ldO2ZvcihpPTAsbj0wLGlpPWxpbmtGbnMubGVuZ3RoO2lpPmk7bisrKW5vZGU9c3RhYmxlTm9kZUxpc3Rbbl0sbm9kZUxpbmtGbj1saW5rRm5zW2krK10sY2hpbGRMaW5rRm49bGlua0Zuc1tpKytdLG5vZGVMaW5rRm4/KG5vZGVMaW5rRm4uc2NvcGU/KGNoaWxkU2NvcGU9c2NvcGUuJG5ldygpLGpxTGl0ZS5kYXRhKG5vZGUsIiRzY29wZSIsY2hpbGRTY29wZSkpOmNoaWxkU2NvcGU9c2NvcGUsY2hpbGRCb3VuZFRyYW5zY2x1ZGVGbj1ub2RlTGlua0ZuLnRyYW5zY2x1ZGVPblRoaXNFbGVtZW50P2NyZWF0ZUJvdW5kVHJhbnNjbHVkZUZuKHNjb3BlLG5vZGVMaW5rRm4udHJhbnNjbHVkZSxwYXJlbnRCb3VuZFRyYW5zY2x1ZGVGbik6IW5vZGVMaW5rRm4udGVtcGxhdGVPblRoaXNFbGVtZW50JiZwYXJlbnRCb3VuZFRyYW5zY2x1ZGVGbj9wYXJlbnRCb3VuZFRyYW5zY2x1ZGVGbjohcGFyZW50Qm91bmRUcmFuc2NsdWRlRm4mJnRyYW5zY2x1ZGVGbj9jcmVhdGVCb3VuZFRyYW5zY2x1ZGVGbihzY29wZSx0cmFuc2NsdWRlRm4pOm51bGwsbm9kZUxpbmtGbihjaGlsZExpbmtGbixjaGlsZFNjb3BlLG5vZGUsJHJvb3RFbGVtZW50LGNoaWxkQm91bmRUcmFuc2NsdWRlRm4pKTpjaGlsZExpbmtGbiYmY2hpbGRMaW5rRm4oc2NvcGUsbm9kZS5jaGlsZE5vZGVzLHVuZGVmaW5lZCxwYXJlbnRCb3VuZFRyYW5zY2x1ZGVGbil9Zm9yKHZhciBhdHRycyxkaXJlY3RpdmVzLG5vZGVMaW5rRm4sY2hpbGROb2RlcyxjaGlsZExpbmtGbixsaW5rRm5Gb3VuZCxsaW5rRm5zPVtdLGk9MDtpPG5vZGVMaXN0Lmxlbmd0aDtpKyspYXR0cnM9bmV3IEF0dHJpYnV0ZXMsZGlyZWN0aXZlcz1jb2xsZWN0RGlyZWN0aXZlcyhub2RlTGlzdFtpXSxbXSxhdHRycywwPT09aT9tYXhQcmlvcml0eTp1bmRlZmluZWQsaWdub3JlRGlyZWN0aXZlKSxub2RlTGlua0ZuPWRpcmVjdGl2ZXMubGVuZ3RoP2FwcGx5RGlyZWN0aXZlc1RvTm9kZShkaXJlY3RpdmVzLG5vZGVMaXN0W2ldLGF0dHJzLHRyYW5zY2x1ZGVGbiwkcm9vdEVsZW1lbnQsbnVsbCxbXSxbXSxwcmV2aW91c0NvbXBpbGVDb250ZXh0KTpudWxsLG5vZGVMaW5rRm4mJm5vZGVMaW5rRm4uc2NvcGUmJnNhZmVBZGRDbGFzcyhhdHRycy4kJGVsZW1lbnQsIm5nLXNjb3BlIiksY2hpbGRMaW5rRm49bm9kZUxpbmtGbiYmbm9kZUxpbmtGbi50ZXJtaW5hbHx8IShjaGlsZE5vZGVzPW5vZGVMaXN0W2ldLmNoaWxkTm9kZXMpfHwhY2hpbGROb2Rlcy5sZW5ndGg/bnVsbDpjb21waWxlTm9kZXMoY2hpbGROb2Rlcyxub2RlTGlua0ZuPyhub2RlTGlua0ZuLnRyYW5zY2x1ZGVPblRoaXNFbGVtZW50fHwhbm9kZUxpbmtGbi50ZW1wbGF0ZU9uVGhpc0VsZW1lbnQpJiZub2RlTGlua0ZuLnRyYW5zY2x1ZGU6dHJhbnNjbHVkZUZuKSxsaW5rRm5zLnB1c2gobm9kZUxpbmtGbixjaGlsZExpbmtGbiksbGlua0ZuRm91bmQ9bGlua0ZuRm91bmR8fG5vZGVMaW5rRm58fGNoaWxkTGlua0ZuLHByZXZpb3VzQ29tcGlsZUNvbnRleHQ9bnVsbDtyZXR1cm4gbGlua0ZuRm91bmQ/Y29tcG9zaXRlTGlua0ZuOm51bGx9ZnVuY3Rpb24gY3JlYXRlQm91bmRUcmFuc2NsdWRlRm4oc2NvcGUsdHJhbnNjbHVkZUZuLHByZXZpb3VzQm91bmRUcmFuc2NsdWRlRm4pe3ZhciBib3VuZFRyYW5zY2x1ZGVGbj1mdW5jdGlvbih0cmFuc2NsdWRlZFNjb3BlLGNsb25lRm4sY29udHJvbGxlcnMpe3ZhciBzY29wZUNyZWF0ZWQ9ITE7dHJhbnNjbHVkZWRTY29wZXx8KHRyYW5zY2x1ZGVkU2NvcGU9c2NvcGUuJG5ldygpLHRyYW5zY2x1ZGVkU2NvcGUuJCR0cmFuc2NsdWRlZD0hMCxzY29wZUNyZWF0ZWQ9ITApO3ZhciBjbG9uZT10cmFuc2NsdWRlRm4odHJhbnNjbHVkZWRTY29wZSxjbG9uZUZuLGNvbnRyb2xsZXJzLHByZXZpb3VzQm91bmRUcmFuc2NsdWRlRm4pO3JldHVybiBzY29wZUNyZWF0ZWQmJmNsb25lLm9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXt0cmFuc2NsdWRlZFNjb3BlLiRkZXN0cm95KCl9KSxjbG9uZX07cmV0dXJuIGJvdW5kVHJhbnNjbHVkZUZufWZ1bmN0aW9uIGNvbGxlY3REaXJlY3RpdmVzKG5vZGUsZGlyZWN0aXZlcyxhdHRycyxtYXhQcmlvcml0eSxpZ25vcmVEaXJlY3RpdmUpe3ZhciBtYXRjaCxjbGFzc05hbWUsbm9kZVR5cGU9bm9kZS5ub2RlVHlwZSxhdHRyc01hcD1hdHRycy4kYXR0cjtzd2l0Y2gobm9kZVR5cGUpe2Nhc2UgMTphZGREaXJlY3RpdmUoZGlyZWN0aXZlcyxkaXJlY3RpdmVOb3JtYWxpemUobm9kZU5hbWVfKG5vZGUpLnRvTG93ZXJDYXNlKCkpLCJFIixtYXhQcmlvcml0eSxpZ25vcmVEaXJlY3RpdmUpO2Zvcih2YXIgYXR0cixuYW1lLG5OYW1lLG5nQXR0ck5hbWUsdmFsdWUsaXNOZ0F0dHIsbkF0dHJzPW5vZGUuYXR0cmlidXRlcyxqPTAsamo9bkF0dHJzJiZuQXR0cnMubGVuZ3RoO2pqPmo7aisrKXt2YXIgYXR0clN0YXJ0TmFtZT0hMSxhdHRyRW5kTmFtZT0hMTtpZihhdHRyPW5BdHRyc1tqXSwhbXNpZXx8bXNpZT49OHx8YXR0ci5zcGVjaWZpZWQpe25hbWU9YXR0ci5uYW1lLHZhbHVlPXRyaW0oYXR0ci52YWx1ZSksbmdBdHRyTmFtZT1kaXJlY3RpdmVOb3JtYWxpemUobmFtZSksKGlzTmdBdHRyPU5HX0FUVFJfQklORElORy50ZXN0KG5nQXR0ck5hbWUpKSYmKG5hbWU9c25ha2VfY2FzZShuZ0F0dHJOYW1lLnN1YnN0cig2KSwiLSIpKTt2YXIgZGlyZWN0aXZlTk5hbWU9bmdBdHRyTmFtZS5yZXBsYWNlKC8oU3RhcnR8RW5kKSQvLCIiKTtuZ0F0dHJOYW1lPT09ZGlyZWN0aXZlTk5hbWUrIlN0YXJ0IiYmKGF0dHJTdGFydE5hbWU9bmFtZSxhdHRyRW5kTmFtZT1uYW1lLnN1YnN0cigwLG5hbWUubGVuZ3RoLTUpKyJlbmQiLG5hbWU9bmFtZS5zdWJzdHIoMCxuYW1lLmxlbmd0aC02KSksbk5hbWU9ZGlyZWN0aXZlTm9ybWFsaXplKG5hbWUudG9Mb3dlckNhc2UoKSksYXR0cnNNYXBbbk5hbWVdPW5hbWUsKGlzTmdBdHRyfHwhYXR0cnMuaGFzT3duUHJvcGVydHkobk5hbWUpKSYmKGF0dHJzW25OYW1lXT12YWx1ZSxnZXRCb29sZWFuQXR0ck5hbWUobm9kZSxuTmFtZSkmJihhdHRyc1tuTmFtZV09ITApKSxhZGRBdHRySW50ZXJwb2xhdGVEaXJlY3RpdmUobm9kZSxkaXJlY3RpdmVzLHZhbHVlLG5OYW1lKSxhZGREaXJlY3RpdmUoZGlyZWN0aXZlcyxuTmFtZSwiQSIsbWF4UHJpb3JpdHksaWdub3JlRGlyZWN0aXZlLGF0dHJTdGFydE5hbWUsYXR0ckVuZE5hbWUpfX1pZihjbGFzc05hbWU9bm9kZS5jbGFzc05hbWUsaXNTdHJpbmcoY2xhc3NOYW1lKSYmIiIhPT1jbGFzc05hbWUpZm9yKDttYXRjaD1DTEFTU19ESVJFQ1RJVkVfUkVHRVhQLmV4ZWMoY2xhc3NOYW1lKTspbk5hbWU9ZGlyZWN0aXZlTm9ybWFsaXplKG1hdGNoWzJdKSxhZGREaXJlY3RpdmUoZGlyZWN0aXZlcyxuTmFtZSwiQyIsbWF4UHJpb3JpdHksaWdub3JlRGlyZWN0aXZlKSYmKGF0dHJzW25OYW1lXT10cmltKG1hdGNoWzNdKSksY2xhc3NOYW1lPWNsYXNzTmFtZS5zdWJzdHIobWF0Y2guaW5kZXgrbWF0Y2hbMF0ubGVuZ3RoKTticmVhaztjYXNlIDM6YWRkVGV4dEludGVycG9sYXRlRGlyZWN0aXZlKGRpcmVjdGl2ZXMsbm9kZS5ub2RlVmFsdWUpO2JyZWFrO2Nhc2UgODp0cnl7bWF0Y2g9Q09NTUVOVF9ESVJFQ1RJVkVfUkVHRVhQLmV4ZWMobm9kZS5ub2RlVmFsdWUpLG1hdGNoJiYobk5hbWU9ZGlyZWN0aXZlTm9ybWFsaXplKG1hdGNoWzFdKSxhZGREaXJlY3RpdmUoZGlyZWN0aXZlcyxuTmFtZSwiTSIsbWF4UHJpb3JpdHksaWdub3JlRGlyZWN0aXZlKSYmKGF0dHJzW25OYW1lXT10cmltKG1hdGNoWzJdKSkpfWNhdGNoKGUpe319cmV0dXJuIGRpcmVjdGl2ZXMuc29ydChieVByaW9yaXR5KSxkaXJlY3RpdmVzfWZ1bmN0aW9uIGdyb3VwU2Nhbihub2RlLGF0dHJTdGFydCxhdHRyRW5kKXt2YXIgbm9kZXM9W10sZGVwdGg9MDtpZihhdHRyU3RhcnQmJm5vZGUuaGFzQXR0cmlidXRlJiZub2RlLmhhc0F0dHJpYnV0ZShhdHRyU3RhcnQpKXtkb3tpZighbm9kZSl0aHJvdyAkY29tcGlsZU1pbkVycigidXRlcmRpciIsIlVudGVybWluYXRlZCBhdHRyaWJ1dGUsIGZvdW5kICd7MH0nIGJ1dCBubyBtYXRjaGluZyAnezF9JyBmb3VuZC4iLGF0dHJTdGFydCxhdHRyRW5kKTsxPT1ub2RlLm5vZGVUeXBlJiYobm9kZS5oYXNBdHRyaWJ1dGUoYXR0clN0YXJ0KSYmZGVwdGgrKyxub2RlLmhhc0F0dHJpYnV0ZShhdHRyRW5kKSYmZGVwdGgtLSksbm9kZXMucHVzaChub2RlKSxub2RlPW5vZGUubmV4dFNpYmxpbmd9d2hpbGUoZGVwdGg+MCl9ZWxzZSBub2Rlcy5wdXNoKG5vZGUpO3JldHVybiBqcUxpdGUobm9kZXMpfWZ1bmN0aW9uIGdyb3VwRWxlbWVudHNMaW5rRm5XcmFwcGVyKGxpbmtGbixhdHRyU3RhcnQsYXR0ckVuZCl7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsY29udHJvbGxlcnMsdHJhbnNjbHVkZUZuKXtyZXR1cm4gZWxlbWVudD1ncm91cFNjYW4oZWxlbWVudFswXSxhdHRyU3RhcnQsYXR0ckVuZCksbGlua0ZuKHNjb3BlLGVsZW1lbnQsYXR0cnMsY29udHJvbGxlcnMsdHJhbnNjbHVkZUZuKX19ZnVuY3Rpb24gYXBwbHlEaXJlY3RpdmVzVG9Ob2RlKGRpcmVjdGl2ZXMsY29tcGlsZU5vZGUsdGVtcGxhdGVBdHRycyx0cmFuc2NsdWRlRm4sanFDb2xsZWN0aW9uLG9yaWdpbmFsUmVwbGFjZURpcmVjdGl2ZSxwcmVMaW5rRm5zLHBvc3RMaW5rRm5zLHByZXZpb3VzQ29tcGlsZUNvbnRleHQpe2Z1bmN0aW9uIGFkZExpbmtGbnMocHJlLHBvc3QsYXR0clN0YXJ0LGF0dHJFbmQpe3ByZSYmKGF0dHJTdGFydCYmKHByZT1ncm91cEVsZW1lbnRzTGlua0ZuV3JhcHBlcihwcmUsYXR0clN0YXJ0LGF0dHJFbmQpKSxwcmUucmVxdWlyZT1kaXJlY3RpdmUucmVxdWlyZSxwcmUuZGlyZWN0aXZlTmFtZT1kaXJlY3RpdmVOYW1lLChuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmU9PT1kaXJlY3RpdmV8fGRpcmVjdGl2ZS4kJGlzb2xhdGVTY29wZSkmJihwcmU9Y2xvbmVBbmRBbm5vdGF0ZUZuKHByZSx7aXNvbGF0ZVNjb3BlOiEwfSkpLHByZUxpbmtGbnMucHVzaChwcmUpKSxwb3N0JiYoYXR0clN0YXJ0JiYocG9zdD1ncm91cEVsZW1lbnRzTGlua0ZuV3JhcHBlcihwb3N0LGF0dHJTdGFydCxhdHRyRW5kKSkscG9zdC5yZXF1aXJlPWRpcmVjdGl2ZS5yZXF1aXJlLHBvc3QuZGlyZWN0aXZlTmFtZT1kaXJlY3RpdmVOYW1lLChuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmU9PT1kaXJlY3RpdmV8fGRpcmVjdGl2ZS4kJGlzb2xhdGVTY29wZSkmJihwb3N0PWNsb25lQW5kQW5ub3RhdGVGbihwb3N0LHtpc29sYXRlU2NvcGU6ITB9KSkscG9zdExpbmtGbnMucHVzaChwb3N0KSl9ZnVuY3Rpb24gZ2V0Q29udHJvbGxlcnMoZGlyZWN0aXZlTmFtZSxyZXF1aXJlLCRlbGVtZW50LGVsZW1lbnRDb250cm9sbGVycyl7dmFyIHZhbHVlLHJldHJpZXZhbE1ldGhvZD0iZGF0YSIsb3B0aW9uYWw9ITE7aWYoaXNTdHJpbmcocmVxdWlyZSkpe2Zvcig7Il4iPT0odmFsdWU9cmVxdWlyZS5jaGFyQXQoMCkpfHwiPyI9PXZhbHVlOylyZXF1aXJlPXJlcXVpcmUuc3Vic3RyKDEpLCJeIj09dmFsdWUmJihyZXRyaWV2YWxNZXRob2Q9ImluaGVyaXRlZERhdGEiKSxvcHRpb25hbD1vcHRpb25hbHx8Ij8iPT12YWx1ZTtpZih2YWx1ZT1udWxsLGVsZW1lbnRDb250cm9sbGVycyYmImRhdGEiPT09cmV0cmlldmFsTWV0aG9kJiYodmFsdWU9ZWxlbWVudENvbnRyb2xsZXJzW3JlcXVpcmVdKSx2YWx1ZT12YWx1ZXx8JGVsZW1lbnRbcmV0cmlldmFsTWV0aG9kXSgiJCIrcmVxdWlyZSsiQ29udHJvbGxlciIpLCF2YWx1ZSYmIW9wdGlvbmFsKXRocm93ICRjb21waWxlTWluRXJyKCJjdHJlcSIsIkNvbnRyb2xsZXIgJ3swfScsIHJlcXVpcmVkIGJ5IGRpcmVjdGl2ZSAnezF9JywgY2FuJ3QgYmUgZm91bmQhIixyZXF1aXJlLGRpcmVjdGl2ZU5hbWUpO3JldHVybiB2YWx1ZX1yZXR1cm4gaXNBcnJheShyZXF1aXJlKSYmKHZhbHVlPVtdLGZvckVhY2gocmVxdWlyZSxmdW5jdGlvbihyZXF1aXJlKXt2YWx1ZS5wdXNoKGdldENvbnRyb2xsZXJzKGRpcmVjdGl2ZU5hbWUscmVxdWlyZSwkZWxlbWVudCxlbGVtZW50Q29udHJvbGxlcnMpKX0pKSx2YWx1ZX1mdW5jdGlvbiBub2RlTGlua0ZuKGNoaWxkTGlua0ZuLHNjb3BlLGxpbmtOb2RlLCRyb290RWxlbWVudCxib3VuZFRyYW5zY2x1ZGVGbil7ZnVuY3Rpb24gY29udHJvbGxlcnNCb3VuZFRyYW5zY2x1ZGUoc2NvcGUsY2xvbmVBdHRhY2hGbil7dmFyIHRyYW5zY2x1ZGVDb250cm9sbGVycztyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyJiYoY2xvbmVBdHRhY2hGbj1zY29wZSxzY29wZT11bmRlZmluZWQpLGhhc0VsZW1lbnRUcmFuc2NsdWRlRGlyZWN0aXZlJiYodHJhbnNjbHVkZUNvbnRyb2xsZXJzPWVsZW1lbnRDb250cm9sbGVycyksYm91bmRUcmFuc2NsdWRlRm4oc2NvcGUsY2xvbmVBdHRhY2hGbix0cmFuc2NsdWRlQ29udHJvbGxlcnMpfXZhciBhdHRycywkZWxlbWVudCxpLGlpLGxpbmtGbixjb250cm9sbGVyLGlzb2xhdGVTY29wZSx0cmFuc2NsdWRlRm4sZWxlbWVudENvbnRyb2xsZXJzPXt9O2lmKGF0dHJzPWNvbXBpbGVOb2RlPT09bGlua05vZGU/dGVtcGxhdGVBdHRyczpzaGFsbG93Q29weSh0ZW1wbGF0ZUF0dHJzLG5ldyBBdHRyaWJ1dGVzKGpxTGl0ZShsaW5rTm9kZSksdGVtcGxhdGVBdHRycy4kYXR0cikpLCRlbGVtZW50PWF0dHJzLiQkZWxlbWVudCxuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUpe3ZhciBMT0NBTF9SRUdFWFA9L15ccyooW0A9Jl0pKFw/PylccyooXHcqKVxzKiQvO2lzb2xhdGVTY29wZT1zY29wZS4kbmV3KCEwKSwhdGVtcGxhdGVEaXJlY3RpdmV8fHRlbXBsYXRlRGlyZWN0aXZlIT09bmV3SXNvbGF0ZVNjb3BlRGlyZWN0aXZlJiZ0ZW1wbGF0ZURpcmVjdGl2ZSE9PW5ld0lzb2xhdGVTY29wZURpcmVjdGl2ZS4kJG9yaWdpbmFsRGlyZWN0aXZlPyRlbGVtZW50LmRhdGEoIiRpc29sYXRlU2NvcGVOb1RlbXBsYXRlIixpc29sYXRlU2NvcGUpOiRlbGVtZW50LmRhdGEoIiRpc29sYXRlU2NvcGUiLGlzb2xhdGVTY29wZSksc2FmZUFkZENsYXNzKCRlbGVtZW50LCJuZy1pc29sYXRlLXNjb3BlIiksZm9yRWFjaChuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUuc2NvcGUsZnVuY3Rpb24oZGVmaW5pdGlvbixzY29wZU5hbWUpe3ZhciBsYXN0VmFsdWUscGFyZW50R2V0LHBhcmVudFNldCxjb21wYXJlLG1hdGNoPWRlZmluaXRpb24ubWF0Y2goTE9DQUxfUkVHRVhQKXx8W10sYXR0ck5hbWU9bWF0Y2hbM118fHNjb3BlTmFtZSxvcHRpb25hbD0iPyI9PW1hdGNoWzJdLG1vZGU9bWF0Y2hbMV07c3dpdGNoKGlzb2xhdGVTY29wZS4kJGlzb2xhdGVCaW5kaW5nc1tzY29wZU5hbWVdPW1vZGUrYXR0ck5hbWUsbW9kZSl7Y2FzZSJAIjphdHRycy4kb2JzZXJ2ZShhdHRyTmFtZSxmdW5jdGlvbih2YWx1ZSl7aXNvbGF0ZVNjb3BlW3Njb3BlTmFtZV09dmFsdWV9KSxhdHRycy4kJG9ic2VydmVyc1thdHRyTmFtZV0uJCRzY29wZT1zY29wZSxhdHRyc1thdHRyTmFtZV0mJihpc29sYXRlU2NvcGVbc2NvcGVOYW1lXT0kaW50ZXJwb2xhdGUoYXR0cnNbYXR0ck5hbWVdKShzY29wZSkpO2JyZWFrO2Nhc2UiPSI6aWYob3B0aW9uYWwmJiFhdHRyc1thdHRyTmFtZV0pcmV0dXJuO3BhcmVudEdldD0kcGFyc2UoYXR0cnNbYXR0ck5hbWVdKSxjb21wYXJlPXBhcmVudEdldC5saXRlcmFsP2VxdWFsczpmdW5jdGlvbihhLGIpe3JldHVybiBhPT09Ynx8YSE9PWEmJmIhPT1ifSxwYXJlbnRTZXQ9cGFyZW50R2V0LmFzc2lnbnx8ZnVuY3Rpb24oKXt0aHJvdyBsYXN0VmFsdWU9aXNvbGF0ZVNjb3BlW3Njb3BlTmFtZV09cGFyZW50R2V0KHNjb3BlKSwkY29tcGlsZU1pbkVycigibm9uYXNzaWduIiwiRXhwcmVzc2lvbiAnezB9JyB1c2VkIHdpdGggZGlyZWN0aXZlICd7MX0nIGlzIG5vbi1hc3NpZ25hYmxlISIsYXR0cnNbYXR0ck5hbWVdLG5ld0lzb2xhdGVTY29wZURpcmVjdGl2ZS5uYW1lKX0sbGFzdFZhbHVlPWlzb2xhdGVTY29wZVtzY29wZU5hbWVdPXBhcmVudEdldChzY29wZSksaXNvbGF0ZVNjb3BlLiR3YXRjaChmdW5jdGlvbigpe3ZhciBwYXJlbnRWYWx1ZT1wYXJlbnRHZXQoc2NvcGUpO3JldHVybiBjb21wYXJlKHBhcmVudFZhbHVlLGlzb2xhdGVTY29wZVtzY29wZU5hbWVdKXx8KGNvbXBhcmUocGFyZW50VmFsdWUsbGFzdFZhbHVlKT9wYXJlbnRTZXQoc2NvcGUscGFyZW50VmFsdWU9aXNvbGF0ZVNjb3BlW3Njb3BlTmFtZV0pOmlzb2xhdGVTY29wZVtzY29wZU5hbWVdPXBhcmVudFZhbHVlKSxsYXN0VmFsdWU9cGFyZW50VmFsdWV9LG51bGwscGFyZW50R2V0LmxpdGVyYWwpO2JyZWFrO2Nhc2UiJiI6cGFyZW50R2V0PSRwYXJzZShhdHRyc1thdHRyTmFtZV0pLGlzb2xhdGVTY29wZVtzY29wZU5hbWVdPWZ1bmN0aW9uKGxvY2Fscyl7cmV0dXJuIHBhcmVudEdldChzY29wZSxsb2NhbHMpfTticmVhaztkZWZhdWx0OnRocm93ICRjb21waWxlTWluRXJyKCJpc2NwIiwiSW52YWxpZCBpc29sYXRlIHNjb3BlIGRlZmluaXRpb24gZm9yIGRpcmVjdGl2ZSAnezB9Jy4gRGVmaW5pdGlvbjogey4uLiB7MX06ICd7Mn0nIC4uLn0iLG5ld0lzb2xhdGVTY29wZURpcmVjdGl2ZS5uYW1lLHNjb3BlTmFtZSxkZWZpbml0aW9uKX19KX1mb3IodHJhbnNjbHVkZUZuPWJvdW5kVHJhbnNjbHVkZUZuJiZjb250cm9sbGVyc0JvdW5kVHJhbnNjbHVkZSxjb250cm9sbGVyRGlyZWN0aXZlcyYmZm9yRWFjaChjb250cm9sbGVyRGlyZWN0aXZlcyxmdW5jdGlvbihkaXJlY3RpdmUpe3ZhciBjb250cm9sbGVySW5zdGFuY2UsbG9jYWxzPXskc2NvcGU6ZGlyZWN0aXZlPT09bmV3SXNvbGF0ZVNjb3BlRGlyZWN0aXZlfHxkaXJlY3RpdmUuJCRpc29sYXRlU2NvcGU/aXNvbGF0ZVNjb3BlOnNjb3BlLCRlbGVtZW50OiRlbGVtZW50LCRhdHRyczphdHRycywkdHJhbnNjbHVkZTp0cmFuc2NsdWRlRm59O2NvbnRyb2xsZXI9ZGlyZWN0aXZlLmNvbnRyb2xsZXIsIkAiPT1jb250cm9sbGVyJiYoY29udHJvbGxlcj1hdHRyc1tkaXJlY3RpdmUubmFtZV0pLGNvbnRyb2xsZXJJbnN0YW5jZT0kY29udHJvbGxlcihjb250cm9sbGVyLGxvY2FscyksZWxlbWVudENvbnRyb2xsZXJzW2RpcmVjdGl2ZS5uYW1lXT1jb250cm9sbGVySW5zdGFuY2UsaGFzRWxlbWVudFRyYW5zY2x1ZGVEaXJlY3RpdmV8fCRlbGVtZW50LmRhdGEoIiQiK2RpcmVjdGl2ZS5uYW1lKyJDb250cm9sbGVyIixjb250cm9sbGVySW5zdGFuY2UpLGRpcmVjdGl2ZS5jb250cm9sbGVyQXMmJihsb2NhbHMuJHNjb3BlW2RpcmVjdGl2ZS5jb250cm9sbGVyQXNdPWNvbnRyb2xsZXJJbnN0YW5jZSl9KSxpPTAsaWk9cHJlTGlua0Zucy5sZW5ndGg7aWk+aTtpKyspdHJ5e2xpbmtGbj1wcmVMaW5rRm5zW2ldLGxpbmtGbihsaW5rRm4uaXNvbGF0ZVNjb3BlP2lzb2xhdGVTY29wZTpzY29wZSwkZWxlbWVudCxhdHRycyxsaW5rRm4ucmVxdWlyZSYmZ2V0Q29udHJvbGxlcnMobGlua0ZuLmRpcmVjdGl2ZU5hbWUsbGlua0ZuLnJlcXVpcmUsJGVsZW1lbnQsZWxlbWVudENvbnRyb2xsZXJzKSx0cmFuc2NsdWRlRm4pfWNhdGNoKGUpeyRleGNlcHRpb25IYW5kbGVyKGUsc3RhcnRpbmdUYWcoJGVsZW1lbnQpKX12YXIgc2NvcGVUb0NoaWxkPXNjb3BlO2ZvcihuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUmJihuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUudGVtcGxhdGV8fG51bGw9PT1uZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUudGVtcGxhdGVVcmwpJiYoc2NvcGVUb0NoaWxkPWlzb2xhdGVTY29wZSksY2hpbGRMaW5rRm4mJmNoaWxkTGlua0ZuKHNjb3BlVG9DaGlsZCxsaW5rTm9kZS5jaGlsZE5vZGVzLHVuZGVmaW5lZCxib3VuZFRyYW5zY2x1ZGVGbiksaT1wb3N0TGlua0Zucy5sZW5ndGgtMTtpPj0wO2ktLSl0cnl7bGlua0ZuPXBvc3RMaW5rRm5zW2ldLGxpbmtGbihsaW5rRm4uaXNvbGF0ZVNjb3BlP2lzb2xhdGVTY29wZTpzY29wZSwkZWxlbWVudCxhdHRycyxsaW5rRm4ucmVxdWlyZSYmZ2V0Q29udHJvbGxlcnMobGlua0ZuLmRpcmVjdGl2ZU5hbWUsbGlua0ZuLnJlcXVpcmUsJGVsZW1lbnQsZWxlbWVudENvbnRyb2xsZXJzKSx0cmFuc2NsdWRlRm4pfWNhdGNoKGUpeyRleGNlcHRpb25IYW5kbGVyKGUsc3RhcnRpbmdUYWcoJGVsZW1lbnQpKX19cHJldmlvdXNDb21waWxlQ29udGV4dD1wcmV2aW91c0NvbXBpbGVDb250ZXh0fHx7fTtmb3IodmFyIG5ld1Njb3BlRGlyZWN0aXZlLGRpcmVjdGl2ZSxkaXJlY3RpdmVOYW1lLCR0ZW1wbGF0ZSxsaW5rRm4sZGlyZWN0aXZlVmFsdWUsdGVybWluYWxQcmlvcml0eT0tTnVtYmVyLk1BWF9WQUxVRSxjb250cm9sbGVyRGlyZWN0aXZlcz1wcmV2aW91c0NvbXBpbGVDb250ZXh0LmNvbnRyb2xsZXJEaXJlY3RpdmVzLG5ld0lzb2xhdGVTY29wZURpcmVjdGl2ZT1wcmV2aW91c0NvbXBpbGVDb250ZXh0Lm5ld0lzb2xhdGVTY29wZURpcmVjdGl2ZSx0ZW1wbGF0ZURpcmVjdGl2ZT1wcmV2aW91c0NvbXBpbGVDb250ZXh0LnRlbXBsYXRlRGlyZWN0aXZlLG5vblRsYlRyYW5zY2x1ZGVEaXJlY3RpdmU9cHJldmlvdXNDb21waWxlQ29udGV4dC5ub25UbGJUcmFuc2NsdWRlRGlyZWN0aXZlLGhhc1RyYW5zY2x1ZGVEaXJlY3RpdmU9ITEsaGFzVGVtcGxhdGU9ITEsaGFzRWxlbWVudFRyYW5zY2x1ZGVEaXJlY3RpdmU9cHJldmlvdXNDb21waWxlQ29udGV4dC5oYXNFbGVtZW50VHJhbnNjbHVkZURpcmVjdGl2ZSwkY29tcGlsZU5vZGU9dGVtcGxhdGVBdHRycy4kJGVsZW1lbnQ9anFMaXRlKGNvbXBpbGVOb2RlKSxyZXBsYWNlRGlyZWN0aXZlPW9yaWdpbmFsUmVwbGFjZURpcmVjdGl2ZSxjaGlsZFRyYW5zY2x1ZGVGbj10cmFuc2NsdWRlRm4saT0wLGlpPWRpcmVjdGl2ZXMubGVuZ3RoO2lpPmk7aSsrKXtkaXJlY3RpdmU9ZGlyZWN0aXZlc1tpXTt2YXIgYXR0clN0YXJ0PWRpcmVjdGl2ZS4kJHN0YXJ0LGF0dHJFbmQ9ZGlyZWN0aXZlLiQkZW5kO2lmKGF0dHJTdGFydCYmKCRjb21waWxlTm9kZT1ncm91cFNjYW4oY29tcGlsZU5vZGUsYXR0clN0YXJ0LGF0dHJFbmQpKSwkdGVtcGxhdGU9dW5kZWZpbmVkLHRlcm1pbmFsUHJpb3JpdHk+ZGlyZWN0aXZlLnByaW9yaXR5KWJyZWFrO2lmKChkaXJlY3RpdmVWYWx1ZT1kaXJlY3RpdmUuc2NvcGUpJiYobmV3U2NvcGVEaXJlY3RpdmU9bmV3U2NvcGVEaXJlY3RpdmV8fGRpcmVjdGl2ZSxkaXJlY3RpdmUudGVtcGxhdGVVcmx8fChhc3NlcnROb0R1cGxpY2F0ZSgibmV3L2lzb2xhdGVkIHNjb3BlIixuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmUsZGlyZWN0aXZlLCRjb21waWxlTm9kZSksaXNPYmplY3QoZGlyZWN0aXZlVmFsdWUpJiYobmV3SXNvbGF0ZVNjb3BlRGlyZWN0aXZlPWRpcmVjdGl2ZSkpKSxkaXJlY3RpdmVOYW1lPWRpcmVjdGl2ZS5uYW1lLCFkaXJlY3RpdmUudGVtcGxhdGVVcmwmJmRpcmVjdGl2ZS5jb250cm9sbGVyJiYoZGlyZWN0aXZlVmFsdWU9ZGlyZWN0aXZlLmNvbnRyb2xsZXIsY29udHJvbGxlckRpcmVjdGl2ZXM9Y29udHJvbGxlckRpcmVjdGl2ZXN8fHt9LGFzc2VydE5vRHVwbGljYXRlKCInIitkaXJlY3RpdmVOYW1lKyInIGNvbnRyb2xsZXIiLGNvbnRyb2xsZXJEaXJlY3RpdmVzW2RpcmVjdGl2ZU5hbWVdLGRpcmVjdGl2ZSwkY29tcGlsZU5vZGUpLGNvbnRyb2xsZXJEaXJlY3RpdmVzW2RpcmVjdGl2ZU5hbWVdPWRpcmVjdGl2ZSksKGRpcmVjdGl2ZVZhbHVlPWRpcmVjdGl2ZS50cmFuc2NsdWRlKSYmKGhhc1RyYW5zY2x1ZGVEaXJlY3RpdmU9ITAsZGlyZWN0aXZlLiQkdGxifHwoYXNzZXJ0Tm9EdXBsaWNhdGUoInRyYW5zY2x1c2lvbiIsbm9uVGxiVHJhbnNjbHVkZURpcmVjdGl2ZSxkaXJlY3RpdmUsJGNvbXBpbGVOb2RlKSxub25UbGJUcmFuc2NsdWRlRGlyZWN0aXZlPWRpcmVjdGl2ZSksImVsZW1lbnQiPT1kaXJlY3RpdmVWYWx1ZT8oaGFzRWxlbWVudFRyYW5zY2x1ZGVEaXJlY3RpdmU9ITAsdGVybWluYWxQcmlvcml0eT1kaXJlY3RpdmUucHJpb3JpdHksJHRlbXBsYXRlPSRjb21waWxlTm9kZSwkY29tcGlsZU5vZGU9dGVtcGxhdGVBdHRycy4kJGVsZW1lbnQ9anFMaXRlKGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiAiK2RpcmVjdGl2ZU5hbWUrIjogIit0ZW1wbGF0ZUF0dHJzW2RpcmVjdGl2ZU5hbWVdKyIgIikpLGNvbXBpbGVOb2RlPSRjb21waWxlTm9kZVswXSxyZXBsYWNlV2l0aChqcUNvbGxlY3Rpb24sc2xpY2VBcmdzKCR0ZW1wbGF0ZSksY29tcGlsZU5vZGUpLGNoaWxkVHJhbnNjbHVkZUZuPWNvbXBpbGUoJHRlbXBsYXRlLHRyYW5zY2x1ZGVGbix0ZXJtaW5hbFByaW9yaXR5LHJlcGxhY2VEaXJlY3RpdmUmJnJlcGxhY2VEaXJlY3RpdmUubmFtZSx7bm9uVGxiVHJhbnNjbHVkZURpcmVjdGl2ZTpub25UbGJUcmFuc2NsdWRlRGlyZWN0aXZlfSkpOigkdGVtcGxhdGU9anFMaXRlKGpxTGl0ZUNsb25lKGNvbXBpbGVOb2RlKSkuY29udGVudHMoKSwkY29tcGlsZU5vZGUuZW1wdHkoKSxjaGlsZFRyYW5zY2x1ZGVGbj1jb21waWxlKCR0ZW1wbGF0ZSx0cmFuc2NsdWRlRm4pKSksZGlyZWN0aXZlLnRlbXBsYXRlKWlmKGhhc1RlbXBsYXRlPSEwLGFzc2VydE5vRHVwbGljYXRlKCJ0ZW1wbGF0ZSIsdGVtcGxhdGVEaXJlY3RpdmUsZGlyZWN0aXZlLCRjb21waWxlTm9kZSksdGVtcGxhdGVEaXJlY3RpdmU9ZGlyZWN0aXZlLGRpcmVjdGl2ZVZhbHVlPWlzRnVuY3Rpb24oZGlyZWN0aXZlLnRlbXBsYXRlKT9kaXJlY3RpdmUudGVtcGxhdGUoJGNvbXBpbGVOb2RlLHRlbXBsYXRlQXR0cnMpOmRpcmVjdGl2ZS50ZW1wbGF0ZSxkaXJlY3RpdmVWYWx1ZT1kZW5vcm1hbGl6ZVRlbXBsYXRlKGRpcmVjdGl2ZVZhbHVlKSxkaXJlY3RpdmUucmVwbGFjZSl7aWYocmVwbGFjZURpcmVjdGl2ZT1kaXJlY3RpdmUsJHRlbXBsYXRlPWpxTGl0ZUlzVGV4dE5vZGUoZGlyZWN0aXZlVmFsdWUpP1tdOmpxTGl0ZSh0cmltKGRpcmVjdGl2ZVZhbHVlKSksY29tcGlsZU5vZGU9JHRlbXBsYXRlWzBdLDEhPSR0ZW1wbGF0ZS5sZW5ndGh8fDEhPT1jb21waWxlTm9kZS5ub2RlVHlwZSl0aHJvdyAkY29tcGlsZU1pbkVycigidHBscnQiLCJUZW1wbGF0ZSBmb3IgZGlyZWN0aXZlICd7MH0nIG11c3QgaGF2ZSBleGFjdGx5IG9uZSByb290IGVsZW1lbnQuIHsxfSIsZGlyZWN0aXZlTmFtZSwiIik7cmVwbGFjZVdpdGgoanFDb2xsZWN0aW9uLCRjb21waWxlTm9kZSxjb21waWxlTm9kZSk7dmFyIG5ld1RlbXBsYXRlQXR0cnM9eyRhdHRyOnt9fSx0ZW1wbGF0ZURpcmVjdGl2ZXM9Y29sbGVjdERpcmVjdGl2ZXMoY29tcGlsZU5vZGUsW10sbmV3VGVtcGxhdGVBdHRycyksdW5wcm9jZXNzZWREaXJlY3RpdmVzPWRpcmVjdGl2ZXMuc3BsaWNlKGkrMSxkaXJlY3RpdmVzLmxlbmd0aC0oaSsxKSk7bmV3SXNvbGF0ZVNjb3BlRGlyZWN0aXZlJiZtYXJrRGlyZWN0aXZlc0FzSXNvbGF0ZSh0ZW1wbGF0ZURpcmVjdGl2ZXMpLGRpcmVjdGl2ZXM9ZGlyZWN0aXZlcy5jb25jYXQodGVtcGxhdGVEaXJlY3RpdmVzKS5jb25jYXQodW5wcm9jZXNzZWREaXJlY3RpdmVzKSxtZXJnZVRlbXBsYXRlQXR0cmlidXRlcyh0ZW1wbGF0ZUF0dHJzLG5ld1RlbXBsYXRlQXR0cnMpLGlpPWRpcmVjdGl2ZXMubGVuZ3RofWVsc2UgJGNvbXBpbGVOb2RlLmh0bWwoZGlyZWN0aXZlVmFsdWUpO2lmKGRpcmVjdGl2ZS50ZW1wbGF0ZVVybCloYXNUZW1wbGF0ZT0hMCxhc3NlcnROb0R1cGxpY2F0ZSgidGVtcGxhdGUiLHRlbXBsYXRlRGlyZWN0aXZlLGRpcmVjdGl2ZSwkY29tcGlsZU5vZGUpLHRlbXBsYXRlRGlyZWN0aXZlPWRpcmVjdGl2ZSxkaXJlY3RpdmUucmVwbGFjZSYmKHJlcGxhY2VEaXJlY3RpdmU9ZGlyZWN0aXZlKSxub2RlTGlua0ZuPWNvbXBpbGVUZW1wbGF0ZVVybChkaXJlY3RpdmVzLnNwbGljZShpLGRpcmVjdGl2ZXMubGVuZ3RoLWkpLCRjb21waWxlTm9kZSx0ZW1wbGF0ZUF0dHJzLGpxQ29sbGVjdGlvbixoYXNUcmFuc2NsdWRlRGlyZWN0aXZlJiZjaGlsZFRyYW5zY2x1ZGVGbixwcmVMaW5rRm5zLHBvc3RMaW5rRm5zLHtjb250cm9sbGVyRGlyZWN0aXZlczpjb250cm9sbGVyRGlyZWN0aXZlcyxuZXdJc29sYXRlU2NvcGVEaXJlY3RpdmU6bmV3SXNvbGF0ZVNjb3BlRGlyZWN0aXZlLHRlbXBsYXRlRGlyZWN0aXZlOnRlbXBsYXRlRGlyZWN0aXZlLG5vblRsYlRyYW5zY2x1ZGVEaXJlY3RpdmU6bm9uVGxiVHJhbnNjbHVkZURpcmVjdGl2ZX0pLGlpPWRpcmVjdGl2ZXMubGVuZ3RoO2Vsc2UgaWYoZGlyZWN0aXZlLmNvbXBpbGUpdHJ5e2xpbmtGbj1kaXJlY3RpdmUuY29tcGlsZSgkY29tcGlsZU5vZGUsdGVtcGxhdGVBdHRycyxjaGlsZFRyYW5zY2x1ZGVGbiksaXNGdW5jdGlvbihsaW5rRm4pP2FkZExpbmtGbnMobnVsbCxsaW5rRm4sYXR0clN0YXJ0LGF0dHJFbmQpOmxpbmtGbiYmYWRkTGlua0ZucyhsaW5rRm4ucHJlLGxpbmtGbi5wb3N0LGF0dHJTdGFydCxhdHRyRW5kKX1jYXRjaChlKXskZXhjZXB0aW9uSGFuZGxlcihlLHN0YXJ0aW5nVGFnKCRjb21waWxlTm9kZSkpfWRpcmVjdGl2ZS50ZXJtaW5hbCYmKG5vZGVMaW5rRm4udGVybWluYWw9ITAsdGVybWluYWxQcmlvcml0eT1NYXRoLm1heCh0ZXJtaW5hbFByaW9yaXR5LGRpcmVjdGl2ZS5wcmlvcml0eSkpfXJldHVybiBub2RlTGlua0ZuLnNjb3BlPW5ld1Njb3BlRGlyZWN0aXZlJiZuZXdTY29wZURpcmVjdGl2ZS5zY29wZT09PSEwLG5vZGVMaW5rRm4udHJhbnNjbHVkZU9uVGhpc0VsZW1lbnQ9aGFzVHJhbnNjbHVkZURpcmVjdGl2ZSxub2RlTGlua0ZuLnRlbXBsYXRlT25UaGlzRWxlbWVudD1oYXNUZW1wbGF0ZSxub2RlTGlua0ZuLnRyYW5zY2x1ZGU9Y2hpbGRUcmFuc2NsdWRlRm4scHJldmlvdXNDb21waWxlQ29udGV4dC5oYXNFbGVtZW50VHJhbnNjbHVkZURpcmVjdGl2ZT1oYXNFbGVtZW50VHJhbnNjbHVkZURpcmVjdGl2ZSxub2RlTGlua0ZufWZ1bmN0aW9uIG1hcmtEaXJlY3RpdmVzQXNJc29sYXRlKGRpcmVjdGl2ZXMpe2Zvcih2YXIgaj0wLGpqPWRpcmVjdGl2ZXMubGVuZ3RoO2pqPmo7aisrKWRpcmVjdGl2ZXNbal09aW5oZXJpdChkaXJlY3RpdmVzW2pdLHskJGlzb2xhdGVTY29wZTohMH0pfWZ1bmN0aW9uIGFkZERpcmVjdGl2ZSh0RGlyZWN0aXZlcyxuYW1lLGxvY2F0aW9uLG1heFByaW9yaXR5LGlnbm9yZURpcmVjdGl2ZSxzdGFydEF0dHJOYW1lLGVuZEF0dHJOYW1lKXtpZihuYW1lPT09aWdub3JlRGlyZWN0aXZlKXJldHVybiBudWxsO3ZhciBtYXRjaD1udWxsO2lmKGhhc0RpcmVjdGl2ZXMuaGFzT3duUHJvcGVydHkobmFtZSkpZm9yKHZhciBkaXJlY3RpdmUsZGlyZWN0aXZlcz0kaW5qZWN0b3IuZ2V0KG5hbWUrU3VmZml4KSxpPTAsaWk9ZGlyZWN0aXZlcy5sZW5ndGg7aWk+aTtpKyspdHJ5e2RpcmVjdGl2ZT1kaXJlY3RpdmVzW2ldLChtYXhQcmlvcml0eT09PXVuZGVmaW5lZHx8bWF4UHJpb3JpdHk+ZGlyZWN0aXZlLnByaW9yaXR5KSYmLTEhPWRpcmVjdGl2ZS5yZXN0cmljdC5pbmRleE9mKGxvY2F0aW9uKSYmKHN0YXJ0QXR0ck5hbWUmJihkaXJlY3RpdmU9aW5oZXJpdChkaXJlY3RpdmUseyQkc3RhcnQ6c3RhcnRBdHRyTmFtZSwkJGVuZDplbmRBdHRyTmFtZX0pKSx0RGlyZWN0aXZlcy5wdXNoKGRpcmVjdGl2ZSksbWF0Y2g9ZGlyZWN0aXZlKX1jYXRjaChlKXskZXhjZXB0aW9uSGFuZGxlcihlKX1yZXR1cm4gbWF0Y2h9ZnVuY3Rpb24gbWVyZ2VUZW1wbGF0ZUF0dHJpYnV0ZXMoZHN0LHNyYyl7dmFyIHNyY0F0dHI9c3JjLiRhdHRyLGRzdEF0dHI9ZHN0LiRhdHRyLCRlbGVtZW50PWRzdC4kJGVsZW1lbnQ7Zm9yRWFjaChkc3QsZnVuY3Rpb24odmFsdWUsa2V5KXsiJCIhPWtleS5jaGFyQXQoMCkmJihzcmNba2V5XSYmc3JjW2tleV0hPT12YWx1ZSYmKHZhbHVlKz0oInN0eWxlIj09PWtleT8iOyI6IiAiKStzcmNba2V5XSksZHN0LiRzZXQoa2V5LHZhbHVlLCEwLHNyY0F0dHJba2V5XSkpfSksZm9yRWFjaChzcmMsZnVuY3Rpb24odmFsdWUsa2V5KXsiY2xhc3MiPT1rZXk/KHNhZmVBZGRDbGFzcygkZWxlbWVudCx2YWx1ZSksZHN0WyJjbGFzcyJdPShkc3RbImNsYXNzIl0/ZHN0WyJjbGFzcyJdKyIgIjoiIikrdmFsdWUpOiJzdHlsZSI9PWtleT8oJGVsZW1lbnQuYXR0cigic3R5bGUiLCRlbGVtZW50LmF0dHIoInN0eWxlIikrIjsiK3ZhbHVlKSxkc3Quc3R5bGU9KGRzdC5zdHlsZT9kc3Quc3R5bGUrIjsiOiIiKSt2YWx1ZSk6IiQiPT1rZXkuY2hhckF0KDApfHxkc3QuaGFzT3duUHJvcGVydHkoa2V5KXx8KGRzdFtrZXldPXZhbHVlLGRzdEF0dHJba2V5XT1zcmNBdHRyW2tleV0pfSl9ZnVuY3Rpb24gY29tcGlsZVRlbXBsYXRlVXJsKGRpcmVjdGl2ZXMsJGNvbXBpbGVOb2RlLHRBdHRycywkcm9vdEVsZW1lbnQsY2hpbGRUcmFuc2NsdWRlRm4scHJlTGlua0Zucyxwb3N0TGlua0ZucyxwcmV2aW91c0NvbXBpbGVDb250ZXh0KXt2YXIgYWZ0ZXJUZW1wbGF0ZU5vZGVMaW5rRm4sYWZ0ZXJUZW1wbGF0ZUNoaWxkTGlua0ZuLGxpbmtRdWV1ZT1bXSxiZWZvcmVUZW1wbGF0ZUNvbXBpbGVOb2RlPSRjb21waWxlTm9kZVswXSxvcmlnQXN5bmNEaXJlY3RpdmU9ZGlyZWN0aXZlcy5zaGlmdCgpLGRlcml2ZWRTeW5jRGlyZWN0aXZlPWV4dGVuZCh7fSxvcmlnQXN5bmNEaXJlY3RpdmUse3RlbXBsYXRlVXJsOm51bGwsdHJhbnNjbHVkZTpudWxsLHJlcGxhY2U6bnVsbCwkJG9yaWdpbmFsRGlyZWN0aXZlOm9yaWdBc3luY0RpcmVjdGl2ZX0pLHRlbXBsYXRlVXJsPWlzRnVuY3Rpb24ob3JpZ0FzeW5jRGlyZWN0aXZlLnRlbXBsYXRlVXJsKT9vcmlnQXN5bmNEaXJlY3RpdmUudGVtcGxhdGVVcmwoJGNvbXBpbGVOb2RlLHRBdHRycyk6b3JpZ0FzeW5jRGlyZWN0aXZlLnRlbXBsYXRlVXJsO3JldHVybiAkY29tcGlsZU5vZGUuZW1wdHkoKSwkaHR0cC5nZXQoJHNjZS5nZXRUcnVzdGVkUmVzb3VyY2VVcmwodGVtcGxhdGVVcmwpLHtjYWNoZTokdGVtcGxhdGVDYWNoZX0pLnN1Y2Nlc3MoZnVuY3Rpb24oY29udGVudCl7dmFyIGNvbXBpbGVOb2RlLHRlbXBUZW1wbGF0ZUF0dHJzLCR0ZW1wbGF0ZSxjaGlsZEJvdW5kVHJhbnNjbHVkZUZuO2lmKGNvbnRlbnQ9ZGVub3JtYWxpemVUZW1wbGF0ZShjb250ZW50KSxvcmlnQXN5bmNEaXJlY3RpdmUucmVwbGFjZSl7aWYoJHRlbXBsYXRlPWpxTGl0ZUlzVGV4dE5vZGUoY29udGVudCk/W106anFMaXRlKHRyaW0oY29udGVudCkpLGNvbXBpbGVOb2RlPSR0ZW1wbGF0ZVswXSwxIT0kdGVtcGxhdGUubGVuZ3RofHwxIT09Y29tcGlsZU5vZGUubm9kZVR5cGUpdGhyb3cgJGNvbXBpbGVNaW5FcnIoInRwbHJ0IiwiVGVtcGxhdGUgZm9yIGRpcmVjdGl2ZSAnezB9JyBtdXN0IGhhdmUgZXhhY3RseSBvbmUgcm9vdCBlbGVtZW50LiB7MX0iLG9yaWdBc3luY0RpcmVjdGl2ZS5uYW1lLHRlbXBsYXRlVXJsKTt0ZW1wVGVtcGxhdGVBdHRycz17JGF0dHI6e319LHJlcGxhY2VXaXRoKCRyb290RWxlbWVudCwkY29tcGlsZU5vZGUsY29tcGlsZU5vZGUpO3ZhciB0ZW1wbGF0ZURpcmVjdGl2ZXM9Y29sbGVjdERpcmVjdGl2ZXMoY29tcGlsZU5vZGUsW10sdGVtcFRlbXBsYXRlQXR0cnMpO2lzT2JqZWN0KG9yaWdBc3luY0RpcmVjdGl2ZS5zY29wZSkmJm1hcmtEaXJlY3RpdmVzQXNJc29sYXRlKHRlbXBsYXRlRGlyZWN0aXZlcyksZGlyZWN0aXZlcz10ZW1wbGF0ZURpcmVjdGl2ZXMuY29uY2F0KGRpcmVjdGl2ZXMpLG1lcmdlVGVtcGxhdGVBdHRyaWJ1dGVzKHRBdHRycyx0ZW1wVGVtcGxhdGVBdHRycyl9ZWxzZSBjb21waWxlTm9kZT1iZWZvcmVUZW1wbGF0ZUNvbXBpbGVOb2RlLCRjb21waWxlTm9kZS5odG1sKGNvbnRlbnQpO2ZvcihkaXJlY3RpdmVzLnVuc2hpZnQoZGVyaXZlZFN5bmNEaXJlY3RpdmUpLGFmdGVyVGVtcGxhdGVOb2RlTGlua0ZuPWFwcGx5RGlyZWN0aXZlc1RvTm9kZShkaXJlY3RpdmVzLGNvbXBpbGVOb2RlLHRBdHRycyxjaGlsZFRyYW5zY2x1ZGVGbiwkY29tcGlsZU5vZGUsb3JpZ0FzeW5jRGlyZWN0aXZlLHByZUxpbmtGbnMscG9zdExpbmtGbnMscHJldmlvdXNDb21waWxlQ29udGV4dCksZm9yRWFjaCgkcm9vdEVsZW1lbnQsZnVuY3Rpb24obm9kZSxpKXtub2RlPT1jb21waWxlTm9kZSYmKCRyb290RWxlbWVudFtpXT0kY29tcGlsZU5vZGVbMF0pfSksYWZ0ZXJUZW1wbGF0ZUNoaWxkTGlua0ZuPWNvbXBpbGVOb2RlcygkY29tcGlsZU5vZGVbMF0uY2hpbGROb2RlcyxjaGlsZFRyYW5zY2x1ZGVGbik7bGlua1F1ZXVlLmxlbmd0aDspe3ZhciBzY29wZT1saW5rUXVldWUuc2hpZnQoKSxiZWZvcmVUZW1wbGF0ZUxpbmtOb2RlPWxpbmtRdWV1ZS5zaGlmdCgpLGxpbmtSb290RWxlbWVudD1saW5rUXVldWUuc2hpZnQoKSxib3VuZFRyYW5zY2x1ZGVGbj1saW5rUXVldWUuc2hpZnQoKSxsaW5rTm9kZT0kY29tcGlsZU5vZGVbMF07aWYoYmVmb3JlVGVtcGxhdGVMaW5rTm9kZSE9PWJlZm9yZVRlbXBsYXRlQ29tcGlsZU5vZGUpe3ZhciBvbGRDbGFzc2VzPWJlZm9yZVRlbXBsYXRlTGlua05vZGUuY2xhc3NOYW1lO3ByZXZpb3VzQ29tcGlsZUNvbnRleHQuaGFzRWxlbWVudFRyYW5zY2x1ZGVEaXJlY3RpdmUmJm9yaWdBc3luY0RpcmVjdGl2ZS5yZXBsYWNlfHwobGlua05vZGU9anFMaXRlQ2xvbmUoY29tcGlsZU5vZGUpKSxyZXBsYWNlV2l0aChsaW5rUm9vdEVsZW1lbnQsanFMaXRlKGJlZm9yZVRlbXBsYXRlTGlua05vZGUpLGxpbmtOb2RlKSxzYWZlQWRkQ2xhc3MoanFMaXRlKGxpbmtOb2RlKSxvbGRDbGFzc2VzKX1jaGlsZEJvdW5kVHJhbnNjbHVkZUZuPWFmdGVyVGVtcGxhdGVOb2RlTGlua0ZuLnRyYW5zY2x1ZGVPblRoaXNFbGVtZW50P2NyZWF0ZUJvdW5kVHJhbnNjbHVkZUZuKHNjb3BlLGFmdGVyVGVtcGxhdGVOb2RlTGlua0ZuLnRyYW5zY2x1ZGUsYm91bmRUcmFuc2NsdWRlRm4pOmJvdW5kVHJhbnNjbHVkZUZuLGFmdGVyVGVtcGxhdGVOb2RlTGlua0ZuKGFmdGVyVGVtcGxhdGVDaGlsZExpbmtGbixzY29wZSxsaW5rTm9kZSwkcm9vdEVsZW1lbnQsY2hpbGRCb3VuZFRyYW5zY2x1ZGVGbil9bGlua1F1ZXVlPW51bGx9KS5lcnJvcihmdW5jdGlvbihyZXNwb25zZSxjb2RlLGhlYWRlcnMsY29uZmlnKXt0aHJvdyAkY29tcGlsZU1pbkVycigidHBsb2FkIiwiRmFpbGVkIHRvIGxvYWQgdGVtcGxhdGU6IHswfSIsY29uZmlnLnVybCl9KSxmdW5jdGlvbihpZ25vcmVDaGlsZExpbmtGbixzY29wZSxub2RlLHJvb3RFbGVtZW50LGJvdW5kVHJhbnNjbHVkZUZuKXt2YXIgY2hpbGRCb3VuZFRyYW5zY2x1ZGVGbj1ib3VuZFRyYW5zY2x1ZGVGbjtsaW5rUXVldWU/KGxpbmtRdWV1ZS5wdXNoKHNjb3BlKSxsaW5rUXVldWUucHVzaChub2RlKSxsaW5rUXVldWUucHVzaChyb290RWxlbWVudCksbGlua1F1ZXVlLnB1c2goY2hpbGRCb3VuZFRyYW5zY2x1ZGVGbikpOihhZnRlclRlbXBsYXRlTm9kZUxpbmtGbi50cmFuc2NsdWRlT25UaGlzRWxlbWVudCYmKGNoaWxkQm91bmRUcmFuc2NsdWRlRm49Y3JlYXRlQm91bmRUcmFuc2NsdWRlRm4oc2NvcGUsYWZ0ZXJUZW1wbGF0ZU5vZGVMaW5rRm4udHJhbnNjbHVkZSxib3VuZFRyYW5zY2x1ZGVGbikpLGFmdGVyVGVtcGxhdGVOb2RlTGlua0ZuKGFmdGVyVGVtcGxhdGVDaGlsZExpbmtGbixzY29wZSxub2RlLHJvb3RFbGVtZW50LGNoaWxkQm91bmRUcmFuc2NsdWRlRm4pKX19ZnVuY3Rpb24gYnlQcmlvcml0eShhLGIpe3ZhciBkaWZmPWIucHJpb3JpdHktYS5wcmlvcml0eTtyZXR1cm4gMCE9PWRpZmY/ZGlmZjphLm5hbWUhPT1iLm5hbWU/YS5uYW1lPGIubmFtZT8tMToxOmEuaW5kZXgtYi5pbmRleH1mdW5jdGlvbiBhc3NlcnROb0R1cGxpY2F0ZSh3aGF0LHByZXZpb3VzRGlyZWN0aXZlLGRpcmVjdGl2ZSxlbGVtZW50KXtpZihwcmV2aW91c0RpcmVjdGl2ZSl0aHJvdyAkY29tcGlsZU1pbkVycigibXVsdGlkaXIiLCJNdWx0aXBsZSBkaXJlY3RpdmVzIFt7MH0sIHsxfV0gYXNraW5nIGZvciB7Mn0gb246IHszfSIscHJldmlvdXNEaXJlY3RpdmUubmFtZSxkaXJlY3RpdmUubmFtZSx3aGF0LHN0YXJ0aW5nVGFnKGVsZW1lbnQpKX1mdW5jdGlvbiBhZGRUZXh0SW50ZXJwb2xhdGVEaXJlY3RpdmUoZGlyZWN0aXZlcyx0ZXh0KXt2YXIgaW50ZXJwb2xhdGVGbj0kaW50ZXJwb2xhdGUodGV4dCwhMCk7aW50ZXJwb2xhdGVGbiYmZGlyZWN0aXZlcy5wdXNoKHtwcmlvcml0eTowLGNvbXBpbGU6ZnVuY3Rpb24odGVtcGxhdGVOb2RlKXt2YXIgcGFyZW50PXRlbXBsYXRlTm9kZS5wYXJlbnQoKSxoYXNDb21waWxlUGFyZW50PXBhcmVudC5sZW5ndGg7cmV0dXJuIGhhc0NvbXBpbGVQYXJlbnQmJnNhZmVBZGRDbGFzcyh0ZW1wbGF0ZU5vZGUucGFyZW50KCksIm5nLWJpbmRpbmciKSxmdW5jdGlvbihzY29wZSxub2RlKXt2YXIgcGFyZW50PW5vZGUucGFyZW50KCksYmluZGluZ3M9cGFyZW50LmRhdGEoIiRiaW5kaW5nIil8fFtdO2JpbmRpbmdzLnB1c2goaW50ZXJwb2xhdGVGbikscGFyZW50LmRhdGEoIiRiaW5kaW5nIixiaW5kaW5ncyksaGFzQ29tcGlsZVBhcmVudHx8c2FmZUFkZENsYXNzKHBhcmVudCwibmctYmluZGluZyIpLHNjb3BlLiR3YXRjaChpbnRlcnBvbGF0ZUZuLGZ1bmN0aW9uKHZhbHVlKXtub2RlWzBdLm5vZGVWYWx1ZT12YWx1ZX0pfX19KX1mdW5jdGlvbiBnZXRUcnVzdGVkQ29udGV4dChub2RlLGF0dHJOb3JtYWxpemVkTmFtZSl7aWYoInNyY2RvYyI9PWF0dHJOb3JtYWxpemVkTmFtZSlyZXR1cm4gJHNjZS5IVE1MO3ZhciB0YWc9bm9kZU5hbWVfKG5vZGUpO3JldHVybiJ4bGlua0hyZWYiPT1hdHRyTm9ybWFsaXplZE5hbWV8fCJGT1JNIj09dGFnJiYiYWN0aW9uIj09YXR0ck5vcm1hbGl6ZWROYW1lfHwiSU1HIiE9dGFnJiYoInNyYyI9PWF0dHJOb3JtYWxpemVkTmFtZXx8Im5nU3JjIj09YXR0ck5vcm1hbGl6ZWROYW1lKT8kc2NlLlJFU09VUkNFX1VSTDp2b2lkIDB9ZnVuY3Rpb24gYWRkQXR0ckludGVycG9sYXRlRGlyZWN0aXZlKG5vZGUsZGlyZWN0aXZlcyx2YWx1ZSxuYW1lKXt2YXIgaW50ZXJwb2xhdGVGbj0kaW50ZXJwb2xhdGUodmFsdWUsITApO2lmKGludGVycG9sYXRlRm4pe2lmKCJtdWx0aXBsZSI9PT1uYW1lJiYiU0VMRUNUIj09PW5vZGVOYW1lXyhub2RlKSl0aHJvdyAkY29tcGlsZU1pbkVycigic2VsbXVsdGkiLCJCaW5kaW5nIHRvIHRoZSAnbXVsdGlwbGUnIGF0dHJpYnV0ZSBpcyBub3Qgc3VwcG9ydGVkLiBFbGVtZW50OiB7MH0iLHN0YXJ0aW5nVGFnKG5vZGUpKTtkaXJlY3RpdmVzLnB1c2goe3ByaW9yaXR5OjEwMCxjb21waWxlOmZ1bmN0aW9uKCl7cmV0dXJue3ByZTpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe3ZhciAkJG9ic2VydmVycz1hdHRyLiQkb2JzZXJ2ZXJzfHwoYXR0ci4kJG9ic2VydmVycz17fSk7aWYoRVZFTlRfSEFORExFUl9BVFRSX1JFR0VYUC50ZXN0KG5hbWUpKXRocm93ICRjb21waWxlTWluRXJyKCJub2RvbWV2ZW50cyIsIkludGVycG9sYXRpb25zIGZvciBIVE1MIERPTSBldmVudCBhdHRyaWJ1dGVzIGFyZSBkaXNhbGxvd2VkLiAgUGxlYXNlIHVzZSB0aGUgbmctIHZlcnNpb25zIChzdWNoIGFzIG5nLWNsaWNrIGluc3RlYWQgb2Ygb25jbGljaykgaW5zdGVhZC4iKTtpbnRlcnBvbGF0ZUZuPSRpbnRlcnBvbGF0ZShhdHRyW25hbWVdLCEwLGdldFRydXN0ZWRDb250ZXh0KG5vZGUsbmFtZSkpLGludGVycG9sYXRlRm4mJihhdHRyW25hbWVdPWludGVycG9sYXRlRm4oc2NvcGUpLCgkJG9ic2VydmVyc1tuYW1lXXx8KCQkb2JzZXJ2ZXJzW25hbWVdPVtdKSkuJCRpbnRlcj0hMCwoYXR0ci4kJG9ic2VydmVycyYmYXR0ci4kJG9ic2VydmVyc1tuYW1lXS4kJHNjb3BlfHxzY29wZSkuJHdhdGNoKGludGVycG9sYXRlRm4sZnVuY3Rpb24obmV3VmFsdWUsb2xkVmFsdWUpeyJjbGFzcyI9PT1uYW1lJiZuZXdWYWx1ZSE9b2xkVmFsdWU/YXR0ci4kdXBkYXRlQ2xhc3MobmV3VmFsdWUsb2xkVmFsdWUpOmF0dHIuJHNldChuYW1lLG5ld1ZhbHVlKX0pKX19fX0pfX1mdW5jdGlvbiByZXBsYWNlV2l0aCgkcm9vdEVsZW1lbnQsZWxlbWVudHNUb1JlbW92ZSxuZXdOb2RlKXt2YXIgaSxpaSxmaXJzdEVsZW1lbnRUb1JlbW92ZT1lbGVtZW50c1RvUmVtb3ZlWzBdLHJlbW92ZUNvdW50PWVsZW1lbnRzVG9SZW1vdmUubGVuZ3RoLHBhcmVudD1maXJzdEVsZW1lbnRUb1JlbW92ZS5wYXJlbnROb2RlO2lmKCRyb290RWxlbWVudClmb3IoaT0wLGlpPSRyb290RWxlbWVudC5sZW5ndGg7aWk+aTtpKyspaWYoJHJvb3RFbGVtZW50W2ldPT1maXJzdEVsZW1lbnRUb1JlbW92ZSl7JHJvb3RFbGVtZW50W2krK109bmV3Tm9kZTtmb3IodmFyIGo9aSxqMj1qK3JlbW92ZUNvdW50LTEsamo9JHJvb3RFbGVtZW50Lmxlbmd0aDtqaj5qO2orKyxqMisrKWpqPmoyPyRyb290RWxlbWVudFtqXT0kcm9vdEVsZW1lbnRbajJdOmRlbGV0ZSAkcm9vdEVsZW1lbnRbal07JHJvb3RFbGVtZW50Lmxlbmd0aC09cmVtb3ZlQ291bnQtMTticmVha31wYXJlbnQmJnBhcmVudC5yZXBsYWNlQ2hpbGQobmV3Tm9kZSxmaXJzdEVsZW1lbnRUb1JlbW92ZSk7dmFyIGZyYWdtZW50PWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtmcmFnbWVudC5hcHBlbmRDaGlsZChmaXJzdEVsZW1lbnRUb1JlbW92ZSksbmV3Tm9kZVtqcUxpdGUuZXhwYW5kb109Zmlyc3RFbGVtZW50VG9SZW1vdmVbanFMaXRlLmV4cGFuZG9dO2Zvcih2YXIgaz0xLGtrPWVsZW1lbnRzVG9SZW1vdmUubGVuZ3RoO2trPms7aysrKXt2YXIgZWxlbWVudD1lbGVtZW50c1RvUmVtb3ZlW2tdO2pxTGl0ZShlbGVtZW50KS5yZW1vdmUoKSxmcmFnbWVudC5hcHBlbmRDaGlsZChlbGVtZW50KSxkZWxldGUgZWxlbWVudHNUb1JlbW92ZVtrXX1lbGVtZW50c1RvUmVtb3ZlWzBdPW5ld05vZGUsZWxlbWVudHNUb1JlbW92ZS5sZW5ndGg9MX1mdW5jdGlvbiBjbG9uZUFuZEFubm90YXRlRm4oZm4sYW5ub3RhdGlvbil7cmV0dXJuIGV4dGVuZChmdW5jdGlvbigpe3JldHVybiBmbi5hcHBseShudWxsLGFyZ3VtZW50cyl9LGZuLGFubm90YXRpb24pfXZhciBBdHRyaWJ1dGVzPWZ1bmN0aW9uKGVsZW1lbnQsYXR0cil7dGhpcy4kJGVsZW1lbnQ9ZWxlbWVudCx0aGlzLiRhdHRyPWF0dHJ8fHt9fTtBdHRyaWJ1dGVzLnByb3RvdHlwZT17JG5vcm1hbGl6ZTpkaXJlY3RpdmVOb3JtYWxpemUsJGFkZENsYXNzOmZ1bmN0aW9uKGNsYXNzVmFsKXtjbGFzc1ZhbCYmY2xhc3NWYWwubGVuZ3RoPjAmJiRhbmltYXRlLmFkZENsYXNzKHRoaXMuJCRlbGVtZW50LGNsYXNzVmFsKX0sJHJlbW92ZUNsYXNzOmZ1bmN0aW9uKGNsYXNzVmFsKXtjbGFzc1ZhbCYmY2xhc3NWYWwubGVuZ3RoPjAmJiRhbmltYXRlLnJlbW92ZUNsYXNzKHRoaXMuJCRlbGVtZW50LGNsYXNzVmFsKX0sJHVwZGF0ZUNsYXNzOmZ1bmN0aW9uKG5ld0NsYXNzZXMsb2xkQ2xhc3Nlcyl7dmFyIHRvQWRkPXRva2VuRGlmZmVyZW5jZShuZXdDbGFzc2VzLG9sZENsYXNzZXMpLHRvUmVtb3ZlPXRva2VuRGlmZmVyZW5jZShvbGRDbGFzc2VzLG5ld0NsYXNzZXMpOzA9PT10b0FkZC5sZW5ndGg/JGFuaW1hdGUucmVtb3ZlQ2xhc3ModGhpcy4kJGVsZW1lbnQsdG9SZW1vdmUpOjA9PT10b1JlbW92ZS5sZW5ndGg/JGFuaW1hdGUuYWRkQ2xhc3ModGhpcy4kJGVsZW1lbnQsdG9BZGQpOiRhbmltYXRlLnNldENsYXNzKHRoaXMuJCRlbGVtZW50LHRvQWRkLHRvUmVtb3ZlKX0sJHNldDpmdW5jdGlvbihrZXksdmFsdWUsd3JpdGVBdHRyLGF0dHJOYW1lKXt2YXIgbm9kZU5hbWUsYm9vbGVhbktleT1nZXRCb29sZWFuQXR0ck5hbWUodGhpcy4kJGVsZW1lbnRbMF0sa2V5KTtib29sZWFuS2V5JiYodGhpcy4kJGVsZW1lbnQucHJvcChrZXksdmFsdWUpLGF0dHJOYW1lPWJvb2xlYW5LZXkpLHRoaXNba2V5XT12YWx1ZSxhdHRyTmFtZT90aGlzLiRhdHRyW2tleV09YXR0ck5hbWU6KGF0dHJOYW1lPXRoaXMuJGF0dHJba2V5XSxhdHRyTmFtZXx8KHRoaXMuJGF0dHJba2V5XT1hdHRyTmFtZT1zbmFrZV9jYXNlKGtleSwiLSIpKSksbm9kZU5hbWU9bm9kZU5hbWVfKHRoaXMuJCRlbGVtZW50KSwoIkEiPT09bm9kZU5hbWUmJiJocmVmIj09PWtleXx8IklNRyI9PT1ub2RlTmFtZSYmInNyYyI9PT1rZXkpJiYodGhpc1trZXldPXZhbHVlPSQkc2FuaXRpemVVcmkodmFsdWUsInNyYyI9PT1rZXkpKSx3cml0ZUF0dHIhPT0hMSYmKG51bGw9PT12YWx1ZXx8dmFsdWU9PT11bmRlZmluZWQ/dGhpcy4kJGVsZW1lbnQucmVtb3ZlQXR0cihhdHRyTmFtZSk6dGhpcy4kJGVsZW1lbnQuYXR0cihhdHRyTmFtZSx2YWx1ZSkpO3ZhciAkJG9ic2VydmVycz10aGlzLiQkb2JzZXJ2ZXJzOyQkb2JzZXJ2ZXJzJiZmb3JFYWNoKCQkb2JzZXJ2ZXJzW2tleV0sZnVuY3Rpb24oZm4pe3RyeXtmbih2YWx1ZSl9Y2F0Y2goZSl7JGV4Y2VwdGlvbkhhbmRsZXIoZSl9fSl9LCRvYnNlcnZlOmZ1bmN0aW9uKGtleSxmbil7dmFyIGF0dHJzPXRoaXMsJCRvYnNlcnZlcnM9YXR0cnMuJCRvYnNlcnZlcnN8fChhdHRycy4kJG9ic2VydmVycz17fSksbGlzdGVuZXJzPSQkb2JzZXJ2ZXJzW2tleV18fCgkJG9ic2VydmVyc1trZXldPVtdKTtyZXR1cm4gbGlzdGVuZXJzLnB1c2goZm4pLCRyb290U2NvcGUuJGV2YWxBc3luYyhmdW5jdGlvbigpe2xpc3RlbmVycy4kJGludGVyfHxmbihhdHRyc1trZXldKX0pLGZufX07dmFyIHN0YXJ0U3ltYm9sPSRpbnRlcnBvbGF0ZS5zdGFydFN5bWJvbCgpLGVuZFN5bWJvbD0kaW50ZXJwb2xhdGUuZW5kU3ltYm9sKCksZGVub3JtYWxpemVUZW1wbGF0ZT0ie3siPT1zdGFydFN5bWJvbHx8In19Ij09ZW5kU3ltYm9sP2lkZW50aXR5OmZ1bmN0aW9uKHRlbXBsYXRlKXtyZXR1cm4gdGVtcGxhdGUucmVwbGFjZSgvXHtcey9nLHN0YXJ0U3ltYm9sKS5yZXBsYWNlKC99fS9nLGVuZFN5bWJvbCkKfSxOR19BVFRSX0JJTkRJTkc9L15uZ0F0dHJbQS1aXS87cmV0dXJuIGNvbXBpbGV9XX1mdW5jdGlvbiBkaXJlY3RpdmVOb3JtYWxpemUobmFtZSl7cmV0dXJuIGNhbWVsQ2FzZShuYW1lLnJlcGxhY2UoUFJFRklYX1JFR0VYUCwiIikpfWZ1bmN0aW9uIHRva2VuRGlmZmVyZW5jZShzdHIxLHN0cjIpe3ZhciB2YWx1ZXM9IiIsdG9rZW5zMT1zdHIxLnNwbGl0KC9ccysvKSx0b2tlbnMyPXN0cjIuc3BsaXQoL1xzKy8pO291dGVyOmZvcih2YXIgaT0wO2k8dG9rZW5zMS5sZW5ndGg7aSsrKXtmb3IodmFyIHRva2VuPXRva2VuczFbaV0saj0wO2o8dG9rZW5zMi5sZW5ndGg7aisrKWlmKHRva2VuPT10b2tlbnMyW2pdKWNvbnRpbnVlIG91dGVyO3ZhbHVlcys9KHZhbHVlcy5sZW5ndGg+MD8iICI6IiIpK3Rva2VufXJldHVybiB2YWx1ZXN9ZnVuY3Rpb24gJENvbnRyb2xsZXJQcm92aWRlcigpe3ZhciBjb250cm9sbGVycz17fSxDTlRSTF9SRUc9L14oXFMrKShccythc1xzKyhcdyspKT8kLzt0aGlzLnJlZ2lzdGVyPWZ1bmN0aW9uKG5hbWUsY29uc3RydWN0b3Ipe2Fzc2VydE5vdEhhc093blByb3BlcnR5KG5hbWUsImNvbnRyb2xsZXIiKSxpc09iamVjdChuYW1lKT9leHRlbmQoY29udHJvbGxlcnMsbmFtZSk6Y29udHJvbGxlcnNbbmFtZV09Y29uc3RydWN0b3J9LHRoaXMuJGdldD1bIiRpbmplY3RvciIsIiR3aW5kb3ciLGZ1bmN0aW9uKCRpbmplY3Rvciwkd2luZG93KXtyZXR1cm4gZnVuY3Rpb24oZXhwcmVzc2lvbixsb2NhbHMpe3ZhciBpbnN0YW5jZSxtYXRjaCxjb25zdHJ1Y3RvcixpZGVudGlmaWVyO2lmKGlzU3RyaW5nKGV4cHJlc3Npb24pJiYobWF0Y2g9ZXhwcmVzc2lvbi5tYXRjaChDTlRSTF9SRUcpLGNvbnN0cnVjdG9yPW1hdGNoWzFdLGlkZW50aWZpZXI9bWF0Y2hbM10sZXhwcmVzc2lvbj1jb250cm9sbGVycy5oYXNPd25Qcm9wZXJ0eShjb25zdHJ1Y3Rvcik/Y29udHJvbGxlcnNbY29uc3RydWN0b3JdOmdldHRlcihsb2NhbHMuJHNjb3BlLGNvbnN0cnVjdG9yLCEwKXx8Z2V0dGVyKCR3aW5kb3csY29uc3RydWN0b3IsITApLGFzc2VydEFyZ0ZuKGV4cHJlc3Npb24sY29uc3RydWN0b3IsITApKSxpbnN0YW5jZT0kaW5qZWN0b3IuaW5zdGFudGlhdGUoZXhwcmVzc2lvbixsb2NhbHMpLGlkZW50aWZpZXIpe2lmKCFsb2NhbHN8fCJvYmplY3QiIT10eXBlb2YgbG9jYWxzLiRzY29wZSl0aHJvdyBtaW5FcnIoIiRjb250cm9sbGVyIikoIm5vc2NwIiwiQ2Fubm90IGV4cG9ydCBjb250cm9sbGVyICd7MH0nIGFzICd7MX0nISBObyAkc2NvcGUgb2JqZWN0IHByb3ZpZGVkIHZpYSBgbG9jYWxzYC4iLGNvbnN0cnVjdG9yfHxleHByZXNzaW9uLm5hbWUsaWRlbnRpZmllcik7bG9jYWxzLiRzY29wZVtpZGVudGlmaWVyXT1pbnN0YW5jZX1yZXR1cm4gaW5zdGFuY2V9fV19ZnVuY3Rpb24gJERvY3VtZW50UHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkd2luZG93IixmdW5jdGlvbih3aW5kb3cpe3JldHVybiBqcUxpdGUod2luZG93LmRvY3VtZW50KX1dfWZ1bmN0aW9uICRFeGNlcHRpb25IYW5kbGVyUHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkbG9nIixmdW5jdGlvbigkbG9nKXtyZXR1cm4gZnVuY3Rpb24oKXskbG9nLmVycm9yLmFwcGx5KCRsb2csYXJndW1lbnRzKX19XX1mdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycyl7dmFyIGtleSx2YWwsaSxwYXJzZWQ9e307cmV0dXJuIGhlYWRlcnM/KGZvckVhY2goaGVhZGVycy5zcGxpdCgiXG4iKSxmdW5jdGlvbihsaW5lKXtpPWxpbmUuaW5kZXhPZigiOiIpLGtleT1sb3dlcmNhc2UodHJpbShsaW5lLnN1YnN0cigwLGkpKSksdmFsPXRyaW0obGluZS5zdWJzdHIoaSsxKSksa2V5JiYocGFyc2VkW2tleV09cGFyc2VkW2tleV0/cGFyc2VkW2tleV0rIiwgIit2YWw6dmFsKX0pLHBhcnNlZCk6cGFyc2VkfWZ1bmN0aW9uIGhlYWRlcnNHZXR0ZXIoaGVhZGVycyl7dmFyIGhlYWRlcnNPYmo9aXNPYmplY3QoaGVhZGVycyk/aGVhZGVyczp1bmRlZmluZWQ7cmV0dXJuIGZ1bmN0aW9uKG5hbWUpe3JldHVybiBoZWFkZXJzT2JqfHwoaGVhZGVyc09iaj1wYXJzZUhlYWRlcnMoaGVhZGVycykpLG5hbWU/aGVhZGVyc09ialtsb3dlcmNhc2UobmFtZSldfHxudWxsOmhlYWRlcnNPYmp9fWZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSxoZWFkZXJzLGZucyl7cmV0dXJuIGlzRnVuY3Rpb24oZm5zKT9mbnMoZGF0YSxoZWFkZXJzKTooZm9yRWFjaChmbnMsZnVuY3Rpb24oZm4pe2RhdGE9Zm4oZGF0YSxoZWFkZXJzKX0pLGRhdGEpfWZ1bmN0aW9uIGlzU3VjY2VzcyhzdGF0dXMpe3JldHVybiBzdGF0dXM+PTIwMCYmMzAwPnN0YXR1c31mdW5jdGlvbiAkSHR0cFByb3ZpZGVyKCl7dmFyIEpTT05fU1RBUlQ9L15ccyooXFt8XHtbXlx7XSkvLEpTT05fRU5EPS9bXH1cXV1ccyokLyxQUk9URUNUSU9OX1BSRUZJWD0vXlwpXF1cfScsP1xuLyxDT05URU5UX1RZUEVfQVBQTElDQVRJT05fSlNPTj17IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCJ9LGRlZmF1bHRzPXRoaXMuZGVmYXVsdHM9e3RyYW5zZm9ybVJlc3BvbnNlOltmdW5jdGlvbihkYXRhKXtyZXR1cm4gaXNTdHJpbmcoZGF0YSkmJihkYXRhPWRhdGEucmVwbGFjZShQUk9URUNUSU9OX1BSRUZJWCwiIiksSlNPTl9TVEFSVC50ZXN0KGRhdGEpJiZKU09OX0VORC50ZXN0KGRhdGEpJiYoZGF0YT1mcm9tSnNvbihkYXRhKSkpLGRhdGF9XSx0cmFuc2Zvcm1SZXF1ZXN0OltmdW5jdGlvbihkKXtyZXR1cm4haXNPYmplY3QoZCl8fGlzRmlsZShkKXx8aXNCbG9iKGQpP2Q6dG9Kc29uKGQpfV0saGVhZGVyczp7Y29tbW9uOntBY2NlcHQ6ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKiJ9LHBvc3Q6c2hhbGxvd0NvcHkoQ09OVEVOVF9UWVBFX0FQUExJQ0FUSU9OX0pTT04pLHB1dDpzaGFsbG93Q29weShDT05URU5UX1RZUEVfQVBQTElDQVRJT05fSlNPTikscGF0Y2g6c2hhbGxvd0NvcHkoQ09OVEVOVF9UWVBFX0FQUExJQ0FUSU9OX0pTT04pfSx4c3JmQ29va2llTmFtZToiWFNSRi1UT0tFTiIseHNyZkhlYWRlck5hbWU6IlgtWFNSRi1UT0tFTiJ9LGludGVyY2VwdG9yRmFjdG9yaWVzPXRoaXMuaW50ZXJjZXB0b3JzPVtdLHJlc3BvbnNlSW50ZXJjZXB0b3JGYWN0b3JpZXM9dGhpcy5yZXNwb25zZUludGVyY2VwdG9ycz1bXTt0aGlzLiRnZXQ9WyIkaHR0cEJhY2tlbmQiLCIkYnJvd3NlciIsIiRjYWNoZUZhY3RvcnkiLCIkcm9vdFNjb3BlIiwiJHEiLCIkaW5qZWN0b3IiLGZ1bmN0aW9uKCRodHRwQmFja2VuZCwkYnJvd3NlciwkY2FjaGVGYWN0b3J5LCRyb290U2NvcGUsJHEsJGluamVjdG9yKXtmdW5jdGlvbiAkaHR0cChyZXF1ZXN0Q29uZmlnKXtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShyZXNwb25zZSl7dmFyIHJlc3A9ZXh0ZW5kKHt9LHJlc3BvbnNlLHtkYXRhOnRyYW5zZm9ybURhdGEocmVzcG9uc2UuZGF0YSxyZXNwb25zZS5oZWFkZXJzLGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZSl9KTtyZXR1cm4gaXNTdWNjZXNzKHJlc3BvbnNlLnN0YXR1cyk/cmVzcDokcS5yZWplY3QocmVzcCl9ZnVuY3Rpb24gbWVyZ2VIZWFkZXJzKGNvbmZpZyl7ZnVuY3Rpb24gZXhlY0hlYWRlcnMoaGVhZGVycyl7dmFyIGhlYWRlckNvbnRlbnQ7Zm9yRWFjaChoZWFkZXJzLGZ1bmN0aW9uKGhlYWRlckZuLGhlYWRlcil7aXNGdW5jdGlvbihoZWFkZXJGbikmJihoZWFkZXJDb250ZW50PWhlYWRlckZuKCksbnVsbCE9aGVhZGVyQ29udGVudD9oZWFkZXJzW2hlYWRlcl09aGVhZGVyQ29udGVudDpkZWxldGUgaGVhZGVyc1toZWFkZXJdKX0pfXZhciBkZWZIZWFkZXJOYW1lLGxvd2VyY2FzZURlZkhlYWRlck5hbWUscmVxSGVhZGVyTmFtZSxkZWZIZWFkZXJzPWRlZmF1bHRzLmhlYWRlcnMscmVxSGVhZGVycz1leHRlbmQoe30sY29uZmlnLmhlYWRlcnMpO2RlZkhlYWRlcnM9ZXh0ZW5kKHt9LGRlZkhlYWRlcnMuY29tbW9uLGRlZkhlYWRlcnNbbG93ZXJjYXNlKGNvbmZpZy5tZXRob2QpXSk7ZGVmYXVsdEhlYWRlcnNJdGVyYXRpb246Zm9yKGRlZkhlYWRlck5hbWUgaW4gZGVmSGVhZGVycyl7bG93ZXJjYXNlRGVmSGVhZGVyTmFtZT1sb3dlcmNhc2UoZGVmSGVhZGVyTmFtZSk7Zm9yKHJlcUhlYWRlck5hbWUgaW4gcmVxSGVhZGVycylpZihsb3dlcmNhc2UocmVxSGVhZGVyTmFtZSk9PT1sb3dlcmNhc2VEZWZIZWFkZXJOYW1lKWNvbnRpbnVlIGRlZmF1bHRIZWFkZXJzSXRlcmF0aW9uO3JlcUhlYWRlcnNbZGVmSGVhZGVyTmFtZV09ZGVmSGVhZGVyc1tkZWZIZWFkZXJOYW1lXX1yZXR1cm4gZXhlY0hlYWRlcnMocmVxSGVhZGVycykscmVxSGVhZGVyc312YXIgY29uZmlnPXttZXRob2Q6ImdldCIsdHJhbnNmb3JtUmVxdWVzdDpkZWZhdWx0cy50cmFuc2Zvcm1SZXF1ZXN0LHRyYW5zZm9ybVJlc3BvbnNlOmRlZmF1bHRzLnRyYW5zZm9ybVJlc3BvbnNlfSxoZWFkZXJzPW1lcmdlSGVhZGVycyhyZXF1ZXN0Q29uZmlnKTtleHRlbmQoY29uZmlnLHJlcXVlc3RDb25maWcpLGNvbmZpZy5oZWFkZXJzPWhlYWRlcnMsY29uZmlnLm1ldGhvZD11cHBlcmNhc2UoY29uZmlnLm1ldGhvZCk7dmFyIHNlcnZlclJlcXVlc3Q9ZnVuY3Rpb24oY29uZmlnKXtoZWFkZXJzPWNvbmZpZy5oZWFkZXJzO3ZhciByZXFEYXRhPXRyYW5zZm9ybURhdGEoY29uZmlnLmRhdGEsaGVhZGVyc0dldHRlcihoZWFkZXJzKSxjb25maWcudHJhbnNmb3JtUmVxdWVzdCk7cmV0dXJuIGlzVW5kZWZpbmVkKHJlcURhdGEpJiZmb3JFYWNoKGhlYWRlcnMsZnVuY3Rpb24odmFsdWUsaGVhZGVyKXsiY29udGVudC10eXBlIj09PWxvd2VyY2FzZShoZWFkZXIpJiZkZWxldGUgaGVhZGVyc1toZWFkZXJdfSksaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykmJiFpc1VuZGVmaW5lZChkZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMpJiYoY29uZmlnLndpdGhDcmVkZW50aWFscz1kZWZhdWx0cy53aXRoQ3JlZGVudGlhbHMpLHNlbmRSZXEoY29uZmlnLHJlcURhdGEsaGVhZGVycykudGhlbih0cmFuc2Zvcm1SZXNwb25zZSx0cmFuc2Zvcm1SZXNwb25zZSl9LGNoYWluPVtzZXJ2ZXJSZXF1ZXN0LHVuZGVmaW5lZF0scHJvbWlzZT0kcS53aGVuKGNvbmZpZyk7Zm9yKGZvckVhY2gocmV2ZXJzZWRJbnRlcmNlcHRvcnMsZnVuY3Rpb24oaW50ZXJjZXB0b3IpeyhpbnRlcmNlcHRvci5yZXF1ZXN0fHxpbnRlcmNlcHRvci5yZXF1ZXN0RXJyb3IpJiZjaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLnJlcXVlc3QsaW50ZXJjZXB0b3IucmVxdWVzdEVycm9yKSwoaW50ZXJjZXB0b3IucmVzcG9uc2V8fGludGVyY2VwdG9yLnJlc3BvbnNlRXJyb3IpJiZjaGFpbi5wdXNoKGludGVyY2VwdG9yLnJlc3BvbnNlLGludGVyY2VwdG9yLnJlc3BvbnNlRXJyb3IpfSk7Y2hhaW4ubGVuZ3RoOyl7dmFyIHRoZW5Gbj1jaGFpbi5zaGlmdCgpLHJlamVjdEZuPWNoYWluLnNoaWZ0KCk7cHJvbWlzZT1wcm9taXNlLnRoZW4odGhlbkZuLHJlamVjdEZuKX1yZXR1cm4gcHJvbWlzZS5zdWNjZXNzPWZ1bmN0aW9uKGZuKXtyZXR1cm4gcHJvbWlzZS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtmbihyZXNwb25zZS5kYXRhLHJlc3BvbnNlLnN0YXR1cyxyZXNwb25zZS5oZWFkZXJzLGNvbmZpZyl9KSxwcm9taXNlfSxwcm9taXNlLmVycm9yPWZ1bmN0aW9uKGZuKXtyZXR1cm4gcHJvbWlzZS50aGVuKG51bGwsZnVuY3Rpb24ocmVzcG9uc2Upe2ZuKHJlc3BvbnNlLmRhdGEscmVzcG9uc2Uuc3RhdHVzLHJlc3BvbnNlLmhlYWRlcnMsY29uZmlnKX0pLHByb21pc2V9LHByb21pc2V9ZnVuY3Rpb24gY3JlYXRlU2hvcnRNZXRob2RzKCl7Zm9yRWFjaChhcmd1bWVudHMsZnVuY3Rpb24obmFtZSl7JGh0dHBbbmFtZV09ZnVuY3Rpb24odXJsLGNvbmZpZyl7cmV0dXJuICRodHRwKGV4dGVuZChjb25maWd8fHt9LHttZXRob2Q6bmFtZSx1cmw6dXJsfSkpfX0pfWZ1bmN0aW9uIGNyZWF0ZVNob3J0TWV0aG9kc1dpdGhEYXRhKCl7Zm9yRWFjaChhcmd1bWVudHMsZnVuY3Rpb24obmFtZSl7JGh0dHBbbmFtZV09ZnVuY3Rpb24odXJsLGRhdGEsY29uZmlnKXtyZXR1cm4gJGh0dHAoZXh0ZW5kKGNvbmZpZ3x8e30se21ldGhvZDpuYW1lLHVybDp1cmwsZGF0YTpkYXRhfSkpfX0pfWZ1bmN0aW9uIHNlbmRSZXEoY29uZmlnLHJlcURhdGEscmVxSGVhZGVycyl7ZnVuY3Rpb24gZG9uZShzdGF0dXMscmVzcG9uc2UsaGVhZGVyc1N0cmluZyxzdGF0dXNUZXh0KXtjYWNoZSYmKGlzU3VjY2VzcyhzdGF0dXMpP2NhY2hlLnB1dCh1cmwsW3N0YXR1cyxyZXNwb25zZSxwYXJzZUhlYWRlcnMoaGVhZGVyc1N0cmluZyksc3RhdHVzVGV4dF0pOmNhY2hlLnJlbW92ZSh1cmwpKSxyZXNvbHZlUHJvbWlzZShyZXNwb25zZSxzdGF0dXMsaGVhZGVyc1N0cmluZyxzdGF0dXNUZXh0KSwkcm9vdFNjb3BlLiQkcGhhc2V8fCRyb290U2NvcGUuJGFwcGx5KCl9ZnVuY3Rpb24gcmVzb2x2ZVByb21pc2UocmVzcG9uc2Usc3RhdHVzLGhlYWRlcnMsc3RhdHVzVGV4dCl7c3RhdHVzPU1hdGgubWF4KHN0YXR1cywwKSwoaXNTdWNjZXNzKHN0YXR1cyk/ZGVmZXJyZWQucmVzb2x2ZTpkZWZlcnJlZC5yZWplY3QpKHtkYXRhOnJlc3BvbnNlLHN0YXR1czpzdGF0dXMsaGVhZGVyczpoZWFkZXJzR2V0dGVyKGhlYWRlcnMpLGNvbmZpZzpjb25maWcsc3RhdHVzVGV4dDpzdGF0dXNUZXh0fSl9ZnVuY3Rpb24gcmVtb3ZlUGVuZGluZ1JlcSgpe3ZhciBpZHg9aW5kZXhPZigkaHR0cC5wZW5kaW5nUmVxdWVzdHMsY29uZmlnKTstMSE9PWlkeCYmJGh0dHAucGVuZGluZ1JlcXVlc3RzLnNwbGljZShpZHgsMSl9dmFyIGNhY2hlLGNhY2hlZFJlc3AsZGVmZXJyZWQ9JHEuZGVmZXIoKSxwcm9taXNlPWRlZmVycmVkLnByb21pc2UsdXJsPWJ1aWxkVXJsKGNvbmZpZy51cmwsY29uZmlnLnBhcmFtcyk7aWYoJGh0dHAucGVuZGluZ1JlcXVlc3RzLnB1c2goY29uZmlnKSxwcm9taXNlLnRoZW4ocmVtb3ZlUGVuZGluZ1JlcSxyZW1vdmVQZW5kaW5nUmVxKSwhY29uZmlnLmNhY2hlJiYhZGVmYXVsdHMuY2FjaGV8fGNvbmZpZy5jYWNoZT09PSExfHwiR0VUIiE9PWNvbmZpZy5tZXRob2QmJiJKU09OUCIhPT1jb25maWcubWV0aG9kfHwoY2FjaGU9aXNPYmplY3QoY29uZmlnLmNhY2hlKT9jb25maWcuY2FjaGU6aXNPYmplY3QoZGVmYXVsdHMuY2FjaGUpP2RlZmF1bHRzLmNhY2hlOmRlZmF1bHRDYWNoZSksY2FjaGUpaWYoY2FjaGVkUmVzcD1jYWNoZS5nZXQodXJsKSxpc0RlZmluZWQoY2FjaGVkUmVzcCkpe2lmKGlzUHJvbWlzZUxpa2UoY2FjaGVkUmVzcCkpcmV0dXJuIGNhY2hlZFJlc3AudGhlbihyZW1vdmVQZW5kaW5nUmVxLHJlbW92ZVBlbmRpbmdSZXEpLGNhY2hlZFJlc3A7aXNBcnJheShjYWNoZWRSZXNwKT9yZXNvbHZlUHJvbWlzZShjYWNoZWRSZXNwWzFdLGNhY2hlZFJlc3BbMF0sc2hhbGxvd0NvcHkoY2FjaGVkUmVzcFsyXSksY2FjaGVkUmVzcFszXSk6cmVzb2x2ZVByb21pc2UoY2FjaGVkUmVzcCwyMDAse30sIk9LIil9ZWxzZSBjYWNoZS5wdXQodXJsLHByb21pc2UpO2lmKGlzVW5kZWZpbmVkKGNhY2hlZFJlc3ApKXt2YXIgeHNyZlZhbHVlPXVybElzU2FtZU9yaWdpbihjb25maWcudXJsKT8kYnJvd3Nlci5jb29raWVzKClbY29uZmlnLnhzcmZDb29raWVOYW1lfHxkZWZhdWx0cy54c3JmQ29va2llTmFtZV06dW5kZWZpbmVkO3hzcmZWYWx1ZSYmKHJlcUhlYWRlcnNbY29uZmlnLnhzcmZIZWFkZXJOYW1lfHxkZWZhdWx0cy54c3JmSGVhZGVyTmFtZV09eHNyZlZhbHVlKSwkaHR0cEJhY2tlbmQoY29uZmlnLm1ldGhvZCx1cmwscmVxRGF0YSxkb25lLHJlcUhlYWRlcnMsY29uZmlnLnRpbWVvdXQsY29uZmlnLndpdGhDcmVkZW50aWFscyxjb25maWcucmVzcG9uc2VUeXBlKX1yZXR1cm4gcHJvbWlzZX1mdW5jdGlvbiBidWlsZFVybCh1cmwscGFyYW1zKXtpZighcGFyYW1zKXJldHVybiB1cmw7dmFyIHBhcnRzPVtdO3JldHVybiBmb3JFYWNoU29ydGVkKHBhcmFtcyxmdW5jdGlvbih2YWx1ZSxrZXkpe251bGw9PT12YWx1ZXx8aXNVbmRlZmluZWQodmFsdWUpfHwoaXNBcnJheSh2YWx1ZSl8fCh2YWx1ZT1bdmFsdWVdKSxmb3JFYWNoKHZhbHVlLGZ1bmN0aW9uKHYpe2lzT2JqZWN0KHYpJiYodj1pc0RhdGUodik/di50b0lTT1N0cmluZygpOnRvSnNvbih2KSkscGFydHMucHVzaChlbmNvZGVVcmlRdWVyeShrZXkpKyI9IitlbmNvZGVVcmlRdWVyeSh2KSl9KSl9KSxwYXJ0cy5sZW5ndGg+MCYmKHVybCs9KC0xPT11cmwuaW5kZXhPZigiPyIpPyI/IjoiJiIpK3BhcnRzLmpvaW4oIiYiKSksdXJsfXZhciBkZWZhdWx0Q2FjaGU9JGNhY2hlRmFjdG9yeSgiJGh0dHAiKSxyZXZlcnNlZEludGVyY2VwdG9ycz1bXTtyZXR1cm4gZm9yRWFjaChpbnRlcmNlcHRvckZhY3RvcmllcyxmdW5jdGlvbihpbnRlcmNlcHRvckZhY3Rvcnkpe3JldmVyc2VkSW50ZXJjZXB0b3JzLnVuc2hpZnQoaXNTdHJpbmcoaW50ZXJjZXB0b3JGYWN0b3J5KT8kaW5qZWN0b3IuZ2V0KGludGVyY2VwdG9yRmFjdG9yeSk6JGluamVjdG9yLmludm9rZShpbnRlcmNlcHRvckZhY3RvcnkpKX0pLGZvckVhY2gocmVzcG9uc2VJbnRlcmNlcHRvckZhY3RvcmllcyxmdW5jdGlvbihpbnRlcmNlcHRvckZhY3RvcnksaW5kZXgpe3ZhciByZXNwb25zZUZuPWlzU3RyaW5nKGludGVyY2VwdG9yRmFjdG9yeSk/JGluamVjdG9yLmdldChpbnRlcmNlcHRvckZhY3RvcnkpOiRpbmplY3Rvci5pbnZva2UoaW50ZXJjZXB0b3JGYWN0b3J5KTtyZXZlcnNlZEludGVyY2VwdG9ycy5zcGxpY2UoaW5kZXgsMCx7cmVzcG9uc2U6ZnVuY3Rpb24ocmVzcG9uc2Upe3JldHVybiByZXNwb25zZUZuKCRxLndoZW4ocmVzcG9uc2UpKX0scmVzcG9uc2VFcnJvcjpmdW5jdGlvbihyZXNwb25zZSl7cmV0dXJuIHJlc3BvbnNlRm4oJHEucmVqZWN0KHJlc3BvbnNlKSl9fSl9KSwkaHR0cC5wZW5kaW5nUmVxdWVzdHM9W10sY3JlYXRlU2hvcnRNZXRob2RzKCJnZXQiLCJkZWxldGUiLCJoZWFkIiwianNvbnAiKSxjcmVhdGVTaG9ydE1ldGhvZHNXaXRoRGF0YSgicG9zdCIsInB1dCIpLCRodHRwLmRlZmF1bHRzPWRlZmF1bHRzLCRodHRwfV19ZnVuY3Rpb24gY3JlYXRlWGhyKG1ldGhvZCl7aWYoOD49bXNpZSYmKCFtZXRob2QubWF0Y2goL14oZ2V0fHBvc3R8aGVhZHxwdXR8ZGVsZXRlfG9wdGlvbnMpJC9pKXx8IXdpbmRvdy5YTUxIdHRwUmVxdWVzdCkpcmV0dXJuIG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCgiTWljcm9zb2Z0LlhNTEhUVFAiKTtpZih3aW5kb3cuWE1MSHR0cFJlcXVlc3QpcmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3Q7dGhyb3cgbWluRXJyKCIkaHR0cEJhY2tlbmQiKSgibm94aHIiLCJUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdC4iKX1mdW5jdGlvbiAkSHR0cEJhY2tlbmRQcm92aWRlcigpe3RoaXMuJGdldD1bIiRicm93c2VyIiwiJHdpbmRvdyIsIiRkb2N1bWVudCIsZnVuY3Rpb24oJGJyb3dzZXIsJHdpbmRvdywkZG9jdW1lbnQpe3JldHVybiBjcmVhdGVIdHRwQmFja2VuZCgkYnJvd3NlcixjcmVhdGVYaHIsJGJyb3dzZXIuZGVmZXIsJHdpbmRvdy5hbmd1bGFyLmNhbGxiYWNrcywkZG9jdW1lbnRbMF0pfV19ZnVuY3Rpb24gY3JlYXRlSHR0cEJhY2tlbmQoJGJyb3dzZXIsY3JlYXRlWGhyLCRicm93c2VyRGVmZXIsY2FsbGJhY2tzLHJhd0RvY3VtZW50KXtmdW5jdGlvbiBqc29ucFJlcSh1cmwsY2FsbGJhY2tJZCxkb25lKXt2YXIgc2NyaXB0PXJhd0RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGNhbGxiYWNrPW51bGw7cmV0dXJuIHNjcmlwdC50eXBlPSJ0ZXh0L2phdmFzY3JpcHQiLHNjcmlwdC5zcmM9dXJsLHNjcmlwdC5hc3luYz0hMCxjYWxsYmFjaz1mdW5jdGlvbihldmVudCl7cmVtb3ZlRXZlbnRMaXN0ZW5lckZuKHNjcmlwdCwibG9hZCIsY2FsbGJhY2spLHJlbW92ZUV2ZW50TGlzdGVuZXJGbihzY3JpcHQsImVycm9yIixjYWxsYmFjaykscmF3RG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzY3JpcHQpLHNjcmlwdD1udWxsO3ZhciBzdGF0dXM9LTEsdGV4dD0idW5rbm93biI7ZXZlbnQmJigibG9hZCIhPT1ldmVudC50eXBlfHxjYWxsYmFja3NbY2FsbGJhY2tJZF0uY2FsbGVkfHwoZXZlbnQ9e3R5cGU6ImVycm9yIn0pLHRleHQ9ZXZlbnQudHlwZSxzdGF0dXM9ImVycm9yIj09PWV2ZW50LnR5cGU/NDA0OjIwMCksZG9uZSYmZG9uZShzdGF0dXMsdGV4dCl9LGFkZEV2ZW50TGlzdGVuZXJGbihzY3JpcHQsImxvYWQiLGNhbGxiYWNrKSxhZGRFdmVudExpc3RlbmVyRm4oc2NyaXB0LCJlcnJvciIsY2FsbGJhY2spLDg+PW1zaWUmJihzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aXNTdHJpbmcoc2NyaXB0LnJlYWR5U3RhdGUpJiYvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KHNjcmlwdC5yZWFkeVN0YXRlKSYmKHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxjYWxsYmFjayh7dHlwZToibG9hZCJ9KSl9KSxyYXdEb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCksY2FsbGJhY2t9dmFyIEFCT1JURUQ9LTE7cmV0dXJuIGZ1bmN0aW9uKG1ldGhvZCx1cmwscG9zdCxjYWxsYmFjayxoZWFkZXJzLHRpbWVvdXQsd2l0aENyZWRlbnRpYWxzLHJlc3BvbnNlVHlwZSl7ZnVuY3Rpb24gdGltZW91dFJlcXVlc3QoKXtzdGF0dXM9QUJPUlRFRCxqc29ucERvbmUmJmpzb25wRG9uZSgpLHhociYmeGhyLmFib3J0KCl9ZnVuY3Rpb24gY29tcGxldGVSZXF1ZXN0KGNhbGxiYWNrLHN0YXR1cyxyZXNwb25zZSxoZWFkZXJzU3RyaW5nLHN0YXR1c1RleHQpe3RpbWVvdXRJZCYmJGJyb3dzZXJEZWZlci5jYW5jZWwodGltZW91dElkKSxqc29ucERvbmU9eGhyPW51bGwsMD09PXN0YXR1cyYmKHN0YXR1cz1yZXNwb25zZT8yMDA6ImZpbGUiPT11cmxSZXNvbHZlKHVybCkucHJvdG9jb2w/NDA0OjApLHN0YXR1cz0xMjIzPT09c3RhdHVzPzIwNDpzdGF0dXMsc3RhdHVzVGV4dD1zdGF0dXNUZXh0fHwiIixjYWxsYmFjayhzdGF0dXMscmVzcG9uc2UsaGVhZGVyc1N0cmluZyxzdGF0dXNUZXh0KSwkYnJvd3Nlci4kJGNvbXBsZXRlT3V0c3RhbmRpbmdSZXF1ZXN0KG5vb3ApfXZhciBzdGF0dXM7aWYoJGJyb3dzZXIuJCRpbmNPdXRzdGFuZGluZ1JlcXVlc3RDb3VudCgpLHVybD11cmx8fCRicm93c2VyLnVybCgpLCJqc29ucCI9PWxvd2VyY2FzZShtZXRob2QpKXt2YXIgY2FsbGJhY2tJZD0iXyIrKGNhbGxiYWNrcy5jb3VudGVyKyspLnRvU3RyaW5nKDM2KTtjYWxsYmFja3NbY2FsbGJhY2tJZF09ZnVuY3Rpb24oZGF0YSl7Y2FsbGJhY2tzW2NhbGxiYWNrSWRdLmRhdGE9ZGF0YSxjYWxsYmFja3NbY2FsbGJhY2tJZF0uY2FsbGVkPSEwfTt2YXIganNvbnBEb25lPWpzb25wUmVxKHVybC5yZXBsYWNlKCJKU09OX0NBTExCQUNLIiwiYW5ndWxhci5jYWxsYmFja3MuIitjYWxsYmFja0lkKSxjYWxsYmFja0lkLGZ1bmN0aW9uKHN0YXR1cyx0ZXh0KXtjb21wbGV0ZVJlcXVlc3QoY2FsbGJhY2ssc3RhdHVzLGNhbGxiYWNrc1tjYWxsYmFja0lkXS5kYXRhLCIiLHRleHQpLGNhbGxiYWNrc1tjYWxsYmFja0lkXT1ub29wfSl9ZWxzZXt2YXIgeGhyPWNyZWF0ZVhocihtZXRob2QpO2lmKHhoci5vcGVuKG1ldGhvZCx1cmwsITApLGZvckVhY2goaGVhZGVycyxmdW5jdGlvbih2YWx1ZSxrZXkpe2lzRGVmaW5lZCh2YWx1ZSkmJnhoci5zZXRSZXF1ZXN0SGVhZGVyKGtleSx2YWx1ZSl9KSx4aHIub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoeGhyJiY0PT14aHIucmVhZHlTdGF0ZSl7dmFyIHJlc3BvbnNlSGVhZGVycz1udWxsLHJlc3BvbnNlPW51bGwsc3RhdHVzVGV4dD0iIjtzdGF0dXMhPT1BQk9SVEVEJiYocmVzcG9uc2VIZWFkZXJzPXhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSxyZXNwb25zZT0icmVzcG9uc2UiaW4geGhyP3hoci5yZXNwb25zZTp4aHIucmVzcG9uc2VUZXh0KSxzdGF0dXM9PT1BQk9SVEVEJiYxMD5tc2llfHwoc3RhdHVzVGV4dD14aHIuc3RhdHVzVGV4dCksY29tcGxldGVSZXF1ZXN0KGNhbGxiYWNrLHN0YXR1c3x8eGhyLnN0YXR1cyxyZXNwb25zZSxyZXNwb25zZUhlYWRlcnMsc3RhdHVzVGV4dCl9fSx3aXRoQ3JlZGVudGlhbHMmJih4aHIud2l0aENyZWRlbnRpYWxzPSEwKSxyZXNwb25zZVR5cGUpdHJ5e3hoci5yZXNwb25zZVR5cGU9cmVzcG9uc2VUeXBlfWNhdGNoKGUpe2lmKCJqc29uIiE9PXJlc3BvbnNlVHlwZSl0aHJvdyBlfXhoci5zZW5kKHBvc3R8fG51bGwpfWlmKHRpbWVvdXQ+MCl2YXIgdGltZW91dElkPSRicm93c2VyRGVmZXIodGltZW91dFJlcXVlc3QsdGltZW91dCk7ZWxzZSBpc1Byb21pc2VMaWtlKHRpbWVvdXQpJiZ0aW1lb3V0LnRoZW4odGltZW91dFJlcXVlc3QpfX1mdW5jdGlvbiAkSW50ZXJwb2xhdGVQcm92aWRlcigpe3ZhciBzdGFydFN5bWJvbD0ie3siLGVuZFN5bWJvbD0ifX0iO3RoaXMuc3RhcnRTeW1ib2w9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZT8oc3RhcnRTeW1ib2w9dmFsdWUsdGhpcyk6c3RhcnRTeW1ib2x9LHRoaXMuZW5kU3ltYm9sPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWU/KGVuZFN5bWJvbD12YWx1ZSx0aGlzKTplbmRTeW1ib2x9LHRoaXMuJGdldD1bIiRwYXJzZSIsIiRleGNlcHRpb25IYW5kbGVyIiwiJHNjZSIsZnVuY3Rpb24oJHBhcnNlLCRleGNlcHRpb25IYW5kbGVyLCRzY2Upe2Z1bmN0aW9uICRpbnRlcnBvbGF0ZSh0ZXh0LG11c3RIYXZlRXhwcmVzc2lvbix0cnVzdGVkQ29udGV4dCl7Zm9yKHZhciBzdGFydEluZGV4LGVuZEluZGV4LGZuLGV4cCxpbmRleD0wLHBhcnRzPVtdLGxlbmd0aD10ZXh0Lmxlbmd0aCxoYXNJbnRlcnBvbGF0aW9uPSExLGNvbmNhdD1bXTtsZW5ndGg+aW5kZXg7KS0xIT0oc3RhcnRJbmRleD10ZXh0LmluZGV4T2Yoc3RhcnRTeW1ib2wsaW5kZXgpKSYmLTEhPShlbmRJbmRleD10ZXh0LmluZGV4T2YoZW5kU3ltYm9sLHN0YXJ0SW5kZXgrc3RhcnRTeW1ib2xMZW5ndGgpKT8oaW5kZXghPXN0YXJ0SW5kZXgmJnBhcnRzLnB1c2godGV4dC5zdWJzdHJpbmcoaW5kZXgsc3RhcnRJbmRleCkpLHBhcnRzLnB1c2goZm49JHBhcnNlKGV4cD10ZXh0LnN1YnN0cmluZyhzdGFydEluZGV4K3N0YXJ0U3ltYm9sTGVuZ3RoLGVuZEluZGV4KSkpLGZuLmV4cD1leHAsaW5kZXg9ZW5kSW5kZXgrZW5kU3ltYm9sTGVuZ3RoLGhhc0ludGVycG9sYXRpb249ITApOihpbmRleCE9bGVuZ3RoJiZwYXJ0cy5wdXNoKHRleHQuc3Vic3RyaW5nKGluZGV4KSksaW5kZXg9bGVuZ3RoKTtpZigobGVuZ3RoPXBhcnRzLmxlbmd0aCl8fChwYXJ0cy5wdXNoKCIiKSxsZW5ndGg9MSksdHJ1c3RlZENvbnRleHQmJnBhcnRzLmxlbmd0aD4xKXRocm93ICRpbnRlcnBvbGF0ZU1pbkVycigibm9jb25jYXQiLCJFcnJvciB3aGlsZSBpbnRlcnBvbGF0aW5nOiB7MH1cblN0cmljdCBDb250ZXh0dWFsIEVzY2FwaW5nIGRpc2FsbG93cyBpbnRlcnBvbGF0aW9ucyB0aGF0IGNvbmNhdGVuYXRlIG11bHRpcGxlIGV4cHJlc3Npb25zIHdoZW4gYSB0cnVzdGVkIHZhbHVlIGlzIHJlcXVpcmVkLiAgU2VlIGh0dHA6Ly9kb2NzLmFuZ3VsYXJqcy5vcmcvYXBpL25nLiRzY2UiLHRleHQpO3JldHVybiFtdXN0SGF2ZUV4cHJlc3Npb258fGhhc0ludGVycG9sYXRpb24/KGNvbmNhdC5sZW5ndGg9bGVuZ3RoLGZuPWZ1bmN0aW9uKGNvbnRleHQpe3RyeXtmb3IodmFyIHBhcnQsaT0wLGlpPWxlbmd0aDtpaT5pO2krKyl7aWYoImZ1bmN0aW9uIj09dHlwZW9mKHBhcnQ9cGFydHNbaV0pKWlmKHBhcnQ9cGFydChjb250ZXh0KSxwYXJ0PXRydXN0ZWRDb250ZXh0PyRzY2UuZ2V0VHJ1c3RlZCh0cnVzdGVkQ29udGV4dCxwYXJ0KTokc2NlLnZhbHVlT2YocGFydCksbnVsbD09cGFydClwYXJ0PSIiO2Vsc2Ugc3dpdGNoKHR5cGVvZiBwYXJ0KXtjYXNlInN0cmluZyI6YnJlYWs7Y2FzZSJudW1iZXIiOnBhcnQ9IiIrcGFydDticmVhaztkZWZhdWx0OnBhcnQ9dG9Kc29uKHBhcnQpfWNvbmNhdFtpXT1wYXJ0fXJldHVybiBjb25jYXQuam9pbigiIil9Y2F0Y2goZXJyKXt2YXIgbmV3RXJyPSRpbnRlcnBvbGF0ZU1pbkVycigiaW50ZXJyIiwiQ2FuJ3QgaW50ZXJwb2xhdGU6IHswfVxuezF9Iix0ZXh0LGVyci50b1N0cmluZygpKTskZXhjZXB0aW9uSGFuZGxlcihuZXdFcnIpfX0sZm4uZXhwPXRleHQsZm4ucGFydHM9cGFydHMsZm4pOnZvaWQgMH12YXIgc3RhcnRTeW1ib2xMZW5ndGg9c3RhcnRTeW1ib2wubGVuZ3RoLGVuZFN5bWJvbExlbmd0aD1lbmRTeW1ib2wubGVuZ3RoO3JldHVybiAkaW50ZXJwb2xhdGUuc3RhcnRTeW1ib2w9ZnVuY3Rpb24oKXtyZXR1cm4gc3RhcnRTeW1ib2x9LCRpbnRlcnBvbGF0ZS5lbmRTeW1ib2w9ZnVuY3Rpb24oKXtyZXR1cm4gZW5kU3ltYm9sfSwkaW50ZXJwb2xhdGV9XX1mdW5jdGlvbiAkSW50ZXJ2YWxQcm92aWRlcigpe3RoaXMuJGdldD1bIiRyb290U2NvcGUiLCIkd2luZG93IiwiJHEiLGZ1bmN0aW9uKCRyb290U2NvcGUsJHdpbmRvdywkcSl7ZnVuY3Rpb24gaW50ZXJ2YWwoZm4sZGVsYXksY291bnQsaW52b2tlQXBwbHkpe3ZhciBzZXRJbnRlcnZhbD0kd2luZG93LnNldEludGVydmFsLGNsZWFySW50ZXJ2YWw9JHdpbmRvdy5jbGVhckludGVydmFsLGRlZmVycmVkPSRxLmRlZmVyKCkscHJvbWlzZT1kZWZlcnJlZC5wcm9taXNlLGl0ZXJhdGlvbj0wLHNraXBBcHBseT1pc0RlZmluZWQoaW52b2tlQXBwbHkpJiYhaW52b2tlQXBwbHk7cmV0dXJuIGNvdW50PWlzRGVmaW5lZChjb3VudCk/Y291bnQ6MCxwcm9taXNlLnRoZW4obnVsbCxudWxsLGZuKSxwcm9taXNlLiQkaW50ZXJ2YWxJZD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2RlZmVycmVkLm5vdGlmeShpdGVyYXRpb24rKyksY291bnQ+MCYmaXRlcmF0aW9uPj1jb3VudCYmKGRlZmVycmVkLnJlc29sdmUoaXRlcmF0aW9uKSxjbGVhckludGVydmFsKHByb21pc2UuJCRpbnRlcnZhbElkKSxkZWxldGUgaW50ZXJ2YWxzW3Byb21pc2UuJCRpbnRlcnZhbElkXSksc2tpcEFwcGx5fHwkcm9vdFNjb3BlLiRhcHBseSgpfSxkZWxheSksaW50ZXJ2YWxzW3Byb21pc2UuJCRpbnRlcnZhbElkXT1kZWZlcnJlZCxwcm9taXNlfXZhciBpbnRlcnZhbHM9e307cmV0dXJuIGludGVydmFsLmNhbmNlbD1mdW5jdGlvbihwcm9taXNlKXtyZXR1cm4gcHJvbWlzZSYmcHJvbWlzZS4kJGludGVydmFsSWQgaW4gaW50ZXJ2YWxzPyhpbnRlcnZhbHNbcHJvbWlzZS4kJGludGVydmFsSWRdLnJlamVjdCgiY2FuY2VsZWQiKSwkd2luZG93LmNsZWFySW50ZXJ2YWwocHJvbWlzZS4kJGludGVydmFsSWQpLGRlbGV0ZSBpbnRlcnZhbHNbcHJvbWlzZS4kJGludGVydmFsSWRdLCEwKTohMX0saW50ZXJ2YWx9XX1mdW5jdGlvbiAkTG9jYWxlUHJvdmlkZXIoKXt0aGlzLiRnZXQ9ZnVuY3Rpb24oKXtyZXR1cm57aWQ6ImVuLXVzIixOVU1CRVJfRk9STUFUUzp7REVDSU1BTF9TRVA6Ii4iLEdST1VQX1NFUDoiLCIsUEFUVEVSTlM6W3ttaW5JbnQ6MSxtaW5GcmFjOjAsbWF4RnJhYzozLHBvc1ByZToiIixwb3NTdWY6IiIsbmVnUHJlOiItIixuZWdTdWY6IiIsZ1NpemU6MyxsZ1NpemU6M30se21pbkludDoxLG1pbkZyYWM6MixtYXhGcmFjOjIscG9zUHJlOiLCpCIscG9zU3VmOiIiLG5lZ1ByZToiKMKkIixuZWdTdWY6IikiLGdTaXplOjMsbGdTaXplOjN9XSxDVVJSRU5DWV9TWU06IiQifSxEQVRFVElNRV9GT1JNQVRTOntNT05USDoiSmFudWFyeSxGZWJydWFyeSxNYXJjaCxBcHJpbCxNYXksSnVuZSxKdWx5LEF1Z3VzdCxTZXB0ZW1iZXIsT2N0b2JlcixOb3ZlbWJlcixEZWNlbWJlciIuc3BsaXQoIiwiKSxTSE9SVE1PTlRIOiJKYW4sRmViLE1hcixBcHIsTWF5LEp1bixKdWwsQXVnLFNlcCxPY3QsTm92LERlYyIuc3BsaXQoIiwiKSxEQVk6IlN1bmRheSxNb25kYXksVHVlc2RheSxXZWRuZXNkYXksVGh1cnNkYXksRnJpZGF5LFNhdHVyZGF5Ii5zcGxpdCgiLCIpLFNIT1JUREFZOiJTdW4sTW9uLFR1ZSxXZWQsVGh1LEZyaSxTYXQiLnNwbGl0KCIsIiksQU1QTVM6WyJBTSIsIlBNIl0sbWVkaXVtOiJNTU0gZCwgeSBoOm1tOnNzIGEiLCJzaG9ydCI6Ik0vZC95eSBoOm1tIGEiLGZ1bGxEYXRlOiJFRUVFLCBNTU1NIGQsIHkiLGxvbmdEYXRlOiJNTU1NIGQsIHkiLG1lZGl1bURhdGU6Ik1NTSBkLCB5IixzaG9ydERhdGU6Ik0vZC95eSIsbWVkaXVtVGltZToiaDptbTpzcyBhIixzaG9ydFRpbWU6Img6bW0gYSJ9LHBsdXJhbENhdDpmdW5jdGlvbihudW0pe3JldHVybiAxPT09bnVtPyJvbmUiOiJvdGhlciJ9fX19ZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKXtmb3IodmFyIHNlZ21lbnRzPXBhdGguc3BsaXQoIi8iKSxpPXNlZ21lbnRzLmxlbmd0aDtpLS07KXNlZ21lbnRzW2ldPWVuY29kZVVyaVNlZ21lbnQoc2VnbWVudHNbaV0pO3JldHVybiBzZWdtZW50cy5qb2luKCIvIil9ZnVuY3Rpb24gcGFyc2VBYnNvbHV0ZVVybChhYnNvbHV0ZVVybCxsb2NhdGlvbk9iaixhcHBCYXNlKXt2YXIgcGFyc2VkVXJsPXVybFJlc29sdmUoYWJzb2x1dGVVcmwsYXBwQmFzZSk7bG9jYXRpb25PYmouJCRwcm90b2NvbD1wYXJzZWRVcmwucHJvdG9jb2wsbG9jYXRpb25PYmouJCRob3N0PXBhcnNlZFVybC5ob3N0bmFtZSxsb2NhdGlvbk9iai4kJHBvcnQ9aW50KHBhcnNlZFVybC5wb3J0KXx8REVGQVVMVF9QT1JUU1twYXJzZWRVcmwucHJvdG9jb2xdfHxudWxsfWZ1bmN0aW9uIHBhcnNlQXBwVXJsKHJlbGF0aXZlVXJsLGxvY2F0aW9uT2JqLGFwcEJhc2Upe3ZhciBwcmVmaXhlZD0iLyIhPT1yZWxhdGl2ZVVybC5jaGFyQXQoMCk7cHJlZml4ZWQmJihyZWxhdGl2ZVVybD0iLyIrcmVsYXRpdmVVcmwpO3ZhciBtYXRjaD11cmxSZXNvbHZlKHJlbGF0aXZlVXJsLGFwcEJhc2UpO2xvY2F0aW9uT2JqLiQkcGF0aD1kZWNvZGVVUklDb21wb25lbnQocHJlZml4ZWQmJiIvIj09PW1hdGNoLnBhdGhuYW1lLmNoYXJBdCgwKT9tYXRjaC5wYXRobmFtZS5zdWJzdHJpbmcoMSk6bWF0Y2gucGF0aG5hbWUpLGxvY2F0aW9uT2JqLiQkc2VhcmNoPXBhcnNlS2V5VmFsdWUobWF0Y2guc2VhcmNoKSxsb2NhdGlvbk9iai4kJGhhc2g9ZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoLmhhc2gpLGxvY2F0aW9uT2JqLiQkcGF0aCYmIi8iIT1sb2NhdGlvbk9iai4kJHBhdGguY2hhckF0KDApJiYobG9jYXRpb25PYmouJCRwYXRoPSIvIitsb2NhdGlvbk9iai4kJHBhdGgpfWZ1bmN0aW9uIGJlZ2luc1dpdGgoYmVnaW4sd2hvbGUpe3JldHVybiAwPT09d2hvbGUuaW5kZXhPZihiZWdpbik/d2hvbGUuc3Vic3RyKGJlZ2luLmxlbmd0aCk6dm9pZCAwfWZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpe3ZhciBpbmRleD11cmwuaW5kZXhPZigiIyIpO3JldHVybi0xPT1pbmRleD91cmw6dXJsLnN1YnN0cigwLGluZGV4KX1mdW5jdGlvbiBzdHJpcEZpbGUodXJsKXtyZXR1cm4gdXJsLnN1YnN0cigwLHN0cmlwSGFzaCh1cmwpLmxhc3RJbmRleE9mKCIvIikrMSl9ZnVuY3Rpb24gc2VydmVyQmFzZSh1cmwpe3JldHVybiB1cmwuc3Vic3RyaW5nKDAsdXJsLmluZGV4T2YoIi8iLHVybC5pbmRleE9mKCIvLyIpKzIpKX1mdW5jdGlvbiBMb2NhdGlvbkh0bWw1VXJsKGFwcEJhc2UsYmFzZVByZWZpeCl7dGhpcy4kJGh0bWw1PSEwLGJhc2VQcmVmaXg9YmFzZVByZWZpeHx8IiI7dmFyIGFwcEJhc2VOb0ZpbGU9c3RyaXBGaWxlKGFwcEJhc2UpO3BhcnNlQWJzb2x1dGVVcmwoYXBwQmFzZSx0aGlzLGFwcEJhc2UpLHRoaXMuJCRwYXJzZT1mdW5jdGlvbih1cmwpe3ZhciBwYXRoVXJsPWJlZ2luc1dpdGgoYXBwQmFzZU5vRmlsZSx1cmwpO2lmKCFpc1N0cmluZyhwYXRoVXJsKSl0aHJvdyAkbG9jYXRpb25NaW5FcnIoImlwdGhwcmZ4IiwnSW52YWxpZCB1cmwgInswfSIsIG1pc3NpbmcgcGF0aCBwcmVmaXggInsxfSIuJyx1cmwsYXBwQmFzZU5vRmlsZSk7cGFyc2VBcHBVcmwocGF0aFVybCx0aGlzLGFwcEJhc2UpLHRoaXMuJCRwYXRofHwodGhpcy4kJHBhdGg9Ii8iKSx0aGlzLiQkY29tcG9zZSgpfSx0aGlzLiQkY29tcG9zZT1mdW5jdGlvbigpe3ZhciBzZWFyY2g9dG9LZXlWYWx1ZSh0aGlzLiQkc2VhcmNoKSxoYXNoPXRoaXMuJCRoYXNoPyIjIitlbmNvZGVVcmlTZWdtZW50KHRoaXMuJCRoYXNoKToiIjt0aGlzLiQkdXJsPWVuY29kZVBhdGgodGhpcy4kJHBhdGgpKyhzZWFyY2g/Ij8iK3NlYXJjaDoiIikraGFzaCx0aGlzLiQkYWJzVXJsPWFwcEJhc2VOb0ZpbGUrdGhpcy4kJHVybC5zdWJzdHIoMSl9LHRoaXMuJCRyZXdyaXRlPWZ1bmN0aW9uKHVybCl7dmFyIGFwcFVybCxwcmV2QXBwVXJsO3JldHVybihhcHBVcmw9YmVnaW5zV2l0aChhcHBCYXNlLHVybCkpIT09dW5kZWZpbmVkPyhwcmV2QXBwVXJsPWFwcFVybCwoYXBwVXJsPWJlZ2luc1dpdGgoYmFzZVByZWZpeCxhcHBVcmwpKSE9PXVuZGVmaW5lZD9hcHBCYXNlTm9GaWxlKyhiZWdpbnNXaXRoKCIvIixhcHBVcmwpfHxhcHBVcmwpOmFwcEJhc2UrcHJldkFwcFVybCk6KGFwcFVybD1iZWdpbnNXaXRoKGFwcEJhc2VOb0ZpbGUsdXJsKSkhPT11bmRlZmluZWQ/YXBwQmFzZU5vRmlsZSthcHBVcmw6YXBwQmFzZU5vRmlsZT09dXJsKyIvIj9hcHBCYXNlTm9GaWxlOnZvaWQgMH19ZnVuY3Rpb24gTG9jYXRpb25IYXNoYmFuZ1VybChhcHBCYXNlLGhhc2hQcmVmaXgpe3ZhciBhcHBCYXNlTm9GaWxlPXN0cmlwRmlsZShhcHBCYXNlKTtwYXJzZUFic29sdXRlVXJsKGFwcEJhc2UsdGhpcyxhcHBCYXNlKSx0aGlzLiQkcGFyc2U9ZnVuY3Rpb24odXJsKXtmdW5jdGlvbiByZW1vdmVXaW5kb3dzRHJpdmVOYW1lKHBhdGgsdXJsLGJhc2Upe3ZhciBmaXJzdFBhdGhTZWdtZW50TWF0Y2gsd2luZG93c0ZpbGVQYXRoRXhwPS9eXC9bQS1aXTooXC8uKikvO3JldHVybiAwPT09dXJsLmluZGV4T2YoYmFzZSkmJih1cmw9dXJsLnJlcGxhY2UoYmFzZSwiIikpLHdpbmRvd3NGaWxlUGF0aEV4cC5leGVjKHVybCk/cGF0aDooZmlyc3RQYXRoU2VnbWVudE1hdGNoPXdpbmRvd3NGaWxlUGF0aEV4cC5leGVjKHBhdGgpLGZpcnN0UGF0aFNlZ21lbnRNYXRjaD9maXJzdFBhdGhTZWdtZW50TWF0Y2hbMV06cGF0aCl9dmFyIHdpdGhvdXRCYXNlVXJsPWJlZ2luc1dpdGgoYXBwQmFzZSx1cmwpfHxiZWdpbnNXaXRoKGFwcEJhc2VOb0ZpbGUsdXJsKSx3aXRob3V0SGFzaFVybD0iIyI9PXdpdGhvdXRCYXNlVXJsLmNoYXJBdCgwKT9iZWdpbnNXaXRoKGhhc2hQcmVmaXgsd2l0aG91dEJhc2VVcmwpOnRoaXMuJCRodG1sNT93aXRob3V0QmFzZVVybDoiIjtpZighaXNTdHJpbmcod2l0aG91dEhhc2hVcmwpKXRocm93ICRsb2NhdGlvbk1pbkVycigiaWhzaHByZngiLCdJbnZhbGlkIHVybCAiezB9IiwgbWlzc2luZyBoYXNoIHByZWZpeCAiezF9Ii4nLHVybCxoYXNoUHJlZml4KTtwYXJzZUFwcFVybCh3aXRob3V0SGFzaFVybCx0aGlzLGFwcEJhc2UpLHRoaXMuJCRwYXRoPXJlbW92ZVdpbmRvd3NEcml2ZU5hbWUodGhpcy4kJHBhdGgsd2l0aG91dEhhc2hVcmwsYXBwQmFzZSksdGhpcy4kJGNvbXBvc2UoKX0sdGhpcy4kJGNvbXBvc2U9ZnVuY3Rpb24oKXt2YXIgc2VhcmNoPXRvS2V5VmFsdWUodGhpcy4kJHNlYXJjaCksaGFzaD10aGlzLiQkaGFzaD8iIyIrZW5jb2RlVXJpU2VnbWVudCh0aGlzLiQkaGFzaCk6IiI7dGhpcy4kJHVybD1lbmNvZGVQYXRoKHRoaXMuJCRwYXRoKSsoc2VhcmNoPyI/IitzZWFyY2g6IiIpK2hhc2gsdGhpcy4kJGFic1VybD1hcHBCYXNlKyh0aGlzLiQkdXJsP2hhc2hQcmVmaXgrdGhpcy4kJHVybDoiIil9LHRoaXMuJCRyZXdyaXRlPWZ1bmN0aW9uKHVybCl7cmV0dXJuIHN0cmlwSGFzaChhcHBCYXNlKT09c3RyaXBIYXNoKHVybCk/dXJsOnZvaWQgMH19ZnVuY3Rpb24gTG9jYXRpb25IYXNoYmFuZ0luSHRtbDVVcmwoYXBwQmFzZSxoYXNoUHJlZml4KXt0aGlzLiQkaHRtbDU9ITAsTG9jYXRpb25IYXNoYmFuZ1VybC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIGFwcEJhc2VOb0ZpbGU9c3RyaXBGaWxlKGFwcEJhc2UpO3RoaXMuJCRyZXdyaXRlPWZ1bmN0aW9uKHVybCl7dmFyIGFwcFVybDtyZXR1cm4gYXBwQmFzZT09c3RyaXBIYXNoKHVybCk/dXJsOihhcHBVcmw9YmVnaW5zV2l0aChhcHBCYXNlTm9GaWxlLHVybCkpP2FwcEJhc2UraGFzaFByZWZpeCthcHBVcmw6YXBwQmFzZU5vRmlsZT09PXVybCsiLyI/YXBwQmFzZU5vRmlsZTp2b2lkIDB9LHRoaXMuJCRjb21wb3NlPWZ1bmN0aW9uKCl7dmFyIHNlYXJjaD10b0tleVZhbHVlKHRoaXMuJCRzZWFyY2gpLGhhc2g9dGhpcy4kJGhhc2g/IiMiK2VuY29kZVVyaVNlZ21lbnQodGhpcy4kJGhhc2gpOiIiO3RoaXMuJCR1cmw9ZW5jb2RlUGF0aCh0aGlzLiQkcGF0aCkrKHNlYXJjaD8iPyIrc2VhcmNoOiIiKStoYXNoLHRoaXMuJCRhYnNVcmw9YXBwQmFzZStoYXNoUHJlZml4K3RoaXMuJCR1cmx9fWZ1bmN0aW9uIGxvY2F0aW9uR2V0dGVyKHByb3BlcnR5KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1twcm9wZXJ0eV19fWZ1bmN0aW9uIGxvY2F0aW9uR2V0dGVyU2V0dGVyKHByb3BlcnR5LHByZXByb2Nlc3Mpe3JldHVybiBmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGlzVW5kZWZpbmVkKHZhbHVlKT90aGlzW3Byb3BlcnR5XToodGhpc1twcm9wZXJ0eV09cHJlcHJvY2Vzcyh2YWx1ZSksdGhpcy4kJGNvbXBvc2UoKSx0aGlzKX19ZnVuY3Rpb24gJExvY2F0aW9uUHJvdmlkZXIoKXt2YXIgaGFzaFByZWZpeD0iIixodG1sNU1vZGU9ITE7dGhpcy5oYXNoUHJlZml4PWZ1bmN0aW9uKHByZWZpeCl7cmV0dXJuIGlzRGVmaW5lZChwcmVmaXgpPyhoYXNoUHJlZml4PXByZWZpeCx0aGlzKTpoYXNoUHJlZml4fSx0aGlzLmh0bWw1TW9kZT1mdW5jdGlvbihtb2RlKXtyZXR1cm4gaXNEZWZpbmVkKG1vZGUpPyhodG1sNU1vZGU9bW9kZSx0aGlzKTpodG1sNU1vZGV9LHRoaXMuJGdldD1bIiRyb290U2NvcGUiLCIkYnJvd3NlciIsIiRzbmlmZmVyIiwiJHJvb3RFbGVtZW50IixmdW5jdGlvbigkcm9vdFNjb3BlLCRicm93c2VyLCRzbmlmZmVyLCRyb290RWxlbWVudCl7ZnVuY3Rpb24gYWZ0ZXJMb2NhdGlvbkNoYW5nZShvbGRVcmwpeyRyb290U2NvcGUuJGJyb2FkY2FzdCgiJGxvY2F0aW9uQ2hhbmdlU3VjY2VzcyIsJGxvY2F0aW9uLmFic1VybCgpLG9sZFVybCl9dmFyICRsb2NhdGlvbixMb2NhdGlvbk1vZGUsYXBwQmFzZSxiYXNlSHJlZj0kYnJvd3Nlci5iYXNlSHJlZigpLGluaXRpYWxVcmw9JGJyb3dzZXIudXJsKCk7aHRtbDVNb2RlPyhhcHBCYXNlPXNlcnZlckJhc2UoaW5pdGlhbFVybCkrKGJhc2VIcmVmfHwiLyIpLExvY2F0aW9uTW9kZT0kc25pZmZlci5oaXN0b3J5P0xvY2F0aW9uSHRtbDVVcmw6TG9jYXRpb25IYXNoYmFuZ0luSHRtbDVVcmwpOihhcHBCYXNlPXN0cmlwSGFzaChpbml0aWFsVXJsKSxMb2NhdGlvbk1vZGU9TG9jYXRpb25IYXNoYmFuZ1VybCksJGxvY2F0aW9uPW5ldyBMb2NhdGlvbk1vZGUoYXBwQmFzZSwiIyIraGFzaFByZWZpeCksJGxvY2F0aW9uLiQkcGFyc2UoJGxvY2F0aW9uLiQkcmV3cml0ZShpbml0aWFsVXJsKSk7dmFyIElHTk9SRV9VUklfUkVHRVhQPS9eXHMqKGphdmFzY3JpcHR8bWFpbHRvKTovaTskcm9vdEVsZW1lbnQub24oImNsaWNrIixmdW5jdGlvbihldmVudCl7aWYoIWV2ZW50LmN0cmxLZXkmJiFldmVudC5tZXRhS2V5JiYyIT1ldmVudC53aGljaCl7Zm9yKHZhciBlbG09anFMaXRlKGV2ZW50LnRhcmdldCk7ImEiIT09bG93ZXJjYXNlKGVsbVswXS5ub2RlTmFtZSk7KWlmKGVsbVswXT09PSRyb290RWxlbWVudFswXXx8IShlbG09ZWxtLnBhcmVudCgpKVswXSlyZXR1cm47dmFyIGFic0hyZWY9ZWxtLnByb3AoImhyZWYiKTtpZihpc09iamVjdChhYnNIcmVmKSYmIltvYmplY3QgU1ZHQW5pbWF0ZWRTdHJpbmddIj09PWFic0hyZWYudG9TdHJpbmcoKSYmKGFic0hyZWY9dXJsUmVzb2x2ZShhYnNIcmVmLmFuaW1WYWwpLmhyZWYpLCFJR05PUkVfVVJJX1JFR0VYUC50ZXN0KGFic0hyZWYpKXtpZihMb2NhdGlvbk1vZGU9PT1Mb2NhdGlvbkhhc2hiYW5nSW5IdG1sNVVybCl7dmFyIGhyZWY9ZWxtLmF0dHIoImhyZWYiKXx8ZWxtLmF0dHIoInhsaW5rOmhyZWYiKTtpZihocmVmJiZocmVmLmluZGV4T2YoIjovLyIpPDApe3ZhciBwcmVmaXg9IiMiK2hhc2hQcmVmaXg7aWYoIi8iPT1ocmVmWzBdKWFic0hyZWY9YXBwQmFzZStwcmVmaXgraHJlZjtlbHNlIGlmKCIjIj09aHJlZlswXSlhYnNIcmVmPWFwcEJhc2UrcHJlZml4KygkbG9jYXRpb24ucGF0aCgpfHwiLyIpK2hyZWY7ZWxzZXt2YXIgc3RhY2s9JGxvY2F0aW9uLnBhdGgoKS5zcGxpdCgiLyIpLHBhcnRzPWhyZWYuc3BsaXQoIi8iKTsyIT09c3RhY2subGVuZ3RofHxzdGFja1sxXXx8KHN0YWNrLmxlbmd0aD0xKTtmb3IodmFyIGk9MDtpPHBhcnRzLmxlbmd0aDtpKyspIi4iIT1wYXJ0c1tpXSYmKCIuLiI9PXBhcnRzW2ldP3N0YWNrLnBvcCgpOnBhcnRzW2ldLmxlbmd0aCYmc3RhY2sucHVzaChwYXJ0c1tpXSkpO2Fic0hyZWY9YXBwQmFzZStwcmVmaXgrc3RhY2suam9pbigiLyIpfX19dmFyIHJld3JpdHRlblVybD0kbG9jYXRpb24uJCRyZXdyaXRlKGFic0hyZWYpO2Fic0hyZWYmJiFlbG0uYXR0cigidGFyZ2V0IikmJnJld3JpdHRlblVybCYmIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpJiYoZXZlbnQucHJldmVudERlZmF1bHQoKSxyZXdyaXR0ZW5VcmwhPSRicm93c2VyLnVybCgpJiYoJGxvY2F0aW9uLiQkcGFyc2UocmV3cml0dGVuVXJsKSwkcm9vdFNjb3BlLiRhcHBseSgpLHdpbmRvdy5hbmd1bGFyWyJmZi02ODQyMDgtcHJldmVudERlZmF1bHQiXT0hMCkpfX19KSwkbG9jYXRpb24uYWJzVXJsKCkhPWluaXRpYWxVcmwmJiRicm93c2VyLnVybCgkbG9jYXRpb24uYWJzVXJsKCksITApLCRicm93c2VyLm9uVXJsQ2hhbmdlKGZ1bmN0aW9uKG5ld1VybCl7JGxvY2F0aW9uLmFic1VybCgpIT1uZXdVcmwmJigkcm9vdFNjb3BlLiRldmFsQXN5bmMoZnVuY3Rpb24oKXt2YXIgb2xkVXJsPSRsb2NhdGlvbi5hYnNVcmwoKTskbG9jYXRpb24uJCRwYXJzZShuZXdVcmwpLCRyb290U2NvcGUuJGJyb2FkY2FzdCgiJGxvY2F0aW9uQ2hhbmdlU3RhcnQiLG5ld1VybCxvbGRVcmwpLmRlZmF1bHRQcmV2ZW50ZWQ/KCRsb2NhdGlvbi4kJHBhcnNlKG9sZFVybCksJGJyb3dzZXIudXJsKG9sZFVybCkpOmFmdGVyTG9jYXRpb25DaGFuZ2Uob2xkVXJsKX0pLCRyb290U2NvcGUuJCRwaGFzZXx8JHJvb3RTY29wZS4kZGlnZXN0KCkpfSk7dmFyIGNoYW5nZUNvdW50ZXI9MDtyZXR1cm4gJHJvb3RTY29wZS4kd2F0Y2goZnVuY3Rpb24oKXt2YXIgb2xkVXJsPSRicm93c2VyLnVybCgpLGN1cnJlbnRSZXBsYWNlPSRsb2NhdGlvbi4kJHJlcGxhY2U7cmV0dXJuIGNoYW5nZUNvdW50ZXImJm9sZFVybD09JGxvY2F0aW9uLmFic1VybCgpfHwoY2hhbmdlQ291bnRlcisrLCRyb290U2NvcGUuJGV2YWxBc3luYyhmdW5jdGlvbigpeyRyb290U2NvcGUuJGJyb2FkY2FzdCgiJGxvY2F0aW9uQ2hhbmdlU3RhcnQiLCRsb2NhdGlvbi5hYnNVcmwoKSxvbGRVcmwpLmRlZmF1bHRQcmV2ZW50ZWQ/JGxvY2F0aW9uLiQkcGFyc2Uob2xkVXJsKTooJGJyb3dzZXIudXJsKCRsb2NhdGlvbi5hYnNVcmwoKSxjdXJyZW50UmVwbGFjZSksYWZ0ZXJMb2NhdGlvbkNoYW5nZShvbGRVcmwpKX0pKSwkbG9jYXRpb24uJCRyZXBsYWNlPSExLGNoYW5nZUNvdW50ZXJ9KSwkbG9jYXRpb259XX1mdW5jdGlvbiAkTG9nUHJvdmlkZXIoKXt2YXIgZGVidWc9ITAsc2VsZj10aGlzO3RoaXMuZGVidWdFbmFibGVkPWZ1bmN0aW9uKGZsYWcpe3JldHVybiBpc0RlZmluZWQoZmxhZyk/KGRlYnVnPWZsYWcsdGhpcyk6ZGVidWd9LHRoaXMuJGdldD1bIiR3aW5kb3ciLGZ1bmN0aW9uKCR3aW5kb3cpe2Z1bmN0aW9uIGZvcm1hdEVycm9yKGFyZyl7cmV0dXJuIGFyZyBpbnN0YW5jZW9mIEVycm9yJiYoYXJnLnN0YWNrP2FyZz1hcmcubWVzc2FnZSYmLTE9PT1hcmcuc3RhY2suaW5kZXhPZihhcmcubWVzc2FnZSk/IkVycm9yOiAiK2FyZy5tZXNzYWdlKyJcbiIrYXJnLnN0YWNrOmFyZy5zdGFjazphcmcuc291cmNlVVJMJiYoYXJnPWFyZy5tZXNzYWdlKyJcbiIrYXJnLnNvdXJjZVVSTCsiOiIrYXJnLmxpbmUpKSxhcmd9ZnVuY3Rpb24gY29uc29sZUxvZyh0eXBlKXt2YXIgY29uc29sZT0kd2luZG93LmNvbnNvbGV8fHt9LGxvZ0ZuPWNvbnNvbGVbdHlwZV18fGNvbnNvbGUubG9nfHxub29wLGhhc0FwcGx5PSExO3RyeXtoYXNBcHBseT0hIWxvZ0ZuLmFwcGx5fWNhdGNoKGUpe31yZXR1cm4gaGFzQXBwbHk/ZnVuY3Rpb24oKXt2YXIgYXJncz1bXTtyZXR1cm4gZm9yRWFjaChhcmd1bWVudHMsZnVuY3Rpb24oYXJnKXthcmdzLnB1c2goZm9ybWF0RXJyb3IoYXJnKSl9KSxsb2dGbi5hcHBseShjb25zb2xlLGFyZ3MpfTpmdW5jdGlvbihhcmcxLGFyZzIpe2xvZ0ZuKGFyZzEsbnVsbD09YXJnMj8iIjphcmcyKX19cmV0dXJue2xvZzpjb25zb2xlTG9nKCJsb2ciKSxpbmZvOmNvbnNvbGVMb2coImluZm8iKSx3YXJuOmNvbnNvbGVMb2coIndhcm4iKSxlcnJvcjpjb25zb2xlTG9nKCJlcnJvciIpLGRlYnVnOmZ1bmN0aW9uKCl7dmFyIGZuPWNvbnNvbGVMb2coImRlYnVnIik7cmV0dXJuIGZ1bmN0aW9uKCl7ZGVidWcmJmZuLmFwcGx5KHNlbGYsYXJndW1lbnRzKX19KCl9fV19ZnVuY3Rpb24gZW5zdXJlU2FmZU1lbWJlck5hbWUobmFtZSxmdWxsRXhwcmVzc2lvbil7aWYoIl9fZGVmaW5lR2V0dGVyX18iPT09bmFtZXx8Il9fZGVmaW5lU2V0dGVyX18iPT09bmFtZXx8Il9fbG9va3VwR2V0dGVyX18iPT09bmFtZXx8Il9fbG9va3VwU2V0dGVyX18iPT09bmFtZXx8Il9fcHJvdG9fXyI9PT1uYW1lKXRocm93ICRwYXJzZU1pbkVycigiaXNlY2ZsZCIsIkF0dGVtcHRpbmcgdG8gYWNjZXNzIGEgZGlzYWxsb3dlZCBmaWVsZCBpbiBBbmd1bGFyIGV4cHJlc3Npb25zISBFeHByZXNzaW9uOiB7MH0iLGZ1bGxFeHByZXNzaW9uKTtyZXR1cm4gbmFtZX1mdW5jdGlvbiBlbnN1cmVTYWZlT2JqZWN0KG9iaixmdWxsRXhwcmVzc2lvbil7aWYob2JqKXtpZihvYmouY29uc3RydWN0b3I9PT1vYmopdGhyb3cgJHBhcnNlTWluRXJyKCJpc2VjZm4iLCJSZWZlcmVuY2luZyBGdW5jdGlvbiBpbiBBbmd1bGFyIGV4cHJlc3Npb25zIGlzIGRpc2FsbG93ZWQhIEV4cHJlc3Npb246IHswfSIsZnVsbEV4cHJlc3Npb24pO2lmKG9iai5kb2N1bWVudCYmb2JqLmxvY2F0aW9uJiZvYmouYWxlcnQmJm9iai5zZXRJbnRlcnZhbCl0aHJvdyAkcGFyc2VNaW5FcnIoImlzZWN3aW5kb3ciLCJSZWZlcmVuY2luZyB0aGUgV2luZG93IGluIEFuZ3VsYXIgZXhwcmVzc2lvbnMgaXMgZGlzYWxsb3dlZCEgRXhwcmVzc2lvbjogezB9IixmdWxsRXhwcmVzc2lvbik7aWYob2JqLmNoaWxkcmVuJiYob2JqLm5vZGVOYW1lfHxvYmoucHJvcCYmb2JqLmF0dHImJm9iai5maW5kKSl0aHJvdyAkcGFyc2VNaW5FcnIoImlzZWNkb20iLCJSZWZlcmVuY2luZyBET00gbm9kZXMgaW4gQW5ndWxhciBleHByZXNzaW9ucyBpcyBkaXNhbGxvd2VkISBFeHByZXNzaW9uOiB7MH0iLGZ1bGxFeHByZXNzaW9uKTtpZihvYmo9PT1PYmplY3QpdGhyb3cgJHBhcnNlTWluRXJyKCJpc2Vjb2JqIiwiUmVmZXJlbmNpbmcgT2JqZWN0IGluIEFuZ3VsYXIgZXhwcmVzc2lvbnMgaXMgZGlzYWxsb3dlZCEgRXhwcmVzc2lvbjogezB9IixmdWxsRXhwcmVzc2lvbil9cmV0dXJuIG9ian1mdW5jdGlvbiBlbnN1cmVTYWZlRnVuY3Rpb24ob2JqLGZ1bGxFeHByZXNzaW9uKXtpZihvYmope2lmKG9iai5jb25zdHJ1Y3Rvcj09PW9iail0aHJvdyAkcGFyc2VNaW5FcnIoImlzZWNmbiIsIlJlZmVyZW5jaW5nIEZ1bmN0aW9uIGluIEFuZ3VsYXIgZXhwcmVzc2lvbnMgaXMgZGlzYWxsb3dlZCEgRXhwcmVzc2lvbjogezB9IixmdWxsRXhwcmVzc2lvbik7aWYob2JqPT09Q0FMTHx8b2JqPT09QVBQTFl8fEJJTkQmJm9iaj09PUJJTkQpdGhyb3cgJHBhcnNlTWluRXJyKCJpc2VjZmYiLCJSZWZlcmVuY2luZyBjYWxsLCBhcHBseSBvciBiaW5kIGluIEFuZ3VsYXIgZXhwcmVzc2lvbnMgaXMgZGlzYWxsb3dlZCEgRXhwcmVzc2lvbjogezB9IixmdWxsRXhwcmVzc2lvbil9fWZ1bmN0aW9uIHNldHRlcihvYmoscGF0aCxzZXRWYWx1ZSxmdWxsRXhwLG9wdGlvbnMpe2Vuc3VyZVNhZmVPYmplY3Qob2JqLGZ1bGxFeHApLG9wdGlvbnM9b3B0aW9uc3x8e307Zm9yKHZhciBrZXksZWxlbWVudD1wYXRoLnNwbGl0KCIuIiksaT0wO2VsZW1lbnQubGVuZ3RoPjE7aSsrKXtrZXk9ZW5zdXJlU2FmZU1lbWJlck5hbWUoZWxlbWVudC5zaGlmdCgpLGZ1bGxFeHApO3ZhciBwcm9wZXJ0eU9iaj1lbnN1cmVTYWZlT2JqZWN0KG9ialtrZXldLGZ1bGxFeHApO3Byb3BlcnR5T2JqfHwocHJvcGVydHlPYmo9e30sb2JqW2tleV09cHJvcGVydHlPYmopLG9iaj1wcm9wZXJ0eU9iaixvYmoudGhlbiYmb3B0aW9ucy51bndyYXBQcm9taXNlcyYmKHByb21pc2VXYXJuaW5nKGZ1bGxFeHApLCIkJHYiaW4gb2JqfHwhZnVuY3Rpb24ocHJvbWlzZSl7cHJvbWlzZS50aGVuKGZ1bmN0aW9uKHZhbCl7cHJvbWlzZS4kJHY9dmFsfSl9KG9iaiksb2JqLiQkdj09PXVuZGVmaW5lZCYmKG9iai4kJHY9e30pLG9iaj1vYmouJCR2KX1yZXR1cm4ga2V5PWVuc3VyZVNhZmVNZW1iZXJOYW1lKGVsZW1lbnQuc2hpZnQoKSxmdWxsRXhwKSxlbnN1cmVTYWZlT2JqZWN0KG9ialtrZXldLGZ1bGxFeHApLG9ialtrZXldPXNldFZhbHVlLHNldFZhbHVlfWZ1bmN0aW9uIGNzcFNhZmVHZXR0ZXJGbihrZXkwLGtleTEsa2V5MixrZXkzLGtleTQsZnVsbEV4cCxvcHRpb25zKXtyZXR1cm4gZW5zdXJlU2FmZU1lbWJlck5hbWUoa2V5MCxmdWxsRXhwKSxlbnN1cmVTYWZlTWVtYmVyTmFtZShrZXkxLGZ1bGxFeHApLGVuc3VyZVNhZmVNZW1iZXJOYW1lKGtleTIsZnVsbEV4cCksZW5zdXJlU2FmZU1lbWJlck5hbWUoa2V5MyxmdWxsRXhwKSxlbnN1cmVTYWZlTWVtYmVyTmFtZShrZXk0LGZ1bGxFeHApLG9wdGlvbnMudW53cmFwUHJvbWlzZXM/ZnVuY3Rpb24oc2NvcGUsbG9jYWxzKXt2YXIgcHJvbWlzZSxwYXRoVmFsPWxvY2FscyYmbG9jYWxzLmhhc093blByb3BlcnR5KGtleTApP2xvY2FsczpzY29wZTtyZXR1cm4gbnVsbD09cGF0aFZhbD9wYXRoVmFsOihwYXRoVmFsPXBhdGhWYWxba2V5MF0scGF0aFZhbCYmcGF0aFZhbC50aGVuJiYocHJvbWlzZVdhcm5pbmcoZnVsbEV4cCksIiQkdiJpbiBwYXRoVmFsfHwocHJvbWlzZT1wYXRoVmFsLHByb21pc2UuJCR2PXVuZGVmaW5lZCxwcm9taXNlLnRoZW4oZnVuY3Rpb24odmFsKXtwcm9taXNlLiQkdj12YWx9KSkscGF0aFZhbD1wYXRoVmFsLiQkdiksa2V5MT9udWxsPT1wYXRoVmFsP3VuZGVmaW5lZDoocGF0aFZhbD1wYXRoVmFsW2tleTFdLHBhdGhWYWwmJnBhdGhWYWwudGhlbiYmKHByb21pc2VXYXJuaW5nKGZ1bGxFeHApLCIkJHYiaW4gcGF0aFZhbHx8KHByb21pc2U9cGF0aFZhbCxwcm9taXNlLiQkdj11bmRlZmluZWQscHJvbWlzZS50aGVuKGZ1bmN0aW9uKHZhbCl7cHJvbWlzZS4kJHY9dmFsfSkpLHBhdGhWYWw9cGF0aFZhbC4kJHYpLGtleTI/bnVsbD09cGF0aFZhbD91bmRlZmluZWQ6KHBhdGhWYWw9cGF0aFZhbFtrZXkyXSxwYXRoVmFsJiZwYXRoVmFsLnRoZW4mJihwcm9taXNlV2FybmluZyhmdWxsRXhwKSwiJCR2ImluIHBhdGhWYWx8fChwcm9taXNlPXBhdGhWYWwscHJvbWlzZS4kJHY9dW5kZWZpbmVkLHByb21pc2UudGhlbihmdW5jdGlvbih2YWwpe3Byb21pc2UuJCR2PXZhbH0pKSxwYXRoVmFsPXBhdGhWYWwuJCR2KSxrZXkzP251bGw9PXBhdGhWYWw/dW5kZWZpbmVkOihwYXRoVmFsPXBhdGhWYWxba2V5M10scGF0aFZhbCYmcGF0aFZhbC50aGVuJiYocHJvbWlzZVdhcm5pbmcoZnVsbEV4cCksIiQkdiJpbiBwYXRoVmFsfHwocHJvbWlzZT1wYXRoVmFsLHByb21pc2UuJCR2PXVuZGVmaW5lZCxwcm9taXNlLnRoZW4oZnVuY3Rpb24odmFsKXtwcm9taXNlLiQkdj12YWx9KSkscGF0aFZhbD1wYXRoVmFsLiQkdiksa2V5ND9udWxsPT1wYXRoVmFsP3VuZGVmaW5lZDoocGF0aFZhbD1wYXRoVmFsW2tleTRdLHBhdGhWYWwmJnBhdGhWYWwudGhlbiYmKHByb21pc2VXYXJuaW5nKGZ1bGxFeHApLCIkJHYiaW4gcGF0aFZhbHx8KHByb21pc2U9cGF0aFZhbCxwcm9taXNlLiQkdj11bmRlZmluZWQscHJvbWlzZS50aGVuKGZ1bmN0aW9uKHZhbCl7cHJvbWlzZS4kJHY9dmFsfSkpLHBhdGhWYWw9cGF0aFZhbC4kJHYpLHBhdGhWYWwpOnBhdGhWYWwpOnBhdGhWYWwpOnBhdGhWYWwpOnBhdGhWYWwpfTpmdW5jdGlvbihzY29wZSxsb2NhbHMpe3ZhciBwYXRoVmFsPWxvY2FscyYmbG9jYWxzLmhhc093blByb3BlcnR5KGtleTApP2xvY2FsczpzY29wZTtyZXR1cm4gbnVsbD09cGF0aFZhbD9wYXRoVmFsOihwYXRoVmFsPXBhdGhWYWxba2V5MF0sa2V5MT9udWxsPT1wYXRoVmFsP3VuZGVmaW5lZDoocGF0aFZhbD1wYXRoVmFsW2tleTFdLGtleTI/bnVsbD09cGF0aFZhbD91bmRlZmluZWQ6KHBhdGhWYWw9cGF0aFZhbFtrZXkyXSxrZXkzP251bGw9PXBhdGhWYWw/dW5kZWZpbmVkOihwYXRoVmFsPXBhdGhWYWxba2V5M10sa2V5ND9udWxsPT1wYXRoVmFsP3VuZGVmaW5lZDpwYXRoVmFsPXBhdGhWYWxba2V5NF06cGF0aFZhbCk6cGF0aFZhbCk6cGF0aFZhbCk6cGF0aFZhbCl9fWZ1bmN0aW9uIGdldHRlckZuKHBhdGgsb3B0aW9ucyxmdWxsRXhwKXtpZihnZXR0ZXJGbkNhY2hlLmhhc093blByb3BlcnR5KHBhdGgpKXJldHVybiBnZXR0ZXJGbkNhY2hlW3BhdGhdO3ZhciBmbixwYXRoS2V5cz1wYXRoLnNwbGl0KCIuIikscGF0aEtleXNMZW5ndGg9cGF0aEtleXMubGVuZ3RoO2lmKG9wdGlvbnMuY3NwKWZuPTY+cGF0aEtleXNMZW5ndGg/Y3NwU2FmZUdldHRlckZuKHBhdGhLZXlzWzBdLHBhdGhLZXlzWzFdLHBhdGhLZXlzWzJdLHBhdGhLZXlzWzNdLHBhdGhLZXlzWzRdLGZ1bGxFeHAsb3B0aW9ucyk6ZnVuY3Rpb24oc2NvcGUsbG9jYWxzKXt2YXIgdmFsLGk9MDtkbyB2YWw9Y3NwU2FmZUdldHRlckZuKHBhdGhLZXlzW2krK10scGF0aEtleXNbaSsrXSxwYXRoS2V5c1tpKytdLHBhdGhLZXlzW2krK10scGF0aEtleXNbaSsrXSxmdWxsRXhwLG9wdGlvbnMpKHNjb3BlLGxvY2FscyksbG9jYWxzPXVuZGVmaW5lZCxzY29wZT12YWw7d2hpbGUocGF0aEtleXNMZW5ndGg+aSk7cmV0dXJuIHZhbH07ZWxzZXt2YXIgY29kZT0idmFyIHA7XG4iO2ZvckVhY2gocGF0aEtleXMsZnVuY3Rpb24oa2V5LGluZGV4KXtlbnN1cmVTYWZlTWVtYmVyTmFtZShrZXksZnVsbEV4cCksY29kZSs9ImlmKHMgPT0gbnVsbCkgcmV0dXJuIHVuZGVmaW5lZDtcbnM9IisoaW5kZXg/InMiOicoKGsmJmsuaGFzT3duUHJvcGVydHkoIicra2V5KyciKSk/azpzKScpKydbIicra2V5KyciXTtcbicrKG9wdGlvbnMudW53cmFwUHJvbWlzZXM/J2lmIChzICYmIHMudGhlbikge1xuIHB3KCInK2Z1bGxFeHAucmVwbGFjZSgvKFsiXHJcbl0pL2csIlxcJDEiKSsnIik7XG4gaWYgKCEoIiQkdiIgaW4gcykpIHtcbiBwPXM7XG4gcC4kJHYgPSB1bmRlZmluZWQ7XG4gcC50aGVuKGZ1bmN0aW9uKHYpIHtwLiQkdj12O30pO1xufVxuIHM9cy4kJHZcbn1cbic6IiIpfSksY29kZSs9InJldHVybiBzOyI7dmFyIGV2YWxlZEZuR2V0dGVyPW5ldyBGdW5jdGlvbigicyIsImsiLCJwdyIsY29kZSk7ZXZhbGVkRm5HZXR0ZXIudG9TdHJpbmc9dmFsdWVGbihjb2RlKSxmbj1vcHRpb25zLnVud3JhcFByb21pc2VzP2Z1bmN0aW9uKHNjb3BlLGxvY2Fscyl7cmV0dXJuIGV2YWxlZEZuR2V0dGVyKHNjb3BlLGxvY2Fscyxwcm9taXNlV2FybmluZyl9OmV2YWxlZEZuR2V0dGVyfXJldHVybiJoYXNPd25Qcm9wZXJ0eSIhPT1wYXRoJiYoZ2V0dGVyRm5DYWNoZVtwYXRoXT1mbiksZm59ZnVuY3Rpb24gJFBhcnNlUHJvdmlkZXIoKXt2YXIgY2FjaGU9e30sJHBhcnNlT3B0aW9ucz17Y3NwOiExLHVud3JhcFByb21pc2VzOiExLGxvZ1Byb21pc2VXYXJuaW5nczohMH07dGhpcy51bndyYXBQcm9taXNlcz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGlzRGVmaW5lZCh2YWx1ZSk/KCRwYXJzZU9wdGlvbnMudW53cmFwUHJvbWlzZXM9ISF2YWx1ZSx0aGlzKTokcGFyc2VPcHRpb25zLnVud3JhcFByb21pc2VzfSx0aGlzLmxvZ1Byb21pc2VXYXJuaW5ncz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGlzRGVmaW5lZCh2YWx1ZSk/KCRwYXJzZU9wdGlvbnMubG9nUHJvbWlzZVdhcm5pbmdzPXZhbHVlLHRoaXMpOiRwYXJzZU9wdGlvbnMubG9nUHJvbWlzZVdhcm5pbmdzfSx0aGlzLiRnZXQ9WyIkZmlsdGVyIiwiJHNuaWZmZXIiLCIkbG9nIixmdW5jdGlvbigkZmlsdGVyLCRzbmlmZmVyLCRsb2cpe3JldHVybiAkcGFyc2VPcHRpb25zLmNzcD0kc25pZmZlci5jc3AscHJvbWlzZVdhcm5pbmc9ZnVuY3Rpb24oZnVsbEV4cCl7JHBhcnNlT3B0aW9ucy5sb2dQcm9taXNlV2FybmluZ3MmJiFwcm9taXNlV2FybmluZ0NhY2hlLmhhc093blByb3BlcnR5KGZ1bGxFeHApJiYocHJvbWlzZVdhcm5pbmdDYWNoZVtmdWxsRXhwXT0hMCwkbG9nLndhcm4oIlskcGFyc2VdIFByb21pc2UgZm91bmQgaW4gdGhlIGV4cHJlc3Npb24gYCIrZnVsbEV4cCsiYC4gQXV0b21hdGljIHVud3JhcHBpbmcgb2YgcHJvbWlzZXMgaW4gQW5ndWxhciBleHByZXNzaW9ucyBpcyBkZXByZWNhdGVkLiIpKX0sZnVuY3Rpb24oZXhwKXt2YXIgcGFyc2VkRXhwcmVzc2lvbjtzd2l0Y2godHlwZW9mIGV4cCl7Y2FzZSJzdHJpbmciOmlmKGNhY2hlLmhhc093blByb3BlcnR5KGV4cCkpcmV0dXJuIGNhY2hlW2V4cF07dmFyIGxleGVyPW5ldyBMZXhlcigkcGFyc2VPcHRpb25zKSxwYXJzZXI9bmV3IFBhcnNlcihsZXhlciwkZmlsdGVyLCRwYXJzZU9wdGlvbnMpO3JldHVybiBwYXJzZWRFeHByZXNzaW9uPXBhcnNlci5wYXJzZShleHApLCJoYXNPd25Qcm9wZXJ0eSIhPT1leHAmJihjYWNoZVtleHBdPXBhcnNlZEV4cHJlc3Npb24pLHBhcnNlZEV4cHJlc3Npb247Y2FzZSJmdW5jdGlvbiI6cmV0dXJuIGV4cDtkZWZhdWx0OnJldHVybiBub29wfX19XX1mdW5jdGlvbiAkUVByb3ZpZGVyKCl7dGhpcy4kZ2V0PVsiJHJvb3RTY29wZSIsIiRleGNlcHRpb25IYW5kbGVyIixmdW5jdGlvbigkcm9vdFNjb3BlLCRleGNlcHRpb25IYW5kbGVyKXtyZXR1cm4gcUZhY3RvcnkoZnVuY3Rpb24oY2FsbGJhY2speyRyb290U2NvcGUuJGV2YWxBc3luYyhjYWxsYmFjayl9LCRleGNlcHRpb25IYW5kbGVyKX1dfWZ1bmN0aW9uIHFGYWN0b3J5KG5leHRUaWNrLGV4Y2VwdGlvbkhhbmRsZXIpe2Z1bmN0aW9uIGRlZmF1bHRDYWxsYmFjayh2YWx1ZSl7cmV0dXJuIHZhbHVlfWZ1bmN0aW9uIGRlZmF1bHRFcnJiYWNrKHJlYXNvbil7cmV0dXJuIHJlamVjdChyZWFzb24pfWZ1bmN0aW9uIGFsbChwcm9taXNlcyl7dmFyIGRlZmVycmVkPWRlZmVyKCksY291bnRlcj0wLHJlc3VsdHM9aXNBcnJheShwcm9taXNlcyk/W106e307cmV0dXJuIGZvckVhY2gocHJvbWlzZXMsZnVuY3Rpb24ocHJvbWlzZSxrZXkpe2NvdW50ZXIrKyxyZWYocHJvbWlzZSkudGhlbihmdW5jdGlvbih2YWx1ZSl7cmVzdWx0cy5oYXNPd25Qcm9wZXJ0eShrZXkpfHwocmVzdWx0c1trZXldPXZhbHVlLC0tY291bnRlcnx8ZGVmZXJyZWQucmVzb2x2ZShyZXN1bHRzKSl9LGZ1bmN0aW9uKHJlYXNvbil7cmVzdWx0cy5oYXNPd25Qcm9wZXJ0eShrZXkpfHxkZWZlcnJlZC5yZWplY3QocmVhc29uKX0pfSksMD09PWNvdW50ZXImJmRlZmVycmVkLnJlc29sdmUocmVzdWx0cyksZGVmZXJyZWQucHJvbWlzZX12YXIgZGVmZXI9ZnVuY3Rpb24oKXt2YXIgdmFsdWUsZGVmZXJyZWQscGVuZGluZz1bXTtyZXR1cm4gZGVmZXJyZWQ9e3Jlc29sdmU6ZnVuY3Rpb24odmFsKXtpZihwZW5kaW5nKXt2YXIgY2FsbGJhY2tzPXBlbmRpbmc7cGVuZGluZz11bmRlZmluZWQsdmFsdWU9cmVmKHZhbCksY2FsbGJhY2tzLmxlbmd0aCYmbmV4dFRpY2soZnVuY3Rpb24oKXtmb3IodmFyIGNhbGxiYWNrLGk9MCxpaT1jYWxsYmFja3MubGVuZ3RoO2lpPmk7aSsrKWNhbGxiYWNrPWNhbGxiYWNrc1tpXSx2YWx1ZS50aGVuKGNhbGxiYWNrWzBdLGNhbGxiYWNrWzFdLGNhbGxiYWNrWzJdKX0pfX0scmVqZWN0OmZ1bmN0aW9uKHJlYXNvbil7ZGVmZXJyZWQucmVzb2x2ZShjcmVhdGVJbnRlcm5hbFJlamVjdGVkUHJvbWlzZShyZWFzb24pKX0sbm90aWZ5OmZ1bmN0aW9uKHByb2dyZXNzKXtpZihwZW5kaW5nKXt2YXIgY2FsbGJhY2tzPXBlbmRpbmc7cGVuZGluZy5sZW5ndGgmJm5leHRUaWNrKGZ1bmN0aW9uKCl7Zm9yKHZhciBjYWxsYmFjayxpPTAsaWk9Y2FsbGJhY2tzLmxlbmd0aDtpaT5pO2krKyljYWxsYmFjaz1jYWxsYmFja3NbaV0sY2FsbGJhY2tbMl0ocHJvZ3Jlc3MpfSl9fSxwcm9taXNlOnt0aGVuOmZ1bmN0aW9uKGNhbGxiYWNrLGVycmJhY2sscHJvZ3Jlc3NiYWNrKXt2YXIgcmVzdWx0PWRlZmVyKCksd3JhcHBlZENhbGxiYWNrPWZ1bmN0aW9uKHZhbHVlKXt0cnl7cmVzdWx0LnJlc29sdmUoKGlzRnVuY3Rpb24oY2FsbGJhY2spP2NhbGxiYWNrOmRlZmF1bHRDYWxsYmFjaykodmFsdWUpKQp9Y2F0Y2goZSl7cmVzdWx0LnJlamVjdChlKSxleGNlcHRpb25IYW5kbGVyKGUpfX0sd3JhcHBlZEVycmJhY2s9ZnVuY3Rpb24ocmVhc29uKXt0cnl7cmVzdWx0LnJlc29sdmUoKGlzRnVuY3Rpb24oZXJyYmFjayk/ZXJyYmFjazpkZWZhdWx0RXJyYmFjaykocmVhc29uKSl9Y2F0Y2goZSl7cmVzdWx0LnJlamVjdChlKSxleGNlcHRpb25IYW5kbGVyKGUpfX0sd3JhcHBlZFByb2dyZXNzYmFjaz1mdW5jdGlvbihwcm9ncmVzcyl7dHJ5e3Jlc3VsdC5ub3RpZnkoKGlzRnVuY3Rpb24ocHJvZ3Jlc3NiYWNrKT9wcm9ncmVzc2JhY2s6ZGVmYXVsdENhbGxiYWNrKShwcm9ncmVzcykpfWNhdGNoKGUpe2V4Y2VwdGlvbkhhbmRsZXIoZSl9fTtyZXR1cm4gcGVuZGluZz9wZW5kaW5nLnB1c2goW3dyYXBwZWRDYWxsYmFjayx3cmFwcGVkRXJyYmFjayx3cmFwcGVkUHJvZ3Jlc3NiYWNrXSk6dmFsdWUudGhlbih3cmFwcGVkQ2FsbGJhY2ssd3JhcHBlZEVycmJhY2ssd3JhcHBlZFByb2dyZXNzYmFjaykscmVzdWx0LnByb21pc2V9LCJjYXRjaCI6ZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiB0aGlzLnRoZW4obnVsbCxjYWxsYmFjayl9LCJmaW5hbGx5IjpmdW5jdGlvbihjYWxsYmFjayl7ZnVuY3Rpb24gbWFrZVByb21pc2UodmFsdWUscmVzb2x2ZWQpe3ZhciByZXN1bHQ9ZGVmZXIoKTtyZXR1cm4gcmVzb2x2ZWQ/cmVzdWx0LnJlc29sdmUodmFsdWUpOnJlc3VsdC5yZWplY3QodmFsdWUpLHJlc3VsdC5wcm9taXNlfWZ1bmN0aW9uIGhhbmRsZUNhbGxiYWNrKHZhbHVlLGlzUmVzb2x2ZWQpe3ZhciBjYWxsYmFja091dHB1dD1udWxsO3RyeXtjYWxsYmFja091dHB1dD0oY2FsbGJhY2t8fGRlZmF1bHRDYWxsYmFjaykoKX1jYXRjaChlKXtyZXR1cm4gbWFrZVByb21pc2UoZSwhMSl9cmV0dXJuIGlzUHJvbWlzZUxpa2UoY2FsbGJhY2tPdXRwdXQpP2NhbGxiYWNrT3V0cHV0LnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbWFrZVByb21pc2UodmFsdWUsaXNSZXNvbHZlZCl9LGZ1bmN0aW9uKGVycm9yKXtyZXR1cm4gbWFrZVByb21pc2UoZXJyb3IsITEpfSk6bWFrZVByb21pc2UodmFsdWUsaXNSZXNvbHZlZCl9cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGhhbmRsZUNhbGxiYWNrKHZhbHVlLCEwKX0sZnVuY3Rpb24oZXJyb3Ipe3JldHVybiBoYW5kbGVDYWxsYmFjayhlcnJvciwhMSl9KX19fX0scmVmPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gaXNQcm9taXNlTGlrZSh2YWx1ZSk/dmFsdWU6e3RoZW46ZnVuY3Rpb24oY2FsbGJhY2spe3ZhciByZXN1bHQ9ZGVmZXIoKTtyZXR1cm4gbmV4dFRpY2soZnVuY3Rpb24oKXtyZXN1bHQucmVzb2x2ZShjYWxsYmFjayh2YWx1ZSkpfSkscmVzdWx0LnByb21pc2V9fX0scmVqZWN0PWZ1bmN0aW9uKHJlYXNvbil7dmFyIHJlc3VsdD1kZWZlcigpO3JldHVybiByZXN1bHQucmVqZWN0KHJlYXNvbikscmVzdWx0LnByb21pc2V9LGNyZWF0ZUludGVybmFsUmVqZWN0ZWRQcm9taXNlPWZ1bmN0aW9uKHJlYXNvbil7cmV0dXJue3RoZW46ZnVuY3Rpb24oY2FsbGJhY2ssZXJyYmFjayl7dmFyIHJlc3VsdD1kZWZlcigpO3JldHVybiBuZXh0VGljayhmdW5jdGlvbigpe3RyeXtyZXN1bHQucmVzb2x2ZSgoaXNGdW5jdGlvbihlcnJiYWNrKT9lcnJiYWNrOmRlZmF1bHRFcnJiYWNrKShyZWFzb24pKX1jYXRjaChlKXtyZXN1bHQucmVqZWN0KGUpLGV4Y2VwdGlvbkhhbmRsZXIoZSl9fSkscmVzdWx0LnByb21pc2V9fX0sd2hlbj1mdW5jdGlvbih2YWx1ZSxjYWxsYmFjayxlcnJiYWNrLHByb2dyZXNzYmFjayl7dmFyIGRvbmUscmVzdWx0PWRlZmVyKCksd3JhcHBlZENhbGxiYWNrPWZ1bmN0aW9uKHZhbHVlKXt0cnl7cmV0dXJuKGlzRnVuY3Rpb24oY2FsbGJhY2spP2NhbGxiYWNrOmRlZmF1bHRDYWxsYmFjaykodmFsdWUpfWNhdGNoKGUpe3JldHVybiBleGNlcHRpb25IYW5kbGVyKGUpLHJlamVjdChlKX19LHdyYXBwZWRFcnJiYWNrPWZ1bmN0aW9uKHJlYXNvbil7dHJ5e3JldHVybihpc0Z1bmN0aW9uKGVycmJhY2spP2VycmJhY2s6ZGVmYXVsdEVycmJhY2spKHJlYXNvbil9Y2F0Y2goZSl7cmV0dXJuIGV4Y2VwdGlvbkhhbmRsZXIoZSkscmVqZWN0KGUpfX0sd3JhcHBlZFByb2dyZXNzYmFjaz1mdW5jdGlvbihwcm9ncmVzcyl7dHJ5e3JldHVybihpc0Z1bmN0aW9uKHByb2dyZXNzYmFjayk/cHJvZ3Jlc3NiYWNrOmRlZmF1bHRDYWxsYmFjaykocHJvZ3Jlc3MpfWNhdGNoKGUpe2V4Y2VwdGlvbkhhbmRsZXIoZSl9fTtyZXR1cm4gbmV4dFRpY2soZnVuY3Rpb24oKXtyZWYodmFsdWUpLnRoZW4oZnVuY3Rpb24odmFsdWUpe2RvbmV8fChkb25lPSEwLHJlc3VsdC5yZXNvbHZlKHJlZih2YWx1ZSkudGhlbih3cmFwcGVkQ2FsbGJhY2ssd3JhcHBlZEVycmJhY2ssd3JhcHBlZFByb2dyZXNzYmFjaykpKX0sZnVuY3Rpb24ocmVhc29uKXtkb25lfHwoZG9uZT0hMCxyZXN1bHQucmVzb2x2ZSh3cmFwcGVkRXJyYmFjayhyZWFzb24pKSl9LGZ1bmN0aW9uKHByb2dyZXNzKXtkb25lfHxyZXN1bHQubm90aWZ5KHdyYXBwZWRQcm9ncmVzc2JhY2socHJvZ3Jlc3MpKX0pfSkscmVzdWx0LnByb21pc2V9O3JldHVybntkZWZlcjpkZWZlcixyZWplY3Q6cmVqZWN0LHdoZW46d2hlbixhbGw6YWxsfX1mdW5jdGlvbiAkJFJBRlByb3ZpZGVyKCl7dGhpcy4kZ2V0PVsiJHdpbmRvdyIsIiR0aW1lb3V0IixmdW5jdGlvbigkd2luZG93LCR0aW1lb3V0KXt2YXIgcmVxdWVzdEFuaW1hdGlvbkZyYW1lPSR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHwkd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8JHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUsY2FuY2VsQW5pbWF0aW9uRnJhbWU9JHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZXx8JHdpbmRvdy53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZXx8JHdpbmRvdy5tb3pDYW5jZWxBbmltYXRpb25GcmFtZXx8JHdpbmRvdy53ZWJraXRDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUscmFmU3VwcG9ydGVkPSEhcmVxdWVzdEFuaW1hdGlvbkZyYW1lLHJhZj1yYWZTdXBwb3J0ZWQ/ZnVuY3Rpb24oZm4pe3ZhciBpZD1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZm4pO3JldHVybiBmdW5jdGlvbigpe2NhbmNlbEFuaW1hdGlvbkZyYW1lKGlkKX19OmZ1bmN0aW9uKGZuKXt2YXIgdGltZXI9JHRpbWVvdXQoZm4sMTYuNjYsITEpO3JldHVybiBmdW5jdGlvbigpeyR0aW1lb3V0LmNhbmNlbCh0aW1lcil9fTtyZXR1cm4gcmFmLnN1cHBvcnRlZD1yYWZTdXBwb3J0ZWQscmFmfV19ZnVuY3Rpb24gJFJvb3RTY29wZVByb3ZpZGVyKCl7dmFyIFRUTD0xMCwkcm9vdFNjb3BlTWluRXJyPW1pbkVycigiJHJvb3RTY29wZSIpLGxhc3REaXJ0eVdhdGNoPW51bGw7dGhpcy5kaWdlc3RUdGw9ZnVuY3Rpb24odmFsdWUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoJiYoVFRMPXZhbHVlKSxUVEx9LHRoaXMuJGdldD1bIiRpbmplY3RvciIsIiRleGNlcHRpb25IYW5kbGVyIiwiJHBhcnNlIiwiJGJyb3dzZXIiLGZ1bmN0aW9uKCRpbmplY3RvciwkZXhjZXB0aW9uSGFuZGxlciwkcGFyc2UsJGJyb3dzZXIpe2Z1bmN0aW9uIFNjb3BlKCl7dGhpcy4kaWQ9bmV4dFVpZCgpLHRoaXMuJCRwaGFzZT10aGlzLiRwYXJlbnQ9dGhpcy4kJHdhdGNoZXJzPXRoaXMuJCRuZXh0U2libGluZz10aGlzLiQkcHJldlNpYmxpbmc9dGhpcy4kJGNoaWxkSGVhZD10aGlzLiQkY2hpbGRUYWlsPW51bGwsdGhpc1sidGhpcyJdPXRoaXMuJHJvb3Q9dGhpcyx0aGlzLiQkZGVzdHJveWVkPSExLHRoaXMuJCRhc3luY1F1ZXVlPVtdLHRoaXMuJCRwb3N0RGlnZXN0UXVldWU9W10sdGhpcy4kJGxpc3RlbmVycz17fSx0aGlzLiQkbGlzdGVuZXJDb3VudD17fSx0aGlzLiQkaXNvbGF0ZUJpbmRpbmdzPXt9fWZ1bmN0aW9uIGJlZ2luUGhhc2UocGhhc2Upe2lmKCRyb290U2NvcGUuJCRwaGFzZSl0aHJvdyAkcm9vdFNjb3BlTWluRXJyKCJpbnByb2ciLCJ7MH0gYWxyZWFkeSBpbiBwcm9ncmVzcyIsJHJvb3RTY29wZS4kJHBoYXNlKTskcm9vdFNjb3BlLiQkcGhhc2U9cGhhc2V9ZnVuY3Rpb24gY2xlYXJQaGFzZSgpeyRyb290U2NvcGUuJCRwaGFzZT1udWxsfWZ1bmN0aW9uIGNvbXBpbGVUb0ZuKGV4cCxuYW1lKXt2YXIgZm49JHBhcnNlKGV4cCk7cmV0dXJuIGFzc2VydEFyZ0ZuKGZuLG5hbWUpLGZufWZ1bmN0aW9uIGRlY3JlbWVudExpc3RlbmVyQ291bnQoY3VycmVudCxjb3VudCxuYW1lKXtkbyBjdXJyZW50LiQkbGlzdGVuZXJDb3VudFtuYW1lXS09Y291bnQsMD09PWN1cnJlbnQuJCRsaXN0ZW5lckNvdW50W25hbWVdJiZkZWxldGUgY3VycmVudC4kJGxpc3RlbmVyQ291bnRbbmFtZV07d2hpbGUoY3VycmVudD1jdXJyZW50LiRwYXJlbnQpfWZ1bmN0aW9uIGluaXRXYXRjaFZhbCgpe31TY29wZS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlNjb3BlLCRuZXc6ZnVuY3Rpb24oaXNvbGF0ZSl7dmFyIGNoaWxkO3JldHVybiBpc29sYXRlPyhjaGlsZD1uZXcgU2NvcGUsY2hpbGQuJHJvb3Q9dGhpcy4kcm9vdCxjaGlsZC4kJGFzeW5jUXVldWU9dGhpcy4kJGFzeW5jUXVldWUsY2hpbGQuJCRwb3N0RGlnZXN0UXVldWU9dGhpcy4kJHBvc3REaWdlc3RRdWV1ZSk6KHRoaXMuJCRjaGlsZFNjb3BlQ2xhc3N8fCh0aGlzLiQkY2hpbGRTY29wZUNsYXNzPWZ1bmN0aW9uKCl7dGhpcy4kJHdhdGNoZXJzPXRoaXMuJCRuZXh0U2libGluZz10aGlzLiQkY2hpbGRIZWFkPXRoaXMuJCRjaGlsZFRhaWw9bnVsbCx0aGlzLiQkbGlzdGVuZXJzPXt9LHRoaXMuJCRsaXN0ZW5lckNvdW50PXt9LHRoaXMuJGlkPW5leHRVaWQoKSx0aGlzLiQkY2hpbGRTY29wZUNsYXNzPW51bGx9LHRoaXMuJCRjaGlsZFNjb3BlQ2xhc3MucHJvdG90eXBlPXRoaXMpLGNoaWxkPW5ldyB0aGlzLiQkY2hpbGRTY29wZUNsYXNzKSxjaGlsZFsidGhpcyJdPWNoaWxkLGNoaWxkLiRwYXJlbnQ9dGhpcyxjaGlsZC4kJHByZXZTaWJsaW5nPXRoaXMuJCRjaGlsZFRhaWwsdGhpcy4kJGNoaWxkSGVhZD8odGhpcy4kJGNoaWxkVGFpbC4kJG5leHRTaWJsaW5nPWNoaWxkLHRoaXMuJCRjaGlsZFRhaWw9Y2hpbGQpOnRoaXMuJCRjaGlsZEhlYWQ9dGhpcy4kJGNoaWxkVGFpbD1jaGlsZCxjaGlsZH0sJHdhdGNoOmZ1bmN0aW9uKHdhdGNoRXhwLGxpc3RlbmVyLG9iamVjdEVxdWFsaXR5KXt2YXIgc2NvcGU9dGhpcyxnZXQ9Y29tcGlsZVRvRm4od2F0Y2hFeHAsIndhdGNoIiksYXJyYXk9c2NvcGUuJCR3YXRjaGVycyx3YXRjaGVyPXtmbjpsaXN0ZW5lcixsYXN0OmluaXRXYXRjaFZhbCxnZXQ6Z2V0LGV4cDp3YXRjaEV4cCxlcTohIW9iamVjdEVxdWFsaXR5fTtpZihsYXN0RGlydHlXYXRjaD1udWxsLCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSl7dmFyIGxpc3RlbkZuPWNvbXBpbGVUb0ZuKGxpc3RlbmVyfHxub29wLCJsaXN0ZW5lciIpO3dhdGNoZXIuZm49ZnVuY3Rpb24obmV3VmFsLG9sZFZhbCxzY29wZSl7bGlzdGVuRm4oc2NvcGUpfX1pZigic3RyaW5nIj09dHlwZW9mIHdhdGNoRXhwJiZnZXQuY29uc3RhbnQpe3ZhciBvcmlnaW5hbEZuPXdhdGNoZXIuZm47d2F0Y2hlci5mbj1mdW5jdGlvbihuZXdWYWwsb2xkVmFsLHNjb3BlKXtvcmlnaW5hbEZuLmNhbGwodGhpcyxuZXdWYWwsb2xkVmFsLHNjb3BlKSxhcnJheVJlbW92ZShhcnJheSx3YXRjaGVyKX19cmV0dXJuIGFycmF5fHwoYXJyYXk9c2NvcGUuJCR3YXRjaGVycz1bXSksYXJyYXkudW5zaGlmdCh3YXRjaGVyKSxmdW5jdGlvbigpe2FycmF5UmVtb3ZlKGFycmF5LHdhdGNoZXIpLGxhc3REaXJ0eVdhdGNoPW51bGx9fSwkd2F0Y2hDb2xsZWN0aW9uOmZ1bmN0aW9uKG9iaixsaXN0ZW5lcil7ZnVuY3Rpb24gJHdhdGNoQ29sbGVjdGlvbldhdGNoKCl7bmV3VmFsdWU9b2JqR2V0dGVyKHNlbGYpO3ZhciBuZXdMZW5ndGgsa2V5LGJvdGhOYU47aWYoaXNPYmplY3QobmV3VmFsdWUpKWlmKGlzQXJyYXlMaWtlKG5ld1ZhbHVlKSl7b2xkVmFsdWUhPT1pbnRlcm5hbEFycmF5JiYob2xkVmFsdWU9aW50ZXJuYWxBcnJheSxvbGRMZW5ndGg9b2xkVmFsdWUubGVuZ3RoPTAsY2hhbmdlRGV0ZWN0ZWQrKyksbmV3TGVuZ3RoPW5ld1ZhbHVlLmxlbmd0aCxvbGRMZW5ndGghPT1uZXdMZW5ndGgmJihjaGFuZ2VEZXRlY3RlZCsrLG9sZFZhbHVlLmxlbmd0aD1vbGRMZW5ndGg9bmV3TGVuZ3RoKTtmb3IodmFyIGk9MDtuZXdMZW5ndGg+aTtpKyspYm90aE5hTj1vbGRWYWx1ZVtpXSE9PW9sZFZhbHVlW2ldJiZuZXdWYWx1ZVtpXSE9PW5ld1ZhbHVlW2ldLGJvdGhOYU58fG9sZFZhbHVlW2ldPT09bmV3VmFsdWVbaV18fChjaGFuZ2VEZXRlY3RlZCsrLG9sZFZhbHVlW2ldPW5ld1ZhbHVlW2ldKX1lbHNle29sZFZhbHVlIT09aW50ZXJuYWxPYmplY3QmJihvbGRWYWx1ZT1pbnRlcm5hbE9iamVjdD17fSxvbGRMZW5ndGg9MCxjaGFuZ2VEZXRlY3RlZCsrKSxuZXdMZW5ndGg9MDtmb3Ioa2V5IGluIG5ld1ZhbHVlKW5ld1ZhbHVlLmhhc093blByb3BlcnR5KGtleSkmJihuZXdMZW5ndGgrKyxvbGRWYWx1ZS5oYXNPd25Qcm9wZXJ0eShrZXkpPyhib3RoTmFOPW9sZFZhbHVlW2tleV0hPT1vbGRWYWx1ZVtrZXldJiZuZXdWYWx1ZVtrZXldIT09bmV3VmFsdWVba2V5XSxib3RoTmFOfHxvbGRWYWx1ZVtrZXldPT09bmV3VmFsdWVba2V5XXx8KGNoYW5nZURldGVjdGVkKyssb2xkVmFsdWVba2V5XT1uZXdWYWx1ZVtrZXldKSk6KG9sZExlbmd0aCsrLG9sZFZhbHVlW2tleV09bmV3VmFsdWVba2V5XSxjaGFuZ2VEZXRlY3RlZCsrKSk7aWYob2xkTGVuZ3RoPm5ld0xlbmd0aCl7Y2hhbmdlRGV0ZWN0ZWQrKztmb3Ioa2V5IGluIG9sZFZhbHVlKW9sZFZhbHVlLmhhc093blByb3BlcnR5KGtleSkmJiFuZXdWYWx1ZS5oYXNPd25Qcm9wZXJ0eShrZXkpJiYob2xkTGVuZ3RoLS0sZGVsZXRlIG9sZFZhbHVlW2tleV0pfX1lbHNlIG9sZFZhbHVlIT09bmV3VmFsdWUmJihvbGRWYWx1ZT1uZXdWYWx1ZSxjaGFuZ2VEZXRlY3RlZCsrKTtyZXR1cm4gY2hhbmdlRGV0ZWN0ZWR9ZnVuY3Rpb24gJHdhdGNoQ29sbGVjdGlvbkFjdGlvbigpe2lmKGluaXRSdW4/KGluaXRSdW49ITEsbGlzdGVuZXIobmV3VmFsdWUsbmV3VmFsdWUsc2VsZikpOmxpc3RlbmVyKG5ld1ZhbHVlLHZlcnlPbGRWYWx1ZSxzZWxmKSx0cmFja1ZlcnlPbGRWYWx1ZSlpZihpc09iamVjdChuZXdWYWx1ZSkpaWYoaXNBcnJheUxpa2UobmV3VmFsdWUpKXt2ZXJ5T2xkVmFsdWU9bmV3IEFycmF5KG5ld1ZhbHVlLmxlbmd0aCk7Zm9yKHZhciBpPTA7aTxuZXdWYWx1ZS5sZW5ndGg7aSsrKXZlcnlPbGRWYWx1ZVtpXT1uZXdWYWx1ZVtpXX1lbHNle3ZlcnlPbGRWYWx1ZT17fTtmb3IodmFyIGtleSBpbiBuZXdWYWx1ZSloYXNPd25Qcm9wZXJ0eS5jYWxsKG5ld1ZhbHVlLGtleSkmJih2ZXJ5T2xkVmFsdWVba2V5XT1uZXdWYWx1ZVtrZXldKX1lbHNlIHZlcnlPbGRWYWx1ZT1uZXdWYWx1ZX12YXIgbmV3VmFsdWUsb2xkVmFsdWUsdmVyeU9sZFZhbHVlLHNlbGY9dGhpcyx0cmFja1ZlcnlPbGRWYWx1ZT1saXN0ZW5lci5sZW5ndGg+MSxjaGFuZ2VEZXRlY3RlZD0wLG9iakdldHRlcj0kcGFyc2Uob2JqKSxpbnRlcm5hbEFycmF5PVtdLGludGVybmFsT2JqZWN0PXt9LGluaXRSdW49ITAsb2xkTGVuZ3RoPTA7cmV0dXJuIHRoaXMuJHdhdGNoKCR3YXRjaENvbGxlY3Rpb25XYXRjaCwkd2F0Y2hDb2xsZWN0aW9uQWN0aW9uKX0sJGRpZ2VzdDpmdW5jdGlvbigpe3ZhciB3YXRjaCx2YWx1ZSxsYXN0LHdhdGNoZXJzLGxlbmd0aCxkaXJ0eSxuZXh0LGN1cnJlbnQsbG9nSWR4LGxvZ01zZyxhc3luY1Rhc2ssYXN5bmNRdWV1ZT10aGlzLiQkYXN5bmNRdWV1ZSxwb3N0RGlnZXN0UXVldWU9dGhpcy4kJHBvc3REaWdlc3RRdWV1ZSx0dGw9VFRMLHRhcmdldD10aGlzLHdhdGNoTG9nPVtdO2JlZ2luUGhhc2UoIiRkaWdlc3QiKSwkYnJvd3Nlci4kJGNoZWNrVXJsQ2hhbmdlKCksbGFzdERpcnR5V2F0Y2g9bnVsbDtkb3tmb3IoZGlydHk9ITEsY3VycmVudD10YXJnZXQ7YXN5bmNRdWV1ZS5sZW5ndGg7KXt0cnl7YXN5bmNUYXNrPWFzeW5jUXVldWUuc2hpZnQoKSxhc3luY1Rhc2suc2NvcGUuJGV2YWwoYXN5bmNUYXNrLmV4cHJlc3Npb24pfWNhdGNoKGUpe2NsZWFyUGhhc2UoKSwkZXhjZXB0aW9uSGFuZGxlcihlKX1sYXN0RGlydHlXYXRjaD1udWxsfXRyYXZlcnNlU2NvcGVzTG9vcDpkb3tpZih3YXRjaGVycz1jdXJyZW50LiQkd2F0Y2hlcnMpZm9yKGxlbmd0aD13YXRjaGVycy5sZW5ndGg7bGVuZ3RoLS07KXRyeXtpZih3YXRjaD13YXRjaGVyc1tsZW5ndGhdKWlmKCh2YWx1ZT13YXRjaC5nZXQoY3VycmVudCkpPT09KGxhc3Q9d2F0Y2gubGFzdCl8fCh3YXRjaC5lcT9lcXVhbHModmFsdWUsbGFzdCk6Im51bWJlciI9PXR5cGVvZiB2YWx1ZSYmIm51bWJlciI9PXR5cGVvZiBsYXN0JiZpc05hTih2YWx1ZSkmJmlzTmFOKGxhc3QpKSl7aWYod2F0Y2g9PT1sYXN0RGlydHlXYXRjaCl7ZGlydHk9ITE7YnJlYWsgdHJhdmVyc2VTY29wZXNMb29wfX1lbHNlIGRpcnR5PSEwLGxhc3REaXJ0eVdhdGNoPXdhdGNoLHdhdGNoLmxhc3Q9d2F0Y2guZXE/Y29weSh2YWx1ZSxudWxsKTp2YWx1ZSx3YXRjaC5mbih2YWx1ZSxsYXN0PT09aW5pdFdhdGNoVmFsP3ZhbHVlOmxhc3QsY3VycmVudCksNT50dGwmJihsb2dJZHg9NC10dGwsd2F0Y2hMb2dbbG9nSWR4XXx8KHdhdGNoTG9nW2xvZ0lkeF09W10pLGxvZ01zZz1pc0Z1bmN0aW9uKHdhdGNoLmV4cCk/ImZuOiAiKyh3YXRjaC5leHAubmFtZXx8d2F0Y2guZXhwLnRvU3RyaW5nKCkpOndhdGNoLmV4cCxsb2dNc2crPSI7IG5ld1ZhbDogIit0b0pzb24odmFsdWUpKyI7IG9sZFZhbDogIit0b0pzb24obGFzdCksd2F0Y2hMb2dbbG9nSWR4XS5wdXNoKGxvZ01zZykpfWNhdGNoKGUpe2NsZWFyUGhhc2UoKSwkZXhjZXB0aW9uSGFuZGxlcihlKX1pZighKG5leHQ9Y3VycmVudC4kJGNoaWxkSGVhZHx8Y3VycmVudCE9PXRhcmdldCYmY3VycmVudC4kJG5leHRTaWJsaW5nKSlmb3IoO2N1cnJlbnQhPT10YXJnZXQmJiEobmV4dD1jdXJyZW50LiQkbmV4dFNpYmxpbmcpOyljdXJyZW50PWN1cnJlbnQuJHBhcmVudH13aGlsZShjdXJyZW50PW5leHQpO2lmKChkaXJ0eXx8YXN5bmNRdWV1ZS5sZW5ndGgpJiYhdHRsLS0pdGhyb3cgY2xlYXJQaGFzZSgpLCRyb290U2NvcGVNaW5FcnIoImluZmRpZyIsInswfSAkZGlnZXN0KCkgaXRlcmF0aW9ucyByZWFjaGVkLiBBYm9ydGluZyFcbldhdGNoZXJzIGZpcmVkIGluIHRoZSBsYXN0IDUgaXRlcmF0aW9uczogezF9IixUVEwsdG9Kc29uKHdhdGNoTG9nKSl9d2hpbGUoZGlydHl8fGFzeW5jUXVldWUubGVuZ3RoKTtmb3IoY2xlYXJQaGFzZSgpO3Bvc3REaWdlc3RRdWV1ZS5sZW5ndGg7KXRyeXtwb3N0RGlnZXN0UXVldWUuc2hpZnQoKSgpfWNhdGNoKGUpeyRleGNlcHRpb25IYW5kbGVyKGUpfX0sJGRlc3Ryb3k6ZnVuY3Rpb24oKXtpZighdGhpcy4kJGRlc3Ryb3llZCl7dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7dGhpcy4kYnJvYWRjYXN0KCIkZGVzdHJveSIpLHRoaXMuJCRkZXN0cm95ZWQ9ITAsdGhpcyE9PSRyb290U2NvcGUmJihmb3JFYWNoKHRoaXMuJCRsaXN0ZW5lckNvdW50LGJpbmQobnVsbCxkZWNyZW1lbnRMaXN0ZW5lckNvdW50LHRoaXMpKSxwYXJlbnQuJCRjaGlsZEhlYWQ9PXRoaXMmJihwYXJlbnQuJCRjaGlsZEhlYWQ9dGhpcy4kJG5leHRTaWJsaW5nKSxwYXJlbnQuJCRjaGlsZFRhaWw9PXRoaXMmJihwYXJlbnQuJCRjaGlsZFRhaWw9dGhpcy4kJHByZXZTaWJsaW5nKSx0aGlzLiQkcHJldlNpYmxpbmcmJih0aGlzLiQkcHJldlNpYmxpbmcuJCRuZXh0U2libGluZz10aGlzLiQkbmV4dFNpYmxpbmcpLHRoaXMuJCRuZXh0U2libGluZyYmKHRoaXMuJCRuZXh0U2libGluZy4kJHByZXZTaWJsaW5nPXRoaXMuJCRwcmV2U2libGluZyksdGhpcy4kcGFyZW50PXRoaXMuJCRuZXh0U2libGluZz10aGlzLiQkcHJldlNpYmxpbmc9dGhpcy4kJGNoaWxkSGVhZD10aGlzLiQkY2hpbGRUYWlsPXRoaXMuJHJvb3Q9bnVsbCx0aGlzLiQkbGlzdGVuZXJzPXt9LHRoaXMuJCR3YXRjaGVycz10aGlzLiQkYXN5bmNRdWV1ZT10aGlzLiQkcG9zdERpZ2VzdFF1ZXVlPVtdLHRoaXMuJGRlc3Ryb3k9dGhpcy4kZGlnZXN0PXRoaXMuJGFwcGx5PW5vb3AsdGhpcy4kb249dGhpcy4kd2F0Y2g9ZnVuY3Rpb24oKXtyZXR1cm4gbm9vcH0pfX0sJGV2YWw6ZnVuY3Rpb24oZXhwcixsb2NhbHMpe3JldHVybiAkcGFyc2UoZXhwcikodGhpcyxsb2NhbHMpfSwkZXZhbEFzeW5jOmZ1bmN0aW9uKGV4cHIpeyRyb290U2NvcGUuJCRwaGFzZXx8JHJvb3RTY29wZS4kJGFzeW5jUXVldWUubGVuZ3RofHwkYnJvd3Nlci5kZWZlcihmdW5jdGlvbigpeyRyb290U2NvcGUuJCRhc3luY1F1ZXVlLmxlbmd0aCYmJHJvb3RTY29wZS4kZGlnZXN0KCl9KSx0aGlzLiQkYXN5bmNRdWV1ZS5wdXNoKHtzY29wZTp0aGlzLGV4cHJlc3Npb246ZXhwcn0pfSwkJHBvc3REaWdlc3Q6ZnVuY3Rpb24oZm4pe3RoaXMuJCRwb3N0RGlnZXN0UXVldWUucHVzaChmbil9LCRhcHBseTpmdW5jdGlvbihleHByKXt0cnl7cmV0dXJuIGJlZ2luUGhhc2UoIiRhcHBseSIpLHRoaXMuJGV2YWwoZXhwcil9Y2F0Y2goZSl7JGV4Y2VwdGlvbkhhbmRsZXIoZSl9ZmluYWxseXtjbGVhclBoYXNlKCk7dHJ5eyRyb290U2NvcGUuJGRpZ2VzdCgpfWNhdGNoKGUpe3Rocm93ICRleGNlcHRpb25IYW5kbGVyKGUpLGV9fX0sJG9uOmZ1bmN0aW9uKG5hbWUsbGlzdGVuZXIpe3ZhciBuYW1lZExpc3RlbmVycz10aGlzLiQkbGlzdGVuZXJzW25hbWVdO25hbWVkTGlzdGVuZXJzfHwodGhpcy4kJGxpc3RlbmVyc1tuYW1lXT1uYW1lZExpc3RlbmVycz1bXSksbmFtZWRMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7dmFyIGN1cnJlbnQ9dGhpcztkbyBjdXJyZW50LiQkbGlzdGVuZXJDb3VudFtuYW1lXXx8KGN1cnJlbnQuJCRsaXN0ZW5lckNvdW50W25hbWVdPTApLGN1cnJlbnQuJCRsaXN0ZW5lckNvdW50W25hbWVdKys7d2hpbGUoY3VycmVudD1jdXJyZW50LiRwYXJlbnQpO3ZhciBzZWxmPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKCl7bmFtZWRMaXN0ZW5lcnNbaW5kZXhPZihuYW1lZExpc3RlbmVycyxsaXN0ZW5lcildPW51bGwsZGVjcmVtZW50TGlzdGVuZXJDb3VudChzZWxmLDEsbmFtZSl9fSwkZW1pdDpmdW5jdGlvbihuYW1lKXt2YXIgbmFtZWRMaXN0ZW5lcnMsaSxsZW5ndGgsZW1wdHk9W10sc2NvcGU9dGhpcyxzdG9wUHJvcGFnYXRpb249ITEsZXZlbnQ9e25hbWU6bmFtZSx0YXJnZXRTY29wZTpzY29wZSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXtzdG9wUHJvcGFnYXRpb249ITB9LHByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7ZXZlbnQuZGVmYXVsdFByZXZlbnRlZD0hMH0sZGVmYXVsdFByZXZlbnRlZDohMX0sbGlzdGVuZXJBcmdzPWNvbmNhdChbZXZlbnRdLGFyZ3VtZW50cywxKTtkb3tmb3IobmFtZWRMaXN0ZW5lcnM9c2NvcGUuJCRsaXN0ZW5lcnNbbmFtZV18fGVtcHR5LGV2ZW50LmN1cnJlbnRTY29wZT1zY29wZSxpPTAsbGVuZ3RoPW5hbWVkTGlzdGVuZXJzLmxlbmd0aDtsZW5ndGg+aTtpKyspaWYobmFtZWRMaXN0ZW5lcnNbaV0pdHJ5e25hbWVkTGlzdGVuZXJzW2ldLmFwcGx5KG51bGwsbGlzdGVuZXJBcmdzKX1jYXRjaChlKXskZXhjZXB0aW9uSGFuZGxlcihlKX1lbHNlIG5hbWVkTGlzdGVuZXJzLnNwbGljZShpLDEpLGktLSxsZW5ndGgtLTtpZihzdG9wUHJvcGFnYXRpb24pcmV0dXJuIGV2ZW50O3Njb3BlPXNjb3BlLiRwYXJlbnR9d2hpbGUoc2NvcGUpO3JldHVybiBldmVudH0sJGJyb2FkY2FzdDpmdW5jdGlvbihuYW1lKXtmb3IodmFyIGxpc3RlbmVycyxpLGxlbmd0aCx0YXJnZXQ9dGhpcyxjdXJyZW50PXRhcmdldCxuZXh0PXRhcmdldCxldmVudD17bmFtZTpuYW1lLHRhcmdldFNjb3BlOnRhcmdldCxwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe2V2ZW50LmRlZmF1bHRQcmV2ZW50ZWQ9ITB9LGRlZmF1bHRQcmV2ZW50ZWQ6ITF9LGxpc3RlbmVyQXJncz1jb25jYXQoW2V2ZW50XSxhcmd1bWVudHMsMSk7Y3VycmVudD1uZXh0Oyl7Zm9yKGV2ZW50LmN1cnJlbnRTY29wZT1jdXJyZW50LGxpc3RlbmVycz1jdXJyZW50LiQkbGlzdGVuZXJzW25hbWVdfHxbXSxpPTAsbGVuZ3RoPWxpc3RlbmVycy5sZW5ndGg7bGVuZ3RoPmk7aSsrKWlmKGxpc3RlbmVyc1tpXSl0cnl7bGlzdGVuZXJzW2ldLmFwcGx5KG51bGwsbGlzdGVuZXJBcmdzKX1jYXRjaChlKXskZXhjZXB0aW9uSGFuZGxlcihlKX1lbHNlIGxpc3RlbmVycy5zcGxpY2UoaSwxKSxpLS0sbGVuZ3RoLS07aWYoIShuZXh0PWN1cnJlbnQuJCRsaXN0ZW5lckNvdW50W25hbWVdJiZjdXJyZW50LiQkY2hpbGRIZWFkfHxjdXJyZW50IT09dGFyZ2V0JiZjdXJyZW50LiQkbmV4dFNpYmxpbmcpKWZvcig7Y3VycmVudCE9PXRhcmdldCYmIShuZXh0PWN1cnJlbnQuJCRuZXh0U2libGluZyk7KWN1cnJlbnQ9Y3VycmVudC4kcGFyZW50fXJldHVybiBldmVudH19O3ZhciAkcm9vdFNjb3BlPW5ldyBTY29wZTtyZXR1cm4gJHJvb3RTY29wZX1dfWZ1bmN0aW9uICQkU2FuaXRpemVVcmlQcm92aWRlcigpe3ZhciBhSHJlZlNhbml0aXphdGlvbldoaXRlbGlzdD0vXlxzKihodHRwcz98ZnRwfG1haWx0b3x0ZWx8ZmlsZSk6LyxpbWdTcmNTYW5pdGl6YXRpb25XaGl0ZWxpc3Q9L15ccyooKGh0dHBzP3xmdHB8ZmlsZSk6fGRhdGE6aW1hZ2VcLykvO3RoaXMuYUhyZWZTYW5pdGl6YXRpb25XaGl0ZWxpc3Q9ZnVuY3Rpb24ocmVnZXhwKXtyZXR1cm4gaXNEZWZpbmVkKHJlZ2V4cCk/KGFIcmVmU2FuaXRpemF0aW9uV2hpdGVsaXN0PXJlZ2V4cCx0aGlzKTphSHJlZlNhbml0aXphdGlvbldoaXRlbGlzdH0sdGhpcy5pbWdTcmNTYW5pdGl6YXRpb25XaGl0ZWxpc3Q9ZnVuY3Rpb24ocmVnZXhwKXtyZXR1cm4gaXNEZWZpbmVkKHJlZ2V4cCk/KGltZ1NyY1Nhbml0aXphdGlvbldoaXRlbGlzdD1yZWdleHAsdGhpcyk6aW1nU3JjU2FuaXRpemF0aW9uV2hpdGVsaXN0fSx0aGlzLiRnZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odXJpLGlzSW1hZ2Upe3ZhciBub3JtYWxpemVkVmFsLHJlZ2V4PWlzSW1hZ2U/aW1nU3JjU2FuaXRpemF0aW9uV2hpdGVsaXN0OmFIcmVmU2FuaXRpemF0aW9uV2hpdGVsaXN0O3JldHVybiBtc2llJiYhKG1zaWU+PTgpfHwobm9ybWFsaXplZFZhbD11cmxSZXNvbHZlKHVyaSkuaHJlZiwiIj09PW5vcm1hbGl6ZWRWYWx8fG5vcm1hbGl6ZWRWYWwubWF0Y2gocmVnZXgpKT91cmk6InVuc2FmZToiK25vcm1hbGl6ZWRWYWx9fX1mdW5jdGlvbiBlc2NhcGVGb3JSZWdleHAocyl7cmV0dXJuIHMucmVwbGFjZSgvKFstKClcW1xde30rPyouJFxefCw6IzwhXFxdKS9nLCJcXCQxIikucmVwbGFjZSgvXHgwOC9nLCJcXHgwOCIpfWZ1bmN0aW9uIGFkanVzdE1hdGNoZXIobWF0Y2hlcil7aWYoInNlbGYiPT09bWF0Y2hlcilyZXR1cm4gbWF0Y2hlcjtpZihpc1N0cmluZyhtYXRjaGVyKSl7aWYobWF0Y2hlci5pbmRleE9mKCIqKioiKT4tMSl0aHJvdyAkc2NlTWluRXJyKCJpd2NhcmQiLCJJbGxlZ2FsIHNlcXVlbmNlICoqKiBpbiBzdHJpbmcgbWF0Y2hlci4gIFN0cmluZzogezB9IixtYXRjaGVyKTtyZXR1cm4gbWF0Y2hlcj1lc2NhcGVGb3JSZWdleHAobWF0Y2hlcikucmVwbGFjZSgiXFwqXFwqIiwiLioiKS5yZXBsYWNlKCJcXCoiLCJbXjovLj8mO10qIiksbmV3IFJlZ0V4cCgiXiIrbWF0Y2hlcisiJCIpfWlmKGlzUmVnRXhwKG1hdGNoZXIpKXJldHVybiBuZXcgUmVnRXhwKCJeIittYXRjaGVyLnNvdXJjZSsiJCIpO3Rocm93ICRzY2VNaW5FcnIoImltYXRjaGVyIiwnTWF0Y2hlcnMgbWF5IG9ubHkgYmUgInNlbGYiLCBzdHJpbmcgcGF0dGVybnMgb3IgUmVnRXhwIG9iamVjdHMnKX1mdW5jdGlvbiBhZGp1c3RNYXRjaGVycyhtYXRjaGVycyl7dmFyIGFkanVzdGVkTWF0Y2hlcnM9W107cmV0dXJuIGlzRGVmaW5lZChtYXRjaGVycykmJmZvckVhY2gobWF0Y2hlcnMsZnVuY3Rpb24obWF0Y2hlcil7YWRqdXN0ZWRNYXRjaGVycy5wdXNoKGFkanVzdE1hdGNoZXIobWF0Y2hlcikpfSksYWRqdXN0ZWRNYXRjaGVyc31mdW5jdGlvbiAkU2NlRGVsZWdhdGVQcm92aWRlcigpe3RoaXMuU0NFX0NPTlRFWFRTPVNDRV9DT05URVhUUzt2YXIgcmVzb3VyY2VVcmxXaGl0ZWxpc3Q9WyJzZWxmIl0scmVzb3VyY2VVcmxCbGFja2xpc3Q9W107dGhpcy5yZXNvdXJjZVVybFdoaXRlbGlzdD1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGgmJihyZXNvdXJjZVVybFdoaXRlbGlzdD1hZGp1c3RNYXRjaGVycyh2YWx1ZSkpLHJlc291cmNlVXJsV2hpdGVsaXN0fSx0aGlzLnJlc291cmNlVXJsQmxhY2tsaXN0PWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCYmKHJlc291cmNlVXJsQmxhY2tsaXN0PWFkanVzdE1hdGNoZXJzKHZhbHVlKSkscmVzb3VyY2VVcmxCbGFja2xpc3R9LHRoaXMuJGdldD1bIiRpbmplY3RvciIsZnVuY3Rpb24oJGluamVjdG9yKXtmdW5jdGlvbiBtYXRjaFVybChtYXRjaGVyLHBhcnNlZFVybCl7cmV0dXJuInNlbGYiPT09bWF0Y2hlcj91cmxJc1NhbWVPcmlnaW4ocGFyc2VkVXJsKTohIW1hdGNoZXIuZXhlYyhwYXJzZWRVcmwuaHJlZil9ZnVuY3Rpb24gaXNSZXNvdXJjZVVybEFsbG93ZWRCeVBvbGljeSh1cmwpe3ZhciBpLG4scGFyc2VkVXJsPXVybFJlc29sdmUodXJsLnRvU3RyaW5nKCkpLGFsbG93ZWQ9ITE7Zm9yKGk9MCxuPXJlc291cmNlVXJsV2hpdGVsaXN0Lmxlbmd0aDtuPmk7aSsrKWlmKG1hdGNoVXJsKHJlc291cmNlVXJsV2hpdGVsaXN0W2ldLHBhcnNlZFVybCkpe2FsbG93ZWQ9ITA7YnJlYWt9aWYoYWxsb3dlZClmb3IoaT0wLG49cmVzb3VyY2VVcmxCbGFja2xpc3QubGVuZ3RoO24+aTtpKyspaWYobWF0Y2hVcmwocmVzb3VyY2VVcmxCbGFja2xpc3RbaV0scGFyc2VkVXJsKSl7YWxsb3dlZD0hMTticmVha31yZXR1cm4gYWxsb3dlZH1mdW5jdGlvbiBnZW5lcmF0ZUhvbGRlclR5cGUoQmFzZSl7dmFyIGhvbGRlclR5cGU9ZnVuY3Rpb24odHJ1c3RlZFZhbHVlKXt0aGlzLiQkdW53cmFwVHJ1c3RlZFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRydXN0ZWRWYWx1ZX19O3JldHVybiBCYXNlJiYoaG9sZGVyVHlwZS5wcm90b3R5cGU9bmV3IEJhc2UpLGhvbGRlclR5cGUucHJvdG90eXBlLnZhbHVlT2Y9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kJHVud3JhcFRydXN0ZWRWYWx1ZSgpfSxob2xkZXJUeXBlLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLiQkdW53cmFwVHJ1c3RlZFZhbHVlKCkudG9TdHJpbmcoKX0saG9sZGVyVHlwZX1mdW5jdGlvbiB0cnVzdEFzKHR5cGUsdHJ1c3RlZFZhbHVlKXt2YXIgQ29uc3RydWN0b3I9YnlUeXBlLmhhc093blByb3BlcnR5KHR5cGUpP2J5VHlwZVt0eXBlXTpudWxsO2lmKCFDb25zdHJ1Y3Rvcil0aHJvdyAkc2NlTWluRXJyKCJpY29udGV4dCIsIkF0dGVtcHRlZCB0byB0cnVzdCBhIHZhbHVlIGluIGludmFsaWQgY29udGV4dC4gQ29udGV4dDogezB9OyBWYWx1ZTogezF9Iix0eXBlLHRydXN0ZWRWYWx1ZSk7aWYobnVsbD09PXRydXN0ZWRWYWx1ZXx8dHJ1c3RlZFZhbHVlPT09dW5kZWZpbmVkfHwiIj09PXRydXN0ZWRWYWx1ZSlyZXR1cm4gdHJ1c3RlZFZhbHVlO2lmKCJzdHJpbmciIT10eXBlb2YgdHJ1c3RlZFZhbHVlKXRocm93ICRzY2VNaW5FcnIoIml0eXBlIiwiQXR0ZW1wdGVkIHRvIHRydXN0IGEgbm9uLXN0cmluZyB2YWx1ZSBpbiBhIGNvbnRlbnQgcmVxdWlyaW5nIGEgc3RyaW5nOiBDb250ZXh0OiB7MH0iLHR5cGUpO3JldHVybiBuZXcgQ29uc3RydWN0b3IodHJ1c3RlZFZhbHVlKX1mdW5jdGlvbiB2YWx1ZU9mKG1heWJlVHJ1c3RlZCl7cmV0dXJuIG1heWJlVHJ1c3RlZCBpbnN0YW5jZW9mIHRydXN0ZWRWYWx1ZUhvbGRlckJhc2U/bWF5YmVUcnVzdGVkLiQkdW53cmFwVHJ1c3RlZFZhbHVlKCk6bWF5YmVUcnVzdGVkfWZ1bmN0aW9uIGdldFRydXN0ZWQodHlwZSxtYXliZVRydXN0ZWQpe2lmKG51bGw9PT1tYXliZVRydXN0ZWR8fG1heWJlVHJ1c3RlZD09PXVuZGVmaW5lZHx8IiI9PT1tYXliZVRydXN0ZWQpcmV0dXJuIG1heWJlVHJ1c3RlZDt2YXIgY29uc3RydWN0b3I9YnlUeXBlLmhhc093blByb3BlcnR5KHR5cGUpP2J5VHlwZVt0eXBlXTpudWxsO2lmKGNvbnN0cnVjdG9yJiZtYXliZVRydXN0ZWQgaW5zdGFuY2VvZiBjb25zdHJ1Y3RvcilyZXR1cm4gbWF5YmVUcnVzdGVkLiQkdW53cmFwVHJ1c3RlZFZhbHVlKCk7aWYodHlwZT09PVNDRV9DT05URVhUUy5SRVNPVVJDRV9VUkwpe2lmKGlzUmVzb3VyY2VVcmxBbGxvd2VkQnlQb2xpY3kobWF5YmVUcnVzdGVkKSlyZXR1cm4gbWF5YmVUcnVzdGVkO3Rocm93ICRzY2VNaW5FcnIoImluc2VjdXJsIiwiQmxvY2tlZCBsb2FkaW5nIHJlc291cmNlIGZyb20gdXJsIG5vdCBhbGxvd2VkIGJ5ICRzY2VEZWxlZ2F0ZSBwb2xpY3kuICBVUkw6IHswfSIsbWF5YmVUcnVzdGVkLnRvU3RyaW5nKCkpfWlmKHR5cGU9PT1TQ0VfQ09OVEVYVFMuSFRNTClyZXR1cm4gaHRtbFNhbml0aXplcihtYXliZVRydXN0ZWQpO3Rocm93ICRzY2VNaW5FcnIoInVuc2FmZSIsIkF0dGVtcHRpbmcgdG8gdXNlIGFuIHVuc2FmZSB2YWx1ZSBpbiBhIHNhZmUgY29udGV4dC4iKX12YXIgaHRtbFNhbml0aXplcj1mdW5jdGlvbigpe3Rocm93ICRzY2VNaW5FcnIoInVuc2FmZSIsIkF0dGVtcHRpbmcgdG8gdXNlIGFuIHVuc2FmZSB2YWx1ZSBpbiBhIHNhZmUgY29udGV4dC4iKX07JGluamVjdG9yLmhhcygiJHNhbml0aXplIikmJihodG1sU2FuaXRpemVyPSRpbmplY3Rvci5nZXQoIiRzYW5pdGl6ZSIpKTt2YXIgdHJ1c3RlZFZhbHVlSG9sZGVyQmFzZT1nZW5lcmF0ZUhvbGRlclR5cGUoKSxieVR5cGU9e307cmV0dXJuIGJ5VHlwZVtTQ0VfQ09OVEVYVFMuSFRNTF09Z2VuZXJhdGVIb2xkZXJUeXBlKHRydXN0ZWRWYWx1ZUhvbGRlckJhc2UpLGJ5VHlwZVtTQ0VfQ09OVEVYVFMuQ1NTXT1nZW5lcmF0ZUhvbGRlclR5cGUodHJ1c3RlZFZhbHVlSG9sZGVyQmFzZSksYnlUeXBlW1NDRV9DT05URVhUUy5VUkxdPWdlbmVyYXRlSG9sZGVyVHlwZSh0cnVzdGVkVmFsdWVIb2xkZXJCYXNlKSxieVR5cGVbU0NFX0NPTlRFWFRTLkpTXT1nZW5lcmF0ZUhvbGRlclR5cGUodHJ1c3RlZFZhbHVlSG9sZGVyQmFzZSksYnlUeXBlW1NDRV9DT05URVhUUy5SRVNPVVJDRV9VUkxdPWdlbmVyYXRlSG9sZGVyVHlwZShieVR5cGVbU0NFX0NPTlRFWFRTLlVSTF0pLHt0cnVzdEFzOnRydXN0QXMsZ2V0VHJ1c3RlZDpnZXRUcnVzdGVkLHZhbHVlT2Y6dmFsdWVPZn19XX1mdW5jdGlvbiAkU2NlUHJvdmlkZXIoKXt2YXIgZW5hYmxlZD0hMDt0aGlzLmVuYWJsZWQ9ZnVuY3Rpb24odmFsdWUpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoJiYoZW5hYmxlZD0hIXZhbHVlKSxlbmFibGVkfSx0aGlzLiRnZXQ9WyIkcGFyc2UiLCIkc25pZmZlciIsIiRzY2VEZWxlZ2F0ZSIsZnVuY3Rpb24oJHBhcnNlLCRzbmlmZmVyLCRzY2VEZWxlZ2F0ZSl7aWYoZW5hYmxlZCYmJHNuaWZmZXIubXNpZSYmJHNuaWZmZXIubXNpZURvY3VtZW50TW9kZTw4KXRocm93ICRzY2VNaW5FcnIoImllcXVpcmtzIiwiU3RyaWN0IENvbnRleHR1YWwgRXNjYXBpbmcgZG9lcyBub3Qgc3VwcG9ydCBJbnRlcm5ldCBFeHBsb3JlciB2ZXJzaW9uIDwgOSBpbiBxdWlya3MgbW9kZS4gIFlvdSBjYW4gZml4IHRoaXMgYnkgYWRkaW5nIHRoZSB0ZXh0IDwhZG9jdHlwZSBodG1sPiB0byB0aGUgdG9wIG9mIHlvdXIgSFRNTCBkb2N1bWVudC4gIFNlZSBodHRwOi8vZG9jcy5hbmd1bGFyanMub3JnL2FwaS9uZy4kc2NlIGZvciBtb3JlIGluZm9ybWF0aW9uLiIpO3ZhciBzY2U9c2hhbGxvd0NvcHkoU0NFX0NPTlRFWFRTKTtzY2UuaXNFbmFibGVkPWZ1bmN0aW9uKCl7cmV0dXJuIGVuYWJsZWR9LHNjZS50cnVzdEFzPSRzY2VEZWxlZ2F0ZS50cnVzdEFzLHNjZS5nZXRUcnVzdGVkPSRzY2VEZWxlZ2F0ZS5nZXRUcnVzdGVkLHNjZS52YWx1ZU9mPSRzY2VEZWxlZ2F0ZS52YWx1ZU9mLGVuYWJsZWR8fChzY2UudHJ1c3RBcz1zY2UuZ2V0VHJ1c3RlZD1mdW5jdGlvbih0eXBlLHZhbHVlKXtyZXR1cm4gdmFsdWV9LHNjZS52YWx1ZU9mPWlkZW50aXR5KSxzY2UucGFyc2VBcz1mdW5jdGlvbih0eXBlLGV4cHIpe3ZhciBwYXJzZWQ9JHBhcnNlKGV4cHIpO3JldHVybiBwYXJzZWQubGl0ZXJhbCYmcGFyc2VkLmNvbnN0YW50P3BhcnNlZDpmdW5jdGlvbihzZWxmLGxvY2Fscyl7cmV0dXJuIHNjZS5nZXRUcnVzdGVkKHR5cGUscGFyc2VkKHNlbGYsbG9jYWxzKSl9fTt2YXIgcGFyc2U9c2NlLnBhcnNlQXMsZ2V0VHJ1c3RlZD1zY2UuZ2V0VHJ1c3RlZCx0cnVzdEFzPXNjZS50cnVzdEFzO3JldHVybiBmb3JFYWNoKFNDRV9DT05URVhUUyxmdW5jdGlvbihlbnVtVmFsdWUsbmFtZSl7dmFyIGxOYW1lPWxvd2VyY2FzZShuYW1lKTtzY2VbY2FtZWxDYXNlKCJwYXJzZV9hc18iK2xOYW1lKV09ZnVuY3Rpb24oZXhwcil7cmV0dXJuIHBhcnNlKGVudW1WYWx1ZSxleHByKX0sc2NlW2NhbWVsQ2FzZSgiZ2V0X3RydXN0ZWRfIitsTmFtZSldPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gZ2V0VHJ1c3RlZChlbnVtVmFsdWUsdmFsdWUpfSxzY2VbY2FtZWxDYXNlKCJ0cnVzdF9hc18iK2xOYW1lKV09ZnVuY3Rpb24odmFsdWUpe3JldHVybiB0cnVzdEFzKGVudW1WYWx1ZSx2YWx1ZSl9fSksc2NlfV19ZnVuY3Rpb24gJFNuaWZmZXJQcm92aWRlcigpe3RoaXMuJGdldD1bIiR3aW5kb3ciLCIkZG9jdW1lbnQiLGZ1bmN0aW9uKCR3aW5kb3csJGRvY3VtZW50KXt2YXIgdmVuZG9yUHJlZml4LG1hdGNoLGV2ZW50U3VwcG9ydD17fSxhbmRyb2lkPWludCgoL2FuZHJvaWQgKFxkKykvLmV4ZWMobG93ZXJjYXNlKCgkd2luZG93Lm5hdmlnYXRvcnx8e30pLnVzZXJBZ2VudCkpfHxbXSlbMV0pLGJveGVlPS9Cb3hlZS9pLnRlc3QoKCR3aW5kb3cubmF2aWdhdG9yfHx7fSkudXNlckFnZW50KSxkb2N1bWVudD0kZG9jdW1lbnRbMF18fHt9LGRvY3VtZW50TW9kZT1kb2N1bWVudC5kb2N1bWVudE1vZGUsdmVuZG9yUmVnZXg9L14oTW96fHdlYmtpdHxPfG1zKSg/PVtBLVpdKS8sYm9keVN0eWxlPWRvY3VtZW50LmJvZHkmJmRvY3VtZW50LmJvZHkuc3R5bGUsdHJhbnNpdGlvbnM9ITEsYW5pbWF0aW9ucz0hMTtpZihib2R5U3R5bGUpe2Zvcih2YXIgcHJvcCBpbiBib2R5U3R5bGUpaWYobWF0Y2g9dmVuZG9yUmVnZXguZXhlYyhwcm9wKSl7dmVuZG9yUHJlZml4PW1hdGNoWzBdLHZlbmRvclByZWZpeD12ZW5kb3JQcmVmaXguc3Vic3RyKDAsMSkudG9VcHBlckNhc2UoKSt2ZW5kb3JQcmVmaXguc3Vic3RyKDEpO2JyZWFrfXZlbmRvclByZWZpeHx8KHZlbmRvclByZWZpeD0iV2Via2l0T3BhY2l0eSJpbiBib2R5U3R5bGUmJiJ3ZWJraXQiKSx0cmFuc2l0aW9ucz0hISgidHJhbnNpdGlvbiJpbiBib2R5U3R5bGV8fHZlbmRvclByZWZpeCsiVHJhbnNpdGlvbiJpbiBib2R5U3R5bGUpLGFuaW1hdGlvbnM9ISEoImFuaW1hdGlvbiJpbiBib2R5U3R5bGV8fHZlbmRvclByZWZpeCsiQW5pbWF0aW9uImluIGJvZHlTdHlsZSksIWFuZHJvaWR8fHRyYW5zaXRpb25zJiZhbmltYXRpb25zfHwodHJhbnNpdGlvbnM9aXNTdHJpbmcoZG9jdW1lbnQuYm9keS5zdHlsZS53ZWJraXRUcmFuc2l0aW9uKSxhbmltYXRpb25zPWlzU3RyaW5nKGRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0QW5pbWF0aW9uKSl9cmV0dXJue2hpc3Rvcnk6ISghJHdpbmRvdy5oaXN0b3J5fHwhJHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZXx8ND5hbmRyb2lkfHxib3hlZSksaGFzaGNoYW5nZToib25oYXNoY2hhbmdlImluICR3aW5kb3cmJighZG9jdW1lbnRNb2RlfHxkb2N1bWVudE1vZGU+NyksaGFzRXZlbnQ6ZnVuY3Rpb24oZXZlbnQpe2lmKCJpbnB1dCI9PWV2ZW50JiY5PT1tc2llKXJldHVybiExO2lmKGlzVW5kZWZpbmVkKGV2ZW50U3VwcG9ydFtldmVudF0pKXt2YXIgZGl2RWxtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2V2ZW50U3VwcG9ydFtldmVudF09Im9uIitldmVudCBpbiBkaXZFbG19cmV0dXJuIGV2ZW50U3VwcG9ydFtldmVudF19LGNzcDpjc3AoKSx2ZW5kb3JQcmVmaXg6dmVuZG9yUHJlZml4LHRyYW5zaXRpb25zOnRyYW5zaXRpb25zLGFuaW1hdGlvbnM6YW5pbWF0aW9ucyxhbmRyb2lkOmFuZHJvaWQsbXNpZTptc2llLG1zaWVEb2N1bWVudE1vZGU6ZG9jdW1lbnRNb2RlfX1dfWZ1bmN0aW9uICRUaW1lb3V0UHJvdmlkZXIoKXt0aGlzLiRnZXQ9WyIkcm9vdFNjb3BlIiwiJGJyb3dzZXIiLCIkcSIsIiRleGNlcHRpb25IYW5kbGVyIixmdW5jdGlvbigkcm9vdFNjb3BlLCRicm93c2VyLCRxLCRleGNlcHRpb25IYW5kbGVyKXtmdW5jdGlvbiB0aW1lb3V0KGZuLGRlbGF5LGludm9rZUFwcGx5KXt2YXIgdGltZW91dElkLGRlZmVycmVkPSRxLmRlZmVyKCkscHJvbWlzZT1kZWZlcnJlZC5wcm9taXNlLHNraXBBcHBseT1pc0RlZmluZWQoaW52b2tlQXBwbHkpJiYhaW52b2tlQXBwbHk7cmV0dXJuIHRpbWVvdXRJZD0kYnJvd3Nlci5kZWZlcihmdW5jdGlvbigpe3RyeXtkZWZlcnJlZC5yZXNvbHZlKGZuKCkpfWNhdGNoKGUpe2RlZmVycmVkLnJlamVjdChlKSwkZXhjZXB0aW9uSGFuZGxlcihlKX1maW5hbGx5e2RlbGV0ZSBkZWZlcnJlZHNbcHJvbWlzZS4kJHRpbWVvdXRJZF19c2tpcEFwcGx5fHwkcm9vdFNjb3BlLiRhcHBseSgpfSxkZWxheSkscHJvbWlzZS4kJHRpbWVvdXRJZD10aW1lb3V0SWQsZGVmZXJyZWRzW3RpbWVvdXRJZF09ZGVmZXJyZWQscHJvbWlzZX12YXIgZGVmZXJyZWRzPXt9O3JldHVybiB0aW1lb3V0LmNhbmNlbD1mdW5jdGlvbihwcm9taXNlKXtyZXR1cm4gcHJvbWlzZSYmcHJvbWlzZS4kJHRpbWVvdXRJZCBpbiBkZWZlcnJlZHM/KGRlZmVycmVkc1twcm9taXNlLiQkdGltZW91dElkXS5yZWplY3QoImNhbmNlbGVkIiksZGVsZXRlIGRlZmVycmVkc1twcm9taXNlLiQkdGltZW91dElkXSwkYnJvd3Nlci5kZWZlci5jYW5jZWwocHJvbWlzZS4kJHRpbWVvdXRJZCkpOiExfSx0aW1lb3V0fV19ZnVuY3Rpb24gdXJsUmVzb2x2ZSh1cmwpe3ZhciBocmVmPXVybDtyZXR1cm4gbXNpZSYmKHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgiaHJlZiIsaHJlZiksaHJlZj11cmxQYXJzaW5nTm9kZS5ocmVmKSx1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoImhyZWYiLGhyZWYpLHtocmVmOnVybFBhcnNpbmdOb2RlLmhyZWYscHJvdG9jb2w6dXJsUGFyc2luZ05vZGUucHJvdG9jb2w/dXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCIiKToiIixob3N0OnVybFBhcnNpbmdOb2RlLmhvc3Qsc2VhcmNoOnVybFBhcnNpbmdOb2RlLnNlYXJjaD91cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlw/LywiIik6IiIsaGFzaDp1cmxQYXJzaW5nTm9kZS5oYXNoP3VybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCIiKToiIixob3N0bmFtZTp1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxwb3J0OnVybFBhcnNpbmdOb2RlLnBvcnQscGF0aG5hbWU6Ii8iPT09dXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApP3VybFBhcnNpbmdOb2RlLnBhdGhuYW1lOiIvIit1cmxQYXJzaW5nTm9kZS5wYXRobmFtZX19ZnVuY3Rpb24gdXJsSXNTYW1lT3JpZ2luKHJlcXVlc3RVcmwpe3ZhciBwYXJzZWQ9aXNTdHJpbmcocmVxdWVzdFVybCk/dXJsUmVzb2x2ZShyZXF1ZXN0VXJsKTpyZXF1ZXN0VXJsO3JldHVybiBwYXJzZWQucHJvdG9jb2w9PT1vcmlnaW5VcmwucHJvdG9jb2wmJnBhcnNlZC5ob3N0PT09b3JpZ2luVXJsLmhvc3R9ZnVuY3Rpb24gJFdpbmRvd1Byb3ZpZGVyKCl7dGhpcy4kZ2V0PXZhbHVlRm4od2luZG93KX1mdW5jdGlvbiAkRmlsdGVyUHJvdmlkZXIoJHByb3ZpZGUpe2Z1bmN0aW9uIHJlZ2lzdGVyKG5hbWUsZmFjdG9yeSl7aWYoaXNPYmplY3QobmFtZSkpe3ZhciBmaWx0ZXJzPXt9O3JldHVybiBmb3JFYWNoKG5hbWUsZnVuY3Rpb24oZmlsdGVyLGtleSl7ZmlsdGVyc1trZXldPXJlZ2lzdGVyKGtleSxmaWx0ZXIpfSksZmlsdGVyc31yZXR1cm4gJHByb3ZpZGUuZmFjdG9yeShuYW1lK3N1ZmZpeCxmYWN0b3J5KX12YXIgc3VmZml4PSJGaWx0ZXIiO3RoaXMucmVnaXN0ZXI9cmVnaXN0ZXIsdGhpcy4kZ2V0PVsiJGluamVjdG9yIixmdW5jdGlvbigkaW5qZWN0b3Ipe3JldHVybiBmdW5jdGlvbihuYW1lKXtyZXR1cm4gJGluamVjdG9yLmdldChuYW1lK3N1ZmZpeCl9fV0scmVnaXN0ZXIoImN1cnJlbmN5IixjdXJyZW5jeUZpbHRlcikscmVnaXN0ZXIoImRhdGUiLGRhdGVGaWx0ZXIpLHJlZ2lzdGVyKCJmaWx0ZXIiLGZpbHRlckZpbHRlcikscmVnaXN0ZXIoImpzb24iLGpzb25GaWx0ZXIpLHJlZ2lzdGVyKCJsaW1pdFRvIixsaW1pdFRvRmlsdGVyKSxyZWdpc3RlcigibG93ZXJjYXNlIixsb3dlcmNhc2VGaWx0ZXIpLHJlZ2lzdGVyKCJudW1iZXIiLG51bWJlckZpbHRlcikscmVnaXN0ZXIoIm9yZGVyQnkiLG9yZGVyQnlGaWx0ZXIpLHJlZ2lzdGVyKCJ1cHBlcmNhc2UiLHVwcGVyY2FzZUZpbHRlcil9ZnVuY3Rpb24gZmlsdGVyRmlsdGVyKCl7cmV0dXJuIGZ1bmN0aW9uKGFycmF5LGV4cHJlc3Npb24sY29tcGFyYXRvcil7aWYoIWlzQXJyYXkoYXJyYXkpKXJldHVybiBhcnJheTt2YXIgY29tcGFyYXRvclR5cGU9dHlwZW9mIGNvbXBhcmF0b3IscHJlZGljYXRlcz1bXTtwcmVkaWNhdGVzLmNoZWNrPWZ1bmN0aW9uKHZhbHVlKXtmb3IodmFyIGo9MDtqPHByZWRpY2F0ZXMubGVuZ3RoO2orKylpZighcHJlZGljYXRlc1tqXSh2YWx1ZSkpcmV0dXJuITE7cmV0dXJuITB9LCJmdW5jdGlvbiIhPT1jb21wYXJhdG9yVHlwZSYmKGNvbXBhcmF0b3I9ImJvb2xlYW4iPT09Y29tcGFyYXRvclR5cGUmJmNvbXBhcmF0b3I/ZnVuY3Rpb24ob2JqLHRleHQpe3JldHVybiBhbmd1bGFyLmVxdWFscyhvYmosdGV4dCl9OmZ1bmN0aW9uKG9iaix0ZXh0KXtpZihvYmomJnRleHQmJiJvYmplY3QiPT10eXBlb2Ygb2JqJiYib2JqZWN0Ij09dHlwZW9mIHRleHQpe2Zvcih2YXIgb2JqS2V5IGluIG9iailpZigiJCIhPT1vYmpLZXkuY2hhckF0KDApJiZoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixvYmpLZXkpJiZjb21wYXJhdG9yKG9ialtvYmpLZXldLHRleHRbb2JqS2V5XSkpcmV0dXJuITA7cmV0dXJuITF9cmV0dXJuIHRleHQ9KCIiK3RleHQpLnRvTG93ZXJDYXNlKCksKCIiK29iaikudG9Mb3dlckNhc2UoKS5pbmRleE9mKHRleHQpPi0xfSk7dmFyIHNlYXJjaD1mdW5jdGlvbihvYmosdGV4dCl7aWYoInN0cmluZyI9PXR5cGVvZiB0ZXh0JiYiISI9PT10ZXh0LmNoYXJBdCgwKSlyZXR1cm4hc2VhcmNoKG9iaix0ZXh0LnN1YnN0cigxKSk7c3dpdGNoKHR5cGVvZiBvYmope2Nhc2UiYm9vbGVhbiI6Y2FzZSJudW1iZXIiOmNhc2Uic3RyaW5nIjpyZXR1cm4gY29tcGFyYXRvcihvYmosdGV4dCk7Y2FzZSJvYmplY3QiOnN3aXRjaCh0eXBlb2YgdGV4dCl7Y2FzZSJvYmplY3QiOnJldHVybiBjb21wYXJhdG9yKG9iaix0ZXh0KTtkZWZhdWx0OmZvcih2YXIgb2JqS2V5IGluIG9iailpZigiJCIhPT1vYmpLZXkuY2hhckF0KDApJiZzZWFyY2gob2JqW29iaktleV0sdGV4dCkpcmV0dXJuITB9cmV0dXJuITE7Y2FzZSJhcnJheSI6Zm9yKHZhciBpPTA7aTxvYmoubGVuZ3RoO2krKylpZihzZWFyY2gob2JqW2ldLHRleHQpKXJldHVybiEwO3JldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fTtzd2l0Y2godHlwZW9mIGV4cHJlc3Npb24pe2Nhc2UiYm9vbGVhbiI6Y2FzZSJudW1iZXIiOmNhc2Uic3RyaW5nIjpleHByZXNzaW9uPXskOmV4cHJlc3Npb259O2Nhc2Uib2JqZWN0Ijpmb3IodmFyIGtleSBpbiBleHByZXNzaW9uKSFmdW5jdGlvbihwYXRoKXsidW5kZWZpbmVkIiE9dHlwZW9mIGV4cHJlc3Npb25bcGF0aF0mJnByZWRpY2F0ZXMucHVzaChmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHNlYXJjaCgiJCI9PXBhdGg/dmFsdWU6dmFsdWUmJnZhbHVlW3BhdGhdLGV4cHJlc3Npb25bcGF0aF0pfSl9KGtleSk7YnJlYWs7Y2FzZSJmdW5jdGlvbiI6cHJlZGljYXRlcy5wdXNoKGV4cHJlc3Npb24pO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIGFycmF5fWZvcih2YXIgZmlsdGVyZWQ9W10saj0wO2o8YXJyYXkubGVuZ3RoO2orKyl7dmFyIHZhbHVlPWFycmF5W2pdO3ByZWRpY2F0ZXMuY2hlY2sodmFsdWUpJiZmaWx0ZXJlZC5wdXNoKHZhbHVlKX1yZXR1cm4gZmlsdGVyZWR9fWZ1bmN0aW9uIGN1cnJlbmN5RmlsdGVyKCRsb2NhbGUpe3ZhciBmb3JtYXRzPSRsb2NhbGUuTlVNQkVSX0ZPUk1BVFM7cmV0dXJuIGZ1bmN0aW9uKGFtb3VudCxjdXJyZW5jeVN5bWJvbCl7cmV0dXJuIGlzVW5kZWZpbmVkKGN1cnJlbmN5U3ltYm9sKSYmKGN1cnJlbmN5U3ltYm9sPWZvcm1hdHMuQ1VSUkVOQ1lfU1lNKSxmb3JtYXROdW1iZXIoYW1vdW50LGZvcm1hdHMuUEFUVEVSTlNbMV0sZm9ybWF0cy5HUk9VUF9TRVAsZm9ybWF0cy5ERUNJTUFMX1NFUCwyKS5yZXBsYWNlKC9cdTAwQTQvZyxjdXJyZW5jeVN5bWJvbCl9fWZ1bmN0aW9uIG51bWJlckZpbHRlcigkbG9jYWxlKXt2YXIgZm9ybWF0cz0kbG9jYWxlLk5VTUJFUl9GT1JNQVRTO3JldHVybiBmdW5jdGlvbihudW1iZXIsZnJhY3Rpb25TaXplKXtyZXR1cm4gZm9ybWF0TnVtYmVyKG51bWJlcixmb3JtYXRzLlBBVFRFUk5TWzBdLGZvcm1hdHMuR1JPVVBfU0VQLGZvcm1hdHMuREVDSU1BTF9TRVAsZnJhY3Rpb25TaXplKX19ZnVuY3Rpb24gZm9ybWF0TnVtYmVyKG51bWJlcixwYXR0ZXJuLGdyb3VwU2VwLGRlY2ltYWxTZXAsZnJhY3Rpb25TaXplKXtpZihudWxsPT1udW1iZXJ8fCFpc0Zpbml0ZShudW1iZXIpfHxpc09iamVjdChudW1iZXIpKXJldHVybiIiO3ZhciBpc05lZ2F0aXZlPTA+bnVtYmVyO251bWJlcj1NYXRoLmFicyhudW1iZXIpO3ZhciBudW1TdHI9bnVtYmVyKyIiLGZvcm1hdGVkVGV4dD0iIixwYXJ0cz1bXSxoYXNFeHBvbmVudD0hMTtpZigtMSE9PW51bVN0ci5pbmRleE9mKCJlIikpe3ZhciBtYXRjaD1udW1TdHIubWF0Y2goLyhbXGRcLl0rKWUoLT8pKFxkKykvKTttYXRjaCYmIi0iPT1tYXRjaFsyXSYmbWF0Y2hbM10+ZnJhY3Rpb25TaXplKzE/KG51bVN0cj0iMCIsbnVtYmVyPTApOihmb3JtYXRlZFRleHQ9bnVtU3RyLGhhc0V4cG9uZW50PSEwKX1pZihoYXNFeHBvbmVudClmcmFjdGlvblNpemU+MCYmbnVtYmVyPi0xJiYxPm51bWJlciYmKGZvcm1hdGVkVGV4dD1udW1iZXIudG9GaXhlZChmcmFjdGlvblNpemUpKTtlbHNle3ZhciBmcmFjdGlvbkxlbj0obnVtU3RyLnNwbGl0KERFQ0lNQUxfU0VQKVsxXXx8IiIpLmxlbmd0aDtpc1VuZGVmaW5lZChmcmFjdGlvblNpemUpJiYoZnJhY3Rpb25TaXplPU1hdGgubWluKE1hdGgubWF4KHBhdHRlcm4ubWluRnJhYyxmcmFjdGlvbkxlbikscGF0dGVybi5tYXhGcmFjKSksbnVtYmVyPSsoTWF0aC5yb3VuZCgrKG51bWJlci50b1N0cmluZygpKyJlIitmcmFjdGlvblNpemUpKS50b1N0cmluZygpKyJlIistZnJhY3Rpb25TaXplKSwwPT09bnVtYmVyJiYoaXNOZWdhdGl2ZT0hMSk7dmFyIGZyYWN0aW9uPSgiIitudW1iZXIpLnNwbGl0KERFQ0lNQUxfU0VQKSx3aG9sZT1mcmFjdGlvblswXTtmcmFjdGlvbj1mcmFjdGlvblsxXXx8IiI7dmFyIGkscG9zPTAsbGdyb3VwPXBhdHRlcm4ubGdTaXplLGdyb3VwPXBhdHRlcm4uZ1NpemU7aWYod2hvbGUubGVuZ3RoPj1sZ3JvdXArZ3JvdXApZm9yKHBvcz13aG9sZS5sZW5ndGgtbGdyb3VwLGk9MDtwb3M+aTtpKyspKHBvcy1pKSVncm91cD09PTAmJjAhPT1pJiYoZm9ybWF0ZWRUZXh0Kz1ncm91cFNlcCksZm9ybWF0ZWRUZXh0Kz13aG9sZS5jaGFyQXQoaSk7Zm9yKGk9cG9zO2k8d2hvbGUubGVuZ3RoO2krKykod2hvbGUubGVuZ3RoLWkpJWxncm91cD09PTAmJjAhPT1pJiYoZm9ybWF0ZWRUZXh0Kz1ncm91cFNlcCksZm9ybWF0ZWRUZXh0Kz13aG9sZS5jaGFyQXQoaSk7Zm9yKDtmcmFjdGlvbi5sZW5ndGg8ZnJhY3Rpb25TaXplOylmcmFjdGlvbis9IjAiO2ZyYWN0aW9uU2l6ZSYmIjAiIT09ZnJhY3Rpb25TaXplJiYoZm9ybWF0ZWRUZXh0Kz1kZWNpbWFsU2VwK2ZyYWN0aW9uLnN1YnN0cigwLGZyYWN0aW9uU2l6ZSkpfXJldHVybiBwYXJ0cy5wdXNoKGlzTmVnYXRpdmU/cGF0dGVybi5uZWdQcmU6cGF0dGVybi5wb3NQcmUpLHBhcnRzLnB1c2goZm9ybWF0ZWRUZXh0KSxwYXJ0cy5wdXNoKGlzTmVnYXRpdmU/cGF0dGVybi5uZWdTdWY6cGF0dGVybi5wb3NTdWYpLHBhcnRzLmpvaW4oIiIpfWZ1bmN0aW9uIHBhZE51bWJlcihudW0sZGlnaXRzLHRyaW0pe3ZhciBuZWc9IiI7Zm9yKDA+bnVtJiYobmVnPSItIixudW09LW51bSksbnVtPSIiK251bTtudW0ubGVuZ3RoPGRpZ2l0czspbnVtPSIwIitudW07cmV0dXJuIHRyaW0mJihudW09bnVtLnN1YnN0cihudW0ubGVuZ3RoLWRpZ2l0cykpLG5lZytudW19ZnVuY3Rpb24gZGF0ZUdldHRlcihuYW1lLHNpemUsb2Zmc2V0LHRyaW0pe3JldHVybiBvZmZzZXQ9b2Zmc2V0fHwwLGZ1bmN0aW9uKGRhdGUpe3ZhciB2YWx1ZT1kYXRlWyJnZXQiK25hbWVdKCk7cmV0dXJuKG9mZnNldD4wfHx2YWx1ZT4tb2Zmc2V0KSYmKHZhbHVlKz1vZmZzZXQpLDA9PT12YWx1ZSYmLTEyPT1vZmZzZXQmJih2YWx1ZT0xMikscGFkTnVtYmVyKHZhbHVlLHNpemUsdHJpbSl9fWZ1bmN0aW9uIGRhdGVTdHJHZXR0ZXIobmFtZSxzaG9ydEZvcm0pe3JldHVybiBmdW5jdGlvbihkYXRlLGZvcm1hdHMpe3ZhciB2YWx1ZT1kYXRlWyJnZXQiK25hbWVdKCksZ2V0PXVwcGVyY2FzZShzaG9ydEZvcm0/IlNIT1JUIituYW1lOm5hbWUpO3JldHVybiBmb3JtYXRzW2dldF1bdmFsdWVdfX1mdW5jdGlvbiB0aW1lWm9uZUdldHRlcihkYXRlKXt2YXIgem9uZT0tMSpkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkscGFkZGVkWm9uZT16b25lPj0wPyIrIjoiIjtyZXR1cm4gcGFkZGVkWm9uZSs9cGFkTnVtYmVyKE1hdGhbem9uZT4wPyJmbG9vciI6ImNlaWwiXSh6b25lLzYwKSwyKStwYWROdW1iZXIoTWF0aC5hYnMoem9uZSU2MCksMil9ZnVuY3Rpb24gYW1wbUdldHRlcihkYXRlLGZvcm1hdHMpe3JldHVybiBkYXRlLmdldEhvdXJzKCk8MTI/Zm9ybWF0cy5BTVBNU1swXTpmb3JtYXRzLkFNUE1TWzFdfWZ1bmN0aW9uIGRhdGVGaWx0ZXIoJGxvY2FsZSl7ZnVuY3Rpb24ganNvblN0cmluZ1RvRGF0ZShzdHJpbmcpe3ZhciBtYXRjaDtpZihtYXRjaD1zdHJpbmcubWF0Y2goUl9JU084NjAxX1NUUikpe3ZhciBkYXRlPW5ldyBEYXRlKDApLHR6SG91cj0wLHR6TWluPTAsZGF0ZVNldHRlcj1tYXRjaFs4XT9kYXRlLnNldFVUQ0Z1bGxZZWFyOmRhdGUuc2V0RnVsbFllYXIsdGltZVNldHRlcj1tYXRjaFs4XT9kYXRlLnNldFVUQ0hvdXJzOmRhdGUuc2V0SG91cnM7bWF0Y2hbOV0mJih0ekhvdXI9aW50KG1hdGNoWzldK21hdGNoWzEwXSksdHpNaW49aW50KG1hdGNoWzldK21hdGNoWzExXSkpLGRhdGVTZXR0ZXIuY2FsbChkYXRlLGludChtYXRjaFsxXSksaW50KG1hdGNoWzJdKS0xLGludChtYXRjaFszXSkpO3ZhciBoPWludChtYXRjaFs0XXx8MCktdHpIb3VyLG09aW50KG1hdGNoWzVdfHwwKS10ek1pbixzPWludChtYXRjaFs2XXx8MCksbXM9TWF0aC5yb3VuZCgxZTMqcGFyc2VGbG9hdCgiMC4iKyhtYXRjaFs3XXx8MCkpKTtyZXR1cm4gdGltZVNldHRlci5jYWxsKGRhdGUsaCxtLHMsbXMpLGRhdGV9cmV0dXJuIHN0cmluZ312YXIgUl9JU084NjAxX1NUUj0vXihcZHs0fSktPyhcZFxkKS0/KFxkXGQpKD86VChcZFxkKSg/Ojo/KFxkXGQpKD86Oj8oXGRcZCkoPzpcLihcZCspKT8pPyk/KFp8KFsrLV0pKFxkXGQpOj8oXGRcZCkpPyk/JC87cmV0dXJuIGZ1bmN0aW9uKGRhdGUsZm9ybWF0KXt2YXIgZm4sbWF0Y2gsdGV4dD0iIixwYXJ0cz1bXTtpZihmb3JtYXQ9Zm9ybWF0fHwibWVkaXVtRGF0ZSIsZm9ybWF0PSRsb2NhbGUuREFURVRJTUVfRk9STUFUU1tmb3JtYXRdfHxmb3JtYXQsaXNTdHJpbmcoZGF0ZSkmJihkYXRlPU5VTUJFUl9TVFJJTkcudGVzdChkYXRlKT9pbnQoZGF0ZSk6anNvblN0cmluZ1RvRGF0ZShkYXRlKSksaXNOdW1iZXIoZGF0ZSkmJihkYXRlPW5ldyBEYXRlKGRhdGUpKSwhaXNEYXRlKGRhdGUpKXJldHVybiBkYXRlO2Zvcig7Zm9ybWF0OyltYXRjaD1EQVRFX0ZPUk1BVFNfU1BMSVQuZXhlYyhmb3JtYXQpLG1hdGNoPyhwYXJ0cz1jb25jYXQocGFydHMsbWF0Y2gsMSksZm9ybWF0PXBhcnRzLnBvcCgpKToocGFydHMucHVzaChmb3JtYXQpLGZvcm1hdD1udWxsKTtyZXR1cm4gZm9yRWFjaChwYXJ0cyxmdW5jdGlvbih2YWx1ZSl7Zm49REFURV9GT1JNQVRTW3ZhbHVlXSx0ZXh0Kz1mbj9mbihkYXRlLCRsb2NhbGUuREFURVRJTUVfRk9STUFUUyk6dmFsdWUucmVwbGFjZSgvKF4nfCckKS9nLCIiKS5yZXBsYWNlKC8nJy9nLCInIil9KSx0ZXh0fX1mdW5jdGlvbiBqc29uRmlsdGVyKCl7cmV0dXJuIGZ1bmN0aW9uKG9iamVjdCl7cmV0dXJuIHRvSnNvbihvYmplY3QsITApfX1mdW5jdGlvbiBsaW1pdFRvRmlsdGVyKCl7cmV0dXJuIGZ1bmN0aW9uKGlucHV0LGxpbWl0KXtpZighaXNBcnJheShpbnB1dCkmJiFpc1N0cmluZyhpbnB1dCkpcmV0dXJuIGlucHV0O2lmKGxpbWl0PTEvMD09PU1hdGguYWJzKE51bWJlcihsaW1pdCkpP051bWJlcihsaW1pdCk6aW50KGxpbWl0KSxpc1N0cmluZyhpbnB1dCkpcmV0dXJuIGxpbWl0P2xpbWl0Pj0wP2lucHV0LnNsaWNlKDAsbGltaXQpOmlucHV0LnNsaWNlKGxpbWl0LGlucHV0Lmxlbmd0aCk6IiI7dmFyIGksbixvdXQ9W107Zm9yKGxpbWl0PmlucHV0Lmxlbmd0aD9saW1pdD1pbnB1dC5sZW5ndGg6bGltaXQ8LWlucHV0Lmxlbmd0aCYmKGxpbWl0PS1pbnB1dC5sZW5ndGgpLGxpbWl0PjA/KGk9MCxuPWxpbWl0KTooaT1pbnB1dC5sZW5ndGgrbGltaXQsbj1pbnB1dC5sZW5ndGgpO24+aTtpKyspb3V0LnB1c2goaW5wdXRbaV0pO3JldHVybiBvdXR9fWZ1bmN0aW9uIG9yZGVyQnlGaWx0ZXIoJHBhcnNlKXtyZXR1cm4gZnVuY3Rpb24oYXJyYXksc29ydFByZWRpY2F0ZSxyZXZlcnNlT3JkZXIpe2Z1bmN0aW9uIGNvbXBhcmF0b3IobzEsbzIpe2Zvcih2YXIgaT0wO2k8c29ydFByZWRpY2F0ZS5sZW5ndGg7aSsrKXt2YXIgY29tcD1zb3J0UHJlZGljYXRlW2ldKG8xLG8yKTtpZigwIT09Y29tcClyZXR1cm4gY29tcH1yZXR1cm4gMH1mdW5jdGlvbiByZXZlcnNlQ29tcGFyYXRvcihjb21wLGRlc2NlbmRpbmcpe3JldHVybiB0b0Jvb2xlYW4oZGVzY2VuZGluZyk/ZnVuY3Rpb24oYSxiKXtyZXR1cm4gY29tcChiLGEpfTpjb21wfWZ1bmN0aW9uIGNvbXBhcmUodjEsdjIpe3ZhciB0MT10eXBlb2YgdjEsdDI9dHlwZW9mIHYyO3JldHVybiB0MT09dDI/KGlzRGF0ZSh2MSkmJmlzRGF0ZSh2MikmJih2MT12MS52YWx1ZU9mKCksdjI9djIudmFsdWVPZigpKSwic3RyaW5nIj09dDEmJih2MT12MS50b0xvd2VyQ2FzZSgpLHYyPXYyLnRvTG93ZXJDYXNlKCkpLHYxPT09djI/MDp2Mj52MT8tMToxKTp0Mj50MT8tMToxfWlmKCFpc0FycmF5TGlrZShhcnJheSkpcmV0dXJuIGFycmF5O2lmKCFzb3J0UHJlZGljYXRlKXJldHVybiBhcnJheTtzb3J0UHJlZGljYXRlPWlzQXJyYXkoc29ydFByZWRpY2F0ZSk/c29ydFByZWRpY2F0ZTpbc29ydFByZWRpY2F0ZV0sc29ydFByZWRpY2F0ZT1tYXAoc29ydFByZWRpY2F0ZSxmdW5jdGlvbihwcmVkaWNhdGUpe3ZhciBkZXNjZW5kaW5nPSExLGdldD1wcmVkaWNhdGV8fGlkZW50aXR5O2lmKGlzU3RyaW5nKHByZWRpY2F0ZSkmJigoIisiPT1wcmVkaWNhdGUuY2hhckF0KDApfHwiLSI9PXByZWRpY2F0ZS5jaGFyQXQoMCkpJiYoZGVzY2VuZGluZz0iLSI9PXByZWRpY2F0ZS5jaGFyQXQoMCkscHJlZGljYXRlPXByZWRpY2F0ZS5zdWJzdHJpbmcoMSkpLGdldD0kcGFyc2UocHJlZGljYXRlKSxnZXQuY29uc3RhbnQpKXt2YXIga2V5PWdldCgpO3JldHVybiByZXZlcnNlQ29tcGFyYXRvcihmdW5jdGlvbihhLGIpe3JldHVybiBjb21wYXJlKGFba2V5XSxiW2tleV0pfSxkZXNjZW5kaW5nKX1yZXR1cm4gcmV2ZXJzZUNvbXBhcmF0b3IoZnVuY3Rpb24oYSxiKXtyZXR1cm4gY29tcGFyZShnZXQoYSksZ2V0KGIpKX0sZGVzY2VuZGluZyl9KTtmb3IodmFyIGFycmF5Q29weT1bXSxpPTA7aTxhcnJheS5sZW5ndGg7aSsrKWFycmF5Q29weS5wdXNoKGFycmF5W2ldKTtyZXR1cm4gYXJyYXlDb3B5LnNvcnQocmV2ZXJzZUNvbXBhcmF0b3IoY29tcGFyYXRvcixyZXZlcnNlT3JkZXIpKX19ZnVuY3Rpb24gbmdEaXJlY3RpdmUoZGlyZWN0aXZlKXtyZXR1cm4gaXNGdW5jdGlvbihkaXJlY3RpdmUpJiYoZGlyZWN0aXZlPXtsaW5rOmRpcmVjdGl2ZX0pLGRpcmVjdGl2ZS5yZXN0cmljdD1kaXJlY3RpdmUucmVzdHJpY3R8fCJBQyIsdmFsdWVGbihkaXJlY3RpdmUpfWZ1bmN0aW9uIEZvcm1Db250cm9sbGVyKGVsZW1lbnQsYXR0cnMsJHNjb3BlLCRhbmltYXRlKXtmdW5jdGlvbiB0b2dnbGVWYWxpZENzcyhpc1ZhbGlkLHZhbGlkYXRpb25FcnJvcktleSl7dmFsaWRhdGlvbkVycm9yS2V5PXZhbGlkYXRpb25FcnJvcktleT8iLSIrc25ha2VfY2FzZSh2YWxpZGF0aW9uRXJyb3JLZXksIi0iKToiIiwkYW5pbWF0ZS5zZXRDbGFzcyhlbGVtZW50LChpc1ZhbGlkP1ZBTElEX0NMQVNTOklOVkFMSURfQ0xBU1MpK3ZhbGlkYXRpb25FcnJvcktleSwoaXNWYWxpZD9JTlZBTElEX0NMQVNTOlZBTElEX0NMQVNTKSt2YWxpZGF0aW9uRXJyb3JLZXkpfXZhciBmb3JtPXRoaXMscGFyZW50Rm9ybT1lbGVtZW50LnBhcmVudCgpLmNvbnRyb2xsZXIoImZvcm0iKXx8bnVsbEZvcm1DdHJsLGludmFsaWRDb3VudD0wLGVycm9ycz1mb3JtLiRlcnJvcj17fSxjb250cm9scz1bXTtmb3JtLiRuYW1lPWF0dHJzLm5hbWV8fGF0dHJzLm5nRm9ybSxmb3JtLiRkaXJ0eT0hMSxmb3JtLiRwcmlzdGluZT0hMCxmb3JtLiR2YWxpZD0hMCxmb3JtLiRpbnZhbGlkPSExLHBhcmVudEZvcm0uJGFkZENvbnRyb2woZm9ybSksZWxlbWVudC5hZGRDbGFzcyhQUklTVElORV9DTEFTUyksdG9nZ2xlVmFsaWRDc3MoITApLGZvcm0uJGFkZENvbnRyb2w9ZnVuY3Rpb24oY29udHJvbCl7YXNzZXJ0Tm90SGFzT3duUHJvcGVydHkoY29udHJvbC4kbmFtZSwiaW5wdXQiKSxjb250cm9scy5wdXNoKGNvbnRyb2wpLGNvbnRyb2wuJG5hbWUmJihmb3JtW2NvbnRyb2wuJG5hbWVdPWNvbnRyb2wpfSxmb3JtLiRyZW1vdmVDb250cm9sPWZ1bmN0aW9uKGNvbnRyb2wpe2NvbnRyb2wuJG5hbWUmJmZvcm1bY29udHJvbC4kbmFtZV09PT1jb250cm9sJiZkZWxldGUgZm9ybVtjb250cm9sLiRuYW1lXSxmb3JFYWNoKGVycm9ycyxmdW5jdGlvbihxdWV1ZSx2YWxpZGF0aW9uVG9rZW4pe2Zvcm0uJHNldFZhbGlkaXR5KHZhbGlkYXRpb25Ub2tlbiwhMCxjb250cm9sKX0pLGFycmF5UmVtb3ZlKGNvbnRyb2xzLGNvbnRyb2wpfSxmb3JtLiRzZXRWYWxpZGl0eT1mdW5jdGlvbih2YWxpZGF0aW9uVG9rZW4saXNWYWxpZCxjb250cm9sKXt2YXIgcXVldWU9ZXJyb3JzW3ZhbGlkYXRpb25Ub2tlbl07aWYoaXNWYWxpZClxdWV1ZSYmKGFycmF5UmVtb3ZlKHF1ZXVlLGNvbnRyb2wpLHF1ZXVlLmxlbmd0aHx8KGludmFsaWRDb3VudC0tLGludmFsaWRDb3VudHx8KHRvZ2dsZVZhbGlkQ3NzKGlzVmFsaWQpLGZvcm0uJHZhbGlkPSEwLGZvcm0uJGludmFsaWQ9ITEpLGVycm9yc1t2YWxpZGF0aW9uVG9rZW5dPSExLHRvZ2dsZVZhbGlkQ3NzKCEwLHZhbGlkYXRpb25Ub2tlbikscGFyZW50Rm9ybS4kc2V0VmFsaWRpdHkodmFsaWRhdGlvblRva2VuLCEwLGZvcm0pKSk7ZWxzZXtpZihpbnZhbGlkQ291bnR8fHRvZ2dsZVZhbGlkQ3NzKGlzVmFsaWQpLHF1ZXVlKXtpZihpbmNsdWRlcyhxdWV1ZSxjb250cm9sKSlyZXR1cm59ZWxzZSBlcnJvcnNbdmFsaWRhdGlvblRva2VuXT1xdWV1ZT1bXSxpbnZhbGlkQ291bnQrKyx0b2dnbGVWYWxpZENzcyghMSx2YWxpZGF0aW9uVG9rZW4pLHBhcmVudEZvcm0uJHNldFZhbGlkaXR5KHZhbGlkYXRpb25Ub2tlbiwhMSxmb3JtKTtxdWV1ZS5wdXNoKGNvbnRyb2wpLGZvcm0uJHZhbGlkPSExLGZvcm0uJGludmFsaWQ9ITB9fSxmb3JtLiRzZXREaXJ0eT1mdW5jdGlvbigpeyRhbmltYXRlLnJlbW92ZUNsYXNzKGVsZW1lbnQsUFJJU1RJTkVfQ0xBU1MpLCRhbmltYXRlLmFkZENsYXNzKGVsZW1lbnQsRElSVFlfQ0xBU1MpLGZvcm0uJGRpcnR5PSEwLGZvcm0uJHByaXN0aW5lPSExLHBhcmVudEZvcm0uJHNldERpcnR5KCl9LGZvcm0uJHNldFByaXN0aW5lPWZ1bmN0aW9uKCl7JGFuaW1hdGUucmVtb3ZlQ2xhc3MoZWxlbWVudCxESVJUWV9DTEFTUyksJGFuaW1hdGUuYWRkQ2xhc3MoZWxlbWVudCxQUklTVElORV9DTEFTUyksZm9ybS4kZGlydHk9ITEsZm9ybS4kcHJpc3RpbmU9ITAsZm9yRWFjaChjb250cm9scyxmdW5jdGlvbihjb250cm9sKXtjb250cm9sLiRzZXRQcmlzdGluZSgpCn0pfX1mdW5jdGlvbiB2YWxpZGF0ZShjdHJsLHZhbGlkYXRvck5hbWUsdmFsaWRpdHksdmFsdWUpe3JldHVybiBjdHJsLiRzZXRWYWxpZGl0eSh2YWxpZGF0b3JOYW1lLHZhbGlkaXR5KSx2YWxpZGl0eT92YWx1ZTp1bmRlZmluZWR9ZnVuY3Rpb24gdGVzdEZsYWdzKHZhbGlkaXR5LGZsYWdzKXt2YXIgaSxmbGFnO2lmKGZsYWdzKWZvcihpPTA7aTxmbGFncy5sZW5ndGg7KytpKWlmKGZsYWc9ZmxhZ3NbaV0sdmFsaWRpdHlbZmxhZ10pcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gYWRkTmF0aXZlSHRtbDVWYWxpZGF0b3JzKGN0cmwsdmFsaWRhdG9yTmFtZSxiYWRGbGFncyxpZ25vcmVGbGFncyx2YWxpZGl0eSl7aWYoaXNPYmplY3QodmFsaWRpdHkpKXtjdHJsLiQkaGFzTmF0aXZlVmFsaWRhdG9ycz0hMDt2YXIgdmFsaWRhdG9yPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gY3RybC4kZXJyb3JbdmFsaWRhdG9yTmFtZV18fHRlc3RGbGFncyh2YWxpZGl0eSxpZ25vcmVGbGFncyl8fCF0ZXN0RmxhZ3ModmFsaWRpdHksYmFkRmxhZ3MpP3ZhbHVlOnZvaWQgY3RybC4kc2V0VmFsaWRpdHkodmFsaWRhdG9yTmFtZSwhMSl9O2N0cmwuJHBhcnNlcnMucHVzaCh2YWxpZGF0b3IpfX1mdW5jdGlvbiB0ZXh0SW5wdXRUeXBlKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKXt2YXIgdmFsaWRpdHk9ZWxlbWVudC5wcm9wKFZBTElESVRZX1NUQVRFX1BST1BFUlRZKSxwbGFjZWhvbGRlcj1lbGVtZW50WzBdLnBsYWNlaG9sZGVyLG5vZXZlbnQ9e30sdHlwZT1sb3dlcmNhc2UoZWxlbWVudFswXS50eXBlKTtpZihjdHJsLiQkdmFsaWRpdHlTdGF0ZT12YWxpZGl0eSwhJHNuaWZmZXIuYW5kcm9pZCl7dmFyIGNvbXBvc2luZz0hMTtlbGVtZW50Lm9uKCJjb21wb3NpdGlvbnN0YXJ0IixmdW5jdGlvbigpe2NvbXBvc2luZz0hMH0pLGVsZW1lbnQub24oImNvbXBvc2l0aW9uZW5kIixmdW5jdGlvbigpe2NvbXBvc2luZz0hMSxsaXN0ZW5lcigpfSl9dmFyIGxpc3RlbmVyPWZ1bmN0aW9uKGV2KXtpZighY29tcG9zaW5nKXt2YXIgdmFsdWU9ZWxlbWVudC52YWwoKTtpZihtc2llJiYiaW5wdXQiPT09KGV2fHxub2V2ZW50KS50eXBlJiZlbGVtZW50WzBdLnBsYWNlaG9sZGVyIT09cGxhY2Vob2xkZXIpcmV0dXJuIHZvaWQocGxhY2Vob2xkZXI9ZWxlbWVudFswXS5wbGFjZWhvbGRlcik7InBhc3N3b3JkIiE9PXR5cGUmJnRvQm9vbGVhbihhdHRyLm5nVHJpbXx8IlQiKSYmKHZhbHVlPXRyaW0odmFsdWUpKTt2YXIgcmV2YWxpZGF0ZT12YWxpZGl0eSYmY3RybC4kJGhhc05hdGl2ZVZhbGlkYXRvcnM7KGN0cmwuJHZpZXdWYWx1ZSE9PXZhbHVlfHwiIj09PXZhbHVlJiZyZXZhbGlkYXRlKSYmKHNjb3BlLiRyb290LiQkcGhhc2U/Y3RybC4kc2V0Vmlld1ZhbHVlKHZhbHVlKTpzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtjdHJsLiRzZXRWaWV3VmFsdWUodmFsdWUpfSkpfX07aWYoJHNuaWZmZXIuaGFzRXZlbnQoImlucHV0IikpZWxlbWVudC5vbigiaW5wdXQiLGxpc3RlbmVyKTtlbHNle3ZhciB0aW1lb3V0LGRlZmVyTGlzdGVuZXI9ZnVuY3Rpb24oKXt0aW1lb3V0fHwodGltZW91dD0kYnJvd3Nlci5kZWZlcihmdW5jdGlvbigpe2xpc3RlbmVyKCksdGltZW91dD1udWxsfSkpfTtlbGVtZW50Lm9uKCJrZXlkb3duIixmdW5jdGlvbihldmVudCl7dmFyIGtleT1ldmVudC5rZXlDb2RlOzkxPT09a2V5fHxrZXk+MTUmJjE5PmtleXx8a2V5Pj0zNyYmNDA+PWtleXx8ZGVmZXJMaXN0ZW5lcigpfSksJHNuaWZmZXIuaGFzRXZlbnQoInBhc3RlIikmJmVsZW1lbnQub24oInBhc3RlIGN1dCIsZGVmZXJMaXN0ZW5lcil9ZWxlbWVudC5vbigiY2hhbmdlIixsaXN0ZW5lciksY3RybC4kcmVuZGVyPWZ1bmN0aW9uKCl7ZWxlbWVudC52YWwoY3RybC4kaXNFbXB0eShjdHJsLiR2aWV3VmFsdWUpPyIiOmN0cmwuJHZpZXdWYWx1ZSl9O3ZhciBwYXR0ZXJuVmFsaWRhdG9yLG1hdGNoLHBhdHRlcm49YXR0ci5uZ1BhdHRlcm47aWYocGF0dGVybil7dmFyIHZhbGlkYXRlUmVnZXg9ZnVuY3Rpb24ocmVnZXhwLHZhbHVlKXtyZXR1cm4gdmFsaWRhdGUoY3RybCwicGF0dGVybiIsY3RybC4kaXNFbXB0eSh2YWx1ZSl8fHJlZ2V4cC50ZXN0KHZhbHVlKSx2YWx1ZSl9O21hdGNoPXBhdHRlcm4ubWF0Y2goL15cLyguKilcLyhbZ2ltXSopJC8pLG1hdGNoPyhwYXR0ZXJuPW5ldyBSZWdFeHAobWF0Y2hbMV0sbWF0Y2hbMl0pLHBhdHRlcm5WYWxpZGF0b3I9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWxpZGF0ZVJlZ2V4KHBhdHRlcm4sdmFsdWUpfSk6cGF0dGVyblZhbGlkYXRvcj1mdW5jdGlvbih2YWx1ZSl7dmFyIHBhdHRlcm5PYmo9c2NvcGUuJGV2YWwocGF0dGVybik7aWYoIXBhdHRlcm5PYmp8fCFwYXR0ZXJuT2JqLnRlc3QpdGhyb3cgbWluRXJyKCJuZ1BhdHRlcm4iKSgibm9yZWdleHAiLCJFeHBlY3RlZCB7MH0gdG8gYmUgYSBSZWdFeHAgYnV0IHdhcyB7MX0uIEVsZW1lbnQ6IHsyfSIscGF0dGVybixwYXR0ZXJuT2JqLHN0YXJ0aW5nVGFnKGVsZW1lbnQpKTtyZXR1cm4gdmFsaWRhdGVSZWdleChwYXR0ZXJuT2JqLHZhbHVlKX0sY3RybC4kZm9ybWF0dGVycy5wdXNoKHBhdHRlcm5WYWxpZGF0b3IpLGN0cmwuJHBhcnNlcnMucHVzaChwYXR0ZXJuVmFsaWRhdG9yKX1pZihhdHRyLm5nTWlubGVuZ3RoKXt2YXIgbWlubGVuZ3RoPWludChhdHRyLm5nTWlubGVuZ3RoKSxtaW5MZW5ndGhWYWxpZGF0b3I9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWxpZGF0ZShjdHJsLCJtaW5sZW5ndGgiLGN0cmwuJGlzRW1wdHkodmFsdWUpfHx2YWx1ZS5sZW5ndGg+PW1pbmxlbmd0aCx2YWx1ZSl9O2N0cmwuJHBhcnNlcnMucHVzaChtaW5MZW5ndGhWYWxpZGF0b3IpLGN0cmwuJGZvcm1hdHRlcnMucHVzaChtaW5MZW5ndGhWYWxpZGF0b3IpfWlmKGF0dHIubmdNYXhsZW5ndGgpe3ZhciBtYXhsZW5ndGg9aW50KGF0dHIubmdNYXhsZW5ndGgpLG1heExlbmd0aFZhbGlkYXRvcj1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZhbGlkYXRlKGN0cmwsIm1heGxlbmd0aCIsY3RybC4kaXNFbXB0eSh2YWx1ZSl8fHZhbHVlLmxlbmd0aDw9bWF4bGVuZ3RoLHZhbHVlKX07Y3RybC4kcGFyc2Vycy5wdXNoKG1heExlbmd0aFZhbGlkYXRvciksY3RybC4kZm9ybWF0dGVycy5wdXNoKG1heExlbmd0aFZhbGlkYXRvcil9fWZ1bmN0aW9uIG51bWJlcklucHV0VHlwZShzY29wZSxlbGVtZW50LGF0dHIsY3RybCwkc25pZmZlciwkYnJvd3Nlcil7aWYodGV4dElucHV0VHlwZShzY29wZSxlbGVtZW50LGF0dHIsY3RybCwkc25pZmZlciwkYnJvd3NlciksY3RybC4kcGFyc2Vycy5wdXNoKGZ1bmN0aW9uKHZhbHVlKXt2YXIgZW1wdHk9Y3RybC4kaXNFbXB0eSh2YWx1ZSk7cmV0dXJuIGVtcHR5fHxOVU1CRVJfUkVHRVhQLnRlc3QodmFsdWUpPyhjdHJsLiRzZXRWYWxpZGl0eSgibnVtYmVyIiwhMCksIiI9PT12YWx1ZT9udWxsOmVtcHR5P3ZhbHVlOnBhcnNlRmxvYXQodmFsdWUpKTooY3RybC4kc2V0VmFsaWRpdHkoIm51bWJlciIsITEpLHVuZGVmaW5lZCl9KSxhZGROYXRpdmVIdG1sNVZhbGlkYXRvcnMoY3RybCwibnVtYmVyIixudW1iZXJCYWRGbGFncyxudWxsLGN0cmwuJCR2YWxpZGl0eVN0YXRlKSxjdHJsLiRmb3JtYXR0ZXJzLnB1c2goZnVuY3Rpb24odmFsdWUpe3JldHVybiBjdHJsLiRpc0VtcHR5KHZhbHVlKT8iIjoiIit2YWx1ZX0pLGF0dHIubWluKXt2YXIgbWluVmFsaWRhdG9yPWZ1bmN0aW9uKHZhbHVlKXt2YXIgbWluPXBhcnNlRmxvYXQoYXR0ci5taW4pO3JldHVybiB2YWxpZGF0ZShjdHJsLCJtaW4iLGN0cmwuJGlzRW1wdHkodmFsdWUpfHx2YWx1ZT49bWluLHZhbHVlKX07Y3RybC4kcGFyc2Vycy5wdXNoKG1pblZhbGlkYXRvciksY3RybC4kZm9ybWF0dGVycy5wdXNoKG1pblZhbGlkYXRvcil9aWYoYXR0ci5tYXgpe3ZhciBtYXhWYWxpZGF0b3I9ZnVuY3Rpb24odmFsdWUpe3ZhciBtYXg9cGFyc2VGbG9hdChhdHRyLm1heCk7cmV0dXJuIHZhbGlkYXRlKGN0cmwsIm1heCIsY3RybC4kaXNFbXB0eSh2YWx1ZSl8fG1heD49dmFsdWUsdmFsdWUpfTtjdHJsLiRwYXJzZXJzLnB1c2gobWF4VmFsaWRhdG9yKSxjdHJsLiRmb3JtYXR0ZXJzLnB1c2gobWF4VmFsaWRhdG9yKX1jdHJsLiRmb3JtYXR0ZXJzLnB1c2goZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWxpZGF0ZShjdHJsLCJudW1iZXIiLGN0cmwuJGlzRW1wdHkodmFsdWUpfHxpc051bWJlcih2YWx1ZSksdmFsdWUpfSl9ZnVuY3Rpb24gdXJsSW5wdXRUeXBlKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKXt0ZXh0SW5wdXRUeXBlKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKTt2YXIgdXJsVmFsaWRhdG9yPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsaWRhdGUoY3RybCwidXJsIixjdHJsLiRpc0VtcHR5KHZhbHVlKXx8VVJMX1JFR0VYUC50ZXN0KHZhbHVlKSx2YWx1ZSl9O2N0cmwuJGZvcm1hdHRlcnMucHVzaCh1cmxWYWxpZGF0b3IpLGN0cmwuJHBhcnNlcnMucHVzaCh1cmxWYWxpZGF0b3IpfWZ1bmN0aW9uIGVtYWlsSW5wdXRUeXBlKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKXt0ZXh0SW5wdXRUeXBlKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKTt2YXIgZW1haWxWYWxpZGF0b3I9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWxpZGF0ZShjdHJsLCJlbWFpbCIsY3RybC4kaXNFbXB0eSh2YWx1ZSl8fEVNQUlMX1JFR0VYUC50ZXN0KHZhbHVlKSx2YWx1ZSl9O2N0cmwuJGZvcm1hdHRlcnMucHVzaChlbWFpbFZhbGlkYXRvciksY3RybC4kcGFyc2Vycy5wdXNoKGVtYWlsVmFsaWRhdG9yKX1mdW5jdGlvbiByYWRpb0lucHV0VHlwZShzY29wZSxlbGVtZW50LGF0dHIsY3RybCl7aXNVbmRlZmluZWQoYXR0ci5uYW1lKSYmZWxlbWVudC5hdHRyKCJuYW1lIixuZXh0VWlkKCkpLGVsZW1lbnQub24oImNsaWNrIixmdW5jdGlvbigpe2VsZW1lbnRbMF0uY2hlY2tlZCYmc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7Y3RybC4kc2V0Vmlld1ZhbHVlKGF0dHIudmFsdWUpfSl9KSxjdHJsLiRyZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdmFsdWU9YXR0ci52YWx1ZTtlbGVtZW50WzBdLmNoZWNrZWQ9dmFsdWU9PWN0cmwuJHZpZXdWYWx1ZX0sYXR0ci4kb2JzZXJ2ZSgidmFsdWUiLGN0cmwuJHJlbmRlcil9ZnVuY3Rpb24gY2hlY2tib3hJbnB1dFR5cGUoc2NvcGUsZWxlbWVudCxhdHRyLGN0cmwpe3ZhciB0cnVlVmFsdWU9YXR0ci5uZ1RydWVWYWx1ZSxmYWxzZVZhbHVlPWF0dHIubmdGYWxzZVZhbHVlO2lzU3RyaW5nKHRydWVWYWx1ZSl8fCh0cnVlVmFsdWU9ITApLGlzU3RyaW5nKGZhbHNlVmFsdWUpfHwoZmFsc2VWYWx1ZT0hMSksZWxlbWVudC5vbigiY2xpY2siLGZ1bmN0aW9uKCl7c2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7Y3RybC4kc2V0Vmlld1ZhbHVlKGVsZW1lbnRbMF0uY2hlY2tlZCl9KX0pLGN0cmwuJHJlbmRlcj1mdW5jdGlvbigpe2VsZW1lbnRbMF0uY2hlY2tlZD1jdHJsLiR2aWV3VmFsdWV9LGN0cmwuJGlzRW1wdHk9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZSE9PXRydWVWYWx1ZX0sY3RybC4kZm9ybWF0dGVycy5wdXNoKGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWU9PT10cnVlVmFsdWV9KSxjdHJsLiRwYXJzZXJzLnB1c2goZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZT90cnVlVmFsdWU6ZmFsc2VWYWx1ZX0pfWZ1bmN0aW9uIGNsYXNzRGlyZWN0aXZlKG5hbWUsc2VsZWN0b3Ipe3JldHVybiBuYW1lPSJuZ0NsYXNzIituYW1lLFsiJGFuaW1hdGUiLGZ1bmN0aW9uKCRhbmltYXRlKXtmdW5jdGlvbiBhcnJheURpZmZlcmVuY2UodG9rZW5zMSx0b2tlbnMyKXt2YXIgdmFsdWVzPVtdO291dGVyOmZvcih2YXIgaT0wO2k8dG9rZW5zMS5sZW5ndGg7aSsrKXtmb3IodmFyIHRva2VuPXRva2VuczFbaV0saj0wO2o8dG9rZW5zMi5sZW5ndGg7aisrKWlmKHRva2VuPT10b2tlbnMyW2pdKWNvbnRpbnVlIG91dGVyO3ZhbHVlcy5wdXNoKHRva2VuKX1yZXR1cm4gdmFsdWVzfWZ1bmN0aW9uIGFycmF5Q2xhc3NlcyhjbGFzc1ZhbCl7aWYoaXNBcnJheShjbGFzc1ZhbCkpcmV0dXJuIGNsYXNzVmFsO2lmKGlzU3RyaW5nKGNsYXNzVmFsKSlyZXR1cm4gY2xhc3NWYWwuc3BsaXQoIiAiKTtpZihpc09iamVjdChjbGFzc1ZhbCkpe3ZhciBjbGFzc2VzPVtdO3JldHVybiBmb3JFYWNoKGNsYXNzVmFsLGZ1bmN0aW9uKHYsayl7diYmKGNsYXNzZXM9Y2xhc3Nlcy5jb25jYXQoay5zcGxpdCgiICIpKSl9KSxjbGFzc2VzfXJldHVybiBjbGFzc1ZhbH1yZXR1cm57cmVzdHJpY3Q6IkFDIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cil7ZnVuY3Rpb24gYWRkQ2xhc3NlcyhjbGFzc2VzKXt2YXIgbmV3Q2xhc3Nlcz1kaWdlc3RDbGFzc0NvdW50cyhjbGFzc2VzLDEpO2F0dHIuJGFkZENsYXNzKG5ld0NsYXNzZXMpfWZ1bmN0aW9uIHJlbW92ZUNsYXNzZXMoY2xhc3Nlcyl7dmFyIG5ld0NsYXNzZXM9ZGlnZXN0Q2xhc3NDb3VudHMoY2xhc3NlcywtMSk7YXR0ci4kcmVtb3ZlQ2xhc3MobmV3Q2xhc3Nlcyl9ZnVuY3Rpb24gZGlnZXN0Q2xhc3NDb3VudHMoY2xhc3Nlcyxjb3VudCl7dmFyIGNsYXNzQ291bnRzPWVsZW1lbnQuZGF0YSgiJGNsYXNzQ291bnRzIil8fHt9LGNsYXNzZXNUb1VwZGF0ZT1bXTtyZXR1cm4gZm9yRWFjaChjbGFzc2VzLGZ1bmN0aW9uKGNsYXNzTmFtZSl7KGNvdW50PjB8fGNsYXNzQ291bnRzW2NsYXNzTmFtZV0pJiYoY2xhc3NDb3VudHNbY2xhc3NOYW1lXT0oY2xhc3NDb3VudHNbY2xhc3NOYW1lXXx8MCkrY291bnQsY2xhc3NDb3VudHNbY2xhc3NOYW1lXT09PSsoY291bnQ+MCkmJmNsYXNzZXNUb1VwZGF0ZS5wdXNoKGNsYXNzTmFtZSkpfSksZWxlbWVudC5kYXRhKCIkY2xhc3NDb3VudHMiLGNsYXNzQ291bnRzKSxjbGFzc2VzVG9VcGRhdGUuam9pbigiICIpfWZ1bmN0aW9uIHVwZGF0ZUNsYXNzZXMob2xkQ2xhc3NlcyxuZXdDbGFzc2VzKXt2YXIgdG9BZGQ9YXJyYXlEaWZmZXJlbmNlKG5ld0NsYXNzZXMsb2xkQ2xhc3NlcyksdG9SZW1vdmU9YXJyYXlEaWZmZXJlbmNlKG9sZENsYXNzZXMsbmV3Q2xhc3Nlcyk7dG9SZW1vdmU9ZGlnZXN0Q2xhc3NDb3VudHModG9SZW1vdmUsLTEpLHRvQWRkPWRpZ2VzdENsYXNzQ291bnRzKHRvQWRkLDEpLDA9PT10b0FkZC5sZW5ndGg/JGFuaW1hdGUucmVtb3ZlQ2xhc3MoZWxlbWVudCx0b1JlbW92ZSk6MD09PXRvUmVtb3ZlLmxlbmd0aD8kYW5pbWF0ZS5hZGRDbGFzcyhlbGVtZW50LHRvQWRkKTokYW5pbWF0ZS5zZXRDbGFzcyhlbGVtZW50LHRvQWRkLHRvUmVtb3ZlKX1mdW5jdGlvbiBuZ0NsYXNzV2F0Y2hBY3Rpb24obmV3VmFsKXtpZihzZWxlY3Rvcj09PSEwfHxzY29wZS4kaW5kZXglMj09PXNlbGVjdG9yKXt2YXIgbmV3Q2xhc3Nlcz1hcnJheUNsYXNzZXMobmV3VmFsfHxbXSk7aWYob2xkVmFsKXtpZighZXF1YWxzKG5ld1ZhbCxvbGRWYWwpKXt2YXIgb2xkQ2xhc3Nlcz1hcnJheUNsYXNzZXMob2xkVmFsKTt1cGRhdGVDbGFzc2VzKG9sZENsYXNzZXMsbmV3Q2xhc3Nlcyl9fWVsc2UgYWRkQ2xhc3NlcyhuZXdDbGFzc2VzKX1vbGRWYWw9c2hhbGxvd0NvcHkobmV3VmFsKX12YXIgb2xkVmFsO3Njb3BlLiR3YXRjaChhdHRyW25hbWVdLG5nQ2xhc3NXYXRjaEFjdGlvbiwhMCksYXR0ci4kb2JzZXJ2ZSgiY2xhc3MiLGZ1bmN0aW9uKCl7bmdDbGFzc1dhdGNoQWN0aW9uKHNjb3BlLiRldmFsKGF0dHJbbmFtZV0pKX0pLCJuZ0NsYXNzIiE9PW5hbWUmJnNjb3BlLiR3YXRjaCgiJGluZGV4IixmdW5jdGlvbigkaW5kZXgsb2xkJGluZGV4KXt2YXIgbW9kPTEmJGluZGV4O2lmKG1vZCE9PSgxJm9sZCRpbmRleCkpe3ZhciBjbGFzc2VzPWFycmF5Q2xhc3NlcyhzY29wZS4kZXZhbChhdHRyW25hbWVdKSk7bW9kPT09c2VsZWN0b3I/YWRkQ2xhc3NlcyhjbGFzc2VzKTpyZW1vdmVDbGFzc2VzKGNsYXNzZXMpfX0pfX19XX12YXIgVkFMSURJVFlfU1RBVEVfUFJPUEVSVFk9InZhbGlkaXR5Iixsb3dlcmNhc2U9ZnVuY3Rpb24oc3RyaW5nKXtyZXR1cm4gaXNTdHJpbmcoc3RyaW5nKT9zdHJpbmcudG9Mb3dlckNhc2UoKTpzdHJpbmd9LGhhc093blByb3BlcnR5PU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksdXBwZXJjYXNlPWZ1bmN0aW9uKHN0cmluZyl7cmV0dXJuIGlzU3RyaW5nKHN0cmluZyk/c3RyaW5nLnRvVXBwZXJDYXNlKCk6c3RyaW5nfSxtYW51YWxMb3dlcmNhc2U9ZnVuY3Rpb24ocyl7cmV0dXJuIGlzU3RyaW5nKHMpP3MucmVwbGFjZSgvW0EtWl0vZyxmdW5jdGlvbihjaCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoMzJ8Y2guY2hhckNvZGVBdCgwKSl9KTpzfSxtYW51YWxVcHBlcmNhc2U9ZnVuY3Rpb24ocyl7cmV0dXJuIGlzU3RyaW5nKHMpP3MucmVwbGFjZSgvW2Etel0vZyxmdW5jdGlvbihjaCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoLTMzJmNoLmNoYXJDb2RlQXQoMCkpfSk6c307ImkiIT09IkkiLnRvTG93ZXJDYXNlKCkmJihsb3dlcmNhc2U9bWFudWFsTG93ZXJjYXNlLHVwcGVyY2FzZT1tYW51YWxVcHBlcmNhc2UpO3ZhciBtc2llLGpxTGl0ZSxqUXVlcnksYW5ndWxhck1vZHVsZSxub2RlTmFtZV8sc2xpY2U9W10uc2xpY2UscHVzaD1bXS5wdXNoLHRvU3RyaW5nPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsbmdNaW5FcnI9bWluRXJyKCJuZyIpLGFuZ3VsYXI9d2luZG93LmFuZ3VsYXJ8fCh3aW5kb3cuYW5ndWxhcj17fSksdWlkPVsiMCIsIjAiLCIwIl07bXNpZT1pbnQoKC9tc2llIChcZCspLy5leGVjKGxvd2VyY2FzZShuYXZpZ2F0b3IudXNlckFnZW50KSl8fFtdKVsxXSksaXNOYU4obXNpZSkmJihtc2llPWludCgoL3RyaWRlbnRcLy4qOyBydjooXGQrKS8uZXhlYyhsb3dlcmNhc2UobmF2aWdhdG9yLnVzZXJBZ2VudCkpfHxbXSlbMV0pKSxub29wLiRpbmplY3Q9W10saWRlbnRpdHkuJGluamVjdD1bXTt2YXIgaXNBcnJheT1mdW5jdGlvbigpe3JldHVybiBpc0Z1bmN0aW9uKEFycmF5LmlzQXJyYXkpP0FycmF5LmlzQXJyYXk6ZnVuY3Rpb24odmFsdWUpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT10b1N0cmluZy5jYWxsKHZhbHVlKX19KCksdHJpbT1mdW5jdGlvbigpe3JldHVybiBTdHJpbmcucHJvdG90eXBlLnRyaW0/ZnVuY3Rpb24odmFsdWUpe3JldHVybiBpc1N0cmluZyh2YWx1ZSk/dmFsdWUudHJpbSgpOnZhbHVlfTpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGlzU3RyaW5nKHZhbHVlKT92YWx1ZS5yZXBsYWNlKC9eXHNccyovLCIiKS5yZXBsYWNlKC9cc1xzKiQvLCIiKTp2YWx1ZX19KCk7bm9kZU5hbWVfPTk+bXNpZT9mdW5jdGlvbihlbGVtZW50KXtyZXR1cm4gZWxlbWVudD1lbGVtZW50Lm5vZGVOYW1lP2VsZW1lbnQ6ZWxlbWVudFswXSxlbGVtZW50LnNjb3BlTmFtZSYmIkhUTUwiIT1lbGVtZW50LnNjb3BlTmFtZT91cHBlcmNhc2UoZWxlbWVudC5zY29wZU5hbWUrIjoiK2VsZW1lbnQubm9kZU5hbWUpOmVsZW1lbnQubm9kZU5hbWV9OmZ1bmN0aW9uKGVsZW1lbnQpe3JldHVybiBlbGVtZW50Lm5vZGVOYW1lP2VsZW1lbnQubm9kZU5hbWU6ZWxlbWVudFswXS5ub2RlTmFtZX07dmFyIGNzcD1mdW5jdGlvbigpe2lmKGlzRGVmaW5lZChjc3AuaXNBY3RpdmVfKSlyZXR1cm4gY3NwLmlzQWN0aXZlXzt2YXIgYWN0aXZlPSEoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIltuZy1jc3BdIikmJiFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJbZGF0YS1uZy1jc3BdIikpO2lmKCFhY3RpdmUpdHJ5e25ldyBGdW5jdGlvbigiIil9Y2F0Y2goZSl7YWN0aXZlPSEwfXJldHVybiBjc3AuaXNBY3RpdmVfPWFjdGl2ZX0sU05BS0VfQ0FTRV9SRUdFWFA9L1tBLVpdL2csdmVyc2lvbj17ZnVsbDoiMS4yLjI1IixtYWpvcjoxLG1pbm9yOjIsZG90OjI1LGNvZGVOYW1lOiJoeXBub3RpYy1nZXN0aWN1bGF0aW9uIn07SlFMaXRlLmV4cGFuZG89Im5nMzM5Ijt2YXIganFDYWNoZT1KUUxpdGUuY2FjaGU9e30sanFJZD0xLGFkZEV2ZW50TGlzdGVuZXJGbj13aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbihlbGVtZW50LHR5cGUsZm4pe2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLGZuLCExKX06ZnVuY3Rpb24oZWxlbWVudCx0eXBlLGZuKXtlbGVtZW50LmF0dGFjaEV2ZW50KCJvbiIrdHlwZSxmbil9LHJlbW92ZUV2ZW50TGlzdGVuZXJGbj13aW5kb3cuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbihlbGVtZW50LHR5cGUsZm4pe2VsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLGZuLCExKX06ZnVuY3Rpb24oZWxlbWVudCx0eXBlLGZuKXtlbGVtZW50LmRldGFjaEV2ZW50KCJvbiIrdHlwZSxmbil9LFNQRUNJQUxfQ0hBUlNfUkVHRVhQPShKUUxpdGUuX2RhdGE9ZnVuY3Rpb24obm9kZSl7cmV0dXJuIHRoaXMuY2FjaGVbbm9kZVt0aGlzLmV4cGFuZG9dXXx8e319LC8oW1w6XC1cX10rKC4pKS9nKSxNT1pfSEFDS19SRUdFWFA9L15tb3ooW0EtWl0pLyxqcUxpdGVNaW5FcnI9bWluRXJyKCJqcUxpdGUiKSxTSU5HTEVfVEFHX1JFR0VYUD0vXjwoXHcrKVxzKlwvPz4oPzo8XC9cMT58KSQvLEhUTUxfUkVHRVhQPS88fCYjP1x3KzsvLFRBR19OQU1FX1JFR0VYUD0vPChbXHc6XSspLyxYSFRNTF9UQUdfUkVHRVhQPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcdzpdKylbXj5dKilcLz4vZ2ksd3JhcE1hcD17b3B0aW9uOlsxLCc8c2VsZWN0IG11bHRpcGxlPSJtdWx0aXBsZSI+JywiPC9zZWxlY3Q+Il0sdGhlYWQ6WzEsIjx0YWJsZT4iLCI8L3RhYmxlPiJdLGNvbDpbMiwiPHRhYmxlPjxjb2xncm91cD4iLCI8L2NvbGdyb3VwPjwvdGFibGU+Il0sdHI6WzIsIjx0YWJsZT48dGJvZHk+IiwiPC90Ym9keT48L3RhYmxlPiJdLHRkOlszLCI8dGFibGU+PHRib2R5Pjx0cj4iLCI8L3RyPjwvdGJvZHk+PC90YWJsZT4iXSxfZGVmYXVsdDpbMCwiIiwiIl19O3dyYXBNYXAub3B0Z3JvdXA9d3JhcE1hcC5vcHRpb24sd3JhcE1hcC50Ym9keT13cmFwTWFwLnRmb290PXdyYXBNYXAuY29sZ3JvdXA9d3JhcE1hcC5jYXB0aW9uPXdyYXBNYXAudGhlYWQsd3JhcE1hcC50aD13cmFwTWFwLnRkO3ZhciBKUUxpdGVQcm90b3R5cGU9SlFMaXRlLnByb3RvdHlwZT17cmVhZHk6ZnVuY3Rpb24oZm4pe2Z1bmN0aW9uIHRyaWdnZXIoKXtmaXJlZHx8KGZpcmVkPSEwLGZuKCkpfXZhciBmaXJlZD0hMTsiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZT9zZXRUaW1lb3V0KHRyaWdnZXIpOih0aGlzLm9uKCJET01Db250ZW50TG9hZGVkIix0cmlnZ2VyKSxKUUxpdGUod2luZG93KS5vbigibG9hZCIsdHJpZ2dlcikpfSx0b1N0cmluZzpmdW5jdGlvbigpe3ZhciB2YWx1ZT1bXTtyZXR1cm4gZm9yRWFjaCh0aGlzLGZ1bmN0aW9uKGUpe3ZhbHVlLnB1c2goIiIrZSl9KSwiWyIrdmFsdWUuam9pbigiLCAiKSsiXSJ9LGVxOmZ1bmN0aW9uKGluZGV4KXtyZXR1cm4ganFMaXRlKGluZGV4Pj0wP3RoaXNbaW5kZXhdOnRoaXNbdGhpcy5sZW5ndGgraW5kZXhdKX0sbGVuZ3RoOjAscHVzaDpwdXNoLHNvcnQ6W10uc29ydCxzcGxpY2U6W10uc3BsaWNlfSxCT09MRUFOX0FUVFI9e307Zm9yRWFjaCgibXVsdGlwbGUsc2VsZWN0ZWQsY2hlY2tlZCxkaXNhYmxlZCxyZWFkT25seSxyZXF1aXJlZCxvcGVuIi5zcGxpdCgiLCIpLGZ1bmN0aW9uKHZhbHVlKXtCT09MRUFOX0FUVFJbbG93ZXJjYXNlKHZhbHVlKV09dmFsdWV9KTt2YXIgQk9PTEVBTl9FTEVNRU5UUz17fTtmb3JFYWNoKCJpbnB1dCxzZWxlY3Qsb3B0aW9uLHRleHRhcmVhLGJ1dHRvbixmb3JtLGRldGFpbHMiLnNwbGl0KCIsIiksZnVuY3Rpb24odmFsdWUpe0JPT0xFQU5fRUxFTUVOVFNbdXBwZXJjYXNlKHZhbHVlKV09ITB9KSxmb3JFYWNoKHtkYXRhOmpxTGl0ZURhdGEscmVtb3ZlRGF0YTpqcUxpdGVSZW1vdmVEYXRhfSxmdW5jdGlvbihmbixuYW1lKXtKUUxpdGVbbmFtZV09Zm59KSxmb3JFYWNoKHtkYXRhOmpxTGl0ZURhdGEsaW5oZXJpdGVkRGF0YTpqcUxpdGVJbmhlcml0ZWREYXRhLHNjb3BlOmZ1bmN0aW9uKGVsZW1lbnQpe3JldHVybiBqcUxpdGUuZGF0YShlbGVtZW50LCIkc2NvcGUiKXx8anFMaXRlSW5oZXJpdGVkRGF0YShlbGVtZW50LnBhcmVudE5vZGV8fGVsZW1lbnQsWyIkaXNvbGF0ZVNjb3BlIiwiJHNjb3BlIl0pfSxpc29sYXRlU2NvcGU6ZnVuY3Rpb24oZWxlbWVudCl7cmV0dXJuIGpxTGl0ZS5kYXRhKGVsZW1lbnQsIiRpc29sYXRlU2NvcGUiKXx8anFMaXRlLmRhdGEoZWxlbWVudCwiJGlzb2xhdGVTY29wZU5vVGVtcGxhdGUiKX0sY29udHJvbGxlcjpqcUxpdGVDb250cm9sbGVyLGluamVjdG9yOmZ1bmN0aW9uKGVsZW1lbnQpe3JldHVybiBqcUxpdGVJbmhlcml0ZWREYXRhKGVsZW1lbnQsIiRpbmplY3RvciIpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGVsZW1lbnQsbmFtZSl7ZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUobmFtZSl9LGhhc0NsYXNzOmpxTGl0ZUhhc0NsYXNzLGNzczpmdW5jdGlvbihlbGVtZW50LG5hbWUsdmFsdWUpe2lmKG5hbWU9Y2FtZWxDYXNlKG5hbWUpLCFpc0RlZmluZWQodmFsdWUpKXt2YXIgdmFsO3JldHVybiA4Pj1tc2llJiYodmFsPWVsZW1lbnQuY3VycmVudFN0eWxlJiZlbGVtZW50LmN1cnJlbnRTdHlsZVtuYW1lXSwiIj09PXZhbCYmKHZhbD0iYXV0byIpKSx2YWw9dmFsfHxlbGVtZW50LnN0eWxlW25hbWVdLDg+PW1zaWUmJih2YWw9IiI9PT12YWw/dW5kZWZpbmVkOnZhbCksdmFsfWVsZW1lbnQuc3R5bGVbbmFtZV09dmFsdWV9LGF0dHI6ZnVuY3Rpb24oZWxlbWVudCxuYW1lLHZhbHVlKXt2YXIgbG93ZXJjYXNlZE5hbWU9bG93ZXJjYXNlKG5hbWUpO2lmKEJPT0xFQU5fQVRUUltsb3dlcmNhc2VkTmFtZV0pe2lmKCFpc0RlZmluZWQodmFsdWUpKXJldHVybiBlbGVtZW50W25hbWVdfHwoZWxlbWVudC5hdHRyaWJ1dGVzLmdldE5hbWVkSXRlbShuYW1lKXx8bm9vcCkuc3BlY2lmaWVkP2xvd2VyY2FzZWROYW1lOnVuZGVmaW5lZDt2YWx1ZT8oZWxlbWVudFtuYW1lXT0hMCxlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLGxvd2VyY2FzZWROYW1lKSk6KGVsZW1lbnRbbmFtZV09ITEsZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUobG93ZXJjYXNlZE5hbWUpKX1lbHNlIGlmKGlzRGVmaW5lZCh2YWx1ZSkpZWxlbWVudC5zZXRBdHRyaWJ1dGUobmFtZSx2YWx1ZSk7ZWxzZSBpZihlbGVtZW50LmdldEF0dHJpYnV0ZSl7dmFyIHJldD1lbGVtZW50LmdldEF0dHJpYnV0ZShuYW1lLDIpO3JldHVybiBudWxsPT09cmV0P3VuZGVmaW5lZDpyZXR9fSxwcm9wOmZ1bmN0aW9uKGVsZW1lbnQsbmFtZSx2YWx1ZSl7cmV0dXJuIGlzRGVmaW5lZCh2YWx1ZSk/dm9pZChlbGVtZW50W25hbWVdPXZhbHVlKTplbGVtZW50W25hbWVdfSx0ZXh0OmZ1bmN0aW9uKCl7ZnVuY3Rpb24gZ2V0VGV4dChlbGVtZW50LHZhbHVlKXt2YXIgdGV4dFByb3A9Tk9ERV9UWVBFX1RFWFRfUFJPUEVSVFlbZWxlbWVudC5ub2RlVHlwZV07cmV0dXJuIGlzVW5kZWZpbmVkKHZhbHVlKT90ZXh0UHJvcD9lbGVtZW50W3RleHRQcm9wXToiIjp2b2lkKGVsZW1lbnRbdGV4dFByb3BdPXZhbHVlKX12YXIgTk9ERV9UWVBFX1RFWFRfUFJPUEVSVFk9W107cmV0dXJuIDk+bXNpZT8oTk9ERV9UWVBFX1RFWFRfUFJPUEVSVFlbMV09ImlubmVyVGV4dCIsTk9ERV9UWVBFX1RFWFRfUFJPUEVSVFlbM109Im5vZGVWYWx1ZSIpOk5PREVfVFlQRV9URVhUX1BST1BFUlRZWzFdPU5PREVfVFlQRV9URVhUX1BST1BFUlRZWzNdPSJ0ZXh0Q29udGVudCIsZ2V0VGV4dC4kZHY9IiIsZ2V0VGV4dH0oKSx2YWw6ZnVuY3Rpb24oZWxlbWVudCx2YWx1ZSl7aWYoaXNVbmRlZmluZWQodmFsdWUpKXtpZigiU0VMRUNUIj09PW5vZGVOYW1lXyhlbGVtZW50KSYmZWxlbWVudC5tdWx0aXBsZSl7dmFyIHJlc3VsdD1bXTtyZXR1cm4gZm9yRWFjaChlbGVtZW50Lm9wdGlvbnMsZnVuY3Rpb24ob3B0aW9uKXtvcHRpb24uc2VsZWN0ZWQmJnJlc3VsdC5wdXNoKG9wdGlvbi52YWx1ZXx8b3B0aW9uLnRleHQpfSksMD09PXJlc3VsdC5sZW5ndGg/bnVsbDpyZXN1bHR9cmV0dXJuIGVsZW1lbnQudmFsdWV9ZWxlbWVudC52YWx1ZT12YWx1ZX0saHRtbDpmdW5jdGlvbihlbGVtZW50LHZhbHVlKXtpZihpc1VuZGVmaW5lZCh2YWx1ZSkpcmV0dXJuIGVsZW1lbnQuaW5uZXJIVE1MO2Zvcih2YXIgaT0wLGNoaWxkTm9kZXM9ZWxlbWVudC5jaGlsZE5vZGVzO2k8Y2hpbGROb2Rlcy5sZW5ndGg7aSsrKWpxTGl0ZURlYWxvYyhjaGlsZE5vZGVzW2ldKTtlbGVtZW50LmlubmVySFRNTD12YWx1ZX0sZW1wdHk6anFMaXRlRW1wdHl9LGZ1bmN0aW9uKGZuLG5hbWUpe0pRTGl0ZS5wcm90b3R5cGVbbmFtZV09ZnVuY3Rpb24oYXJnMSxhcmcyKXt2YXIgaSxrZXksbm9kZUNvdW50PXRoaXMubGVuZ3RoO2lmKGZuIT09anFMaXRlRW1wdHkmJigyPT1mbi5sZW5ndGgmJmZuIT09anFMaXRlSGFzQ2xhc3MmJmZuIT09anFMaXRlQ29udHJvbGxlcj9hcmcxOmFyZzIpPT09dW5kZWZpbmVkKXtpZihpc09iamVjdChhcmcxKSl7Zm9yKGk9MDtub2RlQ291bnQ+aTtpKyspaWYoZm49PT1qcUxpdGVEYXRhKWZuKHRoaXNbaV0sYXJnMSk7ZWxzZSBmb3Ioa2V5IGluIGFyZzEpZm4odGhpc1tpXSxrZXksYXJnMVtrZXldKTtyZXR1cm4gdGhpc31mb3IodmFyIHZhbHVlPWZuLiRkdixqaj12YWx1ZT09PXVuZGVmaW5lZD9NYXRoLm1pbihub2RlQ291bnQsMSk6bm9kZUNvdW50LGo9MDtqaj5qO2orKyl7dmFyIG5vZGVWYWx1ZT1mbih0aGlzW2pdLGFyZzEsYXJnMik7dmFsdWU9dmFsdWU/dmFsdWUrbm9kZVZhbHVlOm5vZGVWYWx1ZX1yZXR1cm4gdmFsdWV9Zm9yKGk9MDtub2RlQ291bnQ+aTtpKyspZm4odGhpc1tpXSxhcmcxLGFyZzIpO3JldHVybiB0aGlzfX0pLGZvckVhY2goe3JlbW92ZURhdGE6anFMaXRlUmVtb3ZlRGF0YSxkZWFsb2M6anFMaXRlRGVhbG9jLG9uOmZ1bmN0aW9uIG9uRm4oZWxlbWVudCx0eXBlLGZuLHVuc3VwcG9ydGVkKXtpZihpc0RlZmluZWQodW5zdXBwb3J0ZWQpKXRocm93IGpxTGl0ZU1pbkVycigib25hcmdzIiwianFMaXRlI29uKCkgZG9lcyBub3Qgc3VwcG9ydCB0aGUgYHNlbGVjdG9yYCBvciBgZXZlbnREYXRhYCBwYXJhbWV0ZXJzIik7dmFyIGV2ZW50cz1qcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiZXZlbnRzIiksaGFuZGxlPWpxTGl0ZUV4cGFuZG9TdG9yZShlbGVtZW50LCJoYW5kbGUiKTtldmVudHN8fGpxTGl0ZUV4cGFuZG9TdG9yZShlbGVtZW50LCJldmVudHMiLGV2ZW50cz17fSksaGFuZGxlfHxqcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiaGFuZGxlIixoYW5kbGU9Y3JlYXRlRXZlbnRIYW5kbGVyKGVsZW1lbnQsZXZlbnRzKSksZm9yRWFjaCh0eXBlLnNwbGl0KCIgIiksZnVuY3Rpb24odHlwZSl7dmFyIGV2ZW50Rm5zPWV2ZW50c1t0eXBlXTtpZighZXZlbnRGbnMpe2lmKCJtb3VzZWVudGVyIj09dHlwZXx8Im1vdXNlbGVhdmUiPT10eXBlKXt2YXIgY29udGFpbnM9ZG9jdW1lbnQuYm9keS5jb250YWluc3x8ZG9jdW1lbnQuYm9keS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj9mdW5jdGlvbihhLGIpe3ZhciBhZG93bj05PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLGJ1cD1iJiZiLnBhcmVudE5vZGU7cmV0dXJuIGE9PT1idXB8fCEoIWJ1cHx8MSE9PWJ1cC5ub2RlVHlwZXx8IShhZG93bi5jb250YWlucz9hZG93bi5jb250YWlucyhidXApOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24mJjE2JmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYnVwKSkpfTpmdW5jdGlvbihhLGIpe2lmKGIpZm9yKDtiPWIucGFyZW50Tm9kZTspaWYoYj09PWEpcmV0dXJuITA7cmV0dXJuITF9O2V2ZW50c1t0eXBlXT1bXTt2YXIgZXZlbnRtYXA9e21vdXNlbGVhdmU6Im1vdXNlb3V0Iixtb3VzZWVudGVyOiJtb3VzZW92ZXIifTtvbkZuKGVsZW1lbnQsZXZlbnRtYXBbdHlwZV0sZnVuY3Rpb24oZXZlbnQpe3ZhciB0YXJnZXQ9dGhpcyxyZWxhdGVkPWV2ZW50LnJlbGF0ZWRUYXJnZXQ7KCFyZWxhdGVkfHxyZWxhdGVkIT09dGFyZ2V0JiYhY29udGFpbnModGFyZ2V0LHJlbGF0ZWQpKSYmaGFuZGxlKGV2ZW50LHR5cGUpfSl9ZWxzZSBhZGRFdmVudExpc3RlbmVyRm4oZWxlbWVudCx0eXBlLGhhbmRsZSksZXZlbnRzW3R5cGVdPVtdO2V2ZW50Rm5zPWV2ZW50c1t0eXBlXX1ldmVudEZucy5wdXNoKGZuKX0pfSxvZmY6anFMaXRlT2ZmLG9uZTpmdW5jdGlvbihlbGVtZW50LHR5cGUsZm4pe2VsZW1lbnQ9anFMaXRlKGVsZW1lbnQpLGVsZW1lbnQub24odHlwZSxmdW5jdGlvbiBvbkZuKCl7ZWxlbWVudC5vZmYodHlwZSxmbiksZWxlbWVudC5vZmYodHlwZSxvbkZuKX0pLGVsZW1lbnQub24odHlwZSxmbil9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKGVsZW1lbnQscmVwbGFjZU5vZGUpe3ZhciBpbmRleCxwYXJlbnQ9ZWxlbWVudC5wYXJlbnROb2RlO2pxTGl0ZURlYWxvYyhlbGVtZW50KSxmb3JFYWNoKG5ldyBKUUxpdGUocmVwbGFjZU5vZGUpLGZ1bmN0aW9uKG5vZGUpe2luZGV4P3BhcmVudC5pbnNlcnRCZWZvcmUobm9kZSxpbmRleC5uZXh0U2libGluZyk6cGFyZW50LnJlcGxhY2VDaGlsZChub2RlLGVsZW1lbnQpLGluZGV4PW5vZGV9KX0sY2hpbGRyZW46ZnVuY3Rpb24oZWxlbWVudCl7dmFyIGNoaWxkcmVuPVtdO3JldHVybiBmb3JFYWNoKGVsZW1lbnQuY2hpbGROb2RlcyxmdW5jdGlvbihlbGVtZW50KXsxPT09ZWxlbWVudC5ub2RlVHlwZSYmY2hpbGRyZW4ucHVzaChlbGVtZW50KX0pLGNoaWxkcmVufSxjb250ZW50czpmdW5jdGlvbihlbGVtZW50KXtyZXR1cm4gZWxlbWVudC5jb250ZW50RG9jdW1lbnR8fGVsZW1lbnQuY2hpbGROb2Rlc3x8W119LGFwcGVuZDpmdW5jdGlvbihlbGVtZW50LG5vZGUpe2ZvckVhY2gobmV3IEpRTGl0ZShub2RlKSxmdW5jdGlvbihjaGlsZCl7KDE9PT1lbGVtZW50Lm5vZGVUeXBlfHwxMT09PWVsZW1lbnQubm9kZVR5cGUpJiZlbGVtZW50LmFwcGVuZENoaWxkKGNoaWxkKX0pfSxwcmVwZW5kOmZ1bmN0aW9uKGVsZW1lbnQsbm9kZSl7aWYoMT09PWVsZW1lbnQubm9kZVR5cGUpe3ZhciBpbmRleD1lbGVtZW50LmZpcnN0Q2hpbGQ7Zm9yRWFjaChuZXcgSlFMaXRlKG5vZGUpLGZ1bmN0aW9uKGNoaWxkKXtlbGVtZW50Lmluc2VydEJlZm9yZShjaGlsZCxpbmRleCl9KX19LHdyYXA6ZnVuY3Rpb24oZWxlbWVudCx3cmFwTm9kZSl7d3JhcE5vZGU9anFMaXRlKHdyYXBOb2RlKVswXTt2YXIgcGFyZW50PWVsZW1lbnQucGFyZW50Tm9kZTtwYXJlbnQmJnBhcmVudC5yZXBsYWNlQ2hpbGQod3JhcE5vZGUsZWxlbWVudCksd3JhcE5vZGUuYXBwZW5kQ2hpbGQoZWxlbWVudCl9LHJlbW92ZTpmdW5jdGlvbihlbGVtZW50KXtqcUxpdGVEZWFsb2MoZWxlbWVudCk7dmFyIHBhcmVudD1lbGVtZW50LnBhcmVudE5vZGU7cGFyZW50JiZwYXJlbnQucmVtb3ZlQ2hpbGQoZWxlbWVudCl9LGFmdGVyOmZ1bmN0aW9uKGVsZW1lbnQsbmV3RWxlbWVudCl7dmFyIGluZGV4PWVsZW1lbnQscGFyZW50PWVsZW1lbnQucGFyZW50Tm9kZTtmb3JFYWNoKG5ldyBKUUxpdGUobmV3RWxlbWVudCksZnVuY3Rpb24obm9kZSl7cGFyZW50Lmluc2VydEJlZm9yZShub2RlLGluZGV4Lm5leHRTaWJsaW5nKSxpbmRleD1ub2RlfSl9LGFkZENsYXNzOmpxTGl0ZUFkZENsYXNzLHJlbW92ZUNsYXNzOmpxTGl0ZVJlbW92ZUNsYXNzLHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGVsZW1lbnQsc2VsZWN0b3IsY29uZGl0aW9uKXtzZWxlY3RvciYmZm9yRWFjaChzZWxlY3Rvci5zcGxpdCgiICIpLGZ1bmN0aW9uKGNsYXNzTmFtZSl7dmFyIGNsYXNzQ29uZGl0aW9uPWNvbmRpdGlvbjtpc1VuZGVmaW5lZChjbGFzc0NvbmRpdGlvbikmJihjbGFzc0NvbmRpdGlvbj0hanFMaXRlSGFzQ2xhc3MoZWxlbWVudCxjbGFzc05hbWUpKSwoY2xhc3NDb25kaXRpb24/anFMaXRlQWRkQ2xhc3M6anFMaXRlUmVtb3ZlQ2xhc3MpKGVsZW1lbnQsY2xhc3NOYW1lKX0pfSxwYXJlbnQ6ZnVuY3Rpb24oZWxlbWVudCl7dmFyIHBhcmVudD1lbGVtZW50LnBhcmVudE5vZGU7cmV0dXJuIHBhcmVudCYmMTEhPT1wYXJlbnQubm9kZVR5cGU/cGFyZW50Om51bGx9LG5leHQ6ZnVuY3Rpb24oZWxlbWVudCl7aWYoZWxlbWVudC5uZXh0RWxlbWVudFNpYmxpbmcpcmV0dXJuIGVsZW1lbnQubmV4dEVsZW1lbnRTaWJsaW5nO2Zvcih2YXIgZWxtPWVsZW1lbnQubmV4dFNpYmxpbmc7bnVsbCE9ZWxtJiYxIT09ZWxtLm5vZGVUeXBlOyllbG09ZWxtLm5leHRTaWJsaW5nO3JldHVybiBlbG19LGZpbmQ6ZnVuY3Rpb24oZWxlbWVudCxzZWxlY3Rvcil7cmV0dXJuIGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWU/ZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShzZWxlY3Rvcik6W119LGNsb25lOmpxTGl0ZUNsb25lLHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKGVsZW1lbnQsZXZlbnQsZXh0cmFQYXJhbWV0ZXJzKXt2YXIgZHVtbXlFdmVudCxldmVudEZuc0NvcHksaGFuZGxlckFyZ3MsZXZlbnROYW1lPWV2ZW50LnR5cGV8fGV2ZW50LGV2ZW50Rm5zPShqcUxpdGVFeHBhbmRvU3RvcmUoZWxlbWVudCwiZXZlbnRzIil8fHt9KVtldmVudE5hbWVdO2V2ZW50Rm5zJiYoZHVtbXlFdmVudD17cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITB9LGlzRGVmYXVsdFByZXZlbnRlZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9PT0hMH0sc3RvcFByb3BhZ2F0aW9uOm5vb3AsdHlwZTpldmVudE5hbWUsdGFyZ2V0OmVsZW1lbnR9LGV2ZW50LnR5cGUmJihkdW1teUV2ZW50PWV4dGVuZChkdW1teUV2ZW50LGV2ZW50KSksZXZlbnRGbnNDb3B5PXNoYWxsb3dDb3B5KGV2ZW50Rm5zKSxoYW5kbGVyQXJncz1leHRyYVBhcmFtZXRlcnM/W2R1bW15RXZlbnRdLmNvbmNhdChleHRyYVBhcmFtZXRlcnMpOltkdW1teUV2ZW50XSxmb3JFYWNoKGV2ZW50Rm5zQ29weSxmdW5jdGlvbihmbil7Zm4uYXBwbHkoZWxlbWVudCxoYW5kbGVyQXJncyl9KSl9fSxmdW5jdGlvbihmbixuYW1lKXtKUUxpdGUucHJvdG90eXBlW25hbWVdPWZ1bmN0aW9uKGFyZzEsYXJnMixhcmczKXtmb3IodmFyIHZhbHVlLGk9MDtpPHRoaXMubGVuZ3RoO2krKylpc1VuZGVmaW5lZCh2YWx1ZSk/KHZhbHVlPWZuKHRoaXNbaV0sYXJnMSxhcmcyLGFyZzMpLGlzRGVmaW5lZCh2YWx1ZSkmJih2YWx1ZT1qcUxpdGUodmFsdWUpKSk6anFMaXRlQWRkTm9kZXModmFsdWUsZm4odGhpc1tpXSxhcmcxLGFyZzIsYXJnMykpO3JldHVybiBpc0RlZmluZWQodmFsdWUpP3ZhbHVlOnRoaXN9LEpRTGl0ZS5wcm90b3R5cGUuYmluZD1KUUxpdGUucHJvdG90eXBlLm9uLEpRTGl0ZS5wcm90b3R5cGUudW5iaW5kPUpRTGl0ZS5wcm90b3R5cGUub2ZmfSksSGFzaE1hcC5wcm90b3R5cGU9e3B1dDpmdW5jdGlvbihrZXksdmFsdWUpe3RoaXNbaGFzaEtleShrZXksdGhpcy5uZXh0VWlkKV09dmFsdWV9LGdldDpmdW5jdGlvbihrZXkpe3JldHVybiB0aGlzW2hhc2hLZXkoa2V5LHRoaXMubmV4dFVpZCldfSxyZW1vdmU6ZnVuY3Rpb24oa2V5KXt2YXIgdmFsdWU9dGhpc1trZXk9aGFzaEtleShrZXksdGhpcy5uZXh0VWlkKV07cmV0dXJuIGRlbGV0ZSB0aGlzW2tleV0sdmFsdWV9fTt2YXIgRk5fQVJHUz0vXmZ1bmN0aW9uXHMqW15cKF0qXChccyooW15cKV0qKVwpL20sRk5fQVJHX1NQTElUPS8sLyxGTl9BUkc9L15ccyooXz8pKFxTKz8pXDFccyokLyxTVFJJUF9DT01NRU5UUz0vKChcL1wvLiokKXwoXC9cKltcc1xTXSo/XCpcLykpL2dtLCRpbmplY3Rvck1pbkVycj1taW5FcnIoIiRpbmplY3RvciIpLCRhbmltYXRlTWluRXJyPW1pbkVycigiJGFuaW1hdGUiKSwkQW5pbWF0ZVByb3ZpZGVyPVsiJHByb3ZpZGUiLGZ1bmN0aW9uKCRwcm92aWRlKXt0aGlzLiQkc2VsZWN0b3JzPXt9LHRoaXMucmVnaXN0ZXI9ZnVuY3Rpb24obmFtZSxmYWN0b3J5KXt2YXIga2V5PW5hbWUrIi1hbmltYXRpb24iO2lmKG5hbWUmJiIuIiE9bmFtZS5jaGFyQXQoMCkpdGhyb3cgJGFuaW1hdGVNaW5FcnIoIm5vdGNzZWwiLCJFeHBlY3RpbmcgY2xhc3Mgc2VsZWN0b3Igc3RhcnRpbmcgd2l0aCAnLicgZ290ICd7MH0nLiIsbmFtZSk7dGhpcy4kJHNlbGVjdG9yc1tuYW1lLnN1YnN0cigxKV09a2V5LCRwcm92aWRlLmZhY3Rvcnkoa2V5LGZhY3RvcnkpfSx0aGlzLmNsYXNzTmFtZUZpbHRlcj1mdW5jdGlvbihleHByZXNzaW9uKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLiQkY2xhc3NOYW1lRmlsdGVyPWV4cHJlc3Npb24gaW5zdGFuY2VvZiBSZWdFeHA/ZXhwcmVzc2lvbjpudWxsKSx0aGlzLiQkY2xhc3NOYW1lRmlsdGVyfSx0aGlzLiRnZXQ9WyIkdGltZW91dCIsIiQkYXN5bmNDYWxsYmFjayIsZnVuY3Rpb24oJHRpbWVvdXQsJCRhc3luY0NhbGxiYWNrKXtmdW5jdGlvbiBhc3luYyhmbil7Zm4mJiQkYXN5bmNDYWxsYmFjayhmbil9cmV0dXJue2VudGVyOmZ1bmN0aW9uKGVsZW1lbnQscGFyZW50LGFmdGVyLGRvbmUpe2FmdGVyP2FmdGVyLmFmdGVyKGVsZW1lbnQpOihwYXJlbnQmJnBhcmVudFswXXx8KHBhcmVudD1hZnRlci5wYXJlbnQoKSkscGFyZW50LmFwcGVuZChlbGVtZW50KSksYXN5bmMoZG9uZSl9LGxlYXZlOmZ1bmN0aW9uKGVsZW1lbnQsZG9uZSl7ZWxlbWVudC5yZW1vdmUoKSxhc3luYyhkb25lKX0sbW92ZTpmdW5jdGlvbihlbGVtZW50LHBhcmVudCxhZnRlcixkb25lKXt0aGlzLmVudGVyKGVsZW1lbnQscGFyZW50LGFmdGVyLGRvbmUpfSxhZGRDbGFzczpmdW5jdGlvbihlbGVtZW50LGNsYXNzTmFtZSxkb25lKXtjbGFzc05hbWU9aXNTdHJpbmcoY2xhc3NOYW1lKT9jbGFzc05hbWU6aXNBcnJheShjbGFzc05hbWUpP2NsYXNzTmFtZS5qb2luKCIgIik6IiIsZm9yRWFjaChlbGVtZW50LGZ1bmN0aW9uKGVsZW1lbnQpe2pxTGl0ZUFkZENsYXNzKGVsZW1lbnQsY2xhc3NOYW1lKX0pLGFzeW5jKGRvbmUpfSxyZW1vdmVDbGFzczpmdW5jdGlvbihlbGVtZW50LGNsYXNzTmFtZSxkb25lKXtjbGFzc05hbWU9aXNTdHJpbmcoY2xhc3NOYW1lKT9jbGFzc05hbWU6aXNBcnJheShjbGFzc05hbWUpP2NsYXNzTmFtZS5qb2luKCIgIik6IiIsZm9yRWFjaChlbGVtZW50LGZ1bmN0aW9uKGVsZW1lbnQpe2pxTGl0ZVJlbW92ZUNsYXNzKGVsZW1lbnQsY2xhc3NOYW1lKX0pLGFzeW5jKGRvbmUpfSxzZXRDbGFzczpmdW5jdGlvbihlbGVtZW50LGFkZCxyZW1vdmUsZG9uZSl7Zm9yRWFjaChlbGVtZW50LGZ1bmN0aW9uKGVsZW1lbnQpe2pxTGl0ZUFkZENsYXNzKGVsZW1lbnQsYWRkKSxqcUxpdGVSZW1vdmVDbGFzcyhlbGVtZW50LHJlbW92ZSl9KSxhc3luYyhkb25lKX0sZW5hYmxlZDpub29wfX1dfV0sJGNvbXBpbGVNaW5FcnI9bWluRXJyKCIkY29tcGlsZSIpOyRDb21waWxlUHJvdmlkZXIuJGluamVjdD1bIiRwcm92aWRlIiwiJCRzYW5pdGl6ZVVyaVByb3ZpZGVyIl07dmFyIFBSRUZJWF9SRUdFWFA9L14oeFtcOlwtX118ZGF0YVtcOlwtX10pL2ksJGludGVycG9sYXRlTWluRXJyPW1pbkVycigiJGludGVycG9sYXRlIiksUEFUSF9NQVRDSD0vXihbXlw/I10qKShcPyhbXiNdKikpPygjKC4qKSk/JC8sREVGQVVMVF9QT1JUUz17aHR0cDo4MCxodHRwczo0NDMsZnRwOjIxfSwkbG9jYXRpb25NaW5FcnI9bWluRXJyKCIkbG9jYXRpb24iKTtMb2NhdGlvbkhhc2hiYW5nSW5IdG1sNVVybC5wcm90b3R5cGU9TG9jYXRpb25IYXNoYmFuZ1VybC5wcm90b3R5cGU9TG9jYXRpb25IdG1sNVVybC5wcm90b3R5cGU9eyQkaHRtbDU6ITEsJCRyZXBsYWNlOiExLGFic1VybDpsb2NhdGlvbkdldHRlcigiJCRhYnNVcmwiKSx1cmw6ZnVuY3Rpb24odXJsKXtpZihpc1VuZGVmaW5lZCh1cmwpKXJldHVybiB0aGlzLiQkdXJsO3ZhciBtYXRjaD1QQVRIX01BVENILmV4ZWModXJsKTtyZXR1cm4gbWF0Y2hbMV0mJnRoaXMucGF0aChkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbMV0pKSwobWF0Y2hbMl18fG1hdGNoWzFdKSYmdGhpcy5zZWFyY2gobWF0Y2hbM118fCIiKSx0aGlzLmhhc2gobWF0Y2hbNV18fCIiKSx0aGlzfSxwcm90b2NvbDpsb2NhdGlvbkdldHRlcigiJCRwcm90b2NvbCIpLGhvc3Q6bG9jYXRpb25HZXR0ZXIoIiQkaG9zdCIpLHBvcnQ6bG9jYXRpb25HZXR0ZXIoIiQkcG9ydCIpLHBhdGg6bG9jYXRpb25HZXR0ZXJTZXR0ZXIoIiQkcGF0aCIsZnVuY3Rpb24ocGF0aCl7cmV0dXJuIHBhdGg9cGF0aD9wYXRoLnRvU3RyaW5nKCk6IiIsIi8iPT1wYXRoLmNoYXJBdCgwKT9wYXRoOiIvIitwYXRofSksc2VhcmNoOmZ1bmN0aW9uKHNlYXJjaCxwYXJhbVZhbHVlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiB0aGlzLiQkc2VhcmNoO2Nhc2UgMTppZihpc1N0cmluZyhzZWFyY2gpfHxpc051bWJlcihzZWFyY2gpKXNlYXJjaD1zZWFyY2gudG9TdHJpbmcoKSx0aGlzLiQkc2VhcmNoPXBhcnNlS2V5VmFsdWUoc2VhcmNoKTtlbHNle2lmKCFpc09iamVjdChzZWFyY2gpKXRocm93ICRsb2NhdGlvbk1pbkVycigiaXNyY2hhcmciLCJUaGUgZmlyc3QgYXJndW1lbnQgb2YgdGhlIGAkbG9jYXRpb24jc2VhcmNoKClgIGNhbGwgbXVzdCBiZSBhIHN0cmluZyBvciBhbiBvYmplY3QuIik7Zm9yRWFjaChzZWFyY2gsZnVuY3Rpb24odmFsdWUsa2V5KXtudWxsPT12YWx1ZSYmZGVsZXRlIHNlYXJjaFtrZXldfSksdGhpcy4kJHNlYXJjaD1zZWFyY2h9YnJlYWs7ZGVmYXVsdDppc1VuZGVmaW5lZChwYXJhbVZhbHVlKXx8bnVsbD09PXBhcmFtVmFsdWU/ZGVsZXRlIHRoaXMuJCRzZWFyY2hbc2VhcmNoXTp0aGlzLiQkc2VhcmNoW3NlYXJjaF09cGFyYW1WYWx1ZX1yZXR1cm4gdGhpcy4kJGNvbXBvc2UoKSx0aGlzfSxoYXNoOmxvY2F0aW9uR2V0dGVyU2V0dGVyKCIkJGhhc2giLGZ1bmN0aW9uKGhhc2gpe3JldHVybiBoYXNoP2hhc2gudG9TdHJpbmcoKToiIn0pLHJlcGxhY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kJHJlcGxhY2U9ITAsdGhpc319O3ZhciBwcm9taXNlV2FybmluZywkcGFyc2VNaW5FcnI9bWluRXJyKCIkcGFyc2UiKSxwcm9taXNlV2FybmluZ0NhY2hlPXt9LENBTEw9RnVuY3Rpb24ucHJvdG90eXBlLmNhbGwsQVBQTFk9RnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LEJJTkQ9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQsT1BFUkFUT1JTPXsibnVsbCI6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sInRydWUiOmZ1bmN0aW9uKCl7cmV0dXJuITB9LCJmYWxzZSI6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdW5kZWZpbmVkOm5vb3AsIisiOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGE9YShzZWxmLGxvY2FscyksYj1iKHNlbGYsbG9jYWxzKSxpc0RlZmluZWQoYSk/aXNEZWZpbmVkKGIpP2ErYjphOmlzRGVmaW5lZChiKT9iOnVuZGVmaW5lZH0sIi0iOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGE9YShzZWxmLGxvY2FscyksYj1iKHNlbGYsbG9jYWxzKSwoaXNEZWZpbmVkKGEpP2E6MCktKGlzRGVmaW5lZChiKT9iOjApfSwiKiI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2FscykqYihzZWxmLGxvY2Fscyl9LCIvIjpmdW5jdGlvbihzZWxmLGxvY2FscyxhLGIpe3JldHVybiBhKHNlbGYsbG9jYWxzKS9iKHNlbGYsbG9jYWxzKX0sIiUiOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpJWIoc2VsZixsb2NhbHMpfSwiXiI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2FscyleYihzZWxmLGxvY2Fscyl9LCI9Ijpub29wLCI9PT0iOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpPT09YihzZWxmLGxvY2Fscyl9LCIhPT0iOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpIT09YihzZWxmLGxvY2Fscyl9LCI9PSI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2Fscyk9PWIoc2VsZixsb2NhbHMpfSwiIT0iOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpIT1iKHNlbGYsbG9jYWxzKX0sIjwiOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpPGIoc2VsZixsb2NhbHMpfSwiPiI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2Fscyk+YihzZWxmLGxvY2Fscyl9LCI8PSI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2Fscyk8PWIoc2VsZixsb2NhbHMpfSwiPj0iOmZ1bmN0aW9uKHNlbGYsbG9jYWxzLGEsYil7cmV0dXJuIGEoc2VsZixsb2NhbHMpPj1iKHNlbGYsbG9jYWxzKX0sIiYmIjpmdW5jdGlvbihzZWxmLGxvY2FscyxhLGIpe3JldHVybiBhKHNlbGYsbG9jYWxzKSYmYihzZWxmLGxvY2Fscyl9LCJ8fCI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2Fscyl8fGIoc2VsZixsb2NhbHMpfSwiJiI6ZnVuY3Rpb24oc2VsZixsb2NhbHMsYSxiKXtyZXR1cm4gYShzZWxmLGxvY2FscykmYihzZWxmLGxvY2Fscyl9LCJ8IjpmdW5jdGlvbihzZWxmLGxvY2FscyxhLGIpe3JldHVybiBiKHNlbGYsbG9jYWxzKShzZWxmLGxvY2FscyxhKHNlbGYsbG9jYWxzKSl9LCIhIjpmdW5jdGlvbihzZWxmLGxvY2FscyxhKXtyZXR1cm4hYShzZWxmLGxvY2Fscyl9fSxFU0NBUEU9e246IlxuIixmOiJcZiIscjoiXHIiLHQ6IgkiLHY6IgsiLCInIjoiJyIsJyInOiciJ30sTGV4ZXI9ZnVuY3Rpb24ob3B0aW9ucyl7dGhpcy5vcHRpb25zPW9wdGlvbnN9O0xleGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6TGV4ZXIsbGV4OmZ1bmN0aW9uKHRleHQpe2Zvcih0aGlzLnRleHQ9dGV4dCx0aGlzLmluZGV4PTAsdGhpcy5jaD11bmRlZmluZWQsdGhpcy5sYXN0Q2g9IjoiLHRoaXMudG9rZW5zPVtdO3RoaXMuaW5kZXg8dGhpcy50ZXh0Lmxlbmd0aDspe2lmKHRoaXMuY2g9dGhpcy50ZXh0LmNoYXJBdCh0aGlzLmluZGV4KSx0aGlzLmlzKCJcIiciKSl0aGlzLnJlYWRTdHJpbmcodGhpcy5jaCk7ZWxzZSBpZih0aGlzLmlzTnVtYmVyKHRoaXMuY2gpfHx0aGlzLmlzKCIuIikmJnRoaXMuaXNOdW1iZXIodGhpcy5wZWVrKCkpKXRoaXMucmVhZE51bWJlcigpO2Vsc2UgaWYodGhpcy5pc0lkZW50KHRoaXMuY2gpKXRoaXMucmVhZElkZW50KCk7ZWxzZSBpZih0aGlzLmlzKCIoKXt9W10uLDs6PyIpKXRoaXMudG9rZW5zLnB1c2goe2luZGV4OnRoaXMuaW5kZXgsdGV4dDp0aGlzLmNofSksdGhpcy5pbmRleCsrO2Vsc2V7aWYodGhpcy5pc1doaXRlc3BhY2UodGhpcy5jaCkpe3RoaXMuaW5kZXgrKztjb250aW51ZX12YXIgY2gyPXRoaXMuY2grdGhpcy5wZWVrKCksY2gzPWNoMit0aGlzLnBlZWsoMiksZm49T1BFUkFUT1JTW3RoaXMuY2hdLGZuMj1PUEVSQVRPUlNbY2gyXSxmbjM9T1BFUkFUT1JTW2NoM107Zm4zPyh0aGlzLnRva2Vucy5wdXNoKHtpbmRleDp0aGlzLmluZGV4LHRleHQ6Y2gzLGZuOmZuM30pLHRoaXMuaW5kZXgrPTMpOmZuMj8odGhpcy50b2tlbnMucHVzaCh7aW5kZXg6dGhpcy5pbmRleCx0ZXh0OmNoMixmbjpmbjJ9KSx0aGlzLmluZGV4Kz0yKTpmbj8odGhpcy50b2tlbnMucHVzaCh7aW5kZXg6dGhpcy5pbmRleCx0ZXh0OnRoaXMuY2gsZm46Zm59KSx0aGlzLmluZGV4Kz0xKTp0aGlzLnRocm93RXJyb3IoIlVuZXhwZWN0ZWQgbmV4dCBjaGFyYWN0ZXIgIix0aGlzLmluZGV4LHRoaXMuaW5kZXgrMSl9dGhpcy5sYXN0Q2g9dGhpcy5jaH1yZXR1cm4gdGhpcy50b2tlbnN9LGlzOmZ1bmN0aW9uKGNoYXJzKXtyZXR1cm4tMSE9PWNoYXJzLmluZGV4T2YodGhpcy5jaCl9LHdhczpmdW5jdGlvbihjaGFycyl7cmV0dXJuLTEhPT1jaGFycy5pbmRleE9mKHRoaXMubGFzdENoKX0scGVlazpmdW5jdGlvbihpKXt2YXIgbnVtPWl8fDE7cmV0dXJuIHRoaXMuaW5kZXgrbnVtPHRoaXMudGV4dC5sZW5ndGg/dGhpcy50ZXh0LmNoYXJBdCh0aGlzLmluZGV4K251bSk6ITF9LGlzTnVtYmVyOmZ1bmN0aW9uKGNoKXtyZXR1cm4gY2g+PSIwIiYmIjkiPj1jaH0saXNXaGl0ZXNwYWNlOmZ1bmN0aW9uKGNoKXtyZXR1cm4iICI9PT1jaHx8IlxyIj09PWNofHwiCSI9PT1jaHx8IlxuIj09PWNofHwiCyI9PT1jaHx8IsKgIj09PWNofSxpc0lkZW50OmZ1bmN0aW9uKGNoKXtyZXR1cm4gY2g+PSJhIiYmInoiPj1jaHx8Y2g+PSJBIiYmIloiPj1jaHx8Il8iPT09Y2h8fCIkIj09PWNofSxpc0V4cE9wZXJhdG9yOmZ1bmN0aW9uKGNoKXtyZXR1cm4iLSI9PT1jaHx8IisiPT09Y2h8fHRoaXMuaXNOdW1iZXIoY2gpfSx0aHJvd0Vycm9yOmZ1bmN0aW9uKGVycm9yLHN0YXJ0LGVuZCl7ZW5kPWVuZHx8dGhpcy5pbmRleDt2YXIgY29sU3RyPWlzRGVmaW5lZChzdGFydCk/InMgIitzdGFydCsiLSIrdGhpcy5pbmRleCsiIFsiK3RoaXMudGV4dC5zdWJzdHJpbmcoc3RhcnQsZW5kKSsiXSI6IiAiK2VuZDt0aHJvdyAkcGFyc2VNaW5FcnIoImxleGVyciIsIkxleGVyIEVycm9yOiB7MH0gYXQgY29sdW1uezF9IGluIGV4cHJlc3Npb24gW3syfV0uIixlcnJvcixjb2xTdHIsdGhpcy50ZXh0KX0scmVhZE51bWJlcjpmdW5jdGlvbigpe2Zvcih2YXIgbnVtYmVyPSIiLHN0YXJ0PXRoaXMuaW5kZXg7dGhpcy5pbmRleDx0aGlzLnRleHQubGVuZ3RoOyl7dmFyIGNoPWxvd2VyY2FzZSh0aGlzLnRleHQuY2hhckF0KHRoaXMuaW5kZXgpKTtpZigiLiI9PWNofHx0aGlzLmlzTnVtYmVyKGNoKSludW1iZXIrPWNoO2Vsc2V7dmFyIHBlZWtDaD10aGlzLnBlZWsoKTtpZigiZSI9PWNoJiZ0aGlzLmlzRXhwT3BlcmF0b3IocGVla0NoKSludW1iZXIrPWNoO2Vsc2UgaWYodGhpcy5pc0V4cE9wZXJhdG9yKGNoKSYmcGVla0NoJiZ0aGlzLmlzTnVtYmVyKHBlZWtDaCkmJiJlIj09bnVtYmVyLmNoYXJBdChudW1iZXIubGVuZ3RoLTEpKW51bWJlcis9Y2g7ZWxzZXtpZighdGhpcy5pc0V4cE9wZXJhdG9yKGNoKXx8cGVla0NoJiZ0aGlzLmlzTnVtYmVyKHBlZWtDaCl8fCJlIiE9bnVtYmVyLmNoYXJBdChudW1iZXIubGVuZ3RoLTEpKWJyZWFrO3RoaXMudGhyb3dFcnJvcigiSW52YWxpZCBleHBvbmVudCIpfX10aGlzLmluZGV4Kyt9bnVtYmVyPTEqbnVtYmVyLHRoaXMudG9rZW5zLnB1c2goe2luZGV4OnN0YXJ0LHRleHQ6bnVtYmVyLGxpdGVyYWw6ITAsY29uc3RhbnQ6ITAsZm46ZnVuY3Rpb24oKXtyZXR1cm4gbnVtYmVyfX0pfSxyZWFkSWRlbnQ6ZnVuY3Rpb24oKXtmb3IodmFyIGxhc3REb3QscGVla0luZGV4LG1ldGhvZE5hbWUsY2gscGFyc2VyPXRoaXMsaWRlbnQ9IiIsc3RhcnQ9dGhpcy5pbmRleDt0aGlzLmluZGV4PHRoaXMudGV4dC5sZW5ndGgmJihjaD10aGlzLnRleHQuY2hhckF0KHRoaXMuaW5kZXgpLCIuIj09PWNofHx0aGlzLmlzSWRlbnQoY2gpfHx0aGlzLmlzTnVtYmVyKGNoKSk7KSIuIj09PWNoJiYobGFzdERvdD10aGlzLmluZGV4KSxpZGVudCs9Y2gsdGhpcy5pbmRleCsrO2lmKGxhc3REb3QpZm9yKHBlZWtJbmRleD10aGlzLmluZGV4O3BlZWtJbmRleDx0aGlzLnRleHQubGVuZ3RoOyl7aWYoY2g9dGhpcy50ZXh0LmNoYXJBdChwZWVrSW5kZXgpLCIoIj09PWNoKXttZXRob2ROYW1lPWlkZW50LnN1YnN0cihsYXN0RG90LXN0YXJ0KzEpLGlkZW50PWlkZW50LnN1YnN0cigwLGxhc3REb3Qtc3RhcnQpLHRoaXMuaW5kZXg9cGVla0luZGV4O2JyZWFrfWlmKCF0aGlzLmlzV2hpdGVzcGFjZShjaCkpYnJlYWs7cGVla0luZGV4Kyt9dmFyIHRva2VuPXtpbmRleDpzdGFydCx0ZXh0OmlkZW50fTtpZihPUEVSQVRPUlMuaGFzT3duUHJvcGVydHkoaWRlbnQpKXRva2VuLmZuPU9QRVJBVE9SU1tpZGVudF0sdG9rZW4ubGl0ZXJhbD0hMCx0b2tlbi5jb25zdGFudD0hMDtlbHNle3ZhciBnZXR0ZXI9Z2V0dGVyRm4oaWRlbnQsdGhpcy5vcHRpb25zLHRoaXMudGV4dCk7dG9rZW4uZm49ZXh0ZW5kKGZ1bmN0aW9uKHNlbGYsbG9jYWxzKXtyZXR1cm4gZ2V0dGVyKHNlbGYsbG9jYWxzKX0se2Fzc2lnbjpmdW5jdGlvbihzZWxmLHZhbHVlKXtyZXR1cm4gc2V0dGVyKHNlbGYsaWRlbnQsdmFsdWUscGFyc2VyLnRleHQscGFyc2VyLm9wdGlvbnMpfX0pfXRoaXMudG9rZW5zLnB1c2godG9rZW4pLG1ldGhvZE5hbWUmJih0aGlzLnRva2Vucy5wdXNoKHtpbmRleDpsYXN0RG90LHRleHQ6Ii4ifSksdGhpcy50b2tlbnMucHVzaCh7aW5kZXg6bGFzdERvdCsxLHRleHQ6bWV0aG9kTmFtZX0pKX0scmVhZFN0cmluZzpmdW5jdGlvbihxdW90ZSl7dmFyIHN0YXJ0PXRoaXMuaW5kZXg7dGhpcy5pbmRleCsrO2Zvcih2YXIgc3RyaW5nPSIiLHJhd1N0cmluZz1xdW90ZSxlc2NhcGU9ITE7dGhpcy5pbmRleDx0aGlzLnRleHQubGVuZ3RoOyl7dmFyIGNoPXRoaXMudGV4dC5jaGFyQXQodGhpcy5pbmRleCk7aWYocmF3U3RyaW5nKz1jaCxlc2NhcGUpe2lmKCJ1Ij09PWNoKXt2YXIgaGV4PXRoaXMudGV4dC5zdWJzdHJpbmcodGhpcy5pbmRleCsxLHRoaXMuaW5kZXgrNSk7aGV4Lm1hdGNoKC9bXGRhLWZdezR9L2kpfHx0aGlzLnRocm93RXJyb3IoIkludmFsaWQgdW5pY29kZSBlc2NhcGUgW1xcdSIraGV4KyJdIiksdGhpcy5pbmRleCs9NCxzdHJpbmcrPVN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoaGV4LDE2KSl9ZWxzZXt2YXIgcmVwPUVTQ0FQRVtjaF07c3RyaW5nKz1yZXB8fGNofWVzY2FwZT0hMX1lbHNlIGlmKCJcXCI9PT1jaCllc2NhcGU9ITA7ZWxzZXtpZihjaD09PXF1b3RlKXJldHVybiB0aGlzLmluZGV4Kyssdm9pZCB0aGlzLnRva2Vucy5wdXNoKHtpbmRleDpzdGFydCx0ZXh0OnJhd1N0cmluZyxzdHJpbmc6c3RyaW5nLGxpdGVyYWw6ITAsY29uc3RhbnQ6ITAsZm46ZnVuY3Rpb24oKXtyZXR1cm4gc3RyaW5nfX0pO3N0cmluZys9Y2h9dGhpcy5pbmRleCsrfXRoaXMudGhyb3dFcnJvcigiVW50ZXJtaW5hdGVkIHF1b3RlIixzdGFydCl9fTt2YXIgUGFyc2VyPWZ1bmN0aW9uKGxleGVyLCRmaWx0ZXIsb3B0aW9ucyl7dGhpcy5sZXhlcj1sZXhlcix0aGlzLiRmaWx0ZXI9JGZpbHRlcix0aGlzLm9wdGlvbnM9b3B0aW9uc307UGFyc2VyLlpFUk89ZXh0ZW5kKGZ1bmN0aW9uKCl7cmV0dXJuIDB9LHtjb25zdGFudDohMH0pLFBhcnNlci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlBhcnNlcixwYXJzZTpmdW5jdGlvbih0ZXh0KXt0aGlzLnRleHQ9dGV4dCx0aGlzLnRva2Vucz10aGlzLmxleGVyLmxleCh0ZXh0KTt2YXIgdmFsdWU9dGhpcy5zdGF0ZW1lbnRzKCk7cmV0dXJuIDAhPT10aGlzLnRva2Vucy5sZW5ndGgmJnRoaXMudGhyb3dFcnJvcigiaXMgYW4gdW5leHBlY3RlZCB0b2tlbiIsdGhpcy50b2tlbnNbMF0pLHZhbHVlLmxpdGVyYWw9ISF2YWx1ZS5saXRlcmFsLHZhbHVlLmNvbnN0YW50PSEhdmFsdWUuY29uc3RhbnQsdmFsdWV9LHByaW1hcnk6ZnVuY3Rpb24oKXt2YXIgcHJpbWFyeTtpZih0aGlzLmV4cGVjdCgiKCIpKXByaW1hcnk9dGhpcy5maWx0ZXJDaGFpbigpLHRoaXMuY29uc3VtZSgiKSIpO2Vsc2UgaWYodGhpcy5leHBlY3QoIlsiKSlwcmltYXJ5PXRoaXMuYXJyYXlEZWNsYXJhdGlvbigpO2Vsc2UgaWYodGhpcy5leHBlY3QoInsiKSlwcmltYXJ5PXRoaXMub2JqZWN0KCk7ZWxzZXt2YXIgdG9rZW49dGhpcy5leHBlY3QoKTtwcmltYXJ5PXRva2VuLmZuLHByaW1hcnl8fHRoaXMudGhyb3dFcnJvcigibm90IGEgcHJpbWFyeSBleHByZXNzaW9uIix0b2tlbikscHJpbWFyeS5saXRlcmFsPSEhdG9rZW4ubGl0ZXJhbCxwcmltYXJ5LmNvbnN0YW50PSEhdG9rZW4uY29uc3RhbnR9Zm9yKHZhciBuZXh0LGNvbnRleHQ7bmV4dD10aGlzLmV4cGVjdCgiKCIsIlsiLCIuIik7KSIoIj09PW5leHQudGV4dD8ocHJpbWFyeT10aGlzLmZ1bmN0aW9uQ2FsbChwcmltYXJ5LGNvbnRleHQpLGNvbnRleHQ9bnVsbCk6IlsiPT09bmV4dC50ZXh0Pyhjb250ZXh0PXByaW1hcnkscHJpbWFyeT10aGlzLm9iamVjdEluZGV4KHByaW1hcnkpKToiLiI9PT1uZXh0LnRleHQ/KGNvbnRleHQ9cHJpbWFyeSxwcmltYXJ5PXRoaXMuZmllbGRBY2Nlc3MocHJpbWFyeSkpOnRoaXMudGhyb3dFcnJvcigiSU1QT1NTSUJMRSIpO3JldHVybiBwcmltYXJ5fSx0aHJvd0Vycm9yOmZ1bmN0aW9uKG1zZyx0b2tlbil7dGhyb3cgJHBhcnNlTWluRXJyKCJzeW50YXgiLCJTeW50YXggRXJyb3I6IFRva2VuICd7MH0nIHsxfSBhdCBjb2x1bW4gezJ9IG9mIHRoZSBleHByZXNzaW9uIFt7M31dIHN0YXJ0aW5nIGF0IFt7NH1dLiIsdG9rZW4udGV4dCxtc2csdG9rZW4uaW5kZXgrMSx0aGlzLnRleHQsdGhpcy50ZXh0LnN1YnN0cmluZyh0b2tlbi5pbmRleCkpfSxwZWVrVG9rZW46ZnVuY3Rpb24oKXtpZigwPT09dGhpcy50b2tlbnMubGVuZ3RoKXRocm93ICRwYXJzZU1pbkVycigidWVvZSIsIlVuZXhwZWN0ZWQgZW5kIG9mIGV4cHJlc3Npb246IHswfSIsdGhpcy50ZXh0KTtyZXR1cm4gdGhpcy50b2tlbnNbMF19LHBlZWs6ZnVuY3Rpb24oZTEsZTIsZTMsZTQpe2lmKHRoaXMudG9rZW5zLmxlbmd0aD4wKXt2YXIgdG9rZW49dGhpcy50b2tlbnNbMF0sdD10b2tlbi50ZXh0O2lmKHQ9PT1lMXx8dD09PWUyfHx0PT09ZTN8fHQ9PT1lNHx8IWUxJiYhZTImJiFlMyYmIWU0KXJldHVybiB0b2tlbn1yZXR1cm4hMX0sZXhwZWN0OmZ1bmN0aW9uKGUxLGUyLGUzLGU0KXt2YXIgdG9rZW49dGhpcy5wZWVrKGUxLGUyLGUzLGU0KTtyZXR1cm4gdG9rZW4/KHRoaXMudG9rZW5zLnNoaWZ0KCksdG9rZW4pOiExfSxjb25zdW1lOmZ1bmN0aW9uKGUxKXt0aGlzLmV4cGVjdChlMSl8fHRoaXMudGhyb3dFcnJvcigiaXMgdW5leHBlY3RlZCwgZXhwZWN0aW5nIFsiK2UxKyJdIix0aGlzLnBlZWsoKSl9LHVuYXJ5Rm46ZnVuY3Rpb24oZm4scmlnaHQpe3JldHVybiBleHRlbmQoZnVuY3Rpb24oc2VsZixsb2NhbHMpe3JldHVybiBmbihzZWxmLGxvY2FscyxyaWdodCl9LHtjb25zdGFudDpyaWdodC5jb25zdGFudH0pfSx0ZXJuYXJ5Rm46ZnVuY3Rpb24obGVmdCxtaWRkbGUscmlnaHQpe3JldHVybiBleHRlbmQoZnVuY3Rpb24oc2VsZixsb2NhbHMpe3JldHVybiBsZWZ0KHNlbGYsbG9jYWxzKT9taWRkbGUoc2VsZixsb2NhbHMpOnJpZ2h0KHNlbGYsbG9jYWxzKX0se2NvbnN0YW50OmxlZnQuY29uc3RhbnQmJm1pZGRsZS5jb25zdGFudCYmcmlnaHQuY29uc3RhbnR9KX0sYmluYXJ5Rm46ZnVuY3Rpb24obGVmdCxmbixyaWdodCl7cmV0dXJuIGV4dGVuZChmdW5jdGlvbihzZWxmLGxvY2Fscyl7cmV0dXJuIGZuKHNlbGYsbG9jYWxzLGxlZnQscmlnaHQpfSx7Y29uc3RhbnQ6bGVmdC5jb25zdGFudCYmcmlnaHQuY29uc3RhbnR9KX0sc3RhdGVtZW50czpmdW5jdGlvbigpe2Zvcih2YXIgc3RhdGVtZW50cz1bXTs7KWlmKHRoaXMudG9rZW5zLmxlbmd0aD4wJiYhdGhpcy5wZWVrKCJ9IiwiKSIsIjsiLCJdIikmJnN0YXRlbWVudHMucHVzaCh0aGlzLmZpbHRlckNoYWluKCkpLCF0aGlzLmV4cGVjdCgiOyIpKXJldHVybiAxPT09c3RhdGVtZW50cy5sZW5ndGg/c3RhdGVtZW50c1swXTpmdW5jdGlvbihzZWxmLGxvY2Fscyl7Zm9yKHZhciB2YWx1ZSxpPTA7aTxzdGF0ZW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzdGF0ZW1lbnQ9c3RhdGVtZW50c1tpXTtzdGF0ZW1lbnQmJih2YWx1ZT1zdGF0ZW1lbnQoc2VsZixsb2NhbHMpKX1yZXR1cm4gdmFsdWV9fSxmaWx0ZXJDaGFpbjpmdW5jdGlvbigpe2Zvcih2YXIgdG9rZW4sbGVmdD10aGlzLmV4cHJlc3Npb24oKTs7KXtpZighKHRva2VuPXRoaXMuZXhwZWN0KCJ8IikpKXJldHVybiBsZWZ0O2xlZnQ9dGhpcy5iaW5hcnlGbihsZWZ0LHRva2VuLmZuLHRoaXMuZmlsdGVyKCkpfX0sZmlsdGVyOmZ1bmN0aW9uKCl7Zm9yKHZhciB0b2tlbj10aGlzLmV4cGVjdCgpLGZuPXRoaXMuJGZpbHRlcih0b2tlbi50ZXh0KSxhcmdzRm49W107Oyl7aWYoISh0b2tlbj10aGlzLmV4cGVjdCgiOiIpKSl7dmFyIGZuSW52b2tlPWZ1bmN0aW9uKHNlbGYsbG9jYWxzLGlucHV0KXtmb3IodmFyIGFyZ3M9W2lucHV0XSxpPTA7aTxhcmdzRm4ubGVuZ3RoO2krKylhcmdzLnB1c2goYXJnc0ZuW2ldKHNlbGYsbG9jYWxzKSk7cmV0dXJuIGZuLmFwcGx5KHNlbGYsYXJncyl9O3JldHVybiBmdW5jdGlvbigpe3JldHVybiBmbkludm9rZX19YXJnc0ZuLnB1c2godGhpcy5leHByZXNzaW9uKCkpfX0sZXhwcmVzc2lvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFzc2lnbm1lbnQoKX0sYXNzaWdubWVudDpmdW5jdGlvbigpe3ZhciByaWdodCx0b2tlbixsZWZ0PXRoaXMudGVybmFyeSgpO3JldHVybih0b2tlbj10aGlzLmV4cGVjdCgiPSIpKT8obGVmdC5hc3NpZ258fHRoaXMudGhyb3dFcnJvcigiaW1wbGllcyBhc3NpZ25tZW50IGJ1dCBbIit0aGlzLnRleHQuc3Vic3RyaW5nKDAsdG9rZW4uaW5kZXgpKyJdIGNhbiBub3QgYmUgYXNzaWduZWQgdG8iLHRva2VuKSxyaWdodD10aGlzLnRlcm5hcnkoKSxmdW5jdGlvbihzY29wZSxsb2NhbHMpe3JldHVybiBsZWZ0LmFzc2lnbihzY29wZSxyaWdodChzY29wZSxsb2NhbHMpLGxvY2FscykKfSk6bGVmdH0sdGVybmFyeTpmdW5jdGlvbigpe3ZhciBtaWRkbGUsdG9rZW4sbGVmdD10aGlzLmxvZ2ljYWxPUigpO3JldHVybih0b2tlbj10aGlzLmV4cGVjdCgiPyIpKT8obWlkZGxlPXRoaXMuYXNzaWdubWVudCgpLCh0b2tlbj10aGlzLmV4cGVjdCgiOiIpKT90aGlzLnRlcm5hcnlGbihsZWZ0LG1pZGRsZSx0aGlzLmFzc2lnbm1lbnQoKSk6dm9pZCB0aGlzLnRocm93RXJyb3IoImV4cGVjdGVkIDoiLHRva2VuKSk6bGVmdH0sbG9naWNhbE9SOmZ1bmN0aW9uKCl7Zm9yKHZhciB0b2tlbixsZWZ0PXRoaXMubG9naWNhbEFORCgpOzspe2lmKCEodG9rZW49dGhpcy5leHBlY3QoInx8IikpKXJldHVybiBsZWZ0O2xlZnQ9dGhpcy5iaW5hcnlGbihsZWZ0LHRva2VuLmZuLHRoaXMubG9naWNhbEFORCgpKX19LGxvZ2ljYWxBTkQ6ZnVuY3Rpb24oKXt2YXIgdG9rZW4sbGVmdD10aGlzLmVxdWFsaXR5KCk7cmV0dXJuKHRva2VuPXRoaXMuZXhwZWN0KCImJiIpKSYmKGxlZnQ9dGhpcy5iaW5hcnlGbihsZWZ0LHRva2VuLmZuLHRoaXMubG9naWNhbEFORCgpKSksbGVmdH0sZXF1YWxpdHk6ZnVuY3Rpb24oKXt2YXIgdG9rZW4sbGVmdD10aGlzLnJlbGF0aW9uYWwoKTtyZXR1cm4odG9rZW49dGhpcy5leHBlY3QoIj09IiwiIT0iLCI9PT0iLCIhPT0iKSkmJihsZWZ0PXRoaXMuYmluYXJ5Rm4obGVmdCx0b2tlbi5mbix0aGlzLmVxdWFsaXR5KCkpKSxsZWZ0fSxyZWxhdGlvbmFsOmZ1bmN0aW9uKCl7dmFyIHRva2VuLGxlZnQ9dGhpcy5hZGRpdGl2ZSgpO3JldHVybih0b2tlbj10aGlzLmV4cGVjdCgiPCIsIj4iLCI8PSIsIj49IikpJiYobGVmdD10aGlzLmJpbmFyeUZuKGxlZnQsdG9rZW4uZm4sdGhpcy5yZWxhdGlvbmFsKCkpKSxsZWZ0fSxhZGRpdGl2ZTpmdW5jdGlvbigpe2Zvcih2YXIgdG9rZW4sbGVmdD10aGlzLm11bHRpcGxpY2F0aXZlKCk7dG9rZW49dGhpcy5leHBlY3QoIisiLCItIik7KWxlZnQ9dGhpcy5iaW5hcnlGbihsZWZ0LHRva2VuLmZuLHRoaXMubXVsdGlwbGljYXRpdmUoKSk7cmV0dXJuIGxlZnR9LG11bHRpcGxpY2F0aXZlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0b2tlbixsZWZ0PXRoaXMudW5hcnkoKTt0b2tlbj10aGlzLmV4cGVjdCgiKiIsIi8iLCIlIik7KWxlZnQ9dGhpcy5iaW5hcnlGbihsZWZ0LHRva2VuLmZuLHRoaXMudW5hcnkoKSk7cmV0dXJuIGxlZnR9LHVuYXJ5OmZ1bmN0aW9uKCl7dmFyIHRva2VuO3JldHVybiB0aGlzLmV4cGVjdCgiKyIpP3RoaXMucHJpbWFyeSgpOih0b2tlbj10aGlzLmV4cGVjdCgiLSIpKT90aGlzLmJpbmFyeUZuKFBhcnNlci5aRVJPLHRva2VuLmZuLHRoaXMudW5hcnkoKSk6KHRva2VuPXRoaXMuZXhwZWN0KCIhIikpP3RoaXMudW5hcnlGbih0b2tlbi5mbix0aGlzLnVuYXJ5KCkpOnRoaXMucHJpbWFyeSgpfSxmaWVsZEFjY2VzczpmdW5jdGlvbihvYmplY3Qpe3ZhciBwYXJzZXI9dGhpcyxmaWVsZD10aGlzLmV4cGVjdCgpLnRleHQsZ2V0dGVyPWdldHRlckZuKGZpZWxkLHRoaXMub3B0aW9ucyx0aGlzLnRleHQpO3JldHVybiBleHRlbmQoZnVuY3Rpb24oc2NvcGUsbG9jYWxzLHNlbGYpe3JldHVybiBnZXR0ZXIoc2VsZnx8b2JqZWN0KHNjb3BlLGxvY2FscykpfSx7YXNzaWduOmZ1bmN0aW9uKHNjb3BlLHZhbHVlLGxvY2Fscyl7dmFyIG89b2JqZWN0KHNjb3BlLGxvY2Fscyk7cmV0dXJuIG98fG9iamVjdC5hc3NpZ24oc2NvcGUsbz17fSksc2V0dGVyKG8sZmllbGQsdmFsdWUscGFyc2VyLnRleHQscGFyc2VyLm9wdGlvbnMpfX0pfSxvYmplY3RJbmRleDpmdW5jdGlvbihvYmope3ZhciBwYXJzZXI9dGhpcyxpbmRleEZuPXRoaXMuZXhwcmVzc2lvbigpO3JldHVybiB0aGlzLmNvbnN1bWUoIl0iKSxleHRlbmQoZnVuY3Rpb24oc2VsZixsb2NhbHMpe3ZhciB2LHAsbz1vYmooc2VsZixsb2NhbHMpLGk9aW5kZXhGbihzZWxmLGxvY2Fscyk7cmV0dXJuIGVuc3VyZVNhZmVNZW1iZXJOYW1lKGkscGFyc2VyLnRleHQpLG8/KHY9ZW5zdXJlU2FmZU9iamVjdChvW2ldLHBhcnNlci50ZXh0KSx2JiZ2LnRoZW4mJnBhcnNlci5vcHRpb25zLnVud3JhcFByb21pc2VzJiYocD12LCIkJHYiaW4gdnx8KHAuJCR2PXVuZGVmaW5lZCxwLnRoZW4oZnVuY3Rpb24odmFsKXtwLiQkdj12YWx9KSksdj12LiQkdiksdik6dW5kZWZpbmVkfSx7YXNzaWduOmZ1bmN0aW9uKHNlbGYsdmFsdWUsbG9jYWxzKXt2YXIga2V5PWVuc3VyZVNhZmVNZW1iZXJOYW1lKGluZGV4Rm4oc2VsZixsb2NhbHMpLHBhcnNlci50ZXh0KSxvPWVuc3VyZVNhZmVPYmplY3Qob2JqKHNlbGYsbG9jYWxzKSxwYXJzZXIudGV4dCk7cmV0dXJuIG98fG9iai5hc3NpZ24oc2VsZixvPXt9KSxvW2tleV09dmFsdWV9fSl9LGZ1bmN0aW9uQ2FsbDpmdW5jdGlvbihmbixjb250ZXh0R2V0dGVyKXt2YXIgYXJnc0ZuPVtdO2lmKCIpIiE9PXRoaXMucGVla1Rva2VuKCkudGV4dClkbyBhcmdzRm4ucHVzaCh0aGlzLmV4cHJlc3Npb24oKSk7d2hpbGUodGhpcy5leHBlY3QoIiwiKSk7dGhpcy5jb25zdW1lKCIpIik7dmFyIHBhcnNlcj10aGlzO3JldHVybiBmdW5jdGlvbihzY29wZSxsb2NhbHMpe2Zvcih2YXIgYXJncz1bXSxjb250ZXh0PWNvbnRleHRHZXR0ZXI/Y29udGV4dEdldHRlcihzY29wZSxsb2NhbHMpOnNjb3BlLGk9MDtpPGFyZ3NGbi5sZW5ndGg7aSsrKWFyZ3MucHVzaChlbnN1cmVTYWZlT2JqZWN0KGFyZ3NGbltpXShzY29wZSxsb2NhbHMpLHBhcnNlci50ZXh0KSk7dmFyIGZuUHRyPWZuKHNjb3BlLGxvY2Fscyxjb250ZXh0KXx8bm9vcDtlbnN1cmVTYWZlT2JqZWN0KGNvbnRleHQscGFyc2VyLnRleHQpLGVuc3VyZVNhZmVGdW5jdGlvbihmblB0cixwYXJzZXIudGV4dCk7dmFyIHY9Zm5QdHIuYXBwbHk/Zm5QdHIuYXBwbHkoY29udGV4dCxhcmdzKTpmblB0cihhcmdzWzBdLGFyZ3NbMV0sYXJnc1syXSxhcmdzWzNdLGFyZ3NbNF0pO3JldHVybiBlbnN1cmVTYWZlT2JqZWN0KHYscGFyc2VyLnRleHQpfX0sYXJyYXlEZWNsYXJhdGlvbjpmdW5jdGlvbigpe3ZhciBlbGVtZW50Rm5zPVtdLGFsbENvbnN0YW50PSEwO2lmKCJdIiE9PXRoaXMucGVla1Rva2VuKCkudGV4dClkb3tpZih0aGlzLnBlZWsoIl0iKSlicmVhazt2YXIgZWxlbWVudEZuPXRoaXMuZXhwcmVzc2lvbigpO2VsZW1lbnRGbnMucHVzaChlbGVtZW50Rm4pLGVsZW1lbnRGbi5jb25zdGFudHx8KGFsbENvbnN0YW50PSExKX13aGlsZSh0aGlzLmV4cGVjdCgiLCIpKTtyZXR1cm4gdGhpcy5jb25zdW1lKCJdIiksZXh0ZW5kKGZ1bmN0aW9uKHNlbGYsbG9jYWxzKXtmb3IodmFyIGFycmF5PVtdLGk9MDtpPGVsZW1lbnRGbnMubGVuZ3RoO2krKylhcnJheS5wdXNoKGVsZW1lbnRGbnNbaV0oc2VsZixsb2NhbHMpKTtyZXR1cm4gYXJyYXl9LHtsaXRlcmFsOiEwLGNvbnN0YW50OmFsbENvbnN0YW50fSl9LG9iamVjdDpmdW5jdGlvbigpe3ZhciBrZXlWYWx1ZXM9W10sYWxsQ29uc3RhbnQ9ITA7aWYoIn0iIT09dGhpcy5wZWVrVG9rZW4oKS50ZXh0KWRve2lmKHRoaXMucGVlaygifSIpKWJyZWFrO3ZhciB0b2tlbj10aGlzLmV4cGVjdCgpLGtleT10b2tlbi5zdHJpbmd8fHRva2VuLnRleHQ7dGhpcy5jb25zdW1lKCI6Iik7dmFyIHZhbHVlPXRoaXMuZXhwcmVzc2lvbigpO2tleVZhbHVlcy5wdXNoKHtrZXk6a2V5LHZhbHVlOnZhbHVlfSksdmFsdWUuY29uc3RhbnR8fChhbGxDb25zdGFudD0hMSl9d2hpbGUodGhpcy5leHBlY3QoIiwiKSk7cmV0dXJuIHRoaXMuY29uc3VtZSgifSIpLGV4dGVuZChmdW5jdGlvbihzZWxmLGxvY2Fscyl7Zm9yKHZhciBvYmplY3Q9e30saT0wO2k8a2V5VmFsdWVzLmxlbmd0aDtpKyspe3ZhciBrZXlWYWx1ZT1rZXlWYWx1ZXNbaV07b2JqZWN0W2tleVZhbHVlLmtleV09a2V5VmFsdWUudmFsdWUoc2VsZixsb2NhbHMpfXJldHVybiBvYmplY3R9LHtsaXRlcmFsOiEwLGNvbnN0YW50OmFsbENvbnN0YW50fSl9fTt2YXIgZ2V0dGVyRm5DYWNoZT17fSwkc2NlTWluRXJyPW1pbkVycigiJHNjZSIpLFNDRV9DT05URVhUUz17SFRNTDoiaHRtbCIsQ1NTOiJjc3MiLFVSTDoidXJsIixSRVNPVVJDRV9VUkw6InJlc291cmNlVXJsIixKUzoianMifSx1cmxQYXJzaW5nTm9kZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIiksb3JpZ2luVXJsPXVybFJlc29sdmUod2luZG93LmxvY2F0aW9uLmhyZWYsITApOyRGaWx0ZXJQcm92aWRlci4kaW5qZWN0PVsiJHByb3ZpZGUiXSxjdXJyZW5jeUZpbHRlci4kaW5qZWN0PVsiJGxvY2FsZSJdLG51bWJlckZpbHRlci4kaW5qZWN0PVsiJGxvY2FsZSJdO3ZhciBERUNJTUFMX1NFUD0iLiIsREFURV9GT1JNQVRTPXt5eXl5OmRhdGVHZXR0ZXIoIkZ1bGxZZWFyIiw0KSx5eTpkYXRlR2V0dGVyKCJGdWxsWWVhciIsMiwwLCEwKSx5OmRhdGVHZXR0ZXIoIkZ1bGxZZWFyIiwxKSxNTU1NOmRhdGVTdHJHZXR0ZXIoIk1vbnRoIiksTU1NOmRhdGVTdHJHZXR0ZXIoIk1vbnRoIiwhMCksTU06ZGF0ZUdldHRlcigiTW9udGgiLDIsMSksTTpkYXRlR2V0dGVyKCJNb250aCIsMSwxKSxkZDpkYXRlR2V0dGVyKCJEYXRlIiwyKSxkOmRhdGVHZXR0ZXIoIkRhdGUiLDEpLEhIOmRhdGVHZXR0ZXIoIkhvdXJzIiwyKSxIOmRhdGVHZXR0ZXIoIkhvdXJzIiwxKSxoaDpkYXRlR2V0dGVyKCJIb3VycyIsMiwtMTIpLGg6ZGF0ZUdldHRlcigiSG91cnMiLDEsLTEyKSxtbTpkYXRlR2V0dGVyKCJNaW51dGVzIiwyKSxtOmRhdGVHZXR0ZXIoIk1pbnV0ZXMiLDEpLHNzOmRhdGVHZXR0ZXIoIlNlY29uZHMiLDIpLHM6ZGF0ZUdldHRlcigiU2Vjb25kcyIsMSksc3NzOmRhdGVHZXR0ZXIoIk1pbGxpc2Vjb25kcyIsMyksRUVFRTpkYXRlU3RyR2V0dGVyKCJEYXkiKSxFRUU6ZGF0ZVN0ckdldHRlcigiRGF5IiwhMCksYTphbXBtR2V0dGVyLFo6dGltZVpvbmVHZXR0ZXJ9LERBVEVfRk9STUFUU19TUExJVD0vKCg/OlteeU1kSGhtc2FaRSddKyl8KD86Jyg/OlteJ118JycpKicpfCg/OkUrfHkrfE0rfGQrfEgrfGgrfG0rfHMrfGF8WikpKC4qKS8sTlVNQkVSX1NUUklORz0vXlwtP1xkKyQvO2RhdGVGaWx0ZXIuJGluamVjdD1bIiRsb2NhbGUiXTt2YXIgbG93ZXJjYXNlRmlsdGVyPXZhbHVlRm4obG93ZXJjYXNlKSx1cHBlcmNhc2VGaWx0ZXI9dmFsdWVGbih1cHBlcmNhc2UpO29yZGVyQnlGaWx0ZXIuJGluamVjdD1bIiRwYXJzZSJdO3ZhciBodG1sQW5jaG9yRGlyZWN0aXZlPXZhbHVlRm4oe3Jlc3RyaWN0OiJFIixjb21waWxlOmZ1bmN0aW9uKGVsZW1lbnQsYXR0cil7cmV0dXJuIDg+PW1zaWUmJihhdHRyLmhyZWZ8fGF0dHIubmFtZXx8YXR0ci4kc2V0KCJocmVmIiwiIiksZWxlbWVudC5hcHBlbmQoZG9jdW1lbnQuY3JlYXRlQ29tbWVudCgiSUUgZml4IikpKSxhdHRyLmhyZWZ8fGF0dHIueGxpbmtIcmVmfHxhdHRyLm5hbWU/dm9pZCAwOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQpe3ZhciBocmVmPSJbb2JqZWN0IFNWR0FuaW1hdGVkU3RyaW5nXSI9PT10b1N0cmluZy5jYWxsKGVsZW1lbnQucHJvcCgiaHJlZiIpKT8ieGxpbms6aHJlZiI6ImhyZWYiO2VsZW1lbnQub24oImNsaWNrIixmdW5jdGlvbihldmVudCl7ZWxlbWVudC5hdHRyKGhyZWYpfHxldmVudC5wcmV2ZW50RGVmYXVsdCgpfSl9fX0pLG5nQXR0cmlidXRlQWxpYXNEaXJlY3RpdmVzPXt9O2ZvckVhY2goQk9PTEVBTl9BVFRSLGZ1bmN0aW9uKHByb3BOYW1lLGF0dHJOYW1lKXtpZigibXVsdGlwbGUiIT1wcm9wTmFtZSl7dmFyIG5vcm1hbGl6ZWQ9ZGlyZWN0aXZlTm9ybWFsaXplKCJuZy0iK2F0dHJOYW1lKTtuZ0F0dHJpYnV0ZUFsaWFzRGlyZWN0aXZlc1tub3JtYWxpemVkXT1mdW5jdGlvbigpe3JldHVybntwcmlvcml0eToxMDAsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe3Njb3BlLiR3YXRjaChhdHRyW25vcm1hbGl6ZWRdLGZ1bmN0aW9uKHZhbHVlKXthdHRyLiRzZXQoYXR0ck5hbWUsISF2YWx1ZSl9KX19fX19KSxmb3JFYWNoKFsic3JjIiwic3Jjc2V0IiwiaHJlZiJdLGZ1bmN0aW9uKGF0dHJOYW1lKXt2YXIgbm9ybWFsaXplZD1kaXJlY3RpdmVOb3JtYWxpemUoIm5nLSIrYXR0ck5hbWUpO25nQXR0cmlidXRlQWxpYXNEaXJlY3RpdmVzW25vcm1hbGl6ZWRdPWZ1bmN0aW9uKCl7cmV0dXJue3ByaW9yaXR5Ojk5LGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyKXt2YXIgcHJvcE5hbWU9YXR0ck5hbWUsbmFtZT1hdHRyTmFtZTsiaHJlZiI9PT1hdHRyTmFtZSYmIltvYmplY3QgU1ZHQW5pbWF0ZWRTdHJpbmddIj09PXRvU3RyaW5nLmNhbGwoZWxlbWVudC5wcm9wKCJocmVmIikpJiYobmFtZT0ieGxpbmtIcmVmIixhdHRyLiRhdHRyW25hbWVdPSJ4bGluazpocmVmIixwcm9wTmFtZT1udWxsKSxhdHRyLiRvYnNlcnZlKG5vcm1hbGl6ZWQsZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZT8oYXR0ci4kc2V0KG5hbWUsdmFsdWUpLHZvaWQobXNpZSYmcHJvcE5hbWUmJmVsZW1lbnQucHJvcChwcm9wTmFtZSxhdHRyW25hbWVdKSkpOnZvaWQoImhyZWYiPT09YXR0ck5hbWUmJmF0dHIuJHNldChuYW1lLG51bGwpKX0pfX19fSk7dmFyIG51bGxGb3JtQ3RybD17JGFkZENvbnRyb2w6bm9vcCwkcmVtb3ZlQ29udHJvbDpub29wLCRzZXRWYWxpZGl0eTpub29wLCRzZXREaXJ0eTpub29wLCRzZXRQcmlzdGluZTpub29wfTtGb3JtQ29udHJvbGxlci4kaW5qZWN0PVsiJGVsZW1lbnQiLCIkYXR0cnMiLCIkc2NvcGUiLCIkYW5pbWF0ZSJdO3ZhciBmb3JtRGlyZWN0aXZlRmFjdG9yeT1mdW5jdGlvbihpc05nRm9ybSl7cmV0dXJuWyIkdGltZW91dCIsZnVuY3Rpb24oJHRpbWVvdXQpe3ZhciBmb3JtRGlyZWN0aXZlPXtuYW1lOiJmb3JtIixyZXN0cmljdDppc05nRm9ybT8iRUFDIjoiRSIsY29udHJvbGxlcjpGb3JtQ29udHJvbGxlcixjb21waWxlOmZ1bmN0aW9uKCl7cmV0dXJue3ByZTpmdW5jdGlvbihzY29wZSxmb3JtRWxlbWVudCxhdHRyLGNvbnRyb2xsZXIpe2lmKCFhdHRyLmFjdGlvbil7dmFyIHByZXZlbnREZWZhdWx0TGlzdGVuZXI9ZnVuY3Rpb24oZXZlbnQpe2V2ZW50LnByZXZlbnREZWZhdWx0P2V2ZW50LnByZXZlbnREZWZhdWx0KCk6ZXZlbnQucmV0dXJuVmFsdWU9ITF9O2FkZEV2ZW50TGlzdGVuZXJGbihmb3JtRWxlbWVudFswXSwic3VibWl0IixwcmV2ZW50RGVmYXVsdExpc3RlbmVyKSxmb3JtRWxlbWVudC5vbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7JHRpbWVvdXQoZnVuY3Rpb24oKXtyZW1vdmVFdmVudExpc3RlbmVyRm4oZm9ybUVsZW1lbnRbMF0sInN1Ym1pdCIscHJldmVudERlZmF1bHRMaXN0ZW5lcil9LDAsITEpfSl9dmFyIHBhcmVudEZvcm1DdHJsPWZvcm1FbGVtZW50LnBhcmVudCgpLmNvbnRyb2xsZXIoImZvcm0iKSxhbGlhcz1hdHRyLm5hbWV8fGF0dHIubmdGb3JtO2FsaWFzJiZzZXR0ZXIoc2NvcGUsYWxpYXMsY29udHJvbGxlcixhbGlhcykscGFyZW50Rm9ybUN0cmwmJmZvcm1FbGVtZW50Lm9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtwYXJlbnRGb3JtQ3RybC4kcmVtb3ZlQ29udHJvbChjb250cm9sbGVyKSxhbGlhcyYmc2V0dGVyKHNjb3BlLGFsaWFzLHVuZGVmaW5lZCxhbGlhcyksZXh0ZW5kKGNvbnRyb2xsZXIsbnVsbEZvcm1DdHJsKX0pfX19fTtyZXR1cm4gZm9ybURpcmVjdGl2ZX1dfSxmb3JtRGlyZWN0aXZlPWZvcm1EaXJlY3RpdmVGYWN0b3J5KCksbmdGb3JtRGlyZWN0aXZlPWZvcm1EaXJlY3RpdmVGYWN0b3J5KCEwKSxVUkxfUkVHRVhQPS9eKGZ0cHxodHRwfGh0dHBzKTpcL1wvKFx3Kzp7MCwxfVx3KkApPyhcUyspKDpbMC05XSspPyhcL3xcLyhbXHcjITouPys9JiVAIVwtXC9dKSk/JC8sRU1BSUxfUkVHRVhQPS9eW2EtejAtOSEjJCUmJyorXC89P15fYHt8fX4uLV0rQFthLXowLTldKFthLXowLTktXSpbYS16MC05XSk/KFwuW2EtejAtOV0oW2EtejAtOS1dKlthLXowLTldKT8pKiQvaSxOVU1CRVJfUkVHRVhQPS9eXHMqKFwtfFwrKT8oXGQrfChcZCooXC5cZCopKSlccyokLyxpbnB1dFR5cGU9e3RleHQ6dGV4dElucHV0VHlwZSxudW1iZXI6bnVtYmVySW5wdXRUeXBlLHVybDp1cmxJbnB1dFR5cGUsZW1haWw6ZW1haWxJbnB1dFR5cGUscmFkaW86cmFkaW9JbnB1dFR5cGUsY2hlY2tib3g6Y2hlY2tib3hJbnB1dFR5cGUsaGlkZGVuOm5vb3AsYnV0dG9uOm5vb3Asc3VibWl0Om5vb3AscmVzZXQ6bm9vcCxmaWxlOm5vb3B9LG51bWJlckJhZEZsYWdzPVsiYmFkSW5wdXQiXSxpbnB1dERpcmVjdGl2ZT1bIiRicm93c2VyIiwiJHNuaWZmZXIiLGZ1bmN0aW9uKCRicm93c2VyLCRzbmlmZmVyKXtyZXR1cm57cmVzdHJpY3Q6IkUiLHJlcXVpcmU6Ij9uZ01vZGVsIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsKXtjdHJsJiYoaW5wdXRUeXBlW2xvd2VyY2FzZShhdHRyLnR5cGUpXXx8aW5wdXRUeXBlLnRleHQpKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsLCRzbmlmZmVyLCRicm93c2VyKX19fV0sVkFMSURfQ0xBU1M9Im5nLXZhbGlkIixJTlZBTElEX0NMQVNTPSJuZy1pbnZhbGlkIixQUklTVElORV9DTEFTUz0ibmctcHJpc3RpbmUiLERJUlRZX0NMQVNTPSJuZy1kaXJ0eSIsTmdNb2RlbENvbnRyb2xsZXI9WyIkc2NvcGUiLCIkZXhjZXB0aW9uSGFuZGxlciIsIiRhdHRycyIsIiRlbGVtZW50IiwiJHBhcnNlIiwiJGFuaW1hdGUiLGZ1bmN0aW9uKCRzY29wZSwkZXhjZXB0aW9uSGFuZGxlciwkYXR0ciwkZWxlbWVudCwkcGFyc2UsJGFuaW1hdGUpe2Z1bmN0aW9uIHRvZ2dsZVZhbGlkQ3NzKGlzVmFsaWQsdmFsaWRhdGlvbkVycm9yS2V5KXt2YWxpZGF0aW9uRXJyb3JLZXk9dmFsaWRhdGlvbkVycm9yS2V5PyItIitzbmFrZV9jYXNlKHZhbGlkYXRpb25FcnJvcktleSwiLSIpOiIiLCRhbmltYXRlLnJlbW92ZUNsYXNzKCRlbGVtZW50LChpc1ZhbGlkP0lOVkFMSURfQ0xBU1M6VkFMSURfQ0xBU1MpK3ZhbGlkYXRpb25FcnJvcktleSksJGFuaW1hdGUuYWRkQ2xhc3MoJGVsZW1lbnQsKGlzVmFsaWQ/VkFMSURfQ0xBU1M6SU5WQUxJRF9DTEFTUykrdmFsaWRhdGlvbkVycm9yS2V5KX10aGlzLiR2aWV3VmFsdWU9TnVtYmVyLk5hTix0aGlzLiRtb2RlbFZhbHVlPU51bWJlci5OYU4sdGhpcy4kcGFyc2Vycz1bXSx0aGlzLiRmb3JtYXR0ZXJzPVtdLHRoaXMuJHZpZXdDaGFuZ2VMaXN0ZW5lcnM9W10sdGhpcy4kcHJpc3RpbmU9ITAsdGhpcy4kZGlydHk9ITEsdGhpcy4kdmFsaWQ9ITAsdGhpcy4kaW52YWxpZD0hMSx0aGlzLiRuYW1lPSRhdHRyLm5hbWU7dmFyIG5nTW9kZWxHZXQ9JHBhcnNlKCRhdHRyLm5nTW9kZWwpLG5nTW9kZWxTZXQ9bmdNb2RlbEdldC5hc3NpZ247aWYoIW5nTW9kZWxTZXQpdGhyb3cgbWluRXJyKCJuZ01vZGVsIikoIm5vbmFzc2lnbiIsIkV4cHJlc3Npb24gJ3swfScgaXMgbm9uLWFzc2lnbmFibGUuIEVsZW1lbnQ6IHsxfSIsJGF0dHIubmdNb2RlbCxzdGFydGluZ1RhZygkZWxlbWVudCkpO3RoaXMuJHJlbmRlcj1ub29wLHRoaXMuJGlzRW1wdHk9ZnVuY3Rpb24odmFsdWUpe3JldHVybiBpc1VuZGVmaW5lZCh2YWx1ZSl8fCIiPT09dmFsdWV8fG51bGw9PT12YWx1ZXx8dmFsdWUhPT12YWx1ZX07dmFyIHBhcmVudEZvcm09JGVsZW1lbnQuaW5oZXJpdGVkRGF0YSgiJGZvcm1Db250cm9sbGVyIil8fG51bGxGb3JtQ3RybCxpbnZhbGlkQ291bnQ9MCwkZXJyb3I9dGhpcy4kZXJyb3I9e307JGVsZW1lbnQuYWRkQ2xhc3MoUFJJU1RJTkVfQ0xBU1MpLHRvZ2dsZVZhbGlkQ3NzKCEwKSx0aGlzLiRzZXRWYWxpZGl0eT1mdW5jdGlvbih2YWxpZGF0aW9uRXJyb3JLZXksaXNWYWxpZCl7JGVycm9yW3ZhbGlkYXRpb25FcnJvcktleV0hPT0haXNWYWxpZCYmKGlzVmFsaWQ/KCRlcnJvclt2YWxpZGF0aW9uRXJyb3JLZXldJiZpbnZhbGlkQ291bnQtLSxpbnZhbGlkQ291bnR8fCh0b2dnbGVWYWxpZENzcyghMCksdGhpcy4kdmFsaWQ9ITAsdGhpcy4kaW52YWxpZD0hMSkpOih0b2dnbGVWYWxpZENzcyghMSksdGhpcy4kaW52YWxpZD0hMCx0aGlzLiR2YWxpZD0hMSxpbnZhbGlkQ291bnQrKyksJGVycm9yW3ZhbGlkYXRpb25FcnJvcktleV09IWlzVmFsaWQsdG9nZ2xlVmFsaWRDc3MoaXNWYWxpZCx2YWxpZGF0aW9uRXJyb3JLZXkpLHBhcmVudEZvcm0uJHNldFZhbGlkaXR5KHZhbGlkYXRpb25FcnJvcktleSxpc1ZhbGlkLHRoaXMpKX0sdGhpcy4kc2V0UHJpc3RpbmU9ZnVuY3Rpb24oKXt0aGlzLiRkaXJ0eT0hMSx0aGlzLiRwcmlzdGluZT0hMCwkYW5pbWF0ZS5yZW1vdmVDbGFzcygkZWxlbWVudCxESVJUWV9DTEFTUyksJGFuaW1hdGUuYWRkQ2xhc3MoJGVsZW1lbnQsUFJJU1RJTkVfQ0xBU1MpfSx0aGlzLiRzZXRWaWV3VmFsdWU9ZnVuY3Rpb24odmFsdWUpe3RoaXMuJHZpZXdWYWx1ZT12YWx1ZSx0aGlzLiRwcmlzdGluZSYmKHRoaXMuJGRpcnR5PSEwLHRoaXMuJHByaXN0aW5lPSExLCRhbmltYXRlLnJlbW92ZUNsYXNzKCRlbGVtZW50LFBSSVNUSU5FX0NMQVNTKSwkYW5pbWF0ZS5hZGRDbGFzcygkZWxlbWVudCxESVJUWV9DTEFTUykscGFyZW50Rm9ybS4kc2V0RGlydHkoKSksZm9yRWFjaCh0aGlzLiRwYXJzZXJzLGZ1bmN0aW9uKGZuKXt2YWx1ZT1mbih2YWx1ZSl9KSx0aGlzLiRtb2RlbFZhbHVlIT09dmFsdWUmJih0aGlzLiRtb2RlbFZhbHVlPXZhbHVlLG5nTW9kZWxTZXQoJHNjb3BlLHZhbHVlKSxmb3JFYWNoKHRoaXMuJHZpZXdDaGFuZ2VMaXN0ZW5lcnMsZnVuY3Rpb24obGlzdGVuZXIpe3RyeXtsaXN0ZW5lcigpfWNhdGNoKGUpeyRleGNlcHRpb25IYW5kbGVyKGUpfX0pKX07dmFyIGN0cmw9dGhpczskc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCl7dmFyIHZhbHVlPW5nTW9kZWxHZXQoJHNjb3BlKTtpZihjdHJsLiRtb2RlbFZhbHVlIT09dmFsdWUpe3ZhciBmb3JtYXR0ZXJzPWN0cmwuJGZvcm1hdHRlcnMsaWR4PWZvcm1hdHRlcnMubGVuZ3RoO2ZvcihjdHJsLiRtb2RlbFZhbHVlPXZhbHVlO2lkeC0tOyl2YWx1ZT1mb3JtYXR0ZXJzW2lkeF0odmFsdWUpO2N0cmwuJHZpZXdWYWx1ZSE9PXZhbHVlJiYoY3RybC4kdmlld1ZhbHVlPXZhbHVlLGN0cmwuJHJlbmRlcigpKX1yZXR1cm4gdmFsdWV9KX1dLG5nTW9kZWxEaXJlY3RpdmU9ZnVuY3Rpb24oKXtyZXR1cm57cmVxdWlyZTpbIm5nTW9kZWwiLCJeP2Zvcm0iXSxjb250cm9sbGVyOk5nTW9kZWxDb250cm9sbGVyLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyLGN0cmxzKXt2YXIgbW9kZWxDdHJsPWN0cmxzWzBdLGZvcm1DdHJsPWN0cmxzWzFdfHxudWxsRm9ybUN0cmw7Zm9ybUN0cmwuJGFkZENvbnRyb2wobW9kZWxDdHJsKSxzY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpe2Zvcm1DdHJsLiRyZW1vdmVDb250cm9sKG1vZGVsQ3RybCl9KX19fSxuZ0NoYW5nZURpcmVjdGl2ZT12YWx1ZUZuKHtyZXF1aXJlOiJuZ01vZGVsIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cixjdHJsKXtjdHJsLiR2aWV3Q2hhbmdlTGlzdGVuZXJzLnB1c2goZnVuY3Rpb24oKXtzY29wZS4kZXZhbChhdHRyLm5nQ2hhbmdlKX0pfX0pLHJlcXVpcmVkRGlyZWN0aXZlPWZ1bmN0aW9uKCl7cmV0dXJue3JlcXVpcmU6Ij9uZ01vZGVsIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRyLGN0cmwpe2lmKGN0cmwpe2F0dHIucmVxdWlyZWQ9ITA7dmFyIHZhbGlkYXRvcj1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGF0dHIucmVxdWlyZWQmJmN0cmwuJGlzRW1wdHkodmFsdWUpP3ZvaWQgY3RybC4kc2V0VmFsaWRpdHkoInJlcXVpcmVkIiwhMSk6KGN0cmwuJHNldFZhbGlkaXR5KCJyZXF1aXJlZCIsITApLHZhbHVlKX07Y3RybC4kZm9ybWF0dGVycy5wdXNoKHZhbGlkYXRvciksY3RybC4kcGFyc2Vycy51bnNoaWZ0KHZhbGlkYXRvciksYXR0ci4kb2JzZXJ2ZSgicmVxdWlyZWQiLGZ1bmN0aW9uKCl7dmFsaWRhdG9yKGN0cmwuJHZpZXdWYWx1ZSl9KX19fX0sbmdMaXN0RGlyZWN0aXZlPWZ1bmN0aW9uKCl7cmV0dXJue3JlcXVpcmU6Im5nTW9kZWwiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyLGN0cmwpe3ZhciBtYXRjaD0vXC8oLiopXC8vLmV4ZWMoYXR0ci5uZ0xpc3QpLHNlcGFyYXRvcj1tYXRjaCYmbmV3IFJlZ0V4cChtYXRjaFsxXSl8fGF0dHIubmdMaXN0fHwiLCIscGFyc2U9ZnVuY3Rpb24odmlld1ZhbHVlKXtpZighaXNVbmRlZmluZWQodmlld1ZhbHVlKSl7dmFyIGxpc3Q9W107cmV0dXJuIHZpZXdWYWx1ZSYmZm9yRWFjaCh2aWV3VmFsdWUuc3BsaXQoc2VwYXJhdG9yKSxmdW5jdGlvbih2YWx1ZSl7dmFsdWUmJmxpc3QucHVzaCh0cmltKHZhbHVlKSl9KSxsaXN0fX07Y3RybC4kcGFyc2Vycy5wdXNoKHBhcnNlKSxjdHJsLiRmb3JtYXR0ZXJzLnB1c2goZnVuY3Rpb24odmFsdWUpe3JldHVybiBpc0FycmF5KHZhbHVlKT92YWx1ZS5qb2luKCIsICIpOnVuZGVmaW5lZH0pLGN0cmwuJGlzRW1wdHk9ZnVuY3Rpb24odmFsdWUpe3JldHVybiF2YWx1ZXx8IXZhbHVlLmxlbmd0aH19fX0sQ09OU1RBTlRfVkFMVUVfUkVHRVhQPS9eKHRydWV8ZmFsc2V8XGQrKSQvLG5nVmFsdWVEaXJlY3RpdmU9ZnVuY3Rpb24oKXtyZXR1cm57cHJpb3JpdHk6MTAwLGNvbXBpbGU6ZnVuY3Rpb24odHBsLHRwbEF0dHIpe3JldHVybiBDT05TVEFOVF9WQUxVRV9SRUdFWFAudGVzdCh0cGxBdHRyLm5nVmFsdWUpP2Z1bmN0aW9uKHNjb3BlLGVsbSxhdHRyKXthdHRyLiRzZXQoInZhbHVlIixzY29wZS4kZXZhbChhdHRyLm5nVmFsdWUpKX06ZnVuY3Rpb24oc2NvcGUsZWxtLGF0dHIpe3Njb3BlLiR3YXRjaChhdHRyLm5nVmFsdWUsZnVuY3Rpb24odmFsdWUpe2F0dHIuJHNldCgidmFsdWUiLHZhbHVlKX0pfX19fSxuZ0JpbmREaXJlY3RpdmU9bmdEaXJlY3RpdmUoe2NvbXBpbGU6ZnVuY3Rpb24odGVtcGxhdGVFbGVtZW50KXtyZXR1cm4gdGVtcGxhdGVFbGVtZW50LmFkZENsYXNzKCJuZy1iaW5kaW5nIiksZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyKXtlbGVtZW50LmRhdGEoIiRiaW5kaW5nIixhdHRyLm5nQmluZCksc2NvcGUuJHdhdGNoKGF0dHIubmdCaW5kLGZ1bmN0aW9uKHZhbHVlKXtlbGVtZW50LnRleHQodmFsdWU9PXVuZGVmaW5lZD8iIjp2YWx1ZSl9KX19fSksbmdCaW5kVGVtcGxhdGVEaXJlY3RpdmU9WyIkaW50ZXJwb2xhdGUiLGZ1bmN0aW9uKCRpbnRlcnBvbGF0ZSl7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cil7dmFyIGludGVycG9sYXRlRm49JGludGVycG9sYXRlKGVsZW1lbnQuYXR0cihhdHRyLiRhdHRyLm5nQmluZFRlbXBsYXRlKSk7ZWxlbWVudC5hZGRDbGFzcygibmctYmluZGluZyIpLmRhdGEoIiRiaW5kaW5nIixpbnRlcnBvbGF0ZUZuKSxhdHRyLiRvYnNlcnZlKCJuZ0JpbmRUZW1wbGF0ZSIsZnVuY3Rpb24odmFsdWUpe2VsZW1lbnQudGV4dCh2YWx1ZSl9KX19XSxuZ0JpbmRIdG1sRGlyZWN0aXZlPVsiJHNjZSIsIiRwYXJzZSIsZnVuY3Rpb24oJHNjZSwkcGFyc2Upe3JldHVybntjb21waWxlOmZ1bmN0aW9uKHRFbGVtZW50KXtyZXR1cm4gdEVsZW1lbnQuYWRkQ2xhc3MoIm5nLWJpbmRpbmciKSxmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe2Z1bmN0aW9uIGdldFN0cmluZ1ZhbHVlKCl7cmV0dXJuKHBhcnNlZChzY29wZSl8fCIiKS50b1N0cmluZygpfWVsZW1lbnQuZGF0YSgiJGJpbmRpbmciLGF0dHIubmdCaW5kSHRtbCk7dmFyIHBhcnNlZD0kcGFyc2UoYXR0ci5uZ0JpbmRIdG1sKTtzY29wZS4kd2F0Y2goZ2V0U3RyaW5nVmFsdWUsZnVuY3Rpb24oKXtlbGVtZW50Lmh0bWwoJHNjZS5nZXRUcnVzdGVkSHRtbChwYXJzZWQoc2NvcGUpKXx8IiIpfSl9fX19XSxuZ0NsYXNzRGlyZWN0aXZlPWNsYXNzRGlyZWN0aXZlKCIiLCEwKSxuZ0NsYXNzT2RkRGlyZWN0aXZlPWNsYXNzRGlyZWN0aXZlKCJPZGQiLDApLG5nQ2xhc3NFdmVuRGlyZWN0aXZlPWNsYXNzRGlyZWN0aXZlKCJFdmVuIiwxKSxuZ0Nsb2FrRGlyZWN0aXZlPW5nRGlyZWN0aXZlKHtjb21waWxlOmZ1bmN0aW9uKGVsZW1lbnQsYXR0cil7YXR0ci4kc2V0KCJuZ0Nsb2FrIix1bmRlZmluZWQpLGVsZW1lbnQucmVtb3ZlQ2xhc3MoIm5nLWNsb2FrIil9fSksbmdDb250cm9sbGVyRGlyZWN0aXZlPVtmdW5jdGlvbigpe3JldHVybntzY29wZTohMCxjb250cm9sbGVyOiJAIixwcmlvcml0eTo1MDB9fV0sbmdFdmVudERpcmVjdGl2ZXM9e30sZm9yY2VBc3luY0V2ZW50cz17Ymx1cjohMCxmb2N1czohMH07Zm9yRWFjaCgiY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlbW92ZSBtb3VzZWVudGVyIG1vdXNlbGVhdmUga2V5ZG93biBrZXl1cCBrZXlwcmVzcyBzdWJtaXQgZm9jdXMgYmx1ciBjb3B5IGN1dCBwYXN0ZSIuc3BsaXQoIiAiKSxmdW5jdGlvbihldmVudE5hbWUpe3ZhciBkaXJlY3RpdmVOYW1lPWRpcmVjdGl2ZU5vcm1hbGl6ZSgibmctIitldmVudE5hbWUpO25nRXZlbnREaXJlY3RpdmVzW2RpcmVjdGl2ZU5hbWVdPVsiJHBhcnNlIiwiJHJvb3RTY29wZSIsZnVuY3Rpb24oJHBhcnNlLCRyb290U2NvcGUpe3JldHVybntjb21waWxlOmZ1bmN0aW9uKCRlbGVtZW50LGF0dHIpe3ZhciBmbj0kcGFyc2UoYXR0cltkaXJlY3RpdmVOYW1lXSk7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQpe2VsZW1lbnQub24oZXZlbnROYW1lLGZ1bmN0aW9uKGV2ZW50KXt2YXIgY2FsbGJhY2s9ZnVuY3Rpb24oKXtmbihzY29wZSx7JGV2ZW50OmV2ZW50fSl9O2ZvcmNlQXN5bmNFdmVudHNbZXZlbnROYW1lXSYmJHJvb3RTY29wZS4kJHBoYXNlP3Njb3BlLiRldmFsQXN5bmMoY2FsbGJhY2spOnNjb3BlLiRhcHBseShjYWxsYmFjayl9KX19fX1dfSk7dmFyIG5nSWZEaXJlY3RpdmU9WyIkYW5pbWF0ZSIsZnVuY3Rpb24oJGFuaW1hdGUpe3JldHVybnt0cmFuc2NsdWRlOiJlbGVtZW50Iixwcmlvcml0eTo2MDAsdGVybWluYWw6ITAscmVzdHJpY3Q6IkEiLCQkdGxiOiEwLGxpbms6ZnVuY3Rpb24oJHNjb3BlLCRlbGVtZW50LCRhdHRyLGN0cmwsJHRyYW5zY2x1ZGUpe3ZhciBibG9jayxjaGlsZFNjb3BlLHByZXZpb3VzRWxlbWVudHM7JHNjb3BlLiR3YXRjaCgkYXR0ci5uZ0lmLGZ1bmN0aW9uKHZhbHVlKXt0b0Jvb2xlYW4odmFsdWUpP2NoaWxkU2NvcGV8fChjaGlsZFNjb3BlPSRzY29wZS4kbmV3KCksJHRyYW5zY2x1ZGUoY2hpbGRTY29wZSxmdW5jdGlvbihjbG9uZSl7Y2xvbmVbY2xvbmUubGVuZ3RoKytdPWRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiBlbmQgbmdJZjogIiskYXR0ci5uZ0lmKyIgIiksYmxvY2s9e2Nsb25lOmNsb25lfSwkYW5pbWF0ZS5lbnRlcihjbG9uZSwkZWxlbWVudC5wYXJlbnQoKSwkZWxlbWVudCl9KSk6KHByZXZpb3VzRWxlbWVudHMmJihwcmV2aW91c0VsZW1lbnRzLnJlbW92ZSgpLHByZXZpb3VzRWxlbWVudHM9bnVsbCksY2hpbGRTY29wZSYmKGNoaWxkU2NvcGUuJGRlc3Ryb3koKSxjaGlsZFNjb3BlPW51bGwpLGJsb2NrJiYocHJldmlvdXNFbGVtZW50cz1nZXRCbG9ja0VsZW1lbnRzKGJsb2NrLmNsb25lKSwkYW5pbWF0ZS5sZWF2ZShwcmV2aW91c0VsZW1lbnRzLGZ1bmN0aW9uKCl7cHJldmlvdXNFbGVtZW50cz1udWxsfSksYmxvY2s9bnVsbCkpfSl9fX1dLG5nSW5jbHVkZURpcmVjdGl2ZT1bIiRodHRwIiwiJHRlbXBsYXRlQ2FjaGUiLCIkYW5jaG9yU2Nyb2xsIiwiJGFuaW1hdGUiLCIkc2NlIixmdW5jdGlvbigkaHR0cCwkdGVtcGxhdGVDYWNoZSwkYW5jaG9yU2Nyb2xsLCRhbmltYXRlLCRzY2Upe3JldHVybntyZXN0cmljdDoiRUNBIixwcmlvcml0eTo0MDAsdGVybWluYWw6ITAsdHJhbnNjbHVkZToiZWxlbWVudCIsY29udHJvbGxlcjphbmd1bGFyLm5vb3AsY29tcGlsZTpmdW5jdGlvbihlbGVtZW50LGF0dHIpe3ZhciBzcmNFeHA9YXR0ci5uZ0luY2x1ZGV8fGF0dHIuc3JjLG9ubG9hZEV4cD1hdHRyLm9ubG9hZHx8IiIsYXV0b1Njcm9sbEV4cD1hdHRyLmF1dG9zY3JvbGw7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLCRlbGVtZW50LCRhdHRyLGN0cmwsJHRyYW5zY2x1ZGUpe3ZhciBjdXJyZW50U2NvcGUscHJldmlvdXNFbGVtZW50LGN1cnJlbnRFbGVtZW50LGNoYW5nZUNvdW50ZXI9MCxjbGVhbnVwTGFzdEluY2x1ZGVDb250ZW50PWZ1bmN0aW9uKCl7cHJldmlvdXNFbGVtZW50JiYocHJldmlvdXNFbGVtZW50LnJlbW92ZSgpLHByZXZpb3VzRWxlbWVudD1udWxsKSxjdXJyZW50U2NvcGUmJihjdXJyZW50U2NvcGUuJGRlc3Ryb3koKSxjdXJyZW50U2NvcGU9bnVsbCksY3VycmVudEVsZW1lbnQmJigkYW5pbWF0ZS5sZWF2ZShjdXJyZW50RWxlbWVudCxmdW5jdGlvbigpe3ByZXZpb3VzRWxlbWVudD1udWxsfSkscHJldmlvdXNFbGVtZW50PWN1cnJlbnRFbGVtZW50LGN1cnJlbnRFbGVtZW50PW51bGwpfTtzY29wZS4kd2F0Y2goJHNjZS5wYXJzZUFzUmVzb3VyY2VVcmwoc3JjRXhwKSxmdW5jdGlvbihzcmMpe3ZhciBhZnRlckFuaW1hdGlvbj1mdW5jdGlvbigpeyFpc0RlZmluZWQoYXV0b1Njcm9sbEV4cCl8fGF1dG9TY3JvbGxFeHAmJiFzY29wZS4kZXZhbChhdXRvU2Nyb2xsRXhwKXx8JGFuY2hvclNjcm9sbCgpfSx0aGlzQ2hhbmdlSWQ9KytjaGFuZ2VDb3VudGVyO3NyYz8oJGh0dHAuZ2V0KHNyYyx7Y2FjaGU6JHRlbXBsYXRlQ2FjaGV9KS5zdWNjZXNzKGZ1bmN0aW9uKHJlc3BvbnNlKXtpZih0aGlzQ2hhbmdlSWQ9PT1jaGFuZ2VDb3VudGVyKXt2YXIgbmV3U2NvcGU9c2NvcGUuJG5ldygpO2N0cmwudGVtcGxhdGU9cmVzcG9uc2U7dmFyIGNsb25lPSR0cmFuc2NsdWRlKG5ld1Njb3BlLGZ1bmN0aW9uKGNsb25lKXtjbGVhbnVwTGFzdEluY2x1ZGVDb250ZW50KCksJGFuaW1hdGUuZW50ZXIoY2xvbmUsbnVsbCwkZWxlbWVudCxhZnRlckFuaW1hdGlvbil9KTtjdXJyZW50U2NvcGU9bmV3U2NvcGUsY3VycmVudEVsZW1lbnQ9Y2xvbmUsY3VycmVudFNjb3BlLiRlbWl0KCIkaW5jbHVkZUNvbnRlbnRMb2FkZWQiKSxzY29wZS4kZXZhbChvbmxvYWRFeHApfX0pLmVycm9yKGZ1bmN0aW9uKCl7dGhpc0NoYW5nZUlkPT09Y2hhbmdlQ291bnRlciYmY2xlYW51cExhc3RJbmNsdWRlQ29udGVudCgpfSksc2NvcGUuJGVtaXQoIiRpbmNsdWRlQ29udGVudFJlcXVlc3RlZCIpKTooY2xlYW51cExhc3RJbmNsdWRlQ29udGVudCgpLGN0cmwudGVtcGxhdGU9bnVsbCl9KX19fX1dLG5nSW5jbHVkZUZpbGxDb250ZW50RGlyZWN0aXZlPVsiJGNvbXBpbGUiLGZ1bmN0aW9uKCRjb21waWxlKXtyZXR1cm57cmVzdHJpY3Q6IkVDQSIscHJpb3JpdHk6LTQwMCxyZXF1aXJlOiJuZ0luY2x1ZGUiLGxpbms6ZnVuY3Rpb24oc2NvcGUsJGVsZW1lbnQsJGF0dHIsY3RybCl7JGVsZW1lbnQuaHRtbChjdHJsLnRlbXBsYXRlKSwkY29tcGlsZSgkZWxlbWVudC5jb250ZW50cygpKShzY29wZSl9fX1dLG5nSW5pdERpcmVjdGl2ZT1uZ0RpcmVjdGl2ZSh7cHJpb3JpdHk6NDUwLGNvbXBpbGU6ZnVuY3Rpb24oKXtyZXR1cm57cHJlOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMpe3Njb3BlLiRldmFsKGF0dHJzLm5nSW5pdCl9fX19KSxuZ05vbkJpbmRhYmxlRGlyZWN0aXZlPW5nRGlyZWN0aXZlKHt0ZXJtaW5hbDohMCxwcmlvcml0eToxZTN9KSxuZ1BsdXJhbGl6ZURpcmVjdGl2ZT1bIiRsb2NhbGUiLCIkaW50ZXJwb2xhdGUiLGZ1bmN0aW9uKCRsb2NhbGUsJGludGVycG9sYXRlKXt2YXIgQlJBQ0U9L3t9L2c7cmV0dXJue3Jlc3RyaWN0OiJFQSIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe3ZhciBudW1iZXJFeHA9YXR0ci5jb3VudCx3aGVuRXhwPWF0dHIuJGF0dHIud2hlbiYmZWxlbWVudC5hdHRyKGF0dHIuJGF0dHIud2hlbiksb2Zmc2V0PWF0dHIub2Zmc2V0fHwwLHdoZW5zPXNjb3BlLiRldmFsKHdoZW5FeHApfHx7fSx3aGVuc0V4cEZucz17fSxzdGFydFN5bWJvbD0kaW50ZXJwb2xhdGUuc3RhcnRTeW1ib2woKSxlbmRTeW1ib2w9JGludGVycG9sYXRlLmVuZFN5bWJvbCgpLGlzV2hlbj0vXndoZW4oTWludXMpPyguKykkLztmb3JFYWNoKGF0dHIsZnVuY3Rpb24oZXhwcmVzc2lvbixhdHRyaWJ1dGVOYW1lKXtpc1doZW4udGVzdChhdHRyaWJ1dGVOYW1lKSYmKHdoZW5zW2xvd2VyY2FzZShhdHRyaWJ1dGVOYW1lLnJlcGxhY2UoIndoZW4iLCIiKS5yZXBsYWNlKCJNaW51cyIsIi0iKSldPWVsZW1lbnQuYXR0cihhdHRyLiRhdHRyW2F0dHJpYnV0ZU5hbWVdKSl9KSxmb3JFYWNoKHdoZW5zLGZ1bmN0aW9uKGV4cHJlc3Npb24sa2V5KXt3aGVuc0V4cEZuc1trZXldPSRpbnRlcnBvbGF0ZShleHByZXNzaW9uLnJlcGxhY2UoQlJBQ0Usc3RhcnRTeW1ib2wrbnVtYmVyRXhwKyItIitvZmZzZXQrZW5kU3ltYm9sKSl9KSxzY29wZS4kd2F0Y2goZnVuY3Rpb24oKXt2YXIgdmFsdWU9cGFyc2VGbG9hdChzY29wZS4kZXZhbChudW1iZXJFeHApKTtyZXR1cm4gaXNOYU4odmFsdWUpPyIiOih2YWx1ZSBpbiB3aGVuc3x8KHZhbHVlPSRsb2NhbGUucGx1cmFsQ2F0KHZhbHVlLW9mZnNldCkpLHdoZW5zRXhwRm5zW3ZhbHVlXShzY29wZSxlbGVtZW50LCEwKSl9LGZ1bmN0aW9uKG5ld1ZhbCl7ZWxlbWVudC50ZXh0KG5ld1ZhbCl9KX19fV0sbmdSZXBlYXREaXJlY3RpdmU9WyIkcGFyc2UiLCIkYW5pbWF0ZSIsZnVuY3Rpb24oJHBhcnNlLCRhbmltYXRlKXtmdW5jdGlvbiBnZXRCbG9ja1N0YXJ0KGJsb2NrKXtyZXR1cm4gYmxvY2suY2xvbmVbMF19ZnVuY3Rpb24gZ2V0QmxvY2tFbmQoYmxvY2spe3JldHVybiBibG9jay5jbG9uZVtibG9jay5jbG9uZS5sZW5ndGgtMV19dmFyIE5HX1JFTU9WRUQ9IiQkTkdfUkVNT1ZFRCIsbmdSZXBlYXRNaW5FcnI9bWluRXJyKCJuZ1JlcGVhdCIpO3JldHVybnt0cmFuc2NsdWRlOiJlbGVtZW50Iixwcmlvcml0eToxZTMsdGVybWluYWw6ITAsJCR0bGI6ITAsbGluazpmdW5jdGlvbigkc2NvcGUsJGVsZW1lbnQsJGF0dHIsY3RybCwkdHJhbnNjbHVkZSl7dmFyIHRyYWNrQnlFeHAsdHJhY2tCeUV4cEdldHRlcix0cmFja0J5SWRFeHBGbix0cmFja0J5SWRBcnJheUZuLHRyYWNrQnlJZE9iakZuLGxocyxyaHMsdmFsdWVJZGVudGlmaWVyLGtleUlkZW50aWZpZXIsZXhwcmVzc2lvbj0kYXR0ci5uZ1JlcGVhdCxtYXRjaD1leHByZXNzaW9uLm1hdGNoKC9eXHMqKFtcc1xTXSs/KVxzK2luXHMrKFtcc1xTXSs/KSg/OlxzK3RyYWNrXHMrYnlccysoW1xzXFNdKz8pKT9ccyokLyksaGFzaEZuTG9jYWxzPXskaWQ6aGFzaEtleX07aWYoIW1hdGNoKXRocm93IG5nUmVwZWF0TWluRXJyKCJpZXhwIiwiRXhwZWN0ZWQgZXhwcmVzc2lvbiBpbiBmb3JtIG9mICdfaXRlbV8gaW4gX2NvbGxlY3Rpb25fWyB0cmFjayBieSBfaWRfXScgYnV0IGdvdCAnezB9Jy4iLGV4cHJlc3Npb24pO2lmKGxocz1tYXRjaFsxXSxyaHM9bWF0Y2hbMl0sdHJhY2tCeUV4cD1tYXRjaFszXSx0cmFja0J5RXhwPyh0cmFja0J5RXhwR2V0dGVyPSRwYXJzZSh0cmFja0J5RXhwKSx0cmFja0J5SWRFeHBGbj1mdW5jdGlvbihrZXksdmFsdWUsaW5kZXgpe3JldHVybiBrZXlJZGVudGlmaWVyJiYoaGFzaEZuTG9jYWxzW2tleUlkZW50aWZpZXJdPWtleSksaGFzaEZuTG9jYWxzW3ZhbHVlSWRlbnRpZmllcl09dmFsdWUsaGFzaEZuTG9jYWxzLiRpbmRleD1pbmRleCx0cmFja0J5RXhwR2V0dGVyKCRzY29wZSxoYXNoRm5Mb2NhbHMpfSk6KHRyYWNrQnlJZEFycmF5Rm49ZnVuY3Rpb24oa2V5LHZhbHVlKXtyZXR1cm4gaGFzaEtleSh2YWx1ZSl9LHRyYWNrQnlJZE9iakZuPWZ1bmN0aW9uKGtleSl7cmV0dXJuIGtleX0pLG1hdGNoPWxocy5tYXRjaCgvXig/OihbXCRcd10rKXxcKChbXCRcd10rKVxzKixccyooW1wkXHddKylcKSkkLyksIW1hdGNoKXRocm93IG5nUmVwZWF0TWluRXJyKCJpaWRleHAiLCInX2l0ZW1fJyBpbiAnX2l0ZW1fIGluIF9jb2xsZWN0aW9uXycgc2hvdWxkIGJlIGFuIGlkZW50aWZpZXIgb3IgJyhfa2V5XywgX3ZhbHVlXyknIGV4cHJlc3Npb24sIGJ1dCBnb3QgJ3swfScuIixsaHMpO3ZhbHVlSWRlbnRpZmllcj1tYXRjaFszXXx8bWF0Y2hbMV0sa2V5SWRlbnRpZmllcj1tYXRjaFsyXTt2YXIgbGFzdEJsb2NrTWFwPXt9OyRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKHJocyxmdW5jdGlvbihjb2xsZWN0aW9uKXt2YXIgaW5kZXgsbGVuZ3RoLG5leHROb2RlLGFycmF5TGVuZ3RoLGNoaWxkU2NvcGUsa2V5LHZhbHVlLHRyYWNrQnlJZCx0cmFja0J5SWRGbixjb2xsZWN0aW9uS2V5cyxibG9jayxlbGVtZW50c1RvUmVtb3ZlLHByZXZpb3VzTm9kZT0kZWxlbWVudFswXSxuZXh0QmxvY2tNYXA9e30sbmV4dEJsb2NrT3JkZXI9W107aWYoaXNBcnJheUxpa2UoY29sbGVjdGlvbikpY29sbGVjdGlvbktleXM9Y29sbGVjdGlvbix0cmFja0J5SWRGbj10cmFja0J5SWRFeHBGbnx8dHJhY2tCeUlkQXJyYXlGbjtlbHNle3RyYWNrQnlJZEZuPXRyYWNrQnlJZEV4cEZufHx0cmFja0J5SWRPYmpGbixjb2xsZWN0aW9uS2V5cz1bXTtmb3Ioa2V5IGluIGNvbGxlY3Rpb24pY29sbGVjdGlvbi5oYXNPd25Qcm9wZXJ0eShrZXkpJiYiJCIhPWtleS5jaGFyQXQoMCkmJmNvbGxlY3Rpb25LZXlzLnB1c2goa2V5KTtjb2xsZWN0aW9uS2V5cy5zb3J0KCl9Zm9yKGFycmF5TGVuZ3RoPWNvbGxlY3Rpb25LZXlzLmxlbmd0aCxsZW5ndGg9bmV4dEJsb2NrT3JkZXIubGVuZ3RoPWNvbGxlY3Rpb25LZXlzLmxlbmd0aCxpbmRleD0wO2xlbmd0aD5pbmRleDtpbmRleCsrKWlmKGtleT1jb2xsZWN0aW9uPT09Y29sbGVjdGlvbktleXM/aW5kZXg6Y29sbGVjdGlvbktleXNbaW5kZXhdLHZhbHVlPWNvbGxlY3Rpb25ba2V5XSx0cmFja0J5SWQ9dHJhY2tCeUlkRm4oa2V5LHZhbHVlLGluZGV4KSxhc3NlcnROb3RIYXNPd25Qcm9wZXJ0eSh0cmFja0J5SWQsImB0cmFjayBieWAgaWQiKSxsYXN0QmxvY2tNYXAuaGFzT3duUHJvcGVydHkodHJhY2tCeUlkKSlibG9jaz1sYXN0QmxvY2tNYXBbdHJhY2tCeUlkXSxkZWxldGUgbGFzdEJsb2NrTWFwW3RyYWNrQnlJZF0sbmV4dEJsb2NrTWFwW3RyYWNrQnlJZF09YmxvY2ssbmV4dEJsb2NrT3JkZXJbaW5kZXhdPWJsb2NrO2Vsc2V7aWYobmV4dEJsb2NrTWFwLmhhc093blByb3BlcnR5KHRyYWNrQnlJZCkpdGhyb3cgZm9yRWFjaChuZXh0QmxvY2tPcmRlcixmdW5jdGlvbihibG9jayl7YmxvY2smJmJsb2NrLnNjb3BlJiYobGFzdEJsb2NrTWFwW2Jsb2NrLmlkXT1ibG9jayl9KSxuZ1JlcGVhdE1pbkVycigiZHVwZXMiLCJEdXBsaWNhdGVzIGluIGEgcmVwZWF0ZXIgYXJlIG5vdCBhbGxvd2VkLiBVc2UgJ3RyYWNrIGJ5JyBleHByZXNzaW9uIHRvIHNwZWNpZnkgdW5pcXVlIGtleXMuIFJlcGVhdGVyOiB7MH0sIER1cGxpY2F0ZSBrZXk6IHsxfSwgRHVwbGljYXRlIHZhbHVlOiB7Mn0iLGV4cHJlc3Npb24sdHJhY2tCeUlkLHRvSnNvbih2YWx1ZSkpO25leHRCbG9ja09yZGVyW2luZGV4XT17aWQ6dHJhY2tCeUlkfSxuZXh0QmxvY2tNYXBbdHJhY2tCeUlkXT0hMX1mb3Ioa2V5IGluIGxhc3RCbG9ja01hcClsYXN0QmxvY2tNYXAuaGFzT3duUHJvcGVydHkoa2V5KSYmKGJsb2NrPWxhc3RCbG9ja01hcFtrZXldLGVsZW1lbnRzVG9SZW1vdmU9Z2V0QmxvY2tFbGVtZW50cyhibG9jay5jbG9uZSksJGFuaW1hdGUubGVhdmUoZWxlbWVudHNUb1JlbW92ZSksZm9yRWFjaChlbGVtZW50c1RvUmVtb3ZlLGZ1bmN0aW9uKGVsZW1lbnQpe2VsZW1lbnRbTkdfUkVNT1ZFRF09ITB9KSxibG9jay5zY29wZS4kZGVzdHJveSgpKTtmb3IoaW5kZXg9MCxsZW5ndGg9Y29sbGVjdGlvbktleXMubGVuZ3RoO2xlbmd0aD5pbmRleDtpbmRleCsrKXtpZihrZXk9Y29sbGVjdGlvbj09PWNvbGxlY3Rpb25LZXlzP2luZGV4OmNvbGxlY3Rpb25LZXlzW2luZGV4XSx2YWx1ZT1jb2xsZWN0aW9uW2tleV0sYmxvY2s9bmV4dEJsb2NrT3JkZXJbaW5kZXhdLG5leHRCbG9ja09yZGVyW2luZGV4LTFdJiYocHJldmlvdXNOb2RlPWdldEJsb2NrRW5kKG5leHRCbG9ja09yZGVyW2luZGV4LTFdKSksYmxvY2suc2NvcGUpe2NoaWxkU2NvcGU9YmxvY2suc2NvcGUsbmV4dE5vZGU9cHJldmlvdXNOb2RlO2RvIG5leHROb2RlPW5leHROb2RlLm5leHRTaWJsaW5nO3doaWxlKG5leHROb2RlJiZuZXh0Tm9kZVtOR19SRU1PVkVEXSk7Z2V0QmxvY2tTdGFydChibG9jaykhPW5leHROb2RlJiYkYW5pbWF0ZS5tb3ZlKGdldEJsb2NrRWxlbWVudHMoYmxvY2suY2xvbmUpLG51bGwsanFMaXRlKHByZXZpb3VzTm9kZSkpLHByZXZpb3VzTm9kZT1nZXRCbG9ja0VuZChibG9jayl9ZWxzZSBjaGlsZFNjb3BlPSRzY29wZS4kbmV3KCk7Y2hpbGRTY29wZVt2YWx1ZUlkZW50aWZpZXJdPXZhbHVlLGtleUlkZW50aWZpZXImJihjaGlsZFNjb3BlW2tleUlkZW50aWZpZXJdPWtleSksY2hpbGRTY29wZS4kaW5kZXg9aW5kZXgsY2hpbGRTY29wZS4kZmlyc3Q9MD09PWluZGV4LGNoaWxkU2NvcGUuJGxhc3Q9aW5kZXg9PT1hcnJheUxlbmd0aC0xLGNoaWxkU2NvcGUuJG1pZGRsZT0hKGNoaWxkU2NvcGUuJGZpcnN0fHxjaGlsZFNjb3BlLiRsYXN0KSxjaGlsZFNjb3BlLiRvZGQ9IShjaGlsZFNjb3BlLiRldmVuPTA9PT0oMSZpbmRleCkpLGJsb2NrLnNjb3BlfHwkdHJhbnNjbHVkZShjaGlsZFNjb3BlLGZ1bmN0aW9uKGNsb25lKXtjbG9uZVtjbG9uZS5sZW5ndGgrK109ZG9jdW1lbnQuY3JlYXRlQ29tbWVudCgiIGVuZCBuZ1JlcGVhdDogIitleHByZXNzaW9uKyIgIiksJGFuaW1hdGUuZW50ZXIoY2xvbmUsbnVsbCxqcUxpdGUocHJldmlvdXNOb2RlKSkscHJldmlvdXNOb2RlPWNsb25lLGJsb2NrLnNjb3BlPWNoaWxkU2NvcGUsYmxvY2suY2xvbmU9Y2xvbmUsbmV4dEJsb2NrTWFwW2Jsb2NrLmlkXT1ibG9ja30pfWxhc3RCbG9ja01hcD1uZXh0QmxvY2tNYXB9KX19fV0sbmdTaG93RGlyZWN0aXZlPVsiJGFuaW1hdGUiLGZ1bmN0aW9uKCRhbmltYXRlKXtyZXR1cm4gZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyKXtzY29wZS4kd2F0Y2goYXR0ci5uZ1Nob3csZnVuY3Rpb24odmFsdWUpeyRhbmltYXRlW3RvQm9vbGVhbih2YWx1ZSk/InJlbW92ZUNsYXNzIjoiYWRkQ2xhc3MiXShlbGVtZW50LCJuZy1oaWRlIil9KX19XSxuZ0hpZGVEaXJlY3RpdmU9WyIkYW5pbWF0ZSIsZnVuY3Rpb24oJGFuaW1hdGUpe3JldHVybiBmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe3Njb3BlLiR3YXRjaChhdHRyLm5nSGlkZSxmdW5jdGlvbih2YWx1ZSl7JGFuaW1hdGVbdG9Cb29sZWFuKHZhbHVlKT8iYWRkQ2xhc3MiOiJyZW1vdmVDbGFzcyJdKGVsZW1lbnQsIm5nLWhpZGUiKX0pfX1dLG5nU3R5bGVEaXJlY3RpdmU9bmdEaXJlY3RpdmUoZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyKXtzY29wZS4kd2F0Y2goYXR0ci5uZ1N0eWxlLGZ1bmN0aW9uKG5ld1N0eWxlcyxvbGRTdHlsZXMpe29sZFN0eWxlcyYmbmV3U3R5bGVzIT09b2xkU3R5bGVzJiZmb3JFYWNoKG9sZFN0eWxlcyxmdW5jdGlvbih2YWwsc3R5bGUpe2VsZW1lbnQuY3NzKHN0eWxlLCIiKX0pLG5ld1N0eWxlcyYmZWxlbWVudC5jc3MobmV3U3R5bGVzKX0sITApfSksbmdTd2l0Y2hEaXJlY3RpdmU9WyIkYW5pbWF0ZSIsZnVuY3Rpb24oJGFuaW1hdGUpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcXVpcmU6Im5nU3dpdGNoIixjb250cm9sbGVyOlsiJHNjb3BlIixmdW5jdGlvbigpe3RoaXMuY2FzZXM9e319XSxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cixuZ1N3aXRjaENvbnRyb2xsZXIpe3ZhciB3YXRjaEV4cHI9YXR0ci5uZ1N3aXRjaHx8YXR0ci5vbixzZWxlY3RlZFRyYW5zY2x1ZGVzPVtdLHNlbGVjdGVkRWxlbWVudHM9W10scHJldmlvdXNFbGVtZW50cz1bXSxzZWxlY3RlZFNjb3Blcz1bXTtzY29wZS4kd2F0Y2god2F0Y2hFeHByLGZ1bmN0aW9uKHZhbHVlKXt2YXIgaSxpaTtmb3IoaT0wLGlpPXByZXZpb3VzRWxlbWVudHMubGVuZ3RoO2lpPmk7KytpKXByZXZpb3VzRWxlbWVudHNbaV0ucmVtb3ZlKCk7Zm9yKHByZXZpb3VzRWxlbWVudHMubGVuZ3RoPTAsaT0wLGlpPXNlbGVjdGVkU2NvcGVzLmxlbmd0aDtpaT5pOysraSl7dmFyIHNlbGVjdGVkPXNlbGVjdGVkRWxlbWVudHNbaV07c2VsZWN0ZWRTY29wZXNbaV0uJGRlc3Ryb3koKSxwcmV2aW91c0VsZW1lbnRzW2ldPXNlbGVjdGVkLCRhbmltYXRlLmxlYXZlKHNlbGVjdGVkLGZ1bmN0aW9uKCl7cHJldmlvdXNFbGVtZW50cy5zcGxpY2UoaSwxKX0pfXNlbGVjdGVkRWxlbWVudHMubGVuZ3RoPTAsc2VsZWN0ZWRTY29wZXMubGVuZ3RoPTAsKHNlbGVjdGVkVHJhbnNjbHVkZXM9bmdTd2l0Y2hDb250cm9sbGVyLmNhc2VzWyIhIit2YWx1ZV18fG5nU3dpdGNoQ29udHJvbGxlci5jYXNlc1siPyJdKSYmKHNjb3BlLiRldmFsKGF0dHIuY2hhbmdlKSxmb3JFYWNoKHNlbGVjdGVkVHJhbnNjbHVkZXMsZnVuY3Rpb24oc2VsZWN0ZWRUcmFuc2NsdWRlKXt2YXIgc2VsZWN0ZWRTY29wZT1zY29wZS4kbmV3KCk7c2VsZWN0ZWRTY29wZXMucHVzaChzZWxlY3RlZFNjb3BlKSxzZWxlY3RlZFRyYW5zY2x1ZGUudHJhbnNjbHVkZShzZWxlY3RlZFNjb3BlLGZ1bmN0aW9uKGNhc2VFbGVtZW50KXt2YXIgYW5jaG9yPXNlbGVjdGVkVHJhbnNjbHVkZS5lbGVtZW50O3NlbGVjdGVkRWxlbWVudHMucHVzaChjYXNlRWxlbWVudCksJGFuaW1hdGUuZW50ZXIoY2FzZUVsZW1lbnQsYW5jaG9yLnBhcmVudCgpLGFuY2hvcil9KX0pKX0pfX19XSxuZ1N3aXRjaFdoZW5EaXJlY3RpdmU9bmdEaXJlY3RpdmUoe3RyYW5zY2x1ZGU6ImVsZW1lbnQiLHByaW9yaXR5OjgwMCxyZXF1aXJlOiJebmdTd2l0Y2giLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyxjdHJsLCR0cmFuc2NsdWRlKXtjdHJsLmNhc2VzWyIhIithdHRycy5uZ1N3aXRjaFdoZW5dPWN0cmwuY2FzZXNbIiEiK2F0dHJzLm5nU3dpdGNoV2hlbl18fFtdLGN0cmwuY2FzZXNbIiEiK2F0dHJzLm5nU3dpdGNoV2hlbl0ucHVzaCh7dHJhbnNjbHVkZTokdHJhbnNjbHVkZSxlbGVtZW50OmVsZW1lbnR9KX19KSxuZ1N3aXRjaERlZmF1bHREaXJlY3RpdmU9bmdEaXJlY3RpdmUoe3RyYW5zY2x1ZGU6ImVsZW1lbnQiLHByaW9yaXR5OjgwMCxyZXF1aXJlOiJebmdTd2l0Y2giLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyLGN0cmwsJHRyYW5zY2x1ZGUpe2N0cmwuY2FzZXNbIj8iXT1jdHJsLmNhc2VzWyI/Il18fFtdLGN0cmwuY2FzZXNbIj8iXS5wdXNoKHt0cmFuc2NsdWRlOiR0cmFuc2NsdWRlLGVsZW1lbnQ6ZWxlbWVudH0pfX0pLG5nVHJhbnNjbHVkZURpcmVjdGl2ZT1uZ0RpcmVjdGl2ZSh7bGluazpmdW5jdGlvbigkc2NvcGUsJGVsZW1lbnQsJGF0dHJzLGNvbnRyb2xsZXIsJHRyYW5zY2x1ZGUpe2lmKCEkdHJhbnNjbHVkZSl0aHJvdyBtaW5FcnIoIm5nVHJhbnNjbHVkZSIpKCJvcnBoYW4iLCJJbGxlZ2FsIHVzZSBvZiBuZ1RyYW5zY2x1ZGUgZGlyZWN0aXZlIGluIHRoZSB0ZW1wbGF0ZSEgTm8gcGFyZW50IGRpcmVjdGl2ZSB0aGF0IHJlcXVpcmVzIGEgdHJhbnNjbHVzaW9uIGZvdW5kLiBFbGVtZW50OiB7MH0iLHN0YXJ0aW5nVGFnKCRlbGVtZW50KSk7JHRyYW5zY2x1ZGUoZnVuY3Rpb24oY2xvbmUpeyRlbGVtZW50LmVtcHR5KCksJGVsZW1lbnQuYXBwZW5kKGNsb25lKX0pfX0pLHNjcmlwdERpcmVjdGl2ZT1bIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7cmV0dXJue3Jlc3RyaWN0OiJFIix0ZXJtaW5hbDohMCxjb21waWxlOmZ1bmN0aW9uKGVsZW1lbnQsYXR0cil7aWYoInRleHQvbmctdGVtcGxhdGUiPT1hdHRyLnR5cGUpe3ZhciB0ZW1wbGF0ZVVybD1hdHRyLmlkLHRleHQ9ZWxlbWVudFswXS50ZXh0OyR0ZW1wbGF0ZUNhY2hlLnB1dCh0ZW1wbGF0ZVVybCx0ZXh0KX19fX1dLG5nT3B0aW9uc01pbkVycj1taW5FcnIoIm5nT3B0aW9ucyIpLG5nT3B0aW9uc0RpcmVjdGl2ZT12YWx1ZUZuKHt0ZXJtaW5hbDohMH0pLHNlbGVjdERpcmVjdGl2ZT1bIiRjb21waWxlIiwiJHBhcnNlIixmdW5jdGlvbigkY29tcGlsZSwkcGFyc2Upe3ZhciBOR19PUFRJT05TX1JFR0VYUD0vXlxzKihbXHNcU10rPykoPzpccythc1xzKyhbXHNcU10rPykpPyg/OlxzK2dyb3VwXHMrYnlccysoW1xzXFNdKz8pKT9ccytmb3JccysoPzooW1wkXHddW1wkXHddKil8KD86XChccyooW1wkXHddW1wkXHddKilccyosXHMqKFtcJFx3XVtcJFx3XSopXHMqXCkpKVxzK2luXHMrKFtcc1xTXSs/KSg/OlxzK3RyYWNrXHMrYnlccysoW1xzXFNdKz8pKT8kLyxudWxsTW9kZWxDdHJsPXskc2V0Vmlld1ZhbHVlOm5vb3B9O3JldHVybntyZXN0cmljdDoiRSIscmVxdWlyZTpbInNlbGVjdCIsIj9uZ01vZGVsIl0sY29udHJvbGxlcjpbIiRlbGVtZW50IiwiJHNjb3BlIiwiJGF0dHJzIixmdW5jdGlvbigkZWxlbWVudCwkc2NvcGUsJGF0dHJzKXt2YXIgbnVsbE9wdGlvbix1bmtub3duT3B0aW9uLHNlbGY9dGhpcyxvcHRpb25zTWFwPXt9LG5nTW9kZWxDdHJsPW51bGxNb2RlbEN0cmw7c2VsZi5kYXRhYm91bmQ9JGF0dHJzLm5nTW9kZWwsc2VsZi5pbml0PWZ1bmN0aW9uKG5nTW9kZWxDdHJsXyxudWxsT3B0aW9uXyx1bmtub3duT3B0aW9uXyl7bmdNb2RlbEN0cmw9bmdNb2RlbEN0cmxfLG51bGxPcHRpb249bnVsbE9wdGlvbl8sdW5rbm93bk9wdGlvbj11bmtub3duT3B0aW9uX30sc2VsZi5hZGRPcHRpb249ZnVuY3Rpb24odmFsdWUpe2Fzc2VydE5vdEhhc093blByb3BlcnR5KHZhbHVlLCcib3B0aW9uIHZhbHVlIicpLG9wdGlvbnNNYXBbdmFsdWVdPSEwLG5nTW9kZWxDdHJsLiR2aWV3VmFsdWU9PXZhbHVlJiYoJGVsZW1lbnQudmFsKHZhbHVlKSx1bmtub3duT3B0aW9uLnBhcmVudCgpJiZ1bmtub3duT3B0aW9uLnJlbW92ZSgpKX0sc2VsZi5yZW1vdmVPcHRpb249ZnVuY3Rpb24odmFsdWUpe3RoaXMuaGFzT3B0aW9uKHZhbHVlKSYmKGRlbGV0ZSBvcHRpb25zTWFwW3ZhbHVlXSxuZ01vZGVsQ3RybC4kdmlld1ZhbHVlPT12YWx1ZSYmdGhpcy5yZW5kZXJVbmtub3duT3B0aW9uKHZhbHVlKSl9LHNlbGYucmVuZGVyVW5rbm93bk9wdGlvbj1mdW5jdGlvbih2YWwpe3ZhciB1bmtub3duVmFsPSI/ICIraGFzaEtleSh2YWwpKyIgPyI7dW5rbm93bk9wdGlvbi52YWwodW5rbm93blZhbCksJGVsZW1lbnQucHJlcGVuZCh1bmtub3duT3B0aW9uKSwkZWxlbWVudC52YWwodW5rbm93blZhbCksdW5rbm93bk9wdGlvbi5wcm9wKCJzZWxlY3RlZCIsITApfSxzZWxmLmhhc09wdGlvbj1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIG9wdGlvbnNNYXAuaGFzT3duUHJvcGVydHkodmFsdWUpfSwkc2NvcGUuJG9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtzZWxmLnJlbmRlclVua25vd25PcHRpb249bm9vcH0pfV0sbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIsY3RybHMpe2Z1bmN0aW9uIHNldHVwQXNTaW5nbGUoc2NvcGUsc2VsZWN0RWxlbWVudCxuZ01vZGVsQ3RybCxzZWxlY3RDdHJsKXtuZ01vZGVsQ3RybC4kcmVuZGVyPWZ1bmN0aW9uKCl7dmFyIHZpZXdWYWx1ZT1uZ01vZGVsQ3RybC4kdmlld1ZhbHVlO3NlbGVjdEN0cmwuaGFzT3B0aW9uKHZpZXdWYWx1ZSk/KHVua25vd25PcHRpb24ucGFyZW50KCkmJnVua25vd25PcHRpb24ucmVtb3ZlKCksc2VsZWN0RWxlbWVudC52YWwodmlld1ZhbHVlKSwiIj09PXZpZXdWYWx1ZSYmZW1wdHlPcHRpb24ucHJvcCgic2VsZWN0ZWQiLCEwKSk6aXNVbmRlZmluZWQodmlld1ZhbHVlKSYmZW1wdHlPcHRpb24/c2VsZWN0RWxlbWVudC52YWwoIiIpOnNlbGVjdEN0cmwucmVuZGVyVW5rbm93bk9wdGlvbih2aWV3VmFsdWUpfSxzZWxlY3RFbGVtZW50Lm9uKCJjaGFuZ2UiLGZ1bmN0aW9uKCl7c2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7dW5rbm93bk9wdGlvbi5wYXJlbnQoKSYmdW5rbm93bk9wdGlvbi5yZW1vdmUoKSxuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKHNlbGVjdEVsZW1lbnQudmFsKCkpfSl9KX1mdW5jdGlvbiBzZXR1cEFzTXVsdGlwbGUoc2NvcGUsc2VsZWN0RWxlbWVudCxjdHJsKXt2YXIgbGFzdFZpZXc7Y3RybC4kcmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGl0ZW1zPW5ldyBIYXNoTWFwKGN0cmwuJHZpZXdWYWx1ZSk7Zm9yRWFjaChzZWxlY3RFbGVtZW50LmZpbmQoIm9wdGlvbiIpLGZ1bmN0aW9uKG9wdGlvbil7b3B0aW9uLnNlbGVjdGVkPWlzRGVmaW5lZChpdGVtcy5nZXQob3B0aW9uLnZhbHVlKSl9KX0sc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCl7ZXF1YWxzKGxhc3RWaWV3LGN0cmwuJHZpZXdWYWx1ZSl8fChsYXN0Vmlldz1zaGFsbG93Q29weShjdHJsLiR2aWV3VmFsdWUpLGN0cmwuJHJlbmRlcigpKX0pLHNlbGVjdEVsZW1lbnQub24oImNoYW5nZSIsZnVuY3Rpb24oKXtzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXt2YXIgYXJyYXk9W107Zm9yRWFjaChzZWxlY3RFbGVtZW50LmZpbmQoIm9wdGlvbiIpLGZ1bmN0aW9uKG9wdGlvbil7b3B0aW9uLnNlbGVjdGVkJiZhcnJheS5wdXNoKG9wdGlvbi52YWx1ZSl9KSxjdHJsLiRzZXRWaWV3VmFsdWUoYXJyYXkpfSl9KX1mdW5jdGlvbiBzZXR1cEFzT3B0aW9ucyhzY29wZSxzZWxlY3RFbGVtZW50LGN0cmwpe2Z1bmN0aW9uIGdldFNlbGVjdGVkU2V0KCl7dmFyIHNlbGVjdGVkU2V0PSExO2lmKG11bHRpcGxlKXt2YXIgbW9kZWxWYWx1ZT1jdHJsLiRtb2RlbFZhbHVlO2lmKHRyYWNrRm4mJmlzQXJyYXkobW9kZWxWYWx1ZSkpe3NlbGVjdGVkU2V0PW5ldyBIYXNoTWFwKFtdKTtmb3IodmFyIGxvY2Fscz17fSx0cmFja0luZGV4PTA7dHJhY2tJbmRleDxtb2RlbFZhbHVlLmxlbmd0aDt0cmFja0luZGV4KyspbG9jYWxzW3ZhbHVlTmFtZV09bW9kZWxWYWx1ZVt0cmFja0luZGV4XSxzZWxlY3RlZFNldC5wdXQodHJhY2tGbihzY29wZSxsb2NhbHMpLG1vZGVsVmFsdWVbdHJhY2tJbmRleF0pfWVsc2Ugc2VsZWN0ZWRTZXQ9bmV3IEhhc2hNYXAobW9kZWxWYWx1ZSl9cmV0dXJuIHNlbGVjdGVkU2V0fWZ1bmN0aW9uIHJlbmRlcigpe3ZhciBvcHRpb25Hcm91cE5hbWUsb3B0aW9uR3JvdXAsb3B0aW9uLGV4aXN0aW5nUGFyZW50LGV4aXN0aW5nT3B0aW9ucyxleGlzdGluZ09wdGlvbixrZXksZ3JvdXBMZW5ndGgsbGVuZ3RoLGdyb3VwSW5kZXgsaW5kZXgsc2VsZWN0ZWQsbGFzdEVsZW1lbnQsZWxlbWVudCxsYWJlbCxvcHRpb25Hcm91cHM9eyIiOltdfSxvcHRpb25Hcm91cE5hbWVzPVsiIl0sbW9kZWxWYWx1ZT1jdHJsLiRtb2RlbFZhbHVlLHZhbHVlcz12YWx1ZXNGbihzY29wZSl8fFtdLGtleXM9a2V5TmFtZT9zb3J0ZWRLZXlzKHZhbHVlcyk6dmFsdWVzLGxvY2Fscz17fSxzZWxlY3RlZFNldD1nZXRTZWxlY3RlZFNldCgpO2ZvcihpbmRleD0wO2xlbmd0aD1rZXlzLmxlbmd0aCxsZW5ndGg+aW5kZXg7aW5kZXgrKyl7aWYoa2V5PWluZGV4LGtleU5hbWUpe2lmKGtleT1rZXlzW2luZGV4XSwiJCI9PT1rZXkuY2hhckF0KDApKWNvbnRpbnVlO2xvY2Fsc1trZXlOYW1lXT1rZXl9aWYobG9jYWxzW3ZhbHVlTmFtZV09dmFsdWVzW2tleV0sb3B0aW9uR3JvdXBOYW1lPWdyb3VwQnlGbihzY29wZSxsb2NhbHMpfHwiIiwob3B0aW9uR3JvdXA9b3B0aW9uR3JvdXBzW29wdGlvbkdyb3VwTmFtZV0pfHwob3B0aW9uR3JvdXA9b3B0aW9uR3JvdXBzW29wdGlvbkdyb3VwTmFtZV09W10sb3B0aW9uR3JvdXBOYW1lcy5wdXNoKG9wdGlvbkdyb3VwTmFtZSkpLG11bHRpcGxlKXNlbGVjdGVkPWlzRGVmaW5lZChzZWxlY3RlZFNldC5yZW1vdmUodHJhY2tGbj90cmFja0ZuKHNjb3BlLGxvY2Fscyk6dmFsdWVGbihzY29wZSxsb2NhbHMpKSk7ZWxzZXtpZih0cmFja0ZuKXt2YXIgbW9kZWxDYXN0PXt9O21vZGVsQ2FzdFt2YWx1ZU5hbWVdPW1vZGVsVmFsdWUsc2VsZWN0ZWQ9dHJhY2tGbihzY29wZSxtb2RlbENhc3QpPT09dHJhY2tGbihzY29wZSxsb2NhbHMpfWVsc2Ugc2VsZWN0ZWQ9bW9kZWxWYWx1ZT09PXZhbHVlRm4oc2NvcGUsbG9jYWxzKTtzZWxlY3RlZFNldD1zZWxlY3RlZFNldHx8c2VsZWN0ZWR9bGFiZWw9ZGlzcGxheUZuKHNjb3BlLGxvY2FscyksbGFiZWw9aXNEZWZpbmVkKGxhYmVsKT9sYWJlbDoiIixvcHRpb25Hcm91cC5wdXNoKHtpZDp0cmFja0ZuP3RyYWNrRm4oc2NvcGUsbG9jYWxzKTprZXlOYW1lP2tleXNbaW5kZXhdOmluZGV4LGxhYmVsOmxhYmVsLHNlbGVjdGVkOnNlbGVjdGVkfSl9Zm9yKG11bHRpcGxlfHwobnVsbE9wdGlvbnx8bnVsbD09PW1vZGVsVmFsdWU/b3B0aW9uR3JvdXBzWyIiXS51bnNoaWZ0KHtpZDoiIixsYWJlbDoiIixzZWxlY3RlZDohc2VsZWN0ZWRTZXR9KTpzZWxlY3RlZFNldHx8b3B0aW9uR3JvdXBzWyIiXS51bnNoaWZ0KHtpZDoiPyIsbGFiZWw6IiIsc2VsZWN0ZWQ6ITB9KSksZ3JvdXBJbmRleD0wLGdyb3VwTGVuZ3RoPW9wdGlvbkdyb3VwTmFtZXMubGVuZ3RoO2dyb3VwTGVuZ3RoPmdyb3VwSW5kZXg7Z3JvdXBJbmRleCsrKXtmb3Iob3B0aW9uR3JvdXBOYW1lPW9wdGlvbkdyb3VwTmFtZXNbZ3JvdXBJbmRleF0sb3B0aW9uR3JvdXA9b3B0aW9uR3JvdXBzW29wdGlvbkdyb3VwTmFtZV0sb3B0aW9uR3JvdXBzQ2FjaGUubGVuZ3RoPD1ncm91cEluZGV4PyhleGlzdGluZ1BhcmVudD17ZWxlbWVudDpvcHRHcm91cFRlbXBsYXRlLmNsb25lKCkuYXR0cigibGFiZWwiLG9wdGlvbkdyb3VwTmFtZSksbGFiZWw6b3B0aW9uR3JvdXAubGFiZWx9LGV4aXN0aW5nT3B0aW9ucz1bZXhpc3RpbmdQYXJlbnRdLG9wdGlvbkdyb3Vwc0NhY2hlLnB1c2goZXhpc3RpbmdPcHRpb25zKSxzZWxlY3RFbGVtZW50LmFwcGVuZChleGlzdGluZ1BhcmVudC5lbGVtZW50KSk6KGV4aXN0aW5nT3B0aW9ucz1vcHRpb25Hcm91cHNDYWNoZVtncm91cEluZGV4XSxleGlzdGluZ1BhcmVudD1leGlzdGluZ09wdGlvbnNbMF0sZXhpc3RpbmdQYXJlbnQubGFiZWwhPW9wdGlvbkdyb3VwTmFtZSYmZXhpc3RpbmdQYXJlbnQuZWxlbWVudC5hdHRyKCJsYWJlbCIsZXhpc3RpbmdQYXJlbnQubGFiZWw9b3B0aW9uR3JvdXBOYW1lKSksbGFzdEVsZW1lbnQ9bnVsbCxpbmRleD0wLGxlbmd0aD1vcHRpb25Hcm91cC5sZW5ndGg7bGVuZ3RoPmluZGV4O2luZGV4Kyspb3B0aW9uPW9wdGlvbkdyb3VwW2luZGV4XSwoZXhpc3RpbmdPcHRpb249ZXhpc3RpbmdPcHRpb25zW2luZGV4KzFdKT8obGFzdEVsZW1lbnQ9ZXhpc3RpbmdPcHRpb24uZWxlbWVudCxleGlzdGluZ09wdGlvbi5sYWJlbCE9PW9wdGlvbi5sYWJlbCYmbGFzdEVsZW1lbnQudGV4dChleGlzdGluZ09wdGlvbi5sYWJlbD1vcHRpb24ubGFiZWwpLGV4aXN0aW5nT3B0aW9uLmlkIT09b3B0aW9uLmlkJiZsYXN0RWxlbWVudC52YWwoZXhpc3RpbmdPcHRpb24uaWQ9b3B0aW9uLmlkKSxsYXN0RWxlbWVudFswXS5zZWxlY3RlZCE9PW9wdGlvbi5zZWxlY3RlZCYmKGxhc3RFbGVtZW50LnByb3AoInNlbGVjdGVkIixleGlzdGluZ09wdGlvbi5zZWxlY3RlZD1vcHRpb24uc2VsZWN0ZWQpLG1zaWUmJmxhc3RFbGVtZW50LnByb3AoInNlbGVjdGVkIixleGlzdGluZ09wdGlvbi5zZWxlY3RlZCkpKTooIiI9PT1vcHRpb24uaWQmJm51bGxPcHRpb24/ZWxlbWVudD1udWxsT3B0aW9uOihlbGVtZW50PW9wdGlvblRlbXBsYXRlLmNsb25lKCkpLnZhbChvcHRpb24uaWQpLnByb3AoInNlbGVjdGVkIixvcHRpb24uc2VsZWN0ZWQpLmF0dHIoInNlbGVjdGVkIixvcHRpb24uc2VsZWN0ZWQpLnRleHQob3B0aW9uLmxhYmVsKSxleGlzdGluZ09wdGlvbnMucHVzaChleGlzdGluZ09wdGlvbj17ZWxlbWVudDplbGVtZW50LGxhYmVsOm9wdGlvbi5sYWJlbCxpZDpvcHRpb24uaWQsc2VsZWN0ZWQ6b3B0aW9uLnNlbGVjdGVkfSksbGFzdEVsZW1lbnQ/bGFzdEVsZW1lbnQuYWZ0ZXIoZWxlbWVudCk6ZXhpc3RpbmdQYXJlbnQuZWxlbWVudC5hcHBlbmQoZWxlbWVudCksbGFzdEVsZW1lbnQ9ZWxlbWVudCk7Zm9yKGluZGV4Kys7ZXhpc3RpbmdPcHRpb25zLmxlbmd0aD5pbmRleDspZXhpc3RpbmdPcHRpb25zLnBvcCgpLmVsZW1lbnQucmVtb3ZlKCl9Zm9yKDtvcHRpb25Hcm91cHNDYWNoZS5sZW5ndGg+Z3JvdXBJbmRleDspb3B0aW9uR3JvdXBzQ2FjaGUucG9wKClbMF0uZWxlbWVudC5yZW1vdmUoKX12YXIgbWF0Y2g7aWYoIShtYXRjaD1vcHRpb25zRXhwLm1hdGNoKE5HX09QVElPTlNfUkVHRVhQKSkpdGhyb3cgbmdPcHRpb25zTWluRXJyKCJpZXhwIiwiRXhwZWN0ZWQgZXhwcmVzc2lvbiBpbiBmb3JtIG9mICdfc2VsZWN0XyAoYXMgX2xhYmVsXyk/IGZvciAoX2tleV8sKT9fdmFsdWVfIGluIF9jb2xsZWN0aW9uXycgYnV0IGdvdCAnezB9Jy4gRWxlbWVudDogezF9IixvcHRpb25zRXhwLHN0YXJ0aW5nVGFnKHNlbGVjdEVsZW1lbnQpKTt2YXIgZGlzcGxheUZuPSRwYXJzZShtYXRjaFsyXXx8bWF0Y2hbMV0pLHZhbHVlTmFtZT1tYXRjaFs0XXx8bWF0Y2hbNl0sa2V5TmFtZT1tYXRjaFs1XSxncm91cEJ5Rm49JHBhcnNlKG1hdGNoWzNdfHwiIiksdmFsdWVGbj0kcGFyc2UobWF0Y2hbMl0/bWF0Y2hbMV06dmFsdWVOYW1lKSx2YWx1ZXNGbj0kcGFyc2UobWF0Y2hbN10pLHRyYWNrPW1hdGNoWzhdLHRyYWNrRm49dHJhY2s/JHBhcnNlKG1hdGNoWzhdKTpudWxsLG9wdGlvbkdyb3Vwc0NhY2hlPVtbe2VsZW1lbnQ6c2VsZWN0RWxlbWVudCxsYWJlbDoiIn1dXTsKbnVsbE9wdGlvbiYmKCRjb21waWxlKG51bGxPcHRpb24pKHNjb3BlKSxudWxsT3B0aW9uLnJlbW92ZUNsYXNzKCJuZy1zY29wZSIpLG51bGxPcHRpb24ucmVtb3ZlKCkpLHNlbGVjdEVsZW1lbnQuZW1wdHkoKSxzZWxlY3RFbGVtZW50Lm9uKCJjaGFuZ2UiLGZ1bmN0aW9uKCl7c2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7dmFyIG9wdGlvbkdyb3VwLGtleSx2YWx1ZSxvcHRpb25FbGVtZW50LGluZGV4LGdyb3VwSW5kZXgsbGVuZ3RoLGdyb3VwTGVuZ3RoLHRyYWNrSW5kZXgsY29sbGVjdGlvbj12YWx1ZXNGbihzY29wZSl8fFtdLGxvY2Fscz17fTtpZihtdWx0aXBsZSl7Zm9yKHZhbHVlPVtdLGdyb3VwSW5kZXg9MCxncm91cExlbmd0aD1vcHRpb25Hcm91cHNDYWNoZS5sZW5ndGg7Z3JvdXBMZW5ndGg+Z3JvdXBJbmRleDtncm91cEluZGV4KyspZm9yKG9wdGlvbkdyb3VwPW9wdGlvbkdyb3Vwc0NhY2hlW2dyb3VwSW5kZXhdLGluZGV4PTEsbGVuZ3RoPW9wdGlvbkdyb3VwLmxlbmd0aDtsZW5ndGg+aW5kZXg7aW5kZXgrKylpZigob3B0aW9uRWxlbWVudD1vcHRpb25Hcm91cFtpbmRleF0uZWxlbWVudClbMF0uc2VsZWN0ZWQpe2lmKGtleT1vcHRpb25FbGVtZW50LnZhbCgpLGtleU5hbWUmJihsb2NhbHNba2V5TmFtZV09a2V5KSx0cmFja0ZuKWZvcih0cmFja0luZGV4PTA7dHJhY2tJbmRleDxjb2xsZWN0aW9uLmxlbmd0aCYmKGxvY2Fsc1t2YWx1ZU5hbWVdPWNvbGxlY3Rpb25bdHJhY2tJbmRleF0sdHJhY2tGbihzY29wZSxsb2NhbHMpIT1rZXkpO3RyYWNrSW5kZXgrKyk7ZWxzZSBsb2NhbHNbdmFsdWVOYW1lXT1jb2xsZWN0aW9uW2tleV07dmFsdWUucHVzaCh2YWx1ZUZuKHNjb3BlLGxvY2FscykpfX1lbHNlIGlmKGtleT1zZWxlY3RFbGVtZW50LnZhbCgpLCI/Ij09a2V5KXZhbHVlPXVuZGVmaW5lZDtlbHNlIGlmKCIiPT09a2V5KXZhbHVlPW51bGw7ZWxzZSBpZih0cmFja0ZuKXtmb3IodHJhY2tJbmRleD0wO3RyYWNrSW5kZXg8Y29sbGVjdGlvbi5sZW5ndGg7dHJhY2tJbmRleCsrKWlmKGxvY2Fsc1t2YWx1ZU5hbWVdPWNvbGxlY3Rpb25bdHJhY2tJbmRleF0sdHJhY2tGbihzY29wZSxsb2NhbHMpPT1rZXkpe3ZhbHVlPXZhbHVlRm4oc2NvcGUsbG9jYWxzKTticmVha319ZWxzZSBsb2NhbHNbdmFsdWVOYW1lXT1jb2xsZWN0aW9uW2tleV0sa2V5TmFtZSYmKGxvY2Fsc1trZXlOYW1lXT1rZXkpLHZhbHVlPXZhbHVlRm4oc2NvcGUsbG9jYWxzKTtjdHJsLiRzZXRWaWV3VmFsdWUodmFsdWUpLHJlbmRlcigpfSl9KSxjdHJsLiRyZW5kZXI9cmVuZGVyLHNjb3BlLiR3YXRjaENvbGxlY3Rpb24odmFsdWVzRm4scmVuZGVyKSxzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKGZ1bmN0aW9uKCl7dmFyIGxvY2Fscz17fSx2YWx1ZXM9dmFsdWVzRm4oc2NvcGUpO2lmKHZhbHVlcyl7Zm9yKHZhciB0b0Rpc3BsYXk9bmV3IEFycmF5KHZhbHVlcy5sZW5ndGgpLGk9MCxpaT12YWx1ZXMubGVuZ3RoO2lpPmk7aSsrKWxvY2Fsc1t2YWx1ZU5hbWVdPXZhbHVlc1tpXSx0b0Rpc3BsYXlbaV09ZGlzcGxheUZuKHNjb3BlLGxvY2Fscyk7cmV0dXJuIHRvRGlzcGxheX19LHJlbmRlciksbXVsdGlwbGUmJnNjb3BlLiR3YXRjaENvbGxlY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gY3RybC4kbW9kZWxWYWx1ZX0scmVuZGVyKX1pZihjdHJsc1sxXSl7Zm9yKHZhciBlbXB0eU9wdGlvbixzZWxlY3RDdHJsPWN0cmxzWzBdLG5nTW9kZWxDdHJsPWN0cmxzWzFdLG11bHRpcGxlPWF0dHIubXVsdGlwbGUsb3B0aW9uc0V4cD1hdHRyLm5nT3B0aW9ucyxudWxsT3B0aW9uPSExLG9wdGlvblRlbXBsYXRlPWpxTGl0ZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSksb3B0R3JvdXBUZW1wbGF0ZT1qcUxpdGUoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0Z3JvdXAiKSksdW5rbm93bk9wdGlvbj1vcHRpb25UZW1wbGF0ZS5jbG9uZSgpLGk9MCxjaGlsZHJlbj1lbGVtZW50LmNoaWxkcmVuKCksaWk9Y2hpbGRyZW4ubGVuZ3RoO2lpPmk7aSsrKWlmKCIiPT09Y2hpbGRyZW5baV0udmFsdWUpe2VtcHR5T3B0aW9uPW51bGxPcHRpb249Y2hpbGRyZW4uZXEoaSk7YnJlYWt9c2VsZWN0Q3RybC5pbml0KG5nTW9kZWxDdHJsLG51bGxPcHRpb24sdW5rbm93bk9wdGlvbiksbXVsdGlwbGUmJihuZ01vZGVsQ3RybC4kaXNFbXB0eT1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIXZhbHVlfHwwPT09dmFsdWUubGVuZ3RofSksb3B0aW9uc0V4cD9zZXR1cEFzT3B0aW9ucyhzY29wZSxlbGVtZW50LG5nTW9kZWxDdHJsKTptdWx0aXBsZT9zZXR1cEFzTXVsdGlwbGUoc2NvcGUsZWxlbWVudCxuZ01vZGVsQ3RybCk6c2V0dXBBc1NpbmdsZShzY29wZSxlbGVtZW50LG5nTW9kZWxDdHJsLHNlbGVjdEN0cmwpfX19fV0sb3B0aW9uRGlyZWN0aXZlPVsiJGludGVycG9sYXRlIixmdW5jdGlvbigkaW50ZXJwb2xhdGUpe3ZhciBudWxsU2VsZWN0Q3RybD17YWRkT3B0aW9uOm5vb3AscmVtb3ZlT3B0aW9uOm5vb3B9O3JldHVybntyZXN0cmljdDoiRSIscHJpb3JpdHk6MTAwLGNvbXBpbGU6ZnVuY3Rpb24oZWxlbWVudCxhdHRyKXtpZihpc1VuZGVmaW5lZChhdHRyLnZhbHVlKSl7dmFyIGludGVycG9sYXRlRm49JGludGVycG9sYXRlKGVsZW1lbnQudGV4dCgpLCEwKTtpbnRlcnBvbGF0ZUZufHxhdHRyLiRzZXQoInZhbHVlIixlbGVtZW50LnRleHQoKSl9cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cil7dmFyIHNlbGVjdEN0cmxOYW1lPSIkc2VsZWN0Q29udHJvbGxlciIscGFyZW50PWVsZW1lbnQucGFyZW50KCksc2VsZWN0Q3RybD1wYXJlbnQuZGF0YShzZWxlY3RDdHJsTmFtZSl8fHBhcmVudC5wYXJlbnQoKS5kYXRhKHNlbGVjdEN0cmxOYW1lKTtzZWxlY3RDdHJsJiZzZWxlY3RDdHJsLmRhdGFib3VuZD9lbGVtZW50LnByb3AoInNlbGVjdGVkIiwhMSk6c2VsZWN0Q3RybD1udWxsU2VsZWN0Q3RybCxpbnRlcnBvbGF0ZUZuP3Njb3BlLiR3YXRjaChpbnRlcnBvbGF0ZUZuLGZ1bmN0aW9uKG5ld1ZhbCxvbGRWYWwpe2F0dHIuJHNldCgidmFsdWUiLG5ld1ZhbCksbmV3VmFsIT09b2xkVmFsJiZzZWxlY3RDdHJsLnJlbW92ZU9wdGlvbihvbGRWYWwpLHNlbGVjdEN0cmwuYWRkT3B0aW9uKG5ld1ZhbCl9KTpzZWxlY3RDdHJsLmFkZE9wdGlvbihhdHRyLnZhbHVlKSxlbGVtZW50Lm9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtzZWxlY3RDdHJsLnJlbW92ZU9wdGlvbihhdHRyLnZhbHVlKX0pfX19fV0sc3R5bGVEaXJlY3RpdmU9dmFsdWVGbih7cmVzdHJpY3Q6IkUiLHRlcm1pbmFsOiEwfSk7cmV0dXJuIHdpbmRvdy5hbmd1bGFyLmJvb3RzdHJhcD92b2lkIGNvbnNvbGUubG9nKCJXQVJOSU5HOiBUcmllZCB0byBsb2FkIGFuZ3VsYXIgbW9yZSB0aGFuIG9uY2UuIik6KGJpbmRKUXVlcnkoKSxwdWJsaXNoRXh0ZXJuYWxBUEkoYW5ndWxhciksdm9pZCBqcUxpdGUoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7YW5ndWxhckluaXQoZG9jdW1lbnQsYm9vdHN0cmFwKX0pKX0od2luZG93LGRvY3VtZW50KSwhd2luZG93LmFuZ3VsYXIuJCRjc3AoKSYmd2luZG93LmFuZ3VsYXIuZWxlbWVudChkb2N1bWVudCkuZmluZCgiaGVhZCIpLnByZXBlbmQoJzxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+QGNoYXJzZXQgIlVURi04IjtbbmdcXDpjbG9ha10sW25nLWNsb2FrXSxbZGF0YS1uZy1jbG9ha10sW3gtbmctY2xvYWtdLC5uZy1jbG9haywueC1uZy1jbG9haywubmctaGlkZXtkaXNwbGF5Om5vbmUgIWltcG9ydGFudDt9bmdcXDpmb3Jte2Rpc3BsYXk6YmxvY2s7fS5uZy1hbmltYXRlLWJsb2NrLXRyYW5zaXRpb25ze3RyYW5zaXRpb246MHMgYWxsIWltcG9ydGFudDstd2Via2l0LXRyYW5zaXRpb246MHMgYWxsIWltcG9ydGFudDt9Lm5nLWhpZGUtYWRkLWFjdGl2ZSwubmctaGlkZS1yZW1vdmV7ZGlzcGxheTpibG9jayFpbXBvcnRhbnQ7fTwvc3R5bGU+JyksYW5ndWxhci5tb2R1bGUoInVpLmJvb3RzdHJhcC5kYXRldGltZXBpY2tlciIsW10pLmNvbnN0YW50KCJkYXRlVGltZVBpY2tlckNvbmZpZyIse2Ryb3Bkb3duU2VsZWN0b3I6bnVsbCxtaW51dGVTdGVwOjUsbWluVmlldzoibWludXRlIixzdGFydFZpZXc6ImRheSIsd2Vla1N0YXJ0OjB9KS5kaXJlY3RpdmUoImRhdGV0aW1lcGlja2VyIixbImRhdGVUaW1lUGlja2VyQ29uZmlnIixmdW5jdGlvbihkZWZhdWx0Q29uZmlnKXt2YXIgdmFsaWRhdGVDb25maWd1cmF0aW9uPWZ1bmN0aW9uKGNvbmZpZ3VyYXRpb24pe3ZhciB2YWxpZE9wdGlvbnM9WyJzdGFydFZpZXciLCJtaW5WaWV3IiwibWludXRlU3RlcCIsImRyb3Bkb3duU2VsZWN0b3IiLCJ3ZWVrU3RhcnQiXTtmb3IodmFyIHByb3AgaW4gY29uZmlndXJhdGlvbilpZihjb25maWd1cmF0aW9uLmhhc093blByb3BlcnR5KHByb3ApJiZ2YWxpZE9wdGlvbnMuaW5kZXhPZihwcm9wKTwwKXRocm93ImludmFsaWQgb3B0aW9uOiAiK3Byb3A7dmFyIHZhbGlkVmlld3M9WyJtaW51dGUiLCJob3VyIiwiZGF5IiwibW9udGgiLCJ5ZWFyIl07aWYodmFsaWRWaWV3cy5pbmRleE9mKGNvbmZpZ3VyYXRpb24uc3RhcnRWaWV3KTwwKXRocm93ImludmFsaWQgc3RhcnRWaWV3IHZhbHVlOiAiK2NvbmZpZ3VyYXRpb24uc3RhcnRWaWV3O2lmKHZhbGlkVmlld3MuaW5kZXhPZihjb25maWd1cmF0aW9uLm1pblZpZXcpPDApdGhyb3ciaW52YWxpZCBtaW5WaWV3IHZhbHVlOiAiK2NvbmZpZ3VyYXRpb24ubWluVmlldztpZih2YWxpZFZpZXdzLmluZGV4T2YoY29uZmlndXJhdGlvbi5taW5WaWV3KT52YWxpZFZpZXdzLmluZGV4T2YoY29uZmlndXJhdGlvbi5zdGFydFZpZXcpKXRocm93InN0YXJ0VmlldyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBtaW5WaWV3IjtpZighYW5ndWxhci5pc051bWJlcihjb25maWd1cmF0aW9uLm1pbnV0ZVN0ZXApKXRocm93Im1pbnV0ZVN0ZXAgbXVzdCBiZSBudW1lcmljIjtpZihjb25maWd1cmF0aW9uLm1pbnV0ZVN0ZXA8PTB8fGNvbmZpZ3VyYXRpb24ubWludXRlU3RlcD49NjApdGhyb3cibWludXRlU3RlcCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiB6ZXJvIGFuZCBsZXNzIHRoYW4gNjAiO2lmKG51bGwhPT1jb25maWd1cmF0aW9uLmRyb3Bkb3duU2VsZWN0b3ImJiFhbmd1bGFyLmlzU3RyaW5nKGNvbmZpZ3VyYXRpb24uZHJvcGRvd25TZWxlY3RvcikpdGhyb3ciZHJvcGRvd25TZWxlY3RvciBtdXN0IGJlIGEgc3RyaW5nIjtpZighYW5ndWxhci5pc051bWJlcihjb25maWd1cmF0aW9uLndlZWtTdGFydCkpdGhyb3cid2Vla1N0YXJ0IG11c3QgYmUgbnVtZXJpYyI7aWYoY29uZmlndXJhdGlvbi53ZWVrU3RhcnQ8MHx8Y29uZmlndXJhdGlvbi53ZWVrU3RhcnQ+Nil0aHJvdyJ3ZWVrU3RhcnQgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gemVybyBhbmQgbGVzcyB0aGFuIDcifTtyZXR1cm57cmVzdHJpY3Q6IkUiLHJlcXVpcmU6Im5nTW9kZWwiLHRlbXBsYXRlOiI8ZGl2IGNsYXNzPSdkYXRldGltZXBpY2tlcic+PHRhYmxlIGNsYXNzPSd0YWJsZS1jb25kZW5zZWQnPiAgIDx0aGVhZD4gICAgICAgPHRyPiAgICAgICAgICAgPHRoIGNsYXNzPSdsZWZ0JyAgICAgICAgICAgICAgIGRhdGEtbmctY2xpY2s9J2NoYW5nZVZpZXcoZGF0YS5jdXJyZW50VmlldywgZGF0YS5sZWZ0RGF0ZSwgJGV2ZW50KScgICAgICAgICAgICAgICA+PGkgY2xhc3M9J2dseXBoaWNvbiBnbHlwaGljb24tYXJyb3ctbGVmdCcvPjwvdGg+ICAgICAgICAgICA8dGggY2xhc3M9J3N3aXRjaCcgY29sc3Bhbj0nNScgICAgICAgICAgICAgICBkYXRhLW5nLWNsaWNrPSdjaGFuZ2VWaWV3KGRhdGEucHJldmlvdXNWaWV3LCBkYXRhLmN1cnJlbnREYXRlLCAkZXZlbnQpJz57eyBkYXRhLnRpdGxlIH19PC90aD4gICAgICAgICAgIDx0aCBjbGFzcz0ncmlnaHQnICAgICAgICAgICAgICAgZGF0YS1uZy1jbGljaz0nY2hhbmdlVmlldyhkYXRhLmN1cnJlbnRWaWV3LCBkYXRhLnJpZ2h0RGF0ZSwgJGV2ZW50KScgICAgICAgICAgICAgPjxpIGNsYXNzPSdnbHlwaGljb24gZ2x5cGhpY29uLWFycm93LXJpZ2h0Jy8+PC90aD4gICAgICAgPC90cj4gICAgICAgPHRyPiAgICAgICAgICAgPHRoIGNsYXNzPSdkb3cnIGRhdGEtbmctcmVwZWF0PSdkYXkgaW4gZGF0YS5kYXlOYW1lcycgPnt7IGRheSB9fTwvdGg+ICAgICAgIDwvdHI+ICAgPC90aGVhZD4gICA8dGJvZHk+ICAgICAgIDx0ciBkYXRhLW5nLWNsYXNzPSd7IGhpZGU6IGRhdGEuY3VycmVudFZpZXcgPT0gXCJkYXlcIiB9JyA+ICAgICAgICAgICA8dGQgY29sc3Bhbj0nNycgPiAgICAgICAgICAgICAgPHNwYW4gICAgY2xhc3M9J3t7IGRhdGEuY3VycmVudFZpZXcgfX0nICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uZy1yZXBlYXQ9J2RhdGVWYWx1ZSBpbiBkYXRhLmRhdGVzJyAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLW5nLWNsYXNzPSd7YWN0aXZlOiBkYXRlVmFsdWUuYWN0aXZlLCBwYXN0OiBkYXRlVmFsdWUucGFzdCwgZnV0dXJlOiBkYXRlVmFsdWUuZnV0dXJlfScgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLW5nLWNsaWNrPVwiY2hhbmdlVmlldyhkYXRhLm5leHRWaWV3LCBkYXRlVmFsdWUuZGF0ZSwgJGV2ZW50KVwiPnt7IGRhdGVWYWx1ZS5kaXNwbGF5IH19PC9zcGFuPiAgICAgICAgICAgIDwvdGQ+ICAgICAgIDwvdHI+ICAgICAgIDx0ciBkYXRhLW5nLXNob3c9J2RhdGEuY3VycmVudFZpZXcgPT0gXCJkYXlcIicgZGF0YS1uZy1yZXBlYXQ9J3dlZWsgaW4gZGF0YS53ZWVrcyc+ICAgICAgICAgICA8dGQgZGF0YS1uZy1yZXBlYXQ9J2RhdGVWYWx1ZSBpbiB3ZWVrLmRhdGVzJyAgICAgICAgICAgICAgICBkYXRhLW5nLWNsaWNrPSdjaGFuZ2VWaWV3KGRhdGEubmV4dFZpZXcsIGRhdGVWYWx1ZS5kYXRlLCAkZXZlbnQpJyAgICAgICAgICAgICAgIGNsYXNzPSdkYXknICAgICAgICAgICAgICAgIGRhdGEtbmctY2xhc3M9J3thY3RpdmU6IGRhdGVWYWx1ZS5hY3RpdmUsIHBhc3Q6IGRhdGVWYWx1ZS5wYXN0LCBmdXR1cmU6IGRhdGVWYWx1ZS5mdXR1cmV9JyA+e3sgZGF0ZVZhbHVlLmRpc3BsYXkgfX08L3RkPiAgICAgICA8L3RyPiAgIDwvdGJvZHk+PC90YWJsZT48L2Rpdj4iLHNjb3BlOntuZ01vZGVsOiI9IixvblNldFRpbWU6Ij0ifSxyZXBsYWNlOiEwLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyl7dmFyIGRpcmVjdGl2ZUNvbmZpZz17fTthdHRycy5kYXRldGltZXBpY2tlckNvbmZpZyYmKGRpcmVjdGl2ZUNvbmZpZz1zY29wZS4kZXZhbChhdHRycy5kYXRldGltZXBpY2tlckNvbmZpZykpO3ZhciBjb25maWd1cmF0aW9uPXt9O2FuZ3VsYXIuZXh0ZW5kKGNvbmZpZ3VyYXRpb24sZGVmYXVsdENvbmZpZyxkaXJlY3RpdmVDb25maWcpLHZhbGlkYXRlQ29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uKTt2YXIgZGF0YUZhY3Rvcnk9e3llYXI6ZnVuY3Rpb24odW5peERhdGUpe2Zvcih2YXIgc2VsZWN0ZWREYXRlPW1vbWVudC51dGModW5peERhdGUpLnN0YXJ0T2YoInllYXIiKSxzdGFydERlY2FkZT0xMCpwYXJzZUludChzZWxlY3RlZERhdGUueWVhcigpLzEwLDEwKSxzdGFydERhdGU9bW9tZW50LnV0YyhzZWxlY3RlZERhdGUpLnllYXIoc3RhcnREZWNhZGUtMSkuc3RhcnRPZigieWVhciIpLGFjdGl2ZVllYXI9c2NvcGUubmdNb2RlbD9tb21lbnQoc2NvcGUubmdNb2RlbCkueWVhcigpOjAscmVzdWx0PXtjdXJyZW50VmlldzoieWVhciIsbmV4dFZpZXc6InllYXIiPT09Y29uZmlndXJhdGlvbi5taW5WaWV3PyJzZXRUaW1lIjoibW9udGgiLHRpdGxlOnN0YXJ0RGVjYWRlKyItIisoc3RhcnREZWNhZGUrOSksbGVmdERhdGU6bW9tZW50LnV0YyhzdGFydERhdGUpLnN1YnRyYWN0KDksInllYXIiKS52YWx1ZU9mKCkscmlnaHREYXRlOm1vbWVudC51dGMoc3RhcnREYXRlKS5hZGQoMTEsInllYXIiKS52YWx1ZU9mKCksZGF0ZXM6W119LGk9MDsxMj5pO2krKyl7dmFyIHllYXJNb21lbnQ9bW9tZW50LnV0YyhzdGFydERhdGUpLmFkZChpLCJ5ZWFycyIpLGRhdGVWYWx1ZT17ZGF0ZTp5ZWFyTW9tZW50LnZhbHVlT2YoKSxkaXNwbGF5OnllYXJNb21lbnQuZm9ybWF0KCJZWVlZIikscGFzdDp5ZWFyTW9tZW50LnllYXIoKTxzdGFydERlY2FkZSxmdXR1cmU6eWVhck1vbWVudC55ZWFyKCk+c3RhcnREZWNhZGUrOSxhY3RpdmU6eWVhck1vbWVudC55ZWFyKCk9PT1hY3RpdmVZZWFyfTtyZXN1bHQuZGF0ZXMucHVzaChkYXRlVmFsdWUpfXJldHVybiByZXN1bHR9LG1vbnRoOmZ1bmN0aW9uKHVuaXhEYXRlKXtmb3IodmFyIHN0YXJ0RGF0ZT1tb21lbnQudXRjKHVuaXhEYXRlKS5zdGFydE9mKCJ5ZWFyIiksYWN0aXZlRGF0ZT1zY29wZS5uZ01vZGVsP21vbWVudChzY29wZS5uZ01vZGVsKS5mb3JtYXQoIllZWVktTU1NIik6MCxyZXN1bHQ9e3ByZXZpb3VzVmlldzoieWVhciIsY3VycmVudFZpZXc6Im1vbnRoIixuZXh0VmlldzoibW9udGgiPT09Y29uZmlndXJhdGlvbi5taW5WaWV3PyJzZXRUaW1lIjoiZGF5IixjdXJyZW50RGF0ZTpzdGFydERhdGUudmFsdWVPZigpLHRpdGxlOnN0YXJ0RGF0ZS5mb3JtYXQoIllZWVkiKSxsZWZ0RGF0ZTptb21lbnQudXRjKHN0YXJ0RGF0ZSkuc3VidHJhY3QoMSwieWVhciIpLnZhbHVlT2YoKSxyaWdodERhdGU6bW9tZW50LnV0YyhzdGFydERhdGUpLmFkZCgxLCJ5ZWFyIikudmFsdWVPZigpLGRhdGVzOltdfSxpPTA7MTI+aTtpKyspe3ZhciBtb250aE1vbWVudD1tb21lbnQudXRjKHN0YXJ0RGF0ZSkuYWRkKGksIm1vbnRocyIpLGRhdGVWYWx1ZT17ZGF0ZTptb250aE1vbWVudC52YWx1ZU9mKCksZGlzcGxheTptb250aE1vbWVudC5mb3JtYXQoIk1NTSIpLGFjdGl2ZTptb250aE1vbWVudC5mb3JtYXQoIllZWVktTU1NIik9PT1hY3RpdmVEYXRlfTtyZXN1bHQuZGF0ZXMucHVzaChkYXRlVmFsdWUpfXJldHVybiByZXN1bHR9LGRheTpmdW5jdGlvbih1bml4RGF0ZSl7Zm9yKHZhciBzZWxlY3RlZERhdGU9bW9tZW50LnV0Yyh1bml4RGF0ZSksc3RhcnRPZk1vbnRoPW1vbWVudC51dGMoc2VsZWN0ZWREYXRlKS5zdGFydE9mKCJtb250aCIpLGVuZE9mTW9udGg9bW9tZW50LnV0YyhzZWxlY3RlZERhdGUpLmVuZE9mKCJtb250aCIpLHN0YXJ0RGF0ZT1tb21lbnQudXRjKHN0YXJ0T2ZNb250aCkuc3VidHJhY3QoTWF0aC5hYnMoc3RhcnRPZk1vbnRoLndlZWtkYXkoKS1jb25maWd1cmF0aW9uLndlZWtTdGFydCksImRheXMiKSxhY3RpdmVEYXRlPXNjb3BlLm5nTW9kZWw/bW9tZW50KHNjb3BlLm5nTW9kZWwpLmZvcm1hdCgiWVlZWS1NTU0tREQiKToiIixyZXN1bHQ9e3ByZXZpb3VzVmlldzoibW9udGgiLGN1cnJlbnRWaWV3OiJkYXkiLG5leHRWaWV3OiJkYXkiPT09Y29uZmlndXJhdGlvbi5taW5WaWV3PyJzZXRUaW1lIjoiaG91ciIsY3VycmVudERhdGU6c2VsZWN0ZWREYXRlLnZhbHVlT2YoKSx0aXRsZTpzZWxlY3RlZERhdGUuZm9ybWF0KCJZWVlZLU1NTSIpLGxlZnREYXRlOm1vbWVudC51dGMoc3RhcnRPZk1vbnRoKS5zdWJ0cmFjdCgxLCJtb250aHMiKS52YWx1ZU9mKCkscmlnaHREYXRlOm1vbWVudC51dGMoc3RhcnRPZk1vbnRoKS5hZGQoMSwibW9udGhzIikudmFsdWVPZigpLGRheU5hbWVzOltdLHdlZWtzOltdfSxkYXlOdW1iZXI9Y29uZmlndXJhdGlvbi53ZWVrU3RhcnQ7ZGF5TnVtYmVyPGNvbmZpZ3VyYXRpb24ud2Vla1N0YXJ0Kzc7ZGF5TnVtYmVyKyspcmVzdWx0LmRheU5hbWVzLnB1c2gobW9tZW50LnV0YygpLndlZWtkYXkoZGF5TnVtYmVyKS5mb3JtYXQoImRkIikpO2Zvcih2YXIgaT0wOzY+aTtpKyspe2Zvcih2YXIgd2Vlaz17ZGF0ZXM6W119LGo9MDs3Pmo7aisrKXt2YXIgbW9udGhNb21lbnQ9bW9tZW50LnV0YyhzdGFydERhdGUpLmFkZCg3KmkraiwiZGF5cyIpLGRhdGVWYWx1ZT17ZGF0ZTptb250aE1vbWVudC52YWx1ZU9mKCksZGlzcGxheTptb250aE1vbWVudC5mb3JtYXQoIkQiKSxhY3RpdmU6bW9udGhNb21lbnQuZm9ybWF0KCJZWVlZLU1NTS1ERCIpPT09YWN0aXZlRGF0ZSxwYXN0Om1vbnRoTW9tZW50LmlzQmVmb3JlKHN0YXJ0T2ZNb250aCksZnV0dXJlOm1vbnRoTW9tZW50LmlzQWZ0ZXIoZW5kT2ZNb250aCl9O3dlZWsuZGF0ZXMucHVzaChkYXRlVmFsdWUpfXJlc3VsdC53ZWVrcy5wdXNoKHdlZWspfXJldHVybiByZXN1bHR9LGhvdXI6ZnVuY3Rpb24odW5peERhdGUpe2Zvcih2YXIgc2VsZWN0ZWREYXRlPW1vbWVudC51dGModW5peERhdGUpLmhvdXIoMCkubWludXRlKDApLnNlY29uZCgwKSxhY3RpdmVGb3JtYXQ9c2NvcGUubmdNb2RlbD9tb21lbnQoc2NvcGUubmdNb2RlbCkuZm9ybWF0KCJZWVlZLU1NLUREIEgiKToiIixyZXN1bHQ9e3ByZXZpb3VzVmlldzoiZGF5IixjdXJyZW50VmlldzoiaG91ciIsbmV4dFZpZXc6ImhvdXIiPT09Y29uZmlndXJhdGlvbi5taW5WaWV3PyJzZXRUaW1lIjoibWludXRlIixjdXJyZW50RGF0ZTpzZWxlY3RlZERhdGUudmFsdWVPZigpLHRpdGxlOnNlbGVjdGVkRGF0ZS5mb3JtYXQoIllZWVktTU1NLUREIiksbGVmdERhdGU6bW9tZW50LnV0YyhzZWxlY3RlZERhdGUpLnN1YnRyYWN0KDEsImRheXMiKS52YWx1ZU9mKCkscmlnaHREYXRlOm1vbWVudC51dGMoc2VsZWN0ZWREYXRlKS5hZGQoMSwiZGF5cyIpLnZhbHVlT2YoKSxkYXRlczpbXX0saT0wOzI0Pmk7aSsrKXt2YXIgaG91ck1vbWVudD1tb21lbnQudXRjKHNlbGVjdGVkRGF0ZSkuYWRkKGksImhvdXJzIiksZGF0ZVZhbHVlPXtkYXRlOmhvdXJNb21lbnQudmFsdWVPZigpLGRpc3BsYXk6aG91ck1vbWVudC5mb3JtYXQoIkg6MDAiKSxhY3RpdmU6aG91ck1vbWVudC5mb3JtYXQoIllZWVktTU0tREQgSCIpPT09YWN0aXZlRm9ybWF0fTtyZXN1bHQuZGF0ZXMucHVzaChkYXRlVmFsdWUpfXJldHVybiByZXN1bHR9LG1pbnV0ZTpmdW5jdGlvbih1bml4RGF0ZSl7Zm9yKHZhciBzZWxlY3RlZERhdGU9bW9tZW50LnV0Yyh1bml4RGF0ZSkubWludXRlKDApLnNlY29uZCgwKSxhY3RpdmVGb3JtYXQ9c2NvcGUubmdNb2RlbD9tb21lbnQoc2NvcGUubmdNb2RlbCkuZm9ybWF0KCJZWVlZLU1NLUREIEg6bW0iKToiIixyZXN1bHQ9e3ByZXZpb3VzVmlldzoiaG91ciIsY3VycmVudFZpZXc6Im1pbnV0ZSIsbmV4dFZpZXc6InNldFRpbWUiLGN1cnJlbnREYXRlOnNlbGVjdGVkRGF0ZS52YWx1ZU9mKCksdGl0bGU6c2VsZWN0ZWREYXRlLmZvcm1hdCgiWVlZWS1NTU0tREQgSDptbSIpLGxlZnREYXRlOm1vbWVudC51dGMoc2VsZWN0ZWREYXRlKS5zdWJ0cmFjdCgxLCJob3VycyIpLnZhbHVlT2YoKSxyaWdodERhdGU6bW9tZW50LnV0YyhzZWxlY3RlZERhdGUpLmFkZCgxLCJob3VycyIpLnZhbHVlT2YoKSxkYXRlczpbXX0sbGltaXQ9NjAvY29uZmlndXJhdGlvbi5taW51dGVTdGVwLGk9MDtsaW1pdD5pO2krKyl7dmFyIGhvdXJNb21lbnQ9bW9tZW50LnV0YyhzZWxlY3RlZERhdGUpLmFkZChpKmNvbmZpZ3VyYXRpb24ubWludXRlU3RlcCwibWludXRlIiksZGF0ZVZhbHVlPXtkYXRlOmhvdXJNb21lbnQudmFsdWVPZigpLGRpc3BsYXk6aG91ck1vbWVudC5mb3JtYXQoIkg6bW0iKSxhY3RpdmU6aG91ck1vbWVudC5mb3JtYXQoIllZWVktTU0tREQgSDptbSIpPT09YWN0aXZlRm9ybWF0fTtyZXN1bHQuZGF0ZXMucHVzaChkYXRlVmFsdWUpfXJldHVybiByZXN1bHR9LHNldFRpbWU6ZnVuY3Rpb24odW5peERhdGUpe3ZhciB0ZW1wRGF0ZT1uZXcgRGF0ZSh1bml4RGF0ZSksbmV3RGF0ZT1uZXcgRGF0ZSh0ZW1wRGF0ZS5nZXRUaW1lKCkrNmU0KnRlbXBEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkpO3JldHVybiBjb25maWd1cmF0aW9uLmRyb3Bkb3duU2VsZWN0b3ImJmpRdWVyeShjb25maWd1cmF0aW9uLmRyb3Bkb3duU2VsZWN0b3IpLmRyb3Bkb3duKCJ0b2dnbGUiKSxhbmd1bGFyLmlzRnVuY3Rpb24oc2NvcGUub25TZXRUaW1lKSYmc2NvcGUub25TZXRUaW1lKG5ld0RhdGUsc2NvcGUubmdNb2RlbCksc2NvcGUubmdNb2RlbD1uZXdEYXRlLGRhdGFGYWN0b3J5W3Njb3BlLmRhdGEuY3VycmVudFZpZXddKHVuaXhEYXRlKX19LGdldFVUQ1RpbWU9ZnVuY3Rpb24oKXt2YXIgdGVtcERhdGU9c2NvcGUubmdNb2RlbD9tb21lbnQoc2NvcGUubmdNb2RlbCkudG9EYXRlKCk6bmV3IERhdGU7cmV0dXJuIHRlbXBEYXRlLmdldFRpbWUoKS02ZTQqdGVtcERhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKX07c2NvcGUuY2hhbmdlVmlldz1mdW5jdGlvbih2aWV3TmFtZSx1bml4RGF0ZSxldmVudCl7ZXZlbnQmJihldmVudC5zdG9wUHJvcGFnYXRpb24oKSxldmVudC5wcmV2ZW50RGVmYXVsdCgpKSx2aWV3TmFtZSYmdW5peERhdGU+LTEvMCYmZGF0YUZhY3Rvcnlbdmlld05hbWVdJiYoc2NvcGUuZGF0YT1kYXRhRmFjdG9yeVt2aWV3TmFtZV0odW5peERhdGUpKX0sc2NvcGUuY2hhbmdlVmlldyhjb25maWd1cmF0aW9uLnN0YXJ0VmlldyxnZXRVVENUaW1lKCkpLHNjb3BlLiR3YXRjaCgibmdNb2RlbCIsZnVuY3Rpb24oKXtzY29wZS5jaGFuZ2VWaWV3KHNjb3BlLmRhdGEuY3VycmVudFZpZXcsZ2V0VVRDVGltZSgpKX0pfX19XSksYW5ndWxhci5tb2R1bGUoInVpLmJvb3RzdHJhcCIsWyJ1aS5ib290c3RyYXAudHBscyIsInVpLmJvb3RzdHJhcC50cmFuc2l0aW9uIiwidWkuYm9vdHN0cmFwLmNvbGxhcHNlIiwidWkuYm9vdHN0cmFwLmFjY29yZGlvbiIsInVpLmJvb3RzdHJhcC5hbGVydCIsInVpLmJvb3RzdHJhcC5iaW5kSHRtbCIsInVpLmJvb3RzdHJhcC5idXR0b25zIiwidWkuYm9vdHN0cmFwLmNhcm91c2VsIiwidWkuYm9vdHN0cmFwLmRhdGVwYXJzZXIiLCJ1aS5ib290c3RyYXAucG9zaXRpb24iLCJ1aS5ib290c3RyYXAuZGF0ZXBpY2tlciIsInVpLmJvb3RzdHJhcC5kcm9wZG93biIsInVpLmJvb3RzdHJhcC5tb2RhbCIsInVpLmJvb3RzdHJhcC5wYWdpbmF0aW9uIiwidWkuYm9vdHN0cmFwLnRvb2x0aXAiLCJ1aS5ib290c3RyYXAucG9wb3ZlciIsInVpLmJvb3RzdHJhcC5wcm9ncmVzc2JhciIsInVpLmJvb3RzdHJhcC5yYXRpbmciLCJ1aS5ib290c3RyYXAudGFicyIsInVpLmJvb3RzdHJhcC50aW1lcGlja2VyIiwidWkuYm9vdHN0cmFwLnR5cGVhaGVhZCJdKSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnRwbHMiLFsidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC5odG1sIiwidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi5odG1sIiwidGVtcGxhdGUvYWxlcnQvYWxlcnQuaHRtbCIsInRlbXBsYXRlL2Nhcm91c2VsL2Nhcm91c2VsLmh0bWwiLCJ0ZW1wbGF0ZS9jYXJvdXNlbC9zbGlkZS5odG1sIiwidGVtcGxhdGUvZGF0ZXBpY2tlci9kYXRlcGlja2VyLmh0bWwiLCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RheS5odG1sIiwidGVtcGxhdGUvZGF0ZXBpY2tlci9tb250aC5odG1sIiwidGVtcGxhdGUvZGF0ZXBpY2tlci9wb3B1cC5odG1sIiwidGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWwiLCJ0ZW1wbGF0ZS9tb2RhbC9iYWNrZHJvcC5odG1sIiwidGVtcGxhdGUvbW9kYWwvd2luZG93Lmh0bWwiLCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2VyLmh0bWwiLCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2luYXRpb24uaHRtbCIsInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1odG1sLXVuc2FmZS1wb3B1cC5odG1sIiwidGVtcGxhdGUvdG9vbHRpcC90b29sdGlwLXBvcHVwLmh0bWwiLCJ0ZW1wbGF0ZS9wb3BvdmVyL3BvcG92ZXIuaHRtbCIsInRlbXBsYXRlL3Byb2dyZXNzYmFyL2Jhci5odG1sIiwidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3MuaHRtbCIsInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzYmFyLmh0bWwiLCJ0ZW1wbGF0ZS9yYXRpbmcvcmF0aW5nLmh0bWwiLCJ0ZW1wbGF0ZS90YWJzL3RhYi5odG1sIiwidGVtcGxhdGUvdGFicy90YWJzZXQuaHRtbCIsInRlbXBsYXRlL3RpbWVwaWNrZXIvdGltZXBpY2tlci5odG1sIiwidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1tYXRjaC5odG1sIiwidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1wb3B1cC5odG1sIl0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAudHJhbnNpdGlvbiIsW10pLmZhY3RvcnkoIiR0cmFuc2l0aW9uIixbIiRxIiwiJHRpbWVvdXQiLCIkcm9vdFNjb3BlIixmdW5jdGlvbigkcSwkdGltZW91dCwkcm9vdFNjb3BlKXtmdW5jdGlvbiBmaW5kRW5kRXZlbnROYW1lKGVuZEV2ZW50TmFtZXMpe2Zvcih2YXIgbmFtZSBpbiBlbmRFdmVudE5hbWVzKWlmKHZvaWQgMCE9PXRyYW5zRWxlbWVudC5zdHlsZVtuYW1lXSlyZXR1cm4gZW5kRXZlbnROYW1lc1tuYW1lXX12YXIgJHRyYW5zaXRpb249ZnVuY3Rpb24oZWxlbWVudCx0cmlnZ2VyLG9wdGlvbnMpe29wdGlvbnM9b3B0aW9uc3x8e307dmFyIGRlZmVycmVkPSRxLmRlZmVyKCksZW5kRXZlbnROYW1lPSR0cmFuc2l0aW9uW29wdGlvbnMuYW5pbWF0aW9uPyJhbmltYXRpb25FbmRFdmVudE5hbWUiOiJ0cmFuc2l0aW9uRW5kRXZlbnROYW1lIl0sdHJhbnNpdGlvbkVuZEhhbmRsZXI9ZnVuY3Rpb24oKXskcm9vdFNjb3BlLiRhcHBseShmdW5jdGlvbigpe2VsZW1lbnQudW5iaW5kKGVuZEV2ZW50TmFtZSx0cmFuc2l0aW9uRW5kSGFuZGxlciksZGVmZXJyZWQucmVzb2x2ZShlbGVtZW50KX0pfTtyZXR1cm4gZW5kRXZlbnROYW1lJiZlbGVtZW50LmJpbmQoZW5kRXZlbnROYW1lLHRyYW5zaXRpb25FbmRIYW5kbGVyKSwkdGltZW91dChmdW5jdGlvbigpe2FuZ3VsYXIuaXNTdHJpbmcodHJpZ2dlcik/ZWxlbWVudC5hZGRDbGFzcyh0cmlnZ2VyKTphbmd1bGFyLmlzRnVuY3Rpb24odHJpZ2dlcik/dHJpZ2dlcihlbGVtZW50KTphbmd1bGFyLmlzT2JqZWN0KHRyaWdnZXIpJiZlbGVtZW50LmNzcyh0cmlnZ2VyKSxlbmRFdmVudE5hbWV8fGRlZmVycmVkLnJlc29sdmUoZWxlbWVudCl9KSxkZWZlcnJlZC5wcm9taXNlLmNhbmNlbD1mdW5jdGlvbigpe2VuZEV2ZW50TmFtZSYmZWxlbWVudC51bmJpbmQoZW5kRXZlbnROYW1lLHRyYW5zaXRpb25FbmRIYW5kbGVyKSxkZWZlcnJlZC5yZWplY3QoIlRyYW5zaXRpb24gY2FuY2VsbGVkIil9LGRlZmVycmVkLnByb21pc2V9LHRyYW5zRWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0cmFucyIpLHRyYW5zaXRpb25FbmRFdmVudE5hbWVzPXtXZWJraXRUcmFuc2l0aW9uOiJ3ZWJraXRUcmFuc2l0aW9uRW5kIixNb3pUcmFuc2l0aW9uOiJ0cmFuc2l0aW9uZW5kIixPVHJhbnNpdGlvbjoib1RyYW5zaXRpb25FbmQiLHRyYW5zaXRpb246InRyYW5zaXRpb25lbmQifSxhbmltYXRpb25FbmRFdmVudE5hbWVzPXtXZWJraXRUcmFuc2l0aW9uOiJ3ZWJraXRBbmltYXRpb25FbmQiLE1velRyYW5zaXRpb246ImFuaW1hdGlvbmVuZCIsT1RyYW5zaXRpb246Im9BbmltYXRpb25FbmQiLHRyYW5zaXRpb246ImFuaW1hdGlvbmVuZCJ9O3JldHVybiAkdHJhbnNpdGlvbi50cmFuc2l0aW9uRW5kRXZlbnROYW1lPWZpbmRFbmRFdmVudE5hbWUodHJhbnNpdGlvbkVuZEV2ZW50TmFtZXMpLCR0cmFuc2l0aW9uLmFuaW1hdGlvbkVuZEV2ZW50TmFtZT1maW5kRW5kRXZlbnROYW1lKGFuaW1hdGlvbkVuZEV2ZW50TmFtZXMpLCR0cmFuc2l0aW9ufV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAuY29sbGFwc2UiLFsidWkuYm9vdHN0cmFwLnRyYW5zaXRpb24iXSkuZGlyZWN0aXZlKCJjb2xsYXBzZSIsWyIkdHJhbnNpdGlvbiIsZnVuY3Rpb24oJHRyYW5zaXRpb24pe3JldHVybntsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMpe2Z1bmN0aW9uIGRvVHJhbnNpdGlvbihjaGFuZ2Upe2Z1bmN0aW9uIG5ld1RyYW5zaXRpb25Eb25lKCl7Y3VycmVudFRyYW5zaXRpb249PT1uZXdUcmFuc2l0aW9uJiYoY3VycmVudFRyYW5zaXRpb249dm9pZCAwKX12YXIgbmV3VHJhbnNpdGlvbj0kdHJhbnNpdGlvbihlbGVtZW50LGNoYW5nZSk7cmV0dXJuIGN1cnJlbnRUcmFuc2l0aW9uJiZjdXJyZW50VHJhbnNpdGlvbi5jYW5jZWwoKSxjdXJyZW50VHJhbnNpdGlvbj1uZXdUcmFuc2l0aW9uLG5ld1RyYW5zaXRpb24udGhlbihuZXdUcmFuc2l0aW9uRG9uZSxuZXdUcmFuc2l0aW9uRG9uZSksbmV3VHJhbnNpdGlvbn1mdW5jdGlvbiBleHBhbmQoKXtpbml0aWFsQW5pbVNraXA/KGluaXRpYWxBbmltU2tpcD0hMSxleHBhbmREb25lKCkpOihlbGVtZW50LnJlbW92ZUNsYXNzKCJjb2xsYXBzZSIpLmFkZENsYXNzKCJjb2xsYXBzaW5nIiksZG9UcmFuc2l0aW9uKHtoZWlnaHQ6ZWxlbWVudFswXS5zY3JvbGxIZWlnaHQrInB4In0pLnRoZW4oZXhwYW5kRG9uZSkpfWZ1bmN0aW9uIGV4cGFuZERvbmUoKXtlbGVtZW50LnJlbW92ZUNsYXNzKCJjb2xsYXBzaW5nIiksZWxlbWVudC5hZGRDbGFzcygiY29sbGFwc2UgaW4iKSxlbGVtZW50LmNzcyh7aGVpZ2h0OiJhdXRvIn0pfWZ1bmN0aW9uIGNvbGxhcHNlKCl7aWYoaW5pdGlhbEFuaW1Ta2lwKWluaXRpYWxBbmltU2tpcD0hMSxjb2xsYXBzZURvbmUoKSxlbGVtZW50LmNzcyh7aGVpZ2h0OjB9KTtlbHNle2VsZW1lbnQuY3NzKHtoZWlnaHQ6ZWxlbWVudFswXS5zY3JvbGxIZWlnaHQrInB4In0pO3tlbGVtZW50WzBdLm9mZnNldFdpZHRofWVsZW1lbnQucmVtb3ZlQ2xhc3MoImNvbGxhcHNlIGluIikuYWRkQ2xhc3MoImNvbGxhcHNpbmciKSxkb1RyYW5zaXRpb24oe2hlaWdodDowfSkudGhlbihjb2xsYXBzZURvbmUpfX1mdW5jdGlvbiBjb2xsYXBzZURvbmUoKXtlbGVtZW50LnJlbW92ZUNsYXNzKCJjb2xsYXBzaW5nIiksZWxlbWVudC5hZGRDbGFzcygiY29sbGFwc2UiKX12YXIgY3VycmVudFRyYW5zaXRpb24saW5pdGlhbEFuaW1Ta2lwPSEwO3Njb3BlLiR3YXRjaChhdHRycy5jb2xsYXBzZSxmdW5jdGlvbihzaG91bGRDb2xsYXBzZSl7c2hvdWxkQ29sbGFwc2U/Y29sbGFwc2UoKTpleHBhbmQoKX0pfX19XSksYW5ndWxhci5tb2R1bGUoInVpLmJvb3RzdHJhcC5hY2NvcmRpb24iLFsidWkuYm9vdHN0cmFwLmNvbGxhcHNlIl0pLmNvbnN0YW50KCJhY2NvcmRpb25Db25maWciLHtjbG9zZU90aGVyczohMH0pLmNvbnRyb2xsZXIoIkFjY29yZGlvbkNvbnRyb2xsZXIiLFsiJHNjb3BlIiwiJGF0dHJzIiwiYWNjb3JkaW9uQ29uZmlnIixmdW5jdGlvbigkc2NvcGUsJGF0dHJzLGFjY29yZGlvbkNvbmZpZyl7dGhpcy5ncm91cHM9W10sdGhpcy5jbG9zZU90aGVycz1mdW5jdGlvbihvcGVuR3JvdXApe3ZhciBjbG9zZU90aGVycz1hbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMuY2xvc2VPdGhlcnMpPyRzY29wZS4kZXZhbCgkYXR0cnMuY2xvc2VPdGhlcnMpOmFjY29yZGlvbkNvbmZpZy5jbG9zZU90aGVycztjbG9zZU90aGVycyYmYW5ndWxhci5mb3JFYWNoKHRoaXMuZ3JvdXBzLGZ1bmN0aW9uKGdyb3VwKXtncm91cCE9PW9wZW5Hcm91cCYmKGdyb3VwLmlzT3Blbj0hMSl9KX0sdGhpcy5hZGRHcm91cD1mdW5jdGlvbihncm91cFNjb3BlKXt2YXIgdGhhdD10aGlzO3RoaXMuZ3JvdXBzLnB1c2goZ3JvdXBTY29wZSksZ3JvdXBTY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpe3RoYXQucmVtb3ZlR3JvdXAoZ3JvdXBTY29wZSl9KX0sdGhpcy5yZW1vdmVHcm91cD1mdW5jdGlvbihncm91cCl7dmFyIGluZGV4PXRoaXMuZ3JvdXBzLmluZGV4T2YoZ3JvdXApOy0xIT09aW5kZXgmJnRoaXMuZ3JvdXBzLnNwbGljZShpbmRleCwxKX19XSkuZGlyZWN0aXZlKCJhY2NvcmRpb24iLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIsY29udHJvbGxlcjoiQWNjb3JkaW9uQ29udHJvbGxlciIsdHJhbnNjbHVkZTohMCxyZXBsYWNlOiExLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9hY2NvcmRpb24vYWNjb3JkaW9uLmh0bWwifX0pLmRpcmVjdGl2ZSgiYWNjb3JkaW9uR3JvdXAiLGZ1bmN0aW9uKCl7cmV0dXJue3JlcXVpcmU6Il5hY2NvcmRpb24iLHJlc3RyaWN0OiJFQSIsdHJhbnNjbHVkZTohMCxyZXBsYWNlOiEwLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9hY2NvcmRpb24vYWNjb3JkaW9uLWdyb3VwLmh0bWwiLHNjb3BlOntoZWFkaW5nOiJAIixpc09wZW46Ij0/Iixpc0Rpc2FibGVkOiI9PyJ9LGNvbnRyb2xsZXI6ZnVuY3Rpb24oKXt0aGlzLnNldEhlYWRpbmc9ZnVuY3Rpb24oZWxlbWVudCl7dGhpcy5oZWFkaW5nPWVsZW1lbnR9fSxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsYWNjb3JkaW9uQ3RybCl7YWNjb3JkaW9uQ3RybC5hZGRHcm91cChzY29wZSksc2NvcGUuJHdhdGNoKCJpc09wZW4iLGZ1bmN0aW9uKHZhbHVlKXt2YWx1ZSYmYWNjb3JkaW9uQ3RybC5jbG9zZU90aGVycyhzY29wZSl9KSxzY29wZS50b2dnbGVPcGVuPWZ1bmN0aW9uKCl7c2NvcGUuaXNEaXNhYmxlZHx8KHNjb3BlLmlzT3Blbj0hc2NvcGUuaXNPcGVuKX19fX0pLmRpcmVjdGl2ZSgiYWNjb3JkaW9uSGVhZGluZyIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkVBIix0cmFuc2NsdWRlOiEwLHRlbXBsYXRlOiIiLHJlcGxhY2U6ITAscmVxdWlyZToiXmFjY29yZGlvbkdyb3VwIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cixhY2NvcmRpb25Hcm91cEN0cmwsdHJhbnNjbHVkZSl7YWNjb3JkaW9uR3JvdXBDdHJsLnNldEhlYWRpbmcodHJhbnNjbHVkZShzY29wZSxmdW5jdGlvbigpe30pKX19fSkuZGlyZWN0aXZlKCJhY2NvcmRpb25UcmFuc2NsdWRlIixmdW5jdGlvbigpe3JldHVybntyZXF1aXJlOiJeYWNjb3JkaW9uR3JvdXAiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRyLGNvbnRyb2xsZXIpe3Njb3BlLiR3YXRjaChmdW5jdGlvbigpe3JldHVybiBjb250cm9sbGVyW2F0dHIuYWNjb3JkaW9uVHJhbnNjbHVkZV19LGZ1bmN0aW9uKGhlYWRpbmcpe2hlYWRpbmcmJihlbGVtZW50Lmh0bWwoIiIpLGVsZW1lbnQuYXBwZW5kKGhlYWRpbmcpKX0pfX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLmFsZXJ0IixbXSkuY29udHJvbGxlcigiQWxlcnRDb250cm9sbGVyIixbIiRzY29wZSIsIiRhdHRycyIsZnVuY3Rpb24oJHNjb3BlLCRhdHRycyl7JHNjb3BlLmNsb3NlYWJsZT0iY2xvc2UiaW4gJGF0dHJzfV0pLmRpcmVjdGl2ZSgiYWxlcnQiLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIsY29udHJvbGxlcjoiQWxlcnRDb250cm9sbGVyIix0ZW1wbGF0ZVVybDoidGVtcGxhdGUvYWxlcnQvYWxlcnQuaHRtbCIsdHJhbnNjbHVkZTohMCxyZXBsYWNlOiEwLHNjb3BlOnt0eXBlOiJAIixjbG9zZToiJiJ9fX0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAuYmluZEh0bWwiLFtdKS5kaXJlY3RpdmUoImJpbmRIdG1sVW5zYWZlIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHIpe2VsZW1lbnQuYWRkQ2xhc3MoIm5nLWJpbmRpbmciKS5kYXRhKCIkYmluZGluZyIsYXR0ci5iaW5kSHRtbFVuc2FmZSksc2NvcGUuJHdhdGNoKGF0dHIuYmluZEh0bWxVbnNhZmUsZnVuY3Rpb24odmFsdWUpe2VsZW1lbnQuaHRtbCh2YWx1ZXx8IiIpfSl9fSksYW5ndWxhci5tb2R1bGUoInVpLmJvb3RzdHJhcC5idXR0b25zIixbXSkuY29uc3RhbnQoImJ1dHRvbkNvbmZpZyIse2FjdGl2ZUNsYXNzOiJhY3RpdmUiLHRvZ2dsZUV2ZW50OiJjbGljayJ9KS5jb250cm9sbGVyKCJCdXR0b25zQ29udHJvbGxlciIsWyJidXR0b25Db25maWciLGZ1bmN0aW9uKGJ1dHRvbkNvbmZpZyl7dGhpcy5hY3RpdmVDbGFzcz1idXR0b25Db25maWcuYWN0aXZlQ2xhc3N8fCJhY3RpdmUiLHRoaXMudG9nZ2xlRXZlbnQ9YnV0dG9uQ29uZmlnLnRvZ2dsZUV2ZW50fHwiY2xpY2sifV0pLmRpcmVjdGl2ZSgiYnRuUmFkaW8iLGZ1bmN0aW9uKCl7cmV0dXJue3JlcXVpcmU6WyJidG5SYWRpbyIsIm5nTW9kZWwiXSxjb250cm9sbGVyOiJCdXR0b25zQ29udHJvbGxlciIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLGN0cmxzKXt2YXIgYnV0dG9uc0N0cmw9Y3RybHNbMF0sbmdNb2RlbEN0cmw9Y3RybHNbMV07bmdNb2RlbEN0cmwuJHJlbmRlcj1mdW5jdGlvbigpe2VsZW1lbnQudG9nZ2xlQ2xhc3MoYnV0dG9uc0N0cmwuYWN0aXZlQ2xhc3MsYW5ndWxhci5lcXVhbHMobmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUsc2NvcGUuJGV2YWwoYXR0cnMuYnRuUmFkaW8pKSl9LGVsZW1lbnQuYmluZChidXR0b25zQ3RybC50b2dnbGVFdmVudCxmdW5jdGlvbigpe3ZhciBpc0FjdGl2ZT1lbGVtZW50Lmhhc0NsYXNzKGJ1dHRvbnNDdHJsLmFjdGl2ZUNsYXNzKTsoIWlzQWN0aXZlfHxhbmd1bGFyLmlzRGVmaW5lZChhdHRycy51bmNoZWNrYWJsZSkpJiZzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKGlzQWN0aXZlP251bGw6c2NvcGUuJGV2YWwoYXR0cnMuYnRuUmFkaW8pKSxuZ01vZGVsQ3RybC4kcmVuZGVyKCl9KX0pfX19KS5kaXJlY3RpdmUoImJ0bkNoZWNrYm94IixmdW5jdGlvbigpe3JldHVybntyZXF1aXJlOlsiYnRuQ2hlY2tib3giLCJuZ01vZGVsIl0sY29udHJvbGxlcjoiQnV0dG9uc0NvbnRyb2xsZXIiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyxjdHJscyl7ZnVuY3Rpb24gZ2V0VHJ1ZVZhbHVlKCl7cmV0dXJuIGdldENoZWNrYm94VmFsdWUoYXR0cnMuYnRuQ2hlY2tib3hUcnVlLCEwKX1mdW5jdGlvbiBnZXRGYWxzZVZhbHVlKCl7cmV0dXJuIGdldENoZWNrYm94VmFsdWUoYXR0cnMuYnRuQ2hlY2tib3hGYWxzZSwhMSl9ZnVuY3Rpb24gZ2V0Q2hlY2tib3hWYWx1ZShhdHRyaWJ1dGVWYWx1ZSxkZWZhdWx0VmFsdWUpe3ZhciB2YWw9c2NvcGUuJGV2YWwoYXR0cmlidXRlVmFsdWUpO3JldHVybiBhbmd1bGFyLmlzRGVmaW5lZCh2YWwpP3ZhbDpkZWZhdWx0VmFsdWV9dmFyIGJ1dHRvbnNDdHJsPWN0cmxzWzBdLG5nTW9kZWxDdHJsPWN0cmxzWzFdO25nTW9kZWxDdHJsLiRyZW5kZXI9ZnVuY3Rpb24oKXtlbGVtZW50LnRvZ2dsZUNsYXNzKGJ1dHRvbnNDdHJsLmFjdGl2ZUNsYXNzLGFuZ3VsYXIuZXF1YWxzKG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlLGdldFRydWVWYWx1ZSgpKSl9LGVsZW1lbnQuYmluZChidXR0b25zQ3RybC50b2dnbGVFdmVudCxmdW5jdGlvbigpe3Njb3BlLiRhcHBseShmdW5jdGlvbigpe25nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUoZWxlbWVudC5oYXNDbGFzcyhidXR0b25zQ3RybC5hY3RpdmVDbGFzcyk/Z2V0RmFsc2VWYWx1ZSgpOmdldFRydWVWYWx1ZSgpKSxuZ01vZGVsQ3RybC4kcmVuZGVyKCl9KX0pfX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLmNhcm91c2VsIixbInVpLmJvb3RzdHJhcC50cmFuc2l0aW9uIl0pLmNvbnRyb2xsZXIoIkNhcm91c2VsQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkdGltZW91dCIsIiR0cmFuc2l0aW9uIixmdW5jdGlvbigkc2NvcGUsJHRpbWVvdXQsJHRyYW5zaXRpb24pe2Z1bmN0aW9uIHJlc3RhcnRUaW1lcigpe3Jlc2V0VGltZXIoKTt2YXIgaW50ZXJ2YWw9KyRzY29wZS5pbnRlcnZhbDshaXNOYU4oaW50ZXJ2YWwpJiZpbnRlcnZhbD49MCYmKGN1cnJlbnRUaW1lb3V0PSR0aW1lb3V0KHRpbWVyRm4saW50ZXJ2YWwpKX1mdW5jdGlvbiByZXNldFRpbWVyKCl7Y3VycmVudFRpbWVvdXQmJigkdGltZW91dC5jYW5jZWwoY3VycmVudFRpbWVvdXQpLGN1cnJlbnRUaW1lb3V0PW51bGwpfWZ1bmN0aW9uIHRpbWVyRm4oKXtpc1BsYXlpbmc/KCRzY29wZS5uZXh0KCkscmVzdGFydFRpbWVyKCkpOiRzY29wZS5wYXVzZSgpfXZhciBjdXJyZW50VGltZW91dCxpc1BsYXlpbmcsc2VsZj10aGlzLHNsaWRlcz1zZWxmLnNsaWRlcz0kc2NvcGUuc2xpZGVzPVtdLGN1cnJlbnRJbmRleD0tMTtzZWxmLmN1cnJlbnRTbGlkZT1udWxsO3ZhciBkZXN0cm95ZWQ9ITE7c2VsZi5zZWxlY3Q9JHNjb3BlLnNlbGVjdD1mdW5jdGlvbihuZXh0U2xpZGUsZGlyZWN0aW9uKXtmdW5jdGlvbiBnb05leHQoKXtpZighZGVzdHJveWVkKXtpZihzZWxmLmN1cnJlbnRTbGlkZSYmYW5ndWxhci5pc1N0cmluZyhkaXJlY3Rpb24pJiYhJHNjb3BlLm5vVHJhbnNpdGlvbiYmbmV4dFNsaWRlLiRlbGVtZW50KXtuZXh0U2xpZGUuJGVsZW1lbnQuYWRkQ2xhc3MoZGlyZWN0aW9uKTt7bmV4dFNsaWRlLiRlbGVtZW50WzBdLm9mZnNldFdpZHRofWFuZ3VsYXIuZm9yRWFjaChzbGlkZXMsZnVuY3Rpb24oc2xpZGUpe2FuZ3VsYXIuZXh0ZW5kKHNsaWRlLHtkaXJlY3Rpb246IiIsZW50ZXJpbmc6ITEsbGVhdmluZzohMSxhY3RpdmU6ITF9KX0pLGFuZ3VsYXIuZXh0ZW5kKG5leHRTbGlkZSx7ZGlyZWN0aW9uOmRpcmVjdGlvbixhY3RpdmU6ITAsZW50ZXJpbmc6ITB9KSxhbmd1bGFyLmV4dGVuZChzZWxmLmN1cnJlbnRTbGlkZXx8e30se2RpcmVjdGlvbjpkaXJlY3Rpb24sbGVhdmluZzohMH0pLCRzY29wZS4kY3VycmVudFRyYW5zaXRpb249JHRyYW5zaXRpb24obmV4dFNsaWRlLiRlbGVtZW50LHt9KSxmdW5jdGlvbihuZXh0LGN1cnJlbnQpeyRzY29wZS4kY3VycmVudFRyYW5zaXRpb24udGhlbihmdW5jdGlvbigpe3RyYW5zaXRpb25Eb25lKG5leHQsY3VycmVudCl9LGZ1bmN0aW9uKCl7dHJhbnNpdGlvbkRvbmUobmV4dCxjdXJyZW50KX0pfShuZXh0U2xpZGUsc2VsZi5jdXJyZW50U2xpZGUpfWVsc2UgdHJhbnNpdGlvbkRvbmUobmV4dFNsaWRlLHNlbGYuY3VycmVudFNsaWRlKTtzZWxmLmN1cnJlbnRTbGlkZT1uZXh0U2xpZGUsY3VycmVudEluZGV4PW5leHRJbmRleCxyZXN0YXJ0VGltZXIoKX19ZnVuY3Rpb24gdHJhbnNpdGlvbkRvbmUobmV4dCxjdXJyZW50KXthbmd1bGFyLmV4dGVuZChuZXh0LHtkaXJlY3Rpb246IiIsYWN0aXZlOiEwLGxlYXZpbmc6ITEsZW50ZXJpbmc6ITF9KSxhbmd1bGFyLmV4dGVuZChjdXJyZW50fHx7fSx7ZGlyZWN0aW9uOiIiLGFjdGl2ZTohMSxsZWF2aW5nOiExLGVudGVyaW5nOiExfSksJHNjb3BlLiRjdXJyZW50VHJhbnNpdGlvbj1udWxsfXZhciBuZXh0SW5kZXg9c2xpZGVzLmluZGV4T2YobmV4dFNsaWRlKTt2b2lkIDA9PT1kaXJlY3Rpb24mJihkaXJlY3Rpb249bmV4dEluZGV4PmN1cnJlbnRJbmRleD8ibmV4dCI6InByZXYiKSxuZXh0U2xpZGUmJm5leHRTbGlkZSE9PXNlbGYuY3VycmVudFNsaWRlJiYoJHNjb3BlLiRjdXJyZW50VHJhbnNpdGlvbj8oJHNjb3BlLiRjdXJyZW50VHJhbnNpdGlvbi5jYW5jZWwoKSwkdGltZW91dChnb05leHQpKTpnb05leHQoKSl9LCRzY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpe2Rlc3Ryb3llZD0hMH0pLHNlbGYuaW5kZXhPZlNsaWRlPWZ1bmN0aW9uKHNsaWRlKXtyZXR1cm4gc2xpZGVzLmluZGV4T2Yoc2xpZGUpfSwkc2NvcGUubmV4dD1mdW5jdGlvbigpe3ZhciBuZXdJbmRleD0oY3VycmVudEluZGV4KzEpJXNsaWRlcy5sZW5ndGg7cmV0dXJuICRzY29wZS4kY3VycmVudFRyYW5zaXRpb24/dm9pZCAwOnNlbGYuc2VsZWN0KHNsaWRlc1tuZXdJbmRleF0sIm5leHQiKX0sJHNjb3BlLnByZXY9ZnVuY3Rpb24oKXt2YXIgbmV3SW5kZXg9MD5jdXJyZW50SW5kZXgtMT9zbGlkZXMubGVuZ3RoLTE6Y3VycmVudEluZGV4LTE7cmV0dXJuICRzY29wZS4kY3VycmVudFRyYW5zaXRpb24/dm9pZCAwOnNlbGYuc2VsZWN0KHNsaWRlc1tuZXdJbmRleF0sInByZXYiKX0sJHNjb3BlLmlzQWN0aXZlPWZ1bmN0aW9uKHNsaWRlKXtyZXR1cm4gc2VsZi5jdXJyZW50U2xpZGU9PT1zbGlkZX0sJHNjb3BlLiR3YXRjaCgiaW50ZXJ2YWwiLHJlc3RhcnRUaW1lciksJHNjb3BlLiRvbigiJGRlc3Ryb3kiLHJlc2V0VGltZXIpLCRzY29wZS5wbGF5PWZ1bmN0aW9uKCl7aXNQbGF5aW5nfHwoaXNQbGF5aW5nPSEwLHJlc3RhcnRUaW1lcigpKX0sJHNjb3BlLnBhdXNlPWZ1bmN0aW9uKCl7JHNjb3BlLm5vUGF1c2V8fChpc1BsYXlpbmc9ITEscmVzZXRUaW1lcigpKX0sc2VsZi5hZGRTbGlkZT1mdW5jdGlvbihzbGlkZSxlbGVtZW50KXtzbGlkZS4kZWxlbWVudD1lbGVtZW50LHNsaWRlcy5wdXNoKHNsaWRlKSwxPT09c2xpZGVzLmxlbmd0aHx8c2xpZGUuYWN0aXZlPyhzZWxmLnNlbGVjdChzbGlkZXNbc2xpZGVzLmxlbmd0aC0xXSksMT09c2xpZGVzLmxlbmd0aCYmJHNjb3BlLnBsYXkoKSk6c2xpZGUuYWN0aXZlPSExfSxzZWxmLnJlbW92ZVNsaWRlPWZ1bmN0aW9uKHNsaWRlKXt2YXIgaW5kZXg9c2xpZGVzLmluZGV4T2Yoc2xpZGUpO3NsaWRlcy5zcGxpY2UoaW5kZXgsMSksc2xpZGVzLmxlbmd0aD4wJiZzbGlkZS5hY3RpdmU/c2VsZi5zZWxlY3QoaW5kZXg+PXNsaWRlcy5sZW5ndGg/c2xpZGVzW2luZGV4LTFdOnNsaWRlc1tpbmRleF0pOmN1cnJlbnRJbmRleD5pbmRleCYmY3VycmVudEluZGV4LS19fV0pLmRpcmVjdGl2ZSgiY2Fyb3VzZWwiLFtmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHRyYW5zY2x1ZGU6ITAscmVwbGFjZTohMCxjb250cm9sbGVyOiJDYXJvdXNlbENvbnRyb2xsZXIiLHJlcXVpcmU6ImNhcm91c2VsIix0ZW1wbGF0ZVVybDoidGVtcGxhdGUvY2Fyb3VzZWwvY2Fyb3VzZWwuaHRtbCIsc2NvcGU6e2ludGVydmFsOiI9Iixub1RyYW5zaXRpb246Ij0iLG5vUGF1c2U6Ij0ifX19XSkuZGlyZWN0aXZlKCJzbGlkZSIsZnVuY3Rpb24oKXtyZXR1cm57cmVxdWlyZToiXmNhcm91c2VsIixyZXN0cmljdDoiRUEiLHRyYW5zY2x1ZGU6ITAscmVwbGFjZTohMCx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvY2Fyb3VzZWwvc2xpZGUuaHRtbCIsc2NvcGU6e2FjdGl2ZToiPT8ifSxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsY2Fyb3VzZWxDdHJsKXtjYXJvdXNlbEN0cmwuYWRkU2xpZGUoc2NvcGUsZWxlbWVudCksc2NvcGUuJG9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtjYXJvdXNlbEN0cmwucmVtb3ZlU2xpZGUoc2NvcGUpfSksc2NvcGUuJHdhdGNoKCJhY3RpdmUiLGZ1bmN0aW9uKGFjdGl2ZSl7YWN0aXZlJiZjYXJvdXNlbEN0cmwuc2VsZWN0KHNjb3BlKX0pfX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLmRhdGVwYXJzZXIiLFtdKS5zZXJ2aWNlKCJkYXRlUGFyc2VyIixbIiRsb2NhbGUiLCJvcmRlckJ5RmlsdGVyIixmdW5jdGlvbigkbG9jYWxlLG9yZGVyQnlGaWx0ZXIpe2Z1bmN0aW9uIGNyZWF0ZVBhcnNlcihmb3JtYXQpe3ZhciBtYXA9W10scmVnZXg9Zm9ybWF0LnNwbGl0KCIiKTtyZXR1cm4gYW5ndWxhci5mb3JFYWNoKGZvcm1hdENvZGVUb1JlZ2V4LGZ1bmN0aW9uKGRhdGEsY29kZSl7dmFyIGluZGV4PWZvcm1hdC5pbmRleE9mKGNvZGUpO2lmKGluZGV4Pi0xKXtmb3JtYXQ9Zm9ybWF0LnNwbGl0KCIiKSxyZWdleFtpbmRleF09IigiK2RhdGEucmVnZXgrIikiLGZvcm1hdFtpbmRleF09IiQiO2Zvcih2YXIgaT1pbmRleCsxLG49aW5kZXgrY29kZS5sZW5ndGg7bj5pO2krKylyZWdleFtpXT0iIixmb3JtYXRbaV09IiQiO2Zvcm1hdD1mb3JtYXQuam9pbigiIiksbWFwLnB1c2goe2luZGV4OmluZGV4LGFwcGx5OmRhdGEuYXBwbHl9KX19KSx7cmVnZXg6bmV3IFJlZ0V4cCgiXiIrcmVnZXguam9pbigiIikrIiQiKSxtYXA6b3JkZXJCeUZpbHRlcihtYXAsImluZGV4Iil9fWZ1bmN0aW9uIGlzVmFsaWQoeWVhcixtb250aCxkYXRlKXtyZXR1cm4gMT09PW1vbnRoJiZkYXRlPjI4PzI5PT09ZGF0ZSYmKHllYXIlND09PTAmJnllYXIlMTAwIT09MHx8eWVhciU0MDA9PT0wKTozPT09bW9udGh8fDU9PT1tb250aHx8OD09PW1vbnRofHwxMD09PW1vbnRoPzMxPmRhdGU6ITB9dGhpcy5wYXJzZXJzPXt9O3ZhciBmb3JtYXRDb2RlVG9SZWdleD17eXl5eTp7cmVnZXg6IlxcZHs0fSIsYXBwbHk6ZnVuY3Rpb24odmFsdWUpe3RoaXMueWVhcj0rdmFsdWV9fSx5eTp7cmVnZXg6IlxcZHsyfSIsYXBwbHk6ZnVuY3Rpb24odmFsdWUpe3RoaXMueWVhcj0rdmFsdWUrMmUzfX0seTp7cmVnZXg6IlxcZHsxLDR9IixhcHBseTpmdW5jdGlvbih2YWx1ZSl7dGhpcy55ZWFyPSt2YWx1ZX19LE1NTU06e3JlZ2V4OiRsb2NhbGUuREFURVRJTUVfRk9STUFUUy5NT05USC5qb2luKCJ8IiksYXBwbHk6ZnVuY3Rpb24odmFsdWUpe3RoaXMubW9udGg9JGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLk1PTlRILmluZGV4T2YodmFsdWUpfX0sTU1NOntyZWdleDokbG9jYWxlLkRBVEVUSU1FX0ZPUk1BVFMuU0hPUlRNT05USC5qb2luKCJ8IiksYXBwbHk6ZnVuY3Rpb24odmFsdWUpe3RoaXMubW9udGg9JGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLlNIT1JUTU9OVEguaW5kZXhPZih2YWx1ZSl9fSxNTTp7cmVnZXg6IjBbMS05XXwxWzAtMl0iLGFwcGx5OmZ1bmN0aW9uKHZhbHVlKXt0aGlzLm1vbnRoPXZhbHVlLTF9fSxNOntyZWdleDoiWzEtOV18MVswLTJdIixhcHBseTpmdW5jdGlvbih2YWx1ZSl7dGhpcy5tb250aD12YWx1ZS0xfX0sZGQ6e3JlZ2V4OiJbMC0yXVswLTldezF9fDNbMC0xXXsxfSIsYXBwbHk6ZnVuY3Rpb24odmFsdWUpe3RoaXMuZGF0ZT0rdmFsdWV9fSxkOntyZWdleDoiWzEtMl0/WzAtOV17MX18M1swLTFdezF9IixhcHBseTpmdW5jdGlvbih2YWx1ZSl7dGhpcy5kYXRlPSt2YWx1ZX19LEVFRUU6e3JlZ2V4OiRsb2NhbGUuREFURVRJTUVfRk9STUFUUy5EQVkuam9pbigifCIpfSxFRUU6e3JlZ2V4OiRsb2NhbGUuREFURVRJTUVfRk9STUFUUy5TSE9SVERBWS5qb2luKCJ8Iil9fTt0aGlzLnBhcnNlPWZ1bmN0aW9uKGlucHV0LGZvcm1hdCl7aWYoIWFuZ3VsYXIuaXNTdHJpbmcoaW5wdXQpfHwhZm9ybWF0KXJldHVybiBpbnB1dDtmb3JtYXQ9JGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTW2Zvcm1hdF18fGZvcm1hdCx0aGlzLnBhcnNlcnNbZm9ybWF0XXx8KHRoaXMucGFyc2Vyc1tmb3JtYXRdPWNyZWF0ZVBhcnNlcihmb3JtYXQpKTt2YXIgcGFyc2VyPXRoaXMucGFyc2Vyc1tmb3JtYXRdLHJlZ2V4PXBhcnNlci5yZWdleCxtYXA9cGFyc2VyLm1hcCxyZXN1bHRzPWlucHV0Lm1hdGNoKHJlZ2V4KTtpZihyZXN1bHRzJiZyZXN1bHRzLmxlbmd0aCl7Zm9yKHZhciBkdCxmaWVsZHM9e3llYXI6MTkwMCxtb250aDowLGRhdGU6MSxob3VyczowfSxpPTEsbj1yZXN1bHRzLmxlbmd0aDtuPmk7aSsrKXt2YXIgbWFwcGVyPW1hcFtpLTFdO21hcHBlci5hcHBseSYmbWFwcGVyLmFwcGx5LmNhbGwoZmllbGRzLHJlc3VsdHNbaV0pfXJldHVybiBpc1ZhbGlkKGZpZWxkcy55ZWFyLGZpZWxkcy5tb250aCxmaWVsZHMuZGF0ZSkmJihkdD1uZXcgRGF0ZShmaWVsZHMueWVhcixmaWVsZHMubW9udGgsZmllbGRzLmRhdGUsZmllbGRzLmhvdXJzKSksZHR9fX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnBvc2l0aW9uIixbXSkuZmFjdG9yeSgiJHBvc2l0aW9uIixbIiRkb2N1bWVudCIsIiR3aW5kb3ciLGZ1bmN0aW9uKCRkb2N1bWVudCwkd2luZG93KXtmdW5jdGlvbiBnZXRTdHlsZShlbCxjc3Nwcm9wKXtyZXR1cm4gZWwuY3VycmVudFN0eWxlP2VsLmN1cnJlbnRTdHlsZVtjc3Nwcm9wXTokd2luZG93LmdldENvbXB1dGVkU3R5bGU/JHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKVtjc3Nwcm9wXTplbC5zdHlsZVtjc3Nwcm9wXX1mdW5jdGlvbiBpc1N0YXRpY1Bvc2l0aW9uZWQoZWxlbWVudCl7cmV0dXJuInN0YXRpYyI9PT0oZ2V0U3R5bGUoZWxlbWVudCwicG9zaXRpb24iKXx8InN0YXRpYyIpfXZhciBwYXJlbnRPZmZzZXRFbD1mdW5jdGlvbihlbGVtZW50KXtmb3IodmFyIGRvY0RvbUVsPSRkb2N1bWVudFswXSxvZmZzZXRQYXJlbnQ9ZWxlbWVudC5vZmZzZXRQYXJlbnR8fGRvY0RvbUVsO29mZnNldFBhcmVudCYmb2Zmc2V0UGFyZW50IT09ZG9jRG9tRWwmJmlzU3RhdGljUG9zaXRpb25lZChvZmZzZXRQYXJlbnQpOylvZmZzZXRQYXJlbnQ9b2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDtyZXR1cm4gb2Zmc2V0UGFyZW50fHxkb2NEb21FbH07cmV0dXJue3Bvc2l0aW9uOmZ1bmN0aW9uKGVsZW1lbnQpe3ZhciBlbEJDUj10aGlzLm9mZnNldChlbGVtZW50KSxvZmZzZXRQYXJlbnRCQ1I9e3RvcDowLGxlZnQ6MH0sb2Zmc2V0UGFyZW50RWw9cGFyZW50T2Zmc2V0RWwoZWxlbWVudFswXSk7b2Zmc2V0UGFyZW50RWwhPSRkb2N1bWVudFswXSYmKG9mZnNldFBhcmVudEJDUj10aGlzLm9mZnNldChhbmd1bGFyLmVsZW1lbnQob2Zmc2V0UGFyZW50RWwpKSxvZmZzZXRQYXJlbnRCQ1IudG9wKz1vZmZzZXRQYXJlbnRFbC5jbGllbnRUb3Atb2Zmc2V0UGFyZW50RWwuc2Nyb2xsVG9wLG9mZnNldFBhcmVudEJDUi5sZWZ0Kz1vZmZzZXRQYXJlbnRFbC5jbGllbnRMZWZ0LW9mZnNldFBhcmVudEVsLnNjcm9sbExlZnQpO3ZhciBib3VuZGluZ0NsaWVudFJlY3Q9ZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm57d2lkdGg6Ym91bmRpbmdDbGllbnRSZWN0LndpZHRofHxlbGVtZW50LnByb3AoIm9mZnNldFdpZHRoIiksaGVpZ2h0OmJvdW5kaW5nQ2xpZW50UmVjdC5oZWlnaHR8fGVsZW1lbnQucHJvcCgib2Zmc2V0SGVpZ2h0IiksdG9wOmVsQkNSLnRvcC1vZmZzZXRQYXJlbnRCQ1IudG9wLGxlZnQ6ZWxCQ1IubGVmdC1vZmZzZXRQYXJlbnRCQ1IubGVmdH19LG9mZnNldDpmdW5jdGlvbihlbGVtZW50KXt2YXIgYm91bmRpbmdDbGllbnRSZWN0PWVsZW1lbnRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJue3dpZHRoOmJvdW5kaW5nQ2xpZW50UmVjdC53aWR0aHx8ZWxlbWVudC5wcm9wKCJvZmZzZXRXaWR0aCIpLGhlaWdodDpib3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0fHxlbGVtZW50LnByb3AoIm9mZnNldEhlaWdodCIpLHRvcDpib3VuZGluZ0NsaWVudFJlY3QudG9wKygkd2luZG93LnBhZ2VZT2Zmc2V0fHwkZG9jdW1lbnRbMF0uZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCksbGVmdDpib3VuZGluZ0NsaWVudFJlY3QubGVmdCsoJHdpbmRvdy5wYWdlWE9mZnNldHx8JGRvY3VtZW50WzBdLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0KX19LHBvc2l0aW9uRWxlbWVudHM6ZnVuY3Rpb24oaG9zdEVsLHRhcmdldEVsLHBvc2l0aW9uU3RyLGFwcGVuZFRvQm9keSl7dmFyIGhvc3RFbFBvcyx0YXJnZXRFbFdpZHRoLHRhcmdldEVsSGVpZ2h0LHRhcmdldEVsUG9zLHBvc2l0aW9uU3RyUGFydHM9cG9zaXRpb25TdHIuc3BsaXQoIi0iKSxwb3MwPXBvc2l0aW9uU3RyUGFydHNbMF0scG9zMT1wb3NpdGlvblN0clBhcnRzWzFdfHwiY2VudGVyIjtob3N0RWxQb3M9YXBwZW5kVG9Cb2R5P3RoaXMub2Zmc2V0KGhvc3RFbCk6dGhpcy5wb3NpdGlvbihob3N0RWwpLHRhcmdldEVsV2lkdGg9dGFyZ2V0RWwucHJvcCgib2Zmc2V0V2lkdGgiKSx0YXJnZXRFbEhlaWdodD10YXJnZXRFbC5wcm9wKCJvZmZzZXRIZWlnaHQiKTt2YXIgc2hpZnRXaWR0aD17Y2VudGVyOmZ1bmN0aW9uKCl7cmV0dXJuIGhvc3RFbFBvcy5sZWZ0K2hvc3RFbFBvcy53aWR0aC8yLXRhcmdldEVsV2lkdGgvMn0sbGVmdDpmdW5jdGlvbigpe3JldHVybiBob3N0RWxQb3MubGVmdH0scmlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gaG9zdEVsUG9zLmxlZnQraG9zdEVsUG9zLndpZHRofX0sc2hpZnRIZWlnaHQ9e2NlbnRlcjpmdW5jdGlvbigpe3JldHVybiBob3N0RWxQb3MudG9wK2hvc3RFbFBvcy5oZWlnaHQvMi10YXJnZXRFbEhlaWdodC8yfSx0b3A6ZnVuY3Rpb24oKXtyZXR1cm4gaG9zdEVsUG9zLnRvcH0sYm90dG9tOmZ1bmN0aW9uKCl7cmV0dXJuIGhvc3RFbFBvcy50b3AraG9zdEVsUG9zLmhlaWdodH19O3N3aXRjaChwb3MwKXtjYXNlInJpZ2h0Ijp0YXJnZXRFbFBvcz17dG9wOnNoaWZ0SGVpZ2h0W3BvczFdKCksbGVmdDpzaGlmdFdpZHRoW3BvczBdKCl9O2JyZWFrO2Nhc2UibGVmdCI6dGFyZ2V0RWxQb3M9e3RvcDpzaGlmdEhlaWdodFtwb3MxXSgpLGxlZnQ6aG9zdEVsUG9zLmxlZnQtdGFyZ2V0RWxXaWR0aH07YnJlYWs7Y2FzZSJib3R0b20iOnRhcmdldEVsUG9zPXt0b3A6c2hpZnRIZWlnaHRbcG9zMF0oKSxsZWZ0OnNoaWZ0V2lkdGhbcG9zMV0oKX07YnJlYWs7ZGVmYXVsdDp0YXJnZXRFbFBvcz17dG9wOmhvc3RFbFBvcy50b3AtdGFyZ2V0RWxIZWlnaHQsbGVmdDpzaGlmdFdpZHRoW3BvczFdKCl9fXJldHVybiB0YXJnZXRFbFBvc319fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAuZGF0ZXBpY2tlciIsWyJ1aS5ib290c3RyYXAuZGF0ZXBhcnNlciIsInVpLmJvb3RzdHJhcC5wb3NpdGlvbiJdKS5jb25zdGFudCgiZGF0ZXBpY2tlckNvbmZpZyIse2Zvcm1hdERheToiZGQiLGZvcm1hdE1vbnRoOiJNTU1NIixmb3JtYXRZZWFyOiJ5eXl5Iixmb3JtYXREYXlIZWFkZXI6IkVFRSIsZm9ybWF0RGF5VGl0bGU6Ik1NTU0geXl5eSIsZm9ybWF0TW9udGhUaXRsZToieXl5eSIsZGF0ZXBpY2tlck1vZGU6ImRheSIsbWluTW9kZToiZGF5IixtYXhNb2RlOiJ5ZWFyIixzaG93V2Vla3M6ITAsc3RhcnRpbmdEYXk6MCx5ZWFyUmFuZ2U6MjAsbWluRGF0ZTpudWxsLG1heERhdGU6bnVsbH0pLmNvbnRyb2xsZXIoIkRhdGVwaWNrZXJDb250cm9sbGVyIixbIiRzY29wZSIsIiRhdHRycyIsIiRwYXJzZSIsIiRpbnRlcnBvbGF0ZSIsIiR0aW1lb3V0IiwiJGxvZyIsImRhdGVGaWx0ZXIiLCJkYXRlcGlja2VyQ29uZmlnIixmdW5jdGlvbigkc2NvcGUsJGF0dHJzLCRwYXJzZSwkaW50ZXJwb2xhdGUsJHRpbWVvdXQsJGxvZyxkYXRlRmlsdGVyLGRhdGVwaWNrZXJDb25maWcpe3ZhciBzZWxmPXRoaXMsbmdNb2RlbEN0cmw9eyRzZXRWaWV3VmFsdWU6YW5ndWxhci5ub29wfTt0aGlzLm1vZGVzPVsiZGF5IiwibW9udGgiLCJ5ZWFyIl0sYW5ndWxhci5mb3JFYWNoKFsiZm9ybWF0RGF5IiwiZm9ybWF0TW9udGgiLCJmb3JtYXRZZWFyIiwiZm9ybWF0RGF5SGVhZGVyIiwiZm9ybWF0RGF5VGl0bGUiLCJmb3JtYXRNb250aFRpdGxlIiwibWluTW9kZSIsIm1heE1vZGUiLCJzaG93V2Vla3MiLCJzdGFydGluZ0RheSIsInllYXJSYW5nZSJdLGZ1bmN0aW9uKGtleSxpbmRleCl7c2VsZltrZXldPWFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRyc1trZXldKT84PmluZGV4PyRpbnRlcnBvbGF0ZSgkYXR0cnNba2V5XSkoJHNjb3BlLiRwYXJlbnQpOiRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRyc1trZXldKTpkYXRlcGlja2VyQ29uZmlnW2tleV19KSxhbmd1bGFyLmZvckVhY2goWyJtaW5EYXRlIiwibWF4RGF0ZSJdLGZ1bmN0aW9uKGtleSl7JGF0dHJzW2tleV0/JHNjb3BlLiRwYXJlbnQuJHdhdGNoKCRwYXJzZSgkYXR0cnNba2V5XSksZnVuY3Rpb24odmFsdWUpe3NlbGZba2V5XT12YWx1ZT9uZXcgRGF0ZSh2YWx1ZSk6bnVsbCxzZWxmLnJlZnJlc2hWaWV3KCl9KTpzZWxmW2tleV09ZGF0ZXBpY2tlckNvbmZpZ1trZXldP25ldyBEYXRlKGRhdGVwaWNrZXJDb25maWdba2V5XSk6bnVsbH0pLCRzY29wZS5kYXRlcGlja2VyTW9kZT0kc2NvcGUuZGF0ZXBpY2tlck1vZGV8fGRhdGVwaWNrZXJDb25maWcuZGF0ZXBpY2tlck1vZGUsJHNjb3BlLnVuaXF1ZUlkPSJkYXRlcGlja2VyLSIrJHNjb3BlLiRpZCsiLSIrTWF0aC5mbG9vcigxZTQqTWF0aC5yYW5kb20oKSksdGhpcy5hY3RpdmVEYXRlPWFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5pbml0RGF0ZSk/JHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLmluaXREYXRlKTpuZXcgRGF0ZSwkc2NvcGUuaXNBY3RpdmU9ZnVuY3Rpb24oZGF0ZU9iamVjdCl7cmV0dXJuIDA9PT1zZWxmLmNvbXBhcmUoZGF0ZU9iamVjdC5kYXRlLHNlbGYuYWN0aXZlRGF0ZSk/KCRzY29wZS5hY3RpdmVEYXRlSWQ9ZGF0ZU9iamVjdC51aWQsITApOiExfSx0aGlzLmluaXQ9ZnVuY3Rpb24obmdNb2RlbEN0cmxfKXtuZ01vZGVsQ3RybD1uZ01vZGVsQ3RybF8sbmdNb2RlbEN0cmwuJHJlbmRlcj1mdW5jdGlvbigpe3NlbGYucmVuZGVyKCl9fSx0aGlzLnJlbmRlcj1mdW5jdGlvbigpe2lmKG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlKXt2YXIgZGF0ZT1uZXcgRGF0ZShuZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZSksaXNWYWxpZD0haXNOYU4oZGF0ZSk7aXNWYWxpZD90aGlzLmFjdGl2ZURhdGU9ZGF0ZTokbG9nLmVycm9yKCdEYXRlcGlja2VyIGRpcmVjdGl2ZTogIm5nLW1vZGVsIiB2YWx1ZSBtdXN0IGJlIGEgRGF0ZSBvYmplY3QsIGEgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBzaW5jZSAwMS4wMS4xOTcwIG9yIGEgc3RyaW5nIHJlcHJlc2VudGluZyBhbiBSRkMyODIyIG9yIElTTyA4NjAxIGRhdGUuJyksbmdNb2RlbEN0cmwuJHNldFZhbGlkaXR5KCJkYXRlIixpc1ZhbGlkKX10aGlzLnJlZnJlc2hWaWV3KCl9LHRoaXMucmVmcmVzaFZpZXc9ZnVuY3Rpb24oKXtpZih0aGlzLmVsZW1lbnQpe3RoaXMuX3JlZnJlc2hWaWV3KCk7dmFyIGRhdGU9bmdNb2RlbEN0cmwuJG1vZGVsVmFsdWU/bmV3IERhdGUobmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUpOm51bGw7bmdNb2RlbEN0cmwuJHNldFZhbGlkaXR5KCJkYXRlLWRpc2FibGVkIiwhZGF0ZXx8dGhpcy5lbGVtZW50JiYhdGhpcy5pc0Rpc2FibGVkKGRhdGUpKX19LHRoaXMuY3JlYXRlRGF0ZU9iamVjdD1mdW5jdGlvbihkYXRlLGZvcm1hdCl7dmFyIG1vZGVsPW5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlP25ldyBEYXRlKG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlKTpudWxsOwpyZXR1cm57ZGF0ZTpkYXRlLGxhYmVsOmRhdGVGaWx0ZXIoZGF0ZSxmb3JtYXQpLHNlbGVjdGVkOm1vZGVsJiYwPT09dGhpcy5jb21wYXJlKGRhdGUsbW9kZWwpLGRpc2FibGVkOnRoaXMuaXNEaXNhYmxlZChkYXRlKSxjdXJyZW50OjA9PT10aGlzLmNvbXBhcmUoZGF0ZSxuZXcgRGF0ZSl9fSx0aGlzLmlzRGlzYWJsZWQ9ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIHRoaXMubWluRGF0ZSYmdGhpcy5jb21wYXJlKGRhdGUsdGhpcy5taW5EYXRlKTwwfHx0aGlzLm1heERhdGUmJnRoaXMuY29tcGFyZShkYXRlLHRoaXMubWF4RGF0ZSk+MHx8JGF0dHJzLmRhdGVEaXNhYmxlZCYmJHNjb3BlLmRhdGVEaXNhYmxlZCh7ZGF0ZTpkYXRlLG1vZGU6JHNjb3BlLmRhdGVwaWNrZXJNb2RlfSl9LHRoaXMuc3BsaXQ9ZnVuY3Rpb24oYXJyLHNpemUpe2Zvcih2YXIgYXJyYXlzPVtdO2Fyci5sZW5ndGg+MDspYXJyYXlzLnB1c2goYXJyLnNwbGljZSgwLHNpemUpKTtyZXR1cm4gYXJyYXlzfSwkc2NvcGUuc2VsZWN0PWZ1bmN0aW9uKGRhdGUpe2lmKCRzY29wZS5kYXRlcGlja2VyTW9kZT09PXNlbGYubWluTW9kZSl7dmFyIGR0PW5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlP25ldyBEYXRlKG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlKTpuZXcgRGF0ZSgwLDAsMCwwLDAsMCwwKTtkdC5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCksZGF0ZS5nZXRNb250aCgpLGRhdGUuZ2V0RGF0ZSgpKSxuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKGR0KSxuZ01vZGVsQ3RybC4kcmVuZGVyKCl9ZWxzZSBzZWxmLmFjdGl2ZURhdGU9ZGF0ZSwkc2NvcGUuZGF0ZXBpY2tlck1vZGU9c2VsZi5tb2Rlc1tzZWxmLm1vZGVzLmluZGV4T2YoJHNjb3BlLmRhdGVwaWNrZXJNb2RlKS0xXX0sJHNjb3BlLm1vdmU9ZnVuY3Rpb24oZGlyZWN0aW9uKXt2YXIgeWVhcj1zZWxmLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKStkaXJlY3Rpb24qKHNlbGYuc3RlcC55ZWFyc3x8MCksbW9udGg9c2VsZi5hY3RpdmVEYXRlLmdldE1vbnRoKCkrZGlyZWN0aW9uKihzZWxmLnN0ZXAubW9udGhzfHwwKTtzZWxmLmFjdGl2ZURhdGUuc2V0RnVsbFllYXIoeWVhcixtb250aCwxKSxzZWxmLnJlZnJlc2hWaWV3KCl9LCRzY29wZS50b2dnbGVNb2RlPWZ1bmN0aW9uKGRpcmVjdGlvbil7ZGlyZWN0aW9uPWRpcmVjdGlvbnx8MSwkc2NvcGUuZGF0ZXBpY2tlck1vZGU9PT1zZWxmLm1heE1vZGUmJjE9PT1kaXJlY3Rpb258fCRzY29wZS5kYXRlcGlja2VyTW9kZT09PXNlbGYubWluTW9kZSYmLTE9PT1kaXJlY3Rpb258fCgkc2NvcGUuZGF0ZXBpY2tlck1vZGU9c2VsZi5tb2Rlc1tzZWxmLm1vZGVzLmluZGV4T2YoJHNjb3BlLmRhdGVwaWNrZXJNb2RlKStkaXJlY3Rpb25dKX0sJHNjb3BlLmtleXM9ezEzOiJlbnRlciIsMzI6InNwYWNlIiwzMzoicGFnZXVwIiwzNDoicGFnZWRvd24iLDM1OiJlbmQiLDM2OiJob21lIiwzNzoibGVmdCIsMzg6InVwIiwzOToicmlnaHQiLDQwOiJkb3duIn07dmFyIGZvY3VzRWxlbWVudD1mdW5jdGlvbigpeyR0aW1lb3V0KGZ1bmN0aW9uKCl7c2VsZi5lbGVtZW50WzBdLmZvY3VzKCl9LDAsITEpfTskc2NvcGUuJG9uKCJkYXRlcGlja2VyLmZvY3VzIixmb2N1c0VsZW1lbnQpLCRzY29wZS5rZXlkb3duPWZ1bmN0aW9uKGV2dCl7dmFyIGtleT0kc2NvcGUua2V5c1tldnQud2hpY2hdO2lmKGtleSYmIWV2dC5zaGlmdEtleSYmIWV2dC5hbHRLZXkpaWYoZXZ0LnByZXZlbnREZWZhdWx0KCksZXZ0LnN0b3BQcm9wYWdhdGlvbigpLCJlbnRlciI9PT1rZXl8fCJzcGFjZSI9PT1rZXkpe2lmKHNlbGYuaXNEaXNhYmxlZChzZWxmLmFjdGl2ZURhdGUpKXJldHVybjskc2NvcGUuc2VsZWN0KHNlbGYuYWN0aXZlRGF0ZSksZm9jdXNFbGVtZW50KCl9ZWxzZSFldnQuY3RybEtleXx8InVwIiE9PWtleSYmImRvd24iIT09a2V5PyhzZWxmLmhhbmRsZUtleURvd24oa2V5LGV2dCksc2VsZi5yZWZyZXNoVmlldygpKTooJHNjb3BlLnRvZ2dsZU1vZGUoInVwIj09PWtleT8xOi0xKSxmb2N1c0VsZW1lbnQoKSl9fV0pLmRpcmVjdGl2ZSgiZGF0ZXBpY2tlciIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixyZXBsYWNlOiEwLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RhdGVwaWNrZXIuaHRtbCIsc2NvcGU6e2RhdGVwaWNrZXJNb2RlOiI9PyIsZGF0ZURpc2FibGVkOiImIn0scmVxdWlyZTpbImRhdGVwaWNrZXIiLCI/Xm5nTW9kZWwiXSxjb250cm9sbGVyOiJEYXRlcGlja2VyQ29udHJvbGxlciIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLGN0cmxzKXt2YXIgZGF0ZXBpY2tlckN0cmw9Y3RybHNbMF0sbmdNb2RlbEN0cmw9Y3RybHNbMV07bmdNb2RlbEN0cmwmJmRhdGVwaWNrZXJDdHJsLmluaXQobmdNb2RlbEN0cmwpfX19KS5kaXJlY3RpdmUoImRheXBpY2tlciIsWyJkYXRlRmlsdGVyIixmdW5jdGlvbihkYXRlRmlsdGVyKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixyZXBsYWNlOiEwLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RheS5odG1sIixyZXF1aXJlOiJeZGF0ZXBpY2tlciIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLGN0cmwpe2Z1bmN0aW9uIGdldERheXNJbk1vbnRoKHllYXIsbW9udGgpe3JldHVybiAxIT09bW9udGh8fHllYXIlNCE9PTB8fHllYXIlMTAwPT09MCYmeWVhciU0MDAhPT0wP0RBWVNfSU5fTU9OVEhbbW9udGhdOjI5fWZ1bmN0aW9uIGdldERhdGVzKHN0YXJ0RGF0ZSxuKXt2YXIgZGF0ZXM9bmV3IEFycmF5KG4pLGN1cnJlbnQ9bmV3IERhdGUoc3RhcnREYXRlKSxpPTA7Zm9yKGN1cnJlbnQuc2V0SG91cnMoMTIpO24+aTspZGF0ZXNbaSsrXT1uZXcgRGF0ZShjdXJyZW50KSxjdXJyZW50LnNldERhdGUoY3VycmVudC5nZXREYXRlKCkrMSk7cmV0dXJuIGRhdGVzfWZ1bmN0aW9uIGdldElTTzg2MDFXZWVrTnVtYmVyKGRhdGUpe3ZhciBjaGVja0RhdGU9bmV3IERhdGUoZGF0ZSk7Y2hlY2tEYXRlLnNldERhdGUoY2hlY2tEYXRlLmdldERhdGUoKSs0LShjaGVja0RhdGUuZ2V0RGF5KCl8fDcpKTt2YXIgdGltZT1jaGVja0RhdGUuZ2V0VGltZSgpO3JldHVybiBjaGVja0RhdGUuc2V0TW9udGgoMCksY2hlY2tEYXRlLnNldERhdGUoMSksTWF0aC5mbG9vcihNYXRoLnJvdW5kKCh0aW1lLWNoZWNrRGF0ZSkvODY0ZTUpLzcpKzF9c2NvcGUuc2hvd1dlZWtzPWN0cmwuc2hvd1dlZWtzLGN0cmwuc3RlcD17bW9udGhzOjF9LGN0cmwuZWxlbWVudD1lbGVtZW50O3ZhciBEQVlTX0lOX01PTlRIPVszMSwyOCwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV07Y3RybC5fcmVmcmVzaFZpZXc9ZnVuY3Rpb24oKXt2YXIgeWVhcj1jdHJsLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKSxtb250aD1jdHJsLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSxmaXJzdERheU9mTW9udGg9bmV3IERhdGUoeWVhcixtb250aCwxKSxkaWZmZXJlbmNlPWN0cmwuc3RhcnRpbmdEYXktZmlyc3REYXlPZk1vbnRoLmdldERheSgpLG51bURpc3BsYXllZEZyb21QcmV2aW91c01vbnRoPWRpZmZlcmVuY2U+MD83LWRpZmZlcmVuY2U6LWRpZmZlcmVuY2UsZmlyc3REYXRlPW5ldyBEYXRlKGZpcnN0RGF5T2ZNb250aCk7bnVtRGlzcGxheWVkRnJvbVByZXZpb3VzTW9udGg+MCYmZmlyc3REYXRlLnNldERhdGUoLW51bURpc3BsYXllZEZyb21QcmV2aW91c01vbnRoKzEpO2Zvcih2YXIgZGF5cz1nZXREYXRlcyhmaXJzdERhdGUsNDIpLGk9MDs0Mj5pO2krKylkYXlzW2ldPWFuZ3VsYXIuZXh0ZW5kKGN0cmwuY3JlYXRlRGF0ZU9iamVjdChkYXlzW2ldLGN0cmwuZm9ybWF0RGF5KSx7c2Vjb25kYXJ5OmRheXNbaV0uZ2V0TW9udGgoKSE9PW1vbnRoLHVpZDpzY29wZS51bmlxdWVJZCsiLSIraX0pO3Njb3BlLmxhYmVscz1uZXcgQXJyYXkoNyk7Zm9yKHZhciBqPTA7Nz5qO2orKylzY29wZS5sYWJlbHNbal09e2FiYnI6ZGF0ZUZpbHRlcihkYXlzW2pdLmRhdGUsY3RybC5mb3JtYXREYXlIZWFkZXIpLGZ1bGw6ZGF0ZUZpbHRlcihkYXlzW2pdLmRhdGUsIkVFRUUiKX07aWYoc2NvcGUudGl0bGU9ZGF0ZUZpbHRlcihjdHJsLmFjdGl2ZURhdGUsY3RybC5mb3JtYXREYXlUaXRsZSksc2NvcGUucm93cz1jdHJsLnNwbGl0KGRheXMsNyksc2NvcGUuc2hvd1dlZWtzKXtzY29wZS53ZWVrTnVtYmVycz1bXTtmb3IodmFyIHdlZWtOdW1iZXI9Z2V0SVNPODYwMVdlZWtOdW1iZXIoc2NvcGUucm93c1swXVswXS5kYXRlKSxudW1XZWVrcz1zY29wZS5yb3dzLmxlbmd0aDtzY29wZS53ZWVrTnVtYmVycy5wdXNoKHdlZWtOdW1iZXIrKyk8bnVtV2Vla3M7KTt9fSxjdHJsLmNvbXBhcmU9ZnVuY3Rpb24oZGF0ZTEsZGF0ZTIpe3JldHVybiBuZXcgRGF0ZShkYXRlMS5nZXRGdWxsWWVhcigpLGRhdGUxLmdldE1vbnRoKCksZGF0ZTEuZ2V0RGF0ZSgpKS1uZXcgRGF0ZShkYXRlMi5nZXRGdWxsWWVhcigpLGRhdGUyLmdldE1vbnRoKCksZGF0ZTIuZ2V0RGF0ZSgpKX0sY3RybC5oYW5kbGVLZXlEb3duPWZ1bmN0aW9uKGtleSl7dmFyIGRhdGU9Y3RybC5hY3RpdmVEYXRlLmdldERhdGUoKTtpZigibGVmdCI9PT1rZXkpZGF0ZS09MTtlbHNlIGlmKCJ1cCI9PT1rZXkpZGF0ZS09NztlbHNlIGlmKCJyaWdodCI9PT1rZXkpZGF0ZSs9MTtlbHNlIGlmKCJkb3duIj09PWtleSlkYXRlKz03O2Vsc2UgaWYoInBhZ2V1cCI9PT1rZXl8fCJwYWdlZG93biI9PT1rZXkpe3ZhciBtb250aD1jdHJsLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSsoInBhZ2V1cCI9PT1rZXk/LTE6MSk7Y3RybC5hY3RpdmVEYXRlLnNldE1vbnRoKG1vbnRoLDEpLGRhdGU9TWF0aC5taW4oZ2V0RGF5c0luTW9udGgoY3RybC5hY3RpdmVEYXRlLmdldEZ1bGxZZWFyKCksY3RybC5hY3RpdmVEYXRlLmdldE1vbnRoKCkpLGRhdGUpfWVsc2UiaG9tZSI9PT1rZXk/ZGF0ZT0xOiJlbmQiPT09a2V5JiYoZGF0ZT1nZXREYXlzSW5Nb250aChjdHJsLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKSxjdHJsLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSkpO2N0cmwuYWN0aXZlRGF0ZS5zZXREYXRlKGRhdGUpfSxjdHJsLnJlZnJlc2hWaWV3KCl9fX1dKS5kaXJlY3RpdmUoIm1vbnRocGlja2VyIixbImRhdGVGaWx0ZXIiLGZ1bmN0aW9uKGRhdGVGaWx0ZXIpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcGxhY2U6ITAsdGVtcGxhdGVVcmw6InRlbXBsYXRlL2RhdGVwaWNrZXIvbW9udGguaHRtbCIscmVxdWlyZToiXmRhdGVwaWNrZXIiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyxjdHJsKXtjdHJsLnN0ZXA9e3llYXJzOjF9LGN0cmwuZWxlbWVudD1lbGVtZW50LGN0cmwuX3JlZnJlc2hWaWV3PWZ1bmN0aW9uKCl7Zm9yKHZhciBtb250aHM9bmV3IEFycmF5KDEyKSx5ZWFyPWN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpLGk9MDsxMj5pO2krKyltb250aHNbaV09YW5ndWxhci5leHRlbmQoY3RybC5jcmVhdGVEYXRlT2JqZWN0KG5ldyBEYXRlKHllYXIsaSwxKSxjdHJsLmZvcm1hdE1vbnRoKSx7dWlkOnNjb3BlLnVuaXF1ZUlkKyItIitpfSk7c2NvcGUudGl0bGU9ZGF0ZUZpbHRlcihjdHJsLmFjdGl2ZURhdGUsY3RybC5mb3JtYXRNb250aFRpdGxlKSxzY29wZS5yb3dzPWN0cmwuc3BsaXQobW9udGhzLDMpfSxjdHJsLmNvbXBhcmU9ZnVuY3Rpb24oZGF0ZTEsZGF0ZTIpe3JldHVybiBuZXcgRGF0ZShkYXRlMS5nZXRGdWxsWWVhcigpLGRhdGUxLmdldE1vbnRoKCkpLW5ldyBEYXRlKGRhdGUyLmdldEZ1bGxZZWFyKCksZGF0ZTIuZ2V0TW9udGgoKSl9LGN0cmwuaGFuZGxlS2V5RG93bj1mdW5jdGlvbihrZXkpe3ZhciBkYXRlPWN0cmwuYWN0aXZlRGF0ZS5nZXRNb250aCgpO2lmKCJsZWZ0Ij09PWtleSlkYXRlLT0xO2Vsc2UgaWYoInVwIj09PWtleSlkYXRlLT0zO2Vsc2UgaWYoInJpZ2h0Ij09PWtleSlkYXRlKz0xO2Vsc2UgaWYoImRvd24iPT09a2V5KWRhdGUrPTM7ZWxzZSBpZigicGFnZXVwIj09PWtleXx8InBhZ2Vkb3duIj09PWtleSl7dmFyIHllYXI9Y3RybC5hY3RpdmVEYXRlLmdldEZ1bGxZZWFyKCkrKCJwYWdldXAiPT09a2V5Py0xOjEpO2N0cmwuYWN0aXZlRGF0ZS5zZXRGdWxsWWVhcih5ZWFyKX1lbHNlImhvbWUiPT09a2V5P2RhdGU9MDoiZW5kIj09PWtleSYmKGRhdGU9MTEpO2N0cmwuYWN0aXZlRGF0ZS5zZXRNb250aChkYXRlKX0sY3RybC5yZWZyZXNoVmlldygpfX19XSkuZGlyZWN0aXZlKCJ5ZWFycGlja2VyIixbImRhdGVGaWx0ZXIiLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIscmVwbGFjZTohMCx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWwiLHJlcXVpcmU6Il5kYXRlcGlja2VyIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsY3RybCl7ZnVuY3Rpb24gZ2V0U3RhcnRpbmdZZWFyKHllYXIpe3JldHVybiBwYXJzZUludCgoeWVhci0xKS9yYW5nZSwxMCkqcmFuZ2UrMX12YXIgcmFuZ2U9Y3RybC55ZWFyUmFuZ2U7Y3RybC5zdGVwPXt5ZWFyczpyYW5nZX0sY3RybC5lbGVtZW50PWVsZW1lbnQsY3RybC5fcmVmcmVzaFZpZXc9ZnVuY3Rpb24oKXtmb3IodmFyIHllYXJzPW5ldyBBcnJheShyYW5nZSksaT0wLHN0YXJ0PWdldFN0YXJ0aW5nWWVhcihjdHJsLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKSk7cmFuZ2U+aTtpKyspeWVhcnNbaV09YW5ndWxhci5leHRlbmQoY3RybC5jcmVhdGVEYXRlT2JqZWN0KG5ldyBEYXRlKHN0YXJ0K2ksMCwxKSxjdHJsLmZvcm1hdFllYXIpLHt1aWQ6c2NvcGUudW5pcXVlSWQrIi0iK2l9KTtzY29wZS50aXRsZT1beWVhcnNbMF0ubGFiZWwseWVhcnNbcmFuZ2UtMV0ubGFiZWxdLmpvaW4oIiAtICIpLHNjb3BlLnJvd3M9Y3RybC5zcGxpdCh5ZWFycyw1KX0sY3RybC5jb21wYXJlPWZ1bmN0aW9uKGRhdGUxLGRhdGUyKXtyZXR1cm4gZGF0ZTEuZ2V0RnVsbFllYXIoKS1kYXRlMi5nZXRGdWxsWWVhcigpfSxjdHJsLmhhbmRsZUtleURvd249ZnVuY3Rpb24oa2V5KXt2YXIgZGF0ZT1jdHJsLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKTsibGVmdCI9PT1rZXk/ZGF0ZS09MToidXAiPT09a2V5P2RhdGUtPTU6InJpZ2h0Ij09PWtleT9kYXRlKz0xOiJkb3duIj09PWtleT9kYXRlKz01OiJwYWdldXAiPT09a2V5fHwicGFnZWRvd24iPT09a2V5P2RhdGUrPSgicGFnZXVwIj09PWtleT8tMToxKSpjdHJsLnN0ZXAueWVhcnM6ImhvbWUiPT09a2V5P2RhdGU9Z2V0U3RhcnRpbmdZZWFyKGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpKToiZW5kIj09PWtleSYmKGRhdGU9Z2V0U3RhcnRpbmdZZWFyKGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpKStyYW5nZS0xKSxjdHJsLmFjdGl2ZURhdGUuc2V0RnVsbFllYXIoZGF0ZSl9LGN0cmwucmVmcmVzaFZpZXcoKX19fV0pLmNvbnN0YW50KCJkYXRlcGlja2VyUG9wdXBDb25maWciLHtkYXRlcGlja2VyUG9wdXA6Inl5eXktTU0tZGQiLGN1cnJlbnRUZXh0OiJUb2RheSIsY2xlYXJUZXh0OiJDbGVhciIsY2xvc2VUZXh0OiJEb25lIixjbG9zZU9uRGF0ZVNlbGVjdGlvbjohMCxhcHBlbmRUb0JvZHk6ITEsc2hvd0J1dHRvbkJhcjohMH0pLmRpcmVjdGl2ZSgiZGF0ZXBpY2tlclBvcHVwIixbIiRjb21waWxlIiwiJHBhcnNlIiwiJGRvY3VtZW50IiwiJHBvc2l0aW9uIiwiZGF0ZUZpbHRlciIsImRhdGVQYXJzZXIiLCJkYXRlcGlja2VyUG9wdXBDb25maWciLGZ1bmN0aW9uKCRjb21waWxlLCRwYXJzZSwkZG9jdW1lbnQsJHBvc2l0aW9uLGRhdGVGaWx0ZXIsZGF0ZVBhcnNlcixkYXRlcGlja2VyUG9wdXBDb25maWcpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcXVpcmU6Im5nTW9kZWwiLHNjb3BlOntpc09wZW46Ij0/IixjdXJyZW50VGV4dDoiQCIsY2xlYXJUZXh0OiJAIixjbG9zZVRleHQ6IkAiLGRhdGVEaXNhYmxlZDoiJiJ9LGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyxuZ01vZGVsKXtmdW5jdGlvbiBjYW1lbHRvRGFzaChzdHJpbmcpe3JldHVybiBzdHJpbmcucmVwbGFjZSgvKFtBLVpdKS9nLGZ1bmN0aW9uKCQxKXtyZXR1cm4iLSIrJDEudG9Mb3dlckNhc2UoKX0pfWZ1bmN0aW9uIHBhcnNlRGF0ZSh2aWV3VmFsdWUpe2lmKHZpZXdWYWx1ZSl7aWYoYW5ndWxhci5pc0RhdGUodmlld1ZhbHVlKSYmIWlzTmFOKHZpZXdWYWx1ZSkpcmV0dXJuIG5nTW9kZWwuJHNldFZhbGlkaXR5KCJkYXRlIiwhMCksdmlld1ZhbHVlO2lmKGFuZ3VsYXIuaXNTdHJpbmcodmlld1ZhbHVlKSl7dmFyIGRhdGU9ZGF0ZVBhcnNlci5wYXJzZSh2aWV3VmFsdWUsZGF0ZUZvcm1hdCl8fG5ldyBEYXRlKHZpZXdWYWx1ZSk7cmV0dXJuIGlzTmFOKGRhdGUpP3ZvaWQgbmdNb2RlbC4kc2V0VmFsaWRpdHkoImRhdGUiLCExKToobmdNb2RlbC4kc2V0VmFsaWRpdHkoImRhdGUiLCEwKSxkYXRlKX1yZXR1cm4gdm9pZCBuZ01vZGVsLiRzZXRWYWxpZGl0eSgiZGF0ZSIsITEpfXJldHVybiBuZ01vZGVsLiRzZXRWYWxpZGl0eSgiZGF0ZSIsITApLG51bGx9dmFyIGRhdGVGb3JtYXQsY2xvc2VPbkRhdGVTZWxlY3Rpb249YW5ndWxhci5pc0RlZmluZWQoYXR0cnMuY2xvc2VPbkRhdGVTZWxlY3Rpb24pP3Njb3BlLiRwYXJlbnQuJGV2YWwoYXR0cnMuY2xvc2VPbkRhdGVTZWxlY3Rpb24pOmRhdGVwaWNrZXJQb3B1cENvbmZpZy5jbG9zZU9uRGF0ZVNlbGVjdGlvbixhcHBlbmRUb0JvZHk9YW5ndWxhci5pc0RlZmluZWQoYXR0cnMuZGF0ZXBpY2tlckFwcGVuZFRvQm9keSk/c2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5kYXRlcGlja2VyQXBwZW5kVG9Cb2R5KTpkYXRlcGlja2VyUG9wdXBDb25maWcuYXBwZW5kVG9Cb2R5O3Njb3BlLnNob3dCdXR0b25CYXI9YW5ndWxhci5pc0RlZmluZWQoYXR0cnMuc2hvd0J1dHRvbkJhcik/c2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5zaG93QnV0dG9uQmFyKTpkYXRlcGlja2VyUG9wdXBDb25maWcuc2hvd0J1dHRvbkJhcixzY29wZS5nZXRUZXh0PWZ1bmN0aW9uKGtleSl7cmV0dXJuIHNjb3BlW2tleSsiVGV4dCJdfHxkYXRlcGlja2VyUG9wdXBDb25maWdba2V5KyJUZXh0Il19LGF0dHJzLiRvYnNlcnZlKCJkYXRlcGlja2VyUG9wdXAiLGZ1bmN0aW9uKHZhbHVlKXtkYXRlRm9ybWF0PXZhbHVlfHxkYXRlcGlja2VyUG9wdXBDb25maWcuZGF0ZXBpY2tlclBvcHVwLG5nTW9kZWwuJHJlbmRlcigpfSk7dmFyIHBvcHVwRWw9YW5ndWxhci5lbGVtZW50KCI8ZGl2IGRhdGVwaWNrZXItcG9wdXAtd3JhcD48ZGl2IGRhdGVwaWNrZXI+PC9kaXY+PC9kaXY+Iik7cG9wdXBFbC5hdHRyKHsibmctbW9kZWwiOiJkYXRlIiwibmctY2hhbmdlIjoiZGF0ZVNlbGVjdGlvbigpIn0pO3ZhciBkYXRlcGlja2VyRWw9YW5ndWxhci5lbGVtZW50KHBvcHVwRWwuY2hpbGRyZW4oKVswXSk7YXR0cnMuZGF0ZXBpY2tlck9wdGlvbnMmJmFuZ3VsYXIuZm9yRWFjaChzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmRhdGVwaWNrZXJPcHRpb25zKSxmdW5jdGlvbih2YWx1ZSxvcHRpb24pe2RhdGVwaWNrZXJFbC5hdHRyKGNhbWVsdG9EYXNoKG9wdGlvbiksdmFsdWUpfSksc2NvcGUud2F0Y2hEYXRhPXt9LGFuZ3VsYXIuZm9yRWFjaChbIm1pbkRhdGUiLCJtYXhEYXRlIiwiZGF0ZXBpY2tlck1vZGUiXSxmdW5jdGlvbihrZXkpe2lmKGF0dHJzW2tleV0pe3ZhciBnZXRBdHRyaWJ1dGU9JHBhcnNlKGF0dHJzW2tleV0pO2lmKHNjb3BlLiRwYXJlbnQuJHdhdGNoKGdldEF0dHJpYnV0ZSxmdW5jdGlvbih2YWx1ZSl7c2NvcGUud2F0Y2hEYXRhW2tleV09dmFsdWV9KSxkYXRlcGlja2VyRWwuYXR0cihjYW1lbHRvRGFzaChrZXkpLCJ3YXRjaERhdGEuIitrZXkpLCJkYXRlcGlja2VyTW9kZSI9PT1rZXkpe3ZhciBzZXRBdHRyaWJ1dGU9Z2V0QXR0cmlidXRlLmFzc2lnbjtzY29wZS4kd2F0Y2goIndhdGNoRGF0YS4iK2tleSxmdW5jdGlvbih2YWx1ZSxvbGR2YWx1ZSl7dmFsdWUhPT1vbGR2YWx1ZSYmc2V0QXR0cmlidXRlKHNjb3BlLiRwYXJlbnQsdmFsdWUpfSl9fX0pLGF0dHJzLmRhdGVEaXNhYmxlZCYmZGF0ZXBpY2tlckVsLmF0dHIoImRhdGUtZGlzYWJsZWQiLCJkYXRlRGlzYWJsZWQoeyBkYXRlOiBkYXRlLCBtb2RlOiBtb2RlIH0pIiksbmdNb2RlbC4kcGFyc2Vycy51bnNoaWZ0KHBhcnNlRGF0ZSksc2NvcGUuZGF0ZVNlbGVjdGlvbj1mdW5jdGlvbihkdCl7YW5ndWxhci5pc0RlZmluZWQoZHQpJiYoc2NvcGUuZGF0ZT1kdCksbmdNb2RlbC4kc2V0Vmlld1ZhbHVlKHNjb3BlLmRhdGUpLG5nTW9kZWwuJHJlbmRlcigpLGNsb3NlT25EYXRlU2VsZWN0aW9uJiYoc2NvcGUuaXNPcGVuPSExLGVsZW1lbnRbMF0uZm9jdXMoKSl9LGVsZW1lbnQuYmluZCgiaW5wdXQgY2hhbmdlIGtleXVwIixmdW5jdGlvbigpe3Njb3BlLiRhcHBseShmdW5jdGlvbigpe3Njb3BlLmRhdGU9bmdNb2RlbC4kbW9kZWxWYWx1ZX0pfSksbmdNb2RlbC4kcmVuZGVyPWZ1bmN0aW9uKCl7dmFyIGRhdGU9bmdNb2RlbC4kdmlld1ZhbHVlP2RhdGVGaWx0ZXIobmdNb2RlbC4kdmlld1ZhbHVlLGRhdGVGb3JtYXQpOiIiO2VsZW1lbnQudmFsKGRhdGUpLHNjb3BlLmRhdGU9cGFyc2VEYXRlKG5nTW9kZWwuJG1vZGVsVmFsdWUpfTt2YXIgZG9jdW1lbnRDbGlja0JpbmQ9ZnVuY3Rpb24oZXZlbnQpe3Njb3BlLmlzT3BlbiYmZXZlbnQudGFyZ2V0IT09ZWxlbWVudFswXSYmc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7c2NvcGUuaXNPcGVuPSExfSl9LGtleWRvd249ZnVuY3Rpb24oZXZ0KXtzY29wZS5rZXlkb3duKGV2dCl9O2VsZW1lbnQuYmluZCgia2V5ZG93biIsa2V5ZG93biksc2NvcGUua2V5ZG93bj1mdW5jdGlvbihldnQpezI3PT09ZXZ0LndoaWNoPyhldnQucHJldmVudERlZmF1bHQoKSxldnQuc3RvcFByb3BhZ2F0aW9uKCksc2NvcGUuY2xvc2UoKSk6NDAhPT1ldnQud2hpY2h8fHNjb3BlLmlzT3Blbnx8KHNjb3BlLmlzT3Blbj0hMCl9LHNjb3BlLiR3YXRjaCgiaXNPcGVuIixmdW5jdGlvbih2YWx1ZSl7dmFsdWU/KHNjb3BlLiRicm9hZGNhc3QoImRhdGVwaWNrZXIuZm9jdXMiKSxzY29wZS5wb3NpdGlvbj1hcHBlbmRUb0JvZHk/JHBvc2l0aW9uLm9mZnNldChlbGVtZW50KTokcG9zaXRpb24ucG9zaXRpb24oZWxlbWVudCksc2NvcGUucG9zaXRpb24udG9wPXNjb3BlLnBvc2l0aW9uLnRvcCtlbGVtZW50LnByb3AoIm9mZnNldEhlaWdodCIpLCRkb2N1bWVudC5iaW5kKCJjbGljayIsZG9jdW1lbnRDbGlja0JpbmQpKTokZG9jdW1lbnQudW5iaW5kKCJjbGljayIsZG9jdW1lbnRDbGlja0JpbmQpfSksc2NvcGUuc2VsZWN0PWZ1bmN0aW9uKGRhdGUpe2lmKCJ0b2RheSI9PT1kYXRlKXt2YXIgdG9kYXk9bmV3IERhdGU7YW5ndWxhci5pc0RhdGUobmdNb2RlbC4kbW9kZWxWYWx1ZSk/KGRhdGU9bmV3IERhdGUobmdNb2RlbC4kbW9kZWxWYWx1ZSksZGF0ZS5zZXRGdWxsWWVhcih0b2RheS5nZXRGdWxsWWVhcigpLHRvZGF5LmdldE1vbnRoKCksdG9kYXkuZ2V0RGF0ZSgpKSk6ZGF0ZT1uZXcgRGF0ZSh0b2RheS5zZXRIb3VycygwLDAsMCwwKSl9c2NvcGUuZGF0ZVNlbGVjdGlvbihkYXRlKX0sc2NvcGUuY2xvc2U9ZnVuY3Rpb24oKXtzY29wZS5pc09wZW49ITEsZWxlbWVudFswXS5mb2N1cygpfTt2YXIgJHBvcHVwPSRjb21waWxlKHBvcHVwRWwpKHNjb3BlKTtwb3B1cEVsLnJlbW92ZSgpLGFwcGVuZFRvQm9keT8kZG9jdW1lbnQuZmluZCgiYm9keSIpLmFwcGVuZCgkcG9wdXApOmVsZW1lbnQuYWZ0ZXIoJHBvcHVwKSxzY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpeyRwb3B1cC5yZW1vdmUoKSxlbGVtZW50LnVuYmluZCgia2V5ZG93biIsa2V5ZG93biksJGRvY3VtZW50LnVuYmluZCgiY2xpY2siLGRvY3VtZW50Q2xpY2tCaW5kKX0pfX19XSkuZGlyZWN0aXZlKCJkYXRlcGlja2VyUG9wdXBXcmFwIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcGxhY2U6ITAsdHJhbnNjbHVkZTohMCx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvZGF0ZXBpY2tlci9wb3B1cC5odG1sIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQpe2VsZW1lbnQuYmluZCgiY2xpY2siLGZ1bmN0aW9uKGV2ZW50KXtldmVudC5wcmV2ZW50RGVmYXVsdCgpLGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpfSl9fX0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAuZHJvcGRvd24iLFtdKS5jb25zdGFudCgiZHJvcGRvd25Db25maWciLHtvcGVuQ2xhc3M6Im9wZW4ifSkuc2VydmljZSgiZHJvcGRvd25TZXJ2aWNlIixbIiRkb2N1bWVudCIsZnVuY3Rpb24oJGRvY3VtZW50KXt2YXIgb3BlblNjb3BlPW51bGw7dGhpcy5vcGVuPWZ1bmN0aW9uKGRyb3Bkb3duU2NvcGUpe29wZW5TY29wZXx8KCRkb2N1bWVudC5iaW5kKCJjbGljayIsY2xvc2VEcm9wZG93biksJGRvY3VtZW50LmJpbmQoImtleWRvd24iLGVzY2FwZUtleUJpbmQpKSxvcGVuU2NvcGUmJm9wZW5TY29wZSE9PWRyb3Bkb3duU2NvcGUmJihvcGVuU2NvcGUuaXNPcGVuPSExKSxvcGVuU2NvcGU9ZHJvcGRvd25TY29wZX0sdGhpcy5jbG9zZT1mdW5jdGlvbihkcm9wZG93blNjb3BlKXtvcGVuU2NvcGU9PT1kcm9wZG93blNjb3BlJiYob3BlblNjb3BlPW51bGwsJGRvY3VtZW50LnVuYmluZCgiY2xpY2siLGNsb3NlRHJvcGRvd24pLCRkb2N1bWVudC51bmJpbmQoImtleWRvd24iLGVzY2FwZUtleUJpbmQpKX07dmFyIGNsb3NlRHJvcGRvd249ZnVuY3Rpb24oZXZ0KXt2YXIgdG9nZ2xlRWxlbWVudD1vcGVuU2NvcGUuZ2V0VG9nZ2xlRWxlbWVudCgpO2V2dCYmdG9nZ2xlRWxlbWVudCYmdG9nZ2xlRWxlbWVudFswXS5jb250YWlucyhldnQudGFyZ2V0KXx8b3BlblNjb3BlLiRhcHBseShmdW5jdGlvbigpe29wZW5TY29wZS5pc09wZW49ITF9KX0sZXNjYXBlS2V5QmluZD1mdW5jdGlvbihldnQpezI3PT09ZXZ0LndoaWNoJiYob3BlblNjb3BlLmZvY3VzVG9nZ2xlRWxlbWVudCgpLGNsb3NlRHJvcGRvd24oKSl9fV0pLmNvbnRyb2xsZXIoIkRyb3Bkb3duQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkYXR0cnMiLCIkcGFyc2UiLCJkcm9wZG93bkNvbmZpZyIsImRyb3Bkb3duU2VydmljZSIsIiRhbmltYXRlIixmdW5jdGlvbigkc2NvcGUsJGF0dHJzLCRwYXJzZSxkcm9wZG93bkNvbmZpZyxkcm9wZG93blNlcnZpY2UsJGFuaW1hdGUpe3ZhciBnZXRJc09wZW4sc2VsZj10aGlzLHNjb3BlPSRzY29wZS4kbmV3KCksb3BlbkNsYXNzPWRyb3Bkb3duQ29uZmlnLm9wZW5DbGFzcyxzZXRJc09wZW49YW5ndWxhci5ub29wLHRvZ2dsZUludm9rZXI9JGF0dHJzLm9uVG9nZ2xlPyRwYXJzZSgkYXR0cnMub25Ub2dnbGUpOmFuZ3VsYXIubm9vcDt0aGlzLmluaXQ9ZnVuY3Rpb24oZWxlbWVudCl7c2VsZi4kZWxlbWVudD1lbGVtZW50LCRhdHRycy5pc09wZW4mJihnZXRJc09wZW49JHBhcnNlKCRhdHRycy5pc09wZW4pLHNldElzT3Blbj1nZXRJc09wZW4uYXNzaWduLCRzY29wZS4kd2F0Y2goZ2V0SXNPcGVuLGZ1bmN0aW9uKHZhbHVlKXtzY29wZS5pc09wZW49ISF2YWx1ZX0pKX0sdGhpcy50b2dnbGU9ZnVuY3Rpb24ob3Blbil7cmV0dXJuIHNjb3BlLmlzT3Blbj1hcmd1bWVudHMubGVuZ3RoPyEhb3Blbjohc2NvcGUuaXNPcGVufSx0aGlzLmlzT3Blbj1mdW5jdGlvbigpe3JldHVybiBzY29wZS5pc09wZW59LHNjb3BlLmdldFRvZ2dsZUVsZW1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gc2VsZi50b2dnbGVFbGVtZW50fSxzY29wZS5mb2N1c1RvZ2dsZUVsZW1lbnQ9ZnVuY3Rpb24oKXtzZWxmLnRvZ2dsZUVsZW1lbnQmJnNlbGYudG9nZ2xlRWxlbWVudFswXS5mb2N1cygpfSxzY29wZS4kd2F0Y2goImlzT3BlbiIsZnVuY3Rpb24oaXNPcGVuLHdhc09wZW4peyRhbmltYXRlW2lzT3Blbj8iYWRkQ2xhc3MiOiJyZW1vdmVDbGFzcyJdKHNlbGYuJGVsZW1lbnQsb3BlbkNsYXNzKSxpc09wZW4/KHNjb3BlLmZvY3VzVG9nZ2xlRWxlbWVudCgpLGRyb3Bkb3duU2VydmljZS5vcGVuKHNjb3BlKSk6ZHJvcGRvd25TZXJ2aWNlLmNsb3NlKHNjb3BlKSxzZXRJc09wZW4oJHNjb3BlLGlzT3BlbiksYW5ndWxhci5pc0RlZmluZWQoaXNPcGVuKSYmaXNPcGVuIT09d2FzT3BlbiYmdG9nZ2xlSW52b2tlcigkc2NvcGUse29wZW46ISFpc09wZW59KX0pLCRzY29wZS4kb24oIiRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3MiLGZ1bmN0aW9uKCl7c2NvcGUuaXNPcGVuPSExfSksJHNjb3BlLiRvbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7c2NvcGUuJGRlc3Ryb3koKX0pfV0pLmRpcmVjdGl2ZSgiZHJvcGRvd24iLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJDQSIsY29udHJvbGxlcjoiRHJvcGRvd25Db250cm9sbGVyIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsZHJvcGRvd25DdHJsKXtkcm9wZG93bkN0cmwuaW5pdChlbGVtZW50KX19fSkuZGlyZWN0aXZlKCJkcm9wZG93blRvZ2dsZSIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkNBIixyZXF1aXJlOiI/XmRyb3Bkb3duIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsZHJvcGRvd25DdHJsKXtpZihkcm9wZG93bkN0cmwpe2Ryb3Bkb3duQ3RybC50b2dnbGVFbGVtZW50PWVsZW1lbnQ7dmFyIHRvZ2dsZURyb3Bkb3duPWZ1bmN0aW9uKGV2ZW50KXtldmVudC5wcmV2ZW50RGVmYXVsdCgpLGVsZW1lbnQuaGFzQ2xhc3MoImRpc2FibGVkIil8fGF0dHJzLmRpc2FibGVkfHxzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtkcm9wZG93bkN0cmwudG9nZ2xlKCl9KX07ZWxlbWVudC5iaW5kKCJjbGljayIsdG9nZ2xlRHJvcGRvd24pLGVsZW1lbnQuYXR0cih7ImFyaWEtaGFzcG9wdXAiOiEwLCJhcmlhLWV4cGFuZGVkIjohMX0pLHNjb3BlLiR3YXRjaChkcm9wZG93bkN0cmwuaXNPcGVuLGZ1bmN0aW9uKGlzT3Blbil7ZWxlbWVudC5hdHRyKCJhcmlhLWV4cGFuZGVkIiwhIWlzT3Blbil9KSxzY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpe2VsZW1lbnQudW5iaW5kKCJjbGljayIsdG9nZ2xlRHJvcGRvd24pfSl9fX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLm1vZGFsIixbInVpLmJvb3RzdHJhcC50cmFuc2l0aW9uIl0pLmZhY3RvcnkoIiQkc3RhY2tlZE1hcCIsZnVuY3Rpb24oKXtyZXR1cm57Y3JlYXRlTmV3OmZ1bmN0aW9uKCl7dmFyIHN0YWNrPVtdO3JldHVybnthZGQ6ZnVuY3Rpb24oa2V5LHZhbHVlKXtzdGFjay5wdXNoKHtrZXk6a2V5LHZhbHVlOnZhbHVlfSl9LGdldDpmdW5jdGlvbihrZXkpe2Zvcih2YXIgaT0wO2k8c3RhY2subGVuZ3RoO2krKylpZihrZXk9PXN0YWNrW2ldLmtleSlyZXR1cm4gc3RhY2tbaV19LGtleXM6ZnVuY3Rpb24oKXtmb3IodmFyIGtleXM9W10saT0wO2k8c3RhY2subGVuZ3RoO2krKylrZXlzLnB1c2goc3RhY2tbaV0ua2V5KTtyZXR1cm4ga2V5c30sdG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHN0YWNrW3N0YWNrLmxlbmd0aC0xXX0scmVtb3ZlOmZ1bmN0aW9uKGtleSl7Zm9yKHZhciBpZHg9LTEsaT0wO2k8c3RhY2subGVuZ3RoO2krKylpZihrZXk9PXN0YWNrW2ldLmtleSl7aWR4PWk7YnJlYWt9cmV0dXJuIHN0YWNrLnNwbGljZShpZHgsMSlbMF19LHJlbW92ZVRvcDpmdW5jdGlvbigpe3JldHVybiBzdGFjay5zcGxpY2Uoc3RhY2subGVuZ3RoLTEsMSlbMF19LGxlbmd0aDpmdW5jdGlvbigpe3JldHVybiBzdGFjay5sZW5ndGh9fX19fSkuZGlyZWN0aXZlKCJtb2RhbEJhY2tkcm9wIixbIiR0aW1lb3V0IixmdW5jdGlvbigkdGltZW91dCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIscmVwbGFjZTohMCx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvbW9kYWwvYmFja2Ryb3AuaHRtbCIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzKXtzY29wZS5iYWNrZHJvcENsYXNzPWF0dHJzLmJhY2tkcm9wQ2xhc3N8fCIiLHNjb3BlLmFuaW1hdGU9ITEsJHRpbWVvdXQoZnVuY3Rpb24oKXtzY29wZS5hbmltYXRlPSEwfSl9fX1dKS5kaXJlY3RpdmUoIm1vZGFsV2luZG93IixbIiRtb2RhbFN0YWNrIiwiJHRpbWVvdXQiLGZ1bmN0aW9uKCRtb2RhbFN0YWNrLCR0aW1lb3V0KXtyZXR1cm57cmVzdHJpY3Q6IkVBIixzY29wZTp7aW5kZXg6IkAiLGFuaW1hdGU6Ij0ifSxyZXBsYWNlOiEwLHRyYW5zY2x1ZGU6ITAsdGVtcGxhdGVVcmw6ZnVuY3Rpb24odEVsZW1lbnQsdEF0dHJzKXtyZXR1cm4gdEF0dHJzLnRlbXBsYXRlVXJsfHwidGVtcGxhdGUvbW9kYWwvd2luZG93Lmh0bWwifSxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMpe2VsZW1lbnQuYWRkQ2xhc3MoYXR0cnMud2luZG93Q2xhc3N8fCIiKSxzY29wZS5zaXplPWF0dHJzLnNpemUsJHRpbWVvdXQoZnVuY3Rpb24oKXtzY29wZS5hbmltYXRlPSEwLGVsZW1lbnRbMF0ucXVlcnlTZWxlY3RvckFsbCgiW2F1dG9mb2N1c10iKS5sZW5ndGh8fGVsZW1lbnRbMF0uZm9jdXMoKX0pLHNjb3BlLmNsb3NlPWZ1bmN0aW9uKGV2dCl7dmFyIG1vZGFsPSRtb2RhbFN0YWNrLmdldFRvcCgpO21vZGFsJiZtb2RhbC52YWx1ZS5iYWNrZHJvcCYmInN0YXRpYyIhPW1vZGFsLnZhbHVlLmJhY2tkcm9wJiZldnQudGFyZ2V0PT09ZXZ0LmN1cnJlbnRUYXJnZXQmJihldnQucHJldmVudERlZmF1bHQoKSxldnQuc3RvcFByb3BhZ2F0aW9uKCksJG1vZGFsU3RhY2suZGlzbWlzcyhtb2RhbC5rZXksImJhY2tkcm9wIGNsaWNrIikpfX19fV0pLmRpcmVjdGl2ZSgibW9kYWxUcmFuc2NsdWRlIixmdW5jdGlvbigpe3JldHVybntsaW5rOmZ1bmN0aW9uKCRzY29wZSwkZWxlbWVudCwkYXR0cnMsY29udHJvbGxlciwkdHJhbnNjbHVkZSl7JHRyYW5zY2x1ZGUoJHNjb3BlLiRwYXJlbnQsZnVuY3Rpb24oY2xvbmUpeyRlbGVtZW50LmVtcHR5KCksJGVsZW1lbnQuYXBwZW5kKGNsb25lKX0pfX19KS5mYWN0b3J5KCIkbW9kYWxTdGFjayIsWyIkdHJhbnNpdGlvbiIsIiR0aW1lb3V0IiwiJGRvY3VtZW50IiwiJGNvbXBpbGUiLCIkcm9vdFNjb3BlIiwiJCRzdGFja2VkTWFwIixmdW5jdGlvbigkdHJhbnNpdGlvbiwkdGltZW91dCwkZG9jdW1lbnQsJGNvbXBpbGUsJHJvb3RTY29wZSwkJHN0YWNrZWRNYXApe2Z1bmN0aW9uIGJhY2tkcm9wSW5kZXgoKXtmb3IodmFyIHRvcEJhY2tkcm9wSW5kZXg9LTEsb3BlbmVkPW9wZW5lZFdpbmRvd3Mua2V5cygpLGk9MDtpPG9wZW5lZC5sZW5ndGg7aSsrKW9wZW5lZFdpbmRvd3MuZ2V0KG9wZW5lZFtpXSkudmFsdWUuYmFja2Ryb3AmJih0b3BCYWNrZHJvcEluZGV4PWkpO3JldHVybiB0b3BCYWNrZHJvcEluZGV4fWZ1bmN0aW9uIHJlbW92ZU1vZGFsV2luZG93KG1vZGFsSW5zdGFuY2Upe3ZhciBib2R5PSRkb2N1bWVudC5maW5kKCJib2R5IikuZXEoMCksbW9kYWxXaW5kb3c9b3BlbmVkV2luZG93cy5nZXQobW9kYWxJbnN0YW5jZSkudmFsdWU7b3BlbmVkV2luZG93cy5yZW1vdmUobW9kYWxJbnN0YW5jZSkscmVtb3ZlQWZ0ZXJBbmltYXRlKG1vZGFsV2luZG93Lm1vZGFsRG9tRWwsbW9kYWxXaW5kb3cubW9kYWxTY29wZSwzMDAsZnVuY3Rpb24oKXttb2RhbFdpbmRvdy5tb2RhbFNjb3BlLiRkZXN0cm95KCksYm9keS50b2dnbGVDbGFzcyhPUEVORURfTU9EQUxfQ0xBU1Msb3BlbmVkV2luZG93cy5sZW5ndGgoKT4wKSxjaGVja1JlbW92ZUJhY2tkcm9wKCl9KX1mdW5jdGlvbiBjaGVja1JlbW92ZUJhY2tkcm9wKCl7aWYoYmFja2Ryb3BEb21FbCYmLTE9PWJhY2tkcm9wSW5kZXgoKSl7dmFyIGJhY2tkcm9wU2NvcGVSZWY9YmFja2Ryb3BTY29wZTtyZW1vdmVBZnRlckFuaW1hdGUoYmFja2Ryb3BEb21FbCxiYWNrZHJvcFNjb3BlLDE1MCxmdW5jdGlvbigpe2JhY2tkcm9wU2NvcGVSZWYuJGRlc3Ryb3koKSxiYWNrZHJvcFNjb3BlUmVmPW51bGx9KSxiYWNrZHJvcERvbUVsPXZvaWQgMCxiYWNrZHJvcFNjb3BlPXZvaWQgMH19ZnVuY3Rpb24gcmVtb3ZlQWZ0ZXJBbmltYXRlKGRvbUVsLHNjb3BlLGVtdWxhdGVUaW1lLGRvbmUpe2Z1bmN0aW9uIGFmdGVyQW5pbWF0aW5nKCl7YWZ0ZXJBbmltYXRpbmcuZG9uZXx8KGFmdGVyQW5pbWF0aW5nLmRvbmU9ITAsZG9tRWwucmVtb3ZlKCksZG9uZSYmZG9uZSgpKX1zY29wZS5hbmltYXRlPSExO3ZhciB0cmFuc2l0aW9uRW5kRXZlbnROYW1lPSR0cmFuc2l0aW9uLnRyYW5zaXRpb25FbmRFdmVudE5hbWU7aWYodHJhbnNpdGlvbkVuZEV2ZW50TmFtZSl7dmFyIHRpbWVvdXQ9JHRpbWVvdXQoYWZ0ZXJBbmltYXRpbmcsZW11bGF0ZVRpbWUpO2RvbUVsLmJpbmQodHJhbnNpdGlvbkVuZEV2ZW50TmFtZSxmdW5jdGlvbigpeyR0aW1lb3V0LmNhbmNlbCh0aW1lb3V0KSxhZnRlckFuaW1hdGluZygpLHNjb3BlLiRhcHBseSgpfSl9ZWxzZSAkdGltZW91dChhZnRlckFuaW1hdGluZyl9dmFyIGJhY2tkcm9wRG9tRWwsYmFja2Ryb3BTY29wZSxPUEVORURfTU9EQUxfQ0xBU1M9Im1vZGFsLW9wZW4iLG9wZW5lZFdpbmRvd3M9JCRzdGFja2VkTWFwLmNyZWF0ZU5ldygpLCRtb2RhbFN0YWNrPXt9O3JldHVybiAkcm9vdFNjb3BlLiR3YXRjaChiYWNrZHJvcEluZGV4LGZ1bmN0aW9uKG5ld0JhY2tkcm9wSW5kZXgpe2JhY2tkcm9wU2NvcGUmJihiYWNrZHJvcFNjb3BlLmluZGV4PW5ld0JhY2tkcm9wSW5kZXgpfSksJGRvY3VtZW50LmJpbmQoImtleWRvd24iLGZ1bmN0aW9uKGV2dCl7dmFyIG1vZGFsOzI3PT09ZXZ0LndoaWNoJiYobW9kYWw9b3BlbmVkV2luZG93cy50b3AoKSxtb2RhbCYmbW9kYWwudmFsdWUua2V5Ym9hcmQmJihldnQucHJldmVudERlZmF1bHQoKSwkcm9vdFNjb3BlLiRhcHBseShmdW5jdGlvbigpeyRtb2RhbFN0YWNrLmRpc21pc3MobW9kYWwua2V5LCJlc2NhcGUga2V5IHByZXNzIil9KSkpfSksJG1vZGFsU3RhY2sub3Blbj1mdW5jdGlvbihtb2RhbEluc3RhbmNlLG1vZGFsKXtvcGVuZWRXaW5kb3dzLmFkZChtb2RhbEluc3RhbmNlLHtkZWZlcnJlZDptb2RhbC5kZWZlcnJlZCxtb2RhbFNjb3BlOm1vZGFsLnNjb3BlLGJhY2tkcm9wOm1vZGFsLmJhY2tkcm9wLGtleWJvYXJkOm1vZGFsLmtleWJvYXJkfSk7dmFyIGJvZHk9JGRvY3VtZW50LmZpbmQoImJvZHkiKS5lcSgwKSxjdXJyQmFja2Ryb3BJbmRleD1iYWNrZHJvcEluZGV4KCk7aWYoY3VyckJhY2tkcm9wSW5kZXg+PTAmJiFiYWNrZHJvcERvbUVsKXtiYWNrZHJvcFNjb3BlPSRyb290U2NvcGUuJG5ldyghMCksYmFja2Ryb3BTY29wZS5pbmRleD1jdXJyQmFja2Ryb3BJbmRleDt2YXIgYW5ndWxhckJhY2tncm91bmREb21FbD1hbmd1bGFyLmVsZW1lbnQoIjxkaXYgbW9kYWwtYmFja2Ryb3A+PC9kaXY+Iik7YW5ndWxhckJhY2tncm91bmREb21FbC5hdHRyKCJiYWNrZHJvcC1jbGFzcyIsbW9kYWwuYmFja2Ryb3BDbGFzcyksYmFja2Ryb3BEb21FbD0kY29tcGlsZShhbmd1bGFyQmFja2dyb3VuZERvbUVsKShiYWNrZHJvcFNjb3BlKSxib2R5LmFwcGVuZChiYWNrZHJvcERvbUVsKX12YXIgYW5ndWxhckRvbUVsPWFuZ3VsYXIuZWxlbWVudCgiPGRpdiBtb2RhbC13aW5kb3c+PC9kaXY+Iik7YW5ndWxhckRvbUVsLmF0dHIoeyJ0ZW1wbGF0ZS11cmwiOm1vZGFsLndpbmRvd1RlbXBsYXRlVXJsLCJ3aW5kb3ctY2xhc3MiOm1vZGFsLndpbmRvd0NsYXNzLHNpemU6bW9kYWwuc2l6ZSxpbmRleDpvcGVuZWRXaW5kb3dzLmxlbmd0aCgpLTEsYW5pbWF0ZToiYW5pbWF0ZSJ9KS5odG1sKG1vZGFsLmNvbnRlbnQpO3ZhciBtb2RhbERvbUVsPSRjb21waWxlKGFuZ3VsYXJEb21FbCkobW9kYWwuc2NvcGUpO29wZW5lZFdpbmRvd3MudG9wKCkudmFsdWUubW9kYWxEb21FbD1tb2RhbERvbUVsLGJvZHkuYXBwZW5kKG1vZGFsRG9tRWwpLGJvZHkuYWRkQ2xhc3MoT1BFTkVEX01PREFMX0NMQVNTKX0sJG1vZGFsU3RhY2suY2xvc2U9ZnVuY3Rpb24obW9kYWxJbnN0YW5jZSxyZXN1bHQpe3ZhciBtb2RhbFdpbmRvdz1vcGVuZWRXaW5kb3dzLmdldChtb2RhbEluc3RhbmNlKTttb2RhbFdpbmRvdyYmKG1vZGFsV2luZG93LnZhbHVlLmRlZmVycmVkLnJlc29sdmUocmVzdWx0KSxyZW1vdmVNb2RhbFdpbmRvdyhtb2RhbEluc3RhbmNlKSl9LCRtb2RhbFN0YWNrLmRpc21pc3M9ZnVuY3Rpb24obW9kYWxJbnN0YW5jZSxyZWFzb24pe3ZhciBtb2RhbFdpbmRvdz1vcGVuZWRXaW5kb3dzLmdldChtb2RhbEluc3RhbmNlKTttb2RhbFdpbmRvdyYmKG1vZGFsV2luZG93LnZhbHVlLmRlZmVycmVkLnJlamVjdChyZWFzb24pLHJlbW92ZU1vZGFsV2luZG93KG1vZGFsSW5zdGFuY2UpKX0sJG1vZGFsU3RhY2suZGlzbWlzc0FsbD1mdW5jdGlvbihyZWFzb24pe2Zvcih2YXIgdG9wTW9kYWw9dGhpcy5nZXRUb3AoKTt0b3BNb2RhbDspdGhpcy5kaXNtaXNzKHRvcE1vZGFsLmtleSxyZWFzb24pLHRvcE1vZGFsPXRoaXMuZ2V0VG9wKCl9LCRtb2RhbFN0YWNrLmdldFRvcD1mdW5jdGlvbigpe3JldHVybiBvcGVuZWRXaW5kb3dzLnRvcCgpfSwkbW9kYWxTdGFja31dKS5wcm92aWRlcigiJG1vZGFsIixmdW5jdGlvbigpe3ZhciAkbW9kYWxQcm92aWRlcj17b3B0aW9uczp7YmFja2Ryb3A6ITAsa2V5Ym9hcmQ6ITB9LCRnZXQ6WyIkaW5qZWN0b3IiLCIkcm9vdFNjb3BlIiwiJHEiLCIkaHR0cCIsIiR0ZW1wbGF0ZUNhY2hlIiwiJGNvbnRyb2xsZXIiLCIkbW9kYWxTdGFjayIsZnVuY3Rpb24oJGluamVjdG9yLCRyb290U2NvcGUsJHEsJGh0dHAsJHRlbXBsYXRlQ2FjaGUsJGNvbnRyb2xsZXIsJG1vZGFsU3RhY2spe2Z1bmN0aW9uIGdldFRlbXBsYXRlUHJvbWlzZShvcHRpb25zKXtyZXR1cm4gb3B0aW9ucy50ZW1wbGF0ZT8kcS53aGVuKG9wdGlvbnMudGVtcGxhdGUpOiRodHRwLmdldChhbmd1bGFyLmlzRnVuY3Rpb24ob3B0aW9ucy50ZW1wbGF0ZVVybCk/b3B0aW9ucy50ZW1wbGF0ZVVybCgpOm9wdGlvbnMudGVtcGxhdGVVcmwse2NhY2hlOiR0ZW1wbGF0ZUNhY2hlfSkudGhlbihmdW5jdGlvbihyZXN1bHQpe3JldHVybiByZXN1bHQuZGF0YX0pfWZ1bmN0aW9uIGdldFJlc29sdmVQcm9taXNlcyhyZXNvbHZlcyl7dmFyIHByb21pc2VzQXJyPVtdO3JldHVybiBhbmd1bGFyLmZvckVhY2gocmVzb2x2ZXMsZnVuY3Rpb24odmFsdWUpeyhhbmd1bGFyLmlzRnVuY3Rpb24odmFsdWUpfHxhbmd1bGFyLmlzQXJyYXkodmFsdWUpKSYmcHJvbWlzZXNBcnIucHVzaCgkcS53aGVuKCRpbmplY3Rvci5pbnZva2UodmFsdWUpKSl9KSxwcm9taXNlc0Fycn12YXIgJG1vZGFsPXt9O3JldHVybiAkbW9kYWwub3Blbj1mdW5jdGlvbihtb2RhbE9wdGlvbnMpe3ZhciBtb2RhbFJlc3VsdERlZmVycmVkPSRxLmRlZmVyKCksbW9kYWxPcGVuZWREZWZlcnJlZD0kcS5kZWZlcigpLG1vZGFsSW5zdGFuY2U9e3Jlc3VsdDptb2RhbFJlc3VsdERlZmVycmVkLnByb21pc2Usb3BlbmVkOm1vZGFsT3BlbmVkRGVmZXJyZWQucHJvbWlzZSxjbG9zZTpmdW5jdGlvbihyZXN1bHQpeyRtb2RhbFN0YWNrLmNsb3NlKG1vZGFsSW5zdGFuY2UscmVzdWx0KX0sZGlzbWlzczpmdW5jdGlvbihyZWFzb24peyRtb2RhbFN0YWNrLmRpc21pc3MobW9kYWxJbnN0YW5jZSxyZWFzb24pfX07aWYobW9kYWxPcHRpb25zPWFuZ3VsYXIuZXh0ZW5kKHt9LCRtb2RhbFByb3ZpZGVyLm9wdGlvbnMsbW9kYWxPcHRpb25zKSxtb2RhbE9wdGlvbnMucmVzb2x2ZT1tb2RhbE9wdGlvbnMucmVzb2x2ZXx8e30sIW1vZGFsT3B0aW9ucy50ZW1wbGF0ZSYmIW1vZGFsT3B0aW9ucy50ZW1wbGF0ZVVybCl0aHJvdyBuZXcgRXJyb3IoIk9uZSBvZiB0ZW1wbGF0ZSBvciB0ZW1wbGF0ZVVybCBvcHRpb25zIGlzIHJlcXVpcmVkLiIpO3ZhciB0ZW1wbGF0ZUFuZFJlc29sdmVQcm9taXNlPSRxLmFsbChbZ2V0VGVtcGxhdGVQcm9taXNlKG1vZGFsT3B0aW9ucyldLmNvbmNhdChnZXRSZXNvbHZlUHJvbWlzZXMobW9kYWxPcHRpb25zLnJlc29sdmUpKSk7cmV0dXJuIHRlbXBsYXRlQW5kUmVzb2x2ZVByb21pc2UudGhlbihmdW5jdGlvbih0cGxBbmRWYXJzKXt2YXIgbW9kYWxTY29wZT0obW9kYWxPcHRpb25zLnNjb3BlfHwkcm9vdFNjb3BlKS4kbmV3KCk7bW9kYWxTY29wZS4kY2xvc2U9bW9kYWxJbnN0YW5jZS5jbG9zZSxtb2RhbFNjb3BlLiRkaXNtaXNzPW1vZGFsSW5zdGFuY2UuZGlzbWlzczt2YXIgY3RybEluc3RhbmNlLGN0cmxMb2NhbHM9e30scmVzb2x2ZUl0ZXI9MTttb2RhbE9wdGlvbnMuY29udHJvbGxlciYmKGN0cmxMb2NhbHMuJHNjb3BlPW1vZGFsU2NvcGUsY3RybExvY2Fscy4kbW9kYWxJbnN0YW5jZT1tb2RhbEluc3RhbmNlLGFuZ3VsYXIuZm9yRWFjaChtb2RhbE9wdGlvbnMucmVzb2x2ZSxmdW5jdGlvbih2YWx1ZSxrZXkpe2N0cmxMb2NhbHNba2V5XT10cGxBbmRWYXJzW3Jlc29sdmVJdGVyKytdfSksY3RybEluc3RhbmNlPSRjb250cm9sbGVyKG1vZGFsT3B0aW9ucy5jb250cm9sbGVyLGN0cmxMb2NhbHMpLG1vZGFsT3B0aW9ucy5jb250cm9sbGVyQXMmJihtb2RhbFNjb3BlW21vZGFsT3B0aW9ucy5jb250cm9sbGVyQXNdPWN0cmxJbnN0YW5jZSkpLCRtb2RhbFN0YWNrLm9wZW4obW9kYWxJbnN0YW5jZSx7c2NvcGU6bW9kYWxTY29wZSxkZWZlcnJlZDptb2RhbFJlc3VsdERlZmVycmVkLGNvbnRlbnQ6dHBsQW5kVmFyc1swXSxiYWNrZHJvcDptb2RhbE9wdGlvbnMuYmFja2Ryb3Asa2V5Ym9hcmQ6bW9kYWxPcHRpb25zLmtleWJvYXJkLGJhY2tkcm9wQ2xhc3M6bW9kYWxPcHRpb25zLmJhY2tkcm9wQ2xhc3Msd2luZG93Q2xhc3M6bW9kYWxPcHRpb25zLndpbmRvd0NsYXNzLHdpbmRvd1RlbXBsYXRlVXJsOm1vZGFsT3B0aW9ucy53aW5kb3dUZW1wbGF0ZVVybCxzaXplOm1vZGFsT3B0aW9ucy5zaXplfSl9LGZ1bmN0aW9uKHJlYXNvbil7bW9kYWxSZXN1bHREZWZlcnJlZC5yZWplY3QocmVhc29uKX0pLHRlbXBsYXRlQW5kUmVzb2x2ZVByb21pc2UudGhlbihmdW5jdGlvbigpe21vZGFsT3BlbmVkRGVmZXJyZWQucmVzb2x2ZSghMCl9LGZ1bmN0aW9uKCl7bW9kYWxPcGVuZWREZWZlcnJlZC5yZWplY3QoITEpfSksbW9kYWxJbnN0YW5jZX0sJG1vZGFsfV19O3JldHVybiAkbW9kYWxQcm92aWRlcn0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAucGFnaW5hdGlvbiIsW10pLmNvbnRyb2xsZXIoIlBhZ2luYXRpb25Db250cm9sbGVyIixbIiRzY29wZSIsIiRhdHRycyIsIiRwYXJzZSIsZnVuY3Rpb24oJHNjb3BlLCRhdHRycywkcGFyc2Upe3ZhciBzZWxmPXRoaXMsbmdNb2RlbEN0cmw9eyRzZXRWaWV3VmFsdWU6YW5ndWxhci5ub29wfSxzZXROdW1QYWdlcz0kYXR0cnMubnVtUGFnZXM/JHBhcnNlKCRhdHRycy5udW1QYWdlcykuYXNzaWduOmFuZ3VsYXIubm9vcDt0aGlzLmluaXQ9ZnVuY3Rpb24obmdNb2RlbEN0cmxfLGNvbmZpZyl7bmdNb2RlbEN0cmw9bmdNb2RlbEN0cmxfLHRoaXMuY29uZmlnPWNvbmZpZyxuZ01vZGVsQ3RybC4kcmVuZGVyPWZ1bmN0aW9uKCl7c2VsZi5yZW5kZXIoKX0sJGF0dHJzLml0ZW1zUGVyUGFnZT8kc2NvcGUuJHBhcmVudC4kd2F0Y2goJHBhcnNlKCRhdHRycy5pdGVtc1BlclBhZ2UpLGZ1bmN0aW9uKHZhbHVlKXtzZWxmLml0ZW1zUGVyUGFnZT1wYXJzZUludCh2YWx1ZSwxMCksJHNjb3BlLnRvdGFsUGFnZXM9c2VsZi5jYWxjdWxhdGVUb3RhbFBhZ2VzKCl9KTp0aGlzLml0ZW1zUGVyUGFnZT1jb25maWcuaXRlbXNQZXJQYWdlfSx0aGlzLmNhbGN1bGF0ZVRvdGFsUGFnZXM9ZnVuY3Rpb24oKXt2YXIgdG90YWxQYWdlcz10aGlzLml0ZW1zUGVyUGFnZTwxPzE6TWF0aC5jZWlsKCRzY29wZS50b3RhbEl0ZW1zL3RoaXMuaXRlbXNQZXJQYWdlKTtyZXR1cm4gTWF0aC5tYXgodG90YWxQYWdlc3x8MCwxKX0sdGhpcy5yZW5kZXI9ZnVuY3Rpb24oKXskc2NvcGUucGFnZT1wYXJzZUludChuZ01vZGVsQ3RybC4kdmlld1ZhbHVlLDEwKXx8MX0sJHNjb3BlLnNlbGVjdFBhZ2U9ZnVuY3Rpb24ocGFnZSl7JHNjb3BlLnBhZ2UhPT1wYWdlJiZwYWdlPjAmJnBhZ2U8PSRzY29wZS50b3RhbFBhZ2VzJiYobmdNb2RlbEN0cmwuJHNldFZpZXdWYWx1ZShwYWdlKSxuZ01vZGVsQ3RybC4kcmVuZGVyKCkpfSwkc2NvcGUuZ2V0VGV4dD1mdW5jdGlvbihrZXkpe3JldHVybiAkc2NvcGVba2V5KyJUZXh0Il18fHNlbGYuY29uZmlnW2tleSsiVGV4dCJdfSwkc2NvcGUubm9QcmV2aW91cz1mdW5jdGlvbigpe3JldHVybiAxPT09JHNjb3BlLnBhZ2V9LCRzY29wZS5ub05leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gJHNjb3BlLnBhZ2U9PT0kc2NvcGUudG90YWxQYWdlc30sJHNjb3BlLiR3YXRjaCgidG90YWxJdGVtcyIsZnVuY3Rpb24oKXskc2NvcGUudG90YWxQYWdlcz1zZWxmLmNhbGN1bGF0ZVRvdGFsUGFnZXMoKX0pLCRzY29wZS4kd2F0Y2goInRvdGFsUGFnZXMiLGZ1bmN0aW9uKHZhbHVlKXtzZXROdW1QYWdlcygkc2NvcGUuJHBhcmVudCx2YWx1ZSksJHNjb3BlLnBhZ2U+dmFsdWU/JHNjb3BlLnNlbGVjdFBhZ2UodmFsdWUpOm5nTW9kZWxDdHJsLiRyZW5kZXIoKX0pfV0pLmNvbnN0YW50KCJwYWdpbmF0aW9uQ29uZmlnIix7aXRlbXNQZXJQYWdlOjEwLGJvdW5kYXJ5TGlua3M6ITEsZGlyZWN0aW9uTGlua3M6ITAsZmlyc3RUZXh0OiJGaXJzdCIscHJldmlvdXNUZXh0OiJQcmV2aW91cyIsbmV4dFRleHQ6Ik5leHQiLGxhc3RUZXh0OiJMYXN0Iixyb3RhdGU6ITB9KS5kaXJlY3RpdmUoInBhZ2luYXRpb24iLFsiJHBhcnNlIiwicGFnaW5hdGlvbkNvbmZpZyIsZnVuY3Rpb24oJHBhcnNlLHBhZ2luYXRpb25Db25maWcpe3JldHVybntyZXN0cmljdDoiRUEiLHNjb3BlOnt0b3RhbEl0ZW1zOiI9IixmaXJzdFRleHQ6IkAiLHByZXZpb3VzVGV4dDoiQCIsbmV4dFRleHQ6IkAiLGxhc3RUZXh0OiJAIn0scmVxdWlyZTpbInBhZ2luYXRpb24iLCI/bmdNb2RlbCJdLGNvbnRyb2xsZXI6IlBhZ2luYXRpb25Db250cm9sbGVyIix0ZW1wbGF0ZVVybDoidGVtcGxhdGUvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLmh0bWwiLHJlcGxhY2U6ITAsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLGN0cmxzKXtmdW5jdGlvbiBtYWtlUGFnZShudW1iZXIsdGV4dCxpc0FjdGl2ZSl7cmV0dXJue251bWJlcjpudW1iZXIsdGV4dDp0ZXh0LGFjdGl2ZTppc0FjdGl2ZX19ZnVuY3Rpb24gZ2V0UGFnZXMoY3VycmVudFBhZ2UsdG90YWxQYWdlcyl7dmFyIHBhZ2VzPVtdLHN0YXJ0UGFnZT0xLGVuZFBhZ2U9dG90YWxQYWdlcyxpc01heFNpemVkPWFuZ3VsYXIuaXNEZWZpbmVkKG1heFNpemUpJiZ0b3RhbFBhZ2VzPm1heFNpemU7aXNNYXhTaXplZCYmKHJvdGF0ZT8oc3RhcnRQYWdlPU1hdGgubWF4KGN1cnJlbnRQYWdlLU1hdGguZmxvb3IobWF4U2l6ZS8yKSwxKSxlbmRQYWdlPXN0YXJ0UGFnZSttYXhTaXplLTEsZW5kUGFnZT50b3RhbFBhZ2VzJiYoZW5kUGFnZT10b3RhbFBhZ2VzLHN0YXJ0UGFnZT1lbmRQYWdlLW1heFNpemUrMSkpOihzdGFydFBhZ2U9KE1hdGguY2VpbChjdXJyZW50UGFnZS9tYXhTaXplKS0xKSptYXhTaXplKzEsZW5kUGFnZT1NYXRoLm1pbihzdGFydFBhZ2UrbWF4U2l6ZS0xLHRvdGFsUGFnZXMpKSk7Zm9yKHZhciBudW1iZXI9c3RhcnRQYWdlO2VuZFBhZ2U+PW51bWJlcjtudW1iZXIrKyl7dmFyIHBhZ2U9bWFrZVBhZ2UobnVtYmVyLG51bWJlcixudW1iZXI9PT1jdXJyZW50UGFnZSk7cGFnZXMucHVzaChwYWdlKX1pZihpc01heFNpemVkJiYhcm90YXRlKXtpZihzdGFydFBhZ2U+MSl7dmFyIHByZXZpb3VzUGFnZVNldD1tYWtlUGFnZShzdGFydFBhZ2UtMSwiLi4uIiwhMSk7cGFnZXMudW5zaGlmdChwcmV2aW91c1BhZ2VTZXQpfWlmKHRvdGFsUGFnZXM+ZW5kUGFnZSl7dmFyIG5leHRQYWdlU2V0PW1ha2VQYWdlKGVuZFBhZ2UrMSwiLi4uIiwhMSk7cGFnZXMucHVzaChuZXh0UGFnZVNldCl9fXJldHVybiBwYWdlc312YXIgcGFnaW5hdGlvbkN0cmw9Y3RybHNbMF0sbmdNb2RlbEN0cmw9Y3RybHNbMV07aWYobmdNb2RlbEN0cmwpe3ZhciBtYXhTaXplPWFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLm1heFNpemUpP3Njb3BlLiRwYXJlbnQuJGV2YWwoYXR0cnMubWF4U2l6ZSk6cGFnaW5hdGlvbkNvbmZpZy5tYXhTaXplLHJvdGF0ZT1hbmd1bGFyLmlzRGVmaW5lZChhdHRycy5yb3RhdGUpP3Njb3BlLiRwYXJlbnQuJGV2YWwoYXR0cnMucm90YXRlKTpwYWdpbmF0aW9uQ29uZmlnLnJvdGF0ZTtzY29wZS5ib3VuZGFyeUxpbmtzPWFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLmJvdW5kYXJ5TGlua3MpP3Njb3BlLiRwYXJlbnQuJGV2YWwoYXR0cnMuYm91bmRhcnlMaW5rcyk6cGFnaW5hdGlvbkNvbmZpZy5ib3VuZGFyeUxpbmtzLHNjb3BlLmRpcmVjdGlvbkxpbmtzPWFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLmRpcmVjdGlvbkxpbmtzKT9zY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmRpcmVjdGlvbkxpbmtzKTpwYWdpbmF0aW9uQ29uZmlnLmRpcmVjdGlvbkxpbmtzLHBhZ2luYXRpb25DdHJsLmluaXQobmdNb2RlbEN0cmwscGFnaW5hdGlvbkNvbmZpZyksYXR0cnMubWF4U2l6ZSYmc2NvcGUuJHBhcmVudC4kd2F0Y2goJHBhcnNlKGF0dHJzLm1heFNpemUpLGZ1bmN0aW9uKHZhbHVlKXttYXhTaXplPXBhcnNlSW50KHZhbHVlLDEwKSxwYWdpbmF0aW9uQ3RybC5yZW5kZXIoKX0pO3ZhciBvcmlnaW5hbFJlbmRlcj1wYWdpbmF0aW9uQ3RybC5yZW5kZXI7cGFnaW5hdGlvbkN0cmwucmVuZGVyPWZ1bmN0aW9uKCl7b3JpZ2luYWxSZW5kZXIoKSxzY29wZS5wYWdlPjAmJnNjb3BlLnBhZ2U8PXNjb3BlLnRvdGFsUGFnZXMmJihzY29wZS5wYWdlcz1nZXRQYWdlcyhzY29wZS5wYWdlLHNjb3BlLnRvdGFsUGFnZXMpKX19fX19XSkuY29uc3RhbnQoInBhZ2VyQ29uZmlnIix7aXRlbXNQZXJQYWdlOjEwLHByZXZpb3VzVGV4dDoiwqsgUHJldmlvdXMiLG5leHRUZXh0OiJOZXh0IMK7IixhbGlnbjohMH0pLmRpcmVjdGl2ZSgicGFnZXIiLFsicGFnZXJDb25maWciLGZ1bmN0aW9uKHBhZ2VyQ29uZmlnKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixzY29wZTp7dG90YWxJdGVtczoiPSIscHJldmlvdXNUZXh0OiJAIixuZXh0VGV4dDoiQCJ9LHJlcXVpcmU6WyJwYWdlciIsIj9uZ01vZGVsIl0sY29udHJvbGxlcjoiUGFnaW5hdGlvbkNvbnRyb2xsZXIiLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2VyLmh0bWwiLHJlcGxhY2U6ITAsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLGN0cmxzKXt2YXIgcGFnaW5hdGlvbkN0cmw9Y3RybHNbMF0sbmdNb2RlbEN0cmw9Y3RybHNbMV07bmdNb2RlbEN0cmwmJihzY29wZS5hbGlnbj1hbmd1bGFyLmlzRGVmaW5lZChhdHRycy5hbGlnbik/c2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5hbGlnbik6cGFnZXJDb25maWcuYWxpZ24scGFnaW5hdGlvbkN0cmwuaW5pdChuZ01vZGVsQ3RybCxwYWdlckNvbmZpZykpfX19XSksYW5ndWxhci5tb2R1bGUoInVpLmJvb3RzdHJhcC50b29sdGlwIixbInVpLmJvb3RzdHJhcC5wb3NpdGlvbiIsInVpLmJvb3RzdHJhcC5iaW5kSHRtbCJdKS5wcm92aWRlcigiJHRvb2x0aXAiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gc25ha2VfY2FzZShuYW1lKXt2YXIgcmVnZXhwPS9bQS1aXS9nLHNlcGFyYXRvcj0iLSI7cmV0dXJuIG5hbWUucmVwbGFjZShyZWdleHAsZnVuY3Rpb24obGV0dGVyLHBvcyl7cmV0dXJuKHBvcz9zZXBhcmF0b3I6IiIpK2xldHRlci50b0xvd2VyQ2FzZSgpfSl9dmFyIGRlZmF1bHRPcHRpb25zPXtwbGFjZW1lbnQ6InRvcCIsYW5pbWF0aW9uOiEwLHBvcHVwRGVsYXk6MH0sdHJpZ2dlck1hcD17bW91c2VlbnRlcjoibW91c2VsZWF2ZSIsY2xpY2s6ImNsaWNrIixmb2N1czoiYmx1ciJ9LGdsb2JhbE9wdGlvbnM9e307dGhpcy5vcHRpb25zPWZ1bmN0aW9uKHZhbHVlKXthbmd1bGFyLmV4dGVuZChnbG9iYWxPcHRpb25zLHZhbHVlKX0sdGhpcy5zZXRUcmlnZ2Vycz1mdW5jdGlvbih0cmlnZ2Vycyl7YW5ndWxhci5leHRlbmQodHJpZ2dlck1hcCx0cmlnZ2Vycyl9LHRoaXMuJGdldD1bIiR3aW5kb3ciLCIkY29tcGlsZSIsIiR0aW1lb3V0IiwiJHBhcnNlIiwiJGRvY3VtZW50IiwiJHBvc2l0aW9uIiwiJGludGVycG9sYXRlIixmdW5jdGlvbigkd2luZG93LCRjb21waWxlLCR0aW1lb3V0LCRwYXJzZSwkZG9jdW1lbnQsJHBvc2l0aW9uLCRpbnRlcnBvbGF0ZSl7cmV0dXJuIGZ1bmN0aW9uKHR5cGUscHJlZml4LGRlZmF1bHRUcmlnZ2VyU2hvdyl7ZnVuY3Rpb24gZ2V0VHJpZ2dlcnModHJpZ2dlcil7dmFyIHNob3c9dHJpZ2dlcnx8b3B0aW9ucy50cmlnZ2VyfHxkZWZhdWx0VHJpZ2dlclNob3csaGlkZT10cmlnZ2VyTWFwW3Nob3ddfHxzaG93O3JldHVybntzaG93OnNob3csaGlkZTpoaWRlfX12YXIgb3B0aW9ucz1hbmd1bGFyLmV4dGVuZCh7fSxkZWZhdWx0T3B0aW9ucyxnbG9iYWxPcHRpb25zKSxkaXJlY3RpdmVOYW1lPXNuYWtlX2Nhc2UodHlwZSksc3RhcnRTeW09JGludGVycG9sYXRlLnN0YXJ0U3ltYm9sKCksZW5kU3ltPSRpbnRlcnBvbGF0ZS5lbmRTeW1ib2woKSx0ZW1wbGF0ZT0iPGRpdiAiK2RpcmVjdGl2ZU5hbWUrJy1wb3B1cCB0aXRsZT0iJytzdGFydFN5bSsidHRfdGl0bGUiK2VuZFN5bSsnIiBjb250ZW50PSInK3N0YXJ0U3ltKyJ0dF9jb250ZW50IitlbmRTeW0rJyIgcGxhY2VtZW50PSInK3N0YXJ0U3ltKyJ0dF9wbGFjZW1lbnQiK2VuZFN5bSsnIiBhbmltYXRpb249InR0X2FuaW1hdGlvbiIgaXMtb3Blbj0idHRfaXNPcGVuIj48L2Rpdj4nO3JldHVybntyZXN0cmljdDoiRUEiLHNjb3BlOiEwLGNvbXBpbGU6ZnVuY3Rpb24oKXt2YXIgdG9vbHRpcExpbmtlcj0kY29tcGlsZSh0ZW1wbGF0ZSk7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMpe2Z1bmN0aW9uIHRvZ2dsZVRvb2x0aXBCaW5kKCl7c2NvcGUudHRfaXNPcGVuP2hpZGVUb29sdGlwQmluZCgpOnNob3dUb29sdGlwQmluZCgpfWZ1bmN0aW9uIHNob3dUb29sdGlwQmluZCgpeyghaGFzRW5hYmxlRXhwfHxzY29wZS4kZXZhbChhdHRyc1twcmVmaXgrIkVuYWJsZSJdKSkmJihzY29wZS50dF9wb3B1cERlbGF5P3BvcHVwVGltZW91dHx8KHBvcHVwVGltZW91dD0kdGltZW91dChzaG93LHNjb3BlLnR0X3BvcHVwRGVsYXksITEpLHBvcHVwVGltZW91dC50aGVuKGZ1bmN0aW9uKHJlcG9zaXRpb24pe3JlcG9zaXRpb24oKX0pKTpzaG93KCkoKSl9ZnVuY3Rpb24gaGlkZVRvb2x0aXBCaW5kKCl7c2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7aGlkZSgpfSl9ZnVuY3Rpb24gc2hvdygpe3JldHVybiBwb3B1cFRpbWVvdXQ9bnVsbCx0cmFuc2l0aW9uVGltZW91dCYmKCR0aW1lb3V0LmNhbmNlbCh0cmFuc2l0aW9uVGltZW91dCksdHJhbnNpdGlvblRpbWVvdXQ9bnVsbCksc2NvcGUudHRfY29udGVudD8oY3JlYXRlVG9vbHRpcCgpLHRvb2x0aXAuY3NzKHt0b3A6MCxsZWZ0OjAsZGlzcGxheToiYmxvY2sifSksYXBwZW5kVG9Cb2R5PyRkb2N1bWVudC5maW5kKCJib2R5IikuYXBwZW5kKHRvb2x0aXApOmVsZW1lbnQuYWZ0ZXIodG9vbHRpcCkscG9zaXRpb25Ub29sdGlwKCksc2NvcGUudHRfaXNPcGVuPSEwLHNjb3BlLiRkaWdlc3QoKSxwb3NpdGlvblRvb2x0aXApOmFuZ3VsYXIubm9vcH1mdW5jdGlvbiBoaWRlKCl7c2NvcGUudHRfaXNPcGVuPSExLCR0aW1lb3V0LmNhbmNlbChwb3B1cFRpbWVvdXQpLHBvcHVwVGltZW91dD1udWxsLHNjb3BlLnR0X2FuaW1hdGlvbj90cmFuc2l0aW9uVGltZW91dHx8KHRyYW5zaXRpb25UaW1lb3V0PSR0aW1lb3V0KHJlbW92ZVRvb2x0aXAsNTAwKSk6cmVtb3ZlVG9vbHRpcCgpfWZ1bmN0aW9uIGNyZWF0ZVRvb2x0aXAoKXt0b29sdGlwJiZyZW1vdmVUb29sdGlwKCksdG9vbHRpcD10b29sdGlwTGlua2VyKHNjb3BlLGZ1bmN0aW9uKCl7fSksc2NvcGUuJGRpZ2VzdCgpfWZ1bmN0aW9uIHJlbW92ZVRvb2x0aXAoKXt0cmFuc2l0aW9uVGltZW91dD1udWxsLHRvb2x0aXAmJih0b29sdGlwLnJlbW92ZSgpLHRvb2x0aXA9bnVsbCl9dmFyIHRvb2x0aXAsdHJhbnNpdGlvblRpbWVvdXQscG9wdXBUaW1lb3V0LGFwcGVuZFRvQm9keT1hbmd1bGFyLmlzRGVmaW5lZChvcHRpb25zLmFwcGVuZFRvQm9keSk/b3B0aW9ucy5hcHBlbmRUb0JvZHk6ITEsdHJpZ2dlcnM9Z2V0VHJpZ2dlcnModm9pZCAwKSxoYXNFbmFibGVFeHA9YW5ndWxhci5pc0RlZmluZWQoYXR0cnNbcHJlZml4KyJFbmFibGUiXSkscG9zaXRpb25Ub29sdGlwPWZ1bmN0aW9uKCl7dmFyIHR0UG9zaXRpb249JHBvc2l0aW9uLnBvc2l0aW9uRWxlbWVudHMoZWxlbWVudCx0b29sdGlwLHNjb3BlLnR0X3BsYWNlbWVudCxhcHBlbmRUb0JvZHkpO3R0UG9zaXRpb24udG9wKz0icHgiLHR0UG9zaXRpb24ubGVmdCs9InB4Iix0b29sdGlwLmNzcyh0dFBvc2l0aW9uKX07c2NvcGUudHRfaXNPcGVuPSExLGF0dHJzLiRvYnNlcnZlKHR5cGUsZnVuY3Rpb24odmFsKXtzY29wZS50dF9jb250ZW50PXZhbCwhdmFsJiZzY29wZS50dF9pc09wZW4mJmhpZGUoKX0pLGF0dHJzLiRvYnNlcnZlKHByZWZpeCsiVGl0bGUiLGZ1bmN0aW9uKHZhbCl7c2NvcGUudHRfdGl0bGU9dmFsfSksYXR0cnMuJG9ic2VydmUocHJlZml4KyJQbGFjZW1lbnQiLGZ1bmN0aW9uKHZhbCl7c2NvcGUudHRfcGxhY2VtZW50PWFuZ3VsYXIuaXNEZWZpbmVkKHZhbCk/dmFsOm9wdGlvbnMucGxhY2VtZW50fSksYXR0cnMuJG9ic2VydmUocHJlZml4KyJQb3B1cERlbGF5IixmdW5jdGlvbih2YWwpe3ZhciBkZWxheT1wYXJzZUludCh2YWwsMTApO3Njb3BlLnR0X3BvcHVwRGVsYXk9aXNOYU4oZGVsYXkpP29wdGlvbnMucG9wdXBEZWxheTpkZWxheX0pO3ZhciB1bnJlZ2lzdGVyVHJpZ2dlcnM9ZnVuY3Rpb24oKXtlbGVtZW50LnVuYmluZCh0cmlnZ2Vycy5zaG93LHNob3dUb29sdGlwQmluZCksZWxlbWVudC51bmJpbmQodHJpZ2dlcnMuaGlkZSxoaWRlVG9vbHRpcEJpbmQpfTthdHRycy4kb2JzZXJ2ZShwcmVmaXgrIlRyaWdnZXIiLGZ1bmN0aW9uKHZhbCl7dW5yZWdpc3RlclRyaWdnZXJzKCksdHJpZ2dlcnM9Z2V0VHJpZ2dlcnModmFsKSx0cmlnZ2Vycy5zaG93PT09dHJpZ2dlcnMuaGlkZT9lbGVtZW50LmJpbmQodHJpZ2dlcnMuc2hvdyx0b2dnbGVUb29sdGlwQmluZCk6KGVsZW1lbnQuYmluZCh0cmlnZ2Vycy5zaG93LHNob3dUb29sdGlwQmluZCksZWxlbWVudC5iaW5kKHRyaWdnZXJzLmhpZGUsaGlkZVRvb2x0aXBCaW5kKSl9KTt2YXIgYW5pbWF0aW9uPXNjb3BlLiRldmFsKGF0dHJzW3ByZWZpeCsiQW5pbWF0aW9uIl0pO3Njb3BlLnR0X2FuaW1hdGlvbj1hbmd1bGFyLmlzRGVmaW5lZChhbmltYXRpb24pPyEhYW5pbWF0aW9uOm9wdGlvbnMuYW5pbWF0aW9uLGF0dHJzLiRvYnNlcnZlKHByZWZpeCsiQXBwZW5kVG9Cb2R5IixmdW5jdGlvbih2YWwpe2FwcGVuZFRvQm9keT1hbmd1bGFyLmlzRGVmaW5lZCh2YWwpPyRwYXJzZSh2YWwpKHNjb3BlKTphcHBlbmRUb0JvZHl9KSxhcHBlbmRUb0JvZHkmJnNjb3BlLiRvbigiJGxvY2F0aW9uQ2hhbmdlU3VjY2VzcyIsZnVuY3Rpb24oKXtzY29wZS50dF9pc09wZW4mJmhpZGUoKX0pLHNjb3BlLiRvbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7JHRpbWVvdXQuY2FuY2VsKHRyYW5zaXRpb25UaW1lb3V0KSwkdGltZW91dC5jYW5jZWwocG9wdXBUaW1lb3V0KSx1bnJlZ2lzdGVyVHJpZ2dlcnMoKSxyZW1vdmVUb29sdGlwKCl9KX19fX19XX0pLmRpcmVjdGl2ZSgidG9vbHRpcFBvcHVwIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcGxhY2U6ITAsc2NvcGU6e2NvbnRlbnQ6IkAiLHBsYWNlbWVudDoiQCIsYW5pbWF0aW9uOiImIixpc09wZW46IiYifSx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvdG9vbHRpcC90b29sdGlwLXBvcHVwLmh0bWwifX0pLmRpcmVjdGl2ZSgidG9vbHRpcCIsWyIkdG9vbHRpcCIsZnVuY3Rpb24oJHRvb2x0aXApe3JldHVybiAkdG9vbHRpcCgidG9vbHRpcCIsInRvb2x0aXAiLCJtb3VzZWVudGVyIil9XSkuZGlyZWN0aXZlKCJ0b29sdGlwSHRtbFVuc2FmZVBvcHVwIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcGxhY2U6ITAsc2NvcGU6e2NvbnRlbnQ6IkAiLHBsYWNlbWVudDoiQCIsYW5pbWF0aW9uOiImIixpc09wZW46IiYifSx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvdG9vbHRpcC90b29sdGlwLWh0bWwtdW5zYWZlLXBvcHVwLmh0bWwifX0pLmRpcmVjdGl2ZSgidG9vbHRpcEh0bWxVbnNhZmUiLFsiJHRvb2x0aXAiLGZ1bmN0aW9uKCR0b29sdGlwKXtyZXR1cm4gJHRvb2x0aXAoInRvb2x0aXBIdG1sVW5zYWZlIiwidG9vbHRpcCIsIm1vdXNlZW50ZXIiKX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnBvcG92ZXIiLFsidWkuYm9vdHN0cmFwLnRvb2x0aXAiXSkuZGlyZWN0aXZlKCJwb3BvdmVyUG9wdXAiLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIscmVwbGFjZTohMCxzY29wZTp7dGl0bGU6IkAiLGNvbnRlbnQ6IkAiLHBsYWNlbWVudDoiQCIsYW5pbWF0aW9uOiImIixpc09wZW46IiYifSx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvcG9wb3Zlci9wb3BvdmVyLmh0bWwifQp9KS5kaXJlY3RpdmUoInBvcG92ZXIiLFsiJHRvb2x0aXAiLGZ1bmN0aW9uKCR0b29sdGlwKXtyZXR1cm4gJHRvb2x0aXAoInBvcG92ZXIiLCJwb3BvdmVyIiwiY2xpY2siKX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnByb2dyZXNzYmFyIixbXSkuY29uc3RhbnQoInByb2dyZXNzQ29uZmlnIix7YW5pbWF0ZTohMCxtYXg6MTAwfSkuY29udHJvbGxlcigiUHJvZ3Jlc3NDb250cm9sbGVyIixbIiRzY29wZSIsIiRhdHRycyIsInByb2dyZXNzQ29uZmlnIixmdW5jdGlvbigkc2NvcGUsJGF0dHJzLHByb2dyZXNzQ29uZmlnKXt2YXIgc2VsZj10aGlzLGFuaW1hdGU9YW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLmFuaW1hdGUpPyRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5hbmltYXRlKTpwcm9ncmVzc0NvbmZpZy5hbmltYXRlO3RoaXMuYmFycz1bXSwkc2NvcGUubWF4PWFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5tYXgpPyRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5tYXgpOnByb2dyZXNzQ29uZmlnLm1heCx0aGlzLmFkZEJhcj1mdW5jdGlvbihiYXIsZWxlbWVudCl7YW5pbWF0ZXx8ZWxlbWVudC5jc3Moe3RyYW5zaXRpb246Im5vbmUifSksdGhpcy5iYXJzLnB1c2goYmFyKSxiYXIuJHdhdGNoKCJ2YWx1ZSIsZnVuY3Rpb24odmFsdWUpe2Jhci5wZXJjZW50PSsoMTAwKnZhbHVlLyRzY29wZS5tYXgpLnRvRml4ZWQoMil9KSxiYXIuJG9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtlbGVtZW50PW51bGwsc2VsZi5yZW1vdmVCYXIoYmFyKX0pfSx0aGlzLnJlbW92ZUJhcj1mdW5jdGlvbihiYXIpe3RoaXMuYmFycy5zcGxpY2UodGhpcy5iYXJzLmluZGV4T2YoYmFyKSwxKX19XSkuZGlyZWN0aXZlKCJwcm9ncmVzcyIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixyZXBsYWNlOiEwLHRyYW5zY2x1ZGU6ITAsY29udHJvbGxlcjoiUHJvZ3Jlc3NDb250cm9sbGVyIixyZXF1aXJlOiJwcm9ncmVzcyIsc2NvcGU6e30sdGVtcGxhdGVVcmw6InRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzLmh0bWwifX0pLmRpcmVjdGl2ZSgiYmFyIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcGxhY2U6ITAsdHJhbnNjbHVkZTohMCxyZXF1aXJlOiJecHJvZ3Jlc3MiLHNjb3BlOnt2YWx1ZToiPSIsdHlwZToiQCJ9LHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9iYXIuaHRtbCIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLHByb2dyZXNzQ3RybCl7cHJvZ3Jlc3NDdHJsLmFkZEJhcihzY29wZSxlbGVtZW50KX19fSkuZGlyZWN0aXZlKCJwcm9ncmVzc2JhciIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixyZXBsYWNlOiEwLHRyYW5zY2x1ZGU6ITAsY29udHJvbGxlcjoiUHJvZ3Jlc3NDb250cm9sbGVyIixzY29wZTp7dmFsdWU6Ij0iLHR5cGU6IkAifSx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXIuaHRtbCIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzLHByb2dyZXNzQ3RybCl7cHJvZ3Jlc3NDdHJsLmFkZEJhcihzY29wZSxhbmd1bGFyLmVsZW1lbnQoZWxlbWVudC5jaGlsZHJlbigpWzBdKSl9fX0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAucmF0aW5nIixbXSkuY29uc3RhbnQoInJhdGluZ0NvbmZpZyIse21heDo1LHN0YXRlT246bnVsbCxzdGF0ZU9mZjpudWxsfSkuY29udHJvbGxlcigiUmF0aW5nQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkYXR0cnMiLCJyYXRpbmdDb25maWciLGZ1bmN0aW9uKCRzY29wZSwkYXR0cnMscmF0aW5nQ29uZmlnKXt2YXIgbmdNb2RlbEN0cmw9eyRzZXRWaWV3VmFsdWU6YW5ndWxhci5ub29wfTt0aGlzLmluaXQ9ZnVuY3Rpb24obmdNb2RlbEN0cmxfKXtuZ01vZGVsQ3RybD1uZ01vZGVsQ3RybF8sbmdNb2RlbEN0cmwuJHJlbmRlcj10aGlzLnJlbmRlcix0aGlzLnN0YXRlT249YW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLnN0YXRlT24pPyRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5zdGF0ZU9uKTpyYXRpbmdDb25maWcuc3RhdGVPbix0aGlzLnN0YXRlT2ZmPWFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5zdGF0ZU9mZik/JHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLnN0YXRlT2ZmKTpyYXRpbmdDb25maWcuc3RhdGVPZmY7dmFyIHJhdGluZ1N0YXRlcz1hbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMucmF0aW5nU3RhdGVzKT8kc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMucmF0aW5nU3RhdGVzKTpuZXcgQXJyYXkoYW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLm1heCk/JHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLm1heCk6cmF0aW5nQ29uZmlnLm1heCk7JHNjb3BlLnJhbmdlPXRoaXMuYnVpbGRUZW1wbGF0ZU9iamVjdHMocmF0aW5nU3RhdGVzKX0sdGhpcy5idWlsZFRlbXBsYXRlT2JqZWN0cz1mdW5jdGlvbihzdGF0ZXMpe2Zvcih2YXIgaT0wLG49c3RhdGVzLmxlbmd0aDtuPmk7aSsrKXN0YXRlc1tpXT1hbmd1bGFyLmV4dGVuZCh7aW5kZXg6aX0se3N0YXRlT246dGhpcy5zdGF0ZU9uLHN0YXRlT2ZmOnRoaXMuc3RhdGVPZmZ9LHN0YXRlc1tpXSk7cmV0dXJuIHN0YXRlc30sJHNjb3BlLnJhdGU9ZnVuY3Rpb24odmFsdWUpeyEkc2NvcGUucmVhZG9ubHkmJnZhbHVlPj0wJiZ2YWx1ZTw9JHNjb3BlLnJhbmdlLmxlbmd0aCYmKG5nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUodmFsdWUpLG5nTW9kZWxDdHJsLiRyZW5kZXIoKSl9LCRzY29wZS5lbnRlcj1mdW5jdGlvbih2YWx1ZSl7JHNjb3BlLnJlYWRvbmx5fHwoJHNjb3BlLnZhbHVlPXZhbHVlKSwkc2NvcGUub25Ib3Zlcih7dmFsdWU6dmFsdWV9KX0sJHNjb3BlLnJlc2V0PWZ1bmN0aW9uKCl7JHNjb3BlLnZhbHVlPW5nTW9kZWxDdHJsLiR2aWV3VmFsdWUsJHNjb3BlLm9uTGVhdmUoKX0sJHNjb3BlLm9uS2V5ZG93bj1mdW5jdGlvbihldnQpey8oMzd8Mzh8Mzl8NDApLy50ZXN0KGV2dC53aGljaCkmJihldnQucHJldmVudERlZmF1bHQoKSxldnQuc3RvcFByb3BhZ2F0aW9uKCksJHNjb3BlLnJhdGUoJHNjb3BlLnZhbHVlKygzOD09PWV2dC53aGljaHx8Mzk9PT1ldnQud2hpY2g/MTotMSkpKX0sdGhpcy5yZW5kZXI9ZnVuY3Rpb24oKXskc2NvcGUudmFsdWU9bmdNb2RlbEN0cmwuJHZpZXdWYWx1ZX19XSkuZGlyZWN0aXZlKCJyYXRpbmciLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIscmVxdWlyZTpbInJhdGluZyIsIm5nTW9kZWwiXSxzY29wZTp7cmVhZG9ubHk6Ij0/IixvbkhvdmVyOiImIixvbkxlYXZlOiImIn0sY29udHJvbGxlcjoiUmF0aW5nQ29udHJvbGxlciIsdGVtcGxhdGVVcmw6InRlbXBsYXRlL3JhdGluZy9yYXRpbmcuaHRtbCIscmVwbGFjZTohMCxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsY3RybHMpe3ZhciByYXRpbmdDdHJsPWN0cmxzWzBdLG5nTW9kZWxDdHJsPWN0cmxzWzFdO25nTW9kZWxDdHJsJiZyYXRpbmdDdHJsLmluaXQobmdNb2RlbEN0cmwpfX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnRhYnMiLFtdKS5jb250cm9sbGVyKCJUYWJzZXRDb250cm9sbGVyIixbIiRzY29wZSIsZnVuY3Rpb24oJHNjb3BlKXt2YXIgY3RybD10aGlzLHRhYnM9Y3RybC50YWJzPSRzY29wZS50YWJzPVtdO2N0cmwuc2VsZWN0PWZ1bmN0aW9uKHNlbGVjdGVkVGFiKXthbmd1bGFyLmZvckVhY2godGFicyxmdW5jdGlvbih0YWIpe3RhYi5hY3RpdmUmJnRhYiE9PXNlbGVjdGVkVGFiJiYodGFiLmFjdGl2ZT0hMSx0YWIub25EZXNlbGVjdCgpKX0pLHNlbGVjdGVkVGFiLmFjdGl2ZT0hMCxzZWxlY3RlZFRhYi5vblNlbGVjdCgpfSxjdHJsLmFkZFRhYj1mdW5jdGlvbih0YWIpe3RhYnMucHVzaCh0YWIpLDE9PT10YWJzLmxlbmd0aD90YWIuYWN0aXZlPSEwOnRhYi5hY3RpdmUmJmN0cmwuc2VsZWN0KHRhYil9LGN0cmwucmVtb3ZlVGFiPWZ1bmN0aW9uKHRhYil7dmFyIGluZGV4PXRhYnMuaW5kZXhPZih0YWIpO2lmKHRhYi5hY3RpdmUmJnRhYnMubGVuZ3RoPjEpe3ZhciBuZXdBY3RpdmVJbmRleD1pbmRleD09dGFicy5sZW5ndGgtMT9pbmRleC0xOmluZGV4KzE7Y3RybC5zZWxlY3QodGFic1tuZXdBY3RpdmVJbmRleF0pfXRhYnMuc3BsaWNlKGluZGV4LDEpfX1dKS5kaXJlY3RpdmUoInRhYnNldCIsZnVuY3Rpb24oKXtyZXR1cm57cmVzdHJpY3Q6IkVBIix0cmFuc2NsdWRlOiEwLHJlcGxhY2U6ITAsc2NvcGU6e3R5cGU6IkAifSxjb250cm9sbGVyOiJUYWJzZXRDb250cm9sbGVyIix0ZW1wbGF0ZVVybDoidGVtcGxhdGUvdGFicy90YWJzZXQuaHRtbCIsbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJzKXtzY29wZS52ZXJ0aWNhbD1hbmd1bGFyLmlzRGVmaW5lZChhdHRycy52ZXJ0aWNhbCk/c2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy52ZXJ0aWNhbCk6ITEsc2NvcGUuanVzdGlmaWVkPWFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLmp1c3RpZmllZCk/c2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5qdXN0aWZpZWQpOiExfX19KS5kaXJlY3RpdmUoInRhYiIsWyIkcGFyc2UiLGZ1bmN0aW9uKCRwYXJzZSl7cmV0dXJue3JlcXVpcmU6Il50YWJzZXQiLHJlc3RyaWN0OiJFQSIscmVwbGFjZTohMCx0ZW1wbGF0ZVVybDoidGVtcGxhdGUvdGFicy90YWIuaHRtbCIsdHJhbnNjbHVkZTohMCxzY29wZTp7YWN0aXZlOiI9PyIsaGVhZGluZzoiQCIsb25TZWxlY3Q6IiZzZWxlY3QiLG9uRGVzZWxlY3Q6IiZkZXNlbGVjdCJ9LGNvbnRyb2xsZXI6ZnVuY3Rpb24oKXt9LGNvbXBpbGU6ZnVuY3Rpb24oZWxtLGF0dHJzLHRyYW5zY2x1ZGUpe3JldHVybiBmdW5jdGlvbihzY29wZSxlbG0sYXR0cnMsdGFic2V0Q3RybCl7c2NvcGUuJHdhdGNoKCJhY3RpdmUiLGZ1bmN0aW9uKGFjdGl2ZSl7YWN0aXZlJiZ0YWJzZXRDdHJsLnNlbGVjdChzY29wZSl9KSxzY29wZS5kaXNhYmxlZD0hMSxhdHRycy5kaXNhYmxlZCYmc2NvcGUuJHBhcmVudC4kd2F0Y2goJHBhcnNlKGF0dHJzLmRpc2FibGVkKSxmdW5jdGlvbih2YWx1ZSl7c2NvcGUuZGlzYWJsZWQ9ISF2YWx1ZX0pLHNjb3BlLnNlbGVjdD1mdW5jdGlvbigpe3Njb3BlLmRpc2FibGVkfHwoc2NvcGUuYWN0aXZlPSEwKX0sdGFic2V0Q3RybC5hZGRUYWIoc2NvcGUpLHNjb3BlLiRvbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7dGFic2V0Q3RybC5yZW1vdmVUYWIoc2NvcGUpfSksc2NvcGUuJHRyYW5zY2x1ZGVGbj10cmFuc2NsdWRlfX19fV0pLmRpcmVjdGl2ZSgidGFiSGVhZGluZ1RyYW5zY2x1ZGUiLFtmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiQSIscmVxdWlyZToiXnRhYiIsbGluazpmdW5jdGlvbihzY29wZSxlbG0pe3Njb3BlLiR3YXRjaCgiaGVhZGluZ0VsZW1lbnQiLGZ1bmN0aW9uKGhlYWRpbmcpe2hlYWRpbmcmJihlbG0uaHRtbCgiIiksZWxtLmFwcGVuZChoZWFkaW5nKSl9KX19fV0pLmRpcmVjdGl2ZSgidGFiQ29udGVudFRyYW5zY2x1ZGUiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gaXNUYWJIZWFkaW5nKG5vZGUpe3JldHVybiBub2RlLnRhZ05hbWUmJihub2RlLmhhc0F0dHJpYnV0ZSgidGFiLWhlYWRpbmciKXx8bm9kZS5oYXNBdHRyaWJ1dGUoImRhdGEtdGFiLWhlYWRpbmciKXx8InRhYi1oZWFkaW5nIj09PW5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpfHwiZGF0YS10YWItaGVhZGluZyI9PT1ub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSl9cmV0dXJue3Jlc3RyaWN0OiJBIixyZXF1aXJlOiJedGFic2V0IixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRycyl7dmFyIHRhYj1zY29wZS4kZXZhbChhdHRycy50YWJDb250ZW50VHJhbnNjbHVkZSk7dGFiLiR0cmFuc2NsdWRlRm4odGFiLiRwYXJlbnQsZnVuY3Rpb24oY29udGVudHMpe2FuZ3VsYXIuZm9yRWFjaChjb250ZW50cyxmdW5jdGlvbihub2RlKXtpc1RhYkhlYWRpbmcobm9kZSk/dGFiLmhlYWRpbmdFbGVtZW50PW5vZGU6ZWxtLmFwcGVuZChub2RlKX0pfSl9fX0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5ib290c3RyYXAudGltZXBpY2tlciIsW10pLmNvbnN0YW50KCJ0aW1lcGlja2VyQ29uZmlnIix7aG91clN0ZXA6MSxtaW51dGVTdGVwOjEsc2hvd01lcmlkaWFuOiEwLG1lcmlkaWFuczpudWxsLHJlYWRvbmx5SW5wdXQ6ITEsbW91c2V3aGVlbDohMH0pLmNvbnRyb2xsZXIoIlRpbWVwaWNrZXJDb250cm9sbGVyIixbIiRzY29wZSIsIiRhdHRycyIsIiRwYXJzZSIsIiRsb2ciLCIkbG9jYWxlIiwidGltZXBpY2tlckNvbmZpZyIsZnVuY3Rpb24oJHNjb3BlLCRhdHRycywkcGFyc2UsJGxvZywkbG9jYWxlLHRpbWVwaWNrZXJDb25maWcpe2Z1bmN0aW9uIGdldEhvdXJzRnJvbVRlbXBsYXRlKCl7dmFyIGhvdXJzPXBhcnNlSW50KCRzY29wZS5ob3VycywxMCksdmFsaWQ9JHNjb3BlLnNob3dNZXJpZGlhbj9ob3Vycz4wJiYxMz5ob3Vyczpob3Vycz49MCYmMjQ+aG91cnM7cmV0dXJuIHZhbGlkPygkc2NvcGUuc2hvd01lcmlkaWFuJiYoMTI9PT1ob3VycyYmKGhvdXJzPTApLCRzY29wZS5tZXJpZGlhbj09PW1lcmlkaWFuc1sxXSYmKGhvdXJzKz0xMikpLGhvdXJzKTp2b2lkIDB9ZnVuY3Rpb24gZ2V0TWludXRlc0Zyb21UZW1wbGF0ZSgpe3ZhciBtaW51dGVzPXBhcnNlSW50KCRzY29wZS5taW51dGVzLDEwKTtyZXR1cm4gbWludXRlcz49MCYmNjA+bWludXRlcz9taW51dGVzOnZvaWQgMH1mdW5jdGlvbiBwYWQodmFsdWUpe3JldHVybiBhbmd1bGFyLmlzRGVmaW5lZCh2YWx1ZSkmJnZhbHVlLnRvU3RyaW5nKCkubGVuZ3RoPDI/IjAiK3ZhbHVlOnZhbHVlfWZ1bmN0aW9uIHJlZnJlc2goa2V5Ym9hcmRDaGFuZ2Upe21ha2VWYWxpZCgpLG5nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUobmV3IERhdGUoc2VsZWN0ZWQpKSx1cGRhdGVUZW1wbGF0ZShrZXlib2FyZENoYW5nZSl9ZnVuY3Rpb24gbWFrZVZhbGlkKCl7bmdNb2RlbEN0cmwuJHNldFZhbGlkaXR5KCJ0aW1lIiwhMCksJHNjb3BlLmludmFsaWRIb3Vycz0hMSwkc2NvcGUuaW52YWxpZE1pbnV0ZXM9ITF9ZnVuY3Rpb24gdXBkYXRlVGVtcGxhdGUoa2V5Ym9hcmRDaGFuZ2Upe3ZhciBob3Vycz1zZWxlY3RlZC5nZXRIb3VycygpLG1pbnV0ZXM9c2VsZWN0ZWQuZ2V0TWludXRlcygpOyRzY29wZS5zaG93TWVyaWRpYW4mJihob3Vycz0wPT09aG91cnN8fDEyPT09aG91cnM/MTI6aG91cnMlMTIpLCRzY29wZS5ob3Vycz0iaCI9PT1rZXlib2FyZENoYW5nZT9ob3VyczpwYWQoaG91cnMpLCRzY29wZS5taW51dGVzPSJtIj09PWtleWJvYXJkQ2hhbmdlP21pbnV0ZXM6cGFkKG1pbnV0ZXMpLCRzY29wZS5tZXJpZGlhbj1zZWxlY3RlZC5nZXRIb3VycygpPDEyP21lcmlkaWFuc1swXTptZXJpZGlhbnNbMV19ZnVuY3Rpb24gYWRkTWludXRlcyhtaW51dGVzKXt2YXIgZHQ9bmV3IERhdGUoc2VsZWN0ZWQuZ2V0VGltZSgpKzZlNCptaW51dGVzKTtzZWxlY3RlZC5zZXRIb3VycyhkdC5nZXRIb3VycygpLGR0LmdldE1pbnV0ZXMoKSkscmVmcmVzaCgpfXZhciBzZWxlY3RlZD1uZXcgRGF0ZSxuZ01vZGVsQ3RybD17JHNldFZpZXdWYWx1ZTphbmd1bGFyLm5vb3B9LG1lcmlkaWFucz1hbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMubWVyaWRpYW5zKT8kc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMubWVyaWRpYW5zKTp0aW1lcGlja2VyQ29uZmlnLm1lcmlkaWFuc3x8JGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLkFNUE1TO3RoaXMuaW5pdD1mdW5jdGlvbihuZ01vZGVsQ3RybF8saW5wdXRzKXtuZ01vZGVsQ3RybD1uZ01vZGVsQ3RybF8sbmdNb2RlbEN0cmwuJHJlbmRlcj10aGlzLnJlbmRlcjt2YXIgaG91cnNJbnB1dEVsPWlucHV0cy5lcSgwKSxtaW51dGVzSW5wdXRFbD1pbnB1dHMuZXEoMSksbW91c2V3aGVlbD1hbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMubW91c2V3aGVlbCk/JHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLm1vdXNld2hlZWwpOnRpbWVwaWNrZXJDb25maWcubW91c2V3aGVlbDttb3VzZXdoZWVsJiZ0aGlzLnNldHVwTW91c2V3aGVlbEV2ZW50cyhob3Vyc0lucHV0RWwsbWludXRlc0lucHV0RWwpLCRzY29wZS5yZWFkb25seUlucHV0PWFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5yZWFkb25seUlucHV0KT8kc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMucmVhZG9ubHlJbnB1dCk6dGltZXBpY2tlckNvbmZpZy5yZWFkb25seUlucHV0LHRoaXMuc2V0dXBJbnB1dEV2ZW50cyhob3Vyc0lucHV0RWwsbWludXRlc0lucHV0RWwpfTt2YXIgaG91clN0ZXA9dGltZXBpY2tlckNvbmZpZy5ob3VyU3RlcDskYXR0cnMuaG91clN0ZXAmJiRzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoJGF0dHJzLmhvdXJTdGVwKSxmdW5jdGlvbih2YWx1ZSl7aG91clN0ZXA9cGFyc2VJbnQodmFsdWUsMTApfSk7dmFyIG1pbnV0ZVN0ZXA9dGltZXBpY2tlckNvbmZpZy5taW51dGVTdGVwOyRhdHRycy5taW51dGVTdGVwJiYkc2NvcGUuJHBhcmVudC4kd2F0Y2goJHBhcnNlKCRhdHRycy5taW51dGVTdGVwKSxmdW5jdGlvbih2YWx1ZSl7bWludXRlU3RlcD1wYXJzZUludCh2YWx1ZSwxMCl9KSwkc2NvcGUuc2hvd01lcmlkaWFuPXRpbWVwaWNrZXJDb25maWcuc2hvd01lcmlkaWFuLCRhdHRycy5zaG93TWVyaWRpYW4mJiRzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoJGF0dHJzLnNob3dNZXJpZGlhbiksZnVuY3Rpb24odmFsdWUpe2lmKCRzY29wZS5zaG93TWVyaWRpYW49ISF2YWx1ZSxuZ01vZGVsQ3RybC4kZXJyb3IudGltZSl7dmFyIGhvdXJzPWdldEhvdXJzRnJvbVRlbXBsYXRlKCksbWludXRlcz1nZXRNaW51dGVzRnJvbVRlbXBsYXRlKCk7YW5ndWxhci5pc0RlZmluZWQoaG91cnMpJiZhbmd1bGFyLmlzRGVmaW5lZChtaW51dGVzKSYmKHNlbGVjdGVkLnNldEhvdXJzKGhvdXJzKSxyZWZyZXNoKCkpfWVsc2UgdXBkYXRlVGVtcGxhdGUoKX0pLHRoaXMuc2V0dXBNb3VzZXdoZWVsRXZlbnRzPWZ1bmN0aW9uKGhvdXJzSW5wdXRFbCxtaW51dGVzSW5wdXRFbCl7dmFyIGlzU2Nyb2xsaW5nVXA9ZnVuY3Rpb24oZSl7ZS5vcmlnaW5hbEV2ZW50JiYoZT1lLm9yaWdpbmFsRXZlbnQpO3ZhciBkZWx0YT1lLndoZWVsRGVsdGE/ZS53aGVlbERlbHRhOi1lLmRlbHRhWTtyZXR1cm4gZS5kZXRhaWx8fGRlbHRhPjB9O2hvdXJzSW5wdXRFbC5iaW5kKCJtb3VzZXdoZWVsIHdoZWVsIixmdW5jdGlvbihlKXskc2NvcGUuJGFwcGx5KGlzU2Nyb2xsaW5nVXAoZSk/JHNjb3BlLmluY3JlbWVudEhvdXJzKCk6JHNjb3BlLmRlY3JlbWVudEhvdXJzKCkpLGUucHJldmVudERlZmF1bHQoKX0pLG1pbnV0ZXNJbnB1dEVsLmJpbmQoIm1vdXNld2hlZWwgd2hlZWwiLGZ1bmN0aW9uKGUpeyRzY29wZS4kYXBwbHkoaXNTY3JvbGxpbmdVcChlKT8kc2NvcGUuaW5jcmVtZW50TWludXRlcygpOiRzY29wZS5kZWNyZW1lbnRNaW51dGVzKCkpLGUucHJldmVudERlZmF1bHQoKX0pfSx0aGlzLnNldHVwSW5wdXRFdmVudHM9ZnVuY3Rpb24oaG91cnNJbnB1dEVsLG1pbnV0ZXNJbnB1dEVsKXtpZigkc2NvcGUucmVhZG9ubHlJbnB1dClyZXR1cm4gJHNjb3BlLnVwZGF0ZUhvdXJzPWFuZ3VsYXIubm9vcCx2b2lkKCRzY29wZS51cGRhdGVNaW51dGVzPWFuZ3VsYXIubm9vcCk7dmFyIGludmFsaWRhdGU9ZnVuY3Rpb24oaW52YWxpZEhvdXJzLGludmFsaWRNaW51dGVzKXtuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKG51bGwpLG5nTW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgidGltZSIsITEpLGFuZ3VsYXIuaXNEZWZpbmVkKGludmFsaWRIb3VycykmJigkc2NvcGUuaW52YWxpZEhvdXJzPWludmFsaWRIb3VycyksYW5ndWxhci5pc0RlZmluZWQoaW52YWxpZE1pbnV0ZXMpJiYoJHNjb3BlLmludmFsaWRNaW51dGVzPWludmFsaWRNaW51dGVzKX07JHNjb3BlLnVwZGF0ZUhvdXJzPWZ1bmN0aW9uKCl7dmFyIGhvdXJzPWdldEhvdXJzRnJvbVRlbXBsYXRlKCk7YW5ndWxhci5pc0RlZmluZWQoaG91cnMpPyhzZWxlY3RlZC5zZXRIb3Vycyhob3VycykscmVmcmVzaCgiaCIpKTppbnZhbGlkYXRlKCEwKX0saG91cnNJbnB1dEVsLmJpbmQoImJsdXIiLGZ1bmN0aW9uKCl7ISRzY29wZS5pbnZhbGlkSG91cnMmJiRzY29wZS5ob3VyczwxMCYmJHNjb3BlLiRhcHBseShmdW5jdGlvbigpeyRzY29wZS5ob3Vycz1wYWQoJHNjb3BlLmhvdXJzKX0pfSksJHNjb3BlLnVwZGF0ZU1pbnV0ZXM9ZnVuY3Rpb24oKXt2YXIgbWludXRlcz1nZXRNaW51dGVzRnJvbVRlbXBsYXRlKCk7YW5ndWxhci5pc0RlZmluZWQobWludXRlcyk/KHNlbGVjdGVkLnNldE1pbnV0ZXMobWludXRlcykscmVmcmVzaCgibSIpKTppbnZhbGlkYXRlKHZvaWQgMCwhMCl9LG1pbnV0ZXNJbnB1dEVsLmJpbmQoImJsdXIiLGZ1bmN0aW9uKCl7ISRzY29wZS5pbnZhbGlkTWludXRlcyYmJHNjb3BlLm1pbnV0ZXM8MTAmJiRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXskc2NvcGUubWludXRlcz1wYWQoJHNjb3BlLm1pbnV0ZXMpfSl9KX0sdGhpcy5yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgZGF0ZT1uZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZT9uZXcgRGF0ZShuZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZSk6bnVsbDtpc05hTihkYXRlKT8obmdNb2RlbEN0cmwuJHNldFZhbGlkaXR5KCJ0aW1lIiwhMSksJGxvZy5lcnJvcignVGltZXBpY2tlciBkaXJlY3RpdmU6ICJuZy1tb2RlbCIgdmFsdWUgbXVzdCBiZSBhIERhdGUgb2JqZWN0LCBhIG51bWJlciBvZiBtaWxsaXNlY29uZHMgc2luY2UgMDEuMDEuMTk3MCBvciBhIHN0cmluZyByZXByZXNlbnRpbmcgYW4gUkZDMjgyMiBvciBJU08gODYwMSBkYXRlLicpKTooZGF0ZSYmKHNlbGVjdGVkPWRhdGUpLG1ha2VWYWxpZCgpLHVwZGF0ZVRlbXBsYXRlKCkpfSwkc2NvcGUuaW5jcmVtZW50SG91cnM9ZnVuY3Rpb24oKXthZGRNaW51dGVzKDYwKmhvdXJTdGVwKX0sJHNjb3BlLmRlY3JlbWVudEhvdXJzPWZ1bmN0aW9uKCl7YWRkTWludXRlcyg2MCotaG91clN0ZXApfSwkc2NvcGUuaW5jcmVtZW50TWludXRlcz1mdW5jdGlvbigpe2FkZE1pbnV0ZXMobWludXRlU3RlcCl9LCRzY29wZS5kZWNyZW1lbnRNaW51dGVzPWZ1bmN0aW9uKCl7YWRkTWludXRlcygtbWludXRlU3RlcCl9LCRzY29wZS50b2dnbGVNZXJpZGlhbj1mdW5jdGlvbigpe2FkZE1pbnV0ZXMoNzIwKihzZWxlY3RlZC5nZXRIb3VycygpPDEyPzE6LTEpKX19XSkuZGlyZWN0aXZlKCJ0aW1lcGlja2VyIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHJlcXVpcmU6WyJ0aW1lcGlja2VyIiwiP15uZ01vZGVsIl0sY29udHJvbGxlcjoiVGltZXBpY2tlckNvbnRyb2xsZXIiLHJlcGxhY2U6ITAsc2NvcGU6e30sdGVtcGxhdGVVcmw6InRlbXBsYXRlL3RpbWVwaWNrZXIvdGltZXBpY2tlci5odG1sIixsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsY3RybHMpe3ZhciB0aW1lcGlja2VyQ3RybD1jdHJsc1swXSxuZ01vZGVsQ3RybD1jdHJsc1sxXTtuZ01vZGVsQ3RybCYmdGltZXBpY2tlckN0cmwuaW5pdChuZ01vZGVsQ3RybCxlbGVtZW50LmZpbmQoImlucHV0IikpfX19KSxhbmd1bGFyLm1vZHVsZSgidWkuYm9vdHN0cmFwLnR5cGVhaGVhZCIsWyJ1aS5ib290c3RyYXAucG9zaXRpb24iLCJ1aS5ib290c3RyYXAuYmluZEh0bWwiXSkuZmFjdG9yeSgidHlwZWFoZWFkUGFyc2VyIixbIiRwYXJzZSIsZnVuY3Rpb24oJHBhcnNlKXt2YXIgVFlQRUFIRUFEX1JFR0VYUD0vXlxzKihbXHNcU10rPykoPzpccythc1xzKyhbXHNcU10rPykpP1xzK2ZvclxzKyg/OihbXCRcd11bXCRcd1xkXSopKVxzK2luXHMrKFtcc1xTXSs/KSQvO3JldHVybntwYXJzZTpmdW5jdGlvbihpbnB1dCl7dmFyIG1hdGNoPWlucHV0Lm1hdGNoKFRZUEVBSEVBRF9SRUdFWFApO2lmKCFtYXRjaCl0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHR5cGVhaGVhZCBzcGVjaWZpY2F0aW9uIGluIGZvcm0gb2YgIl9tb2RlbFZhbHVlXyAoYXMgX2xhYmVsXyk/IGZvciBfaXRlbV8gaW4gX2NvbGxlY3Rpb25fIiBidXQgZ290ICInK2lucHV0KyciLicpO3JldHVybntpdGVtTmFtZTptYXRjaFszXSxzb3VyY2U6JHBhcnNlKG1hdGNoWzRdKSx2aWV3TWFwcGVyOiRwYXJzZShtYXRjaFsyXXx8bWF0Y2hbMV0pLG1vZGVsTWFwcGVyOiRwYXJzZShtYXRjaFsxXSl9fX19XSkuZGlyZWN0aXZlKCJ0eXBlYWhlYWQiLFsiJGNvbXBpbGUiLCIkcGFyc2UiLCIkcSIsIiR0aW1lb3V0IiwiJGRvY3VtZW50IiwiJHBvc2l0aW9uIiwidHlwZWFoZWFkUGFyc2VyIixmdW5jdGlvbigkY29tcGlsZSwkcGFyc2UsJHEsJHRpbWVvdXQsJGRvY3VtZW50LCRwb3NpdGlvbix0eXBlYWhlYWRQYXJzZXIpe3ZhciBIT1RfS0VZUz1bOSwxMywyNywzOCw0MF07cmV0dXJue3JlcXVpcmU6Im5nTW9kZWwiLGxpbms6ZnVuY3Rpb24ob3JpZ2luYWxTY29wZSxlbGVtZW50LGF0dHJzLG1vZGVsQ3RybCl7dmFyIGhhc0ZvY3VzLG1pblNlYXJjaD1vcmlnaW5hbFNjb3BlLiRldmFsKGF0dHJzLnR5cGVhaGVhZE1pbkxlbmd0aCl8fDEsd2FpdFRpbWU9b3JpZ2luYWxTY29wZS4kZXZhbChhdHRycy50eXBlYWhlYWRXYWl0TXMpfHwwLGlzRWRpdGFibGU9b3JpZ2luYWxTY29wZS4kZXZhbChhdHRycy50eXBlYWhlYWRFZGl0YWJsZSkhPT0hMSxpc0xvYWRpbmdTZXR0ZXI9JHBhcnNlKGF0dHJzLnR5cGVhaGVhZExvYWRpbmcpLmFzc2lnbnx8YW5ndWxhci5ub29wLG9uU2VsZWN0Q2FsbGJhY2s9JHBhcnNlKGF0dHJzLnR5cGVhaGVhZE9uU2VsZWN0KSxpbnB1dEZvcm1hdHRlcj1hdHRycy50eXBlYWhlYWRJbnB1dEZvcm1hdHRlcj8kcGFyc2UoYXR0cnMudHlwZWFoZWFkSW5wdXRGb3JtYXR0ZXIpOnZvaWQgMCxhcHBlbmRUb0JvZHk9YXR0cnMudHlwZWFoZWFkQXBwZW5kVG9Cb2R5P29yaWdpbmFsU2NvcGUuJGV2YWwoYXR0cnMudHlwZWFoZWFkQXBwZW5kVG9Cb2R5KTohMSwkc2V0TW9kZWxWYWx1ZT0kcGFyc2UoYXR0cnMubmdNb2RlbCkuYXNzaWduLHBhcnNlclJlc3VsdD10eXBlYWhlYWRQYXJzZXIucGFyc2UoYXR0cnMudHlwZWFoZWFkKSxzY29wZT1vcmlnaW5hbFNjb3BlLiRuZXcoKTtvcmlnaW5hbFNjb3BlLiRvbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7c2NvcGUuJGRlc3Ryb3koKX0pO3ZhciBwb3B1cElkPSJ0eXBlYWhlYWQtIitzY29wZS4kaWQrIi0iK01hdGguZmxvb3IoMWU0Kk1hdGgucmFuZG9tKCkpO2VsZW1lbnQuYXR0cih7ImFyaWEtYXV0b2NvbXBsZXRlIjoibGlzdCIsImFyaWEtZXhwYW5kZWQiOiExLCJhcmlhLW93bnMiOnBvcHVwSWR9KTt2YXIgcG9wVXBFbD1hbmd1bGFyLmVsZW1lbnQoIjxkaXYgdHlwZWFoZWFkLXBvcHVwPjwvZGl2PiIpO3BvcFVwRWwuYXR0cih7aWQ6cG9wdXBJZCxtYXRjaGVzOiJtYXRjaGVzIixhY3RpdmU6ImFjdGl2ZUlkeCIsc2VsZWN0OiJzZWxlY3QoYWN0aXZlSWR4KSIscXVlcnk6InF1ZXJ5Iixwb3NpdGlvbjoicG9zaXRpb24ifSksYW5ndWxhci5pc0RlZmluZWQoYXR0cnMudHlwZWFoZWFkVGVtcGxhdGVVcmwpJiZwb3BVcEVsLmF0dHIoInRlbXBsYXRlLXVybCIsYXR0cnMudHlwZWFoZWFkVGVtcGxhdGVVcmwpO3ZhciByZXNldE1hdGNoZXM9ZnVuY3Rpb24oKXtzY29wZS5tYXRjaGVzPVtdLHNjb3BlLmFjdGl2ZUlkeD0tMSxlbGVtZW50LmF0dHIoImFyaWEtZXhwYW5kZWQiLCExKX0sZ2V0TWF0Y2hJZD1mdW5jdGlvbihpbmRleCl7cmV0dXJuIHBvcHVwSWQrIi1vcHRpb24tIitpbmRleH07c2NvcGUuJHdhdGNoKCJhY3RpdmVJZHgiLGZ1bmN0aW9uKGluZGV4KXswPmluZGV4P2VsZW1lbnQucmVtb3ZlQXR0cigiYXJpYS1hY3RpdmVkZXNjZW5kYW50Iik6ZWxlbWVudC5hdHRyKCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnQiLGdldE1hdGNoSWQoaW5kZXgpKX0pO3ZhciBnZXRNYXRjaGVzQXN5bmM9ZnVuY3Rpb24oaW5wdXRWYWx1ZSl7dmFyIGxvY2Fscz17JHZpZXdWYWx1ZTppbnB1dFZhbHVlfTtpc0xvYWRpbmdTZXR0ZXIob3JpZ2luYWxTY29wZSwhMCksJHEud2hlbihwYXJzZXJSZXN1bHQuc291cmNlKG9yaWdpbmFsU2NvcGUsbG9jYWxzKSkudGhlbihmdW5jdGlvbihtYXRjaGVzKXt2YXIgb25DdXJyZW50UmVxdWVzdD1pbnB1dFZhbHVlPT09bW9kZWxDdHJsLiR2aWV3VmFsdWU7aWYob25DdXJyZW50UmVxdWVzdCYmaGFzRm9jdXMpaWYobWF0Y2hlcy5sZW5ndGg+MCl7c2NvcGUuYWN0aXZlSWR4PTAsc2NvcGUubWF0Y2hlcy5sZW5ndGg9MDtmb3IodmFyIGk9MDtpPG1hdGNoZXMubGVuZ3RoO2krKylsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXT1tYXRjaGVzW2ldLHNjb3BlLm1hdGNoZXMucHVzaCh7aWQ6Z2V0TWF0Y2hJZChpKSxsYWJlbDpwYXJzZXJSZXN1bHQudmlld01hcHBlcihzY29wZSxsb2NhbHMpLG1vZGVsOm1hdGNoZXNbaV19KTtzY29wZS5xdWVyeT1pbnB1dFZhbHVlLHNjb3BlLnBvc2l0aW9uPWFwcGVuZFRvQm9keT8kcG9zaXRpb24ub2Zmc2V0KGVsZW1lbnQpOiRwb3NpdGlvbi5wb3NpdGlvbihlbGVtZW50KSxzY29wZS5wb3NpdGlvbi50b3A9c2NvcGUucG9zaXRpb24udG9wK2VsZW1lbnQucHJvcCgib2Zmc2V0SGVpZ2h0IiksZWxlbWVudC5hdHRyKCJhcmlhLWV4cGFuZGVkIiwhMCl9ZWxzZSByZXNldE1hdGNoZXMoKTtvbkN1cnJlbnRSZXF1ZXN0JiZpc0xvYWRpbmdTZXR0ZXIob3JpZ2luYWxTY29wZSwhMSl9LGZ1bmN0aW9uKCl7cmVzZXRNYXRjaGVzKCksaXNMb2FkaW5nU2V0dGVyKG9yaWdpbmFsU2NvcGUsITEpfSl9O3Jlc2V0TWF0Y2hlcygpLHNjb3BlLnF1ZXJ5PXZvaWQgMDt2YXIgdGltZW91dFByb21pc2Usc2NoZWR1bGVTZWFyY2hXaXRoVGltZW91dD1mdW5jdGlvbihpbnB1dFZhbHVlKXt0aW1lb3V0UHJvbWlzZT0kdGltZW91dChmdW5jdGlvbigpe2dldE1hdGNoZXNBc3luYyhpbnB1dFZhbHVlKX0sd2FpdFRpbWUpfSxjYW5jZWxQcmV2aW91c1RpbWVvdXQ9ZnVuY3Rpb24oKXt0aW1lb3V0UHJvbWlzZSYmJHRpbWVvdXQuY2FuY2VsKHRpbWVvdXRQcm9taXNlKX07bW9kZWxDdHJsLiRwYXJzZXJzLnVuc2hpZnQoZnVuY3Rpb24oaW5wdXRWYWx1ZSl7cmV0dXJuIGhhc0ZvY3VzPSEwLGlucHV0VmFsdWUmJmlucHV0VmFsdWUubGVuZ3RoPj1taW5TZWFyY2g/d2FpdFRpbWU+MD8oY2FuY2VsUHJldmlvdXNUaW1lb3V0KCksc2NoZWR1bGVTZWFyY2hXaXRoVGltZW91dChpbnB1dFZhbHVlKSk6Z2V0TWF0Y2hlc0FzeW5jKGlucHV0VmFsdWUpOihpc0xvYWRpbmdTZXR0ZXIob3JpZ2luYWxTY29wZSwhMSksY2FuY2VsUHJldmlvdXNUaW1lb3V0KCkscmVzZXRNYXRjaGVzKCkpLGlzRWRpdGFibGU/aW5wdXRWYWx1ZTppbnB1dFZhbHVlP3ZvaWQgbW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgiZWRpdGFibGUiLCExKToobW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgiZWRpdGFibGUiLCEwKSxpbnB1dFZhbHVlKX0pLG1vZGVsQ3RybC4kZm9ybWF0dGVycy5wdXNoKGZ1bmN0aW9uKG1vZGVsVmFsdWUpe3ZhciBjYW5kaWRhdGVWaWV3VmFsdWUsZW1wdHlWaWV3VmFsdWUsbG9jYWxzPXt9O3JldHVybiBpbnB1dEZvcm1hdHRlcj8obG9jYWxzLiRtb2RlbD1tb2RlbFZhbHVlLGlucHV0Rm9ybWF0dGVyKG9yaWdpbmFsU2NvcGUsbG9jYWxzKSk6KGxvY2Fsc1twYXJzZXJSZXN1bHQuaXRlbU5hbWVdPW1vZGVsVmFsdWUsY2FuZGlkYXRlVmlld1ZhbHVlPXBhcnNlclJlc3VsdC52aWV3TWFwcGVyKG9yaWdpbmFsU2NvcGUsbG9jYWxzKSxsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXT12b2lkIDAsZW1wdHlWaWV3VmFsdWU9cGFyc2VyUmVzdWx0LnZpZXdNYXBwZXIob3JpZ2luYWxTY29wZSxsb2NhbHMpLGNhbmRpZGF0ZVZpZXdWYWx1ZSE9PWVtcHR5Vmlld1ZhbHVlP2NhbmRpZGF0ZVZpZXdWYWx1ZTptb2RlbFZhbHVlKX0pLHNjb3BlLnNlbGVjdD1mdW5jdGlvbihhY3RpdmVJZHgpe3ZhciBtb2RlbCxpdGVtLGxvY2Fscz17fTtsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXT1pdGVtPXNjb3BlLm1hdGNoZXNbYWN0aXZlSWR4XS5tb2RlbCxtb2RlbD1wYXJzZXJSZXN1bHQubW9kZWxNYXBwZXIob3JpZ2luYWxTY29wZSxsb2NhbHMpLCRzZXRNb2RlbFZhbHVlKG9yaWdpbmFsU2NvcGUsbW9kZWwpLG1vZGVsQ3RybC4kc2V0VmFsaWRpdHkoImVkaXRhYmxlIiwhMCksb25TZWxlY3RDYWxsYmFjayhvcmlnaW5hbFNjb3BlLHskaXRlbTppdGVtLCRtb2RlbDptb2RlbCwkbGFiZWw6cGFyc2VyUmVzdWx0LnZpZXdNYXBwZXIob3JpZ2luYWxTY29wZSxsb2NhbHMpfSkscmVzZXRNYXRjaGVzKCksJHRpbWVvdXQoZnVuY3Rpb24oKXtlbGVtZW50WzBdLmZvY3VzKCl9LDAsITEpfSxlbGVtZW50LmJpbmQoImtleWRvd24iLGZ1bmN0aW9uKGV2dCl7MCE9PXNjb3BlLm1hdGNoZXMubGVuZ3RoJiYtMSE9PUhPVF9LRVlTLmluZGV4T2YoZXZ0LndoaWNoKSYmKGV2dC5wcmV2ZW50RGVmYXVsdCgpLDQwPT09ZXZ0LndoaWNoPyhzY29wZS5hY3RpdmVJZHg9KHNjb3BlLmFjdGl2ZUlkeCsxKSVzY29wZS5tYXRjaGVzLmxlbmd0aCxzY29wZS4kZGlnZXN0KCkpOjM4PT09ZXZ0LndoaWNoPyhzY29wZS5hY3RpdmVJZHg9KHNjb3BlLmFjdGl2ZUlkeD9zY29wZS5hY3RpdmVJZHg6c2NvcGUubWF0Y2hlcy5sZW5ndGgpLTEsc2NvcGUuJGRpZ2VzdCgpKToxMz09PWV2dC53aGljaHx8OT09PWV2dC53aGljaD9zY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtzY29wZS5zZWxlY3Qoc2NvcGUuYWN0aXZlSWR4KX0pOjI3PT09ZXZ0LndoaWNoJiYoZXZ0LnN0b3BQcm9wYWdhdGlvbigpLHJlc2V0TWF0Y2hlcygpLHNjb3BlLiRkaWdlc3QoKSkpfSksZWxlbWVudC5iaW5kKCJibHVyIixmdW5jdGlvbigpe2hhc0ZvY3VzPSExfSk7dmFyIGRpc21pc3NDbGlja0hhbmRsZXI9ZnVuY3Rpb24oZXZ0KXtlbGVtZW50WzBdIT09ZXZ0LnRhcmdldCYmKHJlc2V0TWF0Y2hlcygpLHNjb3BlLiRkaWdlc3QoKSl9OyRkb2N1bWVudC5iaW5kKCJjbGljayIsZGlzbWlzc0NsaWNrSGFuZGxlciksb3JpZ2luYWxTY29wZS4kb24oIiRkZXN0cm95IixmdW5jdGlvbigpeyRkb2N1bWVudC51bmJpbmQoImNsaWNrIixkaXNtaXNzQ2xpY2tIYW5kbGVyKX0pO3ZhciAkcG9wdXA9JGNvbXBpbGUocG9wVXBFbCkoc2NvcGUpO2FwcGVuZFRvQm9keT8kZG9jdW1lbnQuZmluZCgiYm9keSIpLmFwcGVuZCgkcG9wdXApOmVsZW1lbnQuYWZ0ZXIoJHBvcHVwKX19fV0pLmRpcmVjdGl2ZSgidHlwZWFoZWFkUG9wdXAiLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJFQSIsc2NvcGU6e21hdGNoZXM6Ij0iLHF1ZXJ5OiI9IixhY3RpdmU6Ij0iLHBvc2l0aW9uOiI9IixzZWxlY3Q6IiYifSxyZXBsYWNlOiEwLHRlbXBsYXRlVXJsOiJ0ZW1wbGF0ZS90eXBlYWhlYWQvdHlwZWFoZWFkLXBvcHVwLmh0bWwiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyl7c2NvcGUudGVtcGxhdGVVcmw9YXR0cnMudGVtcGxhdGVVcmwsc2NvcGUuaXNPcGVuPWZ1bmN0aW9uKCl7cmV0dXJuIHNjb3BlLm1hdGNoZXMubGVuZ3RoPjB9LHNjb3BlLmlzQWN0aXZlPWZ1bmN0aW9uKG1hdGNoSWR4KXtyZXR1cm4gc2NvcGUuYWN0aXZlPT1tYXRjaElkeH0sc2NvcGUuc2VsZWN0QWN0aXZlPWZ1bmN0aW9uKG1hdGNoSWR4KXtzY29wZS5hY3RpdmU9bWF0Y2hJZHh9LHNjb3BlLnNlbGVjdE1hdGNoPWZ1bmN0aW9uKGFjdGl2ZUlkeCl7c2NvcGUuc2VsZWN0KHthY3RpdmVJZHg6YWN0aXZlSWR4fSl9fX19KS5kaXJlY3RpdmUoInR5cGVhaGVhZE1hdGNoIixbIiRodHRwIiwiJHRlbXBsYXRlQ2FjaGUiLCIkY29tcGlsZSIsIiRwYXJzZSIsZnVuY3Rpb24oJGh0dHAsJHRlbXBsYXRlQ2FjaGUsJGNvbXBpbGUsJHBhcnNlKXtyZXR1cm57cmVzdHJpY3Q6IkVBIixzY29wZTp7aW5kZXg6Ij0iLG1hdGNoOiI9IixxdWVyeToiPSJ9LGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyl7dmFyIHRwbFVybD0kcGFyc2UoYXR0cnMudGVtcGxhdGVVcmwpKHNjb3BlLiRwYXJlbnQpfHwidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1tYXRjaC5odG1sIjskaHR0cC5nZXQodHBsVXJsLHtjYWNoZTokdGVtcGxhdGVDYWNoZX0pLnN1Y2Nlc3MoZnVuY3Rpb24odHBsQ29udGVudCl7ZWxlbWVudC5yZXBsYWNlV2l0aCgkY29tcGlsZSh0cGxDb250ZW50LnRyaW0oKSkoc2NvcGUpKX0pfX19XSkuZmlsdGVyKCJ0eXBlYWhlYWRIaWdobGlnaHQiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZXNjYXBlUmVnZXhwKHF1ZXJ5VG9Fc2NhcGUpe3JldHVybiBxdWVyeVRvRXNjYXBlLnJlcGxhY2UoLyhbLj8qK14kW1xdXFwoKXt9fC1dKS9nLCJcXCQxIil9cmV0dXJuIGZ1bmN0aW9uKG1hdGNoSXRlbSxxdWVyeSl7cmV0dXJuIHF1ZXJ5PygiIittYXRjaEl0ZW0pLnJlcGxhY2UobmV3IFJlZ0V4cChlc2NhcGVSZWdleHAocXVlcnkpLCJnaSIpLCI8c3Ryb25nPiQmPC9zdHJvbmc+Iik6bWF0Y2hJdGVtfX0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9hY2NvcmRpb24vYWNjb3JkaW9uLWdyb3VwLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC5odG1sIiwnPGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+XG4gIDxkaXYgY2xhc3M9InBhbmVsLWhlYWRpbmciPlxuICAgIDxoNCBjbGFzcz0icGFuZWwtdGl0bGUiPlxuICAgICAgPGEgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiIG5nLWNsaWNrPSJ0b2dnbGVPcGVuKCkiIGFjY29yZGlvbi10cmFuc2NsdWRlPSJoZWFkaW5nIj48c3BhbiBuZy1jbGFzcz0ie1wndGV4dC1tdXRlZFwnOiBpc0Rpc2FibGVkfSI+e3toZWFkaW5nfX08L3NwYW4+PC9hPlxuICAgIDwvaDQ+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJwYW5lbC1jb2xsYXBzZSIgY29sbGFwc2U9IiFpc09wZW4iPlxuCSAgPGRpdiBjbGFzcz0icGFuZWwtYm9keSIgbmctdHJhbnNjbHVkZT48L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL2FjY29yZGlvbi9hY2NvcmRpb24uaHRtbCIsJzxkaXYgY2xhc3M9InBhbmVsLWdyb3VwIiBuZy10cmFuc2NsdWRlPjwvZGl2PicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9hbGVydC9hbGVydC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL2FsZXJ0L2FsZXJ0Lmh0bWwiLCc8ZGl2IGNsYXNzPSJhbGVydCIgbmctY2xhc3M9IltcJ2FsZXJ0LVwnICsgKHR5cGUgfHwgXCd3YXJuaW5nXCcpLCBjbG9zZWFibGUgPyBcJ2FsZXJ0LWRpc21pc3NhYmxlXCcgOiBudWxsXSIgcm9sZT0iYWxlcnQiPlxuICAgIDxidXR0b24gbmctc2hvdz0iY2xvc2VhYmxlIiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgbmctY2xpY2s9ImNsb3NlKCkiPlxuICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPkNsb3NlPC9zcGFuPlxuICAgIDwvYnV0dG9uPlxuICAgIDxkaXYgbmctdHJhbnNjbHVkZT48L2Rpdj5cbjwvZGl2PlxuJyl9XSksYW5ndWxhci5tb2R1bGUoInRlbXBsYXRlL2Nhcm91c2VsL2Nhcm91c2VsLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvY2Fyb3VzZWwvY2Fyb3VzZWwuaHRtbCIsJzxkaXYgbmctbW91c2VlbnRlcj0icGF1c2UoKSIgbmctbW91c2VsZWF2ZT0icGxheSgpIiBjbGFzcz0iY2Fyb3VzZWwiIG5nLXN3aXBlLXJpZ2h0PSJwcmV2KCkiIG5nLXN3aXBlLWxlZnQ9Im5leHQoKSI+XG4gICAgPG9sIGNsYXNzPSJjYXJvdXNlbC1pbmRpY2F0b3JzIiBuZy1zaG93PSJzbGlkZXMubGVuZ3RoID4gMSI+XG4gICAgICAgIDxsaSBuZy1yZXBlYXQ9InNsaWRlIGluIHNsaWRlcyB0cmFjayBieSAkaW5kZXgiIG5nLWNsYXNzPSJ7YWN0aXZlOiBpc0FjdGl2ZShzbGlkZSl9IiBuZy1jbGljaz0ic2VsZWN0KHNsaWRlKSI+PC9saT5cbiAgICA8L29sPlxuICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWlubmVyIiBuZy10cmFuc2NsdWRlPjwvZGl2PlxuICAgIDxhIGNsYXNzPSJsZWZ0IGNhcm91c2VsLWNvbnRyb2wiIG5nLWNsaWNrPSJwcmV2KCkiIG5nLXNob3c9InNsaWRlcy5sZW5ndGggPiAxIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLWxlZnQiPjwvc3Bhbj48L2E+XG4gICAgPGEgY2xhc3M9InJpZ2h0IGNhcm91c2VsLWNvbnRyb2wiIG5nLWNsaWNrPSJuZXh0KCkiIG5nLXNob3c9InNsaWRlcy5sZW5ndGggPiAxIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0Ij48L3NwYW4+PC9hPlxuPC9kaXY+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvY2Fyb3VzZWwvc2xpZGUuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS9jYXJvdXNlbC9zbGlkZS5odG1sIiwiPGRpdiBuZy1jbGFzcz1cIntcbiAgICAnYWN0aXZlJzogbGVhdmluZyB8fCAoYWN0aXZlICYmICFlbnRlcmluZyksXG4gICAgJ3ByZXYnOiAobmV4dCB8fCBhY3RpdmUpICYmIGRpcmVjdGlvbj09J3ByZXYnLFxuICAgICduZXh0JzogKG5leHQgfHwgYWN0aXZlKSAmJiBkaXJlY3Rpb249PSduZXh0JyxcbiAgICAncmlnaHQnOiBkaXJlY3Rpb249PSdwcmV2JyxcbiAgICAnbGVmdCc6IGRpcmVjdGlvbj09J25leHQnXG4gIH1cIiBjbGFzcz1cIml0ZW0gdGV4dC1jZW50ZXJcIiBuZy10cmFuc2NsdWRlPjwvZGl2PlxuIil9XSksYW5ndWxhci5tb2R1bGUoInRlbXBsYXRlL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5odG1sIiwnPGRpdiBuZy1zd2l0Y2g9ImRhdGVwaWNrZXJNb2RlIiByb2xlPSJhcHBsaWNhdGlvbiIgbmcta2V5ZG93bj0ia2V5ZG93bigkZXZlbnQpIj5cbiAgPGRheXBpY2tlciBuZy1zd2l0Y2gtd2hlbj0iZGF5IiB0YWJpbmRleD0iMCI+PC9kYXlwaWNrZXI+XG4gIDxtb250aHBpY2tlciBuZy1zd2l0Y2gtd2hlbj0ibW9udGgiIHRhYmluZGV4PSIwIj48L21vbnRocGlja2VyPlxuICA8eWVhcnBpY2tlciBuZy1zd2l0Y2gtd2hlbj0ieWVhciIgdGFiaW5kZXg9IjAiPjwveWVhcnBpY2tlcj5cbjwvZGl2PicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RheS5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL2RhdGVwaWNrZXIvZGF5Lmh0bWwiLCc8dGFibGUgcm9sZT0iZ3JpZCIgYXJpYS1sYWJlbGxlZGJ5PSJ7e3VuaXF1ZUlkfX0tdGl0bGUiIGFyaWEtYWN0aXZlZGVzY2VuZGFudD0ie3thY3RpdmVEYXRlSWR9fSI+XG4gIDx0aGVhZD5cbiAgICA8dHI+XG4gICAgICA8dGg+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIHB1bGwtbGVmdCIgbmctY2xpY2s9Im1vdmUoLTEpIiB0YWJpbmRleD0iLTEiPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tbGVmdCI+PC9pPjwvYnV0dG9uPjwvdGg+XG4gICAgICA8dGggY29sc3Bhbj0ie3s1ICsgc2hvd1dlZWtzfX0iPjxidXR0b24gaWQ9Int7dW5pcXVlSWR9fS10aXRsZSIgcm9sZT0iaGVhZGluZyIgYXJpYS1saXZlPSJhc3NlcnRpdmUiIGFyaWEtYXRvbWljPSJ0cnVlIiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIiBuZy1jbGljaz0idG9nZ2xlTW9kZSgpIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJ3aWR0aDoxMDAlOyI+PHN0cm9uZz57e3RpdGxlfX08L3N0cm9uZz48L2J1dHRvbj48L3RoPlxuICAgICAgPHRoPjxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBwdWxsLXJpZ2h0IiBuZy1jbGljaz0ibW92ZSgxKSIgdGFiaW5kZXg9Ii0xIj48aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0Ij48L2k+PC9idXR0b24+PC90aD5cbiAgICA8L3RyPlxuICAgIDx0cj5cbiAgICAgIDx0aCBuZy1zaG93PSJzaG93V2Vla3MiIGNsYXNzPSJ0ZXh0LWNlbnRlciI+PC90aD5cbiAgICAgIDx0aCBuZy1yZXBlYXQ9ImxhYmVsIGluIGxhYmVscyB0cmFjayBieSAkaW5kZXgiIGNsYXNzPSJ0ZXh0LWNlbnRlciI+PHNtYWxsIGFyaWEtbGFiZWw9Int7bGFiZWwuZnVsbH19Ij57e2xhYmVsLmFiYnJ9fTwvc21hbGw+PC90aD5cbiAgICA8L3RyPlxuICA8L3RoZWFkPlxuICA8dGJvZHk+XG4gICAgPHRyIG5nLXJlcGVhdD0icm93IGluIHJvd3MgdHJhY2sgYnkgJGluZGV4Ij5cbiAgICAgIDx0ZCBuZy1zaG93PSJzaG93V2Vla3MiIGNsYXNzPSJ0ZXh0LWNlbnRlciBoNiI+PGVtPnt7IHdlZWtOdW1iZXJzWyRpbmRleF0gfX08L2VtPjwvdGQ+XG4gICAgICA8dGQgbmctcmVwZWF0PSJkdCBpbiByb3cgdHJhY2sgYnkgZHQuZGF0ZSIgY2xhc3M9InRleHQtY2VudGVyIiByb2xlPSJncmlkY2VsbCIgaWQ9Int7ZHQudWlkfX0iIGFyaWEtZGlzYWJsZWQ9Int7ISFkdC5kaXNhYmxlZH19Ij5cbiAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIHN0eWxlPSJ3aWR0aDoxMDAlOyIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBidG4tc20iIG5nLWNsYXNzPSJ7XCdidG4taW5mb1wnOiBkdC5zZWxlY3RlZCwgYWN0aXZlOiBpc0FjdGl2ZShkdCl9IiBuZy1jbGljaz0ic2VsZWN0KGR0LmRhdGUpIiBuZy1kaXNhYmxlZD0iZHQuZGlzYWJsZWQiIHRhYmluZGV4PSItMSI+PHNwYW4gbmctY2xhc3M9IntcJ3RleHQtbXV0ZWRcJzogZHQuc2Vjb25kYXJ5LCBcJ3RleHQtaW5mb1wnOiBkdC5jdXJyZW50fSI+e3tkdC5sYWJlbH19PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgPC90ZD5cbiAgICA8L3RyPlxuICA8L3Rib2R5PlxuPC90YWJsZT5cbicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL21vbnRoLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvZGF0ZXBpY2tlci9tb250aC5odG1sIiwnPHRhYmxlIHJvbGU9ImdyaWQiIGFyaWEtbGFiZWxsZWRieT0ie3t1bmlxdWVJZH19LXRpdGxlIiBhcmlhLWFjdGl2ZWRlc2NlbmRhbnQ9Int7YWN0aXZlRGF0ZUlkfX0iPlxuICA8dGhlYWQ+XG4gICAgPHRyPlxuICAgICAgPHRoPjxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBwdWxsLWxlZnQiIG5nLWNsaWNrPSJtb3ZlKC0xKSIgdGFiaW5kZXg9Ii0xIj48aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLWxlZnQiPjwvaT48L2J1dHRvbj48L3RoPlxuICAgICAgPHRoPjxidXR0b24gaWQ9Int7dW5pcXVlSWR9fS10aXRsZSIgcm9sZT0iaGVhZGluZyIgYXJpYS1saXZlPSJhc3NlcnRpdmUiIGFyaWEtYXRvbWljPSJ0cnVlIiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIiBuZy1jbGljaz0idG9nZ2xlTW9kZSgpIiB0YWJpbmRleD0iLTEiIHN0eWxlPSJ3aWR0aDoxMDAlOyI+PHN0cm9uZz57e3RpdGxlfX08L3N0cm9uZz48L2J1dHRvbj48L3RoPlxuICAgICAgPHRoPjxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBwdWxsLXJpZ2h0IiBuZy1jbGljaz0ibW92ZSgxKSIgdGFiaW5kZXg9Ii0xIj48aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0Ij48L2k+PC9idXR0b24+PC90aD5cbiAgICA8L3RyPlxuICA8L3RoZWFkPlxuICA8dGJvZHk+XG4gICAgPHRyIG5nLXJlcGVhdD0icm93IGluIHJvd3MgdHJhY2sgYnkgJGluZGV4Ij5cbiAgICAgIDx0ZCBuZy1yZXBlYXQ9ImR0IGluIHJvdyB0cmFjayBieSBkdC5kYXRlIiBjbGFzcz0idGV4dC1jZW50ZXIiIHJvbGU9ImdyaWRjZWxsIiBpZD0ie3tkdC51aWR9fSIgYXJpYS1kaXNhYmxlZD0ie3shIWR0LmRpc2FibGVkfX0iPlxuICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgc3R5bGU9IndpZHRoOjEwMCU7IiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBuZy1jbGFzcz0ie1wnYnRuLWluZm9cJzogZHQuc2VsZWN0ZWQsIGFjdGl2ZTogaXNBY3RpdmUoZHQpfSIgbmctY2xpY2s9InNlbGVjdChkdC5kYXRlKSIgbmctZGlzYWJsZWQ9ImR0LmRpc2FibGVkIiB0YWJpbmRleD0iLTEiPjxzcGFuIG5nLWNsYXNzPSJ7XCd0ZXh0LWluZm9cJzogZHQuY3VycmVudH0iPnt7ZHQubGFiZWx9fTwvc3Bhbj48L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgPC90Ym9keT5cbjwvdGFibGU+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvZGF0ZXBpY2tlci9wb3B1cC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL2RhdGVwaWNrZXIvcG9wdXAuaHRtbCIsJzx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgbmctc3R5bGU9IntkaXNwbGF5OiAoaXNPcGVuICYmIFwnYmxvY2tcJykgfHwgXCdub25lXCcsIHRvcDogcG9zaXRpb24udG9wK1wncHhcJywgbGVmdDogcG9zaXRpb24ubGVmdCtcJ3B4XCd9IiBuZy1rZXlkb3duPSJrZXlkb3duKCRldmVudCkiPlxuCTxsaSBuZy10cmFuc2NsdWRlPjwvbGk+XG4JPGxpIG5nLWlmPSJzaG93QnV0dG9uQmFyIiBzdHlsZT0icGFkZGluZzoxMHB4IDlweCAycHgiPlxuCQk8c3BhbiBjbGFzcz0iYnRuLWdyb3VwIj5cbgkJCTxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4taW5mbyIgbmctY2xpY2s9InNlbGVjdChcJ3RvZGF5XCcpIj57eyBnZXRUZXh0KFwnY3VycmVudFwnKSB9fTwvYnV0dG9uPlxuCQkJPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1kYW5nZXIiIG5nLWNsaWNrPSJzZWxlY3QobnVsbCkiPnt7IGdldFRleHQoXCdjbGVhclwnKSB9fTwvYnV0dG9uPlxuCQk8L3NwYW4+XG4JCTxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tc3VjY2VzcyBwdWxsLXJpZ2h0IiBuZy1jbGljaz0iY2xvc2UoKSI+e3sgZ2V0VGV4dChcJ2Nsb3NlXCcpIH19PC9idXR0b24+XG4JPC9saT5cbjwvdWw+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWwiLCc8dGFibGUgcm9sZT0iZ3JpZCIgYXJpYS1sYWJlbGxlZGJ5PSJ7e3VuaXF1ZUlkfX0tdGl0bGUiIGFyaWEtYWN0aXZlZGVzY2VuZGFudD0ie3thY3RpdmVEYXRlSWR9fSI+XG4gIDx0aGVhZD5cbiAgICA8dHI+XG4gICAgICA8dGg+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIHB1bGwtbGVmdCIgbmctY2xpY2s9Im1vdmUoLTEpIiB0YWJpbmRleD0iLTEiPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tbGVmdCI+PC9pPjwvYnV0dG9uPjwvdGg+XG4gICAgICA8dGggY29sc3Bhbj0iMyI+PGJ1dHRvbiBpZD0ie3t1bmlxdWVJZH19LXRpdGxlIiByb2xlPSJoZWFkaW5nIiBhcmlhLWxpdmU9ImFzc2VydGl2ZSIgYXJpYS1hdG9taWM9InRydWUiIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBidG4tc20iIG5nLWNsaWNrPSJ0b2dnbGVNb2RlKCkiIHRhYmluZGV4PSItMSIgc3R5bGU9IndpZHRoOjEwMCU7Ij48c3Ryb25nPnt7dGl0bGV9fTwvc3Ryb25nPjwvYnV0dG9uPjwvdGg+XG4gICAgICA8dGg+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJtb3ZlKDEpIiB0YWJpbmRleD0iLTEiPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tcmlnaHQiPjwvaT48L2J1dHRvbj48L3RoPlxuICAgIDwvdHI+XG4gIDwvdGhlYWQ+XG4gIDx0Ym9keT5cbiAgICA8dHIgbmctcmVwZWF0PSJyb3cgaW4gcm93cyB0cmFjayBieSAkaW5kZXgiPlxuICAgICAgPHRkIG5nLXJlcGVhdD0iZHQgaW4gcm93IHRyYWNrIGJ5IGR0LmRhdGUiIGNsYXNzPSJ0ZXh0LWNlbnRlciIgcm9sZT0iZ3JpZGNlbGwiIGlkPSJ7e2R0LnVpZH19IiBhcmlhLWRpc2FibGVkPSJ7eyEhZHQuZGlzYWJsZWR9fSI+XG4gICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBzdHlsZT0id2lkdGg6MTAwJTsiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIG5nLWNsYXNzPSJ7XCdidG4taW5mb1wnOiBkdC5zZWxlY3RlZCwgYWN0aXZlOiBpc0FjdGl2ZShkdCl9IiBuZy1jbGljaz0ic2VsZWN0KGR0LmRhdGUpIiBuZy1kaXNhYmxlZD0iZHQuZGlzYWJsZWQiIHRhYmluZGV4PSItMSI+PHNwYW4gbmctY2xhc3M9IntcJ3RleHQtaW5mb1wnOiBkdC5jdXJyZW50fSI+e3tkdC5sYWJlbH19PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgPC90ZD5cbiAgICA8L3RyPlxuICA8L3Rib2R5PlxuPC90YWJsZT5cbicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9tb2RhbC9iYWNrZHJvcC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL21vZGFsL2JhY2tkcm9wLmh0bWwiLCc8ZGl2IGNsYXNzPSJtb2RhbC1iYWNrZHJvcCBmYWRlIHt7IGJhY2tkcm9wQ2xhc3MgfX0iXG4gICAgIG5nLWNsYXNzPSJ7aW46IGFuaW1hdGV9IlxuICAgICBuZy1zdHlsZT0ie1wnei1pbmRleFwnOiAxMDQwICsgKGluZGV4ICYmIDEgfHwgMCkgKyBpbmRleCoxMH0iXG4+PC9kaXY+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvbW9kYWwvd2luZG93Lmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvbW9kYWwvd2luZG93Lmh0bWwiLCc8ZGl2IHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBjbGFzcz0ibW9kYWwgZmFkZSIgbmctY2xhc3M9IntpbjogYW5pbWF0ZX0iIG5nLXN0eWxlPSJ7XCd6LWluZGV4XCc6IDEwNTAgKyBpbmRleCoxMCwgZGlzcGxheTogXCdibG9ja1wnfSIgbmctY2xpY2s9ImNsb3NlKCRldmVudCkiPlxuICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyIgbmctY2xhc3M9IntcJ21vZGFsLXNtXCc6IHNpemUgPT0gXCdzbVwnLCBcJ21vZGFsLWxnXCc6IHNpemUgPT0gXCdsZ1wnfSI+PGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCIgbW9kYWwtdHJhbnNjbHVkZT48L2Rpdj48L2Rpdj5cbjwvZGl2PicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2VyLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvcGFnaW5hdGlvbi9wYWdlci5odG1sIiwnPHVsIGNsYXNzPSJwYWdlciI+XG4gIDxsaSBuZy1jbGFzcz0ie2Rpc2FibGVkOiBub1ByZXZpb3VzKCksIHByZXZpb3VzOiBhbGlnbn0iPjxhIGhyZWYgbmctY2xpY2s9InNlbGVjdFBhZ2UocGFnZSAtIDEpIj57e2dldFRleHQoXCdwcmV2aW91c1wnKX19PC9hPjwvbGk+XG4gIDxsaSBuZy1jbGFzcz0ie2Rpc2FibGVkOiBub05leHQoKSwgbmV4dDogYWxpZ259Ij48YSBocmVmIG5nLWNsaWNrPSJzZWxlY3RQYWdlKHBhZ2UgKyAxKSI+e3tnZXRUZXh0KFwnbmV4dFwnKX19PC9hPjwvbGk+XG48L3VsPicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2luYXRpb24uaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2luYXRpb24uaHRtbCIsJzx1bCBjbGFzcz0icGFnaW5hdGlvbiI+XG4gIDxsaSBuZy1pZj0iYm91bmRhcnlMaW5rcyIgbmctY2xhc3M9IntkaXNhYmxlZDogbm9QcmV2aW91cygpfSI+PGEgaHJlZiBuZy1jbGljaz0ic2VsZWN0UGFnZSgxKSI+e3tnZXRUZXh0KFwnZmlyc3RcJyl9fTwvYT48L2xpPlxuICA8bGkgbmctaWY9ImRpcmVjdGlvbkxpbmtzIiBuZy1jbGFzcz0ie2Rpc2FibGVkOiBub1ByZXZpb3VzKCl9Ij48YSBocmVmIG5nLWNsaWNrPSJzZWxlY3RQYWdlKHBhZ2UgLSAxKSI+e3tnZXRUZXh0KFwncHJldmlvdXNcJyl9fTwvYT48L2xpPlxuICA8bGkgbmctcmVwZWF0PSJwYWdlIGluIHBhZ2VzIHRyYWNrIGJ5ICRpbmRleCIgbmctY2xhc3M9InthY3RpdmU6IHBhZ2UuYWN0aXZlfSI+PGEgaHJlZiBuZy1jbGljaz0ic2VsZWN0UGFnZShwYWdlLm51bWJlcikiPnt7cGFnZS50ZXh0fX08L2E+PC9saT5cbiAgPGxpIG5nLWlmPSJkaXJlY3Rpb25MaW5rcyIgbmctY2xhc3M9IntkaXNhYmxlZDogbm9OZXh0KCl9Ij48YSBocmVmIG5nLWNsaWNrPSJzZWxlY3RQYWdlKHBhZ2UgKyAxKSI+e3tnZXRUZXh0KFwnbmV4dFwnKX19PC9hPjwvbGk+XG4gIDxsaSBuZy1pZj0iYm91bmRhcnlMaW5rcyIgbmctY2xhc3M9IntkaXNhYmxlZDogbm9OZXh0KCl9Ij48YSBocmVmIG5nLWNsaWNrPSJzZWxlY3RQYWdlKHRvdGFsUGFnZXMpIj57e2dldFRleHQoXCdsYXN0XCcpfX08L2E+PC9saT5cbjwvdWw+Jyl9XSksYW5ndWxhci5tb2R1bGUoInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1odG1sLXVuc2FmZS1wb3B1cC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1odG1sLXVuc2FmZS1wb3B1cC5odG1sIiwnPGRpdiBjbGFzcz0idG9vbHRpcCB7e3BsYWNlbWVudH19IiBuZy1jbGFzcz0ieyBpbjogaXNPcGVuKCksIGZhZGU6IGFuaW1hdGlvbigpIH0iPlxuICA8ZGl2IGNsYXNzPSJ0b29sdGlwLWFycm93Ij48L2Rpdj5cbiAgPGRpdiBjbGFzcz0idG9vbHRpcC1pbm5lciIgYmluZC1odG1sLXVuc2FmZT0iY29udGVudCI+PC9kaXY+XG48L2Rpdj5cbicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS90b29sdGlwL3Rvb2x0aXAtcG9wdXAuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS90b29sdGlwL3Rvb2x0aXAtcG9wdXAuaHRtbCIsJzxkaXYgY2xhc3M9InRvb2x0aXAge3twbGFjZW1lbnR9fSIgbmctY2xhc3M9InsgaW46IGlzT3BlbigpLCBmYWRlOiBhbmltYXRpb24oKSB9Ij5cbiAgPGRpdiBjbGFzcz0idG9vbHRpcC1hcnJvdyI+PC9kaXY+XG4gIDxkaXYgY2xhc3M9InRvb2x0aXAtaW5uZXIiIG5nLWJpbmQ9ImNvbnRlbnQiPjwvZGl2PlxuPC9kaXY+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvcG9wb3Zlci9wb3BvdmVyLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvcG9wb3Zlci9wb3BvdmVyLmh0bWwiLCc8ZGl2IGNsYXNzPSJwb3BvdmVyIHt7cGxhY2VtZW50fX0iIG5nLWNsYXNzPSJ7IGluOiBpc09wZW4oKSwgZmFkZTogYW5pbWF0aW9uKCkgfSI+XG4gIDxkaXYgY2xhc3M9ImFycm93Ij48L2Rpdj5cblxuICA8ZGl2IGNsYXNzPSJwb3BvdmVyLWlubmVyIj5cbiAgICAgIDxoMyBjbGFzcz0icG9wb3Zlci10aXRsZSIgbmctYmluZD0idGl0bGUiIG5nLXNob3c9InRpdGxlIj48L2gzPlxuICAgICAgPGRpdiBjbGFzcz0icG9wb3Zlci1jb250ZW50IiBuZy1iaW5kPSJjb250ZW50Ij48L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9iYXIuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9iYXIuaHRtbCIsJzxkaXYgY2xhc3M9InByb2dyZXNzLWJhciIgbmctY2xhc3M9InR5cGUgJiYgXCdwcm9ncmVzcy1iYXItXCcgKyB0eXBlIiByb2xlPSJwcm9ncmVzc2JhciIgYXJpYS12YWx1ZW5vdz0ie3t2YWx1ZX19IiBhcmlhLXZhbHVlbWluPSIwIiBhcmlhLXZhbHVlbWF4PSJ7e21heH19IiBuZy1zdHlsZT0ie3dpZHRoOiBwZXJjZW50ICsgXCclXCd9IiBhcmlhLXZhbHVldGV4dD0ie3twZXJjZW50IHwgbnVtYmVyOjB9fSUiIG5nLXRyYW5zY2x1ZGU+PC9kaXY+Jyl9XSksYW5ndWxhci5tb2R1bGUoInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzLmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3MuaHRtbCIsJzxkaXYgY2xhc3M9InByb2dyZXNzIiBuZy10cmFuc2NsdWRlPjwvZGl2PicpfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9wcm9ncmVzc2Jhci5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzYmFyLmh0bWwiLCc8ZGl2IGNsYXNzPSJwcm9ncmVzcyI+XG4gIDxkaXYgY2xhc3M9InByb2dyZXNzLWJhciIgbmctY2xhc3M9InR5cGUgJiYgXCdwcm9ncmVzcy1iYXItXCcgKyB0eXBlIiByb2xlPSJwcm9ncmVzc2JhciIgYXJpYS12YWx1ZW5vdz0ie3t2YWx1ZX19IiBhcmlhLXZhbHVlbWluPSIwIiBhcmlhLXZhbHVlbWF4PSJ7e21heH19IiBuZy1zdHlsZT0ie3dpZHRoOiBwZXJjZW50ICsgXCclXCd9IiBhcmlhLXZhbHVldGV4dD0ie3twZXJjZW50IHwgbnVtYmVyOjB9fSUiIG5nLXRyYW5zY2x1ZGU+PC9kaXY+XG48L2Rpdj4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvcmF0aW5nL3JhdGluZy5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL3JhdGluZy9yYXRpbmcuaHRtbCIsJzxzcGFuIG5nLW1vdXNlbGVhdmU9InJlc2V0KCkiIG5nLWtleWRvd249Im9uS2V5ZG93bigkZXZlbnQpIiB0YWJpbmRleD0iMCIgcm9sZT0ic2xpZGVyIiBhcmlhLXZhbHVlbWluPSIwIiBhcmlhLXZhbHVlbWF4PSJ7e3JhbmdlLmxlbmd0aH19IiBhcmlhLXZhbHVlbm93PSJ7e3ZhbHVlfX0iPlxuICAgIDxpIG5nLXJlcGVhdD0iciBpbiByYW5nZSB0cmFjayBieSAkaW5kZXgiIG5nLW1vdXNlZW50ZXI9ImVudGVyKCRpbmRleCArIDEpIiBuZy1jbGljaz0icmF0ZSgkaW5kZXggKyAxKSIgY2xhc3M9ImdseXBoaWNvbiIgbmctY2xhc3M9IiRpbmRleCA8IHZhbHVlICYmIChyLnN0YXRlT24gfHwgXCdnbHlwaGljb24tc3RhclwnKSB8fCAoci5zdGF0ZU9mZiB8fCBcJ2dseXBoaWNvbi1zdGFyLWVtcHR5XCcpIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPih7eyAkaW5kZXggPCB2YWx1ZSA/IFwnKlwnIDogXCcgXCcgfX0pPC9zcGFuPlxuICAgIDwvaT5cbjwvc3Bhbj4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvdGFicy90YWIuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS90YWJzL3RhYi5odG1sIiwnPGxpIG5nLWNsYXNzPSJ7YWN0aXZlOiBhY3RpdmUsIGRpc2FibGVkOiBkaXNhYmxlZH0iPlxuICA8YSBuZy1jbGljaz0ic2VsZWN0KCkiIHRhYi1oZWFkaW5nLXRyYW5zY2x1ZGU+e3toZWFkaW5nfX08L2E+XG48L2xpPlxuJyl9XSksYW5ndWxhci5tb2R1bGUoInRlbXBsYXRlL3RhYnMvdGFic2V0Lmh0bWwiLFtdKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgidGVtcGxhdGUvdGFicy90YWJzZXQuaHRtbCIsJzxkaXY+XG4gIDx1bCBjbGFzcz0ibmF2IG5hdi17e3R5cGUgfHwgXCd0YWJzXCd9fSIgbmctY2xhc3M9IntcJ25hdi1zdGFja2VkXCc6IHZlcnRpY2FsLCBcJ25hdi1qdXN0aWZpZWRcJzoganVzdGlmaWVkfSIgbmctdHJhbnNjbHVkZT48L3VsPlxuICA8ZGl2IGNsYXNzPSJ0YWItY29udGVudCI+XG4gICAgPGRpdiBjbGFzcz0idGFiLXBhbmUiIFxuICAgICAgICAgbmctcmVwZWF0PSJ0YWIgaW4gdGFicyIgXG4gICAgICAgICBuZy1jbGFzcz0ie2FjdGl2ZTogdGFiLmFjdGl2ZX0iXG4gICAgICAgICB0YWItY29udGVudC10cmFuc2NsdWRlPSJ0YWIiPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuJykKfV0pLGFuZ3VsYXIubW9kdWxlKCJ0ZW1wbGF0ZS90aW1lcGlja2VyL3RpbWVwaWNrZXIuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSl7JHRlbXBsYXRlQ2FjaGUucHV0KCJ0ZW1wbGF0ZS90aW1lcGlja2VyL3RpbWVwaWNrZXIuaHRtbCIsJzx0YWJsZT5cbgk8dGJvZHk+XG4JCTx0ciBjbGFzcz0idGV4dC1jZW50ZXIiPlxuCQkJPHRkPjxhIG5nLWNsaWNrPSJpbmNyZW1lbnRIb3VycygpIiBjbGFzcz0iYnRuIGJ0bi1saW5rIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXVwIj48L3NwYW4+PC9hPjwvdGQ+XG4JCQk8dGQ+Jm5ic3A7PC90ZD5cbgkJCTx0ZD48YSBuZy1jbGljaz0iaW5jcmVtZW50TWludXRlcygpIiBjbGFzcz0iYnRuIGJ0bi1saW5rIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXVwIj48L3NwYW4+PC9hPjwvdGQ+XG4JCQk8dGQgbmctc2hvdz0ic2hvd01lcmlkaWFuIj48L3RkPlxuCQk8L3RyPlxuCQk8dHI+XG4JCQk8dGQgc3R5bGU9IndpZHRoOjUwcHg7IiBjbGFzcz0iZm9ybS1ncm91cCIgbmctY2xhc3M9IntcJ2hhcy1lcnJvclwnOiBpbnZhbGlkSG91cnN9Ij5cbgkJCQk8aW5wdXQgdHlwZT0idGV4dCIgbmctbW9kZWw9ImhvdXJzIiBuZy1jaGFuZ2U9InVwZGF0ZUhvdXJzKCkiIGNsYXNzPSJmb3JtLWNvbnRyb2wgdGV4dC1jZW50ZXIiIG5nLW1vdXNld2hlZWw9ImluY3JlbWVudEhvdXJzKCkiIG5nLXJlYWRvbmx5PSJyZWFkb25seUlucHV0IiBtYXhsZW5ndGg9IjIiPlxuCQkJPC90ZD5cbgkJCTx0ZD46PC90ZD5cbgkJCTx0ZCBzdHlsZT0id2lkdGg6NTBweDsiIGNsYXNzPSJmb3JtLWdyb3VwIiBuZy1jbGFzcz0ie1wnaGFzLWVycm9yXCc6IGludmFsaWRNaW51dGVzfSI+XG4JCQkJPGlucHV0IHR5cGU9InRleHQiIG5nLW1vZGVsPSJtaW51dGVzIiBuZy1jaGFuZ2U9InVwZGF0ZU1pbnV0ZXMoKSIgY2xhc3M9ImZvcm0tY29udHJvbCB0ZXh0LWNlbnRlciIgbmctcmVhZG9ubHk9InJlYWRvbmx5SW5wdXQiIG1heGxlbmd0aD0iMiI+XG4JCQk8L3RkPlxuCQkJPHRkIG5nLXNob3c9InNob3dNZXJpZGlhbiI+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgdGV4dC1jZW50ZXIiIG5nLWNsaWNrPSJ0b2dnbGVNZXJpZGlhbigpIj57e21lcmlkaWFufX08L2J1dHRvbj48L3RkPlxuCQk8L3RyPlxuCQk8dHIgY2xhc3M9InRleHQtY2VudGVyIj5cbgkJCTx0ZD48YSBuZy1jbGljaz0iZGVjcmVtZW50SG91cnMoKSIgY2xhc3M9ImJ0biBidG4tbGluayI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1kb3duIj48L3NwYW4+PC9hPjwvdGQ+XG4JCQk8dGQ+Jm5ic3A7PC90ZD5cbgkJCTx0ZD48YSBuZy1jbGljaz0iZGVjcmVtZW50TWludXRlcygpIiBjbGFzcz0iYnRuIGJ0bi1saW5rIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLWRvd24iPjwvc3Bhbj48L2E+PC90ZD5cbgkJCTx0ZCBuZy1zaG93PSJzaG93TWVyaWRpYW4iPjwvdGQ+XG4JCTwvdHI+XG4JPC90Ym9keT5cbjwvdGFibGU+XG4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1tYXRjaC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL3R5cGVhaGVhZC90eXBlYWhlYWQtbWF0Y2guaHRtbCIsJzxhIHRhYmluZGV4PSItMSIgYmluZC1odG1sLXVuc2FmZT0ibWF0Y2gubGFiZWwgfCB0eXBlYWhlYWRIaWdobGlnaHQ6cXVlcnkiPjwvYT4nKX1dKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1wb3B1cC5odG1sIixbXSkucnVuKFsiJHRlbXBsYXRlQ2FjaGUiLGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKXskdGVtcGxhdGVDYWNoZS5wdXQoInRlbXBsYXRlL3R5cGVhaGVhZC90eXBlYWhlYWQtcG9wdXAuaHRtbCIsJzx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgbmctc2hvdz0iaXNPcGVuKCkiIG5nLXN0eWxlPSJ7dG9wOiBwb3NpdGlvbi50b3ArXCdweFwnLCBsZWZ0OiBwb3NpdGlvbi5sZWZ0K1wncHhcJ30iIHN0eWxlPSJkaXNwbGF5OiBibG9jazsiIHJvbGU9Imxpc3Rib3giIGFyaWEtaGlkZGVuPSJ7eyFpc09wZW4oKX19Ij5cbiAgICA8bGkgbmctcmVwZWF0PSJtYXRjaCBpbiBtYXRjaGVzIHRyYWNrIGJ5ICRpbmRleCIgbmctY2xhc3M9InthY3RpdmU6IGlzQWN0aXZlKCRpbmRleCkgfSIgbmctbW91c2VlbnRlcj0ic2VsZWN0QWN0aXZlKCRpbmRleCkiIG5nLWNsaWNrPSJzZWxlY3RNYXRjaCgkaW5kZXgpIiByb2xlPSJvcHRpb24iIGlkPSJ7e21hdGNoLmlkfX0iPlxuICAgICAgICA8ZGl2IHR5cGVhaGVhZC1tYXRjaCBpbmRleD0iJGluZGV4IiBtYXRjaD0ibWF0Y2giIHF1ZXJ5PSJxdWVyeSIgdGVtcGxhdGUtdXJsPSJ0ZW1wbGF0ZVVybCI+PC9kaXY+XG4gICAgPC9saT5cbjwvdWw+XG4nKX1dKSxmdW5jdGlvbih3aW5kb3csYW5ndWxhcix1bmRlZmluZWQpe2FuZ3VsYXIubW9kdWxlKCJuZ0Nvb2tpZXMiLFsibmciXSkuZmFjdG9yeSgiJGNvb2tpZXMiLFsiJHJvb3RTY29wZSIsIiRicm93c2VyIixmdW5jdGlvbigkcm9vdFNjb3BlLCRicm93c2VyKXtmdW5jdGlvbiBwdXNoKCl7dmFyIG5hbWUsdmFsdWUsYnJvd3NlckNvb2tpZXMsdXBkYXRlZDtmb3IobmFtZSBpbiBsYXN0Q29va2llcylpc1VuZGVmaW5lZChjb29raWVzW25hbWVdKSYmJGJyb3dzZXIuY29va2llcyhuYW1lLHVuZGVmaW5lZCk7Zm9yKG5hbWUgaW4gY29va2llcyl2YWx1ZT1jb29raWVzW25hbWVdLGFuZ3VsYXIuaXNTdHJpbmcodmFsdWUpfHwodmFsdWU9IiIrdmFsdWUsY29va2llc1tuYW1lXT12YWx1ZSksdmFsdWUhPT1sYXN0Q29va2llc1tuYW1lXSYmKCRicm93c2VyLmNvb2tpZXMobmFtZSx2YWx1ZSksdXBkYXRlZD0hMCk7aWYodXBkYXRlZCl7dXBkYXRlZD0hMSxicm93c2VyQ29va2llcz0kYnJvd3Nlci5jb29raWVzKCk7Zm9yKG5hbWUgaW4gY29va2llcyljb29raWVzW25hbWVdIT09YnJvd3NlckNvb2tpZXNbbmFtZV0mJihpc1VuZGVmaW5lZChicm93c2VyQ29va2llc1tuYW1lXSk/ZGVsZXRlIGNvb2tpZXNbbmFtZV06Y29va2llc1tuYW1lXT1icm93c2VyQ29va2llc1tuYW1lXSx1cGRhdGVkPSEwKX19dmFyIGxhc3RCcm93c2VyQ29va2llcyxjb29raWVzPXt9LGxhc3RDb29raWVzPXt9LHJ1bkV2YWw9ITEsY29weT1hbmd1bGFyLmNvcHksaXNVbmRlZmluZWQ9YW5ndWxhci5pc1VuZGVmaW5lZDtyZXR1cm4gJGJyb3dzZXIuYWRkUG9sbEZuKGZ1bmN0aW9uKCl7dmFyIGN1cnJlbnRDb29raWVzPSRicm93c2VyLmNvb2tpZXMoKTtsYXN0QnJvd3NlckNvb2tpZXMhPWN1cnJlbnRDb29raWVzJiYobGFzdEJyb3dzZXJDb29raWVzPWN1cnJlbnRDb29raWVzLGNvcHkoY3VycmVudENvb2tpZXMsbGFzdENvb2tpZXMpLGNvcHkoY3VycmVudENvb2tpZXMsY29va2llcykscnVuRXZhbCYmJHJvb3RTY29wZS4kYXBwbHkoKSl9KSgpLHJ1bkV2YWw9ITAsJHJvb3RTY29wZS4kd2F0Y2gocHVzaCksY29va2llc31dKS5mYWN0b3J5KCIkY29va2llU3RvcmUiLFsiJGNvb2tpZXMiLGZ1bmN0aW9uKCRjb29raWVzKXtyZXR1cm57Z2V0OmZ1bmN0aW9uKGtleSl7dmFyIHZhbHVlPSRjb29raWVzW2tleV07cmV0dXJuIHZhbHVlP2FuZ3VsYXIuZnJvbUpzb24odmFsdWUpOnZhbHVlfSxwdXQ6ZnVuY3Rpb24oa2V5LHZhbHVlKXskY29va2llc1trZXldPWFuZ3VsYXIudG9Kc29uKHZhbHVlKX0scmVtb3ZlOmZ1bmN0aW9uKGtleSl7ZGVsZXRlICRjb29raWVzW2tleV19fX1dKX0od2luZG93LHdpbmRvdy5hbmd1bGFyKSxhbmd1bGFyLm1vZHVsZSgiYW5ndWxhci1mbG90IixbXSkuZGlyZWN0aXZlKCJmbG90IixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiRUEiLHRlbXBsYXRlOiI8ZGl2PjwvZGl2PiIsc2NvcGU6e2RhdGFzZXQ6Ij0iLG9wdGlvbnM6Ij0iLGNhbGxiYWNrOiI9In0sbGluazpmdW5jdGlvbihzY29wZSxlbGVtZW50LGF0dHJpYnV0ZXMpe3ZhciBoZWlnaHQsaW5pdCxvbkRhdGFzZXRDaGFuZ2VkLG9uT3B0aW9uc0NoYW5nZWQscGxvdCxwbG90QXJlYSx3aWR0aDtyZXR1cm4gcGxvdD1udWxsLHdpZHRoPWF0dHJpYnV0ZXMud2lkdGh8fCIxMDAlIixoZWlnaHQ9YXR0cmlidXRlcy5oZWlnaHR8fCIxMDAlIixzY29wZS5kYXRhc2V0fHwoc2NvcGUuZGF0YXNldD1bXSksc2NvcGUub3B0aW9uc3x8KHNjb3BlLm9wdGlvbnM9e2xlZ2VuZDp7c2hvdzohMX19KSxwbG90QXJlYT0kKGVsZW1lbnQuY2hpbGRyZW4oKVswXSkscGxvdEFyZWEuY3NzKHt3aWR0aDp3aWR0aCxoZWlnaHQ6aGVpZ2h0fSksaW5pdD1mdW5jdGlvbigpe3ZhciBwbG90T2JqO3JldHVybiBwbG90T2JqPSQucGxvdChwbG90QXJlYSxzY29wZS5kYXRhc2V0LHNjb3BlLm9wdGlvbnMpLHNjb3BlLmNhbGxiYWNrJiZzY29wZS5jYWxsYmFjayhwbG90T2JqKSxwbG90T2JqfSxvbkRhdGFzZXRDaGFuZ2VkPWZ1bmN0aW9uKGRhdGFzZXQpe3JldHVybiBwbG90PyhwbG90LnNldERhdGEoZGF0YXNldCkscGxvdC5zZXR1cEdyaWQoKSxwbG90LmRyYXcoKSk6cGxvdD1pbml0KCl9LHNjb3BlLiR3YXRjaCgiZGF0YXNldCIsb25EYXRhc2V0Q2hhbmdlZCwhMCksb25PcHRpb25zQ2hhbmdlZD1mdW5jdGlvbigpe3JldHVybiBwbG90PWluaXQoKX0sc2NvcGUuJHdhdGNoKCJvcHRpb25zIixvbk9wdGlvbnNDaGFuZ2VkLCEwKX19fSksInVuZGVmaW5lZCIhPXR5cGVvZiBtb2R1bGUmJiJ1bmRlZmluZWQiIT10eXBlb2YgZXhwb3J0cyYmbW9kdWxlLmV4cG9ydHM9PT1leHBvcnRzJiYobW9kdWxlLmV4cG9ydHM9InVpLnJvdXRlciIpLGZ1bmN0aW9uKHdpbmRvdyxhbmd1bGFyLHVuZGVmaW5lZCl7ZnVuY3Rpb24gaW5oZXJpdChwYXJlbnQsZXh0cmEpe3JldHVybiBleHRlbmQobmV3KGV4dGVuZChmdW5jdGlvbigpe30se3Byb3RvdHlwZTpwYXJlbnR9KSksZXh0cmEpfWZ1bmN0aW9uIG1lcmdlKGRzdCl7cmV0dXJuIGZvckVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKG9iail7b2JqIT09ZHN0JiZmb3JFYWNoKG9iaixmdW5jdGlvbih2YWx1ZSxrZXkpe2RzdC5oYXNPd25Qcm9wZXJ0eShrZXkpfHwoZHN0W2tleV09dmFsdWUpfSl9KSxkc3R9ZnVuY3Rpb24gYW5jZXN0b3JzKGZpcnN0LHNlY29uZCl7dmFyIHBhdGg9W107Zm9yKHZhciBuIGluIGZpcnN0LnBhdGgpe2lmKGZpcnN0LnBhdGhbbl0hPT1zZWNvbmQucGF0aFtuXSlicmVhaztwYXRoLnB1c2goZmlyc3QucGF0aFtuXSl9cmV0dXJuIHBhdGh9ZnVuY3Rpb24gb2JqZWN0S2V5cyhvYmplY3Qpe2lmKE9iamVjdC5rZXlzKXJldHVybiBPYmplY3Qua2V5cyhvYmplY3QpO3ZhciByZXN1bHQ9W107cmV0dXJuIGFuZ3VsYXIuZm9yRWFjaChvYmplY3QsZnVuY3Rpb24odmFsLGtleSl7cmVzdWx0LnB1c2goa2V5KX0pLHJlc3VsdH1mdW5jdGlvbiBhcnJheVNlYXJjaChhcnJheSx2YWx1ZSl7aWYoQXJyYXkucHJvdG90eXBlLmluZGV4T2YpcmV0dXJuIGFycmF5LmluZGV4T2YodmFsdWUsTnVtYmVyKGFyZ3VtZW50c1syXSl8fDApO3ZhciBsZW49YXJyYXkubGVuZ3RoPj4+MCxmcm9tPU51bWJlcihhcmd1bWVudHNbMl0pfHwwO2Zvcihmcm9tPTA+ZnJvbT9NYXRoLmNlaWwoZnJvbSk6TWF0aC5mbG9vcihmcm9tKSwwPmZyb20mJihmcm9tKz1sZW4pO2xlbj5mcm9tO2Zyb20rKylpZihmcm9tIGluIGFycmF5JiZhcnJheVtmcm9tXT09PXZhbHVlKXJldHVybiBmcm9tO3JldHVybi0xfWZ1bmN0aW9uIGluaGVyaXRQYXJhbXMoY3VycmVudFBhcmFtcyxuZXdQYXJhbXMsJGN1cnJlbnQsJHRvKXt2YXIgcGFyZW50UGFyYW1zLHBhcmVudHM9YW5jZXN0b3JzKCRjdXJyZW50LCR0byksaW5oZXJpdGVkPXt9LGluaGVyaXRMaXN0PVtdO2Zvcih2YXIgaSBpbiBwYXJlbnRzKWlmKHBhcmVudHNbaV0ucGFyYW1zJiYocGFyZW50UGFyYW1zPW9iamVjdEtleXMocGFyZW50c1tpXS5wYXJhbXMpLHBhcmVudFBhcmFtcy5sZW5ndGgpKWZvcih2YXIgaiBpbiBwYXJlbnRQYXJhbXMpYXJyYXlTZWFyY2goaW5oZXJpdExpc3QscGFyZW50UGFyYW1zW2pdKT49MHx8KGluaGVyaXRMaXN0LnB1c2gocGFyZW50UGFyYW1zW2pdKSxpbmhlcml0ZWRbcGFyZW50UGFyYW1zW2pdXT1jdXJyZW50UGFyYW1zW3BhcmVudFBhcmFtc1tqXV0pO3JldHVybiBleHRlbmQoe30saW5oZXJpdGVkLG5ld1BhcmFtcyl9ZnVuY3Rpb24gZXF1YWxGb3JLZXlzKGEsYixrZXlzKXtpZigha2V5cyl7a2V5cz1bXTtmb3IodmFyIG4gaW4gYSlrZXlzLnB1c2gobil9Zm9yKHZhciBpPTA7aTxrZXlzLmxlbmd0aDtpKyspe3ZhciBrPWtleXNbaV07aWYoYVtrXSE9YltrXSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBmaWx0ZXJCeUtleXMoa2V5cyx2YWx1ZXMpe3ZhciBmaWx0ZXJlZD17fTtyZXR1cm4gZm9yRWFjaChrZXlzLGZ1bmN0aW9uKG5hbWUpe2ZpbHRlcmVkW25hbWVdPXZhbHVlc1tuYW1lXX0pLGZpbHRlcmVkfWZ1bmN0aW9uICRSZXNvbHZlKCRxLCRpbmplY3Rvcil7dmFyIFZJU0lUX0lOX1BST0dSRVNTPTEsVklTSVRfRE9ORT0yLE5PVEhJTkc9e30sTk9fREVQRU5ERU5DSUVTPVtdLE5PX0xPQ0FMUz1OT1RISU5HLE5PX1BBUkVOVD1leHRlbmQoJHEud2hlbihOT1RISU5HKSx7JCRwcm9taXNlczpOT1RISU5HLCQkdmFsdWVzOk5PVEhJTkd9KTt0aGlzLnN0dWR5PWZ1bmN0aW9uKGludm9jYWJsZXMpe2Z1bmN0aW9uIHZpc2l0KHZhbHVlLGtleSl7aWYodmlzaXRlZFtrZXldIT09VklTSVRfRE9ORSl7aWYoY3ljbGUucHVzaChrZXkpLHZpc2l0ZWRba2V5XT09PVZJU0lUX0lOX1BST0dSRVNTKXRocm93IGN5Y2xlLnNwbGljZSgwLGN5Y2xlLmluZGV4T2Yoa2V5KSksbmV3IEVycm9yKCJDeWNsaWMgZGVwZW5kZW5jeTogIitjeWNsZS5qb2luKCIgLT4gIikpO2lmKHZpc2l0ZWRba2V5XT1WSVNJVF9JTl9QUk9HUkVTUyxpc1N0cmluZyh2YWx1ZSkpcGxhbi5wdXNoKGtleSxbZnVuY3Rpb24oKXtyZXR1cm4gJGluamVjdG9yLmdldCh2YWx1ZSl9XSxOT19ERVBFTkRFTkNJRVMpO2Vsc2V7dmFyIHBhcmFtcz0kaW5qZWN0b3IuYW5ub3RhdGUodmFsdWUpO2ZvckVhY2gocGFyYW1zLGZ1bmN0aW9uKHBhcmFtKXtwYXJhbSE9PWtleSYmaW52b2NhYmxlcy5oYXNPd25Qcm9wZXJ0eShwYXJhbSkmJnZpc2l0KGludm9jYWJsZXNbcGFyYW1dLHBhcmFtKX0pLHBsYW4ucHVzaChrZXksdmFsdWUscGFyYW1zKX1jeWNsZS5wb3AoKSx2aXNpdGVkW2tleV09VklTSVRfRE9ORX19ZnVuY3Rpb24gaXNSZXNvbHZlKHZhbHVlKXtyZXR1cm4gaXNPYmplY3QodmFsdWUpJiZ2YWx1ZS50aGVuJiZ2YWx1ZS4kJHByb21pc2VzfWlmKCFpc09iamVjdChpbnZvY2FibGVzKSl0aHJvdyBuZXcgRXJyb3IoIidpbnZvY2FibGVzJyBtdXN0IGJlIGFuIG9iamVjdCIpO3ZhciBwbGFuPVtdLGN5Y2xlPVtdLHZpc2l0ZWQ9e307cmV0dXJuIGZvckVhY2goaW52b2NhYmxlcyx2aXNpdCksaW52b2NhYmxlcz1jeWNsZT12aXNpdGVkPW51bGwsZnVuY3Rpb24obG9jYWxzLHBhcmVudCxzZWxmKXtmdW5jdGlvbiBkb25lKCl7LS13YWl0fHwobWVyZ2VkfHxtZXJnZSh2YWx1ZXMscGFyZW50LiQkdmFsdWVzKSxyZXN1bHQuJCR2YWx1ZXM9dmFsdWVzLHJlc3VsdC4kJHByb21pc2VzPSEwLGRlbGV0ZSByZXN1bHQuJCRpbmhlcml0ZWRWYWx1ZXMscmVzb2x1dGlvbi5yZXNvbHZlKHZhbHVlcykpfWZ1bmN0aW9uIGZhaWwocmVhc29uKXtyZXN1bHQuJCRmYWlsdXJlPXJlYXNvbixyZXNvbHV0aW9uLnJlamVjdChyZWFzb24pfWZ1bmN0aW9uIGludm9rZShrZXksaW52b2NhYmxlLHBhcmFtcyl7ZnVuY3Rpb24gb25mYWlsdXJlKHJlYXNvbil7aW52b2NhdGlvbi5yZWplY3QocmVhc29uKSxmYWlsKHJlYXNvbil9ZnVuY3Rpb24gcHJvY2VlZCgpe2lmKCFpc0RlZmluZWQocmVzdWx0LiQkZmFpbHVyZSkpdHJ5e2ludm9jYXRpb24ucmVzb2x2ZSgkaW5qZWN0b3IuaW52b2tlKGludm9jYWJsZSxzZWxmLHZhbHVlcykpLGludm9jYXRpb24ucHJvbWlzZS50aGVuKGZ1bmN0aW9uKHJlc3VsdCl7dmFsdWVzW2tleV09cmVzdWx0LGRvbmUoKX0sb25mYWlsdXJlKX1jYXRjaChlKXtvbmZhaWx1cmUoZSl9fXZhciBpbnZvY2F0aW9uPSRxLmRlZmVyKCksd2FpdFBhcmFtcz0wO2ZvckVhY2gocGFyYW1zLGZ1bmN0aW9uKGRlcCl7cHJvbWlzZXMuaGFzT3duUHJvcGVydHkoZGVwKSYmIWxvY2Fscy5oYXNPd25Qcm9wZXJ0eShkZXApJiYod2FpdFBhcmFtcysrLHByb21pc2VzW2RlcF0udGhlbihmdW5jdGlvbihyZXN1bHQpe3ZhbHVlc1tkZXBdPXJlc3VsdCwtLXdhaXRQYXJhbXN8fHByb2NlZWQoKX0sb25mYWlsdXJlKSl9KSx3YWl0UGFyYW1zfHxwcm9jZWVkKCkscHJvbWlzZXNba2V5XT1pbnZvY2F0aW9uLnByb21pc2V9aWYoaXNSZXNvbHZlKGxvY2FscykmJnNlbGY9PT11bmRlZmluZWQmJihzZWxmPXBhcmVudCxwYXJlbnQ9bG9jYWxzLGxvY2Fscz1udWxsKSxsb2NhbHMpe2lmKCFpc09iamVjdChsb2NhbHMpKXRocm93IG5ldyBFcnJvcigiJ2xvY2FscycgbXVzdCBiZSBhbiBvYmplY3QiKX1lbHNlIGxvY2Fscz1OT19MT0NBTFM7aWYocGFyZW50KXtpZighaXNSZXNvbHZlKHBhcmVudCkpdGhyb3cgbmV3IEVycm9yKCIncGFyZW50JyBtdXN0IGJlIGEgcHJvbWlzZSByZXR1cm5lZCBieSAkcmVzb2x2ZS5yZXNvbHZlKCkiKX1lbHNlIHBhcmVudD1OT19QQVJFTlQ7dmFyIHJlc29sdXRpb249JHEuZGVmZXIoKSxyZXN1bHQ9cmVzb2x1dGlvbi5wcm9taXNlLHByb21pc2VzPXJlc3VsdC4kJHByb21pc2VzPXt9LHZhbHVlcz1leHRlbmQoe30sbG9jYWxzKSx3YWl0PTErcGxhbi5sZW5ndGgvMyxtZXJnZWQ9ITE7aWYoaXNEZWZpbmVkKHBhcmVudC4kJGZhaWx1cmUpKXJldHVybiBmYWlsKHBhcmVudC4kJGZhaWx1cmUpLHJlc3VsdDtwYXJlbnQuJCRpbmhlcml0ZWRWYWx1ZXMmJm1lcmdlKHZhbHVlcyxwYXJlbnQuJCRpbmhlcml0ZWRWYWx1ZXMpLHBhcmVudC4kJHZhbHVlcz8obWVyZ2VkPW1lcmdlKHZhbHVlcyxwYXJlbnQuJCR2YWx1ZXMpLHJlc3VsdC4kJGluaGVyaXRlZFZhbHVlcz1wYXJlbnQuJCR2YWx1ZXMsZG9uZSgpKToocGFyZW50LiQkaW5oZXJpdGVkVmFsdWVzJiYocmVzdWx0LiQkaW5oZXJpdGVkVmFsdWVzPXBhcmVudC4kJGluaGVyaXRlZFZhbHVlcyksZXh0ZW5kKHByb21pc2VzLHBhcmVudC4kJHByb21pc2VzKSxwYXJlbnQudGhlbihkb25lLGZhaWwpKTtmb3IodmFyIGk9MCxpaT1wbGFuLmxlbmd0aDtpaT5pO2krPTMpbG9jYWxzLmhhc093blByb3BlcnR5KHBsYW5baV0pP2RvbmUoKTppbnZva2UocGxhbltpXSxwbGFuW2krMV0scGxhbltpKzJdKTtyZXR1cm4gcmVzdWx0fX0sdGhpcy5yZXNvbHZlPWZ1bmN0aW9uKGludm9jYWJsZXMsbG9jYWxzLHBhcmVudCxzZWxmKXtyZXR1cm4gdGhpcy5zdHVkeShpbnZvY2FibGVzKShsb2NhbHMscGFyZW50LHNlbGYpfX1mdW5jdGlvbiAkVGVtcGxhdGVGYWN0b3J5KCRodHRwLCR0ZW1wbGF0ZUNhY2hlLCRpbmplY3Rvcil7dGhpcy5mcm9tQ29uZmlnPWZ1bmN0aW9uKGNvbmZpZyxwYXJhbXMsbG9jYWxzKXtyZXR1cm4gaXNEZWZpbmVkKGNvbmZpZy50ZW1wbGF0ZSk/dGhpcy5mcm9tU3RyaW5nKGNvbmZpZy50ZW1wbGF0ZSxwYXJhbXMpOmlzRGVmaW5lZChjb25maWcudGVtcGxhdGVVcmwpP3RoaXMuZnJvbVVybChjb25maWcudGVtcGxhdGVVcmwscGFyYW1zKTppc0RlZmluZWQoY29uZmlnLnRlbXBsYXRlUHJvdmlkZXIpP3RoaXMuZnJvbVByb3ZpZGVyKGNvbmZpZy50ZW1wbGF0ZVByb3ZpZGVyLHBhcmFtcyxsb2NhbHMpOm51bGx9LHRoaXMuZnJvbVN0cmluZz1mdW5jdGlvbih0ZW1wbGF0ZSxwYXJhbXMpe3JldHVybiBpc0Z1bmN0aW9uKHRlbXBsYXRlKT90ZW1wbGF0ZShwYXJhbXMpOnRlbXBsYXRlfSx0aGlzLmZyb21Vcmw9ZnVuY3Rpb24odXJsLHBhcmFtcyl7cmV0dXJuIGlzRnVuY3Rpb24odXJsKSYmKHVybD11cmwocGFyYW1zKSksbnVsbD09dXJsP251bGw6JGh0dHAuZ2V0KHVybCx7Y2FjaGU6JHRlbXBsYXRlQ2FjaGV9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtyZXR1cm4gcmVzcG9uc2UuZGF0YX0pfSx0aGlzLmZyb21Qcm92aWRlcj1mdW5jdGlvbihwcm92aWRlcixwYXJhbXMsbG9jYWxzKXtyZXR1cm4gJGluamVjdG9yLmludm9rZShwcm92aWRlcixudWxsLGxvY2Fsc3x8e3BhcmFtczpwYXJhbXN9KX19ZnVuY3Rpb24gVXJsTWF0Y2hlcihwYXR0ZXJuLGNvbmZpZyl7ZnVuY3Rpb24gJHZhbHVlKHZhbHVlKXtyZXR1cm4gaXNEZWZpbmVkKHZhbHVlKT90aGlzLnR5cGUuZGVjb2RlKHZhbHVlKTokVXJsTWF0Y2hlckZhY3RvcnkuJCRnZXREZWZhdWx0VmFsdWUodGhpcyl9ZnVuY3Rpb24gYWRkUGFyYW1ldGVyKGlkLHR5cGUsY29uZmlnKXtpZighL15cdysoLStcdyspKiQvLnRlc3QoaWQpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBwYXJhbWV0ZXIgbmFtZSAnIitpZCsiJyBpbiBwYXR0ZXJuICciK3BhdHRlcm4rIiciKTtpZihwYXJhbXNbaWRdKXRocm93IG5ldyBFcnJvcigiRHVwbGljYXRlIHBhcmFtZXRlciBuYW1lICciK2lkKyInIGluIHBhdHRlcm4gJyIrcGF0dGVybisiJyIpO3BhcmFtc1tpZF09ZXh0ZW5kKHt0eXBlOnR5cGV8fG5ldyBUeXBlLCR2YWx1ZTokdmFsdWV9LGNvbmZpZyl9ZnVuY3Rpb24gcXVvdGVSZWdFeHAoc3RyaW5nLHBhdHRlcm4saXNPcHRpb25hbCl7dmFyIHJlc3VsdD1zdHJpbmcucmVwbGFjZSgvW1xcXFtcXVxeJCorPy4oKXx7fV0vZywiXFwkJiIpO2lmKCFwYXR0ZXJuKXJldHVybiByZXN1bHQ7dmFyIGZsYWc9aXNPcHRpb25hbD8iPyI6IiI7cmV0dXJuIHJlc3VsdCtmbGFnKyIoIitwYXR0ZXJuKyIpIitmbGFnfWZ1bmN0aW9uIHBhcmFtQ29uZmlnKHBhcmFtKXtpZighY29uZmlnLnBhcmFtc3x8IWNvbmZpZy5wYXJhbXNbcGFyYW1dKXJldHVybnt9O3ZhciBjZmc9Y29uZmlnLnBhcmFtc1twYXJhbV07cmV0dXJuIGlzT2JqZWN0KGNmZyk/Y2ZnOnt2YWx1ZTpjZmd9fWNvbmZpZz1hbmd1bGFyLmlzT2JqZWN0KGNvbmZpZyk/Y29uZmlnOnt9O3ZhciBtLHBsYWNlaG9sZGVyPS8oWzoqXSkoXHcrKXxceyhcdyspKD86XDooKD86W157fVxcXSt8XFwufFx7KD86W157fVxcXSt8XFwuKSpcfSkrKSk/XH0vZyxjb21waWxlZD0iXiIsbGFzdD0wLHNlZ21lbnRzPXRoaXMuc2VnbWVudHM9W10scGFyYW1zPXRoaXMucGFyYW1zPXt9O3RoaXMuc291cmNlPXBhdHRlcm47Zm9yKHZhciBpZCxyZWdleHAsc2VnbWVudCx0eXBlLGNmZzsobT1wbGFjZWhvbGRlci5leGVjKHBhdHRlcm4pKSYmKGlkPW1bMl18fG1bM10scmVnZXhwPW1bNF18fCgiKiI9PW1bMV0/Ii4qIjoiW14vXSoiKSxzZWdtZW50PXBhdHRlcm4uc3Vic3RyaW5nKGxhc3QsbS5pbmRleCksdHlwZT10aGlzLiR0eXBlc1tyZWdleHBdfHxuZXcgVHlwZSh7cGF0dGVybjpuZXcgUmVnRXhwKHJlZ2V4cCl9KSxjZmc9cGFyYW1Db25maWcoaWQpLCEoc2VnbWVudC5pbmRleE9mKCI/Iik+PTApKTspY29tcGlsZWQrPXF1b3RlUmVnRXhwKHNlZ21lbnQsdHlwZS4kc3ViUGF0dGVybigpLGlzRGVmaW5lZChjZmcudmFsdWUpKSxhZGRQYXJhbWV0ZXIoaWQsdHlwZSxjZmcpLHNlZ21lbnRzLnB1c2goc2VnbWVudCksbGFzdD1wbGFjZWhvbGRlci5sYXN0SW5kZXg7c2VnbWVudD1wYXR0ZXJuLnN1YnN0cmluZyhsYXN0KTt2YXIgaT1zZWdtZW50LmluZGV4T2YoIj8iKTtpZihpPj0wKXt2YXIgc2VhcmNoPXRoaXMuc291cmNlU2VhcmNoPXNlZ21lbnQuc3Vic3RyaW5nKGkpO3NlZ21lbnQ9c2VnbWVudC5zdWJzdHJpbmcoMCxpKSx0aGlzLnNvdXJjZVBhdGg9cGF0dGVybi5zdWJzdHJpbmcoMCxsYXN0K2kpLGZvckVhY2goc2VhcmNoLnN1YnN0cmluZygxKS5zcGxpdCgvWyY/XS8pLGZ1bmN0aW9uKGtleSl7YWRkUGFyYW1ldGVyKGtleSxudWxsLHBhcmFtQ29uZmlnKGtleSkpfSl9ZWxzZSB0aGlzLnNvdXJjZVBhdGg9cGF0dGVybix0aGlzLnNvdXJjZVNlYXJjaD0iIjtjb21waWxlZCs9cXVvdGVSZWdFeHAoc2VnbWVudCkrKGNvbmZpZy5zdHJpY3Q9PT0hMT8iLz8iOiIiKSsiJCIsc2VnbWVudHMucHVzaChzZWdtZW50KSx0aGlzLnJlZ2V4cD1uZXcgUmVnRXhwKGNvbXBpbGVkLGNvbmZpZy5jYXNlSW5zZW5zaXRpdmU/ImkiOnVuZGVmaW5lZCksdGhpcy5wcmVmaXg9c2VnbWVudHNbMF19ZnVuY3Rpb24gVHlwZShjb25maWcpe2V4dGVuZCh0aGlzLGNvbmZpZyl9ZnVuY3Rpb24gJFVybE1hdGNoZXJGYWN0b3J5KCl7ZnVuY3Rpb24gZ2V0RGVmYXVsdENvbmZpZygpe3JldHVybntzdHJpY3Q6aXNTdHJpY3RNb2RlLGNhc2VJbnNlbnNpdGl2ZTppc0Nhc2VJbnNlbnNpdGl2ZX19ZnVuY3Rpb24gaXNJbmplY3RhYmxlKHZhbHVlKXtyZXR1cm4gaXNGdW5jdGlvbih2YWx1ZSl8fGlzQXJyYXkodmFsdWUpJiZpc0Z1bmN0aW9uKHZhbHVlW3ZhbHVlLmxlbmd0aC0xXSl9ZnVuY3Rpb24gZmx1c2hUeXBlUXVldWUoKXtmb3JFYWNoKHR5cGVRdWV1ZSxmdW5jdGlvbih0eXBlKXtpZihVcmxNYXRjaGVyLnByb3RvdHlwZS4kdHlwZXNbdHlwZS5uYW1lXSl0aHJvdyBuZXcgRXJyb3IoIkEgdHlwZSBuYW1lZCAnIit0eXBlLm5hbWUrIicgaGFzIGFscmVhZHkgYmVlbiBkZWZpbmVkLiIpO3ZhciBkZWY9bmV3IFR5cGUoaXNJbmplY3RhYmxlKHR5cGUuZGVmKT9pbmplY3Rvci5pbnZva2UodHlwZS5kZWYpOnR5cGUuZGVmKTtVcmxNYXRjaGVyLnByb3RvdHlwZS4kdHlwZXNbdHlwZS5uYW1lXT1kZWZ9KX12YXIgaW5qZWN0b3IsaXNDYXNlSW5zZW5zaXRpdmU9ITEsaXNTdHJpY3RNb2RlPSEwLGVucXVldWU9ITAsdHlwZVF1ZXVlPVtdLGRlZmF1bHRUeXBlcz17ImludCI6e2RlY29kZTpmdW5jdGlvbih2YWwpe3JldHVybiBwYXJzZUludCh2YWwsMTApfSxpczpmdW5jdGlvbih2YWwpe3JldHVybiBpc0RlZmluZWQodmFsKT90aGlzLmRlY29kZSh2YWwudG9TdHJpbmcoKSk9PT12YWw6ITF9LHBhdHRlcm46L1xkKy99LGJvb2w6e2VuY29kZTpmdW5jdGlvbih2YWwpe3JldHVybiB2YWw/MTowfSxkZWNvZGU6ZnVuY3Rpb24odmFsKXtyZXR1cm4gMD09PXBhcnNlSW50KHZhbCwxMCk/ITE6ITB9LGlzOmZ1bmN0aW9uKHZhbCl7cmV0dXJuIHZhbD09PSEwfHx2YWw9PT0hMX0scGF0dGVybjovMHwxL30sc3RyaW5nOntwYXR0ZXJuOi9bXlwvXSovfSxkYXRlOntlcXVhbHM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS50b0lTT1N0cmluZygpPT09Yi50b0lTT1N0cmluZygpfSxkZWNvZGU6ZnVuY3Rpb24odmFsKXtyZXR1cm4gbmV3IERhdGUodmFsKX0sZW5jb2RlOmZ1bmN0aW9uKHZhbCl7cmV0dXJuW3ZhbC5nZXRGdWxsWWVhcigpLCgiMCIrKHZhbC5nZXRNb250aCgpKzEpKS5zbGljZSgtMiksKCIwIit2YWwuZ2V0RGF0ZSgpKS5zbGljZSgtMildLmpvaW4oIi0iKX0scGF0dGVybjovWzAtOV17NH0tKD86MFsxLTldfDFbMC0yXSktKD86MFsxLTldfFsxLTJdWzAtOV18M1swLTFdKS99fTskVXJsTWF0Y2hlckZhY3RvcnkuJCRnZXREZWZhdWx0VmFsdWU9ZnVuY3Rpb24oY29uZmlnKXtpZighaXNJbmplY3RhYmxlKGNvbmZpZy52YWx1ZSkpcmV0dXJuIGNvbmZpZy52YWx1ZTtpZighaW5qZWN0b3IpdGhyb3cgbmV3IEVycm9yKCJJbmplY3RhYmxlIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGF0IGNvbmZpZ3VyYXRpb24gdGltZSIpO3JldHVybiBpbmplY3Rvci5pbnZva2UoY29uZmlnLnZhbHVlKX0sdGhpcy5jYXNlSW5zZW5zaXRpdmU9ZnVuY3Rpb24odmFsdWUpe2lzQ2FzZUluc2Vuc2l0aXZlPXZhbHVlfSx0aGlzLnN0cmljdE1vZGU9ZnVuY3Rpb24odmFsdWUpe2lzU3RyaWN0TW9kZT12YWx1ZX0sdGhpcy5jb21waWxlPWZ1bmN0aW9uKHBhdHRlcm4sY29uZmlnKXtyZXR1cm4gbmV3IFVybE1hdGNoZXIocGF0dGVybixleHRlbmQoZ2V0RGVmYXVsdENvbmZpZygpLGNvbmZpZykpfSx0aGlzLmlzTWF0Y2hlcj1mdW5jdGlvbihvKXtpZighaXNPYmplY3QobykpcmV0dXJuITE7dmFyIHJlc3VsdD0hMDtyZXR1cm4gZm9yRWFjaChVcmxNYXRjaGVyLnByb3RvdHlwZSxmdW5jdGlvbih2YWwsbmFtZSl7aXNGdW5jdGlvbih2YWwpJiYocmVzdWx0PXJlc3VsdCYmaXNEZWZpbmVkKG9bbmFtZV0pJiZpc0Z1bmN0aW9uKG9bbmFtZV0pKX0pLHJlc3VsdH0sdGhpcy50eXBlPWZ1bmN0aW9uKG5hbWUsZGVmKXtyZXR1cm4gaXNEZWZpbmVkKGRlZik/KHR5cGVRdWV1ZS5wdXNoKHtuYW1lOm5hbWUsZGVmOmRlZn0pLGVucXVldWV8fGZsdXNoVHlwZVF1ZXVlKCksdGhpcyk6VXJsTWF0Y2hlci5wcm90b3R5cGUuJHR5cGVzW25hbWVdfSx0aGlzLiRnZXQ9WyIkaW5qZWN0b3IiLGZ1bmN0aW9uKCRpbmplY3Rvcil7cmV0dXJuIGluamVjdG9yPSRpbmplY3RvcixlbnF1ZXVlPSExLFVybE1hdGNoZXIucHJvdG90eXBlLiR0eXBlcz17fSxmbHVzaFR5cGVRdWV1ZSgpLGZvckVhY2goZGVmYXVsdFR5cGVzLGZ1bmN0aW9uKHR5cGUsbmFtZSl7VXJsTWF0Y2hlci5wcm90b3R5cGUuJHR5cGVzW25hbWVdfHwoVXJsTWF0Y2hlci5wcm90b3R5cGUuJHR5cGVzW25hbWVdPW5ldyBUeXBlKHR5cGUpKX0pLHRoaXN9XX1mdW5jdGlvbiAkVXJsUm91dGVyUHJvdmlkZXIoJGxvY2F0aW9uUHJvdmlkZXIsJHVybE1hdGNoZXJGYWN0b3J5KXtmdW5jdGlvbiByZWdFeHBQcmVmaXgocmUpe3ZhciBwcmVmaXg9L15cXigoPzpcXFteYS16QS1aMC05XXxbXlxcXFtcXVxeJCorPy4oKXx7fV0rKSopLy5leGVjKHJlLnNvdXJjZSk7cmV0dXJuIG51bGwhPXByZWZpeD9wcmVmaXhbMV0ucmVwbGFjZSgvXFwoLikvZywiJDEiKToiIn1mdW5jdGlvbiBpbnRlcnBvbGF0ZShwYXR0ZXJuLG1hdGNoKXtyZXR1cm4gcGF0dGVybi5yZXBsYWNlKC9cJChcJHxcZHsxLDJ9KS8sZnVuY3Rpb24obSx3aGF0KXtyZXR1cm4gbWF0Y2hbIiQiPT09d2hhdD8wOk51bWJlcih3aGF0KV19KX1mdW5jdGlvbiBoYW5kbGVJZk1hdGNoKCRpbmplY3RvcixoYW5kbGVyLG1hdGNoKXtpZighbWF0Y2gpcmV0dXJuITE7dmFyIHJlc3VsdD0kaW5qZWN0b3IuaW52b2tlKGhhbmRsZXIsaGFuZGxlcix7JG1hdGNoOm1hdGNofSk7cmV0dXJuIGlzRGVmaW5lZChyZXN1bHQpP3Jlc3VsdDohMH1mdW5jdGlvbiAkZ2V0KCRsb2NhdGlvbiwkcm9vdFNjb3BlLCRpbmplY3RvciwkYnJvd3Nlcil7ZnVuY3Rpb24gYXBwZW5kQmFzZVBhdGgodXJsLGlzSHRtbDUsYWJzb2x1dGUpe3JldHVybiIvIj09PWJhc2VIcmVmP3VybDppc0h0bWw1P2Jhc2VIcmVmLnNsaWNlKDAsLTEpK3VybDphYnNvbHV0ZT9iYXNlSHJlZi5zbGljZSgxKSt1cmw6dXJsfWZ1bmN0aW9uIHVwZGF0ZShldnQpe2Z1bmN0aW9uIGNoZWNrKHJ1bGUpe3ZhciBoYW5kbGVkPXJ1bGUoJGluamVjdG9yLCRsb2NhdGlvbik7cmV0dXJuIGhhbmRsZWQ/KGlzU3RyaW5nKGhhbmRsZWQpJiYkbG9jYXRpb24ucmVwbGFjZSgpLnVybChoYW5kbGVkKSwhMCk6ITF9aWYoIWV2dHx8IWV2dC5kZWZhdWx0UHJldmVudGVkKXt2YXIgaSxuPXJ1bGVzLmxlbmd0aDtmb3IoaT0wO24+aTtpKyspaWYoY2hlY2socnVsZXNbaV0pKXJldHVybjtvdGhlcndpc2UmJmNoZWNrKG90aGVyd2lzZSl9fWZ1bmN0aW9uIGxpc3Rlbigpe3JldHVybiBsaXN0ZW5lcj1saXN0ZW5lcnx8JHJvb3RTY29wZS4kb24oIiRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3MiLHVwZGF0ZSl9dmFyIGJhc2VIcmVmPSRicm93c2VyLmJhc2VIcmVmKCksbG9jYXRpb249JGxvY2F0aW9uLnVybCgpO3JldHVybiBpbnRlcmNlcHREZWZlcnJlZHx8bGlzdGVuKCkse3N5bmM6ZnVuY3Rpb24oKXt1cGRhdGUoKX0sbGlzdGVuOmZ1bmN0aW9uKCl7cmV0dXJuIGxpc3RlbigpfSx1cGRhdGU6ZnVuY3Rpb24ocmVhZCl7cmV0dXJuIHJlYWQ/dm9pZChsb2NhdGlvbj0kbG9jYXRpb24udXJsKCkpOnZvaWQoJGxvY2F0aW9uLnVybCgpIT09bG9jYXRpb24mJigkbG9jYXRpb24udXJsKGxvY2F0aW9uKSwkbG9jYXRpb24ucmVwbGFjZSgpKSl9LHB1c2g6ZnVuY3Rpb24odXJsTWF0Y2hlcixwYXJhbXMsb3B0aW9ucyl7JGxvY2F0aW9uLnVybCh1cmxNYXRjaGVyLmZvcm1hdChwYXJhbXN8fHt9KSksb3B0aW9ucyYmb3B0aW9ucy5yZXBsYWNlJiYkbG9jYXRpb24ucmVwbGFjZSgpfSxocmVmOmZ1bmN0aW9uKHVybE1hdGNoZXIscGFyYW1zLG9wdGlvbnMpe2lmKCF1cmxNYXRjaGVyLnZhbGlkYXRlcyhwYXJhbXMpKXJldHVybiBudWxsO3ZhciBpc0h0bWw1PSRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSgpLHVybD11cmxNYXRjaGVyLmZvcm1hdChwYXJhbXMpO2lmKG9wdGlvbnM9b3B0aW9uc3x8e30saXNIdG1sNXx8bnVsbD09PXVybHx8KHVybD0iIyIrJGxvY2F0aW9uUHJvdmlkZXIuaGFzaFByZWZpeCgpK3VybCksdXJsPWFwcGVuZEJhc2VQYXRoKHVybCxpc0h0bWw1LG9wdGlvbnMuYWJzb2x1dGUpLCFvcHRpb25zLmFic29sdXRlfHwhdXJsKXJldHVybiB1cmw7dmFyIHNsYXNoPSFpc0h0bWw1JiZ1cmw/Ii8iOiIiLHBvcnQ9JGxvY2F0aW9uLnBvcnQoKTtyZXR1cm4gcG9ydD04MD09PXBvcnR8fDQ0Mz09PXBvcnQ/IiI6IjoiK3BvcnQsWyRsb2NhdGlvbi5wcm90b2NvbCgpLCI6Ly8iLCRsb2NhdGlvbi5ob3N0KCkscG9ydCxzbGFzaCx1cmxdLmpvaW4oIiIpfX19dmFyIGxpc3RlbmVyLHJ1bGVzPVtdLG90aGVyd2lzZT1udWxsLGludGVyY2VwdERlZmVycmVkPSExO3RoaXMucnVsZT1mdW5jdGlvbihydWxlKXtpZighaXNGdW5jdGlvbihydWxlKSl0aHJvdyBuZXcgRXJyb3IoIidydWxlJyBtdXN0IGJlIGEgZnVuY3Rpb24iKTtyZXR1cm4gcnVsZXMucHVzaChydWxlKSx0aGlzfSx0aGlzLm90aGVyd2lzZT1mdW5jdGlvbihydWxlKXtpZihpc1N0cmluZyhydWxlKSl7dmFyIHJlZGlyZWN0PXJ1bGU7cnVsZT1mdW5jdGlvbigpe3JldHVybiByZWRpcmVjdH19ZWxzZSBpZighaXNGdW5jdGlvbihydWxlKSl0aHJvdyBuZXcgRXJyb3IoIidydWxlJyBtdXN0IGJlIGEgZnVuY3Rpb24iKTtyZXR1cm4gb3RoZXJ3aXNlPXJ1bGUsdGhpc30sdGhpcy53aGVuPWZ1bmN0aW9uKHdoYXQsaGFuZGxlcil7dmFyIHJlZGlyZWN0LGhhbmRsZXJJc1N0cmluZz1pc1N0cmluZyhoYW5kbGVyKTtpZihpc1N0cmluZyh3aGF0KSYmKHdoYXQ9JHVybE1hdGNoZXJGYWN0b3J5LmNvbXBpbGUod2hhdCkpLCFoYW5kbGVySXNTdHJpbmcmJiFpc0Z1bmN0aW9uKGhhbmRsZXIpJiYhaXNBcnJheShoYW5kbGVyKSl0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgJ2hhbmRsZXInIGluIHdoZW4oKSIpO3ZhciBzdHJhdGVnaWVzPXttYXRjaGVyOmZ1bmN0aW9uKHdoYXQsaGFuZGxlcil7cmV0dXJuIGhhbmRsZXJJc1N0cmluZyYmKHJlZGlyZWN0PSR1cmxNYXRjaGVyRmFjdG9yeS5jb21waWxlKGhhbmRsZXIpLGhhbmRsZXI9WyIkbWF0Y2giLGZ1bmN0aW9uKCRtYXRjaCl7cmV0dXJuIHJlZGlyZWN0LmZvcm1hdCgkbWF0Y2gpfV0pLGV4dGVuZChmdW5jdGlvbigkaW5qZWN0b3IsJGxvY2F0aW9uKXtyZXR1cm4gaGFuZGxlSWZNYXRjaCgkaW5qZWN0b3IsaGFuZGxlcix3aGF0LmV4ZWMoJGxvY2F0aW9uLnBhdGgoKSwkbG9jYXRpb24uc2VhcmNoKCkpKX0se3ByZWZpeDppc1N0cmluZyh3aGF0LnByZWZpeCk/d2hhdC5wcmVmaXg6IiJ9KX0scmVnZXg6ZnVuY3Rpb24od2hhdCxoYW5kbGVyKXtpZih3aGF0Lmdsb2JhbHx8d2hhdC5zdGlja3kpdGhyb3cgbmV3IEVycm9yKCJ3aGVuKCkgUmVnRXhwIG11c3Qgbm90IGJlIGdsb2JhbCBvciBzdGlja3kiKTtyZXR1cm4gaGFuZGxlcklzU3RyaW5nJiYocmVkaXJlY3Q9aGFuZGxlcixoYW5kbGVyPVsiJG1hdGNoIixmdW5jdGlvbigkbWF0Y2gpe3JldHVybiBpbnRlcnBvbGF0ZShyZWRpcmVjdCwkbWF0Y2gpfV0pLGV4dGVuZChmdW5jdGlvbigkaW5qZWN0b3IsJGxvY2F0aW9uKXtyZXR1cm4gaGFuZGxlSWZNYXRjaCgkaW5qZWN0b3IsaGFuZGxlcix3aGF0LmV4ZWMoJGxvY2F0aW9uLnBhdGgoKSkpfSx7cHJlZml4OnJlZ0V4cFByZWZpeCh3aGF0KX0pfX0sY2hlY2s9e21hdGNoZXI6JHVybE1hdGNoZXJGYWN0b3J5LmlzTWF0Y2hlcih3aGF0KSxyZWdleDp3aGF0IGluc3RhbmNlb2YgUmVnRXhwfTtmb3IodmFyIG4gaW4gY2hlY2spaWYoY2hlY2tbbl0pcmV0dXJuIHRoaXMucnVsZShzdHJhdGVnaWVzW25dKHdoYXQsaGFuZGxlcikpO3Rocm93IG5ldyBFcnJvcigiaW52YWxpZCAnd2hhdCcgaW4gd2hlbigpIil9LHRoaXMuZGVmZXJJbnRlcmNlcHQ9ZnVuY3Rpb24oZGVmZXIpe2RlZmVyPT09dW5kZWZpbmVkJiYoZGVmZXI9ITApLGludGVyY2VwdERlZmVycmVkPWRlZmVyfSx0aGlzLiRnZXQ9JGdldCwkZ2V0LiRpbmplY3Q9WyIkbG9jYXRpb24iLCIkcm9vdFNjb3BlIiwiJGluamVjdG9yIiwiJGJyb3dzZXIiXX1mdW5jdGlvbiAkU3RhdGVQcm92aWRlcigkdXJsUm91dGVyUHJvdmlkZXIsJHVybE1hdGNoZXJGYWN0b3J5KXtmdW5jdGlvbiBpc1JlbGF0aXZlKHN0YXRlTmFtZSl7cmV0dXJuIDA9PT1zdGF0ZU5hbWUuaW5kZXhPZigiLiIpfHwwPT09c3RhdGVOYW1lLmluZGV4T2YoIl4iKX1mdW5jdGlvbiBmaW5kU3RhdGUoc3RhdGVPck5hbWUsYmFzZSl7aWYoIXN0YXRlT3JOYW1lKXJldHVybiB1bmRlZmluZWQ7dmFyIGlzU3RyPWlzU3RyaW5nKHN0YXRlT3JOYW1lKSxuYW1lPWlzU3RyP3N0YXRlT3JOYW1lOnN0YXRlT3JOYW1lLm5hbWUscGF0aD1pc1JlbGF0aXZlKG5hbWUpO2lmKHBhdGgpe2lmKCFiYXNlKXRocm93IG5ldyBFcnJvcigiTm8gcmVmZXJlbmNlIHBvaW50IGdpdmVuIGZvciBwYXRoICciK25hbWUrIiciKTtmb3IodmFyIHJlbD1uYW1lLnNwbGl0KCIuIiksaT0wLHBhdGhMZW5ndGg9cmVsLmxlbmd0aCxjdXJyZW50PWJhc2U7cGF0aExlbmd0aD5pO2krKylpZigiIiE9PXJlbFtpXXx8MCE9PWkpe2lmKCJeIiE9PXJlbFtpXSlicmVhaztpZighY3VycmVudC5wYXJlbnQpdGhyb3cgbmV3IEVycm9yKCJQYXRoICciK25hbWUrIicgbm90IHZhbGlkIGZvciBzdGF0ZSAnIitiYXNlLm5hbWUrIiciKTtjdXJyZW50PWN1cnJlbnQucGFyZW50fWVsc2UgY3VycmVudD1iYXNlO3JlbD1yZWwuc2xpY2UoaSkuam9pbigiLiIpLG5hbWU9Y3VycmVudC5uYW1lKyhjdXJyZW50Lm5hbWUmJnJlbD8iLiI6IiIpK3JlbH12YXIgc3RhdGU9c3RhdGVzW25hbWVdO3JldHVybiFzdGF0ZXx8IWlzU3RyJiYoaXNTdHJ8fHN0YXRlIT09c3RhdGVPck5hbWUmJnN0YXRlLnNlbGYhPT1zdGF0ZU9yTmFtZSk/dW5kZWZpbmVkOnN0YXRlfWZ1bmN0aW9uIHF1ZXVlU3RhdGUocGFyZW50TmFtZSxzdGF0ZSl7cXVldWVbcGFyZW50TmFtZV18fChxdWV1ZVtwYXJlbnROYW1lXT1bXSkscXVldWVbcGFyZW50TmFtZV0ucHVzaChzdGF0ZSl9ZnVuY3Rpb24gcmVnaXN0ZXJTdGF0ZShzdGF0ZSl7c3RhdGU9aW5oZXJpdChzdGF0ZSx7c2VsZjpzdGF0ZSxyZXNvbHZlOnN0YXRlLnJlc29sdmV8fHt9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubmFtZX19KTt2YXIgbmFtZT1zdGF0ZS5uYW1lO2lmKCFpc1N0cmluZyhuYW1lKXx8bmFtZS5pbmRleE9mKCJAIik+PTApdGhyb3cgbmV3IEVycm9yKCJTdGF0ZSBtdXN0IGhhdmUgYSB2YWxpZCBuYW1lIik7aWYoc3RhdGVzLmhhc093blByb3BlcnR5KG5hbWUpKXRocm93IG5ldyBFcnJvcigiU3RhdGUgJyIrbmFtZSsiJycgaXMgYWxyZWFkeSBkZWZpbmVkIik7dmFyIHBhcmVudE5hbWU9LTEhPT1uYW1lLmluZGV4T2YoIi4iKT9uYW1lLnN1YnN0cmluZygwLG5hbWUubGFzdEluZGV4T2YoIi4iKSk6aXNTdHJpbmcoc3RhdGUucGFyZW50KT9zdGF0ZS5wYXJlbnQ6IiI7aWYocGFyZW50TmFtZSYmIXN0YXRlc1twYXJlbnROYW1lXSlyZXR1cm4gcXVldWVTdGF0ZShwYXJlbnROYW1lLHN0YXRlLnNlbGYpO2Zvcih2YXIga2V5IGluIHN0YXRlQnVpbGRlcilpc0Z1bmN0aW9uKHN0YXRlQnVpbGRlcltrZXldKSYmKHN0YXRlW2tleV09c3RhdGVCdWlsZGVyW2tleV0oc3RhdGUsc3RhdGVCdWlsZGVyLiRkZWxlZ2F0ZXNba2V5XSkpO2lmKHN0YXRlc1tuYW1lXT1zdGF0ZSwhc3RhdGVbYWJzdHJhY3RLZXldJiZzdGF0ZS51cmwmJiR1cmxSb3V0ZXJQcm92aWRlci53aGVuKHN0YXRlLnVybCxbIiRtYXRjaCIsIiRzdGF0ZVBhcmFtcyIsZnVuY3Rpb24oJG1hdGNoLCRzdGF0ZVBhcmFtcyl7JHN0YXRlLiRjdXJyZW50Lm5hdmlnYWJsZT09c3RhdGUmJmVxdWFsRm9yS2V5cygkbWF0Y2gsJHN0YXRlUGFyYW1zKXx8JHN0YXRlLnRyYW5zaXRpb25UbyhzdGF0ZSwkbWF0Y2gse2xvY2F0aW9uOiExfSl9XSkscXVldWVbbmFtZV0pZm9yKHZhciBpPTA7aTxxdWV1ZVtuYW1lXS5sZW5ndGg7aSsrKXJlZ2lzdGVyU3RhdGUocXVldWVbbmFtZV1baV0pO3JldHVybiBzdGF0ZX1mdW5jdGlvbiBpc0dsb2IodGV4dCl7cmV0dXJuIHRleHQuaW5kZXhPZigiKiIpPi0xfWZ1bmN0aW9uIGRvZXNTdGF0ZU1hdGNoR2xvYihnbG9iKXt2YXIgZ2xvYlNlZ21lbnRzPWdsb2Iuc3BsaXQoIi4iKSxzZWdtZW50cz0kc3RhdGUuJGN1cnJlbnQubmFtZS5zcGxpdCgiLiIpO2lmKCIqKiI9PT1nbG9iU2VnbWVudHNbMF0mJihzZWdtZW50cz1zZWdtZW50cy5zbGljZShzZWdtZW50cy5pbmRleE9mKGdsb2JTZWdtZW50c1sxXSkpLHNlZ21lbnRzLnVuc2hpZnQoIioqIikpLCIqKiI9PT1nbG9iU2VnbWVudHNbZ2xvYlNlZ21lbnRzLmxlbmd0aC0xXSYmKHNlZ21lbnRzLnNwbGljZShzZWdtZW50cy5pbmRleE9mKGdsb2JTZWdtZW50c1tnbG9iU2VnbWVudHMubGVuZ3RoLTJdKSsxLE51bWJlci5NQVhfVkFMVUUpLHNlZ21lbnRzLnB1c2goIioqIikpLGdsb2JTZWdtZW50cy5sZW5ndGghPXNlZ21lbnRzLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIGk9MCxsPWdsb2JTZWdtZW50cy5sZW5ndGg7bD5pO2krKykiKiI9PT1nbG9iU2VnbWVudHNbaV0mJihzZWdtZW50c1tpXT0iKiIpO3JldHVybiBzZWdtZW50cy5qb2luKCIiKT09PWdsb2JTZWdtZW50cy5qb2luKCIiKX1mdW5jdGlvbiBkZWNvcmF0b3IobmFtZSxmdW5jKXtyZXR1cm4gaXNTdHJpbmcobmFtZSkmJiFpc0RlZmluZWQoZnVuYyk/c3RhdGVCdWlsZGVyW25hbWVdOmlzRnVuY3Rpb24oZnVuYykmJmlzU3RyaW5nKG5hbWUpPyhzdGF0ZUJ1aWxkZXJbbmFtZV0mJiFzdGF0ZUJ1aWxkZXIuJGRlbGVnYXRlc1tuYW1lXSYmKHN0YXRlQnVpbGRlci4kZGVsZWdhdGVzW25hbWVdPXN0YXRlQnVpbGRlcltuYW1lXSksc3RhdGVCdWlsZGVyW25hbWVdPWZ1bmMsdGhpcyk6dGhpc31mdW5jdGlvbiBzdGF0ZShuYW1lLGRlZmluaXRpb24pe3JldHVybiBpc09iamVjdChuYW1lKT9kZWZpbml0aW9uPW5hbWU6ZGVmaW5pdGlvbi5uYW1lPW5hbWUscmVnaXN0ZXJTdGF0ZShkZWZpbml0aW9uKSx0aGlzfWZ1bmN0aW9uICRnZXQoJHJvb3RTY29wZSwkcSwkdmlldywkaW5qZWN0b3IsJHJlc29sdmUsJHN0YXRlUGFyYW1zLCR1cmxSb3V0ZXIpe2Z1bmN0aW9uIGhhbmRsZVJlZGlyZWN0KHJlZGlyZWN0LHN0YXRlLHBhcmFtcyxvcHRpb25zKXt2YXIgZXZ0PSRyb290U2NvcGUuJGJyb2FkY2FzdCgiJHN0YXRlTm90Rm91bmQiLHJlZGlyZWN0LHN0YXRlLHBhcmFtcyk7aWYoZXZ0LmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuICR1cmxSb3V0ZXIudXBkYXRlKCksVHJhbnNpdGlvbkFib3J0ZWQ7aWYoIWV2dC5yZXRyeSlyZXR1cm4gbnVsbDtpZihvcHRpb25zLiRyZXRyeSlyZXR1cm4gJHVybFJvdXRlci51cGRhdGUoKSxUcmFuc2l0aW9uRmFpbGVkO3ZhciByZXRyeVRyYW5zaXRpb249JHN0YXRlLnRyYW5zaXRpb249JHEud2hlbihldnQucmV0cnkpO3JldHVybiByZXRyeVRyYW5zaXRpb24udGhlbihmdW5jdGlvbigpe3JldHVybiByZXRyeVRyYW5zaXRpb24hPT0kc3RhdGUudHJhbnNpdGlvbj9UcmFuc2l0aW9uU3VwZXJzZWRlZDoocmVkaXJlY3Qub3B0aW9ucy4kcmV0cnk9ITAsJHN0YXRlLnRyYW5zaXRpb25UbyhyZWRpcmVjdC50byxyZWRpcmVjdC50b1BhcmFtcyxyZWRpcmVjdC5vcHRpb25zKSl9LGZ1bmN0aW9uKCl7cmV0dXJuIFRyYW5zaXRpb25BYm9ydGVkfSksJHVybFJvdXRlci51cGRhdGUoKSxyZXRyeVRyYW5zaXRpb259ZnVuY3Rpb24gcmVzb2x2ZVN0YXRlKHN0YXRlLHBhcmFtcyxwYXJhbXNBcmVGaWx0ZXJlZCxpbmhlcml0ZWQsZHN0KXt2YXIgJHN0YXRlUGFyYW1zPXBhcmFtc0FyZUZpbHRlcmVkP3BhcmFtczpmaWx0ZXJCeUtleXMob2JqZWN0S2V5cyhzdGF0ZS5wYXJhbXMpLHBhcmFtcyksbG9jYWxzPXskc3RhdGVQYXJhbXM6JHN0YXRlUGFyYW1zfTtkc3QucmVzb2x2ZT0kcmVzb2x2ZS5yZXNvbHZlKHN0YXRlLnJlc29sdmUsbG9jYWxzLGRzdC5yZXNvbHZlLHN0YXRlKTt2YXIgcHJvbWlzZXM9W2RzdC5yZXNvbHZlLnRoZW4oZnVuY3Rpb24oZ2xvYmFscyl7ZHN0Lmdsb2JhbHM9Z2xvYmFsc30pXTtyZXR1cm4gaW5oZXJpdGVkJiZwcm9taXNlcy5wdXNoKGluaGVyaXRlZCksZm9yRWFjaChzdGF0ZS52aWV3cyxmdW5jdGlvbih2aWV3LG5hbWUpe3ZhciBpbmplY3RhYmxlcz12aWV3LnJlc29sdmUmJnZpZXcucmVzb2x2ZSE9PXN0YXRlLnJlc29sdmU/dmlldy5yZXNvbHZlOnt9O2luamVjdGFibGVzLiR0ZW1wbGF0ZT1bZnVuY3Rpb24oKXtyZXR1cm4gJHZpZXcubG9hZChuYW1lLHt2aWV3OnZpZXcsbG9jYWxzOmxvY2FscyxwYXJhbXM6JHN0YXRlUGFyYW1zfSl8fCIifV0scHJvbWlzZXMucHVzaCgkcmVzb2x2ZS5yZXNvbHZlKGluamVjdGFibGVzLGxvY2Fscyxkc3QucmVzb2x2ZSxzdGF0ZSkudGhlbihmdW5jdGlvbihyZXN1bHQpe2lmKGlzRnVuY3Rpb24odmlldy5jb250cm9sbGVyUHJvdmlkZXIpfHxpc0FycmF5KHZpZXcuY29udHJvbGxlclByb3ZpZGVyKSl7dmFyIGluamVjdExvY2Fscz1hbmd1bGFyLmV4dGVuZCh7fSxpbmplY3RhYmxlcyxsb2NhbHMpO3Jlc3VsdC4kJGNvbnRyb2xsZXI9JGluamVjdG9yLmludm9rZSh2aWV3LmNvbnRyb2xsZXJQcm92aWRlcixudWxsLGluamVjdExvY2Fscyl9ZWxzZSByZXN1bHQuJCRjb250cm9sbGVyPXZpZXcuY29udHJvbGxlcjtyZXN1bHQuJCRzdGF0ZT1zdGF0ZSxyZXN1bHQuJCRjb250cm9sbGVyQXM9dmlldy5jb250cm9sbGVyQXMsZHN0W25hbWVdPXJlc3VsdH0pKX0pLCRxLmFsbChwcm9taXNlcykudGhlbihmdW5jdGlvbigpe3JldHVybiBkc3R9KX12YXIgVHJhbnNpdGlvblN1cGVyc2VkZWQ9JHEucmVqZWN0KG5ldyBFcnJvcigidHJhbnNpdGlvbiBzdXBlcnNlZGVkIikpLFRyYW5zaXRpb25QcmV2ZW50ZWQ9JHEucmVqZWN0KG5ldyBFcnJvcigidHJhbnNpdGlvbiBwcmV2ZW50ZWQiKSksVHJhbnNpdGlvbkFib3J0ZWQ9JHEucmVqZWN0KG5ldyBFcnJvcigidHJhbnNpdGlvbiBhYm9ydGVkIikpLFRyYW5zaXRpb25GYWlsZWQ9JHEucmVqZWN0KG5ldyBFcnJvcigidHJhbnNpdGlvbiBmYWlsZWQiKSk7cmV0dXJuIHJvb3QubG9jYWxzPXtyZXNvbHZlOm51bGwsZ2xvYmFsczp7JHN0YXRlUGFyYW1zOnt9fX0sJHN0YXRlPXtwYXJhbXM6e30sY3VycmVudDpyb290LnNlbGYsJGN1cnJlbnQ6cm9vdCx0cmFuc2l0aW9uOm51bGx9LCRzdGF0ZS5yZWxvYWQ9ZnVuY3Rpb24oKXskc3RhdGUudHJhbnNpdGlvblRvKCRzdGF0ZS5jdXJyZW50LCRzdGF0ZVBhcmFtcyx7cmVsb2FkOiEwLGluaGVyaXQ6ITEsbm90aWZ5OiExfSl9LCRzdGF0ZS5nbz1mdW5jdGlvbih0byxwYXJhbXMsb3B0aW9ucyl7cmV0dXJuICRzdGF0ZS50cmFuc2l0aW9uVG8odG8scGFyYW1zLGV4dGVuZCh7aW5oZXJpdDohMCxyZWxhdGl2ZTokc3RhdGUuJGN1cnJlbnR9LG9wdGlvbnMpKX0sJHN0YXRlLnRyYW5zaXRpb25Ubz1mdW5jdGlvbih0byx0b1BhcmFtcyxvcHRpb25zKXt0b1BhcmFtcz10b1BhcmFtc3x8e30sb3B0aW9ucz1leHRlbmQoe2xvY2F0aW9uOiEwLGluaGVyaXQ6ITEscmVsYXRpdmU6bnVsbCxub3RpZnk6ITAscmVsb2FkOiExLCRyZXRyeTohMX0sb3B0aW9uc3x8e30pO3ZhciBldnQsZnJvbT0kc3RhdGUuJGN1cnJlbnQsZnJvbVBhcmFtcz0kc3RhdGUucGFyYW1zLGZyb21QYXRoPWZyb20ucGF0aCx0b1N0YXRlPWZpbmRTdGF0ZSh0byxvcHRpb25zLnJlbGF0aXZlKTtpZighaXNEZWZpbmVkKHRvU3RhdGUpKXt2YXIgcmVkaXJlY3Q9e3RvOnRvLHRvUGFyYW1zOnRvUGFyYW1zLG9wdGlvbnM6b3B0aW9uc30scmVkaXJlY3RSZXN1bHQ9aGFuZGxlUmVkaXJlY3QocmVkaXJlY3QsZnJvbS5zZWxmLGZyb21QYXJhbXMsb3B0aW9ucyk7aWYocmVkaXJlY3RSZXN1bHQpcmV0dXJuIHJlZGlyZWN0UmVzdWx0O2lmKHRvPXJlZGlyZWN0LnRvLHRvUGFyYW1zPXJlZGlyZWN0LnRvUGFyYW1zLG9wdGlvbnM9cmVkaXJlY3Qub3B0aW9ucyx0b1N0YXRlPWZpbmRTdGF0ZSh0byxvcHRpb25zLnJlbGF0aXZlKSwhaXNEZWZpbmVkKHRvU3RhdGUpKXtpZighb3B0aW9ucy5yZWxhdGl2ZSl0aHJvdyBuZXcgRXJyb3IoIk5vIHN1Y2ggc3RhdGUgJyIrdG8rIiciKTt0aHJvdyBuZXcgRXJyb3IoIkNvdWxkIG5vdCByZXNvbHZlICciK3RvKyInIGZyb20gc3RhdGUgJyIrb3B0aW9ucy5yZWxhdGl2ZSsiJyIpfX1pZih0b1N0YXRlW2Fic3RyYWN0S2V5XSl0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCB0cmFuc2l0aW9uIHRvIGFic3RyYWN0IHN0YXRlICciK3RvKyInIik7b3B0aW9ucy5pbmhlcml0JiYodG9QYXJhbXM9aW5oZXJpdFBhcmFtcygkc3RhdGVQYXJhbXMsdG9QYXJhbXN8fHt9LCRzdGF0ZS4kY3VycmVudCx0b1N0YXRlKSksdG89dG9TdGF0ZTt2YXIgdG9QYXRoPXRvLnBhdGgsa2VlcD0wLHN0YXRlPXRvUGF0aFtrZWVwXSxsb2NhbHM9cm9vdC5sb2NhbHMsdG9Mb2NhbHM9W107aWYoIW9wdGlvbnMucmVsb2FkKWZvcig7c3RhdGUmJnN0YXRlPT09ZnJvbVBhdGhba2VlcF0mJmVxdWFsRm9yS2V5cyh0b1BhcmFtcyxmcm9tUGFyYW1zLHN0YXRlLm93blBhcmFtcyk7KWxvY2Fscz10b0xvY2Fsc1trZWVwXT1zdGF0ZS5sb2NhbHMsa2VlcCsrLHN0YXRlPXRvUGF0aFtrZWVwXTtpZihzaG91bGRUcmlnZ2VyUmVsb2FkKHRvLGZyb20sbG9jYWxzLG9wdGlvbnMpKXJldHVybiB0by5zZWxmLnJlbG9hZE9uU2VhcmNoIT09ITEmJiR1cmxSb3V0ZXIudXBkYXRlKCksJHN0YXRlLnRyYW5zaXRpb249bnVsbCwkcS53aGVuKCRzdGF0ZS5jdXJyZW50KTtpZih0b1BhcmFtcz1maWx0ZXJCeUtleXMob2JqZWN0S2V5cyh0by5wYXJhbXMpLHRvUGFyYW1zfHx7fSksb3B0aW9ucy5ub3RpZnkmJiRyb290U2NvcGUuJGJyb2FkY2FzdCgiJHN0YXRlQ2hhbmdlU3RhcnQiLHRvLnNlbGYsdG9QYXJhbXMsZnJvbS5zZWxmLGZyb21QYXJhbXMpLmRlZmF1bHRQcmV2ZW50ZWQpcmV0dXJuICR1cmxSb3V0ZXIudXBkYXRlKCksVHJhbnNpdGlvblByZXZlbnRlZDtmb3IodmFyIHJlc29sdmVkPSRxLndoZW4obG9jYWxzKSxsPWtlZXA7bDx0b1BhdGgubGVuZ3RoO2wrKyxzdGF0ZT10b1BhdGhbbF0pbG9jYWxzPXRvTG9jYWxzW2xdPWluaGVyaXQobG9jYWxzKSxyZXNvbHZlZD1yZXNvbHZlU3RhdGUoc3RhdGUsdG9QYXJhbXMsc3RhdGU9PT10byxyZXNvbHZlZCxsb2NhbHMpO3ZhciB0cmFuc2l0aW9uPSRzdGF0ZS50cmFuc2l0aW9uPXJlc29sdmVkLnRoZW4oZnVuY3Rpb24oKXt2YXIgbCxlbnRlcmluZyxleGl0aW5nO2lmKCRzdGF0ZS50cmFuc2l0aW9uIT09dHJhbnNpdGlvbilyZXR1cm4gVHJhbnNpdGlvblN1cGVyc2VkZWQ7Zm9yKGw9ZnJvbVBhdGgubGVuZ3RoLTE7bD49a2VlcDtsLS0pZXhpdGluZz1mcm9tUGF0aFtsXSxleGl0aW5nLnNlbGYub25FeGl0JiYkaW5qZWN0b3IuaW52b2tlKGV4aXRpbmcuc2VsZi5vbkV4aXQsZXhpdGluZy5zZWxmLGV4aXRpbmcubG9jYWxzLmdsb2JhbHMpLGV4aXRpbmcubG9jYWxzPW51bGw7Zm9yKGw9a2VlcDtsPHRvUGF0aC5sZW5ndGg7bCsrKWVudGVyaW5nPXRvUGF0aFtsXSxlbnRlcmluZy5sb2NhbHM9dG9Mb2NhbHNbbF0sZW50ZXJpbmcuc2VsZi5vbkVudGVyJiYkaW5qZWN0b3IuaW52b2tlKGVudGVyaW5nLnNlbGYub25FbnRlcixlbnRlcmluZy5zZWxmLGVudGVyaW5nLmxvY2Fscy5nbG9iYWxzKTtyZXR1cm4gJHN0YXRlLnRyYW5zaXRpb24hPT10cmFuc2l0aW9uP1RyYW5zaXRpb25TdXBlcnNlZGVkOigkc3RhdGUuJGN1cnJlbnQ9dG8sJHN0YXRlLmN1cnJlbnQ9dG8uc2VsZiwkc3RhdGUucGFyYW1zPXRvUGFyYW1zLGNvcHkoJHN0YXRlLnBhcmFtcywkc3RhdGVQYXJhbXMpLCRzdGF0ZS50cmFuc2l0aW9uPW51bGwsb3B0aW9ucy5sb2NhdGlvbiYmdG8ubmF2aWdhYmxlJiYkdXJsUm91dGVyLnB1c2godG8ubmF2aWdhYmxlLnVybCx0by5uYXZpZ2FibGUubG9jYWxzLmdsb2JhbHMuJHN0YXRlUGFyYW1zLHtyZXBsYWNlOiJyZXBsYWNlIj09PW9wdGlvbnMubG9jYXRpb259KSxvcHRpb25zLm5vdGlmeSYmJHJvb3RTY29wZS4kYnJvYWRjYXN0KCIkc3RhdGVDaGFuZ2VTdWNjZXNzIix0by5zZWxmLHRvUGFyYW1zLGZyb20uc2VsZixmcm9tUGFyYW1zKSwkdXJsUm91dGVyLnVwZGF0ZSghMCksJHN0YXRlLmN1cnJlbnQpfSxmdW5jdGlvbihlcnJvcil7cmV0dXJuICRzdGF0ZS50cmFuc2l0aW9uIT09dHJhbnNpdGlvbj9UcmFuc2l0aW9uU3VwZXJzZWRlZDooJHN0YXRlLnRyYW5zaXRpb249bnVsbCxldnQ9JHJvb3RTY29wZS4kYnJvYWRjYXN0KCIkc3RhdGVDaGFuZ2VFcnJvciIsdG8uc2VsZix0b1BhcmFtcyxmcm9tLnNlbGYsZnJvbVBhcmFtcyxlcnJvciksZXZ0LmRlZmF1bHRQcmV2ZW50ZWR8fCR1cmxSb3V0ZXIudXBkYXRlKCksJHEucmVqZWN0KGVycm9yKSl9KTtyZXR1cm4gdHJhbnNpdGlvbn0sJHN0YXRlLmlzPWZ1bmN0aW9uKHN0YXRlT3JOYW1lLHBhcmFtcyl7dmFyIHN0YXRlPWZpbmRTdGF0ZShzdGF0ZU9yTmFtZSk7cmV0dXJuIGlzRGVmaW5lZChzdGF0ZSk/JHN0YXRlLiRjdXJyZW50IT09c3RhdGU/ITE6aXNEZWZpbmVkKHBhcmFtcykmJm51bGwhPT1wYXJhbXM/YW5ndWxhci5lcXVhbHMoJHN0YXRlUGFyYW1zLHBhcmFtcyk6ITA6dW5kZWZpbmVkfSwkc3RhdGUuaW5jbHVkZXM9ZnVuY3Rpb24oc3RhdGVPck5hbWUscGFyYW1zKXtpZihpc1N0cmluZyhzdGF0ZU9yTmFtZSkmJmlzR2xvYihzdGF0ZU9yTmFtZSkpe2lmKCFkb2VzU3RhdGVNYXRjaEdsb2Ioc3RhdGVPck5hbWUpKXJldHVybiExO3N0YXRlT3JOYW1lPSRzdGF0ZS4kY3VycmVudC5uYW1lfXZhciBzdGF0ZT1maW5kU3RhdGUoc3RhdGVPck5hbWUpO3JldHVybiBpc0RlZmluZWQoc3RhdGUpP2lzRGVmaW5lZCgkc3RhdGUuJGN1cnJlbnQuaW5jbHVkZXNbc3RhdGUubmFtZV0pP2VxdWFsRm9yS2V5cyhwYXJhbXMsJHN0YXRlUGFyYW1zKTohMTp1bmRlZmluZWR9LCRzdGF0ZS5ocmVmPWZ1bmN0aW9uKHN0YXRlT3JOYW1lLHBhcmFtcyxvcHRpb25zKXtvcHRpb25zPWV4dGVuZCh7bG9zc3k6ITAsaW5oZXJpdDohMCxhYnNvbHV0ZTohMSxyZWxhdGl2ZTokc3RhdGUuJGN1cnJlbnR9LG9wdGlvbnN8fHt9KTt2YXIgc3RhdGU9ZmluZFN0YXRlKHN0YXRlT3JOYW1lLG9wdGlvbnMucmVsYXRpdmUpO2lmKCFpc0RlZmluZWQoc3RhdGUpKXJldHVybiBudWxsO29wdGlvbnMuaW5oZXJpdCYmKHBhcmFtcz1pbmhlcml0UGFyYW1zKCRzdGF0ZVBhcmFtcyxwYXJhbXN8fHt9LCRzdGF0ZS4kY3VycmVudCxzdGF0ZSkpO3ZhciBuYXY9c3RhdGUmJm9wdGlvbnMubG9zc3k/c3RhdGUubmF2aWdhYmxlOnN0YXRlO3JldHVybiBuYXYmJm5hdi51cmw/JHVybFJvdXRlci5ocmVmKG5hdi51cmwsZmlsdGVyQnlLZXlzKG9iamVjdEtleXMoc3RhdGUucGFyYW1zKSxwYXJhbXN8fHt9KSx7YWJzb2x1dGU6b3B0aW9ucy5hYnNvbHV0ZX0pOm51bGx9LCRzdGF0ZS5nZXQ9ZnVuY3Rpb24oc3RhdGVPck5hbWUsY29udGV4dCl7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIG9iamVjdEtleXMoc3RhdGVzKS5tYXAoZnVuY3Rpb24obmFtZSl7cmV0dXJuIHN0YXRlc1tuYW1lXS5zZWxmfSk7dmFyIHN0YXRlPWZpbmRTdGF0ZShzdGF0ZU9yTmFtZSxjb250ZXh0KTtyZXR1cm4gc3RhdGUmJnN0YXRlLnNlbGY/c3RhdGUuc2VsZjpudWxsfSwkc3RhdGV9ZnVuY3Rpb24gc2hvdWxkVHJpZ2dlclJlbG9hZCh0byxmcm9tLGxvY2FscyxvcHRpb25zKXtyZXR1cm4gdG8hPT1mcm9tfHwobG9jYWxzIT09ZnJvbS5sb2NhbHN8fG9wdGlvbnMucmVsb2FkKSYmdG8uc2VsZi5yZWxvYWRPblNlYXJjaCE9PSExP3ZvaWQgMDohMH12YXIgcm9vdCwkc3RhdGUsc3RhdGVzPXt9LHF1ZXVlPXt9LGFic3RyYWN0S2V5PSJhYnN0cmFjdCIsc3RhdGVCdWlsZGVyPXtwYXJlbnQ6ZnVuY3Rpb24oc3RhdGUpe2lmKGlzRGVmaW5lZChzdGF0ZS5wYXJlbnQpJiZzdGF0ZS5wYXJlbnQpcmV0dXJuIGZpbmRTdGF0ZShzdGF0ZS5wYXJlbnQpO3ZhciBjb21wb3NpdGVOYW1lPS9eKC4rKVwuW14uXSskLy5leGVjKHN0YXRlLm5hbWUpO3JldHVybiBjb21wb3NpdGVOYW1lP2ZpbmRTdGF0ZShjb21wb3NpdGVOYW1lWzFdKTpyb290fSxkYXRhOmZ1bmN0aW9uKHN0YXRlKXtyZXR1cm4gc3RhdGUucGFyZW50JiZzdGF0ZS5wYXJlbnQuZGF0YSYmKHN0YXRlLmRhdGE9c3RhdGUuc2VsZi5kYXRhPWV4dGVuZCh7fSxzdGF0ZS5wYXJlbnQuZGF0YSxzdGF0ZS5kYXRhKSksc3RhdGUuZGF0YX0sdXJsOmZ1bmN0aW9uKHN0YXRlKXt2YXIgdXJsPXN0YXRlLnVybCxjb25maWc9e3BhcmFtczpzdGF0ZS5wYXJhbXN8fHt9fTtpZihpc1N0cmluZyh1cmwpKXJldHVybiJeIj09dXJsLmNoYXJBdCgwKT8kdXJsTWF0Y2hlckZhY3RvcnkuY29tcGlsZSh1cmwuc3Vic3RyaW5nKDEpLGNvbmZpZyk6KHN0YXRlLnBhcmVudC5uYXZpZ2FibGV8fHJvb3QpLnVybC5jb25jYXQodXJsLGNvbmZpZyk7aWYoIXVybHx8JHVybE1hdGNoZXJGYWN0b3J5LmlzTWF0Y2hlcih1cmwpKXJldHVybiB1cmw7dGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIHVybCAnIit1cmwrIicgaW4gc3RhdGUgJyIrc3RhdGUrIiciKX0sbmF2aWdhYmxlOmZ1bmN0aW9uKHN0YXRlKXtyZXR1cm4gc3RhdGUudXJsP3N0YXRlOnN0YXRlLnBhcmVudD9zdGF0ZS5wYXJlbnQubmF2aWdhYmxlOm51bGx9LHBhcmFtczpmdW5jdGlvbihzdGF0ZSl7cmV0dXJuIHN0YXRlLnBhcmFtcz9zdGF0ZS5wYXJhbXM6c3RhdGUudXJsP3N0YXRlLnVybC5wYXJhbXM6c3RhdGUucGFyZW50LnBhcmFtc30sdmlld3M6ZnVuY3Rpb24oc3RhdGUpe3ZhciB2aWV3cz17fTtyZXR1cm4gZm9yRWFjaChpc0RlZmluZWQoc3RhdGUudmlld3MpP3N0YXRlLnZpZXdzOnsiIjpzdGF0ZX0sZnVuY3Rpb24odmlldyxuYW1lKXtuYW1lLmluZGV4T2YoIkAiKTwwJiYobmFtZSs9IkAiK3N0YXRlLnBhcmVudC5uYW1lKSx2aWV3c1tuYW1lXT12aWV3fSksdmlld3N9LG93blBhcmFtczpmdW5jdGlvbihzdGF0ZSl7aWYoc3RhdGUucGFyYW1zPXN0YXRlLnBhcmFtc3x8e30sIXN0YXRlLnBhcmVudClyZXR1cm4gb2JqZWN0S2V5cyhzdGF0ZS5wYXJhbXMpO3ZhciBwYXJhbU5hbWVzPXt9O2ZvckVhY2goc3RhdGUucGFyYW1zLGZ1bmN0aW9uKHYsayl7cGFyYW1OYW1lc1trXT0hMH0pLGZvckVhY2goc3RhdGUucGFyZW50LnBhcmFtcyxmdW5jdGlvbih2LGspe2lmKCFwYXJhbU5hbWVzW2tdKXRocm93IG5ldyBFcnJvcigiTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXIgJyIraysiJyBpbiBzdGF0ZSAnIitzdGF0ZS5uYW1lKyInIik7cGFyYW1OYW1lc1trXT0hMX0pO3ZhciBvd25QYXJhbXM9W107cmV0dXJuIGZvckVhY2gocGFyYW1OYW1lcyxmdW5jdGlvbihvd24scCl7b3duJiZvd25QYXJhbXMucHVzaChwKX0pLG93blBhcmFtc30scGF0aDpmdW5jdGlvbihzdGF0ZSl7cmV0dXJuIHN0YXRlLnBhcmVudD9zdGF0ZS5wYXJlbnQucGF0aC5jb25jYXQoc3RhdGUpOltdfSxpbmNsdWRlczpmdW5jdGlvbihzdGF0ZSl7dmFyIGluY2x1ZGVzPXN0YXRlLnBhcmVudD9leHRlbmQoe30sc3RhdGUucGFyZW50LmluY2x1ZGVzKTp7fTtyZXR1cm4gaW5jbHVkZXNbc3RhdGUubmFtZV09ITAsaW5jbHVkZXN9LCRkZWxlZ2F0ZXM6e319O3Jvb3Q9cmVnaXN0ZXJTdGF0ZSh7bmFtZToiIix1cmw6Il4iLHZpZXdzOm51bGwsImFic3RyYWN0IjohMH0pLHJvb3QubmF2aWdhYmxlPW51bGwsdGhpcy5kZWNvcmF0b3I9ZGVjb3JhdG9yLHRoaXMuc3RhdGU9c3RhdGUsdGhpcy4kZ2V0PSRnZXQsJGdldC4kaW5qZWN0PVsiJHJvb3RTY29wZSIsIiRxIiwiJHZpZXciLCIkaW5qZWN0b3IiLCIkcmVzb2x2ZSIsIiRzdGF0ZVBhcmFtcyIsIiR1cmxSb3V0ZXIiXX1mdW5jdGlvbiAkVmlld1Byb3ZpZGVyKCl7ZnVuY3Rpb24gJGdldCgkcm9vdFNjb3BlLCR0ZW1wbGF0ZUZhY3Rvcnkpe3JldHVybntsb2FkOmZ1bmN0aW9uKG5hbWUsb3B0aW9ucyl7dmFyIHJlc3VsdCxkZWZhdWx0cz17dGVtcGxhdGU6bnVsbCxjb250cm9sbGVyOm51bGwsdmlldzpudWxsLGxvY2FsczpudWxsLG5vdGlmeTohMCxhc3luYzohMCxwYXJhbXM6e319O3JldHVybiBvcHRpb25zPWV4dGVuZChkZWZhdWx0cyxvcHRpb25zKSxvcHRpb25zLnZpZXcmJihyZXN1bHQ9JHRlbXBsYXRlRmFjdG9yeS5mcm9tQ29uZmlnKG9wdGlvbnMudmlldyxvcHRpb25zLnBhcmFtcyxvcHRpb25zLmxvY2FscykpLHJlc3VsdCYmb3B0aW9ucy5ub3RpZnkmJiRyb290U2NvcGUuJGJyb2FkY2FzdCgiJHZpZXdDb250ZW50TG9hZGluZyIsb3B0aW9ucykscmVzdWx0fX19dGhpcy4kZ2V0PSRnZXQsJGdldC4kaW5qZWN0PVsiJHJvb3RTY29wZSIsIiR0ZW1wbGF0ZUZhY3RvcnkiXX1mdW5jdGlvbiAkVmlld1Njcm9sbFByb3ZpZGVyKCl7dmFyIHVzZUFuY2hvclNjcm9sbD0hMTt0aGlzLnVzZUFuY2hvclNjcm9sbD1mdW5jdGlvbigpe3VzZUFuY2hvclNjcm9sbD0hMH0sdGhpcy4kZ2V0PVsiJGFuY2hvclNjcm9sbCIsIiR0aW1lb3V0IixmdW5jdGlvbigkYW5jaG9yU2Nyb2xsLCR0aW1lb3V0KXtyZXR1cm4gdXNlQW5jaG9yU2Nyb2xsPyRhbmNob3JTY3JvbGw6ZnVuY3Rpb24oJGVsZW1lbnQpeyR0aW1lb3V0KGZ1bmN0aW9uKCl7JGVsZW1lbnRbMF0uc2Nyb2xsSW50b1ZpZXcoKX0sMCwhMSl9fV19ZnVuY3Rpb24gJFZpZXdEaXJlY3RpdmUoJHN0YXRlLCRpbmplY3RvciwkdWlWaWV3U2Nyb2xsKXtmdW5jdGlvbiBnZXRTZXJ2aWNlKCl7cmV0dXJuICRpbmplY3Rvci5oYXM/ZnVuY3Rpb24oc2VydmljZSl7cmV0dXJuICRpbmplY3Rvci5oYXMoc2VydmljZSk/JGluamVjdG9yLmdldChzZXJ2aWNlKTpudWxsfTpmdW5jdGlvbihzZXJ2aWNlKXt0cnl7cmV0dXJuICRpbmplY3Rvci5nZXQoc2VydmljZSl9Y2F0Y2goZSl7cmV0dXJuIG51bGx9fX1mdW5jdGlvbiBnZXRSZW5kZXJlcihhdHRycyxzY29wZSl7dmFyIHN0YXRpY3M9ZnVuY3Rpb24oKXtyZXR1cm57ZW50ZXI6ZnVuY3Rpb24oZWxlbWVudCx0YXJnZXQsY2Ipe3RhcmdldC5hZnRlcihlbGVtZW50KSxjYigpfSxsZWF2ZTpmdW5jdGlvbihlbGVtZW50LGNiKXtlbGVtZW50LnJlbW92ZSgpLGNiKCl9fX07aWYoJGFuaW1hdGUpcmV0dXJue2VudGVyOmZ1bmN0aW9uKGVsZW1lbnQsdGFyZ2V0LGNiKXskYW5pbWF0ZS5lbnRlcihlbGVtZW50LG51bGwsdGFyZ2V0LGNiKX0sbGVhdmU6ZnVuY3Rpb24oZWxlbWVudCxjYil7JGFuaW1hdGUubGVhdmUoZWxlbWVudCxjYil9fTtpZigkYW5pbWF0b3Ipe3ZhciBhbmltYXRlPSRhbmltYXRvciYmJGFuaW1hdG9yKHNjb3BlLGF0dHJzKTtyZXR1cm57ZW50ZXI6ZnVuY3Rpb24oZWxlbWVudCx0YXJnZXQsY2Ipe2FuaW1hdGUuZW50ZXIoZWxlbWVudCxudWxsLHRhcmdldCksY2IoKX0sbGVhdmU6ZnVuY3Rpb24oZWxlbWVudCxjYil7YW5pbWF0ZS5sZWF2ZShlbGVtZW50KSxjYigpfX19cmV0dXJuIHN0YXRpY3MoKX12YXIgc2VydmljZT1nZXRTZXJ2aWNlKCksJGFuaW1hdG9yPXNlcnZpY2UoIiRhbmltYXRvciIpLCRhbmltYXRlPXNlcnZpY2UoIiRhbmltYXRlIiksZGlyZWN0aXZlPXtyZXN0cmljdDoiRUNBIix0ZXJtaW5hbDohMCxwcmlvcml0eTo0MDAsdHJhbnNjbHVkZToiZWxlbWVudCIsY29tcGlsZTpmdW5jdGlvbih0RWxlbWVudCx0QXR0cnMsJHRyYW5zY2x1ZGUpe3JldHVybiBmdW5jdGlvbihzY29wZSwkZWxlbWVudCxhdHRycyl7ZnVuY3Rpb24gY2xlYW51cExhc3RWaWV3KCl7cHJldmlvdXNFbCYmKHByZXZpb3VzRWwucmVtb3ZlKCkscHJldmlvdXNFbD1udWxsKSxjdXJyZW50U2NvcGUmJihjdXJyZW50U2NvcGUuJGRlc3Ryb3koKSxjdXJyZW50U2NvcGU9bnVsbCksY3VycmVudEVsJiYocmVuZGVyZXIubGVhdmUoY3VycmVudEVsLGZ1bmN0aW9uKCl7cHJldmlvdXNFbD1udWxsfSkscHJldmlvdXNFbD1jdXJyZW50RWwsY3VycmVudEVsPW51bGwpCn1mdW5jdGlvbiB1cGRhdGVWaWV3KGZpcnN0VGltZSl7dmFyIG5ld1Njb3BlLG5hbWU9Z2V0VWlWaWV3TmFtZShhdHRycywkZWxlbWVudC5pbmhlcml0ZWREYXRhKCIkdWlWaWV3IikpLHByZXZpb3VzTG9jYWxzPW5hbWUmJiRzdGF0ZS4kY3VycmVudCYmJHN0YXRlLiRjdXJyZW50LmxvY2Fsc1tuYW1lXTtpZihmaXJzdFRpbWV8fHByZXZpb3VzTG9jYWxzIT09bGF0ZXN0TG9jYWxzKXtuZXdTY29wZT1zY29wZS4kbmV3KCksbGF0ZXN0TG9jYWxzPSRzdGF0ZS4kY3VycmVudC5sb2NhbHNbbmFtZV07dmFyIGNsb25lPSR0cmFuc2NsdWRlKG5ld1Njb3BlLGZ1bmN0aW9uKGNsb25lKXtyZW5kZXJlci5lbnRlcihjbG9uZSwkZWxlbWVudCxmdW5jdGlvbigpeyhhbmd1bGFyLmlzRGVmaW5lZChhdXRvU2Nyb2xsRXhwKSYmIWF1dG9TY3JvbGxFeHB8fHNjb3BlLiRldmFsKGF1dG9TY3JvbGxFeHApKSYmJHVpVmlld1Njcm9sbChjbG9uZSl9KSxjbGVhbnVwTGFzdFZpZXcoKX0pO2N1cnJlbnRFbD1jbG9uZSxjdXJyZW50U2NvcGU9bmV3U2NvcGUsY3VycmVudFNjb3BlLiRlbWl0KCIkdmlld0NvbnRlbnRMb2FkZWQiKSxjdXJyZW50U2NvcGUuJGV2YWwob25sb2FkRXhwKX19dmFyIHByZXZpb3VzRWwsY3VycmVudEVsLGN1cnJlbnRTY29wZSxsYXRlc3RMb2NhbHMsb25sb2FkRXhwPWF0dHJzLm9ubG9hZHx8IiIsYXV0b1Njcm9sbEV4cD1hdHRycy5hdXRvc2Nyb2xsLHJlbmRlcmVyPWdldFJlbmRlcmVyKGF0dHJzLHNjb3BlKTtzY29wZS4kb24oIiRzdGF0ZUNoYW5nZVN1Y2Nlc3MiLGZ1bmN0aW9uKCl7dXBkYXRlVmlldyghMSl9KSxzY29wZS4kb24oIiR2aWV3Q29udGVudExvYWRpbmciLGZ1bmN0aW9uKCl7dXBkYXRlVmlldyghMSl9KSx1cGRhdGVWaWV3KCEwKX19fTtyZXR1cm4gZGlyZWN0aXZlfWZ1bmN0aW9uICRWaWV3RGlyZWN0aXZlRmlsbCgkY29tcGlsZSwkY29udHJvbGxlciwkc3RhdGUpe3JldHVybntyZXN0cmljdDoiRUNBIixwcmlvcml0eTotNDAwLGNvbXBpbGU6ZnVuY3Rpb24odEVsZW1lbnQpe3ZhciBpbml0aWFsPXRFbGVtZW50Lmh0bWwoKTtyZXR1cm4gZnVuY3Rpb24oc2NvcGUsJGVsZW1lbnQsYXR0cnMpe3ZhciBjdXJyZW50PSRzdGF0ZS4kY3VycmVudCxuYW1lPWdldFVpVmlld05hbWUoYXR0cnMsJGVsZW1lbnQuaW5oZXJpdGVkRGF0YSgiJHVpVmlldyIpKSxsb2NhbHM9Y3VycmVudCYmY3VycmVudC5sb2NhbHNbbmFtZV07aWYobG9jYWxzKXskZWxlbWVudC5kYXRhKCIkdWlWaWV3Iix7bmFtZTpuYW1lLHN0YXRlOmxvY2Fscy4kJHN0YXRlfSksJGVsZW1lbnQuaHRtbChsb2NhbHMuJHRlbXBsYXRlP2xvY2Fscy4kdGVtcGxhdGU6aW5pdGlhbCk7dmFyIGxpbms9JGNvbXBpbGUoJGVsZW1lbnQuY29udGVudHMoKSk7aWYobG9jYWxzLiQkY29udHJvbGxlcil7bG9jYWxzLiRzY29wZT1zY29wZTt2YXIgY29udHJvbGxlcj0kY29udHJvbGxlcihsb2NhbHMuJCRjb250cm9sbGVyLGxvY2Fscyk7bG9jYWxzLiQkY29udHJvbGxlckFzJiYoc2NvcGVbbG9jYWxzLiQkY29udHJvbGxlckFzXT1jb250cm9sbGVyKSwkZWxlbWVudC5kYXRhKCIkbmdDb250cm9sbGVyQ29udHJvbGxlciIsY29udHJvbGxlciksJGVsZW1lbnQuY2hpbGRyZW4oKS5kYXRhKCIkbmdDb250cm9sbGVyQ29udHJvbGxlciIsY29udHJvbGxlcil9bGluayhzY29wZSl9fX19fWZ1bmN0aW9uIGdldFVpVmlld05hbWUoYXR0cnMsaW5oZXJpdGVkKXt2YXIgbmFtZT1hdHRycy51aVZpZXd8fGF0dHJzLm5hbWV8fCIiO3JldHVybiBuYW1lLmluZGV4T2YoIkAiKT49MD9uYW1lOm5hbWUrIkAiKyhpbmhlcml0ZWQ/aW5oZXJpdGVkLnN0YXRlLm5hbWU6IiIpfWZ1bmN0aW9uIHBhcnNlU3RhdGVSZWYocmVmLGN1cnJlbnQpe3ZhciBwYXJzZWQscHJlcGFyc2VkPXJlZi5tYXRjaCgvXlxzKih7W159XSp9KVxzKiQvKTtpZihwcmVwYXJzZWQmJihyZWY9Y3VycmVudCsiKCIrcHJlcGFyc2VkWzFdKyIpIikscGFyc2VkPXJlZi5yZXBsYWNlKC9cbi9nLCIgIikubWF0Y2goL14oW14oXSs/KVxzKihcKCguKilcKSk/JC8pLCFwYXJzZWR8fDQhPT1wYXJzZWQubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBzdGF0ZSByZWYgJyIrcmVmKyInIik7cmV0dXJue3N0YXRlOnBhcnNlZFsxXSxwYXJhbUV4cHI6cGFyc2VkWzNdfHxudWxsfX1mdW5jdGlvbiBzdGF0ZUNvbnRleHQoZWwpe3ZhciBzdGF0ZURhdGE9ZWwucGFyZW50KCkuaW5oZXJpdGVkRGF0YSgiJHVpVmlldyIpO3JldHVybiBzdGF0ZURhdGEmJnN0YXRlRGF0YS5zdGF0ZSYmc3RhdGVEYXRhLnN0YXRlLm5hbWU/c3RhdGVEYXRhLnN0YXRlOnZvaWQgMH1mdW5jdGlvbiAkU3RhdGVSZWZEaXJlY3RpdmUoJHN0YXRlLCR0aW1lb3V0KXt2YXIgYWxsb3dlZE9wdGlvbnM9WyJsb2NhdGlvbiIsImluaGVyaXQiLCJyZWxvYWQiXTtyZXR1cm57cmVzdHJpY3Q6IkEiLHJlcXVpcmU6WyI/XnVpU3JlZkFjdGl2ZSIsIj9edWlTcmVmQWN0aXZlRXEiXSxsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsZW1lbnQsYXR0cnMsdWlTcmVmQWN0aXZlKXt2YXIgcmVmPXBhcnNlU3RhdGVSZWYoYXR0cnMudWlTcmVmLCRzdGF0ZS5jdXJyZW50Lm5hbWUpLHBhcmFtcz1udWxsLGJhc2U9c3RhdGVDb250ZXh0KGVsZW1lbnQpfHwkc3RhdGUuJGN1cnJlbnQsaXNGb3JtPSJGT1JNIj09PWVsZW1lbnRbMF0ubm9kZU5hbWUsYXR0cj1pc0Zvcm0/ImFjdGlvbiI6ImhyZWYiLG5hdj0hMCxvcHRpb25zPXtyZWxhdGl2ZTpiYXNlLGluaGVyaXQ6ITB9LG9wdGlvbnNPdmVycmlkZT1zY29wZS4kZXZhbChhdHRycy51aVNyZWZPcHRzKXx8e307YW5ndWxhci5mb3JFYWNoKGFsbG93ZWRPcHRpb25zLGZ1bmN0aW9uKG9wdGlvbil7b3B0aW9uIGluIG9wdGlvbnNPdmVycmlkZSYmKG9wdGlvbnNbb3B0aW9uXT1vcHRpb25zT3ZlcnJpZGVbb3B0aW9uXSl9KTt2YXIgdXBkYXRlPWZ1bmN0aW9uKG5ld1ZhbCl7aWYobmV3VmFsJiYocGFyYW1zPW5ld1ZhbCksbmF2KXt2YXIgbmV3SHJlZj0kc3RhdGUuaHJlZihyZWYuc3RhdGUscGFyYW1zLG9wdGlvbnMpLGFjdGl2ZURpcmVjdGl2ZT11aVNyZWZBY3RpdmVbMV18fHVpU3JlZkFjdGl2ZVswXTtyZXR1cm4gYWN0aXZlRGlyZWN0aXZlJiZhY3RpdmVEaXJlY3RpdmUuJCRzZXRTdGF0ZUluZm8ocmVmLnN0YXRlLHBhcmFtcyksbnVsbD09PW5ld0hyZWY/KG5hdj0hMSwhMSk6dm9pZChlbGVtZW50WzBdW2F0dHJdPW5ld0hyZWYpfX07cmVmLnBhcmFtRXhwciYmKHNjb3BlLiR3YXRjaChyZWYucGFyYW1FeHByLGZ1bmN0aW9uKG5ld1ZhbCl7bmV3VmFsIT09cGFyYW1zJiZ1cGRhdGUobmV3VmFsKX0sITApLHBhcmFtcz1zY29wZS4kZXZhbChyZWYucGFyYW1FeHByKSksdXBkYXRlKCksaXNGb3JtfHxlbGVtZW50LmJpbmQoImNsaWNrIixmdW5jdGlvbihlKXt2YXIgYnV0dG9uPWUud2hpY2h8fGUuYnV0dG9uO2lmKCEoYnV0dG9uPjF8fGUuY3RybEtleXx8ZS5tZXRhS2V5fHxlLnNoaWZ0S2V5fHxlbGVtZW50LmF0dHIoInRhcmdldCIpKSl7dmFyIHRyYW5zaXRpb249JHRpbWVvdXQoZnVuY3Rpb24oKXskc3RhdGUuZ28ocmVmLnN0YXRlLHBhcmFtcyxvcHRpb25zKX0pO2UucHJldmVudERlZmF1bHQoKSxlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7JHRpbWVvdXQuY2FuY2VsKHRyYW5zaXRpb24pfX19KX19fWZ1bmN0aW9uICRTdGF0ZVJlZkFjdGl2ZURpcmVjdGl2ZSgkc3RhdGUsJHN0YXRlUGFyYW1zLCRpbnRlcnBvbGF0ZSl7cmV0dXJue3Jlc3RyaWN0OiJBIixjb250cm9sbGVyOlsiJHNjb3BlIiwiJGVsZW1lbnQiLCIkYXR0cnMiLGZ1bmN0aW9uKCRzY29wZSwkZWxlbWVudCwkYXR0cnMpe2Z1bmN0aW9uIHVwZGF0ZSgpe2lzTWF0Y2goKT8kZWxlbWVudC5hZGRDbGFzcyhhY3RpdmVDbGFzcyk6JGVsZW1lbnQucmVtb3ZlQ2xhc3MoYWN0aXZlQ2xhc3MpfWZ1bmN0aW9uIGlzTWF0Y2goKXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mICRhdHRycy51aVNyZWZBY3RpdmVFcT8kc3RhdGUuJGN1cnJlbnQuc2VsZj09PXN0YXRlJiZtYXRjaGVzUGFyYW1zKCk6JHN0YXRlLmluY2x1ZGVzKHN0YXRlLm5hbWUpJiZtYXRjaGVzUGFyYW1zKCl9ZnVuY3Rpb24gbWF0Y2hlc1BhcmFtcygpe3JldHVybiFwYXJhbXN8fGVxdWFsRm9yS2V5cyhwYXJhbXMsJHN0YXRlUGFyYW1zKX12YXIgc3RhdGUscGFyYW1zLGFjdGl2ZUNsYXNzO2FjdGl2ZUNsYXNzPSRpbnRlcnBvbGF0ZSgkYXR0cnMudWlTcmVmQWN0aXZlRXF8fCRhdHRycy51aVNyZWZBY3RpdmV8fCIiLCExKSgkc2NvcGUpLHRoaXMuJCRzZXRTdGF0ZUluZm89ZnVuY3Rpb24obmV3U3RhdGUsbmV3UGFyYW1zKXtzdGF0ZT0kc3RhdGUuZ2V0KG5ld1N0YXRlLHN0YXRlQ29udGV4dCgkZWxlbWVudCkpLHBhcmFtcz1uZXdQYXJhbXMsdXBkYXRlKCl9LCRzY29wZS4kb24oIiRzdGF0ZUNoYW5nZVN1Y2Nlc3MiLHVwZGF0ZSl9XX19ZnVuY3Rpb24gJElzU3RhdGVGaWx0ZXIoJHN0YXRlKXtyZXR1cm4gZnVuY3Rpb24oc3RhdGUpe3JldHVybiAkc3RhdGUuaXMoc3RhdGUpfX1mdW5jdGlvbiAkSW5jbHVkZWRCeVN0YXRlRmlsdGVyKCRzdGF0ZSl7cmV0dXJuIGZ1bmN0aW9uKHN0YXRlKXtyZXR1cm4gJHN0YXRlLmluY2x1ZGVzKHN0YXRlKX19dmFyIGlzRGVmaW5lZD1hbmd1bGFyLmlzRGVmaW5lZCxpc0Z1bmN0aW9uPWFuZ3VsYXIuaXNGdW5jdGlvbixpc1N0cmluZz1hbmd1bGFyLmlzU3RyaW5nLGlzT2JqZWN0PWFuZ3VsYXIuaXNPYmplY3QsaXNBcnJheT1hbmd1bGFyLmlzQXJyYXksZm9yRWFjaD1hbmd1bGFyLmZvckVhY2gsZXh0ZW5kPWFuZ3VsYXIuZXh0ZW5kLGNvcHk9YW5ndWxhci5jb3B5O2FuZ3VsYXIubW9kdWxlKCJ1aS5yb3V0ZXIudXRpbCIsWyJuZyJdKSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyLnJvdXRlciIsWyJ1aS5yb3V0ZXIudXRpbCJdKSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyLnN0YXRlIixbInVpLnJvdXRlci5yb3V0ZXIiLCJ1aS5yb3V0ZXIudXRpbCJdKSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyIixbInVpLnJvdXRlci5zdGF0ZSJdKSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyLmNvbXBhdCIsWyJ1aS5yb3V0ZXIiXSksJFJlc29sdmUuJGluamVjdD1bIiRxIiwiJGluamVjdG9yIl0sYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci51dGlsIikuc2VydmljZSgiJHJlc29sdmUiLCRSZXNvbHZlKSwkVGVtcGxhdGVGYWN0b3J5LiRpbmplY3Q9WyIkaHR0cCIsIiR0ZW1wbGF0ZUNhY2hlIiwiJGluamVjdG9yIl0sYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci51dGlsIikuc2VydmljZSgiJHRlbXBsYXRlRmFjdG9yeSIsJFRlbXBsYXRlRmFjdG9yeSksVXJsTWF0Y2hlci5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKHBhdHRlcm4sY29uZmlnKXtyZXR1cm4gbmV3IFVybE1hdGNoZXIodGhpcy5zb3VyY2VQYXRoK3BhdHRlcm4rdGhpcy5zb3VyY2VTZWFyY2gsY29uZmlnKX0sVXJsTWF0Y2hlci5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb3VyY2V9LFVybE1hdGNoZXIucHJvdG90eXBlLmV4ZWM9ZnVuY3Rpb24ocGF0aCxzZWFyY2hQYXJhbXMpe3ZhciBtPXRoaXMucmVnZXhwLmV4ZWMocGF0aCk7aWYoIW0pcmV0dXJuIG51bGw7c2VhcmNoUGFyYW1zPXNlYXJjaFBhcmFtc3x8e307dmFyIGksY2ZnLHBhcmFtLHBhcmFtcz10aGlzLnBhcmFtZXRlcnMoKSxuVG90YWw9cGFyYW1zLmxlbmd0aCxuUGF0aD10aGlzLnNlZ21lbnRzLmxlbmd0aC0xLHZhbHVlcz17fTtpZihuUGF0aCE9PW0ubGVuZ3RoLTEpdGhyb3cgbmV3IEVycm9yKCJVbmJhbGFuY2VkIGNhcHR1cmUgZ3JvdXAgaW4gcm91dGUgJyIrdGhpcy5zb3VyY2UrIiciKTtmb3IoaT0wO25QYXRoPmk7aSsrKXBhcmFtPXBhcmFtc1tpXSxjZmc9dGhpcy5wYXJhbXNbcGFyYW1dLHZhbHVlc1twYXJhbV09Y2ZnLiR2YWx1ZShtW2krMV0pO2Zvcig7blRvdGFsPmk7aSsrKXBhcmFtPXBhcmFtc1tpXSxjZmc9dGhpcy5wYXJhbXNbcGFyYW1dLHZhbHVlc1twYXJhbV09Y2ZnLiR2YWx1ZShzZWFyY2hQYXJhbXNbcGFyYW1dKTtyZXR1cm4gdmFsdWVzfSxVcmxNYXRjaGVyLnByb3RvdHlwZS5wYXJhbWV0ZXJzPWZ1bmN0aW9uKHBhcmFtKXtyZXR1cm4gaXNEZWZpbmVkKHBhcmFtKT90aGlzLnBhcmFtc1twYXJhbV18fG51bGw6b2JqZWN0S2V5cyh0aGlzLnBhcmFtcyl9LFVybE1hdGNoZXIucHJvdG90eXBlLnZhbGlkYXRlcz1mdW5jdGlvbihwYXJhbXMpe3ZhciBpc09wdGlvbmFsLGNmZyxyZXN1bHQ9ITAsc2VsZj10aGlzO3JldHVybiBmb3JFYWNoKHBhcmFtcyxmdW5jdGlvbih2YWwsa2V5KXtzZWxmLnBhcmFtc1trZXldJiYoY2ZnPXNlbGYucGFyYW1zW2tleV0saXNPcHRpb25hbD0hdmFsJiZpc0RlZmluZWQoY2ZnLnZhbHVlKSxyZXN1bHQ9cmVzdWx0JiYoaXNPcHRpb25hbHx8Y2ZnLnR5cGUuaXModmFsKSkpfSkscmVzdWx0fSxVcmxNYXRjaGVyLnByb3RvdHlwZS5mb3JtYXQ9ZnVuY3Rpb24odmFsdWVzKXt2YXIgc2VnbWVudHM9dGhpcy5zZWdtZW50cyxwYXJhbXM9dGhpcy5wYXJhbWV0ZXJzKCk7aWYoIXZhbHVlcylyZXR1cm4gc2VnbWVudHMuam9pbigiIikucmVwbGFjZSgiLy8iLCIvIik7dmFyIGksc2VhcmNoLHZhbHVlLHBhcmFtLGNmZyxhcnJheSxuUGF0aD1zZWdtZW50cy5sZW5ndGgtMSxuVG90YWw9cGFyYW1zLmxlbmd0aCxyZXN1bHQ9c2VnbWVudHNbMF07aWYoIXRoaXMudmFsaWRhdGVzKHZhbHVlcykpcmV0dXJuIG51bGw7Zm9yKGk9MDtuUGF0aD5pO2krKylwYXJhbT1wYXJhbXNbaV0sdmFsdWU9dmFsdWVzW3BhcmFtXSxjZmc9dGhpcy5wYXJhbXNbcGFyYW1dLChpc0RlZmluZWQodmFsdWUpfHwiLyIhPT1zZWdtZW50c1tpXSYmIi8iIT09c2VnbWVudHNbaSsxXSkmJihudWxsIT12YWx1ZSYmKHJlc3VsdCs9ZW5jb2RlVVJJQ29tcG9uZW50KGNmZy50eXBlLmVuY29kZSh2YWx1ZSkpKSxyZXN1bHQrPXNlZ21lbnRzW2krMV0pO2Zvcig7blRvdGFsPmk7aSsrKXBhcmFtPXBhcmFtc1tpXSx2YWx1ZT12YWx1ZXNbcGFyYW1dLG51bGwhPXZhbHVlJiYoYXJyYXk9aXNBcnJheSh2YWx1ZSksYXJyYXkmJih2YWx1ZT12YWx1ZS5tYXAoZW5jb2RlVVJJQ29tcG9uZW50KS5qb2luKCImIitwYXJhbSsiPSIpKSxyZXN1bHQrPShzZWFyY2g/IiYiOiI/IikrcGFyYW0rIj0iKyhhcnJheT92YWx1ZTplbmNvZGVVUklDb21wb25lbnQodmFsdWUpKSxzZWFyY2g9ITApO3JldHVybiByZXN1bHR9LFVybE1hdGNoZXIucHJvdG90eXBlLiR0eXBlcz17fSxUeXBlLnByb3RvdHlwZS5pcz1mdW5jdGlvbigpe3JldHVybiEwfSxUeXBlLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsfSxUeXBlLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsfSxUeXBlLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09Yn0sVHlwZS5wcm90b3R5cGUuJHN1YlBhdHRlcm49ZnVuY3Rpb24oKXt2YXIgc3ViPXRoaXMucGF0dGVybi50b1N0cmluZygpO3JldHVybiBzdWIuc3Vic3RyKDEsc3ViLmxlbmd0aC0yKX0sVHlwZS5wcm90b3R5cGUucGF0dGVybj0vLiovLGFuZ3VsYXIubW9kdWxlKCJ1aS5yb3V0ZXIudXRpbCIpLnByb3ZpZGVyKCIkdXJsTWF0Y2hlckZhY3RvcnkiLCRVcmxNYXRjaGVyRmFjdG9yeSksJFVybFJvdXRlclByb3ZpZGVyLiRpbmplY3Q9WyIkbG9jYXRpb25Qcm92aWRlciIsIiR1cmxNYXRjaGVyRmFjdG9yeVByb3ZpZGVyIl0sYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci5yb3V0ZXIiKS5wcm92aWRlcigiJHVybFJvdXRlciIsJFVybFJvdXRlclByb3ZpZGVyKSwkU3RhdGVQcm92aWRlci4kaW5qZWN0PVsiJHVybFJvdXRlclByb3ZpZGVyIiwiJHVybE1hdGNoZXJGYWN0b3J5UHJvdmlkZXIiXSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyLnN0YXRlIikudmFsdWUoIiRzdGF0ZVBhcmFtcyIse30pLnByb3ZpZGVyKCIkc3RhdGUiLCRTdGF0ZVByb3ZpZGVyKSwkVmlld1Byb3ZpZGVyLiRpbmplY3Q9W10sYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci5zdGF0ZSIpLnByb3ZpZGVyKCIkdmlldyIsJFZpZXdQcm92aWRlciksYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci5zdGF0ZSIpLnByb3ZpZGVyKCIkdWlWaWV3U2Nyb2xsIiwkVmlld1Njcm9sbFByb3ZpZGVyKSwkVmlld0RpcmVjdGl2ZS4kaW5qZWN0PVsiJHN0YXRlIiwiJGluamVjdG9yIiwiJHVpVmlld1Njcm9sbCJdLCRWaWV3RGlyZWN0aXZlRmlsbC4kaW5qZWN0PVsiJGNvbXBpbGUiLCIkY29udHJvbGxlciIsIiRzdGF0ZSJdLGFuZ3VsYXIubW9kdWxlKCJ1aS5yb3V0ZXIuc3RhdGUiKS5kaXJlY3RpdmUoInVpVmlldyIsJFZpZXdEaXJlY3RpdmUpLGFuZ3VsYXIubW9kdWxlKCJ1aS5yb3V0ZXIuc3RhdGUiKS5kaXJlY3RpdmUoInVpVmlldyIsJFZpZXdEaXJlY3RpdmVGaWxsKSwkU3RhdGVSZWZEaXJlY3RpdmUuJGluamVjdD1bIiRzdGF0ZSIsIiR0aW1lb3V0Il0sJFN0YXRlUmVmQWN0aXZlRGlyZWN0aXZlLiRpbmplY3Q9WyIkc3RhdGUiLCIkc3RhdGVQYXJhbXMiLCIkaW50ZXJwb2xhdGUiXSxhbmd1bGFyLm1vZHVsZSgidWkucm91dGVyLnN0YXRlIikuZGlyZWN0aXZlKCJ1aVNyZWYiLCRTdGF0ZVJlZkRpcmVjdGl2ZSkuZGlyZWN0aXZlKCJ1aVNyZWZBY3RpdmUiLCRTdGF0ZVJlZkFjdGl2ZURpcmVjdGl2ZSkuZGlyZWN0aXZlKCJ1aVNyZWZBY3RpdmVFcSIsJFN0YXRlUmVmQWN0aXZlRGlyZWN0aXZlKSwkSXNTdGF0ZUZpbHRlci4kaW5qZWN0PVsiJHN0YXRlIl0sJEluY2x1ZGVkQnlTdGF0ZUZpbHRlci4kaW5qZWN0PVsiJHN0YXRlIl0sYW5ndWxhci5tb2R1bGUoInVpLnJvdXRlci5zdGF0ZSIpLmZpbHRlcigiaXNTdGF0ZSIsJElzU3RhdGVGaWx0ZXIpLmZpbHRlcigiaW5jbHVkZWRCeVN0YXRlIiwkSW5jbHVkZWRCeVN0YXRlRmlsdGVyKX0od2luZG93LHdpbmRvdy5hbmd1bGFyKSxhbmd1bGFyLm1vZHVsZSgidWkuYWxpYXMiLFtdKS5jb25maWcoWyIkY29tcGlsZVByb3ZpZGVyIiwidWlBbGlhc0NvbmZpZyIsZnVuY3Rpb24oJGNvbXBpbGVQcm92aWRlcix1aUFsaWFzQ29uZmlnKXt1aUFsaWFzQ29uZmlnPXVpQWxpYXNDb25maWd8fHt9LGFuZ3VsYXIuZm9yRWFjaCh1aUFsaWFzQ29uZmlnLGZ1bmN0aW9uKGNvbmZpZyxhbGlhcyl7YW5ndWxhci5pc1N0cmluZyhjb25maWcpJiYoY29uZmlnPXtyZXBsYWNlOiEwLHRlbXBsYXRlOmNvbmZpZ30pLCRjb21waWxlUHJvdmlkZXIuZGlyZWN0aXZlKGFsaWFzLGZ1bmN0aW9uKCl7cmV0dXJuIGNvbmZpZ30pfSl9XSksYW5ndWxhci5tb2R1bGUoInVpLmV2ZW50IixbXSkuZGlyZWN0aXZlKCJ1aUV2ZW50IixbIiRwYXJzZSIsZnVuY3Rpb24oJHBhcnNlKXtyZXR1cm4gZnVuY3Rpb24oJHNjb3BlLGVsbSxhdHRycyl7dmFyIGV2ZW50cz0kc2NvcGUuJGV2YWwoYXR0cnMudWlFdmVudCk7YW5ndWxhci5mb3JFYWNoKGV2ZW50cyxmdW5jdGlvbih1aUV2ZW50LGV2ZW50TmFtZSl7dmFyIGZuPSRwYXJzZSh1aUV2ZW50KTtlbG0uYmluZChldmVudE5hbWUsZnVuY3Rpb24oZXZ0KXt2YXIgcGFyYW1zPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cGFyYW1zPXBhcmFtcy5zcGxpY2UoMSksZm4oJHNjb3BlLHskZXZlbnQ6ZXZ0LCRwYXJhbXM6cGFyYW1zfSksJHNjb3BlLiQkcGhhc2V8fCRzY29wZS4kYXBwbHkoKX0pfSl9fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5mb3JtYXQiLFtdKS5maWx0ZXIoImZvcm1hdCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUscmVwbGFjZSl7dmFyIHRhcmdldD12YWx1ZTtpZihhbmd1bGFyLmlzU3RyaW5nKHRhcmdldCkmJnZvaWQgMCE9PXJlcGxhY2UpaWYoYW5ndWxhci5pc0FycmF5KHJlcGxhY2UpfHxhbmd1bGFyLmlzT2JqZWN0KHJlcGxhY2UpfHwocmVwbGFjZT1bcmVwbGFjZV0pLGFuZ3VsYXIuaXNBcnJheShyZXBsYWNlKSl7dmFyIHJsZW49cmVwbGFjZS5sZW5ndGgscmZ4PWZ1bmN0aW9uKHN0cixpKXtyZXR1cm4gaT1wYXJzZUludChpLDEwKSxpPj0wJiZybGVuPmk/cmVwbGFjZVtpXTpzdHJ9O3RhcmdldD10YXJnZXQucmVwbGFjZSgvXCQoWzAtOV0rKS9nLHJmeCl9ZWxzZSBhbmd1bGFyLmZvckVhY2gocmVwbGFjZSxmdW5jdGlvbih2YWx1ZSxrZXkpe3RhcmdldD10YXJnZXQuc3BsaXQoIjoiK2tleSkuam9pbih2YWx1ZSl9KTtyZXR1cm4gdGFyZ2V0fX0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5oaWdobGlnaHQiLFtdKS5maWx0ZXIoImhpZ2hsaWdodCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odGV4dCxzZWFyY2gsY2FzZVNlbnNpdGl2ZSl7cmV0dXJuIHNlYXJjaHx8YW5ndWxhci5pc051bWJlcihzZWFyY2gpPyh0ZXh0PXRleHQudG9TdHJpbmcoKSxzZWFyY2g9c2VhcmNoLnRvU3RyaW5nKCksY2FzZVNlbnNpdGl2ZT90ZXh0LnNwbGl0KHNlYXJjaCkuam9pbignPHNwYW4gY2xhc3M9InVpLW1hdGNoIj4nK3NlYXJjaCsiPC9zcGFuPiIpOnRleHQucmVwbGFjZShuZXcgUmVnRXhwKHNlYXJjaCwiZ2kiKSwnPHNwYW4gY2xhc3M9InVpLW1hdGNoIj4kJjwvc3Bhbj4nKSk6dGV4dH19KSxhbmd1bGFyLm1vZHVsZSgidWkuaW5jbHVkZSIsW10pLmRpcmVjdGl2ZSgidWlJbmNsdWRlIixbIiRodHRwIiwiJHRlbXBsYXRlQ2FjaGUiLCIkYW5jaG9yU2Nyb2xsIiwiJGNvbXBpbGUiLGZ1bmN0aW9uKCRodHRwLCR0ZW1wbGF0ZUNhY2hlLCRhbmNob3JTY3JvbGwsJGNvbXBpbGUpe3JldHVybntyZXN0cmljdDoiRUNBIix0ZXJtaW5hbDohMCxjb21waWxlOmZ1bmN0aW9uKGVsZW1lbnQsYXR0cil7dmFyIHNyY0V4cD1hdHRyLnVpSW5jbHVkZXx8YXR0ci5zcmMsZnJhZ0V4cD1hdHRyLmZyYWdtZW50fHwiIixvbmxvYWRFeHA9YXR0ci5vbmxvYWR8fCIiLGF1dG9TY3JvbGxFeHA9YXR0ci5hdXRvc2Nyb2xsO3JldHVybiBmdW5jdGlvbihzY29wZSxlbGVtZW50KXtmdW5jdGlvbiBuZ0luY2x1ZGVXYXRjaEFjdGlvbigpe3ZhciB0aGlzQ2hhbmdlSWQ9KytjaGFuZ2VDb3VudGVyLHNyYz1zY29wZS4kZXZhbChzcmNFeHApLGZyYWdtZW50PXNjb3BlLiRldmFsKGZyYWdFeHApO3NyYz8kaHR0cC5nZXQoc3JjLHtjYWNoZTokdGVtcGxhdGVDYWNoZX0pLnN1Y2Nlc3MoZnVuY3Rpb24ocmVzcG9uc2Upe2lmKHRoaXNDaGFuZ2VJZD09PWNoYW5nZUNvdW50ZXIpe2NoaWxkU2NvcGUmJmNoaWxkU2NvcGUuJGRlc3Ryb3koKSxjaGlsZFNjb3BlPXNjb3BlLiRuZXcoKTt2YXIgY29udGVudHM7Y29udGVudHM9ZnJhZ21lbnQ/YW5ndWxhci5lbGVtZW50KCI8ZGl2Lz4iKS5odG1sKHJlc3BvbnNlKS5maW5kKGZyYWdtZW50KTphbmd1bGFyLmVsZW1lbnQoIjxkaXYvPiIpLmh0bWwocmVzcG9uc2UpLmNvbnRlbnRzKCksZWxlbWVudC5odG1sKGNvbnRlbnRzKSwkY29tcGlsZShjb250ZW50cykoY2hpbGRTY29wZSksIWFuZ3VsYXIuaXNEZWZpbmVkKGF1dG9TY3JvbGxFeHApfHxhdXRvU2Nyb2xsRXhwJiYhc2NvcGUuJGV2YWwoYXV0b1Njcm9sbEV4cCl8fCRhbmNob3JTY3JvbGwoKSxjaGlsZFNjb3BlLiRlbWl0KCIkaW5jbHVkZUNvbnRlbnRMb2FkZWQiKSxzY29wZS4kZXZhbChvbmxvYWRFeHApfX0pLmVycm9yKGZ1bmN0aW9uKCl7dGhpc0NoYW5nZUlkPT09Y2hhbmdlQ291bnRlciYmY2xlYXJDb250ZW50KCl9KTpjbGVhckNvbnRlbnQoKX12YXIgY2hpbGRTY29wZSxjaGFuZ2VDb3VudGVyPTAsY2xlYXJDb250ZW50PWZ1bmN0aW9uKCl7Y2hpbGRTY29wZSYmKGNoaWxkU2NvcGUuJGRlc3Ryb3koKSxjaGlsZFNjb3BlPW51bGwpLGVsZW1lbnQuaHRtbCgiIil9O3Njb3BlLiR3YXRjaChmcmFnRXhwLG5nSW5jbHVkZVdhdGNoQWN0aW9uKSxzY29wZS4kd2F0Y2goc3JjRXhwLG5nSW5jbHVkZVdhdGNoQWN0aW9uKX19fX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuaW5kZXRlcm1pbmF0ZSIsW10pLmRpcmVjdGl2ZSgidWlJbmRldGVybWluYXRlIixbZnVuY3Rpb24oKXtyZXR1cm57Y29tcGlsZTpmdW5jdGlvbih0RWxtLHRBdHRycyl7cmV0dXJuIHRBdHRycy50eXBlJiYiY2hlY2tib3giPT09dEF0dHJzLnR5cGUudG9Mb3dlckNhc2UoKT9mdW5jdGlvbigkc2NvcGUsZWxtLGF0dHJzKXskc2NvcGUuJHdhdGNoKGF0dHJzLnVpSW5kZXRlcm1pbmF0ZSxmdW5jdGlvbihuZXdWYWwpe2VsbVswXS5pbmRldGVybWluYXRlPSEhbmV3VmFsfSl9OmFuZ3VsYXIubm9vcH19fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5pbmZsZWN0b3IiLFtdKS5maWx0ZXIoImluZmxlY3RvciIsZnVuY3Rpb24oKXtmdW5jdGlvbiB1Y3dvcmRzKHRleHQpe3JldHVybiB0ZXh0LnJlcGxhY2UoL14oW2Etel0pfFxzKyhbYS16XSkvZyxmdW5jdGlvbigkMSl7cmV0dXJuICQxLnRvVXBwZXJDYXNlKCl9KX1mdW5jdGlvbiBicmVha3VwKHRleHQsc2VwYXJhdG9yKXtyZXR1cm4gdGV4dC5yZXBsYWNlKC9bQS1aXS9nLGZ1bmN0aW9uKG1hdGNoKXtyZXR1cm4gc2VwYXJhdG9yK21hdGNofSl9dmFyIGluZmxlY3RvcnM9e2h1bWFuaXplOmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdWN3b3JkcyhicmVha3VwKHZhbHVlLCIgIikuc3BsaXQoIl8iKS5qb2luKCIgIikpfSx1bmRlcnNjb3JlOmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWUuc3Vic3RyKDAsMSkudG9Mb3dlckNhc2UoKSticmVha3VwKHZhbHVlLnN1YnN0cigxKSwiXyIpLnRvTG93ZXJDYXNlKCkuc3BsaXQoIiAiKS5qb2luKCJfIil9LHZhcmlhYmxlOmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWU9dmFsdWUuc3Vic3RyKDAsMSkudG9Mb3dlckNhc2UoKSt1Y3dvcmRzKHZhbHVlLnNwbGl0KCJfIikuam9pbigiICIpKS5zdWJzdHIoMSkuc3BsaXQoIiAiKS5qb2luKCIiKX19O3JldHVybiBmdW5jdGlvbih0ZXh0LGluZmxlY3Rvcil7cmV0dXJuIGluZmxlY3RvciE9PSExJiZhbmd1bGFyLmlzU3RyaW5nKHRleHQpPyhpbmZsZWN0b3I9aW5mbGVjdG9yfHwiaHVtYW5pemUiLGluZmxlY3RvcnNbaW5mbGVjdG9yXSh0ZXh0KSk6dGV4dH19KSxhbmd1bGFyLm1vZHVsZSgidWkuanEiLFtdKS52YWx1ZSgidWlKcUNvbmZpZyIse30pLmRpcmVjdGl2ZSgidWlKcSIsWyJ1aUpxQ29uZmlnIiwiJHRpbWVvdXQiLGZ1bmN0aW9uKHVpSnFDb25maWcsJHRpbWVvdXQpe3JldHVybntyZXN0cmljdDoiQSIsY29tcGlsZTpmdW5jdGlvbih0RWxtLHRBdHRycyl7aWYoIWFuZ3VsYXIuaXNGdW5jdGlvbih0RWxtW3RBdHRycy51aUpxXSkpdGhyb3cgbmV3IEVycm9yKCd1aS1qcTogVGhlICInK3RBdHRycy51aUpxKyciIGZ1bmN0aW9uIGRvZXMgbm90IGV4aXN0Jyk7dmFyIG9wdGlvbnM9dWlKcUNvbmZpZyYmdWlKcUNvbmZpZ1t0QXR0cnMudWlKcV07cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRycyl7ZnVuY3Rpb24gY2FsbFBsdWdpbigpeyR0aW1lb3V0KGZ1bmN0aW9uKCl7ZWxtW2F0dHJzLnVpSnFdLmFwcGx5KGVsbSxsaW5rT3B0aW9ucyl9LDAsITEpfXZhciBsaW5rT3B0aW9ucz1bXTthdHRycy51aU9wdGlvbnM/KGxpbmtPcHRpb25zPXNjb3BlLiRldmFsKCJbIithdHRycy51aU9wdGlvbnMrIl0iKSxhbmd1bGFyLmlzT2JqZWN0KG9wdGlvbnMpJiZhbmd1bGFyLmlzT2JqZWN0KGxpbmtPcHRpb25zWzBdKSYmKGxpbmtPcHRpb25zWzBdPWFuZ3VsYXIuZXh0ZW5kKHt9LG9wdGlvbnMsbGlua09wdGlvbnNbMF0pKSk6b3B0aW9ucyYmKGxpbmtPcHRpb25zPVtvcHRpb25zXSksYXR0cnMubmdNb2RlbCYmZWxtLmlzKCJzZWxlY3QsaW5wdXQsdGV4dGFyZWEiKSYmZWxtLmJpbmQoImNoYW5nZSIsZnVuY3Rpb24oKXtlbG0udHJpZ2dlcigiaW5wdXQiKX0pLGF0dHJzLnVpUmVmcmVzaCYmc2NvcGUuJHdhdGNoKGF0dHJzLnVpUmVmcmVzaCxmdW5jdGlvbigpe2NhbGxQbHVnaW4oKX0pLGNhbGxQbHVnaW4oKX19fX1dKSxhbmd1bGFyLm1vZHVsZSgidWkua2V5cHJlc3MiLFtdKS5mYWN0b3J5KCJrZXlwcmVzc0hlbHBlciIsWyIkcGFyc2UiLGZ1bmN0aW9uKCRwYXJzZSl7dmFyIGtleXNCeUNvZGU9ezg6ImJhY2tzcGFjZSIsOToidGFiIiwxMzoiZW50ZXIiLDI3OiJlc2MiLDMyOiJzcGFjZSIsMzM6InBhZ2V1cCIsMzQ6InBhZ2Vkb3duIiwzNToiZW5kIiwzNjoiaG9tZSIsMzc6ImxlZnQiLDM4OiJ1cCIsMzk6InJpZ2h0Iiw0MDoiZG93biIsNDU6Imluc2VydCIsNDY6ImRlbGV0ZSJ9LGNhcGl0YWxpc2VGaXJzdExldHRlcj1mdW5jdGlvbihzdHJpbmcpe3JldHVybiBzdHJpbmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrc3RyaW5nLnNsaWNlKDEpfTtyZXR1cm4gZnVuY3Rpb24obW9kZSxzY29wZSxlbG0sYXR0cnMpe3ZhciBwYXJhbXMsY29tYmluYXRpb25zPVtdO3BhcmFtcz1zY29wZS4kZXZhbChhdHRyc1sidWkiK2NhcGl0YWxpc2VGaXJzdExldHRlcihtb2RlKV0pLGFuZ3VsYXIuZm9yRWFjaChwYXJhbXMsZnVuY3Rpb24odixrKXt2YXIgY29tYmluYXRpb24sZXhwcmVzc2lvbjtleHByZXNzaW9uPSRwYXJzZSh2KSxhbmd1bGFyLmZvckVhY2goay5zcGxpdCgiICIpLGZ1bmN0aW9uKHZhcmlhdGlvbil7Y29tYmluYXRpb249e2V4cHJlc3Npb246ZXhwcmVzc2lvbixrZXlzOnt9fSxhbmd1bGFyLmZvckVhY2godmFyaWF0aW9uLnNwbGl0KCItIiksZnVuY3Rpb24odmFsdWUpe2NvbWJpbmF0aW9uLmtleXNbdmFsdWVdPSEwfSksY29tYmluYXRpb25zLnB1c2goY29tYmluYXRpb24pfSl9KSxlbG0uYmluZChtb2RlLGZ1bmN0aW9uKGV2ZW50KXt2YXIgbWV0YVByZXNzZWQ9ISghZXZlbnQubWV0YUtleXx8ZXZlbnQuY3RybEtleSksYWx0UHJlc3NlZD0hIWV2ZW50LmFsdEtleSxjdHJsUHJlc3NlZD0hIWV2ZW50LmN0cmxLZXksc2hpZnRQcmVzc2VkPSEhZXZlbnQuc2hpZnRLZXksa2V5Q29kZT1ldmVudC5rZXlDb2RlOyJrZXlwcmVzcyI9PT1tb2RlJiYhc2hpZnRQcmVzc2VkJiZrZXlDb2RlPj05NyYmMTIyPj1rZXlDb2RlJiYoa2V5Q29kZS09MzIpLGFuZ3VsYXIuZm9yRWFjaChjb21iaW5hdGlvbnMsZnVuY3Rpb24oY29tYmluYXRpb24pe3ZhciBtYWluS2V5UHJlc3NlZD1jb21iaW5hdGlvbi5rZXlzW2tleXNCeUNvZGVba2V5Q29kZV1dfHxjb21iaW5hdGlvbi5rZXlzW2tleUNvZGUudG9TdHJpbmcoKV0sbWV0YVJlcXVpcmVkPSEhY29tYmluYXRpb24ua2V5cy5tZXRhLGFsdFJlcXVpcmVkPSEhY29tYmluYXRpb24ua2V5cy5hbHQsY3RybFJlcXVpcmVkPSEhY29tYmluYXRpb24ua2V5cy5jdHJsLHNoaWZ0UmVxdWlyZWQ9ISFjb21iaW5hdGlvbi5rZXlzLnNoaWZ0O21haW5LZXlQcmVzc2VkJiZtZXRhUmVxdWlyZWQ9PT1tZXRhUHJlc3NlZCYmYWx0UmVxdWlyZWQ9PT1hbHRQcmVzc2VkJiZjdHJsUmVxdWlyZWQ9PT1jdHJsUHJlc3NlZCYmc2hpZnRSZXF1aXJlZD09PXNoaWZ0UHJlc3NlZCYmc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7Y29tYmluYXRpb24uZXhwcmVzc2lvbihzY29wZSx7JGV2ZW50OmV2ZW50fSl9KX0pfSl9fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5rZXlwcmVzcyIpLmRpcmVjdGl2ZSgidWlLZXlkb3duIixbImtleXByZXNzSGVscGVyIixmdW5jdGlvbihrZXlwcmVzc0hlbHBlcil7cmV0dXJue2xpbms6ZnVuY3Rpb24oc2NvcGUsZWxtLGF0dHJzKXtrZXlwcmVzc0hlbHBlcigia2V5ZG93biIsc2NvcGUsZWxtLGF0dHJzKX19fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5rZXlwcmVzcyIpLmRpcmVjdGl2ZSgidWlLZXlwcmVzcyIsWyJrZXlwcmVzc0hlbHBlciIsZnVuY3Rpb24oa2V5cHJlc3NIZWxwZXIpe3JldHVybntsaW5rOmZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRycyl7a2V5cHJlc3NIZWxwZXIoImtleXByZXNzIixzY29wZSxlbG0sYXR0cnMpfX19XSksYW5ndWxhci5tb2R1bGUoInVpLmtleXByZXNzIikuZGlyZWN0aXZlKCJ1aUtleXVwIixbImtleXByZXNzSGVscGVyIixmdW5jdGlvbihrZXlwcmVzc0hlbHBlcil7cmV0dXJue2xpbms6ZnVuY3Rpb24oc2NvcGUsZWxtLGF0dHJzKXtrZXlwcmVzc0hlbHBlcigia2V5dXAiLHNjb3BlLGVsbSxhdHRycyl9fX1dKSxhbmd1bGFyLm1vZHVsZSgidWkubWFzayIsW10pLnZhbHVlKCJ1aU1hc2tDb25maWciLHttYXNrRGVmaW5pdGlvbnM6ezk6L1xkLyxBOi9bYS16QS1aXS8sIioiOi9bYS16QS1aMC05XS99fSkuZGlyZWN0aXZlKCJ1aU1hc2siLFsidWlNYXNrQ29uZmlnIixmdW5jdGlvbihtYXNrQ29uZmlnKXtyZXR1cm57cHJpb3JpdHk6MTAwLHJlcXVpcmU6Im5nTW9kZWwiLHJlc3RyaWN0OiJBIixjb21waWxlOmZ1bmN0aW9uKCl7dmFyIG9wdGlvbnM9bWFza0NvbmZpZztyZXR1cm4gZnVuY3Rpb24oc2NvcGUsaUVsZW1lbnQsaUF0dHJzLGNvbnRyb2xsZXIpe2Z1bmN0aW9uIGluaXRpYWxpemUobWFza0F0dHIpe3JldHVybiBhbmd1bGFyLmlzRGVmaW5lZChtYXNrQXR0cik/KHByb2Nlc3NSYXdNYXNrKG1hc2tBdHRyKSxtYXNrUHJvY2Vzc2VkPyhpbml0aWFsaXplRWxlbWVudCgpLGJpbmRFdmVudExpc3RlbmVycygpLCEwKTp1bmluaXRpYWxpemUoKSk6dW5pbml0aWFsaXplKCl9ZnVuY3Rpb24gaW5pdFBsYWNlaG9sZGVyKHBsYWNlaG9sZGVyQXR0cil7YW5ndWxhci5pc0RlZmluZWQocGxhY2Vob2xkZXJBdHRyKSYmKG1hc2tQbGFjZWhvbGRlcj1wbGFjZWhvbGRlckF0dHIsbWFza1Byb2Nlc3NlZCYmZXZlbnRIYW5kbGVyKCkpfWZ1bmN0aW9uIGZvcm1hdHRlcihmcm9tTW9kZWxWYWx1ZSl7cmV0dXJuIG1hc2tQcm9jZXNzZWQ/KHZhbHVlPXVubWFza1ZhbHVlKGZyb21Nb2RlbFZhbHVlfHwiIiksaXNWYWxpZD12YWxpZGF0ZVZhbHVlKHZhbHVlKSxjb250cm9sbGVyLiRzZXRWYWxpZGl0eSgibWFzayIsaXNWYWxpZCksaXNWYWxpZCYmdmFsdWUubGVuZ3RoP21hc2tWYWx1ZSh2YWx1ZSk6dm9pZCAwKTpmcm9tTW9kZWxWYWx1ZX1mdW5jdGlvbiBwYXJzZXIoZnJvbVZpZXdWYWx1ZSl7cmV0dXJuIG1hc2tQcm9jZXNzZWQ/KHZhbHVlPXVubWFza1ZhbHVlKGZyb21WaWV3VmFsdWV8fCIiKSxpc1ZhbGlkPXZhbGlkYXRlVmFsdWUodmFsdWUpLGNvbnRyb2xsZXIuJHZpZXdWYWx1ZT12YWx1ZS5sZW5ndGg/bWFza1ZhbHVlKHZhbHVlKToiIixjb250cm9sbGVyLiRzZXRWYWxpZGl0eSgibWFzayIsaXNWYWxpZCksIiI9PT12YWx1ZSYmdm9pZCAwIT09Y29udHJvbGxlci4kZXJyb3IucmVxdWlyZWQmJmNvbnRyb2xsZXIuJHNldFZhbGlkaXR5KCJyZXF1aXJlZCIsITEpLGlzVmFsaWQ/dmFsdWU6dm9pZCAwKTpmcm9tVmlld1ZhbHVlfWZ1bmN0aW9uIHVuaW5pdGlhbGl6ZSgpe3JldHVybiBtYXNrUHJvY2Vzc2VkPSExLHVuYmluZEV2ZW50TGlzdGVuZXJzKCksYW5ndWxhci5pc0RlZmluZWQob3JpZ2luYWxQbGFjZWhvbGRlcik/aUVsZW1lbnQuYXR0cigicGxhY2Vob2xkZXIiLG9yaWdpbmFsUGxhY2Vob2xkZXIpOmlFbGVtZW50LnJlbW92ZUF0dHIoInBsYWNlaG9sZGVyIiksYW5ndWxhci5pc0RlZmluZWQob3JpZ2luYWxNYXhsZW5ndGgpP2lFbGVtZW50LmF0dHIoIm1heGxlbmd0aCIsb3JpZ2luYWxNYXhsZW5ndGgpOmlFbGVtZW50LnJlbW92ZUF0dHIoIm1heGxlbmd0aCIpLGlFbGVtZW50LnZhbChjb250cm9sbGVyLiRtb2RlbFZhbHVlKSxjb250cm9sbGVyLiR2aWV3VmFsdWU9Y29udHJvbGxlci4kbW9kZWxWYWx1ZSwhMX1mdW5jdGlvbiBpbml0aWFsaXplRWxlbWVudCgpe3ZhbHVlPW9sZFZhbHVlVW5tYXNrZWQ9dW5tYXNrVmFsdWUoY29udHJvbGxlci4kbW9kZWxWYWx1ZXx8IiIpLHZhbHVlTWFza2VkPW9sZFZhbHVlPW1hc2tWYWx1ZSh2YWx1ZSksaXNWYWxpZD12YWxpZGF0ZVZhbHVlKHZhbHVlKTt2YXIgdmlld1ZhbHVlPWlzVmFsaWQmJnZhbHVlLmxlbmd0aD92YWx1ZU1hc2tlZDoiIjtpQXR0cnMubWF4bGVuZ3RoJiZpRWxlbWVudC5hdHRyKCJtYXhsZW5ndGgiLDIqbWFza0NhcmV0TWFwW21hc2tDYXJldE1hcC5sZW5ndGgtMV0pLGlFbGVtZW50LmF0dHIoInBsYWNlaG9sZGVyIixtYXNrUGxhY2Vob2xkZXIpLGlFbGVtZW50LnZhbCh2aWV3VmFsdWUpLGNvbnRyb2xsZXIuJHZpZXdWYWx1ZT12aWV3VmFsdWV9ZnVuY3Rpb24gYmluZEV2ZW50TGlzdGVuZXJzKCl7ZXZlbnRzQm91bmR8fChpRWxlbWVudC5iaW5kKCJibHVyIixibHVySGFuZGxlciksaUVsZW1lbnQuYmluZCgibW91c2Vkb3duIG1vdXNldXAiLG1vdXNlRG93blVwSGFuZGxlciksaUVsZW1lbnQuYmluZCgiaW5wdXQga2V5dXAgY2xpY2sgZm9jdXMiLGV2ZW50SGFuZGxlciksZXZlbnRzQm91bmQ9ITApfWZ1bmN0aW9uIHVuYmluZEV2ZW50TGlzdGVuZXJzKCl7ZXZlbnRzQm91bmQmJihpRWxlbWVudC51bmJpbmQoImJsdXIiLGJsdXJIYW5kbGVyKSxpRWxlbWVudC51bmJpbmQoIm1vdXNlZG93biIsbW91c2VEb3duVXBIYW5kbGVyKSxpRWxlbWVudC51bmJpbmQoIm1vdXNldXAiLG1vdXNlRG93blVwSGFuZGxlciksaUVsZW1lbnQudW5iaW5kKCJpbnB1dCIsZXZlbnRIYW5kbGVyKSxpRWxlbWVudC51bmJpbmQoImtleXVwIixldmVudEhhbmRsZXIpLGlFbGVtZW50LnVuYmluZCgiY2xpY2siLGV2ZW50SGFuZGxlciksaUVsZW1lbnQudW5iaW5kKCJmb2N1cyIsZXZlbnRIYW5kbGVyKSxldmVudHNCb3VuZD0hMSl9ZnVuY3Rpb24gdmFsaWRhdGVWYWx1ZSh2YWx1ZSl7cmV0dXJuIHZhbHVlLmxlbmd0aD92YWx1ZS5sZW5ndGg+PW1pblJlcXVpcmVkTGVuZ3RoOiEwfWZ1bmN0aW9uIHVubWFza1ZhbHVlKHZhbHVlKXt2YXIgdmFsdWVVbm1hc2tlZD0iIixtYXNrUGF0dGVybnNDb3B5PW1hc2tQYXR0ZXJucy5zbGljZSgpO3JldHVybiB2YWx1ZT12YWx1ZS50b1N0cmluZygpLGFuZ3VsYXIuZm9yRWFjaChtYXNrQ29tcG9uZW50cyxmdW5jdGlvbihjb21wb25lbnQpe3ZhbHVlPXZhbHVlLnJlcGxhY2UoY29tcG9uZW50LCIiKX0pLGFuZ3VsYXIuZm9yRWFjaCh2YWx1ZS5zcGxpdCgiIiksZnVuY3Rpb24oY2hyKXttYXNrUGF0dGVybnNDb3B5Lmxlbmd0aCYmbWFza1BhdHRlcm5zQ29weVswXS50ZXN0KGNocikmJih2YWx1ZVVubWFza2VkKz1jaHIsbWFza1BhdHRlcm5zQ29weS5zaGlmdCgpKX0pLHZhbHVlVW5tYXNrZWR9ZnVuY3Rpb24gbWFza1ZhbHVlKHVubWFza2VkVmFsdWUpe3ZhciB2YWx1ZU1hc2tlZD0iIixtYXNrQ2FyZXRNYXBDb3B5PW1hc2tDYXJldE1hcC5zbGljZSgpO3JldHVybiBhbmd1bGFyLmZvckVhY2gobWFza1BsYWNlaG9sZGVyLnNwbGl0KCIiKSxmdW5jdGlvbihjaHIsaSl7dW5tYXNrZWRWYWx1ZS5sZW5ndGgmJmk9PT1tYXNrQ2FyZXRNYXBDb3B5WzBdPyh2YWx1ZU1hc2tlZCs9dW5tYXNrZWRWYWx1ZS5jaGFyQXQoMCl8fCJfIix1bm1hc2tlZFZhbHVlPXVubWFza2VkVmFsdWUuc3Vic3RyKDEpLG1hc2tDYXJldE1hcENvcHkuc2hpZnQoKSk6dmFsdWVNYXNrZWQrPWNocn0pLHZhbHVlTWFza2VkfWZ1bmN0aW9uIGdldFBsYWNlaG9sZGVyQ2hhcihpKXt2YXIgcGxhY2Vob2xkZXI9aUF0dHJzLnBsYWNlaG9sZGVyO3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgcGxhY2Vob2xkZXImJnBsYWNlaG9sZGVyW2ldP3BsYWNlaG9sZGVyW2ldOiJfIn1mdW5jdGlvbiBnZXRNYXNrQ29tcG9uZW50cygpe3JldHVybiBtYXNrUGxhY2Vob2xkZXIucmVwbGFjZSgvW19dKy9nLCJfIikucmVwbGFjZSgvKFteX10rKShbYS16QS1aMC05XSkoW15fXSkvZywiJDEkMl8kMyIpLnNwbGl0KCJfIil9ZnVuY3Rpb24gcHJvY2Vzc1Jhd01hc2sobWFzayl7dmFyIGNoYXJhY3RlckNvdW50PTA7aWYobWFza0NhcmV0TWFwPVtdLG1hc2tQYXR0ZXJucz1bXSxtYXNrUGxhY2Vob2xkZXI9IiIsInN0cmluZyI9PXR5cGVvZiBtYXNrKXttaW5SZXF1aXJlZExlbmd0aD0wO3ZhciBpc09wdGlvbmFsPSExLHNwbGl0TWFzaz1tYXNrLnNwbGl0KCIiKTthbmd1bGFyLmZvckVhY2goc3BsaXRNYXNrLGZ1bmN0aW9uKGNocixpKXtsaW5rT3B0aW9ucy5tYXNrRGVmaW5pdGlvbnNbY2hyXT8obWFza0NhcmV0TWFwLnB1c2goY2hhcmFjdGVyQ291bnQpLG1hc2tQbGFjZWhvbGRlcis9Z2V0UGxhY2Vob2xkZXJDaGFyKGkpLG1hc2tQYXR0ZXJucy5wdXNoKGxpbmtPcHRpb25zLm1hc2tEZWZpbml0aW9uc1tjaHJdKSxjaGFyYWN0ZXJDb3VudCsrLGlzT3B0aW9uYWx8fG1pblJlcXVpcmVkTGVuZ3RoKyspOiI/Ij09PWNocj9pc09wdGlvbmFsPSEwOihtYXNrUGxhY2Vob2xkZXIrPWNocixjaGFyYWN0ZXJDb3VudCsrKX0pfW1hc2tDYXJldE1hcC5wdXNoKG1hc2tDYXJldE1hcC5zbGljZSgpLnBvcCgpKzEpLG1hc2tDb21wb25lbnRzPWdldE1hc2tDb21wb25lbnRzKCksbWFza1Byb2Nlc3NlZD1tYXNrQ2FyZXRNYXAubGVuZ3RoPjE/ITA6ITF9ZnVuY3Rpb24gYmx1ckhhbmRsZXIoKXtvbGRDYXJldFBvc2l0aW9uPTAsb2xkU2VsZWN0aW9uTGVuZ3RoPTAsaXNWYWxpZCYmMCE9PXZhbHVlLmxlbmd0aHx8KHZhbHVlTWFza2VkPSIiLGlFbGVtZW50LnZhbCgiIiksc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7Y29udHJvbGxlci4kc2V0Vmlld1ZhbHVlKCIiKX0pKX1mdW5jdGlvbiBtb3VzZURvd25VcEhhbmRsZXIoZSl7Im1vdXNlZG93biI9PT1lLnR5cGU/aUVsZW1lbnQuYmluZCgibW91c2VvdXQiLG1vdXNlb3V0SGFuZGxlcik6aUVsZW1lbnQudW5iaW5kKCJtb3VzZW91dCIsbW91c2VvdXRIYW5kbGVyKX1mdW5jdGlvbiBtb3VzZW91dEhhbmRsZXIoKXtvbGRTZWxlY3Rpb25MZW5ndGg9Z2V0U2VsZWN0aW9uTGVuZ3RoKHRoaXMpLGlFbGVtZW50LnVuYmluZCgibW91c2VvdXQiLG1vdXNlb3V0SGFuZGxlcil9ZnVuY3Rpb24gZXZlbnRIYW5kbGVyKGUpe2U9ZXx8e307dmFyIGV2ZW50V2hpY2g9ZS53aGljaCxldmVudFR5cGU9ZS50eXBlO2lmKDE2IT09ZXZlbnRXaGljaCYmOTEhPT1ldmVudFdoaWNoKXt2YXIgdmFsTWFza2VkLHZhbD1pRWxlbWVudC52YWwoKSx2YWxPbGQ9b2xkVmFsdWUsdmFsVW5tYXNrZWQ9dW5tYXNrVmFsdWUodmFsKSx2YWxVbm1hc2tlZE9sZD1vbGRWYWx1ZVVubWFza2VkLHZhbEFsdGVyZWQ9ITEsY2FyZXRQb3M9Z2V0Q2FyZXRQb3NpdGlvbih0aGlzKXx8MCxjYXJldFBvc09sZD1vbGRDYXJldFBvc2l0aW9ufHwwLGNhcmV0UG9zRGVsdGE9Y2FyZXRQb3MtY2FyZXRQb3NPbGQsY2FyZXRQb3NNaW49bWFza0NhcmV0TWFwWzBdLGNhcmV0UG9zTWF4PW1hc2tDYXJldE1hcFt2YWxVbm1hc2tlZC5sZW5ndGhdfHxtYXNrQ2FyZXRNYXAuc2xpY2UoKS5zaGlmdCgpLHNlbGVjdGlvbkxlbk9sZD1vbGRTZWxlY3Rpb25MZW5ndGh8fDAsaXNTZWxlY3RlZD1nZXRTZWxlY3Rpb25MZW5ndGgodGhpcyk+MCx3YXNTZWxlY3RlZD1zZWxlY3Rpb25MZW5PbGQ+MCxpc0FkZGl0aW9uPXZhbC5sZW5ndGg+dmFsT2xkLmxlbmd0aHx8c2VsZWN0aW9uTGVuT2xkJiZ2YWwubGVuZ3RoPnZhbE9sZC5sZW5ndGgtc2VsZWN0aW9uTGVuT2xkLGlzRGVsZXRpb249dmFsLmxlbmd0aDx2YWxPbGQubGVuZ3RofHxzZWxlY3Rpb25MZW5PbGQmJnZhbC5sZW5ndGg9PT12YWxPbGQubGVuZ3RoLXNlbGVjdGlvbkxlbk9sZCxpc1NlbGVjdGlvbj1ldmVudFdoaWNoPj0zNyYmNDA+PWV2ZW50V2hpY2gmJmUuc2hpZnRLZXksaXNLZXlMZWZ0QXJyb3c9Mzc9PT1ldmVudFdoaWNoLGlzS2V5QmFja3NwYWNlPTg9PT1ldmVudFdoaWNofHwia2V5dXAiIT09ZXZlbnRUeXBlJiZpc0RlbGV0aW9uJiYtMT09PWNhcmV0UG9zRGVsdGEsaXNLZXlEZWxldGU9NDY9PT1ldmVudFdoaWNofHwia2V5dXAiIT09ZXZlbnRUeXBlJiZpc0RlbGV0aW9uJiYwPT09Y2FyZXRQb3NEZWx0YSYmIXdhc1NlbGVjdGVkLGNhcmV0QnVtcEJhY2s9KGlzS2V5TGVmdEFycm93fHxpc0tleUJhY2tzcGFjZXx8ImNsaWNrIj09PWV2ZW50VHlwZSkmJmNhcmV0UG9zPmNhcmV0UG9zTWluO2lmKG9sZFNlbGVjdGlvbkxlbmd0aD1nZXRTZWxlY3Rpb25MZW5ndGgodGhpcyksIWlzU2VsZWN0aW9uJiYoIWlzU2VsZWN0ZWR8fCJjbGljayIhPT1ldmVudFR5cGUmJiJrZXl1cCIhPT1ldmVudFR5cGUpKXtpZigiaW5wdXQiPT09ZXZlbnRUeXBlJiZpc0RlbGV0aW9uJiYhd2FzU2VsZWN0ZWQmJnZhbFVubWFza2VkPT09dmFsVW5tYXNrZWRPbGQpe2Zvcig7aXNLZXlCYWNrc3BhY2UmJmNhcmV0UG9zPmNhcmV0UG9zTWluJiYhaXNWYWxpZENhcmV0UG9zaXRpb24oY2FyZXRQb3MpOyljYXJldFBvcy0tO2Zvcig7aXNLZXlEZWxldGUmJmNhcmV0UG9zTWF4PmNhcmV0UG9zJiYtMT09PW1hc2tDYXJldE1hcC5pbmRleE9mKGNhcmV0UG9zKTspY2FyZXRQb3MrKzt2YXIgY2hhckluZGV4PW1hc2tDYXJldE1hcC5pbmRleE9mKGNhcmV0UG9zKTt2YWxVbm1hc2tlZD12YWxVbm1hc2tlZC5zdWJzdHJpbmcoMCxjaGFySW5kZXgpK3ZhbFVubWFza2VkLnN1YnN0cmluZyhjaGFySW5kZXgrMSksdmFsQWx0ZXJlZD0hMH1mb3IodmFsTWFza2VkPW1hc2tWYWx1ZSh2YWxVbm1hc2tlZCksb2xkVmFsdWU9dmFsTWFza2VkLG9sZFZhbHVlVW5tYXNrZWQ9dmFsVW5tYXNrZWQsaUVsZW1lbnQudmFsKHZhbE1hc2tlZCksdmFsQWx0ZXJlZCYmc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7Y29udHJvbGxlci4kc2V0Vmlld1ZhbHVlKHZhbFVubWFza2VkKX0pLGlzQWRkaXRpb24mJmNhcmV0UG9zTWluPj1jYXJldFBvcyYmKGNhcmV0UG9zPWNhcmV0UG9zTWluKzEpLGNhcmV0QnVtcEJhY2smJmNhcmV0UG9zLS0sY2FyZXRQb3M9Y2FyZXRQb3M+Y2FyZXRQb3NNYXg/Y2FyZXRQb3NNYXg6Y2FyZXRQb3NNaW4+Y2FyZXRQb3M/Y2FyZXRQb3NNaW46Y2FyZXRQb3M7IWlzVmFsaWRDYXJldFBvc2l0aW9uKGNhcmV0UG9zKSYmY2FyZXRQb3M+Y2FyZXRQb3NNaW4mJmNhcmV0UG9zTWF4PmNhcmV0UG9zOyljYXJldFBvcys9Y2FyZXRCdW1wQmFjaz8tMToxOyhjYXJldEJ1bXBCYWNrJiZjYXJldFBvc01heD5jYXJldFBvc3x8aXNBZGRpdGlvbiYmIWlzVmFsaWRDYXJldFBvc2l0aW9uKGNhcmV0UG9zT2xkKSkmJmNhcmV0UG9zKyssb2xkQ2FyZXRQb3NpdGlvbj1jYXJldFBvcyxzZXRDYXJldFBvc2l0aW9uKHRoaXMsY2FyZXRQb3MpfX19ZnVuY3Rpb24gaXNWYWxpZENhcmV0UG9zaXRpb24ocG9zKXtyZXR1cm4gbWFza0NhcmV0TWFwLmluZGV4T2YocG9zKT4tMX1mdW5jdGlvbiBnZXRDYXJldFBvc2l0aW9uKGlucHV0KXtpZighaW5wdXQpcmV0dXJuIDA7aWYodm9pZCAwIT09aW5wdXQuc2VsZWN0aW9uU3RhcnQpcmV0dXJuIGlucHV0LnNlbGVjdGlvblN0YXJ0O2lmKGRvY3VtZW50LnNlbGVjdGlvbil7aW5wdXQuZm9jdXMoKTt2YXIgc2VsZWN0aW9uPWRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpO3JldHVybiBzZWxlY3Rpb24ubW92ZVN0YXJ0KCJjaGFyYWN0ZXIiLC1pbnB1dC52YWx1ZS5sZW5ndGgpLHNlbGVjdGlvbi50ZXh0Lmxlbmd0aH1yZXR1cm4gMH1mdW5jdGlvbiBzZXRDYXJldFBvc2l0aW9uKGlucHV0LHBvcyl7aWYoIWlucHV0KXJldHVybiAwO2lmKDAhPT1pbnB1dC5vZmZzZXRXaWR0aCYmMCE9PWlucHV0Lm9mZnNldEhlaWdodClpZihpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZSlpbnB1dC5mb2N1cygpLGlucHV0LnNldFNlbGVjdGlvblJhbmdlKHBvcyxwb3MpO2Vsc2UgaWYoaW5wdXQuY3JlYXRlVGV4dFJhbmdlKXt2YXIgcmFuZ2U9aW5wdXQuY3JlYXRlVGV4dFJhbmdlKCk7cmFuZ2UuY29sbGFwc2UoITApLHJhbmdlLm1vdmVFbmQoImNoYXJhY3RlciIscG9zKSxyYW5nZS5tb3ZlU3RhcnQoImNoYXJhY3RlciIscG9zKSxyYW5nZS5zZWxlY3QoKX19ZnVuY3Rpb24gZ2V0U2VsZWN0aW9uTGVuZ3RoKGlucHV0KXtyZXR1cm4gaW5wdXQ/dm9pZCAwIT09aW5wdXQuc2VsZWN0aW9uU3RhcnQ/aW5wdXQuc2VsZWN0aW9uRW5kLWlucHV0LnNlbGVjdGlvblN0YXJ0OmRvY3VtZW50LnNlbGVjdGlvbj9kb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKS50ZXh0Lmxlbmd0aDowOjB9dmFyIG1hc2tDYXJldE1hcCxtYXNrUGF0dGVybnMsbWFza1BsYWNlaG9sZGVyLG1hc2tDb21wb25lbnRzLG1pblJlcXVpcmVkTGVuZ3RoLHZhbHVlLHZhbHVlTWFza2VkLGlzVmFsaWQsb2xkVmFsdWUsb2xkVmFsdWVVbm1hc2tlZCxvbGRDYXJldFBvc2l0aW9uLG9sZFNlbGVjdGlvbkxlbmd0aCxtYXNrUHJvY2Vzc2VkPSExLGV2ZW50c0JvdW5kPSExLG9yaWdpbmFsUGxhY2Vob2xkZXI9aUF0dHJzLnBsYWNlaG9sZGVyLG9yaWdpbmFsTWF4bGVuZ3RoPWlBdHRycy5tYXhsZW5ndGgsbGlua09wdGlvbnM9e307aUF0dHJzLnVpT3B0aW9ucz8obGlua09wdGlvbnM9c2NvcGUuJGV2YWwoIlsiK2lBdHRycy51aU9wdGlvbnMrIl0iKSxhbmd1bGFyLmlzT2JqZWN0KGxpbmtPcHRpb25zWzBdKSYmKGxpbmtPcHRpb25zPWZ1bmN0aW9uKG9yaWdpbmFsLGN1cnJlbnQpe2Zvcih2YXIgaSBpbiBvcmlnaW5hbClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3JpZ2luYWwsaSkmJihjdXJyZW50W2ldP2FuZ3VsYXIuZXh0ZW5kKGN1cnJlbnRbaV0sb3JpZ2luYWxbaV0pOmN1cnJlbnRbaV09YW5ndWxhci5jb3B5KG9yaWdpbmFsW2ldKSk7cmV0dXJuIGN1cnJlbnR9KG9wdGlvbnMsbGlua09wdGlvbnNbMF0pKSk6bGlua09wdGlvbnM9b3B0aW9ucyxpQXR0cnMuJG9ic2VydmUoInVpTWFzayIsaW5pdGlhbGl6ZSksaUF0dHJzLiRvYnNlcnZlKCJwbGFjZWhvbGRlciIsaW5pdFBsYWNlaG9sZGVyKSxjb250cm9sbGVyLiRmb3JtYXR0ZXJzLnB1c2goZm9ybWF0dGVyKSxjb250cm9sbGVyLiRwYXJzZXJzLnB1c2gocGFyc2VyKSxpRWxlbWVudC5iaW5kKCJtb3VzZWRvd24gbW91c2V1cCIsbW91c2VEb3duVXBIYW5kbGVyKSxBcnJheS5wcm90b3R5cGUuaW5kZXhPZnx8KEFycmF5LnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHNlYXJjaEVsZW1lbnQpe2lmKG51bGw9PT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3I7dmFyIHQ9T2JqZWN0KHRoaXMpLGxlbj10Lmxlbmd0aD4+PjA7aWYoMD09PWxlbilyZXR1cm4tMTt2YXIgbj0wO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSYmKG49TnVtYmVyKGFyZ3VtZW50c1sxXSksbiE9PW4/bj0wOjAhPT1uJiYxLzAhPT1uJiZuIT09LTEvMCYmKG49KG4+MHx8LTEpKk1hdGguZmxvb3IoTWF0aC5hYnMobikpKSksbj49bGVuKXJldHVybi0xO2Zvcih2YXIgaz1uPj0wP246TWF0aC5tYXgobGVuLU1hdGguYWJzKG4pLDApO2xlbj5rO2srKylpZihrIGluIHQmJnRba109PT1zZWFyY2hFbGVtZW50KXJldHVybiBrO3JldHVybi0xfSl9fX19XSksYW5ndWxhci5tb2R1bGUoInVpLnJlc2V0IixbXSkudmFsdWUoInVpUmVzZXRDb25maWciLG51bGwpLmRpcmVjdGl2ZSgidWlSZXNldCIsWyJ1aVJlc2V0Q29uZmlnIixmdW5jdGlvbih1aVJlc2V0Q29uZmlnKXt2YXIgcmVzZXRWYWx1ZT1udWxsO3JldHVybiB2b2lkIDAhPT11aVJlc2V0Q29uZmlnJiYocmVzZXRWYWx1ZT11aVJlc2V0Q29uZmlnKSx7cmVxdWlyZToibmdNb2RlbCIsbGluazpmdW5jdGlvbihzY29wZSxlbG0sYXR0cnMsY3RybCl7dmFyIGFFbGVtZW50O2FFbGVtZW50PWFuZ3VsYXIuZWxlbWVudCgnPGEgY2xhc3M9InVpLXJlc2V0IiAvPicpLGVsbS53cmFwKCc8c3BhbiBjbGFzcz0idWktcmVzZXR3cmFwIiAvPicpLmFmdGVyKGFFbGVtZW50KSxhRWxlbWVudC5iaW5kKCJjbGljayIsZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHNjb3BlLiRhcHBseShmdW5jdGlvbigpe2N0cmwuJHNldFZpZXdWYWx1ZShhdHRycy51aVJlc2V0P3Njb3BlLiRldmFsKGF0dHJzLnVpUmVzZXQpOnJlc2V0VmFsdWUpLGN0cmwuJHJlbmRlcigpfSl9KX19fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5yb3V0ZSIsW10pLmRpcmVjdGl2ZSgidWlSb3V0ZSIsWyIkbG9jYXRpb24iLCIkcGFyc2UiLGZ1bmN0aW9uKCRsb2NhdGlvbiwkcGFyc2Upe3JldHVybntyZXN0cmljdDoiQUMiLHNjb3BlOiEwLGNvbXBpbGU6ZnVuY3Rpb24odEVsZW1lbnQsdEF0dHJzKXt2YXIgdXNlUHJvcGVydHk7aWYodEF0dHJzLnVpUm91dGUpdXNlUHJvcGVydHk9InVpUm91dGUiO2Vsc2UgaWYodEF0dHJzLm5nSHJlZil1c2VQcm9wZXJ0eT0ibmdIcmVmIjtlbHNle2lmKCF0QXR0cnMuaHJlZil0aHJvdyBuZXcgRXJyb3IoInVpUm91dGUgbWlzc2luZyBhIHJvdXRlIG9yIGhyZWYgcHJvcGVydHkgb24gIit0RWxlbWVudFswXSk7dXNlUHJvcGVydHk9ImhyZWYifXJldHVybiBmdW5jdGlvbigkc2NvcGUsZWxtLGF0dHJzKXtmdW5jdGlvbiBzdGF0aWNXYXRjaGVyKG5ld1ZhbCl7dmFyIGhhc2g9bmV3VmFsLmluZGV4T2YoIiMiKTtoYXNoPi0xJiYobmV3VmFsPW5ld1ZhbC5zdWJzdHIoaGFzaCsxKSksKHdhdGNoZXI9ZnVuY3Rpb24oKXttb2RlbFNldHRlcigkc2NvcGUsJGxvY2F0aW9uLnBhdGgoKS5pbmRleE9mKG5ld1ZhbCk+LTEpfSkoKX1mdW5jdGlvbiByZWdleFdhdGNoZXIobmV3VmFsKXt2YXIgaGFzaD1uZXdWYWwuaW5kZXhPZigiIyIpO2hhc2g+LTEmJihuZXdWYWw9bmV3VmFsLnN1YnN0cihoYXNoKzEpKSwod2F0Y2hlcj1mdW5jdGlvbigpe3ZhciByZWdleHA9bmV3IFJlZ0V4cCgiXiIrbmV3VmFsKyIkIixbImkiXSk7bW9kZWxTZXR0ZXIoJHNjb3BlLHJlZ2V4cC50ZXN0KCRsb2NhdGlvbi5wYXRoKCkpKX0pKCl9dmFyIG1vZGVsU2V0dGVyPSRwYXJzZShhdHRycy5uZ01vZGVsfHxhdHRycy5yb3V0ZU1vZGVsfHwiJHVpUm91dGUiKS5hc3NpZ24sd2F0Y2hlcj1hbmd1bGFyLm5vb3A7c3dpdGNoKHVzZVByb3BlcnR5KXtjYXNlInVpUm91dGUiOmF0dHJzLnVpUm91dGU/cmVnZXhXYXRjaGVyKGF0dHJzLnVpUm91dGUpOmF0dHJzLiRvYnNlcnZlKCJ1aVJvdXRlIixyZWdleFdhdGNoZXIpO2JyZWFrO2Nhc2UibmdIcmVmIjphdHRycy5uZ0hyZWY/c3RhdGljV2F0Y2hlcihhdHRycy5uZ0hyZWYpOmF0dHJzLiRvYnNlcnZlKCJuZ0hyZWYiLHN0YXRpY1dhdGNoZXIpO2JyZWFrO2Nhc2UiaHJlZiI6c3RhdGljV2F0Y2hlcihhdHRycy5ocmVmKX0kc2NvcGUuJG9uKCIkcm91dGVDaGFuZ2VTdWNjZXNzIixmdW5jdGlvbigpe3dhdGNoZXIoKX0pLCRzY29wZS4kb24oIiRzdGF0ZUNoYW5nZVN1Y2Nlc3MiLGZ1bmN0aW9uKCl7d2F0Y2hlcigpfSl9fX19XSksYW5ndWxhci5tb2R1bGUoInVpLnNjcm9sbC5qcWxpdGUiLFsidWkuc2Nyb2xsIl0pLnNlcnZpY2UoImpxTGl0ZUV4dHJhcyIsWyIkbG9nIiwiJHdpbmRvdyIsZnVuY3Rpb24oY29uc29sZSx3aW5kb3cpe3JldHVybntyZWdpc3RlckZvcjpmdW5jdGlvbihlbGVtZW50KXt2YXIgY29udmVydFRvUHgsY3NzLGdldE1lYXN1cmVtZW50cyxnZXRTdHlsZSxnZXRXaWR0aEhlaWdodCxpc1dpbmRvdyxzY3JvbGxUbztyZXR1cm4gY3NzPWFuZ3VsYXIuZWxlbWVudC5wcm90b3R5cGUuY3NzLGVsZW1lbnQucHJvdG90eXBlLmNzcz1mdW5jdGlvbihuYW1lLHZhbHVlKXt2YXIgZWxlbSxzZWxmO3JldHVybiBzZWxmPXRoaXMsZWxlbT1zZWxmWzBdLGVsZW0mJjMhPT1lbGVtLm5vZGVUeXBlJiY4IT09ZWxlbS5ub2RlVHlwZSYmZWxlbS5zdHlsZT9jc3MuY2FsbChzZWxmLG5hbWUsdmFsdWUpOnZvaWQgMH0saXNXaW5kb3c9ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZvYmouZG9jdW1lbnQmJm9iai5sb2NhdGlvbiYmb2JqLmFsZXJ0JiZvYmouc2V0SW50ZXJ2YWx9LHNjcm9sbFRvPWZ1bmN0aW9uKHNlbGYsZGlyZWN0aW9uLHZhbHVlKXt2YXIgZWxlbSxtZXRob2QscHJlc2VydmUscHJvcCxfcmVmO3JldHVybiBlbGVtPXNlbGZbMF0sX3JlZj17dG9wOlsic2Nyb2xsVG9wIiwicGFnZVlPZmZzZXQiLCJzY3JvbGxMZWZ0Il0sbGVmdDpbInNjcm9sbExlZnQiLCJwYWdlWE9mZnNldCIsInNjcm9sbFRvcCJdfVtkaXJlY3Rpb25dLG1ldGhvZD1fcmVmWzBdLHByb3A9X3JlZlsxXSxwcmVzZXJ2ZT1fcmVmWzJdLGlzV2luZG93KGVsZW0pP2FuZ3VsYXIuaXNEZWZpbmVkKHZhbHVlKT9lbGVtLnNjcm9sbFRvKHNlbGZbcHJlc2VydmVdLmNhbGwoc2VsZiksdmFsdWUpOnByb3AgaW4gZWxlbT9lbGVtW3Byb3BdOmVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50W21ldGhvZF06YW5ndWxhci5pc0RlZmluZWQodmFsdWUpP2VsZW1bbWV0aG9kXT12YWx1ZTplbGVtW21ldGhvZF19LHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlPyhnZXRTdHlsZT1mdW5jdGlvbihlbGVtKXtyZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbSxudWxsKX0sY29udmVydFRvUHg9ZnVuY3Rpb24oZWxlbSx2YWx1ZSl7cmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpfSk6KGdldFN0eWxlPWZ1bmN0aW9uKGVsZW0pe3JldHVybiBlbGVtLmN1cnJlbnRTdHlsZX0sY29udmVydFRvUHg9ZnVuY3Rpb24oZWxlbSx2YWx1ZSl7dmFyIGNvcmVfcG51bSxsZWZ0LHJlc3VsdCxybnVtbm9ucHgscnMscnNMZWZ0LHN0eWxlO3JldHVybiBjb3JlX3BudW09L1srLV0/KD86XGQqXC58KVxkKyg/OltlRV1bKy1dP1xkK3wpLy5zb3VyY2Uscm51bW5vbnB4PW5ldyBSZWdFeHAoIl4oIitjb3JlX3BudW0rIikoPyFweClbYS16JV0rJCIsImkiKSxybnVtbm9ucHgudGVzdCh2YWx1ZSk/KHN0eWxlPWVsZW0uc3R5bGUsbGVmdD1zdHlsZS5sZWZ0LHJzPWVsZW0ucnVudGltZVN0eWxlLHJzTGVmdD1ycyYmcnMubGVmdCxycyYmKHJzLmxlZnQ9c3R5bGUubGVmdCksc3R5bGUubGVmdD12YWx1ZSxyZXN1bHQ9c3R5bGUucGl4ZWxMZWZ0LHN0eWxlLmxlZnQ9bGVmdCxyc0xlZnQmJihycy5sZWZ0PXJzTGVmdCkscmVzdWx0KTpwYXJzZUZsb2F0KHZhbHVlKX0pLGdldE1lYXN1cmVtZW50cz1mdW5jdGlvbihlbGVtLG1lYXN1cmUpe3ZhciBiYXNlLGJvcmRlckEsYm9yZGVyQixjb21wdXRlZE1hcmdpbkEsY29tcHV0ZWRNYXJnaW5CLGNvbXB1dGVkU3R5bGUsZGlyQSxkaXJCLG1hcmdpbkEsbWFyZ2luQixwYWRkaW5nQSxwYWRkaW5nQixfcmVmO3JldHVybiBpc1dpbmRvdyhlbGVtKT8oYmFzZT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbe2hlaWdodDoiY2xpZW50SGVpZ2h0Iix3aWR0aDoiY2xpZW50V2lkdGgifVttZWFzdXJlXV0se2Jhc2U6YmFzZSxwYWRkaW5nOjAsYm9yZGVyOjAsbWFyZ2luOjB9KTooX3JlZj17d2lkdGg6W2VsZW0ub2Zmc2V0V2lkdGgsIkxlZnQiLCJSaWdodCJdLGhlaWdodDpbZWxlbS5vZmZzZXRIZWlnaHQsIlRvcCIsIkJvdHRvbSJdfVttZWFzdXJlXSxiYXNlPV9yZWZbMF0sZGlyQT1fcmVmWzFdLGRpckI9X3JlZlsyXSxjb21wdXRlZFN0eWxlPWdldFN0eWxlKGVsZW0pLHBhZGRpbmdBPWNvbnZlcnRUb1B4KGVsZW0sY29tcHV0ZWRTdHlsZVsicGFkZGluZyIrZGlyQV0pfHwwLHBhZGRpbmdCPWNvbnZlcnRUb1B4KGVsZW0sY29tcHV0ZWRTdHlsZVsicGFkZGluZyIrZGlyQl0pfHwwLGJvcmRlckE9Y29udmVydFRvUHgoZWxlbSxjb21wdXRlZFN0eWxlWyJib3JkZXIiK2RpckErIldpZHRoIl0pfHwwLGJvcmRlckI9Y29udmVydFRvUHgoZWxlbSxjb21wdXRlZFN0eWxlWyJib3JkZXIiK2RpckIrIldpZHRoIl0pfHwwLGNvbXB1dGVkTWFyZ2luQT1jb21wdXRlZFN0eWxlWyJtYXJnaW4iK2RpckFdLGNvbXB1dGVkTWFyZ2luQj1jb21wdXRlZFN0eWxlWyJtYXJnaW4iK2RpckJdLG1hcmdpbkE9Y29udmVydFRvUHgoZWxlbSxjb21wdXRlZE1hcmdpbkEpfHwwLG1hcmdpbkI9Y29udmVydFRvUHgoZWxlbSxjb21wdXRlZE1hcmdpbkIpfHwwLHtiYXNlOmJhc2UscGFkZGluZzpwYWRkaW5nQStwYWRkaW5nQixib3JkZXI6Ym9yZGVyQStib3JkZXJCLG1hcmdpbjptYXJnaW5BK21hcmdpbkJ9KX0sZ2V0V2lkdGhIZWlnaHQ9ZnVuY3Rpb24oZWxlbSxkaXJlY3Rpb24sbWVhc3VyZSl7dmFyIGNvbXB1dGVkU3R5bGUsbWVhc3VyZW1lbnRzLHJlc3VsdDtyZXR1cm4gbWVhc3VyZW1lbnRzPWdldE1lYXN1cmVtZW50cyhlbGVtLGRpcmVjdGlvbiksbWVhc3VyZW1lbnRzLmJhc2U+MD97YmFzZTptZWFzdXJlbWVudHMuYmFzZS1tZWFzdXJlbWVudHMucGFkZGluZy1tZWFzdXJlbWVudHMuYm9yZGVyLG91dGVyOm1lYXN1cmVtZW50cy5iYXNlLG91dGVyZnVsbDptZWFzdXJlbWVudHMuYmFzZSttZWFzdXJlbWVudHMubWFyZ2lufVttZWFzdXJlXTooY29tcHV0ZWRTdHlsZT1nZXRTdHlsZShlbGVtKSxyZXN1bHQ9Y29tcHV0ZWRTdHlsZVtkaXJlY3Rpb25dLCgwPnJlc3VsdHx8bnVsbD09PXJlc3VsdCkmJihyZXN1bHQ9ZWxlbS5zdHlsZVtkaXJlY3Rpb25dfHwwKSxyZXN1bHQ9cGFyc2VGbG9hdChyZXN1bHQpfHwwLHtiYXNlOnJlc3VsdC1tZWFzdXJlbWVudHMucGFkZGluZy1tZWFzdXJlbWVudHMuYm9yZGVyLG91dGVyOnJlc3VsdCxvdXRlcmZ1bGw6cmVzdWx0K21lYXN1cmVtZW50cy5wYWRkaW5nK21lYXN1cmVtZW50cy5ib3JkZXIrbWVhc3VyZW1lbnRzLm1hcmdpbn1bbWVhc3VyZV0pfSxhbmd1bGFyLmZvckVhY2goe2JlZm9yZTpmdW5jdGlvbihuZXdFbGVtKXt2YXIgY2hpbGRyZW4sZWxlbSxpLHBhcmVudCxzZWxmLF9pLF9yZWY7aWYoc2VsZj10aGlzLGVsZW09c2VsZlswXSxwYXJlbnQ9c2VsZi5wYXJlbnQoKSxjaGlsZHJlbj1wYXJlbnQuY29udGVudHMoKSxjaGlsZHJlblswXT09PWVsZW0pcmV0dXJuIHBhcmVudC5wcmVwZW5kKG5ld0VsZW0pO2ZvcihpPV9pPTEsX3JlZj1jaGlsZHJlbi5sZW5ndGgtMTtfcmVmPj0xP19yZWY+PV9pOl9pPj1fcmVmO2k9X3JlZj49MT8rK19pOi0tX2kpaWYoY2hpbGRyZW5baV09PT1lbGVtKXJldHVybiB2b2lkIGFuZ3VsYXIuZWxlbWVudChjaGlsZHJlbltpLTFdKS5hZnRlcihuZXdFbGVtKTt0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgRE9NIHN0cnVjdHVyZSAiK2VsZW0ub3V0ZXJIVE1MKX0saGVpZ2h0OmZ1bmN0aW9uKHZhbHVlKXt2YXIgc2VsZjtyZXR1cm4gc2VsZj10aGlzLGFuZ3VsYXIuaXNEZWZpbmVkKHZhbHVlKT8oYW5ndWxhci5pc051bWJlcih2YWx1ZSkmJih2YWx1ZSs9InB4IiksY3NzLmNhbGwoc2VsZiwiaGVpZ2h0Iix2YWx1ZSkpOmdldFdpZHRoSGVpZ2h0KHRoaXNbMF0sImhlaWdodCIsImJhc2UiKX0sb3V0ZXJIZWlnaHQ6ZnVuY3Rpb24ob3B0aW9uKXtyZXR1cm4gZ2V0V2lkdGhIZWlnaHQodGhpc1swXSwiaGVpZ2h0IixvcHRpb24/Im91dGVyZnVsbCI6Im91dGVyIil9LG9mZnNldDpmdW5jdGlvbih2YWx1ZSl7dmFyIGJveCxkb2MsZG9jRWxlbSxlbGVtLHNlbGYsd2luO3JldHVybiBzZWxmPXRoaXMsYXJndW1lbnRzLmxlbmd0aD92b2lkIDA9PT12YWx1ZT9zZWxmOnZhbHVlOihib3g9e3RvcDowLGxlZnQ6MH0sZWxlbT1zZWxmWzBdLChkb2M9ZWxlbSYmZWxlbS5vd25lckRvY3VtZW50KT8oZG9jRWxlbT1kb2MuZG9jdW1lbnRFbGVtZW50LGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0JiYoYm94PWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpLHdpbj1kb2MuZGVmYXVsdFZpZXd8fGRvYy5wYXJlbnRXaW5kb3cse3RvcDpib3gudG9wKyh3aW4ucGFnZVlPZmZzZXR8fGRvY0VsZW0uc2Nyb2xsVG9wKS0oZG9jRWxlbS5jbGllbnRUb3B8fDApLGxlZnQ6Ym94LmxlZnQrKHdpbi5wYWdlWE9mZnNldHx8ZG9jRWxlbS5zY3JvbGxMZWZ0KS0oZG9jRWxlbS5jbGllbnRMZWZ0fHwwKX0pOnZvaWQgMCl9LHNjcm9sbFRvcDpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHNjcm9sbFRvKHRoaXMsInRvcCIsdmFsdWUpfSxzY3JvbGxMZWZ0OmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gc2Nyb2xsVG8odGhpcywibGVmdCIsdmFsdWUpfX0sZnVuY3Rpb24odmFsdWUsa2V5KXtyZXR1cm4gZWxlbWVudC5wcm90b3R5cGVba2V5XT92b2lkIDA6ZWxlbWVudC5wcm90b3R5cGVba2V5XT12YWx1ZX0pfX19XSkucnVuKFsiJGxvZyIsIiR3aW5kb3ciLCJqcUxpdGVFeHRyYXMiLGZ1bmN0aW9uKGNvbnNvbGUsd2luZG93LGpxTGl0ZUV4dHJhcyl7cmV0dXJuIHdpbmRvdy5qUXVlcnk/dm9pZCAwOmpxTGl0ZUV4dHJhcy5yZWdpc3RlckZvcihhbmd1bGFyLmVsZW1lbnQpfV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS5zY3JvbGwiLFtdKS5kaXJlY3RpdmUoIm5nU2Nyb2xsVmlld3BvcnQiLFsiJGxvZyIsZnVuY3Rpb24oKXtyZXR1cm57Y29udHJvbGxlcjpbIiRzY29wZSIsIiRlbGVtZW50IixmdW5jdGlvbihzY29wZSxlbGVtZW50KXtyZXR1cm4gZWxlbWVudH1dfX1dKS5kaXJlY3RpdmUoIm5nU2Nyb2xsIixbIiRsb2ciLCIkaW5qZWN0b3IiLCIkcm9vdFNjb3BlIiwiJHRpbWVvdXQiLGZ1bmN0aW9uKGNvbnNvbGUsJGluamVjdG9yLCRyb290U2NvcGUsJHRpbWVvdXQpe3JldHVybntyZXF1aXJlOlsiP15uZ1Njcm9sbFZpZXdwb3J0Il0sdHJhbnNjbHVkZToiZWxlbWVudCIscHJpb3JpdHk6MWUzLHRlcm1pbmFsOiEwLGNvbXBpbGU6ZnVuY3Rpb24oZWxlbWVudCxhdHRyLGxpbmtlcil7cmV0dXJuIGZ1bmN0aW9uKCRzY29wZSwkZWxlbWVudCwkYXR0cixjb250cm9sbGVycyl7dmFyIGFkYXB0ZXIsYWRqdXN0QnVmZmVyLGFkanVzdFJvd0hlaWdodCxib2YsYm90dG9tVmlzaWJsZVBvcyxidWZmZXIsYnVmZmVyUGFkZGluZyxidWZmZXJTaXplLGNsaXBCb3R0b20sY2xpcFRvcCxkYXRhc291cmNlLGRhdGFzb3VyY2VOYW1lLGVucXVldWVGZXRjaCxlb2YsZXZlbnRMaXN0ZW5lcixmZXRjaCxmaW5hbGl6ZSxmaXJzdCxpbnNlcnQsaXNEYXRhc291cmNlLGlzTG9hZGluZyxpdGVtTmFtZSxsb2FkaW5nLG1hdGNoLG5leHQscGVuZGluZyxyZWxvYWQscmVtb3ZlRnJvbUJ1ZmZlcixyZXNpemVIYW5kbGVyLHNjcm9sbEhhbmRsZXIsc2Nyb2xsSGVpZ2h0LHNob3VsZExvYWRCb3R0b20sc2hvdWxkTG9hZFRvcCx0ZW1wU2NvcGUsdG9wVmlzaWJsZVBvcyx2aWV3cG9ydDsKaWYobWF0Y2g9JGF0dHIubmdTY3JvbGwubWF0Y2goL15ccyooXHcrKVxzK2luXHMrKFx3KylccyokLyksIW1hdGNoKXRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgbmdTY3JvbGwgaW4gZm9ybSBvZiAiaXRlbV8gaW4gX2RhdGFzb3VyY2VfIiBidXQgZ290ICInKyRhdHRyLm5nU2Nyb2xsKyciJyk7aWYoaXRlbU5hbWU9bWF0Y2hbMV0sZGF0YXNvdXJjZU5hbWU9bWF0Y2hbMl0saXNEYXRhc291cmNlPWZ1bmN0aW9uKGRhdGFzb3VyY2Upe3JldHVybiBhbmd1bGFyLmlzT2JqZWN0KGRhdGFzb3VyY2UpJiZkYXRhc291cmNlLmdldCYmYW5ndWxhci5pc0Z1bmN0aW9uKGRhdGFzb3VyY2UuZ2V0KX0sZGF0YXNvdXJjZT0kc2NvcGVbZGF0YXNvdXJjZU5hbWVdLCFpc0RhdGFzb3VyY2UoZGF0YXNvdXJjZSkmJihkYXRhc291cmNlPSRpbmplY3Rvci5nZXQoZGF0YXNvdXJjZU5hbWUpLCFpc0RhdGFzb3VyY2UoZGF0YXNvdXJjZSkpKXRocm93IG5ldyBFcnJvcihkYXRhc291cmNlTmFtZSsiIGlzIG5vdCBhIHZhbGlkIGRhdGFzb3VyY2UiKTtyZXR1cm4gYnVmZmVyU2l6ZT1NYXRoLm1heCgzLCskYXR0ci5idWZmZXJTaXplfHwxMCksYnVmZmVyUGFkZGluZz1mdW5jdGlvbigpe3JldHVybiB2aWV3cG9ydC5oZWlnaHQoKSpNYXRoLm1heCguMSwrJGF0dHIucGFkZGluZ3x8LjEpfSxzY3JvbGxIZWlnaHQ9ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW1bMF0uc2Nyb2xsSGVpZ2h0fHxlbGVtWzBdLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHR9LGFkYXB0ZXI9bnVsbCxsaW5rZXIodGVtcFNjb3BlPSRzY29wZS4kbmV3KCksZnVuY3Rpb24odGVtcGxhdGUpe3ZhciBib3R0b21QYWRkaW5nLGNyZWF0ZVBhZGRpbmcscGFkZGluZyxyZXBlYXRlclR5cGUsdG9wUGFkZGluZyx2aWV3cG9ydDtpZihyZXBlYXRlclR5cGU9dGVtcGxhdGVbMF0ubG9jYWxOYW1lLCJkbCI9PT1yZXBlYXRlclR5cGUpdGhyb3cgbmV3IEVycm9yKCJuZy1zY3JvbGwgZGlyZWN0aXZlIGRvZXMgbm90IHN1cHBvcnQgPCIrdGVtcGxhdGVbMF0ubG9jYWxOYW1lKyI+IGFzIGEgcmVwZWF0aW5nIHRhZzogIit0ZW1wbGF0ZVswXS5vdXRlckhUTUwpO3JldHVybiJsaSIhPT1yZXBlYXRlclR5cGUmJiJ0ciIhPT1yZXBlYXRlclR5cGUmJihyZXBlYXRlclR5cGU9ImRpdiIpLHZpZXdwb3J0PWNvbnRyb2xsZXJzWzBdfHxhbmd1bGFyLmVsZW1lbnQod2luZG93KSx2aWV3cG9ydC5jc3MoeyJvdmVyZmxvdy15IjoiYXV0byIsZGlzcGxheToiYmxvY2sifSkscGFkZGluZz1mdW5jdGlvbihyZXBlYXRlclR5cGUpe3ZhciBkaXYscmVzdWx0LHRhYmxlO3N3aXRjaChyZXBlYXRlclR5cGUpe2Nhc2UidHIiOnJldHVybiB0YWJsZT1hbmd1bGFyLmVsZW1lbnQoIjx0YWJsZT48dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPjwvdGFibGU+IiksZGl2PXRhYmxlLmZpbmQoImRpdiIpLHJlc3VsdD10YWJsZS5maW5kKCJ0ciIpLHJlc3VsdC5wYWRkaW5nSGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIGRpdi5oZWlnaHQuYXBwbHkoZGl2LGFyZ3VtZW50cyl9LHJlc3VsdDtkZWZhdWx0OnJldHVybiByZXN1bHQ9YW5ndWxhci5lbGVtZW50KCI8IityZXBlYXRlclR5cGUrIj48LyIrcmVwZWF0ZXJUeXBlKyI+IikscmVzdWx0LnBhZGRpbmdIZWlnaHQ9cmVzdWx0LmhlaWdodCxyZXN1bHR9fSxjcmVhdGVQYWRkaW5nPWZ1bmN0aW9uKHBhZGRpbmcsZWxlbWVudCxkaXJlY3Rpb24pe3JldHVybiBlbGVtZW50W3t0b3A6ImJlZm9yZSIsYm90dG9tOiJhZnRlciJ9W2RpcmVjdGlvbl1dKHBhZGRpbmcpLHtwYWRkaW5nSGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHBhZGRpbmcucGFkZGluZ0hlaWdodC5hcHBseShwYWRkaW5nLGFyZ3VtZW50cyl9LGluc2VydDpmdW5jdGlvbihlbGVtZW50KXtyZXR1cm4gcGFkZGluZ1t7dG9wOiJhZnRlciIsYm90dG9tOiJiZWZvcmUifVtkaXJlY3Rpb25dXShlbGVtZW50KX19fSx0b3BQYWRkaW5nPWNyZWF0ZVBhZGRpbmcocGFkZGluZyhyZXBlYXRlclR5cGUpLGVsZW1lbnQsInRvcCIpLGJvdHRvbVBhZGRpbmc9Y3JlYXRlUGFkZGluZyhwYWRkaW5nKHJlcGVhdGVyVHlwZSksZWxlbWVudCwiYm90dG9tIiksdGVtcFNjb3BlLiRkZXN0cm95KCksYWRhcHRlcj17dmlld3BvcnQ6dmlld3BvcnQsdG9wUGFkZGluZzp0b3BQYWRkaW5nLnBhZGRpbmdIZWlnaHQsYm90dG9tUGFkZGluZzpib3R0b21QYWRkaW5nLnBhZGRpbmdIZWlnaHQsYXBwZW5kOmJvdHRvbVBhZGRpbmcuaW5zZXJ0LHByZXBlbmQ6dG9wUGFkZGluZy5pbnNlcnQsYm90dG9tRGF0YVBvczpmdW5jdGlvbigpe3JldHVybiBzY3JvbGxIZWlnaHQodmlld3BvcnQpLWJvdHRvbVBhZGRpbmcucGFkZGluZ0hlaWdodCgpfSx0b3BEYXRhUG9zOmZ1bmN0aW9uKCl7cmV0dXJuIHRvcFBhZGRpbmcucGFkZGluZ0hlaWdodCgpfX19KSx2aWV3cG9ydD1hZGFwdGVyLnZpZXdwb3J0LGZpcnN0PTEsbmV4dD0xLGJ1ZmZlcj1bXSxwZW5kaW5nPVtdLGVvZj0hMSxib2Y9ITEsbG9hZGluZz1kYXRhc291cmNlLmxvYWRpbmd8fGZ1bmN0aW9uKCl7fSxpc0xvYWRpbmc9ITEscmVtb3ZlRnJvbUJ1ZmZlcj1mdW5jdGlvbihzdGFydCxzdG9wKXt2YXIgaSxfaTtmb3IoaT1faT1zdGFydDtzdG9wPj1zdGFydD9zdG9wPl9pOl9pPnN0b3A7aT1zdG9wPj1zdGFydD8rK19pOi0tX2kpYnVmZmVyW2ldLnNjb3BlLiRkZXN0cm95KCksYnVmZmVyW2ldLmVsZW1lbnQucmVtb3ZlKCk7cmV0dXJuIGJ1ZmZlci5zcGxpY2Uoc3RhcnQsc3RvcC1zdGFydCl9LHJlbG9hZD1mdW5jdGlvbigpe3JldHVybiBmaXJzdD0xLG5leHQ9MSxyZW1vdmVGcm9tQnVmZmVyKDAsYnVmZmVyLmxlbmd0aCksYWRhcHRlci50b3BQYWRkaW5nKDApLGFkYXB0ZXIuYm90dG9tUGFkZGluZygwKSxwZW5kaW5nPVtdLGVvZj0hMSxib2Y9ITEsYWRqdXN0QnVmZmVyKCExKX0sYm90dG9tVmlzaWJsZVBvcz1mdW5jdGlvbigpe3JldHVybiB2aWV3cG9ydC5zY3JvbGxUb3AoKSt2aWV3cG9ydC5oZWlnaHQoKX0sdG9wVmlzaWJsZVBvcz1mdW5jdGlvbigpe3JldHVybiB2aWV3cG9ydC5zY3JvbGxUb3AoKX0sc2hvdWxkTG9hZEJvdHRvbT1mdW5jdGlvbigpe3JldHVybiFlb2YmJmFkYXB0ZXIuYm90dG9tRGF0YVBvcygpPGJvdHRvbVZpc2libGVQb3MoKStidWZmZXJQYWRkaW5nKCl9LGNsaXBCb3R0b209ZnVuY3Rpb24oKXt2YXIgYm90dG9tSGVpZ2h0LGksaXRlbUhlaWdodCxvdmVyYWdlLF9pLF9yZWY7Zm9yKGJvdHRvbUhlaWdodD0wLG92ZXJhZ2U9MCxpPV9pPV9yZWY9YnVmZmVyLmxlbmd0aC0xOygwPj1fcmVmPzA+PV9pOl9pPj0wKSYmKGl0ZW1IZWlnaHQ9YnVmZmVyW2ldLmVsZW1lbnQub3V0ZXJIZWlnaHQoITApLGFkYXB0ZXIuYm90dG9tRGF0YVBvcygpLWJvdHRvbUhlaWdodC1pdGVtSGVpZ2h0PmJvdHRvbVZpc2libGVQb3MoKStidWZmZXJQYWRkaW5nKCkpO2k9MD49X3JlZj8rK19pOi0tX2kpYm90dG9tSGVpZ2h0Kz1pdGVtSGVpZ2h0LG92ZXJhZ2UrKyxlb2Y9ITE7cmV0dXJuIG92ZXJhZ2U+MD8oYWRhcHRlci5ib3R0b21QYWRkaW5nKGFkYXB0ZXIuYm90dG9tUGFkZGluZygpK2JvdHRvbUhlaWdodCkscmVtb3ZlRnJvbUJ1ZmZlcihidWZmZXIubGVuZ3RoLW92ZXJhZ2UsYnVmZmVyLmxlbmd0aCksbmV4dC09b3ZlcmFnZSxjb25zb2xlLmxvZygiY2xpcHBlZCBvZmYgYm90dG9tICIrb3ZlcmFnZSsiIGJvdHRvbSBwYWRkaW5nICIrYWRhcHRlci5ib3R0b21QYWRkaW5nKCkpKTp2b2lkIDB9LHNob3VsZExvYWRUb3A9ZnVuY3Rpb24oKXtyZXR1cm4hYm9mJiZhZGFwdGVyLnRvcERhdGFQb3MoKT50b3BWaXNpYmxlUG9zKCktYnVmZmVyUGFkZGluZygpfSxjbGlwVG9wPWZ1bmN0aW9uKCl7dmFyIGl0ZW0saXRlbUhlaWdodCxvdmVyYWdlLHRvcEhlaWdodCxfaSxfbGVuO2Zvcih0b3BIZWlnaHQ9MCxvdmVyYWdlPTAsX2k9MCxfbGVuPWJ1ZmZlci5sZW5ndGg7X2xlbj5faSYmKGl0ZW09YnVmZmVyW19pXSxpdGVtSGVpZ2h0PWl0ZW0uZWxlbWVudC5vdXRlckhlaWdodCghMCksYWRhcHRlci50b3BEYXRhUG9zKCkrdG9wSGVpZ2h0K2l0ZW1IZWlnaHQ8dG9wVmlzaWJsZVBvcygpLWJ1ZmZlclBhZGRpbmcoKSk7X2krKyl0b3BIZWlnaHQrPWl0ZW1IZWlnaHQsb3ZlcmFnZSsrLGJvZj0hMTtyZXR1cm4gb3ZlcmFnZT4wPyhhZGFwdGVyLnRvcFBhZGRpbmcoYWRhcHRlci50b3BQYWRkaW5nKCkrdG9wSGVpZ2h0KSxyZW1vdmVGcm9tQnVmZmVyKDAsb3ZlcmFnZSksZmlyc3QrPW92ZXJhZ2UsY29uc29sZS5sb2coImNsaXBwZWQgb2ZmIHRvcCAiK292ZXJhZ2UrIiB0b3AgcGFkZGluZyAiK2FkYXB0ZXIudG9wUGFkZGluZygpKSk6dm9pZCAwfSxlbnF1ZXVlRmV0Y2g9ZnVuY3Rpb24oZGlyZWN0aW9uLHNjcm9sbGluZyl7cmV0dXJuIGlzTG9hZGluZ3x8KGlzTG9hZGluZz0hMCxsb2FkaW5nKCEwKSksMT09PXBlbmRpbmcucHVzaChkaXJlY3Rpb24pP2ZldGNoKHNjcm9sbGluZyk6dm9pZCAwfSxpbnNlcnQ9ZnVuY3Rpb24oaW5kZXgsaXRlbSl7dmFyIGl0ZW1TY29wZSx0b0JlQXBwZW5kZWQsd3JhcHBlcjtyZXR1cm4gaXRlbVNjb3BlPSRzY29wZS4kbmV3KCksaXRlbVNjb3BlW2l0ZW1OYW1lXT1pdGVtLHRvQmVBcHBlbmRlZD1pbmRleD5maXJzdCxpdGVtU2NvcGUuJGluZGV4PWluZGV4LHRvQmVBcHBlbmRlZCYmaXRlbVNjb3BlLiRpbmRleC0tLHdyYXBwZXI9e3Njb3BlOml0ZW1TY29wZX0sbGlua2VyKGl0ZW1TY29wZSxmdW5jdGlvbihjbG9uZSl7cmV0dXJuIHdyYXBwZXIuZWxlbWVudD1jbG9uZSx0b0JlQXBwZW5kZWQ/aW5kZXg9PT1uZXh0PyhhZGFwdGVyLmFwcGVuZChjbG9uZSksYnVmZmVyLnB1c2god3JhcHBlcikpOihidWZmZXJbaW5kZXgtZmlyc3RdLmVsZW1lbnQuYWZ0ZXIoY2xvbmUpLGJ1ZmZlci5zcGxpY2UoaW5kZXgtZmlyc3QrMSwwLHdyYXBwZXIpKTooYWRhcHRlci5wcmVwZW5kKGNsb25lKSxidWZmZXIudW5zaGlmdCh3cmFwcGVyKSl9KSx7YXBwZW5kZWQ6dG9CZUFwcGVuZGVkLHdyYXBwZXI6d3JhcHBlcn19LGFkanVzdFJvd0hlaWdodD1mdW5jdGlvbihhcHBlbmRlZCx3cmFwcGVyKXt2YXIgbmV3SGVpZ2h0O3JldHVybiBhcHBlbmRlZD9hZGFwdGVyLmJvdHRvbVBhZGRpbmcoTWF0aC5tYXgoMCxhZGFwdGVyLmJvdHRvbVBhZGRpbmcoKS13cmFwcGVyLmVsZW1lbnQub3V0ZXJIZWlnaHQoITApKSk6KG5ld0hlaWdodD1hZGFwdGVyLnRvcFBhZGRpbmcoKS13cmFwcGVyLmVsZW1lbnQub3V0ZXJIZWlnaHQoITApLG5ld0hlaWdodD49MD9hZGFwdGVyLnRvcFBhZGRpbmcobmV3SGVpZ2h0KTp2aWV3cG9ydC5zY3JvbGxUb3Aodmlld3BvcnQuc2Nyb2xsVG9wKCkrd3JhcHBlci5lbGVtZW50Lm91dGVySGVpZ2h0KCEwKSkpfSxhZGp1c3RCdWZmZXI9ZnVuY3Rpb24oc2Nyb2xsaW5nLG5ld0l0ZW1zLGZpbmFsaXplKXt2YXIgZG9BZGp1c3RtZW50O3JldHVybiBkb0FkanVzdG1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gY29uc29sZS5sb2coInRvcCB7YWN0dWFsPSIrYWRhcHRlci50b3BEYXRhUG9zKCkrIiB2aXNpYmxlIGZyb209Iit0b3BWaXNpYmxlUG9zKCkrIiBib3R0b20ge3Zpc2libGUgdGhyb3VnaD0iK2JvdHRvbVZpc2libGVQb3MoKSsiIGFjdHVhbD0iK2FkYXB0ZXIuYm90dG9tRGF0YVBvcygpKyJ9Iiksc2hvdWxkTG9hZEJvdHRvbSgpP2VucXVldWVGZXRjaCghMCxzY3JvbGxpbmcpOnNob3VsZExvYWRUb3AoKSYmZW5xdWV1ZUZldGNoKCExLHNjcm9sbGluZyksZmluYWxpemU/ZmluYWxpemUoKTp2b2lkIDB9LG5ld0l0ZW1zPyR0aW1lb3V0KGZ1bmN0aW9uKCl7dmFyIHJvdyxfaSxfbGVuO2ZvcihfaT0wLF9sZW49bmV3SXRlbXMubGVuZ3RoO19sZW4+X2k7X2krKylyb3c9bmV3SXRlbXNbX2ldLGFkanVzdFJvd0hlaWdodChyb3cuYXBwZW5kZWQscm93LndyYXBwZXIpO3JldHVybiBkb0FkanVzdG1lbnQoKX0pOmRvQWRqdXN0bWVudCgpfSxmaW5hbGl6ZT1mdW5jdGlvbihzY3JvbGxpbmcsbmV3SXRlbXMpe3JldHVybiBhZGp1c3RCdWZmZXIoc2Nyb2xsaW5nLG5ld0l0ZW1zLGZ1bmN0aW9uKCl7cmV0dXJuIHBlbmRpbmcuc2hpZnQoKSwwPT09cGVuZGluZy5sZW5ndGg/KGlzTG9hZGluZz0hMSxsb2FkaW5nKCExKSk6ZmV0Y2goc2Nyb2xsaW5nKX0pfSxmZXRjaD1mdW5jdGlvbihzY3JvbGxpbmcpe3ZhciBkaXJlY3Rpb247cmV0dXJuIGRpcmVjdGlvbj1wZW5kaW5nWzBdLGRpcmVjdGlvbj9idWZmZXIubGVuZ3RoJiYhc2hvdWxkTG9hZEJvdHRvbSgpP2ZpbmFsaXplKHNjcm9sbGluZyk6ZGF0YXNvdXJjZS5nZXQobmV4dCxidWZmZXJTaXplLGZ1bmN0aW9uKHJlc3VsdCl7dmFyIGl0ZW0sbmV3SXRlbXMsX2ksX2xlbjtpZihuZXdJdGVtcz1bXSwwPT09cmVzdWx0Lmxlbmd0aCllb2Y9ITAsYWRhcHRlci5ib3R0b21QYWRkaW5nKDApLGNvbnNvbGUubG9nKCJhcHBlbmRlZDogcmVxdWVzdGVkICIrYnVmZmVyU2l6ZSsiIHJlY29yZHMgc3RhcnRpbmcgZnJvbSAiK25leHQrIiByZWNpZXZlZDogZW9mIik7ZWxzZXtmb3IoY2xpcFRvcCgpLF9pPTAsX2xlbj1yZXN1bHQubGVuZ3RoO19sZW4+X2k7X2krKylpdGVtPXJlc3VsdFtfaV0sbmV3SXRlbXMucHVzaChpbnNlcnQoKytuZXh0LGl0ZW0pKTtjb25zb2xlLmxvZygiYXBwZW5kZWQ6IHJlcXVlc3RlZCAiK2J1ZmZlclNpemUrIiByZWNlaXZlZCAiK3Jlc3VsdC5sZW5ndGgrIiBidWZmZXIgc2l6ZSAiK2J1ZmZlci5sZW5ndGgrIiBmaXJzdCAiK2ZpcnN0KyIgbmV4dCAiK25leHQpfXJldHVybiBmaW5hbGl6ZShzY3JvbGxpbmcsbmV3SXRlbXMpfSk6YnVmZmVyLmxlbmd0aCYmIXNob3VsZExvYWRUb3AoKT9maW5hbGl6ZShzY3JvbGxpbmcpOmRhdGFzb3VyY2UuZ2V0KGZpcnN0LWJ1ZmZlclNpemUsYnVmZmVyU2l6ZSxmdW5jdGlvbihyZXN1bHQpe3ZhciBpLG5ld0l0ZW1zLF9pLF9yZWY7aWYobmV3SXRlbXM9W10sMD09PXJlc3VsdC5sZW5ndGgpYm9mPSEwLGFkYXB0ZXIudG9wUGFkZGluZygwKSxjb25zb2xlLmxvZygicHJlcGVuZGVkOiByZXF1ZXN0ZWQgIitidWZmZXJTaXplKyIgcmVjb3JkcyBzdGFydGluZyBmcm9tICIrKGZpcnN0LWJ1ZmZlclNpemUpKyIgcmVjaWV2ZWQ6IGJvZiIpO2Vsc2V7Zm9yKGNsaXBCb3R0b20oKSxpPV9pPV9yZWY9cmVzdWx0Lmxlbmd0aC0xOzA+PV9yZWY/MD49X2k6X2k+PTA7aT0wPj1fcmVmPysrX2k6LS1faSluZXdJdGVtcy51bnNoaWZ0KGluc2VydCgtLWZpcnN0LHJlc3VsdFtpXSkpO2NvbnNvbGUubG9nKCJwcmVwZW5kZWQ6IHJlcXVlc3RlZCAiK2J1ZmZlclNpemUrIiByZWNlaXZlZCAiK3Jlc3VsdC5sZW5ndGgrIiBidWZmZXIgc2l6ZSAiK2J1ZmZlci5sZW5ndGgrIiBmaXJzdCAiK2ZpcnN0KyIgbmV4dCAiK25leHQpfXJldHVybiBmaW5hbGl6ZShzY3JvbGxpbmcsbmV3SXRlbXMpfSl9LHJlc2l6ZUhhbmRsZXI9ZnVuY3Rpb24oKXtyZXR1cm4gJHJvb3RTY29wZS4kJHBoYXNlfHxpc0xvYWRpbmc/dm9pZCAwOihhZGp1c3RCdWZmZXIoITEpLCRzY29wZS4kYXBwbHkoKSl9LHZpZXdwb3J0LmJpbmQoInJlc2l6ZSIscmVzaXplSGFuZGxlciksc2Nyb2xsSGFuZGxlcj1mdW5jdGlvbigpe3JldHVybiAkcm9vdFNjb3BlLiQkcGhhc2V8fGlzTG9hZGluZz92b2lkIDA6KGFkanVzdEJ1ZmZlcighMCksJHNjb3BlLiRhcHBseSgpKX0sdmlld3BvcnQuYmluZCgic2Nyb2xsIixzY3JvbGxIYW5kbGVyKSwkc2NvcGUuJHdhdGNoKGRhdGFzb3VyY2UucmV2aXNpb24sZnVuY3Rpb24oKXtyZXR1cm4gcmVsb2FkKCl9KSxldmVudExpc3RlbmVyPWRhdGFzb3VyY2Uuc2NvcGU/ZGF0YXNvdXJjZS5zY29wZS4kbmV3KCk6JHNjb3BlLiRuZXcoKSwkc2NvcGUuJG9uKCIkZGVzdHJveSIsZnVuY3Rpb24oKXtyZXR1cm4gZXZlbnRMaXN0ZW5lci4kZGVzdHJveSgpLHZpZXdwb3J0LnVuYmluZCgicmVzaXplIixyZXNpemVIYW5kbGVyKSx2aWV3cG9ydC51bmJpbmQoInNjcm9sbCIsc2Nyb2xsSGFuZGxlcil9KSxldmVudExpc3RlbmVyLiRvbigidXBkYXRlLml0ZW1zIixmdW5jdGlvbihldmVudCxsb2NhdG9yLG5ld0l0ZW0pe3ZhciB3cmFwcGVyLF9mbixfaSxfbGVuLF9yZWY7aWYoYW5ndWxhci5pc0Z1bmN0aW9uKGxvY2F0b3IpKWZvcihfZm49ZnVuY3Rpb24od3JhcHBlcil7cmV0dXJuIGxvY2F0b3Iod3JhcHBlci5zY29wZSl9LF9pPTAsX2xlbj1idWZmZXIubGVuZ3RoO19sZW4+X2k7X2krKyl3cmFwcGVyPWJ1ZmZlcltfaV0sX2ZuKHdyYXBwZXIpO2Vsc2UgMDw9KF9yZWY9bG9jYXRvci1maXJzdC0xKSYmX3JlZjxidWZmZXIubGVuZ3RoJiYoYnVmZmVyW2xvY2F0b3ItZmlyc3QtMV0uc2NvcGVbaXRlbU5hbWVdPW5ld0l0ZW0pO3JldHVybiBudWxsfSksZXZlbnRMaXN0ZW5lci4kb24oImRlbGV0ZS5pdGVtcyIsZnVuY3Rpb24oZXZlbnQsbG9jYXRvcil7dmFyIGksaXRlbSx0ZW1wLHdyYXBwZXIsX2ZuLF9pLF9qLF9rLF9sZW4sX2xlbjEsX2xlbjIsX3JlZjtpZihhbmd1bGFyLmlzRnVuY3Rpb24obG9jYXRvcikpe2Zvcih0ZW1wPVtdLF9pPTAsX2xlbj1idWZmZXIubGVuZ3RoO19sZW4+X2k7X2krKylpdGVtPWJ1ZmZlcltfaV0sdGVtcC51bnNoaWZ0KGl0ZW0pO2ZvcihfZm49ZnVuY3Rpb24od3JhcHBlcil7cmV0dXJuIGxvY2F0b3Iod3JhcHBlci5zY29wZSk/KHJlbW92ZUZyb21CdWZmZXIodGVtcC5sZW5ndGgtMS1pLHRlbXAubGVuZ3RoLWkpLG5leHQtLSk6dm9pZCAwfSxpPV9qPTAsX2xlbjE9dGVtcC5sZW5ndGg7X2xlbjE+X2o7aT0rK19qKXdyYXBwZXI9dGVtcFtpXSxfZm4od3JhcHBlcil9ZWxzZSAwPD0oX3JlZj1sb2NhdG9yLWZpcnN0LTEpJiZfcmVmPGJ1ZmZlci5sZW5ndGgmJihyZW1vdmVGcm9tQnVmZmVyKGxvY2F0b3ItZmlyc3QtMSxsb2NhdG9yLWZpcnN0KSxuZXh0LS0pO2ZvcihpPV9rPTAsX2xlbjI9YnVmZmVyLmxlbmd0aDtfbGVuMj5faztpPSsrX2spaXRlbT1idWZmZXJbaV0saXRlbS5zY29wZS4kaW5kZXg9Zmlyc3QraTtyZXR1cm4gYWRqdXN0QnVmZmVyKCExKX0pLGV2ZW50TGlzdGVuZXIuJG9uKCJpbnNlcnQuaXRlbSIsZnVuY3Rpb24oZXZlbnQsbG9jYXRvcixpdGVtKXt2YXIgaSxpbnNlcnRlZCx0ZW1wLHdyYXBwZXIsX2ZuLF9pLF9qLF9rLF9sZW4sX2xlbjEsX2xlbjIsX3JlZjtpZihpbnNlcnRlZD1bXSxhbmd1bGFyLmlzRnVuY3Rpb24obG9jYXRvcikpe2Zvcih0ZW1wPVtdLF9pPTAsX2xlbj1idWZmZXIubGVuZ3RoO19sZW4+X2k7X2krKylpdGVtPWJ1ZmZlcltfaV0sdGVtcC51bnNoaWZ0KGl0ZW0pO2ZvcihfZm49ZnVuY3Rpb24od3JhcHBlcil7dmFyIGosbmV3SXRlbXMsX2ssX2xlbjIsX3Jlc3VsdHM7aWYobmV3SXRlbXM9bG9jYXRvcih3cmFwcGVyLnNjb3BlKSl7aWYoaW5zZXJ0PWZ1bmN0aW9uKGluZGV4LG5ld0l0ZW0pe3JldHVybiBpbnNlcnQoaW5kZXgsbmV3SXRlbSksbmV4dCsrfSxhbmd1bGFyLmlzQXJyYXkobmV3SXRlbXMpKXtmb3IoX3Jlc3VsdHM9W10saj1faz0wLF9sZW4yPW5ld0l0ZW1zLmxlbmd0aDtfbGVuMj5faztqPSsrX2spaXRlbT1uZXdJdGVtc1tqXSxfcmVzdWx0cy5wdXNoKGluc2VydGVkLnB1c2goaW5zZXJ0KGkraixpdGVtKSkpO3JldHVybiBfcmVzdWx0c31yZXR1cm4gaW5zZXJ0ZWQucHVzaChpbnNlcnQoaSxuZXdJdGVtcykpfX0saT1faj0wLF9sZW4xPXRlbXAubGVuZ3RoO19sZW4xPl9qO2k9Kytfail3cmFwcGVyPXRlbXBbaV0sX2ZuKHdyYXBwZXIpfWVsc2UgMDw9KF9yZWY9bG9jYXRvci1maXJzdC0xKSYmX3JlZjxidWZmZXIubGVuZ3RoJiYoaW5zZXJ0ZWQucHVzaChpbnNlcnQobG9jYXRvcixpdGVtKSksbmV4dCsrKTtmb3IoaT1faz0wLF9sZW4yPWJ1ZmZlci5sZW5ndGg7X2xlbjI+X2s7aT0rK19rKWl0ZW09YnVmZmVyW2ldLGl0ZW0uc2NvcGUuJGluZGV4PWZpcnN0K2k7cmV0dXJuIGFkanVzdEJ1ZmZlcighMSxpbnNlcnRlZCl9KX19fX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuc2Nyb2xsZml4IixbXSkuZGlyZWN0aXZlKCJ1aVNjcm9sbGZpeCIsWyIkd2luZG93IixmdW5jdGlvbigkd2luZG93KXtyZXR1cm57cmVxdWlyZToiXj91aVNjcm9sbGZpeFRhcmdldCIsbGluazpmdW5jdGlvbihzY29wZSxlbG0sYXR0cnMsdWlTY3JvbGxmaXhUYXJnZXQpe2Z1bmN0aW9uIG9uU2Nyb2xsKCl7dmFyIG9mZnNldDtpZihhbmd1bGFyLmlzRGVmaW5lZCgkd2luZG93LnBhZ2VZT2Zmc2V0KSlvZmZzZXQ9JHdpbmRvdy5wYWdlWU9mZnNldDtlbHNle3ZhciBpZWJvZHk9ZG9jdW1lbnQuY29tcGF0TW9kZSYmIkJhY2tDb21wYXQiIT09ZG9jdW1lbnQuY29tcGF0TW9kZT9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ6ZG9jdW1lbnQuYm9keTtvZmZzZXQ9aWVib2R5LnNjcm9sbFRvcH0hZWxtLmhhc0NsYXNzKCJ1aS1zY3JvbGxmaXgiKSYmb2Zmc2V0PmF0dHJzLnVpU2Nyb2xsZml4P2VsbS5hZGRDbGFzcygidWktc2Nyb2xsZml4Iik6ZWxtLmhhc0NsYXNzKCJ1aS1zY3JvbGxmaXgiKSYmb2Zmc2V0PGF0dHJzLnVpU2Nyb2xsZml4JiZlbG0ucmVtb3ZlQ2xhc3MoInVpLXNjcm9sbGZpeCIpfXZhciB0b3A9ZWxtWzBdLm9mZnNldFRvcCwkdGFyZ2V0PXVpU2Nyb2xsZml4VGFyZ2V0JiZ1aVNjcm9sbGZpeFRhcmdldC4kZWxlbWVudHx8YW5ndWxhci5lbGVtZW50KCR3aW5kb3cpO2F0dHJzLnVpU2Nyb2xsZml4PyJzdHJpbmciPT10eXBlb2YgYXR0cnMudWlTY3JvbGxmaXgmJigiLSI9PT1hdHRycy51aVNjcm9sbGZpeC5jaGFyQXQoMCk/YXR0cnMudWlTY3JvbGxmaXg9dG9wLXBhcnNlRmxvYXQoYXR0cnMudWlTY3JvbGxmaXguc3Vic3RyKDEpKToiKyI9PT1hdHRycy51aVNjcm9sbGZpeC5jaGFyQXQoMCkmJihhdHRycy51aVNjcm9sbGZpeD10b3ArcGFyc2VGbG9hdChhdHRycy51aVNjcm9sbGZpeC5zdWJzdHIoMSkpKSk6YXR0cnMudWlTY3JvbGxmaXg9dG9wLCR0YXJnZXQub24oInNjcm9sbCIsb25TY3JvbGwpLHNjb3BlLiRvbigiJGRlc3Ryb3kiLGZ1bmN0aW9uKCl7JHRhcmdldC5vZmYoInNjcm9sbCIsb25TY3JvbGwpfSl9fX1dKS5kaXJlY3RpdmUoInVpU2Nyb2xsZml4VGFyZ2V0IixbZnVuY3Rpb24oKXtyZXR1cm57Y29udHJvbGxlcjpbIiRlbGVtZW50IixmdW5jdGlvbigkZWxlbWVudCl7dGhpcy4kZWxlbWVudD0kZWxlbWVudH1dfX1dKSxhbmd1bGFyLm1vZHVsZSgidWkuc2hvd2hpZGUiLFtdKS5kaXJlY3RpdmUoInVpU2hvdyIsW2Z1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRycyl7c2NvcGUuJHdhdGNoKGF0dHJzLnVpU2hvdyxmdW5jdGlvbihuZXdWYWwpe25ld1ZhbD9lbG0uYWRkQ2xhc3MoInVpLXNob3ciKTplbG0ucmVtb3ZlQ2xhc3MoInVpLXNob3ciKX0pfX1dKS5kaXJlY3RpdmUoInVpSGlkZSIsW2Z1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHNjb3BlLGVsbSxhdHRycyl7c2NvcGUuJHdhdGNoKGF0dHJzLnVpSGlkZSxmdW5jdGlvbihuZXdWYWwpe25ld1ZhbD9lbG0uYWRkQ2xhc3MoInVpLWhpZGUiKTplbG0ucmVtb3ZlQ2xhc3MoInVpLWhpZGUiKX0pfX1dKS5kaXJlY3RpdmUoInVpVG9nZ2xlIixbZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oc2NvcGUsZWxtLGF0dHJzKXtzY29wZS4kd2F0Y2goYXR0cnMudWlUb2dnbGUsZnVuY3Rpb24obmV3VmFsKXtuZXdWYWw/ZWxtLnJlbW92ZUNsYXNzKCJ1aS1oaWRlIikuYWRkQ2xhc3MoInVpLXNob3ciKTplbG0ucmVtb3ZlQ2xhc3MoInVpLXNob3ciKS5hZGRDbGFzcygidWktaGlkZSIpfSl9fV0pLGFuZ3VsYXIubW9kdWxlKCJ1aS51bmlxdWUiLFtdKS5maWx0ZXIoInVuaXF1ZSIsWyIkcGFyc2UiLGZ1bmN0aW9uKCRwYXJzZSl7cmV0dXJuIGZ1bmN0aW9uKGl0ZW1zLGZpbHRlck9uKXtpZihmaWx0ZXJPbj09PSExKXJldHVybiBpdGVtcztpZigoZmlsdGVyT258fGFuZ3VsYXIuaXNVbmRlZmluZWQoZmlsdGVyT24pKSYmYW5ndWxhci5pc0FycmF5KGl0ZW1zKSl7dmFyIG5ld0l0ZW1zPVtdLGdldD1hbmd1bGFyLmlzU3RyaW5nKGZpbHRlck9uKT8kcGFyc2UoZmlsdGVyT24pOmZ1bmN0aW9uKGl0ZW0pe3JldHVybiBpdGVtfSxleHRyYWN0VmFsdWVUb0NvbXBhcmU9ZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGFuZ3VsYXIuaXNPYmplY3QoaXRlbSk/Z2V0KGl0ZW0pOml0ZW19O2FuZ3VsYXIuZm9yRWFjaChpdGVtcyxmdW5jdGlvbihpdGVtKXtmb3IodmFyIGlzRHVwbGljYXRlPSExLGk9MDtpPG5ld0l0ZW1zLmxlbmd0aDtpKyspaWYoYW5ndWxhci5lcXVhbHMoZXh0cmFjdFZhbHVlVG9Db21wYXJlKG5ld0l0ZW1zW2ldKSxleHRyYWN0VmFsdWVUb0NvbXBhcmUoaXRlbSkpKXtpc0R1cGxpY2F0ZT0hMDticmVha31pc0R1cGxpY2F0ZXx8bmV3SXRlbXMucHVzaChpdGVtKX0pLGl0ZW1zPW5ld0l0ZW1zfXJldHVybiBpdGVtc319XSksYW5ndWxhci5tb2R1bGUoInVpLnZhbGlkYXRlIixbXSkuZGlyZWN0aXZlKCJ1aVZhbGlkYXRlIixmdW5jdGlvbigpe3JldHVybntyZXN0cmljdDoiQSIscmVxdWlyZToibmdNb2RlbCIsbGluazpmdW5jdGlvbihzY29wZSxlbG0sYXR0cnMsY3RybCl7ZnVuY3Rpb24gYXBwbHlfd2F0Y2god2F0Y2gpe3JldHVybiBhbmd1bGFyLmlzU3RyaW5nKHdhdGNoKT92b2lkIHNjb3BlLiR3YXRjaCh3YXRjaCxmdW5jdGlvbigpe2FuZ3VsYXIuZm9yRWFjaCh2YWxpZGF0b3JzLGZ1bmN0aW9uKHZhbGlkYXRvckZuKXt2YWxpZGF0b3JGbihjdHJsLiRtb2RlbFZhbHVlKX0pfSk6YW5ndWxhci5pc0FycmF5KHdhdGNoKT92b2lkIGFuZ3VsYXIuZm9yRWFjaCh3YXRjaCxmdW5jdGlvbihleHByZXNzaW9uKXtzY29wZS4kd2F0Y2goZXhwcmVzc2lvbixmdW5jdGlvbigpe2FuZ3VsYXIuZm9yRWFjaCh2YWxpZGF0b3JzLGZ1bmN0aW9uKHZhbGlkYXRvckZuKXt2YWxpZGF0b3JGbihjdHJsLiRtb2RlbFZhbHVlKX0pfSl9KTp2b2lkKGFuZ3VsYXIuaXNPYmplY3Qod2F0Y2gpJiZhbmd1bGFyLmZvckVhY2god2F0Y2gsZnVuY3Rpb24oZXhwcmVzc2lvbix2YWxpZGF0b3JLZXkpe2FuZ3VsYXIuaXNTdHJpbmcoZXhwcmVzc2lvbikmJnNjb3BlLiR3YXRjaChleHByZXNzaW9uLGZ1bmN0aW9uKCl7dmFsaWRhdG9yc1t2YWxpZGF0b3JLZXldKGN0cmwuJG1vZGVsVmFsdWUpfSksYW5ndWxhci5pc0FycmF5KGV4cHJlc3Npb24pJiZhbmd1bGFyLmZvckVhY2goZXhwcmVzc2lvbixmdW5jdGlvbihpbnRFeHByZXNzaW9uKXtzY29wZS4kd2F0Y2goaW50RXhwcmVzc2lvbixmdW5jdGlvbigpe3ZhbGlkYXRvcnNbdmFsaWRhdG9yS2V5XShjdHJsLiRtb2RlbFZhbHVlKX0pfSl9KSl9dmFyIHZhbGlkYXRlRm4sdmFsaWRhdG9ycz17fSx2YWxpZGF0ZUV4cHI9c2NvcGUuJGV2YWwoYXR0cnMudWlWYWxpZGF0ZSk7dmFsaWRhdGVFeHByJiYoYW5ndWxhci5pc1N0cmluZyh2YWxpZGF0ZUV4cHIpJiYodmFsaWRhdGVFeHByPXt2YWxpZGF0b3I6dmFsaWRhdGVFeHByfSksYW5ndWxhci5mb3JFYWNoKHZhbGlkYXRlRXhwcixmdW5jdGlvbihleHByc3NuLGtleSl7dmFsaWRhdGVGbj1mdW5jdGlvbih2YWx1ZVRvVmFsaWRhdGUpe3ZhciBleHByZXNzaW9uPXNjb3BlLiRldmFsKGV4cHJzc24seyR2YWx1ZTp2YWx1ZVRvVmFsaWRhdGV9KTtyZXR1cm4gYW5ndWxhci5pc09iamVjdChleHByZXNzaW9uKSYmYW5ndWxhci5pc0Z1bmN0aW9uKGV4cHJlc3Npb24udGhlbik/KGV4cHJlc3Npb24udGhlbihmdW5jdGlvbigpe2N0cmwuJHNldFZhbGlkaXR5KGtleSwhMCl9LGZ1bmN0aW9uKCl7Y3RybC4kc2V0VmFsaWRpdHkoa2V5LCExKX0pLHZhbHVlVG9WYWxpZGF0ZSk6ZXhwcmVzc2lvbj8oY3RybC4kc2V0VmFsaWRpdHkoa2V5LCEwKSx2YWx1ZVRvVmFsaWRhdGUpOihjdHJsLiRzZXRWYWxpZGl0eShrZXksITEpLHZhbHVlVG9WYWxpZGF0ZSl9LHZhbGlkYXRvcnNba2V5XT12YWxpZGF0ZUZuLGN0cmwuJGZvcm1hdHRlcnMucHVzaCh2YWxpZGF0ZUZuKSxjdHJsLiRwYXJzZXJzLnB1c2godmFsaWRhdGVGbil9KSxhdHRycy51aVZhbGlkYXRlV2F0Y2gmJmFwcGx5X3dhdGNoKHNjb3BlLiRldmFsKGF0dHJzLnVpVmFsaWRhdGVXYXRjaCkpKX19fSksYW5ndWxhci5tb2R1bGUoInVpLnV0aWxzIixbInVpLmV2ZW50IiwidWkuZm9ybWF0IiwidWkuaGlnaGxpZ2h0IiwidWkuaW5jbHVkZSIsInVpLmluZGV0ZXJtaW5hdGUiLCJ1aS5pbmZsZWN0b3IiLCJ1aS5qcSIsInVpLmtleXByZXNzIiwidWkubWFzayIsInVpLnJlc2V0IiwidWkucm91dGUiLCJ1aS5zY3JvbGxmaXgiLCJ1aS5zY3JvbGwiLCJ1aS5zY3JvbGwuanFsaXRlIiwidWkuc2hvd2hpZGUiLCJ1aS51bmlxdWUiLCJ1aS52YWxpZGF0ZSJdKSxmdW5jdGlvbih3aW5kb3csYW5ndWxhcix1bmRlZmluZWQpe2FuZ3VsYXIubW9kdWxlKCJhbmd1bGFyTG9jYWxTdG9yYWdlIixbIm5nQ29va2llcyJdKS5mYWN0b3J5KCJzdG9yYWdlIixbIiRwYXJzZSIsIiRjb29raWVTdG9yZSIsIiR3aW5kb3ciLCIkbG9nIixmdW5jdGlvbigkcGFyc2UsJGNvb2tpZVN0b3JlLCR3aW5kb3csJGxvZyl7dmFyIHN0b3JhZ2U9InVuZGVmaW5lZCI9PXR5cGVvZiAkd2luZG93LmxvY2FsU3RvcmFnZT91bmRlZmluZWQ6JHdpbmRvdy5sb2NhbFN0b3JhZ2Usc3VwcG9ydGVkPSEoInVuZGVmaW5lZCI9PXR5cGVvZiBzdG9yYWdlKTtpZihzdXBwb3J0ZWQpe3ZhciB0ZXN0S2V5PSJfXyIrTWF0aC5yb3VuZCgxZTcqTWF0aC5yYW5kb20oKSk7dHJ5e2xvY2FsU3RvcmFnZS5zZXRJdGVtKHRlc3RLZXksdGVzdEtleSksbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGVzdEtleSl9Y2F0Y2goZXJyKXtzdXBwb3J0ZWQ9ITF9fXZhciBwcml2YXRlTWV0aG9kcz17cGFyc2VWYWx1ZTpmdW5jdGlvbihyZXMpe3ZhciB2YWw7dHJ5e3ZhbD1hbmd1bGFyLmZyb21Kc29uKHJlcyksInVuZGVmaW5lZCI9PXR5cGVvZiB2YWwmJih2YWw9cmVzKSwidHJ1ZSI9PT12YWwmJih2YWw9ITApLCJmYWxzZSI9PT12YWwmJih2YWw9ITEpLCR3aW5kb3cucGFyc2VGbG9hdCh2YWwpIT09dmFsfHxhbmd1bGFyLmlzT2JqZWN0KHZhbCl8fCh2YWw9JHdpbmRvdy5wYXJzZUZsb2F0KHZhbCkpfWNhdGNoKGUpe3ZhbD1yZXN9cmV0dXJuIHZhbH19LHB1YmxpY01ldGhvZHM9e3NldDpmdW5jdGlvbihrZXksdmFsdWUpe2lmKCFzdXBwb3J0ZWQpdHJ5e3JldHVybiAkY29va2llU3RvcmUucHV0KGtleSx2YWx1ZSksdmFsdWV9Y2F0Y2goZSl7JGxvZy5sb2coIkxvY2FsIFN0b3JhZ2Ugbm90IHN1cHBvcnRlZCwgbWFrZSBzdXJlIHlvdSBoYXZlIGFuZ3VsYXItY29va2llcyBlbmFibGVkLiIpfXZhciBzYXZlcj1hbmd1bGFyLnRvSnNvbih2YWx1ZSk7cmV0dXJuIHN0b3JhZ2Uuc2V0SXRlbShrZXksc2F2ZXIpLHByaXZhdGVNZXRob2RzLnBhcnNlVmFsdWUoc2F2ZXIpfSxnZXQ6ZnVuY3Rpb24oa2V5KXtpZighc3VwcG9ydGVkKXRyeXtyZXR1cm4gcHJpdmF0ZU1ldGhvZHMucGFyc2VWYWx1ZSgkLmNvb2tpZShrZXkpKX1jYXRjaChlKXtyZXR1cm4gbnVsbH12YXIgaXRlbT1zdG9yYWdlLmdldEl0ZW0oa2V5KTtyZXR1cm4gcHJpdmF0ZU1ldGhvZHMucGFyc2VWYWx1ZShpdGVtKX0scmVtb3ZlOmZ1bmN0aW9uKGtleSl7aWYoIXN1cHBvcnRlZCl0cnl7cmV0dXJuICRjb29raWVTdG9yZS5yZW1vdmUoa2V5KSwhMH1jYXRjaChlKXtyZXR1cm4hMX1yZXR1cm4gc3RvcmFnZS5yZW1vdmVJdGVtKGtleSksITB9LGJpbmQ6ZnVuY3Rpb24oJHNjb3BlLGtleSxvcHRzKXt2YXIgZGVmYXVsdE9wdHM9e2RlZmF1bHRWYWx1ZToiIixzdG9yZU5hbWU6IiJ9O29wdHM9YW5ndWxhci5pc1N0cmluZyhvcHRzKT9hbmd1bGFyLmV4dGVuZCh7fSxkZWZhdWx0T3B0cyx7ZGVmYXVsdFZhbHVlOm9wdHN9KTphbmd1bGFyLmlzVW5kZWZpbmVkKG9wdHMpP2RlZmF1bHRPcHRzOmFuZ3VsYXIuZXh0ZW5kKGRlZmF1bHRPcHRzLG9wdHMpO3ZhciBzdG9yZU5hbWU9b3B0cy5zdG9yZU5hbWV8fGtleTtyZXR1cm4gcHVibGljTWV0aG9kcy5nZXQoc3RvcmVOYW1lKXx8cHVibGljTWV0aG9kcy5zZXQoc3RvcmVOYW1lLG9wdHMuZGVmYXVsdFZhbHVlKSwkcGFyc2Uoa2V5KS5hc3NpZ24oJHNjb3BlLHB1YmxpY01ldGhvZHMuZ2V0KHN0b3JlTmFtZSkpLCRzY29wZS4kd2F0Y2goa2V5LGZ1bmN0aW9uKHZhbCl7YW5ndWxhci5pc0RlZmluZWQodmFsKSYmcHVibGljTWV0aG9kcy5zZXQoc3RvcmVOYW1lLHZhbCl9LCEwKSxwdWJsaWNNZXRob2RzLmdldChzdG9yZU5hbWUpfSx1bmJpbmQ6ZnVuY3Rpb24oJHNjb3BlLGtleSxzdG9yZU5hbWUpe3N0b3JlTmFtZT1zdG9yZU5hbWV8fGtleSwkcGFyc2Uoa2V5KS5hc3NpZ24oJHNjb3BlLG51bGwpLCRzY29wZS4kd2F0Y2goa2V5LGZ1bmN0aW9uKCl7fSkscHVibGljTWV0aG9kcy5yZW1vdmUoc3RvcmVOYW1lKX0sY2xlYXJBbGw6ZnVuY3Rpb24oKXtzdG9yYWdlLmNsZWFyKCl9fTtyZXR1cm4gcHVibGljTWV0aG9kc31dKX0od2luZG93LHdpbmRvdy5hbmd1bGFyKSxhbmd1bGFyLm1vZHVsZSgib2kubXVsdGlzZWxlY3QiLFsidGVtcGxhdGUvbXVsdGlzZWxlY3QvdGVtcGxhdGUuaHRtbCJdKSxhbmd1bGFyLm1vZHVsZSgidGVtcGxhdGUvbXVsdGlzZWxlY3QvdGVtcGxhdGUuaHRtbCIsW10pLnJ1bihbIiR0ZW1wbGF0ZUNhY2hlIixmdW5jdGlvbihhKXthLnB1dCgidGVtcGxhdGUvbXVsdGlzZWxlY3QvdGVtcGxhdGUuaHRtbCIsJzxkaXYgY2xhc3M9Im11bHRpc2VsZWN0LXNlYXJjaCIgbmctY2xhc3M9IntvcGVuOiBpc09wZW4sIGZvY3VzZWQ6IGlzRm9jdXNlZH0iIG5nLWNsaWNrPSJzZXRGb2N1cygkZXZlbnQpIj5cbiAgICA8dWwgY2xhc3M9Im11bHRpc2VsZWN0LXNlYXJjaC1saXN0Ij5cbiAgICAgICAgPGxpIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgYnRuLXhzIG11bHRpc2VsZWN0LXNlYXJjaC1saXN0LWl0ZW0gbXVsdGlzZWxlY3Qtc2VhcmNoLWxpc3QtaXRlbV9zZWxlY3Rpb24iXG4gICAgICAgICAgICBuZy1yZXBlYXQ9Iml0ZW0gaW4gb3V0cHV0IHRyYWNrIGJ5ICRpbmRleCJcbiAgICAgICAgICAgIG5nLWNsYXNzPSJ7Zm9jdXNlZDogYmFja3NwYWNlRm9jdXMgJiYgJGxhc3R9IlxuICAgICAgICAgICAgbmctY2xpY2s9InJlbW92ZUl0ZW0oJGluZGV4KSI+e3tnZXRMYWJlbChpdGVtKX19PHNwYW4gY2xhc3M9ImNsb3NlIG11bHRpc2VsZWN0LXNlYXJjaC1saXN0LWl0ZW1fc2VsZWN0aW9uLXJlbW92ZSI+w5c8L3NwYW4+PC9saT5cbiAgICAgICAgPGxpIGNsYXNzPSJtdWx0aXNlbGVjdC1zZWFyY2gtbGlzdC1pdGVtIG11bHRpc2VsZWN0LXNlYXJjaC1saXN0LWl0ZW1faW5wdXQiPjxpbnB1dCBhdXRvY29tcGxldGU9Im9mZiJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD0icXVlcnkiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctc3R5bGU9IntcJ3dpZHRoXCc6IGlucHV0V2lkdGggKyBcJ3B4XCd9IlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWtleWRvd249ImtleVBhcnNlcigkZXZlbnQpIi8+PC9saT5cbiAgICAgICAgPGxpIGNsYXNzPSJtdWx0aXNlbGVjdC1zZWFyY2gtbGlzdC1pdGVtIG11bHRpc2VsZWN0LXNlYXJjaC1saXN0LWl0ZW1fbG9hZGVyIiBuZy1zaG93PSJzaG93TG9hZGVyIj48L2xpPlxuICAgIDwvdWw+XG48L2Rpdj5cbjxkaXYgY2xhc3M9Im11bHRpc2VsZWN0LWRyb3Bkb3duIiBuZy1zaG93PSJpc09wZW4iIG5nLWNsaWNrPSJzZXRGb2N1cygkZXZlbnQpIj5cbiAgICA8dWwgbmctaWY9ImlzT3BlbiIgY2xhc3M9Im11bHRpc2VsZWN0LWRyb3Bkb3duLW9wdGdyb3VwIiBuZy1yZXBlYXQ9Iihncm91cCwgb3B0aW9ucykgaW4gZ3JvdXBzIj5cbiAgICAgICAgPGRpdiBjbGFzcz0ibXVsdGlzZWxlY3QtZHJvcGRvd24tb3B0Z3JvdXAtaGVhZGVyIlxuICAgICAgICAgICAgbmctaWY9Imdyb3VwICYmIG9wdGlvbnMubGVuZ3RoIlxuICAgICAgICAgICAgbmctYmluZD0iZ3JvdXAiPjwvZGl2PjwhLS0gd2UgdXNlIGZhc3QgZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCdsaVwnKS0tPlxuICAgICAgICA8bGkgY2xhc3M9Im11bHRpc2VsZWN0LWRyb3Bkb3duLW9wdGdyb3VwLW9wdGlvbiJcbiAgICAgICAgICAgIG5nLXJlcGVhdD0ib3B0aW9uIGluIG9wdGlvbnMiXG4gICAgICAgICAgICBuZy1jbGFzcz0ie1wnYWN0aXZlXCc6IHNlbGVjdG9yUG9zaXRpb24gPT09IGdyb3VwUG9zW2dyb3VwXSArICRpbmRleH0iXG4gICAgICAgICAgICBuZy1jbGljaz0iYWRkSXRlbShvcHRpb24pIlxuICAgICAgICAgICAgbmctbW91c2VlbnRlcj0ic2V0U2VsZWN0aW9uKGdyb3VwUG9zW2dyb3VwXSArICRpbmRleCkiXG4gICAgICAgICAgICBuZy1iaW5kLWh0bWw9Ilwne3tnZXRMYWJlbChvcHRpb24pfX1cJyB8IG11bHRpc2VsZWN0SGlnaGxpZ2h0OiBvbGRRdWVyeSB8fCBxdWVyeSI+PC9saT5cbiAgICA8L3VsPlxuPC9kaXY+Jyl9XSksYW5ndWxhci5tb2R1bGUoIm9pLm11bHRpc2VsZWN0IikuZmFjdG9yeSgibWlsdGlzZWxlY3RVdGlscyIsWyIkZG9jdW1lbnQiLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYixkKXt2YXIgZT1hbmd1bGFyLmVsZW1lbnQoIjxtaXJyb3I+IikuY3NzKHtwb3NpdGlvbjoiYWJzb2x1dGUiLHdpZHRoOiJhdXRvIixwYWRkaW5nOjAsd2hpdGVTcGFjZToicHJlIix2aXNpYmlsaXR5OiJoaWRkZW4iLCJ6LWluZGV4IjotOTk5OTl9KS50ZXh0KGJ8fCIiKTtjKGQsZSwibGV0dGVyU3BhY2luZyBmb250U2l6ZSBmb250RmFtaWx5IGZvbnRXZWlnaHQgdGV4dFRyYW5zZm9ybSIuc3BsaXQoIiAiKSksYVswXS5ib2R5LmFwcGVuZENoaWxkKGVbMF0pO3ZhciBmPWVbMF0ub2Zmc2V0V2lkdGg7cmV0dXJuIGUucmVtb3ZlKCksZn1mdW5jdGlvbiBjKGEsYixjKXtmb3IodmFyIGQ9e30sZT1nZXRDb21wdXRlZFN0eWxlKGFbMF0sIiIpLGY9MCxnPWMubGVuZ3RoO2c+ZjtmKyspZFtjW2ZdXT1lW2NbZl1dO2IuY3NzKGQpfWZ1bmN0aW9uIGQoYSxiKXt2YXIgYyxkLGUsZyxpLGo7YiYmKGQ9YS5vZmZzZXRIZWlnaHQsZT1oKGIsImhlaWdodCIsIm1hcmdpbiIpLGc9YS5zY3JvbGxUb3B8fDAsYz1mKGIpLnRvcC1mKGEpLnRvcCtnLGk9YyxqPWMtZCtlLGMrZT5kK2c/YS5zY3JvbGxUb3A9ajpnPmMmJihhLnNjcm9sbFRvcD1pKSl9ZnVuY3Rpb24gZShhLGIsYyxkLGUpe2Z1bmN0aW9uIGYoYSl7cmV0dXJuIHBhcnNlRmxvYXQoZVthXSl9Zm9yKHZhciBnPWM9PT0oZD8iYm9yZGVyIjoiY29udGVudCIpPzQ6IndpZHRoIj09PWI/MTowLGg9MCxpPVsiVG9wIiwiUmlnaHQiLCJCb3R0b20iLCJMZWZ0Il07ND5nO2crPTIpIm1hcmdpbiI9PT1jJiYoaCs9ZihjK2lbZ10pKSxkPygiY29udGVudCI9PT1jJiYoaC09ZigicGFkZGluZyIraVtnXSkpLCJtYXJnaW4iIT09YyYmKGgtPWYoImJvcmRlciIraVtnXSsiV2lkdGgiKSkpOihoKz1mKCJwYWRkaW5nIitpW2ddKSwicGFkZGluZyIhPT1jJiYoaCs9ZigiYm9yZGVyIitpW2ddKyJXaWR0aCIpKSk7cmV0dXJuIGh9ZnVuY3Rpb24gZihhKXt2YXIgYixjLGQ9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxlPWEmJmEub3duZXJEb2N1bWVudDtyZXR1cm4gZT8oYj1lLmRvY3VtZW50RWxlbWVudCxjPWcoZSkse3RvcDpkLnRvcCtjLnBhZ2VZT2Zmc2V0LWIuY2xpZW50VG9wLGxlZnQ6ZC5sZWZ0K2MucGFnZVhPZmZzZXQtYi5jbGllbnRMZWZ0fSk6dm9pZCAwfWZ1bmN0aW9uIGcoYSl7cmV0dXJuIG51bGwhPWEmJmE9PT1hLndpbmRvdz9hOjk9PT1hLm5vZGVUeXBlJiZhLmRlZmF1bHRWaWV3fWZ1bmN0aW9uIGgoYSxiLGMpe3ZhciBkPSEwLGY9IndpZHRoIj09PWI/YS5vZmZzZXRXaWR0aDphLm9mZnNldEhlaWdodCxnPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGEsbnVsbCksaD0hMTtpZigwPj1mfHxudWxsPT1mKXtpZihmPWdbYl0sKDA+Znx8bnVsbD09ZikmJihmPWEuc3R5bGVbYl0pLG0udGVzdChmKSlyZXR1cm4gZjtmPXBhcnNlRmxvYXQoZil8fDB9cmV0dXJuIGYrZShhLGIsY3x8KGg/ImJvcmRlciI6ImNvbnRlbnQiKSxkLGcpfWZ1bmN0aW9uIGkoYSxiKXtiLmNzcygid2lkdGgiLGgoYVswXSwid2lkdGgiLCJtYXJnaW4iKSsicHgiKX1mdW5jdGlvbiBqKGEpe2Zvcih2YXIgYiBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYikmJmFbYl0ubGVuZ3RoKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGsoYSl7dmFyIGI9W107cmV0dXJuIGFuZ3VsYXIuZm9yRWFjaChhLGZ1bmN0aW9uKGEpe2IucHVzaChhKX0pLGJ9dmFyIGw9L1srLV0/KD86XGQqXC58KVxkKyg/OltlRV1bKy1dP1xkK3wpLy5zb3VyY2UsbT1uZXcgUmVnRXhwKCJeKCIrbCsiKSg/IXB4KVthLXolXSskIiwiaSIpO3JldHVybntjb3B5V2lkdGg6aSxtZWFzdXJlU3RyaW5nOmIsc2Nyb2xsQWN0aXZlT3B0aW9uOmQsZ3JvdXBzSXNFbXB0eTpqLG9ialRvQXJyOmt9fV0pLGFuZ3VsYXIubW9kdWxlKCJvaS5tdWx0aXNlbGVjdCIpLmRpcmVjdGl2ZSgib2lNdWx0aXNlbGVjdCIsWyIkZG9jdW1lbnQiLCIkcSIsIiR0aW1lb3V0IiwiJHBhcnNlIiwiJGludGVycG9sYXRlIiwibWlsdGlzZWxlY3RVdGlscyIsZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPS9eXHMqKFtcc1xTXSs/KSg/OlxzK2FzXHMrKFtcc1xTXSs/KSk/KD86XHMrZ3JvdXBccytieVxzKyhbXHNcU10rPykpP1xzK2ZvclxzKyg/OihbXCRcd11bXCRcd10qKXwoPzpcKFxzKihbXCRcd11bXCRcd10qKVxzKixccyooW1wkXHddW1wkXHddKilccypcKSkpXHMraW5ccysoW1xzXFNdKz8pKD86XHMrdHJhY2tccytieVxzKyhbXHNcU10rPykpPyQvLGg9LyhbXlwoXClcc1x8XHNdKilccyooXCguKlwpKT9ccyooXHw/XHMqLispPy87cmV0dXJue3Jlc3RyaWN0OiJBRSIsdGVtcGxhdGVVcmw6InRlbXBsYXRlL211bHRpc2VsZWN0L3RlbXBsYXRlLmh0bWwiLHJlcXVpcmU6Im5nTW9kZWwiLHNjb3BlOnt9LGNvbXBpbGU6ZnVuY3Rpb24oaSxqKXt2YXIgayxsPWoubmdPcHRpb25zO2lmKCEoaz1sLm1hdGNoKGcpKSl0aHJvdyBuZXcgRXJyb3IoIkV4cGVjdGVkIGV4cHJlc3Npb24gaW4gZm9ybSBvZiAnX3NlbGVjdF8gKGFzIF9sYWJlbF8pPyBmb3IgKF9rZXlfLCk/X3ZhbHVlXyBpbiBfY29sbGVjdGlvbl8nIik7dmFyIG0sbj1rWzJdfHxrWzFdLG89a1s0XXx8a1s2XSxwPWtbM118fCIiLHE9a1s4XXx8bixyPWtbN10ubWF0Y2goaCkscz1yWzFdLHQ9cysoclszXXx8IiIpLHU9cysoclsyXXx8IiIpLHY9ZChuKSx3PWQocCkseD1kKHQpLHk9ZCh1KSx6PWQocSksQT17fSxCPU51bWJlcihqLmFzeW5jVGltZW91dCl8fDEwMCxDPWFuZ3VsYXIuaXNEZWZpbmVkKGoubXVsdGlwbGUpLEQ9YW5ndWxhci5pc0RlZmluZWQoai5ub3RlbXB0eSksRT1OdW1iZXIoai5tdWx0aXBsZUxpbWl0KSxGPWUoai5wbGFjZWhvbGRlcnx8IiIpLEc9ITEsSD0hMTtyZXR1cm4gZnVuY3Rpb24oZCxlLGcsaCl7ZnVuY3Rpb24gaShiKXtiLnRhcmdldC5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1MWzBdJiYodCgpLGEub2ZmKCJjbGljayIsaSksZC5pc0ZvY3VzZWQ9ITEsZC4kZGlnZXN0KCkpfWZ1bmN0aW9uIGooKXt2YXIgYT1oLiRtb2RlbFZhbHVlJiZoLiRtb2RlbFZhbHVlLmxlbmd0aD8iIjpOO0wuYXR0cigicGxhY2Vob2xkZXIiLGEpLGQuaW5wdXRXaWR0aD1mLm1lYXN1cmVTdHJpbmcoZC5xdWVyeXx8YSxMKSs0fWZ1bmN0aW9uIGsoYSl7cmV0dXJuIEE9e30sQVtvXT1hLHooZCxBKX1mdW5jdGlvbiBsKGEpe3JldHVybiBBPXt9LHMuc3BsaXQoIi4iKS5yZWR1Y2UoZnVuY3Rpb24oYixjLGQsZSl7cmV0dXJuIGJbY109ZDxlLmxlbmd0aC0xP3t9OmF9LEEpLHgoZC4kcGFyZW50LEEpfWZ1bmN0aW9uIG4oYSl7cmV0dXJuIEE9e30sQVtvXT1hLHYoZCxBKX1mdW5jdGlvbiBwKGEpe3JldHVybiBBPXt9LEFbb109YSx3KGQsQSl8fCIifWZ1bmN0aW9uIHEoYSl7dmFyIGU9eShkLiRwYXJlbnQseyRxdWVyeTphfSksZj0wO2Quc2VsZWN0b3JQb3NpdGlvbj0wLGF8fChkLm9sZFF1ZXJ5PW51bGwpLG0mJmFuZ3VsYXIuaXNGdW5jdGlvbihlLnRoZW4pJiYoYy5jYW5jZWwobSksZj1CKSxtPWMoZnVuY3Rpb24oKXtkLnNob3dMb2FkZXI9ITAsYi53aGVuKGUpLnRoZW4oZnVuY3Rpb24oYil7ZC5ncm91cHM9SShsKEooYixhKSkpLHIoKX0pLmZpbmFsbHkoZnVuY3Rpb24oKXtkLnNob3dMb2FkZXI9ITF9KX0sZil9ZnVuY3Rpb24gcigpe3ZhciBhLGIsYyxlPVtdLGY9MDtkLm9yZGVyPVtdLGQuZ3JvdXBQb3M9e307Zm9yKGIgaW4gZC5ncm91cHMpZC5ncm91cHMuaGFzT3duUHJvcGVydHkoYikmJiIkIiE9Yi5jaGFyQXQoMCkmJmUucHVzaChiKTtmb3IoZS5zb3J0KCksYT0wO2E8ZS5sZW5ndGg7YSsrKWI9ZVthXSxjPWQuZ3JvdXBzW2JdLGQub3JkZXI9ZC5vcmRlci5jb25jYXQoYyksZC5ncm91cFBvc1tiXT1mLGYrPWMubGVuZ3RofWZ1bmN0aW9uIHQoKXtkLm9sZFF1ZXJ5PW51bGwsZC5iYWNrc3BhY2VGb2N1cz0hMSxkLnF1ZXJ5PSIiLGQuZ3JvdXBzPXt9LGQub3JkZXI9W10sZC5zaG93TG9hZGVyPSExLGQuaXNPcGVuPSExLG0mJmMuY2FuY2VsKG0pfWZ1bmN0aW9uIHUoYSxiKXtkLnNlbGVjdG9yUG9zaXRpb249YixmLnNjcm9sbEFjdGl2ZU9wdGlvbihhWzBdLGEuZmluZCgibGkiKVtiXSl9ZnVuY3Rpb24gSShhKXtmb3IodmFyIGIsYyxkPXsiIjpbXX0sZT0wO2U8YS5sZW5ndGg7ZSsrKWI9cChhW2VdKSwoYz1kW2JdKXx8KGM9ZFtiXT1bXSksYy5wdXNoKGFbZV0pO3JldHVybiBkfWZ1bmN0aW9uIEooYSxiKXt2YXIgYyxkLGU9W10sZz1bXSxoPVtdLGk9YW5ndWxhci5pc0FycmF5KGEpP2E6Zi5vYmpUb0FycihhKTtpZihiKXtmb3IoYz0wO2M8aS5sZW5ndGg7YysrKW4oaVtjXSkubWF0Y2gobmV3IFJlZ0V4cChiLCJpIikpJiZlLnB1c2goaVtjXSk7Zm9yKGM9MDtjPGUubGVuZ3RoO2MrKyluKGVbY10pLm1hdGNoKG5ldyBSZWdFeHAoIl4iK2IsImkiKSk/Zy5wdXNoKGVbY10pOmgucHVzaChlW2NdKTtkPWcuY29uY2F0KGgpfWVsc2UgZD1bXS5jb25jYXQoaSk7cmV0dXJuIEsoZCksZH1mdW5jdGlvbiBLKGEpe3ZhciBiLGMsZT1bXS5jb25jYXQoZC5vdXRwdXQpO2ZvcihiPTA7YjxhLmxlbmd0aDtiKyspZm9yKGM9MDtjPGUubGVuZ3RoO2MrKylpZihrKGFbYl0pPT09ayhlW2NdKSl7YS5zcGxpY2UoYiwxKSxlLnNwbGljZShjLDEpLGItLTticmVha319dmFyIEw9ZS5maW5kKCJpbnB1dCIpLE09YW5ndWxhci5lbGVtZW50KGVbMF0ucXVlcnlTZWxlY3RvcigiLm11bHRpc2VsZWN0LWRyb3Bkb3duIikpLE49RihkKTthbmd1bGFyLmlzRGVmaW5lZChnLnJlYWRvbmx5KSYmTC5hdHRyKCJyZWFkb25seSIsITApLGcuJG9ic2VydmUoImRpc2FibGVkIixmdW5jdGlvbihhKXtMLnByb3AoImRpc2FibGVkIixhKX0pLGQuJHBhcmVudC4kd2F0Y2goZy5uZ01vZGVsLGZ1bmN0aW9uKGEpe2ooKSxkLm91dHB1dD1DP2E6YT9bYV06W119KSxkLiR3YXRjaCgicXVlcnkiLGZ1bmN0aW9uKGEsYil7aigpLGE9PT1ifHxkLm9sZFF1ZXJ5JiYhYXx8SHx8KE1bMF0uc2Nyb2xsVG9wPTAsYT8ocShhKSxkLm9sZFF1ZXJ5PW51bGwpOih0KCksSD0hMCkpLEg9ITF9KSxkLiR3YXRjaCgiZ3JvdXBzIixmdW5jdGlvbihiKXtmLmdyb3Vwc0lzRW1wdHkoYik/ZC5pc09wZW49ITE6ZC5pc09wZW58fGcuZGlzYWJsZWR8fChkLmlzT3Blbj0hMCxmLmNvcHlXaWR0aChlLE0pLGQuaXNGb2N1c2VkfHwoYS5vbigiY2xpY2siLGkpLGQuaXNGb2N1c2VkPSEwKSl9KSxkLnNldEZvY3VzPWZ1bmN0aW9uKGEpe2cuZGlzYWJsZWR8fChhbmd1bGFyLmVsZW1lbnQoYS50YXJnZXQpLnNjb3BlKCk9PT10aGlzJiYoZC5pc09wZW4/dCgpOnEoZC5xdWVyeSkpLGQuYmFja3NwYWNlRm9jdXM9ITEsIklOUFVUIiE9PWEudGFyZ2V0Lm5vZGVOYW1lJiZMWzBdLmZvY3VzKCkpfSxkLmFkZEl0ZW09ZnVuY3Rpb24oYSl7aWYoaXNOYU4oRSl8fCEoZC5vdXRwdXQubGVuZ3RoPj1FKSl7dmFyIGI9ZC5ncm91cHNbcChhKV07Yi5zcGxpY2UoYi5pbmRleE9mKGEpLDEpLEM/KGguJHNldFZpZXdWYWx1ZShhbmd1bGFyLmlzQXJyYXkoaC4kbW9kZWxWYWx1ZSk/aC4kbW9kZWxWYWx1ZS5jb25jYXQoYSk6W2FdKSxyKCkpOihoLiRzZXRWaWV3VmFsdWUoYSksdCgpKSxmLmdyb3Vwc0lzRW1wdHkoZC5ncm91cHMpJiYoZC5ncm91cHM9e30pLGQub2xkUXVlcnk9ZC5vbGRRdWVyeXx8ZC5xdWVyeSxkLnF1ZXJ5PSIiLGQuYmFja3NwYWNlRm9jdXM9ITEsaigpfX0sZC5yZW1vdmVJdGVtPWZ1bmN0aW9uKGEpe2cuZGlzYWJsZWR8fChDPyhoLiRtb2RlbFZhbHVlLnNwbGljZShhLDEpLGguJHNldFZpZXdWYWx1ZShbXS5jb25jYXQoaC4kbW9kZWxWYWx1ZSkpKTpEfHxoLiRzZXRWaWV3VmFsdWUodm9pZCAwKSxkLnF1ZXJ5PSIiLChkLmlzT3Blbnx8ZC5vbGRRdWVyeXx8IUMpJiZxKGQub2xkUXVlcnkpLGooKSl9LGQuc2V0U2VsZWN0aW9uPWZ1bmN0aW9uKGEpe0d8fGQuc2VsZWN0b3JQb3NpdGlvbj09PWE/Rz0hMTp1KE0sYSl9LGQua2V5UGFyc2VyPWZ1bmN0aW9uKGEpe3ZhciBiPTAsYz1kLm9yZGVyLmxlbmd0aC0xO3N3aXRjaChhLmtleUNvZGUpe2Nhc2UgMzg6dShNLGQuc2VsZWN0b3JQb3NpdGlvbj09PWI/YzpkLnNlbGVjdG9yUG9zaXRpb24tMSksRz0hMDticmVhaztjYXNlIDQwOnUoTSxkLnNlbGVjdG9yUG9zaXRpb249PT1jP2I6ZC5zZWxlY3RvclBvc2l0aW9uKzEpLEc9ITAsZC5xdWVyeS5sZW5ndGh8fGQuaXNPcGVufHxxKCk7YnJlYWs7Y2FzZSAzNzpjYXNlIDM5OmJyZWFrO2Nhc2UgMTM6Zi5ncm91cHNJc0VtcHR5KGQuZ3JvdXBzKXx8KGQuYWRkSXRlbShkLm9yZGVyW2Quc2VsZWN0b3JQb3NpdGlvbl0pLGQuc2VsZWN0b3JQb3NpdGlvbj09PWMmJnUoTSwwKSk7YnJlYWs7Y2FzZSAyNzp0KCk7YnJlYWs7Y2FzZSA4OmlmKCFkLnF1ZXJ5Lmxlbmd0aCl7aWYoZC5iYWNrc3BhY2VGb2N1cyYmZC5vdXRwdXQmJihkLnJlbW92ZUl0ZW0oZC5vdXRwdXQubGVuZ3RoLTEpLCFkLm91dHB1dC5sZW5ndGgpKXtxKCk7YnJlYWt9ZC5iYWNrc3BhY2VGb2N1cz0hZC5iYWNrc3BhY2VGb2N1czticmVha31kZWZhdWx0OnJldHVybiBkLmJhY2tzcGFjZUZvY3VzPSExLCExfX0sZC5nZXRMYWJlbD1uLEMmJihoLiRpc0VtcHR5PWZ1bmN0aW9uKGEpe3JldHVybiFhfHwhYS5sZW5ndGh9KSx0KCl9fX19XSksYW5ndWxhci5tb2R1bGUoIm9pLm11bHRpc2VsZWN0IikuZmlsdGVyKCJtdWx0aXNlbGVjdEhpZ2hsaWdodCIsWyIkc2NlIixmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYixjKXt2YXIgZDtyZXR1cm4gYy5sZW5ndGg+MHx8YW5ndWxhci5pc051bWJlcihjKT8oYj1iLnRvU3RyaW5nKCksYz1jLnRvU3RyaW5nKCksZD1iLnJlcGxhY2UobmV3IFJlZ0V4cChjLCJnaSIpLCI8c3Ryb25nPiQmPC9zdHJvbmc+IikpOmQ9YixhLnRydXN0QXNIdG1sKGQpfX1dKSwkKGZ1bmN0aW9uKCl7JCh3aW5kb3cpLmJpbmQoImxvYWQgcmVzaXplIixmdW5jdGlvbigpe3RvcE9mZnNldD01MCx3aWR0aD10aGlzLndpbmRvdy5pbm5lcldpZHRoPjA/dGhpcy53aW5kb3cuaW5uZXJXaWR0aDp0aGlzLnNjcmVlbi53aWR0aCw3Njg+d2lkdGg/KCQoImRpdi5uYXZiYXItY29sbGFwc2UiKS5hZGRDbGFzcygiY29sbGFwc2UiKSx0b3BPZmZzZXQ9MTAwKTokKCJkaXYubmF2YmFyLWNvbGxhcHNlIikucmVtb3ZlQ2xhc3MoImNvbGxhcHNlIiksaGVpZ2h0PXRoaXMud2luZG93LmlubmVySGVpZ2h0PjA/dGhpcy53aW5kb3cuaW5uZXJIZWlnaHQ6dGhpcy5zY3JlZW4uaGVpZ2h0LGhlaWdodC09dG9wT2Zmc2V0LDE+aGVpZ2h0JiYoaGVpZ2h0PTEpLGhlaWdodD50b3BPZmZzZXQmJiQoIiNwYWdlLXdyYXBwZXIiKS5jc3MoIm1pbi1oZWlnaHQiLGhlaWdodCsicHgiKX0pfSk7dmFyIGdsb2JhbFRpbWV6b25lPXZvaWQgMCx0b3BPZmZzZXQ9dm9pZCAwLHdpZHRoPXZvaWQgMCxoZWlnaHQ9dm9pZCAwO2FuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIixbInVpLnJvdXRlciIsInVpLnV0aWxzIiwidWkuYm9vdHN0cmFwIiwidWkuYm9vdHN0cmFwLnR5cGVhaGVhZCIsInVpLmJvb3RzdHJhcC5kYXRldGltZXBpY2tlciIsImFuZ3VsYXJMb2NhbFN0b3JhZ2UiLCJvaS5tdWx0aXNlbGVjdCIsImFuZ3VsYXItZmxvdCJdKS5jb25maWcoWyIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsJHVybFJvdXRlclByb3ZpZGVyKXskdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCIvIiksJHN0YXRlUHJvdmlkZXIuc3RhdGUoImRhc2hib2FyZCIse3VybDoiLyIsdmlld3M6eyJtYWluQCI6e3RlbXBsYXRlVXJsOiIvc3RhdGljL3RlbXBsYXRlcy9kYXNoYm9hcmQuaHRtbCIsY29udHJvbGxlcjoiQmlnbWV0cmljc0Rhc2hib2FyZENvbnRyb2xsZXIifX19KS5zdGF0ZSgicmVwb3J0Iix7dXJsOiIvcmVwb3J0Iix2aWV3czp7Im1haW5AIjp7dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL3JlcG9ydHMuaHRtbCIsY29udHJvbGxlcjoiQmlnbWV0cmljc0Rhc2hib2FyZENvbnRyb2xsZXIifX19KS5zdGF0ZSgicmVwb3J0LnZpZXciLHt1cmw6Ii97cmVwb3J0SWR9Iix2aWV3czp7Im1haW5AIjp7dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL3JlcG9ydC5odG1sIixjb250cm9sbGVyOiJCaWdtZXRyaWNzUmVwb3J0Q29udHJvbGxlciJ9fX0pLnN0YXRlKCJldmVudCIse3VybDoiL2V2ZW50Iix2aWV3czp7Im1haW5AIjp7dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL2V2ZW50cy5odG1sIixjb250cm9sbGVyOmZ1bmN0aW9uKCl7fX19fSkuc3RhdGUoImV2ZW50LnZpZXciLHt1cmw6Ii97ZXZlbnR9Iix2aWV3czp7Im1haW5AIjp7dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL2Jyb3dzZS5odG1sIixjb250cm9sbGVyOiJCaWdtZXRyaWNzRXZlbnRDb250cm9sbGVyIn19fSkuc3RhdGUoInF1ZXJ5Iix7dXJsOiIvcXVlcnkiLHRlbXBsYXRlVXJsOiIvc3RhdGljL3RlbXBsYXRlcy9xdWVyeS5odG1sIixjb250cm9sbGVyOiJCaWdtZXRyaWNzUXVlcnlDb250cm9sbGVyIn0pfV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuZmlsdGVyKCJzdHJpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWV9fSkuZmlsdGVyKCJpbnRlZ2VyIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIG51bGw9PXZhbHVlP251bGw6KHZhbHVlPXBhcnNlSW50KHZhbHVlKSxpc05hTih2YWx1ZSk/bnVsbDp2YWx1ZSl9fSkuZmlsdGVyKCJmbG9hdCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUpe3JldHVybiBudWxsPT12YWx1ZT9udWxsOih2YWx1ZT1wYXJzZUZsb2F0KHZhbHVlKSxpc05hTih2YWx1ZSk/bnVsbDp2YWx1ZSl9fSkuZmlsdGVyKCJib29sZWFuIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZhbHVlPT09ITA/ITA6dmFsdWU9PT0hMT8hMToodmFsdWUrPSIiLHZhbHVlPXZhbHVlLnRvTG93ZXJDYXNlKCksInRydWUiPT09dmFsdWU/ITA6ImZhbHNlIj09PXZhbHVlPyExOm51bGwpfX0pLmZpbHRlcigidGltZXN0YW1wIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih2YWx1ZSl7aWYobnVsbD09dmFsdWUpcmV0dXJuIG51bGw7dmFyIGRhdGU9bW9tZW50KE51bWJlcih2YWx1ZSkpO3JldHVybiBnbG9iYWxUaW1lem9uZSYmKGRhdGU9ZGF0ZS50eihnbG9iYWxUaW1lem9uZSkpLGRhdGUuZm9ybWF0KCl9fSkuZmlsdGVyKCJicXR5cGUiLFsiJGZpbHRlciIsZnVuY3Rpb24oJGZpbHRlcil7cmV0dXJuIGZ1bmN0aW9uKHZhbHVlLGZpZWxkKXt2YXIgdHlwZT1maWVsZC50eXBlLGZpbHRlcj0kZmlsdGVyKHR5cGUudG9Mb3dlckNhc2UoKSk7cmV0dXJuIGZpbHRlcj9maWx0ZXIodmFsdWUpOigkbG9nLmVycm9yKCJObyBmaWx0ZXIga25vd24gZm9yIEJpZ1F1ZXJ5IHR5cGUgJyVzJyIsdHlwZSksdmFsdWUpfX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmNvbnRyb2xsZXIoIkJpZ21ldHJpY3NDb250cm9sbGVyIixbIiRzY29wZSIsIiRodHRwIiwiJGxvZyIsIiRsb2NhdGlvbiIsIiRzdGF0ZSIsInN0b3JhZ2UiLCJldmVudFNlcnZpY2UiLCJyZXBvcnRTZXJ2aWNlIixmdW5jdGlvbigkc2NvcGUsJGh0dHAsJGxvZywkbG9jYXRpb24sJHN0YXRlLHN0b3JhZ2UsZXZlbnRTZXJ2aWNlLHJlcG9ydFNlcnZpY2Upe2Z1bmN0aW9uIGluaXQoKXtldmVudFNlcnZpY2UubGlzdCgpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3JldHVybiByZXNwb25zZS5kYXRhfSkudGhlbihiaW5kU2NvcGUpLnRoZW4oYmluZFdhdGNoZXMpLnRoZW4oYmluZEV2ZW50cyksbG9hZFJlcG9ydHMoKX1mdW5jdGlvbiBsb2FkUmVwb3J0cygpe3JlcG9ydFNlcnZpY2UubGlzdCgpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7JHNjb3BlLnJlcG9ydHM9ZGF0YX0pfWZ1bmN0aW9uIGJpbmRTY29wZShldmVudHMpeyRzY29wZS5ldmVudHM9ZXZlbnRzfWZ1bmN0aW9uIGJpbmRXYXRjaGVzKCl7JHNjb3BlLiR3YXRjaCgidGltZXpvbmUiLGZ1bmN0aW9uKG5ld1ZhbCl7Z2xvYmFsVGltZXpvbmU9bmV3VmFsfSl9ZnVuY3Rpb24gYmluZEV2ZW50cygpeyRzY29wZS4kb24oInJlbG9hZC1yZXBvcnRzIixmdW5jdGlvbigpeyRsb2cuZGVidWcoInJlbG9hZC1yZXBvcnRzIHdhcyBjYXB0dXJlZCIpLGxvYWRSZXBvcnRzKCl9KX0kc2NvcGUuJHN0YXRlPSRzdGF0ZSwkc2NvcGUuZXZlbnRzPXt9LCRzY29wZS5yZXBvcnRzPXt9LCRzY29wZS50aW1lem9uZXM9bW9tZW50LnR6Lm5hbWVzKCksJHNjb3BlLnBhZ2VTaXplcz1bIjEwIiwiMjUiLCI1MCIsIjEwMCIsIjI1MCIsIjUwMCIsIjEwMDAiXSxzdG9yYWdlLmJpbmQoJHNjb3BlLCJ0aW1lem9uZSIse2RlZmF1bHRWYWx1ZTptb21lbnQoKS56b25lKCl9KSwkc2NvcGUudXBkYXRlVGltZXpvbmU9ZnVuY3Rpb24obmV3VGltZXpvbmUpe18uY29udGFpbnMoJHNjb3BlLnRpbWV6b25lcyxuZXdUaW1lem9uZSkmJigkc2NvcGUudGltZXpvbmU9bmV3VGltZXpvbmUpfSxpbml0KCl9XSkuY29udHJvbGxlcigiQnJvd3NlQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkaHR0cCIsIiRxIiwiJHRpbWVvdXQiLCIkc3RhdGVQYXJhbXMiLCIkbG9nIiwiJGZpbHRlciIsZnVuY3Rpb24oKXt9XSksYW5ndWxhci5tb2R1bGUoImJpZ21ldHJpY3MiKS5jb250cm9sbGVyKCJCaWdtZXRyaWNzRGFzaGJvYXJkQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkaHR0cCIsIiRsb2ciLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gaW5pdCgpe2JpbmRTY29wZSgpLGJpbmRXYXRjaGVzKCl9ZnVuY3Rpb24gYmluZFNjb3BlKCl7fWZ1bmN0aW9uIGJpbmRXYXRjaGVzKCl7fWluaXQoKX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmNvbnRyb2xsZXIoIkJpZ21ldHJpY3NFdmVudENvbnRyb2xsZXIiLFsiJHNjb3BlIiwiJGh0dHAiLCIkcSIsIiR0aW1lb3V0IiwiJHN0YXRlUGFyYW1zIiwiJGxvZyIsIiRmaWx0ZXIiLCJxdWVyeVNlcnZpY2UiLCJldmVudFNlcnZpY2UiLCJyZXBvcnRTZXJ2aWNlIiwic3Bpbm5lclNlcnZpY2UiLGZ1bmN0aW9uKCRzY29wZSwkaHR0cCwkcSwkdGltZW91dCwkc3RhdGVQYXJhbXMsJGxvZywkZmlsdGVyLHF1ZXJ5U2VydmljZSxldmVudFNlcnZpY2UscmVwb3J0U2VydmljZSxzcGlubmVyU2VydmljZSl7ZnVuY3Rpb24gaW5pdCgpe3NwaW5uZXJTZXJ2aWNlLnN0YXJ0KCksZ2V0RXZlbnQoZXZlbnROYW1lKS50aGVuKGZldGNoRGF0YXNldElkKS50aGVuKGJpbmRTY29wZSkudGhlbihhZGRXYXRjaGVzKS50aGVuKGZldGNoU2FtcGxlcylbImZpbmFsbHkiXShzcGlubmVyU2VydmljZS5zdG9wKX1mdW5jdGlvbiBnZXRFdmVudChldmVudE5hbWUpe3JldHVybiBldmVudFNlcnZpY2UuZ2V0KGV2ZW50TmFtZSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7ZXZlbnQ9cmVzcG9uc2UuZGF0YX0pfWZ1bmN0aW9uIGZldGNoU2FtcGxlcygpe18uZWFjaChldmVudCxmdW5jdGlvbih0eXBlLGZpZWxkKXtldmVudFNlcnZpY2UuZ2V0U2FtcGxlcyhldmVudE5hbWUsZmllbGQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3NhbXBsZXNbZmllbGRdPXJlc3BvbnNlLmRhdGF9KX0pfWZ1bmN0aW9uIGZldGNoRGF0YXNldElkKCl7cmV0dXJuIGV2ZW50U2VydmljZS5nZXREYXRhc2V0SWQoKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtkYXRhc2V0SWQ9cmVzcG9uc2UuZGF0YS5kYXRhc2V0fSl9ZnVuY3Rpb24gYmluZFNjb3BlKCl7JHNjb3BlLmV2ZW50TmFtZT1ldmVudE5hbWUsJHNjb3BlLmV2ZW50PWV2ZW50LCRzY29wZS5ldmVudEZpZWxkcz1fLm1hcChldmVudCxmdW5jdGlvbih0eXBlLGZpZWxkKXtyZXR1cm57bmFtZTpmaWVsZCx0eXBlOnR5cGUsbGFiZWw6ZmllbGQrIiAoIit0eXBlKyIpIn19KSwkc2NvcGUuc2FtcGxlcz1zYW1wbGVzLCRzY29wZS5xdWVyeT1bXSwkc2NvcGUucXVlcnlDb2x1bW5zPVtdLCRzY29wZS5saW1pdD0xMDAsJHNjb3BlLnBhZ2VTaXplPTEwMCwkc2NvcGUucXVlcnlTdHJpbmc9dm9pZCAwLCRzY29wZS5yZXN1bHQ9dm9pZCAwLCRzY29wZS5zY2hlbWE9dm9pZCAwLCRzY29wZS5zY2hlbWFBcnJheT12b2lkIDAsJHNjb3BlLmFkZFF1ZXJ5RWxlbWVudCgpfWZ1bmN0aW9uIGFkZFdhdGNoZXMoKXskc2NvcGUuJHdhdGNoKCJxdWVyeSIsZnVuY3Rpb24obmV3VmFsKXskc2NvcGUuYnVpbGRRdWVyeShuZXdWYWwsJHNjb3BlLmxpbWl0KX0sITApLCRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCJxdWVyeSIsZnVuY3Rpb24obmV3VmFsKXskc2NvcGUuYnVpbGRRdWVyeShuZXdWYWwsJHNjb3BlLmxpbWl0KX0pLCRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCJsaW1pdCIsZnVuY3Rpb24obmV3VmFsKXskc2NvcGUuYnVpbGRRdWVyeSgkc2NvcGUucXVlcnksbmV3VmFsKX0pLCRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCJxdWVyeUNvbHVtbnMiLGZ1bmN0aW9uKG5ld1ZhbCl7JHNjb3BlLmJ1aWxkUXVlcnkoJHNjb3BlLnF1ZXJ5LG5ld1ZhbCl9KX12YXIgZXZlbnROYW1lPSRzdGF0ZVBhcmFtcy5ldmVudCxkYXRhc2V0SWQ9bnVsbCxldmVudD17fSxzYW1wbGVzPXt9OyRzY29wZS5vdXRwdXRUeXBlPXtTdHJpbmc6ZnVuY3Rpb24odmFsdWUpe3JldHVybiInIit2YWx1ZS5yZXBsYWNlKC8oWyciXFxdKS9nLCJcXFxcJDEiKSsiJyJ9LEJvb2xlYW46ZnVuY3Rpb24odmFsdWUpe3JldHVybiJ0cnVlIj09PXZhbHVlLnRvTG93ZXJDYXNlKCl9LEZsb2F0OmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSl9LEludGVnZXI6ZnVuY3Rpb24odmFsdWUpe3JldHVybiBwYXJzZUludCh2YWx1ZSl9LFRpbWVzdGFtcDpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIG1vbWVudCh2YWx1ZSl9fSwkc2NvcGUub3BlcmF0aW9ucz1bIj0iLCI8IiwiPD0iLCI+IiwiPj0iXSwkc2NvcGUuYnVpbGRRdWVyeT1mdW5jdGlvbihxdWVyeSl7aWYoZGF0YXNldElkJiZldmVudCl7dmFyIHRhYmxlPWRhdGFzZXRJZCsiLiIrZXZlbnROYW1lLHNxdWVsUXVlcnk9c3F1ZWwuc2VsZWN0KCkuZnJvbSh0YWJsZSk7c3F1ZWxRdWVyeS5saW1pdCgkc2NvcGUubGltaXQpLF8uZWFjaCgkc2NvcGUucXVlcnlDb2x1bW5zLGZ1bmN0aW9uKGZpZWxkKXtzcXVlbFF1ZXJ5PXNxdWVsUXVlcnkuZmllbGQoZmllbGQubmFtZSl9KSxfLmVhY2gocXVlcnksZnVuY3Rpb24oZWxlbWVudCl7aWYoZWxlbWVudC5uYW1lJiZlbGVtZW50Lm1vZGVsLnZhbHVlKXt2YXIgb3BlcmF0aW9uPWVsZW1lbnQub3BlcmF0aW9ufHwiPSIsdHlwZT1ldmVudFtlbGVtZW50Lm5hbWVdLHZhbHVlPSRzY29wZS5vdXRwdXRUeXBlW3R5cGVdKGVsZW1lbnQubW9kZWwudmFsdWUpO3NxdWVsUXVlcnk9c3F1ZWxRdWVyeS53aGVyZShlbGVtZW50Lm5hbWUrIiAiK29wZXJhdGlvbisiICIrdmFsdWUpfX0pLCRzY29wZS5xdWVyeVN0cmluZz1zcXVlbFF1ZXJ5LnRvU3RyaW5nKCl9fSwkc2NvcGUuYWRkUXVlcnlFbGVtZW50PWZ1bmN0aW9uKCl7JHNjb3BlLnF1ZXJ5LnB1c2goe25hbWU6IiIsb3BlcmF0aW9uOiIiLG1vZGVsOnt9fSl9LCRzY29wZS5yZW1vdmVRdWVyeUVsZW1lbnQ9ZnVuY3Rpb24oZWxlbWVudCl7dmFyIGluZGV4PSRzY29wZS5xdWVyeS5pbmRleE9mKGVsZW1lbnQpO2luZGV4Pj0wJiYkc2NvcGUucXVlcnkuc3BsaWNlKGluZGV4LDEpCn0sJHNjb3BlLnN0YXJ0c1dpdGg9ZnVuY3Rpb24oaW5wdXQsdmlld1ZhbHVlKXtyZXR1cm4gaW5wdXQmJmlucHV0LnN1YnN0cigwLHZpZXdWYWx1ZS5sZW5ndGgpLnRvTG93ZXJDYXNlKCk9PXZpZXdWYWx1ZS50b0xvd2VyQ2FzZSgpfSwkc2NvcGUucnVuUXVlcnk9ZnVuY3Rpb24oKXskc2NvcGUuZXJyb3I9dm9pZCAwLHNwaW5uZXJTZXJ2aWNlLnN0YXJ0KCkudGhlbihmdW5jdGlvbigpe3JldHVybiBxdWVyeVNlcnZpY2UuZXhlY3V0ZSgkc2NvcGUucXVlcnlTdHJpbmcsJHNjb3BlLnBhZ2VTaXplKX0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpeyRzY29wZS5yZXN1bHQ9cmVzcG9uc2UuZGF0YX0pWyJjYXRjaCJdKGZ1bmN0aW9uKHJlc3BvbnNlKXskc2NvcGUuZXJyb3I9cmVzcG9uc2UuZGF0YSwkbG9nLmVycm9yKHJlc3BvbnNlLmRhdGEpfSlbImZpbmFsbHkiXShzcGlubmVyU2VydmljZS5zdG9wKX0sJHNjb3BlLnNhdmVRdWVyeT1mdW5jdGlvbigpe3JlcG9ydFNlcnZpY2Uuc3RhcnRTYXZlKCRzY29wZS5xdWVyeVN0cmluZywkc2NvcGUuZXZlbnROYW1lKX0saW5pdCgpfV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuY29udHJvbGxlcigiQmlnbWV0cmljc0dyYXBoQ29udHJvbGxlciIsWyIkc2NvcGUiLCIkaHR0cCIsIiRxIiwiJHRpbWVvdXQiLCIkc3RhdGVQYXJhbXMiLCIkbG9nIiwiJGZpbHRlciIsInF1ZXJ5U2VydmljZSIsImV2ZW50U2VydmljZSIsZnVuY3Rpb24oJHNjb3BlLCRodHRwLCRxLCR0aW1lb3V0LCRzdGF0ZVBhcmFtcywkbG9nLCRmaWx0ZXIscXVlcnlTZXJ2aWNlLGV2ZW50U2VydmljZSl7ZnVuY3Rpb24gaW5pdCgpe2dldEV2ZW50KGV2ZW50TmFtZSkudGhlbihmZXRjaERhdGFzZXRJZCkudGhlbihiaW5kU2NvcGUpLnRoZW4oYWRkV2F0Y2hlcyl9ZnVuY3Rpb24gZ2V0RXZlbnQoZXZlbnROYW1lKXtyZXR1cm4gZXZlbnRTZXJ2aWNlLmdldChldmVudE5hbWUpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe2V2ZW50PXJlc3BvbnNlLmRhdGF9KX1mdW5jdGlvbiBmZXRjaERhdGFzZXRJZCgpe3JldHVybiBldmVudFNlcnZpY2UuZ2V0RGF0YXNldElkKCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7ZGF0YXNldElkPXJlc3BvbnNlLmRhdGEuZGF0YXNldH0pfWZ1bmN0aW9uIGJpbmRTY29wZSgpeyRzY29wZS5ldmVudE5hbWU9ZXZlbnROYW1lLCRzY29wZS5ldmVudD1ldmVudCwkc2NvcGUuZXZlbnRGaWVsZHM9Xy5tYXAoZXZlbnQsZnVuY3Rpb24odHlwZSxmaWVsZCl7cmV0dXJue25hbWU6ZmllbGQsdHlwZTp0eXBlLGxhYmVsOmZpZWxkKyIgKCIrdHlwZSsiKSJ9fSksJHNjb3BlLnF1ZXJ5PVtdLCRzY29wZS5xdWVyeUNvbHVtbnM9W10sJHNjb3BlLmxpbWl0PTEwMCwkc2NvcGUucGFnZVNpemU9MTAwLCRzY29wZS5xdWVyeVN0cmluZz12b2lkIDAsJHNjb3BlLnJlc3VsdD12b2lkIDAsJHNjb3BlLnNjaGVtYT12b2lkIDAsJHNjb3BlLnNjaGVtYUFycmF5PXZvaWQgMH1mdW5jdGlvbiBhZGRXYXRjaGVzKCl7JHNjb3BlLiR3YXRjaCgicXVlcnkiLGZ1bmN0aW9uKG5ld1ZhbCl7JHNjb3BlLmJ1aWxkUXVlcnkobmV3VmFsLCRzY29wZS5saW1pdCl9LCEwKSwkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigicXVlcnkiLGZ1bmN0aW9uKG5ld1ZhbCl7JHNjb3BlLmJ1aWxkUXVlcnkobmV3VmFsLCRzY29wZS5saW1pdCl9KSwkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigibGltaXQiLGZ1bmN0aW9uKG5ld1ZhbCl7JHNjb3BlLmJ1aWxkUXVlcnkoJHNjb3BlLnF1ZXJ5LG5ld1ZhbCl9KSwkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigicXVlcnlDb2x1bW5zIixmdW5jdGlvbihuZXdWYWwpeyRzY29wZS5idWlsZFF1ZXJ5KCRzY29wZS5xdWVyeSxuZXdWYWwpfSl9dmFyIGV2ZW50TmFtZT0kc3RhdGVQYXJhbXMuZXZlbnQsZGF0YXNldElkPW51bGwsZXZlbnQ9e307JHNjb3BlLmJ1aWxkUXVlcnk9ZnVuY3Rpb24ocXVlcnkpe2lmKGRhdGFzZXRJZCYmZXZlbnQpe3ZhciB0YWJsZT1kYXRhc2V0SWQrIi4iK2V2ZW50TmFtZSxzcXVlbFF1ZXJ5PXNxdWVsLnNlbGVjdCgpLmZyb20odGFibGUpO3NxdWVsUXVlcnkubGltaXQoJHNjb3BlLmxpbWl0KSxfLmVhY2goJHNjb3BlLnF1ZXJ5Q29sdW1ucyxmdW5jdGlvbihmaWVsZCl7c3F1ZWxRdWVyeT1zcXVlbFF1ZXJ5LmZpZWxkKGZpZWxkLm5hbWUpfSksXy5lYWNoKHF1ZXJ5LGZ1bmN0aW9uKGVsZW1lbnQpe2lmKGVsZW1lbnQubmFtZSYmZWxlbWVudC5tb2RlbC52YWx1ZSl7dmFyIG9wZXJhdGlvbj1lbGVtZW50Lm9wZXJhdGlvbnx8Ij0iLHR5cGU9ZXZlbnRbZWxlbWVudC5uYW1lXSx2YWx1ZT0kc2NvcGUub3V0cHV0VHlwZVt0eXBlXShlbGVtZW50Lm1vZGVsLnZhbHVlKTtzcXVlbFF1ZXJ5PXNxdWVsUXVlcnkud2hlcmUoZWxlbWVudC5uYW1lKyIgIitvcGVyYXRpb24rIiAiK3ZhbHVlKX19KSwkc2NvcGUucXVlcnlTdHJpbmc9c3F1ZWxRdWVyeS50b1N0cmluZygpfX0sJHNjb3BlLmFkZFF1ZXJ5RWxlbWVudD1mdW5jdGlvbigpeyRzY29wZS5xdWVyeS5wdXNoKHtuYW1lOiIiLG9wZXJhdGlvbjoiIixtb2RlbDp7fX0pfSwkc2NvcGUucmVtb3ZlUXVlcnlFbGVtZW50PWZ1bmN0aW9uKGVsZW1lbnQpe3ZhciBpbmRleD0kc2NvcGUucXVlcnkuaW5kZXhPZihlbGVtZW50KTtpbmRleD49MCYmJHNjb3BlLnF1ZXJ5LnNwbGljZShpbmRleCwxKX0sJHNjb3BlLnN0YXJ0c1dpdGg9ZnVuY3Rpb24oaW5wdXQsdmlld1ZhbHVlKXtyZXR1cm4gaW5wdXQmJmlucHV0LnN1YnN0cigwLHZpZXdWYWx1ZS5sZW5ndGgpLnRvTG93ZXJDYXNlKCk9PXZpZXdWYWx1ZS50b0xvd2VyQ2FzZSgpfSwkc2NvcGUucnVuUXVlcnk9ZnVuY3Rpb24oKXskbG9nLmRlYnVnKCJSdW4gcXVlcnkgaW52b2tlZCIpLCRzY29wZS5sb2FkaW5nPSEwLCRzY29wZS5lcnJvcj12b2lkIDA7dmFyIGNvbHVtbnM9YW5ndWxhci5jb3B5KCRzY29wZS5xdWVyeUNvbHVtbnMpO3F1ZXJ5U2VydmljZS5leGVjdXRlUXVlcnkoe3F1ZXJ5OiRzY29wZS5xdWVyeVN0cmluZ30pLnRoZW4ocXVlcnlTZXJ2aWNlLndhaXRGb3JKb2IpLnRoZW4oZnVuY3Rpb24oam9iKXtyZXR1cm4gcXVlcnlTZXJ2aWNlLnF1ZXJ5UmVzdWx0cyh7am9iSWQ6am9iLmpvYklkLHBhZ2VTaXplOiRzY29wZS5wYWdlU2l6ZX0pfSxmdW5jdGlvbihkYXRhKXskc2NvcGUubG9hZGluZz0hMSwkc2NvcGUuZXJyb3I9ZGF0YSwkbG9nLmVycm9yKGRhdGEpfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7JHNjb3BlLnJlc3VsdFNjaGVtYT1jb2x1bW5zLCRzY29wZS5yZXN1bHQ9cmVzcG9uc2UuZGF0YSwkc2NvcGUubG9hZGluZz0hMX0pfSxpbml0KCl9XSksYW5ndWxhci5tb2R1bGUoImJpZ21ldHJpY3MiKS5jb250cm9sbGVyKCJCaWdtZXRyaWNzUXVlcnlDb250cm9sbGVyIixbIiRzY29wZSIsIiRodHRwIiwiJGxvZyIsZnVuY3Rpb24oJHNjb3BlLCRodHRwLCRsb2cpe2Z1bmN0aW9uIGV4dHJhY3RQbGFjZWhvbGRlcnModGVtcGxhdGUpe2Zvcih2YXIgZ3JvdXBzLHBhdHRlcm49L3soXHcrKX0vZyxwbGFjZWhvbGRlcnM9W107bnVsbCE9PShncm91cHM9cGF0dGVybi5leGVjKHRlbXBsYXRlKSk7KXt2YXIgcGxhY2Vob2xkZXI9Z3JvdXBzWzFdO18uY29udGFpbnMocGxhY2Vob2xkZXJzLHBsYWNlaG9sZGVyKXx8cGxhY2Vob2xkZXJzLnB1c2gocGxhY2Vob2xkZXIpfXJldHVybiBwbGFjZWhvbGRlcnN9ZnVuY3Rpb24gcmVwbGFjZUFsbFBsYWNlaG9sZGVycyh0ZW1wbGF0ZSxtb2RlbCl7dmFyIHJlc3VsdD10ZW1wbGF0ZTtyZXR1cm4gXy5lYWNoKG1vZGVsLGZ1bmN0aW9uKHZhbHVlLG5hbWUpe3Jlc3VsdD1yZXBsYWNlUGxhY2Vob2xkZXIobmFtZSx2YWx1ZSxyZXN1bHQpfSkscmVzdWx0fWZ1bmN0aW9uIHJlcGxhY2VQbGFjZWhvbGRlcihuYW1lLHZhbHVlLHRlbXBsYXRlKXt2YXIgcGF0dGVybj1uZXcgUmVnRXhwKCJ7IituYW1lKyJ9IiwiZyIpO3JldHVybiB0ZW1wbGF0ZS5yZXBsYWNlKHBhdHRlcm4sdmFsdWUpfWZ1bmN0aW9uIGhhbmRsZVNlcnZpY2VFcnJvcihkYXRhLHN0YXR1cyl7JGxvZy5lcnJvcigiRXJyb3IgKCVzKTogJXMiLHN0YXR1cyxkYXRhKSwkc2NvcGUuZXJyb3I9IkFuIHVuZXhwZWN0ZWQgZXJyb3IgaGFzIG9jY3VycmVkIiwkc2NvcGUubG9hZGluZz0hMX1mdW5jdGlvbiBleGVjdXRlUXVlcnkoKXskc2NvcGUubG9hZGluZz0hMCwkc2NvcGUucXVlcnlSZXN1bHQ9bnVsbCxxdWVyeVNlcnZpY2UuZXhlY3V0ZVF1ZXJ5KHtxdWVyeTokc2NvcGUucXVlcnl9KS50aGVuKHF1ZXJ5U2VydmljZS53YWl0Rm9ySm9iKS50aGVuKGZ1bmN0aW9uKGpvYil7JHNjb3BlLnF1ZXJ5UmVzdWx0PW51bGwsJHNjb3BlLmpvYklkPWpvYi5qb2JJZDt2YXIgcXVlcnlSZXN1bHRzUmVxdWVzdD17am9iSWQ6am9iLmpvYklkLHBhZ2VTaXplOjEwfTtxdWVyeVNlcnZpY2UucXVlcnlSZXN1bHRzKHF1ZXJ5UmVzdWx0c1JlcXVlc3QpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSl7JGxvZy5kZWJ1ZygiUmVzcG9uc2U6ICVzIixhbmd1bGFyLnRvSnNvbihkYXRhKSksJHNjb3BlLnF1ZXJ5UmVzdWx0PWRhdGEsJHNjb3BlLmxvYWRpbmc9ITF9KS5lcnJvcihoYW5kbGVTZXJ2aWNlRXJyb3IpfSxmdW5jdGlvbihqb2IpeyRsb2cuZXJyb3IoIkpvYiAlcyBmYWlsZWQgJXMiLGFuZ3VsYXIudG9Kc29uKGpvYikpfSl9ZnVuY3Rpb24gZXhwb3J0UXVlcnlSZXN1bHRzKCl7JHNjb3BlLmxvYWRpbmc9ITA7dmFyIGV4cG9ydFJlc3VsdD1udWxsO3F1ZXJ5U2VydmljZS5leHBvcnRRdWVyeVJlc3VsdHMoe2pvYklkOiRzY29wZS5qb2JJZH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3JldHVybiBleHBvcnRSZXN1bHQ9cmVzcG9uc2UuZGF0YSxxdWVyeVNlcnZpY2Uud2FpdEZvckpvYihyZXNwb25zZSl9KS50aGVuKGZ1bmN0aW9uKCl7JHNjb3BlLmRvd25sb2FkTGluaz1leHBvcnRSZXN1bHQuZG93bmxvYWRVcmwsJGxvZy5pbmZvKCJKb2IgcmVhZHkgZm9yIERMICVvIixleHBvcnRSZXN1bHQpLCRzY29wZS5sb2FkaW5nPSExfSxmdW5jdGlvbihqb2IpeyRsb2cuZXJyb3IoIkpvYiAlcyBmYWlsZWQgJXMiLGFuZ3VsYXIudG9Kc29uKGpvYikpfSl9JHNjb3BlLm1vZGVsPXt9LCRzY29wZS5sb2FkaW5nPSExLCRzY29wZS50ZW1wbGF0ZT0ic2VsZWN0ICogZnJvbSBNeVRhYmxlIHdoZXJlIG5hbWUgPSB7bmFtZX0iLCRzY29wZS5wbGFjZWhvbGRlcnM9ZXh0cmFjdFBsYWNlaG9sZGVycygkc2NvcGUudGVtcGxhdGUpLF8uZWFjaCgkc2NvcGUucGxhY2Vob2xkZXJzLGZ1bmN0aW9uKHBsYWNlaG9sZGVyKXskc2NvcGUubW9kZWxbcGxhY2Vob2xkZXJdPSIifSksJHNjb3BlLiR3YXRjaENvbGxlY3Rpb24oIm1vZGVsIixmdW5jdGlvbigpeyRzY29wZS5xdWVyeT1yZXBsYWNlQWxsUGxhY2Vob2xkZXJzKCRzY29wZS50ZW1wbGF0ZSwkc2NvcGUubW9kZWwpfSksJHNjb3BlLnN1Ym1pdD1mdW5jdGlvbigpe2V4ZWN1dGVRdWVyeSgpfSwkc2NvcGUuZXhwb3J0PWZ1bmN0aW9uKCl7ZXhwb3J0UXVlcnlSZXN1bHRzKCl9fV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuY29udHJvbGxlcigiQmlnbWV0cmljc1JlcG9ydENvbnRyb2xsZXIiLFsiJHNjb3BlIiwiJGh0dHAiLCIkc3RhdGVQYXJhbXMiLCIkbG9nIiwicmVwb3J0U2VydmljZSIsInF1ZXJ5U2VydmljZSIsInNwaW5uZXJTZXJ2aWNlIixmdW5jdGlvbigkc2NvcGUsJGh0dHAsJHN0YXRlUGFyYW1zLCRsb2cscmVwb3J0U2VydmljZSxxdWVyeVNlcnZpY2Usc3Bpbm5lclNlcnZpY2Upe2Z1bmN0aW9uIGluaXQoKXtmZXRjaFJlcG9ydCgpLnRoZW4oYmluZFNjb3BlKS50aGVuKGJpbmRXYXRjaGVzKS50aGVuKGluaXRQbGFjZWhvbGRlcnMpfWZ1bmN0aW9uIGJpbmRTY29wZSgpeyRzY29wZS5lcnJvcj1udWxsLCRzY29wZS5yZXBvcnQ9cmVwb3J0LCRzY29wZS5tb2RlbD1tb2RlbCwkc2NvcGUucXVlcnk9IiIsJHNjb3BlLnF1ZXJ5UmVzdWx0PW51bGwsJHNjb3BlLnBsYWNlaG9sZGVycz1bXSwkc2NvcGUucnVuUXVlcnk9ZXhlY3V0ZVF1ZXJ5LCRzY29wZS5leHBvcnQ9ZXhwb3J0UXVlcnlSZXN1bHRzfWZ1bmN0aW9uIGZldGNoUmVwb3J0KCl7cmV0dXJuIHJlcG9ydFNlcnZpY2UuZ2V0KHJlcG9ydElkKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtyZXBvcnQ9cmVzcG9uc2UuZGF0YX0pfWZ1bmN0aW9uIGJpbmRXYXRjaGVzKCl7JHNjb3BlLiR3YXRjaENvbGxlY3Rpb24oIm1vZGVsIixmdW5jdGlvbigpeyRzY29wZS5xdWVyeT1yZXBsYWNlQWxsUGxhY2Vob2xkZXJzKHJlcG9ydC50ZW1wbGF0ZSxtb2RlbCl9KX1mdW5jdGlvbiBpbml0UGxhY2Vob2xkZXJzKCl7JHNjb3BlLnBsYWNlaG9sZGVycz1leHRyYWN0UGxhY2Vob2xkZXJzKHJlcG9ydC50ZW1wbGF0ZSksXy5lYWNoKCRzY29wZS5wbGFjZWhvbGRlcnMsZnVuY3Rpb24ocGxhY2Vob2xkZXIpe21vZGVsW3BsYWNlaG9sZGVyXT0iIn0pfWZ1bmN0aW9uIGV4dHJhY3RQbGFjZWhvbGRlcnModGVtcGxhdGUpe2Zvcih2YXIgZ3JvdXBzLHBhdHRlcm49L3soXHcrKX0vZyxwbGFjZWhvbGRlcnM9W107bnVsbCE9PShncm91cHM9cGF0dGVybi5leGVjKHRlbXBsYXRlKSk7KXt2YXIgcGxhY2Vob2xkZXI9Z3JvdXBzWzFdO18uY29udGFpbnMocGxhY2Vob2xkZXJzLHBsYWNlaG9sZGVyKXx8cGxhY2Vob2xkZXJzLnB1c2gocGxhY2Vob2xkZXIpfXJldHVybiBwbGFjZWhvbGRlcnN9ZnVuY3Rpb24gcmVwbGFjZUFsbFBsYWNlaG9sZGVycyh0ZW1wbGF0ZSxtb2RlbCl7dmFyIHJlc3VsdD10ZW1wbGF0ZTtyZXR1cm4gXy5lYWNoKG1vZGVsLGZ1bmN0aW9uKHZhbHVlLG5hbWUpe3Jlc3VsdD1yZXBsYWNlUGxhY2Vob2xkZXIobmFtZSx2YWx1ZSxyZXN1bHQpfSkscmVzdWx0fWZ1bmN0aW9uIHJlcGxhY2VQbGFjZWhvbGRlcihuYW1lLHZhbHVlLHRlbXBsYXRlKXt2YXIgcGF0dGVybj1uZXcgUmVnRXhwKCJ7IituYW1lKyJ9IiwiZyIpO3JldHVybiB0ZW1wbGF0ZS5yZXBsYWNlKHBhdHRlcm4sdmFsdWUpfWZ1bmN0aW9uIGV4ZWN1dGVRdWVyeSgpe3NwaW5uZXJTZXJ2aWNlLnN0YXJ0KCkudGhlbihmdW5jdGlvbigpe3JldHVybiBxdWVyeVNlcnZpY2UuZXhlY3V0ZSgkc2NvcGUucXVlcnksMWUzKX0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpeyRzY29wZS5xdWVyeVJlc3VsdD1yZXNwb25zZS5kYXRhfSlbImNhdGNoIl0oZnVuY3Rpb24ocmVzcG9uc2UpeyRzY29wZS5lcnJvcj1yZXNwb25zZS5kYXRhLCRsb2cuZXJyb3IocmVzcG9uc2UuZGF0YSl9KVsiZmluYWxseSJdKHNwaW5uZXJTZXJ2aWNlLnN0b3ApfWZ1bmN0aW9uIGV4cG9ydFF1ZXJ5UmVzdWx0cygpe3ZhciBleHBvcnRSZXN1bHQ9bnVsbDtxdWVyeVNlcnZpY2UuZXhwb3J0UXVlcnlSZXN1bHRzKHtqb2JJZDokc2NvcGUuam9iSWR9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtyZXR1cm4gZXhwb3J0UmVzdWx0PXJlc3BvbnNlLmRhdGEscXVlcnlTZXJ2aWNlLndhaXRGb3JKb2IocmVzcG9uc2UpfSkudGhlbihmdW5jdGlvbigpeyRzY29wZS5kb3dubG9hZExpbms9ZXhwb3J0UmVzdWx0LmRvd25sb2FkVXJsLCRsb2cuaW5mbygiSm9iIHJlYWR5IGZvciBETCAlbyIsZXhwb3J0UmVzdWx0KX0sZnVuY3Rpb24oam9iKXskbG9nLmVycm9yKCJKb2IgJXMgZmFpbGVkICVzIixhbmd1bGFyLnRvSnNvbihqb2IpKX0pfXZhciByZXBvcnQ9e30scmVwb3J0SWQ9JHN0YXRlUGFyYW1zLnJlcG9ydElkLG1vZGVsPXt9OyRzY29wZS5zYXZlUXVlcnk9ZnVuY3Rpb24oKXtyZXBvcnRTZXJ2aWNlLnN0YXJ0U2F2ZShyZXBvcnQucXVlcnkscmVwb3J0LmV2ZW50KX0saW5pdCgpfV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuZGlyZWN0aXZlKCJiaWdtZXRyaWNzUXVlcnkiLFsiJGxvZyIsIiR0aW1lb3V0IiwiJHEiLGZ1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJBIixzY29wZTp7cXVlcnk6Ij1iaWdtZXRyaWNzUXVlcnkiLHRpdGxlOiI9IixvblJ1bjoiJiIsb25TYXZlOiImIn0sdGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL2RpcmVjdGl2ZS9iaWdtZXRyaWNzUXVlcnkuaHRtbCIsY29udHJvbGxlcjpbIiRzY29wZSIsZnVuY3Rpb24oKXt9XX19XSksYW5ndWxhci5tb2R1bGUoImJpZ21ldHJpY3MiKS5kaXJlY3RpdmUoImJpZ21ldHJpY3NRdWVyeVJlc3VsdCIsWyIkcm9vdFNjb3BlIiwiJGxvZyIsIiRtb2RhbCIsInJlcG9ydFNlcnZpY2UiLGZ1bmN0aW9uKCRyb290U2NvcGUsJGxvZyl7cmV0dXJue3Jlc3RyaWN0OiJBIix0ZW1wbGF0ZVVybDoiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JpZ21ldHJpY3NRdWVyeVJlc3VsdC5odG1sIixzY29wZTp7cXVlcnlSZXN1bHQ6Ij1iaWdtZXRyaWNzUXVlcnlSZXN1bHQiLHF1ZXJ5U3RyaW5nOiI9Iixqb2JJZDoiPSIsZXZlbnQ6Ij0iLG9uU2F2ZToiJiJ9LGNvbnRyb2xsZXI6WyIkc2NvcGUiLCIkcm9vdFNjb3BlIixmdW5jdGlvbigkc2NvcGUpeyRzY29wZS5kaXNwbGF5PSJ0YWJsZSIsJHNjb3BlLmV4cG9ydD1mdW5jdGlvbigpeyRsb2cuZGVidWcoIkV4cG9ydGluZyBqb2IgJXMgYXMgYSBDU1YiLCRzY29wZS5qb2JJZCl9fV19fV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuZGlyZWN0aXZlKCJiaWdtZXRyaWNzU2F2ZVJlcG9ydCIsWyIkcm9vdFNjb3BlIiwiJGxvZyIsIiRtb2RhbCIsInJlcG9ydFNlcnZpY2UiLGZ1bmN0aW9uKCRyb290U2NvcGUsJGxvZyl7cmV0dXJue3Jlc3RyaWN0OiJBIix0ZW1wbGF0ZVVybDoiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JpZ21ldHJpY3NRdWVyeVJlc3VsdC5odG1sIixzY29wZTp7cXVlcnlSZXN1bHQ6Ij1iaWdtZXRyaWNzUXVlcnlSZXN1bHQiLHF1ZXJ5U3RyaW5nOiI9Iixqb2JJZDoiPSIsZXZlbnQ6Ij0iLG9uU2F2ZToiPSJ9LGNvbnRyb2xsZXI6WyIkc2NvcGUiLCIkcm9vdFNjb3BlIixmdW5jdGlvbigkc2NvcGUpeyRzY29wZS5leHBvcnQ9ZnVuY3Rpb24oKXskbG9nLmRlYnVnKCJFeHBvcnRpbmcgam9iICVzIGFzIGEgQ1NWIiwkc2NvcGUuam9iSWQpfX1dfX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmRpcmVjdGl2ZSgiYnFJbnB1dCIsW2Z1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJBIix0ZW1wbGF0ZVVybDoiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JxLWlucHV0Lmh0bWwiLHNjb3BlOnttb2RlbDoiPSIsdHlwZToiPSIsc2FtcGxlOiI9PyJ9fX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmRpcmVjdGl2ZSgibGluZUNoYXJ0IixbZnVuY3Rpb24oKXtmdW5jdGlvbiBjYWxjdWxhdGVEYXRhU2VyaWVzKHF1ZXJ5UmVzdWx0cyx4TmFtZSx5TmFtZXMpe2lmKCFxdWVyeVJlc3VsdHN8fCF4TmFtZXx8IXlOYW1lcy5sZW5ndGgpcmV0dXJuIHZvaWQgMDt2YXIgcm93cz1xdWVyeVJlc3VsdHMuZGF0YSxjb2x1bW5zPXF1ZXJ5UmVzdWx0cy5zY2hlbWEseD1fLmluZGV4T2YoY29sdW1ucyx4TmFtZSkseT1fLm1hcCh5TmFtZXMsZnVuY3Rpb24oeU5hbWUpe3JldHVybiBfLmluZGV4T2YoY29sdW1ucyx5TmFtZSl9KSxzZXJpZXM9Xy5tYXAoeSxmdW5jdGlvbih5SW5kZXgsaW5kZXgpe3ZhciBhc051bWVyaWM9Xy5tYXAocm93cyxmdW5jdGlvbihyb3cpe3JldHVybiBfLm1hcChyb3csZnVuY3Rpb24oZW50cnkpe3ZhciByPXBhcnNlSW50KGVudHJ5KTtyZXR1cm4gcj0wLzA9PXI/cGFyc2VGbG9hdChyKTpyLHI9MC8wPT1yP2VudHJ5OnJ9KX0pLHNvcnRlZFJvd3M9Xy5zb3J0QnkoYXNOdW1lcmljLGZ1bmN0aW9uKHJvdyl7cmV0dXJuIHJvd1t4XX0pO3JldHVybntsYWJlbDp5TmFtZXNbaW5kZXhdLGRhdGE6Xy5tYXAoc29ydGVkUm93cyxmdW5jdGlvbihyb3cpe3JldHVybltyb3dbeF0scm93W3lJbmRleF1dfSl9fSk7cmV0dXJuIHNlcmllc312YXIgY29sb3Vycz1bIiNiMDdlY2MiLCIjZDQ5MTg3IiwiI2FiZGE5MCIsIiM5YWQ2ZTAiLCIjOTdiZmQ2IiwiI2Q1YTBkZCIsIiNlM2JmYWEiLCIjYmNlOGI1Il07cmV0dXJue3Jlc3RyaWN0OiJBIix0ZW1wbGF0ZVVybDoiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2xpbmUtY2hhcnQuaHRtbCIsc2NvcGU6e3F1ZXJ5UmVzdWx0czoiPWxpbmVDaGFydCJ9LGNvbnRyb2xsZXI6WyIkc2NvcGUiLGZ1bmN0aW9uKCRzY29wZSl7JHNjb3BlLmNvbHVtbnM9W10sJHNjb3BlLnk9W10sJHNjb3BlLng9dm9pZCAwLCRzY29wZS5kYXRhPVtdLCRzY29wZS5vcHRpb25zPXtjb2xvcnM6Y29sb3VycyxzZXJpZXM6e2xpbmVzOntzaG93OiEwfSxwb2ludHM6e3Nob3c6ITAsc3ltYm9sOiJjaXJjbGUiLHJhZGl1czo0LGZpbGw6MSxmaWxsQ29sb3I6ITF9fX0sJHNjb3BlLiR3YXRjaCgieCIsZnVuY3Rpb24obmV3VmFsLG9sZFZhbCl7bmV3VmFsIT1vbGRWYWwmJigkc2NvcGUuZGF0YT1jYWxjdWxhdGVEYXRhU2VyaWVzKCRzY29wZS5xdWVyeVJlc3VsdHMsbmV3VmFsLCRzY29wZS55KSl9KSwkc2NvcGUuJHdhdGNoKCJ5IixmdW5jdGlvbihuZXdWYWwsb2xkVmFsKXtfLmRpZmZlcmVuY2UobmV3VmFsLG9sZFZhbCkubGVuZ3RoPjAmJigkc2NvcGUuZGF0YT1jYWxjdWxhdGVEYXRhU2VyaWVzKCRzY29wZS5xdWVyeVJlc3VsdHMsJHNjb3BlLngsbmV3VmFsKSl9LCEwKSwkc2NvcGUuJHdhdGNoKCJxdWVyeVJlc3VsdHMiLGZ1bmN0aW9uKG5ld1ZhbCl7bmV3VmFsPygkc2NvcGUuY29sdW1ucz1uZXdWYWwuc2NoZW1hLG5ld1ZhbC5zY2hlbWEubGVuZ3RoPjE/KF8uaW5kZXhPZigkc2NvcGUuY29sdW1ucywkc2NvcGUueCk8MCYmKCRzY29wZS54PW5ld1ZhbC5zY2hlbWFbMF0pLCRzY29wZS55PV8uaW50ZXJzZWN0aW9uKCRzY29wZS55LCRzY29wZS5jb2x1bW5zKSwwPT0kc2NvcGUueS5sZW5ndGgmJigkc2NvcGUueT1bXSwkc2NvcGUueS5wdXNoKCRzY29wZS5jb2x1bW5zWzFdKSkpOigkc2NvcGUueD12b2lkIDAsJHNjb3BlLnk9W10pKTooJHNjb3BlLmNvbHVtbnM9W10sJHNjb3BlLng9dm9pZCAwLCRzY29wZS55PVtdKSwkc2NvcGUuZGF0YT1jYWxjdWxhdGVEYXRhU2VyaWVzKCRzY29wZS5xdWVyeVJlc3VsdHMsbmV3VmFsLCRzY29wZS55KX0pfV19fV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuZGlyZWN0aXZlKCJyZXN1bHRUYWJsZSIsW2Z1bmN0aW9uKCl7cmV0dXJue3Jlc3RyaWN0OiJBIix0ZW1wbGF0ZVVybDoiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL3Jlc3VsdC10YWJsZS5odG1sIixzY29wZTp7cXVlcnlSZXN1bHQ6Ij1yZXN1bHRUYWJsZSJ9LGNvbnRyb2xsZXI6ZnVuY3Rpb24oKXt9fX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmRpcmVjdGl2ZSgic2F2ZWRRdWVyeSIsWyIkbG9nIiwiJHRpbWVvdXQiLCIkcSIsInF1ZXJ5U2VydmljZSIsZnVuY3Rpb24oJGxvZywkdGltZW91dCwkcSxxdWVyeVNlcnZpY2Upe2Z1bmN0aW9uIGxpbmsoJHNjb3BlKXskc2NvcGUubW9kZWw9e30sJHNjb3BlLnBsYWNlaG9sZGVycz1leHRyYWN0UGxhY2Vob2xkZXJzKCRzY29wZS50ZW1wbGF0ZSksXy5lYWNoKCRzY29wZS5wbGFjZWhvbGRlcnMsZnVuY3Rpb24ocGxhY2Vob2xkZXIpeyRzY29wZS5tb2RlbFtwbGFjZWhvbGRlcl09IiJ9KSwkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigibW9kZWwiLGZ1bmN0aW9uKCl7JHNjb3BlLnF1ZXJ5PXJlcGxhY2VBbGxQbGFjZWhvbGRlcnMoJHNjb3BlLnRlbXBsYXRlLCRzY29wZS5tb2RlbCl9KX1mdW5jdGlvbiBleHRyYWN0UGxhY2Vob2xkZXJzKHRlbXBsYXRlKXtmb3IodmFyIGdyb3VwcyxwYXR0ZXJuPS97KFx3Kyl9L2cscGxhY2Vob2xkZXJzPVtdO251bGwhPT0oZ3JvdXBzPXBhdHRlcm4uZXhlYyh0ZW1wbGF0ZSkpOyl7dmFyIHBsYWNlaG9sZGVyPWdyb3Vwc1sxXTtfLmNvbnRhaW5zKHBsYWNlaG9sZGVycyxwbGFjZWhvbGRlcil8fHBsYWNlaG9sZGVycy5wdXNoKHBsYWNlaG9sZGVyKX1yZXR1cm4gcGxhY2Vob2xkZXJzfWZ1bmN0aW9uIHJlcGxhY2VBbGxQbGFjZWhvbGRlcnModGVtcGxhdGUsbW9kZWwpe3ZhciByZXN1bHQ9dGVtcGxhdGU7cmV0dXJuIF8uZWFjaChtb2RlbCxmdW5jdGlvbih2YWx1ZSxuYW1lKXtyZXN1bHQ9cmVwbGFjZVBsYWNlaG9sZGVyKG5hbWUsdmFsdWUscmVzdWx0KX0pLHJlc3VsdH1mdW5jdGlvbiByZXBsYWNlUGxhY2Vob2xkZXIobmFtZSx2YWx1ZSx0ZW1wbGF0ZSl7dmFyIHBhdHRlcm49bmV3IFJlZ0V4cCgieyIrbmFtZSsifSIsImciKTtyZXR1cm4gdGVtcGxhdGUucmVwbGFjZShwYXR0ZXJuLHZhbHVlKX1yZXR1cm57dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL3F1ZXJ5Lmh0bWwiLHJlc3RyaWN0OiJBIixzY29wZTp7dGVtcGxhdGU6Ij0ifSxsaW5rOmxpbmssY29udHJvbGxlcjpbIiRzY29wZSIsZnVuY3Rpb24oJHNjb3BlKXtmdW5jdGlvbiBoYW5kbGVTZXJ2aWNlRXJyb3IoZGF0YSxzdGF0dXMpeyRsb2cuZXJyb3IoIkVycm9yICglcyk6ICVzIixzdGF0dXMsZGF0YSksJHNjb3BlLmVycm9yPSJBbiB1bmV4cGVjdGVkIGVycm9yIGhhcyBvY2N1cnJlZCIsJHNjb3BlLmxvYWRpbmc9ITF9ZnVuY3Rpb24gZXhlY3V0ZVF1ZXJ5KCl7JHNjb3BlLmxvYWRpbmc9ITAsJHNjb3BlLnF1ZXJ5UmVzdWx0PW51bGwscXVlcnlTZXJ2aWNlLmV4ZWN1dGVRdWVyeSh7cXVlcnk6JHNjb3BlLnF1ZXJ5fSkudGhlbihxdWVyeVNlcnZpY2Uud2FpdEZvckpvYikudGhlbihmdW5jdGlvbihqb2IpeyRzY29wZS5xdWVyeVJlc3VsdD1udWxsLCRzY29wZS5qb2JJZD1qb2Iuam9iSWQ7dmFyIHF1ZXJ5UmVzdWx0c1JlcXVlc3Q9e2pvYklkOmpvYi5qb2JJZCxwYWdlU2l6ZToxMH07cXVlcnlTZXJ2aWNlLnF1ZXJ5UmVzdWx0cyhxdWVyeVJlc3VsdHNSZXF1ZXN0KS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpeyRsb2cuZGVidWcoIlJlc3BvbnNlOiAlcyIsYW5ndWxhci50b0pzb24oZGF0YSkpLCRzY29wZS5xdWVyeVJlc3VsdD1kYXRhLCRzY29wZS5sb2FkaW5nPSExfSkuZXJyb3IoaGFuZGxlU2VydmljZUVycm9yKX0sZnVuY3Rpb24oam9iKXskbG9nLmVycm9yKCJKb2IgJXMgZmFpbGVkICVzIixhbmd1bGFyLnRvSnNvbihqb2IpKX0pfWZ1bmN0aW9uIGV4cG9ydFF1ZXJ5UmVzdWx0cygpeyRzY29wZS5sb2FkaW5nPSEwO3ZhciBleHBvcnRSZXN1bHQ9bnVsbDtxdWVyeVNlcnZpY2UuZXhwb3J0UXVlcnlSZXN1bHRzKHtqb2JJZDokc2NvcGUuam9iSWR9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtyZXR1cm4gZXhwb3J0UmVzdWx0PXJlc3BvbnNlLmRhdGEscXVlcnlTZXJ2aWNlLndhaXRGb3JKb2IocmVzcG9uc2UpfSkudGhlbihmdW5jdGlvbigpeyRzY29wZS5kb3dubG9hZExpbms9ZXhwb3J0UmVzdWx0LmRvd25sb2FkVXJsLCRsb2cuaW5mbygiSm9iIHJlYWR5IGZvciBETCAlbyIsZXhwb3J0UmVzdWx0KSwkc2NvcGUubG9hZGluZz0hMX0sZnVuY3Rpb24oam9iKXskbG9nLmVycm9yKCJKb2IgJXMgZmFpbGVkICVzIixhbmd1bGFyLnRvSnNvbihqb2IpKX0pfSRzY29wZS5zdWJtaXQ9ZnVuY3Rpb24oKXtleGVjdXRlUXVlcnkoKX0sJHNjb3BlLmV4cG9ydD1mdW5jdGlvbigpe2V4cG9ydFF1ZXJ5UmVzdWx0cygpfX1dfX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmRpcmVjdGl2ZSgic2VsZWN0cGlja2VyIixbIiR0aW1lb3V0IixmdW5jdGlvbigkdGltZW91dCl7cmV0dXJue3Jlc3RyaWN0OiJBQyIscmVxdWlyZToiP25nTW9kZWwiLGxpbms6ZnVuY3Rpb24oc2NvcGUsZWxlbWVudCxhdHRycyl7c2NvcGUuJHdhdGNoQ29sbGVjdGlvbihhdHRycy5zZWxlY3RwaWNrZXIsZnVuY3Rpb24oKXskdGltZW91dChmdW5jdGlvbigpe2VsZW1lbnQuc2VsZWN0cGlja2VyKCJyZWZyZXNoIil9LDApfSksc2NvcGUuJHdhdGNoKGF0dHJzLm5nTW9kZWwsZnVuY3Rpb24obmV3VmFsdWUpe2VsZW1lbnQudmFsKG5ld1ZhbHVlKSwkdGltZW91dChmdW5jdGlvbigpe2VsZW1lbnQuc2VsZWN0cGlja2VyKCJyZWZyZXNoIil9LDApfSl9fX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmZhY3RvcnkoImV2ZW50U2VydmljZSIsWyIkaHR0cCIsIiRxIiwiJGxvZyIsIiR0aW1lb3V0IixmdW5jdGlvbigkaHR0cCwkcSwkbG9nLCR0aW1lb3V0KXtmdW5jdGlvbiBnZXQobmFtZSl7cmV0dXJuICRsb2cuZGVidWcoIkdldHRpbmcgZXZlbnQgJXMiLG5hbWUpLCRodHRwLmdldCgiL2FkbWluL2JpZ21ldHJpY3MvZXZlbnQvIituYW1lKyIvIil9ZnVuY3Rpb24gbGlzdCgpe3JldHVybiAkbG9nLmRlYnVnKCJHZXR0aW5nIGV2ZW50cyIpLCRodHRwLmdldCgiL2FkbWluL2JpZ21ldHJpY3MvZXZlbnQvIil9ZnVuY3Rpb24gZ2V0RGF0YXNldElkKCl7cmV0dXJuICRodHRwLmdldCgiL2FkbWluL2JpZ21ldHJpY3MvZXZlbnQvZGF0YXNldCIpfWZ1bmN0aW9uIGdldFNhbXBsZXMoZXZlbnQsZmllbGQpeyRsb2cuZGVidWcoIkdldHRpbmcgc2FtcGxlcyBmb3IgJXM6JXMiLGV2ZW50LGZpZWxkKTt2YXIgcHJvbWlzZT0kaHR0cC5nZXQoIi9hZG1pbi9iaWdtZXRyaWNzL2V2ZW50LyIrZXZlbnQrIi9maWVsZC8iK2ZpZWxkKyIvc2FtcGxlIik7cmV0dXJuIHByb21pc2UudGhlbihmdW5jdGlvbihyZXNwb25zZSl7cmV0dXJuIDIwMCE9cmVzcG9uc2Uuc3RhdHVzPyR0aW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGdldFNhbXBsZXMoZXZlbnQsZmllbGQpfSw1MDApOnZvaWQgMH0pLHByb21pc2V9cmV0dXJue2dldDpnZXQsbGlzdDpsaXN0LGdldERhdGFzZXRJZDpnZXREYXRhc2V0SWQsZ2V0U2FtcGxlczpnZXRTYW1wbGVzfX1dKSxhbmd1bGFyLm1vZHVsZSgiYmlnbWV0cmljcyIpLmZhY3RvcnkoInF1ZXJ5U2VydmljZSIsWyIkaHR0cCIsIiRxIiwiJGxvZyIsZnVuY3Rpb24oJGh0dHAsJHEsJGxvZyl7ZnVuY3Rpb24gZGVmZXJSZXF1ZXN0c0luUHJvZ3Jlc3MoKXtyZXR1cm4gY2FuY2VsJiZjYW5jZWwucmVzb2x2ZSgpLGNhbmNlbD0kcS5kZWZlcigpfXZhciBjYW5jZWwsYXBpPXtleGVjdXRlOmZ1bmN0aW9uKHF1ZXJ5LHBhZ2VTaXplKXt2YXIgc2VsZj10aGlzO3JldHVybiBzZWxmLmV4ZWN1dGVRdWVyeSh7cXVlcnk6cXVlcnl9KS50aGVuKHNlbGYud2FpdEZvckpvYikudGhlbihmdW5jdGlvbihqb2Ipe3JldHVybiBzZWxmLnF1ZXJ5UmVzdWx0cyh7am9iSWQ6am9iLmpvYklkLHBhZ2VTaXplOnBhZ2VTaXplfSl9KX0sZXhlY3V0ZVF1ZXJ5OmZ1bmN0aW9uKHF1ZXJ5UmVxdWVzdCl7cmV0dXJuICRsb2cuZGVidWcoIkV4ZWN1dGluZyBxdWVyeSBmb3IgcmVxdWVzdCAlcyIsYW5ndWxhci50b0pzb24ocXVlcnlSZXF1ZXN0KSksJGh0dHAucG9zdCgiL2FkbWluL2JpZ21ldHJpY3MvcXVlcnkvIixxdWVyeVJlcXVlc3Qse3RpbWVvdXQ6ZGVmZXJSZXF1ZXN0c0luUHJvZ3Jlc3MoKX0pfSx3YWl0Rm9ySm9iOmZ1bmN0aW9uKGlucHV0LGRlZmVycmVkLGNhbmNlbCl7dmFyIGpvYklkPWlucHV0LmpvYklkfHxpbnB1dC5kYXRhLmpvYklkOyRsb2cuZGVidWcoIkNoZWNraW5nIGpvYiBzdGF0dXMgb2Ygam9iICVzIixqb2JJZCksZGVmZXJyZWQ9ZGVmZXJyZWR8fCRxLmRlZmVyKCksY2FuY2VsPWNhbmNlbHx8ZGVmZXJSZXF1ZXN0c0luUHJvZ3Jlc3MoKTt2YXIgcHJvbWlzZT0kaHR0cC5nZXQoIi9hZG1pbi9iaWdtZXRyaWNzL3F1ZXJ5LyIram9iSWQrIi9zdGF0dXMiLHt0aW1lb3V0OmNhbmNlbH0pO3JldHVybiBwcm9taXNlLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe3Jlc3BvbnNlLmRhdGEuY29tcGxldGV8fCJ0cnVlIj09cmVzcG9uc2UuZGF0YS5jb21wbGV0ZT9kZWZlcnJlZC5yZXNvbHZlKHtqb2JJZDpqb2JJZH0pOihkZWZlcnJlZC5ub3RpZnkoe2pvYklkOmpvYklkfSksYXBpLndhaXRGb3JKb2IoaW5wdXQsZGVmZXJyZWQsY2FuY2VsKSl9LGZ1bmN0aW9uKHJlc3BvbnNlKXtkZWZlcnJlZC5yZWplY3Qoe2pvYklkOmpvYklkLGVycm9yOnJlc3BvbnNlLmRhdGF9KX0pLGRlZmVycmVkLnByb21pc2V9LHF1ZXJ5UmVzdWx0czpmdW5jdGlvbihxdWVyeVJlc3VsdHNSZXF1ZXN0KXtyZXR1cm4gJGh0dHAuZ2V0KCIvYWRtaW4vYmlnbWV0cmljcy9xdWVyeS8iK3F1ZXJ5UmVzdWx0c1JlcXVlc3Quam9iSWQrIi8iLHF1ZXJ5UmVzdWx0c1JlcXVlc3Qse3RpbWVvdXQ6ZGVmZXJSZXF1ZXN0c0luUHJvZ3Jlc3MoKX0pfSxleHBvcnRRdWVyeVJlc3VsdHM6ZnVuY3Rpb24oZXhwb3J0UXVlcnlSZXN1bHRzUmVxdWVzdCl7cmV0dXJuICRsb2cuZGVidWcoIkV4cG9ydCBxdWVyeSByZXN1bHRzIGZvciByZXF1ZXN0ICVzIixhbmd1bGFyLnRvSnNvbihleHBvcnRRdWVyeVJlc3VsdHNSZXF1ZXN0KSksJGh0dHAucG9zdCgiL2FkbWluL2JpZ21ldHJpY3MvcXVlcnkvIitleHBvcnRRdWVyeVJlc3VsdHNSZXF1ZXN0LmpvYklkKyIvZXhwb3J0IixleHBvcnRRdWVyeVJlc3VsdHNSZXF1ZXN0LHt0aW1lb3V0OmRlZmVyUmVxdWVzdHNJblByb2dyZXNzKCl9KX19O3JldHVybiBhcGl9XSksYW5ndWxhci5tb2R1bGUoImJpZ21ldHJpY3MiKS5mYWN0b3J5KCJyZXBvcnRTZXJ2aWNlIixbIiRodHRwIiwiJHEiLCIkbW9kYWwiLCIkcm9vdFNjb3BlIiwiJGxvZyIsZnVuY3Rpb24oJGh0dHAsJHEsJG1vZGFsLCRyb290U2NvcGUsJGxvZyl7ZnVuY3Rpb24gbGlzdCgpe3JldHVybiAkbG9nLmRlYnVnKCJMaXN0aW5nIGFsbCByZXBvcnRzIiksJGh0dHAuZ2V0KCIvYWRtaW4vYmlnbWV0cmljcy9yZXBvcnQvIil9ZnVuY3Rpb24gZ2V0KHJlcG9ydElkKXtyZXR1cm4gJGxvZy5kZWJ1ZygiR2V0dGluZyByZXBvcnQgJXMiLHJlcG9ydElkKSwkaHR0cC5nZXQoIi9hZG1pbi9iaWdtZXRyaWNzL3JlcG9ydC8iK3JlcG9ydElkKyIvIil9ZnVuY3Rpb24gc2F2ZShyZXBvcnQpe3JldHVybiAkbG9nLmRlYnVnKCJTYXZpbmcgcmVwb3J0ICVzIixhbmd1bGFyLnRvSnNvbihyZXBvcnQpKSwkaHR0cC5wb3N0KCIvYWRtaW4vYmlnbWV0cmljcy9yZXBvcnQvc2F2ZSIscmVwb3J0KX1mdW5jdGlvbiBzdGFydFNhdmUocXVlcnlTdHJpbmcsZXZlbnROYW1lKXt2YXIgbW9kYWxJbnN0YW5jZT0kbW9kYWwub3Blbih7dGVtcGxhdGVVcmw6Ii9zdGF0aWMvdGVtcGxhdGVzL2RpcmVjdGl2ZS9iaWdtZXRyaWNzU2F2ZVJlcG9ydC5odG1sIixjb250cm9sbGVyOlsiJHNjb3BlIiwiJG1vZGFsSW5zdGFuY2UiLGZ1bmN0aW9uKCRzY29wZSwkbW9kYWxJbnN0YW5jZSl7JHNjb3BlLm1vZGVsPXtyZXBvcnROYW1lOiIifSwkc2NvcGUuc2F2ZT1mdW5jdGlvbigpeyRtb2RhbEluc3RhbmNlLmNsb3NlKCRzY29wZS5tb2RlbCl9fV0sc2l6ZToibGcifSk7bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbihtb2RlbCl7JGxvZy5kZWJ1ZygiUmVwb3J0IG5hbWU6ICVzIixtb2RlbC5yZXBvcnROYW1lKTt2YXIgcmVwb3J0PXtuYW1lOm1vZGVsLnJlcG9ydE5hbWUsdGVtcGxhdGU6cXVlcnlTdHJpbmcsZXZlbnQ6ZXZlbnROYW1lfTtzYXZlKHJlcG9ydCkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXskcm9vdFNjb3BlLiRicm9hZGNhc3QoInJlbG9hZC1yZXBvcnRzIiksJGxvZy5kZWJ1ZygiU2F2ZWQgcmVwb3J0OiAlcyIsYW5ndWxhci50b0pzb24oZGF0YSkpfSl9KX1yZXR1cm57bGlzdDpsaXN0LGdldDpnZXQsc2F2ZTpzYXZlLHN0YXJ0U2F2ZTpzdGFydFNhdmV9fV0pLGFuZ3VsYXIubW9kdWxlKCJiaWdtZXRyaWNzIikuZmFjdG9yeSgic3Bpbm5lclNlcnZpY2UiLFsiJHJvb3RTY29wZSIsIiRxIixmdW5jdGlvbigkcm9vdFNjb3BlLCRxKXskcm9vdFNjb3BlLmxvYWRpbmc9ITE7dmFyIGxvYWRpbmc9W107cmV0dXJue3N0YXJ0OmZ1bmN0aW9uKHJlc3Ape3ZhciBkZWZlcnJlZD0kcS5kZWZlcigpLHByb21pc2U9ZGVmZXJyZWQucHJvbWlzZTtyZXR1cm4gcHJvbWlzZS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIDA9PWxvYWRpbmcubGVuZ3RoJiYoJHJvb3RTY29wZS5sb2FkaW5nPSEwKSxsb2FkaW5nLnB1c2goIiIpLHJlc3B9KSxkZWZlcnJlZC5yZXNvbHZlKCkscHJvbWlzZX0sc3RvcDpmdW5jdGlvbihyZXNwKXtyZXR1cm4gbG9hZGluZy5sZW5ndGg+MCYmKGxvYWRpbmcucG9wKCksMD09bG9hZGluZy5sZW5ndGgmJigkcm9vdFNjb3BlLmxvYWRpbmc9ITEpKSxyZXNwfX19XSksYW5ndWxhci5tb2R1bGUoImJpZ21ldHJpY3MiKS5ydW4oWyIkdGVtcGxhdGVDYWNoZSIsZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpeyR0ZW1wbGF0ZUNhY2hlLnB1dCgiL3N0YXRpYy90ZW1wbGF0ZXMvYnJvd3NlLmh0bWwiLCc8ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1zdWNjZXNzIj48ZGl2IGNsYXNzPSJwYW5lbC1oZWFkaW5nIj5Dcml0ZXJpYTwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxmb3JtIG5nLXN1Ym1pdD0icnVuUXVlcnkoKSIgY2xhc3M9ImZvcm0taG9yaXpvbnRhbCI+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+PGxhYmVsIGNsYXNzPSJjb250cm9sLWxhYmVsIGNvbC1zbS0xIj5TZWxlY3Q8L2xhYmVsPjxkaXYgY2xhc3M9ImZvcm0tY29udHJvbHMgY29sLXNtLTExIj48b2ktbXVsdGlzZWxlY3QgbXVsdGlwbGU9Im11bHRpcGxlIiBuZy1vcHRpb25zPSJmaWVsZC5uYW1lIGZvciBmaWVsZCBpbiBldmVudEZpZWxkcyIgbmctbW9kZWw9InF1ZXJ5Q29sdW1ucyIgcGxhY2Vob2xkZXI9IioiPjwvb2ktbXVsdGlzZWxlY3Q+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCIgbmctcmVwZWF0PSJlbGVtZW50IGluIHF1ZXJ5Ij48bGFiZWwgY2xhc3M9ImNvbnRyb2wtbGFiZWwgY29sLXNtLTEiPnt7ICRpbmRleCA/IFwnQW5kXCcgOiBcJ1doZXJlXCcgfX08L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC1zbS0zIj48c2VsZWN0IG5nLW1vZGVsPSJlbGVtZW50Lm5hbWUiIG5nLW9wdGlvbnM9ImZpZWxkLm5hbWUgYXMgZmllbGQubmFtZSBmb3IgZmllbGQgaW4gZXZlbnRGaWVsZHMiIGNsYXNzPSJmb3JtLWNvbnRyb2wiPjwvc2VsZWN0PjwvZGl2PjxkaXYgY2xhc3M9ImNvbC1zbS0xIj48c2VsZWN0IG5nLW1vZGVsPSJlbGVtZW50Lm9wZXJhdGlvbiIgbmctb3B0aW9ucz0ib3BlcmF0aW9uIGZvciBvcGVyYXRpb24gaW4gb3BlcmF0aW9ucyIgbmctaW5pdD0iZWxlbWVudC5vcGVyYXRpb24gPSBlbGVtZW50Lm9wZXJhdGlvbiB8fCBcJz1cJyIgY2xhc3M9ImZvcm0tY29udHJvbCI+PC9zZWxlY3Q+PC9kaXY+PGRpdiBjbGFzcz0iZm9ybS1jb250cm9scyBjb2wtc20tNSI+PGRpdiBicS1pbnB1dCBtb2RlbD0iZWxlbWVudC5tb2RlbCIgdHlwZT0iZXZlbnRbZWxlbWVudC5uYW1lXSIgc2FtcGxlPSJzYW1wbGVzW2VsZW1lbnQubmFtZV0iPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImZvcm0tY29udHJvbHMgY29sLXNtLTIiPjxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIG5nLWNsaWNrPSJyZW1vdmVRdWVyeUVsZW1lbnQoZWxlbWVudCkiPjxpIGNsYXNzPSJmYSBmYS10aW1lcyI+PC9pPjwvYT4gPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgbmctY2xpY2s9ImFkZFF1ZXJ5RWxlbWVudCgpIiBuZy1pZj0iJGxhc3QiPjxpIGNsYXNzPSJmYSBmYS1wbHVzIj48L2k+PC9hPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPjxsYWJlbCBjbGFzcz0iY29udHJvbC1sYWJlbCBjb2wtc20tMSIgZm9yPSJsaW1pdCI+TGltaXQ8L2xhYmVsPjxkaXYgY2xhc3M9ImZvcm0tY29udHJvbHMgY29sLXNtLTIiPjxpbnB1dCBpZD0ibGltaXQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9Im51bWJlciIgbmctbW9kZWw9ImxpbWl0IiBtaW49IjEiPjwvZGl2PjxsYWJlbCBmb3I9InBhZ2VTaXplIiBjbGFzcz0iY29udHJvbC1sYWJlbCBjb2wtc20tMiI+UGFnZSBzaXplPC9sYWJlbD48ZGl2IGNsYXNzPSJmb3JtLWNvbnRyb2xzIGNvbC1zbS0yIj48aW5wdXQgaWQ9InBhZ2VTaXplIiBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJ0ZXh0IiBuZy1tb2RlbD0icGFnZVNpemUiIHR5cGVhaGVhZD0icCBmb3IgcCBpbiBwYWdlU2l6ZXMiPjwvZGl2PjwvZGl2PjwvZm9ybT48L2Rpdj48L2Rpdj48ZGl2IGJpZ21ldHJpY3MtcXVlcnk9InF1ZXJ5U3RyaW5nIiB0aXRsZT0iZXZlbnROYW1lIiBvbi1ydW49InJ1blF1ZXJ5KCkiIG9uLXNhdmU9InNhdmVRdWVyeSgpIj48L2Rpdj48ZGl2IGJpZ21ldHJpY3MtcXVlcnktcmVzdWx0PSJyZXN1bHQiIHF1ZXJ5LXN0cmluZz0icXVlcnlTdHJpbmciIGpvYi1pZD0iam9iSWQiIGV2ZW50PSJldmVudE5hbWUiIG9uLXNhdmU9InNhdmVRdWVyeSgpIj48L2Rpdj4nKSwkdGVtcGxhdGVDYWNoZS5wdXQoIi9zdGF0aWMvdGVtcGxhdGVzL2Rhc2hib2FyZC5odG1sIiwnPGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+RGFzaGJvYXJkPC9kaXY+PGRpdiBjbGFzcz0icGFuZWwtYm9keSI+PGRpdiBjbGFzcz0ibGlzdC1ncm91cCI+PGEgdWktc3JlZj0iZXZlbnQiIGNsYXNzPSJsaXN0LWdyb3VwLWl0ZW0iPjxoMT48aSBjbGFzcz0iZmEgZmEtdGFibGUgZmEtZnciPjwvaT4gRXZlbnRzPC9oMT48L2E+PC9kaXY+PGRpdiBjbGFzcz0ibGlzdC1ncm91cCI+PGEgdWktc3JlZj0icmVwb3J0IiBjbGFzcz0ibGlzdC1ncm91cC1pdGVtIj48aDE+PGkgY2xhc3M9ImZhIGZhLWJhci1jaGFydC1vIGZhLWZ3Ij48L2k+IFJlcG9ydHM8L2gxPjwvYT48L2Rpdj48L2Rpdj48L2Rpdj4nKSwkdGVtcGxhdGVDYWNoZS5wdXQoIi9zdGF0aWMvdGVtcGxhdGVzL2RpcmVjdGl2ZS9iaWdtZXRyaWNzUXVlcnkuaHRtbCIsJzxkaXYgY2xhc3M9ImJpZ21ldHJpY3MtcXVlcnkgcGFuZWwgcGFuZWwtcHJpbWFyeSI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+e3sgdGl0bGUgfX08ZGl2IGNsYXNzPSJhY3Rpb25zIj48YnV0dG9uIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1wcmltYXJ5IiBuZy1pZj0ib25TYXZlICE9IHVuZGVmaW5lZCIgbmctY2xpY2s9Im9uU2F2ZSgpIj48aSBjbGFzcz0iZmEgZmEtc3Rhci1vIj48L2k+PC9idXR0b24+IDxidXR0b24gY2xhc3M9ImJ0biBidG4tc20gYnRuLXN1Y2Nlc3MiIG5nLWlmPSJvblJ1biAhPSB1bmRlZmluZWQiIG5nLWNsaWNrPSJvblJ1bigpIj48aSBjbGFzcz0iZmEgZmEtcGxheSI+PC9pPjwvYnV0dG9uPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxwIGNsYXNzPSJ0ZXh0LWluZm8iPnt7IHF1ZXJ5IH19PC9wPjwvZGl2PjwvZGl2PicpLCR0ZW1wbGF0ZUNhY2hlLnB1dCgiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JpZ21ldHJpY3NRdWVyeVJlc3VsdC5odG1sIiwnPGRpdiBjbGFzcz0iYmlnbWV0cmljcy1xdWVyeS1yZXN1bHQgcGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+PGRpdiBjbGFzcz0iYnRuLWdyb3VwIiBkYXRhLXRvZ2dsZT0iYnV0dG9ucyI+PGxhYmVsIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIG5nLWNsYXNzPSJ7YWN0aXZlOiBkaXNwbGF5ID09IFwndGFibGVcJ30iPjxpbnB1dCB0eXBlPSJyYWRpbyIgbmctbW9kZWw9ImRpc3BsYXkiIHZhbHVlPSJ0YWJsZSI+IDxpIGNsYXNzPSJmYSBmYS10YWJsZSI+PC9pPjwvbGFiZWw+PGxhYmVsIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIG5nLWNsYXNzPSJ7YWN0aXZlOiBkaXNwbGF5ID09IFwnZ3JhcGhcJ30iPjxpbnB1dCB0eXBlPSJyYWRpbyIgbmctbW9kZWw9ImRpc3BsYXkiIHZhbHVlPSJncmFwaCI+IDxpIGNsYXNzPSJmYSBmYS1hcmVhLWNoYXJ0Ij48L2k+PC9sYWJlbD48L2Rpdj5SZXN1bHRzPGRpdiBjbGFzcz0iYWN0aW9ucyI+PGRpdiBjbGFzcz0iZm9ybS1jb250cm9scyI+PGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tcHJpbWFyeSIgdHlwZT0iYnV0dG9uIiBuZy1jbGljaz0ib25TYXZlKCkiIG5nLWRpc2FibGVkPSIhcXVlcnlSZXN1bHQgfHwgIW9uU2F2ZSI+PGkgY2xhc3M9ImZhIGZhLXN0YXItbyI+PC9pPjwvYnV0dG9uPiA8YnV0dG9uIGlkPSJkb3dubG9hZC1idXR0b24iIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc20gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJleHBvcnQoKSIgbmctaWY9IiFkb3dubG9hZExpbmsiIG5nLWRpc2FibGVkPSIhcXVlcnlSZXN1bHQiPjxpIGNsYXNzPSJmYSBmYS1jbG91ZC1kb3dubG9hZCI+PC9pPjwvYnV0dG9uPiA8YSB0YXJnZXQ9Il9ibGFuayIgbmctaHJlZj0ie3tkb3dubG9hZExpbmt9fSIgbmctaWY9ImRvd25sb2FkTGluayI+PGkgY2xhc3M9ImZhIGZhLWNsb3VkLWRvd25sb2FkIj48L2k+IERvd25sb2FkIENTVjwvYT48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbC1ib2R5IiBzdHlsZT0ib3ZlcmZsb3c6IGF1dG8iPjxkaXYgbGluZS1jaGFydD0icXVlcnlSZXN1bHQiIG5nLWlmPSJkaXNwbGF5ID09IFwnZ3JhcGhcJyI+PC9kaXY+PGRpdiByZXN1bHQtdGFibGU9InF1ZXJ5UmVzdWx0IiBuZy1pZj0iZGlzcGxheSA9PSBcJ3RhYmxlXCciPjwvZGl2PjwvZGl2PjwvZGl2PicpLCR0ZW1wbGF0ZUNhY2hlLnB1dCgiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JpZ21ldHJpY3NTYXZlUmVwb3J0Lmh0bWwiLCc8Zm9ybSByb2xlPSJmb3JtIiBuYW1lPSJmb3JtIiBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiBuZy1zdWJtaXQ9ImZvcm0uJHZhbGlkICYmIHNhdmUoKSI+PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj48aDMgY2xhc3M9Im1vZGFsLXRpdGxlIj5TYXZlIHJlcG9ydDwvaDM+PC9kaXY+PGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+PGxhYmVsIGZvcj0icmVwb3J0TmFtZSIgY2xhc3M9ImNvbnRyb2wtbGFiZWwgY29sLXNtLTIgPSI+UmVwb3J0IG5hbWU8L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC1zbS0xMCI+PGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLWNsYXNzPSJ7fSIgaWQ9InJlcG9ydE5hbWUiIG5hbWU9InJlcG9ydE5hbWUiIHBsYWNlaG9sZGVyPSJQcm92aWRlIGEgZGVzY3JpcHRpdmUgbmFtZSBmb3IgeW91ciByZXBvcnQiIG5nLW1vZGVsPSJtb2RlbC5yZXBvcnROYW1lIiByZXF1aXJlZD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPjxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5TYXZlPC9idXR0b24+IDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBuZy1jbGljaz0iJGRpc21pc3MoKSI+Q2FuY2VsPC9idXR0b24+PC9kaXY+PC9mb3JtPicpLCR0ZW1wbGF0ZUNhY2hlLnB1dCgiL3N0YXRpYy90ZW1wbGF0ZXMvZGlyZWN0aXZlL2JxLWlucHV0Lmh0bWwiLCc8ZGl2IG5nLXN3aXRjaCBvbj0idHlwZSI+PGlucHV0IG5nLXN3aXRjaC13aGVuPSJTdHJpbmciIHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJtb2RlbC52YWx1ZSIgdHlwZWFoZWFkPSJvcHRpb24gZm9yIG9wdGlvbiBpbiBzYW1wbGUgfCBmaWx0ZXI6IFwnISFcJyB8IGZpbHRlcjokdmlld1ZhbHVlOnN0YXJ0c1dpdGgiPiAgPGlucHV0IG5nLXN3aXRjaC13aGVuPSJCb29sZWFuIiB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0ibW9kZWwudmFsdWUiIHR5cGVhaGVhZD0ib3B0aW9uIGZvciBvcHRpb24gaW4gWyBcJ3RydWVcJywgXCdmYWxzZVwnIF0iPiA8aW5wdXQgbmctc3dpdGNoLXdoZW49IkludGVnZXIiIHR5cGU9Im51bWJlciIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmctbW9kZWw9Im1vZGVsLnZhbHVlIj4gPGlucHV0IG5nLXN3aXRjaC13aGVuPSJGbG9hdCIgdHlwZT0ibnVtYmVyIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0ibW9kZWwudmFsdWUiPjxkaXYgY2xhc3M9ImRyb3Bkb3duIiBuZy1zd2l0Y2gtd2hlbj0iVGltZXN0YW1wIj48YSBjbGFzcz0iZHJvcGRvd24tdG9nZ2xlIG15LXRvZ2dsZS1zZWxlY3QiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgZGF0YS10YXJnZXQ9IiMiIGhyZWY9IiI+PGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPjxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC1hZGRvbiI+PGkgY2xhc3M9ImZhIGZhLWNhbGVuZGFyIj48L2k+PC9zcGFuPiA8aW5wdXQgZGF0ZXRpbWUgdGltZXpvbmU9InRpbWV6b25lIiB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0ibW9kZWwudmFsdWUiPjwvZGl2PjwvYT48dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiIHJvbGU9Im1lbnUiPjxkYXRldGltZXBpY2tlciBuZy1tb2RlbD0ibW9kZWwudmFsdWUiIGRhdGEtZGF0ZXRpbWVwaWNrZXItY29uZmlnPSJ7IGRyb3Bkb3duU2VsZWN0b3I6IFwnLm15LXRvZ2dsZS1zZWxlY3RcJyB9Ij48L2RhdGV0aW1lcGlja2VyPjwvdWw+PC9kaXY+PGlucHV0IG5nLXN3aXRjaC1kZWZhdWx0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJtb2RlbC52YWx1ZSI+PC9kaXY+JyksJHRlbXBsYXRlQ2FjaGUucHV0KCIvc3RhdGljL3RlbXBsYXRlcy9kaXJlY3RpdmUvbGluZS1jaGFydC5odG1sIiwnPGRpdiBjbGFzcz0ibGluZS1jaGFydCI+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tMyI+PG9pLW11bHRpc2VsZWN0IG5nLW9wdGlvbnM9ImZpZWxkIGZvciBmaWVsZCBpbiBjb2x1bW5zIiBuZy1tb2RlbD0ieCIgcGxhY2Vob2xkZXI9InggYXhpcyI+PC9vaS1tdWx0aXNlbGVjdD48L2Rpdj48ZGl2IGNsYXNzPSJjb2wtc20tOSI+PG9pLW11bHRpc2VsZWN0IG11bHRpcGxlPSJtdWx0aXBsZSIgbmctb3B0aW9ucz0iZmllbGQgZm9yIGZpZWxkIGluIGNvbHVtbnMiIG5nLW1vZGVsPSJ5IiBwbGFjZWhvbGRlcj0iZGF0YSBzZXJpZXMiPjwvb2ktbXVsdGlzZWxlY3Q+PC9kaXY+PC9kaXY+PGZsb3QgZGF0YXNldD0iZGF0YSIgb3B0aW9ucz0ib3B0aW9ucyIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMzAwcHgiIG5nLWlmPSJkYXRhIj48L2Zsb3Q+PC9kaXY+JyksJHRlbXBsYXRlQ2FjaGUucHV0KCIvc3RhdGljL3RlbXBsYXRlcy9kaXJlY3RpdmUvcmVzdWx0LXRhYmxlLmh0bWwiLCc8cCBjbGFzcz0idGV4dC1tdXRlZCIgbmctaWY9InF1ZXJ5UmVzdWx0LmRhdGEubGVuZ3RoID09IDAiPk5vIHJlc3VsdHM8L3A+PGRpdiBuZy1pZj0icXVlcnlSZXN1bHQuZGF0YS5sZW5ndGggPiAwIj48cCBjbGFzcz0idGV4dC1tdXRlZCI+U2hvd2luZyB7eyBxdWVyeVJlc3VsdC5jb3VudCB9fSBvZiB7eyBxdWVyeVJlc3VsdC50b3RhbFJvd3MgfX0gcmVzdWx0czwvcD48dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLWNvbmRlbnNlZCB0YWJsZS1yZXNwb25zaXZlIHRhYmxlLXN0cmlwZWQiPjx0aGVhZD48dHI+PHRoIG5nLXJlcGVhdD0iZmllbGQgaW4gcXVlcnlSZXN1bHQuc2NoZW1hIj57e2ZpZWxkfX08L3RoPjwvdHI+PC90aGVhZD48dGJvZHk+PHRyIG5nLXJlcGVhdD0icm93IGluIHF1ZXJ5UmVzdWx0LmRhdGEiPjx0ZCBuZy1yZXBlYXQ9ImNvbHVtbiBpbiByb3cgdHJhY2sgYnkgJGluZGV4IiBuZy1jbGFzcz0ie251bGw6IGNvbHVtbiA9PSBudWxsfSI+e3tjb2x1bW59fTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PGRpdiBuZy1pZj0icXVlcnlSZXN1bHQudG90YWxSb3dzID4gcXVlcnlSZXN1bHQuZGF0YS5sZW5ndGgiPjxwIGNsYXNzPSJ0ZXh0LW11dGVkIj5SZXN1bHRzIHRydW5jYXRlZCwge3txdWVyeVJlc3VsdC50b3RhbFJvd3N9fSByb3dzIGF2YWlsYWJsZS48L3A+PC9kaXY+PC9kaXY+JyksJHRlbXBsYXRlQ2FjaGUucHV0KCIvc3RhdGljL3RlbXBsYXRlcy9ldmVudHMuaHRtbCIsJzxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQiPjxkaXYgY2xhc3M9InBhbmVsLWhlYWRpbmciPkV2ZW50czwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxkaXYgY2xhc3M9Imxpc3QtZ3JvdXAiPjxhIGhyZWY9IiIgdWktc3JlZj0iZXZlbnQudmlldyh7ZXZlbnQ6IG5hbWV9KSIgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSIgbmctcmVwZWF0PSIobmFtZSwgZXZlbnQpIGluIGV2ZW50cyI+PGg0PjxzdHJvbmc+e3sgbmFtZSB9fTwvc3Ryb25nPjwvaDQ+PHA+RmllbGRzOiA8c3BhbiBzdHlsZT0iZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW46IDJweCIgY2xhc3M9ImxhYmVsIGxhYmVsLWRlZmF1bHQiIG5nLXJlcGVhdD0iKG5hbWUsIHZhbHVlKSBpbiBldmVudCI+e3sgbmFtZSB9fSA6IHt7IHZhbHVlIH19PC9zcGFuPjwvcD48L2E+PC9kaXY+PC9kaXY+PC9kaXY+JyksJHRlbXBsYXRlQ2FjaGUucHV0KCIvc3RhdGljL3RlbXBsYXRlcy9xdWVyeS5odG1sIiwnPGRpdiBpZD0ibG9hZGluZyIgbmctc2hvdz0ibG9hZGluZyI+PGltZyBuZy1zcmM9Ii9zdGF0aWMvaW1hZ2VzL2xvYWRpbmcuZ2lmIj48L2Rpdj48Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIiBpZD0icXVlcnktZm9ybSIgbmctc3VibWl0PSJzdWJtaXQoKSIgbmctY2xvYWs+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGNsYXNzPSJjb2wtc20tNiI+PGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+VGVtcGxhdGU8L2Rpdj48ZGl2IGNsYXNzPSJwYW5lbC1ib2R5Ij48cHJlIGNsYXNzPSJ0ZXh0LWRhbmdlciI+e3t0ZW1wbGF0ZX19PC9wcmU+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQiPjxkaXYgY2xhc3M9InBhbmVsLWhlYWRpbmciPlBsYWNlaG9sZGVyczwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiIG5nLXJlcGVhdD0icGxhY2Vob2xkZXIgaW4gcGxhY2Vob2xkZXJzIj48bGFiZWwgZm9yPSJ7e3BsYWNlaG9sZGVyfX0iIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIj57e3BsYWNlaG9sZGVyfX08L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC1zbS0xMCI+PGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJ7e3BsYWNlaG9sZGVyfX0iIG5nLW1vZGVsPSJtb2RlbFtwbGFjZWhvbGRlcl0iPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InJvdyI+PGRpdiBjbGFzcz0iY29sLXNtLTEyIj48ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1zdWNjZXNzIj48ZGl2IGNsYXNzPSJwYW5lbC1oZWFkaW5nIj5RdWVyeTwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxwcmU+e3txdWVyeX19PC9wcmU+PC9kaXY+PGRpdiBjbGFzcz0icGFuZWwtZm9vdGVyIj48YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyI+PGkgY2xhc3M9ImZhIGZhLXBsYXkiPjwvaT4gUnVuPC9idXR0b24+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0icm93IiBuZy1zaG93PSJxdWVyeVJlc3VsdCI+PGRpdiBjbGFzcz0iY29sLXNtLTEyIj48ZGl2IGlkPSJyZXN1bHRzLXBhbmVsIiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+UmVzdWx0czwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxwIGNsYXNzPSJ0ZXh0LW11dGVkIiBuZy1pZj0icXVlcnlSZXN1bHQuZGF0YS5sZW5ndGggPT0gMCI+Tm8gcmVzdWx0czwvcD48ZGl2IG5nLWlmPSJxdWVyeVJlc3VsdC5kYXRhLmxlbmd0aCA+IDAiPjx0YWJsZSBjbGFzcz0idGFibGUgdGFibGUtY29uZGVuc2VkIj48dGhlYWQ+PHRyPjx0aCBuZy1yZXBlYXQ9ImZpZWxkIGluIHF1ZXJ5UmVzdWx0LnNjaGVtYSI+e3tmaWVsZH19PC90aD48L3RyPjwvdGhlYWQ+PHRib2R5Pjx0ciBuZy1yZXBlYXQ9InJvdyBpbiBxdWVyeVJlc3VsdC5kYXRhIj48dGQgbmctcmVwZWF0PSJjb2x1bW4gaW4gcm93IHRyYWNrIGJ5ICRpbmRleCI+e3tjb2x1bW59fTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PGRpdiBuZy1pZj0icXVlcnlSZXN1bHQudG90YWxSb3dzID4gcXVlcnlSZXN1bHQuZGF0YS5sZW5ndGgiPjxwIGNsYXNzPSJ0ZXh0LW11dGVkIj5SZXN1bHRzIHRydW5jYXRlZCwge3txdWVyeVJlc3VsdC50b3RhbFJvd3N9fSByb3dzIGF2YWlsYWJsZS48L3A+PC9kaXY+PGRpdj48ZGl2IG5nLWlmPSIhZG93bmxvYWRMaW5rIj48YnV0dG9uIGlkPSJkb3dubG9hZC1idXR0b24iIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgbmctY2xpY2s9ImV4cG9ydCgpIj48aSBjbGFzcz0iZmEgZmEtZXh0ZXJuYWwtbGluayI+PC9pPiBFeHBvcnQgYXMgQ1NWPC9idXR0b24+PC9kaXY+PGRpdiBuZy1pZj0iZG93bmxvYWRMaW5rIj48YSBuZy1ocmVmPSJ7e2Rvd25sb2FkTGlua319IiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhIGZhLWNsb3VkLWRvd25sb2FkIj48L2k+IERvd25sb2FkIENTVjwvYT48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Zvcm0+JyksJHRlbXBsYXRlQ2FjaGUucHV0KCIvc3RhdGljL3RlbXBsYXRlcy9yZXBvcnQuaHRtbCIsJzxmb3JtIGNsYXNzPSJmb3JtLWhvcml6b250YWwiIHJvbGU9ImZvcm0iIGlkPSJxdWVyeS1mb3JtIiBuZy1zdWJtaXQ9InN1Ym1pdCgpIiBuZy1jbG9hayBuZy1pZj0icGxhY2Vob2xkZXJzIj48ZGl2IGNsYXNzPSJyb3ciPjxkaXYgY2xhc3M9ImNvbC1zbS0xMiI+PGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+e3tyZXBvcnQubmFtZX19PC9kaXY+PGRpdiBjbGFzcz0icGFuZWwtYm9keSI+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCIgbmctcmVwZWF0PSJwbGFjZWhvbGRlciBpbiBwbGFjZWhvbGRlcnMiPjxsYWJlbCBmb3I9Int7cGxhY2Vob2xkZXJ9fSIgY2xhc3M9ImNvbC1zbS00IGNvbnRyb2wtbGFiZWwiPnt7cGxhY2Vob2xkZXJ9fTwvbGFiZWw+PGRpdiBjbGFzcz0iY29sLXNtLTYiPjxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0ie3twbGFjZWhvbGRlcn19IiBuZy1tb2RlbD0ibW9kZWxbcGxhY2Vob2xkZXJdIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Zvcm0+PGRpdiBiaWdtZXRyaWNzLXF1ZXJ5PSJxdWVyeSIgdGl0bGU9InJlcG9ydC5uYW1lIiBvbi1ydW49InJ1blF1ZXJ5KCkiIG9uLXNhdmU9InNhdmVRdWVyeSgpIj48L2Rpdj48ZGl2IGJpZ21ldHJpY3MtcXVlcnktcmVzdWx0PSJxdWVyeVJlc3VsdCIgcXVlcnktc3RyaW5nPSJxdWVyeSIgZXZlbnQ9InJlcG9ydC5ldmVudCIgb24tc2F2ZT0ic2F2ZVF1ZXJ5KCkiPjwvZGl2PicpLCR0ZW1wbGF0ZUNhY2hlLnB1dCgiL3N0YXRpYy90ZW1wbGF0ZXMvcmVwb3J0cy5odG1sIiwnPGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+PGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyI+UmVwb3J0czwvZGl2PjxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPjxkaXYgY2xhc3M9Imxpc3QtZ3JvdXAiPjxhIHVpLXNyZWY9InJlcG9ydC52aWV3KHtyZXBvcnRJZDogaWR9KSIgY2xhc3M9Imxpc3QtZ3JvdXAtaXRlbSIgbmctcmVwZWF0PSIoaWQsIHJlcG9ydCkgaW4gcmVwb3J0cyI+PHA+PHN0cm9uZz57eyByZXBvcnQubmFtZSB9fTwvc3Ryb25nPjwvcD48cCBjbGFzcz0idGV4dC1tdXRlZCI+e3sgcmVwb3J0LnRlbXBsYXRlIH19PC9wPjwvYT48L2Rpdj48L2Rpdj48L2Rpdj4nKSwkdGVtcGxhdGVDYWNoZS5wdXQoIi9zdGF0aWMvdGVtcGxhdGVzL3R5cGVhaGVhZC90eXBlYWhlYWQtbWF0Y2guaHRtbCIsJzxhIHRhYmluZGV4PSItMSIgYmluZC1odG1sLXVuc2FmZT0ibWF0Y2gubGFiZWwgfCB0eXBlYWhlYWRIaWdobGlnaHQ6cXVlcnkiPjwvYT4nKSwkdGVtcGxhdGVDYWNoZS5wdXQoIi9zdGF0aWMvdGVtcGxhdGVzL3R5cGVhaGVhZC90eXBlYWhlYWQtcG9wdXAuaHRtbCIsJzx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSIgbmctaWY9ImlzT3BlbigpIiBuZy1zdHlsZT0ie3RvcDogcG9zaXRpb24udG9wK1wncHhcJywgbGVmdDogcG9zaXRpb24ubGVmdCtcJ3B4XCd9IiBzdHlsZT0iZGlzcGxheTogYmxvY2siIHJvbGU9Imxpc3Rib3giPjxsaSBuZy1yZXBlYXQ9Im1hdGNoIGluIG1hdGNoZXMgdHJhY2sgYnkgJGluZGV4IiBuZy1jbGFzcz0ie2FjdGl2ZTogaXNBY3RpdmUoJGluZGV4KSB9IiBuZy1tb3VzZWVudGVyPSJzZWxlY3RBY3RpdmUoJGluZGV4KSIgbmctY2xpY2s9InNlbGVjdE1hdGNoKCRpbmRleCkiIHJvbGU9Im9wdGlvbiI+PGRpdiB0eXBlYWhlYWQtbWF0Y2ggaW5kZXg9IiRpbmRleCIgbWF0Y2g9Im1hdGNoIiBxdWVyeT0icXVlcnkiIHRlbXBsYXRlLXVybD0idGVtcGxhdGVVcmwiPjwvZGl2PjwvbGk+PC91bD4nKX1dKTs=",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sat, 08 Nov 2014 20:05:43 GMT",
                    "Content-Length": "775553",
                    "Date": "Sat, 08 Nov 2014 20:05:44 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}