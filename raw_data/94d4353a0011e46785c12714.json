{
    "url": "http://localhost:9999/RaYell/openui5-custom/test/openui5-runtime/resources/sap-ui-core-all.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>location.pathname</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>i[0].href=v||location.pathname;</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/RaYell/openui5-custom/test/openui5-runtime/resources/sap-ui-core-all.js",
                "path": "/RaYell/openui5-custom/test/openui5-runtime/resources/sap-ui-core-all.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9SYVllbGwvb3BlbnVpNS1jdXN0b20vdGVzdC9vcGVudWk1LXJ1bnRpbWUvcmVzb3VyY2VzL3NhcC11aS1jb3JlLWFsbC5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogOTIyMTM3DQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBGcmksIDA3IE5vdiAyMDE0IDIxOjI2OjIzIEdNVA0KTGFzdC1Nb2RpZmllZDogRnJpLCAwNyBOb3YgMjAxNCAyMToyNjoxNCBHTVQNCg0Kd2luZG93WyJzYXAtdWktb3B0aW1pemVkIl0gPSB0cnVlOwp0cnkgewovKiEKICogU0FQIFVJIGRldmVsb3BtZW50IHRvb2xraXQgZm9yIEhUTUw1IChTQVBVSTUvT3BlblVJNSkKICogKGMpIENvcHlyaWdodCAyMDA5LTIwMTQgU0FQIEFHIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgLSBzZWUgTElDRU5TRS50eHQuCiAqLw0KaWYod2luZG93LmpRdWVyeSYmd2luZG93LmpRdWVyeS5zYXAmJndpbmRvdy5qUXVlcnkuc2FwLmRlY2xhcmUpe3dpbmRvdy5qUXVlcnkuc2FwLmRlY2xhcmUoInNhcC51aS5EZXZpY2UiLGZhbHNlKX1pZih0eXBlb2Ygd2luZG93LnNhcCE9PSJvYmplY3QiJiZ0eXBlb2Ygd2luZG93LnNhcCE9PSJmdW5jdGlvbiIpe3dpbmRvdy5zYXA9e319aWYodHlwZW9mIHdpbmRvdy5zYXAudWkhPT0ib2JqZWN0Iil7d2luZG93LnNhcC51aT17fX0oZnVuY3Rpb24oKXtpZih0eXBlb2Ygd2luZG93LnNhcC51aS5EZXZpY2U9PT0ib2JqZWN0Inx8dHlwZW9mIHdpbmRvdy5zYXAudWkuRGV2aWNlPT09ImZ1bmN0aW9uIil7dmFyIGM9IjEuMjAuNCI7d2luZG93LnNhcC51aS5EZXZpY2UuX2NoZWNrQVBJVmVyc2lvbihjKTtyZXR1cm59dmFyIGQ9e307ZnVuY3Rpb24gcChpLHcpe3JldHVybigiMDAwIitTdHJpbmcoaSkpLnNsaWNlKC13KX12YXIgRj0wLEU9MSxXPTIsST0zLEQ9NCxUPTU7dmFyIGc9ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRDb21wb25lbnQ9J0RFVklDRSc7dGhpcy5zV2luZG93TmFtZT0od2luZG93LnRvcD09d2luZG93KT8iIjoiWyIrd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KCcvJykuc2xpY2UoLTEpWzBdKyJdICI7dGhpcy5sb2c9ZnVuY3Rpb24oaSxzLGEpe2E9YXx8dGhpcy5kZWZhdWx0Q29tcG9uZW50fHwnJzt2YXIgYj1uZXcgRGF0ZSgpLGU9e3RpbWU6cChiLmdldEhvdXJzKCksMikrIjoiK3AoYi5nZXRNaW51dGVzKCksMikrIjoiK3AoYi5nZXRTZWNvbmRzKCksMiksZGF0ZTpwKGIuZ2V0RnVsbFllYXIoKSw0KSsiLSIrcChiLmdldE1vbnRoKCkrMSwyKSsiLSIrcChiLmdldERhdGUoKSwyKSx0aW1lc3RhbXA6Yi5nZXRUaW1lKCksbGV2ZWw6aSxtZXNzYWdlOnN8fCIiLGNvbXBvbmVudDphfHwiIn07aWYod2luZG93LmNvbnNvbGUpe3ZhciBmPWUuZGF0ZSsiICIrZS50aW1lKyIgIit0aGlzLnNXaW5kb3dOYW1lK2UubWVzc2FnZSsiIC0gIitlLmNvbXBvbmVudDtzd2l0Y2goaSl7Y2FzZSBGOmNhc2UgRTpjb25zb2xlLmVycm9yKGYpO2JyZWFrO2Nhc2UgVzpjb25zb2xlLndhcm4oZik7YnJlYWs7Y2FzZSBJOmNvbnNvbGUuaW5mbz9jb25zb2xlLmluZm8oZik6Y29uc29sZS5sb2coZik7YnJlYWs7Y2FzZSBEOmNvbnNvbGUuZGVidWc/Y29uc29sZS5kZWJ1ZyhmKTpjb25zb2xlLmxvZyhmKTticmVhaztjYXNlIFQ6Y29uc29sZS50cmFjZT9jb25zb2xlLnRyYWNlKGYpOmNvbnNvbGUubG9nKGYpO2JyZWFrfX1yZXR1cm4gZX19O3ZhciBsPW5ldyBnKCk7bC5sb2coSSwiRGV2aWNlIEFQSSBsb2dnaW5nIGluaXRpYWxpemVkIik7ZC5fY2hlY2tBUElWZXJzaW9uPWZ1bmN0aW9uKHMpe3ZhciB2PSIxLjIwLjQiO2lmKHYhPXMpe2wubG9nKFcsIkRldmljZSBBUEkgdmVyc2lvbiBkaWZmZXJzOiAiK3YrIiA8LT4gIitzKX19O3ZhciBoPXt9O2Z1bmN0aW9uIGooZSxmLGEpe2lmKCFoW2VdKXtoW2VdPVtdfWhbZV0ucHVzaCh7b0xpc3RlbmVyOmEsZkZ1bmN0aW9uOmZ9KX07ZnVuY3Rpb24gayhlLGYsYSl7dmFyIGI9aFtlXTtpZighYil7cmV0dXJuIHRoaXN9Zm9yKHZhciBpPTAscT1iLmxlbmd0aDtpPHE7aSsrKXtpZihiW2ldLmZGdW5jdGlvbj09PWYmJmJbaV0ub0xpc3RlbmVyPT09YSl7Yi5zcGxpY2UoaSwxKTticmVha319aWYoYi5sZW5ndGg9PTApe2RlbGV0ZSBoW2VdfX07ZnVuY3Rpb24gbihlLGEpe3ZhciBiPWhbZV0sZjtpZihiKXtiPWIuc2xpY2UoKTtmb3IodmFyIGk9MCxxPWIubGVuZ3RoO2k8cTtpKyspe2Y9YltpXTtmLmZGdW5jdGlvbi5jYWxsKGYub0xpc3RlbmVyfHx3aW5kb3csYSl9fX07dmFyIE89eyJXSU5ET1dTIjoid2luIiwiTUFDSU5UT1NIIjoibWFjIiwiTElOVVgiOiJsaW51eCIsIklPUyI6ImlPUyIsIkFORFJPSUQiOiJBbmRyb2lkIiwiQkxBQ0tCRVJSWSI6ImJiIiwiV0lORE9XU19QSE9ORSI6IndpbnBob25lIn07ZnVuY3Rpb24gbyhhKXtmdW5jdGlvbiBiKCl7dmFyIHM9bmF2aWdhdG9yLnBsYXRmb3JtO2lmKHMuaW5kZXhPZigiV2luIikhPS0xKXt2YXIgdD0vd2luZG93cyBOVCA2LihcZCkvaTt2YXIgZj1hLm1hdGNoKHQpO3ZhciB2PSIiO2lmKGYpe2lmKGZbMV09PTEpe3Y9IjcifWVsc2UgaWYoZlsxXT4xKXt2PSI4In19cmV0dXJueyJuYW1lIjpPLldJTkRPV1MsInZlcnNpb25TdHIiOnZ9fWVsc2UgaWYocy5pbmRleE9mKCJNYWMiKSE9LTEpe3JldHVybnsibmFtZSI6Ty5NQUNJTlRPU0gsInZlcnNpb25TdHIiOiIifX1lbHNlIGlmKHMuaW5kZXhPZigiTGludXgiKSE9LTEpe3JldHVybnsibmFtZSI6Ty5MSU5VWCwidmVyc2lvblN0ciI6IiJ9fWwubG9nKEksIk9TIGRldGVjdGlvbiByZXR1cm5lZCBubyByZXN1bHQiKTtyZXR1cm4gbnVsbH1hPWF8fG5hdmlnYXRvci51c2VyQWdlbnQ7dmFyIGU9L1woKFthLXpBLVogXSspO1xzKD86W1VdP1s7XT8pKFtcRF0rKSgoPzpbXGQuX10qKSkoPzouKltcKV1bXlxkXSopKFtcZC5dKilccy87dmFyIGY9YS5tYXRjaChlKTtpZihmKXt2YXIgaT0vaVBob25lfGlQYWR8aVBvZC87dmFyIHE9L1BsYXlCb29rfEJsYWNrQmVycnkvO2lmKGZbMF0ubWF0Y2goaSkpe2ZbM109ZlszXS5yZXBsYWNlKC9fL2csIi4iKTtyZXR1cm4oeyJuYW1lIjpPLklPUywidmVyc2lvblN0ciI6ZlszXX0pfWVsc2UgaWYoZlsyXS5tYXRjaCgvQW5kcm9pZC8pKXtmWzJdPWZbMl0ucmVwbGFjZSgvXHMvZywiIik7cmV0dXJuKHsibmFtZSI6Ty5BTkRST0lELCJ2ZXJzaW9uU3RyIjpmWzNdfSl9ZWxzZSBpZihmWzBdLm1hdGNoKHEpKXtyZXR1cm4oeyJuYW1lIjpPLkJMQUNLQkVSUlksInZlcnNpb25TdHIiOmZbNF19KX1lbHNle3JldHVybiBiKCl9fWVsc2UgaWYoYS5pbmRleE9mKCIoQkIxMDsiKT4wKXtlPS9cc1ZlcnNpb25cLyhbXGQuXSspXHMvO2Y9YS5tYXRjaChlKTtpZihmKXtyZXR1cm57Im5hbWUiOk8uQkxBQ0tCRVJSWSwidmVyc2lvblN0ciI6ZlsxXX19ZWxzZXtyZXR1cm57Im5hbWUiOk8uQkxBQ0tCRVJSWSwidmVyc2lvblN0ciI6JzEwJ319fWVsc2V7ZT0vV2luZG93cyBQaG9uZSAoPzpPUyApPyhbXGQuXSopLztmPWEubWF0Y2goZSk7aWYoZil7cmV0dXJuKHsibmFtZSI6Ty5XSU5ET1dTX1BIT05FLCJ2ZXJzaW9uU3RyIjpmWzFdfSl9ZWxzZXtyZXR1cm4gYigpfX19O2Z1bmN0aW9uIHIoKXtkLm9zPW8oKXx8e307ZC5vcy5PUz1PO2Qub3MudmVyc2lvbj1kLm9zLnZlcnNpb25TdHI/cGFyc2VGbG9hdChkLm9zLnZlcnNpb25TdHIpOi0xO2lmKGQub3MubmFtZSl7Zm9yKHZhciBiIGluIE8pe2lmKE9bYl09PT1kLm9zLm5hbWUpe2Qub3NbYi50b0xvd2VyQ2FzZSgpXT10cnVlfX19fXIoKTt2YXIgQj17IklOVEVSTkVUX0VYUExPUkVSIjoiaWUiLCJGSVJFRk9YIjoiZmYiLCJDSFJPTUUiOiJjciIsIlNBRkFSSSI6InNmIiwiQU5EUk9JRCI6ImFuIn07dmFyIHU9bmF2aWdhdG9yLnVzZXJBZ2VudDsNCi8qIQoJICogVGFrZW4gZnJvbSBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYxLjcuMQoJICogaHR0cDovL2pxdWVyeS5jb20vCgkgKgoJICogQ29weXJpZ2h0IDIwMTEsIEpvaG4gUmVzaWcKCSAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBvciBHUEwgVmVyc2lvbiAyIGxpY2Vuc2VzLgoJICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQoJICoKCSAqIEluY2x1ZGVzIFNpenpsZS5qcwoJICogaHR0cDovL3NpenpsZWpzLmNvbS8KCSAqIENvcHlyaWdodCAyMDExLCBUaGUgRG9qbyBGb3VuZGF0aW9uCgkgKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlULCBCU0QsIGFuZCBHUEwgTGljZW5zZXMuCgkgKgoJICogRGF0ZTogTW9uIE5vdiAyMSAyMToxMTowMyAyMDExIC0wNTAwCgkgKi8NCmZ1bmN0aW9uIHkoYSl7dmFyIGI9KGF8fHUpLnRvTG93ZXJDYXNlKCk7dmFyIGU9Lyh3ZWJraXQpWyBcL10oW1x3Ll0rKS87dmFyIGY9LyhvcGVyYSkoPzouKnZlcnNpb24pP1sgXC9dKFtcdy5dKykvO3ZhciBpPS8obXNpZSkgKFtcdy5dKykvO3ZhciBxPS8odHJpZGVudClcL1tcdy5dKzsuKnJ2OihbXHcuXSspLzt2YXIgcz0vKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vO3ZhciBWPWUuZXhlYyhiKXx8Zi5leGVjKGIpfHxpLmV4ZWMoYil8fHEuZXhlYyhiKXx8Yi5pbmRleE9mKCJjb21wYXRpYmxlIik8MCYmcy5leGVjKGIpfHxbXTt2YXIgdD17YnJvd3NlcjpWWzFdfHwiIix2ZXJzaW9uOlZbMl18fCIwIn07dFt0LmJyb3dzZXJdPXRydWU7cmV0dXJuIHR9O2Z1bmN0aW9uIHooYSl7dmFyIGI9eShhKTt2YXIgZT1hfHx1O2lmKGIubW96aWxsYSl7aWYoZS5tYXRjaCgvRmlyZWZveFwvKFxkK1wuXGQrKS8pKXt2YXIgdj1wYXJzZUZsb2F0KFJlZ0V4cC4kMSk7cmV0dXJue25hbWU6Qi5GSVJFRk9YLHZlcnNpb25TdHI6IiIrdix2ZXJzaW9uOnYsbW96aWxsYTp0cnVlLG1vYmlsZTpmYWxzZX19ZWxzZXtyZXR1cm57bW9iaWxlOmkudGVzdChlKSxtb3ppbGxhOnRydWV9fX1lbHNlIGlmKGIud2Via2l0KXt2YXIgZj1lLnRvTG93ZXJDYXNlKCkubWF0Y2goL3dlYmtpdFtcL10oW1xkLl0rKS8pO2lmKGYpe3ZhciB3PWZbMV19dmFyIGk9L01vYmlsZS87aWYoZS5tYXRjaCgvQ2hyb21lXC8oXGQrXC5cZCspLlxkKy8pKXt2YXIgdj1wYXJzZUZsb2F0KFJlZ0V4cC4kMSk7cmV0dXJue25hbWU6Qi5DSFJPTUUsdmVyc2lvblN0cjoiIit2LHZlcnNpb246dixtb2JpbGU6aS50ZXN0KGUpLHdlYmtpdDp0cnVlLHdlYmtpdFZlcnNpb246d319ZWxzZSBpZihlLm1hdGNoKC9BbmRyb2lkIC4rIFZlcnNpb25cLyhcZCtcLlxkKykvKSl7dmFyIHY9cGFyc2VGbG9hdChSZWdFeHAuJDEpO3JldHVybntuYW1lOkIuQU5EUk9JRCx2ZXJzaW9uU3RyOiIiK3YsdmVyc2lvbjp2LG1vYmlsZTppLnRlc3QoZSksd2Via2l0OnRydWUsd2Via2l0VmVyc2lvbjp3fX1lbHNle3ZhciBxPS9WZXJzaW9uXC8oXGQrXC5cZCspLipTYWZhcmkvO2lmKHEudGVzdChlKSl7dmFyIHY9cGFyc2VGbG9hdChxLmV4ZWMoZSlbMV0pO3JldHVybntuYW1lOkIuU0FGQVJJLHZlcnNpb25TdHI6IiIrdix2ZXJzaW9uOnYsbW9iaWxlOmkudGVzdChlKSx3ZWJraXQ6dHJ1ZX19ZWxzZXtyZXR1cm57bW9iaWxlOmkudGVzdChlKSx3ZWJraXQ6dHJ1ZSx3ZWJraXRWZXJzaW9uOnd9fX19ZWxzZSBpZihiLm1zaWV8fGIudHJpZGVudCl7dmFyIHY7aWYoZG9jdW1lbnQuZG9jdW1lbnRNb2RlJiYhYSl7aWYoZG9jdW1lbnQuZG9jdW1lbnRNb2RlPT09Nyl7dj04LjB9ZWxzZXt2PXBhcnNlRmxvYXQoZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX19ZWxzZXt2PXBhcnNlRmxvYXQoYi52ZXJzaW9uKX1yZXR1cm57bmFtZTpCLklOVEVSTkVUX0VYUExPUkVSLHZlcnNpb25TdHI6IiIrdix2ZXJzaW9uOnYsbXNpZTp0cnVlLG1vYmlsZTpmYWxzZX19cmV0dXJue25hbWU6IiIsdmVyc2lvblN0cjoiIix2ZXJzaW9uOi0xLG1vYmlsZTpmYWxzZX19O2QuX3Rlc3RVc2VyQWdlbnQ9ejtmdW5jdGlvbiBBKCl7ZC5icm93c2VyPXooKTtkLmJyb3dzZXIuQlJPV1NFUj1CO2lmKGQuYnJvd3Nlci5uYW1lKXtmb3IodmFyIGIgaW4gQil7aWYoQltiXT09PWQuYnJvd3Nlci5uYW1lKXtkLmJyb3dzZXJbYi50b0xvd2VyQ2FzZSgpXT10cnVlfX19fUEoKTtkLnN1cHBvcnQ9e307ZC5zdXBwb3J0LnRvdWNoPSEhKCgnb250b3VjaHN0YXJ0J2luIHdpbmRvdyl8fHdpbmRvdy5Eb2N1bWVudFRvdWNoJiZkb2N1bWVudCBpbnN0YW5jZW9mIHdpbmRvdy5Eb2N1bWVudFRvdWNoKTtkLnN1cHBvcnQubWF0Y2htZWRpYT0hIXdpbmRvdy5tYXRjaE1lZGlhO3ZhciBtPWQuc3VwcG9ydC5tYXRjaG1lZGlhP3dpbmRvdy5tYXRjaE1lZGlhKCJzY3JlZW4gYW5kIChtYXgtd2lkdGg6MHB4KSIpOm51bGw7ZC5zdXBwb3J0Lm1hdGNobWVkaWFsaXN0ZW5lcj0hIShtJiZtLmFkZExpc3RlbmVyKTtpZihkLmJyb3dzZXIuc2FmYXJpJiZkLmJyb3dzZXIudmVyc2lvbjw2KXtkLnN1cHBvcnQubWF0Y2htZWRpYWxpc3RlbmVyPWZhbHNlfWQuc3VwcG9ydC5vcmllbnRhdGlvbj0hISgib3JpZW50YXRpb24iaW4gd2luZG93JiYib25vcmllbnRhdGlvbmNoYW5nZSJpbiB3aW5kb3cpO2Quc3VwcG9ydC5yZXRpbmE9KHdpbmRvdy5yZXRpbmF8fHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvPj0yKTtkLnN1cHBvcnQud2Vic29ja2V0PSgnV2ViU29ja2V0J2luIHdpbmRvdyk7ZC5zdXBwb3J0LmlucHV0PXt9O2Quc3VwcG9ydC5pbnB1dC5wbGFjZWhvbGRlcj0oJ3BsYWNlaG9sZGVyJ2luIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0IikpO2QubWVkaWE9e307dmFyIFI9eyJTQVBfM1NURVBTIjoiM1N0ZXAiLCJTQVBfNFNURVBTIjoiNFN0ZXAiLCJTQVBfNlNURVBTIjoiNlN0ZXAiLCJTQVBfU1RBTkRBUkQiOiJTdGQifTtkLm1lZGlhLlJBTkdFU0VUUz1SO2QubWVkaWEuX3ByZWRlZmluZWRSYW5nZVNldHM9e307ZC5tZWRpYS5fcHJlZGVmaW5lZFJhbmdlU2V0c1tSLlNBUF8zU1RFUFNdPXtwb2ludHM6WzUyMCw5NjBdLHVuaXQ6InB4IixuYW1lOlIuU0FQXzNTVEVQUyxuYW1lczpbIlMiLCJNIiwiTCJdfTtkLm1lZGlhLl9wcmVkZWZpbmVkUmFuZ2VTZXRzW1IuU0FQXzRTVEVQU109e3BvaW50czpbNTIwLDc2MCw5NjBdLHVuaXQ6InB4IixuYW1lOlIuU0FQXzRTVEVQUyxuYW1lczpbIlMiLCJNIiwiTCIsIlhMIl19O2QubWVkaWEuX3ByZWRlZmluZWRSYW5nZVNldHNbUi5TQVBfNlNURVBTXT17cG9pbnRzOlsyNDEsNDAwLDU0MSw3NjgsOTYwXSx1bml0OiJweCIsbmFtZTpSLlNBUF82U1RFUFMsbmFtZXM6WyJYUyIsIlMiLCJNIiwiTCIsIlhMIiwiWFhMIl19O2QubWVkaWEuX3ByZWRlZmluZWRSYW5nZVNldHNbUi5TQVBfU1RBTkRBUkRdPXtwb2ludHM6WzYwMCwxMDI0XSx1bml0OiJweCIsbmFtZTpSLlNBUF9TVEFOREFSRCxuYW1lczpbIlBob25lIiwiVGFibGV0IiwiRGVza3RvcCJdfTt2YXIgXz1SLlNBUF9TVEFOREFSRDt2YXIgQz1kLnN1cHBvcnQubWF0Y2htZWRpYWxpc3RlbmVyPzA6MTAwO3ZhciBHPXt9O3ZhciBIPW51bGw7ZnVuY3Rpb24gSihmLHQsYSl7YT1hfHwicHgiO3ZhciBxPSJzY3JlZW4iO2lmKGY+MCl7cT1xKyIgYW5kIChtaW4td2lkdGg6IitmK2ErIikifWlmKHQ+MCl7cT1xKyIgYW5kIChtYXgtd2lkdGg6Iit0K2ErIikifXJldHVybiBxfTtmdW5jdGlvbiBLKGEpe2lmKCFkLnN1cHBvcnQubWF0Y2htZWRpYWxpc3RlbmVyJiZIPT1RKClbMF0pe3JldHVybn1pZihHW2FdLnRpbWVyKXtjbGVhclRpbWVvdXQoR1thXS50aW1lcik7R1thXS50aW1lcj1udWxsfUdbYV0udGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBiPU0oYSxmYWxzZSk7aWYoYil7bigibWVkaWFfIithLGIpfX0sQyl9O2Z1bmN0aW9uIEwocyxpKXt2YXIgcT1HW3NdLnF1ZXJpZXNbaV07dmFyIGE9e2Zyb206cS5mcm9tLHVuaXQ6R1tzXS51bml0fTtpZihxLnRvPj0wKXthLnRvPXEudG99aWYoR1tzXS5uYW1lcyl7YS5uYW1lPUdbc10ubmFtZXNbaV19cmV0dXJuIGF9O2Z1bmN0aW9uIE0oYSxiKXtpZihHW2FdKXt2YXIgZT1HW2FdLnF1ZXJpZXM7dmFyIGY9bnVsbDtmb3IodmFyIGk9MCxzPWUubGVuZ3RoO2k8cztpKyspe3ZhciBxPWVbaV07aWYoKHEhPUdbYV0uY3VycmVudHF1ZXJ5fHxiKSYmZC5tZWRpYS5tYXRjaGVzKHEuZnJvbSxxLnRvLEdbYV0udW5pdCkpe2lmKCFiKXtHW2FdLmN1cnJlbnRxdWVyeT1xfWlmKCFHW2FdLm5vQ2xhc3NlcyYmR1thXS5uYW1lcyYmIWIpe04oYSxHW2FdLm5hbWVzW2ldKX1mPUwoYSxpKX19cmV0dXJuIGZ9bC5sb2coVywiTm8gcXVlcnlzZXQgd2l0aCBuYW1lICIrYSsiIGZvdW5kIiwnREVWSUNFLk1FRElBJyk7cmV0dXJuIG51bGx9O2Z1bmN0aW9uIE4ocyxhLGIpe3ZhciBlPSJzYXBVaU1lZGlhLSIrcysiLSI7UChlK2EsYixlKX07ZnVuY3Rpb24gUChzLGIsYSl7dmFyIGU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O2lmKGUuY2xhc3NOYW1lLmxlbmd0aD09MCl7aWYoIWIpe2UuY2xhc3NOYW1lPXN9fWVsc2V7dmFyIGY9ZS5jbGFzc05hbWUuc3BsaXQoIiAiKTt2YXIgcT0iIjtmb3IodmFyIGk9MDtpPGYubGVuZ3RoO2krKyl7aWYoKGEmJmZbaV0uaW5kZXhPZihhKSE9MCl8fCghYSYmZltpXSE9cykpe3E9cStmW2ldKyIgIn19aWYoIWIpe3E9cStzfWUuY2xhc3NOYW1lPXF9fTtmdW5jdGlvbiBRKCl7cmV0dXJuW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0XX07ZnVuY3Rpb24gUyh2LGEpe2lmKGE9PT0iZW0ifHxhPT09InJlbSIpe3ZhciBzPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlfHxmdW5jdGlvbihlKXtyZXR1cm4gZS5jdXJyZW50U3R5bGV9O3ZhciB4PXMoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5mb250U2l6ZTt2YXIgZj0oeCYmeC5pbmRleE9mKCJweCIpPj0wKT9wYXJzZUZsb2F0KHgsMTApOjE2O3JldHVybiB2KmZ9cmV0dXJuIHZ9O2Z1bmN0aW9uIFUoZix0LGUpe2Y9UyhmLGUpO3Q9Uyh0LGUpO3ZhciB3PVEoKVswXTt2YXIgYT1mPDB8fGY8PXc7dmFyIGI9dDwwfHx3PD10O3JldHVybiBhJiZifTtmdW5jdGlvbiBWKGYsdCxhKXt2YXIgcT1KKGYsdCxhKTt2YXIgbT13aW5kb3cubWF0Y2hNZWRpYShxKTtyZXR1cm4gbSYmbS5tYXRjaGVzfTtkLm1lZGlhLm1hdGNoZXM9ZC5zdXBwb3J0Lm1hdGNobWVkaWE/VjpVO2QubWVkaWEuYXR0YWNoSGFuZGxlcj1mdW5jdGlvbihmLGEscyl7dmFyIGI9c3x8XztqKCJtZWRpYV8iK2IsZixhKX07ZC5tZWRpYS5kZXRhY2hIYW5kbGVyPWZ1bmN0aW9uKGYsYSxzKXt2YXIgYj1zfHxfO2soIm1lZGlhXyIrYixmLGEpfTtkLm1lZGlhLmluaXRSYW5nZVNldD1mdW5jdGlvbihzLGEsYixlLGYpe3ZhciB0O2lmKCFzKXt0PWQubWVkaWEuX3ByZWRlZmluZWRSYW5nZVNldHNbX119ZWxzZSBpZihzJiZkLm1lZGlhLl9wcmVkZWZpbmVkUmFuZ2VTZXRzW3NdKXt0PWQubWVkaWEuX3ByZWRlZmluZWRSYW5nZVNldHNbc119ZWxzZXt0PXtuYW1lOnMsdW5pdDooYnx8InB4IikudG9Mb3dlckNhc2UoKSxwb2ludHM6YXx8W10sbmFtZXM6ZSxub0NsYXNzZXM6ISFmfX1pZihkLm1lZGlhLmhhc1JhbmdlU2V0KHQubmFtZSkpe3JldHVybjtsLmxvZyhJLCJSYW5nZSBzZXQgIit0Lm5hbWUrIiBoYXNlIGFscmVhZHkgYmVlbiBpbml0aWFsaXplZCIsJ0RFVklDRS5NRURJQScpfXM9dC5uYW1lO3QucXVlcmllcz1bXTt0LnRpbWVyPW51bGw7dC5jdXJyZW50cXVlcnk9bnVsbDt0Lmxpc3RlbmVyPWZ1bmN0aW9uKCl7cmV0dXJuIEsocyl9O3ZhciB2LHcseDt2YXIgdzE9dC5wb2ludHM7Zm9yKHZhciBpPTAseDE9dzEubGVuZ3RoO2k8PXgxO2krKyl7dj0oaT09MCk/MDp3MVtpLTFdO3c9KGk9PXcxLmxlbmd0aCk/LTE6dzFbaV07eD1KKHYsdyx0LnVuaXQpO3QucXVlcmllcy5wdXNoKHtxdWVyeTp4LGZyb206dix0bzp3fSl9O2lmKHQubmFtZXMmJnQubmFtZXMubGVuZ3RoIT10LnF1ZXJpZXMubGVuZ3RoKXt0Lm5hbWVzPW51bGx9R1t0Lm5hbWVdPXQ7aWYoZC5zdXBwb3J0Lm1hdGNobWVkaWFsaXN0ZW5lcil7dmFyIHkxPXQucXVlcmllcztmb3IodmFyIGk9MDtpPHkxLmxlbmd0aDtpKyspe3ZhciBxPXkxW2ldO3EubWVkaWE9d2luZG93Lm1hdGNoTWVkaWEocS5xdWVyeSk7cS5tZWRpYS5hZGRMaXN0ZW5lcih0Lmxpc3RlbmVyKX19ZWxzZXtpZih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcil7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsdC5saXN0ZW5lcixmYWxzZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm9yaWVudGF0aW9uY2hhbmdlIix0Lmxpc3RlbmVyLGZhbHNlKX1lbHNle3dpbmRvdy5hdHRhY2hFdmVudCgib25yZXNpemUiLHQubGlzdGVuZXIpfX10Lmxpc3RlbmVyKCl9O2QubWVkaWEuZ2V0Q3VycmVudFJhbmdlPWZ1bmN0aW9uKHMpe2lmKCFkLm1lZGlhLmhhc1JhbmdlU2V0KHMpKXtyZXR1cm4gbnVsbH1yZXR1cm4gTShzLHRydWUpfTtkLm1lZGlhLmhhc1JhbmdlU2V0PWZ1bmN0aW9uKHMpe3JldHVybiBzJiYhIUdbc119O2QubWVkaWEucmVtb3ZlUmFuZ2VTZXQ9ZnVuY3Rpb24ocyl7aWYoIWQubWVkaWEuaGFzUmFuZ2VTZXQocykpe2wubG9nKEksIlJhbmdlU2V0ICIrcysiIG5vdCBmb3VuZCwgdGh1cyBjb3VsZCBub3QgYmUgcmVtb3ZlZC4iLCdERVZJQ0UuTUVESUEnKTtyZXR1cm59Zm9yKHZhciB4IGluIFIpe2lmKHM9PT1SW3hdKXtsLmxvZyhXLCJDYW5ub3QgcmVtb3ZlIGRlZmF1bHQgcmFuZ2VzZXQgLSBubyBhY3Rpb24gdGFrZW4uIiwnREVWSUNFLk1FRElBJyk7cmV0dXJufX12YXIgYT1HW3NdO2lmKGQuc3VwcG9ydC5tYXRjaG1lZGlhbGlzdGVuZXIpe3ZhciBxPWEucXVlcmllcztmb3IodmFyIGk9MDtpPHEubGVuZ3RoO2krKyl7cVtpXS5tZWRpYS5yZW1vdmVMaXN0ZW5lcihhLmxpc3RlbmVyKX19ZWxzZXtpZih3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcil7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsYS5saXN0ZW5lcixmYWxzZSk7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm9yaWVudGF0aW9uY2hhbmdlIixhLmxpc3RlbmVyLGZhbHNlKX1lbHNle3dpbmRvdy5kZXRhY2hFdmVudCgib25yZXNpemUiLGEubGlzdGVuZXIpfX1OKHMsIiIsdHJ1ZSk7ZGVsZXRlIGhbIm1lZGlhXyIrc107ZGVsZXRlIEdbc119O3ZhciBYPXsiVEFCTEVUIjoidGFibGV0IiwiUEhPTkUiOiJwaG9uZSIsIkRFU0tUT1AiOiJkZXNrdG9wIiwiQ09NQkkiOiJjb21iaSJ9O3ZhciBZPWQub3Mud2luZG93cyYmZC5vcy52ZXJzaW9uPT09ODtkLnN5c3RlbT17fTtmdW5jdGlvbiBaKGEpe3ZhciB0PSQoKTt2YXIgcz17fTtzLnRhYmxldD0oZC5zdXBwb3J0LnRvdWNofHwhIWEpJiZ0O3MucGhvbmU9KGQuc3VwcG9ydC50b3VjaHx8ISFhKSYmIXQ7cy5kZXNrdG9wPSghcy50YWJsZXQmJiFzLnBob25lKXx8WTtzLmNvbWJpPShzLmRlc2t0b3AmJnMudGFibGV0KTtzLlNZU1RFTVRZUEU9WDtmb3IodmFyIGIgaW4gWCl7UCgic2FwLSIrWFtiXSwhc1tYW2JdXSl9cmV0dXJuIHN9O2Z1bmN0aW9uICQoKXt2YXIgYT0oLyg/PWFuZHJvaWQpKD89Liptb2JpbGUpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSk7aWYoZC5vcy5uYW1lPT09ZC5vcy5PUy5JT1Mpe3JldHVybi9pcGFkL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX1lbHNle2lmKGQuc3VwcG9ydC50b3VjaCl7dmFyIGI9d2luZG93LmRldmljZVBpeGVsUmF0aW8/d2luZG93LmRldmljZVBpeGVsUmF0aW86MTtpZigoZC5vcy5uYW1lPT09ZC5vcy5PUy5BTkRST0lEKSYmZC5icm93c2VyLndlYmtpdCYmKGQuYnJvd3Nlci53ZWJraXRWZXJzaW9uPjUzNy4xMCkpe2I9MX12YXIgdD0oTWF0aC5taW4od2luZG93LnNjcmVlbi53aWR0aC9iLHdpbmRvdy5zY3JlZW4uaGVpZ2h0L2IpPj02MDApO2lmKHMxKCkmJih3aW5kb3cuc2NyZWVuLmhlaWdodD09PTU1Mnx8d2luZG93LnNjcmVlbi5oZWlnaHQ9PT01NTMpJiYoL05leHVzIDcvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSl7dD10cnVlfXJldHVybiB0fWVsc2V7dmFyIGU9KGQub3MubmFtZT09PWQub3MuT1MuQU5EUk9JRCkmJiFhO3JldHVybiBlfX19O2Z1bmN0aW9uIGExKGEpe2Quc3lzdGVtPVooYSk7aWYoZC5zeXN0ZW0udGFibGV0fHxkLnN5c3RlbS5waG9uZSl7ZC5icm93c2VyLm1vYmlsZT10cnVlfX1hMSgpO2Qub3JpZW50YXRpb249e307ZC5yZXNpemU9e307ZC5vcmllbnRhdGlvbi5hdHRhY2hIYW5kbGVyPWZ1bmN0aW9uKGYsYSl7aigib3JpZW50YXRpb24iLGYsYSl9O2QucmVzaXplLmF0dGFjaEhhbmRsZXI9ZnVuY3Rpb24oZixhKXtqKCJyZXNpemUiLGYsYSl9O2Qub3JpZW50YXRpb24uZGV0YWNoSGFuZGxlcj1mdW5jdGlvbihmLGEpe2soIm9yaWVudGF0aW9uIixmLGEpfTtkLnJlc2l6ZS5kZXRhY2hIYW5kbGVyPWZ1bmN0aW9uKGYsYSl7aygicmVzaXplIixmLGEpfTtmdW5jdGlvbiBiMShpKXtpLmxhbmRzY2FwZT1zMSh0cnVlKTtpLnBvcnRyYWl0PSFpLmxhbmRzY2FwZX07ZnVuY3Rpb24gYzEoKXtiMShkLm9yaWVudGF0aW9uKTtuKCJvcmllbnRhdGlvbiIse2xhbmRzY2FwZTpkLm9yaWVudGF0aW9uLmxhbmRzY2FwZX0pfTtmdW5jdGlvbiBkMSgpe2UxKGQucmVzaXplKTtuKCJyZXNpemUiLHtoZWlnaHQ6ZC5yZXNpemUuaGVpZ2h0LHdpZHRoOmQucmVzaXplLndpZHRofSl9O2Z1bmN0aW9uIGUxKGkpe2kud2lkdGg9USgpWzBdO2kuaGVpZ2h0PVEoKVsxXX07ZnVuY3Rpb24gZjEoKXt2YXIgdz1kLm9yaWVudGF0aW9uLmxhbmRzY2FwZTt2YXIgaT1zMSgpO2lmKHchPWkpe2MxKCl9aWYoIWsxKXtrMT13aW5kb3cuc2V0VGltZW91dChnMSwxNTApfX07ZnVuY3Rpb24gZzEoKXtkMSgpO2sxPW51bGx9O3ZhciBoMT1mYWxzZTt2YXIgaTE9ZmFsc2U7dmFyIGoxO3ZhciBrMTt2YXIgbDE7dmFyIG0xPVEoKVsxXTt2YXIgbjE9USgpWzBdO3ZhciBvMT1mYWxzZTt2YXIgcDE7dmFyIHExPS9JTlBVVHxURVhUQVJFQXxTRUxFQ1QvO3ZhciByMT1kLnN5c3RlbS5waG9uZSYmZC5vcy5pb3MmJmQub3MudmVyc2lvbj49NyYmZC5vcy52ZXJzaW9uPDcuMSYmZC5icm93c2VyLm5hbWU9PT0ic2YiO2Z1bmN0aW9uIHMxKGYpe2lmKGQuc3VwcG9ydC50b3VjaCYmZC5zdXBwb3J0Lm9yaWVudGF0aW9uKXtpZihvMSYmZil7cmV0dXJuIWQub3JpZW50YXRpb24ubGFuZHNjYXBlfWlmKG8xKXtyZXR1cm4gZC5vcmllbnRhdGlvbi5sYW5kc2NhcGV9fWVsc2V7aWYoZC5zdXBwb3J0Lm1hdGNobWVkaWEmJmQuc3VwcG9ydC5vcmllbnRhdGlvbil7cmV0dXJuISF3aW5kb3cubWF0Y2hNZWRpYSgiKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIikubWF0Y2hlc319dmFyIHM9USgpO3JldHVybiBzWzBdPnNbMV19O2Z1bmN0aW9uIHQxKGUpe2lmKGUudHlwZT09InJlc2l6ZSIpe2lmKHIxJiZxMS50ZXN0KGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQudGFnTmFtZSkmJiFoMSl7cmV0dXJufXZhciB3PVEoKVsxXTt2YXIgaT1RKClbMF07dmFyIHQ9bmV3IERhdGUoKS5nZXRUaW1lKCk7aWYodz09PW0xJiZpPT09bjEpe3JldHVybn1pMT10cnVlO2lmKChtMSE9dykmJihuMT09aSkpe2lmKCFwMXx8KHQtcDE+MzAwKSl7bzE9KHc8bTEpfWQxKCl9ZWxzZXtuMT1pfXAxPXQ7bTE9dztpZihsMSl7d2luZG93LmNsZWFyVGltZW91dChsMSk7bDE9bnVsbH1sMT13aW5kb3cuc2V0VGltZW91dCh2MSwxMjAwKX1lbHNlIGlmKGUudHlwZT09Im9yaWVudGF0aW9uY2hhbmdlIil7aDE9dHJ1ZX1pZihqMSl7Y2xlYXJUaW1lb3V0KGoxKTtqMT1udWxsfWoxPXdpbmRvdy5zZXRUaW1lb3V0KHUxLDUwKX07ZnVuY3Rpb24gdTEoKXtpZihoMSYmaTEpe2MxKCk7ZDEoKTtoMT1mYWxzZTtpMT1mYWxzZTtpZihsMSl7d2luZG93LmNsZWFyVGltZW91dChsMSk7bDE9bnVsbH19ajE9bnVsbH07ZnVuY3Rpb24gdjEoKXtoMT1mYWxzZTtpMT1mYWxzZTtsMT1udWxsfTtkLl91cGRhdGU9ZnVuY3Rpb24oYSl7dT1uYXZpZ2F0b3IudXNlckFnZW50O2wubG9nKFcsIkRldmljZSBBUEkgdmFsdWVzIG1hbmlwdWxhdGVkOiBOT1QgUFJPRFVDVElWRSBGRUFUVVJFISEhIFRoaXMgc2hvdWxkIGJlIG9ubHkgdXNlZCBmb3IgdGVzdCBwdXJwb3Nlcy4gT25seSB1c2UgaWYgeW91IGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nLiIpO0EoKTtyKCk7YTEoYSl9O2UxKGQucmVzaXplKTtiMShkLm9yaWVudGF0aW9uKTt3aW5kb3cuc2FwLnVpLkRldmljZT1kO2lmKGQuc3VwcG9ydC50b3VjaCYmZC5zdXBwb3J0Lm9yaWVudGF0aW9uKXt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIix0MSxmYWxzZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm9yaWVudGF0aW9uY2hhbmdlIix0MSxmYWxzZSl9ZWxzZXtpZih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcil7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsZjEsZmFsc2UpfWVsc2V7d2luZG93LmF0dGFjaEV2ZW50KCJvbnJlc2l6ZSIsZjEpfX1kLm1lZGlhLmluaXRSYW5nZVNldCgpO2lmKHNhcC51aS5kZWZpbmUpe3NhcC51aS5kZWZpbmUoInNhcC91aS9EZXZpY2UiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGR9KX19KCkpOw0KLyohCiAqIFVSSS5qcyAtIE11dGF0aW5nIFVSTHMKICogU2Vjb25kIExldmVsIERvbWFpbiAoU0xEKSBTdXBwb3J0CiAqCiAqIFZlcnNpb246IDEuMTEuMgogKgogKiBBdXRob3I6IFJvZG5leSBSZWhtCiAqIFdlYjogaHR0cDovL21lZGlhbGl6ZS5naXRodWIuY29tL1VSSS5qcy8KICoKICogTGljZW5zZWQgdW5kZXIKICogICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlCiAqICAgR1BMIHYzIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9HUEwtMy4wCiAqCiAqLw0KKGZ1bmN0aW9uKHIsZil7aWYodHlwZW9mIGV4cG9ydHM9PT0nb2JqZWN0Jyl7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PSdmdW5jdGlvbicmJmRlZmluZS5hbWQpe2RlZmluZShmKX1lbHNle3IuU2Vjb25kTGV2ZWxEb21haW5zPWYocil9fSh0aGlzLGZ1bmN0aW9uKHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgXz1yJiZyLlNlY29uZExldmVsRG9tYWluczt2YXIgaD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBTPXtsaXN0OnsiYWMiOiJjb218Z292fG1pbHxuZXR8b3JnIiwiYWUiOiJhY3xjb3xnb3Z8bWlsfG5hbWV8bmV0fG9yZ3xwcm98c2NoIiwiYWYiOiJjb218ZWR1fGdvdnxuZXR8b3JnIiwiYWwiOiJjb218ZWR1fGdvdnxtaWx8bmV0fG9yZyIsImFvIjoiY298ZWR8Z3Z8aXR8b2d8cGIiLCJhciI6ImNvbXxlZHV8Z29ifGdvdnxpbnR8bWlsfG5ldHxvcmd8dHVyIiwiYXQiOiJhY3xjb3xndnxvciIsImF1IjoiYXNufGNvbXxjc2lyb3xlZHV8Z292fGlkfG5ldHxvcmciLCJiYSI6ImNvfGNvbXxlZHV8Z292fG1pbHxuZXR8b3JnfHJzfHVuYml8dW5tb3x1bnNhfHVudHp8dW56ZSIsImJiIjoiYml6fGNvfGNvbXxlZHV8Z292fGluZm98bmV0fG9yZ3xzdG9yZXx0diIsImJoIjoiYml6fGNjfGNvbXxlZHV8Z292fGluZm98bmV0fG9yZyIsImJuIjoiY29tfGVkdXxnb3Z8bmV0fG9yZyIsImJvIjoiY29tfGVkdXxnb2J8Z292fGludHxtaWx8bmV0fG9yZ3x0diIsImJyIjoiYWRtfGFkdnxhZ3J8YW18YXJxfGFydHxhdG98YnxiaW98YmxvZ3xibWR8Y2ltfGNuZ3xjbnR8Y29tfGNvb3B8ZWNufGVkdXxlbmd8ZXNwfGV0Y3xldGl8ZmFyfGZsb2d8Zm18Zm5kfGZvdHxmc3R8ZzEyfGdnZnxnb3Z8aW1ifGluZHxpbmZ8am9yfGp1c3xsZWx8bWF0fG1lZHxtaWx8bXVzfG5ldHxub218bm90fG50cnxvZG98b3JnfHBwZ3xwcm98cHNjfHBzaXxxc2x8cmVjfHNsZ3xzcnZ8dG1wfHRyZHx0dXJ8dHZ8dmV0fHZsb2d8d2lraXx6bGciLCJicyI6ImNvbXxlZHV8Z292fG5ldHxvcmciLCJieiI6ImR1fGV0fG9tfG92fHJnIiwiY2EiOiJhYnxiY3xtYnxuYnxuZnxubHxuc3xudHxudXxvbnxwZXxxY3xza3x5ayIsImNrIjoiYml6fGNvfGVkdXxnZW58Z292fGluZm98bmV0fG9yZyIsImNuIjoiYWN8YWh8Ymp8Y29tfGNxfGVkdXxmanxnZHxnb3Z8Z3N8Z3h8Z3p8aGF8aGJ8aGV8aGl8aGx8aG58amx8anN8anh8bG58bWlsfG5ldHxubXxueHxvcmd8cWh8c2N8c2R8c2h8c258c3h8dGp8dHd8eGp8eHp8eW58emoiLCJjbyI6ImNvbXxlZHV8Z292fG1pbHxuZXR8bm9tfG9yZyIsImNyIjoiYWN8Y3xjb3xlZHxmaXxnb3xvcnxzYSIsImN5IjoiYWN8Yml6fGNvbXxla2xvZ2VzfGdvdnxsdGR8bmFtZXxuZXR8b3JnfHBhcmxpYW1lbnR8cHJlc3N8cHJvfHRtIiwiZG8iOiJhcnR8Y29tfGVkdXxnb2J8Z292fG1pbHxuZXR8b3JnfHNsZHx3ZWIiLCJkeiI6ImFydHxhc3NvfGNvbXxlZHV8Z292fG5ldHxvcmd8cG9sIiwiZWMiOiJjb218ZWR1fGZpbnxnb3Z8aW5mb3xtZWR8bWlsfG5ldHxvcmd8cHJvIiwiZWciOiJjb218ZWR1fGV1bnxnb3Z8bWlsfG5hbWV8bmV0fG9yZ3xzY2kiLCJlciI6ImNvbXxlZHV8Z292fGluZHxtaWx8bmV0fG9yZ3xyb2NoZXN0fHciLCJlcyI6ImNvbXxlZHV8Z29ifG5vbXxvcmciLCJldCI6ImJpenxjb218ZWR1fGdvdnxpbmZvfG5hbWV8bmV0fG9yZyIsImZqIjoiYWN8Yml6fGNvbXxpbmZvfG1pbHxuYW1lfG5ldHxvcmd8cHJvIiwiZmsiOiJhY3xjb3xnb3Z8bmV0fG5vbXxvcmciLCJmciI6ImFzc298Y29tfGZ8Z291dnxub218cHJkfHByZXNzZXx0bSIsImdnIjoiY298bmV0fG9yZyIsImdoIjoiY29tfGVkdXxnb3Z8bWlsfG9yZyIsImduIjoiYWN8Y29tfGdvdnxuZXR8b3JnIiwiZ3IiOiJjb218ZWR1fGdvdnxtaWx8bmV0fG9yZyIsImd0IjoiY29tfGVkdXxnb2J8aW5kfG1pbHxuZXR8b3JnIiwiZ3UiOiJjb218ZWR1fGdvdnxuZXR8b3JnIiwiaGsiOiJjb218ZWR1fGdvdnxpZHZ8bmV0fG9yZyIsImlkIjoiYWN8Y298Z298bWlsfG5ldHxvcnxzY2h8d2ViIiwiaWwiOiJhY3xjb3xnb3Z8aWRmfGsxMnxtdW5pfG5ldHxvcmciLCJpbiI6ImFjfGNvfGVkdXxlcm5ldHxmaXJtfGdlbnxnb3Z8aXxpbmR8bWlsfG5ldHxuaWN8b3JnfHJlcyIsImlxIjoiY29tfGVkdXxnb3Z8aXxtaWx8bmV0fG9yZyIsImlyIjoiYWN8Y298ZG5zc2VjfGdvdnxpfGlkfG5ldHxvcmd8c2NoIiwiaXQiOiJlZHV8Z292IiwiamUiOiJjb3xuZXR8b3JnIiwiam8iOiJjb218ZWR1fGdvdnxtaWx8bmFtZXxuZXR8b3JnfHNjaCIsImpwIjoiYWN8YWR8Y298ZWR8Z298Z3J8bGd8bmV8b3IiLCJrZSI6ImFjfGNvfGdvfGluZm98bWV8bW9iaXxuZXxvcnxzYyIsImtoIjoiY29tfGVkdXxnb3Z8bWlsfG5ldHxvcmd8cGVyIiwia2kiOiJiaXp8Y29tfGRlfGVkdXxnb3Z8aW5mb3xtb2J8bmV0fG9yZ3x0ZWwiLCJrbSI6ImFzc298Y29tfGNvb3B8ZWR1fGdvdXZ8a3xtZWRlY2lufG1pbHxub218bm90YWlyZXN8cGhhcm1hY2llbnN8cHJlc3NlfHRtfHZldGVyaW5haXJlIiwia24iOiJlZHV8Z292fG5ldHxvcmciLCJrciI6ImFjfGJ1c2FufGNodW5nYnVrfGNodW5nbmFtfGNvfGRhZWd1fGRhZWplb258ZXN8Z2FuZ3dvbnxnb3xnd2FuZ2p1fGd5ZW9uZ2J1a3xneWVvbmdnaXxneWVvbmduYW18aHN8aW5jaGVvbnxqZWp1fGplb25idWt8amVvbm5hbXxrfGtnfG1pbHxtc3xuZXxvcnxwZXxyZXxzY3xzZW91bHx1bHNhbiIsImt3IjoiY29tfGVkdXxnb3Z8bmV0fG9yZyIsImt5IjoiY29tfGVkdXxnb3Z8bmV0fG9yZyIsImt6IjoiY29tfGVkdXxnb3Z8bWlsfG5ldHxvcmciLCJsYiI6ImNvbXxlZHV8Z292fG5ldHxvcmciLCJsayI6ImFzc258Y29tfGVkdXxnb3Z8Z3JwfGhvdGVsfGludHxsdGR8bmV0fG5nb3xvcmd8c2NofHNvY3x3ZWIiLCJsciI6ImNvbXxlZHV8Z292fG5ldHxvcmciLCJsdiI6ImFzbnxjb218Y29uZnxlZHV8Z292fGlkfG1pbHxuZXR8b3JnIiwibHkiOiJjb218ZWR1fGdvdnxpZHxtZWR8bmV0fG9yZ3xwbGN8c2NoIiwibWEiOiJhY3xjb3xnb3Z8bXxuZXR8b3JnfHByZXNzIiwibWMiOiJhc3NvfHRtIiwibWUiOiJhY3xjb3xlZHV8Z292fGl0c3xuZXR8b3JnfHByaXYiLCJtZyI6ImNvbXxlZHV8Z292fG1pbHxub218b3JnfHByZHx0bSIsIm1rIjoiY29tfGVkdXxnb3Z8aW5mfG5hbWV8bmV0fG9yZ3xwcm8iLCJtbCI6ImNvbXxlZHV8Z292fG5ldHxvcmd8cHJlc3NlIiwibW4iOiJlZHV8Z292fG9yZyIsIm1vIjoiY29tfGVkdXxnb3Z8bmV0fG9yZyIsIm10IjoiY29tfGVkdXxnb3Z8bmV0fG9yZyIsIm12IjoiYWVyb3xiaXp8Y29tfGNvb3B8ZWR1fGdvdnxpbmZvfGludHxtaWx8bXVzZXVtfG5hbWV8bmV0fG9yZ3xwcm8iLCJtdyI6ImFjfGNvfGNvbXxjb29wfGVkdXxnb3Z8aW50fG11c2V1bXxuZXR8b3JnIiwibXgiOiJjb218ZWR1fGdvYnxuZXR8b3JnIiwibXkiOiJjb218ZWR1fGdvdnxtaWx8bmFtZXxuZXR8b3JnfHNjaCIsIm5mIjoiYXJ0c3xjb218ZmlybXxpbmZvfG5ldHxvdGhlcnxwZXJ8cmVjfHN0b3JlfHdlYiIsIm5nIjoiYml6fGNvbXxlZHV8Z292fG1pbHxtb2JpfG5hbWV8bmV0fG9yZ3xzY2giLCJuaSI6ImFjfGNvfGNvbXxlZHV8Z29ifG1pbHxuZXR8bm9tfG9yZyIsIm5wIjoiY29tfGVkdXxnb3Z8bWlsfG5ldHxvcmciLCJuciI6ImJpenxjb218ZWR1fGdvdnxpbmZvfG5ldHxvcmciLCJvbSI6ImFjfGJpenxjb3xjb218ZWR1fGdvdnxtZWR8bWlsfG11c2V1bXxuZXR8b3JnfHByb3xzY2giLCJwZSI6ImNvbXxlZHV8Z29ifG1pbHxuZXR8bm9tfG9yZ3xzbGQiLCJwaCI6ImNvbXxlZHV8Z292fGl8bWlsfG5ldHxuZ298b3JnIiwicGsiOiJiaXp8Y29tfGVkdXxmYW18Z29ifGdva3xnb258Z29wfGdvc3xnb3Z8bmV0fG9yZ3x3ZWIiLCJwbCI6ImFydHxiaWFseXN0b2t8Yml6fGNvbXxlZHV8Z2RhfGdkYW5za3xnb3J6b3d8Z292fGluZm98a2F0b3dpY2V8a3Jha293fGxvZHp8bHVibGlufG1pbHxuZXR8bmdvfG9sc3p0eW58b3JnfHBvem5hbnxwd3J8cmFkb218c2x1cHNrfHN6Y3plY2lufHRvcnVufHdhcnN6YXdhfHdhd3x3cm9jfHdyb2NsYXd8emdvcmEiLCJwciI6ImFjfGJpenxjb218ZWR1fGVzdHxnb3Z8aW5mb3xpc2xhfG5hbWV8bmV0fG9yZ3xwcm98cHJvZiIsInBzIjoiY29tfGVkdXxnb3Z8bmV0fG9yZ3xwbG98c2VjIiwicHciOiJiZWxhdXxjb3xlZHxnb3xuZXxvciIsInJvIjoiYXJ0c3xjb218ZmlybXxpbmZvfG5vbXxudHxvcmd8cmVjfHN0b3JlfHRtfHd3dyIsInJzIjoiYWN8Y298ZWR1fGdvdnxpbnxvcmciLCJzYiI6ImNvbXxlZHV8Z292fG5ldHxvcmciLCJzYyI6ImNvbXxlZHV8Z292fG5ldHxvcmciLCJzaCI6ImNvfGNvbXxlZHV8Z292fG5ldHxub218b3JnIiwic2wiOiJjb218ZWR1fGdvdnxuZXR8b3JnIiwic3QiOiJjb3xjb218Y29uc3VsYWRvfGVkdXxlbWJhaXhhZGF8Z292fG1pbHxuZXR8b3JnfHByaW5jaXBlfHNhb3RvbWV8c3RvcmUiLCJzdiI6ImNvbXxlZHV8Z29ifG9yZ3xyZWQiLCJzeiI6ImFjfGNvfG9yZyIsInRyIjoiYXZ8YmJzfGJlbHxiaXp8Y29tfGRyfGVkdXxnZW58Z292fGluZm98azEyfG5hbWV8bmV0fG9yZ3xwb2x8dGVsfHRza3x0dnx3ZWIiLCJ0dCI6ImFlcm98Yml6fGNhdHxjb3xjb218Y29vcHxlZHV8Z292fGluZm98aW50fGpvYnN8bWlsfG1vYml8bXVzZXVtfG5hbWV8bmV0fG9yZ3xwcm98dGVsfHRyYXZlbCIsInR3IjoiY2x1Ynxjb218ZWJpenxlZHV8Z2FtZXxnb3Z8aWR2fG1pbHxuZXR8b3JnIiwibXUiOiJhY3xjb3xjb218Z292fG5ldHxvcnxvcmciLCJteiI6ImFjfGNvfGVkdXxnb3Z8b3JnIiwibmEiOiJjb3xjb20iLCJueiI6ImFjfGNvfGNyaXxnZWVrfGdlbnxnb3Z0fGhlYWx0aHxpd2l8bWFvcml8bWlsfG5ldHxvcmd8cGFybGlhbWVudHxzY2hvb2wiLCJwYSI6ImFib3xhY3xjb218ZWR1fGdvYnxpbmd8bWVkfG5ldHxub218b3JnfHNsZCIsInB0IjoiY29tfGVkdXxnb3Z8aW50fG5ldHxub21lfG9yZ3xwdWJsIiwicHkiOiJjb218ZWR1fGdvdnxtaWx8bmV0fG9yZyIsInFhIjoiY29tfGVkdXxnb3Z8bWlsfG5ldHxvcmciLCJyZSI6ImFzc298Y29tfG5vbSIsInJ1IjoiYWN8YWR5Z2V5YXxhbHRhaXxhbXVyfGFya2hhbmdlbHNrfGFzdHJha2hhbnxiYXNoa2lyaWF8YmVsZ29yb2R8YmlyfGJyeWFuc2t8YnVyeWF0aWF8Y2JnfGNoZWx8Y2hlbHlhYmluc2t8Y2hpdGF8Y2h1a290a2F8Y2h1dmFzaGlhfGNvbXxkYWdlc3RhbnxlLWJ1cmd8ZWR1fGdvdnxncm96bnl8aW50fGlya3V0c2t8aXZhbm92b3xpemhldnNrfGphcnxqb3Noa2FyLW9sYXxrYWxteWtpYXxrYWx1Z2F8a2FtY2hhdGthfGthcmVsaWF8a2F6YW58a2NocnxrZW1lcm92b3xraGFiYXJvdnNrfGtoYWthc3NpYXxraHZ8a2lyb3Z8a29lbmlnfGtvbWl8a29zdHJvbWF8a3Jhbm95YXJza3xrdWJhbnxrdXJnYW58a3Vyc2t8bGlwZXRza3xtYWdhZGFufG1hcml8bWFyaS1lbHxtYXJpbmV8bWlsfG1vcmRvdmlhfG1vc3JlZ3xtc2t8bXVybWFuc2t8bmFsY2hpa3xuZXR8bm5vdnxub3Z8bm92b3NpYmlyc2t8bnNrfG9tc2t8b3JlbmJ1cmd8b3JnfG9yeW9sfHBlbnphfHBlcm18cHB8cHNrb3Z8cHR6fHJuZHxyeWF6YW58c2FraGFsaW58c2FtYXJhfHNhcmF0b3Z8c2ltYmlyc2t8c21vbGVuc2t8c3BifHN0YXZyb3BvbHxzdHZ8c3VyZ3V0fHRhbWJvdnx0YXRhcnN0YW58dG9tfHRvbXNrfHRzYXJpdHN5bnx0c2t8dHVsYXx0dXZhfHR2ZXJ8dHl1bWVufHVkbXx1ZG11cnRpYXx1bGFuLXVkZXx2bGFkaWthdmthenx2bGFkaW1pcnx2bGFkaXZvc3Rva3x2b2xnb2dyYWR8dm9sb2dkYXx2b3JvbmV6aHx2cm58dnlhdGthfHlha3V0aWF8eWFtYWx8eWVrYXRlcmluYnVyZ3x5dXpobm8tc2FraGFsaW5zayIsInJ3IjoiYWN8Y298Y29tfGVkdXxnb3V2fGdvdnxpbnR8bWlsfG5ldCIsInNhIjoiY29tfGVkdXxnb3Z8bWVkfG5ldHxvcmd8cHVifHNjaCIsInNkIjoiY29tfGVkdXxnb3Z8aW5mb3xtZWR8bmV0fG9yZ3x0diIsInNlIjoiYXxhY3xifGJkfGN8ZHxlfGZ8Z3xofGl8a3xsfG18bnxvfG9yZ3xwfHBhcnRpfHBwfHByZXNzfHJ8c3x0fHRtfHV8d3x4fHl8eiIsInNnIjoiY29tfGVkdXxnb3Z8aWRufG5ldHxvcmd8cGVyIiwic24iOiJhcnR8Y29tfGVkdXxnb3V2fG9yZ3xwZXJzb3x1bml2Iiwic3kiOiJjb218ZWR1fGdvdnxtaWx8bmV0fG5ld3N8b3JnIiwidGgiOiJhY3xjb3xnb3xpbnxtaXxuZXR8b3IiLCJ0aiI6ImFjfGJpenxjb3xjb218ZWR1fGdvfGdvdnxpbmZvfGludHxtaWx8bmFtZXxuZXR8bmljfG9yZ3x0ZXN0fHdlYiIsInRuIjoiYWdyaW5ldHxjb218ZGVmZW5zZXxlZHVuZXR8ZW5zfGZpbnxnb3Z8aW5kfGluZm98aW50bHxtaW5jb218bmF0fG5ldHxvcmd8cGVyc298cm5ydHxybnN8cm51fHRvdXJpc20iLCJ0eiI6ImFjfGNvfGdvfG5lfG9yIiwidWEiOiJiaXp8Y2hlcmthc3N5fGNoZXJuaWdvdnxjaGVybm92dHN5fGNrfGNufGNvfGNvbXxjcmltZWF8Y3Z8ZG58ZG5lcHJvcGV0cm92c2t8ZG9uZXRza3xkcHxlZHV8Z292fGlmfGlufGl2YW5vLWZyYW5raXZza3xraHxraGFya292fGtoZXJzb258a2htZWxuaXRza2l5fGtpZXZ8a2lyb3ZvZ3JhZHxrbXxrcnxrc3xrdnxsZ3xsdWdhbnNrfGx1dHNrfGx2aXZ8bWV8bWt8bmV0fG5pa29sYWV2fG9kfG9kZXNzYXxvcmd8cGx8cG9sdGF2YXxwcHxyb3Zub3xydnxzZWJhc3RvcG9sfHN1bXl8dGV8dGVybm9waWx8dXpoZ29yb2R8dmlubmljYXx2bnx6YXBvcml6aHpoZXx6aGl0b21pcnx6cHx6dCIsInVnIjoiYWN8Y298Z298bmV8b3J8b3JnfHNjIiwidWsiOiJhY3xibHxicml0aXNoLWxpYnJhcnl8Y298Y3ltfGdvdnxnb3Z0fGljbmV0fGpldHxsZWF8bHRkfG1lfG1pbHxtb2R8bmF0aW9uYWwtbGlicmFyeS1zY290bGFuZHxuZWx8bmV0fG5oc3xuaWN8bmxzfG9yZ3xvcmdufHBhcmxpYW1lbnR8cGxjfHBvbGljZXxzY2h8c2NvdHxzb2MiLCJ1cyI6ImRuaXxmZWR8aXNhfGtpZHN8bnNuIiwidXkiOiJjb218ZWR1fGd1YnxtaWx8bmV0fG9yZyIsInZlIjoiY298Y29tfGVkdXxnb2J8aW5mb3xtaWx8bmV0fG9yZ3x3ZWIiLCJ2aSI6ImNvfGNvbXxrMTJ8bmV0fG9yZyIsInZuIjoiYWN8Yml6fGNvbXxlZHV8Z292fGhlYWx0aHxpbmZvfGludHxuYW1lfG5ldHxvcmd8cHJvIiwieWUiOiJjb3xjb218Z292fGx0ZHxtZXxuZXR8b3JnfHBsYyIsInl1IjoiYWN8Y298ZWR1fGdvdnxvcmciLCJ6YSI6ImFjfGFncmljfGFsdHxib3Vyc2V8Y2l0eXxjb3xjeWJlcm5ldHxkYnxlZHV8Z292fGdyb25kYXJ8aWFjY2Vzc3xpbXR8aW5jYXxsYW5kZXNpZ258bGF3fG1pbHxuZXR8bmdvfG5pc3xub218b2xpdmV0dGl8b3JnfHBpeHxzY2hvb2x8dG18d2ViIiwiem0iOiJhY3xjb3xjb218ZWR1fGdvdnxuZXR8b3JnfHNjaCJ9LGhhc19leHByZXNzaW9uOm51bGwsaXNfZXhwcmVzc2lvbjpudWxsLGhhczpmdW5jdGlvbihkKXtyZXR1cm4hIWQubWF0Y2goUy5oYXNfZXhwcmVzc2lvbil9LGlzOmZ1bmN0aW9uKGQpe3JldHVybiEhZC5tYXRjaChTLmlzX2V4cHJlc3Npb24pfSxnZXQ6ZnVuY3Rpb24oZCl7dmFyIHQ9ZC5tYXRjaChTLmhhc19leHByZXNzaW9uKTtyZXR1cm4gdCYmdFsxXXx8bnVsbH0sbm9Db25mbGljdDpmdW5jdGlvbigpe2lmKHIuU2Vjb25kTGV2ZWxEb21haW5zPT09dGhpcyl7ci5TZWNvbmRMZXZlbERvbWFpbnM9X31yZXR1cm4gdGhpc30saW5pdDpmdW5jdGlvbigpe3ZhciB0PScnO2Zvcih2YXIgYSBpbiBTLmxpc3Qpe2lmKCFoLmNhbGwoUy5saXN0LGEpKXtjb250aW51ZX12YXIgZT0nKCcrUy5saXN0W2FdKycpXC4nK2E7dCs9J3woJytlKycpJ31TLmhhc19leHByZXNzaW9uPW5ldyBSZWdFeHAoJ1xcLignK3Quc3Vic3RyKDEpKycpJCcsJ2knKTtTLmlzX2V4cHJlc3Npb249bmV3IFJlZ0V4cCgnXignK3Quc3Vic3RyKDEpKycpJCcsJ2knKX19O1MuaW5pdCgpO3JldHVybiBTfSkpOw0KLyohDQogKiBVUkkuanMgLSBNdXRhdGluZyBVUkxzDQogKg0KICogVmVyc2lvbjogMS4xMS4yDQogKg0KICogQXV0aG9yOiBSb2RuZXkgUmVobQ0KICogV2ViOiBodHRwOi8vbWVkaWFsaXplLmdpdGh1Yi5jb20vVVJJLmpzLw0KICoNCiAqIExpY2Vuc2VkIHVuZGVyDQogKiAgIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UNCiAqICAgR1BMIHYzIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9HUEwtMy4wDQogKg0KICovDQooZnVuY3Rpb24ocixmKXtpZih0eXBlb2YgZXhwb3J0cz09PSdvYmplY3QnKXttb2R1bGUuZXhwb3J0cz1mKHJlcXVpcmUoJy4vcHVueWNvZGUnKSxyZXF1aXJlKCcuL0lQdjYnKSxyZXF1aXJlKCcuL1NlY29uZExldmVsRG9tYWlucycpKX1lbHNlIGlmKHR5cGVvZiBkZWZpbmU9PT0nZnVuY3Rpb24nJiZkZWZpbmUuYW1kKXtyLlVSST1mKHIucHVueWNvZGUsci5JUHY2LHIuU2Vjb25kTGV2ZWxEb21haW5zLHIpO2RlZmluZShbXSxmdW5jdGlvbigpe3JldHVybiByLlVSSX0pfWVsc2V7ci5VUkk9ZihyLnB1bnljb2RlLHIuSVB2NixyLlNlY29uZExldmVsRG9tYWlucyxyKX19KHRoaXMsZnVuY3Rpb24oYSxJLFMscil7InVzZSBzdHJpY3QiO3ZhciBfPXImJnIuVVJJO2Z1bmN0aW9uIFUoYyxkKXtpZighKHRoaXMgaW5zdGFuY2VvZiBVKSl7cmV0dXJuIG5ldyBVKGMsZCl9aWYoYz09PXVuZGVmaW5lZCl7aWYodHlwZW9mIGxvY2F0aW9uIT09J3VuZGVmaW5lZCcpe2M9bG9jYXRpb24uaHJlZisiIn1lbHNle2M9IiJ9fXRoaXMuaHJlZihjKTtpZihkIT09dW5kZWZpbmVkKXtyZXR1cm4gdGhpcy5hYnNvbHV0ZVRvKGQpfXJldHVybiB0aGlzfTt2YXIgcD1VLnByb3RvdHlwZTt2YXIgaD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2Z1bmN0aW9uIGIocyl7cmV0dXJuIHMucmVwbGFjZSgvKFsuKis/Xj0hOiR7fSgpfFtcXVwvXFxdKS9nLCdcXCQxJyl9ZnVuY3Rpb24gZyh2KXtpZih2PT09dW5kZWZpbmVkKXtyZXR1cm4nVW5kZWZpbmVkJ31yZXR1cm4gU3RyaW5nKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2KSkuc2xpY2UoOCwtMSl9ZnVuY3Rpb24gZihjKXtyZXR1cm4gZyhjKT09PSJBcnJheSJ9ZnVuY3Rpb24gaihkLHYpe3ZhciBsPXt9O3ZhciBpLGM7aWYoZih2KSl7Zm9yKGk9MCxjPXYubGVuZ3RoO2k8YztpKyspe2xbdltpXV09dHJ1ZX19ZWxzZXtsW3ZdPXRydWV9Zm9yKGk9MCxjPWQubGVuZ3RoO2k8YztpKyspe2lmKGxbZFtpXV0hPT11bmRlZmluZWQpe2Quc3BsaWNlKGksMSk7Yy0tO2ktLX19cmV0dXJuIGR9ZnVuY3Rpb24gayhsLHYpe3ZhciBpLGM7aWYoZih2KSl7Zm9yKGk9MCxjPXYubGVuZ3RoO2k8YztpKyspe2lmKCFrKGwsdltpXSkpe3JldHVybiBmYWxzZX19cmV0dXJuIHRydWV9dmFyIGQ9Zyh2KTtmb3IoaT0wLGM9bC5sZW5ndGg7aTxjO2krKyl7aWYoZD09PSdSZWdFeHAnKXtpZih0eXBlb2YgbFtpXT09PSdzdHJpbmcnJiZsW2ldLm1hdGNoKHYpKXtyZXR1cm4gdHJ1ZX19ZWxzZSBpZihsW2ldPT09dil7cmV0dXJuIHRydWV9fXJldHVybiBmYWxzZX1mdW5jdGlvbiBtKGMsdCl7aWYoIWYoYyl8fCFmKHQpKXtyZXR1cm4gZmFsc2V9aWYoYy5sZW5ndGghPT10Lmxlbmd0aCl7cmV0dXJuIGZhbHNlfWMuc29ydCgpO3Quc29ydCgpO2Zvcih2YXIgaT0wLGw9Yy5sZW5ndGg7aTxsO2krKyl7aWYoY1tpXSE9PXRbaV0pe3JldHVybiBmYWxzZX19cmV0dXJuIHRydWV9VS5fcGFydHM9ZnVuY3Rpb24oKXtyZXR1cm57cHJvdG9jb2w6bnVsbCx1c2VybmFtZTpudWxsLHBhc3N3b3JkOm51bGwsaG9zdG5hbWU6bnVsbCx1cm46bnVsbCxwb3J0Om51bGwscGF0aDpudWxsLHF1ZXJ5Om51bGwsZnJhZ21lbnQ6bnVsbCxkdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnM6VS5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsZXNjYXBlUXVlcnlTcGFjZTpVLmVzY2FwZVF1ZXJ5U3BhY2V9fTtVLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycz1mYWxzZTtVLmVzY2FwZVF1ZXJ5U3BhY2U9dHJ1ZTtVLnByb3RvY29sX2V4cHJlc3Npb249L15bYS16XVthLXowLTktKy1dKiQvaTtVLmlkbl9leHByZXNzaW9uPS9bXmEtejAtOVwuLV0vaTtVLnB1bnljb2RlX2V4cHJlc3Npb249Lyh4bi0tKS9pO1UuaXA0X2V4cHJlc3Npb249L15cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9JC87VS5pcDZfZXhwcmVzc2lvbj0vXlxzKigoKFswLTlBLUZhLWZdezEsNH06KXs3fShbMC05QS1GYS1mXXsxLDR9fDopKXwoKFswLTlBLUZhLWZdezEsNH06KXs2fSg6WzAtOUEtRmEtZl17MSw0fXwoKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezV9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsMn0pfDooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezR9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsM30pfCgoOlswLTlBLUZhLWZdezEsNH0pPzooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXszfSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDR9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDJ9OigoMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkoXC4oMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkpezN9KSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezJ9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsNX0pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsM306KCgyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKShcLigyNVswLTVdfDJbMC00XVxkfDFcZFxkfFsxLTldP1xkKSl7M30pKXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7MX0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw2fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCw0fTooKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKFwuKDI1WzAtNV18MlswLTRdXGR8MVxkXGR8WzEtOV0/XGQpKXszfSkpfDopKXwoOigoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDd9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDV9OigoMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkoXC4oMjVbMC01XXwyWzAtNF1cZHwxXGRcZHxbMS05XT9cZCkpezN9KSl8OikpKSglLispP1xzKiQvO1UuZmluZF91cmlfZXhwcmVzc2lvbj0vXGIoKD86W2Etel1bXHctXSs6KD86XC97MSwzfXxbYS16MC05JV0pfHd3d1xkezAsM31bLl18W2EtejAtOS5cLV0rWy5dW2Etel17Miw0fVwvKSg/OlteXHMoKTw+XSt8XCgoW15ccygpPD5dK3woXChbXlxzKCk8Pl0rXCkpKSpcKSkrKD86XCgoW15ccygpPD5dK3woXChbXlxzKCk8Pl0rXCkpKSpcKXxbXlxzYCEoKVxbXF17fTs6JyIuLDw+P8KrwrvigJzigJ3igJjigJldKSkvaWc7VS5kZWZhdWx0UG9ydHM9e2h0dHA6IjgwIixodHRwczoiNDQzIixmdHA6IjIxIixnb3BoZXI6IjcwIix3czoiODAiLHdzczoiNDQzIn07VS5pbnZhbGlkX2hvc3RuYW1lX2NoYXJhY3RlcnM9L1teYS16QS1aMC05XC4tXS87VS5kb21BdHRyaWJ1dGVzPXsnYSc6J2hyZWYnLCdibG9ja3F1b3RlJzonY2l0ZScsJ2xpbmsnOidocmVmJywnYmFzZSc6J2hyZWYnLCdzY3JpcHQnOidzcmMnLCdmb3JtJzonYWN0aW9uJywnaW1nJzonc3JjJywnYXJlYSc6J2hyZWYnLCdpZnJhbWUnOidzcmMnLCdlbWJlZCc6J3NyYycsJ3NvdXJjZSc6J3NyYycsJ3RyYWNrJzonc3JjJywnaW5wdXQnOidzcmMnfTtVLmdldERvbUF0dHJpYnV0ZT1mdW5jdGlvbihjKXtpZighY3x8IWMubm9kZU5hbWUpe3JldHVybiB1bmRlZmluZWR9dmFyIGQ9Yy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKGQ9PT0naW5wdXQnJiZjLnR5cGUhPT0naW1hZ2UnKXtyZXR1cm4gdW5kZWZpbmVkfXJldHVybiBVLmRvbUF0dHJpYnV0ZXNbZF19O2Z1bmN0aW9uIG4odil7cmV0dXJuIGVzY2FwZSh2KX1mdW5jdGlvbiBvKHMpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQocykucmVwbGFjZSgvWyEnKCkqXS9nLG4pLnJlcGxhY2UoL1wqL2csIiUyQSIpfVUuZW5jb2RlPW87VS5kZWNvZGU9ZGVjb2RlVVJJQ29tcG9uZW50O1UuaXNvODg1OT1mdW5jdGlvbigpe1UuZW5jb2RlPWVzY2FwZTtVLmRlY29kZT11bmVzY2FwZX07VS51bmljb2RlPWZ1bmN0aW9uKCl7VS5lbmNvZGU9bztVLmRlY29kZT1kZWNvZGVVUklDb21wb25lbnR9O1UuY2hhcmFjdGVycz17cGF0aG5hbWU6e2VuY29kZTp7ZXhwcmVzc2lvbjovJSgyNHwyNnwyQnwyQ3wzQnwzRHwzQXw0MCkvaWcsbWFwOnsiJTI0IjoiJCIsIiUyNiI6IiYiLCIlMkIiOiIrIiwiJTJDIjoiLCIsIiUzQiI6IjsiLCIlM0QiOiI9IiwiJTNBIjoiOiIsIiU0MCI6IkAifX0sZGVjb2RlOntleHByZXNzaW9uOi9bXC9cPyNdL2csbWFwOnsiLyI6IiUyRiIsIj8iOiIlM0YiLCIjIjoiJTIzIn19fSxyZXNlcnZlZDp7ZW5jb2RlOntleHByZXNzaW9uOi8lKDIxfDIzfDI0fDI2fDI3fDI4fDI5fDJBfDJCfDJDfDJGfDNBfDNCfDNEfDNGfDQwfDVCfDVEKS9pZyxtYXA6eyIlM0EiOiI6IiwiJTJGIjoiLyIsIiUzRiI6Ij8iLCIlMjMiOiIjIiwiJTVCIjoiWyIsIiU1RCI6Il0iLCIlNDAiOiJAIiwiJTIxIjoiISIsIiUyNCI6IiQiLCIlMjYiOiImIiwiJTI3IjoiJyIsIiUyOCI6IigiLCIlMjkiOiIpIiwiJTJBIjoiKiIsIiUyQiI6IisiLCIlMkMiOiIsIiwiJTNCIjoiOyIsIiUzRCI6Ij0ifX19fTtVLmVuY29kZVF1ZXJ5PWZ1bmN0aW9uKHMsZSl7dmFyIGM9VS5lbmNvZGUocysiIik7cmV0dXJuIGU/Yy5yZXBsYWNlKC8lMjAvZywnKycpOmN9O1UuZGVjb2RlUXVlcnk9ZnVuY3Rpb24ocyxjKXtzKz0iIjt0cnl7cmV0dXJuIFUuZGVjb2RlKGM/cy5yZXBsYWNlKC9cKy9nLCclMjAnKTpzKX1jYXRjaChlKXtyZXR1cm4gc319O1UucmVjb2RlUGF0aD1mdW5jdGlvbihzKXt2YXIgYz0ocysiIikuc3BsaXQoJy8nKTtmb3IodmFyIGk9MCxsPWMubGVuZ3RoO2k8bDtpKyspe2NbaV09VS5lbmNvZGVQYXRoU2VnbWVudChVLmRlY29kZShjW2ldKSl9cmV0dXJuIGMuam9pbignLycpfTtVLmRlY29kZVBhdGg9ZnVuY3Rpb24ocyl7dmFyIGM9KHMrIiIpLnNwbGl0KCcvJyk7Zm9yKHZhciBpPTAsbD1jLmxlbmd0aDtpPGw7aSsrKXtjW2ldPVUuZGVjb2RlUGF0aFNlZ21lbnQoY1tpXSl9cmV0dXJuIGMuam9pbignLycpfTt2YXIgdT17J2VuY29kZSc6J2VuY29kZScsJ2RlY29kZSc6J2RlY29kZSd9O3ZhciB3O3ZhciB5PWZ1bmN0aW9uKGQsdyl7cmV0dXJuIGZ1bmN0aW9uKHMpe3JldHVybiBVW3ddKHMrIiIpLnJlcGxhY2UoVS5jaGFyYWN0ZXJzW2RdW3ddLmV4cHJlc3Npb24sZnVuY3Rpb24oYyl7cmV0dXJuIFUuY2hhcmFjdGVyc1tkXVt3XS5tYXBbY119KX19O2Zvcih3IGluIHUpe1VbdysiUGF0aFNlZ21lbnQiXT15KCJwYXRobmFtZSIsdVt3XSl9VS5lbmNvZGVSZXNlcnZlZD15KCJyZXNlcnZlZCIsImVuY29kZSIpO1UucGFyc2U9ZnVuY3Rpb24ocyxjKXt2YXIgZDtpZighYyl7Yz17fX1kPXMuaW5kZXhPZignIycpO2lmKGQ+LTEpe2MuZnJhZ21lbnQ9cy5zdWJzdHJpbmcoZCsxKXx8bnVsbDtzPXMuc3Vic3RyaW5nKDAsZCl9ZD1zLmluZGV4T2YoJz8nKTtpZihkPi0xKXtjLnF1ZXJ5PXMuc3Vic3RyaW5nKGQrMSl8fG51bGw7cz1zLnN1YnN0cmluZygwLGQpfWlmKHMuc3Vic3RyaW5nKDAsMik9PT0nLy8nKXtjLnByb3RvY29sPW51bGw7cz1zLnN1YnN0cmluZygyKTtzPVUucGFyc2VBdXRob3JpdHkocyxjKX1lbHNle2Q9cy5pbmRleE9mKCc6Jyk7aWYoZD4tMSl7Yy5wcm90b2NvbD1zLnN1YnN0cmluZygwLGQpfHxudWxsO2lmKGMucHJvdG9jb2wmJiFjLnByb3RvY29sLm1hdGNoKFUucHJvdG9jb2xfZXhwcmVzc2lvbikpe2MucHJvdG9jb2w9dW5kZWZpbmVkfWVsc2UgaWYoYy5wcm90b2NvbD09PSdmaWxlJyl7cz1zLnN1YnN0cmluZyhkKzMpfWVsc2UgaWYocy5zdWJzdHJpbmcoZCsxLGQrMyk9PT0nLy8nKXtzPXMuc3Vic3RyaW5nKGQrMyk7cz1VLnBhcnNlQXV0aG9yaXR5KHMsYyl9ZWxzZXtzPXMuc3Vic3RyaW5nKGQrMSk7Yy51cm49dHJ1ZX19fWMucGF0aD1zO3JldHVybiBjfTtVLnBhcnNlSG9zdD1mdW5jdGlvbihzLGMpe3ZhciBkPXMuaW5kZXhPZignLycpO3ZhciBlO3ZhciB0O2lmKGQ9PT0tMSl7ZD1zLmxlbmd0aH1pZihzLmNoYXJBdCgwKT09PSJbIil7ZT1zLmluZGV4T2YoJ10nKTtjLmhvc3RuYW1lPXMuc3Vic3RyaW5nKDEsZSl8fG51bGw7Yy5wb3J0PXMuc3Vic3RyaW5nKGUrMixkKXx8bnVsbH1lbHNlIGlmKHMuaW5kZXhPZignOicpIT09cy5sYXN0SW5kZXhPZignOicpKXtjLmhvc3RuYW1lPXMuc3Vic3RyaW5nKDAsZCl8fG51bGw7Yy5wb3J0PW51bGx9ZWxzZXt0PXMuc3Vic3RyaW5nKDAsZCkuc3BsaXQoJzonKTtjLmhvc3RuYW1lPXRbMF18fG51bGw7Yy5wb3J0PXRbMV18fG51bGx9aWYoYy5ob3N0bmFtZSYmcy5zdWJzdHJpbmcoZCkuY2hhckF0KDApIT09Jy8nKXtkKys7cz0iLyIrc31yZXR1cm4gcy5zdWJzdHJpbmcoZCl8fCcvJ307VS5wYXJzZUF1dGhvcml0eT1mdW5jdGlvbihzLGMpe3M9VS5wYXJzZVVzZXJpbmZvKHMsYyk7cmV0dXJuIFUucGFyc2VIb3N0KHMsYyl9O1UucGFyc2VVc2VyaW5mbz1mdW5jdGlvbihzLGMpe3ZhciBkPXMuaW5kZXhPZignLycpO3ZhciBlPWQ+LTE/cy5sYXN0SW5kZXhPZignQCcsZCk6cy5pbmRleE9mKCdAJyk7dmFyIHQ7aWYoZT4tMSYmKGQ9PT0tMXx8ZTxkKSl7dD1zLnN1YnN0cmluZygwLGUpLnNwbGl0KCc6Jyk7Yy51c2VybmFtZT10WzBdP1UuZGVjb2RlKHRbMF0pOm51bGw7dC5zaGlmdCgpO2MucGFzc3dvcmQ9dFswXT9VLmRlY29kZSh0LmpvaW4oJzonKSk6bnVsbDtzPXMuc3Vic3RyaW5nKGUrMSl9ZWxzZXtjLnVzZXJuYW1lPW51bGw7Yy5wYXNzd29yZD1udWxsfXJldHVybiBzfTtVLnBhcnNlUXVlcnk9ZnVuY3Rpb24ocyxlKXtpZighcyl7cmV0dXJue319cz1zLnJlcGxhY2UoLyYrL2csJyYnKS5yZXBsYWNlKC9eXD8qJip8JiskL2csJycpO2lmKCFzKXtyZXR1cm57fX12YXIgYz17fTt2YXIgZD1zLnNwbGl0KCcmJyk7dmFyIGw9ZC5sZW5ndGg7dmFyIHYsdCx4O2Zvcih2YXIgaT0wO2k8bDtpKyspe3Y9ZFtpXS5zcGxpdCgnPScpO3Q9VS5kZWNvZGVRdWVyeSh2LnNoaWZ0KCksZSk7eD12Lmxlbmd0aD9VLmRlY29kZVF1ZXJ5KHYuam9pbignPScpLGUpOm51bGw7aWYoY1t0XSl7aWYodHlwZW9mIGNbdF09PT0ic3RyaW5nIil7Y1t0XT1bY1t0XV19Y1t0XS5wdXNoKHgpfWVsc2V7Y1t0XT14fX1yZXR1cm4gY307VS5idWlsZD1mdW5jdGlvbihjKXt2YXIgdD0iIjtpZihjLnByb3RvY29sKXt0Kz1jLnByb3RvY29sKyI6In1pZighYy51cm4mJih0fHxjLmhvc3RuYW1lKSl7dCs9Jy8vJ310Kz0oVS5idWlsZEF1dGhvcml0eShjKXx8JycpO2lmKHR5cGVvZiBjLnBhdGg9PT0ic3RyaW5nIil7aWYoYy5wYXRoLmNoYXJBdCgwKSE9PScvJyYmdHlwZW9mIGMuaG9zdG5hbWU9PT0ic3RyaW5nIil7dCs9Jy8nfXQrPWMucGF0aH1pZih0eXBlb2YgYy5xdWVyeT09PSJzdHJpbmciJiZjLnF1ZXJ5KXt0Kz0nPycrYy5xdWVyeX1pZih0eXBlb2YgYy5mcmFnbWVudD09PSJzdHJpbmciJiZjLmZyYWdtZW50KXt0Kz0nIycrYy5mcmFnbWVudH1yZXR1cm4gdH07VS5idWlsZEhvc3Q9ZnVuY3Rpb24oYyl7dmFyIHQ9IiI7aWYoIWMuaG9zdG5hbWUpe3JldHVybiIifWVsc2UgaWYoVS5pcDZfZXhwcmVzc2lvbi50ZXN0KGMuaG9zdG5hbWUpKXtpZihjLnBvcnQpe3QrPSJbIitjLmhvc3RuYW1lKyJdOiIrYy5wb3J0fWVsc2V7dCs9Yy5ob3N0bmFtZX19ZWxzZXt0Kz1jLmhvc3RuYW1lO2lmKGMucG9ydCl7dCs9JzonK2MucG9ydH19cmV0dXJuIHR9O1UuYnVpbGRBdXRob3JpdHk9ZnVuY3Rpb24oYyl7cmV0dXJuIFUuYnVpbGRVc2VyaW5mbyhjKStVLmJ1aWxkSG9zdChjKX07VS5idWlsZFVzZXJpbmZvPWZ1bmN0aW9uKGMpe3ZhciB0PSIiO2lmKGMudXNlcm5hbWUpe3QrPVUuZW5jb2RlKGMudXNlcm5hbWUpO2lmKGMucGFzc3dvcmQpe3QrPSc6JytVLmVuY29kZShjLnBhc3N3b3JkKX10Kz0iQCJ9cmV0dXJuIHR9O1UuYnVpbGRRdWVyeT1mdW5jdGlvbihkLGMsZSl7dmFyIHQ9IiI7dmFyIGwscyxpLHY7Zm9yKHMgaW4gZCl7aWYoaC5jYWxsKGQscykmJnMpe2lmKGYoZFtzXSkpe2w9e307Zm9yKGk9MCx2PWRbc10ubGVuZ3RoO2k8djtpKyspe2lmKGRbc11baV0hPT11bmRlZmluZWQmJmxbZFtzXVtpXSsiIl09PT11bmRlZmluZWQpe3QrPSImIitVLmJ1aWxkUXVlcnlQYXJhbWV0ZXIocyxkW3NdW2ldLGUpO2lmKGMhPT10cnVlKXtsW2Rbc11baV0rIiJdPXRydWV9fX19ZWxzZSBpZihkW3NdIT09dW5kZWZpbmVkKXt0Kz0nJicrVS5idWlsZFF1ZXJ5UGFyYW1ldGVyKHMsZFtzXSxlKX19fXJldHVybiB0LnN1YnN0cmluZygxKX07VS5idWlsZFF1ZXJ5UGFyYW1ldGVyPWZ1bmN0aW9uKGMsdixlKXtyZXR1cm4gVS5lbmNvZGVRdWVyeShjLGUpKyh2IT09bnVsbD8iPSIrVS5lbmNvZGVRdWVyeSh2LGUpOiIiKX07VS5hZGRRdWVyeT1mdW5jdGlvbihkLGMsdil7aWYodHlwZW9mIGM9PT0ib2JqZWN0Iil7Zm9yKHZhciBlIGluIGMpe2lmKGguY2FsbChjLGUpKXtVLmFkZFF1ZXJ5KGQsZSxjW2VdKX19fWVsc2UgaWYodHlwZW9mIGM9PT0ic3RyaW5nIil7aWYoZFtjXT09PXVuZGVmaW5lZCl7ZFtjXT12O3JldHVybn1lbHNlIGlmKHR5cGVvZiBkW2NdPT09InN0cmluZyIpe2RbY109W2RbY11dfWlmKCFmKHYpKXt2PVt2XX1kW2NdPWRbY10uY29uY2F0KHYpfWVsc2V7dGhyb3cgbmV3IFR5cGVFcnJvcigiVVJJLmFkZFF1ZXJ5KCkgYWNjZXB0cyBhbiBvYmplY3QsIHN0cmluZyBhcyB0aGUgbmFtZSBwYXJhbWV0ZXIiKX19O1UucmVtb3ZlUXVlcnk9ZnVuY3Rpb24oZCxjLHYpe3ZhciBpLGwsZTtpZihmKGMpKXtmb3IoaT0wLGw9Yy5sZW5ndGg7aTxsO2krKyl7ZFtjW2ldXT11bmRlZmluZWR9fWVsc2UgaWYodHlwZW9mIGM9PT0ib2JqZWN0Iil7Zm9yKGUgaW4gYyl7aWYoaC5jYWxsKGMsZSkpe1UucmVtb3ZlUXVlcnkoZCxlLGNbZV0pfX19ZWxzZSBpZih0eXBlb2YgYz09PSJzdHJpbmciKXtpZih2IT09dW5kZWZpbmVkKXtpZihkW2NdPT09dil7ZFtjXT11bmRlZmluZWR9ZWxzZSBpZihmKGRbY10pKXtkW2NdPWooZFtjXSx2KX19ZWxzZXtkW2NdPXVuZGVmaW5lZH19ZWxzZXt0aHJvdyBuZXcgVHlwZUVycm9yKCJVUkkuYWRkUXVlcnkoKSBhY2NlcHRzIGFuIG9iamVjdCwgc3RyaW5nIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIiKX19O1UuaGFzUXVlcnk9ZnVuY3Rpb24oZCxjLHYsZSl7aWYodHlwZW9mIGM9PT0ib2JqZWN0Iil7Zm9yKHZhciBpIGluIGMpe2lmKGguY2FsbChjLGkpKXtpZighVS5oYXNRdWVyeShkLGksY1tpXSkpe3JldHVybiBmYWxzZX19fXJldHVybiB0cnVlfWVsc2UgaWYodHlwZW9mIGMhPT0ic3RyaW5nIil7dGhyb3cgbmV3IFR5cGVFcnJvcigiVVJJLmhhc1F1ZXJ5KCkgYWNjZXB0cyBhbiBvYmplY3QsIHN0cmluZyBhcyB0aGUgbmFtZSBwYXJhbWV0ZXIiKX1zd2l0Y2goZyh2KSl7Y2FzZSdVbmRlZmluZWQnOnJldHVybiBjIGluIGQ7Y2FzZSdCb29sZWFuJzp2YXIgbD1Cb29sZWFuKGYoZFtjXSk/ZFtjXS5sZW5ndGg6ZFtjXSk7cmV0dXJuIHY9PT1sO2Nhc2UnRnVuY3Rpb24nOnJldHVybiEhdihkW2NdLGMsZCk7Y2FzZSdBcnJheSc6aWYoIWYoZFtjXSkpe3JldHVybiBmYWxzZX12YXIgcz1lP2s6bTtyZXR1cm4gcyhkW2NdLHYpO2Nhc2UnUmVnRXhwJzppZighZihkW2NdKSl7cmV0dXJuIEJvb2xlYW4oZFtjXSYmZFtjXS5tYXRjaCh2KSl9aWYoIWUpe3JldHVybiBmYWxzZX1yZXR1cm4gayhkW2NdLHYpO2Nhc2UnTnVtYmVyJzp2PVN0cmluZyh2KTtjYXNlJ1N0cmluZyc6aWYoIWYoZFtjXSkpe3JldHVybiBkW2NdPT09dn1pZighZSl7cmV0dXJuIGZhbHNlfXJldHVybiBrKGRbY10sdik7ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKCJVUkkuaGFzUXVlcnkoKSBhY2NlcHRzIHVuZGVmaW5lZCwgYm9vbGVhbiwgc3RyaW5nLCBudW1iZXIsIFJlZ0V4cCwgRnVuY3Rpb24gYXMgdGhlIHZhbHVlIHBhcmFtZXRlciIpfX07VS5jb21tb25QYXRoPWZ1bmN0aW9uKGMsdCl7dmFyIGw9TWF0aC5taW4oYy5sZW5ndGgsdC5sZW5ndGgpO3ZhciBkO2ZvcihkPTA7ZDxsO2QrKyl7aWYoYy5jaGFyQXQoZCkhPT10LmNoYXJBdChkKSl7ZC0tO2JyZWFrfX1pZihkPDEpe3JldHVybiBjLmNoYXJBdCgwKT09PXQuY2hhckF0KDApJiZjLmNoYXJBdCgwKT09PScvJz8nLyc6Jyd9aWYoYy5jaGFyQXQoZCkhPT0nLyd8fHQuY2hhckF0KGQpIT09Jy8nKXtkPWMuc3Vic3RyaW5nKDAsZCkubGFzdEluZGV4T2YoJy8nKX1yZXR1cm4gYy5zdWJzdHJpbmcoMCxkKzEpfTtVLndpdGhpblN0cmluZz1mdW5jdGlvbihzLGMpe3JldHVybiBzLnJlcGxhY2UoVS5maW5kX3VyaV9leHByZXNzaW9uLGMpfTtVLmVuc3VyZVZhbGlkSG9zdG5hbWU9ZnVuY3Rpb24odil7aWYodi5tYXRjaChVLmludmFsaWRfaG9zdG5hbWVfY2hhcmFjdGVycykpe2lmKCFhKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJIb3N0bmFtZSAnIit2KyInIGNvbnRhaW5zIGNoYXJhY3RlcnMgb3RoZXIgdGhhbiBbQS1aMC05Li1dIGFuZCBQdW55Y29kZS5qcyBpcyBub3QgYXZhaWxhYmxlIil9aWYoYS50b0FTQ0lJKHYpLm1hdGNoKFUuaW52YWxpZF9ob3N0bmFtZV9jaGFyYWN0ZXJzKSl7dGhyb3cgbmV3IFR5cGVFcnJvcigiSG9zdG5hbWUgJyIrdisiJyBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOS4tXSIpfX19O1Uubm9Db25mbGljdD1mdW5jdGlvbihjKXtpZihjKXt2YXIgZD17VVJJOnRoaXMubm9Db25mbGljdCgpfTtpZihVUklUZW1wbGF0ZSYmdHlwZW9mIFVSSVRlbXBsYXRlLm5vQ29uZmxpY3Q9PSJmdW5jdGlvbiIpe2QuVVJJVGVtcGxhdGU9VVJJVGVtcGxhdGUubm9Db25mbGljdCgpfWlmKEkmJnR5cGVvZiBJLm5vQ29uZmxpY3Q9PSJmdW5jdGlvbiIpe2QuSVB2Nj1JLm5vQ29uZmxpY3QoKX1pZihTZWNvbmRMZXZlbERvbWFpbnMmJnR5cGVvZiBTZWNvbmRMZXZlbERvbWFpbnMubm9Db25mbGljdD09ImZ1bmN0aW9uIil7ZC5TZWNvbmRMZXZlbERvbWFpbnM9U2Vjb25kTGV2ZWxEb21haW5zLm5vQ29uZmxpY3QoKX1yZXR1cm4gZH1lbHNlIGlmKHIuVVJJPT09dGhpcyl7ci5VUkk9X31yZXR1cm4gdGhpc307cC5idWlsZD1mdW5jdGlvbihkKXtpZihkPT09dHJ1ZSl7dGhpcy5fZGVmZXJyZWRfYnVpbGQ9dHJ1ZX1lbHNlIGlmKGQ9PT11bmRlZmluZWR8fHRoaXMuX2RlZmVycmVkX2J1aWxkKXt0aGlzLl9zdHJpbmc9VS5idWlsZCh0aGlzLl9wYXJ0cyk7dGhpcy5fZGVmZXJyZWRfYnVpbGQ9ZmFsc2V9cmV0dXJuIHRoaXN9O3AuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFUodGhpcyl9O3AudmFsdWVPZj1wLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnVpbGQoZmFsc2UpLl9zdHJpbmd9O3U9e3Byb3RvY29sOidwcm90b2NvbCcsdXNlcm5hbWU6J3VzZXJuYW1lJyxwYXNzd29yZDoncGFzc3dvcmQnLGhvc3RuYW1lOidob3N0bmFtZScscG9ydDoncG9ydCd9O3k9ZnVuY3Rpb24odyl7cmV0dXJuIGZ1bmN0aW9uKHYsYyl7aWYodj09PXVuZGVmaW5lZCl7cmV0dXJuIHRoaXMuX3BhcnRzW3ddfHwiIn1lbHNle3RoaXMuX3BhcnRzW3ddPXZ8fG51bGw7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9fX07Zm9yKHcgaW4gdSl7cFt3XT15KHVbd10pfXU9e3F1ZXJ5Oic/JyxmcmFnbWVudDonIyd9O3k9ZnVuY3Rpb24odyxjKXtyZXR1cm4gZnVuY3Rpb24odixkKXtpZih2PT09dW5kZWZpbmVkKXtyZXR1cm4gdGhpcy5fcGFydHNbd118fCIifWVsc2V7aWYodiE9PW51bGwpe3Y9disiIjtpZih2LmNoYXJBdCgwKT09PWMpe3Y9di5zdWJzdHJpbmcoMSl9fXRoaXMuX3BhcnRzW3ddPXY7dGhpcy5idWlsZCghZCk7cmV0dXJuIHRoaXN9fX07Zm9yKHcgaW4gdSl7cFt3XT15KHcsdVt3XSl9dT17c2VhcmNoOlsnPycsJ3F1ZXJ5J10saGFzaDpbJyMnLCdmcmFnbWVudCddfTt5PWZ1bmN0aW9uKHcsYyl7cmV0dXJuIGZ1bmN0aW9uKHYsZCl7dmFyIHQ9dGhpc1t3XSh2LGQpO3JldHVybiB0eXBlb2YgdD09PSJzdHJpbmciJiZ0Lmxlbmd0aD8oYyt0KTp0fX07Zm9yKHcgaW4gdSl7cFt3XT15KHVbd11bMV0sdVt3XVswXSl9cC5wYXRobmFtZT1mdW5jdGlvbih2LGMpe2lmKHY9PT11bmRlZmluZWR8fHY9PT10cnVlKXt2YXIgZD10aGlzLl9wYXJ0cy5wYXRofHwodGhpcy5fcGFydHMuaG9zdG5hbWU/Jy8nOicnKTtyZXR1cm4gdj9VLmRlY29kZVBhdGgoZCk6ZH1lbHNle3RoaXMuX3BhcnRzLnBhdGg9dj9VLnJlY29kZVBhdGgodik6Ii8iO3RoaXMuYnVpbGQoIWMpO3JldHVybiB0aGlzfX07cC5wYXRoPXAucGF0aG5hbWU7cC5ocmVmPWZ1bmN0aW9uKGMsZCl7dmFyIGU7aWYoYz09PXVuZGVmaW5lZCl7cmV0dXJuIHRoaXMudG9TdHJpbmcoKX10aGlzLl9zdHJpbmc9IiI7dGhpcy5fcGFydHM9VS5fcGFydHMoKTt2YXIgXz1jIGluc3RhbmNlb2YgVTt2YXIgaT10eXBlb2YgYz09PSJvYmplY3QiJiYoYy5ob3N0bmFtZXx8Yy5wYXRofHxjLnBhdGhuYW1lKTtpZihjLm5vZGVOYW1lKXt2YXIgbD1VLmdldERvbUF0dHJpYnV0ZShjKTtjPWNbbF18fCIiO2k9ZmFsc2V9aWYoIV8mJmkmJmMucGF0aG5hbWUhPT11bmRlZmluZWQpe2M9Yy50b1N0cmluZygpfWlmKHR5cGVvZiBjPT09InN0cmluZyIpe3RoaXMuX3BhcnRzPVUucGFyc2UoYyx0aGlzLl9wYXJ0cyl9ZWxzZSBpZihffHxpKXt2YXIgcz1fP2MuX3BhcnRzOmM7Zm9yKGUgaW4gcyl7aWYoaC5jYWxsKHRoaXMuX3BhcnRzLGUpKXt0aGlzLl9wYXJ0c1tlXT1zW2VdfX19ZWxzZXt0aHJvdyBuZXcgVHlwZUVycm9yKCJpbnZhbGlkIGlucHV0Iil9dGhpcy5idWlsZCghZCk7cmV0dXJuIHRoaXN9O3AuaXM9ZnVuY3Rpb24oYyl7dmFyIGk9ZmFsc2U7dmFyIGQ9ZmFsc2U7dmFyIGU9ZmFsc2U7dmFyIGw9ZmFsc2U7dmFyIHM9ZmFsc2U7dmFyIHQ9ZmFsc2U7dmFyIGE9ZmFsc2U7dmFyIHY9IXRoaXMuX3BhcnRzLnVybjtpZih0aGlzLl9wYXJ0cy5ob3N0bmFtZSl7dj1mYWxzZTtkPVUuaXA0X2V4cHJlc3Npb24udGVzdCh0aGlzLl9wYXJ0cy5ob3N0bmFtZSk7ZT1VLmlwNl9leHByZXNzaW9uLnRlc3QodGhpcy5fcGFydHMuaG9zdG5hbWUpO2k9ZHx8ZTtsPSFpO3M9bCYmUyYmUy5oYXModGhpcy5fcGFydHMuaG9zdG5hbWUpO3Q9bCYmVS5pZG5fZXhwcmVzc2lvbi50ZXN0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKTthPWwmJlUucHVueWNvZGVfZXhwcmVzc2lvbi50ZXN0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKX1zd2l0Y2goYy50b0xvd2VyQ2FzZSgpKXtjYXNlJ3JlbGF0aXZlJzpyZXR1cm4gdjtjYXNlJ2Fic29sdXRlJzpyZXR1cm4hdjtjYXNlJ2RvbWFpbic6Y2FzZSduYW1lJzpyZXR1cm4gbDtjYXNlJ3NsZCc6cmV0dXJuIHM7Y2FzZSdpcCc6cmV0dXJuIGk7Y2FzZSdpcDQnOmNhc2UnaXB2NCc6Y2FzZSdpbmV0NCc6cmV0dXJuIGQ7Y2FzZSdpcDYnOmNhc2UnaXB2Nic6Y2FzZSdpbmV0Nic6cmV0dXJuIGU7Y2FzZSdpZG4nOnJldHVybiB0O2Nhc2UndXJsJzpyZXR1cm4hdGhpcy5fcGFydHMudXJuO2Nhc2UndXJuJzpyZXR1cm4hIXRoaXMuX3BhcnRzLnVybjtjYXNlJ3B1bnljb2RlJzpyZXR1cm4gYX1yZXR1cm4gbnVsbH07dmFyIHo9cC5wcm90b2NvbDt2YXIgQT1wLnBvcnQ7dmFyIEI9cC5ob3N0bmFtZTtwLnByb3RvY29sPWZ1bmN0aW9uKHYsYyl7aWYodiE9PXVuZGVmaW5lZCl7aWYodil7dj12LnJlcGxhY2UoLzooXC9cLyk/JC8sJycpO2lmKHYubWF0Y2goL1teYS16QS16MC05XC4rLV0vKSl7dGhyb3cgbmV3IFR5cGVFcnJvcigiUHJvdG9jb2wgJyIrdisiJyBjb250YWlucyBjaGFyYWN0ZXJzIG90aGVyIHRoYW4gW0EtWjAtOS4rLV0iKX19fXJldHVybiB6LmNhbGwodGhpcyx2LGMpfTtwLnNjaGVtZT1wLnByb3RvY29sO3AucG9ydD1mdW5jdGlvbih2LGMpe2lmKHRoaXMuX3BhcnRzLnVybil7cmV0dXJuIHY9PT11bmRlZmluZWQ/Jyc6dGhpc31pZih2IT09dW5kZWZpbmVkKXtpZih2PT09MCl7dj1udWxsfWlmKHYpe3YrPSIiO2lmKHYuY2hhckF0KDApPT09IjoiKXt2PXYuc3Vic3RyaW5nKDEpfWlmKHYubWF0Y2goL1teMC05XS8pKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJQb3J0ICciK3YrIicgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFswLTldIil9fX1yZXR1cm4gQS5jYWxsKHRoaXMsdixjKX07cC5ob3N0bmFtZT1mdW5jdGlvbih2LGMpe2lmKHRoaXMuX3BhcnRzLnVybil7cmV0dXJuIHY9PT11bmRlZmluZWQ/Jyc6dGhpc31pZih2IT09dW5kZWZpbmVkKXt2YXIgeD17fTtVLnBhcnNlSG9zdCh2LHgpO3Y9eC5ob3N0bmFtZX1yZXR1cm4gQi5jYWxsKHRoaXMsdixjKX07cC5ob3N0PWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHY9PT11bmRlZmluZWQpe3JldHVybiB0aGlzLl9wYXJ0cy5ob3N0bmFtZT9VLmJ1aWxkSG9zdCh0aGlzLl9wYXJ0cyk6IiJ9ZWxzZXtVLnBhcnNlSG9zdCh2LHRoaXMuX3BhcnRzKTt0aGlzLmJ1aWxkKCFjKTtyZXR1cm4gdGhpc319O3AuYXV0aG9yaXR5PWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHY9PT11bmRlZmluZWQpe3JldHVybiB0aGlzLl9wYXJ0cy5ob3N0bmFtZT9VLmJ1aWxkQXV0aG9yaXR5KHRoaXMuX3BhcnRzKToiIn1lbHNle1UucGFyc2VBdXRob3JpdHkodix0aGlzLl9wYXJ0cyk7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9fTtwLnVzZXJpbmZvPWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHY9PT11bmRlZmluZWQpe2lmKCF0aGlzLl9wYXJ0cy51c2VybmFtZSl7cmV0dXJuIiJ9dmFyIHQ9VS5idWlsZFVzZXJpbmZvKHRoaXMuX3BhcnRzKTtyZXR1cm4gdC5zdWJzdHJpbmcoMCx0Lmxlbmd0aC0xKX1lbHNle2lmKHZbdi5sZW5ndGgtMV0hPT0nQCcpe3YrPSdAJ31VLnBhcnNlVXNlcmluZm8odix0aGlzLl9wYXJ0cyk7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9fTtwLnJlc291cmNlPWZ1bmN0aW9uKHYsYyl7dmFyIGQ7aWYodj09PXVuZGVmaW5lZCl7cmV0dXJuIHRoaXMucGF0aCgpK3RoaXMuc2VhcmNoKCkrdGhpcy5oYXNoKCl9ZD1VLnBhcnNlKHYpO3RoaXMuX3BhcnRzLnBhdGg9ZC5wYXRoO3RoaXMuX3BhcnRzLnF1ZXJ5PWQucXVlcnk7dGhpcy5fcGFydHMuZnJhZ21lbnQ9ZC5mcmFnbWVudDt0aGlzLmJ1aWxkKCFjKTtyZXR1cm4gdGhpc307cC5zdWJkb21haW49ZnVuY3Rpb24odixjKXtpZih0aGlzLl9wYXJ0cy51cm4pe3JldHVybiB2PT09dW5kZWZpbmVkPycnOnRoaXN9aWYodj09PXVuZGVmaW5lZCl7aWYoIXRoaXMuX3BhcnRzLmhvc3RuYW1lfHx0aGlzLmlzKCdJUCcpKXtyZXR1cm4iIn12YXIgZD10aGlzLl9wYXJ0cy5ob3N0bmFtZS5sZW5ndGgtdGhpcy5kb21haW4oKS5sZW5ndGgtMTtyZXR1cm4gdGhpcy5fcGFydHMuaG9zdG5hbWUuc3Vic3RyaW5nKDAsZCl8fCIifWVsc2V7dmFyIGU9dGhpcy5fcGFydHMuaG9zdG5hbWUubGVuZ3RoLXRoaXMuZG9tYWluKCkubGVuZ3RoO3ZhciBzPXRoaXMuX3BhcnRzLmhvc3RuYW1lLnN1YnN0cmluZygwLGUpO3ZhciBpPW5ldyBSZWdFeHAoJ14nK2IocykpO2lmKHYmJnYuY2hhckF0KHYubGVuZ3RoLTEpIT09Jy4nKXt2Kz0iLiJ9aWYodil7VS5lbnN1cmVWYWxpZEhvc3RuYW1lKHYpfXRoaXMuX3BhcnRzLmhvc3RuYW1lPXRoaXMuX3BhcnRzLmhvc3RuYW1lLnJlcGxhY2UoaSx2KTt0aGlzLmJ1aWxkKCFjKTtyZXR1cm4gdGhpc319O3AuZG9tYWluPWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHR5cGVvZiB2PT09J2Jvb2xlYW4nKXtjPXY7dj11bmRlZmluZWR9aWYodj09PXVuZGVmaW5lZCl7aWYoIXRoaXMuX3BhcnRzLmhvc3RuYW1lfHx0aGlzLmlzKCdJUCcpKXtyZXR1cm4iIn12YXIgdD10aGlzLl9wYXJ0cy5ob3N0bmFtZS5tYXRjaCgvXC4vZyk7aWYodCYmdC5sZW5ndGg8Mil7cmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lfXZhciBlPXRoaXMuX3BhcnRzLmhvc3RuYW1lLmxlbmd0aC10aGlzLnRsZChjKS5sZW5ndGgtMTtlPXRoaXMuX3BhcnRzLmhvc3RuYW1lLmxhc3RJbmRleE9mKCcuJyxlLTEpKzE7cmV0dXJuIHRoaXMuX3BhcnRzLmhvc3RuYW1lLnN1YnN0cmluZyhlKXx8IiJ9ZWxzZXtpZighdil7dGhyb3cgbmV3IFR5cGVFcnJvcigiY2Fubm90IHNldCBkb21haW4gZW1wdHkiKX1VLmVuc3VyZVZhbGlkSG9zdG5hbWUodik7aWYoIXRoaXMuX3BhcnRzLmhvc3RuYW1lfHx0aGlzLmlzKCdJUCcpKXt0aGlzLl9wYXJ0cy5ob3N0bmFtZT12fWVsc2V7dmFyIGQ9bmV3IFJlZ0V4cChiKHRoaXMuZG9tYWluKCkpKyIkIik7dGhpcy5fcGFydHMuaG9zdG5hbWU9dGhpcy5fcGFydHMuaG9zdG5hbWUucmVwbGFjZShkLHYpfXRoaXMuYnVpbGQoIWMpO3JldHVybiB0aGlzfX07cC50bGQ9ZnVuY3Rpb24odixjKXtpZih0aGlzLl9wYXJ0cy51cm4pe3JldHVybiB2PT09dW5kZWZpbmVkPycnOnRoaXN9aWYodHlwZW9mIHY9PT0nYm9vbGVhbicpe2M9djt2PXVuZGVmaW5lZH1pZih2PT09dW5kZWZpbmVkKXtpZighdGhpcy5fcGFydHMuaG9zdG5hbWV8fHRoaXMuaXMoJ0lQJykpe3JldHVybiIifXZhciBkPXRoaXMuX3BhcnRzLmhvc3RuYW1lLmxhc3RJbmRleE9mKCcuJyk7dmFyIHQ9dGhpcy5fcGFydHMuaG9zdG5hbWUuc3Vic3RyaW5nKGQrMSk7aWYoYyE9PXRydWUmJlMmJlMubGlzdFt0LnRvTG93ZXJDYXNlKCldKXtyZXR1cm4gUy5nZXQodGhpcy5fcGFydHMuaG9zdG5hbWUpfHx0fXJldHVybiB0fWVsc2V7dmFyIGU7aWYoIXYpe3Rocm93IG5ldyBUeXBlRXJyb3IoImNhbm5vdCBzZXQgVExEIGVtcHR5Iil9ZWxzZSBpZih2Lm1hdGNoKC9bXmEtekEtWjAtOS1dLykpe2lmKFMmJlMuaXModikpe2U9bmV3IFJlZ0V4cChiKHRoaXMudGxkKCkpKyIkIik7dGhpcy5fcGFydHMuaG9zdG5hbWU9dGhpcy5fcGFydHMuaG9zdG5hbWUucmVwbGFjZShlLHYpfWVsc2V7dGhyb3cgbmV3IFR5cGVFcnJvcigiVExEICciK3YrIicgY29udGFpbnMgY2hhcmFjdGVycyBvdGhlciB0aGFuIFtBLVowLTldIil9fWVsc2UgaWYoIXRoaXMuX3BhcnRzLmhvc3RuYW1lfHx0aGlzLmlzKCdJUCcpKXt0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoImNhbm5vdCBzZXQgVExEIG9uIG5vbi1kb21haW4gaG9zdCIpfWVsc2V7ZT1uZXcgUmVnRXhwKGIodGhpcy50bGQoKSkrIiQiKTt0aGlzLl9wYXJ0cy5ob3N0bmFtZT10aGlzLl9wYXJ0cy5ob3N0bmFtZS5yZXBsYWNlKGUsdil9dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9fTtwLmRpcmVjdG9yeT1mdW5jdGlvbih2LGMpe2lmKHRoaXMuX3BhcnRzLnVybil7cmV0dXJuIHY9PT11bmRlZmluZWQ/Jyc6dGhpc31pZih2PT09dW5kZWZpbmVkfHx2PT09dHJ1ZSl7aWYoIXRoaXMuX3BhcnRzLnBhdGgmJiF0aGlzLl9wYXJ0cy5ob3N0bmFtZSl7cmV0dXJuJyd9aWYodGhpcy5fcGFydHMucGF0aD09PScvJyl7cmV0dXJuJy8nfXZhciBkPXRoaXMuX3BhcnRzLnBhdGgubGVuZ3RoLXRoaXMuZmlsZW5hbWUoKS5sZW5ndGgtMTt2YXIgaT10aGlzLl9wYXJ0cy5wYXRoLnN1YnN0cmluZygwLGQpfHwodGhpcy5fcGFydHMuaG9zdG5hbWU/Ii8iOiIiKTtyZXR1cm4gdj9VLmRlY29kZVBhdGgoaSk6aX1lbHNle3ZhciBlPXRoaXMuX3BhcnRzLnBhdGgubGVuZ3RoLXRoaXMuZmlsZW5hbWUoKS5sZW5ndGg7dmFyIGw9dGhpcy5fcGFydHMucGF0aC5zdWJzdHJpbmcoMCxlKTt2YXIgcz1uZXcgUmVnRXhwKCdeJytiKGwpKTtpZighdGhpcy5pcygncmVsYXRpdmUnKSl7aWYoIXYpe3Y9Jy8nfWlmKHYuY2hhckF0KDApIT09Jy8nKXt2PSIvIit2fX1pZih2JiZ2LmNoYXJBdCh2Lmxlbmd0aC0xKSE9PScvJyl7dis9Jy8nfXY9VS5yZWNvZGVQYXRoKHYpO3RoaXMuX3BhcnRzLnBhdGg9dGhpcy5fcGFydHMucGF0aC5yZXBsYWNlKHMsdik7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9fTtwLmZpbGVuYW1lPWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHY9PT11bmRlZmluZWR8fHY9PT10cnVlKXtpZighdGhpcy5fcGFydHMucGF0aHx8dGhpcy5fcGFydHMucGF0aD09PScvJyl7cmV0dXJuIiJ9dmFyIGQ9dGhpcy5fcGFydHMucGF0aC5sYXN0SW5kZXhPZignLycpO3ZhciBlPXRoaXMuX3BhcnRzLnBhdGguc3Vic3RyaW5nKGQrMSk7cmV0dXJuIHY/VS5kZWNvZGVQYXRoU2VnbWVudChlKTplfWVsc2V7dmFyIGk9ZmFsc2U7aWYodi5jaGFyQXQoMCk9PT0nLycpe3Y9di5zdWJzdHJpbmcoMSl9aWYodi5tYXRjaCgvXC4/XC8vKSl7aT10cnVlfXZhciBsPW5ldyBSZWdFeHAoYih0aGlzLmZpbGVuYW1lKCkpKyIkIik7dj1VLnJlY29kZVBhdGgodik7dGhpcy5fcGFydHMucGF0aD10aGlzLl9wYXJ0cy5wYXRoLnJlcGxhY2UobCx2KTtpZihpKXt0aGlzLm5vcm1hbGl6ZVBhdGgoYyl9ZWxzZXt0aGlzLmJ1aWxkKCFjKX1yZXR1cm4gdGhpc319O3Auc3VmZml4PWZ1bmN0aW9uKHYsYyl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdj09PXVuZGVmaW5lZD8nJzp0aGlzfWlmKHY9PT11bmRlZmluZWR8fHY9PT10cnVlKXtpZighdGhpcy5fcGFydHMucGF0aHx8dGhpcy5fcGFydHMucGF0aD09PScvJyl7cmV0dXJuIiJ9dmFyIGQ9dGhpcy5maWxlbmFtZSgpO3ZhciBlPWQubGFzdEluZGV4T2YoJy4nKTt2YXIgcyxpO2lmKGU9PT0tMSl7cmV0dXJuIiJ9cz1kLnN1YnN0cmluZyhlKzEpO2k9KC9eW2EtejAtOSVdKyQvaSkudGVzdChzKT9zOiIiO3JldHVybiB2P1UuZGVjb2RlUGF0aFNlZ21lbnQoaSk6aX1lbHNle2lmKHYuY2hhckF0KDApPT09Jy4nKXt2PXYuc3Vic3RyaW5nKDEpfXZhciBsPXRoaXMuc3VmZml4KCk7dmFyIHQ7aWYoIWwpe2lmKCF2KXtyZXR1cm4gdGhpc310aGlzLl9wYXJ0cy5wYXRoKz0nLicrVS5yZWNvZGVQYXRoKHYpfWVsc2UgaWYoIXYpe3Q9bmV3IFJlZ0V4cChiKCIuIitsKSsiJCIpfWVsc2V7dD1uZXcgUmVnRXhwKGIobCkrIiQiKX1pZih0KXt2PVUucmVjb2RlUGF0aCh2KTt0aGlzLl9wYXJ0cy5wYXRoPXRoaXMuX3BhcnRzLnBhdGgucmVwbGFjZSh0LHYpfXRoaXMuYnVpbGQoIWMpO3JldHVybiB0aGlzfX07cC5zZWdtZW50PWZ1bmN0aW9uKHMsdixjKXt2YXIgZD10aGlzLl9wYXJ0cy51cm4/JzonOicvJzt2YXIgZT10aGlzLnBhdGgoKTt2YXIgdD1lLnN1YnN0cmluZygwLDEpPT09Jy8nO3ZhciB4PWUuc3BsaXQoZCk7aWYocyE9PXVuZGVmaW5lZCYmdHlwZW9mIHMhPT0nbnVtYmVyJyl7Yz12O3Y9cztzPXVuZGVmaW5lZH1pZihzIT09dW5kZWZpbmVkJiZ0eXBlb2YgcyE9PSdudW1iZXInKXt0aHJvdyBuZXcgRXJyb3IoIkJhZCBzZWdtZW50ICciK3MrIicsIG11c3QgYmUgMC1iYXNlZCBpbnRlZ2VyIil9aWYodCl7eC5zaGlmdCgpfWlmKHM8MCl7cz1NYXRoLm1heCh4Lmxlbmd0aCtzLDApfWlmKHY9PT11bmRlZmluZWQpe3JldHVybiBzPT09dW5kZWZpbmVkP3g6eFtzXX1lbHNlIGlmKHM9PT1udWxsfHx4W3NdPT09dW5kZWZpbmVkKXtpZihmKHYpKXt4PVtdO2Zvcih2YXIgaT0wLGw9di5sZW5ndGg7aTxsO2krKyl7aWYoIXZbaV0ubGVuZ3RoJiYoIXgubGVuZ3RofHwheFt4Lmxlbmd0aC0xXS5sZW5ndGgpKXtjb250aW51ZX1pZih4Lmxlbmd0aCYmIXhbeC5sZW5ndGgtMV0ubGVuZ3RoKXt4LnBvcCgpfXgucHVzaCh2W2ldKX19ZWxzZSBpZih2fHwodHlwZW9mIHY9PT0ic3RyaW5nIikpe2lmKHhbeC5sZW5ndGgtMV09PT0iIil7eFt4Lmxlbmd0aC0xXT12fWVsc2V7eC5wdXNoKHYpfX19ZWxzZXtpZih2fHwodHlwZW9mIHY9PT0ic3RyaW5nIiYmdi5sZW5ndGgpKXt4W3NdPXZ9ZWxzZXt4LnNwbGljZShzLDEpfX1pZih0KXt4LnVuc2hpZnQoIiIpfXJldHVybiB0aGlzLnBhdGgoeC5qb2luKGQpLGMpfTtwLnNlZ21lbnRDb2RlZD1mdW5jdGlvbihzLHYsYyl7dmFyIGQsaSxsO2lmKHR5cGVvZiBzIT09J251bWJlcicpe2M9djt2PXM7cz11bmRlZmluZWR9aWYodj09PXVuZGVmaW5lZCl7ZD10aGlzLnNlZ21lbnQocyx2LGMpO2lmKCFmKGQpKXtkPWQhPT11bmRlZmluZWQ/VS5kZWNvZGUoZCk6dW5kZWZpbmVkfWVsc2V7Zm9yKGk9MCxsPWQubGVuZ3RoO2k8bDtpKyspe2RbaV09VS5kZWNvZGUoZFtpXSl9fXJldHVybiBkfWlmKCFmKHYpKXt2PXR5cGVvZiB2PT09J3N0cmluZyc/VS5lbmNvZGUodik6dn1lbHNle2ZvcihpPTAsbD12Lmxlbmd0aDtpPGw7aSsrKXt2W2ldPVUuZGVjb2RlKHZbaV0pfX1yZXR1cm4gdGhpcy5zZWdtZW50KHMsdixjKX07dmFyIHE9cC5xdWVyeTtwLnF1ZXJ5PWZ1bmN0aW9uKHYsYyl7aWYodj09PXRydWUpe3JldHVybiBVLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSl9ZWxzZSBpZih0eXBlb2Ygdj09PSJmdW5jdGlvbiIpe3ZhciBkPVUucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSx0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTt2YXIgZT12LmNhbGwodGhpcyxkKTt0aGlzLl9wYXJ0cy5xdWVyeT1VLmJ1aWxkUXVlcnkoZXx8ZCx0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9ZWxzZSBpZih2IT09dW5kZWZpbmVkJiZ0eXBlb2YgdiE9PSJzdHJpbmciKXt0aGlzLl9wYXJ0cy5xdWVyeT1VLmJ1aWxkUXVlcnkodix0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9ZWxzZXtyZXR1cm4gcS5jYWxsKHRoaXMsdixjKX19O3Auc2V0UXVlcnk9ZnVuY3Rpb24oYyx2LGQpe3ZhciBlPVUucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSx0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKTtpZih0eXBlb2YgYz09PSJvYmplY3QiKXtmb3IodmFyIGkgaW4gYyl7aWYoaC5jYWxsKGMsaSkpe2VbaV09Y1tpXX19fWVsc2UgaWYodHlwZW9mIGM9PT0ic3RyaW5nIil7ZVtjXT12IT09dW5kZWZpbmVkP3Y6bnVsbH1lbHNle3Rocm93IG5ldyBUeXBlRXJyb3IoIlVSSS5hZGRRdWVyeSgpIGFjY2VwdHMgYW4gb2JqZWN0LCBzdHJpbmcgYXMgdGhlIG5hbWUgcGFyYW1ldGVyIil9dGhpcy5fcGFydHMucXVlcnk9VS5idWlsZFF1ZXJ5KGUsdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpO2lmKHR5cGVvZiBjIT09InN0cmluZyIpe2Q9dn10aGlzLmJ1aWxkKCFkKTtyZXR1cm4gdGhpc307cC5hZGRRdWVyeT1mdW5jdGlvbihjLHYsZCl7dmFyIGU9VS5wYXJzZVF1ZXJ5KHRoaXMuX3BhcnRzLnF1ZXJ5LHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpO1UuYWRkUXVlcnkoZSxjLHY9PT11bmRlZmluZWQ/bnVsbDp2KTt0aGlzLl9wYXJ0cy5xdWVyeT1VLmJ1aWxkUXVlcnkoZSx0aGlzLl9wYXJ0cy5kdXBsaWNhdGVRdWVyeVBhcmFtZXRlcnMsdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7aWYodHlwZW9mIGMhPT0ic3RyaW5nIil7ZD12fXRoaXMuYnVpbGQoIWQpO3JldHVybiB0aGlzfTtwLnJlbW92ZVF1ZXJ5PWZ1bmN0aW9uKGMsdixkKXt2YXIgZT1VLnBhcnNlUXVlcnkodGhpcy5fcGFydHMucXVlcnksdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7VS5yZW1vdmVRdWVyeShlLGMsdik7dGhpcy5fcGFydHMucXVlcnk9VS5idWlsZFF1ZXJ5KGUsdGhpcy5fcGFydHMuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzLHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpO2lmKHR5cGVvZiBjIT09InN0cmluZyIpe2Q9dn10aGlzLmJ1aWxkKCFkKTtyZXR1cm4gdGhpc307cC5oYXNRdWVyeT1mdW5jdGlvbihjLHYsZCl7dmFyIGU9VS5wYXJzZVF1ZXJ5KHRoaXMuX3BhcnRzLnF1ZXJ5LHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpO3JldHVybiBVLmhhc1F1ZXJ5KGUsYyx2LGQpfTtwLnNldFNlYXJjaD1wLnNldFF1ZXJ5O3AuYWRkU2VhcmNoPXAuYWRkUXVlcnk7cC5yZW1vdmVTZWFyY2g9cC5yZW1vdmVRdWVyeTtwLmhhc1NlYXJjaD1wLmhhc1F1ZXJ5O3Aubm9ybWFsaXplPWZ1bmN0aW9uKCl7aWYodGhpcy5fcGFydHMudXJuKXtyZXR1cm4gdGhpcy5ub3JtYWxpemVQcm90b2NvbChmYWxzZSkubm9ybWFsaXplUXVlcnkoZmFsc2UpLm5vcm1hbGl6ZUZyYWdtZW50KGZhbHNlKS5idWlsZCgpfXJldHVybiB0aGlzLm5vcm1hbGl6ZVByb3RvY29sKGZhbHNlKS5ub3JtYWxpemVIb3N0bmFtZShmYWxzZSkubm9ybWFsaXplUG9ydChmYWxzZSkubm9ybWFsaXplUGF0aChmYWxzZSkubm9ybWFsaXplUXVlcnkoZmFsc2UpLm5vcm1hbGl6ZUZyYWdtZW50KGZhbHNlKS5idWlsZCgpfTtwLm5vcm1hbGl6ZVByb3RvY29sPWZ1bmN0aW9uKGMpe2lmKHR5cGVvZiB0aGlzLl9wYXJ0cy5wcm90b2NvbD09PSJzdHJpbmciKXt0aGlzLl9wYXJ0cy5wcm90b2NvbD10aGlzLl9wYXJ0cy5wcm90b2NvbC50b0xvd2VyQ2FzZSgpO3RoaXMuYnVpbGQoIWMpfXJldHVybiB0aGlzfTtwLm5vcm1hbGl6ZUhvc3RuYW1lPWZ1bmN0aW9uKGMpe2lmKHRoaXMuX3BhcnRzLmhvc3RuYW1lKXtpZih0aGlzLmlzKCdJRE4nKSYmYSl7dGhpcy5fcGFydHMuaG9zdG5hbWU9YS50b0FTQ0lJKHRoaXMuX3BhcnRzLmhvc3RuYW1lKX1lbHNlIGlmKHRoaXMuaXMoJ0lQdjYnKSYmSSl7dGhpcy5fcGFydHMuaG9zdG5hbWU9SS5iZXN0KHRoaXMuX3BhcnRzLmhvc3RuYW1lKX10aGlzLl9wYXJ0cy5ob3N0bmFtZT10aGlzLl9wYXJ0cy5ob3N0bmFtZS50b0xvd2VyQ2FzZSgpO3RoaXMuYnVpbGQoIWMpfXJldHVybiB0aGlzfTtwLm5vcm1hbGl6ZVBvcnQ9ZnVuY3Rpb24oYyl7aWYodHlwZW9mIHRoaXMuX3BhcnRzLnByb3RvY29sPT09InN0cmluZyImJnRoaXMuX3BhcnRzLnBvcnQ9PT1VLmRlZmF1bHRQb3J0c1t0aGlzLl9wYXJ0cy5wcm90b2NvbF0pe3RoaXMuX3BhcnRzLnBvcnQ9bnVsbDt0aGlzLmJ1aWxkKCFjKX1yZXR1cm4gdGhpc307cC5ub3JtYWxpemVQYXRoPWZ1bmN0aW9uKGMpe2lmKHRoaXMuX3BhcnRzLnVybil7cmV0dXJuIHRoaXN9aWYoIXRoaXMuX3BhcnRzLnBhdGh8fHRoaXMuX3BhcnRzLnBhdGg9PT0nLycpe3JldHVybiB0aGlzfXZhciBkO3ZhciBlPXRoaXMuX3BhcnRzLnBhdGg7dmFyIGksbDtpZihlLmNoYXJBdCgwKSE9PScvJyl7ZD10cnVlO2U9Jy8nK2V9ZT1lLnJlcGxhY2UoLyhcLyhcLlwvKSspfChcL1wuJCkvZywnLycpLnJlcGxhY2UoL1wvezIsfS9nLCcvJyk7d2hpbGUodHJ1ZSl7aT1lLmluZGV4T2YoJy8uLi8nKTtpZihpPT09LTEpe2JyZWFrfWVsc2UgaWYoaT09PTApe2U9ZS5zdWJzdHJpbmcoMyk7YnJlYWt9bD1lLnN1YnN0cmluZygwLGkpLmxhc3RJbmRleE9mKCcvJyk7aWYobD09PS0xKXtsPWl9ZT1lLnN1YnN0cmluZygwLGwpK2Uuc3Vic3RyaW5nKGkrMyl9aWYoZCYmdGhpcy5pcygncmVsYXRpdmUnKSl7ZT1lLnN1YnN0cmluZygxKX1lPVUucmVjb2RlUGF0aChlKTt0aGlzLl9wYXJ0cy5wYXRoPWU7dGhpcy5idWlsZCghYyk7cmV0dXJuIHRoaXN9O3Aubm9ybWFsaXplUGF0aG5hbWU9cC5ub3JtYWxpemVQYXRoO3Aubm9ybWFsaXplUXVlcnk9ZnVuY3Rpb24oYyl7aWYodHlwZW9mIHRoaXMuX3BhcnRzLnF1ZXJ5PT09InN0cmluZyIpe2lmKCF0aGlzLl9wYXJ0cy5xdWVyeS5sZW5ndGgpe3RoaXMuX3BhcnRzLnF1ZXJ5PW51bGx9ZWxzZXt0aGlzLnF1ZXJ5KFUucGFyc2VRdWVyeSh0aGlzLl9wYXJ0cy5xdWVyeSx0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKSl9dGhpcy5idWlsZCghYyl9cmV0dXJuIHRoaXN9O3Aubm9ybWFsaXplRnJhZ21lbnQ9ZnVuY3Rpb24oYyl7aWYoIXRoaXMuX3BhcnRzLmZyYWdtZW50KXt0aGlzLl9wYXJ0cy5mcmFnbWVudD1udWxsO3RoaXMuYnVpbGQoIWMpfXJldHVybiB0aGlzfTtwLm5vcm1hbGl6ZVNlYXJjaD1wLm5vcm1hbGl6ZVF1ZXJ5O3Aubm9ybWFsaXplSGFzaD1wLm5vcm1hbGl6ZUZyYWdtZW50O3AuaXNvODg1OT1mdW5jdGlvbigpe3ZhciBlPVUuZW5jb2RlO3ZhciBkPVUuZGVjb2RlO1UuZW5jb2RlPWVzY2FwZTtVLmRlY29kZT1kZWNvZGVVUklDb21wb25lbnQ7dGhpcy5ub3JtYWxpemUoKTtVLmVuY29kZT1lO1UuZGVjb2RlPWQ7cmV0dXJuIHRoaXN9O3AudW5pY29kZT1mdW5jdGlvbigpe3ZhciBlPVUuZW5jb2RlO3ZhciBkPVUuZGVjb2RlO1UuZW5jb2RlPW87VS5kZWNvZGU9dW5lc2NhcGU7dGhpcy5ub3JtYWxpemUoKTtVLmVuY29kZT1lO1UuZGVjb2RlPWQ7cmV0dXJuIHRoaXN9O3AucmVhZGFibGU9ZnVuY3Rpb24oKXt2YXIgYz10aGlzLmNsb25lKCk7Yy51c2VybmFtZSgiIikucGFzc3dvcmQoIiIpLm5vcm1hbGl6ZSgpO3ZhciB0PScnO2lmKGMuX3BhcnRzLnByb3RvY29sKXt0Kz1jLl9wYXJ0cy5wcm90b2NvbCsnOi8vJ31pZihjLl9wYXJ0cy5ob3N0bmFtZSl7aWYoYy5pcygncHVueWNvZGUnKSYmYSl7dCs9YS50b1VuaWNvZGUoYy5fcGFydHMuaG9zdG5hbWUpO2lmKGMuX3BhcnRzLnBvcnQpe3QrPSI6IitjLl9wYXJ0cy5wb3J0fX1lbHNle3QrPWMuaG9zdCgpfX1pZihjLl9wYXJ0cy5ob3N0bmFtZSYmYy5fcGFydHMucGF0aCYmYy5fcGFydHMucGF0aC5jaGFyQXQoMCkhPT0nLycpe3QrPScvJ310Kz1jLnBhdGgodHJ1ZSk7aWYoYy5fcGFydHMucXVlcnkpe3ZhciBxPScnO2Zvcih2YXIgaT0wLGQ9Yy5fcGFydHMucXVlcnkuc3BsaXQoJyYnKSxsPWQubGVuZ3RoO2k8bDtpKyspe3ZhciBlPShkW2ldfHwiIikuc3BsaXQoJz0nKTtxKz0nJicrVS5kZWNvZGVRdWVyeShlWzBdLHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpLnJlcGxhY2UoLyYvZywnJTI2Jyk7aWYoZVsxXSE9PXVuZGVmaW5lZCl7cSs9Ij0iK1UuZGVjb2RlUXVlcnkoZVsxXSx0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlKS5yZXBsYWNlKC8mL2csJyUyNicpfX10Kz0nPycrcS5zdWJzdHJpbmcoMSl9dCs9VS5kZWNvZGVRdWVyeShjLmhhc2goKSx0cnVlKTtyZXR1cm4gdH07cC5hYnNvbHV0ZVRvPWZ1bmN0aW9uKGMpe3ZhciBkPXRoaXMuY2xvbmUoKTt2YXIgZT1bJ3Byb3RvY29sJywndXNlcm5hbWUnLCdwYXNzd29yZCcsJ2hvc3RuYW1lJywncG9ydCddO3ZhciBsLGkscDtpZih0aGlzLl9wYXJ0cy51cm4pe3Rocm93IG5ldyBFcnJvcignVVJOcyBkbyBub3QgaGF2ZSBhbnkgZ2VuZXJhbGx5IGRlZmluZWQgaGllcmFyY2hpY2FsIGNvbXBvbmVudHMnKX1pZighKGMgaW5zdGFuY2VvZiBVKSl7Yz1uZXcgVShjKX1pZighZC5fcGFydHMucHJvdG9jb2wpe2QuX3BhcnRzLnByb3RvY29sPWMuX3BhcnRzLnByb3RvY29sfWlmKHRoaXMuX3BhcnRzLmhvc3RuYW1lKXtyZXR1cm4gZH1mb3IoaT0wO3A9ZVtpXTtpKyspe2QuX3BhcnRzW3BdPWMuX3BhcnRzW3BdfWU9WydxdWVyeScsJ3BhdGgnXTtmb3IoaT0wO3A9ZVtpXTtpKyspe2lmKCFkLl9wYXJ0c1twXSYmYy5fcGFydHNbcF0pe2QuX3BhcnRzW3BdPWMuX3BhcnRzW3BdfX1pZihkLnBhdGgoKS5jaGFyQXQoMCkhPT0nLycpe2w9Yy5kaXJlY3RvcnkoKTtkLl9wYXJ0cy5wYXRoPShsPyhsKycvJyk6JycpK2QuX3BhcnRzLnBhdGg7ZC5ub3JtYWxpemVQYXRoKCl9ZC5idWlsZCgpO3JldHVybiBkfTtwLnJlbGF0aXZlVG89ZnVuY3Rpb24oYyl7dmFyIGQ9dGhpcy5jbG9uZSgpLm5vcm1hbGl6ZSgpO3ZhciBlLGksbCxzLHQ7aWYoZC5fcGFydHMudXJuKXt0aHJvdyBuZXcgRXJyb3IoJ1VSTnMgZG8gbm90IGhhdmUgYW55IGdlbmVyYWxseSBkZWZpbmVkIGhpZXJhcmNoaWNhbCBjb21wb25lbnRzJyl9Yz1uZXcgVShjKS5ub3JtYWxpemUoKTtlPWQuX3BhcnRzO2k9Yy5fcGFydHM7cz1kLnBhdGgoKTt0PWMucGF0aCgpO2lmKHMuY2hhckF0KDApIT09Jy8nKXt0aHJvdyBuZXcgRXJyb3IoJ1VSSSBpcyBhbHJlYWR5IHJlbGF0aXZlJyl9aWYodC5jaGFyQXQoMCkhPT0nLycpe3Rocm93IG5ldyBFcnJvcignQ2Fubm90IGNhbGN1bGF0ZSBhIFVSSSByZWxhdGl2ZSB0byBhbm90aGVyIHJlbGF0aXZlIFVSSScpfWlmKGUucHJvdG9jb2w9PT1pLnByb3RvY29sKXtlLnByb3RvY29sPW51bGx9aWYoZS51c2VybmFtZSE9PWkudXNlcm5hbWV8fGUucGFzc3dvcmQhPT1pLnBhc3N3b3JkKXtyZXR1cm4gZC5idWlsZCgpfWlmKGUucHJvdG9jb2whPT1udWxsfHxlLnVzZXJuYW1lIT09bnVsbHx8ZS5wYXNzd29yZCE9PW51bGwpe3JldHVybiBkLmJ1aWxkKCl9aWYoZS5ob3N0bmFtZT09PWkuaG9zdG5hbWUmJmUucG9ydD09PWkucG9ydCl7ZS5ob3N0bmFtZT1udWxsO2UucG9ydD1udWxsfWVsc2V7cmV0dXJuIGQuYnVpbGQoKX1pZihzPT09dCl7ZS5wYXRoPScnO3JldHVybiBkLmJ1aWxkKCl9bD1VLmNvbW1vblBhdGgoZC5wYXRoKCksYy5wYXRoKCkpO2lmKCFsKXtyZXR1cm4gZC5idWlsZCgpfXZhciB2PWkucGF0aC5zdWJzdHJpbmcobC5sZW5ndGgpLnJlcGxhY2UoL1teXC9dKiQvLCcnKS5yZXBsYWNlKC8uKj9cLy9nLCcuLi8nKTtlLnBhdGg9ditlLnBhdGguc3Vic3RyaW5nKGwubGVuZ3RoKTtyZXR1cm4gZC5idWlsZCgpfTtwLmVxdWFscz1mdW5jdGlvbihjKXt2YXIgZD10aGlzLmNsb25lKCk7dmFyIHQ9bmV3IFUoYyk7dmFyIGU9e307dmFyIGk9e307dmFyIGw9e307dmFyIHMsdix4O2Qubm9ybWFsaXplKCk7dC5ub3JtYWxpemUoKTtpZihkLnRvU3RyaW5nKCk9PT10LnRvU3RyaW5nKCkpe3JldHVybiB0cnVlfXM9ZC5xdWVyeSgpO3Y9dC5xdWVyeSgpO2QucXVlcnkoIiIpO3QucXVlcnkoIiIpO2lmKGQudG9TdHJpbmcoKSE9PXQudG9TdHJpbmcoKSl7cmV0dXJuIGZhbHNlfWlmKHMubGVuZ3RoIT09di5sZW5ndGgpe3JldHVybiBmYWxzZX1lPVUucGFyc2VRdWVyeShzLHRoaXMuX3BhcnRzLmVzY2FwZVF1ZXJ5U3BhY2UpO2k9VS5wYXJzZVF1ZXJ5KHYsdGhpcy5fcGFydHMuZXNjYXBlUXVlcnlTcGFjZSk7Zm9yKHggaW4gZSl7aWYoaC5jYWxsKGUseCkpe2lmKCFmKGVbeF0pKXtpZihlW3hdIT09aVt4XSl7cmV0dXJuIGZhbHNlfX1lbHNlIGlmKCFtKGVbeF0saVt4XSkpe3JldHVybiBmYWxzZX1sW3hdPXRydWV9fWZvcih4IGluIGkpe2lmKGguY2FsbChpLHgpKXtpZighbFt4XSl7cmV0dXJuIGZhbHNlfX19cmV0dXJuIHRydWV9O3AuZHVwbGljYXRlUXVlcnlQYXJhbWV0ZXJzPWZ1bmN0aW9uKHYpe3RoaXMuX3BhcnRzLmR1cGxpY2F0ZVF1ZXJ5UGFyYW1ldGVycz0hIXY7cmV0dXJuIHRoaXN9O3AuZXNjYXBlUXVlcnlTcGFjZT1mdW5jdGlvbih2KXt0aGlzLl9wYXJ0cy5lc2NhcGVRdWVyeVNwYWNlPSEhdjtyZXR1cm4gdGhpc307cmV0dXJuIFV9KSk7DQovKiEKICogalF1ZXJ5IEphdmFTY3JpcHQgTGlicmFyeSB2MS4xMC4yCiAqIGh0dHA6Ly9qcXVlcnkuY29tLwogKgogKiBJbmNsdWRlcyBTaXp6bGUuanMKICogaHR0cDovL3NpenpsZWpzLmNvbS8KICoKICogQ29weXJpZ2h0IDIwMDUsIDIwMTMgalF1ZXJ5IEZvdW5kYXRpb24sIEluYy4gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBEYXRlOiAyMDEzLTA3LTAzVDEzOjQ4WgogKi8NCihmdW5jdGlvbih3LHUpe3ZhciBjLGQsZj10eXBlb2YgdSxnPXcubG9jYXRpb24saD13LmRvY3VtZW50LGs9aC5kb2N1bWVudEVsZW1lbnQsbz13LmpRdWVyeSxxPXcuJCx4PXt9LHk9W10sej0iMS4xMC4yIixBPXkuY29uY2F0LEI9eS5wdXNoLEM9eS5zbGljZSxEPXkuaW5kZXhPZixFPXgudG9TdHJpbmcsRj14Lmhhc093blByb3BlcnR5LEc9ei50cmltLFE9ZnVuY3Rpb24ocyxhKXtyZXR1cm4gbmV3IFEuZm4uaW5pdChzLGEsZCl9LEg9L1srLV0/KD86XGQqXC58KVxkKyg/OltlRV1bKy1dP1xkK3wpLy5zb3VyY2UsST0vXFMrL2csSj0vXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2csSz0vXig/OlxzKig8W1x3XFddKz4pW14+XSp8IyhbXHctXSopKSQvLEw9L148KFx3KylccypcLz8+KD86PFwvXDE+fCkkLyxNPS9eW1xdLDp7fVxzXSokLyxOPS8oPzpefDp8LCkoPzpccypcWykrL2csTz0vXFwoPzpbIlxcXC9iZm5ydF18dVtcZGEtZkEtRl17NH0pL2csUD0vIlteIlxcXHJcbl0qInx0cnVlfGZhbHNlfG51bGx8LT8oPzpcZCtcLnwpXGQrKD86W2VFXVsrLV0/XGQrfCkvZyxSPS9eLW1zLS8sUz0vLShbXGRhLXpdKS9naSxUPWZ1bmN0aW9uKGEsbCl7cmV0dXJuIGwudG9VcHBlckNhc2UoKX0sVT1mdW5jdGlvbihhKXtpZihoLmFkZEV2ZW50TGlzdGVuZXJ8fGEudHlwZT09PSJsb2FkInx8aC5yZWFkeVN0YXRlPT09ImNvbXBsZXRlIil7VigpO1EucmVhZHkoKX19LFY9ZnVuY3Rpb24oKXtpZihoLmFkZEV2ZW50TGlzdGVuZXIpe2gucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsVSxmYWxzZSk7dy5yZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIixVLGZhbHNlKX1lbHNle2guZGV0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsVSk7dy5kZXRhY2hFdmVudCgib25sb2FkIixVKX19O1EuZm49US5wcm90b3R5cGU9e2pxdWVyeTp6LGNvbnN0cnVjdG9yOlEsaW5pdDpmdW5jdGlvbihzLGEsZCl7dmFyIG0sYjtpZighcyl7cmV0dXJuIHRoaXN9aWYodHlwZW9mIHM9PT0ic3RyaW5nIil7aWYocy5jaGFyQXQoMCk9PT0iPCImJnMuY2hhckF0KHMubGVuZ3RoLTEpPT09Ij4iJiZzLmxlbmd0aD49Myl7bT1bbnVsbCxzLG51bGxdfWVsc2V7bT1LLmV4ZWMocyl9aWYobSYmKG1bMV18fCFhKSl7aWYobVsxXSl7YT1hIGluc3RhbmNlb2YgUT9hWzBdOmE7US5tZXJnZSh0aGlzLFEucGFyc2VIVE1MKG1bMV0sYSYmYS5ub2RlVHlwZT9hLm93bmVyRG9jdW1lbnR8fGE6aCx0cnVlKSk7aWYoTC50ZXN0KG1bMV0pJiZRLmlzUGxhaW5PYmplY3QoYSkpe2ZvcihtIGluIGEpe2lmKFEuaXNGdW5jdGlvbih0aGlzW21dKSl7dGhpc1ttXShhW21dKX1lbHNle3RoaXMuYXR0cihtLGFbbV0pfX19cmV0dXJuIHRoaXN9ZWxzZXtiPWguZ2V0RWxlbWVudEJ5SWQobVsyXSk7aWYoYiYmYi5wYXJlbnROb2RlKXtpZihiLmlkIT09bVsyXSl7cmV0dXJuIGQuZmluZChzKX10aGlzLmxlbmd0aD0xO3RoaXNbMF09Yn10aGlzLmNvbnRleHQ9aDt0aGlzLnNlbGVjdG9yPXM7cmV0dXJuIHRoaXN9fWVsc2UgaWYoIWF8fGEuanF1ZXJ5KXtyZXR1cm4oYXx8ZCkuZmluZChzKX1lbHNle3JldHVybiB0aGlzLmNvbnN0cnVjdG9yKGEpLmZpbmQocyl9fWVsc2UgaWYocy5ub2RlVHlwZSl7dGhpcy5jb250ZXh0PXRoaXNbMF09czt0aGlzLmxlbmd0aD0xO3JldHVybiB0aGlzfWVsc2UgaWYoUS5pc0Z1bmN0aW9uKHMpKXtyZXR1cm4gZC5yZWFkeShzKX1pZihzLnNlbGVjdG9yIT09dSl7dGhpcy5zZWxlY3Rvcj1zLnNlbGVjdG9yO3RoaXMuY29udGV4dD1zLmNvbnRleHR9cmV0dXJuIFEubWFrZUFycmF5KHMsdGhpcyl9LHNlbGVjdG9yOiIiLGxlbmd0aDowLHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gQy5jYWxsKHRoaXMpfSxnZXQ6ZnVuY3Rpb24obil7cmV0dXJuIG49PW51bGw/dGhpcy50b0FycmF5KCk6KG48MD90aGlzW3RoaXMubGVuZ3RoK25dOnRoaXNbbl0pfSxwdXNoU3RhY2s6ZnVuY3Rpb24oYSl7dmFyIHI9US5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksYSk7ci5wcmV2T2JqZWN0PXRoaXM7ci5jb250ZXh0PXRoaXMuY29udGV4dDtyZXR1cm4gcn0sZWFjaDpmdW5jdGlvbihhLGIpe3JldHVybiBRLmVhY2godGhpcyxhLGIpfSxyZWFkeTpmdW5jdGlvbihhKXtRLnJlYWR5LnByb21pc2UoKS5kb25lKGEpO3JldHVybiB0aGlzfSxzbGljZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnB1c2hTdGFjayhDLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LGVxOmZ1bmN0aW9uKGkpe3ZhciBsPXRoaXMubGVuZ3RoLGo9K2krKGk8MD9sOjApO3JldHVybiB0aGlzLnB1c2hTdGFjayhqPj0wJiZqPGw/W3RoaXNbal1dOltdKX0sbWFwOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhRLm1hcCh0aGlzLGZ1bmN0aW9uKGIsaSl7cmV0dXJuIGEuY2FsbChiLGksYil9KSl9LGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnByZXZPYmplY3R8fHRoaXMuY29uc3RydWN0b3IobnVsbCl9LHB1c2g6Qixzb3J0OltdLnNvcnQsc3BsaWNlOltdLnNwbGljZX07US5mbi5pbml0LnByb3RvdHlwZT1RLmZuO1EuZXh0ZW5kPVEuZm4uZXh0ZW5kPWZ1bmN0aW9uKCl7dmFyIHMsYSxiLG4saixsLHQ9YXJndW1lbnRzWzBdfHx7fSxpPTEsbT1hcmd1bWVudHMubGVuZ3RoLHA9ZmFsc2U7aWYodHlwZW9mIHQ9PT0iYm9vbGVhbiIpe3A9dDt0PWFyZ3VtZW50c1sxXXx8e307aT0yfWlmKHR5cGVvZiB0IT09Im9iamVjdCImJiFRLmlzRnVuY3Rpb24odCkpe3Q9e319aWYobT09PWkpe3Q9dGhpczstLWl9Zm9yKDtpPG07aSsrKXtpZigoaj1hcmd1bWVudHNbaV0pIT1udWxsKXtmb3IobiBpbiBqKXtzPXRbbl07Yj1qW25dO2lmKHQ9PT1iKXtjb250aW51ZX1pZihwJiZiJiYoUS5pc1BsYWluT2JqZWN0KGIpfHwoYT1RLmlzQXJyYXkoYikpKSl7aWYoYSl7YT1mYWxzZTtsPXMmJlEuaXNBcnJheShzKT9zOltdfWVsc2V7bD1zJiZRLmlzUGxhaW5PYmplY3Qocyk/czp7fX10W25dPVEuZXh0ZW5kKHAsbCxiKX1lbHNlIGlmKGIhPT11KXt0W25dPWJ9fX19cmV0dXJuIHR9O1EuZXh0ZW5kKHtleHBhbmRvOiJqUXVlcnkiKyh6K01hdGgucmFuZG9tKCkpLnJlcGxhY2UoL1xEL2csIiIpLG5vQ29uZmxpY3Q6ZnVuY3Rpb24oYSl7aWYody4kPT09USl7dy4kPXF9aWYoYSYmdy5qUXVlcnk9PT1RKXt3LmpRdWVyeT1vfXJldHVybiBRfSxpc1JlYWR5OmZhbHNlLHJlYWR5V2FpdDoxLGhvbGRSZWFkeTpmdW5jdGlvbihhKXtpZihhKXtRLnJlYWR5V2FpdCsrfWVsc2V7US5yZWFkeSh0cnVlKX19LHJlYWR5OmZ1bmN0aW9uKGEpe2lmKGE9PT10cnVlPy0tUS5yZWFkeVdhaXQ6US5pc1JlYWR5KXtyZXR1cm59aWYoIWguYm9keSl7cmV0dXJuIHNldFRpbWVvdXQoUS5yZWFkeSl9US5pc1JlYWR5PXRydWU7aWYoYSE9PXRydWUmJi0tUS5yZWFkeVdhaXQ+MCl7cmV0dXJufWMucmVzb2x2ZVdpdGgoaCxbUV0pO2lmKFEuZm4udHJpZ2dlcil7UShoKS50cmlnZ2VyKCJyZWFkeSIpLm9mZigicmVhZHkiKX19LGlzRnVuY3Rpb246ZnVuY3Rpb24oYSl7cmV0dXJuIFEudHlwZShhKT09PSJmdW5jdGlvbiJ9LGlzQXJyYXk6QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oYSl7cmV0dXJuIFEudHlwZShhKT09PSJhcnJheSJ9LGlzV2luZG93OmZ1bmN0aW9uKGEpe3JldHVybiBhIT1udWxsJiZhPT1hLndpbmRvd30saXNOdW1lcmljOmZ1bmN0aW9uKGEpe3JldHVybiFpc05hTihwYXJzZUZsb2F0KGEpKSYmaXNGaW5pdGUoYSl9LHR5cGU6ZnVuY3Rpb24oYSl7aWYoYT09bnVsbCl7cmV0dXJuIFN0cmluZyhhKX1yZXR1cm4gdHlwZW9mIGE9PT0ib2JqZWN0Inx8dHlwZW9mIGE9PT0iZnVuY3Rpb24iP3hbRS5jYWxsKGEpXXx8Im9iamVjdCI6dHlwZW9mIGF9LGlzUGxhaW5PYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI7aWYoIWF8fFEudHlwZShhKSE9PSJvYmplY3QifHxhLm5vZGVUeXBlfHxRLmlzV2luZG93KGEpKXtyZXR1cm4gZmFsc2V9dHJ5e2lmKGEuY29uc3RydWN0b3ImJiFGLmNhbGwoYSwiY29uc3RydWN0b3IiKSYmIUYuY2FsbChhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwiaXNQcm90b3R5cGVPZiIpKXtyZXR1cm4gZmFsc2V9fWNhdGNoKGUpe3JldHVybiBmYWxzZX1pZihRLnN1cHBvcnQub3duTGFzdCl7Zm9yKGIgaW4gYSl7cmV0dXJuIEYuY2FsbChhLGIpfX1mb3IoYiBpbiBhKXt9cmV0dXJuIGI9PT11fHxGLmNhbGwoYSxiKX0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihhKXt2YXIgbjtmb3IobiBpbiBhKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9LGVycm9yOmZ1bmN0aW9uKG0pe3Rocm93IG5ldyBFcnJvcihtKX0scGFyc2VIVE1MOmZ1bmN0aW9uKGEsYixpKXtpZighYXx8dHlwZW9mIGEhPT0ic3RyaW5nIil7cmV0dXJuIG51bGx9aWYodHlwZW9mIGI9PT0iYm9vbGVhbiIpe2k9YjtiPWZhbHNlfWI9Ynx8aDt2YXIgcD1MLmV4ZWMoYSkscz0haSYmW107aWYocCl7cmV0dXJuW2IuY3JlYXRlRWxlbWVudChwWzFdKV19cD1RLmJ1aWxkRnJhZ21lbnQoW2FdLGIscyk7aWYocyl7UShzKS5yZW1vdmUoKX1yZXR1cm4gUS5tZXJnZShbXSxwLmNoaWxkTm9kZXMpfSxwYXJzZUpTT046ZnVuY3Rpb24oYSl7aWYody5KU09OJiZ3LkpTT04ucGFyc2Upe3JldHVybiB3LkpTT04ucGFyc2UoYSl9aWYoYT09PW51bGwpe3JldHVybiBhfWlmKHR5cGVvZiBhPT09InN0cmluZyIpe2E9US50cmltKGEpO2lmKGEpe2lmKE0udGVzdChhLnJlcGxhY2UoTywiQCIpLnJlcGxhY2UoUCwiXSIpLnJlcGxhY2UoTiwiIikpKXtyZXR1cm4obmV3IEZ1bmN0aW9uKCJyZXR1cm4gIithKSkoKX19fVEuZXJyb3IoIkludmFsaWQgSlNPTjogIithKX0scGFyc2VYTUw6ZnVuY3Rpb24oYSl7dmFyIGIsdDtpZighYXx8dHlwZW9mIGEhPT0ic3RyaW5nIil7cmV0dXJuIG51bGx9dHJ5e2lmKHcuRE9NUGFyc2VyKXt0PW5ldyBET01QYXJzZXIoKTtiPXQucGFyc2VGcm9tU3RyaW5nKGEsInRleHQveG1sIil9ZWxzZXtiPW5ldyBBY3RpdmVYT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIik7Yi5hc3luYz0iZmFsc2UiO2IubG9hZFhNTChhKX19Y2F0Y2goZSl7Yj11fWlmKCFifHwhYi5kb2N1bWVudEVsZW1lbnR8fGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInBhcnNlcmVycm9yIikubGVuZ3RoKXtRLmVycm9yKCJJbnZhbGlkIFhNTDogIithKX1yZXR1cm4gYn0sbm9vcDpmdW5jdGlvbigpe30sZ2xvYmFsRXZhbDpmdW5jdGlvbihhKXtpZihhJiZRLnRyaW0oYSkpeyh3LmV4ZWNTY3JpcHR8fGZ1bmN0aW9uKGEpe3dbImV2YWwiXS5jYWxsKHcsYSl9KShhKX19LGNhbWVsQ2FzZTpmdW5jdGlvbihzKXtyZXR1cm4gcy5yZXBsYWNlKFIsIm1zLSIpLnJlcGxhY2UoUyxUKX0sbm9kZU5hbWU6ZnVuY3Rpb24oYSxuKXtyZXR1cm4gYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09bi50b0xvd2VyQ2FzZSgpfSxlYWNoOmZ1bmN0aW9uKGEsYixqKXt2YXIgdixpPTAsbD1hLmxlbmd0aCxtPVcoYSk7aWYoail7aWYobSl7Zm9yKDtpPGw7aSsrKXt2PWIuYXBwbHkoYVtpXSxqKTtpZih2PT09ZmFsc2Upe2JyZWFrfX19ZWxzZXtmb3IoaSBpbiBhKXt2PWIuYXBwbHkoYVtpXSxqKTtpZih2PT09ZmFsc2Upe2JyZWFrfX19fWVsc2V7aWYobSl7Zm9yKDtpPGw7aSsrKXt2PWIuY2FsbChhW2ldLGksYVtpXSk7aWYodj09PWZhbHNlKXticmVha319fWVsc2V7Zm9yKGkgaW4gYSl7dj1iLmNhbGwoYVtpXSxpLGFbaV0pO2lmKHY9PT1mYWxzZSl7YnJlYWt9fX19cmV0dXJuIGF9LHRyaW06RyYmIUcuY2FsbCgiXHVGRUZGXHhBMCIpP2Z1bmN0aW9uKHQpe3JldHVybiB0PT1udWxsPyIiOkcuY2FsbCh0KX06ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PW51bGw/IiI6KHQrIiIpLnJlcGxhY2UoSiwiIil9LG1ha2VBcnJheTpmdW5jdGlvbihhLHIpe3ZhciBiPXJ8fFtdO2lmKGEhPW51bGwpe2lmKFcoT2JqZWN0KGEpKSl7US5tZXJnZShiLHR5cGVvZiBhPT09InN0cmluZyI/W2FdOmEpfWVsc2V7Qi5jYWxsKGIsYSl9fXJldHVybiBifSxpbkFycmF5OmZ1bmN0aW9uKGEsYixpKXt2YXIgbDtpZihiKXtpZihEKXtyZXR1cm4gRC5jYWxsKGIsYSxpKX1sPWIubGVuZ3RoO2k9aT9pPDA/TWF0aC5tYXgoMCxsK2kpOmk6MDtmb3IoO2k8bDtpKyspe2lmKGkgaW4gYiYmYltpXT09PWEpe3JldHVybiBpfX19cmV0dXJuLTF9LG1lcmdlOmZ1bmN0aW9uKGEscyl7dmFyIGw9cy5sZW5ndGgsaT1hLmxlbmd0aCxqPTA7aWYodHlwZW9mIGw9PT0ibnVtYmVyIil7Zm9yKDtqPGw7aisrKXthW2krK109c1tqXX19ZWxzZXt3aGlsZShzW2pdIT09dSl7YVtpKytdPXNbaisrXX19YS5sZW5ndGg9aTtyZXR1cm4gYX0sZ3JlcDpmdW5jdGlvbihhLGIsail7dmFyIHIsbD1bXSxpPTAsbT1hLmxlbmd0aDtqPSEhajtmb3IoO2k8bTtpKyspe3I9ISFiKGFbaV0saSk7aWYoaiE9PXIpe2wucHVzaChhW2ldKX19cmV0dXJuIGx9LG1hcDpmdW5jdGlvbihhLGIsail7dmFyIHYsaT0wLGw9YS5sZW5ndGgsbT1XKGEpLHI9W107aWYobSl7Zm9yKDtpPGw7aSsrKXt2PWIoYVtpXSxpLGopO2lmKHYhPW51bGwpe3Jbci5sZW5ndGhdPXZ9fX1lbHNle2ZvcihpIGluIGEpe3Y9YihhW2ldLGksaik7aWYodiE9bnVsbCl7cltyLmxlbmd0aF09dn19fXJldHVybiBBLmFwcGx5KFtdLHIpfSxndWlkOjEscHJveHk6ZnVuY3Rpb24oYSxiKXt2YXIgaSxwLHQ7aWYodHlwZW9mIGI9PT0ic3RyaW5nIil7dD1hW2JdO2I9YTthPXR9aWYoIVEuaXNGdW5jdGlvbihhKSl7cmV0dXJuIHV9aT1DLmNhbGwoYXJndW1lbnRzLDIpO3A9ZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShifHx0aGlzLGkuY29uY2F0KEMuY2FsbChhcmd1bWVudHMpKSl9O3AuZ3VpZD1hLmd1aWQ9YS5ndWlkfHxRLmd1aWQrKztyZXR1cm4gcH0sYWNjZXNzOmZ1bmN0aW9uKGEsYixqLHYsbCxtLHIpe3ZhciBpPTAsbj1hLmxlbmd0aCxwPWo9PW51bGw7aWYoUS50eXBlKGopPT09Im9iamVjdCIpe2w9dHJ1ZTtmb3IoaSBpbiBqKXtRLmFjY2VzcyhhLGIsaSxqW2ldLHRydWUsbSxyKX19ZWxzZSBpZih2IT09dSl7bD10cnVlO2lmKCFRLmlzRnVuY3Rpb24odikpe3I9dHJ1ZX1pZihwKXtpZihyKXtiLmNhbGwoYSx2KTtiPW51bGx9ZWxzZXtwPWI7Yj1mdW5jdGlvbihzLGosdil7cmV0dXJuIHAuY2FsbChRKHMpLHYpfX19aWYoYil7Zm9yKDtpPG47aSsrKXtiKGFbaV0saixyP3Y6di5jYWxsKGFbaV0saSxiKGFbaV0saikpKX19fXJldHVybiBsP2E6cD9iLmNhbGwoYSk6bj9iKGFbMF0saik6bX0sbm93OmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKCkpLmdldFRpbWUoKX0sc3dhcDpmdW5jdGlvbihhLGIsaSxqKXt2YXIgcixuLGw9e307Zm9yKG4gaW4gYil7bFtuXT1hLnN0eWxlW25dO2Euc3R5bGVbbl09YltuXX1yPWkuYXBwbHkoYSxqfHxbXSk7Zm9yKG4gaW4gYil7YS5zdHlsZVtuXT1sW25dfXJldHVybiByfX0pO1EucmVhZHkucHJvbWlzZT1mdW5jdGlvbihhKXtpZighYyl7Yz1RLkRlZmVycmVkKCk7aWYoaC5yZWFkeVN0YXRlPT09ImNvbXBsZXRlIil7c2V0VGltZW91dChRLnJlYWR5KX1lbHNlIGlmKGguYWRkRXZlbnRMaXN0ZW5lcil7aC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixVLGZhbHNlKTt3LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLFUsZmFsc2UpfWVsc2V7aC5hdHRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixVKTt3LmF0dGFjaEV2ZW50KCJvbmxvYWQiLFUpO3ZhciB0PWZhbHNlO3RyeXt0PXcuZnJhbWVFbGVtZW50PT1udWxsJiZoLmRvY3VtZW50RWxlbWVudH1jYXRjaChlKXt9aWYodCYmdC5kb1Njcm9sbCl7KGZ1bmN0aW9uIGRvU2Nyb2xsQ2hlY2soKXtpZighUS5pc1JlYWR5KXt0cnl7dC5kb1Njcm9sbCgibGVmdCIpfWNhdGNoKGUpe3JldHVybiBzZXRUaW1lb3V0KGRvU2Nyb2xsQ2hlY2ssNTApfVYoKTtRLnJlYWR5KCl9fSkoKX19fXJldHVybiBjLnByb21pc2UoYSl9O1EuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciIuc3BsaXQoIiAiKSxmdW5jdGlvbihpLG4pe3hbIltvYmplY3QgIituKyJdIl09bi50b0xvd2VyQ2FzZSgpfSk7ZnVuY3Rpb24gVyhhKXt2YXIgbD1hLmxlbmd0aCx0PVEudHlwZShhKTtpZihRLmlzV2luZG93KGEpKXtyZXR1cm4gZmFsc2V9aWYoYS5ub2RlVHlwZT09PTEmJmwpe3JldHVybiB0cnVlfXJldHVybiB0PT09ImFycmF5Inx8dCE9PSJmdW5jdGlvbiImJihsPT09MHx8dHlwZW9mIGw9PT0ibnVtYmVyIiYmbD4wJiYobC0xKWluIGEpfWQ9UShoKTsNCi8qIQogKiBTaXp6bGUgQ1NTIFNlbGVjdG9yIEVuZ2luZSB2MS4xMC4yCiAqIGh0dHA6Ly9zaXp6bGVqcy5jb20vCiAqCiAqIENvcHlyaWdodCAyMDEzIGpRdWVyeSBGb3VuZGF0aW9uLCBJbmMuIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogRGF0ZTogMjAxMy0wNy0wMwogKi8NCihmdW5jdGlvbih3LHUpe3ZhciBpLHMsbCxuLHAscix0LHYsczMsdDMsaCxrLHUzLHYzLHczLHgzLHkzLHozPSJzaXp6bGUiKy0obmV3IERhdGUoKSksQTM9dy5kb2N1bWVudCxCMz0wLEMzPTAsRDM9ajQoKSxFMz1qNCgpLEYzPWo0KCksRzM9ZmFsc2UsSDM9ZnVuY3Rpb24oYSxiKXtpZihhPT09Yil7RzM9dHJ1ZTtyZXR1cm4gMH1yZXR1cm4gMH0sSTM9dHlwZW9mIHUsSjM9MTw8MzEsSzM9KHt9KS5oYXNPd25Qcm9wZXJ0eSxMMz1bXSxNMz1MMy5wb3AsTjM9TDMucHVzaCxPMz1MMy5wdXNoLFAzPUwzLnNsaWNlLFEzPUwzLmluZGV4T2Z8fGZ1bmN0aW9uKGEpe3ZhciBpPTAsYj10aGlzLmxlbmd0aDtmb3IoO2k8YjtpKyspe2lmKHRoaXNbaV09PT1hKXtyZXR1cm4gaX19cmV0dXJuLTF9LFIzPSJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZCIsUzM9IltcXHgyMFxcdFxcclxcblxcZl0iLFQzPSIoPzpcXFxcLnxbXFx3LV18W15cXHgwMC1cXHhhMF0pKyIsVTM9VDMucmVwbGFjZSgidyIsIncjIiksVjM9IlxcWyIrUzMrIiooIitUMysiKSIrUzMrIiooPzooWypeJHwhfl0/PSkiK1MzKyIqKD86KFsnXCJdKSgoPzpcXFxcLnxbXlxcXFxdKSo/KVxcM3woIitVMysiKXwpfCkiK1MzKyIqXFxdIixXMz0iOigiK1QzKyIpKD86XFwoKChbJ1wiXSkoKD86XFxcXC58W15cXFxcXSkqPylcXDN8KCg/OlxcXFwufFteXFxcXCgpW1xcXV18IitWMy5yZXBsYWNlKDMsOCkrIikqKXwuKilcXCl8KSIsSj1uZXcgUmVnRXhwKCJeIitTMysiK3woKD86XnxbXlxcXFxdKSg/OlxcXFwuKSopIitTMysiKyQiLCJnIiksWDM9bmV3IFJlZ0V4cCgiXiIrUzMrIiosIitTMysiKiIpLFkzPW5ldyBSZWdFeHAoIl4iK1MzKyIqKFs+K35dfCIrUzMrIikiK1MzKyIqIiksWjM9bmV3IFJlZ0V4cChTMysiKlsrfl0iKSwkMz1uZXcgUmVnRXhwKCI9IitTMysiKihbXlxcXSdcIl0qKSIrUzMrIipcXF0iLCJnIiksXzM9bmV3IFJlZ0V4cChXMyksYTQ9bmV3IFJlZ0V4cCgiXiIrVTMrIiQiKSxiND17IklEIjpuZXcgUmVnRXhwKCJeIygiK1QzKyIpIiksIkNMQVNTIjpuZXcgUmVnRXhwKCJeXFwuKCIrVDMrIikiKSwiVEFHIjpuZXcgUmVnRXhwKCJeKCIrVDMucmVwbGFjZSgidyIsIncqIikrIikiKSwiQVRUUiI6bmV3IFJlZ0V4cCgiXiIrVjMpLCJQU0VVRE8iOm5ldyBSZWdFeHAoIl4iK1czKSwiQ0hJTEQiOm5ldyBSZWdFeHAoIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcKCIrUzMrIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK1MzKyIqKD86KFsrLV18KSIrUzMrIiooXFxkKyl8KSkiK1MzKyIqXFwpfCkiLCJpIiksImJvb2wiOm5ldyBSZWdFeHAoIl4oPzoiK1IzKyIpJCIsImkiKSwibmVlZHNDb250ZXh0IjpuZXcgUmVnRXhwKCJeIitTMysiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFwoIitTMysiKigoPzotXFxkKT9cXGQqKSIrUzMrIipcXCl8KSg/PVteLV18JCkiLCJpIil9LGM0PS9eW157XStce1xzKlxbbmF0aXZlIFx3LyxLPS9eKD86IyhbXHctXSspfChcdyspfFwuKFtcdy1dKykpJC8sZDQ9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxlND0vXmhcZCQvaSxmND0vJ3xcXC9nLGc0PW5ldyBSZWdFeHAoIlxcXFwoW1xcZGEtZl17MSw2fSIrUzMrIj98KCIrUzMrIil8LikiLCJpZyIpLGg0PWZ1bmN0aW9uKF8sYSxiKXt2YXIgaj0iMHgiK2EtMHgxMDAwMDtyZXR1cm4gaiE9PWp8fGI/YTpqPDA/U3RyaW5nLmZyb21DaGFyQ29kZShqKzB4MTAwMDApOlN0cmluZy5mcm9tQ2hhckNvZGUoaj4+MTB8MHhEODAwLGomMHgzRkZ8MHhEQzAwKX07dHJ5e08zLmFwcGx5KChMMz1QMy5jYWxsKEEzLmNoaWxkTm9kZXMpKSxBMy5jaGlsZE5vZGVzKTtMM1tBMy5jaGlsZE5vZGVzLmxlbmd0aF0ubm9kZVR5cGV9Y2F0Y2goZSl7TzM9e2FwcGx5OkwzLmxlbmd0aD9mdW5jdGlvbihhLGIpe04zLmFwcGx5KGEsUDMuY2FsbChiKSl9OmZ1bmN0aW9uKGEsYil7dmFyIGo9YS5sZW5ndGgsaT0wO3doaWxlKChhW2orK109YltpKytdKSl7fWEubGVuZ3RoPWotMX19fWZ1bmN0aW9uIGk0KGEsYixqLF8pe3ZhciBDNCxENCxtLEU0LGksRjQsRzQsSDQsSTQsSjQ7aWYoKGI/Yi5vd25lckRvY3VtZW50fHxiOkEzKSE9PWgpe3QzKGIpfWI9Ynx8aDtqPWp8fFtdO2lmKCFhfHx0eXBlb2YgYSE9PSJzdHJpbmciKXtyZXR1cm4gan1pZigoRTQ9Yi5ub2RlVHlwZSkhPT0xJiZFNCE9PTkpe3JldHVybltdfWlmKHUzJiYhXyl7aWYoKEM0PUsuZXhlYyhhKSkpe2lmKChtPUM0WzFdKSl7aWYoRTQ9PT05KXtEND1iLmdldEVsZW1lbnRCeUlkKG0pO2lmKEQ0JiZENC5wYXJlbnROb2RlKXtpZihENC5pZD09PW0pe2oucHVzaChENCk7cmV0dXJuIGp9fWVsc2V7cmV0dXJuIGp9fWVsc2V7aWYoYi5vd25lckRvY3VtZW50JiYoRDQ9Yi5vd25lckRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG0pKSYmeTMoYixENCkmJkQ0LmlkPT09bSl7ai5wdXNoKEQ0KTtyZXR1cm4gan19fWVsc2UgaWYoQzRbMl0pe08zLmFwcGx5KGosYi5nZXRFbGVtZW50c0J5VGFnTmFtZShhKSk7cmV0dXJuIGp9ZWxzZSBpZigobT1DNFszXSkmJnMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXtPMy5hcHBseShqLGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShtKSk7cmV0dXJuIGp9fWlmKHMucXNhJiYoIXYzfHwhdjMudGVzdChhKSkpe0g0PUc0PXozO0k0PWI7SjQ9RTQ9PT05JiZhO2lmKEU0PT09MSYmYi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIT09Im9iamVjdCIpe0Y0PXM0KGEpO2lmKChHND1iLmdldEF0dHJpYnV0ZSgiaWQiKSkpe0g0PUc0LnJlcGxhY2UoZjQsIlxcJCYiKX1lbHNle2Iuc2V0QXR0cmlidXRlKCJpZCIsSDQpfUg0PSJbaWQ9JyIrSDQrIiddICI7aT1GNC5sZW5ndGg7d2hpbGUoaS0tKXtGNFtpXT1INCt0NChGNFtpXSl9STQ9WjMudGVzdChhKSYmYi5wYXJlbnROb2RlfHxiO0o0PUY0LmpvaW4oIiwiKX1pZihKNCl7dHJ5e08zLmFwcGx5KGosSTQucXVlcnlTZWxlY3RvckFsbChKNCkpO3JldHVybiBqfWNhdGNoKEs0KXt9ZmluYWxseXtpZighRzQpe2IucmVtb3ZlQXR0cmlidXRlKCJpZCIpfX19fX1yZXR1cm4gQjQoYS5yZXBsYWNlKEosIiQxIiksYixqLF8pfWZ1bmN0aW9uIGo0KCl7dmFyIGE9W107ZnVuY3Rpb24gYihqLG0pe2lmKGEucHVzaChqKz0iICIpPm4uY2FjaGVMZW5ndGgpe2RlbGV0ZSBiW2Euc2hpZnQoKV19cmV0dXJuKGJbal09bSl9cmV0dXJuIGJ9ZnVuY3Rpb24gazQoYSl7YVt6M109dHJ1ZTtyZXR1cm4gYX1mdW5jdGlvbiBsNChhKXt2YXIgYj1oLmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RyeXtyZXR1cm4hIWEoYil9Y2F0Y2goZSl7cmV0dXJuIGZhbHNlfWZpbmFsbHl7aWYoYi5wYXJlbnROb2RlKXtiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYil9Yj1udWxsfX1mdW5jdGlvbiBtNChhLGIpe3ZhciBMMz1hLnNwbGl0KCJ8IiksaT1hLmxlbmd0aDt3aGlsZShpLS0pe24uYXR0ckhhbmRsZVtMM1tpXV09Yn19ZnVuY3Rpb24gbjQoYSxiKXt2YXIgaj1iJiZhLG09aiYmYS5ub2RlVHlwZT09PTEmJmIubm9kZVR5cGU9PT0xJiYofmIuc291cmNlSW5kZXh8fEozKS0ofmEuc291cmNlSW5kZXh8fEozKTtpZihtKXtyZXR1cm4gbX1pZihqKXt3aGlsZSgoaj1qLm5leHRTaWJsaW5nKSl7aWYoaj09PWIpe3JldHVybi0xfX19cmV0dXJuIGE/MTotMX1mdW5jdGlvbiBvNChhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGo9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBqPT09ImlucHV0IiYmYi50eXBlPT09YX19ZnVuY3Rpb24gcDQoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBqPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oaj09PSJpbnB1dCJ8fGo9PT0iYnV0dG9uIikmJmIudHlwZT09PWF9fWZ1bmN0aW9uIHE0KGEpe3JldHVybiBrNChmdW5jdGlvbihiKXtiPStiO3JldHVybiBrNChmdW5jdGlvbihtLHgzKXt2YXIgaixfPWEoW10sbS5sZW5ndGgsYiksaT1fLmxlbmd0aDt3aGlsZShpLS0pe2lmKG1bKGo9X1tpXSldKXttW2pdPSEoeDNbal09bVtqXSl9fX0pfSl9cj1pNC5pc1hNTD1mdW5jdGlvbihhKXt2YXIgYj1hJiYoYS5vd25lckRvY3VtZW50fHxhKS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGI/Yi5ub2RlTmFtZSE9PSJIVE1MIjpmYWxzZX07cz1pNC5zdXBwb3J0PXt9O3QzPWk0LnNldERvY3VtZW50PWZ1bmN0aW9uKGope3ZhciBfPWo/ai5vd25lckRvY3VtZW50fHxqOkEzLEM0PV8uZGVmYXVsdFZpZXc7aWYoXz09PWh8fF8ubm9kZVR5cGUhPT05fHwhXy5kb2N1bWVudEVsZW1lbnQpe3JldHVybiBofWg9XztrPV8uZG9jdW1lbnRFbGVtZW50O3UzPSFyKF8pO2lmKEM0JiZDNC5hdHRhY2hFdmVudCYmQzQhPT1DNC50b3Ape0M0LmF0dGFjaEV2ZW50KCJvbmJlZm9yZXVubG9hZCIsZnVuY3Rpb24oKXt0MygpfSl9cy5hdHRyaWJ1dGVzPWw0KGZ1bmN0aW9uKGEpe2EuY2xhc3NOYW1lPSJpIjtyZXR1cm4hYS5nZXRBdHRyaWJ1dGUoImNsYXNzTmFtZSIpfSk7cy5nZXRFbGVtZW50c0J5VGFnTmFtZT1sNChmdW5jdGlvbihhKXthLmFwcGVuZENoaWxkKF8uY3JlYXRlQ29tbWVudCgiIikpO3JldHVybiFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RofSk7cy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lPWw0KGZ1bmN0aW9uKGEpe2EuaW5uZXJIVE1MPSI8ZGl2IGNsYXNzPSdhJz48L2Rpdj48ZGl2IGNsYXNzPSdhIGknPjwvZGl2PiI7YS5maXJzdENoaWxkLmNsYXNzTmFtZT0iaSI7cmV0dXJuIGEuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiaSIpLmxlbmd0aD09PTJ9KTtzLmdldEJ5SWQ9bDQoZnVuY3Rpb24oYSl7ay5hcHBlbmRDaGlsZChhKS5pZD16MztyZXR1cm4hXy5nZXRFbGVtZW50c0J5TmFtZXx8IV8uZ2V0RWxlbWVudHNCeU5hbWUoejMpLmxlbmd0aH0pO2lmKHMuZ2V0QnlJZCl7bi5maW5kWyJJRCJdPWZ1bmN0aW9uKGEsYil7aWYodHlwZW9mIGIuZ2V0RWxlbWVudEJ5SWQhPT1JMyYmdTMpe3ZhciBtPWIuZ2V0RWxlbWVudEJ5SWQoYSk7cmV0dXJuIG0mJm0ucGFyZW50Tm9kZT9bbV06W119fTtuLmZpbHRlclsiSUQiXT1mdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoZzQsaDQpO3JldHVybiBmdW5jdGlvbihtKXtyZXR1cm4gbS5nZXRBdHRyaWJ1dGUoImlkIik9PT1ifX19ZWxzZXtkZWxldGUgbi5maW5kWyJJRCJdO24uZmlsdGVyWyJJRCJdPWZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShnNCxoNCk7cmV0dXJuIGZ1bmN0aW9uKG0pe3ZhciBqPXR5cGVvZiBtLmdldEF0dHJpYnV0ZU5vZGUhPT1JMyYmbS5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpO3JldHVybiBqJiZqLnZhbHVlPT09Yn19fW4uZmluZFsiVEFHIl09cy5nZXRFbGVtZW50c0J5VGFnTmFtZT9mdW5jdGlvbihhLGIpe2lmKHR5cGVvZiBiLmdldEVsZW1lbnRzQnlUYWdOYW1lIT09STMpe3JldHVybiBiLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpfX06ZnVuY3Rpb24oYSxiKXt2YXIgbSxEND1bXSxpPTAsRTQ9Yi5nZXRFbGVtZW50c0J5VGFnTmFtZShhKTtpZihhPT09IioiKXt3aGlsZSgobT1FNFtpKytdKSl7aWYobS5ub2RlVHlwZT09PTEpe0Q0LnB1c2gobSl9fXJldHVybiBENH1yZXR1cm4gRTR9O24uZmluZFsiQ0xBU1MiXT1zLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmZ1bmN0aW9uKGEsYil7aWYodHlwZW9mIGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSE9PUkzJiZ1Myl7cmV0dXJuIGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShhKX19O3czPVtdO3YzPVtdO2lmKChzLnFzYT1jNC50ZXN0KF8ucXVlcnlTZWxlY3RvckFsbCkpKXtsNChmdW5jdGlvbihhKXthLmlubmVySFRNTD0iPHNlbGVjdD48b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PiI7aWYoIWEucXVlcnlTZWxlY3RvckFsbCgiW3NlbGVjdGVkXSIpLmxlbmd0aCl7djMucHVzaCgiXFxbIitTMysiKig/OnZhbHVlfCIrUjMrIikiKX1pZighYS5xdWVyeVNlbGVjdG9yQWxsKCI6Y2hlY2tlZCIpLmxlbmd0aCl7djMucHVzaCgiOmNoZWNrZWQiKX19KTtsNChmdW5jdGlvbihhKXt2YXIgYj1fLmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7Yi5zZXRBdHRyaWJ1dGUoInR5cGUiLCJoaWRkZW4iKTthLmFwcGVuZENoaWxkKGIpLnNldEF0dHJpYnV0ZSgidCIsIiIpO2lmKGEucXVlcnlTZWxlY3RvckFsbCgiW3RePScnXSIpLmxlbmd0aCl7djMucHVzaCgiWypeJF09IitTMysiKig/OicnfFwiXCIpIil9aWYoIWEucXVlcnlTZWxlY3RvckFsbCgiOmVuYWJsZWQiKS5sZW5ndGgpe3YzLnB1c2goIjplbmFibGVkIiwiOmRpc2FibGVkIil9YS5xdWVyeVNlbGVjdG9yQWxsKCIqLDp4Iik7djMucHVzaCgiLC4qOiIpfSl9aWYoKHMubWF0Y2hlc1NlbGVjdG9yPWM0LnRlc3QoKHgzPWsud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxrLm1vek1hdGNoZXNTZWxlY3Rvcnx8ay5vTWF0Y2hlc1NlbGVjdG9yfHxrLm1zTWF0Y2hlc1NlbGVjdG9yKSkpKXtsNChmdW5jdGlvbihhKXtzLmRpc2Nvbm5lY3RlZE1hdGNoPXgzLmNhbGwoYSwiZGl2Iik7eDMuY2FsbChhLCJbcyE9JyddOngiKTt3My5wdXNoKCIhPSIsVzMpfSl9djM9djMubGVuZ3RoJiZuZXcgUmVnRXhwKHYzLmpvaW4oInwiKSk7dzM9dzMubGVuZ3RoJiZuZXcgUmVnRXhwKHczLmpvaW4oInwiKSk7eTM9YzQudGVzdChrLmNvbnRhaW5zKXx8ay5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj9mdW5jdGlvbihhLGIpe3ZhciBtPWEubm9kZVR5cGU9PT05P2EuZG9jdW1lbnRFbGVtZW50OmEsRDQ9YiYmYi5wYXJlbnROb2RlO3JldHVybiBhPT09RDR8fCEhKEQ0JiZENC5ub2RlVHlwZT09PTEmJihtLmNvbnRhaW5zP20uY29udGFpbnMoRDQpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24mJmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oRDQpJjE2KSl9OmZ1bmN0aW9uKGEsYil7aWYoYil7d2hpbGUoKGI9Yi5wYXJlbnROb2RlKSl7aWYoYj09PWEpe3JldHVybiB0cnVlfX19cmV0dXJuIGZhbHNlfTtIMz1rLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uP2Z1bmN0aW9uKGEsYil7aWYoYT09PWIpe0czPXRydWU7cmV0dXJuIDB9dmFyIG09Yi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiYmYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiYmYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKTtpZihtKXtpZihtJjF8fCghcy5zb3J0RGV0YWNoZWQmJmIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYSk9PT1tKSl7aWYoYT09PV98fHkzKEEzLGEpKXtyZXR1cm4tMX1pZihiPT09X3x8eTMoQTMsYikpe3JldHVybiAxfXJldHVybiBzMz8oUTMuY2FsbChzMyxhKS1RMy5jYWxsKHMzLGIpKTowfXJldHVybiBtJjQ/LTE6MX1yZXR1cm4gYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8tMToxfTpmdW5jdGlvbihhLGIpe3ZhciBtLGk9MCxEND1hLnBhcmVudE5vZGUsRTQ9Yi5wYXJlbnROb2RlLGFwPVthXSxicD1bYl07aWYoYT09PWIpe0czPXRydWU7cmV0dXJuIDB9ZWxzZSBpZighRDR8fCFFNCl7cmV0dXJuIGE9PT1fPy0xOmI9PT1fPzE6RDQ/LTE6RTQ/MTpzMz8oUTMuY2FsbChzMyxhKS1RMy5jYWxsKHMzLGIpKTowfWVsc2UgaWYoRDQ9PT1FNCl7cmV0dXJuIG40KGEsYil9bT1hO3doaWxlKChtPW0ucGFyZW50Tm9kZSkpe2FwLnVuc2hpZnQobSl9bT1iO3doaWxlKChtPW0ucGFyZW50Tm9kZSkpe2JwLnVuc2hpZnQobSl9d2hpbGUoYXBbaV09PT1icFtpXSl7aSsrfXJldHVybiBpP240KGFwW2ldLGJwW2ldKTphcFtpXT09PUEzPy0xOmJwW2ldPT09QTM/MTowfTtyZXR1cm4gX307aTQubWF0Y2hlcz1mdW5jdGlvbihhLGIpe3JldHVybiBpNChhLG51bGwsbnVsbCxiKX07aTQubWF0Y2hlc1NlbGVjdG9yPWZ1bmN0aW9uKGEsYil7aWYoKGEub3duZXJEb2N1bWVudHx8YSkhPT1oKXt0MyhhKX1iPWIucmVwbGFjZSgkMywiPSckMSddIik7aWYocy5tYXRjaGVzU2VsZWN0b3ImJnUzJiYoIXczfHwhdzMudGVzdChiKSkmJighdjN8fCF2My50ZXN0KGIpKSl7dHJ5e3ZhciBqPXgzLmNhbGwoYSxiKTtpZihqfHxzLmRpc2Nvbm5lY3RlZE1hdGNofHxhLmRvY3VtZW50JiZhLmRvY3VtZW50Lm5vZGVUeXBlIT09MTEpe3JldHVybiBqfX1jYXRjaChlKXt9fXJldHVybiBpNChiLGgsbnVsbCxbYV0pLmxlbmd0aD4wfTtpNC5jb250YWlucz1mdW5jdGlvbihhLGIpe2lmKChhLm93bmVyRG9jdW1lbnR8fGEpIT09aCl7dDMoYSl9cmV0dXJuIHkzKGEsYil9O2k0LmF0dHI9ZnVuY3Rpb24oYSxiKXtpZigoYS5vd25lckRvY3VtZW50fHxhKSE9PWgpe3QzKGEpfXZhciBqPW4uYXR0ckhhbmRsZVtiLnRvTG93ZXJDYXNlKCldLG09aiYmSzMuY2FsbChuLmF0dHJIYW5kbGUsYi50b0xvd2VyQ2FzZSgpKT9qKGEsYiwhdTMpOnU7cmV0dXJuIG09PT11P3MuYXR0cmlidXRlc3x8IXUzP2EuZ2V0QXR0cmlidXRlKGIpOihtPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJm0uc3BlY2lmaWVkP20udmFsdWU6bnVsbDptfTtpNC5lcnJvcj1mdW5jdGlvbihtKXt0aHJvdyBuZXcgRXJyb3IoIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246ICIrbSl9O2k0LnVuaXF1ZVNvcnQ9ZnVuY3Rpb24oYSl7dmFyIGIsbT1bXSxqPTAsaT0wO0czPSFzLmRldGVjdER1cGxpY2F0ZXM7czM9IXMuc29ydFN0YWJsZSYmYS5zbGljZSgwKTthLnNvcnQoSDMpO2lmKEczKXt3aGlsZSgoYj1hW2krK10pKXtpZihiPT09YVtpXSl7aj1tLnB1c2goaSl9fXdoaWxlKGotLSl7YS5zcGxpY2UobVtqXSwxKX19cmV0dXJuIGF9O3A9aTQuZ2V0VGV4dD1mdW5jdGlvbihhKXt2YXIgYixqPSIiLGk9MCxtPWEubm9kZVR5cGU7aWYoIW0pe2Zvcig7KGI9YVtpXSk7aSsrKXtqKz1wKGIpfX1lbHNlIGlmKG09PT0xfHxtPT09OXx8bT09PTExKXtpZih0eXBlb2YgYS50ZXh0Q29udGVudD09PSJzdHJpbmciKXtyZXR1cm4gYS50ZXh0Q29udGVudH1lbHNle2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZyl7ais9cChhKX19fWVsc2UgaWYobT09PTN8fG09PT00KXtyZXR1cm4gYS5ub2RlVmFsdWV9cmV0dXJuIGp9O249aTQuc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86azQsbWF0Y2g6YjQsYXR0ckhhbmRsZTp7fSxmaW5kOnt9LHJlbGF0aXZlOnsiPiI6e2RpcjoicGFyZW50Tm9kZSIsZmlyc3Q6dHJ1ZX0sIiAiOntkaXI6InBhcmVudE5vZGUifSwiKyI6e2RpcjoicHJldmlvdXNTaWJsaW5nIixmaXJzdDp0cnVlfSwifiI6e2RpcjoicHJldmlvdXNTaWJsaW5nIn19LHByZUZpbHRlcjp7IkFUVFIiOmZ1bmN0aW9uKG0pe21bMV09bVsxXS5yZXBsYWNlKGc0LGg0KTttWzNdPShtWzRdfHxtWzVdfHwiIikucmVwbGFjZShnNCxoNCk7aWYobVsyXT09PSJ+PSIpe21bM109IiAiK21bM10rIiAifXJldHVybiBtLnNsaWNlKDAsNCl9LCJDSElMRCI6ZnVuY3Rpb24obSl7bVsxXT1tWzFdLnRvTG93ZXJDYXNlKCk7aWYobVsxXS5zbGljZSgwLDMpPT09Im50aCIpe2lmKCFtWzNdKXtpNC5lcnJvcihtWzBdKX1tWzRdPSsobVs0XT9tWzVdKyhtWzZdfHwxKToyKihtWzNdPT09ImV2ZW4ifHxtWzNdPT09Im9kZCIpKTttWzVdPSsoKG1bN10rbVs4XSl8fG1bM109PT0ib2RkIil9ZWxzZSBpZihtWzNdKXtpNC5lcnJvcihtWzBdKX1yZXR1cm4gbX0sIlBTRVVETyI6ZnVuY3Rpb24obSl7dmFyIGEsYj0hbVs1XSYmbVsyXTtpZihiNFsiQ0hJTEQiXS50ZXN0KG1bMF0pKXtyZXR1cm4gbnVsbH1pZihtWzNdJiZtWzRdIT09dSl7bVsyXT1tWzRdfWVsc2UgaWYoYiYmXzMudGVzdChiKSYmKGE9czQoYix0cnVlKSkmJihhPWIuaW5kZXhPZigiKSIsYi5sZW5ndGgtYSktYi5sZW5ndGgpKXttWzBdPW1bMF0uc2xpY2UoMCxhKTttWzJdPWIuc2xpY2UoMCxhKX1yZXR1cm4gbS5zbGljZSgwLDMpfX0sZmlsdGVyOnsiVEFHIjpmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoZzQsaDQpLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGE9PT0iKiI/ZnVuY3Rpb24oKXtyZXR1cm4gdHJ1ZX06ZnVuY3Rpb24oail7cmV0dXJuIGoubm9kZU5hbWUmJmoubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PWJ9fSwiQ0xBU1MiOmZ1bmN0aW9uKGEpe3ZhciBiPUQzW2ErIiAiXTtyZXR1cm4gYnx8KGI9bmV3IFJlZ0V4cCgiKF58IitTMysiKSIrYSsiKCIrUzMrInwkKSIpKSYmRDMoYSxmdW5jdGlvbihqKXtyZXR1cm4gYi50ZXN0KHR5cGVvZiBqLmNsYXNzTmFtZT09PSJzdHJpbmciJiZqLmNsYXNzTmFtZXx8dHlwZW9mIGouZ2V0QXR0cmlidXRlIT09STMmJmouZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIil9KX0sIkFUVFIiOmZ1bmN0aW9uKGEsYixqKXtyZXR1cm4gZnVuY3Rpb24obSl7dmFyIF89aTQuYXR0cihtLGEpO2lmKF89PW51bGwpe3JldHVybiBiPT09IiE9In1pZighYil7cmV0dXJuIHRydWV9Xys9IiI7cmV0dXJuIGI9PT0iPSI/Xz09PWo6Yj09PSIhPSI/XyE9PWo6Yj09PSJePSI/aiYmXy5pbmRleE9mKGopPT09MDpiPT09Iio9Ij9qJiZfLmluZGV4T2Yoaik+LTE6Yj09PSIkPSI/aiYmXy5zbGljZSgtai5sZW5ndGgpPT09ajpiPT09In49Ij8oIiAiK18rIiAiKS5pbmRleE9mKGopPi0xOmI9PT0ifD0iP189PT1qfHxfLnNsaWNlKDAsai5sZW5ndGgrMSk9PT1qKyItIjpmYWxzZX19LCJDSElMRCI6ZnVuY3Rpb24oYSxiLGosbSxfKXt2YXIgQzQ9YS5zbGljZSgwLDMpIT09Im50aCIsRDQ9YS5zbGljZSgtNCkhPT0ibGFzdCIsRTQ9Yj09PSJvZi10eXBlIjtyZXR1cm4gbT09PTEmJl89PT0wP2Z1bmN0aW9uKEY0KXtyZXR1cm4hIUY0LnBhcmVudE5vZGV9OmZ1bmN0aW9uKEY0LEc0LEg0KXt2YXIgSTQsSjQsSzQsTDQsTTQsTjQsTzQ9QzQhPT1END8ibmV4dFNpYmxpbmciOiJwcmV2aW91c1NpYmxpbmciLFA0PUY0LnBhcmVudE5vZGUsUTQ9RTQmJkY0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksUjQ9IUg0JiYhRTQ7aWYoUDQpe2lmKEM0KXt3aGlsZShPNCl7SzQ9RjQ7d2hpbGUoKEs0PUs0W080XSkpe2lmKEU0P0s0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1RNDpLNC5ub2RlVHlwZT09PTEpe3JldHVybiBmYWxzZX19TjQ9TzQ9YT09PSJvbmx5IiYmIU40JiYibmV4dFNpYmxpbmcifXJldHVybiB0cnVlfU40PVtEND9QNC5maXJzdENoaWxkOlA0Lmxhc3RDaGlsZF07aWYoRDQmJlI0KXtKND1QNFt6M118fChQNFt6M109e30pO0k0PUo0W2FdfHxbXTtNND1JNFswXT09PUIzJiZJNFsxXTtMND1JNFswXT09PUIzJiZJNFsyXTtLND1NNCYmUDQuY2hpbGROb2Rlc1tNNF07d2hpbGUoKEs0PSsrTTQmJks0JiZLNFtPNF18fChMND1NND0wKXx8TjQucG9wKCkpKXtpZihLNC5ub2RlVHlwZT09PTEmJisrTDQmJks0PT09RjQpe0o0W2FdPVtCMyxNNCxMNF07YnJlYWt9fX1lbHNlIGlmKFI0JiYoSTQ9KEY0W3ozXXx8KEY0W3ozXT17fSkpW2FdKSYmSTRbMF09PT1CMyl7TDQ9STRbMV19ZWxzZXt3aGlsZSgoSzQ9KytNNCYmSzQmJks0W080XXx8KEw0PU00PTApfHxONC5wb3AoKSkpe2lmKChFND9LNC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09UTQ6SzQubm9kZVR5cGU9PT0xKSYmKytMNCl7aWYoUjQpeyhLNFt6M118fChLNFt6M109e30pKVthXT1bQjMsTDRdfWlmKEs0PT09RjQpe2JyZWFrfX19fUw0LT1fO3JldHVybiBMND09PW18fChMNCVtPT09MCYmTDQvbT49MCl9fX0sIlBTRVVETyI6ZnVuY3Rpb24oYSxiKXt2YXIgaixtPW4ucHNldWRvc1thXXx8bi5zZXRGaWx0ZXJzW2EudG9Mb3dlckNhc2UoKV18fGk0LmVycm9yKCJ1bnN1cHBvcnRlZCBwc2V1ZG86ICIrYSk7aWYobVt6M10pe3JldHVybiBtKGIpfWlmKG0ubGVuZ3RoPjEpe2o9W2EsYSwiIixiXTtyZXR1cm4gbi5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KGEudG9Mb3dlckNhc2UoKSk/azQoZnVuY3Rpb24oXyx4Myl7dmFyIEM0LEQ0PW0oXyxiKSxpPUQ0Lmxlbmd0aDt3aGlsZShpLS0pe0M0PVEzLmNhbGwoXyxENFtpXSk7X1tDNF09ISh4M1tDNF09RDRbaV0pfX0pOmZ1bmN0aW9uKF8pe3JldHVybiBtKF8sMCxqKX19cmV0dXJuIG19fSxwc2V1ZG9zOnsibm90IjprNChmdW5jdGlvbihhKXt2YXIgYj1bXSxqPVtdLG09dChhLnJlcGxhY2UoSiwiJDEiKSk7cmV0dXJuIG1bejNdP2s0KGZ1bmN0aW9uKF8seDMsQzQsRDQpe3ZhciBFNCxGND1tKF8sbnVsbCxENCxbXSksaT1fLmxlbmd0aDt3aGlsZShpLS0pe2lmKChFND1GNFtpXSkpe19baV09ISh4M1tpXT1FNCl9fX0pOmZ1bmN0aW9uKF8sQzQsRDQpe2JbMF09XzttKGIsbnVsbCxENCxqKTtyZXR1cm4hai5wb3AoKX19KSwiaGFzIjprNChmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIGk0KGEsYikubGVuZ3RoPjB9fSksImNvbnRhaW5zIjprNChmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuKGIudGV4dENvbnRlbnR8fGIuaW5uZXJUZXh0fHxwKGIpKS5pbmRleE9mKGEpPi0xfX0pLCJsYW5nIjprNChmdW5jdGlvbihhKXtpZighYTQudGVzdChhfHwiIikpe2k0LmVycm9yKCJ1bnN1cHBvcnRlZCBsYW5nOiAiK2EpfWE9YS5yZXBsYWNlKGc0LGg0KS50b0xvd2VyQ2FzZSgpO3JldHVybiBmdW5jdGlvbihiKXt2YXIgajtkb3tpZigoaj11Mz9iLmxhbmc6Yi5nZXRBdHRyaWJ1dGUoInhtbDpsYW5nIil8fGIuZ2V0QXR0cmlidXRlKCJsYW5nIikpKXtqPWoudG9Mb3dlckNhc2UoKTtyZXR1cm4gaj09PWF8fGouaW5kZXhPZihhKyItIik9PT0wfX13aGlsZSgoYj1iLnBhcmVudE5vZGUpJiZiLm5vZGVUeXBlPT09MSk7cmV0dXJuIGZhbHNlfX0pLCJ0YXJnZXQiOmZ1bmN0aW9uKGEpe3ZhciBiPXcubG9jYXRpb24mJncubG9jYXRpb24uaGFzaDtyZXR1cm4gYiYmYi5zbGljZSgxKT09PWEuaWR9LCJyb290IjpmdW5jdGlvbihhKXtyZXR1cm4gYT09PWt9LCJmb2N1cyI6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1oLmFjdGl2ZUVsZW1lbnQmJighaC5oYXNGb2N1c3x8aC5oYXNGb2N1cygpKSYmISEoYS50eXBlfHxhLmhyZWZ8fH5hLnRhYkluZGV4KX0sImVuYWJsZWQiOmZ1bmN0aW9uKGEpe3JldHVybiBhLmRpc2FibGVkPT09ZmFsc2V9LCJkaXNhYmxlZCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZGlzYWJsZWQ9PT10cnVlfSwiY2hlY2tlZCI6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybihiPT09ImlucHV0IiYmISFhLmNoZWNrZWQpfHwoYj09PSJvcHRpb24iJiYhIWEuc2VsZWN0ZWQpfSwic2VsZWN0ZWQiOmZ1bmN0aW9uKGEpe2lmKGEucGFyZW50Tm9kZSl7YS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXh9cmV0dXJuIGEuc2VsZWN0ZWQ9PT10cnVlfSwiZW1wdHkiOmZ1bmN0aW9uKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZyl7aWYoYS5ub2RlTmFtZT4iQCJ8fGEubm9kZVR5cGU9PT0zfHxhLm5vZGVUeXBlPT09NCl7cmV0dXJuIGZhbHNlfX1yZXR1cm4gdHJ1ZX0sInBhcmVudCI6ZnVuY3Rpb24oYSl7cmV0dXJuIW4ucHNldWRvc1siZW1wdHkiXShhKX0sImhlYWRlciI6ZnVuY3Rpb24oYSl7cmV0dXJuIGU0LnRlc3QoYS5ub2RlTmFtZSl9LCJpbnB1dCI6ZnVuY3Rpb24oYSl7cmV0dXJuIGQ0LnRlc3QoYS5ub2RlTmFtZSl9LCJidXR0b24iOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYj09PSJpbnB1dCImJmEudHlwZT09PSJidXR0b24ifHxiPT09ImJ1dHRvbiJ9LCJ0ZXh0IjpmdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09ImlucHV0IiYmYS50eXBlPT09InRleHQiJiYoKGI9YS5nZXRBdHRyaWJ1dGUoInR5cGUiKSk9PW51bGx8fGIudG9Mb3dlckNhc2UoKT09PWEudHlwZSl9LCJmaXJzdCI6cTQoZnVuY3Rpb24oKXtyZXR1cm5bMF19KSwibGFzdCI6cTQoZnVuY3Rpb24obSxhKXtyZXR1cm5bYS0xXX0pLCJlcSI6cTQoZnVuY3Rpb24obSxhLGIpe3JldHVybltiPDA/YithOmJdfSksImV2ZW4iOnE0KGZ1bmN0aW9uKG0sYSl7dmFyIGk9MDtmb3IoO2k8YTtpKz0yKXttLnB1c2goaSl9cmV0dXJuIG19KSwib2RkIjpxNChmdW5jdGlvbihtLGEpe3ZhciBpPTE7Zm9yKDtpPGE7aSs9Mil7bS5wdXNoKGkpfXJldHVybiBtfSksImx0IjpxNChmdW5jdGlvbihtLGEsYil7dmFyIGk9YjwwP2IrYTpiO2Zvcig7LS1pPj0wOyl7bS5wdXNoKGkpfXJldHVybiBtfSksImd0IjpxNChmdW5jdGlvbihtLGEsYil7dmFyIGk9YjwwP2IrYTpiO2Zvcig7KytpPGE7KXttLnB1c2goaSl9cmV0dXJuIG19KX19O24ucHNldWRvc1sibnRoIl09bi5wc2V1ZG9zWyJlcSJdO2ZvcihpIGlue3JhZGlvOnRydWUsY2hlY2tib3g6dHJ1ZSxmaWxlOnRydWUscGFzc3dvcmQ6dHJ1ZSxpbWFnZTp0cnVlfSl7bi5wc2V1ZG9zW2ldPW80KGkpfWZvcihpIGlue3N1Ym1pdDp0cnVlLHJlc2V0OnRydWV9KXtuLnBzZXVkb3NbaV09cDQoaSl9ZnVuY3Rpb24gcjQoKXt9cjQucHJvdG90eXBlPW4uZmlsdGVycz1uLnBzZXVkb3M7bi5zZXRGaWx0ZXJzPW5ldyByNCgpO2Z1bmN0aW9uIHM0KGEsYil7dmFyIG0saixfLEM0LEQ0LEU0LEY0LEc0PUUzW2ErIiAiXTtpZihHNCl7cmV0dXJuIGI/MDpHNC5zbGljZSgwKX1END1hO0U0PVtdO0Y0PW4ucHJlRmlsdGVyO3doaWxlKEQ0KXtpZighbXx8KGo9WDMuZXhlYyhENCkpKXtpZihqKXtEND1ENC5zbGljZShqWzBdLmxlbmd0aCl8fEQ0fUU0LnB1c2goXz1bXSl9bT1mYWxzZTtpZigoaj1ZMy5leGVjKEQ0KSkpe209ai5zaGlmdCgpO18ucHVzaCh7dmFsdWU6bSx0eXBlOmpbMF0ucmVwbGFjZShKLCIgIil9KTtEND1ENC5zbGljZShtLmxlbmd0aCl9Zm9yKEM0IGluIG4uZmlsdGVyKXtpZigoaj1iNFtDNF0uZXhlYyhENCkpJiYoIUY0W0M0XXx8KGo9RjRbQzRdKGopKSkpe209ai5zaGlmdCgpO18ucHVzaCh7dmFsdWU6bSx0eXBlOkM0LG1hdGNoZXM6an0pO0Q0PUQ0LnNsaWNlKG0ubGVuZ3RoKX19aWYoIW0pe2JyZWFrfX1yZXR1cm4gYj9ENC5sZW5ndGg6RDQ/aTQuZXJyb3IoYSk6RTMoYSxFNCkuc2xpY2UoMCl9ZnVuY3Rpb24gdDQoYSl7dmFyIGk9MCxiPWEubGVuZ3RoLGo9IiI7Zm9yKDtpPGI7aSsrKXtqKz1hW2ldLnZhbHVlfXJldHVybiBqfWZ1bmN0aW9uIHU0KG0sYSxiKXt2YXIgaj1hLmRpcixfPWImJmo9PT0icGFyZW50Tm9kZSIsQzQ9QzMrKztyZXR1cm4gYS5maXJzdD9mdW5jdGlvbihENCxFNCxGNCl7d2hpbGUoKEQ0PUQ0W2pdKSl7aWYoRDQubm9kZVR5cGU9PT0xfHxfKXtyZXR1cm4gbShENCxFNCxGNCl9fX06ZnVuY3Rpb24oRDQsRTQsRjQpe3ZhciBHNCxINCxJNCxKND1CMysiICIrQzQ7aWYoRjQpe3doaWxlKChEND1ENFtqXSkpe2lmKEQ0Lm5vZGVUeXBlPT09MXx8Xyl7aWYobShENCxFNCxGNCkpe3JldHVybiB0cnVlfX19fWVsc2V7d2hpbGUoKEQ0PUQ0W2pdKSl7aWYoRDQubm9kZVR5cGU9PT0xfHxfKXtJND1ENFt6M118fChENFt6M109e30pO2lmKChIND1JNFtqXSkmJkg0WzBdPT09SjQpe2lmKChHND1INFsxXSk9PT10cnVlfHxHND09PWwpe3JldHVybiBHND09PXRydWV9fWVsc2V7SDQ9STRbal09W0o0XTtINFsxXT1tKEQ0LEU0LEY0KXx8bDtpZihINFsxXT09PXRydWUpe3JldHVybiB0cnVlfX19fX19fWZ1bmN0aW9uIHY0KG0pe3JldHVybiBtLmxlbmd0aD4xP2Z1bmN0aW9uKGEsYixqKXt2YXIgaT1tLmxlbmd0aDt3aGlsZShpLS0pe2lmKCFtW2ldKGEsYixqKSl7cmV0dXJuIGZhbHNlfX1yZXR1cm4gdHJ1ZX06bVswXX1mdW5jdGlvbiB3NChhLG0sYixqLF8pe3ZhciBDNCxEND1bXSxpPTAsRTQ9YS5sZW5ndGgsRjQ9bSE9bnVsbDtmb3IoO2k8RTQ7aSsrKXtpZigoQzQ9YVtpXSkpe2lmKCFifHxiKEM0LGosXykpe0Q0LnB1c2goQzQpO2lmKEY0KXttLnB1c2goaSl9fX19cmV0dXJuIEQ0fWZ1bmN0aW9uIHg0KGEsYixtLGosXyxDNCl7aWYoaiYmIWpbejNdKXtqPXg0KGopfWlmKF8mJiFfW3ozXSl7Xz14NChfLEM0KX1yZXR1cm4gazQoZnVuY3Rpb24oRDQsRTQsRjQsRzQpe3ZhciBINCxpLEk0LEo0PVtdLEs0PVtdLEw0PUU0Lmxlbmd0aCxNND1ENHx8QTQoYnx8IioiLEY0Lm5vZGVUeXBlP1tGNF06RjQsW10pLE40PWEmJihENHx8IWIpP3c0KE00LEo0LGEsRjQsRzQpOk00LE80PW0/X3x8KEQ0P2E6TDR8fGopP1tdOkU0Ok40O2lmKG0pe20oTjQsTzQsRjQsRzQpfWlmKGope0g0PXc0KE80LEs0KTtqKEg0LFtdLEY0LEc0KTtpPUg0Lmxlbmd0aDt3aGlsZShpLS0pe2lmKChJND1INFtpXSkpe080W0s0W2ldXT0hKE40W0s0W2ldXT1JNCl9fX1pZihENCl7aWYoX3x8YSl7aWYoXyl7SDQ9W107aT1PNC5sZW5ndGg7d2hpbGUoaS0tKXtpZigoSTQ9TzRbaV0pKXtINC5wdXNoKChONFtpXT1JNCkpfX1fKG51bGwsKE80PVtdKSxINCxHNCl9aT1PNC5sZW5ndGg7d2hpbGUoaS0tKXtpZigoSTQ9TzRbaV0pJiYoSDQ9Xz9RMy5jYWxsKEQ0LEk0KTpKNFtpXSk+LTEpe0Q0W0g0XT0hKEU0W0g0XT1JNCl9fX19ZWxzZXtPND13NChPND09PUU0P080LnNwbGljZShMNCxPNC5sZW5ndGgpOk80KTtpZihfKXtfKG51bGwsRTQsTzQsRzQpfWVsc2V7TzMuYXBwbHkoRTQsTzQpfX19KX1mdW5jdGlvbiB5NChhKXt2YXIgYixtLGosXz1hLmxlbmd0aCxDND1uLnJlbGF0aXZlW2FbMF0udHlwZV0sRDQ9QzR8fG4ucmVsYXRpdmVbIiAiXSxpPUM0PzE6MCxFND11NChmdW5jdGlvbihINCl7cmV0dXJuIEg0PT09Yn0sRDQsdHJ1ZSksRjQ9dTQoZnVuY3Rpb24oSDQpe3JldHVybiBRMy5jYWxsKGIsSDQpPi0xfSxENCx0cnVlKSxHND1bZnVuY3Rpb24oSDQsSTQsSjQpe3JldHVybighQzQmJihKNHx8STQhPT12KSl8fCgoYj1JNCkubm9kZVR5cGU/RTQoSDQsSTQsSjQpOkY0KEg0LEk0LEo0KSl9XTtmb3IoO2k8XztpKyspe2lmKChtPW4ucmVsYXRpdmVbYVtpXS50eXBlXSkpe0c0PVt1NCh2NChHNCksbSldfWVsc2V7bT1uLmZpbHRlclthW2ldLnR5cGVdLmFwcGx5KG51bGwsYVtpXS5tYXRjaGVzKTtpZihtW3ozXSl7aj0rK2k7Zm9yKDtqPF87aisrKXtpZihuLnJlbGF0aXZlW2Fbal0udHlwZV0pe2JyZWFrfX1yZXR1cm4geDQoaT4xJiZ2NChHNCksaT4xJiZ0NChhLnNsaWNlKDAsaS0xKS5jb25jYXQoe3ZhbHVlOmFbaS0yXS50eXBlPT09IiAiPyIqIjoiIn0pKS5yZXBsYWNlKEosIiQxIiksbSxpPGomJnk0KGEuc2xpY2UoaSxqKSksajxfJiZ5NCgoYT1hLnNsaWNlKGopKSksajxfJiZ0NChhKSl9RzQucHVzaChtKX19cmV0dXJuIHY0KEc0KX1mdW5jdGlvbiB6NChhLGIpe3ZhciBtPTAsXz1iLmxlbmd0aD4wLEM0PWEubGVuZ3RoPjAsRDQ9ZnVuY3Rpb24oRTQsRjQsRzQsSDQsSTQpe3ZhciBKNCxqLEs0LEw0PVtdLE00PTAsaT0iMCIsTjQ9RTQmJltdLE80PUk0IT1udWxsLFA0PXYsUTQ9RTR8fEM0JiZuLmZpbmRbIlRBRyJdKCIqIixJNCYmRjQucGFyZW50Tm9kZXx8RjQpLFI0PShCMys9UDQ9PW51bGw/MTpNYXRoLnJhbmRvbSgpfHwwLjEpO2lmKE80KXt2PUY0IT09aCYmRjQ7bD1tfWZvcig7KEo0PVE0W2ldKSE9bnVsbDtpKyspe2lmKEM0JiZKNCl7aj0wO3doaWxlKChLND1hW2orK10pKXtpZihLNChKNCxGNCxHNCkpe0g0LnB1c2goSjQpO2JyZWFrfX1pZihPNCl7QjM9UjQ7bD0rK219fWlmKF8pe2lmKChKND0hSzQmJko0KSl7TTQtLX1pZihFNCl7TjQucHVzaChKNCl9fX1NNCs9aTtpZihfJiZpIT09TTQpe2o9MDt3aGlsZSgoSzQ9YltqKytdKSl7SzQoTjQsTDQsRjQsRzQpfWlmKEU0KXtpZihNND4wKXt3aGlsZShpLS0pe2lmKCEoTjRbaV18fEw0W2ldKSl7TDRbaV09TTMuY2FsbChINCl9fX1MND13NChMNCl9TzMuYXBwbHkoSDQsTDQpO2lmKE80JiYhRTQmJkw0Lmxlbmd0aD4wJiYoTTQrYi5sZW5ndGgpPjEpe2k0LnVuaXF1ZVNvcnQoSDQpfX1pZihPNCl7QjM9UjQ7dj1QNH1yZXR1cm4gTjR9O3JldHVybiBfP2s0KEQ0KTpENH10PWk0LmNvbXBpbGU9ZnVuY3Rpb24oYSxiKXt2YXIgaSxqPVtdLG09W10sXz1GM1thKyIgIl07aWYoIV8pe2lmKCFiKXtiPXM0KGEpfWk9Yi5sZW5ndGg7d2hpbGUoaS0tKXtfPXk0KGJbaV0pO2lmKF9bejNdKXtqLnB1c2goXyl9ZWxzZXttLnB1c2goXyl9fV89RjMoYSx6NChtLGopKX1yZXR1cm4gX307ZnVuY3Rpb24gQTQoYSxiLGope3ZhciBpPTAsbT1iLmxlbmd0aDtmb3IoO2k8bTtpKyspe2k0KGEsYltpXSxqKX1yZXR1cm4gan1mdW5jdGlvbiBCNChhLGIsaixtKXt2YXIgaSxfLEM0LEQ0LEU0LEY0PXM0KGEpO2lmKCFtKXtpZihGNC5sZW5ndGg9PT0xKXtfPUY0WzBdPUY0WzBdLnNsaWNlKDApO2lmKF8ubGVuZ3RoPjImJihDND1fWzBdKS50eXBlPT09IklEIiYmcy5nZXRCeUlkJiZiLm5vZGVUeXBlPT09OSYmdTMmJm4ucmVsYXRpdmVbX1sxXS50eXBlXSl7Yj0obi5maW5kWyJJRCJdKEM0Lm1hdGNoZXNbMF0ucmVwbGFjZShnNCxoNCksYil8fFtdKVswXTtpZighYil7cmV0dXJuIGp9YT1hLnNsaWNlKF8uc2hpZnQoKS52YWx1ZS5sZW5ndGgpfWk9YjRbIm5lZWRzQ29udGV4dCJdLnRlc3QoYSk/MDpfLmxlbmd0aDt3aGlsZShpLS0pe0M0PV9baV07aWYobi5yZWxhdGl2ZVsoRDQ9QzQudHlwZSldKXticmVha31pZigoRTQ9bi5maW5kW0Q0XSkpe2lmKChtPUU0KEM0Lm1hdGNoZXNbMF0ucmVwbGFjZShnNCxoNCksWjMudGVzdChfWzBdLnR5cGUpJiZiLnBhcmVudE5vZGV8fGIpKSl7Xy5zcGxpY2UoaSwxKTthPW0ubGVuZ3RoJiZ0NChfKTtpZighYSl7TzMuYXBwbHkoaixtKTtyZXR1cm4gan1icmVha319fX19dChhLEY0KShtLGIsIXUzLGosWjMudGVzdChhKSk7cmV0dXJuIGp9cy5zb3J0U3RhYmxlPXozLnNwbGl0KCIiKS5zb3J0KEgzKS5qb2luKCIiKT09PXozO3MuZGV0ZWN0RHVwbGljYXRlcz1HMzt0MygpO3Muc29ydERldGFjaGVkPWw0KGZ1bmN0aW9uKGEpe3JldHVybiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGguY3JlYXRlRWxlbWVudCgiZGl2IikpJjF9KTtpZighbDQoZnVuY3Rpb24oYSl7YS5pbm5lckhUTUw9IjxhIGhyZWY9JyMnPjwvYT4iO3JldHVybiBhLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCJocmVmIik9PT0iIyJ9KSl7bTQoInR5cGV8aHJlZnxoZWlnaHR8d2lkdGgiLGZ1bmN0aW9uKGEsYixyKXtpZighcil7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKGIsYi50b0xvd2VyQ2FzZSgpPT09InR5cGUiPzE6Mil9fSl9aWYoIXMuYXR0cmlidXRlc3x8IWw0KGZ1bmN0aW9uKGEpe2EuaW5uZXJIVE1MPSI8aW5wdXQvPiI7YS5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSgidmFsdWUiLCIiKTtyZXR1cm4gYS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgidmFsdWUiKT09PSIifSkpe200KCJ2YWx1ZSIsZnVuY3Rpb24oYSxiLHIpe2lmKCFyJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT0iaW5wdXQiKXtyZXR1cm4gYS5kZWZhdWx0VmFsdWV9fSl9aWYoIWw0KGZ1bmN0aW9uKGEpe3JldHVybiBhLmdldEF0dHJpYnV0ZSgiZGlzYWJsZWQiKT09bnVsbH0pKXttNChSMyxmdW5jdGlvbihhLGIscil7dmFyIGo7aWYoIXIpe3JldHVybihqPWEuZ2V0QXR0cmlidXRlTm9kZShiKSkmJmouc3BlY2lmaWVkP2oudmFsdWU6YVtiXT09PXRydWU/Yi50b0xvd2VyQ2FzZSgpOm51bGx9fSl9US5maW5kPWk0O1EuZXhwcj1pNC5zZWxlY3RvcnM7US5leHByWyI6Il09US5leHByLnBzZXVkb3M7US51bmlxdWU9aTQudW5pcXVlU29ydDtRLnRleHQ9aTQuZ2V0VGV4dDtRLmlzWE1MRG9jPWk0LmlzWE1MO1EuY29udGFpbnM9aTQuY29udGFpbnN9KSh3KTt2YXIgWD17fTtmdW5jdGlvbiBZKGEpe3ZhciBiPVhbYV09e307US5lYWNoKGEubWF0Y2goSSl8fFtdLGZ1bmN0aW9uKF8saSl7YltpXT10cnVlfSk7cmV0dXJuIGJ9US5DYWxsYmFja3M9ZnVuY3Rpb24oYSl7YT10eXBlb2YgYT09PSJzdHJpbmciPyhYW2FdfHxZKGEpKTpRLmV4dGVuZCh7fSxhKTt2YXIgYixtLGksaixsLG4scD1bXSxzPSFhLm9uY2UmJltdLHI9ZnVuY3Rpb24odil7bT1hLm1lbW9yeSYmdjtpPXRydWU7bD1ufHwwO249MDtqPXAubGVuZ3RoO2I9dHJ1ZTtmb3IoO3AmJmw8ajtsKyspe2lmKHBbbF0uYXBwbHkodlswXSx2WzFdKT09PWZhbHNlJiZhLnN0b3BPbkZhbHNlKXttPWZhbHNlO2JyZWFrfX1iPWZhbHNlO2lmKHApe2lmKHMpe2lmKHMubGVuZ3RoKXtyKHMuc2hpZnQoKSl9fWVsc2UgaWYobSl7cD1bXX1lbHNle3QuZGlzYWJsZSgpfX19LHQ9e2FkZDpmdW5jdGlvbigpe2lmKHApe3ZhciB2PXAubGVuZ3RoOyhmdW5jdGlvbiBhZGQoczMpe1EuZWFjaChzMyxmdW5jdGlvbihfLHQzKXt2YXIgdTM9US50eXBlKHQzKTtpZih1Mz09PSJmdW5jdGlvbiIpe2lmKCFhLnVuaXF1ZXx8IXQuaGFzKHQzKSl7cC5wdXNoKHQzKX19ZWxzZSBpZih0MyYmdDMubGVuZ3RoJiZ1MyE9PSJzdHJpbmciKXthZGQodDMpfX0pfSkoYXJndW1lbnRzKTtpZihiKXtqPXAubGVuZ3RofWVsc2UgaWYobSl7bj12O3IobSl9fXJldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtpZihwKXtRLmVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKF8sdil7dmFyIHMzO3doaWxlKChzMz1RLmluQXJyYXkodixwLHMzKSk+LTEpe3Auc3BsaWNlKHMzLDEpO2lmKGIpe2lmKHMzPD1qKXtqLS19aWYoczM8PWwpe2wtLX19fX0pfXJldHVybiB0aGlzfSxoYXM6ZnVuY3Rpb24odil7cmV0dXJuIHY/US5pbkFycmF5KHYscCk+LTE6ISEocCYmcC5sZW5ndGgpfSxlbXB0eTpmdW5jdGlvbigpe3A9W107aj0wO3JldHVybiB0aGlzfSxkaXNhYmxlOmZ1bmN0aW9uKCl7cD1zPW09dTtyZXR1cm4gdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hcH0sbG9jazpmdW5jdGlvbigpe3M9dTtpZighbSl7dC5kaXNhYmxlKCl9cmV0dXJuIHRoaXN9LGxvY2tlZDpmdW5jdGlvbigpe3JldHVybiFzfSxmaXJlV2l0aDpmdW5jdGlvbih2LF8pe2lmKHAmJighaXx8cykpe189X3x8W107Xz1bdixfLnNsaWNlP18uc2xpY2UoKTpfXTtpZihiKXtzLnB1c2goXyl9ZWxzZXtyKF8pfX1yZXR1cm4gdGhpc30sZmlyZTpmdW5jdGlvbigpe3QuZmlyZVdpdGgodGhpcyxhcmd1bWVudHMpO3JldHVybiB0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhaX19O3JldHVybiB0fTtRLmV4dGVuZCh7RGVmZXJyZWQ6ZnVuY3Rpb24oYSl7dmFyIHQ9W1sicmVzb2x2ZSIsImRvbmUiLFEuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLCJyZXNvbHZlZCJdLFsicmVqZWN0IiwiZmFpbCIsUS5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlamVjdGVkIl0sWyJub3RpZnkiLCJwcm9ncmVzcyIsUS5DYWxsYmFja3MoIm1lbW9yeSIpXV0scz0icGVuZGluZyIscD17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gc30sYWx3YXlzOmZ1bmN0aW9uKCl7Yi5kb25lKGFyZ3VtZW50cykuZmFpbChhcmd1bWVudHMpO3JldHVybiB0aGlzfSx0aGVuOmZ1bmN0aW9uKCl7dmFyIGo9YXJndW1lbnRzO3JldHVybiBRLkRlZmVycmVkKGZ1bmN0aW9uKG4pe1EuZWFjaCh0LGZ1bmN0aW9uKGksbCl7dmFyIG09bFswXSxyPVEuaXNGdW5jdGlvbihqW2ldKSYmaltpXTtiW2xbMV1dKGZ1bmN0aW9uKCl7dmFyIHY9ciYmci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYodiYmUS5pc0Z1bmN0aW9uKHYucHJvbWlzZSkpe3YucHJvbWlzZSgpLmRvbmUobi5yZXNvbHZlKS5mYWlsKG4ucmVqZWN0KS5wcm9ncmVzcyhuLm5vdGlmeSl9ZWxzZXtuW20rIldpdGgiXSh0aGlzPT09cD9uLnByb21pc2UoKTp0aGlzLHI/W3ZdOmFyZ3VtZW50cyl9fSl9KTtqPW51bGx9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24oaSl7cmV0dXJuIGkhPW51bGw/US5leHRlbmQoaSxwKTpwfX0sYj17fTtwLnBpcGU9cC50aGVuO1EuZWFjaCh0LGZ1bmN0aW9uKGksail7dmFyIGw9alsyXSxtPWpbM107cFtqWzFdXT1sLmFkZDtpZihtKXtsLmFkZChmdW5jdGlvbigpe3M9bX0sdFtpXjFdWzJdLmRpc2FibGUsdFsyXVsyXS5sb2NrKX1iW2pbMF1dPWZ1bmN0aW9uKCl7YltqWzBdKyJXaXRoIl0odGhpcz09PWI/cDp0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXN9O2JbalswXSsiV2l0aCJdPWwuZmlyZVdpdGh9KTtwLnByb21pc2UoYik7aWYoYSl7YS5jYWxsKGIsYil9cmV0dXJuIGJ9LHdoZW46ZnVuY3Rpb24ocyl7dmFyIGk9MCxyPUMuY2FsbChhcmd1bWVudHMpLGw9ci5sZW5ndGgsYT1sIT09MXx8KHMmJlEuaXNGdW5jdGlvbihzLnByb21pc2UpKT9sOjAsYj1hPT09MT9zOlEuRGVmZXJyZWQoKSxqPWZ1bmN0aW9uKGksdCx2KXtyZXR1cm4gZnVuY3Rpb24oXyl7dFtpXT10aGlzO3ZbaV09YXJndW1lbnRzLmxlbmd0aD4xP0MuY2FsbChhcmd1bWVudHMpOl87aWYodj09PXApe2Iubm90aWZ5V2l0aCh0LHYpfWVsc2UgaWYoISgtLWEpKXtiLnJlc29sdmVXaXRoKHQsdil9fX0scCxtLG47aWYobD4xKXtwPW5ldyBBcnJheShsKTttPW5ldyBBcnJheShsKTtuPW5ldyBBcnJheShsKTtmb3IoO2k8bDtpKyspe2lmKHJbaV0mJlEuaXNGdW5jdGlvbihyW2ldLnByb21pc2UpKXtyW2ldLnByb21pc2UoKS5kb25lKGooaSxuLHIpKS5mYWlsKGIucmVqZWN0KS5wcm9ncmVzcyhqKGksbSxwKSl9ZWxzZXstLWF9fX1pZighYSl7Yi5yZXNvbHZlV2l0aChuLHIpfXJldHVybiBiLnByb21pc2UoKX19KTtRLnN1cHBvcnQ9KGZ1bmN0aW9uKHMpe3ZhciBiLGEsaixsLG0sbixwLHIsaSx0PWguY3JlYXRlRWxlbWVudCgiZGl2Iik7dC5zZXRBdHRyaWJ1dGUoImNsYXNzTmFtZSIsInQiKTt0LmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IjtiPXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKXx8W107YT10LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJhIilbMF07aWYoIWF8fCFhLnN0eWxlfHwhYi5sZW5ndGgpe3JldHVybiBzfWw9aC5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKTtuPWwuYXBwZW5kQ2hpbGQoaC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSk7aj10LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpWzBdO2Euc3R5bGUuY3NzVGV4dD0idG9wOjFweDtmbG9hdDpsZWZ0O29wYWNpdHk6LjUiO3MuZ2V0U2V0QXR0cmlidXRlPXQuY2xhc3NOYW1lIT09InQiO3MubGVhZGluZ1doaXRlc3BhY2U9dC5maXJzdENoaWxkLm5vZGVUeXBlPT09MztzLnRib2R5PSF0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0Ym9keSIpLmxlbmd0aDtzLmh0bWxTZXJpYWxpemU9ISF0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJsaW5rIikubGVuZ3RoO3Muc3R5bGU9L3RvcC8udGVzdChhLmdldEF0dHJpYnV0ZSgic3R5bGUiKSk7cy5ocmVmTm9ybWFsaXplZD1hLmdldEF0dHJpYnV0ZSgiaHJlZiIpPT09Ii9hIjtzLm9wYWNpdHk9L14wLjUvLnRlc3QoYS5zdHlsZS5vcGFjaXR5KTtzLmNzc0Zsb2F0PSEhYS5zdHlsZS5jc3NGbG9hdDtzLmNoZWNrT249ISFqLnZhbHVlO3Mub3B0U2VsZWN0ZWQ9bi5zZWxlY3RlZDtzLmVuY3R5cGU9ISFoLmNyZWF0ZUVsZW1lbnQoImZvcm0iKS5lbmN0eXBlO3MuaHRtbDVDbG9uZT1oLmNyZWF0ZUVsZW1lbnQoIm5hdiIpLmNsb25lTm9kZSh0cnVlKS5vdXRlckhUTUwhPT0iPDpuYXY+PC86bmF2PiI7cy5pbmxpbmVCbG9ja05lZWRzTGF5b3V0PWZhbHNlO3Muc2hyaW5rV3JhcEJsb2Nrcz1mYWxzZTtzLnBpeGVsUG9zaXRpb249ZmFsc2U7cy5kZWxldGVFeHBhbmRvPXRydWU7cy5ub0Nsb25lRXZlbnQ9dHJ1ZTtzLnJlbGlhYmxlTWFyZ2luUmlnaHQ9dHJ1ZTtzLmJveFNpemluZ1JlbGlhYmxlPXRydWU7ai5jaGVja2VkPXRydWU7cy5ub0Nsb25lQ2hlY2tlZD1qLmNsb25lTm9kZSh0cnVlKS5jaGVja2VkO2wuZGlzYWJsZWQ9dHJ1ZTtzLm9wdERpc2FibGVkPSFuLmRpc2FibGVkO3RyeXtkZWxldGUgdC50ZXN0fWNhdGNoKGUpe3MuZGVsZXRlRXhwYW5kbz1mYWxzZX1qPWguY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtqLnNldEF0dHJpYnV0ZSgidmFsdWUiLCIiKTtzLmlucHV0PWouZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpPT09IiI7ai52YWx1ZT0idCI7ai5zZXRBdHRyaWJ1dGUoInR5cGUiLCJyYWRpbyIpO3MucmFkaW9WYWx1ZT1qLnZhbHVlPT09InQiO2ouc2V0QXR0cmlidXRlKCJjaGVja2VkIiwidCIpO2ouc2V0QXR0cmlidXRlKCJuYW1lIiwidCIpO209aC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7bS5hcHBlbmRDaGlsZChqKTtzLmFwcGVuZENoZWNrZWQ9ai5jaGVja2VkO3MuY2hlY2tDbG9uZT1tLmNsb25lTm9kZSh0cnVlKS5jbG9uZU5vZGUodHJ1ZSkubGFzdENoaWxkLmNoZWNrZWQ7aWYodC5hdHRhY2hFdmVudCl7dC5hdHRhY2hFdmVudCgib25jbGljayIsZnVuY3Rpb24oKXtzLm5vQ2xvbmVFdmVudD1mYWxzZX0pO3QuY2xvbmVOb2RlKHRydWUpLmNsaWNrKCl9Zm9yKGkgaW57c3VibWl0OnRydWUsY2hhbmdlOnRydWUsZm9jdXNpbjp0cnVlfSl7dC5zZXRBdHRyaWJ1dGUocD0ib24iK2ksInQiKTtzW2krIkJ1YmJsZXMiXT1wIGluIHd8fHQuYXR0cmlidXRlc1twXS5leHBhbmRvPT09ZmFsc2V9dC5zdHlsZS5iYWNrZ3JvdW5kQ2xpcD0iY29udGVudC1ib3giO3QuY2xvbmVOb2RlKHRydWUpLnN0eWxlLmJhY2tncm91bmRDbGlwPSIiO3MuY2xlYXJDbG9uZVN0eWxlPXQuc3R5bGUuYmFja2dyb3VuZENsaXA9PT0iY29udGVudC1ib3giO2ZvcihpIGluIFEocykpe2JyZWFrfXMub3duTGFzdD1pIT09IjAiO1EoZnVuY3Rpb24oKXt2YXIgdixfLHMzLHQzPSJwYWRkaW5nOjA7bWFyZ2luOjA7Ym9yZGVyOjA7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDstd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7Iix1Mz1oLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF07aWYoIXUzKXtyZXR1cm59dj1oLmNyZWF0ZUVsZW1lbnQoImRpdiIpO3Yuc3R5bGUuY3NzVGV4dD0iYm9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0Oi05OTk5cHg7bWFyZ2luLXRvcDoxcHgiO3UzLmFwcGVuZENoaWxkKHYpLmFwcGVuZENoaWxkKHQpO3QuaW5uZXJIVE1MPSI8dGFibGU+PHRyPjx0ZD48L3RkPjx0ZD50PC90ZD48L3RyPjwvdGFibGU+IjtzMz10LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0ZCIpO3MzWzBdLnN0eWxlLmNzc1RleHQ9InBhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MDtkaXNwbGF5Om5vbmUiO3I9KHMzWzBdLm9mZnNldEhlaWdodD09PTApO3MzWzBdLnN0eWxlLmRpc3BsYXk9IiI7czNbMV0uc3R5bGUuZGlzcGxheT0ibm9uZSI7cy5yZWxpYWJsZUhpZGRlbk9mZnNldHM9ciYmKHMzWzBdLm9mZnNldEhlaWdodD09PTApO3QuaW5uZXJIVE1MPSIiO3Quc3R5bGUuY3NzVGV4dD0iYm94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MXB4O2JvcmRlcjoxcHg7ZGlzcGxheTpibG9jazt3aWR0aDo0cHg7bWFyZ2luLXRvcDoxJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MSU7IjtRLnN3YXAodTMsdTMuc3R5bGUuem9vbSE9bnVsbD97em9vbToxfTp7fSxmdW5jdGlvbigpe3MuYm94U2l6aW5nPXQub2Zmc2V0V2lkdGg9PT00fSk7aWYody5nZXRDb21wdXRlZFN0eWxlKXtzLnBpeGVsUG9zaXRpb249KHcuZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpfHx7fSkudG9wIT09IjElIjtzLmJveFNpemluZ1JlbGlhYmxlPSh3LmdldENvbXB1dGVkU3R5bGUodCxudWxsKXx8e3dpZHRoOiI0cHgifSkud2lkdGg9PT0iNHB4IjtfPXQuYXBwZW5kQ2hpbGQoaC5jcmVhdGVFbGVtZW50KCJkaXYiKSk7Xy5zdHlsZS5jc3NUZXh0PXQuc3R5bGUuY3NzVGV4dD10MztfLnN0eWxlLm1hcmdpblJpZ2h0PV8uc3R5bGUud2lkdGg9IjAiO3Quc3R5bGUud2lkdGg9IjFweCI7cy5yZWxpYWJsZU1hcmdpblJpZ2h0PSFwYXJzZUZsb2F0KCh3LmdldENvbXB1dGVkU3R5bGUoXyxudWxsKXx8e30pLm1hcmdpblJpZ2h0KX1pZih0eXBlb2YgdC5zdHlsZS56b29tIT09Zil7dC5pbm5lckhUTUw9IiI7dC5zdHlsZS5jc3NUZXh0PXQzKyJ3aWR0aDoxcHg7cGFkZGluZzoxcHg7ZGlzcGxheTppbmxpbmU7em9vbToxIjtzLmlubGluZUJsb2NrTmVlZHNMYXlvdXQ9KHQub2Zmc2V0V2lkdGg9PT0zKTt0LnN0eWxlLmRpc3BsYXk9ImJsb2NrIjt0LmlubmVySFRNTD0iPGRpdj48L2Rpdj4iO3QuZmlyc3RDaGlsZC5zdHlsZS53aWR0aD0iNXB4IjtzLnNocmlua1dyYXBCbG9ja3M9KHQub2Zmc2V0V2lkdGghPT0zKTtpZihzLmlubGluZUJsb2NrTmVlZHNMYXlvdXQpe3UzLnN0eWxlLnpvb209MX19dTMucmVtb3ZlQ2hpbGQodik7dj10PXMzPV89bnVsbH0pO2I9bD1tPW49YT1qPW51bGw7cmV0dXJuIHN9KSh7fSk7dmFyIFo9Lyg/Olx7W1xzXFNdKlx9fFxbW1xzXFNdKlxdKSQvLCQ9LyhbQS1aXSkvZztmdW5jdGlvbiBhMShhLG4sYixwKXtpZighUS5hY2NlcHREYXRhKGEpKXtyZXR1cm59dmFyIHIsdCxpPVEuZXhwYW5kbyxqPWEubm9kZVR5cGUsbD1qP1EuY2FjaGU6YSxtPWo/YVtpXTphW2ldJiZpO2lmKCghbXx8IWxbbV18fCghcCYmIWxbbV0uZGF0YSkpJiZiPT09dSYmdHlwZW9mIG49PT0ic3RyaW5nIil7cmV0dXJufWlmKCFtKXtpZihqKXttPWFbaV09eS5wb3AoKXx8US5ndWlkKyt9ZWxzZXttPWl9fWlmKCFsW21dKXtsW21dPWo/e306e3RvSlNPTjpRLm5vb3B9fWlmKHR5cGVvZiBuPT09Im9iamVjdCJ8fHR5cGVvZiBuPT09ImZ1bmN0aW9uIil7aWYocCl7bFttXT1RLmV4dGVuZChsW21dLG4pfWVsc2V7bFttXS5kYXRhPVEuZXh0ZW5kKGxbbV0uZGF0YSxuKX19dD1sW21dO2lmKCFwKXtpZighdC5kYXRhKXt0LmRhdGE9e319dD10LmRhdGF9aWYoYiE9PXUpe3RbUS5jYW1lbENhc2UobildPWJ9aWYodHlwZW9mIG49PT0ic3RyaW5nIil7cj10W25dO2lmKHI9PW51bGwpe3I9dFtRLmNhbWVsQ2FzZShuKV19fWVsc2V7cj10fXJldHVybiByfWZ1bmN0aW9uIGIxKGEsbixwKXtpZighUS5hY2NlcHREYXRhKGEpKXtyZXR1cm59dmFyIHQsaSxiPWEubm9kZVR5cGUsaj1iP1EuY2FjaGU6YSxsPWI/YVtRLmV4cGFuZG9dOlEuZXhwYW5kbztpZighaltsXSl7cmV0dXJufWlmKG4pe3Q9cD9qW2xdOmpbbF0uZGF0YTtpZih0KXtpZighUS5pc0FycmF5KG4pKXtpZihuIGluIHQpe249W25dfWVsc2V7bj1RLmNhbWVsQ2FzZShuKTtpZihuIGluIHQpe249W25dfWVsc2V7bj1uLnNwbGl0KCIgIil9fX1lbHNle249bi5jb25jYXQoUS5tYXAobixRLmNhbWVsQ2FzZSkpfWk9bi5sZW5ndGg7d2hpbGUoaS0tKXtkZWxldGUgdFtuW2ldXX1pZihwPyFkMSh0KTohUS5pc0VtcHR5T2JqZWN0KHQpKXtyZXR1cm59fX1pZighcCl7ZGVsZXRlIGpbbF0uZGF0YTtpZighZDEoaltsXSkpe3JldHVybn19aWYoYil7US5jbGVhbkRhdGEoW2FdLHRydWUpfWVsc2UgaWYoUS5zdXBwb3J0LmRlbGV0ZUV4cGFuZG98fGohPWoud2luZG93KXtkZWxldGUgaltsXX1lbHNle2pbbF09bnVsbH19US5leHRlbmQoe2NhY2hlOnt9LG5vRGF0YTp7ImFwcGxldCI6dHJ1ZSwiZW1iZWQiOnRydWUsIm9iamVjdCI6ImNsc2lkOkQyN0NEQjZFLUFFNkQtMTFjZi05NkI4LTQ0NDU1MzU0MDAwMCJ9LGhhc0RhdGE6ZnVuY3Rpb24oYSl7YT1hLm5vZGVUeXBlP1EuY2FjaGVbYVtRLmV4cGFuZG9dXTphW1EuZXhwYW5kb107cmV0dXJuISFhJiYhZDEoYSl9LGRhdGE6ZnVuY3Rpb24oYSxuLGIpe3JldHVybiBhMShhLG4sYil9LHJlbW92ZURhdGE6ZnVuY3Rpb24oYSxuKXtyZXR1cm4gYjEoYSxuKX0sX2RhdGE6ZnVuY3Rpb24oYSxuLGIpe3JldHVybiBhMShhLG4sYix0cnVlKX0sX3JlbW92ZURhdGE6ZnVuY3Rpb24oYSxuKXtyZXR1cm4gYjEoYSxuLHRydWUpfSxhY2NlcHREYXRhOmZ1bmN0aW9uKGEpe2lmKGEubm9kZVR5cGUmJmEubm9kZVR5cGUhPT0xJiZhLm5vZGVUeXBlIT09OSl7cmV0dXJuIGZhbHNlfXZhciBuPWEubm9kZU5hbWUmJlEubm9EYXRhW2Eubm9kZU5hbWUudG9Mb3dlckNhc2UoKV07cmV0dXJuIW58fG4hPT10cnVlJiZhLmdldEF0dHJpYnV0ZSgiY2xhc3NpZCIpPT09bn19KTtRLmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihhLHYpe3ZhciBiLG4saj1udWxsLGk9MCxsPXRoaXNbMF07aWYoYT09PXUpe2lmKHRoaXMubGVuZ3RoKXtqPVEuZGF0YShsKTtpZihsLm5vZGVUeXBlPT09MSYmIVEuX2RhdGEobCwicGFyc2VkQXR0cnMiKSl7Yj1sLmF0dHJpYnV0ZXM7Zm9yKDtpPGIubGVuZ3RoO2krKyl7bj1iW2ldLm5hbWU7aWYobi5pbmRleE9mKCJkYXRhLSIpPT09MCl7bj1RLmNhbWVsQ2FzZShuLnNsaWNlKDUpKTtjMShsLG4saltuXSl9fVEuX2RhdGEobCwicGFyc2VkQXR0cnMiLHRydWUpfX1yZXR1cm4gan1pZih0eXBlb2YgYT09PSJvYmplY3QiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7US5kYXRhKHRoaXMsYSl9KX1yZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xP3RoaXMuZWFjaChmdW5jdGlvbigpe1EuZGF0YSh0aGlzLGEsdil9KTpsP2MxKGwsYSxRLmRhdGEobCxhKSk6bnVsbH0scmVtb3ZlRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7US5yZW1vdmVEYXRhKHRoaXMsYSl9KX19KTtmdW5jdGlvbiBjMShhLGIsaSl7aWYoaT09PXUmJmEubm9kZVR5cGU9PT0xKXt2YXIgbj0iZGF0YS0iK2IucmVwbGFjZSgkLCItJDEiKS50b0xvd2VyQ2FzZSgpO2k9YS5nZXRBdHRyaWJ1dGUobik7aWYodHlwZW9mIGk9PT0ic3RyaW5nIil7dHJ5e2k9aT09PSJ0cnVlIj90cnVlOmk9PT0iZmFsc2UiP2ZhbHNlOmk9PT0ibnVsbCI/bnVsbDoraSsiIj09PWk/K2k6Wi50ZXN0KGkpP1EucGFyc2VKU09OKGkpOml9Y2F0Y2goZSl7fVEuZGF0YShhLGIsaSl9ZWxzZXtpPXV9fXJldHVybiBpfWZ1bmN0aW9uIGQxKGEpe3ZhciBuO2ZvcihuIGluIGEpe2lmKG49PT0iZGF0YSImJlEuaXNFbXB0eU9iamVjdChhW25dKSl7Y29udGludWV9aWYobiE9PSJ0b0pTT04iKXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfVEuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLHQsYil7dmFyIGk7aWYoYSl7dD0odHx8ImZ4IikrInF1ZXVlIjtpPVEuX2RhdGEoYSx0KTtpZihiKXtpZighaXx8US5pc0FycmF5KGIpKXtpPVEuX2RhdGEoYSx0LFEubWFrZUFycmF5KGIpKX1lbHNle2kucHVzaChiKX19cmV0dXJuIGl8fFtdfX0sZGVxdWV1ZTpmdW5jdGlvbihhLHQpe3Q9dHx8ImZ4Ijt2YXIgYj1RLnF1ZXVlKGEsdCkscz1iLmxlbmd0aCxpPWIuc2hpZnQoKSxqPVEuX3F1ZXVlSG9va3MoYSx0KSxuPWZ1bmN0aW9uKCl7US5kZXF1ZXVlKGEsdCl9O2lmKGk9PT0iaW5wcm9ncmVzcyIpe2k9Yi5zaGlmdCgpO3MtLX1pZihpKXtpZih0PT09ImZ4Iil7Yi51bnNoaWZ0KCJpbnByb2dyZXNzIil9ZGVsZXRlIGouc3RvcDtpLmNhbGwoYSxuLGopfWlmKCFzJiZqKXtqLmVtcHR5LmZpcmUoKX19LF9xdWV1ZUhvb2tzOmZ1bmN0aW9uKGEsdCl7dmFyIGI9dCsicXVldWVIb29rcyI7cmV0dXJuIFEuX2RhdGEoYSxiKXx8US5fZGF0YShhLGIse2VtcHR5OlEuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLmFkZChmdW5jdGlvbigpe1EuX3JlbW92ZURhdGEoYSx0KyJxdWV1ZSIpO1EuX3JlbW92ZURhdGEoYSxiKX0pfSl9fSk7US5mbi5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKHQsYSl7dmFyIHM9MjtpZih0eXBlb2YgdCE9PSJzdHJpbmciKXthPXQ7dD0iZngiO3MtLX1pZihhcmd1bWVudHMubGVuZ3RoPHMpe3JldHVybiBRLnF1ZXVlKHRoaXNbMF0sdCl9cmV0dXJuIGE9PT11P3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9US5xdWV1ZSh0aGlzLHQsYSk7US5fcXVldWVIb29rcyh0aGlzLHQpO2lmKHQ9PT0iZngiJiZiWzBdIT09ImlucHJvZ3Jlc3MiKXtRLmRlcXVldWUodGhpcyx0KX19KX0sZGVxdWV1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7US5kZXF1ZXVlKHRoaXMsdCl9KX0sZGVsYXk6ZnVuY3Rpb24odCxhKXt0PVEuZng/US5meC5zcGVlZHNbdF18fHQ6dDthPWF8fCJmeCI7cmV0dXJuIHRoaXMucXVldWUoYSxmdW5jdGlvbihuLGIpe3ZhciBpPXNldFRpbWVvdXQobix0KTtiLnN0b3A9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoaSl9fSl9LGNsZWFyUXVldWU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucXVldWUodHx8ImZ4IixbXSl9LHByb21pc2U6ZnVuY3Rpb24odCxhKXt2YXIgYixqPTEsbD1RLkRlZmVycmVkKCksbT10aGlzLGk9dGhpcy5sZW5ndGgscj1mdW5jdGlvbigpe2lmKCEoLS1qKSl7bC5yZXNvbHZlV2l0aChtLFttXSl9fTtpZih0eXBlb2YgdCE9PSJzdHJpbmciKXthPXQ7dD11fXQ9dHx8ImZ4Ijt3aGlsZShpLS0pe2I9US5fZGF0YShtW2ldLHQrInF1ZXVlSG9va3MiKTtpZihiJiZiLmVtcHR5KXtqKys7Yi5lbXB0eS5hZGQocil9fXIoKTtyZXR1cm4gbC5wcm9taXNlKGEpfX0pO3ZhciBlMSxmMSxnMT0vW1x0XHJcblxmXS9nLGgxPS9cci9nLGkxPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QpJC9pLGoxPS9eKD86YXxhcmVhKSQvaSxrMT0vXig/OmNoZWNrZWR8c2VsZWN0ZWQpJC9pLGwxPVEuc3VwcG9ydC5nZXRTZXRBdHRyaWJ1dGUsbTE9US5zdXBwb3J0LmlucHV0O1EuZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKG4sdil7cmV0dXJuIFEuYWNjZXNzKHRoaXMsUS5hdHRyLG4sdixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKG4pe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtRLnJlbW92ZUF0dHIodGhpcyxuKX0pfSxwcm9wOmZ1bmN0aW9uKG4sdil7cmV0dXJuIFEuYWNjZXNzKHRoaXMsUS5wcm9wLG4sdixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVQcm9wOmZ1bmN0aW9uKG4pe249US5wcm9wRml4W25dfHxuO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt0cnl7dGhpc1tuXT11O2RlbGV0ZSB0aGlzW25dfWNhdGNoKGUpe319KX0sYWRkQ2xhc3M6ZnVuY3Rpb24odil7dmFyIGEsYixsLG0saixpPTAsbj10aGlzLmxlbmd0aCxwPXR5cGVvZiB2PT09InN0cmluZyImJnY7aWYoUS5pc0Z1bmN0aW9uKHYpKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGope1EodGhpcykuYWRkQ2xhc3Modi5jYWxsKHRoaXMsaix0aGlzLmNsYXNzTmFtZSkpfSl9aWYocCl7YT0odnx8IiIpLm1hdGNoKEkpfHxbXTtmb3IoO2k8bjtpKyspe2I9dGhpc1tpXTtsPWIubm9kZVR5cGU9PT0xJiYoYi5jbGFzc05hbWU/KCIgIitiLmNsYXNzTmFtZSsiICIpLnJlcGxhY2UoZzEsIiAiKToiICIpO2lmKGwpe2o9MDt3aGlsZSgobT1hW2orK10pKXtpZihsLmluZGV4T2YoIiAiK20rIiAiKTwwKXtsKz1tKyIgIn19Yi5jbGFzc05hbWU9US50cmltKGwpfX19cmV0dXJuIHRoaXN9LHJlbW92ZUNsYXNzOmZ1bmN0aW9uKHYpe3ZhciBhLGIsbCxtLGosaT0wLG49dGhpcy5sZW5ndGgscD1hcmd1bWVudHMubGVuZ3RoPT09MHx8dHlwZW9mIHY9PT0ic3RyaW5nIiYmdjtpZihRLmlzRnVuY3Rpb24odikpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oail7USh0aGlzKS5yZW1vdmVDbGFzcyh2LmNhbGwodGhpcyxqLHRoaXMuY2xhc3NOYW1lKSl9KX1pZihwKXthPSh2fHwiIikubWF0Y2goSSl8fFtdO2Zvcig7aTxuO2krKyl7Yj10aGlzW2ldO2w9Yi5ub2RlVHlwZT09PTEmJihiLmNsYXNzTmFtZT8oIiAiK2IuY2xhc3NOYW1lKyIgIikucmVwbGFjZShnMSwiICIpOiIiKTtpZihsKXtqPTA7d2hpbGUoKG09YVtqKytdKSl7d2hpbGUobC5pbmRleE9mKCIgIittKyIgIik+PTApe2w9bC5yZXBsYWNlKCIgIittKyIgIiwiICIpfX1iLmNsYXNzTmFtZT12P1EudHJpbShsKToiIn19fXJldHVybiB0aGlzfSx0b2dnbGVDbGFzczpmdW5jdGlvbih2LHMpe3ZhciB0PXR5cGVvZiB2O2lmKHR5cGVvZiBzPT09ImJvb2xlYW4iJiZ0PT09InN0cmluZyIpe3JldHVybiBzP3RoaXMuYWRkQ2xhc3Modik6dGhpcy5yZW1vdmVDbGFzcyh2KX1pZihRLmlzRnVuY3Rpb24odikpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7USh0aGlzKS50b2dnbGVDbGFzcyh2LmNhbGwodGhpcyxpLHRoaXMuY2xhc3NOYW1lLHMpLHMpfSl9cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2lmKHQ9PT0ic3RyaW5nIil7dmFyIGEsaT0wLGI9USh0aGlzKSxqPXYubWF0Y2goSSl8fFtdO3doaWxlKChhPWpbaSsrXSkpe2lmKGIuaGFzQ2xhc3MoYSkpe2IucmVtb3ZlQ2xhc3MoYSl9ZWxzZXtiLmFkZENsYXNzKGEpfX19ZWxzZSBpZih0PT09Znx8dD09PSJib29sZWFuIil7aWYodGhpcy5jbGFzc05hbWUpe1EuX2RhdGEodGhpcywiX19jbGFzc05hbWVfXyIsdGhpcy5jbGFzc05hbWUpfXRoaXMuY2xhc3NOYW1lPXRoaXMuY2xhc3NOYW1lfHx2PT09ZmFsc2U/IiI6US5fZGF0YSh0aGlzLCJfX2NsYXNzTmFtZV9fIil8fCIifX0pfSxoYXNDbGFzczpmdW5jdGlvbihzKXt2YXIgYT0iICIrcysiICIsaT0wLGw9dGhpcy5sZW5ndGg7Zm9yKDtpPGw7aSsrKXtpZih0aGlzW2ldLm5vZGVUeXBlPT09MSYmKCIgIit0aGlzW2ldLmNsYXNzTmFtZSsiICIpLnJlcGxhY2UoZzEsIiAiKS5pbmRleE9mKGEpPj0wKXtyZXR1cm4gdHJ1ZX19cmV0dXJuIGZhbHNlfSx2YWw6ZnVuY3Rpb24odil7dmFyIHIsYSxiLGo9dGhpc1swXTtpZighYXJndW1lbnRzLmxlbmd0aCl7aWYoail7YT1RLnZhbEhvb2tzW2oudHlwZV18fFEudmFsSG9va3Nbai5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXTtpZihhJiYiZ2V0ImluIGEmJihyPWEuZ2V0KGosInZhbHVlIikpIT09dSl7cmV0dXJuIHJ9cj1qLnZhbHVlO3JldHVybiB0eXBlb2Ygcj09PSJzdHJpbmciP3IucmVwbGFjZShoMSwiIik6cj09bnVsbD8iIjpyfXJldHVybn1iPVEuaXNGdW5jdGlvbih2KTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGkpe3ZhciBsO2lmKHRoaXMubm9kZVR5cGUhPT0xKXtyZXR1cm59aWYoYil7bD12LmNhbGwodGhpcyxpLFEodGhpcykudmFsKCkpfWVsc2V7bD12fWlmKGw9PW51bGwpe2w9IiJ9ZWxzZSBpZih0eXBlb2YgbD09PSJudW1iZXIiKXtsKz0iIn1lbHNlIGlmKFEuaXNBcnJheShsKSl7bD1RLm1hcChsLGZ1bmN0aW9uKHYpe3JldHVybiB2PT1udWxsPyIiOnYrIiJ9KX1hPVEudmFsSG9va3NbdGhpcy50eXBlXXx8US52YWxIb29rc1t0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldO2lmKCFhfHwhKCJzZXQiaW4gYSl8fGEuc2V0KHRoaXMsbCwidmFsdWUiKT09PXUpe3RoaXMudmFsdWU9bH19KX19KTtRLmV4dGVuZCh7dmFsSG9va3M6e29wdGlvbjp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciB2PVEuZmluZC5hdHRyKGEsInZhbHVlIik7cmV0dXJuIHYhPW51bGw/djphLnRleHR9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbihhKXt2YXIgdixiLGo9YS5vcHRpb25zLGw9YS5zZWxlY3RlZEluZGV4LG09YS50eXBlPT09InNlbGVjdC1vbmUifHxsPDAsbj1tP251bGw6W10scD1tP2wrMTpqLmxlbmd0aCxpPWw8MD9wOm0/bDowO2Zvcig7aTxwO2krKyl7Yj1qW2ldO2lmKChiLnNlbGVjdGVkfHxpPT09bCkmJihRLnN1cHBvcnQub3B0RGlzYWJsZWQ/IWIuZGlzYWJsZWQ6Yi5nZXRBdHRyaWJ1dGUoImRpc2FibGVkIik9PT1udWxsKSYmKCFiLnBhcmVudE5vZGUuZGlzYWJsZWR8fCFRLm5vZGVOYW1lKGIucGFyZW50Tm9kZSwib3B0Z3JvdXAiKSkpe3Y9UShiKS52YWwoKTtpZihtKXtyZXR1cm4gdn1uLnB1c2godil9fXJldHVybiBufSxzZXQ6ZnVuY3Rpb24oYSx2KXt2YXIgYixqLGw9YS5vcHRpb25zLG09US5tYWtlQXJyYXkodiksaT1sLmxlbmd0aDt3aGlsZShpLS0pe2o9bFtpXTtpZigoai5zZWxlY3RlZD1RLmluQXJyYXkoUShqKS52YWwoKSxtKT49MCkpe2I9dHJ1ZX19aWYoIWIpe2Euc2VsZWN0ZWRJbmRleD0tMX1yZXR1cm4gbX19fSxhdHRyOmZ1bmN0aW9uKGEsbix2KXt2YXIgYixyLGk9YS5ub2RlVHlwZTtpZighYXx8aT09PTN8fGk9PT04fHxpPT09Mil7cmV0dXJufWlmKHR5cGVvZiBhLmdldEF0dHJpYnV0ZT09PWYpe3JldHVybiBRLnByb3AoYSxuLHYpfWlmKGkhPT0xfHwhUS5pc1hNTERvYyhhKSl7bj1uLnRvTG93ZXJDYXNlKCk7Yj1RLmF0dHJIb29rc1tuXXx8KFEuZXhwci5tYXRjaC5ib29sLnRlc3Qobik/ZjE6ZTEpfWlmKHYhPT11KXtpZih2PT09bnVsbCl7US5yZW1vdmVBdHRyKGEsbil9ZWxzZSBpZihiJiYic2V0ImluIGImJihyPWIuc2V0KGEsdixuKSkhPT11KXtyZXR1cm4gcn1lbHNle2Euc2V0QXR0cmlidXRlKG4sdisiIik7cmV0dXJuIHZ9fWVsc2UgaWYoYiYmImdldCJpbiBiJiYocj1iLmdldChhLG4pKSE9PW51bGwpe3JldHVybiByfWVsc2V7cj1RLmZpbmQuYXR0cihhLG4pO3JldHVybiByPT1udWxsP3U6cn19LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSx2KXt2YXIgbixwLGk9MCxiPXYmJnYubWF0Y2goSSk7aWYoYiYmYS5ub2RlVHlwZT09PTEpe3doaWxlKChuPWJbaSsrXSkpe3A9US5wcm9wRml4W25dfHxuO2lmKFEuZXhwci5tYXRjaC5ib29sLnRlc3Qobikpe2lmKG0xJiZsMXx8IWsxLnRlc3Qobikpe2FbcF09ZmFsc2V9ZWxzZXthW1EuY2FtZWxDYXNlKCJkZWZhdWx0LSIrbildPWFbcF09ZmFsc2V9fWVsc2V7US5hdHRyKGEsbiwiIil9YS5yZW1vdmVBdHRyaWJ1dGUobDE/bjpwKX19fSxhdHRySG9va3M6e3R5cGU6e3NldDpmdW5jdGlvbihhLHYpe2lmKCFRLnN1cHBvcnQucmFkaW9WYWx1ZSYmdj09PSJyYWRpbyImJlEubm9kZU5hbWUoYSwiaW5wdXQiKSl7dmFyIGI9YS52YWx1ZTthLnNldEF0dHJpYnV0ZSgidHlwZSIsdik7aWYoYil7YS52YWx1ZT1ifXJldHVybiB2fX19fSxwcm9wRml4OnsiZm9yIjoiaHRtbEZvciIsImNsYXNzIjoiY2xhc3NOYW1lIn0scHJvcDpmdW5jdGlvbihhLG4sdil7dmFyIHIsYixpLGo9YS5ub2RlVHlwZTtpZighYXx8aj09PTN8fGo9PT04fHxqPT09Mil7cmV0dXJufWk9aiE9PTF8fCFRLmlzWE1MRG9jKGEpO2lmKGkpe249US5wcm9wRml4W25dfHxuO2I9US5wcm9wSG9va3Nbbl19aWYodiE9PXUpe3JldHVybiBiJiYic2V0ImluIGImJihyPWIuc2V0KGEsdixuKSkhPT11P3I6KGFbbl09dil9ZWxzZXtyZXR1cm4gYiYmImdldCJpbiBiJiYocj1iLmdldChhLG4pKSE9PW51bGw/cjphW25dfX0scHJvcEhvb2tzOnt0YWJJbmRleDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciB0PVEuZmluZC5hdHRyKGEsInRhYmluZGV4Iik7cmV0dXJuIHQ/cGFyc2VJbnQodCwxMCk6aTEudGVzdChhLm5vZGVOYW1lKXx8ajEudGVzdChhLm5vZGVOYW1lKSYmYS5ocmVmPzA6LTF9fX19KTtmMT17c2V0OmZ1bmN0aW9uKGEsdixuKXtpZih2PT09ZmFsc2Upe1EucmVtb3ZlQXR0cihhLG4pfWVsc2UgaWYobTEmJmwxfHwhazEudGVzdChuKSl7YS5zZXRBdHRyaWJ1dGUoIWwxJiZRLnByb3BGaXhbbl18fG4sbil9ZWxzZXthW1EuY2FtZWxDYXNlKCJkZWZhdWx0LSIrbildPWFbbl09dHJ1ZX1yZXR1cm4gbn19O1EuZWFjaChRLmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1x3Ky9nKSxmdW5jdGlvbihpLG4pe3ZhciBhPVEuZXhwci5hdHRySGFuZGxlW25dfHxRLmZpbmQuYXR0cjtRLmV4cHIuYXR0ckhhbmRsZVtuXT1tMSYmbDF8fCFrMS50ZXN0KG4pP2Z1bmN0aW9uKGIsbixqKXt2YXIgbD1RLmV4cHIuYXR0ckhhbmRsZVtuXSxyPWo/dTooUS5leHByLmF0dHJIYW5kbGVbbl09dSkhPWEoYixuLGopP24udG9Mb3dlckNhc2UoKTpudWxsO1EuZXhwci5hdHRySGFuZGxlW25dPWw7cmV0dXJuIHJ9OmZ1bmN0aW9uKGIsbixqKXtyZXR1cm4gaj91OmJbUS5jYW1lbENhc2UoImRlZmF1bHQtIituKV0/bi50b0xvd2VyQ2FzZSgpOm51bGx9fSk7aWYoIW0xfHwhbDEpe1EuYXR0ckhvb2tzLnZhbHVlPXtzZXQ6ZnVuY3Rpb24oYSx2LG4pe2lmKFEubm9kZU5hbWUoYSwiaW5wdXQiKSl7YS5kZWZhdWx0VmFsdWU9dn1lbHNle3JldHVybiBlMSYmZTEuc2V0KGEsdixuKX19fX1pZighbDEpe2UxPXtzZXQ6ZnVuY3Rpb24oYSx2LG4pe3ZhciByPWEuZ2V0QXR0cmlidXRlTm9kZShuKTtpZighcil7YS5zZXRBdHRyaWJ1dGVOb2RlKChyPWEub3duZXJEb2N1bWVudC5jcmVhdGVBdHRyaWJ1dGUobikpKX1yLnZhbHVlPXYrPSIiO3JldHVybiBuPT09InZhbHVlInx8dj09PWEuZ2V0QXR0cmlidXRlKG4pP3Y6dX19O1EuZXhwci5hdHRySGFuZGxlLmlkPVEuZXhwci5hdHRySGFuZGxlLm5hbWU9US5leHByLmF0dHJIYW5kbGUuY29vcmRzPWZ1bmN0aW9uKGEsbixpKXt2YXIgcjtyZXR1cm4gaT91OihyPWEuZ2V0QXR0cmlidXRlTm9kZShuKSkmJnIudmFsdWUhPT0iIj9yLnZhbHVlOm51bGx9O1EudmFsSG9va3MuYnV0dG9uPXtnZXQ6ZnVuY3Rpb24oYSxuKXt2YXIgcj1hLmdldEF0dHJpYnV0ZU5vZGUobik7cmV0dXJuIHImJnIuc3BlY2lmaWVkP3IudmFsdWU6dX0sc2V0OmUxLnNldH07US5hdHRySG9va3MuY29udGVudGVkaXRhYmxlPXtzZXQ6ZnVuY3Rpb24oYSx2LG4pe2UxLnNldChhLHY9PT0iIj9mYWxzZTp2LG4pfX07US5lYWNoKFsid2lkdGgiLCJoZWlnaHQiXSxmdW5jdGlvbihpLG4pe1EuYXR0ckhvb2tzW25dPXtzZXQ6ZnVuY3Rpb24oYSx2KXtpZih2PT09IiIpe2Euc2V0QXR0cmlidXRlKG4sImF1dG8iKTtyZXR1cm4gdn19fX0pfWlmKCFRLnN1cHBvcnQuaHJlZk5vcm1hbGl6ZWQpe1EuZWFjaChbImhyZWYiLCJzcmMiXSxmdW5jdGlvbihpLG4pe1EucHJvcEhvb2tzW25dPXtnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKG4sNCl9fX0pfWlmKCFRLnN1cHBvcnQuc3R5bGUpe1EuYXR0ckhvb2tzLnN0eWxlPXtnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuc3R5bGUuY3NzVGV4dHx8dX0sc2V0OmZ1bmN0aW9uKGEsdil7cmV0dXJuKGEuc3R5bGUuY3NzVGV4dD12KyIiKX19fWlmKCFRLnN1cHBvcnQub3B0U2VsZWN0ZWQpe1EucHJvcEhvb2tzLnNlbGVjdGVkPXtnZXQ6ZnVuY3Rpb24oYSl7dmFyIHA9YS5wYXJlbnROb2RlO2lmKHApe3Auc2VsZWN0ZWRJbmRleDtpZihwLnBhcmVudE5vZGUpe3AucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4fX1yZXR1cm4gbnVsbH19fVEuZWFjaChbInRhYkluZGV4IiwicmVhZE9ubHkiLCJtYXhMZW5ndGgiLCJjZWxsU3BhY2luZyIsImNlbGxQYWRkaW5nIiwicm93U3BhbiIsImNvbFNwYW4iLCJ1c2VNYXAiLCJmcmFtZUJvcmRlciIsImNvbnRlbnRFZGl0YWJsZSJdLGZ1bmN0aW9uKCl7US5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pO2lmKCFRLnN1cHBvcnQuZW5jdHlwZSl7US5wcm9wRml4LmVuY3R5cGU9ImVuY29kaW5nIn1RLmVhY2goWyJyYWRpbyIsImNoZWNrYm94Il0sZnVuY3Rpb24oKXtRLnZhbEhvb2tzW3RoaXNdPXtzZXQ6ZnVuY3Rpb24oYSx2KXtpZihRLmlzQXJyYXkodikpe3JldHVybihhLmNoZWNrZWQ9US5pbkFycmF5KFEoYSkudmFsKCksdik+PTApfX19O2lmKCFRLnN1cHBvcnQuY2hlY2tPbil7US52YWxIb29rc1t0aGlzXS5nZXQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpPT09bnVsbD8ib24iOmEudmFsdWV9fX0pO3ZhciBuMT0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYSkkL2ksbzE9L15rZXkvLHAxPS9eKD86bW91c2V8Y29udGV4dG1lbnUpfGNsaWNrLyxxMT0vXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8scjE9L14oW14uXSopKD86XC4oLispfCkkLztmdW5jdGlvbiBzMSgpe3JldHVybiB0cnVlfWZ1bmN0aW9uIHQxKCl7cmV0dXJuIGZhbHNlfWZ1bmN0aW9uIHUxKCl7dHJ5e3JldHVybiBoLmFjdGl2ZUVsZW1lbnR9Y2F0Y2goYSl7fX1RLmV2ZW50PXtnbG9iYWw6e30sYWRkOmZ1bmN0aW9uKGEsYixpLGoscyl7dmFyIGwsbSx0LG4scCxyLHYsXyxzMyx0Myx1Myx2Mz1RLl9kYXRhKGEpO2lmKCF2Myl7cmV0dXJufWlmKGkuaGFuZGxlcil7bj1pO2k9bi5oYW5kbGVyO3M9bi5zZWxlY3Rvcn1pZighaS5ndWlkKXtpLmd1aWQ9US5ndWlkKyt9aWYoIShtPXYzLmV2ZW50cykpe209djMuZXZlbnRzPXt9fWlmKCEocj12My5oYW5kbGUpKXtyPXYzLmhhbmRsZT1mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIFEhPT1mJiYoIWV8fFEuZXZlbnQudHJpZ2dlcmVkIT09ZS50eXBlKT9RLmV2ZW50LmRpc3BhdGNoLmFwcGx5KHIuZWxlbSxhcmd1bWVudHMpOnV9O3IuZWxlbT1hfWI9KGJ8fCIiKS5tYXRjaChJKXx8WyIiXTt0PWIubGVuZ3RoO3doaWxlKHQtLSl7bD1yMS5leGVjKGJbdF0pfHxbXTtzMz11Mz1sWzFdO3QzPShsWzJdfHwiIikuc3BsaXQoIi4iKS5zb3J0KCk7aWYoIXMzKXtjb250aW51ZX1wPVEuZXZlbnQuc3BlY2lhbFtzM118fHt9O3MzPShzP3AuZGVsZWdhdGVUeXBlOnAuYmluZFR5cGUpfHxzMztwPVEuZXZlbnQuc3BlY2lhbFtzM118fHt9O3Y9US5leHRlbmQoe3R5cGU6czMsb3JpZ1R5cGU6dTMsZGF0YTpqLGhhbmRsZXI6aSxndWlkOmkuZ3VpZCxzZWxlY3RvcjpzLG5lZWRzQ29udGV4dDpzJiZRLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QocyksbmFtZXNwYWNlOnQzLmpvaW4oIi4iKX0sbik7aWYoIShfPW1bczNdKSl7Xz1tW3MzXT1bXTtfLmRlbGVnYXRlQ291bnQ9MDtpZighcC5zZXR1cHx8cC5zZXR1cC5jYWxsKGEsaix0MyxyKT09PWZhbHNlKXtpZihhLmFkZEV2ZW50TGlzdGVuZXIpe2EuYWRkRXZlbnRMaXN0ZW5lcihzMyxyLGZhbHNlKX1lbHNlIGlmKGEuYXR0YWNoRXZlbnQpe2EuYXR0YWNoRXZlbnQoIm9uIitzMyxyKX19fWlmKHAuYWRkKXtwLmFkZC5jYWxsKGEsdik7aWYoIXYuaGFuZGxlci5ndWlkKXt2LmhhbmRsZXIuZ3VpZD1pLmd1aWR9fWlmKHMpe18uc3BsaWNlKF8uZGVsZWdhdGVDb3VudCsrLDAsdil9ZWxzZXtfLnB1c2godil9US5ldmVudC5nbG9iYWxbczNdPXRydWV9YT1udWxsfSxyZW1vdmU6ZnVuY3Rpb24oYSxiLGkscyxtKXt2YXIgaixsLG4scCx0LHIsdixfLHMzLHQzLHUzLHYzPVEuaGFzRGF0YShhKSYmUS5fZGF0YShhKTtpZighdjN8fCEocj12My5ldmVudHMpKXtyZXR1cm59Yj0oYnx8IiIpLm1hdGNoKEkpfHxbIiJdO3Q9Yi5sZW5ndGg7d2hpbGUodC0tKXtuPXIxLmV4ZWMoYlt0XSl8fFtdO3MzPXUzPW5bMV07dDM9KG5bMl18fCIiKS5zcGxpdCgiLiIpLnNvcnQoKTtpZighczMpe2ZvcihzMyBpbiByKXtRLmV2ZW50LnJlbW92ZShhLHMzK2JbdF0saSxzLHRydWUpfWNvbnRpbnVlfXY9US5ldmVudC5zcGVjaWFsW3MzXXx8e307czM9KHM/di5kZWxlZ2F0ZVR5cGU6di5iaW5kVHlwZSl8fHMzO189cltzM118fFtdO249blsyXSYmbmV3IFJlZ0V4cCgiKF58XFwuKSIrdDMuam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIik7cD1qPV8ubGVuZ3RoO3doaWxlKGotLSl7bD1fW2pdO2lmKChtfHx1Mz09PWwub3JpZ1R5cGUpJiYoIWl8fGkuZ3VpZD09PWwuZ3VpZCkmJighbnx8bi50ZXN0KGwubmFtZXNwYWNlKSkmJighc3x8cz09PWwuc2VsZWN0b3J8fHM9PT0iKioiJiZsLnNlbGVjdG9yKSl7Xy5zcGxpY2UoaiwxKTtpZihsLnNlbGVjdG9yKXtfLmRlbGVnYXRlQ291bnQtLX1pZih2LnJlbW92ZSl7di5yZW1vdmUuY2FsbChhLGwpfX19aWYocCYmIV8ubGVuZ3RoKXtpZighdi50ZWFyZG93bnx8di50ZWFyZG93bi5jYWxsKGEsdDMsdjMuaGFuZGxlKT09PWZhbHNlKXtRLnJlbW92ZUV2ZW50KGEsczMsdjMuaGFuZGxlKX1kZWxldGUgcltzM119fWlmKFEuaXNFbXB0eU9iamVjdChyKSl7ZGVsZXRlIHYzLmhhbmRsZTtRLl9yZW1vdmVEYXRhKGEsImV2ZW50cyIpfX0sdHJpZ2dlcjpmdW5jdGlvbihhLGIsaixsKXt2YXIgbSxuLHAscixzLHQsaSx2PVtqfHxoXSxfPUYuY2FsbChhLCJ0eXBlIik/YS50eXBlOmEsczM9Ri5jYWxsKGEsIm5hbWVzcGFjZSIpP2EubmFtZXNwYWNlLnNwbGl0KCIuIik6W107cD10PWo9anx8aDtpZihqLm5vZGVUeXBlPT09M3x8ai5ub2RlVHlwZT09PTgpe3JldHVybn1pZihxMS50ZXN0KF8rUS5ldmVudC50cmlnZ2VyZWQpKXtyZXR1cm59aWYoXy5pbmRleE9mKCIuIik+PTApe3MzPV8uc3BsaXQoIi4iKTtfPXMzLnNoaWZ0KCk7czMuc29ydCgpfW49Xy5pbmRleE9mKCI6Iik8MCYmIm9uIitfO2E9YVtRLmV4cGFuZG9dP2E6bmV3IFEuRXZlbnQoXyx0eXBlb2YgYT09PSJvYmplY3QiJiZhKTthLmlzVHJpZ2dlcj1sPzI6MzthLm5hbWVzcGFjZT1zMy5qb2luKCIuIik7YS5uYW1lc3BhY2VfcmU9YS5uYW1lc3BhY2U/bmV3IFJlZ0V4cCgiKF58XFwuKSIrczMuam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIik6bnVsbDthLnJlc3VsdD11O2lmKCFhLnRhcmdldCl7YS50YXJnZXQ9an1iPWI9PW51bGw/W2FdOlEubWFrZUFycmF5KGIsW2FdKTtzPVEuZXZlbnQuc3BlY2lhbFtfXXx8e307aWYoIWwmJnMudHJpZ2dlciYmcy50cmlnZ2VyLmFwcGx5KGosYik9PT1mYWxzZSl7cmV0dXJufWlmKCFsJiYhcy5ub0J1YmJsZSYmIVEuaXNXaW5kb3coaikpe3I9cy5kZWxlZ2F0ZVR5cGV8fF87aWYoIXExLnRlc3QocitfKSl7cD1wLnBhcmVudE5vZGV9Zm9yKDtwO3A9cC5wYXJlbnROb2RlKXt2LnB1c2gocCk7dD1wfWlmKHQ9PT0oai5vd25lckRvY3VtZW50fHxoKSl7di5wdXNoKHQuZGVmYXVsdFZpZXd8fHQucGFyZW50V2luZG93fHx3KX19aT0wO3doaWxlKChwPXZbaSsrXSkmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpe2EudHlwZT1pPjE/cjpzLmJpbmRUeXBlfHxfO209KFEuX2RhdGEocCwiZXZlbnRzIil8fHt9KVthLnR5cGVdJiZRLl9kYXRhKHAsImhhbmRsZSIpO2lmKG0pe20uYXBwbHkocCxiKX1tPW4mJnBbbl07aWYobSYmUS5hY2NlcHREYXRhKHApJiZtLmFwcGx5JiZtLmFwcGx5KHAsYik9PT1mYWxzZSl7YS5wcmV2ZW50RGVmYXVsdCgpfX1hLnR5cGU9XztpZighbCYmIWEuaXNEZWZhdWx0UHJldmVudGVkKCkpe2lmKCghcy5fZGVmYXVsdHx8cy5fZGVmYXVsdC5hcHBseSh2LnBvcCgpLGIpPT09ZmFsc2UpJiZRLmFjY2VwdERhdGEoaikpe2lmKG4mJmpbX10mJiFRLmlzV2luZG93KGopKXt0PWpbbl07aWYodCl7altuXT1udWxsfVEuZXZlbnQudHJpZ2dlcmVkPV87dHJ5e2pbX10oKX1jYXRjaChlKXt9US5ldmVudC50cmlnZ2VyZWQ9dTtpZih0KXtqW25dPXR9fX19cmV0dXJuIGEucmVzdWx0fSxkaXNwYXRjaDpmdW5jdGlvbihhKXthPVEuZXZlbnQuZml4KGEpO3ZhciBpLHIsYixtLGosbD1bXSxuPUMuY2FsbChhcmd1bWVudHMpLHA9KFEuX2RhdGEodGhpcywiZXZlbnRzIil8fHt9KVthLnR5cGVdfHxbXSxzPVEuZXZlbnQuc3BlY2lhbFthLnR5cGVdfHx7fTtuWzBdPWE7YS5kZWxlZ2F0ZVRhcmdldD10aGlzO2lmKHMucHJlRGlzcGF0Y2gmJnMucHJlRGlzcGF0Y2guY2FsbCh0aGlzLGEpPT09ZmFsc2Upe3JldHVybn1sPVEuZXZlbnQuaGFuZGxlcnMuY2FsbCh0aGlzLGEscCk7aT0wO3doaWxlKChtPWxbaSsrXSkmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpe2EuY3VycmVudFRhcmdldD1tLmVsZW07aj0wO3doaWxlKChiPW0uaGFuZGxlcnNbaisrXSkmJiFhLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkpe2lmKCFhLm5hbWVzcGFjZV9yZXx8YS5uYW1lc3BhY2VfcmUudGVzdChiLm5hbWVzcGFjZSkpe2EuaGFuZGxlT2JqPWI7YS5kYXRhPWIuZGF0YTtyPSgoUS5ldmVudC5zcGVjaWFsW2Iub3JpZ1R5cGVdfHx7fSkuaGFuZGxlfHxiLmhhbmRsZXIpLmFwcGx5KG0uZWxlbSxuKTtpZihyIT09dSl7aWYoKGEucmVzdWx0PXIpPT09ZmFsc2Upe2EucHJldmVudERlZmF1bHQoKTthLnN0b3BQcm9wYWdhdGlvbigpfX19fX1pZihzLnBvc3REaXNwYXRjaCl7cy5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLGEpfXJldHVybiBhLnJlc3VsdH0saGFuZGxlcnM6ZnVuY3Rpb24oYSxiKXt2YXIgcyxqLG0saSxsPVtdLG49Yi5kZWxlZ2F0ZUNvdW50LHA9YS50YXJnZXQ7aWYobiYmcC5ub2RlVHlwZSYmKCFhLmJ1dHRvbnx8YS50eXBlIT09ImNsaWNrIikpe2Zvcig7cCE9dGhpcztwPXAucGFyZW50Tm9kZXx8dGhpcyl7aWYocC5ub2RlVHlwZT09PTEmJihwLmRpc2FibGVkIT09dHJ1ZXx8YS50eXBlIT09ImNsaWNrIikpe209W107Zm9yKGk9MDtpPG47aSsrKXtqPWJbaV07cz1qLnNlbGVjdG9yKyIgIjtpZihtW3NdPT09dSl7bVtzXT1qLm5lZWRzQ29udGV4dD9RKHMsdGhpcykuaW5kZXgocCk+PTA6US5maW5kKHMsdGhpcyxudWxsLFtwXSkubGVuZ3RofWlmKG1bc10pe20ucHVzaChqKX19aWYobS5sZW5ndGgpe2wucHVzaCh7ZWxlbTpwLGhhbmRsZXJzOm19KX19fX1pZihuPGIubGVuZ3RoKXtsLnB1c2goe2VsZW06dGhpcyxoYW5kbGVyczpiLnNsaWNlKG4pfSl9cmV0dXJuIGx9LGZpeDpmdW5jdGlvbihhKXtpZihhW1EuZXhwYW5kb10pe3JldHVybiBhfXZhciBpLHAsYix0PWEudHlwZSxqPWEsbD10aGlzLmZpeEhvb2tzW3RdO2lmKCFsKXt0aGlzLmZpeEhvb2tzW3RdPWw9cDEudGVzdCh0KT90aGlzLm1vdXNlSG9va3M6bzEudGVzdCh0KT90aGlzLmtleUhvb2tzOnt9fWI9bC5wcm9wcz90aGlzLnByb3BzLmNvbmNhdChsLnByb3BzKTp0aGlzLnByb3BzO2E9bmV3IFEuRXZlbnQoaik7aT1iLmxlbmd0aDt3aGlsZShpLS0pe3A9YltpXTthW3BdPWpbcF19aWYoIWEudGFyZ2V0KXthLnRhcmdldD1qLnNyY0VsZW1lbnR8fGh9aWYoYS50YXJnZXQubm9kZVR5cGU9PT0zKXthLnRhcmdldD1hLnRhcmdldC5wYXJlbnROb2RlfWEubWV0YUtleT0hIWEubWV0YUtleTtyZXR1cm4gbC5maWx0ZXI/bC5maWx0ZXIoYSxqKTphfSxwcm9wczoiYWx0S2V5IGJ1YmJsZXMgY2FuY2VsYWJsZSBjdHJsS2V5IGN1cnJlbnRUYXJnZXQgZXZlbnRQaGFzZSBtZXRhS2V5IHJlbGF0ZWRUYXJnZXQgc2hpZnRLZXkgdGFyZ2V0IHRpbWVTdGFtcCB2aWV3IHdoaWNoIi5zcGxpdCgiICIpLGZpeEhvb2tzOnt9LGtleUhvb2tzOntwcm9wczoiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZSIuc3BsaXQoIiAiKSxmaWx0ZXI6ZnVuY3Rpb24oYSxiKXtpZihhLndoaWNoPT1udWxsKXthLndoaWNoPWIuY2hhckNvZGUhPW51bGw/Yi5jaGFyQ29kZTpiLmtleUNvZGV9cmV0dXJuIGF9fSxtb3VzZUhvb2tzOntwcm9wczoiYnV0dG9uIGJ1dHRvbnMgY2xpZW50WCBjbGllbnRZIGZyb21FbGVtZW50IG9mZnNldFggb2Zmc2V0WSBwYWdlWCBwYWdlWSBzY3JlZW5YIHNjcmVlblkgdG9FbGVtZW50Ii5zcGxpdCgiICIpLGZpbHRlcjpmdW5jdGlvbihhLGIpe3ZhciBpLGosbCxtPWIuYnV0dG9uLG49Yi5mcm9tRWxlbWVudDtpZihhLnBhZ2VYPT1udWxsJiZiLmNsaWVudFghPW51bGwpe2o9YS50YXJnZXQub3duZXJEb2N1bWVudHx8aDtsPWouZG9jdW1lbnRFbGVtZW50O2k9ai5ib2R5O2EucGFnZVg9Yi5jbGllbnRYKyhsJiZsLnNjcm9sbExlZnR8fGkmJmkuc2Nyb2xsTGVmdHx8MCktKGwmJmwuY2xpZW50TGVmdHx8aSYmaS5jbGllbnRMZWZ0fHwwKTthLnBhZ2VZPWIuY2xpZW50WSsobCYmbC5zY3JvbGxUb3B8fGkmJmkuc2Nyb2xsVG9wfHwwKS0obCYmbC5jbGllbnRUb3B8fGkmJmkuY2xpZW50VG9wfHwwKX1pZighYS5yZWxhdGVkVGFyZ2V0JiZuKXthLnJlbGF0ZWRUYXJnZXQ9bj09PWEudGFyZ2V0P2IudG9FbGVtZW50Om59aWYoIWEud2hpY2gmJm0hPT11KXthLndoaWNoPShtJjE/MToobSYyPzM6KG0mND8yOjApKSl9cmV0dXJuIGF9fSxzcGVjaWFsOntsb2FkOntub0J1YmJsZTp0cnVlfSxmb2N1czp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXMhPT11MSgpJiZ0aGlzLmZvY3VzKXt0cnl7dGhpcy5mb2N1cygpO3JldHVybiBmYWxzZX1jYXRjaChlKXt9fX0sZGVsZWdhdGVUeXBlOiJmb2N1c2luIn0sYmx1cjp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXM9PT11MSgpJiZ0aGlzLmJsdXIpe3RoaXMuYmx1cigpO3JldHVybiBmYWxzZX19LGRlbGVnYXRlVHlwZToiZm9jdXNvdXQifSxjbGljazp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKFEubm9kZU5hbWUodGhpcywiaW5wdXQiKSYmdGhpcy50eXBlPT09ImNoZWNrYm94IiYmdGhpcy5jbGljayl7dGhpcy5jbGljaygpO3JldHVybiBmYWxzZX19LF9kZWZhdWx0OmZ1bmN0aW9uKGEpe3JldHVybiBRLm5vZGVOYW1lKGEudGFyZ2V0LCJhIil9fSxiZWZvcmV1bmxvYWQ6e3Bvc3REaXNwYXRjaDpmdW5jdGlvbihhKXtpZihhLnJlc3VsdCE9PXUpe2Eub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZT1hLnJlc3VsdH19fX0sc2ltdWxhdGU6ZnVuY3Rpb24odCxhLGIsaSl7dmFyIGU9US5leHRlbmQobmV3IFEuRXZlbnQoKSxiLHt0eXBlOnQsaXNTaW11bGF0ZWQ6dHJ1ZSxvcmlnaW5hbEV2ZW50Ont9fSk7aWYoaSl7US5ldmVudC50cmlnZ2VyKGUsbnVsbCxhKX1lbHNle1EuZXZlbnQuZGlzcGF0Y2guY2FsbChhLGUpfWlmKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpe2IucHJldmVudERlZmF1bHQoKX19fTtRLnJlbW92ZUV2ZW50PWgucmVtb3ZlRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbihhLHQsYil7aWYoYS5yZW1vdmVFdmVudExpc3RlbmVyKXthLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxiLGZhbHNlKX19OmZ1bmN0aW9uKGEsdCxiKXt2YXIgbj0ib24iK3Q7aWYoYS5kZXRhY2hFdmVudCl7aWYodHlwZW9mIGFbbl09PT1mKXthW25dPW51bGx9YS5kZXRhY2hFdmVudChuLGIpfX07US5FdmVudD1mdW5jdGlvbihzLHApe2lmKCEodGhpcyBpbnN0YW5jZW9mIFEuRXZlbnQpKXtyZXR1cm4gbmV3IFEuRXZlbnQocyxwKX1pZihzJiZzLnR5cGUpe3RoaXMub3JpZ2luYWxFdmVudD1zO3RoaXMudHlwZT1zLnR5cGU7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KHMuZGVmYXVsdFByZXZlbnRlZHx8cy5yZXR1cm5WYWx1ZT09PWZhbHNlfHxzLmdldFByZXZlbnREZWZhdWx0JiZzLmdldFByZXZlbnREZWZhdWx0KCkpP3MxOnQxfWVsc2V7dGhpcy50eXBlPXN9aWYocCl7US5leHRlbmQodGhpcyxwKX10aGlzLnRpbWVTdGFtcD1zJiZzLnRpbWVTdGFtcHx8US5ub3coKTt0aGlzW1EuZXhwYW5kb109dHJ1ZX07US5FdmVudC5wcm90b3R5cGU9e2lzRGVmYXVsdFByZXZlbnRlZDp0MSxpc1Byb3BhZ2F0aW9uU3RvcHBlZDp0MSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDp0MSxwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1zMTtpZighZSl7cmV0dXJufWlmKGUucHJldmVudERlZmF1bHQpe2UucHJldmVudERlZmF1bHQoKX1lbHNle2UucmV0dXJuVmFsdWU9ZmFsc2V9fSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1zMTtpZighZSl7cmV0dXJufWlmKGUuc3RvcFByb3BhZ2F0aW9uKXtlLnN0b3BQcm9wYWdhdGlvbigpfWUuY2FuY2VsQnViYmxlPXRydWV9LHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9czE7dGhpcy5zdG9wUHJvcGFnYXRpb24oKX19O1EuZWFjaCh7bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCJ9LGZ1bmN0aW9uKGEsYil7US5ldmVudC5zcGVjaWFsW2FdPXtkZWxlZ2F0ZVR5cGU6YixiaW5kVHlwZTpiLGhhbmRsZTpmdW5jdGlvbihpKXt2YXIgcix0PXRoaXMsaj1pLnJlbGF0ZWRUYXJnZXQsbD1pLmhhbmRsZU9iajtpZighanx8KGohPT10JiYhUS5jb250YWlucyh0LGopKSl7aS50eXBlPWwub3JpZ1R5cGU7cj1sLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2kudHlwZT1ifXJldHVybiByfX19KTtpZighUS5zdXBwb3J0LnN1Ym1pdEJ1YmJsZXMpe1EuZXZlbnQuc3BlY2lhbC5zdWJtaXQ9e3NldHVwOmZ1bmN0aW9uKCl7aWYoUS5ub2RlTmFtZSh0aGlzLCJmb3JtIikpe3JldHVybiBmYWxzZX1RLmV2ZW50LmFkZCh0aGlzLCJjbGljay5fc3VibWl0IGtleXByZXNzLl9zdWJtaXQiLGZ1bmN0aW9uKGUpe3ZhciBhPWUudGFyZ2V0LGI9US5ub2RlTmFtZShhLCJpbnB1dCIpfHxRLm5vZGVOYW1lKGEsImJ1dHRvbiIpP2EuZm9ybTp1O2lmKGImJiFRLl9kYXRhKGIsInN1Ym1pdEJ1YmJsZXMiKSl7US5ldmVudC5hZGQoYiwic3VibWl0Ll9zdWJtaXQiLGZ1bmN0aW9uKGkpe2kuX3N1Ym1pdF9idWJibGU9dHJ1ZX0pO1EuX2RhdGEoYiwic3VibWl0QnViYmxlcyIsdHJ1ZSl9fSl9LHBvc3REaXNwYXRjaDpmdW5jdGlvbihhKXtpZihhLl9zdWJtaXRfYnViYmxlKXtkZWxldGUgYS5fc3VibWl0X2J1YmJsZTtpZih0aGlzLnBhcmVudE5vZGUmJiFhLmlzVHJpZ2dlcil7US5ldmVudC5zaW11bGF0ZSgic3VibWl0Iix0aGlzLnBhcmVudE5vZGUsYSx0cnVlKX19fSx0ZWFyZG93bjpmdW5jdGlvbigpe2lmKFEubm9kZU5hbWUodGhpcywiZm9ybSIpKXtyZXR1cm4gZmFsc2V9US5ldmVudC5yZW1vdmUodGhpcywiLl9zdWJtaXQiKX19fWlmKCFRLnN1cHBvcnQuY2hhbmdlQnViYmxlcyl7US5ldmVudC5zcGVjaWFsLmNoYW5nZT17c2V0dXA6ZnVuY3Rpb24oKXtpZihuMS50ZXN0KHRoaXMubm9kZU5hbWUpKXtpZih0aGlzLnR5cGU9PT0iY2hlY2tib3gifHx0aGlzLnR5cGU9PT0icmFkaW8iKXtRLmV2ZW50LmFkZCh0aGlzLCJwcm9wZXJ0eWNoYW5nZS5fY2hhbmdlIixmdW5jdGlvbihhKXtpZihhLm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lPT09ImNoZWNrZWQiKXt0aGlzLl9qdXN0X2NoYW5nZWQ9dHJ1ZX19KTtRLmV2ZW50LmFkZCh0aGlzLCJjbGljay5fY2hhbmdlIixmdW5jdGlvbihhKXtpZih0aGlzLl9qdXN0X2NoYW5nZWQmJiFhLmlzVHJpZ2dlcil7dGhpcy5fanVzdF9jaGFuZ2VkPWZhbHNlfVEuZXZlbnQuc2ltdWxhdGUoImNoYW5nZSIsdGhpcyxhLHRydWUpfSl9cmV0dXJuIGZhbHNlfVEuZXZlbnQuYWRkKHRoaXMsImJlZm9yZWFjdGl2YXRlLl9jaGFuZ2UiLGZ1bmN0aW9uKGUpe3ZhciBhPWUudGFyZ2V0O2lmKG4xLnRlc3QoYS5ub2RlTmFtZSkmJiFRLl9kYXRhKGEsImNoYW5nZUJ1YmJsZXMiKSl7US5ldmVudC5hZGQoYSwiY2hhbmdlLl9jaGFuZ2UiLGZ1bmN0aW9uKGIpe2lmKHRoaXMucGFyZW50Tm9kZSYmIWIuaXNTaW11bGF0ZWQmJiFiLmlzVHJpZ2dlcil7US5ldmVudC5zaW11bGF0ZSgiY2hhbmdlIix0aGlzLnBhcmVudE5vZGUsYix0cnVlKX19KTtRLl9kYXRhKGEsImNoYW5nZUJ1YmJsZXMiLHRydWUpfX0pfSxoYW5kbGU6ZnVuY3Rpb24oYSl7dmFyIGI9YS50YXJnZXQ7aWYodGhpcyE9PWJ8fGEuaXNTaW11bGF0ZWR8fGEuaXNUcmlnZ2VyfHwoYi50eXBlIT09InJhZGlvIiYmYi50eXBlIT09ImNoZWNrYm94Iikpe3JldHVybiBhLmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LHRlYXJkb3duOmZ1bmN0aW9uKCl7US5ldmVudC5yZW1vdmUodGhpcywiLl9jaGFuZ2UiKTtyZXR1cm4hbjEudGVzdCh0aGlzLm5vZGVOYW1lKX19fWlmKCFRLnN1cHBvcnQuZm9jdXNpbkJ1YmJsZXMpe1EuZWFjaCh7Zm9jdXM6ImZvY3VzaW4iLGJsdXI6ImZvY3Vzb3V0In0sZnVuY3Rpb24oYSxiKXt2YXIgaT0wLGo9ZnVuY3Rpb24obCl7US5ldmVudC5zaW11bGF0ZShiLGwudGFyZ2V0LFEuZXZlbnQuZml4KGwpLHRydWUpfTtRLmV2ZW50LnNwZWNpYWxbYl09e3NldHVwOmZ1bmN0aW9uKCl7aWYoaSsrPT09MCl7aC5hZGRFdmVudExpc3RlbmVyKGEsaix0cnVlKX19LHRlYXJkb3duOmZ1bmN0aW9uKCl7aWYoLS1pPT09MCl7aC5yZW1vdmVFdmVudExpc3RlbmVyKGEsaix0cnVlKX19fX0pfVEuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbih0LHMsYSxiLGkpe3ZhciBqLGw7aWYodHlwZW9mIHQ9PT0ib2JqZWN0Iil7aWYodHlwZW9mIHMhPT0ic3RyaW5nIil7YT1hfHxzO3M9dX1mb3IoaiBpbiB0KXt0aGlzLm9uKGoscyxhLHRbal0saSl9cmV0dXJuIHRoaXN9aWYoYT09bnVsbCYmYj09bnVsbCl7Yj1zO2E9cz11fWVsc2UgaWYoYj09bnVsbCl7aWYodHlwZW9mIHM9PT0ic3RyaW5nIil7Yj1hO2E9dX1lbHNle2I9YTthPXM7cz11fX1pZihiPT09ZmFsc2Upe2I9dDF9ZWxzZSBpZighYil7cmV0dXJuIHRoaXN9aWYoaT09PTEpe2w9YjtiPWZ1bmN0aW9uKG0pe1EoKS5vZmYobSk7cmV0dXJuIGwuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtiLmd1aWQ9bC5ndWlkfHwobC5ndWlkPVEuZ3VpZCsrKX1yZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7US5ldmVudC5hZGQodGhpcyx0LGIsYSxzKX0pfSxvbmU6ZnVuY3Rpb24odCxzLGEsYil7cmV0dXJuIHRoaXMub24odCxzLGEsYiwxKX0sb2ZmOmZ1bmN0aW9uKHQscyxhKXt2YXIgYixpO2lmKHQmJnQucHJldmVudERlZmF1bHQmJnQuaGFuZGxlT2JqKXtiPXQuaGFuZGxlT2JqO1EodC5kZWxlZ2F0ZVRhcmdldCkub2ZmKGIubmFtZXNwYWNlP2Iub3JpZ1R5cGUrIi4iK2IubmFtZXNwYWNlOmIub3JpZ1R5cGUsYi5zZWxlY3RvcixiLmhhbmRsZXIpO3JldHVybiB0aGlzfWlmKHR5cGVvZiB0PT09Im9iamVjdCIpe2ZvcihpIGluIHQpe3RoaXMub2ZmKGkscyx0W2ldKX1yZXR1cm4gdGhpc31pZihzPT09ZmFsc2V8fHR5cGVvZiBzPT09ImZ1bmN0aW9uIil7YT1zO3M9dX1pZihhPT09ZmFsc2Upe2E9dDF9cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1EuZXZlbnQucmVtb3ZlKHRoaXMsdCxhLHMpfSl9LHRyaWdnZXI6ZnVuY3Rpb24odCxhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7US5ldmVudC50cmlnZ2VyKHQsYSx0aGlzKX0pfSx0cmlnZ2VySGFuZGxlcjpmdW5jdGlvbih0LGEpe3ZhciBiPXRoaXNbMF07aWYoYil7cmV0dXJuIFEuZXZlbnQudHJpZ2dlcih0LGEsYix0cnVlKX19fSk7dmFyIHYxPS9eLlteOiNcW1wuLF0qJC8sdzE9L14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8seDE9US5leHByLm1hdGNoLm5lZWRzQ29udGV4dCx5MT17Y2hpbGRyZW46dHJ1ZSxjb250ZW50czp0cnVlLG5leHQ6dHJ1ZSxwcmV2OnRydWV9O1EuZm4uZXh0ZW5kKHtmaW5kOmZ1bmN0aW9uKHMpe3ZhciBpLHI9W10sYT10aGlzLGw9YS5sZW5ndGg7aWYodHlwZW9mIHMhPT0ic3RyaW5nIil7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFEocykuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGk9MDtpPGw7aSsrKXtpZihRLmNvbnRhaW5zKGFbaV0sdGhpcykpe3JldHVybiB0cnVlfX19KSl9Zm9yKGk9MDtpPGw7aSsrKXtRLmZpbmQocyxhW2ldLHIpfXI9dGhpcy5wdXNoU3RhY2sobD4xP1EudW5pcXVlKHIpOnIpO3Iuc2VsZWN0b3I9dGhpcy5zZWxlY3Rvcj90aGlzLnNlbGVjdG9yKyIgIitzOnM7cmV0dXJuIHJ9LGhhczpmdW5jdGlvbih0KXt2YXIgaSxhPVEodCx0aGlzKSxsPWEubGVuZ3RoO3JldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpe2ZvcihpPTA7aTxsO2krKyl7aWYoUS5jb250YWlucyh0aGlzLGFbaV0pKXtyZXR1cm4gdHJ1ZX19fSl9LG5vdDpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soQTEodGhpcyxzfHxbXSx0cnVlKSl9LGZpbHRlcjpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soQTEodGhpcyxzfHxbXSxmYWxzZSkpfSxpczpmdW5jdGlvbihzKXtyZXR1cm4hIUExKHRoaXMsdHlwZW9mIHM9PT0ic3RyaW5nIiYmeDEudGVzdChzKT9RKHMpOnN8fFtdLGZhbHNlKS5sZW5ndGh9LGNsb3Nlc3Q6ZnVuY3Rpb24ocyxhKXt2YXIgYixpPTAsbD10aGlzLmxlbmd0aCxyPVtdLHA9eDEudGVzdChzKXx8dHlwZW9mIHMhPT0ic3RyaW5nIj9RKHMsYXx8dGhpcy5jb250ZXh0KTowO2Zvcig7aTxsO2krKyl7Zm9yKGI9dGhpc1tpXTtiJiZiIT09YTtiPWIucGFyZW50Tm9kZSl7aWYoYi5ub2RlVHlwZTwxMSYmKHA/cC5pbmRleChiKT4tMTpiLm5vZGVUeXBlPT09MSYmUS5maW5kLm1hdGNoZXNTZWxlY3RvcihiLHMpKSl7Yj1yLnB1c2goYik7YnJlYWt9fX1yZXR1cm4gdGhpcy5wdXNoU3RhY2soci5sZW5ndGg+MT9RLnVuaXF1ZShyKTpyKX0saW5kZXg6ZnVuY3Rpb24oYSl7aWYoIWEpe3JldHVybih0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGUpP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfWlmKHR5cGVvZiBhPT09InN0cmluZyIpe3JldHVybiBRLmluQXJyYXkodGhpc1swXSxRKGEpKX1yZXR1cm4gUS5pbkFycmF5KGEuanF1ZXJ5P2FbMF06YSx0aGlzKX0sYWRkOmZ1bmN0aW9uKHMsYSl7dmFyIGI9dHlwZW9mIHM9PT0ic3RyaW5nIj9RKHMsYSk6US5tYWtlQXJyYXkocyYmcy5ub2RlVHlwZT9bc106cyksaT1RLm1lcmdlKHRoaXMuZ2V0KCksYik7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFEudW5pcXVlKGkpKX0sYWRkQmFjazpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5hZGQocz09bnVsbD90aGlzLnByZXZPYmplY3Q6dGhpcy5wcmV2T2JqZWN0LmZpbHRlcihzKSl9fSk7ZnVuY3Rpb24gejEoYSxiKXtkb3thPWFbYl19d2hpbGUoYSYmYS5ub2RlVHlwZSE9PTEpO3JldHVybiBhfVEuZWFjaCh7cGFyZW50OmZ1bmN0aW9uKGEpe3ZhciBwPWEucGFyZW50Tm9kZTtyZXR1cm4gcCYmcC5ub2RlVHlwZSE9PTExP3A6bnVsbH0scGFyZW50czpmdW5jdGlvbihhKXtyZXR1cm4gUS5kaXIoYSwicGFyZW50Tm9kZSIpfSxwYXJlbnRzVW50aWw6ZnVuY3Rpb24oYSxpLGIpe3JldHVybiBRLmRpcihhLCJwYXJlbnROb2RlIixiKX0sbmV4dDpmdW5jdGlvbihhKXtyZXR1cm4gejEoYSwibmV4dFNpYmxpbmciKX0scHJldjpmdW5jdGlvbihhKXtyZXR1cm4gejEoYSwicHJldmlvdXNTaWJsaW5nIil9LG5leHRBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIFEuZGlyKGEsIm5leHRTaWJsaW5nIil9LHByZXZBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIFEuZGlyKGEsInByZXZpb3VzU2libGluZyIpfSxuZXh0VW50aWw6ZnVuY3Rpb24oYSxpLGIpe3JldHVybiBRLmRpcihhLCJuZXh0U2libGluZyIsYil9LHByZXZVbnRpbDpmdW5jdGlvbihhLGksYil7cmV0dXJuIFEuZGlyKGEsInByZXZpb3VzU2libGluZyIsYil9LHNpYmxpbmdzOmZ1bmN0aW9uKGEpe3JldHVybiBRLnNpYmxpbmcoKGEucGFyZW50Tm9kZXx8e30pLmZpcnN0Q2hpbGQsYSl9LGNoaWxkcmVuOmZ1bmN0aW9uKGEpe3JldHVybiBRLnNpYmxpbmcoYS5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIFEubm9kZU5hbWUoYSwiaWZyYW1lIik/YS5jb250ZW50RG9jdW1lbnR8fGEuY29udGVudFdpbmRvdy5kb2N1bWVudDpRLm1lcmdlKFtdLGEuY2hpbGROb2Rlcyl9fSxmdW5jdGlvbihuLGEpe1EuZm5bbl09ZnVuY3Rpb24oYixzKXt2YXIgcj1RLm1hcCh0aGlzLGEsYik7aWYobi5zbGljZSgtNSkhPT0iVW50aWwiKXtzPWJ9aWYocyYmdHlwZW9mIHM9PT0ic3RyaW5nIil7cj1RLmZpbHRlcihzLHIpfWlmKHRoaXMubGVuZ3RoPjEpe2lmKCF5MVtuXSl7cj1RLnVuaXF1ZShyKX1pZih3MS50ZXN0KG4pKXtyPXIucmV2ZXJzZSgpfX1yZXR1cm4gdGhpcy5wdXNoU3RhY2socil9fSk7US5leHRlbmQoe2ZpbHRlcjpmdW5jdGlvbihhLGIsbil7dmFyIGk9YlswXTtpZihuKXthPSI6bm90KCIrYSsiKSJ9cmV0dXJuIGIubGVuZ3RoPT09MSYmaS5ub2RlVHlwZT09PTE/US5maW5kLm1hdGNoZXNTZWxlY3RvcihpLGEpP1tpXTpbXTpRLmZpbmQubWF0Y2hlcyhhLFEuZ3JlcChiLGZ1bmN0aW9uKGkpe3JldHVybiBpLm5vZGVUeXBlPT09MX0pKX0sZGlyOmZ1bmN0aW9uKGEsYixpKXt2YXIgbT1bXSxqPWFbYl07d2hpbGUoaiYmai5ub2RlVHlwZSE9PTkmJihpPT09dXx8ai5ub2RlVHlwZSE9PTF8fCFRKGopLmlzKGkpKSl7aWYoai5ub2RlVHlwZT09PTEpe20ucHVzaChqKX1qPWpbYl19cmV0dXJuIG19LHNpYmxpbmc6ZnVuY3Rpb24obixhKXt2YXIgcj1bXTtmb3IoO247bj1uLm5leHRTaWJsaW5nKXtpZihuLm5vZGVUeXBlPT09MSYmbiE9PWEpe3IucHVzaChuKX19cmV0dXJuIHJ9fSk7ZnVuY3Rpb24gQTEoYSxiLG4pe2lmKFEuaXNGdW5jdGlvbihiKSl7cmV0dXJuIFEuZ3JlcChhLGZ1bmN0aW9uKGosaSl7cmV0dXJuISFiLmNhbGwoaixpLGopIT09bn0pfWlmKGIubm9kZVR5cGUpe3JldHVybiBRLmdyZXAoYSxmdW5jdGlvbihpKXtyZXR1cm4oaT09PWIpIT09bn0pfWlmKHR5cGVvZiBiPT09InN0cmluZyIpe2lmKHYxLnRlc3QoYikpe3JldHVybiBRLmZpbHRlcihiLGEsbil9Yj1RLmZpbHRlcihiLGEpfXJldHVybiBRLmdyZXAoYSxmdW5jdGlvbihpKXtyZXR1cm4oUS5pbkFycmF5KGksYik+PTApIT09bn0pfWZ1bmN0aW9uIEIxKGgpe3ZhciBsPUMxLnNwbGl0KCJ8Iikscz1oLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihzLmNyZWF0ZUVsZW1lbnQpe3doaWxlKGwubGVuZ3RoKXtzLmNyZWF0ZUVsZW1lbnQobC5wb3AoKSl9fXJldHVybiBzfXZhciBDMT0iYWJicnxhcnRpY2xlfGFzaWRlfGF1ZGlvfGJkaXxjYW52YXN8ZGF0YXxkYXRhbGlzdHxkZXRhaWxzfGZpZ2NhcHRpb258ZmlndXJlfGZvb3RlcnwiKyJoZWFkZXJ8aGdyb3VwfG1hcmt8bWV0ZXJ8bmF2fG91dHB1dHxwcm9ncmVzc3xzZWN0aW9ufHN1bW1hcnl8dGltZXx2aWRlbyIsRDE9LyBqUXVlcnlcZCs9Iig/Om51bGx8XGQrKSIvZyxFMT1uZXcgUmVnRXhwKCI8KD86IitDMSsiKVtcXHMvPl0iLCJpIiksRjE9L15ccysvLEcxPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcdzpdKylbXj5dKilcLz4vZ2ksSDE9LzwoW1x3Ol0rKS8sSTE9Lzx0Ym9keS9pLEoxPS88fCYjP1x3KzsvLEsxPS88KD86c2NyaXB0fHN0eWxlfGxpbmspL2ksTDE9L14oPzpjaGVja2JveHxyYWRpbykkL2ksTTE9L2NoZWNrZWRccyooPzpbXj1dfD1ccyouY2hlY2tlZC4pL2ksTjE9L14kfFwvKD86amF2YXxlY21hKXNjcmlwdC9pLE8xPS9edHJ1ZVwvKC4qKS8sUDE9L15ccyo8ISg/OlxbQ0RBVEFcW3wtLSl8KD86XF1cXXwtLSk+XHMqJC9nLFExPXtvcHRpb246WzEsIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz4iLCI8L3NlbGVjdD4iXSxsZWdlbmQ6WzEsIjxmaWVsZHNldD4iLCI8L2ZpZWxkc2V0PiJdLGFyZWE6WzEsIjxtYXA+IiwiPC9tYXA+Il0scGFyYW06WzEsIjxvYmplY3Q+IiwiPC9vYmplY3Q+Il0sdGhlYWQ6WzEsIjx0YWJsZT4iLCI8L3RhYmxlPiJdLHRyOlsyLCI8dGFibGU+PHRib2R5PiIsIjwvdGJvZHk+PC90YWJsZT4iXSxjb2w6WzIsIjx0YWJsZT48dGJvZHk+PC90Ym9keT48Y29sZ3JvdXA+IiwiPC9jb2xncm91cD48L3RhYmxlPiJdLHRkOlszLCI8dGFibGU+PHRib2R5Pjx0cj4iLCI8L3RyPjwvdGJvZHk+PC90YWJsZT4iXSxfZGVmYXVsdDpRLnN1cHBvcnQuaHRtbFNlcmlhbGl6ZT9bMCwiIiwiIl06WzEsIlg8ZGl2PiIsIjwvZGl2PiJdfSxSMT1CMShoKSxTMT1SMS5hcHBlbmRDaGlsZChoLmNyZWF0ZUVsZW1lbnQoImRpdiIpKTtRMS5vcHRncm91cD1RMS5vcHRpb247UTEudGJvZHk9UTEudGZvb3Q9UTEuY29sZ3JvdXA9UTEuY2FwdGlvbj1RMS50aGVhZDtRMS50aD1RMS50ZDtRLmZuLmV4dGVuZCh7dGV4dDpmdW5jdGlvbih2KXtyZXR1cm4gUS5hY2Nlc3ModGhpcyxmdW5jdGlvbih2KXtyZXR1cm4gdj09PXU/US50ZXh0KHRoaXMpOnRoaXMuZW1wdHkoKS5hcHBlbmQoKHRoaXNbMF0mJnRoaXNbMF0ub3duZXJEb2N1bWVudHx8aCkuY3JlYXRlVGV4dE5vZGUodikpfSxudWxsLHYsYXJndW1lbnRzLmxlbmd0aCl9LGFwcGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cyxmdW5jdGlvbihhKXtpZih0aGlzLm5vZGVUeXBlPT09MXx8dGhpcy5ub2RlVHlwZT09PTExfHx0aGlzLm5vZGVUeXBlPT09OSl7dmFyIHQ9VDEodGhpcyxhKTt0LmFwcGVuZENoaWxkKGEpfX0pfSxwcmVwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKGEpe2lmKHRoaXMubm9kZVR5cGU9PT0xfHx0aGlzLm5vZGVUeXBlPT09MTF8fHRoaXMubm9kZVR5cGU9PT05KXt2YXIgdD1UMSh0aGlzLGEpO3QuaW5zZXJ0QmVmb3JlKGEsdC5maXJzdENoaWxkKX19KX0sYmVmb3JlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKGEpe2lmKHRoaXMucGFyZW50Tm9kZSl7dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLHRoaXMpfX0pfSxhZnRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cyxmdW5jdGlvbihhKXtpZih0aGlzLnBhcmVudE5vZGUpe3RoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzLm5leHRTaWJsaW5nKX19KX0scmVtb3ZlOmZ1bmN0aW9uKHMsYSl7dmFyIGIsaj1zP1EuZmlsdGVyKHMsdGhpcyk6dGhpcyxpPTA7Zm9yKDsoYj1qW2ldKSE9bnVsbDtpKyspe2lmKCFhJiZiLm5vZGVUeXBlPT09MSl7US5jbGVhbkRhdGEoWjEoYikpfWlmKGIucGFyZW50Tm9kZSl7aWYoYSYmUS5jb250YWlucyhiLm93bmVyRG9jdW1lbnQsYikpe1cxKFoxKGIsInNjcmlwdCIpKX1iLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYil9fXJldHVybiB0aGlzfSxlbXB0eTpmdW5jdGlvbigpe3ZhciBhLGk9MDtmb3IoOyhhPXRoaXNbaV0pIT1udWxsO2krKyl7aWYoYS5ub2RlVHlwZT09PTEpe1EuY2xlYW5EYXRhKFoxKGEsZmFsc2UpKX13aGlsZShhLmZpcnN0Q2hpbGQpe2EucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKX1pZihhLm9wdGlvbnMmJlEubm9kZU5hbWUoYSwic2VsZWN0Iikpe2Eub3B0aW9ucy5sZW5ndGg9MH19cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGEsYil7YT1hPT1udWxsP2ZhbHNlOmE7Yj1iPT1udWxsP2E6YjtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gUS5jbG9uZSh0aGlzLGEsYil9KX0saHRtbDpmdW5jdGlvbih2KXtyZXR1cm4gUS5hY2Nlc3ModGhpcyxmdW5jdGlvbih2KXt2YXIgYT10aGlzWzBdfHx7fSxpPTAsbD10aGlzLmxlbmd0aDtpZih2PT09dSl7cmV0dXJuIGEubm9kZVR5cGU9PT0xP2EuaW5uZXJIVE1MLnJlcGxhY2UoRDEsIiIpOnV9aWYodHlwZW9mIHY9PT0ic3RyaW5nIiYmIUsxLnRlc3QodikmJihRLnN1cHBvcnQuaHRtbFNlcmlhbGl6ZXx8IUUxLnRlc3QodikpJiYoUS5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlfHwhRjEudGVzdCh2KSkmJiFRMVsoSDEuZXhlYyh2KXx8WyIiLCIiXSlbMV0udG9Mb3dlckNhc2UoKV0pe3Y9di5yZXBsYWNlKEcxLCI8JDE+PC8kMj4iKTt0cnl7Zm9yKDtpPGw7aSsrKXthPXRoaXNbaV18fHt9O2lmKGEubm9kZVR5cGU9PT0xKXtRLmNsZWFuRGF0YShaMShhLGZhbHNlKSk7YS5pbm5lckhUTUw9dn19YT0wfWNhdGNoKGUpe319aWYoYSl7dGhpcy5lbXB0eSgpLmFwcGVuZCh2KX19LG51bGwsdixhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgYT1RLm1hcCh0aGlzLGZ1bmN0aW9uKGIpe3JldHVybltiLm5leHRTaWJsaW5nLGIucGFyZW50Tm9kZV19KSxpPTA7dGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24oYil7dmFyIG49YVtpKytdLHA9YVtpKytdO2lmKHApe2lmKG4mJm4ucGFyZW50Tm9kZSE9PXApe249dGhpcy5uZXh0U2libGluZ31RKHRoaXMpLnJlbW92ZSgpO3AuaW5zZXJ0QmVmb3JlKGIsbil9fSx0cnVlKTtyZXR1cm4gaT90aGlzOnRoaXMucmVtb3ZlKCl9LGRldGFjaDpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5yZW1vdmUocyx0cnVlKX0sZG9tTWFuaXA6ZnVuY3Rpb24oYSxiLGope2E9QS5hcHBseShbXSxhKTt2YXIgbSxuLHAscyxyLHQsaT0wLGw9dGhpcy5sZW5ndGgsdj10aGlzLF89bC0xLHMzPWFbMF0sdDM9US5pc0Z1bmN0aW9uKHMzKTtpZih0M3x8IShsPD0xfHx0eXBlb2YgczMhPT0ic3RyaW5nInx8US5zdXBwb3J0LmNoZWNrQ2xvbmV8fCFNMS50ZXN0KHMzKSkpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24odTMpe3ZhciB2Mz12LmVxKHUzKTtpZih0Myl7YVswXT1zMy5jYWxsKHRoaXMsdTMsdjMuaHRtbCgpKX12My5kb21NYW5pcChhLGIsail9KX1pZihsKXt0PVEuYnVpbGRGcmFnbWVudChhLHRoaXNbMF0ub3duZXJEb2N1bWVudCxmYWxzZSwhaiYmdGhpcyk7bT10LmZpcnN0Q2hpbGQ7aWYodC5jaGlsZE5vZGVzLmxlbmd0aD09PTEpe3Q9bX1pZihtKXtzPVEubWFwKFoxKHQsInNjcmlwdCIpLFUxKTtwPXMubGVuZ3RoO2Zvcig7aTxsO2krKyl7bj10O2lmKGkhPT1fKXtuPVEuY2xvbmUobix0cnVlLHRydWUpO2lmKHApe1EubWVyZ2UocyxaMShuLCJzY3JpcHQiKSl9fWIuY2FsbCh0aGlzW2ldLG4saSl9aWYocCl7cj1zW3MubGVuZ3RoLTFdLm93bmVyRG9jdW1lbnQ7US5tYXAocyxWMSk7Zm9yKGk9MDtpPHA7aSsrKXtuPXNbaV07aWYoTjEudGVzdChuLnR5cGV8fCIiKSYmIVEuX2RhdGEobiwiZ2xvYmFsRXZhbCIpJiZRLmNvbnRhaW5zKHIsbikpe2lmKG4uc3JjKXtRLl9ldmFsVXJsKG4uc3JjKX1lbHNle1EuZ2xvYmFsRXZhbCgobi50ZXh0fHxuLnRleHRDb250ZW50fHxuLmlubmVySFRNTHx8IiIpLnJlcGxhY2UoUDEsIiIpKX19fX10PW09bnVsbH19cmV0dXJuIHRoaXN9fSk7ZnVuY3Rpb24gVDEoYSxiKXtyZXR1cm4gUS5ub2RlTmFtZShhLCJ0YWJsZSIpJiZRLm5vZGVOYW1lKGIubm9kZVR5cGU9PT0xP2I6Yi5maXJzdENoaWxkLCJ0ciIpP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRib2R5IilbMF18fGEuYXBwZW5kQ2hpbGQoYS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRib2R5IikpOmF9ZnVuY3Rpb24gVTEoYSl7YS50eXBlPShRLmZpbmQuYXR0cihhLCJ0eXBlIikhPT1udWxsKSsiLyIrYS50eXBlO3JldHVybiBhfWZ1bmN0aW9uIFYxKGEpe3ZhciBtPU8xLmV4ZWMoYS50eXBlKTtpZihtKXthLnR5cGU9bVsxXX1lbHNle2EucmVtb3ZlQXR0cmlidXRlKCJ0eXBlIil9cmV0dXJuIGF9ZnVuY3Rpb24gVzEoYSxyKXt2YXIgYixpPTA7Zm9yKDsoYj1hW2ldKSE9bnVsbDtpKyspe1EuX2RhdGEoYiwiZ2xvYmFsRXZhbCIsIXJ8fFEuX2RhdGEocltpXSwiZ2xvYmFsRXZhbCIpKX19ZnVuY3Rpb24gWDEocyxhKXtpZihhLm5vZGVUeXBlIT09MXx8IVEuaGFzRGF0YShzKSl7cmV0dXJufXZhciB0LGksbCxiPVEuX2RhdGEocyksaj1RLl9kYXRhKGEsYiksbT1iLmV2ZW50cztpZihtKXtkZWxldGUgai5oYW5kbGU7ai5ldmVudHM9e307Zm9yKHQgaW4gbSl7Zm9yKGk9MCxsPW1bdF0ubGVuZ3RoO2k8bDtpKyspe1EuZXZlbnQuYWRkKGEsdCxtW3RdW2ldKX19fWlmKGouZGF0YSl7ai5kYXRhPVEuZXh0ZW5kKHt9LGouZGF0YSl9fWZ1bmN0aW9uIFkxKHMsYSl7dmFyIG4sZSxiO2lmKGEubm9kZVR5cGUhPT0xKXtyZXR1cm59bj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoIVEuc3VwcG9ydC5ub0Nsb25lRXZlbnQmJmFbUS5leHBhbmRvXSl7Yj1RLl9kYXRhKGEpO2ZvcihlIGluIGIuZXZlbnRzKXtRLnJlbW92ZUV2ZW50KGEsZSxiLmhhbmRsZSl9YS5yZW1vdmVBdHRyaWJ1dGUoUS5leHBhbmRvKX1pZihuPT09InNjcmlwdCImJmEudGV4dCE9PXMudGV4dCl7VTEoYSkudGV4dD1zLnRleHQ7VjEoYSl9ZWxzZSBpZihuPT09Im9iamVjdCIpe2lmKGEucGFyZW50Tm9kZSl7YS5vdXRlckhUTUw9cy5vdXRlckhUTUx9aWYoUS5zdXBwb3J0Lmh0bWw1Q2xvbmUmJihzLmlubmVySFRNTCYmIVEudHJpbShhLmlubmVySFRNTCkpKXthLmlubmVySFRNTD1zLmlubmVySFRNTH19ZWxzZSBpZihuPT09ImlucHV0IiYmTDEudGVzdChzLnR5cGUpKXthLmRlZmF1bHRDaGVja2VkPWEuY2hlY2tlZD1zLmNoZWNrZWQ7aWYoYS52YWx1ZSE9PXMudmFsdWUpe2EudmFsdWU9cy52YWx1ZX19ZWxzZSBpZihuPT09Im9wdGlvbiIpe2EuZGVmYXVsdFNlbGVjdGVkPWEuc2VsZWN0ZWQ9cy5kZWZhdWx0U2VsZWN0ZWR9ZWxzZSBpZihuPT09ImlucHV0Inx8bj09PSJ0ZXh0YXJlYSIpe2EuZGVmYXVsdFZhbHVlPXMuZGVmYXVsdFZhbHVlfX1RLmVhY2goe2FwcGVuZFRvOiJhcHBlbmQiLHByZXBlbmRUbzoicHJlcGVuZCIsaW5zZXJ0QmVmb3JlOiJiZWZvcmUiLGluc2VydEFmdGVyOiJhZnRlciIscmVwbGFjZUFsbDoicmVwbGFjZVdpdGgifSxmdW5jdGlvbihuLGEpe1EuZm5bbl09ZnVuY3Rpb24ocyl7dmFyIGIsaT0wLHI9W10saj1RKHMpLGw9ai5sZW5ndGgtMTtmb3IoO2k8PWw7aSsrKXtiPWk9PT1sP3RoaXM6dGhpcy5jbG9uZSh0cnVlKTtRKGpbaV0pW2FdKGIpO0IuYXBwbHkocixiLmdldCgpKX1yZXR1cm4gdGhpcy5wdXNoU3RhY2socil9fSk7ZnVuY3Rpb24gWjEoYSx0KXt2YXIgYixqLGk9MCxsPXR5cGVvZiBhLmdldEVsZW1lbnRzQnlUYWdOYW1lIT09Zj9hLmdldEVsZW1lbnRzQnlUYWdOYW1lKHR8fCIqIik6dHlwZW9mIGEucXVlcnlTZWxlY3RvckFsbCE9PWY/YS5xdWVyeVNlbGVjdG9yQWxsKHR8fCIqIik6dTtpZighbCl7Zm9yKGw9W10sYj1hLmNoaWxkTm9kZXN8fGE7KGo9YltpXSkhPW51bGw7aSsrKXtpZighdHx8US5ub2RlTmFtZShqLHQpKXtsLnB1c2goail9ZWxzZXtRLm1lcmdlKGwsWjEoaix0KSl9fX1yZXR1cm4gdD09PXV8fHQmJlEubm9kZU5hbWUoYSx0KT9RLm1lcmdlKFthXSxsKTpsfWZ1bmN0aW9uICQxKGEpe2lmKEwxLnRlc3QoYS50eXBlKSl7YS5kZWZhdWx0Q2hlY2tlZD1hLmNoZWNrZWR9fVEuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbihhLGIsail7dmFyIGwsbixtLGkscyxwPVEuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpO2lmKFEuc3VwcG9ydC5odG1sNUNsb25lfHxRLmlzWE1MRG9jKGEpfHwhRTEudGVzdCgiPCIrYS5ub2RlTmFtZSsiPiIpKXttPWEuY2xvbmVOb2RlKHRydWUpfWVsc2V7UzEuaW5uZXJIVE1MPWEub3V0ZXJIVE1MO1MxLnJlbW92ZUNoaWxkKG09UzEuZmlyc3RDaGlsZCl9aWYoKCFRLnN1cHBvcnQubm9DbG9uZUV2ZW50fHwhUS5zdXBwb3J0Lm5vQ2xvbmVDaGVja2VkKSYmKGEubm9kZVR5cGU9PT0xfHxhLm5vZGVUeXBlPT09MTEpJiYhUS5pc1hNTERvYyhhKSl7bD1aMShtKTtzPVoxKGEpO2ZvcihpPTA7KG49c1tpXSkhPW51bGw7KytpKXtpZihsW2ldKXtZMShuLGxbaV0pfX19aWYoYil7aWYoail7cz1zfHxaMShhKTtsPWx8fFoxKG0pO2ZvcihpPTA7KG49c1tpXSkhPW51bGw7aSsrKXtYMShuLGxbaV0pfX1lbHNle1gxKGEsbSl9fWw9WjEobSwic2NyaXB0Iik7aWYobC5sZW5ndGg+MCl7VzEobCwhcCYmWjEoYSwic2NyaXB0IikpfWw9cz1uPW51bGw7cmV0dXJuIG19LGJ1aWxkRnJhZ21lbnQ6ZnVuY3Rpb24oYSxiLHMsbSl7dmFyIGosbixwLHQscix2LF8sbD1hLmxlbmd0aCxzMz1CMShiKSx0Mz1bXSxpPTA7Zm9yKDtpPGw7aSsrKXtuPWFbaV07aWYobnx8bj09PTApe2lmKFEudHlwZShuKT09PSJvYmplY3QiKXtRLm1lcmdlKHQzLG4ubm9kZVR5cGU/W25dOm4pfWVsc2UgaWYoIUoxLnRlc3Qobikpe3QzLnB1c2goYi5jcmVhdGVUZXh0Tm9kZShuKSl9ZWxzZXt0PXR8fHMzLmFwcGVuZENoaWxkKGIuY3JlYXRlRWxlbWVudCgiZGl2IikpO3I9KEgxLmV4ZWMobil8fFsiIiwiIl0pWzFdLnRvTG93ZXJDYXNlKCk7Xz1RMVtyXXx8UTEuX2RlZmF1bHQ7dC5pbm5lckhUTUw9X1sxXStuLnJlcGxhY2UoRzEsIjwkMT48LyQyPiIpK19bMl07aj1fWzBdO3doaWxlKGotLSl7dD10Lmxhc3RDaGlsZH1pZighUS5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlJiZGMS50ZXN0KG4pKXt0My5wdXNoKGIuY3JlYXRlVGV4dE5vZGUoRjEuZXhlYyhuKVswXSkpfWlmKCFRLnN1cHBvcnQudGJvZHkpe249cj09PSJ0YWJsZSImJiFJMS50ZXN0KG4pP3QuZmlyc3RDaGlsZDpfWzFdPT09Ijx0YWJsZT4iJiYhSTEudGVzdChuKT90OjA7aj1uJiZuLmNoaWxkTm9kZXMubGVuZ3RoO3doaWxlKGotLSl7aWYoUS5ub2RlTmFtZSgodj1uLmNoaWxkTm9kZXNbal0pLCJ0Ym9keSIpJiYhdi5jaGlsZE5vZGVzLmxlbmd0aCl7bi5yZW1vdmVDaGlsZCh2KX19fVEubWVyZ2UodDMsdC5jaGlsZE5vZGVzKTt0LnRleHRDb250ZW50PSIiO3doaWxlKHQuZmlyc3RDaGlsZCl7dC5yZW1vdmVDaGlsZCh0LmZpcnN0Q2hpbGQpfXQ9czMubGFzdENoaWxkfX19aWYodCl7czMucmVtb3ZlQ2hpbGQodCl9aWYoIVEuc3VwcG9ydC5hcHBlbmRDaGVja2VkKXtRLmdyZXAoWjEodDMsImlucHV0IiksJDEpfWk9MDt3aGlsZSgobj10M1tpKytdKSl7aWYobSYmUS5pbkFycmF5KG4sbSkhPT0tMSl7Y29udGludWV9cD1RLmNvbnRhaW5zKG4ub3duZXJEb2N1bWVudCxuKTt0PVoxKHMzLmFwcGVuZENoaWxkKG4pLCJzY3JpcHQiKTtpZihwKXtXMSh0KX1pZihzKXtqPTA7d2hpbGUoKG49dFtqKytdKSl7aWYoTjEudGVzdChuLnR5cGV8fCIiKSl7cy5wdXNoKG4pfX19fXQ9bnVsbDtyZXR1cm4gczN9LGNsZWFuRGF0YTpmdW5jdGlvbihhLGIpe3ZhciBqLHQsbCxtLGk9MCxuPVEuZXhwYW5kbyxwPVEuY2FjaGUscj1RLnN1cHBvcnQuZGVsZXRlRXhwYW5kbyxzPVEuZXZlbnQuc3BlY2lhbDtmb3IoOyhqPWFbaV0pIT1udWxsO2krKyl7aWYoYnx8US5hY2NlcHREYXRhKGopKXtsPWpbbl07bT1sJiZwW2xdO2lmKG0pe2lmKG0uZXZlbnRzKXtmb3IodCBpbiBtLmV2ZW50cyl7aWYoc1t0XSl7US5ldmVudC5yZW1vdmUoaix0KX1lbHNle1EucmVtb3ZlRXZlbnQoaix0LG0uaGFuZGxlKX19fWlmKHBbbF0pe2RlbGV0ZSBwW2xdO2lmKHIpe2RlbGV0ZSBqW25dfWVsc2UgaWYodHlwZW9mIGoucmVtb3ZlQXR0cmlidXRlIT09Zil7ai5yZW1vdmVBdHRyaWJ1dGUobil9ZWxzZXtqW25dPW51bGx9eS5wdXNoKGwpfX19fX0sX2V2YWxVcmw6ZnVuY3Rpb24oYSl7cmV0dXJuIFEuYWpheCh7dXJsOmEsdHlwZToiR0VUIixkYXRhVHlwZToic2NyaXB0Iixhc3luYzpmYWxzZSxnbG9iYWw6ZmFsc2UsInRocm93cyI6dHJ1ZX0pfX0pO1EuZm4uZXh0ZW5kKHt3cmFwQWxsOmZ1bmN0aW9uKGEpe2lmKFEuaXNGdW5jdGlvbihhKSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXtRKHRoaXMpLndyYXBBbGwoYS5jYWxsKHRoaXMsaSkpfSl9aWYodGhpc1swXSl7dmFyIGI9UShhLHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCkuY2xvbmUodHJ1ZSk7aWYodGhpc1swXS5wYXJlbnROb2RlKXtiLmluc2VydEJlZm9yZSh0aGlzWzBdKX1iLm1hcChmdW5jdGlvbigpe3ZhciBpPXRoaXM7d2hpbGUoaS5maXJzdENoaWxkJiZpLmZpcnN0Q2hpbGQubm9kZVR5cGU9PT0xKXtpPWkuZmlyc3RDaGlsZH1yZXR1cm4gaX0pLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKGEpe2lmKFEuaXNGdW5jdGlvbihhKSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpKXtRKHRoaXMpLndyYXBJbm5lcihhLmNhbGwodGhpcyxpKSl9KX1yZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHM9USh0aGlzKSxiPXMuY29udGVudHMoKTtpZihiLmxlbmd0aCl7Yi53cmFwQWxsKGEpfWVsc2V7cy5hcHBlbmQoYSl9fSl9LHdyYXA6ZnVuY3Rpb24oYSl7dmFyIGI9US5pc0Z1bmN0aW9uKGEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSl7USh0aGlzKS53cmFwQWxsKGI/YS5jYWxsKHRoaXMsaSk6YSl9KX0sdW53cmFwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChmdW5jdGlvbigpe2lmKCFRLm5vZGVOYW1lKHRoaXMsImJvZHkiKSl7USh0aGlzKS5yZXBsYWNlV2l0aCh0aGlzLmNoaWxkTm9kZXMpfX0pLmVuZCgpfX0pO3ZhciBfMSxhMixiMixjMj0vYWxwaGFcKFteKV0qXCkvaSxkMj0vb3BhY2l0eVxzKj1ccyooW14pXSopLyxlMj0vXih0b3B8cmlnaHR8Ym90dG9tfGxlZnQpJC8sZjI9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLGcyPS9ebWFyZ2luLyxoMj1uZXcgUmVnRXhwKCJeKCIrSCsiKSguKikkIiwiaSIpLGkyPW5ldyBSZWdFeHAoIl4oIitIKyIpKD8hcHgpW2EteiVdKyQiLCJpIiksajI9bmV3IFJlZ0V4cCgiXihbKy1dKT0oIitIKyIpIiwiaSIpLGsyPXtCT0RZOiJibG9jayJ9LGwyPXtwb3NpdGlvbjoiYWJzb2x1dGUiLHZpc2liaWxpdHk6ImhpZGRlbiIsZGlzcGxheToiYmxvY2sifSxtMj17bGV0dGVyU3BhY2luZzowLGZvbnRXZWlnaHQ6NDAwfSxuMj1bIlRvcCIsIlJpZ2h0IiwiQm90dG9tIiwiTGVmdCJdLG8yPVsiV2Via2l0IiwiTyIsIk1veiIsIm1zIl07ZnVuY3Rpb24gcDIocyxuKXtpZihuIGluIHMpe3JldHVybiBufXZhciBhPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKSxiPW4saT1vMi5sZW5ndGg7d2hpbGUoaS0tKXtuPW8yW2ldK2E7aWYobiBpbiBzKXtyZXR1cm4gbn19cmV0dXJuIGJ9ZnVuY3Rpb24gcTIoYSxiKXthPWJ8fGE7cmV0dXJuIFEuY3NzKGEsImRpc3BsYXkiKT09PSJub25lInx8IVEuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpfWZ1bmN0aW9uIHIyKGEscyl7dmFyIGIsaSxqLHY9W10sbD0wLG09YS5sZW5ndGg7Zm9yKDtsPG07bCsrKXtpPWFbbF07aWYoIWkuc3R5bGUpe2NvbnRpbnVlfXZbbF09US5fZGF0YShpLCJvbGRkaXNwbGF5Iik7Yj1pLnN0eWxlLmRpc3BsYXk7aWYocyl7aWYoIXZbbF0mJmI9PT0ibm9uZSIpe2kuc3R5bGUuZGlzcGxheT0iIn1pZihpLnN0eWxlLmRpc3BsYXk9PT0iIiYmcTIoaSkpe3ZbbF09US5fZGF0YShpLCJvbGRkaXNwbGF5Iix2MihpLm5vZGVOYW1lKSl9fWVsc2V7aWYoIXZbbF0pe2o9cTIoaSk7aWYoYiYmYiE9PSJub25lInx8IWope1EuX2RhdGEoaSwib2xkZGlzcGxheSIsaj9iOlEuY3NzKGksImRpc3BsYXkiKSl9fX19Zm9yKGw9MDtsPG07bCsrKXtpPWFbbF07aWYoIWkuc3R5bGUpe2NvbnRpbnVlfWlmKCFzfHxpLnN0eWxlLmRpc3BsYXk9PT0ibm9uZSJ8fGkuc3R5bGUuZGlzcGxheT09PSIiKXtpLnN0eWxlLmRpc3BsYXk9cz92W2xdfHwiIjoibm9uZSJ9fXJldHVybiBhfVEuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24obix2KXtyZXR1cm4gUS5hY2Nlc3ModGhpcyxmdW5jdGlvbihhLG4sdil7dmFyIGwscyxtPXt9LGk9MDtpZihRLmlzQXJyYXkobikpe3M9YTIoYSk7bD1uLmxlbmd0aDtmb3IoO2k8bDtpKyspe21bbltpXV09US5jc3MoYSxuW2ldLGZhbHNlLHMpfXJldHVybiBtfXJldHVybiB2IT09dT9RLnN0eWxlKGEsbix2KTpRLmNzcyhhLG4pfSxuLHYsYXJndW1lbnRzLmxlbmd0aD4xKX0sc2hvdzpmdW5jdGlvbigpe3JldHVybiByMih0aGlzLHRydWUpfSxoaWRlOmZ1bmN0aW9uKCl7cmV0dXJuIHIyKHRoaXMpfSx0b2dnbGU6ZnVuY3Rpb24ocyl7aWYodHlwZW9mIHM9PT0iYm9vbGVhbiIpe3JldHVybiBzP3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpfXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtpZihxMih0aGlzKSl7USh0aGlzKS5zaG93KCl9ZWxzZXtRKHRoaXMpLmhpZGUoKX19KX19KTtRLmV4dGVuZCh7Y3NzSG9va3M6e29wYWNpdHk6e2dldDpmdW5jdGlvbihhLGIpe2lmKGIpe3ZhciByPWIyKGEsIm9wYWNpdHkiKTtyZXR1cm4gcj09PSIiPyIxIjpyfX19fSxjc3NOdW1iZXI6eyJjb2x1bW5Db3VudCI6dHJ1ZSwiZmlsbE9wYWNpdHkiOnRydWUsImZvbnRXZWlnaHQiOnRydWUsImxpbmVIZWlnaHQiOnRydWUsIm9wYWNpdHkiOnRydWUsIm9yZGVyIjp0cnVlLCJvcnBoYW5zIjp0cnVlLCJ3aWRvd3MiOnRydWUsInpJbmRleCI6dHJ1ZSwiem9vbSI6dHJ1ZX0sY3NzUHJvcHM6eyJmbG9hdCI6US5zdXBwb3J0LmNzc0Zsb2F0PyJjc3NGbG9hdCI6InN0eWxlRmxvYXQifSxzdHlsZTpmdW5jdGlvbihhLG4sdixiKXtpZighYXx8YS5ub2RlVHlwZT09PTN8fGEubm9kZVR5cGU9PT04fHwhYS5zdHlsZSl7cmV0dXJufXZhciByLHQsaSxqPVEuY2FtZWxDYXNlKG4pLHM9YS5zdHlsZTtuPVEuY3NzUHJvcHNbal18fChRLmNzc1Byb3BzW2pdPXAyKHMsaikpO2k9US5jc3NIb29rc1tuXXx8US5jc3NIb29rc1tqXTtpZih2IT09dSl7dD10eXBlb2YgdjtpZih0PT09InN0cmluZyImJihyPWoyLmV4ZWModikpKXt2PShyWzFdKzEpKnJbMl0rcGFyc2VGbG9hdChRLmNzcyhhLG4pKTt0PSJudW1iZXIifWlmKHY9PW51bGx8fHQ9PT0ibnVtYmVyIiYmaXNOYU4odikpe3JldHVybn1pZih0PT09Im51bWJlciImJiFRLmNzc051bWJlcltqXSl7dis9InB4In1pZighUS5zdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSYmdj09PSIiJiZuLmluZGV4T2YoImJhY2tncm91bmQiKT09PTApe3Nbbl09ImluaGVyaXQifWlmKCFpfHwhKCJzZXQiaW4gaSl8fCh2PWkuc2V0KGEsdixiKSkhPT11KXt0cnl7c1tuXT12fWNhdGNoKGUpe319fWVsc2V7aWYoaSYmImdldCJpbiBpJiYocj1pLmdldChhLGZhbHNlLGIpKSE9PXUpe3JldHVybiByfXJldHVybiBzW25dfX0sY3NzOmZ1bmN0aW9uKGEsbixiLHMpe3ZhciBpLHYsaixsPVEuY2FtZWxDYXNlKG4pO249US5jc3NQcm9wc1tsXXx8KFEuY3NzUHJvcHNbbF09cDIoYS5zdHlsZSxsKSk7aj1RLmNzc0hvb2tzW25dfHxRLmNzc0hvb2tzW2xdO2lmKGomJiJnZXQiaW4gail7dj1qLmdldChhLHRydWUsYil9aWYodj09PXUpe3Y9YjIoYSxuLHMpfWlmKHY9PT0ibm9ybWFsIiYmbiBpbiBtMil7dj1tMltuXX1pZihiPT09IiJ8fGIpe2k9cGFyc2VGbG9hdCh2KTtyZXR1cm4gYj09PXRydWV8fFEuaXNOdW1lcmljKGkpP2l8fDA6dn1yZXR1cm4gdn19KTtpZih3LmdldENvbXB1dGVkU3R5bGUpe2EyPWZ1bmN0aW9uKGEpe3JldHVybiB3LmdldENvbXB1dGVkU3R5bGUoYSxudWxsKX07YjI9ZnVuY3Rpb24oYSxuLF8pe3ZhciBiLG0saSxqPV98fGEyKGEpLHI9aj9qLmdldFByb3BlcnR5VmFsdWUobil8fGpbbl06dSxzPWEuc3R5bGU7aWYoail7aWYocj09PSIiJiYhUS5jb250YWlucyhhLm93bmVyRG9jdW1lbnQsYSkpe3I9US5zdHlsZShhLG4pfWlmKGkyLnRlc3QocikmJmcyLnRlc3Qobikpe2I9cy53aWR0aDttPXMubWluV2lkdGg7aT1zLm1heFdpZHRoO3MubWluV2lkdGg9cy5tYXhXaWR0aD1zLndpZHRoPXI7cj1qLndpZHRoO3Mud2lkdGg9YjtzLm1pbldpZHRoPW07cy5tYXhXaWR0aD1pfX1yZXR1cm4gcn19ZWxzZSBpZihoLmRvY3VtZW50RWxlbWVudC5jdXJyZW50U3R5bGUpe2EyPWZ1bmN0aW9uKGEpe3JldHVybiBhLmN1cnJlbnRTdHlsZX07YjI9ZnVuY3Rpb24oYSxuLF8pe3ZhciBsLHIsYixpPV98fGEyKGEpLGo9aT9pW25dOnUscz1hLnN0eWxlO2lmKGo9PW51bGwmJnMmJnNbbl0pe2o9c1tuXX1pZihpMi50ZXN0KGopJiYhZTIudGVzdChuKSl7bD1zLmxlZnQ7cj1hLnJ1bnRpbWVTdHlsZTtiPXImJnIubGVmdDtpZihiKXtyLmxlZnQ9YS5jdXJyZW50U3R5bGUubGVmdH1zLmxlZnQ9bj09PSJmb250U2l6ZSI/IjFlbSI6ajtqPXMucGl4ZWxMZWZ0KyJweCI7cy5sZWZ0PWw7aWYoYil7ci5sZWZ0PWJ9fXJldHVybiBqPT09IiI/ImF1dG8iOmp9fWZ1bmN0aW9uIHMyKGEsdixzKXt2YXIgbT1oMi5leGVjKHYpO3JldHVybiBtP01hdGgubWF4KDAsbVsxXS0oc3x8MCkpKyhtWzJdfHwicHgiKTp2fWZ1bmN0aW9uIHQyKGEsbixiLGoscyl7dmFyIGk9Yj09PShqPyJib3JkZXIiOiJjb250ZW50Iik/NDpuPT09IndpZHRoIj8xOjAsdj0wO2Zvcig7aTw0O2krPTIpe2lmKGI9PT0ibWFyZ2luIil7dis9US5jc3MoYSxiK24yW2ldLHRydWUscyl9aWYoail7aWYoYj09PSJjb250ZW50Iil7di09US5jc3MoYSwicGFkZGluZyIrbjJbaV0sdHJ1ZSxzKX1pZihiIT09Im1hcmdpbiIpe3YtPVEuY3NzKGEsImJvcmRlciIrbjJbaV0rIldpZHRoIix0cnVlLHMpfX1lbHNle3YrPVEuY3NzKGEsInBhZGRpbmciK24yW2ldLHRydWUscyk7aWYoYiE9PSJwYWRkaW5nIil7dis9US5jc3MoYSwiYm9yZGVyIituMltpXSsiV2lkdGgiLHRydWUscyl9fX1yZXR1cm4gdn1mdW5jdGlvbiB1MihhLG4sYil7dmFyIHY9dHJ1ZSxpPW49PT0id2lkdGgiP2Eub2Zmc2V0V2lkdGg6YS5vZmZzZXRIZWlnaHQscz1hMihhKSxqPVEuc3VwcG9ydC5ib3hTaXppbmcmJlEuY3NzKGEsImJveFNpemluZyIsZmFsc2Uscyk9PT0iYm9yZGVyLWJveCI7aWYoaTw9MHx8aT09bnVsbCl7aT1iMihhLG4scyk7aWYoaTwwfHxpPT1udWxsKXtpPWEuc3R5bGVbbl19aWYoaTIudGVzdChpKSl7cmV0dXJuIGl9dj1qJiYoUS5zdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlfHxpPT09YS5zdHlsZVtuXSk7aT1wYXJzZUZsb2F0KGkpfHwwfXJldHVybihpK3QyKGEsbixifHwoaj8iYm9yZGVyIjoiY29udGVudCIpLHYscykpKyJweCJ9ZnVuY3Rpb24gdjIobil7dmFyIGE9aCxiPWsyW25dO2lmKCFiKXtiPXcyKG4sYSk7aWYoYj09PSJub25lInx8IWIpe18xPShfMXx8USgiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPiIpLmNzcygiY3NzVGV4dCIsImRpc3BsYXk6YmxvY2sgIWltcG9ydGFudCIpKS5hcHBlbmRUbyhhLmRvY3VtZW50RWxlbWVudCk7YT0oXzFbMF0uY29udGVudFdpbmRvd3x8XzFbMF0uY29udGVudERvY3VtZW50KS5kb2N1bWVudDthLndyaXRlKCI8IWRvY3R5cGUgaHRtbD48aHRtbD48Ym9keT4iKTthLmNsb3NlKCk7Yj13MihuLGEpO18xLmRldGFjaCgpfWsyW25dPWJ9cmV0dXJuIGJ9ZnVuY3Rpb24gdzIobixhKXt2YXIgYj1RKGEuY3JlYXRlRWxlbWVudChuKSkuYXBwZW5kVG8oYS5ib2R5KSxpPVEuY3NzKGJbMF0sImRpc3BsYXkiKTtiLnJlbW92ZSgpO3JldHVybiBpfVEuZWFjaChbImhlaWdodCIsIndpZHRoIl0sZnVuY3Rpb24oaSxuKXtRLmNzc0hvb2tzW25dPXtnZXQ6ZnVuY3Rpb24oYSxiLGope2lmKGIpe3JldHVybiBhLm9mZnNldFdpZHRoPT09MCYmZjIudGVzdChRLmNzcyhhLCJkaXNwbGF5IikpP1Euc3dhcChhLGwyLGZ1bmN0aW9uKCl7cmV0dXJuIHUyKGEsbixqKX0pOnUyKGEsbixqKX19LHNldDpmdW5jdGlvbihhLHYsYil7dmFyIHM9YiYmYTIoYSk7cmV0dXJuIHMyKGEsdixiP3QyKGEsbixiLFEuc3VwcG9ydC5ib3hTaXppbmcmJlEuY3NzKGEsImJveFNpemluZyIsZmFsc2Uscyk9PT0iYm9yZGVyLWJveCIscyk6MCl9fX0pO2lmKCFRLnN1cHBvcnQub3BhY2l0eSl7US5jc3NIb29rcy5vcGFjaXR5PXtnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZDIudGVzdCgoYiYmYS5jdXJyZW50U3R5bGU/YS5jdXJyZW50U3R5bGUuZmlsdGVyOmEuc3R5bGUuZmlsdGVyKXx8IiIpPygwLjAxKnBhcnNlRmxvYXQoUmVnRXhwLiQxKSkrIiI6Yj8iMSI6IiJ9LHNldDpmdW5jdGlvbihhLHYpe3ZhciBzPWEuc3R5bGUsYj1hLmN1cnJlbnRTdHlsZSxpPVEuaXNOdW1lcmljKHYpPyJhbHBoYShvcGFjaXR5PSIrdioxMDArIikiOiIiLGo9YiYmYi5maWx0ZXJ8fHMuZmlsdGVyfHwiIjtzLnpvb209MTtpZigodj49MXx8dj09PSIiKSYmUS50cmltKGoucmVwbGFjZShjMiwiIikpPT09IiImJnMucmVtb3ZlQXR0cmlidXRlKXtzLnJlbW92ZUF0dHJpYnV0ZSgiZmlsdGVyIik7aWYodj09PSIifHxiJiYhYi5maWx0ZXIpe3JldHVybn19cy5maWx0ZXI9YzIudGVzdChqKT9qLnJlcGxhY2UoYzIsaSk6aisiICIraX19fVEoZnVuY3Rpb24oKXtpZighUS5zdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQpe1EuY3NzSG9va3MubWFyZ2luUmlnaHQ9e2dldDpmdW5jdGlvbihhLGIpe2lmKGIpe3JldHVybiBRLnN3YXAoYSx7ImRpc3BsYXkiOiJpbmxpbmUtYmxvY2sifSxiMixbYSwibWFyZ2luUmlnaHQiXSl9fX19aWYoIVEuc3VwcG9ydC5waXhlbFBvc2l0aW9uJiZRLmZuLnBvc2l0aW9uKXtRLmVhY2goWyJ0b3AiLCJsZWZ0Il0sZnVuY3Rpb24oaSxwKXtRLmNzc0hvb2tzW3BdPXtnZXQ6ZnVuY3Rpb24oYSxiKXtpZihiKXtiPWIyKGEscCk7cmV0dXJuIGkyLnRlc3QoYik/UShhKS5wb3NpdGlvbigpW3BdKyJweCI6Yn19fX0pfX0pO2lmKFEuZXhwciYmUS5leHByLmZpbHRlcnMpe1EuZXhwci5maWx0ZXJzLmhpZGRlbj1mdW5jdGlvbihhKXtyZXR1cm4gYS5vZmZzZXRXaWR0aDw9MCYmYS5vZmZzZXRIZWlnaHQ8PTB8fCghUS5zdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyYmKChhLnN0eWxlJiZhLnN0eWxlLmRpc3BsYXkpfHxRLmNzcyhhLCJkaXNwbGF5IikpPT09Im5vbmUiKX07US5leHByLmZpbHRlcnMudmlzaWJsZT1mdW5jdGlvbihhKXtyZXR1cm4hUS5leHByLmZpbHRlcnMuaGlkZGVuKGEpfX1RLmVhY2goe21hcmdpbjoiIixwYWRkaW5nOiIiLGJvcmRlcjoiV2lkdGgifSxmdW5jdGlvbihwLHMpe1EuY3NzSG9va3NbcCtzXT17ZXhwYW5kOmZ1bmN0aW9uKHYpe3ZhciBpPTAsYT17fSxiPXR5cGVvZiB2PT09InN0cmluZyI/di5zcGxpdCgiICIpOlt2XTtmb3IoO2k8NDtpKyspe2FbcCtuMltpXStzXT1iW2ldfHxiW2ktMl18fGJbMF19cmV0dXJuIGF9fTtpZighZzIudGVzdChwKSl7US5jc3NIb29rc1twK3NdLnNldD1zMn19KTt2YXIgeDI9LyUyMC9nLHkyPS9cW1xdJC8sejI9L1xyP1xuL2csQTI9L14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLEIyPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtRLmZuLmV4dGVuZCh7c2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIFEucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT1RLnByb3AodGhpcywiZWxlbWVudHMiKTtyZXR1cm4gYT9RLm1ha2VBcnJheShhKTp0aGlzfSkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy50eXBlO3JldHVybiB0aGlzLm5hbWUmJiFRKHRoaXMpLmlzKCI6ZGlzYWJsZWQiKSYmQjIudGVzdCh0aGlzLm5vZGVOYW1lKSYmIUEyLnRlc3QodCkmJih0aGlzLmNoZWNrZWR8fCFMMS50ZXN0KHQpKX0pLm1hcChmdW5jdGlvbihpLGEpe3ZhciB2PVEodGhpcykudmFsKCk7cmV0dXJuIHY9PW51bGw/bnVsbDpRLmlzQXJyYXkodik/US5tYXAodixmdW5jdGlvbih2KXtyZXR1cm57bmFtZTphLm5hbWUsdmFsdWU6di5yZXBsYWNlKHoyLCJcclxuIil9fSk6e25hbWU6YS5uYW1lLHZhbHVlOnYucmVwbGFjZSh6MiwiXHJcbiIpfX0pLmdldCgpfX0pO1EucGFyYW09ZnVuY3Rpb24oYSx0KXt2YXIgcCxzPVtdLGI9ZnVuY3Rpb24oaSx2KXt2PVEuaXNGdW5jdGlvbih2KT92KCk6KHY9PW51bGw/IiI6dik7c1tzLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KGkpKyI9IitlbmNvZGVVUklDb21wb25lbnQodil9O2lmKHQ9PT11KXt0PVEuYWpheFNldHRpbmdzJiZRLmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbH1pZihRLmlzQXJyYXkoYSl8fChhLmpxdWVyeSYmIVEuaXNQbGFpbk9iamVjdChhKSkpe1EuZWFjaChhLGZ1bmN0aW9uKCl7Yih0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KX1lbHNle2ZvcihwIGluIGEpe0MyKHAsYVtwXSx0LGIpfX1yZXR1cm4gcy5qb2luKCImIikucmVwbGFjZSh4MiwiKyIpfTtmdW5jdGlvbiBDMihwLGEsdCxiKXt2YXIgbjtpZihRLmlzQXJyYXkoYSkpe1EuZWFjaChhLGZ1bmN0aW9uKGksdil7aWYodHx8eTIudGVzdChwKSl7YihwLHYpfWVsc2V7QzIocCsiWyIrKHR5cGVvZiB2PT09Im9iamVjdCI/aToiIikrIl0iLHYsdCxiKX19KX1lbHNlIGlmKCF0JiZRLnR5cGUoYSk9PT0ib2JqZWN0Iil7Zm9yKG4gaW4gYSl7QzIocCsiWyIrbisiXSIsYVtuXSx0LGIpfX1lbHNle2IocCxhKX19US5lYWNoKCgiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgIisibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgIisiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBlcnJvciBjb250ZXh0bWVudSIpLnNwbGl0KCIgIiksZnVuY3Rpb24oaSxuKXtRLmZuW25dPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKG4sbnVsbCxhLGIpOnRoaXMudHJpZ2dlcihuKX19KTtRLmZuLmV4dGVuZCh7aG92ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGEpLm1vdXNlbGVhdmUoYnx8YSl9LGJpbmQ6ZnVuY3Rpb24odCxhLGIpe3JldHVybiB0aGlzLm9uKHQsbnVsbCxhLGIpfSx1bmJpbmQ6ZnVuY3Rpb24odCxhKXtyZXR1cm4gdGhpcy5vZmYodCxudWxsLGEpfSxkZWxlZ2F0ZTpmdW5jdGlvbihzLHQsYSxiKXtyZXR1cm4gdGhpcy5vbih0LHMsYSxiKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihzLHQsYSl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg9PT0xP3RoaXMub2ZmKHMsIioqIik6dGhpcy5vZmYodCxzfHwiKioiLGEpfX0pO3ZhciBEMixFMixGMj1RLm5vdygpLEcyPS9cPy8sSDI9LyMuKiQvLEkyPS8oWz8mXSlfPVteJl0qLyxKMj0vXiguKj8pOlsgXHRdKihbXlxyXG5dKilccj8kL21nLEsyPS9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLEwyPS9eKD86R0VUfEhFQUQpJC8sTTI9L15cL1wvLyxOMj0vXihbXHcuKy1dKzopKD86XC9cLyhbXlwvPyM6XSopKD86OihcZCspfCl8KS8sTzI9US5mbi5sb2FkLFAyPXt9LFEyPXt9LFIyPSIqLyIuY29uY2F0KCIqIik7dHJ5e0UyPWcuaHJlZn1jYXRjaChlKXtFMj1oLmNyZWF0ZUVsZW1lbnQoImEiKTtFMi5ocmVmPSIiO0UyPUUyLmhyZWZ9RDI9TjIuZXhlYyhFMi50b0xvd2VyQ2FzZSgpKXx8W107ZnVuY3Rpb24gUzIocyl7cmV0dXJuIGZ1bmN0aW9uKGEsYil7aWYodHlwZW9mIGEhPT0ic3RyaW5nIil7Yj1hO2E9IioifXZhciBqLGk9MCxsPWEudG9Mb3dlckNhc2UoKS5tYXRjaChJKXx8W107aWYoUS5pc0Z1bmN0aW9uKGIpKXt3aGlsZSgoaj1sW2krK10pKXtpZihqWzBdPT09IisiKXtqPWouc2xpY2UoMSl8fCIqIjsoc1tqXT1zW2pdfHxbXSkudW5zaGlmdChiKX1lbHNleyhzW2pdPXNbal18fFtdKS5wdXNoKGIpfX19fX1mdW5jdGlvbiBUMihzLGEsYixqKXt2YXIgaT17fSxsPShzPT09UTIpO2Z1bmN0aW9uIG0obil7dmFyIHA7aVtuXT10cnVlO1EuZWFjaChzW25dfHxbXSxmdW5jdGlvbihfLHIpe3ZhciB0PXIoYSxiLGopO2lmKHR5cGVvZiB0PT09InN0cmluZyImJiFsJiYhaVt0XSl7YS5kYXRhVHlwZXMudW5zaGlmdCh0KTttKHQpO3JldHVybiBmYWxzZX1lbHNlIGlmKGwpe3JldHVybiEocD10KX19KTtyZXR1cm4gcH1yZXR1cm4gbShhLmRhdGFUeXBlc1swXSl8fCFpWyIqIl0mJm0oIioiKX1mdW5jdGlvbiBVMih0LHMpe3ZhciBhLGIsaT1RLmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9uc3x8e307Zm9yKGIgaW4gcyl7aWYoc1tiXSE9PXUpeyhpW2JdP3Q6KGF8fChhPXt9KSkpW2JdPXNbYl19fWlmKGEpe1EuZXh0ZW5kKHRydWUsdCxhKX1yZXR1cm4gdH1RLmZuLmxvYWQ9ZnVuY3Rpb24oYSxwLGIpe2lmKHR5cGVvZiBhIT09InN0cmluZyImJk8yKXtyZXR1cm4gTzIuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBzLHIsdCxpPXRoaXMsaj1hLmluZGV4T2YoIiAiKTtpZihqPj0wKXtzPWEuc2xpY2UoaixhLmxlbmd0aCk7YT1hLnNsaWNlKDAsail9aWYoUS5pc0Z1bmN0aW9uKHApKXtiPXA7cD11fWVsc2UgaWYocCYmdHlwZW9mIHA9PT0ib2JqZWN0Iil7dD0iUE9TVCJ9aWYoaS5sZW5ndGg+MCl7US5hamF4KHt1cmw6YSx0eXBlOnQsZGF0YVR5cGU6Imh0bWwiLGRhdGE6cH0pLmRvbmUoZnVuY3Rpb24obCl7cj1hcmd1bWVudHM7aS5odG1sKHM/USgiPGRpdj4iKS5hcHBlbmQoUS5wYXJzZUhUTUwobCkpLmZpbmQocyk6bCl9KS5jb21wbGV0ZShiJiZmdW5jdGlvbihsLG0pe2kuZWFjaChiLHJ8fFtsLnJlc3BvbnNlVGV4dCxtLGxdKX0pfXJldHVybiB0aGlzfTtRLmVhY2goWyJhamF4U3RhcnQiLCJhamF4U3RvcCIsImFqYXhDb21wbGV0ZSIsImFqYXhFcnJvciIsImFqYXhTdWNjZXNzIiwiYWpheFNlbmQiXSxmdW5jdGlvbihpLHQpe1EuZm5bdF09ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMub24odCxhKX19KTtRLmV4dGVuZCh7YWN0aXZlOjAsbGFzdE1vZGlmaWVkOnt9LGV0YWc6e30sYWpheFNldHRpbmdzOnt1cmw6RTIsdHlwZToiR0VUIixpc0xvY2FsOksyLnRlc3QoRDJbMV0pLGdsb2JhbDp0cnVlLHByb2Nlc3NEYXRhOnRydWUsYXN5bmM6dHJ1ZSxjb250ZW50VHlwZToiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IixhY2NlcHRzOnsiKiI6UjIsdGV4dDoidGV4dC9wbGFpbiIsaHRtbDoidGV4dC9odG1sIix4bWw6ImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWwiLGpzb246ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCJ9LGNvbnRlbnRzOnt4bWw6L3htbC8saHRtbDovaHRtbC8sanNvbjovanNvbi99LHJlc3BvbnNlRmllbGRzOnt4bWw6InJlc3BvbnNlWE1MIix0ZXh0OiJyZXNwb25zZVRleHQiLGpzb246InJlc3BvbnNlSlNPTiJ9LGNvbnZlcnRlcnM6eyIqIHRleHQiOlN0cmluZywidGV4dCBodG1sIjp0cnVlLCJ0ZXh0IGpzb24iOlEucGFyc2VKU09OLCJ0ZXh0IHhtbCI6US5wYXJzZVhNTH0sZmxhdE9wdGlvbnM6e3VybDp0cnVlLGNvbnRleHQ6dHJ1ZX19LGFqYXhTZXR1cDpmdW5jdGlvbih0LHMpe3JldHVybiBzP1UyKFUyKHQsUS5hamF4U2V0dGluZ3MpLHMpOlUyKFEuYWpheFNldHRpbmdzLHQpfSxhamF4UHJlZmlsdGVyOlMyKFAyKSxhamF4VHJhbnNwb3J0OlMyKFEyKSxhamF4OmZ1bmN0aW9uKGEsYil7aWYodHlwZW9mIGE9PT0ib2JqZWN0Iil7Yj1hO2E9dX1iPWJ8fHt9O3ZhciBwLGksaixyLHQsbCxtLG4scz1RLmFqYXhTZXR1cCh7fSxiKSx2PXMuY29udGV4dHx8cyxfPXMuY29udGV4dCYmKHYubm9kZVR5cGV8fHYuanF1ZXJ5KT9RKHYpOlEuZXZlbnQsczM9US5EZWZlcnJlZCgpLHQzPVEuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLHUzPXMuc3RhdHVzQ29kZXx8e30sdjM9e30sdzM9e30seDM9MCx5Mz0iY2FuY2VsZWQiLHozPXtyZWFkeVN0YXRlOjAsZ2V0UmVzcG9uc2VIZWFkZXI6ZnVuY3Rpb24oQjMpe3ZhciBDMztpZih4Mz09PTIpe2lmKCFuKXtuPXt9O3doaWxlKChDMz1KMi5leGVjKHIpKSl7bltDM1sxXS50b0xvd2VyQ2FzZSgpXT1DM1syXX19QzM9bltCMy50b0xvd2VyQ2FzZSgpXX1yZXR1cm4gQzM9PW51bGw/bnVsbDpDM30sZ2V0QWxsUmVzcG9uc2VIZWFkZXJzOmZ1bmN0aW9uKCl7cmV0dXJuIHgzPT09Mj9yOm51bGx9LHNldFJlcXVlc3RIZWFkZXI6ZnVuY3Rpb24oQjMsQzMpe3ZhciBEMz1CMy50b0xvd2VyQ2FzZSgpO2lmKCF4Myl7QjM9dzNbRDNdPXczW0QzXXx8QjM7djNbQjNdPUMzfXJldHVybiB0aGlzfSxvdmVycmlkZU1pbWVUeXBlOmZ1bmN0aW9uKEIzKXtpZigheDMpe3MubWltZVR5cGU9QjN9cmV0dXJuIHRoaXN9LHN0YXR1c0NvZGU6ZnVuY3Rpb24oQjMpe3ZhciBDMztpZihCMyl7aWYoeDM8Mil7Zm9yKEMzIGluIEIzKXt1M1tDM109W3UzW0MzXSxCM1tDM11dfX1lbHNle3ozLmFsd2F5cyhCM1t6My5zdGF0dXNdKX19cmV0dXJuIHRoaXN9LGFib3J0OmZ1bmN0aW9uKEIzKXt2YXIgQzM9QjN8fHkzO2lmKG0pe20uYWJvcnQoQzMpfUEzKDAsQzMpO3JldHVybiB0aGlzfX07czMucHJvbWlzZSh6MykuY29tcGxldGU9dDMuYWRkO3ozLnN1Y2Nlc3M9ejMuZG9uZTt6My5lcnJvcj16My5mYWlsO3MudXJsPSgoYXx8cy51cmx8fEUyKSsiIikucmVwbGFjZShIMiwiIikucmVwbGFjZShNMixEMlsxXSsiLy8iKTtzLnR5cGU9Yi5tZXRob2R8fGIudHlwZXx8cy5tZXRob2R8fHMudHlwZTtzLmRhdGFUeXBlcz1RLnRyaW0ocy5kYXRhVHlwZXx8IioiKS50b0xvd2VyQ2FzZSgpLm1hdGNoKEkpfHxbIiJdO2lmKHMuY3Jvc3NEb21haW49PW51bGwpe3A9TjIuZXhlYyhzLnVybC50b0xvd2VyQ2FzZSgpKTtzLmNyb3NzRG9tYWluPSEhKHAmJihwWzFdIT09RDJbMV18fHBbMl0hPT1EMlsyXXx8KHBbM118fChwWzFdPT09Imh0dHA6Ij8iODAiOiI0NDMiKSkhPT0oRDJbM118fChEMlsxXT09PSJodHRwOiI/IjgwIjoiNDQzIikpKSl9aWYocy5kYXRhJiZzLnByb2Nlc3NEYXRhJiZ0eXBlb2Ygcy5kYXRhIT09InN0cmluZyIpe3MuZGF0YT1RLnBhcmFtKHMuZGF0YSxzLnRyYWRpdGlvbmFsKX1UMihQMixzLGIsejMpO2lmKHgzPT09Mil7cmV0dXJuIHozfWw9cy5nbG9iYWw7aWYobCYmUS5hY3RpdmUrKz09PTApe1EuZXZlbnQudHJpZ2dlcigiYWpheFN0YXJ0Iil9cy50eXBlPXMudHlwZS50b1VwcGVyQ2FzZSgpO3MuaGFzQ29udGVudD0hTDIudGVzdChzLnR5cGUpO2o9cy51cmw7aWYoIXMuaGFzQ29udGVudCl7aWYocy5kYXRhKXtqPShzLnVybCs9KEcyLnRlc3Qoaik/IiYiOiI/Iikrcy5kYXRhKTtkZWxldGUgcy5kYXRhfWlmKHMuY2FjaGU9PT1mYWxzZSl7cy51cmw9STIudGVzdChqKT9qLnJlcGxhY2UoSTIsIiQxXz0iK0YyKyspOmorKEcyLnRlc3Qoaik/IiYiOiI/IikrIl89IitGMisrfX1pZihzLmlmTW9kaWZpZWQpe2lmKFEubGFzdE1vZGlmaWVkW2pdKXt6My5zZXRSZXF1ZXN0SGVhZGVyKCJJZi1Nb2RpZmllZC1TaW5jZSIsUS5sYXN0TW9kaWZpZWRbal0pfWlmKFEuZXRhZ1tqXSl7ejMuc2V0UmVxdWVzdEhlYWRlcigiSWYtTm9uZS1NYXRjaCIsUS5ldGFnW2pdKX19aWYocy5kYXRhJiZzLmhhc0NvbnRlbnQmJnMuY29udGVudFR5cGUhPT1mYWxzZXx8Yi5jb250ZW50VHlwZSl7ejMuc2V0UmVxdWVzdEhlYWRlcigiQ29udGVudC1UeXBlIixzLmNvbnRlbnRUeXBlKX16My5zZXRSZXF1ZXN0SGVhZGVyKCJBY2NlcHQiLHMuZGF0YVR5cGVzWzBdJiZzLmFjY2VwdHNbcy5kYXRhVHlwZXNbMF1dP3MuYWNjZXB0c1tzLmRhdGFUeXBlc1swXV0rKHMuZGF0YVR5cGVzWzBdIT09IioiPyIsICIrUjIrIjsgcT0wLjAxIjoiIik6cy5hY2NlcHRzWyIqIl0pO2ZvcihpIGluIHMuaGVhZGVycyl7ejMuc2V0UmVxdWVzdEhlYWRlcihpLHMuaGVhZGVyc1tpXSl9aWYocy5iZWZvcmVTZW5kJiYocy5iZWZvcmVTZW5kLmNhbGwodix6MyxzKT09PWZhbHNlfHx4Mz09PTIpKXtyZXR1cm4gejMuYWJvcnQoKX15Mz0iYWJvcnQiO2ZvcihpIGlue3N1Y2Nlc3M6MSxlcnJvcjoxLGNvbXBsZXRlOjF9KXt6M1tpXShzW2ldKX1tPVQyKFEyLHMsYix6Myk7aWYoIW0pe0EzKC0xLCJObyBUcmFuc3BvcnQiKX1lbHNle3ozLnJlYWR5U3RhdGU9MTtpZihsKXtfLnRyaWdnZXIoImFqYXhTZW5kIixbejMsc10pfWlmKHMuYXN5bmMmJnMudGltZW91dD4wKXt0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXt6My5hYm9ydCgidGltZW91dCIpfSxzLnRpbWVvdXQpfXRyeXt4Mz0xO20uc2VuZCh2MyxBMyl9Y2F0Y2goZSl7aWYoeDM8Mil7QTMoLTEsZSl9ZWxzZXt0aHJvdyBlfX19ZnVuY3Rpb24gQTMoQjMsQzMsRDMsRTMpe3ZhciBGMyxHMyxIMyxJMyxKMyxLMz1DMztpZih4Mz09PTIpe3JldHVybn14Mz0yO2lmKHQpe2NsZWFyVGltZW91dCh0KX1tPXU7cj1FM3x8IiI7ejMucmVhZHlTdGF0ZT1CMz4wPzQ6MDtGMz1CMz49MjAwJiZCMzwzMDB8fEIzPT09MzA0O2lmKEQzKXtJMz1WMihzLHozLEQzKX1JMz1XMihzLEkzLHozLEYzKTtpZihGMyl7aWYocy5pZk1vZGlmaWVkKXtKMz16My5nZXRSZXNwb25zZUhlYWRlcigiTGFzdC1Nb2RpZmllZCIpO2lmKEozKXtRLmxhc3RNb2RpZmllZFtqXT1KM31KMz16My5nZXRSZXNwb25zZUhlYWRlcigiZXRhZyIpO2lmKEozKXtRLmV0YWdbal09SjN9fWlmKEIzPT09MjA0fHxzLnR5cGU9PT0iSEVBRCIpe0szPSJub2NvbnRlbnQifWVsc2UgaWYoQjM9PT0zMDQpe0szPSJub3Rtb2RpZmllZCJ9ZWxzZXtLMz1JMy5zdGF0ZTtHMz1JMy5kYXRhO0gzPUkzLmVycm9yO0YzPSFIM319ZWxzZXtIMz1LMztpZihCM3x8IUszKXtLMz0iZXJyb3IiO2lmKEIzPDApe0IzPTB9fX16My5zdGF0dXM9QjM7ejMuc3RhdHVzVGV4dD0oQzN8fEszKSsiIjtpZihGMyl7czMucmVzb2x2ZVdpdGgodixbRzMsSzMsejNdKX1lbHNle3MzLnJlamVjdFdpdGgodixbejMsSzMsSDNdKX16My5zdGF0dXNDb2RlKHUzKTt1Mz11O2lmKGwpe18udHJpZ2dlcihGMz8iYWpheFN1Y2Nlc3MiOiJhamF4RXJyb3IiLFt6MyxzLEYzP0czOkgzXSl9dDMuZmlyZVdpdGgodixbejMsSzNdKTtpZihsKXtfLnRyaWdnZXIoImFqYXhDb21wbGV0ZSIsW3ozLHNdKTtpZighKC0tUS5hY3RpdmUpKXtRLmV2ZW50LnRyaWdnZXIoImFqYXhTdG9wIil9fX1yZXR1cm4gejN9LGdldEpTT046ZnVuY3Rpb24oYSxiLGkpe3JldHVybiBRLmdldChhLGIsaSwianNvbiIpfSxnZXRTY3JpcHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUS5nZXQoYSx1LGIsInNjcmlwdCIpfX0pO1EuZWFjaChbImdldCIsInBvc3QiXSxmdW5jdGlvbihpLG0pe1FbbV09ZnVuY3Rpb24oYSxiLGosdCl7aWYoUS5pc0Z1bmN0aW9uKGIpKXt0PXR8fGo7aj1iO2I9dX1yZXR1cm4gUS5hamF4KHt1cmw6YSx0eXBlOm0sZGF0YVR5cGU6dCxkYXRhOmIsc3VjY2VzczpqfSl9fSk7ZnVuY3Rpb24gVjIocyxqLHIpe3ZhciBhLGIsaSx0LGw9cy5jb250ZW50cyxtPXMuZGF0YVR5cGVzO3doaWxlKG1bMF09PT0iKiIpe20uc2hpZnQoKTtpZihiPT09dSl7Yj1zLm1pbWVUeXBlfHxqLmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LVR5cGUiKX19aWYoYil7Zm9yKHQgaW4gbCl7aWYobFt0XSYmbFt0XS50ZXN0KGIpKXttLnVuc2hpZnQodCk7YnJlYWt9fX1pZihtWzBdaW4gcil7aT1tWzBdfWVsc2V7Zm9yKHQgaW4gcil7aWYoIW1bMF18fHMuY29udmVydGVyc1t0KyIgIittWzBdXSl7aT10O2JyZWFrfWlmKCFhKXthPXR9fWk9aXx8YX1pZihpKXtpZihpIT09bVswXSl7bS51bnNoaWZ0KGkpfXJldHVybiByW2ldfX1mdW5jdGlvbiBXMihzLHIsaixpKXt2YXIgYSxiLGwsdCxwLG09e30sbj1zLmRhdGFUeXBlcy5zbGljZSgpO2lmKG5bMV0pe2ZvcihsIGluIHMuY29udmVydGVycyl7bVtsLnRvTG93ZXJDYXNlKCldPXMuY29udmVydGVyc1tsXX19Yj1uLnNoaWZ0KCk7d2hpbGUoYil7aWYocy5yZXNwb25zZUZpZWxkc1tiXSl7altzLnJlc3BvbnNlRmllbGRzW2JdXT1yfWlmKCFwJiZpJiZzLmRhdGFGaWx0ZXIpe3I9cy5kYXRhRmlsdGVyKHIscy5kYXRhVHlwZSl9cD1iO2I9bi5zaGlmdCgpO2lmKGIpe2lmKGI9PT0iKiIpe2I9cH1lbHNlIGlmKHAhPT0iKiImJnAhPT1iKXtsPW1bcCsiICIrYl18fG1bIiogIitiXTtpZighbCl7Zm9yKGEgaW4gbSl7dD1hLnNwbGl0KCIgIik7aWYodFsxXT09PWIpe2w9bVtwKyIgIit0WzBdXXx8bVsiKiAiK3RbMF1dO2lmKGwpe2lmKGw9PT10cnVlKXtsPW1bYV19ZWxzZSBpZihtW2FdIT09dHJ1ZSl7Yj10WzBdO24udW5zaGlmdCh0WzFdKX1icmVha319fX1pZihsIT09dHJ1ZSl7aWYobCYmc1sidGhyb3dzIl0pe3I9bChyKX1lbHNle3RyeXtyPWwocil9Y2F0Y2goZSl7cmV0dXJue3N0YXRlOiJwYXJzZXJlcnJvciIsZXJyb3I6bD9lOiJObyBjb252ZXJzaW9uIGZyb20gIitwKyIgdG8gIitifX19fX19fXJldHVybntzdGF0ZToic3VjY2VzcyIsZGF0YTpyfX1RLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OiJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdCJ9LGNvbnRlbnRzOntzY3JpcHQ6Lyg/OmphdmF8ZWNtYSlzY3JpcHQvfSxjb252ZXJ0ZXJzOnsidGV4dCBzY3JpcHQiOmZ1bmN0aW9uKHQpe1EuZ2xvYmFsRXZhbCh0KTtyZXR1cm4gdH19fSk7US5hamF4UHJlZmlsdGVyKCJzY3JpcHQiLGZ1bmN0aW9uKHMpe2lmKHMuY2FjaGU9PT11KXtzLmNhY2hlPWZhbHNlfWlmKHMuY3Jvc3NEb21haW4pe3MudHlwZT0iR0VUIjtzLmdsb2JhbD1mYWxzZX19KTtRLmFqYXhUcmFuc3BvcnQoInNjcmlwdCIsZnVuY3Rpb24ocyl7aWYocy5jcm9zc0RvbWFpbil7dmFyIGEsYj1oLmhlYWR8fFEoImhlYWQiKVswXXx8aC5kb2N1bWVudEVsZW1lbnQ7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oXyxpKXthPWguY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5hc3luYz10cnVlO2lmKHMuc2NyaXB0Q2hhcnNldCl7YS5jaGFyc2V0PXMuc2NyaXB0Q2hhcnNldH1hLnNyYz1zLnVybDthLm9ubG9hZD1hLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbihfLGope2lmKGp8fCFhLnJlYWR5U3RhdGV8fC9sb2FkZWR8Y29tcGxldGUvLnRlc3QoYS5yZWFkeVN0YXRlKSl7YS5vbmxvYWQ9YS5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbDtpZihhLnBhcmVudE5vZGUpe2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKX1hPW51bGw7aWYoIWope2koMjAwLCJzdWNjZXNzIil9fX07Yi5pbnNlcnRCZWZvcmUoYSxiLmZpcnN0Q2hpbGQpfSxhYm9ydDpmdW5jdGlvbigpe2lmKGEpe2Eub25sb2FkKHUsdHJ1ZSl9fX19fSk7dmFyIFgyPVtdLFkyPS8oPSlcPyg/PSZ8JCl8XD9cPy87US5hamF4U2V0dXAoe2pzb25wOiJjYWxsYmFjayIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBhPVgyLnBvcCgpfHwoUS5leHBhbmRvKyJfIisoRjIrKykpO3RoaXNbYV09dHJ1ZTtyZXR1cm4gYX19KTtRLmFqYXhQcmVmaWx0ZXIoImpzb24ganNvbnAiLGZ1bmN0aW9uKHMsYSxqKXt2YXIgYixpLHIsbD1zLmpzb25wIT09ZmFsc2UmJihZMi50ZXN0KHMudXJsKT8idXJsIjp0eXBlb2Ygcy5kYXRhPT09InN0cmluZyImJiEocy5jb250ZW50VHlwZXx8IiIpLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpJiZZMi50ZXN0KHMuZGF0YSkmJiJkYXRhIik7aWYobHx8cy5kYXRhVHlwZXNbMF09PT0ianNvbnAiKXtiPXMuanNvbnBDYWxsYmFjaz1RLmlzRnVuY3Rpb24ocy5qc29ucENhbGxiYWNrKT9zLmpzb25wQ2FsbGJhY2soKTpzLmpzb25wQ2FsbGJhY2s7aWYobCl7c1tsXT1zW2xdLnJlcGxhY2UoWTIsIiQxIitiKX1lbHNlIGlmKHMuanNvbnAhPT1mYWxzZSl7cy51cmwrPShHMi50ZXN0KHMudXJsKT8iJiI6Ij8iKStzLmpzb25wKyI9IitifXMuY29udmVydGVyc1sic2NyaXB0IGpzb24iXT1mdW5jdGlvbigpe2lmKCFyKXtRLmVycm9yKGIrIiB3YXMgbm90IGNhbGxlZCIpfXJldHVybiByWzBdfTtzLmRhdGFUeXBlc1swXT0ianNvbiI7aT13W2JdO3dbYl09ZnVuY3Rpb24oKXtyPWFyZ3VtZW50c307ai5hbHdheXMoZnVuY3Rpb24oKXt3W2JdPWk7aWYoc1tiXSl7cy5qc29ucENhbGxiYWNrPWEuanNvbnBDYWxsYmFjaztYMi5wdXNoKGIpfWlmKHImJlEuaXNGdW5jdGlvbihpKSl7aShyWzBdKX1yPWk9dX0pO3JldHVybiJzY3JpcHQifX0pO3ZhciBaMiwkMixfMj0wLGEzPXcuQWN0aXZlWE9iamVjdCYmZnVuY3Rpb24oKXt2YXIgYTtmb3IoYSBpbiBaMil7WjJbYV0odSx0cnVlKX19O2Z1bmN0aW9uIGIzKCl7dHJ5e3JldHVybiBuZXcgdy5YTUxIdHRwUmVxdWVzdCgpfWNhdGNoKGUpe319ZnVuY3Rpb24gYzMoKXt0cnl7cmV0dXJuIG5ldyB3LkFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIil9Y2F0Y2goZSl7fX1RLmFqYXhTZXR0aW5ncy54aHI9dy5BY3RpdmVYT2JqZWN0P2Z1bmN0aW9uKCl7cmV0dXJuIXRoaXMuaXNMb2NhbCYmYjMoKXx8YzMoKX06YjM7JDI9US5hamF4U2V0dGluZ3MueGhyKCk7US5zdXBwb3J0LmNvcnM9ISEkMiYmKCJ3aXRoQ3JlZGVudGlhbHMiaW4gJDIpOyQyPVEuc3VwcG9ydC5hamF4PSEhJDI7aWYoJDIpe1EuYWpheFRyYW5zcG9ydChmdW5jdGlvbihzKXtpZighcy5jcm9zc0RvbWFpbnx8US5zdXBwb3J0LmNvcnMpe3ZhciBhO3JldHVybntzZW5kOmZ1bmN0aW9uKGIsail7dmFyIGwsaSxtPXMueGhyKCk7aWYocy51c2VybmFtZSl7bS5vcGVuKHMudHlwZSxzLnVybCxzLmFzeW5jLHMudXNlcm5hbWUscy5wYXNzd29yZCl9ZWxzZXttLm9wZW4ocy50eXBlLHMudXJsLHMuYXN5bmMpfWlmKHMueGhyRmllbGRzKXtmb3IoaSBpbiBzLnhockZpZWxkcyl7bVtpXT1zLnhockZpZWxkc1tpXX19aWYocy5taW1lVHlwZSYmbS5vdmVycmlkZU1pbWVUeXBlKXttLm92ZXJyaWRlTWltZVR5cGUocy5taW1lVHlwZSl9aWYoIXMuY3Jvc3NEb21haW4mJiFiWyJYLVJlcXVlc3RlZC1XaXRoIl0pe2JbIlgtUmVxdWVzdGVkLVdpdGgiXT0iWE1MSHR0cFJlcXVlc3QifXRyeXtmb3IoaSBpbiBiKXttLnNldFJlcXVlc3RIZWFkZXIoaSxiW2ldKX19Y2F0Y2gobil7fW0uc2VuZCgocy5oYXNDb250ZW50JiZzLmRhdGEpfHxudWxsKTthPWZ1bmN0aW9uKF8scCl7dmFyIHIsdCx2LHMzO3RyeXtpZihhJiYocHx8bS5yZWFkeVN0YXRlPT09NCkpe2E9dTtpZihsKXttLm9ucmVhZHlzdGF0ZWNoYW5nZT1RLm5vb3A7aWYoYTMpe2RlbGV0ZSBaMltsXX19aWYocCl7aWYobS5yZWFkeVN0YXRlIT09NCl7bS5hYm9ydCgpfX1lbHNle3MzPXt9O3I9bS5zdGF0dXM7dD1tLmdldEFsbFJlc3BvbnNlSGVhZGVycygpO2lmKHR5cGVvZiBtLnJlc3BvbnNlVGV4dD09PSJzdHJpbmciKXtzMy50ZXh0PW0ucmVzcG9uc2VUZXh0fXRyeXt2PW0uc3RhdHVzVGV4dH1jYXRjaChlKXt2PSIifWlmKCFyJiZzLmlzTG9jYWwmJiFzLmNyb3NzRG9tYWluKXtyPXMzLnRleHQ/MjAwOjQwNH1lbHNlIGlmKHI9PT0xMjIzKXtyPTIwNH19fX1jYXRjaCh0Myl7aWYoIXApe2ooLTEsdDMpfX1pZihzMyl7aihyLHYsczMsdCl9fTtpZighcy5hc3luYyl7YSgpfWVsc2UgaWYobS5yZWFkeVN0YXRlPT09NCl7c2V0VGltZW91dChhKX1lbHNle2w9KytfMjtpZihhMyl7aWYoIVoyKXtaMj17fTtRKHcpLnVubG9hZChhMyl9WjJbbF09YX1tLm9ucmVhZHlzdGF0ZWNoYW5nZT1hfX0sYWJvcnQ6ZnVuY3Rpb24oKXtpZihhKXthKHUsdHJ1ZSl9fX19fSl9dmFyIGQzLGUzLGYzPS9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxnMz1uZXcgUmVnRXhwKCJeKD86KFsrLV0pPXwpKCIrSCsiKShbYS16JV0qKSQiLCJpIiksaDM9L3F1ZXVlSG9va3MkLyxpMz1bbzNdLGozPXsiKiI6W2Z1bmN0aW9uKHAsdil7dmFyIHQ9dGhpcy5jcmVhdGVUd2VlbihwLHYpLGE9dC5jdXIoKSxiPWczLmV4ZWModiksaT1iJiZiWzNdfHwoUS5jc3NOdW1iZXJbcF0/IiI6InB4Iikscz0oUS5jc3NOdW1iZXJbcF18fGkhPT0icHgiJiYrYSkmJmczLmV4ZWMoUS5jc3ModC5lbGVtLHApKSxqPTEsbT0yMDtpZihzJiZzWzNdIT09aSl7aT1pfHxzWzNdO2I9Ynx8W107cz0rYXx8MTtkb3tqPWp8fCIuNSI7cz1zL2o7US5zdHlsZSh0LmVsZW0scCxzK2kpfXdoaWxlKGohPT0oaj10LmN1cigpL2EpJiZqIT09MSYmLS1tKX1pZihiKXtzPXQuc3RhcnQ9K3N8fCthfHwwO3QudW5pdD1pO3QuZW5kPWJbMV0/cysoYlsxXSsxKSpiWzJdOitiWzJdfXJldHVybiB0fV19O2Z1bmN0aW9uIGszKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2QzPXV9KTtyZXR1cm4oZDM9US5ub3coKSl9ZnVuY3Rpb24gbDModixwLGEpe3ZhciB0LGI9KGozW3BdfHxbXSkuY29uY2F0KGozWyIqIl0pLGk9MCxsPWIubGVuZ3RoO2Zvcig7aTxsO2krKyl7aWYoKHQ9YltpXS5jYWxsKGEscCx2KSkpe3JldHVybiB0fX19ZnVuY3Rpb24gbTMoYSxwLGIpe3ZhciByLHMsaT0wLGw9aTMubGVuZ3RoLGo9US5EZWZlcnJlZCgpLmFsd2F5cyhmdW5jdGlvbigpe2RlbGV0ZSB0LmVsZW19KSx0PWZ1bmN0aW9uKCl7aWYocyl7cmV0dXJuIGZhbHNlfXZhciB2PWQzfHxrMygpLF89TWF0aC5tYXgoMCxtLnN0YXJ0VGltZSttLmR1cmF0aW9uLXYpLHMzPV8vbS5kdXJhdGlvbnx8MCx0Mz0xLXMzLGk9MCxsPW0udHdlZW5zLmxlbmd0aDtmb3IoO2k8bDtpKyspe20udHdlZW5zW2ldLnJ1bih0Myl9ai5ub3RpZnlXaXRoKGEsW20sdDMsX10pO2lmKHQzPDEmJmwpe3JldHVybiBffWVsc2V7ai5yZXNvbHZlV2l0aChhLFttXSk7cmV0dXJuIGZhbHNlfX0sbT1qLnByb21pc2Uoe2VsZW06YSxwcm9wczpRLmV4dGVuZCh7fSxwKSxvcHRzOlEuZXh0ZW5kKHRydWUse3NwZWNpYWxFYXNpbmc6e319LGIpLG9yaWdpbmFsUHJvcGVydGllczpwLG9yaWdpbmFsT3B0aW9uczpiLHN0YXJ0VGltZTpkM3x8azMoKSxkdXJhdGlvbjpiLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbih2LF8pe3ZhciBzMz1RLlR3ZWVuKGEsbS5vcHRzLHYsXyxtLm9wdHMuc3BlY2lhbEVhc2luZ1t2XXx8bS5vcHRzLmVhc2luZyk7bS50d2VlbnMucHVzaChzMyk7cmV0dXJuIHMzfSxzdG9wOmZ1bmN0aW9uKHYpe3ZhciBpPTAsbD12P20udHdlZW5zLmxlbmd0aDowO2lmKHMpe3JldHVybiB0aGlzfXM9dHJ1ZTtmb3IoO2k8bDtpKyspe20udHdlZW5zW2ldLnJ1bigxKX1pZih2KXtqLnJlc29sdmVXaXRoKGEsW20sdl0pfWVsc2V7ai5yZWplY3RXaXRoKGEsW20sdl0pfXJldHVybiB0aGlzfX0pLG49bS5wcm9wcztuMyhuLG0ub3B0cy5zcGVjaWFsRWFzaW5nKTtmb3IoO2k8bDtpKyspe3I9aTNbaV0uY2FsbChtLGEsbixtLm9wdHMpO2lmKHIpe3JldHVybiByfX1RLm1hcChuLGwzLG0pO2lmKFEuaXNGdW5jdGlvbihtLm9wdHMuc3RhcnQpKXttLm9wdHMuc3RhcnQuY2FsbChhLG0pfVEuZngudGltZXIoUS5leHRlbmQodCx7ZWxlbTphLGFuaW06bSxxdWV1ZTptLm9wdHMucXVldWV9KSk7cmV0dXJuIG0ucHJvZ3Jlc3MobS5vcHRzLnByb2dyZXNzKS5kb25lKG0ub3B0cy5kb25lLG0ub3B0cy5jb21wbGV0ZSkuZmFpbChtLm9wdHMuZmFpbCkuYWx3YXlzKG0ub3B0cy5hbHdheXMpfWZ1bmN0aW9uIG4zKHAscyl7dmFyIGksbixhLHYsYjtmb3IoaSBpbiBwKXtuPVEuY2FtZWxDYXNlKGkpO2E9c1tuXTt2PXBbaV07aWYoUS5pc0FycmF5KHYpKXthPXZbMV07dj1wW2ldPXZbMF19aWYoaSE9PW4pe3Bbbl09djtkZWxldGUgcFtpXX1iPVEuY3NzSG9va3Nbbl07aWYoYiYmImV4cGFuZCJpbiBiKXt2PWIuZXhwYW5kKHYpO2RlbGV0ZSBwW25dO2ZvcihpIGluIHYpe2lmKCEoaSBpbiBwKSl7cFtpXT12W2ldO3NbaV09YX19fWVsc2V7c1tuXT1hfX19US5BbmltYXRpb249US5leHRlbmQobTMse3R3ZWVuZXI6ZnVuY3Rpb24ocCxhKXtpZihRLmlzRnVuY3Rpb24ocCkpe2E9cDtwPVsiKiJdfWVsc2V7cD1wLnNwbGl0KCIgIil9dmFyIGIsaT0wLGw9cC5sZW5ndGg7Zm9yKDtpPGw7aSsrKXtiPXBbaV07ajNbYl09ajNbYl18fFtdO2ozW2JdLnVuc2hpZnQoYSl9fSxwcmVmaWx0ZXI6ZnVuY3Rpb24oYSxwKXtpZihwKXtpMy51bnNoaWZ0KGEpfWVsc2V7aTMucHVzaChhKX19fSk7ZnVuY3Rpb24gbzMoYSxwLGIpe3ZhciBpLHYsdCxqLGwsbSxuPXRoaXMscj17fSxzPWEuc3R5bGUsXz1hLm5vZGVUeXBlJiZxMihhKSxzMz1RLl9kYXRhKGEsImZ4c2hvdyIpO2lmKCFiLnF1ZXVlKXtsPVEuX3F1ZXVlSG9va3MoYSwiZngiKTtpZihsLnVucXVldWVkPT1udWxsKXtsLnVucXVldWVkPTA7bT1sLmVtcHR5LmZpcmU7bC5lbXB0eS5maXJlPWZ1bmN0aW9uKCl7aWYoIWwudW5xdWV1ZWQpe20oKX19fWwudW5xdWV1ZWQrKztuLmFsd2F5cyhmdW5jdGlvbigpe24uYWx3YXlzKGZ1bmN0aW9uKCl7bC51bnF1ZXVlZC0tO2lmKCFRLnF1ZXVlKGEsImZ4IikubGVuZ3RoKXtsLmVtcHR5LmZpcmUoKX19KX0pfWlmKGEubm9kZVR5cGU9PT0xJiYoImhlaWdodCJpbiBwfHwid2lkdGgiaW4gcCkpe2Iub3ZlcmZsb3c9W3Mub3ZlcmZsb3cscy5vdmVyZmxvd1gscy5vdmVyZmxvd1ldO2lmKFEuY3NzKGEsImRpc3BsYXkiKT09PSJpbmxpbmUiJiZRLmNzcyhhLCJmbG9hdCIpPT09Im5vbmUiKXtpZighUS5zdXBwb3J0LmlubGluZUJsb2NrTmVlZHNMYXlvdXR8fHYyKGEubm9kZU5hbWUpPT09ImlubGluZSIpe3MuZGlzcGxheT0iaW5saW5lLWJsb2NrIn1lbHNle3Muem9vbT0xfX19aWYoYi5vdmVyZmxvdyl7cy5vdmVyZmxvdz0iaGlkZGVuIjtpZighUS5zdXBwb3J0LnNocmlua1dyYXBCbG9ja3Mpe24uYWx3YXlzKGZ1bmN0aW9uKCl7cy5vdmVyZmxvdz1iLm92ZXJmbG93WzBdO3Mub3ZlcmZsb3dYPWIub3ZlcmZsb3dbMV07cy5vdmVyZmxvd1k9Yi5vdmVyZmxvd1syXX0pfX1mb3IoaSBpbiBwKXt2PXBbaV07aWYoZjMuZXhlYyh2KSl7ZGVsZXRlIHBbaV07dD10fHx2PT09InRvZ2dsZSI7aWYodj09PShfPyJoaWRlIjoic2hvdyIpKXtjb250aW51ZX1yW2ldPXMzJiZzM1tpXXx8US5zdHlsZShhLGkpfX1pZighUS5pc0VtcHR5T2JqZWN0KHIpKXtpZihzMyl7aWYoImhpZGRlbiJpbiBzMyl7Xz1zMy5oaWRkZW59fWVsc2V7czM9US5fZGF0YShhLCJmeHNob3ciLHt9KX1pZih0KXtzMy5oaWRkZW49IV99aWYoXyl7UShhKS5zaG93KCl9ZWxzZXtuLmRvbmUoZnVuY3Rpb24oKXtRKGEpLmhpZGUoKX0pfW4uZG9uZShmdW5jdGlvbigpe3ZhciBpO1EuX3JlbW92ZURhdGEoYSwiZnhzaG93Iik7Zm9yKGkgaW4gcil7US5zdHlsZShhLGkscltpXSl9fSk7Zm9yKGkgaW4gcil7aj1sMyhfP3MzW2ldOjAsaSxuKTtpZighKGkgaW4gczMpKXtzM1tpXT1qLnN0YXJ0O2lmKF8pe2ouZW5kPWouc3RhcnQ7ai5zdGFydD1pPT09IndpZHRoInx8aT09PSJoZWlnaHQiPzE6MH19fX19ZnVuY3Rpb24gcDMoYSxiLHAsaSxqKXtyZXR1cm4gbmV3IHAzLnByb3RvdHlwZS5pbml0KGEsYixwLGksail9US5Ud2Vlbj1wMztwMy5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnAzLGluaXQ6ZnVuY3Rpb24oYSxiLHAsaSxqLGwpe3RoaXMuZWxlbT1hO3RoaXMucHJvcD1wO3RoaXMuZWFzaW5nPWp8fCJzd2luZyI7dGhpcy5vcHRpb25zPWI7dGhpcy5zdGFydD10aGlzLm5vdz10aGlzLmN1cigpO3RoaXMuZW5kPWk7dGhpcy51bml0PWx8fChRLmNzc051bWJlcltwXT8iIjoicHgiKX0sY3VyOmZ1bmN0aW9uKCl7dmFyIGE9cDMucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIGEmJmEuZ2V0P2EuZ2V0KHRoaXMpOnAzLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbihwKXt2YXIgYSxiPXAzLnByb3BIb29rc1t0aGlzLnByb3BdO2lmKHRoaXMub3B0aW9ucy5kdXJhdGlvbil7dGhpcy5wb3M9YT1RLmVhc2luZ1t0aGlzLmVhc2luZ10ocCx0aGlzLm9wdGlvbnMuZHVyYXRpb24qcCwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKX1lbHNle3RoaXMucG9zPWE9cH10aGlzLm5vdz0odGhpcy5lbmQtdGhpcy5zdGFydCkqYSt0aGlzLnN0YXJ0O2lmKHRoaXMub3B0aW9ucy5zdGVwKXt0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKHRoaXMuZWxlbSx0aGlzLm5vdyx0aGlzKX1pZihiJiZiLnNldCl7Yi5zZXQodGhpcyl9ZWxzZXtwMy5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KHRoaXMpfXJldHVybiB0aGlzfX07cDMucHJvdG90eXBlLmluaXQucHJvdG90eXBlPXAzLnByb3RvdHlwZTtwMy5wcm9wSG9va3M9e19kZWZhdWx0OntnZXQ6ZnVuY3Rpb24odCl7dmFyIHI7aWYodC5lbGVtW3QucHJvcF0hPW51bGwmJighdC5lbGVtLnN0eWxlfHx0LmVsZW0uc3R5bGVbdC5wcm9wXT09bnVsbCkpe3JldHVybiB0LmVsZW1bdC5wcm9wXX1yPVEuY3NzKHQuZWxlbSx0LnByb3AsIiIpO3JldHVybiFyfHxyPT09ImF1dG8iPzA6cn0sc2V0OmZ1bmN0aW9uKHQpe2lmKFEuZnguc3RlcFt0LnByb3BdKXtRLmZ4LnN0ZXBbdC5wcm9wXSh0KX1lbHNlIGlmKHQuZWxlbS5zdHlsZSYmKHQuZWxlbS5zdHlsZVtRLmNzc1Byb3BzW3QucHJvcF1dIT1udWxsfHxRLmNzc0hvb2tzW3QucHJvcF0pKXtRLnN0eWxlKHQuZWxlbSx0LnByb3AsdC5ub3crdC51bml0KX1lbHNle3QuZWxlbVt0LnByb3BdPXQubm93fX19fTtwMy5wcm9wSG9va3Muc2Nyb2xsVG9wPXAzLnByb3BIb29rcy5zY3JvbGxMZWZ0PXtzZXQ6ZnVuY3Rpb24odCl7aWYodC5lbGVtLm5vZGVUeXBlJiZ0LmVsZW0ucGFyZW50Tm9kZSl7dC5lbGVtW3QucHJvcF09dC5ub3d9fX07US5lYWNoKFsidG9nZ2xlIiwic2hvdyIsImhpZGUiXSxmdW5jdGlvbihpLG4pe3ZhciBhPVEuZm5bbl07US5mbltuXT1mdW5jdGlvbihzLGIsail7cmV0dXJuIHM9PW51bGx8fHR5cGVvZiBzPT09ImJvb2xlYW4iP2EuYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuYW5pbWF0ZShxMyhuLHRydWUpLHMsYixqKX19KTtRLmZuLmV4dGVuZCh7ZmFkZVRvOmZ1bmN0aW9uKHMsdCxhLGIpe3JldHVybiB0aGlzLmZpbHRlcihxMikuY3NzKCJvcGFjaXR5IiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0ZSh7b3BhY2l0eTp0fSxzLGEsYil9LGFuaW1hdGU6ZnVuY3Rpb24ocCxzLGEsYil7dmFyIGk9US5pc0VtcHR5T2JqZWN0KHApLGo9US5zcGVlZChzLGEsYiksbD1mdW5jdGlvbigpe3ZhciBtPW0zKHRoaXMsUS5leHRlbmQoe30scCksaik7aWYoaXx8US5fZGF0YSh0aGlzLCJmaW5pc2giKSl7bS5zdG9wKHRydWUpfX07bC5maW5pc2g9bDtyZXR1cm4gaXx8ai5xdWV1ZT09PWZhbHNlP3RoaXMuZWFjaChsKTp0aGlzLnF1ZXVlKGoucXVldWUsbCl9LHN0b3A6ZnVuY3Rpb24odCxhLGIpe3ZhciBzPWZ1bmN0aW9uKGkpe3ZhciBqPWkuc3RvcDtkZWxldGUgaS5zdG9wO2ooYil9O2lmKHR5cGVvZiB0IT09InN0cmluZyIpe2I9YTthPXQ7dD11fWlmKGEmJnQhPT1mYWxzZSl7dGhpcy5xdWV1ZSh0fHwiZngiLFtdKX1yZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9dHJ1ZSxqPXQhPW51bGwmJnQrInF1ZXVlSG9va3MiLGw9US50aW1lcnMsbT1RLl9kYXRhKHRoaXMpO2lmKGope2lmKG1bal0mJm1bal0uc3RvcCl7cyhtW2pdKX19ZWxzZXtmb3IoaiBpbiBtKXtpZihtW2pdJiZtW2pdLnN0b3AmJmgzLnRlc3Qoaikpe3MobVtqXSl9fX1mb3Ioaj1sLmxlbmd0aDtqLS07KXtpZihsW2pdLmVsZW09PT10aGlzJiYodD09bnVsbHx8bFtqXS5xdWV1ZT09PXQpKXtsW2pdLmFuaW0uc3RvcChiKTtpPWZhbHNlO2wuc3BsaWNlKGosMSl9fWlmKGl8fCFiKXtRLmRlcXVldWUodGhpcyx0KX19KX0sZmluaXNoOmZ1bmN0aW9uKHQpe2lmKHQhPT1mYWxzZSl7dD10fHwiZngifXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgaSxhPVEuX2RhdGEodGhpcyksYj1hW3QrInF1ZXVlIl0saj1hW3QrInF1ZXVlSG9va3MiXSxsPVEudGltZXJzLG09Yj9iLmxlbmd0aDowO2EuZmluaXNoPXRydWU7US5xdWV1ZSh0aGlzLHQsW10pO2lmKGomJmouc3RvcCl7ai5zdG9wLmNhbGwodGhpcyx0cnVlKX1mb3IoaT1sLmxlbmd0aDtpLS07KXtpZihsW2ldLmVsZW09PT10aGlzJiZsW2ldLnF1ZXVlPT09dCl7bFtpXS5hbmltLnN0b3AodHJ1ZSk7bC5zcGxpY2UoaSwxKX19Zm9yKGk9MDtpPG07aSsrKXtpZihiW2ldJiZiW2ldLmZpbmlzaCl7YltpXS5maW5pc2guY2FsbCh0aGlzKX19ZGVsZXRlIGEuZmluaXNofSl9fSk7ZnVuY3Rpb24gcTModCxhKXt2YXIgYixqPXtoZWlnaHQ6dH0saT0wO2E9YT8xOjA7Zm9yKDtpPDQ7aSs9Mi1hKXtiPW4yW2ldO2pbIm1hcmdpbiIrYl09alsicGFkZGluZyIrYl09dH1pZihhKXtqLm9wYWNpdHk9ai53aWR0aD10fXJldHVybiBqfVEuZWFjaCh7c2xpZGVEb3duOnEzKCJzaG93Iiksc2xpZGVVcDpxMygiaGlkZSIpLHNsaWRlVG9nZ2xlOnEzKCJ0b2dnbGUiKSxmYWRlSW46e29wYWNpdHk6InNob3cifSxmYWRlT3V0OntvcGFjaXR5OiJoaWRlIn0sZmFkZVRvZ2dsZTp7b3BhY2l0eToidG9nZ2xlIn19LGZ1bmN0aW9uKG4scCl7US5mbltuXT1mdW5jdGlvbihzLGEsYil7cmV0dXJuIHRoaXMuYW5pbWF0ZShwLHMsYSxiKX19KTtRLnNwZWVkPWZ1bmN0aW9uKHMsYSxiKXt2YXIgaT1zJiZ0eXBlb2Ygcz09PSJvYmplY3QiP1EuZXh0ZW5kKHt9LHMpOntjb21wbGV0ZTpifHwhYiYmYXx8US5pc0Z1bmN0aW9uKHMpJiZzLGR1cmF0aW9uOnMsZWFzaW5nOmImJmF8fGEmJiFRLmlzRnVuY3Rpb24oYSkmJmF9O2kuZHVyYXRpb249US5meC5vZmY/MDp0eXBlb2YgaS5kdXJhdGlvbj09PSJudW1iZXIiP2kuZHVyYXRpb246aS5kdXJhdGlvbiBpbiBRLmZ4LnNwZWVkcz9RLmZ4LnNwZWVkc1tpLmR1cmF0aW9uXTpRLmZ4LnNwZWVkcy5fZGVmYXVsdDtpZihpLnF1ZXVlPT1udWxsfHxpLnF1ZXVlPT09dHJ1ZSl7aS5xdWV1ZT0iZngifWkub2xkPWkuY29tcGxldGU7aS5jb21wbGV0ZT1mdW5jdGlvbigpe2lmKFEuaXNGdW5jdGlvbihpLm9sZCkpe2kub2xkLmNhbGwodGhpcyl9aWYoaS5xdWV1ZSl7US5kZXF1ZXVlKHRoaXMsaS5xdWV1ZSl9fTtyZXR1cm4gaX07US5lYXNpbmc9e2xpbmVhcjpmdW5jdGlvbihwKXtyZXR1cm4gcH0sc3dpbmc6ZnVuY3Rpb24ocCl7cmV0dXJuIDAuNS1NYXRoLmNvcyhwKk1hdGguUEkpLzJ9fTtRLnRpbWVycz1bXTtRLmZ4PXAzLnByb3RvdHlwZS5pbml0O1EuZngudGljaz1mdW5jdGlvbigpe3ZhciB0LGE9US50aW1lcnMsaT0wO2QzPVEubm93KCk7Zm9yKDtpPGEubGVuZ3RoO2krKyl7dD1hW2ldO2lmKCF0KCkmJmFbaV09PT10KXthLnNwbGljZShpLS0sMSl9fWlmKCFhLmxlbmd0aCl7US5meC5zdG9wKCl9ZDM9dX07US5meC50aW1lcj1mdW5jdGlvbih0KXtpZih0KCkmJlEudGltZXJzLnB1c2godCkpe1EuZnguc3RhcnQoKX19O1EuZnguaW50ZXJ2YWw9MTM7US5meC5zdGFydD1mdW5jdGlvbigpe2lmKCFlMyl7ZTM9c2V0SW50ZXJ2YWwoUS5meC50aWNrLFEuZnguaW50ZXJ2YWwpfX07US5meC5zdG9wPWZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChlMyk7ZTM9bnVsbH07US5meC5zcGVlZHM9e3Nsb3c6NjAwLGZhc3Q6MjAwLF9kZWZhdWx0OjQwMH07US5meC5zdGVwPXt9O2lmKFEuZXhwciYmUS5leHByLmZpbHRlcnMpe1EuZXhwci5maWx0ZXJzLmFuaW1hdGVkPWZ1bmN0aW9uKGEpe3JldHVybiBRLmdyZXAoUS50aW1lcnMsZnVuY3Rpb24oYil7cmV0dXJuIGE9PT1iLmVsZW19KS5sZW5ndGh9fVEuZm4ub2Zmc2V0PWZ1bmN0aW9uKGEpe2lmKGFyZ3VtZW50cy5sZW5ndGgpe3JldHVybiBhPT09dT90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihpKXtRLm9mZnNldC5zZXRPZmZzZXQodGhpcyxhLGkpfSl9dmFyIGssYixqPXt0b3A6MCxsZWZ0OjB9LGw9dGhpc1swXSxtPWwmJmwub3duZXJEb2N1bWVudDtpZighbSl7cmV0dXJufWs9bS5kb2N1bWVudEVsZW1lbnQ7aWYoIVEuY29udGFpbnMoayxsKSl7cmV0dXJuIGp9aWYodHlwZW9mIGwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0IT09Zil7aj1sLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpfWI9cjMobSk7cmV0dXJue3RvcDpqLnRvcCsoYi5wYWdlWU9mZnNldHx8ay5zY3JvbGxUb3ApLShrLmNsaWVudFRvcHx8MCksbGVmdDpqLmxlZnQrKGIucGFnZVhPZmZzZXR8fGsuc2Nyb2xsTGVmdCktKGsuY2xpZW50TGVmdHx8MCl9fTtRLm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKGEsYixpKXt2YXIgcD1RLmNzcyhhLCJwb3NpdGlvbiIpO2lmKHA9PT0ic3RhdGljIil7YS5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUifXZhciBqPVEoYSksbD1qLm9mZnNldCgpLG09US5jc3MoYSwidG9wIiksbj1RLmNzcyhhLCJsZWZ0Iikscj0ocD09PSJhYnNvbHV0ZSJ8fHA9PT0iZml4ZWQiKSYmUS5pbkFycmF5KCJhdXRvIixbbSxuXSk+LTEscz17fSx0PXt9LHYsXztpZihyKXt0PWoucG9zaXRpb24oKTt2PXQudG9wO189dC5sZWZ0fWVsc2V7dj1wYXJzZUZsb2F0KG0pfHwwO189cGFyc2VGbG9hdChuKXx8MH1pZihRLmlzRnVuY3Rpb24oYikpe2I9Yi5jYWxsKGEsaSxsKX1pZihiLnRvcCE9bnVsbCl7cy50b3A9KGIudG9wLWwudG9wKSt2fWlmKGIubGVmdCE9bnVsbCl7cy5sZWZ0PShiLmxlZnQtbC5sZWZ0KStffWlmKCJ1c2luZyJpbiBiKXtiLnVzaW5nLmNhbGwoYSxzKX1lbHNle2ouY3NzKHMpfX19O1EuZm4uZXh0ZW5kKHtwb3NpdGlvbjpmdW5jdGlvbigpe2lmKCF0aGlzWzBdKXtyZXR1cm59dmFyIGEsYixwPXt0b3A6MCxsZWZ0OjB9LGk9dGhpc1swXTtpZihRLmNzcyhpLCJwb3NpdGlvbiIpPT09ImZpeGVkIil7Yj1pLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpfWVsc2V7YT10aGlzLm9mZnNldFBhcmVudCgpO2I9dGhpcy5vZmZzZXQoKTtpZighUS5ub2RlTmFtZShhWzBdLCJodG1sIikpe3A9YS5vZmZzZXQoKX1wLnRvcCs9US5jc3MoYVswXSwiYm9yZGVyVG9wV2lkdGgiLHRydWUpO3AubGVmdCs9US5jc3MoYVswXSwiYm9yZGVyTGVmdFdpZHRoIix0cnVlKX1yZXR1cm57dG9wOmIudG9wLXAudG9wLVEuY3NzKGksIm1hcmdpblRvcCIsdHJ1ZSksbGVmdDpiLmxlZnQtcC5sZWZ0LVEuY3NzKGksIm1hcmdpbkxlZnQiLHRydWUpfX0sb2Zmc2V0UGFyZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5vZmZzZXRQYXJlbnR8fGs7d2hpbGUoYSYmKCFRLm5vZGVOYW1lKGEsImh0bWwiKSYmUS5jc3MoYSwicG9zaXRpb24iKT09PSJzdGF0aWMiKSl7YT1hLm9mZnNldFBhcmVudH1yZXR1cm4gYXx8a30pfX0pO1EuZWFjaCh7c2Nyb2xsTGVmdDoicGFnZVhPZmZzZXQiLHNjcm9sbFRvcDoicGFnZVlPZmZzZXQifSxmdW5jdGlvbihtLHApe3ZhciB0PS9ZLy50ZXN0KHApO1EuZm5bbV09ZnVuY3Rpb24odil7cmV0dXJuIFEuYWNjZXNzKHRoaXMsZnVuY3Rpb24oYSxtLHYpe3ZhciBiPXIzKGEpO2lmKHY9PT11KXtyZXR1cm4gYj8ocCBpbiBiKT9iW3BdOmIuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50W21dOmFbbV19aWYoYil7Yi5zY3JvbGxUbyghdD92OlEoYikuc2Nyb2xsTGVmdCgpLHQ/djpRKGIpLnNjcm9sbFRvcCgpKX1lbHNle2FbbV09dn19LG0sdixhcmd1bWVudHMubGVuZ3RoLG51bGwpfX0pO2Z1bmN0aW9uIHIzKGEpe3JldHVybiBRLmlzV2luZG93KGEpP2E6YS5ub2RlVHlwZT09PTk/YS5kZWZhdWx0Vmlld3x8YS5wYXJlbnRXaW5kb3c6ZmFsc2V9US5lYWNoKHtIZWlnaHQ6ImhlaWdodCIsV2lkdGg6IndpZHRoIn0sZnVuY3Rpb24obix0KXtRLmVhY2goe3BhZGRpbmc6ImlubmVyIituLGNvbnRlbnQ6dCwiIjoib3V0ZXIiK259LGZ1bmN0aW9uKGEsYil7US5mbltiXT1mdW5jdGlvbihtLHYpe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGgmJihhfHx0eXBlb2YgbSE9PSJib29sZWFuIiksaj1hfHwobT09PXRydWV8fHY9PT10cnVlPyJtYXJnaW4iOiJib3JkZXIiKTtyZXR1cm4gUS5hY2Nlc3ModGhpcyxmdW5jdGlvbihsLHQsdil7dmFyIHA7aWYoUS5pc1dpbmRvdyhsKSl7cmV0dXJuIGwuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyJjbGllbnQiK25dfWlmKGwubm9kZVR5cGU9PT05KXtwPWwuZG9jdW1lbnRFbGVtZW50O3JldHVybiBNYXRoLm1heChsLmJvZHlbInNjcm9sbCIrbl0scFsic2Nyb2xsIituXSxsLmJvZHlbIm9mZnNldCIrbl0scFsib2Zmc2V0IituXSxwWyJjbGllbnQiK25dKX1yZXR1cm4gdj09PXU/US5jc3MobCx0LGopOlEuc3R5bGUobCx0LHYsail9LHQsaT9tOnUsaSxudWxsKX19KX0pO1EuZm4uc2l6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aH07US5mbi5hbmRTZWxmPVEuZm4uYWRkQmFjaztpZih0eXBlb2YgbW9kdWxlPT09Im9iamVjdCImJm1vZHVsZSYmdHlwZW9mIG1vZHVsZS5leHBvcnRzPT09Im9iamVjdCIpe21vZHVsZS5leHBvcnRzPVF9ZWxzZXt3LmpRdWVyeT13LiQ9UTtpZih0eXBlb2YgZGVmaW5lPT09ImZ1bmN0aW9uIiYmZGVmaW5lLmFtZCl7ZGVmaW5lKCJqcXVlcnkiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIFF9KX19fSkod2luZG93KTsNCi8qIQogKiBqUXVlcnkgVUkgQ29yZSAxLjEwLjQKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgMjAxNCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jYXRlZ29yeS91aS1jb3JlLwogKi8NCihmdW5jdGlvbigkLHUpe3ZhciBiPTAscj0vXnVpLWlkLVxkKyQvOyQudWk9JC51aXx8e307JC5leHRlbmQoJC51aSx7dmVyc2lvbjoiMS4xMC40IixrZXlDb2RlOntCQUNLU1BBQ0U6OCxDT01NQToxODgsREVMRVRFOjQ2LERPV046NDAsRU5EOjM1LEVOVEVSOjEzLEVTQ0FQRToyNyxIT01FOjM2LExFRlQ6MzcsTlVNUEFEX0FERDoxMDcsTlVNUEFEX0RFQ0lNQUw6MTEwLE5VTVBBRF9ESVZJREU6MTExLE5VTVBBRF9FTlRFUjoxMDgsTlVNUEFEX01VTFRJUExZOjEwNixOVU1QQURfU1VCVFJBQ1Q6MTA5LFBBR0VfRE9XTjozNCxQQUdFX1VQOjMzLFBFUklPRDoxOTAsUklHSFQ6MzksU1BBQ0U6MzIsVEFCOjksVVA6Mzh9fSk7JC5mbi5leHRlbmQoe2ZvY3VzOihmdW5jdGlvbihvKXtyZXR1cm4gZnVuY3Rpb24oZCxhKXtyZXR1cm4gdHlwZW9mIGQ9PT0ibnVtYmVyIj90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXskKGUpLmZvY3VzKCk7aWYoYSl7YS5jYWxsKGUpfX0sZCl9KTpvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KSgkLmZuLmZvY3VzKSxzY3JvbGxQYXJlbnQ6ZnVuY3Rpb24oKXt2YXIgcztpZigoJC51aS5pZSYmKC8oc3RhdGljfHJlbGF0aXZlKS8pLnRlc3QodGhpcy5jc3MoInBvc2l0aW9uIikpKXx8KC9hYnNvbHV0ZS8pLnRlc3QodGhpcy5jc3MoInBvc2l0aW9uIikpKXtzPXRoaXMucGFyZW50cygpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybigvKHJlbGF0aXZlfGFic29sdXRlfGZpeGVkKS8pLnRlc3QoJC5jc3ModGhpcywicG9zaXRpb24iKSkmJigvKGF1dG98c2Nyb2xsKS8pLnRlc3QoJC5jc3ModGhpcywib3ZlcmZsb3ciKSskLmNzcyh0aGlzLCJvdmVyZmxvdy15IikrJC5jc3ModGhpcywib3ZlcmZsb3cteCIpKX0pLmVxKDApfWVsc2V7cz10aGlzLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4oLyhhdXRvfHNjcm9sbCkvKS50ZXN0KCQuY3NzKHRoaXMsIm92ZXJmbG93IikrJC5jc3ModGhpcywib3ZlcmZsb3cteSIpKyQuY3NzKHRoaXMsIm92ZXJmbG93LXgiKSl9KS5lcSgwKX1yZXR1cm4oL2ZpeGVkLykudGVzdCh0aGlzLmNzcygicG9zaXRpb24iKSl8fCFzLmxlbmd0aD8kKGRvY3VtZW50KTpzfSx6SW5kZXg6ZnVuY3Rpb24oeil7aWYoeiE9PXUpe3JldHVybiB0aGlzLmNzcygiekluZGV4Iix6KX1pZih0aGlzLmxlbmd0aCl7dmFyIGU9JCh0aGlzWzBdKSxwLGE7d2hpbGUoZS5sZW5ndGgmJmVbMF0hPT1kb2N1bWVudCl7cD1lLmNzcygicG9zaXRpb24iKTtpZihwPT09ImFic29sdXRlInx8cD09PSJyZWxhdGl2ZSJ8fHA9PT0iZml4ZWQiKXthPXBhcnNlSW50KGUuY3NzKCJ6SW5kZXgiKSwxMCk7aWYoIWlzTmFOKGEpJiZhIT09MCl7cmV0dXJuIGF9fWU9ZS5wYXJlbnQoKX19cmV0dXJuIDB9LHVuaXF1ZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2lmKCF0aGlzLmlkKXt0aGlzLmlkPSJ1aS1pZC0iKygrK2IpfX0pfSxyZW1vdmVVbmlxdWVJZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtpZihyLnRlc3QodGhpcy5pZCkpeyQodGhpcykucmVtb3ZlQXR0cigiaWQiKX19KX19KTtmdW5jdGlvbiBmKGUsaSl7dmFyIG0sYSxjLG49ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKCJhcmVhIj09PW4pe209ZS5wYXJlbnROb2RlO2E9bS5uYW1lO2lmKCFlLmhyZWZ8fCFhfHxtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPT0ibWFwIil7cmV0dXJuIGZhbHNlfWM9JCgiaW1nW3VzZW1hcD0jIithKyJdIilbMF07cmV0dXJuISFjJiZ2KGMpfXJldHVybigvaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QvLnRlc3Qobik/IWUuZGlzYWJsZWQ6ImEiPT09bj9lLmhyZWZ8fGk6aSkmJnYoZSl9ZnVuY3Rpb24gdihlKXtyZXR1cm4gJC5leHByLmZpbHRlcnMudmlzaWJsZShlKSYmISQoZSkucGFyZW50cygpLmFkZEJhY2soKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gJC5jc3ModGhpcywidmlzaWJpbGl0eSIpPT09ImhpZGRlbiJ9KS5sZW5ndGh9JC5leHRlbmQoJC5leHByWyI6Il0se2RhdGE6JC5leHByLmNyZWF0ZVBzZXVkbz8kLmV4cHIuY3JlYXRlUHNldWRvKGZ1bmN0aW9uKGQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4hISQuZGF0YShlLGQpfX0pOmZ1bmN0aW9uKGUsaSxtKXtyZXR1cm4hISQuZGF0YShlLG1bM10pfSxmb2N1c2FibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoZSwhaXNOYU4oJC5hdHRyKGUsInRhYmluZGV4IikpKX0sdGFiYmFibGU6ZnVuY3Rpb24oZSl7dmFyIHQ9JC5hdHRyKGUsInRhYmluZGV4IiksaT1pc05hTih0KTtyZXR1cm4oaXx8dD49MCkmJmYoZSwhaSl9fSk7aWYoISQoIjxhPiIpLm91dGVyV2lkdGgoMSkuanF1ZXJ5KXskLmVhY2goWyJXaWR0aCIsIkhlaWdodCJdLGZ1bmN0aW9uKGksbil7dmFyIHM9bj09PSJXaWR0aCI/WyJMZWZ0IiwiUmlnaHQiXTpbIlRvcCIsIkJvdHRvbSJdLHQ9bi50b0xvd2VyQ2FzZSgpLG89e2lubmVyV2lkdGg6JC5mbi5pbm5lcldpZHRoLGlubmVySGVpZ2h0OiQuZm4uaW5uZXJIZWlnaHQsb3V0ZXJXaWR0aDokLmZuLm91dGVyV2lkdGgsb3V0ZXJIZWlnaHQ6JC5mbi5vdXRlckhlaWdodH07ZnVuY3Rpb24gYShlLGMsZCxtKXskLmVhY2gocyxmdW5jdGlvbigpe2MtPXBhcnNlRmxvYXQoJC5jc3MoZSwicGFkZGluZyIrdGhpcykpfHwwO2lmKGQpe2MtPXBhcnNlRmxvYXQoJC5jc3MoZSwiYm9yZGVyIit0aGlzKyJXaWR0aCIpKXx8MH1pZihtKXtjLT1wYXJzZUZsb2F0KCQuY3NzKGUsIm1hcmdpbiIrdGhpcykpfHwwfX0pO3JldHVybiBjfSQuZm5bImlubmVyIituXT1mdW5jdGlvbihjKXtpZihjPT09dSl7cmV0dXJuIG9bImlubmVyIituXS5jYWxsKHRoaXMpfXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXskKHRoaXMpLmNzcyh0LGEodGhpcyxjKSsicHgiKX0pfTskLmZuWyJvdXRlciIrbl09ZnVuY3Rpb24oYyxtKXtpZih0eXBlb2YgYyE9PSJudW1iZXIiKXtyZXR1cm4gb1sib3V0ZXIiK25dLmNhbGwodGhpcyxjKX1yZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7JCh0aGlzKS5jc3ModCxhKHRoaXMsYyx0cnVlLG0pKyJweCIpfSl9fSl9aWYoISQuZm4uYWRkQmFjayl7JC5mbi5hZGRCYWNrPWZ1bmN0aW9uKHMpe3JldHVybiB0aGlzLmFkZChzPT1udWxsP3RoaXMucHJldk9iamVjdDp0aGlzLnByZXZPYmplY3QuZmlsdGVyKHMpKX19aWYoJCgiPGE+IikuZGF0YSgiYS1iIiwiYSIpLnJlbW92ZURhdGEoImEtYiIpLmRhdGEoImEtYiIpKXskLmZuLnJlbW92ZURhdGE9KGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihrKXtpZihhcmd1bWVudHMubGVuZ3RoKXtyZXR1cm4gYS5jYWxsKHRoaXMsJC5jYW1lbENhc2UoaykpfWVsc2V7cmV0dXJuIGEuY2FsbCh0aGlzKX19fSkoJC5mbi5yZW1vdmVEYXRhKX0kLnVpLmllPSEhL21zaWUgW1x3Ll0rLy5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSk7JC5zdXBwb3J0LnNlbGVjdHN0YXJ0PSJvbnNlbGVjdHN0YXJ0ImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOyQuZm4uZXh0ZW5kKHtkaXNhYmxlU2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYmluZCgoJC5zdXBwb3J0LnNlbGVjdHN0YXJ0PyJzZWxlY3RzdGFydCI6Im1vdXNlZG93biIpKyIudWktZGlzYWJsZVNlbGVjdGlvbiIsZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpfSl9LGVuYWJsZVNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnVuYmluZCgiLnVpLWRpc2FibGVTZWxlY3Rpb24iKX19KTskLmV4dGVuZCgkLnVpLHtwbHVnaW46e2FkZDpmdW5jdGlvbihtLG8scyl7dmFyIGkscD0kLnVpW21dLnByb3RvdHlwZTtmb3IoaSBpbiBzKXtwLnBsdWdpbnNbaV09cC5wbHVnaW5zW2ldfHxbXTtwLnBsdWdpbnNbaV0ucHVzaChbbyxzW2ldXSl9fSxjYWxsOmZ1bmN0aW9uKGEsbixjKXt2YXIgaSxzPWEucGx1Z2luc1tuXTtpZighc3x8IWEuZWxlbWVudFswXS5wYXJlbnROb2RlfHxhLmVsZW1lbnRbMF0ucGFyZW50Tm9kZS5ub2RlVHlwZT09PTExKXtyZXR1cm59Zm9yKGk9MDtpPHMubGVuZ3RoO2krKyl7aWYoYS5vcHRpb25zW3NbaV1bMF1dKXtzW2ldWzFdLmFwcGx5KGEuZWxlbWVudCxjKX19fX0saGFzU2Nyb2xsOmZ1bmN0aW9uKGUsYSl7aWYoJChlKS5jc3MoIm92ZXJmbG93Iik9PT0iaGlkZGVuIil7cmV0dXJuIGZhbHNlfXZhciBzPShhJiZhPT09ImxlZnQiKT8ic2Nyb2xsTGVmdCI6InNjcm9sbFRvcCIsaD1mYWxzZTtpZihlW3NdPjApe3JldHVybiB0cnVlfWVbc109MTtoPShlW3NdPjApO2Vbc109MDtyZXR1cm4gaH19KX0pKGpRdWVyeSk7DQovKiEKICogalF1ZXJ5IFVJIERhdGVwaWNrZXIgMS4xMC40CiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGF0ZXBpY2tlci8KICoKICogRGVwZW5kczoKICoJanF1ZXJ5LnVpLmNvcmUuanMKICovDQooZnVuY3Rpb24oJCx1KXskLmV4dGVuZCgkLnVpLHtkYXRlcGlja2VyOnt2ZXJzaW9uOiIxLjEwLjQifX0pO3ZhciBQPSJkYXRlcGlja2VyIixjO2Z1bmN0aW9uIEQoKXt0aGlzLl9jdXJJbnN0PW51bGw7dGhpcy5fa2V5RXZlbnQ9ZmFsc2U7dGhpcy5fZGlzYWJsZWRJbnB1dHM9W107dGhpcy5fZGF0ZXBpY2tlclNob3dpbmc9ZmFsc2U7dGhpcy5faW5EaWFsb2c9ZmFsc2U7dGhpcy5fbWFpbkRpdklkPSJ1aS1kYXRlcGlja2VyLWRpdiI7dGhpcy5faW5saW5lQ2xhc3M9InVpLWRhdGVwaWNrZXItaW5saW5lIjt0aGlzLl9hcHBlbmRDbGFzcz0idWktZGF0ZXBpY2tlci1hcHBlbmQiO3RoaXMuX3RyaWdnZXJDbGFzcz0idWktZGF0ZXBpY2tlci10cmlnZ2VyIjt0aGlzLl9kaWFsb2dDbGFzcz0idWktZGF0ZXBpY2tlci1kaWFsb2ciO3RoaXMuX2Rpc2FibGVDbGFzcz0idWktZGF0ZXBpY2tlci1kaXNhYmxlZCI7dGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3M9InVpLWRhdGVwaWNrZXItdW5zZWxlY3RhYmxlIjt0aGlzLl9jdXJyZW50Q2xhc3M9InVpLWRhdGVwaWNrZXItY3VycmVudC1kYXkiO3RoaXMuX2RheU92ZXJDbGFzcz0idWktZGF0ZXBpY2tlci1kYXlzLWNlbGwtb3ZlciI7dGhpcy5yZWdpb25hbD1bXTt0aGlzLnJlZ2lvbmFsWyIiXT17Y2xvc2VUZXh0OiJEb25lIixwcmV2VGV4dDoiUHJldiIsbmV4dFRleHQ6Ik5leHQiLGN1cnJlbnRUZXh0OiJUb2RheSIsbW9udGhOYW1lczpbIkphbnVhcnkiLCJGZWJydWFyeSIsIk1hcmNoIiwiQXByaWwiLCJNYXkiLCJKdW5lIiwiSnVseSIsIkF1Z3VzdCIsIlNlcHRlbWJlciIsIk9jdG9iZXIiLCJOb3ZlbWJlciIsIkRlY2VtYmVyIl0sbW9udGhOYW1lc1Nob3J0OlsiSmFuIiwiRmViIiwiTWFyIiwiQXByIiwiTWF5IiwiSnVuIiwiSnVsIiwiQXVnIiwiU2VwIiwiT2N0IiwiTm92IiwiRGVjIl0sZGF5TmFtZXM6WyJTdW5kYXkiLCJNb25kYXkiLCJUdWVzZGF5IiwiV2VkbmVzZGF5IiwiVGh1cnNkYXkiLCJGcmlkYXkiLCJTYXR1cmRheSJdLGRheU5hbWVzU2hvcnQ6WyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSxkYXlOYW1lc01pbjpbIlN1IiwiTW8iLCJUdSIsIldlIiwiVGgiLCJGciIsIlNhIl0sd2Vla0hlYWRlcjoiV2siLGRhdGVGb3JtYXQ6Im1tL2RkL3l5IixmaXJzdERheTowLGlzUlRMOmZhbHNlLHNob3dNb250aEFmdGVyWWVhcjpmYWxzZSx5ZWFyU3VmZml4OiIifTt0aGlzLl9kZWZhdWx0cz17c2hvd09uOiJmb2N1cyIsc2hvd0FuaW06ImZhZGVJbiIsc2hvd09wdGlvbnM6e30sZGVmYXVsdERhdGU6bnVsbCxhcHBlbmRUZXh0OiIiLGJ1dHRvblRleHQ6Ii4uLiIsYnV0dG9uSW1hZ2U6IiIsYnV0dG9uSW1hZ2VPbmx5OmZhbHNlLGhpZGVJZk5vUHJldk5leHQ6ZmFsc2UsbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdDpmYWxzZSxnb3RvQ3VycmVudDpmYWxzZSxjaGFuZ2VNb250aDpmYWxzZSxjaGFuZ2VZZWFyOmZhbHNlLHllYXJSYW5nZToiYy0xMDpjKzEwIixzaG93T3RoZXJNb250aHM6ZmFsc2Usc2VsZWN0T3RoZXJNb250aHM6ZmFsc2Usc2hvd1dlZWs6ZmFsc2UsY2FsY3VsYXRlV2Vlazp0aGlzLmlzbzg2MDFXZWVrLHNob3J0WWVhckN1dG9mZjoiKzEwIixtaW5EYXRlOm51bGwsbWF4RGF0ZTpudWxsLGR1cmF0aW9uOiJmYXN0IixiZWZvcmVTaG93RGF5Om51bGwsYmVmb3JlU2hvdzpudWxsLG9uU2VsZWN0Om51bGwsb25DaGFuZ2VNb250aFllYXI6bnVsbCxvbkNsb3NlOm51bGwsbnVtYmVyT2ZNb250aHM6MSxzaG93Q3VycmVudEF0UG9zOjAsc3RlcE1vbnRoczoxLHN0ZXBCaWdNb250aHM6MTIsYWx0RmllbGQ6IiIsYWx0Rm9ybWF0OiIiLGNvbnN0cmFpbklucHV0OnRydWUsc2hvd0J1dHRvblBhbmVsOmZhbHNlLGF1dG9TaXplOmZhbHNlLGRpc2FibGVkOmZhbHNlfTskLmV4dGVuZCh0aGlzLl9kZWZhdWx0cyx0aGlzLnJlZ2lvbmFsWyIiXSk7dGhpcy5kcERpdj1kKCQoIjxkaXYgaWQ9JyIrdGhpcy5fbWFpbkRpdklkKyInIGNsYXNzPSd1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+IikpfSQuZXh0ZW5kKEQucHJvdG90eXBlLHttYXJrZXJDbGFzc05hbWU6Imhhc0RhdGVwaWNrZXIiLG1heFJvd3M6NCxfd2lkZ2V0RGF0ZXBpY2tlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRwRGl2fSxzZXREZWZhdWx0czpmdW5jdGlvbihzKXtmKHRoaXMuX2RlZmF1bHRzLHN8fHt9KTtyZXR1cm4gdGhpc30sX2F0dGFjaERhdGVwaWNrZXI6ZnVuY3Rpb24odCxzKXt2YXIgbixpLGE7bj10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aT0obj09PSJkaXYifHxuPT09InNwYW4iKTtpZighdC5pZCl7dGhpcy51dWlkKz0xO3QuaWQ9ImRwIit0aGlzLnV1aWR9YT10aGlzLl9uZXdJbnN0KCQodCksaSk7YS5zZXR0aW5ncz0kLmV4dGVuZCh7fSxzfHx7fSk7aWYobj09PSJpbnB1dCIpe3RoaXMuX2Nvbm5lY3REYXRlcGlja2VyKHQsYSl9ZWxzZSBpZihpKXt0aGlzLl9pbmxpbmVEYXRlcGlja2VyKHQsYSl9fSxfbmV3SW5zdDpmdW5jdGlvbih0LGkpe3ZhciBhPXRbMF0uaWQucmVwbGFjZSgvKFteQS1aYS16MC05X1wtXSkvZywiXFxcXCQxIik7cmV0dXJue2lkOmEsaW5wdXQ6dCxzZWxlY3RlZERheTowLHNlbGVjdGVkTW9udGg6MCxzZWxlY3RlZFllYXI6MCxkcmF3TW9udGg6MCxkcmF3WWVhcjowLGlubGluZTppLGRwRGl2OighaT90aGlzLmRwRGl2OmQoJCgiPGRpdiBjbGFzcz0nIit0aGlzLl9pbmxpbmVDbGFzcysiIHVpLWRhdGVwaWNrZXIgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeCB1aS1jb3JuZXItYWxsJz48L2Rpdj4iKSkpfX0sX2Nvbm5lY3REYXRlcGlja2VyOmZ1bmN0aW9uKHQsaSl7dmFyIGE9JCh0KTtpLmFwcGVuZD0kKFtdKTtpLnRyaWdnZXI9JChbXSk7aWYoYS5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkpe3JldHVybn10aGlzLl9hdHRhY2htZW50cyhhLGkpO2EuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmtleWRvd24odGhpcy5fZG9LZXlEb3duKS5rZXlwcmVzcyh0aGlzLl9kb0tleVByZXNzKS5rZXl1cCh0aGlzLl9kb0tleVVwKTt0aGlzLl9hdXRvU2l6ZShpKTskLmRhdGEodCxQLGkpO2lmKGkuc2V0dGluZ3MuZGlzYWJsZWQpe3RoaXMuX2Rpc2FibGVEYXRlcGlja2VyKHQpfX0sX2F0dGFjaG1lbnRzOmZ1bmN0aW9uKGksYSl7dmFyIHMsYixlLGc9dGhpcy5fZ2V0KGEsImFwcGVuZFRleHQiKSxoPXRoaXMuX2dldChhLCJpc1JUTCIpO2lmKGEuYXBwZW5kKXthLmFwcGVuZC5yZW1vdmUoKX1pZihnKXthLmFwcGVuZD0kKCI8c3BhbiBjbGFzcz0nIit0aGlzLl9hcHBlbmRDbGFzcysiJz4iK2crIjwvc3Bhbj4iKTtpW2g/ImJlZm9yZSI6ImFmdGVyIl0oYS5hcHBlbmQpfWkudW5iaW5kKCJmb2N1cyIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpO2lmKGEudHJpZ2dlcil7YS50cmlnZ2VyLnJlbW92ZSgpfXM9dGhpcy5fZ2V0KGEsInNob3dPbiIpO2lmKHM9PT0iZm9jdXMifHxzPT09ImJvdGgiKXtpLmZvY3VzKHRoaXMuX3Nob3dEYXRlcGlja2VyKX1pZihzPT09ImJ1dHRvbiJ8fHM9PT0iYm90aCIpe2I9dGhpcy5fZ2V0KGEsImJ1dHRvblRleHQiKTtlPXRoaXMuX2dldChhLCJidXR0b25JbWFnZSIpO2EudHJpZ2dlcj0kKHRoaXMuX2dldChhLCJidXR0b25JbWFnZU9ubHkiKT8kKCI8aW1nLz4iKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLmF0dHIoe3NyYzplLGFsdDpiLHRpdGxlOmJ9KTokKCI8YnV0dG9uIHR5cGU9J2J1dHRvbic+PC9idXR0b24+IikuYWRkQ2xhc3ModGhpcy5fdHJpZ2dlckNsYXNzKS5odG1sKCFlP2I6JCgiPGltZy8+IikuYXR0cih7c3JjOmUsYWx0OmIsdGl0bGU6Yn0pKSk7aVtoPyJiZWZvcmUiOiJhZnRlciJdKGEudHJpZ2dlcik7YS50cmlnZ2VyLmNsaWNrKGZ1bmN0aW9uKCl7aWYoJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQ9PT1pWzBdKXskLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCl9ZWxzZSBpZigkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiYkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCE9PWlbMF0peyQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTskLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKGlbMF0pfWVsc2V7JC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihpWzBdKX1yZXR1cm4gZmFsc2V9KX19LF9hdXRvU2l6ZTpmdW5jdGlvbihhKXtpZih0aGlzLl9nZXQoYSwiYXV0b1NpemUiKSYmIWEuaW5saW5lKXt2YXIgYixtLGUsaSxnPW5ldyBEYXRlKDIwMDksMTItMSwyMCksaD10aGlzLl9nZXQoYSwiZGF0ZUZvcm1hdCIpO2lmKGgubWF0Y2goL1tETV0vKSl7Yj1mdW5jdGlvbihuKXttPTA7ZT0wO2ZvcihpPTA7aTxuLmxlbmd0aDtpKyspe2lmKG5baV0ubGVuZ3RoPm0pe209bltpXS5sZW5ndGg7ZT1pfX1yZXR1cm4gZX07Zy5zZXRNb250aChiKHRoaXMuX2dldChhLChoLm1hdGNoKC9NTS8pPyJtb250aE5hbWVzIjoibW9udGhOYW1lc1Nob3J0IikpKSk7Zy5zZXREYXRlKGIodGhpcy5fZ2V0KGEsKGgubWF0Y2goL0RELyk/ImRheU5hbWVzIjoiZGF5TmFtZXNTaG9ydCIpKSkrMjAtZy5nZXREYXkoKSl9YS5pbnB1dC5hdHRyKCJzaXplIix0aGlzLl9mb3JtYXREYXRlKGEsZykubGVuZ3RoKX19LF9pbmxpbmVEYXRlcGlja2VyOmZ1bmN0aW9uKHQsaSl7dmFyIGE9JCh0KTtpZihhLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSl7cmV0dXJufWEuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmFwcGVuZChpLmRwRGl2KTskLmRhdGEodCxQLGkpO3RoaXMuX3NldERhdGUoaSx0aGlzLl9nZXREZWZhdWx0RGF0ZShpKSx0cnVlKTt0aGlzLl91cGRhdGVEYXRlcGlja2VyKGkpO3RoaXMuX3VwZGF0ZUFsdGVybmF0ZShpKTtpZihpLnNldHRpbmdzLmRpc2FibGVkKXt0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlcih0KX1pLmRwRGl2LmNzcygiZGlzcGxheSIsImJsb2NrIil9LF9kaWFsb2dEYXRlcGlja2VyOmZ1bmN0aW9uKGksYSxvLHMscCl7dmFyIGIsZSxnLGgsaixrPXRoaXMuX2RpYWxvZ0luc3Q7aWYoIWspe3RoaXMudXVpZCs9MTtiPSJkcCIrdGhpcy51dWlkO3RoaXMuX2RpYWxvZ0lucHV0PSQoIjxpbnB1dCB0eXBlPSd0ZXh0JyBpZD0nIitiKyInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4OycvPiIpO3RoaXMuX2RpYWxvZ0lucHV0LmtleWRvd24odGhpcy5fZG9LZXlEb3duKTskKCJib2R5IikuYXBwZW5kKHRoaXMuX2RpYWxvZ0lucHV0KTtrPXRoaXMuX2RpYWxvZ0luc3Q9dGhpcy5fbmV3SW5zdCh0aGlzLl9kaWFsb2dJbnB1dCxmYWxzZSk7ay5zZXR0aW5ncz17fTskLmRhdGEodGhpcy5fZGlhbG9nSW5wdXRbMF0sUCxrKX1mKGsuc2V0dGluZ3Msc3x8e30pO2E9KGEmJmEuY29uc3RydWN0b3I9PT1EYXRlP3RoaXMuX2Zvcm1hdERhdGUoayxhKTphKTt0aGlzLl9kaWFsb2dJbnB1dC52YWwoYSk7dGhpcy5fcG9zPShwPyhwLmxlbmd0aD9wOltwLnBhZ2VYLHAucGFnZVldKTpudWxsKTtpZighdGhpcy5fcG9zKXtlPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtnPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7aD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0O2o9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7dGhpcy5fcG9zPVsoZS8yKS0xMDAraCwoZy8yKS0xNTAral19dGhpcy5fZGlhbG9nSW5wdXQuY3NzKCJsZWZ0IiwodGhpcy5fcG9zWzBdKzIwKSsicHgiKS5jc3MoInRvcCIsdGhpcy5fcG9zWzFdKyJweCIpO2suc2V0dGluZ3Mub25TZWxlY3Q9bzt0aGlzLl9pbkRpYWxvZz10cnVlO3RoaXMuZHBEaXYuYWRkQ2xhc3ModGhpcy5fZGlhbG9nQ2xhc3MpO3RoaXMuX3Nob3dEYXRlcGlja2VyKHRoaXMuX2RpYWxvZ0lucHV0WzBdKTtpZigkLmJsb2NrVUkpeyQuYmxvY2tVSSh0aGlzLmRwRGl2KX0kLmRhdGEodGhpcy5fZGlhbG9nSW5wdXRbMF0sUCxrKTtyZXR1cm4gdGhpc30sX2Rlc3Ryb3lEYXRlcGlja2VyOmZ1bmN0aW9uKHQpe3ZhciBuLGE9JCh0KSxpPSQuZGF0YSh0LFApO2lmKCFhLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSl7cmV0dXJufW49dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOyQucmVtb3ZlRGF0YSh0LFApO2lmKG49PT0iaW5wdXQiKXtpLmFwcGVuZC5yZW1vdmUoKTtpLnRyaWdnZXIucmVtb3ZlKCk7YS5yZW1vdmVDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkudW5iaW5kKCJmb2N1cyIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpLnVuYmluZCgia2V5ZG93biIsdGhpcy5fZG9LZXlEb3duKS51bmJpbmQoImtleXByZXNzIix0aGlzLl9kb0tleVByZXNzKS51bmJpbmQoImtleXVwIix0aGlzLl9kb0tleVVwKX1lbHNlIGlmKG49PT0iZGl2Inx8bj09PSJzcGFuIil7YS5yZW1vdmVDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuZW1wdHkoKX19LF9lbmFibGVEYXRlcGlja2VyOmZ1bmN0aW9uKHQpe3ZhciBuLGksYT0kKHQpLGI9JC5kYXRhKHQsUCk7aWYoIWEuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpKXtyZXR1cm59bj10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYobj09PSJpbnB1dCIpe3QuZGlzYWJsZWQ9ZmFsc2U7Yi50cmlnZ2VyLmZpbHRlcigiYnV0dG9uIikuZWFjaChmdW5jdGlvbigpe3RoaXMuZGlzYWJsZWQ9ZmFsc2V9KS5lbmQoKS5maWx0ZXIoImltZyIpLmNzcyh7b3BhY2l0eToiMS4wIixjdXJzb3I6IiJ9KX1lbHNlIGlmKG49PT0iZGl2Inx8bj09PSJzcGFuIil7aT1hLmNoaWxkcmVuKCIuIit0aGlzLl9pbmxpbmVDbGFzcyk7aS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKCJ1aS1zdGF0ZS1kaXNhYmxlZCIpO2kuZmluZCgic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXIiKS5wcm9wKCJkaXNhYmxlZCIsZmFsc2UpfXRoaXMuX2Rpc2FibGVkSW5wdXRzPSQubWFwKHRoaXMuX2Rpc2FibGVkSW5wdXRzLGZ1bmN0aW9uKHYpe3JldHVybih2PT09dD9udWxsOnYpfSl9LF9kaXNhYmxlRGF0ZXBpY2tlcjpmdW5jdGlvbih0KXt2YXIgbixpLGE9JCh0KSxiPSQuZGF0YSh0LFApO2lmKCFhLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSl7cmV0dXJufW49dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKG49PT0iaW5wdXQiKXt0LmRpc2FibGVkPXRydWU7Yi50cmlnZ2VyLmZpbHRlcigiYnV0dG9uIikuZWFjaChmdW5jdGlvbigpe3RoaXMuZGlzYWJsZWQ9dHJ1ZX0pLmVuZCgpLmZpbHRlcigiaW1nIikuY3NzKHtvcGFjaXR5OiIwLjUiLGN1cnNvcjoiZGVmYXVsdCJ9KX1lbHNlIGlmKG49PT0iZGl2Inx8bj09PSJzcGFuIil7aT1hLmNoaWxkcmVuKCIuIit0aGlzLl9pbmxpbmVDbGFzcyk7aS5jaGlsZHJlbigpLmFkZENsYXNzKCJ1aS1zdGF0ZS1kaXNhYmxlZCIpO2kuZmluZCgic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXIiKS5wcm9wKCJkaXNhYmxlZCIsdHJ1ZSl9dGhpcy5fZGlzYWJsZWRJbnB1dHM9JC5tYXAodGhpcy5fZGlzYWJsZWRJbnB1dHMsZnVuY3Rpb24odil7cmV0dXJuKHY9PT10P251bGw6dil9KTt0aGlzLl9kaXNhYmxlZElucHV0c1t0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGhdPXR9LF9pc0Rpc2FibGVkRGF0ZXBpY2tlcjpmdW5jdGlvbih0KXtpZighdCl7cmV0dXJuIGZhbHNlfWZvcih2YXIgaT0wO2k8dGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoO2krKyl7aWYodGhpcy5fZGlzYWJsZWRJbnB1dHNbaV09PT10KXtyZXR1cm4gdHJ1ZX19cmV0dXJuIGZhbHNlfSxfZ2V0SW5zdDpmdW5jdGlvbih0KXt0cnl7cmV0dXJuICQuZGF0YSh0LFApfWNhdGNoKGUpe3Rocm93Ik1pc3NpbmcgaW5zdGFuY2UgZGF0YSBmb3IgdGhpcyBkYXRlcGlja2VyIn19LF9vcHRpb25EYXRlcGlja2VyOmZ1bmN0aW9uKHQsbix2KXt2YXIgcyxhLG0sYixpPXRoaXMuX2dldEluc3QodCk7aWYoYXJndW1lbnRzLmxlbmd0aD09PTImJnR5cGVvZiBuPT09InN0cmluZyIpe3JldHVybihuPT09ImRlZmF1bHRzIj8kLmV4dGVuZCh7fSwkLmRhdGVwaWNrZXIuX2RlZmF1bHRzKTooaT8obj09PSJhbGwiPyQuZXh0ZW5kKHt9LGkuc2V0dGluZ3MpOnRoaXMuX2dldChpLG4pKTpudWxsKSl9cz1ufHx7fTtpZih0eXBlb2Ygbj09PSJzdHJpbmciKXtzPXt9O3Nbbl09dn1pZihpKXtpZih0aGlzLl9jdXJJbnN0PT09aSl7dGhpcy5faGlkZURhdGVwaWNrZXIoKX1hPXRoaXMuX2dldERhdGVEYXRlcGlja2VyKHQsdHJ1ZSk7bT10aGlzLl9nZXRNaW5NYXhEYXRlKGksIm1pbiIpO2I9dGhpcy5fZ2V0TWluTWF4RGF0ZShpLCJtYXgiKTtmKGkuc2V0dGluZ3Mscyk7aWYobSE9PW51bGwmJnMuZGF0ZUZvcm1hdCE9PXUmJnMubWluRGF0ZT09PXUpe2kuc2V0dGluZ3MubWluRGF0ZT10aGlzLl9mb3JtYXREYXRlKGksbSl9aWYoYiE9PW51bGwmJnMuZGF0ZUZvcm1hdCE9PXUmJnMubWF4RGF0ZT09PXUpe2kuc2V0dGluZ3MubWF4RGF0ZT10aGlzLl9mb3JtYXREYXRlKGksYil9aWYoImRpc2FibGVkImluIHMpe2lmKHMuZGlzYWJsZWQpe3RoaXMuX2Rpc2FibGVEYXRlcGlja2VyKHQpfWVsc2V7dGhpcy5fZW5hYmxlRGF0ZXBpY2tlcih0KX19dGhpcy5fYXR0YWNobWVudHMoJCh0KSxpKTt0aGlzLl9hdXRvU2l6ZShpKTt0aGlzLl9zZXREYXRlKGksYSk7dGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGkpO3RoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaSl9fSxfY2hhbmdlRGF0ZXBpY2tlcjpmdW5jdGlvbih0LG4sdil7dGhpcy5fb3B0aW9uRGF0ZXBpY2tlcih0LG4sdil9LF9yZWZyZXNoRGF0ZXBpY2tlcjpmdW5jdGlvbih0KXt2YXIgaT10aGlzLl9nZXRJbnN0KHQpO2lmKGkpe3RoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaSl9fSxfc2V0RGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24odCxhKXt2YXIgaT10aGlzLl9nZXRJbnN0KHQpO2lmKGkpe3RoaXMuX3NldERhdGUoaSxhKTt0aGlzLl91cGRhdGVEYXRlcGlja2VyKGkpO3RoaXMuX3VwZGF0ZUFsdGVybmF0ZShpKX19LF9nZXREYXRlRGF0ZXBpY2tlcjpmdW5jdGlvbih0LG4pe3ZhciBpPXRoaXMuX2dldEluc3QodCk7aWYoaSYmIWkuaW5saW5lKXt0aGlzLl9zZXREYXRlRnJvbUZpZWxkKGksbil9cmV0dXJuKGk/dGhpcy5fZ2V0RGF0ZShpKTpudWxsKX0sX2RvS2V5RG93bjpmdW5jdGlvbihlKXt2YXIgbyxhLHMsaT0kLmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpLGg9dHJ1ZSxiPWkuZHBEaXYuaXMoIi51aS1kYXRlcGlja2VyLXJ0bCIpO2kuX2tleUV2ZW50PXRydWU7aWYoJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyl7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSA5OiQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTtoPWZhbHNlO2JyZWFrO2Nhc2UgMTM6cz0kKCJ0ZC4iKyQuZGF0ZXBpY2tlci5fZGF5T3ZlckNsYXNzKyI6bm90KC4iKyQuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzKyIpIixpLmRwRGl2KTtpZihzWzBdKXskLmRhdGVwaWNrZXIuX3NlbGVjdERheShlLnRhcmdldCxpLnNlbGVjdGVkTW9udGgsaS5zZWxlY3RlZFllYXIsc1swXSl9bz0kLmRhdGVwaWNrZXIuX2dldChpLCJvblNlbGVjdCIpO2lmKG8pe2E9JC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKGkpO28uYXBwbHkoKGkuaW5wdXQ/aS5pbnB1dFswXTpudWxsKSxbYSxpXSl9ZWxzZXskLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCl9cmV0dXJuIGZhbHNlO2Nhc2UgMjc6JC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpO2JyZWFrO2Nhc2UgMzM6JC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LChlLmN0cmxLZXk/LSQuZGF0ZXBpY2tlci5fZ2V0KGksInN0ZXBCaWdNb250aHMiKTotJC5kYXRlcGlja2VyLl9nZXQoaSwic3RlcE1vbnRocyIpKSwiTSIpO2JyZWFrO2Nhc2UgMzQ6JC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LChlLmN0cmxLZXk/KyQuZGF0ZXBpY2tlci5fZ2V0KGksInN0ZXBCaWdNb250aHMiKTorJC5kYXRlcGlja2VyLl9nZXQoaSwic3RlcE1vbnRocyIpKSwiTSIpO2JyZWFrO2Nhc2UgMzU6aWYoZS5jdHJsS2V5fHxlLm1ldGFLZXkpeyQuZGF0ZXBpY2tlci5fY2xlYXJEYXRlKGUudGFyZ2V0KX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzY6aWYoZS5jdHJsS2V5fHxlLm1ldGFLZXkpeyQuZGF0ZXBpY2tlci5fZ290b1RvZGF5KGUudGFyZ2V0KX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzc6aWYoZS5jdHJsS2V5fHxlLm1ldGFLZXkpeyQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCwoYj8rMTotMSksIkQiKX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2lmKGUub3JpZ2luYWxFdmVudC5hbHRLZXkpeyQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCwoZS5jdHJsS2V5Py0kLmRhdGVwaWNrZXIuX2dldChpLCJzdGVwQmlnTW9udGhzIik6LSQuZGF0ZXBpY2tlci5fZ2V0KGksInN0ZXBNb250aHMiKSksIk0iKX1icmVhaztjYXNlIDM4OmlmKGUuY3RybEtleXx8ZS5tZXRhS2V5KXskLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsLTcsIkQiKX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzk6aWYoZS5jdHJsS2V5fHxlLm1ldGFLZXkpeyQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCwoYj8tMTorMSksIkQiKX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2lmKGUub3JpZ2luYWxFdmVudC5hbHRLZXkpeyQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCwoZS5jdHJsS2V5PyskLmRhdGVwaWNrZXIuX2dldChpLCJzdGVwQmlnTW9udGhzIik6KyQuZGF0ZXBpY2tlci5fZ2V0KGksInN0ZXBNb250aHMiKSksIk0iKX1icmVhaztjYXNlIDQwOmlmKGUuY3RybEtleXx8ZS5tZXRhS2V5KXskLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsKzcsIkQiKX1oPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2RlZmF1bHQ6aD1mYWxzZX19ZWxzZSBpZihlLmtleUNvZGU9PT0zNiYmZS5jdHJsS2V5KXskLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKHRoaXMpfWVsc2V7aD1mYWxzZX1pZihoKXtlLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKX19LF9kb0tleVByZXNzOmZ1bmN0aW9uKGUpe3ZhciBhLGIsaT0kLmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpO2lmKCQuZGF0ZXBpY2tlci5fZ2V0KGksImNvbnN0cmFpbklucHV0Iikpe2E9JC5kYXRlcGlja2VyLl9wb3NzaWJsZUNoYXJzKCQuZGF0ZXBpY2tlci5fZ2V0KGksImRhdGVGb3JtYXQiKSk7Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKGUuY2hhckNvZGU9PW51bGw/ZS5rZXlDb2RlOmUuY2hhckNvZGUpO3JldHVybiBlLmN0cmxLZXl8fGUubWV0YUtleXx8KGI8IiAifHwhYXx8YS5pbmRleE9mKGIpPi0xKX19LF9kb0tleVVwOmZ1bmN0aW9uKGUpe3ZhciBhLGk9JC5kYXRlcGlja2VyLl9nZXRJbnN0KGUudGFyZ2V0KTtpZihpLmlucHV0LnZhbCgpIT09aS5sYXN0VmFsKXt0cnl7YT0kLmRhdGVwaWNrZXIucGFyc2VEYXRlKCQuZGF0ZXBpY2tlci5fZ2V0KGksImRhdGVGb3JtYXQiKSwoaS5pbnB1dD9pLmlucHV0LnZhbCgpOm51bGwpLCQuZGF0ZXBpY2tlci5fZ2V0Rm9ybWF0Q29uZmlnKGkpKTtpZihhKXskLmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQoaSk7JC5kYXRlcGlja2VyLl91cGRhdGVBbHRlcm5hdGUoaSk7JC5kYXRlcGlja2VyLl91cGRhdGVEYXRlcGlja2VyKGkpfX1jYXRjaChiKXt9fXJldHVybiB0cnVlfSxfc2hvd0RhdGVwaWNrZXI6ZnVuY3Rpb24oaSl7aT1pLnRhcmdldHx8aTtpZihpLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPT0iaW5wdXQiKXtpPSQoImlucHV0IixpLnBhcmVudE5vZGUpWzBdfWlmKCQuZGF0ZXBpY2tlci5faXNEaXNhYmxlZERhdGVwaWNrZXIoaSl8fCQuZGF0ZXBpY2tlci5fbGFzdElucHV0PT09aSl7cmV0dXJufXZhciBhLGIsZSxnLG8scyxoO2E9JC5kYXRlcGlja2VyLl9nZXRJbnN0KGkpO2lmKCQuZGF0ZXBpY2tlci5fY3VySW5zdCYmJC5kYXRlcGlja2VyLl9jdXJJbnN0IT09YSl7JC5kYXRlcGlja2VyLl9jdXJJbnN0LmRwRGl2LnN0b3AodHJ1ZSx0cnVlKTtpZihhJiYkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nKXskLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCQuZGF0ZXBpY2tlci5fY3VySW5zdC5pbnB1dFswXSl9fWI9JC5kYXRlcGlja2VyLl9nZXQoYSwiYmVmb3JlU2hvdyIpO2U9Yj9iLmFwcGx5KGksW2ksYV0pOnt9O2lmKGU9PT1mYWxzZSl7cmV0dXJufWYoYS5zZXR0aW5ncyxlKTthLmxhc3RWYWw9bnVsbDskLmRhdGVwaWNrZXIuX2xhc3RJbnB1dD1pOyQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZChhKTtpZigkLmRhdGVwaWNrZXIuX2luRGlhbG9nKXtpLnZhbHVlPSIifWlmKCEkLmRhdGVwaWNrZXIuX3Bvcyl7JC5kYXRlcGlja2VyLl9wb3M9JC5kYXRlcGlja2VyLl9maW5kUG9zKGkpOyQuZGF0ZXBpY2tlci5fcG9zWzFdKz1pLm9mZnNldEhlaWdodH1nPWZhbHNlOyQoaSkucGFyZW50cygpLmVhY2goZnVuY3Rpb24oKXtnfD0kKHRoaXMpLmNzcygicG9zaXRpb24iKT09PSJmaXhlZCI7cmV0dXJuIWd9KTtvPXtsZWZ0OiQuZGF0ZXBpY2tlci5fcG9zWzBdLHRvcDokLmRhdGVwaWNrZXIuX3Bvc1sxXX07JC5kYXRlcGlja2VyLl9wb3M9bnVsbDthLmRwRGl2LmVtcHR5KCk7YS5kcERpdi5jc3Moe3Bvc2l0aW9uOiJhYnNvbHV0ZSIsZGlzcGxheToiYmxvY2siLHRvcDoiLTEwMDBweCJ9KTskLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIoYSk7bz0kLmRhdGVwaWNrZXIuX2NoZWNrT2Zmc2V0KGEsbyxnKTthLmRwRGl2LmNzcyh7cG9zaXRpb246KCQuZGF0ZXBpY2tlci5faW5EaWFsb2cmJiQuYmxvY2tVST8ic3RhdGljIjooZz8iZml4ZWQiOiJhYnNvbHV0ZSIpKSxkaXNwbGF5OiJub25lIixsZWZ0Om8ubGVmdCsicHgiLHRvcDpvLnRvcCsicHgifSk7aWYoIWEuaW5saW5lKXtzPSQuZGF0ZXBpY2tlci5fZ2V0KGEsInNob3dBbmltIik7aD0kLmRhdGVwaWNrZXIuX2dldChhLCJkdXJhdGlvbiIpO2EuZHBEaXYuekluZGV4KCQoaSkuekluZGV4KCkrMSk7JC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZz10cnVlO2lmKCQuZWZmZWN0cyYmJC5lZmZlY3RzLmVmZmVjdFtzXSl7YS5kcERpdi5zaG93KHMsJC5kYXRlcGlja2VyLl9nZXQoYSwic2hvd09wdGlvbnMiKSxoKX1lbHNle2EuZHBEaXZbc3x8InNob3ciXShzP2g6bnVsbCl9aWYoJC5kYXRlcGlja2VyLl9zaG91bGRGb2N1c0lucHV0KGEpKXthLmlucHV0LmZvY3VzKCl9JC5kYXRlcGlja2VyLl9jdXJJbnN0PWF9fSxfdXBkYXRlRGF0ZXBpY2tlcjpmdW5jdGlvbihpKXt0aGlzLm1heFJvd3M9NDtjPWk7aS5kcERpdi5lbXB0eSgpLmFwcGVuZCh0aGlzLl9nZW5lcmF0ZUhUTUwoaSkpO3RoaXMuX2F0dGFjaEhhbmRsZXJzKGkpO2kuZHBEaXYuZmluZCgiLiIrdGhpcy5fZGF5T3ZlckNsYXNzKyIgYSIpLm1vdXNlb3ZlcigpO3ZhciBvLG49dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoaSksYT1uWzFdLHc9MTc7aS5kcERpdi5yZW1vdmVDbGFzcygidWktZGF0ZXBpY2tlci1tdWx0aS0yIHVpLWRhdGVwaWNrZXItbXVsdGktMyB1aS1kYXRlcGlja2VyLW11bHRpLTQiKS53aWR0aCgiIik7aWYoYT4xKXtpLmRwRGl2LmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLW11bHRpLSIrYSkuY3NzKCJ3aWR0aCIsKHcqYSkrImVtIil9aS5kcERpdlsoblswXSE9PTF8fG5bMV0hPT0xPyJhZGQiOiJyZW1vdmUiKSsiQ2xhc3MiXSgidWktZGF0ZXBpY2tlci1tdWx0aSIpO2kuZHBEaXZbKHRoaXMuX2dldChpLCJpc1JUTCIpPyJhZGQiOiJyZW1vdmUiKSsiQ2xhc3MiXSgidWktZGF0ZXBpY2tlci1ydGwiKTtpZihpPT09JC5kYXRlcGlja2VyLl9jdXJJbnN0JiYkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiYkLmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQoaSkpe2kuaW5wdXQuZm9jdXMoKX1pZihpLnllYXJzaHRtbCl7bz1pLnllYXJzaHRtbDtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYobz09PWkueWVhcnNodG1sJiZpLnllYXJzaHRtbCl7aS5kcERpdi5maW5kKCJzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyOmZpcnN0IikucmVwbGFjZVdpdGgoaS55ZWFyc2h0bWwpfW89aS55ZWFyc2h0bWw9bnVsbH0sMCl9fSxfc2hvdWxkRm9jdXNJbnB1dDpmdW5jdGlvbihpKXtyZXR1cm4gaS5pbnB1dCYmaS5pbnB1dC5pcygiOnZpc2libGUiKSYmIWkuaW5wdXQuaXMoIjpkaXNhYmxlZCIpJiYhaS5pbnB1dC5pcygiOmZvY3VzIil9LF9jaGVja09mZnNldDpmdW5jdGlvbihpLG8sYSl7dmFyIGI9aS5kcERpdi5vdXRlcldpZHRoKCksZT1pLmRwRGl2Lm91dGVySGVpZ2h0KCksZz1pLmlucHV0P2kuaW5wdXQub3V0ZXJXaWR0aCgpOjAsaD1pLmlucHV0P2kuaW5wdXQub3V0ZXJIZWlnaHQoKTowLHY9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKyhhPzA6JChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpKSxqPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQrKGE/MDokKGRvY3VtZW50KS5zY3JvbGxUb3AoKSk7by5sZWZ0LT0odGhpcy5fZ2V0KGksImlzUlRMIik/KGItZyk6MCk7by5sZWZ0LT0oYSYmby5sZWZ0PT09aS5pbnB1dC5vZmZzZXQoKS5sZWZ0KT8kKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCk6MDtvLnRvcC09KGEmJm8udG9wPT09KGkuaW5wdXQub2Zmc2V0KCkudG9wK2gpKT8kKGRvY3VtZW50KS5zY3JvbGxUb3AoKTowO28ubGVmdC09TWF0aC5taW4oby5sZWZ0LChvLmxlZnQrYj52JiZ2PmIpP01hdGguYWJzKG8ubGVmdCtiLXYpOjApO28udG9wLT1NYXRoLm1pbihvLnRvcCwoby50b3ArZT5qJiZqPmUpP01hdGguYWJzKGUraCk6MCk7cmV0dXJuIG99LF9maW5kUG9zOmZ1bmN0aW9uKG8pe3ZhciBwLGk9dGhpcy5fZ2V0SW5zdChvKSxhPXRoaXMuX2dldChpLCJpc1JUTCIpO3doaWxlKG8mJihvLnR5cGU9PT0iaGlkZGVuInx8by5ub2RlVHlwZSE9PTF8fCQuZXhwci5maWx0ZXJzLmhpZGRlbihvKSkpe289b1thPyJwcmV2aW91c1NpYmxpbmciOiJuZXh0U2libGluZyJdfXA9JChvKS5vZmZzZXQoKTtyZXR1cm5bcC5sZWZ0LHAudG9wXX0sX2hpZGVEYXRlcGlja2VyOmZ1bmN0aW9uKGkpe3ZhciBzLGEscCxvLGI9dGhpcy5fY3VySW5zdDtpZighYnx8KGkmJmIhPT0kLmRhdGEoaSxQKSkpe3JldHVybn1pZih0aGlzLl9kYXRlcGlja2VyU2hvd2luZyl7cz10aGlzLl9nZXQoYiwic2hvd0FuaW0iKTthPXRoaXMuX2dldChiLCJkdXJhdGlvbiIpO3A9ZnVuY3Rpb24oKXskLmRhdGVwaWNrZXIuX3RpZHlEaWFsb2coYil9O2lmKCQuZWZmZWN0cyYmKCQuZWZmZWN0cy5lZmZlY3Rbc118fCQuZWZmZWN0c1tzXSkpe2IuZHBEaXYuaGlkZShzLCQuZGF0ZXBpY2tlci5fZ2V0KGIsInNob3dPcHRpb25zIiksYSxwKX1lbHNle2IuZHBEaXZbKHM9PT0ic2xpZGVEb3duIj8ic2xpZGVVcCI6KHM9PT0iZmFkZUluIj8iZmFkZU91dCI6ImhpZGUiKSldKChzP2E6bnVsbCkscCl9aWYoIXMpe3AoKX10aGlzLl9kYXRlcGlja2VyU2hvd2luZz1mYWxzZTtvPXRoaXMuX2dldChiLCJvbkNsb3NlIik7aWYobyl7by5hcHBseSgoYi5pbnB1dD9iLmlucHV0WzBdOm51bGwpLFsoYi5pbnB1dD9iLmlucHV0LnZhbCgpOiIiKSxiXSl9dGhpcy5fbGFzdElucHV0PW51bGw7aWYodGhpcy5faW5EaWFsb2cpe3RoaXMuX2RpYWxvZ0lucHV0LmNzcyh7cG9zaXRpb246ImFic29sdXRlIixsZWZ0OiIwIix0b3A6Ii0xMDBweCJ9KTtpZigkLmJsb2NrVUkpeyQudW5ibG9ja1VJKCk7JCgiYm9keSIpLmFwcGVuZCh0aGlzLmRwRGl2KX19dGhpcy5faW5EaWFsb2c9ZmFsc2V9fSxfdGlkeURpYWxvZzpmdW5jdGlvbihpKXtpLmRwRGl2LnJlbW92ZUNsYXNzKHRoaXMuX2RpYWxvZ0NsYXNzKS51bmJpbmQoIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyIil9LF9jaGVja0V4dGVybmFsQ2xpY2s6ZnVuY3Rpb24oZSl7aWYoISQuZGF0ZXBpY2tlci5fY3VySW5zdCl7cmV0dXJufXZhciBhPSQoZS50YXJnZXQpLGk9JC5kYXRlcGlja2VyLl9nZXRJbnN0KGFbMF0pO2lmKCgoYVswXS5pZCE9PSQuZGF0ZXBpY2tlci5fbWFpbkRpdklkJiZhLnBhcmVudHMoIiMiKyQuZGF0ZXBpY2tlci5fbWFpbkRpdklkKS5sZW5ndGg9PT0wJiYhYS5oYXNDbGFzcygkLmRhdGVwaWNrZXIubWFya2VyQ2xhc3NOYW1lKSYmIWEuY2xvc2VzdCgiLiIrJC5kYXRlcGlja2VyLl90cmlnZ2VyQ2xhc3MpLmxlbmd0aCYmJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmISgkLmRhdGVwaWNrZXIuX2luRGlhbG9nJiYkLmJsb2NrVUkpKSl8fChhLmhhc0NsYXNzKCQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUpJiYkLmRhdGVwaWNrZXIuX2N1ckluc3QhPT1pKSl7JC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfX0sX2FkanVzdERhdGU6ZnVuY3Rpb24oaSxvLHApe3ZhciB0PSQoaSksYT10aGlzLl9nZXRJbnN0KHRbMF0pO2lmKHRoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKHRbMF0pKXtyZXR1cm59dGhpcy5fYWRqdXN0SW5zdERhdGUoYSxvKyhwPT09Ik0iP3RoaXMuX2dldChhLCJzaG93Q3VycmVudEF0UG9zIik6MCkscCk7dGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihhKX0sX2dvdG9Ub2RheTpmdW5jdGlvbihpKXt2YXIgYSx0PSQoaSksYj10aGlzLl9nZXRJbnN0KHRbMF0pO2lmKHRoaXMuX2dldChiLCJnb3RvQ3VycmVudCIpJiZiLmN1cnJlbnREYXkpe2Iuc2VsZWN0ZWREYXk9Yi5jdXJyZW50RGF5O2IuZHJhd01vbnRoPWIuc2VsZWN0ZWRNb250aD1iLmN1cnJlbnRNb250aDtiLmRyYXdZZWFyPWIuc2VsZWN0ZWRZZWFyPWIuY3VycmVudFllYXJ9ZWxzZXthPW5ldyBEYXRlKCk7Yi5zZWxlY3RlZERheT1hLmdldERhdGUoKTtiLmRyYXdNb250aD1iLnNlbGVjdGVkTW9udGg9YS5nZXRNb250aCgpO2IuZHJhd1llYXI9Yi5zZWxlY3RlZFllYXI9YS5nZXRGdWxsWWVhcigpfXRoaXMuX25vdGlmeUNoYW5nZShiKTt0aGlzLl9hZGp1c3REYXRlKHQpfSxfc2VsZWN0TW9udGhZZWFyOmZ1bmN0aW9uKGkscyxwKXt2YXIgdD0kKGkpLGE9dGhpcy5fZ2V0SW5zdCh0WzBdKTthWyJzZWxlY3RlZCIrKHA9PT0iTSI/Ik1vbnRoIjoiWWVhciIpXT1hWyJkcmF3IisocD09PSJNIj8iTW9udGgiOiJZZWFyIildPXBhcnNlSW50KHMub3B0aW9uc1tzLnNlbGVjdGVkSW5kZXhdLnZhbHVlLDEwKTt0aGlzLl9ub3RpZnlDaGFuZ2UoYSk7dGhpcy5fYWRqdXN0RGF0ZSh0KX0sX3NlbGVjdERheTpmdW5jdGlvbihpLG0seSx0KXt2YXIgYSxiPSQoaSk7aWYoJCh0KS5oYXNDbGFzcyh0aGlzLl91bnNlbGVjdGFibGVDbGFzcyl8fHRoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKGJbMF0pKXtyZXR1cm59YT10aGlzLl9nZXRJbnN0KGJbMF0pO2Euc2VsZWN0ZWREYXk9YS5jdXJyZW50RGF5PSQoImEiLHQpLmh0bWwoKTthLnNlbGVjdGVkTW9udGg9YS5jdXJyZW50TW9udGg9bTthLnNlbGVjdGVkWWVhcj1hLmN1cnJlbnRZZWFyPXk7dGhpcy5fc2VsZWN0RGF0ZShpLHRoaXMuX2Zvcm1hdERhdGUoYSxhLmN1cnJlbnREYXksYS5jdXJyZW50TW9udGgsYS5jdXJyZW50WWVhcikpfSxfY2xlYXJEYXRlOmZ1bmN0aW9uKGkpe3ZhciB0PSQoaSk7dGhpcy5fc2VsZWN0RGF0ZSh0LCIiKX0sX3NlbGVjdERhdGU6ZnVuY3Rpb24oaSxhKXt2YXIgbyx0PSQoaSksYj10aGlzLl9nZXRJbnN0KHRbMF0pO2E9KGEhPW51bGw/YTp0aGlzLl9mb3JtYXREYXRlKGIpKTtpZihiLmlucHV0KXtiLmlucHV0LnZhbChhKX10aGlzLl91cGRhdGVBbHRlcm5hdGUoYik7bz10aGlzLl9nZXQoYiwib25TZWxlY3QiKTtpZihvKXtvLmFwcGx5KChiLmlucHV0P2IuaW5wdXRbMF06bnVsbCksW2EsYl0pfWVsc2UgaWYoYi5pbnB1dCl7Yi5pbnB1dC50cmlnZ2VyKCJjaGFuZ2UiKX1pZihiLmlubGluZSl7dGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihiKX1lbHNle3RoaXMuX2hpZGVEYXRlcGlja2VyKCk7dGhpcy5fbGFzdElucHV0PWIuaW5wdXRbMF07aWYodHlwZW9mKGIuaW5wdXRbMF0pIT09Im9iamVjdCIpe2IuaW5wdXQuZm9jdXMoKX10aGlzLl9sYXN0SW5wdXQ9bnVsbH19LF91cGRhdGVBbHRlcm5hdGU6ZnVuY3Rpb24oaSl7dmFyIGEsYixlLGc9dGhpcy5fZ2V0KGksImFsdEZpZWxkIik7aWYoZyl7YT10aGlzLl9nZXQoaSwiYWx0Rm9ybWF0Iil8fHRoaXMuX2dldChpLCJkYXRlRm9ybWF0Iik7Yj10aGlzLl9nZXREYXRlKGkpO2U9dGhpcy5mb3JtYXREYXRlKGEsYix0aGlzLl9nZXRGb3JtYXRDb25maWcoaSkpOyQoZykuZWFjaChmdW5jdGlvbigpeyQodGhpcykudmFsKGUpfSl9fSxub1dlZWtlbmRzOmZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0RGF5KCk7cmV0dXJuWyhiPjAmJmI8NiksIiJdfSxpc284NjAxV2VlazpmdW5jdGlvbihhKXt2YXIgdCxiPW5ldyBEYXRlKGEuZ2V0VGltZSgpKTtiLnNldERhdGUoYi5nZXREYXRlKCkrNC0oYi5nZXREYXkoKXx8NykpO3Q9Yi5nZXRUaW1lKCk7Yi5zZXRNb250aCgwKTtiLnNldERhdGUoMSk7cmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yb3VuZCgodC1iKS84NjQwMDAwMCkvNykrMX0scGFyc2VEYXRlOmZ1bmN0aW9uKGUsZyxzKXtpZihlPT1udWxsfHxnPT1udWxsKXt0aHJvdyJJbnZhbGlkIGFyZ3VtZW50cyJ9Zz0odHlwZW9mIGc9PT0ib2JqZWN0Ij9nLnRvU3RyaW5nKCk6ZysiIik7aWYoZz09PSIiKXtyZXR1cm4gbnVsbH12YXIgRixoLGosVj0wLGw9KHM/cy5zaG9ydFllYXJDdXRvZmY6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLnNob3J0WWVhckN1dG9mZixtPSh0eXBlb2YgbCE9PSJzdHJpbmciP2w6bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpJTEwMCtwYXJzZUludChsLDEwKSksbj0ocz9zLmRheU5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzU2hvcnQsbz0ocz9zLmRheU5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lcyxwPShzP3MubW9udGhOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzU2hvcnQscT0ocz9zLm1vbnRoTmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXMseT0tMSxyPS0xLHQ9LTEsdz0tMSx4PWZhbHNlLHosQT1mdW5jdGlvbihhKXt2YXIgYj0oRisxPGUubGVuZ3RoJiZlLmNoYXJBdChGKzEpPT09YSk7aWYoYil7RisrfXJldHVybiBifSxCPWZ1bmN0aW9uKGEpe3ZhciBpPUEoYSksYj0oYT09PSJAIj8xNDooYT09PSIhIj8yMDooYT09PSJ5IiYmaT80OihhPT09Im8iPzM6MikpKSksaz1uZXcgUmVnRXhwKCJeXFxkezEsIitiKyJ9Iiksdj1nLnN1YnN0cmluZyhWKS5tYXRjaChrKTtpZighdil7dGhyb3ciTWlzc2luZyBudW1iZXIgYXQgcG9zaXRpb24gIitWfVYrPXZbMF0ubGVuZ3RoO3JldHVybiBwYXJzZUludCh2WzBdLDEwKX0sQz1mdW5jdGlvbihHLEgsSSl7dmFyIEo9LTEsSz0kLm1hcChBKEcpP0k6SCxmdW5jdGlvbih2LGspe3JldHVybltbayx2XV19KS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuLShhWzFdLmxlbmd0aC1iWzFdLmxlbmd0aCl9KTskLmVhY2goSyxmdW5jdGlvbihpLGEpe3ZhciBiPWFbMV07aWYoZy5zdWJzdHIoVixiLmxlbmd0aCkudG9Mb3dlckNhc2UoKT09PWIudG9Mb3dlckNhc2UoKSl7Sj1hWzBdO1YrPWIubGVuZ3RoO3JldHVybiBmYWxzZX19KTtpZihKIT09LTEpe3JldHVybiBKKzF9ZWxzZXt0aHJvdyJVbmtub3duIG5hbWUgYXQgcG9zaXRpb24gIitWfX0sRT1mdW5jdGlvbigpe2lmKGcuY2hhckF0KFYpIT09ZS5jaGFyQXQoRikpe3Rocm93IlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiAiK1Z9VisrfTtmb3IoRj0wO0Y8ZS5sZW5ndGg7RisrKXtpZih4KXtpZihlLmNoYXJBdChGKT09PSInIiYmIUEoIiciKSl7eD1mYWxzZX1lbHNle0UoKX19ZWxzZXtzd2l0Y2goZS5jaGFyQXQoRikpe2Nhc2UiZCI6dD1CKCJkIik7YnJlYWs7Y2FzZSJEIjpDKCJEIixuLG8pO2JyZWFrO2Nhc2UibyI6dz1CKCJvIik7YnJlYWs7Y2FzZSJtIjpyPUIoIm0iKTticmVhaztjYXNlIk0iOnI9QygiTSIscCxxKTticmVhaztjYXNlInkiOnk9QigieSIpO2JyZWFrO2Nhc2UiQCI6ej1uZXcgRGF0ZShCKCJAIikpO3k9ei5nZXRGdWxsWWVhcigpO3I9ei5nZXRNb250aCgpKzE7dD16LmdldERhdGUoKTticmVhaztjYXNlIiEiOno9bmV3IERhdGUoKEIoIiEiKS10aGlzLl90aWNrc1RvMTk3MCkvMTAwMDApO3k9ei5nZXRGdWxsWWVhcigpO3I9ei5nZXRNb250aCgpKzE7dD16LmdldERhdGUoKTticmVhaztjYXNlIiciOmlmKEEoIiciKSl7RSgpfWVsc2V7eD10cnVlfWJyZWFrO2RlZmF1bHQ6RSgpfX19aWYoVjxnLmxlbmd0aCl7aj1nLnN1YnN0cihWKTtpZighL15ccysvLnRlc3Qoaikpe3Rocm93IkV4dHJhL3VucGFyc2VkIGNoYXJhY3RlcnMgZm91bmQgaW4gZGF0ZTogIitqfX1pZih5PT09LTEpe3k9bmV3IERhdGUoKS5nZXRGdWxsWWVhcigpfWVsc2UgaWYoeTwxMDApe3krPW5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKS1uZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCklMTAwKyh5PD1tPzA6LTEwMCl9aWYodz4tMSl7cj0xO3Q9dztkb3toPXRoaXMuX2dldERheXNJbk1vbnRoKHksci0xKTtpZih0PD1oKXticmVha31yKys7dC09aH13aGlsZSh0cnVlKX16PXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHksci0xLHQpKTtpZih6LmdldEZ1bGxZZWFyKCkhPT15fHx6LmdldE1vbnRoKCkrMSE9PXJ8fHouZ2V0RGF0ZSgpIT09dCl7dGhyb3ciSW52YWxpZCBkYXRlIn1yZXR1cm4gen0sQVRPTToieXktbW0tZGQiLENPT0tJRToiRCwgZGQgTSB5eSIsSVNPXzg2MDE6Inl5LW1tLWRkIixSRkNfODIyOiJELCBkIE0geSIsUkZDXzg1MDoiREQsIGRkLU0teSIsUkZDXzEwMzY6IkQsIGQgTSB5IixSRkNfMTEyMzoiRCwgZCBNIHl5IixSRkNfMjgyMjoiRCwgZCBNIHl5IixSU1M6IkQsIGQgTSB5IixUSUNLUzoiISIsVElNRVNUQU1QOiJAIixXM0M6Inl5LW1tLWRkIixfdGlja3NUbzE5NzA6KCgoMTk3MC0xKSozNjUrTWF0aC5mbG9vcigxOTcwLzQpLU1hdGguZmxvb3IoMTk3MC8xMDApK01hdGguZmxvb3IoMTk3MC80MDApKSoyNCo2MCo2MCoxMDAwMDAwMCksZm9ybWF0RGF0ZTpmdW5jdGlvbihhLGIscyl7aWYoIWIpe3JldHVybiIifXZhciBGLGU9KHM/cy5kYXlOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LGc9KHM/cy5kYXlOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsbT0ocz9zLm1vbnRoTmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LGg9KHM/cy5tb250aE5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLGw9ZnVuY3Rpb24obil7dmFyIHA9KEYrMTxhLmxlbmd0aCYmYS5jaGFyQXQoRisxKT09PW4pO2lmKHApe0YrK31yZXR1cm4gcH0saT1mdW5jdGlvbihuLHYscCl7dmFyIHE9IiIrdjtpZihsKG4pKXt3aGlsZShxLmxlbmd0aDxwKXtxPSIwIitxfX1yZXR1cm4gcX0saj1mdW5jdGlvbihuLHYscCxxKXtyZXR1cm4obChuKT9xW3ZdOnBbdl0pfSxvPSIiLGs9ZmFsc2U7aWYoYil7Zm9yKEY9MDtGPGEubGVuZ3RoO0YrKyl7aWYoayl7aWYoYS5jaGFyQXQoRik9PT0iJyImJiFsKCInIikpe2s9ZmFsc2V9ZWxzZXtvKz1hLmNoYXJBdChGKX19ZWxzZXtzd2l0Y2goYS5jaGFyQXQoRikpe2Nhc2UiZCI6bys9aSgiZCIsYi5nZXREYXRlKCksMik7YnJlYWs7Y2FzZSJEIjpvKz1qKCJEIixiLmdldERheSgpLGUsZyk7YnJlYWs7Y2FzZSJvIjpvKz1pKCJvIixNYXRoLnJvdW5kKChuZXcgRGF0ZShiLmdldEZ1bGxZZWFyKCksYi5nZXRNb250aCgpLGIuZ2V0RGF0ZSgpKS5nZXRUaW1lKCktbmV3IERhdGUoYi5nZXRGdWxsWWVhcigpLDAsMCkuZ2V0VGltZSgpKS84NjQwMDAwMCksMyk7YnJlYWs7Y2FzZSJtIjpvKz1pKCJtIixiLmdldE1vbnRoKCkrMSwyKTticmVhaztjYXNlIk0iOm8rPWooIk0iLGIuZ2V0TW9udGgoKSxtLGgpO2JyZWFrO2Nhc2UieSI6bys9KGwoInkiKT9iLmdldEZ1bGxZZWFyKCk6KGIuZ2V0WWVhcigpJTEwMDwxMD8iMCI6IiIpK2IuZ2V0WWVhcigpJTEwMCk7YnJlYWs7Y2FzZSJAIjpvKz1iLmdldFRpbWUoKTticmVhaztjYXNlIiEiOm8rPWIuZ2V0VGltZSgpKjEwMDAwK3RoaXMuX3RpY2tzVG8xOTcwO2JyZWFrO2Nhc2UiJyI6aWYobCgiJyIpKXtvKz0iJyJ9ZWxzZXtrPXRydWV9YnJlYWs7ZGVmYXVsdDpvKz1hLmNoYXJBdChGKX19fX1yZXR1cm4gb30sX3Bvc3NpYmxlQ2hhcnM6ZnVuY3Rpb24oYSl7dmFyIEYsYj0iIixsPWZhbHNlLGU9ZnVuY3Rpb24obSl7dmFyIGc9KEYrMTxhLmxlbmd0aCYmYS5jaGFyQXQoRisxKT09PW0pO2lmKGcpe0YrK31yZXR1cm4gZ307Zm9yKEY9MDtGPGEubGVuZ3RoO0YrKyl7aWYobCl7aWYoYS5jaGFyQXQoRik9PT0iJyImJiFlKCInIikpe2w9ZmFsc2V9ZWxzZXtiKz1hLmNoYXJBdChGKX19ZWxzZXtzd2l0Y2goYS5jaGFyQXQoRikpe2Nhc2UiZCI6Y2FzZSJtIjpjYXNlInkiOmNhc2UiQCI6Yis9IjAxMjM0NTY3ODkiO2JyZWFrO2Nhc2UiRCI6Y2FzZSJNIjpyZXR1cm4gbnVsbDtjYXNlIiciOmlmKGUoIiciKSl7Yis9IicifWVsc2V7bD10cnVlfWJyZWFrO2RlZmF1bHQ6Yis9YS5jaGFyQXQoRil9fX1yZXR1cm4gYn0sX2dldDpmdW5jdGlvbihpLG4pe3JldHVybiBpLnNldHRpbmdzW25dIT09dT9pLnNldHRpbmdzW25dOnRoaXMuX2RlZmF1bHRzW25dfSxfc2V0RGF0ZUZyb21GaWVsZDpmdW5jdGlvbihpLG4pe2lmKGkuaW5wdXQudmFsKCk9PT1pLmxhc3RWYWwpe3JldHVybn12YXIgYT10aGlzLl9nZXQoaSwiZGF0ZUZvcm1hdCIpLGI9aS5sYXN0VmFsPWkuaW5wdXQ/aS5pbnB1dC52YWwoKTpudWxsLGU9dGhpcy5fZ2V0RGVmYXVsdERhdGUoaSksZz1lLHM9dGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGkpO3RyeXtnPXRoaXMucGFyc2VEYXRlKGEsYixzKXx8ZX1jYXRjaChoKXtiPShuPyIiOmIpfWkuc2VsZWN0ZWREYXk9Zy5nZXREYXRlKCk7aS5kcmF3TW9udGg9aS5zZWxlY3RlZE1vbnRoPWcuZ2V0TW9udGgoKTtpLmRyYXdZZWFyPWkuc2VsZWN0ZWRZZWFyPWcuZ2V0RnVsbFllYXIoKTtpLmN1cnJlbnREYXk9KGI/Zy5nZXREYXRlKCk6MCk7aS5jdXJyZW50TW9udGg9KGI/Zy5nZXRNb250aCgpOjApO2kuY3VycmVudFllYXI9KGI/Zy5nZXRGdWxsWWVhcigpOjApO3RoaXMuX2FkanVzdEluc3REYXRlKGkpfSxfZ2V0RGVmYXVsdERhdGU6ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMuX3Jlc3RyaWN0TWluTWF4KGksdGhpcy5fZGV0ZXJtaW5lRGF0ZShpLHRoaXMuX2dldChpLCJkZWZhdWx0RGF0ZSIpLG5ldyBEYXRlKCkpKX0sX2RldGVybWluZURhdGU6ZnVuY3Rpb24oaSxhLGIpe3ZhciBvPWZ1bmN0aW9uKGUpe3ZhciBhPW5ldyBEYXRlKCk7YS5zZXREYXRlKGEuZ2V0RGF0ZSgpK2UpO3JldHVybiBhfSxnPWZ1bmN0aW9uKGgpe3RyeXtyZXR1cm4gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZSgkLmRhdGVwaWNrZXIuX2dldChpLCJkYXRlRm9ybWF0IiksaCwkLmRhdGVwaWNrZXIuX2dldEZvcm1hdENvbmZpZyhpKSl9Y2F0Y2goZSl7fXZhciBhPShoLnRvTG93ZXJDYXNlKCkubWF0Y2goL15jLyk/JC5kYXRlcGlja2VyLl9nZXREYXRlKGkpOm51bGwpfHxuZXcgRGF0ZSgpLHk9YS5nZXRGdWxsWWVhcigpLG09YS5nZXRNb250aCgpLGo9YS5nZXREYXRlKCkscD0vKFsrXC1dP1swLTldKylccyooZHxEfHd8V3xtfE18eXxZKT8vZyxrPXAuZXhlYyhoKTt3aGlsZShrKXtzd2l0Y2goa1syXXx8ImQiKXtjYXNlImQiOmNhc2UiRCI6ais9cGFyc2VJbnQoa1sxXSwxMCk7YnJlYWs7Y2FzZSJ3IjpjYXNlIlciOmorPXBhcnNlSW50KGtbMV0sMTApKjc7YnJlYWs7Y2FzZSJtIjpjYXNlIk0iOm0rPXBhcnNlSW50KGtbMV0sMTApO2o9TWF0aC5taW4oaiwkLmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKHksbSkpO2JyZWFrO2Nhc2UieSI6Y2FzZSJZIjp5Kz1wYXJzZUludChrWzFdLDEwKTtqPU1hdGgubWluKGosJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aCh5LG0pKTticmVha31rPXAuZXhlYyhoKX1yZXR1cm4gbmV3IERhdGUoeSxtLGopfSxuPShhPT1udWxsfHxhPT09IiI/YjoodHlwZW9mIGE9PT0ic3RyaW5nIj9nKGEpOih0eXBlb2YgYT09PSJudW1iZXIiPyhpc05hTihhKT9iOm8oYSkpOm5ldyBEYXRlKGEuZ2V0VGltZSgpKSkpKTtuPShuJiZuLnRvU3RyaW5nKCk9PT0iSW52YWxpZCBEYXRlIj9iOm4pO2lmKG4pe24uc2V0SG91cnMoMCk7bi5zZXRNaW51dGVzKDApO24uc2V0U2Vjb25kcygwKTtuLnNldE1pbGxpc2Vjb25kcygwKX1yZXR1cm4gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3Qobil9LF9kYXlsaWdodFNhdmluZ0FkanVzdDpmdW5jdGlvbihhKXtpZighYSl7cmV0dXJuIG51bGx9YS5zZXRIb3VycyhhLmdldEhvdXJzKCk+MTI/YS5nZXRIb3VycygpKzI6MCk7cmV0dXJuIGF9LF9zZXREYXRlOmZ1bmN0aW9uKGksYSxuKXt2YXIgYj0hYSxvPWkuc2VsZWN0ZWRNb250aCxlPWkuc2VsZWN0ZWRZZWFyLGc9dGhpcy5fcmVzdHJpY3RNaW5NYXgoaSx0aGlzLl9kZXRlcm1pbmVEYXRlKGksYSxuZXcgRGF0ZSgpKSk7aS5zZWxlY3RlZERheT1pLmN1cnJlbnREYXk9Zy5nZXREYXRlKCk7aS5kcmF3TW9udGg9aS5zZWxlY3RlZE1vbnRoPWkuY3VycmVudE1vbnRoPWcuZ2V0TW9udGgoKTtpLmRyYXdZZWFyPWkuc2VsZWN0ZWRZZWFyPWkuY3VycmVudFllYXI9Zy5nZXRGdWxsWWVhcigpO2lmKChvIT09aS5zZWxlY3RlZE1vbnRofHxlIT09aS5zZWxlY3RlZFllYXIpJiYhbil7dGhpcy5fbm90aWZ5Q2hhbmdlKGkpfXRoaXMuX2FkanVzdEluc3REYXRlKGkpO2lmKGkuaW5wdXQpe2kuaW5wdXQudmFsKGI/IiI6dGhpcy5fZm9ybWF0RGF0ZShpKSl9fSxfZ2V0RGF0ZTpmdW5jdGlvbihpKXt2YXIgcz0oIWkuY3VycmVudFllYXJ8fChpLmlucHV0JiZpLmlucHV0LnZhbCgpPT09IiIpP251bGw6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoaS5jdXJyZW50WWVhcixpLmN1cnJlbnRNb250aCxpLmN1cnJlbnREYXkpKSk7cmV0dXJuIHN9LF9hdHRhY2hIYW5kbGVyczpmdW5jdGlvbihpKXt2YXIgcz10aGlzLl9nZXQoaSwic3RlcE1vbnRocyIpLGE9IiMiK2kuaWQucmVwbGFjZSgvXFxcXC9nLCJcXCIpO2kuZHBEaXYuZmluZCgiW2RhdGEtaGFuZGxlcl0iKS5tYXAoZnVuY3Rpb24oKXt2YXIgaD17cHJldjpmdW5jdGlvbigpeyQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShhLC1zLCJNIil9LG5leHQ6ZnVuY3Rpb24oKXskLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoYSwrcywiTSIpfSxoaWRlOmZ1bmN0aW9uKCl7JC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfSx0b2RheTpmdW5jdGlvbigpeyQuZGF0ZXBpY2tlci5fZ290b1RvZGF5KGEpfSxzZWxlY3REYXk6ZnVuY3Rpb24oKXskLmRhdGVwaWNrZXIuX3NlbGVjdERheShhLCt0aGlzLmdldEF0dHJpYnV0ZSgiZGF0YS1tb250aCIpLCt0aGlzLmdldEF0dHJpYnV0ZSgiZGF0YS15ZWFyIiksdGhpcyk7cmV0dXJuIGZhbHNlfSxzZWxlY3RNb250aDpmdW5jdGlvbigpeyQuZGF0ZXBpY2tlci5fc2VsZWN0TW9udGhZZWFyKGEsdGhpcywiTSIpO3JldHVybiBmYWxzZX0sc2VsZWN0WWVhcjpmdW5jdGlvbigpeyQuZGF0ZXBpY2tlci5fc2VsZWN0TW9udGhZZWFyKGEsdGhpcywiWSIpO3JldHVybiBmYWxzZX19OyQodGhpcykuYmluZCh0aGlzLmdldEF0dHJpYnV0ZSgiZGF0YS1ldmVudCIpLGhbdGhpcy5nZXRBdHRyaWJ1dGUoImRhdGEtaGFuZGxlciIpXSl9KX0sX2dlbmVyYXRlSFRNTDpmdW5jdGlvbihpKXt2YXIgbSxwLGEsbixiLGUsZyxoLGosayxzLGwsbyxxLHIsdCx2LHcseCx5LHosQSxCLEMsRSxGLEcsSCxJLEosSyxMLE0sTixSLE8sUSxTLFQsVT1uZXcgRGF0ZSgpLFY9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoVS5nZXRGdWxsWWVhcigpLFUuZ2V0TW9udGgoKSxVLmdldERhdGUoKSkpLFc9dGhpcy5fZ2V0KGksImlzUlRMIiksWD10aGlzLl9nZXQoaSwic2hvd0J1dHRvblBhbmVsIiksWT10aGlzLl9nZXQoaSwiaGlkZUlmTm9QcmV2TmV4dCIpLFo9dGhpcy5fZ2V0KGksIm5hdmlnYXRpb25Bc0RhdGVGb3JtYXQiKSxfPXRoaXMuX2dldE51bWJlck9mTW9udGhzKGkpLGExPXRoaXMuX2dldChpLCJzaG93Q3VycmVudEF0UG9zIiksYjE9dGhpcy5fZ2V0KGksInN0ZXBNb250aHMiKSxjMT0oX1swXSE9PTF8fF9bMV0hPT0xKSxkMT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCgoIWkuY3VycmVudERheT9uZXcgRGF0ZSg5OTk5LDksOSk6bmV3IERhdGUoaS5jdXJyZW50WWVhcixpLmN1cnJlbnRNb250aCxpLmN1cnJlbnREYXkpKSksZTE9dGhpcy5fZ2V0TWluTWF4RGF0ZShpLCJtaW4iKSxmMT10aGlzLl9nZXRNaW5NYXhEYXRlKGksIm1heCIpLGcxPWkuZHJhd01vbnRoLWExLGgxPWkuZHJhd1llYXI7aWYoZzE8MCl7ZzErPTEyO2gxLS19aWYoZjEpe209dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZjEuZ2V0RnVsbFllYXIoKSxmMS5nZXRNb250aCgpLShfWzBdKl9bMV0pKzEsZjEuZ2V0RGF0ZSgpKSk7bT0oZTEmJm08ZTE/ZTE6bSk7d2hpbGUodGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoaDEsZzEsMSkpPm0pe2cxLS07aWYoZzE8MCl7ZzE9MTE7aDEtLX19fWkuZHJhd01vbnRoPWcxO2kuZHJhd1llYXI9aDE7cD10aGlzLl9nZXQoaSwicHJldlRleHQiKTtwPSghWj9wOnRoaXMuZm9ybWF0RGF0ZShwLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGgxLGcxLWIxLDEpKSx0aGlzLl9nZXRGb3JtYXRDb25maWcoaSkpKTthPSh0aGlzLl9jYW5BZGp1c3RNb250aChpLC0xLGgxLGcxKT8iPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3ByZXYnIGRhdGEtZXZlbnQ9J2NsaWNrJyIrIiB0aXRsZT0nIitwKyInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIrKFc/ImUiOiJ3IikrIic+IitwKyI8L3NwYW4+PC9hPiI6KFk/IiI6IjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZCcgdGl0bGU9JyIrcCsiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iKyhXPyJlIjoidyIpKyInPiIrcCsiPC9zcGFuPjwvYT4iKSk7bj10aGlzLl9nZXQoaSwibmV4dFRleHQiKTtuPSghWj9uOnRoaXMuZm9ybWF0RGF0ZShuLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGgxLGcxK2IxLDEpKSx0aGlzLl9nZXRGb3JtYXRDb25maWcoaSkpKTtiPSh0aGlzLl9jYW5BZGp1c3RNb250aChpLCsxLGgxLGcxKT8iPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItbmV4dCB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J25leHQnIGRhdGEtZXZlbnQ9J2NsaWNrJyIrIiB0aXRsZT0nIituKyInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIrKFc/InciOiJlIikrIic+IituKyI8L3NwYW4+PC9hPiI6KFk/IiI6IjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZCcgdGl0bGU9JyIrbisiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iKyhXPyJ3IjoiZSIpKyInPiIrbisiPC9zcGFuPjwvYT4iKSk7ZT10aGlzLl9nZXQoaSwiY3VycmVudFRleHQiKTtnPSh0aGlzLl9nZXQoaSwiZ290b0N1cnJlbnQiKSYmaS5jdXJyZW50RGF5P2QxOlYpO2U9KCFaP2U6dGhpcy5mb3JtYXREYXRlKGUsZyx0aGlzLl9nZXRGb3JtYXRDb25maWcoaSkpKTtoPSghaS5pbmxpbmU/IjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0ndWktZGF0ZXBpY2tlci1jbG9zZSB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXByaW1hcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdoaWRlJyBkYXRhLWV2ZW50PSdjbGljayc+Iit0aGlzLl9nZXQoaSwiY2xvc2VUZXh0IikrIjwvYnV0dG9uPiI6IiIpO2o9KFgpPyI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgdWktd2lkZ2V0LWNvbnRlbnQnPiIrKFc/aDoiIikrKHRoaXMuX2lzSW5SYW5nZShpLGcpPyI8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J3VpLWRhdGVwaWNrZXItY3VycmVudCB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXNlY29uZGFyeSB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3RvZGF5JyBkYXRhLWV2ZW50PSdjbGljayciKyI+IitlKyI8L2J1dHRvbj4iOiIiKSsoVz8iIjpoKSsiPC9kaXY+IjoiIjtrPXBhcnNlSW50KHRoaXMuX2dldChpLCJmaXJzdERheSIpLDEwKTtrPShpc05hTihrKT8wOmspO3M9dGhpcy5fZ2V0KGksInNob3dXZWVrIik7bD10aGlzLl9nZXQoaSwiZGF5TmFtZXMiKTtvPXRoaXMuX2dldChpLCJkYXlOYW1lc01pbiIpO3E9dGhpcy5fZ2V0KGksIm1vbnRoTmFtZXMiKTtyPXRoaXMuX2dldChpLCJtb250aE5hbWVzU2hvcnQiKTt0PXRoaXMuX2dldChpLCJiZWZvcmVTaG93RGF5Iik7dj10aGlzLl9nZXQoaSwic2hvd090aGVyTW9udGhzIik7dz10aGlzLl9nZXQoaSwic2VsZWN0T3RoZXJNb250aHMiKTt4PXRoaXMuX2dldERlZmF1bHREYXRlKGkpO3k9IiI7ejtmb3IoQT0wO0E8X1swXTtBKyspe0I9IiI7dGhpcy5tYXhSb3dzPTQ7Zm9yKEM9MDtDPF9bMV07QysrKXtFPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGgxLGcxLGkuc2VsZWN0ZWREYXkpKTtGPSIgdWktY29ybmVyLWFsbCI7Rz0iIjtpZihjMSl7Rys9IjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItZ3JvdXAiO2lmKF9bMV0+MSl7c3dpdGNoKEMpe2Nhc2UgMDpHKz0iIHVpLWRhdGVwaWNrZXItZ3JvdXAtZmlyc3QiO0Y9IiB1aS1jb3JuZXItIisoVz8icmlnaHQiOiJsZWZ0Iik7YnJlYWs7Y2FzZSBfWzFdLTE6Rys9IiB1aS1kYXRlcGlja2VyLWdyb3VwLWxhc3QiO0Y9IiB1aS1jb3JuZXItIisoVz8ibGVmdCI6InJpZ2h0Iik7YnJlYWs7ZGVmYXVsdDpHKz0iIHVpLWRhdGVwaWNrZXItZ3JvdXAtbWlkZGxlIjtGPSIiO2JyZWFrfX1HKz0iJz4ifUcrPSI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWhlYWRlciB1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeCIrRisiJz4iKygvYWxsfGxlZnQvLnRlc3QoRikmJkE9PT0wPyhXP2I6YSk6IiIpKygvYWxsfHJpZ2h0Ly50ZXN0KEYpJiZBPT09MD8oVz9hOmIpOiIiKSt0aGlzLl9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcihpLGcxLGgxLGUxLGYxLEE+MHx8Qz4wLHEscikrIjwvZGl2Pjx0YWJsZSBjbGFzcz0ndWktZGF0ZXBpY2tlci1jYWxlbmRhcic+PHRoZWFkPiIrIjx0cj4iO0g9KHM/Ijx0aCBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWNvbCc+Iit0aGlzLl9nZXQoaSwid2Vla0hlYWRlciIpKyI8L3RoPiI6IiIpO2Zvcih6PTA7ejw3O3orKyl7ST0oeitrKSU3O0grPSI8dGgiKygoeitrKzYpJTc+PTU/IiBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWVuZCciOiIiKSsiPiIrIjxzcGFuIHRpdGxlPSciK2xbSV0rIic+IitvW0ldKyI8L3NwYW4+PC90aD4ifUcrPUgrIjwvdHI+PC90aGVhZD48dGJvZHk+IjtKPXRoaXMuX2dldERheXNJbk1vbnRoKGgxLGcxKTtpZihoMT09PWkuc2VsZWN0ZWRZZWFyJiZnMT09PWkuc2VsZWN0ZWRNb250aCl7aS5zZWxlY3RlZERheT1NYXRoLm1pbihpLnNlbGVjdGVkRGF5LEopfUs9KHRoaXMuX2dldEZpcnN0RGF5T2ZNb250aChoMSxnMSktays3KSU3O0w9TWF0aC5jZWlsKChLK0opLzcpO009KGMxP3RoaXMubWF4Um93cz5MP3RoaXMubWF4Um93czpMOkwpO3RoaXMubWF4Um93cz1NO049dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoaDEsZzEsMS1LKSk7Zm9yKFI9MDtSPE07UisrKXtHKz0iPHRyPiI7Tz0oIXM/IiI6Ijx0ZCBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWNvbCc+Iit0aGlzLl9nZXQoaSwiY2FsY3VsYXRlV2VlayIpKE4pKyI8L3RkPiIpO2Zvcih6PTA7ejw3O3orKyl7UT0odD90LmFwcGx5KChpLmlucHV0P2kuaW5wdXRbMF06bnVsbCksW05dKTpbdHJ1ZSwiIl0pO1M9KE4uZ2V0TW9udGgoKSE9PWcxKTtUPShTJiYhdyl8fCFRWzBdfHwoZTEmJk48ZTEpfHwoZjEmJk4+ZjEpO08rPSI8dGQgY2xhc3M9JyIrKCh6K2srNiklNz49NT8iIHVpLWRhdGVwaWNrZXItd2Vlay1lbmQiOiIiKSsoUz8iIHVpLWRhdGVwaWNrZXItb3RoZXItbW9udGgiOiIiKSsoKE4uZ2V0VGltZSgpPT09RS5nZXRUaW1lKCkmJmcxPT09aS5zZWxlY3RlZE1vbnRoJiZpLl9rZXlFdmVudCl8fCh4LmdldFRpbWUoKT09PU4uZ2V0VGltZSgpJiZ4LmdldFRpbWUoKT09PUUuZ2V0VGltZSgpKT8iICIrdGhpcy5fZGF5T3ZlckNsYXNzOiIiKSsoVD8iICIrdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MrIiB1aS1zdGF0ZS1kaXNhYmxlZCI6IiIpKyhTJiYhdj8iIjoiICIrUVsxXSsoTi5nZXRUaW1lKCk9PT1kMS5nZXRUaW1lKCk/IiAiK3RoaXMuX2N1cnJlbnRDbGFzczoiIikrKE4uZ2V0VGltZSgpPT09Vi5nZXRUaW1lKCk/IiB1aS1kYXRlcGlja2VyLXRvZGF5IjoiIikpKyInIisoKCFTfHx2KSYmUVsyXT8iIHRpdGxlPSciK1FbMl0ucmVwbGFjZSgvJy9nLCImIzM5OyIpKyInIjoiIikrKFQ/IiI6IiBkYXRhLWhhbmRsZXI9J3NlbGVjdERheScgZGF0YS1ldmVudD0nY2xpY2snIGRhdGEtbW9udGg9JyIrTi5nZXRNb250aCgpKyInIGRhdGEteWVhcj0nIitOLmdldEZ1bGxZZWFyKCkrIiciKSsiPiIrKFMmJiF2PyImI3hhMDsiOihUPyI8c3BhbiBjbGFzcz0ndWktc3RhdGUtZGVmYXVsdCc+IitOLmdldERhdGUoKSsiPC9zcGFuPiI6IjxhIGNsYXNzPSd1aS1zdGF0ZS1kZWZhdWx0IisoTi5nZXRUaW1lKCk9PT1WLmdldFRpbWUoKT8iIHVpLXN0YXRlLWhpZ2hsaWdodCI6IiIpKyhOLmdldFRpbWUoKT09PWQxLmdldFRpbWUoKT8iIHVpLXN0YXRlLWFjdGl2ZSI6IiIpKyhTPyIgdWktcHJpb3JpdHktc2Vjb25kYXJ5IjoiIikrIicgaHJlZj0nIyc+IitOLmdldERhdGUoKSsiPC9hPiIpKSsiPC90ZD4iO04uc2V0RGF0ZShOLmdldERhdGUoKSsxKTtOPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KE4pfUcrPU8rIjwvdHI+In1nMSsrO2lmKGcxPjExKXtnMT0wO2gxKyt9Rys9IjwvdGJvZHk+PC90YWJsZT4iKyhjMT8iPC9kaXY+IisoKF9bMF0+MCYmQz09PV9bMV0tMSk/IjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItcm93LWJyZWFrJz48L2Rpdj4iOiIiKToiIik7Qis9R315Kz1CfXkrPWo7aS5fa2V5RXZlbnQ9ZmFsc2U7cmV0dXJuIHl9LF9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcjpmdW5jdGlvbihpLGEsYixtLGUscyxnLGgpe3ZhciBqLGssbCx5LHQsbixvLHAscT10aGlzLl9nZXQoaSwiY2hhbmdlTW9udGgiKSxyPXRoaXMuX2dldChpLCJjaGFuZ2VZZWFyIiksdj10aGlzLl9nZXQoaSwic2hvd01vbnRoQWZ0ZXJZZWFyIiksdz0iPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci10aXRsZSc+Iix4PSIiO2lmKHN8fCFxKXt4Kz0iPHNwYW4gY2xhc3M9J3VpLWRhdGVwaWNrZXItbW9udGgnPiIrZ1thXSsiPC9zcGFuPiJ9ZWxzZXtqPShtJiZtLmdldEZ1bGxZZWFyKCk9PT1iKTtrPShlJiZlLmdldEZ1bGxZZWFyKCk9PT1iKTt4Kz0iPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci1tb250aCcgZGF0YS1oYW5kbGVyPSdzZWxlY3RNb250aCcgZGF0YS1ldmVudD0nY2hhbmdlJz4iO2ZvcihsPTA7bDwxMjtsKyspe2lmKCghanx8bD49bS5nZXRNb250aCgpKSYmKCFrfHxsPD1lLmdldE1vbnRoKCkpKXt4Kz0iPG9wdGlvbiB2YWx1ZT0nIitsKyInIisobD09PWE/IiBzZWxlY3RlZD0nc2VsZWN0ZWQnIjoiIikrIj4iK2hbbF0rIjwvb3B0aW9uPiJ9fXgrPSI8L3NlbGVjdD4ifWlmKCF2KXt3Kz14KyhzfHwhKHEmJnIpPyImI3hhMDsiOiIiKX1pZighaS55ZWFyc2h0bWwpe2kueWVhcnNodG1sPSIiO2lmKHN8fCFyKXt3Kz0iPHNwYW4gY2xhc3M9J3VpLWRhdGVwaWNrZXIteWVhcic+IitiKyI8L3NwYW4+In1lbHNle3k9dGhpcy5fZ2V0KGksInllYXJSYW5nZSIpLnNwbGl0KCI6Iik7dD1uZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7bj1mdW5jdGlvbih6KXt2YXIgbz0oei5tYXRjaCgvY1srXC1dLiovKT9iK3BhcnNlSW50KHouc3Vic3RyaW5nKDEpLDEwKTooei5tYXRjaCgvWytcLV0uKi8pP3QrcGFyc2VJbnQoeiwxMCk6cGFyc2VJbnQoeiwxMCkpKTtyZXR1cm4oaXNOYU4obyk/dDpvKX07bz1uKHlbMF0pO3A9TWF0aC5tYXgobyxuKHlbMV18fCIiKSk7bz0obT9NYXRoLm1heChvLG0uZ2V0RnVsbFllYXIoKSk6byk7cD0oZT9NYXRoLm1pbihwLGUuZ2V0RnVsbFllYXIoKSk6cCk7aS55ZWFyc2h0bWwrPSI8c2VsZWN0IGNsYXNzPSd1aS1kYXRlcGlja2VyLXllYXInIGRhdGEtaGFuZGxlcj0nc2VsZWN0WWVhcicgZGF0YS1ldmVudD0nY2hhbmdlJz4iO2Zvcig7bzw9cDtvKyspe2kueWVhcnNodG1sKz0iPG9wdGlvbiB2YWx1ZT0nIitvKyInIisobz09PWI/IiBzZWxlY3RlZD0nc2VsZWN0ZWQnIjoiIikrIj4iK28rIjwvb3B0aW9uPiJ9aS55ZWFyc2h0bWwrPSI8L3NlbGVjdD4iO3crPWkueWVhcnNodG1sO2kueWVhcnNodG1sPW51bGx9fXcrPXRoaXMuX2dldChpLCJ5ZWFyU3VmZml4Iik7aWYodil7dys9KHN8fCEocSYmcik/IiYjeGEwOyI6IiIpK3h9dys9IjwvZGl2PiI7cmV0dXJuIHd9LF9hZGp1c3RJbnN0RGF0ZTpmdW5jdGlvbihpLG8scCl7dmFyIHk9aS5kcmF3WWVhcisocD09PSJZIj9vOjApLG09aS5kcmF3TW9udGgrKHA9PT0iTSI/bzowKSxhPU1hdGgubWluKGkuc2VsZWN0ZWREYXksdGhpcy5fZ2V0RGF5c0luTW9udGgoeSxtKSkrKHA9PT0iRCI/bzowKSxiPXRoaXMuX3Jlc3RyaWN0TWluTWF4KGksdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoeSxtLGEpKSk7aS5zZWxlY3RlZERheT1iLmdldERhdGUoKTtpLmRyYXdNb250aD1pLnNlbGVjdGVkTW9udGg9Yi5nZXRNb250aCgpO2kuZHJhd1llYXI9aS5zZWxlY3RlZFllYXI9Yi5nZXRGdWxsWWVhcigpO2lmKHA9PT0iTSJ8fHA9PT0iWSIpe3RoaXMuX25vdGlmeUNoYW5nZShpKX19LF9yZXN0cmljdE1pbk1heDpmdW5jdGlvbihpLGEpe3ZhciBtPXRoaXMuX2dldE1pbk1heERhdGUoaSwibWluIiksYj10aGlzLl9nZXRNaW5NYXhEYXRlKGksIm1heCIpLG49KG0mJmE8bT9tOmEpO3JldHVybihiJiZuPmI/YjpuKX0sX25vdGlmeUNoYW5nZTpmdW5jdGlvbihpKXt2YXIgbz10aGlzLl9nZXQoaSwib25DaGFuZ2VNb250aFllYXIiKTtpZihvKXtvLmFwcGx5KChpLmlucHV0P2kuaW5wdXRbMF06bnVsbCksW2kuc2VsZWN0ZWRZZWFyLGkuc2VsZWN0ZWRNb250aCsxLGldKX19LF9nZXROdW1iZXJPZk1vbnRoczpmdW5jdGlvbihpKXt2YXIgbj10aGlzLl9nZXQoaSwibnVtYmVyT2ZNb250aHMiKTtyZXR1cm4obj09bnVsbD9bMSwxXToodHlwZW9mIG49PT0ibnVtYmVyIj9bMSxuXTpuKSl9LF9nZXRNaW5NYXhEYXRlOmZ1bmN0aW9uKGksbSl7cmV0dXJuIHRoaXMuX2RldGVybWluZURhdGUoaSx0aGlzLl9nZXQoaSxtKyJEYXRlIiksbnVsbCl9LF9nZXREYXlzSW5Nb250aDpmdW5jdGlvbih5LG0pe3JldHVybiAzMi10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh5LG0sMzIpKS5nZXREYXRlKCl9LF9nZXRGaXJzdERheU9mTW9udGg6ZnVuY3Rpb24oeSxtKXtyZXR1cm4gbmV3IERhdGUoeSxtLDEpLmdldERheSgpfSxfY2FuQWRqdXN0TW9udGg6ZnVuY3Rpb24oaSxvLGEsYil7dmFyIG49dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoaSksZT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShhLGIrKG88MD9vOm5bMF0qblsxXSksMSkpO2lmKG88MCl7ZS5zZXREYXRlKHRoaXMuX2dldERheXNJbk1vbnRoKGUuZ2V0RnVsbFllYXIoKSxlLmdldE1vbnRoKCkpKX1yZXR1cm4gdGhpcy5faXNJblJhbmdlKGksZSl9LF9pc0luUmFuZ2U6ZnVuY3Rpb24oaSxhKXt2YXIgeSxiLG09dGhpcy5fZ2V0TWluTWF4RGF0ZShpLCJtaW4iKSxlPXRoaXMuX2dldE1pbk1heERhdGUoaSwibWF4IiksZz1udWxsLGg9bnVsbCxqPXRoaXMuX2dldChpLCJ5ZWFyUmFuZ2UiKTtpZihqKXt5PWouc3BsaXQoIjoiKTtiPW5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtnPXBhcnNlSW50KHlbMF0sMTApO2g9cGFyc2VJbnQoeVsxXSwxMCk7aWYoeVswXS5tYXRjaCgvWytcLV0uKi8pKXtnKz1ifWlmKHlbMV0ubWF0Y2goL1srXC1dLiovKSl7aCs9Yn19cmV0dXJuKCghbXx8YS5nZXRUaW1lKCk+PW0uZ2V0VGltZSgpKSYmKCFlfHxhLmdldFRpbWUoKTw9ZS5nZXRUaW1lKCkpJiYoIWd8fGEuZ2V0RnVsbFllYXIoKT49ZykmJighaHx8YS5nZXRGdWxsWWVhcigpPD1oKSl9LF9nZXRGb3JtYXRDb25maWc6ZnVuY3Rpb24oaSl7dmFyIHM9dGhpcy5fZ2V0KGksInNob3J0WWVhckN1dG9mZiIpO3M9KHR5cGVvZiBzIT09InN0cmluZyI/czpuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCklMTAwK3BhcnNlSW50KHMsMTApKTtyZXR1cm57c2hvcnRZZWFyQ3V0b2ZmOnMsZGF5TmFtZXNTaG9ydDp0aGlzLl9nZXQoaSwiZGF5TmFtZXNTaG9ydCIpLGRheU5hbWVzOnRoaXMuX2dldChpLCJkYXlOYW1lcyIpLG1vbnRoTmFtZXNTaG9ydDp0aGlzLl9nZXQoaSwibW9udGhOYW1lc1Nob3J0IiksbW9udGhOYW1lczp0aGlzLl9nZXQoaSwibW9udGhOYW1lcyIpfX0sX2Zvcm1hdERhdGU6ZnVuY3Rpb24oaSxhLG0seSl7aWYoIWEpe2kuY3VycmVudERheT1pLnNlbGVjdGVkRGF5O2kuY3VycmVudE1vbnRoPWkuc2VsZWN0ZWRNb250aDtpLmN1cnJlbnRZZWFyPWkuc2VsZWN0ZWRZZWFyfXZhciBiPShhPyh0eXBlb2YgYT09PSJvYmplY3QiP2E6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoeSxtLGEpKSk6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoaS5jdXJyZW50WWVhcixpLmN1cnJlbnRNb250aCxpLmN1cnJlbnREYXkpKSk7cmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLl9nZXQoaSwiZGF0ZUZvcm1hdCIpLGIsdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGkpKX19KTtmdW5jdGlvbiBkKGEpe3ZhciBzPSJidXR0b24sIC51aS1kYXRlcGlja2VyLXByZXYsIC51aS1kYXRlcGlja2VyLW5leHQsIC51aS1kYXRlcGlja2VyLWNhbGVuZGFyIHRkIGEiO3JldHVybiBhLmRlbGVnYXRlKHMsIm1vdXNlb3V0IixmdW5jdGlvbigpeyQodGhpcykucmVtb3ZlQ2xhc3MoInVpLXN0YXRlLWhvdmVyIik7aWYodGhpcy5jbGFzc05hbWUuaW5kZXhPZigidWktZGF0ZXBpY2tlci1wcmV2IikhPT0tMSl7JCh0aGlzKS5yZW1vdmVDbGFzcygidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyIil9aWYodGhpcy5jbGFzc05hbWUuaW5kZXhPZigidWktZGF0ZXBpY2tlci1uZXh0IikhPT0tMSl7JCh0aGlzKS5yZW1vdmVDbGFzcygidWktZGF0ZXBpY2tlci1uZXh0LWhvdmVyIil9fSkuZGVsZWdhdGUocywibW91c2VvdmVyIixmdW5jdGlvbigpe2lmKCEkLmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKGMuaW5saW5lP2EucGFyZW50KClbMF06Yy5pbnB1dFswXSkpeyQodGhpcykucGFyZW50cygiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIiKS5maW5kKCJhIikucmVtb3ZlQ2xhc3MoInVpLXN0YXRlLWhvdmVyIik7JCh0aGlzKS5hZGRDbGFzcygidWktc3RhdGUtaG92ZXIiKTtpZih0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCJ1aS1kYXRlcGlja2VyLXByZXYiKSE9PS0xKXskKHRoaXMpLmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXIiKX1pZih0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCJ1aS1kYXRlcGlja2VyLW5leHQiKSE9PS0xKXskKHRoaXMpLmFkZENsYXNzKCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXIiKX19fSl9ZnVuY3Rpb24gZih0LHApeyQuZXh0ZW5kKHQscCk7Zm9yKHZhciBuIGluIHApe2lmKHBbbl09PW51bGwpe3Rbbl09cFtuXX19cmV0dXJuIHR9JC5mbi5kYXRlcGlja2VyPWZ1bmN0aW9uKG8pe2lmKCF0aGlzLmxlbmd0aCl7cmV0dXJuIHRoaXN9aWYoISQuZGF0ZXBpY2tlci5pbml0aWFsaXplZCl7JChkb2N1bWVudCkubW91c2Vkb3duKCQuZGF0ZXBpY2tlci5fY2hlY2tFeHRlcm5hbENsaWNrKTskLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQ9dHJ1ZX1pZigkKCIjIiskLmRhdGVwaWNrZXIuX21haW5EaXZJZCkubGVuZ3RoPT09MCl7JCgiYm9keSIpLmFwcGVuZCgkLmRhdGVwaWNrZXIuZHBEaXYpfXZhciBhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtpZih0eXBlb2Ygbz09PSJzdHJpbmciJiYobz09PSJpc0Rpc2FibGVkInx8bz09PSJnZXREYXRlInx8bz09PSJ3aWRnZXQiKSl7cmV0dXJuICQuZGF0ZXBpY2tlclsiXyIrbysiRGF0ZXBpY2tlciJdLmFwcGx5KCQuZGF0ZXBpY2tlcixbdGhpc1swXV0uY29uY2F0KGEpKX1pZihvPT09Im9wdGlvbiImJmFyZ3VtZW50cy5sZW5ndGg9PT0yJiZ0eXBlb2YgYXJndW1lbnRzWzFdPT09InN0cmluZyIpe3JldHVybiAkLmRhdGVwaWNrZXJbIl8iK28rIkRhdGVwaWNrZXIiXS5hcHBseSgkLmRhdGVwaWNrZXIsW3RoaXNbMF1dLmNvbmNhdChhKSl9cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3R5cGVvZiBvPT09InN0cmluZyI/JC5kYXRlcGlja2VyWyJfIitvKyJEYXRlcGlja2VyIl0uYXBwbHkoJC5kYXRlcGlja2VyLFt0aGlzXS5jb25jYXQoYSkpOiQuZGF0ZXBpY2tlci5fYXR0YWNoRGF0ZXBpY2tlcih0aGlzLG8pfSl9OyQuZGF0ZXBpY2tlcj1uZXcgRCgpOyQuZGF0ZXBpY2tlci5pbml0aWFsaXplZD1mYWxzZTskLmRhdGVwaWNrZXIudXVpZD1uZXcgRGF0ZSgpLmdldFRpbWUoKTskLmRhdGVwaWNrZXIudmVyc2lvbj0iMS4xMC40In0pKGpRdWVyeSk7DQovKiEKICogalF1ZXJ5IFVJIFBvc2l0aW9uIDEuMTAuNAogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqCiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3Bvc2l0aW9uLwogKi8NCihmdW5jdGlvbigkLHUpeyQudWk9JC51aXx8e307dmFyIGMsbT1NYXRoLm1heCxhPU1hdGguYWJzLHI9TWF0aC5yb3VuZCxiPS9sZWZ0fGNlbnRlcnxyaWdodC8sZD0vdG9wfGNlbnRlcnxib3R0b20vLGU9L1tcK1wtXVxkKyhcLltcZF0rKT8lPy8sZj0vXlx3Ky8sZz0vJSQvLF89JC5mbi5wb3NpdGlvbjtmdW5jdGlvbiBoKG8sdyxpKXtyZXR1cm5bcGFyc2VGbG9hdChvWzBdKSooZy50ZXN0KG9bMF0pP3cvMTAwOjEpLHBhcnNlRmxvYXQob1sxXSkqKGcudGVzdChvWzFdKT9pLzEwMDoxKV19ZnVuY3Rpb24gcChpLGspe3JldHVybiBwYXJzZUludCgkLmNzcyhpLGspLDEwKXx8MH1mdW5jdGlvbiBqKGkpe3ZhciBrPWlbMF07aWYoay5ub2RlVHlwZT09PTkpe3JldHVybnt3aWR0aDppLndpZHRoKCksaGVpZ2h0OmkuaGVpZ2h0KCksb2Zmc2V0Ont0b3A6MCxsZWZ0OjB9fX1pZigkLmlzV2luZG93KGspKXtyZXR1cm57d2lkdGg6aS53aWR0aCgpLGhlaWdodDppLmhlaWdodCgpLG9mZnNldDp7dG9wOmkuc2Nyb2xsVG9wKCksbGVmdDppLnNjcm9sbExlZnQoKX19fWlmKGsucHJldmVudERlZmF1bHQpe3JldHVybnt3aWR0aDowLGhlaWdodDowLG9mZnNldDp7dG9wOmsucGFnZVksbGVmdDprLnBhZ2VYfX19cmV0dXJue3dpZHRoOmkub3V0ZXJXaWR0aCgpLGhlaWdodDppLm91dGVySGVpZ2h0KCksb2Zmc2V0Omkub2Zmc2V0KCl9fSQucG9zaXRpb249e3Njcm9sbGJhcldpZHRoOmZ1bmN0aW9uKCl7aWYoYyE9PXUpe3JldHVybiBjfXZhciB3LGksaz0kKCI8ZGl2IHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6aGlkZGVuOyc+PGRpdiBzdHlsZT0naGVpZ2h0OjEwMHB4O3dpZHRoOmF1dG87Jz48L2Rpdj48L2Rpdj4iKSxsPWsuY2hpbGRyZW4oKVswXTskKCJib2R5IikuYXBwZW5kKGspO3c9bC5vZmZzZXRXaWR0aDtrLmNzcygib3ZlcmZsb3ciLCJzY3JvbGwiKTtpPWwub2Zmc2V0V2lkdGg7aWYodz09PWkpe2k9a1swXS5jbGllbnRXaWR0aH1rLnJlbW92ZSgpO3JldHVybihjPXctaSl9LGdldFNjcm9sbEluZm86ZnVuY3Rpb24odyl7dmFyIG89dy5pc1dpbmRvd3x8dy5pc0RvY3VtZW50PyIiOncuZWxlbWVudC5jc3MoIm92ZXJmbG93LXgiKSxpPXcuaXNXaW5kb3d8fHcuaXNEb2N1bWVudD8iIjp3LmVsZW1lbnQuY3NzKCJvdmVyZmxvdy15Iiksaz1vPT09InNjcm9sbCJ8fChvPT09ImF1dG8iJiZ3LndpZHRoPHcuZWxlbWVudFswXS5zY3JvbGxXaWR0aCksbD1pPT09InNjcm9sbCJ8fChpPT09ImF1dG8iJiZ3LmhlaWdodDx3LmVsZW1lbnRbMF0uc2Nyb2xsSGVpZ2h0KTtyZXR1cm57d2lkdGg6bD8kLnBvc2l0aW9uLnNjcm9sbGJhcldpZHRoKCk6MCxoZWlnaHQ6az8kLnBvc2l0aW9uLnNjcm9sbGJhcldpZHRoKCk6MH19LGdldFdpdGhpbkluZm86ZnVuY3Rpb24oaSl7dmFyIHc9JChpfHx3aW5kb3cpLGs9JC5pc1dpbmRvdyh3WzBdKSxsPSEhd1swXSYmd1swXS5ub2RlVHlwZT09PTk7cmV0dXJue2VsZW1lbnQ6dyxpc1dpbmRvdzprLGlzRG9jdW1lbnQ6bCxvZmZzZXQ6dy5vZmZzZXQoKXx8e2xlZnQ6MCx0b3A6MH0sc2Nyb2xsTGVmdDp3LnNjcm9sbExlZnQoKSxzY3JvbGxUb3A6dy5zY3JvbGxUb3AoKSx3aWR0aDprP3cud2lkdGgoKTp3Lm91dGVyV2lkdGgoKSxoZWlnaHQ6az93LmhlaWdodCgpOncub3V0ZXJIZWlnaHQoKX19fTskLmZuLnBvc2l0aW9uPWZ1bmN0aW9uKG8pe2lmKCFvfHwhby5vZil7cmV0dXJuIF8uYXBwbHkodGhpcyxhcmd1bWVudHMpfW89JC5leHRlbmQoe30sbyk7dmFyIGssdCxsLG4scSxzLHY9JChvLm9mKSx3PSQucG9zaXRpb24uZ2V0V2l0aGluSW5mbyhvLndpdGhpbikseD0kLnBvc2l0aW9uLmdldFNjcm9sbEluZm8odykseT0oby5jb2xsaXNpb258fCJmbGlwIikuc3BsaXQoIiAiKSx6PXt9O3M9aih2KTtpZih2WzBdLnByZXZlbnREZWZhdWx0KXtvLmF0PSJsZWZ0IHRvcCJ9dD1zLndpZHRoO2w9cy5oZWlnaHQ7bj1zLm9mZnNldDtxPSQuZXh0ZW5kKHt9LG4pOyQuZWFjaChbIm15IiwiYXQiXSxmdW5jdGlvbigpe3ZhciBpPShvW3RoaXNdfHwiIikuc3BsaXQoIiAiKSxBLEI7aWYoaS5sZW5ndGg9PT0xKXtpPWIudGVzdChpWzBdKT9pLmNvbmNhdChbImNlbnRlciJdKTpkLnRlc3QoaVswXSk/WyJjZW50ZXIiXS5jb25jYXQoaSk6WyJjZW50ZXIiLCJjZW50ZXIiXX1pWzBdPWIudGVzdChpWzBdKT9pWzBdOiJjZW50ZXIiO2lbMV09ZC50ZXN0KGlbMV0pP2lbMV06ImNlbnRlciI7QT1lLmV4ZWMoaVswXSk7Qj1lLmV4ZWMoaVsxXSk7elt0aGlzXT1bQT9BWzBdOjAsQj9CWzBdOjBdO29bdGhpc109W2YuZXhlYyhpWzBdKVswXSxmLmV4ZWMoaVsxXSlbMF1dfSk7aWYoeS5sZW5ndGg9PT0xKXt5WzFdPXlbMF19aWYoby5hdFswXT09PSJyaWdodCIpe3EubGVmdCs9dH1lbHNlIGlmKG8uYXRbMF09PT0iY2VudGVyIil7cS5sZWZ0Kz10LzJ9aWYoby5hdFsxXT09PSJib3R0b20iKXtxLnRvcCs9bH1lbHNlIGlmKG8uYXRbMV09PT0iY2VudGVyIil7cS50b3ArPWwvMn1rPWgoei5hdCx0LGwpO3EubGVmdCs9a1swXTtxLnRvcCs9a1sxXTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIEEsQixDPSQodGhpcyksRD1DLm91dGVyV2lkdGgoKSxFPUMub3V0ZXJIZWlnaHQoKSxGPXAodGhpcywibWFyZ2luTGVmdCIpLEc9cCh0aGlzLCJtYXJnaW5Ub3AiKSxIPUQrRitwKHRoaXMsIm1hcmdpblJpZ2h0IikreC53aWR0aCxJPUUrRytwKHRoaXMsIm1hcmdpbkJvdHRvbSIpK3guaGVpZ2h0LEo9JC5leHRlbmQoe30scSksSz1oKHoubXksQy5vdXRlcldpZHRoKCksQy5vdXRlckhlaWdodCgpKTtpZihvLm15WzBdPT09InJpZ2h0Iil7Si5sZWZ0LT1EfWVsc2UgaWYoby5teVswXT09PSJjZW50ZXIiKXtKLmxlZnQtPUQvMn1pZihvLm15WzFdPT09ImJvdHRvbSIpe0oudG9wLT1FfWVsc2UgaWYoby5teVsxXT09PSJjZW50ZXIiKXtKLnRvcC09RS8yfUoubGVmdCs9S1swXTtKLnRvcCs9S1sxXTtpZighJC5zdXBwb3J0Lm9mZnNldEZyYWN0aW9ucyl7Si5sZWZ0PXIoSi5sZWZ0KTtKLnRvcD1yKEoudG9wKX1BPXttYXJnaW5MZWZ0OkYsbWFyZ2luVG9wOkd9OyQuZWFjaChbImxlZnQiLCJ0b3AiXSxmdW5jdGlvbihpLEwpe2lmKCQudWkucG9zaXRpb25beVtpXV0peyQudWkucG9zaXRpb25beVtpXV1bTF0oSix7dGFyZ2V0V2lkdGg6dCx0YXJnZXRIZWlnaHQ6bCxlbGVtV2lkdGg6RCxlbGVtSGVpZ2h0OkUsY29sbGlzaW9uUG9zaXRpb246QSxjb2xsaXNpb25XaWR0aDpILGNvbGxpc2lvbkhlaWdodDpJLG9mZnNldDpba1swXStLWzBdLGtbMV0rS1sxXV0sbXk6by5teSxhdDpvLmF0LHdpdGhpbjp3LGVsZW06Q30pfX0pO2lmKG8udXNpbmcpe0I9ZnVuY3Rpb24oaSl7dmFyIEw9bi5sZWZ0LUoubGVmdCxNPUwrdC1ELE49bi50b3AtSi50b3AsTz1OK2wtRSxQPXt0YXJnZXQ6e2VsZW1lbnQ6dixsZWZ0Om4ubGVmdCx0b3A6bi50b3Asd2lkdGg6dCxoZWlnaHQ6bH0sZWxlbWVudDp7ZWxlbWVudDpDLGxlZnQ6Si5sZWZ0LHRvcDpKLnRvcCx3aWR0aDpELGhlaWdodDpFfSxob3Jpem9udGFsOk08MD8ibGVmdCI6TD4wPyJyaWdodCI6ImNlbnRlciIsdmVydGljYWw6TzwwPyJ0b3AiOk4+MD8iYm90dG9tIjoibWlkZGxlIn07aWYodDxEJiZhKEwrTSk8dCl7UC5ob3Jpem9udGFsPSJjZW50ZXIifWlmKGw8RSYmYShOK08pPGwpe1AudmVydGljYWw9Im1pZGRsZSJ9aWYobShhKEwpLGEoTSkpPm0oYShOKSxhKE8pKSl7UC5pbXBvcnRhbnQ9Imhvcml6b250YWwifWVsc2V7UC5pbXBvcnRhbnQ9InZlcnRpY2FsIn1vLnVzaW5nLmNhbGwodGhpcyxpLFApfX1DLm9mZnNldCgkLmV4dGVuZChKLHt1c2luZzpCfSkpfSl9OyQudWkucG9zaXRpb249e2ZpdDp7bGVmdDpmdW5jdGlvbihpLGspe3ZhciB3PWsud2l0aGluLGw9dy5pc1dpbmRvdz93LnNjcm9sbExlZnQ6dy5vZmZzZXQubGVmdCxvPXcud2lkdGgsbj1pLmxlZnQtay5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LHE9bC1uLHM9bitrLmNvbGxpc2lvbldpZHRoLW8tbCx0O2lmKGsuY29sbGlzaW9uV2lkdGg+byl7aWYocT4wJiZzPD0wKXt0PWkubGVmdCtxK2suY29sbGlzaW9uV2lkdGgtby1sO2kubGVmdCs9cS10fWVsc2UgaWYocz4wJiZxPD0wKXtpLmxlZnQ9bH1lbHNle2lmKHE+cyl7aS5sZWZ0PWwrby1rLmNvbGxpc2lvbldpZHRofWVsc2V7aS5sZWZ0PWx9fX1lbHNlIGlmKHE+MCl7aS5sZWZ0Kz1xfWVsc2UgaWYocz4wKXtpLmxlZnQtPXN9ZWxzZXtpLmxlZnQ9bShpLmxlZnQtbixpLmxlZnQpfX0sdG9wOmZ1bmN0aW9uKGksayl7dmFyIHc9ay53aXRoaW4sbD13LmlzV2luZG93P3cuc2Nyb2xsVG9wOncub2Zmc2V0LnRvcCxvPWsud2l0aGluLmhlaWdodCxuPWkudG9wLWsuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLHE9bC1uLHM9bitrLmNvbGxpc2lvbkhlaWdodC1vLWwsdDtpZihrLmNvbGxpc2lvbkhlaWdodD5vKXtpZihxPjAmJnM8PTApe3Q9aS50b3ArcStrLmNvbGxpc2lvbkhlaWdodC1vLWw7aS50b3ArPXEtdH1lbHNlIGlmKHM+MCYmcTw9MCl7aS50b3A9bH1lbHNle2lmKHE+cyl7aS50b3A9bCtvLWsuY29sbGlzaW9uSGVpZ2h0fWVsc2V7aS50b3A9bH19fWVsc2UgaWYocT4wKXtpLnRvcCs9cX1lbHNlIGlmKHM+MCl7aS50b3AtPXN9ZWxzZXtpLnRvcD1tKGkudG9wLW4saS50b3ApfX19LGZsaXA6e2xlZnQ6ZnVuY3Rpb24oaSxrKXt2YXIgdz1rLndpdGhpbixsPXcub2Zmc2V0LmxlZnQrdy5zY3JvbGxMZWZ0LG89dy53aWR0aCxuPXcuaXNXaW5kb3c/dy5zY3JvbGxMZWZ0Oncub2Zmc2V0LmxlZnQscT1pLmxlZnQtay5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LHM9cS1uLHQ9cStrLmNvbGxpc2lvbldpZHRoLW8tbix2PWsubXlbMF09PT0ibGVmdCI/LWsuZWxlbVdpZHRoOmsubXlbMF09PT0icmlnaHQiP2suZWxlbVdpZHRoOjAseD1rLmF0WzBdPT09ImxlZnQiP2sudGFyZ2V0V2lkdGg6ay5hdFswXT09PSJyaWdodCI/LWsudGFyZ2V0V2lkdGg6MCx5PS0yKmsub2Zmc2V0WzBdLHosQTtpZihzPDApe3o9aS5sZWZ0K3YreCt5K2suY29sbGlzaW9uV2lkdGgtby1sO2lmKHo8MHx8ejxhKHMpKXtpLmxlZnQrPXYreCt5fX1lbHNlIGlmKHQ+MCl7QT1pLmxlZnQtay5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0K3YreCt5LW47aWYoQT4wfHxhKEEpPHQpe2kubGVmdCs9dit4K3l9fX0sdG9wOmZ1bmN0aW9uKGksayl7dmFyIHc9ay53aXRoaW4sbD13Lm9mZnNldC50b3Ardy5zY3JvbGxUb3Asbz13LmhlaWdodCxuPXcuaXNXaW5kb3c/dy5zY3JvbGxUb3A6dy5vZmZzZXQudG9wLHE9aS50b3Atay5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3Ascz1xLW4sdD1xK2suY29sbGlzaW9uSGVpZ2h0LW8tbix2PWsubXlbMV09PT0idG9wIix4PXY/LWsuZWxlbUhlaWdodDprLm15WzFdPT09ImJvdHRvbSI/ay5lbGVtSGVpZ2h0OjAseT1rLmF0WzFdPT09InRvcCI/ay50YXJnZXRIZWlnaHQ6ay5hdFsxXT09PSJib3R0b20iPy1rLnRhcmdldEhlaWdodDowLHo9LTIqay5vZmZzZXRbMV0sQSxCO2lmKHM8MCl7Qj1pLnRvcCt4K3kreitrLmNvbGxpc2lvbkhlaWdodC1vLWw7aWYoKGkudG9wK3greSt6KT5zJiYoQjwwfHxCPGEocykpKXtpLnRvcCs9eCt5K3p9fWVsc2UgaWYodD4wKXtBPWkudG9wLWsuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wK3greSt6LW47aWYoKGkudG9wK3greSt6KT50JiYoQT4wfHxhKEEpPHQpKXtpLnRvcCs9eCt5K3p9fX19LGZsaXBmaXQ6e2xlZnQ6ZnVuY3Rpb24oKXskLnVpLnBvc2l0aW9uLmZsaXAubGVmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7JC51aS5wb3NpdGlvbi5maXQubGVmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHRvcDpmdW5jdGlvbigpeyQudWkucG9zaXRpb24uZmxpcC50b3AuYXBwbHkodGhpcyxhcmd1bWVudHMpOyQudWkucG9zaXRpb24uZml0LnRvcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX07KGZ1bmN0aW9uKCl7dmFyIHQsayxsLG8saSxuPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0scT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobj8iZGl2IjoiYm9keSIpO2w9e3Zpc2liaWxpdHk6ImhpZGRlbiIsd2lkdGg6MCxoZWlnaHQ6MCxib3JkZXI6MCxtYXJnaW46MCxiYWNrZ3JvdW5kOiJub25lIn07aWYobil7JC5leHRlbmQobCx7cG9zaXRpb246ImFic29sdXRlIixsZWZ0OiItMTAwMHB4Iix0b3A6Ii0xMDAwcHgifSl9Zm9yKGkgaW4gbCl7dC5zdHlsZVtpXT1sW2ldfXQuYXBwZW5kQ2hpbGQocSk7az1ufHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7ay5pbnNlcnRCZWZvcmUodCxrLmZpcnN0Q2hpbGQpO3Euc3R5bGUuY3NzVGV4dD0icG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAxMC43NDMyMjIycHg7IjtvPSQocSkub2Zmc2V0KCkubGVmdDskLnN1cHBvcnQub2Zmc2V0RnJhY3Rpb25zPW8+MTAmJm88MTE7dC5pbm5lckhUTUw9IiI7ay5yZW1vdmVDaGlsZCh0KX0pKCl9KGpRdWVyeSkpOw0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCihmdW5jdGlvbigpe2lmKCF3aW5kb3cualF1ZXJ5KXt0aHJvdyBuZXcgRXJyb3IoIlNBUFVJNSByZXF1aXJlcyBqUXVlcnkgYXMgYSBwcmVyZXF1aXNpdGUgKD49IHZlcnNpb24gMS43KSIpfWlmKGpRdWVyeS5zYXApe3JldHVybn12YXIgXz13aW5kb3c7dmFyIGE9W107ZnVuY3Rpb24gYihsLG0pe2EucHVzaCh7bGV2ZWw6bCxtZXNzYWdlOm19KX12YXIgYz11bmRlZmluZWQ7dmFyIHI9L15bMC05XSsoPzpcLihbMC05XSspKD86XC4oWzAtOV0rKSk/KT8oLiopJC87ZnVuY3Rpb24gVihNLGksbCxzKXtpZihNIGluc3RhbmNlb2YgVil7cmV0dXJuIE19aWYoISh0aGlzIGluc3RhbmNlb2YgVikpe3JldHVybiBuZXcgVihNLGksbCxzKX12YXIgbT0odHlwZW9mIE09PT0ic3RyaW5nIj9yLmV4ZWMoTSk6KGpRdWVyeS5pc0FycmF5KE0pP006YXJndW1lbnRzKSl8fFtdO2Z1bmN0aW9uIG4odil7dj1wYXJzZUludCh2LDEwKTtyZXR1cm4gaXNOYU4odik/MDp2fU09bihtWzBdKTtpPW4obVsxXSk7bD1uKG1bMl0pO3M9U3RyaW5nKG1bM118fCIiKTt0aGlzLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIE0rIi4iK2krIi4iK2wrc307dGhpcy5nZXRNYWpvcj1mdW5jdGlvbigpe3JldHVybiBNfTt0aGlzLmdldE1pbm9yPWZ1bmN0aW9uKCl7cmV0dXJuIGl9O3RoaXMuZ2V0UGF0Y2g9ZnVuY3Rpb24oKXtyZXR1cm4gbH07dGhpcy5nZXRTdWZmaXg9ZnVuY3Rpb24oKXtyZXR1cm4gc307dGhpcy5jb21wYXJlVG89ZnVuY3Rpb24oKXt2YXIgbz1WLmFwcGx5KHdpbmRvdyxhcmd1bWVudHMpO3JldHVybiBNLW8uZ2V0TWFqb3IoKXx8aS1vLmdldE1pbm9yKCl8fGwtby5nZXRQYXRjaCgpfHwoKHM8by5nZXRTdWZmaXgoKSk/LTE6KHM9PT1vLmdldFN1ZmZpeCgpKT8wOjEpfX1WLnByb3RvdHlwZS5pblJhbmdlPWZ1bmN0aW9uKG0sTSl7cmV0dXJuIHRoaXMuY29tcGFyZVRvKG0pPj0wJiZ0aGlzLmNvbXBhcmVUbyhNKTwwfTt2YXIgaj1WKGpRdWVyeS5mbi5qcXVlcnkpO2lmKCFqLmluUmFuZ2UoIjEuNy4wIiwiMi4wLjAiKSl7YigiZXJyb3IiLCJTQVBVSTUgcmVxdWlyZXMgYSBqUXVlcnkgdmVyc2lvbiBvZiAxLjcgb3IgaGlnaGVyLCBidXQgbG93ZXIgdGhhbiAyLjA7IGN1cnJlbnQgdmVyc2lvbiBpcyAiK2pRdWVyeS5mbi5qcXVlcnkpfWlmKCFqUXVlcnkuYnJvd3Nlcil7alF1ZXJ5LmJyb3dzZXI9KGZ1bmN0aW9uKHUpe3ZhciBpPS8od2Via2l0KVsgXC9dKFtcdy5dKykvLGw9LyhvcGVyYSkoPzouKnZlcnNpb24pP1sgXC9dKFtcdy5dKykvLG09Lyhtc2llKSAoW1x3Ll0rKS8sbj0vKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vLHU9dS50b0xvd2VyQ2FzZSgpLG89aS5leGVjKHUpfHxsLmV4ZWModSl8fG0uZXhlYyh1KXx8dS5pbmRleE9mKCJjb21wYXRpYmxlIik8MCYmbi5leGVjKHUpfHxbXSxxPXt9O2lmKG9bMV0pe3Fbb1sxXV09dHJ1ZTtxLnZlcnNpb249b1syXXx8IjAiO2lmKHEud2Via2l0KXtxLnNhZmFyaT10cnVlfX1yZXR1cm4gcX0od2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpKX1pZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3Jlcil7alF1ZXJ5LnN1cHBvcnQuY29ycz10cnVlfXZhciBkPShmdW5jdGlvbigpe3ZhciB0LHUsUixpPS9eKC4qXC8pP2Rvd25sb2FkXC9jb25maWd1cmF0b3JbXC9cP10vLGw9L14oLipcLyk/KHNhcC11aS0oY29yZXxjdXN0b218Ym9vdHxtZXJnZWQpKC0uKik/KVwuanMoWz8jXXwkKS8sbj0vXiguKlwvKT9yZXNvdXJjZXNcLy87alF1ZXJ5KCJzY3JpcHRbc3JjXSIpLmVhY2goZnVuY3Rpb24oKXt2YXIgcz10aGlzLmdldEF0dHJpYnV0ZSgic3JjIiksbTtpZihtPXMubWF0Y2goaSkpe3Q9dGhpczt1PXM7Uj0obVsxXXx8IiIpKyJyZXNvdXJjZXMvIjtyZXR1cm4gZmFsc2V9ZWxzZSBpZihtPXMubWF0Y2gobCkpe3Q9dGhpczt1PXM7Uj1tWzFdfHwiIjtyZXR1cm4gZmFsc2V9ZWxzZSBpZih0aGlzLmlkPT0nc2FwLXVpLWJvb3RzdHJhcCcmJihtPXMubWF0Y2gobikpKXt0PXRoaXM7dT1zO1I9bVswXTtyZXR1cm4gZmFsc2V9fSk7cmV0dXJue3RhZzp0LHVybDp1LHJlc291cmNlUm9vdDpSfX0pKCk7KGZ1bmN0aW9uKCl7aWYoL3NhcC1ib290c3RyYXAtZGVidWc9KHRydWV8eHxYKS8udGVzdChsb2NhdGlvbi5zZWFyY2gpKXt3aW5kb3dbInNhcC11aS1iUmVzdGFydCJdPWZhbHNlO3dpbmRvd1sic2FwLXVpLXNSZXN0YXJ0VXJsIl09Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9zYXB1aTUvcmVzb3VyY2VzL3NhcC11aS1jb3JlLmpzIjt2YXIgbD1mdW5jdGlvbigpe3ZhciBzPWQudGFnLG09IjxzY3JpcHQgc3JjPVwiIit3aW5kb3dbInNhcC11aS1zUmVzdGFydFVybCJdKyJcIiI7alF1ZXJ5LmVhY2gocy5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGksQSl7aWYoQS5ub2RlTmFtZS5pbmRleE9mKCJkYXRhLXNhcC11aS0iKT09MCl7bSs9IiAiK0Eubm9kZU5hbWUrIj1cIiIrQS5ub2RlVmFsdWUrIlwiIn19KTttKz0iPjwvc2NyaXB0PiI7cy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHMpO2pRdWVyeSgiI3NhcC11aS1ib290c3RyYXAtY2FjaGVidXN0ZWQiKS5yZW1vdmUoKTt3aW5kb3dbInNhcC11aS1jb25maWciXSYmd2luZG93WyJzYXAtdWktY29uZmlnIl0ucmVzb3VyY2VSb290cyYmKHdpbmRvd1sic2FwLXVpLWNvbmZpZyJdLnJlc291cmNlUm9vdHNbIiJdPXVuZGVmaW5lZCk7ZG9jdW1lbnQud3JpdGUobSk7dmFyIFI9bmV3IEVycm9yKCJBYm9ydGluZyBVSTUgYm9vdHN0cmFwIGFuZCByZXN0YXJ0aW5nIGZyb206ICIrd2luZG93WyJzYXAtdWktc1Jlc3RhcnRVcmwiXSk7Ui5uYW1lPSJSZXN0YXJ0IjtkZWxldGUgd2luZG93WyJzYXAtdWktYlJlc3RhcnQiXTtkZWxldGUgd2luZG93WyJzYXAtdWktc1Jlc3RhcnRVcmwiXTt0aHJvdyBSfTtkZWJ1Z2dlcjtpZih3aW5kb3dbInNhcC11aS1iUmVzdGFydCJdKXtsKCl9fX0pKCk7KGZ1bmN0aW9uKCl7dmFyIEQ9L3NhcC11aS1kZWJ1Zz0odHJ1ZXx4fFgpLy50ZXN0KGxvY2F0aW9uLnNlYXJjaCksaT13aW5kb3dbInNhcC11aS1vcHRpbWl6ZWQiXTt0cnl7RD1EfHwod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCJzYXAtdWktZGVidWciKT09IlgiKX1jYXRjaChlKXt9d2luZG93WyJzYXAtdWktZGVidWciXT1EO2lmKC8tZGJnXC5qcyhbPyNdfCQpLy50ZXN0KGQudXJsKSl7d2luZG93WyJzYXAtdWktbG9hZGRiZyJdPXRydWU7d2luZG93WyJzYXAtdWktZGVidWciXT10cnVlfWlmKGkmJkQpe3ZhciBzPWQudXJsLnJlcGxhY2UoL1wvKD86c2FwLXVpLWNhY2hlYnVzdGVyXC8pPyhbXlwvXSspXC5qcy8sIi8kMS1kYmcuanMiKTt3aW5kb3dbInNhcC11aS1vcHRpbWl6ZWQiXT1mYWxzZTt3aW5kb3dbInNhcC11aS1sb2FkZGJnIl09dHJ1ZTtkb2N1bWVudC53cml0ZSgiPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgc3JjPVwiIitzKyJcIj48L3NjcmlwdD4iKTt2YXIgUj1uZXcgRXJyb3IoIkFib3J0aW5nIFVJNSBib290c3RyYXAgYW5kIHJlc3RhcnRpbmcgZnJvbTogIitzKTtSLm5hbWU9IlJlc3RhcnQiO3Rocm93IFJ9fSkoKTt2YXIgQz1fWyJzYXAtdWktY29uZmlnIl09KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihvKXtqUXVlcnkuZWFjaChvLGZ1bmN0aW9uKGksdil7dmFyIG09aS50b0xvd2VyQ2FzZSgpO2lmKCFvLmhhc093blByb3BlcnR5KG0pKXtvW21dPXY7ZGVsZXRlIG9baV19fSk7cmV0dXJuIG99dmFyIHM9ZC50YWcsbD1fWyJzYXAtdWktY29uZmlnIl0scT0ic2FwLXVpLWNvbmZpZy5qc29uIjtpZih0eXBlb2YgbD09PSJzdHJpbmciKXtiKCJ3YXJuaW5nIiwiTG9hZGluZyBleHRlcm5hbCBib290c3RyYXAgY29uZmlndXJhdGlvbiBmcm9tIFwiIitsKyJcIi4gVGhpcyBpcyBhIGRlc2lnbiB0aW1lIGZlYXR1cmUgYW5kIG5vdCBmb3IgcHJvZHVjdGl2ZSB1c2FnZSEiKTtpZihsIT09cSl7Yigid2FybmluZyIsIlRoZSBleHRlcm5hbCBib290c3RyYXAgY29uZmlndXJhdGlvbiBmaWxlIHNob3VsZCBiZSBuYW1lZCBcIiIrcSsiXCIhIil9alF1ZXJ5LmFqYXgoe3VybDpsLGRhdGFUeXBlOidqc29uJyxhc3luYzpmYWxzZSxzdWNjZXNzOmZ1bmN0aW9uKEQsVCxpKXtsPUR9LGVycm9yOmZ1bmN0aW9uKGksVCxvKXtiKCJlcnJvciIsIkxvYWRpbmcgZXh0ZXJuYWxpemVkIGJvb3RzdHJhcCBjb25maWd1cmF0aW9uIGZyb20gXCIiK2wrIlwiIGZhaWxlZCEgUmVhc29uOiAiK28rIiEiKTtsPXVuZGVmaW5lZH19KX1sPW4obHx8e30pO2wucmVzb3VyY2Vyb290cz1sLnJlc291cmNlcm9vdHN8fHt9O2wudGhlbWVyb290cz1sLnRoZW1lcm9vdHN8fHt9O2wucmVzb3VyY2Vyb290c1snJ109bC5yZXNvdXJjZXJvb3RzWycnXXx8ZC5yZXNvdXJjZVJvb3Q7bFsneHgtbG9hZGFsbG1vZGUnXT0vKF58XC8pKHNhcC0/dWk1fFteXC9dKy1hbGwpLmpzKFs/I118JCkvLnRlc3QoZC51cmwpO2lmKHMpe3ZhciB0PXMuZ2V0QXR0cmlidXRlKCJkYXRhLXNhcC11aS1jb25maWciKTtpZih0KXt0cnl7alF1ZXJ5LmV4dGVuZChsLG4oKG5ldyBGdW5jdGlvbigicmV0dXJuIHsiK3QrIn07IikpKCkpKX1jYXRjaChlKXtiKCJlcnJvciIsImZhaWxlZCB0byBwYXJzZSBkYXRhLXNhcC11aS1jb25maWcgYXR0cmlidXRlOiAiKyhlLm1lc3NhZ2V8fGUpKX19alF1ZXJ5LmVhY2gocy5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGksbyl7dmFyIG09by5uYW1lLm1hdGNoKC9eZGF0YS1zYXAtdWktKC4qKSQvKTtpZihtKXttPW1bMV0udG9Mb3dlckNhc2UoKTtpZihtPT09J3Jlc291cmNlcm9vdHMnKXtqUXVlcnkuZXh0ZW5kKGxbbV0salF1ZXJ5LnBhcnNlSlNPTihvLnZhbHVlKSl9ZWxzZSBpZihtPT09J3RoZW1lLXJvb3RzJyl7alF1ZXJ5LmV4dGVuZChsLnRoZW1lcm9vdHMsalF1ZXJ5LnBhcnNlSlNPTihvLnZhbHVlKSl9ZWxzZSBpZihtIT09J2NvbmZpZycpe2xbbV09by52YWx1ZX19fSl9cmV0dXJuIGx9KCkpO2lmKEMubm9jb25mbGljdD09PXRydWV8fEMubm9jb25mbGljdD09PSJ0cnVlInx8Qy5ub2NvbmZsaWN0PT09IngiKXtqUXVlcnkubm9Db25mbGljdCgpfWpRdWVyeS5zYXA9e307alF1ZXJ5LnNhcC5WZXJzaW9uPVY7alF1ZXJ5LnNhcC5kZWJ1Zz1mdW5jdGlvbihpKXtpZighd2luZG93LmxvY2FsU3RvcmFnZSl7cmV0dXJuIG51bGx9ZnVuY3Rpb24gbCh1KXthbGVydCgiVXNhZ2Ugb2YgZGVidWcgc291cmNlcyBpcyAiKyh1PyJvbiI6Im9mZiIpKyIgbm93LlxuRm9yIHRoZSBjaGFuZ2UgdG8gdGFrZSBlZmZlY3QsIHlvdSBuZWVkIHRvIHJlbG9hZCB0aGUgcGFnZS4iKX07aWYoaT09PXRydWUpe3dpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgic2FwLXVpLWRlYnVnIiwiWCIpO2wodHJ1ZSl9ZWxzZSBpZihpPT09ZmFsc2Upe3dpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgic2FwLXVpLWRlYnVnIik7bChmYWxzZSl9cmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgic2FwLXVpLWRlYnVnIik9PSJYIn07alF1ZXJ5LnNhcC5zdGF0aXN0aWNzPWZ1bmN0aW9uKGkpe2lmKCF3aW5kb3cubG9jYWxTdG9yYWdlKXtyZXR1cm4gbnVsbH1mdW5jdGlvbiBsKHUpe2FsZXJ0KCJVc2FnZSBvZiBHYXRld2F5IHN0YXRpc3RpY3MgIisodT8ib24iOiJvZmYiKSsiIG5vdy5cbkZvciB0aGUgY2hhbmdlIHRvIHRha2UgZWZmZWN0LCB5b3UgbmVlZCB0byByZWxvYWQgdGhlIHBhZ2UuIil9O2lmKGk9PT10cnVlKXt3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oInNhcC11aS1zdGF0aXN0aWNzIiwiWCIpO2wodHJ1ZSl9ZWxzZSBpZihpPT09ZmFsc2Upe3dpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgic2FwLXVpLXN0YXRpc3RpY3MiKTtsKGZhbHNlKX1yZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCJzYXAtdWktc3RhdGlzdGljcyIpPT0iWCJ9OyhmdW5jdGlvbigpe3ZhciBGPTAsbD0xLFc9MixJPTMsRD00LFQ9NSxzPSh3aW5kb3cudG9wPT13aW5kb3cpPyIiOiJbIit3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKS5zbGljZSgtMSlbMF0rIl0gIixMPVtdLE09eycnOmx9LG89bnVsbDtmdW5jdGlvbiBuKGksdyl7cmV0dXJuKCIwMDAiK1N0cmluZyhpKSkuc2xpY2UoLXcpfWZ1bmN0aW9uIHEoaSl7cmV0dXJuKCFpfHxpc05hTihNW2ldKSk/TVsnJ106TVtpXX1mdW5jdGlvbiB0KCl7aWYoIW8pe289e2xpc3RlbmVyczpbXSxvbkxvZ0VudHJ5OmZ1bmN0aW9uKG0pe2Zvcih2YXIgaT0wO2k8by5saXN0ZW5lcnMubGVuZ3RoO2krKyl7aWYoby5saXN0ZW5lcnNbaV0ub25Mb2dFbnRyeSl7by5saXN0ZW5lcnNbaV0ub25Mb2dFbnRyeShtKX19fSxhdHRhY2g6ZnVuY3Rpb24oaSxtKXtpZihtKXtvLmxpc3RlbmVycy5wdXNoKG0pO2lmKG0ub25BdHRhY2hUb0xvZyl7bS5vbkF0dGFjaFRvTG9nKGkpfX19LGRldGFjaDpmdW5jdGlvbihtLHYpe2Zvcih2YXIgaT0wO2k8by5saXN0ZW5lcnMubGVuZ3RoO2krKyl7aWYoby5saXN0ZW5lcnNbaV09PT12KXtpZih2Lm9uRGV0YWNoRnJvbUxvZyl7di5vbkRldGFjaEZyb21Mb2cobSl9by5saXN0ZW5lcnMuc3BsaWNlKGksMSk7cmV0dXJufX19fX1yZXR1cm4gb31mdW5jdGlvbiB1KGksbSx2LHcpe2lmKGk8PXEodykpe3ZhciBOPW5ldyBEYXRlKCkseT17dGltZTpuKE4uZ2V0SG91cnMoKSwyKSsiOiIrbihOLmdldE1pbnV0ZXMoKSwyKSsiOiIrbihOLmdldFNlY29uZHMoKSwyKSxkYXRlOm4oTi5nZXRGdWxsWWVhcigpLDQpKyItIituKE4uZ2V0TW9udGgoKSsxLDIpKyItIituKE4uZ2V0RGF0ZSgpLDIpLHRpbWVzdGFtcDpOLmdldFRpbWUoKSxsZXZlbDppLG1lc3NhZ2U6U3RyaW5nKG18fCIiKSxkZXRhaWxzOlN0cmluZyh2fHwiIiksY29tcG9uZW50OlN0cmluZyh3fHwiIil9O0wucHVzaCh5KTtpZihvKXtvLm9uTG9nRW50cnkoeSl9aWYod2luZG93LmNvbnNvbGUpe3ZhciB6PXkuZGF0ZSsiICIreS50aW1lKyIgIitzK3kubWVzc2FnZSsiIC0gIit5LmRldGFpbHMrIiAiK3kuY29tcG9uZW50O3N3aXRjaChpKXtjYXNlIEY6Y2FzZSBsOmNvbnNvbGUuZXJyb3Ioeik7YnJlYWs7Y2FzZSBXOmNvbnNvbGUud2Fybih6KTticmVhaztjYXNlIEk6Y29uc29sZS5pbmZvP2NvbnNvbGUuaW5mbyh6KTpjb25zb2xlLmxvZyh6KTticmVhaztjYXNlIEQ6Y29uc29sZS5kZWJ1Zz9jb25zb2xlLmRlYnVnKHopOmNvbnNvbGUubG9nKHopO2JyZWFrO2Nhc2UgVDpjb25zb2xlLnRyYWNlP2NvbnNvbGUudHJhY2Uoeik6Y29uc29sZS5sb2coeik7YnJlYWt9fXJldHVybiB5fX1mdW5jdGlvbiB4KGkpe3RoaXMuZmF0YWw9ZnVuY3Rpb24obSx2LHcpe3UoRixtLHYsd3x8aSk7cmV0dXJuIHRoaXN9O3RoaXMuZXJyb3I9ZnVuY3Rpb24gZXJyb3IobSx2LHcpe3UobCxtLHYsd3x8aSk7cmV0dXJuIHRoaXN9O3RoaXMud2FybmluZz1mdW5jdGlvbiB3YXJuaW5nKG0sdix3KXt1KFcsbSx2LHd8fGkpO3JldHVybiB0aGlzfTt0aGlzLmluZm89ZnVuY3Rpb24gaW5mbyhtLHYsdyl7dShJLG0sdix3fHxpKTtyZXR1cm4gdGhpc307dGhpcy5kZWJ1Zz1mdW5jdGlvbiBkZWJ1ZyhtLHYsdyl7dShELG0sdix3fHxpKTtyZXR1cm4gdGhpc307dGhpcy50cmFjZT1mdW5jdGlvbiB0cmFjZShtLHYsdyl7dShULG0sdix3fHxpKTtyZXR1cm4gdGhpc307dGhpcy5zZXRMZXZlbD1mdW5jdGlvbiBzZXRMZXZlbChtLHcpe3c9d3x8aXx8Jyc7TVt3XT1tO3ZhciBCPVtdO2pRdWVyeS5lYWNoKGpRdWVyeS5zYXAubG9nLkxvZ0xldmVsLGZ1bmN0aW9uKHksdil7Qlt2XT15fSk7dShJLCJDaGFuZ2luZyBsb2cgbGV2ZWwgIisodz8iZm9yICciK3crIicgIjoiIikrInRvICIrQlttXSwiIiwialF1ZXJ5LnNhcC5sb2ciKTtyZXR1cm4gdGhpc307dGhpcy5nZXRMZXZlbD1mdW5jdGlvbiBnZXRMZXZlbChtKXtyZXR1cm4gcShtfHxpKX07dGhpcy5pc0xvZ2dhYmxlPWZ1bmN0aW9uKG0sdil7cmV0dXJuKG09PW51bGw/RDptKTw9cSh2fHxpKX19alF1ZXJ5LnNhcC5sb2c9alF1ZXJ5LmV4dGVuZChuZXcgeCgpLHtMZXZlbDp7Tk9ORTpGLTEsRkFUQUw6RixFUlJPUjpsLFdBUk5JTkc6VyxJTkZPOkksREVCVUc6RCxUUkFDRTpULEFMTDooVCsxKX0sZ2V0TG9nZ2VyOmZ1bmN0aW9uKGksbSl7aWYoIWlzTmFOKG0pJiZNW2ldPT1udWxsKXtNW2ldPW19cmV0dXJuIG5ldyB4KGkpfSxnZXRMb2dFbnRyaWVzOmZ1bmN0aW9uKCl7cmV0dXJuIEwuc2xpY2UoKX0sYWRkTG9nTGlzdGVuZXI6ZnVuY3Rpb24obyl7dCgpLmF0dGFjaCh0aGlzLG8pO3JldHVybiB0aGlzfSxyZW1vdmVMb2dMaXN0ZW5lcjpmdW5jdGlvbihvKXt0KCkuZGV0YWNoKHRoaXMsbyk7cmV0dXJuIHRoaXN9fSk7alF1ZXJ5LnNhcC5sb2cuTG9nTGV2ZWw9alF1ZXJ5LnNhcC5sb2cuTGV2ZWw7alF1ZXJ5LnNhcC5sb2cuZ2V0TG9nPWpRdWVyeS5zYXAubG9nLmdldExvZ0VudHJpZXM7alF1ZXJ5LnNhcC5hc3NlcnQ9ZnVuY3Rpb24oUixtKXtpZighUil7aWYod2luZG93LmNvbnNvbGUmJmNvbnNvbGUuYXNzZXJ0KXtjb25zb2xlLmFzc2VydChSLHMrbSl9ZWxzZXtqUXVlcnkuc2FwLmxvZy5kZWJ1ZygiW0Fzc2VydGlvbnNdICIrbSl9fX07Qy5sb2dsZXZlbD1DLmxvZ2xldmVsfHwoZnVuY3Rpb24oKXt2YXIgbT0vKD86XD98JilzYXAtdWktbG9nKD86THwtbClldmVsPShbXiZdKikvLmV4ZWMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7cmV0dXJuIG0mJm1bMV19KCkpO2lmKEMubG9nbGV2ZWwpe2pRdWVyeS5zYXAubG9nLnNldExldmVsKGpRdWVyeS5zYXAubG9nLkxldmVsW0MubG9nbGV2ZWwudG9VcHBlckNhc2UoKV18fHBhcnNlSW50KEMubG9nbGV2ZWwsMTApKX1qUXVlcnkuc2FwLmxvZy5pbmZvKCJTQVAgTG9nZ2VyIHN0YXJ0ZWQuIik7alF1ZXJ5LmVhY2goYSxmdW5jdGlvbihpLGUpe2pRdWVyeS5zYXAubG9nW2UubGV2ZWxdKGUubWVzc2FnZSl9KTthPW51bGx9KCkpO2pRdWVyeS5zYXAuZmFjdG9yeT1mdW5jdGlvbiBmYWN0b3J5KG8pe2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9bztyZXR1cm4gRn07alF1ZXJ5LnNhcC5uZXdPYmplY3Q9ZnVuY3Rpb24gbmV3T2JqZWN0KG8pe3JldHVybiBuZXcoalF1ZXJ5LnNhcC5mYWN0b3J5KG8pKSgpfTtqUXVlcnkuc2FwLmdldHRlcj1mdW5jdGlvbiBnZXR0ZXIodil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHZ9fTtqUXVlcnkuc2FwLmdldE9iamVjdD1mdW5jdGlvbiBnZXRPYmplY3QobixOLG8pe3ZhciBPPW98fF8sbT0obnx8IiIpLnNwbGl0KCIuIiksbD1tLmxlbmd0aCxxPWlzTmFOKE4pPzA6bC1OLGk7Zm9yKGk9MDtPJiZpPGw7aSsrKXtpZighT1ttW2ldXSYmaTxxKXtPW21baV1dPXt9fU89T1ttW2ldXX1yZXR1cm4gT307alF1ZXJ5LnNhcC5zZXRPYmplY3Q9ZnVuY3Rpb24obix2LG8pe3ZhciBPPW98fF8sTj0obnx8IiIpLnNwbGl0KCIuIiksbD1OLmxlbmd0aCxpO2lmKGw+MCl7Zm9yKGk9MDtPJiZpPGwtMTtpKyspe2lmKCFPW05baV1dKXtPW05baV1dPXt9fU89T1tOW2ldXX1PW05bbC0xXV09dn19O2Z1bmN0aW9uIFMobixpLHQpe3ZhciBUPVtdLG89MCxGPTAsczt0aGlzLnN0YXJ0VGFzaz1mdW5jdGlvbihtKXt2YXIgST1ULmxlbmd0aDtUW0ldPXtuYW1lOm0sZmluaXNoZWQ6ZmFsc2V9O28rKztyZXR1cm4gSX07dGhpcy5maW5pc2hUYXNrPWZ1bmN0aW9uKEksbSl7aWYoIVRbSV18fFRbSV0uZmluaXNoZWQpe3Rocm93IG5ldyBFcnJvcigidHJ5aW5nIHRvIGZpbmlzaCBub24gZXhpc3Rpbmcgb3IgYWxyZWFkeSBmaW5pc2hlZCB0YXNrIil9VFtJXS5maW5pc2hlZD10cnVlO28tLTtpZihtPT09ZmFsc2Upe0YrK31pZihvPT09MCl7alF1ZXJ5LnNhcC5sb2cuaW5mbygiU3luYyBwb2ludCAnIituKyInIGZpbmlzaGVkICh0YXNrczoiK1QubGVuZ3RoKyIsIG9wZW46IitvKyIsIGZhaWx1cmVzOiIrRisiKSIpO2lmKHMpe2NsZWFyVGltZW91dChzKTtzPW51bGx9O2woKX19O2Z1bmN0aW9uIGwoKXtpJiZpKG8sRik7aT1udWxsfWlmKCFpc05hTih0KSl7cz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7alF1ZXJ5LnNhcC5sb2cuaW5mbygiU3luYyBwb2ludCAnIituKyInIHRpbWVkIG91dCAodGFza3M6IitULmxlbmd0aCsiLCBvcGVuOiIrbysiLCBmYWlsdXJlczoiK0YrIikiKTtsKCl9LHQpfTtqUXVlcnkuc2FwLmxvZy5pbmZvKCJTeW5jIHBvaW50ICciK24rIicgY3JlYXRlZCIrKHQ/Iih0aW1lb3V0IGFmdGVyICIrdCsiIG1zKSI6IiIpKX1qUXVlcnkuc2FwLnN5bmNQb2ludD1mdW5jdGlvbihuLGksdCl7cmV0dXJuIG5ldyBTKG4saSx0KX07dmFyIGc9KGZ1bmN0aW9uKCl7dmFyIG89alF1ZXJ5LnNhcC5sb2cuZ2V0TG9nZ2VyKCJzYXAudWkuTW9kdWxlU3lzdGVtIiwoQ1sieHgtZGVidWdNb2R1bGVMb2FkaW5nIl18fC9zYXAtdWkteHgtZGVidWcoTXwtbSlvZHVsZShMfC1sKW9hZGluZz0odHJ1ZXx4fFgpLy50ZXN0KGxvY2F0aW9uLnNlYXJjaCkpP2pRdWVyeS5zYXAubG9nLkxldmVsLkRFQlVHOmpRdWVyeS5zYXAubG9nLkxldmVsLklORk8pLHU9eycnOidyZXNvdXJjZXMvJ30sST0wLHE9LTEsTD0xLHQ9Mix2PTMsUj00LEY9NSxNPXsic2FwL3VpL3RoaXJkcGFydHkvVVJJLmpzIjp7c3RhdGU6Uix1cmw6Yyxjb250ZW50OlVSSX0sInNhcC91aS9EZXZpY2UuanMiOntzdGF0ZTpSLHVybDpjLGNvbnRlbnQ6c2FwLnVpLkRldmljZX0sImpxdWVyeS5zYXAuZ2xvYmFsLmpzIjp7c3RhdGU6Uix1cmw6Yyxjb250ZW50OmpRdWVyeX19LHc9e30sQT17J3NhcC91aS90aGlyZHBhcnR5L2Nyb3Nzcm9hZHMuanMnOnRydWUsJ3NhcC91aS90aGlyZHBhcnR5L2RhdGFqcy5qcyc6dHJ1ZSwnc2FwL3VpL3RoaXJkcGFydHkvaGFzaGVyLmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9JUHY2LmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9qcXVlcnkvanF1ZXJ5LTEuMTAuMi5qcyc6dHJ1ZSwnc2FwL3VpL3RoaXJkcGFydHkvanF1ZXJ5L2pxdWVyeS0xLjEwLjEuanMnOnRydWUsJ3NhcC91aS90aGlyZHBhcnR5L2pxdWVyeS9qcXVlcnkuMS43LjEuanMnOnRydWUsJ3NhcC91aS90aGlyZHBhcnR5L2pxdWVyeS9qcXVlcnkuMS44LjEuanMnOnRydWUsJ3NhcC91aS90aGlyZHBhcnR5L2pxdWVyeS1tb2JpbGUtY3VzdG9tLmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9sZXNzLmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9wdW55Y29kZS5qcyc6dHJ1ZSwnc2FwL3VpL3RoaXJkcGFydHkvcmVxdWlyZS5qcyc6dHJ1ZSwnc2FwL3VpL3RoaXJkcGFydHkvU2Vjb25kTGV2ZWxEb21haW5zLmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9zaWduYWxzLmpzJzp0cnVlLCdzYXAvdWkvdGhpcmRwYXJ0eS9VUkkuanMnOnRydWV9LHg9W10seT0iIix6PTUxMioxMDI0LEQ9ZG9jdW1lbnQubG9jYXRpb24uaHJlZi5yZXBsYWNlKC9cPy4qfCMuKi9nLCIiKSxCPSJmcmFnbWVudCIsRz0idmlldyIsSz17anM6W0csQiwiY29udHJvbGxlciJdLHhtbDpbRyxCXSxqc29uOltHLEJdLGh0bWw6W0csQl19LEg9bmV3IFJlZ0V4cCgiKFxcLig/OiIrSy5qcy5qb2luKCJ8IikrIikpP1xcLmpzJCIpLEosTjsoZnVuY3Rpb24oKXt2YXIgcz0iIixpPSIiO2pRdWVyeS5lYWNoKEssZnVuY3Rpb24obCxtKXtzPShzP3MrInwiOiIiKStsO2k9KGk/aSsifCI6IiIpKyIoPzooPzoiK20uam9pbigiXFwufCIpKyJcXC4pPyIrbCsiKSJ9KTtzPSJcXC4oIitzKyIpJCI7aT0iXFwuKD86IitpKyJ8W14uL10rKSQiO28uZGVidWcoImNvbnN0cnVjdGVkIHJlZ2V4cCBmb3IgZmlsZSB0eXBlcyA6IitzKTtvLmRlYnVnKCJjb25zdHJ1Y3RlZCByZWdleHAgZm9yIGZpbGUgc3ViLXR5cGVzIDoiK2kpO0o9bmV3IFJlZ0V4cChzKTtOPW5ldyBSZWdFeHAoaSl9KCkpO2Z1bmN0aW9uIE8ocyl7aWYoL15zYXBcLnVpXC50aGlyZHBhcnR5XC5qcXVlcnlcLmpxdWVyeS0vLnRlc3Qocykpe3JldHVybiJzYXAvdWkvdGhpcmRwYXJ0eS9qcXVlcnkvanF1ZXJ5LSIrcy5zbGljZSgic2FwLnVpLnRoaXJkcGFydHkuanF1ZXJ5LmpxdWVyeS0iLmxlbmd0aCl9ZWxzZSBpZigvXmpxdWVyeVwuc2FwXC4vLnRlc3Qocykpe3JldHVybiBzfXJldHVybiBzLnJlcGxhY2UoL1wuL2csIi8iKX1mdW5jdGlvbiBRKHMpe3ZhciBpO2lmKCEvXC5qcyQvLnRlc3Qocykpe3JldHVybn1zPXMuc2xpY2UoMCwtMyk7aWYoL15zYXBcL3VpXC90aGlyZHBhcnR5XC9qcXVlcnlcL2pxdWVyeS0vLnRlc3Qocykpe3JldHVybiJzYXAudWkudGhpcmRwYXJ0eS5qcXVlcnkuanF1ZXJ5LSIrcy5zbGljZSgic2FwL3VpL3RoaXJkcGFydHkvanF1ZXJ5L2pxdWVyeS0iLmxlbmd0aCl9ZWxzZSBpZigvXmpxdWVyeVwuc2FwXC4vLnRlc3Qocykpe3JldHVybiBzfXJldHVybiBzLnJlcGxhY2UoL1wvL2csIi4iKX1mdW5jdGlvbiBUKHMsaSl7dmFyICQ9cy5zcGxpdCgvXC8vKSxsLGExLGIxLG07aWYoYXJndW1lbnRzLmxlbmd0aD09PTEmJiQubGVuZ3RoPjApe209Ti5leGVjKCRbJC5sZW5ndGgtMV0pO2lmKG0pe2k9bVswXTskWyQubGVuZ3RoLTFdPSRbJC5sZW5ndGgtMV0uc2xpY2UoMCxtLmluZGV4KX1lbHNle2k9IiJ9fWZvcihsPSQubGVuZ3RoO2w+PTA7bC0tKXthMT0kLnNsaWNlKDAsbCkuam9pbignLycpO2lmKHVbYTFdKXtiMT11W2ExXTtpZihsPCQubGVuZ3RoKXtiMSs9JC5zbGljZShsKS5qb2luKCcvJyl9aWYoYjEuc2xpY2UoLTEpPT09Jy8nKXtiMT1iMS5zbGljZSgwLC0xKX1yZXR1cm4gYjErKGl8fCcnKX19fWZ1bmN0aW9uIFUocyl7dmFyIGw9LTEsaSxtLCQ7Zm9yKHZhciBtIGluIHUpeyQ9dVttXTskPSQrKCQuc2xpY2UoLTEpIT09Jy8nPyIvIjoiIik7aWYodS5oYXNPd25Qcm9wZXJ0eShtKSYmbS5sZW5ndGg+bCYmKHM9PT0kfHxzLmluZGV4T2YoJCk9PT0wKSl7bD1tLmxlbmd0aDtpPW0rKG0/Ii8iOiIiKStzLnNsaWNlKCQubGVuZ3RoKX19cmV0dXJuIGw8MD91bmRlZmluZWQ6aX1mdW5jdGlvbiBXKG0pe3ZhciBpO2k9TVttXXx8KE1bbV09e3N0YXRlOkl9KTtpZihpLnN0YXRlPkkpe3JldHVybiBpfWlmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKHkrImRlY2xhcmUgbW9kdWxlICciK20rIiciKX1pLnN0YXRlPVI7aWYoeC5sZW5ndGg9PT0wKXt4LnB1c2gobSk7aS51cmw9aS51cmx8fGN9cmV0dXJuIGl9ZnVuY3Rpb24gWChzKXt2YXIgbT1ILmV4ZWMocyksbCwkLGExLGIxLGk7aWYoIW0pe28uZXJyb3IoImNhbiBvbmx5IHJlcXVpcmUgSmF2YXNjcmlwdCBtb2R1bGUsIG5vdCAiK3MpO2ExLnN0YXRlPUY7cmV0dXJufWw9cy5zbGljZSgwLG0uaW5kZXgpOyQ9bVswXTthMT1NW3NdfHwoTVtzXT17c3RhdGU6SX0pO2lmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKHkrInJlcXVpcmUgJyIrcysiJyBvZiB0eXBlICciKyQrIiciKX1pZihhMS5zdGF0ZSE9PUkpe2lmKGExLnN0YXRlPT09cSl7YTEuc3RhdGU9dDtpZihBW3NdJiZ0eXBlb2Ygd2luZG93LmRlZmluZT09PSJmdW5jdGlvbiImJndpbmRvdy5kZWZpbmUuYW1kKXt2YXIgYzE9d2luZG93LmRlZmluZS5hbWQ7dHJ5e2RlbGV0ZSB3aW5kb3cuZGVmaW5lLmFtZDtZKHMpfWZpbmFsbHl7d2luZG93LmRlZmluZS5hbWQ9YzF9fWVsc2V7WShzKX19aWYoYTEuc3RhdGU9PT1SKXtpZihvLmlzTG9nZ2FibGUoKSl7by5kZWJ1Zyh5KyJtb2R1bGUgJyIrcysiJyBoYXMgYWxyZWFkeSBiZWVuIGxvYWRlZCAoc2tpcHBlZCkuIil9cmV0dXJuIHRoaXN9ZWxzZSBpZihhMS5zdGF0ZT09PUYpe3Rocm93IG5ldyBFcnJvcigiZm91bmQgaW4gbmVnYXRpdmUgY2FjaGU6ICciK3MrIicgZnJvbSAiK2ExLnVybCsiOiAiK2ExLmVycm9yKX1lbHNle3JldHVybiB0aGlzfX1hMS5zdGF0ZT1MO2IxPXdpbmRvd1sic2FwLXVpLWxvYWRkYmciXT9bIi1kYmciLCIiXTpbIiJdO2ZvcihpPTA7aTxiMS5sZW5ndGgmJmExLnN0YXRlIT09dDtpKyspe2ExLnVybD1UKGwsYjFbaV0rJCk7aWYoby5pc0xvZ2dhYmxlKCkpe28uZGVidWcoeSsibG9hZGluZyAiKyhiMVtpXT9iMVtpXSsiIHZlcnNpb24gb2YgIjoiIikrIiciK3MrIicgZnJvbSAnIithMS51cmwrIiciKX1qUXVlcnkuYWpheCh7dXJsOmExLnVybCxkYXRhVHlwZTondGV4dCcsYXN5bmM6ZmFsc2Usc3VjY2VzczpmdW5jdGlvbihkMSxlMSxmMSl7YTEuc3RhdGU9dDthMS5kYXRhPWQxfSxlcnJvcjpmdW5jdGlvbihkMSxlMSxmMSl7YTEuc3RhdGU9RjthMS5lcnJvcj1kMT9kMS5zdGF0dXMrIiAtICIrZDEuc3RhdHVzVGV4dDplMX19KX1pZihhMS5zdGF0ZT09PXQpe2lmKEFbc10mJnR5cGVvZiB3aW5kb3cuZGVmaW5lPT09ImZ1bmN0aW9uIiYmd2luZG93LmRlZmluZS5hbWQpe3ZhciBjMT13aW5kb3cuZGVmaW5lLmFtZDt0cnl7ZGVsZXRlIHdpbmRvdy5kZWZpbmUuYW1kO1kocyl9ZmluYWxseXt3aW5kb3cuZGVmaW5lLmFtZD1jMX19ZWxzZXtZKHMpfX1pZihhMS5zdGF0ZSE9PVIpe3Rocm93IG5ldyBFcnJvcigiZmFpbGVkIHRvIGxvYWQgJyIrcysiJyBmcm9tICIrYTEudXJsKyI6ICIrYTEuZXJyb3IpfX1mdW5jdGlvbiBZKG0pe3ZhciBpPU1bbV0scyxsLCQ7aWYoaSYmaS5zdGF0ZT09PXQmJnR5cGVvZiBpLmRhdGEhPT0idW5kZWZpbmVkIil7dHJ5e2lmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKHkrImV4ZWN1dGluZyAnIittKyInIik7cz15O3k9eSsiOiAifWkuc3RhdGU9djt4LnB1c2gobSk7aWYodHlwZW9mIGkuZGF0YT09PSJmdW5jdGlvbiIpe2kuZGF0YS5hcHBseSh3aW5kb3cpfWVsc2UgaWYoXy5leGVjU2NyaXB0JiYoIWkuZGF0YXx8aS5kYXRhLmxlbmd0aDx6KSl7dHJ5e2kuZGF0YSYmXy5leGVjU2NyaXB0KGkuZGF0YSl9Y2F0Y2goZSl7eC5wb3AoKTtqUXVlcnkuc2FwLmdsb2JhbEV2YWwoaS5kYXRhKTt0aHJvdyBlfX1lbHNle2w9VVJJKGkudXJsKTskPWwuYWJzb2x1dGVUbyhEKTtfLmV2YWwoaS5kYXRhKyJcclxuLy8jIHNvdXJjZVVSTD0iKyQpfXgucG9wKCk7aS5zdGF0ZT1SO2kuZGF0YT11bmRlZmluZWQ7aS5jb250ZW50PWkuY29udGVudHx8alF1ZXJ5LnNhcC5nZXRPYmplY3QoUShtKSk7aWYoby5pc0xvZ2dhYmxlKCkpe3k9cztvLmRlYnVnKHkrImZpbmlzaGVkIGV4ZWN1dGluZyAnIittKyInIil9fWNhdGNoKGExKXtpLnN0YXRlPUY7aS5lcnJvcj0oKGExLnRvU3RyaW5nJiZhMS50b1N0cmluZygpKXx8YTEubWVzc2FnZSkrKGExLmxpbmU/IihsaW5lICIrYTEubGluZSsiKSI6IiIpO2kuZGF0YT11bmRlZmluZWQ7aWYod2luZG93WyJzYXAtdWktZGVidWciXSYmKENbInh4LXNob3dsb2FkZXJyb3JzIl18fC9zYXAtdWkteHgtc2hvdyhMfC1sKW9hZChFfC1lKXJyb3JzPSh0cnVlfHh8WCkvLnRlc3QobG9jYXRpb24uc2VhcmNoKSkpe28uZXJyb3IoImVycm9yIHdoaWxlIGV2YWx1YXRpbmcgIittKyIsIGVtYmVkZGluZyBhZ2FpbiB2aWEgc2NyaXB0IHRhZyB0byBlbmZvcmNlIGEgc3RhY2sgdHJhY2UgKHNlZSBiZWxvdykiKTtqUXVlcnkuc2FwLmluY2x1ZGVTY3JpcHQoaS51cmwpO3JldHVybn19fX1mdW5jdGlvbiBaKGwscyl7dmFyICQ9W10saSxhMSxiMSxtO2ZvcihpPTA7aTxsLmxlbmd0aDtpKyspe2ExPWxbaV07by5kZWJ1Zyh5KyJyZXF1aXJlICciK2ExKyInIik7WChhMSsiLmpzIik7JFtpXT1NW2ExKyIuanMiXS5jb250ZW50fHxqUXVlcnkuc2FwLmdldE9iamVjdChRKGExKyIuanMiKSk7by5kZWJ1Zyh5KyJyZXF1aXJlICciK2ExKyInOiBkb25lLiIpfXMuYXBwbHkodGhpcywkKX1qUXVlcnkuc2FwLmdldE1vZHVsZVBhdGg9ZnVuY3Rpb24obSxzKXtyZXR1cm4gVChPKG0pLHMpfTtqUXVlcnkuc2FwLmdldFJlc291cmNlUGF0aD1UO2pRdWVyeS5zYXAucmVnaXN0ZXJNb2R1bGVQYXRoPWZ1bmN0aW9uIHJlZ2lzdGVyTW9kdWxlUGF0aChtLHMpe209bS5yZXBsYWNlKC9cLi9nLCIvIik7cz1zfHwnLic7alF1ZXJ5LnNhcC5yZWdpc3RlclJlc291cmNlUGF0aChtLHMpfTtqUXVlcnkuc2FwLnJlZ2lzdGVyUmVzb3VyY2VQYXRoPWZ1bmN0aW9uKHMsaSl7cz1TdHJpbmcoc3x8IiIpO2lmKGk9PW51bGwpe2RlbGV0ZSB1W3NdfWVsc2V7aT1TdHJpbmcoaSk7aWYoaS5zbGljZSgtMSkhPScvJyl7aSs9Jy8nfXVbc109aX1vLmluZm8oInJlZ2lzdGVyUmVzb3VyY2VQYXRoICgnIitzKyInLCAnIitpKyInKSIpfTtqUXVlcnkuc2FwLmlzRGVjbGFyZWQ9ZnVuY3Rpb24gaXNEZWNsYXJlZChtLGkpe209TyhtKSsiLmpzIjtyZXR1cm4gTVttXSYmKGl8fE1bbV0uc3RhdGUhPT1xKX07alF1ZXJ5LnNhcC5nZXRBbGxEZWNsYXJlZE1vZHVsZXM9ZnVuY3Rpb24oKXt2YXIgbT1bXTtqUXVlcnkuZWFjaChNLGZ1bmN0aW9uKHMsaSl7aWYoaSYmaS5zdGF0ZSE9PXEpe3ZhciBsPVEocyk7aWYobCl7bS5wdXNoKGwpfX19KTtyZXR1cm4gbX07aWYoQy5yZXNvdXJjZXJvb3RzKXtqUXVlcnkuZWFjaChDLnJlc291cmNlcm9vdHMsalF1ZXJ5LnNhcC5yZWdpc3Rlck1vZHVsZVBhdGgpfW8uaW5mbygiVVJMIHByZWZpeGVzIHNldCB0bzoiKTtmb3IodmFyIG4gaW4gdSl7by5pbmZvKCIgICIrKG4/IiciK24rIiciOiIoZGVmYXVsdCkiKSsiIDogIit1W25dKX1qUXVlcnkuc2FwLmRlY2xhcmU9ZnVuY3Rpb24obSxpKXt2YXIgcz1tO2lmKHR5cGVvZihtKT09PSJvYmplY3QiKXtzPW0ubW9kTmFtZTttPU8obS5tb2ROYW1lKSsobS50eXBlPyIuIittLnR5cGU6IiIpKyIuanMifWVsc2V7bT1PKG0pKyIuanMifVcobSk7aWYoaSE9PWZhbHNlKXtqUXVlcnkuc2FwLmdldE9iamVjdChzLDEpfXJldHVybiB0aGlzfTtqUXVlcnkuc2FwLnJlcXVpcmU9ZnVuY3Rpb24obSxsKXtpZihqUXVlcnkuaXNBcnJheShtKSYmdHlwZW9mIGw9PT0iZnVuY3Rpb24iKXtaKG0sbCl9ZWxzZSBpZihhcmd1bWVudHMubGVuZ3RoPjEpe2Zvcih2YXIgaT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2pRdWVyeS5zYXAucmVxdWlyZShhcmd1bWVudHNbaV0pfXJldHVybiB0aGlzfWlmKHR5cGVvZihtKT09PSJvYmplY3QiKXttPU8obS5tb2ROYW1lKSsobS50eXBlPyIuIittLnR5cGU6IiIpKyIuanMifWVsc2V7bT1PKG0pKyIuanMifVgobSk7cmV0dXJuIHRoaXN9O2pRdWVyeS5zYXAuX3JlcXVpcmVQYXRoPWZ1bmN0aW9uKG0pe1gobSsiLmpzIil9O3dpbmRvdy5zYXA9d2luZG93LnNhcHx8e307c2FwLnVpPXNhcC51aXx8e307c2FwLnVpLmRlZmluZT1mdW5jdGlvbihzLGwsbSwkKXt2YXIgYTE9W10sYjEsYzEsaTtpZih0eXBlb2Ygcz09PSJzdHJpbmciKXtiMT1zKyIuanMifWVsc2V7JD1tO209bDtsPXM7YjE9eFt4Lmxlbmd0aC0xXX1zPVEoYjEpO2lmKCFqUXVlcnkuaXNBcnJheShsKSl7JD1tO209bDtsPVtdfWVsc2V7dmFyIGQxPWIxLnNsaWNlKDAsMStiMS5sYXN0SW5kZXhPZignLycpKTtmb3IoaT0wO2k8bC5sZW5ndGg7aSsrKXtpZigvXlwuXC8vLnRlc3QobFtpXSkpe2xbaV09ZDErbFtpXS5zbGljZSgyKX19fWlmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKCJkZWZpbmUoIitiMSsiLCAiKyJbJyIrbC5qb2luKCInLCciKSsiJ10iKyIpIil9dmFyIGUxPVcoYjEpO1oobCxmdW5jdGlvbigpe2lmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKCJkZWZpbmUoIitiMSsiKTogY2FsbGluZyBmYWN0b3J5ICIrdHlwZW9mIG0pfWlmKCQpe2pRdWVyeS5zYXAuZ2V0T2JqZWN0KHMsMSl9aWYodHlwZW9mIG09PT0iZnVuY3Rpb24iKXtlMS5jb250ZW50PW0uYXBwbHkod2luZG93LGFyZ3VtZW50cyl9ZWxzZXtlMS5jb250ZW50PW19aWYoJCl7aWYoZTEuY29udGVudD09bnVsbCl7by5lcnJvcigibW9kdWxlICciK2IxKyInIHJldHVybmVkIG5vIGNvbnRlbnQsIGJ1dCBzaG91bGQgYmUgZXhwb3J0ZWQiKX1lbHNle2lmKG8uaXNMb2dnYWJsZSgpKXtvLmRlYnVnKCJleHBvcnRpbmcgY29udGVudCBvZiAnIitiMSsiJzogYXMgZ2xvYmFsIG9iamVjdCIpfWpRdWVyeS5zYXAuc2V0T2JqZWN0KHMsZTEuY29udGVudCl9fX0pfTtqUXVlcnkuc2FwLnByZWxvYWRNb2R1bGVzPWZ1bmN0aW9uKHMsaSxsKXt2YXIgbSwkO2lmKHdbc10pcmV0dXJuO3dbc109dHJ1ZTttPWpRdWVyeS5zYXAuZ2V0TW9kdWxlUGF0aChzLCIuanNvbiIpO28uZGVidWcoInByZWxvYWQgZmlsZSAiK3MpOyQ9bCYmbC5zdGFydFRhc2soImxvYWQgIitzKTtqUXVlcnkuYWpheCh7ZGF0YVR5cGU6Impzb24iLGFzeW5jOmksdXJsOm0sc3VjY2VzczpmdW5jdGlvbihhMSl7aWYoYTEpe2ExLnVybD1tfWpRdWVyeS5zYXAucmVnaXN0ZXJQcmVsb2FkZWRNb2R1bGVzKGExLGksbCk7bCYmbC5maW5pc2hUYXNrKCQpfSxlcnJvcjpmdW5jdGlvbihhMSxiMSxjMSl7by5lcnJvcigiZmFpbGVkIHRvIHByZWxvYWQgJyIrcysiJzogIisoYzF8fGIxKSk7bCYmbC5maW5pc2hUYXNrKCQsZmFsc2UpfX0pfTtqUXVlcnkuc2FwLnJlZ2lzdGVyUHJlbG9hZGVkTW9kdWxlcz1mdW5jdGlvbihpLGwscyl7dmFyIG09VihpLnZlcnNpb258fCIxLjAiKS5jb21wYXJlVG8oIjIuMCIpPDA7aWYoby5pc0xvZ2dhYmxlKCkpe28uZGVidWcoeSsiYWRkaW5nIHByZWxvYWRlZCBtb2R1bGVzIGZyb20gJyIraS51cmwrIiciKX1pZihpLm5hbWUpe3dbaS5uYW1lXT10cnVlfWpRdWVyeS5lYWNoKGkubW9kdWxlcyxmdW5jdGlvbigkLGExKXskPW0/TygkKSsiLmpzIjokO2lmKCFNWyRdKXtNWyRdPXtzdGF0ZTpxLHVybDppLnVybCsiLyIrJCxkYXRhOmExLGdyb3VwOmkubmFtZX19aWYoJC5tYXRjaCgvXC9saWJyYXJ5XC5qcyQvKSl7d1tRKCQpKyItcHJlbG9hZCJdPXRydWV9fSk7aWYoaS5kZXBlbmRlbmNpZXMpe2pRdWVyeS5lYWNoKGkuZGVwZW5kZW5jaWVzLGZ1bmN0aW9uKCQsYTEpe2pRdWVyeS5zYXAucHJlbG9hZE1vZHVsZXMoYTEsbCxzKX0pfX07alF1ZXJ5LnNhcC51bmxvYWRSZXNvdXJjZXM9ZnVuY3Rpb24ocyxsLG0sJCl7dmFyIGExPVtdO2lmKGw9PW51bGwpe2w9dHJ1ZX1pZihsKXtqUXVlcnkuZWFjaChNLGZ1bmN0aW9uKGksYjEpe2lmKGIxJiZiMS5ncm91cD09PXMpe2ExLnB1c2goaSl9fSk7ZGVsZXRlIHdbc119ZWxzZXtpZihNW3NdKXthMS5wdXNoKHMpfX1qUXVlcnkuZWFjaChhMSxmdW5jdGlvbihpLGIxKXt2YXIgYzE9TVtiMV07aWYoYzEmJiQmJmIxLm1hdGNoKC9cLmpzJC8pKXtqUXVlcnkuc2FwLnNldE9iamVjdChRKGIxKSx1bmRlZmluZWQpfWlmKGMxJiYobXx8YzEuc3RhdGU9PT1xKSl7ZGVsZXRlIE1bYjFdfX0pfTtqUXVlcnkuc2FwLmdldFJlc291cmNlTmFtZT1mdW5jdGlvbihtLHMpe3JldHVybiBPKG0pKyhzfHwiLmpzIil9O2pRdWVyeS5zYXAubG9hZFJlc291cmNlPWZ1bmN0aW9uKHMsbSl7dmFyIGksbCwkLGExLGIxO2lmKHR5cGVvZiBzPT09InN0cmluZyIpe209bXx8e319ZWxzZXttPXN8fHt9O3M9bS5uYW1lO2lmKCFzJiZtLnVybCl7cz1VKG0udXJsKX19bT1qUXVlcnkuZXh0ZW5kKHtmYWlsT25FcnJvcjp0cnVlfSxtKTtpPW0uZGF0YVR5cGU7aWYoaT09bnVsbCYmcyl7aT0oaT1KLmV4ZWMocykpJiZpWzFdfWw9cyYmTVtzXSYmTVtzXS5kYXRhO2lmKGwhPW51bGwpeyQ9alF1ZXJ5LmFqYXhTZXR0aW5ncy5jb252ZXJ0ZXJzWyJ0ZXh0ICIraV07aWYodHlwZW9mICQ9PT0iZnVuY3Rpb24iKXtsPSQobCl9fWVsc2V7alF1ZXJ5LmFqYXgoe3VybDphMT1tLnVybHx8VChzKSxhc3luYzpmYWxzZSxkYXRhVHlwZTppLGhlYWRlcnM6bS5oZWFkZXJzLHN1Y2Nlc3M6ZnVuY3Rpb24oYzEsZDEsZTEpe2w9YzF9LGVycm9yOmZ1bmN0aW9uKGMxLGQxLGUxKXtsPW51bGw7YjE9bmV3IEVycm9yKCJyZXNvdXJjZSAiK3MrIiBjb3VsZCBub3QgYmUgbG9hZGVkIGZyb20gIithMSsiLiBDaGVjayBmb3IgJ2ZpbGUgbm90IGZvdW5kJyBvciBwYXJzZSBlcnJvcnMuIik7YjEuc3RhdHVzPWQxO2IxLmVycm9yPWUxO2IxLnN0YXR1c0NvZGU9YzEuc3RhdHVzfX0pfWlmKGw9PW51bGwmJm0uZmFpbE9uRXJyb3Ipe3Rocm93IGIxfHxuZXcgRXJyb3IoIm5vIGRhdGEgcmV0dXJuZWQgZm9yICIrcyl9cmV0dXJuIGx9O3JldHVybiBmdW5jdGlvbigpe3JldHVybnttb2R1bGVzOk0scHJlZml4ZXM6dX19fSgpKTtmdW5jdGlvbiBmKG8pe3ZhciBpPXdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdO2lmKGkpe2kuYXBwZW5kQ2hpbGQobyl9fWpRdWVyeS5zYXAuaW5jbHVkZVNjcmlwdD1mdW5jdGlvbiBpbmNsdWRlU2NyaXB0KHUsaSxsLG0pe3ZhciBzPXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtzLnNyYz11O3MudHlwZT0idGV4dC9qYXZhc2NyaXB0IjtpZihpKXtzLmlkPWl9aWYoISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXImJnNhcC51aS5EZXZpY2UuYnJvd3Nlci52ZXJzaW9uPDkpe2lmKGwpe3Mub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYocy5yZWFkeVN0YXRlPT09ImxvYWRlZCJ8fHMucmVhZHlTdGF0ZT09PSJjb21wbGV0ZSIpe2woKTtzLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsfX19fWVsc2V7aWYobCl7alF1ZXJ5KHMpLmxvYWQobCl9aWYobSl7alF1ZXJ5KHMpLmVycm9yKG0pfX12YXIgbztpZigoaSYmKG89alF1ZXJ5LnNhcC5kb21CeUlkKGkpKSYmby50YWdOYW1lPT09IlNDUklQVCIpKXtqUXVlcnkobykucmVtb3ZlKCl9ZihzKX07alF1ZXJ5LnNhcC5pbmNsdWRlU3R5bGVTaGVldD1mdW5jdGlvbiBpbmNsdWRlU3R5bGVTaGVldCh1LEksbCxtKXt2YXIgbj1mdW5jdGlvbih1LEksbCxtKXt2YXIgTD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaW5rIik7TC50eXBlPSJ0ZXh0L2NzcyI7TC5yZWw9InN0eWxlc2hlZXQiO0wuaHJlZj11O2lmKEkpe0wuaWQ9SX1qUXVlcnkoTCkubG9hZChmdW5jdGlvbigpe2pRdWVyeShMKS5hdHRyKCJzYXAtdWktcmVhZHkiLCJ0cnVlIik7aWYobCl7bCgpfX0pO2pRdWVyeShMKS5lcnJvcihmdW5jdGlvbigpe2pRdWVyeShMKS5hdHRyKCJzYXAtdWktcmVhZHkiLCJmYWxzZSIpO2lmKG0pe20oKX19KTtyZXR1cm4gTH07dmFyIG89ZnVuY3Rpb24odSxJLGwsbSl7aWYoc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyJiZzYXAudWkuRGV2aWNlLmJyb3dzZXIudmVyc2lvbjw9OSYmZG9jdW1lbnQuc3R5bGVTaGVldHMubGVuZ3RoPj0yOSl7dmFyIHM9VVJJLnBhcnNlKGRvY3VtZW50LlVSTCkucGF0aDtqUXVlcnkuc2FwLmxvZy53YXJuaW5nKCJTdGx5ZVNoZWV0ICIrSSsiIG5vdCBhZGRlZCBhcyBMSU5LIGJlY2F1c2Ugb2YgSUUgbGltaXRzIix1LCJqUXVlcnkuc2FwLmluY2x1ZGVTdHlsZVNoZWV0Iik7aWYoIXRoaXMuX29JRVN0eWxlU2hlZXQpe3RoaXMuX29JRVN0eWxlU2hlZXQ9ZG9jdW1lbnQuY3JlYXRlU3R5bGVTaGVldCgpO3RoaXMuX29JRVN0eWxlU2hlZXQuYWRkSW1wb3J0KFVSSSh1KS5hYnNvbHV0ZVRvKHMpKX1lbHNle3ZhciBBPWZhbHNlO2Zvcih2YXIgaT0wO2k8dGhpcy5fb0lFU3R5bGVTaGVldC5pbXBvcnRzLmxlbmd0aDtpKyspe3ZhciBxPXRoaXMuX29JRVN0eWxlU2hlZXQuaW1wb3J0c1tpXTtpZihxLmltcG9ydHMubGVuZ3RoPDMwKXtxLmFkZEltcG9ydChVUkkodSkuYWJzb2x1dGVUbyhzKSk7QT10cnVlO2JyZWFrfX1pZighQSl7dGhpcy5fb0lFU3R5bGVTaGVldC5hZGRJbXBvcnQoVVJJKHUpLmFic29sdXRlVG8ocykpfX19ZWxzZXtmKG4odSxJLGwsbSkpfX07dmFyIE8sUjtpZigoSSYmKE89alF1ZXJ5LnNhcC5kb21CeUlkKEkpKSYmKFI9Ty50YWdOYW1lPT09IkxJTksiJiZPLnJlbD09PSJzdHlsZXNoZWV0IikpfHx3aW5kb3cuZG9jdW1lbnQuYm9keSl7aWYoUil7aWYoTy5nZXRBdHRyaWJ1dGUoImhyZWYiKSE9PXV8fGx8fG0pe2pRdWVyeShPKS5yZXBsYWNlV2l0aChuKHUsSSxsLG0pKX19ZWxzZXtvKHUsSSxsLG0pfX1lbHNle28odSxJLGwsbSl9fTtpZighKEMucHJvZHVjdGl2ZT09PXRydWV8fEMucHJvZHVjdGl2ZT09PSJ0cnVlInx8Qy5wcm9kdWN0aXZlPT09IngiKSl7alF1ZXJ5KGZ1bmN0aW9uKCl7alF1ZXJ5KGRvY3VtZW50LmJvZHkpLmtleWRvd24oZnVuY3Rpb24oZSl7aWYoZS5rZXlDb2RlPT04MCYmZS5zaGlmdEtleSYmZS5hbHRLZXkmJmUuY3RybEtleSl7dHJ5e2pRdWVyeS5zYXAucmVxdWlyZSgic2FwLnVpLmRlYnVnLlRlY2huaWNhbEluZm8iKX1jYXRjaChlKXtyZXR1cm59c2FwLnVpLmRlYnVnLlRlY2huaWNhbEluZm8ub3BlbihmdW5jdGlvbigpe3ZhciBpPWcoKTtyZXR1cm57bW9kdWxlczppLm1vZHVsZXMscHJlZml4ZXM6aS51cmxQcmVmaXhlcyxjb25maWc6Q319KX19KX0pO2pRdWVyeShmdW5jdGlvbigpe2pRdWVyeShkb2N1bWVudC5ib2R5KS5rZXlkb3duKGZ1bmN0aW9uKGUpe2lmKGUua2V5Q29kZT09ODMmJmUuc2hpZnRLZXkmJmUuYWx0S2V5JiZlLmN0cmxLZXkpe3RyeXtqUXVlcnkuc2FwLnJlcXVpcmUoInNhcC51aS5jb3JlLnN1cHBvcnQuU3VwcG9ydCIpO3ZhciBzPXNhcC51aS5jb3JlLnN1cHBvcnQuU3VwcG9ydC5nZXRTdHViKCk7aWYocy5nZXRUeXBlKCkhPXNhcC51aS5jb3JlLnN1cHBvcnQuU3VwcG9ydC5TdHViVHlwZS5BUFBMSUNBVElPTil7cmV0dXJufXMub3BlblN1cHBvcnRUb29sKCl9Y2F0Y2goZSl7fX19KX0pfWlmKC9zYXAtdWkteHgtZTJlLXRyYWNlPSh0cnVlfHh8WCkvLnRlc3QobG9jYXRpb24uc2VhcmNoKSl7alF1ZXJ5LnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5zdXBwb3J0LnRyYWNlLkUyZVRyYWNlTGliIisiIil9aWYoIWpRdWVyeS5zdXBwb3J0KXtqUXVlcnkuc3VwcG9ydD17fX1qUXVlcnkuZXh0ZW5kKGpRdWVyeS5zdXBwb3J0LHt0b3VjaDoib250b3VjaGVuZCJpbiBkb2N1bWVudH0pO3ZhciBwPVsiV2Via2l0IiwibXMiLCJNb3oiXTt2YXIgaD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGU7dmFyIGs9ZnVuY3Rpb24obCxtKXtpZihqUXVlcnkuc3VwcG9ydFtsXT09PXVuZGVmaW5lZCl7aWYoaFttXSE9PXVuZGVmaW5lZCl7alF1ZXJ5LnN1cHBvcnRbbF09dHJ1ZTtpZihtPT09ImJveEZsZXgifHxtPT09ImZsZXhPcmRlciJ8fG09PT0iZmxleEdyb3ciKXtqUXVlcnkuc3VwcG9ydC5mbGV4Qm94UHJlZml4ZWQ9ZmFsc2V9cmV0dXJufWVsc2V7bT1tLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK20uc2xpY2UoMSk7Zm9yKHZhciBpIGluIHApe2lmKGhbcFtpXSttXSE9PXVuZGVmaW5lZCl7alF1ZXJ5LnN1cHBvcnRbbF09dHJ1ZTtyZXR1cm59fX1qUXVlcnkuc3VwcG9ydFtsXT1mYWxzZX19O2soImNzc1RyYW5zZm9ybXMiLCJ0cmFuc2Zvcm0iKTtrKCJjc3NUcmFuc2Zvcm1zM2QiLCJwZXJzcGVjdGl2ZSIpO2soImNzc1RyYW5zaXRpb25zIiwidHJhbnNpdGlvbiIpO2soImNzc0FuaW1hdGlvbnMiLCJhbmltYXRpb25OYW1lIik7aWYoalF1ZXJ5LnN1cHBvcnQuY3NzR3JhZGllbnRzPT09dW5kZWZpbmVkKXt2YXIgRT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxoPUUuc3R5bGU7dHJ5e2guYmFja2dyb3VuZEltYWdlPSJsaW5lYXItZ3JhZGllbnQobGVmdCB0b3AsIHJlZCwgd2hpdGUpIjtoLmJhY2tncm91bmRJbWFnZT0iLW1vei1saW5lYXItZ3JhZGllbnQobGVmdCB0b3AsIHJlZCwgd2hpdGUpIjtoLmJhY2tncm91bmRJbWFnZT0iLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCB0b3AsIHJlZCwgd2hpdGUpIjtoLmJhY2tncm91bmRJbWFnZT0iLW1zLWxpbmVhci1ncmFkaWVudChsZWZ0IHRvcCwgcmVkLCB3aGl0ZSkiO2guYmFja2dyb3VuZEltYWdlPSItd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIHJpZ2h0IGJvdHRvbSwgZnJvbShyZWQpLCB0byh3aGl0ZSkpIn1jYXRjaChlKXt9alF1ZXJ5LnN1cHBvcnQuY3NzR3JhZGllbnRzPShoLmJhY2tncm91bmRJbWFnZSYmaC5iYWNrZ3JvdW5kSW1hZ2UuaW5kZXhPZigiZ3JhZGllbnQiKT4tMSk7RT1udWxsfWpRdWVyeS5zdXBwb3J0LmZsZXhCb3hQcmVmaXhlZD10cnVlO2soImZsZXhCb3hMYXlvdXQiLCJib3hGbGV4Iik7aWYoaC5tc0ZsZXhPcmRlciE9PXVuZGVmaW5lZCl7alF1ZXJ5LnN1cHBvcnQuaWUxMEZsZXhCb3hMYXlvdXQ9dHJ1ZX1rKCJuZXdGbGV4Qm94TGF5b3V0IiwiZmxleEdyb3ciKTtpZihqUXVlcnkuc3VwcG9ydC5mbGV4Qm94TGF5b3V0fHxqUXVlcnkuc3VwcG9ydC5uZXdGbGV4Qm94TGF5b3V0fHxqUXVlcnkuc3VwcG9ydC5pZTEwRmxleEJveExheW91dCl7alF1ZXJ5LnN1cHBvcnQuaGFzRmxleEJveFN1cHBvcnQ9dHJ1ZX1lbHNle2pRdWVyeS5zdXBwb3J0Lmhhc0ZsZXhCb3hTdXBwb3J0PWZhbHNlfWlmKCFqUXVlcnkuc3VwcG9ydC5vcGFjaXR5KXsoZnVuY3Rpb24oKXt2YXIgbz1qUXVlcnkuY3NzSG9va3Mub3BhY2l0eS5zZXQ7alF1ZXJ5LmNzc0hvb2tzLm9wYWNpdHkuc2V0PWZ1bmN0aW9uKGksdil7by5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoIWpRdWVyeS50cmltKGkuc3R5bGUuZmlsdGVyKSl7aS5zdHlsZS5yZW1vdmVBdHRyaWJ1dGUoImZpbHRlciIpfX19KCkpfWZ1bmN0aW9uIFAoKXtmdW5jdGlvbiBNKEkscyxsLG0pe3RoaXMuaWQ9STt0aGlzLmluZm89czt0aGlzLnN0YXJ0PWw7dGhpcy5lbmQ9bTt0aGlzLnBhdXNlPTA7dGhpcy5yZXN1bWU9MDt0aGlzLmR1cmF0aW9uPTA7dGhpcy50aW1lPTB9dmFyIEE9ZmFsc2U7dmFyIGk9alF1ZXJ5LmFqYXg7dGhpcy5nZXRBY3RpdmU9ZnVuY3Rpb24oKXtyZXR1cm4gQX07dGhpcy5zZXRBY3RpdmU9ZnVuY3Rpb24obyl7aWYoQT09byl7cmV0dXJuIEF9QT1vO2lmKEEpe2pRdWVyeS5hamF4PWZ1bmN0aW9uKHUsbCl7alF1ZXJ5LnNhcC5tZWFzdXJlLnN0YXJ0KHUudXJsLCJSZXF1ZXN0IGZvciAiK3UudXJsKTtpLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtqUXVlcnkuc2FwLm1lYXN1cmUuZW5kKHUudXJsKX19ZWxzZSBpZihpKXtqUXVlcnkuYWpheD1pfXJldHVybiBBfTt0aGlzLnNldEFjdGl2ZSgvc2FwLXVpLW1lYXN1cmU9KHRydWV8eHxYKS8udGVzdChsb2NhdGlvbi5zZWFyY2gpKTt0aGlzLm1NZWFzdXJlbWVudHM9e307dGhpcy5zdGFydD1mdW5jdGlvbihJLHMpe2lmKCFBKXtyZXR1cm59dmFyIHQ9bmV3IERhdGUoKS5nZXRUaW1lKCk7dmFyIG09bmV3IE0oSSxzLHQsMCk7aWYobSl7dGhpcy5tTWVhc3VyZW1lbnRzW0ldPW07cmV0dXJuKHtpZDptLmlkLGluZm86bS5pbmZvLHN0YXJ0Om0uc3RhcnR9KX1lbHNle3JldHVybiBmYWxzZX19O3RoaXMucGF1c2U9ZnVuY3Rpb24oSSl7aWYoIUEpe3JldHVybn12YXIgdD1uZXcgRGF0ZSgpLmdldFRpbWUoKTt2YXIgbT10aGlzLm1NZWFzdXJlbWVudHNbSV07aWYobSYmbS5lbmQ+MCl7cmV0dXJuIGZhbHNlfWlmKG0mJm0ucGF1c2U9PTApe20ucGF1c2U9dDtpZihtLnBhdXNlPj1tLnJlc3VtZSYmbS5yZXN1bWU+MCl7bS5kdXJhdGlvbj1tLmR1cmF0aW9uK20ucGF1c2UtbS5yZXN1bWU7bS5yZXN1bWU9MH1lbHNlIGlmKG0ucGF1c2U+PW0uc3RhcnQpe20uZHVyYXRpb249bS5wYXVzZS1tLnN0YXJ0fX1pZihtKXtyZXR1cm4oe2lkOm0uaWQsaW5mbzptLmluZm8sc3RhcnQ6bS5zdGFydCxwYXVzZTptLnBhdXNlfSl9ZWxzZXtyZXR1cm4gZmFsc2V9fTt0aGlzLnJlc3VtZT1mdW5jdGlvbihJKXtpZighQSl7cmV0dXJufXZhciB0PW5ldyBEYXRlKCkuZ2V0VGltZSgpO3ZhciBtPXRoaXMubU1lYXN1cmVtZW50c1tJXTtpZihtJiZtLnBhdXNlPjApe20ucGF1c2U9MDttLnJlc3VtZT10fWlmKG0pe3JldHVybih7aWQ6bS5pZCxpbmZvOm0uaW5mbyxzdGFydDptLnN0YXJ0LHJlc3VtZTptLnJlc3VtZX0pfWVsc2V7cmV0dXJuIGZhbHNlfX07dGhpcy5lbmQ9ZnVuY3Rpb24oSSl7aWYoIUEpe3JldHVybn12YXIgdD1uZXcgRGF0ZSgpLmdldFRpbWUoKTt2YXIgbT10aGlzLm1NZWFzdXJlbWVudHNbSV07aWYobSYmIW0uZW5kKXttLmVuZD10O2lmKG0uZW5kPj1tLnJlc3VtZSYmbS5yZXN1bWU+MCl7bS5kdXJhdGlvbj1tLmR1cmF0aW9uK20uZW5kLW0ucmVzdW1lO20ucmVzdW1lPTB9ZWxzZSBpZihtLnBhdXNlPjApe20ucGF1c2U9MH1lbHNlIGlmKG0uZW5kPj1tLnN0YXJ0KXttLmR1cmF0aW9uPW0uZW5kLW0uc3RhcnR9aWYobS5lbmQ+PW0uc3RhcnQpe20udGltZT1tLmVuZC1tLnN0YXJ0fX1pZihtKXtyZXR1cm4oe2lkOm0uaWQsaW5mbzptLmluZm8sc3RhcnQ6bS5zdGFydCxlbmQ6bS5lbmQsdGltZTptLnRpbWUsZHVyYXRpb246bS5kdXJhdGlvbn0pfWVsc2V7cmV0dXJuIGZhbHNlfX07dGhpcy5nZXRNZWFzdXJlbWVudD1mdW5jdGlvbihJKXtpZighQSl7cmV0dXJufXZhciBtPXRoaXMubU1lYXN1cmVtZW50c1tJXTtpZihtKXtyZXR1cm4oe2lkOm0uaWQsaW5mbzptLmluZm8sc3RhcnQ6bS5zdGFydCxlbmQ6bS5lbmQsdGltZTptLnRpbWUsZHVyYXRpb246bS5kdXJhdGlvbn0pfWVsc2V7cmV0dXJuIGZhbHNlfX07dGhpcy5jbGVhcj1mdW5jdGlvbigpe2lmKCFBKXtyZXR1cm59dGhpcy5tTWVhc3VyZW1lbnRzPXt9O3JldHVybn07dGhpcy5yZW1vdmU9ZnVuY3Rpb24oSSl7aWYoIUEpe3JldHVybn1kZWxldGUgdGhpcy5tTWVhc3VyZW1lbnRzW0ldO3JldHVybn07dGhpcy5nZXRBbGxNZWFzdXJlbWVudHM9ZnVuY3Rpb24oKXtpZighQSl7cmV0dXJufXZhciBtPW5ldyBBcnJheSgpO2pRdWVyeS5lYWNoKHRoaXMubU1lYXN1cmVtZW50cyxmdW5jdGlvbihJLG8pe20ucHVzaCh7aWQ6by5pZCxpbmZvOm8uaW5mbyxzdGFydDpvLnN0YXJ0LGVuZDpvLmVuZCxkdXJhdGlvbjpvLmR1cmF0aW9uLHRpbWU6by50aW1lfSl9KTtyZXR1cm4gbX07dGhpcy5hZGQ9ZnVuY3Rpb24oSSxzLGwsbSx0LEQpe2lmKCFBKXtyZXR1cm59dmFyIG89bmV3IE0oSSxzLGwsbSk7by50aW1lPXQ7by5kdXJhdGlvbj1EO2lmKG8pe3RoaXMubU1lYXN1cmVtZW50c1tJXT1vO3JldHVybih7aWQ6by5pZCxpbmZvOm8uaW5mbyxzdGFydDpvLnN0YXJ0LGVuZDpvLmVuZCx0aW1lOm8udGltZSxkdXJhdGlvbjpvLmR1cmF0aW9ufSl9ZWxzZXtyZXR1cm4gZmFsc2V9fX1qUXVlcnkuc2FwLm1lYXN1cmU9bmV3IFAoKX0oKSk7DQpqUXVlcnkuc2FwLmdsb2JhbEV2YWw9ZnVuY3Rpb24oKXtldmFsKGFyZ3VtZW50c1swXSl9Ow0KLyoKKiBqUXVlcnkgTW9iaWxlIHYxLjMuMQoqIGh0dHA6Ly9qcXVlcnltb2JpbGUuY29tCioKKiBDb3B5cmlnaHQgMjAxMCwgMjAxMyBqUXVlcnkgRm91bmRhdGlvbiwgSW5jLiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgoqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKKgoqLw0KDQooZnVuY3Rpb24ocixkLGYpe2lmKHR5cGVvZiBkZWZpbmU9PT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kKXtkZWZpbmUoWyJqcXVlcnkiXSxmdW5jdGlvbigkKXtmKCQscixkKTtyZXR1cm4gJC5tb2JpbGV9KX1lbHNle2Yoci5qUXVlcnkscixkKX19KHRoaXMsZG9jdW1lbnQsZnVuY3Rpb24oUSxkLGYsdSl7DQovLyBBYm91dDogTGljZW5zZQ0KLy8gQ29weXJpZ2h0IChjKSAyMDEwICJDb3dib3kiIEJlbiBBbG1hbiwNCi8vIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLg0KLy8gaHR0cDovL2JlbmFsbWFuLmNvbS9hYm91dC9saWNlbnNlLw0KKGZ1bmN0aW9uKCQsZCx1KXt2YXIgcz0naGFzaGNoYW5nZScsYT1mLGIsYz0kLmV2ZW50LnNwZWNpYWwsZz1hLmRvY3VtZW50TW9kZSxoPSdvbicrcyBpbiBkJiYoZz09PXV8fGc+Nyk7ZnVuY3Rpb24gaShlKXtlPWV8fGxvY2F0aW9uLmhyZWY7cmV0dXJuJyMnK2UucmVwbGFjZSgvXlteI10qIz8oLiopJC8sJyQxJyl9OyQuZm5bc109ZnVuY3Rpb24oZSl7cmV0dXJuIGU/dGhpcy5iaW5kKHMsZSk6dGhpcy50cmlnZ2VyKHMpfTskLmZuW3NdLmRlbGF5PTUwO2Nbc109JC5leHRlbmQoY1tzXSx7c2V0dXA6ZnVuY3Rpb24oKXtpZihoKXtyZXR1cm4gZmFsc2V9JChiLnN0YXJ0KX0sdGVhcmRvd246ZnVuY3Rpb24oKXtpZihoKXtyZXR1cm4gZmFsc2V9JChiLnN0b3ApfX0pO2I9KGZ1bmN0aW9uKCl7dmFyIGo9e30sdCxsPWkoKSxrPWZ1bmN0aW9uKHYpe3JldHVybiB2fSxtPWssbj1rO2ouc3RhcnQ9ZnVuY3Rpb24oKXt0fHxwKCl9O2ouc3RvcD1mdW5jdGlvbigpe3QmJmNsZWFyVGltZW91dCh0KTt0PXV9O2Z1bmN0aW9uIHAoKXt2YXIgZT1pKCksbz1uKGwpO2lmKGUhPT1sKXttKGw9ZSxvKTskKGQpLnRyaWdnZXIocyl9ZWxzZSBpZihvIT09bCl7bG9jYXRpb24uaHJlZj1sb2NhdGlvbi5ocmVmLnJlcGxhY2UoLyMuKi8sJycpK299dD1zZXRUaW1lb3V0KHAsJC5mbltzXS5kZWxheSl9O2QuYXR0YWNoRXZlbnQmJiFkLmFkZEV2ZW50TGlzdGVuZXImJiFoJiYoZnVuY3Rpb24oKXt2YXIgbyxxO2ouc3RhcnQ9ZnVuY3Rpb24oKXtpZighbyl7cT0kLmZuW3NdLnNyYztxPXEmJnEraSgpO289JCgnPGlmcmFtZSB0YWJpbmRleD0iLTEiIHRpdGxlPSJlbXB0eSIvPicpLmhpZGUoKS5vbmUoJ2xvYWQnLGZ1bmN0aW9uKCl7cXx8bShpKCkpO3AoKX0pLmF0dHIoJ3NyYycscXx8J2phdmFzY3JpcHQ6MCcpLmluc2VydEFmdGVyKCdib2R5JylbMF0uY29udGVudFdpbmRvdzthLm9ucHJvcGVydHljaGFuZ2U9ZnVuY3Rpb24oKXt0cnl7aWYoZXZlbnQucHJvcGVydHlOYW1lPT09J3RpdGxlJyl7by5kb2N1bWVudC50aXRsZT1hLnRpdGxlfX1jYXRjaChlKXt9fX19O2ouc3RvcD1rO249ZnVuY3Rpb24oKXtyZXR1cm4gaShvLmxvY2F0aW9uLmhyZWYpfTttPWZ1bmN0aW9uKGUscil7dmFyIHY9by5kb2N1bWVudCx3PSQuZm5bc10uZG9tYWluO2lmKGUhPT1yKXt2LnRpdGxlPWEudGl0bGU7di5vcGVuKCk7dyYmdi53cml0ZSgnPHNjcmlwdD5kb2N1bWVudC5kb21haW49IicrdysnIjwvc2NyaXB0PicpO3YuY2xvc2UoKTtvLmxvY2F0aW9uLmhhc2g9ZX19fSkoKTtyZXR1cm4gan0pKCl9KShRLHRoaXMpOyhmdW5jdGlvbigkKXskLm1vYmlsZT17fTtRLm1vYmlsZS5vcmllbnRhdGlvbkNoYW5nZUVuYWJsZWQ9dHJ1ZX0oUSkpOyhmdW5jdGlvbigkLGQsdSl7dmFyIG49e307JC5tb2JpbGU9JC5leHRlbmQoJC5tb2JpbGUse3ZlcnNpb246IjEuMy4xIixuczoiIixzdWJQYWdlVXJsS2V5OiJ1aS1wYWdlIixhY3RpdmVQYWdlQ2xhc3M6InVpLXBhZ2UtYWN0aXZlIixhY3RpdmVCdG5DbGFzczoidWktYnRuLWFjdGl2ZSIsZm9jdXNDbGFzczoidWktZm9jdXMiLGFqYXhFbmFibGVkOnRydWUsaGFzaExpc3RlbmluZ0VuYWJsZWQ6dHJ1ZSxsaW5rQmluZGluZ0VuYWJsZWQ6dHJ1ZSxkZWZhdWx0UGFnZVRyYW5zaXRpb246ImZhZGUiLG1heFRyYW5zaXRpb25XaWR0aDpmYWxzZSxtaW5TY3JvbGxCYWNrOjI1MCx0b3VjaE92ZXJmbG93RW5hYmxlZDpmYWxzZSxkZWZhdWx0RGlhbG9nVHJhbnNpdGlvbjoicG9wIixwYWdlTG9hZEVycm9yTWVzc2FnZToiRXJyb3IgTG9hZGluZyBQYWdlIixwYWdlTG9hZEVycm9yTWVzc2FnZVRoZW1lOiJlIixwaG9uZWdhcE5hdmlnYXRpb25FbmFibGVkOmZhbHNlLGF1dG9Jbml0aWFsaXplUGFnZTp0cnVlLHB1c2hTdGF0ZUVuYWJsZWQ6dHJ1ZSxpZ25vcmVDb250ZW50RW5hYmxlZDpmYWxzZSxvcmllbnRhdGlvbkNoYW5nZUVuYWJsZWQ6dHJ1ZSxidXR0b25NYXJrdXA6e2hvdmVyRGVsYXk6MjAwfSx3aW5kb3c6JChkKSxkb2N1bWVudDokKGYpLGtleUNvZGU6e0FMVDoxOCxCQUNLU1BBQ0U6OCxDQVBTX0xPQ0s6MjAsQ09NTUE6MTg4LENPTU1BTkQ6OTEsQ09NTUFORF9MRUZUOjkxLENPTU1BTkRfUklHSFQ6OTMsQ09OVFJPTDoxNyxERUxFVEU6NDYsRE9XTjo0MCxFTkQ6MzUsRU5URVI6MTMsRVNDQVBFOjI3LEhPTUU6MzYsSU5TRVJUOjQ1LExFRlQ6MzcsTUVOVTo5MyxOVU1QQURfQUREOjEwNyxOVU1QQURfREVDSU1BTDoxMTAsTlVNUEFEX0RJVklERToxMTEsTlVNUEFEX0VOVEVSOjEwOCxOVU1QQURfTVVMVElQTFk6MTA2LE5VTVBBRF9TVUJUUkFDVDoxMDksUEFHRV9ET1dOOjM0LFBBR0VfVVA6MzMsUEVSSU9EOjE5MCxSSUdIVDozOSxTSElGVDoxNixTUEFDRTozMixUQUI6OSxVUDozOCxXSU5ET1dTOjkxfSxiZWhhdmlvcnM6e30sc2lsZW50U2Nyb2xsOmZ1bmN0aW9uKHkpe2lmKCQudHlwZSh5KSE9PSJudW1iZXIiKXt5PSQubW9iaWxlLmRlZmF1bHRIb21lU2Nyb2xsfSQuZXZlbnQuc3BlY2lhbC5zY3JvbGxzdGFydC5lbmFibGVkPWZhbHNlO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLnNjcm9sbFRvKDAseSk7JC5tb2JpbGUuZG9jdW1lbnQudHJpZ2dlcigic2lsZW50c2Nyb2xsIix7eDowLHk6eX0pfSwyMCk7c2V0VGltZW91dChmdW5jdGlvbigpeyQuZXZlbnQuc3BlY2lhbC5zY3JvbGxzdGFydC5lbmFibGVkPXRydWV9LDE1MCl9LG5zTm9ybWFsaXplRGljdDpuLG5zTm9ybWFsaXplOmZ1bmN0aW9uKHApe2lmKCFwKXtyZXR1cm59cmV0dXJuIG5bcF18fChuW3BdPSQuY2FtZWxDYXNlKCQubW9iaWxlLm5zK3ApKX0sZ2V0SW5oZXJpdGVkVGhlbWU6ZnVuY3Rpb24oYSxiKXt2YXIgZT1hWzBdLGw9IiIscj0vdWktKGJhcnxib2R5fG92ZXJsYXkpLShbYS16XSlcYi8sYyxtO3doaWxlKGUpe2M9ZS5jbGFzc05hbWV8fCIiO2lmKGMmJihtPXIuZXhlYyhjKSkmJihsPW1bMl0pKXticmVha31lPWUucGFyZW50Tm9kZX1yZXR1cm4gbHx8Ynx8ImEifSxjbG9zZXN0UGFnZURhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuY2xvc2VzdCgnOmpxbURhdGEocm9sZT0icGFnZSIpLCA6anFtRGF0YShyb2xlPSJkaWFsb2ciKScpLmRhdGEoIm1vYmlsZS1wYWdlIil9LGVuaGFuY2VhYmxlOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmhhdmVQYXJlbnRzKGEsImVuaGFuY2UiKX0saGlqYWNrYWJsZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5oYXZlUGFyZW50cyhhLCJhamF4Iil9LGhhdmVQYXJlbnRzOmZ1bmN0aW9uKGEsYil7aWYoISQubW9iaWxlLmlnbm9yZUNvbnRlbnRFbmFibGVkKXtyZXR1cm4gYX12YXIgZz1hLmxlbmd0aCxoPSQoKSxlLGssbDtmb3IodmFyIGk9MDtpPGc7aSsrKXtrPWEuZXEoaSk7bD1mYWxzZTtlPWFbaV07d2hpbGUoZSl7dmFyIGM9ZS5nZXRBdHRyaWJ1dGU/ZS5nZXRBdHRyaWJ1dGUoImRhdGEtIiskLm1vYmlsZS5ucytiKToiIjtpZihjPT09ImZhbHNlIil7bD10cnVlO2JyZWFrfWU9ZS5wYXJlbnROb2RlfWlmKCFsKXtoPWguYWRkKGspfX1yZXR1cm4gaH0sZ2V0U2NyZWVuSGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIGQuaW5uZXJIZWlnaHR8fCQubW9iaWxlLndpbmRvdy5oZWlnaHQoKX19LCQubW9iaWxlKTskLmZuLmpxbURhdGE9ZnVuY3Rpb24ocCx2KXt2YXIgcjtpZih0eXBlb2YgcCE9PSJ1bmRlZmluZWQiKXtpZihwKXtwPSQubW9iaWxlLm5zTm9ybWFsaXplKHApfWlmKGFyZ3VtZW50cy5sZW5ndGg8Mnx8dj09PXUpe3I9dGhpcy5kYXRhKHApfWVsc2V7cj10aGlzLmRhdGEocCx2KX19cmV0dXJuIHJ9OyQuanFtRGF0YT1mdW5jdGlvbihlLHAsdil7dmFyIHI7aWYodHlwZW9mIHAhPT0idW5kZWZpbmVkIil7cj0kLmRhdGEoZSxwPyQubW9iaWxlLm5zTm9ybWFsaXplKHApOnAsdil9cmV0dXJuIHJ9OyQuZm4uanFtUmVtb3ZlRGF0YT1mdW5jdGlvbihwKXtyZXR1cm4gdGhpcy5yZW1vdmVEYXRhKCQubW9iaWxlLm5zTm9ybWFsaXplKHApKX07JC5qcW1SZW1vdmVEYXRhPWZ1bmN0aW9uKGUscCl7cmV0dXJuICQucmVtb3ZlRGF0YShlLCQubW9iaWxlLm5zTm9ybWFsaXplKHApKX07JC5mbi5yZW1vdmVXaXRoRGVwZW5kZW50cz1mdW5jdGlvbigpeyQucmVtb3ZlV2l0aERlcGVuZGVudHModGhpcyl9OyQucmVtb3ZlV2l0aERlcGVuZGVudHM9ZnVuY3Rpb24oZSl7dmFyIGE9JChlKTsoYS5qcW1EYXRhKCdkZXBlbmRlbnRzJyl8fCQoKSkucmVtb3ZlKCk7YS5yZW1vdmUoKX07JC5mbi5hZGREZXBlbmRlbnRzPWZ1bmN0aW9uKGEpeyQuYWRkRGVwZW5kZW50cygkKHRoaXMpLGEpfTskLmFkZERlcGVuZGVudHM9ZnVuY3Rpb24oZSxhKXt2YXIgYj0kKGUpLmpxbURhdGEoJ2RlcGVuZGVudHMnKXx8JCgpOyQoZSkuanFtRGF0YSgnZGVwZW5kZW50cycsJC5tZXJnZShiLGEpKX07JC5mbi5nZXRFbmNvZGVkVGV4dD1mdW5jdGlvbigpe3JldHVybiAkKCI8ZGl2Lz4iKS50ZXh0KCQodGhpcykudGV4dCgpKS5odG1sKCl9OyQuZm4uanFtRW5oYW5jZWFibGU9ZnVuY3Rpb24oKXtyZXR1cm4gJC5tb2JpbGUuZW5oYW5jZWFibGUodGhpcyl9OyQuZm4uanFtSGlqYWNrYWJsZT1mdW5jdGlvbigpe3JldHVybiAkLm1vYmlsZS5oaWphY2thYmxlKHRoaXMpfTt2YXIgbz0kLmZpbmQsaj0vOmpxbURhdGFcKChbXildKilcKS9nOyQuZmluZD1mdW5jdGlvbihzLGMscixlKXtzPXMucmVwbGFjZShqLCJbZGF0YS0iKygkLm1vYmlsZS5uc3x8IiIpKyIkMV0iKTtyZXR1cm4gby5jYWxsKHRoaXMscyxjLHIsZSl9OyQuZXh0ZW5kKCQuZmluZCxvKTskLmZpbmQubWF0Y2hlcz1mdW5jdGlvbihlLHMpe3JldHVybiAkLmZpbmQoZSxudWxsLG51bGwscyl9OyQuZmluZC5tYXRjaGVzU2VsZWN0b3I9ZnVuY3Rpb24oYSxlKXtyZXR1cm4gJC5maW5kKGUsbnVsbCxudWxsLFthXSkubGVuZ3RoPjB9fSkoUSx0aGlzKTsoZnVuY3Rpb24oJCx1KXsNCi8qISBtYXRjaE1lZGlhKCkgcG9seWZpbGwgLSBUZXN0IGEgQ1NTIG1lZGlhIHR5cGUvcXVlcnkgaW4gSlMuIEF1dGhvcnMgJiBjb3B5cmlnaHQgKGMpIDIwMTI6IFNjb3R0IEplaGwsIFBhdWwgSXJpc2gsIE5pY2hvbGFzIFpha2FzLiBEdWFsIE1JVC9CU0QgbGljZW5zZSAqLw0KZC5tYXRjaE1lZGlhPWQubWF0Y2hNZWRpYXx8KGZ1bmN0aW9uKGEsdSl7dmFyIGIsYz1hLmRvY3VtZW50RWxlbWVudCxyPWMuZmlyc3RFbGVtZW50Q2hpbGR8fGMuZmlyc3RDaGlsZCxlPWEuY3JlYXRlRWxlbWVudCgiYm9keSIpLGc9YS5jcmVhdGVFbGVtZW50KCJkaXYiKTtnLmlkPSJtcS10ZXN0LTEiO2cuc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7dG9wOi0xMDBlbSI7ZS5zdHlsZS5iYWNrZ3JvdW5kPSJub25lIjtlLmFwcGVuZENoaWxkKGcpO3JldHVybiBmdW5jdGlvbihxKXtnLmlubmVySFRNTD0iJnNoeTs8c3R5bGUgbWVkaWE9XCIiK3ErIlwiPiAjbXEtdGVzdC0xIHsgd2lkdGg6IDQycHg7IH08L3N0eWxlPiI7Yy5pbnNlcnRCZWZvcmUoZSxyKTtiPWcub2Zmc2V0V2lkdGg9PT00MjtjLnJlbW92ZUNoaWxkKGUpO3JldHVybnttYXRjaGVzOmIsbWVkaWE6cX19fShmKSk7JC5tb2JpbGUubWVkaWE9ZnVuY3Rpb24ocSl7cmV0dXJuIGQubWF0Y2hNZWRpYShxKS5tYXRjaGVzfX0pKFEpOyhmdW5jdGlvbigkLHUpe3ZhciBzPXt0b3VjaDoib250b3VjaGVuZCJpbiBmfTskLm1vYmlsZS5zdXBwb3J0PSQubW9iaWxlLnN1cHBvcnR8fHt9OyQuZXh0ZW5kKCQuc3VwcG9ydCxzKTskLmV4dGVuZCgkLm1vYmlsZS5zdXBwb3J0LHMpfShRKSk7KGZ1bmN0aW9uKCQsdSl7JC5leHRlbmQoJC5zdXBwb3J0LHtvcmllbnRhdGlvbjoib3JpZW50YXRpb24iaW4gZCYmIm9ub3JpZW50YXRpb25jaGFuZ2UiaW4gZH0pfShRKSk7KGZ1bmN0aW9uKCQsdSl7ZnVuY3Rpb24gcChhKXt2YXIgaT1hLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyKDEpLHQ9KGErIiAiK2Uuam9pbihpKyIgIikraSkuc3BsaXQoIiAiKTtmb3IodmFyIHYgaW4gdCl7aWYoY1t0W3ZdXSE9PXUpe3JldHVybiB0cnVlfX19dmFyIGI9JCgiPGJvZHk+IikucHJlcGVuZFRvKCJodG1sIiksYz1iWzBdLnN0eWxlLGU9WyJXZWJraXQiLCJNb3oiLCJPIl0sZz0icGFsbUdldFJlc291cmNlImluIGQsbz1kLm9wZXJhLGg9ZC5vcGVyYW1pbmkmJih7fSkudG9TdHJpbmcuY2FsbChkLm9wZXJhbWluaSk9PT0iW29iamVjdCBPcGVyYU1pbmldIixqPWQuYmxhY2tiZXJyeSYmIXAoIi13ZWJraXQtdHJhbnNmb3JtIik7ZnVuY3Rpb24gayhhLHYsdCl7dmFyIHc9Zi5jcmVhdGVFbGVtZW50KCdkaXYnKSx4PWZ1bmN0aW9uKEMpe3JldHVybiBDLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK0Muc3Vic3RyKDEpfSx5PWZ1bmN0aW9uKEMpe2lmKEM9PT0iIil7cmV0dXJuIiJ9ZWxzZXtyZXR1cm4iLSIrQy5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKStDLnN1YnN0cigxKSsiLSJ9fSx6PWZ1bmN0aW9uKEMpe3ZhciBEPXkoQykrYSsiOiAiK3YrIjsiLEU9eChDKSxGPUUrKEU9PT0iIj9hOngoYSkpO3cuc2V0QXR0cmlidXRlKCJzdHlsZSIsRCk7aWYoISF3LnN0eWxlW0ZdKXtCPXRydWV9fSxBPXQ/dDplLEI7Zm9yKHZhciBpPTA7aTxBLmxlbmd0aDtpKyspe3ooQVtpXSl9cmV0dXJuISFCfWZ1bmN0aW9uIGwoKXt2YXIgYT0idHJhbnNmb3JtLTNkIixpPSQubW9iaWxlLm1lZGlhKCIoLSIrZS5qb2luKCItIithKyIpLCgtIikrIi0iK2ErIiksKCIrYSsiKSIpO2lmKGkpe3JldHVybiEhaX12YXIgdj1mLmNyZWF0ZUVsZW1lbnQoImRpdiIpLHc9eydNb3pUcmFuc2Zvcm0nOictbW96LXRyYW5zZm9ybScsJ3RyYW5zZm9ybSc6J3RyYW5zZm9ybSd9O2IuYXBwZW5kKHYpO2Zvcih2YXIgdCBpbiB3KXtpZih2LnN0eWxlW3RdIT09dSl7di5zdHlsZVt0XT0ndHJhbnNsYXRlM2QoIDEwMHB4LCAxcHgsIDFweCApJztpPWQuZ2V0Q29tcHV0ZWRTdHlsZSh2KS5nZXRQcm9wZXJ0eVZhbHVlKHdbdF0pfX1yZXR1cm4oISFpJiZpIT09Im5vbmUiKX1mdW5jdGlvbiBtKCl7dmFyIGE9bG9jYXRpb24ucHJvdG9jb2wrIi8vIitsb2NhdGlvbi5ob3N0K2xvY2F0aW9uLnBhdGhuYW1lKyJ1aS1kaXIvIixpPSQoImhlYWQgYmFzZSIpLHQ9bnVsbCx2PSIiLHcseDtpZighaS5sZW5ndGgpe2k9dD0kKCI8YmFzZT4iLHsiaHJlZiI6YX0pLmFwcGVuZFRvKCJoZWFkIil9ZWxzZXt2PWkuYXR0cigiaHJlZiIpfXc9JCgiPGEgaHJlZj0ndGVzdHVybCcgLz4iKS5wcmVwZW5kVG8oYik7eD13WzBdLmhyZWY7aVswXS5ocmVmPXZ8fGxvY2F0aW9uLnBhdGhuYW1lO2lmKHQpe3QucmVtb3ZlKCl9cmV0dXJuIHguaW5kZXhPZihhKT09PTB9ZnVuY3Rpb24gbigpe3ZhciBhPWYuY3JlYXRlRWxlbWVudCgneCcpLGk9Zi5kb2N1bWVudEVsZW1lbnQsdD1kLmdldENvbXB1dGVkU3R5bGUsdjtpZighKCdwb2ludGVyRXZlbnRzJ2luIGEuc3R5bGUpKXtyZXR1cm4gZmFsc2V9YS5zdHlsZS5wb2ludGVyRXZlbnRzPSdhdXRvJzthLnN0eWxlLnBvaW50ZXJFdmVudHM9J3gnO2kuYXBwZW5kQ2hpbGQoYSk7dj10JiZ0KGEsJycpLnBvaW50ZXJFdmVudHM9PT0nYXV0byc7aS5yZW1vdmVDaGlsZChhKTtyZXR1cm4hIXZ9ZnVuY3Rpb24gcSgpe3ZhciBhPWYuY3JlYXRlRWxlbWVudCgiZGl2Iik7cmV0dXJuIHR5cGVvZiBhLmdldEJvdW5kaW5nQ2xpZW50UmVjdCE9PSJ1bmRlZmluZWQifSQuZXh0ZW5kKCQubW9iaWxlLHticm93c2VyOnt9fSk7JC5tb2JpbGUuYnJvd3Nlci5vbGRJRT0oZnVuY3Rpb24oKXt2YXIgdj0zLGk9Zi5jcmVhdGVFbGVtZW50KCJkaXYiKSxhPWkuYWxsfHxbXTtkb3tpLmlubmVySFRNTD0iPCEtLVtpZiBndCBJRSAiKygrK3YpKyJdPjxicj48IVtlbmRpZl0tLT4ifXdoaWxlKGFbMF0pO3JldHVybiB2PjQ/djohdn0pKCk7ZnVuY3Rpb24gcigpe3ZhciB3PWQsYT1uYXZpZ2F0b3IudXNlckFnZW50LGk9bmF2aWdhdG9yLnBsYXRmb3JtLHQ9YS5tYXRjaCgvQXBwbGVXZWJLaXRcLyhbMC05XSspLyksdj0hIXQmJnRbMV0seD1hLm1hdGNoKC9GZW5uZWNcLyhbMC05XSspLykseT0hIXgmJnhbMV0sej1hLm1hdGNoKC9PcGVyYSBNb2JpXC8oWzAtOV0rKS8pLEE9ISF6JiZ6WzFdO2lmKCgoaS5pbmRleE9mKCJpUGhvbmUiKT4tMXx8aS5pbmRleE9mKCJpUGFkIik+LTF8fGkuaW5kZXhPZigiaVBvZCIpPi0xKSYmdiYmdjw1MzQpfHwody5vcGVyYW1pbmkmJih7fSkudG9TdHJpbmcuY2FsbCh3Lm9wZXJhbWluaSk9PT0iW29iamVjdCBPcGVyYU1pbmldIil8fCh6JiZBPDc0NTgpfHwoYS5pbmRleE9mKCJBbmRyb2lkIik+LTEmJnYmJnY8NTMzKXx8KHkmJnk8Nil8fCgicGFsbUdldFJlc291cmNlImluIGQmJnYmJnY8NTM0KXx8KGEuaW5kZXhPZigiTWVlR28iKT4tMSYmYS5pbmRleE9mKCJOb2tpYUJyb3dzZXIvOC41LjAiKT4tMSkpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX0kLmV4dGVuZCgkLnN1cHBvcnQse2Nzc1RyYW5zaXRpb25zOiJXZWJLaXRUcmFuc2l0aW9uRXZlbnQiaW4gZHx8aygndHJhbnNpdGlvbicsJ2hlaWdodCAxMDBtcyBsaW5lYXInLFsiV2Via2l0IiwiTW96IiwiIl0pJiYhJC5tb2JpbGUuYnJvd3Nlci5vbGRJRSYmIW8scHVzaFN0YXRlOiJwdXNoU3RhdGUiaW4gaGlzdG9yeSYmInJlcGxhY2VTdGF0ZSJpbiBoaXN0b3J5JiYhKGQubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJGaXJlZm94Iik+PTAmJmQudG9wIT09ZCkmJihkLm5hdmlnYXRvci51c2VyQWdlbnQuc2VhcmNoKC9DcmlPUy8pPT09LTEpLG1lZGlhcXVlcnk6JC5tb2JpbGUubWVkaWEoIm9ubHkgYWxsIiksY3NzUHNldWRvRWxlbWVudDohIXAoImNvbnRlbnQiKSx0b3VjaE92ZXJmbG93OiEhcCgib3ZlcmZsb3dTY3JvbGxpbmciKSxjc3NUcmFuc2Zvcm0zZDpsKCksYm94U2hhZG93OiEhcCgiYm94U2hhZG93IikmJiFqLGZpeGVkUG9zaXRpb246cigpLHNjcm9sbFRvcDooInBhZ2VYT2Zmc2V0ImluIGR8fCJzY3JvbGxUb3AiaW4gZi5kb2N1bWVudEVsZW1lbnR8fCJzY3JvbGxUb3AiaW4gYlswXSkmJiFnJiYhaCxkeW5hbWljQmFzZVRhZzptKCksY3NzUG9pbnRlckV2ZW50czpuKCksYm91bmRpbmdSZWN0OnEoKX0pO2IucmVtb3ZlKCk7dmFyIHM9KGZ1bmN0aW9uKCl7dmFyIGE9ZC5uYXZpZ2F0b3IudXNlckFnZW50O3JldHVybiBhLmluZGV4T2YoIk5va2lhIik+LTEmJihhLmluZGV4T2YoIlN5bWJpYW4vMyIpPi0xfHxhLmluZGV4T2YoIlNlcmllczYwLzUiKT4tMSkmJmEuaW5kZXhPZigiQXBwbGVXZWJLaXQiKT4tMSYmYS5tYXRjaCgvKEJyb3dzZXJOR3xOb2tpYUJyb3dzZXIpXC83XC5bMC0zXS8pfSkoKTskLm1vYmlsZS5ncmFkZUE9ZnVuY3Rpb24oKXtyZXR1cm4oJC5zdXBwb3J0Lm1lZGlhcXVlcnl8fCQubW9iaWxlLmJyb3dzZXIub2xkSUUmJiQubW9iaWxlLmJyb3dzZXIub2xkSUU+PTcpJiYoJC5zdXBwb3J0LmJvdW5kaW5nUmVjdHx8JC5mbi5qcXVlcnkubWF0Y2goLzFcLlswLTcrXVwuWzAtOStdPy8pIT09bnVsbCl9OyQubW9iaWxlLmFqYXhCbGFja2xpc3Q9ZC5ibGFja2JlcnJ5JiYhZC5XZWJLaXRQb2ludHx8aHx8cztpZihzKXskKGZ1bmN0aW9uKCl7JCgiaGVhZCBsaW5rW3JlbD0nc3R5bGVzaGVldCddIikuYXR0cigicmVsIiwiYWx0ZXJuYXRlIHN0eWxlc2hlZXQiKS5hdHRyKCJyZWwiLCJzdHlsZXNoZWV0Iil9KX1pZighJC5zdXBwb3J0LmJveFNoYWRvdyl7JCgiaHRtbCIpLmFkZENsYXNzKCJ1aS1tb2JpbGUtbm9zdXBwb3J0LWJveHNoYWRvdyIpfX0pKFEpOyhmdW5jdGlvbigkLHUpe3ZhciBhPSQubW9iaWxlLndpbmRvdyxzLGg7JC5ldmVudC5zcGVjaWFsLm5hdmlnYXRlPXM9e2JvdW5kOmZhbHNlLHB1c2hTdGF0ZUVuYWJsZWQ6dHJ1ZSxvcmlnaW5hbEV2ZW50TmFtZTp1LGlzUHVzaFN0YXRlRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiAkLnN1cHBvcnQucHVzaFN0YXRlJiYkLm1vYmlsZS5wdXNoU3RhdGVFbmFibGVkPT09dHJ1ZSYmdGhpcy5pc0hhc2hDaGFuZ2VFbmFibGVkKCl9LGlzSGFzaENoYW5nZUVuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gJC5tb2JpbGUuaGFzaExpc3RlbmluZ0VuYWJsZWQ9PT10cnVlfSxwb3BzdGF0ZTpmdW5jdGlvbihlKXt2YXIgbj1uZXcgJC5FdmVudCgibmF2aWdhdGUiKSxiPW5ldyAkLkV2ZW50KCJiZWZvcmVuYXZpZ2F0ZSIpLGM9ZS5vcmlnaW5hbEV2ZW50LnN0YXRlfHx7fSxnPWxvY2F0aW9uLmhyZWY7YS50cmlnZ2VyKGIpO2lmKGIuaXNEZWZhdWx0UHJldmVudGVkKCkpe3JldHVybn1pZihlLmhpc3RvcnlTdGF0ZSl7JC5leHRlbmQoYyxlLmhpc3RvcnlTdGF0ZSl9bi5vcmlnaW5hbEV2ZW50PWU7c2V0VGltZW91dChmdW5jdGlvbigpe2EudHJpZ2dlcihuLHtzdGF0ZTpjfSl9LDApfSxoYXNoY2hhbmdlOmZ1bmN0aW9uKGUsYil7dmFyIG49bmV3ICQuRXZlbnQoIm5hdmlnYXRlIiksYz1uZXcgJC5FdmVudCgiYmVmb3JlbmF2aWdhdGUiKTthLnRyaWdnZXIoYyk7aWYoYy5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7cmV0dXJufW4ub3JpZ2luYWxFdmVudD1lO2EudHJpZ2dlcihuLHtzdGF0ZTplLmhhc2hjaGFuZ2VTdGF0ZXx8e319KX0sc2V0dXA6ZnVuY3Rpb24oYixuKXtpZihzLmJvdW5kKXtyZXR1cm59cy5ib3VuZD10cnVlO2lmKHMuaXNQdXNoU3RhdGVFbmFibGVkKCkpe3Mub3JpZ2luYWxFdmVudE5hbWU9InBvcHN0YXRlIjthLmJpbmQoInBvcHN0YXRlLm5hdmlnYXRlIixzLnBvcHN0YXRlKX1lbHNlIGlmKHMuaXNIYXNoQ2hhbmdlRW5hYmxlZCgpKXtzLm9yaWdpbmFsRXZlbnROYW1lPSJoYXNoY2hhbmdlIjthLmJpbmQoImhhc2hjaGFuZ2UubmF2aWdhdGUiLHMuaGFzaGNoYW5nZSl9fX19KShRKTsoZnVuY3Rpb24oJCl7JC5ldmVudC5zcGVjaWFsLnRocm90dGxlZHJlc2l6ZT17c2V0dXA6ZnVuY3Rpb24oKXskKHRoaXMpLmJpbmQoInJlc2l6ZSIsaCl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7JCh0aGlzKS51bmJpbmQoInJlc2l6ZSIsaCl9fTt2YXIgdD0yNTAsaD1mdW5jdGlvbigpe2M9KG5ldyBEYXRlKCkpLmdldFRpbWUoKTtiPWMtbDtpZihiPj10KXtsPWM7JCh0aGlzKS50cmlnZ2VyKCJ0aHJvdHRsZWRyZXNpemUiKX1lbHNle2lmKGEpe2NsZWFyVGltZW91dChhKX1hPXNldFRpbWVvdXQoaCx0LWIpfX0sbD0wLGEsYyxifSkoUSk7KGZ1bmN0aW9uKCQsZCl7dmFyIHc9JChkKSxlPSJvcmllbnRhdGlvbmNoYW5nZSIscyxnLGwsaSxhLHA9eyIwIjp0cnVlLCIxODAiOnRydWV9O2lmKCQuc3VwcG9ydC5vcmllbnRhdGlvbil7dmFyIGI9ZC5pbm5lcldpZHRofHx3LndpZHRoKCksYz1kLmlubmVySGVpZ2h0fHx3LmhlaWdodCgpLGg9NTA7aT1iPmMmJihiLWMpPmg7YT1wW2Qub3JpZW50YXRpb25dO2lmKChpJiZhKXx8KCFpJiYhYSkpe3A9eyItOTAiOnRydWUsIjkwIjp0cnVlfX19JC5ldmVudC5zcGVjaWFsLm9yaWVudGF0aW9uY2hhbmdlPSQuZXh0ZW5kKHt9LCQuZXZlbnQuc3BlY2lhbC5vcmllbnRhdGlvbmNoYW5nZSx7c2V0dXA6ZnVuY3Rpb24oKXtpZigkLnN1cHBvcnQub3JpZW50YXRpb24mJiEkLmV2ZW50LnNwZWNpYWwub3JpZW50YXRpb25jaGFuZ2UuZGlzYWJsZWQpe3JldHVybiBmYWxzZX1sPWcoKTt3LmJpbmQoInRocm90dGxlZHJlc2l6ZSIsail9LHRlYXJkb3duOmZ1bmN0aW9uKCl7aWYoJC5zdXBwb3J0Lm9yaWVudGF0aW9uJiYhJC5ldmVudC5zcGVjaWFsLm9yaWVudGF0aW9uY2hhbmdlLmRpc2FibGVkKXtyZXR1cm4gZmFsc2V9dy51bmJpbmQoInRocm90dGxlZHJlc2l6ZSIsail9LGFkZDpmdW5jdGlvbihrKXt2YXIgbz1rLmhhbmRsZXI7ay5oYW5kbGVyPWZ1bmN0aW9uKG0pe20ub3JpZW50YXRpb249ZygpO3JldHVybiBvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fSk7ZnVuY3Rpb24gaigpe3ZhciBvPWcoKTtpZihvIT09bCl7bD1vO3cudHJpZ2dlcihlKX19JC5ldmVudC5zcGVjaWFsLm9yaWVudGF0aW9uY2hhbmdlLm9yaWVudGF0aW9uPWc9ZnVuY3Rpb24oKXt2YXIgaz10cnVlLG09Zi5kb2N1bWVudEVsZW1lbnQ7aWYoJC5zdXBwb3J0Lm9yaWVudGF0aW9uKXtrPXBbZC5vcmllbnRhdGlvbl19ZWxzZXtrPW0mJm0uY2xpZW50V2lkdGgvbS5jbGllbnRIZWlnaHQ8MS4xfXJldHVybiBrPyJwb3J0cmFpdCI6ImxhbmRzY2FwZSJ9OyQuZm5bZV09ZnVuY3Rpb24oayl7cmV0dXJuIGs/dGhpcy5iaW5kKGUsayk6dGhpcy50cmlnZ2VyKGUpfTtpZigkLmF0dHJGbil7JC5hdHRyRm5bZV09dHJ1ZX19KFEsdGhpcykpOyhmdW5jdGlvbigkLGQsZix1KXt2YXIgYT0idmlydHVhbE1vdXNlQmluZGluZ3MiLGM9InZpcnR1YWxUb3VjaElEIix2PSJ2bW91c2VvdmVyIHZtb3VzZWRvd24gdm1vdXNlbW92ZSB2bW91c2V1cCB2Y2xpY2sgdm1vdXNlb3V0IHZtb3VzZWNhbmNlbCIuc3BsaXQoIiAiKSxnPSJjbGllbnRYIGNsaWVudFkgcGFnZVggcGFnZVkgc2NyZWVuWCBzY3JlZW5ZIi5zcGxpdCgiICIpLG09JC5ldmVudC5tb3VzZUhvb2tzPyQuZXZlbnQubW91c2VIb29rcy5wcm9wczpbXSxoPSQuZXZlbnQucHJvcHMuY29uY2F0KG0pLGw9e30scj0wLHM9MCxuPTAscD1mYWxzZSxxPVtdLHc9ZmFsc2Usej1mYWxzZSxBPSJhZGRFdmVudExpc3RlbmVyImluIGYsQj0kKGYpLEM9MSxEPTAsRTskLnZtb3VzZT17bW92ZURpc3RhbmNlVGhyZXNob2xkOjEwLGNsaWNrRGlzdGFuY2VUaHJlc2hvbGQ6MTAscmVzZXRUaW1lckR1cmF0aW9uOjE1MDB9O2Z1bmN0aW9uIEYoZSl7d2hpbGUoZSYmdHlwZW9mIGUub3JpZ2luYWxFdmVudCE9PSJ1bmRlZmluZWQiKXtlPWUub3JpZ2luYWxFdmVudH1yZXR1cm4gZX1mdW5jdGlvbiBHKGUsYil7dmFyIHQ9ZS50eXBlLG8sayx4LHksXyxhMSxpLGosYjE7ZT0kLkV2ZW50KGUpO2UudHlwZT1iO289ZS5vcmlnaW5hbEV2ZW50O2s9JC5ldmVudC5wcm9wcztpZih0LnNlYXJjaCgvXihtb3VzZXxjbGljaykvKT4tMSl7az1ofWlmKG8pe2ZvcihpPWsubGVuZ3RoLHk7aTspe3k9a1stLWldO2VbeV09b1t5XX19aWYodC5zZWFyY2goL21vdXNlKGRvd258dXApfGNsaWNrLyk+LTEmJiFlLndoaWNoKXtlLndoaWNoPTF9aWYodC5zZWFyY2goL150b3VjaC8pIT09LTEpe3g9RihvKTt0PXgudG91Y2hlcztfPXguY2hhbmdlZFRvdWNoZXM7YTE9KHQmJnQubGVuZ3RoKT90WzBdOigoXyYmXy5sZW5ndGgpP19bMF06dSk7aWYoYTEpe2ZvcihqPTAsYjE9Zy5sZW5ndGg7ajxiMTtqKyspe3k9Z1tqXTtlW3ldPWExW3ldfX19cmV0dXJuIGV9ZnVuY3Rpb24gSChlKXt2YXIgaj17fSxiLGs7d2hpbGUoZSl7Yj0kLmRhdGEoZSxhKTtmb3IoayBpbiBiKXtpZihiW2tdKXtqW2tdPWouaGFzVmlydHVhbEJpbmRpbmc9dHJ1ZX19ZT1lLnBhcmVudE5vZGV9cmV0dXJuIGp9ZnVuY3Rpb24gSShlLGope3ZhciBiO3doaWxlKGUpe2I9JC5kYXRhKGUsYSk7aWYoYiYmKCFqfHxiW2pdKSl7cmV0dXJuIGV9ZT1lLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSigpe3o9ZmFsc2V9ZnVuY3Rpb24gSygpe3o9dHJ1ZX1mdW5jdGlvbiBMKCl7RD0wO3EubGVuZ3RoPTA7dz1mYWxzZTtLKCl9ZnVuY3Rpb24gTSgpe0ooKX1mdW5jdGlvbiBOKCl7TygpO3I9c2V0VGltZW91dChmdW5jdGlvbigpe3I9MDtMKCl9LCQudm1vdXNlLnJlc2V0VGltZXJEdXJhdGlvbil9ZnVuY3Rpb24gTygpe2lmKHIpe2NsZWFyVGltZW91dChyKTtyPTB9fWZ1bmN0aW9uIFAoZSxiLGope3ZhciBrO2lmKChqJiZqW2VdKXx8KCFqJiZJKGIudGFyZ2V0LGUpKSl7az1HKGIsZSk7JChiLnRhcmdldCkudHJpZ2dlcihrKX1yZXR1cm4ga31mdW5jdGlvbiBSKGUpe3ZhciB0PSQuZGF0YShlLnRhcmdldCxjKTtpZighdyYmKCFEfHxEIT09dCkpe3ZhciBiPVAoInYiK2UudHlwZSxlKTtpZihiKXtpZihiLmlzRGVmYXVsdFByZXZlbnRlZCgpKXtlLnByZXZlbnREZWZhdWx0KCl9aWYoYi5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKXtlLnN0b3BQcm9wYWdhdGlvbigpfWlmKGIuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSl7ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKX19fX1mdW5jdGlvbiBTKGUpe3ZhciBiPUYoZSkudG91Y2hlcyxqLGs7aWYoYiYmYi5sZW5ndGg9PT0xKXtqPWUudGFyZ2V0O2s9SChqKTtpZihrLmhhc1ZpcnR1YWxCaW5kaW5nKXtEPUMrKzskLmRhdGEoaixjLEQpO08oKTtNKCk7cD1mYWxzZTt2YXIgdD1GKGUpLnRvdWNoZXNbMF07cz10LnBhZ2VYO249dC5wYWdlWTtQKCJ2bW91c2VvdmVyIixlLGspO1AoInZtb3VzZWRvd24iLGUsayl9fX1mdW5jdGlvbiBUKGUpe2lmKHope3JldHVybn1pZighcCl7UCgidm1vdXNlY2FuY2VsIixlLEgoZS50YXJnZXQpKX1wPXRydWU7TigpfWZ1bmN0aW9uIFUoZSl7aWYoeil7cmV0dXJufXZhciB0PUYoZSkudG91Y2hlc1swXSxiPXAsaj0kLnZtb3VzZS5tb3ZlRGlzdGFuY2VUaHJlc2hvbGQsaz1IKGUudGFyZ2V0KTtwPXB8fChNYXRoLmFicyh0LnBhZ2VYLXMpPmp8fE1hdGguYWJzKHQucGFnZVktbik+aik7aWYocCYmIWIpe1AoInZtb3VzZWNhbmNlbCIsZSxrKX1QKCJ2bW91c2Vtb3ZlIixlLGspO04oKX1mdW5jdGlvbiBWKGUpe2lmKHope3JldHVybn1LKCk7dmFyIGI9SChlLnRhcmdldCksdDtQKCJ2bW91c2V1cCIsZSxiKTtpZighcCl7dmFyIGo9UCgidmNsaWNrIixlLGIpO2lmKGomJiQuc3VwcG9ydC50b3VjaCl7dD1GKGUpLmNoYW5nZWRUb3VjaGVzWzBdO3EucHVzaCh7dG91Y2hJRDpELHg6dC5jbGllbnRYLHk6dC5jbGllbnRZLHRhcmdldDplLnRhcmdldH0pO3c9dHJ1ZX19UCgidm1vdXNlb3V0IixlLGIpO3A9ZmFsc2U7TigpfWZ1bmN0aW9uIFcoZSl7dmFyIGI9JC5kYXRhKGUsYSksaztpZihiKXtmb3IoayBpbiBiKXtpZihiW2tdKXtyZXR1cm4gdHJ1ZX19fXJldHVybiBmYWxzZX1mdW5jdGlvbiBYKCl7fWZ1bmN0aW9uIFkoZSl7dmFyIGI9ZS5zdWJzdHIoMSk7cmV0dXJue3NldHVwOmZ1bmN0aW9uKGosayl7aWYoIVcodGhpcykpeyQuZGF0YSh0aGlzLGEse30pfXZhciBvPSQuZGF0YSh0aGlzLGEpO29bZV09dHJ1ZTtsW2VdPShsW2VdfHwwKSsxO2lmKGxbZV09PT0xKXtCLmJpbmQoYixSKX0kKHRoaXMpLmJpbmQoYixYKTtpZihBKXtsWyJ0b3VjaHN0YXJ0Il09KGxbInRvdWNoc3RhcnQiXXx8MCkrMTtpZihsWyJ0b3VjaHN0YXJ0Il09PT0xKXtCLmJpbmQoInRvdWNoc3RhcnQiLFMpLmJpbmQoInRvdWNoZW5kIixWKS5iaW5kKCJ0b3VjaG1vdmUiLFUpfX19LHRlYXJkb3duOmZ1bmN0aW9uKGosayl7LS1sW2VdO2lmKCFsW2VdKXtCLnVuYmluZChiLFIpfWlmKEEpey0tbFsidG91Y2hzdGFydCJdO2lmKCFsWyJ0b3VjaHN0YXJ0Il0pe0IudW5iaW5kKCJ0b3VjaHN0YXJ0IixTKS51bmJpbmQoInRvdWNobW92ZSIsVSkudW5iaW5kKCJ0b3VjaGVuZCIsVikudW5iaW5kKCJzY3JvbGwiLFQpfX12YXIgbz0kKHRoaXMpLHQ9JC5kYXRhKHRoaXMsYSk7aWYodCl7dFtlXT1mYWxzZX1vLnVuYmluZChiLFgpO2lmKCFXKHRoaXMpKXtvLnJlbW92ZURhdGEoYSl9fX19Zm9yKHZhciBpPTA7aTx2Lmxlbmd0aDtpKyspeyQuZXZlbnQuc3BlY2lhbFt2W2ldXT1ZKHZbaV0pfWlmKEEpe2Z1bmN0aW9uIFooZSl7dmFyIGI9cS5sZW5ndGgsdD1lLnRhcmdldCx4LHksaixpLG8saztpZihiKXt4PWUuY2xpZW50WDt5PWUuY2xpZW50WTtFPSQudm1vdXNlLmNsaWNrRGlzdGFuY2VUaHJlc2hvbGQ7aj10O3doaWxlKGope2ZvcihpPTA7aTxiO2krKyl7bz1xW2ldO2s9MDtpZigoaj09PXQmJk1hdGguYWJzKG8ueC14KTxFJiZNYXRoLmFicyhvLnkteSk8RSl8fCQuZGF0YShqLGMpPT09by50b3VjaElEKXtpZighZS5pc1N5bnRoZXRpYyl7ZS5fc2FwdWlfZGVsYXllZE1vdXNlRXZlbnQ9dHJ1ZX1pZih0PT09by50YXJnZXQpe3JldHVybn1lLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm59fWo9ai5wYXJlbnROb2RlfX19O2YuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixaLHRydWUpO2YuYWRkRXZlbnRMaXN0ZW5lcigibW91c2V1cCIsWix0cnVlKTtmLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIixaLHRydWUpfX0pKFEsZCxmKTsoZnVuY3Rpb24oJCxkLHUpe3ZhciBhPSQoZik7JC5lYWNoKCgidG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgIisidGFwIHRhcGhvbGQgIisic3dpcGUgc3dpcGVsZWZ0IHN3aXBlcmlnaHQgIisic2Nyb2xsc3RhcnQgc2Nyb2xsc3RvcCIpLnNwbGl0KCIgIiksZnVuY3Rpb24oaSxuKXskLmZuW25dPWZ1bmN0aW9uKGgpe3JldHVybiBoP3RoaXMuYmluZChuLGgpOnRoaXMudHJpZ2dlcihuKX07aWYoJC5hdHRyRm4peyQuYXR0ckZuW25dPXRydWV9fSk7dmFyIHM9JC5tb2JpbGUuc3VwcG9ydC50b3VjaCxiPSJ0b3VjaG1vdmUgc2Nyb2xsIix0PXM/InRvdWNoc3RhcnQiOiJtb3VzZWRvd24iLGM9cz8idG91Y2hlbmQgdG91Y2hjYW5jZWwiOiJtb3VzZXVwIixlPXM/InRvdWNobW92ZSI6Im1vdXNlbW92ZSI7ZnVuY3Rpb24gZyhvLGgsaSl7dmFyIGo9aS50eXBlO2kudHlwZT1oOyQuZXZlbnQuZGlzcGF0Y2guY2FsbChvLGkpO2kudHlwZT1qfSQuZXZlbnQuc3BlY2lhbC5zY3JvbGxzdGFydD17ZW5hYmxlZDp0cnVlLHNldHVwOmZ1bmN0aW9uKCl7dmFyIGg9dGhpcyxpPSQoaCksaixrO2Z1bmN0aW9uIGwobSxuKXtqPW47ZyhoLGo/InNjcm9sbHN0YXJ0Ijoic2Nyb2xsc3RvcCIsbSl9aS5iaW5kKGIsZnVuY3Rpb24obSl7aWYoISQuZXZlbnQuc3BlY2lhbC5zY3JvbGxzdGFydC5lbmFibGVkKXtyZXR1cm59aWYoIWope2wobSx0cnVlKX1jbGVhclRpbWVvdXQoayk7az1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bChtLGZhbHNlKX0sNTApfSl9fTskLmV2ZW50LnNwZWNpYWwudGFwPXt0YXBob2xkVGhyZXNob2xkOjc1MCxzZXR1cDpmdW5jdGlvbigpe3ZhciBoPXRoaXMsaT0kKGgpO2kuYmluZCgidm1vdXNlZG93biIsZnVuY3Rpb24oail7aWYoai53aGljaCYmai53aGljaCE9PTEpe3JldHVybiBmYWxzZX12YXIgbz1qLnRhcmdldCxrPWoub3JpZ2luYWxFdmVudCxsO2Z1bmN0aW9uIG0oKXtjbGVhclRpbWVvdXQobCl9ZnVuY3Rpb24gbigpe20oKTtpLnVuYmluZCgidmNsaWNrIixwKS51bmJpbmQoInZtb3VzZXVwIixtKTthLnVuYmluZCgidm1vdXNlY2FuY2VsIixuKX1mdW5jdGlvbiBwKGope24oKTtpZihvPT09ai50YXJnZXQpe2coaCwidGFwIixqKX19aS5iaW5kKCJ2bW91c2V1cCIsbSkuYmluZCgidmNsaWNrIixwKTthLmJpbmQoInZtb3VzZWNhbmNlbCIsbik7bD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZyhoLCJ0YXBob2xkIiwkLkV2ZW50KCJ0YXBob2xkIix7dGFyZ2V0Om99KSl9LCQuZXZlbnQuc3BlY2lhbC50YXAudGFwaG9sZFRocmVzaG9sZCl9KX19OyQuZXZlbnQuc3BlY2lhbC5zd2lwZT17c2Nyb2xsU3VwcmVzc2lvblRocmVzaG9sZDozMCxkdXJhdGlvblRocmVzaG9sZDoxMDAwLGhvcml6b250YWxEaXN0YW5jZVRocmVzaG9sZDozMCx2ZXJ0aWNhbERpc3RhbmNlVGhyZXNob2xkOjc1LHN0YXJ0OmZ1bmN0aW9uKGgpe3ZhciBpPWgub3JpZ2luYWxFdmVudC50b3VjaGVzP2gub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdOmg7cmV0dXJue3RpbWU6KG5ldyBEYXRlKCkpLmdldFRpbWUoKSxjb29yZHM6W2kucGFnZVgsaS5wYWdlWV0sb3JpZ2luOiQoaC50YXJnZXQpfX0sc3RvcDpmdW5jdGlvbihoKXt2YXIgaT1oLm9yaWdpbmFsRXZlbnQudG91Y2hlcz9oLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXTpoO3JldHVybnt0aW1lOihuZXcgRGF0ZSgpKS5nZXRUaW1lKCksY29vcmRzOltpLnBhZ2VYLGkucGFnZVldfX0saGFuZGxlU3dpcGU6ZnVuY3Rpb24oaCxpKXtpZihpLnRpbWUtaC50aW1lPCQuZXZlbnQuc3BlY2lhbC5zd2lwZS5kdXJhdGlvblRocmVzaG9sZCYmTWF0aC5hYnMoaC5jb29yZHNbMF0taS5jb29yZHNbMF0pPiQuZXZlbnQuc3BlY2lhbC5zd2lwZS5ob3Jpem9udGFsRGlzdGFuY2VUaHJlc2hvbGQmJk1hdGguYWJzKGguY29vcmRzWzFdLWkuY29vcmRzWzFdKTwkLmV2ZW50LnNwZWNpYWwuc3dpcGUudmVydGljYWxEaXN0YW5jZVRocmVzaG9sZCl7aC5vcmlnaW4udHJpZ2dlcigic3dpcGUiKS50cmlnZ2VyKGguY29vcmRzWzBdPmkuY29vcmRzWzBdPyJzd2lwZWxlZnQiOiJzd2lwZXJpZ2h0Iil9fSxzZXR1cDpmdW5jdGlvbigpe3ZhciBoPXRoaXMsaT0kKGgpO2kuYmluZCh0LGZ1bmN0aW9uKGope2lmKGoub3JpZ2luYWxFdmVudC5fc2FwdWlfc3dpcGVzdGFydEhhbmRsZWQpe3JldHVybn1qLm9yaWdpbmFsRXZlbnQuX3NhcHVpX3N3aXBlc3RhcnRIYW5kbGVkPXRydWU7dmFyIGs9JC5ldmVudC5zcGVjaWFsLnN3aXBlLnN0YXJ0KGopLGw7ZnVuY3Rpb24gbShqKXtpZighayl7cmV0dXJufWw9JC5ldmVudC5zcGVjaWFsLnN3aXBlLnN0b3Aoaik7aWYoIXNhcC51aS5EZXZpY2Uuc3lzdGVtLmRlc2t0b3B8fHNhcC51aS5EZXZpY2UuYnJvd3Nlci5uYW1lIT09ImNyIil7aWYoTWF0aC5hYnMoay5jb29yZHNbMF0tbC5jb29yZHNbMF0pPiQuZXZlbnQuc3BlY2lhbC5zd2lwZS5zY3JvbGxTdXByZXNzaW9uVGhyZXNob2xkKXtqLnByZXZlbnREZWZhdWx0KCl9fX1mdW5jdGlvbiBuKGope2kudW5iaW5kKGUsbSkudW5iaW5kKGMsbik7aWYoayYmbCl7JC5ldmVudC5zcGVjaWFsLnN3aXBlLmhhbmRsZVN3aXBlKGssbCl9az1sPXV9aS5iaW5kKGUsbSkuYmluZChjLG4pfSl9fTskLmVhY2goe3Njcm9sbHN0b3A6InNjcm9sbHN0YXJ0Iix0YXBob2xkOiJ0YXAiLHN3aXBlbGVmdDoic3dpcGUiLHN3aXBlcmlnaHQ6InN3aXBlIn0sZnVuY3Rpb24oaCxpKXskLmV2ZW50LnNwZWNpYWxbaF09e3NldHVwOmZ1bmN0aW9uKCl7JCh0aGlzKS5iaW5kKGksJC5ub29wKX19fSl9KShRLHRoaXMpfSkpO2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLXVpLWNvcmUtYWxsJyk7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuRGV2aWNlJyk7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkudGhpcmRwYXJ0eS5TZWNvbmRMZXZlbERvbWFpbnMnKTtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS50aGlyZHBhcnR5LlVSSScpO2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLnRoaXJkcGFydHkuanF1ZXJ5LmpxdWVyeS0xLjEwLjInKTtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS50aGlyZHBhcnR5LmpxdWVyeXVpLmpxdWVyeS11aS1jb3JlJyk7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkudGhpcmRwYXJ0eS5qcXVlcnl1aS5qcXVlcnktdWktZGF0ZXBpY2tlcicpO2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLnRoaXJkcGFydHkuanF1ZXJ5dWkuanF1ZXJ5LXVpLXBvc2l0aW9uJyk7alF1ZXJ5LnNhcC5kZWNsYXJlKCdqcXVlcnkuc2FwLmdsb2JhbCcpO2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLnRoaXJkcGFydHkuanF1ZXJ5LW1vYmlsZS1jdXN0b20nKTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLmtleWNvZGVzJykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnanF1ZXJ5LnNhcC5rZXljb2RlcycpO3NhcC51aS5kZWZpbmUoImpxdWVyeS5zYXAua2V5Y29kZXMiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7cS5zYXAuS2V5Q29kZXM9e0JBQ0tTUEFDRTo4LFRBQjo5LEVOVEVSOjEzLFNISUZUOjE2LENPTlRST0w6MTcsQUxUOjE4LEJSRUFLOjE5LENBUFNfTE9DSzoyMCxFU0NBUEU6MjcsU1BBQ0U6MzIsUEFHRV9VUDozMyxQQUdFX0RPV046MzQsRU5EOjM1LEhPTUU6MzYsQVJST1dfTEVGVDozNyxBUlJPV19VUDozOCxBUlJPV19SSUdIVDozOSxBUlJPV19ET1dOOjQwLFBSSU5UOjQ0LElOU0VSVDo0NSxERUxFVEU6NDYsRElHSVRfMDo0OCxESUdJVF8xOjQ5LERJR0lUXzI6NTAsRElHSVRfMzo1MSxESUdJVF80OjUyLERJR0lUXzU6NTMsRElHSVRfNjo1NCxESUdJVF83OjU1LERJR0lUXzg6NTYsRElHSVRfOTo1NyxBOjY1LEI6NjYsQzo2NyxEOjY4LEU6NjksRjo3MCxHOjcxLEg6NzIsSTo3MyxKOjc0LEs6NzUsTDo3NixNOjc3LE46NzgsTzo3OSxQOjgwLFE6ODEsUjo4MixTOjgzLFQ6ODQsVTo4NSxWOjg2LFc6ODcsWDo4OCxZOjg5LFo6OTAsV0lORE9XUzo5MSxDT05URVhUX01FTlU6OTMsVFVSTl9PRkY6OTQsU0xFRVA6OTUsTlVNUEFEXzA6OTYsTlVNUEFEXzE6OTcsTlVNUEFEXzI6OTgsTlVNUEFEXzM6OTksTlVNUEFEXzQ6MTAwLE5VTVBBRF81OjEwMSxOVU1QQURfNjoxMDIsTlVNUEFEXzc6MTAzLE5VTVBBRF84OjEwNCxOVU1QQURfOToxMDUsTlVNUEFEX0FTVEVSSVNLOjEwNixOVU1QQURfUExVUzoxMDcsTlVNUEFEX01JTlVTOjEwOSxOVU1QQURfQ09NTUE6MTEwLE5VTVBBRF9TTEFTSDoxMTEsRjE6MTEyLEYyOjExMyxGMzoxMTQsRjQ6MTE1LEY1OjExNixGNjoxMTcsRjc6MTE4LEY4OjExOSxGOToxMjAsRjEwOjEyMSxGMTE6MTIyLEYxMjoxMjMsTlVNX0xPQ0s6MTQ0LFNDUk9MTF9MT0NLOjE0NSxPUEVOX0JSQUNLRVQ6MTg2LFBMVVM6MTg3LENPTU1BOjE4OCxTTEFTSDoxODksRE9UOjE5MCxQSVBFOjE5MSxTRU1JQ09MT046MTkyLE1JTlVTOjIxOSxHUkVBVF9BQ0NFTlQ6MjIwLEVRVUFMUzoyMjEsU0lOR0xFX1FVT1RFOjIyMixCQUNLU0xBU0g6MjI2fTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLmxvZ2dlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoImpxdWVyeS5zYXAubG9nZ2VyIixmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAuc2NyaXB0Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnanF1ZXJ5LnNhcC5zY3JpcHQnKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLnNjcmlwdCIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgST0wO3Euc2FwLnVpZD1mdW5jdGlvbiB1aWQoKXtyZXR1cm4iaWQtIituZXcgRGF0ZSgpLnZhbHVlT2YoKSsiLSIrSSsrfTtxLnNhcC5kZWxheWVkQ2FsbD1mdW5jdGlvbiBkZWxheWVkQ2FsbChkLG8sbSxwKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe2lmKHEudHlwZShtKT09InN0cmluZyIpe209b1ttXX1tLmFwcGx5KG8scHx8W10pfSxkKX07cS5zYXAuY2xlYXJEZWxheWVkQ2FsbD1mdW5jdGlvbiBjbGVhckRlbGF5ZWRDYWxsKGQpe2NsZWFyVGltZW91dChkKTtyZXR1cm4gdGhpc307cS5zYXAuaW50ZXJ2YWxDYWxsPWZ1bmN0aW9uIGludGVydmFsQ2FsbChpLG8sbSxwKXtyZXR1cm4gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtpZihxLnR5cGUobSk9PSJzdHJpbmciKXttPW9bbV19bS5hcHBseShvLHB8fFtdKX0saSl9O3Euc2FwLmNsZWFySW50ZXJ2YWxDYWxsPWZ1bmN0aW9uIGNsZWFySW50ZXJ2YWxDYWxsKGkpe2NsZWFySW50ZXJ2YWwoaSk7cmV0dXJuIHRoaXN9O3ZhciBVPWZ1bmN0aW9uKHUpe3RoaXMubVBhcmFtcz17fTt2YXIgUT11fHx3aW5kb3cubG9jYXRpb24uaHJlZjtpZihRLmluZGV4T2YoJyMnKT49MCl7UT1RLnNsaWNlKDAsUS5pbmRleE9mKCcjJykpfWlmKFEuaW5kZXhPZigiPyIpPj0wKXtRPVEuc2xpY2UoUS5pbmRleE9mKCI/IikrMSk7dmFyIHA9US5zcGxpdCgiJiIpLFA9e30sYSxuLHY7Zm9yKHZhciBpPTA7aTxwLmxlbmd0aDtpKyspe2E9cFtpXS5zcGxpdCgiPSIpO249ZGVjb2RlVVJJQ29tcG9uZW50KGFbMF0pO3Y9YS5sZW5ndGg+MT9kZWNvZGVVUklDb21wb25lbnQoYVsxXS5yZXBsYWNlKC9cKy9nLCcgJykpOiIiO2lmKG4pe2lmKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoUCxuKSl7UFtuXT1bXX1QW25dLnB1c2godil9fXRoaXMubVBhcmFtcz1QfX07VS5wcm90b3R5cGU9e307VS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKG4sYSl7dmFyIHY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMubVBhcmFtcyxuKT90aGlzLm1QYXJhbXNbbl06W107cmV0dXJuIGE9PT10cnVlP3Y6KHZbMF18fG51bGwpfTtxLnNhcC5nZXRVcmlQYXJhbWV0ZXJzPWZ1bmN0aW9uIGdldFVyaVBhcmFtZXRlcnModSl7cmV0dXJuIG5ldyBVKHUpfTtxLnNhcC51bmlxdWU9ZnVuY3Rpb24oYSl7dmFyIGw9YS5sZW5ndGg7aWYobD4xKXthLnNvcnQoKTtmb3IodmFyIGk9MSxqPTA7aTxsO2krKyl7aWYoYVtpXSE9PWFbal0pe2FbKytqXT1hW2ldfX1pZigrK2o8bCl7YS5zcGxpY2UoaixsLWopfX1yZXR1cm4gYX07cS5zYXAuZXF1YWw9ZnVuY3Rpb24oYSxiLG0sYyxkKXtpZih0eXBlb2YgbT09ImJvb2xlYW4iKXtjPW07bT11bmRlZmluZWR9aWYoIWQpZD0wO2lmKCFtKW09MTA7aWYoZD5tKXJldHVybiBmYWxzZTtpZihhPT09YilyZXR1cm4gdHJ1ZTtpZihxLmlzQXJyYXkoYSkmJnEuaXNBcnJheShiKSl7aWYoIWMpe2lmKGEubGVuZ3RoIT1iLmxlbmd0aCl7cmV0dXJuIGZhbHNlfX1lbHNle2lmKGEubGVuZ3RoPmIubGVuZ3RoKXtyZXR1cm4gZmFsc2V9fWZvcih2YXIgaT0wO2k8YS5sZW5ndGg7aSsrKXtpZighcS5zYXAuZXF1YWwoYVtpXSxiW2ldLG0sYyxkKzEpKXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfWlmKHR5cGVvZiBhPT0ib2JqZWN0IiYmdHlwZW9mIGI9PSJvYmplY3QiKXtpZighYXx8IWIpe3JldHVybiBmYWxzZX1pZihhLmNvbnN0cnVjdG9yIT1iLmNvbnN0cnVjdG9yKXtyZXR1cm4gZmFsc2V9aWYoYS5ub2RlTmFtZSYmYi5ub2RlTmFtZSYmYS5uYW1lc3BhY2VVUkkmJmIubmFtZXNwYWNlVVJJKXtyZXR1cm4gcS5zYXAuaXNFcXVhbE5vZGUoYSxiKX1pZihhIGluc3RhbmNlb2YgRGF0ZSl7cmV0dXJuIGEudmFsdWVPZigpPT1iLnZhbHVlT2YoKX1mb3IodmFyIGkgaW4gYSl7aWYoIXEuc2FwLmVxdWFsKGFbaV0sYltpXSxtLGMsZCsxKSl7cmV0dXJuIGZhbHNlfX1pZighYyl7Zm9yKHZhciBpIGluIGIpe2lmKGFbaV09PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX19fXJldHVybiB0cnVlfXJldHVybiBmYWxzZX07cS5zYXAuZWFjaD1mdW5jdGlvbihvLGMpe3ZhciBhPXEuaXNBcnJheShvKSxsLGk7aWYoYSl7Zm9yKGk9MCxsPW8ubGVuZ3RoO2k8bDtpKyspe2lmKGMuY2FsbChvW2ldLGksb1tpXSk9PT1mYWxzZSl7YnJlYWt9fX1lbHNle2ZvcihpIGluIG8pe2lmKGMuY2FsbChvW2ldLGksb1tpXSk9PT1mYWxzZSl7YnJlYWt9fX1yZXR1cm4gb307cS5zYXAuZm9ySW49e3RvU3RyaW5nOm51bGx9LnByb3BlcnR5SXNFbnVtZXJhYmxlKCJ0b1N0cmluZyIpP2Z1bmN0aW9uKG8sYyl7Zm9yKHZhciBuIGluIG8pe2lmKGMobixvW25dKT09PWZhbHNlKXtyZXR1cm59fX06KGZ1bmN0aW9uKCl7dmFyIEQ9WyJ0b1N0cmluZyIsInZhbHVlT2YiLCJ0b0xvY2FsZVN0cmluZyIsImhhc093blByb3BlcnR5IiwiaXNQcm90b3R5cGVPZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiY29uc3RydWN0b3IiXSxhPUQubGVuZ3RoLG89T2JqZWN0LnByb3RvdHlwZSxoPW8uaGFzT3duUHJvcGVydHk7cmV0dXJuIGZ1bmN0aW9uKE8sYyl7dmFyIG4saTtmb3IobiBpbiBPKXtpZihjKG4sT1tuXSk9PT1mYWxzZSl7cmV0dXJufX1mb3IodmFyIGk9MDtpPGE7aSsrKXtuPURbaV07aWYoaC5jYWxsKE8sbil8fE9bbl0hPT1vW25dKXtpZihjKG4sT1tuXSk9PT1mYWxzZSl7cmV0dXJufX19fX0oKSk7cS5zYXAuYXJyYXlEaWZmPWZ1bmN0aW9uKG8sbixjKXtjPWN8fGZ1bmN0aW9uKHYsVil7cmV0dXJuIHEuc2FwLmVxdWFsKHYsVil9O3ZhciBPPVtdO3ZhciBOPVtdO3ZhciBtPVtdO2Zvcih2YXIgaT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgYT1uW2ldO3ZhciBmPTA7dmFyIHQ7Zm9yKHZhciBqPTA7ajxvLmxlbmd0aDtqKyspe2lmKGMob1tqXSxhKSl7ZisrO3Q9ajtpZihmPjEpe2JyZWFrfX19aWYoZj09MSl7dmFyIE09e29sZEluZGV4OnQsbmV3SW5kZXg6aX07aWYobVt0XSl7ZGVsZXRlIE9bdF07ZGVsZXRlIE5bbVt0XS5uZXdJbmRleF19ZWxzZXtOW2ldPXtkYXRhOm5baV0scm93OnR9O09bdF09e2RhdGE6b1t0XSxyb3c6aX07bVt0XT1NfX19Zm9yKHZhciBpPTA7aTxuLmxlbmd0aC0xO2krKyl7aWYoTltpXSYmIU5baSsxXSYmTltpXS5yb3crMTxvLmxlbmd0aCYmIU9bTltpXS5yb3crMV0mJmMob1tOW2ldLnJvdysxXSxuW2krMV0pKXtOW2krMV09e2RhdGE6bltpKzFdLHJvdzpOW2ldLnJvdysxfTtPW05baV0ucm93KzFdPXtkYXRhOk9bTltpXS5yb3crMV0scm93OmkrMX19fWZvcih2YXIgaT1uLmxlbmd0aC0xO2k+MDtpLS0pe2lmKE5baV0mJiFOW2ktMV0mJk5baV0ucm93PjAmJiFPW05baV0ucm93LTFdJiZjKG9bTltpXS5yb3ctMV0sbltpLTFdKSl7TltpLTFdPXtkYXRhOm5baS0xXSxyb3c6TltpXS5yb3ctMX07T1tOW2ldLnJvdy0xXT17ZGF0YTpPW05baV0ucm93LTFdLHJvdzppLTF9fX12YXIgZD1bXTtpZihuLmxlbmd0aD09MCl7Zm9yKHZhciBpPTA7aTxvLmxlbmd0aDtpKyspe2QucHVzaCh7aW5kZXg6MCx0eXBlOidkZWxldGUnfSl9fWVsc2V7dmFyIGI9MDtpZighT1swXSl7Zm9yKHZhciBpPTA7aTxvLmxlbmd0aCYmIU9baV07aSsrKXtkLnB1c2goe2luZGV4OjAsdHlwZTonZGVsZXRlJ30pO2I9aSsxfX1mb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7aWYoIU5baV18fE5baV0ucm93PmIpe2QucHVzaCh7aW5kZXg6aSx0eXBlOidpbnNlcnQnfSl9ZWxzZXtiPU5baV0ucm93KzE7Zm9yKHZhciBqPU5baV0ucm93KzE7ajxvLmxlbmd0aCYmKCFPW2pdfHxPW2pdLnJvdzxpKTtqKyspe2QucHVzaCh7aW5kZXg6aSsxLHR5cGU6J2RlbGV0ZSd9KTtiPWorMX19fX1yZXR1cm4gZH07cS5zYXAucGFyc2VKUz0oZnVuY3Rpb24oKXt2YXIgYSxiLGU9eyciJzonIicsJ1wnJzonXCcnLCdcXCc6J1xcJywnLyc6Jy8nLGI6J1xiJyxmOidcZicsbjonXG4nLHI6J1xyJyx0OidcdCd9LHQsZD1mdW5jdGlvbihtKXt0aHJvd3tuYW1lOidTeW50YXhFcnJvcicsbWVzc2FnZTptLGF0OmEsdGV4dDp0fX0sbj1mdW5jdGlvbihjKXtpZihjJiZjIT09Yil7ZCgiRXhwZWN0ZWQgJyIrYysiJyBpbnN0ZWFkIG9mICciK2IrIiciKX1iPXQuY2hhckF0KGEpO2ErPTE7cmV0dXJuIGJ9LGY9ZnVuY3Rpb24oKXt2YXIgZixzPScnO2lmKGI9PT0nLScpe3M9Jy0nO24oJy0nKX13aGlsZShiPj0nMCcmJmI8PSc5Jyl7cys9YjtuKCl9aWYoYj09PScuJyl7cys9Jy4nO3doaWxlKG4oKSYmYj49JzAnJiZiPD0nOScpe3MrPWJ9fWlmKGI9PT0nZSd8fGI9PT0nRScpe3MrPWI7bigpO2lmKGI9PT0nLSd8fGI9PT0nKycpe3MrPWI7bigpfXdoaWxlKGI+PScwJyYmYjw9JzknKXtzKz1iO24oKX19Zj0rcztpZighaXNGaW5pdGUoZikpe2QoIkJhZCBudW1iZXIiKX1lbHNle3JldHVybiBmfX0scz1mdW5jdGlvbigpe3ZhciBjLGkscz0nJyxrLHU7aWYoYj09PSciJ3x8Yj09PSdcJycpe2s9Yjt3aGlsZShuKCkpe2lmKGI9PT1rKXtuKCk7cmV0dXJuIHN9aWYoYj09PSdcXCcpe24oKTtpZihiPT09J3UnKXt1PTA7Zm9yKGk9MDtpPDQ7aSs9MSl7Yz1wYXJzZUludChuKCksMTYpO2lmKCFpc0Zpbml0ZShjKSl7YnJlYWt9dT11KjE2K2N9cys9U3RyaW5nLmZyb21DaGFyQ29kZSh1KX1lbHNlIGlmKHR5cGVvZiBlW2JdPT09J3N0cmluZycpe3MrPWVbYl19ZWxzZXticmVha319ZWxzZXtzKz1ifX19ZCgiQmFkIHN0cmluZyIpfSxnPWZ1bmN0aW9uKCl7dmFyIGc9JycsYyxpPWZ1bmN0aW9uKGIpe3JldHVybiBiPT09Il8ifHwoYj49IjAiJiZiPD0iOSIpfHwoYj49ImEiJiZiPD0ieiIpfHwoYj49IkEiJiZiPD0iWiIpfTtpZihpKGIpKXtnKz1ifWVsc2V7ZCgiQmFkIG5hbWUiKX13aGlsZShuKCkpe2lmKGI9PT0nICcpe24oKTtyZXR1cm4gZ31pZihiPT09JzonKXtyZXR1cm4gZ31pZihpKGIpKXtnKz1ifWVsc2V7ZCgiQmFkIG5hbWUiKX19ZCgiQmFkIG5hbWUiKX0sdz1mdW5jdGlvbigpe3doaWxlKGImJmI8PScgJyl7bigpfX0saD1mdW5jdGlvbigpe3N3aXRjaChiKXtjYXNlJ3QnOm4oJ3QnKTtuKCdyJyk7bigndScpO24oJ2UnKTtyZXR1cm4gdHJ1ZTtjYXNlJ2YnOm4oJ2YnKTtuKCdhJyk7bignbCcpO24oJ3MnKTtuKCdlJyk7cmV0dXJuIGZhbHNlO2Nhc2Unbic6bignbicpO24oJ3UnKTtuKCdsJyk7bignbCcpO3JldHVybiBudWxsfWQoIlVuZXhwZWN0ZWQgJyIrYisiJyIpfSx2LGo9ZnVuY3Rpb24oKXt2YXIgaj1bXTtpZihiPT09J1snKXtuKCdbJyk7dygpO2lmKGI9PT0nXScpe24oJ10nKTtyZXR1cm4gan13aGlsZShiKXtqLnB1c2godigpKTt3KCk7aWYoYj09PSddJyl7bignXScpO3JldHVybiBqfW4oJywnKTt3KCl9fWQoIkJhZCBhcnJheSIpfSxvPWZ1bmN0aW9uKCl7dmFyIGssbz17fTtpZihiPT09J3snKXtuKCd7Jyk7dygpO2lmKGI9PT0nfScpe24oJ30nKTtyZXR1cm4gb313aGlsZShiKXtpZihiPj0iMCImJmI8PSI5Iil7az1mKCl9ZWxzZSBpZihiPT09JyInfHxiPT09J1wnJyl7az1zKCl9ZWxzZXtrPWcoKX13KCk7bignOicpO2lmKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG8saykpe2QoJ0R1cGxpY2F0ZSBrZXkgIicraysnIicpfW9ba109digpO3coKTtpZihiPT09J30nKXtuKCd9Jyk7cmV0dXJuIG99bignLCcpO3coKX19ZCgiQmFkIG9iamVjdCIpfTt2PWZ1bmN0aW9uKCl7dygpO3N3aXRjaChiKXtjYXNlJ3snOnJldHVybiBvKCk7Y2FzZSdbJzpyZXR1cm4gaigpO2Nhc2UnIic6Y2FzZSdcJyc6cmV0dXJuIHMoKTtjYXNlJy0nOnJldHVybiBmKCk7ZGVmYXVsdDpyZXR1cm4gYj49JzAnJiZiPD0nOSc/ZigpOmgoKX19O3JldHVybiBmdW5jdGlvbihjLGkpe3ZhciByO3Q9YzthPWl8fDA7Yj0nICc7cj12KCk7aWYoaXNOYU4oaSkpe3coKTtpZihiKXtkKCJTeW50YXggZXJyb3IiKX1yZXR1cm4gcn1lbHNle3JldHVybntyZXN1bHQ6cixhdDphLTF9fX19KCkpO3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAuc2pheCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAuc2pheCcpO3NhcC51aS5kZWZpbmUoImpxdWVyeS5zYXAuc2pheCIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0IjtxLnNhcC5zamF4U2V0dGluZ3M9e2NvbXBsZXhSZXN1bHQ6dHJ1ZSxmYWxsYmFjazp1bmRlZmluZWR9O3Euc2FwLnNqYXg9ZnVuY3Rpb24gc2pheChvKXt2YXIgcz1xLmV4dGVuZCh0cnVlLHt9LHEuc2FwLnNqYXhTZXR0aW5ncyxvLHthc3luYzpmYWxzZSxzdWNjZXNzOmZ1bmN0aW9uKGQsdCx4KXtyPXtzdWNjZXNzOnRydWUsZGF0YTpkLHN0YXR1czp0LHN0YXR1c0NvZGU6eCYmeC5zdGF0dXN9fSxlcnJvcjpmdW5jdGlvbih4LHQsZSl7cj17c3VjY2VzczpmYWxzZSxkYXRhOnVuZGVmaW5lZCxzdGF0dXM6dCxlcnJvcjplLHN0YXR1c0NvZGU6eC5zdGF0dXN9fX0pO3ZhciByPXVuZGVmaW5lZDtxLmFqYXgocyk7aWYoIXMuY29tcGxleFJlc3VsdCl7cmV0dXJuIHIuc3VjY2Vzcz9yLmRhdGE6cy5mYWxsYmFja31yZXR1cm4gcn07cS5zYXAuc3luY0hlYWQ9ZnVuY3Rpb24odSl7cmV0dXJuIHEuc2FwLnNqYXgoe3R5cGU6J0hFQUQnLHVybDp1fSkuc3VjY2Vzc307cS5zYXAuc3luY0dldD1mdW5jdGlvbiBzeW5jR2V0KHUsZCxEKXtyZXR1cm4gcS5zYXAuc2pheCh7dXJsOnUsZGF0YTpkLHR5cGU6J0dFVCcsZGF0YVR5cGU6RHx8J3RleHQnfSl9O3Euc2FwLnN5bmNQb3N0PWZ1bmN0aW9uIHN5bmNQb3N0KHUsZCxEKXtyZXR1cm4gcS5zYXAuc2pheCh7dXJsOnUsZGF0YTpkLHR5cGU6J1BPU1QnLGRhdGFUeXBlOkR8fCd0ZXh0J30pfTtxLnNhcC5zeW5jR2V0VGV4dD1mdW5jdGlvbiBzeW5jR2V0VGV4dCh1LGQsZil7cmV0dXJuIHEuc2FwLnNqYXgoe3VybDp1LGRhdGE6ZCx0eXBlOidHRVQnLGRhdGFUeXBlOid0ZXh0JyxmYWxsYmFjazpmLGNvbXBsZXhSZXN1bHQ6KGFyZ3VtZW50cy5sZW5ndGg8Myl9KX07cS5zYXAuc3luY0dldEpTT049ZnVuY3Rpb24gc3luY0dldEpTT04odSxkLGYpe3JldHVybiBxLnNhcC5zamF4KHt1cmw6dSxkYXRhOmR8fG51bGwsdHlwZTonR0VUJyxkYXRhVHlwZTonanNvbicsZmFsbGJhY2s6Zixjb21wbGV4UmVzdWx0Oihhcmd1bWVudHMubGVuZ3RoPDMpfSl9O3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAuc3RvcmFnZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAuc3RvcmFnZScpO3NhcC51aS5kZWZpbmUoImpxdWVyeS5zYXAuc3RvcmFnZSIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz0hISh3aW5kb3cuSlNPTiYmSlNPTi5wYXJzZSYmSlNPTi5zdHJpbmdpZnkpO3ZhciBTPSJzdGF0ZS5rZXlfIjt2YXIgZj1mdW5jdGlvbihhLGIpe3ZhciB0PSJ1bmtub3duIjt2YXIgUD1ifHxTO1ArPSItIjt2YXIgbztpZighb3x8dHlwZW9mKGEpPT09InN0cmluZyIpe3Q9YXx8InNlc3Npb24iO3RyeXtvPXdpbmRvd1t0KyJTdG9yYWdlIl19Y2F0Y2goZSl7bz1udWxsfX1lbHNlIGlmKHR5cGVvZihhKT09PU9iamVjdCl7dD1hLmdldFR5cGU/YS5nZXRUeXBlKCk6InVua25vd24iO289YX12YXIgYz0hIW87dGhpcy5wdXQ9ZnVuY3Rpb24oaSxkKXtpZihjJiZpKXt0cnl7by5zZXRJdGVtKFAraSxzP0pTT04uc3RyaW5naWZ5KGQpOmQpO3JldHVybiB0cnVlfWNhdGNoKGUpe3JldHVybiBmYWxzZX19ZWxzZXtyZXR1cm4gZmFsc2V9fTt0aGlzLmdldD1mdW5jdGlvbihpKXtpZihjJiZpKXt0cnl7dmFyIEk9by5nZXRJdGVtKFAraSk7cmV0dXJuIHM/SlNPTi5wYXJzZShJKTpJfWNhdGNoKGUpe3JldHVybiBudWxsfX1lbHNle3JldHVybiBudWxsfX07dGhpcy5yZW1vdmU9ZnVuY3Rpb24oaSl7aWYoYyYmaSl7dHJ5e28ucmVtb3ZlSXRlbShQK2kpO3JldHVybiB0cnVlfWNhdGNoKGUpe3JldHVybiBmYWxzZX19ZWxzZXtyZXR1cm4gZmFsc2V9fTt0aGlzLnJlbW92ZUFsbD1mdW5jdGlvbihJKXtpZihjJiZvLmxlbmd0aCYmdHlwZW9mKG8ua2V5KT09PSJmdW5jdGlvbiIpe3RyeXt2YXIgbD1vLmxlbmd0aDt2YXIgaz1bXTt2YXIgZCxpO3ZhciBwPVArKEl8fCIiKTtmb3IoaT0wO2k8bDtpKyspe2Q9by5rZXkoaSk7aWYoZCYmZC5pbmRleE9mKHApPT0wKXtrLnB1c2goZCl9fWZvcihpPTA7aTxrLmxlbmd0aDtpKyspe28ucmVtb3ZlSXRlbShrW2ldKX1yZXR1cm4gdHJ1ZX1jYXRjaChlKXtyZXR1cm4gZmFsc2V9fWVsc2V7cmV0dXJuIGZhbHNlfX07dGhpcy5jbGVhcj1mdW5jdGlvbigpe2lmKGMpe3RyeXtvLmNsZWFyKCk7cmV0dXJuIHRydWV9Y2F0Y2goZSl7cmV0dXJuIGZhbHNlfX1lbHNle3JldHVybiBmYWxzZX19O3RoaXMuZ2V0VHlwZT1mdW5jdGlvbigpe3JldHVybiB0fX07dmFyIG09e307cS5zYXAuc3RvcmFnZT1mdW5jdGlvbihvLGkpe2lmKCFvKXtvPXEuc2FwLnN0b3JhZ2UuVHlwZS5zZXNzaW9ufWlmKHR5cGVvZihvKT09PSJzdHJpbmciJiZxLnNhcC5zdG9yYWdlLlR5cGVbb10pe3ZhciBrPW87aWYoaSYmaSE9Uyl7az1vKyJfIitpfXJldHVybiBtW2tdfHwobVtrXT1uZXcgZihvLGkpKX1yZXR1cm4gbmV3IGYobyxpKX07cS5zYXAuc3RvcmFnZS5UeXBlPXtsb2NhbDoibG9jYWwiLHNlc3Npb246InNlc3Npb24iLGdsb2JhbDoiZ2xvYmFsIn07Zi5hcHBseShxLnNhcC5zdG9yYWdlKTttW3Euc2FwLnN0b3JhZ2UuVHlwZS5zZXNzaW9uXT1xLnNhcC5zdG9yYWdlO3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAuc3RyaW5ncycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAuc3RyaW5ncycpO3NhcC51aS5kZWZpbmUoImpxdWVyeS5zYXAuc3RyaW5ncyIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0IjtxLnNhcC5lbmRzV2l0aD1mdW5jdGlvbiBlbmRzV2l0aChzLGUpe2lmKHR5cGVvZihlKSE9InN0cmluZyJ8fGU9PSIiKXtyZXR1cm4gZmFsc2V9dmFyIHA9cy5sYXN0SW5kZXhPZihlKTtyZXR1cm4gcD49MCYmcD09cy5sZW5ndGgtZS5sZW5ndGh9O3Euc2FwLmVuZHNXaXRoSWdub3JlQ2FzZT1mdW5jdGlvbiBlbmRzV2l0aElnbm9yZUNhc2UocyxlKXtpZih0eXBlb2YoZSkhPSJzdHJpbmcifHxlPT0iIil7cmV0dXJuIGZhbHNlfXM9cy50b1VwcGVyQ2FzZSgpO2U9ZS50b1VwcGVyQ2FzZSgpO3JldHVybiBxLnNhcC5lbmRzV2l0aChzLGUpfTtxLnNhcC5zdGFydHNXaXRoPWZ1bmN0aW9uIHN0YXJ0c1dpdGgocyxTKXtpZih0eXBlb2YoUykhPSJzdHJpbmcifHxTPT0iIil7cmV0dXJuIGZhbHNlfWlmKHM9PVMpe3JldHVybiB0cnVlfXJldHVybiBzLmluZGV4T2YoUyk9PTB9O3Euc2FwLnN0YXJ0c1dpdGhJZ25vcmVDYXNlPWZ1bmN0aW9uIHN0YXJ0c1dpdGhJZ25vcmVDYXNlKHMsUyl7aWYodHlwZW9mKFMpIT0ic3RyaW5nInx8Uz09IiIpe3JldHVybiBmYWxzZX1zPXMudG9VcHBlckNhc2UoKTtTPVMudG9VcHBlckNhc2UoKTtyZXR1cm4gcS5zYXAuc3RhcnRzV2l0aChzLFMpfTtxLnNhcC5jaGFyVG9VcHBlckNhc2U9ZnVuY3Rpb24gY2hhclRvVXBwZXJDYXNlKHMscCl7aWYoIXMpe3JldHVybiBzfWlmKCFwfHxpc05hTihwKXx8cDw9MHx8cD49cy5sZW5ndGgpe3A9MH12YXIgQz1zLmNoYXJBdChwKS50b1VwcGVyQ2FzZSgpO2lmKHA+MCl7cmV0dXJuIHMuc3Vic3RyaW5nKDAscCkrQytzLnN1YnN0cmluZyhwKzEpfXJldHVybiBDK3Muc3Vic3RyaW5nKHArMSl9O3Euc2FwLnBhZExlZnQ9ZnVuY3Rpb24gcGFkTGVmdChzLHAsbCl7aWYoIXMpe3M9IiJ9d2hpbGUocy5sZW5ndGg8bCl7cz1wK3N9cmV0dXJuIHN9O3Euc2FwLnBhZFJpZ2h0PWZ1bmN0aW9uIHBhZFJpZ2h0KHMscCxsKXtpZighcyl7cz0iIn13aGlsZShzLmxlbmd0aDxsKXtzPXMrcH1yZXR1cm4gc307dmFyIHI9Ly0oLikvaWc7cS5zYXAuY2FtZWxDYXNlPWZ1bmN0aW9uIGNhbWVsQ2FzZShzKXtyZXR1cm4gcy5yZXBsYWNlKHIsZnVuY3Rpb24obSxDKXtyZXR1cm4gQy50b1VwcGVyQ2FzZSgpfSl9O3ZhciBhPS8oW0EtWl0pL2c7cS5zYXAuaHlwaGVuPWZ1bmN0aW9uIGh5cGhlbihzKXtyZXR1cm4gcy5yZXBsYWNlKGEsZnVuY3Rpb24obSxDKXtyZXR1cm4iLSIrQy50b0xvd2VyQ2FzZSgpfSl9O3ZhciBiPS9bLVtcXXt9KCkqKz8uLFxcXiR8I1xzXS9nO3Euc2FwLmVzY2FwZVJlZ0V4cD1mdW5jdGlvbiBlc2NhcGVSZWdFeHAocyl7cmV0dXJuIHMucmVwbGFjZShiLCJcXCQmIil9O3Euc2FwLmZvcm1hdE1lc3NhZ2U9ZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShwLHYpe2lmKGFyZ3VtZW50cy5sZW5ndGg+Mnx8KHYhPW51bGwmJiFxLmlzQXJyYXkodikpKXt2PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKX12PXZ8fFtdO3JldHVybiBwLnJlcGxhY2UoYyxmdW5jdGlvbigkLGQsZSxmLG8pe2lmKGQpe3JldHVybiInIn1lbHNlIGlmKGUpe3JldHVybiBlLnJlcGxhY2UoLycnL2csIiciKX1lbHNlIGlmKGYpe3JldHVybiBTdHJpbmcodltwYXJzZUludChmLDEwKV0pfXRocm93IG5ldyBFcnJvcigiZm9ybWF0TWVzc2FnZTogcGF0dGVybiBzeW50YXggZXJyb3IgYXQgcG9zLiAiK28pfSl9O3ZhciBjPS8oJycpfCcoW14nXSsoPzonJ1teJ10qKSopKD86J3wkKXxceyhbMC05XSsoPzpccyosW157fV0qKT8pXH18W3t9XS9nO3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAueG1sJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnanF1ZXJ5LnNhcC54bWwnKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLnhtbCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9EZXZpY2UnXSxmdW5jdGlvbihxLEQpeyJ1c2Ugc3RyaWN0IjtxLnNhcC5wYXJzZVhNTD1mdW5jdGlvbiBwYXJzZVhNTCh4KXt2YXIgWDtpZih3aW5kb3cuRE9NUGFyc2VyKXt2YXIgcD1uZXcgRE9NUGFyc2VyKCk7dHJ5e1g9cC5wYXJzZUZyb21TdHJpbmcoeCwidGV4dC94bWwiKX1jYXRjaChlKXt2YXIgUD1xLnNhcC5nZXRQYXJzZUVycm9yKFgpO1g9e307UC5yZWFzb249ZS5tZXNzYWdlO1gucGFyc2VFcnJvcj1QO3JldHVybiBYfX1lbHNle1g9bmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKTtYLmFzeW5jPWZhbHNlO1gubG9hZFhNTCh4KX12YXIgUD1xLnNhcC5nZXRQYXJzZUVycm9yKFgpO2lmKFApe2lmKCFYLnBhcnNlRXJyb3Ipe1gucGFyc2VFcnJvcj1QfX1yZXR1cm4gWH07cS5zYXAuc2VyaWFsaXplWE1MPWZ1bmN0aW9uIHNlcmlhbGl6ZVhNTCh4KXt2YXIgWD0iIjtpZih3aW5kb3cuQWN0aXZlWE9iamVjdCl7WD14LnhtbDtpZihYKXtyZXR1cm4gWH19aWYod2luZG93LlhNTFNlcmlhbGl6ZXIpe3ZhciBzPW5ldyBYTUxTZXJpYWxpemVyKCk7WD1zLnNlcmlhbGl6ZVRvU3RyaW5nKHgpfXJldHVybiBYfTtxLnNhcC5pc0VxdWFsTm9kZT1mdW5jdGlvbihuLE4pe2lmKG49PT1OKXJldHVybiB0cnVlO2lmKCFufHwhTilyZXR1cm4gZmFsc2U7aWYobi5pc0VxdWFsTm9kZSl7cmV0dXJuIG4uaXNFcXVhbE5vZGUoTil9aWYobi5ub2RlVHlwZSE9Ti5ub2RlVHlwZSlyZXR1cm4gZmFsc2U7aWYobi5ub2RlVmFsdWUhPU4ubm9kZVZhbHVlKXJldHVybiBmYWxzZTtpZihuLmJhc2VOYW1lIT1OLmJhc2VOYW1lKXJldHVybiBmYWxzZTtpZihuLm5vZGVOYW1lIT1OLm5vZGVOYW1lKXJldHVybiBmYWxzZTtpZihuLm5hbWVTcGFjZVVSSSE9Ti5uYW1lU3BhY2VVUkkpcmV0dXJuIGZhbHNlO2lmKG4ucHJlZml4IT1OLnByZWZpeClyZXR1cm4gZmFsc2U7aWYobi5ub2RlVHlwZSE9MSlyZXR1cm4gdHJ1ZTtpZihuLmF0dHJpYnV0ZXMubGVuZ3RoIT1OLmF0dHJpYnV0ZXMubGVuZ3RoKXJldHVybiBmYWxzZTtmb3IodmFyIGk9MDtpPG4uYXR0cmlidXRlcy5sZW5ndGg7aSsrKXtpZighcS5zYXAuaXNFcXVhbE5vZGUobi5hdHRyaWJ1dGVzW2ldLE4uYXR0cmlidXRlc1tpXSkpe3JldHVybiBmYWxzZX19aWYobi5jaGlsZE5vZGVzLmxlbmd0aCE9Ti5jaGlsZE5vZGVzLmxlbmd0aClyZXR1cm4gZmFsc2U7Zm9yKHZhciBpPTA7aTxuLmNoaWxkTm9kZXMubGVuZ3RoO2krKyl7aWYoIXEuc2FwLmlzRXF1YWxOb2RlKG4uY2hpbGROb2Rlc1tpXSxOLmNoaWxkTm9kZXNbaV0pKXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfTtxLnNhcC5nZXRQYXJzZUVycm9yPWZ1bmN0aW9uIGdldFBhcnNlRXJyb3IoZCl7dmFyIHA9e2Vycm9yQ29kZTotMSx1cmw6IiIscmVhc29uOiJ1bmtub3duIGVycm9yIixzcmNUZXh0OiIiLGxpbmU6LTEsbGluZXBvczotMSxmaWxlcG9zOi0xfTtpZighIUQuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmZCYmZC5wYXJzZUVycm9yJiZkLnBhcnNlRXJyb3IuZXJyb3JDb2RlIT0wKXtyZXR1cm4gZC5wYXJzZUVycm9yfWlmKCEhRC5icm93c2VyLmZpcmVmb3gmJmQmJmQuZG9jdW1lbnRFbGVtZW50JiZkLmRvY3VtZW50RWxlbWVudC50YWdOYW1lPT0icGFyc2VyZXJyb3IiKXt2YXIgZT1kLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkLm5vZGVWYWx1ZSxyPS9YTUwgUGFyc2luZyBFcnJvcjogKC4qKVxuTG9jYXRpb246ICguKilcbkxpbmUgTnVtYmVyIChcZCspLCBDb2x1bW4gKFxkKyk6KC4qKS87aWYoci50ZXN0KGUpKXtwLnJlYXNvbj1SZWdFeHAuJDE7cC51cmw9UmVnRXhwLiQyO3AubGluZT1wYXJzZUludChSZWdFeHAuJDMsMTApO3AubGluZXBvcz1wYXJzZUludChSZWdFeHAuJDQsMTApO3Auc3JjVGV4dD1SZWdFeHAuJDV9cmV0dXJuIHB9aWYoISFELmJyb3dzZXIud2Via2l0JiZkJiZkLmRvY3VtZW50RWxlbWVudCYmZC5kb2N1bWVudEVsZW1lbnQudGFnTmFtZT09Imh0bWwiJiZkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJwYXJzZXJlcnJvciIpLmxlbmd0aD4wKXt2YXIgZT1xLnNhcC5zZXJpYWxpemVYTUwoZCkscj0vZXJyb3Igb24gbGluZSAoXGQrKSBhdCBjb2x1bW4gKFxkKyk6IChbXjxdKikvO2lmKHIudGVzdChlKSl7cC5yZWFzb249UmVnRXhwLiQzO3AudXJsPSIiO3AubGluZT1wYXJzZUludChSZWdFeHAuJDEsMTApO3AubGluZXBvcz1wYXJzZUludChSZWdFeHAuJDIsMTApO3Auc3JjVGV4dD0iIn1yZXR1cm4gcH1pZighZHx8IWQuZG9jdW1lbnRFbGVtZW50KXtyZXR1cm4gcH1yZXR1cm57ZXJyb3JDb2RlOjB9fTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuYmFzZS5CaW5kaW5nUGFyc2VyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmJhc2UuQmluZGluZ1BhcnNlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL0JpbmRpbmdQYXJzZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdqcXVlcnkuc2FwLnNjcmlwdCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcj0vXlx7XHMqW2EtekEtWl9dW2EtekEtWjAtOV9dKlxzKjovO3ZhciBhPS8oXFxbXFxce1x9XSl8KFx7KS9nO3ZhciBiPS8oW1xcXHtcfV0pL2c7ZnVuY3Rpb24gYyhmKXt2YXIgRj1mdW5jdGlvbih2KXt2YXIgUj1bXSxsPWYubGVuZ3RoLGk7Zm9yKGk9MDtpPGw7aSsrKXtpZih0eXBlb2YgZltpXT09PSJudW1iZXIiKXtSLnB1c2goYXJndW1lbnRzW2ZbaV1dKX1lbHNle1IucHVzaChmW2ldKX19cmV0dXJuIFIuam9pbignJyl9O0YudGV4dEZyYWdtZW50cz1mO3JldHVybiBGfWZ1bmN0aW9uIGQocCl7dmFyIFA9cC5pbmRleE9mKCI+Iiksbz17cGF0aDpwfTtpZihQPjApe28ubW9kZWw9cC5zbGljZSgwLFApO28ucGF0aD1wLnNsaWNlKFArMSl9cmV0dXJuIG99dmFyIEI9e307Qi5fa2VlcEJpbmRpbmdTdHJpbmdzPWZhbHNlO0Iuc2ltcGxlUGFyc2VyPWZ1bmN0aW9uKHMsQyl7aWYocS5zYXAuc3RhcnRzV2l0aChzLCJ7IikmJnEuc2FwLmVuZHNXaXRoKHMsIn0iKSl7cmV0dXJuIGQocy5zbGljZSgxLC0xKSl9fTtCLnNpbXBsZVBhcnNlci5lc2NhcGU9ZnVuY3Rpb24odil7cmV0dXJuIHZ9O0IuY29tcGxleFBhcnNlcj1mdW5jdGlvbihzLEMsdSl7dmFyIGU9cS5zYXAucGFyc2VKUyxmPXtwYXJ0czpbXX0sRj1bXSxVLFAscD0wLG0sZztmdW5jdGlvbiBoKG8sayl7aWYodHlwZW9mIG9ba109PT0ic3RyaW5nIil7aWYocS5zYXAuc3RhcnRzV2l0aChvW2tdLCIuIikpe29ba109cS5wcm94eShxLnNhcC5nZXRPYmplY3Qob1trXS5zbGljZSgxKSx1bmRlZmluZWQsQyksQyl9ZWxzZXtvW2tdPXEuc2FwLmdldE9iamVjdChvW2tdKX19fWZ1bmN0aW9uIGkobyxrKXt2YXIgbDtpZih0eXBlb2Ygb1trXT09PSJzdHJpbmciKXtpZihxLnNhcC5zdGFydHNXaXRoKG9ba10sIi4iKSl7bD1xLnNhcC5nZXRPYmplY3Qob1trXS5zbGljZSgxKSx1bmRlZmluZWQsQyl9ZWxzZXtsPXEuc2FwLmdldE9iamVjdChvW2tdKX1pZih0eXBlb2YgbD09PSJmdW5jdGlvbiIpe29ba109bmV3IGwoby5mb3JtYXRPcHRpb25zLG8uY29uc3RyYWludHMpfWVsc2V7b1trXT1sfWRlbGV0ZSBvLmZvcm1hdE9wdGlvbnM7ZGVsZXRlIG8uY29uc3RyYWludHN9fWZ1bmN0aW9uIGoobyxrLGwpe3ZhciBuO2lmKCEodHlwZW9mIG9ba109PT0ib2JqZWN0Inx8cS5pc0FycmF5KG9ba10pKSl7cmV0dXJufWlmKHEuaXNBcnJheShvW2tdKSl7cS5lYWNoKG9ba10sZnVuY3Rpb24oSSxPKXtqKG9ba10sSSxrKX0pfWVsc2V7aWYoaz09PSJmaWx0ZXJzInx8bD09PSJmaWx0ZXJzIil7bj1xLnNhcC5nZXRPYmplY3QoInNhcC51aS5tb2RlbC5GaWx0ZXIiKX1lbHNlIGlmKGs9PT0ic29ydGVyInx8bD09PSJzb3J0ZXIiKXtuPXEuc2FwLmdldE9iamVjdCgic2FwLnVpLm1vZGVsLlNvcnRlciIpO2gob1trXSwiZ3JvdXAiKX1pZihuKXtvW2tdPW5ldyBuKG9ba10pfX19d2hpbGUobT1hLmV4ZWMocykpe2lmKHA8bS5pbmRleCl7Ri5wdXNoKHMuc2xpY2UocCxtLmluZGV4KSl9aWYobVsxXSl7Ri5wdXNoKG1bMV0uc2xpY2UoMSkpO1U9dHJ1ZX1lbHNle2lmKHIudGVzdChzLnNsaWNlKG0uaW5kZXgpKSl7UD1lKHMsbS5pbmRleCk7aShQLnJlc3VsdCwndHlwZScpO2ooUC5yZXN1bHQsJ2ZpbHRlcnMnKTtqKFAucmVzdWx0LCdzb3J0ZXInKTtoKFAucmVzdWx0LCdmb3JtYXR0ZXInKTtoKFAucmVzdWx0LCdmYWN0b3J5Jyk7Ri5wdXNoKGYucGFydHMubGVuZ3RoKTtmLnBhcnRzLnB1c2goUC5yZXN1bHQpO2EubGFzdEluZGV4PVAuYXR9ZWxzZXtnPXMuaW5kZXhPZignfScsbS5pbmRleCk7aWYoZzxtLmluZGV4KXt0aHJvdyBuZXcgU3ludGF4RXJyb3IoIm5vIGNsb3NpbmcgYnJhY2VzIGZvdW5kIGluICciK3MrIicgYWZ0ZXIgcG9zOiIrbS5pbmRleCl9Ri5wdXNoKGYucGFydHMubGVuZ3RoKTtmLnBhcnRzLnB1c2goZChzLnNsaWNlKG0uaW5kZXgrMSxnKSkpO2EubGFzdEluZGV4PWcrMX19cD1hLmxhc3RJbmRleH1pZihwPHMubGVuZ3RoKXtGLnB1c2gocy5zbGljZShwKSl9aWYoZi5wYXJ0cy5sZW5ndGg+MCl7aWYoRi5sZW5ndGg9PT0xKXtmPWYucGFydHNbMF19ZWxzZXtmLmZvcm1hdHRlcj1jKEYpfWlmKEIuX2tlZXBCaW5kaW5nU3RyaW5ncyl7Zi5iaW5kaW5nU3RyaW5nPXN9cmV0dXJuIGZ9ZWxzZSBpZih1JiZVKXtyZXR1cm4gRi5qb2luKCcnKX19O0IuY29tcGxleFBhcnNlci5lc2NhcGU9ZnVuY3Rpb24odil7cmV0dXJuIHYucmVwbGFjZShiLCJcXCQxIil9O3JldHVybiBCfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmJhc2UuRGF0YVR5cGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuYmFzZS5EYXRhVHlwZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL0RhdGFUeXBlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBEPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCl9O0QucHJvdG90eXBlLmdldE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdW5kZWZpbmVkfTtELnByb3RvdHlwZS5nZXRCYXNlVHlwZT1mdW5jdGlvbigpe3JldHVybiB1bmRlZmluZWR9O0QucHJvdG90eXBlLmdldENvbXBvbmVudFR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4gdW5kZWZpbmVkfTtELnByb3RvdHlwZS5nZXREZWZhdWx0VmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdW5kZWZpbmVkfTtELnByb3RvdHlwZS5pc0FycmF5VHlwZT1mdW5jdGlvbigpe3JldHVybiB1bmRlZmluZWR9O0QucHJvdG90eXBlLnBhcnNlVmFsdWU9ZnVuY3Rpb24odil7dmFyIHQ9dGhpcy5nZXROYW1lKCk7aWYodD09InN0cmluZyIpe3JldHVybiB2fWVsc2UgaWYodD09ImJvb2xlYW4iKXtyZXR1cm4gdj09InRydWUifWVsc2UgaWYodD09ImludCIpe3JldHVybiBwYXJzZUludCh2LDEwKX1lbHNlIGlmKHQ9PSJmbG9hdCIpe3JldHVybiBwYXJzZUZsb2F0KHYpfWVsc2UgaWYodD09Im9iamVjdCIpe3JldHVybiB2P3EucGFyc2VKU09OKHYpOm51bGx9ZWxzZXtyZXR1cm4gdn19O0QucHJvdG90eXBlLmlzVmFsaWQ9dW5kZWZpbmVkO0QucHJvdG90eXBlLnNldE5vcm1hbGl6ZXI9ZnVuY3Rpb24obil7dGhpcy5fZm5Ob3JtYWxpemVyPW59O0QucHJvdG90eXBlLm5vcm1hbGl6ZT1mdW5jdGlvbih2KXtpZih0eXBlb2YgdGhpcy5fZm5Ob3JtYWxpemVyPT09ImZ1bmN0aW9uIil7cmV0dXJuIHRoaXMuX2ZuTm9ybWFsaXplcih2KX1lbHNle3JldHVybiB2fX07KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYyhuLHMsYil7cz1zfHx7fTtiPWJ8fEQucHJvdG90eXBlO3ZhciB0PXEuc2FwLm5ld09iamVjdChiKTt0LmdldE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gbn07aWYocy5oYXNPd25Qcm9wZXJ0eSgiZGVmYXVsdFZhbHVlIikpe3ZhciBkPXMuZGVmYXVsdFZhbHVlO3QuZ2V0RGVmYXVsdFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIGR9fWlmKHMuaGFzT3duUHJvcGVydHkoImlzVmFsaWQiKSl7dmFyIGk9cy5pc1ZhbGlkO3QuaXNWYWxpZD1iLmlzVmFsaWQ/ZnVuY3Rpb24odil7aWYoIWIuaXNWYWxpZCh2KSl7cmV0dXJuIGZhbHNlfXJldHVybiBpKHYpfTppfTt0LmlzQXJyYXlUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlfTtyZXR1cm4gdH1mdW5jdGlvbiBhKGIpe3ZhciB0PXEuc2FwLm5ld09iamVjdChELnByb3RvdHlwZSk7dC5nZXROYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIGIuZ2V0TmFtZSgpKyJbXSJ9O3QuZ2V0Q29tcG9uZW50VHlwZT1mdW5jdGlvbigpe3JldHVybiBifTt0LmlzVmFsaWQ9ZnVuY3Rpb24odil7aWYodj09PW51bGwpe3JldHVybiB0cnVlfWlmKHEuaXNBcnJheSh2KSl7Zm9yKHZhciBpPTA7aTx2Lmxlbmd0aDtpKyspe2lmKCFiLmlzVmFsaWQodltpXSkpe3JldHVybiBmYWxzZX19cmV0dXJuIHRydWV9cmV0dXJuIGZhbHNlfTt0LnBhcnNlVmFsdWU9ZnVuY3Rpb24odil7dmFyIFY9di5zcGxpdCgiLCIpO2Zvcih2YXIgaT0wO2k8Vi5sZW5ndGg7aSsrKXtWW2ldPWIucGFyc2VWYWx1ZShWW2ldKX1yZXR1cm4gVn07dC5pc0FycmF5VHlwZT1mdW5jdGlvbigpe3JldHVybiB0cnVlfTtyZXR1cm4gdH12YXIgUD17ImFueSI6YygiYW55Iix7ZGVmYXVsdFZhbHVlOm51bGwsaXNWYWxpZDpmdW5jdGlvbih2KXtyZXR1cm4gdHJ1ZX19KSwiYm9vbGVhbiI6YygiYm9vbGVhbiIse2RlZmF1bHRWYWx1ZTpmYWxzZSxpc1ZhbGlkOmZ1bmN0aW9uKHYpe3JldHVybiB0eXBlb2Ygdj09PSJib29sZWFuIn19KSwiaW50IjpjKCJpbnQiLHtkZWZhdWx0VmFsdWU6MCxpc1ZhbGlkOmZ1bmN0aW9uKHYpe3JldHVybiB0eXBlb2Ygdj09PSJudW1iZXIiJiZNYXRoLmZsb29yKHYpPT12fX0pLCJmbG9hdCI6YygiZmxvYXQiLHtkZWZhdWx0VmFsdWU6MC4wLGlzVmFsaWQ6ZnVuY3Rpb24odil7cmV0dXJuIHR5cGVvZiB2PT09Im51bWJlciJ9fSksInN0cmluZyI6Yygic3RyaW5nIix7ZGVmYXVsdFZhbHVlOiIiLGlzVmFsaWQ6ZnVuY3Rpb24odil7cmV0dXJuIHR5cGVvZiB2PT09InN0cmluZyJ8fHYgaW5zdGFuY2VvZiBTdHJpbmd9fSksIm9iamVjdCI6Yygib2JqZWN0Iix7ZGVmYXVsdFZhbHVlOm51bGwsaXNWYWxpZDpmdW5jdGlvbih2KXtyZXR1cm4gdHlwZW9mIHY9PT0ib2JqZWN0Inx8dHlwZW9mIHY9PT0iZnVuY3Rpb24ifX0pfTtELmdldFR5cGU9ZnVuY3Rpb24odCl7aWYodC5pbmRleE9mKCJbXSIpPjApe3ZhciBDPXQuc3Vic3RyKDAsdC5sZW5ndGgtMiksbz10aGlzLmdldFR5cGUoQyk7cmV0dXJuIG8mJmEobyl9ZWxzZXtyZXR1cm4gUFt0XXx8cS5zYXAuZ2V0T2JqZWN0KHQpfX07RC5jcmVhdGVUeXBlPWM7dmFyIEk9e307RC5yZWdpc3RlckludGVyZmFjZVR5cGVzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXtxLnNhcC5zZXRPYmplY3QodFtpXSxJW3RbaV1dPW5ldyBTdHJpbmcodFtpXSkpfX07RC5pc0ludGVyZmFjZVR5cGU9ZnVuY3Rpb24odCl7cmV0dXJuIEkuaGFzT3duUHJvcGVydHkodCkmJnEuc2FwLmdldE9iamVjdCh0KT09PUlbdF19fSgpKTtyZXR1cm4gRH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLkV4Y2VwdGlvbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5iYXNlLkV4Y2VwdGlvbicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL0V4Y2VwdGlvbiIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgRT1mdW5jdGlvbihtKXt0aGlzLm5hbWU9IkV4Y2VwdGlvbiI7dGhpcy5tZXNzYWdlPW19O3JldHVybiBFfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmJhc2UuSW50ZXJmYWNlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmJhc2UuSW50ZXJmYWNlJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2Jhc2UvSW50ZXJmYWNlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBJPWZ1bmN0aW9uKG8sbSl7aWYoIW8pe3JldHVybiBvfWZ1bmN0aW9uIGMobyxNKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1vW01dLmFwcGx5KG8sYXJndW1lbnRzKTtyZXR1cm4odCBpbnN0YW5jZW9mIHNhcC51aS5iYXNlLk9iamVjdCk/dC5nZXRJbnRlcmZhY2UoKTp0fX1pZighbSl7cmV0dXJue319dmFyIE07Zm9yKHZhciBpPTAsYT1tLmxlbmd0aDtpPGE7aSsrKXtNPW1baV07dGhpc1tNXT1jKG8sTSl9fTtyZXR1cm4gSX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLk1ldGFkYXRhJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmJhc2UuTWV0YWRhdGEnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvYmFzZS9NZXRhZGF0YSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ2pxdWVyeS5zYXAuc2NyaXB0J10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBNPWZ1bmN0aW9uKGMsQyl7aWYoIUN8fHR5cGVvZiBDLm1ldGFkYXRhIT09Im9iamVjdCIpe0M9e21ldGFkYXRhOkN8fHt9LGNvbnN0cnVjdG9yOnEuc2FwLmdldE9iamVjdChjKX07Qy5tZXRhZGF0YS5fX3ZlcnNpb249MS4wfUMubWV0YWRhdGEuX192ZXJzaW9uPUMubWV0YWRhdGEuX192ZXJzaW9ufHwyLjA7aWYodHlwZW9mIEMuY29uc3RydWN0b3IhPT0iZnVuY3Rpb24iKXt0aHJvdyBFcnJvcigiY29uc3RydWN0b3IgZm9yIGNsYXNzICIrYysiIG11c3QgaGF2ZSBiZWVuIGRlY2xhcmVkIGJlZm9yZSBjcmVhdGluZyBtZXRhZGF0YSBmb3IgaXQiKX10aGlzLl9zQ2xhc3NOYW1lPWM7dGhpcy5fb0NsYXNzPUMuY29uc3RydWN0b3I7dGhpcy5leHRlbmQoQyl9O00ucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihjKXt0aGlzLmFwcGx5U2V0dGluZ3MoYyk7dGhpcy5hZnRlckFwcGx5U2V0dGluZ3MoKX07TS5wcm90b3R5cGUuYXBwbHlTZXR0aW5ncz1mdW5jdGlvbihjKXt2YXIgdD10aGlzLHM9Yy5tZXRhZGF0YSxwLG47aWYocy5iYXNlVHlwZSl7dmFyIFA9cS5zYXAuZ2V0T2JqZWN0KHMuYmFzZVR5cGUpO2lmKHR5cGVvZiBQIT09ImZ1bmN0aW9uIil7cS5zYXAubG9nLmZhdGFsKCJiYXNlIGNsYXNzICciK3MuYmFzZVR5cGUrIicgZG9lcyBub3QgZXhpc3QiKX1pZihQLmdldE1ldGFkYXRhKXt0aGlzLl9vUGFyZW50PVAuZ2V0TWV0YWRhdGEoKTt9ZWxzZXt0aGlzLl9vUGFyZW50PW5ldyBNKHMuYmFzZVR5cGUse30pfX1lbHNle3RoaXMuX29QYXJlbnQ9dW5kZWZpbmVkfXRoaXMuX2JBYnN0cmFjdD0hIXNbImFic3RyYWN0Il07dGhpcy5fYkZpbmFsPSEhc1siZmluYWwiXTt0aGlzLl9zU3RlcmVvdHlwZT1zLnN0ZXJlb3R5cGV8fCh0aGlzLl9vUGFyZW50P3RoaXMuX29QYXJlbnQuX3NTdGVyZW90eXBlOiJvYmplY3QiKTt0aGlzLl9hSW50ZXJmYWNlcz1xLnNhcC51bmlxdWUocy5pbnRlcmZhY2VzfHxbXSk7dGhpcy5fYVB1YmxpY01ldGhvZHM9cS5zYXAudW5pcXVlKHMucHVibGljTWV0aG9kc3x8W10pO3A9dGhpcy5fb0NsYXNzLnByb3RvdHlwZTtxLnNhcC5mb3JJbihjLGZ1bmN0aW9uKG4sdil7aWYobiE9PSJtZXRhZGF0YSImJm4hPT0iY29uc3RydWN0b3IiKXtwW25dPXY7aWYoIW4ubWF0Y2goL15ffF5vbnxeaW5pdCR8XmV4aXQkLykpe3QuX2FQdWJsaWNNZXRob2RzLnB1c2gobil9fX0pfTtNLnByb3RvdHlwZS5hZnRlckFwcGx5U2V0dGluZ3M9ZnVuY3Rpb24oKXtpZih0aGlzLl9vUGFyZW50KXt0aGlzLl9hQWxsUHVibGljTWV0aG9kcz1xLnNhcC51bmlxdWUodGhpcy5fb1BhcmVudC5fYUFsbFB1YmxpY01ldGhvZHMuY29uY2F0KHRoaXMuX2FQdWJsaWNNZXRob2RzKSl9ZWxzZXt0aGlzLl9hQWxsUHVibGljTWV0aG9kcz10aGlzLl9hUHVibGljTWV0aG9kc319O00ucHJvdG90eXBlLmdldFN0ZXJlb3R5cGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc1N0ZXJlb3R5cGV9O00ucHJvdG90eXBlLmdldE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc0NsYXNzTmFtZX07TS5wcm90b3R5cGUuZ2V0Q2xhc3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb0NsYXNzfTtNLnByb3RvdHlwZS5nZXRQYXJlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb1BhcmVudH07TS5wcm90b3R5cGUuZ2V0UHVibGljTWV0aG9kcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hUHVibGljTWV0aG9kc307TS5wcm90b3R5cGUuZ2V0QWxsUHVibGljTWV0aG9kcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hQWxsUHVibGljTWV0aG9kc307TS5wcm90b3R5cGUuZ2V0SW50ZXJmYWNlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hSW50ZXJmYWNlc307TS5wcm90b3R5cGUuaXNJbnN0YW5jZU9mPWZ1bmN0aW9uKEkpe2lmKHRoaXMuX29QYXJlbnQpe2lmKHRoaXMuX29QYXJlbnQuaXNJbnN0YW5jZU9mKEkpKXtyZXR1cm4gdHJ1ZX19O3ZhciBhPXRoaXMuX2FJbnRlcmZhY2VzO2Zvcih2YXIgaT0wLGw9YS5sZW5ndGg7aTxsO2krKyl7aWYoYVtpXT09PUkpe3JldHVybiB0cnVlfX1yZXR1cm4gZmFsc2V9O00ucHJvdG90eXBlLmlzQWJzdHJhY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYkFic3RyYWN0fTtNLnByb3RvdHlwZS5pc0ZpbmFsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JGaW5hbH07TS5wcm90b3R5cGUuYWRkUHVibGljTWV0aG9kcz1mdW5jdGlvbihtKXt2YXIgbj0obSBpbnN0YW5jZW9mIEFycmF5KT9tOmFyZ3VtZW50cztmdW5jdGlvbiB1KGEsdil7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYSx2KTtxLnNhcC51bmlxdWUoYSl9dSh0aGlzLl9hUHVibGljTWV0aG9kcyxuKTt1KHRoaXMuX2FBbGxQdWJsaWNNZXRob2RzLG4pfTtNLmNyZWF0ZUNsYXNzPWZ1bmN0aW9uKGIsYyxDLEYpe2lmKHR5cGVvZiBiPT09InN0cmluZyIpe0Y9QztDPWM7Yz1iO2I9bnVsbH1GPUZ8fE07aWYodHlwZW9mIEYucHJlcHJvY2Vzc0NsYXNzSW5mbz09PSJmdW5jdGlvbiIpe0M9Ri5wcmVwcm9jZXNzQ2xhc3NJbmZvKEMpfUM9Q3x8e307Qy5tZXRhZGF0YT1DLm1ldGFkYXRhfHx7fTtpZighQy5oYXNPd25Qcm9wZXJ0eSgnY29uc3RydWN0b3InKSl7Qy5jb25zdHJ1Y3Rvcj11bmRlZmluZWR9dmFyIGY9Qy5jb25zdHJ1Y3RvcjtpZihiKXtpZighZil7aWYoQy5tZXRhZGF0YS5kZXByZWNhdGVkKXtmPWZ1bmN0aW9uKCl7cS5zYXAubG9nLndhcm5pbmcoIlVzYWdlIG9mIGRlcHJlY2F0ZWQgY2xhc3M6ICIrYyk7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWVsc2V7Zj1mdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19Zi5wcm90b3R5cGU9cS5zYXAubmV3T2JqZWN0KGIucHJvdG90eXBlKTtmLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1mO0MubWV0YWRhdGEuYmFzZVR5cGU9Yi5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKX1lbHNle2Y9Znx8ZnVuY3Rpb24oKXt9O2RlbGV0ZSBDLm1ldGFkYXRhLmJhc2VUeXBlfUMuY29uc3RydWN0b3I9ZjtxLnNhcC5zZXRPYmplY3QoYyxmKTt2YXIgbT1uZXcgRihjLEMpO2YuZ2V0TWV0YWRhdGE9Zi5wcm90b3R5cGUuZ2V0TWV0YWRhdGE9cS5zYXAuZ2V0dGVyKG0pO2lmKCFmLmdldE1ldGFkYXRhKCkuaXNGaW5hbCgpKXtmLmV4dGVuZD1mdW5jdGlvbihzLFMsYSl7cmV0dXJuIE0uY3JlYXRlQ2xhc3MoZixzLFMsYXx8Ril9fXJldHVybiBmfTtyZXR1cm4gTX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLk9iamVjdCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5iYXNlLk9iamVjdCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL09iamVjdCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vSW50ZXJmYWNlJywnLi9NZXRhZGF0YSddLGZ1bmN0aW9uKHEsSSxNKXsidXNlIHN0cmljdCI7dmFyIEI9TS5jcmVhdGVDbGFzcygic2FwLnVpLmJhc2UuT2JqZWN0Iix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtpZighKHRoaXMgaW5zdGFuY2VvZiBCKSl7dGhyb3cgRXJyb3IoIkNhbm5vdCBpbnN0YW50aWF0ZSBvYmplY3Q6IFwibmV3XCIgaXMgbWlzc2luZyEiKX19fSk7Qi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe307Qi5wcm90b3R5cGUuZ2V0SW50ZXJmYWNlPWZ1bmN0aW9uKCl7dmFyIGk9bmV3IEkodGhpcyx0aGlzLmdldE1ldGFkYXRhKCkuZ2V0QWxsUHVibGljTWV0aG9kcygpKTt0aGlzLmdldEludGVyZmFjZT1xLnNhcC5nZXR0ZXIoaSk7cmV0dXJuIGl9O0IuZGVmaW5lQ2xhc3M9ZnVuY3Rpb24oYyxzLEYpe3ZhciBtPW5ldyhGfHxNKShjLHMpO3ZhciBDPW0uZ2V0Q2xhc3MoKTtDLmdldE1ldGFkYXRhPUMucHJvdG90eXBlLmdldE1ldGFkYXRhPXEuc2FwLmdldHRlcihtKTtpZighbS5pc0ZpbmFsKCkpe0MuZXh0ZW5kPWZ1bmN0aW9uKFMsbyxmKXtyZXR1cm4gTS5jcmVhdGVDbGFzcyhDLFMsbyxmfHxGKX19cS5zYXAubG9nLmRlYnVnKCJkZWZpbmVkIGNsYXNzICciK2MrIiciKyhtLmdldFBhcmVudCgpPyIgYXMgc3ViY2xhc3Mgb2YgIittLmdldFBhcmVudCgpLmdldE5hbWUoKToiIikpO3JldHVybiBtfTtyZXR1cm4gQn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLk9iamVjdFBvb2wnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuYmFzZS5PYmplY3RQb29sJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2Jhc2UvT2JqZWN0UG9vbCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vT2JqZWN0J10sZnVuY3Rpb24ocSxCKXsidXNlIHN0cmljdCI7dmFyIE89Qi5leHRlbmQoInNhcC51aS5iYXNlLk9iamVjdFBvb2wiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihvKXtCLmFwcGx5KHRoaXMpO3RoaXMub09iamVjdENsYXNzPW87dGhpcy5hRnJlZU9iamVjdHM9W119fSk7Ty5wcm90b3R5cGUuYm9ycm93T2JqZWN0PWZ1bmN0aW9uKCl7dmFyIG89dGhpcy5hRnJlZU9iamVjdHMubGVuZ3RoPT0wP25ldyB0aGlzLm9PYmplY3RDbGFzcygpOnRoaXMuYUZyZWVPYmplY3RzLnBvcCgpO28uaW5pdC5hcHBseShvLGFyZ3VtZW50cyk7cmV0dXJuIG99O08ucHJvdG90eXBlLnJldHVybk9iamVjdD1mdW5jdGlvbihvKXtvLnJlc2V0KCk7dGhpcy5hRnJlZU9iamVjdHMucHVzaChvKX07cmV0dXJuIE99LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXJSZW5kZXJlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkNvbXBvbmVudENvbnRhaW5lclJlbmRlcmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvQ29tcG9uZW50Q29udGFpbmVyUmVuZGVyZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIEM9e307Qy5yZW5kZXI9ZnVuY3Rpb24ocixjKXt2YXIgUj1yO3ZhciBiPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFJUTCgpO3ZhciBvPWMuZ2V0Q29tcG9uZW50SW5zdGFuY2UoKTt2YXIgdz1jLmdldFdpZHRoKCk7dmFyIGg9Yy5nZXRIZWlnaHQoKTtSLndyaXRlKCI8ZGl2Iik7Ui53cml0ZUNvbnRyb2xEYXRhKGMpO2lmKHcpe1IuYWRkU3R5bGUoIndpZHRoIix3KX1pZihoKXtSLmFkZFN0eWxlKCJoZWlnaHQiLGgpfVIud3JpdGVTdHlsZXMoKTtSLmFkZENsYXNzKCJzYXBVaUNvbXBvbmVudENvbnRhaW5lciIpO1Iud3JpdGVDbGFzc2VzKCk7Ui53cml0ZSgiPiIpO1Iud3JpdGUoIjxkaXYgaWQ9XCIiK2MuZ2V0SWQoKSsiLXVpYXJlYVwiIik7aWYodyYmdyE9PSJhdXRvIil7Ui5hZGRTdHlsZSgid2lkdGgiLCIxMDAlIil9aWYoaCYmaCE9PSJhdXRvIil7Ui5hZGRTdHlsZSgiaGVpZ2h0IiwiMTAwJSIpfVIud3JpdGVTdHlsZXMoKTtSLndyaXRlKCI+Iik7aWYobyl7by5yZW5kZXIoUil9Ui53cml0ZSgiPC9kaXY+PC9kaXY+Iil9O3JldHVybiBDfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuRGVjbGFyYXRpdmVTdXBwb3J0Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuRGVjbGFyYXRpdmVTdXBwb3J0Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvRGVjbGFyYXRpdmVTdXBwb3J0IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBEPXt9O0QuYXR0cmlidXRlcz17ImRhdGEtc2FwLXVpLXR5cGUiOnRydWUsImRhdGEtc2FwLXVpLWFnZ3JlZ2F0aW9uIjp0cnVlLCJkYXRhLXNhcC11aS1kZWZhdWx0LWFnZ3JlZ2F0aW9uIjp0cnVlLCJkYXRhLXNhcC11aS1iaW5kaW5nIjpmdW5jdGlvbih2LHMpe3ZhciBiPXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuYmluZGluZ1BhcnNlcih2KTtzLm9iamVjdEJpbmRpbmdzPXMub2JqZWN0QmluZGluZ3N8fHt9O3Mub2JqZWN0QmluZGluZ3NbYi5tb2RlbHx8dW5kZWZpbmVkXT1ifSwiZGF0YS10b29sdGlwIjpmdW5jdGlvbih2LHMpe3NbInRvb2x0aXAiXT12fSwidG9vbHRpcCI6ZnVuY3Rpb24odixzLGMpe3NbInRvb2x0aXAiXT12O3Euc2FwLmxvZy53YXJuaW5nKCdbRGVwcmVjYXRlZF0gQ29udHJvbCAiJytzLmlkKyciOiBUaGUgYXR0cmlidXRlICJ0b29sdGlwIiBpcyBub3QgcHJlZml4ZWQgd2l0aCAiZGF0YS0qIi4gRnV0dXJlIHZlcnNpb24gb2YgZGVjbGFyYXRpdmUgc3VwcG9ydCB3aWxsIG9ubHkgc3VwcHBvcnQgYXR0cmlidXRlcyB3aXRoICJkYXRhLSoiIHByZWZpeC4nKX0sImNsYXNzIjp0cnVlLCJzdHlsZSI6dHJ1ZSwiaWQiOnRydWV9O0QuY29tcGlsZT1mdW5jdGlvbihlLHYsaSl7dmFyIHM9dGhpcztxKGUpLmZpbmQoIltkYXRhLXNhcC11aS10eXBlXSIpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiBxKHRoaXMpLnBhcmVudHMoIltkYXRhLXNhcC11aS10eXBlXSIpLmxlbmd0aD09PTB9KS5lYWNoKGZ1bmN0aW9uKCl7cy5fY29tcGlsZSh0aGlzLHYsaSl9KX07RC5fY29tcGlsZT1mdW5jdGlvbihlLHYsaSl7dmFyICQ9cShlKTt2YXIgdD0kLmF0dHIoImRhdGEtc2FwLXVpLXR5cGUiKTt2YXIgYz1bXTt2YXIgST10PT09InNhcC51aS5jb3JlLlVJQXJlYSI7aWYoSSl7dmFyIHM9dGhpczskLmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbigpe3ZhciBDPXMuX2NyZWF0ZUNvbnRyb2wodGhpcyx2KTtpZihDKXtjLnB1c2goQyl9fSl9ZWxzZXt2YXIgQz10aGlzLl9jcmVhdGVDb250cm9sKGUsdik7aWYoQyl7Yy5wdXNoKEMpfX0kLmVtcHR5KCk7dmFyIGE9W107cS5lYWNoKGUuYXR0cmlidXRlcyxmdW5jdGlvbihiLEEpe3ZhciBuPUEubmFtZTtpZighSXx8SSYmL15kYXRhLS9nLnRlc3Qobi50b0xvd2VyQ2FzZSgpKSl7YS5wdXNoKG4pfX0pO2lmKGEubGVuZ3RoPjApeyQucmVtb3ZlQXR0cihhLmpvaW4oIiAiKSl9cS5lYWNoKGMsZnVuY3Rpb24oayxDKXtpZihDIGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuQ29udHJvbCl7aWYodiYmIWkpe3YuYWRkQ29udGVudChDKX1lbHNle0MucGxhY2VBdChlKTtpZih2KXt2LmNvbm5lY3RDb250cm9sKEMpfX19fSl9O0QuX2NyZWF0ZUNvbnRyb2w9ZnVuY3Rpb24oZSx2KXt2YXIgJD1xKGUpO3ZhciBjPW51bGw7dmFyIHQ9JC5hdHRyKCJkYXRhLXNhcC11aS10eXBlIik7aWYodCl7cS5zYXAucmVxdWlyZSh0KTt2YXIgQz1xLnNhcC5nZXRPYmplY3QodCk7dmFyIHM9e307dmFyIGk9cy5pZD10aGlzLl9nZXRJZCgkLHYpO3RoaXMuX2FkZFNldHRpbmdzRm9yQXR0cmlidXRlcyhzLEMsZSx2KTt0aGlzLl9hZGRTZXR0aW5nc0ZvckFnZ3JlZ2F0aW9ucyhzLEMsZSx2KTt2YXIgYztpZihzYXAudWkuY29yZS5tdmMuVmlldy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihDLnByb3RvdHlwZSkmJnR5cGVvZiBDLl9zVHlwZT09PSJzdHJpbmciKXtjPXNhcC51aS52aWV3KHMsdW5kZWZpbmVkLEMuX3NUeXBlKX1lbHNle2M9bmV3IEMocyl9aWYoZS5jbGFzc05hbWUpe2MuYWRkU3R5bGVDbGFzcyhlLmNsYXNzTmFtZSl9JC5yZW1vdmVBdHRyKCJkYXRhLXNhcC11aS10eXBlIil9ZWxzZXtjPXRoaXMuX2NyZWF0ZUh0bWxDb250cm9sKGUsdil9cmV0dXJuIGN9O0QuX2NyZWF0ZUh0bWxDb250cm9sPWZ1bmN0aW9uKGUsdil7dmFyIGg9bmV3IHNhcC51aS5jb3JlLkhUTUwoKTtoLnNldERPTUNvbnRlbnQoZSk7dGhpcy5jb21waWxlKGUsdix0cnVlKTtyZXR1cm4gaH07RC5fYWRkU2V0dGluZ3NGb3JBdHRyaWJ1dGVzPWZ1bmN0aW9uKHMsYyxlLHYpe3ZhciBhPXRoaXM7dmFyIFM9RC5hdHRyaWJ1dGVzO3ZhciBiPXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuYmluZGluZ1BhcnNlcjt2YXIgQz1bXTt2YXIgcj0vXmRhdGEtY3VzdG9tLWRhdGE6KC4rKS9pO3EuZWFjaChlLmF0dHJpYnV0ZXMsZnVuY3Rpb24oaSxBKXt2YXIgbj1BLm5hbWU7dmFyIFY9QS52YWx1ZTtpZighci50ZXN0KG4pKXtpZih0eXBlb2YgU1tuXT09PSJ1bmRlZmluZWQiKXtuPWEuY29udmVydEF0dHJpYnV0ZVRvU2V0dGluZ05hbWUobixzLmlkKTt2YXIgcD1hLl9nZXRQcm9wZXJ0eShjLG4pO2lmKHApe3ZhciBCPWIoVix2JiZ2LmdldENvbnRyb2xsZXIoKSx0cnVlKTtpZihCJiZ0eXBlb2YgQj09PSJvYmplY3QiKXtzW25dPUJ9ZWxzZXtzW25dPWEuY29udmVydFZhbHVlVG9UeXBlKGEuZ2V0UHJvcGVydHlEYXRhVHlwZShwKSxCfHxWKX19ZWxzZSBpZihhLl9nZXRBc3NvY2lhdGlvbihjLG4pKXt2YXIgbz1hLl9nZXRBc3NvY2lhdGlvbihjLG4pO2lmKG8ubXVsdGlwbGUpe1Y9Vi5yZXBsYWNlKC9ccyosXHMqfFxzKy9nLCIsIik7dmFyIEk9Vi5zcGxpdCgiLCIpO3EuZWFjaChJLGZ1bmN0aW9uKGksZyl7SVtpXT12P3YuY3JlYXRlSWQoZyk6Z30pO3Nbbl09SX1lbHNle3Nbbl09dj92LmNyZWF0ZUlkKFYpOlZ9fWVsc2UgaWYoYS5fZ2V0QWdncmVnYXRpb24oYyxuKSl7dmFyIGQ9YS5fZ2V0QWdncmVnYXRpb24oYyxuKTtpZihkLm11bHRpcGxlKXt2YXIgQj1iKFYsdiYmdi5nZXRDb250cm9sbGVyKCkpO2lmKEIpe3Nbbl09Qn1lbHNle3Rocm93IG5ldyBFcnJvcigiQWdncmVnYXRpb24gIituKyIgd2l0aCBjYXJkaW5hbGl0eSAwLi5uIG9ubHkgYWxsb3dzIGJpbmRpbmcgcGF0aHMgYXMgYXR0cmlidXRlIHZhbHVlIil9fWVsc2UgaWYoZC5hbHRUeXBlcyl7dmFyIEI9YihWLHYmJnYuZ2V0Q29udHJvbGxlcigpLHRydWUpO2lmKEImJnR5cGVvZiBCPT09Im9iamVjdCIpe3Nbbl09Qn1lbHNle3Nbbl09YS5jb252ZXJ0VmFsdWVUb1R5cGUoZC5hbHRUeXBlc1swXSxCfHxWKX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIkFnZ3JlZ2F0aW9uICIrbisiIG5vdCBzdXBwb3J0ZWQiKX19ZWxzZSBpZihhLl9nZXRFdmVudChjLG4pKXt2YXIgaD1xLnNhcC5nZXRPYmplY3QoVik7aWYodiYmdHlwZW9mIGg9PT0idW5kZWZpbmVkIil7dmFyIGY9KHYuX29Db250YWluaW5nVmlld3x8dikuZ2V0Q29udHJvbGxlcigpO2g9ZltWXTtpZih0eXBlb2YgaD09PSJmdW5jdGlvbiIpe2g9cS5wcm94eShoLGYpO2guX3NhcHVpX2hhbmRsZXJOYW1lPVZ9fWlmKHR5cGVvZiBoPT09ImZ1bmN0aW9uIil7c1tuXT1ofWVsc2V7dGhyb3cgbmV3IEVycm9yKCdDb250cm9sICInK3MuaWQrJyI6IFRoZSBmdW5jdGlvbiAiJytWKyciIGZvciB0aGUgZXZlbnQgIicrbisnIiBpcyBub3QgZGVmaW5lZCcpfX19ZWxzZSBpZih0eXBlb2YgU1tuXT09PSJmdW5jdGlvbiIpe1Nbbl0oVixzLGMpfX1lbHNle249cS5zYXAuY2FtZWxDYXNlKHIuZXhlYyhuKVsxXSk7dmFyIEI9YihWLHYmJnYuZ2V0Q29udHJvbGxlcigpKTtDLnB1c2gobmV3IHNhcC51aS5jb3JlLkN1c3RvbURhdGEoe2tleTpuLHZhbHVlOkJ8fFZ9KSl9fSk7aWYoQy5sZW5ndGg+MCl7cy5jdXN0b21EYXRhPUN9cmV0dXJuIHN9O0QuX2FkZFNldHRpbmdzRm9yQWdncmVnYXRpb25zPWZ1bmN0aW9uKHMsYyxlLHYpe3ZhciAkPXEoZSk7dmFyIGQ9dGhpcy5fZ2V0RGVmYXVsdEFnZ3JlZ2F0aW9uKGMsZSk7dmFyIGE9dGhpczt2YXIgQT1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsQWdncmVnYXRpb25zKCk7JC5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1xKHRoaXMpO3ZhciBmPWIuYXR0cigiZGF0YS1zYXAtdWktYWdncmVnYXRpb24iKTt2YXIgdD1iLmF0dHIoImRhdGEtc2FwLXVpLXR5cGUiKTt2YXIgdT1mYWxzZTtpZighZil7dT10cnVlO2Y9ZH1pZihmJiZBW2ZdKXt2YXIgbT1BW2ZdLm11bHRpcGxlO3ZhciBnPWZ1bmN0aW9uKEMpe3ZhciBvPWEuX2NyZWF0ZUNvbnRyb2woQyx2KTtpZihvKXtpZihtKXtpZighc1tmXSl7c1tmXT1bXX1pZih0eXBlb2Ygc1tmXS5wYXRoPT09InN0cmluZyIpe3NbZl0udGVtcGxhdGU9b31lbHNle3NbZl0ucHVzaChvKX19ZWxzZXtzW2ZdPW99fX07aWYodXx8KHQmJiF1KSl7Zyh0aGlzKX1lbHNle2IuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7Zyh0aGlzKX0pfX1iLnJlbW92ZUF0dHIoImRhdGEtc2FwLXVpLWFnZ3JlZ2F0aW9uIik7Yi5yZW1vdmVBdHRyKCJkYXRhLXNhcC11aS10eXBlIil9KTtyZXR1cm4gc307RC5fZ2V0SWQ9ZnVuY3Rpb24oZSx2KXt2YXIgJD1xKGUpO3ZhciBpPSQuYXR0cigiaWQiKTtpZihpKXtpZih2KXtpPXYuY3JlYXRlSWQoaSk7JC5hdHRyKCJkYXRhLXNhcC11aS1pZCIsaSl9JC5hdHRyKCJpZCIsIiIpfXJldHVybiBpfTtELl9nZXRQcm9wZXJ0eT1mdW5jdGlvbihjLG4pe3JldHVybiBjLmdldE1ldGFkYXRhKCkuZ2V0QWxsUHJvcGVydGllcygpW25dfTtELmNvbnZlcnRWYWx1ZVRvVHlwZT1mdW5jdGlvbih0LHYpe2lmKHQgaW5zdGFuY2VvZiBzYXAudWkuYmFzZS5EYXRhVHlwZSl7dj10LnBhcnNlVmFsdWUodil9cmV0dXJuIHR5cGVvZiB2PT09InN0cmluZyI/c2FwLnVpLmJhc2UuTWFuYWdlZE9iamVjdC5iaW5kaW5nUGFyc2VyLmVzY2FwZSh2KTp2fTtELmdldFByb3BlcnR5RGF0YVR5cGU9ZnVuY3Rpb24ocCl7dmFyIHQ9c2FwLnVpLmJhc2UuRGF0YVR5cGUuZ2V0VHlwZShwLnR5cGUpO2lmKCF0KXt0aHJvdyBuZXcgRXJyb3IoIlByb3BlcnR5ICIrcC5uYW1lKyIgaGFzIG5vIGtub3duIHR5cGUiKX1yZXR1cm4gdH07RC5jb252ZXJ0QXR0cmlidXRlVG9TZXR0aW5nTmFtZT1mdW5jdGlvbihhLGksZCl7aWYoYS5pbmRleE9mKCJkYXRhLSIpPT09MCl7YT1hLnN1YnN0cig1KX1lbHNlIGlmKGQpe3Euc2FwLmxvZy53YXJuaW5nKCdbRGVwcmVjYXRlZF0gQ29udHJvbCAiJytpKyciOiBUaGUgYXR0cmlidXRlICInK2ErJyIgaXMgbm90IHByZWZpeGVkIHdpdGggImRhdGEtKiIuIEZ1dHVyZSB2ZXJzaW9uIG9mIGRlY2xhcmF0aXZlIHN1cHBvcnQgd2lsbCBvbmx5IHN1cHBwb3J0IGF0dHJpYnV0ZXMgd2l0aCAiZGF0YS0qIiBwcmVmaXguJyl9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoJ0NvbnRyb2wgIicraSsnIjogVGhlIGF0dHJpYnV0ZSAiJythKyciIGlzIG5vdCBwcmVmaXhlZCB3aXRoICJkYXRhLSoiLicpfXJldHVybiBxLnNhcC5jYW1lbENhc2UoYSl9O0QuX2dldEFzc29jaWF0aW9uPWZ1bmN0aW9uKGMsbil7cmV0dXJuIGMuZ2V0TWV0YWRhdGEoKS5nZXRBbGxBc3NvY2lhdGlvbnMoKVtuXX07RC5fZ2V0QWdncmVnYXRpb249ZnVuY3Rpb24oYyxuKXtyZXR1cm4gYy5nZXRNZXRhZGF0YSgpLmdldEFsbEFnZ3JlZ2F0aW9ucygpW25dfTtELl9nZXRFdmVudD1mdW5jdGlvbihjLG4pe3JldHVybiBjLmdldE1ldGFkYXRhKCkuZ2V0QWxsRXZlbnRzKClbbl19O0QuX2dldERlZmF1bHRBZ2dyZWdhdGlvbj1mdW5jdGlvbihjLGUpe3ZhciAkPXEoZSk7dmFyIGQ9JC5hdHRyKCJkYXRhLXNhcC11aS1kZWZhdWx0LWFnZ3JlZ2F0aW9uIil8fGMuZ2V0TWV0YWRhdGEoKS5nZXREZWZhdWx0QWdncmVnYXRpb25OYW1lKCk7JC5yZW1vdmVBdHRyKCJkYXRhLXNhcC11aS1kZWZhdWx0LWFnZ3JlZ2F0aW9uIik7cmV0dXJuIGR9O3JldHVybiBEfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuSFRNTFJlbmRlcmVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuSFRNTFJlbmRlcmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvSFRNTFJlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBIPXtyZW5kZXI6ZnVuY3Rpb24ocixjKXt2YXIgdT1jLmdldFVJQXJlYSgpO3Iud3JpdGUoIjxkaXYgaWQ9XCJzYXAtdWktZHVtbXktIitjLmdldElkKCkrIlwiIHN0eWxlPVwiZGlzcGxheTpub25lXCI+Iik7ci53cml0ZSgiPC9kaXY+Iil9fTtyZXR1cm4gSH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkhpc3RvcnknKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5IaXN0b3J5Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvSGlzdG9yeSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL09iamVjdCddLGZ1bmN0aW9uKHEsQil7InVzZSBzdHJpY3QiO3ZhciBIPUIuZXh0ZW5kKCJzYXAudWkuY29yZS5IaXN0b3J5Iix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oaSxzKXtCLmFwcGx5KHRoaXMpO2lmKCFzKXtzPXt9fXZhciBoPXMucHJlZml4P3MucHJlZml4OmRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lO3RoaXMuX2lNYXhIaXN0b3J5PXMubWF4P3MubWF4OjEwMDt0aGlzLl9zSGlzdG9yeUlkPWgraTt2YXIgdD10aGlzO3Euc2FwLnJlcXVpcmUoImpxdWVyeS5zYXAuc3RvcmFnZSIpO3RoaXMuX29TdG9yYWdlPXEuc2FwLnN0b3JhZ2UocS5zYXAuc3RvcmFnZS5UeXBlLmxvY2FsKTt0aGlzLl9mRmlsdGVyPXMuZmlsdGVyP3MuZmlsdGVyOmZ1bmN0aW9uKGEsdil7cmV0dXJuIGEmJighdnx8KHYmJnEuc2FwLnN0YXJ0c1dpdGhJZ25vcmVDYXNlKGEsdikpKX07dGhpcy5fZkNoZWNrSGlzdG9yeT1zLmNoZWNrSGlzdG9yeT9zLmNoZWNrSGlzdG9yeTpmdW5jdGlvbihhKXtyZXR1cm4gYX19LF9pbml0SGlzdG9yeTpmdW5jdGlvbigpe2lmKCF0aGlzLl9hSGlzdG9yeSl7dmFyIGg9dGhpcy5fb1N0b3JhZ2UuZ2V0KHRoaXMuX3NIaXN0b3J5SWQpO2lmKHR5cGVvZihoKT09PSJzdHJpbmciKXtoPWguc3BsaXQoIiwiKX1lbHNlIGlmKCFoKXtoPVtdfXRoaXMuX2FIaXN0b3J5PXRoaXMuX2ZDaGVja0hpc3RvcnkoaCl9cmV0dXJuIHRoaXMuX2FIaXN0b3J5fSxnZXQ6ZnVuY3Rpb24odil7dmFyIGg9dGhpcy5faW5pdEhpc3RvcnkoKTt2YXIgcj1bXTtmb3IodmFyIGk9MDtpPGgubGVuZ3RoO2krKyl7aWYodGhpcy5fZkZpbHRlcihoW2ldLHYpKXtyLnB1c2goaFtpXSl9fXJldHVybiByfSxyZW1vdmU6ZnVuY3Rpb24odil7dmFyIGg9dGhpcy5faW5pdEhpc3RvcnkoKTt2YXIgcj1bXTtmb3IodmFyIGk9MDtpPGgubGVuZ3RoO2krKyl7aWYoaFtpXT09dil7aC5zcGxpY2UoaSwxKTticmVha319fSxhZGQ6ZnVuY3Rpb24odil7dmFyIGg9dGhpcy5faW5pdEhpc3RvcnkoKTtmb3IodmFyIGk9MDtpPGgubGVuZ3RoO2krKyl7aWYoaFtpXT09PXYpe2guc3BsaWNlKGksMSk7YnJlYWt9fWgudW5zaGlmdCh2KTtpZihoLmxlbmd0aD50aGlzLl9pTWF4SGlzdG9yeSl7aC5zcGxpY2UodGhpcy5faU1heEhpc3RvcnkpfXRoaXMuX29TdG9yYWdlLnB1dCh0aGlzLl9zSGlzdG9yeUlkLGgpfSxjbGVhcjpmdW5jdGlvbigpe3RoaXMuX29TdG9yYWdlLnJlbW92ZSh0aGlzLl9zSGlzdG9yeUlkKTt0aGlzLl9hSGlzdG9yeT1udWxsfX0pO3JldHVybiBIfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuSWNvblBvb2wnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5JY29uUG9vbCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0ljb25Qb29sIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL3RoaXJkcGFydHkvVVJJJ10sZnVuY3Rpb24ocSxVKXsidXNlIHN0cmljdCI7aWYoYil7cmV0dXJufXZhciBJPVsiYWNjaWRlbnRhbC1sZWF2ZSIsImFjY291bnQiLCJ3cmVuY2giLCJ3aW5kb3dzLWRvb3JzIiwid2FzaGluZy1tYWNoaW5lIiwidmlzaXRzIiwidmlkZW8iLCJ0cmF2ZWwtZXhwZW5zZSIsInRlbXBlcmF0dXJlIiwidGFzayIsInN5bmNocm9uaXplIiwic3VydmV5Iiwic2V0dGluZ3MiLCJzZWFyY2giLCJzYWxlcy1kb2N1bWVudCIsInJldGFpbC1zdG9yZSIsInJlZnJlc2giLCJwcm9kdWN0IiwicHJlc2VudCIsInBwdC1hdHRhY2htZW50IiwicG9vbCIsInBpZS1jaGFydCIsInBpY3R1cmUiLCJwaG90by12b2x0YWljIiwicGhvbmUiLCJwZW5kaW5nIiwicGRmLWF0dGFjaG1lbnQiLCJwYXN0Iiwib3V0Z29pbmctY2FsbCIsIm9wcG9ydHVuaXR5Iiwib3Bwb3J0dW5pdGllcyIsIm5vdGVzIiwibW9uZXktYmlsbHMiLCJtYXAiLCJsb2ciLCJsaW5lLWNoYXJ0cyIsImxpZ2h0YnVsYiIsImxlYWRzIiwibGVhZCIsImxhcHRvcCIsImtwaS1tYW5hZ2luZy1teS1hcmVhIiwia3BpLWNvcnBvcmF0ZS1wZXJmb3JtYW5jZSIsImluY29taW5nLWNhbGwiLCJpbmJveCIsImhvcml6b250YWwtYmFyLWNoYXJ0IiwiaGlzdG9yeSIsImhlYXRpbmctY29vbGluZyIsImdhbnR0LWJhcnMiLCJmdXR1cmUiLCJmcmlkZ2UiLCJmYWxsYmFjayIsImV4cGVuc2UtcmVwb3J0IiwiZXhjZWwtYXR0YWNobWVudCIsImVuZXJneS1zYXZpbmctbGlnaHRidWxiIiwiZW1wbG95ZWUiLCJlbWFpbCIsImVkaXQiLCJkdXBsaWNhdGUiLCJkb3dubG9hZCIsImRvYy1hdHRhY2htZW50IiwiZGlzaHdhc2hlciIsImRlbGV0ZSIsImRlY2xpbmUiLCJjb21wbGV0ZSIsImNvbXBldGl0b3IiLCJjb2xsZWN0aW9ucy1tYW5hZ2VtZW50IiwiY2hhbGtib2FyZCIsImNhcnQiLCJjYXJkIiwiY2FtZXJhIiwiY2FsZW5kYXIiLCJiZWdpbiIsImJhc2tldCIsImJhci1jaGFydCIsImF0dGFjaG1lbnQiLCJhcnJvdy10b3AiLCJhcnJvdy1yaWdodCIsImFycm93LWxlZnQiLCJhcnJvdy1ib3R0b20iLCJhcHByb3ZhbHMiLCJhcHBvaW50bWVudCIsImFscGhhYmV0aWNhbC1vcmRlciIsImFsb25nLXN0YWNrZWQtY2hhcnQiLCJhbGVydCIsImFkZHJlc3NlcyIsImFkZHJlc3MtYm9vayIsImFkZC1maWx0ZXIiLCJhZGQtZmF2b3JpdGUiLCJhZGQiLCJhY3Rpdml0aWVzIiwiYWN0aW9uIiwiYWNjZXB0IiwiaGludCIsImdyb3VwIiwiY2hlY2stYXZhaWxhYmlsaXR5Iiwid2VhdGhlci1wcm9vZmluZyIsInBheW1lbnQtYXBwcm92YWwiLCJiYXRjaC1wYXltZW50cyIsImJlZCIsImFyb2Jhc2UiLCJmYW1pbHktY2FyZSIsImZhdm9yaXRlIiwibmF2aWdhdGlvbi1yaWdodC1hcnJvdyIsIm5hdmlnYXRpb24tbGVmdC1hcnJvdyIsImUtY2FyZSIsImxlc3MiLCJsYXRlbmVzcyIsImxhYiIsImludGVybmV0LWJyb3dzZXIiLCJpbnN0YW5jZSIsImluc3BlY3Rpb24iLCJpbWFnZS12aWV3ZXIiLCJob21lIiwiZ3JpZCIsImdvYWxzZWVrIiwiZ2VuZXJhbC1sZWF2ZS1yZXF1ZXN0IiwiY3JlYXRlLWxlYXZlLXJlcXVlc3QiLCJmbGlnaHQiLCJmaWx0ZXIiLCJmYXZvcml0ZS1saXN0IiwiZmFjdG9yeSIsImVuZG9zY29weSIsImVtcGxveWVlLXBhbmUiLCJlbXBsb3llZS1hcHByb3ZhbHMiLCJlbWFpbC1yZWFkIiwiZWxlY3Ryb2NhcmRpb2dyYW0iLCJkb2N1bWVudHMiLCJkZWNpc2lvbiIsImRhdGFiYXNlIiwiY3VzdG9tZXItaGlzdG9yeSIsImN1c3RvbWVyIiwiY3JlZGl0LWNhcmQiLCJjcmVhdGUtZW50cnktdGltZSIsImNvbnRhY3RzIiwiY29tcGFyZSIsImNsaW5pY2FsLW9yZGVyIiwiY2hhaW4tbGluayIsInB1bGwtZG93biIsImNhcmdvLXRyYWluIiwiY2FyLXJlbnRhbCIsImJ1c2luZXNzLWNhcmQiLCJiYXItY29kZSIsImZvbGRlci1ibGFuayIsInBhc3Nlbmdlci10cmFpbiIsInF1ZXN0aW9uLW1hcmsiLCJ3b3JsZCIsImlwaG9uZSIsImlwYWQiLCJ3YXJuaW5nIiwic29ydCIsImNvdXJzZS1ib29rIiwiY291cnNlLXByb2dyYW0iLCJhZGQtY291cnNlYm9vayIsInByaW50Iiwic2F2ZSIsInBsYXkiLCJwYXVzZSIsInJlY29yZCIsInJlc3BvbnNlIiwicHVzaHBpbi1vbiIsInB1c2hwaW4tb2ZmIiwidW5mYXZvcml0ZSIsImxlYXJuaW5nLWFzc2lzdGFudCIsInRpbWVzaGVldCIsInRpbWUtZW50cnktcmVxdWVzdCIsImxpc3QiLCJhY3Rpb24tc2V0dGluZ3MiLCJzaGFyZSIsImZlZWQiLCJyb2xlIiwiZmxhZyIsInBvc3QiLCJpbnNwZWN0IiwiaW5zcGVjdC1kb3duIiwiYXBwb2ludG1lbnQtMiIsInRhcmdldC1ncm91cCIsIm1hcmtldGluZy1jYW1wYWlnbiIsIm5vdGlmaWNhdGlvbiIsImNvbW1lbnQiLCJzaGlwcGluZy1zdGF0dXMiLCJjb2xsYWJvcmF0ZSIsInNob3J0Y3V0IiwibGVhZC1vdXRkYXRlZCIsInRvb2xzLW9wcG9ydHVuaXR5IiwicGVybWlzc2lvbiIsInN1cHBsaWVyIiwidGFibGUtdmlldyIsInRhYmxlLWNoYXJ0Iiwic3dpdGNoLXZpZXdzIiwiZS1sZWFybmluZyIsIm1hbmFnZXIiLCJzd2l0Y2gtY2xhc3NlcyIsInNpbXBsZS1wYXltZW50Iiwic2lnbmF0dXJlIiwic2FsZXMtb3JkZXItaXRlbSIsInNhbGVzLW9yZGVyIiwicmVxdWVzdCIsInJlY2VpcHQiLCJwdXp6bGUiLCJwcm9jZXNzIiwicHJpdmF0ZSIsInBvcHVwLXdpbmRvdyIsInBlcnNvbi1wbGFjZWhvbGRlciIsInBlci1kaWVtIiwicGFwZXItcGxhbmUiLCJwYWlkLWxlYXZlIiwicGRmLXJlYWRlciIsIm92ZXJ2aWV3LWNoYXJ0Iiwib3ZlcmxheSIsIm9yZy1jaGFydCIsIm51bWJlci1zaWduIiwibm90aWZpY2F0aW9uLTIiLCJteS1zYWxlcy1vcmRlciIsIm1lYWwiLCJsb2FuIiwib3JkZXItc3RhdHVzIiwiY3VzdG9tZXItb3JkZXItZW50cnkiLCJwZXJmb3JtYW5jZSIsIm1lbnUiLCJlbXBsb3llZS1sb29rdXAiLCJlZHVjYXRpb24iLCJjdXN0b21lci1icmllZmluZyIsImN1c3RvbWVyLWFuZC1jb250YWN0cyIsIm15LXZpZXciLCJhY2NlbGVyYXRlZCIsInRvLWJlLXJldmlld2VkIiwid2FybmluZzIiLCJmZWVkZXItYXJyb3ciLCJxdWFsaXR5LWlzc3VlIiwid29ya2Zsb3ctdGFza3MiLCJjcmVhdGUiLCJob21lLXNoYXJlIiwiZ2xvYmUiLCJ0YWdzIiwid29yay1oaXN0b3J5IiwieC1yYXkiLCJ3b3VuZHMtZG9jIiwid2ViLWNhbSIsIndhaXZlciIsInZlcnRpY2FsLWJhci1jaGFydCIsInVwc3RhY2tlZC1jaGFydCIsInRyaXAtcmVwb3J0IiwibWljcm9waG9uZSIsInVucGFpZC1sZWF2ZSIsInRyZWUiLCJ0b2FzdGVyLXVwIiwidG9hc3Rlci10b3AiLCJ0b2FzdGVyLWRvd24iLCJ0aW1lLWFjY291bnQiLCJ0aGVhdGVyIiwidGF4aSIsInN1YndheS10cmFpbiIsInN0dWR5LWxlYXZlIiwic3RldGhvc2NvcGUiLCJzdGVwIiwic29ub2dyYXBoeSIsInNvY2NvciIsInBoeXNpY2FsLWFjdGl2aXR5IiwicGhhcm1hY3kiLCJvZmZpY2lhbC1zZXJ2aWNlIiwib2Zmc2l0ZS13b3JrIiwibnV0cml0aW9uLWFjdGl2aXR5IiwibmV3c3BhcGVyIiwibW9uaXRvci1wYXltZW50cyIsIm1hcC0yIiwibWFjaGluZSIsIm1yaS1zY2FuIiwiZW5kLXVzZXItZXhwZXJpZW5jZS1tb25pdG9yaW5nIiwidW53aXJlZCIsImN1c3RvbWVyLWZpbmFuY2lhbC1mYWN0LXNoZWV0IiwicmV0YWlsLXN0b3JlLW1hbmFnZXIiLCJOZXR3ZWF2ZXItYnVzaW5lc3MtY2xpZW50IiwiZWxlY3Ryb25pYy1tZWRpY2FsLXJlY29yZCIsImVhbS13b3JrLW9yZGVyIiwiY3VzdG9tZXItdmlldyIsImNybS1zZXJ2aWNlLW1hbmFnZXIiLCJjcm0tc2FsZXMiLCJ3aWRnZXRzIiwiY29tbWlzc2lvbi1jaGVjayIsImNvbGxlY3Rpb25zLWluc2lnaHQiLCJjbGluaWNhbC10YXN0LXRyYWNrZXIiLCJjaXRpemVuLWNvbm5lY3QiLCJjYXJ0LWFwcHJvdmFsIiwiY2FwaXRhbC1wcm9qZWN0cyIsImJvLXN0cmF0ZWd5LW1hbmFnZW1lbnQiLCJidXNpbmVzcy1vYmplY3RzLW1vYmlsZSIsImJ1c2luZXNzLW9iamVjdHMtZXhwbG9yZXIiLCJidXNpbmVzcy1vYmplY3RzLWV4cGVyaWVuY2UiLCJiYnlkLWRhc2hib2FyZCIsImJieWQtYWN0aXZlLXNhbGVzIiwiYnVzaW5lc3MtYnktZGVzaWduIiwiYnVzaW5lc3Mtb25lIiwic2FwLWJveCIsIm1hbmFnZXItaW5zaWdodCIsImFjY291bnRpbmctZG9jdW1lbnQtdmVyaWZpY2F0aW9uIiwiaHItYXBwcm92YWwiLCJpZGVhLXdhbGwiLCJDaGFydC1UcmVlLU1hcCIsImNhcnQtNSIsImNhcnQtNCIsIndhbGxldCIsInZlaGljbGUtcmVwYWlyIiwidXBsb2FkIiwidW5sb2NrZWQiLCJ1bWJyZWxsYSIsInRyYXZlbC1yZXF1ZXN0IiwidHJhdmVsLWV4cGVuc2UtcmVwb3J0IiwidHJhdmVsLWl0aW5lcmFyeSIsInRpbWUtb3ZlcnRpbWUiLCJ0aGluZy10eXBlIiwidGVjaG5pY2FsLW9iamVjdCIsInRhZyIsInN5cmluZ2UiLCJzeW50YXgiLCJzdWl0Y2FzZSIsInNpbXVsYXRlIiwic2hpZWxkIiwic2hhcmUtMiIsInNhbGVzLXF1b3RlIiwicmVwb3N0IiwicHJvdmlzaW9uIiwicHJvamVjdG9yIiwiYWRkLXByb2R1Y3QiLCJwaXBlbGluZS1hbmFseXNpcyIsImFkZC1waG90byIsInBhbGV0dGUiLCJudXJzZSIsInNhbGVzLW5vdGlmaWNhdGlvbiIsIm1pbGVhZ2UiLCJtZWV0aW5nLXJvb20iLCJtZWRpYS1mb3J3YXJkIiwibWVkaWEtcGxheSIsIm1lZGlhLXBhdXNlIiwibWVkaWEtcmV2ZXJzZSIsIm1lZGlhLXJld2luZCIsIm1lYXN1cmVtZW50LWRvY3VtZW50IiwibWVhc3VyaW5nLXBvaW50IiwibWVhc3VyZSIsIm1hcC0zIiwibG9ja2VkIiwibGV0dGVyIiwiam91cm5leS1hcnJpdmUiLCJqb3VybmV5LWNoYW5nZSIsImpvdXJuZXktZGVwYXJ0IiwiaXQtc3lzdGVtIiwiaXQtaW5zdGFuY2UiLCJpdC1ob3N0IiwiaXBob25lLTIiLCJpcGFkLTIiLCJpbnZlbnRvcnkiLCJpbnN1cmFuY2UtaG91c2UiLCJpbnN1cmFuY2UtbGlmZSIsImluc3VyYW5jZS1jYXIiLCJpbml0aWF0aXZlIiwiaW5jaWRlbnQiLCJncm91cC0yIiwiZ29hbCIsImZ1bmN0aW9uYWwtbG9jYXRpb24iLCJmdWxsLXNjcmVlbiIsImZvcm0iLCJmb2Itd2F0Y2giLCJibGFuay10YWciLCJmYW1pbHktcHJvdGVjdGlvbiIsImZvbGRlciIsImZheC1tYWNoaW5lIiwiZXhhbXBsZSIsImVyYXNlciIsImVtcGxveWVlLXJlamVjdGlvbnMiLCJkcm9wLWRvd24tbGlzdCIsImRyYXctcmVjdGFuZ2xlIiwiZG9jdW1lbnQiLCJkb2N0b3IiLCJkaXNjdXNzaW9uLTIiLCJkaXNjdXNzaW9uIiwiZGltZW5zaW9uIiwiY3VzdG9tZXItYW5kLXN1cHBsaWVyIiwiY3JvcCIsImFkZC1jb250YWN0IiwiY29tcGFyZS0yIiwiY29sb3ItZmlsbCIsImNvbGxpc2lvbiIsImN1cnJpY3VsdW0iLCJjaGFydC1heGlzIiwiZnVsbC1zdGFja2VkLWNoYXJ0IiwiZnVsbC1zdGFja2VkLWNvbHVtbi1jaGFydCIsInZlcnRpY2FsLWJhci1jaGFydC0yIiwiaG9yaXpvbnRhbC1iYXItY2hhcnQtMiIsImhvcml6b250YWwtc3RhY2tlZC1jaGFydCIsInZlcnRpY2FsLXN0YWNrZWQtY2hhcnQiLCJjaG9yb3BsZXRoLWNoYXJ0IiwiZ2VvZ3JhcGhpYy1idWJibGUtY2hhcnQiLCJtdWx0aXBsZS1yYWRhci1jaGFydCIsInJhZGFyLWNoYXJ0IiwiY3Jvc3NlZC1saW5lLWNoYXJ0IiwibXVsdGlwbGUtbGluZS1jaGFydCIsIm11bHRpcGxlLWJhci1jaGFydCIsImxpbmUtY2hhcnQiLCJsaW5lLWNoYXJ0LWR1YWwtYXhpcyIsImJ1YmJsZS1jaGFydCIsInNjYXR0ZXItY2hhcnQiLCJtdWx0aXBsZS1waWUtY2hhcnQiLCJjb2x1bW4tY2hhcnQtZHVhbC1heGlzIiwidGFnLWNsb3VkLWNoYXJ0IiwiYXJlYS1jaGFydCIsImNhdXNlIiwiY2FydC0zIiwiY2FydC0yIiwiYnVzLXB1YmxpYy10cmFuc3BvcnQiLCJidXJnbGFyeSIsImJ1aWxkaW5nIiwiYm9yZGVyIiwiYm9va21hcmsiLCJiYWRnZSIsImF0dGFjaG1lbnQtYXVkaW8iLCJhdHRhY2htZW50LXZpZGVvIiwiYXR0YWNobWVudC1odG1sIiwiYXR0YWNobWVudC1waG90byIsImF0dGFjaG1lbnQtZS1wdWIiLCJhdHRhY2htZW50LXppcC1maWxlIiwiYXR0YWNobWVudC10ZXh0LWZpbGUiLCJhZGQtZXF1aXBtZW50IiwiYWRkLWFjdGl2aXR5IiwiYWN0aXZpdHktaW5kaXZpZHVhbCIsImFjdGl2aXR5LTIiLCJhZGQtYWN0aXZpdHktMiIsImFjdGl2aXR5LWl0ZW1zIiwiYWN0aXZpdHktYXNzaWduZWQtdG8tZ29hbCIsInN0YXR1cy1jb21wbGV0ZWQiLCJzdGF0dXMtZXJyb3IiLCJzdGF0dXMtaW5hY3RpdmUiLCJzdGF0dXMtaW4tcHJvY2VzcyIsImJsYW5rLXRhZy0yIiwiY2FydC1mdWxsIiwibG9jYXRlLW1lIiwicGFnaW5nIiwiY29tcGFueS12aWV3IiwiZG9jdW1lbnQtdGV4dCIsImV4cGxvcmVyIiwicGVyc29ubmVsLXZpZXciLCJzb3J0aW5nLXJhbmtpbmciLCJkcmlsbC1kb3duIiwiZHJpbGwtdXAiLCJ2ZHMtZmlsZSIsInNhcC1sb2dvLXNoYXBlIiwiZm9sZGVyLWZ1bGwiLCJzeXN0ZW0tZXhpdCIsInN5c3RlbS1leGl0LTIiLCJjbG9zZS1jb21tYW5kLWZpZWxkIiwib3Blbi1jb21tYW5kLWZpZWxkIiwic3lzLWVudGVyLTIiLCJzeXMtZW50ZXIiLCJzeXMtaGVscC0yIiwic3lzLWhlbHAiLCJzeXMtYmFjayIsInN5cy1iYWNrLTIiLCJzeXMtY2FuY2VsIiwic3lzLWNhbmNlbC0yIiwib3Blbi1mb2xkZXIiLCJzeXMtZmluZC1uZXh0Iiwic3lzLWZpbmQiLCJzeXMtbW9uaXRvciIsInN5cy1wcmV2LXBhZ2UiLCJzeXMtZmlyc3QtcGFnZSIsInN5cy1uZXh0LXBhZ2UiLCJzeXMtbGFzdC1wYWdlIiwiZ2VuZXJhdGUtc2hvcnRjdXQiLCJjcmVhdGUtc2Vzc2lvbiIsImRpc3BsYXktbW9yZSIsImVudGVyLW1vcmUiLCJ6b29tLWluIiwiem9vbS1vdXQiLCJoZWFkZXIiLCJkZXRhaWwtdmlldyIsImNvbGxhcHNlIiwiZXhwYW5kIiwicG9zaXRpdmUiLCJuZWdhdGl2ZSIsImRpc3BsYXkiLCJtZW51MiIsInJlZG8iLCJ1bmRvIiwibmF2aWdhdGlvbi11cC1hcnJvdyIsIm5hdmlnYXRpb24tZG93bi1hcnJvdyIsImRvd24iLCJ1cCIsInNoZWxmIiwiYmFja2dyb3VuZCIsInJlc2l6ZSIsIm1vdmUiLCJzaG93IiwiaGlkZSIsIm5hdi1iYWNrIiwiZXJyb3IiLCJzbGltLWFycm93LXJpZ2h0Iiwic2xpbS1hcnJvdy1sZWZ0Iiwic2xpbS1hcnJvdy1kb3duIiwic2xpbS1hcnJvdy11cCIsImZvcndhcmQiLCJvdmVyZmxvdyIsInZhbHVlLWhlbHAiLCJtdWx0aS1zZWxlY3QiLCJleGl0LWZ1bGwtc2NyZWVuIiwic3lzLWFkZCIsInN5cy1taW51cyIsImRyb3Bkb3duIiwiZXhwYW5kLWdyb3VwIiwiY29sbGFwc2UtZ3JvdXAiXTt2YXIgYT1bImUwMDAiLCJlMDAxIiwiZTAwMiIsImUwMDMiLCJlMDA0IiwiZTAwNSIsImUwMDYiLCJlMDA3IiwiZTAwOCIsImUwMDkiLCJlMDBhIiwiZTAwYiIsImUwMGMiLCJlMDBkIiwiZTAwZSIsImUwMGYiLCJlMDEwIiwiZTAxMSIsImUwMTIiLCJlMDEzIiwiZTAxNCIsImUwMTUiLCJlMDE2IiwiZTAxNyIsImUwMTgiLCJlMDE5IiwiZTAxYSIsImUwMWIiLCJlMDFjIiwiZTAxZCIsImUwMWUiLCJlMDFmIiwiZTAyMCIsImUwMjEiLCJlMDIyIiwiZTAyMyIsImUwMjQiLCJlMDI1IiwiZTAyNiIsImUwMjciLCJlMDI4IiwiZTAyOSIsImUwMmEiLCJlMDJiIiwiZTAyYyIsImUwMmQiLCJlMDJlIiwiZTAyZiIsImUwMzAiLCJlMDMxIiwiZTAzMiIsImUwMzMiLCJlMDM0IiwiZTAzNSIsImUwMzYiLCJlMDM3IiwiZTAzOCIsImUwMzkiLCJlMDNhIiwiZTAzYiIsImUwM2MiLCJlMDNkIiwiZTAzZSIsImUwM2YiLCJlMDQwIiwiZTA0MSIsImUwNDIiLCJlMDQzIiwiZTA0NCIsImUwNDUiLCJlMDQ2IiwiZTA0NyIsImUwNDgiLCJlMDQ5IiwiZTA0YSIsImUwNGIiLCJlMDRjIiwiZTA0ZCIsImUwNGUiLCJlMDRmIiwiZTA1MCIsImUwNTEiLCJlMDUyIiwiZTA1MyIsImUwNTQiLCJlMDU1IiwiZTA1NiIsImUwNTciLCJlMDU4IiwiZTA1OSIsImUwNWEiLCJlMDViIiwiZTA1YyIsImUwNWQiLCJlMDVlIiwiZTA1ZiIsImUwNjAiLCJlMDYxIiwiZTA2MiIsImUwNjMiLCJlMDY0IiwiZTA2NSIsImUwNjYiLCJlMDY3IiwiZTA2OCIsImUwNjkiLCJlMDZhIiwiZTA2YiIsImUwNmMiLCJlMDZkIiwiZTA2ZSIsImUwNmYiLCJlMDcwIiwiZTA3MSIsImUwNzIiLCJlMDczIiwiZTA3NCIsImUwNzUiLCJlMDc2IiwiZTA3NyIsImUwNzgiLCJlMDc5IiwiZTA3YSIsImUwN2IiLCJlMDdjIiwiZTA3ZCIsImUwN2UiLCJlMDdmIiwiZTA4MCIsImUwODEiLCJlMDgyIiwiZTA4MyIsImUwODQiLCJlMDg1IiwiZTA4NiIsImUwODciLCJlMDg4IiwiZTA4OSIsImUwOGEiLCJlMDhiIiwiZTA4YyIsImUwOGQiLCJlMDhlIiwiZTA4ZiIsImUwOTAiLCJlMDkxIiwiZTA5MiIsImUwOTMiLCJlMDk0IiwiZTA5NSIsImUwOTYiLCJlMDk3IiwiZTA5OCIsImUwOTkiLCJlMDlhIiwiZTA5YiIsImUwOWMiLCJlMDlkIiwiZTA5ZSIsImUwOWYiLCJlMGEwIiwiZTBhMSIsImUwYTIiLCJlMGEzIiwiZTBhNCIsImUwYTUiLCJlMGE2IiwiZTBhNyIsImUwYTgiLCJlMGE5IiwiZTBhYSIsImUwYWIiLCJlMGFjIiwiZTBhZCIsImUwYWUiLCJlMGFmIiwiZTBiMCIsImUwYjEiLCJlMGIyIiwiZTBiMyIsImUwYjQiLCJlMGI1IiwiZTBiNiIsImUwYjciLCJlMGI4IiwiZTBiOSIsImUwYmEiLCJlMGJiIiwiZTBiYyIsImUwYmQiLCJlMGJlIiwiZTBiZiIsImUwYzAiLCJlMGMxIiwiZTBjMiIsImUwYzMiLCJlMGM0IiwiZTBjNSIsImUwYzYiLCJlMGM3IiwiZTBjOCIsImUwYzkiLCJlMGNhIiwiZTBjYiIsImUwY2MiLCJlMGNkIiwiZTBjZSIsImUwY2YiLCJlMGQwIiwiZTBkMSIsImUwZDIiLCJlMGQzIiwiZTBkNCIsImUwZDUiLCJlMGQ2IiwiZTBkNyIsImUwZDgiLCJlMGQ5IiwiZTBkYSIsImUwZGIiLCJlMGRjIiwiZTBkZCIsImUwZGUiLCJlMGRmIiwiZTBlMCIsImUwZTEiLCJlMGUyIiwiZTBlMyIsImUwZTQiLCJlMGU1IiwiZTBlNiIsImUwZTciLCJlMGU4IiwiZTBlOSIsImUwZWEiLCJlMGViIiwiZTBlYyIsImUwZWQiLCJlMGVlIiwiZTBlZiIsImUwZjAiLCJlMGYxIiwiZTBmMiIsImUwZjMiLCJlMGY0IiwiZTBmNSIsImUwZjYiLCJlMGY3IiwiZTBmOCIsImUwZjkiLCJlMGZhIiwiZTBmYiIsImUwZmMiLCJlMGZkIiwiZTBmZSIsImUwZmYiLCJlMTAwIiwiZTEwMSIsImUxMDIiLCJlMTAzIiwiZTEwNCIsImUxMDUiLCJlMTA2IiwiZTEwNyIsImUxMDgiLCJlMTA5IiwiZTEwYSIsImUxMGIiLCJlMTBjIiwiZTEwZCIsImUxMGUiLCJlMTBmIiwiZTExMCIsImUxMTEiLCJlMTEyIiwiZTExMyIsImUxMTQiLCJlMTE1IiwiZTExNiIsImUxMTciLCJlMTE4IiwiZTExOSIsImUxMWEiLCJlMTFiIiwiZTExYyIsImUxMWQiLCJlMTFlIiwiZTExZiIsImUxMjAiLCJlMTIxIiwiZTEyMiIsImUxMjMiLCJlMTI0IiwiZTEyNSIsImUxMjYiLCJlMTI3IiwiZTEyOCIsImUxMjkiLCJlMTJhIiwiZTEyYiIsImUxMmMiLCJlMTJkIiwiZTEyZSIsImUxMmYiLCJlMTMwIiwiZTEzMSIsImUxMzIiLCJlMTMzIiwiZTEzNCIsImUxMzUiLCJlMTM2IiwiZTEzNyIsImUxMzgiLCJlMTM5IiwiZTEzYSIsImUxM2IiLCJlMTNjIiwiZTEzZCIsImUxM2UiLCJlMTNmIiwiZTE0MCIsImUxNDEiLCJlMTQyIiwiZTE0MyIsImUxNDQiLCJlMTQ1IiwiZTE0NiIsImUxNDciLCJlMTQ4IiwiZTE0OSIsImUxNGEiLCJlMTRiIiwiZTE0YyIsImUxNGQiLCJlMTRlIiwiZTE0ZiIsImUxNTAiLCJlMTUxIiwiZTE1MiIsImUxNTMiLCJlMTU0IiwiZTE1NSIsImUxNTYiLCJlMTU3IiwiZTE1OCIsImUxNTkiLCJlMTVhIiwiZTE1YiIsImUxNWMiLCJlMTVkIiwiZTE1ZSIsImUxNWYiLCJlMTYwIiwiZTE2MSIsImUxNjIiLCJlMTYzIiwiZTE2NCIsImUxNjUiLCJlMTY2IiwiZTE2NyIsImUxNjgiLCJlMTY5IiwiZTE2YSIsImUxNmIiLCJlMTZjIiwiZTE2ZCIsImUxNmUiLCJlMTZmIiwiZTE3MCIsImUxNzEiLCJlMTcyIiwiZTE3MyIsImUxNzQiLCJlMTc1IiwiZTE3NiIsImUxNzciLCJlMTc4IiwiZTE3OSIsImUxN2EiLCJlMTdiIiwiZTE3YyIsImUxN2QiLCJlMTdlIiwiZTE3ZiIsImUxODAiLCJlMTgxIiwiZTE4MiIsImUxODMiLCJlMTg0IiwiZTE4NSIsImUxODYiLCJlMTg3IiwiZTE4OCIsImUxODkiLCJlMThhIiwiZTE4YiIsImUxOGMiLCJlMThkIiwiZTE4ZSIsImUxOGYiLCJlMTkwIiwiZTE5MSIsImUxOTIiLCJlMTkzIiwiZTE5NCIsImUxOTUiLCJlMTk2IiwiZTE5NyIsImUxOTgiLCJlMTk5IiwiZTE5YSIsImUxOWIiLCJlMTljIiwiZTE5ZCIsImUxOWUiLCJlMTlmIiwiZTFhMCIsImUxYTEiLCJlMWEyIiwiZTFhMyIsImUxYTQiLCJlMWE1IiwiZTFhNiIsImUxYTciLCJlMWE4IiwiZTFhOSIsImUxYWEiLCJlMWFiIiwiZTFhYyIsImUxYWQiLCJlMWFlIiwiZTFhZiIsImUxYjAiLCJlMWIxIiwiZTFiMiIsImUxYjMiLCJlMWI0IiwiZTFiNSIsImUxYjYiLCJlMWI3IiwiZTFiOCIsImUxYjkiLCJlMWJhIiwiZTFiYiIsImUxYmMiLCJlMWJkIiwiZTFiZSIsImUxYmYiLCJlMWMwIiwiZTFjMSIsImUxYzIiLCJlMWMzIiwiZTFjNCIsImUxYzUiLCJlMWM2IiwiZTFjNyIsImUxYzgiLCJlMWM5IiwiZTFjYSIsImUxY2IiLCJlMWNjIiwiZTFjZCIsImUxY2UiLCJlMWNmIiwiZTFkMCIsImUxZDEiLCJlMWQyIiwiZTFkMyIsImUxZDQiLCJlMWQ1IiwiZTFkNiIsImUxZDciLCJlMWQ4IiwiZTFkOSIsImUxZGEiLCJlMWRiIiwiZTFkYyIsImUxZGQiLCJlMWRlIiwiZTFkZiIsImUxZTAiLCJlMWUxIiwiZTFlMiIsImUxZTMiLCJlMWU0IiwiZTFlNSIsImUxZTYiLCJlMWU3IiwiZTFlOCIsImUxZTkiLCJlMWVhIiwiZTFlYiIsImUxZWMiLCJlMWVkIiwiZTFlZSIsImUxZWYiLCJlMWYwIiwiZTFmMSIsImUxZjIiLCJlMWYzIiwiZTFmNCIsImUxZjUiLCJlMWY2IiwiZTFmNyIsImUxZjgiLCJlMWY5IiwiZTIwMCJdO3ZhciBtPXsiY2hhbGtib2FyZCI6dHJ1ZSwiY2FsZW5kYXIiOnRydWUsImFscGhhYmV0aWNhbC1vcmRlciI6dHJ1ZSwiYWRkcmVzcy1ib29rIjp0cnVlLCJoaW50Ijp0cnVlLCJwYXltZW50LWFwcHJvdmFsIjp0cnVlLCJiYXRjaC1wYXltZW50cyI6dHJ1ZSwiYXJvYmFzZSI6dHJ1ZSwicXVlc3Rpb24tbWFyayI6dHJ1ZSwibGVhZCI6dHJ1ZSwibGVhZC1vdXRkYXRlZCI6dHJ1ZSwic2ltcGxlLXBheW1lbnQiOnRydWUsInNhbGVzLW9yZGVyLWl0ZW0iOnRydWUsInNhbGVzLW9yZGVyIjp0cnVlLCJwZXItZGllbSI6dHJ1ZSwicGFpZC1sZWF2ZSI6dHJ1ZSwicGRmLXJlYWRlciI6dHJ1ZSwibXktc2FsZXMtb3JkZXIiOnRydWUsImxvYW4iOnRydWUsImdsb2JlIjp0cnVlLCJ3YWl2ZXIiOnRydWUsInVucGFpZC1sZWF2ZSI6dHJ1ZSwiY3VzdG9tZXItZmluYW5jaWFsLWZhY3Qtc2hlZXQiOnRydWUsImNybS1zYWxlcyI6dHJ1ZSwiY29tbWlzc2lvbi1jaGVjayI6dHJ1ZSwiY29sbGVjdGlvbnMtaW5zaWdodCI6dHJ1ZSwiY2FwaXRhbC1wcm9qZWN0cyI6dHJ1ZSwiYnVzaW5lc3Mtb25lIjp0cnVlLCJ0cmF2ZWwtZXhwZW5zZSI6dHJ1ZSwidHJhdmVsLWV4cGVuc2UtcmVwb3J0Ijp0cnVlLCJ0cmF2ZWwtcmVxdWVzdCI6dHJ1ZSwidGltZS1vdmVydGltZSI6dHJ1ZSwic2FsZXMtcXVvdGUiOnRydWUsInNhbGVzLW5vdGlmaWNhdGlvbiI6dHJ1ZSwiaW5jaWRlbnQiOnRydWUsIm1vbmV5LWJpbGxzIjp0cnVlLCJzYWxlcy1kb2N1bWVudCI6dHJ1ZSwib3Bwb3J0dW5pdGllcyI6dHJ1ZSwiZXhwZW5zZS1yZXBvcnQiOnRydWUsIm1vbml0b3ItcGF5bWVudHMiOnRydWUsIndpZGdldHMiOnRydWUsInN5cy1oZWxwLTIiOnRydWUsInN5cy1oZWxwIjp0cnVlLCJhY2NlcHQiOnRydWUsImFjY291bnRpbmctZG9jdW1lbnQtdmVyaWZpY2F0aW9uIjp0cnVlLCJhY3Rpdml0aWVzIjp0cnVlLCJhY3Rpdml0eS0yIjp0cnVlLCJhZGQtYWN0aXZpdHkiOnRydWUsImFkZC1hY3Rpdml0eS0yIjp0cnVlLCJhcHByb3ZhbHMiOnRydWUsImJieWQtYWN0aXZlLXNhbGVzIjp0cnVlLCJidXNpbmVzcy1ieS1kZXNpZ24iOnRydWUsImNhcnQtYXBwcm92YWwiOnRydWUsImNvbXBsZXRlIjp0cnVlLCJjdXN0b21lci1vcmRlci1lbnRyeSI6dHJ1ZSwiZW1wbG95ZWUtYXBwcm92YWxzIjp0cnVlLCJoci1hcHByb3ZhbCI6dHJ1ZSwia3BpLWNvcnBvcmF0ZS1wZXJmb3JtYW5jZSI6dHJ1ZSwia3BpLW1hbmFnaW5nLW15LWFyZWEiOnRydWUsInN1cnZleSI6dHJ1ZSwic3lzLWVudGVyIjp0cnVlLCJzeXMtZW50ZXItMiI6dHJ1ZSwidGFzayI6dHJ1ZX07dmFyIHM9IlNBUC1pY29ucyI7dmFyIHA9InNhcC1pY29uIjt2YXIgcj17fTt2YXIgZj1mYWxzZTt2YXIgYj1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigpfTtiLmNyZWF0ZUNvbnRyb2xCeVVSST1mdW5jdGlvbihjLGQpe2lmKHR5cGVvZiBjPT09InN0cmluZyIpe2M9e3NyYzpjfX1pZihjJiZjLnNyYyl7dmFyIFM9Yy5zcmMsQz1kO2lmKGIuaXNJY29uVVJJKFMpKXtpZighc2FwLnVpLmNvcmUuSWNvbil7cS5zYXAucmVxdWlyZSgic2FwLnVpLmNvcmUuSWNvbiIpfUM9c2FwLnVpLmNvcmUuSWNvbjtpZihjLnRhcCl7Yy5wcmVzcz1jLnRhcDtkZWxldGUgYy50YXB9fWlmKHR5cGVvZiBDPT09ImZ1bmN0aW9uIil7cmV0dXJuIG5ldyBDKGMpfX19O2IuYWRkSWNvbj1mdW5jdGlvbihpLGMsZCl7aWYodHlwZW9mIGQ9PT0ic3RyaW5nIil7ZD17Zm9udEZhbWlseTphcmd1bWVudHNbMl0sY29udGVudDphcmd1bWVudHNbM10sb3ZlcldyaXRlOiEhYXJndW1lbnRzWzRdLHN1cHByZXNzTWlycm9yaW5nOiEhYXJndW1lbnRzWzVdfX1pZighcltjXSl7cltjXT17fX12YXIgZT1yW2NdLGcsbz1lW2ldLGg7aWYobyYmKGM9PT11bmRlZmluZWR8fCFkLm92ZXJXcml0ZSkpe3Euc2FwLmxvZy53YXJuaW5nKCJpY29uIHdpdGggdGhlIHNhbWUgaWNvbk5hbWUgaW4gdGhlIGNvbGxlY3Rpb24gYWxyZWFkeSBleGlzdHMsIHNwZWNpZnkgdGhlIGxhc3QgcGFyYW1ldGVyIHRvIHRydWUgaW4gb3JkZXIgdG8gb3ZlcndyaXRlIik7cmV0dXJufWg9e3Byb3RvY29sOnAsaG9zdG5hbWU6Y3x8aSxwYXRoOmM/aTp1bmRlZmluZWR9O2c9e25hbWU6aSxjb2xsZWN0aW9uOmMsdXJpOndpbmRvdy5VUkkuYnVpbGQoaCksZm9udEZhbWlseTpkLmZvbnRGYW1pbHksY29udGVudDpTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGQuY29udGVudCwxNikpLHN1cHByZXNzTWlycm9yaW5nOmQuc3VwcHJlc3NNaXJyb3Jpbmcsc2tpcE1pcnJvcmluZzpkLnN1cHByZXNzTWlycm9yaW5nfTtlW2ldPWc7cmV0dXJuIGd9O2IuZ2V0SWNvblVSST1mdW5jdGlvbihpLGMpe3ZhciBkPXJbY107aWYoZCYmZFtpXSl7cmV0dXJuIGRbaV0udXJpfX07Yi5nZXRJY29uSW5mbz1mdW5jdGlvbihpLGMpe2IuaW5zZXJ0Rm9udEZhY2VTdHlsZSgpO3ZhciBQPWksZD1jLGUsZztpZih0aGlzLmlzSWNvblVSSShpKSl7ZT13aW5kb3cuVVJJLnBhcnNlKGkpO2lmKGUucGF0aC5sZW5ndGg9PT0xKXtQPWUuaG9zdG5hbWU7ZD11bmRlZmluZWR9ZWxzZXtkPWUuaG9zdG5hbWU7UD1lLnBhdGguc3Vic3RyKDEsZS5wYXRoLmxlbmd0aCl9fWc9cltkXTtyZXR1cm4gZyYmZ1tQXX07Yi5pc0ljb25VUkk9ZnVuY3Rpb24odSl7aWYoIXUpe3JldHVybiBmYWxzZX12YXIgYz13aW5kb3cuVVJJLnBhcnNlKHUpO3JldHVybihjLnByb3RvY29sPT09cCkmJmMuaG9zdG5hbWV9O2IuZ2V0SWNvbkNvbGxlY3Rpb25OYW1lcz1mdW5jdGlvbigpe3ZhciBuPVtdO3EubWFwKHIsZnVuY3Rpb24odixrKXtuLnB1c2goayl9KTtyZXR1cm4gbn07Yi5nZXRJY29uTmFtZXM9ZnVuY3Rpb24oYyl7dmFyIGQ9cltjXSxuPVtdO3EubWFwKGQsZnVuY3Rpb24odixrKXtuLnB1c2goayl9KTtyZXR1cm4gbn07Yi5pbnNlcnRGb250RmFjZVN0eWxlPWZ1bmN0aW9uKCl7aWYoZil7cmV0dXJufXZhciBGPXEuc2FwLmdldE1vZHVsZVBhdGgoInNhcC51aS5jb3JlIiwnLycpKyJ0aGVtZXMvYmFzZS9mb250cy8iLHcsYyxkLGk7aWYoISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXImJnNhcC51aS5EZXZpY2UuYnJvd3Nlci52ZXJzaW9uPDEwJiZ3aW5kb3cuc2VsZiE9PXdpbmRvdy50b3Ape0Y9Yi5fY2FsY0Fic1BhdGgoRix3aW5kb3cubG9jYXRpb24uaHJlZil9ZD0iQGZvbnQtZmFjZSB7IisiZm9udC1mYW1pbHk6ICdTQVAtaWNvbnMnOyIrInNyYzogdXJsKCciK0YrIlNBUC1pY29ucy5lb3QnKTsiKyJzcmM6IHVybCgnIitGKyJTQVAtaWNvbnMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwiKyJ1cmwoJyIrRisiU0FQLWljb25zLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTsiKyJmb250LXdlaWdodDogbm9ybWFsOyIrImZvbnQtc3R5bGU6IG5vcm1hbDsiKyJ9IjtxKCdoZWFkJykuYXBwZW5kKCc8c3R5bGUgdHlwZT0idGV4dC9jc3MiPicrZCsnPC9zdHlsZT4nKTtmPXRydWV9O2IuX2NhbGNBYnNQYXRoPWZ1bmN0aW9uKFIsQil7Qj1CJiZCLnJlcGxhY2UoL1w/Lip8Iy4qL2csIiIpO3ZhciB1PW5ldyB3aW5kb3cuVVJJKFIpLEE9dS5hYnNvbHV0ZVRvKEIpO3JldHVybiBBLmhyZWYoKX07Yi5faXNNaXJyb3JpbmdTa2lwcGVkPWZ1bmN0aW9uKGkpe3JldHVybiEhbVtpXX07cS5lYWNoKEksZnVuY3Rpb24oaSxuKXtiLmFkZEljb24obix1bmRlZmluZWQse2ZvbnRGYW1pbHk6cyxjb250ZW50OmFbaV0sc3VwcHJlc3NNaXJyb3Jpbmc6Yi5faXNNaXJyb3JpbmdTa2lwcGVkKG4pfSl9KTtyZXR1cm4gYn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkljb25SZW5kZXJlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkljb25SZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0ljb25SZW5kZXJlciIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgST17fTtJLnJlbmRlcj1mdW5jdGlvbihyLGMpe2lmKCFjLmdldFZpc2libGUoKSl7cmV0dXJufXZhciBpPXNhcC51aS5jb3JlLkljb25Qb29sLmdldEljb25JbmZvKGMuZ2V0U3JjKCkpLHc9Yy5nZXRXaWR0aCgpLGg9Yy5nZXRIZWlnaHQoKSxDPWMuZ2V0Q29sb3IoKSxiPWMuZ2V0QmFja2dyb3VuZENvbG9yKCkscz1jLmdldFNpemUoKSx0PWMuZ2V0VG9vbHRpcF9Bc1N0cmluZygpLFQ9KHNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmc2FwLnVpLkRldmljZS5icm93c2VyLnZlcnNpb248OSk7ci53cml0ZSgiPHNwYW4iKTtyLndyaXRlQ29udHJvbERhdGEoYyk7aWYoIWMuZ2V0RGVjb3JhdGl2ZSgpKXtyLndyaXRlQXR0cmlidXRlKCJ0YWJpbmRleCIsMCl9aWYodCl7ci53cml0ZUF0dHJpYnV0ZUVzY2FwZWQoInRpdGxlIix0KX1pZihpKXtpZighVCl7ci53cml0ZUF0dHJpYnV0ZSgiZGF0YS1zYXAtdWktaWNvbi1jb250ZW50IixpLmNvbnRlbnQpfXIuYWRkU3R5bGUoImZvbnQtZmFtaWx5IiwiJyIraS5mb250RmFtaWx5KyInIil9aWYodyl7ci5hZGRTdHlsZSgid2lkdGgiLHcpfWlmKGgpe3IuYWRkU3R5bGUoImhlaWdodCIsaCk7ci5hZGRTdHlsZSgibGluZS1oZWlnaHQiLGgpfWlmKEMpe3IuYWRkU3R5bGUoImNvbG9yIixDKX1pZihiKXtyLmFkZFN0eWxlKCJiYWNrZ3JvdW5kLWNvbG9yIixiKX1pZihzKXtyLmFkZFN0eWxlKCJmb250LXNpemUiLHMpfXIud3JpdGVTdHlsZXMoKTtyLmFkZENsYXNzKCJzYXBVaUljb24iKTtpZihpJiYhaS5zdXBwcmVzc01pcnJvcmluZyl7ci5hZGRDbGFzcygic2FwVWlJY29uTWlycm9ySW5SVEwiKX1pZihjLmhhc0xpc3RlbmVycygicHJlc3MiKSl7ci5hZGRDbGFzcygic2FwVWlJY29uUG9pbnRlciIpfXIud3JpdGVDbGFzc2VzKCk7ci53cml0ZSgiPiIpO2lmKGkmJlQpe3Iud3JpdGUoaS5jb250ZW50KX1yLndyaXRlKCI8L3NwYW4+Iil9O3JldHVybiBJfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yUmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3JSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0xvY2FsQnVzeUluZGljYXRvclJlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBMPXt9OyhmdW5jdGlvbigpe0wucmVuZGVyPWZ1bmN0aW9uKFIsYyl7Ui53cml0ZSgiPGRpdiIpO1Iud3JpdGVDb250cm9sRGF0YShjKTtSLmFkZENsYXNzKCJzYXBVaUxvY2FsQnVzeUluZGljYXRvciIpO1Iud3JpdGVDbGFzc2VzKCk7Ui53cml0ZSgiPiIpO3IoUixjKTtSLndyaXRlKCI8L2Rpdj4iKX07dmFyIHI9ZnVuY3Rpb24oUixjKXt2YXIgST1jLmdldElkKCk7dmFyIHM9SSsiLWFuaW1hdGlvbiI7dmFyIGI9WyItbGVmdEJveCIsIi1taWRkbGVCb3giLCItcmlnaHRCb3giXTtSLndyaXRlKCc8ZGl2Jyk7Ui53cml0ZUF0dHJpYnV0ZSgnaWQnLHMpO1IuYWRkQ2xhc3MoInNhcFVpTG9jYWxCdXN5SW5kaWNhdG9yQW5pbWF0aW9uIik7Ui53cml0ZUNsYXNzZXMoKTtSLndyaXRlKCI+Iik7Zm9yKHZhciBpPTA7aTxiLmxlbmd0aDtpKyspe1Iud3JpdGUoJzxkaXYnKTtSLmFkZENsYXNzKCJzYXBVaUxvY2FsQnVzeUluZGljYXRvckJveCIpO1Iud3JpdGVDbGFzc2VzKCk7Ui53cml0ZUF0dHJpYnV0ZSgiaWQiLEkrYltpXSk7Ui53cml0ZSgiPiIpO1Iud3JpdGUoIjwvZGl2PiIpfVIud3JpdGUoIjwvZGl2PiIpfX0oKSk7cmV0dXJuIEx9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Mb2NhbGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5Mb2NhbGUnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Mb2NhbGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9PYmplY3QnXSxmdW5jdGlvbihxLEIpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT0vXigoPzpbQS1aXXsyLDN9KD86LVtBLVpdezN9KXswLDN9KXxbQS1aXXs0fXxbQS1aXXs1LDh9KSg/Oi0oW0EtWl17NH0pKT8oPzotKFtBLVpdezJ9fFswLTldezN9KSk/KC1bMC05QS1aXXs1LDh9fCg/OlswLTldWzAtOUEtWl17M30pKSooPzotKFswLTlBLVdZWl0oPzotWzAtOUEtWl17Miw4fSkrKSkqKD86LShYKD86LVswLTlBLVpdezEsOH0pKykpPyQvaTt2YXIgTD1CLmV4dGVuZCgic2FwLnVpLmNvcmUuTG9jYWxlIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obCl7Qi5hcHBseSh0aGlzKTt2YXIgcj1hLmV4ZWMobC5yZXBsYWNlKC9fL2csIi0iKSk7aWYocj09PW51bGwpe3Rocm93IlRoZSBnaXZlbiBsYW5ndWFnZSBkb2VzIG5vdCBhZGhlcmUgdG8gQkNQLTQ3LiJ9dGhpcy5zTG9jYWxlSWQ9bDt0aGlzLnNMYW5ndWFnZT1yWzFdfHxudWxsO3RoaXMuc1NjcmlwdD1yWzJdfHxudWxsO3RoaXMuc1JlZ2lvbj1yWzNdfHxudWxsO3RoaXMuc1ZhcmlhbnQ9KHJbNF0mJnJbNF0uc2xpY2UoMSkpfHxudWxsO3RoaXMuc0V4dGVuc2lvbj1yWzVdfHxudWxsO3RoaXMuc1ByaXZhdGVVc2U9cls2XXx8bnVsbDtpZih0aGlzLnNMYW5ndWFnZSl7dGhpcy5zTGFuZ3VhZ2U9dGhpcy5zTGFuZ3VhZ2UudG9Mb3dlckNhc2UoKX1pZih0aGlzLnNTY3JpcHQpe3RoaXMuc1NjcmlwdD10aGlzLnNTY3JpcHQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9eW2Etel0vLGZ1bmN0aW9uKCQpe3JldHVybiAkLnRvVXBwZXJDYXNlKCl9KX1pZih0aGlzLnNSZWdpb24pe3RoaXMuc1JlZ2lvbj10aGlzLnNSZWdpb24udG9VcHBlckNhc2UoKX19LGdldExhbmd1YWdlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0xhbmd1YWdlfSxnZXRTY3JpcHQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zU2NyaXB0fSxnZXRSZWdpb246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zUmVnaW9ufSxnZXRWYXJpYW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc1ZhcmlhbnR9LGdldFZhcmlhbnRTdWJ0YWdzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc1ZhcmlhbnQ/dGhpcy5zVmFyaWFudC5zcGxpdCgnLScpOltdfSxnZXRFeHRlbnNpb246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zRXh0ZW5zaW9ufSxnZXRFeHRlbnNpb25TdWJ0YWdzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0V4dGVuc2lvbj90aGlzLnNFeHRlbnNpb24uc2xpY2UoMikuc3BsaXQoJy0nKTpbXX0sZ2V0UHJpdmF0ZVVzZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNQcml2YXRlVXNlfSxnZXRQcml2YXRlVXNlU3VidGFnczpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNQcml2YXRlVXNlP3RoaXMuc1ByaXZhdGVVc2Uuc2xpY2UoMikuc3BsaXQoJy0nKTpbXX0saGFzUHJpdmF0ZVVzZVN1YnRhZzpmdW5jdGlvbihzKXtyZXR1cm4gcS5pbkFycmF5KHMsdGhpcy5nZXRQcml2YXRlVXNlU3VidGFncygpKT49MH0sdG9TdHJpbmc6ZnVuY3Rpb24oKXt2YXIgcj1bdGhpcy5zTGFuZ3VhZ2VdO2lmKHRoaXMuc1NjcmlwdCl7ci5wdXNoKHRoaXMuc1NjcmlwdCl9aWYodGhpcy5zUmVnaW9uKXtyLnB1c2godGhpcy5zUmVnaW9uKX1pZih0aGlzLnNWYXJpYW50KXtyLnB1c2godGhpcy5zVmFyaWFudCl9aWYodGhpcy5zRXh0ZW5zaW9uKXtyLnB1c2godGhpcy5zRXh0ZW5zaW9uKX1pZih0aGlzLnNQcml2YXRlVXNlKXtyLnB1c2godGhpcy5zUHJpdmF0ZVVzZSl9cmV0dXJuIHIuam9pbigiLSIpfSxnZXRTQVBMb2dvbkxhbmd1YWdlOmZ1bmN0aW9uKCl7dmFyIGw9dGhpcy5zTGFuZ3VhZ2V8fCIiLG07aWYobC5pbmRleE9mKCItIik+PTApe2w9bC5zbGljZSgwLGwuaW5kZXhPZigiLSIpKX1sPU1bbF18fGw7aWYobD09PSJ6aCIpe2lmKHRoaXMuc1NjcmlwdD09PSJIYW50Inx8KCF0aGlzLnNTY3JpcHQmJnRoaXMuc1JlZ2lvbj09PSJUVyIpKXtsPSJ6ZiJ9fWlmKHRoaXMuc1ByaXZhdGVVc2UmJihtPS8tKHNhcHRyY3xzYXBwc2QpKD86LXwkKS9pLmV4ZWModGhpcy5zUHJpdmF0ZVVzZSkpKXtsPShtWzFdLnRvTG93ZXJDYXNlKCk9PT0ic2FwdHJjIik/IjFRIjoiMlEifXJldHVybiBsLnRvVXBwZXJDYXNlKCl9fSk7dmFyIE09eyJpdyI6ImhlIiwiamkiOiJ5aSIsImluIjoiaWQiLCJzaCI6InNyIn07dmFyIEE9ImFyLGZhLGhlIi5zcGxpdCgiLCIpO0wuX2ltcGxpZXNSVEw9ZnVuY3Rpb24obCl7dmFyIG89bmV3IEwobCk7bD1vLmdldExhbmd1YWdlKCl8fCIiO2w9KGwmJk1bbF0pfHxsO3ZhciByPW8uZ2V0UmVnaW9uKCl8fCIiO2lmKHImJnEuaW5BcnJheShsKyJfIityLEEpPj0wKXtyZXR1cm4gdHJ1ZX1yZXR1cm4gcS5pbkFycmF5KGwsQSk+PTB9O3JldHVybiBMfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuUmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5SZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1JlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBSPXt9O1IuZXh0ZW5kPWZ1bmN0aW9uKHApe3ZhciBjPXtfc3VwZXI6cH07Zm9yKHZhciBmIGluIHApe2lmKHR5cGVvZihwW2ZdKT09ImZ1bmN0aW9uIil7Y1tmXT0oZnVuY3Rpb24oKXt2YXIgbT1mLHQ9YztyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5fc3VwZXJbbV0uYXBwbHkodGhpcyxhcmd1bWVudHMpfX0oKSl9fXJldHVybiBjfTtSLmdldFRleHRBbGlnbj1mdW5jdGlvbih0LFQpe3ZhciBzPSIiO3ZhciBjPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpO3N3aXRjaCh0KXtjYXNlIHNhcC51aS5jb3JlLlRleHRBbGlnbi5FbmQ6c3dpdGNoKFQpe2Nhc2UiTFRSIjpzPSJyaWdodCI7YnJlYWs7Y2FzZSJSVEwiOnM9ImxlZnQiO2JyZWFrO2RlZmF1bHQ6aWYoYy5nZXRSVEwoKSl7cz0ibGVmdCJ9ZWxzZXtzPSJyaWdodCJ9YnJlYWt9YnJlYWs7Y2FzZSBzYXAudWkuY29yZS5UZXh0QWxpZ24uQmVnaW46c3dpdGNoKFQpe2Nhc2UiTFRSIjpzPSJsZWZ0IjticmVhaztjYXNlIlJUTCI6cz0icmlnaHQiO2JyZWFrO2RlZmF1bHQ6aWYoYy5nZXRSVEwoKSl7cz0icmlnaHQifWVsc2V7cz0ibGVmdCJ9YnJlYWt9YnJlYWs7Y2FzZSBzYXAudWkuY29yZS5UZXh0QWxpZ24uUmlnaHQ6aWYoYy5nZXRSVEwoKSl7aWYoVD09IkxUUiIpe3M9InJpZ2h0In19ZWxzZXtzPSJyaWdodCJ9YnJlYWs7Y2FzZSBzYXAudWkuY29yZS5UZXh0QWxpZ24uQ2VudGVyOnM9ImNlbnRlciI7YnJlYWs7Y2FzZSBzYXAudWkuY29yZS5UZXh0QWxpZ24uTGVmdDppZihjLmdldFJUTCgpKXtzPSJsZWZ0In1lbHNle2lmKFQ9PSJSVEwiKXtzPSJsZWZ0In19YnJlYWt9cmV0dXJuIHN9O3JldHVybiBSfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuU2Nyb2xsQmFyUmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5TY3JvbGxCYXJSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1Njcm9sbEJhclJlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBTPXt9O1MucmVuZGVyPWZ1bmN0aW9uKHIscyl7dmFyIGE9cjt2YXIgUj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTthLmFkZENsYXNzKCJzYXBVaVNjcm9sbEJhciIpO3ZhciBiO2lmKHNhcC51aS5EZXZpY2Uuc3VwcG9ydC50b3VjaCl7Yj0ic2FwVWlTY3JvbGxCYXJUb3VjaCI7YS5hZGRDbGFzcyhiKX12YXIgdj1zLmdldFZlcnRpY2FsKCk7dmFyIGM9cy5nZXRTaXplKCk7dmFyIEM9cy5nZXRDb250ZW50U2l6ZSgpO3ZhciBCPXEuc2FwLnNjcm9sbGJhclNpemUoYik7dmFyIHc9Qi53aWR0aDt2YXIgaD1CLmhlaWdodDtpZih2KXthLndyaXRlKCI8ZGl2Iik7YS53cml0ZUNvbnRyb2xEYXRhKHMpO2Eud3JpdGUoIiBzdHlsZT1cIm92ZXJmbG93OmhpZGRlbjt3aWR0aDoiK3crInB4Iik7aWYoYyl7YS53cml0ZSgiO2hlaWdodDoiK2MpfWEud3JpdGUoIlwiIik7YS53cml0ZUNsYXNzZXMoKTthLndyaXRlKCI+Iik7YS53cml0ZSgiPGRpdiAiKTthLndyaXRlQXR0cmlidXRlKCJpZCIscy5nZXRJZCgpKyItc2IiKTthLndyaXRlKCIgc3R5bGU9XCJ3aWR0aDoiK3cqMisicHg7aGVpZ2h0OjEwMCU7b3ZlcmZsb3cteTpzY3JvbGw7b3ZlcmZsb3cteDpoaWRkZW4iKTtpZihSKXtpZigoISghIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5maXJlZm94JiZzYXAudWkuRGV2aWNlLmJyb3dzZXIudmVyc2lvbj09My42KSkmJighISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuc2FmYXJpKSl7YS53cml0ZSgiO21hcmdpbi1yaWdodDotIit3KyJweCIpfX1lbHNle2Eud3JpdGUoIjttYXJnaW4tbGVmdDotIit3KyJweDsiKX1hLndyaXRlKCJcIj4iKTthLndyaXRlKCI8ZGl2Iik7YS53cml0ZUF0dHJpYnV0ZSgiaWQiLHMuZ2V0SWQoKSsiLXNiY250Iik7YS53cml0ZSgiIHN0eWxlPVwid2lkdGg6Iit3KyJweCIpO2lmKEMpe2Eud3JpdGUoIjtoZWlnaHQ6IitDKX1hLndyaXRlKCJcIiIpO2Eud3JpdGUoIj4iKTthLndyaXRlKCI8L2Rpdj4iKTthLndyaXRlKCI8L2Rpdj4iKTthLndyaXRlKCI8ZGl2PiA8c3BhbiBpZD0iK3MuZ2V0SWQoKSsiLWZmc2l6ZSIrIiBzdHlsZT0ncG9zaXRpb246IGFic29sdXRlOyB0b3A6IC05MDAwcHg7IGxlZnQ6IC05MDAwcHg7IHZpc2liaWxpdHk6IGhpZGRlbjsgbGluZS1oZWlnaHQ6IG5vcm1hbDsnPiBGRiBTaXplPC9zcGFuPjwvZGl2PiIpO2Eud3JpdGUoIjwvZGl2PiIpfWVsc2V7YS53cml0ZSgiPGRpdiIpO2Eud3JpdGVDb250cm9sRGF0YShzKTthLndyaXRlKCIgc3R5bGU9XCJvdmVyZmxvdzpoaWRkZW47aGVpZ2h0OiIraCsicHgiKTtpZihjKXthLndyaXRlKCI7d2lkdGg6IitjKX1hLndyaXRlKCJcIiIpO2Eud3JpdGVDbGFzc2VzKCk7YS53cml0ZSgiPiIpO2Eud3JpdGUoIjxkaXYgIik7YS53cml0ZUF0dHJpYnV0ZSgiaWQiLHMuZ2V0SWQoKSsiLXNiIik7YS53cml0ZSgiIHN0eWxlPVwiaGVpZ2h0OiIraCoyKyJweDttYXJnaW4tdG9wOi0iK2grInB4O292ZXJmbG93LXg6c2Nyb2xsO292ZXJmbG93LXk6aGlkZGVuXCI+Iik7YS53cml0ZSgiPGRpdiIpO2Eud3JpdGVBdHRyaWJ1dGUoImlkIixzLmdldElkKCkrIi1zYmNudCIpO2Eud3JpdGUoIiBzdHlsZT1cImhlaWdodDoiK2grInB4Iik7aWYoQyl7YS53cml0ZSgiO3dpZHRoOiIrQyl9YS53cml0ZSgiXCIiKTthLndyaXRlKCI+Iik7YS53cml0ZSgiPC9kaXY+Iik7YS53cml0ZSgiPC9kaXY+Iik7YS53cml0ZSgiPC9kaXY+Iil9fTtyZXR1cm4gU30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlRoZW1lQ2hlY2snKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5UaGVtZUNoZWNrJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvVGhlbWVDaGVjayIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL09iamVjdCcsJ2pxdWVyeS5zYXAuc2NyaXB0J10sZnVuY3Rpb24ocSxCKXsidXNlIHN0cmljdCI7c2FwLnVpLl9tYXhUaGVtZUNoZWNrQ3ljbGVzPTEwMDt2YXIgVD1CLmV4dGVuZCgic2FwLnVpLmNvcmUuVGhlbWVDaGVjayIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKEMpe3RoaXMuX29Db3JlPUM7dGhpcy5faUNvdW50PTA7dGhpcy5fQ1VTVE9NQ1NTQ0hFQ0s9L1wuc2FwVWlUaGVtZURlc2lnbmVyQ3VzdG9tQ3NzL2k7dGhpcy5fQ1VTVE9NSUQ9InNhcC11aS1jb3JlLWN1c3RvbWNzcyI7dGhpcy5fY3VzdG9tQ1NTQWRkZWQ9ZmFsc2U7dGhpcy5fdGhlbWVDaGVja2VkRm9yQ3VzdG9tPW51bGx9LGdldEludGVyZmFjZTpmdW5jdGlvbigpe3JldHVybiB0aGlzfSxmaXJlVGhlbWVDaGFuZ2VkRXZlbnQ6ZnVuY3Rpb24obyxmKXtjKHRoaXMpO3ZhciB1PXNhcC51aS5fbWF4VGhlbWVDaGVja0N5Y2xlcz4wO2lmKHV8fGYpe2QuYXBwbHkodGhpcyxbdHJ1ZV0pfWVsc2V7VC50aGVtZUxvYWRlZD10cnVlfWlmKCFvJiYhdGhpcy5fc1RoZW1lQ2hlY2tJZCl7dGhpcy5fb0NvcmUuZmlyZVRoZW1lQ2hhbmdlZCh7dGhlbWU6dGhpcy5fb0NvcmUuZ2V0Q29uZmlndXJhdGlvbigpLmdldFRoZW1lKCl9KX19fSk7VC50aGVtZUxvYWRlZD1mYWxzZTtULmNoZWNrU3R5bGU9ZnVuY3Rpb24ocyxsKXtpZih0eXBlb2Yocyk9PT0ic3RyaW5nIil7cz1xLnNhcC5kb21CeUlkKHMpfXZhciBTPXEocyk7dHJ5e3ZhciByPSFzfHwhISgocy5zaGVldCYmcy5zaGVldC5jc3NSdWxlcy5sZW5ndGg+MCl8fCEhKHMuc3R5bGVTaGVldCYmcy5zdHlsZVNoZWV0LmNzc1RleHQubGVuZ3RoPjApfHwhIShzLmlubmVySFRNTCYmcy5pbm5lckhUTUwubGVuZ3RoPjApKTt2YXIgZj1TLmF0dHIoInNhcC11aS1yZWFkeSIpO2Y9ISEoZj09PSJ0cnVlInx8Zj09PSJmYWxzZSIpO2lmKGwpe3Euc2FwLmxvZy5kZWJ1ZygiVGhlbWVDaGVjazogQ2hlY2sgc3R5bGVzICciK1MuYXR0cigiaWQiKSsiJzogIityKyIvIitmKyIvIishIXMpfXJldHVybiByfHxmfWNhdGNoKGUpe31pZihsKXtxLnNhcC5sb2cuZGVidWcoIlRoZW1lQ2hlY2s6IEVycm9yIGR1cmluZyBjaGVjayBzdHlsZXMgJyIrUy5hdHRyKCJpZCIpKyInOiBmYWxzZS9mYWxzZS8iKyEhcyl9cmV0dXJuIGZhbHNlfTtmdW5jdGlvbiBjKHQpe1QudGhlbWVMb2FkZWQ9ZmFsc2U7aWYodC5fc1RoZW1lQ2hlY2tJZCl7cS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0Ll9zVGhlbWVDaGVja0lkKTt0Ll9zVGhlbWVDaGVja0lkPW51bGw7dC5faUNvdW50PTB9fWZ1bmN0aW9uIGEodCl7dmFyIGw9dC5fb0NvcmUuZ2V0TG9hZGVkTGlicmFyaWVzKCk7dmFyIHM9dC5fb0NvcmUuZ2V0Q29uZmlndXJhdGlvbigpLmdldFRoZW1lKCk7dmFyIHA9dC5fb0NvcmUuX2dldFRoZW1lUGF0aCgic2FwLnVpLmNvcmUiLHMpKyJjdXN0b20uY3NzIjt2YXIgcj10cnVlO2lmKCEhdC5fY3VzdG9tQ1NTQWRkZWQmJnQuX3RoZW1lQ2hlY2tlZEZvckN1c3RvbT09PXMpe2xbInNhcC11aS10aGVtZS0iK3QuX0NVU1RPTUlEXT17fX1xLmVhY2gobCxmdW5jdGlvbihlKXtyPXImJlQuY2hlY2tTdHlsZSgic2FwLXVpLXRoZW1lLSIrZSx0cnVlKTtpZighIXIpe2lmKHQuX3RoZW1lQ2hlY2tlZEZvckN1c3RvbSE9cyl7aWYoYih0LGUpKXtxLnNhcC5pbmNsdWRlU3R5bGVTaGVldChwLHQuX0NVU1RPTUlEKTt0Ll9jdXN0b21DU1NBZGRlZD10cnVlO3Euc2FwLmxvZy53YXJuaW5nKCJUaGVtZUNoZWNrIGRlbGl2ZXJlZCBjdXN0b20gQ1NTIG5lZWRzIHRvIGJlIGxvYWRlZCwgVGhlbWUgbm90IHlldCBhcHBsaWVkIik7dC5fdGhlbWVDaGVja2VkRm9yQ3VzdG9tPXM7cj1mYWxzZTtyZXR1cm4gZmFsc2V9ZWxzZXt2YXIgZj1xKCJMSU5LW2lkPSciK3QuX0NVU1RPTUlEKyInXSIpO2lmKGYubGVuZ3RoPjApe2YucmVtb3ZlKCk7cS5zYXAubG9nLmRlYnVnKCJDdXN0b20gQ1NTIHJlbW92ZWQiKX10Ll9jdXN0b21DU1NBZGRlZD1mYWxzZX19fX0pO2lmKCFyKXtxLnNhcC5sb2cud2FybmluZygiVGhlbWVDaGVjazogVGhlbWUgbm90IHlldCBhcHBsaWVkLiIpfWVsc2V7dC5fdGhlbWVDaGVja2VkRm9yQ3VzdG9tPXN9cmV0dXJuIHJ9ZnVuY3Rpb24gYih0LGwpe3ZhciByPW51bGwscz1mYWxzZTt2YXIgbD1uZXcgUmVnRXhwKGwpO3EuZWFjaChkb2N1bWVudC5zdHlsZVNoZWV0cyxmdW5jdGlvbihpLFMpe2lmKCEhUy5vd25lck5vZGUmJmwudGVzdChTLm93bmVyTm9kZS5pZCkmJlMuY3NzUnVsZXMmJlMuY3NzUnVsZXMubGVuZ3RoPjApe3I9Uy5jc3NSdWxlc1swXS5zZWxlY3RvclRleHQ7aWYodC5fQ1VTVE9NQ1NTQ0hFQ0sudGVzdChyKSl7cz10cnVlO3JldHVybiBmYWxzZX19ZWxzZSBpZighIVMub3duaW5nRWxlbWVudCYmbC50ZXN0KFMub3duaW5nRWxlbWVudC5pZCkmJlMucnVsZXMmJlMucnVsZXMubGVuZ3RoPjApe3I9Uy5ydWxlc1swXS5zZWxlY3RvclRleHQ7aWYodC5fQ1VTVE9NQ1NTQ0hFQ0sudGVzdChyKSl7cz10cnVlO3JldHVybiBmYWxzZX19fSk7cmV0dXJuIHN9ZnVuY3Rpb24gZChmKXt0aGlzLl9pQ291bnQrKzt2YXIgZT10aGlzLl9pQ291bnQ+c2FwLnVpLl9tYXhUaGVtZUNoZWNrQ3ljbGVzO2lmKCFhKHRoaXMpJiYhZSl7dGhpcy5fc1RoZW1lQ2hlY2tJZD1xLnNhcC5kZWxheWVkQ2FsbCgyLHRoaXMsZCl9ZWxzZSBpZighZil7Yyh0aGlzKTtULnRoZW1lTG9hZGVkPXRydWU7dGhpcy5fb0NvcmUuZmlyZVRoZW1lQ2hhbmdlZCh7dGhlbWU6dGhpcy5fb0NvcmUuZ2V0Q29uZmlndXJhdGlvbigpLmdldFRoZW1lKCl9KTtpZihlKXtxLnNhcC5sb2cud2FybmluZygiVGhlbWVDaGVjazogbWF4LiBjaGVjayBjeWNsZXMgcmVhY2hlZC4iKX19ZWxzZXtULnRoZW1lTG9hZGVkPXRydWV9fXJldHVybiBUfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuVmFsdWVTdGF0ZVN1cHBvcnQnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5WYWx1ZVN0YXRlU3VwcG9ydCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1ZhbHVlU3RhdGVTdXBwb3J0IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBWPXt9O3ZhciB0PW51bGw7dmFyIGU9ZnVuY3Rpb24oKXtpZighdCl7dD17fTt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldExpYnJhcnlSZXNvdXJjZUJ1bmRsZSgic2FwLnVpLmNvcmUiKTt0W3NhcC51aS5jb3JlLlZhbHVlU3RhdGUuRXJyb3JdPXIuZ2V0VGV4dCgiVkFMVUVfU1RBVEVfRVJST1IiKTt0W3NhcC51aS5jb3JlLlZhbHVlU3RhdGUuV2FybmluZ109ci5nZXRUZXh0KCJWQUxVRV9TVEFURV9XQVJOSU5HIik7dFtzYXAudWkuY29yZS5WYWx1ZVN0YXRlLlN1Y2Nlc3NdPXIuZ2V0VGV4dCgiVkFMVUVfU1RBVEVfU1VDQ0VTUyIpfX07Vi5lbnJpY2hUb29sdGlwPWZ1bmN0aW9uKEUsVCl7aWYoIVQmJkUuZ2V0VG9vbHRpcCgpKXtyZXR1cm4gdW5kZWZpbmVkfWlmKEUuZ2V0VmFsdWVTdGF0ZSl7dmFyIHM9RS5nZXRWYWx1ZVN0YXRlKCk7aWYocyYmKHMhPXNhcC51aS5jb3JlLlZhbHVlU3RhdGUuTm9uZSkpe2UoKTtyZXR1cm4oVD9UKyIgLSAiOiIiKSt0W3NdfX1yZXR1cm4gVH07Vi5nZXRBZGRpdGlvbmFsVGV4dD1mdW5jdGlvbihFKXt2YXIgcj1udWxsO2lmKEUuZ2V0VmFsdWVTdGF0ZSl7dmFyIHM9RS5nZXRWYWx1ZVN0YXRlKCk7aWYocyYmKHMhPXNhcC51aS5jb3JlLlZhbHVlU3RhdGUuTm9uZSkpe2UoKTtyPXRbc119fXJldHVybiByfTtyZXR1cm4gVn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlhNTFRlbXBsYXRlUHJvY2Vzc29yJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuWE1MVGVtcGxhdGVQcm9jZXNzb3InKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9YTUxUZW1wbGF0ZVByb2Nlc3NvciIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBwKHQsdixuLGMpe3ZhciBiPXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuYmluZGluZ1BhcnNlcih2LGMsdHJ1ZSk7aWYoYiYmdHlwZW9mIGI9PT0ib2JqZWN0Iil7cmV0dXJuIGJ9dmFyIFY9dj1ifHx2O3ZhciBUPXNhcC51aS5iYXNlLkRhdGFUeXBlLmdldFR5cGUodCk7aWYoVCl7aWYoVCBpbnN0YW5jZW9mIHNhcC51aS5iYXNlLkRhdGFUeXBlKXtWPVQucGFyc2VWYWx1ZSh2KX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIlByb3BlcnR5ICIrbisiIGhhcyB1bmtub3duIHR5cGUgIit0KX1yZXR1cm4gdHlwZW9mIFY9PT0ic3RyaW5nIj9zYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LmJpbmRpbmdQYXJzZXIuZXNjYXBlKFYpOlZ9ZnVuY3Rpb24gbCh4KXtyZXR1cm4geC5sb2NhbE5hbWV8fHguYmFzZU5hbWV8fHgubm9kZU5hbWV9dmFyIFg9e307WC5sb2FkVGVtcGxhdGU9ZnVuY3Rpb24odCxlKXt2YXIgcj1xLnNhcC5nZXRSZXNvdXJjZU5hbWUodCwiLiIrKGV8fCJ2aWV3IikrIi54bWwiKTtyZXR1cm4gcS5zYXAubG9hZFJlc291cmNlKHIpLmRvY3VtZW50RWxlbWVudH07WC5wYXJzZVZpZXdBdHRyaWJ1dGVzPWZ1bmN0aW9uKHgsdixzKXt2YXIgYT12LmdldE1ldGFkYXRhKCkuZ2V0QWxsUHJvcGVydGllcygpO2Zvcih2YXIgaT0wO2k8eC5hdHRyaWJ1dGVzLmxlbmd0aDtpKyspe3ZhciBiPXguYXR0cmlidXRlc1tpXTtpZihiLm5hbWU9PT0nY29udHJvbGxlck5hbWUnKXt2Ll9jb250cm9sbGVyTmFtZT1iLnZhbHVlfWVsc2UgaWYoYi5uYW1lPT09J3Jlc291cmNlQnVuZGxlTmFtZScpe3YuX3Jlc291cmNlQnVuZGxlTmFtZT1iLnZhbHVlfWVsc2UgaWYoYi5uYW1lPT09J3Jlc291cmNlQnVuZGxlVXJsJyl7di5fcmVzb3VyY2VCdW5kbGVVcmw9Yi52YWx1ZX1lbHNlIGlmKGIubmFtZT09PSdyZXNvdXJjZUJ1bmRsZUxvY2FsZScpe3YuX3Jlc291cmNlQnVuZGxlTG9jYWxlPWIudmFsdWV9ZWxzZSBpZihiLm5hbWU9PT0ncmVzb3VyY2VCdW5kbGVBbGlhcycpe3YuX3Jlc291cmNlQnVuZGxlQWxpYXM9Yi52YWx1ZX1lbHNlIGlmKGIubmFtZT09PSdjbGFzcycpe3YuYWRkU3R5bGVDbGFzcyhiLnZhbHVlKX1lbHNlIGlmKCFzW2IubmFtZV0mJmFbYi5uYW1lXSl7c1tiLm5hbWVdPXAoYVtiLm5hbWVdLnR5cGUsYi52YWx1ZSxiLm5hbWUsdi5fb0NvbnRhaW5pbmdWaWV3Lm9Db250cm9sbGVyKX19fTtYLnBhcnNlVGVtcGxhdGU9ZnVuY3Rpb24oeCx2KXt2YXIgcj1bXTt2YXIgYz11bmRlZmluZWQ7dmFyIEM9di5zVmlld05hbWV8fHYuX3NGcmFnbWVudE5hbWU7aWYoIUMpe3ZhciB0PXY7dmFyIEw9MDt3aGlsZSgrK0w8MTAwMCYmdCYmdCE9PXQuX29Db250YWluaW5nVmlldyl7dD10Ll9vQ29udGFpbmluZ1ZpZXd9Qz10LnNWaWV3TmFtZX1pZih2LmlzU3ViVmlldygpKXthKHgsdHJ1ZSl9ZWxzZXtiKHgpfXJldHVybiByO2Z1bmN0aW9uIGEoeCxSLEkpe2lmKHgubm9kZVR5cGU9PT0xKXt2YXIgcz1sKHgpO2lmKHgubmFtZXNwYWNlVVJJPT09Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwifHx4Lm5hbWVzcGFjZVVSST09PSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIpe3IucHVzaCgiPCIrcysiICIpO3ZhciBqO2Zvcih2YXIgaT0wO2k8eC5hdHRyaWJ1dGVzLmxlbmd0aDtpKyspe3ZhciBrPXguYXR0cmlidXRlc1tpXTt2YXIgbT1rLnZhbHVlO2lmKGsubmFtZT09PSJpZCIpe209di5fb0NvbnRhaW5pbmdWaWV3LmNyZWF0ZUlkKG0pfXIucHVzaChrLm5hbWUrIj1cIiIrcS5zYXAuZW5jb2RlSFRNTChtKSsiXCIgIil9aWYoUj09PXRydWUpe3IucHVzaCgiZGF0YS1zYXAtdWktcHJlc2VydmUiKyI9XCIiK3YuZ2V0SWQoKSsiXCIgIil9ci5wdXNoKCI+Iik7Yih4KTtyLnB1c2goIjwvIitzKyI+Iil9ZWxzZSBpZihzPT09IkZyYWdtZW50RGVmaW5pdGlvbiImJngubmFtZXNwYWNlVVJJPT09InNhcC51aS5jb3JlIil7Yih4LGZhbHNlLHRydWUpfWVsc2V7dmFyIG49ZSh4KTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIG89bltpXTtpZih2LmdldE1ldGFkYXRhKCkuaGFzQWdncmVnYXRpb24oImNvbnRlbnQiKSl7di5hZGRBZ2dyZWdhdGlvbigiY29udGVudCIsbyl9ZWxzZSBpZih2LmdldE1ldGFkYXRhKCkuaGFzQXNzb2NpYXRpb24oKCJjb250ZW50IikpKXt2LmFkZEFzc29jaWF0aW9uKCJjb250ZW50IixvKX1yLnB1c2gobyl9fX1lbHNlIGlmKHgubm9kZVR5cGU9PT0zJiYhSSl7dmFyIHU9eC50ZXh0Q29udGVudHx8eC50ZXh0LHc9bCh4LnBhcmVudE5vZGUpO2lmKHUpe2lmKHchPSJzdHlsZSIpe3U9cS5zYXAuZW5jb2RlSFRNTCh1KX1yLnB1c2godSl9fX1mdW5jdGlvbiBiKHgsUixJKXt2YXIgaj14LmNoaWxkTm9kZXM7Zm9yKHZhciBpPTA7aTxqLmxlbmd0aDtpKyspe2EoaltpXSxSLEkpfX1mdW5jdGlvbiBmKG4scyl7dmFyIGk7dmFyIG09c2FwLnVpLmdldENvcmUoKS5nZXRMb2FkZWRMaWJyYXJpZXMoKTtxLmVhY2gobSxmdW5jdGlvbihqLG8pe2lmKG49PT1vLm5hbWVzcGFjZXx8bj09PW8ubmFtZSl7aT1vLm5hbWUrIi4iKygoby50YWdOYW1lcyYmby50YWdOYW1lc1tzXSl8fHMpfX0pO2k9aXx8bisiLiIrcztxLnNhcC5yZXF1aXJlKGkpO3JldHVybiBxLnNhcC5nZXRPYmplY3QoaSl9ZnVuY3Rpb24gZChuKXtpZihuLm5hbWVzcGFjZVVSST09PSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sInx8bi5uYW1lc3BhY2VVUkk9PT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciKXt2YXIgaT1uLmF0dHJpYnV0ZXNbJ2lkJ10/bi5hdHRyaWJ1dGVzWydpZCddLnRleHRDb250ZW50fHxuLmF0dHJpYnV0ZXNbJ2lkJ10udGV4dDpudWxsO3JldHVybltuZXcgc2FwLnVpLmNvcmUubXZjLlhNTFZpZXcoe2lkOmk/di5fb0NvbnRhaW5pbmdWaWV3LmNyZWF0ZUlkKGkpOnVuZGVmaW5lZCx4bWxOb2RlOm4sY29udGFpbmluZ1ZpZXc6di5fb0NvbnRhaW5pbmdWaWV3fSldfWVsc2V7cmV0dXJuIGUobil9fWZ1bmN0aW9uIGUobil7aWYobChuKT09PSJFeHRlbnNpb25Qb2ludCImJm4ubmFtZXNwYWNlVVJJPT09InNhcC51aS5jb3JlIil7cmV0dXJuIGcobix2KX1lbHNle3JldHVybiBoKG4pfX1mdW5jdGlvbiBnKG4sdil7dmFyIFI9dW5kZWZpbmVkO2lmKHNhcC51aS5jb3JlLkN1c3RvbWl6aW5nQ29uZmlndXJhdGlvbil7dmFyIGo9c2FwLnVpLmNvcmUuQ3VzdG9taXppbmdDb25maWd1cmF0aW9uLmdldFZpZXdFeHRlbnNpb24oQyxuLmdldEF0dHJpYnV0ZSgibmFtZSIpKTtpZihqKXtpZihqLmNsYXNzTmFtZSl7cS5zYXAucmVxdWlyZShqLmNsYXNzTmFtZSk7dmFyIG89cS5zYXAuZ2V0T2JqZWN0KGouY2xhc3NOYW1lKTtxLnNhcC5sb2cuaW5mbygiQ3VzdG9taXppbmc6IFZpZXcgZXh0ZW5zaW9uIGZvdW5kIGZvciBleHRlbnNpb24gcG9pbnQgJyIrbi5nZXRBdHRyaWJ1dGUoIm5hbWUiKSsiJyBpbiBWaWV3ICciK0MrIic6ICIrai5jbGFzc05hbWUrIjogIisoai52aWV3TmFtZXx8ai5mcmFnbWVudE5hbWUpKTtpZihqLmNsYXNzTmFtZT09PSJzYXAudWkuY29yZS5GcmFnbWVudCIpe3ZhciBGPW5ldyBvKHt0eXBlOmoudHlwZSxmcmFnbWVudE5hbWU6ai5mcmFnbWVudE5hbWUsY29udGFpbmluZ1ZpZXc6dn0pO1I9KHEuaXNBcnJheShGKT9GOltGXSl9ZWxzZSBpZihqLmNsYXNzTmFtZT09PSJzYXAudWkuY29yZS5tdmMuVmlldyIpe3ZhciB2PXNhcC51aS52aWV3KHt0eXBlOmoudHlwZSx2aWV3TmFtZTpqLnZpZXdOYW1lfSk7Uj1bdl19ZWxzZXtxLnNhcC5sb2cud2FybmluZygiQ3VzdG9taXppbmc6IFVua25vd24gZXh0ZW5zaW9uIGNsYXNzTmFtZSBjb25maWd1cmVkIChhbmQgaWdub3JlZCkgaW4gQ29tcG9uZW50LmpzIGZvciBleHRlbnNpb24gcG9pbnQgJyIrbi5nZXRBdHRyaWJ1dGUoIm5hbWUiKSsiJyBpbiBWaWV3ICciK0MrIic6ICIrai5jbGFzc05hbWUpfX1lbHNle3Euc2FwLmxvZy53YXJuaW5nKCJDdXN0b21pemluZzogbm8gZXh0ZW5zaW9uIGNsYXNzTmFtZSBjb25maWd1cmVkIGluIENvbXBvbmVudC5qcyBmb3IgZXh0ZW5zaW9uIHBvaW50ICciK24uZ2V0QXR0cmlidXRlKCJuYW1lIikrIicgaW4gVmlldyAnIitDKyInOiAiK2ouY2xhc3NOYW1lKX19ZWxzZXt9fWlmKCFSKXtSPVtdO3ZhciBrPW4uY2hpbGROb2Rlcztmb3IodmFyIGk9MDtpPGsubGVuZ3RoO2krKyl7dmFyIG09a1tpXTtpZihtLm5vZGVUeXBlPT09MSl7Uj1xLm1lcmdlKFIsZChtKSl9fX1yZXR1cm4gUnx8W119ZnVuY3Rpb24gaChuKXt2YXIgaj1uLm5hbWVzcGFjZVVSSSxvPWYoaixsKG4pKSxtPW8uZ2V0TWV0YWRhdGEoKSxKPW0uZ2V0SlNPTktleXMoKSxzPXt9LFM9IiIsaz1bXSxPO2Zvcih2YXIgaT0wO2k8bi5hdHRyaWJ1dGVzLmxlbmd0aDtpKyspe3ZhciB1PW4uYXR0cmlidXRlc1tpXTt2YXIgTj11Lm5hbWU7dmFyIFY9dS52YWx1ZTt2YXIgST1KW05dO2lmKE49PT0iaWQiKXtzW05dPXYuX29Db250YWluaW5nVmlldy5jcmVhdGVJZChWKTtPPVZ9ZWxzZSBpZihOPT09ImNsYXNzIil7Uys9Vn1lbHNlIGlmKE49PT0idmlld05hbWUiKXtzW05dPVZ9ZWxzZSBpZihOPT09ImZyYWdtZW50TmFtZSIpe3NbTl09VjtzWydjb250YWluaW5nVmlldyddPXYuX29Db250YWluaW5nVmlld31lbHNlIGlmKE49PT0iYmluZGluZyIpe3ZhciBCPXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuYmluZGluZ1BhcnNlcihWLHYuX29Db250YWluaW5nVmlldy5vQ29udHJvbGxlcik7cy5vYmplY3RCaW5kaW5ncz1zLm9iamVjdEJpbmRpbmdzfHx7fTtzLm9iamVjdEJpbmRpbmdzW0IubW9kZWx8fHVuZGVmaW5lZF09Qn1lbHNlIGlmKE4uaW5kZXhPZigiOiIpPi0xKXtpZih1Lm5hbWVzcGFjZVVSST09PSJodHRwOi8vc2NoZW1hcy5zYXAuY29tL3NhcHVpNS9leHRlbnNpb24vc2FwLnVpLmNvcmUuQ3VzdG9tRGF0YS8xIil7dmFyIHc9bCh1KTtrLnB1c2gobmV3IHNhcC51aS5jb3JlLkN1c3RvbURhdGEoe2tleTp3LHZhbHVlOnAoImFueSIsVix3LHYuX29Db250YWluaW5nVmlldy5vQ29udHJvbGxlcil9KSl9ZWxzZSBpZihOLmluZGV4T2YoInhtbG5zOiIpIT09MCl7cS5zYXAubG9nLndhcm5pbmcodisiOiBYTUxWaWV3IHBhcnNlciBlbmNvdW50ZXJlZCBhbmQgaWdub3JlZCBhdHRyaWJ1dGUgJyIrTisiJyAodmFsdWU6ICciK1YrIicpIHdpdGggdW5rbm93biBuYW1lc3BhY2UiKX19ZWxzZSBpZihJJiZJLl9pS2luZD09PTApe3NbTl09cChJLnR5cGUsVixOLHYuX29Db250YWluaW5nVmlldy5vQ29udHJvbGxlcil9ZWxzZSBpZihJJiZJLl9pS2luZD09PTEmJkkuYWx0VHlwZXMpe3NbTl09cChJLmFsdFR5cGVzWzBdLFYsTix2Ll9vQ29udGFpbmluZ1ZpZXcub0NvbnRyb2xsZXIpfWVsc2UgaWYoSSYmSS5faUtpbmQ9PT0yKXt2YXIgQj1zYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LmJpbmRpbmdQYXJzZXIoVix2Ll9vQ29udGFpbmluZ1ZpZXcub0NvbnRyb2xsZXIpO2lmKEIpe3NbTl09Qn1lbHNle3Euc2FwLmxvZy5lcnJvcih2KyI6IGFnZ3JlZ2F0aW9ucyB3aXRoIGNhcmRpbmFsaXR5IDAuLm4gb25seSBhbGxvdyBiaW5kaW5nIHBhdGhzIGFzIGF0dHJpYnV0ZSB2YWx1ZSAod3JvbmcgdmFsdWU6ICIrTisiPSciK1YrIicpIil9fWVsc2UgaWYoSSYmSS5faUtpbmQ9PT0zKXtzW05dPXYuY3JlYXRlSWQoVil9ZWxzZSBpZihJJiZJLl9pS2luZD09PTQpe3NbTl09cS5tYXAoVi5zcGxpdCgvW1xzLF0rL2cpLGZ1bmN0aW9uKEcpe3JldHVybiBHP3YuY3JlYXRlSWQoRyk6bnVsbH0pfWVsc2UgaWYoSSYmSS5faUtpbmQ9PT01KXt2YXIgRT12Ll9vQ29udGFpbmluZ1ZpZXcub0NvbnRyb2xsZXJbVl07aWYodHlwZW9mKEUpIT09ImZ1bmN0aW9uIil7cS5zYXAubG9nLndhcm5pbmcodisiOiBldmVudCBoYW5kbGVyIGZ1bmN0aW9uIFwiIitWKyJcIiBpcyBub3QgYSBmdW5jdGlvbiBvciBkb2VzIG5vdCBleGlzdCBpbiB0aGUgY29udHJvbGxlci4iKX1pZihFKXtFWyJfc2FwdWlfaGFuZGxlck5hbWUiXT1WO3NbTl09W0Usdi5fb0NvbnRhaW5pbmdWaWV3Lm9Db250cm9sbGVyXX19ZWxzZSBpZihOIT09InhtbG5zIil7cS5zYXAubG9nLndhcm5pbmcodisiOiBYTUxUZW1wbGF0ZVByb2Nlc3NvciBlbmNvdW50ZXJlZCBhbmQgaWdub3JlZCB1bmtub3duIGF0dHJpYnV0ZSAnIitOKyInICh2YWx1ZTogJyIrVisiJykiKX19aWYoay5sZW5ndGg+MCl7cy5jdXN0b21EYXRhPWt9ZnVuY3Rpb24geShuLEEseil7dmFyIEcsSDtmb3IoRz1uLmZpcnN0Q2hpbGQ7RztHPUcubmV4dFNpYmxpbmcpe2lmKEcubm9kZVR5cGU9PT0xKXtIPUcubmFtZXNwYWNlVVJJPT09aiYmeiYmeltsKEcpXTtpZihIKXt5KEcsSCl9ZWxzZSBpZihBKXt2YXIgSz1kKEcpO2Zvcih2YXIgaT0wO2k8Sy5sZW5ndGg7aSsrKXt2YXIgTT1LW2ldO3ZhciBQPUEuX3NOYW1lO2lmKEEubXVsdGlwbGUpe2lmKCFzW1BdKXtzW1BdPVtdfWlmKHR5cGVvZiBzW1BdLnBhdGg9PT0ic3RyaW5nIil7c1tQXS50ZW1wbGF0ZT1NfWVsc2V7c1tQXS5wdXNoKE0pfX1lbHNle3NbUF09TX19fWVsc2UgaWYobChuKSE9PSJGcmFnbWVudERlZmluaXRpb24ifHxuLm5hbWVzcGFjZVVSSSE9PSJzYXAudWkuY29yZSIpe3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IGFkZCBkaXJlY3QgY2hpbGQgd2l0aG91dCBkZWZhdWx0IGFnZ3JlZ2F0aW9uIGRlZmluZWQgZm9yIGNvbnRyb2wgIittLmdldEVsZW1lbnROYW1lKCkpfX1lbHNlIGlmKEcubm9kZVR5cGU9PT0zKXtpZihxLnRyaW0oRy50ZXh0Q29udGVudHx8Ry50ZXh0KSl7dGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgYWRkIHRleHQgbm9kZXMgYXMgZGlyZWN0IGNoaWxkIG9mIGFuIGFnZ3JlZ2F0aW9uLiBGb3IgYWRkaW5nIHRleHQgdG8gYW4gYWdncmVnYXRpb24sIGEgc3Vycm91bmRpbmcgaHRtbCB0YWcgaXMgbmVlZGVkIil9fX19dmFyIEE9bS5nZXREZWZhdWx0QWdncmVnYXRpb24oKTt2YXIgej1tLmdldEFsbEFnZ3JlZ2F0aW9ucygpO3kobixBLHopO2lmKHNhcC51aS5jb3JlLkN1c3RvbWl6aW5nQ29uZmlndXJhdGlvbiYmTyl7dmFyIEQ9c2FwLnVpLmNvcmUuQ3VzdG9taXppbmdDb25maWd1cmF0aW9uLmdldEN1c3RvbVByb3BlcnRpZXMoQyxPKTtpZihEKXtzPXEuZXh0ZW5kKHMsRCl9fXZhciBGO2lmKHNhcC51aS5jb3JlLm12Yy5WaWV3LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKG8ucHJvdG90eXBlKSYmdHlwZW9mIG8uX3NUeXBlPT09InN0cmluZyIpe0Y9c2FwLnVpLnZpZXcocyx1bmRlZmluZWQsby5fc1R5cGUpfWVsc2V7Rj1uZXcgbyhzKX1pZihTJiZGLmFkZFN0eWxlQ2xhc3Mpe0YuYWRkU3R5bGVDbGFzcyhTKX1pZighRil7Rj1bXX1lbHNlIGlmKCFxLmlzQXJyYXkoRikpe0Y9W0ZdfXJldHVybiBGfX07cmV0dXJuIFh9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5kZWxlZ2F0ZS5TY3JvbGxFbmFibGVtZW50Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuZGVsZWdhdGUuU2Nyb2xsRW5hYmxlbWVudCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL2RlbGVnYXRlL1Njcm9sbEVuYWJsZW1lbnQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9PYmplY3QnXSxmdW5jdGlvbihxLEIpeyJ1c2Ugc3RyaWN0Ijt2YXIgJD1xO3ZhciBTPUIuZXh0ZW5kKCJzYXAudWkuY29yZS5kZWxlZ2F0ZS5TY3JvbGxFbmFibGVtZW50Iix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oYyxzLEMpe0IuYXBwbHkodGhpcyk7dGhpcy5fb0NvbnRyb2w9Yzt0aGlzLl9vQ29udHJvbC5hZGREZWxlZ2F0ZSh0aGlzKTt0aGlzLl9zQ29udGVudElkPXM7dGhpcy5fYkhvcml6b250YWw9ISFDLmhvcml6b250YWw7dGhpcy5fYlZlcnRpY2FsPSEhQy52ZXJ0aWNhbDt0aGlzLl9zY3JvbGxYPTA7dGhpcy5fc2Nyb2xsWT0wO3RoaXMuX3Njcm9sbGVyPW51bGw7dGhpcy5fc2Nyb2xsYmFyQ2xhc3M9Qy5zY3JvbGxiYXJDbGFzc3x8ZmFsc2U7dGhpcy5fYm91bmNlPUMuYm91bmNlO2EodGhpcyxDKTtpZih0aGlzLl9pbml0KXt0aGlzLl9pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LHNldEhvcml6b250YWw6ZnVuY3Rpb24oaCl7dGhpcy5fYkhvcml6b250YWw9ISFoO2lmKHRoaXMuX3Njcm9sbGVyKXtpZih0aGlzLl96eW5nYSl7dGhpcy5fc2Nyb2xsZXIub3B0aW9ucy5zY3JvbGxpbmdYPXRoaXMuX2JIb3Jpem9udGFsfWVsc2V7dGhpcy5fc2Nyb2xsZXIuaFNjcm9sbD10aGlzLl9zY3JvbGxlci5oU2Nyb2xsYmFyPXRoaXMuX2JIb3Jpem9udGFsO3RoaXMuX3Njcm9sbGVyLl9zY3JvbGxiYXIoJ2gnKX19ZWxzZSBpZih0aGlzLl9zZXRPdmVyZmxvdyl7dGhpcy5fc2V0T3ZlcmZsb3coKX19LHNldFZlcnRpY2FsOmZ1bmN0aW9uKHYpe3RoaXMuX2JWZXJ0aWNhbD0hIXY7aWYodGhpcy5fc2Nyb2xsZXIpe2lmKHRoaXMuX3p5bmdhKXt0aGlzLl9zY3JvbGxlci5vcHRpb25zLnNjcm9sbGluZ1k9dGhpcy5fYlZlcnRpY2FsfWVsc2V7dGhpcy5fc2Nyb2xsZXIudlNjcm9sbD10aGlzLl9zY3JvbGxlci52U2Nyb2xsYmFyPXRoaXMuX2JWZXJ0aWNhbDt0aGlzLl9zY3JvbGxlci5fc2Nyb2xsYmFyKCd2Jyl9fWVsc2UgaWYodGhpcy5fc2V0T3ZlcmZsb3cpe3RoaXMuX3NldE92ZXJmbG93KCl9fSxnZXRIb3Jpem9udGFsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JIb3Jpem9udGFsfSxnZXRWZXJ0aWNhbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9iVmVydGljYWx9LHNldEJvdW5jZTpmdW5jdGlvbihiKXt0aGlzLl9ib3VuY2U9ISFifSxzZXRQdWxsRG93bjpmdW5jdGlvbihjKXt0aGlzLl9vUHVsbERvd249YztyZXR1cm4gdGhpc30sc2V0R3Jvd2luZ0xpc3Q6ZnVuY3Rpb24oZyxzKXt0aGlzLl9vR3Jvd2luZ0xpc3Q9Zzt0aGlzLl9mblNjcm9sbExvYWRDYWxsYmFjaz1xLnByb3h5KHMsZyk7cmV0dXJuIHRoaXN9LHNldEljb25UYWJCYXI6ZnVuY3Rpb24oSSxzLGYpe3RoaXMuX29JY29uVGFiQmFyPUk7dGhpcy5fZm5TY3JvbGxFbmRDYWxsYmFjaz1xLnByb3h5KHMsSSk7dGhpcy5fZm5TY3JvbGxTdGFydENhbGxiYWNrPXEucHJveHkoZixJKTtyZXR1cm4gdGhpc30sc2Nyb2xsVG86ZnVuY3Rpb24oeCx5LHQpe3RoaXMuX3Njcm9sbFg9eDt0aGlzLl9zY3JvbGxZPXk7dGhpcy5fc2Nyb2xsVG8oeCx5LHQpO3JldHVybiB0aGlzfSxkZXN0cm95OmZ1bmN0aW9uKCl7aWYodGhpcy5fZXhpdCl7dGhpcy5fZXhpdCgpfWlmKHRoaXMuX29Db250cm9sKXt0aGlzLl9vQ29udHJvbC5yZW1vdmVEZWxlZ2F0ZSh0aGlzKTt0aGlzLl9vQ29udHJvbD11bmRlZmluZWR9fSxyZWZyZXNoOmZ1bmN0aW9uKCl7aWYodGhpcy5fcmVmcmVzaCl7dGhpcy5fcmVmcmVzaCgpfX19KTt2YXIgaT17Z2V0U2Nyb2xsVG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbFl9LGdldFNjcm9sbExlZnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2Nyb2xsWH0sZ2V0TWF4U2Nyb2xsVG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbGVyPy10aGlzLl9zY3JvbGxlci5tYXhTY3JvbGxZOjB9LF9zY3JvbGxUbzpmdW5jdGlvbih4LHksdCl7dGhpcy5fc2Nyb2xsZXImJnRoaXMuX3Njcm9sbGVyLnNjcm9sbFRvKC14LC15LHQsZmFsc2UpfSxfcmVmcmVzaDpmdW5jdGlvbigpe2lmKHRoaXMuX3Njcm9sbGVyJiZ0aGlzLl9zU2Nyb2xsZXJJZCl7dmFyIHM9JC5zYXAuZG9tQnlJZCh0aGlzLl9zU2Nyb2xsZXJJZCk7aWYocyYmKHMub2Zmc2V0SGVpZ2h0PjApKXt0aGlzLl9iSWdub3JlU2Nyb2xsRW5kPXRydWU7dGhpcy5fc2Nyb2xsZXIucmVmcmVzaCgpO3RoaXMuX2JJZ25vcmVTY3JvbGxFbmQ9ZmFsc2U7aWYoLXRoaXMuX3Njcm9sbFghPXRoaXMuX3Njcm9sbGVyLnh8fC10aGlzLl9zY3JvbGxZIT10aGlzLl9zY3JvbGxlci55KXt0aGlzLl9zY3JvbGxlci5zY3JvbGxUbygtdGhpcy5fc2Nyb2xsWCwtdGhpcy5fc2Nyb2xsWSwwKX1pZih0aGlzLl9zY3JvbGxlci53cmFwcGVyJiZ0aGlzLl9zY3JvbGxlci53cmFwcGVyLnNjcm9sbFRvcCl7dGhpcy5fc2Nyb2xsZXIud3JhcHBlci5zY3JvbGxUb3A9MH19fX0sX2NsZWFudXA6ZnVuY3Rpb24oKXt0aGlzLl90b2dnbGVSZXNpemVMaXN0ZW5lcnMoZmFsc2UpO2lmKHRoaXMuX3Njcm9sbGVyKXt0aGlzLl9zY3JvbGxlci5zdG9wKCk7dGhpcy5fc2Nyb2xsWD0tdGhpcy5fc2Nyb2xsZXIueDt2YXIgcz0kLnNhcC5kb21CeUlkKHRoaXMuX3NTY3JvbGxlcklkKTtpZihzJiYocy5vZmZzZXRIZWlnaHQ+MCkpe3RoaXMuX3Njcm9sbFk9LXRoaXMuX3Njcm9sbGVyLnl9dGhpcy5fc2Nyb2xsZXIuZGVzdHJveSgpO3RoaXMuX3Njcm9sbGVyPW51bGx9fSxfdG9nZ2xlUmVzaXplTGlzdGVuZXJzOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX3NTY3JvbGxlclJlc2l6ZUxpc3RlbmVySWQpe3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3Rlcih0aGlzLl9zU2Nyb2xsZXJSZXNpemVMaXN0ZW5lcklkKTt0aGlzLl9zU2Nyb2xsZXJSZXNpemVMaXN0ZW5lcklkPW51bGx9aWYodGhpcy5fc0NvbnRlbnRSZXNpemVMaXN0ZW5lcklkKXtzYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLmRlcmVnaXN0ZXIodGhpcy5fc0NvbnRlbnRSZXNpemVMaXN0ZW5lcklkKTt0aGlzLl9zQ29udGVudFJlc2l6ZUxpc3RlbmVySWQ9bnVsbH1pZih0JiZ0aGlzLl9zQ29udGVudElkJiYkLnNhcC5kb21CeUlkKHRoaXMuX3NDb250ZW50SWQpKXt2YXIgYj0kLnByb3h5KHRoaXMuX3JlZnJlc2gsdGhpcyk7dGhpcy5fc1Njcm9sbGVyUmVzaXplTGlzdGVuZXJJZD1zYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLnJlZ2lzdGVyKCQuc2FwLmRvbUJ5SWQodGhpcy5fc1Njcm9sbGVySWQpLGIpO3RoaXMuX3NDb250ZW50UmVzaXplTGlzdGVuZXJJZD1zYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLnJlZ2lzdGVyKCQuc2FwLmRvbUJ5SWQodGhpcy5fc0NvbnRlbnRJZCksYil9fSxvbkJlZm9yZVJlbmRlcmluZzpmdW5jdGlvbigpe3RoaXMuX2NsZWFudXAoKX0sb25mb2N1c2luOmZ1bmN0aW9uKGUpe2lmKFMuX2JTY3JvbGxUb0lucHV0JiZzYXAudWkuRGV2aWNlLm9zLmFuZHJvaWQpe3ZhciBiPWUuc3JjRWxlbWVudDt0aGlzLl9zVGltZXJJZCYmcS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLl9zVGltZXJJZCk7aWYoYiYmYi5ub2RlTmFtZSYmKGIubm9kZU5hbWUudG9VcHBlckNhc2UoKT09PSJJTlBVVCJ8fGIubm9kZU5hbWUudG9VcHBlckNhc2UoKT09PSJURVhUQVJFQSIpKXt0aGlzLl9zVGltZXJJZD1xLnNhcC5kZWxheWVkQ2FsbCg0MDAsdGhpcyxmdW5jdGlvbigpe3ZhciBvPXRoaXMuX3Njcm9sbGVyLl9vZmZzZXQoYik7by50b3ArPTQ4O3RoaXMuX3Njcm9sbGVyLnNjcm9sbFRvKG8ubGVmdCxvLnRvcCl9KX19fSxvbkFmdGVyUmVuZGVyaW5nOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxiPSh0aGlzLl9ib3VuY2UhPT11bmRlZmluZWQpP3RoaXMuX2JvdW5jZTpzYXAudWkuRGV2aWNlLm9zLmlvczt2YXIgYz0kLnNhcC5ieUlkKHRoaXMuX3NDb250ZW50SWQpO3RoaXMuX3NTY3JvbGxlcklkPWMucGFyZW50KCkuYXR0cigiaWQiKTt2YXIgZD0oISFzYXAudWkuRGV2aWNlLm9zLmFuZHJvaWQmJiFzYXAudWkuRGV2aWNlLmJyb3dzZXIuY2hyb21lJiYoc2FwLnVpLkRldmljZS5vcy52ZXJzaW9uPT00fHwhc2FwLnVpLkRldmljZS5vcy52ZXJzaW9uU3RyLmluZGV4T2YoIjIuMy40IikpJiZjLmZpbmQoImlucHV0LHRleHRhcmVhIikubGVuZ3RoKTt0aGlzLl9pVG9wT2Zmc2V0PXRoaXMuX29QdWxsRG93biYmdGhpcy5fb1B1bGxEb3duLmdldERvbVJlZiYmdGhpcy5fb1B1bGxEb3duLmdldERvbVJlZigpLm9mZnNldEhlaWdodHx8MDt2YXIgeD10aGlzLl9zY3JvbGxYfHwwLHk9dGhpcy5fc2Nyb2xsWXx8MDtpZihzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKSl7Yy5hdHRyKCJkaXIiLCJydGwiKTt2YXIgcD1jLnBhcmVudCgpO3AuYXR0cigiZGlyIiwibHRyIik7aWYoIXRoaXMuX2JTY3JvbGxQb3NJbml0aWFsaXplZCl7eD10aGlzLl9zY3JvbGxYPWMud2lkdGgoKS1wLndpZHRoKCk7dGhpcy5fYlNjcm9sbFBvc0luaXRpYWxpemVkPXRydWV9fXRoaXMuX3Njcm9sbGVyPW5ldyB3aW5kb3cuaVNjcm9sbCh0aGlzLl9zU2Nyb2xsZXJJZCx7dXNlVHJhbnNpdGlvbjp0cnVlLHVzZVRyYW5zZm9ybTohZCxoaWRlU2Nyb2xsYmFyOnRydWUsZmFkZVNjcm9sbGJhcjp0cnVlLGJvdW5jZTohIWIsbW9tZW50dW06dHJ1ZSxoYW5kbGVDbGljazpmYWxzZSxoU2Nyb2xsOnRoaXMuX2JIb3Jpem9udGFsLHZTY3JvbGw6dGhpcy5fYlZlcnRpY2FsLHg6LXgseToteSx0b3BPZmZzZXQ6dGhpcy5faVRvcE9mZnNldCxzY3JvbGxiYXJDbGFzczp0aGlzLl9zY3JvbGxiYXJDbGFzcyxvbkJlZm9yZVNjcm9sbFN0YXJ0OmZ1bmN0aW9uKGUpe2lmKHQuX2lzU2Nyb2xsaW5nKXtlLnN0b3BQcm9wYWdhdGlvbigpO2UucHJldmVudERlZmF1bHQoKX19LG9uU2Nyb2xsRW5kOmZ1bmN0aW9uKCl7aWYoIXQuX2JJZ25vcmVTY3JvbGxFbmQmJnQuX3Njcm9sbGVyKXt0Ll9zY3JvbGxYPS10Ll9zY3JvbGxlci54O3QuX3Njcm9sbFk9LXQuX3Njcm9sbGVyLnl9aWYodC5fb1B1bGxEb3duKXt0Ll9vUHVsbERvd24uZG9TY3JvbGxFbmQoKX1pZih0Ll9vR3Jvd2luZ0xpc3QmJnQuX2ZuU2Nyb2xsTG9hZENhbGxiYWNrKXt2YXIgZT1NYXRoLmZsb29yKHRoaXMud3JhcHBlckgvNCk7dmFyIEk9LXRoaXMubWF4U2Nyb2xsWSt0aGlzLnk8ZTtpZih0aGlzLmRpclk+MCYmSSl7dC5fZm5TY3JvbGxMb2FkQ2FsbGJhY2soKX19aWYodC5fb0ljb25UYWJCYXImJnQuX2ZuU2Nyb2xsRW5kQ2FsbGJhY2spe3QuX2ZuU2Nyb2xsRW5kQ2FsbGJhY2soKX10Ll9pc1Njcm9sbGluZz1mYWxzZX0sb25SZWZyZXNoOmZ1bmN0aW9uKCl7aWYodC5fb1B1bGxEb3duKXt0Ll9vUHVsbERvd24uZG9SZWZyZXNoKCl9dC5fdG9nZ2xlUmVzaXplTGlzdGVuZXJzKHRydWUpfSxvblNjcm9sbE1vdmU6ZnVuY3Rpb24oZSl7aWYoIXQuX2lzU2Nyb2xsaW5nKXt2YXIgcj0vKElOUFVUfFRFWFRBUkVBKS9pLEE9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtpZihyLnRlc3QoQS50YWdOYW1lKSYmZS50YXJnZXQhPT1BKXtBLmJsdXIoKX19dC5faXNTY3JvbGxpbmc9dHJ1ZTtpZih0Ll9vUHVsbERvd24pe3QuX29QdWxsRG93bi5kb1Njcm9sbE1vdmUoKX1pZih0Ll9vSWNvblRhYkJhciYmdC5fZm5TY3JvbGxTdGFydENhbGxiYWNrKXt0Ll9mblNjcm9sbFN0YXJ0Q2FsbGJhY2soKX19fSk7Zm9yKHZhciBQPXRoaXMuX29Db250cm9sO1A9UC5vUGFyZW50Oyl7dmFyIHM9UC5nZXRTY3JvbGxEZWxlZ2F0ZT9QLmdldFNjcm9sbERlbGVnYXRlKCk6bnVsbDtpZihzJiYocy5nZXRWZXJ0aWNhbCgpJiZ0aGlzLmdldFZlcnRpY2FsKCl8fHMuZ2V0SG9yaXpvbnRhbCgpJiZ0aGlzLmdldEhvcml6b250YWwoKSkpe3RoaXMuX3Njcm9sbGVyLl9zYXB1aV9pc05lc3RlZD10cnVlO2JyZWFrfX10aGlzLl9zY3JvbGxlci5fbW92ZT1mdW5jdGlvbihlKXtpZihlLl9zYXB1aV9oYW5kbGVkQnlDb250cm9sJiYhZS5fc2FwdWlfc2Nyb2xsKXtyZXR1cm59aWYodGhpcy5fc2FwdWlfaXNOZXN0ZWQpe2UuX3NhcHVpX2hhbmRsZWRCeUNvbnRyb2w9ISh0aGlzLmRpclk8MCYmdGhpcy55Pj0wKSYmISh0aGlzLmRpclk+MCYmdGhpcy55PD10aGlzLm1heFNjcm9sbFkpJiYhKHRoaXMuZGlyWDwwJiZ0aGlzLng+PTApJiYhKHRoaXMuZGlyWD4wJiZ0aGlzLng8PXRoaXMubWF4U2Nyb2xsWCl9d2luZG93LmlTY3JvbGwucHJvdG90eXBlLl9tb3ZlLmNhbGwodGhpcyxlKX07dmFyIG89Yy5wYXJlbnQoKVswXTtpZihvJiYoby5vZmZzZXRIZWlnaHQ+MCkpe2lmKHRoaXMuX3Njcm9sbFghPS10aGlzLl9zY3JvbGxlci54fHx0aGlzLl9zY3JvbGxZIT0tdGhpcy5fc2Nyb2xsZXIueSl7dGhpcy5fc2Nyb2xsZXIuc2Nyb2xsVG8oLXRoaXMuX3Njcm9sbFgsLXRoaXMuX3Njcm9sbFksMCl9fXRoaXMuX3RvZ2dsZVJlc2l6ZUxpc3RlbmVycyh0cnVlKX0sb250b3VjaG1vdmU6ZnVuY3Rpb24oZSl7aWYodGhpcy5fcHJldmVudFRvdWNoTW92ZURlZmF1bHQpe2UucHJldmVudERlZmF1bHQoKX19fTt2YXIgej17X3JlZnJlc2g6ZnVuY3Rpb24oKXtpZih0aGlzLl9zY3JvbGxlciYmdGhpcy5fc0NvbnRlbnRJZCYmJC5zYXAuZG9tQnlJZCh0aGlzLl9zQ29udGVudElkKSl7dmFyIGM9JC5zYXAuYnlJZCh0aGlzLl9zQ29udGVudElkKTt2YXIgQz1jLnBhcmVudCgpO3RoaXMuX3Njcm9sbGVyLnNldERpbWVuc2lvbnMoQy53aWR0aCgpLEMuaGVpZ2h0KCksYy53aWR0aCgpLGMuaGVpZ2h0KCkpfX0sX2NsZWFudXA6ZnVuY3Rpb24oKXtpZih0aGlzLl9zU2Nyb2xsZXJSZXNpemVMaXN0ZW5lcklkKXtzYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLmRlcmVnaXN0ZXIodGhpcy5fc1Njcm9sbGVyUmVzaXplTGlzdGVuZXJJZCk7dGhpcy5fc1Njcm9sbGVyUmVzaXplTGlzdGVuZXJJZD1udWxsfWlmKHRoaXMuX3NDb250ZW50UmVzaXplTGlzdGVuZXJJZCl7c2FwLnVpLmNvcmUuUmVzaXplSGFuZGxlci5kZXJlZ2lzdGVyKHRoaXMuX3NDb250ZW50UmVzaXplTGlzdGVuZXJJZCk7dGhpcy5fc0NvbnRlbnRSZXNpemVMaXN0ZW5lcklkPW51bGx9aWYodGhpcy5fc2Nyb2xsZXIpe3ZhciB2PXRoaXMuX3Njcm9sbGVyLmdldFZhbHVlcygpO3RoaXMuX3Njcm9sbFg9di5sZWZ0O3RoaXMuX3Njcm9sbFk9di50b3B9fSxfc2Nyb2xsVG86ZnVuY3Rpb24oeCx5LHQpe2lmKHRoaXMuX3Njcm9sbGVyKXtpZighaXNOYU4odCkpe3RoaXMuX3Njcm9sbGVyLm9wdGlvbnMuYW5pbWF0aW9uRHVyYXRpb249dH10aGlzLl9zY3JvbGxlci5zY3JvbGxUbyh4LHksISF0KX19LG9uQmVmb3JlUmVuZGVyaW5nOmZ1bmN0aW9uKCl7dGhpcy5fY2xlYW51cCgpfSxvbkFmdGVyUmVuZGVyaW5nOmZ1bmN0aW9uKCl7dGhpcy5fcmVmcmVzaCgpO3RoaXMuX3Njcm9sbGVyLnNjcm9sbFRvKHRoaXMuX3Njcm9sbFgsdGhpcy5fc2Nyb2xsWSxmYWxzZSk7dGhpcy5fc0NvbnRlbnRSZXNpemVMaXN0ZW5lcklkPXNhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIucmVnaXN0ZXIoJC5zYXAuZG9tQnlJZCh0aGlzLl9zQ29udGVudElkKSwkLnByb3h5KGZ1bmN0aW9uKCl7aWYoKCF0aGlzLl9zQ29udGVudElkfHwhJC5zYXAuZG9tQnlJZCh0aGlzLl9zQ29udGVudElkKSkmJnRoaXMuX3NDb250ZW50UmVzaXplTGlzdGVuZXJJZCl7c2FwLnVpLmNvcmUuUmVzaXplSGFuZGxlci5kZXJlZ2lzdGVyKHRoaXMuX3NDb250ZW50UmVzaXplTGlzdGVuZXJJZCk7dGhpcy5fc0NvbnRlbnRSZXNpemVMaXN0ZW5lcklkPW51bGx9ZWxzZXt0aGlzLl9yZWZyZXNoKCl9fSx0aGlzKSl9LG9udG91Y2hzdGFydDpmdW5jdGlvbihlKXtpZihlLnRhcmdldC50YWdOYW1lLm1hdGNoKC9pbnB1dHx0ZXh0YXJlYXxzZWxlY3QvaSkpe3JldHVybn10aGlzLl9zY3JvbGxlci5kb1RvdWNoU3RhcnQoZS50b3VjaGVzLGUudGltZVN0YW1wKX0sb250b3VjaGVuZDpmdW5jdGlvbihlKXt0aGlzLl9zY3JvbGxlci5kb1RvdWNoRW5kKGUudGltZVN0YW1wKX0sb250b3VjaG1vdmU6ZnVuY3Rpb24oZSl7dGhpcy5fc2Nyb2xsZXIuZG9Ub3VjaE1vdmUoZS50b3VjaGVzLGUudGltZVN0YW1wKTtpZih0aGlzLl9wcmV2ZW50VG91Y2hNb3ZlRGVmYXVsdCl7ZS5wcmV2ZW50RGVmYXVsdCgpfWVsc2V7ZS5zdG9wUHJvcGFnYXRpb24oKX19fTt2YXIgbj17Z2V0U2Nyb2xsVG9wOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbFl8fDB9LGdldFNjcm9sbExlZnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2Nyb2xsWHx8MH0sZ2V0TWF4U2Nyb2xsVG9wOmZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMuXyRDb250YWluZXImJnRoaXMuXyRDb250YWluZXIubGVuZ3RoKT90aGlzLl8kQ29udGFpbmVyWzBdLnNjcm9sbEhlaWdodC10aGlzLl8kQ29udGFpbmVyLmhlaWdodCgpOi0xfSxfc2V0T3ZlcmZsb3c6ZnVuY3Rpb24oKXt2YXIgYz10aGlzLl8kQ29udGFpbmVyO2lmKCFjfHwhY1swXSlyZXR1cm47Yy5jc3MoInotaW5kZXgiLCIwIik7aWYoc2FwLnVpLkRldmljZS5vcy5pb3Mpe2MuY3NzKCJvdmVyZmxvdy14Iix0aGlzLl9iSG9yaXpvbnRhbD8ic2Nyb2xsIjoiaGlkZGVuIikuY3NzKCJvdmVyZmxvdy15Iix0aGlzLl9iVmVydGljYWw/InNjcm9sbCI6ImhpZGRlbiIpLmNzcygiLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmciLCJ0b3VjaCIpfWVsc2V7Yy5jc3MoIm92ZXJmbG93LXgiLHRoaXMuX2JIb3Jpem9udGFsPyJhdXRvIjoiaGlkZGVuIikuY3NzKCJvdmVyZmxvdy15Iix0aGlzLl9iVmVydGljYWw/ImF1dG8iOiJoaWRkZW4iKX19LF9yZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIGM9dGhpcy5fJENvbnRhaW5lcjtpZighY3x8IWMuaGVpZ2h0KCkpcmV0dXJuO3ZhciBDPSQuc2FwLmJ5SWQodGhpcy5fc0NvbnRlbnRJZCk7aWYodGhpcy5fb1B1bGxEb3duJiZ0aGlzLl9vUHVsbERvd24uX2JUb3VjaE1vZGUpe3ZhciBkPXRoaXMuX29QdWxsRG93bi5nZXREb21SZWYoKTtpZihkKXtkLnN0eWxlLm1hcmdpblRvcD10aGlzLl9vUHVsbERvd24uX2lTdGF0ZT09Mj8iIjoiLSIrZC5vZmZzZXRIZWlnaHQrInB4In19aWYoYy5zY3JvbGxUb3AoKSE9dGhpcy5fc2Nyb2xsWSl7Yy5zY3JvbGxUb3AodGhpcy5fc2Nyb2xsWSl9aWYoISh0aGlzLl9vUHVsbERvd24mJnRoaXMuX29QdWxsRG93bi5fYlRvdWNoTW9kZSkmJiF0aGlzLl9mblNjcm9sbExvYWRDYWxsYmFjayYmISEhc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyKXtzYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLmRlcmVnaXN0ZXIodGhpcy5fc1Jlc2l6ZUxpc3RlbmVySWQpO3RoaXMuX3NSZXNpemVMaXN0ZW5lcklkPW51bGx9fSxfb25TY3JvbGw6ZnVuY3Rpb24oZSl7dmFyIGM9dGhpcy5fJENvbnRhaW5lcjt0aGlzLl9zY3JvbGxYPWMuc2Nyb2xsTGVmdCgpO3RoaXMuX3Njcm9sbFk9Yy5zY3JvbGxUb3AoKTtpZih0aGlzLl9mblNjcm9sbExvYWRDYWxsYmFjayYmY1swXS5zY3JvbGxIZWlnaHQtYy5zY3JvbGxUb3AoKS1jLmhlaWdodCgpPDEwMCl7dGhpcy5fZm5TY3JvbGxMb2FkQ2FsbGJhY2soKX19LF9vblN0YXJ0OmZ1bmN0aW9uKGUpe3ZhciBjPXRoaXMuXyRDb250YWluZXJbMF07aWYoIWMpcmV0dXJuO3RoaXMuX2JBbGxvd1Njcm9sbD0hc2FwLnVpLkRldmljZS5vcy5pb3N8fHRoaXMuX2JWZXJ0aWNhbCYmKGMuc2Nyb2xsSGVpZ2h0PmMuY2xpZW50SGVpZ2h0KzEpO2lmKHRoaXMuX2JBbGxvd1Njcm9sbCYmc2FwLnVpLkRldmljZS5vcy5pb3Mpe2lmKGMuc2Nyb2xsVG9wPT0wKXtjLnNjcm9sbFRvcD0xfXZhciBkPWMuc2Nyb2xsSGVpZ2h0LWMuY2xpZW50SGVpZ2h0O2lmKGMuc2Nyb2xsVG9wPT09ZCl7Yy5zY3JvbGxUb3A9ZC0xfX12YXIgcD1lLnRvdWNoZXM/ZS50b3VjaGVzWzBdOmU7dGhpcy5faVg9cC5wYWdlWDt0aGlzLl9pWT1wLnBhZ2VZO3RoaXMuX2JQdWxsRG93bj1mYWxzZTt0aGlzLl9pRGlyZWN0aW9uPSIifSxfb25Ub3VjaE1vdmU6ZnVuY3Rpb24oZSl7aWYodGhpcy5faURpcmVjdGlvbj09IiIpe3ZhciBjPXRoaXMuXyRDb250YWluZXJbMF07dmFyIHA9ZS50b3VjaGVzWzBdO3ZhciBkPXAucGFnZVgtdGhpcy5faVg7dmFyIGI9cC5wYWdlWS10aGlzLl9pWTtpZihkIT0wfHxiIT0wKXt0aGlzLl9pRGlyZWN0aW9uPU1hdGguYWJzKGIpPk1hdGguYWJzKGQpPyJ2IjoiaCJ9aWYodGhpcy5fb1B1bGxEb3duJiZ0aGlzLl9vUHVsbERvd24uX2JUb3VjaE1vZGUmJnRoaXMuX2lEaXJlY3Rpb249PSJ2IiYmYy5zY3JvbGxUb3A8PTEpe2lmKGI+TWF0aC5hYnMoZCkpe3RoaXMuX2JQdWxsRG93bj10cnVlfX19aWYodGhpcy5fYlB1bGxEb3duPT09dHJ1ZSl7dmFyIGY9dGhpcy5fb1B1bGxEb3duLmdldERvbVJlZigpO3ZhciB0PWUudG91Y2hlc1swXS5wYWdlWS10aGlzLl9pWS1mLm9mZnNldEhlaWdodDtpZih0PjIwKXQ9MjA7Zi5zdHlsZS5tYXJnaW5Ub3A9dCsicHgiO3RoaXMuX29QdWxsRG93bi5kb1B1bGwodCk7ZS5wcmV2ZW50RGVmYXVsdCgpfWlmKHRoaXMuX2JBbGxvd1Njcm9sbHx8dGhpcy5fYkhvcml6b250YWwmJnRoaXMuX2lEaXJlY3Rpb249PSJoIil7ZS5zZXRNYXJrZWQoKTtpZih3aW5kb3cuaVNjcm9sbCl7ZS5zZXRNYXJrZWQoInNjcm9sbCIpfX19LF9vbkVuZDpmdW5jdGlvbigpe2lmKHRoaXMuX29QdWxsRG93biYmdGhpcy5fb1B1bGxEb3duLl9iVG91Y2hNb2RlKXt0aGlzLl9vUHVsbERvd24uZG9TY3JvbGxFbmQoKTt0aGlzLl9yZWZyZXNoKCl9fSxfb25Nb3VzZURvd246ZnVuY3Rpb24oZSl7aWYoZS5idXR0b249PTApe3RoaXMuX2JTY3JvbGxpbmc9dHJ1ZTt0aGlzLl9vblN0YXJ0KGUpfX0sX29uTW91c2VNb3ZlOmZ1bmN0aW9uKEUpe2lmKHRoaXMuX2JTY3JvbGxpbmcpe3ZhciBlPUUub3JpZ2luYWxFdmVudDt2YXIgYj1lLmJ1dHRvbnN8fGUud2hpY2g7aWYoYj09MSl7dmFyIGM9dGhpcy5fJENvbnRhaW5lclswXTtjLnNjcm9sbExlZnQ9Yy5zY3JvbGxMZWZ0K3RoaXMuX2lYLUUucGFnZVg7Yy5zY3JvbGxUb3A9Yy5zY3JvbGxUb3ArdGhpcy5faVktRS5wYWdlWTt0aGlzLl9pWD1FLnBhZ2VYO3RoaXMuX2lZPUUucGFnZVl9fX0sX29uTW91c2VVcDpmdW5jdGlvbihlKXt0aGlzLl9iU2Nyb2xsaW5nPWZhbHNlO3RoaXMuX29uRW5kKCl9LG9uQmVmb3JlUmVuZGVyaW5nOmZ1bmN0aW9uKCl7aWYodGhpcy5fc1Jlc2l6ZUxpc3RlbmVySWQpe3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3Rlcih0aGlzLl9zUmVzaXplTGlzdGVuZXJJZCk7dGhpcy5fc1Jlc2l6ZUxpc3RlbmVySWQ9bnVsbH12YXIgYz10aGlzLl8kQ29udGFpbmVyO2lmKGMpe2lmKGMuaGVpZ2h0KCk+MCl7dGhpcy5fc2Nyb2xsWD1jLnNjcm9sbExlZnQoKTt0aGlzLl9zY3JvbGxZPWMuc2Nyb2xsVG9wKCl9Yy5vZmYoKX19LG9uQWZ0ZXJSZW5kZXJpbmc6ZnVuY3Rpb24oKXt2YXIgYz10aGlzLl8kQ29udGFpbmVyPSQuc2FwLmJ5SWQodGhpcy5fc0NvbnRlbnRJZCkucGFyZW50KCk7dmFyIF89cS5wcm94eSh0aGlzLl9yZWZyZXNoLHRoaXMpO3RoaXMuX3NldE92ZXJmbG93KCk7dGhpcy5fc2Nyb2xsVG8odGhpcy5fc2Nyb2xsWCx0aGlzLl9zY3JvbGxZKTt0aGlzLl9yZWZyZXNoKCk7aWYoIWMuaXMoIjp2aXNpYmxlIil8fCEhc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyfHx0aGlzLl9vUHVsbERvd258fHRoaXMuX2ZuU2Nyb2xsTG9hZENhbGxiYWNrKXt0aGlzLl9zUmVzaXplTGlzdGVuZXJJZD1zYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLnJlZ2lzdGVyKGNbMF0sXyl9Yy5zY3JvbGwocS5wcm94eSh0aGlzLl9vblNjcm9sbCx0aGlzKSk7aWYoc2FwLnVpLkRldmljZS5zdXBwb3J0LnRvdWNoKXtjLm9uKCJ0b3VjaGNhbmNlbCB0b3VjaGVuZCIscS5wcm94eSh0aGlzLl9vbkVuZCx0aGlzKSkub24oInRvdWNoc3RhcnQiLHEucHJveHkodGhpcy5fb25TdGFydCx0aGlzKSkub24oInRvdWNobW92ZSIscS5wcm94eSh0aGlzLl9vblRvdWNoTW92ZSx0aGlzKSl9ZWxzZSBpZih0aGlzLl9iTW91c2VEcmFnKXtjLm9uKCJtb3VzZXVwIG1vdXNlbGVhdmUiLHEucHJveHkodGhpcy5fb25Nb3VzZVVwLHRoaXMpKS5tb3VzZWRvd24ocS5wcm94eSh0aGlzLl9vbk1vdXNlRG93bix0aGlzKSkubW91c2Vtb3ZlKHEucHJveHkodGhpcy5fb25Nb3VzZU1vdmUsdGhpcykpfX0sX3JlYWRBY3R1YWxTY3JvbGxQb3NpdGlvbjpmdW5jdGlvbigpe2lmKHRoaXMuXyRDb250YWluZXIud2lkdGgoKT4wKXt0aGlzLl9zY3JvbGxYPXRoaXMuXyRDb250YWluZXIuc2Nyb2xsTGVmdCgpfWlmKHRoaXMuXyRDb250YWluZXIuaGVpZ2h0KCk+MCl7dGhpcy5fc2Nyb2xsWT10aGlzLl8kQ29udGFpbmVyLnNjcm9sbFRvcCgpfX0sX3Njcm9sbFRvOmZ1bmN0aW9uKHgseSx0KXtpZih0aGlzLl8kQ29udGFpbmVyLmxlbmd0aD4wKXtpZih0PjApe3RoaXMuXyRDb250YWluZXIuYW5pbWF0ZSh7c2Nyb2xsVG9wOnksc2Nyb2xsTGVmdDp4fSx0LHEucHJveHkodGhpcy5fcmVhZEFjdHVhbFNjcm9sbFBvc2l0aW9uLHRoaXMpKX1lbHNle3RoaXMuXyRDb250YWluZXIuc2Nyb2xsVG9wKHkpO3RoaXMuXyRDb250YWluZXIuc2Nyb2xsTGVmdCh4KTt0aGlzLl9yZWFkQWN0dWFsU2Nyb2xsUG9zaXRpb24oKX19fX07ZnVuY3Rpb24gYShzLGMpe3ZhciBkO2lmKCFzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2gmJiEkLnNhcC5zaW11bGF0ZU1vYmlsZU9uRGVza3RvcCYmIWMubm9uVG91Y2hTY3JvbGxpbmcpe3JldHVybn1pZihzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2h8fCQuc2FwLnNpbXVsYXRlTW9iaWxlT25EZXNrdG9wKXskLnNhcC5yZXF1aXJlKCJqcXVlcnkuc2FwLm1vYmlsZSIpfWQ9e19pbml0OmZ1bmN0aW9uKEMsYixjKXtmdW5jdGlvbiBlKGYsaCx2KXt2YXIgbz1uZXcgd2luZG93LlNjcm9sbGVyKGZ1bmN0aW9uKGosdCxrKXt2YXIgbT0kLnNhcC5ieUlkKGYpLnBhcmVudCgpO20uc2Nyb2xsTGVmdChqKTttLnNjcm9sbFRvcCh0KX0se3Njcm9sbGluZ1g6aCxzY3JvbGxpbmdZOnYsYm91bmNpbmc6ZmFsc2V9KTtyZXR1cm4gb31mdW5jdGlvbiBnKCl7aWYoYy56eW5nYSl7cmV0dXJuInoifWlmKHNhcC51aS5EZXZpY2Uub3MuYW5kcm9pZCYmc2FwLnVpLkRldmljZS5vcy52ZXJzaW9uPDQuMXx8c2FwLnVpLkRldmljZS5vcy5ibGFja2JlcnJ5fHxzYXAudWkuRGV2aWNlLm9zLmlvcyl7cmV0dXJuImkifWlmKCFzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2gmJiQuc2FwLnNpbXVsYXRlTW9iaWxlT25EZXNrdG9wKXtyZXR1cm4iaSJ9aWYoYy5pc2Nyb2xsPT0iZm9yY2UifHwoc2FwLnVpLkRldmljZS5zdXBwb3J0LnRvdWNoJiYoYy5pc2Nyb2xsfHxzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXROb05hdGl2ZVNjcm9sbCgpKSkpe3JldHVybiJpIn1yZXR1cm4ibiJ9dmFyIGw9ZygpO3RoaXMuX3ByZXZlbnRUb3VjaE1vdmVEZWZhdWx0PSEhYy5wcmV2ZW50RGVmYXVsdDt0aGlzLl9zY3JvbGxlcj1udWxsO3N3aXRjaChsKXtjYXNlInoiOiQuc2FwLnJlcXVpcmUoInNhcC51aS50aGlyZHBhcnR5Lnp5bmdhc2Nyb2xsIik7JC5leHRlbmQodGhpcyx6KTt0aGlzLl96eW5nYT10cnVlO3RoaXMuX3Njcm9sbGVyPWUodGhpcy5fc0NvbnRlbnRJZCx0aGlzLl9iSG9yaXpvbnRhbCx0aGlzLl9iVmVydGljYWwpO2JyZWFrO2Nhc2UiaSI6JC5zYXAucmVxdWlyZSgic2FwLnVpLnRoaXJkcGFydHkuaXNjcm9sbCIpOyQuZXh0ZW5kKHRoaXMsaSk7dGhpcy5fYklTY3JvbGw9dHJ1ZTticmVhaztkZWZhdWx0OmlmKCQubW9iaWxlJiYkLmV2ZW50LnNwZWNpYWwuc3dpcGUmJiQuZXZlbnQuc3BlY2lhbC5zd2lwZS5zY3JvbGxTdXByZXNzaW9uVGhyZXNob2xkPDEyMCl7JC5ldmVudC5zcGVjaWFsLnN3aXBlLnNjcm9sbFN1cHJlc3Npb25UaHJlc2hvbGQ9MTIwfSQuZXh0ZW5kKHRoaXMsbik7aWYoYy5ub25Ub3VjaFNjcm9sbGluZz09PXRydWUpe3RoaXMuX2JNb3VzZURyYWc9dHJ1ZX1pZihzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKSl7dGhpcy5fc2Nyb2xsWD05OTk5fWJyZWFrfX0sX2V4aXQ6ZnVuY3Rpb24oKXtpZih0aGlzLl9jbGVhbnVwKXt0aGlzLl9jbGVhbnVwKCl9dGhpcy5fc2Nyb2xsZXI9bnVsbH19OyQuZXh0ZW5kKHMsZCl9cmV0dXJuIFN9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuVmlld1JlbmRlcmVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUubXZjLlZpZXdSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL212Yy9WaWV3UmVuZGVyZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIFY9e307Vi5hZGREaXNwbGF5Q2xhc3M9ZnVuY3Rpb24ocixjKXtpZihjLmdldERpc3BsYXlCbG9jaygpfHwoYy5nZXRXaWR0aCgpPT09IjEwMCUiJiZjLmdldEhlaWdodCgpPT09IjEwMCUiKSl7ci5hZGRDbGFzcygic2FwVWlWaWV3RGlzcGxheUJsb2NrIil9fTtyZXR1cm4gVn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLm12Yy5YTUxWaWV3UmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuWE1MVmlld1JlbmRlcmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL1hNTFZpZXdSZW5kZXJlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vVmlld1JlbmRlcmVyJ10sZnVuY3Rpb24ocSxWKXsidXNlIHN0cmljdCI7dmFyIFg9e307WC5yZW5kZXI9ZnVuY3Rpb24ocixjKXt2YXIgJD1jLl8kb2xkQ29udGVudD1zYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLmZpbmRQcmVzZXJ2ZWRDb250ZW50KGMuZ2V0SWQoKSk7aWYoJC5sZW5ndGg9PT0wKXt2YXIgcz1jLmlzU3ViVmlldygpO2lmKCFzKXtyLndyaXRlKCI8ZGl2Iik7ci53cml0ZUNvbnRyb2xEYXRhKGMpO3IuYWRkQ2xhc3MoInNhcFVpVmlldyIpO3IuYWRkQ2xhc3MoInNhcFVpWE1MVmlldyIpO1YuYWRkRGlzcGxheUNsYXNzKHIsYyk7ci53cml0ZUF0dHJpYnV0ZSgiZGF0YS1zYXAtdWktcHJlc2VydmUiLGMuZ2V0SWQoKSk7aWYoYy5nZXRXaWR0aCgpKXtyLmFkZFN0eWxlKCJ3aWR0aCIsYy5nZXRXaWR0aCgpKX1pZihjLmdldEhlaWdodCgpKXtyLmFkZFN0eWxlKCJoZWlnaHQiLGMuZ2V0SGVpZ2h0KCkpfXIud3JpdGVTdHlsZXMoKTtyLndyaXRlQ2xhc3NlcygpO3Iud3JpdGUoIj4iKX1mb3IodmFyIGk9MDtpPGMuX2FQYXJzZWRDb250ZW50Lmxlbmd0aDtpKyspe3ZhciBmPWMuX2FQYXJzZWRDb250ZW50W2ldO2lmKGYmJnR5cGVvZihmKT09PSJzdHJpbmciKXtyLndyaXRlKGYpfWVsc2V7ci5yZW5kZXJDb250cm9sKGYpfX1pZighcyl7ci53cml0ZSgiPC9kaXY+Iil9fWVsc2V7ci5yZW5kZXJDb250cm9sKGMub0FmdGVyUmVuZGVyaW5nTm90aWZpZXIpO3Iud3JpdGUoJzxkaXYgaWQ9InNhcC11aS1kdW1teS0nK2MuZ2V0SWQoKSsnIiBjbGFzcz0ic2FwVWlIaWRkZW4iPicpO2Zvcih2YXIgaT0wO2k8Yy5fYVBhcnNlZENvbnRlbnQubGVuZ3RoO2krKyl7dmFyIGY9Yy5fYVBhcnNlZENvbnRlbnRbaV07aWYodHlwZW9mKGYpIT09InN0cmluZyIpe3Euc2FwLmJ5SWQoZi5nZXRJZCgpLCQpLnJlcGxhY2VXaXRoKCc8ZGl2IGlkPSJzYXAtdWktZHVtbXktJytmLmdldElkKCkrJyIgY2xhc3M9InNhcFVpSGlkZGVuIi8+Jyk7ci5yZW5kZXJDb250cm9sKGYpfX1yLndyaXRlKCc8L2Rpdj4nKX19O3JldHVybiBYfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50UmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnRSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3RtcGwvRE9NRWxlbWVudFJlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBEPXt9O0QucmVuZGVyPWZ1bmN0aW9uKHIsZSl7ci53cml0ZSgiPCIpO3Iud3JpdGUoZS5nZXRUYWcoKSk7ci53cml0ZUNvbnRyb2xEYXRhKGUpO3EuZWFjaChlLmdldEF0dHJpYnV0ZXMoKSxmdW5jdGlvbihpLGEpe3ZhciBuPWEuZ2V0TmFtZSgpLnRvTG93ZXJDYXNlKCk7aWYobj09PSJjbGFzcyIpe3ZhciBjPWEuZ2V0VmFsdWUoKS5zcGxpdCgiICIpO3EuZWFjaChjLGZ1bmN0aW9uKGksQyl7dmFyIEM9Qy50cmltKCk7aWYoQyl7ci5hZGRDbGFzcyhDKX19KX1lbHNlIGlmKG49PT0ic3R5bGUiKXt2YXIgcz1hLmdldFZhbHVlKCkuc3BsaXQoIjsiKTtxLmVhY2gocyxmdW5jdGlvbihpLFMpe3ZhciBpPVMuaW5kZXhPZigiOiIpO2lmKGkhPS0xKXt2YXIgaz1TLnN1YnN0cmluZygwLGkpLnRyaW0oKTt2YXIgdj1TLnN1YnN0cmluZyhpKzEpLnRyaW0oKTtyLmFkZFN0eWxlKGssdil9fSl9ZWxzZXtyLndyaXRlQXR0cmlidXRlRXNjYXBlZChhLmdldE5hbWUoKSxhLmdldFZhbHVlKCkpfX0pO3Iud3JpdGVDbGFzc2VzKCk7ci53cml0ZVN0eWxlcygpO3ZhciBFPWUuZ2V0RWxlbWVudHMoKSxoPSEhZS5nZXRUZXh0KCl8fEUubGVuZ3RoPjA7aWYoIWgpe3Iud3JpdGUoIi8+Iil9ZWxzZXtyLndyaXRlKCI+Iik7aWYoZS5nZXRUZXh0KCkpe3Iud3JpdGVFc2NhcGVkKGUuZ2V0VGV4dCgpKX1xLmVhY2goRSxmdW5jdGlvbihpLGMpe3IucmVuZGVyQ29udHJvbChjKX0pO3Iud3JpdGUoIjwvIik7ci53cml0ZShlLmdldFRhZygpKTtyLndyaXRlKCI+Iil9fTtyZXR1cm4gRH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sUmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbFJlbmRlcmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvdG1wbC9UZW1wbGF0ZUNvbnRyb2xSZW5kZXJlciIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgVD17fTtULnJlbmRlcj1mdW5jdGlvbihyLGMpe3ZhciBpPWMuaXNJbmxpbmUoKTtpZighaSl7ci53cml0ZSgiPGRpdiIpO3Iud3JpdGVDb250cm9sRGF0YShjKTtyLndyaXRlU3R5bGVzKCk7ci53cml0ZUNsYXNzZXMoKTtyLndyaXRlKCI+Iil9dmFyIFI9dGhpcy5yZW5kZXJUZW1wbGF0ZXx8Yy5nZXRUZW1wbGF0ZVJlbmRlcmVyKCk7aWYoUil7Ui5hcHBseSh0aGlzLGFyZ3VtZW50cyl9aWYoIWkpe3Iud3JpdGUoIjwvZGl2PiIpfX07cmV0dXJuIFR9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLkxpYnJhcnlJbmZvJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUudXRpbC5MaWJyYXJ5SW5mbycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3V0aWwvTGlicmFyeUluZm8iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9PYmplY3QnLCdqcXVlcnkuc2FwLnNjcmlwdCddLGZ1bmN0aW9uKHEsQil7InVzZSBzdHJpY3QiO3ZhciBMPUIuZXh0ZW5kKCJzYXAudWkuY29yZS51dGlsLkxpYnJhcnlJbmZvIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtCLmFwcGx5KHRoaXMpO3RoaXMuX29MaWJJbmZvcz17fX0sZGVzdHJveTpmdW5jdGlvbigpe0IucHJvdG90eXBlLmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuX29MaWJJbmZvcz17fX0sZ2V0SW50ZXJmYWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSk7TC5wcm90b3R5cGUuX2dldExpYnJhcnlJbmZvPWZ1bmN0aW9uKGwsYyl7bD1sLnJlcGxhY2UoL1wvL2csIi4iKTtpZih0aGlzLl9vTGliSW5mb3NbbF0pe3Euc2FwLmRlbGF5ZWRDYWxsKDAsd2luZG93LGMsW3RoaXMuX29MaWJJbmZvc1tsXV0pO3JldHVybn12YXIgdT1xLnNhcC5nZXRNb2R1bGVQYXRoKGwsJy8nKSx0PXRoaXM7cS5hamF4KHt1cmw6dSsiLmxpYnJhcnkiLGRhdGFUeXBlOiJ4bWwiLGVycm9yOmZ1bmN0aW9uKHgscyxlKXtxLnNhcC5sb2cuZXJyb3IoImZhaWxlZCB0byBsb2FkIGxpYnJhcnkgZGV0YWlscyBmcm9tICciK3UrIi5saWJyYXJ5JzogIitzKyIsICIrZSk7dC5fb0xpYkluZm9zW2xdPXtuYW1lOmwsZGF0YTpudWxsLHVybDp1fTtjKHQuX29MaWJJbmZvc1tsXSl9LHN1Y2Nlc3M6ZnVuY3Rpb24oZCxzLHgpe3QuX29MaWJJbmZvc1tsXT17bmFtZTpsLGRhdGE6ZCx1cmw6dX07Yyh0Ll9vTGliSW5mb3NbbF0pfX0pfTtMLnByb3RvdHlwZS5fZ2V0VGhpcmRQYXJ0eUluZm89ZnVuY3Rpb24obCxjKXt0aGlzLl9nZXRMaWJyYXJ5SW5mbyhsLGZ1bmN0aW9uKGQpe3ZhciByPXtsaWJzOltdLGxpYnJhcnk6ZC5uYW1lLGxpYnJhcnlVcmw6ZC51cmx9O2lmKGQuZGF0YSl7dmFyICQ9cShkLmRhdGEpLmZpbmQoImFwcERhdGEiKS5maW5kKCJ0aGlyZHBhcnR5IikuY2hpbGRyZW4oKTskLmVhY2goZnVuY3Rpb24oaSxvKXtpZihvLm5vZGVOYW1lPT09ImxpYiIpe3ZhciBhPXEobyk7dmFyIGI9YS5jaGlsZHJlbigibGljZW5zZSIpO3IubGlicy5wdXNoKHtkaXNwbGF5TmFtZTphLmF0dHIoImRpc3BsYXlOYW1lIiksaG9tZXBhZ2U6YS5hdHRyKCJob21lcGFnZSIpLGxpY2Vuc2U6e3VybDpiLmF0dHIoInVybCIpLHR5cGU6Yi5hdHRyKCJ0eXBlIiksZmlsZTpkLnVybCtiLmF0dHIoImZpbGUiKX19KX19KX1jKHIpfSl9O0wucHJvdG90eXBlLl9nZXREb2N1SW5kZXg9ZnVuY3Rpb24obCxjKXt0aGlzLl9nZXRMaWJyYXJ5SW5mbyhsLGZ1bmN0aW9uKGQpe3ZhciBhPWQubmFtZSxiPWQudXJsLHI9eyJkb2N1Ijp7fSxsaWJyYXJ5OmEsbGlicmFyeVVybDpifTtpZighZC5kYXRhKXtjKHIpO3JldHVybn12YXIgRD1xKGQuZGF0YSkuZmluZCgiYXBwRGF0YSIpLmZpbmQoImRvY3VtZW50YXRpb24iKTt2YXIgdT1ELmF0dHIoImluZGV4VXJsIik7aWYoIXUpe2Mocik7cmV0dXJufWlmKEQuYXR0cigicmVzb2x2ZSIpPT0ibGliIil7dT1kLnVybCt1fXEuYWpheCh7dXJsOnUsZGF0YVR5cGU6Impzb24iLGVycm9yOmZ1bmN0aW9uKHgscyxlKXtxLnNhcC5sb2cuZXJyb3IoImZhaWxlZCB0byBsb2FkIGxpYnJhcnkgZG9jdSBmcm9tICciK3UrIic6ICIrcysiLCAiK2UpO2Mocil9LHN1Y2Nlc3M6ZnVuY3Rpb24oZCxzLHgpe2QubGlicmFyeT1hO2QubGlicmFyeVVybD1iO2MoZCl9fSl9KX07cmV0dXJuIEx9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS53cy5SZWFkeVN0YXRlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUud3MuUmVhZHlTdGF0ZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3dzL1JlYWR5U3RhdGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIFI9e0NPTk5FQ1RJTkc6MCxPUEVOOjEsQ0xPU0lORzoyLENMT1NFRDozfTtyZXR1cm4gUn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5CaW5kaW5nTW9kZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5CaW5kaW5nTW9kZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9CaW5kaW5nTW9kZSIsWydqcXVlcnkuc2FwLmdsb2JhbCddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0Ijt2YXIgQj17RGVmYXVsdDoiRGVmYXVsdCIsT25lVGltZToiT25lVGltZSIsT25lV2F5OiJPbmVXYXkiLFR3b1dheToiVHdvV2F5In07cmV0dXJuIEJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQ2hhbmdlUmVhc29uJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9DaGFuZ2VSZWFzb24iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIEM9e1NvcnQ6InNvcnQiLEZpbHRlcjoiZmlsdGVyIixDaGFuZ2U6ImNoYW5nZSIsQ29udGV4dDoiY29udGV4dCIsUmVmcmVzaDoicmVmcmVzaCJ9O3JldHVybiBDfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLkZpbHRlck9wZXJhdG9yJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLkZpbHRlck9wZXJhdG9yJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0ZpbHRlck9wZXJhdG9yIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBGPXtFUToiRVEiLE5FOiJORSIsTFQ6IkxUIixMRToiTEUiLEdUOiJHVCIsR0U6IkdFIixCVDoiQlQiLENvbnRhaW5zOiJDb250YWlucyIsU3RhcnRzV2l0aDoiU3RhcnRzV2l0aCIsRW5kc1dpdGg6IkVuZHNXaXRoIn07cmV0dXJuIEZ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuRmlsdGVyVHlwZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5GaWx0ZXJUeXBlJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0ZpbHRlclR5cGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIEY9e0FwcGxpY2F0aW9uOiJBcHBsaWNhdGlvbiIsQ29udHJvbDoiQ29udHJvbCJ9O3JldHVybiBGfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLkZvcm1hdEV4Y2VwdGlvbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5Gb3JtYXRFeGNlcHRpb24nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvRm9ybWF0RXhjZXB0aW9uIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvRXhjZXB0aW9uJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIEY9ZnVuY3Rpb24obSl7dGhpcy5uYW1lPSJGb3JtYXRFeGNlcHRpb24iO3RoaXMubWVzc2FnZT1tfTtGLnByb3RvdHlwZT1xLnNhcC5uZXdPYmplY3QoRS5wcm90b3R5cGUpO3JldHVybiBGfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLlBhcnNlRXhjZXB0aW9uJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLlBhcnNlRXhjZXB0aW9uJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL1BhcnNlRXhjZXB0aW9uIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvRXhjZXB0aW9uJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIFA9ZnVuY3Rpb24obSl7dGhpcy5uYW1lPSJQYXJzZUV4Y2VwdGlvbiI7dGhpcy5tZXNzYWdlPW19O1AucHJvdG90eXBlPXEuc2FwLm5ld09iamVjdChFLnByb3RvdHlwZSk7cmV0dXJuIFB9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuU29ydGVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLlNvcnRlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9Tb3J0ZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIFM9c2FwLnVpLmJhc2UuT2JqZWN0LmV4dGVuZCgic2FwLnVpLm1vZGVsLlNvcnRlciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHAsZCxnKXtpZih0eXBlb2YgcD09PSJvYmplY3QiKXt2YXIgcz1wO3A9cy5wYXRoO2Q9cy5kZXNjZW5kaW5nO2c9cy5ncm91cH10aGlzLnNQYXRoPXA7dmFyIGk9dGhpcy5zUGF0aC5pbmRleE9mKCI+Iik7aWYoaT4wKXt0aGlzLnNQYXRoPXRoaXMuc1BhdGguc3Vic3RyKGkrMSl9dGhpcy5iRGVzY2VuZGluZz1kO3RoaXMudkdyb3VwPWc7aWYodHlwZW9mIGc9PSJib29sZWFuIiYmZyl7dGhpcy5mbkdyb3VwPWZ1bmN0aW9uKGMpe3JldHVybiBjLmdldFByb3BlcnR5KHRoaXMuc1BhdGgpfX1pZih0eXBlb2YgZz09ImZ1bmN0aW9uIil7dGhpcy5mbkdyb3VwPWd9fX0pO3JldHVybiBTfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLlR5cGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuVHlwZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9UeXBlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvT2JqZWN0J10sZnVuY3Rpb24ocSxCKXsidXNlIHN0cmljdCI7dmFyIFQ9Qi5leHRlbmQoInNhcC51aS5tb2RlbC5UeXBlIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtCLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnNOYW1lPSJUeXBlIn0sbWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwdWJsaWNNZXRob2RzOlsiZ2V0TmFtZSJdfX0pO1QucHJvdG90eXBlLmdldE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zTmFtZX07cmV0dXJuIFR9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuVmFsaWRhdGVFeGNlcHRpb24nKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuVmFsaWRhdGVFeGNlcHRpb24nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvVmFsaWRhdGVFeGNlcHRpb24iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FeGNlcHRpb24nXSxmdW5jdGlvbihxLEUpeyJ1c2Ugc3RyaWN0Ijt2YXIgVj1mdW5jdGlvbihtLHYpe3RoaXMubmFtZT0iVmFsaWRhdGVFeGNlcHRpb24iO3RoaXMubWVzc2FnZT1tO3RoaXMudmlvbGF0ZWRDb25zdHJhaW50cz12fTtWLnByb3RvdHlwZT1xLnNhcC5uZXdPYmplY3QoRS5wcm90b3R5cGUpO3JldHVybiBWfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLm9kYXRhLkNvdW50TW9kZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5vZGF0YS5Db3VudE1vZGUnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvb2RhdGEvQ291bnRNb2RlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBDPXtSZXF1ZXN0OiJSZXF1ZXN0IixJbmxpbmU6IklubGluZSIsQm90aDoiQm90aCIsTm9uZToiTm9uZSJ9O3JldHVybiBDfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLm9kYXRhLkZpbHRlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5vZGF0YS5GaWx0ZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvb2RhdGEvRmlsdGVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL21vZGVsL0ZpbHRlck9wZXJhdG9yJ10sZnVuY3Rpb24ocSxGKXsidXNlIHN0cmljdCI7dmFyIGE9c2FwLnVpLmJhc2UuT2JqZWN0LmV4dGVuZCgic2FwLnVpLm1vZGVsLm9kYXRhLkZpbHRlciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHAsdixBKXtpZih0eXBlb2YgcD09PSJvYmplY3QiKXt2YXIgZj1wO3A9Zi5wYXRoO3Y9Zi52YWx1ZXM7QT1mLmFuZH10aGlzLnNQYXRoPXA7dGhpcy5hVmFsdWVzPXY7dGhpcy5iQU5EPUE9PXVuZGVmaW5lZD90cnVlOkF9fSk7cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwub2RhdGEuT0RhdGFBbm5vdGF0aW9ucycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YUFubm90YXRpb25zJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL29kYXRhL09EYXRhQW5ub3RhdGlvbnMiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIE89c2FwLnVpLmJhc2UuT2JqZWN0LmV4dGVuZCgic2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhQW5ub3RhdGlvbnMiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLGEsbCl7InVzZSBzdHJpY3QiO3RoaXMub01vZGVsPW07dGhpcy5vTWV0YWRhdGE9bnVsbDt0aGlzLm9Bbm5vdGF0aW9ucz1udWxsO3RoaXMuYkluaXRpYWxpemVkPWZhbHNlO3RoaXMuYkxvYWRlZD1mYWxzZTt0aGlzLmJMb2FkQXN5bmM9bDt0aGlzLnhQYXRoPW51bGw7dGhpcy5zQW5ub3RhdGlvblVSST1hO3RoaXMub1hNTERvYz1udWxsO3RoaXMuZXJyb3I9bnVsbDt0aGlzLm9BbGlhcz17fTt0aGlzLmJWYWxpZFhNTD10cnVlO3RoaXMub1JlcXVlc3RIYW5kbGU9bnVsbDt0aGlzLnhtbENvbXBhdFZlcnNpb249ZmFsc2U7aWYoYSl7dGhpcy5sb2FkWE1MKCk7aWYoIWwpe2lmKHRoaXMuZXJyb3Ipe3Euc2FwLmxvZy5lcnJvcigiT0RhdGEgYW5ub3RhdGlvbnMgY291bGQgbm90IGJlIGxvYWRlZDogIit0aGlzLmVycm9yLm1lc3NhZ2UpfX19fX0pO08ucHJvdG90eXBlLmdldEFubm90YXRpb25zRGF0YT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9Bbm5vdGF0aW9uc307Ty5wcm90b3R5cGUuX3BhcnNlQWxpYXNlcz1mdW5jdGlvbihhKXt2YXIgcj10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHRoaXMub1hNTERvYywiLy9lZG14OlJlZmVyZW5jZSIsdGhpcy5vWE1MRG9jKTtmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krPTEpe3ZhciBiPXRoaXMueFBhdGgubmV4dE5vZGUocixpKTt2YXIgYz10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHRoaXMub1hNTERvYywiLi9lZG14OkluY2x1ZGUiLGIpO2lmKGMmJmMubGVuZ3RoPjApe3ZhciBkPXRoaXMueFBhdGgubmV4dE5vZGUoYywwKTtpZihkLmdldEF0dHJpYnV0ZSgiQWxpYXMiKSl7dGhpcy5vQWxpYXNbZC5nZXRBdHRyaWJ1dGUoIkFsaWFzIildPWQuZ2V0QXR0cmlidXRlKCJOYW1lc3BhY2UiKX1lbHNle3RoaXMub0FsaWFzW2QuZ2V0QXR0cmlidXRlKCJOYW1lc3BhY2UiKV09ZC5nZXRBdHRyaWJ1dGUoIk5hbWVzcGFjZSIpfX12YXIgZT10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHRoaXMub1hNTERvYywiLi9lZG14OkluY2x1ZGVBbm5vdGF0aW9ucyIsYik7aWYoZS5sZW5ndGg+MCl7Zm9yKHZhciBqPTA7ajxlLmxlbmd0aDtqKz0xKXt2YXIgZj10aGlzLnhQYXRoLm5leHROb2RlKGUsaik7aWYoZi5nZXRBdHRyaWJ1dGUoIlRhcmdldE5hbWVzcGFjZSIpKXt2YXIgQT1mLmdldEF0dHJpYnV0ZSgiVGFyZ2V0TmFtZXNwYWNlIik7aWYoIWFbQV0pe2FbQV09e319YVtBXVtmLmdldEF0dHJpYnV0ZSgiVGVybU5hbWVzcGFjZSIpXT1iLmdldEF0dHJpYnV0ZSgiVXJpIil9ZWxzZXthW2YuZ2V0QXR0cmlidXRlKCJUZXJtTmFtZXNwYWNlIildPWIuZ2V0QXR0cmlidXRlKCJVcmkiKX19fX19O08ucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKCl7dmFyIG09e30scyxTPXt9LGEsQT17fSx0LFQsYixjLE0sZCxlLGYsZyxoLHAsaixrLGwsbixvLHIsdix1LHcseCx5LHo7dGhpcy54UGF0aD10aGlzLmdldFhQYXRoKCk7dGhpcy5vTWV0YWRhdGE9dGhpcy5vTW9kZWwuZ2V0U2VydmljZU1ldGFkYXRhKCk7aWYodGhpcy5iSW5pdGlhbGl6ZWQpe3JldHVybiB0aGlzLm9Bbm5vdGF0aW9uc310aGlzLm9YTUxEb2M9dGhpcy54UGF0aC5zZXROYW1lU3BhY2UodGhpcy5vWE1MRG9jKTtzPXRoaXMueFBhdGguc2VsZWN0Tm9kZXModGhpcy5vWE1MRG9jLCIvL2Q6U2NoZW1hIix0aGlzLm9YTUxEb2MpO2Zvcih2YXIgaT0wO2k8cy5sZW5ndGg7aSs9MSl7YT10aGlzLnhQYXRoLm5leHROb2RlKHMsaSk7Uy5BbGlhcz1hLmdldEF0dHJpYnV0ZSgiQWxpYXMiKTtTLk5hbWVzcGFjZT1hLmdldEF0dHJpYnV0ZSgiTmFtZXNwYWNlIil9dGhpcy5fcGFyc2VBbGlhc2VzKEEpO2lmKEEpe20uYW5ub3RhdGlvblJlZmVyZW5jZXM9QX1tLmFsaWFzRGVmaW5pdGlvbnM9dGhpcy5vQWxpYXM7dD10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHRoaXMub1hNTERvYywiLy9kOlRlcm0iLHRoaXMub1hNTERvYyk7aWYodC5sZW5ndGg+MCl7VD17fTtmb3IodmFyIEI9MDtCPHQubGVuZ3RoO0IrPTEpe2I9dGhpcy54UGF0aC5uZXh0Tm9kZSh0LEIpO2M9dGhpcy5yZXBsYWNlV2l0aEFsaWFzKGIuZ2V0QXR0cmlidXRlKCJUeXBlIiksdGhpcy5vQWxpYXMpO1RbIkAiK1MuQWxpYXMrIi4iK2IuZ2V0QXR0cmlidXRlKCJOYW1lIildPWN9bS50ZXJtRGVmaW5pdGlvbnM9VH1NPXRoaXMuZ2V0QWxsUHJvcGVydGllc01ldGFkYXRhKHRoaXMub01ldGFkYXRhKTtpZihNLmV4dGVuc2lvbnMpe20ucHJvcGVydHlFeHRlbnNpb25zPU0uZXh0ZW5zaW9uc31kPXRoaXMueFBhdGguc2VsZWN0Tm9kZXModGhpcy5vWE1MRG9jLCIvL2Q6QW5ub3RhdGlvbnMgIix0aGlzLm9YTUxEb2MpO2Zvcih2YXIgQj0wO0I8ZC5sZW5ndGg7Qis9MSl7ZT10aGlzLnhQYXRoLm5leHROb2RlKGQsQik7aWYoZS5oYXNDaGlsZE5vZGVzKCk9PT1mYWxzZSl7Y29udGludWV9Zj1lLmdldEF0dHJpYnV0ZSgiVGFyZ2V0Iik7Zz1mLnNwbGl0KCIuIilbMF07aWYoZyYmdGhpcy5vQWxpYXNbZ10pe2Y9Zi5yZXBsYWNlKG5ldyBSZWdFeHAoZywiIiksdGhpcy5vQWxpYXNbZ10pfWg9ZjtwPW51bGw7aWYoZi5pbmRleE9mKCIvIik+MCl7aD1mLnNwbGl0KCIvIilbMF07cD1mLnJlcGxhY2UoaCsiLyIsIiIpfWlmKCFtW2hdKXttW2hdPXt9fWlmKHApe2lmKCFtLnByb3BlcnR5QW5ub3RhdGlvbnMpe20ucHJvcGVydHlBbm5vdGF0aW9ucz17fX1pZighbS5wcm9wZXJ0eUFubm90YXRpb25zW2hdKXttLnByb3BlcnR5QW5ub3RhdGlvbnNbaF09e319bS5wcm9wZXJ0eUFubm90YXRpb25zW2hdW3BdPXt9O2o9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh0aGlzLm9YTUxEb2MsIi4vZDpBbm5vdGF0aW9uIixlKTtmb3IodmFyIEM9MDtDPGoubGVuZ3RoO0MrPTEpe2s9dGhpcy54UGF0aC5uZXh0Tm9kZShqLEMpO2lmKGsuaGFzQ2hpbGROb2RlcygpPT09ZmFsc2Upe2w9dGhpcy5yZXBsYWNlV2l0aEFsaWFzKGsuZ2V0QXR0cmlidXRlKCJUZXJtIikpO20ucHJvcGVydHlBbm5vdGF0aW9uc1toXVtwXVtsXT10aGlzLmdldFByb3BlcnR5VmFsdWVBdHRyaWJ1dGVzKGspfX19ZWxzZXtuPWgucmVwbGFjZSh0aGlzLm9BbGlhc1tnXSxnKTtqPXRoaXMueFBhdGguc2VsZWN0Tm9kZXModGhpcy5vWE1MRG9jLCIuL2Q6QW5ub3RhdGlvbiIsZSk7Zm9yKHZhciBEPTA7RDxqLmxlbmd0aDtEKz0xKXtrPXRoaXMueFBhdGgubmV4dE5vZGUoaixEKTtvPWsuZ2V0QXR0cmlidXRlKCJRdWFsaWZpZXIiKTtyPXRoaXMucmVwbGFjZVdpdGhBbGlhcyhrLmdldEF0dHJpYnV0ZSgiVGVybSIpKTtpZihvKXtyKz0iIyIrb312PXRoaXMuZ2V0UHJvcGVydHlWYWx1ZSh0aGlzLm9YTUxEb2MsayxuKTt2PXRoaXMuc2V0RWRtVHlwZXModixNLnR5cGVzLGgsUyk7bVtoXVtyXT12fXU9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh0aGlzLm9YTUxEb2MsIi8vZDpBbm5vdGF0aW9uc1tjb250YWlucyhAVGFyZ2V0LCAnIituKyInKV0vL2Q6UHJvcGVydHlWYWx1ZVtjb250YWlucyhAUGF0aCwgJy8nKV0vL0BQYXRoIix0aGlzLm9YTUxEb2MpO2ZvcihpPTA7aTx1Lmxlbmd0aDtpKz0xKXt3PXRoaXMueFBhdGgubmV4dE5vZGUodSxpKTt4PXcudmFsdWU7aWYobS5wcm9wZXJ0eUFubm90YXRpb25zKXtpZihtLnByb3BlcnR5QW5ub3RhdGlvbnNbaF0pe2lmKG0ucHJvcGVydHlBbm5vdGF0aW9uc1toXVt4XSl7Y29udGludWV9fX15PXguc3BsaXQoJy8nKTtpZih0aGlzLmlzTmF2UHJvcGVydHkoaCx5WzBdLHRoaXMub01ldGFkYXRhKSl7aWYoIW0uZXhwYW5kKXttLmV4cGFuZD17fX1pZighbS5leHBhbmRbaF0pe20uZXhwYW5kW2hdPXt9fW0uZXhwYW5kW2hdW3lbMF1dPXlbMF19fXo9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh0aGlzLm9YTUxEb2MsIi8vZDpBbm5vdGF0aW9uc1tjb250YWlucyhAVGFyZ2V0LCAnIituKyInKV0vL2Q6UGF0aFtjb250YWlucyguLCAnLycpXSIsdGhpcy5vWE1MRG9jKTtmb3IoaT0wO2k8ei5sZW5ndGg7aSs9MSl7dz10aGlzLnhQYXRoLm5leHROb2RlKHosaSk7eD10aGlzLnhQYXRoLmdldE5vZGVUZXh0KHcpO2lmKG0ucHJvcGVydHlBbm5vdGF0aW9uc1toXSl7aWYobS5wcm9wZXJ0eUFubm90YXRpb25zW2hdW3hdKXtjb250aW51ZX19aWYoIW0uZXhwYW5kKXttLmV4cGFuZD17fX1pZighbS5leHBhbmRbaF0pe20uZXhwYW5kW2hdPXt9fXk9eC5zcGxpdCgnLycpO2lmKHRoaXMuaXNOYXZQcm9wZXJ0eShoLHlbMF0sdGhpcy5vTWV0YWRhdGEpKXtpZighbS5leHBhbmQpe20uZXhwYW5kPXt9fWlmKCFtLmV4cGFuZFtoXSl7bS5leHBhbmRbaF09e319bS5leHBhbmRbaF1beVswXV09eVswXX19fX10aGlzLm9Bbm5vdGF0aW9ucz1tO3RoaXMuYkluaXRpYWxpemVkPXRydWU7dGhpcy5vTW9kZWwuZmlyZUFubm90YXRpb25zTG9hZGVkKHthbm5vdGF0aW9uczp0aGlzfSk7cmV0dXJuIHRoaXMub0Fubm90YXRpb25zfTtPLnByb3RvdHlwZS5nZXRYUGF0aD1mdW5jdGlvbigpe3ZhciB4PXt9O2lmKHRoaXMueG1sQ29tcGF0VmVyc2lvbil7eD17c2V0TmFtZVNwYWNlOmZ1bmN0aW9uKG8pe28uc2V0UHJvcGVydHkoIlNlbGVjdGlvbk5hbWVzcGFjZXMiLCd4bWxuczplZG14PSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy9vZGF0YS9ucy9lZG14IiB4bWxuczpkPSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy9vZGF0YS9ucy9lZG0iJyk7by5zZXRQcm9wZXJ0eSgiU2VsZWN0aW9uTGFuZ3VhZ2UiLCJYUGF0aCIpO3JldHVybiBvfSxzZWxlY3ROb2RlczpmdW5jdGlvbihvLHgsaSl7cmV0dXJuIGkuc2VsZWN0Tm9kZXMoeCl9LG5leHROb2RlOmZ1bmN0aW9uKG4pe3JldHVybiBuLm5leHROb2RlKCl9LGdldE5vZGVUZXh0OmZ1bmN0aW9uKG4pe3JldHVybiBuLnRleHR9fX1lbHNle3g9e3NldE5hbWVTcGFjZTpmdW5jdGlvbihvKXtyZXR1cm4gb30sbnNSZXNvbHZlcjpmdW5jdGlvbihwKXt2YXIgbj17ImVkbXgiOiJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy9vZGF0YS9ucy9lZG14IiwiZCI6Imh0dHA6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL29kYXRhL25zL2VkbSJ9O3JldHVybiBuW3BdfHxudWxsfSxzZWxlY3ROb2RlczpmdW5jdGlvbihvLHAsaSl7dmFyIGE9by5ldmFsdWF0ZShwLGksdGhpcy5uc1Jlc29sdmVyLDcsbnVsbCk7YS5sZW5ndGg9YS5zbmFwc2hvdExlbmd0aDtyZXR1cm4gYX0sbmV4dE5vZGU6ZnVuY3Rpb24obixpKXtyZXR1cm4gbi5zbmFwc2hvdEl0ZW0oaSl9LGdldE5vZGVUZXh0OmZ1bmN0aW9uKG4pe3JldHVybiBuLnRleHRDb250ZW50fX19cmV0dXJuIHh9O08ucHJvdG90eXBlLnNldFhNTD1mdW5jdGlvbih4LFgpe3ZhciB0PXRoaXM7aWYoc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyKXt0aGlzLm9YTUxEb2M9bmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKTt0aGlzLm9YTUxEb2MubG9hZFhNTChYKTt0aGlzLnhtbENvbXBhdFZlcnNpb249dHJ1ZX1lbHNlIGlmKHgpe3RoaXMub1hNTERvYz14fWVsc2V7dGhpcy5vWE1MRG9jPW5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoWCwnYXBwbGljYXRpb24veG1sJyl9aWYodGhpcy5vWE1MRG9jLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJwYXJzZXJlcnJvciIpLmxlbmd0aD4wKXtyZXR1cm4gZmFsc2V9ZWxzZXtpZihxLmlzRW1wdHlPYmplY3QodGhpcy5vTW9kZWwuZ2V0U2VydmljZU1ldGFkYXRhKCkpKXt0aGlzLm9Nb2RlbC5hdHRhY2hJbnRlcm5hbE1ldGFkYXRhTG9hZGVkKGZ1bmN0aW9uKCl7dC5wYXJzZSgpfSl9ZWxzZXt0aGlzLnBhcnNlKCl9cmV0dXJuIHRydWV9fTtPLnByb3RvdHlwZS5sb2FkWE1MPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt2YXIgYT17dXJsOnRoaXMuc0Fubm90YXRpb25VUkksYXN5bmM6dGhpcy5iTG9hZEFzeW5jfTt2YXIgaD1mdW5jdGlvbiBfaGFuZGxlRmFpbChqLHMpe2lmKHQub1JlcXVlc3RIYW5kbGUmJnQub1JlcXVlc3RIYW5kbGUuYlN1cHByZXNzRXJyb3JIYW5kbGVyQ2FsbCl7cmV0dXJufXQub1JlcXVlc3RIYW5kbGU9bnVsbDt0LmVycm9yPXttZXNzYWdlOnMscmVzcG9uc2U6ai5yZXNwb25zZX07dC5vTW9kZWwuX2hhbmRsZUVycm9yKHQuZXJyb3IpfTt2YXIgSD1mdW5jdGlvbihkLFQsail7dC5vUmVxdWVzdEhhbmRsZT1udWxsO2lmKCF0LnNldFhNTChqLnJlc3BvbnNlWE1MLGoucmVzcG9uc2VUZXh0KSl7aChqLCJNYWxmb3JtZWQgWE1MIGRvY3VtZW50Iil9fTt0aGlzLm9SZXF1ZXN0SGFuZGxlPXEuYWpheChhKS5kb25lKEgpLmZhaWwoaCl9O08ucHJvdG90eXBlLmdldEFsbFByb3BlcnRpZXNNZXRhZGF0YT1mdW5jdGlvbihtKXt2YXIgTT17fSxQPXt9LG89e30sYj1mYWxzZSxuLGUsYyxFPXt9LGE9e30sZD17fSxmPWZhbHNlLGcsQyxzLHQsaCxyO2Zvcih2YXIgaT1tLmRhdGFTZXJ2aWNlcy5zY2hlbWEubGVuZ3RoLTE7aT49MDtpLT0xKXtNPW0uZGF0YVNlcnZpY2VzLnNjaGVtYVtpXTtpZihNLmVudGl0eVR5cGUpe249TS5uYW1lc3BhY2U7ZT1NLmVudGl0eVR5cGU7Yz1NLmNvbXBsZXhUeXBlO2Zvcih2YXIgaiBpbiBlKXtFPWVbal07ZD17fTtpZihFLmhhc1N0cmVhbSYmRS5oYXNTdHJlYW09PT0idHJ1ZSIpe2NvbnRpbnVlfWZvcih2YXIgayBpbiBFLnByb3BlcnR5KXtnPUUucHJvcGVydHlba107aWYoZy50eXBlLnN1YnN0cmluZygwLG4ubGVuZ3RoKT09PW4pe2Zvcih2YXIgbCBpbiBjKXtpZihjW2xdLm5hbWU9PT1nLnR5cGUuc3Vic3RyaW5nKG4ubGVuZ3RoKzEpKXtmb3IoayBpbiBjW2xdLnByb3BlcnR5KXtDPWNbbF0ucHJvcGVydHlba107YVtjW2xdLm5hbWUrIi8iK0MubmFtZV09Qy50eXBlfX19fWVsc2V7cz1nLm5hbWU7dD1nLnR5cGU7Zm9yKHZhciBwIGluIGcuZXh0ZW5zaW9ucyl7aD1nLmV4dGVuc2lvbnNbcF07aWYoKGgubmFtZT09PSJkaXNwbGF5LWZvcm1hdCIpJiYoaC52YWx1ZT09PSJEYXRlIikpe3Q9IkVkbS5EYXRlIn1lbHNle2Y9dHJ1ZTtpZighZFtzXSl7ZFtzXT17fX1pZihoLm5hbWVzcGFjZSYmIWRbc11baC5uYW1lc3BhY2VdKXtkW3NdW2gubmFtZXNwYWNlXT17fX1kW3NdW2gubmFtZXNwYWNlXVtoLm5hbWVdPWgudmFsdWV9fWFbc109dH19aWYoIVBbbisiLiIrRS5uYW1lXSl7UFtuKyIuIitFLm5hbWVdPXt9fVBbbisiLiIrRS5uYW1lXT1hO2lmKGYpe2lmKCFvW24rIi4iK0UubmFtZV0pe2I9dHJ1ZX1vW24rIi4iK0UubmFtZV09e307b1tuKyIuIitFLm5hbWVdPWR9fX19aWYoYil7cj17dHlwZXM6UCxleHRlbnNpb25zOm99fWVsc2V7cj17dHlwZXM6UH19cmV0dXJuIHJ9O08ucHJvdG90eXBlLnNldEVkbVR5cGVzPWZ1bmN0aW9uKHAsUCx0LHMpe3ZhciBvLGU9Jyc7Zm9yKHZhciBhIGluIHApe2lmKHBbYV0pe289cFthXTtpZihvLlZhbHVlJiZvLlZhbHVlLlBhdGgpe2U9dGhpcy5nZXRFZG1UeXBlKG8uVmFsdWUuUGF0aCxQLHQscyk7aWYoZSl7cFthXS5FZG1UeXBlPWV9Y29udGludWV9aWYoby5QYXRoKXtlPXRoaXMuZ2V0RWRtVHlwZShvLlBhdGgsUCx0LHMpO2lmKGUpe3BbYV0uRWRtVHlwZT1lfWNvbnRpbnVlfWlmKG8uRmFjZXRzKXtwW2FdLkZhY2V0cz10aGlzLnNldEVkbVR5cGVzKG8uRmFjZXRzLFAsdCxzKTtjb250aW51ZX1pZihvLkRhdGEpe3BbYV0uRGF0YT10aGlzLnNldEVkbVR5cGVzKG8uRGF0YSxQLHQscyk7Y29udGludWV9aWYoYT09PSJEYXRhIil7cC5EYXRhPXRoaXMuc2V0RWRtVHlwZXMobyxQLHQscyk7Y29udGludWV9aWYoby5WYWx1ZSYmby5WYWx1ZS5BcHBseSl7cFthXS5WYWx1ZS5BcHBseS5QYXJhbWV0ZXJzPXRoaXMuc2V0RWRtVHlwZXMoby5WYWx1ZS5BcHBseS5QYXJhbWV0ZXJzLFAsdCxzKTtjb250aW51ZX1pZihvLlZhbHVlJiZvLlR5cGUmJihvLlR5cGU9PT0iUGF0aCIpKXtlPXRoaXMuZ2V0RWRtVHlwZShvLlZhbHVlLFAsdCxzKTtpZihlKXtwW2FdLkVkbVR5cGU9ZX19fX1yZXR1cm4gcH07Ty5wcm90b3R5cGUuZ2V0RWRtVHlwZT1mdW5jdGlvbihwLFAsdCxzKXtpZigocC5jaGFyQXQoMCk9PT0iQCIpJiYocC5pbmRleE9mKHMuQWxpYXMpPT09MSkpe3A9cC5zbGljZShzLkFsaWFzLmxlbmd0aCsyKX1pZihwLmluZGV4T2YoIi8iKT49MCl7aWYoUFtwLnNsaWNlKDAscC5pbmRleE9mKCIvIikpXSl7dD1wLnNsaWNlKDAscC5pbmRleE9mKCIvIikpO3A9cC5zbGljZShwLmluZGV4T2YoIi8iKSsxKX19Zm9yKHZhciBhIGluIFBbdF0pe2lmKHA9PT1hKXtyZXR1cm4gUFt0XVthXX19fTtPLnByb3RvdHlwZS5nZXRQcm9wZXJ0eVZhbHVlQXR0cmlidXRlcz1mdW5jdGlvbihkKXt2YXIgYT0iIixiPSIiLGkscD17fTtmb3IoaT0wO2k8ZC5hdHRyaWJ1dGVzLmxlbmd0aDtpKz0xKXtpZigoZC5hdHRyaWJ1dGVzW2ldLm5hbWUhPT0iUHJvcGVydHkiKSYmKGQuYXR0cmlidXRlc1tpXS5uYW1lIT09IlRlcm0iKSl7YT1kLmF0dHJpYnV0ZXNbaV0ubmFtZTtiPWQuYXR0cmlidXRlc1tpXS52YWx1ZX19aWYoYS5sZW5ndGg+MCl7cFthXT10aGlzLnJlcGxhY2VXaXRoQWxpYXMoYil9cmV0dXJuIHB9O08ucHJvdG90eXBlLmdldFNpbXBsZU5vZGVWYWx1ZT1mdW5jdGlvbih4LGQpe3ZhciB2PXt9LHMsYSxwLGIsYyxlO2lmKGQuaGFzQ2hpbGROb2RlcygpKXtzPXRoaXMueFBhdGguc2VsZWN0Tm9kZXMoeCwiLi9kOlN0cmluZyIsZCk7aWYocy5sZW5ndGg+MCl7YT10aGlzLnhQYXRoLm5leHROb2RlKHMsMCk7dlsiU3RyaW5nIl09dGhpcy54UGF0aC5nZXROb2RlVGV4dChhKX1lbHNle3A9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh4LCIuL2Q6UGF0aCIsZCk7aWYocC5sZW5ndGg+MCl7Yj10aGlzLnhQYXRoLm5leHROb2RlKHAsMCk7dlsiUGF0aCJdPXRoaXMueFBhdGguZ2V0Tm9kZVRleHQoYil9ZWxzZXtjPXRoaXMueFBhdGguc2VsZWN0Tm9kZXMoeCwiLi9kOkFwcGx5IixkKTtpZihjLmxlbmd0aD4wKXtlPXRoaXMueFBhdGgubmV4dE5vZGUoYywwKTt2WyJBcHBseSJdPXRoaXMuZ2V0QXBwbHlGdW5jdGlvbnMoeCxlLHRoaXMueFBhdGgpfX19fXJldHVybiB2fTtPLnByb3RvdHlwZS5nZXRQcm9wZXJ0eVZhbHVlPWZ1bmN0aW9uKHgsZCx0KXt2YXIgcD17fSxyLGEsbixiLGMsdSxlLGYsUD17fSxnLGgsaSxqLGs7dmFyIGw9dGhpcy5nZXRYUGF0aCgpO2lmKGQuaGFzQ2hpbGROb2RlcygpKXtyPXRoaXMueFBhdGguc2VsZWN0Tm9kZXMoeCwiLi9kOlJlY29yZCB8IC4vZDpDb2xsZWN0aW9uL2Q6UmVjb3JkIHwgLi9kOkNvbGxlY3Rpb24vZDpJZi9kOlJlY29yZCIsZCk7aWYoci5sZW5ndGgpe2E9MDtmb3Iobj0wO248ci5sZW5ndGg7bis9MSl7Yj10aGlzLnhQYXRoLm5leHROb2RlKHIsbik7Yz10aGlzLmdldFByb3BlcnR5VmFsdWVzKHgsYix0KTtpZihiLmdldEF0dHJpYnV0ZSgiVHlwZSIpKXtjWyJSZWNvcmRUeXBlIl09dGhpcy5yZXBsYWNlV2l0aEFsaWFzKGIuZ2V0QXR0cmlidXRlKCJUeXBlIikpfWlmKGE9PT0wKXtpZihiLm5leHRFbGVtZW50U2libGluZ3x8KGIucGFyZW50Tm9kZS5ub2RlTmFtZT09PSJDb2xsZWN0aW9uIil8fChiLnBhcmVudE5vZGUubm9kZU5hbWU9PT0iSWYiKSl7cD1bXTtwLnB1c2goYyl9ZWxzZXtwPWN9fWVsc2V7cC5wdXNoKGMpfWErPTF9fWVsc2V7dT10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHgsIi4vZDpVcmxSZWYiLGQpO2lmKHUubGVuZ3RoPjApe2ZvcihuPTA7bjx1Lmxlbmd0aDtuKz0xKXtlPXRoaXMueFBhdGgubmV4dE5vZGUodSxuKTtwWyJVcmxSZWYiXT10aGlzLmdldFNpbXBsZU5vZGVWYWx1ZSh4LGUpfX1lbHNle3U9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh4LCIuL2Q6VXJsIixkKTtpZih1Lmxlbmd0aD4wKXtmb3Iobj0wO248dS5sZW5ndGg7bis9MSl7ZT10aGlzLnhQYXRoLm5leHROb2RlKHUsbik7cFsiVXJsIl09dGhpcy5nZXRTaW1wbGVOb2RlVmFsdWUoeCxlKX19ZWxzZXtrPXRoaXMueFBhdGguc2VsZWN0Tm9kZXMoeCwiLi9kOkNvbGxlY3Rpb24vZDpBbm5vdGF0aW9uUGF0aCB8IC4vZDpDb2xsZWN0aW9uL2Q6UHJvcGVydHlQYXRoIixkKTtpZihrLmxlbmd0aD4wKXtwPVtdO2ZvcihuPTA7bjxrLmxlbmd0aDtuKz0xKXtmPXRoaXMueFBhdGgubmV4dE5vZGUoayxuKTtQPXt9O1BbZi5ub2RlTmFtZV09bC5nZXROb2RlVGV4dChmKTtwLnB1c2goUCl9fWVsc2V7cD10aGlzLmdldFByb3BlcnR5VmFsdWVBdHRyaWJ1dGVzKGQpO2c9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh4LCIuL2Q6QW5ub3RhdGlvbiIsZCk7aD17fTtmb3IoaT0wO2k8Zy5sZW5ndGg7aSs9MSl7aD10aGlzLnhQYXRoLm5leHROb2RlKGcsaSk7aWYoaC5oYXNDaGlsZE5vZGVzKCk9PT1mYWxzZSl7aj10aGlzLnJlcGxhY2VXaXRoQWxpYXMoaC5nZXRBdHRyaWJ1dGUoIlRlcm0iKSk7cFtqXT10aGlzLmdldFByb3BlcnR5VmFsdWVBdHRyaWJ1dGVzKGgpfX19fX19fWVsc2V7cD10aGlzLmdldFByb3BlcnR5VmFsdWVBdHRyaWJ1dGVzKGQpfXJldHVybiBwfTtPLnByb3RvdHlwZS5nZXRQcm9wZXJ0eVZhbHVlcz1mdW5jdGlvbih4LGQsdCl7dmFyIHA9e30sYT17fSxiLG4sYyxlLGYsZyxoLGksaixrO2I9dGhpcy54UGF0aC5zZWxlY3ROb2Rlcyh4LCIuL2Q6QW5ub3RhdGlvbiIsZCk7Zm9yKG49MDtuPGIubGVuZ3RoO24rPTEpe2E9dGhpcy54UGF0aC5uZXh0Tm9kZShiLG4pO2lmKGEuaGFzQ2hpbGROb2RlcygpPT09ZmFsc2Upe2M9dGhpcy5yZXBsYWNlV2l0aEFsaWFzKGEuZ2V0QXR0cmlidXRlKCJUZXJtIikpO3BbY109dGhpcy5nZXRQcm9wZXJ0eVZhbHVlQXR0cmlidXRlcyhhKX19ZT10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHgsIi4vZDpQcm9wZXJ0eVZhbHVlIixkKTtpZihlLmxlbmd0aD4wKXtmb3IoZj0wO2Y8ZS5sZW5ndGg7Zis9MSl7Zz10aGlzLnhQYXRoLm5leHROb2RlKGUsZik7aD1nLmdldEF0dHJpYnV0ZSgiUHJvcGVydHkiKTtwW2hdPXRoaXMuZ2V0UHJvcGVydHlWYWx1ZSh4LGcsdCk7aT10aGlzLnhQYXRoLnNlbGVjdE5vZGVzKHgsIi4vZDpBcHBseSIsZyk7aj1udWxsO2ZvcihrPTA7azxpLmxlbmd0aDtrKz0xKXtqPXRoaXMueFBhdGgubmV4dE5vZGUoaSxrKTtpZihqKXtwW2hdPXt9O3BbaF1bJ0FwcGx5J109dGhpcy5nZXRBcHBseUZ1bmN0aW9ucyh4LGopfX19fWVsc2V7cD10aGlzLmdldFByb3BlcnR5VmFsdWUoeCxkLHQpfXJldHVybiBwfTtPLnByb3RvdHlwZS5nZXRBcHBseUZ1bmN0aW9ucz1mdW5jdGlvbih4LGEpe3ZhciBiPXt9LHAsYz1udWxsLGQ9W10saTtwPXRoaXMueFBhdGguc2VsZWN0Tm9kZXMoeCwiLi9kOioiLGEpO2ZvcihpPTA7aTxwLmxlbmd0aDtpKz0xKXtjPXRoaXMueFBhdGgubmV4dE5vZGUocCxpKTtzd2l0Y2goYy5ub2RlTmFtZSl7Y2FzZSJBcHBseSI6ZC5wdXNoKHsiVHlwZSI6IkFwcGx5IiwiVmFsdWUiOnRoaXMuZ2V0QXBwbHlGdW5jdGlvbnMoeCxjKX0pO2JyZWFrO2Nhc2UiTGFiZWxlZEVsZW1lbnQiOmQucHVzaCh7Ik5hbWUiOmMuZ2V0QXR0cmlidXRlKCJOYW1lIiksIlZhbHVlIjp0aGlzLmdldFNpbXBsZU5vZGVWYWx1ZSh4LGMpfSk7YnJlYWs7ZGVmYXVsdDpkLnB1c2goeyJUeXBlIjpjLm5vZGVOYW1lLCJWYWx1ZSI6dGhpcy54UGF0aC5nZXROb2RlVGV4dChjKX0pO2JyZWFrfX1iWydOYW1lJ109YS5nZXRBdHRyaWJ1dGUoJ0Z1bmN0aW9uJyk7YlsnUGFyYW1ldGVycyddPWQ7cmV0dXJuIGJ9O08ucHJvdG90eXBlLmlzTmF2UHJvcGVydHk9ZnVuY3Rpb24oZSxwLG0pe3ZhciBNLGksbixFLGosaztmb3IoaT1tLmRhdGFTZXJ2aWNlcy5zY2hlbWEubGVuZ3RoLTE7aT49MDtpLT0xKXtNPW0uZGF0YVNlcnZpY2VzLnNjaGVtYVtpXTtpZihNLmVudGl0eVR5cGUpe249TS5uYW1lc3BhY2UrIi4iO0U9TS5lbnRpdHlUeXBlO2ZvcihrPUUubGVuZ3RoLTE7az49MDtrLT0xKXtpZihuK0Vba10ubmFtZT09PWUmJkVba10ubmF2aWdhdGlvblByb3BlcnR5KXtmb3Ioaj0wO2o8RVtrXS5uYXZpZ2F0aW9uUHJvcGVydHkubGVuZ3RoO2orPTEpe2lmKEVba10ubmF2aWdhdGlvblByb3BlcnR5W2pdLm5hbWU9PT1wKXtyZXR1cm4gdHJ1ZX19fX19fXJldHVybiBmYWxzZX07Ty5wcm90b3R5cGUucmVwbGFjZVdpdGhBbGlhcz1mdW5jdGlvbih2LGEpe2lmKGE9PT11bmRlZmluZWQpe2E9dGhpcy5vQWxpYXN9Zm9yKHZhciBBIGluIGEpe2lmKHYuaW5kZXhPZihBKyIuIik+PTApe3Y9di5yZXBsYWNlKEErIi4iLGFbQV0rIi4iKTtyZXR1cm4gdn19cmV0dXJuIHZ9O08ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtpZih0aGlzLm9SZXF1ZXN0SGFuZGxlKXt0aGlzLm9SZXF1ZXN0SGFuZGxlLmJTdXBwcmVzc0Vycm9ySGFuZGxlckNhbGw9dHJ1ZTt0aGlzLm9SZXF1ZXN0SGFuZGxlLmFib3J0KCk7dGhpcy5vUmVxdWVzdEhhbmRsZT1udWxsfXNhcC51aS5iYXNlLk9iamVjdC5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiBPfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhTWV0YWRhdGEnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwub2RhdGEuT0RhdGFNZXRhZGF0YScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9vZGF0YS9PRGF0YU1ldGFkYXRhIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJ10sZnVuY3Rpb24ocSl7InVzZSBzdHJpY3QiO3ZhciBPPXNhcC51aS5iYXNlLk9iamVjdC5leHRlbmQoInNhcC51aS5tb2RlbC5vZGF0YS5PRGF0YU1ldGFkYXRhIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obSxsKXt0aGlzLm9Nb2RlbD1tO3RoaXMub01ldGFkYXRhPW51bGw7dGhpcy5fbG9hZE1ldGFkYXRhKGwpfSxtZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImdldFNlcnZpY2VNZXRhZGF0YSJdfX0pO08ucHJvdG90eXBlLl9sb2FkTWV0YWRhdGE9ZnVuY3Rpb24oYSl7dmFyIHU9dGhpcy5vTW9kZWwuX2NyZWF0ZVJlcXVlc3RVcmwoIiRtZXRhZGF0YSIpO3ZhciByPXRoaXMub01vZGVsLl9jcmVhdGVSZXF1ZXN0KHUsIkdFVCIsYSk7dmFyIHQ9dGhpcztmdW5jdGlvbiBfKG0sUil7dC5vTWV0YWRhdGE9bTtpZighdC5vTW9kZWwuYlVzZUJhdGNoKXt0Lm9Nb2RlbC5iVXNlQmF0Y2g9dC5fZ2V0VXNlQmF0Y2hFeHRlbnNpb25WYWx1ZSgpfXQub01vZGVsLl9zZXRNZXRhZGF0YSh0KTt0Lm9Nb2RlbC5yZWZyZXNoKHRydWUpfWZ1bmN0aW9uIGIoZSl7dC5vTW9kZWwuZmlyZU1ldGFkYXRhRmFpbGVkKGUpO3Qub01vZGVsLl9oYW5kbGVFcnJvcihlKX10aGlzLm9Nb2RlbC5fcmVxdWVzdChyLF8sYixPRGF0YS5tZXRhZGF0YUhhbmRsZXIpfTtPLnByb3RvdHlwZS5nZXRTZXJ2aWNlTWV0YWRhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vTWV0YWRhdGF9O08ucHJvdG90eXBlLl9nZXRFbnRpdHlUeXBlQnlQYXRoPWZ1bmN0aW9uKHApe2lmKCFwKXtyZXR1cm4gbnVsbH1pZighdGhpcy5vTWV0YWRhdGF8fHEuaXNFbXB0eU9iamVjdCh0aGlzLm9NZXRhZGF0YSkpe3JldHVybiBudWxsfXZhciBjPXAucmVwbGFjZSgvXlwvfFwvJC9nLCIiKSxQPWMuc3BsaXQoIi8iKSxsPVAubGVuZ3RoLGEsQSxvLGUsRSxiLHIsdD10aGlzO2lmKFBbMF0uaW5kZXhPZigiKCIpIT0tMSl7UFswXT1QWzBdLnN1YnN0cmluZygwLFBbMF0uaW5kZXhPZigiKCIpKX1pZihsPjEpe289dC5fZ2V0RW50aXR5VHlwZUJ5UGF0aChQWzBdKTtmb3IodmFyIGk9MTtpPFAubGVuZ3RoO2krKyl7aWYobyl7aWYoUFtpXS5pbmRleE9mKCIoIikhPS0xKXtQW2ldPVBbaV0uc3Vic3RyaW5nKDAsUFtpXS5pbmRleE9mKCIoIikpfWlmKG8ubmF2aWdhdGlvblByb3BlcnR5KXtyPXQuX2dldEVudGl0eVR5cGVCeU5hdlByb3BlcnR5KG8sUFtpXSk7aWYocil7bz1yfX1iPW99fX1lbHNle0U9dGhpcy5fc3BsaXROYW1lKHRoaXMuX2dldEVudGl0eVR5cGVOYW1lKFBbMF0pKTtiPXRoaXMuX2dldE9iamVjdE1ldGFkYXRhKCJlbnRpdHlUeXBlIixFWzBdLEVbMV0pO2lmKGIpe2IuZW50aXR5VHlwZT10aGlzLl9nZXRFbnRpdHlUeXBlTmFtZShQWzBdKX19aWYoIWIpe3ZhciBmPVBbUC5sZW5ndGgtMV07dmFyIEY9dGhpcy5fZ2V0RnVuY3Rpb25JbXBvcnRNZXRhZGF0YShmLCJHRVQiKTtpZihGJiZGLmVudGl0eVNldCl7Yj10aGlzLl9nZXRFbnRpdHlUeXBlQnlQYXRoKEYuZW50aXR5U2V0KTtpZihiKXtiLmVudGl0eVR5cGU9dGhpcy5fZ2V0RW50aXR5VHlwZU5hbWUoRi5lbnRpdHlTZXQpfX19cmV0dXJuIGJ9O08ucHJvdG90eXBlLl9zcGxpdE5hbWU9ZnVuY3Rpb24oZil7dmFyIHA9W107aWYoZil7dmFyIHM9Zi5sYXN0SW5kZXhPZigiLiIpO3BbMF09Zi5zdWJzdHIocysxKTtwWzFdPWYuc3Vic3RyKDAscyl9cmV0dXJuIHB9O08ucHJvdG90eXBlLl9nZXRFbnRpdHlUeXBlTmFtZT1mdW5jdGlvbihjKXt2YXIgZTtpZihjKXtxLmVhY2godGhpcy5vTWV0YWRhdGEuZGF0YVNlcnZpY2VzLnNjaGVtYSxmdW5jdGlvbihpLHMpe2lmKHMuZW50aXR5Q29udGFpbmVyKXtxLmVhY2gocy5lbnRpdHlDb250YWluZXIsZnVuY3Rpb24oayxFKXtpZihFLmVudGl0eVNldCl7cS5lYWNoKEUuZW50aXR5U2V0LGZ1bmN0aW9uKGosbyl7aWYoby5uYW1lPT09Yyl7ZT1vLmVudGl0eVR5cGU7cmV0dXJuIGZhbHNlfX0pfX0pfX0pfXJldHVybiBlfTtPLnByb3RvdHlwZS5fZ2V0T2JqZWN0TWV0YWRhdGE9ZnVuY3Rpb24obyxzLG4pe3ZhciBhO2lmKHMmJm4pe3EuZWFjaCh0aGlzLm9NZXRhZGF0YS5kYXRhU2VydmljZXMuc2NoZW1hLGZ1bmN0aW9uKGksUyl7aWYoU1tvXSYmUy5uYW1lc3BhY2U9PT1uKXtxLmVhY2goU1tvXSxmdW5jdGlvbihqLGMpe2lmKGMubmFtZT09PXMpe2E9YztyZXR1cm4gZmFsc2V9fSk7cmV0dXJuIWF9fSl9cmV0dXJuIGF9O08ucHJvdG90eXBlLl9nZXRVc2VCYXRjaEV4dGVuc2lvblZhbHVlPWZ1bmN0aW9uKCl7dmFyIHU9ZmFsc2U7cS5lYWNoKHRoaXMub01ldGFkYXRhLmRhdGFTZXJ2aWNlcy5zY2hlbWEsZnVuY3Rpb24oaSxzKXtpZihzLmVudGl0eUNvbnRhaW5lcil7cS5lYWNoKHMuZW50aXR5Q29udGFpbmVyLGZ1bmN0aW9uKGssZSl7aWYoZS5leHRlbnNpb25zKXtxLmVhY2goZS5leHRlbnNpb25zLGZ1bmN0aW9uKGwsRSl7aWYoRS5uYW1lPT09InVzZS1iYXRjaCImJkUubmFtZXNwYWNlPT09Imh0dHA6Ly93d3cuc2FwLmNvbS9Qcm90b2NvbHMvU0FQRGF0YSIpe3U9KHR5cGVvZiBFLnZhbHVlPT09J3N0cmluZycpPyhFLnZhbHVlLnRvTG93ZXJDYXNlKCk9PT0ndHJ1ZScpOiEhRS52YWx1ZTtyZXR1cm4gZmFsc2V9fSl9fSl9fSk7cmV0dXJuIHV9O08ucHJvdG90eXBlLl9nZXRGdW5jdGlvbkltcG9ydE1ldGFkYXRhPWZ1bmN0aW9uKGYsbSl7dmFyIG89bnVsbDtxLmVhY2godGhpcy5vTWV0YWRhdGEuZGF0YVNlcnZpY2VzLnNjaGVtYSxmdW5jdGlvbihpLHMpe2lmKHNbImVudGl0eUNvbnRhaW5lciJdKXtxLmVhY2goc1siZW50aXR5Q29udGFpbmVyIl0sZnVuY3Rpb24oaixlKXtpZihlWyJmdW5jdGlvbkltcG9ydCJdKXtxLmVhY2goZVsiZnVuY3Rpb25JbXBvcnQiXSxmdW5jdGlvbihrLEYpe2lmKEYubmFtZT09PWYmJkYuaHR0cE1ldGhvZD09PW0pe289RjtyZXR1cm4gZmFsc2V9fSl9cmV0dXJuIW99KX1yZXR1cm4hb30pO3JldHVybiBvfTtPLnByb3RvdHlwZS5fZ2V0RW50aXR5VHlwZUJ5TmF2UHJvcGVydHk9ZnVuY3Rpb24oZSxuKXt2YXIgdD10aGlzLGEsQSxFLE47cS5lYWNoKGUubmF2aWdhdGlvblByb3BlcnR5LGZ1bmN0aW9uKGssbyl7aWYoby5uYW1lPT09bil7YT10Ll9zcGxpdE5hbWUoby5yZWxhdGlvbnNoaXApO0E9dC5fZ2V0T2JqZWN0TWV0YWRhdGEoImFzc29jaWF0aW9uIixhWzBdLGFbMV0pO2lmKEEpe3ZhciBiPUEuZW5kWzBdO2lmKGIucm9sZSE9PW8udG9Sb2xlKXtiPUEuZW5kWzFdfUU9dC5fc3BsaXROYW1lKGIudHlwZSk7Tj10Ll9nZXRPYmplY3RNZXRhZGF0YSgiZW50aXR5VHlwZSIsRVswXSxFWzFdKTtpZihOKXtOLmVudGl0eVR5cGU9Yi50eXBlfXJldHVybiBmYWxzZX19fSk7cmV0dXJuIE59O08ucHJvdG90eXBlLl9nZXROYXZpZ2F0aW9uUHJvcGVydHlOYW1lcz1mdW5jdGlvbihlKXt2YXIgbj1bXTtpZihlLm5hdmlnYXRpb25Qcm9wZXJ0eSl7cS5lYWNoKGUubmF2aWdhdGlvblByb3BlcnR5LGZ1bmN0aW9uKGssTil7bi5wdXNoKE4ubmFtZSl9KX1yZXR1cm4gbn07Ty5wcm90b3R5cGUuX2dldFByb3BlcnR5TWV0YWRhdGE9ZnVuY3Rpb24oZSxwKXt2YXIgUCx0PXRoaXM7cD1wLnJlcGxhY2UoL15cL3xcLyQvZywiIik7dmFyIGE9cC5zcGxpdCgiLyIpO3EuZWFjaChlLnByb3BlcnR5LGZ1bmN0aW9uKGssYil7aWYoYi5uYW1lPT09YVswXSl7UD1iO3JldHVybiBmYWxzZX19KTtpZihQJiZhLmxlbmd0aD4xJiYhcS5zYXAuc3RhcnRzV2l0aChQLnR5cGUudG9Mb3dlckNhc2UoKSwiZWRtLiIpKXt2YXIgbj10aGlzLl9zcGxpdE5hbWUoUC50eXBlKTtQPXRoaXMuX2dldFByb3BlcnR5TWV0YWRhdGEodGhpcy5fZ2V0T2JqZWN0TWV0YWRhdGEoImNvbXBsZXhUeXBlIixuWzBdLG5bMV0pLGFbMV0pfWlmKCFQJiZhLmxlbmd0aD4xKXt2YXIgbz10aGlzLl9nZXRFbnRpdHlUeXBlQnlOYXZQcm9wZXJ0eShlLGFbMF0pO2lmKG8pe1A9dC5fZ2V0UHJvcGVydHlNZXRhZGF0YShvLGFbMV0pfX1yZXR1cm4gUH07Ty5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLm9Nb2RlbDtkZWxldGUgdGhpcy5vTWV0YWRhdGE7c2FwLnVpLmJhc2UuT2JqZWN0LnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIE99LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkudGhpcmRwYXJ0eS5jYWphLWh0bWwtc2FuaXRpemVyJykpew0KLyogQ29weXJpZ2h0IEdvb2dsZSBJbmMuCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSBWZXJzaW9uIDIuMAogKiBBdXRvZ2VuZXJhdGVkIGF0IFR1ZSBNYXkgMjIgMTA6MTg6MjEgUERUIDIwMTIKICogXEBvdmVycmlkZXMgd2luZG93CiAqIFxAcHJvdmlkZXMgY3NzU2NoZW1hLCBDU1NfUFJPUF9CSVRfUVVBTlRJVFksIENTU19QUk9QX0JJVF9IQVNIX1ZBTFVFLCBDU1NfUFJPUF9CSVRfTkVHQVRJVkVfUVVBTlRJVFksIENTU19QUk9QX0JJVF9RU1RSSU5HX0NPTlRFTlQsIENTU19QUk9QX0JJVF9RU1RSSU5HX1VSTCwgQ1NTX1BST1BfQklUX0hJU1RPUllfSU5TRU5TSVRJVkUsIENTU19QUk9QX0JJVF9aX0lOREVYLCBDU1NfUFJPUF9CSVRfQUxMT1dFRF9JTl9MSU5LICovDQp2YXIgQ1NTX1BST1BfQklUX1FVQU5USVRZPTE7dmFyIENTU19QUk9QX0JJVF9IQVNIX1ZBTFVFPTI7dmFyIENTU19QUk9QX0JJVF9ORUdBVElWRV9RVUFOVElUWT00O3ZhciBDU1NfUFJPUF9CSVRfUVNUUklOR19DT05URU5UPTg7dmFyIENTU19QUk9QX0JJVF9RU1RSSU5HX1VSTD0xNjt2YXIgQ1NTX1BST1BfQklUX0hJU1RPUllfSU5TRU5TSVRJVkU9MzI7dmFyIENTU19QUk9QX0JJVF9aX0lOREVYPTY0O3ZhciBDU1NfUFJPUF9CSVRfQUxMT1dFRF9JTl9MSU5LPTEyODt2YXIgY3NzU2NoZW1hPShmdW5jdGlvbigpe3ZhciBzPVsncmdiKD86XFwoXFxzKig/OlxcZCt8MHxcXGQrKD86XFwuXFxkKyk/JSlcXHMqLFxccyooPzpcXGQrfDB8XFxkKyg/OlxcLlxcZCspPyUpXFxzKixcXHMqKD86XFxkK3wwfFxcZCsoPzpcXC5cXGQrKT8lKXxhXFwoXFxzKig/OlxcZCt8MHxcXGQrKD86XFwuXFxkKyk/JSlcXHMqLFxccyooPzpcXGQrfDB8XFxkKyg/OlxcLlxcZCspPyUpXFxzKixcXHMqKD86XFxkK3wwfFxcZCsoPzpcXC5cXGQrKT8lKVxccyosXFxzKig/OlxcZCt8MCg/OlxcLlxcZCspP3xcXC5cXGQrfDEoPzpcXC4wKyk/fDB8XFxkKyg/OlxcLlxcZCspPyUpKSAqXFwpJ10sYz1bL14gKiQvaSxSZWdFeHAoJ14gKig/OlxccyonK3NbMF0rJ3woPzpcXHMqJytzWzBdKycpPykrICokJywnaScpLFJlZ0V4cCgnXiAqXFxzKicrc1swXSsnICokJywnaScpLFJlZ0V4cCgnXiAqXFxzKicrc1swXSsnXFxzKicrc1swXSsnICokJywnaScpXSxMPVtbJ2FsaWNlYmx1ZScsJ2FudGlxdWV3aGl0ZScsJ2FxdWEnLCdhcXVhbWFyaW5lJywnYXp1cmUnLCdiZWlnZScsJ2Jpc3F1ZScsJ2JsYWNrJywnYmxhbmNoZWRhbG1vbmQnLCdibHVlJywnYmx1ZXZpb2xldCcsJ2Jyb3duJywnYnVybHl3b29kJywnY2FkZXRibHVlJywnY2hhcnRyZXVzZScsJ2Nob2NvbGF0ZScsJ2NvcmFsJywnY29ybmZsb3dlcmJsdWUnLCdjb3Juc2lsaycsJ2NyaW1zb24nLCdjeWFuJywnZGFya2JsdWUnLCdkYXJrY3lhbicsJ2Rhcmtnb2xkZW5yb2QnLCdkYXJrZ3JheScsJ2RhcmtncmVlbicsJ2RhcmtraGFraScsJ2RhcmttYWdlbnRhJywnZGFya29saXZlZ3JlZW4nLCdkYXJrb3JhbmdlJywnZGFya29yY2hpZCcsJ2RhcmtyZWQnLCdkYXJrc2FsbW9uJywnZGFya3NlYWdyZWVuJywnZGFya3NsYXRlYmx1ZScsJ2RhcmtzbGF0ZWdyYXknLCdkYXJrdHVycXVvaXNlJywnZGFya3Zpb2xldCcsJ2RlZXBwaW5rJywnZGVlcHNreWJsdWUnLCdkaW1ncmF5JywnZG9kZ2VyYmx1ZScsJ2ZpcmVicmljaycsJ2Zsb3JhbHdoaXRlJywnZm9yZXN0Z3JlZW4nLCdmdWNoc2lhJywnZ2FpbnNib3JvJywnZ2hvc3R3aGl0ZScsJ2dvbGQnLCdnb2xkZW5yb2QnLCdncmF5JywnZ3JlZW4nLCdncmVlbnllbGxvdycsJ2hvbmV5ZGV3JywnaG90cGluaycsJ2luZGlhbnJlZCcsJ2luZGlnbycsJ2l2b3J5Jywna2hha2knLCdsYXZlbmRlcicsJ2xhdmVuZGVyYmx1c2gnLCdsYXduZ3JlZW4nLCdsZW1vbmNoaWZmb24nLCdsaWdodGJsdWUnLCdsaWdodGNvcmFsJywnbGlnaHRjeWFuJywnbGlnaHRnb2xkZW5yb2R5ZWxsb3cnLCdsaWdodGdyZWVuJywnbGlnaHRncmV5JywnbGlnaHRwaW5rJywnbGlnaHRzYWxtb24nLCdsaWdodHNlYWdyZWVuJywnbGlnaHRza3libHVlJywnbGlnaHRzbGF0ZWdyYXknLCdsaWdodHN0ZWVsYmx1ZScsJ2xpZ2h0eWVsbG93JywnbGltZScsJ2xpbWVncmVlbicsJ2xpbmVuJywnbWFnZW50YScsJ21hcm9vbicsJ21lZGl1bWFxdWFtYXJpbmUnLCdtZWRpdW1ibHVlJywnbWVkaXVtb3JjaGlkJywnbWVkaXVtcHVycGxlJywnbWVkaXVtc2VhZ3JlZW4nLCdtZWRpdW1zbGF0ZWJsdWUnLCdtZWRpdW1zcHJpbmdncmVlbicsJ21lZGl1bXR1cnF1b2lzZScsJ21lZGl1bXZpb2xldHJlZCcsJ21pZG5pZ2h0Ymx1ZScsJ21pbnRjcmVhbScsJ21pc3R5cm9zZScsJ21vY2Nhc2luJywnbmF2YWpvd2hpdGUnLCduYXZ5Jywnb2xkbGFjZScsJ29saXZlJywnb2xpdmVkcmFiJywnb3JhbmdlJywnb3JhbmdlcmVkJywnb3JjaGlkJywncGFsZWdvbGRlbnJvZCcsJ3BhbGVncmVlbicsJ3BhbGV0dXJxdW9pc2UnLCdwYWxldmlvbGV0cmVkJywncGFwYXlhd2hpcCcsJ3BlYWNocHVmZicsJ3BlcnUnLCdwaW5rJywncGx1bScsJ3Bvd2RlcmJsdWUnLCdwdXJwbGUnLCdyZWQnLCdyb3N5YnJvd24nLCdyb3lhbGJsdWUnLCdzYWRkbGVicm93bicsJ3NhbG1vbicsJ3NhbmR5YnJvd24nLCdzZWFncmVlbicsJ3NlYXNoZWxsJywnc2llbm5hJywnc2lsdmVyJywnc2t5Ymx1ZScsJ3NsYXRlYmx1ZScsJ3NsYXRlZ3JheScsJ3Nub3cnLCdzcHJpbmdncmVlbicsJ3N0ZWVsYmx1ZScsJ3RhbicsJ3RlYWwnLCd0aGlzdGxlJywndG9tYXRvJywndHVycXVvaXNlJywndmlvbGV0Jywnd2hlYXQnLCd3aGl0ZScsJ3doaXRlc21va2UnLCd5ZWxsb3cnLCd5ZWxsb3dncmVlbiddLFsnYWxsLXNjcm9sbCcsJ2NvbC1yZXNpemUnLCdjcm9zc2hhaXInLCdkZWZhdWx0JywnZS1yZXNpemUnLCdoYW5kJywnaGVscCcsJ21vdmUnLCduLXJlc2l6ZScsJ25lLXJlc2l6ZScsJ25vLWRyb3AnLCdub3QtYWxsb3dlZCcsJ253LXJlc2l6ZScsJ3BvaW50ZXInLCdwcm9ncmVzcycsJ3Jvdy1yZXNpemUnLCdzLXJlc2l6ZScsJ3NlLXJlc2l6ZScsJ3N3LXJlc2l6ZScsJ3RleHQnLCd2ZXJ0aWNhbC10ZXh0Jywndy1yZXNpemUnLCd3YWl0J10sWyctbW96LWlubGluZS1ib3gnLCctbW96LWlubGluZS1zdGFjaycsJ2Jsb2NrJywnaW5saW5lJywnaW5saW5lLWJsb2NrJywnaW5saW5lLXRhYmxlJywnbGlzdC1pdGVtJywncnVuLWluJywndGFibGUnLCd0YWJsZS1jYXB0aW9uJywndGFibGUtY2VsbCcsJ3RhYmxlLWNvbHVtbicsJ3RhYmxlLWNvbHVtbi1ncm91cCcsJ3RhYmxlLWZvb3Rlci1ncm91cCcsJ3RhYmxlLWhlYWRlci1ncm91cCcsJ3RhYmxlLXJvdycsJ3RhYmxlLXJvdy1ncm91cCddLFsnYXJtZW5pYW4nLCdjaXJjbGUnLCdkZWNpbWFsJywnZGVjaW1hbC1sZWFkaW5nLXplcm8nLCdkaXNjJywnZ2VvcmdpYW4nLCdsb3dlci1hbHBoYScsJ2xvd2VyLWdyZWVrJywnbG93ZXItbGF0aW4nLCdsb3dlci1yb21hbicsJ3NxdWFyZScsJ3VwcGVyLWFscGhhJywndXBwZXItbGF0aW4nLCd1cHBlci1yb21hbiddLFsnMTAwJywnMjAwJywnMzAwJywnNDAwJywnNTAwJywnNjAwJywnNzAwJywnODAwJywnOTAwJywnYm9sZCcsJ2JvbGRlcicsJ2xpZ2h0ZXInXSxbJ2NvbmRlbnNlZCcsJ2V4cGFuZGVkJywnZXh0cmEtY29uZGVuc2VkJywnZXh0cmEtZXhwYW5kZWQnLCduYXJyb3dlcicsJ3NlbWktY29uZGVuc2VkJywnc2VtaS1leHBhbmRlZCcsJ3VsdHJhLWNvbmRlbnNlZCcsJ3VsdHJhLWV4cGFuZGVkJywnd2lkZXInXSxbJ2JlaGluZCcsJ2NlbnRlci1sZWZ0JywnY2VudGVyLXJpZ2h0JywnZmFyLWxlZnQnLCdmYXItcmlnaHQnLCdsZWZ0LXNpZGUnLCdsZWZ0d2FyZHMnLCdyaWdodC1zaWRlJywncmlnaHR3YXJkcyddLFsnbGFyZ2UnLCdsYXJnZXInLCdzbWFsbCcsJ3NtYWxsZXInLCd4LWxhcmdlJywneC1zbWFsbCcsJ3h4LWxhcmdlJywneHgtc21hbGwnXSxbJy1tb3otcHJlLXdyYXAnLCctby1wcmUtd3JhcCcsJy1wcmUtd3JhcCcsJ25vd3JhcCcsJ3ByZScsJ3ByZS1saW5lJywncHJlLXdyYXAnXSxbJ2Rhc2hlZCcsJ2RvdHRlZCcsJ2RvdWJsZScsJ2dyb292ZScsJ291dHNldCcsJ3JpZGdlJywnc29saWQnXSxbJ2Jhc2VsaW5lJywnbWlkZGxlJywnc3ViJywnc3VwZXInLCd0ZXh0LWJvdHRvbScsJ3RleHQtdG9wJ10sWydjYXB0aW9uJywnaWNvbicsJ21lbnUnLCdtZXNzYWdlLWJveCcsJ3NtYWxsLWNhcHRpb24nLCdzdGF0dXMtYmFyJ10sWydmYXN0JywnZmFzdGVyJywnc2xvdycsJ3Nsb3dlcicsJ3gtZmFzdCcsJ3gtc2xvdyddLFsnYWJvdmUnLCdiZWxvdycsJ2hpZ2hlcicsJ2xldmVsJywnbG93ZXInXSxbJ2JvcmRlci1ib3gnLCdjb250YWluJywnY29udGVudC1ib3gnLCdjb3ZlcicsJ3BhZGRpbmctYm94J10sWydjdXJzaXZlJywnZmFudGFzeScsJ21vbm9zcGFjZScsJ3NhbnMtc2VyaWYnLCdzZXJpZiddLFsnbG91ZCcsJ3NpbGVudCcsJ3NvZnQnLCd4LWxvdWQnLCd4LXNvZnQnXSxbJ25vLXJlcGVhdCcsJ3JlcGVhdC14JywncmVwZWF0LXknLCdyb3VuZCcsJ3NwYWNlJ10sWydibGluaycsJ2xpbmUtdGhyb3VnaCcsJ292ZXJsaW5lJywndW5kZXJsaW5lJ10sWydoaWdoJywnbG93JywneC1oaWdoJywneC1sb3cnXSxbJ2Fic29sdXRlJywncmVsYXRpdmUnLCdzdGF0aWMnXSxbJ2NhcGl0YWxpemUnLCdsb3dlcmNhc2UnLCd1cHBlcmNhc2UnXSxbJ2NoaWxkJywnZmVtYWxlJywnbWFsZSddLFsnYmlkaS1vdmVycmlkZScsJ2VtYmVkJ10sWydib3R0b20nLCd0b3AnXSxbJ2NsaXAnLCdlbGxpcHNpcyddLFsnY29udGludW91cycsJ2RpZ2l0cyddLFsnaGlkZScsJ3Nob3cnXSxbJ2luc2lkZScsJ291dHNpZGUnXSxbJ2l0YWxpYycsJ29ibGlxdWUnXSxbJ2xlZnQnLCdyaWdodCddLFsnbHRyJywncnRsJ10sWyduby1jb250ZW50Jywnbm8tZGlzcGxheSddLFsnc3VwcHJlc3MnLCd1bnJlc3RyaWN0ZWQnXSxbJ3RoaWNrJywndGhpbiddLFsnLCddLFsnLyddLFsnYWx3YXlzJ10sWydhdXRvJ10sWydhdm9pZCddLFsnYm90aCddLFsnYnJlYWstd29yZCddLFsnY2VudGVyJ10sWydjb2RlJ10sWydjb2xsYXBzZSddLFsnZml4ZWQnXSxbJ2hpZGRlbiddLFsnaW5oZXJpdCddLFsnaW5zZXQnXSxbJ2ludmVydCddLFsnanVzdGlmeSddLFsnbG9jYWwnXSxbJ21lZGl1bSddLFsnbWl4J10sWydub25lJ10sWydub3JtYWwnXSxbJ29uY2UnXSxbJ3JlcGVhdCddLFsnc2Nyb2xsJ10sWydzZXBhcmF0ZSddLFsnc21hbGwtY2FwcyddLFsnc3BlbGwtb3V0J10sWyd0cmFuc3BhcmVudCddLFsndmlzaWJsZSddXTtyZXR1cm57Jy1tb3otYm9yZGVyLXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFszNl1dfSwnLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo1fSwnLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0Jzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NX0sJy1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0Jzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NX0sJy1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCctbW96LWJveC1zaGFkb3cnOnsnY3NzRXh0cmEnOmNbMV0sJ2Nzc0FsdGVybmF0ZXMnOlsnYm94U2hhZG93J10sJ2Nzc1Byb3BCaXRzJzo3LCdjc3NMaXRHcm91cCc6W0xbMF0sTFszNV0sTFs0OF0sTFs1NF1dfSwnLW1vei1vcGFjaXR5Jzp7J2Nzc1Byb3BCaXRzJzoxLCdjc3NMaXRHcm91cCc6W0xbNDddXX0sJy1tb3otb3V0bGluZSc6eydjc3NFeHRyYSc6Y1szXSwnY3NzUHJvcEJpdHMnOjcsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzldLExbMzRdLExbNDZdLExbNDddLExbNDhdLExbNDldLExbNTJdLExbNTRdXX0sJy1tb3otb3V0bGluZS1jb2xvcic6eydjc3NFeHRyYSc6Y1syXSwnY3NzUHJvcEJpdHMnOjIsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzQ3XSxMWzQ5XV19LCctbW96LW91dGxpbmUtc3R5bGUnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs5XSxMWzQ2XSxMWzQ3XSxMWzQ4XSxMWzU0XV19LCctbW96LW91dGxpbmUtd2lkdGgnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFszNF0sTFs0N10sTFs1Ml1dfSwnLW8tdGV4dC1vdmVyZmxvdyc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzI1XV19LCctd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXMnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo1fSwnLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCctd2Via2l0LWJvcmRlci1yYWRpdXMnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzZdXX0sJy13ZWJraXQtYm9yZGVyLXJhZGl1cy1ib3R0b20tbGVmdCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCctd2Via2l0LWJvcmRlci1yYWRpdXMtYm90dG9tLXJpZ2h0Jzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NX0sJy13ZWJraXQtYm9yZGVyLXJhZGl1cy10b3AtbGVmdCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCctd2Via2l0LWJvcmRlci1yYWRpdXMtdG9wLXJpZ2h0Jzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NX0sJy13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCctd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzJzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NX0sJy13ZWJraXQtYm94LXNoYWRvdyc6eydjc3NFeHRyYSc6Y1sxXSwnY3NzQWx0ZXJuYXRlcyc6Wydib3hTaGFkb3cnXSwnY3NzUHJvcEJpdHMnOjcsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzM1XSxMWzQ4XSxMWzU0XV19LCdhemltdXRoJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbNl0sTFszMF0sTFs0Ml0sTFs0N11dfSwnYmFja2dyb3VuZCc6eydjc3NFeHRyYSc6UmVnRXhwKCdeICooPzpcXHMqJytzWzBdKycpezAsMn0gKiQnLCdpJyksJ2Nzc1Byb3BCaXRzJzoyMywnY3NzTGl0R3JvdXAnOltMWzBdLExbMTRdLExbMTddLExbMjRdLExbMzBdLExbMzVdLExbMzZdLExbMzhdLExbNDJdLExbNDVdLExbNDddLExbNTFdLExbNTRdLExbNTddLExbNThdLExbNjJdXX0sJ2JhY2tncm91bmQtYXR0YWNobWVudCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFszNV0sTFs0NV0sTFs1MV0sTFs1OF1dfSwnYmFja2dyb3VuZC1jb2xvcic6eydjc3NFeHRyYSc6Y1syXSwnY3NzUHJvcEJpdHMnOjEzMCwnY3NzTGl0R3JvdXAnOltMWzBdLExbNDddLExbNjJdXX0sJ2JhY2tncm91bmQtaW1hZ2UnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzoxNiwnY3NzTGl0R3JvdXAnOltMWzM1XSxMWzU0XV19LCdiYWNrZ3JvdW5kLXBvc2l0aW9uJzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzI0XSxMWzMwXSxMWzM1XSxMWzQyXV19LCdiYWNrZ3JvdW5kLXJlcGVhdCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFsxN10sTFszNV0sTFs1N11dfSwnYm9yZGVyJzp7J2Nzc0V4dHJhJzpjWzNdLCdjc3NQcm9wQml0cyc6NywnY3NzTGl0R3JvdXAnOltMWzBdLExbOV0sTFszNF0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1Ml0sTFs1NF0sTFs2Ml1dfSwnYm9yZGVyLWJvdHRvbSc6eydjc3NFeHRyYSc6Y1szXSwnY3NzUHJvcEJpdHMnOjcsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzldLExbMzRdLExbNDZdLExbNDddLExbNDhdLExbNTJdLExbNTRdLExbNjJdXX0sJ2JvcmRlci1ib3R0b20tY29sb3InOnsnY3NzRXh0cmEnOmNbMl0sJ2Nzc1Byb3BCaXRzJzoyLCdjc3NMaXRHcm91cCc6W0xbMF0sTFs0N10sTFs2Ml1dfSwnYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCdib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCdib3JkZXItYm90dG9tLXN0eWxlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbOV0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1NF1dfSwnYm9yZGVyLWJvdHRvbS13aWR0aCc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzM0XSxMWzQ3XSxMWzUyXV19LCdib3JkZXItY29sbGFwc2UnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs0NF0sTFs0N10sTFs1OV1dfSwnYm9yZGVyLWNvbG9yJzp7J2Nzc0V4dHJhJzpSZWdFeHAoJ14gKig/OlxccyonK3NbMF0rJyl7MSw0fSAqJCcsJ2knKSwnY3NzUHJvcEJpdHMnOjIsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzQ3XSxMWzYyXV19LCdib3JkZXItbGVmdCc6eydjc3NFeHRyYSc6Y1szXSwnY3NzUHJvcEJpdHMnOjcsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzldLExbMzRdLExbNDZdLExbNDddLExbNDhdLExbNTJdLExbNTRdLExbNjJdXX0sJ2JvcmRlci1sZWZ0LWNvbG9yJzp7J2Nzc0V4dHJhJzpjWzJdLCdjc3NQcm9wQml0cyc6MiwnY3NzTGl0R3JvdXAnOltMWzBdLExbNDddLExbNjJdXX0sJ2JvcmRlci1sZWZ0LXN0eWxlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbOV0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1NF1dfSwnYm9yZGVyLWxlZnQtd2lkdGgnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFszNF0sTFs0N10sTFs1Ml1dfSwnYm9yZGVyLXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFszNl1dfSwnYm9yZGVyLXJpZ2h0Jzp7J2Nzc0V4dHJhJzpjWzNdLCdjc3NQcm9wQml0cyc6NywnY3NzTGl0R3JvdXAnOltMWzBdLExbOV0sTFszNF0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1Ml0sTFs1NF0sTFs2Ml1dfSwnYm9yZGVyLXJpZ2h0LWNvbG9yJzp7J2Nzc0V4dHJhJzpjWzJdLCdjc3NQcm9wQml0cyc6MiwnY3NzTGl0R3JvdXAnOltMWzBdLExbNDddLExbNjJdXX0sJ2JvcmRlci1yaWdodC1zdHlsZSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzldLExbNDZdLExbNDddLExbNDhdLExbNTRdXX0sJ2JvcmRlci1yaWdodC13aWR0aCc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzM0XSxMWzQ3XSxMWzUyXV19LCdib3JkZXItc3BhY2luZyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFs0N11dfSwnYm9yZGVyLXN0eWxlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbOV0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1NF1dfSwnYm9yZGVyLXRvcCc6eydjc3NFeHRyYSc6Y1szXSwnY3NzUHJvcEJpdHMnOjcsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzldLExbMzRdLExbNDZdLExbNDddLExbNDhdLExbNTJdLExbNTRdLExbNjJdXX0sJ2JvcmRlci10b3AtY29sb3InOnsnY3NzRXh0cmEnOmNbMl0sJ2Nzc1Byb3BCaXRzJzoyLCdjc3NMaXRHcm91cCc6W0xbMF0sTFs0N10sTFs2Ml1dfSwnYm9yZGVyLXRvcC1sZWZ0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCdib3JkZXItdG9wLXJpZ2h0LXJhZGl1cyc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjV9LCdib3JkZXItdG9wLXN0eWxlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbOV0sTFs0Nl0sTFs0N10sTFs0OF0sTFs1NF1dfSwnYm9yZGVyLXRvcC13aWR0aCc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzM0XSxMWzQ3XSxMWzUyXV19LCdib3JkZXItd2lkdGgnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFszNF0sTFs0N10sTFs1Ml1dfSwnYm90dG9tJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ2JveC1zaGFkb3cnOnsnY3NzRXh0cmEnOmNbMV0sJ2Nzc1Byb3BCaXRzJzo3LCdjc3NMaXRHcm91cCc6W0xbMF0sTFszNV0sTFs0OF0sTFs1NF1dfSwnY2FwdGlvbi1zaWRlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMjRdLExbNDddXX0sJ2NsZWFyJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMzBdLExbNDBdLExbNDddLExbNTRdXX0sJ2NsaXAnOnsnY3NzRXh0cmEnOi9eICpccypyZWN0XChccyooPzowfFsrXC1dP1xkKyg/OlwuXGQrKT8oPzpbY2VtXW18ZXh8aW58cFtjdHhdKXxhdXRvKVxzKixccyooPzowfFsrXC1dP1xkKyg/OlwuXGQrKT8oPzpbY2VtXW18ZXh8aW58cFtjdHhdKXxhdXRvKVxzKixccyooPzowfFsrXC1dP1xkKyg/OlwuXGQrKT8oPzpbY2VtXW18ZXh8aW58cFtjdHhdKXxhdXRvKVxzKixccyooPzowfFsrXC1dP1xkKyg/OlwuXGQrKT8oPzpbY2VtXW18ZXh8aW58cFtjdHhdKXxhdXRvKSAqXCkgKiQvaSwnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N11dfSwnY29sb3InOnsnY3NzRXh0cmEnOmNbMl0sJ2Nzc1Byb3BCaXRzJzoxMzAsJ2Nzc0xpdEdyb3VwJzpbTFswXSxMWzQ3XV19LCdjb250ZW50Jzp7J2Nzc1Byb3BCaXRzJzowfSwnY291bnRlci1pbmNyZW1lbnQnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbNDddLExbNTRdXX0sJ2NvdW50ZXItcmVzZXQnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbNDddLExbNTRdXX0sJ2N1ZSc6eydjc3NQcm9wQml0cyc6MTYsJ2Nzc0xpdEdyb3VwJzpbTFs0N10sTFs1NF1dfSwnY3VlLWFmdGVyJzp7J2Nzc1Byb3BCaXRzJzoxNiwnY3NzTGl0R3JvdXAnOltMWzQ3XSxMWzU0XV19LCdjdWUtYmVmb3JlJzp7J2Nzc1Byb3BCaXRzJzoxNiwnY3NzTGl0R3JvdXAnOltMWzQ3XSxMWzU0XV19LCdjdXJzb3InOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzoxNDQsJ2Nzc0xpdEdyb3VwJzpbTFsxXSxMWzM1XSxMWzM4XSxMWzQ3XV19LCdkaXJlY3Rpb24nOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFszMV0sTFs0N11dfSwnZGlzcGxheSc6eydjc3NQcm9wQml0cyc6MzIsJ2Nzc0xpdEdyb3VwJzpbTFsyXSxMWzQ3XSxMWzU0XV19LCdlbGV2YXRpb24nOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFsxM10sTFs0N11dfSwnZW1wdHktY2VsbHMnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFsyN10sTFs0N11dfSwnZmlsdGVyJzp7J2Nzc0V4dHJhJzovXiAqKD86XHMqYWxwaGFcKFxzKm9wYWNpdHlccyo9XHMqKD86MHxcZCsoPzpcLlxkKyk/JXxbK1wtXT9cZCsoPzpcLlxkKyk/KSAqXCkpKyAqJC9pLCdjc3NQcm9wQml0cyc6MzJ9LCdmbG9hdCc6eydjc3NBbHRlcm5hdGVzJzpbJ2Nzc0Zsb2F0Jywnc3R5bGVGbG9hdCddLCdjc3NQcm9wQml0cyc6MzIsJ2Nzc0xpdEdyb3VwJzpbTFszMF0sTFs0N10sTFs1NF1dfSwnZm9udCc6eydjc3NFeHRyYSc6Y1swXSwnY3NzUHJvcEJpdHMnOjksJ2Nzc0xpdEdyb3VwJzpbTFs0XSxMWzddLExbMTFdLExbMTVdLExbMjldLExbMzVdLExbMzZdLExbNDddLExbNTJdLExbNTVdLExbNjBdXX0sJ2ZvbnQtZmFtaWx5Jzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6OCwnY3NzTGl0R3JvdXAnOltMWzE1XSxMWzM1XSxMWzQ3XV19LCdmb250LXNpemUnOnsnY3NzUHJvcEJpdHMnOjEsJ2Nzc0xpdEdyb3VwJzpbTFs3XSxMWzQ3XSxMWzUyXV19LCdmb250LXN0cmV0Y2gnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs1XSxMWzU1XV19LCdmb250LXN0eWxlJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMjldLExbNDddLExbNTVdXX0sJ2ZvbnQtdmFyaWFudCc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzQ3XSxMWzU1XSxMWzYwXV19LCdmb250LXdlaWdodCc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzRdLExbNDddLExbNTVdXX0sJ2hlaWdodCc6eydjc3NQcm9wQml0cyc6MzcsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N11dfSwnbGVmdCc6eydjc3NQcm9wQml0cyc6MzcsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N11dfSwnbGV0dGVyLXNwYWNpbmcnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFs0N10sTFs1NV1dfSwnbGluZS1oZWlnaHQnOnsnY3NzUHJvcEJpdHMnOjEsJ2Nzc0xpdEdyb3VwJzpbTFs0N10sTFs1NV1dfSwnbGlzdC1zdHlsZSc6eydjc3NQcm9wQml0cyc6MTYsJ2Nzc0xpdEdyb3VwJzpbTFszXSxMWzI4XSxMWzQ3XSxMWzU0XV19LCdsaXN0LXN0eWxlLWltYWdlJzp7J2Nzc1Byb3BCaXRzJzoxNiwnY3NzTGl0R3JvdXAnOltMWzQ3XSxMWzU0XV19LCdsaXN0LXN0eWxlLXBvc2l0aW9uJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMjhdLExbNDddXX0sJ2xpc3Qtc3R5bGUtdHlwZSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzNdLExbNDddLExbNTRdXX0sJ21hcmdpbic6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ3XV19LCdtYXJnaW4tYm90dG9tJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ21hcmdpbi1sZWZ0Jzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ21hcmdpbi1yaWdodCc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ3XV19LCdtYXJnaW4tdG9wJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ21heC1oZWlnaHQnOnsnY3NzUHJvcEJpdHMnOjEsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N10sTFs1NF1dfSwnbWF4LXdpZHRoJzp7J2Nzc1Byb3BCaXRzJzoxLCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddLExbNTRdXX0sJ21pbi1oZWlnaHQnOnsnY3NzUHJvcEJpdHMnOjEsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N11dfSwnbWluLXdpZHRoJzp7J2Nzc1Byb3BCaXRzJzoxLCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ29wYWNpdHknOnsnY3NzUHJvcEJpdHMnOjMzLCdjc3NMaXRHcm91cCc6W0xbNDddXX0sJ291dGxpbmUnOnsnY3NzRXh0cmEnOmNbM10sJ2Nzc1Byb3BCaXRzJzo3LCdjc3NMaXRHcm91cCc6W0xbMF0sTFs5XSxMWzM0XSxMWzQ2XSxMWzQ3XSxMWzQ4XSxMWzQ5XSxMWzUyXSxMWzU0XV19LCdvdXRsaW5lLWNvbG9yJzp7J2Nzc0V4dHJhJzpjWzJdLCdjc3NQcm9wQml0cyc6MiwnY3NzTGl0R3JvdXAnOltMWzBdLExbNDddLExbNDldXX0sJ291dGxpbmUtc3R5bGUnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs5XSxMWzQ2XSxMWzQ3XSxMWzQ4XSxMWzU0XV19LCdvdXRsaW5lLXdpZHRoJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbMzRdLExbNDddLExbNTJdXX0sJ292ZXJmbG93Jzp7J2Nzc1Byb3BCaXRzJzozMiwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ2XSxMWzQ3XSxMWzU4XSxMWzYzXV19LCdvdmVyZmxvdy14Jzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMzJdLExbMzhdLExbNDZdLExbNThdLExbNjNdXX0sJ292ZXJmbG93LXknOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFszMl0sTFszOF0sTFs0Nl0sTFs1OF0sTFs2M11dfSwncGFkZGluZyc6eydjc3NQcm9wQml0cyc6MSwnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdwYWRkaW5nLWJvdHRvbSc6eydjc3NQcm9wQml0cyc6MzMsJ2Nzc0xpdEdyb3VwJzpbTFs0N11dfSwncGFkZGluZy1sZWZ0Jzp7J2Nzc1Byb3BCaXRzJzozMywnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdwYWRkaW5nLXJpZ2h0Jzp7J2Nzc1Byb3BCaXRzJzozMywnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdwYWRkaW5nLXRvcCc6eydjc3NQcm9wQml0cyc6MzMsJ2Nzc0xpdEdyb3VwJzpbTFs0N11dfSwncGFnZS1icmVhay1hZnRlcic6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzMwXSxMWzM3XSxMWzM4XSxMWzM5XSxMWzQ3XV19LCdwYWdlLWJyZWFrLWJlZm9yZSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzMwXSxMWzM3XSxMWzM4XSxMWzM5XSxMWzQ3XV19LCdwYWdlLWJyZWFrLWluc2lkZSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzM5XSxMWzQ3XV19LCdwYXVzZSc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdwYXVzZS1hZnRlcic6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdwYXVzZS1iZWZvcmUnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFs0N11dfSwncGl0Y2gnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFsxOV0sTFs0N10sTFs1Ml1dfSwncGl0Y2gtcmFuZ2UnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFs0N11dfSwncGxheS1kdXJpbmcnOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzoxNiwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ3XSxMWzUzXSxMWzU0XSxMWzU3XV19LCdwb3NpdGlvbic6eydjc3NQcm9wQml0cyc6MzIsJ2Nzc0xpdEdyb3VwJzpbTFsyMF0sTFs0N11dfSwncXVvdGVzJzp7J2Nzc0V4dHJhJzpjWzBdLCdjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzQ3XSxMWzU0XV19LCdyaWNobmVzcyc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCdyaWdodCc6eydjc3NQcm9wQml0cyc6MzcsJ2Nzc0xpdEdyb3VwJzpbTFszOF0sTFs0N11dfSwnc3BlYWsnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs0N10sTFs1NF0sTFs1NV0sTFs2MV1dfSwnc3BlYWstaGVhZGVyJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMzddLExbNDddLExbNTZdXX0sJ3NwZWFrLW51bWVyYWwnOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFsyNl0sTFs0N11dfSwnc3BlYWstcHVuY3R1YXRpb24nOnsnY3NzUHJvcEJpdHMnOjAsJ2Nzc0xpdEdyb3VwJzpbTFs0M10sTFs0N10sTFs1NF1dfSwnc3BlZWNoLXJhdGUnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFsxMl0sTFs0N10sTFs1Ml1dfSwnc3RyZXNzJzp7J2Nzc1Byb3BCaXRzJzo1LCdjc3NMaXRHcm91cCc6W0xbNDddXX0sJ3RhYmxlLWxheW91dCc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ1XSxMWzQ3XV19LCd0ZXh0LWFsaWduJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMzBdLExbNDJdLExbNDddLExbNTBdXX0sJ3RleHQtZGVjb3JhdGlvbic6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzE4XSxMWzQ3XSxMWzU0XV19LCd0ZXh0LWluZGVudCc6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzQ3XV19LCd0ZXh0LW92ZXJmbG93Jzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMjVdXX0sJ3RleHQtc2hhZG93Jzp7J2Nzc0V4dHJhJzpjWzFdLCdjc3NQcm9wQml0cyc6NywnY3NzTGl0R3JvdXAnOltMWzBdLExbMzVdLExbNDhdLExbNTRdXX0sJ3RleHQtdHJhbnNmb3JtJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbMjFdLExbNDddLExbNTRdXX0sJ3RleHQtd3JhcCc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzMzXSxMWzU0XSxMWzU1XV19LCd0b3AnOnsnY3NzUHJvcEJpdHMnOjM3LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ3VuaWNvZGUtYmlkaSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzIzXSxMWzQ3XSxMWzU1XV19LCd2ZXJ0aWNhbC1hbGlnbic6eydjc3NQcm9wQml0cyc6NSwnY3NzTGl0R3JvdXAnOltMWzEwXSxMWzI0XSxMWzQ3XV19LCd2aXNpYmlsaXR5Jzp7J2Nzc1Byb3BCaXRzJzozMiwnY3NzTGl0R3JvdXAnOltMWzQ0XSxMWzQ2XSxMWzQ3XSxMWzYzXV19LCd2b2ljZS1mYW1pbHknOnsnY3NzRXh0cmEnOmNbMF0sJ2Nzc1Byb3BCaXRzJzo4LCdjc3NMaXRHcm91cCc6W0xbMjJdLExbMzVdLExbNDddXX0sJ3ZvbHVtZSc6eydjc3NQcm9wQml0cyc6MSwnY3NzTGl0R3JvdXAnOltMWzE2XSxMWzQ3XSxMWzUyXV19LCd3aGl0ZS1zcGFjZSc6eydjc3NQcm9wQml0cyc6MCwnY3NzTGl0R3JvdXAnOltMWzhdLExbNDddLExbNTVdXX0sJ3dpZHRoJzp7J2Nzc1Byb3BCaXRzJzozMywnY3NzTGl0R3JvdXAnOltMWzM4XSxMWzQ3XV19LCd3b3JkLXNwYWNpbmcnOnsnY3NzUHJvcEJpdHMnOjUsJ2Nzc0xpdEdyb3VwJzpbTFs0N10sTFs1NV1dfSwnd29yZC13cmFwJzp7J2Nzc1Byb3BCaXRzJzowLCdjc3NMaXRHcm91cCc6W0xbNDFdLExbNTVdXX0sJ3otaW5kZXgnOnsnY3NzUHJvcEJpdHMnOjY5LCdjc3NMaXRHcm91cCc6W0xbMzhdLExbNDddXX0sJ3pvb20nOnsnY3NzUHJvcEJpdHMnOjEsJ2Nzc0xpdEdyb3VwJzpbTFs1NV1dfX19KSgpO2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyl7d2luZG93Wydjc3NTY2hlbWEnXT1jc3NTY2hlbWF9DQovLyBDb3B5cmlnaHQgKEMpIDIwMTEgR29vZ2xlIEluYy4NCi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQovLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KdmFyIGxleENzczt2YXIgZGVjb2RlQ3NzOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGQocyl7dmFyIGk9cGFyc2VJbnQocy5zdWJzdHJpbmcoMSksMTYpO2lmKGk+MHhmZmZmKXtyZXR1cm4gaS09MHgxMDAwMCxTdHJpbmcuZnJvbUNoYXJDb2RlKDB4ZDgwMCsoaT4+MTApLDB4ZGMwMCsoaSYweDNGRikpfWVsc2UgaWYoaT09aSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoaSl9ZWxzZSBpZihzWzFdPCcgJyl7cmV0dXJuJyd9ZWxzZXtyZXR1cm4gc1sxXX19ZnVuY3Rpb24gZShzLGkpe3JldHVybiciJytzLnJlcGxhY2UoL1tcdTAwMDAtXHUwMDFmXFxcIjw+XS9nLGkpKyciJ31mdW5jdGlvbiBhKGkpe3JldHVybiBjW2ldfHwoY1tpXT0nXFwnK2kuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikrJyAnKX1mdW5jdGlvbiBiKGkpe3JldHVybiBmW2ldfHwoZltpXT0oaTwnXHgxMCc/JyUwJzonJScpK2kuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpfXZhciBjPXsnXFwnOidcXFxcJ307dmFyIGY9eydcXCc6JyU1Yyd9O3ZhciBnPSdbXFx0XFxuXFxmIF0nO3ZhciBXPWcrJyonO3ZhciBOPSdbXFxuXFxmXSc7dmFyIGg9J1tcXHVkODAwLVxcdWRiZmZdW1xcdWRjMDAtXFx1ZGZmZl0nO3ZhciBrPSdbXFx1MDA4MC1cXHVkN2ZmXFx1ZTAwMC1cXHVmZmZkXXwnK2g7dmFyIFU9J1swLTlhLWZBLUZdezEsNn0nK2crJz8nO3ZhciBsPSdcXFxcJytVO3ZhciBFPScoPzonK1UrJ3xbXFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHVkN2ZmXFx1ZTAwMFxcdWZmZmRdfCcraCsnKSc7dmFyIG09J1xcXFwnK0U7dmFyIG89Jyg/OltcXHRcXHgyMVxceDIzLVxceDI2XFx4MjgtXFx4NWJcXHg1ZC1cXHg3ZV18JytrKyd8JyttKycpJzt2YXIgcD0nW15cJyJcXG5cXGZcXFxcXXxcXFxcW1xcc1xcU10nO3ZhciBxPSciKD86XCd8JytwKycpKiInKyd8XCcoPzpcInwnK3ArJykqXCcnO3ZhciByPSdbLStdPyg/OlswLTldKyg/OlsuXVswLTldKyk/fFsuXVswLTldKyknO3ZhciB0PScoPzpbYS16QS1aX118JytrKyd8JyttKycpJzt2YXIgdT0nKD86W2EtekEtWjAtOV8tXXwnK2srJ3wnK20rJyknO3ZhciB2PXUrJysnO3ZhciBJPSctPycrdCt1KycqJzt2YXIgQT0nQCcrSTt2YXIgSD0nIycrdjt2YXIgdz1yO3ZhciB4PScoPzpAPy0/Jyt0Kyd8IyknK3UrJyonO3ZhciBQPXIrJyUnO3ZhciBEPXIrSTt2YXIgeT1yKycoPzolfCcrSSsnKT8nO3ZhciB6PSd1cmxbKF0nK1crJyg/OicrcSsnfCcrbysnKiknK1crJ1spXSc7dmFyIEI9J1VbK11bMC05QS1GP117MSw2fSg/Oi1bMC05QS1GXXsxLDZ9KT8nO3ZhciBDPSc8XCEtLSc7dmFyIEY9Jy0tPic7dmFyIFM9ZysnKyc7dmFyIEc9Jy8oPzpbKl1bXipdKlsqXSsoPzpbXi9dW14qXSpbKl0rKSovfC9bXlxcblxcZl0qKSc7dmFyIEo9Jyg/IXVybFsoXSknK0krJ1soXSc7dmFyIEs9J349Jzt2YXIgTD0nW3xdPSc7dmFyIE09J1teXT0nO3ZhciBPPSdbJF09Jzt2YXIgUT0nWypdPSc7dmFyIFI9J1t+fF4kKl09Jzt2YXIgVD0nW14iXCdcXFxcL118Lyg/IVsvKl0pJzt2YXIgVj0nXFx1RkVGRic7dmFyIFg9bmV3IFJlZ0V4cChbVixCLHosSix4LHEseSxDLEYsUyxHLFIsVF0uam9pbigifCIpLCdnaScpO2RlY29kZUNzcz1mdW5jdGlvbihpKXtyZXR1cm4gaS5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFwoPzonK0UrJ3wnK04rJyknLCdnJyksZCl9O2xleENzcz1mdW5jdGlvbihzKXtzPScnK3M7dmFyIFk9cy5yZXBsYWNlKC9cclxuPy9nLCdcbicpLm1hdGNoKFgpfHxbXTt2YXIgaj0wO3ZhciBaPScgJztmb3IodmFyIGk9MCxuPVkubGVuZ3RoO2k8bjsrK2kpe3ZhciAkPWRlY29kZUNzcyhZW2ldKTt2YXIgXz0kLmxlbmd0aDt2YXIgY2M9JC5jaGFyQ29kZUF0KDApOyQ9KGNjPT0nIicuY2hhckNvZGVBdCgwKXx8Y2M9PSdcJycuY2hhckNvZGVBdCgwKSk/ZSgkLnN1YnN0cmluZygxLF8tMSksYSk6KGNjPT0nLycuY2hhckNvZGVBdCgwKSYmXz4xfHwkPT0nXFwnfHwkPT1GfHwkPT1DfHwkPT0nXHVmZWZmJ3x8Y2M8PScgJy5jaGFyQ29kZUF0KDApKT8nICc6L3VybFwoL2kudGVzdCgkKT8ndXJsKCcrZSgkLnJlcGxhY2UobmV3IFJlZ0V4cCgnXnVybFxcKCcrVysnWyJcJ10/fFsiXCddPycrVysnXFwpJCcsJ2dpJyksJycpLGIpKycpJzokO2lmKFohPSR8fCQhPScgJyl7WVtqKytdPVo9JH19WS5sZW5ndGg9ajtyZXR1cm4gWX19KSgpO2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyl7d2luZG93WydsZXhDc3MnXT1sZXhDc3M7d2luZG93WydkZWNvZGVDc3MnXT1kZWNvZGVDc3N9DQovLyBDb3B5cmlnaHQgKEMpIDIwMTEgR29vZ2xlIEluYy4NCi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQovLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KdmFyIHNhbml0aXplQ3NzUHJvcGVydHk9KGZ1bmN0aW9uKCl7dmFyIE49J3VybCgiYWJvdXQ6YmxhbmsiKSc7dmFyIGE9L1tcblxmXHJcIlwnKCkqPD5dL2c7dmFyIGI9eydcbic6JyUwYScsJ1xmJzonJTBjJywnXHInOiclMGQnLCciJzonJTIyJywnXCcnOiclMjcnLCcoJzonJTI4JywnKSc6JyUyOScsJyonOiclMmEnLCc8JzonJTNjJywnPic6JyUzZSd9O2Z1bmN0aW9uIGMocyl7aWYoJ3N0cmluZyc9PT10eXBlb2Ygcyl7cmV0dXJuJ3VybCgiJytzLnJlcGxhY2UoYSxkKSsnIiknfWVsc2V7cmV0dXJuIE59fWZ1bmN0aW9uIGQoaCl7cmV0dXJuIGJbaF19dmFyIFU9bmV3IFJlZ0V4cCgnXicrJyg/OicrJyhbXjpcLz8jIF0rKScrJzopPycpO3ZhciBBPS9eKD86aHR0cHM/fG1haWx0bykkL2k7ZnVuY3Rpb24gZShoLHAsbil7aWYoIW4pe3JldHVybiBudWxsfXZhciBpPSgnJytoKS5tYXRjaChVKTtpZihpJiYoIWlbMV18fEEudGVzdChpWzFdKSkpe3JldHVybiBuKGgscCl9ZWxzZXtyZXR1cm4gbnVsbH19ZnVuY3Rpb24gdShoKXt2YXIgbT17fTtmb3IodmFyIGk9aC5sZW5ndGg7LS1pPj0wOyl7dmFyIGs9aFtpXTtmb3IodmFyIGo9ay5sZW5ndGg7LS1qPj0wOyl7bVtrW2pdXT1nfX1yZXR1cm4gbX1mdW5jdGlvbiBmKHQscyl7dmFyIHA9MSxoPXMrMSxuPXQubGVuZ3RoO3doaWxlKGg8biYmcCl7dmFyIGk9dFtoKytdO3ArPShpPT09JygnPzE6aT09PScpJz8tMTowKX1yZXR1cm4gaH12YXIgZz17fTtyZXR1cm4gZnVuY3Rpb24ocCxoLHQsbyl7dmFyIGo9aC5jc3NQcm9wQml0czt2YXIgcT1qJihDU1NfUFJPUF9CSVRfUVNUUklOR19DT05URU5UfENTU19QUk9QX0JJVF9RU1RSSU5HX1VSTCk7dmFyIGw9TmFOO3ZhciBpPTAsaz0wO2Zvcig7aTx0Lmxlbmd0aDsrK2kpe3ZhciBtPXRbaV0udG9Mb3dlckNhc2UoKTt2YXIgbj1tLmNoYXJDb2RlQXQoMCkscixzLHYsdyx4O3ZhciB5LHo7bT0oKG49PT0nICcuY2hhckNvZGVBdCgwKSk/Jyc6KG49PT0nIicuY2hhckNvZGVBdCgwKSk/KChxPT09Q1NTX1BST1BfQklUX1FTVFJJTkdfVVJMJiZvKT8oYyhlKGRlY29kZUNzcyh0W2ldLnN1YnN0cmluZygxLG0ubGVuZ3RoLTEpKSxwLG8pKSk6KHE9PT1DU1NfUFJPUF9CSVRfUVNUUklOR19DT05URU5UKT9tOicnKToobj09PScjJy5jaGFyQ29kZUF0KDApJiYvXiMoPzpbMC05YS1mXXszfSl7MSwyfSQvLnRlc3QobSkpPyhqJkNTU19QUk9QX0JJVF9IQVNIX1ZBTFVFP206JycpOignMCcuY2hhckNvZGVBdCgwKTw9biYmbjw9JzknLmNoYXJDb2RlQXQoMCkpPygoaiZDU1NfUFJPUF9CSVRfUVVBTlRJVFkpPygoaiZDU1NfUFJPUF9CSVRfWl9JTkRFWCk/KG0ubWF0Y2goL15cZHsxLDd9JC8pP206JycpOm0pOicnKToocj1tLmNoYXJDb2RlQXQoMSkscz1tLmNoYXJDb2RlQXQoMiksdj0nMCcuY2hhckNvZGVBdCgwKTw9ciYmcjw9JzknLmNoYXJDb2RlQXQoMCksdz0nMCcuY2hhckNvZGVBdCgwKTw9cyYmczw9JzknLmNoYXJDb2RlQXQoMCksKG49PT0nKycuY2hhckNvZGVBdCgwKSYmKHZ8fChyPT09Jy4nLmNoYXJDb2RlQXQoMCkmJncpKSkpPygoaiZDU1NfUFJPUF9CSVRfUVVBTlRJVFkpPygoaiZDU1NfUFJPUF9CSVRfWl9JTkRFWCk/KG0ubWF0Y2goL15cK1xkezEsN30kLyk/bTonJyk6KCh2PycnOicwJykrbS5zdWJzdHJpbmcoMSkpKTonJyk6KG49PT0nLScuY2hhckNvZGVBdCgwKSYmKHZ8fChyPT09Jy4nLmNoYXJDb2RlQXQoMCkmJncpKSk/KChqJkNTU19QUk9QX0JJVF9ORUdBVElWRV9RVUFOVElUWSk/KChqJkNTU19QUk9QX0JJVF9aX0lOREVYKT8obS5tYXRjaCgvXlwtXGR7MSw3fSQvKT9tOicnKTooKHY/Jy0nOictMCcpK20uc3Vic3RyaW5nKDEpKSk6KChqJkNTU19QUk9QX0JJVF9RVUFOVElUWSk/JzAnOicnKSk6KG49PT0nLicuY2hhckNvZGVBdCgwKSYmdik/KChqJkNTU19QUk9QX0JJVF9RVUFOVElUWSk/JzAnK206JycpOigndXJsKCc9PT1tLnN1YnN0cmluZygwLDQpKT8oKG8mJihxJkNTU19QUk9QX0JJVF9RU1RSSU5HX1VSTCkpP2MoZSh0W2ldLnN1YnN0cmluZyg1LG0ubGVuZ3RoLTIpLHAsbykpOicnKTooKG0uY2hhckF0KG0ubGVuZ3RoLTEpPT09JygnKSYmKHg9Zih0LGkpLHQuc3BsaWNlKGkseC1pLG09dC5zbGljZShpLHgpLmpvaW4oJyAnKSkpLHk9aC5jc3NMaXRHcm91cCx6PSh5PyhoLmNzc0xpdE1hcHx8KGguY3NzTGl0TWFwPXUoeSkpKTpnKSwoelttXT09PWd8fGguY3NzRXh0cmEmJmguY3NzRXh0cmEudGVzdChtKSkpP206KC9eXHcrJC8udGVzdChtKSYmKHE9PT1DU1NfUFJPUF9CSVRfUVNUUklOR19DT05URU5UKSk/KGwrMT09PWs/KHRbbF09dFtsXS5zdWJzdHJpbmcoMCx0W2xdLmxlbmd0aC0xKSsnICcrbSsnIicsbT0nJyk6KGw9aywnIicrbSsnIicpKTonJyk7aWYobSl7dFtrKytdPW19fWlmKGs9PT0xJiZ0WzBdPT09Til7az0wfXQubGVuZ3RoPWt9fSkoKTtmdW5jdGlvbiBzYW5pdGl6ZUNzc1NlbGVjdG9ycyhzLGEpe3ZhciBoPVtdO3ZhciBiPVtdO3ZhciBrPTAsaTtmb3IoaT0wO2k8cy5sZW5ndGg7KytpKXtpZighKHNbaV09PScgJyYmKHNbaS0xXT09Jz4nfHxzW2krMV09PSc+JykpKXtzW2srK109c1tpXX19cy5sZW5ndGg9azt2YXIgbj1zLmxlbmd0aCxjPTA7Zm9yKGk9MDtpPG47KytpKXtpZihzW2ldPT0nLCcpe3AoYyxpKTtjPWkrMX19cChjLG4pO2Z1bmN0aW9uIHAoYyxlKXt2YXIgZD1mYWxzZTtpZihzW2NdPT09JyAnKXsrK2N9aWYoZS0xIT09YyYmc1tlXT09PScgJyl7LS1lfXZhciBvPVtdO3ZhciBsPWM7dmFyIGY9Jyc7Zm9yKHZhciBpPWM7aTxlOysraSl7dmFyIHQ9c1tpXTt2YXIgZz0odD09PSc+Jyk7aWYoZ3x8dD09PScgJyl7Zj1qKGwsaSxmYWxzZSk7aWYoIWZ8fChnJiYvXmh0bWwvaS50ZXN0KGYpKSl7cmV0dXJufWw9aSsxO28ucHVzaChmLGc/JyA+ICc6JyAnKX19Zj1qKGwsZSx0cnVlKTtpZighZil7cmV0dXJufW8ucHVzaChmKTtmdW5jdGlvbiBqKGMsZSxxKXt2YXIgcj1jLHU9ZTt2YXIgdix3LHgsdCx5O3Y9Jyc7aWYoYzxlKXt0PXNbY10udG9Mb3dlckNhc2UoKTtpZih0PT09JyonfHwodD09PSdib2R5JyYmYysxIT09ZSYmIXEpfHwoJ251bWJlcic9PT10eXBlb2YoeT1odG1sNC5FTEVNRU5UU1t0XSkmJiEoeSZodG1sNC5lZmxhZ3MuVU5TQUZFKSkpeysrYzt2PXR9fXc9Jyc7d2hpbGUoYzxlKXt0PXNbY107aWYodC5jaGFyQXQoMCk9PT0nIycpe2lmKC9eI198X18kfFteIzAtOUEtWmEtejpfXC1dLy50ZXN0KHQpKXtyZXR1cm4gbnVsbH13Kz10KyctJythfWVsc2UgaWYodD09PScuJyl7aWYoKytjPGUmJi9eWzAtOUEtWmEtejpfXC1dKyQvLnRlc3QodD1zW2NdKSYmIS9eX3xfXyQvLnRlc3QodCkpe3crPScuJyt0fWVsc2V7cmV0dXJuIG51bGx9fWVsc2V7YnJlYWt9KytjfXg9Jyc7aWYoYzxlJiZzW2NdPT09JzonKXt0PXNbKytjXTtpZih0PT09J3Zpc2l0ZWQnfHx0PT09J2xpbmsnKXtpZighL15bYSpdPyQvLnRlc3Qodikpe3JldHVybiBudWxsfWQ9dHJ1ZTt4PSc6Jyt0O3Y9J2EnOysrY319aWYoYz09PWUpe3JldHVybiB2K3creH1yZXR1cm4gbnVsbH12YXIgbT1vLmpvaW4oJycpO2lmKC9eYm9keVxiLy50ZXN0KG0pKXttPScudmRvYy1ib2R5X19fLicrYSttLnN1YnN0cmluZyg0KX1lbHNle209Jy4nK2ErJyAnK219KGQ/aDpiKS5wdXNoKG0pfXJldHVybltiLGhdfTt2YXIgc2FuaXRpemVTdHlsZXNoZWV0PShmdW5jdGlvbigpe3ZhciBhPXt9O3ZhciBjPXsnYnJhaWxsZSc6YSwnZW1ib3NzZWQnOmEsJ2hhbmRoZWxkJzphLCdwcmludCc6YSwncHJvamVjdGlvbic6YSwnc2NyZWVuJzphLCdzcGVlY2gnOmEsJ3R0eSc6YSwndHYnOmF9O2Z1bmN0aW9uIHMoYil7dmFyIGU9ZmFsc2U7Zm9yKHZhciBpPTAsbj1iLmxlbmd0aDtpPG4tMTsrK2kpe3ZhciB0PWJbaV07aWYoJzonPT09YltpKzFdKXtlPSEoY3NzU2NoZW1hW3RdLmNzc1Byb3BCaXRzJkNTU19QUk9QX0JJVF9BTExPV0VEX0lOX0xJTkspfWlmKGUpe2JbaV09Jyd9aWYoJzsnPT09dCl7ZT1mYWxzZX19cmV0dXJuIGIuam9pbignJyl9cmV0dXJuIGZ1bmN0aW9uKGIsZCxvKXt2YXIgZT12b2lkIDA7dmFyIGY9W107dmFyIGc9ZmFsc2U7cGFyc2VDc3NTdHlsZXNoZWV0KGIse3N0YXJ0U3R5bGVzaGVldDpmdW5jdGlvbigpe2U9W119LGVuZFN0eWxlc2hlZXQ6ZnVuY3Rpb24oKXt9LHN0YXJ0QXRydWxlOmZ1bmN0aW9uKGksail7aWYoZyl7aT1udWxsfWVsc2UgaWYoaT09PSdAbWVkaWEnKXtqPWouZmlsdGVyKGZ1bmN0aW9uKG0pe3JldHVybiBjW21dPT1hfSk7aWYoai5sZW5ndGgpe2UucHVzaChpLGouam9pbignLCcpLCd7Jyl9ZWxzZXtpPW51bGx9fWVsc2V7aWYoaT09PSdAaW1wb3J0Jyl7aWYod2luZG93LmNvbnNvbGUpe3dpbmRvdy5jb25zb2xlLmxvZygnQGltcG9ydCAnK2ouam9pbignICcpKycgZWxpZGVkJyl9fWk9bnVsbH1nPSFpO2YucHVzaChpKX0sZW5kQXRydWxlOmZ1bmN0aW9uKCl7dmFyIGk9Zi5wb3AoKTtpZighZyl7ZS5wdXNoKCc7Jyl9aCgpfSxzdGFydEJsb2NrOmZ1bmN0aW9uKCl7aWYoIWcpe2UucHVzaCgneycpfX0sZW5kQmxvY2s6ZnVuY3Rpb24oKXtpZighZyl7ZS5wdXNoKCd9Jyk7Zz10cnVlfX0sc3RhcnRSdWxlc2V0OmZ1bmN0aW9uKGkpe3ZhciBqPXZvaWQgMDt2YXIgcj1mYWxzZTtpZighZyl7dmFyIGs9c2FuaXRpemVDc3NTZWxlY3RvcnMoaSxkKTt2YXIgbD1rWzBdO2o9a1sxXTtpZighbC5sZW5ndGgmJiFqLmxlbmd0aCl7Zz10cnVlfWVsc2V7dmFyIG09bC5qb2luKCcsICcpO2lmKCFtKXttPSdoZWFkID4gaHRtbCc7cj10cnVlfWUucHVzaChtLCd7Jyl9fWYucHVzaChnP251bGw6e2hpc3RvcnlTZW5zaXRpdmVTZWxlY3RvcnM6aixlbmRPZlNlbGVjdG9yczplLmxlbmd0aC0xLHJlbW92ZUhpc3RvcnlJbnNlbnNpdGl2ZVNlbGVjdG9yczpyfSl9LGVuZFJ1bGVzZXQ6ZnVuY3Rpb24oKXt2YXIgcj1mLnBvcCgpO3ZhciBwPWUubGVuZ3RoO2lmKCFnKXtlLnB1c2goJ30nKTtpZihyKXt2YXIgaT1yLmhpc3RvcnlTZW5zaXRpdmVTZWxlY3RvcnM7aWYoaS5sZW5ndGgpe3ZhciBqPWUuc2xpY2Uoci5lbmRPZlNlbGVjdG9ycyk7ZS5wdXNoKGkuam9pbignLCAnKSxzKGopKX19fWlmKHImJnIucmVtb3ZlSGlzdG9yeUluc2Vuc2l0aXZlU2VsZWN0b3JzKXtlLnNwbGljZShyLmVuZE9mU2VsZWN0b3JzLTEscCsxKX1oKCl9LGRlY2xhcmF0aW9uOmZ1bmN0aW9uKHAsdil7aWYoIWcpe3ZhciBpPWNzc1NjaGVtYVtwXTtpZihpKXtzYW5pdGl6ZUNzc1Byb3BlcnR5KHAsaSx2LG8pO2lmKHYubGVuZ3RoKXtlLnB1c2gocCwnOicsdi5qb2luKCcgJyksJzsnKX19fX19KTtmdW5jdGlvbiBoKCl7Zz1mLmxlbmd0aCE9PTAmJmZbZi5sZW5ndGgtMV0hPT1udWxsfXJldHVybiBlLmpvaW4oJycpfX0pKCk7aWYodHlwZW9mIHdpbmRvdyE9PSd1bmRlZmluZWQnKXt3aW5kb3dbJ3Nhbml0aXplQ3NzUHJvcGVydHknXT1zYW5pdGl6ZUNzc1Byb3BlcnR5O3dpbmRvd1snc2FuaXRpemVDc3NTZWxlY3RvcnMnXT1zYW5pdGl6ZUNzc1NlbGVjdG9yczt3aW5kb3dbJ3Nhbml0aXplU3R5bGVzaGVldCddPXNhbml0aXplU3R5bGVzaGVldH0NCi8vIENvcHlyaWdodCAoQykgMjAxMCBHb29nbGUgSW5jLg0KLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7DQovLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLA0KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQp2YXIgcGFyc2VDc3NTdHlsZXNoZWV0O3ZhciBwYXJzZUNzc0RlY2xhcmF0aW9uczsoZnVuY3Rpb24oKXtwYXJzZUNzc1N0eWxlc2hlZXQ9ZnVuY3Rpb24oZSxoKXt2YXIgdD1sZXhDc3MoZSk7aWYoaC5zdGFydFN0eWxlc2hlZXQpe2guc3RhcnRTdHlsZXNoZWV0KCl9Zm9yKHZhciBpPTAsbj10Lmxlbmd0aDtpPG47KXtpPXRbaV09PT0nICc/aSsxOmEodCxpLG4saCl9aWYoaC5lbmRTdHlsZXNoZWV0KXtoLmVuZFN0eWxlc2hlZXQoKX19O2Z1bmN0aW9uIGEodCxpLG4saCl7aWYoaTxuKXt2YXIgZT10W2ldO2lmKGUuY2hhckF0KDApPT09J0AnKXtyZXR1cm4gYih0LGksbixoLHRydWUpfWVsc2V7cmV0dXJuIHIodCxpLG4saCl9fWVsc2V7cmV0dXJuIGl9fWZ1bmN0aW9uIGIodCxpLG4saCxqKXt2YXIgaz1pKys7d2hpbGUoaTxuJiZ0W2ldIT09J3snJiZ0W2ldIT09JzsnKXsrK2l9aWYoaTxuJiYoanx8dFtpXT09PSc7Jykpe3ZhciBzPWsrMSxlPWk7aWYoczxuJiZ0W3NdPT09JyAnKXsrK3N9aWYoZT5zJiZ0W2UtMV09PT0nICcpey0tZX1pZihoLnN0YXJ0QXRydWxlKXtoLnN0YXJ0QXRydWxlKHRba10udG9Mb3dlckNhc2UoKSx0LnNsaWNlKHMsZSkpfWk9KHRbaV09PT0neycpP2ModCxpLG4saCk6aSsxO2lmKGguZW5kQXRydWxlKXtoLmVuZEF0cnVsZSgpfX1yZXR1cm4gaX1mdW5jdGlvbiBjKHQsaSxuLGgpeysraTtpZihoLnN0YXJ0QmxvY2spe2guc3RhcnRCbG9jaygpfXdoaWxlKGk8bil7dmFyIGU9dFtpXS5jaGFyQXQoMCk7aWYoZT09J30nKXsrK2k7YnJlYWt9aWYoZT09PScgJ3x8ZT09PSc7Jyl7aT1pKzF9ZWxzZSBpZihlPT09J0AnKXtpPWIodCxpLG4saCxmYWxzZSl9ZWxzZSBpZihlPT09J3snKXtpPWModCxpLG4saCl9ZWxzZXtpPXIodCxpLG4saCl9fWlmKGguZW5kQmxvY2spe2guZW5kQmxvY2soKX1yZXR1cm4gaX1mdW5jdGlvbiByKHQsaSxuLGgpe3ZhciBzPWksZT1kKHQsaSxuLHRydWUpO2lmKGU8MCl7ZT1+ZTtyZXR1cm4gaT09PWU/ZSsxOmV9aT1lO2lmKGU+cyYmdFtlLTFdPT09JyAnKXstLWV9dmFyIGo9dFtpXTsrK2k7aWYoaiE9PSd7Jyl7cmV0dXJuIGl9aWYoaC5zdGFydFJ1bGVzZXQpe2guc3RhcnRSdWxlc2V0KHQuc2xpY2UocyxlKSl9d2hpbGUoaTxuKXtqPXRbaV07aWYoaj09PSd9Jyl7KytpO2JyZWFrfWlmKGo9PT0nICcpe2k9aSsxfWVsc2V7aT1nKHQsaSxuLGgpfX1pZihoLmVuZFJ1bGVzZXQpe2guZW5kUnVsZXNldCgpfXJldHVybiBpPG4/aSsxOml9ZnVuY3Rpb24gZCh0LGksbixlKXt2YXIgcz1pO3ZhciBoO3ZhciBqPVtdLGs9LTE7Zm9yKDtpPG47KytpKXtoPXRbaV0uY2hhckF0KDApO2lmKGg9PT0nWyd8fGg9PT0nKCcpe2pbKytrXT1ofWVsc2UgaWYoKGg9PT0nXScmJmpba109PT0nWycpfHwoaD09PScpJyYmaltrXT09PScoJykpey0ta31lbHNlIGlmKGg9PT0neyd8fGg9PT0nfSd8fGg9PT0nOyd8fGg9PT0nQCd8fChoPT09JzonJiYhZSkpe2JyZWFrfX1pZihrPj0wKXtpPX4oaSsxKX1yZXR1cm4gaX12YXIgZj0vXi0/W2Etel0vaTtmdW5jdGlvbiBnKHQsaSxuLGgpe3ZhciBwPXRbaSsrXTtpZighZi50ZXN0KHApKXtyZXR1cm4gaSsxfXZhciBrO2lmKGk8biYmdFtpXT09PScgJyl7KytpfWlmKGk9PW58fHRbaV0hPT0nOicpe3doaWxlKGk8biYmKGs9dFtpXSkhPT0nOycmJmshPT0nfScpeysraX1yZXR1cm4gaX0rK2k7aWYoaTxuJiZ0W2ldPT09JyAnKXsrK2l9dmFyIHM9aSxlPWQodCxpLG4sZmFsc2UpO2lmKGU8MCl7ZT1+ZX1lbHNle3ZhciB2PVtdLGw9MDtmb3IodmFyIGo9cztqPGU7KytqKXtrPXRbal07aWYoayE9PScgJyl7dltsKytdPWt9fWlmKGU8bil7ZG97az10W2VdO2lmKGs9PT0nOyd8fGs9PT0nfScpe2JyZWFrfWw9MH13aGlsZSgrK2U8bik7aWYoaz09PSc7Jyl7KytlfX1pZihsJiZoLmRlY2xhcmF0aW9uKXtoLmRlY2xhcmF0aW9uKHAudG9Mb3dlckNhc2UoKSx2KX19cmV0dXJuIGV9cGFyc2VDc3NEZWNsYXJhdGlvbnM9ZnVuY3Rpb24oZSxoKXt2YXIgdD1sZXhDc3MoZSk7Zm9yKHZhciBpPTAsbj10Lmxlbmd0aDtpPG47KXtpPXRbaV0hPT0nICc/Zyh0LGksbixoKTppKzF9fX0pKCk7aWYodHlwZW9mIHdpbmRvdyE9PSd1bmRlZmluZWQnKXt3aW5kb3dbJ3BhcnNlQ3NzU3R5bGVzaGVldCddPXBhcnNlQ3NzU3R5bGVzaGVldDt3aW5kb3dbJ3BhcnNlQ3NzRGVjbGFyYXRpb25zJ109cGFyc2VDc3NEZWNsYXJhdGlvbnN9DQovKiEKICogQGNvcHlyaWdodEAKICovDQp2YXIgaHRtbDQ9e307aHRtbDQuYXR5cGU9e05PTkU6MCxVUkk6MSxVUklfRlJBR01FTlQ6MTEsU0NSSVBUOjIsU1RZTEU6MyxJRDo0LElEUkVGOjUsSURSRUZTOjYsR0xPQkFMX05BTUU6NyxMT0NBTF9OQU1FOjgsQ0xBU1NFUzo5LEZSQU1FX1RBUkdFVDoxMH07aHRtbDQuQVRUUklCUz17Jyo6OmFjY2Vzc2tleSc6MCwnKjo6Y2xhc3MnOjksJyo6OmNvbnRlbnRlZGl0YWJsZSc6MCwnKjo6Y29udGV4dG1lbnUnOjAsJyo6OmRpcic6MCwnKjo6ZHJhZ2dhYmxlJzowLCcqOjpkcm9wem9uZSc6MCwnKjo6aGlkZGVuJzowLCcqOjppZCc6NCwnKjo6bGFuZyc6MCwnKjo6b25hYm9ydCc6MiwnKjo6b25ibHVyJzoyLCcqOjpvbmNhbnBsYXknOjIsJyo6Om9uY2FucGxheXRocm91Z2gnOjIsJyo6Om9uY2hhbmdlJzoyLCcqOjpvbmNsaWNrJzoyLCcqOjpvbmNvbnRleHRtZW51JzoyLCcqOjpvbmN1ZWNoYW5nZSc6MiwnKjo6b25kYmxjbGljayc6MiwnKjo6b25kcmFnJzoyLCcqOjpvbmRyYWdlbmQnOjIsJyo6Om9uZHJhZ2VudGVyJzoyLCcqOjpvbmRyYWdsZWF2ZSc6MiwnKjo6b25kcmFnb3Zlcic6MiwnKjo6b25kcmFnc3RhcnQnOjIsJyo6Om9uZHJvcCc6MiwnKjo6b25kdXJhdGlvbmNoYW5nZSc6MiwnKjo6b25lbXB0aWVkJzoyLCcqOjpvbmVuZGVkJzoyLCcqOjpvbmVycm9yJzoyLCcqOjpvbmZvY3VzJzoyLCcqOjpvbmlucHV0JzoyLCcqOjpvbmludmFsaWQnOjIsJyo6Om9ua2V5ZG93bic6MiwnKjo6b25rZXlwcmVzcyc6MiwnKjo6b25rZXl1cCc6MiwnKjo6b25sb2FkJzoyLCcqOjpvbmxvYWRlZGRhdGEnOjIsJyo6Om9ubG9hZGVkbWV0YWRhdGEnOjIsJyo6Om9ubG9hZHN0YXJ0JzoyLCcqOjpvbm1vdXNlZG93bic6MiwnKjo6b25tb3VzZW1vdmUnOjIsJyo6Om9ubW91c2VvdXQnOjIsJyo6Om9ubW91c2VvdmVyJzoyLCcqOjpvbm1vdXNldXAnOjIsJyo6Om9ubW91c2V3aGVlbCc6MiwnKjo6b25wYXVzZSc6MiwnKjo6b25wbGF5JzoyLCcqOjpvbnBsYXlpbmcnOjIsJyo6Om9ucHJvZ3Jlc3MnOjIsJyo6Om9ucmF0ZWNoYW5nZSc6MiwnKjo6b25yZWFkeXN0YXRlY2hhbmdlJzoyLCcqOjpvbnJlc2V0JzoyLCcqOjpvbnNjcm9sbCc6MiwnKjo6b25zZWVrZWQnOjIsJyo6Om9uc2Vla2luZyc6MiwnKjo6b25zZWxlY3QnOjIsJyo6Om9uc2hvdyc6MiwnKjo6b25zdGFsbGVkJzoyLCcqOjpvbnN1Ym1pdCc6MiwnKjo6b25zdXNwZW5kJzoyLCcqOjpvbnRpbWV1cGRhdGUnOjIsJyo6Om9udm9sdW1lY2hhbmdlJzoyLCcqOjpvbndhaXRpbmcnOjIsJyo6OnNwZWxsY2hlY2snOjAsJyo6OnN0eWxlJzozLCcqOjp0YWJpbmRleCc6MCwnKjo6dGl0bGUnOjAsJ2E6OmhyZWYnOjEsJ2E6OmhyZWZsYW5nJzowLCdhOjptZWRpYSc6MCwnYTo6cmVsJzowLCdhOjp0YXJnZXQnOjAsJ2E6OnR5cGUnOjAsJ2FyZWE6OmFsdCc6MCwnYXJlYTo6Y29vcmRzJzowLCdhcmVhOjpocmVmJzoxLCdhcmVhOjpocmVmbGFuZyc6MCwnYXJlYTo6bWVkaWEnOjAsJ2FyZWE6OnJlbCc6MCwnYXJlYTo6c2hhcGUnOjAsJ2FyZWE6OnRhcmdldCc6MTAsJ2FyZWE6OnR5cGUnOjAsJ2F1ZGlvOjphdXRvcGxheSc6MCwnYXVkaW86OmNvbnRyb2xzJzowLCdhdWRpbzo6bG9vcCc6MCwnYXVkaW86Om1lZGlhZ3JvdXAnOjAsJ2F1ZGlvOjpwcmVsb2FkJzowLCdhdWRpbzo6c3JjJzoxLCdiYXNlOjpocmVmJzoxLCdiYXNlOjp0YXJnZXQnOjEwLCdibG9ja3F1b3RlOjpjaXRlJzoxLCdib2R5OjpvbmFmdGVycHJpbnQnOjIsJ2JvZHk6Om9uYmVmb3JlcHJpbnQnOjIsJ2JvZHk6Om9uYmVmb3JldW5sb2FkJzoyLCdib2R5OjpvbmJsdXInOjIsJ2JvZHk6Om9uZXJyb3InOjIsJ2JvZHk6Om9uZm9jdXMnOjIsJ2JvZHk6Om9uaGFzaGNoYW5nZSc6MiwnYm9keTo6b25sb2FkJzoyLCdib2R5Ojpvbm1lc3NhZ2UnOjIsJ2JvZHk6Om9ub2ZmbGluZSc6MiwnYm9keTo6b25vbmxpbmUnOjIsJ2JvZHk6Om9ucGFnZWhpZGUnOjIsJ2JvZHk6Om9ucGFnZXNob3cnOjIsJ2JvZHk6Om9ucG9wc3RhdGUnOjIsJ2JvZHk6Om9ucmVkbyc6MiwnYm9keTo6b25yZXNpemUnOjIsJ2JvZHk6Om9uc2Nyb2xsJzoyLCdib2R5OjpvbnN0b3JhZ2UnOjIsJ2JvZHk6Om9udW5kbyc6MiwnYm9keTo6b251bmxvYWQnOjIsJ2J1dHRvbjo6YXV0b2ZvY3VzJzowLCdidXR0b246OmRpc2FibGVkJzowLCdidXR0b246OmZvcm0nOjAsJ2J1dHRvbjo6Zm9ybWFjdGlvbic6MSwnYnV0dG9uOjpmb3JtZW5jdHlwZSc6MCwnYnV0dG9uOjpmb3JtbWV0aG9kJzowLCdidXR0b246OmZvcm1ub3ZhbGlkYXRlJzowLCdidXR0b246OmZvcm10YXJnZXQnOjEwLCdidXR0b246Om5hbWUnOjgsJ2J1dHRvbjo6dHlwZSc6MCwnYnV0dG9uOjp2YWx1ZSc6MCwnY2FudmFzOjpoZWlnaHQnOjAsJ2NhbnZhczo6d2lkdGgnOjAsJ2NvbDo6c3Bhbic6MCwnY29sZ3JvdXA6OnNwYW4nOjAsJ2NvbW1hbmQ6OmNoZWNrZWQnOjAsJ2NvbW1hbmQ6OmRpc2FibGVkJzowLCdjb21tYW5kOjppY29uJzoxLCdjb21tYW5kOjpsYWJlbCc6MCwnY29tbWFuZDo6cmFkaW9ncm91cCc6MCwnY29tbWFuZDo6dHlwZSc6MCwnZGVsOjpjaXRlJzoxLCdkZWw6OmRhdGV0aW1lJzowLCdkZXRhaWxzOjpvcGVuJzowLCdlbWJlZDo6aGVpZ2h0JzowLCdlbWJlZDo6c3JjJzoxLCdlbWJlZDo6dHlwZSc6MCwnZW1iZWQ6OndpZHRoJzowLCdmaWVsZHNldDo6ZGlzYWJsZWQnOjAsJ2ZpZWxkc2V0Ojpmb3JtJzowLCdmaWVsZHNldDo6bmFtZSc6OCwnZm9ybTo6YWNjZXB0LWNoYXJzZXQnOjAsJ2Zvcm06OmFjdGlvbic6MSwnZm9ybTo6YXV0b2NvbXBsZXRlJzowLCdmb3JtOjplbmN0eXBlJzowLCdmb3JtOjptZXRob2QnOjAsJ2Zvcm06Om5hbWUnOjcsJ2Zvcm06Om5vdmFsaWRhdGUnOjAsJ2Zvcm06OnRhcmdldCc6MTAsJ2h0bWw6OiBtYW5pZmVzdCc6MSwnaWZyYW1lOjpoZWlnaHQnOjAsJ2lmcmFtZTo6bmFtZSc6NywnaWZyYW1lOjpzYW5kYm94JzowLCdpZnJhbWU6OnNlYW1sZXNzJzowLCdpZnJhbWU6OnNyYyc6MSwnaWZyYW1lOjpzcmNkb2MnOjEwLCdpZnJhbWU6OndpZHRoJzowLCdpbWc6OmFsdCc6MCwnaW1nOjpoZWlnaHQnOjAsJ2ltZzo6aXNtYXAnOjAsJ2ltZzo6bmFtZSc6NywnaW1nOjpzcmMnOjEsJ2ltZzo6dXNlbWFwJzoxMSwnaW1nOjp3aWR0aCc6MCwnaW5wdXQ6OmFjY2VwdCc6MCwnaW5wdXQ6OmFsdCc6MCwnaW5wdXQ6OmF1dG9jb21wbGV0ZSc6MCwnaW5wdXQ6OmF1dG9mb2N1cyc6MCwnaW5wdXQ6OmNoZWNrZWQnOjAsJ2lucHV0OjpkaXJuYW1lJzowLCdpbnB1dDo6ZGlzYWJsZWQnOjAsJ2lucHV0Ojpmb3JtJzowLCdpbnB1dDo6Zm9ybWFjdGlvbic6MSwnaW5wdXQ6OmZvcm1lbmN0eXBlJzowLCdpbnB1dDo6Zm9ybW1ldGhvZCc6MCwnaW5wdXQ6OmZvcm1ub3ZhbGlkYXRlJzowLCdpbnB1dDo6Zm9ybXRhcmdldCc6MTAsJ2lucHV0OjpoZWlnaHQnOjAsJ2lucHV0OjpsaXN0JzowLCdpbnB1dDo6bWF4JzowLCdpbnB1dDo6bWF4bGVuZ3RoJzowLCdpbnB1dDo6bWluJzowLCdpbnB1dDo6bXVsdGlwbGUnOjAsJ2lucHV0OjpuYW1lJzo4LCdpbnB1dDo6cGF0dGVybic6MCwnaW5wdXQ6OnBsYWNlaG9sZGVyJzowLCdpbnB1dDo6cmVhZG9ubHknOjAsJ2lucHV0OjpyZXF1aXJlZCc6MCwnaW5wdXQ6OnN0ZXAnOjAsJ2lucHV0OjpzaXplJzowLCdpbnB1dDo6c3JjJzoxLCdpbnB1dDo6dHlwZSc6MCwnaW5wdXQ6OnZhbHVlJzowLCdpbnB1dDo6d2lkdGgnOjAsJ2luczo6Y2l0ZSc6MSwnaW5zOjpkYXRldGltZSc6MCwna2V5Z2VuOjphdXRvZm9jdXMnOjAsJ2tleWdlbjo6Y2hhbGxlbmdlJzowLCdrZXlnZW46OmRpc2FibGVkJzowLCdrZXlnZW46OmZvcm0nOjAsJ2tleWdlbjo6a2V5dHlwZSc6MCwna2V5Z2VuOjpuYW1lJzo4LCdsYWJlbDo6Zm9yJzo1LCdsYWJlbDo6Zm9ybSc6MCwnbGluazo6aHJlZic6MSwnbGluazo6aHJlZmxhbmcnOjAsJ2xpbms6Om1lZGlhJzowLCdsaW5rOjpyZWwnOjAsJ2xpbms6OnNpemVzJzowLCdsaW5rOjp0eXBlJzowLCdsaTo6dmFsdWUnOjAsJ21hcDo6bmFtZSc6NywnbWVudTo6bGFiZWwnOjAsJ21lbnU6OnR5cGUnOjAsJ21ldGE6OmNoYXJzZXQnOjAsJ21ldGE6OmNvbnRlbnQnOjAsJ21ldGE6Omh0dHAtZXF1aXYnOjAsJ21ldGE6Om5hbWUnOjcsJ21ldGVyOjpmb3JtJzowLCdtZXRlcjo6aGlnaCc6MCwnbWV0ZXI6Omxvdyc6MCwnbWV0ZXI6Om1heCc6MCwnbWV0ZXI6Om1pbic6MCwnbWV0ZXI6Om9wdGltdW0nOjAsJ21ldGVyOjp2YWx1ZSc6MCwnb2JqZWN0OjpkYXRhJzoxLCdvYmplY3Q6OmZvcm0nOjAsJ29iamVjdDo6aGVpZ2h0JzowLCdvYmplY3Q6Om5hbWUnOjgsJ29iamVjdDo6dHlwZSc6MCwnb2JqZWN0Ojp1c2VtYXAnOjExLCdvYmplY3Q6OndpZHRoJzowLCdvbDo6cmV2ZXJzZWQnOjAsJ29sOjpzdGFydCc6MCwnb3B0Z3JvdXA6OmRpc2FibGVkJzowLCdvcHRncm91cDo6bGFiZWwnOjAsJ29wdGlvbjo6ZGlzYWJsZWQnOjAsJ29wdGlvbjo6bGFiZWwnOjAsJ29wdGlvbjo6c2VsZWN0ZWQnOjAsJ29wdGlvbjo6dmFsdWUnOjAsJ291dHB1dDo6Zm9yJzo1LCdvdXRwdXQ6OmZvcm0nOjAsJ291dHB1dDo6bmFtZSc6OCwncGFyYW06Om5hbWUnOjgsJ3BhcmFtOjp2YWx1ZSc6MCwncHJvZ3Jlc3M6OmZvcm0nOjAsJ3Byb2dyZXNzOjptYXgnOjAsJ3Byb2dyZXNzOjp2YWx1ZSc6MCwncTo6Y2l0ZSc6MSwnc2NyaXB0Ojphc3luYyc6MCwnc2NyaXB0OjpjaGFyc2V0JzowLCdzY3JpcHQ6OmRlZmVyJzowLCdzY3JpcHQ6OnNyYyc6MSwnc2NyaXB0Ojp0eXBlJzowLCdzZWxlY3Q6OmF1dG9mb2N1cyc6MCwnc2VsZWN0OjpkaXNhYmxlZCc6MCwnc2VsZWN0Ojpmb3JtJzowLCdzZWxlY3Q6Om11bHRpcGxlJzowLCdzZWxlY3Q6Om5hbWUnOjgsJ3NlbGVjdDo6cmVxdWlyZWQnOjAsJ3NlbGVjdDo6c2l6ZSc6MCwnc291cmNlOjptZWRpYSc6MCwnc291cmNlOjpzcmMnOjEsJ3NvdXJjZTo6dHlwZSc6MCwnc3R5bGU6Om1lZGlhJzowLCdzdHlsZTo6c2NvcGVkJzowLCdzdHlsZTo6dHlwZSc6MCwndGFibGU6OmJvcmRlcic6MCwndGQ6OmNvbHNwYW4nOjAsJ3RkOjpoZWFkZXJzJzo2LCd0ZDo6cm93c3Bhbic6MCwndGV4dGFyZWE6OmF1dG9mb2N1cyc6MCwndGV4dGFyZWE6OmNvbHMnOjAsJ3RleHRhcmVhOjpkaXNhYmxlZCc6MCwndGV4dGFyZWE6OmZvcm0nOjAsJ3RleHRhcmVhOjptYXhsZW5ndGgnOjAsJ3RleHRhcmVhOjpuYW1lJzo4LCd0ZXh0YXJlYTo6cGxhY2Vob2xkZXInOjAsJ3RleHRhcmVhOjpyZWFkb25seSc6MCwndGV4dGFyZWE6OnJlcXVpcmVkJzowLCd0ZXh0YXJlYTo6cm93cyc6MCwndGV4dGFyZWE6OndyYXAnOjAsJ3RoOjpjb2xzcGFuJzowLCd0aDo6aGVhZGVycyc6NiwndGg6OnJvd3NwYW4nOjAsJ3RoOjpzY29wZSc6MCwndGltZTo6ZGF0ZXRpbWUnOjAsJ3RpbWU6OnB1YmRhdGUnOjAsJ3RyYWNrOjpkZWZhdWx0JzowLCd0cmFjazo6a2luZCc6MCwndHJhY2s6OmxhYmVsJzowLCd0cmFjazo6c3JjJzoxLCd0cmFjazo6c3JjbGFuZyc6MCwndmlkZW86OmF1dG9wbGF5JzowLCd2aWRlbzo6Y29udHJvbHMnOjAsJ3ZpZGVvOjpoZWlnaHQnOjAsJ3ZpZGVvOjpsb29wJzowLCd2aWRlbzo6bWVkaWFncm91cCc6MCwndmlkZW86OnBvc3Rlcic6MSwndmlkZW86OnByZWxvYWQnOjAsJ3ZpZGVvOjpzcmMnOjEsJ3ZpZGVvOjp3aWR0aCc6MH07aHRtbDQuZWZsYWdzPXtPUFRJT05BTF9FTkRUQUc6MSxFTVBUWToyLENEQVRBOjQsUkNEQVRBOjgsVU5TQUZFOjE2LEZPTERBQkxFOjMyLFNDUklQVDo2NCxTVFlMRToxMjh9O2h0bWw0LkVMRU1FTlRTPXsnYSc6MCwnYWJicic6MCwnYWRkcmVzcyc6MCwnYXJlYSc6MiwnYXJ0aWNsZSc6MCwnYXNpZGUnOjAsJ2F1ZGlvJzowLCdiJzowLCdiYXNlJzoxOCwnYmRpJzowLCdiZG8nOjAsJ2Jsb2NrcXVvdGUnOjAsJ2JvZHknOjQ5LCdicic6MiwnYnV0dG9uJzowLCdjYW52YXMnOjAsJ2NhcHRpb24nOjAsJ2NpdGUnOjAsJ2NvZGUnOjAsJ2NvbCc6MiwnY29sZ3JvdXAnOjEsJ2NvbW1hbmQnOjIsJ2RhdGFsaXN0JzowLCdkZCc6MSwnZGVsJzowLCdkZXRhaWxzJzowLCdkZm4nOjAsJ2Rpdic6MCwnZGwnOjAsJ2R0JzoxLCdlbSc6MCwnZW1iZWQnOjE4LCdmaWVsZHNldCc6MCwnZmlnY2FwdGlvbic6MCwnZmlndXJlJzowLCdmb290ZXInOjAsJ2Zvcm0nOjAsJ2gxJzowLCdoMic6MCwnaDMnOjAsJ2g0JzowLCdoNSc6MCwnaDYnOjAsJ2hlYWQnOjQ5LCdoZWFkZXInOjAsJ2hncm91cCc6MCwnaHInOjIsJ2h0bWwnOjQ5LCdpJzowLCdpZnJhbWUnOjQsJ2ltZyc6MiwnaW5wdXQnOjIsJ2lucyc6MCwna2JkJzowLCdrZXlnZW4nOjIsJ2xhYmVsJzowLCdsZWdlbmQnOjAsJ2xpJzoxLCdsaW5rJzoxOCwnbWFwJzowLCdtYXJrJzowLCdtZW51JzowLCdtZXRhJzoxOCwnbWV0ZXInOjAsJ25hdic6MCwnbm9zY3JpcHQnOjIwLCdvYmplY3QnOjE2LCdvbCc6MCwnb3B0Z3JvdXAnOjEsJ29wdGlvbic6MSwnb3V0cHV0JzowLCdwJzoxLCdwYXJhbSc6MTgsJ3ByZSc6MCwncHJvZ3Jlc3MnOjAsJ3EnOjAsJ3JwJzoxLCdydCc6MSwncnVieSc6MCwncyc6MCwnc2FtcCc6MCwnc2NyaXB0Jzo4NCwnc2VjdGlvbic6MCwnc2VsZWN0JzowLCdzbWFsbCc6MCwnc291cmNlJzoyLCdzcGFuJzowLCdzdHJvbmcnOjAsJ3N0eWxlJzoxNDgsJ3N1Yic6MCwnc3VtbWFyeSc6MCwnc3VwJzowLCd0YWJsZSc6MCwndGJvZHknOjEsJ3RkJzoxLCd0ZXh0YXJlYSc6OCwndGZvb3QnOjEsJ3RoJzoxLCd0aGVhZCc6MSwndGltZSc6MCwndGl0bGUnOjI0LCd0cic6MSwndHJhY2snOjIsJ3UnOjAsJ3VsJzowLCd2YXInOjAsJ3ZpZGVvJzowLCd3YnInOjJ9O2h0bWw0LnVlZmZlY3RzPXtOT1RfTE9BREVEOjAsU0FNRV9ET0NVTUVOVDoxLE5FV19ET0NVTUVOVDoyfTtodG1sNC5VUklFRkZFQ1RTPXsnYTo6aHJlZic6MiwnYXJlYTo6aHJlZic6MiwnYXVkaW86OnNyYyc6MSwnYmFzZTo6aHJlZic6MiwnYmxvY2txdW90ZTo6Y2l0ZSc6MCwnYnV0dG9uOjpmb3JtYWN0aW9uJzoyLCdjb21tYW5kOjppY29uJzoxLCdkZWw6OmNpdGUnOjAsJ2VtYmVkOjpzcmMnOjEsJ2Zvcm06OmFjdGlvbic6MiwnaHRtbDo6IG1hbmlmZXN0JzoxLCdpZnJhbWU6OnNyYyc6MSwnaW1nOjpzcmMnOjEsJ2lucHV0Ojpmb3JtYWN0aW9uJzoyLCdpbnB1dDo6c3JjJzoxLCdpbnM6OmNpdGUnOjAsJ2xpbms6OmhyZWYnOjIsJ29iamVjdDo6ZGF0YSc6MSwncTo6Y2l0ZSc6MCwnc2NyaXB0OjpzcmMnOjEsJ3NvdXJjZTo6c3JjJzoxLCd0cmFjazo6c3JjJzoxLCd2aWRlbzo6cG9zdGVyJzoxLCd2aWRlbzo6c3JjJzoxfTtodG1sNC5sdHlwZXM9e1VOU0FOREJPWEVEOjIsU0FOREJPWEVEOjEsREFUQTowfTtodG1sNC5MT0FERVJUWVBFUz17J2E6OmhyZWYnOjIsJ2FyZWE6OmhyZWYnOjIsJ2F1ZGlvOjpzcmMnOjEsJ2Jhc2U6OmhyZWYnOjIsJ2Jsb2NrcXVvdGU6OmNpdGUnOjIsJ2J1dHRvbjo6Zm9ybWFjdGlvbic6MiwnY29tbWFuZDo6aWNvbic6MSwnZGVsOjpjaXRlJzoyLCdlbWJlZDo6c3JjJzoxLCdmb3JtOjphY3Rpb24nOjIsJ2h0bWw6OiBtYW5pZmVzdCc6MSwnaWZyYW1lOjpzcmMnOjEsJ2ltZzo6c3JjJzoxLCdpbnB1dDo6Zm9ybWFjdGlvbic6MiwnaW5wdXQ6OnNyYyc6MSwnaW5zOjpjaXRlJzoyLCdsaW5rOjpocmVmJzoyLCdvYmplY3Q6OmRhdGEnOjAsJ3E6OmNpdGUnOjIsJ3NjcmlwdDo6c3JjJzoxLCdzb3VyY2U6OnNyYyc6MSwndHJhY2s6OnNyYyc6MSwndmlkZW86OnBvc3Rlcic6MSwndmlkZW86OnNyYyc6MX07aWYodHlwZW9mIHdpbmRvdyE9PSd1bmRlZmluZWQnKXt3aW5kb3dbJ2h0bWw0J109aHRtbDR9DQovLyBDb3B5cmlnaHQgKEMpIDIwMDYgR29vZ2xlIEluYy4NCi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQovLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KdmFyIGh0bWw9KGZ1bmN0aW9uKGEpe3ZhciBiLGMsZDtpZigndW5kZWZpbmVkJyE9PXR5cGVvZiB3aW5kb3cpe2I9d2luZG93WydwYXJzZUNzc0RlY2xhcmF0aW9ucyddO2M9d2luZG93WydzYW5pdGl6ZUNzc1Byb3BlcnR5J107ZD13aW5kb3dbJ2Nzc1NjaGVtYSddfXZhciBsO2lmKCdzY3JpcHQnPT09J1NDUklQVCcudG9Mb3dlckNhc2UoKSl7bD1mdW5jdGlvbihzKXtyZXR1cm4gcy50b0xvd2VyQ2FzZSgpfX1lbHNle2w9ZnVuY3Rpb24ocyl7cmV0dXJuIHMucmVwbGFjZSgvW0EtWl0vZyxmdW5jdGlvbihlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShlLmNoYXJDb2RlQXQoMCl8MzIpfSl9fXZhciBFPXsnbHQnOic8JywnZ3QnOic+JywnYW1wJzonJicsJ25ic3AnOidcMjQwJywncXVvdCc6JyInLCdhcG9zJzonXCcnfTt2YXIgZj0vXiMoXGQrKSQvO3ZhciBnPS9eI3goWzAtOUEtRmEtZl0rKSQvO2Z1bmN0aW9uIGoobil7bj1sKG4pO2lmKEUuaGFzT3duUHJvcGVydHkobikpe3JldHVybiBFW25dfXZhciBtPW4ubWF0Y2goZik7aWYobSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobVsxXSwxMCkpfWVsc2UgaWYoISEobT1uLm1hdGNoKGcpKSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobVsxXSwxNikpfXJldHVybicnfWZ1bmN0aW9uIGsoXyxuKXtyZXR1cm4gaihuKX12YXIgbz0vXDAvZztmdW5jdGlvbiByKHMpe3JldHVybiBzLnJlcGxhY2UobywnJyl9dmFyIHQ9LyYoI1xkK3wjeFswLTlBLUZhLWZdK3xcdyspOy9nO2Z1bmN0aW9uIHUocyl7cmV0dXJuIHMucmVwbGFjZSh0LGspfXZhciB3PS8mL2c7dmFyIHg9LyYoW15hLXojXXwjKD86W14wLTl4XXx4KD86W14wLTlhLWZdfCQpfCQpfCQpL2dpO3ZhciB5PS9bPF0vZzt2YXIgej0vPi9nO3ZhciBBPS9cIi9nO2Z1bmN0aW9uIEIocyl7cmV0dXJuKCcnK3MpLnJlcGxhY2UodywnJmFtcDsnKS5yZXBsYWNlKHksJyZsdDsnKS5yZXBsYWNlKHosJyZndDsnKS5yZXBsYWNlKEEsJyYjMzQ7Jyl9ZnVuY3Rpb24gQyhlKXtyZXR1cm4gZS5yZXBsYWNlKHgsJyZhbXA7JDEnKS5yZXBsYWNlKHksJyZsdDsnKS5yZXBsYWNlKHosJyZndDsnKX12YXIgRD1uZXcgUmVnRXhwKCdeXFxzKicrJyhbYS16XVthLXotXSopJysnKD86JysoJ1xccyooPSlcXHMqJysnKCcrKCcoXCIpW15cIl0qKFwifCQpJysnfCcrJyhcJylbXlwnXSooXCd8JCknKyd8JysnKD89W2Etel1bYS16LV0qXFxzKj0pJysnfCcrJ1teXCJcJ1xcc10qJykrJyknKSsnKT8nLCdpJyk7dmFyIEY9L14oI1swLTldK3wjeFswLTlhLWZdK3xcdyspOy9pO3ZhciBHPSgnYSxiJy5zcGxpdCgvKCwpLykubGVuZ3RoPT09Myk7dmFyIEg9YS5lZmxhZ3MuQ0RBVEF8YS5lZmxhZ3MuUkNEQVRBO2Z1bmN0aW9uIEkoaCl7cmV0dXJuIGZ1bmN0aW9uKGUscCl7cmV0dXJuIEsoZSxoLHApfX12YXIgSj17fTtmdW5jdGlvbiBLKGUsaSxuKXt2YXIgaD1pO3ZhciBtLHAscTt2YXIgcz1OKGUpO3ZhciB2PXtub01vcmVHVDpmYWxzZSxub01vcmVFbmRDb21tZW50czpmYWxzZX07TShpLHMsMCx2LG4pfWZ1bmN0aW9uIEwoaCxwLGkscyxlKXtyZXR1cm4gZnVuY3Rpb24oKXtNKGgscCxpLHMsZSl9fWZ1bmN0aW9uIE0oaCxpLG4scyxxKXt0cnl7aWYoaC5zdGFydERvYyYmbj09MCl7aC5zdGFydERvYyhxKX12YXIgbSxwLHY7Zm9yKHZhciBfPW4sYjE9aS5sZW5ndGg7XzxiMTspe3ZhciBjMT1pW18rK107dmFyIGQxPWlbX107c3dpdGNoKGMxKXtjYXNlJyYnOmlmKEYudGVzdChkMSkpe2lmKGgucGNkYXRhKXtoLnBjZGF0YSgnJicrZDEscSxKLEwoaCxpLF8scyxxKSl9XysrfWVsc2V7aWYoaC5wY2RhdGEpe2gucGNkYXRhKCImYW1wOyIscSxKLEwoaCxpLF8scyxxKSl9fWJyZWFrO2Nhc2UnPFwvJzppZihtPS9eKFx3KylbXlwnXCJdKi8uZXhlYyhkMSkpe2lmKG1bMF0ubGVuZ3RoPT09ZDEubGVuZ3RoJiZpW18rMV09PT0nPicpe18rPTI7dj1sKG1bMV0pO2lmKGEuRUxFTUVOVFMuaGFzT3duUHJvcGVydHkodikpe2lmKGguZW5kVGFnKXtoLmVuZFRhZyh2LHEsSixMKGgsaSxfLHMscSkpfX19ZWxzZXtfPU8oaSxfLGgscSxKLHMpfX1lbHNle2lmKGgucGNkYXRhKXtoLnBjZGF0YSgnJmx0Oy8nLHEsSixMKGgsaSxfLHMscSkpfX1icmVhaztjYXNlJzwnOmlmKG09L14oXHcrKVxzKlwvPy8uZXhlYyhkMSkpe2lmKG1bMF0ubGVuZ3RoPT09ZDEubGVuZ3RoJiZpW18rMV09PT0nPicpe18rPTI7dj1sKG1bMV0pO2lmKGEuRUxFTUVOVFMuaGFzT3duUHJvcGVydHkodikpe2lmKGguc3RhcnRUYWcpe2guc3RhcnRUYWcodixbXSxxLEosTChoLGksXyxzLHEpKX12YXIgZTE9YS5FTEVNRU5UU1t2XTtpZihlMSZIKXt2YXIgZjE9e25hbWU6dixuZXh0Ol8sZWZsYWdzOmUxfTtfPVIoaSxmMSxoLHEsSixzKX19fWVsc2V7Xz1QKGksXyxoLHEsSixzKX19ZWxzZXtpZihoLnBjZGF0YSl7aC5wY2RhdGEoJyZsdDsnLHEsSixMKGgsaSxfLHMscSkpfX1icmVhaztjYXNlJzxcIS0tJzppZighcy5ub01vcmVFbmRDb21tZW50cyl7Zm9yKHA9XysxO3A8YjE7cCsrKXtpZihpW3BdPT09Jz4nJiYvLS0kLy50ZXN0KGlbcC0xXSkpe2JyZWFrfX1pZihwPGIxKXtfPXArMX1lbHNle3Mubm9Nb3JlRW5kQ29tbWVudHM9dHJ1ZX19aWYocy5ub01vcmVFbmRDb21tZW50cyl7aWYoaC5wY2RhdGEpe2gucGNkYXRhKCcmbHQ7IS0tJyxxLEosTChoLGksXyxzLHEpKX19YnJlYWs7Y2FzZSc8XCEnOmlmKCEvXlx3Ly50ZXN0KGQxKSl7aWYoaC5wY2RhdGEpe2gucGNkYXRhKCcmbHQ7IScscSxKLEwoaCxpLF8scyxxKSl9fWVsc2V7aWYoIXMubm9Nb3JlR1Qpe2ZvcihwPV8rMTtwPGIxO3ArKyl7aWYoaVtwXT09PSc+Jyl7YnJlYWt9fWlmKHA8YjEpe189cCsxfWVsc2V7cy5ub01vcmVHVD10cnVlfX1pZihzLm5vTW9yZUdUKXtpZihoLnBjZGF0YSl7aC5wY2RhdGEoJyZsdDshJyxxLEosTChoLGksXyxzLHEpKX19fWJyZWFrO2Nhc2UnPD8nOmlmKCFzLm5vTW9yZUdUKXtmb3IocD1fKzE7cDxiMTtwKyspe2lmKGlbcF09PT0nPicpe2JyZWFrfX1pZihwPGIxKXtfPXArMX1lbHNle3Mubm9Nb3JlR1Q9dHJ1ZX19aWYocy5ub01vcmVHVCl7aWYoaC5wY2RhdGEpe2gucGNkYXRhKCcmbHQ7PycscSxKLEwoaCxpLF8scyxxKSl9fWJyZWFrO2Nhc2UnPic6aWYoaC5wY2RhdGEpe2gucGNkYXRhKCImZ3Q7IixxLEosTChoLGksXyxzLHEpKX1icmVhaztjYXNlJyc6YnJlYWs7ZGVmYXVsdDppZihoLnBjZGF0YSl7aC5wY2RhdGEoYzEscSxKLEwoaCxpLF8scyxxKSl9YnJlYWt9fWlmKGguZW5kRG9jKXtoLmVuZERvYyhxKX19Y2F0Y2goZSl7aWYoZSE9PUope3Rocm93IGV9fX1mdW5jdGlvbiBOKHMpe3ZhciBlPS8oPFwvfDxcIS0tfDxbIT9dfFsmPD5dKS9nO3MrPScnO2lmKEcpe3JldHVybiBzLnNwbGl0KGUpfWVsc2V7dmFyIHA9W107dmFyIGg9MDt2YXIgbTt3aGlsZSgobT1lLmV4ZWMocykpIT09bnVsbCl7cC5wdXNoKHMuc3Vic3RyaW5nKGgsbS5pbmRleCkpO3AucHVzaChtWzBdKTtoPW0uaW5kZXgrbVswXS5sZW5ndGh9cC5wdXNoKHMuc3Vic3RyaW5nKGgpKTtyZXR1cm4gcH19ZnVuY3Rpb24gTyhwLGUsaCxpLEoscyl7dmFyIG09UyhwLGUpO2lmKCFtKXtyZXR1cm4gcC5sZW5ndGh9aWYobS5lZmxhZ3MhPT12b2lkIDApe2lmKGguZW5kVGFnKXtoLmVuZFRhZyhtLm5hbWUsaSxKLEwoaCxwLGUscyxpKSl9fXJldHVybiBtLm5leHR9ZnVuY3Rpb24gUChwLGUsaCxpLEoscyl7dmFyIG09UyhwLGUpO2lmKCFtKXtyZXR1cm4gcC5sZW5ndGh9aWYobS5lZmxhZ3MhPT12b2lkIDApe2lmKGguc3RhcnRUYWcpe2guc3RhcnRUYWcobS5uYW1lLG0uYXR0cnMsaSxKLEwoaCxwLG0ubmV4dCxzLGkpKX1pZihtLmVmbGFncyZIKXtyZXR1cm4gUihwLG0saCxpLEoscyl9fXJldHVybiBtLm5leHR9dmFyIFE9e307ZnVuY3Rpb24gUihlLGksaCxtLEoscyl7dmFyIG49ZS5sZW5ndGg7aWYoIVEuaGFzT3duUHJvcGVydHkoaS5uYW1lKSl7UVtpLm5hbWVdPW5ldyBSZWdFeHAoJ14nK2kubmFtZSsnKD86W1xcc1xcL118JCknLCdpJyl9dmFyIHE9UVtpLm5hbWVdO3ZhciB2PWkubmV4dDt2YXIgcD1pLm5leHQrMTtmb3IoO3A8bjtwKyspe2lmKGVbcC0xXT09PSc8XC8nJiZxLnRlc3QoZVtwXSkpe2JyZWFrfX1pZihwPG4pe3AtPTF9dmFyIF89ZS5zbGljZSh2LHApLmpvaW4oJycpO2lmKGkuZWZsYWdzJmEuZWZsYWdzLkNEQVRBKXtpZihoLmNkYXRhKXtoLmNkYXRhKF8sbSxKLEwoaCxlLHAscyxtKSl9fWVsc2UgaWYoaS5lZmxhZ3MmYS5lZmxhZ3MuUkNEQVRBKXtpZihoLnJjZGF0YSl7aC5yY2RhdGEoQyhfKSxtLEosTChoLGUscCxzLG0pKX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoJ2J1ZycpfXJldHVybiBwfWZ1bmN0aW9uIFMoZSxoKXt2YXIgbT0vXihcdyspLy5leGVjKGVbaF0pO3ZhciBpPXtuYW1lOmwobVsxXSl9O2lmKGEuRUxFTUVOVFMuaGFzT3duUHJvcGVydHkoaS5uYW1lKSl7aS5lZmxhZ3M9YS5FTEVNRU5UU1tpLm5hbWVdfWVsc2V7aS5lZmxhZ3M9dm9pZCAwfXZhciBuPWVbaF0uc3Vic3RyKG1bMF0ubGVuZ3RoKTt2YXIgcD1oKzE7dmFyIHE9ZS5sZW5ndGg7Zm9yKDtwPHE7cCsrKXtpZihlW3BdPT09Jz4nKXticmVha31uKz1lW3BdfWlmKHE8PXApe3JldHVybiB2b2lkIDB9dmFyIHM9W107d2hpbGUobiE9PScnKXttPUQuZXhlYyhuKTtpZighbSl7bj1uLnJlcGxhY2UoL15bXHNcU11bXmEtelxzXSovLCcnKX1lbHNlIGlmKChtWzRdJiYhbVs1XSl8fChtWzZdJiYhbVs3XSkpe3ZhciB2PW1bNF18fG1bNl07dmFyIF89ZmFsc2U7dmFyIGIxPVtuLGVbcCsrXV07Zm9yKDtwPHE7cCsrKXtpZihfKXtpZihlW3BdPT09Jz4nKXticmVha319ZWxzZSBpZigwPD1lW3BdLmluZGV4T2Yodikpe189dHJ1ZX1iMS5wdXNoKGVbcF0pfWlmKHE8PXApe2JyZWFrfW49YjEuam9pbignJyk7Y29udGludWV9ZWxzZXt2YXIgYzE9bChtWzFdKTt2YXIgZDE9bVsyXT9UKG1bM10pOmMxO3MucHVzaChjMSxkMSk7bj1uLnN1YnN0cihtWzBdLmxlbmd0aCl9fWkuYXR0cnM9cztpLm5leHQ9cCsxO3JldHVybiBpfWZ1bmN0aW9uIFQodil7dmFyIHE9di5jaGFyQ29kZUF0KDApO2lmKHE9PT0weDIyfHxxPT09MHgyNyl7dj12LnN1YnN0cigxLHYubGVuZ3RoLTIpfXJldHVybiB1KHIodikpfWZ1bmN0aW9uIFUoZSl7dmFyIHM7dmFyIGg7dmFyIG09ZnVuY3Rpb24oaSxuKXtpZighaCl7bi5wdXNoKGkpfX07cmV0dXJuIEkoe3N0YXJ0RG9jOmZ1bmN0aW9uKF8pe3M9W107aD1mYWxzZX0sc3RhcnRUYWc6ZnVuY3Rpb24ocCxxLHYpe2lmKGgpe3JldHVybn1pZighYS5FTEVNRU5UUy5oYXNPd25Qcm9wZXJ0eShwKSl7cmV0dXJufXZhciBfPWEuRUxFTUVOVFNbcF07aWYoXyZhLmVmbGFncy5GT0xEQUJMRSl7cmV0dXJufXE9ZShwLHEpO2lmKCFxKXtoPSEoXyZhLmVmbGFncy5FTVBUWSk7cmV0dXJufWlmKCEoXyZhLmVmbGFncy5FTVBUWSkpe3MucHVzaChwKX12LnB1c2goJzwnLHApO2Zvcih2YXIgaT0wLG49cS5sZW5ndGg7aTxuO2krPTIpe3ZhciBiMT1xW2ldLGMxPXFbaSsxXTtpZihjMSE9PW51bGwmJmMxIT09dm9pZCAwKXt2LnB1c2goJyAnLGIxLCc9IicsQihjMSksJyInKX19di5wdXNoKCc+Jyl9LGVuZFRhZzpmdW5jdGlvbihuLHApe2lmKGgpe2g9ZmFsc2U7cmV0dXJufWlmKCFhLkVMRU1FTlRTLmhhc093blByb3BlcnR5KG4pKXtyZXR1cm59dmFyIHE9YS5FTEVNRU5UU1tuXTtpZighKHEmKGEuZWZsYWdzLkVNUFRZfGEuZWZsYWdzLkZPTERBQkxFKSkpe3ZhciB2O2lmKHEmYS5lZmxhZ3MuT1BUSU9OQUxfRU5EVEFHKXtmb3Iodj1zLmxlbmd0aDstLXY+PTA7KXt2YXIgXz1zW3ZdO2lmKF89PT1uKXticmVha31pZighKGEuRUxFTUVOVFNbX10mYS5lZmxhZ3MuT1BUSU9OQUxfRU5EVEFHKSl7cmV0dXJufX19ZWxzZXtmb3Iodj1zLmxlbmd0aDstLXY+PTA7KXtpZihzW3ZdPT09bil7YnJlYWt9fX1pZih2PDApe3JldHVybn1mb3IodmFyIGk9cy5sZW5ndGg7LS1pPnY7KXt2YXIgXz1zW2ldO2lmKCEoYS5FTEVNRU5UU1tfXSZhLmVmbGFncy5PUFRJT05BTF9FTkRUQUcpKXtwLnB1c2goJzxcLycsXywnPicpfX1zLmxlbmd0aD12O3AucHVzaCgnPFwvJyxuLCc+Jyl9fSxwY2RhdGE6bSxyY2RhdGE6bSxjZGF0YTptLGVuZERvYzpmdW5jdGlvbihpKXtmb3IoO3MubGVuZ3RoO3MubGVuZ3RoLS0pe2kucHVzaCgnPFwvJyxzW3MubGVuZ3RoLTFdLCc+Jyl9fX0pfXZhciBWPW5ldyBSZWdFeHAoJ14nKycoPzonKycoW146XC8/IyBdKyknKyc6KT8nKTt2YXIgVz0vXig/Omh0dHBzP3xtYWlsdG8pJC9pO2Z1bmN0aW9uIFgoZSxuKXtpZighbil7cmV0dXJuIG51bGx9dmFyIHA9KCcnK2UpLm1hdGNoKFYpO2lmKHAmJighcFsxXXx8Vy50ZXN0KHBbMV0pKSl7cmV0dXJuIG4oZSl9ZWxzZXtyZXR1cm4gbnVsbH19ZnVuY3Rpb24gWShlLGgsbSxuKXtmb3IodmFyIGk9MDtpPGgubGVuZ3RoO2krPTIpe3ZhciBwPWhbaV07dmFyIHY9aFtpKzFdO3ZhciBxPW51bGwscztpZigocz1lKyc6OicrcCxhLkFUVFJJQlMuaGFzT3duUHJvcGVydHkocykpfHwocz0nKjo6JytwLGEuQVRUUklCUy5oYXNPd25Qcm9wZXJ0eShzKSkpe3E9YS5BVFRSSUJTW3NdfWlmKHEhPT1udWxsKXtzd2l0Y2gocSl7Y2FzZSBhLmF0eXBlLk5PTkU6YnJlYWs7Y2FzZSBhLmF0eXBlLlNDUklQVDp2PW51bGw7YnJlYWs7Y2FzZSBhLmF0eXBlLlNUWUxFOmlmKCd1bmRlZmluZWQnPT09dHlwZW9mIGIpe3Y9bnVsbDticmVha312YXIgXz1bXTtiKHYse2RlY2xhcmF0aW9uOmZ1bmN0aW9uKGIxLGMxKXt2YXIgZDE9YjEudG9Mb3dlckNhc2UoKTt2YXIgZTE9ZFtkMV07aWYoIWUxKXtyZXR1cm59YyhkMSxlMSxjMSxtKTtfLnB1c2goYjErJzogJytjMS5qb2luKCcgJykpfX0pO3Y9Xy5sZW5ndGg+MD9fLmpvaW4oJyA7ICcpOm51bGw7YnJlYWs7Y2FzZSBhLmF0eXBlLklEOmNhc2UgYS5hdHlwZS5JRFJFRjpjYXNlIGEuYXR5cGUuSURSRUZTOmNhc2UgYS5hdHlwZS5HTE9CQUxfTkFNRTpjYXNlIGEuYXR5cGUuTE9DQUxfTkFNRTpjYXNlIGEuYXR5cGUuQ0xBU1NFUzp2PW4/bih2KTp2O2JyZWFrO2Nhc2UgYS5hdHlwZS5VUkk6dj1YKHYsbSk7YnJlYWs7Y2FzZSBhLmF0eXBlLlVSSV9GUkFHTUVOVDppZih2JiYnIyc9PT12LmNoYXJBdCgwKSl7dj12LnN1YnN0cmluZygxKTt2PW4/bih2KTp2O2lmKHYhPT1udWxsJiZ2IT09dm9pZCAwKXt2PScjJyt2fX1lbHNle3Y9bnVsbH1icmVhaztkZWZhdWx0OnY9bnVsbDticmVha319ZWxzZXt2PW51bGx9aFtpKzFdPXZ9cmV0dXJuIGh9ZnVuY3Rpb24gWihlLGgpe3JldHVybiBmdW5jdGlvbihpLG0pe2lmKCEoYS5FTEVNRU5UU1tpXSZhLmVmbGFncy5VTlNBRkUpKXtyZXR1cm4gWShpLG0sZSxoKX19fWZ1bmN0aW9uICQoaSxlKXt2YXIgaD1bXTtVKGUpKGksaCk7cmV0dXJuIGguam9pbignJyl9ZnVuY3Rpb24gYTEoaSxlLGgpe3ZhciBtPVooZSxoKTtyZXR1cm4gJChpLG0pfXJldHVybntlc2NhcGVBdHRyaWI6QixtYWtlSHRtbFNhbml0aXplcjpVLG1ha2VTYXhQYXJzZXI6SSxtYWtlVGFnUG9saWN5Olosbm9ybWFsaXplUkNEYXRhOkMsc2FuaXRpemU6YTEsc2FuaXRpemVBdHRyaWJzOlksc2FuaXRpemVXaXRoUG9saWN5OiQsdW5lc2NhcGVFbnRpdGllczp1fX0pKGh0bWw0KTt2YXIgaHRtbF9zYW5pdGl6ZT1odG1sLnNhbml0aXplO2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyl7d2luZG93WydodG1sJ109aHRtbDt3aW5kb3dbJ2h0bWxfc2FuaXRpemUnXT1odG1sX3Nhbml0aXplfWpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLnRoaXJkcGFydHkuY2FqYS1odG1sLXNhbml0aXplcicpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLmFjdCcpKXsNCi8qIQogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAuYWN0Jyk7c2FwLnVpLmRlZmluZSgianF1ZXJ5LnNhcC5hY3QiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7aWYodHlwZW9mIHdpbmRvdy5qUXVlcnkuc2FwLmFjdD09PSJvYmplY3QifHx0eXBlb2Ygd2luZG93LmpRdWVyeS5zYXAuYWN0PT09ImZ1bmN0aW9uIil7cmV0dXJufXZhciBfPXt9LGE9dHJ1ZSxiPW51bGwsYz0xMDAwMCxkPSEhd2luZG93LmFkZEV2ZW50TGlzdGVuZXIsZT1bXSxmPVtdLGc9ZmFsc2UsaD1udWxsO2Z1bmN0aW9uIGooKXtiPW51bGw7aWYoZyl7aygpO3JldHVybn1hPWZhbHNlO2gub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQse2NoaWxkTGlzdDp0cnVlLGF0dHJpYnV0ZXM6dHJ1ZSxzdWJ0cmVlOnRydWUsY2hhcmFjdGVyRGF0YTp0cnVlfSl9O2Z1bmN0aW9uIGsoKXtpZighYSl7YT10cnVlO2woZSk7aC5kaXNjb25uZWN0KCl9aWYoYil7Zz10cnVlfWVsc2V7Yj1zZXRUaW1lb3V0KGosYyk7Zz1mYWxzZX19O2Z1bmN0aW9uIGwoTCl7aWYoTC5sZW5ndGg9PTApe3JldHVybn12YXIgbT1MLnNsaWNlKCk7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBJO2Zvcih2YXIgaT0wLG49bS5sZW5ndGg7aTxuO2krKyl7ST1tW2ldO0kuZkZ1bmN0aW9uLmNhbGwoSS5vTGlzdGVuZXJ8fHdpbmRvdyl9fSwwKX07Xy5hdHRhY2hBY3RpdmF0ZT1mdW5jdGlvbihGLEwpe2UucHVzaCh7b0xpc3RlbmVyOkwsZkZ1bmN0aW9uOkZ9KX07Xy5kZXRhY2hBY3RpdmF0ZT1mdW5jdGlvbihGLEwpe2Zvcih2YXIgaT0wLG09ZS5sZW5ndGg7aTxtO2krKyl7aWYoZVtpXS5mRnVuY3Rpb249PT1GJiZlW2ldLm9MaXN0ZW5lcj09PUwpe2Uuc3BsaWNlKGksMSk7YnJlYWt9fX07Xy5pc0FjdGl2ZT0hZD9mdW5jdGlvbigpe3JldHVybiB0cnVlfTpmdW5jdGlvbigpe3JldHVybiBhfTtfLnJlZnJlc2g9IWQ/ZnVuY3Rpb24oKXt9Oms7aWYoZCl7dmFyIEU9WyJyZXNpemUiLCJvcmllbnRhdGlvbmNoYW5nZSIsIm1vdXNlbW92ZSIsIm1vdXNlZG93biIsIm1vdXNldXAiLCJ0b3VjaHN0YXJ0IiwidG91Y2htb3ZlIiwidG91Y2hlbmQiLCJ0b3VjaGNhbmNlbCIsInBhc3RlIiwiY3V0Iiwia2V5ZG93biIsImtleXVwIiwiRE9NTW91c2VTY3JvbGwiLCJtb3VzZXdoZWVsIl07Zm9yKHZhciBpPTA7aTxFLmxlbmd0aDtpKyspe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKEVbaV0sXy5yZWZyZXNoLHRydWUpfWlmKHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyKXtoPW5ldyB3aW5kb3cuTXV0YXRpb25PYnNlcnZlcihfLnJlZnJlc2gpfWVsc2UgaWYod2luZG93LldlYktpdE11dGF0aW9uT2JzZXJ2ZXIpe2g9bmV3IHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyKF8ucmVmcmVzaCl9ZWxzZXtoPXtvYnNlcnZlOmZ1bmN0aW9uKCl7ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTVN1YnRyZWVNb2RpZmllZCIsXy5yZWZyZXNoKX0sZGlzY29ubmVjdDpmdW5jdGlvbigpe2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJET01TdWJ0cmVlTW9kaWZpZWQiLF8ucmVmcmVzaCl9fX1rKCl9cS5zYXAuYWN0PV87cmV0dXJuIHF9LGZhbHNlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnanF1ZXJ5LnNhcC5kb20nKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdqcXVlcnkuc2FwLmRvbScpO3NhcC51aS5kZWZpbmUoImpxdWVyeS5zYXAuZG9tIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL0RldmljZSddLGZ1bmN0aW9uKHEsRCl7InVzZSBzdHJpY3QiO3ZhciBkPWZ1bmN0aW9uKEksdyl7aWYoIXcpe3c9d2luZG93fWlmKCFJfHxJPT0iIil7cmV0dXJuIG51bGx9dmFyIG89dy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChJKTtpZihvJiZvLmlkPT1JKXtyZXR1cm4gb312YXIgcj13LmRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKEkpO2Zvcih2YXIgaT0wO2k8ci5sZW5ndGg7aSsrKXtvPXJbaV07aWYobyYmby5pZD09SSl7cmV0dXJuIG99fXJldHVybiBudWxsfTtxLnNhcC5kb21CeUlkPSEhRC5icm93c2VyLmludGVybmV0X2V4cGxvcmVyJiZELmJyb3dzZXIudmVyc2lvbjw4P2Q6ZnVuY3Rpb24gZG9tQnlJZChpLHcpe3JldHVybiBpPyh3fHx3aW5kb3cpLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGkpOm51bGx9O3Euc2FwLmJ5SWQ9ZnVuY3Rpb24gYnlJZChpLGMpe3ZhciBlPSIiO2lmKGkpe2U9IiMiK2kucmVwbGFjZSgvKDp8XC4pL2csJ1xcJDEnKX1yZXR1cm4gcShlLGMpfTtxLnNhcC5mb2N1cz1mdW5jdGlvbiBmb2N1cyhvKXtpZighbyl7cmV0dXJufXRyeXtvLmZvY3VzKCl9Y2F0Y2goZSl7dmFyIGk9KG8mJm8uaWQpPyIgKElEOiAnIitvLmlkKyInKSI6IiI7cS5zYXAubG9nLndhcm5pbmcoIkVycm9yIHdoZW4gdHJ5aW5nIHRvIGZvY3VzIGEgRE9NIGVsZW1lbnQiK2krIjogIitlLm1lc3NhZ2UpO3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX07cS5mbi5jdXJzb3JQb3M9ZnVuY3Rpb24gY3Vyc29yUG9zKHApe3ZhciBsPWFyZ3VtZW50cy5sZW5ndGgsdCxMLFQscztUPXRoaXMucHJvcCgidGFnTmFtZSIpO3M9dGhpcy5wcm9wKCJ0eXBlIik7aWYodGhpcy5sZW5ndGg9PT0xJiYoKFQ9PSJJTlBVVCImJihzPT0idGV4dCJ8fHM9PSJwYXNzd29yZCJ8fHM9PSJzZWFyY2giKSl8fFQ9PSJURVhUQVJFQSIpKXt2YXIgbz10aGlzLmdldCgwKTtpZihsPjApe2lmKHR5cGVvZihvLnNlbGVjdGlvblN0YXJ0KT09Im51bWJlciIpe28uZm9jdXMoKTtvLnNlbGVjdGlvblN0YXJ0PXA7by5zZWxlY3Rpb25FbmQ9cH1lbHNlIGlmKG8uY3JlYXRlVGV4dFJhbmdlKXt0PW8uY3JlYXRlVGV4dFJhbmdlKCk7dmFyIG09by52YWx1ZS5sZW5ndGg7aWYocDwwfHxwPm0pe3A9bX1pZih0KXt0LmNvbGxhcHNlKCk7dC5tb3ZlRW5kKCJjaGFyYWN0ZXIiLHApO3QubW92ZVN0YXJ0KCJjaGFyYWN0ZXIiLHApO3Quc2VsZWN0KCl9fXJldHVybiB0aGlzfWVsc2V7aWYodHlwZW9mKG8uc2VsZWN0aW9uU3RhcnQpPT0ibnVtYmVyIil7cmV0dXJuIG8uc2VsZWN0aW9uU3RhcnR9ZWxzZSBpZihvLmNyZWF0ZVRleHRSYW5nZSl7dD13aW5kb3cuZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7dmFyIGM9dC5kdXBsaWNhdGUoKTtpZihvLnRhZ05hbWU9PSJURVhUQVJFQSIpe2MubW92ZVRvRWxlbWVudFRleHQobyk7dmFyIEM9Yy5kdXBsaWNhdGUoKTtMPWMudGV4dC5sZW5ndGg7Qy5tb3ZlU3RhcnQoImNoYXJhY3RlciIsTCk7aWYoQy5pblJhbmdlKHQpKXtTPUx9ZWxzZXt2YXIgaT1MO3ZhciBTPTA7d2hpbGUoTD4xKXtpPU1hdGgucm91bmQoTC8yKTtTPVMraTtDPWMuZHVwbGljYXRlKCk7Qy5tb3ZlU3RhcnQoImNoYXJhY3RlciIsUyk7aWYoQy5pblJhbmdlKHQpKXtMPUwtaX1lbHNle1M9Uy1pO0w9aX19fXJldHVybiBTfWVsc2UgaWYoYy5wYXJlbnRFbGVtZW50KCk9PT1vKXtjLmNvbGxhcHNlKCk7dmFyIEw9by52YWx1ZS5sZW5ndGg7Yy5tb3ZlU3RhcnQoJ2NoYXJhY3RlcicsLUwpO3JldHVybiBjLnRleHQubGVuZ3RofX1yZXR1cm4tMX19ZWxzZXtyZXR1cm4gdGhpc319O3EuZm4uc2VsZWN0VGV4dD1mdW5jdGlvbiBzZWxlY3RUZXh0KHMsZSl7dmFyIG89dGhpcy5nZXQoMCk7aWYobyl7aWYodHlwZW9mKG8uc2VsZWN0aW9uU3RhcnQpPT0ibnVtYmVyIil7aWYoczwwKXtzPTB9aWYoZT5vLnZhbHVlLmxlbmd0aCl7ZT1vLnZhbHVlLmxlbmd0aH1pZighZXx8cz5lKXtzPTA7ZT0wfW8uc2VsZWN0aW9uU3RhcnQ9cztvLnNlbGVjdGlvbkVuZD1lfWVsc2UgaWYoby5jcmVhdGVUZXh0UmFuZ2Upe3ZhciB0PW8uY3JlYXRlVGV4dFJhbmdlKCk7dC5jb2xsYXBzZSgpO3QubW92ZVN0YXJ0KCdjaGFyYWN0ZXInLHMpO3QubW92ZUVuZCgnY2hhcmFjdGVyJyxlLXMpO3Quc2VsZWN0KCl9fXJldHVybiB0aGlzfTtxLmZuLm91dGVySFRNTD1mdW5jdGlvbiBvdXRlckhUTUwoKXt2YXIgbz10aGlzLmdldCgwKTtpZihvJiZvLm91dGVySFRNTCl7cmV0dXJuIHEudHJpbShvLm91dGVySFRNTCl9ZWxzZXt2YXIgYT10aGlzWzBdP3RoaXNbMF0ub3duZXJEb2N1bWVudDpkb2N1bWVudDt2YXIgYj1hLmNyZWF0ZUVsZW1lbnQoImRpdiIpO2IuYXBwZW5kQ2hpbGQoby5jbG9uZU5vZGUodHJ1ZSkpO3JldHVybiBiLmlubmVySFRNTH19O3Euc2FwLmNvbnRhaW5zT3JFcXVhbHM9ZnVuY3Rpb24gY29udGFpbnNPckVxdWFscyhvLGEpe2lmKGEmJm8mJmEhPWRvY3VtZW50JiZhIT13aW5kb3cpe3JldHVybihvPT09YSl8fHEuY29udGFpbnMobyxhKX1yZXR1cm4gZmFsc2V9O3EuZm4ucmVjdD1mdW5jdGlvbiByZWN0KCl7dmFyIG89dGhpcy5nZXQoMCk7aWYobyl7aWYoby5nZXRCb3VuZGluZ0NsaWVudFJlY3Qpe3ZhciBjPW8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dmFyIHI9e3RvcDpjLnRvcCxsZWZ0OmMubGVmdCx3aWR0aDpjLnJpZ2h0LWMubGVmdCxoZWlnaHQ6Yy5ib3R0b20tYy50b3B9O3ZhciB3PXEuc2FwLm93bmVyV2luZG93KG8pO3IubGVmdCs9cSh3KS5zY3JvbGxMZWZ0KCk7ci50b3ArPXEodykuc2Nyb2xsVG9wKCk7cmV0dXJuIHJ9ZWxzZXtyZXR1cm57dG9wOjEwLGxlZnQ6MTAsd2lkdGg6by5vZmZzZXRXaWR0aCxoZWlnaHQ6by5vZmZzZXRXaWR0aH19fXJldHVybiBudWxsfTtxLmZuLnJlY3RDb250YWlucz1mdW5jdGlvbiByZWN0Q29udGFpbnMocCxQKXt2YXIgcj10aGlzLnJlY3QoKTtpZihyKXtyZXR1cm4gcD49ci5sZWZ0JiZwPD1yLmxlZnQrci53aWR0aCYmUD49ci50b3AmJlA8PXIudG9wK3IuaGVpZ2h0fXJldHVybiBmYWxzZX07cS5mbi5oYXNUYWJJbmRleD1mdW5jdGlvbiBoYXNUYWJJbmRleCgpe3ZhciB0PXRoaXMucHJvcCgidGFiSW5kZXgiKTtyZXR1cm4haXNOYU4odCkmJnQ+PTB9O3EuZm4uZmlyc3RGb2N1c2FibGVEb21SZWY9ZnVuY3Rpb24gZmlyc3RGb2N1c2FibGVEb21SZWYoKXt2YXIgYz10aGlzLmdldCgwKTt2YXIgYT1mdW5jdGlvbihpKXtyZXR1cm4gcSh0aGlzKS5jc3MoInZpc2liaWxpdHkiKT09ImhpZGRlbiJ9O2lmKCFjfHxxKGMpLmlzKCc6aGlkZGVuJyl8fHEoYykuZmlsdGVyKGEpLmxlbmd0aD09MSl7cmV0dXJuIG51bGx9dmFyIEM9Yy5maXJzdENoaWxkLG89bnVsbDt3aGlsZShDKXtpZihDLm5vZGVUeXBlPT0xJiZxKEMpLmlzKCc6dmlzaWJsZScpKXtpZihxKEMpLmhhc1RhYkluZGV4KCkpe3JldHVybiBDfWlmKEMuY2hpbGROb2Rlcyl7bz1xKEMpLmZpcnN0Rm9jdXNhYmxlRG9tUmVmKCk7aWYobyl7cmV0dXJuIG99fX1DPUMubmV4dFNpYmxpbmd9cmV0dXJuIG51bGx9O3EuZm4ubGFzdEZvY3VzYWJsZURvbVJlZj1mdW5jdGlvbiBsYXN0Rm9jdXNhYmxlRG9tUmVmKCl7dmFyIGM9dGhpcy5nZXQoMCk7dmFyIGE9ZnVuY3Rpb24oaSl7cmV0dXJuIHEodGhpcykuY3NzKCJ2aXNpYmlsaXR5Iik9PSJoaWRkZW4ifTtpZighY3x8cShjKS5pcygnOmhpZGRlbicpfHxxKGMpLmZpbHRlcihhKS5sZW5ndGg9PTEpe3JldHVybiBudWxsfXZhciBDPWMubGFzdENoaWxkLG89bnVsbDt3aGlsZShDKXtpZihDLm5vZGVUeXBlPT0xJiZxKEMpLmlzKCc6dmlzaWJsZScpKXtpZihDLmNoaWxkTm9kZXMpe289cShDKS5sYXN0Rm9jdXNhYmxlRG9tUmVmKCk7aWYobyl7cmV0dXJuIG99fWlmKHEoQykuaGFzVGFiSW5kZXgoKSl7cmV0dXJuIEN9fUM9Qy5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9O3EuZm4uc2Nyb2xsTGVmdFJUTD1mdW5jdGlvbiBzY3JvbGxMZWZ0UlRMKHApe3ZhciBvPXRoaXMuZ2V0KDApO2lmKG8pe2lmKHA9PT11bmRlZmluZWQpe2lmKCEhRC5icm93c2VyLmludGVybmV0X2V4cGxvcmVyKXtyZXR1cm4gby5zY3JvbGxXaWR0aC1vLnNjcm9sbExlZnQtby5jbGllbnRXaWR0aH1lbHNlIGlmKCEhRC5icm93c2VyLndlYmtpdCl7cmV0dXJuIG8uc2Nyb2xsTGVmdH1lbHNlIGlmKCEhRC5icm93c2VyLmZpcmVmb3gpe3JldHVybiBvLnNjcm9sbFdpZHRoK28uc2Nyb2xsTGVmdC1vLmNsaWVudFdpZHRofWVsc2V7cmV0dXJuIG8uc2Nyb2xsTGVmdH19ZWxzZXtvLnNjcm9sbExlZnQ9cS5zYXAuZGVub3JtYWxpemVTY3JvbGxMZWZ0UlRMKHAsbyk7cmV0dXJuIHRoaXN9fX07cS5mbi5zY3JvbGxSaWdodFJUTD1mdW5jdGlvbiBzY3JvbGxSaWdodFJUTCgpe3ZhciBvPXRoaXMuZ2V0KDApO2lmKG8pe2lmKCEhRC5icm93c2VyLmludGVybmV0X2V4cGxvcmVyKXtyZXR1cm4gby5zY3JvbGxMZWZ0fWVsc2UgaWYoISFELmJyb3dzZXIud2Via2l0KXtyZXR1cm4gby5zY3JvbGxXaWR0aC1vLnNjcm9sbExlZnQtby5jbGllbnRXaWR0aH1lbHNlIGlmKCEhRC5icm93c2VyLmZpcmVmb3gpe3JldHVybigtby5zY3JvbGxMZWZ0KX1lbHNle3JldHVybiBvLnNjcm9sbExlZnR9fX07cS5zYXAuZGVub3JtYWxpemVTY3JvbGxMZWZ0UlRMPWZ1bmN0aW9uKG4sbyl7aWYobyl7aWYoISFELmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXIpe3JldHVybiBvLnNjcm9sbFdpZHRoLW8uY2xpZW50V2lkdGgtbn1lbHNlIGlmKCEhRC5icm93c2VyLndlYmtpdCl7cmV0dXJuIG59ZWxzZSBpZighIUQuYnJvd3Nlci5maXJlZm94KXtyZXR1cm4gby5jbGllbnRXaWR0aCtuLW8uc2Nyb2xsV2lkdGh9ZWxzZXtyZXR1cm4gbn19fTsNCi8qIQoJICogVGhlIGZvbGxvd2luZyBmdW5jdGlvbnMgYXJlIHRha2VuIGZyb20galF1ZXJ5IFVJIDEuOC4xNyBidXQgbW9kaWZpZWQKCSAqCgkgKiBDb3B5cmlnaHQgMjAxMSwgQVVUSE9SUy50eHQgKGh0dHA6Ly9qcXVlcnl1aS5jb20vYWJvdXQpCgkgKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KCSAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKCSAqCgkgKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJCgkgKi8NCmZ1bmN0aW9uIHYoZSl7dmFyIG89cShlKS5vZmZzZXRQYXJlbnQoKTt2YXIgTz1mYWxzZTt2YXIgJD1xKGUpLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXtpZih0aGlzPT09byl7Tz10cnVlfXJldHVybiBPfSk7cmV0dXJuIXEoZSkuYWRkKCQpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiBxLmNzcyh0aGlzLCJ2aXNpYmlsaXR5Iik9PT0iaGlkZGVuInx8cS5leHByLmZpbHRlcnMuaGlkZGVuKHRoaXMpfSkubGVuZ3RofWZ1bmN0aW9uIGYoZSxpKXt2YXIgbj1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoImFyZWEiPT09bil7dmFyIG09ZS5wYXJlbnROb2RlLGE9bS5uYW1lLGI7aWYoIWUuaHJlZnx8IWF8fG0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9PSJtYXAiKXtyZXR1cm4gZmFsc2V9Yj1xKCJpbWdbdXNlbWFwPSMiK2ErIl0iKVswXTtyZXR1cm4hIWImJnYoYil9cmV0dXJuKC9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdC8udGVzdChuKT8hZS5kaXNhYmxlZDoiYSI9PW4/ZS5ocmVmfHxpOmkpJiZ2KGUpfWlmKCFxLmV4cHJbIjoiXS5mb2N1c2FibGUpew0KLyohCgkJICogVGhlIGZvbGxvd2luZyBmdW5jdGlvbiBpcyB0YWtlbiBmcm9tIGpRdWVyeSBVSSAxLjguMTcKCQkgKgoJCSAqIENvcHlyaWdodCAyMDExLCBBVVRIT1JTLnR4dCAoaHR0cDovL2pxdWVyeXVpLmNvbS9hYm91dCkKCQkgKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KCQkgKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCgkJICoKCQkgKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJCgkJICoKCQkgKiBCdXQgc2luY2UgdmlzaWJsZSBpcyBtb2RpZmllZCwgZm9jdXNhYmxlIGlzIGRpZmZlcmVudCB0b28gdGhlIGpRdWVyeSBVSSB2ZXJzaW9uIHRvby4KCQkgKi8NCnEuZXh0ZW5kKHEuZXhwclsiOiJdLHtmb2N1c2FibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoZSwhaXNOYU4ocS5hdHRyKGUsInRhYmluZGV4IikpKX19KX1pZighcS5leHByWyI6Il0uc2FwVGFiYmFibGUpew0KLyohCgkJICogVGhlIGZvbGxvd2luZyBmdW5jdGlvbiBpcyB0YWtlbiBmcm9tCgkJICogalF1ZXJ5IFVJIENvcmUgMS4xMC40CgkJICogaHR0cDovL2pxdWVyeXVpLmNvbQoJCSAqCgkJICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwoJCSAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KCQkgKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCgkJICoKCQkgKiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jYXRlZ29yeS91aS1jb3JlLwoJCSAqLw0KcS5leHRlbmQocS5leHByWyI6Il0se3NhcFRhYmJhYmxlOmZ1bmN0aW9uKGUpe3ZhciB0PXEuYXR0cihlLCJ0YWJpbmRleCIpLGk9aXNOYU4odCk7cmV0dXJuKGl8fHQ+PTApJiZmKGUsIWkpfX0pfWlmKCFxLmV4cHJbIjoiXS5zYXBGb2N1c2FibGUpe3EuZXh0ZW5kKHEuZXhwclsiOiJdLHtzYXBGb2N1c2FibGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoZSwhaXNOYU4ocS5hdHRyKGUsInRhYmluZGV4IikpKX19KX1pZighcS5mbi56SW5kZXgpe3EuZm4uekluZGV4PWZ1bmN0aW9uKHope2lmKHohPT11bmRlZmluZWQpe3JldHVybiB0aGlzLmNzcygiekluZGV4Iix6KX1pZih0aGlzLmxlbmd0aCl7dmFyIGU9cSh0aGlzWzBdKSxwLGE7d2hpbGUoZS5sZW5ndGgmJmVbMF0hPT1kb2N1bWVudCl7cD1lLmNzcygicG9zaXRpb24iKTtpZihwPT09ImFic29sdXRlInx8cD09PSJyZWxhdGl2ZSJ8fHA9PT0iZml4ZWQiKXthPXBhcnNlSW50KGUuY3NzKCJ6SW5kZXgiKSwxMCk7aWYoIWlzTmFOKGEpJiZhIT09MCl7cmV0dXJuIGF9fWU9ZS5wYXJlbnQoKX19cmV0dXJuIDB9fXEuZm4ucGFyZW50QnlBdHRyaWJ1dGU9ZnVuY3Rpb24gcGFyZW50QnlBdHRyaWJ1dGUoYSxWKXtpZih0aGlzLmxlbmd0aD4wKXtpZihWKXtyZXR1cm4gdGhpcy5maXJzdCgpLnBhcmVudHMoIlsiK2ErIj0nIitWKyInXSIpLmdldCgwKX1lbHNle3JldHVybiB0aGlzLmZpcnN0KCkucGFyZW50cygiWyIrYSsiXSIpLmdldCgwKX19fTtxLnNhcC5vd25lcldpbmRvdz1mdW5jdGlvbiBvd25lcldpbmRvdyhvKXtpZihvLm93bmVyRG9jdW1lbnQucGFyZW50V2luZG93KXtyZXR1cm4gby5vd25lckRvY3VtZW50LnBhcmVudFdpbmRvd31yZXR1cm4gby5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fTt2YXIgXz17fTtxLnNhcC5zY3JvbGxiYXJTaXplPWZ1bmN0aW9uKGMsRil7aWYodHlwZW9mIGM9PT0iYm9vbGVhbiIpe0Y9YztjPW51bGx9dmFyIGs9Y3x8IiNERUZBVUxUIjtpZihGKXtpZihjKXtkZWxldGUgX1tjXX1lbHNle189e319fWlmKF9ba10pe3JldHVybiBfW2tdfWlmKCFkb2N1bWVudC5ib2R5KXtyZXR1cm57d2lkdGg6MCxoZWlnaHQ6MH19dmFyIGE9cSgiPERJVi8+IikuY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIikuY3NzKCJoZWlnaHQiLCIwIikuY3NzKCJ3aWR0aCIsIjAiKS5jc3MoIm92ZXJmbG93IiwiaGlkZGVuIik7aWYoYyl7YS5hZGRDbGFzcyhjKX1hLnByZXBlbmRUbyhkb2N1bWVudC5ib2R5KTt2YXIgJD1xKCI8ZGl2IHN0eWxlPVwidmlzaWJpbGl0eTp2aXNpYmxlO3Bvc2l0aW9uOmFic29sdXRlO2hlaWdodDoxMDBweDt3aWR0aDoxMDBweDtvdmVyZmxvdzpzY3JvbGw7b3BhY2l0eTowO1wiPjwvZGl2PiIpO2EuYXBwZW5kKCQpO3ZhciBvPSQuZ2V0KDApO3ZhciB3PW8ub2Zmc2V0V2lkdGgtby5zY3JvbGxXaWR0aDt2YXIgaD1vLm9mZnNldEhlaWdodC1vLnNjcm9sbEhlaWdodDthLnJlbW92ZSgpO19ba109e3dpZHRoOncsaGVpZ2h0Omh9O3JldHVybiBfW2tdfTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLmVuY29kZXInKSl7DQovKiEKICogU0FQIFVJIGRldmVsb3BtZW50IHRvb2xraXQgZm9yIEhUTUw1IChTQVBVSTUvT3BlblVJNSkKICogKGMpIENvcHlyaWdodCAyMDA5LTIwMTQgU0FQIEFHIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgLSBzZWUgTElDRU5TRS50eHQuCiAqLw0KalF1ZXJ5LnNhcC5kZWNsYXJlKCdqcXVlcnkuc2FwLmVuY29kZXInKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLmVuY29kZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaChpLGwpe3ZhciBnPWkudG9TdHJpbmcoMTYpO2lmKGwpe3doaWxlKGw+Zy5sZW5ndGgpe2c9IjAiK2d9fXJldHVybiBnfXZhciByPS9bXHgwMC1ceDJiXHgyZlx4M2EtXHg0MFx4NWItXHg1ZVx4NjBceDdiLVx4ZmZcdTIwMjhcdTIwMjldL2csYT0vW1x4MDAtXHgwOFx4MGJceDBjXHgwZS1ceDFmXHg3Zi1ceDlmXS8sSD17IjwiOiImbHQ7IiwiPiI6IiZndDsiLCImIjoiJmFtcDsiLCJcIiI6IiZxdW90OyJ9O3ZhciBmPWZ1bmN0aW9uKGcpe3ZhciBFPUhbZ107aWYoIUUpe2lmKGEudGVzdChnKSl7RT0iJiN4ZmZmZDsifWVsc2V7RT0iJiN4IitoKGcuY2hhckNvZGVBdCgwKSkrIjsifUhbZ109RX1yZXR1cm4gRX07cS5zYXAuZW5jb2RlSFRNTD1mdW5jdGlvbihTKXtyZXR1cm4gUy5yZXBsYWNlKHIsZil9O3Euc2FwLmVuY29kZVhNTD1mdW5jdGlvbihTKXtyZXR1cm4gUy5yZXBsYWNlKHIsZil9O3Euc2FwLmVzY2FwZUhUTUw9ZnVuY3Rpb24oUyl7cmV0dXJuIFMucmVwbGFjZShyLGYpfTt2YXIgYj0vW1x4MDAtXHgyYlx4MmRceDJmXHgzYS1ceDQwXHg1Yi1ceDVlXHg2MFx4N2ItXHhmZlx1MjAyOFx1MjAyOV0vZyxqPXt9O3ZhciBKPWZ1bmN0aW9uKGcpe3ZhciBFPWpbZ107aWYoIUUpe3ZhciBpPWcuY2hhckNvZGVBdCgwKTtpZihpPDI1Nil7RT0iXFx4IitoKGksMil9ZWxzZXtFPSJcXHUiK2goaSw0KX1qW2ddPUV9cmV0dXJuIEV9O3Euc2FwLmVuY29kZUpTPWZ1bmN0aW9uKFMpe3JldHVybiBTLnJlcGxhY2UoYixKKX07cS5zYXAuZXNjYXBlSlM9ZnVuY3Rpb24oUyl7cmV0dXJuIFMucmVwbGFjZShiLEopfTt2YXIgYz0vW1x4MDAtXHgyY1x4MmZceDNhLVx4NDBceDViLVx4NWVceDYwXHg3Yi1cdWZmZmZdL2csdT17fTt2YXIgVT1mdW5jdGlvbihnKXt2YXIgRT11W2ddO2lmKCFFKXt2YXIgaT1nLmNoYXJDb2RlQXQoMCk7aWYoaTwxMjgpe0U9IiUiK2goaSwyKX1lbHNlIGlmKGk8MjA0OCl7RT0iJSIraCgoaT4+Nil8MTkyLDIpKyIlIitoKChpJjYzKXwxMjgsMil9ZWxzZXtFPSIlIitoKChpPj4xMil8MjI0LDIpKyIlIitoKCgoaT4+NikmNjMpfDEyOCwyKSsiJSIraCgoaSY2Myl8MTI4LDIpfXVbZ109RX1yZXR1cm4gRX07cS5zYXAuZW5jb2RlVVJMPWZ1bmN0aW9uKFMpe3JldHVybiBTLnJlcGxhY2UoYyxVKX07dmFyIGQ9L1tceDAwLVx4MmZceDNhLVx4NDBceDViLVx4NjBceDdiLVx4ZmZcdTIwMjhcdTIwMjldWzAtOUEtRmEtZl0/L2c7dmFyIEM9ZnVuY3Rpb24oZyl7dmFyIGk9Zy5jaGFyQ29kZUF0KDApO2lmKGcubGVuZ3RoPT0xKXtyZXR1cm4iXFwiK2goaSl9ZWxzZXtyZXR1cm4iXFwiK2goaSkrIiAiK2cuc3Vic3RyKDEpfX07cS5zYXAuZW5jb2RlQ1NTPWZ1bmN0aW9uKFMpe3JldHVybiBTLnJlcGxhY2UoZCxDKX07ZnVuY3Rpb24gVyhwLGcsaSxrKXtpZihwKXt0aGlzLnByb3RvY29sPXAudG9VcHBlckNhc2UoKX1pZihnKXt0aGlzLmhvc3Q9Zy50b1VwcGVyQ2FzZSgpfXRoaXMucG9ydD1pO3RoaXMucGF0aD1rfXZhciB3PW5ldyBBcnJheSgpO3Euc2FwLmNsZWFyVXJsV2hpdGVsaXN0PWZ1bmN0aW9uKCl7dy5zcGxpY2UoMCx3Lmxlbmd0aCl9O3Euc2FwLmFkZFVybFdoaXRlbGlzdD1mdW5jdGlvbihwLGcsaSxrKXt2YXIgRT1uZXcgVyhwLGcsaSxrKTt2YXIgST13Lmxlbmd0aDt3W0ldPUV9O3Euc2FwLnJlbW92ZVVybFdoaXRlbGlzdD1mdW5jdGlvbihpKXt3LnNwbGljZShpLDEpfTtxLnNhcC5nZXRVcmxXaGl0ZWxpc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdy5zbGljZSgpfTtxLnNhcC52YWxpZGF0ZVVybD1mdW5jdGlvbihnKXt2YXIgaz0vKD86KFteOlwvPyNdKyk6KT8oPzpcL1wvKFteXC8/IzpdKikoPzo6KFswLTldKykpPyk/KFtePyNdKikoPzpcPyhbXiNdKikpPyg/OiMoLiopKT8vLmV4ZWMoZyk7aWYoIWspe3JldHVybiBrfXZhciBwPWtbMV0sbD1rWzJdLFA9a1szXSxtPWtbNF0sUT1rWzVdLG49a1s2XTt2YXIgbz0vW1x4MDAtXHgyNFx4MjYtXHgyOVx4MmJceDJjXHgyZlx4M2EtXHg0MFx4NWItXHg1ZVx4NjBceDdiLVx4N2RceDdmLVx1ZmZmZl0vO3ZhciB0PS9bYS16MC05ISMkJSYnKitcLz0/Xl9ge3x9fi1dKyg/OlwuW2EtejAtOSEjJCUmJyorXC89P15fYHt8fX4tXSspKkAoPzpbYS16MC05XSg/OlthLXowLTktXSpbYS16MC05XSk/XC4pK1thLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKT8vO2lmKHApe3A9cC50b1VwcGVyQ2FzZSgpO2lmKHcubGVuZ3RoPD0wKXtpZighL14oaHR0cHM/fGZ0cCkvaS50ZXN0KHApKXtyZXR1cm4gZmFsc2V9fX1pZihsKXtsPWwudG9VcHBlckNhc2UoKX1pZihtKXtpZihwPT09Ik1BSUxUTyIpe3ZhciB2PXQudGVzdChtKTtpZighdil7cmV0dXJuIGZhbHNlfX1lbHNle3ZhciB4PW0uc3BsaXQoIi8iKTtmb3IodmFyIGk9MDtpPHgubGVuZ3RoO2krKyl7dmFyIHY9by50ZXN0KHhbaV0pO2lmKHYpe3JldHVybiBmYWxzZX19fX1pZihRKXt2YXIgeD1RLnNwbGl0KCImIik7Zm9yKHZhciBpPTA7aTx4Lmxlbmd0aDtpKyspe3ZhciB5PXhbaV0uc2VhcmNoKCI9Iik7aWYoeSE9LTEpe3ZhciB6PXhbaV0uc3Vic3RyaW5nKDAseSk7dmFyIEE9eFtpXS5zdWJzdHJpbmcoeSsxKTt2YXIgQj1vLnRlc3Qoeik7dmFyIEQ9by50ZXN0KEEpO2lmKEJ8fEQpe3JldHVybiBmYWxzZX19fX1pZihuKXtpZihvLnRlc3Qobikpe3JldHVybiBmYWxzZX19aWYody5sZW5ndGg+MCl7dmFyIEY9ZmFsc2U7Zm9yKHZhciBpPTA7aTx3Lmxlbmd0aDtpKyspe2lmKCFwfHwhd1tpXS5wcm90b2NvbHx8cD09d1tpXS5wcm90b2NvbCl7dmFyIE89ZmFsc2U7aWYobCYmd1tpXS5ob3N0JiYvXlwqLy50ZXN0KHdbaV0uaG9zdCkpe3ZhciBFPXdbaV0uaG9zdC5zbGljZSgxKS5yZXBsYWNlKC9bLVtcXXt9KCkqKz8uLFxcXiR8I1xzXS9nLCJcXCQmIik7dmFyIEc9UmVnRXhwKEUrIiQiKTtpZihHLnRlc3QobCkpe089dHJ1ZX19ZWxzZSBpZighbHx8IXdbaV0uaG9zdHx8bD09d1tpXS5ob3N0KXtPPXRydWV9aWYoTyl7aWYoKCFsJiYhUCl8fCF3W2ldLnBvcnR8fFA9PXdbaV0ucG9ydCl7aWYod1tpXS5wYXRoJiYvXCokLy50ZXN0KHdbaV0ucGF0aCkpe3ZhciBJPXdbaV0ucGF0aC5zbGljZSgwLC0xKS5yZXBsYWNlKC9bLVtcXXt9KCkqKz8uLFxcXiR8I1xzXS9nLCJcXCQmIik7dmFyIEc9UmVnRXhwKCJeIitJKTtpZihHLnRlc3QobSkpe0Y9dHJ1ZX19ZWxzZSBpZighd1tpXS5wYXRofHxtPT13W2ldLnBhdGgpe0Y9dHJ1ZX19fX1pZihGKXticmVha319aWYoIUYpe3JldHVybiBmYWxzZX19cmV0dXJuIHRydWV9O3Euc2FwLl9zYW5pdGl6ZUhUTUw9ZnVuY3Rpb24oZyxvKXtyZXR1cm4gcyhnLG98fHt1cmlSZXdyaXRlcjpmdW5jdGlvbihpKXtpZihxLnNhcC52YWxpZGF0ZVVybChpKSl7cmV0dXJuIGl9fX0pfTtxLnNhcC5fc2V0SFRNTFNhbml0aXplcj1mdW5jdGlvbihzKXtzPXN8fGV9O2Z1bmN0aW9uIGUoZyxvKXtpZighd2luZG93Lmh0bWx8fCF3aW5kb3cuaHRtbC5zYW5pdGl6ZSl7cS5zYXAucmVxdWlyZSgic2FwLnVpLnRoaXJkcGFydHkuY2FqYS1odG1sLXNhbml0aXplciIpO312YXIgdD1vLnRhZ1BvbGljeXx8d2luZG93Lmh0bWwubWFrZVRhZ1BvbGljeShvLnVyaVJld3JpdGVyLG8udG9rZW5Qb2xpY3kpO3JldHVybiB3aW5kb3cuaHRtbC5zYW5pdGl6ZVdpdGhQb2xpY3koZyx0KX12YXIgcz1lO3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAuZXZlbnRzJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnanF1ZXJ5LnNhcC5ldmVudHMnKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLmV2ZW50cyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ2pxdWVyeS5zYXAua2V5Y29kZXMnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7cS5zYXAuX3RvdWNoVG9Nb3VzZUV2ZW50PXRydWU7dmFyIG8sYSxiLGMsZCxtLEk9ZmFsc2U7aWYoc2FwLnVpLkRldmljZS5icm93c2VyLndlYmtpdCYmL01vYmlsZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmc2FwLnVpLkRldmljZS5zdXBwb3J0LnRvdWNoKXtJPXRydWU7dmFyIHM9KGZ1bmN0aW9uKCl7dmFyIGU9d2luZG93LmRvY3VtZW50LEg9ZmFsc2UsdD1udWxsLGo9ZmFsc2UsbixwLGk9MDttPVsibW91c2Vkb3duIiwibW91c2VvdmVyIiwibW91c2V1cCIsIm1vdXNlb3V0IiwiY2xpY2siXTt2YXIgcj1mdW5jdGlvbihULEUpe2lmKCFIKXtyZXR1cm59dmFyIE09RS50eXBlPT0idG91Y2hlbmQiP0UuY2hhbmdlZFRvdWNoZXNbMF06RS50b3VjaGVzWzBdO3ZhciB2PWUuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnQnKTt2LmluaXRNb3VzZUV2ZW50KFQsdHJ1ZSx0cnVlLHdpbmRvdyxFLmRldGFpbCxNLnNjcmVlblgsTS5zY3JlZW5ZLE0uY2xpZW50WCxNLmNsaWVudFksRS5jdHJsS2V5LEUuc2hpZnRLZXksRS5hbHRLZXksRS5tZXRhS2V5LEUuYnV0dG9uLEUucmVsYXRlZFRhcmdldCk7di5pc1N5bnRoZXRpYz10cnVlO3dpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5kaXNwYXRjaEV2ZW50KHYpfSwwKX07dmFyIHU9ZnVuY3Rpb24oRSl7cmV0dXJuIEUudGFyZ2V0LnRhZ05hbWUubWF0Y2goL2lucHV0fHRleHRhcmVhfHNlbGVjdC9pKX07ZD1mdW5jdGlvbihFKXtpZighRS5pc1N5bnRoZXRpYyYmIXUoRSkpe0Uuc3RvcFByb3BhZ2F0aW9uKCk7RS5wcmV2ZW50RGVmYXVsdCgpfX07bz1mdW5jdGlvbihFKXt2YXIgVD1FLnRvdWNoZXMsdjtIPShULmxlbmd0aD09MSYmIXUoRSkpO2o9ZmFsc2U7aWYoSCl7dj1UWzBdO3Q9di50YXJnZXQ7aWYodC5ub2RlVHlwZT09PTMpe3Q9dC5wYXJlbnROb2RlfW49di5jbGllbnRYO3A9di5jbGllbnRZO3IoIm1vdXNlZG93biIsRSl9fTthPWZ1bmN0aW9uKEUpe3ZhciBUO2lmKEgpe1Q9RS50b3VjaGVzWzBdO2lmKE1hdGguYWJzKFQuY2xpZW50WC1uKT4xMHx8TWF0aC5hYnMoVC5jbGllbnRZLXApPjEwKXtqPXRydWV9aWYoail7cigibW91c2Vtb3ZlIixFKX19fTtiPWZ1bmN0aW9uKEUpe3IoIm1vdXNldXAiLEUpO2lmKCFqKXtyKCJjbGljayIsRSl9fTtjPWZ1bmN0aW9uKEUpe3IoIm1vdXNldXAiLEUpfTtmb3IoO2k8bS5sZW5ndGg7aSsrKXtlLmFkZEV2ZW50TGlzdGVuZXIobVtpXSxkLHRydWUpfWUuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsbyx0cnVlKTtlLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsYSx0cnVlKTtlLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJyxiLHRydWUpO2UuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLGMsdHJ1ZSl9KCkpfXEuc2FwLmRpc2FibGVUb3VjaFRvTW91c2VIYW5kbGluZz1mdW5jdGlvbigpe3ZhciBpPTA7aWYoIUkpe3JldHVybn1kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JyxvLHRydWUpO2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsYSx0cnVlKTtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsYix0cnVlKTtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGNhbmNlbCcsYyx0cnVlKTtmb3IoO2k8bS5sZW5ndGg7aSsrKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKG1baV0sZCx0cnVlKX19O3Euc2FwLkNvbnRyb2xFdmVudHM9WyJjbGljayIsImRibGNsaWNrIiwiZm9jdXNpbiIsImZvY3Vzb3V0Iiwia2V5ZG93biIsImtleXByZXNzIiwia2V5dXAiLCJtb3VzZWRvd24iLCJtb3VzZW91dCIsIm1vdXNlb3ZlciIsIm1vdXNldXAiLCJzZWxlY3QiLCJzZWxlY3RzdGFydCIsImRyYWdzdGFydCIsImRyYWdlbnRlciIsImRyYWdvdmVyIiwiZHJhZ2xlYXZlIiwiZHJhZ2VuZCIsImRyb3AiLCJwYXN0ZSIsImN1dCJdO2lmKHNhcC51aS5EZXZpY2Uuc3VwcG9ydC50b3VjaCl7cS5zYXAuQ29udHJvbEV2ZW50cy5wdXNoKCJ0b3VjaHN0YXJ0IiwidG91Y2hlbmQiLCJ0b3VjaG1vdmUiLCJ0b3VjaGNhbmNlbCIpfXEuc2FwLlBzZXVkb0V2ZW50cz17c2FwZG93bjp7c05hbWU6InNhcGRvd24iLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX0RPV04mJiFrKGUpfX0sc2FwZG93bm1vZGlmaWVyczp7c05hbWU6InNhcGRvd25tb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX0RPV04mJmsoZSl9fSxzYXBzaG93OntzTmFtZToic2Fwc2hvdyIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuKGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuRjQmJiFrKGUpKXx8KGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfRE9XTiYmaChlLGZhbHNlLHRydWUsZmFsc2UpKX19LHNhcHVwOntzTmFtZToic2FwdXAiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1VQJiYhayhlKX19LHNhcHVwbW9kaWZpZXJzOntzTmFtZToic2FwdXBtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1VQJiZrKGUpfX0sc2FwaGlkZTp7c05hbWU6InNhcGhpZGUiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1VQJiZoKGUsZmFsc2UsdHJ1ZSxmYWxzZSl9fSxzYXBsZWZ0OntzTmFtZToic2FwbGVmdCIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfTEVGVCYmIWsoZSl9fSxzYXBsZWZ0bW9kaWZpZXJzOntzTmFtZToic2FwbGVmdG1vZGlmaWVycyIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfTEVGVCYmayhlKX19LHNhcHJpZ2h0OntzTmFtZToic2FwcmlnaHQiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1JJR0hUJiYhayhlKX19LHNhcHJpZ2h0bW9kaWZpZXJzOntzTmFtZToic2FwcmlnaHRtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1JJR0hUJiZrKGUpfX0sc2FwaG9tZTp7c05hbWU6InNhcGhvbWUiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkhPTUUmJiFrKGUpfX0sc2FwaG9tZW1vZGlmaWVyczp7c05hbWU6InNhcGhvbWVtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkhPTUUmJmsoZSl9fSxzYXB0b3A6e3NOYW1lOiJzYXB0b3AiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkhPTUUmJmgoZSx0cnVlLGZhbHNlLGZhbHNlKX19LHNhcGVuZDp7c05hbWU6InNhcGVuZCIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuRU5EJiYhayhlKX19LHNhcGVuZG1vZGlmaWVyczp7c05hbWU6InNhcGVuZG1vZGlmaWVycyIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuRU5EJiZrKGUpfX0sc2FwYm90dG9tOntzTmFtZToic2FwYm90dG9tIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5FTkQmJmgoZSx0cnVlLGZhbHNlLGZhbHNlKX19LHNhcHBhZ2V1cDp7c05hbWU6InNhcHBhZ2V1cCIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuUEFHRV9VUCYmIWsoZSl9fSxzYXBwYWdldXBtb2RpZmllcnM6e3NOYW1lOiJzYXBwYWdldXBtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLlBBR0VfVVAmJmsoZSl9fSxzYXBwYWdlZG93bjp7c05hbWU6InNhcHBhZ2Vkb3duIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5QQUdFX0RPV04mJiFrKGUpfX0sc2FwcGFnZWRvd25tb2RpZmllcnM6e3NOYW1lOiJzYXBwYWdlZG93bm1vZGlmaWVycyIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuUEFHRV9ET1dOJiZrKGUpfX0sc2Fwc2VsZWN0OntzTmFtZToic2Fwc2VsZWN0IixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4oZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5FTlRFUnx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5TUEFDRSkmJiFrKGUpfX0sc2Fwc2VsZWN0bW9kaWZpZXJzOntzTmFtZToic2Fwc2VsZWN0bW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4oZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5FTlRFUnx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5TUEFDRSkmJmsoZSl9fSxzYXBzcGFjZTp7c05hbWU6InNhcHNwYWNlIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5TUEFDRSYmIWsoZSl9fSxzYXBzcGFjZW1vZGlmaWVyczp7c05hbWU6InNhcHNwYWNlbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5TUEFDRSYmayhlKX19LHNhcGVudGVyOntzTmFtZToic2FwZW50ZXIiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkVOVEVSJiYhayhlKX19LHNhcGVudGVybW9kaWZpZXJzOntzTmFtZToic2FwZW50ZXJtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkVOVEVSJiZrKGUpfX0sc2FwYmFja3NwYWNlOntzTmFtZToic2FwYmFja3NwYWNlIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5CQUNLU1BBQ0UmJiFrKGUpfX0sc2FwYmFja3NwYWNlbW9kaWZpZXJzOntzTmFtZToic2FwYmFja3NwYWNlbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5CQUNLU1BBQ0UmJmsoZSl9fSxzYXBkZWxldGU6e3NOYW1lOiJzYXBkZWxldGUiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkRFTEVURSYmIWsoZSl9fSxzYXBkZWxldGVtb2RpZmllcnM6e3NOYW1lOiJzYXBkZWxldGVtb2RpZmllcnMiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkRFTEVURSYmayhlKX19LHNhcGV4cGFuZDp7c05hbWU6InNhcGV4cGFuZCIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuTlVNUEFEX1BMVVMmJiFrKGUpfX0sc2FwZXhwYW5kbW9kaWZpZXJzOntzTmFtZToic2FwZXhwYW5kbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5OVU1QQURfUExVUyYmayhlKX19LHNhcGNvbGxhcHNlOntzTmFtZToic2FwY29sbGFwc2UiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLk5VTVBBRF9NSU5VUyYmIWsoZSl9fSxzYXBjb2xsYXBzZW1vZGlmaWVyczp7c05hbWU6InNhcGNvbGxhcHNlbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5OVU1QQURfTUlOVVMmJmsoZSl9fSxzYXBjb2xsYXBzZWFsbDp7c05hbWU6InNhcGNvbGxhcHNlYWxsIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5OVU1QQURfQVNURVJJU0smJiFrKGUpfX0sc2FwZXNjYXBlOntzTmFtZToic2FwZXNjYXBlIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5FU0NBUEUmJiFrKGUpfX0sc2FwdGFibmV4dDp7c05hbWU6InNhcHRhYm5leHQiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLlRBQiYmIWsoZSl9fSxzYXB0YWJwcmV2aW91czp7c05hbWU6InNhcHRhYnByZXZpb3VzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXtyZXR1cm4gZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5UQUImJmgoZSxmYWxzZSxmYWxzZSx0cnVlKX19LHNhcHNraXBmb3J3YXJkOntzTmFtZToic2Fwc2tpcGZvcndhcmQiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkY2JiYhayhlKX19LHNhcHNraXBiYWNrOntzTmFtZToic2Fwc2tpcGJhY2siLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3JldHVybiBlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkY2JiZoKGUsZmFsc2UsZmFsc2UsdHJ1ZSl9fSxzYXBkZWNyZWFzZTp7c05hbWU6InNhcGRlY3JlYXNlIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt2YXIgcD1yP3Euc2FwLktleUNvZGVzLkFSUk9XX1JJR0hUOnEuc2FwLktleUNvZGVzLkFSUk9XX0xFRlQ7cmV0dXJuKGUua2V5Q29kZT09cHx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19ET1dOKSYmIWsoZSl9fSxzYXBkZWNyZWFzZW1vZGlmaWVyczp7c05hbWU6InNhcGRlY3JlYXNlbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt2YXIgcD1yP3Euc2FwLktleUNvZGVzLkFSUk9XX1JJR0hUOnEuc2FwLktleUNvZGVzLkFSUk9XX0xFRlQ7cmV0dXJuKGUua2V5Q29kZT09cHx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19ET1dOKSYmayhlKX19LHNhcGluY3JlYXNlOntzTmFtZToic2FwaW5jcmVhc2UiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3ZhciByPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFJUTCgpO3ZhciBuPXI/cS5zYXAuS2V5Q29kZXMuQVJST1dfTEVGVDpxLnNhcC5LZXlDb2Rlcy5BUlJPV19SSUdIVDtyZXR1cm4oZS5rZXlDb2RlPT1ufHxlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX1VQKSYmIWsoZSl9fSxzYXBpbmNyZWFzZW1vZGlmaWVyczp7c05hbWU6InNhcGluY3JlYXNlbW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt2YXIgbj1yP3Euc2FwLktleUNvZGVzLkFSUk9XX0xFRlQ6cS5zYXAuS2V5Q29kZXMuQVJST1dfUklHSFQ7cmV0dXJuKGUua2V5Q29kZT09bnx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19VUCkmJmsoZSl9fSxzYXBwcmV2aW91czp7c05hbWU6InNhcHByZXZpb3VzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt2YXIgcD1yP3Euc2FwLktleUNvZGVzLkFSUk9XX1JJR0hUOnEuc2FwLktleUNvZGVzLkFSUk9XX0xFRlQ7cmV0dXJuKGUua2V5Q29kZT09cHx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19VUCkmJiFrKGUpfX0sc2FwcHJldmlvdXNtb2RpZmllcnM6e3NOYW1lOiJzYXBwcmV2aW91c21vZGlmaWVycyIsYVR5cGVzOlsia2V5ZG93biJdLGZuQ2hlY2s6ZnVuY3Rpb24oZSl7dmFyIHI9c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0UlRMKCk7dmFyIHA9cj9xLnNhcC5LZXlDb2Rlcy5BUlJPV19SSUdIVDpxLnNhcC5LZXlDb2Rlcy5BUlJPV19MRUZUO3JldHVybihlLmtleUNvZGU9PXB8fGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfVVApJiZrKGUpfX0sc2FwbmV4dDp7c05hbWU6InNhcG5leHQiLGFUeXBlczpbImtleWRvd24iXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3ZhciByPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFJUTCgpO3ZhciBuPXI/cS5zYXAuS2V5Q29kZXMuQVJST1dfTEVGVDpxLnNhcC5LZXlDb2Rlcy5BUlJPV19SSUdIVDtyZXR1cm4oZS5rZXlDb2RlPT1ufHxlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX0RPV04pJiYhayhlKX19LHNhcG5leHRtb2RpZmllcnM6e3NOYW1lOiJzYXBuZXh0bW9kaWZpZXJzIixhVHlwZXM6WyJrZXlkb3duIl0sZm5DaGVjazpmdW5jdGlvbihlKXt2YXIgcj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt2YXIgbj1yP3Euc2FwLktleUNvZGVzLkFSUk9XX0xFRlQ6cS5zYXAuS2V5Q29kZXMuQVJST1dfUklHSFQ7cmV0dXJuKGUua2V5Q29kZT09bnx8ZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19ET1dOKSYmayhlKX19LHNhcGRlbGF5ZWRkb3VibGVjbGljazp7c05hbWU6InNhcGRlbGF5ZWRkb3VibGVjbGljayIsYVR5cGVzOlsiY2xpY2siXSxmbkNoZWNrOmZ1bmN0aW9uKGUpe3ZhciBpPXEoZS50YXJnZXQpO3ZhciBqPWUudGltZVN0YW1wO3ZhciBuPWkuZGF0YSgic2FwZGVsYXllZGRvdWJsZWNsaWNrX2xhc3RDbGlja1RpbWVzdGFtcCIpO3ZhciBwPW58fDA7aS5kYXRhKCJzYXBkZWxheWVkZG91YmxlY2xpY2tfbGFzdENsaWNrVGltZXN0YW1wIixqKTt2YXIgcj1qLXA7cmV0dXJuKHI+PTMwMCYmcjw9MTMwMCl9fX07dmFyIFA9WyJzYXBkb3duIiwic2FwZG93bm1vZGlmaWVycyIsInNhcHNob3ciLCJzYXB1cCIsInNhcHVwbW9kaWZpZXJzIiwic2FwaGlkZSIsInNhcGxlZnQiLCJzYXBsZWZ0bW9kaWZpZXJzIiwic2FwcmlnaHQiLCJzYXByaWdodG1vZGlmaWVycyIsInNhcGhvbWUiLCJzYXBob21lbW9kaWZpZXJzIiwic2FwdG9wIiwic2FwZW5kIiwic2FwZW5kbW9kaWZpZXJzIiwic2FwYm90dG9tIiwic2FwcGFnZXVwIiwic2FwcGFnZXVwbW9kaWZpZXJzIiwic2FwcGFnZWRvd24iLCJzYXBwYWdlZG93bm1vZGlmaWVycyIsInNhcHNlbGVjdCIsInNhcHNlbGVjdG1vZGlmaWVycyIsInNhcHNwYWNlIiwic2Fwc3BhY2Vtb2RpZmllcnMiLCJzYXBlbnRlciIsInNhcGVudGVybW9kaWZpZXJzIiwic2FwZXhwYW5kIiwic2FwYmFja3NwYWNlIiwic2FwYmFja3NwYWNlbW9kaWZpZXJzIiwic2FwZGVsZXRlIiwic2FwZGVsZXRlbW9kaWZpZXJzIiwic2FwZXhwYW5kbW9kaWZpZXJzIiwic2FwY29sbGFwc2UiLCJzYXBjb2xsYXBzZW1vZGlmaWVycyIsInNhcGNvbGxhcHNlYWxsIiwic2FwZXNjYXBlIiwic2FwdGFibmV4dCIsInNhcHRhYnByZXZpb3VzIiwic2Fwc2tpcGZvcndhcmQiLCJzYXBza2lwYmFjayIsInNhcHByZXZpb3VzIiwic2FwcHJldmlvdXNtb2RpZmllcnMiLCJzYXBuZXh0Iiwic2FwbmV4dG1vZGlmaWVycyIsInNhcGRlY3JlYXNlIiwic2FwZGVjcmVhc2Vtb2RpZmllcnMiLCJzYXBpbmNyZWFzZSIsInNhcGluY3JlYXNlbW9kaWZpZXJzIiwic2FwZGVsYXllZGRvdWJsZWNsaWNrIl07KGZ1bmN0aW9uIGluaXRUb3VjaEV2ZW50U3VwcG9ydCgpe3Euc2FwLnRvdWNoRXZlbnRNb2RlPSJTSU0iO3ZhciBBPVtdO3ZhciBlPVtdO2lmKHNhcC51aS5EZXZpY2Uuc3VwcG9ydC50b3VjaCl7cS5zYXAudG91Y2hFdmVudE1vZGU9Ik9OIjtxLmV2ZW50LnByb3BzLnB1c2goInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiKX12YXIgaj1mdW5jdGlvbih1LE8sSCl7dmFyIHY9Il9fIit1KyJIYW5kbGVyIjt2YXIgdz0ic2FwIit1O0EucHVzaCh3KTtlLnB1c2goe3NOYW1lOnUsYVR5cGVzOlt3XSxmbkNoZWNrOmZ1bmN0aW9uKEUpe3JldHVybiB0cnVlfX0pO3EuZXZlbnQuc3BlY2lhbFt3XT17YWRkOmZ1bmN0aW9uKHgpe3ZhciB5PXRoaXMsJD1xKHRoaXMpLHo9e2RvbVJlZjp5LGV2ZW50TmFtZTp1LHNhcEV2ZW50TmFtZTp3LGV2ZW50SGFuZGxlOnh9O3ZhciBCPWZ1bmN0aW9uKEUpe0goRSx6KX07JC5kYXRhKHYreC5ndWlkLEIpO2Zvcih2YXIgaT0wO2k8Ty5sZW5ndGg7aSsrKXskLm9uKE9baV0sQil9fSxyZW1vdmU6ZnVuY3Rpb24oeCl7dmFyICQ9cSh0aGlzKTt2YXIgSD0kLmRhdGEodit4Lmd1aWQpOyQucmVtb3ZlRGF0YSh2K3guZ3VpZCk7Zm9yKHZhciBpPTA7aTxPLmxlbmd0aDtpKyspe3EuZXZlbnQucmVtb3ZlKHRoaXMsT1tpXSxIKX19fX07dmFyIE09ZnVuY3Rpb24oRSxDKXt2YXIgRD1xKEMuZG9tUmVmKTtpZihFLmlzTWFya2VkKCJkZWxheWVkTW91c2VFdmVudCIpKXtyZXR1cm59aWYoIShFLnR5cGUhPSJtb3VzZW91dCJ8fChFLnR5cGU9PT0ibW91c2VvdXQiJiZxLnNhcC5jaGVja01vdXNlRW50ZXJPckxlYXZlKEUsQy5kb21SZWYpKSkpe3ZhciB1PXRydWU7dmFyIHY9RC5kYXRhKCJfX3RvdWNoc3RhcnRfY29udHJvbCIpO2lmKHYpe3ZhciB3PXEuc2FwLmRvbUJ5SWQodik7aWYodyYmcS5zYXAuY2hlY2tNb3VzZUVudGVyT3JMZWF2ZShFLHcpKXt1PWZhbHNlfX1pZih1KXtyZXR1cm59fXZhciBOPXEuZXZlbnQuZml4KEUub3JpZ2luYWxFdmVudHx8RSk7Ti50eXBlPUMuc2FwRXZlbnROYW1lO2lmKE4uaXNNYXJrZWQoImZpcnN0VUlBcmVhIikpe04uc2V0TWFyaygiaGFuZGxlZEJ5VUlBcmVhIixmYWxzZSl9dmFyIHg9W3tpZGVudGlmaWVyOjEscGFnZVg6Ti5wYWdlWCxwYWdlWTpOLnBhZ2VZLGNsaWVudFg6Ti5jbGllbnRYLGNsaWVudFk6Ti5jbGllbnRZLHNjcmVlblg6Ti5zY3JlZW5YLHNjcmVlblk6Ti5zY3JlZW5ZLHRhcmdldDpOLnRhcmdldCxyYWRpdXNYOjEscmFkaXVzWToxLHJvdGF0aW9uQW5nbGU6MH1dO3N3aXRjaChDLmV2ZW50TmFtZSl7Y2FzZSJ0b3VjaHN0YXJ0IjpjYXNlInRvdWNobW92ZSI6Ti50b3VjaGVzPU4uY2hhbmdlZFRvdWNoZXM9Ti50YXJnZXRUb3VjaGVzPXg7YnJlYWs7Y2FzZSJ0b3VjaGVuZCI6Ti5jaGFuZ2VkVG91Y2hlcz14O04udG91Y2hlcz1OLnRhcmdldFRvdWNoZXM9W107YnJlYWt9aWYoQy5ldmVudE5hbWU9PT0idG91Y2hzdGFydCJ8fEQuZGF0YSgiX190b3VjaF9pbl9wcm9ncmVzcyIpKXtELmRhdGEoIl9fdG91Y2hfaW5fcHJvZ3Jlc3MiLCJYIik7dmFyIHk9cS5mbi5jb250cm9sP3EoRS50YXJnZXQpLmNvbnRyb2woMCk6bnVsbDtpZih5KXtELmRhdGEoIl9fdG91Y2hzdGFydF9jb250cm9sIix5LmdldElkKCkpfWlmKEUudHlwZT09PSJtb3VzZW91dCIpe04uc2V0TWFya2VkKCJmcm9tTW91c2VvdXQiKX1DLmV2ZW50SGFuZGxlLmhhbmRsZXIuY2FsbChDLmRvbVJlZixOKTtpZihDLmV2ZW50TmFtZT09PSJ0b3VjaGVuZCImJiFOLmlzTWFya2VkKCJmcm9tTW91c2VvdXQiKSl7RC5yZW1vdmVEYXRhKCJfX3RvdWNoX2luX3Byb2dyZXNzIik7RC5yZW1vdmVEYXRhKCJfX3RvdWNoc3RhcnRfY29udHJvbCIpfX19O2ooInRvdWNoc3RhcnQiLFsibW91c2Vkb3duIl0sTSk7aigidG91Y2hlbmQiLFsibW91c2V1cCIsIm1vdXNlb3V0Il0sTSk7aigidG91Y2htb3ZlIixbIm1vdXNlbW92ZSJdLE0pO2Z1bmN0aW9uIG4oKXt2YXIgQz13aW5kb3dbInNhcC11aS1jb25maWciXXx8e30sTD1DLmxpYnN8fCIiO2Z1bmN0aW9uIHUoSyl7cmV0dXJuIGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKCJzYXAtdWktIitLKT4tMXx8ISFDW0sudG9Mb3dlckNhc2UoKV19cmV0dXJuIHNhcC51aS5EZXZpY2Uuc3VwcG9ydC50b3VjaHx8dSgieHgtdGVzdC1tb2JpbGUiKXx8dSgieHgtZmFrZU9TIil8fEwubWF0Y2goL3NhcC5tXGIvKX1pZihuKCkpe3Euc2FwLnJlcXVpcmUoInNhcC51aS50aGlyZHBhcnR5LmpxdWVyeS1tb2JpbGUtY3VzdG9tIik7aWYoc2FwLnVpLkRldmljZS5zdXBwb3J0LnRvdWNoKXt2YXIgRj1mYWxzZSxwPXEudm1vdXNlLm1vdmVEaXN0YW5jZVRocmVzaG9sZCxyLHQ7dmFyIFQ9ZnVuY3Rpb24oRSxDKXt2YXIgdT1FLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXTtpZihFLnR5cGU9PT0idG91Y2hzdGFydCIpe0Y9ZmFsc2U7cj11LnBhZ2VYO3Q9dS5wYWdlWX1lbHNlIGlmKEUudHlwZT09PSJ0b3VjaG1vdmUiKXtGPUZ8fChNYXRoLmFicyh1LnBhZ2VYLXIpPnB8fE1hdGguYWJzKHUucGFnZVktdCk+cCl9dmFyIE49cS5ldmVudC5maXgoRS5vcmlnaW5hbEV2ZW50fHxFKTtOLnR5cGU9Qy5zYXBFdmVudE5hbWU7aWYoTi5pc01hcmtlZCgiZmlyc3RVSUFyZWEiKSl7Ti5zZXRNYXJrKCJoYW5kbGVkQnlVSUFyZWEiLGZhbHNlKX1kZWxldGUgTi50b3VjaGVzO2RlbGV0ZSBOLmNoYW5nZWRUb3VjaGVzO2RlbGV0ZSBOLnRhcmdldFRvdWNoZXM7dmFyIHY9KEMuZXZlbnROYW1lPT09Im1vdXNldXAiP0UuY2hhbmdlZFRvdWNoZXNbMF06RS50b3VjaGVzWzBdKTtOLnNjcmVlblg9di5zY3JlZW5YO04uc2NyZWVuWT12LnNjcmVlblk7Ti5jbGllbnRYPXYuY2xpZW50WDtOLmNsaWVudFk9di5jbGllbnRZO04uY3RybEtleT12LmN0cmxLZXk7Ti5hbHRLZXk9di5hbHRLZXk7Ti5zaGlmdEtleT12LnNoaWZ0S2V5O0MuZXZlbnRIYW5kbGUuaGFuZGxlci5jYWxsKEMuZG9tUmVmLE4pO2lmKEUudHlwZT09PSJ0b3VjaGVuZCImJiFGKXtOLnR5cGU9ImNsaWNrIjtOLnNldE1hcmsoImhhbmRsZWRCeVVJQXJlYSIsZmFsc2UpO0MuZXZlbnRIYW5kbGUuaGFuZGxlci5jYWxsKEMuZG9tUmVmLE4pfX07cS5zYXAuZGlzYWJsZVRvdWNoVG9Nb3VzZUhhbmRsaW5nKCk7cS5zYXAuX3RvdWNoVG9Nb3VzZUV2ZW50PWZhbHNlO2ooIm1vdXNlZG93biIsWyJ0b3VjaHN0YXJ0Il0sVCk7aigibW91c2Vtb3ZlIixbInRvdWNobW92ZSJdLFQpO2ooIm1vdXNldXAiLFsidG91Y2hlbmQiLCJ0b3VjaGNhbmNlbCJdLFQpfUEucHVzaCgic3dpcGUiLCJ0YXAiLCJzd2lwZWxlZnQiLCJzd2lwZXJpZ2h0Iiwic2Nyb2xsc3RhcnQiLCJzY3JvbGxzdG9wIik7ZS5wdXNoKHtzTmFtZToic3dpcGViZWdpbiIsYVR5cGVzOlsic3dpcGVsZWZ0Iiwic3dpcGVyaWdodCJdLGZuQ2hlY2s6ZnVuY3Rpb24oRSl7dmFyIFI9c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0UlRMKCk7cmV0dXJuKFImJkUudHlwZT09PSJzd2lwZXJpZ2h0Iil8fCghUiYmRS50eXBlPT09InN3aXBlbGVmdCIpfX0pO2UucHVzaCh7c05hbWU6InN3aXBlZW5kIixhVHlwZXM6WyJzd2lwZWxlZnQiLCJzd2lwZXJpZ2h0Il0sZm5DaGVjazpmdW5jdGlvbihFKXt2YXIgUj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTtyZXR1cm4oIVImJkUudHlwZT09PSJzd2lwZXJpZ2h0Iil8fChSJiZFLnR5cGU9PT0ic3dpcGVsZWZ0Iil9fSl9aWYocS5zYXAuVmVyc2lvbihxLmZuLmpxdWVyeSkuY29tcGFyZVRvKCIxLjkuMSIpPDApe3Euc2FwLkNvbnRyb2xFdmVudHM9cS5zYXAuQ29udHJvbEV2ZW50cy5jb25jYXQoQSl9ZWxzZXtxLnNhcC5Db250cm9sRXZlbnRzPUEuY29uY2F0KHEuc2FwLkNvbnRyb2xFdmVudHMpfWZvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXtxLnNhcC5Qc2V1ZG9FdmVudHNbZVtpXS5zTmFtZV09ZVtpXTtQLnB1c2goZVtpXS5zTmFtZSl9fSgpKTtmdW5jdGlvbiBmKCl7dmFyIGU9cS5zYXAuUHNldWRvRXZlbnRzLHI9W107Zm9yKHZhciBuIGluIGUpe2lmKGVbbl0uYVR5cGVzKXtmb3IodmFyIGo9MCxpPWVbbl0uYVR5cGVzLmxlbmd0aDtqPGk7aisrKXt2YXIgdD1lW25dLmFUeXBlc1tqXTtpZihxLmluQXJyYXkodCxyKT09LTEpe3IucHVzaCh0KX19fX1yZXR1cm4gcn12YXIgZz1mKCk7ZnVuY3Rpb24gaChlLEMsQSxpKXtyZXR1cm4gZS5zaGlmdEtleT09aSYmZS5hbHRLZXk9PUEmJmwoZSk9PUN9ZnVuY3Rpb24gayhlKXtyZXR1cm4gZS5zaGlmdEtleXx8ZS5hbHRLZXl8fGwoZSl9ZnVuY3Rpb24gbChlKXtyZXR1cm4hIShlLm1ldGFLZXl8fGUuY3RybEtleSl9cS5FdmVudC5wcm90b3R5cGUuZ2V0UHNldWRvVHlwZXM9ZnVuY3Rpb24oKXt2YXIgcD1bXTtpZihxLmluQXJyYXkodGhpcy50eXBlLGcpIT0tMSl7dmFyIGU9UDt2YXIgaj1lLmxlbmd0aDt2YXIgbj1udWxsO2Zvcih2YXIgaT0wO2k8ajtpKyspe249cS5zYXAuUHNldWRvRXZlbnRzW2VbaV1dO2lmKG4uYVR5cGVzJiZxLmluQXJyYXkodGhpcy50eXBlLG4uYVR5cGVzKT4tMSYmbi5mbkNoZWNrJiZuLmZuQ2hlY2sodGhpcykpe3AucHVzaChuLnNOYW1lKX19fXRoaXMuZ2V0UHNldWRvVHlwZXM9ZnVuY3Rpb24oKXtyZXR1cm4gcC5zbGljZSgpfTtyZXR1cm4gcC5zbGljZSgpfTtxLkV2ZW50LnByb3RvdHlwZS5pc1BzZXVkb1R5cGU9ZnVuY3Rpb24odCl7dmFyIHA9dGhpcy5nZXRQc2V1ZG9UeXBlcygpO2lmKHQpe3JldHVybiBxLmluQXJyYXkodCxwKT4tMX1lbHNle3JldHVybiBwLmxlbmd0aD4wfX07dmFyIF89cS5FdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ7cS5FdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ9ZnVuY3Rpb24oKXtfLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7aWYoIWUpe3JldHVybn1pZihlLmtleUNvZGUhPTApe3RyeXtpZighc2FwLnVpLkRldmljZS5icm93c2VyLmZpcmVmb3gpe2Uua2V5Q29kZT0wfX1jYXRjaChpKXt9fX07cS5zYXAuYmluZEFueUV2ZW50PWZ1bmN0aW9uIGJpbmRBbnlFdmVudChDKXtpZihDKXtxKGRvY3VtZW50KS5iaW5kKHEuc2FwLkNvbnRyb2xFdmVudHMuam9pbigiICIpLEMpfX07cS5zYXAudW5iaW5kQW55RXZlbnQ9ZnVuY3Rpb24gdW5iaW5kQW55RXZlbnQoQyl7aWYoQyl7cShkb2N1bWVudCkudW5iaW5kKHEuc2FwLkNvbnRyb2xFdmVudHMuam9pbigiICIpLEMpfX07cS5zYXAuY2hlY2tNb3VzZUVudGVyT3JMZWF2ZT1mdW5jdGlvbiBjaGVja01vdXNlRW50ZXJPckxlYXZlKEUsRCl7aWYoRS50eXBlIT0ibW91c2VvdmVyIiYmRS50eXBlIT0ibW91c2VvdXQiKXtyZXR1cm4gZmFsc2V9dmFyIGk9ZmFsc2U7dmFyIGo9RDt2YXIgcD1FLnJlbGF0ZWRUYXJnZXQ7dHJ5e3doaWxlKHAmJnAhPT1qKXtwPXAucGFyZW50Tm9kZX1pZihwIT09ail7aT10cnVlfX1jYXRjaChlKXt9cmV0dXJuIGl9O3EuRXZlbnQucHJvdG90eXBlLmdldE9mZnNldFg9ZnVuY3Rpb24oKXtpZih0aGlzLnR5cGU9PSdjbGljaycpe2lmKHRoaXMub2Zmc2V0WCl7cmV0dXJuIHRoaXMub2Zmc2V0WH1pZih0aGlzLmxheWVyWCl7cmV0dXJuIHRoaXMubGF5ZXJYfWlmKHRoaXMub3JpZ2luYWxFdmVudC5sYXllclgpe3JldHVybiB0aGlzLm9yaWdpbmFsRXZlbnQubGF5ZXJYfX1yZXR1cm4gMH07cS5FdmVudC5wcm90b3R5cGUuZ2V0T2Zmc2V0WT1mdW5jdGlvbigpe2lmKHRoaXMudHlwZT09J2NsaWNrJyl7aWYodGhpcy5vZmZzZXRZKXtyZXR1cm4gdGhpcy5vZmZzZXRZfWlmKHRoaXMubGF5ZXJZKXtyZXR1cm4gdGhpcy5sYXllcll9aWYodGhpcy5vcmlnaW5hbEV2ZW50LmxheWVyWSl7cmV0dXJuIHRoaXMub3JpZ2luYWxFdmVudC5sYXllcll9fXJldHVybiAwfTt2YXIgUz1xLkV2ZW50LnByb3RvdHlwZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb247cS5FdmVudC5wcm90b3R5cGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uPWZ1bmN0aW9uKGUpe1MuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGUpe3RoaXMuX2JJc1N0b3BIYW5kbGVycz10cnVlfX07cS5FdmVudC5wcm90b3R5cGUuaXNJbW1lZGlhdGVIYW5kbGVyUHJvcGFnYXRpb25TdG9wcGVkPWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLl9iSXNTdG9wSGFuZGxlcnN9O3EuRXZlbnQucHJvdG90eXBlLnNldE1hcms9ZnVuY3Rpb24oSyx2KXtLPUt8fCJoYW5kbGVkQnlDb250cm9sIjt2PWFyZ3VtZW50cy5sZW5ndGg8Mj90cnVlOnY7KHRoaXMub3JpZ2luYWxFdmVudHx8dGhpcylbIl9zYXB1aV8iK0tdPXZ9O3EuRXZlbnQucHJvdG90eXBlLnNldE1hcmtlZD1xLkV2ZW50LnByb3RvdHlwZS5zZXRNYXJrO3EuRXZlbnQucHJvdG90eXBlLmlzTWFya2VkPWZ1bmN0aW9uKEspe0s9S3x8ImhhbmRsZWRCeUNvbnRyb2wiO3JldHVybiEhKHRoaXMub3JpZ2luYWxFdmVudHx8dGhpcylbIl9zYXB1aV8iK0tdfTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLmhpc3RvcnknKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdqcXVlcnkuc2FwLmhpc3RvcnknKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLmhpc3RvcnkiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdqcXVlcnkuc2FwLnN0cmluZ3MnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7KGZ1bmN0aW9uKCQsdyl7dmFyIHM9Il9za2lwIixyPS9cfGlkLVswLTldKy1bMC05XSsvLGE9bmV3IFJlZ0V4cChzKyJbMC05XSokIiksYj1bXSxoPVtdLFM9e30sYz0wLGQ9dW5kZWZpbmVkLEk9InwiLEg9W10sZT1mYWxzZSxmLGc9ZmFsc2U7JC5zYXAuaGlzdG9yeT1mdW5jdGlvbihBKXtpZighcS5pc1BsYWluT2JqZWN0KEEpKXtyZXR1cm59aWYoIWcpe3ZhciBXPSQodyksQj0ody5sb2NhdGlvbi5ocmVmLnNwbGl0KCIjIilbMV18fCIiKTtXLmJpbmQoJ2hhc2hjaGFuZ2UnLGspO2lmKCQuaXNBcnJheShBLnJvdXRlcykpe3ZhciBpLEM7Zm9yKGk9MDtpPEEucm91dGVzLmxlbmd0aDtpKyspe0M9QS5yb3V0ZXNbaV07aWYoQy5wYXRoJiZDLmhhbmRsZXIpeyQuc2FwLmhpc3RvcnkuYWRkUm91dGUoQy5wYXRoLEMuaGFuZGxlcil9fX1pZihxLmlzRnVuY3Rpb24oQS5kZWZhdWx0SGFuZGxlcikpe2Y9QS5kZWZhdWx0SGFuZGxlcn1oLnB1c2goQik7aWYoQi5sZW5ndGg+MSl7Vy50cmlnZ2VyKCJoYXNoY2hhbmdlIixbdHJ1ZV0pfWVsc2V7ZD1CfWc9dHJ1ZX19OyQuc2FwLmhpc3RvcnkuYWRkSGlzdG9yeT1mdW5jdGlvbihpLEEsQixWKXt2YXIgQyxEO2lmKEI9PT11bmRlZmluZWQpe0I9dHJ1ZX1pZighVil7RD1uKGksQSk7Qz1vKEQpO2lmKEMpe0QrPShJK0MpfUQrPShJKyhCPyIxIjoiMCIpKX1lbHNle0Q9bShkKX1ILnB1c2goRCk7U1tEXT10cnVlO3cubG9jYXRpb24uaGFzaD1EO3JldHVybiBEfTskLnNhcC5oaXN0b3J5LmFkZFZpcnR1YWxIaXN0b3J5PWZ1bmN0aW9uKCl7JC5zYXAuaGlzdG9yeS5hZGRIaXN0b3J5KCIiLHVuZGVmaW5lZCxmYWxzZSx0cnVlKX07JC5zYXAuaGlzdG9yeS5hZGRSb3V0ZT1mdW5jdGlvbihpLEEsVCl7aWYoVCl7QT1xLnByb3h5KEEsVCl9dmFyIFI9e307Ui5zSWRlbnRpZmllcj1pO1JbJ2FjdGlvbiddPUE7Yi5wdXNoKFIpO3JldHVybiB0aGlzfTskLnNhcC5oaXN0b3J5LnNldERlZmF1bHRIYW5kbGVyPWZ1bmN0aW9uKGkpe2Y9aX07JC5zYXAuaGlzdG9yeS5nZXREZWZhdWx0SGFuZGxlcj1mdW5jdGlvbigpe3JldHVybiBmfTskLnNhcC5oaXN0b3J5LmJhY2tUb0hhc2g9ZnVuY3Rpb24oaSl7aT1pfHwiIjt2YXIgQTtpZihoLmxlbmd0aD09PTEpe2lmKCQuaXNGdW5jdGlvbihmKSl7ZigpfX1lbHNle0E9aihkLGkpO2lmKEE8MCl7dy5oaXN0b3J5LmdvKEEpfWVsc2V7cS5zYXAubG9nLmVycm9yKCJqUXVlcnkuc2FwLmhpc3RvcnkuYmFja1RvSGFzaDogIitpKyJpcyBub3QgaW4gdGhlIGhpc3Rvcnkgc3RhY2sgb3IgaXQncyBhZnRlciB0aGUgY3VycmVudCBoYXNoIil9fX07JC5zYXAuaGlzdG9yeS5iYWNrVGhyb3VnaFBhdGg9ZnVuY3Rpb24oUCl7UD1QfHwiIjtQPXcuZW5jb2RlVVJJQ29tcG9uZW50KFApO3ZhciBpO2lmKGgubGVuZ3RoPT09MSl7aWYoJC5pc0Z1bmN0aW9uKGYpKXtmKCl9fWVsc2V7aT1qKGQsUCx0cnVlKTtpZihpPDApe3cuaGlzdG9yeS5nbyhpKX1lbHNle3Euc2FwLmxvZy5lcnJvcigialF1ZXJ5LnNhcC5oaXN0b3J5LmJhY2tUaHJvdWdoUGF0aDogdGhlcmUncyBubyBoaXN0b3J5IHN0YXRlIHdoaWNoIGhhcyB0aGUgIitQKyIgaWRlbnRpZmllciBpbiB0aGUgaGlzdG9yeSBzdGFjayBiZWZvcmUgdGhlIGN1cnJlbnQgaGFzaCIpfX19OyQuc2FwLmhpc3RvcnkuYmFjaz1mdW5jdGlvbihpKXtpZihoLmxlbmd0aD09PTEpe2lmKCQuaXNGdW5jdGlvbihmKSl7ZigkLnNhcC5oaXN0b3J5Lk5hdlR5cGUuQmFjayl9fWVsc2V7aWYoIWkpe2k9MX13Lmhpc3RvcnkuZ28oLTEqaSl9fTskLnNhcC5oaXN0b3J5Lk5hdlR5cGU9e307JC5zYXAuaGlzdG9yeS5OYXZUeXBlLkJhY2s9Il9iYWNrIjskLnNhcC5oaXN0b3J5Lk5hdlR5cGUuRm9yd2FyZD0iX2ZvcndhcmQiOyQuc2FwLmhpc3RvcnkuTmF2VHlwZS5Cb29rbWFyaz0iX2Jvb2ttYXJrIjskLnNhcC5oaXN0b3J5Lk5hdlR5cGUuVW5rbm93bj0iX3Vua25vd24iO2Z1bmN0aW9uIGooQyxULFApe3ZhciBBPSQuaW5BcnJheShDLGgpLEIsaSxEO2lmKEE+MCl7aWYoUCl7Zm9yKGk9QS0xO2k+PTA7aS0tKXtEPWhbaV07aWYoRC5pbmRleE9mKFQpPT09MCYmIXUoRCkpe3JldHVybiBpLUF9fX1lbHNle0I9JC5pbkFycmF5KFQsaCk7aWYoKEI9PT0tMSkmJlQubGVuZ3RoPT09MCl7cmV0dXJuLTEqQX1pZigoQj4tMSkmJihCPEEpKXtyZXR1cm4gQi1BfX19cmV0dXJuIDB9ZnVuY3Rpb24gayhFLE0pe3ZhciBpPSh3LmxvY2F0aW9uLmhyZWYuc3BsaXQoIiMiKVsxXXx8IiIpO2k9bChpKTtpZihNfHwhU1tpXSl7SC5wdXNoKGkpfWlmKCFlKXtlPXRydWU7aWYoSC5sZW5ndGg+MCl7dmFyIEE9SC5zaGlmdCgpO2lmKFNbQV0pe3QoQSk7ZGVsZXRlIFNbQV19ZWxzZXt4KEEpfWQ9QX1lPWZhbHNlfX1mdW5jdGlvbiBwKFUpe3ZhciBpPVUuaW5kZXhPZigiIyIpO2lmKGk9PT0tMSl7cmV0dXJuIiJ9ZWxzZSBpZihpPjAmJmkhPT1VLmxlbmd0aC0xKXtyZXR1cm4gVS5zbGljZShpKzEpfX1mdW5jdGlvbiBsKGksUil7dmFyIEE9aSxCPWk/aS5pbmRleE9mKCIjIik6LTEsQyxEO2lmKEI9PT0wKXtBPUEuc2xpY2UoQisxKX1pZihSKXtBPUEucmVwbGFjZShyLCIiKX1yZXR1cm4gQX1mdW5jdGlvbiBtKGkpe3ZhciBQPWk/aToiIjtpZih1KFApKXt2YXIgQT1QLmxhc3RJbmRleE9mKHMpO1A9UC5zbGljZSgwLEEpfXJldHVybiBQK3MrYysrfWZ1bmN0aW9uIG4oaSxBKXt2YXIgRT13LmVuY29kZVVSSUNvbXBvbmVudChpKTt2YXIgQj13LmVuY29kZVVSSUNvbXBvbmVudCh3LkpTT04uc3RyaW5naWZ5KEEpKTtyZXR1cm4gRStJK0J9ZnVuY3Rpb24gbyhBKXt2YXIgQj0kLmluQXJyYXkoZCxoKSxULGksQztpZihCPi0xKXtmb3IoaT0wO2k8QisxO2krKyl7Qz1oW2ldO2lmKEMuc2xpY2UoMCxDLmxlbmd0aC0yKT09PUEpe3JldHVybiBxLnNhcC51aWQoKX19fXJldHVybiIifWZ1bmN0aW9uIHQoaSl7dmFyIEE9JC5pbkFycmF5KGQsaCk7aWYoIShBPT09LTF8fEE9PT1oLmxlbmd0aC0xKSl7aC5zcGxpY2UoQSsxLGgubGVuZ3RoLTEtQSl9aC5wdXNoKGkpfWZ1bmN0aW9uIHUoaSl7cmV0dXJuIGEudGVzdChpKX1mdW5jdGlvbiB2KEMsRil7dmFyIEE9JC5pbkFycmF5KEMsaCksaTtpZihBIT09LTEpe2lmKEYpe2ZvcihpPUE7aTxoLmxlbmd0aDtpKyspe2lmKCF1KGhbaV0pKXtyZXR1cm4gaS1BfX19ZWxzZXtmb3IoaT1BO2k+PTA7aS0tKXtpZighdShoW2ldKSl7cmV0dXJuIGktQX19cmV0dXJuLTEqKEErMSl9fX1mdW5jdGlvbiB4KEEpe3ZhciBSLEIsaSxQPUEsQyxELE4sRTtpZihkPT09dW5kZWZpbmVkKXtEPXooQSk7aWYoIUR8fCFELmJCb29rbWFya2FibGUpe2lmKHEuaXNGdW5jdGlvbihmKSl7ZigkLnNhcC5oaXN0b3J5Lk5hdlR5cGUuQm9va21hcmspfXJldHVybn19aWYoQS5sZW5ndGg9PT0wKXtpZihxLmlzRnVuY3Rpb24oZikpe2YoJC5zYXAuaGlzdG9yeS5OYXZUeXBlLkJhY2spfX1lbHNle049cS5pbkFycmF5KEEsaCk7aWYoTj09PTApe0Q9eihBKTtpZighRHx8IUQuYkJvb2ttYXJrYWJsZSl7aWYocS5pc0Z1bmN0aW9uKGYpKXtmKCQuc2FwLmhpc3RvcnkuTmF2VHlwZS5CYWNrKX1yZXR1cm59fWlmKHUoQSkpe2lmKHUoZCkpe0I9dihBLGZhbHNlKTt3Lmhpc3RvcnkuZ28oQil9ZWxzZXt2YXIgRj1uZXcgUmVnRXhwKHEuc2FwLmVzY2FwZVJlZ0V4cChkK3MpKyJbMC05XSokIik7aWYoRi50ZXN0KEEpKXtCPXYoQSx0cnVlKTtpZihCKXt3Lmhpc3RvcnkuZ28oQil9ZWxzZXt3Lmhpc3RvcnkuYmFjaygpfX1lbHNle0I9dihBLGZhbHNlKTt3Lmhpc3RvcnkuZ28oQil9fX1lbHNle2lmKE49PT0tMSl7RT0kLnNhcC5oaXN0b3J5Lk5hdlR5cGUuVW5rbm93bjtoLnB1c2goQSl9ZWxzZXtpZihxLmluQXJyYXkoZCxoLE4rMSk9PT0tMSl7RT0kLnNhcC5oaXN0b3J5Lk5hdlR5cGUuRm9yd2FyZH1lbHNle0U9JC5zYXAuaGlzdG9yeS5OYXZUeXBlLkJhY2t9fUQ9eihBKTtpZihEKXtSPXkoRC5zSWRlbnRpZmllcik7aWYoUil7Ui5hY3Rpb24uYXBwbHkobnVsbCxbRC5vU3RhdGVEYXRhLEVdKX19ZWxzZXtxLnNhcC5sb2cuZXJyb3IoImhhc2ggZm9ybWF0IGVycm9yISBUaGUgY3VycmVudCBIYXNoOiAiK0EpfX19fWZ1bmN0aW9uIHkoQSl7dmFyIGk7Zm9yKGk9MDtpPGIubGVuZ3RoO2krKyl7aWYoYltpXS5zSWRlbnRpZmllcj09PUEpe3JldHVybiBiW2ldfX19ZnVuY3Rpb24geihBKXtpZih1KEEpKXt2YXIgaT1BLmxhc3RJbmRleE9mKHMpO0E9QS5zbGljZSgwLGkpfXZhciBQPUEuc3BsaXQoSSksUj17fTtpZihQLmxlbmd0aD09PTR8fFAubGVuZ3RoPT09Myl7Ui5zSWRlbnRpZmllcj13LmRlY29kZVVSSUNvbXBvbmVudChQWzBdKTtSLm9TdGF0ZURhdGE9dy5KU09OLnBhcnNlKHcuZGVjb2RlVVJJQ29tcG9uZW50KFBbMV0pKTtpZihQLmxlbmd0aD09PTQpe1IudWlkPVBbMl19Ui5iQm9va21hcmthYmxlPVBbUC5sZW5ndGgtMV09PT0iMCI/ZmFsc2U6dHJ1ZTtyZXR1cm4gUn1lbHNle3JldHVybiBudWxsfX19KShxLHRoaXMpO3JldHVybiBxfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ2pxdWVyeS5zYXAubW9iaWxlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnanF1ZXJ5LnNhcC5tb2JpbGUnKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLm1vYmlsZSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9EZXZpY2UnLCdqcXVlcnkuc2FwLmRvbScsJ2pxdWVyeS5zYXAuZXZlbnRzJ10sZnVuY3Rpb24ocSxEKXsidXNlIHN0cmljdCI7KGZ1bmN0aW9uKCQpe3ZhciBGPS8oPzpcP3wmKXNhcC11aS14eC1mYWtlT1M9KFteJl0rKS87JC5zYXAuc2ltdWxhdGVNb2JpbGVPbkRlc2t0b3A9ZmFsc2U7aWYoKEQuYnJvd3Nlci53ZWJraXR8fChELmJyb3dzZXIubXNpZSYmRC5icm93c2VyLnZlcnNpb24+PTEwKSkmJiFxLnN1cHBvcnQudG91Y2gpe3ZhciByPWRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5tYXRjaChGKTt2YXIgYT1yJiZyWzFdfHxxLnNhcC5ieUlkKCJzYXAtdWktYm9vdHN0cmFwIikuYXR0cigiZGF0YS1zYXAtdWkteHgtZmFrZU9TIik7aWYoYSl7JC5zYXAuc2ltdWxhdGVNb2JpbGVPbkRlc2t0b3A9dHJ1ZTt2YXIgdT17aW9zOiJNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDVfMF8xIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzUzNC40OCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNS4xIE1vYmlsZS85QTQwNiBTYWZhcmkvNzUzNC40OC4zIixpcGhvbmU6Ik1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgNV8wXzEgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNTM0LjQ4IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi81LjEgTW9iaWxlLzlBNDA2IFNhZmFyaS83NTM0LjQ4LjMiLGlwYWQ6Ik1vemlsbGEvNS4wIChpUGFkOyBDUFUgT1MgNV8xXzEgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNTM0LjQ2IChLSFRNTCwgbGlrZSBHZWNrbykgTW9iaWxlLzlCMjA2IixhbmRyb2lkOiJNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNC4wLjM7IGVuLXVzOyBHVC1JOTEwMCBCdWlsZC9JTUw3NEspIEFwcGxlV2ViS2l0LzUzNC40NiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIE1vYmlsZSBTYWZhcmkvNTM0LjQ2IixhbmRyb2lkX3Bob25lOiJNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNC4wLjM7IGVuLXVzOyBHVC1JOTEwMCBCdWlsZC9JTUw3NEspIEFwcGxlV2ViS2l0LzUzNC40NiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIE1vYmlsZSBTYWZhcmkvNTM0LjQ2IixhbmRyb2lkX3RhYmxldDoiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDQuMS4yOyBOZXh1cyA3IEJ1aWxkL0paMDU0SykgQXBwbGVXZWJLaXQvNTM1LjE5IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzE4LjAuMTAyNS4xNjYgU2FmYXJpLzUzNS4xOSIsYmxhY2tiZXJyeToiTW96aWxsYS81LjAgKEJCMTA7IFRvdWNoKSBBcHBsZVdlYktpdC81MzcuMTArIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi8xMC4wLjkuMjM3MiBNb2JpbGUgU2FmYXJpLzUzNy4xMCsiLHdpbnBob25lOiJNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSAxMC4wOyBXaW5kb3dzIFBob25lIDguMDsgVHJpZGVudC82LjA7IElFTW9iaWxlLzEwLjA7IEFSTTsgVG91Y2g7IE5PS0lBOyBMdW1pYSA5MjApIn1bYV07aWYodSYmKEQuYnJvd3Nlci53ZWJraXQmJmEhPT0id2lucGhvbmUifHxELmJyb3dzZXIubXNpZSYmYT09PSJ3aW5waG9uZSIpKXtpZihELmJyb3dzZXIuc2FmYXJpKXt2YXIgXz13aW5kb3cubmF2aWdhdG9yO3dpbmRvdy5uYXZpZ2F0b3I9bmV3IE9iamVjdCgpO3dpbmRvdy5uYXZpZ2F0b3IuX19wcm90b19fPV87d2luZG93Lm5hdmlnYXRvci5fX2RlZmluZUdldHRlcl9fKCd1c2VyQWdlbnQnLGZ1bmN0aW9uKCl7cmV0dXJuIHV9KX1lbHNle09iamVjdC5kZWZpbmVQcm9wZXJ0eShuYXZpZ2F0b3IsInVzZXJBZ2VudCIse2dldDpmdW5jdGlvbigpe3JldHVybiB1fX0pfWlmKEQuYnJvd3Nlci53ZWJraXQpe3EuYnJvd3Nlci5tc2llPXEuYnJvd3Nlci5vcGVyYT1xLmJyb3dzZXIubW96aWxsYT1mYWxzZTtxLmJyb3dzZXIud2Via2l0PXRydWU7cS5icm93c2VyLnZlcnNpb249IjUzNC40NiJ9ZWxzZXt9RC5fdXBkYXRlKCQuc2FwLnNpbXVsYXRlTW9iaWxlT25EZXNrdG9wKX19fSQub3M9JC5leHRlbmQoe29zOkQub3MubmFtZSx2ZXJzaW9uOkQub3MudmVyc2lvblN0cixmVmVyc2lvbjpELm9zLnZlcnNpb259LCQub3MpOyQub3NbRC5vcy5uYW1lXT10cnVlOyQuZXh0ZW5kKCQuc3VwcG9ydCx7cmV0aW5hOndpbmRvdy5kZXZpY2VQaXhlbFJhdGlvPj0yfSk7JC5kZXZpY2U9JC5leHRlbmQoe30sJC5kZXZpY2UpOyQuZGV2aWNlLmlzPSQuZXh0ZW5kKHtzdGFuZGFsb25lOndpbmRvdy5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSxsYW5kc2NhcGU6RC5vcmllbnRhdGlvbi5sYW5kc2NhcGUscG9ydHJhaXQ6RC5vcmllbnRhdGlvbi5wb3J0cmFpdCxpcGhvbmU6RC5vcy5pb3MmJkQuc3lzdGVtLnBob25lLGlwYWQ6RC5vcy5pb3MmJkQuc3lzdGVtLnRhYmxldCxhbmRyb2lkX3Bob25lOkQuc3lzdGVtLnBob25lJiZELm9zLmFuZHJvaWQsYW5kcm9pZF90YWJsZXQ6RC5zeXN0ZW0udGFibGV0JiZELm9zLmFuZHJvaWQsdGFibGV0OkQuc3lzdGVtLnRhYmxldCxwaG9uZTpELnN5c3RlbS5waG9uZSxkZXNrdG9wOkQuc3lzdGVtLmRlc2t0b3B9LCQuZGV2aWNlLmlzKTt2YXIgYj1mYWxzZTskLnNhcC5pbml0TW9iaWxlPWZ1bmN0aW9uKG8pe3ZhciBjPSQoImhlYWQiKTtpZighYil7Yj10cnVlO289JC5leHRlbmQoe30se3ZpZXdwb3J0OnRydWUsc3RhdHVzQmFyOiJkZWZhdWx0IixoaWRlQnJvd3Nlcjp0cnVlLHByZXZlbnRTY3JvbGw6dHJ1ZSxwcmV2ZW50UGhvbmVOdW1iZXJEZXRlY3Rpb246dHJ1ZSx1c2VGdWxsU2NyZWVuSGVpZ2h0OnRydWUsaG9tZUljb25QcmVjb21wb3NlZDpmYWxzZX0sbyk7aWYoRC5vcy5pb3MmJm8ucHJldmVudFBob25lTnVtYmVyRGV0ZWN0aW9uKXtjLmFwcGVuZCgkKCc8bWV0YSBuYW1lPSJmb3JtYXQtZGV0ZWN0aW9uIiBjb250ZW50PSJ0ZWxlcGhvbmU9bm8iPicpKX1lbHNlIGlmKEQuYnJvd3Nlci5tc2llKXtjLmFwcGVuZCgkKCc8bWV0YSBodHRwLWVxdWl2PSJjbGVhcnR5cGUiIGNvbnRlbnQ9Im9uIj4nKSk7Yy5hcHBlbmQoJCgnPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi10YXAtaGlnaGxpZ2h0IiBjb250ZW50PSJubyIvPicpKX12YXIgaT1ELm9zLmlvcyYmRC5vcy52ZXJzaW9uPj03JiZELm9zLnZlcnNpb248OCYmRC5icm93c2VyLm5hbWU9PT0ic2YiO2lmKG8udmlld3BvcnQpe3ZhciBtO2lmKGkmJkQuc3lzdGVtLnBob25lKXttPSdtaW5pbWFsLXVpLCBpbml0aWFsLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIHVzZXItc2NhbGFibGU9MCd9ZWxzZSBpZigkLmRldmljZS5pcy5pcGhvbmUmJihNYXRoLm1heCh3aW5kb3cuc2NyZWVuLmhlaWdodCx3aW5kb3cuc2NyZWVuLndpZHRoKT09PTU2OCkpe209InVzZXItc2NhbGFibGU9MCwgaW5pdGlhbC1zY2FsZT0xLjAifWVsc2UgaWYoRC5vcy5hbmRyb2lkJiZELm9zLnZlcnNpb248Myl7bT0id2lkdGg9ZGV2aWNlLXdpZHRoLCBoZWlnaHQ9ZGV2aWNlLWhlaWdodCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIn1lbHNlIGlmKEQub3Mud2lucGhvbmUpe209IndpZHRoPTMyMCwgdXNlci1zY2FsYWJsZT1ubyJ9ZWxzZXttPSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyJ9Yy5hcHBlbmQoJCgnPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IicrbSsnIj4nKSl9aWYoRC5vcy5pb3Mpe2MuYXBwZW5kKCQoJzxtZXRhIG5hbWU9ImFwcGxlLW1vYmlsZS13ZWItYXBwLWNhcGFibGUiIGNvbnRlbnQ9InllcyI+JykpO2MuYXBwZW5kKCQoJzxtZXRhIG5hbWU9ImFwcGxlLW1vYmlsZS13ZWItYXBwLXN0YXR1cy1iYXItc3R5bGUiIGNvbnRlbnQ9Iicrby5zdGF0dXNCYXIrJyI+JykpfWlmKG8ucHJldmVudFNjcm9sbCl7JCh3aW5kb3cpLmJpbmQoInRvdWNobW92ZSIsZnVuY3Rpb24gc2FwSW5pdE1vYmlsZVRvdWNoTW92ZUhhbmRsZShlKXtpZighZS5pc01hcmtlZCgpKXtlLnByZXZlbnREZWZhdWx0KCl9fSl9aWYoby51c2VGdWxsU2NyZWVuSGVpZ2h0KXskKGZ1bmN0aW9uKCl7ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLmhlaWdodD0iMTAwJSJ9KX19aWYoby5ob21lSWNvbil7dmFyIEk7aWYodHlwZW9mIG8uaG9tZUljb249PT0ic3RyaW5nIil7ST17cGhvbmU6by5ob21lSWNvbn19ZWxzZXtJPSQuZXh0ZW5kKHt9LG8uaG9tZUljb24pfUkucHJlY29tcG9zZWQ9by5ob21lSWNvblByZWNvbXBvc2VkfHxJLnByZWNvbXBvc2VkO0kuZmF2aWNvbj1vLmhvbWVJY29uLmljb258fEkuZmF2aWNvbjtJLmljb249dW5kZWZpbmVkOyQuc2FwLnNldEljb25zKEkpfX07JC5zYXAuc2V0SWNvbnM9ZnVuY3Rpb24oaSl7aWYoIWl8fCh0eXBlb2YgaSE9PSJvYmplY3QiKSl7JC5zYXAubG9nLndhcm5pbmcoIkNhbGwgdG8galF1ZXJ5LnNhcC5zZXRJY29ucygpIGhhcyBiZWVuIGlnbm9yZWQgYmVjYXVzZSB0aGVyZSB3ZXJlIG5vIGljb25zIGdpdmVuIG9yIHRoZSBhcmd1bWVudCB3YXMgbm90IGFuIG9iamVjdC4iKTtyZXR1cm59dmFyIGM9JCgiaGVhZCIpLHA9aS5wcmVjb21wb3NlZD8iLXByZWNvbXBvc2VkIjoiIixnPWZ1bmN0aW9uKGgpe3JldHVybiBpW2hdfHxpWyd0YWJsZXRAMiddfHxpWydwaG9uZUAyJ118fGlbJ3Bob25lJ118fGlbJ3RhYmxldCddfSxzPXsicGhvbmUiOiIiLCJ0YWJsZXQiOiI3Mng3MiIsInBob25lQDIiOiIxMTR4MTE0IiwidGFibGV0QDIiOiIxNDR4MTQ0In07aWYoaVsiZmF2aWNvbiJdKXt2YXIgZD1jLmZpbmQoIltyZWxePXNob3J0Y3V0XSIpO2QuZWFjaChmdW5jdGlvbigpe2lmKHRoaXMucmVsPT09InNob3J0Y3V0IGljb24iKXskKHRoaXMpLnJlbW92ZSgpfX0pO2MuYXBwZW5kKCQoJzxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iJytpWyJmYXZpY29uIl0rJyIgLz4nKSl9aWYoZygicGhvbmUiKSl7Yy5maW5kKCJbcmVsPWFwcGxlLXRvdWNoLWljb25dIikucmVtb3ZlKCk7Yy5maW5kKCJbcmVsPWFwcGxlLXRvdWNoLWljb24tcHJlY29tcG9zZWRdIikucmVtb3ZlKCl9Zm9yKHZhciBlIGluIHMpe2lbZV09aVtlXXx8ZyhlKTtpZihpW2VdKXt2YXIgZj1zW2VdO2MuYXBwZW5kKCQoJzxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbicrcCsnIiAnKyhmPydzaXplcz0iJytmKyciJzoiIikrJyBocmVmPSInK2lbZV0rJyIgLz4nKSl9fX19KShxKTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLnByb3BlcnRpZXMnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdqcXVlcnkuc2FwLnByb3BlcnRpZXMnKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLnByb3BlcnRpZXMiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdqcXVlcnkuc2FwLnNqYXgnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIFA9ZnVuY3Rpb24oKXt0aGlzLm1Qcm9wZXJ0aWVzPXt9O3RoaXMuYUtleXM9W119O1AucHJvdG90eXBlLmdldFByb3BlcnR5PWZ1bmN0aW9uKGssZCl7dmFyIHY9dGhpcy5tUHJvcGVydGllc1trXTtpZih0eXBlb2Yodik9PSJzdHJpbmciKXtyZXR1cm4gdn1lbHNlIGlmKGQpe3JldHVybiBkfXJldHVybiBudWxsfTtQLnByb3RvdHlwZS5nZXRLZXlzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYUtleXN9O1AucHJvdG90eXBlLnNldFByb3BlcnR5PWZ1bmN0aW9uKGssdil7aWYodHlwZW9mKHYpIT0ic3RyaW5nIil7cmV0dXJufWlmKHR5cGVvZih0aGlzLm1Qcm9wZXJ0aWVzW2tdKSE9InN0cmluZyIpe3RoaXMuYUtleXMucHVzaChrKX10aGlzLm1Qcm9wZXJ0aWVzW2tdPXZ9O1AucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGM9bmV3IFAoKTtjLm1Qcm9wZXJ0aWVzPXEuZXh0ZW5kKHt9LHRoaXMubVByb3BlcnRpZXMpO2MuYUtleXM9cS5tZXJnZShbXSx0aGlzLmFLZXlzKTtyZXR1cm4gY307dmFyIHI9Lyg/Ol58XHJcbnxccnxcbilbIFx0XGZdKi87dmFyIGE9LyhcXHVbMC05YS1mQS1GXXswLDR9KXwoXFwuKXwoXFwkKXwoWyBcdFxmXSpbIFx0XGY6PV1bIFx0XGZdKikvZzt2YXIgZT17J1xcZic6J1xmJywnXFxuJzonXG4nLCdcXHInOidccicsJ1xcdCc6J1x0J307ZnVuY3Rpb24gcCh0LG8pe3ZhciBsPXQuc3BsaXQociksTCxrLHYsSyxpLG0sYjtvLm1Qcm9wZXJ0aWVzPXt9O28uYUtleXM9W107Zm9yKGk9MDtpPGwubGVuZ3RoO2krKyl7TD1sW2ldO2lmKEw9PT0iInx8TC5jaGFyQXQoMCk9PT0iIyJ8fEwuY2hhckF0KDApPT09IiEiKXtjb250aW51ZX1hLmxhc3RJbmRleD1iPTA7dj0iIjtLPXRydWU7d2hpbGUobT1hLmV4ZWMoTCkpe2lmKGI8bS5pbmRleCl7dis9TC5zbGljZShiLG0uaW5kZXgpfWI9YS5sYXN0SW5kZXg7aWYobVsxXSl7aWYobVsxXS5sZW5ndGghPT02KXt0aHJvdyBuZXcgRXJyb3IoIkluY29tcGxldGUgVW5pY29kZSBFc2NhcGUgJyIrbVsxXSsiJyIpfXYrPVN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQobVsxXS5zbGljZSgyKSwxNikpfWVsc2UgaWYobVsyXSl7dis9ZVttWzJdXXx8bVsyXS5zbGljZSgxKX1lbHNlIGlmKG1bM10pe0w9bFsrK2ldO2EubGFzdEluZGV4PWI9MH1lbHNlIGlmKG1bNF0pe2lmKEspe0s9ZmFsc2U7az12O3Y9IiJ9ZWxzZXt2Kz1tWzRdfX19aWYoYjxMLmxlbmd0aCl7dis9TC5zbGljZShiKX1pZihLKXtrPXY7dj0iIn1vLmFLZXlzLnB1c2goayk7by5tUHJvcGVydGllc1trXT12fXEuc2FwLnVuaXF1ZShvLmFLZXlzKX1xLnNhcC5wcm9wZXJ0aWVzPWZ1bmN0aW9uIHByb3BlcnRpZXMobSl7dmFyIG89bmV3IFAoKTttPXEuZXh0ZW5kKHt1cmw6dW5kZWZpbmVkLGhlYWRlcnM6e319LG0pO2lmKHR5cGVvZihtLnVybCk9PSJzdHJpbmciKXt2YXIgdD1xLnNhcC5sb2FkUmVzb3VyY2Uoe3VybDptLnVybCxkYXRhVHlwZTondGV4dCcsaGVhZGVyczptLmhlYWRlcnMsZmFpbE9uRXJyb3I6ZmFsc2V9KTtpZih0eXBlb2YodCk9PSJzdHJpbmciKXtwKHQsbyl9fXJldHVybiBvfTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdqcXVlcnkuc2FwLnJlc291cmNlcycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAucmVzb3VyY2VzJyk7c2FwLnVpLmRlZmluZSgianF1ZXJ5LnNhcC5yZXNvdXJjZXMiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdqcXVlcnkuc2FwLnByb3BlcnRpZXMnLCdqcXVlcnkuc2FwLnN0cmluZ3MnXSxmdW5jdGlvbihxKXsidXNlIHN0cmljdCI7dmFyIHI9L14oKD86W0EtWl17MiwzfSg/Oi1bQS1aXXszfSl7MCwzfSl8W0EtWl17NH18W0EtWl17NSw4fSkoPzotKFtBLVpdezR9KSk/KD86LShbQS1aXXsyfXxbMC05XXszfSkpPygtWzAtOUEtWl17NSw4fXwoPzpbMC05XVswLTlBLVpdezN9KSkqKD86LShbMC05QS1XWVpdKD86LVswLTlBLVpdezIsOH0pKykpKig/Oi0oWCg/Oi1bMC05QS1aXXsxLDh9KSspKT8kL2k7dmFyIE09eyJoZSI6Iml3IiwieWkiOiJqaSIsImlkIjoiaW4iLCJzciI6InNoIn07dmFyIGE9eyJpdyI6ImhlIiwiamkiOiJ5aSIsImluIjoiaWQiLCJzbiI6InNyIn07dmFyIGI9Ly0oc2FwdHJjfHNhcHBzZCkoPzotfCQpL2k7ZnVuY3Rpb24gbihMKXt2YXIgbTtpZih0eXBlb2YgTD09PSdzdHJpbmcnJiYobT1yLmV4ZWMoTC5yZXBsYWNlKC9fL2csJy0nKSkpKXt2YXIgZz1tWzFdLnRvTG93ZXJDYXNlKCk7Zz1NW2ddfHxnO3ZhciBTPW1bMl0/bVsyXS50b0xvd2VyQ2FzZSgpOnVuZGVmaW5lZDt2YXIgUj1tWzNdP21bM10udG9VcHBlckNhc2UoKTp1bmRlZmluZWQ7dmFyIFY9bVs0XTt2YXIgcD1tWzZdO2lmKChwJiYobT1iLmV4ZWMocCkpKXx8KFYmJihtPWIuZXhlYyhWKSkpKXtyZXR1cm4iZW5fVVNfIittWzFdLnRvTG93ZXJDYXNlKCl9aWYoZz09PSJ6aCImJiFSKXtpZihTPT09ImhhbnMiKXtSPSJDTiJ9ZWxzZSBpZihTPT09ImhhbnQiKXtSPSJUVyJ9fXJldHVybiBnKyhSPyJfIitSKyhWPyJfIitWLnNsaWNlKDEpLnJlcGxhY2UoIi0iLCJfIik6IiIpOiIiKX19ZnVuY3Rpb24gZCgpe3ZhciBMO2lmKHdpbmRvdy5zYXAmJnNhcC51aSYmc2FwLnVpLmdldENvcmUpe0w9c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0TGFuZ3VhZ2UoKTtMPW4oTCl9cmV0dXJuIEx8fCJlbiJ9ZnVuY3Rpb24gYyhMKXt2YXIgbTtpZih0eXBlb2YgTD09PSdzdHJpbmcnJiYobT1yLmV4ZWMoTC5yZXBsYWNlKC9fL2csJy0nKSkpKXt2YXIgZz1tWzFdLnRvTG93ZXJDYXNlKCk7Zz1hW2ddfHxnO3JldHVybiBnKyhtWzNdPyItIittWzNdLnRvVXBwZXJDYXNlKCkrKG1bNF0/Ii0iK21bNF0uc2xpY2UoMSkucmVwbGFjZSgiXyIsIi0iKToiIik6IiIpfX12YXIgZT0vXigoPzpbXj8jXSpcLyk/W15cLz8jXSopKFwuW14uXC8/I10rKSgoPzpcPyhbXiNdKikpPyg/OiMoLiopKT8pJC87dmFyIHY9WyIucHJvcGVydGllcyIsIi5oZGJ0ZXh0YnVuZGxlIl07ZnVuY3Rpb24gcyh1KXt2YXIgbT1lLmV4ZWModSk7cmV0dXJuIG0mJnt1cmw6dSxwcmVmaXg6bVsxXSxleHQ6bVsyXSxxdWVyeTptWzRdLGhhc2g6KG1bNV18fCIiKSxzdWZmaXg6bVsyXSsobVszXXx8IiIpfX12YXIgQj1mdW5jdGlvbih1LEwsaSl7dGhpcy5zTG9jYWxlPW4oTCl8fGQoKTt0aGlzLm9VcmxJbmZvPXModSk7aWYoIXRoaXMub1VybEluZm98fHEuaW5BcnJheSh0aGlzLm9VcmxJbmZvLmV4dCx2KTwwKXt0aHJvdyBuZXcgRXJyb3IoInJlc291cmNlIFVSTCAnIit1KyInIGhhcyB1bmtub3duIHR5cGUgKHNob3VsZCBiZSBvbmUgb2YgIit2LmpvaW4oIiwiKSsiKSIpfXRoaXMuYkluY2x1ZGVJbmZvPWk7dGhpcy5hQ3VzdG9tQnVuZGxlcz1bXTt0aGlzLmFQcm9wZXJ0eUZpbGVzPVtdO3RoaXMuYUxvY2FsZXM9W107bCh0aGlzLHRoaXMuc0xvY2FsZSl9O0IucHJvdG90eXBlPXt9O0IucHJvdG90eXBlLl9lbmhhbmNlPWZ1bmN0aW9uKEMpe2lmKEMmJkMgaW5zdGFuY2VvZiBCKXt0aGlzLmFDdXN0b21CdW5kbGVzLnB1c2goQyl9ZWxzZXtxLnNhcC5sb2cuZXJyb3IoIkN1c3RvbSBSZXNvdXJjZUJ1bmRsZSBpcyBlaXRoZXIgdW5kZWZpbmVkIG9yIG5vdCBhbiBpbnN0YW5jZW9mIGpRdWVyeS5zYXAudXRpbC5SZXNvdXJjZUJ1bmRsZS4gVGhlcmVmb3JlIHRoaXMgY3VzdG9tIFJlc291cmNlQnVuZGxlIHdpbGwgYmUgaWdub3JlZCEiKX19O0IucHJvdG90eXBlLmdldFRleHQ9ZnVuY3Rpb24oayxBLEMpe3ZhciBWPW51bGw7Zm9yKHZhciBpPXRoaXMuYUN1c3RvbUJ1bmRsZXMubGVuZ3RoLTE7aT49MDtpLS0pe1Y9dGhpcy5hQ3VzdG9tQnVuZGxlc1tpXS5nZXRUZXh0KGssQSx0cnVlKTtpZihWIT1udWxsKXtyZXR1cm4gVn19Zm9yKHZhciBpPTA7aTx0aGlzLmFQcm9wZXJ0eUZpbGVzLmxlbmd0aDtpKyspe1Y9dGhpcy5hUHJvcGVydHlGaWxlc1tpXS5nZXRQcm9wZXJ0eShrKTtpZih0eXBlb2YoVik9PT0ic3RyaW5nIil7YnJlYWt9fWlmKHR5cGVvZihWKSE9PSJzdHJpbmciKXt2YXIgdD10aGlzLmFMb2NhbGVzWzBdO3doaWxlKHQubGVuZ3RoPjApe2lmKHQ9PSJ6aF9ISyIpe3Q9InpoX1RXIn1lbHNle3ZhciBwPXQubGFzdEluZGV4T2YoJ18nKTtpZihwPj0wKXt0PXQuc3Vic3RyaW5nKDAscCl9ZWxzZSBpZih0IT0iZW4iKXt0PSJlbiJ9ZWxzZXt0PSIifX12YXIgUD1sKHRoaXMsdCk7aWYoUD09bnVsbCl7Y29udGludWV9Vj1QLmdldFByb3BlcnR5KGspO2lmKHR5cGVvZihWKT09PSJzdHJpbmciKXticmVha319fWlmKCFDJiZ0eXBlb2YoVikhPT0ic3RyaW5nIil7Vj1rfWlmKHR5cGVvZihWKT09PSJzdHJpbmciKXtpZihBKXtWPXEuc2FwLmZvcm1hdE1lc3NhZ2UoVixBKX1pZih0aGlzLmJJbmNsdWRlSW5mbyl7Vj1uZXcgU3RyaW5nKFYpO1Yub3JpZ2luSW5mbz17c291cmNlOiJSZXNvdXJjZSBCdW5kbGUiLHVybDp0aGlzLm9VcmxJbmZvLnVybCxsb2NhbGU6dGhpcy5zTG9jYWxlLGtleTprfX19cmV0dXJuIFZ9O2Z1bmN0aW9uIGwobyxMKXt2YXIgdT1vLm9VcmxJbmZvLFIscDtpZihxLmluQXJyYXkoTCxvLmFMb2NhbGVzKT09LTEpe2lmKGYoTCkpe3N3aXRjaCh1LmV4dCl7Y2FzZScuaGRidGV4dGJ1bmRsZSc6Uj17dXJsOnUudXJsLGhlYWRlcnM6eyJBY2NlcHQtTGFuZ3VhZ2UiOmMoTCl8fCIifX07YnJlYWs7ZGVmYXVsdDpSPXt1cmw6dS5wcmVmaXgrKEw/Il8iK0w6IiIpK3Uuc3VmZml4fTticmVha31wPXEuc2FwLnByb3BlcnRpZXMoUil9ZWxzZXtwPXtnZXRQcm9wZXJ0eTpmdW5jdGlvbigpe3JldHVybiB1bmRlZmluZWR9fX1vLmFQcm9wZXJ0eUZpbGVzLnB1c2gocCk7by5hTG9jYWxlcy5wdXNoKEwpO3JldHVybiBwfXJldHVybiBudWxsfWZ1bmN0aW9uIGYoTCl7dmFyIGc9d2luZG93LnNhcCYmc2FwLnVpJiZzYXAudWkuZ2V0Q29yZSYmc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzKCk7aWYoZyYmZy5sZW5ndGg+MCl7cmV0dXJuIHEuaW5BcnJheShMLGcpPj0wfXJldHVybiB0cnVlfXEuc2FwLnJlc291cmNlcz1mdW5jdGlvbiByZXNvdXJjZXMocCl7cD1xLmV4dGVuZCh7dXJsOiIiLGxvY2FsZTp1bmRlZmluZWQsaW5jbHVkZUluZm86ZmFsc2V9LHApO3ZhciBvPW5ldyBCKHAudXJsLHAubG9jYWxlLHAuaW5jbHVkZUluZm8pO3JldHVybiBvfTtxLnNhcC5yZXNvdXJjZXMuX2dldEZhbGxiYWNrTG9jYWxlcz1mdW5jdGlvbihMLFMpe3ZhciB0PW4oTCksZz1bXTtmdW5jdGlvbiBoKEwpe3JldHVybiFTfHxTLmxlbmd0aD09PTB8fHEuaW5BcnJheShMLFMpPj0wfXdoaWxlKHQpe2lmKGgodCkpe2cucHVzaCh0KX1pZih0PT09InpoX0hLIil7dD0iemhfVFcifWVsc2V7dmFyIHA9dC5sYXN0SW5kZXhPZignXycpO2lmKHA+MCl7dD10LnNsaWNlKDAscCl9ZWxzZSBpZih0IT09ImVuIil7dD0iZW4ifWVsc2V7dD0iIn19fWlmKGgoIiIpKXtnLnB1c2goIiIpfXJldHVybiBnfTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuR2xvYmFsJykpe2lmKHdpbmRvdy5PcGVuQWpheCYmd2luZG93Lk9wZW5BamF4Lmh1Yil7T3BlbkFqYXguaHViLnJlZ2lzdGVyTGlicmFyeSgic2FwIiwiaHR0cDovL3d3dy5zYXAuY29tLyIsIjAuMSIse30pfWpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLkdsb2JhbCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9HbG9iYWwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdqcXVlcnkuc2FwLmRvbSddLGZ1bmN0aW9uKHEpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2Ygd2luZG93LnNhcCE9PSJvYmplY3QiJiZ0eXBlb2Ygd2luZG93LnNhcCE9PSJmdW5jdGlvbiIpe3dpbmRvdy5zYXA9e319aWYodHlwZW9mIHdpbmRvdy5zYXAudWkhPT0ib2JqZWN0Iil7d2luZG93LnNhcC51aT17fX1zYXAudWk9cS5leHRlbmQoc2FwLnVpLHt2ZXJzaW9uOiIxLjIwLjQiLGJ1aWxkaW5mbzp7bGFzdGNoYW5nZToiJHtsZGkuc2NtLnJldmlzaW9ufSIsYnVpbGR0aW1lOiIyMDE0MDQyMy0xNjMzIn19KTtzYXAudWkubmFtZXNwYWNlPWZ1bmN0aW9uKG4pe3JldHVybiBxLnNhcC5nZXRPYmplY3QobiwwKX07c2FwLnVpLmxhenlSZXF1aXJlPWZ1bmN0aW9uKGMsbSxNKXt2YXIgZj1jLnJlcGxhY2UoL1wvL2dpLCJcLiIpLGw9Zi5sYXN0SW5kZXhPZigiLiIpLHA9Zi5zdWJzdHIoMCxsKSxDPWYuc3Vic3RyKGwrMSksUD1xLnNhcC5nZXRPYmplY3QocCwwKSxvPVBbQ10sYT0obXx8Im5ldyIpLnNwbGl0KCIgIiksYj1xLmluQXJyYXkoIm5ldyIsYSk7TT1NfHxmO2lmKCFvKXtpZihiPj0wKXtvPWZ1bmN0aW9uKCl7cS5zYXAubG9nLmRlYnVnKCJsYXp5IHN0dWIgZm9yICciK2YrIicgKGNvbnN0cnVjdG9yKSBjYWxsZWQuIik7cS5zYXAucmVxdWlyZShNKTt2YXIgcj1QW0NdO2lmKHIuX3NhcFVpTGF6eUxvYWRlcil7dGhyb3cgbmV3IEVycm9yKCJsYXp5UmVxdWlyZTogc3R1YiAnIitmKyInaGFzIG5vdCBiZWVuIHJlcGxhY2VkIGJ5IG1vZHVsZSAnIitNKyInIil9dmFyIGk9cS5zYXAubmV3T2JqZWN0KHIucHJvdG90eXBlKTt2YXIgUj1yLmFwcGx5KGksYXJndW1lbnRzKTtpZihSJiYodHlwZW9mIFI9PT0iZnVuY3Rpb24ifHx0eXBlb2YgUj09PSJvYmplY3QiKSl7aT1SfXJldHVybiBpfTtvLl9zYXBVaUxhenlMb2FkZXI9dHJ1ZTthLnNwbGljZShiLDEpfWVsc2V7bz17fX1QW0NdPW99cS5lYWNoKGEsZnVuY3Rpb24oaSxzKXtpZighb1tzXSl7b1tzXT1mdW5jdGlvbigpe3Euc2FwLmxvZy5kZWJ1ZygibGF6eSBzdHViIGZvciAnIitmKyIuIitzKyInIGNhbGxlZC4iKTtxLnNhcC5yZXF1aXJlKE0pO3ZhciByPVBbQ107aWYocltzXS5fc2FwVWlMYXp5TG9hZGVyKXt0aHJvdyBuZXcgRXJyb3IoImxhenlSZXF1aXJlOiBzdHViICciK2YrIi4iK3MrIicgaGFzIG5vdCBiZWVuIHJlcGxhY2VkIGJ5IGxvYWRlZCBtb2R1bGUgJyIrTSsiJyIpfXJldHVybiByW3NdLmFwcGx5KHIsYXJndW1lbnRzKX07b1tzXS5fc2FwVWlMYXp5TG9hZGVyPXRydWV9fSl9O3NhcC51aS5yZXNvdXJjZT1mdW5jdGlvbihsLHIpe3ZhciBtPXIubWF0Y2goL150aGVtZXNcLyhbXlwvXSspXC8vKTtpZihtKXtsKz0iLnRoZW1lcy4iK21bMV07cj1yLnN1YnN0cihtWzBdLmxlbmd0aCl9cmV0dXJuIHEuc2FwLmdldE1vZHVsZVBhdGgobCwnLycpK3J9O3NhcC51aS5sb2NhbFJlc291cmNlcz1mdW5jdGlvbihuKXtxLnNhcC5yZWdpc3Rlck1vZHVsZVBhdGgobiwiLi8iK24ucmVwbGFjZSgvXC4vZywiLyIpKX07cmV0dXJuIHNhcC51aX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLkV2ZW50Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmJhc2UuRXZlbnQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvYmFzZS9FdmVudCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vT2JqZWN0J10sZnVuY3Rpb24ocSxCKXsidXNlIHN0cmljdCI7dmFyIEU9Qi5leHRlbmQoInNhcC51aS5iYXNlLkV2ZW50Iix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oaSxzLHApe0IuYXBwbHkodGhpcyk7aWYoYXJndW1lbnRzLmxlbmd0aD4wKXt0aGlzLmluaXQoaSxzLHApfX19KTtFLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKGkscyxwKXt0aGlzLnNJZD1pO3RoaXMub1NvdXJjZT1zO3RoaXMubVBhcmFtZXRlcnM9cHx8e307dGhpcy5iQ2FuY2VsQnViYmxlPWZhbHNlO3RoaXMuYlByZXZlbnREZWZhdWx0PWZhbHNlfTtFLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMuc0lkPSIiO3RoaXMub1NvdXJjZT1udWxsO3RoaXMubVBhcmFtZXRlcnM9bnVsbDt0aGlzLmJDYW5jZWxCdWJibGU9ZmFsc2U7dGhpcy5iUHJldmVudERlZmF1bHQ9ZmFsc2V9O0UucHJvdG90eXBlLmdldElkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0lkfTtFLnByb3RvdHlwZS5nZXRTb3VyY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vU291cmNlfTtFLnByb3RvdHlwZS5nZXRQYXJhbWV0ZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubVBhcmFtZXRlcnN9O0UucHJvdG90eXBlLmdldFBhcmFtZXRlcj1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5tUGFyYW1ldGVyc1tuXX07RS5wcm90b3R5cGUuY2FuY2VsQnViYmxlPWZ1bmN0aW9uKCl7dGhpcy5iQ2FuY2VsQnViYmxlPXRydWV9O0UucHJvdG90eXBlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7dGhpcy5iUHJldmVudERlZmF1bHQ9dHJ1ZX07cmV0dXJuIEV9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuYmFzZS5FdmVudFByb3ZpZGVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmJhc2UuRXZlbnRQcm92aWRlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0V2ZW50JywnLi9PYmplY3QnLCcuL09iamVjdFBvb2wnXSxmdW5jdGlvbihxLEUsQixPKXsidXNlIHN0cmljdCI7dmFyIGE9Qi5leHRlbmQoInNhcC51aS5iYXNlLkV2ZW50UHJvdmlkZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe0IuYXBwbHkodGhpcyk7dGhpcy5tRXZlbnRSZWdpc3RyeT17fX19KTthLk1fRVZFTlRTPXtFdmVudEhhbmRsZXJDaGFuZ2U6IkV2ZW50SGFuZGxlckNoYW5nZSJ9O2EucHJvdG90eXBlLm9FdmVudFBvb2w9bmV3IE8oRSk7YS5wcm90b3R5cGUuYXR0YWNoRXZlbnQ9ZnVuY3Rpb24oZSxkLGYsbCl7aWYodHlwZW9mKGQpPT09ImZ1bmN0aW9uIil7bD1mO2Y9ZDtkPXVuZGVmaW5lZH1pZighdGhpcy5tRXZlbnRSZWdpc3RyeVtlXSl7dGhpcy5tRXZlbnRSZWdpc3RyeVtlXT1bXX10aGlzLm1FdmVudFJlZ2lzdHJ5W2VdLnB1c2goe29MaXN0ZW5lcjpsLGZGdW5jdGlvbjpmLG9EYXRhOmR9KTt0aGlzLmZpcmVFdmVudChhLk1fRVZFTlRTLkV2ZW50SGFuZGxlckNoYW5nZSx7RXZlbnRJZDplLHR5cGU6J2xpc3RlbmVyQXR0YWNoZWQnfSk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmF0dGFjaEV2ZW50T25jZT1mdW5jdGlvbihlLGQsZixsKXtpZih0eXBlb2YoZCk9PT0iZnVuY3Rpb24iKXtsPWY7Zj1kO2Q9dW5kZWZpbmVkfWZ1bmN0aW9uIG8oKXt0aGlzLmRldGFjaEV2ZW50KGUsbyk7Zi5hcHBseShsfHx0aGlzLGFyZ3VtZW50cyl9dGhpcy5hdHRhY2hFdmVudChlLGQsbyx1bmRlZmluZWQpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5kZXRhY2hFdmVudD1mdW5jdGlvbihlLGYsbCl7dmFyIGI9dGhpcy5tRXZlbnRSZWdpc3RyeVtlXTtpZighYil7cmV0dXJuIHRoaXN9dmFyIEw9ZmFsc2U7Zm9yKHZhciBpPTAsYz1iLmxlbmd0aDtpPGM7aSsrKXtpZihiW2ldLmZGdW5jdGlvbj09PWYmJmJbaV0ub0xpc3RlbmVyPT09bCl7Yi5zcGxpY2UoaSwxKTtMPXRydWU7YnJlYWt9fWlmKGIubGVuZ3RoPT0wKXtkZWxldGUgdGhpcy5tRXZlbnRSZWdpc3RyeVtlXX1pZihMKXt0aGlzLmZpcmVFdmVudChhLk1fRVZFTlRTLkV2ZW50SGFuZGxlckNoYW5nZSx7RXZlbnRJZDplLHR5cGU6J2xpc3RlbmVyRGV0YWNoZWQnfSl9cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmZpcmVFdmVudD1mdW5jdGlvbihlLHAsQSxiKXtpZih0eXBlb2YgcD09ImJvb2xlYW4iKXtiPUE7QT1wfXZhciBjPXRoaXMubUV2ZW50UmVnaXN0cnlbZV0sUD1mYWxzZSxvLGQsSTtpZihifHwoYyYmcS5pc0FycmF5KGMpKSl7Yz1jP2Muc2xpY2UoKTpbXTtvPXRoaXMub0V2ZW50UG9vbC5ib3Jyb3dPYmplY3QoZSx0aGlzLHApO2Zvcih2YXIgaT0wLGw9Yy5sZW5ndGg7aTxsO2krKyl7ST1jW2ldO0kuZkZ1bmN0aW9uLmNhbGwoSS5vTGlzdGVuZXJ8fHRoaXMsbyxJLm9EYXRhKX1pZihiKXtkPXRoaXMuZ2V0RXZlbnRpbmdQYXJlbnQoKTt3aGlsZShkJiYhby5iQ2FuY2VsQnViYmxlKXtjPWQubUV2ZW50UmVnaXN0cnlbZV07aWYoYyYmYyBpbnN0YW5jZW9mIEFycmF5KXtjPWMuc2xpY2UoKTtmb3IodmFyIGk9MCxsPWMubGVuZ3RoO2k8bDtpKyspe0k9Y1tpXTtJLmZGdW5jdGlvbi5jYWxsKEkub0xpc3RlbmVyfHxkLG8sSS5vRGF0YSl9fWQ9ZC5nZXRFdmVudGluZ1BhcmVudCgpfX1QPW8uYlByZXZlbnREZWZhdWx0O3RoaXMub0V2ZW50UG9vbC5yZXR1cm5PYmplY3Qobyl9aWYoQSl7cmV0dXJuIVB9ZWxzZXtyZXR1cm4gdGhpc319O2EucHJvdG90eXBlLmhhc0xpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm4hIXRoaXMubUV2ZW50UmVnaXN0cnlbZV19O2EuZ2V0RXZlbnRMaXN0PWZ1bmN0aW9uKGUpe3JldHVybiBlLm1FdmVudFJlZ2lzdHJ5fTthLnByb3RvdHlwZS5nZXRFdmVudGluZ1BhcmVudD1mdW5jdGlvbigpe3JldHVybiBudWxsfTthLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe2lmKHRoaXMuZ2V0TWV0YWRhdGEpe3JldHVybiJFdmVudFByb3ZpZGVyICIrdGhpcy5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKX1lbHNle3JldHVybiJFdmVudFByb3ZpZGVyIn19O2EucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLm1FdmVudFJlZ2lzdHJ5PXt9O0IucHJvdG90eXBlLmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3RNZXRhZGF0YScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3RNZXRhZGF0YScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9iYXNlL01hbmFnZWRPYmplY3RNZXRhZGF0YSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vRGF0YVR5cGUnLCcuL01ldGFkYXRhJ10sZnVuY3Rpb24ocSxELE0peyJ1c2Ugc3RyaWN0Ijt2YXIgYj1mdW5jdGlvbihjLEMpe00uYXBwbHkodGhpcyxhcmd1bWVudHMpfTtiLnByb3RvdHlwZT1xLnNhcC5uZXdPYmplY3QoTS5wcm90b3R5cGUpO2IucHJvdG90eXBlLmFwcGx5U2V0dGluZ3M9ZnVuY3Rpb24oYyl7dmFyIHM9Yy5tZXRhZGF0YTtNLnByb3RvdHlwZS5hcHBseVNldHRpbmdzLmNhbGwodGhpcyxjKTt2YXIgcj0vKGNoaWxkcmVufGllc3x2ZXN8b2VzfHNlc3xjaGVzfHNoZXN8eGVzfHMpJC9pO3ZhciBTPXsnY2hpbGRyZW4nOi0zLCdpZXMnOid5JywndmVzJzonZicsJ29lcyc6LTIsJ3Nlcyc6LTIsJ2NoZXMnOi0yLCdzaGVzJzotMiwneGVzJzotMiwncyc6LTF9O2Z1bmN0aW9uIG4oaSxlLG8pe3ZhciBOLEk7aT1pfHx7fTtmb3IoTiBpbiBpKXtJPWlbTl07aWYoZSYmdHlwZW9mIEkhPT0ib2JqZWN0Iil7ST17fTtJW2VdPWlbTl19ST1xLmV4dGVuZCh7fSxvLEkpO0kubmFtZT1OO2lmKEkubXVsdGlwbGU9PT10cnVlJiYhSS5zaW5ndWxhck5hbWUpe0kuc2luZ3VsYXJOYW1lPU4ucmVwbGFjZShyLGZ1bmN0aW9uKCQscCl7dmFyIFI9U1twLnRvTG93ZXJDYXNlKCldO3JldHVybiB0eXBlb2YgUj09PSJzdHJpbmciP1I6cC5zbGljZSgwLFIpfSl9aVtOXT1JfXJldHVybiBpfWZ1bmN0aW9uIGYoaSxwKXt2YXIgUj17fSxOO2ZvcihOIGluIGkpe2lmKHA9PT0oaVtOXS52aXNpYmlsaXR5PT09J3B1YmxpYycpKXtSW05dPWlbTl19fXJldHVybiBSfXZhciBhPS8oW2Etel1bXi5dKig/OlwuW2Etel1bXi5dKikqKVwuLztmdW5jdGlvbiBkKE4pe3ZhciBtPWEuZXhlYyhOKTtyZXR1cm4obSYmbVsxXSl8fCIifXRoaXMuX3NMaWJyYXJ5TmFtZT1zLmxpYnJhcnl8fGQodGhpcy5nZXROYW1lKCkpO3RoaXMuX21Qcm9wZXJ0aWVzPW4ocy5wcm9wZXJ0aWVzLCJ0eXBlIix7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyJ9KTt2YXIgQT1uKHMuYWdncmVnYXRpb25zLCJ0eXBlIix7dHlwZToic2FwLnVpLmNvcmUuQ29udHJvbCIsbXVsdGlwbGU6dHJ1ZSx2aXNpYmlsaXR5OidwdWJsaWMnfSk7dGhpcy5fbUFnZ3JlZ2F0aW9ucz1mKEEsdHJ1ZSk7dGhpcy5fbVByaXZhdGVBZ2dyZWdhdGlvbnM9ZihBLGZhbHNlKTt0aGlzLl9zRGVmYXVsdEFnZ3JlZ2F0aW9uPXMuZGVmYXVsdEFnZ3JlZ2F0aW9ufHxudWxsO3RoaXMuX21Bc3NvY2lhdGlvbnM9bihzLmFzc29jaWF0aW9ucywidHlwZSIse3R5cGU6InNhcC51aS5jb3JlLkNvbnRyb2wiLG11bHRpcGxlOmZhbHNlfSk7dGhpcy5fbUV2ZW50cz1uKHMuZXZlbnRzLG51bGwse2FsbG93UHJldmVudERlZmF1bHQ6ZmFsc2V9KTt0aGlzLl9iRW5yaWNoZWQ9ZmFsc2U7aWYoYy5tZXRhZGF0YS5fX3ZlcnNpb24+MS4wKXt0aGlzLmdlbmVyYXRlQWNjZXNzb3JzKCl9fTtiLnByb3RvdHlwZS5hZnRlckFwcGx5U2V0dGluZ3M9ZnVuY3Rpb24oKXtNLnByb3RvdHlwZS5hZnRlckFwcGx5U2V0dGluZ3MuY2FsbCh0aGlzKTt2YXIgcD10aGlzLmdldFBhcmVudCgpO2lmKHAmJnAgaW5zdGFuY2VvZiBiKXt0aGlzLl9tQWxsRXZlbnRzPXEuZXh0ZW5kKHt9LHAuX21BbGxFdmVudHMsdGhpcy5fbUV2ZW50cyk7dGhpcy5fbUFsbFByb3BlcnRpZXM9cS5leHRlbmQoe30scC5fbUFsbFByb3BlcnRpZXMsdGhpcy5fbVByb3BlcnRpZXMpO3RoaXMuX21BbGxQcml2YXRlQWdncmVnYXRpb25zPXEuZXh0ZW5kKHt9LHAuX21BbGxQcml2YXRlQWdncmVnYXRpb25zLHRoaXMuX21Qcml2YXRlQWdncmVnYXRpb25zKTt0aGlzLl9tQWxsQWdncmVnYXRpb25zPXEuZXh0ZW5kKHt9LHAuX21BbGxBZ2dyZWdhdGlvbnMsdGhpcy5fbUFnZ3JlZ2F0aW9ucyk7dGhpcy5fbUFsbEFzc29jaWF0aW9ucz1xLmV4dGVuZCh7fSxwLl9tQWxsQXNzb2NpYXRpb25zLHRoaXMuX21Bc3NvY2lhdGlvbnMpO3RoaXMuX3NEZWZhdWx0QWdncmVnYXRpb249dGhpcy5fc0RlZmF1bHRBZ2dyZWdhdGlvbnx8cC5fc0RlZmF1bHRBZ2dyZWdhdGlvbjtpZihwLl9tSGlkZGVuQWdncmVnYXRpb25zKXt0aGlzLl9tSGlkZGVuQWdncmVnYXRpb25zPXEuZXh0ZW5kKHt9LHAuX21IaWRkZW5BZ2dyZWdhdGlvbnMpfX1lbHNle3RoaXMuX21BbGxFdmVudHM9dGhpcy5fbUV2ZW50czt0aGlzLl9tQWxsUHJvcGVydGllcz10aGlzLl9tUHJvcGVydGllczt0aGlzLl9tQWxsUHJpdmF0ZUFnZ3JlZ2F0aW9ucz10aGlzLl9tUHJpdmF0ZUFnZ3JlZ2F0aW9uczt0aGlzLl9tQWxsQWdncmVnYXRpb25zPXRoaXMuX21BZ2dyZWdhdGlvbnM7dGhpcy5fbUFsbEFzc29jaWF0aW9ucz10aGlzLl9tQXNzb2NpYXRpb25zfX07Yi5LaW5kPXtQUk9QRVJUWTowLFNJTkdMRV9BR0dSRUdBVElPTjoxLE1VTFRJUExFX0FHR1JFR0FUSU9OOjIsU0lOR0xFX0FTU09DSUFUSU9OOjMsTVVMVElQTEVfQVNTT0NJQVRJT046NCxFVkVOVDo1fTtiLnByb3RvdHlwZS5nZXRMaWJyYXJ5TmFtZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zTGlicmFyeU5hbWV9O2IucHJvdG90eXBlLmlzQWJzdHJhY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYkFic3RyYWN0fTtiLnByb3RvdHlwZS5hZGRQcm9wZXJ0eT1mdW5jdGlvbihuLGkpe2kubmFtZT1uO3RoaXMuX21Qcm9wZXJ0aWVzW25dPWk7aWYoIXRoaXMuX21BbGxQcm9wZXJ0aWVzW25dKXt0aGlzLl9tQWxsUHJvcGVydGllc1tuXT1pfWlmKHRoaXMuX2JFbnJpY2hlZCl7dGhpcy5fZW5yaWNoQ2hpbGRJbmZvcygpfX07Yi5wcm90b3R5cGUuaGFzUHJvcGVydHk9ZnVuY3Rpb24obil7cmV0dXJuISF0aGlzLl9tQWxsUHJvcGVydGllc1tuXX07Yi5wcm90b3R5cGUuZ2V0UHJvcGVydGllcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tUHJvcGVydGllc307Yi5wcm90b3R5cGUuZ2V0QWxsUHJvcGVydGllcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tQWxsUHJvcGVydGllc307Yi5wcm90b3R5cGUuZ2V0QWdncmVnYXRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21BZ2dyZWdhdGlvbnN9O2IucHJvdG90eXBlLmhhc0FnZ3JlZ2F0aW9uPWZ1bmN0aW9uKG4pe3JldHVybiEhdGhpcy5fbUFsbEFnZ3JlZ2F0aW9uc1tuXX07Yi5wcm90b3R5cGUuZ2V0QWxsQWdncmVnYXRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21BbGxBZ2dyZWdhdGlvbnN9O2IucHJvdG90eXBlLmdldEFsbFByaXZhdGVBZ2dyZWdhdGlvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbUFsbFByaXZhdGVBZ2dyZWdhdGlvbnN9O2IucHJvdG90eXBlLmdldE1hbmFnZWRBZ2dyZWdhdGlvbj1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5fbUFsbEFnZ3JlZ2F0aW9uc1thXXx8dGhpcy5fbUFsbFByaXZhdGVBZ2dyZWdhdGlvbnNbYV19O2IucHJvdG90eXBlLmdldERlZmF1bHRBZ2dyZWdhdGlvbk5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc0RlZmF1bHRBZ2dyZWdhdGlvbn07Yi5wcm90b3R5cGUuZ2V0RGVmYXVsdEFnZ3JlZ2F0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NEZWZhdWx0QWdncmVnYXRpb24mJnRoaXMuZ2V0QWxsQWdncmVnYXRpb25zKClbdGhpcy5fc0RlZmF1bHRBZ2dyZWdhdGlvbl19O2IucHJvdG90eXBlLmdldEFzc29jaWF0aW9ucz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tQXNzb2NpYXRpb25zfTtiLnByb3RvdHlwZS5oYXNBc3NvY2lhdGlvbj1mdW5jdGlvbihuKXtyZXR1cm4hIXRoaXMuX21BbGxBc3NvY2lhdGlvbnNbbl19O2IucHJvdG90eXBlLmdldEFsbEFzc29jaWF0aW9ucz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tQWxsQXNzb2NpYXRpb25zfTtiLnByb3RvdHlwZS5nZXRFdmVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbUV2ZW50c307Yi5wcm90b3R5cGUuaGFzRXZlbnQ9ZnVuY3Rpb24obil7cmV0dXJuISF0aGlzLl9tQWxsRXZlbnRzW25dfTtiLnByb3RvdHlwZS5nZXRBbGxFdmVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbUFsbEV2ZW50c307Yi5wcm90b3R5cGUuZ2V0UHJvcGVydHlEZWZhdWx0cz1mdW5jdGlvbigpe3ZhciBkPXRoaXMuX21EZWZhdWx0cyx0O2lmKGQpe3JldHVybiBkfWlmKHRoaXMuZ2V0UGFyZW50KClpbnN0YW5jZW9mIGIpe2Q9cS5zYXAubmV3T2JqZWN0KHRoaXMuZ2V0UGFyZW50KCkuZ2V0UHJvcGVydHlEZWZhdWx0cygpKX1lbHNle2Q9e319Zm9yKHZhciBzIGluIHRoaXMuX21Qcm9wZXJ0aWVzKXtpZih0aGlzLl9tUHJvcGVydGllc1tzXS5kZWZhdWx0VmFsdWUhPT1udWxsKXtkW3NdPXRoaXMuX21Qcm9wZXJ0aWVzW3NdLmRlZmF1bHRWYWx1ZX1lbHNle3Q9RC5nZXRUeXBlKHRoaXMuX21Qcm9wZXJ0aWVzW3NdLnR5cGUpO2lmKHQgaW5zdGFuY2VvZiBEKXtkW3NdPXQuZ2V0RGVmYXVsdFZhbHVlKCl9ZWxzZXtmb3IodmFyIGkgaW4gdCl7ZFtzXT10W2ldO2JyZWFrfX19fXJldHVybih0aGlzLl9tRGVmYXVsdHM9ZCl9O2IucHJvdG90eXBlLmNyZWF0ZVByb3BlcnR5QmFnPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2ZuUHJvcGVydHlCYWdGYWN0b3J5KXt0aGlzLl9mblByb3BlcnR5QmFnRmFjdG9yeT1xLnNhcC5mYWN0b3J5KHRoaXMuZ2V0UHJvcGVydHlEZWZhdWx0cygpKX1yZXR1cm4gbmV3KHRoaXMuX2ZuUHJvcGVydHlCYWdGYWN0b3J5KSgpfTtiLnByb3RvdHlwZS5fZW5yaWNoQ2hpbGRJbmZvcz1mdW5jdGlvbigpe2lmKHRoaXMuX2JFbnJpY2hlZCl7cmV0dXJufWlmKHRoaXMuZ2V0UGFyZW50KClpbnN0YW5jZW9mIGIpe3RoaXMuZ2V0UGFyZW50KCkuX2VucmljaENoaWxkSW5mb3MoKX12YXIgbSxuLGk7ZnVuY3Rpb24gYShwLG4pe3JldHVybiBwK24uc3Vic3RyaW5nKDAsMSkudG9VcHBlckNhc2UoKStuLnN1YnN0cmluZygxKX1tPXRoaXMuX21Qcm9wZXJ0aWVzO2ZvcihuIGluIG0pe2k9bVtuXTtpLl9zTmFtZT1uO2kuX3NVSUQ9bjtpLl9vUGFyZW50PXRoaXM7aS5faUtpbmQ9Yi5LaW5kLlBST1BFUlRZO2kuX3NNdXRhdG9yPWEoInNldCIsbik7aS5fc0dldHRlcj1hKCJnZXQiLG4pfW09dGhpcy5fbUFnZ3JlZ2F0aW9ucztmb3IobiBpbiBtKXtpPW1bbl07aS5fc05hbWU9bjtpLl9zVUlEPSJhZ2dyZWdhdGlvbjoiK247aS5fb1BhcmVudD10aGlzO2kuX3NEZXN0cnVjdG9yPWEoImRlc3Ryb3kiLG4pO2kuX3NHZXR0ZXI9YSgiZ2V0IixuKTtpZihpLm11bHRpcGxlKXtpLl9pS2luZD1iLktpbmQuTVVMVElQTEVfQUdHUkVHQVRJT047aS5fc011dGF0b3I9YSgiYWRkIixpLnNpbmd1bGFyTmFtZSk7aS5fc1JlbW92ZU11dGF0b3I9YSgicmVtb3ZlIixpLnNpbmd1bGFyTmFtZSk7aS5fc1JlbW92ZUFsbE11dGF0b3I9YSgicmVtb3ZlQWxsIixuKX1lbHNle2kuX2lLaW5kPWIuS2luZC5TSU5HTEVfQUdHUkVHQVRJT047aS5fc011dGF0b3I9YSgic2V0IixuKX19bT10aGlzLl9tQXNzb2NpYXRpb25zO2ZvcihuIGluIG0pe2k9bVtuXTtpLl9zTmFtZT1uO2kuX3NVSUQ9ImFzc29jaWF0aW9uOiIrbjtpLl9vUGFyZW50PXRoaXM7aS5fc0dldHRlcj1hKCJnZXQiLG4pO2lmKGkubXVsdGlwbGUpe2kuX2lLaW5kPWIuS2luZC5NVUxUSVBMRV9BU1NPQ0lBVElPTjtpLl9zTXV0YXRvcj1hKCJhZGQiLGkuc2luZ3VsYXJOYW1lKX1lbHNle2kuX2lLaW5kPWIuS2luZC5TSU5HTEVfQVNTT0NJQVRJT047aS5fc011dGF0b3I9YSgic2V0IixuKX19bT10aGlzLl9tRXZlbnRzO2ZvcihuIGluIG0pe2k9bVtuXTtpLl9zTmFtZT1uO2kuX3NVSUQ9ImV2ZW50OiIrbjtpLl9vUGFyZW50PXRoaXM7aS5faUtpbmQ9Yi5LaW5kLkVWRU5UO2kuX3NNdXRhdG9yPWEoImF0dGFjaCIsbil9dGhpcy5fYkVucmljaGVkPXRydWV9O2IucHJvdG90eXBlLmdldEpTT05LZXlzPWZ1bmN0aW9uKCl7aWYodGhpcy5fbUpTT05LZXlzKXtyZXR1cm4gdGhpcy5fbUpTT05LZXlzfXRoaXMuX2VucmljaENoaWxkSW5mb3MoKTt2YXIgaj17fTtmdW5jdGlvbiBhKG0pe3ZhciBuLGk7Zm9yKG4gaW4gbSl7aT1tW25dO2lmKCFqW25dfHxpLl9pS2luZDxqW25dLl9pS2luZCl7altuXT1pfTtqW2kuX3NVSURdPWl9fWEodGhpcy5nZXRBbGxQcm9wZXJ0aWVzKCkpO2EodGhpcy5nZXRBbGxBZ2dyZWdhdGlvbnMoKSk7YSh0aGlzLmdldEFsbEFzc29jaWF0aW9ucygpKTthKHRoaXMuZ2V0QWxsRXZlbnRzKCkpO3JldHVybih0aGlzLl9tSlNPTktleXM9ail9O2IucHJvdG90eXBlLmdlbmVyYXRlQWNjZXNzb3JzPWZ1bmN0aW9uKCl7dmFyIGM9dGhpczt2YXIgZT10aGlzLmdldENsYXNzKCkucHJvdG90eXBlO2Z1bmN0aW9uIGcocCxuLGYsZCl7dmFyIG49cCtuLnN1YnN0cmluZygwLDEpLnRvVXBwZXJDYXNlKCkrbi5zdWJzdHJpbmcoMSk7aWYoIWVbbl0pe2Vbbl09ZD9mdW5jdGlvbigpe3Euc2FwLmxvZy53YXJuaW5nKCJVc2FnZSBvZiBkZXByZWNhdGVkIGZlYXR1cmU6ICIrYy5nZXROYW1lKCkrIi4iK24pO3JldHVybiBmLmFwcGx5KHRoaXMsYXJndW1lbnRzKX06ZjtjLl9hUHVibGljTWV0aG9kcy5wdXNoKG4pfX1xLmVhY2godGhpcy5fbVByb3BlcnRpZXMsZnVuY3Rpb24obixpKXtnKCJnZXQiLG4sZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eShuKX0pO2coInNldCIsbixmdW5jdGlvbih2KXt0aGlzLnNldFByb3BlcnR5KG4sdik7cmV0dXJuIHRoaXN9LGkuZGVwcmVjYXRlZCk7aWYoaS5iaW5kYWJsZSl7ZygiYmluZCIsbixmdW5jdGlvbihwLGYsbSl7dGhpcy5iaW5kUHJvcGVydHkobixwLGYsbSk7cmV0dXJuIHRoaXN9LGkuZGVwcmVjYXRlZCk7ZygidW5iaW5kIixuLGZ1bmN0aW9uKHApe3RoaXMudW5iaW5kUHJvcGVydHkobixwKTtyZXR1cm4gdGhpc30pfX0pO3EuZWFjaCh0aGlzLl9tQWdncmVnYXRpb25zLGZ1bmN0aW9uKG4sZCl7aWYoIWQubXVsdGlwbGUpe2coImdldCIsbixmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEFnZ3JlZ2F0aW9uKG4pfSk7Zygic2V0IixuLGZ1bmN0aW9uKHYpe3RoaXMuc2V0QWdncmVnYXRpb24obix2KTtyZXR1cm4gdGhpc30sZC5kZXByZWNhdGVkKX1lbHNle3ZhciBoPWQuc2luZ3VsYXJOYW1lO2coImdldCIsbixmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEFnZ3JlZ2F0aW9uKG4sW10pfSk7ZygiYWRkIixoLGZ1bmN0aW9uKGEpe3RoaXMuYWRkQWdncmVnYXRpb24obixhKTtyZXR1cm4gdGhpc30sZC5kZXByZWNhdGVkKTtnKCJpbnNlcnQiLGgsZnVuY3Rpb24oaSxhKXt0aGlzLmluc2VydEFnZ3JlZ2F0aW9uKG4saSxhKTtyZXR1cm4gdGhpc30sZC5kZXByZWNhdGVkKTtnKCJyZW1vdmUiLGgsZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucmVtb3ZlQWdncmVnYXRpb24obixhKX0pO2coInJlbW92ZUFsbCIsbixmdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbW92ZUFsbEFnZ3JlZ2F0aW9uKG4pfSk7ZygiaW5kZXhPZiIsaCxmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pbmRleE9mQWdncmVnYXRpb24obixhKX0pfWcoImRlc3Ryb3kiLG4sZnVuY3Rpb24oKXt0aGlzLmRlc3Ryb3lBZ2dyZWdhdGlvbihuKTtyZXR1cm4gdGhpc30pO2lmKGQuYmluZGFibGUpe2coImJpbmQiLG4sZnVuY3Rpb24ocCx0LHMsZil7dGhpcy5iaW5kQWdncmVnYXRpb24obixwLHQscyxmKTtyZXR1cm4gdGhpc30sZC5kZXByZWNhdGVkKTtnKCJ1bmJpbmQiLG4sZnVuY3Rpb24ocCl7dGhpcy51bmJpbmRBZ2dyZWdhdGlvbihuLHApO3JldHVybiB0aGlzfSl9fSk7cS5lYWNoKHRoaXMuX21Bc3NvY2lhdGlvbnMsZnVuY3Rpb24obixpKXtpZighaS5tdWx0aXBsZSl7ZygiZ2V0IixuLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXNzb2NpYXRpb24obil9KTtnKCJzZXQiLG4sZnVuY3Rpb24odil7dGhpcy5zZXRBc3NvY2lhdGlvbihuLHYpO3JldHVybiB0aGlzfSxpLmRlcHJlY2F0ZWQpfWVsc2V7dmFyIGQ9aS5zaW5ndWxhck5hbWU7ZygiZ2V0IixuLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QXNzb2NpYXRpb24obixbXSl9KTtnKCJhZGQiLGQsZnVuY3Rpb24oYSl7dGhpcy5hZGRBc3NvY2lhdGlvbihuLGEpO3JldHVybiB0aGlzfSxpLmRlcHJlY2F0ZWQpO2coInJlbW92ZSIsZCxmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5yZW1vdmVBc3NvY2lhdGlvbihuLGEpfSk7ZygicmVtb3ZlQWxsIixuLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVtb3ZlQWxsQXNzb2NpYXRpb24obil9KX19KTtxLmVhY2godGhpcy5fbUV2ZW50cyxmdW5jdGlvbihuLGkpe2coImF0dGFjaCIsbixmdW5jdGlvbihkLGYsbyl7dGhpcy5hdHRhY2hFdmVudChuLGQsZixvKTtyZXR1cm4gdGhpc30saS5kZXByZWNhdGVkKTtnKCJkZXRhY2giLG4sZnVuY3Rpb24oZixvKXt0aGlzLmRldGFjaEV2ZW50KG4sZixvKTtyZXR1cm4gdGhpc30pO3ZhciBhPSEhaS5hbGxvd1ByZXZlbnREZWZhdWx0O3ZhciBoPSEhaS5lbmFibGVFdmVudEJ1YmJsaW5nO2coImZpcmUiLG4sZnVuY3Rpb24ocCl7cmV0dXJuIHRoaXMuZmlyZUV2ZW50KG4scCxhLGgpfSl9KX07KGZ1bmN0aW9uKCl7dmFyIHU9e307ZnVuY3Rpb24gYShpKXtpPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFVJRFByZWZpeCgpK2k7dVtpXT11W2ldfHwwO3JldHVybihpK3VbaV0rKyl9Yi51aWQ9YTtiLnByb3RvdHlwZS51aWQ9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLl9zVUlEVG9rZW47aWYodHlwZW9mIGkhPT0ic3RyaW5nIil7aT10aGlzLmdldE5hbWUoKTtpPWkuc2xpY2UoaS5sYXN0SW5kZXhPZignLicpKzEpO2k9aS5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCIkMSAkMiIpLnNwbGl0KCIgIikuc2xpY2UoLTEpWzBdO2k9dGhpcy5fc1VJRFRva2VuPWkucmVwbGFjZSgvKFteQS1aYS16MC05LV8uOl0pfChbMC05XSskKS9nLCIiKS50b0xvd2VyQ2FzZSgpfXJldHVybiBhKGkpfX0oKSk7cmV0dXJuIGJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Db21wb25lbnRNZXRhZGF0YScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkNvbXBvbmVudE1ldGFkYXRhJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvQ29tcG9uZW50TWV0YWRhdGEiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9NYW5hZ2VkT2JqZWN0TWV0YWRhdGEnXSxmdW5jdGlvbihxLE0peyJ1c2Ugc3RyaWN0Ijt2YXIgQz1mdW5jdGlvbihjLG8pe00uYXBwbHkodGhpcyxhcmd1bWVudHMpfTtDLnByb3RvdHlwZT1xLnNhcC5uZXdPYmplY3QoTS5wcm90b3R5cGUpO0MucHJlcHJvY2Vzc0NsYXNzSW5mbz1mdW5jdGlvbihjKXtpZihjJiZ0eXBlb2YgYy5tZXRhZGF0YT09PSJzdHJpbmciKXtjLm1ldGFkYXRhPXtfc3JjOmMubWV0YWRhdGF9fXJldHVybiBjfTtDLnByb3RvdHlwZS5hcHBseVNldHRpbmdzPWZ1bmN0aW9uKGMpe3ZhciBzPWMubWV0YWRhdGE7TS5wcm90b3R5cGUuYXBwbHlTZXR0aW5ncy5jYWxsKHRoaXMsYyk7dmFyIG49dGhpcy5nZXROYW1lKCkscD1uLnJlcGxhY2UoL1wuXHcrPyQvLCIiKTtpZihzLl9zcmMpe3Euc2FwLmxvZy53YXJuaW5nKCJUaGUgbWV0YWRhdGEgb2YgdGhlIGNvbXBvbmVudCAiK24rIiBpcyBsb2FkZWQgZnJvbSBmaWxlICIrcy5fc3JjKyIuIFRoaXMgaXMgYSBkZXNpZ24gdGltZSBmZWF0dXJlIGFuZCBub3QgZm9yIHByb2R1Y3RpdmUgdXNhZ2UhIik7dmFyIHU9cS5zYXAuZ2V0TW9kdWxlUGF0aChwLCIvIitzLl9zcmMpO3ZhciByPXEuc2FwLnN5bmNHZXRKU09OKHUpO2lmKHIuc3VjY2Vzcyl7cS5leHRlbmQocyxyLmRhdGEpfWVsc2V7cS5zYXAubG9nLmVycm9yKCJGYWlsZWQgdG8gbG9hZCBjb21wb25lbnQgbWV0YWRhdGEgZnJvbSBcIiIrcy5fc3JjKyJcIiEgUmVhc29uOiAiK3IuZXJyb3IpfX10aGlzLl9zQ29tcG9uZW50TmFtZT1wO3RoaXMuX2JJbml0aWFsaXplZD1mYWxzZTt0aGlzLl9pSW5zdGFuY2VDb3VudD0wO3RoaXMuX3NWZXJzaW9uPXMudmVyc2lvbjt0aGlzLl9tRGVwZW5kZW5jaWVzPXMuZGVwZW5kZW5jaWVzO3RoaXMuX2FJbmNsdWRlcz1zLmluY2x1ZGVzO3RoaXMuX21Db25maWc9cy5jb25maWc7dGhpcy5fbUN1c3RvbWl6aW5nPXMuY3VzdG9taXppbmc7dGhpcy5fbU1vZGVscz1zLm1vZGVsc3x8e307dGhpcy5fbVNlcnZpY2VzPXMuc2VydmljZXN8fHt9O3ZhciBQPXRoaXMuZ2V0UGFyZW50KCk7aWYoUCBpbnN0YW5jZW9mIEMpe3RoaXMuX21Db25maWc9cS5leHRlbmQodHJ1ZSx7fSxQLl9tQ29uZmlnLHRoaXMuX21Db25maWcpO3RoaXMuX21DdXN0b21pemluZz1xLmV4dGVuZCh0cnVlLHt9LFAuX21DdXN0b21pemluZyx0aGlzLl9tQ3VzdG9taXppbmcpO3RoaXMuX21Nb2RlbHM9cS5leHRlbmQodHJ1ZSx7fSxQLl9tTW9kZWxzLHRoaXMuX21Nb2RlbHMpO3RoaXMuX21TZXJ2aWNlcz1xLmV4dGVuZCh0cnVlLHt9LFAuX21TZXJ2aWNlcyx0aGlzLl9tU2VydmljZXMpfX07Qy5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9iSW5pdGlhbGl6ZWQpe3ZhciBwPXRoaXMuZ2V0UGFyZW50KCk7aWYocCBpbnN0YW5jZW9mIEMpe3AuaW5pdCgpfXRoaXMuX2xvYWREZXBlbmRlbmNpZXMoKTt0aGlzLl9sb2FkSW5jbHVkZXMoKTt0aGlzLl9iSW5pdGlhbGl6ZWQ9dHJ1ZX19O0MucHJvdG90eXBlLmV4aXQ9ZnVuY3Rpb24oKXtpZih0aGlzLl9iSW5pdGlhbGl6ZWQpe3ZhciBwPXRoaXMuZ2V0UGFyZW50KCk7aWYocCBpbnN0YW5jZW9mIEMpe3AuZXhpdCgpfXRoaXMuX2JJbml0aWFsaXplZD1mYWxzZX19O0MucHJvdG90eXBlLm9uSW5pdENvbXBvbmVudD1mdW5jdGlvbigpe2lmKHRoaXMuX2lJbnN0YW5jZUNvdW50PT09MCYmIXEuaXNFbXB0eU9iamVjdCh0aGlzLl9tQ3VzdG9taXppbmcpKXtxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24iKTtzYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24uYWN0aXZhdGVGb3JDb21wb25lbnQodGhpcy5fc0NvbXBvbmVudE5hbWUpfXRoaXMuX2lJbnN0YW5jZUNvdW50Kyt9O0MucHJvdG90eXBlLm9uRXhpdENvbXBvbmVudD1mdW5jdGlvbigpe3RoaXMuX2lJbnN0YW5jZUNvdW50LS07aWYodGhpcy5faUluc3RhbmNlQ291bnQ9PT0wJiYhcS5pc0VtcHR5T2JqZWN0KHRoaXMuX21DdXN0b21pemluZykpe2lmKHNhcC51aS5jb3JlLkN1c3RvbWl6aW5nQ29uZmlndXJhdGlvbil7c2FwLnVpLmNvcmUuQ3VzdG9taXppbmdDb25maWd1cmF0aW9uLmRlYWN0aXZhdGVGb3JDb21wb25lbnQodGhpcy5fc0NvbXBvbmVudE5hbWUpfX19O0MucHJvdG90eXBlLmdldERlcGVuZGVuY2llcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tRGVwZW5kZW5jaWVzfTtDLnByb3RvdHlwZS5nZXRJbmNsdWRlcz1mdW5jdGlvbigpe3JldHVybih0aGlzLl9hSW5jbHVkZXMmJnRoaXMuX2FJbmNsdWRlcy5sZW5ndGg+MCk/dGhpcy5fYUluY2x1ZGVzOm51bGx9O0MucHJvdG90eXBlLmdldFVJNVZlcnNpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbURlcGVuZGVuY2llcz90aGlzLl9tRGVwZW5kZW5jaWVzLnVpNXZlcnNpb246bnVsbH07Qy5wcm90b3R5cGUuZ2V0Q29tcG9uZW50cz1mdW5jdGlvbigpe3ZhciBjPW51bGw7aWYodGhpcy5fbURlcGVuZGVuY2llcyl7aWYodGhpcy5fbURlcGVuZGVuY2llcy5jb21wb25lbnRzJiYodGhpcy5fbURlcGVuZGVuY2llcy5jb21wb25lbnRzLmxlbmd0aD4wKSl7Yz10aGlzLl9tRGVwZW5kZW5jaWVzLmNvbXBvbmVudHN9fXJldHVybiBjfTtDLnByb3RvdHlwZS5nZXRMaWJzPWZ1bmN0aW9uKCl7dmFyIGw9bnVsbDtpZih0aGlzLl9tRGVwZW5kZW5jaWVzKXtpZih0aGlzLl9tRGVwZW5kZW5jaWVzLmxpYnMmJih0aGlzLl9tRGVwZW5kZW5jaWVzLmxpYnMubGVuZ3RoPjApKXtsPXRoaXMuX21EZXBlbmRlbmNpZXMubGlic319cmV0dXJuIGx9O0MucHJvdG90eXBlLmdldFZlcnNpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc1ZlcnNpb259O0MucHJvdG90eXBlLmdldENvbmZpZz1mdW5jdGlvbihrKXtyZXR1cm4gdGhpcy5fbUNvbmZpZz9xLmV4dGVuZCh7fSxrP3RoaXMuX21Db25maWdba106dGhpcy5fbUNvbmZpZyk6dW5kZWZpbmVkfTtDLnByb3RvdHlwZS5nZXRDdXN0b21pemluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tQ3VzdG9taXppbmc/cS5leHRlbmQoe30sdGhpcy5fbUN1c3RvbWl6aW5nKTp1bmRlZmluZWR9O0MucHJvdG90eXBlLmdldE1vZGVscz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tTW9kZWxzfTtDLnByb3RvdHlwZS5nZXRTZXJ2aWNlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tU2VydmljZXN9O0MucHJvdG90eXBlLl9sb2FkSW5jbHVkZXM9ZnVuY3Rpb24oKXt2YXIgST10aGlzLmdldEluY2x1ZGVzKCk7aWYoSSYmSS5sZW5ndGg+MCl7dmFyIHQ9dGhpczt2YXIgbD10aGlzLmdldExpYnJhcnlOYW1lKCk7cS5lYWNoKEksZnVuY3Rpb24oaSxmKXtpZihmLm1hdGNoKC9cLmNzcyQvaSkpe3ZhciBjPXNhcC51aS5yZXNvdXJjZShsLGYpO3Euc2FwLmxvZy5pbmZvKCJDb21wb25lbnQgXCIiK3QuZ2V0TmFtZSgpKyJcIiBpcyBsb2FkaW5nIENTUzogXCIiK2MrIlwiIik7cS5zYXAuaW5jbHVkZVN0eWxlU2hlZXQoYyl9ZWxzZXt2YXIgbT1mLm1hdGNoKC9cLmpzJC9pKTtpZihtKXt2YXIgcD1sLnJlcGxhY2UoL1wuL2csJy8nKSsoZi5zbGljZSgwLDEpPT09Jy8nPycnOicvJykrZi5zbGljZSgwLG0uaW5kZXgpO3Euc2FwLmxvZy5pbmZvKCJDb21wb25lbnQgXCIiK3QuZ2V0TmFtZSgpKyJcIiBpcyBsb2FkaW5nIEpTOiBcIiIrcCsiXCIiKTtxLnNhcC5fcmVxdWlyZVBhdGgocCl9fX0pfX07Qy5wcm90b3R5cGUuX2xvYWREZXBlbmRlbmNpZXM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGQ9dGhpcy5nZXREZXBlbmRlbmNpZXMoKTtpZihkKXt2YXIgbD1kLmxpYnM7aWYobCl7cS5lYWNoKGwsZnVuY3Rpb24oaSxMKXtxLnNhcC5sb2cuaW5mbygiQ29tcG9uZW50IFwiIit0LmdldE5hbWUoKSsiXCIgaXMgbG9hZGluZyBsaWJyYXJ5OiBcIiIrTCsiXCIiKTtzYXAudWkuZ2V0Q29yZSgpLmxvYWRMaWJyYXJ5KEwpfSl9dmFyIGM9ZC5jb21wb25lbnRzO2lmKGMpe3EuZWFjaChjLGZ1bmN0aW9uKGksbil7cS5zYXAubG9nLmluZm8oIkNvbXBvbmVudCBcIiIrdC5nZXROYW1lKCkrIlwiIGlzIGxvYWRpbmcgY29tcG9uZW50OiBcIiIrbisiLkNvbXBvbmVudFwiIik7c2FwLnVpLmNvbXBvbmVudC5sb2FkKHtuYW1lOm59KX0pfX19O3JldHVybiBDfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuQ29uZmlndXJhdGlvbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkNvbmZpZ3VyYXRpb24nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Db25maWd1cmF0aW9uIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvT2JqZWN0JywnLi9Mb2NhbGUnLCdzYXAvdWkvdGhpcmRwYXJ0eS9VUkknXSxmdW5jdGlvbihxLEIsTCxVKXsidXNlIHN0cmljdCI7dmFyIEM9Qi5leHRlbmQoInNhcC51aS5jb3JlLkNvbmZpZ3VyYXRpb24iLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihvKXt0aGlzLl9vQ29yZT1vO2Z1bmN0aW9uIGYoKXt2YXIgZTtpZighIXNhcC51aS5EZXZpY2Uub3MuYW5kcm9pZCl7ZT1uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9ccyhbYS16XXsyfS1bYS16XXsyfSlbOyldL2kpO2lmKGUpe3JldHVybiBlWzFdfX1yZXR1cm4gbmF2aWdhdG9yLmxhbmd1YWdlfHxuYXZpZ2F0b3IudXNlckxhbmd1YWdlfHxuYXZpZ2F0b3IuYnJvd3Nlckxhbmd1YWdlfXZhciBnPXsidGhlbWUiOnt0eXBlOiJzdHJpbmciLGRlZmF1bHRWYWx1ZToiYmFzZSJ9LCJsYW5ndWFnZSI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOmYoKX0sImZvcm1hdExvY2FsZSI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOm51bGx9LCJhY2Nlc3NpYmlsaXR5Ijp7dHlwZToiYm9vbGVhbiIsZGVmYXVsdFZhbHVlOnRydWV9LCJhbmltYXRpb24iOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6dHJ1ZX0sInJ0bCI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpudWxsfSwiZGVidWciOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2V9LCJpbnNwZWN0Ijp7dHlwZToiYm9vbGVhbiIsZGVmYXVsdFZhbHVlOmZhbHNlfSwib3JpZ2luSW5mbyI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpmYWxzZX0sIm5vQ29uZmxpY3QiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2Usbm9Vcmw6dHJ1ZX0sIm5vRHVwbGljYXRlSWRzIjp7dHlwZToiYm9vbGVhbiIsZGVmYXVsdFZhbHVlOnRydWV9LCJ0cmFjZSI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpmYWxzZSxub1VybDp0cnVlfSwibW9kdWxlcyI6e3R5cGU6InN0cmluZ1tdIixkZWZhdWx0VmFsdWU6W10sbm9Vcmw6dHJ1ZX0sImFyZWFzIjp7dHlwZToic3RyaW5nW10iLGRlZmF1bHRWYWx1ZTpudWxsLG5vVXJsOnRydWV9LCJvbkluaXQiOnt0eXBlOiJjb2RlIixkZWZhdWx0VmFsdWU6dW5kZWZpbmVkLG5vVXJsOnRydWV9LCJ1aWRQcmVmaXgiOnt0eXBlOiJzdHJpbmciLGRlZmF1bHRWYWx1ZToiX18iLG5vVXJsOnRydWV9LCJpZ25vcmVVcmxQYXJhbXMiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2Usbm9Vcmw6dHJ1ZX0sIndlaW5yZVNlcnZlciI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOiIiLG5vVXJsOnRydWV9LCJ3ZWlucmVJZCI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOiIifSwicHJlbG9hZCI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOiJhdXRvIn0sInJvb3RDb21wb25lbnQiOnt0eXBlOiJzdHJpbmciLGRlZmF1bHRWYWx1ZToiIixub1VybDp0cnVlfSwieHgtcm9vdENvbXBvbmVudE5vZGUiOnt0eXBlOiJzdHJpbmciLGRlZmF1bHRWYWx1ZToiIixub1VybDp0cnVlfSwiYXBwbGljYXRpb24iOnt0eXBlOiJzdHJpbmciLGRlZmF1bHRWYWx1ZToiIn0sImFwcENhY2hlQnVzdGVyIjp7dHlwZToic3RyaW5nW10iLGRlZmF1bHRWYWx1ZTpbXX0sInh4LWFwcENhY2hlQnVzdGVyTW9kZSI6e3R5cGU6InN0cmluZyIsZGVmYXVsdFZhbHVlOiJzeW5jIn0sInh4LWRpc2FibGVDdXN0b21pemluZyI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpmYWxzZSxub1VybDp0cnVlfSwieHgtbG9hZEFsbE1vZGUiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2Usbm9Vcmw6dHJ1ZX0sInh4LXRlc3QtbW9iaWxlIjp7dHlwZToiYm9vbGVhbiIsZGVmYXVsdFZhbHVlOmZhbHNlfSwieHgtcHJlbG9hZExpYkNzcyI6e3R5cGU6InN0cmluZ1tdIixkZWZhdWx0VmFsdWU6W119LCJ4eC1jb21wb25lbnRQcmVsb2FkIjp7dHlwZToic3RyaW5nIixkZWZhdWx0VmFsdWU6IiJ9LCJ4eC1iaW5kaW5nU3ludGF4Ijp7dHlwZToic3RyaW5nIixkZWZhdWx0VmFsdWU6InNpbXBsZSIsbm9Vcmw6dHJ1ZX0sInh4LWRlc2lnbk1vZGUiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2V9LCJ4eC1hY2Nlc3NpYmlsaXR5TW9kZSI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpmYWxzZX0sInh4LXN1cHBvcnRlZExhbmd1YWdlcyI6e3R5cGU6InN0cmluZ1tdIixkZWZhdWx0VmFsdWU6W119LCJ4eC1ib290VGFzayI6e3R5cGU6ImZ1bmN0aW9uIixkZWZhdWx0VmFsdWU6dW5kZWZpbmVkLG5vVXJsOnRydWV9LCJ4eC1zdXBwcmVzc0RlYWN0aXZhdGlvbk9mQ29udHJvbGxlckNvZGUiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2V9LCJ4eC1ub05hdGl2ZVNjcm9sbCI6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHRWYWx1ZTpmYWxzZX0sInN0YXRpc3RpY3MiOnt0eXBlOiJib29sZWFuIixkZWZhdWx0VmFsdWU6ZmFsc2V9fTt2YXIgaD17Inh4LXRlc3QiOiIxLjE1IiwiZmxleEJveFBvbHlmaWxsIjoiMS4xNCIsInNhcE1lVGFiQ29udGFpbmVyIjoiMS4xNCIsInNhcE1lUHJvZ2Vzc0luZGljYXRvciI6IjEuMTQiLCJzYXBNR3Jvd2luZ0xpc3QiOiIxLjE0Iiwic2FwTUxpc3RBc1RhYmxlIjoiMS4xNCIsInNhcE1EaWFsb2dXaXRoUGFkZGluZyI6IjEuMTQifTt0aGlzLm9Gb3JtYXRTZXR0aW5ncz1uZXcgQy5Gb3JtYXRTZXR0aW5ncyh0aGlzKTt2YXIgaT10aGlzO2Z1bmN0aW9uIHMoTixWKXtpZih0eXBlb2YgVj09PSJ1bmRlZmluZWQifHxWPT09bnVsbCl7cmV0dXJufXN3aXRjaChnW05dLnR5cGUpe2Nhc2UiYm9vbGVhbiI6aWYodHlwZW9mIFY9PT0ic3RyaW5nIil7aWYoZ1tOXS5kZWZhdWx0VmFsdWUpe2lbTl09Vi50b0xvd2VyQ2FzZSgpIT0iZmFsc2UifWVsc2V7aVtOXT1WLnRvTG93ZXJDYXNlKCk9PT0idHJ1ZSJ8fFYudG9Mb3dlckNhc2UoKT09PSJ4In19ZWxzZXtpW05dPSEhVn1icmVhaztjYXNlInN0cmluZyI6aVtOXT0iIitWO2JyZWFrO2Nhc2UiY29kZSI6aVtOXT10eXBlb2YgVj09PSJmdW5jdGlvbiI/VjpTdHJpbmcoVik7YnJlYWs7Y2FzZSJmdW5jdGlvbiI6aWYodHlwZW9mIFYhPT0iZnVuY3Rpb24iKXt0aHJvdyBuZXcgRXJyb3IoInVuc3VwcG9ydGVkIHZhbHVlIil9aVtOXT1WO2JyZWFrO2Nhc2Uic3RyaW5nW10iOmlmKHEuaXNBcnJheShWKSl7aVtOXT1WfWVsc2UgaWYodHlwZW9mIFY9PT0ic3RyaW5nIil7aVtOXT1xLm1hcChWLnNwbGl0KC9bICw7XS8pLGZ1bmN0aW9uKCQpe3JldHVybiBxLnRyaW0oJCl9KX1lbHNle3Rocm93IG5ldyBFcnJvcigidW5zdXBwb3J0ZWQgdmFsdWUiKX1icmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiaWxsZWdhbCBzdGF0ZSIpfX1mdW5jdGlvbiBqKFQpe3ZhciB2LHc7dHJ5e3Y9bmV3IFVSSShULHdpbmRvdy5sb2NhdGlvbi5ocmVmKS5ub3JtYWxpemUoKTt3PXYucGF0aCgpO3JldHVybiB3Kyh3LnNsaWNlKC0xKT09PScvJz8nJzonLycpKyJVSTUvIn1jYXRjaChlKXt9fWZvcih2YXIgbiBpbiBnKXtpW25dPWdbbl0uZGVmYXVsdFZhbHVlfXZhciBrPXdpbmRvd1sic2FwLXVpLWNvbmZpZyJdfHx7fTtrLm9uaW5pdD1rLm9uaW5pdHx8a1siZXZ0LW9uaW5pdCJdO2Zvcih2YXIgbiBpbiBnKXtzKG4sa1tuLnRvTG93ZXJDYXNlKCldKX1pZihrLmxpYnMpe2kubW9kdWxlcz1xLm1hcChrLmxpYnMuc3BsaXQoIiwiKSxmdW5jdGlvbigkKXtyZXR1cm4gcS50cmltKCQpKyIubGlicmFyeSJ9KS5jb25jYXQoaS5tb2R1bGVzKX12YXIgUD0iY29tcGF0dmVyc2lvbiI7dmFyIEQ9a1tQXTt2YXIgbD1xLnNhcC5WZXJzaW9uKCIxLjE0Iik7dGhpcy5fY29tcGF0dmVyc2lvbj17fTtmdW5jdGlvbiBfKGUpe3ZhciB2PSFlP0R8fGwudG9TdHJpbmcoKTprW1ArIi0iK2UudG9Mb3dlckNhc2UoKV18fER8fGhbZV18fGwudG9TdHJpbmcoKTt2PXEuc2FwLlZlcnNpb24odi50b0xvd2VyQ2FzZSgpPT09ImVkZ2UiP3NhcC51aS52ZXJzaW9uOnYpO3JldHVybiBxLnNhcC5WZXJzaW9uKHYuZ2V0TWFqb3IoKSx2LmdldE1pbm9yKCkpfXRoaXMuX2NvbXBhdHZlcnNpb24uX2RlZmF1bHQ9XygpO2Zvcih2YXIgbiBpbiBoKXt0aGlzLl9jb21wYXR2ZXJzaW9uW25dPV8obil9aWYoIWkuaWdub3JlVXJsUGFyYW1zKXt2YXIgdT0ic2FwLXVpLSI7dmFyIG09cS5zYXAuZ2V0VXJpUGFyYW1ldGVycygpO2lmKG0ubVBhcmFtc1snc2FwLWxvY2FsZSddfHxtLm1QYXJhbXNbJ3NhcC1sYW5ndWFnZSddKXt2YXIgVj1tLmdldCgnc2FwLWxvY2FsZScpfHxNW20uZ2V0KCdzYXAtbGFuZ3VhZ2UnKS50b1VwcGVyQ2FzZSgpXXx8bS5nZXQoJ3NhcC1sYW5ndWFnZScpO2lmKFY9PT0iIil7aVsnbGFuZ3VhZ2UnXT1nWydsYW5ndWFnZSddLmRlZmF1bHRWYWx1ZX1lbHNle3MoJ2xhbmd1YWdlJyxWKX19aWYobS5tUGFyYW1zWydzYXAtYWNjZXNzaWJpbGl0eSddKXt2YXIgVj1tLmdldCgnc2FwLWFjY2Vzc2liaWxpdHknKTtpZihWPT09IlgifHxWPT09IngiKXtzKCd4eC1hY2Nlc3NpYmlsaXR5TW9kZScsdHJ1ZSl9ZWxzZXtzKCd4eC1hY2Nlc3NpYmlsaXR5TW9kZScsZmFsc2UpfX1pZihtLm1QYXJhbXNbJ3NhcC1ydGwnXSl7dmFyIFY9bS5nZXQoJ3NhcC1ydGwnKTtpZihWPT09IlgifHxWPT09IngiKXtzKCdydGwnLHRydWUpfWVsc2V7cygncnRsJyxmYWxzZSl9fWlmKG0ubVBhcmFtc1snc2FwLXRoZW1lJ10pe3ZhciBWPW0uZ2V0KCdzYXAtdGhlbWUnKTtpZihWPT09IiIpe2lbJ3RoZW1lJ109Z1sndGhlbWUnXS5kZWZhdWx0VmFsdWV9ZWxzZXtzKCd0aGVtZScsVil9fWlmKG0ubVBhcmFtc1snc2FwLXN0YXRpc3RpY3MnXSl7dmFyIFY9bS5nZXQoJ3NhcC1zdGF0aXN0aWNzJyk7cygnc3RhdGlzdGljcycsVil9Zm9yKHZhciBuIGluIGcpe2lmKGdbbl0ubm9Vcmwpe2NvbnRpbnVlfXZhciBWPW0uZ2V0KHUrbik7aWYoVj09PSIiKXtpW25dPWdbbl0uZGVmYXVsdFZhbHVlfWVsc2V7cyhuLFYpfX19dGhpcy5kZXJpdmVkUlRMPUwuX2ltcGxpZXNSVEwoaS5sYW5ndWFnZSk7dmFyIHQ9aS50aGVtZTt2YXIgVDt2YXIgST10LmluZGV4T2YoIkAiKTtpZihJPj0wKXtUPWoodC5zbGljZShJKzEpKTtpZihUKXtpLnRoZW1lPXQuc2xpY2UoMCxJKTtpLnRoZW1lUm9vdD1UfWVsc2V7aS50aGVtZT0oay50aGVtZSYmay50aGVtZSE9PXQpP2sudGhlbWU6ImJhc2UiO0k9LTF9fWkudGhlbWU9dGhpcy5fbm9ybWFsaXplVGhlbWUoaS50aGVtZSxUKTt2YXIgcD0iLGFyLGJnLGNhLGNzLGRhLGRlLGVsLGVuLGVzLGV0LGZpLGZyLGhpLGhyLGh1LGl0LGl3LGphLGtvLGx0LGx2LG5sLG5vLHBsLHB0LHJvLHJ1LHNoLHNrLHNsLHN2LHRoLHRyLHVrLHZpLHpoX0NOLHpoX1RXIi5zcGxpdCgvLC8pO2lmKHAubGVuZ3RoPT09MSYmcFswXS5zbGljZSgwLDEpPT09J0AnKXtwPXVuZGVmaW5lZH1pWydsYW5ndWFnZXNEZWxpdmVyZWRXaXRoQ29yZSddPXA7dmFyIHI9aVsneHgtc3VwcG9ydGVkTGFuZ3VhZ2VzJ107aWYoci5sZW5ndGg9PT0wfHwoci5sZW5ndGg9PT0xJiZyWzBdPT09JyonKSl7cj1bXX1lbHNlIGlmKHIubGVuZ3RoPT09MSYmclswXT09PSdkZWZhdWx0Jyl7cj1wfHxbXX1pWyd4eC1zdXBwb3J0ZWRMYW5ndWFnZXMnXT1yO2Zvcih2YXIgbiBpbiBnKXtpZihpW25dIT09Z1tuXS5kZWZhdWx0VmFsdWUpe3Euc2FwLmxvZy5pbmZvKCIgICIrbisiID0gIitpW25dKX19fSxnZXRWZXJzaW9uOmZ1bmN0aW9uKCl7aWYodGhpcy5fdmVyc2lvbil7cmV0dXJuIHRoaXMuX3ZlcnNpb259dGhpcy5fdmVyc2lvbj1uZXcgcS5zYXAuVmVyc2lvbihzYXAudWkudmVyc2lvbik7cmV0dXJuIHRoaXMuX3ZlcnNpb259LGdldENvbXBhdGliaWxpdHlWZXJzaW9uOmZ1bmN0aW9uKGYpe2lmKHR5cGVvZihmKT09PSJzdHJpbmciJiZ0aGlzLl9jb21wYXR2ZXJzaW9uW2ZdKXtyZXR1cm4gdGhpcy5fY29tcGF0dmVyc2lvbltmXX1yZXR1cm4gdGhpcy5fY29tcGF0dmVyc2lvbi5fZGVmYXVsdH0sZ2V0VGhlbWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aGVtZX0sX3NldFRoZW1lOmZ1bmN0aW9uKHQpe3RoaXMudGhlbWU9dDtyZXR1cm4gdGhpc30sX25vcm1hbGl6ZVRoZW1lOmZ1bmN0aW9uKHQsVCl7aWYodCYmVD09bnVsbCYmdC5tYXRjaCgvXnNhcF9jb3JidSQvaSkpcmV0dXJuInNhcF9nb2xkcmVmbGVjdGlvbiI7cmV0dXJuIHR9LGdldExhbmd1YWdlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGFuZ3VhZ2V9LHNldExhbmd1YWdlOmZ1bmN0aW9uKGwpe2QodHlwZW9mIGw9PT0ic3RyaW5nIiYmbCwic0xhbmd1YWdlIG11c3QgYmUgYSBCQ1A0NyBsYW5ndWFnZSB0YWcgb3IgSmF2YSBMb2NhbGUgaWQgb3IgbnVsbCIpO3ZhciBvPXRoaXMuZ2V0UlRMKCksbTtpZihsIT10aGlzLmxhbmd1YWdlKXttPXRoaXMuX2NvbGxlY3QoKTt0aGlzLmxhbmd1YWdlPW0ubGFuZ3VhZ2U9bDt0aGlzLmRlcml2ZWRSVEw9TC5faW1wbGllc1JUTChsKTtpZihvIT10aGlzLmdldFJUTCgpKXttLnJ0bD10aGlzLmdldFJUTCgpfXRoaXMuX2VuZENvbGxlY3QoKX1yZXR1cm4gdGhpc30sZ2V0TG9jYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBMKHRoaXMubGFuZ3VhZ2UpfSxnZXRGb3JtYXRMb2NhbGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5mb3JtYXRMb2NhbGV8fHRoaXMubGFuZ3VhZ2V9LHNldEZvcm1hdExvY2FsZTpmdW5jdGlvbihmKXtkKGY9PT1udWxsfHx0eXBlb2YgZj09PSJzdHJpbmciJiZmLCJzRm9ybWF0TG9jYWxlIG11c3QgYmUgYSBCQ1A0NyBsYW5ndWFnZSB0YWcgb3IgSmF2YSBMb2NhbGUgaWQgb3IgbnVsbCIpO3ZhciBtO2lmKGYhPXRoaXMuZm9ybWF0TG9jYWxlKXttPXRoaXMuX2NvbGxlY3QoKTt0aGlzLmZvcm1hdExvY2FsZT1tLmZvcm1hdExvY2FsZT1mO3RoaXMuX2VuZENvbGxlY3QoKX1yZXR1cm4gdGhpc30sZ2V0TGFuZ3VhZ2VzRGVsaXZlcmVkV2l0aENvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1sibGFuZ3VhZ2VzRGVsaXZlcmVkV2l0aENvcmUiXX0sZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbInh4LXN1cHBvcnRlZExhbmd1YWdlcyJdfSxnZXRBY2Nlc3NpYmlsaXR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYWNjZXNzaWJpbGl0eX0sZ2V0QW5pbWF0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYW5pbWF0aW9ufSxnZXRSVEw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ydGw9PT1udWxsP3RoaXMuZGVyaXZlZFJUTDp0aGlzLnJ0bH0sc2V0UlRMOmZ1bmN0aW9uKHIpe2Qocj09PW51bGx8fHR5cGVvZiByPT09ImJvb2xlYW4iLCJiUlRMIG11c3QgYmUgbnVsbCBvciBhIGJvb2xlYW4iKTt2YXIgbTtpZihyIT10aGlzLnJ0bCl7bT10aGlzLl9jb2xsZWN0KCk7dGhpcy5ydGw9bS5ydGw9dGhpcy5nZXRSVEwoKTt0aGlzLl9lbmRDb2xsZWN0KCl9cmV0dXJuIHRoaXN9LGdldERlYnVnOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGVidWd9LGdldEluc3BlY3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbnNwZWN0fSxnZXRPcmlnaW5JbmZvOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3JpZ2luSW5mb30sZ2V0Tm9EdXBsaWNhdGVJZHM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub0R1cGxpY2F0ZUlkc30sZ2V0VHJhY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFjZX0sZ2V0VUlEUHJlZml4OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudWlkUHJlZml4fSxnZXREZXNpZ25Nb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbInh4LWRlc2lnbk1vZGUiXX0sZ2V0U3VwcHJlc3NEZWFjdGl2YXRpb25PZkNvbnRyb2xsZXJDb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbInh4LXN1cHByZXNzRGVhY3RpdmF0aW9uT2ZDb250cm9sbGVyQ29kZSJdfSxnZXRXZWlucmVTZXJ2ZXI6ZnVuY3Rpb24oKXt2YXIgdz10aGlzLndlaW5yZVNlcnZlcjtpZighdyl7dz13aW5kb3cubG9jYXRpb24ucHJvdG9jb2wrIi8vIit3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUrIjoiO3crPShwYXJzZUludCh3aW5kb3cubG9jYXRpb24ucG9ydCwxMCl8fDgwODApKzF9cmV0dXJuIHd9LGdldFdlaW5yZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMud2VpbnJlSWR9LGdldEFwcGxpY2F0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXBwbGljYXRpb259LGdldFJvb3RDb21wb25lbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yb290Q29tcG9uZW50fSxnZXRBcHBDYWNoZUJ1c3RlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFwcENhY2hlQnVzdGVyfSxnZXRBcHBDYWNoZUJ1c3Rlck1vZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1sieHgtYXBwQ2FjaGVCdXN0ZXJNb2RlIl19LGdldERpc2FibGVDdXN0b21pemluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzWyJ4eC1kaXNhYmxlQ3VzdG9taXppbmciXX0sZ2V0UHJlbG9hZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnByZWxvYWR9LGdldENvbXBvbmVudFByZWxvYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1sneHgtY29tcG9uZW50UHJlbG9hZCddfHx0aGlzLnByZWxvYWR9LGdldEZvcm1hdFNldHRpbmdzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub0Zvcm1hdFNldHRpbmdzfSxfY29sbGVjdDpmdW5jdGlvbigpe3ZhciBtPXRoaXMubUNoYW5nZXN8fCh0aGlzLm1DaGFuZ2VzPXtfX2NvdW50OjB9KTttLl9fY291bnQrKztyZXR1cm4gbX0sX2VuZENvbGxlY3Q6ZnVuY3Rpb24oKXt2YXIgbT10aGlzLm1DaGFuZ2VzO2lmKG0mJigtLW0uX19jb3VudCk9PT0wKXtkZWxldGUgbS5fX2NvdW50O3RoaXMuX29Db3JlJiZ0aGlzLl9vQ29yZS5maXJlTG9jYWxpemF0aW9uQ2hhbmdlZChtKTtkZWxldGUgdGhpcy5tQ2hhbmdlc319LGdldFN0YXRpc3RpY3M6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0aXN0aWNzfHx3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oInNhcC11aS1zdGF0aXN0aWNzIik9PSJYIn0sZ2V0Tm9OYXRpdmVTY3JvbGw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1sieHgtbm9OYXRpdmVTY3JvbGwiXX19KTt2YXIgTT17IlpIIjoiemgtSGFucyIsIlpGIjoiemgtSGFudCIsIjFRIjoiZW4tVVMteC1zYXB0cmMiLCIyUSI6ImVuLVVTLXgtc2FwcHNkIn07dmFyIGE9eyIiOntwYXR0ZXJuOm51bGx9LCIxIjp7cGF0dGVybjoiZGQuTU0ueXl5eSJ9LCIyIjp7cGF0dGVybjoiTU0vZGQveXl5eSJ9LCIzIjp7cGF0dGVybjoiTU0tZGQteXl5eSJ9LCI0Ijp7cGF0dGVybjoieXl5eS5NTS5kZCJ9LCI1Ijp7cGF0dGVybjoieXl5eS9NTS9kZCJ9LCI2Ijp7cGF0dGVybjoieXl5eS1NTS1kZCJ9LCI3Ijp7cGF0dGVybjoiR3l5Lk1NLmRkIixpZ25vcmU6dHJ1ZX0sIjgiOntwYXR0ZXJuOiJHeXkvTU0vZGQiLGlnbm9yZTp0cnVlfSwiOSI6e3BhdHRlcm46Ikd5eS1NTS1kZCIsaWdub3JlOnRydWV9LCJBIjp7cGF0dGVybjoieXl5eS9NTS9kZCIsaWdub3JlOnRydWV9LCJCIjp7cGF0dGVybjoieXl5eS9NTS9kZCIsaWdub3JlOnRydWV9LCJDIjp7cGF0dGVybjoieXl5eS9NTS9kZCIsaWdub3JlOnRydWV9fTt2YXIgYj17IiI6eyJzaG9ydCI6bnVsbCxtZWRpdW06bnVsbCxkYXlQZXJpb2RzOm51bGx9LCIwIjp7InNob3J0IjoiSEg6bW0iLG1lZGl1bToiSEg6bW06c3MiLGRheVBlcmlvZHM6bnVsbH0sIjEiOnsic2hvcnQiOiJoaDptbSBhIixtZWRpdW06ImhoOm1tOnNzIGEiLGRheVBlcmlvZHM6WyJBTSIsIlBNIl19LCIyIjp7InNob3J0IjoiaGg6bW0gYSIsbWVkaXVtOiJoaDptbTpzcyBhIixkYXlQZXJpb2RzOlsiYW0iLCJwbSJdfSwiMyI6eyJzaG9ydCI6IktLOm1tIGEiLG1lZGl1bToiS0s6bW06c3MgYSIsZGF5UGVyaW9kczpbIkFNIiwiUE0iXX0sIjQiOnsic2hvcnQiOiJLSzptbSBhIixtZWRpdW06IktLOm1tOnNzIGEiLGRheVBlcmlvZHM6WyJhbSIsInBtIl19fTt2YXIgYz17IiI6e2dyb3VwaW5nU2VwYXJhdG9yOm51bGwsZGVjaW1hbFNlcGFyYXRvcjpudWxsfSwiICI6e2dyb3VwaW5nU2VwYXJhdG9yOiIuIixkZWNpbWFsU2VwYXJhdG9yOiIsIn0sIlgiOntncm91cGluZ1NlcGFyYXRvcjoiLCIsZGVjaW1hbFNlcGFyYXRvcjoiLiJ9LCJZIjp7Z3JvdXBpbmdTZXBhcmF0b3I6IiAiLGRlY2ltYWxTZXBhcmF0b3I6IiwifX07ZnVuY3Rpb24gZChlLG0pe2lmKCFlKXt0aHJvdyBuZXcgRXJyb3IobSl9fUIuZXh0ZW5kKCJzYXAudWkuY29yZS5Db25maWd1cmF0aW9uLkZvcm1hdFNldHRpbmdzIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obyl7dGhpcy5vQ29uZmlndXJhdGlvbj1vO3RoaXMubVNldHRpbmdzPXt9O3RoaXMuc0xlZ2FjeURhdGVGb3JtYXQ9dW5kZWZpbmVkO3RoaXMuc0xlZ2FjeVRpbWVGb3JtYXQ9dW5kZWZpbmVkO3RoaXMuc0xlZ2FjeU51bWJlckZvcm1hdFN5bWJvbFNldD11bmRlZmluZWR9LGdldEZvcm1hdExvY2FsZTpmdW5jdGlvbigpe2Z1bmN0aW9uIGYodCl7dmFyIGw9dC5vQ29uZmlndXJhdGlvbi5sYW5ndWFnZTtpZighcS5pc0VtcHR5T2JqZWN0KHQubVNldHRpbmdzKSl7aWYobC5pbmRleE9mKCIteC0iKTwwKXtsPWwrIi14LXNhcHVmbXQifWVsc2UgaWYobC5pbmRleE9mKCItc2FwdWZtdCIpPD1sLmluZGV4T2YoIi14LSIpKXtsPWwrIi1zYXB1Zm10In19cmV0dXJuIGx9cmV0dXJuIG5ldyBMKHRoaXMub0NvbmZpZ3VyYXRpb24uZm9ybWF0TG9jYWxlfHxmKHRoaXMpKX0sX3NldDpmdW5jdGlvbihrLHYpe3ZhciBvPXRoaXMubVNldHRpbmdzW2tdO2lmKHYhPW51bGwpe3RoaXMubVNldHRpbmdzW2tdPXZ9ZWxzZXtkZWxldGUgdGhpcy5tU2V0dGluZ3Nba119aWYoKG89PW51bGwhPXY9PW51bGwpfHwhcS5zYXAuZXF1YWwobyx2KSl7dmFyIG09dGhpcy5vQ29uZmlndXJhdGlvbi5fY29sbGVjdCgpO21ba109djt0aGlzLm9Db25maWd1cmF0aW9uLl9lbmRDb2xsZWN0KCl9fSxnZXREYXRlUGF0dGVybjpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5tU2V0dGluZ3NbImRhdGVGb3JtYXQtIitzXX0sc2V0RGF0ZVBhdHRlcm46ZnVuY3Rpb24ocyxwKXtkKHM9PSJzaG9ydCJ8fHM9PSJtZWRpdW0ifHxzPT0ibG9uZyJ8fHM9PSJmdWxsIiwic1N0eWxlIG11c3QgYmUgc2hvcnQsIG1lZGl1bSwgbG9uZyBvciBmdWxsIik7dGhpcy5fc2V0KCJkYXRlRm9ybWF0LSIrcyxwKTtyZXR1cm4gdGhpc30sZ2V0VGltZVBhdHRlcm46ZnVuY3Rpb24ocyl7cmV0dXJuIHRoaXMubVNldHRpbmdzWyJ0aW1lRm9ybWF0LSIrc119LHNldFRpbWVQYXR0ZXJuOmZ1bmN0aW9uKHMscCl7ZChzPT0ic2hvcnQifHxzPT0ibWVkaXVtInx8cz09ImxvbmcifHxzPT0iZnVsbCIsInNTdHlsZSBtdXN0IGJlIHNob3J0LCBtZWRpdW0sIGxvbmcgb3IgZnVsbCIpO3RoaXMuX3NldCgidGltZUZvcm1hdC0iK3MscCk7cmV0dXJuIHRoaXN9LGdldE51bWJlclN5bWJvbDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tU2V0dGluZ3NbInN5bWJvbHMtbGF0bi0iK3RdfSxzZXROdW1iZXJTeW1ib2w6ZnVuY3Rpb24odCxzKXtkKHQ9PSJkZWNpbWFsInx8dD09Imdyb3VwInx8dD09InBsdXNTaWduInx8dD09Im1pbnVzU2lnbiIsInNUeXBlIG11c3QgYmUgZGVjaW1hbCwgZ3JvdXAsIHBsdXNTaWduIG9yIG1pbnVzU2lnbiIpO3RoaXMuX3NldCgic3ltYm9scy1sYXRuLSIrdCxzKTtyZXR1cm4gdGhpc30sX3NldERheVBlcmlvZHM6ZnVuY3Rpb24odyx0KXt0aGlzLl9zZXQoImRheVBlcmlvZHMtZm9ybWF0LSIrdyx0KTtyZXR1cm4gdGhpc30sZ2V0TGVnYWN5RGF0ZUZvcm1hdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNMZWdhY3lEYXRlRm9ybWF0fHx1bmRlZmluZWR9LHNldExlZ2FjeURhdGVGb3JtYXQ6ZnVuY3Rpb24oZil7Zj1mP1N0cmluZyhmKS50b1VwcGVyQ2FzZSgpOiIiO2QoIWZ8fGEuaGFzT3duUHJvcGVydHkoZiksInNGb3JtYXRJZCBtdXN0IGJlIG9uZSBvZiBbJzEnLCcyJywnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJ0EnLCdCJywnQyddIG9yIGVtcHR5Iik7aWYoYVtmXS5pZ25vcmUpe3Euc2FwLmxvZy53YXJuaW5nKCJUaGUgQUJBUCBkYXRlIGZvcm1hdCAnIitmKyInICgiK2FbZl0ucGF0dGVybisiKSBpcyBub3Qgc3VwcG9ydGVkIHlldC4gRmFsbGluZyBiYWNrIHRvIGxvY2FsZSBzcGVjaWZpYyBkYXRlIGZvcm1hdHMuIik7Zj0iIn12YXIgbT10aGlzLm9Db25maWd1cmF0aW9uLl9jb2xsZWN0KCk7dGhpcy5zTGVnYWN5RGF0ZUZvcm1hdD1tLmxlZ2FjeURhdGVGb3JtYXQ9Zjt0aGlzLnNldERhdGVQYXR0ZXJuKCJzaG9ydCIsYVtmXS5wYXR0ZXJuKTt0aGlzLnNldERhdGVQYXR0ZXJuKCJtZWRpdW0iLGFbZl0ucGF0dGVybik7dGhpcy5vQ29uZmlndXJhdGlvbi5fZW5kQ29sbGVjdCgpO3JldHVybiB0aGlzfSxnZXRMZWdhY3lUaW1lRm9ybWF0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0xlZ2FjeVRpbWVGb3JtYXR8fHVuZGVmaW5lZH0sc2V0TGVnYWN5VGltZUZvcm1hdDpmdW5jdGlvbihmKXtkKCFmfHxiLmhhc093blByb3BlcnR5KGYpLCJzRm9ybWF0SWQgbXVzdCBiZSBvbmUgb2YgWycwJywnMScsJzInLCczJywnNCddIG9yIGVtcHR5Iik7dmFyIG09dGhpcy5vQ29uZmlndXJhdGlvbi5fY29sbGVjdCgpO3RoaXMuc0xlZ2FjeVRpbWVGb3JtYXQ9bS5sZWdhY3lUaW1lRm9ybWF0PWY9Znx8IiI7dGhpcy5zZXRUaW1lUGF0dGVybigic2hvcnQiLGJbZl1bInNob3J0Il0pO3RoaXMuc2V0VGltZVBhdHRlcm4oIm1lZGl1bSIsYltmXVsibWVkaXVtIl0pO3RoaXMuX3NldERheVBlcmlvZHMoImFiYnJldmlhdGVkIixiW2ZdLmRheVBlcmlvZHMpO3RoaXMub0NvbmZpZ3VyYXRpb24uX2VuZENvbGxlY3QoKTtyZXR1cm4gdGhpc30sZ2V0TGVnYWN5TnVtYmVyRm9ybWF0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0xlZ2FjeU51bWJlckZvcm1hdHx8dW5kZWZpbmVkfSxzZXRMZWdhY3lOdW1iZXJGb3JtYXQ6ZnVuY3Rpb24oZil7Zj1mP2YudG9VcHBlckNhc2UoKToiIjtkKCFmfHxjLmhhc093blByb3BlcnR5KGYpLCJzRm9ybWF0SWQgbXVzdCBiZSBvbmUgb2YgWycgJywnWCcsJ1knXSBvciBlbXB0eSIpO3ZhciBtPXRoaXMub0NvbmZpZ3VyYXRpb24uX2NvbGxlY3QoKTt0aGlzLnNMZWdhY3lOdW1iZXJGb3JtYXQ9bS5sZWdhY3lOdW1iZXJGb3JtYXQ9Zjt0aGlzLnNldE51bWJlclN5bWJvbCgiZ3JvdXAiLGNbZl0uZ3JvdXBpbmdTZXBhcmF0b3IpO3RoaXMuc2V0TnVtYmVyU3ltYm9sKCJkZWNpbWFsIixjW2ZdLmRlY2ltYWxTZXBhcmF0b3IpO3RoaXMub0NvbmZpZ3VyYXRpb24uX2VuZENvbGxlY3QoKX0sZ2V0Q3VzdG9tTG9jYWxlRGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1TZXR0aW5nc319KTtyZXR1cm4gQ30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkVsZW1lbnRNZXRhZGF0YScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkVsZW1lbnRNZXRhZGF0YScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0VsZW1lbnRNZXRhZGF0YSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL01hbmFnZWRPYmplY3RNZXRhZGF0YSddLGZ1bmN0aW9uKHEsTSl7InVzZSBzdHJpY3QiO3ZhciBFPWZ1bmN0aW9uKGMsQyl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O0UucHJvdG90eXBlPXEuc2FwLm5ld09iamVjdChNLnByb3RvdHlwZSk7RS51aWQ9TS51aWQ7RS5wcm90b3R5cGUuZ2V0RWxlbWVudE5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc0NsYXNzTmFtZX07RS5wcm90b3R5cGUuZ2V0UmVuZGVyZXJOYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NSZW5kZXJlck5hbWV9O0UucHJvdG90eXBlLmdldFJlbmRlcmVyPWZ1bmN0aW9uKCl7dmFyIHI9dGhpcy5nZXRSZW5kZXJlck5hbWUoKTtpZighcil7cmV0dXJufXZhciBSPXEuc2FwLmdldE9iamVjdChyKTtpZihSKXtyZXR1cm4gUn1xLnNhcC5yZXF1aXJlKHIpO3JldHVybiBxLnNhcC5nZXRPYmplY3Qocil9O0UucHJvdG90eXBlLmFwcGx5U2V0dGluZ3M9ZnVuY3Rpb24oYyl7dmFyIHM9Yy5tZXRhZGF0YTt0aGlzLl9zVmlzaWJpbGl0eT1zWyJ2aXNpYmlsaXR5Il18fCJwdWJsaWMiO3ZhciByPWMuaGFzT3duUHJvcGVydHkoInJlbmRlcmVyIik/KGMucmVuZGVyZXJ8fCIiKTp1bmRlZmluZWQ7ZGVsZXRlIGMucmVuZGVyZXI7TS5wcm90b3R5cGUuYXBwbHlTZXR0aW5ncy5jYWxsKHRoaXMsYyk7dGhpcy5fc1JlbmRlcmVyTmFtZT10aGlzLmdldE5hbWUoKSsiUmVuZGVyZXIiO2lmKHR5cGVvZiByIT09InVuZGVmaW5lZCIpe2lmKHR5cGVvZiByPT09InN0cmluZyIpe3RoaXMuX3NSZW5kZXJlck5hbWU9cnx8dW5kZWZpbmVkO3JldHVybn1pZih0eXBlb2Ygcj09PSJmdW5jdGlvbiIpe3I9e3JlbmRlcjpyfX12YXIgcD10aGlzLmdldFBhcmVudCgpO3ZhciBiO2lmKHAmJnAgaW5zdGFuY2VvZiBFKXtiPXAuZ2V0UmVuZGVyZXIoKX1pZighYil7cS5zYXAucmVxdWlyZSgic2FwLnVpLmNvcmUuUmVuZGVyZXIiKTtiPXNhcC51aS5jb3JlLlJlbmRlcmVyfXZhciBSPXEuc2FwLm5ld09iamVjdChiKTtxLmV4dGVuZChSLHIpO3Euc2FwLnNldE9iamVjdCh0aGlzLmdldFJlbmRlcmVyTmFtZSgpLFIpfX07RS5wcm90b3R5cGUuYWZ0ZXJBcHBseVNldHRpbmdzPWZ1bmN0aW9uKCl7TS5wcm90b3R5cGUuYWZ0ZXJBcHBseVNldHRpbmdzLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnJlZ2lzdGVyJiZ0aGlzLnJlZ2lzdGVyKHRoaXMpfTtFLnByb3RvdHlwZS5pc0hpZGRlbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zVmlzaWJpbGl0eT09PSJoaWRkZW4ifTtyZXR1cm4gRX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkV2ZW50QnVzJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuRXZlbnRCdXMnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9FdmVudEJ1cyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInXSxmdW5jdGlvbihxLEUpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1zYXAudWkuYmFzZS5PYmplY3QuZXh0ZW5kKCJzYXAudWkuY29yZS5FdmVudEJ1cyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7c2FwLnVpLmJhc2UuT2JqZWN0LmFwcGx5KHRoaXMpO3RoaXMuX21DaGFubmVscz17fTt0aGlzLl9kZWZhdWx0Q2hhbm5lbD1uZXcgRSgpfX0pO2EucHJvdG90eXBlLnN1YnNjcmliZT1mdW5jdGlvbihjLGUsZixsKXtpZih0eXBlb2YoZSk9PT0iZnVuY3Rpb24iKXtsPWY7Zj1lO2U9YztjPW51bGx9dmFyIEM9Yih0aGlzLGMpO0MuYXR0YWNoRXZlbnQoZSxmLGwpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS51bnN1YnNjcmliZT1mdW5jdGlvbihjLGUsZixsKXtpZih0eXBlb2YoZSk9PT0iZnVuY3Rpb24iKXtsPWY7Zj1lO2U9YztjPW51bGx9dmFyIEM9Zyh0aGlzLGMpO2lmKCFDKXtyZXR1cm4gdGhpc31DLmRldGFjaEV2ZW50KGUsZixsKTtpZihDIT10aGlzLl9kZWZhdWx0Q2hhbm5lbCl7dmFyIG09RS5nZXRFdmVudExpc3QoQyk7dmFyIGk9dHJ1ZTtmb3IodmFyIEkgaW4gbSl7aWYoQy5oYXNMaXN0ZW5lcnMoSSkpe2k9ZmFsc2U7YnJlYWt9fWlmKGkpe2RlbGV0ZSB0aGlzLl9tQ2hhbm5lbHNbY119fXJldHVybiB0aGlzfTthLnByb3RvdHlwZS5wdWJsaXNoPWZ1bmN0aW9uKGMsZSxkKXtpZihhcmd1bWVudHMubGVuZ3RoPT0xKXtkPW51bGw7ZT1jO2M9bnVsbH1lbHNlIGlmKGFyZ3VtZW50cy5sZW5ndGg9PTIpe2lmKHR5cGVvZihlKSE9InN0cmluZyIpe2Q9ZTtlPWM7Yz1udWxsfX1kPWQ/ZDp7fTt2YXIgQz1nKHRoaXMsYyk7aWYoIUMpe3JldHVybn12YXIgZj1FLmdldEV2ZW50TGlzdChDKVtlXTtpZihmJiZxLmlzQXJyYXkoZikpe2Y9Zi5zbGljZSgpO3ZhciBJO2Zvcih2YXIgaT0wLGw9Zi5sZW5ndGg7aTxsO2krKyl7ST1mW2ldO0kuZkZ1bmN0aW9uLmNhbGwoSS5vTGlzdGVuZXJ8fHRoaXMsYyxlLGQpfX19O2EucHJvdG90eXBlLmdldEludGVyZmFjZT1mdW5jdGlvbigpe3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZGVmYXVsdENoYW5uZWwuZGVzdHJveSgpO2Zvcih2YXIgYyBpbiB0aGlzLl9tQ2hhbm5lbHMpe3RoaXMuX21DaGFubmVsc1tjXS5kZXN0cm95KCl9dGhpcy5fbUNoYW5uZWxzPXt9O3NhcC51aS5iYXNlLk9iamVjdC5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2Z1bmN0aW9uIGcoZSxjKXtpZighYyl7cmV0dXJuIGUuX2RlZmF1bHRDaGFubmVsfXJldHVybiBlLl9tQ2hhbm5lbHNbY119O2Z1bmN0aW9uIGIoZSxjKXt2YXIgQz1nKGUsYyk7aWYoIUMmJmMpe2UuX21DaGFubmVsc1tjXT1uZXcgRSgpO0M9ZS5fbUNoYW5uZWxzW2NdfXJldHVybiBDfTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkZvY3VzSGFuZGxlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkZvY3VzSGFuZGxlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0ZvY3VzSGFuZGxlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9EZXZpY2UnLCdzYXAvdWkvR2xvYmFsJywnc2FwL3VpL2Jhc2UvT2JqZWN0JywnanF1ZXJ5LnNhcC5zY3JpcHQnXSxmdW5jdGlvbihxLEQsRyxCKXsidXNlIHN0cmljdCI7dmFyIEY9Qi5leHRlbmQoInNhcC51aS5jb3JlLkZvY3VzSGFuZGxlciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHIsYyl7Qi5hcHBseSh0aGlzKTt0aGlzLm9Db3JlPWM7dGhpcy5vQ3VycmVudD1udWxsO3RoaXMub0xhc3Q9bnVsbDt0aGlzLmFFdmVudFF1ZXVlPVtdO3RoaXMuZkV2ZW50SGFuZGxlcj1xLnByb3h5KHRoaXMub25FdmVudCx0aGlzKTt0aGlzLmZEZXN0cm95SGFuZGxlcj1xLnByb3h5KHRoaXMuZGVzdHJveSx0aGlzKTtpZihyLmFkZEV2ZW50TGlzdGVuZXImJiEhIUQuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3Jlcil7ci5hZGRFdmVudExpc3RlbmVyKCJmb2N1cyIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpO3IuYWRkRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpfWVsc2V7cShyKS5iaW5kKCJhY3RpdmF0ZSIsdGhpcy5mRXZlbnRIYW5kbGVyKTtxKHIpLmJpbmQoImRlYWN0aXZhdGUiLHRoaXMuZkV2ZW50SGFuZGxlcil9cS5zYXAubG9nLmRlYnVnKCJGb2N1c0hhbmRsZXIgc2V0dXAgb24gUm9vdCAiK3IudHlwZSsoci5pZD8iOiAiK3IuaWQ6IiIpLG51bGwsInNhcC51aS5jb3JlLkZvY3VzSGFuZGxlciIpO3Eod2luZG93KS5iaW5kKCJ1bmxvYWQiLHsib1Jvb3RSZWYiOnJ9LHRoaXMuZkRlc3Ryb3lIYW5kbGVyKX19KTtGLnByb3RvdHlwZS5nZXRDdXJyZW50Rm9jdXNlZENvbnRyb2xJZD1mdW5jdGlvbigpe3ZhciBjPW51bGw7dHJ5e3ZhciBhPXEoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCk7aWYoYS5pcygiOmZvY3VzIil8fChELmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXImJkQuYnJvd3Nlci52ZXJzaW9uPT04JiZkb2N1bWVudC5oYXNGb2N1cygpKSl7Yz1hLmNvbnRyb2woKX19Y2F0Y2goZSl7fXJldHVybiBjJiZjLmxlbmd0aD4wP2NbMF0uZ2V0SWQoKTpudWxsfTtGLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKGUpe3ZhciByPWUuZGF0YS5vUm9vdFJlZjtpZihyKXtpZihyLnJlbW92ZUV2ZW50TGlzdGVuZXImJiEhIUQuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3Jlcil7ci5yZW1vdmVFdmVudExpc3RlbmVyKCJmb2N1cyIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpO3IucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpfWVsc2V7cShyKS51bmJpbmQoImFjdGl2YXRlIix0aGlzLmZFdmVudEhhbmRsZXIpO3EocikudW5iaW5kKCJkZWFjdGl2YXRlIix0aGlzLmZFdmVudEhhbmRsZXIpfX1xKHdpbmRvdykudW5iaW5kKCJ1bmxvYWQiLHRoaXMuZkRlc3Ryb3lIYW5kbGVyKTt0aGlzLm9Db3JlPW51bGx9O0YucHJvdG90eXBlLm9uRXZlbnQ9ZnVuY3Rpb24oYil7dmFyIGU9cS5ldmVudC5maXgoYik7cS5zYXAubG9nLmRlYnVnKCJFdmVudCAiK2UudHlwZSsiIHJlYWNoZWQgRm9jdXMgSGFuZGxlciAodGFyZ2V0OiAiK2UudGFyZ2V0KyhlLnRhcmdldD9lLnRhcmdldC5pZDoiIikrIikiLG51bGwsInNhcC51aS5jb3JlLkZvY3VzSGFuZGxlciIpO3ZhciBhPShlLnR5cGU9PSJmb2N1cyJ8fGUudHlwZT09ImZvY3VzaW4ifHxlLnR5cGU9PSJhY3RpdmF0ZSIpPyJmb2N1cyI6ImJsdXIiO3RoaXMuYUV2ZW50UXVldWUucHVzaCh7dHlwZTphLGNvbnRyb2xJZDpnKGUudGFyZ2V0KX0pO2lmKHRoaXMuYUV2ZW50UXVldWUubGVuZ3RoPT0xKXt0aGlzLnByb2Nlc3NFdmVudCgpfX07Ri5wcm90b3R5cGUucHJvY2Vzc0V2ZW50PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5hRXZlbnRRdWV1ZVswXTtpZighZSl7cmV0dXJufWlmKGUudHlwZT09ImZvY3VzIil7dGhpcy5vbmZvY3VzRXZlbnQoZS5jb250cm9sSWQpfWVsc2UgaWYoZS50eXBlPT0iYmx1ciIpe3RoaXMub25ibHVyRXZlbnQoZS5jb250cm9sSWQpfXRoaXMuYUV2ZW50UXVldWUuc2hpZnQoKTtpZih0aGlzLmFFdmVudFF1ZXVlLmxlbmd0aD4wKXt0aGlzLnByb2Nlc3NFdmVudCgpfX07Ri5wcm90b3R5cGUub25mb2N1c0V2ZW50PWZ1bmN0aW9uKGMpe3RoaXMub0N1cnJlbnQ9YztpZighdGhpcy5vTGFzdCl7cmV0dXJufXQodGhpcy5vTGFzdCxjLHRoaXMub0NvcmUpO3RoaXMub0xhc3Q9bnVsbH07Ri5wcm90b3R5cGUub25ibHVyRXZlbnQ9ZnVuY3Rpb24oYyl7aWYoIXRoaXMub0N1cnJlbnQpe3JldHVybn10aGlzLm9MYXN0PWM7dGhpcy5vQ3VycmVudD1udWxsO3Euc2FwLmRlbGF5ZWRDYWxsKDAsdGhpcywiY2hlY2tGb3JMb3N0Rm9jdXMiKX07Ri5wcm90b3R5cGUuY2hlY2tGb3JMb3N0Rm9jdXM9ZnVuY3Rpb24oKXtpZih0aGlzLm9DdXJyZW50PT1udWxsJiZ0aGlzLm9MYXN0IT1udWxsKXt0KHRoaXMub0xhc3QsbnVsbCx0aGlzLm9Db3JlKX10aGlzLm9MYXN0PW51bGx9O3ZhciBnPWZ1bmN0aW9uKGQpe3ZhciBpPXEoZCkuY2xvc2VzdCgiW2RhdGEtc2FwLXVpXSIpLmF0dHIoImlkIik7aWYoaSl7cmV0dXJuIGl9cmV0dXJuIG51bGx9O3ZhciB0PWZ1bmN0aW9uKGMscixDKXt2YXIgbz1jP3NhcC51aS5nZXRDb3JlKCkuYnlJZChjKTpudWxsO2lmKG8pe3ZhciBSPXI/c2FwLnVpLmdldENvcmUoKS5ieUlkKHIpOm51bGw7dmFyIGU9cS5FdmVudCgic2FwZm9jdXNsZWF2ZSIpO2UudGFyZ2V0PW8uZ2V0RG9tUmVmKCk7ZS5yZWxhdGVkQ29udHJvbElkPVI/Ui5nZXRJZCgpOm51bGw7ZS5yZWxhdGVkQ29udHJvbEZvY3VzSW5mbz1SP1IuZ2V0Rm9jdXNJbmZvKCk6bnVsbDt2YXIgYT1vLmdldFVJQXJlYSgpO3ZhciB1PW51bGw7aWYoYSl7dT1DLmdldFVJQXJlYShhLmdldElkKCkpfWVsc2V7dmFyIHA9c2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCk7aWYocS5zYXAuY29udGFpbnNPckVxdWFscyhwLGUudGFyZ2V0KSl7dT1DLmdldFVJQXJlYShwLmlkKX19aWYodSl7dS5faGFuZGxlRXZlbnQoZSl9fX07cmV0dXJuIEZ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5JbnRlcnZhbFRyaWdnZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5JbnRlcnZhbFRyaWdnZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9JbnRlcnZhbFRyaWdnZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0V2ZW50QnVzJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIF89InNhcFVpSW50ZXJ2YWxUcmlnZ2VyLWV2ZW50Ijt2YXIgST1zYXAudWkuYmFzZS5PYmplY3QuZXh0ZW5kKCJzYXAudWkuY29yZS5JbnRlcnZhbFRyaWdnZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihpKXtzYXAudWkuYmFzZS5PYmplY3QuYXBwbHkodGhpcyk7dGhpcy5fb0V2ZW50QnVzPW5ldyBFKCk7dGhpcy5fZGVsYXllZENhbGxJZD1udWxsO3RoaXMuX3RyaWdnZXJQcm94eT1xLnByb3h5KHQsdGhpcyk7dGhpcy5faUludGVydmFsPTA7aWYoaSl7dGhpcy5zZXRJbnRlcnZhbChpKX19fSk7dmFyIHQ9ZnVuY3Rpb24oKXtxLnNhcC5jbGVhckRlbGF5ZWRDYWxsKHRoaXMuX2RlbGF5ZWRDYWxsSWQpO3ZhciBoPXRoaXMuX29FdmVudEJ1cy5fZGVmYXVsdENoYW5uZWwuaGFzTGlzdGVuZXJzKF8pO2lmKHRoaXMuX2lJbnRlcnZhbD4wJiZoKXt0aGlzLl9vRXZlbnRCdXMucHVibGlzaChfKTt0aGlzLl9kZWxheWVkQ2FsbElkPXEuc2FwLmRlbGF5ZWRDYWxsKHRoaXMuX2lJbnRlcnZhbCx0aGlzLHRoaXMuX3RyaWdnZXJQcm94eSl9fTtJLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7c2FwLnVpLmJhc2UuT2JqZWN0LnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtkZWxldGUgdGhpcy5fdHJpZ2dlclByb3h5O3RoaXMuX29FdmVudEJ1cy5kZXN0cm95KCk7ZGVsZXRlIHRoaXMuX29FdmVudEJ1c307SS5wcm90b3R5cGUuc2V0SW50ZXJ2YWw9ZnVuY3Rpb24oaSl7aWYodGhpcy5faUludGVydmFsIT09aSl7dGhpcy5faUludGVydmFsPWk7dGhpcy5fdHJpZ2dlclByb3h5KCl9fTtJLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1mdW5jdGlvbihmLGwpe3RoaXMuX29FdmVudEJ1cy5zdWJzY3JpYmUoXyxmLGwpO3RoaXMuX3RyaWdnZXJQcm94eSgpfTtJLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbihmLGwpe3RoaXMuX29FdmVudEJ1cy51bnN1YnNjcmliZShfLGYsbCl9O0kucHJvdG90eXBlLmdldEludGVyZmFjZT1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtyZXR1cm4gSX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkxvY2FsZURhdGEnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5Mb2NhbGVEYXRhJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvTG9jYWxlRGF0YSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL09iamVjdCcsJy4vQ29uZmlndXJhdGlvbicsJy4vTG9jYWxlJ10sZnVuY3Rpb24ocSxCLEMsTCl7InVzZSBzdHJpY3QiO3ZhciBhPUIuZXh0ZW5kKCJzYXAudWkuY29yZS5Mb2NhbGVEYXRhIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obyl7Qi5hcHBseSh0aGlzKTt0aGlzLm1EYXRhPWcobyl9LF9nZXQ6ZnVuY3Rpb24oayl7cmV0dXJuIHRoaXMubURhdGFba119LGdldE9yaWVudGF0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dldCgib3JpZW50YXRpb24iKX0sZ2V0TGFuZ3VhZ2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dldCgibGFuZ3VhZ2VzIil9LGdldFNjcmlwdHM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2V0KCJzY3JpcHRzIil9LGdldFRlcnJpdG9yaWVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dldCgidGVycml0b3JpZXMiKX0sZ2V0TW9udGhzOmZ1bmN0aW9uKHcpe3JldHVybiB0aGlzLl9nZXQoIm1vbnRocy1mb3JtYXQtIit3KX0sZ2V0TW9udGhzU3RhbmRBbG9uZTpmdW5jdGlvbih3KXtyZXR1cm4gdGhpcy5fZ2V0KCJtb250aHMtc3RhbmRBbG9uZS0iK3cpfSxnZXREYXlzOmZ1bmN0aW9uKHcpe3JldHVybiB0aGlzLl9nZXQoImRheXMtZm9ybWF0LSIrdyl9LGdldERheXNTdGFuZEFsb25lOmZ1bmN0aW9uKHcpe3JldHVybiB0aGlzLl9nZXQoImRheXMtc3RhbmRBbG9uZS0iK3cpfSxnZXRRdWFydGVyczpmdW5jdGlvbih3KXtyZXR1cm4gdGhpcy5fZ2V0KCJxdWFydGVycy1mb3JtYXQtIit3KX0sZ2V0RGF5UGVyaW9kczpmdW5jdGlvbih3KXtyZXR1cm4gdGhpcy5fZ2V0KCJkYXlQZXJpb2RzLWZvcm1hdC0iK3cpfSxnZXREYXRlUGF0dGVybjpmdW5jdGlvbihzKXtyZXR1cm4gdGhpcy5fZ2V0KCJkYXRlRm9ybWF0LSIrcyl9LGdldFRpbWVQYXR0ZXJuOmZ1bmN0aW9uKHMpe3JldHVybiB0aGlzLl9nZXQoInRpbWVGb3JtYXQtIitzKX0sZ2V0RGF0ZVRpbWVQYXR0ZXJuOmZ1bmN0aW9uKHMpe3JldHVybiB0aGlzLl9nZXQoImRhdGVUaW1lRm9ybWF0LSIrcyl9LGdldE51bWJlclN5bWJvbDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZ2V0KCJzeW1ib2xzLWxhdG4tIit0KX0sZ2V0Rmlyc3REYXlPZldlZWs6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2V0KCJ3ZWVrRGF0YS1maXJzdERheSIpfSxnZXRXZWVrZW5kU3RhcnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2V0KCJ3ZWVrRGF0YS13ZWVrZW5kU3RhcnQiKX0sZ2V0V2Vla2VuZEVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9nZXQoIndlZWtEYXRhLXdlZWtlbmRFbmQiKX0sZ2V0SW50ZXJ2YWxQYXR0ZXJuOmZ1bmN0aW9uKGkpe3JldHVybihpJiZ0aGlzLl9nZXQoImludGVydmFsRm9ybWF0LSIraSkpfHx0aGlzLl9nZXQoImludGVydmFsRm9ybWF0RmFsbGJhY2siKX19KTt2YXIgTT17Im9yaWVudGF0aW9uIjoibGVmdC10by1yaWdodCIsImxhbmd1YWdlcyI6e30sInNjcmlwdHMiOnt9LCJ0ZXJyaXRvcmllcyI6e30sImRhdGVGb3JtYXQtZnVsbCI6IkVFRUUsIE1NTU0gZCwgeSIsImRhdGVGb3JtYXQtbG9uZyI6Ik1NTU0gZCwgeSIsImRhdGVGb3JtYXQtbWVkaXVtIjoiTU1NIGQsIHkiLCJkYXRlRm9ybWF0LXNob3J0IjoiTS9kL3l5IiwidGltZUZvcm1hdC1mdWxsIjoiaDptbTpzcyBhIHp6enoiLCJ0aW1lRm9ybWF0LWxvbmciOiJoOm1tOnNzIGEgeiIsInRpbWVGb3JtYXQtbWVkaXVtIjoiaDptbTpzcyBhIiwidGltZUZvcm1hdC1zaG9ydCI6Img6bW0gYSIsImRhdGVUaW1lRm9ybWF0LWZ1bGwiOiJ7MX0gJ2F0JyB7MH0iLCJkYXRlVGltZUZvcm1hdC1sb25nIjoiezF9ICdhdCcgezB9IiwiZGF0ZVRpbWVGb3JtYXQtbWVkaXVtIjoiezF9LCB7MH0iLCJkYXRlVGltZUZvcm1hdC1zaG9ydCI6InsxfSwgezB9IiwibW9udGhzLWZvcm1hdC1hYmJyZXZpYXRlZCI6WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXSwibW9udGhzLWZvcm1hdC13aWRlIjpbIkphbnVhcnkiLCJGZWJydWFyeSIsIk1hcmNoIiwiQXByaWwiLCJNYXkiLCJKdW5lIiwiSnVseSIsIkF1Z3VzdCIsIlNlcHRlbWJlciIsIk9jdG9iZXIiLCJOb3ZlbWJlciIsIkRlY2VtYmVyIl0sIm1vbnRocy1mb3JtYXQtbmFycm93IjpbIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiOSIsIjEwIiwiMTEiLCIxMiJdLCJtb250aHMtc3RhbmRBbG9uZS1hYmJyZXZpYXRlZCI6WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXSwibW9udGhzLXN0YW5kQWxvbmUtd2lkZSI6WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdLCJtb250aHMtc3RhbmRBbG9uZS1uYXJyb3ciOlsiMSIsIjIiLCIzIiwiNCIsIjUiLCI2IiwiNyIsIjgiLCI5IiwiMTAiLCIxMSIsIjEyIl0sImRheXMtZm9ybWF0LWFiYnJldmlhdGVkIjpbIlN1biIsIk1vbiIsIlR1ZSIsIldlZCIsIlRodSIsIkZyaSIsIlNhdCJdLCJkYXlzLWZvcm1hdC13aWRlIjpbIlN1bmRheSIsIk1vbmRheSIsIlR1ZXNkYXkiLCJXZWRuZXNkYXkiLCJUaHVyc2RheSIsIkZyaWRheSIsIlNhdHVyZGF5Il0sImRheXMtZm9ybWF0LW5hcnJvdyI6WyJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIl0sImRheXMtc3RhbmRBbG9uZS1hYmJyZXZpYXRlZCI6WyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSwiZGF5cy1zdGFuZEFsb25lLXdpZGUiOlsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXSwiZGF5cy1zdGFuZEFsb25lLW5hcnJvdyI6WyJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIl0sInF1YXJ0ZXJzLWZvcm1hdC1uYXJyb3ciOlsiMSIsIjIiLCIzIiwiNCJdLCJxdWFydGVycy1mb3JtYXQtYWJicmV2aWF0ZWQiOlsiUTEiLCJRMiIsIlEzIiwiUTQiXSwicXVhcnRlcnMtZm9ybWF0LXdpZGUiOlsiMXN0IHF1YXJ0ZXIiLCIybmQgcXVhcnRlciIsIjNyZCBxdWFydGVyIiwiNHRoIHF1YXJ0ZXIiXSwicXVhcnRlcnMtc3RhbmRBbG9uZS1uYXJyb3ciOlsiMSIsIjIiLCIzIiwiNCJdLCJzeW1ib2xzLWxhdG4tZGVjaW1hbCI6Ii4iLCJzeW1ib2xzLWxhdG4tZ3JvdXAiOiIsIiwic3ltYm9scy1sYXRuLXBsdXNTaWduIjoiKyIsInN5bWJvbHMtbGF0bi1taW51c1NpZ24iOiItIiwiZGF5UGVyaW9kcy1mb3JtYXQtbmFycm93IjpbIkFNIiwiUE0iXSwiZGF5UGVyaW9kcy1mb3JtYXQtd2lkZSI6WyJBTSIsIlBNIl0sImRheVBlcmlvZHMtZm9ybWF0LWFiYnJldmlhdGVkIjpbIkFNIiwiUE0iXSwid2Vla0RhdGEtbWluRGF5cyI6NCwid2Vla0RhdGEtZmlyc3REYXkiOjEsIndlZWtEYXRhLXdlZWtlbmRTdGFydCI6Niwid2Vla0RhdGEtd2Vla2VuZEVuZCI6MCwiaW50ZXJ2YWxGb3JtYXRGYWxsYmFjayI6InswfSDigJMgezF9In07dmFyIGI9eyJpdyI6ImhlIiwiamkiOiJ5aSIsImluIjoiaWQiLCJzaCI6InNyIn07dmFyIGM9KGZ1bmN0aW9uKCl7dmFyIGQ9ImFyLGFyX0FFLGFyX0VHLGFyX1NBLGJnLGJnX0JHLGJyLGNhX0VTLGNzLGNzX0NaLGRhLGRhX0RLLGRlLGRlX0FULGRlX0JFLGRlX0NILGRlX0RFLGRlX0xVLGVsLGVsX0NZLGVsX0dSLGVuLGVuX0FVLGVuX0NBLGVuX0dCLGVuX0hLLGVuX0lFLGVuX0lOLGVuX05aLGVuX1BHLGVuX1NHLGVuX1VTLGVuX1pBLGVzLGVzX0FSLGVzX0JPLGVzX0NMLGVzX0NPLGVzX0VTLGVzX01YLGVzX1BFLGVzX1VZLGVzX1ZFLGV0LGV0X0VFLGZhLGZhX0lSLGZpLGZpX0ZJLGZyLGZyX0JFLGZyX0NBLGZyX0NILGZyX0ZSLGZyX0xVLGhlLGhlX0lMLGhpLGhpX0lOLGhyLGhyX0hSLGh1LGh1X0hVLGlkLGlkX0lELGl0LGl0X0NILGl0X0lULGphLGphX0pQLGtvLGtvX0tSLGx0LGx0X0xULGx2LGx2X0xWLG5iLG5iX05PLG5sLG5sX0JFLG5sX05MLG5uLG5uX05PLHBsLHBsX1BMLHB0LHB0X0JSLHB0X1BULHJvLHJvX1JPLHJ1LHJ1X0taLHJ1X1JVLHJ1X1VBLHNrX1NLLHNsLHNsX1NJLHNyLHN2LHN2X1NFLHRoLHRoX1RILHRyLHRyX0NZLHRyX1RSLHVrLHVrX1VBLHZpLHZpX1ZOLHpoX0NOLHpoX0hLLHpoX1NHLHpoX1RXIi5zcGxpdCgiLCIpLGkscjtpZihkLmxlbmd0aCE9MXx8ZFswXS5pbmRleE9mKCJAIik8MCl7cj17fTtmb3IoaT0wO2k8ZC5sZW5ndGg7aSsrKXtyW2RbaV1dPXRydWV9fXJldHVybiByfSgpKTt2YXIgbD17fTtmdW5jdGlvbiBnKG8pe3ZhciBzPW8uZ2V0TGFuZ3VhZ2UoKXx8IiIsUz1vLmdldFNjcmlwdCgpfHwiIixyPW8uZ2V0UmVnaW9uKCl8fCIiLGQ7ZnVuY3Rpb24gZShpKXt2YXIgRDtpZighbFtpXSYmKCFjfHxjW2ldPT09dHJ1ZSkpe2xbaV09cS5zYXAubG9hZFJlc291cmNlKCJzYXAvdWkvY29yZS9jbGRyLyIraSsiLmpzb24iLHtkYXRhVHlwZToianNvbiIsZmFpbE9uRXJyb3I6ZmFsc2V9KX1yZXR1cm4gbFtpXX1zPShzJiZiW3NdKXx8cztpZihzPT09InpoIiYmIXIpe2lmKFM9PT0iSGFucyIpe3I9IkNOIn1lbHNlIGlmKFM9PT0iSGFudCIpe3I9IlRXIn19dmFyIGk9cysiXyIrcjtpZihzJiZyKXtkPWUoaSl9aWYoIWQmJnMpe2Q9ZShzKX1sW2ldPWR8fE07cmV0dXJuIGxbaV19O2EuZXh0ZW5kKCJzYXAudWkuY29yZS5DdXN0b21Mb2NhbGVEYXRhIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obyl7YS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5tQ3VzdG9tRGF0YT1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRGb3JtYXRTZXR0aW5ncygpLmdldEN1c3RvbUxvY2FsZURhdGEoKX0sX2dldDpmdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5tQ3VzdG9tRGF0YVtpXXx8dGhpcy5tRGF0YVtpXX19KTthLmdldEluc3RhbmNlPWZ1bmN0aW9uKG8pe3JldHVybiBvLmhhc1ByaXZhdGVVc2VTdWJ0YWcoInNhcHVmbXQiKT9uZXcgc2FwLnVpLmNvcmUuQ3VzdG9tTG9jYWxlRGF0YShvKTpuZXcgYShvKX07cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1JlbmRlck1hbmFnZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9JbnRlcmZhY2UnLCdzYXAvdWkvYmFzZS9PYmplY3QnLCdqcXVlcnkuc2FwLmFjdCcsJ2pxdWVyeS5zYXAuZW5jb2RlciddLGZ1bmN0aW9uKHEsSSxCKXsidXNlIHN0cmljdCI7dmFyIGM9WyJyZW5kZXJDb250cm9sIiwid3JpdGUiLCJ3cml0ZUVzY2FwZWQiLCJ0cmFuc2xhdGUiLCJ3cml0ZUFjY2VsZXJhdG9yS2V5Iiwid3JpdGVDb250cm9sRGF0YSIsIndyaXRlRWxlbWVudERhdGEiLCJ3cml0ZUF0dHJpYnV0ZSIsIndyaXRlQXR0cmlidXRlRXNjYXBlZCIsImFkZENsYXNzIiwid3JpdGVDbGFzc2VzIiwiYWRkU3R5bGUiLCJ3cml0ZVN0eWxlcyIsIndyaXRlQWNjZXNzaWJpbGl0eVN0YXRlIiwid3JpdGVJY29uIiwiZ2V0Q29uZmlndXJhdGlvbiIsImdldEhUTUwiXTt2YXIgTj1bInJlbmRlciIsImZsdXNoIiwiZGVzdHJveSJdO3ZhciBSPUIuZXh0ZW5kKCJzYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtCLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLmFCdWZmZXI9W107dGhpcy5hUmVuZGVyZWRDb250cm9scz1bXTt0aGlzLmFTdHlsZVN0YWNrPVt7fV19LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOmMuY29uY2F0KE4pfX0pO1IucHJvdG90eXBlLmdldFJlbmRlcmVySW50ZXJmYWNlPWZ1bmN0aW9uKCl7dmFyIGk9bmV3IEkodGhpcyxjKTt0aGlzLmdldFJlbmRlcmVySW50ZXJmYWNlPXEuc2FwLmdldHRlcihpKTtyZXR1cm4gaX07Ui5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuYUJ1ZmZlcj1bXTt0aGlzLmFSZW5kZXJlZENvbnRyb2xzPVtdO3RoaXMuYVN0eWxlU3RhY2s9W3t9XX07Ui5wcm90b3R5cGUuZ2V0Q29uZmlndXJhdGlvbj1mdW5jdGlvbigpe3JldHVybiBzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKX07Ui5wcm90b3R5cGUuZ2V0UmVuZGVyZXI9ZnVuY3Rpb24oQyl7cmV0dXJuIFIuZ2V0UmVuZGVyZXIoQyl9O1IucHJvdG90eXBlLnJlbmRlckNvbnRyb2w9ZnVuY3Rpb24oQyl7aWYoIUMpe3JldHVybn1pZighdGhpcy5hUmVuZGVyU3RhY2spe3RoaXMuYVJlbmRlclN0YWNrPW5ldyBBcnJheSgpfWlmKHRoaXMuYVJlbmRlclN0YWNrJiZ0aGlzLmFSZW5kZXJTdGFjay5sZW5ndGg+MCl7cS5zYXAubWVhc3VyZS5wYXVzZSh0aGlzLmFSZW5kZXJTdGFja1swXSsiLS0tcmVuZGVyQ29udHJvbCIpfWVsc2UgaWYoQy5nZXRQYXJlbnQoKSYmQy5nZXRQYXJlbnQoKS5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKT09InNhcC51aS5jb3JlLlVJQXJlYSIpe3Euc2FwLm1lYXN1cmUucGF1c2UoQy5nZXRQYXJlbnQoKS5nZXRJZCgpKyItLS1yZXJlbmRlciIpfXRoaXMuYVJlbmRlclN0YWNrLnVuc2hpZnQoQy5nZXRJZCgpKTtxLnNhcC5tZWFzdXJlLnN0YXJ0KEMuZ2V0SWQoKSsiLS0tcmVuZGVyQ29udHJvbCIsIlJlbmRlcmluZyBvZiAiK0MuZ2V0TWV0YWRhdGEoKS5nZXROYW1lKCkpO3ZhciBiPXRoaXMuYUJ1ZmZlci5sZW5ndGg7dmFyIG89e307aWYoQy5hQ3VzdG9tU3R5bGVDbGFzc2VzJiZDLmFDdXN0b21TdHlsZUNsYXNzZXMubGVuZ3RoPjApe28uYUN1c3RvbVN0eWxlQ2xhc3Nlcz1DLmFDdXN0b21TdHlsZUNsYXNzZXN9dGhpcy5hU3R5bGVTdGFjay5wdXNoKG8pO3Euc2FwLm1lYXN1cmUucGF1c2UoQy5nZXRJZCgpKyItLS1yZW5kZXJDb250cm9sIik7dmFyIHI9dGhpcy5nZXRSZW5kZXJlcihDKTtxLnNhcC5tZWFzdXJlLnJlc3VtZShDLmdldElkKCkrIi0tLXJlbmRlckNvbnRyb2wiKTt0aGlzLl9iTG9ja2VkPXRydWU7dHJ5e3ZhciBlPXEuRXZlbnQoIkJlZm9yZVJlbmRlcmluZyIpO2Uuc3JjQ29udHJvbD1DO0MuX2hhbmRsZUV2ZW50KGUpfWZpbmFsbHl7dGhpcy5fYkxvY2tlZD1mYWxzZX12YXIgYT1DLmFCaW5kUGFyYW1ldGVycztpZihhJiZhLmxlbmd0aD4wKXt2YXIgZD1xKEMuZ2V0RG9tUmVmKCkpO2lmKGQmJmRbMF0pe2Zvcih2YXIgaT0wO2k8YS5sZW5ndGg7aSsrKXt2YXIgcD1hW2ldO2QudW5iaW5kKHAuc0V2ZW50VHlwZSxwLmZuUHJveHkpfX19ci5yZW5kZXIodGhpcy5nZXRSZW5kZXJlckludGVyZmFjZSgpLEMpO3RoaXMuYVN0eWxlU3RhY2sucG9wKCk7dGhpcy5hUmVuZGVyZWRDb250cm9scy5wdXNoKEMpO0MuYk91dHB1dD10aGlzLmFCdWZmZXIubGVuZ3RoIT1iO3Euc2FwLm1lYXN1cmUuZW5kKEMuZ2V0SWQoKSsiLS0tcmVuZGVyQ29udHJvbCIpO3RoaXMuYVJlbmRlclN0YWNrLnNoaWZ0KCk7aWYodGhpcy5hUmVuZGVyU3RhY2smJnRoaXMuYVJlbmRlclN0YWNrLmxlbmd0aD4wKXtxLnNhcC5tZWFzdXJlLnJlc3VtZSh0aGlzLmFSZW5kZXJTdGFja1swXSsiLS0tcmVuZGVyQ29udHJvbCIpfWVsc2UgaWYoQy5nZXRQYXJlbnQoKSYmQy5nZXRQYXJlbnQoKS5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKT09InNhcC51aS5jb3JlLlVJQXJlYSIpe3Euc2FwLm1lYXN1cmUucmVzdW1lKEMuZ2V0UGFyZW50KCkuZ2V0SWQoKSsiLS0tcmVyZW5kZXIiKX19O1IucHJvdG90eXBlLmdldEhUTUw9ZnVuY3Rpb24oQyl7dmFyIHQ9dGhpcy5hQnVmZmVyO3ZhciByPXRoaXMuYUJ1ZmZlcj1bXTt0aGlzLnJlbmRlckNvbnRyb2woQyk7dGhpcy5hQnVmZmVyPXQ7cmV0dXJuIHIuam9pbigiIil9OyhmdW5jdGlvbigpe3ZhciBzPWZ1bmN0aW9uKCl7dmFyIEM9c2FwLnVpLmdldENvcmUoKTt2YXIgRj1DLmdldEN1cnJlbnRGb2N1c2VkQ29udHJvbElkKCksbz1udWxsLGE9bnVsbDtpZihGKXt2YXIgYj1DLmdldEVsZW1lbnRCeUlkKEYpO2lmKGIpe289Yi5nZXRGb2N1c0luZm8oKTthPWIuZ2V0Rm9jdXNEb21SZWYoKX19cmV0dXJue2ZvY3VzZWRDb250cm9sSWQ6Rixmb2N1c0luZm86byxmb2N1c0RvbVJlZjphfX07dmFyIGY9ZnVuY3Rpb24ocixhLFMpe2Zvcih2YXIgaT0wLGI9YS5sZW5ndGg7aTxiO2krKyl7dmFyIEM9YVtpXTtpZihDLmJPdXRwdXQpe3IuX2JMb2NrZWQ9dHJ1ZTt0cnl7dmFyIEU9cS5FdmVudCgiQWZ0ZXJSZW5kZXJpbmciKTtFLnNyY0NvbnRyb2w9QztxLnNhcC5tZWFzdXJlLnN0YXJ0KEMuZ2V0SWQoKSsiLS0tQWZ0ZXJSZW5kZXJpbmciLCJBZnRlclJlbmRlcmluZyBvZiAiK0MuZ2V0TWV0YWRhdGEoKS5nZXROYW1lKCkpO0MuX2hhbmRsZUV2ZW50KEUpO3Euc2FwLm1lYXN1cmUuZW5kKEMuZ2V0SWQoKSsiLS0tQWZ0ZXJSZW5kZXJpbmciKX1maW5hbGx5e3IuX2JMb2NrZWQ9ZmFsc2V9fX10cnl7aWYoUyYmUy5mb2N1c2VkQ29udHJvbElkKXt2YXIgRj1zYXAudWkuZ2V0Q29yZSgpLmdldEVsZW1lbnRCeUlkKFMuZm9jdXNlZENvbnRyb2xJZCk7aWYoRiYmRi5nZXRGb2N1c0RvbVJlZigpIT1TLmZvY3VzRG9tUmVmKXtGLmFwcGx5Rm9jdXNJbmZvKFMuZm9jdXNJbmZvKX19fWNhdGNoKGUpe3Euc2FwLmxvZy53YXJuaW5nKCJQcm9ibGVtcyB3aGlsZSByZXN0b3JlIGZvY3VzIGFmdGVyIHJlbmRlcmluZzogIitlLG51bGwscil9Zm9yKHZhciBpPTAsYj1hLmxlbmd0aDtpPGI7aSsrKXt2YXIgQz1hW2ldLGQ9Qy5hQmluZFBhcmFtZXRlcnM7aWYoZCYmZC5sZW5ndGg+MCl7dmFyIEQ9cShDLmdldERvbVJlZigpKTtpZihEJiZEWzBdKXtmb3IodmFyIGo9MDtqPGQubGVuZ3RoO2orKyl7dmFyIHA9ZFtqXTtELmJpbmQocC5zRXZlbnRUeXBlLHAuZm5Qcm94eSl9fX19fTtSLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbih0LGQsdil7aWYodGhpcy5iUmVuZGVyZXJNb2RlKXtxLnNhcC5sb2cuaW5mbygiRmx1c2ggbXVzdCBub3QgYmUgY2FsbGVkIGZyb20gY29udHJvbCByZW5kZXJlcnMuIENhbGwgaWdub3JlZC4iLG51bGwsdGhpcyk7cmV0dXJufWlmKCFkJiYodHlwZW9mIHYhPT0ibnVtYmVyIikmJiF2KXtSLnByZXNlcnZlQ29udGVudCh0KX12YXIgUz1zKCk7dmFyIGg9Ui5wcmVwYXJlSFRNTDUodGhpcy5hQnVmZmVyLmpvaW4oIiIpKTtpZih0aGlzLl9mUHV0SW50b0RvbSl7dGhpcy5fZlB1dEludG9Eb20odCxoKX1lbHNle2Zvcih2YXIgaT0wO2k8dGhpcy5hUmVuZGVyZWRDb250cm9scy5sZW5ndGg7aSsrKXt2YXIgbz10aGlzLmFSZW5kZXJlZENvbnRyb2xzW2ldLmdldERvbVJlZigpO2lmKG8mJiFSLmlzUHJlc2VydmVkQ29udGVudChvKSl7aWYoUi5pc0lubGluZVRlbXBsYXRlKG8pKXtxKG8pLmVtcHR5KCl9ZWxzZXtxKG8pLnJlbW92ZSgpfX19aWYodHlwZW9mIHY9PT0ibnVtYmVyIil7aWYodjw9MCl7cSh0KS5wcmVwZW5kKGgpfWVsc2V7dmFyICQ9cSh0KS5jaGlsZHJlbigpLmVxKHYtMSk7aWYoJC5sZW5ndGg9PT0xKXskLmFmdGVyKGgpfWVsc2V7cSh0KS5hcHBlbmQoaCl9fX1lbHNlIGlmKCF2KXtxKHQpLmh0bWwoaCl9ZWxzZXtxKHQpLmFwcGVuZChoKX19Zih0aGlzLHRoaXMuYVJlbmRlcmVkQ29udHJvbHMsUyk7dGhpcy5hUmVuZGVyZWRDb250cm9scz1bXTt0aGlzLmFCdWZmZXI9W107dGhpcy5hU3R5bGVTdGFjaz1be31dO3Euc2FwLmFjdC5yZWZyZXNoKCl9O1IucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihDLHQpe2lmKHRoaXMuYlJlbmRlcmVyTW9kZSl7cS5zYXAubG9nLmluZm8oIlJlbmRlciBtdXN0IG5vdCBiZSBjYWxsZWQgZnJvbSBjb250cm9sIHJlbmRlcmVycy4gQ2FsbCBpZ25vcmVkLiIsbnVsbCx0aGlzKTtyZXR1cm59aWYodGhpcy5fYkxvY2tlZCl7cS5zYXAubG9nLmVycm9yKCJSZW5kZXIgbXVzdCBub3QgYmUgY2FsbGVkIHdpdGhpbiBCZWZvcmUgb3IgQWZ0ZXIgUmVuZGVyaW5nIFBoYXNlLiBDYWxsIGlnbm9yZWQuIixudWxsLHRoaXMpO3JldHVybn10aGlzLmFCdWZmZXI9W107dGhpcy5yZW5kZXJDb250cm9sKEMpO3RoaXMuX2ZQdXRJbnRvRG9tPWZ1bmN0aW9uKFQsaCl7aWYoQyYmdCl7dmFyIG89Qy5nZXREb21SZWYoKTtpZihSLmlzUHJlc2VydmVkQ29udGVudChvKSl7bz1xLnNhcC5ieUlkKCJzYXAtdWktZHVtbXktIitDLmdldElkKCkpWzBdfHxvfXZhciBuPW8mJm8ucGFyZW50Tm9kZSE9dDt2YXIgYT1mdW5jdGlvbigpe3ZhciBqPXEodCk7aWYodC5pbm5lckhUTUw9PSIiKXtqLmh0bWwoaCl9ZWxzZXtqLmFwcGVuZChoKX19O2lmKG4pe2lmKCFSLmlzUHJlc2VydmVkQ29udGVudChvKSl7aWYoUi5pc0lubGluZVRlbXBsYXRlKG8pKXtxKG8pLmVtcHR5KCl9ZWxzZXtxKG8pLnJlbW92ZSgpfX1pZihoKXthKCl9fWVsc2V7aWYoaCl7aWYobyl7aWYoUi5pc0lubGluZVRlbXBsYXRlKG8pKXtxKG8pLmh0bWwoaCl9ZWxzZXtxKG8pLnJlcGxhY2VXaXRoKGgpfX1lbHNle2EoKX19ZWxzZXtpZihSLmlzSW5saW5lVGVtcGxhdGUobykpe3EobykuZW1wdHkoKX1lbHNle3EobykucmVtb3ZlKCl9fX19fTt0aGlzLmZsdXNoKHQsdHJ1ZSk7dGhpcy5fZlB1dEludG9Eb209bnVsbH19KCkpO1IuZ2V0UmVuZGVyZXI9ZnVuY3Rpb24oQyl7cmV0dXJuIEMuZ2V0TWV0YWRhdGEoKS5nZXRSZW5kZXJlcigpfTtSLmluaXRIVE1MNVN1cHBvcnQ9ZnVuY3Rpb24oKXtpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmKHNhcC51aS5EZXZpY2UuYnJvd3Nlci52ZXJzaW9uPT09OHx8c2FwLnVpLkRldmljZS5icm93c2VyLnZlcnNpb249PT03KSl7dmFyIHQ9WyJhcnRpY2xlIiwiYXNpZGUiLCJhdWRpbyIsImNhbnZhcyIsImNvbW1hbmQiLCJkYXRhbGlzdCIsImRldGFpbHMiLCJmaWdjYXB0aW9uIiwiZmlndXJlIiwiZm9vdGVyIiwiaGVhZGVyIiwiaGdyb3VwIiwia2V5Z2VuIiwibWFyayIsIm1ldGVyIiwibmF2Iiwib3V0cHV0IiwicHJvZ3Jlc3MiLCJycCIsInJ0IiwicnVieSIsInNlY3Rpb24iLCJzb3VyY2UiLCJzdW1tYXJ5IiwidGVtcGxhdGUiLCJ0aW1lIiwidmlkZW8iLCJ3YnIiXTtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0W2ldKX12YXIgcj1uZXcgUmVnRXhwKCI8KCIrdC5qb2luKCJ8IikrIikoXFxzfD4pIiwiaSIpO3ZhciBkPW51bGw7Ui5wcmVwYXJlSFRNTDU9ZnVuY3Rpb24oaCl7aWYoaCYmaC5tYXRjaChyKSl7aWYoIWQpe2Q9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7ZC5zdHlsZS5kaXNwbGF5PSdub25lJ312YXIgZT1kLmNsb25lTm9kZSh0cnVlKTtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpO2UuaW5uZXJIVE1MPWgucmVwbGFjZSgvXlxzXHMqLywnJykucmVwbGFjZSgvXHNccyokLywnJyk7ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlKTtyZXR1cm4gZS5jaGlsZE5vZGVzfXJldHVybiBofTtxLnNhcC5sb2cuaW5mbygiSUU4IEhUTUw1IHN1cHBvcnQgYWN0aXZhdGVkIil9ZWxzZXtxLnNhcC5sb2cuaW5mbygibm8gSUU4IEhUTUw1IHN1cHBvcnQgcmVxdWlyZWQiKTtSLnByZXBhcmVIVE1MNT1mdW5jdGlvbihoKXtyZXR1cm4gaH19fTtSLmZvcmNlUmVwYWludD1mdW5jdGlvbihkKXt2YXIgRD10eXBlb2YgZD09InN0cmluZyI/cS5zYXAuZG9tQnlJZChkKTpkO2lmKEQpe3Euc2FwLmxvZy5kZWJ1ZygiZm9yY2luZyBhIHJlcGFpbnQgZm9yICIrKEQuaWR8fFN0cmluZyhEKSkpO3ZhciBvPUQuc3R5bGUuZGlzcGxheTt2YXIgYT1kb2N1bWVudC5hY3RpdmVFbGVtZW50O0Quc3R5bGUuZGlzcGxheT0ibm9uZSI7RC5vZmZzZXRIZWlnaHQ7RC5zdHlsZS5kaXNwbGF5PW87aWYoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpe3Euc2FwLmZvY3VzKGEpfX19OyhmdW5jdGlvbigpe3ZhciBhPSJzYXAtdWktcHJlc2VydmUiO3ZhciBBPSJkYXRhLXNhcC11aS1wcmVzZXJ2ZSI7ZnVuY3Rpb24gZygpe3ZhciAkPXEoIiMiK2EpO2lmKCQubGVuZ3RoPT09MCl7JD1xKCI8RElWLz4iLHtyb2xlOiJhcHBsaWNhdGlvbiIsaWQ6YX0pLmFkZENsYXNzKCJzYXBVaUhpZGRlbiIpLmNzcygid2lkdGgiLCIwIikuY3NzKCJoZWlnaHQiLCIwIikuY3NzKCJvdmVyZmxvdyIsImhpZGRlbiIpLmFwcGVuZFRvKGRvY3VtZW50LmJvZHkpfXJldHVybiAkfVIucHJlc2VydmVDb250ZW50PWZ1bmN0aW9uKHIscCxQKXtzYXAudWkuZ2V0Q29yZSgpLmdldEV2ZW50QnVzKCkucHVibGlzaCgic2FwLnVpIiwiX19wcmVzZXJ2ZUNvbnRlbnQiLHtkb21Ob2RlOnJ9KTt2YXIgJD1nKCk7ZnVuY3Rpb24gZChlKXtlLmVhY2goZnVuY3Rpb24oaSxmKXtpZihmLmlkPT09YXx8c2FwLnVpLmdldENvcmUoKS5pc1N0YXRpY0FyZWFSZWYoZikpe3JldHVybn12YXIgaD1xKGYpO2lmKGguYXR0cihBKSl7aWYoZj09PXIpe3ZhciBqPXEoIjxESVYvPiIse2lkOiJzYXAtdWktZHVtbXktIitmLmlkfSkuYWRkQ2xhc3MoInNhcFVpSGlkZGVuIik7ai5pbnNlcnRCZWZvcmUoaCl9JC5hcHBlbmQoaCl9ZWxzZSBpZihQJiZmLmlkKXtSLm1hcmtQcmVzZXJ2YWJsZUNvbnRlbnQoaCxmLmlkKTskLmFwcGVuZChoKTtyZXR1cm59aWYoIWguYXR0cigiZGF0YS1zYXAtdWktYXJlYSIpKXtkKGguY2hpbGRyZW4oKSl9fSl9cS5zYXAubWVhc3VyZS5zdGFydChyLmlkKyItLS1wcmVzZXJ2ZUNvbnRlbnQiLCJwcmVzZXJ2ZUNvbnRlbnQgZm9yICIrci5pZCk7ZChwP3Eocik6cShyKS5jaGlsZHJlbigpKTtxLnNhcC5tZWFzdXJlLmVuZChyLmlkKyItLS1wcmVzZXJ2ZUNvbnRlbnQiKX07Ui5maW5kUHJlc2VydmVkQ29udGVudD1mdW5jdGlvbihpKXt2YXIgJD1nKCksZD0kLmNoaWxkcmVuKCJbIitBKyI9JyIraS5yZXBsYWNlKC8oOnxcLikvZywnXFwkMScpKyInXSIpO3JldHVybiBkfTtSLm1hcmtQcmVzZXJ2YWJsZUNvbnRlbnQ9ZnVuY3Rpb24oJCxpKXskLmF0dHIoQSxpKX07Ui5pc1ByZXNlcnZlZENvbnRlbnQ9ZnVuY3Rpb24oZCl7cmV0dXJuKGQmJmQuZ2V0QXR0cmlidXRlKEEpJiZkLnBhcmVudE5vZGUmJmQucGFyZW50Tm9kZS5pZD09YSl9O1IuZ2V0UHJlc2VydmVBcmVhUmVmPWZ1bmN0aW9uKCl7cmV0dXJuIGcoKVswXX07dmFyIGI9ImRhdGEtc2FwLXVpLXRlbXBsYXRlIjtSLm1hcmtJbmxpbmVUZW1wbGF0ZT1mdW5jdGlvbigkKXskLmF0dHIoYiwiIil9O1IuaXNJbmxpbmVUZW1wbGF0ZT1mdW5jdGlvbihkKXtyZXR1cm4oZCYmZC5oYXNBdHRyaWJ1dGUoYikpfX0oKSk7Ui5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7dGhpcy5hQnVmZmVyLnB1c2guYXBwbHkodGhpcy5hQnVmZmVyLGFyZ3VtZW50cyk7cmV0dXJuIHRoaXN9O1IucHJvdG90eXBlLndyaXRlRXNjYXBlZD1mdW5jdGlvbih0LGwpe2lmKGwpe3ZhciBMPXQuc3BsaXQoIlxuIik7Zm9yKHZhciBpPTA7aTxMLmxlbmd0aDtpKyspe0xbaV09cS5zYXAuZW5jb2RlSFRNTChMW2ldKX10PUwuam9pbigiPGJyPiIpfWVsc2V7dD1xLnNhcC5lbmNvZGVIVE1MKHQpfXRoaXMuYUJ1ZmZlci5wdXNoKHQpO3JldHVybiB0aGlzfTtSLnByb3RvdHlwZS50cmFuc2xhdGU9ZnVuY3Rpb24oayl7fTtSLnByb3RvdHlwZS53cml0ZUFjY2VsZXJhdG9yS2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O1IucHJvdG90eXBlLmFkZFN0eWxlPWZ1bmN0aW9uKG4sdil7aWYodiE9PXVuZGVmaW5lZCYmdiE9PW51bGwpe3ZhciBzPXRoaXMuYVN0eWxlU3RhY2tbdGhpcy5hU3R5bGVTdGFjay5sZW5ndGgtMV07aWYoIXMuYVN0eWxlKXtzLmFTdHlsZT1bXX1zLmFTdHlsZS5wdXNoKG4rIjoiK3YpfXJldHVybiB0aGlzfTtSLnByb3RvdHlwZS53cml0ZVN0eWxlcz1mdW5jdGlvbigpe3ZhciBzPXRoaXMuYVN0eWxlU3RhY2tbdGhpcy5hU3R5bGVTdGFjay5sZW5ndGgtMV07aWYocy5hU3R5bGUpe3RoaXMud3JpdGUoIiBzdHlsZT1cIiIrcy5hU3R5bGUuam9pbigiOyIpKyJcIiAiKX1zLmFTdHlsZT1udWxsO3JldHVybiB0aGlzfTtSLnByb3RvdHlwZS5hZGRDbGFzcz1mdW5jdGlvbihuKXtpZihuKXt2YXIgcz10aGlzLmFTdHlsZVN0YWNrW3RoaXMuYVN0eWxlU3RhY2subGVuZ3RoLTFdO2lmKCFzLmFDbGFzc2VzKXtzLmFDbGFzc2VzPVtdfXMuYUNsYXNzZXMucHVzaChuKX1yZXR1cm4gdGhpc307Ui5wcm90b3R5cGUud3JpdGVDbGFzc2VzPWZ1bmN0aW9uKGUpe3ZhciBzPXRoaXMuYVN0eWxlU3RhY2tbdGhpcy5hU3R5bGVTdGFjay5sZW5ndGgtMV07dmFyIEM9ZT9lLmFDdXN0b21TdHlsZUNsYXNzZXM6KChlPT09ZmFsc2UpP1tdOnMuYUN1c3RvbVN0eWxlQ2xhc3Nlcyk7aWYocy5hQ2xhc3Nlc3x8Qyl7dmFyIGE9W10uY29uY2F0KHMuYUNsYXNzZXN8fFtdLEN8fFtdKTthLnNvcnQoKTthPXEubWFwKGEsZnVuY3Rpb24obixpKXtyZXR1cm4oaT09MHx8biE9YVtpLTFdKT9uOm51bGx9KTt0aGlzLndyaXRlKCIgY2xhc3M9XCIiLGEuam9pbigiICIpLCJcIiAiKX1pZighZSl7cy5hQ3VzdG9tU3R5bGVDbGFzc2VzPW51bGx9cy5hQ2xhc3Nlcz1udWxsO3JldHVybiB0aGlzfTtSLnByb3RvdHlwZS53cml0ZUNvbnRyb2xEYXRhPWZ1bmN0aW9uKEMpe3RoaXMud3JpdGVFbGVtZW50RGF0YShDKTtyZXR1cm4gdGhpc307Ui5wcm90b3R5cGUud3JpdGVFbGVtZW50RGF0YT1mdW5jdGlvbihlKXt2YXIgcz1lLmdldElkKCk7aWYocyl7dGhpcy53cml0ZUF0dHJpYnV0ZSgiaWQiLHMpLndyaXRlQXR0cmlidXRlKCJkYXRhLXNhcC11aSIscyl9dmFyIGQ9ZS5nZXRDdXN0b21EYXRhKCk7dmFyIGw9ZC5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsO2krKyl7dmFyIEQ9ZFtpXTtpZihELmdldFdyaXRlVG9Eb20oKSl7dmFyIGs9RC5nZXRLZXkoKTtpZih0eXBlb2YgRC5nZXRWYWx1ZSgpPT09InN0cmluZyIpe2lmKChzYXAudWkuY29yZS5JRC5pc1ZhbGlkKGspKSYmKGsuaW5kZXhPZigiOiIpPT0tMSkmJihrLmluZGV4T2YoInNhcC11aSIpIT09MCkpe3RoaXMud3JpdGVBdHRyaWJ1dGVFc2NhcGVkKCJkYXRhLSIrayxELmdldFZhbHVlKCkpfWVsc2V7cS5zYXAubG9nLmVycm9yKCJDdXN0b21EYXRhIHdpdGgga2V5ICIraysiIHNob3VsZCBiZSB3cml0dGVuIHRvIEhUTUwgb2YgIit0aGlzKyIgYnV0IHRoZSBrZXkgaXMgbm90IHZhbGlkIChtdXN0IGJlIGEgdmFsaWQgc2FwLnVpLmNvcmUuSUQgd2l0aG91dCBhbnkgY29sb24gYW5kIG1heSBub3Qgc3RhcnQgd2l0aCAnc2FwLXVpJykuIil9fWVsc2V7cS5zYXAubG9nLmVycm9yKCJDdXN0b21EYXRhIHdpdGgga2V5ICIraysiIHNob3VsZCBiZSB3cml0dGVuIHRvIEhUTUwgb2YgIit0aGlzKyIgYnV0IHRoZSB2YWx1ZSBpcyBub3QgYSBzdHJpbmcuIil9fX1yZXR1cm4gdGhpc307Ui5wcm90b3R5cGUud3JpdGVBdHRyaWJ1dGU9ZnVuY3Rpb24obix2KXt0aGlzLndyaXRlKCIgIixuLCI9XCIiLHYsIlwiIik7cmV0dXJuIHRoaXN9O1IucHJvdG90eXBlLndyaXRlQXR0cmlidXRlRXNjYXBlZD1mdW5jdGlvbihuLHYpe3RoaXMud3JpdGVBdHRyaWJ1dGUobixxLnNhcC5lc2NhcGVIVE1MKFN0cmluZyh2KSkpO3JldHVybiB0aGlzfTtSLnByb3RvdHlwZS53cml0ZUFjY2Vzc2liaWxpdHlTdGF0ZT1mdW5jdGlvbihlLFApe2lmKCFzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRBY2Nlc3NpYmlsaXR5KCkpe3JldHVybiB0aGlzfWlmKGFyZ3VtZW50cy5sZW5ndGg9PTEmJiEoZSBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkVsZW1lbnQpKXtQPWU7ZT1udWxsfXZhciBhPXt9O2lmKGUhPW51bGwpe3ZhciBtPWUuZ2V0TWV0YWRhdGEoKTttLl9lbnJpY2hDaGlsZEluZm9zKCk7dmFyIGI9ZnVuY3Rpb24oRSxBLHYpe3ZhciBvPW0uZ2V0QWxsUHJvcGVydGllcygpW0VdO2lmKG8mJmVbby5fc0dldHRlcl0oKT09PXYpe2FbQV09InRydWUifX07dmFyIGQ9ZnVuY3Rpb24oRSxBKXt2YXIgbz1tLmdldEFsbEFzc29jaWF0aW9ucygpW0VdO2lmKG8mJm8ubXVsdGlwbGUpe3ZhciBqPWVbby5fc0dldHRlcl0oKTtpZihqLmxlbmd0aD4wKXthW0FdPWouam9pbigiICIpfX19O2IoImVkaXRhYmxlIiwicmVhZG9ubHkiLGZhbHNlKTtiKCJlbmFibGVkIiwiZGlzYWJsZWQiLGZhbHNlKTtiKCJ2aXNpYmxlIiwiaGlkZGVuIixmYWxzZSk7YigicmVxdWlyZWQiLCJyZXF1aXJlZCIsdHJ1ZSk7Yigic2VsZWN0ZWQiLCJzZWxlY3RlZCIsdHJ1ZSk7YigiY2hlY2tlZCIsImNoZWNrZWQiLHRydWUpO2QoImFyaWFEZXNjcmliZWRCeSIsImRlc2NyaWJlZGJ5Iik7ZCgiYXJpYUxhYmVsbGVkQnkiLCJsYWJlbGxlZGJ5Iil9aWYoUCl7dmFyIGY9ZnVuY3Rpb24odil7dmFyIHQ9dHlwZW9mKHYpO3JldHVybiB2PT09bnVsbHx8dj09PSIifHx0PT09Im51bWJlciJ8fHQ9PT0ic3RyaW5nInx8dD09PSJib29sZWFuIn07dmFyIGc9e307dmFyIHgsaCx0LGk7Zm9yKHggaW4gUCl7aD1QW3hdO2lmKGYoaCkpe2dbeF09aH1lbHNlIGlmKHR5cGVvZihoKT09PSJvYmplY3QiJiZmKGgudmFsdWUpKXtpPSIiO2lmKGguYXBwZW5kJiYoeD09PSJkZXNjcmliZWRieSJ8fHg9PT0ibGFiZWxsZWRieSIpKXtpPWFbeF0/YVt4XSsiICI6IiJ9Z1t4XT1pK2gudmFsdWV9fXEuZXh0ZW5kKGEsZyl9aWYoZSBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkVsZW1lbnQmJmUuZ2V0UGFyZW50KCkmJmUuZ2V0UGFyZW50KCkuZW5oYW5jZUFjY2Vzc2liaWxpdHlTdGF0ZSl7ZS5nZXRQYXJlbnQoKS5lbmhhbmNlQWNjZXNzaWJpbGl0eVN0YXRlKGUsYSl9Zm9yKHZhciBwIGluIGEpe2lmKGFbcF0hPW51bGwmJmFbcF0hPT0iIil7dGhpcy53cml0ZUF0dHJpYnV0ZUVzY2FwZWQocD09PSJyb2xlIj9wOiJhcmlhLSIrcCxhW3BdKX19cmV0dXJuIHRoaXN9O1IucHJvdG90eXBlLndyaXRlSWNvbj1mdW5jdGlvbih1LEMsYSl7cS5zYXAucmVxdWlyZSgic2FwLnVpLmNvcmUuSWNvblBvb2wiKTt2YXIgaT1zYXAudWkuY29yZS5JY29uUG9vbC5pc0ljb25VUkkodSkscz1pPyI8c3BhbiAiOiI8aW1nICIsdD0oc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyJiZzYXAudWkuRGV2aWNlLmJyb3dzZXIudmVyc2lvbjw5KSxiLHAsbztpZih0eXBlb2YgQz09PSJzdHJpbmciKXtDPVtDXX1pZihpKXtvPXNhcC51aS5jb3JlLkljb25Qb29sLmdldEljb25JbmZvKHUpO2lmKCFvKXtxLnNhcC5sb2cuZXJyb3IoIkFuIHVucmVnaXN0ZXJlZCBpY29uOiAiK3UrIiBpcyB1c2VkIGluIHNhcC51aS5jb3JlLlJlbmRlck1hbmFnZXIncyB3cml0ZUljb24gbWV0aG9kLiIpO3JldHVybn1pZighQyl7Qz1bXX1DLnB1c2goInNhcFVpSWNvbiIpO2lmKCFvLnN1cHByZXNzTWlycm9yaW5nKXtDLnB1c2goInNhcFVpSWNvbk1pcnJvckluUlRMIil9fXRoaXMud3JpdGUocyk7aWYocS5pc0FycmF5KEMpJiZDLmxlbmd0aCl7Yj1DLmpvaW4oIiAiKTt0aGlzLndyaXRlKCJjbGFzcz1cIiIrYisiXCIgIil9aWYoaSl7aWYoIWEpe2E9e319aWYoIXQpe2FbImRhdGEtc2FwLXVpLWljb24tY29udGVudCJdPW8uY29udGVudH10aGlzLndyaXRlKCJzdHlsZT1cImZvbnQtZmFtaWx5OiAiK28uZm9udEZhbWlseSsiO1wiICIpfWVsc2V7YT1xLmV4dGVuZCh7cm9sZToicHJlc2VudGF0aW9uIixhbHQ6IiIsc3JjOnV9LGEpfWlmKHR5cGVvZiBhPT09Im9iamVjdCIpe2ZvcihwIGluIGEpe2lmKGEuaGFzT3duUHJvcGVydHkocCkpe3RoaXMud3JpdGVBdHRyaWJ1dGVFc2NhcGVkKHAsYVtwXSl9fX10aGlzLndyaXRlKGk/Ij4iOiIvPiIpO2lmKGkpe3QmJnRoaXMud3JpdGUoby5jb250ZW50KTt0aGlzLndyaXRlKCI8L3NwYW4+Iil9fTtyZXR1cm4gUn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5SZXNpemVIYW5kbGVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvUmVzaXplSGFuZGxlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9HbG9iYWwnLCdzYXAvdWkvYmFzZS9PYmplY3QnLCdqcXVlcnkuc2FwLmFjdCcsJ2pxdWVyeS5zYXAuc2NyaXB0J10sZnVuY3Rpb24ocSxHLEIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbD1xLnNhcC5sb2cuZ2V0TG9nZ2VyKCJzYXAudWkuY29yZS5SZXNpemVIYW5kbGVyIixxLnNhcC5sb2cuTGV2ZWwuRVJST1IpO3ZhciBjPW51bGw7dmFyIFI9Qi5leHRlbmQoInNhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihDKXtCLmFwcGx5KHRoaXMpO2M9Qzt0aGlzLmFSZXNpemVMaXN0ZW5lcnM9W107dGhpcy5iUmVnaXN0ZXJlZD1mYWxzZTt0aGlzLmlJZENvdW50ZXI9MDt0aGlzLmZEZXN0cm95SGFuZGxlcj1xLnByb3h5KHRoaXMuZGVzdHJveSx0aGlzKTtxKHdpbmRvdykuYmluZCgidW5sb2FkIix0aGlzLmZEZXN0cm95SGFuZGxlcik7cS5zYXAuYWN0LmF0dGFjaEFjdGl2YXRlKGksdGhpcyl9fSk7ZnVuY3Rpb24gYSgpe2lmKHRoaXMuYlJlZ2lzdGVyZWQpe3RoaXMuYlJlZ2lzdGVyZWQ9ZmFsc2U7c2FwLnVpLmdldENvcmUoKS5kZXRhY2hJbnRlcnZhbFRpbWVyKHRoaXMuY2hlY2tTaXplcyx0aGlzKX19O2Z1bmN0aW9uIGkoKXtpZighdGhpcy5iUmVnaXN0ZXJlZCYmdGhpcy5hUmVzaXplTGlzdGVuZXJzLmxlbmd0aD4wKXt0aGlzLmJSZWdpc3RlcmVkPXRydWU7c2FwLnVpLmdldENvcmUoKS5hdHRhY2hJbnRlcnZhbFRpbWVyKHRoaXMuY2hlY2tTaXplcyx0aGlzKX19O1IucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oZSl7cS5zYXAuYWN0LmRldGFjaEFjdGl2YXRlKGksdGhpcyk7cSh3aW5kb3cpLnVuYmluZCgidW5sb2FkIix0aGlzLmZEZXN0cm95SGFuZGxlcik7Yz1udWxsO3RoaXMuYVJlc2l6ZUxpc3RlbmVycz1bXTthLmFwcGx5KHRoaXMpfTtSLnByb3RvdHlwZS5hdHRhY2hMaXN0ZW5lcj1mdW5jdGlvbihyLGgpe3ZhciBJPXIgaW5zdGFuY2VvZiBzYXAudWkuY29yZS5Db250cm9sLGQ9ST9yLmdldERvbVJlZigpOnIsdz1kP2Qub2Zmc2V0V2lkdGg6MCxIPWQ/ZC5vZmZzZXRIZWlnaHQ6MCxzPSJycy0iK25ldyBEYXRlKCkudmFsdWVPZigpKyItIit0aGlzLmlJZENvdW50ZXIrKyxiPShJPygiQ29udHJvbCAiK3IuZ2V0SWQoKSk6KHIuaWQ/ci5pZDpTdHJpbmcocikpKTt0aGlzLmFSZXNpemVMaXN0ZW5lcnMucHVzaCh7c0lkOnMsb0RvbVJlZjpJP251bGw6cixvQ29udHJvbDpJP3I6bnVsbCxmSGFuZGxlcjpoLGlXaWR0aDp3LGlIZWlnaHQ6SCxkYmc6Yn0pO2wuZGVidWcoInJlZ2lzdGVyZWQgIitiKTtpLmFwcGx5KHRoaXMpO3JldHVybiBzfTtSLnByb3RvdHlwZS5kZXRhY2hMaXN0ZW5lcj1mdW5jdGlvbihJKXt2YXIgdD10aGlzO3EuZWFjaCh0aGlzLmFSZXNpemVMaXN0ZW5lcnMsZnVuY3Rpb24oYixyKXtpZihyLnNJZD09SSl7dC5hUmVzaXplTGlzdGVuZXJzLnNwbGljZShiLDEpO2wuZGVidWcoImRlcmVnaXN0ZXJlZCAiK0kpO3JldHVybiBmYWxzZX19KTtpZih0aGlzLmFSZXNpemVMaXN0ZW5lcnMubGVuZ3RoPT0wKXthLmFwcGx5KHRoaXMpfX07Ui5wcm90b3R5cGUuY2hlY2tTaXplcz1mdW5jdGlvbigpe3ZhciBkPWwuaXNMb2dnYWJsZSgpO2lmKGQpe2wuZGVidWcoImNoZWNrU2l6ZXM6Iil9cS5lYWNoKHRoaXMuYVJlc2l6ZUxpc3RlbmVycyxmdW5jdGlvbihiLHIpe2lmKHIpe3ZhciBDPSEhci5vQ29udHJvbCxEPUM/ci5vQ29udHJvbC5nZXREb21SZWYoKTpyLm9Eb21SZWY7aWYoRCYmcS5jb250YWlucyhkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsRCkpe3ZhciBvPXIuaVdpZHRoLE89ci5pSGVpZ2h0LG49RC5vZmZzZXRXaWR0aCxOPUQub2Zmc2V0SGVpZ2h0O2lmKG8hPW58fE8hPU4pe3IuaVdpZHRoPW47ci5pSGVpZ2h0PU47dmFyIGU9cS5FdmVudCgicmVzaXplIik7ZS50YXJnZXQ9RDtlLmN1cnJlbnRUYXJnZXQ9RDtlLnNpemU9e3dpZHRoOm4saGVpZ2h0Ok59O2Uub2xkU2l6ZT17d2lkdGg6byxoZWlnaHQ6T307ZS5jb250cm9sPUM/ci5vQ29udHJvbDpudWxsO2lmKGQpe2wuZGVidWcoInJlc2l6ZSBkZXRlY3RlZCBmb3IgJyIrci5kYmcrIic6ICIrZS5vbGRTaXplLndpZHRoKyJ4IitlLm9sZFNpemUuaGVpZ2h0KyIgLT4gIitlLnNpemUud2lkdGgrIngiK2Uuc2l6ZS5oZWlnaHQpfXIuZkhhbmRsZXIoZSl9fX19KTtpZihSLl9rZWVwQWN0aXZlIT10cnVlJiZSLl9rZWVwQWN0aXZlIT1mYWxzZSl7Ui5fa2VlcEFjdGl2ZT1mYWxzZX1pZighcS5zYXAuYWN0LmlzQWN0aXZlKCkmJiFSLl9rZWVwQWN0aXZlKXthLmFwcGx5KHRoaXMpfX07Ui5yZWdpc3Rlcj1mdW5jdGlvbihyLGgpe2lmKCFjfHwhYy5vUmVzaXplSGFuZGxlcil7cmV0dXJuIG51bGx9cmV0dXJuIGMub1Jlc2l6ZUhhbmRsZXIuYXR0YWNoTGlzdGVuZXIocixoKX07Ui5kZXJlZ2lzdGVyPWZ1bmN0aW9uKEkpe2lmKCFjfHwhYy5vUmVzaXplSGFuZGxlcil7cmV0dXJufWMub1Jlc2l6ZUhhbmRsZXIuZGV0YWNoTGlzdGVuZXIoSSl9O1IuZGVyZWdpc3RlckFsbEZvckNvbnRyb2w9ZnVuY3Rpb24oQyl7aWYoIWN8fCFjLm9SZXNpemVIYW5kbGVyKXtyZXR1cm59dmFyIEk9W107cS5lYWNoKGMub1Jlc2l6ZUhhbmRsZXIuYVJlc2l6ZUxpc3RlbmVycyxmdW5jdGlvbihiLHIpe2lmKHImJnIub0NvbnRyb2wmJnIub0NvbnRyb2wuZ2V0SWQoKT09PUMpe0kucHVzaChyLnNJZCl9fSk7cS5lYWNoKEksZnVuY3Rpb24oYixzKXtSLmRlcmVnaXN0ZXIocyl9KX07cmV0dXJuIFJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5VSUNvbXBvbmVudE1ldGFkYXRhJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuVUlDb21wb25lbnRNZXRhZGF0YScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1VJQ29tcG9uZW50TWV0YWRhdGEiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0NvbXBvbmVudE1ldGFkYXRhJ10sZnVuY3Rpb24ocSxDKXsidXNlIHN0cmljdCI7dmFyIFU9ZnVuY3Rpb24oYyxvKXtDLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07VS5wcm90b3R5cGU9cS5zYXAubmV3T2JqZWN0KEMucHJvdG90eXBlKTtVLnByZXByb2Nlc3NDbGFzc0luZm89ZnVuY3Rpb24oYyl7aWYoYyYmdHlwZW9mIGMubWV0YWRhdGE9PT0ic3RyaW5nIil7Yy5tZXRhZGF0YT17X3NyYzpjLm1ldGFkYXRhfX1yZXR1cm4gY307VS5wcm90b3R5cGUuYXBwbHlTZXR0aW5ncz1mdW5jdGlvbihjKXtDLnByb3RvdHlwZS5hcHBseVNldHRpbmdzLmNhbGwodGhpcyxjKTt2YXIgcz1jLm1ldGFkYXRhO3RoaXMuX21Sb290Vmlldz1zLnJvb3RWaWV3O2lmKHR5cGVvZiB0aGlzLl9tUm9vdFZpZXc9PT0ic3RyaW5nIil7dGhpcy5fbVJvb3RWaWV3PXt2aWV3TmFtZTp0aGlzLl9tUm9vdFZpZXcsdHlwZTpzYXAudWkuY29yZS5tdmMuVmlld1R5cGUuWE1MfX10aGlzLl9tUm91dGluZz1zLnJvdXRpbmc7dmFyIHA9dGhpcy5nZXRQYXJlbnQoKTtpZihwIGluc3RhbmNlb2YgVSl7aWYocC5fbVJvb3RWaWV3KXt0aGlzLl9tUm9vdFZpZXc9cS5leHRlbmQodHJ1ZSx7fSxwLl9tUm9vdFZpZXcsdGhpcy5fbVJvb3RWaWV3KX10aGlzLl9tUm91dGluZz1xLmV4dGVuZCh0cnVlLHt9LHAuX21Sb3V0aW5nLHRoaXMuX21Sb3V0aW5nKX19O1UucHJvdG90eXBlLmdldFJvb3RWaWV3PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21Sb290Vmlld307VS5wcm90b3R5cGUuZ2V0Um91dGluZ0NvbmZpZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tUm91dGluZyYmdGhpcy5fbVJvdXRpbmcuY29uZmlnfTtVLnByb3RvdHlwZS5nZXRSb3V0ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbVJvdXRpbmcmJnRoaXMuX21Sb3V0aW5nLnJvdXRlc307cmV0dXJuIFV9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5kZWxlZ2F0ZS5JdGVtTmF2aWdhdGlvbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLmRlbGVnYXRlLkl0ZW1OYXZpZ2F0aW9uJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvZGVsZWdhdGUvSXRlbU5hdmlnYXRpb24iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIEk9RS5leHRlbmQoInNhcC51aS5jb3JlLmRlbGVnYXRlLkl0ZW1OYXZpZ2F0aW9uIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oZCxpLG4pe0UuYXBwbHkodGhpcyk7dGhpcy5vRG9tUmVmPW51bGw7aWYoZCl7dGhpcy5zZXRSb290RG9tUmVmKGQpfXRoaXMuYUl0ZW1Eb21SZWZzPVtdO2lmKGkpe3RoaXMuc2V0SXRlbURvbVJlZnMoaSl9dGhpcy5pVGFiSW5kZXg9LTE7dGhpcy5pQWN0aXZlVGFiSW5kZXg9ISFuPy0xOjA7dGhpcy5pRm9jdXNlZEluZGV4PS0xO3RoaXMuaVNlbGVjdGVkSW5kZXg9LTE7dGhpcy5iQ3ljbGluZz10cnVlO3RoaXMuYlRhYmxlTW9kZT1mYWxzZTt0aGlzLmlQYWdlU2l6ZT0tMTt0aGlzLl9iTW91c2VEb3duSGFwcGVuZWQ9ZmFsc2U7dGhpcy5vRGlzYWJsZWRNb2RpZmllcnM9e3NhcGVuZDpbImFsdCIsInNoaWZ0Il0sc2FwaG9tZTpbImFsdCIsInNoaWZ0Il19fX0pO0kuRXZlbnRzPXtCZWZvcmVGb2N1czoiQmVmb3JlRm9jdXMiLEFmdGVyRm9jdXM6IkFmdGVyRm9jdXMifTtJLnByb3RvdHlwZS5zZXREaXNhYmxlZE1vZGlmaWVycz1mdW5jdGlvbihkKXt0aGlzLm9EaXNhYmxlZE1vZGlmaWVycz1kO3JldHVybiB0aGlzfTtJLnByb3RvdHlwZS5nZXREaXNhYmxlZE1vZGlmaWVycz1mdW5jdGlvbihkKXtyZXR1cm4gdGhpcy5vRGlzYWJsZWRNb2RpZmllcnN9O0kucHJvdG90eXBlLmhhc0Rpc2FibGVkTW9kaWZpZXI9ZnVuY3Rpb24oZSl7dmFyIGQ9dGhpcy5vRGlzYWJsZWRNb2RpZmllcnNbZS50eXBlLnJlcGxhY2UoIm1vZGlmaWVycyIsIiIpXTtpZihxLmlzQXJyYXkoZCkpe2Zvcih2YXIgaT0wO2k8ZC5sZW5ndGg7aSsrKXtpZihlW2RbaV0rIktleSJdKXtyZXR1cm4gdHJ1ZX19fXJldHVybiBmYWxzZX07SS5wcm90b3R5cGUuc2V0Um9vdERvbVJlZj1mdW5jdGlvbihkKXt0aGlzLm9Eb21SZWY9ZDtpZighcSh0aGlzLm9Eb21SZWYpLmRhdGEoInNhcC5JTkl0ZW0iKSl7aWYodGhpcy5pRm9jdXNlZEluZGV4Pj0wKXtxKHRoaXMub0RvbVJlZikuYXR0cigidGFiSW5kZXgiLHRoaXMuaVRhYkluZGV4KX1lbHNle3EodGhpcy5vRG9tUmVmKS5hdHRyKCJ0YWJJbmRleCIsdGhpcy5pQWN0aXZlVGFiSW5kZXgpfX1xKHRoaXMub0RvbVJlZikuZGF0YSgic2FwLklOUm9vdCIsdGhpcyk7cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLmdldFJvb3REb21SZWY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vRG9tUmVmfTtJLnByb3RvdHlwZS5nZXRJdGVtRG9tUmVmcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFJdGVtRG9tUmVmc307SS5wcm90b3R5cGUuc2V0SXRlbURvbVJlZnM9ZnVuY3Rpb24oYSl7dGhpcy5hSXRlbURvbVJlZnM9YTtmb3IodmFyIGk9MDtpPHRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aDtpKyspe2lmKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKXt2YXIgJD1xKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKTtpZihpPT10aGlzLmlGb2N1c2VkSW5kZXgmJiEkLmRhdGEoInNhcC5JTlJvb3QiKSl7JC5hdHRyKCJ0YWJJbmRleCIsdGhpcy5pQWN0aXZlVGFiSW5kZXgpfWVsc2UgaWYoJC5hdHRyKCJ0YWJpbmRleCIpPT0iMCIpeyQuYXR0cigidGFiSW5kZXgiLC0xKX0kLmRhdGEoInNhcC5JTkl0ZW0iLHRydWUpOyQuZGF0YSgic2FwLkluTmF2QXJlYSIsdHJ1ZSk7aWYoJC5kYXRhKCJzYXAuSU5Sb290IikmJmkhPXRoaXMuaUZvY3VzZWRJbmRleCl7JC5kYXRhKCJzYXAuSU5Sb290Iikuc2V0TmVzdGVkSXRlbXNUYWJpbmRleCgpfX19cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLnNldEl0ZW1zVGFiaW5kZXg9ZnVuY3Rpb24oKXtmb3IodmFyIGk9MDtpPHRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aDtpKyspe2lmKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKXt2YXIgJD1xKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKTtpZigkLmlzKCI6c2FwRm9jdXNhYmxlIikpe2lmKGk9PXRoaXMuaUZvY3VzZWRJbmRleCYmISQuZGF0YSgic2FwLklOUm9vdCIpKXskLmF0dHIoInRhYkluZGV4Iix0aGlzLmlBY3RpdmVUYWJJbmRleCl9ZWxzZXskLmF0dHIoInRhYkluZGV4IiwtMSl9fX19cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLnNldE5lc3RlZEl0ZW1zVGFiaW5kZXg9ZnVuY3Rpb24oKXtpZihxKHRoaXMub0RvbVJlZikuZGF0YSgic2FwLklOSXRlbSIpKXtmb3IodmFyIGk9MDtpPHRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aDtpKyspe2lmKHRoaXMuYUl0ZW1Eb21SZWZzW2ldJiZxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5hdHRyKCJ0YWJpbmRleCIpPT0iMCIpe3EodGhpcy5hSXRlbURvbVJlZnNbaV0pLmF0dHIoInRhYkluZGV4IiwtMSl9fX1yZXR1cm4gdGhpc307SS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe2lmKHRoaXMub0RvbVJlZil7cSh0aGlzLm9Eb21SZWYpLnJlbW92ZURhdGEoInNhcC5JTlJvb3QiKTt0aGlzLm9Eb21SZWY9bnVsbH1pZih0aGlzLmFJdGVtRG9tUmVmcyl7Zm9yKHZhciBpPTA7aTx0aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGg7aSsrKXtpZih0aGlzLmFJdGVtRG9tUmVmc1tpXSl7cSh0aGlzLmFJdGVtRG9tUmVmc1tpXSkucmVtb3ZlRGF0YSgic2FwLklOSXRlbSIpO3EodGhpcy5hSXRlbURvbVJlZnNbaV0pLnJlbW92ZURhdGEoInNhcC5Jbk5hdkFyZWEiKX19dGhpcy5hSXRlbURvbVJlZnM9bnVsbH10aGlzLl9iSXRlbVRhYkluZGV4PXVuZGVmaW5lZH07SS5wcm90b3R5cGUuc2V0Q3ljbGluZz1mdW5jdGlvbihjKXt0aGlzLmJDeWNsaW5nPWM7cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLnNldFRhYmxlTW9kZT1mdW5jdGlvbih0LFQpe3RoaXMuYlRhYmxlTW9kZT10O3RoaXMuYlRhYmxlTGlzdD10P1Q6ZmFsc2U7cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLnNldFBhZ2VTaXplPWZ1bmN0aW9uKHApe3RoaXMuaVBhZ2VTaXplPXA7cmV0dXJuIHRoaXN9O0kucHJvdG90eXBlLnNldFNlbGVjdGVkSW5kZXg9ZnVuY3Rpb24oaSl7dGhpcy5pU2VsZWN0ZWRJbmRleD1pO3JldHVybiB0aGlzfTtJLnByb3RvdHlwZS5zZXRDb2x1bW5zPWZ1bmN0aW9uKGMpe3RoaXMuaUNvbHVtbnM9YztyZXR1cm4gdGhpc307SS5wcm90b3R5cGUuZm9jdXNJdGVtPWZ1bmN0aW9uKGksZSl7cS5zYXAubG9nLmluZm8oIkZvY3VzSXRlbTogIitpKyIgaUZvY3VzZWRJbmRleDogIit0aGlzLmlGb2N1c2VkSW5kZXgsImZvY3VzSXRlbSIsIkl0ZW1OYXZpZ2F0aW9uIik7aWYoaT09dGhpcy5pRm9jdXNlZEluZGV4JiZ0aGlzLmFJdGVtRG9tUmVmc1t0aGlzLmlGb2N1c2VkSW5kZXhdPT1kb2N1bWVudC5hY3RpdmVFbGVtZW50KXtyZXR1cm59aWYoIXRoaXMuYUl0ZW1Eb21SZWZzW2ldfHwhcSh0aGlzLmFJdGVtRG9tUmVmc1tpXSkuaXMoIjpzYXBGb2N1c2FibGUiKSl7cmV0dXJufXRoaXMuZmlyZUV2ZW50KEkuRXZlbnRzLkJlZm9yZUZvY3VzLHtpbmRleDppLGV2ZW50OmV9KTt0aGlzLnNldEZvY3VzZWRJbmRleChpKTt0aGlzLmJJU2V0Rm9jdXM9dHJ1ZTtpZihxKHRoaXMuYUl0ZW1Eb21SZWZzW3RoaXMuaUZvY3VzZWRJbmRleF0pLmRhdGEoInNhcC5JTlJvb3QiKSYmZSl7dmFyIG89cSh0aGlzLmFJdGVtRG9tUmVmc1t0aGlzLmlGb2N1c2VkSW5kZXhdKS5kYXRhKCJzYXAuSU5Sb290Iik7by5fc0ZvY3VzRXZlbnQ9ZS50eXBlfXEuc2FwLmxvZy5pbmZvKCJTZXQgRm9jdXMgb24gSUQ6ICIrdGhpcy5hSXRlbURvbVJlZnNbdGhpcy5pRm9jdXNlZEluZGV4XS5pZCwiZm9jdXNJdGVtIiwiSXRlbU5hdmlnYXRpb24iKTtxLnNhcC5mb2N1cyh0aGlzLmFJdGVtRG9tUmVmc1t0aGlzLmlGb2N1c2VkSW5kZXhdKTt0aGlzLmZpcmVFdmVudChJLkV2ZW50cy5BZnRlckZvY3VzLHtpbmRleDppLGV2ZW50OmV9KX07SS5wcm90b3R5cGUuc2V0Rm9jdXNlZEluZGV4PWZ1bmN0aW9uKGkpe3ZhciAkO2lmKGk8MCl7aT0wfWlmKGk+dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoLTEpe2k9dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoLTF9cSh0aGlzLm9Eb21SZWYpLmF0dHIoInRhYkluZGV4Iix0aGlzLmlUYWJJbmRleCk7aWYodGhpcy5pRm9jdXNlZEluZGV4IT09LTEmJnRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aD50aGlzLmlGb2N1c2VkSW5kZXgpe3EodGhpcy5hSXRlbURvbVJlZnNbdGhpcy5pRm9jdXNlZEluZGV4XSkuYXR0cigidGFiSW5kZXgiLC0xKTskPXEodGhpcy5hSXRlbURvbVJlZnNbdGhpcy5pRm9jdXNlZEluZGV4XSk7aWYoJC5kYXRhKCJzYXAuSU5Sb290IikmJmkhPXRoaXMuaUZvY3VzZWRJbmRleCl7cSgkLmRhdGEoInNhcC5JTlJvb3QiKS5hSXRlbURvbVJlZnNbJC5kYXRhKCJzYXAuSU5Sb290IikuaUZvY3VzZWRJbmRleF0pLmF0dHIoInRhYkluZGV4IiwtMSl9fXRoaXMuaUZvY3VzZWRJbmRleD1pO3ZhciBmPXRoaXMuYUl0ZW1Eb21SZWZzW3RoaXMuaUZvY3VzZWRJbmRleF07JD1xKHRoaXMuYUl0ZW1Eb21SZWZzW3RoaXMuaUZvY3VzZWRJbmRleF0pO2lmKCEkLmRhdGEoInNhcC5JTlJvb3QiKSl7cShmKS5hdHRyKCJ0YWJJbmRleCIsdGhpcy5pQWN0aXZlVGFiSW5kZXgpfXJldHVybiB0aGlzfTtJLnByb3RvdHlwZS5nZXRGb2N1c2VkRG9tUmVmPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYUl0ZW1Eb21SZWZzW3RoaXMuaUZvY3VzZWRJbmRleF19O0kucHJvdG90eXBlLmdldEZvY3VzZWRJbmRleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlGb2N1c2VkSW5kZXh9O0kucHJvdG90eXBlLm9uZm9jdXNpbj1mdW5jdGlvbihlKXt2YXIgcz1lLnRhcmdldDtpZihzPT10aGlzLm9Eb21SZWYpe2lmKCF0aGlzLl9iSXRlbVRhYkluZGV4KXt0aGlzLnNldEl0ZW1zVGFiaW5kZXgoKTt0aGlzLl9iSXRlbVRhYkluZGV4PXRydWV9aWYodGhpcy5fYk1vdXNlRG93bkhhcHBlbmVkKXtyZXR1cm59dmFyIGE7aWYocSh0aGlzLm9Eb21SZWYpLmRhdGEoInNhcC5JTkl0ZW0iKSYmdGhpcy5fc0ZvY3VzRXZlbnQmJiFxKHRoaXMub0RvbVJlZikuZGF0YSgic2FwLkluTmF2QXJlYSIpKXtzd2l0Y2godGhpcy5fc0ZvY3VzRXZlbnQpe2Nhc2Uic2FwbmV4dCI6YT0wO2JyZWFrO2Nhc2Uic2FwcHJldmlvdXMiOmE9dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoLTE7YnJlYWs7ZGVmYXVsdDphPXRoaXMuaVNlbGVjdGVkSW5kZXghPS0xP3RoaXMuaVNlbGVjdGVkSW5kZXg6KHRoaXMuaUZvY3VzZWRJbmRleCE9LTE/dGhpcy5pRm9jdXNlZEluZGV4OjApO2JyZWFrfXRoaXMuX3NGb2N1c0V2ZW50PXVuZGVmaW5lZH1lbHNle2E9dGhpcy5pU2VsZWN0ZWRJbmRleCE9LTE/dGhpcy5pU2VsZWN0ZWRJbmRleDoodGhpcy5pRm9jdXNlZEluZGV4IT0tMT90aGlzLmlGb2N1c2VkSW5kZXg6MCl9dGhpcy5mb2N1c0l0ZW0oYSxlKTtpZih0aGlzLmlGb2N1c2VkSW5kZXg9PS0xKXtmb3IodmFyIGk9YSsxO2k8dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoO2krKyl7dGhpcy5mb2N1c0l0ZW0oaSxlKTtpZih0aGlzLmlGb2N1c2VkSW5kZXg9PWkpe2JyZWFrfX1pZih0aGlzLmlGb2N1c2VkSW5kZXg9PS0xJiZhPjApe2Zvcih2YXIgaT1hLTE7aT49MDtpLS0pe3RoaXMuZm9jdXNJdGVtKGksZSk7aWYodGhpcy5pRm9jdXNlZEluZGV4PT1pKXticmVha319fX1lLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGlmKCF0aGlzLmJJU2V0Rm9jdXMpe2lmKHRoaXMuYUl0ZW1Eb21SZWZzJiZlLnRhcmdldCE9dGhpcy5hSXRlbURvbVJlZnNbdGhpcy5pRm9jdXNlZEluZGV4XSl7Zm9yKHZhciBpPTA7aTx0aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGg7aSsrKXtpZihlLnRhcmdldD09dGhpcy5hSXRlbURvbVJlZnNbaV0pe3RoaXMuZm9jdXNJdGVtKGksZSk7YnJlYWt9fX1lbHNle3RoaXMuZmlyZUV2ZW50KEkuRXZlbnRzLkFmdGVyRm9jdXMse2luZGV4OnRoaXMuaUZvY3VzZWRJbmRleCxldmVudDplfSl9fXRoaXMuYklTZXRGb2N1cz1mYWxzZX07SS5wcm90b3R5cGUub25zYXBmb2N1c2xlYXZlPWZ1bmN0aW9uKGUpe2lmKCFlLnJlbGF0ZWRDb250cm9sSWR8fCFxLnNhcC5jb250YWluc09yRXF1YWxzKHRoaXMub0RvbVJlZixzYXAudWkuZ2V0Q29yZSgpLmJ5SWQoZS5yZWxhdGVkQ29udHJvbElkKS5nZXRGb2N1c0RvbVJlZigpKSl7dGhpcy5zZXRGb2N1c2VkSW5kZXgodGhpcy5pU2VsZWN0ZWRJbmRleCE9LTE/dGhpcy5pU2VsZWN0ZWRJbmRleDoodGhpcy5pRm9jdXNlZEluZGV4IT0tMT90aGlzLmlGb2N1c2VkSW5kZXg6MCkpO2lmKHEodGhpcy5vRG9tUmVmKS5kYXRhKCJzYXAuSU5JdGVtIikpe3ZhciBwLGQ9cSh0aGlzLm9Eb21SZWYpO3doaWxlKCFwKXtkPWQucGFyZW50KCk7aWYoZC5kYXRhKCJzYXAuSU5Sb290Iikpe3A9ZC5nZXQoMCl9fWlmKCFlLnJlbGF0ZWRDb250cm9sSWR8fHEuc2FwLmNvbnRhaW5zT3JFcXVhbHMocCxzYXAudWkuZ2V0Q29yZSgpLmJ5SWQoZS5yZWxhdGVkQ29udHJvbElkKS5nZXRGb2N1c0RvbVJlZigpKSl7cSh0aGlzLmFJdGVtRG9tUmVmc1t0aGlzLmlGb2N1c2VkSW5kZXhdKS5hdHRyKCJ0YWJJbmRleCIsLTEpfX12YXIgZD1xKHRoaXMub0RvbVJlZik7aWYoZC5kYXRhKCJzYXAuSW5OYXZBcmVhIik9PT1mYWxzZSl7ZC5kYXRhKCJzYXAuSW5OYXZBcmVhIix0cnVlKX19fTtJLnByb3RvdHlwZS5vbm1vdXNlZG93bj1mdW5jdGlvbihlKXt2YXIgcz1lLnRhcmdldDtpZihxLnNhcC5jb250YWluc09yRXF1YWxzKHRoaXMub0RvbVJlZixzKSl7Zm9yKHZhciBpPTA7aTx0aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGg7aSsrKXt2YXIgbz10aGlzLmFJdGVtRG9tUmVmc1tpXTtpZihxLnNhcC5jb250YWluc09yRXF1YWxzKG8scykpe2lmKCF0aGlzLmJUYWJsZU1vZGUpe3RoaXMuZm9jdXNJdGVtKGksZSl9ZWxzZXtpZihvPT09c3x8IXEocykuaXMoIjpzYXBGb2N1c2FibGUiKSl7dGhpcy5mb2N1c0l0ZW0oaSxlKX19cmV0dXJufX1pZihzPT10aGlzLm9Eb21SZWYpe3RoaXMuX2JNb3VzZURvd25IYXBwZW5lZD10cnVlO3ZhciB0PXRoaXM7d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9iTW91c2VEb3duSGFwcGVuZWQ9ZmFsc2V9LDIwKX19fTtJLnByb3RvdHlwZS5vbnNhcG5leHQ9ZnVuY3Rpb24oZSl7aWYoIXEuc2FwLmNvbnRhaW5zT3JFcXVhbHModGhpcy5vRG9tUmVmLGUudGFyZ2V0KSl7cmV0dXJufWlmKHEodGhpcy5vRG9tUmVmKS5kYXRhKCJzYXAuSW5OYXZBcmVhIikpe3JldHVybn1pZih0aGlzLmJUYWJsZU1vZGUmJnEuaW5BcnJheShlLnRhcmdldCx0aGlzLmFJdGVtRG9tUmVmcyk9PT0tMSl7cmV0dXJufXZhciBpPXRoaXMuaUZvY3VzZWRJbmRleCxmPXRydWU7aWYoaT4tMSl7aWYodGhpcy5iVGFibGVNb2RlKXt2YXIgcj10aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgvdGhpcy5pQ29sdW1ucyxSPU1hdGguZmxvb3IoaS90aGlzLmlDb2x1bW5zKSxjPWkldGhpcy5pQ29sdW1ucztpZihlLmtleUNvZGU9PXEuc2FwLktleUNvZGVzLkFSUk9XX0RPV04pe2lmKFI8ci0xKXtpKz10aGlzLmlDb2x1bW5zfX1lbHNle2lmKGM8dGhpcy5pQ29sdW1ucy0xKXtpKz0xfX19ZWxzZXtkb3tpZih0aGlzLmlDb2x1bW5zPjEmJmUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfRE9XTil7aWYoKGkrdGhpcy5pQ29sdW1ucyk+PXRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aCl7aWYoKGkldGhpcy5pQ29sdW1ucyk8KHRoaXMuaUNvbHVtbnMtMSkpe2k9KGkldGhpcy5pQ29sdW1ucykrMX1lbHNlIGlmKHRoaXMuYkN5Y2xpbmcpe2k9MH19ZWxzZXtpPWkrdGhpcy5pQ29sdW1uc319ZWxzZXtpZihpPT10aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgtMSl7aWYocSh0aGlzLm9Eb21SZWYpLmRhdGEoInNhcC5JTkl0ZW0iKSl7cmV0dXJufWVsc2UgaWYodGhpcy5iQ3ljbGluZyl7aT0wfWVsc2V7aT10aGlzLmlGb2N1c2VkSW5kZXh9fWVsc2V7aSsrfX1pZihpPT09dGhpcy5pRm9jdXNlZEluZGV4KXtpZihmKXtmPWZhbHNlfWVsc2V7dGhyb3cgbmV3IEVycm9yKCJJdGVtTmF2aWdhdGlvbiBoYXMgbm8gdmlzaWJsZS9leGlzdGluZyBpdGVtcyBhbmQgaXMgaGVuY2UgdW5hYmxlIHRvIHNlbGVjdCB0aGUgbmV4dCBvbmUiKX19fXdoaWxlKCF0aGlzLmFJdGVtRG9tUmVmc1tpXXx8IXEodGhpcy5hSXRlbURvbVJlZnNbaV0pLmlzKCI6dmlzaWJsZSIpfHxxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5jc3MoInZpc2liaWxpdHkiKT09PSJoaWRkZW4ifHwhcSh0aGlzLmFJdGVtRG9tUmVmc1tpXSkuaXMoIjpzYXBGb2N1c2FibGUiKSl9dGhpcy5mb2N1c0l0ZW0oaSxlKTtlLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKX19O0kucHJvdG90eXBlLm9uc2FwbmV4dG1vZGlmaWVycz1mdW5jdGlvbihlKXtpZih0aGlzLmhhc0Rpc2FibGVkTW9kaWZpZXIoZSkpe3JldHVybn10aGlzLm9uc2FwbmV4dChlKX07SS5wcm90b3R5cGUub25zYXBwcmV2aW91cz1mdW5jdGlvbihlKXtpZighcS5zYXAuY29udGFpbnNPckVxdWFscyh0aGlzLm9Eb21SZWYsZS50YXJnZXQpKXtyZXR1cm59aWYocSh0aGlzLm9Eb21SZWYpLmRhdGEoInNhcC5Jbk5hdkFyZWEiKSl7cmV0dXJufWlmKHRoaXMuYlRhYmxlTW9kZSYmcS5pbkFycmF5KGUudGFyZ2V0LHRoaXMuYUl0ZW1Eb21SZWZzKT09PS0xKXtyZXR1cm59dmFyIGk9dGhpcy5pRm9jdXNlZEluZGV4LGY9dHJ1ZTtpZihpPi0xKXtpZih0aGlzLmJUYWJsZU1vZGUpe3ZhciByPXRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aC90aGlzLmlDb2x1bW5zLFI9TWF0aC5mbG9vcihpL3RoaXMuaUNvbHVtbnMpLGM9aSV0aGlzLmlDb2x1bW5zO2lmKGUua2V5Q29kZT09cS5zYXAuS2V5Q29kZXMuQVJST1dfVVApe2lmKFI+MCl7aS09dGhpcy5pQ29sdW1uc319ZWxzZXtpZihjPjApe2ktPTF9fX1lbHNle2Rve2lmKHRoaXMuaUNvbHVtbnM+MSYmZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5BUlJPV19VUCl7aWYoKGktdGhpcy5pQ29sdW1ucyk8MCl7dmFyIGM9MDtpZigoaSV0aGlzLmlDb2x1bW5zKT4wKXtjPShpJXRoaXMuaUNvbHVtbnMpLTF9ZWxzZSBpZih0aGlzLmJDeWNsaW5nKXtjPXRoaXMuaUNvbHVtbnMtMX1pZihpPT09MCYmYz09PTApe2k9MH1lbHNle3ZhciBhPU1hdGguY2VpbCh0aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgvdGhpcy5pQ29sdW1ucyk7aT1jKygoYS0xKSp0aGlzLmlDb2x1bW5zKTtpZihpPj10aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgpe2k9aS10aGlzLmlDb2x1bW5zfX19ZWxzZXtpPWktdGhpcy5pQ29sdW1uc319ZWxzZXtpZihpPT0wKXtpZihxKHRoaXMub0RvbVJlZikuZGF0YSgic2FwLklOSXRlbSIpKXtyZXR1cm59ZWxzZSBpZih0aGlzLmJDeWNsaW5nKXtpPXRoaXMuYUl0ZW1Eb21SZWZzLmxlbmd0aC0xfWVsc2V7aT10aGlzLmlGb2N1c2VkSW5kZXh9fWVsc2V7aS0tfX1pZihpPT10aGlzLmlGb2N1c2VkSW5kZXgpe2lmKGYpe2Y9ZmFsc2V9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIkl0ZW1OYXZpZ2F0aW9uIGhhcyBubyB2aXNpYmxlL2V4aXN0aW5nIGl0ZW1zIGFuZCBpcyBoZW5jZSB1bmFibGUgdG8gc2VsZWN0IHRoZSBwcmV2aW91cyBvbmUiKX19fXdoaWxlKCF0aGlzLmFJdGVtRG9tUmVmc1tpXXx8IXEodGhpcy5hSXRlbURvbVJlZnNbaV0pLmlzKCI6dmlzaWJsZSIpfHxxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5jc3MoInZpc2liaWxpdHkiKT09PSJoaWRkZW4ifHwhcSh0aGlzLmFJdGVtRG9tUmVmc1tpXSkuaXMoIjpzYXBGb2N1c2FibGUiKSl9dGhpcy5mb2N1c0l0ZW0oaSxlKTtlLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKX19O0kucHJvdG90eXBlLm9uc2FwcHJldmlvdXNtb2RpZmllcnM9ZnVuY3Rpb24oZSl7aWYodGhpcy5oYXNEaXNhYmxlZE1vZGlmaWVyKGUpKXtyZXR1cm59dGhpcy5vbnNhcHByZXZpb3VzKGUpfTtJLnByb3RvdHlwZS5vbnNhcHBhZ2V1cD1mdW5jdGlvbihlKXtpZighcS5zYXAuY29udGFpbnNPckVxdWFscyh0aGlzLm9Eb21SZWYsZS50YXJnZXQpKXtyZXR1cm59aWYodGhpcy5iVGFibGVNb2RlJiZxLmluQXJyYXkoZS50YXJnZXQsdGhpcy5hSXRlbURvbVJlZnMpPT09LTEpe3JldHVybn1pZih0aGlzLmlQYWdlU2l6ZT4wKXt2YXIgaT10aGlzLmlGb2N1c2VkSW5kZXg7aWYoaT4tMSl7aT1pLXRoaXMuaVBhZ2VTaXplO3doaWxlKGk+MCYmIXEodGhpcy5hSXRlbURvbVJlZnNbaV0pLmlzKCI6c2FwRm9jdXNhYmxlIikpe2ktLX1pZihpPDApe2k9MH10aGlzLmZvY3VzSXRlbShpLGUpfX1lbHNlIGlmKHRoaXMuYlRhYmxlTW9kZSl7dmFyIGk9dGhpcy5pRm9jdXNlZEluZGV4JXRoaXMuaUNvbHVtbnM7dGhpcy5mb2N1c0l0ZW0oaSxlKX1lLnByZXZlbnREZWZhdWx0KCk7ZS5zdG9wUHJvcGFnYXRpb24oKX07SS5wcm90b3R5cGUub25zYXBwYWdlZG93bj1mdW5jdGlvbihlKXtpZighcS5zYXAuY29udGFpbnNPckVxdWFscyh0aGlzLm9Eb21SZWYsZS50YXJnZXQpKXtyZXR1cm59aWYodGhpcy5iVGFibGVNb2RlJiZxLmluQXJyYXkoZS50YXJnZXQsdGhpcy5hSXRlbURvbVJlZnMpPT09LTEpe3JldHVybn1pZih0aGlzLmlQYWdlU2l6ZT4wKXt2YXIgaT10aGlzLmlGb2N1c2VkSW5kZXg7aWYoaT4tMSl7aT1pK3RoaXMuaVBhZ2VTaXplO3doaWxlKGk8dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoLTEmJiFxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5pcygiOnNhcEZvY3VzYWJsZSIpKXtpKyt9aWYoaT50aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgtMSl7aT10aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgtMX10aGlzLmZvY3VzSXRlbShpLGUpfX1lbHNlIGlmKHRoaXMuYlRhYmxlTW9kZSl7dmFyIHI9dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoL3RoaXMuaUNvbHVtbnMsYz10aGlzLmlGb2N1c2VkSW5kZXgldGhpcy5pQ29sdW1ucztpPShyLTEpKnRoaXMuaUNvbHVtbnMrYzt0aGlzLmZvY3VzSXRlbShpLGUpfWUucHJldmVudERlZmF1bHQoKTtlLnN0b3BQcm9wYWdhdGlvbigpfTtJLnByb3RvdHlwZS5vbnNhcGhvbWU9ZnVuY3Rpb24oZSl7aWYoIXEuc2FwLmNvbnRhaW5zT3JFcXVhbHModGhpcy5vRG9tUmVmLGUudGFyZ2V0KSl7cmV0dXJufWlmKHRoaXMuYlRhYmxlTW9kZSYmcS5pbkFycmF5KGUudGFyZ2V0LHRoaXMuYUl0ZW1Eb21SZWZzKT09PS0xKXtyZXR1cm59dmFyIGk9MDtpZih0aGlzLmJUYWJsZU1vZGUpe2lmKCF0aGlzLmJUYWJsZUxpc3QmJiEoZS5tZXRhS2V5fHxlLmN0cmxLZXkpKXt2YXIgcj1NYXRoLmZsb29yKHRoaXMuaUZvY3VzZWRJbmRleC90aGlzLmlDb2x1bW5zKTtpPXIqdGhpcy5pQ29sdW1uc319ZWxzZXtpZighIShlLm1ldGFLZXl8fGUuY3RybEtleSkpe3JldHVybn13aGlsZSghdGhpcy5hSXRlbURvbVJlZnNbaV18fCFxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5pcygiOnZpc2libGUiKXx8cSh0aGlzLmFJdGVtRG9tUmVmc1tpXSkuY3NzKCJ2aXNpYmlsaXR5Iik9PT0iaGlkZGVuInx8IXEodGhpcy5hSXRlbURvbVJlZnNbaV0pLmlzKCI6c2FwRm9jdXNhYmxlIikpe2krKztpZihpPT10aGlzLmFJdGVtRG9tUmVmcy5sZW5ndGgpe3JldHVybn19fXRoaXMuZm9jdXNJdGVtKGksZSk7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCl9O0kucHJvdG90eXBlLm9uc2FwaG9tZW1vZGlmaWVycz1mdW5jdGlvbihlKXtpZih0aGlzLmhhc0Rpc2FibGVkTW9kaWZpZXIoZSkpe3JldHVybn10aGlzLm9uc2FwaG9tZShlKX07SS5wcm90b3R5cGUub25zYXBlbmQ9ZnVuY3Rpb24oZSl7aWYoIXEuc2FwLmNvbnRhaW5zT3JFcXVhbHModGhpcy5vRG9tUmVmLGUudGFyZ2V0KSl7cmV0dXJufWlmKHRoaXMuYlRhYmxlTW9kZSYmcS5pbkFycmF5KGUudGFyZ2V0LHRoaXMuYUl0ZW1Eb21SZWZzKT09PS0xKXtyZXR1cm59dmFyIGk9dGhpcy5hSXRlbURvbVJlZnMubGVuZ3RoLTE7aWYodGhpcy5iVGFibGVNb2RlKXtpZighdGhpcy5iVGFibGVMaXN0JiYhKGUubWV0YUtleXx8ZS5jdHJsS2V5KSl7dmFyIHI9TWF0aC5mbG9vcih0aGlzLmlGb2N1c2VkSW5kZXgvdGhpcy5pQ29sdW1ucyk7aT1yKnRoaXMuaUNvbHVtbnMrdGhpcy5pQ29sdW1ucy0xfX1lbHNle2lmKCEhKGUubWV0YUtleXx8ZS5jdHJsS2V5KSl7cmV0dXJufXdoaWxlKCF0aGlzLmFJdGVtRG9tUmVmc1tpXXx8IXEodGhpcy5hSXRlbURvbVJlZnNbaV0pLmlzKCI6dmlzaWJsZSIpfHxxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5jc3MoInZpc2liaWxpdHkiKT09ImhpZGRlbiJ8fCFxKHRoaXMuYUl0ZW1Eb21SZWZzW2ldKS5pcygiOnNhcEZvY3VzYWJsZSIpKXtpLS07aWYoaTwwKXtyZXR1cm59fX10aGlzLmZvY3VzSXRlbShpLGUpO2UucHJldmVudERlZmF1bHQoKTtlLnN0b3BQcm9wYWdhdGlvbigpfTtJLnByb3RvdHlwZS5vbnNhcGVuZG1vZGlmaWVycz1mdW5jdGlvbihlKXtpZih0aGlzLmhhc0Rpc2FibGVkTW9kaWZpZXIoZSkpe3JldHVybn10aGlzLm9uc2FwZW5kKGUpfTtJLnByb3RvdHlwZS5zZXRUYWJJbmRleDA9ZnVuY3Rpb24oKXt0aGlzLmlUYWJJbmRleD0wO3RoaXMuaUFjdGl2ZVRhYkluZGV4PTB9O0kucHJvdG90eXBlLm9ua2V5dXA9ZnVuY3Rpb24oZSl7aWYoZS5rZXlDb2RlPT1xLnNhcC5LZXlDb2Rlcy5GMil7dmFyIGQ9cSh0aGlzLm9Eb21SZWYpO2lmKGQuZGF0YSgic2FwLkluTmF2QXJlYSIpKXtkLmRhdGEoInNhcC5Jbk5hdkFyZWEiLGZhbHNlKX1lbHNlIGlmKGQuZGF0YSgic2FwLkluTmF2QXJlYSIpPT09ZmFsc2Upe2QuZGF0YSgic2FwLkluTmF2QXJlYSIsdHJ1ZSl9ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCl9fTtyZXR1cm4gSX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuZm9ybWF0LkRhdGVGb3JtYXQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9mb3JtYXQvRGF0ZUZvcm1hdCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9jb3JlL0xvY2FsZURhdGEnXSxmdW5jdGlvbihxLEwpeyJ1c2Ugc3RyaWN0Ijt2YXIgRD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigpfTtELm9EYXRlSW5mbz17b0RlZmF1bHRGb3JtYXRPcHRpb25zOntzdHlsZToibWVkaXVtIn0sYUZhbGxiYWNrRm9ybWF0T3B0aW9uczpbe3N0eWxlOiJzaG9ydCJ9LHtzdHlsZToibWVkaXVtIn0se3BhdHRlcm46Inl5eXktTU0tZGQifSx7cGF0dGVybjoieXl5eU1NZGQifV0sZ2V0UGF0dGVybjpmdW5jdGlvbihsLHMpe3JldHVybiBsLmdldERhdGVQYXR0ZXJuKHMpfSxvUmVxdWlyZWRQYXJ0czp7InRleHQiOnRydWUsInllYXIiOnRydWUsIndlZWtZZWFyIjp0cnVlLCJtb250aCI6dHJ1ZSwiZGF5Ijp0cnVlfX07RC5vRGF0ZVRpbWVJbmZvPXtvRGVmYXVsdEZvcm1hdE9wdGlvbnM6e3N0eWxlOiJtZWRpdW0ifSxhRmFsbGJhY2tGb3JtYXRPcHRpb25zOlt7c3R5bGU6InNob3J0In0se3N0eWxlOiJtZWRpdW0ifSx7cGF0dGVybjoieXl5eS1NTS1kZCdUJ2hoOm1tOnNzIn0se3BhdHRlcm46Inl5eXlNTWRkIGhobW1zcyJ9XSxnZXRQYXR0ZXJuOmZ1bmN0aW9uKGwscyl7dmFyIGQ9bC5nZXREYXRlVGltZVBhdHRlcm4ocyksYT1sLmdldERhdGVQYXR0ZXJuKHMpLHQ9bC5nZXRUaW1lUGF0dGVybihzKTtyZXR1cm4gZC5yZXBsYWNlKCJ7MX0iLGEpLnJlcGxhY2UoInswfSIsdCl9LG9SZXF1aXJlZFBhcnRzOnsidGV4dCI6dHJ1ZSwieWVhciI6dHJ1ZSwid2Vla1llYXIiOnRydWUsIm1vbnRoIjp0cnVlLCJkYXkiOnRydWUsImhvdXIwXzIzIjp0cnVlLCJob3VyMV8yNCI6dHJ1ZSwiaG91cjBfMTEiOnRydWUsImhvdXIxXzEyIjp0cnVlfX07RC5vVGltZUluZm89e29EZWZhdWx0Rm9ybWF0T3B0aW9uczp7c3R5bGU6Im1lZGl1bSJ9LGFGYWxsYmFja0Zvcm1hdE9wdGlvbnM6W3tzdHlsZToic2hvcnQifSx7c3R5bGU6Im1lZGl1bSJ9LHtwYXR0ZXJuOiJoaDptbTpzcyJ9LHtwYXR0ZXJuOiJoaG1tc3MifV0sZ2V0UGF0dGVybjpmdW5jdGlvbihsLHMpe3JldHVybiBsLmdldFRpbWVQYXR0ZXJuKHMpfSxvUmVxdWlyZWRQYXJ0czp7InRleHQiOnRydWUsImhvdXIwXzIzIjp0cnVlLCJob3VyMV8yNCI6dHJ1ZSwiaG91cjBfMTEiOnRydWUsImhvdXIxXzEyIjp0cnVlfX07RC5nZXRJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3JldHVybiB0aGlzLmdldERhdGVJbnN0YW5jZShmLGwpfTtELmdldERhdGVJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3JldHVybiB0aGlzLmNyZWF0ZUluc3RhbmNlKGYsbCx0aGlzLm9EYXRlSW5mbyl9O0QuZ2V0RGF0ZVRpbWVJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3JldHVybiB0aGlzLmNyZWF0ZUluc3RhbmNlKGYsbCx0aGlzLm9EYXRlVGltZUluZm8pfTtELmdldFRpbWVJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3JldHVybiB0aGlzLmNyZWF0ZUluc3RhbmNlKGYsbCx0aGlzLm9UaW1lSW5mbyl9O0QuY3JlYXRlSW5zdGFuY2U9ZnVuY3Rpb24oZixsLEkpe3ZhciBGPXEuc2FwLm5ld09iamVjdCh0aGlzLnByb3RvdHlwZSk7aWYoZiBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkxvY2FsZSl7bD1mO2Y9dW5kZWZpbmVkfWlmKCFsKXtsPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldEZvcm1hdFNldHRpbmdzKCkuZ2V0Rm9ybWF0TG9jYWxlKCl9Ri5vTG9jYWxlPWw7Ri5vTG9jYWxlRGF0YT1MLmdldEluc3RhbmNlKGwpO0Yub0Zvcm1hdE9wdGlvbnM9cS5leHRlbmQoZmFsc2Use30sSS5vRGVmYXVsdEZvcm1hdE9wdGlvbnMsZik7aWYoIUYub0Zvcm1hdE9wdGlvbnMucGF0dGVybil7Ri5vRm9ybWF0T3B0aW9ucy5wYXR0ZXJuPUkuZ2V0UGF0dGVybihGLm9Mb2NhbGVEYXRhLEYub0Zvcm1hdE9wdGlvbnMuc3R5bGUpfWlmKCFJLmFGYWxsYmFja0Zvcm1hdHMpe0kuYUZhbGxiYWNrRm9ybWF0cz1bXTtxLmVhY2goSS5hRmFsbGJhY2tGb3JtYXRPcHRpb25zLGZ1bmN0aW9uKGksZil7dmFyIG89RC5jcmVhdGVJbnN0YW5jZShmLGwsSSk7by5iSXNGYWxsYmFjaz10cnVlO0kuYUZhbGxiYWNrRm9ybWF0cy5wdXNoKG8pfSl9Ri5hRmFsbGJhY2tGb3JtYXRzPUkuYUZhbGxiYWNrRm9ybWF0cztGLm9SZXF1aXJlZFBhcnRzPUkub1JlcXVpcmVkUGFydHM7Ri5pbml0KCk7cmV0dXJuIEZ9O0QucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLmFNb250aHNBYmJyZXY9dGhpcy5vTG9jYWxlRGF0YS5nZXRNb250aHMoImFiYnJldmlhdGVkIik7dGhpcy5hTW9udGhzV2lkZT10aGlzLm9Mb2NhbGVEYXRhLmdldE1vbnRocygid2lkZSIpO3RoaXMuYU1vbnRoc0FiYnJldlN0PXRoaXMub0xvY2FsZURhdGEuZ2V0TW9udGhzU3RhbmRBbG9uZSgiYWJicmV2aWF0ZWQiKTt0aGlzLmFNb250aHNXaWRlU3Q9dGhpcy5vTG9jYWxlRGF0YS5nZXRNb250aHNTdGFuZEFsb25lKCJ3aWRlIik7dGhpcy5hRGF5c0FiYnJldj10aGlzLm9Mb2NhbGVEYXRhLmdldERheXMoImFiYnJldmlhdGVkIik7dGhpcy5hRGF5c1dpZGU9dGhpcy5vTG9jYWxlRGF0YS5nZXREYXlzKCJ3aWRlIik7dGhpcy5hRGF5c0FiYnJldlN0PXRoaXMub0xvY2FsZURhdGEuZ2V0RGF5c1N0YW5kQWxvbmUoImFiYnJldmlhdGVkIik7dGhpcy5hRGF5c1dpZGVTdD10aGlzLm9Mb2NhbGVEYXRhLmdldERheXNTdGFuZEFsb25lKCJ3aWRlIik7dGhpcy5hRGF5UGVyaW9kcz10aGlzLm9Mb2NhbGVEYXRhLmdldERheVBlcmlvZHMoImFiYnJldmlhdGVkIik7dGhpcy5hRm9ybWF0QXJyYXk9dGhpcy5wYXJzZUphdmFEYXRlRm9ybWF0KHRoaXMub0Zvcm1hdE9wdGlvbnMucGF0dGVybil9O0QucHJvdG90eXBlLm9TdGF0ZXM9eyJHIjoiZXJhIiwieSI6InllYXIiLCJZIjoid2Vla1llYXIiLCJNIjoibW9udGgiLCJMIjoibW9udGhTdGFuZGFsb25lIiwidyI6IndlZWtJblllYXIiLCJXIjoid2Vla0luTW9udGgiLCJEIjoiZGF5SW5ZZWFyIiwiZCI6ImRheSIsIkYiOiJkYXlPZldlZWtJbk1vbnRoIiwiRSI6ImRheU5hbWVJbldlZWsiLCJjIjoiZGF5TmFtZUluV2Vla1N0YW5kYWxvbmUiLCJ1IjoiZGF5TnVtYmVyT2ZXZWVrIiwiYSI6ImFtUG1NYXJrZXIiLCJIIjoiaG91cjBfMjMiLCJrIjoiaG91cjFfMjQiLCJLIjoiaG91cjBfMTEiLCJoIjoiaG91cjFfMTIiLCJtIjoibWludXRlIiwicyI6InNlY29uZCIsIlMiOiJtaWxsaXNlY29uZCIsInoiOiJ0aW1lem9uZUdlbmVyYWwiLCJaIjoidGltZXpvbmVSRkM4MjIiLCJYIjoidGltZXpvbmVJU084NjAxIn07RC5wcm90b3R5cGUuZm9ybWF0PWZ1bmN0aW9uKGQsdSl7aWYodT09PXVuZGVmaW5lZCl7dT10aGlzLm9Gb3JtYXRPcHRpb25zLlVUQ312YXIgYj1bXSxwLGE9dT9kLmdldFVUQ0RheSgpOmQuZ2V0RGF5KCksYz11P2QuZ2V0VVRDRGF0ZSgpOmQuZ2V0RGF0ZSgpLG09dT9kLmdldFVUQ01vbnRoKCk6ZC5nZXRNb250aCgpLHk9dT9kLmdldFVUQ0Z1bGxZZWFyKCk6ZC5nZXRGdWxsWWVhcigpLE09dT9kLmdldFVUQ01pbGxpc2Vjb25kcygpOmQuZ2V0TWlsbGlzZWNvbmRzKCkscz11P2QuZ2V0VVRDU2Vjb25kcygpOmQuZ2V0U2Vjb25kcygpLGU9dT9kLmdldFVUQ01pbnV0ZXMoKTpkLmdldE1pbnV0ZXMoKSxoPXU/ZC5nZXRVVENIb3VycygpOmQuZ2V0SG91cnMoKSx0PU1hdGguYWJzKGQuZ2V0VGltZXpvbmVPZmZzZXQoKSksUD1kLmdldFRpbWV6b25lT2Zmc2V0KCk+MCxIPU1hdGguZmxvb3IodC82MCksZj10JTYwLFksdyxnLHI7Zm9yKHZhciBpPTA7aTx0aGlzLmFGb3JtYXRBcnJheS5sZW5ndGg7aSsrKXtwPXRoaXMuYUZvcm1hdEFycmF5W2ldO3N3aXRjaChwLnNUeXBlKXtjYXNlInRleHQiOmIucHVzaChwLnNWYWx1ZSk7YnJlYWs7Y2FzZSJkYXkiOmIucHVzaChxLnNhcC5wYWRMZWZ0KFN0cmluZyhjKSwiMCIscC5pRGlnaXRzKSk7YnJlYWs7Y2FzZSJkYXlOYW1lSW5XZWVrIjppZihwLmlEaWdpdHM8NCl7Yi5wdXNoKHRoaXMuYURheXNBYmJyZXZbYV0pfWVsc2UgaWYocC5pRGlnaXRzPj00KXtiLnB1c2godGhpcy5hRGF5c1dpZGVbYV0pfWJyZWFrO2Nhc2UiZGF5TmFtZUluV2Vla1N0YW5kYWxvbmUiOmlmKHAuaURpZ2l0czw0KXtiLnB1c2godGhpcy5hRGF5c0FiYnJldlN0W2FdKX1lbHNlIGlmKHAuaURpZ2l0cz49NCl7Yi5wdXNoKHRoaXMuYURheXNXaWRlU3RbYV0pfWJyZWFrO2Nhc2UiZGF5TnVtYmVyT2ZXZWVrIjpiLnB1c2goYXx8Nyk7YnJlYWs7Y2FzZSJtb250aCI6aWYocC5pRGlnaXRzPT0zKXtiLnB1c2godGhpcy5hTW9udGhzQWJicmV2W21dKX1lbHNlIGlmKHAuaURpZ2l0cz49NCl7Yi5wdXNoKHRoaXMuYU1vbnRoc1dpZGVbbV0pfWVsc2V7Yi5wdXNoKHEuc2FwLnBhZExlZnQoU3RyaW5nKG0rMSksIjAiLHAuaURpZ2l0cykpfWJyZWFrO2Nhc2UibW9udGhTdGFuZGFsb25lIjppZihwLmlEaWdpdHM9PTMpe2IucHVzaCh0aGlzLmFNb250aHNBYmJyZXZTdFttXSl9ZWxzZSBpZihwLmlEaWdpdHM+PTQpe2IucHVzaCh0aGlzLmFNb250aHNXaWRlU3RbbV0pfWVsc2V7Yi5wdXNoKHEuc2FwLnBhZExlZnQoU3RyaW5nKG0rMSksIjAiLHAuaURpZ2l0cykpfWJyZWFrO2Nhc2UiZXJhIjpiLnB1c2goIkFEIik7YnJlYWs7Y2FzZSJ5ZWFyIjpjYXNlIndlZWtZZWFyIjpZPSIiK3k7aWYocC5pRGlnaXRzPT0yJiZZLmxlbmd0aD4yKXtZPVkuc3Vic3RyKFkubGVuZ3RoLTIpfWIucHVzaChxLnNhcC5wYWRMZWZ0KFksIjAiLHAuaURpZ2l0cykpO2JyZWFrO2Nhc2Uid2Vla0luWWVhciI6dz0iIjtpZihkLmdldFdlZWspe3crPWQuZ2V0V2VlaygpfWIucHVzaChxLnNhcC5wYWRMZWZ0KHcsIjAiLHAuaURpZ2l0cykpO2JyZWFrO2Nhc2UiaG91cjBfMjMiOmIucHVzaChxLnNhcC5wYWRMZWZ0KFN0cmluZyhoKSwiMCIscC5pRGlnaXRzKSk7YnJlYWs7Y2FzZSJob3VyMV8yNCI6aWYoaD09MCl7Zz0iMjQifWVsc2V7Zz1TdHJpbmcoaCl9Yi5wdXNoKHEuc2FwLnBhZExlZnQoZywiMCIscC5pRGlnaXRzKSk7YnJlYWs7Y2FzZSJob3VyMF8xMSI6aWYoaD4xMSl7Zz1TdHJpbmcoaC0xMil9ZWxzZXtnPVN0cmluZyhoKX1iLnB1c2gocS5zYXAucGFkTGVmdChnLCIwIixwLmlEaWdpdHMpKTticmVhaztjYXNlImhvdXIxXzEyIjppZihoPjEyKXtnPVN0cmluZyhoLTEyKX1lbHNlIGlmKGg9PTApe2c9IjEyIn1lbHNle2c9U3RyaW5nKGgpfWIucHVzaChxLnNhcC5wYWRMZWZ0KGcsIjAiLHAuaURpZ2l0cykpO2JyZWFrO2Nhc2UibWludXRlIjpiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcoZSksIjAiLHAuaURpZ2l0cykpO2JyZWFrO2Nhc2Uic2Vjb25kIjpiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcocyksIjAiLHAuaURpZ2l0cykpO2JyZWFrO2Nhc2UibWlsbGlzZWNvbmQiOmIucHVzaChxLnNhcC5wYWRMZWZ0KFN0cmluZyhNKSwiMCIscC5pRGlnaXRzKSk7YnJlYWs7Y2FzZSJhbVBtTWFya2VyIjp2YXIgaj1oPDEyPzA6MTtiLnB1c2godGhpcy5hRGF5UGVyaW9kc1tqXSk7YnJlYWs7Y2FzZSJ0aW1lem9uZUdlbmVyYWwiOmlmKHAuaURpZ2l0cz4zJiZkLmdldFRpbWV6b25lTG9uZyl7Yi5wdXNoKGQuZ2V0VGltZXpvbmVMb25nKCkpO2JyZWFrfWVsc2UgaWYoZC5nZXRUaW1lem9uZVNob3J0KXtiLnB1c2goZC5nZXRUaW1lem9uZVNob3J0KCkpO2JyZWFrfWIucHVzaCgiR01UIik7Y2FzZSJ0aW1lem9uZUlTTzg2MDEiOmlmKCF1JiZ0IT0wKXtiLnB1c2goUD8iLSI6IisiKTtiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcoSCksIjAiLDIpKTtiLnB1c2goIjoiKTtiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcoZiksIjAiLDIpKX1lbHNle2IucHVzaCgiWiIpfWJyZWFrO2Nhc2UidGltZXpvbmVSRkM4MjIiOmlmKCF1JiZ0IT0wKXtiLnB1c2goUD8iLSI6IisiKTtiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcoSCksIjAiLDIpKTtiLnB1c2gocS5zYXAucGFkTGVmdChTdHJpbmcoZiksIjAiLDIpKX1icmVha319cj1iLmpvaW4oIiIpO2lmKHNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldE9yaWdpbkluZm8oKSl7cj1uZXcgU3RyaW5nKHIpO3Iub3JpZ2luSW5mbz17c291cmNlOiJDb21tb24gTG9jYWxlIERhdGEgUmVwb3NpdG9yeSIsbG9jYWxlOnRoaXMub0xvY2FsZS50b1N0cmluZygpLHN0eWxlOnRoaXMub0Zvcm1hdE9wdGlvbnMuc3R5bGUscGF0dGVybjp0aGlzLm9Gb3JtYXRPcHRpb25zLnBhdHRlcm59fXJldHVybiByfTtELnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih2LHUpe2lmKHU9PT11bmRlZmluZWQpe3U9dGhpcy5vRm9ybWF0T3B0aW9ucy5VVEN9dmFyIGQsST0wLGU9ZmFsc2UsYT1udWxsLG09bnVsbCx5PW51bGwsaD1udWxsLE09bnVsbCxzPW51bGwsYj1udWxsLHA9ZmFsc2UsUCxjLHQ9bnVsbCxWPXRydWUscj10aGlzLm9SZXF1aXJlZFBhcnRzO2Z1bmN0aW9uIGYoQyl7cmV0dXJuIEM+PTQ4JiZDPD01N31mdW5jdGlvbiBnKHcpe3ZhciB4PTA7d2hpbGUoeDx3JiZmKHYuY2hhckNvZGVBdChJK3gpKSl7eCsrfXJldHVybiB2LnN1YnN0cihJLHgpfWZ1bmN0aW9uIGoodyl7dmFyIGk7Zm9yKGk9MDtpPHcubGVuZ3RoO2krKyl7aWYodi5pbmRleE9mKHdbaV0sSSk9PUkpe3JldHVybiB3W2ldfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBrKHcpe3ZhciBpO2ZvcihpPTA7aTx3Lmxlbmd0aDtpKyspe2lmKHYuaW5kZXhPZih3W2ldLEkpPT1JKXtyZXR1cm4gaX19cmV0dXJuIG51bGx9ZnVuY3Rpb24gbCh3KXt2YXIgeD12LmNoYXJBdChJKT09IisiPy0xOjE7SSsrO2M9ZygyKTt2YXIgej1wYXJzZUludChjLDEwKTtJPUkrMjtpZih3KXtJKyt9Yz1nKDIpO0k9SSsyO3Q9cGFyc2VJbnQoYywxMCk7dD0odCs2MCp6KSp4fWZ1bmN0aW9uIG4odyx4KXtpZih3IGluIHImJngpe1Y9ZmFsc2V9fXY9cS50cmltKHYpO2Zvcih2YXIgaT0wO2k8dGhpcy5hRm9ybWF0QXJyYXkubGVuZ3RoO2krKyl7UD10aGlzLmFGb3JtYXRBcnJheVtpXTtzd2l0Y2goUC5zVHlwZSl7Y2FzZSJ0ZXh0IjppZih2LmluZGV4T2YoUC5zVmFsdWUsSSk9PUkpe0krPVAuc1ZhbHVlLmxlbmd0aH1lbHNle24oUC5zVHlwZSx0aGlzLmFGb3JtYXRBcnJheVtpKzFdLnNUeXBlIGluIHIpfWJyZWFrO2Nhc2UiZGF5IjpjPWcoTWF0aC5tYXgoUC5pRGlnaXRzLDIpKTtuKFAuc1R5cGUsYz09PSIiKTtJKz1jLmxlbmd0aDthPXBhcnNlSW50KGMsMTApO2JyZWFrO2Nhc2UiZGF5TmFtZUluV2VlayI6Y2FzZSJkYXlOYW1lSW5XZWVrU3RhbmRhbG9uZSI6Yz1qKHRoaXMuYURheXNXaWRlKTtpZihjKXtJKz1jLmxlbmd0aDticmVha31jPWoodGhpcy5hRGF5c1dpZGVTdCk7aWYoYyl7SSs9Yy5sZW5ndGg7YnJlYWt9Yz1qKHRoaXMuYURheXNBYmJyZXYpO2lmKGMpe0krPWMubGVuZ3RoO2JyZWFrfWM9aih0aGlzLmFEYXlzQWJicmV2U3QpO2lmKGMpe0krPWMubGVuZ3RoO2JyZWFrfWJyZWFrO2Nhc2UiZGF5TnVtYmVyT2ZXZWVrIjpjPWcoUC5pRGlnaXRzKTtJKz1jLmxlbmd0aDticmVhaztjYXNlIm1vbnRoIjpjYXNlIm1vbnRoU3RhbmRhbG9uZSI6aWYoUC5pRGlnaXRzPDMpe2M9ZyhNYXRoLm1heChQLmlEaWdpdHMsMikpO24oUC5zVHlwZSxjPT09IiIpO209cGFyc2VJbnQoYywxMCktMTtJKz1jLmxlbmd0aH1lbHNle209ayh0aGlzLmFNb250aHNXaWRlKTtpZihtIT1udWxsKXtJKz10aGlzLmFNb250aHNXaWRlW21dLmxlbmd0aDticmVha31tPWsodGhpcy5hTW9udGhzV2lkZVN0KTtpZihtIT1udWxsKXtJKz10aGlzLmFNb250aHNXaWRlU3RbbV0ubGVuZ3RoO2JyZWFrfW09ayh0aGlzLmFNb250aHNBYmJyZXYpO2lmKG0hPW51bGwpe0krPXRoaXMuYU1vbnRoc0FiYnJldlttXS5sZW5ndGg7YnJlYWt9bT1rKHRoaXMuYU1vbnRoc0FiYnJldlN0KTtpZihtIT1udWxsKXtJKz10aGlzLmFNb250aHNBYmJyZXZTdFttXS5sZW5ndGg7YnJlYWt9bihQLnNUeXBlLHRydWUpfWJyZWFrO2Nhc2UiZXJhIjpicmVhaztjYXNlInllYXIiOmNhc2Uid2Vla1llYXIiOmlmKFAuaURpZ2l0cz09MSl7Yz1nKDQpO0krPWMubGVuZ3RofWVsc2UgaWYoUC5pRGlnaXRzPT0yKXtjPWcoMik7aWYoYy5sZW5ndGg9PTIpe3k9cGFyc2VJbnQoYywxMCk7aWYoeTw5MCl7Yz0iMjAiK2N9ZWxzZXtjPSIxOSIrY31JKz0yfWVsc2V7SSs9Yy5sZW5ndGh9fWVsc2V7Yz1nKFAuaURpZ2l0cyk7SSs9Yy5sZW5ndGh9bihQLnNUeXBlLGM9PT0iIik7eT1wYXJzZUludChjLDEwKTticmVhaztjYXNlIndlZWtJblllYXIiOmJyZWFrO2Nhc2UiaG91cjBfMjMiOmM9ZyhNYXRoLm1heChQLmlEaWdpdHMsMikpO24oUC5zVHlwZSxjPT09IiIpO0krPWMubGVuZ3RoO2g9cGFyc2VJbnQoYywxMCk7YnJlYWs7Y2FzZSJob3VyMV8yNCI6Yz1nKE1hdGgubWF4KFAuaURpZ2l0cywyKSk7bihQLnNUeXBlLGM9PT0iIik7SSs9Yy5sZW5ndGg7aD1wYXJzZUludChjLDEwKTtpZihoPT0yNCl7aD0wfWJyZWFrO2Nhc2UiaG91cjBfMTEiOmM9ZyhNYXRoLm1heChQLmlEaWdpdHMsMikpO24oUC5zVHlwZSxjPT09IiIpO0krPWMubGVuZ3RoO2g9cGFyc2VJbnQoYywxMCk7YnJlYWs7Y2FzZSJob3VyMV8xMiI6Yz1nKE1hdGgubWF4KFAuaURpZ2l0cywyKSk7bihQLnNUeXBlLGM9PT0iIik7SSs9Yy5sZW5ndGg7aD1wYXJzZUludChjLDEwKTtpZihoPT0xMil7aD0wfWJyZWFrO2Nhc2UibWludXRlIjpjPWcoTWF0aC5tYXgoUC5pRGlnaXRzLDIpKTtuKFAuc1R5cGUsYz09PSIiKTtJKz1jLmxlbmd0aDtNPXBhcnNlSW50KGMsMTApO2JyZWFrO2Nhc2Uic2Vjb25kIjpjPWcoTWF0aC5tYXgoUC5pRGlnaXRzLDIpKTtuKFAuc1R5cGUsYz09PSIiKTtJKz1jLmxlbmd0aDtzPXBhcnNlSW50KGMsMTApO2JyZWFrO2Nhc2UibWlsbGlzZWNvbmQiOmM9ZyhNYXRoLm1heChQLmlEaWdpdHMsMykpO2M9cS5zYXAucGFkUmlnaHQoYywiMCIsMyk7SSs9Yy5sZW5ndGg7Yj1wYXJzZUludChjLDEwKTticmVhaztjYXNlImFtUG1NYXJrZXIiOnZhciBBPXRoaXMuYURheVBlcmlvZHNbMF0sbz10aGlzLmFEYXlQZXJpb2RzWzFdO2lmKHYuaW5kZXhPZihBLEkpPT1JKXtwPWZhbHNlO0krPTJ9ZWxzZSBpZih2LmluZGV4T2YobyxJKT09SSl7cD10cnVlO0krPTJ9YnJlYWs7Y2FzZSJ0aW1lem9uZUdlbmVyYWwiOnZhciBUPXYuc3Vic3RyaW5nKEksSSszKTtpZihUPT09IkdNVCJ8fFQ9PT0iVVRDIil7ST1JKzN9ZWxzZSBpZih2LnN1YnN0cmluZyhJLEkrMik9PT0iVVQiKXtJPUkrMn1lbHNlIGlmKHYuY2hhckF0KEkpPT0iWiIpe0k9SSsxO3Q9MDticmVha31lbHNle3Euc2FwLmxvZy5lcnJvcih2KyIgY2Fubm90IGJlIHBhcnNlZCBjb3JyZWNseSBieSBzYXAudWkuY29yZS5mb3JtYXQuRGF0ZUZvcm1hdDogVGhlIGdpdmVuIHRpbWV6b25lIGlzIG5vdCBzdXBwb3J0ZWQhIik7YnJlYWt9Y2FzZSJ0aW1lem9uZUlTTzg2MDEiOmlmKHYuY2hhckF0KEkpPT0iWiIpe0k9SSsxO3Q9MDticmVha31sKHRydWUpO2JyZWFrO2Nhc2UidGltZXpvbmVSRkM4MjIiOmwoZmFsc2UpO2JyZWFrfWlmKCFWKXticmVha319aWYoSTx2Lmxlbmd0aCl7Vj1mYWxzZX1pZihwKXtoKz0xMn1pZihWKXtpZih0IT1udWxsKXtkPW5ldyBEYXRlKDApO2Quc2V0VVRDRnVsbFllYXIoeXx8MTk3MCk7ZC5zZXRVVENNb250aChtfHwwKTtkLnNldFVUQ0RhdGUoYXx8MSk7ZC5zZXRVVENIb3VycyhofHwwKTtkLnNldFVUQ01pbnV0ZXMoKE18fDApK3QpO2Quc2V0VVRDU2Vjb25kcyhzfHwwKTtkLnNldFVUQ01pbGxpc2Vjb25kcyhifHwwKX1lbHNlIGlmKHUpe2Q9bmV3IERhdGUoMCk7ZC5zZXRVVENGdWxsWWVhcih5fHwxOTcwKTtkLnNldFVUQ01vbnRoKG18fDApO2Quc2V0VVRDRGF0ZShhfHwxKTtkLnNldFVUQ0hvdXJzKGh8fDApO2Quc2V0VVRDTWludXRlcyhNfHwwKTtkLnNldFVUQ1NlY29uZHMoc3x8MCk7ZC5zZXRVVENNaWxsaXNlY29uZHMoYnx8MCl9ZWxzZXtkPW5ldyBEYXRlKDE5NzAsMCwxLDAsMCwwKTtkLnNldEZ1bGxZZWFyKHl8fDE5NzApO2Quc2V0TW9udGgobXx8MCk7ZC5zZXREYXRlKGF8fDEpO2Quc2V0SG91cnMoaHx8MCk7ZC5zZXRNaW51dGVzKE18fDApO2Quc2V0U2Vjb25kcyhzfHwwKTtkLnNldE1pbGxpc2Vjb25kcyhifHwwKX1yZXR1cm4gZH1pZighdGhpcy5iSXNGYWxsYmFjayl7cS5lYWNoKHRoaXMuYUZhbGxiYWNrRm9ybWF0cyxmdW5jdGlvbihpLEYpe2Q9Ri5wYXJzZSh2KTtpZihkKXtyZXR1cm4gZmFsc2V9fSk7cmV0dXJuIGR9cmV0dXJuIG51bGx9O0QucHJvdG90eXBlLnBhcnNlSmF2YURhdGVGb3JtYXQ9ZnVuY3Rpb24oZil7dmFyIEY9W10saSxRPWZhbHNlLGM9bnVsbCxzPSIiLG49IiI7Zm9yKGk9MDtpPGYubGVuZ3RoO2krKyl7dmFyIEM9Zi5jaGFyQXQoaSksTixwLFA7aWYoUSl7aWYoQz09IiciKXtwPWYuY2hhckF0KGktMSk7UD1mLmNoYXJBdChpLTIpO049Zi5jaGFyQXQoaSsxKTtpZihwPT0iJyImJlAhPSInIil7UT1mYWxzZX1lbHNlIGlmKE49PSInIil7aSs9MX1lbHNle1E9ZmFsc2U7Y29udGludWV9fWlmKHM9PSJ0ZXh0Iil7Yy5zVmFsdWUrPUN9ZWxzZXtjPXtzVHlwZToidGV4dCIsc1ZhbHVlOkN9O0YucHVzaChjKTtzPSJ0ZXh0In19ZWxzZXtpZihDPT0iJyIpe1E9dHJ1ZX1lbHNlIGlmKHRoaXMub1N0YXRlc1tDXSl7bj10aGlzLm9TdGF0ZXNbQ107aWYocz09bil7Yy5pRGlnaXRzKyt9ZWxzZXtjPXtzVHlwZTpuLGlEaWdpdHM6MX07Ri5wdXNoKGMpO3M9bn19ZWxzZXtpZihzPT0idGV4dCIpe2Muc1ZhbHVlKz1DfWVsc2V7Yz17c1R5cGU6InRleHQiLHNWYWx1ZTpDfTtGLnB1c2goYyk7cz0idGV4dCJ9fX19cmV0dXJuIEZ9O3JldHVybiBEfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuZm9ybWF0Lk51bWJlckZvcm1hdCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLmZvcm1hdC5OdW1iZXJGb3JtYXQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9mb3JtYXQvTnVtYmVyRm9ybWF0IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2NvcmUvTG9jYWxlRGF0YSddLGZ1bmN0aW9uKHEsTCl7InVzZSBzdHJpY3QiO3ZhciBOPXNhcC51aS5iYXNlLk9iamVjdC5leHRlbmQoInNhcC51aS5jb3JlLmZvcm1hdC5OdW1iZXJGb3JtYXQiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihmKXt0aHJvdyBuZXcgRXJyb3IoKX19KTtOLm9EZWZhdWx0SW50ZWdlckZvcm1hdD17bWluSW50ZWdlckRpZ2l0czoxLG1heEludGVnZXJEaWdpdHM6OTksbWluRnJhY3Rpb25EaWdpdHM6MCxtYXhGcmFjdGlvbkRpZ2l0czowLGdyb3VwaW5nRW5hYmxlZDpmYWxzZSxncm91cGluZ1NlcGFyYXRvcjoiLCIsZGVjaW1hbFNlcGFyYXRvcjoiLiIscGx1c1NpZ246IisiLG1pbnVzU2lnbjoiLSIsaXNJbnRlZ2VyOnRydWV9O04ub0RlZmF1bHRGbG9hdEZvcm1hdD17bWluSW50ZWdlckRpZ2l0czoxLG1heEludGVnZXJEaWdpdHM6OTksbWluRnJhY3Rpb25EaWdpdHM6MCxtYXhGcmFjdGlvbkRpZ2l0czo5OSxncm91cGluZ0VuYWJsZWQ6dHJ1ZSxncm91cGluZ1NlcGFyYXRvcjoiLCIsZGVjaW1hbFNlcGFyYXRvcjoiLiIscGx1c1NpZ246IisiLG1pbnVzU2lnbjoiLSIsaXNJbnRlZ2VyOmZhbHNlfTtOLmdldEluc3RhbmNlPWZ1bmN0aW9uKGYsbCl7cmV0dXJuIHRoaXMuZ2V0RmxvYXRJbnN0YW5jZShmLGwpfTtOLmdldEZsb2F0SW5zdGFuY2U9ZnVuY3Rpb24oZixsKXt2YXIgRj10aGlzLmNyZWF0ZUluc3RhbmNlKGYsbCk7Ri5vRm9ybWF0T3B0aW9ucz1xLmV4dGVuZChmYWxzZSx7fSx0aGlzLm9EZWZhdWx0RmxvYXRGb3JtYXQsdGhpcy5nZXRMb2NhbGVGb3JtYXRPcHRpb25zKEYub0xvY2FsZURhdGEpLGYpO3JldHVybiBGfTtOLmdldEludGVnZXJJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3ZhciBGPXRoaXMuY3JlYXRlSW5zdGFuY2UoZixsKTtGLm9Gb3JtYXRPcHRpb25zPXEuZXh0ZW5kKGZhbHNlLHt9LHRoaXMub0RlZmF1bHRJbnRlZ2VyRm9ybWF0LHRoaXMuZ2V0TG9jYWxlRm9ybWF0T3B0aW9ucyhGLm9Mb2NhbGVEYXRhKSxmKTtyZXR1cm4gRn07Ti5jcmVhdGVJbnN0YW5jZT1mdW5jdGlvbihmLGwpe3ZhciBGPXEuc2FwLm5ld09iamVjdCh0aGlzLnByb3RvdHlwZSk7aWYoZiBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkxvY2FsZSl7bD1mO2Y9dW5kZWZpbmVkfWlmKCFsKXtsPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldEZvcm1hdFNldHRpbmdzKCkuZ2V0Rm9ybWF0TG9jYWxlKCl9Ri5vTG9jYWxlPWw7Ri5vTG9jYWxlRGF0YT1MLmdldEluc3RhbmNlKGwpO3JldHVybiBGfTtOLmdldExvY2FsZUZvcm1hdE9wdGlvbnM9ZnVuY3Rpb24obCl7cmV0dXJue3BsdXNTaWduOmwuZ2V0TnVtYmVyU3ltYm9sKCJwbHVzU2lnbiIpLG1pbnVzU2lnbjpsLmdldE51bWJlclN5bWJvbCgibWludXNTaWduIiksZGVjaW1hbFNlcGFyYXRvcjpsLmdldE51bWJlclN5bWJvbCgiZGVjaW1hbCIpLGdyb3VwaW5nU2VwYXJhdG9yOmwuZ2V0TnVtYmVyU3ltYm9sKCJncm91cCIpfX07Ti5wcm90b3R5cGUuZm9ybWF0PWZ1bmN0aW9uKHYpe3ZhciBuPXRoaXMuY29udmVydFRvRGVjaW1hbCh2KSxpPSIiLGY9IiIsZz0iIixyPSIiLHA9MCxsPTAsYj12PDAsZD0tMSxvPXRoaXMub0Zvcm1hdE9wdGlvbnM7aWYobj09Ik5hTiIpe3JldHVybiBufWlmKGIpe249bi5zdWJzdHIoMSl9ZD1uLmluZGV4T2YoIi4iKTtpZihkPi0xKXtpPW4uc3Vic3RyKDAsZCk7Zj1uLnN1YnN0cihkKzEpfWVsc2V7aT1ufWlmKGkubGVuZ3RoPG8ubWluSW50ZWdlckRpZ2l0cyl7aT1xLnNhcC5wYWRMZWZ0KGksIjAiLG8ubWluSW50ZWdlckRpZ2l0cyl9ZWxzZSBpZihpLmxlbmd0aD5vLm1heEludGVnZXJEaWdpdHMpe2k9cS5zYXAucGFkTGVmdCgiIiwiPyIsby5tYXhJbnRlZ2VyRGlnaXRzKX1pZihmLmxlbmd0aDxvLm1pbkZyYWN0aW9uRGlnaXRzKXtmPXEuc2FwLnBhZFJpZ2h0KGYsIjAiLG8ubWluRnJhY3Rpb25EaWdpdHMpfWVsc2UgaWYoZi5sZW5ndGg+by5tYXhGcmFjdGlvbkRpZ2l0cyl7Zj1mLnN1YnN0cigwLG8ubWF4RnJhY3Rpb25EaWdpdHMpfWw9aS5sZW5ndGg7aWYoby5ncm91cGluZ0VuYWJsZWQmJmw+Myl7cD1sJTN8fDM7Zz1pLnN1YnN0cigwLHApO3doaWxlKHA8aS5sZW5ndGgpe2crPW8uZ3JvdXBpbmdTZXBhcmF0b3I7Zys9aS5zdWJzdHIocCwzKTtwKz0zfWk9Z31pZihiKXtyPW8ubWludXNTaWdufXIrPWk7aWYoZil7cis9by5kZWNpbWFsU2VwYXJhdG9yK2Z9aWYoc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0T3JpZ2luSW5mbygpKXtyPW5ldyBTdHJpbmcocik7ci5vcmlnaW5JbmZvPXtzb3VyY2U6IkNvbW1vbiBMb2NhbGUgRGF0YSBSZXBvc2l0b3J5Iixsb2NhbGU6dGhpcy5vTG9jYWxlLnRvU3RyaW5nKCl9fXJldHVybiByfTtOLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih2KXt2YXIgbz10aGlzLm9Gb3JtYXRPcHRpb25zLHI9Il5cXHMqKFsrLV0/KD86WzAtOVxcIitvLmdyb3VwaW5nU2VwYXJhdG9yKyJdK3xbMC05XFwiK28uZ3JvdXBpbmdTZXBhcmF0b3IrIl0qXFwiK28uZGVjaW1hbFNlcGFyYXRvcisiWzAtOV0rKShbZUVdWystXVswLTldKyk/KVxccyokIixSPSJeXFxzKihbKy1dP1swLTlcXCIrby5ncm91cGluZ1NlcGFyYXRvcisiXSspXFxzKiQiLGc9bmV3IFJlZ0V4cCgiXFwiK28uZ3JvdXBpbmdTZXBhcmF0b3IsImciKSxkPW5ldyBSZWdFeHAoIlxcIitvLmRlY2ltYWxTZXBhcmF0b3IsImciKSxhLGI9MDtpZihvLmlzSW50ZWdlcil7YT1uZXcgUmVnRXhwKFIpfWVsc2V7YT1uZXcgUmVnRXhwKHIpfWlmKCFhLnRlc3Qodikpe3JldHVybiBOYU59dj12LnJlcGxhY2UoZywiIik7aWYoby5pc0ludGVnZXIpe2I9cGFyc2VJbnQodiwxMCl9ZWxzZXt2PXYucmVwbGFjZShkLCIuIik7Yj1wYXJzZUZsb2F0KHYpfXJldHVybiBifTtOLnByb3RvdHlwZS5jb252ZXJ0VG9EZWNpbWFsPWZ1bmN0aW9uKHYpe3ZhciBWPSIiK3YsbixiLGQsZixlLHA7aWYoVi5pbmRleE9mKCJlIik9PS0xJiZWLmluZGV4T2YoIkUiKT09LTEpe3JldHVybiBWfXZhciByPVYubWF0Y2goL14oWystXT8pKChcZCspKD86XC4oXGQrKSk/KVtlRV0oWystXT9cZCspJC8pO249clsxXT09Ii0iO2I9clsyXS5yZXBsYWNlKC9cLi9nLCIiKTtkPXJbM10/clszXS5sZW5ndGg6MDtmPXJbNF0/cls0XS5sZW5ndGg6MDtlPXBhcnNlSW50KHJbNV0sMTApO2lmKGU+MCl7aWYoZTxmKXtwPWQrZTtWPWIuc3Vic3RyKDAscCkrIi4iK2Iuc3Vic3RyKHApfWVsc2V7Vj1iO2UtPWY7Zm9yKHZhciBpPTA7aTxlO2krKyl7Vis9IjAifX19ZWxzZXtpZigtZTxkKXtwPWQrZTtWPWIuc3Vic3RyKDAscCkrIi4iK2Iuc3Vic3RyKHApfWVsc2V7Vj1iO2UrPWQ7Zm9yKHZhciBpPTA7aT5lO2ktLSl7Vj0iMCIrVn1WPSIwLiIrVn19aWYobil7Vj0iLSIrVn1yZXR1cm4gVn07cmV0dXJuIE59LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuQ29udHJvbGxlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLm12Yy5Db250cm9sbGVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL0NvbnRyb2xsZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIHI9e307dmFyIEM9RS5leHRlbmQoInNhcC51aS5jb3JlLm12Yy5Db250cm9sbGVyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obil7dmFyIHQ9bnVsbDtpZih0eXBlb2Yobik9PSJzdHJpbmciKXtpZighcltuXSl7cS5zYXAucmVxdWlyZSh7bW9kTmFtZTpuLHR5cGU6ImNvbnRyb2xsZXIifSk7aWYoIXJbbl0pe3Rocm93IG5ldyBFcnJvcigiQ29udHJvbGxlciB0eXBlICIrbisiIGlzIHN0aWxsIHVuZGVmaW5lZCBhZnRlciB0cnlpbmcgdG8gbG9hZCBpdC4iKX19dD1yW25dfUUuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKHQpe3EuZXh0ZW5kKHRoaXMscltuXSl9fX0pO3ZhciBjPXsib25Jbml0Ijp0cnVlLCJvbkV4aXQiOmZhbHNlLCJvbkJlZm9yZVJlbmRlcmluZyI6ZmFsc2UsIm9uQWZ0ZXJSZW5kZXJpbmciOnRydWV9O2Z1bmN0aW9uIGUobyxuKXt2YXIgYTtpZihzYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24pe3ZhciBiPXNhcC51aS5jb3JlLkN1c3RvbWl6aW5nQ29uZmlndXJhdGlvbi5nZXRDb250cm9sbGVyRXh0ZW5zaW9uKG4pO2lmKGIpe3ZhciBzPWIuY29udHJvbGxlck5hbWU7cS5zYXAubG9nLmluZm8oIkN1c3RvbWl6aW5nOiBDb250cm9sbGVyICciK24rIicgaXMgbm93IGV4dGVuZGVkIGJ5ICciK3MrIiciKTtpZighcltzXSYmIXEuc2FwLmdldE9iamVjdChzKSl7cS5zYXAucmVxdWlyZSh7bW9kTmFtZTpzLHR5cGU6ImNvbnRyb2xsZXIifSl9aWYoIXJbc10mJiFxLnNhcC5nZXRPYmplY3Qocykpe3Euc2FwLmxvZy5lcnJvcigiQXR0ZW1wdCB0byBsb2FkIEV4dGVuc2lvbiBDb250cm9sbGVyICIrcysiIHdhcyBub3Qgc3VjY2Vzc2Z1bCAtIGlzIHRoZSBDb250cm9sbGVyIGNvcnJlY3RseSBkZWZpbmVkIGluIGl0cyBmaWxlPyIpfWlmKGE9cltzXSl7Zm9yKHZhciBtIGluIGEpe2lmKGNbbV0hPT11bmRlZmluZWQpe3ZhciBPPW9bbV07aWYoTyYmdHlwZW9mIE89PT0iZnVuY3Rpb24iKXsoZnVuY3Rpb24obSxPKXtvW21dPWZ1bmN0aW9uKCl7aWYoY1ttXSl7Ty5hcHBseShvLGFyZ3VtZW50cyk7YVttXS5hcHBseShvLGFyZ3VtZW50cyl9ZWxzZXthW21dLmFwcGx5KG8sYXJndW1lbnRzKTtPLmFwcGx5KG8sYXJndW1lbnRzKX19fSkobSxPKX1lbHNle29bbV09YVttXX19ZWxzZXtvW21dPWFbbV19fXJldHVybiBvfWVsc2V7fX19cmV0dXJuIG99c2FwLnVpLmNvbnRyb2xsZXI9ZnVuY3Rpb24obixvKXtpZighbil7dGhyb3cgbmV3IEVycm9yKCJDb250cm9sbGVyIG5hbWUgKCdzTmFtZScgcGFyYW1ldGVyKSBpcyByZXF1aXJlZCIpfWlmKCFvKXtpZighcltuXSYmIXEuc2FwLmdldE9iamVjdChuKSl7cS5zYXAucmVxdWlyZSh7bW9kTmFtZTpuLHR5cGU6ImNvbnRyb2xsZXIifSl9aWYocltuXSl7dmFyIGE9bmV3IEMobik7YT1lKGEsbik7cmV0dXJuIGF9ZWxzZXt2YXIgYj1xLnNhcC5nZXRPYmplY3Qobik7aWYodHlwZW9mIGI9PT0iZnVuY3Rpb24iJiZiLnByb3RvdHlwZSBpbnN0YW5jZW9mIEMpe3ZhciBhPW5ldyBiKCk7YT1lKGEsbik7cmV0dXJuIGF9fXRocm93IG5ldyBFcnJvcigiQ29udHJvbGxlciAiK24rIiBjb3VsZG4ndCBiZSBpbnN0YW50aWF0ZWQiKX1lbHNle3Jbbl09b319O0MucHJvdG90eXBlLmdldFZpZXc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vVmlld307Qy5wcm90b3R5cGUuYnlJZD1mdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5vVmlldz90aGlzLm9WaWV3LmJ5SWQoaSk6dW5kZWZpbmVkfTtDLnByb3RvdHlwZS5jcmVhdGVJZD1mdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5vVmlldz90aGlzLm9WaWV3LmNyZWF0ZUlkKGkpOnVuZGVmaW5lZH07Qy5wcm90b3R5cGUuY29ubmVjdFRvVmlldz1mdW5jdGlvbih2KXt0aGlzLm9WaWV3PXY7aWYodGhpcy5vbkluaXQpe3YuYXR0YWNoQWZ0ZXJJbml0KHRoaXMub25Jbml0LHRoaXMpfWlmKHRoaXMub25FeGl0KXt2LmF0dGFjaEJlZm9yZUV4aXQodGhpcy5vbkV4aXQsdGhpcyl9aWYodGhpcy5vbkFmdGVyUmVuZGVyaW5nKXt2LmF0dGFjaEFmdGVyUmVuZGVyaW5nKHRoaXMub25BZnRlclJlbmRlcmluZyx0aGlzKX1pZih0aGlzLm9uQmVmb3JlUmVuZGVyaW5nKXt2LmF0dGFjaEJlZm9yZVJlbmRlcmluZyh0aGlzLm9uQmVmb3JlUmVuZGVyaW5nLHRoaXMpfX07cmV0dXJuIEN9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuSFRNTFZpZXdSZW5kZXJlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLm12Yy5IVE1MVmlld1JlbmRlcmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL0hUTUxWaWV3UmVuZGVyZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL1ZpZXdSZW5kZXJlciddLGZ1bmN0aW9uKHEsVil7InVzZSBzdHJpY3QiO3ZhciBIPXt9O0gucmVuZGVyPWZ1bmN0aW9uKHIsYyl7dmFyIGE9cjthLndyaXRlKCI8ZGl2Iik7YS53cml0ZUNvbnRyb2xEYXRhKGMpO2EuYWRkQ2xhc3MoInNhcFVpVmlldyIpO2EuYWRkQ2xhc3MoInNhcFVpSFRNTFZpZXciKTtWLmFkZERpc3BsYXlDbGFzcyhhLGMpO2lmKGMuZ2V0V2lkdGgoKSl7YS5hZGRTdHlsZSgid2lkdGgiLGMuZ2V0V2lkdGgoKSl9aWYoYy5nZXRIZWlnaHQoKSl7YS5hZGRTdHlsZSgiaGVpZ2h0IixjLmdldEhlaWdodCgpKX1hLndyaXRlU3R5bGVzKCk7YS53cml0ZUNsYXNzZXMoKTthLndyaXRlKCI+Iik7dmFyIGg9Yy5fb1RlbXBsYXRlLmlubmVySFRNTDt2YXIgYj1jLmdldENvbnRlbnQoKTt2YXIgZD1bXTt2YXIgZT1mdW5jdGlvbihjKXt2YXIgdD1ILl9nZXRIVE1MKGEsYyxoKTtpZih0KXtoPXR9ZWxzZXtkLnB1c2goYyl9fTtpZihiKXtpZihxLmlzQXJyYXkoYikpe2Zvcih2YXIgaT0wO2k8Yi5sZW5ndGg7aSsrKXtlKGJbaV0pfX1lbHNlIGlmKGIpe2UoYil9fWEud3JpdGUoaCk7Zm9yKHZhciBpPTA7aTxkLmxlbmd0aDtpKyspe2EucmVuZGVyQ29udHJvbChkW2ldKX1hLndyaXRlKCI8L2Rpdj4iKX07SC5fZ2V0SFRNTD1mdW5jdGlvbihyLGMsaCl7dmFyIGk9Yy5nZXRJZCgpO2g9aC5yZXBsYWNlKC8oPGRpdikvZ2ksIlxuJDEiKTt2YXIgYT1uZXcgUmVnRXhwKCc8ZGl2Lio/ZGF0YS1zYXAtdWktaWQ9IicraSsnIi4qPz48L2Rpdj4nLCJnaSIpO3ZhciBtPWEuZXhlYyhoKTtpZihtKXtoPWgucmVwbGFjZShtWzBdLHIuZ2V0SFRNTChjKSk7cmV0dXJuIGh9ZWxzZXtyZXR1cm4iIn19O3JldHVybiBIfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUubXZjLkpTT05WaWV3UmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuSlNPTlZpZXdSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL212Yy9KU09OVmlld1JlbmRlcmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9WaWV3UmVuZGVyZXInXSxmdW5jdGlvbihxLFYpeyJ1c2Ugc3RyaWN0Ijt2YXIgSj17fTtKLnJlbmRlcj1mdW5jdGlvbihyLGMpe3ZhciBhPXI7YS53cml0ZSgiPGRpdiIpO2Eud3JpdGVDb250cm9sRGF0YShjKTthLmFkZENsYXNzKCJzYXBVaVZpZXciKTthLmFkZENsYXNzKCJzYXBVaUpTT05WaWV3Iik7Vi5hZGREaXNwbGF5Q2xhc3MoYSxjKTtpZihjLmdldFdpZHRoKCkpe2EuYWRkU3R5bGUoIndpZHRoIixjLmdldFdpZHRoKCkpfWlmKGMuZ2V0SGVpZ2h0KCkpe2EuYWRkU3R5bGUoImhlaWdodCIsYy5nZXRIZWlnaHQoKSl9YS53cml0ZVN0eWxlcygpO2Eud3JpdGVDbGFzc2VzKCk7YS53cml0ZSgiPiIpO3ZhciBiPWMuZ2V0Q29udGVudCgpO2lmKGIpe2lmKGIubGVuZ3RoJiYhKGIgaW5zdGFuY2VvZiBzYXAudWkuY29yZS5Db250cm9sKSl7Zm9yKHZhciBpPTA7aTxiLmxlbmd0aDtpKyspe2EucmVuZGVyQ29udHJvbChiW2ldKX19ZWxzZXthLnJlbmRlckNvbnRyb2woYy5nZXRDb250ZW50KCkpfX1hLndyaXRlKCI8L2Rpdj4iKX07cmV0dXJuIEp9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuSlNWaWV3UmVuZGVyZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuSlNWaWV3UmVuZGVyZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9tdmMvSlNWaWV3UmVuZGVyZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL1ZpZXdSZW5kZXJlciddLGZ1bmN0aW9uKHEsVil7InVzZSBzdHJpY3QiO3ZhciBKPXt9O0oucmVuZGVyPWZ1bmN0aW9uKHIsYyl7dmFyIGE9cjthLndyaXRlKCI8ZGl2Iik7YS53cml0ZUNvbnRyb2xEYXRhKGMpO2EuYWRkQ2xhc3MoInNhcFVpVmlldyIpO2EuYWRkQ2xhc3MoInNhcFVpSlNWaWV3Iik7Vi5hZGREaXNwbGF5Q2xhc3MoYSxjKTtpZihjLmdldFdpZHRoKCkpe2EuYWRkU3R5bGUoIndpZHRoIixjLmdldFdpZHRoKCkpfWlmKGMuZ2V0SGVpZ2h0KCkpe2EuYWRkU3R5bGUoImhlaWdodCIsYy5nZXRIZWlnaHQoKSl9YS53cml0ZVN0eWxlcygpO2Eud3JpdGVDbGFzc2VzKCk7YS53cml0ZSgiPiIpO3ZhciBiPWMuZ2V0Q29udGVudCgpO2lmKGIpe2lmKHEuaXNBcnJheShiKSl7Zm9yKHZhciBpPTA7aTxiLmxlbmd0aDtpKyspe2EucmVuZGVyQ29udHJvbChiW2ldKX19ZWxzZSBpZihiKXthLnJlbmRlckNvbnRyb2woYil9fWEud3JpdGUoIjwvZGl2PiIpfTtyZXR1cm4gSn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLm12Yy5UZW1wbGF0ZVZpZXdSZW5kZXJlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLm12Yy5UZW1wbGF0ZVZpZXdSZW5kZXJlcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL212Yy9UZW1wbGF0ZVZpZXdSZW5kZXJlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vVmlld1JlbmRlcmVyJ10sZnVuY3Rpb24ocSxWKXsidXNlIHN0cmljdCI7dmFyIFQ9e307VC5yZW5kZXI9ZnVuY3Rpb24ocixjKXt2YXIgYT1yO2Eud3JpdGUoIjxkaXYiKTthLndyaXRlQ29udHJvbERhdGEoYyk7YS5hZGRDbGFzcygic2FwVWlWaWV3Iik7YS5hZGRDbGFzcygic2FwVWlUbXBsVmlldyIpO1YuYWRkRGlzcGxheUNsYXNzKGEsYyk7YS5hZGRTdHlsZSgid2lkdGgiLGMuZ2V0V2lkdGgoKSk7YS5hZGRTdHlsZSgiaGVpZ2h0IixjLmdldEhlaWdodCgpKTthLndyaXRlU3R5bGVzKCk7YS53cml0ZUNsYXNzZXMoKTthLndyaXRlKCI+Iik7YS5yZW5kZXJDb250cm9sKGMuX29UZW1wbGF0ZSk7YS53cml0ZSgiPC9kaXY+Iil9O3JldHVybiBUfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUucm91dGluZy5IYXNoQ2hhbmdlcicpKXsNCi8vIENvcHlyaWdodCAoYykgMjAxMyBTQVAgQUcsIEFsbCBSaWdodHMgUmVzZXJ2ZWQNCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUucm91dGluZy5IYXNoQ2hhbmdlcicpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkuc2lnbmFscycpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkuaGFzaGVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvcm91dGluZy9IYXNoQ2hhbmdlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCdzYXAvdWkvdGhpcmRwYXJ0eS9zaWduYWxzJywnc2FwL3VpL3RoaXJkcGFydHkvaGFzaGVyJ10sZnVuY3Rpb24ocSxFLHMsaCl7InVzZSBzdHJpY3QiO3ZhciBIPUUuZXh0ZW5kKCJzYXAudWkuY29yZS5yb3V0aW5nLkhhc2hDaGFuZ2VyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtFLmFwcGx5KHRoaXMpfX0pO0gucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXtpZih0aGlzLl9pbml0aWFsaXplZCl7cS5zYXAubG9nLmluZm8oInRoaXMgSGFzaENoYW5nZXIgaW5zdGFuY2UgaGFzIGFscmVhZHkgYmVlbiBpbml0aWFsaXplZC4iKTtyZXR1cm4gZmFsc2V9aGFzaGVyLmNoYW5nZWQuYWRkKHRoaXMuZmlyZUhhc2hDaGFuZ2VkLHRoaXMpO2lmKCFoYXNoZXIuaXNBY3RpdmUoKSl7aGFzaGVyLmluaXRpYWxpemVkLmFkZE9uY2UodGhpcy5maXJlSGFzaENoYW5nZWQsdGhpcyk7aGFzaGVyLmluaXQoKX1lbHNle3RoaXMuZmlyZUhhc2hDaGFuZ2VkKGhhc2hlci5nZXRIYXNoKCkpfXRoaXMuX2luaXRpYWxpemVkPXRydWU7cmV0dXJuIHRoaXMuX2luaXRpYWxpemVkfTtILnByb3RvdHlwZS5maXJlSGFzaENoYW5nZWQ9ZnVuY3Rpb24obixvKXt0aGlzLmZpcmVFdmVudCgiaGFzaENoYW5nZWQiLHtuZXdIYXNoOm4sb2xkSGFzaDpvfSl9O0gucHJvdG90eXBlLnNldEhhc2g9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoImhhc2hTZXQiLHtzSGFzaDphfSk7aGFzaGVyLnNldEhhc2goYSl9O0gucHJvdG90eXBlLnJlcGxhY2VIYXNoPWZ1bmN0aW9uKGEpe3RoaXMuZmlyZUV2ZW50KCJoYXNoUmVwbGFjZWQiLHtzSGFzaDphfSk7aGFzaGVyLnJlcGxhY2VIYXNoKGEpfTtILnByb3RvdHlwZS5nZXRIYXNoPWZ1bmN0aW9uKCl7cmV0dXJuIGhhc2hlci5nZXRIYXNoKCl9O0gucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtoYXNoZXIuY2hhbmdlZC5yZW1vdmUodGhpcy5maXJlSGFzaENoYW5nZWQsdGhpcyk7RS5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9OyhmdW5jdGlvbigpe3ZhciBfO0guZ2V0SW5zdGFuY2U9ZnVuY3Rpb24oKXtpZighXyl7Xz1uZXcgSCgpfXJldHVybiBffTtILnJlcGxhY2VIYXNoQ2hhbmdlcj1mdW5jdGlvbihvKXtpZihfKXtxLmV4dGVuZChvLm1FdmVudFJlZ2lzdHJ5LF8ubUV2ZW50UmVnaXN0cnkpO18uZGVzdHJveSgpfV89b319KCkpO3JldHVybiBIfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUucm91dGluZy5IaXN0b3J5Jykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUucm91dGluZy5IaXN0b3J5Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvcm91dGluZy9IaXN0b3J5IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9IYXNoQ2hhbmdlciddLGZ1bmN0aW9uKHEsSCl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKGgpe3RoaXMuX2lIaXN0b3J5TGVuZ3RoPXdpbmRvdy5oaXN0b3J5Lmxlbmd0aDt0aGlzLl9hSGlzdG9yeT1bXTt0aGlzLl9iSXNJbml0aWFsPXRydWU7aWYoIWgpe3Euc2FwLmxvZy5lcnJvcigic2FwLnVpLmNvcmUucm91dGluZy5IaXN0b3J5IGNvbnN0cnVjdG9yIHdhcyBjYWxsZWQgYW5kIGl0IGRpZCBub3QgZ2V0IGEgaGFzaENoYW5nZXIgYXMgcGFyYW1ldGVyIil9dGhpcy5fb0hhc2hDaGFuZ2VyPWg7dGhpcy5fb0hhc2hDaGFuZ2VyLmF0dGFjaEV2ZW50KCJoYXNoQ2hhbmdlZCIsdGhpcy5fb25IYXNoQ2hhbmdlLHRoaXMpO3RoaXMuX29IYXNoQ2hhbmdlci5hdHRhY2hFdmVudCgiaGFzaFJlcGxhY2VkIix0aGlzLl9oYXNoUmVwbGFjZWQsdGhpcyk7dGhpcy5fb0hhc2hDaGFuZ2VyLmF0dGFjaEV2ZW50KCJoYXNoU2V0Iix0aGlzLl9oYXNoU2V0LHRoaXMpO3RoaXMuX3Jlc2V0KCl9O2EucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24obil7dGhpcy5fb0hhc2hDaGFuZ2VyLmRldGFjaEV2ZW50KCJoYXNoQ2hhbmdlZCIsdGhpcy5fb25IYXNoQ2hhbmdlLHRoaXMpO3RoaXMuX29IYXNoQ2hhbmdlci5kZXRhY2hFdmVudCgiaGFzaFJlcGxhY2VkIix0aGlzLl9oYXNoUmVwbGFjZWQsdGhpcyk7dGhpcy5fb0hhc2hDaGFuZ2VyLmRldGFjaEV2ZW50KCJoYXNoU2V0Iix0aGlzLl9oYXNoU2V0LHRoaXMpO3RoaXMuX29IYXNoQ2hhbmdlcj1udWxsfTthLnByb3RvdHlwZS5nZXREaXJlY3Rpb249ZnVuY3Rpb24obil7aWYobiE9PXVuZGVmaW5lZCYmdGhpcy5fYklzSW5pdGlhbCl7cmV0dXJuIHVuZGVmaW5lZH1pZihuPT09dW5kZWZpbmVkKXtyZXR1cm4gdGhpcy5fc0N1cnJlbnREaXJlY3Rpb259cmV0dXJuIHRoaXMuX2dldERpcmVjdGlvbihuKX07YS5wcm90b3R5cGUuZ2V0UHJldmlvdXNIYXNoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FIaXN0b3J5W3RoaXMuX2lIaXN0b3J5UG9zaXRpb24tMV19O2EucHJvdG90eXBlLl9yZXNldD1mdW5jdGlvbigpe3RoaXMuX2FIaXN0b3J5Lmxlbmd0aD0wO3RoaXMuX2lIaXN0b3J5UG9zaXRpb249MDt0aGlzLl9iVW5rbm93bj10cnVlO3RoaXMuX2FIaXN0b3J5WzBdPXRoaXMuX29IYXNoQ2hhbmdlci5nZXRIYXNoKCl9O2EucHJvdG90eXBlLl9nZXREaXJlY3Rpb249ZnVuY3Rpb24obixoKXt2YXIgZD1zYXAudWkuY29yZS5yb3V0aW5nLkhpc3RvcnlEaXJlY3Rpb247aWYodGhpcy5fb05leHRIYXNoJiZ0aGlzLl9vTmV4dEhhc2guc0hhc2g9PT1uKXtyZXR1cm4gZC5OZXdFbnRyeX1pZih0aGlzLl9iVW5rbm93bil7cmV0dXJuIGQuVW5rbm93bn1pZihoKXtyZXR1cm4gZC5OZXdFbnRyeX1pZih0aGlzLl9hSGlzdG9yeVt0aGlzLl9pSGlzdG9yeVBvc2l0aW9uKzFdPT09biYmdGhpcy5fYUhpc3RvcnlbdGhpcy5faUhpc3RvcnlQb3NpdGlvbi0xXT09PW4pe3JldHVybiBkLlVua25vd259aWYodGhpcy5fYUhpc3RvcnlbdGhpcy5faUhpc3RvcnlQb3NpdGlvbi0xXT09PW4pe3JldHVybiBkLkJhY2t3YXJkc31pZih0aGlzLl9hSGlzdG9yeVt0aGlzLl9pSGlzdG9yeVBvc2l0aW9uKzFdPT09bil7cmV0dXJuIGQuRm9yd2FyZHN9cmV0dXJuIGQuVW5rbm93bn07YS5wcm90b3R5cGUuX29uSGFzaENoYW5nZT1mdW5jdGlvbihlKXt0aGlzLl9oYXNoQ2hhbmdlKGUuZ2V0UGFyYW1ldGVyKCJuZXdIYXNoIikpfTthLnByb3RvdHlwZS5faGFzaENoYW5nZT1mdW5jdGlvbihuKXt2YXIgZD1zYXAudWkuY29yZS5yb3V0aW5nLkhpc3RvcnlEaXJlY3Rpb24saD1xLmluQXJyYXkobix0aGlzLl9hSGlzdG9yeSksYj13aW5kb3cuaGlzdG9yeS5sZW5ndGgsRDtpZih0aGlzLl9vTmV4dEhhc2gmJnRoaXMuX29OZXh0SGFzaC5iV2FzUmVwbGFjZWQmJnRoaXMuX29OZXh0SGFzaC5zSGFzaD09PW4pe3RoaXMuX2FIaXN0b3J5W3RoaXMuX2lIaXN0b3J5UG9zaXRpb25dPW47dGhpcy5fb05leHRIYXNoPW51bGw7cmV0dXJufXRoaXMuX2JJc0luaXRpYWw9ZmFsc2U7RD10aGlzLl9zQ3VycmVudERpcmVjdGlvbj10aGlzLl9nZXREaXJlY3Rpb24obix0aGlzLl9pSGlzdG9yeUxlbmd0aDx3aW5kb3cuaGlzdG9yeS5sZW5ndGgpO2lmKHRoaXMuX29OZXh0SGFzaCYmIXRoaXMuX29OZXh0SGFzaC5iV2FzUmVwbGFjZWQpe3RoaXMuX2lIaXN0b3J5TGVuZ3RoPWIrMX1lbHNle3RoaXMuX2lIaXN0b3J5TGVuZ3RoPWJ9aWYodGhpcy5fb05leHRIYXNoKXt0aGlzLl9vTmV4dEhhc2g9bnVsbH1pZihEPT09ZC5Vbmtub3duKXt0aGlzLl9yZXNldCgpO3JldHVybn10aGlzLl9iVW5rbm93bj1mYWxzZTtpZihEPT09ZC5OZXdFbnRyeSl7aWYodGhpcy5faUhpc3RvcnlQb3NpdGlvbisxPHRoaXMuX2FIaXN0b3J5Lmxlbmd0aCl7dGhpcy5fYUhpc3Rvcnk9dGhpcy5fYUhpc3Rvcnkuc2xpY2UoMCx0aGlzLl9pSGlzdG9yeVBvc2l0aW9uKzEpfXRoaXMuX2FIaXN0b3J5LnB1c2gobik7dGhpcy5faUhpc3RvcnlQb3NpdGlvbis9MTtyZXR1cm59aWYoRD09PWQuRm9yd2FyZHMpe3RoaXMuX2lIaXN0b3J5UG9zaXRpb24rKztyZXR1cm59aWYoRD09PWQuQmFja3dhcmRzKXt0aGlzLl9pSGlzdG9yeVBvc2l0aW9uLS19fTthLnByb3RvdHlwZS5faGFzaFNldD1mdW5jdGlvbihlKXt0aGlzLl9oYXNoQ2hhbmdlZEJ5QXBwKGUuZ2V0UGFyYW1ldGVyKCJzSGFzaCIpLGZhbHNlKX07YS5wcm90b3R5cGUuX2hhc2hSZXBsYWNlZD1mdW5jdGlvbihlKXt0aGlzLl9oYXNoQ2hhbmdlZEJ5QXBwKGUuZ2V0UGFyYW1ldGVyKCJzSGFzaCIpLHRydWUpfTthLnByb3RvdHlwZS5faGFzaENoYW5nZWRCeUFwcD1mdW5jdGlvbihuLHcpe3RoaXMuX29OZXh0SGFzaD17c0hhc2g6bixiV2FzUmVwbGFjZWQ6d319OyhmdW5jdGlvbigpe3ZhciBpPW5ldyBhKEguZ2V0SW5zdGFuY2UoKSk7YS5nZXRJbnN0YW5jZT1mdW5jdGlvbigpe3JldHVybiBpfX0oKSk7cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5yb3V0aW5nLlJvdXRlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUucm91dGluZy5Sb3V0ZScpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkuY3Jvc3Nyb2FkcycpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkuc2lnbmFscycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3JvdXRpbmcvUm91dGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJywnc2FwL3VpL3RoaXJkcGFydHkvY3Jvc3Nyb2FkcycsJ3NhcC91aS90aGlyZHBhcnR5L3NpZ25hbHMnXSxmdW5jdGlvbihxLEUsYyxzKXsidXNlIHN0cmljdCI7dmFyIFI9RS5leHRlbmQoInNhcC51aS5jb3JlLnJvdXRpbmcuUm91dGUiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihyLEMscCl7aWYoIUMubmFtZSl7cS5zYXAubG9nLmVycm9yKCJBIG5hbWUgaGFzIHRvIGJlIHNwZWNpZmllZCBmb3IgZXZlcnkgcm91dGUiKX12YXIgdD10aGlzLHY9Qy5wYXR0ZXJuO2lmKCFxLmlzQXJyYXkodikpe3Y9W3ZdfWlmKHEuaXNBcnJheShDLnN1YnJvdXRlcykpe3ZhciBTPUMuc3Vicm91dGVzO0Muc3Vicm91dGVzPXt9O3EuZWFjaChTLGZ1bmN0aW9uKGksbyl7Qy5zdWJyb3V0ZXNbby5uYW1lXT1vfSl9dGhpcy5fYVBhdHRlcm49W107dGhpcy5fYVJvdXRlcz1bXTt0aGlzLl9vUGFyZW50PXA7dGhpcy5fb0NvbmZpZz1DO2lmKEMuc3Vicm91dGVzKXtxLmVhY2goQy5zdWJyb3V0ZXMsZnVuY3Rpb24oYSxvKXtpZihvLm5hbWU9PXVuZGVmaW5lZCl7by5uYW1lPWF9ci5hZGRSb3V0ZShvLHQpfSl9aWYoQy5wYXR0ZXJuPT09dW5kZWZpbmVkKXtyZXR1cm59cS5lYWNoKHYsZnVuY3Rpb24oaSxhKXt0Ll9hUGF0dGVybltpXT1hO3QuX2FSb3V0ZXNbaV09ci5fb1JvdXRlci5hZGRSb3V0ZShhKTt0Ll9hUm91dGVzW2ldLm1hdGNoZWQuYWRkKGZ1bmN0aW9uKCl7dmFyIEE9e307cS5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbihiLGQpe0FbdC5fYVJvdXRlc1tpXS5fcGFyYW1zSWRzW2JdXT1kfSk7dC5fcm91dGVNYXRjaGVkKHIsQSx0cnVlKX0pfSl9LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsiZ2V0VVJMIiwiZ2V0UGF0dGVybiJdfX0pO1IucHJvdG90eXBlLmdldFVSTD1mdW5jdGlvbihwKXtyZXR1cm4gdGhpcy5fYVJvdXRlc1swXS5pbnRlcnBvbGF0ZShwKX07Ui5wcm90b3R5cGUuZ2V0UGF0dGVybj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hUGF0dGVyblswXX07Ui5wcm90b3R5cGUuX3JvdXRlTWF0Y2hlZD1mdW5jdGlvbihyLGEsaSl7dmFyIHYscCx0LFQ7aWYodGhpcy5fb1BhcmVudCl7cD10aGlzLl9vUGFyZW50Ll9yb3V0ZU1hdGNoZWQocixhKTt0PXAub1RhcmdldFBhcmVudDtUPXAub1RhcmdldENvbnRyb2x9dmFyIEM9cS5leHRlbmQoe30sci5fb0NvbmZpZyx0aGlzLl9vQ29uZmlnKTtpZigoVHx8Qy50YXJnZXRDb250cm9sKSYmQy50YXJnZXRBZ2dyZWdhdGlvbil7aWYoIXQpe2lmKEMudGFyZ2V0UGFyZW50KXtUPXNhcC51aS5nZXRDb3JlKCkuYnlJZChDLnRhcmdldFBhcmVudCkuYnlJZChDLnRhcmdldENvbnRyb2wpfX1lbHNle2lmKEMudGFyZ2V0Q29udHJvbCl7VD10LmJ5SWQoQy50YXJnZXRDb250cm9sKX19aWYoIVQpe1Q9c2FwLnVpLmdldENvcmUoKS5ieUlkKEMudGFyZ2V0Q29udHJvbCl9aWYoVCl7dmFyIEE9VC5nZXRNZXRhZGF0YSgpLmdldEpTT05LZXlzKClbQy50YXJnZXRBZ2dyZWdhdGlvbl07aWYoQSl7dmFyIFY9Qy52aWV3O2lmKEMudmlld1BhdGgpe1Y9Qy52aWV3UGF0aCsiLiIrVn12PXIuZ2V0VmlldyhWLEMudmlld1R5cGUsQy52aWV3SWQpO2lmKEMuY2xlYXJUYXJnZXQ9PT10cnVlKXtUW0EuX3NSZW1vdmVBbGxNdXRhdG9yXSgpfVRbQS5fc011dGF0b3JdKHYpfWVsc2V7cS5zYXAubG9nLmVycm9yKCJDb250cm9sICIrQy50YXJnZXRDb250cm9sKyIgZG9lcyBub3QgaGFzIGFuIGFnZ3JlZ2F0aW9uIGNhbGxlZCAiK0MudGFyZ2V0QWdncmVnYXRpb24pfX1lbHNle3Euc2FwLmxvZy5lcnJvcigiQ29udHJvbCB3aXRoIElEICIrQy50YXJnZXRDb250cm9sKyIgY291bGQgbm90IGJlIGZvdW5kIil9fWlmKEMuY2FsbGJhY2spe0MuY2FsbGJhY2sodGhpcyxhLEMsVCx2KX1yLmZpcmVSb3V0ZU1hdGNoZWQoe25hbWU6Qy5uYW1lLGFyZ3VtZW50czphLHRhcmdldENvbnRyb2w6VCx2aWV3OnYsY29uZmlnOkN9KTtpZihpKXtyLmZpcmVSb3V0ZVBhdHRlcm5NYXRjaGVkKHtuYW1lOkMubmFtZSxhcmd1bWVudHM6YSx0YXJnZXRDb250cm9sOlQsdmlldzp2LGNvbmZpZzpDfSl9cmV0dXJue29UYXJnZXRQYXJlbnQ6dixvVGFyZ2V0Q29udHJvbDpUfX07cmV0dXJuIFJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuU2VyaWFsaXplcicpKXsNCi8qCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLlNlcmlhbGl6ZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS91dGlsL3NlcmlhbGl6ZXIvU2VyaWFsaXplciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInXSxmdW5jdGlvbihxLEUpeyJ1c2Ugc3RyaWN0Ijt2YXIgUz1FLmV4dGVuZCgic2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLlNlcmlhbGl6ZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihyLHMsYix3LGYpe0UuYXBwbHkodGhpcyk7dGhpcy5fb1Jvb3RDb250cm9sPXI7dGhpcy5fZGVsZWdhdGU9czt0aGlzLl9iU2tpcFJvb3Q9ISFiO3RoaXMuX29XaW5kb3c9d3x8d2luZG93O3RoaXMuX2ZuU2tpcEFnZ3JlZ2F0aW9ucz1mfX0pO1MucHJvdG90eXBlLnNlcmlhbGl6ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZXJpYWxpemVSZWN1cnNpdmUodGhpcy5fb1Jvb3RDb250cm9sLDApfTtTLnByb3RvdHlwZS5fc2VyaWFsaXplUmVjdXJzaXZlPWZ1bmN0aW9uKGMsbCxhLGIpe3ZhciBDPVtdO3ZhciB3PSghdGhpcy5fYlNraXBSb290fHxsIT09MCk7aWYodyl7Yy5nZXRNZXRhZGF0YSgpLmdldEpTT05LZXlzKCk7dmFyIHM9dGhpcy5fZGVsZWdhdGUuc3RhcnQoYyxhLGIpO3ZhciBtPXRoaXMuX2RlbGVnYXRlLm1pZGRsZShjLGEsYik7Qy5wdXNoKHMrbSl9aWYobD09PTB8fCEodGhpcy5fZm5Ta2lwQWdncmVnYXRpb25zJiZ0aGlzLl9mblNraXBBZ2dyZWdhdGlvbnMoYykpKXt2YXIgQT1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsQWdncmVnYXRpb25zKCk7aWYoQSl7Zm9yKHZhciBuIGluIEEpe3ZhciBlPVtdO3ZhciBvPUFbbl07dmFyIHY9Y1tvLl9zR2V0dGVyXSgpO2lmKGMuZ2V0QmluZGluZ1BhdGgobikmJmMuZ2V0QmluZGluZ0luZm8obikudGVtcGxhdGUpe2UucHVzaChjLmdldEJpbmRpbmdJbmZvKG4pLnRlbXBsYXRlKX1lbHNlIGlmKHYmJnYubGVuZ3RoKXtmb3IodmFyIGk9MDtpPHYubGVuZ3RoO2krKyl7dmFyIE89dltpXTtpZihPIGluc3RhbmNlb2YgdGhpcy5fb1dpbmRvdy5zYXAudWkuY29yZS5FbGVtZW50KXtlLnB1c2goTyl9fX1lbHNlIGlmKHYgaW5zdGFuY2VvZiB0aGlzLl9vV2luZG93LnNhcC51aS5jb3JlLkVsZW1lbnQpe2UucHVzaCh2KX1pZihlLmxlbmd0aD4wKXtpZih3KXtDLnB1c2godGhpcy5fZGVsZWdhdGUuc3RhcnRBZ2dyZWdhdGlvbihjLG4pKX12YXIgZD10aGlzLl9pc0RlZmF1bHRBZ2dyZWdhdGlvbihjLG4pO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXtDLnB1c2godGhpcy5fc2VyaWFsaXplUmVjdXJzaXZlKGVbaV0sbCsxLG4sZCkpfWlmKHcpe0MucHVzaCh0aGlzLl9kZWxlZ2F0ZS5lbmRBZ2dyZWdhdGlvbihjLG4pKX19fX19aWYodyl7dmFyIGY9dGhpcy5fZGVsZWdhdGUuZW5kKGMsYSxiKTtDLnB1c2goZil9cmV0dXJuIEMuam9pbigiIil9O1MucHJvdG90eXBlLl9pc0RlZmF1bHRBZ2dyZWdhdGlvbj1mdW5jdGlvbihjLGEpe3JldHVybiBjLmdldE1ldGFkYXRhKCkuZ2V0RGVmYXVsdEFnZ3JlZ2F0aW9uTmFtZSgpPT09YX07cmV0dXJuIFN9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuZGVsZWdhdGUuRGVsZWdhdGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuZGVsZWdhdGUuRGVsZWdhdGUnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS91dGlsL3NlcmlhbGl6ZXIvZGVsZWdhdGUvRGVsZWdhdGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIEQ9RS5leHRlbmQoInNhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5kZWxlZ2F0ZS5EZWxlZ2F0ZSIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7RS5hcHBseSh0aGlzKX19KTtELnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIiJ9O0QucHJvdG90eXBlLm1pZGRsZT1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIiJ9O0QucHJvdG90eXBlLmVuZD1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIiJ9O0QucHJvdG90eXBlLnN0YXJ0QWdncmVnYXRpb249ZnVuY3Rpb24oYyxhKXtyZXR1cm4iIn07RC5wcm90b3R5cGUuZW5kQWdncmVnYXRpb249ZnVuY3Rpb24oYyxhKXtyZXR1cm4iIn07cmV0dXJuIER9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuZGVsZWdhdGUuSFRNTCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5kZWxlZ2F0ZS5IVE1MJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvdXRpbC9zZXJpYWxpemVyL2RlbGVnYXRlL0hUTUwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0RlbGVnYXRlJ10sZnVuY3Rpb24ocSxEKXsidXNlIHN0cmljdCI7dmFyIEg9RC5leHRlbmQoInNhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5kZWxlZ2F0ZS5IVE1MIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oZyxHKXtELmFwcGx5KHRoaXMpO3RoaXMuX2ZuR2V0Q29udHJvbElkPWc7dGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lPUd9fSk7SC5wcm90b3R5cGUuc3RhcnRBZ2dyZWdhdGlvbj1mdW5jdGlvbihjLGEpe3JldHVybic8ZGl2IGRhdGEtc2FwLXVpLWFnZ3JlZ2F0aW9uPSInK2ErJyI+J307SC5wcm90b3R5cGUuZW5kQWdncmVnYXRpb249ZnVuY3Rpb24oYyxhKXtyZXR1cm4nPC9kaXY+J307SC5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oYyxhLGkpe3JldHVybiI8ZGl2In07SC5wcm90b3R5cGUubWlkZGxlPWZ1bmN0aW9uKGMsYSxiKXt2YXIgaD1bXTt2YXIgST0odGhpcy5fZm5HZXRDb250cm9sSWQpP3RoaXMuX2ZuR2V0Q29udHJvbElkKGMpOmMuZ2V0SWQoKTtpZihJLmluZGV4T2YoIl9fIikhPT0wKXtoLnB1c2godGhpcy5fY3JlYXRlQXR0cmlidXRlKCJpZCIsSSkpfWgucHVzaCh0aGlzLl9jcmVhdGVBdHRyaWJ1dGUoImRhdGEtc2FwLXVpLXR5cGUiLGMuZ2V0TWV0YWRhdGEoKS5fc0NsYXNzTmFtZSkpO2lmKGMuYUN1c3RvbVN0eWxlQ2xhc3Nlcyl7dmFyIEM9Yy5hQ3VzdG9tU3R5bGVDbGFzc2VzO3ZhciBkPVtdO2Zvcih2YXIgaT0wO2k8Qy5sZW5ndGg7aSsrKXt2YXIgcz1DW2ldO2lmKCFxLnNhcC5zdGFydHNXaXRoKHMsInNhcE0iKSYmIXEuc2FwLnN0YXJ0c1dpdGgocywic2FwVWkiKSl7ZC5wdXNoKHMpfX1pZihkLmxlbmd0aD4wKXtoLnB1c2godGhpcy5fY3JlYXRlQXR0cmlidXRlKCJjbGFzcyIsZC5qb2luKCIgIikpKX19aWYodGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lKXt2YXIgZT1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsRXZlbnRzKCk7Zm9yKHZhciBFIGluIGUpe2lmKGMuaGFzTGlzdGVuZXJzKEUpKXt2YXIgZj1jLm1FdmVudFJlZ2lzdHJ5W0VdO2Zvcih2YXIgaT0wO2k8Zi5sZW5ndGg7aSsrKXt2YXIgZz10aGlzLl9mbkdldEV2ZW50SGFuZGxlck5hbWUoZltpXSk7aWYoZyl7aC5wdXNoKHRoaXMuX2NyZWF0ZUF0dHJpYnV0ZSgiZGF0YS0iK3RoaXMuX2NyZWF0ZUh0bWxBdHRyaWJ1dGVOYW1lKEUpLGcpKTticmVha319fX19dmFyIEE9Yy5nZXRNZXRhZGF0YSgpLmdldEFsbEFzc29jaWF0aW9ucygpO3RoaXMuX2NyZWF0ZUF0dHJpYnV0ZXMoaCxjLEEsZnVuY3Rpb24obix2KXtpZihBW25dLm11bHRpcGxlKXtyZXR1cm4gdi5qb2luKCIgIil9cmV0dXJuIHZ9LGZ1bmN0aW9uKG4sdil7cmV0dXJuKHYhPT1udWxsJiZ0eXBlb2YgdiE9PXVuZGVmaW5lZCYmdiE9PSIiKX0pO3ZhciBwPWMuZ2V0TWV0YWRhdGEoKS5nZXRBbGxQcm9wZXJ0aWVzKCk7dGhpcy5fY3JlYXRlQXR0cmlidXRlcyhoLGMscCxudWxsLGZ1bmN0aW9uKG4sdil7cmV0dXJuKCEhYy5nZXRCaW5kaW5nSW5mbyhuKXx8KHYhPT1udWxsJiZ0eXBlb2YgdiE9PXVuZGVmaW5lZCYmdiE9PSIiKSl9KTt2YXIgbz1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsQWdncmVnYXRpb25zKCk7dGhpcy5fY3JlYXRlQXR0cmlidXRlcyhoLGMsbyxudWxsLGZ1bmN0aW9uKG4sdil7aWYoIWMuZ2V0QmluZGluZ0luZm8obikmJighdnx8KHR5cGVvZiB2IT09InN0cmluZyIpKSl7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfSk7aC5wdXNoKCc+Jyk7cmV0dXJuIGguam9pbignJyl9O0gucHJvdG90eXBlLmVuZD1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIjwvZGl2PiJ9O0gucHJvdG90eXBlLl9jcmVhdGVBdHRyaWJ1dGVzPWZ1bmN0aW9uKGgsYyxvLGcsdil7Zm9yKHZhciBuIGluIG8pe3ZhciBwPW9bbl07dmFyIEc9cC5fc0dldHRlcjtpZihjW0ddKXt2YXIgVj1jW0ddKCk7Vj1nP2cobixWKTpWO2lmKCFjLmdldEJpbmRpbmdJbmZvKG4pKXtpZihWIT09cC5kZWZhdWx0VmFsdWUpe2lmKCF2fHx2KG4sVikpe2gucHVzaCh0aGlzLl9jcmVhdGVBdHRyaWJ1dGUoImRhdGEtIit0aGlzLl9jcmVhdGVIdG1sQXR0cmlidXRlTmFtZShuKSxWKSl9fX1lbHNle2gucHVzaCh0aGlzLl9jcmVhdGVEYXRhQmluZGluZ0F0dHJpYnV0ZShjLG4sVikpfX19fTtILnByb3RvdHlwZS5fY3JlYXRlRGF0YUJpbmRpbmdBdHRyaWJ1dGU9ZnVuY3Rpb24oYyxuLHYpe3ZhciBiPWMuZ2V0QmluZGluZ0luZm8obik7dmFyIEI9bnVsbDt2YXIgcD12O2lmKCFiLmJpbmRpbmdTdHJpbmcpe2lmKGIuYmluZGluZyl7dmFyIEM9Yi5iaW5kaW5nLmdldE1ldGFkYXRhKCkuZ2V0TmFtZSgpO2lmKEM9PT0ic2FwLnVpLm1vZGVsLlByb3BlcnR5QmluZGluZyJ8fEM9PT0ic2FwLnVpLm1vZGVsLnJlc291cmNlLlJlc291cmNlUHJvcGVydHlCaW5kaW5nIil7Qj1iLmJpbmRpbmcuZ2V0VmFsdWUoKX19aWYoYi5wYXJ0cyl7Yj1iLnBhcnRzWzBdfXZhciBtPWIubW9kZWw7aWYoQj09PXZ8fEI9PT1udWxsKXtwPSJ7IisobT8obSsiPiIrYi5wYXRoKTpiLnBhdGgpKyJ9In19ZWxzZXtwPWIuYmluZGluZ1N0cmluZ31yZXR1cm4gdGhpcy5fY3JlYXRlQXR0cmlidXRlKCJkYXRhLSIrdGhpcy5fY3JlYXRlSHRtbEF0dHJpYnV0ZU5hbWUobikscCl9O0gucHJvdG90eXBlLl9jcmVhdGVBdHRyaWJ1dGU9ZnVuY3Rpb24oYSx2KXtyZXR1cm4nICcrYSsnPSInK3YrJyInfTtILnByb3RvdHlwZS5fY3JlYXRlSHRtbEF0dHJpYnV0ZU5hbWU9ZnVuY3Rpb24obil7cmV0dXJuIHEuc2FwLmh5cGhlbihuKX07cmV0dXJuIEh9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuZGVsZWdhdGUuWE1MJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLmRlbGVnYXRlLlhNTCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3V0aWwvc2VyaWFsaXplci9kZWxlZ2F0ZS9YTUwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0RlbGVnYXRlJ10sZnVuY3Rpb24ocSxEKXsidXNlIHN0cmljdCI7dmFyIFg9RC5leHRlbmQoInNhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5kZWxlZ2F0ZS5YTUwiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihkLGcsRyxtKXtELmFwcGx5KHRoaXMpO3RoaXMuX3NEZWZhdWx0TmFtZXNwYWNlPWQ7dGhpcy5fZm5HZXRDb250cm9sSWQ9Zzt0aGlzLl9mbk1lbW9yaXplUGFja2FnZT1tO3RoaXMuX2ZuR2V0RXZlbnRIYW5kbGVyTmFtZT1HfX0pO1gucHJvdG90eXBlLnN0YXJ0QWdncmVnYXRpb249ZnVuY3Rpb24oYyxhKXtyZXR1cm4nPCcrdGhpcy5fY3JlYXRlQWdncmVnYXRpb25OYW1lKGMsYSkrJz4nfTtYLnByb3RvdHlwZS5lbmRBZ2dyZWdhdGlvbj1mdW5jdGlvbihjLGEpe3JldHVybic8LycrdGhpcy5fY3JlYXRlQWdncmVnYXRpb25OYW1lKGMsYSkrJz4nfTtYLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIjwiK3RoaXMuX2NyZWF0ZVRhZ05hbWUoYyl9O1gucHJvdG90eXBlLmVuZD1mdW5jdGlvbihjLGEsaSl7cmV0dXJuIjwvIit0aGlzLl9jcmVhdGVUYWdOYW1lKGMpKyI+In07WC5wcm90b3R5cGUubWlkZGxlPWZ1bmN0aW9uKGMsYSxiKXt2YXIgeD1bXTt2YXIgST0odGhpcy5fZm5HZXRDb250cm9sSWQpP3RoaXMuX2ZuR2V0Q29udHJvbElkKGMpOmMuZ2V0SWQoKTtpZihJLmluZGV4T2YoIl9fIikhPT0wKXt4LnB1c2godGhpcy5fY3JlYXRlQXR0cmlidXRlKCJpZCIsSSkpfWlmKGMuYUN1c3RvbVN0eWxlQ2xhc3Nlcyl7dmFyIEM9Yy5hQ3VzdG9tU3R5bGVDbGFzc2VzO3ZhciBkPVtdO2Zvcih2YXIgaT0wO2k8Qy5sZW5ndGg7aSsrKXt2YXIgcz1DW2ldO2lmKCFxLnNhcC5zdGFydHNXaXRoKHMsInNhcE0iKSYmIXEuc2FwLnN0YXJ0c1dpdGgocywic2FwVWkiKSl7ZC5wdXNoKHMpfX1pZihkLmxlbmd0aD4wKXt4LnB1c2godGhpcy5fY3JlYXRlQXR0cmlidXRlKCJjbGFzcyIsZC5qb2luKCIgIikpKX19aWYodGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lKXt2YXIgZT1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsRXZlbnRzKCk7Zm9yKHZhciBFIGluIGUpe2lmKGMuaGFzTGlzdGVuZXJzKEUpKXt2YXIgZj1jLm1FdmVudFJlZ2lzdHJ5W0VdO2Zvcih2YXIgaT0wO2k8Zi5sZW5ndGg7aSsrKXt2YXIgaD10aGlzLl9mbkdldEV2ZW50SGFuZGxlck5hbWUoZltpXSk7aWYoaCl7eC5wdXNoKHRoaXMuX2NyZWF0ZUF0dHJpYnV0ZShFLGgpKTticmVha319fX19dmFyIEE9Yy5nZXRNZXRhZGF0YSgpLmdldEFsbEFzc29jaWF0aW9ucygpO3RoaXMuX2NyZWF0ZUF0dHJpYnV0ZXMoeCxjLEEsZnVuY3Rpb24obix2KXtpZihBW25dLm11bHRpcGxlKXtyZXR1cm4gdi5qb2luKCIgIil9cmV0dXJuIHZ9LGZ1bmN0aW9uKG4sdil7cmV0dXJuKHYhPT1udWxsJiZ0eXBlb2YgdiE9PXVuZGVmaW5lZCYmdiE9PSIiKX0pO3ZhciBwPWMuZ2V0TWV0YWRhdGEoKS5nZXRBbGxQcm9wZXJ0aWVzKCk7dGhpcy5fY3JlYXRlQXR0cmlidXRlcyh4LGMscCxudWxsLGZ1bmN0aW9uKG4sdil7cmV0dXJuKCEhYy5nZXRCaW5kaW5nSW5mbyhuKXx8KHYhPT1udWxsJiZ0eXBlb2YgdiE9PXVuZGVmaW5lZCYmdiE9PSIiKSl9KTt2YXIgbz1jLmdldE1ldGFkYXRhKCkuZ2V0QWxsQWdncmVnYXRpb25zKCk7dGhpcy5fY3JlYXRlQXR0cmlidXRlcyh4LGMsbyxudWxsLGZ1bmN0aW9uKG4sdil7aWYoIWMuZ2V0QmluZGluZ0luZm8obikmJighdnx8KHR5cGVvZiB2IT09InN0cmluZyIpKSl7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfSk7eC5wdXNoKCc+Jyk7cmV0dXJuIHguam9pbignJyl9O1gucHJvdG90eXBlLl9jcmVhdGVBdHRyaWJ1dGVzPWZ1bmN0aW9uKHgsYyxvLGcsdil7Zm9yKHZhciBuIGluIG8pe3ZhciBwPW9bbl07dmFyIEc9cC5fc0dldHRlcjtpZihjW0ddKXt2YXIgVj1jW0ddKCk7Vj1nP2cobixWKTpWO2lmKCFjLmdldEJpbmRpbmdJbmZvKG4pKXtpZihWIT09cC5kZWZhdWx0VmFsdWUpe2lmKCF2fHx2KG4sVikpe3gucHVzaCh0aGlzLl9jcmVhdGVBdHRyaWJ1dGUobixWKSl9fX1lbHNle3gucHVzaCh0aGlzLl9jcmVhdGVEYXRhQmluZGluZ0F0dHJpYnV0ZShjLG4sVikpfX19fTtYLnByb3RvdHlwZS5fY3JlYXRlRGF0YUJpbmRpbmdBdHRyaWJ1dGU9ZnVuY3Rpb24oYyxuLHYpe3ZhciBiPWMuZ2V0QmluZGluZ0luZm8obik7dmFyIEI9bnVsbDt2YXIgcD12O2lmKCFiLmJpbmRpbmdTdHJpbmcpe2lmKGIuYmluZGluZyl7dmFyIEM9Yi5iaW5kaW5nLmdldE1ldGFkYXRhKCkuZ2V0TmFtZSgpO2lmKEM9PT0ic2FwLnVpLm1vZGVsLlByb3BlcnR5QmluZGluZyJ8fEM9PT0ic2FwLnVpLm1vZGVsLnJlc291cmNlLlJlc291cmNlUHJvcGVydHlCaW5kaW5nIil7Qj1iLmJpbmRpbmcuZ2V0VmFsdWUoKX19aWYoYi5wYXJ0cyl7Yj1iLnBhcnRzWzBdfXZhciBtPWIubW9kZWw7aWYoQj09PXZ8fEI9PT1udWxsKXtwPSJ7IisobT8obSsiPiIrYi5wYXRoKTpiLnBhdGgpKyJ9In19ZWxzZXtwPWIuYmluZGluZ1N0cmluZ31yZXR1cm4gdGhpcy5fY3JlYXRlQXR0cmlidXRlKG4scCl9O1gucHJvdG90eXBlLl9jcmVhdGVBdHRyaWJ1dGU9ZnVuY3Rpb24oYSx2KXtyZXR1cm4nICcrYSsnPSInK3YrJyInfTtYLnByb3RvdHlwZS5fY3JlYXRlVGFnTmFtZT1mdW5jdGlvbihjKXt2YXIgQz1jLmdldE1ldGFkYXRhKCkuX3NDbGFzc05hbWU7dmFyIGw9Qy5sYXN0SW5kZXhPZigiLiIpO3ZhciBzPShsPT09LTEpP0M6Qy5zdWJzdHJpbmcobCsxKTt2YXIgcD0obD09PS0xKT9DOkMuc3Vic3RyaW5nKDAsbCk7aWYodGhpcy5fZm5NZW1vcml6ZVBhY2thZ2Upe3RoaXMuX2ZuTWVtb3JpemVQYWNrYWdlKGMscCl9cmV0dXJuIHRoaXMuX2NyZWF0ZU5hbWVzcGFjZShwLHMpfTtYLnByb3RvdHlwZS5fY3JlYXRlQWdncmVnYXRpb25OYW1lPWZ1bmN0aW9uKGMsYSl7dmFyIEM9Yy5nZXRNZXRhZGF0YSgpLl9zQ2xhc3NOYW1lO3ZhciBsPUMubGFzdEluZGV4T2YoIi4iKTt2YXIgcD0obD09PS0xKT9DOkMuc3Vic3RyaW5nKDAsbCk7cmV0dXJuIHRoaXMuX2NyZWF0ZU5hbWVzcGFjZShwLGEpfTtYLnByb3RvdHlwZS5fY3JlYXRlTmFtZXNwYWNlPWZ1bmN0aW9uKG4sTil7aWYodGhpcy5fc0RlZmF1bHROYW1lc3BhY2UmJnRoaXMuX3NEZWZhdWx0TmFtZXNwYWNlPT09bil7cmV0dXJuIE59ZWxzZXtyZXR1cm4gbisiOiIrTn19O3JldHVybiBYfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUud3MuV2ViU29ja2V0Jykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUud3MuV2ViU29ja2V0Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvd3MvV2ViU29ja2V0IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL0RldmljZScsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCcuL1JlYWR5U3RhdGUnXSxmdW5jdGlvbihxLEQsRSxSKXsidXNlIHN0cmljdCI7dmFyIFc9RS5leHRlbmQoInNhcC51aS5jb3JlLndzLldlYlNvY2tldCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHUscCl7RS5hcHBseSh0aGlzKTtpZighRC5zdXBwb3J0LndlYnNvY2tldCl7dGhyb3cgbmV3IEVycm9yKCJCcm93c2VyIGRvZXMgbm90IHN1cHBvcnQgV2ViU29ja2V0cy4iKX1pZih0eXBlb2YodSkhPT0ic3RyaW5nIil7dGhyb3cgbmV3IEVycm9yKCJzVXJsIG11c3QgYmUgYSBzdHJpbmcuIil9aWYodHlwZW9mKHApIT09J3VuZGVmaW5lZCcmJiFxLmlzQXJyYXkocCkmJnR5cGVvZihwKSE9PSdzdHJpbmcnKXt0aHJvdyBuZXcgRXJyb3IoImFQcm90b2NvbHMgbXVzdCBiZSBhIHN0cmluZywgYXJyYXkgb2Ygc3RyaW5ncyBvciB1bmRlZmluZWQuIil9dGhpcy5fb3BlbkNvbm5lY3Rpb24odSxwKX0sbWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJzZW5kIiwiY2xvc2UiLCJnZXRSZWFkeVN0YXRlIiwiZ2V0UHJvdG9jb2wiXX19KTtXLnByb3RvdHlwZS5nZXRJbnRlcmZhY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307Vy5NX0VWRU5UUz17T3Blbjoib3BlbiIsQ2xvc2U6ImNsb3NlIixFcnJvcjoiZXJyb3IiLE1lc3NhZ2U6Im1lc3NhZ2UifTtXLnByb3RvdHlwZS5hdHRhY2hPcGVuPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJvcGVuIixkLGYsbCk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmRldGFjaE9wZW49ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJvcGVuIixmLGwpO3JldHVybiB0aGlzfTtXLnByb3RvdHlwZS5maXJlT3Blbj1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgib3BlbiIsYSk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmF0dGFjaENsb3NlPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJjbG9zZSIsZCxmLGwpO3JldHVybiB0aGlzfTtXLnByb3RvdHlwZS5kZXRhY2hDbG9zZT1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoImNsb3NlIixmLGwpO3JldHVybiB0aGlzfTtXLnByb3RvdHlwZS5maXJlQ2xvc2U9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoImNsb3NlIixhKTtyZXR1cm4gdGhpc307Vy5wcm90b3R5cGUuYXR0YWNoRXJyb3I9ZnVuY3Rpb24oZCxmLGwpe3RoaXMuYXR0YWNoRXZlbnQoImVycm9yIixkLGYsbCk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmRldGFjaEVycm9yPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgiZXJyb3IiLGYsbCk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmZpcmVFcnJvcj1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgiZXJyb3IiLGEpO3JldHVybiB0aGlzfTtXLnByb3RvdHlwZS5hdHRhY2hNZXNzYWdlPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJtZXNzYWdlIixkLGYsbCk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmRldGFjaE1lc3NhZ2U9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJtZXNzYWdlIixmLGwpO3JldHVybiB0aGlzfTtXLnByb3RvdHlwZS5maXJlTWVzc2FnZT1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgibWVzc2FnZSIsYSk7cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLl9yZXNvbHZlRnVsbFVybD1mdW5jdGlvbih1KXt2YXIgZj0nJztpZighL153c3M/OlwvXC8vLnRlc3QodSkpe3ZhciBsPWRvY3VtZW50LmxvY2F0aW9uO2Y9KChsLnByb3RvY29sPT09J2h0dHBzOicpPyd3c3M6Ly8nOid3czovLycpK2wuaG9zdDtpZih1LnN1YnN0cigwLDEpPT09Jy8nKXtmKz11fWVsc2V7Zis9bC5wYXRobmFtZS5zdWJzdHJpbmcoMCxsLnBhdGhuYW1lLmxhc3RJbmRleE9mKCcvJykpKycvJyt1fX1lbHNle2Y9dX1yZXR1cm4gZn07Vy5wcm90b3R5cGUuX29wZW5Db25uZWN0aW9uPWZ1bmN0aW9uKHUscCl7dmFyIHU9dGhpcy5fcmVzb2x2ZUZ1bGxVcmwodSk7dGhpcy5fb1dzPSh0eXBlb2YocCk9PT0ndW5kZWZpbmVkJyk/bmV3IHdpbmRvdy5XZWJTb2NrZXQodSk6bmV3IHdpbmRvdy5XZWJTb2NrZXQodSxwKTt0aGlzLl9vV3Mub25vcGVuPXEucHJveHkodGhpcy5fb25vcGVuLHRoaXMpO3RoaXMuX29Xcy5vbmNsb3NlPXEucHJveHkodGhpcy5fb25jbG9zZSx0aGlzKTt0aGlzLl9vV3Mub25tZXNzYWdlPXEucHJveHkodGhpcy5fb25tZXNzYWdlLHRoaXMpO3RoaXMuX29Xcy5vbmVycm9yPXEucHJveHkodGhpcy5fb25lcnJvcix0aGlzKX07Vy5wcm90b3R5cGUuX29ub3Blbj1mdW5jdGlvbigpe3RoaXMuZmlyZU9wZW4oKX07Vy5wcm90b3R5cGUuX29uY2xvc2U9ZnVuY3Rpb24oYyl7dGhpcy5maXJlQ2xvc2Uoe2NvZGU6Yy5jb2RlLHJlYXNvbjpjLnJlYXNvbix3YXNDbGVhbjpjLndhc0NsZWFufSl9O1cucHJvdG90eXBlLl9vbmVycm9yPWZ1bmN0aW9uKGUpe3RoaXMuZmlyZUVycm9yKCl9O1cucHJvdG90eXBlLl9vbm1lc3NhZ2U9ZnVuY3Rpb24obSl7dGhpcy5maXJlTWVzc2FnZSh7ZGF0YTptLmRhdGF9KX07Vy5wcm90b3R5cGUuc2VuZD1mdW5jdGlvbihtKXtpZih0aGlzLmdldFJlYWR5U3RhdGUoKT09PVIuT1BFTil7dGhpcy5fb1dzLnNlbmQobSl9ZWxzZSBpZih0aGlzLmdldFJlYWR5U3RhdGUoKT09PVIuQ09OTkVDVElORyl7dGhpcy5hdHRhY2hFdmVudE9uY2UoIm9wZW4iLGZ1bmN0aW9uKGUpe3RoaXMuX29Xcy5zZW5kKG0pfSl9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiVW5hYmxlIHRvIHNlbmQgV2ViU29ja2V0IG1lc3NhZ2UuICIrIkNvbm5lY3Rpb24gaXMgYWxyZWFkeSBjbG9zZWQgb3IgY2xvc2luZy4gbWVzc2FnZTogIittKX1yZXR1cm4gdGhpc307Vy5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oYyxyKXtpZih0eXBlb2YoYyk9PT0nc3RyaW5nJyl7cj1jO2M9dW5kZWZpbmVkfWM9KHR5cGVvZihjKT09PSd1bmRlZmluZWQnKT8xMDAwOmM7cj0odHlwZW9mKHIpPT09J3VuZGVmaW5lZCcpPyIiOnI7aWYodGhpcy5nZXRSZWFkeVN0YXRlKCk9PT1SLk9QRU4pe3RoaXMuX29Xcy5jbG9zZShjLHIpfWVsc2UgaWYodGhpcy5nZXRSZWFkeVN0YXRlKCk9PT1SLkNPTk5FQ1RJTkcpe3RoaXMuYXR0YWNoRXZlbnRPbmNlKCJvcGVuIixmdW5jdGlvbihlKXt0aGlzLl9vV3MuY2xvc2UoYyxyKX0pfWVsc2V7dmFyIHQ9Jyc7c3dpdGNoKHRoaXMuZ2V0UmVhZHlTdGF0ZSgpKXtjYXNlIFIuQ0xPU0VEOnQ9IkNvbm5lY3Rpb24gaXMgYWxyZWFkeSBjbG9zZWQuIjticmVhaztjYXNlIFIuQ0xPU0lORzp0PSJDb25uZWN0aW9uIGlzIGFscmVhZHkgY2xvc2luZy4iO2JyZWFrfXEuc2FwLmxvZy53YXJuaW5nKCJVbmFibGUgdG8gY2xvc2UgV2ViU29ja2V0IGNvbm5lY3Rpb24uICIrdCl9cmV0dXJuIHRoaXN9O1cucHJvdG90eXBlLmdldFJlYWR5U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb1dzLnJlYWR5U3RhdGV9O1cucHJvdG90eXBlLmdldFByb3RvY29sPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29Xcy5wcm90b2NvbH07cmV0dXJuIFd9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5CaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0JpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJywnLi9DaGFuZ2VSZWFzb24nXSxmdW5jdGlvbihxLEUsQyl7InVzZSBzdHJpY3QiO3ZhciBCPUUuZXh0ZW5kKCJzYXAudWkubW9kZWwuQmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCxjLFApe0UuYXBwbHkodGhpcyk7dGhpcy5vTW9kZWw9bTt0aGlzLmJSZWxhdGl2ZT0hcS5zYXAuc3RhcnRzV2l0aChwLCcvJyk7dGhpcy5zUGF0aD1wO3RoaXMub0NvbnRleHQ9Yzt0aGlzLm1QYXJhbWV0ZXJzPVA7dGhpcy5iSW5pdGlhbD1mYWxzZX0sbWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwdWJsaWNNZXRob2RzOlsiZ2V0UGF0aCIsImdldENvbnRleHQiLCJnZXRNb2RlbCIsImF0dGFjaENoYW5nZSIsImRldGFjaENoYW5nZSIsInJlZnJlc2giLCJpc0luaXRpYWwiLCJhdHRhY2hEYXRhUmVxdWVzdGVkIiwiZGV0YWNoRGF0YVJlcXVlc3RlZCIsImF0dGFjaERhdGFSZWNlaXZlZCIsImRldGFjaERhdGFSZWNlaXZlZCJdfX0pO0IucHJvdG90eXBlLmdldFBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zUGF0aH07Qi5wcm90b3R5cGUuZ2V0Q29udGV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9Db250ZXh0fTtCLnByb3RvdHlwZS5zZXRDb250ZXh0PWZ1bmN0aW9uKGMpe2lmKHRoaXMub0NvbnRleHQhPWMpe3RoaXMub0NvbnRleHQ9Yzt0aGlzLl9maXJlQ2hhbmdlKCl9fTtCLnByb3RvdHlwZS5nZXRNb2RlbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9Nb2RlbH07Qi5wcm90b3R5cGUuYXR0YWNoQ2hhbmdlPWZ1bmN0aW9uKGYsbCl7aWYoIXRoaXMuaGFzTGlzdGVuZXJzKCJjaGFuZ2UiKSl7dGhpcy5vTW9kZWwuYWRkQmluZGluZyh0aGlzKX10aGlzLmF0dGFjaEV2ZW50KCJjaGFuZ2UiLGYsbCl9O0IucHJvdG90eXBlLmRldGFjaENoYW5nZT1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoImNoYW5nZSIsZixsKTtpZighdGhpcy5oYXNMaXN0ZW5lcnMoImNoYW5nZSIpKXt0aGlzLm9Nb2RlbC5yZW1vdmVCaW5kaW5nKHRoaXMpfX07Qi5wcm90b3R5cGUuX2ZpcmVDaGFuZ2U9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoImNoYW5nZSIsYSl9O0IucHJvdG90eXBlLmF0dGFjaERhdGFSZXF1ZXN0ZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJkYXRhUmVxdWVzdGVkIixmLGwpfTtCLnByb3RvdHlwZS5kZXRhY2hEYXRhUmVxdWVzdGVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgiZGF0YVJlcXVlc3RlZCIsZixsKX07Qi5wcm90b3R5cGUuZmlyZURhdGFSZXF1ZXN0ZWQ9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoImRhdGFSZXF1ZXN0ZWQiLGEpfTtCLnByb3RvdHlwZS5hdHRhY2hEYXRhUmVjZWl2ZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJkYXRhUmVjZWl2ZWQiLGYsbCl9O0IucHJvdG90eXBlLmRldGFjaERhdGFSZWNlaXZlZD1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoImRhdGFSZWNlaXZlZCIsZixsKX07Qi5wcm90b3R5cGUuZmlyZURhdGFSZWNlaXZlZD1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgiZGF0YVJlY2VpdmVkIixhKX07Qi5wcm90b3R5cGUudXBkYXRlUmVxdWlyZWQ9ZnVuY3Rpb24obSl7cmV0dXJuIG0mJnRoaXMuZ2V0TW9kZWwoKT09PW19O0IucHJvdG90eXBlLmNoZWNrVXBkYXRlPWZ1bmN0aW9uKGYpe3RoaXMuX2ZpcmVDaGFuZ2Uoe3JlYXNvbjpDLkNoYW5nZX0pfTtCLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKGYpe3RoaXMuY2hlY2tVcGRhdGUoZil9O0IucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXt0aGlzLmNoZWNrVXBkYXRlKHRydWUpfTtCLnByb3RvdHlwZS5fcmVmcmVzaD1mdW5jdGlvbigpe3RoaXMucmVmcmVzaCgpfTtCLnByb3RvdHlwZS5pc0luaXRpYWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5iSW5pdGlhbH07Qi5wcm90b3R5cGUuaXNSZWxhdGl2ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJSZWxhdGl2ZX07Qi5wcm90b3R5cGUuYXR0YWNoRXZlbnRzPWZ1bmN0aW9uKGUpe2lmKCFlKXtyZXR1cm4gdGhpc312YXIgdD10aGlzO3EuZWFjaChlLGZ1bmN0aW9uKHMsaCl7dmFyIG09ImF0dGFjaCIrcy5zdWJzdHJpbmcoMCwxKS50b1VwcGVyQ2FzZSgpK3Muc3Vic3RyaW5nKDEpO2lmKHRbbV0pe3RbbV0oaCl9ZWxzZXtxLnNhcC5sb2cud2FybmluZyh0LnRvU3RyaW5nKCkrIiBoYXMgbm8gaGFuZGxlciBmb3IgZXZlbnQgJyIrcysiJyIpfX0pO3JldHVybiB0aGlzfTtCLnByb3RvdHlwZS5kZXRhY2hFdmVudHM9ZnVuY3Rpb24oZSl7aWYoIWUpe3JldHVybiB0aGlzfXZhciB0PXRoaXM7cS5lYWNoKGUsZnVuY3Rpb24ocyxoKXt2YXIgbT0iZGV0YWNoIitzLnN1YnN0cmluZygwLDEpLnRvVXBwZXJDYXNlKCkrcy5zdWJzdHJpbmcoMSk7aWYodFttXSl7dFttXShoKX1lbHNle3Euc2FwLmxvZy53YXJuaW5nKHQudG9TdHJpbmcoKSsiIGhhcyBubyBoYW5kbGVyIGZvciBldmVudCAnIitzKyInIil9fSk7cmV0dXJuIHRoaXN9O0IucHJvdG90eXBlLmF0dGFjaFJlZnJlc2g9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJyZWZyZXNoIixmLGwpfTtCLnByb3RvdHlwZS5kZXRhY2hSZWZyZXNoPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgicmVmcmVzaCIsZixsKX07Qi5wcm90b3R5cGUuX2ZpcmVSZWZyZXNoPWZ1bmN0aW9uKGEpe3RoaXMuZmlyZUV2ZW50KCJyZWZyZXNoIixhKX07cmV0dXJuIEJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQ29udGV4dCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5Db250ZXh0Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0NvbnRleHQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJ10sZnVuY3Rpb24ocSxFKXsidXNlIHN0cmljdCI7dmFyIEM9c2FwLnVpLmJhc2UuT2JqZWN0LmV4dGVuZCgic2FwLnVpLm1vZGVsLkNvbnRleHQiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHApe3NhcC51aS5iYXNlLk9iamVjdC5hcHBseSh0aGlzKTt0aGlzLm9Nb2RlbD1tO3RoaXMuc1BhdGg9cH0sbWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwdWJsaWNNZXRob2RzOlsiZ2V0TW9kZWwiLCJnZXRQYXRoIiwiZ2V0UHJvcGVydHkiLCJnZXRPYmplY3QiXX19KTtDLnByb3RvdHlwZS5nZXRNb2RlbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9Nb2RlbH07Qy5wcm90b3R5cGUuZ2V0UGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNQYXRofTtDLnByb3RvdHlwZS5nZXRQcm9wZXJ0eT1mdW5jdGlvbihwKXtyZXR1cm4gdGhpcy5vTW9kZWwuZ2V0UHJvcGVydHkocCx0aGlzKX07Qy5wcm90b3R5cGUuZ2V0T2JqZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub01vZGVsLmdldE9iamVjdCh0aGlzLnNQYXRoKX07Qy5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zUGF0aH07cmV0dXJuIEN9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQ29udGV4dEJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuQ29udGV4dEJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvQ29udGV4dEJpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0JpbmRpbmcnXSxmdW5jdGlvbihxLEIpeyJ1c2Ugc3RyaWN0Ijt2YXIgQz1CLmV4dGVuZCgic2FwLnVpLm1vZGVsLkNvbnRleHRCaW5kaW5nIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obSxwLGMsUCxlKXtCLmNhbGwodGhpcyxtLHAsYyxQLGUpO3RoaXMub0VsZW1lbnRDb250ZXh0PW51bGw7dGhpcy5iSW5pdGlhbD10cnVlfSxtZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImdldEVsZW1lbnRDb250ZXh0Il19fSk7Qy5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7fTtDLnByb3RvdHlwZS5nZXRCb3VuZENvbnRleHQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMub0VsZW1lbnRDb250ZXh0fTtyZXR1cm4gQ30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5GaWx0ZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuRmlsdGVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0ZpbHRlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vRmlsdGVyT3BlcmF0b3InXSxmdW5jdGlvbihxLEYpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1zYXAudWkuYmFzZS5PYmplY3QuZXh0ZW5kKCJzYXAudWkubW9kZWwuRmlsdGVyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24ocCxvLHYsVil7aWYodHlwZW9mIHA9PT0ib2JqZWN0IiYmIXEuaXNBcnJheShwKSl7dmFyIGY9cDt0aGlzLnNQYXRoPWYucGF0aDt0aGlzLnNPcGVyYXRvcj1mLm9wZXJhdG9yO3RoaXMub1ZhbHVlMT1mLnZhbHVlMTt0aGlzLm9WYWx1ZTI9Zi52YWx1ZTI7dGhpcy5hRmlsdGVycz1mLmFGaWx0ZXJzO3RoaXMuYkFuZD1mLmJBbmR9ZWxzZXtpZihxLmlzQXJyYXkocCkpe3RoaXMuYUZpbHRlcnM9cH1lbHNle3RoaXMuc1BhdGg9cH1pZihxLnR5cGUobyk9PT0iYm9vbGVhbiIpe3RoaXMuYkFuZD1vfWVsc2V7dGhpcy5zT3BlcmF0b3I9b310aGlzLm9WYWx1ZTE9djt0aGlzLm9WYWx1ZTI9Vn1pZihxLmlzQXJyYXkodGhpcy5hRmlsdGVycykmJnRoaXMuYkFuZCE9dW5kZWZpbmVkJiYhdGhpcy5zUGF0aCYmIXRoaXMuc09wZXJhdG9yJiYhdGhpcy5vVmFsdWUxJiYhdGhpcy5vVmFsdWUyKXt0aGlzLl9iTXVsdGlGaWx0ZXI9dHJ1ZTtxLmVhY2godGhpcy5hRmlsdGVycyxmdW5jdGlvbihpLGIpe2lmKCEoYiBpbnN0YW5jZW9mIGEpKXtxLnNhcC5sb2cuZXJyb3IoIkZpbHRlciBpbiBBZ2dyZWdhdGlvbiBvZiBNdWx0aSBmaWx0ZXIgaGFzIHRvIGJlIGluc3RhbmNlIG9mIHNhcC51aS5tb2RlbC5GaWx0ZXIiKX19KX1lbHNlIGlmKCF0aGlzLmFGaWx0ZXJzJiYhdGhpcy5iQW5kJiZ0aGlzLnNQYXRoIT09dW5kZWZpbmVkJiZ0aGlzLnNPcGVyYXRvciYmdGhpcy5vVmFsdWUxIT09dW5kZWZpbmVkKXt0aGlzLl9iTXVsdGlGaWx0ZXI9ZmFsc2V9ZWxzZXtxLnNhcC5sb2cuZXJyb3IoIldyb25nIHBhcmFtZXRlcnMgZGVmaW5lZCBmb3IgZmlsdGVyLiIpfX19KTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5MaXN0QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5MaXN0QmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9MaXN0QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQmluZGluZycsJy4vRmlsdGVyJywnLi9Tb3J0ZXInXSxmdW5jdGlvbihxLEIsRixTKXsidXNlIHN0cmljdCI7dmFyIEw9Qi5leHRlbmQoInNhcC51aS5tb2RlbC5MaXN0QmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCxjLHMsZixQKXtCLmNhbGwodGhpcyxtLHAsYyxQKTt0aGlzLmFTb3J0ZXJzPXM7aWYoIXEuaXNBcnJheSh0aGlzLmFTb3J0ZXJzKSYmdGhpcy5hU29ydGVycyBpbnN0YW5jZW9mIFMpe3RoaXMuYVNvcnRlcnM9W3RoaXMuYVNvcnRlcnNdfWVsc2UgaWYoIXEuaXNBcnJheSh0aGlzLmFTb3J0ZXJzKSl7dGhpcy5hU29ydGVycz1bXX10aGlzLmFGaWx0ZXJzPVtdO2lmKCFxLmlzQXJyYXkoZikmJmYgaW5zdGFuY2VvZiBGKXtmPVtmXX1lbHNlIGlmKCFxLmlzQXJyYXkoZikpe2Y9W119dGhpcy5hQXBwbGljYXRpb25GaWx0ZXJzPWY7dGhpcy5iVXNlRXh0ZW5kZWRDaGFuZ2VEZXRlY3Rpb249ZmFsc2V9LG1ldGFkYXRhOnsiYWJzdHJhY3QiOnRydWUscHVibGljTWV0aG9kczpbImdldENvbnRleHRzIiwic29ydCIsImF0dGFjaFNvcnQiLCJkZXRhY2hTb3J0IiwiZmlsdGVyIiwiYXR0YWNoRmlsdGVyIiwiZGV0YWNoRmlsdGVyIiwiZ2V0RGlzdGluY3RWYWx1ZXMiLCJpc0dyb3VwZWQiXX19KTtMLnByb3RvdHlwZS5nZXREaXN0aW5jdFZhbHVlcz1mdW5jdGlvbihwKXtyZXR1cm4gbnVsbH07TC5wcm90b3R5cGUuYXR0YWNoU29ydD1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoInNvcnQiLGYsbCl9O0wucHJvdG90eXBlLmRldGFjaFNvcnQ9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJzb3J0IixmLGwpfTtMLnByb3RvdHlwZS5fZmlyZVNvcnQ9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoInNvcnQiLGEpfTtMLnByb3RvdHlwZS5hdHRhY2hGaWx0ZXI9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJmaWx0ZXIiLGYsbCl9O0wucHJvdG90eXBlLmRldGFjaEZpbHRlcj1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoImZpbHRlciIsZixsKX07TC5wcm90b3R5cGUuX2ZpcmVGaWx0ZXI9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoImZpbHRlciIsYSl9O0wucHJvdG90eXBlLmlzR3JvdXBlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFTb3J0ZXJzLmxlbmd0aD4wJiYhIXRoaXMuYVNvcnRlcnNbMF0uZm5Hcm91cH07TC5wcm90b3R5cGUuZW5hYmxlRXh0ZW5kZWRDaGFuZ2VEZXRlY3Rpb249ZnVuY3Rpb24oKXt0aGlzLmJVc2VFeHRlbmRlZENoYW5nZURldGVjdGlvbj10cnVlO2lmKHRoaXMudXBkYXRlKXt0aGlzLnVwZGF0ZSgpfX07cmV0dXJuIEx9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuTW9kZWwnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuTW9kZWwnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvTW9kZWwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJywnLi9CaW5kaW5nTW9kZScsJy4vQ29udGV4dCddLGZ1bmN0aW9uKHEsRSxCLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgTT1FLmV4dGVuZCgic2FwLnVpLm1vZGVsLk1vZGVsIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtFLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLm9EYXRhPXt9O3RoaXMuYkRlc3Ryb3llZD1mYWxzZTt0aGlzLmFCaW5kaW5ncz1bXTt0aGlzLm1Db250ZXh0cz17fTt0aGlzLmlTaXplTGltaXQ9MTAwO3RoaXMuc0RlZmF1bHRCaW5kaW5nTW9kZT1CLlR3b1dheTt0aGlzLm1TdXBwb3J0ZWRCaW5kaW5nTW9kZXM9eyJPbmVXYXkiOnRydWUsIlR3b1dheSI6dHJ1ZSwiT25lVGltZSI6dHJ1ZX07dGhpcy5iTGVnYWN5U3ludGF4PWZhbHNlfSxtZXRhZGF0YTp7ImFic3RyYWN0Ijp0cnVlLHB1YmxpY01ldGhvZHM6WyJiaW5kUHJvcGVydHkiLCJiaW5kTGlzdCIsImJpbmRUcmVlIiwiYmluZENvbnRleHQiLCJjcmVhdGVCaW5kaW5nQ29udGV4dCIsImRlc3Ryb3lCaW5kaW5nQ29udGV4dCIsImdldFByb3BlcnR5IiwiZ2V0RGVmYXVsdEJpbmRpbmdNb2RlIiwic2V0RGVmYXVsdEJpbmRpbmdNb2RlIiwiaXNCaW5kaW5nTW9kZVN1cHBvcnRlZCIsImF0dGFjaFBhcnNlRXJyb3IiLCJkZXRhY2hQYXJzZUVycm9yIiwiYXR0YWNoUmVxdWVzdENvbXBsZXRlZCIsImRldGFjaFJlcXVlc3RDb21wbGV0ZWQiLCJhdHRhY2hSZXF1ZXN0RmFpbGVkIiwiZGV0YWNoUmVxdWVzdEZhaWxlZCIsImF0dGFjaFJlcXVlc3RTZW50IiwiZGV0YWNoUmVxdWVzdFNlbnQiLCJzZXRTaXplTGltaXQiLCJyZWZyZXNoIiwiaXNMaXN0IiwiZ2V0T2JqZWN0Il19fSk7TS5NX0VWRU5UUz17UGFyc2VFcnJvcjoicGFyc2VFcnJvciIsUmVxdWVzdEZhaWxlZDoicmVxdWVzdEZhaWxlZCIsUmVxdWVzdFNlbnQ6InJlcXVlc3RTZW50IixSZXF1ZXN0Q29tcGxldGVkOiJyZXF1ZXN0Q29tcGxldGVkIn07TS5wcm90b3R5cGUuYXR0YWNoUmVxdWVzdEZhaWxlZD1mdW5jdGlvbihkLGYsbCl7dGhpcy5hdHRhY2hFdmVudCgicmVxdWVzdEZhaWxlZCIsZCxmLGwpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5kZXRhY2hSZXF1ZXN0RmFpbGVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgicmVxdWVzdEZhaWxlZCIsZixsKTtyZXR1cm4gdGhpc307TS5wcm90b3R5cGUuZmlyZVJlcXVlc3RGYWlsZWQ9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoInJlcXVlc3RGYWlsZWQiLGEpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5hdHRhY2hQYXJzZUVycm9yPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJwYXJzZUVycm9yIixkLGYsbCk7cmV0dXJuIHRoaXN9O00ucHJvdG90eXBlLmRldGFjaFBhcnNlRXJyb3I9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJwYXJzZUVycm9yIixmLGwpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5maXJlUGFyc2VFcnJvcj1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgicGFyc2VFcnJvciIsYSk7cmV0dXJuIHRoaXN9O00ucHJvdG90eXBlLmF0dGFjaFJlcXVlc3RTZW50PWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJyZXF1ZXN0U2VudCIsZCxmLGwpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5kZXRhY2hSZXF1ZXN0U2VudD1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoInJlcXVlc3RTZW50IixmLGwpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5maXJlUmVxdWVzdFNlbnQ9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoInJlcXVlc3RTZW50IixhKTtyZXR1cm4gdGhpc307TS5wcm90b3R5cGUuYXR0YWNoUmVxdWVzdENvbXBsZXRlZD1mdW5jdGlvbihkLGYsbCl7dGhpcy5hdHRhY2hFdmVudCgicmVxdWVzdENvbXBsZXRlZCIsZCxmLGwpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5kZXRhY2hSZXF1ZXN0Q29tcGxldGVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgicmVxdWVzdENvbXBsZXRlZCIsZixsKTtyZXR1cm4gdGhpc307TS5wcm90b3R5cGUuZmlyZVJlcXVlc3RDb21wbGV0ZWQ9ZnVuY3Rpb24oYSl7dGhpcy5maXJlRXZlbnQoInJlcXVlc3RDb21wbGV0ZWQiLGEpO3JldHVybiB0aGlzfTtNLnByb3RvdHlwZS5nZXRPYmplY3Q9ZnVuY3Rpb24ocCxjKXtyZXR1cm4gdGhpcy5nZXRQcm9wZXJ0eShwLGMpfTtNLnByb3RvdHlwZS5nZXRDb250ZXh0PWZ1bmN0aW9uKHApe2lmKCFxLnNhcC5zdGFydHNXaXRoKHAsIi8iKSl7dGhyb3cgbmV3IEVycm9yKCJQYXRoICIrcCsiIG11c3Qgc3RhcnQgd2l0aCBhIC8gIil9dmFyIGM9dGhpcy5tQ29udGV4dHNbcF07aWYoIWMpe2M9bmV3IEModGhpcyxwKTt0aGlzLm1Db250ZXh0c1twXT1jfXJldHVybiBjfTtNLnByb3RvdHlwZS5yZXNvbHZlPWZ1bmN0aW9uKHAsYyl7dmFyIGk9IXEuc2FwLnN0YXJ0c1dpdGgocCwiLyIpLHI9cCxzO2lmKGkpe2lmKGMpe3M9Yy5nZXRQYXRoKCk7cj1zKyhxLnNhcC5lbmRzV2l0aChzLCIvIik/IiI6Ii8iKStwfWVsc2V7cj10aGlzLmlzTGVnYWN5U3ludGF4KCk/Ii8iK3A6dW5kZWZpbmVkfX1pZihyJiZyIT09Ii8iJiZxLnNhcC5lbmRzV2l0aChyLCIvIikpe3I9ci5zdWJzdHIoMCxyLmxlbmd0aC0xKX1yZXR1cm4gcn07TS5wcm90b3R5cGUuYWRkQmluZGluZz1mdW5jdGlvbihiKXt0aGlzLmFCaW5kaW5ncy5wdXNoKGIpfTtNLnByb3RvdHlwZS5yZW1vdmVCaW5kaW5nPWZ1bmN0aW9uKGIpe2Zvcih2YXIgaT0wO2k8dGhpcy5hQmluZGluZ3MubGVuZ3RoO2krKyl7aWYodGhpcy5hQmluZGluZ3NbaV09PWIpe3RoaXMuYUJpbmRpbmdzLnNwbGljZShpLDEpO2JyZWFrfX19O00ucHJvdG90eXBlLmdldERlZmF1bHRCaW5kaW5nTW9kZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNEZWZhdWx0QmluZGluZ01vZGV9O00ucHJvdG90eXBlLnNldERlZmF1bHRCaW5kaW5nTW9kZT1mdW5jdGlvbihtKXtpZih0aGlzLmlzQmluZGluZ01vZGVTdXBwb3J0ZWQobSkpe3RoaXMuc0RlZmF1bHRCaW5kaW5nTW9kZT1tfWVsc2V7dGhyb3cgbmV3IEVycm9yKCJCaW5kaW5nIG1vZGUgIittKyIgaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIG1vZGVsLiIpfX07TS5wcm90b3R5cGUuaXNCaW5kaW5nTW9kZVN1cHBvcnRlZD1mdW5jdGlvbihtKXtyZXR1cm4obSBpbiB0aGlzLm1TdXBwb3J0ZWRCaW5kaW5nTW9kZXMpfTtNLnByb3RvdHlwZS5zZXRMZWdhY3lTeW50YXg9ZnVuY3Rpb24obCl7dGhpcy5iTGVnYWN5U3ludGF4PWx9O00ucHJvdG90eXBlLmlzTGVnYWN5U3ludGF4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYkxlZ2FjeVN5bnRheH07TS5wcm90b3R5cGUuc2V0U2l6ZUxpbWl0PWZ1bmN0aW9uKHMpe3RoaXMuaVNpemVMaW1pdD1zfTtNLnByb3RvdHlwZS5nZXRJbnRlcmZhY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307TS5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbihmKXt0aGlzLmNoZWNrVXBkYXRlKGYpfTtNLnByb3RvdHlwZS5jaGVja1VwZGF0ZT1mdW5jdGlvbihmKXt2YXIgYj10aGlzLmFCaW5kaW5ncy5zbGljZSgwKTtxLmVhY2goYixmdW5jdGlvbihpLG8pe28uY2hlY2tVcGRhdGUoZil9KX07TS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMub0RhdGE9e307dGhpcy5hQmluZGluZ3M9W107dGhpcy5tQ29udGV4dHM9e307dGhpcy5iRGVzdHJveWVkPXRydWU7RS5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiBNfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLlNlbGVjdGlvbk1vZGVsJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLlNlbGVjdGlvbk1vZGVsJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL1NlbGVjdGlvbk1vZGVsIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvRXZlbnRQcm92aWRlciddLGZ1bmN0aW9uKHEsRSl7InVzZSBzdHJpY3QiO3ZhciBTPUUuZXh0ZW5kKCJzYXAudWkubW9kZWwuU2VsZWN0aW9uTW9kZWwiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihzKXtFLmFwcGx5KHRoaXMpO3RoaXMuaVNlbGVjdGlvbk1vZGU9c3x8Uy5TSU5HTEVfU0VMRUNUSU9OO3RoaXMuYVNlbGVjdGVkSW5kaWNlcz1bXTt0aGlzLmlMZWFkSW5kZXg9LTE7dGhpcy5mblNvcnQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1ifTt0aGlzLmZuU29ydFJldmVyc2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYi1hfX19KTtTLlNJTkdMRV9TRUxFQ1RJT049MDtTLk1VTFRJX1NFTEVDVElPTj0xO1MucHJvdG90eXBlLmdldFNlbGVjdGlvbk1vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pU2VsZWN0aW9uTW9kZX07Uy5wcm90b3R5cGUuc2V0U2VsZWN0aW9uTW9kZT1mdW5jdGlvbihzKXt0aGlzLmlTZWxlY3Rpb25Nb2RlPXN8fFMuU0lOR0xFX1NFTEVDVElPTn07Uy5wcm90b3R5cGUuaXNTZWxlY3RlZEluZGV4PWZ1bmN0aW9uKGkpe3JldHVybiBxLmluQXJyYXkoaSx0aGlzLmFTZWxlY3RlZEluZGljZXMpIT09LTF9O1MucHJvdG90eXBlLmdldExlYWRTZWxlY3RlZEluZGV4PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaUxlYWRJbmRleH07Uy5wcm90b3R5cGUuc2V0TGVhZFNlbGVjdGVkSW5kZXg9ZnVuY3Rpb24obCl7dGhpcy5zZXRTZWxlY3Rpb25JbnRlcnZhbChsLGwpO3JldHVybiB0aGlzfTtTLnByb3RvdHlwZS5nZXRNaW5TZWxlY3Rpb25JbmRleD1mdW5jdGlvbigpe2lmKHRoaXMuYVNlbGVjdGVkSW5kaWNlcy5sZW5ndGg+MCl7dmFyIGk9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzLnNvcnQodGhpcy5mblNvcnQpO3JldHVybiBpWzBdfWVsc2V7cmV0dXJuLTF9fTtTLnByb3RvdHlwZS5nZXRNYXhTZWxlY3Rpb25JbmRleD1mdW5jdGlvbigpe2lmKHRoaXMuYVNlbGVjdGVkSW5kaWNlcy5sZW5ndGg+MCl7dmFyIGk9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzLnNvcnQodGhpcy5mblNvcnRSZXZlcnNlKTtyZXR1cm4gaVswXX1lbHNle3JldHVybi0xfX07Uy5wcm90b3R5cGUuZ2V0U2VsZWN0ZWRJbmRpY2VzPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzLnNvcnQodGhpcy5mblNvcnQpO3JldHVybiBpfTtTLnByb3RvdHlwZS5zZXRTZWxlY3Rpb25JbnRlcnZhbD1mdW5jdGlvbihmLHQpe2lmKHRoaXMuaVNlbGVjdGlvbk1vZGU9PT1TLlNJTkdMRV9TRUxFQ1RJT04pe2Y9dH12YXIgRj1NYXRoLm1pbihmLHQpO3ZhciBUPU1hdGgubWF4KGYsdCk7dmFyIGM9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzLnNsaWNlKCk7dmFyIHM9W107Zm9yKHZhciBpPUY7aTw9VDtpKyspe3MucHVzaChpKTt2YXIgcD1xLmluQXJyYXkoaSxjKTtpZihwPT09LTEpe2MucHVzaChpKX1lbHNle2Muc3BsaWNlKHAsMSl9fXRoaXMuX3VwZGF0ZShzLHQsYyk7cmV0dXJuIHRoaXN9O1MucHJvdG90eXBlLmFkZFNlbGVjdGlvbkludGVydmFsPWZ1bmN0aW9uKGYsdCl7aWYodGhpcy5pU2VsZWN0aW9uTW9kZT09PVMuU0lOR0xFX1NFTEVDVElPTil7cmV0dXJuIHRoaXMuc2V0U2VsZWN0aW9uSW50ZXJ2YWwoZix0KX12YXIgRj1NYXRoLm1pbihmLHQpO3ZhciBUPU1hdGgubWF4KGYsdCk7dmFyIGM9W107dmFyIHM9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzO2Zvcih2YXIgaT1GO2k8PVQ7aSsrKXtpZihxLmluQXJyYXkoaSxzKT09PS0xKXtzLnB1c2goaSk7Yy5wdXNoKGkpfX10aGlzLl91cGRhdGUocyxULGMpO3JldHVybiB0aGlzfTtTLnByb3RvdHlwZS5yZW1vdmVTZWxlY3Rpb25JbnRlcnZhbD1mdW5jdGlvbihmLHQpe2lmKHRoaXMuaVNlbGVjdGlvbk1vZGU9PT1TLlNJTkdMRV9TRUxFQ1RJT04pe2Y9dH12YXIgRj1NYXRoLm1pbihmLHQpO3ZhciBUPU1hdGgubWF4KGYsdCk7dmFyIGM9W107dmFyIHM9dGhpcy5hU2VsZWN0ZWRJbmRpY2VzO3ZhciBsPXRoaXMuaUxlYWRJbmRleDtmb3IodmFyIGk9RjtpPD1UO2krKyl7dmFyIEk9cS5pbkFycmF5KGkscyk7aWYoST4tMSl7cy5zcGxpY2UoSSwxKTtjLnB1c2goaSl9aWYoaT09PXRoaXMuaUxlYWRJbmRleCl7bD0tMX19dGhpcy5fdXBkYXRlKHMsbCxjKTtyZXR1cm4gdGhpc307Uy5wcm90b3R5cGUuY2xlYXJTZWxlY3Rpb249ZnVuY3Rpb24oKXtpZih0aGlzLmFTZWxlY3RlZEluZGljZXMubGVuZ3RoPjB8fHRoaXMuaUxlYWRJbmRleCE9PS0xKXt0aGlzLl91cGRhdGUoW10sLTEsdGhpcy5hU2VsZWN0ZWRJbmRpY2VzLnNsaWNlKCkpfXJldHVybiB0aGlzfTtTLnByb3RvdHlwZS5hdHRhY2hTZWxlY3Rpb25DaGFuZ2VkPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJzZWxlY3Rpb25DaGFuZ2VkIixkLGYsbCk7cmV0dXJuIHRoaXN9O1MucHJvdG90eXBlLmRldGFjaFNlbGVjdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJzZWxlY3Rpb25DaGFuZ2VkIixmLGwpO3JldHVybiB0aGlzfTtTLnByb3RvdHlwZS5maXJlU2VsZWN0aW9uQ2hhbmdlZD1mdW5jdGlvbihhKXt0aGlzLmZpcmVFdmVudCgic2VsZWN0aW9uQ2hhbmdlZCIsYSk7cmV0dXJuIHRoaXN9O1MucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24ocyxsLGMpe3ZhciBwPXtyb3dJbmRpY2VzOmMmJmMuc29ydCh0aGlzLmZuU29ydCl9O3RoaXMuYVNlbGVjdGVkSW5kaWNlcz1zO3Aub2xkSW5kZXg9dGhpcy5pTGVhZEluZGV4O2lmKHRoaXMuaUxlYWRJbmRleCE9PWwpe3RoaXMuaUxlYWRJbmRleD1sO3AubGVhZEluZGV4PXRoaXMuaUxlYWRJbmRleH1pZihjLmxlbmd0aD4wfHx0eXBlb2YgcC5sZWFkSW5kZXghPT0idW5kZWZpbmVkIil7dGhpcy5maXJlU2VsZWN0aW9uQ2hhbmdlZChwKX19O3JldHVybiBTfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLlNpbXBsZVR5cGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuU2ltcGxlVHlwZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9TaW1wbGVUeXBlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9Gb3JtYXRFeGNlcHRpb24nLCcuL1BhcnNlRXhjZXB0aW9uJywnLi9UeXBlJywnLi9WYWxpZGF0ZUV4Y2VwdGlvbiddLGZ1bmN0aW9uKHEsRixQLFQsVil7InVzZSBzdHJpY3QiO3ZhciBTPVQuZXh0ZW5kKCJzYXAudWkubW9kZWwuU2ltcGxlVHlwZSIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKGYsYyl7VC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zZXRGb3JtYXRPcHRpb25zKGZ8fHt9KTt0aGlzLnNldENvbnN0cmFpbnRzKGN8fHt9KTt0aGlzLnNOYW1lPSJTaW1wbGVUeXBlIn0sbWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwdWJsaWNNZXRob2RzOlsic2V0Q29uc3RyYWludHMiLCJzZXRGb3JtYXRPcHRpb25zIiwiZm9ybWF0VmFsdWUiLCJwYXJzZVZhbHVlIiwidmFsaWRhdGVWYWx1ZSJdfX0pO1MucHJvdG90eXBlLnNldENvbnN0cmFpbnRzPWZ1bmN0aW9uKGMpe3RoaXMub0NvbnN0cmFpbnRzPWN9O1MucHJvdG90eXBlLnNldEZvcm1hdE9wdGlvbnM9ZnVuY3Rpb24oZil7dGhpcy5vRm9ybWF0T3B0aW9ucz1mfTtyZXR1cm4gU30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5UcmVlQmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5UcmVlQmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9UcmVlQmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQmluZGluZyddLGZ1bmN0aW9uKHEsQil7InVzZSBzdHJpY3QiO3ZhciBUPUIuZXh0ZW5kKCJzYXAudWkubW9kZWwuVHJlZUJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxmLFApe0IuY2FsbCh0aGlzLG0scCxjLFApO3RoaXMuYUZpbHRlcnM9Zjt0aGlzLmJEaXNwbGF5Um9vdE5vZGU9UCYmUC5kaXNwbGF5Um9vdE5vZGU9PT10cnVlfSxtZXRhZGF0YTp7ImFic3RyYWN0Ijp0cnVlLHB1YmxpY01ldGhvZHM6WyJnZXRSb290Q29udGV4dHMiLCJnZXROb2RlQ29udGV4dHMiLCJoYXNDaGlsZHJlbiIsImZpbHRlciJdfX0pO1QucHJvdG90eXBlLmF0dGFjaEZpbHRlcj1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoIl9maWx0ZXIiLGYsbCl9O1QucHJvdG90eXBlLmRldGFjaEZpbHRlcj1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoIl9maWx0ZXIiLGYsbCl9O1QucHJvdG90eXBlLl9maXJlRmlsdGVyPWZ1bmN0aW9uKGEpe3RoaXMuZmlyZUV2ZW50KCJfZmlsdGVyIixhKX07cmV0dXJuIFR9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwub2RhdGEuT0RhdGFDb250ZXh0QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YUNvbnRleHRCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL29kYXRhL09EYXRhQ29udGV4dEJpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvbW9kZWwvQ29udGV4dEJpbmRpbmcnXSxmdW5jdGlvbihxLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgTz1DLmV4dGVuZCgic2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhQ29udGV4dEJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxQLGUpe0MuY2FsbCh0aGlzLG0scCxjLFAsZSl9fSk7Ty5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMscj10aGlzLm9Nb2RlbC5yZXNvbHZlKHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCksZD10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCksUj10aGlzLm9Nb2RlbC5faXNSZWxvYWROZWVkZWQocixkLHRoaXMubVBhcmFtZXRlcnMpO2lmKFIpe3RoaXMuZmlyZURhdGFSZXF1ZXN0ZWQoKX10aGlzLm9Nb2RlbC5jcmVhdGVCaW5kaW5nQ29udGV4dCh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQsdGhpcy5tUGFyYW1ldGVycyxmdW5jdGlvbihjKXt0Lm9FbGVtZW50Q29udGV4dD1jO3QuX2ZpcmVDaGFuZ2UoKTtpZihSKXt0LmZpcmVEYXRhUmVjZWl2ZWQoKX19LFIpfTtPLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKGYsYyl7dmFyIHQ9dGhpcyxrLHMsYj1mYWxzZTtpZihjKXtzPXRoaXMub01vZGVsLl9nZXRPYmplY3QodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0KTtpZihzKXtrPXRoaXMub01vZGVsLl9nZXRLZXkocyk7aWYoayBpbiBjKXtiPXRydWV9fX1lbHNle2I9dHJ1ZX1pZihmfHxiKXt0aGlzLmZpcmVEYXRhUmVxdWVzdGVkKCk7dGhpcy5vTW9kZWwuY3JlYXRlQmluZGluZ0NvbnRleHQodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0LHRoaXMubVBhcmFtZXRlcnMsZnVuY3Rpb24obyl7aWYodC5vRWxlbWVudENvbnRleHQ9PW8pe2lmKGYpe3QuX2ZpcmVDaGFuZ2UoKX19ZWxzZXt0Lm9FbGVtZW50Q29udGV4dD1vO3QuX2ZpcmVDaGFuZ2UoKX10LmZpcmVEYXRhUmVjZWl2ZWQoKX0sdHJ1ZSl9fTtPLnByb3RvdHlwZS5zZXRDb250ZXh0PWZ1bmN0aW9uKGMpe3ZhciB0PXRoaXMscixkLFI7aWYodGhpcy5vQ29udGV4dCE9YyYmdGhpcy5pc1JlbGF0aXZlKCkpe3I9dGhpcy5vTW9kZWwucmVzb2x2ZSh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpLGQ9dGhpcy5vTW9kZWwuX2dldE9iamVjdCh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpLFI9dGhpcy5vTW9kZWwuX2lzUmVsb2FkTmVlZGVkKHIsZCx0aGlzLm1QYXJhbWV0ZXJzKTt0aGlzLm9Db250ZXh0PWM7aWYoUil7dGhpcy5maXJlRGF0YVJlcXVlc3RlZCgpfXRoaXMub01vZGVsLmNyZWF0ZUJpbmRpbmdDb250ZXh0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCx0aGlzLm1QYXJhbWV0ZXJzLGZ1bmN0aW9uKGMpe3Qub0VsZW1lbnRDb250ZXh0PWM7dC5fZmlyZUNoYW5nZSgpO2lmKFIpe3QuZmlyZURhdGFSZWNlaXZlZCgpfX0sUil9fTtyZXR1cm4gT30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YUxpc3RCaW5kaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhTGlzdEJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvb2RhdGEvT0RhdGFMaXN0QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9jb3JlL2Zvcm1hdC9EYXRlRm9ybWF0Jywnc2FwL3VpL21vZGVsL0ZpbHRlclR5cGUnLCdzYXAvdWkvbW9kZWwvTGlzdEJpbmRpbmcnLCcuL0NvdW50TW9kZScsJy4vRmlsdGVyJ10sZnVuY3Rpb24ocSxELEYsTCxDLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgTz1MLmV4dGVuZCgic2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhTGlzdEJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxzLGYsUCl7TC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zRmlsdGVyUGFyYW1zPW51bGw7dGhpcy5zU29ydFBhcmFtcz1udWxsO3RoaXMuc1JhbmdlUGFyYW1zPW51bGw7dGhpcy5zQ3VzdG9tUGFyYW1zPXRoaXMub01vZGVsLmNyZWF0ZUN1c3RvbVBhcmFtcyh0aGlzLm1QYXJhbWV0ZXJzKTt0aGlzLmlTdGFydEluZGV4PTA7dGhpcy5iUGVuZGluZ0NoYW5nZT1mYWxzZTt0aGlzLmFLZXlzPVtdO3RoaXMuYkluaXRpYWxpemVkPWZhbHNlO3RoaXMuc0NvdW50TW9kZT0oUCYmUC5jb3VudE1vZGUpfHx0aGlzLm9Nb2RlbC5zRGVmYXVsdENvdW50TW9kZTt0aGlzLmJSZWZyZXNoPWZhbHNlO3RoaXMuYk5lZWRzVXBkYXRlPWZhbHNlO3RoaXMuYkRhdGFBdmFpbGFibGU9ZmFsc2U7aWYoIXRoaXMub01vZGVsLmdldFNlcnZpY2VNZXRhZGF0YSgpKXt2YXIgdD10aGlzLGI9ZnVuY3Rpb24oZSl7dC5faW5pdFNvcnRlcnNGaWx0ZXJzKCk7dC5vTW9kZWwuZGV0YWNoTWV0YWRhdGFMb2FkZWQoYil9O3RoaXMub01vZGVsLmF0dGFjaE1ldGFkYXRhTG9hZGVkKHRoaXMsYil9ZWxzZXt0aGlzLl9pbml0U29ydGVyc0ZpbHRlcnMoKX12YXIgcj10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYocS5pc0FycmF5KHIpJiYhcyYmIWYpe3RoaXMuYUtleXM9cjt0aGlzLmlMZW5ndGg9ci5sZW5ndGg7dGhpcy5iTGVuZ3RoRmluYWw9dHJ1ZTt0aGlzLmJEYXRhQXZhaWxhYmxlPXRydWV9ZWxzZXtpZih0aGlzLm9Nb2RlbC5nZXRTZXJ2aWNlTWV0YWRhdGEoKSl7dGhpcy5yZXNldERhdGEoKX19fSxtZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImdldExlbmd0aCJdfX0pO08ucHJvdG90eXBlLmdldENvbnRleHRzPWZ1bmN0aW9uKHMsbCx0KXt0aGlzLmJJbml0aWFsaXplZD10cnVlO3RoaXMuaUxhc3RMZW5ndGg9bDt0aGlzLmlMYXN0U3RhcnRJbmRleD1zO3RoaXMuaUxhc3RUaHJlc2hvbGQ9dDtpZighcyl7cz0wfWlmKCFsKXtsPXRoaXMub01vZGVsLmlTaXplTGltaXQ7aWYodGhpcy5iTGVuZ3RoRmluYWwmJnRoaXMuaUxlbmd0aDxsKXtsPXRoaXMuaUxlbmd0aH19aWYoIXQpe3Q9MH12YXIgYj10cnVlLGM9dGhpcy5fZ2V0Q29udGV4dHMocyxsKSxvPXt9LFM7Uz10aGlzLmNhbGN1bGF0ZVNlY3Rpb24ocyxsLHQsYyk7Yj1jLmxlbmd0aCE9bCYmISh0aGlzLmJMZW5ndGhGaW5hbCYmYy5sZW5ndGg+PXRoaXMuaUxlbmd0aC1zKTtpZih0aGlzLm9Nb2RlbC5nZXRTZXJ2aWNlTWV0YWRhdGEoKSl7aWYoIXRoaXMuYlBlbmRpbmdSZXF1ZXN0JiZTLmxlbmd0aD4wJiYoYnx8bDxTLmxlbmd0aCkpe3RoaXMubG9hZERhdGEoUy5zdGFydEluZGV4LFMubGVuZ3RoKTtjLmRhdGFSZXF1ZXN0ZWQ9dHJ1ZX19aWYodGhpcy5iUmVmcmVzaCl7aWYodGhpcy5iTGVuZ3RoRmluYWwmJnRoaXMuaUxlbmd0aD09MCl7dGhpcy5sb2FkRGF0YShTLnN0YXJ0SW5kZXgsUy5sZW5ndGgsdHJ1ZSk7Yy5kYXRhUmVxdWVzdGVkPXRydWV9dGhpcy5iUmVmcmVzaD1mYWxzZX1lbHNle2Zvcih2YXIgaT0wO2k8Yy5sZW5ndGg7aSsrKXtvW2NbaV0uZ2V0UGF0aCgpXT1jW2ldLmdldE9iamVjdCgpfWlmKHRoaXMuYlVzZUV4dGVuZGVkQ2hhbmdlRGV0ZWN0aW9uKXtpZih0aGlzLmFMYXN0Q29udGV4dHMmJnM8dGhpcy5pTGFzdEVuZEluZGV4KXt2YXIgZD10aGlzO3ZhciBlPXEuc2FwLmFycmF5RGlmZih0aGlzLmFMYXN0Q29udGV4dHMsYyxmdW5jdGlvbihmLG4pe3JldHVybiBxLnNhcC5lcXVhbChmJiZkLm9MYXN0Q29udGV4dERhdGEmJmQub0xhc3RDb250ZXh0RGF0YVtmLmdldFBhdGgoKV0sbiYmbyYmb1tuLmdldFBhdGgoKV0pfSk7Yy5kaWZmPWV9fXRoaXMuaUxhc3RFbmRJbmRleD1zK2w7dGhpcy5hTGFzdENvbnRleHRzPWMuc2xpY2UoMCk7dGhpcy5vTGFzdENvbnRleHREYXRhPXEuZXh0ZW5kKHRydWUse30sbyl9cmV0dXJuIGN9O08ucHJvdG90eXBlLl9nZXRDb250ZXh0cz1mdW5jdGlvbihzLGwpe3ZhciBjPVtdLG8saztpZighcyl7cz0wfWlmKCFsKXtsPXRoaXMub01vZGVsLmlTaXplTGltaXQ7aWYodGhpcy5iTGVuZ3RoRmluYWwmJnRoaXMuaUxlbmd0aDxsKXtsPXRoaXMuaUxlbmd0aH19Zm9yKHZhciBpPXM7aTxzK2w7aSsrKXtrPXRoaXMuYUtleXNbaV07aWYoIWspe2JyZWFrfW89dGhpcy5vTW9kZWwuZ2V0Q29udGV4dCgnLycrayk7Yy5wdXNoKG8pfXJldHVybiBjfTtPLnByb3RvdHlwZS5jYWxjdWxhdGVTZWN0aW9uPWZ1bmN0aW9uKHMsbCx0LGMpe3ZhciBiPWZhbHNlLFMsZCxwLFAscixvPXt9LGs7ZD1zO1M9MDtmb3IodmFyIGk9cztpPj1NYXRoLm1heChzLXQsMCk7aS0tKXtrPXRoaXMuYUtleXNbaV07aWYoIWspe1A9aSsxO2JyZWFrfX1mb3IodmFyIGo9cytsO2o8cytsK3Q7aisrKXtrPXRoaXMuYUtleXNbal07aWYoIWspe3A9ajticmVha319cj1zLVA7aWYoUCYmcz50JiZyPHQpe2lmKGMubGVuZ3RoIT1sKXtkPXMtdH1lbHNle2Q9UC10fVM9dH1pZihkPT1zKXtkKz1jLmxlbmd0aH1pZihjLmxlbmd0aCE9bCl7Uys9bC1jLmxlbmd0aH1yPXAtcy1sO2lmKHI9PTApe1MrPXR9aWYocCYmcjx0JiZyPjApe2lmKGQ+cyl7ZD1wO1MrPXR9fWlmKHRoaXMuYkxlbmd0aEZpbmFsJiZ0aGlzLmlMZW5ndGg8KFMrZCkpe1M9dGhpcy5pTGVuZ3RoLWR9by5zdGFydEluZGV4PWQ7by5sZW5ndGg9UztyZXR1cm4gb307Ty5wcm90b3R5cGUuc2V0Q29udGV4dD1mdW5jdGlvbihjKXtpZih0aGlzLm9Db250ZXh0IT1jKXt0aGlzLm9Db250ZXh0PWM7aWYodGhpcy5pc1JlbGF0aXZlKCkpe3RoaXMub0VudGl0eVR5cGU9dGhpcy5fZ2V0RW50aXR5VHlwZSgpO2lmKHRoaXMuYkluaXRpYWxpemVkKXt2YXIgcj10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYocS5pc0FycmF5KHIpKXt0aGlzLmFLZXlzPXI7dGhpcy5pTGVuZ3RoPXIubGVuZ3RoO3RoaXMuYkxlbmd0aEZpbmFsPXRydWU7dGhpcy5fZmlyZUNoYW5nZSgpfWVsc2V7dGhpcy5yZWZyZXNoKCl9fX19fTtPLnByb3RvdHlwZS5sb2FkRGF0YT1mdW5jdGlvbihzLGwscCl7dmFyIHQ9dGhpcyxJPWZhbHNlO2lmKHN8fGwpe3RoaXMuc1JhbmdlUGFyYW1zPSIkc2tpcD0iK3MrIiYkdG9wPSIrbDt0aGlzLmlTdGFydEluZGV4PXN9ZWxzZXtzPXRoaXMuaVN0YXJ0SW5kZXh9dmFyIFA9W107aWYodGhpcy5zUmFuZ2VQYXJhbXMpe1AucHVzaCh0aGlzLnNSYW5nZVBhcmFtcyl9aWYodGhpcy5zU29ydFBhcmFtcyl7UC5wdXNoKHRoaXMuc1NvcnRQYXJhbXMpfWlmKHRoaXMuc0ZpbHRlclBhcmFtcyl7UC5wdXNoKHRoaXMuc0ZpbHRlclBhcmFtcyl9aWYodGhpcy5zQ3VzdG9tUGFyYW1zKXtQLnB1c2godGhpcy5zQ3VzdG9tUGFyYW1zKX1pZighdGhpcy5iTGVuZ3RoRmluYWwmJih0aGlzLnNDb3VudE1vZGU9PUMuSW5saW5lfHx0aGlzLnNDb3VudE1vZGU9PUMuQm90aCkpe1AucHVzaCgiJGlubGluZWNvdW50PWFsbHBhZ2VzIik7ST10cnVlfWZ1bmN0aW9uIFMoZCl7cS5lYWNoKGQucmVzdWx0cyxmdW5jdGlvbihpLGYpe3QuYUtleXNbcytpXT10Lm9Nb2RlbC5fZ2V0S2V5KGYpfSk7aWYoSSYmZC5fX2NvdW50KXt0LmlMZW5ndGg9cGFyc2VJbnQoZC5fX2NvdW50LDEwKTt0LmJMZW5ndGhGaW5hbD10cnVlfWlmKHQuaUxlbmd0aDxzK2QucmVzdWx0cy5sZW5ndGgpe3QuaUxlbmd0aD1zK2QucmVzdWx0cy5sZW5ndGg7dC5iTGVuZ3RoRmluYWw9ZmFsc2V9aWYoZC5yZXN1bHRzLmxlbmd0aDxsfHxsPT09dW5kZWZpbmVkKXt0LmlMZW5ndGg9cytkLnJlc3VsdHMubGVuZ3RoO3QuYkxlbmd0aEZpbmFsPXRydWV9aWYocz09MCYmZC5yZXN1bHRzLmxlbmd0aD09MCl7dC5pTGVuZ3RoPTA7dC5iTGVuZ3RoRmluYWw9dHJ1ZX10Lm9SZXF1ZXN0SGFuZGxlPW51bGw7dC5iUGVuZGluZ1JlcXVlc3Q9ZmFsc2U7dC5iTmVlZHNVcGRhdGU9dHJ1ZX1mdW5jdGlvbiBjKCl7dC5maXJlRGF0YVJlY2VpdmVkKCl9ZnVuY3Rpb24gZShFKXt0Lm9SZXF1ZXN0SGFuZGxlPW51bGw7dC5iUGVuZGluZ1JlcXVlc3Q9ZmFsc2U7dC5maXJlRGF0YVJlY2VpdmVkKCl9ZnVuY3Rpb24gdShoKXt0Lm9SZXF1ZXN0SGFuZGxlPWh9dmFyIGI9dGhpcy5zUGF0aCxvPXRoaXMub0NvbnRleHQ7aWYodGhpcy5pc1JlbGF0aXZlKCkpe2I9dGhpcy5vTW9kZWwucmVzb2x2ZShiLG8pfWlmKGIpe2lmKHApe3ZhciBVPXRoaXMub01vZGVsLl9jcmVhdGVSZXF1ZXN0VXJsKGIsUCk7dGhpcy5maXJlRGF0YVJlcXVlc3RlZCgpO3RoaXMub01vZGVsLmZpcmVSZXF1ZXN0U2VudCh7dXJsOlUsbWV0aG9kOiJHRVQiLGFzeW5jOnRydWV9KTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5iTmVlZHNVcGRhdGU9dHJ1ZTt0LmNoZWNrVXBkYXRlKCk7dC5vTW9kZWwuZmlyZVJlcXVlc3RDb21wbGV0ZWQoe3VybDpVLG1ldGhvZDoiR0VUIixhc3luYzp0cnVlLHN1Y2Nlc3M6dHJ1ZX0pO3QuZmlyZURhdGFSZWNlaXZlZCgpfSwwKX1lbHNle3RoaXMuYlBlbmRpbmdSZXF1ZXN0PXRydWU7dGhpcy5maXJlRGF0YVJlcXVlc3RlZCgpO3RoaXMub01vZGVsLl9sb2FkRGF0YShiLFAsUyxlLGZhbHNlLHUsYyl9fX07Ty5wcm90b3R5cGUuZ2V0TGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaUxlbmd0aH07Ty5wcm90b3R5cGUuX2dldExlbmd0aD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dmFyIHA9W107aWYodGhpcy5zRmlsdGVyUGFyYW1zKXtwLnB1c2godGhpcy5zRmlsdGVyUGFyYW1zKX1pZih0aGlzLm1QYXJhbWV0ZXJzJiZ0aGlzLm1QYXJhbWV0ZXJzLmN1c3RvbSl7dmFyIGM9e2N1c3RvbTp7fX07cS5lYWNoKHRoaXMubVBhcmFtZXRlcnMuY3VzdG9tLGZ1bmN0aW9uKHMsdil7Yy5jdXN0b21bc109dn0pO3AucHVzaCh0aGlzLm9Nb2RlbC5jcmVhdGVDdXN0b21QYXJhbXMoYykpfWZ1bmN0aW9uIF8oZCl7dC5pTGVuZ3RoPXBhcnNlSW50KGQsMTApO3QuYkxlbmd0aEZpbmFsPXRydWV9ZnVuY3Rpb24gYihlKXt2YXIgRT0iUmVxdWVzdCBmb3IgJGNvdW50IGZhaWxlZDogIitlLm1lc3NhZ2U7aWYoZS5yZXNwb25zZSl7RSs9IiwgIitlLnJlc3BvbnNlLnN0YXR1c0NvZGUrIiwgIitlLnJlc3BvbnNlLnN0YXR1c1RleHQrIiwgIitlLnJlc3BvbnNlLmJvZHl9cS5zYXAubG9nLndhcm5pbmcoRSl9dmFyIFA9dGhpcy5vTW9kZWwucmVzb2x2ZSh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpO2lmKFApe3ZhciB1PXRoaXMub01vZGVsLl9jcmVhdGVSZXF1ZXN0VXJsKFArIi8kY291bnQiLG51bGwscCk7dmFyIHI9dGhpcy5vTW9kZWwuX2NyZWF0ZVJlcXVlc3QodSwiR0VUIixmYWxzZSk7ci5oZWFkZXJzWyJBY2NlcHQiXT0idGV4dC9wbGFpbiI7dGhpcy5vTW9kZWwuX3JlcXVlc3QocixfLGIsdW5kZWZpbmVkLHVuZGVmaW5lZCx0aGlzLm9Nb2RlbC5nZXRTZXJ2aWNlTWV0YWRhdGEoKSl9fTtPLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKGYsYyxlKXt2YXIgYj1mYWxzZTtpZighZil7aWYoZSl7dmFyIHI9dGhpcy5vTW9kZWwucmVzb2x2ZSh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpO3ZhciBFPXRoaXMub01vZGVsLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChyKTtpZihFJiYoRS5lbnRpdHlUeXBlIGluIGUpKXtiPXRydWV9fWlmKGMmJiFiKXtxLmVhY2godGhpcy5hS2V5cyxmdW5jdGlvbihpLGspe2lmKGsgaW4gYyl7Yj10cnVlO3JldHVybiBmYWxzZX19KX1pZighYyYmIWUpe2I9dHJ1ZX19aWYoZnx8Yil7dGhpcy5hYm9ydFBlbmRpbmdSZXF1ZXN0KCk7dGhpcy5yZXNldERhdGEoKTt0aGlzLl9maXJlUmVmcmVzaCh7cmVhc29uOnNhcC51aS5tb2RlbC5DaGFuZ2VSZWFzb24uUmVmcmVzaH0pfX07Ty5wcm90b3R5cGUuX2ZpcmVSZWZyZXNoPWZ1bmN0aW9uKEEpe3RoaXMuYlJlZnJlc2g9dHJ1ZTt0aGlzLmZpcmVFdmVudCgicmVmcmVzaCIsQSl9O08ucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXtpZih0aGlzLmJEYXRhQXZhaWxhYmxlKXt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5DaGFuZ2V9KX1lbHNle3RoaXMuX2ZpcmVSZWZyZXNoKHtyZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5SZWZyZXNofSl9fTtPLnByb3RvdHlwZS5jaGVja1VwZGF0ZT1mdW5jdGlvbihmLGMpe3ZhciBiPXRoaXMuc0NoYW5nZVJlYXNvbj90aGlzLnNDaGFuZ2VSZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5DaGFuZ2UsZD1mYWxzZSxsLG8sdD10aGlzO2lmKCFmJiYhdGhpcy5iTmVlZHNVcGRhdGUpe2lmKGMpe3EuZWFjaCh0aGlzLmFLZXlzLGZ1bmN0aW9uKGksayl7aWYoayBpbiBjKXtkPXRydWU7cmV0dXJuIGZhbHNlfX0pfWVsc2V7ZD10cnVlfWlmKGQmJnRoaXMuYUxhc3RDb250ZXh0cyl7ZD1mYWxzZTt2YXIgZT10aGlzLl9nZXRDb250ZXh0cyh0aGlzLmlMYXN0U3RhcnRJbmRleCx0aGlzLmlMYXN0TGVuZ3RoLHRoaXMuaUxhc3RUaHJlc2hvbGQpO2lmKHRoaXMuYUxhc3RDb250ZXh0cy5sZW5ndGghPWUubGVuZ3RoKXtkPXRydWV9ZWxzZXtxLmVhY2godGhpcy5hTGFzdENvbnRleHRzLGZ1bmN0aW9uKGksZyl7bD10Lm9MYXN0Q29udGV4dERhdGFbZy5nZXRQYXRoKCldO289ZVtpXS5nZXRPYmplY3QoKTtpZighcS5zYXAuZXF1YWwobCxvLDMsdHJ1ZSkpe2Q9dHJ1ZTtyZXR1cm4gZmFsc2V9fSl9fX1pZihmfHxkfHx0aGlzLmJOZWVkc1VwZGF0ZSl7dGhpcy5iTmVlZHNVcGRhdGU9ZmFsc2U7dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOmJ9KX10aGlzLnNDaGFuZ2VSZWFzb249dW5kZWZpbmVkfTtPLnByb3RvdHlwZS5yZXNldERhdGE9ZnVuY3Rpb24oKXt0aGlzLmFLZXlzPVtdO3RoaXMuaUxlbmd0aD0wO3RoaXMuYkxlbmd0aEZpbmFsPWZhbHNlO3RoaXMuc0NoYW5nZVJlYXNvbj11bmRlZmluZWQ7dGhpcy5iRGF0YUF2YWlsYWJsZT1mYWxzZTtpZih0aGlzLm9Nb2RlbC5pc0NvdW50U3VwcG9ydGVkKCkmJih0aGlzLnNDb3VudE1vZGU9PUMuUmVxdWVzdHx8dGhpcy5zQ291bnRNb2RlPT1DLkJvdGgpKXt0aGlzLl9nZXRMZW5ndGgoKX19O08ucHJvdG90eXBlLmFib3J0UGVuZGluZ1JlcXVlc3Q9ZnVuY3Rpb24oKXtpZih0aGlzLm9SZXF1ZXN0SGFuZGxlKXt0aGlzLm9SZXF1ZXN0SGFuZGxlLmFib3J0KCk7dGhpcy5vUmVxdWVzdEhhbmRsZT1udWxsO3RoaXMuYlBlbmRpbmdSZXF1ZXN0PWZhbHNlfX07Ty5wcm90b3R5cGUuc29ydD1mdW5jdGlvbihzKXtpZihzIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLlNvcnRlcil7cz1bc119dGhpcy5hU29ydGVycz1zO3RoaXMuY3JlYXRlU29ydFBhcmFtcyhzKTt0aGlzLmFib3J0UGVuZGluZ1JlcXVlc3QoKTt0aGlzLmFLZXlzPVtdO2lmKHRoaXMuYkluaXRpYWxpemVkKXtpZih0aGlzLm9SZXF1ZXN0SGFuZGxlKXt0aGlzLm9SZXF1ZXN0SGFuZGxlLmFib3J0KCk7dGhpcy5vUmVxdWVzdEhhbmRsZT1udWxsO3RoaXMuYlBlbmRpbmdSZXF1ZXN0PWZhbHNlfXRoaXMuc0NoYW5nZVJlYXNvbj1zYXAudWkubW9kZWwuQ2hhbmdlUmVhc29uLlNvcnQ7dGhpcy5fZmlyZVJlZnJlc2goe3JlYXNvbjp0aGlzLnNDaGFuZ2VSZWFzb259KTt0aGlzLl9maXJlU29ydCh7c29ydGVyOnN9KX1yZXR1cm4gdGhpc307Ty5wcm90b3R5cGUuY3JlYXRlU29ydFBhcmFtcz1mdW5jdGlvbihzKXtpZighc3x8cy5sZW5ndGg9PTApe3JldHVybn10aGlzLnNTb3J0UGFyYW1zPSIkb3JkZXJieT0iO2Zvcih2YXIgaT0wO2k8cy5sZW5ndGg7aSsrKXt2YXIgUz1zW2ldO2lmKFMgaW5zdGFuY2VvZiBzYXAudWkubW9kZWwuU29ydGVyKXt0aGlzLnNTb3J0UGFyYW1zKz1TLnNQYXRoO3RoaXMuc1NvcnRQYXJhbXMrPVMuYkRlc2NlbmRpbmc/IiUyMGRlc2MiOiIlMjBhc2MiO3RoaXMuc1NvcnRQYXJhbXMrPSIsIn19dGhpcy5zU29ydFBhcmFtcz10aGlzLnNTb3J0UGFyYW1zLnNsaWNlKDAsLTEpfTtPLnByb3RvdHlwZS5maWx0ZXI9ZnVuY3Rpb24oZixzKXtpZighZil7Zj1bXX1pZihmIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkZpbHRlcil7Zj1bZl19aWYocz09Ri5BcHBsaWNhdGlvbil7dGhpcy5hQXBwbGljYXRpb25GaWx0ZXJzPWZ9ZWxzZXt0aGlzLmFGaWx0ZXJzPWZ9Zj10aGlzLmFGaWx0ZXJzLmNvbmNhdCh0aGlzLmFBcHBsaWNhdGlvbkZpbHRlcnMpO2lmKCFmfHwhcS5pc0FycmF5KGYpfHxmLmxlbmd0aD09MCl7dGhpcy5hRmlsdGVycz1bXTt0aGlzLmFBcHBsaWNhdGlvbkZpbHRlcnM9W119dGhpcy5jcmVhdGVGaWx0ZXJQYXJhbXMoZik7dGhpcy5hYm9ydFBlbmRpbmdSZXF1ZXN0KCk7dGhpcy5yZXNldERhdGEoKTtpZih0aGlzLmJJbml0aWFsaXplZCl7aWYodGhpcy5vUmVxdWVzdEhhbmRsZSl7dGhpcy5vUmVxdWVzdEhhbmRsZS5hYm9ydCgpO3RoaXMub1JlcXVlc3RIYW5kbGU9bnVsbDt0aGlzLmJQZW5kaW5nUmVxdWVzdD1mYWxzZX10aGlzLnNDaGFuZ2VSZWFzb249c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5GaWx0ZXI7dGhpcy5fZmlyZVJlZnJlc2goe3JlYXNvbjp0aGlzLnNDaGFuZ2VSZWFzb259KTtpZihzPT1GLkFwcGxpY2F0aW9uKXt0aGlzLl9maXJlRmlsdGVyKHtmaWx0ZXJzOnRoaXMuYUFwcGxpY2F0aW9uRmlsdGVyc30pfWVsc2V7dGhpcy5fZmlyZUZpbHRlcih7ZmlsdGVyczp0aGlzLmFGaWx0ZXJzfSl9fXJldHVybiB0aGlzfTtPLnByb3RvdHlwZS5jcmVhdGVGaWx0ZXJQYXJhbXM9ZnVuY3Rpb24oZil7aWYoZiYmZi5sZW5ndGg+MCl7dmFyIG89e30sYj0wLGMscz0iJGZpbHRlcj0iLGQ9MCx0PXRoaXM7cS5lYWNoKGYsZnVuY3Rpb24oaixlKXtpZihlLnNQYXRoKXtjPW9bZS5zUGF0aF07aWYoIWMpe2M9b1tlLnNQYXRoXT1bXTtiKyt9fWVsc2V7Yz1vWyJfX211bHRpRmlsdGVyIl07aWYoIWMpe2M9b1siX19tdWx0aUZpbHRlciJdPVtdO2IrK319Yy5wdXNoKGUpfSk7cS5lYWNoKG8sZnVuY3Rpb24ocCxjKXtpZihjLmxlbmd0aD4xKXtzKz0nKCd9cS5lYWNoKGMsZnVuY3Rpb24oaSxlKXtpZihlIGluc3RhbmNlb2YgYSl7aWYoZS5hVmFsdWVzLmxlbmd0aD4xKXtzKz0nKCd9cS5lYWNoKGUuYVZhbHVlcyxmdW5jdGlvbihpLGcpe2lmKGk+MCl7aWYoZS5iQU5EKXtzKz0iJTIwYW5kJTIwIn1lbHNle3MrPSIlMjBvciUyMCJ9fXM9dC5fY3JlYXRlRmlsdGVyU2VnbWVudChlLnNQYXRoLGcub3BlcmF0b3IsZy52YWx1ZTEsZy52YWx1ZTIscyl9KTtpZihlLmFWYWx1ZXMubGVuZ3RoPjEpe3MrPScpJ319ZWxzZSBpZihlLl9iTXVsdGlGaWx0ZXIpe3MrPXQuX3Jlc29sdmVNdWx0aUZpbHRlcihlKX1lbHNle3M9dC5fY3JlYXRlRmlsdGVyU2VnbWVudChlLnNQYXRoLGUuc09wZXJhdG9yLGUub1ZhbHVlMSxlLm9WYWx1ZTIscyl9aWYoaTxjLmxlbmd0aC0xKXtzKz0iJTIwb3IlMjAifX0pO2lmKGMubGVuZ3RoPjEpe3MrPScpJ31pZihkPGItMSl7cys9IiUyMGFuZCUyMCJ9ZCsrfSk7dGhpcy5zRmlsdGVyUGFyYW1zPXN9ZWxzZXt0aGlzLnNGaWx0ZXJQYXJhbXM9bnVsbH19O08ucHJvdG90eXBlLl9yZXNvbHZlTXVsdGlGaWx0ZXI9ZnVuY3Rpb24obSl7dmFyIHQ9dGhpcyxmPW0uYUZpbHRlcnMscz0iIjtpZihmKXtzKz0iKCI7cS5lYWNoKGYsZnVuY3Rpb24oaSxvKXt2YXIgbD1mYWxzZTtpZihvLl9iTXVsdGlGaWx0ZXIpe3MrPXQuX3Jlc29sdmVNdWx0aUZpbHRlcihvKX1lbHNlIGlmKG8uc1BhdGgpe3MrPXQuX2NyZWF0ZUZpbHRlclNlZ21lbnQoby5zUGF0aCxvLnNPcGVyYXRvcixvLm9WYWx1ZTEsby5vVmFsdWUyLCIiKX1pZihpPChmLmxlbmd0aC0xKSl7aWYobS5iQW5kKXtzKz0iJTIwYW5kJTIwIn1lbHNle3MrPSIlMjBvciUyMCJ9fX0pO3MrPSIpIn1yZXR1cm4gc307Ty5wcm90b3R5cGUuX2NyZWF0ZUZpbHRlclNlZ21lbnQ9ZnVuY3Rpb24ocCxvLHYsVixmKXt2YXIgUDtpZih0aGlzLm9FbnRpdHlUeXBlKXtQPXRoaXMub01vZGVsLm9NZXRhZGF0YS5fZ2V0UHJvcGVydHlNZXRhZGF0YSh0aGlzLm9FbnRpdHlUeXBlLHApO31pZihQKXt2PXRoaXMub01vZGVsLmZvcm1hdFZhbHVlKHYsUC50eXBlKTtWPShWIT1udWxsKT90aGlzLm9Nb2RlbC5mb3JtYXRWYWx1ZShWLFAudHlwZSk6bnVsbH1lbHNle31pZih2KXt2PXEuc2FwLmVuY29kZVVSTChTdHJpbmcodikpfWlmKFYpe1Y9cS5zYXAuZW5jb2RlVVJMKFN0cmluZyhWKSl9c3dpdGNoKG8pe2Nhc2UiRVEiOmNhc2UiTkUiOmNhc2UiR1QiOmNhc2UiR0UiOmNhc2UiTFQiOmNhc2UiTEUiOmYrPXArIiUyMCIrby50b0xvd2VyQ2FzZSgpKyIlMjAiK3Y7YnJlYWs7Y2FzZSJCVCI6Zis9IigiK3ArIiUyMGdlJTIwIit2KyIlMjBhbmQlMjAiK3ArIiUyMGxlJTIwIitWKyIpIjticmVhaztjYXNlIkNvbnRhaW5zIjpmKz0ic3Vic3RyaW5nb2YoIit2KyIsIitwKyIpIjticmVhaztjYXNlIlN0YXJ0c1dpdGgiOmYrPSJzdGFydHN3aXRoKCIrcCsiLCIrdisiKSI7YnJlYWs7Y2FzZSJFbmRzV2l0aCI6Zis9ImVuZHN3aXRoKCIrcCsiLCIrdisiKSI7YnJlYWs7ZGVmYXVsdDpmKz0idHJ1ZSJ9cmV0dXJuIGZ9O08ucHJvdG90eXBlLl9pbml0U29ydGVyc0ZpbHRlcnM9ZnVuY3Rpb24oKXt0aGlzLm9FbnRpdHlUeXBlPXRoaXMuX2dldEVudGl0eVR5cGUoKTt0aGlzLmNyZWF0ZVNvcnRQYXJhbXModGhpcy5hU29ydGVycyk7dGhpcy5jcmVhdGVGaWx0ZXJQYXJhbXModGhpcy5hRmlsdGVycy5jb25jYXQodGhpcy5hQXBwbGljYXRpb25GaWx0ZXJzKSl9O08ucHJvdG90eXBlLl9nZXRFbnRpdHlUeXBlPWZ1bmN0aW9uKCl7dmFyIHI9dGhpcy5vTW9kZWwucmVzb2x2ZSh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpO2lmKHIpe3ZhciBlPXRoaXMub01vZGVsLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChyKTtyZXR1cm4gZX1yZXR1cm4gdW5kZWZpbmVkfTtyZXR1cm4gT30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YVRyZWVCaW5kaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhVHJlZUJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvb2RhdGEvT0RhdGFUcmVlQmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9UcmVlQmluZGluZyddLGZ1bmN0aW9uKHEsVCl7InVzZSBzdHJpY3QiO3ZhciBPPVQuZXh0ZW5kKCJzYXAudWkubW9kZWwub2RhdGEuT0RhdGFUcmVlQmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCxjLGYsUCl7VC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5iUGVuZGluZ1JlcXVlc3Q9ZmFsc2U7dGhpcy5vRmluYWxMZW5ndGhzPXt9O3RoaXMub0xlbmd0aHM9e307dGhpcy5vS2V5cz17fTt0aGlzLmJOZWVkc1VwZGF0ZT1mYWxzZTtpZighUHx8IVAubmF2aWdhdGlvbil7cS5zYXAubG9nLmVycm9yKCJBIG5hdmlnYXRpb24gcGF0aHMgcGFyYW1ldGVyIG9iamVjdCBoYXMgdG8gYmUgZGVmaW5lZCIpO3RoaXMub05hdmlnYXRpb25QYXRocz17fX1lbHNle3RoaXMub05hdmlnYXRpb25QYXRocz1QLm5hdmlnYXRpb259fX0pO08ucHJvdG90eXBlLmdldFJvb3RDb250ZXh0cz1mdW5jdGlvbigpe3ZhciBuPXRoaXMuX2dldE5hdlBhdGgodGhpcy5zUGF0aCksYT10aGlzLm9Nb2RlbC5yZXNvbHZlKHRoaXMuc1BhdGgsdGhpcy5nZXRDb250ZXh0KCkpLHQ9dGhpcyxjO2lmKCFhKXtyZXR1cm5bXX1pZighdGhpcy5vTW9kZWwuaXNMaXN0KHRoaXMuc1BhdGgsdGhpcy5nZXRDb250ZXh0KCkpKXtpZih0aGlzLmJEaXNwbGF5Um9vdE5vZGUpe3RoaXMub01vZGVsLmNyZWF0ZUJpbmRpbmdDb250ZXh0KHRoaXMuc1BhdGgsdGhpcy5nZXRDb250ZXh0KCkse2V4cGFuZDpufSxmdW5jdGlvbihOKXtjPU47aWYodC5vUm9vdENvbnRleHQhPT1OKXt0Lm9Sb290Q29udGV4dD1OO3QuYk5lZWRzVXBkYXRlPXRydWV9ZWxzZXt2YXIgZD10Lm9Nb2RlbC5vRGF0YVtjLmdldFBhdGgoKS5zdWJzdHIoMSldO3QuX3Byb2Nlc3NPRGF0YU9iamVjdChkLGMuZ2V0UGF0aCgpLG4pfX0sZmFsc2UpO2lmKGMpe3JldHVybltjXX1lbHNle3JldHVybltdfX1lbHNle2M9dGhpcy5vTW9kZWwuZ2V0Q29udGV4dCh0aGlzLnNQYXRoKTtyZXR1cm4gdGhpcy5nZXROb2RlQ29udGV4dHMoYyl9fWVsc2V7cmV0dXJuIHRoaXMuX2dldENvbnRleHRzRm9yUGF0aChhLG4pfX07Ty5wcm90b3R5cGUuZ2V0Tm9kZUNvbnRleHRzPWZ1bmN0aW9uKGMpe3ZhciBuPXRoaXMuX2dldE5hdlBhdGgoYy5nZXRQYXRoKCkpLGE7aWYoIW4pe3JldHVybltdfWE9dGhpcy5vTW9kZWwucmVzb2x2ZShuLGMpO249dGhpcy5vTmF2aWdhdGlvblBhdGhzW25dO3JldHVybiB0aGlzLl9nZXRDb250ZXh0c0ZvclBhdGgoYSxuKX07Ty5wcm90b3R5cGUuaGFzQ2hpbGRyZW49ZnVuY3Rpb24oYyl7cmV0dXJuIGMmJnRoaXMub0xlbmd0aHNbYy5nZXRQYXRoKCldPjB9O08ucHJvdG90eXBlLl9nZXRDb250ZXh0c0ZvclBhdGg9ZnVuY3Rpb24oYSxuKXt2YXIgYz1bXSxsPXRoaXMub01vZGVsLmlTaXplTGltaXQsTCxrO2lmKHRoaXMub0ZpbmFsTGVuZ3RocyYmdGhpcy5vRmluYWxMZW5ndGhzW2FdJiZ0aGlzLm9MZW5ndGhzW2FdPGwpe2w9dGhpcy5vTGVuZ3Roc1thXX1pZih0aGlzLm9LZXlzW2FdKXtmb3IodmFyIGk9MDtpPGw7aSsrKXtrPXRoaXMub0tleXNbYV1baV07aWYoIWspe2JyZWFrfWMucHVzaCh0aGlzLm9Nb2RlbC5nZXRDb250ZXh0KCcvJytrKSl9fUw9Yy5sZW5ndGghPWwmJiEodGhpcy5vRmluYWxMZW5ndGhzW2FdJiZjLmxlbmd0aD49dGhpcy5vTGVuZ3Roc1thXSk7aWYodGhpcy5vTW9kZWwuZ2V0U2VydmljZU1ldGFkYXRhKCkpe2lmKCF0aGlzLmJQZW5kaW5nUmVxdWVzdCYmTCl7dGhpcy5sb2FkU3ViTm9kZXMoYSxuKX19cmV0dXJuIGN9O08ucHJvdG90eXBlLmxvYWRTdWJOb2Rlcz1mdW5jdGlvbihhLG4pe3ZhciB0PXRoaXMscD1bXTtpZihuKXtwLnB1c2goIiRleHBhbmQ9IituKX1mdW5jdGlvbiBzKGQpe3Qub0xlbmd0aHNbYV09ZC5yZXN1bHRzLmxlbmd0aDt0Lm9GaW5hbExlbmd0aHNbYV09dHJ1ZTt0Lm9LZXlzW2FdPVtdO2Zvcih2YXIgaT0wO2k8ZC5yZXN1bHRzLmxlbmd0aDtpKyspe3ZhciBFPWQucmVzdWx0c1tpXTt0Ll9wcm9jZXNzT0RhdGFPYmplY3QoRSxhLG4pO3Qub0tleXNbYV0ucHVzaCh0Lm9Nb2RlbC5fZ2V0S2V5KEUpKX10Lm9SZXF1ZXN0SGFuZGxlPW51bGw7dC5iUGVuZGluZ1JlcXVlc3Q9ZmFsc2U7dC5iTmVlZHNVcGRhdGU9dHJ1ZX1mdW5jdGlvbiBjKCl7dC5maXJlRGF0YVJlY2VpdmVkKCl9ZnVuY3Rpb24gZShkKXt0Lm9SZXF1ZXN0SGFuZGxlPW51bGw7dC5iUGVuZGluZ1JlcXVlc3Q9ZmFsc2U7dC5maXJlRGF0YVJlY2VpdmVkKCl9ZnVuY3Rpb24gdShoKXt0Lm9SZXF1ZXN0SGFuZGxlPWh9aWYoYSl7aWYoIXRoaXMub0ZpbmFsTGVuZ3Roc1thXSl7dGhpcy5iUGVuZGluZ1JlcXVlc3Q9dHJ1ZTt0aGlzLmZpcmVEYXRhUmVxdWVzdGVkKCk7dGhpcy5vTW9kZWwuX2xvYWREYXRhKGEscCxzLGUsZmFsc2UsdSxjKX19fTtPLnByb3RvdHlwZS5yZXNldERhdGE9ZnVuY3Rpb24oYyl7aWYoYyl7dmFyIHA9Yy5nZXRQYXRoKCk7ZGVsZXRlIHRoaXMub0tleXNbcF07ZGVsZXRlIHRoaXMub0xlbmd0aHNbcF07ZGVsZXRlIHRoaXMub0ZpbmFsTGVuZ3Roc1twXX1lbHNle3RoaXMub0tleXM9e307dGhpcy5vTGVuZ3Rocz17fTt0aGlzLm9GaW5hbExlbmd0aHM9e319fTtPLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKGYsYyxlKXt2YXIgQz1mYWxzZTtpZighZil7aWYoZSl7dmFyIHI9dGhpcy5vTW9kZWwucmVzb2x2ZSh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpO3ZhciBFPXRoaXMub01vZGVsLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChyKTtpZihFJiYoRS5lbnRpdHlUeXBlIGluIGUpKXtDPXRydWV9fWlmKGMmJiFDKXtxLmVhY2godGhpcy5vS2V5cyxmdW5jdGlvbihpLG4pe3EuZWFjaChuLGZ1bmN0aW9uKGksayl7aWYoayBpbiBjKXtDPXRydWU7cmV0dXJuIGZhbHNlfX0pO2lmKEMpcmV0dXJuIGZhbHNlfSl9aWYoIWMmJiFlKXtDPXRydWV9fWlmKGZ8fEMpe3RoaXMucmVzZXREYXRhKCk7dGhpcy5iTmVlZHNVcGRhdGU9ZmFsc2U7dGhpcy5fZmlyZUNoYW5nZSgpfX07Ty5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKGYpe3Euc2FwLmxvZy53YXJuaW5nKCJGaWx0ZXJpbmcgaXMgY3VycmVudGx5IG5vdCBwb3NzaWJsZSBpbiB0aGUgT0RhdGFUcmVlQmluZGluZyIpO3JldHVybiB0aGlzfTtPLnByb3RvdHlwZS5jaGVja1VwZGF0ZT1mdW5jdGlvbihmLGMpe3ZhciBDPWZhbHNlO2lmKCFmKXtpZih0aGlzLmJOZWVkc1VwZGF0ZXx8IWMpe0M9dHJ1ZX1lbHNle3EuZWFjaCh0aGlzLm9LZXlzLGZ1bmN0aW9uKGksbil7cS5lYWNoKG4sZnVuY3Rpb24oaSxrKXtpZihrIGluIGMpe0M9dHJ1ZTtyZXR1cm4gZmFsc2V9fSk7aWYoQylyZXR1cm4gZmFsc2V9KX19aWYoZnx8Qyl7dGhpcy5iTmVlZHNVcGRhdGU9ZmFsc2U7dGhpcy5fZmlyZUNoYW5nZSgpfX07Ty5wcm90b3R5cGUuX2dldE5hdlBhdGg9ZnVuY3Rpb24ocCl7dmFyIGE9dGhpcy5vTW9kZWwucmVzb2x2ZShwLHRoaXMuZ2V0Q29udGV4dCgpKTtpZighYSl7cmV0dXJufXZhciBQPWEuc3BsaXQoIi8iKSxlPVBbUC5sZW5ndGgtMV0sbjt2YXIgYz1lLnNwbGl0KCIoIilbMF07aWYoYyYmdGhpcy5vTmF2aWdhdGlvblBhdGhzW2NdKXtuPXRoaXMub05hdmlnYXRpb25QYXRoc1tjXX1yZXR1cm4gbn07Ty5wcm90b3R5cGUuX3Byb2Nlc3NPRGF0YU9iamVjdD1mdW5jdGlvbihvLGEsbil7dmFyIGs9dGhpcy5vTW9kZWwuX2dldEtleShvKSxjPXRoaXMub01vZGVsLmdldENvbnRleHQoIi8iK2spLHA9Yy5nZXRQYXRoKCk7dmFyIHI9dGhpcy5vTW9kZWwuX2dldE9iamVjdChuLGMpO2lmKHEuaXNBcnJheShyKSl7dGhpcy5vS2V5c1twXT1yO3RoaXMub0xlbmd0aHNbcF09ci5sZW5ndGg7dGhpcy5vRmluYWxMZW5ndGhzW3BdPXRydWV9ZWxzZSBpZih0eXBlb2Ygcj09PSJvYmplY3QiKXt0aGlzLm9LZXlzW3BdPVtyXTt0aGlzLm9MZW5ndGhzW3BdPTA7dGhpcy5vRmluYWxMZW5ndGhzW3BdPXRydWV9ZWxzZXtpZihuJiZvW25dLl9fbGlzdCl7dGhpcy5vS2V5c1twXT1vW25dLl9fbGlzdDt0aGlzLm9MZW5ndGhzW3BdPXRoaXMub0tleXNbcF0ubGVuZ3RoO3RoaXMub0ZpbmFsTGVuZ3Roc1twXT10cnVlfWVsc2V7dGhpcy5vS2V5c1thXT1bXTt0aGlzLm9MZW5ndGhzW2FdPTA7dGhpcy5vRmluYWxMZW5ndGhzW2FdPWZhbHNlfX19O3JldHVybiBPfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLnR5cGUuQm9vbGVhbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC50eXBlLkJvb2xlYW4nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvdHlwZS9Cb29sZWFuIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2NvcmUvZm9ybWF0L051bWJlckZvcm1hdCcsJ3NhcC91aS9tb2RlbC9TaW1wbGVUeXBlJ10sZnVuY3Rpb24ocSxOLFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgQj1TLmV4dGVuZCgic2FwLnVpLm1vZGVsLnR5cGUuQm9vbGVhbiIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7Uy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zTmFtZT0iQm9vbGVhbiJ9fSk7Qi5wcm90b3R5cGUuZm9ybWF0VmFsdWU9ZnVuY3Rpb24odixpKXtpZih2PT11bmRlZmluZWR8fHY9PW51bGwpe3JldHVybiBudWxsfXN3aXRjaChpKXtjYXNlImJvb2xlYW4iOnJldHVybiB2O2Nhc2Uic3RyaW5nIjpyZXR1cm4gdi50b1N0cmluZygpO2Nhc2UiaW50IjpjYXNlImZsb2F0IjpkZWZhdWx0OnRocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKCJEb24ndCBrbm93IGhvdyB0byBmb3JtYXQgQm9vbGVhbiB0byAiK2kpfX07Qi5wcm90b3R5cGUucGFyc2VWYWx1ZT1mdW5jdGlvbih2LGkpe3ZhciByO3N3aXRjaChpKXtjYXNlImJvb2xlYW4iOnJldHVybiB2O2Nhc2Uic3RyaW5nIjppZih2LnRvTG93ZXJDYXNlKCk9PSJ0cnVlInx8dj09IlgiKXtyZXR1cm4gdHJ1ZX1pZih2LnRvTG93ZXJDYXNlKCk9PSJmYWxzZSJ8fHY9PSIiKXtyZXR1cm4gZmFsc2V9dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5QYXJzZUV4Y2VwdGlvbigiRG9uJ3Qga25vdyBob3cgdG8gcGFyc2UgQm9vbGVhbiBmcm9tICIraSk7Y2FzZSJpbnQiOmNhc2UiZmxvYXQiOmRlZmF1bHQ6dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5QYXJzZUV4Y2VwdGlvbigiRG9uJ3Qga25vdyBob3cgdG8gcGFyc2UgQm9vbGVhbiBmcm9tICIraSl9fTtCLnByb3RvdHlwZS52YWxpZGF0ZVZhbHVlPWZ1bmN0aW9uKHYpe307cmV0dXJuIEJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwudHlwZS5EYXRlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLnR5cGUuRGF0ZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC90eXBlL0RhdGUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvY29yZS9mb3JtYXQvRGF0ZUZvcm1hdCcsJ3NhcC91aS9tb2RlbC9TaW1wbGVUeXBlJ10sZnVuY3Rpb24ocSxELFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1TLmV4dGVuZCgic2FwLnVpLm1vZGVsLnR5cGUuRGF0ZSIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7Uy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zTmFtZT0iRGF0ZSJ9fSk7YS5wcm90b3R5cGUuZm9ybWF0VmFsdWU9ZnVuY3Rpb24odixpKXtzd2l0Y2goaSl7Y2FzZSJzdHJpbmciOmlmKHY9PW51bGwpe3JldHVybiIifWlmKHRoaXMub0lucHV0Rm9ybWF0KXtpZih0aGlzLm9Gb3JtYXRPcHRpb25zLnNvdXJjZS5wYXR0ZXJuPT0idGltZXN0YW1wIil7aWYodHlwZW9mKHYpIT0ibnVtYmVyIil7aWYoaXNOYU4odikpe3Rocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKCJDYW5ub3QgZm9ybWF0IGRhdGU6ICIrdisiIGlzIG5vdCBhIHZhbGlkIFRpbWVzdGFtcCIpfWVsc2V7dj1wYXJzZUludCh2LDEwKX19dj1uZXcgRGF0ZSh2KX1lbHNle2lmKHY9PSIiKXtyZXR1cm4iIn12PXRoaXMub0lucHV0Rm9ybWF0LnBhcnNlKHYpO2lmKHY9PW51bGwpe3Rocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKCJDYW5ub3QgZm9ybWF0IGRhdGU6ICIrdisiIGhhcyB0aGUgd3JvbmcgZm9ybWF0Iil9fX1yZXR1cm4gdGhpcy5vT3V0cHV0Rm9ybWF0LmZvcm1hdCh2KTtkZWZhdWx0OnRocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKCJEb24ndCBrbm93IGhvdyB0byBmb3JtYXQgRGF0ZSB0byAiK2kpfX07YS5wcm90b3R5cGUucGFyc2VWYWx1ZT1mdW5jdGlvbih2LGkpe3ZhciByO3N3aXRjaChpKXtjYXNlInN0cmluZyI6aWYodj09PSIiKXtyZXR1cm4gbnVsbH12YXIgcj10aGlzLm9PdXRwdXRGb3JtYXQucGFyc2Uodik7aWYoIXIpe3Rocm93IG5ldyBzYXAudWkubW9kZWwuUGFyc2VFeGNlcHRpb24odisiIGlzIG5vdCBhIHZhbGlkIERhdGUgdmFsdWUiKX1pZih0aGlzLm9JbnB1dEZvcm1hdCl7aWYodGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2UucGF0dGVybj09InRpbWVzdGFtcCIpe3I9ci5nZXRUaW1lKCl9ZWxzZXtyPXRoaXMub0lucHV0Rm9ybWF0LmZvcm1hdChyKX19cmV0dXJuIHI7ZGVmYXVsdDp0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLlBhcnNlRXhjZXB0aW9uKCJEb24ndCBrbm93IGhvdyB0byBwYXJzZSBEYXRlIGZyb20gIitpKX19O2EucHJvdG90eXBlLnZhbGlkYXRlVmFsdWU9ZnVuY3Rpb24odil7aWYodGhpcy5vQ29uc3RyYWludHMpe3ZhciBWPVtdLGk9dGhpcy5vSW5wdXRGb3JtYXQ7aWYoaSYmdGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2UucGF0dGVybiE9InRpbWVzdGFtcCIpe3Y9aS5wYXJzZSh2KX1xLmVhY2godGhpcy5vQ29uc3RyYWludHMsZnVuY3Rpb24obixjKXtpZihpKXtjPWkucGFyc2UoYyl9c3dpdGNoKG4pe2Nhc2UibWluaW11bSI6aWYodjxjKXtWLnB1c2goIm1pbmltdW0iKX1icmVhaztjYXNlIm1heGltdW0iOmlmKHY+Yyl7Vi5wdXNoKCJtYXhpbXVtIil9fX0pO2lmKFYubGVuZ3RoPjApe3Rocm93IG5ldyBzYXAudWkubW9kZWwuVmFsaWRhdGVFeGNlcHRpb24oIlZhbGlkYXRpb24gb2YgdHlwZSBjb25zdHJhaW50cyBmYWlsZWQiLFYpfX19O2EucHJvdG90eXBlLnNldEZvcm1hdE9wdGlvbnM9ZnVuY3Rpb24oZil7dGhpcy5vRm9ybWF0T3B0aW9ucz1mO3RoaXMuX2hhbmRsZUxvY2FsaXphdGlvbkNoYW5nZSgpfTthLnByb3RvdHlwZS5nZXRPdXRwdXRQYXR0ZXJuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub091dHB1dEZvcm1hdC5vRm9ybWF0T3B0aW9ucy5wYXR0ZXJufTthLnByb3RvdHlwZS5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlPWZ1bmN0aW9uKCl7dGhpcy5vT3V0cHV0Rm9ybWF0PUQuZ2V0SW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucyk7aWYodGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2Upe3RoaXMub0lucHV0Rm9ybWF0PUQuZ2V0SW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2UpfX07cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwudHlwZS5EYXRlVGltZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC50eXBlLkRhdGVUaW1lJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3R5cGUvRGF0ZVRpbWUiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0RhdGUnXSxmdW5jdGlvbihxLEQpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1ELmV4dGVuZCgic2FwLnVpLm1vZGVsLnR5cGUuRGF0ZVRpbWUiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe0QuYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuc05hbWU9IkRhdGVUaW1lIn19KTthLnByb3RvdHlwZS5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlPWZ1bmN0aW9uKCl7dGhpcy5vT3V0cHV0Rm9ybWF0PXNhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0LmdldERhdGVUaW1lSW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucyk7aWYodGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2Upe3RoaXMub0lucHV0Rm9ybWF0PXNhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0LmdldERhdGVUaW1lSW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucy5zb3VyY2UpfX07cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwudHlwZS5GbG9hdCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC50eXBlLkZsb2F0Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3R5cGUvRmxvYXQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvY29yZS9mb3JtYXQvTnVtYmVyRm9ybWF0Jywnc2FwL3VpL21vZGVsL1NpbXBsZVR5cGUnXSxmdW5jdGlvbihxLE4sUyl7InVzZSBzdHJpY3QiO3ZhciBGPVMuZXh0ZW5kKCJzYXAudWkubW9kZWwudHlwZS5GbG9hdCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7Uy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zTmFtZT0iRmxvYXQifX0pO0YucHJvdG90eXBlLmZvcm1hdFZhbHVlPWZ1bmN0aW9uKHYsaSl7aWYodj09dW5kZWZpbmVkfHx2PT1udWxsKXtyZXR1cm4gbnVsbH1zd2l0Y2goaSl7Y2FzZSJzdHJpbmciOnJldHVybiB0aGlzLm9Gb3JtYXQuZm9ybWF0KHYpO2Nhc2UiaW50IjpyZXR1cm4gTWF0aC5mbG9vcih2KTtjYXNlImZsb2F0IjpyZXR1cm4gdjtkZWZhdWx0OnRocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKCJEb24ndCBrbm93IGhvdyB0byBmb3JtYXQgRmxvYXQgdG8gIitpKX19O0YucHJvdG90eXBlLnBhcnNlVmFsdWU9ZnVuY3Rpb24odixpKXt2YXIgcjtzd2l0Y2goaSl7Y2FzZSJzdHJpbmciOnI9dGhpcy5vRm9ybWF0LnBhcnNlKHYpO2lmKGlzTmFOKHIpKXt0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLlBhcnNlRXhjZXB0aW9uKHYrIiBpcyBub3QgYSB2YWxpZCBGbG9hdCB2YWx1ZSIpfXJldHVybiByO2Nhc2UiaW50IjpjYXNlImZsb2F0IjpyZXR1cm4gdjtkZWZhdWx0OnRocm93IG5ldyBzYXAudWkubW9kZWwuUGFyc2VFeGNlcHRpb24oIkRvbid0IGtub3cgaG93IHRvIHBhcnNlIEZsb2F0IGZyb20gIitpKX19O0YucHJvdG90eXBlLnZhbGlkYXRlVmFsdWU9ZnVuY3Rpb24odil7aWYodGhpcy5vQ29uc3RyYWludHMpe3ZhciBWPVtdO3EuZWFjaCh0aGlzLm9Db25zdHJhaW50cyxmdW5jdGlvbihuLGMpe3N3aXRjaChuKXtjYXNlIm1pbmltdW0iOmlmKHY8Yyl7Vi5wdXNoKCJtaW5pbXVtIil9YnJlYWs7Y2FzZSJtYXhpbXVtIjppZih2PmMpe1YucHVzaCgibWF4aW11bSIpfX19KTtpZihWLmxlbmd0aD4wKXt0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLlZhbGlkYXRlRXhjZXB0aW9uKCJWYWxpZGF0aW9uIG9mIHR5cGUgY29uc3RyYWludHMgZmFpbGVkIixWKX19fTtGLnByb3RvdHlwZS5zZXRGb3JtYXRPcHRpb25zPWZ1bmN0aW9uKGYpe3RoaXMub0Zvcm1hdE9wdGlvbnM9Zjt0aGlzLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2UoKX07Ri5wcm90b3R5cGUuX2hhbmRsZUxvY2FsaXphdGlvbkNoYW5nZT1mdW5jdGlvbigpe3RoaXMub0Zvcm1hdD1OLmdldEZsb2F0SW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucyl9O3JldHVybiBGfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLnR5cGUuSW50ZWdlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC50eXBlLkludGVnZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvdHlwZS9JbnRlZ2VyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2NvcmUvZm9ybWF0L051bWJlckZvcm1hdCcsJ3NhcC91aS9tb2RlbC9TaW1wbGVUeXBlJ10sZnVuY3Rpb24ocSxOLFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgST1TLmV4dGVuZCgic2FwLnVpLm1vZGVsLnR5cGUuSW50ZWdlciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7Uy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zTmFtZT0iSW50ZWdlciJ9fSk7SS5wcm90b3R5cGUuZm9ybWF0VmFsdWU9ZnVuY3Rpb24odixpKXtpZih2PT11bmRlZmluZWR8fHY9PW51bGwpe3JldHVybiBudWxsfXN3aXRjaChpKXtjYXNlInN0cmluZyI6cmV0dXJuIHRoaXMub0Zvcm1hdC5mb3JtYXQodik7Y2FzZSJpbnQiOmNhc2UiZmxvYXQiOnJldHVybiB2O2RlZmF1bHQ6dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5Gb3JtYXRFeGNlcHRpb24oIkRvbid0IGtub3cgaG93IHRvIGZvcm1hdCBJbnRlZ2VyIHRvICIraSl9fTtJLnByb3RvdHlwZS5wYXJzZVZhbHVlPWZ1bmN0aW9uKHYsaSl7dmFyIHI7c3dpdGNoKGkpe2Nhc2UiZmxvYXQiOmNhc2Uic3RyaW5nIjpyPXRoaXMub0Zvcm1hdC5wYXJzZShTdHJpbmcodikpO2lmKGlzTmFOKHIpKXt0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLlBhcnNlRXhjZXB0aW9uKHYrIiBpcyBub3QgYSB2YWxpZCBJbnRlZ2VyIHZhbHVlIil9cmV0dXJuIHI7Y2FzZSJpbnQiOnJldHVybiB2O2RlZmF1bHQ6dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5QYXJzZUV4Y2VwdGlvbigiRG9uJ3Qga25vdyBob3cgdG8gcGFyc2UgSW50ZWdlciBmcm9tICIraSl9fTtJLnByb3RvdHlwZS52YWxpZGF0ZVZhbHVlPWZ1bmN0aW9uKHYpe2lmKHRoaXMub0NvbnN0cmFpbnRzKXt2YXIgVj1bXTtxLmVhY2godGhpcy5vQ29uc3RyYWludHMsZnVuY3Rpb24obixjKXtzd2l0Y2gobil7Y2FzZSJtaW5pbXVtIjppZih2PGMpe1YucHVzaCgibWluaW11bSIpfWJyZWFrO2Nhc2UibWF4aW11bSI6aWYodj5jKXtWLnB1c2goIm1heGltdW0iKX19fSk7aWYoVi5sZW5ndGg+MCl7dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5WYWxpZGF0ZUV4Y2VwdGlvbigiVmFsaWRhdGlvbiBvZiB0eXBlIGNvbnN0cmFpbnRzIGZhaWxlZCIsVil9fX07SS5wcm90b3R5cGUuc2V0Rm9ybWF0T3B0aW9ucz1mdW5jdGlvbihmKXt0aGlzLm9Gb3JtYXRPcHRpb25zPWY7dGhpcy5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlKCl9O0kucHJvdG90eXBlLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2U9ZnVuY3Rpb24oKXt0aGlzLm9Gb3JtYXQ9Ti5nZXRJbnRlZ2VySW5zdGFuY2UodGhpcy5vRm9ybWF0T3B0aW9ucyl9O3JldHVybiBJfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLnR5cGUuU3RyaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLnR5cGUuU3RyaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3R5cGUvU3RyaW5nIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2NvcmUvZm9ybWF0L051bWJlckZvcm1hdCcsJ3NhcC91aS9tb2RlbC9TaW1wbGVUeXBlJ10sZnVuY3Rpb24ocSxOLFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1TLmV4dGVuZCgic2FwLnVpLm1vZGVsLnR5cGUuU3RyaW5nIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtTLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnNOYW1lPSJTdHJpbmciO2lmKHRoaXMub0NvbnN0cmFpbnRzLnNlYXJjaCYmdHlwZW9mIHRoaXMub0NvbnN0cmFpbnRzLnNlYXJjaD09InN0cmluZyIpe3RoaXMub0NvbnN0cmFpbnRzLnNlYXJjaD1uZXcgUmVnRXhwKHRoaXMub0NvbnN0cmFpbnRzLnNlYXJjaCl9fX0pO2EucHJvdG90eXBlLmZvcm1hdFZhbHVlPWZ1bmN0aW9uKHYsaSl7aWYodj09dW5kZWZpbmVkfHx2PT1udWxsKXtyZXR1cm4gbnVsbH1zd2l0Y2goaSl7Y2FzZSJzdHJpbmciOnJldHVybiB2O2Nhc2UiaW50Ijp2YXIgcj1wYXJzZUludCh2LDEwKTtpZihpc05hTihyKSl7dGhyb3cgbmV3IHNhcC51aS5tb2RlbC5Gb3JtYXRFeGNlcHRpb24odisiIGlzIG5vdCBhIHZhbGlkIGludCB2YWx1ZSIpfXJldHVybiByO2Nhc2UiZmxvYXQiOnZhciBSPXBhcnNlRmxvYXQodik7aWYoaXNOYU4oUikpe3Rocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKHYrIiBpcyBub3QgYSB2YWxpZCBmbG9hdCB2YWx1ZSIpfXJldHVybiBSO2Nhc2UiYm9vbGVhbiI6aWYodi50b0xvd2VyQ2FzZSgpPT0idHJ1ZSJ8fHY9PSJYIil7cmV0dXJuIHRydWV9aWYodi50b0xvd2VyQ2FzZSgpPT0iZmFsc2UifHx2PT0iIil7cmV0dXJuIGZhbHNlfXRocm93IG5ldyBzYXAudWkubW9kZWwuRm9ybWF0RXhjZXB0aW9uKHYrIiBpcyBub3QgYSB2YWxpZCBib29sZWFuIHZhbHVlIik7ZGVmYXVsdDp0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLkZvcm1hdEV4Y2VwdGlvbigiRG9uJ3Qga25vdyBob3cgdG8gZm9ybWF0IFN0cmluZyB0byAiK2kpfX07YS5wcm90b3R5cGUucGFyc2VWYWx1ZT1mdW5jdGlvbih2LGkpe3ZhciByO3N3aXRjaChpKXtjYXNlInN0cmluZyI6cmV0dXJuIHY7Y2FzZSJib29sZWFuIjpjYXNlImludCI6Y2FzZSJmbG9hdCI6cmV0dXJuIHYudG9TdHJpbmcoKTtkZWZhdWx0OnRocm93IG5ldyBzYXAudWkubW9kZWwuUGFyc2VFeGNlcHRpb24oIkRvbid0IGtub3cgaG93IHRvIHBhcnNlIFN0cmluZyBmcm9tICIraSl9fTthLnByb3RvdHlwZS52YWxpZGF0ZVZhbHVlPWZ1bmN0aW9uKHYpe2lmKHRoaXMub0NvbnN0cmFpbnRzKXt2YXIgVj1bXTtxLmVhY2godGhpcy5vQ29uc3RyYWludHMsZnVuY3Rpb24obixjKXtzd2l0Y2gobil7Y2FzZSJtYXhMZW5ndGgiOmlmKHYubGVuZ3RoPmMpe1YucHVzaCgibWF4TGVuZ3RoIil9YnJlYWs7Y2FzZSJtaW5MZW5ndGgiOmlmKHYubGVuZ3RoPGMpe1YucHVzaCgibWluTGVuZ3RoIil9YnJlYWs7Y2FzZSJzdGFydHNXaXRoIjppZighcS5zYXAuc3RhcnRzV2l0aCh2LGMpKXtWLnB1c2goInN0YXJ0c1dpdGgiKX1icmVhaztjYXNlInN0YXJ0c1dpdGhJZ25vcmVDYXNlIjppZighcS5zYXAuc3RhcnRzV2l0aElnbm9yZUNhc2UodixjKSl7Vi5wdXNoKCJzdGFydHNXaXRoSWdub3JlQ2FzZSIpfWJyZWFrO2Nhc2UiZW5kc1dpdGgiOmlmKCFxLnNhcC5lbmRzV2l0aCh2LGMpKXtWLnB1c2goImVuZHNXaXRoIil9YnJlYWs7Y2FzZSJlbmRzV2l0aElnbm9yZUNhc2UiOmlmKCFxLnNhcC5lbmRzV2l0aElnbm9yZUNhc2UodixjKSl7Vi5wdXNoKCJlbmRzV2l0aElnbm9yZUNhc2UiKX1icmVhaztjYXNlImNvbnRhaW5zIjppZih2LmluZGV4T2YoYyk9PS0xKXtWLnB1c2goImNvbnRhaW5zIil9YnJlYWs7Y2FzZSJlcXVhbHMiOmlmKHYhPWMpe1YucHVzaCgiZXF1YWxzIil9YnJlYWs7Y2FzZSJzZWFyY2giOmlmKHYuc2VhcmNoKGMpPT0tMSl7Vi5wdXNoKCJzZWFyY2giKX1icmVha319KTtpZihWLmxlbmd0aD4wKXt0aHJvdyBuZXcgc2FwLnVpLm1vZGVsLlZhbGlkYXRlRXhjZXB0aW9uKCJWYWxpZGF0aW9uIG9mIHR5cGUgY29uc3RyYWludHMgZmFpbGVkIixWKX19fTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC50eXBlLlRpbWUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwudHlwZS5UaW1lJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3R5cGUvVGltZSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vRGF0ZSddLGZ1bmN0aW9uKHEsRCl7InVzZSBzdHJpY3QiO3ZhciBUPUQuZXh0ZW5kKCJzYXAudWkubW9kZWwudHlwZS5UaW1lIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtELmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnNOYW1lPSJUaW1lIn19KTtULnByb3RvdHlwZS5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlPWZ1bmN0aW9uKCl7dGhpcy5vT3V0cHV0Rm9ybWF0PXNhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0LmdldFRpbWVJbnN0YW5jZSh0aGlzLm9Gb3JtYXRPcHRpb25zKTtpZih0aGlzLm9Gb3JtYXRPcHRpb25zLnNvdXJjZSl7dGhpcy5vSW5wdXRGb3JtYXQ9c2FwLnVpLmNvcmUuZm9ybWF0LkRhdGVGb3JtYXQuZ2V0VGltZUluc3RhbmNlKHRoaXMub0Zvcm1hdE9wdGlvbnMuc291cmNlKX19O3JldHVybiBUfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnanF1ZXJ5LnNhcC51aScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ2pxdWVyeS5zYXAudWknKTtzYXAudWkuZGVmaW5lKCJqcXVlcnkuc2FwLnVpIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL0dsb2JhbCddLGZ1bmN0aW9uKHEsRyl7InVzZSBzdHJpY3QiO2lmKCFxLnNhcCl7dGhyb3ciSW5pdGlhbGlzYXRpb24gb2YgalF1ZXJ5LnNhcC51aSBmYWlsZWQuIGpRdWVyeS5zYXAgcGx1Z2luIHJlcXVpcmVkISJ9aWYoIXdpbmRvdy5zYXB8fCF3aW5kb3cuc2FwLnVpKXtxLnNhcC5mYXRhbCgiSW5pdGlhbGlzYXRpb24gb2YgalF1ZXJ5LnNhcC51aSBmYWlsZWQuIEdsb2JhbCBTQVAgVUkgbmFtZXNwYWNlIHJlcXVpcmVkISIpfWlmKHEuc2FwLnVpKXtyZXR1cm59ZnVuY3Rpb24gdShpKXtyZXR1cm4gc2FwLnVpLmdldENvcmUoKS5nZXRVSUFyZWEodGhpcy5pZCkhPW51bGx9ZnVuY3Rpb24gZihpLG8pe3JldHVybiBzYXAudWkuZ2V0Q29yZSgpLmdldFVJQXJlYSh0aGlzLmlkKX1mdW5jdGlvbiBhKGMsaSl7cmV0dXJuIGMuZ2V0VUlBcmVhKCkuZ2V0SW50ZXJmYWNlKCl9cS5mbi5yb290PWZ1bmN0aW9uKHIpe3ZhciB0O2lmKHIpe3NhcC51aS5nZXRDb3JlKCkuc2V0Um9vdCh0aGlzLmdldCgwKSxyKTtyZXR1cm4gdGhpc312YXIgYz10aGlzLmNvbnRyb2woKTtpZihjLmxlbmd0aD4wKXtyZXR1cm4gcS5tYXAoYyxhKX12YXIgVT10aGlzLnVpYXJlYSgpO2lmKFUubGVuZ3RoPjApe3JldHVybiBVfXRoaXMuZWFjaChmdW5jdGlvbihpKXtzYXAudWkuZ2V0Q29yZSgpLmNyZWF0ZVVJQXJlYSh0aGlzKX0pO3JldHVybiB0aGlzfTtxLmZuLnVpYXJlYT1mdW5jdGlvbihpKXt2YXIgVT10aGlzLnNsaWNlKCJbaWRdIikuZmlsdGVyKHUpLm1hcChmKS5nZXQoKTtyZXR1cm4gdHlwZW9mKGkpPT09Im51bWJlciI/VVtpXTpVfTtmdW5jdGlvbiBiKCl7aWYoIXRoaXN8fCF0aGlzLm5vZGVUeXBlfHx0aGlzLm5vZGVUeXBlPT09OSl7cmV0dXJuIG51bGx9dHJ5e3ZhciBpPXEodGhpcykuY2xvc2VzdCgiW2RhdGEtc2FwLXVpXSIpLmF0dHIoImlkIik7cmV0dXJuIGk/c2FwLnVpLmdldENvcmUoKS5ieUlkKGkpOm51bGx9Y2F0Y2goZSl7cmV0dXJuIG51bGx9fXEuZm4uY29udHJvbD1mdW5jdGlvbihpKXt2YXIgYz10aGlzLm1hcChiKTtpZihpPT09dW5kZWZpbmVkfHxpc05hTihpKSl7cmV0dXJuIGMuZ2V0KCl9ZWxzZXtyZXR1cm4gYy5nZXQoaSl9fTtxLmZuLnNhcHVpPWZ1bmN0aW9uKGMsaSxDKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIG89bnVsbDtpZih0aGlzKXtpZihjLmluZGV4T2YoIi4iKT09LTEpe2M9InNhcC51aS5jb21tb25zLiIrY312YXIgZD1xLnNhcC5nZXRPYmplY3QoYyk7aWYoZCl7aWYodHlwZW9mIEM9PSdvYmplY3QnJiZ0eXBlb2YgQy5wcmVzcz09J2Z1bmN0aW9uJyl7Qy5wcmVzcz1xLnByb3h5KEMucHJlc3MsdGhpcyl9bz1uZXcoZCkoaSxDKTtvLnBsYWNlQXQodGhpcyl9fX0pfTtyZXR1cm4gcX0sZmFsc2UpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuYXBwLkFwcGxpY2F0aW9uTWV0YWRhdGEnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuYXBwLkFwcGxpY2F0aW9uTWV0YWRhdGEnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvYXBwL0FwcGxpY2F0aW9uTWV0YWRhdGEiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvY29yZS9Db21wb25lbnRNZXRhZGF0YSddLGZ1bmN0aW9uKHEsQyl7InVzZSBzdHJpY3QiO3ZhciBBPWZ1bmN0aW9uKGMsbyl7Qy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O0EucHJvdG90eXBlPXEuc2FwLm5ld09iamVjdChDLnByb3RvdHlwZSk7QS5wcmVwcm9jZXNzQ2xhc3NJbmZvPWZ1bmN0aW9uKGMpe2lmKGMmJnR5cGVvZiBjLm1ldGFkYXRhPT09InN0cmluZyIpe2MubWV0YWRhdGE9e19zcmM6Yy5tZXRhZGF0YX19cmV0dXJuIGN9O0EucHJvdG90eXBlLmFwcGx5U2V0dGluZ3M9ZnVuY3Rpb24oYyl7dmFyIHM9Yy5tZXRhZGF0YTtDLnByb3RvdHlwZS5hcHBseVNldHRpbmdzLmNhbGwodGhpcyxjKTtpZihzLl9zcmMpe3Euc2FwLmxvZy53YXJuaW5nKCJUaGUgbWV0YWRhdGEgb2YgdGhlIGFwcGxpY2F0aW9uICIrdGhpcy5nZXROYW1lKCkrIiBpcyBsb2FkZWQgZnJvbSBmaWxlICIrcy5fc3JjKyIuIFRoaXMgaXMgYSBkZXNpZ24gdGltZSBmZWF0dXJlIGFuZCBub3QgZm9yIHByb2R1Y3RpdmUgdXNhZ2UhIik7dmFyIHA9dGhpcy5nZXROYW1lKCkucmVwbGFjZSgvXC5cdys/JC8sIiIpO3ZhciB1PXEuc2FwLmdldE1vZHVsZVBhdGgocCwiLyIrcy5fc3JjKTt2YXIgcj1xLnNhcC5zeW5jR2V0SlNPTih1KTtpZihyLnN1Y2Nlc3Mpe3EuZXh0ZW5kKHMsci5kYXRhKX1lbHNle3Euc2FwLmxvZy5lcnJvcigiRmFpbGVkIHRvIGxvYWQgYXBwbGljYXRpb24gbWV0YWRhdGEgZnJvbSBcIiIrcy5fc3JjKyJcIiEgUmVhc29uOiAiK3IuZXJyb3IpfX10aGlzLl9tUm9vdENvbXBvbmVudD1zLnJvb3RDb21wb25lbnR8fG51bGx9O0EucHJvdG90eXBlLmdldFJvb3RDb21wb25lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbVJvb3RDb21wb25lbnR9O3JldHVybiBBfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLkhUTUxWaWV3U2VyaWFsaXplcicpKXsNCi8qCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLkhUTUxWaWV3U2VyaWFsaXplcicpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkudmtiZWF1dGlmeScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3V0aWwvc2VyaWFsaXplci9IVE1MVmlld1NlcmlhbGl6ZXIiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9FdmVudFByb3ZpZGVyJywnLi9kZWxlZ2F0ZS9IVE1MJywnc2FwL3VpL3RoaXJkcGFydHkvdmtiZWF1dGlmeSddLGZ1bmN0aW9uKHEsRSxILHYpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1FLmV4dGVuZCgic2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLkhUTUxWaWV3U2VyaWFsaXplciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKFYsdyxnLEcpe0UuYXBwbHkodGhpcyk7dGhpcy5fb1ZpZXc9Vjt0aGlzLl9vV2luZG93PXc7dGhpcy5fZm5HZXRDb250cm9sSWQ9Zzt0aGlzLl9mbkdldEV2ZW50SGFuZGxlck5hbWU9R319KTthLnByb3RvdHlwZS5zZXJpYWxpemU9ZnVuY3Rpb24oKXt2YXIgcz1mdW5jdGlvbihDKXtyZXR1cm4oQyBpbnN0YW5jZW9mIHRoaXMuX29XaW5kb3cuc2FwLnVpLmNvcmUubXZjLlZpZXcpfTt2YXIgYz1uZXcgc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLlNlcmlhbGl6ZXIodGhpcy5fb1ZpZXcsbmV3IEgodGhpcy5fZm5HZXRDb250cm9sSWQsdGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lKSx0cnVlLHRoaXMuX29XaW5kb3cscyk7dmFyIHI9Yy5zZXJpYWxpemUoKTt2YXIgVj1bXTtWLnB1c2goJzx0ZW1wbGF0ZScpO2lmKHRoaXMuX29WaWV3LmdldENvbnRyb2xsZXJOYW1lJiZ0aGlzLl9vVmlldy5nZXRDb250cm9sbGVyTmFtZSgpKXtWLnB1c2goJyBkYXRhLWNvbnRyb2xsZXItbmFtZT0iJyt0aGlzLl9vVmlldy5nZXRDb250cm9sbGVyTmFtZSgpKyciJyl9Vi5wdXNoKCIgPiIpO1YucHVzaChyKTtWLnB1c2goIjwvdGVtcGxhdGU+Iik7cmV0dXJuIHZrYmVhdXRpZnkueG1sKFYuam9pbigiIikpfTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5YTUxWaWV3U2VyaWFsaXplcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5YTUxWaWV3U2VyaWFsaXplcicpO2pRdWVyeS5zYXAucmVxdWlyZSgnc2FwLnVpLnRoaXJkcGFydHkudmtiZWF1dGlmeScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3V0aWwvc2VyaWFsaXplci9YTUxWaWV3U2VyaWFsaXplciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCcuL2RlbGVnYXRlL1hNTCcsJ3NhcC91aS90aGlyZHBhcnR5L3ZrYmVhdXRpZnknXSxmdW5jdGlvbihxLEUsWCx2KXsidXNlIHN0cmljdCI7dmFyIGE9RS5leHRlbmQoInNhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5YTUxWaWV3U2VyaWFsaXplciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKFYsdyxkLGcsRyl7RS5hcHBseSh0aGlzKTt0aGlzLl9vVmlldz1WO3RoaXMuX29XaW5kb3c9dzt0aGlzLl9zRGVmYXVsdE5hbWVzcGFjZT1kO3RoaXMuX2ZuR2V0Q29udHJvbElkPWc7dGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lPUd9fSk7YS5wcm90b3R5cGUuc2VyaWFsaXplPWZ1bmN0aW9uKCl7dmFyIHA9W107dmFyIG09ZnVuY3Rpb24oQyxQKXtpZighUCl7dmFyIHQ9KEMpP0MuY29uc3RydWN0b3I6Ij8iO3Rocm93IEVycm9yKCJDb250cm9scyB3aXRoIGVtcHR5IHBhY2thZ2UgYXJlIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBYTUwgc2VyaWFsaXplcjogIit0KX1pZihxLmluQXJyYXkoUCxwKT09PS0xKXtwLnB1c2goUCl9fTt2YXIgcz1mdW5jdGlvbihDKXtyZXR1cm4oQyBpbnN0YW5jZW9mIHRoaXMuX29XaW5kb3cuc2FwLnVpLmNvcmUubXZjLlZpZXcpfTt2YXIgYz1uZXcgc2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLlNlcmlhbGl6ZXIodGhpcy5fb1ZpZXcsbmV3IFgodGhpcy5fc0RlZmF1bHROYW1lc3BhY2UsdGhpcy5fZm5HZXRDb250cm9sSWQsdGhpcy5fZm5HZXRFdmVudEhhbmRsZXJOYW1lLG0pLHRydWUsdGhpcy5fb1dpbmRvdyxzKTt2YXIgcj1jLnNlcmlhbGl6ZSgpO3ZhciBWPVtdO1YucHVzaCgnPHNhcC51aS5jb3JlLm12YzpWaWV3Jyk7aWYodGhpcy5fb1ZpZXcuZ2V0Q29udHJvbGxlck5hbWUmJnRoaXMuX29WaWV3LmdldENvbnRyb2xsZXJOYW1lKCkpe1YucHVzaCgnIGNvbnRyb2xsZXJOYW1lPSInK3RoaXMuX29WaWV3LmdldENvbnRyb2xsZXJOYW1lKCkrJyInKX1pZihxLmluQXJyYXkoJ3NhcC51aS5jb3JlJyxwKT09PS0xKXtwLnB1c2goJ3NhcC51aS5jb3JlJyl9Zm9yKHZhciBpPTA7aTxwLmxlbmd0aDtpKyspe2lmKHRoaXMuX3NEZWZhdWx0TmFtZXNwYWNlJiZ0aGlzLl9zRGVmYXVsdE5hbWVzcGFjZT09PXBbaV0pe1YucHVzaCgnIHhtbG5zPSInK3BbaV0rJyInKX1lbHNle1YucHVzaCgnIHhtbG5zOicrcFtpXSsnPSInK3BbaV0rJyInKX19Vi5wdXNoKCIgPiIpO1YucHVzaChyKTtWLnB1c2goIjwvc2FwLnVpLmNvcmUubXZjOlZpZXc+Iik7cmV0dXJuIHZrYmVhdXRpZnkueG1sKFYuam9pbigiIikpfTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLndzLlNhcFBjcFdlYlNvY2tldCcpKXsNCi8qIQogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLndzLlNhcFBjcFdlYlNvY2tldCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3dzL1NhcFBjcFdlYlNvY2tldCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vV2ViU29ja2V0J10sZnVuY3Rpb24ocSxXKXsidXNlIHN0cmljdCI7dmFyIFM9Vy5leHRlbmQoInNhcC51aS5jb3JlLndzLlNhcFBjcFdlYlNvY2tldCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHUscCl7Vy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSk7Uy5TVVBQT1JURURfUFJPVE9DT0xTPXt2MTA6InYxMC5wY3Auc2FwLmNvbSJ9O1MuX2Rlc2VyaWFsaXplUmVnZXhwPS8oKD86W146XFxdfCg/OlxcLikpKyk6KCg/OlteOlxcXG5dfCg/OlxcLikpKikvO1MuX1NFUEFSQVRPUj0iXG5cbiI7Uy5fTUVTU0FHRT0iTUVTU0FHRSI7Uy5wcm90b3R5cGUuX29ub3Blbj1mdW5jdGlvbigpe3ZhciBzPWZhbHNlO2lmKHRoaXMuZ2V0UHJvdG9jb2woKT09PSIiKXtzPXRydWV9ZWxzZXtmb3IodmFyIHAgaW4gUy5TVVBQT1JURURfUFJPVE9DT0xTKXtpZihTLlNVUFBPUlRFRF9QUk9UT0NPTFMuaGFzT3duUHJvcGVydHkocCkpe2lmKFMuU1VQUE9SVEVEX1BST1RPQ09MU1twXT09PXRoaXMuZ2V0UHJvdG9jb2woKSl7cz10cnVlO2JyZWFrfX19fWlmKHMpe3RoaXMuZmlyZU9wZW4oKX1lbHNle3Euc2FwLmxvZy5lcnJvcigiVW5zdXBwb3J0ZWQgcHJvdG9jb2wgJyIrdGhpcy5nZXRQcm90b2NvbCgpKyInIHNlbGVjdGVkIGJ5IHRoZSBzZXJ2ZXIuICIrIkNvbm5lY3Rpb24gd2lsbCBiZSBjbG9zZWQuIik7dGhpcy5jbG9zZSgiVW5zdXBwb3J0ZWQgcHJvdG9jb2wgc2VsZWN0ZWQgYnkgdGhlIHNlcnZlciIpfX07Uy5wcm90b3R5cGUuX29ubWVzc2FnZT1mdW5jdGlvbihtKXt2YXIgcz0tMSxlPXt9O2lmKHR5cGVvZiBtLmRhdGE9PT0ic3RyaW5nIil7cz1tLmRhdGEuaW5kZXhPZihTLl9TRVBBUkFUT1IpfWlmKHMhPT0tMSl7ZS5wY3BGaWVsZHM9dGhpcy5fZXh0cmFjdFBjcEZpZWxkcyhtLmRhdGEuc3Vic3RyaW5nKDAscykpO2UuZGF0YT1tLmRhdGEuc3Vic3RyKHMrUy5fU0VQQVJBVE9SLmxlbmd0aCl9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiSW52YWxpZCBQQ1AgbWVzc2FnZSByZWNlaXZlZDogIittLmRhdGEpO2UucGNwRmllbGRzPXt9O2UuZGF0YT1tLmRhdGF9dGhpcy5maXJlTWVzc2FnZShlKX07Uy5wcm90b3R5cGUuX2V4dHJhY3RQY3BGaWVsZHM9ZnVuY3Rpb24oaCl7dmFyIGY9aC5zcGxpdCgiXG4iKSxsPVtdLHA9e307Zm9yKHZhciBpPTA7aTxmLmxlbmd0aDtpKyspe2w9ZltpXS5tYXRjaChTLl9kZXNlcmlhbGl6ZVJlZ2V4cCk7aWYobCYmbC5sZW5ndGg9PT0zKXtwW3RoaXMuX3VuZXNjYXBlKGxbMV0pXT10aGlzLl91bmVzY2FwZShsWzJdKX19cmV0dXJuIHB9O1MucHJvdG90eXBlLl91bmVzY2FwZT1mdW5jdGlvbihlKXt2YXIgcD1lLnNwbGl0KCJcdTAwMDgiKSx1PSIiO2Zvcih2YXIgaT0wO2k8cC5sZW5ndGg7aSsrKXtwW2ldPXBbaV0ucmVwbGFjZSgvXFxcXC9nLCJcdTAwMDgiKS5yZXBsYWNlKC9cXDovZywnOicpLnJlcGxhY2UoL1xcbi9nLCdcbicpLnJlcGxhY2UoL1x1MDAwOC9nLCJcXCIpfXU9cC5qb2luKCJcdTAwMDgiKTtyZXR1cm4gdX07Uy5wcm90b3R5cGUuX3NlcmlhbGl6ZVBjcEZpZWxkcz1mdW5jdGlvbihwLG0sUCl7dmFyIHM9IiIsZj0iIixhPSIiO2lmKG09PT0nc3RyaW5nJyl7YT0ndGV4dCd9ZWxzZSBpZihtPT09J2Jsb2InfHxtPT09J2FycmF5YnVmZmVyJyl7YT0nYmluYXJ5J31pZihwJiZ0eXBlb2YgcD09PSdvYmplY3QnKXtmb3IoZiBpbiBwKXtpZihwLmhhc093blByb3BlcnR5KGYpJiZmLmluZGV4T2YoJ3BjcC0nKSE9PTApe3MrPXRoaXMuX2VzY2FwZShmKSsiOiIrdGhpcy5fZXNjYXBlKFN0cmluZyhwW2ZdKSkrIlxuIn19fXJldHVybiJwY3AtYWN0aW9uOiIrUCsiXG5wY3AtYm9keS10eXBlOiIrYSsiXG4iK3MrIlxuIn07Uy5wcm90b3R5cGUuX2VzY2FwZT1mdW5jdGlvbih1KXtyZXR1cm4gdS5yZXBsYWNlKC9cXC9nLCdcXFxcJykucmVwbGFjZSgvOi9nLCdcXDonKS5yZXBsYWNlKC9cbi9nLCdcXG4nKX07Uy5wcm90b3R5cGUuc2VuZD1mdW5jdGlvbihtLHApe3ZhciBNPXR5cGVvZiBtLFA9IiI7UD10aGlzLl9zZXJpYWxpemVQY3BGaWVsZHMocCxNLFMuX01FU1NBR0UpO1cucHJvdG90eXBlLnNlbmQuY2FsbCh0aGlzLFArbSk7cmV0dXJuIHRoaXN9O3JldHVybiBTfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLkNsaWVudENvbnRleHRCaW5kaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLkNsaWVudENvbnRleHRCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL0NsaWVudENvbnRleHRCaW5kaW5nIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9Db250ZXh0QmluZGluZyddLGZ1bmN0aW9uKHEsQyl7InVzZSBzdHJpY3QiO3ZhciBhPUMuZXh0ZW5kKCJzYXAudWkubW9kZWwuQ2xpZW50Q29udGV4dEJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxQLGUpe0MuY2FsbCh0aGlzLG0scCxjLFAsZSk7dmFyIHQ9dGhpczttLmNyZWF0ZUJpbmRpbmdDb250ZXh0KHAsYyxQLGZ1bmN0aW9uKGMpe3QuYkluaXRpYWw9ZmFsc2U7dC5vRWxlbWVudENvbnRleHQ9Y30pfX0pO2EucHJvdG90eXBlLnJlZnJlc2g9ZnVuY3Rpb24oZil7dmFyIHQ9dGhpczt0aGlzLm9Nb2RlbC5jcmVhdGVCaW5kaW5nQ29udGV4dCh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQsdGhpcy5tUGFyYW1ldGVycyxmdW5jdGlvbihjKXtpZih0Lm9FbGVtZW50Q29udGV4dD09PWMmJiFmKXt0Lm9Nb2RlbC5jaGVja1VwZGF0ZSh0cnVlLGMpfWVsc2V7dC5vRWxlbWVudENvbnRleHQ9Yzt0Ll9maXJlQ2hhbmdlKCl9fSx0cnVlKX07YS5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5vTW9kZWwuY3JlYXRlQmluZGluZ0NvbnRleHQodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0LHRoaXMubVBhcmFtZXRlcnMsZnVuY3Rpb24oYyl7dC5vRWxlbWVudENvbnRleHQ9Yzt0Ll9maXJlQ2hhbmdlKCl9LHRydWUpfTthLnByb3RvdHlwZS5zZXRDb250ZXh0PWZ1bmN0aW9uKGMpe3ZhciB0PXRoaXM7aWYodGhpcy5vQ29udGV4dCE9Yyl7dGhpcy5vQ29udGV4dD1jO3RoaXMub01vZGVsLmNyZWF0ZUJpbmRpbmdDb250ZXh0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCx0aGlzLm1QYXJhbWV0ZXJzLGZ1bmN0aW9uKGMpe3Qub0VsZW1lbnRDb250ZXh0PWM7dC5fZmlyZUNoYW5nZSgpfSl9fTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5DbGllbnRMaXN0QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5DbGllbnRMaXN0QmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9DbGllbnRMaXN0QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vRmlsdGVyVHlwZScsJy4vTGlzdEJpbmRpbmcnXSxmdW5jdGlvbihxLEYsTCl7InVzZSBzdHJpY3QiO3ZhciBDPUwuZXh0ZW5kKCJzYXAudWkubW9kZWwuQ2xpZW50TGlzdEJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxzLGYsUCl7TC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy51cGRhdGUoKX0sbWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJnZXRMZW5ndGgiXX19KTtDLnByb3RvdHlwZS5fZ2V0Q29udGV4dHM9ZnVuY3Rpb24ocyxsKXtpZighcyl7cz0wfWlmKCFsKXtsPU1hdGgubWluKHRoaXMuaUxlbmd0aCx0aGlzLm9Nb2RlbC5pU2l6ZUxpbWl0KX12YXIgZT1NYXRoLm1pbihzK2wsdGhpcy5hSW5kaWNlcy5sZW5ndGgpLGMsYT1bXSxwPXRoaXMub01vZGVsLnJlc29sdmUodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0KTtpZihwJiYhcS5zYXAuZW5kc1dpdGgocCwiLyIpKXtwKz0iLyJ9Zm9yKHZhciBpPXM7aTxlO2krKyl7Yz10aGlzLm9Nb2RlbC5nZXRDb250ZXh0KHArdGhpcy5hSW5kaWNlc1tpXSk7YS5wdXNoKGMpfXJldHVybiBhfTtDLnByb3RvdHlwZS5zZXRDb250ZXh0PWZ1bmN0aW9uKGMpe2lmKHRoaXMub0NvbnRleHQhPWMpe3RoaXMub0NvbnRleHQ9YztpZih0aGlzLmlzUmVsYXRpdmUoKSl7dGhpcy51cGRhdGUoKTt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5Db250ZXh0fSl9fX07Qy5wcm90b3R5cGUuZ2V0TGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaUxlbmd0aH07Qy5wcm90b3R5cGUuX2dldExlbmd0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFJbmRpY2VzLmxlbmd0aH07Qy5wcm90b3R5cGUudXBkYXRlSW5kaWNlcz1mdW5jdGlvbigpe3RoaXMuYUluZGljZXM9W107Zm9yKHZhciBpPTA7aTx0aGlzLm9MaXN0Lmxlbmd0aDtpKyspe3RoaXMuYUluZGljZXMucHVzaChpKX19O0MucHJvdG90eXBlLnNvcnQ9ZnVuY3Rpb24ocyl7aWYoIXMpe3RoaXMuYVNvcnRlcnM9bnVsbDt0aGlzLnVwZGF0ZUluZGljZXMoKTt0aGlzLmFwcGx5RmlsdGVyKCl9ZWxzZXtpZihzIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLlNvcnRlcil7cz1bc119dGhpcy5hU29ydGVycz1zO3RoaXMuYXBwbHlTb3J0KCl9dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOnNhcC51aS5tb2RlbC5DaGFuZ2VSZWFzb24uU29ydH0pO3RoaXMuX2ZpcmVTb3J0KHtzb3J0ZXI6c30pO3JldHVybiB0aGlzfTtDLnByb3RvdHlwZS5hcHBseVNvcnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLHM9W10sYz1bXSx2LFM7aWYoIXRoaXMuYVNvcnRlcnN8fHRoaXMuYVNvcnRlcnMubGVuZ3RoPT0wKXtyZXR1cm59Zm9yKHZhciBqPTA7ajx0aGlzLmFTb3J0ZXJzLmxlbmd0aDtqKyspe1M9dGhpcy5hU29ydGVyc1tqXTtjW2pdPVMuZm5Db21wYXJlO2lmKCFjW2pdKXtjW2pdPWZ1bmN0aW9uKGEsYil7aWYoYj09bnVsbCl7cmV0dXJuLTF9aWYoYT09bnVsbCl7cmV0dXJuIDF9aWYodHlwZW9mIGE9PSJzdHJpbmciJiZ0eXBlb2YgYj09InN0cmluZyIpe3JldHVybiBhLmxvY2FsZUNvbXBhcmUoYil9aWYoYTxiKXtyZXR1cm4tMX1pZihhPmIpe3JldHVybiAxfXJldHVybiAwfX1xLmVhY2godGhpcy5hSW5kaWNlcyxmdW5jdGlvbihpLEkpe3Y9dC5vTW9kZWwuZ2V0UHJvcGVydHkoUy5zUGF0aCx0Lm9MaXN0W0ldKTtpZih0eXBlb2Ygdj09InN0cmluZyIpe3Y9di50b0xvY2FsZVVwcGVyQ2FzZSgpfWlmKCFzW2pdKXtzW2pdPVtdfXNbal1bSV09dn0pfXRoaXMuYUluZGljZXMuc29ydChmdW5jdGlvbihhLGIpe3ZhciBkPXNbMF1bYV0sZT1zWzBdW2JdO3JldHVybiB0Ll9hcHBseVNvcnRDb21wYXJlKGEsYixkLGUscyxjLDApfSl9O0MucHJvdG90eXBlLl9hcHBseVNvcnRDb21wYXJlPWZ1bmN0aW9uKGEsYix2LGMscyxkLEQpe3ZhciBTPXRoaXMuYVNvcnRlcnNbRF0sZj1kW0RdLHI7cj1mKHYsYyk7aWYoUy5iRGVzY2VuZGluZyl7cj0tcn1pZihyPT0wJiZ0aGlzLmFTb3J0ZXJzW0QrMV0pe3Y9c1tEKzFdW2FdLGM9c1tEKzFdW2JdO3I9dGhpcy5fYXBwbHlTb3J0Q29tcGFyZShhLGIsdixjLHMsZCxEKzEpfXJldHVybiByfTtDLnByb3RvdHlwZS5maWx0ZXI9ZnVuY3Rpb24oZixzKXt0aGlzLnVwZGF0ZUluZGljZXMoKTtpZihmIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkZpbHRlcil7Zj1bZl19aWYocz09Ri5BcHBsaWNhdGlvbil7dGhpcy5hQXBwbGljYXRpb25GaWx0ZXJzPWZ8fFtdfWVsc2UgaWYocz09Ri5Db250cm9sKXt0aGlzLmFGaWx0ZXJzPWZ8fFtdfWVsc2V7dGhpcy5hRmlsdGVycz1mfHxbXTt0aGlzLmFBcHBsaWNhdGlvbkZpbHRlcnM9W119Zj10aGlzLmFGaWx0ZXJzLmNvbmNhdCh0aGlzLmFBcHBsaWNhdGlvbkZpbHRlcnMpO2lmKGYubGVuZ3RoPT0wKXt0aGlzLmFGaWx0ZXJzPVtdO3RoaXMuYUFwcGxpY2F0aW9uRmlsdGVycz1bXTt0aGlzLmlMZW5ndGg9dGhpcy5fZ2V0TGVuZ3RoKCl9ZWxzZXt0aGlzLmFwcGx5RmlsdGVyKCl9dGhpcy5hcHBseVNvcnQoKTt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5GaWx0ZXJ9KTtpZihzPT1GLkFwcGxpY2F0aW9uKXt0aGlzLl9maXJlRmlsdGVyKHtmaWx0ZXJzOnRoaXMuYUFwcGxpY2F0aW9uRmlsdGVyc30pfWVsc2V7dGhpcy5fZmlyZUZpbHRlcih7ZmlsdGVyczp0aGlzLmFGaWx0ZXJzfSl9cmV0dXJuIHRoaXN9O0MucHJvdG90eXBlLm5vcm1hbGl6ZUZpbHRlclZhbHVlPWZ1bmN0aW9uKHYpe2lmKHR5cGVvZiB2PT0ic3RyaW5nIil7cmV0dXJuIHYudG9VcHBlckNhc2UoKX1pZih2IGluc3RhbmNlb2YgRGF0ZSl7cmV0dXJuIHYuZ2V0VGltZSgpfXJldHVybiB2fTtDLnByb3RvdHlwZS5hcHBseUZpbHRlcj1mdW5jdGlvbigpe2lmKCF0aGlzLmFGaWx0ZXJzKXtyZXR1cm59dmFyIHQ9dGhpcyxmPXt9LGEsYj1bXSxnPWZhbHNlLGM9dHJ1ZSxkPXRoaXMuYUZpbHRlcnMuY29uY2F0KHRoaXMuYUFwcGxpY2F0aW9uRmlsdGVycyk7cS5lYWNoKGQsZnVuY3Rpb24oaixvKXtpZihvLnNQYXRoIT09dW5kZWZpbmVkKXthPWZbby5zUGF0aF07aWYoIWEpe2E9ZltvLnNQYXRoXT1bXX19ZWxzZXthPWZbIl9fbXVsdGlGaWx0ZXIiXTtpZighYSl7YT1mWyJfX211bHRpRmlsdGVyIl09W119fWEucHVzaChvKX0pO3EuZWFjaCh0aGlzLmFJbmRpY2VzLGZ1bmN0aW9uKGksSSl7Yz10cnVlO3EuZWFjaChmLGZ1bmN0aW9uKHAsYSl7aWYocCE9PSJfX211bHRpRmlsdGVyIil7dmFyIHY9dC5vTW9kZWwuZ2V0UHJvcGVydHkocCx0Lm9MaXN0W0ldKTt2PXQubm9ybWFsaXplRmlsdGVyVmFsdWUodik7Zz1mYWxzZTtxLmVhY2goYSxmdW5jdGlvbihqLG8pe3ZhciBUPXQuZ2V0RmlsdGVyRnVuY3Rpb24obyk7aWYodiE9dW5kZWZpbmVkJiZUKHYpKXtnPXRydWU7cmV0dXJuIGZhbHNlfX0pfWVsc2V7Zz1mYWxzZTtxLmVhY2goYSxmdW5jdGlvbihqLG8pe2c9dC5fcmVzb2x2ZU11bHRpRmlsdGVyKG8sSSk7aWYoZyl7cmV0dXJuIGZhbHNlfX0pfWlmKCFnKXtjPWZhbHNlO3JldHVybiBmYWxzZX19KTtpZihjKXtiLnB1c2goSSl9fSk7dGhpcy5hSW5kaWNlcz1iO3RoaXMuaUxlbmd0aD1iLmxlbmd0aH07Qy5wcm90b3R5cGUuX3Jlc29sdmVNdWx0aUZpbHRlcj1mdW5jdGlvbihtLEkpe3ZhciB0PXRoaXMsTT1mYWxzZSxmPW0uYUZpbHRlcnM7aWYoZil7cS5lYWNoKGYsZnVuY3Rpb24oaSxvKXt2YXIgbD1mYWxzZTtpZihvLl9iTXVsdGlGaWx0ZXIpe2w9dC5fcmVzb2x2ZU11bHRpRmlsdGVyKG8sSSl9ZWxzZSBpZihvLnNQYXRoIT09dW5kZWZpbmVkKXt2YXIgdj10Lm9Nb2RlbC5nZXRQcm9wZXJ0eShvLnNQYXRoLHQub0xpc3RbSV0pO3Y9dC5ub3JtYWxpemVGaWx0ZXJWYWx1ZSh2KTt2YXIgVD10LmdldEZpbHRlckZ1bmN0aW9uKG8pO2lmKHYhPXVuZGVmaW5lZCYmVCh2KSl7bD10cnVlfX1pZihsJiZtLmJBbmQpe009dHJ1ZX1lbHNlIGlmKCFsJiZtLmJBbmQpe009ZmFsc2U7cmV0dXJuIGZhbHNlfWVsc2UgaWYobCl7TT10cnVlO3JldHVybiBmYWxzZX19KX1yZXR1cm4gTX07Qy5wcm90b3R5cGUuZ2V0RmlsdGVyRnVuY3Rpb249ZnVuY3Rpb24oZil7aWYoZi5mblRlc3Qpe3JldHVybiBmLmZuVGVzdH12YXIgdj10aGlzLm5vcm1hbGl6ZUZpbHRlclZhbHVlKGYub1ZhbHVlMSksVj10aGlzLm5vcm1hbGl6ZUZpbHRlclZhbHVlKGYub1ZhbHVlMik7c3dpdGNoKGYuc09wZXJhdG9yKXtjYXNlIkVRIjpmLmZuVGVzdD1mdW5jdGlvbihhKXtyZXR1cm4gYT09dn07YnJlYWs7Y2FzZSJORSI6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIGEhPXZ9O2JyZWFrO2Nhc2UiTFQiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhPHZ9O2JyZWFrO2Nhc2UiTEUiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhPD12fTticmVhaztjYXNlIkdUIjpmLmZuVGVzdD1mdW5jdGlvbihhKXtyZXR1cm4gYT52fTticmVhaztjYXNlIkdFIjpmLmZuVGVzdD1mdW5jdGlvbihhKXtyZXR1cm4gYT49dn07YnJlYWs7Y2FzZSJCVCI6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuKGE+PXYpJiYoYTw9Vil9O2JyZWFrO2Nhc2UiQ29udGFpbnMiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe2lmKHR5cGVvZiBhIT0ic3RyaW5nIil7dGhyb3cgbmV3IEVycm9yKCJPbmx5IFwiU3RyaW5nXCIgdmFsdWVzIGFyZSBzdXBwb3J0ZWQgZm9yIHRoZSBGaWx0ZXJPcGVyYXRvcjogXCJDb250YWluc1wiLiIpfXJldHVybiBhLmluZGV4T2YodikhPS0xfTticmVhaztjYXNlIlN0YXJ0c1dpdGgiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe2lmKHR5cGVvZiBhIT0ic3RyaW5nIil7dGhyb3cgbmV3IEVycm9yKCJPbmx5IFwiU3RyaW5nXCIgdmFsdWVzIGFyZSBzdXBwb3J0ZWQgZm9yIHRoZSBGaWx0ZXJPcGVyYXRvcjogXCJTdGFydHNXaXRoXCIuIil9cmV0dXJuIGEuaW5kZXhPZih2KT09MH07YnJlYWs7Y2FzZSJFbmRzV2l0aCI6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7aWYodHlwZW9mIGEhPSJzdHJpbmciKXt0aHJvdyBuZXcgRXJyb3IoIk9ubHkgXCJTdHJpbmdcIiB2YWx1ZXMgYXJlIHN1cHBvcnRlZCBmb3IgdGhlIEZpbHRlck9wZXJhdG9yOiBcIkVuZHNXaXRoXCIuIil9dmFyIHA9YS5pbmRleE9mKHYpO2lmKHA9PS0xKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHA9PWEubGVuZ3RoLW5ldyBTdHJpbmcoZi5vVmFsdWUxKS5sZW5ndGh9O2JyZWFrO2RlZmF1bHQ6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIHRydWV9fXJldHVybiBmLmZuVGVzdH07Qy5wcm90b3R5cGUuZ2V0RGlzdGluY3RWYWx1ZXM9ZnVuY3Rpb24ocCl7dmFyIHI9W10sbT17fSx2LHQ9dGhpcztxLmVhY2godGhpcy5vTGlzdCxmdW5jdGlvbihpLGMpe3Y9dC5vTW9kZWwuZ2V0UHJvcGVydHkocCxjKTtpZighbVt2XSl7bVt2XT10cnVlO3IucHVzaCh2KX19KTtyZXR1cm4gcn07cmV0dXJuIEN9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQ2xpZW50VHJlZUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuQ2xpZW50VHJlZUJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvQ2xpZW50VHJlZUJpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL1RyZWVCaW5kaW5nJ10sZnVuY3Rpb24ocSxUKXsidXNlIHN0cmljdCI7dmFyIEM9VC5leHRlbmQoInNhcC51aS5tb2RlbC5DbGllbnRUcmVlQmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCxjLGYsUCl7VC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoIXRoaXMub0NvbnRleHQpe3RoaXMub0NvbnRleHQ9IiJ9dGhpcy5maWx0ZXJJbmZvPXt9O3RoaXMuZmlsdGVySW5mby5hRmlsdGVyZWRDb250ZXh0cz1bXTt0aGlzLmZpbHRlckluZm8ub1BhcmVudENvbnRleHQ9e307aWYodGhpcy5hRmlsdGVycyl7aWYodGhpcy5vTW9kZWwuX2dldE9iamVjdCh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpKXt0aGlzLmZpbHRlcihmKX19fX0pO0MucHJvdG90eXBlLmdldFJvb3RDb250ZXh0cz1mdW5jdGlvbigpe2lmKCF0aGlzLm9Nb2RlbC5pc0xpc3QodGhpcy5zUGF0aCkpe3ZhciBjPXRoaXMub01vZGVsLmdldENvbnRleHQodGhpcy5zUGF0aCk7aWYodGhpcy5iRGlzcGxheVJvb3ROb2RlKXtyZXR1cm5bY119ZWxzZXtyZXR1cm4gdGhpcy5nZXROb2RlQ29udGV4dHMoYyl9fWVsc2V7dmFyIGE9W10sdD10aGlzO3EuZWFjaCh0aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgpLGZ1bmN0aW9uKGksbyl7YS5wdXNoKHQub01vZGVsLmdldENvbnRleHQodC5zUGF0aCsocS5zYXAuZW5kc1dpdGgodC5zUGF0aCwiLyIpPyIiOiIvIikraSkpfSk7cmV0dXJuIGF9fTtDLnByb3RvdHlwZS5nZXROb2RlQ29udGV4dHM9ZnVuY3Rpb24oYyl7dmFyIHM9Yy5nZXRQYXRoKCk7aWYoIXEuc2FwLmVuZHNXaXRoKHMsIi8iKSl7cz1zKyIvIn1pZighcS5zYXAuc3RhcnRzV2l0aChzLCIvIikpe3M9Ii8iK3N9dmFyIGE9W10sdD10aGlzLG49dGhpcy5vTW9kZWwuX2dldE9iamVjdChzKSxvLEE9dGhpcy5tUGFyYW1ldGVycyYmdGhpcy5tUGFyYW1ldGVycy5hcnJheU5hbWVzLGI7aWYoQSYmcS5pc0FycmF5KEEpKXtxLmVhY2goQSxmdW5jdGlvbihpLGQpe2I9bltkXTtpZihiKXtxLmVhY2goYixmdW5jdGlvbihTLGUpe3QuX3NhdmVTdWJDb250ZXh0KGUsYSxzLGQrIi8iK1MpfSl9fSl9ZWxzZXtpZihuKXtxLnNhcC5lYWNoKG4sZnVuY3Rpb24oTixvKXtpZihxLmlzQXJyYXkobykpe3EuZWFjaChvLGZ1bmN0aW9uKFMsZCl7dC5fc2F2ZVN1YkNvbnRleHQoZCxhLHMsTisiLyIrUyl9KX1lbHNlIGlmKHR5cGVvZiBvPT0ib2JqZWN0Iil7dC5fc2F2ZVN1YkNvbnRleHQobyxhLHMsTil9fSl9fXJldHVybiBhfTtDLnByb3RvdHlwZS5oYXNDaGlsZHJlbj1mdW5jdGlvbihjKXtyZXR1cm4gYz90aGlzLmdldE5vZGVDb250ZXh0cyhjKS5sZW5ndGg+MDpmYWxzZX07Qy5wcm90b3R5cGUuX3NhdmVTdWJDb250ZXh0PWZ1bmN0aW9uKG4sYyxzLE4pe2lmKHR5cGVvZiBuPT0ib2JqZWN0Iil7dmFyIG89dGhpcy5vTW9kZWwuZ2V0Q29udGV4dChzK04pO2lmKHRoaXMuYUZpbHRlcnMmJiF0aGlzLmJJc0ZpbHRlcmluZyl7aWYocS5pbkFycmF5KG8sdGhpcy5maWx0ZXJJbmZvLmFGaWx0ZXJlZENvbnRleHRzKSE9LTEpe2MucHVzaChvKX19ZWxzZXtjLnB1c2gobyl9fX07Qy5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKGYpe3RoaXMuZmlsdGVySW5mby5hRmlsdGVyZWRDb250ZXh0cz1bXTt0aGlzLmZpbHRlckluZm8ub1BhcmVudENvbnRleHQ9e307aWYoIWZ8fCFxLmlzQXJyYXkoZil8fGYubGVuZ3RoPT0wKXt0aGlzLmFGaWx0ZXJzPW51bGx9ZWxzZXt0aGlzLmFGaWx0ZXJzPWY7dmFyIGM9bmV3IHNhcC51aS5tb2RlbC5Db250ZXh0KHRoaXMub01vZGVsLHRoaXMuc1BhdGgpO3RoaXMuZmlsdGVyUmVjdXJzaXZlKGMpfXRoaXMuX2ZpcmVDaGFuZ2Uoe3JlYXNvbjoiZmlsdGVyIn0pO3RoaXMuX2ZpcmVGaWx0ZXIoe2ZpbHRlcnM6Zn0pfTtDLnByb3RvdHlwZS5maWx0ZXJSZWN1cnNpdmU9ZnVuY3Rpb24ocCl7dGhpcy5iSXNGaWx0ZXJpbmc9dHJ1ZTt2YXIgYz10aGlzLmdldE5vZGVDb250ZXh0cyhwKTt0aGlzLmJJc0ZpbHRlcmluZz1mYWxzZTtpZihjLmxlbmd0aD4wKXt2YXIgdD10aGlzO3EuZWFjaChjLGZ1bmN0aW9uKGksbyl7dC5maWx0ZXJSZWN1cnNpdmUobyl9KTt0aGlzLmFwcGx5RmlsdGVyKHApfX07Qy5wcm90b3R5cGUuYXBwbHlGaWx0ZXI9ZnVuY3Rpb24ocCl7aWYoIXRoaXMuYUZpbHRlcnMpe3JldHVybn12YXIgdD10aGlzLGY9e30sRixhPVtdLGc9ZmFsc2UsYj10cnVlO3RoaXMuYklzRmlsdGVyaW5nPXRydWU7dmFyIHU9dGhpcy5nZXROb2RlQ29udGV4dHMocCk7dGhpcy5iSXNGaWx0ZXJpbmc9ZmFsc2U7cS5lYWNoKHQuYUZpbHRlcnMsZnVuY3Rpb24oaixvKXtpZihvLnNQYXRoKXtGPWZbby5zUGF0aF07aWYoIUYpe0Y9ZltvLnNQYXRoXT1bXX19ZWxzZXtGPWZbIl9fbXVsdGlGaWx0ZXIiXTtpZighRil7Rj1mWyJfX211bHRpRmlsdGVyIl09W119fUYucHVzaChvKX0pO3EuZWFjaCh1LGZ1bmN0aW9uKGksVSl7Yj10cnVlO3EuZWFjaChmLGZ1bmN0aW9uKFAsRil7aWYoUCE9PSJfX211bHRpRmlsdGVyIil7dmFyIHY9dC5vTW9kZWwuX2dldE9iamVjdChQLFUpO2lmKHR5cGVvZiB2PT0ic3RyaW5nIil7dj12LnRvVXBwZXJDYXNlKCl9Zz1mYWxzZTtxLmVhY2goRixmdW5jdGlvbihqLG8pe3ZhciBjPXQuZ2V0RmlsdGVyRnVuY3Rpb24obyk7aWYodiE9dW5kZWZpbmVkJiZjKHYpKXtnPXRydWU7cmV0dXJuIGZhbHNlfX0pfWVsc2V7Zz1mYWxzZTtxLmVhY2goRixmdW5jdGlvbihqLG8pe2c9dC5fcmVzb2x2ZU11bHRpRmlsdGVyKG8sVSk7aWYoZyl7cmV0dXJuIGZhbHNlfX0pfWlmKCFnKXtiPWZhbHNlO3JldHVybiBmYWxzZX19KTtpZihiKXthLnB1c2goVSl9fSk7aWYoYS5sZW5ndGg+MCl7cS5tZXJnZSh0aGlzLmZpbHRlckluZm8uYUZpbHRlcmVkQ29udGV4dHMsYSk7dGhpcy5maWx0ZXJJbmZvLmFGaWx0ZXJlZENvbnRleHRzLnB1c2gocCk7dGhpcy5maWx0ZXJJbmZvLm9QYXJlbnRDb250ZXh0PXB9aWYocS5pbkFycmF5KHRoaXMuZmlsdGVySW5mby5vUGFyZW50Q29udGV4dCx1KSE9LTEpe3RoaXMuZmlsdGVySW5mby5hRmlsdGVyZWRDb250ZXh0cy5wdXNoKHApO3RoaXMuZmlsdGVySW5mby5vUGFyZW50Q29udGV4dD1wfX07Qy5wcm90b3R5cGUuX3Jlc29sdmVNdWx0aUZpbHRlcj1mdW5jdGlvbihtLHUpe3ZhciB0PXRoaXMsTT1mYWxzZSxmPW0uYUZpbHRlcnM7aWYoZil7cS5lYWNoKGYsZnVuY3Rpb24oaSxGKXt2YXIgbD1mYWxzZTtpZihGLl9iTXVsdGlGaWx0ZXIpe2w9dC5fcmVzb2x2ZU11bHRpRmlsdGVyKEYsdSl9ZWxzZSBpZihGLnNQYXRoKXt2YXIgdj10Lm9Nb2RlbC5nZXRQcm9wZXJ0eShGLnNQYXRoLHUpO2lmKHR5cGVvZiB2PT0ic3RyaW5nIil7dj12LnRvVXBwZXJDYXNlKCl9dmFyIGE9dC5nZXRGaWx0ZXJGdW5jdGlvbihGKTtpZih2IT11bmRlZmluZWQmJmEodikpe2w9dHJ1ZX19aWYobCYmbS5iQW5kKXtNPXRydWV9ZWxzZSBpZighbCYmbS5iQW5kKXtNPWZhbHNlO3JldHVybiBmYWxzZX1lbHNlIGlmKGwpe009dHJ1ZTtyZXR1cm4gZmFsc2V9fSl9cmV0dXJuIE19O0MucHJvdG90eXBlLmdldEZpbHRlckZ1bmN0aW9uPWZ1bmN0aW9uKGYpe2lmKGYuZm5UZXN0KXtyZXR1cm4gZi5mblRlc3R9dmFyIHY9Zi5vVmFsdWUxLFY9Zi5vVmFsdWUyO2lmKHR5cGVvZiB2PT0ic3RyaW5nIil7dj12LnRvVXBwZXJDYXNlKCl9aWYodHlwZW9mIFY9PSJzdHJpbmciKXtWPVYudG9VcHBlckNhc2UoKX1zd2l0Y2goZi5zT3BlcmF0b3Ipe2Nhc2UiRVEiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhPT12fTticmVhaztjYXNlIk5FIjpmLmZuVGVzdD1mdW5jdGlvbihhKXtyZXR1cm4gYSE9dn07YnJlYWs7Y2FzZSJMVCI6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIGE8dn07YnJlYWs7Y2FzZSJMRSI6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIGE8PXZ9O2JyZWFrO2Nhc2UiR1QiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhPnZ9O2JyZWFrO2Nhc2UiR0UiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhPj12fTticmVhaztjYXNlIkJUIjpmLmZuVGVzdD1mdW5jdGlvbihhKXtyZXR1cm4oYT52KSYmKGE8Vil9O2JyZWFrO2Nhc2UiQ29udGFpbnMiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhLmluZGV4T2YodikhPS0xfTticmVhaztjYXNlIlN0YXJ0c1dpdGgiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhLmluZGV4T2Yodik9PTB9O2JyZWFrO2Nhc2UiRW5kc1dpdGgiOmYuZm5UZXN0PWZ1bmN0aW9uKGEpe3JldHVybiBhLmluZGV4T2Yodik9PWEubGVuZ3RoLW5ldyBTdHJpbmcoZi5vVmFsdWUxKS5sZW5ndGh9O2JyZWFrO2RlZmF1bHQ6Zi5mblRlc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIHRydWV9fXJldHVybiBmLmZuVGVzdH07Qy5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7dGhpcy5fZmlyZUNoYW5nZSgpfTtyZXR1cm4gQ30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5Qcm9wZXJ0eUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuUHJvcGVydHlCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL1Byb3BlcnR5QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQmluZGluZycsJy4vU2ltcGxlVHlwZSddLGZ1bmN0aW9uKHEsQixTKXsidXNlIHN0cmljdCI7dmFyIFA9Qi5leHRlbmQoInNhcC51aS5tb2RlbC5Qcm9wZXJ0eUJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihtLHAsYyxhKXtCLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sbWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwdWJsaWNNZXRob2RzOlsiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInNldFR5cGUiLCJnZXRUeXBlIiwic2V0Rm9ybWF0dGVyIiwiZ2V0Rm9ybWF0dGVyIiwiZ2V0RXh0ZXJuYWxWYWx1ZSIsInNldEV4dGVybmFsVmFsdWUiLCJnZXRCaW5kaW5nTW9kZSJdfX0pO1AucHJvdG90eXBlLmdldEV4dGVybmFsVmFsdWU9ZnVuY3Rpb24oKXt2YXIgdj10aGlzLmdldFZhbHVlKCk7aWYodGhpcy5vVHlwZSl7dj10aGlzLm9UeXBlLmZvcm1hdFZhbHVlKHYsdGhpcy5zSW50ZXJuYWxUeXBlKX1pZih0aGlzLmZuRm9ybWF0dGVyKXt2PXRoaXMuZm5Gb3JtYXR0ZXIodil9cmV0dXJuIHZ9O1AucHJvdG90eXBlLnNldEV4dGVybmFsVmFsdWU9ZnVuY3Rpb24odil7aWYodGhpcy5mbkZvcm1hdHRlcil7cmV0dXJufWlmKHRoaXMub1R5cGUpe3Y9dGhpcy5vVHlwZS5wYXJzZVZhbHVlKHYsdGhpcy5zSW50ZXJuYWxUeXBlKTt0aGlzLm9UeXBlLnZhbGlkYXRlVmFsdWUodil9dGhpcy5zZXRWYWx1ZSh2KX07UC5wcm90b3R5cGUuc2V0VHlwZT1mdW5jdGlvbih0LGkpe3RoaXMub1R5cGU9dDt0aGlzLnNJbnRlcm5hbFR5cGU9aX07UC5wcm90b3R5cGUuZ2V0VHlwZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9UeXBlfTtQLnByb3RvdHlwZS5zZXRGb3JtYXR0ZXI9ZnVuY3Rpb24oZil7dGhpcy5mbkZvcm1hdHRlcj1mfTtQLnByb3RvdHlwZS5nZXRGb3JtYXR0ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5mbkZvcm1hdHRlcn07UC5wcm90b3R5cGUuZ2V0QmluZGluZ01vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zTW9kZX07UC5wcm90b3R5cGUuc2V0QmluZGluZ01vZGU9ZnVuY3Rpb24oYil7dGhpcy5zTW9kZT1ifTtyZXR1cm4gUH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5jb250cm9sLkNvbnRyb2xQcm9wZXJ0eUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuY29udHJvbC5Db250cm9sUHJvcGVydHlCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL2NvbnRyb2wvQ29udHJvbFByb3BlcnR5QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9Qcm9wZXJ0eUJpbmRpbmcnXSxmdW5jdGlvbihxLFApeyJ1c2Ugc3RyaWN0Ijt2YXIgQz1QLmV4dGVuZCgic2FwLnVpLm1vZGVsLmNvbnRyb2wuQ29udHJvbFByb3BlcnR5QmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCxjKXtQLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLm9WYWx1ZT10aGlzLl9nZXRWYWx1ZSgpfX0pO0MucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub1ZhbHVlfTtDLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih2KXt0aGlzLm9WYWx1ZT12O3RoaXMub0NvbnRleHQuc2V0UHJvcGVydHkodGhpcy5zUGF0aCx2KX07Qy5wcm90b3R5cGUuX2dldFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub0NvbnRleHQuZ2V0UHJvcGVydHkodGhpcy5zUGF0aCl9O0MucHJvdG90eXBlLnNldENvbnRleHQ9ZnVuY3Rpb24oYyl7dGhpcy5vQ29udGV4dD1jO3RoaXMuY2hlY2tVcGRhdGUoKX07Qy5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oKXt2YXIgdj10aGlzLl9nZXRWYWx1ZSgpO2lmKHYhPT10aGlzLm9WYWx1ZSl7dGhpcy5vVmFsdWU9djt0aGlzLl9maXJlQ2hhbmdlKCl9fTtyZXR1cm4gQ30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5qc29uLkpTT05MaXN0QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5qc29uLkpTT05MaXN0QmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9qc29uL0pTT05MaXN0QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9DaGFuZ2VSZWFzb24nLCdzYXAvdWkvbW9kZWwvQ2xpZW50TGlzdEJpbmRpbmcnXSxmdW5jdGlvbihxLEMsYSl7InVzZSBzdHJpY3QiO3ZhciBKPWEuZXh0ZW5kKCJzYXAudWkubW9kZWwuanNvbi5KU09OTGlzdEJpbmRpbmciKTtKLnByb3RvdHlwZS5nZXRDb250ZXh0cz1mdW5jdGlvbihzLGwpe3RoaXMuaUxhc3RTdGFydEluZGV4PXM7dGhpcy5pTGFzdExlbmd0aD1sO2lmKCFzKXtzPTB9aWYoIWwpe2w9TWF0aC5taW4odGhpcy5pTGVuZ3RoLHRoaXMub01vZGVsLmlTaXplTGltaXQpfXZhciBjPXRoaXMuX2dldENvbnRleHRzKHMsbCksbz17fTtpZih0aGlzLmJVc2VFeHRlbmRlZENoYW5nZURldGVjdGlvbil7Zm9yKHZhciBpPTA7aTxjLmxlbmd0aDtpKyspe29bY1tpXS5nZXRQYXRoKCldPWNbaV0uZ2V0T2JqZWN0KCl9aWYodGhpcy5hTGFzdENvbnRleHRzJiZzPHRoaXMuaUxhc3RFbmRJbmRleCl7dmFyIHQ9dGhpczt2YXIgZD1xLnNhcC5hcnJheURpZmYodGhpcy5hTGFzdENvbnRleHRzLGMsZnVuY3Rpb24oTyxuKXtyZXR1cm4gcS5zYXAuZXF1YWwoTyYmdC5vTGFzdENvbnRleHREYXRhJiZ0Lm9MYXN0Q29udGV4dERhdGFbTy5nZXRQYXRoKCldLG4mJm8mJm9bbi5nZXRQYXRoKCldKX0pO2MuZGlmZj1kfXRoaXMuaUxhc3RFbmRJbmRleD1zK2w7dGhpcy5hTGFzdENvbnRleHRzPWMuc2xpY2UoMCk7dGhpcy5vTGFzdENvbnRleHREYXRhPXEuZXh0ZW5kKHRydWUse30sbyl9cmV0dXJuIGN9O0oucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBsPXRoaXMub01vZGVsLl9nZXRPYmplY3QodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0KTtpZihsJiZxLmlzQXJyYXkobCkpe2lmKHRoaXMuYlVzZUV4dGVuZGVkQ2hhbmdlRGV0ZWN0aW9uKXt0aGlzLm9MaXN0PXEuZXh0ZW5kKHRydWUsW10sbCl9ZWxzZXt0aGlzLm9MaXN0PWwuc2xpY2UoMCl9dGhpcy51cGRhdGVJbmRpY2VzKCk7dGhpcy5hcHBseUZpbHRlcigpO3RoaXMuYXBwbHlTb3J0KCk7dGhpcy5pTGVuZ3RoPXRoaXMuX2dldExlbmd0aCgpfWVsc2V7dGhpcy5vTGlzdD1bXTt0aGlzLmFJbmRpY2VzPVtdO3RoaXMuaUxlbmd0aD0wfX07Si5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7aWYoIXRoaXMuYlVzZUV4dGVuZGVkQ2hhbmdlRGV0ZWN0aW9uKXt2YXIgbD10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYoIXEuc2FwLmVxdWFsKHRoaXMub0xpc3QsbCl8fGYpe3RoaXMudXBkYXRlKCk7dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOkMuQ2hhbmdlfSl9fWVsc2V7dmFyIGM9ZmFsc2U7dmFyIHQ9dGhpczt2YXIgbD10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYoIXEuc2FwLmVxdWFsKHRoaXMub0xpc3QsbCkpe3RoaXMudXBkYXRlKCl9dmFyIGI9dGhpcy5fZ2V0Q29udGV4dHModGhpcy5pTGFzdFN0YXJ0SW5kZXgsdGhpcy5pTGFzdExlbmd0aCk7aWYodGhpcy5hTGFzdENvbnRleHRzKXtpZih0aGlzLmFMYXN0Q29udGV4dHMubGVuZ3RoIT1iLmxlbmd0aCl7Yz10cnVlfWVsc2V7cS5lYWNoKHRoaXMuYUxhc3RDb250ZXh0cyxmdW5jdGlvbihpLG8pe2lmKCFxLnNhcC5lcXVhbChiW2ldLmdldE9iamVjdCgpLHQub0xhc3RDb250ZXh0RGF0YVtvLmdldFBhdGgoKV0pKXtjPXRydWU7cmV0dXJuIGZhbHNlfX0pfX1lbHNle2M9dHJ1ZX1pZihjfHxmKXt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246Qy5DaGFuZ2V9KX19fTtyZXR1cm4gSn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5qc29uLkpTT05UcmVlQmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5qc29uLkpTT05UcmVlQmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9qc29uL0pTT05UcmVlQmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9DbGllbnRUcmVlQmluZGluZyddLGZ1bmN0aW9uKHEsQyl7InVzZSBzdHJpY3QiO3ZhciBKPUMuZXh0ZW5kKCJzYXAudWkubW9kZWwuanNvbi5KU09OVHJlZUJpbmRpbmciKTtKLnByb3RvdHlwZS5nZXROb2RlQ29udGV4dHM9ZnVuY3Rpb24oYyl7dmFyIHM9Yy5nZXRQYXRoKCk7aWYoIXEuc2FwLmVuZHNXaXRoKHMsIi8iKSl7cz1zKyIvIn1pZighcS5zYXAuc3RhcnRzV2l0aChzLCIvIikpe3M9Ii8iK3N9dmFyIGE9W10sdD10aGlzLG49dGhpcy5vTW9kZWwuX2dldE9iamVjdChzKSxvLEE9dGhpcy5tUGFyYW1ldGVycyYmdGhpcy5tUGFyYW1ldGVycy5hcnJheU5hbWVzLGI7aWYoQSYmcS5pc0FycmF5KEEpKXtxLmVhY2goQSxmdW5jdGlvbihpLGQpe2I9bltkXTtpZihiKXtxLmVhY2goYixmdW5jdGlvbihTLGUpe3QuX3NhdmVTdWJDb250ZXh0KGUsYSxzLGQrIi8iK1MpfSl9fSl9ZWxzZXtpZihuKXtxLnNhcC5lYWNoKG4sZnVuY3Rpb24oTixvKXtpZihxLmlzQXJyYXkobykpe3EuZWFjaChvLGZ1bmN0aW9uKFMsZCl7dC5fc2F2ZVN1YkNvbnRleHQoZCxhLHMsTisiLyIrUyl9KX1lbHNlIGlmKG8mJnR5cGVvZiBvPT0ib2JqZWN0Iil7dC5fc2F2ZVN1YkNvbnRleHQobyxhLHMsTil9fSl9fXJldHVybiBhfTtKLnByb3RvdHlwZS5fc2F2ZVN1YkNvbnRleHQ9ZnVuY3Rpb24obixjLHMsTil7aWYodHlwZW9mIG49PSJvYmplY3QiKXt2YXIgbz10aGlzLm9Nb2RlbC5nZXRDb250ZXh0KHMrTik7aWYodGhpcy5hRmlsdGVycyYmIXRoaXMuYklzRmlsdGVyaW5nKXtpZihxLmluQXJyYXkobyx0aGlzLmZpbHRlckluZm8uYUZpbHRlcmVkQ29udGV4dHMpIT0tMSl7Yy5wdXNoKG8pfX1lbHNle2MucHVzaChvKX19fTtyZXR1cm4gSn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YVByb3BlcnR5QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YVByb3BlcnR5QmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9vZGF0YS9PRGF0YVByb3BlcnR5QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9Qcm9wZXJ0eUJpbmRpbmcnXSxmdW5jdGlvbihxLFApeyJ1c2Ugc3RyaWN0Ijt2YXIgTz1QLmV4dGVuZCgic2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhUHJvcGVydHlCaW5kaW5nIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obSxwLGMsYSl7UC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5vVmFsdWU9dGhpcy5fZ2V0VmFsdWUoKX19KTtPLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9WYWx1ZX07Ty5wcm90b3R5cGUuX2dldFZhbHVlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub01vZGVsLl9nZXRPYmplY3QodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0KX07Ty5wcm90b3R5cGUuc2V0VmFsdWU9ZnVuY3Rpb24odil7aWYodGhpcy5vVmFsdWUhPXYpe2lmKCF0aGlzLm9Nb2RlbC5zZXRQcm9wZXJ0eSh0aGlzLnNQYXRoLHYsdGhpcy5vQ29udGV4dCkpe3RoaXMuX2ZpcmVDaGFuZ2UoKX19fTtPLnByb3RvdHlwZS5zZXRDb250ZXh0PWZ1bmN0aW9uKGMpe2lmKHRoaXMub0NvbnRleHQhPWMpe3RoaXMub0NvbnRleHQ9YztpZih0aGlzLmlzUmVsYXRpdmUoKSl7dGhpcy5jaGVja1VwZGF0ZSgpfX19O08ucHJvdG90eXBlLmNoZWNrVXBkYXRlPWZ1bmN0aW9uKGYpe3ZhciB2PXRoaXMuX2dldFZhbHVlKCk7aWYodiE9PXRoaXMub1ZhbHVlfHxmKXt0aGlzLm9WYWx1ZT12O3RoaXMuX2ZpcmVDaGFuZ2Uoe3JlYXNvbjpzYXAudWkubW9kZWwuQ2hhbmdlUmVhc29uLkNoYW5nZX0pfX07cmV0dXJuIE99LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VQcm9wZXJ0eUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VQcm9wZXJ0eUJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvcmVzb3VyY2UvUmVzb3VyY2VQcm9wZXJ0eUJpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvbW9kZWwvUHJvcGVydHlCaW5kaW5nJ10sZnVuY3Rpb24ocSxQKXsidXNlIHN0cmljdCI7dmFyIFI9UC5leHRlbmQoInNhcC51aS5tb2RlbC5yZXNvdXJjZS5SZXNvdXJjZVByb3BlcnR5QmluZGluZyIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKG0scCl7UC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5vVmFsdWU9dGhpcy5vTW9kZWwuZ2V0UHJvcGVydHkocCl9fSk7Ui5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vTW9kZWwuZ2V0UHJvcGVydHkodGhpcy5zUGF0aCl9O3JldHVybiBSfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLnhtbC5YTUxMaXN0QmluZGluZycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC54bWwuWE1MTGlzdEJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwveG1sL1hNTExpc3RCaW5kaW5nIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL21vZGVsL0NoYW5nZVJlYXNvbicsJ3NhcC91aS9tb2RlbC9DbGllbnRMaXN0QmluZGluZyddLGZ1bmN0aW9uKHEsQyxhKXsidXNlIHN0cmljdCI7dmFyIFg9YS5leHRlbmQoInNhcC51aS5tb2RlbC54bWwuWE1MTGlzdEJpbmRpbmciKTtYLnByb3RvdHlwZS5nZXRDb250ZXh0cz1mdW5jdGlvbihzLGwpe3RoaXMuaUxhc3RTdGFydEluZGV4PXM7dGhpcy5pTGFzdExlbmd0aD1sO2lmKCFzKXtzPTB9aWYoIWwpe2w9TWF0aC5taW4odGhpcy5pTGVuZ3RoLHRoaXMub01vZGVsLmlTaXplTGltaXQpfXZhciBjPXRoaXMuX2dldENvbnRleHRzKHMsbCksbz17fTtpZih0aGlzLmJVc2VFeHRlbmRlZENoYW5nZURldGVjdGlvbil7Zm9yKHZhciBpPTA7aTxjLmxlbmd0aDtpKyspe29bY1tpXS5nZXRQYXRoKCldPXRoaXMub01vZGVsLl9nZXRPYmplY3QoY1tpXS5nZXRQYXRoKCkpWzBdfWlmKHRoaXMuYUxhc3RDb250ZXh0cyYmczx0aGlzLmlMYXN0RW5kSW5kZXgpe3ZhciB0PXRoaXM7dmFyIGQ9cS5zYXAuYXJyYXlEaWZmKHRoaXMuYUxhc3RDb250ZXh0cyxjLGZ1bmN0aW9uKE8sbil7dmFyIGI9dC5vTGFzdENvbnRleHREYXRhJiZ0Lm9MYXN0Q29udGV4dERhdGFbTy5nZXRQYXRoKCldO3ZhciBOPW8mJm9bbi5nZXRQYXRoKCldO2lmKGImJk4pe3JldHVybiBxLnNhcC5pc0VxdWFsTm9kZShiLE4pfXJldHVybiBmYWxzZX0pO2MuZGlmZj1kfXRoaXMuaUxhc3RFbmRJbmRleD1zK2w7dGhpcy5hTGFzdENvbnRleHRzPWMuc2xpY2UoMCk7dGhpcy5vTGFzdENvbnRleHREYXRhPXt9O3ZhciB0PXRoaXM7cS5lYWNoKG8sZnVuY3Rpb24oayxuKXt0Lm9MYXN0Q29udGV4dERhdGFba109bi5jbG9uZU5vZGUodHJ1ZSl9KX1yZXR1cm4gY307WC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGw9dGhpcy5vTW9kZWwuX2dldE9iamVjdCh0aGlzLnNQYXRoLHRoaXMub0NvbnRleHQpO2lmKGwpe3RoaXMub0xpc3Q9W107dmFyIHQ9dGhpcztpZih0aGlzLmJVc2VFeHRlbmRlZENoYW5nZURldGVjdGlvbil7cS5lYWNoKGwsZnVuY3Rpb24oayxuKXt0Lm9MaXN0LnB1c2gobi5jbG9uZU5vZGUodHJ1ZSkpfSl9ZWxzZXt0aGlzLm9MaXN0PWwuc2xpY2UoMCl9dGhpcy51cGRhdGVJbmRpY2VzKCk7dGhpcy5hcHBseUZpbHRlcigpO3RoaXMuYXBwbHlTb3J0KCk7dGhpcy5pTGVuZ3RoPXRoaXMuX2dldExlbmd0aCgpfWVsc2V7dGhpcy5vTGlzdD1bXTt0aGlzLmFJbmRpY2VzPVtdO3RoaXMuaUxlbmd0aD0wfX07WC5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7aWYoIXRoaXMuYlVzZUV4dGVuZGVkQ2hhbmdlRGV0ZWN0aW9uKXt2YXIgbD10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYoIXRoaXMub0xpc3R8fCFsfHxsLmxlbmd0aCE9dGhpcy5vTGlzdC5sZW5ndGh8fGYpe3RoaXMudXBkYXRlKCk7dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOkMuQ2hhbmdlfSl9fWVsc2V7dmFyIGM9ZmFsc2U7dmFyIHQ9dGhpczt2YXIgbD10aGlzLm9Nb2RlbC5fZ2V0T2JqZWN0KHRoaXMuc1BhdGgsdGhpcy5vQ29udGV4dCk7aWYoIXEuc2FwLmVxdWFsKHRoaXMub0xpc3QsbCkpe3RoaXMudXBkYXRlKCl9dmFyIGI9dGhpcy5fZ2V0Q29udGV4dHModGhpcy5pTGFzdFN0YXJ0SW5kZXgsdGhpcy5pTGFzdExlbmd0aCk7aWYodGhpcy5hTGFzdENvbnRleHRzKXtpZih0aGlzLmFMYXN0Q29udGV4dHMubGVuZ3RoIT1iLmxlbmd0aCl7Yz10cnVlfWVsc2V7cS5lYWNoKHRoaXMuYUxhc3RDb250ZXh0cyxmdW5jdGlvbihpLG8pe3ZhciBuPWJbaV0uZ2V0T2JqZWN0KCk7dmFyIE89dC5vTGFzdENvbnRleHREYXRhJiZ0Lm9MYXN0Q29udGV4dERhdGFbby5nZXRQYXRoKCldO2lmKG4mJk8mJiFPLmlzRXF1YWxOb2RlKG4pKXtjPXRydWU7cmV0dXJuIGZhbHNlfX0pfX1lbHNle2M9dHJ1ZX1pZihjfHxmKXt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246Qy5DaGFuZ2V9KX19fTtyZXR1cm4gWH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC54bWwuWE1MVHJlZUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwueG1sLlhNTFRyZWVCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3htbC9YTUxUcmVlQmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9DbGllbnRUcmVlQmluZGluZyddLGZ1bmN0aW9uKHEsQyl7InVzZSBzdHJpY3QiO3ZhciBYPUMuZXh0ZW5kKCJzYXAudWkubW9kZWwueG1sLlhNTFRyZWVCaW5kaW5nIik7WC5wcm90b3R5cGUuZ2V0Tm9kZUNvbnRleHRzPWZ1bmN0aW9uKGMpe3ZhciBzPWMuZ2V0UGF0aCgpO2lmKCFxLnNhcC5lbmRzV2l0aChzLCIvIikpe3M9cysiLyJ9aWYoIXEuc2FwLnN0YXJ0c1dpdGgocywiLyIpKXtzPSIvIitzfXZhciBhPVtdLG49e30sdD10aGlzLE49dGhpcy5vTW9kZWwuX2dldE9iamVjdChjLmdldFBhdGgoKSksbyxiLGQ7cS5lYWNoKE5bMF0uY2hpbGROb2RlcyxmdW5jdGlvbihlLG8pe2lmKG8ubm9kZVR5cGU9PTEpe2lmKG5bby5ub2RlTmFtZV09PXVuZGVmaW5lZCl7bltvLm5vZGVOYW1lXT0wfWVsc2V7bltvLm5vZGVOYW1lXSsrfWI9cytvLm5vZGVOYW1lKyIvIituW28ubm9kZU5hbWVdO2Q9dC5vTW9kZWwuZ2V0Q29udGV4dChiKTtpZih0LmFGaWx0ZXJzJiYhdC5iSXNGaWx0ZXJpbmcpe2lmKHEuaW5BcnJheShkLHQuZmlsdGVySW5mby5hRmlsdGVyZWRDb250ZXh0cykhPS0xKXthLnB1c2goZCl9fWVsc2V7YS5wdXNoKGQpfX19KTtyZXR1cm4gYX07cmV0dXJuIFh9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS51dGlsLnNlcmlhbGl6ZXIuVmlld1NlcmlhbGl6ZXInKSl7DQovKgogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnV0aWwuc2VyaWFsaXplci5WaWV3U2VyaWFsaXplcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3V0aWwvc2VyaWFsaXplci9WaWV3U2VyaWFsaXplciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCcuL0hUTUxWaWV3U2VyaWFsaXplcicsJy4vU2VyaWFsaXplcicsJy4vWE1MVmlld1NlcmlhbGl6ZXInXSxmdW5jdGlvbihxLEUsSCxTLFgpeyJ1c2Ugc3RyaWN0Ijt2YXIgVj1FLmV4dGVuZCgic2FwLnVpLmNvcmUudXRpbC5zZXJpYWxpemVyLlZpZXdTZXJpYWxpemVyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24ocix3LGQpe0UuYXBwbHkodGhpcyk7dGhpcy5fb1Jvb3RDb250cm9sPXI7dGhpcy5fb1dpbmRvdz13fHx3aW5kb3c7dGhpcy5fbVZpZXdzPXt9O3RoaXMuX3NEZWZhdWx0WG1sTmFtZXNwYWNlPWR9fSk7Vi5wcm90b3R5cGUuc2VyaWFsaXplVG9YTUw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXJpYWxpemUoIlhNTCIpfTtWLnByb3RvdHlwZS5zZXJpYWxpemVUb0hUTUw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXJpYWxpemUoIkhUTUwiKX07Vi5wcm90b3R5cGUuc2VyaWFsaXplPWZ1bmN0aW9uKGMpe3RoaXMuX21WaWV3cz17fTt0aGlzLl9zQ29udmVydFRvVmlld1R5cGU9Y3x8dW5kZWZpbmVkO3JldHVybiB0aGlzLl9zZXJpYWxpemVSZWN1cnNpdmUodGhpcy5fb1Jvb3RDb250cm9sKX07Vi5wcm90b3R5cGUuX2dldFZpZXdUeXBlPWZ1bmN0aW9uKHYpe2lmKCF0aGlzLl9zQ29udmVydFRvVmlld1R5cGUpe2lmKHYgaW5zdGFuY2VvZiB0aGlzLl9vV2luZG93LnNhcC51aS5jb3JlLm12Yy5IVE1MVmlldyl7cmV0dXJuIkhUTUwifWVsc2UgaWYodiBpbnN0YW5jZW9mIHRoaXMuX29XaW5kb3cuc2FwLnVpLmNvcmUubXZjLlhNTFZpZXcpe3JldHVybiJYTUwifX1yZXR1cm4gdGhpcy5fc0NvbnZlcnRUb1ZpZXdUeXBlfTtWLnByb3RvdHlwZS5fc2VyaWFsaXplUmVjdXJzaXZlPWZ1bmN0aW9uKGMpe2lmKGMgaW5zdGFuY2VvZiB0aGlzLl9vV2luZG93LnNhcC51aS5jb3JlLm12Yy5WaWV3KXt2YXIgdj10aGlzLl9nZXRWaWV3U2VyaWFsaXplcihjLHRoaXMuX2dldFZpZXdUeXBlKGMpKTtpZih2KXt2YXIgbz1jLmdldFZpZXdOYW1lKCl8fGMuZ2V0Q29udHJvbGxlck5hbWUoKTtpZighdGhpcy5fbVZpZXdzW29dKXt0aGlzLl9tVmlld3Nbb109di5zZXJpYWxpemUodGhpcy5fZ2V0Vmlld1R5cGUoYykpfX19aWYoYy5nZXRNZXRhZGF0YSgpLmdldENsYXNzKCk9PT10aGlzLl9vV2luZG93LnNhcC51aS5jb3JlLlVJQXJlYSl7dmFyIEM9Yy5nZXRDb250ZW50KCk7Zm9yKHZhciBpPTA7aTxDLmxlbmd0aDtpKyspe3RoaXMuX3NlcmlhbGl6ZVJlY3Vyc2l2ZShDW2ldKX19ZWxzZSBpZihjLmdldE1ldGFkYXRhKCkuZ2V0Q2xhc3MoKT09PXRoaXMuX29XaW5kb3cuc2FwLnVpLmNvcmUuQ29tcG9uZW50Q29udGFpbmVyKXt0aGlzLl9zZXJpYWxpemVSZWN1cnNpdmUoYy5nZXRDb21wb25lbnRJbnN0YW5jZSgpLmdldEFnZ3JlZ2F0aW9uKCJyb290Q29udHJvbCIpKX1lbHNle3ZhciBhPWMuZ2V0TWV0YWRhdGEoKS5nZXRBbGxBZ2dyZWdhdGlvbnMoKTtpZihhKXtmb3IodmFyIG4gaW4gYSl7dmFyIEE9YVtuXTt2YXIgYj1jW0EuX3NHZXR0ZXJdKCk7aWYoYiYmYi5sZW5ndGgpe2Zvcih2YXIgaT0wO2k8Yi5sZW5ndGg7aSsrKXt2YXIgTz1iW2ldO2lmKE8gaW5zdGFuY2VvZiB0aGlzLl9vV2luZG93LnNhcC51aS5jb3JlLkVsZW1lbnQpe3RoaXMuX3NlcmlhbGl6ZVJlY3Vyc2l2ZShPKX19fWVsc2UgaWYoYiBpbnN0YW5jZW9mIHRoaXMuX29XaW5kb3cuc2FwLnVpLmNvcmUuRWxlbWVudCl7dGhpcy5fc2VyaWFsaXplUmVjdXJzaXZlKGIpfX19fXJldHVybiB0aGlzLl9tVmlld3N9O1YucHJvdG90eXBlLl9nZXRWaWV3U2VyaWFsaXplcj1mdW5jdGlvbih2LHQpe3ZhciBnPWZ1bmN0aW9uKGUpe2lmKGUuZkZ1bmN0aW9uJiZlLmZGdW5jdGlvbi5fc2FwdWlfaGFuZGxlck5hbWUpe3ZhciBoPWUuZkZ1bmN0aW9uLl9zYXB1aV9oYW5kbGVyTmFtZTt2YXIgYz12LmdldENvbnRyb2xsZXIoKTtpZihjW2hdKXtyZXR1cm4gaH19fTt2YXIgRz1mdW5jdGlvbihjKXtpZihjLl9zYXB1aV9jb250cm9sSWQpe3JldHVybiBjLl9zYXB1aV9jb250cm9sSWR9cmV0dXJuIGMuZ2V0SWQoKS5yZXBsYWNlKHYuY3JlYXRlSWQoIiIpLCIiKX07aWYodD09PSJIVE1MIil7cmV0dXJuIG5ldyBIKHYsdGhpcy5fb1dpbmRvdyxHLGcpfWVsc2UgaWYodD09PSJYTUwiKXtyZXR1cm4gbmV3IFgodix0aGlzLl9vV2luZG93LHRoaXMuX3NEZWZhdWx0WG1sTmFtZXNwYWNlLEcsZyl9ZWxzZXt2YXIgdD0odik/di5jb25zdHJ1Y3RvcjoiPyI7dGhyb3cgRXJyb3IoIlZpZXcgdHlwZSAnIit0KyInIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIGNvbnZlcnNpb24uIE9ubHkgSFRNTCBhbmQgWE1MIGlzIHN1cHBvcnRlZCIpfX07cmV0dXJuIFZ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuQ2xpZW50UHJvcGVydHlCaW5kaW5nJykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLkNsaWVudFByb3BlcnR5QmluZGluZycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9DbGllbnRQcm9wZXJ0eUJpbmRpbmciLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL1Byb3BlcnR5QmluZGluZyddLGZ1bmN0aW9uKHEsUCl7InVzZSBzdHJpY3QiO3ZhciBDPVAuZXh0ZW5kKCJzYXAudWkubW9kZWwuQ2xpZW50UHJvcGVydHlCaW5kaW5nIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24obSxwLGMsYSl7UC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5vVmFsdWU9dGhpcy5fZ2V0VmFsdWUoKX19KTtDLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9WYWx1ZX07Qy5wcm90b3R5cGUuX2dldFZhbHVlPWZ1bmN0aW9uKCl7dmFyIHA9dGhpcy5zUGF0aC5zdWJzdHIodGhpcy5zUGF0aC5sYXN0SW5kZXhPZigiLyIpKzEpO2lmKHA9PSJfX25hbWVfXyIpe3ZhciBhPXRoaXMub0NvbnRleHQuc3BsaXQoIi8iKTtyZXR1cm4gYVthLmxlbmd0aC0xXX1yZXR1cm4gdGhpcy5vTW9kZWwuZ2V0UHJvcGVydHkodGhpcy5zUGF0aCx0aGlzLm9Db250ZXh0KX07Qy5wcm90b3R5cGUuc2V0Q29udGV4dD1mdW5jdGlvbihjKXtpZih0aGlzLm9Db250ZXh0IT1jKXt0aGlzLm9Db250ZXh0PWM7aWYodGhpcy5pc1JlbGF0aXZlKCkpe3RoaXMuY2hlY2tVcGRhdGUoKX19fTtyZXR1cm4gQ30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5Db21wb3NpdGVCaW5kaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLkNvbXBvc2l0ZUJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvQ29tcG9zaXRlQmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vUHJvcGVydHlCaW5kaW5nJywnLi9TaW1wbGVUeXBlJ10sZnVuY3Rpb24ocSxQLFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgQz1QLmV4dGVuZCgic2FwLnVpLm1vZGVsLkNvbXBvc2l0ZUJpbmRpbmciLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihiLHIpe1AuYXBwbHkodGhpcyxbbnVsbCwiIl0pO3ZhciB0PXRoaXM7dGhpcy5hQmluZGluZ3M9Yjt0aGlzLmJSYXdWYWx1ZXM9cn0sbWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJnZXRCaW5kaW5ncyIsImF0dGFjaENoYW5nZSIsImRldGFjaENoYW5nZSJdfX0pO0MucHJvdG90eXBlLmdldFBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH07Qy5wcm90b3R5cGUuZ2V0TW9kZWw9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH07Qy5wcm90b3R5cGUuZ2V0Q29udGV4dD1mdW5jdGlvbigpe3JldHVybiBudWxsfTtDLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9O0MucHJvdG90eXBlLnNldENvbnRleHQ9ZnVuY3Rpb24oYyl7cS5lYWNoKHRoaXMuYUJpbmRpbmdzLGZ1bmN0aW9uKGksYil7aWYoIWN8fGIudXBkYXRlUmVxdWlyZWQoYy5nZXRNb2RlbCgpKSl7Yi5zZXRDb250ZXh0KGMpfX0pfTtDLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih2KXt0aHJvdyBuZXcgc2FwLnVpLmJhc2UuRXhjZXB0aW9uKCJDb21wb3NpdGUgQmluZGluZyBkb2VzIG5vdCBzdXBwb3J0IHNldFZhbHVlIGJlY2F1c2UgaXQgY29udGFpbnMgbXVsdGlwbGUgcHJvcGVydHkgYmluZGluZ3MhIil9O0MucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKCl7dmFyIHY9W10sVjtxLmVhY2godGhpcy5hQmluZGluZ3MsZnVuY3Rpb24oaSxiKXtWPWIuZ2V0VmFsdWUoKTt2LnB1c2goVil9KTtyZXR1cm4gdn07Qy5wcm90b3R5cGUuZ2V0RXh0ZXJuYWxWYWx1ZT1mdW5jdGlvbigpe3ZhciB2PVtdLFY7aWYodGhpcy5iUmF3VmFsdWVzKXt2PXRoaXMuZ2V0VmFsdWUoKX1lbHNle3EuZWFjaCh0aGlzLmFCaW5kaW5ncyxmdW5jdGlvbihpLGIpe1Y9Yi5nZXRFeHRlcm5hbFZhbHVlKCk7di5wdXNoKFYpfSl9aWYodGhpcy5mbkZvcm1hdHRlcil7Vj10aGlzLmZuRm9ybWF0dGVyLmFwcGx5KHRoaXMsdil9ZWxzZXtpZih2Lmxlbmd0aD4xKXtWPXYuam9pbigiICIpfWVsc2V7Vj12WzBdfX1yZXR1cm4gVn07Qy5wcm90b3R5cGUuc2V0RXh0ZXJuYWxWYWx1ZT1mdW5jdGlvbih2KXt0aHJvdyBuZXcgc2FwLnVpLmJhc2UuRXhjZXB0aW9uKCJDb21wb3NpdGUgQmluZGluZyBkb2VzIG5vdCBzdXBwb3J0IHNldEV4dGVybmFsVmFsdWUgYmVjYXVzZSBpdCBjb250YWlucyBtdWx0aXBsZSBwcm9wZXJ0eSBiaW5kaW5ncyEiKX07Qy5wcm90b3R5cGUuZ2V0QmluZGluZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hQmluZGluZ3N9O0MucHJvdG90eXBlLmF0dGFjaENoYW5nZT1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoImNoYW5nZSIsZixsKTtpZih0aGlzLmFCaW5kaW5ncyl7dmFyIHQ9dGhpcztxLmVhY2godGhpcy5hQmluZGluZ3MsZnVuY3Rpb24oaSxiKXtiLmF0dGFjaENoYW5nZSh0LmNoZWNrVXBkYXRlLHQpfSl9fTtDLnByb3RvdHlwZS5kZXRhY2hDaGFuZ2U9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJjaGFuZ2UiLGYsbCk7aWYodGhpcy5hQmluZGluZ3Mpe3ZhciB0PXRoaXM7cS5lYWNoKHRoaXMuYUJpbmRpbmdzLGZ1bmN0aW9uKGksYil7Yi5kZXRhY2hDaGFuZ2UodC5jaGVja1VwZGF0ZSx0KX0pfX07Qy5wcm90b3R5cGUudXBkYXRlUmVxdWlyZWQ9ZnVuY3Rpb24obSl7dmFyIHU9ZmFsc2U7cS5lYWNoKHRoaXMuYUJpbmRpbmdzLGZ1bmN0aW9uKGksYil7dT11fHxiLnVwZGF0ZVJlcXVpcmVkKG0pfSk7cmV0dXJuIHV9O0MucHJvdG90eXBlLmNoZWNrVXBkYXRlPWZ1bmN0aW9uKGYpe3ZhciB2PXRoaXMuZ2V0RXh0ZXJuYWxWYWx1ZSgpO2lmKCFxLnNhcC5lcXVhbCh2LHRoaXMub1ZhbHVlKXx8Zil7dGhpcy5vVmFsdWU9djt0aGlzLl9maXJlQ2hhbmdlKHtyZWFzb246c2FwLnVpLm1vZGVsLkNoYW5nZVJlYXNvbi5DaGFuZ2V9KX19O3JldHVybiBDfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLmNvbnRyb2wuQ29udHJvbE1vZGVsJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLmNvbnRyb2wuQ29udHJvbE1vZGVsJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL2NvbnRyb2wvQ29udHJvbE1vZGVsIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL21vZGVsL01vZGVsJywnLi9Db250cm9sUHJvcGVydHlCaW5kaW5nJ10sZnVuY3Rpb24ocSxNLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1NLmV4dGVuZCgic2FwLnVpLm1vZGVsLmNvbnRyb2wuQ29udHJvbE1vZGVsIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oYyl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5vQ29udHJvbD1jO3RoaXMub0NvbnRyb2wuYXR0YWNoRXZlbnQoIl9jaGFuZ2UiLHRoaXMuY2hlY2tVcGRhdGUsdGhpcyk7dGhpcy5vRWxlbWVudHM9W119fSk7YS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMub0NvbnRyb2wuZGV0YWNoRXZlbnQoIl9jaGFuZ2UiLHRoaXMuY2hlY2tVcGRhdGUsdGhpcyl9O2EucHJvdG90eXBlLmFkZEZhY2FkZUNvbXBvbmVudD1mdW5jdGlvbihlKXt2YXIgaT1xLmluQXJyYXkoZSx0aGlzLm9FbGVtZW50cyk7aWYoaTwwKXt0aGlzLm9FbGVtZW50cy5wdXNoKGUpO2UuYXR0YWNoRXZlbnQoIl9jaGFuZ2UiLHRoaXMuY2hlY2tVcGRhdGUsdGhpcyl9fTthLnByb3RvdHlwZS5yZW1vdmVGYWNhZGVDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dmFyIGk9cS5pbkFycmF5KGUsdGhpcy5vRWxlbWVudHMpO2lmKGk+PTApe3RoaXMub0VsZW1lbnRzLnNwbGljZShpLDEpO2UuZGV0YWNoRXZlbnQoIl9jaGFuZ2UiLHRoaXMuY2hlY2tVcGRhdGUsdGhpcyl9fTthLnByb3RvdHlwZS5iaW5kUHJvcGVydHk9ZnVuY3Rpb24ocCxjKXtjPWN8fHRoaXMub0NvbnRyb2w7aWYoYyE9PXRoaXMub0NvbnRyb2wpe3RoaXMuYWRkRmFjYWRlQ29tcG9uZW50KGMpfXJldHVybiBuZXcgQyh0aGlzLHAsYyl9O2EucHJvdG90eXBlLmNoZWNrVXBkYXRlPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX29uY2hhbmdlKXt0aGlzLl9vbmNoYW5nZShlKX1pZih0aGlzLmFCaW5kaW5ncy5sZW5ndGgpe3ZhciBiPXRoaXMuYUJpbmRpbmdzLnNsaWNlKDApO3EuZWFjaChiLGZ1bmN0aW9uKGksQil7Qi5jaGVja1VwZGF0ZSgpfSl9fTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5qc29uLkpTT05Qcm9wZXJ0eUJpbmRpbmcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuanNvbi5KU09OUHJvcGVydHlCaW5kaW5nJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL2pzb24vSlNPTlByb3BlcnR5QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9DbGllbnRQcm9wZXJ0eUJpbmRpbmcnXSxmdW5jdGlvbihxLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgSj1DLmV4dGVuZCgic2FwLnVpLm1vZGVsLmpzb24uSlNPTlByb3BlcnR5QmluZGluZyIpO0oucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKHYpe2lmKCFxLnNhcC5lcXVhbCh0aGlzLm9WYWx1ZSx2KSl7dGhpcy5vTW9kZWwuc2V0UHJvcGVydHkodGhpcy5zUGF0aCx2LHRoaXMub0NvbnRleHQpfX07Si5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7dmFyIHY9dGhpcy5fZ2V0VmFsdWUoKTtpZighcS5zYXAuZXF1YWwodix0aGlzLm9WYWx1ZSl8fGYpe3RoaXMub1ZhbHVlPXY7dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOnNhcC51aS5tb2RlbC5DaGFuZ2VSZWFzb24uQ2hhbmdlfSl9fTtyZXR1cm4gSn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5vZGF0YS5PRGF0YU1vZGVsJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhTW9kZWwnKTtqUXVlcnkuc2FwLnJlcXVpcmUoJ3NhcC51aS50aGlyZHBhcnR5LmRhdGFqcycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9vZGF0YS9PRGF0YU1vZGVsIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL21vZGVsL01vZGVsJywnLi9Db3VudE1vZGUnLCcuL09EYXRhQ29udGV4dEJpbmRpbmcnLCcuL09EYXRhTGlzdEJpbmRpbmcnLCcuL09EYXRhTWV0YWRhdGEnLCcuL09EYXRhUHJvcGVydHlCaW5kaW5nJywnLi9PRGF0YVRyZWVCaW5kaW5nJywnc2FwL3VpL3RoaXJkcGFydHkvVVJJJywnc2FwL3VpL3RoaXJkcGFydHkvZGF0YWpzJ10sZnVuY3Rpb24ocSxNLEMsTyxhLGIsYyxkLFUsZSl7InVzZSBzdHJpY3QiO3ZhciBmPU0uZXh0ZW5kKCJzYXAudWkubW9kZWwub2RhdGEuT0RhdGFNb2RlbCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKHMsaix1LHAsaCx0LHcsbCl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIGcscixtLEE9bnVsbCxMLGksRDtpZih0eXBlb2Ygaj09PSJvYmplY3QiKXt1PWoudXNlcjtwPWoucGFzc3dvcmQ7aD1qLmhlYWRlcnM7dD1qLnRva2VuSGFuZGxpbmc7bD1qLmxvYWRNZXRhZGF0YUFzeW5jO3c9ai53aXRoQ3JlZGVudGlhbHM7bT1qLm1heERhdGFTZXJ2aWNlVmVyc2lvbjtnPWoudXNlQmF0Y2g7cj1qLnJlZnJlc2hBZnRlckNoYW5nZTtBPWouYW5ub3RhdGlvblVSSTtMPWoubG9hZEFubm90YXRpb25zSm9pbmVkO0Q9ai5kZWZhdWx0Q291bnRNb2RlO2o9ai5qc29ufXRoaXMuc0RlZmF1bHRCaW5kaW5nTW9kZT1zYXAudWkubW9kZWwuQmluZGluZ01vZGUuT25lV2F5O3RoaXMubVN1cHBvcnRlZEJpbmRpbmdNb2Rlcz17Ik9uZVdheSI6dHJ1ZSwiT25lVGltZSI6dHJ1ZSwiVHdvV2F5Ijp0cnVlfTt0aGlzLmJDb3VudFN1cHBvcnRlZD10cnVlO3RoaXMuYkpTT049ajt0aGlzLmJDYWNoZT10cnVlO3RoaXMuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlcz1bXTt0aGlzLm9SZXF1ZXN0UXVldWU9e307dGhpcy5hQmF0Y2hPcGVyYXRpb25zPVtdO3RoaXMub0hhbmRsZXI7dGhpcy5iVG9rZW5IYW5kbGluZz10IT09ZmFsc2U7dGhpcy5iV2l0aENyZWRlbnRpYWxzPXc9PT10cnVlO3RoaXMuYlVzZUJhdGNoPWc9PT10cnVlO3RoaXMuYlJlZnJlc2hBZnRlckNoYW5nZT1yIT09ZmFsc2U7dGhpcy5zTWF4RGF0YVNlcnZpY2VWZXJzaW9uPW07dGhpcy5iTG9hZE1ldGFkYXRhQXN5bmM9ISFsO3RoaXMuYkxvYWRBbm5vdGF0aW9uc0pvaW5lZD1MPT09dW5kZWZpbmVkP3RydWU6TDt0aGlzLnNBbm5vdGF0aW9uVVJJPUE7dGhpcy5zRGVmYXVsdENvdW50TW9kZT1EfHxDLkJvdGg7aWYodGhpcy5zQW5ub3RhdGlvblVSSSl7cS5zYXAucmVxdWlyZSgic2FwLnVpLm1vZGVsLm9kYXRhLk9EYXRhQW5ub3RhdGlvbnMiKX10aGlzLm9IZWFkZXJzPXt9O3RoaXMuc2V0SGVhZGVycyhoKTt0aGlzLm9EYXRhPXt9O3RoaXMub01ldGFkYXRhPW51bGw7dGhpcy5vQW5ub3RhdGlvbnM9bnVsbDtpZihzLmluZGV4T2YoIj8iKT09LTEpe3RoaXMuc1NlcnZpY2VVcmw9c31lbHNle3ZhciBrPXMuc3BsaXQoIj8iKTt0aGlzLnNTZXJ2aWNlVXJsPWtbMF07dGhpcy5zVXJsUGFyYW1zPWtbMV19aWYoc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0U3RhdGlzdGljcygpKXtpZih0aGlzLnNVcmxQYXJhbXMpe3RoaXMuc1VybFBhcmFtcz10aGlzLnNVcmxQYXJhbXMrIiZzYXAtc3RhdGlzdGljcz10cnVlIn1lbHNle3RoaXMuc1VybFBhcmFtcz0ic2FwLXN0YXRpc3RpY3M9dHJ1ZSJ9fXRoaXMuc1NlcnZpY2VVcmw9dGhpcy5zU2VydmljZVVybC5yZXBsYWNlKC9cLyQvLCIiKTt0aGlzLm9TZXJ2aWNlRGF0YT1mLm1TZXJ2aWNlRGF0YVt0aGlzLnNTZXJ2aWNlVXJsXTtpZighdGhpcy5vU2VydmljZURhdGEpe2YubVNlcnZpY2VEYXRhW3RoaXMuc1NlcnZpY2VVcmxdPXt9O3RoaXMub1NlcnZpY2VEYXRhPWYubVNlcnZpY2VEYXRhW3RoaXMuc1NlcnZpY2VVcmxdfWlmKHRoaXMuYlRva2VuSGFuZGxpbmcmJnRoaXMub1NlcnZpY2VEYXRhLnNlY3VyaXR5VG9rZW4pe3RoaXMub0hlYWRlcnNbIngtY3NyZi10b2tlbiJdPXRoaXMub1NlcnZpY2VEYXRhLnNlY3VyaXR5VG9rZW59dGhpcy5zVXNlcj11O3RoaXMuc1Bhc3N3b3JkPXA7dGhpcy5vSGVhZGVyc1siQWNjZXB0LUxhbmd1YWdlIl09c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0TGFuZ3VhZ2UoKTtpZih0aGlzLnNBbm5vdGF0aW9uVVJJJiYhdGhpcy5iTG9hZE1ldGFkYXRhQXN5bmMpe3RoaXMub01ldGFkYXRhPW5ldyBiKHRoaXMsZmFsc2UpO3RoaXMub0Fubm90YXRpb25zPW5ldyBzYXAudWkubW9kZWwub2RhdGEuT0RhdGFBbm5vdGF0aW9ucyh0aGlzLHRoaXMuc0Fubm90YXRpb25VUkksZmFsc2UpfWVsc2UgaWYodGhpcy5zQW5ub3RhdGlvblVSSSl7dGhpcy5vQW5ub3RhdGlvbnM9bmV3IHNhcC51aS5tb2RlbC5vZGF0YS5PRGF0YUFubm90YXRpb25zKHRoaXMsdGhpcy5zQW5ub3RhdGlvblVSSSx0cnVlKTt0aGlzLm9NZXRhZGF0YT1uZXcgYih0aGlzLHRydWUpfWVsc2V7dGhpcy5vTWV0YWRhdGE9bmV3IGIodGhpcyx0aGlzLmJMb2FkTWV0YWRhdGFBc3luYyl9aWYodGhpcy5iSlNPTil7aWYodGhpcy5zTWF4RGF0YVNlcnZpY2VWZXJzaW9uPT09IjMuMCIpe3RoaXMub0hlYWRlcnNbIkFjY2VwdCJdPSJhcHBsaWNhdGlvbi9qc29uO29kYXRhPWZ1bGxtZXRhZGF0YSJ9ZWxzZXt0aGlzLm9IZWFkZXJzWyJBY2NlcHQiXT0iYXBwbGljYXRpb24vanNvbiJ9dGhpcy5vSGFuZGxlcj1PRGF0YS5qc29uSGFuZGxlcn1lbHNle3RoaXMub0hlYWRlcnNbIkFjY2VwdCJdPSJhcHBsaWNhdGlvbi9hdG9tK3htbCxhcHBsaWNhdGlvbi9hdG9tc3ZjK3htbCxhcHBsaWNhdGlvbi94bWwiO3RoaXMub0hhbmRsZXI9T0RhdGEuYXRvbUhhbmRsZXJ9dGhpcy5vSGVhZGVyc1siTWF4RGF0YVNlcnZpY2VWZXJzaW9uIl09IjIuMCI7aWYodGhpcy5zTWF4RGF0YVNlcnZpY2VWZXJzaW9uKXt0aGlzLm9IZWFkZXJzWyJNYXhEYXRhU2VydmljZVZlcnNpb24iXT10aGlzLnNNYXhEYXRhU2VydmljZVZlcnNpb259dGhpcy5vSGVhZGVyc1siRGF0YVNlcnZpY2VWZXJzaW9uIl09IjIuMCJ9LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsiY3JlYXRlIiwicmVtb3ZlIiwidXBkYXRlIiwic3VibWl0Q2hhbmdlcyIsImdldFNlcnZpY2VNZXRhZGF0YSIsInJlYWQiLCJoYXNQZW5kaW5nQ2hhbmdlcyIsInJlZnJlc2giLCJyZXNldENoYW5nZXMiLCJpc0NvdW50U3VwcG9ydGVkIiwic2V0Q291bnRTdXBwb3J0ZWQiLCJzZXREZWZhdWx0Q291bnRNb2RlIiwiZ2V0RGVmYXVsdENvdW50TW9kZSIsImZvcmNlTm9DYWNoZSIsInNldFByb3BlcnR5IiwicmVmcmVzaFNlY3VyaXR5VG9rZW4iLCJzZXRIZWFkZXJzIiwiZ2V0SGVhZGVycyIsImZvcm1hdFZhbHVlLCBzZXRVc2VCYXRjaCJdfX0pO2YuTV9FVkVOVFM9e1JlamVjdENoYW5nZToicmVqZWN0Q2hhbmdlIixNZXRhZGF0YUxvYWRlZDoibWV0YWRhdGFMb2FkZWQiLE1ldGFkYXRhRmFpbGVkOiJtZXRhZGF0YUZhaWxlZCJ9O2YubVNlcnZpY2VEYXRhPXt9O2YucHJvdG90eXBlLmZpcmVSZWplY3RDaGFuZ2U9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoInJlamVjdENoYW5nZSIsQSk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmF0dGFjaFJlamVjdENoYW5nZT1mdW5jdGlvbihELEYsbCl7dGhpcy5hdHRhY2hFdmVudCgicmVqZWN0Q2hhbmdlIixELEYsbCk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmRldGFjaFJlamVjdENoYW5nZT1mdW5jdGlvbihGLGwpe3RoaXMuZGV0YWNoRXZlbnQoInJlamVjdENoYW5nZSIsRixsKTtyZXR1cm4gdGhpc307Zi5wcm90b3R5cGUuX3NldE1ldGFkYXRhPWZ1bmN0aW9uKG0pe3RoaXMub01ldGFkYXRhPW07dGhpcy5maXJlSW50ZXJuYWxNZXRhZGF0YUxvYWRlZCgpfTtmLnByb3RvdHlwZS5hdHRhY2hJbnRlcm5hbE1ldGFkYXRhTG9hZGVkPWZ1bmN0aW9uKEQsRixsKXt0aGlzLmF0dGFjaEV2ZW50KCJpbnRlcm5hbE1ldGFkYXRhTG9hZGVkIixELEYsbCk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmZpcmVJbnRlcm5hbE1ldGFkYXRhTG9hZGVkPWZ1bmN0aW9uKEEpe3RoaXMuZmlyZUV2ZW50KCJpbnRlcm5hbE1ldGFkYXRhTG9hZGVkIixBKTtpZih0aGlzLmJMb2FkTWV0YWRhdGFBc3luYyYmdGhpcy5zQW5ub3RhdGlvblVSSSYmdGhpcy5iTG9hZEFubm90YXRpb25zSm9pbmVkKXt2YXIgdD10aGlzO2lmKHRoaXMub0Fubm90YXRpb25zJiZ0aGlzLm9Bbm5vdGF0aW9ucy5iSW5pdGlhbGl6ZWQpe3RoaXMuZmlyZU1ldGFkYXRhTG9hZGVkKEEpfWVsc2V7dGhpcy5hdHRhY2hBbm5vdGF0aW9uc0xvYWRlZChmdW5jdGlvbigpe3RoaXMuZmlyZU1ldGFkYXRhTG9hZGVkKEEpfSl9fWVsc2V7dGhpcy5maXJlTWV0YWRhdGFMb2FkZWQoQSl9cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmZpcmVBbm5vdGF0aW9uc0xvYWRlZD1mdW5jdGlvbihBKXt0aGlzLmZpcmVFdmVudCgiYW5ub3RhdGlvbnNMb2FkZWQiLEEpO3JldHVybiB0aGlzfTtmLnByb3RvdHlwZS5hdHRhY2hBbm5vdGF0aW9uc0xvYWRlZD1mdW5jdGlvbihELEYsbCl7dGhpcy5hdHRhY2hFdmVudCgiYW5ub3RhdGlvbnNMb2FkZWQiLEQsRixsKTtyZXR1cm4gdGhpc307Zi5wcm90b3R5cGUuZGV0YWNoQW5ub3RhdGlvbnNMb2FkZWQ9ZnVuY3Rpb24oRixsKXt0aGlzLmRldGFjaEV2ZW50KCJhbm5vdGF0aW9uc0xvYWRlZCIsRixsKTtyZXR1cm4gdGhpc307Zi5wcm90b3R5cGUuZmlyZU1ldGFkYXRhTG9hZGVkPWZ1bmN0aW9uKEEpe3RoaXMuZmlyZUV2ZW50KCJtZXRhZGF0YUxvYWRlZCIsQSk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmF0dGFjaE1ldGFkYXRhTG9hZGVkPWZ1bmN0aW9uKEQsRixsKXt0aGlzLmF0dGFjaEV2ZW50KCJtZXRhZGF0YUxvYWRlZCIsRCxGLGwpO3JldHVybiB0aGlzfTtmLnByb3RvdHlwZS5kZXRhY2hNZXRhZGF0YUxvYWRlZD1mdW5jdGlvbihGLGwpe3RoaXMuZGV0YWNoRXZlbnQoIm1ldGFkYXRhTG9hZGVkIixGLGwpO3JldHVybiB0aGlzfTtmLnByb3RvdHlwZS5maXJlTWV0YWRhdGFGYWlsZWQ9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoIm1ldGFkYXRhRmFpbGVkIixBKTtyZXR1cm4gdGhpc307Zi5wcm90b3R5cGUuYXR0YWNoTWV0YWRhdGFGYWlsZWQ9ZnVuY3Rpb24oRCxGLGwpe3RoaXMuYXR0YWNoRXZlbnQoIm1ldGFkYXRhRmFpbGVkIixELEYsbCk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLmRldGFjaE1ldGFkYXRhRmFpbGVkPWZ1bmN0aW9uKEYsbCl7dGhpcy5kZXRhY2hFdmVudCgibWV0YWRhdGFGYWlsZWQiLEYsbCk7cmV0dXJuIHRoaXN9O2YucHJvdG90eXBlLl9jcmVhdGVSZXF1ZXN0VXJsPWZ1bmN0aW9uKHAsbyx1LEIsZyl7dmFyIGg9W10scixzLGk9IiI7aWYocC5pbmRleE9mKCc/JykhPS0xKXtzPXAuc3Vic3RyKHAuaW5kZXhPZignPycpKzEpO3A9cC5zdWJzdHIoMCxwLmluZGV4T2YoJz8nKSl9cj10aGlzLl9ub3JtYWxpemVQYXRoKHAsbyk7aWYoIUIpe2k9dGhpcy5zU2VydmljZVVybCtyfWVsc2V7aT1yLnN1YnN0cihyLmluZGV4T2YoJy8nKSsxKX1pZihxLnR5cGUodSk9PT0ic3RyaW5nIil7aC5wdXNoKHUpfWVsc2UgaWYocS5pc0FycmF5KHUpKXtoPXV9ZWxzZSBpZih1KXtxLmVhY2godSxmdW5jdGlvbihQLGspe2lmKHEudHlwZShrKT09PSJzdHJpbmciKXtrPXEuc2FwLmVuY29kZVVSTChrKX1oLnB1c2gocS5zYXAuZW5jb2RlVVJMKFApKyI9IitrKX0pfWlmKHRoaXMuc1VybFBhcmFtcyl7aC5wdXNoKHRoaXMuc1VybFBhcmFtcyl9aWYocyl7aC5wdXNoKHMpfWlmKGgubGVuZ3RoPjApe2krPSI/IitoLmpvaW4oIiYiKX1pZihnPT09dW5kZWZpbmVkKXtnPXRydWV9aWYoZz09PWZhbHNlKXt2YXIgdD1xLm5vdygpO3ZhciBqPWkucmVwbGFjZSgvKFs/Jl0pXz1bXiZdKi8sIiQxXz0iK3QpO2k9aisoKGo9PT1pKT8oL1w/Ly50ZXN0KGkpPyImIjoiPyIpKyJfPSIrdDoiIil9cmV0dXJuIGl9O2YucHJvdG90eXBlLl9sb2FkRGF0YT1mdW5jdGlvbihwLFAscyxFLGcsaCxpKXt2YXIgcixSLG8sdD10aGlzO2Z1bmN0aW9uIF8oRCxtKXt2YXIgbj1ELHY9e307aWYoIW4pe3Euc2FwLmxvZy5mYXRhbCgiVGhlIGZvbGxvd2luZyBwcm9ibGVtIG9jY3VycmVkOiBObyBkYXRhIHdhcyByZXRyaWV2ZWQgYnkgc2VydmljZTogIittLnJlcXVlc3RVcmkpO3QuZmlyZVJlcXVlc3RDb21wbGV0ZWQoe3VybDpvLnJlcXVlc3RVcmksdHlwZToiR0VUIixhc3luYzpvLmFzeW5jLGluZm86IkFjY2VwdCBoZWFkZXJzOiIrdC5vSGVhZGVyc1siQWNjZXB0Il0saW5mb09iamVjdDp7YWNjZXB0SGVhZGVyczp0Lm9IZWFkZXJzWyJBY2NlcHQiXX0sc3VjY2VzczpmYWxzZX0pO3JldHVybiBmYWxzZX1pZih0LmJVc2VCYXRjaCl7dmFyIHc9dC5fZ2V0QmF0Y2hFcnJvcnMoRCk7aWYody5sZW5ndGg+MCl7aih3WzBdKTtyZXR1cm4gZmFsc2V9aWYobi5fX2JhdGNoUmVzcG9uc2VzJiZuLl9fYmF0Y2hSZXNwb25zZXMubGVuZ3RoPjApe249bi5fX2JhdGNoUmVzcG9uc2VzWzBdLmRhdGF9ZWxzZXtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogTm8gZGF0YSB3YXMgcmV0cmlldmVkIGJ5IHNlcnZpY2U6ICIrbS5yZXF1ZXN0VXJpKX19bD1sLmNvbmNhdChuLnJlc3VsdHMpO2lmKG4uX19uZXh0KXt2YXIgeD1uZXcgVVJJKG4uX19uZXh0KTtSPXguYWJzb2x1dGVUbyhtLnJlcXVlc3RVcmkpLnRvU3RyaW5nKCk7Uis9dC5zVXJsUGFyYW1zPycmJyt0LnNVcmxQYXJhbXM6Jyc7by5yZXF1ZXN0VXJpPVI7ayhvKX1lbHNle3EuZXh0ZW5kKG4ucmVzdWx0cyxsKTtpZihuLnJlc3VsdHMmJiFxLmlzQXJyYXkobi5yZXN1bHRzKSl7bj1uLnJlc3VsdHN9dC5faW1wb3J0RGF0YShuLHYpO2lmKHQuc0NoYW5nZUtleSYmdil7dmFyIHk9dC5zQ2hhbmdlS2V5LnN1YnN0cih0LnNDaGFuZ2VLZXkubGFzdEluZGV4T2YoJy8nKSsxKTtpZih2W3ldKXt0LnNDaGFuZ2VLZXk9bnVsbH19aWYocyl7cyhuKX10LmNoZWNrVXBkYXRlKGZhbHNlLHYpO2lmKGkpe2koKX10LmZpcmVSZXF1ZXN0Q29tcGxldGVkKHt1cmw6by5yZXF1ZXN0VXJpLHR5cGU6IkdFVCIsYXN5bmM6by5hc3luYyxpbmZvOiJBY2NlcHQgaGVhZGVyczoiK3Qub0hlYWRlcnNbIkFjY2VwdCJdLGluZm9PYmplY3Q6e2FjY2VwdEhlYWRlcnM6dC5vSGVhZGVyc1siQWNjZXB0Il19LHN1Y2Nlc3M6dHJ1ZX0pfX1mdW5jdGlvbiBqKG0pe2lmKHQuYlRva2VuSGFuZGxpbmcmJm0ucmVzcG9uc2Upe3ZhciBUPXQuX2dldEhlYWRlcigieC1jc3JmLXRva2VuIixtLnJlc3BvbnNlLmhlYWRlcnMpO2lmKCFvLmJUb2tlblJlc2V0JiZtLnJlc3BvbnNlLnN0YXR1c0NvZGU9PSc0MDMnJiZULnRvTG93ZXJDYXNlKCk9PSJyZXF1aXJlZCIpe3QucmVzZXRTZWN1cml0eVRva2VuKCk7by5iVG9rZW5SZXNldD10cnVlO2soKTtyZXR1cm59fXZhciBuPXQuX2hhbmRsZUVycm9yKG0pO2lmKEUpe0UobSl9dC5maXJlUmVxdWVzdENvbXBsZXRlZCh7dXJsOm8ucmVxdWVzdFVyaSx0eXBlOiJHRVQiLGFzeW5jOm8uYXN5bmMsaW5mbzoiQWNjZXB0IGhlYWRlcnM6Iit0Lm9IZWFkZXJzWyJBY2NlcHQiXSxpbmZvT2JqZWN0OnthY2NlcHRIZWFkZXJzOnQub0hlYWRlcnNbIkFjY2VwdCJdfSxzdWNjZXNzOmZhbHNlLGVycm9yb2JqZWN0Om59KTtpZighcnx8IXIuYkFib3J0ZWQpe3QuZmlyZVJlcXVlc3RGYWlsZWQobil9fWZ1bmN0aW9uIGsoKXtpZih0LmJVc2VCYXRjaCl7dC51cGRhdGVTZWN1cml0eVRva2VuKCk7dmFyIG09VVJJLnBhcnNlKG8ucmVxdWVzdFVyaSkucXVlcnk7dmFyIG49dC5fY3JlYXRlUmVxdWVzdFVybChwLG51bGwsbSx0LmJVc2VCYXRjaCk7bz10Ll9jcmVhdGVSZXF1ZXN0KG4sIkdFVCIsdHJ1ZSk7dmFyIEI9dC5fY3JlYXRlQmF0Y2hSZXF1ZXN0KFtvXSx0cnVlKTtyPXQuX3JlcXVlc3QoQixfLGosT0RhdGEuYmF0Y2hIYW5kbGVyLHVuZGVmaW5lZCx0LmdldFNlcnZpY2VNZXRhZGF0YSgpKX1lbHNle3I9dC5fcmVxdWVzdChvLF8saix0Lm9IYW5kbGVyLHVuZGVmaW5lZCx0LmdldFNlcnZpY2VNZXRhZGF0YSgpKX1pZihoKXt2YXIgdz17YWJvcnQ6ZnVuY3Rpb24oKXtyLmJBYm9ydGVkPXRydWU7ci5hYm9ydCgpfX07aCh3KX19dmFyIGw9W107dmFyIHU9dGhpcy5fY3JlYXRlUmVxdWVzdFVybChwLG51bGwsUCxudWxsLGd8fHRoaXMuYkNhY2hlKTtvPXRoaXMuX2NyZWF0ZVJlcXVlc3QodSwiR0VUIix0cnVlKTt0aGlzLmZpcmVSZXF1ZXN0U2VudCh7dXJsOm8ucmVxdWVzdFVyaSx0eXBlOiJHRVQiLGFzeW5jOm8uYXN5bmMsaW5mbzoiQWNjZXB0IGhlYWRlcnM6Iit0aGlzLm9IZWFkZXJzWyJBY2NlcHQiXSxpbmZvT2JqZWN0OnthY2NlcHRIZWFkZXJzOnRoaXMub0hlYWRlcnNbIkFjY2VwdCJdfX0pO2soKX07Zi5wcm90b3R5cGUuX2ltcG9ydERhdGE9ZnVuY3Rpb24oRCxrKXt2YXIgdD10aGlzLGwsSyxyLEU7aWYoRC5yZXN1bHRzKXtsPVtdO3EuZWFjaChELnJlc3VsdHMsZnVuY3Rpb24oaSxnKXtsLnB1c2godC5faW1wb3J0RGF0YShnLGspKX0pO3JldHVybiBsfWVsc2V7Sz10aGlzLl9nZXRLZXkoRCk7RT10aGlzLm9EYXRhW0tdO2lmKCFFKXtFPUQ7dGhpcy5vRGF0YVtLXT1FfXEuZWFjaChELGZ1bmN0aW9uKG4scCl7aWYocCYmKHAuX19tZXRhZGF0YSYmcC5fX21ldGFkYXRhLnVyaXx8cC5yZXN1bHRzKSYmIXAuX19kZWZlcnJlZCl7cj10Ll9pbXBvcnREYXRhKHAsayk7aWYocS5pc0FycmF5KHIpKXtFW25dPXtfX2xpc3Q6cn19ZWxzZXtFW25dPXtfX3JlZjpyfX19ZWxzZSBpZighcHx8IXAuX19kZWZlcnJlZCl7RVtuXT1wfX0pO2tbS109dHJ1ZTtyZXR1cm4gS319O2YucHJvdG90eXBlLl9yZW1vdmVSZWZlcmVuY2VzPWZ1bmN0aW9uKEQpe3ZhciB0PXRoaXMsbDtpZihELnJlc3VsdHMpe2w9W107cS5lYWNoKEQucmVzdWx0cyxmdW5jdGlvbihpLGcpe2wucHVzaCh0Ll9yZW1vdmVSZWZlcmVuY2VzKGcpKX0pO3JldHVybiBsfWVsc2V7cS5lYWNoKEQsZnVuY3Rpb24ocCxvKXtpZihvKXtpZihvWyJfX3JlZiJdfHxvWyJfX2xpc3QiXSl7ZGVsZXRlIERbcF19fX0pO3JldHVybiBEfX07Zi5wcm90b3R5cGUuX3Jlc3RvcmVSZWZlcmVuY2VzPWZ1bmN0aW9uKEQpe3ZhciB0PXRoaXMsbyxsLHI9W107aWYoRC5yZXN1bHRzKXtsPVtdO3EuZWFjaChELnJlc3VsdHMsZnVuY3Rpb24oaSxnKXtsLnB1c2godC5fcmVzdG9yZVJlZmVyZW5jZXMoZykpfSk7cmV0dXJuIGx9ZWxzZXtxLmVhY2goRCxmdW5jdGlvbihwLG8pe2lmKG8mJm9bIl9fcmVmIl0pe3ZhciBnPXQuX2dldE9iamVjdCgiLyIrb1siX19yZWYiXSk7aWYoZyl7ZGVsZXRlIG9bIl9fcmVmIl07RFtwXT1nO3QuX3Jlc3RvcmVSZWZlcmVuY2VzKGcpfX1lbHNlIGlmKG8mJm9bIl9fbGlzdCJdKXtxLmVhY2gob1siX19saXN0Il0sZnVuY3Rpb24oaixFKXt2YXIgZz10Ll9nZXRPYmplY3QoIi8iK29bIl9fbGlzdCJdW2pdKTtpZihnKXtyLnB1c2goZyk7dC5fcmVzdG9yZVJlZmVyZW5jZXMoZyl9fSk7ZGVsZXRlIG9bIl9fbGlzdCJdO28ucmVzdWx0cz1yO3I9W119fSk7cmV0dXJuIER9fTtmLnByb3RvdHlwZS5yZW1vdmVEYXRhPWZ1bmN0aW9uKCl7dGhpcy5vRGF0YT17fX07Zi5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbihGLG0sRSl7dmFyIEI9dGhpcy5hQmluZGluZ3Muc2xpY2UoMCk7cS5lYWNoKEIsZnVuY3Rpb24oaSxvKXtvLnJlZnJlc2goRixtLEUpfSl9O2YucHJvdG90eXBlLmNoZWNrVXBkYXRlPWZ1bmN0aW9uKEYsbSl7dmFyIEI9dGhpcy5hQmluZGluZ3Muc2xpY2UoMCk7cS5lYWNoKEIsZnVuY3Rpb24oaSxvKXtvLmNoZWNrVXBkYXRlKEYsbSl9KX07Zi5wcm90b3R5cGUuYmluZFByb3BlcnR5PWZ1bmN0aW9uKHAsbyxQKXt2YXIgQj1uZXcgYyh0aGlzLHAsbyxQKTtyZXR1cm4gQn07Zi5wcm90b3R5cGUuYmluZExpc3Q9ZnVuY3Rpb24ocCxvLHMsRixQKXt2YXIgQj1uZXcgYSh0aGlzLHAsbyxzLEYsUCk7cmV0dXJuIEJ9O2YucHJvdG90eXBlLmJpbmRUcmVlPWZ1bmN0aW9uKHAsbyxGLFApe3ZhciBCPW5ldyBkKHRoaXMscCxvLEYsUCk7cmV0dXJuIEJ9O2YucHJvdG90eXBlLmNyZWF0ZUJpbmRpbmdDb250ZXh0PWZ1bmN0aW9uKHAsbyxQLGcscil7dmFyIHI9ISFyLEY9dGhpcy5yZXNvbHZlKHAsbyk7aWYodHlwZW9mIG89PSJmdW5jdGlvbiIpe2c9bztvPW51bGx9aWYodHlwZW9mIFA9PSJmdW5jdGlvbiIpe2c9UDtQPW51bGx9dmFyIEQ9dGhpcy5fZ2V0T2JqZWN0KHAsbyksayxuLHQ9dGhpcztpZighcil7cj10aGlzLl9pc1JlbG9hZE5lZWRlZChGLEQsUCl9aWYoIXIpe2s9dGhpcy5fZ2V0S2V5KEQpO249dGhpcy5nZXRDb250ZXh0KCcvJytrKTtnKG4pfWVsc2V7dmFyIGk9IXEuc2FwLnN0YXJ0c1dpdGgocCwiLyIpO2lmKEYpe3ZhciBoPVtdLHM9dGhpcy5jcmVhdGVDdXN0b21QYXJhbXMoUCk7aWYocyl7aC5wdXNoKHMpfXRoaXMuX2xvYWREYXRhKEYsaCxmdW5jdGlvbihEKXtrPUQ/dC5fZ2V0S2V5KEQpOnVuZGVmaW5lZDtpZihrJiZvJiZpKXt2YXIgaj1vLmdldFBhdGgoKTtqPWouc3Vic3RyKDEpO2lmKHQub0RhdGFbal0pe3Qub0RhdGFbal1bcF09e19fcmVmOmt9fX1uPXQuZ2V0Q29udGV4dCgnLycrayk7ZyhuKX0sZnVuY3Rpb24oKXtnKG51bGwpfSl9ZWxzZXtnKG51bGwpfX19O2YucHJvdG90eXBlLl9pc1JlbG9hZE5lZWRlZD1mdW5jdGlvbihGLEQscCl7dmFyIG4sTj1bXSxzLFM9W107aWYoIUQpe3JldHVybiB0cnVlfWlmKHAmJnBbImV4cGFuZCJdKXtuPXBbImV4cGFuZCJdLnJlcGxhY2UoL1xzL2csIiIpO049bi5zcGxpdCgnLCcpfWlmKHAmJnBbInNlbGVjdCJdKXtzPXBbInNlbGVjdCJdLnJlcGxhY2UoL1xzL2csIiIpO1M9cy5zcGxpdCgnLCcpfWZvcih2YXIgaT0wO2k8Ti5sZW5ndGg7aSsrKXtpZihEW05baV1dPT09dW5kZWZpbmVkfHwoRFtOW2ldXSYmRFtOW2ldXS5fX2RlZmVycmVkKSl7cmV0dXJuIHRydWV9fWZvcih2YXIgaT0wO2k8Uy5sZW5ndGg7aSsrKXtpZihEW1NbaV1dPT09dW5kZWZpbmVkKXtyZXR1cm4gdHJ1ZX19aWYoUy5sZW5ndGg9PTApe3ZhciBFPXRoaXMub01ldGFkYXRhLl9nZXRFbnRpdHlUeXBlQnlQYXRoKEYpO2lmKCFFKXtyZXR1cm4gZmFsc2V9ZWxzZXtmb3IodmFyIGk9MDtpPEUucHJvcGVydHkubGVuZ3RoO2krKyl7aWYoRFtFLnByb3BlcnR5W2ldLm5hbWVdPT09dW5kZWZpbmVkKXtyZXR1cm4gdHJ1ZX19fX1yZXR1cm4gZmFsc2V9O2YucHJvdG90eXBlLmRlc3Ryb3lCaW5kaW5nQ29udGV4dD1mdW5jdGlvbihvKXt9O2YucHJvdG90eXBlLmNyZWF0ZUN1c3RvbVBhcmFtcz1mdW5jdGlvbihwKXt2YXIgZz1bXSxtLHM9e2V4cGFuZDp0cnVlLHNlbGVjdDp0cnVlfTtmb3IodmFyIG4gaW4gcCl7aWYobiBpbiBzKXtnLnB1c2goIiQiK24rIj0iK3Euc2FwLmVuY29kZVVSTChwW25dKSl9aWYobj09ImN1c3RvbSIpe209cFtuXTtmb3IodmFyIG4gaW4gbSl7aWYobi5pbmRleE9mKCIkIik9PTApe3Euc2FwLmxvZy53YXJuaW5nKCJUcnlpbmcgdG8gc2V0IE9EYXRhIHBhcmFtZXRlciAiK24rIiBhcyBjdXN0b20gcXVlcnkgb3B0aW9uISIpfWVsc2V7Zy5wdXNoKG4rIj0iK3Euc2FwLmVuY29kZVVSTChtW25dKSl9fX19cmV0dXJuIGcuam9pbigiJiIpfTtmLnByb3RvdHlwZS5iaW5kQ29udGV4dD1mdW5jdGlvbihwLG8sUCl7dmFyIEI9bmV3IE8odGhpcyxwLG8sUCk7cmV0dXJuIEJ9O2YucHJvdG90eXBlLnNldENvdW50U3VwcG9ydGVkPWZ1bmN0aW9uKGcpe3RoaXMuYkNvdW50U3VwcG9ydGVkPWd9O2YucHJvdG90eXBlLmlzQ291bnRTdXBwb3J0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5iQ291bnRTdXBwb3J0ZWR9O2YucHJvdG90eXBlLnNldERlZmF1bHRDb3VudE1vZGU9ZnVuY3Rpb24ocyl7dGhpcy5zRGVmYXVsdENvdW50TW9kZT1zfTtmLnByb3RvdHlwZS5nZXREZWZhdWx0Q291bnRNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc0RlZmF1bHRDb3VudE1vZGV9O2YucHJvdG90eXBlLl9nZXRLZXk9ZnVuY3Rpb24obyl7dmFyIGssdTtpZihvIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkNvbnRleHQpe2s9by5nZXRQYXRoKCkuc3Vic3RyKDEpfWVsc2UgaWYobyYmby5fX21ldGFkYXRhJiZvLl9fbWV0YWRhdGEudXJpKXt1PW8uX19tZXRhZGF0YS51cmk7az11LnN1YnN0cih1Lmxhc3RJbmRleE9mKCIvIikrMSl9cmV0dXJuIGt9O2YucHJvdG90eXBlLmdldFByb3BlcnR5PWZ1bmN0aW9uKHAsbyxpKXt2YXIgdj10aGlzLl9nZXRPYmplY3QocCxvKTtpZihpPT1udWxsfHxpPT11bmRlZmluZWQpe3JldHVybiB2fWlmKCFxLmlzUGxhaW5PYmplY3Qodikpe3JldHVybiB2fXY9cS5leHRlbmQodHJ1ZSx7fSx2KTtpZihpPT10cnVlKXtyZXR1cm4gdGhpcy5fcmVzdG9yZVJlZmVyZW5jZXModil9ZWxzZXtyZXR1cm4gdGhpcy5fcmVtb3ZlUmVmZXJlbmNlcyh2KX19O2YucHJvdG90eXBlLl9nZXRPYmplY3Q9ZnVuY3Rpb24ocCxvKXt2YXIgbj10aGlzLmlzTGVnYWN5U3ludGF4KCk/dGhpcy5vRGF0YTpudWxsLGs7aWYobyl7az1vLmdldFBhdGgoKTtrPWsuc3Vic3RyKDEpO249dGhpcy5vRGF0YVtrXX1pZighcCl7cmV0dXJuIG59dmFyIFA9cC5zcGxpdCgiLyIpLGk9MDtpZighUFswXSl7bj10aGlzLm9EYXRhO2krK313aGlsZShuJiZQW2ldKXtuPW5bUFtpXV07aWYobil7aWYobi5fX3JlZil7bj10aGlzLm9EYXRhW24uX19yZWZdfWVsc2UgaWYobi5fX2xpc3Qpe249bi5fX2xpc3R9ZWxzZSBpZihuLl9fZGVmZXJyZWQpe249bnVsbH19aSsrfXJldHVybiBufTtmLnByb3RvdHlwZS51cGRhdGVTZWN1cml0eVRva2VuPWZ1bmN0aW9uKCl7aWYodGhpcy5iVG9rZW5IYW5kbGluZyl7aWYoIXRoaXMub1NlcnZpY2VEYXRhLnNlY3VyaXR5VG9rZW4pe3RoaXMucmVmcmVzaFNlY3VyaXR5VG9rZW4oKX1pZih0aGlzLmJUb2tlbkhhbmRsaW5nKXt0aGlzLm9IZWFkZXJzWyJ4LWNzcmYtdG9rZW4iXT10aGlzLm9TZXJ2aWNlRGF0YS5zZWN1cml0eVRva2VufX19O2YucHJvdG90eXBlLnJlc2V0U2VjdXJpdHlUb2tlbj1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLm9TZXJ2aWNlRGF0YS5zZWN1cml0eVRva2VuO2RlbGV0ZSB0aGlzLm9IZWFkZXJzWyJ4LWNzcmYtdG9rZW4iXX07Zi5wcm90b3R5cGUucmVmcmVzaFNlY3VyaXR5VG9rZW49ZnVuY3Rpb24ocyxFLEEpe3ZhciB0PXRoaXMsdSxUO0E9QT09PXRydWU7dT10aGlzLl9jcmVhdGVSZXF1ZXN0VXJsKCIvIik7dmFyIHI9dGhpcy5fY3JlYXRlUmVxdWVzdCh1LCJHRVQiLEEpO3IuaGVhZGVyc1sieC1jc3JmLXRva2VuIl09IkZldGNoIjtmdW5jdGlvbiBfKEQsUil7aWYoUil7VD10Ll9nZXRIZWFkZXIoIngtY3NyZi10b2tlbiIsUi5oZWFkZXJzKTtpZihUKXt0Lm9TZXJ2aWNlRGF0YS5zZWN1cml0eVRva2VuPVQ7dC5vSGVhZGVyc1sieC1jc3JmLXRva2VuIl09VH1lbHNle3QucmVzZXRTZWN1cml0eVRva2VuKCk7dC5iVG9rZW5IYW5kbGluZz1mYWxzZX19aWYocyl7cyhELFIpfX1mdW5jdGlvbiBnKG8pe3QucmVzZXRTZWN1cml0eVRva2VuKCk7dC5iVG9rZW5IYW5kbGluZz1mYWxzZTt0Ll9oYW5kbGVFcnJvcihvKTtpZihFKXtFKG8pfX1yZXR1cm4gdGhpcy5fcmVxdWVzdChyLF8sZyx1bmRlZmluZWQsdW5kZWZpbmVkLHRoaXMuZ2V0U2VydmljZU1ldGFkYXRhKCkpfTtmLnByb3RvdHlwZS5fc3VibWl0UmVxdWVzdD1mdW5jdGlvbihyLEIscyxFLGgpe3ZhciB0PXRoaXMsUjtmdW5jdGlvbiBfKEQsbyl7aWYoQiYmaCl7dmFyIGo9dC5fZ2V0QmF0Y2hFcnJvcnMoRCk7aWYoai5sZW5ndGg+MCl7ZyhqWzBdKTtyZXR1cm4gZmFsc2V9aWYoRC5fX2JhdGNoUmVzcG9uc2VzJiZELl9fYmF0Y2hSZXNwb25zZXMubGVuZ3RoPjApe1I9RC5fX2JhdGNoUmVzcG9uc2VzWzBdLmRhdGE7aWYoIVImJkQuX19iYXRjaFJlc3BvbnNlc1swXS5fX2NoYW5nZVJlc3BvbnNlcyl7Uj1ELl9fYmF0Y2hSZXNwb25zZXNbMF0uX19jaGFuZ2VSZXNwb25zZXNbMF0uZGF0YX19RD1SfXQuX2hhbmRsZUVUYWcocixvLEIpO3QuX3VwZGF0ZVJlcXVlc3RRdWV1ZShyLEIpO2lmKHQuX2lzUmVmcmVzaE5lZWRlZChyLG8pKXt0LnJlZnJlc2goZmFsc2Usci5rZXlzLHIuZW50aXR5VHlwZXMpfWlmKHMpe3MoRCxvKX19ZnVuY3Rpb24gZyhvKXtpZih0LmJUb2tlbkhhbmRsaW5nJiZvLnJlc3BvbnNlKXt2YXIgVD10Ll9nZXRIZWFkZXIoIngtY3NyZi10b2tlbiIsby5yZXNwb25zZS5oZWFkZXJzKTtpZighci5iVG9rZW5SZXNldCYmby5yZXNwb25zZS5zdGF0dXNDb2RlPT0nNDAzJyYmVCYmVC50b0xvd2VyQ2FzZSgpPT0icmVxdWlyZWQiKXt0LnJlc2V0U2VjdXJpdHlUb2tlbigpO3IuYlRva2VuUmVzZXQ9dHJ1ZTtpKCk7cmV0dXJufX10Ll9oYW5kbGVFcnJvcihvKTtpZihFKXtFKG8pfX1mdW5jdGlvbiBpKCl7aWYodC5iVG9rZW5IYW5kbGluZyYmci5tZXRob2QhPT0iR0VUIil7dC51cGRhdGVTZWN1cml0eVRva2VuKCk7aWYodC5iVG9rZW5IYW5kbGluZyl7ci5oZWFkZXJzWyJ4LWNzcmYtdG9rZW4iXT10Lm9TZXJ2aWNlRGF0YS5zZWN1cml0eVRva2VufX1pZihCKXtyZXR1cm4gdC5fcmVxdWVzdChyLF8sZyxPRGF0YS5iYXRjaEhhbmRsZXIsdW5kZWZpbmVkLHQuZ2V0U2VydmljZU1ldGFkYXRhKCkpfWVsc2V7cmV0dXJuIHQuX3JlcXVlc3QocixfLGcsdC5vSGFuZGxlcix1bmRlZmluZWQsdC5nZXRTZXJ2aWNlTWV0YWRhdGEoKSl9fXJldHVybiBpKCl9O2YucHJvdG90eXBlLl9jcmVhdGVCYXRjaFJlcXVlc3Q9ZnVuY3Rpb24oQixBKXt2YXIgdSxyLG89e30scD17fSxnPVtdLEs9e30sRT17fTtwLl9fYmF0Y2hSZXF1ZXN0cz1CO3U9dGhpcy5zU2VydmljZVVybCsiLyRiYXRjaCI7aWYodGhpcy5zVXJsUGFyYW1zKXt1Kz0iPyIrdGhpcy5zVXJsUGFyYW1zfXEuZXh0ZW5kKG8sdGhpcy5tQ3VzdG9tSGVhZGVycyx0aGlzLm9IZWFkZXJzKTtkZWxldGUgb1siQ29udGVudC1UeXBlIl07cj17aGVhZGVyczpvLHJlcXVlc3RVcmk6dSxtZXRob2Q6IlBPU1QiLGRhdGE6cCx1c2VyOnRoaXMuc1VzZXIscGFzc3dvcmQ6dGhpcy5zUGFzc3dvcmQsYXN5bmM6QX07aWYoQSl7ci53aXRoQ3JlZGVudGlhbHM9dGhpcy5iV2l0aENyZWRlbnRpYWxzfXEuZWFjaChCLGZ1bmN0aW9uKGksaCl7aWYoaFsiX19jaGFuZ2VSZXF1ZXN0cyJdKXtxLmVhY2goaFsiX19jaGFuZ2VSZXF1ZXN0cyJdLGZ1bmN0aW9uKGosbSl7aWYobS5rZXlzJiZtLm1ldGhvZCE9IlBPU1QiKXtxLmVhY2gobS5rZXlzLGZ1bmN0aW9uKGsscyl7S1trXT1zfSl9ZWxzZSBpZihtLmVudGl0eVR5cGVzJiZtLm1ldGhvZD09IlBPU1QiKXtxLmVhY2gobS5lbnRpdHlUeXBlcyxmdW5jdGlvbihsLHMpe0VbbF09c30pfX0pfX0pO3Iua2V5cz1LO3IuZW50aXR5VHlwZXM9RTtyZXR1cm4gcn07Zi5wcm90b3R5cGUuX2hhbmRsZUVUYWc9ZnVuY3Rpb24ocixSLEIpe3ZhciB1LEUsZyxoLGssbDtpZihCKXtrPXIuZGF0YS5fX2JhdGNoUmVxdWVzdHM7bD1SLmRhdGEuX19iYXRjaFJlc3BvbnNlcztpZihsJiZrKXtmb3IodmFyIGk9MDtpPGsubGVuZ3RoO2krKyl7Zz1rW2ldLl9fY2hhbmdlUmVxdWVzdHM7aWYobFtpXSl7aD1sW2ldLl9fY2hhbmdlUmVzcG9uc2VzO2lmKGcmJmgpe2Zvcih2YXIgaj0wO2o8Zy5sZW5ndGg7aisrKXtpZihnW2pdLm1ldGhvZD09Ik1FUkdFInx8Z1tqXS5tZXRob2Q9PSJQVVQiKXt1PWdbal0ucmVxdWVzdFVyaS5yZXBsYWNlKHRoaXMuc1NlcnZpY2VVcmwrJy8nLCcnKTtpZighcS5zYXAuc3RhcnRzV2l0aCh1LCIvIikpe3U9Ii8iK3V9RT10aGlzLl9nZXRPYmplY3QodSk7aWYoRSYmRS5fX21ldGFkYXRhJiZoW2pdLmhlYWRlcnMmJmhbal0uaGVhZGVycy5FVGFnKXtFLl9fbWV0YWRhdGEuZXRhZz1oW2pdLmhlYWRlcnMuRVRhZ319fX19ZWxzZXtxLnNhcC5sb2cud2FybmluZygiY291bGQgbm90IHVwZGF0ZSBFVGFncyBmb3IgYmF0Y2ggcmVxdWVzdDogY29ycmVzcG9uZGluZyByZXNwb25zZSBmb3IgcmVxdWVzdCBtaXNzaW5nIil9fX1lbHNle3Euc2FwLmxvZy53YXJuaW5nKCJjb3VsZCBub3QgdXBkYXRlIEVUYWdzIGZvciBiYXRjaCByZXF1ZXN0OiBubyBiYXRjaCByZXNwb25zZXMvcmVxdWVzdHMgYXZhaWxhYmxlIil9fWVsc2V7dT1yLnJlcXVlc3RVcmkucmVwbGFjZSh0aGlzLnNTZXJ2aWNlVXJsKycvJywnJyk7aWYoIXEuc2FwLnN0YXJ0c1dpdGgodSwiLyIpKXt1PSIvIit1fUU9dGhpcy5fZ2V0T2JqZWN0KHUpO2lmKEUmJkUuX19tZXRhZGF0YSYmUi5oZWFkZXJzLkVUYWcpe0UuX19tZXRhZGF0YS5ldGFnPVIuaGVhZGVycy5FVGFnfX19O2YucHJvdG90eXBlLl9oYW5kbGVCYXRjaEVycm9ycz1mdW5jdGlvbihyLEQpe3ZhciBFPVtdO0U9dGhpcy5fZ2V0QmF0Y2hFcnJvcnMoRCk7dGhpcy5faGFuZGxlRVRhZygpfTtmLnByb3RvdHlwZS5fZ2V0QmF0Y2hFcnJvcnM9ZnVuY3Rpb24oRCl7dmFyIEU9W10scztxLmVhY2goRC5fX2JhdGNoUmVzcG9uc2VzLGZ1bmN0aW9uKGksbyl7aWYoby5tZXNzYWdlKXtzPSJUaGUgZm9sbG93aW5nIHByb2JsZW0gb2NjdXJyZWQ6ICIrby5tZXNzYWdlO2lmKG8ucmVzcG9uc2Upe3MrPW8ucmVzcG9uc2Uuc3RhdHVzQ29kZSsiLCIrby5yZXNwb25zZS5zdGF0dXNUZXh0KyIsIitvLnJlc3BvbnNlLmJvZHl9RS5wdXNoKG8pO3Euc2FwLmxvZy5mYXRhbChzKX1pZihvLl9fY2hhbmdlUmVzcG9uc2VzKXtxLmVhY2goby5fX2NoYW5nZVJlc3BvbnNlcyxmdW5jdGlvbihpLGcpe2lmKGcubWVzc2FnZSl7cz0iVGhlIGZvbGxvd2luZyBwcm9ibGVtIG9jY3VycmVkOiAiK2cubWVzc2FnZTtpZihnLnJlc3BvbnNlKXtzKz1nLnJlc3BvbnNlLnN0YXR1c0NvZGUrIiwiK2cucmVzcG9uc2Uuc3RhdHVzVGV4dCsiLCIrZy5yZXNwb25zZS5ib2R5fUUucHVzaChnKTtxLnNhcC5sb2cuZmF0YWwocyl9fSl9fSk7cmV0dXJuIEV9O2YucHJvdG90eXBlLl9oYW5kbGVFcnJvcj1mdW5jdGlvbihFKXt2YXIgcD17fSxoLHQ7dmFyIHM9IlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogIitFLm1lc3NhZ2U7cC5tZXNzYWdlPUUubWVzc2FnZTtpZihFLnJlc3BvbnNlKXtpZih0aGlzLmJUb2tlbkhhbmRsaW5nKXt0PXRoaXMuX2dldEhlYWRlcigieC1jc3JmLXRva2VuIixFLnJlc3BvbnNlLmhlYWRlcnMpO2lmKEUucmVzcG9uc2Uuc3RhdHVzQ29kZT09JzQwMycmJnQmJnQudG9Mb3dlckNhc2UoKT09InJlcXVpcmVkIil7dGhpcy5yZXNldFNlY3VyaXR5VG9rZW4oKX19cys9RS5yZXNwb25zZS5zdGF0dXNDb2RlKyIsIitFLnJlc3BvbnNlLnN0YXR1c1RleHQrIiwiK0UucmVzcG9uc2UuYm9keTtwLnN0YXR1c0NvZGU9RS5yZXNwb25zZS5zdGF0dXNDb2RlO3Auc3RhdHVzVGV4dD1FLnJlc3BvbnNlLnN0YXR1c1RleHQ7cC5yZXNwb25zZVRleHQ9RS5yZXNwb25zZS5ib2R5fXEuc2FwLmxvZy5mYXRhbChzKTtyZXR1cm4gcH07Zi5wcm90b3R5cGUuZ2V0RGF0YT1mdW5jdGlvbihwLG8saSl7cmV0dXJuIHRoaXMuZ2V0UHJvcGVydHkocCxvLGkpfTtmLnByb3RvdHlwZS5fZ2V0RVRhZz1mdW5jdGlvbihwLFAsRSl7dmFyIHMsZyxpO2lmKEUpe3M9RX1lbHNle2lmKFAmJlAuX19tZXRhZGF0YSl7cz1QLl9fbWV0YWRhdGEuZXRhZ31lbHNlIGlmKHApe2c9cC5yZXBsYWNlKHRoaXMuc1NlcnZpY2VVcmwrJy8nLCcnKTtpPWcuaW5kZXhPZigiPyIpO2lmKGk+LTEpe2c9Zy5zdWJzdHIoMCxpKX1pZih0aGlzLm9EYXRhLmhhc093blByb3BlcnR5KGcpKXtzPXRoaXMuZ2V0UHJvcGVydHkoJy8nK2crJy9fX21ldGFkYXRhL2V0YWcnKX19fXJldHVybiBzfTtmLnByb3RvdHlwZS5fY3JlYXRlUmVxdWVzdD1mdW5jdGlvbih1LG0sQSxwLEUpe3ZhciBvPXt9LHM7cS5leHRlbmQobyx0aGlzLm1DdXN0b21IZWFkZXJzLHRoaXMub0hlYWRlcnMpO3M9dGhpcy5fZ2V0RVRhZyh1LHAsRSk7aWYocyYmbSE9IkdFVCIpe29bIklmLU1hdGNoIl09c31pZih0aGlzLmJKU09OJiZtIT0iREVMRVRFIiYmdGhpcy5zTWF4RGF0YVNlcnZpY2VWZXJzaW9uPT09IjIuMCIpe29bIkNvbnRlbnQtVHlwZSJdPSJhcHBsaWNhdGlvbi9qc29uIn1pZihtPT0iTUVSR0UiJiYhdGhpcy5iVXNlQmF0Y2gpe29bIngtaHR0cC1tZXRob2QiXT0iTUVSR0UiO209IlBPU1QifXZhciByPXtoZWFkZXJzOm8scmVxdWVzdFVyaTp1LG1ldGhvZDptLHVzZXI6dGhpcy5zVXNlcixwYXNzd29yZDp0aGlzLnNQYXNzd29yZCxhc3luYzpBfTtpZihwKXtyLmRhdGE9cH1pZihBKXtyLndpdGhDcmVkZW50aWFscz10aGlzLmJXaXRoQ3JlZGVudGlhbHN9cmV0dXJuIHJ9O2YucHJvdG90eXBlLl9pc1JlZnJlc2hOZWVkZWQ9ZnVuY3Rpb24ocixSKXt2YXIgZz1mYWxzZSxFLGg9W10sdD10aGlzO2lmKCF0aGlzLmJSZWZyZXNoQWZ0ZXJDaGFuZ2Upe3JldHVybiBnfWlmKHIuZGF0YSYmcS5pc0FycmF5KHIuZGF0YS5fX2JhdGNoUmVxdWVzdHMpKXtpZihSKXtoPXQuX2dldEJhdGNoRXJyb3JzKFIuZGF0YSk7cS5lYWNoKGgsZnVuY3Rpb24oaSxvKXtpZihvLnJlc3BvbnNlJiZvLnJlc3BvbnNlLnN0YXR1c0NvZGU9PSI0MTIiKXtFPW8ucmVzcG9uc2Uuc3RhdHVzQ29kZTtyZXR1cm4gZmFsc2V9fSk7aWYoISFFKXtyZXR1cm4gZmFsc2V9fXEuZWFjaChyLmRhdGEuX19iYXRjaFJlcXVlc3RzLGZ1bmN0aW9uKGksQil7aWYocS5pc0FycmF5KEIuX19jaGFuZ2VSZXF1ZXN0cykpe3EuZWFjaChCLl9fY2hhbmdlUmVxdWVzdHMsZnVuY3Rpb24oaSxvKXtnPWd8fHQuX2lzUmVmcmVzaE5lZWRlZChvKTtyZXR1cm4hZ30pfXJldHVybiFnfSl9ZWxzZXtpZihyLm1ldGhvZD09PSJHRVQiKXtyZXR1cm4gZmFsc2V9ZWxzZXtpZihSJiZSLnN0YXR1c0NvZGU9PSI0MTIiKXtnPWZhbHNlfWVsc2V7Zz10cnVlfX19cmV0dXJuIGd9O2YucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihwLEQsUCl7dmFyIHMsRSxtLHIsdSxvLGcsUixCLGgsUyxrLGksQT1mYWxzZTtpZihQIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkNvbnRleHR8fGFyZ3VtZW50cy5sZW5ndGg+Myl7bz1QO3M9YXJndW1lbnRzWzNdO0U9YXJndW1lbnRzWzRdO209YXJndW1lbnRzWzVdfWVsc2V7bz1QLmNvbnRleHR8fFAub0NvbnRleHQ7cz1QLnN1Y2Nlc3N8fFAuZm5TdWNjZXNzO0U9UC5lcnJvcnx8UC5mbkVycm9yO2c9UC5lVGFnfHxQLnNFVGFnO209dHlwZW9mKFAubWVyZ2UpPT0idW5kZWZpbmVkIj9QLmJNZXJnZT09PXRydWU6UC5tZXJnZT09PXRydWU7QT10eXBlb2YoUC5hc3luYyk9PSJ1bmRlZmluZWQiP1AuYkFzeW5jPT09dHJ1ZTpQLmFzeW5jPT09dHJ1ZTtpPVAudXJsUGFyYW1ldGVyc311PXRoaXMuX2NyZWF0ZVJlcXVlc3RVcmwocCxvLGksdGhpcy5iVXNlQmF0Y2gpO2lmKG0pe3I9dGhpcy5fY3JlYXRlUmVxdWVzdCh1LCJNRVJHRSIsQSxELGcpfWVsc2V7cj10aGlzLl9jcmVhdGVSZXF1ZXN0KHUsIlBVVCIsQSxELGcpfXA9dGhpcy5fbm9ybWFsaXplUGF0aChwLG8pO1M9dGhpcy5fZ2V0T2JqZWN0KHApO3Iua2V5cz17fTtpZihTKXtrPXRoaXMuX2dldEtleShTKTtyLmtleXNba109dHJ1ZX1pZih0aGlzLmJVc2VCYXRjaCl7Qj10aGlzLl9jcmVhdGVCYXRjaFJlcXVlc3QoW3tfX2NoYW5nZVJlcXVlc3RzOltyXX1dLEEpO1I9dGhpcy5fc3VibWl0UmVxdWVzdChCLHRoaXMuYlVzZUJhdGNoLHMsRSx0cnVlKX1lbHNle1I9dGhpcy5fc3VibWl0UmVxdWVzdChyLHRoaXMuYlVzZUJhdGNoLHMsRSl9cmV0dXJuIFJ9O2YucHJvdG90eXBlLmNyZWF0ZT1mdW5jdGlvbihwLEQsUCl7dmFyIHIsQix1LFIscyxFLG8sUyxnLEE9ZmFsc2UsbTtpZihQJiZ0eXBlb2YoUCk9PSJvYmplY3QiJiYhKFAgaW5zdGFuY2VvZiBzYXAudWkubW9kZWwuQ29udGV4dCkpe289UC5jb250ZXh0O1M9UC5zdWNjZXNzO209UC51cmxQYXJhbWV0ZXJzO2c9UC5lcnJvcjtBPVAuYXN5bmM9PT10cnVlfWVsc2V7bz1QO1M9YXJndW1lbnRzWzNdO2c9YXJndW1lbnRzWzRdfXU9dGhpcy5fY3JlYXRlUmVxdWVzdFVybChwLG8sbSx0aGlzLmJVc2VCYXRjaCk7cj10aGlzLl9jcmVhdGVSZXF1ZXN0KHUsIlBPU1QiLEEsRCk7cD10aGlzLl9ub3JtYWxpemVQYXRoKHAsbyk7RT10aGlzLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChwKTtyLmVudGl0eVR5cGVzPXt9O2lmKEUpe3IuZW50aXR5VHlwZXNbRS5lbnRpdHlUeXBlXT10cnVlfWlmKHRoaXMuYlVzZUJhdGNoKXtCPXRoaXMuX2NyZWF0ZUJhdGNoUmVxdWVzdChbe19fY2hhbmdlUmVxdWVzdHM6W3JdfV0sQSk7Uj10aGlzLl9zdWJtaXRSZXF1ZXN0KEIsdGhpcy5iVXNlQmF0Y2gsUyxnLHRydWUpfWVsc2V7Uj10aGlzLl9zdWJtaXRSZXF1ZXN0KHIsdGhpcy5iVXNlQmF0Y2gsUyxnKX1yZXR1cm4gUn07Zi5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHAsUCl7dmFyIG8sRSxzLFMsZyxyLHUsaCxrLGksXyxCLFIsaixtLEE9ZmFsc2UsdD10aGlzO2lmKChQJiZQIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkNvbnRleHQpfHxhcmd1bWVudHNbMl0pe289UDtTPWFyZ3VtZW50c1syXTtnPWFyZ3VtZW50c1szXX1lbHNlIGlmKFApe289UC5jb250ZXh0fHxQLm9Db250ZXh0O1M9UC5zdWNjZXNzfHxQLmZuU3VjY2VzcztnPVAuZXJyb3J8fFAuZm5FcnJvcjtoPVAuZVRhZ3x8UC5zRVRhZztpPVAucGF5bG9hZHx8UC5vUGF5bG9hZDtBPXR5cGVvZihQLmFzeW5jKT09InVuZGVmaW5lZCI/UC5iQXN5bmM9PT10cnVlOlAuYXN5bmM9PT10cnVlO209UC51cmxQYXJhbWV0ZXJzfV89ZnVuY3Rpb24oRCxsKXtFPXUuc3Vic3RyKHUubGFzdEluZGV4T2YoJy8nKSsxKTtpZihFLmluZGV4T2YoJz8nKSE9LTEpe0U9RS5zdWJzdHIoMCxFLmluZGV4T2YoJz8nKSl9ZGVsZXRlIHQub0RhdGFbRV07ZGVsZXRlIHQubUNvbnRleHRzWyIvIitFXTtpZihTKXtTKEQsbCl9fTt1PXRoaXMuX2NyZWF0ZVJlcXVlc3RVcmwocCxvLG0sdGhpcy5iVXNlQmF0Y2gpO3I9dGhpcy5fY3JlYXRlUmVxdWVzdCh1LCJERUxFVEUiLEEsaSxoKTtwPXRoaXMuX25vcm1hbGl6ZVBhdGgocCxvKTtzPXRoaXMuX2dldE9iamVjdChwKTtyLmtleXM9e307aWYocyl7az10aGlzLl9nZXRLZXkocyk7ci5rZXlzW2tdPXRydWV9aWYodGhpcy5iVXNlQmF0Y2gpe0I9dGhpcy5fY3JlYXRlQmF0Y2hSZXF1ZXN0KFt7X19jaGFuZ2VSZXF1ZXN0czpbcl19XSxBKTtSPXRoaXMuX3N1Ym1pdFJlcXVlc3QoQix0aGlzLmJVc2VCYXRjaCxfLGcsdHJ1ZSl9ZWxzZXtSPXRoaXMuX3N1Ym1pdFJlcXVlc3Qocix0aGlzLmJVc2VCYXRjaCxfLGcpfXJldHVybiBSfTtmLnByb3RvdHlwZS5jYWxsRnVuY3Rpb249ZnVuY3Rpb24oRixwKXt2YXIgcixCLHUsUixvLFAsZyxzLEUsQSxtPSJHRVQiLGg9e30sdD10aGlzO2lmKHAmJnR5cGVvZihwKT09Im9iamVjdCIpe209cC5tZXRob2Q/cC5tZXRob2Q6bTtQPXAudXJsUGFyYW1ldGVycztnPXAuY29udGV4dDtzPXAuc3VjY2VzcztFPXAuZXJyb3I7QT1wLmFzeW5jPT09dHJ1ZX1lbHNle209cDtQPWFyZ3VtZW50c1syXTtnPWFyZ3VtZW50c1szXTtzPWFyZ3VtZW50c1s0XTtFPWFyZ3VtZW50c1s1XTtBPWFyZ3VtZW50c1s2XT09PXRydWV9bz10aGlzLm9NZXRhZGF0YS5fZ2V0RnVuY3Rpb25JbXBvcnRNZXRhZGF0YShGLG0pO2lmKG8pe3U9dGhpcy5fY3JlYXRlUmVxdWVzdFVybChGLGcsbnVsbCx0aGlzLmJVc2VCYXRjaCk7dmFyIGk9VVJJKHUpO2lmKG8ucGFyYW1ldGVyIT1udWxsKXtxLmVhY2goUCxmdW5jdGlvbihqLGspe3ZhciBsPXEuZ3JlcChvLnBhcmFtZXRlcixmdW5jdGlvbih2KXtyZXR1cm4gdi5uYW1lPT1qJiZ2Lm1vZGU9PSJJbiJ9KTtpZihsIT1udWxsJiZsLmxlbmd0aD4wKXt2YXIgbj1sWzBdO2hbal09dC5mb3JtYXRWYWx1ZShrLG4udHlwZSl9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiUGFyYW1ldGVyICIraisiIGlzIG5vdCBkZWZpbmVkIGZvciBmdW5jdGlvbiBjYWxsICIrRisiISIpfX0pfWlmKG09PT0iR0VUIil7cmV0dXJuIHQucmVhZChGLGcsaCx0cnVlLHMsRSl9ZWxzZXtxLmVhY2goaCxmdW5jdGlvbihqLGspe2kuYWRkUXVlcnkoaixrKX0pO3I9dGhpcy5fY3JlYXRlUmVxdWVzdChpLnRvU3RyaW5nKCksbSxBKTtpZih0aGlzLmJVc2VCYXRjaCl7Qj10aGlzLl9jcmVhdGVCYXRjaFJlcXVlc3QoW3tfX2NoYW5nZVJlcXVlc3RzOltyXX1dLEEpO1I9dGhpcy5fc3VibWl0UmVxdWVzdChCLHRoaXMuYlVzZUJhdGNoLHMsRSx0cnVlKX1lbHNle1I9dGhpcy5fc3VibWl0UmVxdWVzdChyLHRoaXMuYlVzZUJhdGNoLHMsRSl9cmV0dXJuIFJ9fX07Zi5wcm90b3R5cGUucmVhZD1mdW5jdGlvbihwLFApe3ZhciByLHUsUixCLG8sbSxBLHMsRSx0PXRoaXM7aWYoUCYmdHlwZW9mKFApPT0ib2JqZWN0IiYmIShQIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkNvbnRleHQpKXtvPVAuY29udGV4dDttPVAudXJsUGFyYW1ldGVycztBPVAuYXN5bmMhPT1mYWxzZTtzPVAuc3VjY2VzcztFPVAuZXJyb3J9ZWxzZXtvPVA7bT1hcmd1bWVudHNbMl07QT1hcmd1bWVudHNbM10hPT1mYWxzZTtzPWFyZ3VtZW50c1s0XTtFPWFyZ3VtZW50c1s1XX1BPUEhPT1mYWxzZTt1PXRoaXMuX2NyZWF0ZVJlcXVlc3RVcmwocCxvLG0sdGhpcy5iVXNlQmF0Y2gpO3I9dGhpcy5fY3JlYXRlUmVxdWVzdCh1LCJHRVQiLEEpO2lmKHRoaXMuYlVzZUJhdGNoKXtCPXRoaXMuX2NyZWF0ZUJhdGNoUmVxdWVzdChbcl0sQSk7Uj10aGlzLl9zdWJtaXRSZXF1ZXN0KEIsdGhpcy5iVXNlQmF0Y2gscyxFLHRydWUpfWVsc2V7Uj10aGlzLl9zdWJtaXRSZXF1ZXN0KHIsdGhpcy5iVXNlQmF0Y2gscyxFKX1yZXR1cm4gUn07Zi5wcm90b3R5cGUuY3JlYXRlQmF0Y2hPcGVyYXRpb249ZnVuY3Rpb24ocCxtLEQsUCl7dmFyIG89e30sRSxzLGssZztxLmV4dGVuZChvLHRoaXMubUN1c3RvbUhlYWRlcnMsdGhpcy5vSGVhZGVycyk7aWYocS5zYXAuc3RhcnRzV2l0aChwLCIvIikpe3A9cC5zdWJzdHIoMSl9aWYoUCl7RT1QLnNFVGFnfWlmKG0hPSJHRVQiKXtFPXRoaXMuX2dldEVUYWcocCxELEUpO2lmKEUpe29bIklmLU1hdGNoIl09RX19aWYodGhpcy5iSlNPTil7aWYobSE9IkRFTEVURSImJm0hPSJHRVQiJiZ0aGlzLnNNYXhEYXRhU2VydmljZVZlcnNpb249PT0iMi4wIil7b1siQ29udGVudC1UeXBlIl09ImFwcGxpY2F0aW9uL2pzb24ifX1lbHNle29bIkNvbnRlbnQtVHlwZSJdPSJhcHBsaWNhdGlvbi9hdG9tK3htbCJ9dmFyIHI9e3JlcXVlc3RVcmk6cCxtZXRob2Q6bS50b1VwcGVyQ2FzZSgpLGhlYWRlcnM6b307aWYoRCl7ci5kYXRhPUR9aWYobSE9IkdFVCImJm0hPSJQT1NUIil7aWYocC5pbmRleE9mKCIvIikhPTApe3A9Jy8nK3B9cz10aGlzLl9nZXRPYmplY3QocCk7aWYocyl7az10aGlzLl9nZXRLZXkocyk7ci5rZXlzPXt9O3Iua2V5c1trXT10cnVlfX1lbHNlIGlmKG09PSJQT1NUIil7Zz10aGlzLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChwKTtpZihnKXtyLmVudGl0eVR5cGVzPXt9O3IuZW50aXR5VHlwZXNbZy5lbnRpdHlUeXBlXT10cnVlfX1yZXR1cm4gcn07Zi5wcm90b3R5cGUuYWRkQmF0Y2hSZWFkT3BlcmF0aW9ucz1mdW5jdGlvbihyKXtpZighcS5pc0FycmF5KHIpfHxyLmxlbmd0aDw9MCl7cS5zYXAubG9nLndhcm5pbmcoIk5vIGFycmF5IHdpdGggYmF0Y2ggb3BlcmF0aW9ucyBwcm92aWRlZCEiKTtyZXR1cm4gZmFsc2V9dmFyIHQ9dGhpcztxLmVhY2gocixmdW5jdGlvbihpLFIpe2lmKFIubWV0aG9kIT0iR0VUIil7cS5zYXAubG9nLndhcm5pbmcoIkJhdGNoIG9wZXJhdGlvbiBzaG91bGQgYmUgYSBHRVQgb3BlcmF0aW9uISIpO3JldHVybiBmYWxzZX10LmFCYXRjaE9wZXJhdGlvbnMucHVzaChSKX0pfTtmLnByb3RvdHlwZS5hZGRCYXRjaENoYW5nZU9wZXJhdGlvbnM9ZnVuY3Rpb24oZyl7aWYoIXEuaXNBcnJheShnKXx8Zy5sZW5ndGg8PTApe3JldHVybiBmYWxzZX1xLmVhY2goZyxmdW5jdGlvbihpLG8pe2lmKG8ubWV0aG9kIT0iUE9TVCImJm8ubWV0aG9kIT0iUFVUIiYmby5tZXRob2QhPSJNRVJHRSImJm8ubWV0aG9kIT0iREVMRVRFIil7cS5zYXAubG9nLndhcm5pbmcoIkJhdGNoIG9wZXJhdGlvbiBzaG91bGQgYmUgYSBQT1NUL1BVVC9NRVJHRS9ERUxFVEUgb3BlcmF0aW9uISIpO3JldHVybiBmYWxzZX19KTt0aGlzLmFCYXRjaE9wZXJhdGlvbnMucHVzaCh7X19jaGFuZ2VSZXF1ZXN0czpnfSl9O2YucHJvdG90eXBlLmNsZWFyQmF0Y2g9ZnVuY3Rpb24oKXt0aGlzLmFCYXRjaE9wZXJhdGlvbnM9W119O2YucHJvdG90eXBlLnN1Ym1pdEJhdGNoPWZ1bmN0aW9uKHMsRSxBKXt2YXIgcix1LFIsdD10aGlzO2Z1bmN0aW9uIF8oRCxoKXtpZihzKXtzKEQsaCx0Ll9nZXRCYXRjaEVycm9ycyhEKSl9fWlmKCEodHlwZW9mKHMpPT0iZnVuY3Rpb24iKSl7dmFyIG89QTt2YXIgZz1FO0E9cztzPWc7RT1vfUE9QSE9PWZhbHNlO2lmKHRoaXMuYUJhdGNoT3BlcmF0aW9ucy5sZW5ndGg8PTApe3Euc2FwLmxvZy53YXJuaW5nKCJObyBiYXRjaCBvcGVyYXRpb25zIGluIGJhdGNoLiBObyByZXF1ZXN0IHdpbGwgYmUgdHJpZ2dlcmVkISIpO3JldHVybiBmYWxzZX1yPXRoaXMuX2NyZWF0ZUJhdGNoUmVxdWVzdCh0aGlzLmFCYXRjaE9wZXJhdGlvbnMsQSk7Uj10aGlzLl9zdWJtaXRSZXF1ZXN0KHIsdHJ1ZSxfLEUsZmFsc2UpO3RoaXMuY2xlYXJCYXRjaCgpO3JldHVybiBSfTtmLnByb3RvdHlwZS5nZXRTZXJ2aWNlTWV0YWRhdGE9ZnVuY3Rpb24oKXtpZih0aGlzLm9NZXRhZGF0YSYmdGhpcy5vTWV0YWRhdGEuZ2V0U2VydmljZU1ldGFkYXRhKXtyZXR1cm4gdGhpcy5vTWV0YWRhdGEuZ2V0U2VydmljZU1ldGFkYXRhKCl9fTtmLnByb3RvdHlwZS5nZXRTZXJ2aWNlQW5ub3RhdGlvbnM9ZnVuY3Rpb24oKXtpZih0aGlzLm9Bbm5vdGF0aW9ucyYmdGhpcy5vQW5ub3RhdGlvbnMuZ2V0QW5ub3RhdGlvbnNEYXRhKXtyZXR1cm4gdGhpcy5vQW5ub3RhdGlvbnMuZ2V0QW5ub3RhdGlvbnNEYXRhKCl9fTtmLnByb3RvdHlwZS5zdWJtaXRDaGFuZ2VzPWZ1bmN0aW9uKHMsRSxwKXt2YXIgcixQLHQ9dGhpcyxnLGgsVCxtLFMsaztpZih0aGlzLnNDaGFuZ2VLZXkpe2c9dGhpcy5zQ2hhbmdlS2V5LnJlcGxhY2UodGhpcy5zU2VydmljZVVybCwnJyk7Uz10aGlzLl9nZXRPYmplY3QoZyk7UD1TO2lmKHEuaXNQbGFpbk9iamVjdChTKSl7UD1xLmV4dGVuZCh0cnVlLHt9LFMpO2lmKFAuX19tZXRhZGF0YSl7VD1QLl9fbWV0YWRhdGEudHlwZTttPVAuX19tZXRhZGF0YS5ldGFnO2RlbGV0ZSBQLl9fbWV0YWRhdGE7aWYoVHx8bSl7UC5fX21ldGFkYXRhPXt9fWlmKFQpe1AuX19tZXRhZGF0YS50eXBlPVR9aWYoISFtKXtQLl9fbWV0YWRhdGEuZXRhZz1tfX1xLmVhY2goUCxmdW5jdGlvbihqLGwpe2lmKGwmJmwuX19kZWZlcnJlZCl7ZGVsZXRlIFBbal19fSk7dmFyIG89dGhpcy5vTWV0YWRhdGEuX2dldEVudGl0eVR5cGVCeVBhdGgoZyk7aWYobyl7dmFyIG49dGhpcy5vTWV0YWRhdGEuX2dldE5hdmlnYXRpb25Qcm9wZXJ0eU5hbWVzKG8pO3EuZWFjaChuLGZ1bmN0aW9uKEksTil7ZGVsZXRlIFBbTl19KX1QPXRoaXMuX3JlbW92ZVJlZmVyZW5jZXMoUCl9aWYocCYmcC5zRVRhZyl7aD1wLnNFVGFnfXI9dGhpcy5fY3JlYXRlUmVxdWVzdCh0aGlzLnNDaGFuZ2VLZXksIk1FUkdFIix0cnVlLFAsaCk7ci5rZXlzPXt9O2lmKFMpe2s9dGhpcy5fZ2V0S2V5KFMpO3Iua2V5c1trXT10cnVlfXRoaXMub1JlcXVlc3RRdWV1ZVt0aGlzLnNDaGFuZ2VLZXldPXJ9aWYodGhpcy5iVXNlQmF0Y2gpe3ZhciBpPVtdO3EuZWFjaCh0aGlzLm9SZXF1ZXN0UXVldWUsZnVuY3Rpb24oayxqKXtqLnJlcXVlc3RVcmk9ai5yZXF1ZXN0VXJpLnJlcGxhY2UodC5zU2VydmljZVVybCsnLycsJycpO2ouZGF0YS5fYkNyZWF0ZT9kZWxldGUgai5kYXRhLl9iQ3JlYXRlOmZhbHNlO2kucHVzaChqKX0pO3I9dGhpcy5fY3JlYXRlQmF0Y2hSZXF1ZXN0KFt7X19jaGFuZ2VSZXF1ZXN0czppfV0sdHJ1ZSk7dGhpcy5fc3VibWl0UmVxdWVzdChyLHRoaXMuYlVzZUJhdGNoLHMsRSx0cnVlKX1lbHNle3EuZWFjaCh0aGlzLm9SZXF1ZXN0UXVldWUsZnVuY3Rpb24oayxqKXtqLmRhdGEuX2JDcmVhdGU/ZGVsZXRlIGouZGF0YS5fYkNyZWF0ZTpmYWxzZTt0Ll9zdWJtaXRSZXF1ZXN0KGosdGhpcy5iVXNlQmF0Y2gscyxFLHRydWUpfSl9cmV0dXJuIHVuZGVmaW5lZH07Zi5wcm90b3R5cGUuX3VwZGF0ZVJlcXVlc3RRdWV1ZT1mdW5jdGlvbihyLEIpe3ZhciBnLGgsbyx0PXRoaXM7aWYoQil7Zz1yLmRhdGEuX19iYXRjaFJlcXVlc3RzO2lmKGcpe2Zvcih2YXIgaT0wO2k8Zy5sZW5ndGg7aSsrKXtoPWdbaV0uX19jaGFuZ2VSZXF1ZXN0cztpZihoKXtmb3IodmFyIGo9MDtqPGgubGVuZ3RoO2orKyl7bz1oW2pdO3EuZWFjaCh0aGlzLm9SZXF1ZXN0UXVldWUsZnVuY3Rpb24oayxsKXtpZihsPT09byYmayE9PXQuc0NoYW5nZUtleSl7ZGVsZXRlIHQub1JlcXVlc3RRdWV1ZVtrXTtkZWxldGUgdC5vRGF0YVtrXTtkZWxldGUgdC5tQ29udGV4dHNbIi8iK2tdfWVsc2UgaWYodC5zQ2hhbmdlS2V5JiZrPT09dC5zQ2hhbmdlS2V5KXtkZWxldGUgdC5vUmVxdWVzdFF1ZXVlW2tdO3Quc0NoYW5nZUtleT1udWxsfX0pfX19fX1lbHNle3EuZWFjaCh0aGlzLm9SZXF1ZXN0UXVldWUsZnVuY3Rpb24oayxsKXtpZihsPT09ciYmayE9PXQuc0NoYW5nZUtleSl7ZGVsZXRlIHQub1JlcXVlc3RRdWV1ZVtrXTtkZWxldGUgdC5vRGF0YVtrXTtkZWxldGUgdC5tQ29udGV4dHNbIi8iK2tdfWVsc2UgaWYodC5zQ2hhbmdlS2V5JiZrPT09dC5zQ2hhbmdlS2V5KXtkZWxldGUgdC5vUmVxdWVzdFF1ZXVlW2tdO3Quc0NoYW5nZUtleT1udWxsfX0pfX07Zi5wcm90b3R5cGUucmVzZXRDaGFuZ2VzPWZ1bmN0aW9uKHMsRSl7dmFyIHA7aWYodGhpcy5zQ2hhbmdlS2V5KXtwPXRoaXMuc0NoYW5nZUtleS5yZXBsYWNlKHRoaXMuc1NlcnZpY2VVcmwsJycpO3RoaXMuX2xvYWREYXRhKHAsbnVsbCxzLEUpfX07Zi5wcm90b3R5cGUuc2V0UHJvcGVydHk9ZnVuY3Rpb24ocCx2LG8pe3ZhciBQLEU9e30sRD17fSxzPXRoaXMuX2NyZWF0ZVJlcXVlc3RVcmwocCxvKSxnPXAuc3Vic3RyaW5nKDAscC5sYXN0SW5kZXhPZigiLyIpKSxrLGgsbT17fSxqPWZhbHNlO2lmKCF0aGlzLnJlc29sdmUocCxvKSl7cmV0dXJuIGZhbHNlfXM9cy5yZXBsYWNlKHRoaXMuc1NlcnZpY2VVcmwrJy8nLCcnKTtzPXMuc3Vic3RyaW5nKDAscy5pbmRleE9mKCIvIikpO3M9dGhpcy5zU2VydmljZVVybCsnLycrcztQPXAuc3Vic3RyKHAubGFzdEluZGV4T2YoIi8iKSsxKTtEPXRoaXMuX2dldE9iamVjdChnLG8pO2lmKCFEKXtyZXR1cm4gZmFsc2V9aD1nLnNwbGl0KCIvIik7Zm9yKHZhciBpPWgubGVuZ3RoLTE7aT49MDtpLS0pe0U9dGhpcy5fZ2V0T2JqZWN0KGguam9pbigiLyIpLG8pO2lmKEUpe2s9dGhpcy5fZ2V0S2V5KEUpO2lmKGspe2JyZWFrfX1oLnNwbGljZShpLTEsMSl9aWYoIWspe2s9dGhpcy5fZ2V0S2V5KG8pfWlmKGspe21ba109dHJ1ZX1pZihELl9iQ3JlYXRlKXtEW1BdPXY7aj10cnVlO3RoaXMuY2hlY2tVcGRhdGUoZmFsc2UsbSl9ZWxzZXtpZighdGhpcy5zQ2hhbmdlS2V5KXt0aGlzLnNDaGFuZ2VLZXk9c31pZih0aGlzLnNDaGFuZ2VLZXk9PXMpe0RbUF09djtqPXRydWU7dGhpcy5jaGVja1VwZGF0ZShmYWxzZSxtKX1lbHNle3RoaXMuZmlyZVJlamVjdENoYW5nZSh7cmVqZWN0ZWRWYWx1ZTp2LG9sZFZhbHVlOkRbUF19KX19cmV0dXJuIGp9O2YucHJvdG90eXBlLl9pc0hlYWRlclByaXZhdGU9ZnVuY3Rpb24oaCl7c3dpdGNoKGgudG9Mb3dlckNhc2UoKSl7Y2FzZSJhY2NlcHQiOmNhc2UiYWNjZXB0LWxhbmd1YWdlIjpjYXNlIm1heGRhdGFzZXJ2aWNldmVyc2lvbiI6Y2FzZSJkYXRhc2VydmljZXZlcnNpb24iOnJldHVybiB0cnVlO2JyZWFrO2Nhc2UieC1jc3JmLXRva2VuIjpyZXR1cm4gdGhpcy5iVG9rZW5IYW5kbGluZzticmVhaztkZWZhdWx0OnJldHVybiBmYWxzZX19O2YucHJvdG90eXBlLnNldEhlYWRlcnM9ZnVuY3Rpb24oaCl7dmFyIG09e30sdD10aGlzO2lmKGgpe3EuZWFjaChoLGZ1bmN0aW9uKEgscyl7aWYodC5faXNIZWFkZXJQcml2YXRlKEgpKXtxLnNhcC5sb2cud2FybmluZygiTm90IGFsbG93ZWQgdG8gbW9kaWZ5IHByaXZhdGUgaGVhZGVyOiAiK0gpfWVsc2V7bVtIXT1zfX0pO3RoaXMubUN1c3RvbUhlYWRlcnM9bX1lbHNle3RoaXMubUN1c3RvbUhlYWRlcnM9e319fTtmLnByb3RvdHlwZS5nZXRIZWFkZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIHEuZXh0ZW5kKHt9LHRoaXMubUN1c3RvbUhlYWRlcnMsdGhpcy5vSGVhZGVycyl9O2YucHJvdG90eXBlLl9nZXRIZWFkZXI9ZnVuY3Rpb24oRixoKXt2YXIgSDtmb3IoSCBpbiBoKXtpZihILnRvTG93ZXJDYXNlKCk9PT1GLnRvTG93ZXJDYXNlKCkpe3JldHVybiBoW0hdfX1yZXR1cm4gbnVsbH07Zi5wcm90b3R5cGUuaGFzUGVuZGluZ0NoYW5nZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zQ2hhbmdlS2V5IT1udWxsfTtmLnByb3RvdHlwZS51cGRhdGVCaW5kaW5ncz1mdW5jdGlvbihGKXt0aGlzLmNoZWNrVXBkYXRlKEYpfTtmLnByb3RvdHlwZS5mb3JjZU5vQ2FjaGU9ZnVuY3Rpb24oRil7dGhpcy5iQ2FjaGU9IUZ9O2YucHJvdG90eXBlLnNldFRva2VuSGFuZGxpbmdFbmFibGVkPWZ1bmN0aW9uKHQpe3RoaXMuYlRva2VuSGFuZGxpbmc9dH07Zi5wcm90b3R5cGUuc2V0VXNlQmF0Y2g9ZnVuY3Rpb24odSl7dGhpcy5iVXNlQmF0Y2g9dX07Zi5wcm90b3R5cGUuZm9ybWF0VmFsdWU9ZnVuY3Rpb24odix0KXtpZighdGhpcy5vRGF0ZVRpbWVGb3JtYXQpe3RoaXMub0RhdGVUaW1lRm9ybWF0PXNhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0LmdldERhdGVJbnN0YW5jZSh7cGF0dGVybjoiJ2RhdGV0aW1lJycneXl5eS1NTS1kZCdUJ0hIOm1tOnNzJycifSk7dGhpcy5vRGF0ZVRpbWVPZmZzZXRGb3JtYXQ9c2FwLnVpLmNvcmUuZm9ybWF0LkRhdGVGb3JtYXQuZ2V0RGF0ZUluc3RhbmNlKHtwYXR0ZXJuOiInZGF0ZXRpbWVvZmZzZXQnJyd5eXl5LU1NLWRkJ1QnSEg6bW06c3MnWicnJyJ9KTt0aGlzLm9UaW1lRm9ybWF0PXNhcC51aS5jb3JlLmZvcm1hdC5EYXRlRm9ybWF0LmdldFRpbWVJbnN0YW5jZSh7cGF0dGVybjoiJ3RpbWUnJydISDptbTpzcycnIn0pfXZhciBWO3N3aXRjaCh0KXtjYXNlIkVkbS5TdHJpbmciOlY9IiciK1N0cmluZyh2KS5yZXBsYWNlKC8nL2csIicnIikrIiciO2JyZWFrO2Nhc2UiRWRtLlRpbWUiOlY9InRpbWUnIit2KyInIjticmVhaztjYXNlIkVkbS5EYXRlVGltZSI6Vj10aGlzLm9EYXRlVGltZUZvcm1hdC5mb3JtYXQobmV3IERhdGUodiksdHJ1ZSk7YnJlYWs7Y2FzZSJFZG0uRGF0ZVRpbWVPZmZzZXQiOlY9dGhpcy5vRGF0ZVRpbWVPZmZzZXRGb3JtYXQuZm9ybWF0KG5ldyBEYXRlKHYpLHRydWUpO2JyZWFrO2Nhc2UiRWRtLkd1aWQiOlY9Imd1aWQnIit2KyInIjticmVhaztjYXNlIkVkbS5EZWNpbWFsIjpWPXYrIk0iO2JyZWFrO2Nhc2UiRWRtLkludDY0IjpWPXYrIkwiO2JyZWFrO2Nhc2UiRWRtLlNpbmdsZSI6Vj12KyJmIjticmVhaztjYXNlIkVkbS5CaW5hcnkiOlY9ImJpbmFyeSciK3YrIiciO2JyZWFrO2RlZmF1bHQ6Vj1uZXcgU3RyaW5nKHYpO2JyZWFrfXJldHVybiBWfTtmLnByb3RvdHlwZS5kZWxldGVDcmVhdGVkRW50cnk9ZnVuY3Rpb24obyl7aWYobyl7dmFyIHA9by5nZXRQYXRoKCk7ZGVsZXRlIHRoaXMubUNvbnRleHRzW3BdO2lmKHEuc2FwLnN0YXJ0c1dpdGgocCwiLyIpKXtwPXAuc3Vic3RyKDEpfWRlbGV0ZSB0aGlzLm9SZXF1ZXN0UXVldWVbcF07ZGVsZXRlIHRoaXMub0RhdGFbcF19fTtmLnByb3RvdHlwZS5jcmVhdGVFbnRyeT1mdW5jdGlvbihwLFApe3ZhciBFPXt9LGssdSxyO2lmKCFxLnNhcC5zdGFydHNXaXRoKHAsIi8iKSl7cD0iLyIrcH12YXIgbz10aGlzLm9NZXRhZGF0YS5fZ2V0RW50aXR5VHlwZUJ5UGF0aChwKTtpZighbyl7cmV0dXJuIHVuZGVmaW5lZH1pZih0eXBlb2YgUD09PSJvYmplY3QiJiYhcS5pc0FycmF5KFApKXtFPVB9ZWxzZXtmb3IodmFyIGk9MDtpPG8ucHJvcGVydHkubGVuZ3RoO2krKyl7dmFyIGc9by5wcm9wZXJ0eVtpXTt2YXIgdD1nLnR5cGUuc3BsaXQoJy4nKTt2YXIgaD1xLmluQXJyYXkoZy5uYW1lLFApPi0xO2lmKCFQfHxoKXtFW2cubmFtZV09dGhpcy5fY3JlYXRlUHJvcGVydHlWYWx1ZSh0KTtpZihoKXtQLnNwbGljZShQLmluZGV4T2YoZy5uYW1lKSwxKX19fWlmKFApe319RS5fYkNyZWF0ZT10cnVlO2s9cC5zdWJzdHJpbmcoMSkrIignIitxLnNhcC51aWQoKSsiJykiO3RoaXMub0RhdGFba109RTtFLl9fbWV0YWRhdGE9e3R5cGU6IiIrby5lbnRpdHlUeXBlfTt1PXRoaXMuX2NyZWF0ZVJlcXVlc3RVcmwocCk7cj10aGlzLl9jcmVhdGVSZXF1ZXN0KHUsIlBPU1QiLHRydWUsRSk7ci5lbnRpdHlUeXBlcz17fTtyLmVudGl0eVR5cGVzW28uZW50aXR5VHlwZV09dHJ1ZTt0aGlzLm9SZXF1ZXN0UXVldWVba109cjtyZXR1cm4gdGhpcy5nZXRDb250ZXh0KCIvIitrKX07Zi5wcm90b3R5cGUuX2NyZWF0ZVByb3BlcnR5VmFsdWU9ZnVuY3Rpb24odCl7dmFyIG49dFswXTt2YXIgVD10WzFdO2lmKG4udG9VcHBlckNhc2UoKSE9PSdFRE0nKXt2YXIgbz17fTt2YXIgZz10aGlzLm9NZXRhZGF0YS5fZ2V0T2JqZWN0TWV0YWRhdGEoImNvbXBsZXhUeXBlIixULG4pO2Zvcih2YXIgaT0wO2k8Zy5wcm9wZXJ0eS5sZW5ndGg7aSsrKXt2YXIgcD1nLnByb3BlcnR5W2ldO3ZhciB0PXAudHlwZS5zcGxpdCgnLicpO29bcC5uYW1lXT10aGlzLl9jcmVhdGVQcm9wZXJ0eVZhbHVlKHQpfXJldHVybiBvfWVsc2V7cmV0dXJuIHRoaXMuX2dldERlZmF1bHRQcm9wZXJ0eVZhbHVlKFQsbil9fTtmLnByb3RvdHlwZS5fZ2V0RGVmYXVsdFByb3BlcnR5VmFsdWU9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdW5kZWZpbmVkfTtmLnByb3RvdHlwZS5fbm9ybWFsaXplUGF0aD1mdW5jdGlvbihwLG8pe2lmKHAuaW5kZXhPZignPycpIT0tMSl7cD1wLnN1YnN0cigwLHAuaW5kZXhPZignPycpKX1pZighbyYmIXEuc2FwLnN0YXJ0c1dpdGgocCwiLyIpKXtwPScvJytwO3Euc2FwLmxvZy53YXJuaW5nKCJzUGF0aCBzaG91bGQgYmUgYWJzb2x1dGUgaWYgbm8gQ29udGV4dCBpcyBzZXQiKX1yZXR1cm4gdGhpcy5yZXNvbHZlKHAsbyl9O2YucHJvdG90eXBlLnNldFJlZnJlc2hBZnRlckNoYW5nZT1mdW5jdGlvbihyKXt0aGlzLmJSZWZyZXNoQWZ0ZXJDaGFuZ2U9cn07Zi5wcm90b3R5cGUuaXNMaXN0PWZ1bmN0aW9uKHAsbyl7dmFyIHA9dGhpcy5yZXNvbHZlKHAsbyk7cmV0dXJuIHAmJnAuc3Vic3RyKHAubGFzdEluZGV4T2YoIi8iKSkuaW5kZXhPZigiKCIpPT09LTF9O2YucHJvdG90eXBlLl9yZXF1ZXN0PWZ1bmN0aW9uKHIscyxFLGgsSCxtKXtpZih0aGlzLmJEZXN0cm95ZWQpe3JldHVybnthYm9ydDpmdW5jdGlvbigpe319fXZhciB0PXRoaXM7ZnVuY3Rpb24gdyhnKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgaT1xLmluQXJyYXkoUix0LmFQZW5kaW5nUmVxdWVzdEhhbmRsZXMpO2lmKGk+LTEpe3QuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlcy5zcGxpY2UoaSwxKX1pZighKFImJlIuYlN1cHByZXNzRXJyb3JIYW5kbGVyQ2FsbCkpe2cuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19dmFyIFI9T0RhdGEucmVxdWVzdChyLHcoc3x8T0RhdGEuZGVmYXVsdFN1Y2Nlc3MpLHcoRXx8T0RhdGEuZGVmYXVsdEVycm9yKSxoLEgsbSk7aWYoci5hc3luYyE9PWZhbHNlKXt0aGlzLmFQZW5kaW5nUmVxdWVzdEhhbmRsZXMucHVzaChSKX1yZXR1cm4gUn07Zi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe2lmKHRoaXMuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlcyl7Zm9yKHZhciBpPXRoaXMuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlcy5sZW5ndGgtMTtpPj0wO2ktLSl7dmFyIHI9dGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzW2ldO2lmKHImJnIuYWJvcnQpe3IuYlN1cHByZXNzRXJyb3JIYW5kbGVyQ2FsbD10cnVlO3IuYWJvcnQoKX19ZGVsZXRlIHRoaXMuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlc31pZih0aGlzLm9NZXRhZGF0YSl7dGhpcy5vTWV0YWRhdGEuZGVzdHJveSgpO2RlbGV0ZSB0aGlzLm9NZXRhZGF0YX1pZih0aGlzLm9Bbm5vdGF0aW9ucyl7dGhpcy5vQW5ub3RhdGlvbnMuZGVzdHJveSgpO2RlbGV0ZSB0aGlzLm9Bbm5vdGF0aW9uc31NLnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIGZ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VNb2RlbCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5yZXNvdXJjZS5SZXNvdXJjZU1vZGVsJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL21vZGVsL3Jlc291cmNlL1Jlc291cmNlTW9kZWwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvbW9kZWwvTW9kZWwnLCcuL1Jlc291cmNlUHJvcGVydHlCaW5kaW5nJ10sZnVuY3Rpb24ocSxNLFIpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1NLmV4dGVuZCgic2FwLnVpLm1vZGVsLnJlc291cmNlLlJlc291cmNlTW9kZWwiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihkKXtNLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnNEZWZhdWx0QmluZGluZ01vZGU9c2FwLnVpLm1vZGVsLkJpbmRpbmdNb2RlLk9uZVRpbWU7dGhpcy5tU3VwcG9ydGVkQmluZGluZ01vZGVzPXsiT25lV2F5IjpmYWxzZSwiVHdvV2F5IjpmYWxzZSwiT25lVGltZSI6dHJ1ZX07dGhpcy5vRGF0YT1kO2lmKGQmJihkLmJ1bmRsZVVybHx8ZC5idW5kbGVOYW1lKSl7dGhpcy5SZXNvdXJjZUJ1bmRsZT10aGlzLmxvYWRSZXNvdXJjZUJ1bmRsZShkKX1lbHNle3Rocm93IG5ldyBFcnJvcigiTmVpdGhlciBidW5kbGVVcmwgbm9yIGJ1bmRsZU5hbWUgYXJlIGdpdmVuLiBPbmUgb2YgdGhlc2UgaXMgbWFuZGF0b3J5LiIpfX0sbWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJnZXRSZXNvdXJjZUJ1bmRsZSJdfX0pO2EucHJvdG90eXBlLmxvYWRSZXNvdXJjZUJ1bmRsZT1mdW5jdGlvbihkKXt2YXIgYz1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKSxyLHUsbCxpO2w9ZC5idW5kbGVMb2NhbGU7aWYoIWwpe2w9Yy5nZXRMYW5ndWFnZSgpfWk9Yy5nZXRPcmlnaW5JbmZvKCk7dT1kLmJ1bmRsZVVybDtpZihkLmJ1bmRsZU5hbWUpe3U9cS5zYXAuZ2V0TW9kdWxlUGF0aChkLmJ1bmRsZU5hbWUsJy5wcm9wZXJ0aWVzJyl9cj1xLnNhcC5yZXNvdXJjZXMoe3VybDp1LGxvY2FsZTpsLGluY2x1ZGVJbmZvOml9KTtyZXR1cm4gcn07YS5wcm90b3R5cGUuZW5oYW5jZT1mdW5jdGlvbihkKXt2YXIgYz10aGlzLmxvYWRSZXNvdXJjZUJ1bmRsZShkKTtpZihjKXt0aGlzLlJlc291cmNlQnVuZGxlLl9lbmhhbmNlKGMpfX07YS5wcm90b3R5cGUuYmluZFByb3BlcnR5PWZ1bmN0aW9uKHApe3ZhciBiPW5ldyBSKHRoaXMscCk7cmV0dXJuIGJ9O2EucHJvdG90eXBlLmdldFByb3BlcnR5PWZ1bmN0aW9uKHApe3JldHVybiB0aGlzLlJlc291cmNlQnVuZGxlLmdldFRleHQocCl9O2EucHJvdG90eXBlLmdldFJlc291cmNlQnVuZGxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuUmVzb3VyY2VCdW5kbGV9O2EucHJvdG90eXBlLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2U9ZnVuY3Rpb24oKXtpZih0aGlzLm9EYXRhJiYodGhpcy5vRGF0YS5idW5kbGVVcmx8fHRoaXMub0RhdGEuYnVuZGxlTmFtZSkpe3RoaXMuUmVzb3VyY2VCdW5kbGU9dGhpcy5sb2FkUmVzb3VyY2VCdW5kbGUodGhpcy5vRGF0YSl9fTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC54bWwuWE1MUHJvcGVydHlCaW5kaW5nJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLm1vZGVsLnhtbC5YTUxQcm9wZXJ0eUJpbmRpbmcnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwveG1sL1hNTFByb3BlcnR5QmluZGluZyIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9tb2RlbC9DbGllbnRQcm9wZXJ0eUJpbmRpbmcnXSxmdW5jdGlvbihxLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgWD1DLmV4dGVuZCgic2FwLnVpLm1vZGVsLnhtbC5YTUxQcm9wZXJ0eUJpbmRpbmciKTtYLnByb3RvdHlwZS5zZXRWYWx1ZT1mdW5jdGlvbih2KXtpZih0aGlzLm9WYWx1ZSE9dil7dGhpcy5vTW9kZWwuc2V0UHJvcGVydHkodGhpcy5zUGF0aCx2LHRoaXMub0NvbnRleHQpfX07WC5wcm90b3R5cGUuY2hlY2tVcGRhdGU9ZnVuY3Rpb24oZil7dmFyIHY9dGhpcy5fZ2V0VmFsdWUoKTtpZih2IT09dGhpcy5vVmFsdWV8fGYpe3RoaXMub1ZhbHVlPXY7dGhpcy5fZmlyZUNoYW5nZSh7cmVhc29uOnNhcC51aS5tb2RlbC5DaGFuZ2VSZWFzb24uQ2hhbmdlfSl9fTtyZXR1cm4gWH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2Jhc2UvTWFuYWdlZE9iamVjdCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQmluZGluZ1BhcnNlcicsJy4vRGF0YVR5cGUnLCcuL0V2ZW50UHJvdmlkZXInLCcuL01hbmFnZWRPYmplY3RNZXRhZGF0YScsJ3NhcC91aS9tb2RlbC9Db21wb3NpdGVCaW5kaW5nJywnc2FwL3VpL21vZGVsL0NvbnRleHRCaW5kaW5nJywnc2FwL3VpL21vZGVsL01vZGVsJywnc2FwL3VpL21vZGVsL1R5cGUnLCdqcXVlcnkuc2FwLmFjdCcsJ2pxdWVyeS5zYXAuc2NyaXB0JywnanF1ZXJ5LnNhcC5zdHJpbmdzJ10sZnVuY3Rpb24ocSxCLEQsRSxNLEMsYixjLFQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD1FLmV4dGVuZCgic2FwLnVpLmJhc2UuTWFuYWdlZE9iamVjdCIse21ldGFkYXRhOnsiYWJzdHJhY3QiOnRydWUscHVibGljTWV0aG9kczpbImdldElkIiwiZ2V0TWV0YWRhdGEiLCJnZXRNb2RlbCIsInNldE1vZGVsIiwiaGFzTW9kZWwiLCJiaW5kUHJvcGVydHkiLCJ1bmJpbmRQcm9wZXJ0eSIsImJpbmRBZ2dyZWdhdGlvbiIsInVuYmluZEFnZ3JlZ2F0aW9uIiwiYmluZE9iamVjdCIsInVuYmluZE9iamVjdCIsImdldE9iamVjdEJpbmRpbmciXSxsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7fSxhZ2dyZWdhdGlvbnM6e30sYXNzb2NpYXRpb25zOnt9LGV2ZW50czp7InZhbGlkYXRpb25TdWNjZXNzIjp7ZW5hYmxlRXZlbnRCdWJibGluZzp0cnVlfSwidmFsaWRhdGlvbkVycm9yIjp7ZW5hYmxlRXZlbnRCdWJibGluZzp0cnVlfSwicGFyc2VFcnJvciI6e2VuYWJsZUV2ZW50QnViYmxpbmc6dHJ1ZX0sImZvcm1hdEVycm9yIjp7ZW5hYmxlRXZlbnRCdWJibGluZzp0cnVlfX19LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKGkscyxTKXtFLmFwcGx5KHRoaXMpO2lmKHR5cGVvZihpKSE9InN0cmluZyImJmFyZ3VtZW50cy5sZW5ndGg+MCl7Uz1zO3M9aTtpZihzJiZzLmlkKXtpPXNbImlkIl19ZWxzZXtpPW51bGx9fWlmKCFpKXtpPXRoaXMuZ2V0TWV0YWRhdGEoKS51aWQoKXx8cS5zYXAudWlkKCl9ZWxzZXt2YXIgcD1kLl9mbklkUHJlcHJvY2Vzc29yO2k9KHA/cC5jYWxsKHRoaXMsaSk6aSk7dmFyIHQ9RC5nZXRUeXBlKCJzYXAudWkuY29yZS5JRCIpO2lmKCF0LmlzVmFsaWQoaSkpe3Rocm93IG5ldyBFcnJvcigiXCIiK2krIlwiIGlzIG5vdCBhIHZhbGlkIElELiIpfX10aGlzLnNJZD1pO3RoaXMubVByb3BlcnRpZXM9dGhpcy5nZXRNZXRhZGF0YSgpLmNyZWF0ZVByb3BlcnR5QmFnKCk7dGhpcy5tQWdncmVnYXRpb25zPXt9O3RoaXMubUFzc29jaWF0aW9ucz17fTt0aGlzLm1NZXRob2RzPXt9O3RoaXMub1BhcmVudD1udWxsO3RoaXMuYURlbGVnYXRlcz1bXTt0aGlzLmFCZWZvcmVEZWxlZ2F0ZXM9W107dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlPTA7dGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXM9e29Nb2RlbHM6e30sb0JpbmRpbmdDb250ZXh0czp7fX07dGhpcy5vTW9kZWxzPXt9O3RoaXMub0JpbmRpbmdDb250ZXh0cz17fTt0aGlzLm1CaW5kaW5nSW5mb3M9e307dGhpcy5zQmluZGluZ1BhdGg9bnVsbDt0aGlzLm1CaW5kaW5nUGFyYW1ldGVycz1udWxsO3RoaXMubUJvdW5kT2JqZWN0cz17fTt0aGlzLl9zT3duZXJJZD1kLl9zT3duZXJJZDt0cnl7aWYodGhpcy5yZWdpc3Rlcil0aGlzLnJlZ2lzdGVyKCk7aWYodGhpcy5faW5pdENvbXBvc2l0ZVN1cHBvcnQpe3RoaXMuX2luaXRDb21wb3NpdGVTdXBwb3J0KHMpfWlmKHRoaXMuaW5pdCl7dGhpcy5pbml0KCl9dGhpcy5hcHBseVNldHRpbmdzKHMsUyl9Y2F0Y2goZSl7aWYodGhpcy5kZXJlZ2lzdGVyKXRoaXMuZGVyZWdpc3RlcigpO3Rocm93IGV9fX0sTSk7ZC5jcmVhdGU9ZnVuY3Rpb24odixrKXtpZighdnx8diBpbnN0YW5jZW9mIGR8fHR5cGVvZiB2IT09Im9iamVjdCJ8fHYgaW5zdGFuY2VvZiBTdHJpbmcpe3JldHVybiB2fWZ1bmN0aW9uIGcodCl7aWYodHlwZW9mIHQ9PT0iZnVuY3Rpb24iKXtyZXR1cm4gdH1pZih0eXBlb2YgdD09PSJzdHJpbmciKXtyZXR1cm4gcS5zYXAuZ2V0T2JqZWN0KHQpfX12YXIgZj1nKHYuVHlwZSl8fGcoayYmay50eXBlKTtpZih0eXBlb2YgZj09PSJmdW5jdGlvbiIpe3JldHVybiBuZXcgZih2KX12YXIgbT0iRG9uJ3Qga25vdyBob3cgdG8gY3JlYXRlIGEgTWFuYWdlZE9iamVjdCBmcm9tICIrdisiICgiKyh0eXBlb2YgdikrIikiO3Euc2FwLmxvZy5mYXRhbChtKTt0aHJvdyBuZXcgRXJyb3IobSl9O2QuX2ZuSWRQcmVwcm9jZXNzb3I9bnVsbDtkLl9mblNldHRpbmdzUHJlcHJvY2Vzc29yPW51bGw7ZC5ydW5XaXRoUHJlcHJvY2Vzc29ycz1mdW5jdGlvbihmLHApe3ZhciBvPXtpZDp0aGlzLl9mbklkUHJlcHJvY2Vzc29yLHNldHRpbmdzOnRoaXMuX2ZuU2V0dGluZ3NQcmVwcm9jZXNzb3J9O3A9cHx8e307dGhpcy5fZm5JZFByZXByb2Nlc3Nvcj1wLmlkO3RoaXMuX2ZuU2V0dGluZ3NQcmVwcm9jZXNzb3I9cC5zZXR0aW5nczt0cnl7dmFyIHI9Zi5jYWxsKCk7dGhpcy5fZm5JZFByZXByb2Nlc3Nvcj1vLmlkO3RoaXMuX2ZuU2V0dGluZ3NQcmVwcm9jZXNzb3I9by5zZXR0aW5ncztyZXR1cm4gcn1jYXRjaChlKXt0aGlzLl9mbklkUHJlcHJvY2Vzc29yPW8uaWQ7dGhpcy5fZm5TZXR0aW5nc1ByZXByb2Nlc3Nvcj1vLnNldHRpbmdzO3Rocm93IGV9fTtkLmdldE93bmVySWRGb3I9ZnVuY3Rpb24obyl7cmV0dXJuIG8mJm8uX3NPd25lcklkfTtkLnJ1bldpdGhPd25lcj1mdW5jdGlvbihmLG8pe3ZhciBhPWQuX3NPd25lcklkO3RyeXtkLl9zT3duZXJJZD1vLmdldElkKCk7dmFyIHI9Zi5jYWxsKCk7ZC5fc093bmVySWQ9YTtyZXR1cm4gcn1jYXRjaChlKXtkLl9zT3duZXJJZD1hO3Rocm93IGV9fTtkLnByb3RvdHlwZS5hcHBseVNldHRpbmdzPWZ1bmN0aW9uKHMsUyl7aWYoIXN8fHEuaXNFbXB0eU9iamVjdChzKSl7cmV0dXJuIHRoaXN9dmFyIG09dGhpcy5nZXRNZXRhZGF0YSgpLHY9bS5nZXRKU09OS2V5cygpLGE9ZC5jcmVhdGUscD1kLl9mblNldHRpbmdzUHJlcHJvY2Vzc29yLGssVixLO3AmJnAuY2FsbCh0aGlzLHMpO2lmKHMubW9kZWxzKXtpZih0eXBlb2Ygcy5tb2RlbHMhPT0ib2JqZWN0Iil7dGhyb3cgbmV3IEVycm9yKCJtb2RlbHMgbXVzdCBiZSBhIHNpbXBsZSBvYmplY3QiKX1pZihzLm1vZGVscyBpbnN0YW5jZW9mIGMpe3RoaXMuc2V0TW9kZWwocy5tb2RlbHMpfWVsc2V7Zm9yKGsgaW4gcy5tb2RlbHMpe3RoaXMuc2V0TW9kZWwocy5tb2RlbHNba10saz09PSJ1bmRlZmluZWQiP3VuZGVmaW5lZDprKX19ZGVsZXRlIHMubW9kZWxzfWlmKHMuYmluZGluZ0NvbnRleHRzKXtpZih0eXBlb2Ygcy5iaW5kaW5nQ29udGV4dHMhPT0ib2JqZWN0Iil7dGhyb3cgbmV3IEVycm9yKCJiaW5kaW5nQ29udGV4dHMgbXVzdCBiZSBhIHNpbXBsZSBvYmplY3QiKX1pZihzLmJpbmRpbmdDb250ZXh0cyBpbnN0YW5jZW9mIHNhcC51aS5tb2RlbC5Db250ZXh0KXt0aGlzLnNldEJpbmRpbmdDb250ZXh0KHMuYmluZGluZ0NvbnRleHRzKX1lbHNle2ZvcihrIGluIHMuYmluZGluZ0NvbnRleHRzKXt0aGlzLnNldEJpbmRpbmdDb250ZXh0KHMuYmluZGluZ0NvbnRleHRzW2tdLGs9PT0idW5kZWZpbmVkIj91bmRlZmluZWQ6ayl9fWRlbGV0ZSBzLmJpbmRpbmdDb250ZXh0c31pZihzLm9iamVjdEJpbmRpbmdzKXtpZih0eXBlb2Ygcy5vYmplY3RCaW5kaW5ncyE9PSJzdHJpbmciJiZ0eXBlb2Ygcy5vYmplY3RCaW5kaW5ncyE9PSJvYmplY3QiKXt0aHJvdyBuZXcgRXJyb3IoImJpbmRpbmcgbXVzdCBiZSBhIHN0cmluZyBvciBzaW1wbGUgb2JqZWN0Iil9aWYodHlwZW9mIHMub2JqZWN0QmluZGluZ3M9PT0ic3RyaW5nInx8cy5vYmplY3RCaW5kaW5ncy5wYXRoKXt0aGlzLmJpbmRPYmplY3Qocy5vYmplY3RCaW5kaW5ncyl9ZWxzZXtmb3IodmFyIGsgaW4gcy5vYmplY3RCaW5kaW5ncyl7cy5vYmplY3RCaW5kaW5ncy5tb2RlbD1rO3RoaXMuYmluZE9iamVjdChzLm9iamVjdEJpbmRpbmdzW2tdKX19ZGVsZXRlIHMub2JqZWN0QmluZGluZ3N9Zm9yKGsgaW4gcyl7aWYoSz12W2tdKXtWPXNba107c3dpdGNoKEsuX2lLaW5kKXtjYXNlIDA6dmFyIG89dGhpcy5leHRyYWN0QmluZGluZ0luZm8oVixTKTtpZihvJiZ0eXBlb2Ygbz09PSJvYmplY3QiKXt0aGlzLmJpbmRQcm9wZXJ0eShrLG8pfWVsc2V7dGhpc1tLLl9zTXV0YXRvcl0ob3x8Vil9YnJlYWs7Y2FzZSAxOnZhciBvPUsuYWx0VHlwZXMmJnRoaXMuZXh0cmFjdEJpbmRpbmdJbmZvKFYsUyk7aWYobyYmdHlwZW9mIG89PT0ib2JqZWN0Iil7dGhpcy5iaW5kUHJvcGVydHkoayxvKX1lbHNle3RoaXNbSy5fc011dGF0b3JdKGEob3x8VixLKSl9YnJlYWs7Y2FzZSAyOnZhciBvPXRoaXMuZXh0cmFjdEJpbmRpbmdJbmZvKFYsUyk7aWYobyYmdHlwZW9mIG89PT0ib2JqZWN0Iil7dGhpcy5iaW5kQWdncmVnYXRpb24oayxvKX1lbHNle1Y9b3x8VjtpZihWJiYhcS5pc0FycmF5KFYpKXtWPVtWXX1pZihWKXtmb3IodmFyIGk9MCxsPVYubGVuZ3RoO2k8bDtpKyspe3RoaXNbSy5fc011dGF0b3JdKGEoVltpXSxLKSl9fX1icmVhaztjYXNlIDM6dGhpc1tLLl9zTXV0YXRvcl0oVik7YnJlYWs7Y2FzZSA0OmlmKFYmJiFxLmlzQXJyYXkoVikpe1Y9W1ZdfWlmKFYpe2Zvcih2YXIgaT0wLGw9Vi5sZW5ndGg7aTxsO2krKyl7dGhpc1tLLl9zTXV0YXRvcl0oVltpXSl9fWJyZWFrO2Nhc2UgNTppZih0eXBlb2YgVj09ImZ1bmN0aW9uIil7dGhpc1tLLl9zTXV0YXRvcl0oVil9ZWxzZXt0aGlzW0suX3NNdXRhdG9yXShWWzBdLFZbMV0sVlsyXSl9YnJlYWs7ZGVmYXVsdDpicmVha319fXJldHVybiB0aGlzfTtkLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJNYW5hZ2VkT2JqZWN0ICIrdGhpcy5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKSsiIyIrdGhpcy5nZXRJZCgpfTtkLnByb3RvdHlwZS5nZXRJZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNJZH07ZC5wcm90b3R5cGUuc2V0UHJvcGVydHk9ZnVuY3Rpb24ocCx2LHMpe3ZhciBvPXRoaXMubVByb3BlcnRpZXNbcF07dj10aGlzLnZhbGlkYXRlUHJvcGVydHkocCx2KTtpZihxLnNhcC5lcXVhbChvLHYpKXtyZXR1cm4gdGhpc31pZihzKXtxLnNhcC5hY3QucmVmcmVzaCgpO3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfXRoaXMubVByb3BlcnRpZXNbcF09djtpZighdGhpcy5pc0ludmFsaWRhdGVTdXBwcmVzc2VkKCkpe3RoaXMuaW52YWxpZGF0ZSgpfXRoaXMudXBkYXRlTW9kZWxQcm9wZXJ0eShwLHYsbyk7RS5wcm90b3R5cGUuZmlyZUV2ZW50LmFwcGx5KHRoaXMsWyJfY2hhbmdlIix7ImlkIjp0aGlzLmdldElkKCksIm5hbWUiOnAsIm9sZFZhbHVlIjpvLCJuZXdWYWx1ZSI6dn1dKTtpZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUuZ2V0UHJvcGVydHk9ZnVuY3Rpb24ocCl7dmFyIHY9dGhpcy5tUHJvcGVydGllc1twXSxtPXRoaXMuZ2V0TWV0YWRhdGEoKSxQPW0uZ2V0QWxsUHJvcGVydGllcygpW3BdLHQ7aWYoIVApe3Rocm93IG5ldyBFcnJvcigiUHJvcGVydHkgXCIiK3ArIlwiIGRvZXMgbm90IGV4aXN0IGluICIrdGhpcyl9dD1ELmdldFR5cGUoUC50eXBlKTtpZih0IGluc3RhbmNlb2YgRCYmdC5pc0FycmF5VHlwZSgpJiZxLmlzQXJyYXkodikpe3Y9di5zbGljZSgwKX1pZih2IGluc3RhbmNlb2YgU3RyaW5nKXt2PXYudmFsdWVPZigpfXJldHVybiB2fTtkLnByb3RvdHlwZS52YWxpZGF0ZVByb3BlcnR5PWZ1bmN0aW9uKHAsdil7dmFyIG09dGhpcy5nZXRNZXRhZGF0YSgpLFA9bS5nZXRBbGxQcm9wZXJ0aWVzKClbcF0sdDtpZighUCl7dGhyb3cgbmV3IEVycm9yKCJQcm9wZXJ0eSBcIiIrcCsiXCIgZG9lcyBub3QgZXhpc3QgaW4gIit0aGlzKX10PUQuZ2V0VHlwZShQLnR5cGUpO2lmKHQgaW5zdGFuY2VvZiBEJiZ0LmlzQXJyYXlUeXBlKCkmJnEuaXNBcnJheSh2KSl7dj12LnNsaWNlKDApfWlmKHY9PT1udWxsfHx2PT09dW5kZWZpbmVkKXtpZihQLmRlZmF1bHRWYWx1ZSE9PW51bGwpe3Y9UC5kZWZhdWx0VmFsdWV9ZWxzZXt2PXQuZ2V0RGVmYXVsdFZhbHVlKCl9fWVsc2UgaWYodCBpbnN0YW5jZW9mIEQpe2lmKHQuZ2V0TmFtZSgpPT0ic3RyaW5nIil7aWYoISh0eXBlb2Ygdj09InN0cmluZyJ8fHYgaW5zdGFuY2VvZiBTdHJpbmcpKXt2PSIiK3Z9fWVsc2UgaWYodC5nZXROYW1lKCk9PSJzdHJpbmdbXSIpe2Zvcih2YXIgaT0wO2k8di5sZW5ndGg7aSsrKXtpZighdHlwZW9mIHZbaV09PSJzdHJpbmciKXt2W2ldPSIiK3ZbaV19fX1lbHNlIGlmKCF0LmlzVmFsaWQodikpe3Rocm93IG5ldyBFcnJvcigiXCIiK3YrIlwiIGlzIG9mIHR5cGUgIit0eXBlb2YgdisiLCBleHBlY3RlZCAiK3QuZ2V0TmFtZSgpKyIgZm9yIHByb3BlcnR5IFwiIitwKyJcIiBvZiAiK3RoaXMpfX1lbHNlIGlmKCEodiBpbiB0KSl7dGhyb3cgbmV3IEVycm9yKCJcIiIrdisiXCIgaXMgbm90IGEgdmFsaWQgZW50cnkgb2YgdGhlIGVudW1lcmF0aW9uIGZvciBwcm9wZXJ0eSBcIiIrcCsiXCIgb2YgIit0aGlzKX1pZih0JiZ0Lm5vcm1hbGl6ZSYmdHlwZW9mIHQubm9ybWFsaXplPT09ImZ1bmN0aW9uIil7dj10Lm5vcm1hbGl6ZSh2KX1yZXR1cm4gdn07ZC5wcm90b3R5cGUuZ2V0T3JpZ2luSW5mbz1mdW5jdGlvbihwKXt2YXIgdj10aGlzLm1Qcm9wZXJ0aWVzW3BdO2lmKCEodiBpbnN0YW5jZW9mIFN0cmluZyYmdi5vcmlnaW5JbmZvKSl7cmV0dXJuIG51bGx9cmV0dXJuIHYub3JpZ2luSW5mb307ZC5wcm90b3R5cGUuc2V0QXNzb2NpYXRpb249ZnVuY3Rpb24oYSxpLHMpe2lmKGkgaW5zdGFuY2VvZiBkKXtpPWkuZ2V0SWQoKX1lbHNlIGlmKGkhPW51bGwmJnR5cGVvZiBpIT09InN0cmluZyIpe3JldHVybiB0aGlzfWlmKHRoaXMubUFzc29jaWF0aW9uc1thXT09PWkpe3JldHVybiB0aGlzfWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfXRoaXMubUFzc29jaWF0aW9uc1thXT1pO2lmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlLS19cmV0dXJuIHRoaXN9O2QucHJvdG90eXBlLmdldEFzc29jaWF0aW9uPWZ1bmN0aW9uKGEsbyl7dmFyIHI9dGhpcy5tQXNzb2NpYXRpb25zW2FdO2lmKCFyKXtyPXRoaXMubUFzc29jaWF0aW9uc1thXT1vfHxudWxsfWVsc2V7aWYodHlwZW9mIHIubGVuZ3RoPT09J251bWJlcicmJiEoci5wcm9wZXJ0eUlzRW51bWVyYWJsZSgnbGVuZ3RoJykpKXtyZXR1cm4gci5zbGljZSgpfXJldHVybiByfXJldHVybiByfTtkLnByb3RvdHlwZS5hZGRBc3NvY2lhdGlvbj1mdW5jdGlvbihhLGkscyl7aWYoaSBpbnN0YW5jZW9mIGQpe2k9aS5nZXRJZCgpfWVsc2UgaWYodHlwZW9mIGkhPT0ic3RyaW5nIil7cmV0dXJuIHRoaXN9aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlKyt9dmFyIEk9dGhpcy5tQXNzb2NpYXRpb25zW2FdO2lmKCFJKXtJPXRoaXMubUFzc29jaWF0aW9uc1thXT1baV19ZWxzZXtJLnB1c2goaSl9aWYoIXRoaXMuaXNJbnZhbGlkYXRlU3VwcHJlc3NlZCgpKXt0aGlzLmludmFsaWRhdGUoKX1pZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUucmVtb3ZlQXNzb2NpYXRpb249ZnVuY3Rpb24oYSxvLHMpe3ZhciBJPXRoaXMubUFzc29jaWF0aW9uc1thXTt2YXIgZT1udWxsO2lmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfWlmKHR5cGVvZihvKT09Im9iamVjdCImJm8uZ2V0SWQpe289by5nZXRJZCgpfWlmKHR5cGVvZihvKT09InN0cmluZyIpe2Zvcih2YXIgaT0wO2k8SS5sZW5ndGg7aSsrKXtpZihJW2ldPT1vKXtvPWk7YnJlYWt9fX1pZih0eXBlb2Yobyk9PSJudW1iZXIiKXtpZihvPDB8fG8+PUkubGVuZ3RoKXtxLnNhcC5sb2cud2FybmluZygiTWFuYWdlZE9iamVjdC5yZW1vdmVBc3NvY2lhdGlvbiBjYWxsZWQgd2l0aCBpbnZhbGlkIGluZGV4OiAiK2ErIiwgIitvKX1lbHNle2U9SVtvXTtJLnNwbGljZShvLDEpO2lmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9fX1pZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1yZXR1cm4gZX07ZC5wcm90b3R5cGUucmVtb3ZlQWxsQXNzb2NpYXRpb249ZnVuY3Rpb24oYSxzKXt2YXIgaT10aGlzLm1Bc3NvY2lhdGlvbnNbYV07aWYoIWkpe3JldHVybltdfWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfWRlbGV0ZSB0aGlzLm1Bc3NvY2lhdGlvbnNbYV07aWYoIXRoaXMuaXNJbnZhbGlkYXRlU3VwcHJlc3NlZCgpKXt0aGlzLmludmFsaWRhdGUoKX1pZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1yZXR1cm4gaX07ZC5wcm90b3R5cGUudmFsaWRhdGVBZ2dyZWdhdGlvbj1mdW5jdGlvbihhLG8sbSl7dmFyIGU9dGhpcy5nZXRNZXRhZGF0YSgpLEE9ZS5nZXRNYW5hZ2VkQWdncmVnYXRpb24oYSksZix0LGksZztpZighQSl7aWYoYSYmZS5fbUhpZGRlbkFnZ3JlZ2F0aW9ucyYmZS5fbUhpZGRlbkFnZ3JlZ2F0aW9uc1thXSl7QT1lLl9tSGlkZGVuQWdncmVnYXRpb25zW2FdO3Euc2FwLmxvZy5lcnJvcigiU3VwcG9ydCBmb3IgJ19tSGlkZGVuQWdncmVnYXRpb25zJyBpcyBhYm91dCB0byBiZSByZW1vdmVkICh3aXRoIDEuMTIgbGF0ZXN0KS4gSGlkZGVuIGFnZ3JlZ2F0aW9ucyBsaWtlICciK2UuZ2V0TmFtZSgpKyIuIithKyInIGluc3RlYWQgY2FuIGJlIGRlY2xhcmVkIGxpa2Ugbm9ybWFsIGFnZ3JlZ2F0aW9ucyBidXQgd2l0aCB2aXNpYmlsaXR5OidoaWRkZW4nLiIpfWVsc2V7Zz0iQWdncmVnYXRpb24gXCIiK2ErIlwiIGRvZXMgbm90IGV4aXN0IGluICIrdGhpcztpZigvXnNhcFwuKHVpXC5jb3JlfHVpXC5jb21tb25zfHVpXC50YWJsZXx1aVwudXgzfG18bWFraXR8dml6fHVpZXh0XC5pbmJveCkkLy50ZXN0KGUuZ2V0TGlicmFyeU5hbWUoKXx8IiIpKXt0aHJvdyBuZXcgRXJyb3IoZyl9ZWxzZXtxLnNhcC5sb2cuZXJyb3IoIlN1cHBvcnQgZm9yIHVuZGVjbGFyZWQgYWdncmVnYXRpb25zIGlzIGFib3V0IHRvIGJlIHJlbW92ZWQgKHdpdGggMS4xMiBsYXRlc3QpLiBIaWRkZW4gYWdncmVnYXRpb25zIGxpa2UgJyIrZS5nZXROYW1lKCkrIi4iK2ErIicgY2FuIGJlIGRlY2xhcmVkIGxpa2Ugbm9ybWFsIGFnZ3JlZ2F0aW9ucyBidXQgd2l0aCB2aXNpYmlsaXR5OidoaWRkZW4nLiIpO3JldHVybiBvfX19aWYoQS5tdWx0aXBsZSE9PW0pe3Rocm93IG5ldyBFcnJvcigiQWdncmVnYXRpb24gJyIrYSsiJyBvZiAiK3RoaXMrIiB1c2VkIHdpdGggd3JvbmcgY2FyZGluYWxpdHkgKGRlY2xhcmVkIGFzICIrKEEubXVsdGlwbGU/IjAuLm4iOiIwLi4xIikrIikiKX1pZighQS5tdWx0aXBsZSYmIW8pe3JldHVybiBvfXQ9cS5zYXAuZ2V0T2JqZWN0KEEudHlwZSk7aWYodHlwZW9mIHQ9PT0iZnVuY3Rpb24iJiZvIGluc3RhbmNlb2YgdCl7cmV0dXJuIG99aWYobyYmby5nZXRNZXRhZGF0YSYmby5nZXRNZXRhZGF0YSgpLmlzSW5zdGFuY2VPZihBLnR5cGUpKXtyZXR1cm4gb31mPUEuYWx0VHlwZXM7aWYoZiYmZi5sZW5ndGgpe2lmKG89PW51bGwpe3JldHVybiBvfWZvcihpPTA7aTxmLmxlbmd0aDtpKyspe3Q9RC5nZXRUeXBlKGZbaV0pO2lmKHQgaW5zdGFuY2VvZiBEKXtpZih0LmlzVmFsaWQobykpe3JldHVybiBvfX1lbHNlIGlmKG8gaW4gdCl7cmV0dXJuIG99fX1nPSJcIiIrbysiXCIgaXMgbm90IHZhbGlkIGZvciBhZ2dyZWdhdGlvbiBcIiIrYSsiXCIgb2YgIit0aGlzO2lmKEQuaXNJbnRlcmZhY2VUeXBlKEEudHlwZSkpe3JldHVybiBvfWVsc2V7dGhyb3cgbmV3IEVycm9yKGcpfX07ZC5wcm90b3R5cGUuc2V0QWdncmVnYXRpb249ZnVuY3Rpb24oYSxvLHMpe3ZhciBPPXRoaXMubUFnZ3JlZ2F0aW9uc1thXTtpZihPPT09byl7cmV0dXJuIHRoaXN9bz10aGlzLnZhbGlkYXRlQWdncmVnYXRpb24oYSxvLGZhbHNlKTtpZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUrK31pZihPIGluc3RhbmNlb2YgZCl7Ty5zZXRQYXJlbnQobnVsbCl9dGhpcy5tQWdncmVnYXRpb25zW2FdPW87aWYobyBpbnN0YW5jZW9mIGQpe28uc2V0UGFyZW50KHRoaXMsYSxzKX1lbHNle2lmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9fWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZS0tfXJldHVybiB0aGlzfTtkLnByb3RvdHlwZS5nZXRBZ2dyZWdhdGlvbj1mdW5jdGlvbihhLG8pe3ZhciBlPXRoaXMubUFnZ3JlZ2F0aW9uc1thXTtpZighZSl7ZT10aGlzLm1BZ2dyZWdhdGlvbnNbYV09b3x8bnVsbH1pZihlKXtpZih0eXBlb2YgZS5sZW5ndGg9PT0nbnVtYmVyJyYmIShlLnByb3BlcnR5SXNFbnVtZXJhYmxlKCdsZW5ndGgnKSkpe3JldHVybiBlLnNsaWNlKCl9cmV0dXJuIGV9ZWxzZXtyZXR1cm4gbnVsbH19O2QucHJvdG90eXBlLmluZGV4T2ZBZ2dyZWdhdGlvbj1mdW5jdGlvbihhLG8pe3ZhciBlPXRoaXMubUFnZ3JlZ2F0aW9uc1thXTtpZihlKXtpZihlLmxlbmd0aD09dW5kZWZpbmVkKXtyZXR1cm4tMn1mb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7aWYoZVtpXT09byl7cmV0dXJuIGl9fX1yZXR1cm4tMX07ZC5wcm90b3R5cGUuaW5zZXJ0QWdncmVnYXRpb249ZnVuY3Rpb24oYSxvLEkscyl7aWYoIW8pe3JldHVybiB0aGlzfW89dGhpcy52YWxpZGF0ZUFnZ3JlZ2F0aW9uKGEsbyx0cnVlKTt2YXIgZT10aGlzLm1BZ2dyZWdhdGlvbnNbYV18fCh0aGlzLm1BZ2dyZWdhdGlvbnNbYV09W10pO3ZhciBpPUk8MD8wOihJPmUubGVuZ3RoP2UubGVuZ3RoOkkpO2lmKGkhPT1JKXtxLnNhcC5sb2cud2FybmluZygiTWFuYWdlZE9iamVjdC5pbnNlcnRBZ2dyZWdhdGlvbjogaW5kZXggJyIrSSsiJyBvdXQgb2YgcmFuZ2UgWzAsIitlLmxlbmd0aCsiXSwgZm9yY2VkIHRvICIraSl9ZS5zcGxpY2UoaSwwLG8pO28uc2V0UGFyZW50KHRoaXMsYSxzKTtyZXR1cm4gdGhpc307ZC5wcm90b3R5cGUuYWRkQWdncmVnYXRpb249ZnVuY3Rpb24oYSxvLHMpe2lmKCFvKXtyZXR1cm4gdGhpc31vPXRoaXMudmFsaWRhdGVBZ2dyZWdhdGlvbihhLG8sdHJ1ZSk7dmFyIGU9dGhpcy5tQWdncmVnYXRpb25zW2FdO2lmKCFlKXtlPXRoaXMubUFnZ3JlZ2F0aW9uc1thXT1bb119ZWxzZXtlLnB1c2gobyl9by5zZXRQYXJlbnQodGhpcyxhLHMpO3JldHVybiB0aGlzfTtkLnByb3RvdHlwZS5yZW1vdmVBZ2dyZWdhdGlvbj1mdW5jdGlvbihhLG8scyl7dmFyIGU9dGhpcy5tQWdncmVnYXRpb25zW2FdLGY9bnVsbCxpO2lmKCFlKXtyZXR1cm4gbnVsbH1pZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUrK31pZih0eXBlb2Yobyk9PSJzdHJpbmciKXtmb3IoaT0wO2k8ZS5sZW5ndGg7aSsrKXtpZihlW2ldJiZlW2ldLmdldElkKCk9PT1vKXtvPWk7YnJlYWt9fX1pZih0eXBlb2Yobyk9PSJvYmplY3QiKXtmb3IoaT0wO2k8ZS5sZW5ndGg7aSsrKXtpZihlW2ldPT1vKXtvPWk7YnJlYWt9fX1pZih0eXBlb2Yobyk9PSJudW1iZXIiKXtpZihvPDB8fG8+PWUubGVuZ3RoKXtxLnNhcC5sb2cud2FybmluZygiTWFuYWdlZE9iamVjdC5yZW1vdmVBZ2dyZWdhdGlvbiBjYWxsZWQgd2l0aCBpbnZhbGlkIGluZGV4OiAiK2ErIiwgIitvKX1lbHNle2Y9ZVtvXTtlLnNwbGljZShvLDEpO2Yuc2V0UGFyZW50KG51bGwpO2lmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9fX1pZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1yZXR1cm4gZn07ZC5wcm90b3R5cGUucmVtb3ZlQWxsQWdncmVnYXRpb249ZnVuY3Rpb24oYSxzKXt2YXIgZT10aGlzLm1BZ2dyZWdhdGlvbnNbYV07aWYoIWUpe3JldHVybltdfWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfWRlbGV0ZSB0aGlzLm1BZ2dyZWdhdGlvbnNbYV07Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKyspe2VbaV0uc2V0UGFyZW50KG51bGwpfWlmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlLS19cmV0dXJuIGV9O2QucHJvdG90eXBlLmRlc3Ryb3lBZ2dyZWdhdGlvbj1mdW5jdGlvbihhLHMpe3ZhciBlPXRoaXMubUFnZ3JlZ2F0aW9uc1thXSxpLGY7aWYoIWUpe3JldHVybiB0aGlzfWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfWRlbGV0ZSB0aGlzLm1BZ2dyZWdhdGlvbnNbYV07aWYoZSBpbnN0YW5jZW9mIGQpe2UuZGVzdHJveShzKX1lbHNlIGlmKHEuaXNBcnJheShlKSl7Zm9yKGk9ZS5sZW5ndGgtMTtpPj0wO2ktLSl7Zj1lW2ldO2lmKGYpe2YuZGVzdHJveShzKX19fWlmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlLS19cmV0dXJuIHRoaXN9O2QucHJvdG90eXBlLmludmFsaWRhdGU9ZnVuY3Rpb24oKXtpZih0aGlzLm9QYXJlbnQpe3RoaXMub1BhcmVudC5pbnZhbGlkYXRlKHRoaXMpfX07ZC5wcm90b3R5cGUuaXNJbnZhbGlkYXRlU3VwcHJlc3NlZD1mdW5jdGlvbigpe3ZhciBpPXRoaXMuaVN1cHByZXNzSW52YWxpZGF0ZT4wO2lmKHRoaXMub1BhcmVudCYmdGhpcy5vUGFyZW50IGluc3RhbmNlb2YgZCl7aT1pfHx0aGlzLm9QYXJlbnQuaXNJbnZhbGlkYXRlU3VwcHJlc3NlZCgpfXJldHVybiBpfTtkLnByb3RvdHlwZS5fcmVtb3ZlQ2hpbGQ9ZnVuY3Rpb24obyxhLHMpe2lmKCFhKXtxLnNhcC5sb2cuZXJyb3IoIkNhbm5vdCByZW1vdmUgYWdncmVnYXRlZCBjaGlsZCB3aXRob3V0IGFnZ3JlZ2F0aW9uIG5hbWUuIixudWxsLHRoaXMpfWVsc2V7aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlKyt9dmFyIGk9dGhpcy5pbmRleE9mQWdncmVnYXRpb24oYSxvKTt2YXIgQT10aGlzLmdldE1ldGFkYXRhKCkuZ2V0SlNPTktleXMoKVthXTtpZihpPT0tMil7aWYoQSYmdGhpc1tBLl9zTXV0YXRvcl0pe3RoaXNbQS5fc011dGF0b3JdKG51bGwpfWVsc2V7dGhpcy5zZXRBZ2dyZWdhdGlvbihhLG51bGwscyl9fWVsc2UgaWYoaT4tMSl7aWYoQSYmdGhpc1tBLl9zUmVtb3ZlTXV0YXRvcl0pe3RoaXNbQS5fc1JlbW92ZU11dGF0b3JdKGkpfWVsc2V7dGhpcy5yZW1vdmVBZ2dyZWdhdGlvbihhLGkscyl9fWVsc2V7fWlmKCF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7dGhpcy5pbnZhbGlkYXRlKCl9aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlLS19fX07ZC5wcm90b3R5cGUuc2V0UGFyZW50PWZ1bmN0aW9uKHAsYSxzKXt2YXIgdD10aGlzO2lmKCFwKXt0aGlzLm9QYXJlbnQ9bnVsbDt0aGlzLnNQYXJlbnRBZ2dyZWdhdGlvbk5hbWU9bnVsbDt0aGlzLm9Qcm9wYWdhdGVkUHJvcGVydGllcz17b01vZGVsczp7fSxvQmluZGluZ0NvbnRleHRzOnt9fTtxLnNhcC5hY3QucmVmcmVzaCgpO3JldHVybn1pZihzKXtxLnNhcC5hY3QucmVmcmVzaCgpO3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZSsrfXZhciBvPXRoaXMuZ2V0UGFyZW50KCk7aWYobyl7by5fcmVtb3ZlQ2hpbGQodGhpcyx0aGlzLnNQYXJlbnRBZ2dyZWdhdGlvbk5hbWUpfXRoaXMub1BhcmVudD1wO3RoaXMuc1BhcmVudEFnZ3JlZ2F0aW9uTmFtZT1hO3RoaXMub1Byb3BhZ2F0ZWRQcm9wZXJ0aWVzPXAuX2dldFByb3BlcnRpZXNUb1Byb3BhZ2F0ZSgpO2lmKHRoaXMuaGFzTW9kZWwoKSl7dGhpcy51cGRhdGVCaW5kaW5nQ29udGV4dChmYWxzZSx0cnVlLHVuZGVmaW5lZCx0cnVlKTt0aGlzLnVwZGF0ZUJpbmRpbmdzKHRydWUsbnVsbCk7dGhpcy5wcm9wYWdhdGVQcm9wZXJ0aWVzKHRydWUpfWlmKHAmJiF0aGlzLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQoKSl7cC5pbnZhbGlkYXRlKHRoaXMpfWlmKHMpe3RoaXMuaVN1cHByZXNzSW52YWxpZGF0ZS0tfXJldHVybiB0aGlzfTtkLnByb3RvdHlwZS5nZXRQYXJlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vUGFyZW50fTtkLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKHMpe3ZhciB0PXRoaXM7aWYocyl7dGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlKyt9aWYodGhpcy5leGl0KXt0aGlzLmV4aXQoKX1pZih0aGlzLl9leGl0Q29tcG9zaXRlU3VwcG9ydCl7dGhpcy5fZXhpdENvbXBvc2l0ZVN1cHBvcnQoKX1mb3IodmFyIGEgaW4gdGhpcy5tQWdncmVnYXRpb25zKXt0aGlzLmRlc3Ryb3lBZ2dyZWdhdGlvbihhLHMpfWlmKHRoaXMuZGVyZWdpc3Rlcil0aGlzLmRlcmVnaXN0ZXIoKTtpZih0aGlzLm9QYXJlbnQmJnRoaXMuc1BhcmVudEFnZ3JlZ2F0aW9uTmFtZSl7dGhpcy5vUGFyZW50Ll9yZW1vdmVDaGlsZCh0aGlzLHRoaXMuc1BhcmVudEFnZ3JlZ2F0aW9uTmFtZSxzKX1kZWxldGUgdGhpcy5vUGFyZW50O3EuZWFjaCh0aGlzLm1CaW5kaW5nSW5mb3MsZnVuY3Rpb24obixvKXtpZihvLmZhY3Rvcnkpe3QudW5iaW5kQWdncmVnYXRpb24obix0cnVlKX1lbHNle3QudW5iaW5kUHJvcGVydHkobix0cnVlKX19KTtpZihzKXt0aGlzLmlTdXBwcmVzc0ludmFsaWRhdGUtLX1FLnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLnNldFBhcmVudD1mdW5jdGlvbigpe3Rocm93IEVycm9yKCJUaGUgb2JqZWN0IHdpdGggSUQgIit0LmdldElkKCkrIiB3YXMgZGVzdHJveWVkIGFuZCBjYW5ub3QgYmUgdXNlZCBhbnltb3JlLiIpfTt0aGlzLmJJc0Rlc3Ryb3llZD10cnVlfTtkLmJpbmRpbmdQYXJzZXI9Qi5zaW1wbGVQYXJzZXI7ZC5wcm90b3R5cGUuaXNCaW5kaW5nPWZ1bmN0aW9uKHYsayl7cmV0dXJuIm9iamVjdCI9PT10eXBlb2YgdGhpcy5leHRyYWN0QmluZGluZ0luZm8odil9O2QucHJvdG90eXBlLmV4dHJhY3RCaW5kaW5nSW5mbz1mdW5jdGlvbih2LHMpe2lmKHYmJnR5cGVvZiB2PT09Im9iamVjdCIpe2lmKHYudWk1b2JqZWN0KXtkZWxldGUgdi51aTVvYmplY3R9ZWxzZSBpZih2LnBhdGh8fHYucGFydHMpe2lmKHYudGVtcGxhdGUpe3YudGVtcGxhdGU9ZC5jcmVhdGUodi50ZW1wbGF0ZSl9cmV0dXJuIHZ9fWlmKHR5cGVvZiB2PT09InN0cmluZyIpe3JldHVybiBkLmJpbmRpbmdQYXJzZXIodixzLHRydWUpfX07ZC5wcm90b3R5cGUuZ2V0QmluZGluZ0luZm89ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMubUJpbmRpbmdJbmZvc1tuXX07ZC5wcm90b3R5cGUuYmluZE9iamVjdD1mdW5jdGlvbihwLFApe3ZhciBhPXt9LG8sbSxzO2lmKHR5cGVvZiBwPT0ib2JqZWN0Iil7dmFyIGU9cDtwPWUucGF0aDtQPWUucGFyYW1ldGVyczttPWUubW9kZWw7YS5ldmVudHM9ZS5ldmVudHN9cz1wLmluZGV4T2YoIj4iKTthLnNCaW5kaW5nUGF0aD1wO2EubUJpbmRpbmdQYXJhbWV0ZXJzPVA7aWYocz4wKXttPXAuc3Vic3RyKDAscyk7YS5zQmluZGluZ1BhdGg9cC5zdWJzdHIocysxKX1vPXRoaXMubUJvdW5kT2JqZWN0c1ttXTtpZihvJiZvLmJpbmRpbmcpe28uYmluZGluZy5kZXRhY2hDaGFuZ2Uoby5mQ2hhbmdlSGFuZGxlcik7by5iaW5kaW5nLmRldGFjaEV2ZW50cyhvLmV2ZW50cyl9dGhpcy5tQm91bmRPYmplY3RzW21dPWE7aWYodGhpcy5nZXRNb2RlbChtKSl7dGhpcy5fYmluZE9iamVjdChtLGEpfXJldHVybiB0aGlzfTtkLnByb3RvdHlwZS5fYmluZE9iamVjdD1mdW5jdGlvbihtLG8pe3ZhciBhLHAsZSx0PXRoaXM7dmFyIGY9ZnVuY3Rpb24oZyl7dC5zZXRCaW5kaW5nQ29udGV4dChhLmdldEJvdW5kQ29udGV4dCgpLG0pfTtlPXRoaXMuZ2V0TW9kZWwobSk7aWYodGhpcy5vUGFyZW50JiZlPT10aGlzLm9QYXJlbnQuZ2V0TW9kZWwobSkpe3A9dGhpcy5vUGFyZW50LmdldEJpbmRpbmdDb250ZXh0KG0pfWE9ZS5iaW5kQ29udGV4dChvLnNCaW5kaW5nUGF0aCxwLG8ubUJpbmRpbmdQYXJhbWV0ZXJzKTthLmF0dGFjaENoYW5nZShmKTtvLmJpbmRpbmc9YTtvLmZDaGFuZ2VIYW5kbGVyPWY7YS5hdHRhY2hFdmVudHMoby5ldmVudHMpO2EuaW5pdGlhbGl6ZSgpfTtkLnByb3RvdHlwZS5iaW5kQ29udGV4dD1mdW5jdGlvbihwKXtyZXR1cm4gdGhpcy5iaW5kRWxlbWVudChwKX07ZC5wcm90b3R5cGUudW5iaW5kQ29udGV4dD1mdW5jdGlvbihtKXtyZXR1cm4gdGhpcy51bmJpbmRFbGVtZW50KG0pfTtkLnByb3RvdHlwZS51bmJpbmRPYmplY3Q9ZnVuY3Rpb24obSl7dmFyIG89dGhpcy5tQm91bmRPYmplY3RzW21dO2lmKG8pe2lmKG8uYmluZGluZyl7by5iaW5kaW5nLmRldGFjaENoYW5nZShvLmZDaGFuZ2VIYW5kbGVyKTtvLmJpbmRpbmcuZGV0YWNoRXZlbnRzKG8uZXZlbnRzKX1kZWxldGUgdGhpcy5tQm91bmRPYmplY3RzW21dO2RlbGV0ZSB0aGlzLm9CaW5kaW5nQ29udGV4dHNbbV07dGhpcy51cGRhdGVCaW5kaW5nQ29udGV4dChmYWxzZSxmYWxzZSxtKX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUuYmluZFByb3BlcnR5PWZ1bmN0aW9uKG4sbyl7dmFyIHAsZixtLHMsRix0LFMsYT10cnVlLGU9dGhpcyxnPXRoaXMuZ2V0TWV0YWRhdGEoKSxQPWcuZ2V0QWxsUHJvcGVydGllcygpW25dLGs9Zy5nZXRKU09OS2V5cygpW25dO2lmKCFQJiYhKGsmJmsuYWx0VHlwZXMpKXt0aHJvdyBuZXcgRXJyb3IoIlByb3BlcnR5IFwiIituKyJcIiBkb2VzIG5vdCBleGlzdCBpbiAiK3RoaXMpfWlmKHR5cGVvZiBvPT0ic3RyaW5nIil7cD1hcmd1bWVudHNbMV07Zj1hcmd1bWVudHNbMl07bT1hcmd1bWVudHNbM107aWYodHlwZW9mIGY9PSJmdW5jdGlvbiIpe0Y9Zn1lbHNlIGlmKGYgaW5zdGFuY2VvZiBUKXt0PWZ9bz17Zm9ybWF0dGVyOkYscGFydHM6W3twYXRoOnAsdHlwZTp0LG1vZGU6bX1dfX1pZighby5wYXJ0cyl7by5wYXJ0cz1bXTtvLnBhcnRzWzBdPXtwYXRoOm8ucGF0aCx0eXBlOm8udHlwZSxmb3JtYXRPcHRpb25zOm8uZm9ybWF0T3B0aW9ucyxjb25zdHJhaW50czpvLmNvbnN0cmFpbnRzLG1vZGVsOm8ubW9kZWwsbW9kZTpvLm1vZGV9O2RlbGV0ZSBvLnBhdGg7ZGVsZXRlIG8ubW9kZTtkZWxldGUgby5tb2RlbH1xLmVhY2goby5wYXJ0cyxmdW5jdGlvbihpLGgpe2lmKHR5cGVvZiBoPT0ic3RyaW5nIil7aD17cGF0aDpofTtvLnBhcnRzW2ldPWh9Uz1oLnBhdGguaW5kZXhPZigiPiIpO2lmKFM+MCl7aC5tb2RlbD1oLnBhdGguc3Vic3RyKDAsUyk7aC5wYXRoPWgucGF0aC5zdWJzdHIoUysxKX1pZihvLnBhcnRzLmxlbmd0aD4xKXtoLm1vZGU9c2FwLnVpLm1vZGVsLkJpbmRpbmdNb2RlLk9uZVdheX1pZighZS5nZXRNb2RlbChoLm1vZGVsKSl7YT1mYWxzZX19KTtpZih0aGlzLmlzQm91bmQobikpe3RoaXMudW5iaW5kUHJvcGVydHkobix0cnVlKX10aGlzLm1CaW5kaW5nSW5mb3Nbbl09bztpZihhKXt0aGlzLl9iaW5kUHJvcGVydHkobixvKX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUuX2JpbmRQcm9wZXJ0eT1mdW5jdGlvbihuLG8pe3ZhciBtLHMsYSxlLHQsZixwPXRoaXMuZ2V0TWV0YWRhdGEoKS5nZXRKU09OS2V5cygpW25dLGc9dGhpcyxoPVtdLGo9ZnVuY3Rpb24oKXt0cnl7dmFyIHY9ZS5nZXRFeHRlcm5hbFZhbHVlKCk7by5za2lwTW9kZWxVcGRhdGU9dHJ1ZTtnW3AuX3NNdXRhdG9yXSh2KTtvLnNraXBNb2RlbFVwZGF0ZT1mYWxzZX1jYXRjaChpKXtpZihpIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkZvcm1hdEV4Y2VwdGlvbil7Zy5maXJlRm9ybWF0RXJyb3Ioe2VsZW1lbnQ6Zyxwcm9wZXJ0eTpuLHR5cGU6ZS5nZXRUeXBlKCksbmV3VmFsdWU6ZS5nZXRWYWx1ZSgpLG9sZFZhbHVlOmcuZ2V0UHJvcGVydHkobiksZXhjZXB0aW9uOml9LGZhbHNlLHRydWUpfWVsc2V7dGhyb3cgaX19fTthPXRoaXMuZ2V0QmluZGluZ0NvbnRleHQoby5tb2RlbCk7cS5lYWNoKG8ucGFydHMsZnVuY3Rpb24oaSxQKXthPWcuZ2V0QmluZGluZ0NvbnRleHQoUC5tb2RlbCk7bT1nLmdldE1vZGVsKFAubW9kZWwpO3Q9UC50eXBlO2lmKHR5cGVvZiB0PT0ic3RyaW5nIil7Zj1xLnNhcC5nZXRPYmplY3QodCk7dD1uZXcgZihQLmZvcm1hdE9wdGlvbnMsUC5jb25zdHJhaW50cyl9ZT1tLmJpbmRQcm9wZXJ0eShQLnBhdGgsYSxvLnBhcmFtZXRlcnMpO2Uuc2V0VHlwZSh0LHAudHlwZSk7ZS5zZXRGb3JtYXR0ZXIoUC5mb3JtYXR0ZXIpO3M9IVAubW9kZT9tLmdldERlZmF1bHRCaW5kaW5nTW9kZSgpOlAubW9kZTtlLnNldEJpbmRpbmdNb2RlKHMpO2gucHVzaChlKX0pO2lmKGgubGVuZ3RoPjF8fChvLmZvcm1hdHRlciYmby5mb3JtYXR0ZXIudGV4dEZyYWdtZW50cykpe3Q9by50eXBlO2lmKHR5cGVvZiB0PT0ic3RyaW5nIil7Zj1xLnNhcC5nZXRPYmplY3QodCk7dD1uZXcgZihvLmZvcm1hdE9wdGlvbnMsby5jb25zdHJhaW50cyl9ZT1uZXcgQyhoLG8udXNlUmF3VmFsdWVzKTtlLnNldFR5cGUodCxwLnR5cGUpO2Uuc2V0QmluZGluZ01vZGUoby5tb2RlKX1lbHNle2U9aFswXX1lLmF0dGFjaENoYW5nZShqKTtlLnNldEZvcm1hdHRlcihxLnByb3h5KG8uZm9ybWF0dGVyLHRoaXMpKTtvLnNraXBNb2RlbFVwZGF0ZT1mYWxzZTtvLmJpbmRpbmc9ZTtvLm1vZGVsQ2hhbmdlSGFuZGxlcj1qO2UuYXR0YWNoRXZlbnRzKG8uZXZlbnRzKTtlLmluaXRpYWxpemUoKTtpZihlLmdldEJpbmRpbmdNb2RlKCk9PT1zYXAudWkubW9kZWwuQmluZGluZ01vZGUuT25lVGltZSl7ZS5kZXRhY2hDaGFuZ2Uoaik7ZS5kZXRhY2hFdmVudHMoby5ldmVudHMpfX07ZC5wcm90b3R5cGUudW5iaW5kUHJvcGVydHk9ZnVuY3Rpb24obixzKXt2YXIgbz10aGlzLm1CaW5kaW5nSW5mb3Nbbl0scD10aGlzLmdldE1ldGFkYXRhKCkuZ2V0SlNPTktleXMoKVtuXTtpZihvKXtpZihvLmJpbmRpbmcpe28uYmluZGluZy5kZXRhY2hDaGFuZ2Uoby5tb2RlbENoYW5nZUhhbmRsZXIpO28uYmluZGluZy5kZXRhY2hFdmVudHMoby5ldmVudHMpfWRlbGV0ZSB0aGlzLm1CaW5kaW5nSW5mb3Nbbl07aWYoIXMpe3RoaXNbcC5fc011dGF0b3JdKG51bGwpfX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUudXBkYXRlTW9kZWxQcm9wZXJ0eT1mdW5jdGlvbihuLHYsbyl7aWYodGhpcy5pc0JvdW5kKG4pKXt2YXIgYT10aGlzLm1CaW5kaW5nSW5mb3Nbbl0sZT1hLmJpbmRpbmc7aWYoZSYmZS5nZXRCaW5kaW5nTW9kZSgpPT1zYXAudWkubW9kZWwuQmluZGluZ01vZGUuVHdvV2F5JiYhYS5za2lwTW9kZWxVcGRhdGUpe3RyeXtlLnNldEV4dGVybmFsVmFsdWUodik7aWYoZS5nZXRUeXBlKCkpe3RoaXMuZmlyZVZhbGlkYXRpb25TdWNjZXNzKHtlbGVtZW50OnRoaXMscHJvcGVydHk6bix0eXBlOmUuZ2V0VHlwZSgpLG5ld1ZhbHVlOnYsb2xkVmFsdWU6b30sZmFsc2UsdHJ1ZSl9fWNhdGNoKGYpe2lmKGYgaW5zdGFuY2VvZiBzYXAudWkubW9kZWwuUGFyc2VFeGNlcHRpb24pe3RoaXMuZmlyZVBhcnNlRXJyb3Ioe2VsZW1lbnQ6dGhpcyxwcm9wZXJ0eTpuLHR5cGU6ZS5nZXRUeXBlKCksbmV3VmFsdWU6dixvbGRWYWx1ZTpvLGV4Y2VwdGlvbjpmfSxmYWxzZSx0cnVlKX1lbHNlIGlmKGYgaW5zdGFuY2VvZiBzYXAudWkubW9kZWwuVmFsaWRhdGVFeGNlcHRpb24pe3RoaXMuZmlyZVZhbGlkYXRpb25FcnJvcih7ZWxlbWVudDp0aGlzLHByb3BlcnR5Om4sdHlwZTplLmdldFR5cGUoKSxuZXdWYWx1ZTp2LG9sZFZhbHVlOm8sZXhjZXB0aW9uOmZ9LGZhbHNlLHRydWUpfWVsc2V7dGhyb3cgZn19fX19O2QucHJvdG90eXBlLmJpbmRBZ2dyZWdhdGlvbj1mdW5jdGlvbihuLG8pe3ZhciBwLHQscyxmLG09dGhpcy5nZXRNZXRhZGF0YSgpLGE9bS5nZXRBbGxBZ2dyZWdhdGlvbnMoKVtuXTtpZighYSl7dGhyb3cgbmV3IEVycm9yKCJBZ2dyZWdhdGlvbiBcIiIrbisiXCIgZG9lcyBub3QgZXhpc3QgaW4gIit0aGlzKX1pZih0eXBlb2Ygbz09InN0cmluZyIpe3A9YXJndW1lbnRzWzFdO3Q9YXJndW1lbnRzWzJdO3M9YXJndW1lbnRzWzNdO2Y9YXJndW1lbnRzWzRdO289e3BhdGg6cCxzb3J0ZXI6cyxmaWx0ZXJzOmZ9O2lmKHQgaW5zdGFuY2VvZiBkKXtvLnRlbXBsYXRlPXR9ZWxzZSBpZih0eXBlb2YgdD09PSJmdW5jdGlvbiIpe28uZmFjdG9yeT10fX1pZih0aGlzLmlzQm91bmQobikpe3RoaXMudW5iaW5kQWdncmVnYXRpb24obix0cnVlKX1pZighKG8udGVtcGxhdGV8fG8uZmFjdG9yeSkpe2lmKGEuX2RvZXNOb3RSZXF1aXJlRmFjdG9yeSl7by5mYWN0b3J5PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKCJkdW1teSBmYWN0b3J5IGNhbGxlZCB1bmV4cGVjdGVkbHkgIil9fWVsc2V7dGhyb3cgbmV3IEVycm9yKCJNaXNzaW5nIHRlbXBsYXRlIG9yIGZhY3RvcnkgZnVuY3Rpb24gZm9yIGFnZ3JlZ2F0aW9uICIrbisiIG9mICIrdGhpcysiICEiKX19aWYoby50ZW1wbGF0ZSl7by5mYWN0b3J5PWZ1bmN0aW9uKGkpe3JldHVybiBvLnRlbXBsYXRlLmNsb25lKGkpfX12YXIgUz1vLnBhdGguaW5kZXhPZigiPiIpO2lmKFM+MCl7by5tb2RlbD1vLnBhdGguc3Vic3RyKDAsUyk7by5wYXRoPW8ucGF0aC5zdWJzdHIoUysxKX10aGlzLm1CaW5kaW5nSW5mb3Nbbl09bztpZih0aGlzLmdldE1vZGVsKG8ubW9kZWwpKXt0aGlzLl9iaW5kQWdncmVnYXRpb24obixvKX1yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUuX2JpbmRBZ2dyZWdhdGlvbj1mdW5jdGlvbihuLG8pe3ZhciB0PXRoaXMsYSxtPWZ1bmN0aW9uKGcpe3ZhciB1PSJ1cGRhdGUiK24uc3Vic3RyKDAsMSkudG9VcHBlckNhc2UoKStuLnN1YnN0cigxKTtpZih0W3VdKXt2YXIgcz1nJiZnLmdldFBhcmFtZXRlcigicmVhc29uIik7aWYocyl7dFt1XShzKX1lbHNle3RbdV0oKX19ZWxzZXt0LnVwZGF0ZUFnZ3JlZ2F0aW9uKG4pfX0sZj1mdW5jdGlvbihnKXt2YXIgcj0icmVmcmVzaCIrbi5zdWJzdHIoMCwxKS50b1VwcGVyQ2FzZSgpK24uc3Vic3RyKDEpO2lmKHRbcl0pe3Rbcl0oZy5nZXRQYXJhbWV0ZXIoInJlYXNvbiIpKX1lbHNle20oZyl9fTt2YXIgZT10aGlzLmdldE1vZGVsKG8ubW9kZWwpO2lmKHRoaXMuaXNUcmVlQmluZGluZyhuKSl7YT1lLmJpbmRUcmVlKG8ucGF0aCx0aGlzLmdldEJpbmRpbmdDb250ZXh0KG8ubW9kZWwpLG8uZmlsdGVycyxvLnBhcmFtZXRlcnMpfWVsc2V7YT1lLmJpbmRMaXN0KG8ucGF0aCx0aGlzLmdldEJpbmRpbmdDb250ZXh0KG8ubW9kZWwpLG8uc29ydGVyLG8uZmlsdGVycyxvLnBhcmFtZXRlcnMpfWlmKHRoaXMuYlVzZUV4dGVuZGVkQ2hhbmdlRGV0ZWN0aW9uPT09dHJ1ZSl7YS5lbmFibGVFeHRlbmRlZENoYW5nZURldGVjdGlvbigpfW8uYmluZGluZz1hO28ubW9kZWxDaGFuZ2VIYW5kbGVyPW07by5tb2RlbFJlZnJlc2hIYW5kbGVyPWY7YS5hdHRhY2hDaGFuZ2UobSk7YS5hdHRhY2hSZWZyZXNoKGYpO2EuYXR0YWNoRXZlbnRzKG8uZXZlbnRzKTthLmluaXRpYWxpemUoKX07ZC5wcm90b3R5cGUudW5iaW5kQWdncmVnYXRpb249ZnVuY3Rpb24obixzKXt2YXIgbz10aGlzLm1CaW5kaW5nSW5mb3Nbbl0sYT10aGlzLmdldE1ldGFkYXRhKCkuZ2V0SlNPTktleXMoKVtuXTtpZihvKXtpZihvLmJpbmRpbmcpe28uYmluZGluZy5kZXRhY2hDaGFuZ2Uoby5tb2RlbENoYW5nZUhhbmRsZXIpO28uYmluZGluZy5kZXRhY2hSZWZyZXNoKG8ubW9kZWxSZWZyZXNoSGFuZGxlcik7by5iaW5kaW5nLmRldGFjaEV2ZW50cyhvLmV2ZW50cyl9ZGVsZXRlIHRoaXMubUJpbmRpbmdJbmZvc1tuXTtpZighcyl7dGhpc1thLl9zRGVzdHJ1Y3Rvcl0oKX19cmV0dXJuIHRoaXN9O2QucHJvdG90eXBlLmlzVHJlZUJpbmRpbmc9ZnVuY3Rpb24obil7cmV0dXJuIGZhbHNlfTtkLnByb3RvdHlwZS51cGRhdGVCaW5kaW5ncz1mdW5jdGlvbih1LG0pe3ZhciB0PXRoaXM7ZnVuY3Rpb24gYShvKXt2YXIgcD1vLnBhcnRzLGk7aWYocCYmcC5sZW5ndGg+MSl7Zm9yKGk9MDtpPHAubGVuZ3RoO2krKyl7aWYoKHV8fHBbaV0ubW9kZWw9PW0pJiYhby5iaW5kaW5nLmFCaW5kaW5nc1tpXS51cGRhdGVSZXF1aXJlZCh0LmdldE1vZGVsKHBbaV0ubW9kZWwpKSl7cmV0dXJuIHRydWV9fX1lbHNlIGlmKG8uZmFjdG9yeSl7cmV0dXJuKHV8fG8ubW9kZWw9PW0pJiYhby5iaW5kaW5nLnVwZGF0ZVJlcXVpcmVkKHQuZ2V0TW9kZWwoby5tb2RlbCkpfWVsc2V7cmV0dXJuKHV8fHBbMF0ubW9kZWw9PW0pJiYhby5iaW5kaW5nLnVwZGF0ZVJlcXVpcmVkKHQuZ2V0TW9kZWwocFswXS5tb2RlbCkpfXJldHVybiBmYWxzZX1mdW5jdGlvbiBlKG8pe3ZhciBwPW8ucGFydHMsaTtpZihwKXtmb3IoaT0wO2k8cC5sZW5ndGg7aSsrKXtpZighdC5nZXRNb2RlbChwW2ldLm1vZGVsKSl7cmV0dXJuIGZhbHNlfX1yZXR1cm4gdHJ1ZX1lbHNlIGlmKG8uZmFjdG9yeSl7cmV0dXJuISF0LmdldE1vZGVsKG8ubW9kZWwpfXJldHVybiBmYWxzZX1xLmVhY2godGhpcy5tQmluZGluZ0luZm9zLGZ1bmN0aW9uKG4sbyl7aWYoby5iaW5kaW5nJiZhKG8pKXtvLmJpbmRpbmcuZGV0YWNoQ2hhbmdlKG8ubW9kZWxDaGFuZ2VIYW5kbGVyKTtpZihvLm1vZGVsUmVmcmVzaEhhbmRsZXIpe28uYmluZGluZy5kZXRhY2hSZWZyZXNoKG8ubW9kZWxSZWZyZXNoSGFuZGxlcil9by5iaW5kaW5nLmRldGFjaEV2ZW50cyhvLmV2ZW50cyk7ZGVsZXRlIG8uYmluZGluZ31pZighby5iaW5kaW5nJiZlKG8pKXtpZihvLmZhY3Rvcnkpe3QuX2JpbmRBZ2dyZWdhdGlvbihuLG8pfWVsc2V7dC5fYmluZFByb3BlcnR5KG4sbyl9fX0pfTtkLnByb3RvdHlwZS51cGRhdGVBZ2dyZWdhdGlvbj1mdW5jdGlvbihuKXt2YXIgbz10aGlzLm1CaW5kaW5nSW5mb3Nbbl0sYT1vLmJpbmRpbmcsZj1vLmZhY3RvcnksQT10aGlzLmdldE1ldGFkYXRhKCkuZ2V0SlNPTktleXMoKVtuXSxlLE49bnVsbCxnPW51bGwsRz1udWxsLHM9bnVsbCx0PXRoaXM7dGhpc1tBLl9zRGVzdHJ1Y3Rvcl0oKTtpZih0aGlzLmlzVHJlZUJpbmRpbmcobikpe3ZhciBpPTAsdT1mdW5jdGlvbihoLGYsYSxwKXtxLmVhY2goaCxmdW5jdGlvbihJLGope3ZhciBrPXQuZ2V0SWQoKSsiLSIraSsrO2U9ZihrLGopO2Uuc2V0QmluZGluZ0NvbnRleHQoaixvLm1vZGVsKTtwW0EuX3NNdXRhdG9yXShlKTt1KGEuZ2V0Tm9kZUNvbnRleHRzKGopLGYsYSxlKX0pfTt1KGEuZ2V0Um9vdENvbnRleHRzKCksZixhLHRoaXMpfWVsc2V7Zz1BLl9zTXV0YXRvcisiR3JvdXAiO0c9YS5pc0dyb3VwZWQoKSYmdGhpc1tnXTtxLmVhY2goYS5nZXRDb250ZXh0cyhvLnN0YXJ0SW5kZXgsby5sZW5ndGgpLGZ1bmN0aW9uKEksaCl7aWYoRyYmYS5hU29ydGVycy5sZW5ndGg+MCl7Tj1hLmFTb3J0ZXJzWzBdLmZuR3JvdXAoaCk7aWYodHlwZW9mIE49PSJzdHJpbmciKXtOPXtrZXk6Tn19aWYoTi5rZXkhPT1zKXt2YXIgajtpZihvLmdyb3VwSGVhZGVyRmFjdG9yeSl7aj1vLmdyb3VwSGVhZGVyRmFjdG9yeShOKX10W2ddKE4saik7cz1OLmtleX19dmFyIGs9dC5nZXRJZCgpKyItIitJO2U9ZihrLGgpO2Uuc2V0QmluZGluZ0NvbnRleHQoaCxvLm1vZGVsKTt0W0EuX3NNdXRhdG9yXShlKX0pfX07ZC5wcm90b3R5cGUuaXNCb3VuZD1mdW5jdGlvbihuKXtyZXR1cm4obiBpbiB0aGlzLm1CaW5kaW5nSW5mb3MpfTtkLnByb3RvdHlwZS5nZXRPYmplY3RCaW5kaW5nPWZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLm1Cb3VuZE9iamVjdHNbbV0mJnRoaXMubUJvdW5kT2JqZWN0c1ttXS5iaW5kaW5nfTtkLnByb3RvdHlwZS5nZXRFdmVudGluZ1BhcmVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9QYXJlbnR9O2QucHJvdG90eXBlLmdldEJpbmRpbmc9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMubUJpbmRpbmdJbmZvc1tuXSYmdGhpcy5tQmluZGluZ0luZm9zW25dLmJpbmRpbmd9O2QucHJvdG90eXBlLmdldEJpbmRpbmdQYXRoPWZ1bmN0aW9uKG4pe3ZhciBpPXRoaXMubUJpbmRpbmdJbmZvc1tuXTtyZXR1cm4gaSYmKGkucGF0aHx8KGkucGFydHMmJmkucGFydHNbMF0mJmkucGFydHNbMF0ucGF0aCkpfTtkLnByb3RvdHlwZS5zZXRCaW5kaW5nQ29udGV4dD1mdW5jdGlvbihvLG0pe3ZhciBPPXRoaXMub0JpbmRpbmdDb250ZXh0c1ttXTtpZihPIT09byl7dGhpcy5vQmluZGluZ0NvbnRleHRzW21dPW87dGhpcy51cGRhdGVCaW5kaW5nQ29udGV4dCh0cnVlLHRydWUsbSk7dGhpcy5wcm9wYWdhdGVQcm9wZXJ0aWVzKG0pfXJldHVybiB0aGlzfTtkLnByb3RvdHlwZS51cGRhdGVCaW5kaW5nQ29udGV4dD1mdW5jdGlvbihzLFMsbSx1KXt2YXIgbyxhPXt9LHAsZSx0PXRoaXM7aWYodSl7Zm9yKG0gaW4gdGhpcy5vTW9kZWxzKXtpZih0aGlzLm9Nb2RlbHMuaGFzT3duUHJvcGVydHkobSkpe2FbbV09bX19Zm9yKG0gaW4gdGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXMub01vZGVscyl7aWYodGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXMub01vZGVscy5oYXNPd25Qcm9wZXJ0eShtKSl7YVttXT1tfX19ZWxzZXthW21dPW19Zm9yKG0gaW4gYSl7aWYoYS5oYXNPd25Qcm9wZXJ0eShtKSl7bT1tPT09InVuZGVmaW5lZCI/dW5kZWZpbmVkOm07bz10aGlzLmdldE1vZGVsKG0pO2U9dGhpcy5tQm91bmRPYmplY3RzW21dO2lmKG8mJmUmJmUuc0JpbmRpbmdQYXRoJiYhcyl7aWYoIWUuYmluZGluZyl7dGhpcy5fYmluZE9iamVjdChtLGUpfWVsc2V7cD1udWxsO2lmKHRoaXMub1BhcmVudCYmbz09dGhpcy5vUGFyZW50LmdldE1vZGVsKG0pKXtwPXRoaXMub1BhcmVudC5nZXRCaW5kaW5nQ29udGV4dChtKX1pZihwIT09ZS5iaW5kaW5nLmdldENvbnRleHQoKSl7ZS5iaW5kaW5nLnNldENvbnRleHQocCl9fWNvbnRpbnVlfXEuZWFjaCh0aGlzLm1CaW5kaW5nSW5mb3MsZnVuY3Rpb24obixnKXt2YXIgaD1nLmJpbmRpbmc7dmFyIFA9Zy5wYXJ0cyxpO2lmKCFoKXtyZXR1cm59aWYoUCYmUC5sZW5ndGg+MSl7Zm9yKGk9MDtpPFAubGVuZ3RoO2krKyl7aWYoUFtpXS5tb2RlbD09bSl7aC5hQmluZGluZ3NbaV0uc2V0Q29udGV4dCh0LmdldEJpbmRpbmdDb250ZXh0KFBbaV0ubW9kZWwpKX19fWVsc2UgaWYoZy5mYWN0b3J5KXtpZihnLm1vZGVsPT1tKXtoLnNldENvbnRleHQodC5nZXRCaW5kaW5nQ29udGV4dChnLm1vZGVsKSl9fWVsc2V7aWYoUFswXS5tb2RlbD09bSl7aC5zZXRDb250ZXh0KHQuZ2V0QmluZGluZ0NvbnRleHQoUFswXS5tb2RlbCkpfX19KTtpZighUyl7dmFyIGY9dGhpcy5nZXRCaW5kaW5nQ29udGV4dChtKTtxLmVhY2godGhpcy5tQWdncmVnYXRpb25zLGZ1bmN0aW9uKG4sQSl7aWYoQSBpbnN0YW5jZW9mIGQpe0Eub1Byb3BhZ2F0ZWRQcm9wZXJ0aWVzLm9CaW5kaW5nQ29udGV4dHNbbV09ZjtBLnVwZGF0ZUJpbmRpbmdDb250ZXh0KGZhbHNlLGZhbHNlLG0pfWVsc2UgaWYoQSBpbnN0YW5jZW9mIEFycmF5KXtmb3IodmFyIGk9MDtpPEEubGVuZ3RoO2krKyl7QVtpXS5vUHJvcGFnYXRlZFByb3BlcnRpZXMub0JpbmRpbmdDb250ZXh0c1ttXT1mO0FbaV0udXBkYXRlQmluZGluZ0NvbnRleHQoZmFsc2UsZmFsc2UsbSl9fX0pfX19fTtkLnByb3RvdHlwZS5nZXRCaW5kaW5nQ29udGV4dD1mdW5jdGlvbihtKXt2YXIgbz10aGlzLmdldE1vZGVsKG0pO2lmKHRoaXMub0JpbmRpbmdDb250ZXh0c1ttXSl7cmV0dXJuIHRoaXMub0JpbmRpbmdDb250ZXh0c1ttXX1lbHNlIGlmKG8mJnRoaXMub1BhcmVudCYmdGhpcy5vUGFyZW50LmdldE1vZGVsKG0pJiZvIT10aGlzLm9QYXJlbnQuZ2V0TW9kZWwobSkpe3JldHVybiB1bmRlZmluZWR9ZWxzZXtyZXR1cm4gdGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXMub0JpbmRpbmdDb250ZXh0c1ttXX19O2QucHJvdG90eXBlLnNldE1vZGVsPWZ1bmN0aW9uKG0sbil7aWYoIW0mJnRoaXMub01vZGVsc1tuXSl7ZGVsZXRlIHRoaXMub01vZGVsc1tuXTt0aGlzLnByb3BhZ2F0ZVByb3BlcnRpZXMobik7dGhpcy51cGRhdGVCaW5kaW5ncyhmYWxzZSxuKX1lbHNlIGlmKG0mJm0hPT10aGlzLm9Nb2RlbHNbbl0pe3RoaXMub01vZGVsc1tuXT1tO3RoaXMucHJvcGFnYXRlUHJvcGVydGllcyhuKTt0aGlzLnVwZGF0ZUJpbmRpbmdDb250ZXh0KGZhbHNlLHRydWUsbik7dGhpcy51cGRhdGVCaW5kaW5ncyhmYWxzZSxuKX1lbHNle31yZXR1cm4gdGhpc307ZC5wcm90b3R5cGUucHJvcGFnYXRlUHJvcGVydGllcz1mdW5jdGlvbihuKXt2YXIgcD10aGlzLl9nZXRQcm9wZXJ0aWVzVG9Qcm9wYWdhdGUoKSx1PW49PT10cnVlLE49dT91bmRlZmluZWQ6bix0PXRoaXM7cS5lYWNoKHRoaXMubUFnZ3JlZ2F0aW9ucyxmdW5jdGlvbihhLEEpe2lmKEEgaW5zdGFuY2VvZiBkKXt0Ll9wcm9wYWdhdGVQcm9wZXJ0aWVzKG4sQSxwLHUsTil9ZWxzZSBpZihBIGluc3RhbmNlb2YgQXJyYXkpe2Zvcih2YXIgaT0wO2k8QS5sZW5ndGg7aSsrKXtpZihBW2ldaW5zdGFuY2VvZiBkKXt0Ll9wcm9wYWdhdGVQcm9wZXJ0aWVzKG4sQVtpXSxwLHUsTil9fX19KX07ZC5wcm90b3R5cGUuX3Byb3BhZ2F0ZVByb3BlcnRpZXM9ZnVuY3Rpb24obixvLHAsdSxOKXtpZighcCl7cD10aGlzLl9nZXRQcm9wZXJ0aWVzVG9Qcm9wYWdhdGUoKSx1PW49PT10cnVlLE49dT91bmRlZmluZWQ6bn1vLm9Qcm9wYWdhdGVkUHJvcGVydGllcz1wO28udXBkYXRlQmluZGluZ3ModSxOKTtvLnVwZGF0ZUJpbmRpbmdDb250ZXh0KGZhbHNlLHRydWUsTix1KTtvLnByb3BhZ2F0ZVByb3BlcnRpZXMobil9O2QucHJvdG90eXBlLl9nZXRQcm9wZXJ0aWVzVG9Qcm9wYWdhdGU9ZnVuY3Rpb24oKXt2YXIgbj1xLmlzRW1wdHlPYmplY3QodGhpcy5vTW9kZWxzKSxOPXEuaXNFbXB0eU9iamVjdCh0aGlzLm9CaW5kaW5nQ29udGV4dHMpO2Z1bmN0aW9uIG0oZSxvLGEpe3JldHVybiBlP286cS5leHRlbmQoe30sbyxhKX1pZihOJiZuKXtyZXR1cm4gdGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXN9ZWxzZXtyZXR1cm57b01vZGVsczptKG4sdGhpcy5vUHJvcGFnYXRlZFByb3BlcnRpZXMub01vZGVscyx0aGlzLm9Nb2RlbHMpLG9CaW5kaW5nQ29udGV4dHM6bShOLHRoaXMub1Byb3BhZ2F0ZWRQcm9wZXJ0aWVzLm9CaW5kaW5nQ29udGV4dHMsdGhpcy5vQmluZGluZ0NvbnRleHRzKX19fTtkLnByb3RvdHlwZS5nZXRNb2RlbD1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5vTW9kZWxzW25dfHx0aGlzLm9Qcm9wYWdhdGVkUHJvcGVydGllcy5vTW9kZWxzW25dfTtkLnByb3RvdHlwZS5oYXNNb2RlbD1mdW5jdGlvbigpe3JldHVybiEocS5pc0VtcHR5T2JqZWN0KHRoaXMub01vZGVscykmJnEuaXNFbXB0eU9iamVjdCh0aGlzLm9Qcm9wYWdhdGVkUHJvcGVydGllcy5vTW9kZWxzKSl9O2QucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKEksbCxvKXt2YXIgdD10aGlzLGE9dHJ1ZSxlPXRydWU7aWYobyl7YT0hIW8uY2xvbmVDaGlsZHJlbjtlPSEhby5jbG9uZUJpbmRpbmdzfWlmKCFJKXtJPU0udWlkKCJjbG9uZSIpfHxxLnNhcC51aWQoKX1pZighbCYmYSl7bD1xLm1hcCh0aGlzLmZpbmRBZ2dyZWdhdGVkT2JqZWN0cyh0cnVlKSxmdW5jdGlvbihPKXtyZXR1cm4gTy5nZXRJZCgpfSl9dmFyIG09dGhpcy5nZXRNZXRhZGF0YSgpLGY9bS5fb0NsYXNzLHM9dGhpcy5nZXRJZCgpKyItIitJLFM9e30scD10aGlzLm1Qcm9wZXJ0aWVzLGssZztmb3IoayBpbiBwKXtpZihwLmhhc093blByb3BlcnR5KGspJiYhKHRoaXMuaXNCb3VuZChrKSYmZSkpe1Nba109cFtrXX19U1sibW9kZWxzIl09dGhpcy5vTW9kZWxzO1NbImJpbmRpbmdDb250ZXh0cyJdPXRoaXMub0JpbmRpbmdDb250ZXh0cztpZihhKXtxLmVhY2godGhpcy5tQWdncmVnYXRpb25zLGZ1bmN0aW9uKG4sQSl7aWYobS5oYXNBZ2dyZWdhdGlvbihuKSYmISh0LmlzQm91bmQobikmJmUpKXtpZihBIGluc3RhbmNlb2YgZCl7U1tuXT1BLmNsb25lKEksbCl9ZWxzZSBpZihxLmlzQXJyYXkoQSkpe1Nbbl09W107Zm9yKHZhciBpPTA7aTxBLmxlbmd0aDtpKyspe1Nbbl0ucHVzaChBW2ldLmNsb25lKEksbCkpfX1lbHNle1Nbbl09QX19fSk7cS5lYWNoKHRoaXMubUFzc29jaWF0aW9ucyxmdW5jdGlvbihuLEEpe2lmKHEuaXNBcnJheShBKSl7QT1BLnNsaWNlKDApO2Zvcih2YXIgaT0wO2k8QS5sZW5ndGg7aSsrKXtpZihxLmluQXJyYXkoQVtpXSxsKT49MCl7QVtpXSs9Ii0iK0l9fX1lbHNlIGlmKHEuaW5BcnJheShBLGwpPj0wKXtBKz0iLSIrSX1TW25dPUF9KX1nPW5ldyBmKHMsUyk7cS5lYWNoKHRoaXMubUJvdW5kT2JqZWN0cyxmdW5jdGlvbihuLGgpe2cubUJvdW5kT2JqZWN0c1tuXT1xLmV4dGVuZCh7fSxoKX0pO3EuZWFjaCh0aGlzLm1FdmVudFJlZ2lzdHJ5LGZ1bmN0aW9uKG4sTCl7Zy5tRXZlbnRSZWdpc3RyeVtuXT1MLnNsaWNlKCl9KTtpZihlKXtxLmVhY2godGhpcy5tQmluZGluZ0luZm9zLGZ1bmN0aW9uKG4saCl7dmFyIGk9cS5leHRlbmQoe30saCk7ZGVsZXRlIGkuYmluZGluZztpZihoLmZhY3Rvcnkpe2cuYmluZEFnZ3JlZ2F0aW9uKG4saSl9ZWxzZXtnLmJpbmRQcm9wZXJ0eShuLGkpfX0pfXJldHVybiBnfTtkLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2U9ZnVuY3Rpb24ocCl7dmFyIGk7aWYocD09PTEpe3EuZWFjaCh0aGlzLm9Nb2RlbHMsZnVuY3Rpb24obixtKXtpZihtJiZtLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2Upe20uX2hhbmRsZUxvY2FsaXphdGlvbkNoYW5nZSgpfX0pfWVsc2UgaWYocD09PTIpe3EuZWFjaCh0aGlzLm1CaW5kaW5nSW5mb3MsZnVuY3Rpb24obixvKXt2YXIgUD1vLnBhcnRzO2lmKFApe2ZvcihpPTA7aTxQLmxlbmd0aDtpKyspe2lmKG8udHlwZSYmby50eXBlLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2Upe28udHlwZS5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlKCl9fWlmKG8ubW9kZWxDaGFuZ2VIYW5kbGVyKXtvLm1vZGVsQ2hhbmdlSGFuZGxlcigpfX19KX19O2QuX21hcEFnZ3JlZ2F0aW9uPWZ1bmN0aW9uKHAsbyxuKXt2YXIgaz1wLmdldE1ldGFkYXRhKCkuZ2V0SlNPTktleXMoKTt2YXIgTz1rW29dO3ZhciBOPWtbbl07aWYoIU98fCFOfHxPLl9pS2luZCE9Mnx8Ti5faUtpbmQhPTIpe3JldHVybn12YXIgZj17Imluc2VydCI6dHJ1ZSwiYWRkIjp0cnVlLCJyZW1vdmUiOnRydWUsInJlbW92ZUFsbCI6ZmFsc2UsImluZGV4T2YiOnRydWUsImRlc3Ryb3kiOmZhbHNlLCJnZXQiOmZhbHNlfTtmdW5jdGlvbiBtKFAsZyl7cmV0dXJuIFArZy5zdWJzdHJpbmcoMCwxKS50b1VwcGVyQ2FzZSgpK2cuc3Vic3RyaW5nKDEpfWZ1bmN0aW9uIGEoRil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbRl0uYXBwbHkodGhpcyxhcmd1bWVudHMpfX1mb3IodmFyIFAgaW4gZil7dmFyIHM9bShQLGZbUF0/Ty5zaW5ndWxhck5hbWU6Ty5fc05hbWUpO3ZhciBlPW0oUCxmW1BdP04uc2luZ3VsYXJOYW1lOk4uX3NOYW1lKTtwW3NdPWEoZSl9fTtkLnByb3RvdHlwZS5maW5kQWdncmVnYXRlZE9iamVjdHM9ZnVuY3Rpb24ocil7dmFyIEE9W107ZnVuY3Rpb24gZihvKXtmb3IodmFyIG4gaW4gby5tQWdncmVnYXRpb25zKXt2YXIgYT1vLm1BZ2dyZWdhdGlvbnNbbl07aWYocS5pc0FycmF5KGEpKXtmb3IodmFyIGk9MDtpPGEubGVuZ3RoO2krKyl7QS5wdXNoKGFbaV0pO2lmKHIpe2YoYVtpXSl9fX1lbHNlIGlmKGEgaW5zdGFuY2VvZiBkKXtBLnB1c2goYSk7aWYocil7ZihhKX19fX1mKHRoaXMpO3JldHVybiBBfTtyZXR1cm4gZH0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkZyYWdtZW50Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuRnJhZ21lbnQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9GcmFnbWVudCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL01hbmFnZWRPYmplY3QnLCcuL0RlY2xhcmF0aXZlU3VwcG9ydCcsJy4vWE1MVGVtcGxhdGVQcm9jZXNzb3InXSxmdW5jdGlvbihxLE0sRCxYKXsidXNlIHN0cmljdCI7dmFyIHI9e30sdD17fTt2YXIgRj1NLmV4dGVuZCgic2FwLnVpLmNvcmUuRnJhZ21lbnQiLHttZXRhZGF0YTp7cHJvcGVydGllczp7dHlwZToic3RyaW5nIn19LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKGkscyl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYodGhpcy5fYUNvbnRlbnQmJnRoaXMuX2FDb250ZW50Lmxlbmd0aD09MSl7cmV0dXJuIHRoaXMuX2FDb250ZW50WzBdfWVsc2V7cmV0dXJuIHRoaXMuX2FDb250ZW50fX19KTtGLnJlZ2lzdGVyVHlwZT1mdW5jdGlvbihULGYpe2lmKCF0eXBlb2YoVCk9PT0ic3RyaW5nIil7cS5zYXAubG9nLmVycm9yKCJJZ25vcmluZyBub24tc3RyaW5nIEZyYWdtZW50IHR5cGU6ICIrVCk7cmV0dXJufWlmKHRbVF0pe3Euc2FwLmxvZy53YXJuaW5nKCJzYXAudWkuY29yZS5GcmFnbWVudC5yZWdpc3RlclR5cGUoKTogRnJhZ21lbnQgdHlwZSAnIitUKyInIGlzIGFscmVhZHkgZGVmaW5lZC4gT3ZlcnJpZGluZyB0aGlzIHR5cGUgbm93ISIpfXRbVF09Zn07Ri5wcm90b3R5cGUuX2luaXRDb21wb3NpdGVTdXBwb3J0PWZ1bmN0aW9uKHMpe2lmKCFzKXt0aHJvdyBuZXcgRXJyb3IoIlNldHRpbmdzIG11c3QgYmUgc2V0Iil9aWYoIShzLmZyYWdtZW50TmFtZXx8cy5mcmFnbWVudENvbnRlbnQpKXt0aHJvdyBuZXcgRXJyb3IoIlBsZWFzZSBwcm92aWRlIGEgZnJhZ21lbnQgbmFtZSIpfWlmKHMub0NvbnRyb2xsZXIpe3RoaXMub0NvbnRyb2xsZXI9cy5vQ29udHJvbGxlcn10aGlzLl9zRXhwbGljaXRJZD1zLnNJZHx8cy5pZDt0aGlzLl9zRnJhZ21lbnROYW1lPXMuZnJhZ21lbnROYW1lO3ZhciBmPXRbcy50eXBlXTtpZihmKXtmLmluaXQuYXBwbHkodGhpcyxbc10pfWVsc2V7dGhyb3cgbmV3IEVycm9yKCJObyB0eXBlIGZvciB0aGUgZnJhZ21lbnQgaGFzIGJlZW4gc3BlY2lmaWVkOiAiK3MudHlwZSl9fTtGLnByb3RvdHlwZS5nZXRDb250cm9sbGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub0NvbnRyb2xsZXJ9O0YuYnlJZD1mdW5jdGlvbihmLGkpe2lmKCEodHlwZW9mKGYpPT09InN0cmluZyImJnR5cGVvZihpKT09PSJzdHJpbmciKSl7cS5zYXAubG9nLmVycm9yKCJzYXAudWkuY29yZS5GcmFnbWVudC5ieUlkOiB0d28gc3RyaW5ncyBtdXN0IGJlIGdpdmVuIGFzIHBhcmFtZXRlcnMsIGJ1dCBhcmU6ICIrZisiIGFuZCAiK2kpO3JldHVybiB1bmRlZmluZWR9cmV0dXJuIHNhcC51aS5nZXRDb3JlKCkuYnlJZChmKyItLSIraSl9O0YuY3JlYXRlSWQ9ZnVuY3Rpb24oZixpKXtpZighKHR5cGVvZihmKT09PSJzdHJpbmciJiZ0eXBlb2YoaSk9PT0ic3RyaW5nIikpe3Euc2FwLmxvZy5lcnJvcigic2FwLnVpLmNvcmUuRnJhZ21lbnQuY3JlYXRlSWQ6IHR3byBzdHJpbmdzIG11c3QgYmUgZ2l2ZW4gYXMgcGFyYW1ldGVycywgYnV0IGFyZTogIitmKyIgYW5kICIraSk7cmV0dXJuIHVuZGVmaW5lZH1yZXR1cm4gZisiLS0iK2l9O0YucHJvdG90eXBlLmNyZWF0ZUlkPWZ1bmN0aW9uKGkpe3ZhciBhPXRoaXMuX3NFeHBsaWNpdElkP3RoaXMuX3NFeHBsaWNpdElkKyItLSIraTppO2lmKHRoaXMuX29Db250YWluaW5nVmlldyYmdGhpcy5fb0NvbnRhaW5pbmdWaWV3IT10aGlzKXthPXRoaXMuX29Db250YWluaW5nVmlldy5jcmVhdGVJZChhKX1yZXR1cm4gYX07Ri5wcm90b3R5cGUuaXNTdWJWaWV3PWZ1bmN0aW9uKCl7cmV0dXJuIHRydWV9O3NhcC51aS5mcmFnbWVudD1mdW5jdGlvbihuLFQsYyl7dmFyIHM9e307aWYodHlwZW9mKG4pPT09InN0cmluZyIpe3MuZnJhZ21lbnROYW1lPW47cy5vQ29udHJvbGxlcj1jO3MudHlwZT1UfWVsc2UgaWYodHlwZW9mKG4pPT09Im9iamVjdCIpe3M9bjtpZihUKXtzLm9Db250cm9sbGVyPVR9fWVsc2V7cS5zYXAubG9nLmVycm9yKCJzYXAudWkuZnJhZ21lbnQoKSBtdXN0IGJlIGNhbGxlZCB3aXRoIEZyYWdtZW50IG5hbWUgb3IgY29uZmlnIG9iamVjdCBhcyBmaXJzdCBwYXJhbWV0ZXIsIGJ1dCBpczogIituKX1yZXR1cm4gbmV3IEYocyl9O3NhcC51aS54bWxmcmFnbWVudD1mdW5jdGlvbihpLGYsYyl7aWYodHlwZW9mKGkpPT09InN0cmluZyIpe2lmKHR5cGVvZihmKT09PSJzdHJpbmciKXtyZXR1cm4gc2FwLnVpLmZyYWdtZW50KHtmcmFnbWVudE5hbWU6ZixzSWQ6aSx0eXBlOiJYTUwifSxjKX1lbHNle3JldHVybiBzYXAudWkuZnJhZ21lbnQoaSwiWE1MIixmKX19ZWxzZXtpLnR5cGU9IlhNTCI7cmV0dXJuIHNhcC51aS5mcmFnbWVudChpLGYpfX07c2FwLnVpLmpzZnJhZ21lbnQ9ZnVuY3Rpb24obixmKXtpZih0eXBlb2Yobik9PT0ic3RyaW5nIiYmdHlwZW9mKGYpPT09Im9iamVjdCIpe2lmKGYuY3JlYXRlQ29udGVudCl7cltuXT1mO3Euc2FwLmRlY2xhcmUoe21vZE5hbWU6bix0eXBlOiJmcmFnbWVudCJ9LGZhbHNlKX1lbHNle3JldHVybiBzYXAudWkuZnJhZ21lbnQobiwiSlMiLGYpfX1lbHNlIGlmKHR5cGVvZihuKT09PSJzdHJpbmciJiZmPT09dW5kZWZpbmVkKXtyZXR1cm4gc2FwLnVpLmZyYWdtZW50KG4sIkpTIil9ZWxzZXtpZih0eXBlb2Yobik9PT0ib2JqZWN0Iil7bi50eXBlPSJKUyI7cmV0dXJuIHNhcC51aS5mcmFnbWVudChuLGYpfWVsc2UgaWYoYXJndW1lbnRzJiZhcmd1bWVudHMubGVuZ3RoPj0zKXtyZXR1cm4gc2FwLnVpLmZyYWdtZW50KHtpZDpuLGZyYWdtZW50TmFtZTpmLHR5cGU6IkpTIn0sYXJndW1lbnRzWzJdKX1lbHNle3Euc2FwLmxvZy5lcnJvcigic2FwLnVpLmpzZnJhZ21lbnQoKSB3YXMgY2FsbGVkIHdpdGggd3JvbmcgcGFyYW1ldGVyIHNldDogIituKyIgKyAiK2YpfX19O3NhcC51aS5odG1sZnJhZ21lbnQ9ZnVuY3Rpb24oaSxmLGMpe2lmKHR5cGVvZihpKT09PSJzdHJpbmciKXtpZih0eXBlb2YoZik9PT0ic3RyaW5nIil7cmV0dXJuIHNhcC51aS5mcmFnbWVudCh7ZnJhZ21lbnROYW1lOmYsc0lkOmksdHlwZToiSFRNTCJ9LGMpfWVsc2V7cmV0dXJuIHNhcC51aS5mcmFnbWVudChpLCJIVE1MIixmKX19ZWxzZXtpLnR5cGU9IkhUTUwiO3JldHVybiBzYXAudWkuZnJhZ21lbnQoaSxmKX19O0YucmVnaXN0ZXJUeXBlKCJYTUwiLHtpbml0OmZ1bmN0aW9uKHMpe3RoaXMuX3hDb250ZW50PXMuZnJhZ21lbnRDb250ZW50PygodHlwZW9mKHMuZnJhZ21lbnRDb250ZW50KT09PSJzdHJpbmciKT9xLnBhcnNlWE1MKHMuZnJhZ21lbnRDb250ZW50KS5kb2N1bWVudEVsZW1lbnQ6cy5mcmFnbWVudENvbnRlbnQpOlgubG9hZFRlbXBsYXRlKHMuZnJhZ21lbnROYW1lLCJmcmFnbWVudCIpO3RoaXMuX29Db250YWluaW5nVmlldz10aGlzLl9zRXhwbGljaXRJZD90aGlzOihzLmNvbnRhaW5pbmdWaWV3fHx0aGlzKTtpZigodGhpcy5fb0NvbnRhaW5pbmdWaWV3PT09dGhpcykpe3RoaXMuX29Db250YWluaW5nVmlldy5vQ29udHJvbGxlcj0ocy5jb250YWluaW5nVmlldyYmcy5jb250YWluaW5nVmlldy5vQ29udHJvbGxlcil8fHMub0NvbnRyb2xsZXJ9dmFyIGE9dGhpcztNLnJ1bldpdGhQcmVwcm9jZXNzb3JzKGZ1bmN0aW9uKCl7dmFyIHg9YS5feENvbnRlbnQ7YS5fYUNvbnRlbnQ9WC5wYXJzZVRlbXBsYXRlKGEuX3hDb250ZW50LGEpfSl9fSk7Ri5yZWdpc3RlclR5cGUoIkpTIix7aW5pdDpmdW5jdGlvbihzKXtpZighcltzLmZyYWdtZW50TmFtZV0pe3Euc2FwLnJlcXVpcmUoe21vZE5hbWU6cy5mcmFnbWVudE5hbWUsdHlwZToiZnJhZ21lbnQifSl9cS5leHRlbmQodGhpcyxyW3MuZnJhZ21lbnROYW1lXSk7dGhpcy5fb0NvbnRhaW5pbmdWaWV3PXMuY29udGFpbmluZ1ZpZXd8fHRoaXM7dmFyIGE9dGhpcztNLnJ1bldpdGhQcmVwcm9jZXNzb3JzKGZ1bmN0aW9uKCl7dmFyIGM9YS5jcmVhdGVDb250ZW50KHMub0NvbnRyb2xsZXJ8fGEuX29Db250YWluaW5nVmlldy5vQ29udHJvbGxlcik7YS5fYUNvbnRlbnQ9W107YS5fYUNvbnRlbnQ9YS5fYUNvbnRlbnQuY29uY2F0KGMpfSl9fSk7KGZ1bmN0aW9uKCl7dmFyIF89e307dmFyIGE9ZnVuY3Rpb24oVCl7dmFyIHU9cS5zYXAuZ2V0TW9kdWxlUGF0aChULCIuZnJhZ21lbnQuaHRtbCIpO3ZhciBoPV9bdV07dmFyIFI7aWYoIWgpe1I9cS5zYXAuZ2V0UmVzb3VyY2VOYW1lKFQsIi5mcmFnbWVudC5odG1sIik7aD1xLnNhcC5sb2FkUmVzb3VyY2UoUik7X1t1XT1ofXJldHVybiBofTtGLnJlZ2lzdGVyVHlwZSgiSFRNTCIse2luaXQ6ZnVuY3Rpb24ocyl7dGhpcy5fYUNvbnRlbnQ9W107dGhpcy5nZXRDb250ZW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FDb250ZW50fTt0aGlzLmFkZENvbnRlbnQ9ZnVuY3Rpb24oQyl7dGhpcy5fYUNvbnRlbnQucHVzaChDKX07dGhpcy5fb0NvbnRhaW5pbmdWaWV3PXMuY29udGFpbmluZ1ZpZXd8fHRoaXM7dmFyIGg9cy5mcmFnbWVudENvbnRlbnR8fGEocy5mcmFnbWVudE5hbWUpO3RoaXMuX29UZW1wbGF0ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt2YXIgSD1zYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLnByZXBhcmVIVE1MNShoKTtpZih0eXBlb2YgSD09PSJzdHJpbmciKXt0aGlzLl9vVGVtcGxhdGUuaW5uZXJIVE1MPUh9ZWxzZXt2YXIgbj1IO3ZhciBmPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7Zi5hcHBlbmRDaGlsZChuLml0ZW0oaSkpfXRoaXMuX29UZW1wbGF0ZS5hcHBlbmRDaGlsZChmKX12YXIgbT10aGlzLl9vVGVtcGxhdGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRlbXBsYXRlIilbMF07dmFyIHA9dGhpcy5nZXRNZXRhZGF0YSgpLmdldEFsbFByb3BlcnRpZXMoKTtpZihtKXt2YXIgYj10aGlzO3ZhciBjPUQ7cS5lYWNoKG0uYXR0cmlidXRlcyxmdW5jdGlvbihJLEEpe3ZhciBOPWMuY29udmVydEF0dHJpYnV0ZVRvU2V0dGluZ05hbWUoQS5uYW1lLGIuZ2V0SWQoKSk7dmFyIHY9QS52YWx1ZTt2YXIgUD1wW05dO2lmKCFzW05dKXtpZihQKXtzW05dPWMuY29udmVydFZhbHVlVG9UeXBlKGMuZ2V0UHJvcGVydHlEYXRhVHlwZShQKSx2KX1lbHNlIGlmKHNhcC51aS5jb3JlLm12Yy5IVE1MVmlldy5fbUFsbG93ZWRTZXR0aW5nc1tOXSl7c1tOXT12fX19KTt0aGlzLl9vVGVtcGxhdGU9bX1pZih0aGlzLl9vVGVtcGxhdGUuY29udGVudCl7dmFyIGY9dGhpcy5fb1RlbXBsYXRlLmNvbnRlbnQ7dGhpcy5fb1RlbXBsYXRlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RoaXMuX29UZW1wbGF0ZS5hcHBlbmRDaGlsZChmKX12YXIgYj10aGlzO00ucnVuV2l0aFByZXByb2Nlc3NvcnMoZnVuY3Rpb24oKXtELmNvbXBpbGUoYi5fb1RlbXBsYXRlLGIpO3ZhciBkPWIuZ2V0Q29udGVudCgpO2lmKGQmJmQubGVuZ3RoPT09MSl7Yi5fYUNvbnRlbnQ9W2RbMF1dfWVsc2V7fX0pfX0pfSgpKTtyZXR1cm4gRn0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnJvdXRpbmcuUm91dGVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUucm91dGluZy5Sb3V0ZXInKTtqUXVlcnkuc2FwLnJlcXVpcmUoJ3NhcC51aS50aGlyZHBhcnR5LmNyb3Nzcm9hZHMnKTtqUXVlcnkuc2FwLnJlcXVpcmUoJ3NhcC51aS50aGlyZHBhcnR5LnNpZ25hbHMnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9yb3V0aW5nL1JvdXRlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCdzYXAvdWkvYmFzZS9NYW5hZ2VkT2JqZWN0JywnLi9IYXNoQ2hhbmdlcicsJy4vUm91dGUnLCdzYXAvdWkvdGhpcmRwYXJ0eS9jcm9zc3JvYWRzJywnc2FwL3VpL3RoaXJkcGFydHkvc2lnbmFscyddLGZ1bmN0aW9uKHEsRSxNLEgsUixjLHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgcj17fTt2YXIgYT1FLmV4dGVuZCgic2FwLnVpLmNvcmUucm91dGluZy5Sb3V0ZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihvLEMsTyl7RS5hcHBseSh0aGlzKTt0aGlzLl9vQ29uZmlnPUM7dGhpcy5fb1JvdXRlcj1jcm9zc3JvYWRzLmNyZWF0ZSgpO3RoaXMuX29Sb3V0ZXIuaWdub3JlU3RhdGU9dHJ1ZTt0aGlzLl9vUm91dGVzPXt9O3RoaXMuX29WaWV3cz17fTt0aGlzLl9vT3duZXI9Tzt2YXIgdD10aGlzO2lmKCFvKXtvPXt9fWlmKHEuaXNBcnJheShvKSl7dmFyIGI9bztvPXt9O3EuZWFjaChiLGZ1bmN0aW9uKGksZCl7b1tkLm5hbWVdPWR9KX1xLmVhY2gobyxmdW5jdGlvbihkLGUpe2lmKGUubmFtZT09dW5kZWZpbmVkKXtlLm5hbWU9ZH10LmFkZFJvdXRlKGUpfSl9LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsiaW5pdGlhbGl6ZSIsImdldFVSTCIsInJlZ2lzdGVyIl19fSk7YS5NX0VWRU5UUz17Um91dGVNYXRjaGVkOiJyb3V0ZU1hdGNoZWQiLFJvdXRlUGF0dGVybk1hdGNoZWQ6InJvdXRlUGF0dGVybk1hdGNoZWQiLFZpZXdDcmVhdGVkOiJ2aWV3Q3JlYXRlZCJ9O2EucHJvdG90eXBlLmFkZFJvdXRlPWZ1bmN0aW9uKEMscCl7aWYoIUMubmFtZSl7cS5zYXAubG9nLmVycm9yKCJBIG5hbWUgaGFzIHRvIGJlIHNwZWNpZmllZCBmb3IgZXZlcnkgcm91dGUiKX1pZih0aGlzLl9vUm91dGVzW0MubmFtZV0pe3Euc2FwLmxvZy5lcnJvcigiUm91dGUgd2l0aCBuYW1lICIrQy5uYW1lKyIgYWxyZWFkeSBleGlzdHMiKX10aGlzLl9vUm91dGVzW0MubmFtZV09bmV3IFIodGhpcyxDLHApfTthLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbihuLG8pe3RoaXMuX29Sb3V0ZXIucGFyc2Uobil9O2EucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGg9dGhpcy5vSGFzaENoYW5nZXI9SC5nZXRJbnN0YW5jZSgpO2lmKHRoaXMuX2JJc0luaXRpYWxpemVkKXtxLnNhcC5sb2cud2FybmluZygiUm91dGVyIGlzIGFscmVhZHkgaW5pdGlhbGl6ZWQuIik7cmV0dXJuIHRoaXN9dGhpcy5fYklzSW5pdGlhbGl6ZWQ9dHJ1ZTt0aGlzLmZuSGFzaENoYW5nZWQ9ZnVuY3Rpb24oZSl7dC5wYXJzZShlLmdldFBhcmFtZXRlcigibmV3SGFzaCIpLGUuZ2V0UGFyYW1ldGVyKCJvbGRIYXNoIikpfTtoLmF0dGFjaEV2ZW50KCJoYXNoQ2hhbmdlZCIsdGhpcy5mbkhhc2hDaGFuZ2VkKTtpZighaC5pbml0KCkpe3RoaXMucGFyc2UoaC5nZXRIYXNoKCkpfXJldHVybiB0aGlzfTthLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2JJc0luaXRpYWxpemVkKXtxLnNhcC5sb2cud2FybmluZygiUm91dGVyIGlzIG5vdCBpbml0aWFsaXplZC4gQnV0IGl0IGdvdCBzdG9wcGVkIil9aWYodGhpcy5mbkhhc2hDaGFuZ2VkKXt0aGlzLm9IYXNoQ2hhbmdlci5kZXRhY2hFdmVudCgiaGFzaENoYW5nZWQiLHRoaXMuZm5IYXNoQ2hhbmdlZCl9dGhpcy5fYklzSW5pdGlhbGl6ZWQ9ZmFsc2U7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtFLnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMpO2lmKCF0aGlzLl9iSXNJbml0aWFsaXplZCl7cS5zYXAubG9nLmluZm8oIlJvdXRlciBpcyBub3QgaW5pdGlhbGl6ZWQsIGJ1dCBnb3QgZGVzdHJveWVkLiIpfWlmKHRoaXMuZm5IYXNoQ2hhbmdlZCl7dGhpcy5vSGFzaENoYW5nZXIuZGV0YWNoRXZlbnQoImhhc2hDaGFuZ2VkIix0aGlzLmZuSGFzaENoYW5nZWQpfXRoaXMuX29Pd25lcj1udWxsO3RoaXMuX29Sb3V0ZXIucmVtb3ZlQWxsUm91dGVzKCk7dGhpcy5fb1JvdXRlcj1udWxsO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5nZXRVUkw9ZnVuY3Rpb24obixwKXtpZihwPT09dW5kZWZpbmVkKXtwPXt9fXZhciBvPXRoaXMuX29Sb3V0ZXNbbl07aWYoIW8pe3Euc2FwLmxvZy53YXJuaW5nKCJSb3V0ZSB3aXRoIG5hbWUgIituKyIgZG9lcyBub3QgZXhpc3QiKTtyZXR1cm59cmV0dXJuIG8uZ2V0VVJMKHApfTthLnByb3RvdHlwZS5nZXRWaWV3PWZ1bmN0aW9uKHYsVixiKXtpZighdil7cS5zYXAubG9nLmVycm9yKCJBIG5hbWUgZm9yIHRoZSB2aWV3IGhhcyB0byBiZSBkZWZpbmVkIil9aWYoIXRoaXMuX29WaWV3c1t2XSl7dmFyIEM9ZnVuY3Rpb24oKXt2YXIgbz17dHlwZTpWLHZpZXdOYW1lOnZ9O2lmKGIpe28uaWQ9Yn1yZXR1cm4gc2FwLnVpLnZpZXcobyl9O2lmKHRoaXMuX29Pd25lcil7dmFyIHQ9dGhpcztNLnJ1bldpdGhPd25lcihmdW5jdGlvbigpe3QuX29WaWV3c1t2XT1DKCl9LHRoaXMuX29Pd25lcil9ZWxzZXt0aGlzLl9vVmlld3Nbdl09QygpfXRoaXMuZmlyZVZpZXdDcmVhdGVkKHt2aWV3OnRoaXMuX29WaWV3c1t2XSx2aWV3TmFtZTp2LHR5cGU6Vn0pfXJldHVybiB0aGlzLl9vVmlld3Nbdl19O2EucHJvdG90eXBlLm5hdlRvPWZ1bmN0aW9uKG4scCxiKXtpZihiKXt0aGlzLm9IYXNoQ2hhbmdlci5yZXBsYWNlSGFzaCh0aGlzLmdldFVSTChuLHApKX1lbHNle3RoaXMub0hhc2hDaGFuZ2VyLnNldEhhc2godGhpcy5nZXRVUkwobixwKSl9fTthLnByb3RvdHlwZS5hdHRhY2hSb3V0ZU1hdGNoZWQ9ZnVuY3Rpb24oZCxmLGwpe3RoaXMuYXR0YWNoRXZlbnQoInJvdXRlTWF0Y2hlZCIsZCxmLGwpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5kZXRhY2hSb3V0ZU1hdGNoZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJyb3V0ZU1hdGNoZWQiLGYsbCk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmZpcmVSb3V0ZU1hdGNoZWQ9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoInJvdXRlTWF0Y2hlZCIsQSk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmF0dGFjaFZpZXdDcmVhdGVkPWZ1bmN0aW9uKGQsZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJ2aWV3Q3JlYXRlZCIsZCxmLGwpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5kZXRhY2hWaWV3Q3JlYXRlZD1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoInZpZXdDcmVhdGVkIixmLGwpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5maXJlVmlld0NyZWF0ZWQ9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoInZpZXdDcmVhdGVkIixBKTtyZXR1cm4gdGhpc307YS5wcm90b3R5cGUuYXR0YWNoUm91dGVQYXR0ZXJuTWF0Y2hlZD1mdW5jdGlvbihkLGYsbCl7dGhpcy5hdHRhY2hFdmVudCgicm91dGVQYXR0ZXJuTWF0Y2hlZCIsZCxmLGwpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5kZXRhY2hSb3V0ZVBhdHRlcm5NYXRjaGVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgicm91dGVQYXR0ZXJuTWF0Y2hlZCIsZixsKTtyZXR1cm4gdGhpc307YS5wcm90b3R5cGUuZmlyZVJvdXRlUGF0dGVybk1hdGNoZWQ9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoInJvdXRlUGF0dGVybk1hdGNoZWQiLEEpO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihuKXtyW25dPXRoaXM7cmV0dXJuIHRoaXN9O2EuZ2V0Um91dGVyPWZ1bmN0aW9uKG4pe3JldHVybiByW25dfTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvdG1wbC9UZW1wbGF0ZSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL01hbmFnZWRPYmplY3QnXSxmdW5jdGlvbihxLE0peyJ1c2Ugc3RyaWN0Ijt2YXIgVD1NLmV4dGVuZCgic2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZSIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKGkscyl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG1ldGFkYXRhOntzdGVyZW90eXBlOiJ0ZW1wbGF0ZSIsImFic3RyYWN0Ijp0cnVlLHByb3BlcnRpZXM6eyJjb250ZW50Ijp7dHlwZToic3RyaW5nIixncm91cDoiRGF0YSIsZGVmYXVsdFZhbHVlOm51bGx9fSxwdWJsaWNNZXRob2RzOlsiZGVjbGFyZUNvbnRyb2wiLCJjcmVhdGVDb250cm9sIiwicGxhY2VBdCIsImNyZWF0ZU1ldGFkYXRhIiwiY3JlYXRlUmVuZGVyZXIiXSxsaWJyYXJ5OiJzYXAudWkuY29yZSJ9fSk7VC5wcm90b3R5cGUuZ2V0SW50ZXJmYWNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O1QuX21TdXBwb3J0ZWRUeXBlcz17fTtULnJlZ2lzdGVyVHlwZT1mdW5jdGlvbih0LGMpe1QuX21TdXBwb3J0ZWRUeXBlc1t0XT1jfTtULnVucmVnaXN0ZXJUeXBlPWZ1bmN0aW9uKHQpe2RlbGV0ZSBULl9tU3VwcG9ydGVkVHlwZXNbdF19O1QucGFyc2VQYXRoPWZ1bmN0aW9uKHApe3ZhciBtPXVuZGVmaW5lZCxzPXAuaW5kZXhPZigiPiIpO2lmKHM+MCl7bT1wLnN1YnN0cigwLHMpO3A9cC5zdWJzdHIocysxKX1yZXR1cm57cGF0aDpwLG1vZGVsOm19fTtULnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKHMsUyl7aWYodGhpcy5nZXRNZXRhZGF0YSgpLmdldE5hbWUoKT09PSJzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlIil7dGhyb3cgbmV3IEVycm9yKCJUaGUgY2xhc3MgJ3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGUnIGlzIGFic3RyYWN0IGFuZCBtdXN0IG5vdCBiZSBpbnN0YW50aWF0ZWQhIil9aWYoTS5iaW5kaW5nUGFyc2VyPT09c2FwLnVpLmJhc2UuQmluZGluZ1BhcnNlci5jb21wbGV4UGFyc2VyKXtULnByb3RvdHlwZS5leHRyYWN0QmluZGluZ0luZm89ZnVuY3Rpb24odixpLFMpe00uYmluZGluZ1BhcnNlcj1zYXAudWkuYmFzZS5CaW5kaW5nUGFyc2VyLnNpbXBsZVBhcnNlcjt2YXIgcj1zYXAudWkuY29yZS5Db250cm9sLnByb3RvdHlwZS5leHRyYWN0QmluZGluZ0luZm8uYXBwbHkodGhpcyxhcmd1bWVudHMpO00uYmluZGluZ1BhcnNlcj1zYXAudWkuYmFzZS5CaW5kaW5nUGFyc2VyLmNvbXBsZXhQYXJzZXI7cmV0dXJuIHJ9fX07VC5wcm90b3R5cGUuZGVjbGFyZUNvbnRyb2w9ZnVuY3Rpb24oYyl7aWYoYyl7dmFyIG09dGhpcy5jcmVhdGVNZXRhZGF0YSgpLHI9dGhpcy5jcmVhdGVSZW5kZXJlcigpLHQ9dGhpcztxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbCIpO3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLmV4dGVuZChjLHttZXRhZGF0YTptLGluaXQ6ZnVuY3Rpb24oKXtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zZXRUZW1wbGF0ZSh0KX0scmVuZGVyZXI6e3JlbmRlclRlbXBsYXRlOnJ9fSk7cmV0dXJuIHEuc2FwLmdldE9iamVjdChjKX19O1QucHJvdG90eXBlLmNyZWF0ZUNvbnRyb2w9ZnVuY3Rpb24oaSxjLHYpe3Euc2FwLnJlcXVpcmUoInNhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sIik7dmFyIEM9bmV3IHNhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sKHtpZDppLHRlbXBsYXRlOnRoaXMsY29udGV4dDpjfSk7Qy5zZXRUZW1wbGF0ZVJlbmRlcmVyKHRoaXMuY3JlYXRlUmVuZGVyZXIodikpO3JldHVybiBDfTtULnByb3RvdHlwZS5wbGFjZUF0PWZ1bmN0aW9uKHIsYyxwLGkpe2lmKHR5cGVvZiBjPT09InN0cmluZyJ8fHR5cGVvZiBjPT09Im51bWJlciIpe3A9YztjPXVuZGVmaW5lZH12YXIgSTtpZighKHIgaW5zdGFuY2VvZiBzYXAudWkuY29yZS5Db250cm9sKSYmaSl7dmFyICQ9dHlwZW9mIHI9PT0ic3RyaW5nIj9xLnNhcC5ieUlkKHIpOnEocik7aWYoJC5sZW5ndGg+MCl7ST0kLmF0dHIoImlkIik7cj0kLmdldCgwKTt2YXIgQz0kLmF0dHIoImRhdGEtY29udGV4dCIpO2M9Y3x8QyYmcS5wYXJzZUpTT04oQyk7c2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlci5tYXJrSW5saW5lVGVtcGxhdGUoJCl9fXZhciBvPXRoaXMuY3JlYXRlQ29udHJvbChJLGMpO28ucGxhY2VBdChyLHApO3JldHVybiBvfTtULnByb3RvdHlwZS5jcmVhdGVNZXRhZGF0YT1mdW5jdGlvbigpe3Euc2FwLmxvZy5lcnJvcigiVGhlIGZ1bmN0aW9uIGNyZWF0ZU1ldGFkYXRhIGlzIGFuIGFic3RyYWN0IGZ1bmN0aW9uIHdoaWNoIG5lZWRzIHRvIGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzZXMuIil9O1QucHJvdG90eXBlLmNyZWF0ZVJlbmRlcmVyPWZ1bmN0aW9uKCl7cS5zYXAubG9nLmVycm9yKCJUaGUgZnVuY3Rpb24gY3JlYXRlUmVuZGVyZXIgaXMgYW4gYWJzdHJhY3QgZnVuY3Rpb24gd2hpY2ggbmVlZHMgdG8gYmUgaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3Nlcy4iKX07c2FwLnVpLnRlbXBsYXRlPWZ1bmN0aW9uKHQpe2lmKCF0KXt2YXIgYT1bXTtxLmVhY2goVC5fbVN1cHBvcnRlZFR5cGVzLGZ1bmN0aW9uKHMsaCl7cSgic2NyaXB0W3R5cGU9JyIrcysiJ10sIFtkYXRhLXR5cGU9JyIrcysiJ10iKS5lYWNoKGZ1bmN0aW9uKGssRSl7YS5wdXNoKHNhcC51aS50ZW1wbGF0ZSh7aWQ6RS5pZCxkb21yZWY6RSx0eXBlOnMsX2NsYXNzOmh9KSl9KX0pO3JldHVybiBhfWVsc2V7aWYodHlwZW9mIHQ9PT0ic3RyaW5nIil7cmV0dXJuIHNhcC51aS50ZW1wbGF0ZSh7aWQ6dH0pfWVsc2UgaWYodCYmdC50YWdOYW1lJiZ0Lm5vZGVOYW1lJiZ0Lm93bmVyRG9jdW1lbnQmJnQubm9kZVR5cGU9PT0xKXtyZXR1cm4gc2FwLnVpLnRlbXBsYXRlKHtpZDp0LmlkLGRvbXJlZjp0fSl9dD1xLmV4dGVuZCh7dHlwZTpULkRFRkFVTFRfVEVNUExBVEV9LHQpO3ZhciBpLHMsYyxDLHIsYj1mYWxzZSxsPXR5cGVvZiB0LnNyYz09PSJzdHJpbmciO2lmKGwpe3ZhciBSPXEuc2FwLnNqYXgoe3VybDp0LnNyYyxkYXRhVHlwZToidGV4dCJ9KTtpZihSLnN1Y2Nlc3Mpe2k9dC5pZCxzPXQudHlwZSxjPXQuY29udHJvbCxDPVIuZGF0YTt2YXIgZD0vXjwhLS1cc1VJNTpUZW1wbGF0ZVxzdHlwZT0oW2EtelwvXC1dKilccyg/OmNvbnRyb2xsZXI9KFtBLVphLXouXSopXHMpPy0tPi8sZT1DLm1hdGNoKGQpO2lmKGUpe3M9ZVsxXTtpZihlLmxlbmd0aD09Myl7Yj1lWzJdfUM9Qy5zdWJzdHIoZVswXS5sZW5ndGgpfX1lbHNle3Rocm93IG5ldyBFcnJvcigiVGhlIHRlbXBsYXRlIGNvdWxkIG5vdCBiZSBsb2FkZWQgZnJvbSAiK3Quc3JjKyIhIil9fWVsc2V7dmFyIEU9dC5kb21yZWZ8fHEuc2FwLmRvbUJ5SWQodC5pZCksJD1xKEUpLEk9ZmFsc2U7aT10LmlkfHxFJiZFLmlkO3M9JC5hdHRyKCJ0eXBlIil8fHQudHlwZSxjPSQuYXR0cigiZGF0YS1jb250cm9sIil8fHQuY29udHJvbDtpZihpKXt2YXIgZj1zYXAudWkuZ2V0Q29yZSgpLmdldFRlbXBsYXRlKGkpO2lmKCFmIGluc3RhbmNlb2YgVCl7dGhyb3cgbmV3IEVycm9yKCJPYmplY3QgZm9yIGlkIFwiIitpKyJcIiBpcyBubyBzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlISIpfWVsc2V7aWYoZil7cmV0dXJuIGZ9fX1pZigkLmxlbmd0aD09PTApe3Rocm93IG5ldyBFcnJvcigiRE9NIGVsZW1lbnQgZm9yIHRoZSBUZW1wbGF0ZSB3aXRoIHRoZSBpZCBcIiIraSsiXCIgbm90IGZvdW5kISIpfUM9JC5odG1sKCk7dmFyIGc9RS50YWdOYW1lLnRvTG93ZXJDYXNlKCk7aWYoZyE9PSJzY3JpcHQiKXtJPSQucGFyZW50cygiYm9keSIpLmxlbmd0aD09PTF9fXZhciBoPXQuX2NsYXNzO2lmKCFoKXtoPVQuX21TdXBwb3J0ZWRUeXBlc1tzXTtpZighaCl7dGhyb3cgbmV3IEVycm9yKCJUaGUgdHlwZSBcIiIrcysiXCIgaXMgbm90IHN1cHBvcnRlZC4iKX19cS5zYXAucmVxdWlyZShoKTt2YXIgbz1xLnNhcC5nZXRPYmplY3QoaCk7dmFyIGo9bmV3IG8oe2lkOmksY29udGVudDpDfSk7aWYoYyl7ai5kZWNsYXJlQ29udHJvbChjKX1pZihiKXtqLl9zQ29udHJvbGxlck5hbWU9Yn1pZihJKXtqLnBsYWNlQXQoaSx0LmNvbnRleHQsdW5kZWZpbmVkLHRydWUpfXJldHVybiBqfX07VC5ERUZBVUxUX1RFTVBMQVRFPSJ0ZXh0L3gtaGFuZGxlYmFycy10ZW1wbGF0ZSI7VC5yZWdpc3RlclR5cGUoVC5ERUZBVUxUX1RFTVBMQVRFLCJzYXAudWkuY29yZS50bXBsLkhhbmRsZWJhcnNUZW1wbGF0ZSIpO3JldHVybiBUfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUudXRpbC5Nb2NrU2VydmVyJykpew0KLyoKICogU0FQIFVJIGRldmVsb3BtZW50IHRvb2xraXQgZm9yIEhUTUw1IChTQVBVSTUvT3BlblVJNSkKICogKGMpIENvcHlyaWdodCAyMDA5LTIwMTQgU0FQIEFHIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgLSBzZWUgTElDRU5TRS50eHQuCiAqLw0KalF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS51dGlsLk1vY2tTZXJ2ZXInKTtqUXVlcnkuc2FwLnJlcXVpcmUoJ3NhcC51aS50aGlyZHBhcnR5LnNpbm9uJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvdXRpbC9Nb2NrU2VydmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL0RldmljZScsJ3NhcC91aS9iYXNlL01hbmFnZWRPYmplY3QnLCdzYXAvdWkvdGhpcmRwYXJ0eS9zaW5vbiddLGZ1bmN0aW9uKHEsRCxNLHMpeyJ1c2Ugc3RyaWN0IjtpZighIUQuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3Jlcil7cS5zYXAucmVxdWlyZSgic2FwLnVpLnRoaXJkcGFydHkuc2lub24taWUiKX12YXIgYz1NLmV4dGVuZCgic2FwLnVpLmNvcmUudXRpbC5Nb2NrU2VydmVyIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oaSxTLG8pe00uYXBwbHkodGhpcyxhcmd1bWVudHMpO2MuX2FTZXJ2ZXJzLnB1c2godGhpcyl9LG1ldGFkYXRhOntwcm9wZXJ0aWVzOntyb290VXJpOiJzdHJpbmciLHJlcXVlc3RzOnt0eXBlOiJvYmplY3RbXSIsZGVmYXVsdFZhbHVlOltdfX19LF9vU2VydmVyOm51bGwsX2FGaWx0ZXI6bnVsbCxfb01vY2tkYXRhOm51bGwsX29NZXRhZGF0YTpudWxsLF9zTWV0YWRhdGFVcmw6bnVsbCxfc01vY2tkYXRhQmFzZVVybDpudWxsLF9tRW50aXR5U2V0czpudWxsfSk7Yy5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt0aGlzLl9vU2VydmVyPWMuX2dldEluc3RhbmNlKCk7dGhpcy5fYUZpbHRlcnM9W107dmFyIHI9dGhpcy5nZXRSZXF1ZXN0cygpO3ZhciBsPXIubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bDtpKyspe3ZhciBSPXJbaV07dGhpcy5fYWRkUmVxdWVzdEhhbmRsZXIoUi5tZXRob2QsUi5wYXRoLFIucmVzcG9uc2UpfX07Yy5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe2lmKHRoaXMuaXNTdGFydGVkKCkpe3RoaXMuX3JlbW92ZUFsbFJlcXVlc3RIYW5kbGVycygpO3RoaXMuX3JlbW92ZUFsbEZpbHRlcnMoKTt0aGlzLl9vU2VydmVyPW51bGx9fTtjLnByb3RvdHlwZS5pc1N0YXJ0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX29TZXJ2ZXJ9O2MucHJvdG90eXBlLl9hcHBseVF1ZXJ5T25Db2xsZWN0aW9uPWZ1bmN0aW9uKGYsUSxlKXt2YXIgYT1RLnNwbGl0KCc9Jyk7dmFyIG89YVsxXTtpZihvPT09IiIpcmV0dXJuO2lmKG8ubGFzdEluZGV4T2YoJywnKT09PW8ubGVuZ3RoKXt0aHJvdyBuZXcgRXJyb3IoIjQwMCIpfXN3aXRjaChhWzBdKXtjYXNlInRvcCI6aWYoIShuZXcgUmVnRXhwKC9eXGQrJC8pLnRlc3QobykpKXt0aHJvdyBuZXcgRXJyb3IoIjQwMCIpfWYucmVzdWx0cz1mLnJlc3VsdHMuc2xpY2UoMCxvKTticmVhaztjYXNlInNraXAiOmlmKCEobmV3IFJlZ0V4cCgvXlxkKyQvKS50ZXN0KG8pKSl7dGhyb3cgbmV3IEVycm9yKCI0MDAiKX1mLnJlc3VsdHM9Zi5yZXN1bHRzLnNsaWNlKG8sZi5yZXN1bHRzLmxlbmd0aCk7YnJlYWs7Y2FzZSJvcmRlcmJ5IjpmLnJlc3VsdHM9dGhpcy5fZ2V0T2RhdGFRdWVyeU9yZGVyYnkoZi5yZXN1bHRzLG8pO2JyZWFrO2Nhc2UiZmlsdGVyIjpmLnJlc3VsdHM9dGhpcy5fZ2V0T2RhdGFRdWVyeUZpbHRlcihmLnJlc3VsdHMsbyk7YnJlYWs7Y2FzZSJzZWxlY3QiOmYucmVzdWx0cz10aGlzLl9nZXRPZGF0YVF1ZXJ5U2VsZWN0KGYucmVzdWx0cyxvKTticmVhaztjYXNlImlubGluZWNvdW50Ijp2YXIgQz10aGlzLl9nZXRPZGF0YUlubGluZUNvdW50KGYucmVzdWx0cyxvKTtpZihDKXtmLl9fY291bnQ9Q31icmVhaztjYXNlImV4cGFuZCI6Zi5yZXN1bHRzPXRoaXMuX2dldE9kYXRhUXVlcnlFeHBhbmQoZi5yZXN1bHRzLG8sZSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoIjQwMCIpfX07Yy5wcm90b3R5cGUuX2FwcGx5UXVlcnlPbkVudHJ5PWZ1bmN0aW9uKGUsUSxFKXt2YXIgYT1RLnNwbGl0KCc9Jyk7dmFyIG89YVsxXTtpZihvPT09IiIpcmV0dXJuO2lmKG8ubGFzdEluZGV4T2YoJywnKT09PW8ubGVuZ3RoKXt0aHJvdyBuZXcgRXJyb3IoIjQwMCIpfXN3aXRjaChhWzBdKXtjYXNlImZpbHRlciI6cmV0dXJuIHRoaXMuX2dldE9kYXRhUXVlcnlGaWx0ZXIoW2VdLG8pWzBdO2Nhc2Uic2VsZWN0IjpyZXR1cm4gdGhpcy5fZ2V0T2RhdGFRdWVyeVNlbGVjdChbZV0sbylbMF07Y2FzZSJleHBhbmQiOnJldHVybiB0aGlzLl9nZXRPZGF0YVF1ZXJ5RXhwYW5kKFtlXSxvLEUpWzBdO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCI0MDAiKX19O2MucHJvdG90eXBlLl9nZXRPZGF0YVF1ZXJ5T3JkZXJieT1mdW5jdGlvbihkLG8pe3ZhciBwPWRlY29kZVVSSUNvbXBvbmVudChvKS5zcGxpdCgnLCcpO3ZhciBDPWZ1bmN0aW9uIGNvbXBhcmUoYSxiKXtmb3IodmFyIGk9MDtpPHAubGVuZ3RoO2krKyl7dmFyIFM9cFtpXS5zcGxpdCgnICcpO3ZhciBlPTE7aWYoUy5sZW5ndGg+MSl7c3dpdGNoKFNbMV0pe2Nhc2UnYXNjJzplPTE7YnJlYWs7Y2FzZSdkZXNjJzplPS0xO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCI0MDAiKX19dmFyIFA9U1swXS5yZXBsYWNlKCIvIiwiLiIpO2lmKCFhLmhhc093blByb3BlcnR5KFApKXRocm93IG5ldyBFcnJvcigiNDAwIik7aWYoYVtQXTxiW1BdKXJldHVybi0xKmU7aWYoYVtQXT5iW1BdKXJldHVybiAxKmV9cmV0dXJuIDB9O3JldHVybiBkLnNvcnQoQyl9O2MucHJvdG90eXBlLl9nZXRPZGF0YVF1ZXJ5RmlsdGVyPWZ1bmN0aW9uKGQsbyl7bz1kZWNvZGVVUklDb21wb25lbnQobyk7dmFyIE89by5pbmRleE9mKCIoIikhPS0xP28uc3BsaXQoIigiKVswXTpvLnNwbGl0KCIgIilbMV07dmFyIHQ9dGhpczt2YXIgRz1mdW5jdGlvbih2LFYscCxTKXt2YXIgYSxiO2lmKCF2KXthPW8uc3BsaXQoIiAiKTtiPXQuX3RyaW0oYVtWXSk7Yj0oKGIuY2hhckF0KDApPT0iJyIpJiYoYi5jaGFyQXQoYi5sZW5ndGgtMSk9PSInIikpP2Iuc3Vic3RyKDEsYVsyXS5sZW5ndGgtMik6Yn1lbHNle2E9by5zcGxpdCgiKCIpWzFdLnNwbGl0KCIpIilbMF0uc3BsaXQoIiwiKTtiPXQuX3RyaW0oYVtWXSkuc3Vic3RyKDEsYVswXS5sZW5ndGgtMil9dmFyIFA9dC5fdHJpbShhW3BdKTtpZighZFswXS5oYXNPd25Qcm9wZXJ0eShQKSl7dGhyb3cgbmV3IEVycm9yKCI0MDAiKX1yZXR1cm4gUyhQLGIpfTtzd2l0Y2goTyl7Y2FzZSJzdWJzdHJpbmdvZiI6cmV0dXJuIEcodHJ1ZSwwLDEsZnVuY3Rpb24ocCx2KXtyZXR1cm4gcS5ncmVwKGQsZnVuY3Rpb24obSl7cmV0dXJuKG1bcF0uaW5kZXhPZih2KSE9LTEpfSl9KTtjYXNlInN0YXJ0c3dpdGgiOnJldHVybiBHKHRydWUsMSwwLGZ1bmN0aW9uKHAsdil7cmV0dXJuIHEuZ3JlcChkLGZ1bmN0aW9uKG0pe3JldHVybihtW3BdLmluZGV4T2Yodik9PTApfSl9KTtjYXNlImVuZHN3aXRoIjpyZXR1cm4gRyh0cnVlLDEsMCxmdW5jdGlvbihwLHYpe3JldHVybiBxLmdyZXAoZCxmdW5jdGlvbihtKXtyZXR1cm4obVtwXS5pbmRleE9mKHYpPT0obVtwXS5sZW5ndGgtdi5sZW5ndGgpKX0pfSk7Y2FzZSJlcSI6cmV0dXJuIEcoZmFsc2UsMiwwLGZ1bmN0aW9uKHAsdil7cmV0dXJuIHEuZ3JlcChkLGZ1bmN0aW9uKG0pe3JldHVybihtW3BdPT12KX0pfSk7Y2FzZSJuZSI6cmV0dXJuIEcoZmFsc2UsMiwwLGZ1bmN0aW9uKHAsdil7cmV0dXJuIHEuZ3JlcChkLGZ1bmN0aW9uKG0pe3JldHVybihtW3BdIT12KX0pfSk7Y2FzZSJndCI6cmV0dXJuIEcoZmFsc2UsMiwwLGZ1bmN0aW9uKHAsdil7cmV0dXJuIHEuZ3JlcChkLGZ1bmN0aW9uKG0pe3JldHVybihtW3BdPnYpfSl9KTtjYXNlImx0IjpyZXR1cm4gRyhmYWxzZSwyLDAsZnVuY3Rpb24ocCx2KXtyZXR1cm4gcS5ncmVwKGQsZnVuY3Rpb24obSl7cmV0dXJuKG1bcF08dil9KX0pO2Nhc2UiZ2UiOnJldHVybiBHKGZhbHNlLDIsMCxmdW5jdGlvbihwLHYpe3JldHVybiBxLmdyZXAoZCxmdW5jdGlvbihtKXtyZXR1cm4obVtwXT49dil9KX0pO2Nhc2UibGUiOnJldHVybiBHKGZhbHNlLDIsMCxmdW5jdGlvbihwLHYpe3JldHVybiBxLmdyZXAoZCxmdW5jdGlvbihtKXtyZXR1cm4obVtwXTw9dil9KX0pO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCI0MDAiKX19O2MucHJvdG90eXBlLl9nZXRPZGF0YVF1ZXJ5U2VsZWN0PWZ1bmN0aW9uKGQsbyl7dmFyIHA9by5zcGxpdCgnLCcpO2lmKHEuaW5BcnJheSgiKiIscCkhPT0tMSl7cmV0dXJuIGR9dmFyIFM9W107cS5lYWNoKHAsZnVuY3Rpb24oaSxQKXtpZighZFswXS5oYXNPd25Qcm9wZXJ0eShQKSl7dGhyb3cgbmV3IEVycm9yKCI0MDQiKX19KTtxLmVhY2goZCxmdW5jdGlvbihpLGEpe3ZhciBQPXEuZXh0ZW5kKHRydWUse30sYSk7Zm9yKHZhciBuIGluIFApe2lmKG4hPT0iX19tZXRhZGF0YSImJnEuaW5BcnJheShuLHApPT09LTEpe2RlbGV0ZSBQW25dfX1TLnB1c2goUCl9KTtyZXR1cm4gU307Yy5wcm90b3R5cGUuX2dldE9kYXRhSW5saW5lQ291bnQ9ZnVuY3Rpb24oZCxvKXt2YXIgcD1vLnNwbGl0KCcsJyk7aWYocC5sZW5ndGghPT0xfHwocFswXSE9PSdub25lJyYmcFswXSE9PSdhbGxwYWdlcycpKXt0aHJvdyBuZXcgRXJyb3IoIjQwMCIpfWlmKHBbMF09PT0nbm9uZScpe3JldHVybn1yZXR1cm4gZC5sZW5ndGh9O2MucHJvdG90eXBlLl9nZXRPZGF0YVF1ZXJ5RXhwYW5kPWZ1bmN0aW9uKGQsbyxlKXt2YXIgdD10aGlzO3ZhciBuPW8uc3BsaXQoJywnKTt2YXIgRT10Ll9tRW50aXR5U2V0c1tlXS5uYXZwcm9wcztxLmVhY2goZCxmdW5jdGlvbihpLHIpe3EuZWFjaChuLGZ1bmN0aW9uKGksTil7dmFyIGE9Ti5zcGxpdCgiLyIpO3ZhciBOPWFbMF07dmFyIGI9cS5leHRlbmQodHJ1ZSxbXSx0Ll9yZXNvbHZlTmF2aWdhdGlvbihlLHIsTikpO2lmKCEhYiYmYS5sZW5ndGg+MSl7dmFyIFI9YS5zcGxpY2UoMSxhLmxlbmd0aCkuam9pbigiLyIpO2I9dC5fZ2V0T2RhdGFRdWVyeUV4cGFuZChiLFIsRVtOXS50by5lbnRpdHlTZXQpfWlmKEVbTl0udG8ubXVsdGlwbGljaXR5PT09IioiKXtyW05dPXtyZXN1bHRzOmJ9fWVsc2V7cltOXT1iWzBdP2JbMF06e319fSl9KTtyZXR1cm4gZH07Yy5wcm90b3R5cGUuX3JlZnJlc2hEYXRhPWZ1bmN0aW9uKCl7dGhpcy5fbG9hZE1ldGFkYXRhKHRoaXMuX3NNZXRhZGF0YVVybCk7dGhpcy5fbUVudGl0eVNldHM9dGhpcy5fZmluZEVudGl0eVNldHModGhpcy5fb01ldGFkYXRhKTtpZih0aGlzLl9zTW9ja2RhdGFCYXNlVXJsPT1udWxsKXt0aGlzLl9nZW5lcmF0ZU1vY2tkYXRhKHRoaXMuX21FbnRpdHlTZXRzLHRoaXMuX29NZXRhZGF0YSl9ZWxzZXtpZighcS5zYXAuZW5kc1dpdGgodGhpcy5fc01vY2tkYXRhQmFzZVVybCwiLyIpJiYhcS5zYXAuZW5kc1dpdGgodGhpcy5fc01vY2tkYXRhQmFzZVVybCwiLmpzb24iKSl7dGhpcy5fc01vY2tkYXRhQmFzZVVybCs9Ii8ifXRoaXMuX2xvYWRNb2NrZGF0YSh0aGlzLl9tRW50aXR5U2V0cyx0aGlzLl9zTW9ja2RhdGFCYXNlVXJsKX19O2MucHJvdG90eXBlLl9nZXRSb290VXJpPWZ1bmN0aW9uKCl7dmFyIHU9dGhpcy5nZXRSb290VXJpKCk7dT11JiYvKFtePyNdKikoWz8jXS4qKT8vLmV4ZWModSlbMV07cmV0dXJuIHV9O2MucHJvdG90eXBlLl9sb2FkTWV0YWRhdGE9ZnVuY3Rpb24obSl7dmFyIG89cS5zYXAuc2pheCh7dXJsOm0sZGF0YVR5cGU6InhtbCJ9KS5kYXRhO3RoaXMuX29NZXRhZGF0YT1vO3JldHVybiBvfTtjLnByb3RvdHlwZS5fZmluZEVudGl0eVNldHM9ZnVuY3Rpb24obSl7dmFyIGU9e307dmFyIHA9cShtKS5maW5kKCJQcmluY2lwYWwiKTt2YXIgZD1xKG0pLmZpbmQoIkRlcGVuZGVudCIpO3EobSkuZmluZCgiRW50aXR5U2V0IikuZWFjaChmdW5jdGlvbihpLEUpe3ZhciAkPXEoRSk7dmFyIGE9LygoLiopXC4pPyguKikvLmV4ZWMoJC5hdHRyKCJFbnRpdHlUeXBlIikpO2VbJC5hdHRyKCJOYW1lIildPXsibmFtZSI6JC5hdHRyKCJOYW1lIiksInNjaGVtYSI6YVsyXSwidHlwZSI6YVszXSwia2V5cyI6W10sImtleXNUeXBlIjp7fSwibmF2cHJvcHMiOnt9fX0pO3ZhciByPWZ1bmN0aW9uKFIsZil7dmFyIGE9cShtKS5maW5kKCJFbmRbUm9sZT0iK1IrIl0iKTt2YXIgRTt2YXIgYjtxLmVhY2goYSxmdW5jdGlvbihpLHYpe2lmKCEhcSh2KS5hdHRyKCJFbnRpdHlTZXQiKSl7RT1xKHYpLmF0dHIoIkVudGl0eVNldCIpfWVsc2V7Yj1xKHYpLmF0dHIoIk11bHRpcGxpY2l0eSIpfX0pO3ZhciBQPVtdO3ZhciBvPShmKT9wOmQ7cShvKS5lYWNoKGZ1bmN0aW9uKGksaCl7aWYoUj09KHEoaCkuYXR0cigiUm9sZSIpKSl7cShoKS5jaGlsZHJlbigiUHJvcGVydHlSZWYiKS5lYWNoKGZ1bmN0aW9uKGksail7UC5wdXNoKHEoaikuYXR0cigiTmFtZSIpKX0pO3JldHVybiBmYWxzZX19KTtyZXR1cm57InJvbGUiOlIsImVudGl0eVNldCI6RSwicHJvcFJlZiI6UCwibXVsdGlwbGljaXR5IjpifX07cS5lYWNoKGUsZnVuY3Rpb24oRSxvKXt2YXIgJD1xKG0pLmZpbmQoIkVudGl0eVR5cGVbTmFtZT0iK28udHlwZSsiXSIpO3ZhciBrPXEoJCkuZmluZCgiUHJvcGVydHlSZWYiKTtxLmVhY2goayxmdW5jdGlvbihpLFApe3ZhciBLPXEoUCkuYXR0cigiTmFtZSIpO28ua2V5cy5wdXNoKEspO28ua2V5c1R5cGVbS109cSgkKS5maW5kKCJQcm9wZXJ0eVtOYW1lPSIrSysiXSIpLmF0dHIoIlR5cGUiKX0pO3ZhciBuPXEobSkuZmluZCgiRW50aXR5VHlwZVtOYW1lPSIrby50eXBlKyJdIE5hdmlnYXRpb25Qcm9wZXJ0eSIpO3EuZWFjaChuLGZ1bmN0aW9uKGksTil7dmFyIGE9cShOKTtvLm5hdnByb3BzW2EuYXR0cigiTmFtZSIpXT17Im5hbWUiOmEuYXR0cigiTmFtZSIpLCJmcm9tIjpyKGEuYXR0cigiRnJvbVJvbGUiKSx0cnVlKSwidG8iOnIoYS5hdHRyKCJUb1JvbGUiKSxmYWxzZSl9fSl9KTtyZXR1cm4gZX07Yy5wcm90b3R5cGUuX2ZpbmRFbnRpdHlUeXBlcz1mdW5jdGlvbihtKXt2YXIgZT17fTtxKG0pLmZpbmQoIkVudGl0eVR5cGUiKS5lYWNoKGZ1bmN0aW9uKGksRSl7dmFyICQ9cShFKTtlWyQuYXR0cigiTmFtZSIpXT17Im5hbWUiOiQuYXR0cigiTmFtZSIpLCJwcm9wZXJ0aWVzIjpbXSwia2V5cyI6W119OyQuZmluZCgiUHJvcGVydHkiKS5lYWNoKGZ1bmN0aW9uKGkscCl7dmFyIFA9cShwKTt2YXIgdD1QLmF0dHIoIlR5cGUiKTtlWyQuYXR0cigiTmFtZSIpXS5wcm9wZXJ0aWVzLnB1c2goeyJzY2hlbWEiOnQuc3Vic3RyaW5nKDAsdC5sYXN0SW5kZXhPZigiLiIpKSwidHlwZSI6dC5zdWJzdHJpbmcodC5sYXN0SW5kZXhPZigiLiIpKzEpLCJuYW1lIjpQLmF0dHIoIk5hbWUiKSwicHJlY2lzaW9uIjpQLmF0dHIoIlByZWNpc2lvbiIpLCJzY2FsZSI6UC5hdHRyKCJTY2FsZSIpfSl9KTskLmZpbmQoIlByb3BlcnR5UmVmIikuZWFjaChmdW5jdGlvbihpLGspe3ZhciBLPXEoayk7dmFyIHA9Sy5hdHRyKCJOYW1lIik7ZVskLmF0dHIoIk5hbWUiKV0ua2V5cy5wdXNoKHApfSl9KTtyZXR1cm4gZX07Yy5wcm90b3R5cGUuX2ZpbmRDb21wbGV4VHlwZXM9ZnVuY3Rpb24obSl7dmFyIEM9e307cShtKS5maW5kKCJDb21wbGV4VHlwZSIpLmVhY2goZnVuY3Rpb24oaSxvKXt2YXIgJD1xKG8pO0NbJC5hdHRyKCJOYW1lIildPXsibmFtZSI6JC5hdHRyKCJOYW1lIiksInByb3BlcnRpZXMiOltdfTskLmZpbmQoIlByb3BlcnR5IikuZWFjaChmdW5jdGlvbihpLHApe3ZhciBQPXEocCk7dmFyIHQ9UC5hdHRyKCJUeXBlIik7Q1skLmF0dHIoIk5hbWUiKV0ucHJvcGVydGllcy5wdXNoKHsic2NoZW1hIjp0LnN1YnN0cmluZygwLHQubGFzdEluZGV4T2YoIi4iKSksInR5cGUiOnQuc3Vic3RyaW5nKHQubGFzdEluZGV4T2YoIi4iKSsxKSwibmFtZSI6UC5hdHRyKCJOYW1lIiksInByZWNpc2lvbiI6UC5hdHRyKCJQcmVjaXNpb24iKSwic2NhbGUiOlAuYXR0cigiU2NhbGUiKX0pfSl9KTtyZXR1cm4gQ307Yy5wcm90b3R5cGUuX2NyZWF0ZUtleXNTdHJpbmc9ZnVuY3Rpb24oZSxFKXt2YXIgdD10aGlzO3ZhciBrPSIiO2lmKEUpe3EuZWFjaChlLmtleXMsZnVuY3Rpb24oaSxLKXtpZihrKXtrKz0iLCJ9dmFyIG89RVtLXTtpZihlLmtleXNUeXBlW0tdPT09IkVkbS5TdHJpbmciKXtrKz1LKyI9JyIrbysiJyJ9ZWxzZSBpZihlLmtleXNUeXBlW0tdPT09IkVkbS5EYXRlVGltZSIpe2srPUsrIj0iK3QuX2dldERhdGVJbk1pbihvKX1lbHNle2srPUsrIj0iK299fSl9cmV0dXJuIGt9O2MucHJvdG90eXBlLl9sb2FkTW9ja2RhdGE9ZnVuY3Rpb24oZSxiKXt2YXIgdD10aGlzLEU9e307dGhpcy5fb01vY2tkYXRhPXt9O2lmKHEuc2FwLmVuZHNXaXRoKGIsIi5qc29uIikpe3ZhciByPXEuc2FwLnNqYXgoe3VybDpiLGRhdGFUeXBlOiJqc29uIn0pO2lmKHIuc3VjY2Vzcyl7RT1yLmRhdGF9ZWxzZXtxLnNhcC5sb2cuZXJyb3IoIlRoZSBtb2NrZGF0YSBmb3IgYWxsIHRoZSBlbnRpdHkgdHlwZXMgY291bGQgbm90IGJlIGZvdW5kIGF0IFwiIitiKyJcIiEiKX19ZWxzZXtxLmVhY2goZSxmdW5jdGlvbihhLG8pe2lmKCFFW28udHlwZV0pe3ZhciBkPWIrby50eXBlKyIuanNvbiI7dmFyIHI9cS5zYXAuc2pheCh7dXJsOmQsZGF0YVR5cGU6Impzb24ifSk7aWYoci5zdWNjZXNzKXtFW28udHlwZV09ci5kYXRhfWVsc2V7cS5zYXAubG9nLmVycm9yKCJUaGUgbW9ja2RhdGEgZm9yIGVudGl0eSB0eXBlIFwiIitvLnR5cGUrIlwiIGNvdWxkIG5vdCBiZSBmb3VuZCBhdCBcIiIrYisiXCIhIil9fX0pfXEuZWFjaChlLGZ1bmN0aW9uKGEsbyl7dC5fb01vY2tkYXRhW2FdPVtdO2lmKEVbby50eXBlXSl7cS5lYWNoKEVbby50eXBlXSxmdW5jdGlvbihpLGQpe3QuX29Nb2NrZGF0YVthXS5wdXNoKHEuZXh0ZW5kKHRydWUse30sZCkpfSl9aWYodC5fb01vY2tkYXRhW2FdLmxlbmd0aD4wKXt0Ll9lbmhhbmNlV2l0aE1ldGFkYXRhKG8sdC5fb01vY2tkYXRhW2FdKX19KTtyZXR1cm4gdGhpcy5fb01vY2tkYXRhfTtjLnByb3RvdHlwZS5fZW5oYW5jZVdpdGhNZXRhZGF0YT1mdW5jdGlvbihlLG0pe2lmKG0pe3ZhciB0PXRoaXMscj10aGlzLl9nZXRSb290VXJpKCksRT1lJiZlLm5hbWU7cS5lYWNoKG0sZnVuY3Rpb24oaSxvKXtvLl9fbWV0YWRhdGE9e2lkOnIrRSsiKCIrdC5fY3JlYXRlS2V5c1N0cmluZyhlLG8pKyIpIix0eXBlOmUuc2NoZW1hKyIuIitlLnR5cGUsdXJpOnIrRSsiKCIrdC5fY3JlYXRlS2V5c1N0cmluZyhlLG8pKyIpIn07cS5lYWNoKGUubmF2cHJvcHMsZnVuY3Rpb24oayxuKXtvW2tdPXtfX2RlZmVycmVkOnt1cmk6citFKyIoIit0Ll9jcmVhdGVLZXlzU3RyaW5nKGUsbykrIikvIitrfX19KX0pfX07Yy5wcm90b3R5cGUuX2lzUmVxdWVzdGVkS2V5c1ZhbGlkPWZ1bmN0aW9uKGUscil7aWYoci5sZW5ndGg9PT0xJiYhclswXS5zcGxpdCgnPScpWzFdKXtyPVtlLmtleXNbMF0rIj0iK3JbMF1dfWZvcih2YXIgaT0wO2k8ci5sZW5ndGg7aSsrKXt2YXIgaz1yW2ldLnNwbGl0KCc9Jyk7dmFyIEs9dGhpcy5fdHJpbShrWzBdKTt2YXIgUj10aGlzLl90cmltKGtbMV0pO3ZhciBmPVIuY2hhckF0KDApO3ZhciBsPVIuY2hhckF0KFIubGVuZ3RoLTEpO2lmKGUua2V5c1R5cGVbS109PT0iRWRtLlN0cmluZyIpe2lmKGYhPT0iJyJ8fGwhPT0iJyIpe3JldHVybiBmYWxzZX19ZWxzZSBpZihlLmtleXNUeXBlW0tdPT09IkVkbS5EYXRlVGltZSIpe2lmKGY9PT0iJyJ8fGwhPT0iJyIpe3JldHVybiBmYWxzZX19ZWxzZXtpZihmPT09IicifHxsPT09IiciKXtyZXR1cm4gZmFsc2V9fX1yZXR1cm4gdHJ1ZX07Yy5wcm90b3R5cGUuX3BhcnNlS2V5cz1mdW5jdGlvbihrKXt2YXIgcj17fTt2YXIgcD1rLnNwbGl0KCIsIik7Zm9yKHZhciBpPTA7aTxwLmxlbmd0aDtpKyspe3ZhciBQPXBbaV0uc3BsaXQoIj0iKTtpZihQLmxlbmd0aD09PTIpe2lmKFBbMV0uaW5kZXhPZignXCcnKT09PTApe3JbUFswXV09UFsxXS5zbGljZSgxLFBbMV0ubGVuZ3RoLTEpfWVsc2V7cltQWzBdXT1QWzFdfX19O3JldHVybiByfTtjLnByb3RvdHlwZS5fY29tcGxldGVLZXk9ZnVuY3Rpb24oZSxrLEUpe2lmKEUpe3EuZWFjaChlLmtleXMsZnVuY3Rpb24oaSxLKXtpZihrW0tdKXtpZighRVtLXSl7RVtLXT1rW0tdfX1lbHNle2lmKCFlLmlTZXF1ZW5jZSl7ZS5pU2VxdWVuY2U9MH1lLmlTZXF1ZW5jZSsrO0VbS109ZS50eXBlKyJfIitFLnR5cGUrIl8iK2UuaVNlcXVlbmNlLnRvU3RyaW5nKCl9fSl9fTtjLnByb3RvdHlwZS5fZ2VuZXJhdGVEYXRhRnJvbUVudGl0eT1mdW5jdGlvbihlLEksQyl7dmFyIEU9e307Zm9yKHZhciBpPTA7aTxlLnByb3BlcnRpZXMubGVuZ3RoO2krKyl7dmFyIHA9ZS5wcm9wZXJ0aWVzW2ldO3ZhciBQPSIiO3N3aXRjaChwLnR5cGUpe2Nhc2UiU3RyaW5nIjpFW3AubmFtZV09cC5uYW1lKyJfIitJO2JyZWFrO2Nhc2UiRGF0ZVRpbWUiOnZhciBkPW5ldyBEYXRlKCk7ZC5zZXRGdWxsWWVhcigyMDAwK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoyMCkpO2Quc2V0RGF0ZShNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMzApKTtkLnNldE1vbnRoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMikpO2Quc2V0TWlsbGlzZWNvbmRzKDApO0VbcC5uYW1lXT0iL0RhdGUoIitkLmdldFRpbWUoKSsiKS8iO2JyZWFrO2Nhc2UiSW50MTYiOmNhc2UiSW50MzIiOmNhc2UiSW50NjQiOkVbcC5uYW1lXT1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTAwMDApO2JyZWFrO2Nhc2UiRGVjaW1hbCI6RVtwLm5hbWVdPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwMDAwKS8xMDA7YnJlYWs7Y2FzZSJCb29sZWFuIjpFW3AubmFtZV09TWF0aC5yYW5kb20oKTwuNTticmVhaztjYXNlIkJ5dGUiOkVbcC5uYW1lXT1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTApO2JyZWFrO2Nhc2UiRG91YmxlIjpFW3AubmFtZV09TWF0aC5yYW5kb20oKSoxMDticmVhaztjYXNlIlNpbmdsZSI6RVtwLm5hbWVdPU1hdGgucmFuZG9tKCkqMTAwMDAwMDAwMDticmVhaztjYXNlIlNCeXRlIjpFW3AubmFtZV09TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjEwKTticmVhaztjYXNlIlRpbWUiOkVbcC5uYW1lXT1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMjMpKyI6IitNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqNTkpKyI6IitNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqNTkpO2JyZWFrO2Nhc2UiR3VpZCI6Y2FzZSJEYXRlVGltZU9mZnNldCI6YnJlYWs7ZGVmYXVsdDpFW3AubmFtZV09dGhpcy5fZ2VuZXJhdGVEYXRhRnJvbUVudGl0eShDW3AudHlwZV0sSSl9fXJldHVybiBFfTtjLnByb3RvdHlwZS5fZ2VuZXJhdGVEYXRhRnJvbUVudGl0eVNldD1mdW5jdGlvbihlLEUsQyl7dmFyIG89RVtlLnR5cGVdO3ZhciBtPVtdO2Zvcih2YXIgaT0wO2k8MTAwO2krKyl7bS5wdXNoKHRoaXMuX2dlbmVyYXRlRGF0YUZyb21FbnRpdHkobyxpLEMpKX1yZXR1cm4gbX07Yy5wcm90b3R5cGUuX2dlbmVyYXRlTW9ja2RhdGE9ZnVuY3Rpb24oZSxtKXt2YXIgdD10aGlzLHI9dGhpcy5fZ2V0Um9vdFVyaSgpLG89e307dmFyIEU9dGhpcy5fZmluZEVudGl0eVR5cGVzKG0pO3ZhciBDPXRoaXMuX2ZpbmRDb21wbGV4VHlwZXMobSk7cS5lYWNoKGUsZnVuY3Rpb24oYSxiKXtvW2FdPXQuX2dlbmVyYXRlRGF0YUZyb21FbnRpdHlTZXQoYixFLEMpO3EuZWFjaChvW2FdLGZ1bmN0aW9uKGksZCl7ZC5fX21ldGFkYXRhPXt1cmk6cithKyIoIit0Ll9jcmVhdGVLZXlzU3RyaW5nKGIsZCkrIikiLHR5cGU6Yi5zY2hlbWErIi4iK2IudHlwZX07cS5lYWNoKGIubmF2cHJvcHMsZnVuY3Rpb24oayxuKXtkW2tdPXtfX2RlZmVycmVkOnt1cmk6cithKyIoIit0Ll9jcmVhdGVLZXlzU3RyaW5nKGIsZCkrIikvIitrfX19KX0pfSk7dGhpcy5fb01vY2tkYXRhPW99O2MucHJvdG90eXBlLl9yZXNvbHZlTmF2aWdhdGlvbj1mdW5jdGlvbihlLGYsbil7dmFyIEU9dGhpcy5fbUVudGl0eVNldHNbZV07dmFyIE49RS5uYXZwcm9wc1tuXTtpZighTil7dGhyb3cgbmV3IEVycm9yKCI0MDQiKX12YXIgYT1bXTt2YXIgcD1OLmZyb20ucHJvcFJlZi5sZW5ndGg7aWYocD09PTApe2lmKE4udG8ubXVsdGlwbGljaXR5PT09IioiKXtyZXR1cm4gdGhpcy5fb01vY2tkYXRhW04udG8uZW50aXR5U2V0XX1lbHNle2EucHVzaCh0aGlzLl9vTW9ja2RhdGFbTi50by5lbnRpdHlTZXRdWzBdKTtyZXR1cm4gYX19cS5lYWNoKHRoaXMuX29Nb2NrZGF0YVtOLnRvLmVudGl0eVNldF0sZnVuY3Rpb24oSSx0KXt2YXIgYj10cnVlO2Zvcih2YXIgaT0wO2k8cDtpKyspe2lmKGZbTi5mcm9tLnByb3BSZWZbaV1dIT10W04udG8ucHJvcFJlZltpXV0pe2I9ZmFsc2U7YnJlYWt9fWlmKGIpe2EucHVzaCh0KX19KTtyZXR1cm4gYX07Yy5wcm90b3R5cGUuc2ltdWxhdGU9ZnVuY3Rpb24obSxhKXt2YXIgdD10aGlzO3RoaXMuX3NNZXRhZGF0YVVybD1tO3RoaXMuX3NNb2NrZGF0YUJhc2VVcmw9YTt0aGlzLl9yZWZyZXNoRGF0YSgpO3ZhciBHPWZ1bmN0aW9uKGUsayl7dmFyIGY7dmFyIEU9dC5fbUVudGl0eVNldHNbZV07dmFyIEs9RS5rZXlzO3ZhciBkPWsuc3BsaXQoJywnKTtpZihkLmxlbmd0aCE9PUsubGVuZ3RofHwhdC5faXNSZXF1ZXN0ZWRLZXlzVmFsaWQoRSxkKSl7cmV0dXJuIGZ9aWYoZC5sZW5ndGg9PT0xJiYhZFswXS5zcGxpdCgnPScpWzFdKXtkPVtLWzBdKyI9IitkWzBdXX1xLmVhY2godC5fb01vY2tkYXRhW2VdLGZ1bmN0aW9uKEksbyl7Zm9yKHZhciBpPTA7aTxkLmxlbmd0aDtpKyspe3ZhciBoPWRbaV0uc3BsaXQoJz0nKTt2YXIgaj10Ll90cmltKGhbMF0pO2lmKHEuaW5BcnJheShqLEspPT09LTEpe3JldHVybiB0cnVlfXZhciBuPXQuX3RyaW0oaFsxXSk7dmFyIE89b1tqXTtpZihFLmtleXNUeXBlW2pdPT09IkVkbS5TdHJpbmciKXtuPW4ucmVwbGFjZSgvXlwnfFwnJC9nLCcnKX1lbHNlIGlmKEUua2V5c1R5cGVbal09PT0iRWRtLkRhdGVUaW1lIil7Tz10Ll9nZXREYXRlSW5NaW4oTyl9aWYoTyE9PW4pe3JldHVybiB0cnVlfX1mPXtpbmRleDpJLGVudHJ5Om99O3JldHVybiBmYWxzZX0pO3JldHVybiBmfTt2YXIgcj1mdW5jdGlvbihlLGssdSl7dmFyIFM9ZS5uYW1lO2lmKHUpe3ZhciBuPWUubmF2cHJvcHNbdV19aWYobil7Uz1uLnRvLmVudGl0eVNldH1yZXR1cm4gU307dmFyIGI9ZnVuY3Rpb24oeCxULGssdSl7dmFyIGU9SlNPTi5wYXJzZSh4LnJlcXVlc3RCb2R5KTtpZihlKXtpZihrKXt2YXIgSz10Ll9wYXJzZUtleXMoayk7dC5fY29tcGxldGVLZXkodC5fbUVudGl0eVNldHNbVF0sSyxlKX10Ll9lbmhhbmNlV2l0aE1ldGFkYXRhKHQuX21FbnRpdHlTZXRzW1RdLFtlXSk7cmV0dXJuIGV9cmV0dXJuIG51bGx9O3ZhciBSPVtdO1IucHVzaCh7bWV0aG9kOiJHRVQiLHBhdGg6bmV3IFJlZ0V4cCgiLioiKSxyZXNwb25zZTpmdW5jdGlvbih4KXtpZih4LnJlcXVlc3RIZWFkZXJzWyJ4LWNzcmYtdG9rZW4iXT09IkZldGNoIil7eC5yZXNwb25kKDIwMCx7IlgtQ1NSRi1Ub2tlbiI6IjQyNDI0MjQyNDI0MjQyNDI0MjQyNDI0MjQyNDI0MjQyIn0pfX19KTtSLnB1c2goe21ldGhvZDoiR0VUIixwYXRoOm5ldyBSZWdFeHAoIlxcJG1ldGFkYXRhKFs/I10uKik/IikscmVzcG9uc2U6ZnVuY3Rpb24oeCl7cS5zYXAucmVxdWlyZSgianF1ZXJ5LnNhcC54bWwiKTt4LnJlc3BvbmQoMjAwLHsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24veG1sO2NoYXJzZXQ9dXRmLTgifSxxLnNhcC5zZXJpYWxpemVYTUwodC5fb01ldGFkYXRhKSl9fSk7Ui5wdXNoKHttZXRob2Q6IlBPU1QiLHBhdGg6bmV3IFJlZ0V4cCgiXFwkYmF0Y2goWz8jXS4qKT8iKSxyZXNwb25zZTpmdW5jdGlvbih4KXt2YXIgZj1mdW5jdGlvbihQKXtzd2l0Y2goUCl7Y2FzZSAyMDA6cmV0dXJuIjIwMCBPSyI7Y2FzZSAyMDQ6cmV0dXJuIjIwNCBObyBDb250ZW50IjtjYXNlIDIwMTpyZXR1cm4iMjAxIENyZWF0ZWQiO2Nhc2UgNDAwOnJldHVybiI0MDAgQmFkIFJlcXVlc3QiO2Nhc2UgNDA0OnJldHVybiI0MDQgTm90IEZvdW5kIjtkZWZhdWx0OmJyZWFrfX07dmFyIEI9ZnVuY3Rpb24oeSl7dmFyIFA9SlNPTi5zdHJpbmdpZnkoeS5kYXRhKXx8IiI7cmV0dXJuIkhUVFAvMS4xICIrZih5LnN0YXR1c0NvZGUpKyJcclxuQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXHJcbkNvbnRlbnQtTGVuZ3RoOiAiK1AubGVuZ3RoKyJcclxuZGF0YXNlcnZpY2V2ZXJzaW9uOiAyLjBcclxuXHJcbiIrUCsiXHJcbiJ9O3ZhciBkPXgucmVxdWVzdEJvZHk7dmFyIG89bmV3IFJlZ0V4cCgiLS1iYXRjaF9bYS16MC05LV0qIik7dmFyIGU9by5leGVjKGQpWzBdO2lmKCEhZSl7dmFyIGg9W107dmFyIGw9ZC5zcGxpdChlKTt2YXIgUz14LnVybC5zcGxpdCgiJCIpWzBdO3ZhciBuPW5ldyBSZWdFeHAoIlBVVCAoLiopIEhUVFAiKTt2YXIgcD1uZXcgUmVnRXhwKCJQT1NUICguKikgSFRUUCIpO3ZhciB1PW5ldyBSZWdFeHAoIkRFTEVURSAoLiopIEhUVFAiKTt2YXIgdj1uZXcgUmVnRXhwKCJHRVQgKC4qKSBIVFRQIik7Zm9yKHZhciBpPTE7aTxsLmxlbmd0aC0xO2krKyl7dmFyIHc9bFtpXTtpZih2LnRlc3QodykmJncuaW5kZXhPZigibXVsdGlwYXJ0L21peGVkIik9PS0xKXtpZihuLnRlc3Qodyl8fHAudGVzdCh3KXx8dS50ZXN0KHcpKXt4LnJlc3BvbmQoNDAwLG51bGwsIlRoZSBEYXRhIFNlcnZpY2VzIFJlcXVlc3QgY291bGQgbm90IGJlIHVuZGVyc3Rvb2QgZHVlIHRvIG1hbGZvcm1lZCBzeW50YXgiKTtyZXR1cm59dmFyIHk9cS5zYXAuc2pheCh7dXJsOlMrdi5leGVjKHcpWzFdLGRhdGFUeXBlOiJqc29uIn0pO2gucHVzaCgiXHJcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vaHR0cFxyXG4iKyJDb250ZW50LUxlbmd0aDogIitCKHkpLmxlbmd0aCsiXHJcbiIrImNvbnRlbnQtdHJhbnNmZXItZW5jb2Rpbmc6IGJpbmFyeVxyXG5cclxuIitCKHkpKX1lbHNle3ZhciBDPVtdO3ZhciB6PXEuZXh0ZW5kKHRydWUse30sdC5fb01vY2tkYXRhKTt2YXIgQT1mdW5jdGlvbihQLEksVCl7dmFyIHk9cS5zYXAuc2pheCh7dHlwZTpULHVybDpTK1AuZXhlYyhIKVsxXSxkYXRhVHlwZToianNvbiIsZGF0YTpJfSk7aWYoeS5zdGF0dXNDb2RlPT00MDB8fHkuc3RhdHVzQ29kZT09NDA0KXt2YXIgTD0iXHJcbkhUVFAvMS4xICIrZih5LnN0YXR1c0NvZGUpKyJcclxuQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXHJcbkNvbnRlbnQtTGVuZ3RoOiAwXHJcblxyXG4iO3Rocm93IG5ldyBFcnJvcihMKX1DLnB1c2goQih5KSl9O3ZhciBFPXcuc3Vic3RyaW5nKHcuaW5kZXhPZigiYm91bmRhcnk9IikrOSx3LmluZGV4T2YoIlxyXG5cclxuIikpO3ZhciBGPXcuc3BsaXQoIi0tIitFKTt0cnl7Zm9yKHZhciBqPTE7ajxGLmxlbmd0aC0xO2orKyl7dmFyIEg9RltqXTtpZih2LnRlc3QoSCkpe3QuX29Nb2NrZGF0YT16O3gucmVzcG9uZCg0MDAsbnVsbCwiVGhlIERhdGEgU2VydmljZXMgUmVxdWVzdCBjb3VsZCBub3QgYmUgdW5kZXJzdG9vZCBkdWUgdG8gbWFsZm9ybWVkIHN5bnRheCIpO3JldHVybn1lbHNlIGlmKG4udGVzdChIKSl7dmFyIEk9SC5zdWJzdHJpbmcoSC5pbmRleE9mKCJ7IiksSC5sYXN0SW5kZXhPZigifSIpKzEpLnJlcGxhY2UoL1xcL2csJycpO0EobixJLCdQVVQnKX1lbHNlIGlmKHAudGVzdChIKSl7dmFyIEk9SC5zdWJzdHJpbmcoSC5pbmRleE9mKCJ7IiksSC5sYXN0SW5kZXhPZigifSIpKzEpLnJlcGxhY2UoL1xcL2csJycpO0EocCxJLCdQT1NUJyl9ZWxzZSBpZih1LnRlc3QoSCkpe0EodSxudWxsLCdERUxFVEUnKX19dmFyIEo9IlxyXG5Db250ZW50LVR5cGU6IG11bHRpcGFydC9taXhlZDsgYm91bmRhcnk9ZWpqZWVmZmUxXHJcblxyXG4tLWVqamVlZmZlMSI7Zm9yKHZhciBrPTA7azxDLmxlbmd0aDtrKyspe0orPSJcclxuQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9odHRwXHJcbiIrIkNvbnRlbnQtTGVuZ3RoOiAiK0Nba10ubGVuZ3RoKyJcclxuIisiY29udGVudC10cmFuc2Zlci1lbmNvZGluZzogYmluYXJ5XHJcblxyXG4iK0Nba10rIi0tZWpqZWVmZmUxIn1KKz0iLS1cclxuIjtoLnB1c2goSil9Y2F0Y2goSyl7dC5fb01vY2tkYXRhPXo7dmFyIEw9IlxyXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2h0dHBcclxuIisiQ29udGVudC1MZW5ndGg6ICIrSy5tZXNzYWdlLmxlbmd0aCsiXHJcbiIrImNvbnRlbnQtdHJhbnNmZXItZW5jb2Rpbmc6IGJpbmFyeVxyXG5cclxuIitLLm1lc3NhZ2U7aC5wdXNoKEwpfX19dmFyIE49Ii0tZWpqZWVmZmUwIjtmb3IodmFyIGk9MDtpPGgubGVuZ3RoO2krKyl7Tis9aFtpXSsiLS1lamplZWZmZTAifU4rPSItLSI7dmFyIE89eydDb250ZW50LVR5cGUnOiJtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PWVqamVlZmZlMCJ9O3gucmVzcG9uZCgyMDIsTyxOKX1lbHNle3gucmVzcG9uZCgyMDIpfX19KTtxLmVhY2godGhpcy5fbUVudGl0eVNldHMsZnVuY3Rpb24oRSxvKXtSLnB1c2goe21ldGhvZDoiR0VUIixwYXRoOm5ldyBSZWdFeHAoIigiK0UrIikvXFwkY291bnQvPyguKik/IikscmVzcG9uc2U6ZnVuY3Rpb24oeCxFLHUpe3gucmVzcG9uZCgyMDAseyJDb250ZW50LVR5cGUiOiJ0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgifSwiIit0Ll9vTW9ja2RhdGFbRV0ubGVuZ3RoKX19KTtSLnB1c2goe21ldGhvZDoiR0VUIixwYXRoOm5ldyBSZWdFeHAoIigiK0UrIikvPyhcXD9cXCQoKGZpbHRlcnxza2lwfHRvcHxvcmRlcmJ5fHNlbGVjdHxpbmxpbmVjb3VudHxleHBhbmQpPSguKikpKT8iKSxyZXNwb25zZTpmdW5jdGlvbih4LEUsdSl7dmFyIGQ9dC5fb01vY2tkYXRhW0VdO2lmKGQpe3ZhciBmPXtyZXN1bHRzOnEuZXh0ZW5kKHRydWUsW10sZCl9O2lmKHUpe3ZhciBVPXUucmVwbGFjZSgiPyIsIiYiKS5yZXBsYWNlKC9cJC9nLCcnKS5zcGxpdCgiJiIpO2lmKFUubGVuZ3RoPjEpe1U9dC5fb3JkZXJRdWVyeU9wdGlvbnMoVSl9dHJ5e3EuZWFjaChVLGZ1bmN0aW9uKGksUSl7dC5fYXBwbHlRdWVyeU9uQ29sbGVjdGlvbihmLFEsRSl9KX1jYXRjaChlKXt4LnJlc3BvbmQocGFyc2VJbnQoZS5tZXNzYWdlfHxlLm51bWJlciwxMCkpO3JldHVybn19eC5yZXNwb25kKDIwMCx7IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCJ9LEpTT04uc3RyaW5naWZ5KHtkOmZ9KSl9ZWxzZXt4LnJlc3BvbmQoNDA0KX19fSk7Ui5wdXNoKHttZXRob2Q6IkdFVCIscGF0aDpuZXcgUmVnRXhwKCIoIitFKyIpXFwoKFteL1xcPyNdKylcXCkvPyhcXD9cXCQoKGZpbHRlcnxza2lwfHRvcHxvcmRlcmJ5fHNlbGVjdHxpbmxpbmVjb3VudHxleHBhbmQpPSguKikpKT8iKSxyZXNwb25zZTpmdW5jdGlvbih4LEUsayx1KXt2YXIgZD1xLmV4dGVuZCh0cnVlLHt9LEcoRSxrKSk7aWYoIXEuaXNFbXB0eU9iamVjdChkKSl7aWYodSl7dmFyIFU9dS5yZXBsYWNlKCI/IiwiJiIpLnJlcGxhY2UoL1wkL2csJycpLnNwbGl0KCImIik7aWYoVS5sZW5ndGg+MSl7VT10Ll9vcmRlclF1ZXJ5T3B0aW9ucyhVKX10cnl7cS5lYWNoKFUsZnVuY3Rpb24oaSxRKXtkLmVudHJ5PXQuX2FwcGx5UXVlcnlPbkVudHJ5KGQuZW50cnksUSxFKX0pfWNhdGNoKGUpe3gucmVzcG9uZChwYXJzZUludChlLm1lc3NhZ2V8fGUubnVtYmVyLDEwKSk7cmV0dXJufX14LnJlc3BvbmQoMjAwLHsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04In0sSlNPTi5zdHJpbmdpZnkoe2Q6ZC5lbnRyeX0pKX1lbHNle3gucmVzcG9uZCg0MDQpfX19KTtxLmVhY2goby5uYXZwcm9wcyxmdW5jdGlvbihuLE4pe1IucHVzaCh7bWV0aG9kOiJHRVQiLHBhdGg6bmV3IFJlZ0V4cCgiKCIrRSsiKVxcKChbXi9cXD8jXSspXFwpLygiK24rIikvXFwkY291bnQvPyguKik/IikscmVzcG9uc2U6ZnVuY3Rpb24oeCxFLGssZCx1KXt2YXIgZT1HKEUsayk7aWYoZSl7dmFyIGY9dC5fcmVzb2x2ZU5hdmlnYXRpb24oRSxlLmVudHJ5LGQpO3gucmVzcG9uZCgyMDAseyJDb250ZW50LVR5cGUiOiJ0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTgifSwiIitmLmxlbmd0aCl9ZWxzZXt4LnJlc3BvbmQoNDA0KX19fSk7Ui5wdXNoKHttZXRob2Q6IkdFVCIscGF0aDpuZXcgUmVnRXhwKCIoIitFKyIpXFwoKFteL1xcPyNdKylcXCkvKCIrbisiKS8/KFxcP1xcJCgoZmlsdGVyfHNraXB8dG9wfG9yZGVyYnl8c2VsZWN0fGlubGluZWNvdW50fGV4cGFuZCk9KC4qKSkpPyIpLHJlc3BvbnNlOmZ1bmN0aW9uKHgsRSxrLGQsdSl7dmFyIGY9RyhFLGspO2lmKGYpe3ZhciBoLEY9e307dHJ5e2g9dC5fcmVzb2x2ZU5hdmlnYXRpb24oRSxmLmVudHJ5LGQpO2lmKGgpe3ZhciBpPXQuX21FbnRpdHlTZXRzW0VdLm5hdnByb3BzW2RdLnRvLm11bHRpcGxpY2l0eTtpZihpPT09IioiKXtGPXtyZXN1bHRzOnEuZXh0ZW5kKHRydWUsW10saCl9fWVsc2V7Rj1xLmV4dGVuZCh0cnVlLHt9LGhbMF0pfWlmKHUpe3ZhciBVPXUucmVwbGFjZSgiPyIsIiYiKS5yZXBsYWNlKC9cJC9nLCcnKS5zcGxpdCgiJiIpO2lmKFUubGVuZ3RoPjEpe1U9dC5fb3JkZXJRdWVyeU9wdGlvbnMoVSl9aWYoaT09PSIqIil7cS5lYWNoKFUsZnVuY3Rpb24oSSxRKXt0Ll9hcHBseVF1ZXJ5T25Db2xsZWN0aW9uKEYsUSx0Ll9tRW50aXR5U2V0c1tFXS5uYXZwcm9wc1tkXS50by5lbnRpdHlTZXQpfSl9ZWxzZXtxLmVhY2goVSxmdW5jdGlvbihJLFEpe0Y9dC5fYXBwbHlRdWVyeU9uRW50cnkoRixRLHQuX21FbnRpdHlTZXRzW0VdLm5hdnByb3BzW2RdLnRvLmVudGl0eVNldCl9KX19fXgucmVzcG9uZCgyMDAseyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifSxKU09OLnN0cmluZ2lmeSh7ZDpGfSkpO3JldHVybn1jYXRjaChlKXt4LnJlc3BvbmQocGFyc2VJbnQoZS5tZXNzYWdlfHxlLm51bWJlciwxMCkpO3JldHVybn19eC5yZXNwb25kKDQwNCl9fSl9KTtSLnB1c2goe21ldGhvZDoiUE9TVCIscGF0aDpuZXcgUmVnRXhwKCIoIitFKyIpKFxcKChbXi9cXD8jXSspXFwpLz8oLiopPyk/IikscmVzcG9uc2U6ZnVuY3Rpb24oeCxFLGQsayxuKXt2YXIgZT1udWxsO3ZhciBmPW51bGw7dmFyIGk9NDA1O3ZhciBUPXIobyxrLG4pO2lmKFQpe3ZhciBoPWIoeCxULGssbik7aWYoaCl7dmFyIHU9dC5fZ2V0Um9vdFVyaSgpK1QrIigiK3QuX2NyZWF0ZUtleXNTdHJpbmcodC5fbUVudGl0eVNldHNbVF0saCkrIikiO2U9SlNPTi5zdHJpbmdpZnkoe2Q6aCx1cmk6dX0pO2Y9eyJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifTt0Ll9vTW9ja2RhdGFbVF09dC5fb01vY2tkYXRhW1RdLmNvbmNhdChbaF0pO2k9MjAxfX14LnJlc3BvbmQoaSxmLGUpfX0pO1IucHVzaCh7bWV0aG9kOiJQVVQiLHBhdGg6bmV3IFJlZ0V4cCgiKCIrRSsiKVxcKChbXi9cXD8jXSspXFwpLz8oLiopPyIpLHJlc3BvbnNlOmZ1bmN0aW9uKHgsRSxrLG4pe3ZhciBpPTQwNTt2YXIgZD1udWxsO3ZhciBlPW51bGw7dmFyIFQ9cihvLGssbik7aWYoVCl7dmFyIGY9Yih4LFQsayxuKTtpZihmKXt2YXIgdT10Ll9nZXRSb290VXJpKCkrVCsiKCIrdC5fY3JlYXRlS2V5c1N0cmluZyh0Ll9tRW50aXR5U2V0c1tUXSxmKSsiKSI7ZT17IkNvbnRlbnQtVHlwZSI6ImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCJ9O3ZhciBoPUcoRSxrKTtpZihoKXt0Ll9vTW9ja2RhdGFbRV1baC5pbmRleF09Zn1lbHNle3QuX29Nb2NrZGF0YVtUXT10Ll9vTW9ja2RhdGFbVF0uY29uY2F0KFtmXSl9aT0yMDR9fXgucmVzcG9uZChpLGUsZCl9fSk7Ui5wdXNoKHttZXRob2Q6IkRFTEVURSIscGF0aDpuZXcgUmVnRXhwKCIoIitFKyIpXFwoKFteL1xcPyNdKylcXCkvPyguKik/IikscmVzcG9uc2U6ZnVuY3Rpb24oeCxFLGssdSl7dmFyIGk9MjAwO3ZhciBlPUcoRSxrKTtpZihlKXt0Ll9vTW9ja2RhdGFbRV0uc3BsaWNlKGUuaW5kZXgsMSl9ZWxzZXtpPTQwMH14LnJlc3BvbmQoaSxudWxsLG51bGwpfX0pfSk7dGhpcy5zZXRSZXF1ZXN0cyhSKX07Yy5wcm90b3R5cGUuX29yZGVyUXVlcnlPcHRpb25zPWZ1bmN0aW9uKHUpe3ZhciBmLGksUyx0LG8sYSxlLE89W107cS5lYWNoKHUsZnVuY3Rpb24oSSxRKXtzd2l0Y2goUS5zcGxpdCgnPScpWzBdKXtjYXNlInRvcCI6dD1xLmluQXJyYXkoUSx1KTticmVhaztjYXNlInNraXAiOlM9cS5pbkFycmF5KFEsdSk7YnJlYWs7Y2FzZSJvcmRlcmJ5IjpvPXEuaW5BcnJheShRLHUpO2JyZWFrO2Nhc2UiZmlsdGVyIjpmPXEuaW5BcnJheShRLHUpO2JyZWFrO2Nhc2Uic2VsZWN0IjphPXEuaW5BcnJheShRLHUpO2JyZWFrO2Nhc2UiaW5saW5lY291bnQiOmk9cS5pbkFycmF5KFEsdSk7YnJlYWs7Y2FzZSJleHBhbmQiOmU9cS5pbkFycmF5KFEsdSk7YnJlYWt9fSk7aWYoZj49MClPLnB1c2godVtmXSk7aWYoaT49MClPLnB1c2godVtpXSk7aWYoUz49MClPLnB1c2godVtTXSk7aWYodD49MClPLnB1c2godVt0XSk7aWYoYT49MClPLnB1c2godVthXSk7aWYobz49MClPLnB1c2godVtvXSk7aWYoZT49MClPLnB1c2godVtlXSk7cmV0dXJuIE99O2MucHJvdG90eXBlLl9yZW1vdmVBbGxSZXF1ZXN0SGFuZGxlcnM9ZnVuY3Rpb24oKXt2YXIgcj10aGlzLmdldFJlcXVlc3RzKCk7dmFyIGw9ci5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsO2krKyl7Yy5fcmVtb3ZlUmVzcG9uc2UocltpXS5yZXNwb25zZSl9fTtjLnByb3RvdHlwZS5fcmVtb3ZlQWxsRmlsdGVycz1mdW5jdGlvbigpe2Zvcih2YXIgaT0wO2k8dGhpcy5fYUZpbHRlcnMubGVuZ3RoO2krKyl7Yy5fcmVtb3ZlRmlsdGVyKHRoaXMuX2FGaWx0ZXJzW2ldKX10aGlzLl9hRmlsdGVycz1udWxsfTtjLnByb3RvdHlwZS5fYWRkUmVxdWVzdEhhbmRsZXI9ZnVuY3Rpb24obSxwLHIpe209bT9tLnRvVXBwZXJDYXNlKCk6bTtpZih0eXBlb2YgbSE9PSJzdHJpbmciKXt0aHJvdyBuZXcgRXJyb3IoIkVycm9yIGluIHJlcXVlc3QgY29uZmlndXJhdGlvbjogdmFsdWUgb2YgJ21ldGhvZCcgaGFzIHRvIGJlIGEgc3RyaW5nIil9aWYoISh0eXBlb2YgcD09PSJzdHJpbmcifHxwIGluc3RhbmNlb2YgUmVnRXhwKSl7dGhyb3cgbmV3IEVycm9yKCJFcnJvciBpbiByZXF1ZXN0IGNvbmZpZ3VyYXRpb246IHZhbHVlIG9mICdwYXRoJyBoYXMgdG8gYmUgYSBzdHJpbmcgb3IgYSByZWd1bGFyIGV4cHJlc3Npb24iKX1pZih0eXBlb2YgciE9PSJmdW5jdGlvbiIpe3Rocm93IG5ldyBFcnJvcigiRXJyb3IgaW4gcmVxdWVzdCBjb25maWd1cmF0aW9uOiB2YWx1ZSBvZiAncmVzcG9uc2UnIGhhcyB0byBiZSBhIGZ1bmN0aW9uIil9dmFyIHU9dGhpcy5fZ2V0Um9vdFVyaSgpO3U9dSYmbmV3IFJlZ0V4cCh0aGlzLl9lc2NhcGVTdHJpbmdGb3JSZWdFeHAodSkpO2lmKHAmJiEocCBpbnN0YW5jZW9mIFJlZ0V4cCkpe3A9bmV3IFJlZ0V4cCh0aGlzLl9jcmVhdGVSZWdFeHBQYXR0ZXJuKHApKX12YXIgUj10aGlzLl9jcmVhdGVSZWdFeHAodT91LnNvdXJjZStwLnNvdXJjZTpwLnNvdXJjZSk7dGhpcy5fYWRkRmlsdGVyKHRoaXMuX2NyZWF0ZUZpbHRlcihtLFIpKTt0aGlzLl9vU2VydmVyLnJlc3BvbmRXaXRoKG0sUixyKTtxLnNhcC5sb2cuZGVidWcoIk1vY2tTZXJ2ZXI6IGFkZGluZyAiK20rIiByZXF1ZXN0IGhhbmRsZXIgZm9yIHBhdHRlcm4gIitSKX07Yy5wcm90b3R5cGUuX2NyZWF0ZVJlZ0V4cD1mdW5jdGlvbihwKXtyZXR1cm4gbmV3IFJlZ0V4cCgiXiIrcCsiJCIpfTtjLnByb3RvdHlwZS5fY3JlYXRlUmVnRXhwUGF0dGVybj1mdW5jdGlvbihwKXtyZXR1cm4gcC5yZXBsYWNlKC86KFtcd1xkXSspL2csIihbXlwvXSspIil9O2MucHJvdG90eXBlLl9lc2NhcGVTdHJpbmdGb3JSZWdFeHA9ZnVuY3Rpb24oUyl7cmV0dXJuIFMucmVwbGFjZSgvW1xcXC9cW1xdXHtcfVwoXClcLVwqXCtcP1wuXF5cJFx8XS9nLCJcXCQmIil9O2MucHJvdG90eXBlLl90cmltPWZ1bmN0aW9uKFMpe3JldHVybiBTJiZTLnJlcGxhY2UoL15ccyt8XHMrJC9nLCIiKX07Yy5wcm90b3R5cGUuX2dldERhdGVJbk1pbj1mdW5jdGlvbihTKXtpZighUylyZXR1cm47cmV0dXJuImRhdGV0aW1lJyIrbmV3IERhdGUoTnVtYmVyKFMucmVwbGFjZSgiL0RhdGUoIiwnJykucmVwbGFjZSgiKS8iLCcnKSkpLnRvSlNPTigpLnN1YnN0cmluZygwLDE5KSsiJyJ9O2MucHJvdG90eXBlLl9hZGRGaWx0ZXI9ZnVuY3Rpb24oZil7dGhpcy5fYUZpbHRlcnMucHVzaChmKTtjLl9hZGRGaWx0ZXIoZil9O2MucHJvdG90eXBlLl9jcmVhdGVGaWx0ZXI9ZnVuY3Rpb24ocixSKXtyZXR1cm4gZnVuY3Rpb24obSx1LGEsVSxwKXtyZXR1cm4gcj09PW0mJlIudGVzdCh1KX19O2MucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oUyl7TS5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5zdG9wKCk7dmFyIGE9Yy5fYVNlcnZlcnM7dmFyIGk9cS5pbkFycmF5KHRoaXMsYSk7YS5zcGxpY2UoaSwxKX07Yy5fYUZpbHRlcnM9W107Yy5fb1NlcnZlcj1udWxsO2MuX2FTZXJ2ZXJzPVtdO2MuX2dldEluc3RhbmNlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX29TZXJ2ZXIpe3RoaXMuX29TZXJ2ZXI9d2luZG93LnNpbm9uLmZha2VTZXJ2ZXIuY3JlYXRlKCk7dGhpcy5fb1NlcnZlci5hdXRvUmVzcG9uZD10cnVlfXJldHVybiB0aGlzLl9vU2VydmVyfTtjLmNvbmZpZz1mdW5jdGlvbihDKXt2YXIgUz10aGlzLl9nZXRJbnN0YW5jZSgpO1MuYXV0b1Jlc3BvbmQ9Qy5hdXRvUmVzcG9uZD09PWZhbHNlP2ZhbHNlOnRydWU7Uy5hdXRvUmVzcG9uZEFmdGVyPUMuYXV0b1Jlc3BvbmRBZnRlcnx8MDtTLmZha2VIVFRQTWV0aG9kcz1DLmZha2VIVFRQTWV0aG9kc3x8ZmFsc2V9O2MucmVzcG9uZD1mdW5jdGlvbigpe3RoaXMuX2dldEluc3RhbmNlKCkucmVzcG9uZCgpfTtjLnN0YXJ0QWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hU2VydmVycy5sZW5ndGg7aSsrKXt0aGlzLl9hU2VydmVyc1tpXS5zdGFydCgpfX07Yy5zdG9wQWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hU2VydmVycy5sZW5ndGg7aSsrKXt0aGlzLl9hU2VydmVyc1tpXS5zdG9wKCl9dGhpcy5fZ2V0SW5zdGFuY2UoKS5yZXN0b3JlKCk7dGhpcy5fb1NlcnZlcj1udWxsfTtjLmRlc3Ryb3lBbGw9ZnVuY3Rpb24oKXt0aGlzLnN0b3BBbGwoKTtmb3IodmFyIGk9MDtpPHRoaXMuX2FTZXJ2ZXJzLmxlbmd0aDtpKyspe3RoaXMuX2FTZXJ2ZXJzW2ldLmRlc3Ryb3koKX19O2MuX2FkZEZpbHRlcj1mdW5jdGlvbihmKXt0aGlzLl9hRmlsdGVycy5wdXNoKGYpfTtjLl9yZW1vdmVGaWx0ZXI9ZnVuY3Rpb24oZil7dmFyIGk9cS5pbkFycmF5KGYsdGhpcy5fYUZpbHRlcnMpO2lmKGkhPT0tMSl7dGhpcy5fYUZpbHRlcnMuc3BsaWNlKGksMSl9cmV0dXJuIGkhPT0tMX07Yy5fcmVtb3ZlUmVzcG9uc2U9ZnVuY3Rpb24ocil7dmFyIFI9dGhpcy5fb1NlcnZlci5yZXNwb25zZXM7dmFyIGw9Ui5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsO2krKyl7aWYoUltpXS5yZXNwb25zZT09PXIpe1Iuc3BsaWNlKGksMSk7cmV0dXJuIHRydWV9fXJldHVybiBmYWxzZX07d2luZG93LnNpbm9uLkZha2VYTUxIdHRwUmVxdWVzdC51c2VGaWx0ZXJzPXRydWU7d2luZG93LnNpbm9uLkZha2VYTUxIdHRwUmVxdWVzdC5hZGRGaWx0ZXIoZnVuY3Rpb24obSx1LGEsVSxwKXt2YXIgZj1jLl9hRmlsdGVycztmb3IodmFyIGk9MDtpPGYubGVuZ3RoO2krKyl7dmFyIEY9ZltpXTtpZihGKG0sdSxhLFUscCkpe3JldHVybiBmYWxzZX19cmV0dXJuIHRydWV9KTt2YXIgZz1mdW5jdGlvbihmKXtpZigvLipcLmpzb24kL2kudGVzdChmKSl7cmV0dXJuIkpTT04ifWlmKC8uKlwueG1sJC9pLnRlc3QoZikpe3JldHVybiJYTUwifWlmKC8uKm1ldGFkYXRhJC9pLnRlc3QoZikpe3JldHVybiJYTUwifXJldHVybiBudWxsfTt3aW5kb3cuc2lub24uRmFrZVhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5yZXNwb25kRmlsZT1mdW5jdGlvbihTLGgsZil7dmFyIHI9cS5zYXAuc2pheCh7dXJsOmYsZGF0YVR5cGU6InRleHQifSk7aWYoIXIuc3VjY2Vzcyl0aHJvdyBuZXcgRXJyb3IoIkNvdWxkIG5vdCBsb2FkIGZpbGUgZnJvbTogIitmKTt2YXIgZD1yLmRhdGE7dmFyIG09ZyhmKTtpZih0aGlzWyJyZXNwb25kIittXSl7dGhpc1sicmVzcG9uZCIrbV0oUyxoLGQpfWVsc2V7dGhpcy5yZXNwb25kKFMsaCxkKX19O3dpbmRvdy5zaW5vbi5GYWtlWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLnJlc3BvbmRKU09OPWZ1bmN0aW9uKFMsaCxqKXtoPWh8fHt9O2hbIkNvbnRlbnQtVHlwZSJdPWhbIkNvbnRlbnQtVHlwZSJdfHwiYXBwbGljYXRpb24vanNvbiI7dGhpcy5yZXNwb25kKFMsaCx0eXBlb2Ygaj09PSJzdHJpbmciP2o6SlNPTi5zdHJpbmdpZnkoaikpfTt3aW5kb3cuc2lub24uRmFrZVhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5yZXNwb25kWE1MPWZ1bmN0aW9uKFMsaCx4KXtoPWh8fHt9O2hbIkNvbnRlbnQtVHlwZSJdPWhbIkNvbnRlbnQtVHlwZSJdfHwiYXBwbGljYXRpb24veG1sIjt0aGlzLnJlc3BvbmQoUyxoLHgpfTtyZXR1cm4gY30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5tb2RlbC5DbGllbnRNb2RlbCcpKXsNCi8qIQogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC5DbGllbnRNb2RlbCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9tb2RlbC9DbGllbnRNb2RlbCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQ2xpZW50Q29udGV4dEJpbmRpbmcnLCcuL0NsaWVudExpc3RCaW5kaW5nJywnLi9DbGllbnRQcm9wZXJ0eUJpbmRpbmcnLCcuL0NsaWVudFRyZWVCaW5kaW5nJywnLi9Nb2RlbCddLGZ1bmN0aW9uKHEsQyxhLGIsYyxNKXsidXNlIHN0cmljdCI7dmFyIGQ9TS5leHRlbmQoInNhcC51aS5tb2RlbC5DbGllbnRNb2RlbCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKEQpe00uYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuYkNhY2hlPXRydWU7dGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzPVtdO2lmKHR5cGVvZiBEPT0ic3RyaW5nIil7dGhpcy5sb2FkRGF0YShEKX19LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsibG9hZERhdGEiLCJzZXREYXRhIiwiZ2V0RGF0YSIsInNldFByb3BlcnR5IiwiZm9yY2VOb0NhY2hlIl19fSk7ZC5wcm90b3R5cGUuZ2V0RGF0YT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9EYXRhfTtkLnByb3RvdHlwZS5jaGVja1VwZGF0ZT1mdW5jdGlvbihmKXt2YXIgQj10aGlzLmFCaW5kaW5ncy5zbGljZSgwKTtxLmVhY2goQixmdW5jdGlvbihpLG8pe28uY2hlY2tVcGRhdGUoZil9KX07ZC5wcm90b3R5cGUuY3JlYXRlQmluZGluZ0NvbnRleHQ9ZnVuY3Rpb24ocCxvLFAsZil7aWYodHlwZW9mIG89PSJmdW5jdGlvbiIpe2Y9bztvPW51bGx9aWYodHlwZW9mIFA9PSJmdW5jdGlvbiIpe2Y9UDtQPW51bGx9dmFyIHM9dGhpcy5yZXNvbHZlKHAsbyksbj0ocz09dW5kZWZpbmVkKT91bmRlZmluZWQ6dGhpcy5nZXRDb250ZXh0KHM/czoiLyIpO2lmKCFuKXtuPW51bGx9ZihuKX07ZC5wcm90b3R5cGUuX2FqYXg9ZnVuY3Rpb24ocCl7dmFyIHQ9dGhpcztpZih0aGlzLmJEZXN0cm95ZWQpe3JldHVybn1mdW5jdGlvbiB3KGYpe3JldHVybiBmdW5jdGlvbigpe3ZhciBpPXEuaW5BcnJheShyLHQuYVBlbmRpbmdSZXF1ZXN0SGFuZGxlcyk7aWYoaT4tMSl7dC5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzLnNwbGljZShpLDEpfWlmKCEociYmci5iU3VwcHJlc3NFcnJvckhhbmRsZXJDYWxsKSl7Zi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX1wLnN1Y2Nlc3M9dyhwLnN1Y2Nlc3MpO3AuZXJyb3I9dyhwLmVycm9yKTt2YXIgcj1xLmFqYXgocCk7aWYocC5hc3luYyl7dGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzLnB1c2gocil9fTtkLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7aWYodGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzKXtmb3IodmFyIGk9dGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgcj10aGlzLmFQZW5kaW5nUmVxdWVzdEhhbmRsZXNbaV07aWYociYmci5hYm9ydCl7ci5iU3VwcHJlc3NFcnJvckhhbmRsZXJDYWxsPXRydWU7ci5hYm9ydCgpfX1kZWxldGUgdGhpcy5hUGVuZGluZ1JlcXVlc3RIYW5kbGVzfU0ucHJvdG90eXBlLmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtkLnByb3RvdHlwZS5kZXN0cm95QmluZGluZ0NvbnRleHQ9ZnVuY3Rpb24obyl7fTtkLnByb3RvdHlwZS5iaW5kQ29udGV4dD1mdW5jdGlvbihwLG8sUCl7dmFyIEI9bmV3IEModGhpcyxwLG8sUCk7cmV0dXJuIEJ9O2QucHJvdG90eXBlLnVwZGF0ZUJpbmRpbmdzPWZ1bmN0aW9uKGYpe3RoaXMuY2hlY2tVcGRhdGUoZil9O2QucHJvdG90eXBlLmZvcmNlTm9DYWNoZT1mdW5jdGlvbihmKXt0aGlzLmJDYWNoZT0hZn07cmV0dXJuIGR9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkubW9kZWwuanNvbi5KU09OTW9kZWwnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkubW9kZWwuanNvbi5KU09OTW9kZWwnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwvanNvbi9KU09OTW9kZWwiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvbW9kZWwvQ2xpZW50TW9kZWwnLCcuL0pTT05MaXN0QmluZGluZycsJy4vSlNPTlByb3BlcnR5QmluZGluZycsJy4vSlNPTlRyZWVCaW5kaW5nJ10sZnVuY3Rpb24ocSxDLEosYSxiKXsidXNlIHN0cmljdCI7dmFyIGM9Qy5leHRlbmQoInNhcC51aS5tb2RlbC5qc29uLkpTT05Nb2RlbCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKGQpe0MuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGQmJnR5cGVvZiBkPT0ib2JqZWN0Iil7dGhpcy5zZXREYXRhKGQpfX0sbWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJzZXRKU09OIiwiZ2V0SlNPTiJdfX0pO2MucHJvdG90eXBlLnNldERhdGE9ZnVuY3Rpb24oZCxtKXtpZihtKXt0aGlzLm9EYXRhPXEuZXh0ZW5kKHRydWUse30sdGhpcy5vRGF0YSxkKX1lbHNle3RoaXMub0RhdGE9ZH10aGlzLmNoZWNrVXBkYXRlKCl9O2MucHJvdG90eXBlLnNldEpTT049ZnVuY3Rpb24oaixtKXt2YXIgbzt0cnl7bz1xLnBhcnNlSlNPTihqKTt0aGlzLnNldERhdGEobyxtKX1jYXRjaChlKXtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogSlNPTiBwYXJzZSBFcnJvcjogIitlKTt0aGlzLmZpcmVQYXJzZUVycm9yKHt1cmw6IiIsZXJyb3JDb2RlOi0xLHJlYXNvbjoiIixzcmNUZXh0OmUsbGluZTotMSxsaW5lcG9zOi0xLGZpbGVwb3M6LTF9KX19O2MucHJvdG90eXBlLmdldEpTT049ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5vRGF0YSl9O2MucHJvdG90eXBlLmxvYWREYXRhPWZ1bmN0aW9uKHUscCxBLHQsbSxkLGgpe3ZhciBlPXRoaXM7QT0oQSE9PWZhbHNlKTt0PXR8fCJHRVQiO2Q9ZD09PXVuZGVmaW5lZD90aGlzLmJDYWNoZTpkO3RoaXMuZmlyZVJlcXVlc3RTZW50KHt1cmw6dSx0eXBlOnQsYXN5bmM6QSxoZWFkZXJzOmgsaW5mbzoiY2FjaGU9IitkKyI7Yk1lcmdlPSIrbSxpbmZvT2JqZWN0OntjYWNoZTpkLG1lcmdlOm19fSk7dGhpcy5fYWpheCh7dXJsOnUsYXN5bmM6QSxkYXRhVHlwZTonanNvbicsY2FjaGU6ZCxkYXRhOnAsaGVhZGVyczpoLHR5cGU6dCxzdWNjZXNzOmZ1bmN0aW9uKEQpe2lmKCFEKXtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogTm8gZGF0YSB3YXMgcmV0cmlldmVkIGJ5IHNlcnZpY2U6ICIrdSl9ZS5zZXREYXRhKEQsbSk7ZS5maXJlUmVxdWVzdENvbXBsZXRlZCh7dXJsOnUsdHlwZTp0LGFzeW5jOkEsaGVhZGVyczpoLGluZm86ImNhY2hlPSIrZCsiO2JNZXJnZT0iK20saW5mb09iamVjdDp7Y2FjaGU6ZCxtZXJnZTptfSxzdWNjZXNzOnRydWV9KX0sZXJyb3I6ZnVuY3Rpb24oWCxmLGcpe3ZhciBFPXttZXNzYWdlOmYsc3RhdHVzQ29kZTpYLnN0YXR1cyxzdGF0dXNUZXh0Olguc3RhdHVzVGV4dCxyZXNwb25zZVRleHQ6WC5yZXNwb25zZVRleHR9O3Euc2FwLmxvZy5mYXRhbCgiVGhlIGZvbGxvd2luZyBwcm9ibGVtIG9jY3VycmVkOiAiK2YsWC5yZXNwb25zZVRleHQrIiwiK1guc3RhdHVzKyIsIitYLnN0YXR1c1RleHQpO2UuZmlyZVJlcXVlc3RDb21wbGV0ZWQoe3VybDp1LHR5cGU6dCxhc3luYzpBLGhlYWRlcnM6aCxpbmZvOiJjYWNoZT0iK2QrIjtiTWVyZ2U9IittLGluZm9PYmplY3Q6e2NhY2hlOmQsbWVyZ2U6bX0sc3VjY2VzczpmYWxzZSxlcnJvcm9iamVjdDpFfSk7ZS5maXJlUmVxdWVzdEZhaWxlZChFKX19KX07Yy5wcm90b3R5cGUuYmluZFByb3BlcnR5PWZ1bmN0aW9uKHAsbyxQKXt2YXIgQj1uZXcgYSh0aGlzLHAsbyxQKTtyZXR1cm4gQn07Yy5wcm90b3R5cGUuYmluZExpc3Q9ZnVuY3Rpb24ocCxvLHMsZixQKXt2YXIgQj1uZXcgSih0aGlzLHAsbyxzLGYsUCk7cmV0dXJuIEJ9O2MucHJvdG90eXBlLmJpbmRUcmVlPWZ1bmN0aW9uKHAsbyxmLFApe3ZhciBCPW5ldyBiKHRoaXMscCxvLGYsUCk7cmV0dXJuIEJ9O2MucHJvdG90eXBlLnNldFByb3BlcnR5PWZ1bmN0aW9uKHAsdixvKXt2YXIgTz1wLnN1YnN0cmluZygwLHAubGFzdEluZGV4T2YoIi8iKSksUD1wLnN1YnN0cihwLmxhc3RJbmRleE9mKCIvIikrMSk7aWYoIXRoaXMucmVzb2x2ZShwLG8pKXtyZXR1cm59aWYoIU8mJiFvKXtvPXRoaXMub0RhdGF9dmFyIGQ9dGhpcy5fZ2V0T2JqZWN0KE8sbyk7aWYoZCl7ZFtQXT12O3RoaXMuY2hlY2tVcGRhdGUoKX19O2MucHJvdG90eXBlLmdldFByb3BlcnR5PWZ1bmN0aW9uKHAsbyl7cmV0dXJuIHRoaXMuX2dldE9iamVjdChwLG8pfTtjLnByb3RvdHlwZS5fZ2V0T2JqZWN0PWZ1bmN0aW9uKHAsbyl7dmFyIG49dGhpcy5pc0xlZ2FjeVN5bnRheCgpP3RoaXMub0RhdGE6bnVsbDtpZihvIGluc3RhbmNlb2Ygc2FwLnVpLm1vZGVsLkNvbnRleHQpe249dGhpcy5fZ2V0T2JqZWN0KG8uZ2V0UGF0aCgpKX1lbHNlIGlmKG8pe249b31pZighcCl7cmV0dXJuIG59dmFyIFA9cC5zcGxpdCgiLyIpLGk9MDtpZighUFswXSl7bj10aGlzLm9EYXRhO2krK313aGlsZShuJiZQW2ldKXtuPW5bUFtpXV07aSsrfXJldHVybiBufTtjLnByb3RvdHlwZS5pc0xpc3Q9ZnVuY3Rpb24ocCxvKXt2YXIgQT10aGlzLnJlc29sdmUocCxvKTtyZXR1cm4gcS5pc0FycmF5KHRoaXMuX2dldE9iamVjdChBKSl9O3JldHVybiBjfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLm1vZGVsLnhtbC5YTUxNb2RlbCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5tb2RlbC54bWwuWE1MTW9kZWwnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvbW9kZWwveG1sL1hNTE1vZGVsIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL21vZGVsL0NsaWVudE1vZGVsJywnLi9YTUxMaXN0QmluZGluZycsJy4vWE1MUHJvcGVydHlCaW5kaW5nJywnLi9YTUxUcmVlQmluZGluZycsJ2pxdWVyeS5zYXAueG1sJ10sZnVuY3Rpb24ocSxDLFgsYSxiKXsidXNlIHN0cmljdCI7dmFyIGM9Qy5leHRlbmQoInNhcC51aS5tb2RlbC54bWwuWE1MTW9kZWwiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihkKXtDLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt0aGlzLm9OYW1lU3BhY2VzPW51bGw7aWYoZCYmZC5kb2N1bWVudEVsZW1lbnQpe3RoaXMuc2V0RGF0YShkKX19LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsic2V0WE1MIiwiZ2V0WE1MIiwic2V0TmFtZVNwYWNlIl19fSk7Yy5wcm90b3R5cGUuc2V0WE1MPWZ1bmN0aW9uKHgpe3ZhciBvPXEuc2FwLnBhcnNlWE1MKHgpO2lmKG8ucGFyc2VFcnJvci5lcnJvckNvZGUhPTApe3ZhciBwPW8ucGFyc2VFcnJvcjtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogWE1MIHBhcnNlIEVycm9yIGZvciAiK3AudXJsKyIgY29kZTogIitwLmVycm9yQ29kZSsiIHJlYXNvbjogIitwLnJlYXNvbisiIHNyYzogIitwLnNyY1RleHQrIiBsaW5lOiAiK3AubGluZSsiIGxpbmVwb3M6ICIrcC5saW5lcG9zKyIgZmlsZXBvczogIitwLmZpbGVwb3MpO3RoaXMuZmlyZVBhcnNlRXJyb3Ioe3VybDpwLnVybCxlcnJvckNvZGU6cC5lcnJvckNvZGUscmVhc29uOnAucmVhc29uLHNyY1RleHQ6cC5zcmNUZXh0LGxpbmU6cC5saW5lLGxpbmVwb3M6cC5saW5lcG9zLGZpbGVwb3M6cC5maWxlcG9zfSl9dGhpcy5zZXREYXRhKG8pfTtjLnByb3RvdHlwZS5nZXRYTUw9ZnVuY3Rpb24oKXtyZXR1cm4gcS5zYXAuc2VyaWFsaXplWE1MKHRoaXMub0RhdGEpfTtjLnByb3RvdHlwZS5zZXREYXRhPWZ1bmN0aW9uKGQpe3RoaXMub0RhdGE9ZDt0aGlzLmNoZWNrVXBkYXRlKCl9O2MucHJvdG90eXBlLmxvYWREYXRhPWZ1bmN0aW9uKHUscCxBLHQsZCxoKXt2YXIgZT10aGlzO0E9KEEhPT1mYWxzZSk7dD10fHwiR0VUIjtkPWQ9PT11bmRlZmluZWQ/dGhpcy5iQ2FjaGU6ZDt0aGlzLmZpcmVSZXF1ZXN0U2VudCh7dXJsOnUsdHlwZTp0LGFzeW5jOkEsaGVhZGVyczpoLGluZm86ImNhY2hlPSIrZCxpbmZvT2JqZWN0OntjYWNoZTpkfX0pO3RoaXMuX2FqYXgoe3VybDp1LGFzeW5jOkEsY2FjaGU6ZCxkYXRhVHlwZToneG1sJyxkYXRhOnAsaGVhZGVyczpoLHR5cGU6dCxzdWNjZXNzOmZ1bmN0aW9uKEQpe2lmKCFEKXtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogTm8gZGF0YSB3YXMgcmV0cmlldmVkIGJ5IHNlcnZpY2U6ICIrdSl9ZS5zZXREYXRhKEQpO2UuZmlyZVJlcXVlc3RDb21wbGV0ZWQoe3VybDp1LHR5cGU6dCxhc3luYzpBLGhlYWRlcnM6aCxpbmZvOiJjYWNoZT0iK2QsaW5mb09iamVjdDp7Y2FjaGU6ZH0sc3VjY2Vzczp0cnVlfSl9LGVycm9yOmZ1bmN0aW9uKGYsZyxpKXt2YXIgRT17bWVzc2FnZTpnLHN0YXR1c0NvZGU6Zi5zdGF0dXMsc3RhdHVzVGV4dDpmLnN0YXR1c1RleHQscmVzcG9uc2VUZXh0OmYucmVzcG9uc2VUZXh0fTtxLnNhcC5sb2cuZmF0YWwoIlRoZSBmb2xsb3dpbmcgcHJvYmxlbSBvY2N1cnJlZDogIitnLGYucmVzcG9uc2VUZXh0KyIsIitmLnN0YXR1cysiLCIrZi5zdGF0dXNUZXh0KTtlLmZpcmVSZXF1ZXN0Q29tcGxldGVkKHt1cmw6dSx0eXBlOnQsYXN5bmM6QSxoZWFkZXJzOmgsaW5mbzoiY2FjaGU9IitkLGluZm9PYmplY3Q6e2NhY2hlOmR9LHN1Y2Nlc3M6ZmFsc2UsZXJyb3JvYmplY3Q6RX0pO2UuZmlyZVJlcXVlc3RGYWlsZWQoRSl9fSl9O2MucHJvdG90eXBlLnNldE5hbWVTcGFjZT1mdW5jdGlvbihuLHApe2lmKCFwKXtwPSIifWlmKCF0aGlzLm9OYW1lU3BhY2VzKXt0aGlzLm9OYW1lU3BhY2VzPXt9fXRoaXMub05hbWVTcGFjZXNbcF09bn07Yy5wcm90b3R5cGUuYmluZFByb3BlcnR5PWZ1bmN0aW9uKHAsbyxQKXt2YXIgQj1uZXcgYSh0aGlzLHAsbyxQKTtyZXR1cm4gQn07Yy5wcm90b3R5cGUuYmluZExpc3Q9ZnVuY3Rpb24ocCxvLHMsZixQKXt2YXIgQj1uZXcgWCh0aGlzLHAsbyxzLGYsUCk7cmV0dXJuIEJ9O2MucHJvdG90eXBlLmJpbmRUcmVlPWZ1bmN0aW9uKHAsbyxmLFApe3ZhciBCPW5ldyBiKHRoaXMscCxvLGYsUCk7cmV0dXJuIEJ9O2MucHJvdG90eXBlLnNldFByb3BlcnR5PWZ1bmN0aW9uKHAsdixvKXt2YXIgTz1wLnN1YnN0cmluZygwLHAubGFzdEluZGV4T2YoIi8iKSsxKSxQPXAuc3Vic3RyKHAubGFzdEluZGV4T2YoIi8iKSsxKTtpZighdGhpcy5yZXNvbHZlKHAsbykpe3JldHVybn1pZighdGhpcy5vRGF0YS5kb2N1bWVudEVsZW1lbnQpe3Euc2FwLmxvZy53YXJuaW5nKCJUcnlpbmcgdG8gc2V0IHByb3BlcnR5ICIrcCsiLCBidXQgbm8gZG9jdW1lbnQgZXhpc3RzLiIpO3JldHVybn12YXIgZDtpZihQLmluZGV4T2YoIkAiKT09MCl7ZD10aGlzLl9nZXRPYmplY3QoTyxvKTtpZihkWzBdKXtkWzBdLnNldEF0dHJpYnV0ZShQLnN1YnN0cigxKSx2KTt0aGlzLmNoZWNrVXBkYXRlKCl9fWVsc2V7ZD10aGlzLl9nZXRPYmplY3QocCxvKTtpZihkWzBdKXtxKGRbMF0pLnRleHQodik7dGhpcy5jaGVja1VwZGF0ZSgpfX19O2MucHJvdG90eXBlLmdldFByb3BlcnR5PWZ1bmN0aW9uKHAsbyl7dmFyIHI9dGhpcy5fZ2V0T2JqZWN0KHAsbyk7aWYociYmdHlwZW9mIHIhPSJzdHJpbmciKXtyPXEoclswXSkudGV4dCgpfXJldHVybiByfTtjLnByb3RvdHlwZS5nZXRPYmplY3Q9ZnVuY3Rpb24ocCxvKXt2YXIgTz10aGlzLl9nZXRPYmplY3QocCxvKTtpZihxLmlzQXJyYXkoTykpe089T1swXX1yZXR1cm4gT307Yy5wcm90b3R5cGUuX2dldE9iamVjdD1mdW5jdGlvbihwLG8pe3ZhciByPXRoaXMub0RhdGEuZG9jdW1lbnRFbGVtZW50O2lmKCFyKXtyZXR1cm4gbnVsbH12YXIgbj10aGlzLmlzTGVnYWN5U3ludGF4KCk/W3JdOltdO2lmKG8gaW5zdGFuY2VvZiBzYXAudWkubW9kZWwuQ29udGV4dCl7bj10aGlzLl9nZXRPYmplY3Qoby5nZXRQYXRoKCkpfWVsc2UgaWYobyl7bj1bb119aWYoIXApe3JldHVybiBufXZhciBQPXAuc3BsaXQoIi8iKSxzLGk9MDtpZighUFswXSl7bj1yO2krK31uPW4ubGVuZ3RoPT11bmRlZmluZWQ/W25dOm47bj1uWzBdP246bnVsbDt3aGlsZShuJiZuLmxlbmd0aD4wJiZQW2ldKXtzPVBbaV07aWYocy5pbmRleE9mKCJAIik9PTApe249dGhpcy5fZ2V0QXR0cmlidXRlKG5bMF0scy5zdWJzdHIoMSkpfWVsc2UgaWYocz09InRleHQoKSIpe249cShuWzBdKS50ZXh0KCl9ZWxzZSBpZihpc05hTihzKSl7bj10aGlzLl9nZXRDaGlsZEVsZW1lbnRzQnlUYWdOYW1lKG5bMF0scyl9ZWxzZXtuPVtuW3NdXX1pKyt9cmV0dXJuIG59O2MucHJvdG90eXBlLl9nZXRBdHRyaWJ1dGU9ZnVuY3Rpb24obixOKXtpZighdGhpcy5vTmFtZVNwYWNlc3x8Ti5pbmRleE9mKCI6Iik9PS0xKXtyZXR1cm4gbi5nZXRBdHRyaWJ1dGUoTil9dmFyIHM9dGhpcy5fZ2V0TmFtZVNwYWNlKE4pLGw9dGhpcy5fZ2V0TG9jYWxOYW1lKE4pO2lmKG4uZ2V0QXR0cmlidXRlTlMpe3JldHVybiBuLmdldEF0dHJpYnV0ZU5TKHMsbCl9ZWxzZXtpZighdGhpcy5vRG9jTlNQcmVmaXhlcyl7dGhpcy5vRG9jTlNQcmVmaXhlcz10aGlzLl9nZXREb2NOU1ByZWZpeGVzKCl9dmFyIHA9dGhpcy5vRG9jTlNQcmVmaXhlc1tzXTtOPShwP3ArIjoiOiIiKStsO3JldHVybiBuLmdldEF0dHJpYnV0ZShOKX19O2MucHJvdG90eXBlLl9nZXRDaGlsZEVsZW1lbnRzQnlUYWdOYW1lPWZ1bmN0aW9uKG4sTil7dmFyIGQ9bi5jaGlsZE5vZGVzLHI9W107aWYodGhpcy5vTmFtZVNwYWNlcyl7dmFyIHM9dGhpcy5fZ2V0TmFtZVNwYWNlKE4pLGw9dGhpcy5fZ2V0TG9jYWxOYW1lKE4pLGU7cS5lYWNoKGQsZnVuY3Rpb24oaSxvKXtlPW8ubG9jYWxOYW1lfHxvLmJhc2VOYW1lO2lmKG8ubm9kZVR5cGU9PTEmJmU9PWwmJm8ubmFtZXNwYWNlVVJJPT1zKXtyLnB1c2gobyl9fSl9ZWxzZXtxLmVhY2goZCxmdW5jdGlvbihpLG8pe2lmKG8ubm9kZVR5cGU9PTEmJm8ubm9kZU5hbWU9PU4pe3IucHVzaChvKX19KX1yZXR1cm4gcn07Yy5wcm90b3R5cGUuX2dldE5hbWVTcGFjZT1mdW5jdGlvbihuKXt2YXIgaT1uLmluZGV4T2YoIjoiKSxwPSIiO2lmKGk+MCl7cD1uLnN1YnN0cigwLGkpfXJldHVybiB0aGlzLm9OYW1lU3BhY2VzW3BdfTtjLnByb3RvdHlwZS5fZ2V0TG9jYWxOYW1lPWZ1bmN0aW9uKG4pe3ZhciBpPW4uaW5kZXhPZigiOiIpLGw9bjtpZihpPjApe2w9bi5zdWJzdHIoaSsxKX1yZXR1cm4gbH07Yy5wcm90b3R5cGUuX2dldERvY05TUHJlZml4ZXM9ZnVuY3Rpb24oKXt2YXIgcD17fSxkPXRoaXMub0RhdGEmJnRoaXMub0RhdGEuZG9jdW1lbnRFbGVtZW50O2lmKCFkKXtyZXR1cm4gcH12YXIgQT1kLmF0dHJpYnV0ZXM7cS5lYWNoKEEsZnVuY3Rpb24oaSxvKXt2YXIgbj1vLm5hbWUsdj1vLnZhbHVlO2lmKG49PSJ4bWxucyIpe3Bbdl09IiJ9ZWxzZSBpZihuLmluZGV4T2YoInhtbG5zIik9PTApe3Bbdl09bi5zdWJzdHIoNil9fSk7cmV0dXJuIHB9O2MucHJvdG90eXBlLl9yZXNvbHZlPWZ1bmN0aW9uKHAsbyl7dmFyIGk9IXEuc2FwLnN0YXJ0c1dpdGgocCwiLyIpLHI9cDtpZihpKXtpZihvKXtyPW8uZ2V0UGF0aCgpKyIvIitwfWVsc2V7cj10aGlzLmlzTGVnYWN5U3ludGF4KCk/Ii8iK3A6dW5kZWZpbmVkfX1yZXR1cm4gcn07Yy5wcm90b3R5cGUuaXNMaXN0PWZ1bmN0aW9uKHAsbyl7cmV0dXJuIGZhbHNlfTtyZXR1cm4gY30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5hcHAuTW9ja1NlcnZlcicpKXsNCi8qCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmFwcC5Nb2NrU2VydmVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2FwcC9Nb2NrU2VydmVyIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2NvcmUvdXRpbC9Nb2NrU2VydmVyJ10sZnVuY3Rpb24ocSxNKXsidXNlIHN0cmljdCI7dmFyIGE9TTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnRtcGwuSGFuZGxlYmFyc1RlbXBsYXRlJykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUudG1wbC5IYW5kbGViYXJzVGVtcGxhdGUnKTtqUXVlcnkuc2FwLnJlcXVpcmUoJ3NhcC51aS50aGlyZHBhcnR5LmhhbmRsZWJhcnMnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS90bXBsL0hhbmRsZWJhcnNUZW1wbGF0ZSIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vVGVtcGxhdGUnLCdzYXAvdWkvdGhpcmRwYXJ0eS9oYW5kbGViYXJzJ10sZnVuY3Rpb24ocSxULGgpeyJ1c2Ugc3RyaWN0Ijt2YXIgSD1ULmV4dGVuZCgic2FwLnVpLmNvcmUudG1wbC5IYW5kbGViYXJzVGVtcGxhdGUiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihpLHMpe1QuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0pO1QucmVnaXN0ZXJUeXBlKCJ0ZXh0L3gtaGFuZGxlYmFycy10ZW1wbGF0ZSIsInNhcC51aS5jb3JlLnRtcGwuSGFuZGxlYmFyc1RlbXBsYXRlIik7SC5SRU5ERVJfSEVMUEVSUz0oZnVuY3Rpb24oKXt2YXIgZT1IYW5kbGViYXJzLmhlbHBlcnNbImVhY2giXSx3PUhhbmRsZWJhcnMuaGVscGVyc1sid2l0aCJdLEk9SGFuZGxlYmFycy5oZWxwZXJzWyJpZiJdLHU9SGFuZGxlYmFycy5oZWxwZXJzWyJ1bmxlc3MiXSxwPVQucGFyc2VQYXRoO3ZhciBvPXsiZWFjaCI6ZnVuY3Rpb24oYyxhKXthPWF8fGM7aWYoIWEuaGFzaC5wYXRoKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZWxzZXt2YXIgcj1hLmRhdGEucmVuZGVyTWFuYWdlcixSPWEuZGF0YS5yb290Q29udHJvbCxQPWEuZGF0YS5wYXRoLGI9YS5kYXRhLnBhcmVudENvbnRyb2wscz0ocS5zYXAuc3RhcnRzV2l0aChhLmhhc2gucGF0aCwiLyIpPyIiOihQfHwiIikpK2EuaGFzaC5wYXRoLGQ9Ui5iaW5kTGlzdChzKSxmPVtdLGc7aWYoYS5kYXRhKXtnPUhhbmRsZWJhcnMuY3JlYXRlRnJhbWUoYS5kYXRhKX1pZihkKXtxLmVhY2goZCxmdW5jdGlvbihrLHYpe2lmKGcpe2cucmVuZGVyTWFuYWdlcj1yO2cucm9vdENvbnRyb2w9UjtnLnBhdGg9cysiLyIraysiLyI7Zy5wYXJlbnRDb250cm9sPWJ9Zi5wdXNoKGEuZm4oe30se2RhdGE6Z30pKX0pfWlmKCFiKXtyZXR1cm4gbmV3IEhhbmRsZWJhcnMuU2FmZVN0cmluZyhmLmpvaW4oIiIpKX19fSwid2l0aCI6ZnVuY3Rpb24oYyxhKXthPWF8fGM7aWYoIWEuaGFzaC5wYXRoKXtyZXR1cm4gdy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZWxzZXt9fSwiaWYiOmZ1bmN0aW9uKGMsYSl7YT1hfHxjO2lmKCFhLmhhc2gucGF0aCl7cmV0dXJuIEkuYXBwbHkodGhpcyxhcmd1bWVudHMpfWVsc2V7fX0sInVubGVzcyI6ZnVuY3Rpb24oYyxhKXthPWF8fGM7aWYoIWEuaGFzaC5wYXRoKXtyZXR1cm4gdS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZWxzZXt9fSwidGV4dCI6ZnVuY3Rpb24oYyxhKXthPWF8fGM7dmFyIHI9YS5kYXRhLnJvb3RDb250cm9sLFA9YS5kYXRhLnBhdGgscz0ocS5zYXAuc3RhcnRzV2l0aChhLmhhc2gucGF0aCwiLyIpPyIiOihQfHwiIikpK2EuaGFzaC5wYXRoO2lmKHMpe3ZhciB2PXIuYmluZFByb3Aocyk7cmV0dXJuIHYmJm5ldyBIYW5kbGViYXJzLlNhZmVTdHJpbmcodil9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIlRoZSBleHByZXNzaW9uIFwidGV4dFwiIHJlcXVpcmVzIHRoZSBvcHRpb24gXCJwYXRoXCIhIil9fSwiZWxlbWVudCI6ZnVuY3Rpb24oYyxhKXthPWF8fGM7dmFyIHI9YS5kYXRhLnJlbmRlck1hbmFnZXIsUj1hLmRhdGEucm9vdENvbnRyb2wsRT1SLmNyZWF0ZURPTUVsZW1lbnQoYS5oYXNoLGEuZGF0YS5wYXRoKSxQPWEuZGF0YS5wYXJlbnRFbGVtZW50O2lmKGEuZm4pe3ZhciBDPWEuZm4oe30se2RhdGE6e3JlbmRlck1hbmFnZXI6cixyb290Q29udHJvbDpSLHBhcmVudEVsZW1lbnQ6RX19KX1pZihQKXtQLmFkZEVsZW1lbnQoRSk7cmV0dXJufXJldHVybiBuZXcgSGFuZGxlYmFycy5TYWZlU3RyaW5nKHIuZ2V0SFRNTChFKSl9LCJjb250cm9sIjpmdW5jdGlvbihjLGEpe2E9YXx8Yzt2YXIgcj1hLmRhdGEucmVuZGVyTWFuYWdlcixDPWEuZGF0YS5jb250cm9sO2lmKEMpe3JldHVybiBuZXcgSGFuZGxlYmFycy5TYWZlU3RyaW5nKHIuZ2V0SFRNTChDKSl9dmFyIFI9YS5kYXRhLnJvb3RDb250cm9sLFA9YS5kYXRhLnBhdGgsbT1hLmRhdGEuY2hpbGRyZW4sdD1hLmhhc2hbInNhcC11aS10eXBlIl0sTT1xLnNhcC5nZXRPYmplY3QodCkuZ2V0TWV0YWRhdGEoKSxkPWEuaGFzaFsic2FwLXVpLWRlZmF1bHQtYWdncmVnYXRpb24iXXx8TS5nZXREZWZhdWx0QWdncmVnYXRpb25OYW1lKCksdj1hLmRhdGEudmlldzt2YXIgYj17fTtpZihhLmZuKXthLmZuKHt9LHtkYXRhOntyb290Q29udHJvbDpSLHBhdGg6UCxjaGlsZHJlbjpiLGRlZmF1bHRBZ2dyZWdhdGlvbjpkLHZpZXc6dn19KX12YXIgcz1xLmV4dGVuZCh7fSxhLmhhc2gpO3EuZWFjaChzLGZ1bmN0aW9uKGssVil7aWYoYltrXSl7ZGVsZXRlIHNba119fSk7dmFyIG49Ui5jcmVhdGVDb250cm9sKHMsYS5kYXRhLnBhdGgsISFtLHYpO2lmKCFxLmlzRW1wdHlPYmplY3QoYikpe3M9YS5oYXNoO3ZhciBBPU0uZ2V0QWxsQWdncmVnYXRpb25zKCk7cS5lYWNoKGIsZnVuY3Rpb24oZixnKXtmb3IodmFyIGk9MCxsPWcubGVuZ3RoO2k8bDtpKyspe3ZhciBqPWdbaV0saz1BW2ZdLHg9ayYmay5tdWx0aXBsZTtpZih0eXBlb2Ygc1tmXT09PSJzdHJpbmciKXt2YXIgQj1zYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LmJpbmRpbmdQYXJzZXIoc1tmXSx2JiZ2LmdldENvbnRyb2xsZXIoKSk7Qi50ZW1wbGF0ZT1qO24uYmluZEFnZ3JlZ2F0aW9uKGYsQil9ZWxzZXtpZih4KXtuLmFkZEFnZ3JlZ2F0aW9uKGYsail9ZWxzZXtuLnNldEFnZ3JlZ2F0aW9uKGYsail9fX19KX1pZihtKXt2YXIgZj1hLmhhc2hbInNhcC11aS1hZ2dyZWdhdGlvbiJdfHxhLmRhdGEuZGVmYXVsdEFnZ3JlZ2F0aW9uO21bZl09bVtmXXx8W107bVtmXS5wdXNoKG4pO3JldHVybn1yZXR1cm4gbmV3IEhhbmRsZWJhcnMuU2FmZVN0cmluZyhyLmdldEhUTUwobikpfSwicHJvcGVydHkiOmZ1bmN0aW9uKGMsYSl7YT1hfHxjO3ZhciByPWEuZGF0YS5yb290Q29udHJvbCxtPXIuZ2V0TWV0YWRhdGEoKSxQPWEuaGFzaC5uYW1lLGc9bS5nZXRBbGxQcm9wZXJ0aWVzKClbUF0uX3NHZXR0ZXI7cmV0dXJuIHJbZ10oKX0sImFnZ3JlZ2F0aW9uIjpmdW5jdGlvbihjLGEpe2E9YXx8Yzt2YXIgcj1hLmRhdGEucmVuZGVyTWFuYWdlcixSPWEuZGF0YS5yb290Q29udHJvbCxtPVIuZ2V0TWV0YWRhdGEoKSxBPWEuaGFzaC5uYW1lLGc9bS5nZXRBbGxBZ2dyZWdhdGlvbnMoKVtBXS5fc0dldHRlcixiPVtdO3ZhciBDPVJbZ10oKTtpZihDKXtmb3IodmFyIGk9MCxsPUMubGVuZ3RoO2k8bDtpKyspe2lmKGEuZm4pe2IucHVzaChhLmZuKHt9LHtkYXRhOntyZW5kZXJNYW5hZ2VyOnIscm9vdENvbnRyb2w6Uixjb250cm9sOkNbaV19fSkpfWVsc2V7Yi5wdXNoKHIuZ2V0SFRNTChDW2ldKSl9fX1yZXR1cm4gbmV3IEhhbmRsZWJhcnMuU2FmZVN0cmluZyhiLmpvaW4oIiIpKX0sImV2ZW50IjpmdW5jdGlvbihjLGEpe2E9YXx8Y319O3JldHVybiBvfSgpKTtILnByb3RvdHlwZS5jcmVhdGVNZXRhZGF0YT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Q29udGVudCgpLGY9dGhpcy5fZm5UZW1wbGF0ZT10aGlzLl9mblRlbXBsYXRlfHxIYW5kbGViYXJzLmNvbXBpbGUodCk7dmFyIG09e30saj1zYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5nZXRNZXRhZGF0YSgpLmdldEpTT05LZXlzKCkscD1zYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5nZXRNZXRhZGF0YSgpLmdldEFsbFByaXZhdGVBZ2dyZWdhdGlvbnMoKTt2YXIgbz17InByb3BlcnR5IjpmdW5jdGlvbihjLGEpe2E9YXx8Yzt2YXIgbj1hLmhhc2gubmFtZTtpZihuJiZuIT09ImlkIiYmIWpbbl0pe20ucHJvcGVydGllcz1tLnByb3BlcnRpZXN8fHt9O20ucHJvcGVydGllc1tuXT1xLmV4dGVuZCh7fSx7dHlwZToic3RyaW5nIn0sYS5oYXNoKX1lbHNle3Rocm93IG5ldyBFcnJvcigiVGhlIHByb3BlcnR5IG5hbWUgXCIiK24rIlwiIGlzIHJlc2VydmVkLiIpfX0sImFnZ3JlZ2F0aW9uIjpmdW5jdGlvbihjLGEpe2E9YXx8Yzt2YXIgbj1hLmhhc2gubmFtZTtpZihuJiYhaltuXSYmIXBbbl0pe2EuaGFzaC5tdWx0aXBsZT1hLmhhc2gubXVsdGlwbGU9PSJ0cnVlIjttLmFnZ3JlZ2F0aW9ucz1tLmFnZ3JlZ2F0aW9uc3x8e307bS5hZ2dyZWdhdGlvbnNbbl09cS5leHRlbmQoe30sYS5oYXNoKX1lbHNle3Rocm93IG5ldyBFcnJvcigiVGhlIGFnZ3JlZ2F0aW9uIG5hbWUgXCIiK24rIlwiIGlzIHJlc2VydmVkLiIpfX0sImV2ZW50IjpmdW5jdGlvbihjLGEpe2E9YXx8Y319O3EuZWFjaChbImVhY2giLCJpZiIsInVubGVzcyIsIndpdGgiXSxmdW5jdGlvbihpLHYpe29bdl09ZnVuY3Rpb24oKXt9fSk7Zih7fSx7aGVscGVyczpvfSk7cmV0dXJuIG19O0gucHJvdG90eXBlLmNyZWF0ZVJlbmRlcmVyPWZ1bmN0aW9uKHYpe3ZhciB0PXRoaXMuZ2V0Q29udGVudCgpLGY9dGhpcy5fZm5UZW1wbGF0ZT10aGlzLl9mblRlbXBsYXRlfHxIYW5kbGViYXJzLmNvbXBpbGUodCk7dmFyIHI9ZnVuY3Rpb24oYSxjKXt2YXIgcz1mKGMuZ2V0Q29udGV4dCgpfHx7fSx7ZGF0YTp7cmVuZGVyTWFuYWdlcjphLHJvb3RDb250cm9sOmMsdmlldzp2fSxoZWxwZXJzOkguUkVOREVSX0hFTFBFUlN9KTthLndyaXRlKHMpfTtyZXR1cm4gcn07cmV0dXJuIEh9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Db3JlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuQ29yZScpO2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkNvbXBvbmVudCcpKXsNCi8qCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuQ29tcG9uZW50Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvQ29tcG9uZW50IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvTWFuYWdlZE9iamVjdCcsJy4vQ29tcG9uZW50TWV0YWRhdGEnLCcuL0NvcmUnXSxmdW5jdGlvbihxLE0sQyxhKXsidXNlIHN0cmljdCI7dmFyIGI9TS5leHRlbmQoInNhcC51aS5jb3JlLkNvbXBvbmVudCIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKGkscyl7TS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LG1ldGFkYXRhOntzdGVyZW90eXBlOiJjb21wb25lbnQiLCJhYnN0cmFjdCI6dHJ1ZSx2ZXJzaW9uOiIwLjAiLGluY2x1ZGVzOltdLGRlcGVuZGVuY2llczp7bGliczpbXSxjb21wb25lbnRzOltdLHVpNXZlcnNpb246IiJ9LGNvbmZpZzp7fSxjdXN0b21pemluZzp7fSxsaWJyYXJ5OiJzYXAudWkuY29yZSJ9fSxDKTtiLmFjdGl2YXRlQ3VzdG9taXppbmc9ZnVuY3Rpb24oYyl7fTtiLmRlYWN0aXZhdGVDdXN0b21pemluZz1mdW5jdGlvbihjKXt9O2IuZ2V0T3duZXJJZEZvcj1mdW5jdGlvbihvKXtpZihvJiYobyBpbnN0YW5jZW9mIGJ8fG8gaW5zdGFuY2VvZiBzYXAudWkuY29yZS5tdmMuVmlldykpe3JldHVybiBNLmdldE93bmVySWRGb3Iobyl9fTtiLnByb3RvdHlwZS5nZXRJbnRlcmZhY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307Yi5wcm90b3R5cGUuX2luaXRDb21wb3NpdGVTdXBwb3J0PWZ1bmN0aW9uKHMpe3RoaXMuX21Nb2NrU2VydmVycz17fTt0aGlzLmdldE1ldGFkYXRhKCkub25Jbml0Q29tcG9uZW50KCk7dGhpcy5vQ29tcG9uZW50RGF0YT1zJiZzLmNvbXBvbmVudERhdGE7dGhpcy5nZXRNZXRhZGF0YSgpLmluaXQoKTt0aGlzLmluaXRDb21wb25lbnRNb2RlbHMoKTtpZih0aGlzLm9uV2luZG93RXJyb3Ipe3RoaXMuX2ZuV2luZG93RXJyb3JIYW5kbGVyPXEucHJveHkoZnVuY3Rpb24oZSl7dmFyIEU9ZS5vcmlnaW5hbEV2ZW50O3RoaXMub25XaW5kb3dFcnJvcihFLm1lc3NhZ2UsRS5maWxlbmFtZSxFLmxpbmVubyl9LHRoaXMpO3Eod2luZG93KS5iaW5kKCJlcnJvciIsdGhpcy5fZm5XaW5kb3dFcnJvckhhbmRsZXIpfWlmKHRoaXMub25XaW5kb3dCZWZvcmVVbmxvYWQpe3RoaXMuX2ZuV2luZG93QmVmb3JlVW5sb2FkSGFuZGxlcj1xLnByb3h5KHRoaXMub25XaW5kb3dCZWZvcmVVbmxvYWQsdGhpcyk7cSh3aW5kb3cpLmJpbmQoImJlZm9yZXVubG9hZCIsdGhpcy5fZm5XaW5kb3dCZWZvcmVVbmxvYWRIYW5kbGVyKX1pZih0aGlzLm9uV2luZG93VW5sb2FkKXt0aGlzLl9mbldpbmRvd1VubG9hZEhhbmRsZXI9cS5wcm94eSh0aGlzLm9uV2luZG93VW5sb2FkLHRoaXMpO3Eod2luZG93KS5iaW5kKCJ1bmxvYWQiLHRoaXMuX2ZuV2luZG93VW5sb2FkSGFuZGxlcil9fTtiLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7aWYodGhpcy5fbU1vY2tTZXJ2ZXJzKXtxLmVhY2godGhpcy5fbU1vY2tTZXJ2ZXJzLGZ1bmN0aW9uKG4sbSl7bS5zdG9wKCl9KTtkZWxldGUgdGhpcy5fbU1vY2tTZXJ2ZXJzfWlmKHRoaXMuX2ZuV2luZG93RXJyb3JIYW5kbGVyKXtxKHdpbmRvdykudW5iaW5kKCJlcnJvciIsdGhpcy5fZm5XaW5kb3dFcnJvckhhbmRsZXIpO2RlbGV0ZSB0aGlzLl9mbldpbmRvd0Vycm9ySGFuZGxlcn1pZih0aGlzLl9mbldpbmRvd0JlZm9yZVVubG9hZEhhbmRsZXIpe3Eod2luZG93KS51bmJpbmQoImJlZm9yZXVubG9hZCIsdGhpcy5fZm5XaW5kb3dCZWZvcmVVbmxvYWRIYW5kbGVyKTtkZWxldGUgdGhpcy5fZm5XaW5kb3dCZWZvcmVVbmxvYWRIYW5kbGVyfWlmKHRoaXMuX2ZuV2luZG93VW5sb2FkSGFuZGxlcil7cSh3aW5kb3cpLnVuYmluZCgidW5sb2FkIix0aGlzLl9mbldpbmRvd1VubG9hZEhhbmRsZXIpO2RlbGV0ZSB0aGlzLl9mbldpbmRvd1VubG9hZEhhbmRsZXJ9aWYodGhpcy5fb0V2ZW50QnVzKXt0aGlzLl9vRXZlbnRCdXMuZGVzdHJveSgpO2RlbGV0ZSB0aGlzLl9vRXZlbnRCdXN9TS5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dGhpcy5nZXRNZXRhZGF0YSgpLm9uRXhpdENvbXBvbmVudCgpfTtiLnByb3RvdHlwZS5nZXRDb21wb25lbnREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub0NvbXBvbmVudERhdGF9O2IucHJvdG90eXBlLmdldEV2ZW50QnVzPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX29FdmVudEJ1cyl7cS5zYXAucmVxdWlyZSgic2FwLnVpLmNvcmUuRXZlbnRCdXMiKTt0aGlzLl9vRXZlbnRCdXM9bmV3IHNhcC51aS5jb3JlLkV2ZW50QnVzKCl9cmV0dXJuIHRoaXMuX29FdmVudEJ1c307Yi5wcm90b3R5cGUuaW5pdENvbXBvbmVudE1vZGVscz1mdW5jdGlvbihtLHMpe3ZhciBvPXRoaXMuZ2V0TWV0YWRhdGEoKTt2YXIgYz1tfHxvLmdldE1vZGVscygpLFM9c3x8by5nZXRTZXJ2aWNlcygpO2lmKGMpe3ZhciBmPWZ1bmN0aW9uKG4sdSxlLGcpe2lmKHRoaXMuX21Nb2NrU2VydmVyc1tuXSl7dGhpcy5fbU1vY2tTZXJ2ZXJzW25dLnN0b3AoKX1xLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS51dGlsLk1vY2tTZXJ2ZXIiKTt0aGlzLl9tTW9ja1NlcnZlcnNbbl09bmV3IHNhcC51aS5jb3JlLnV0aWwuTW9ja1NlcnZlcih7cm9vdFVyaTp1fSk7dGhpcy5fbU1vY2tTZXJ2ZXJzW25dLnNpbXVsYXRlKGUsZyk7dGhpcy5fbU1vY2tTZXJ2ZXJzW25dLnN0YXJ0KCl9O3ZhciBkPWZ1bmN0aW9uKG4sZSl7dmFyIHU9ZS51cmksVD1lLnR5cGU7cS5zYXAucmVxdWlyZShUKTt2YXIgZz1xLnNhcC5nZXRPYmplY3QoVCk7dmFyIGg7aWYoVD09PSJzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VNb2RlbCIpe2g9bmV3IGcoe2J1bmRsZVVybDp1fSl9ZWxzZSBpZihUPT09InNhcC51aS5tb2RlbC5vZGF0YS5PRGF0YU1vZGVsIil7aWYoZS5tb2Nrc2VydmVyKXtmLmNhbGwodGhpcyxuLHUsZS5tb2Nrc2VydmVyLm1vZGVsLGUubW9ja3NlcnZlci5kYXRhKX1oPW5ldyBnKHUsZS5zZXR0aW5ncyl9ZWxzZSBpZihUPT09InNhcC51aS5tb2RlbC5qc29uLkpTT05Nb2RlbCJ8fFQ9PT0ic2FwLnVpLm1vZGVsLnhtbC5YTUxNb2RlbCIpe2g9bmV3IGcoKTtpZih1KXtoLmxvYWREYXRhKHUpfX1yZXR1cm4gaH07dmFyIHQ9dGhpcztxLmVhY2goYyxmdW5jdGlvbihrLGUpe3ZhciBnPWUuc2VydmljZSxoO2lmKGcpe3ZhciBpPVNbZ107aD1kLmNhbGwodCxrLGkpfWVsc2UgaWYoZS50eXBlKXtoPWQuY2FsbCh0LGssZSl9aWYoaCl7dC5zZXRNb2RlbChoLGt8fHVuZGVmaW5lZCl9fSl9fTtzYXAudWkuY29tcG9uZW50PWZ1bmN0aW9uKGMpe2lmKCFjKXt0aHJvdyBuZXcgRXJyb3IoInNhcC51aS5jb21wb25lbnQgY2Fubm90IGJlIGNhbGxlZCB3aXRob3V0IHBhcmFtZXRlciEiKX1pZih0eXBlb2YgYz09PSJzdHJpbmciKXtyZXR1cm4gc2FwLnVpLmdldENvcmUoKS5nZXRDb21wb25lbnQoYyl9ZWxzZXt2YXIgbj1jLm5hbWUsaT1jLmlkLG89Yy5jb21wb25lbnREYXRhLHM9bisiLkNvbXBvbmVudCIsUz1jLnNldHRpbmdzO3ZhciBkPXNhcC51aS5jb21wb25lbnQubG9hZChjKTt2YXIgST1uZXcgZChxLmV4dGVuZCh7fSxTLHtpZDppLGNvbXBvbmVudERhdGE6b30pKTtxLnNhcC5sb2cuaW5mbygiQ29tcG9uZW50IGluc3RhbmNlIElkID0gIitJLmdldElkKCkpO3JldHVybiBJfX07c2FwLnVpLmNvbXBvbmVudC5sb2FkPWZ1bmN0aW9uKGMpe3ZhciBuPWMubmFtZSx1PWMudXJsLHM9bisiLkNvbXBvbmVudCIscD1zKyItcHJlbG9hZCIsUD1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRDb21wb25lbnRQcmVsb2FkKCk7aWYoIW4pe3Rocm93IG5ldyBFcnJvcigiVGhlIG5hbWUgb2YgdGhlIGNvbXBvbmVudCBpcyB1bmRlZmluZWQuIil9aWYodSl7cS5zYXAucmVnaXN0ZXJNb2R1bGVQYXRoKG4sdSl9aWYoUD09PSJzeW5jInx8UD09PSJhc3luYyIpe3RyeXtpZighcS5zYXAuaXNEZWNsYXJlZChzLHRydWUpKXtxLnNhcC5yZXF1aXJlKHApfX1jYXRjaChlKXtxLnNhcC5sb2cud2FybmluZygiY291bGRuJ3QgcHJlbG9hZCBjb21wb25lbnQgZnJvbSAiK3ArIjogIisoKGUmJmUubWVzc2FnZSl8fGUpKX19cS5zYXAucmVxdWlyZShzKTt2YXIgbz1xLnNhcC5nZXRPYmplY3Qocyk7cmV0dXJuIG99O3JldHVybiBifSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuQ29udHJvbCcpKXsNCi8qIQogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkNvbnRyb2wnKTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5DdXN0b21TdHlsZUNsYXNzU3VwcG9ydCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkN1c3RvbVN0eWxlQ2xhc3NTdXBwb3J0Jyk7aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuRWxlbWVudCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkVsZW1lbnQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9FbGVtZW50IixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL2Jhc2UvTWFuYWdlZE9iamVjdCcsJy4vQ29yZScsJy4vRWxlbWVudE1ldGFkYXRhJywnc2FwL3VpL21vZGVsL1NpbXBsZVR5cGUnLCdqcXVlcnkuc2FwLnN0cmluZ3MnXSxmdW5jdGlvbihxLE0sQyxFLFMpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1NLmV4dGVuZCgic2FwLnVpLmNvcmUuRWxlbWVudCIse21ldGFkYXRhOntzdGVyZW90eXBlOiJlbGVtZW50IiwiYWJzdHJhY3QiOnRydWUscHVibGljTWV0aG9kczpbImdldElkIiwiZ2V0TWV0YWRhdGEiLCJnZXRUb29sdGlwX0FzU3RyaW5nIiwiZ2V0VG9vbHRpcF9UZXh0IiwiZ2V0TW9kZWwiLCJzZXRNb2RlbCIsImhhc01vZGVsIiwiYmluZEVsZW1lbnQiLCJ1bmJpbmRFbGVtZW50IiwiZ2V0RWxlbWVudEJpbmRpbmciLCJwcm9wIiwiZ2V0TGF5b3V0RGF0YSIsInNldExheW91dERhdGEiXSxsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7fSxhZ2dyZWdhdGlvbnM6e3Rvb2x0aXA6e25hbWU6InRvb2x0aXAiLHR5cGU6InNhcC51aS5jb3JlLlRvb2x0aXBCYXNlIixhbHRUeXBlczpbInN0cmluZyJdLG11bHRpcGxlOmZhbHNlfSxjdXN0b21EYXRhOntuYW1lOiJjdXN0b21EYXRhIix0eXBlOiJzYXAudWkuY29yZS5DdXN0b21EYXRhIixtdWx0aXBsZTp0cnVlLHNpbmd1bGFyTmFtZToiY3VzdG9tRGF0YSJ9LGxheW91dERhdGE6e25hbWU6ImxheW91dERhdGEiLHR5cGU6InNhcC51aS5jb3JlLkxheW91dERhdGEiLG11bHRpcGxlOmZhbHNlLHNpbmd1bGFyTmFtZToibGF5b3V0RGF0YSJ9LGRlcGVuZGVudHM6e25hbWU6ImRlcGVuZGVudHMiLHR5cGU6InNhcC51aS5jb3JlLkNvbnRyb2wiLG11bHRpcGxlOnRydWV9fSxhc3NvY2lhdGlvbnM6e30sZXZlbnRzOnt9fSxjb25zdHJ1Y3RvcjpmdW5jdGlvbihpLHMpe00uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxyZW5kZXJlcjpudWxsfSxFKTthLmRlZmluZUNsYXNzPWZ1bmN0aW9uKGMscyxtKXtyZXR1cm4gc2FwLnVpLmJhc2UuT2JqZWN0LmRlZmluZUNsYXNzKGMscyxtfHxFKX07YS5wcm90b3R5cGUuZ2V0SW50ZXJmYWNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLl9oYW5kbGVFdmVudD1mdW5jdGlvbihlKXt2YXIgaD0ib24iK2UudHlwZTt0aGlzLl9jYWxsRXZlbnRIYW5kbGVzKHRoaXMuYUJlZm9yZURlbGVnYXRlcyxoLGUsdHJ1ZSk7dGhpcy5fY2FsbEV2ZW50SGFuZGxlcyhbdGhpc10saCxlKTt0aGlzLl9jYWxsRXZlbnRIYW5kbGVzKHRoaXMuYURlbGVnYXRlcyxoLGUsdHJ1ZSl9O2EucHJvdG90eXBlLl9jYWxsRXZlbnRIYW5kbGVzPWZ1bmN0aW9uKGgsSCxlLGQpe2lmKGgubGVuZ3RoPjApe2Zvcih2YXIgaT0wO2k8aC5sZW5ndGg7aSsrKXtpZihlLmlzSW1tZWRpYXRlSGFuZGxlclByb3BhZ2F0aW9uU3RvcHBlZCgpKXticmVha312YXIgbz1kP2hbaV0ub0RlbGVnYXRlOmhbaV07dmFyIHQ9KGQmJmhbaV0udlRoaXMpP2hbaV0udlRoaXM6bztpZih0PT09dHJ1ZSl7dD10aGlzfWlmKG9bSF0pe29bSF0uY2FsbCh0LGUpfX19fTthLmNyZWF0ZT1mdW5jdGlvbihkLGspe2lmKCFkfHxkIGluc3RhbmNlb2YgYXx8dHlwZW9mIGQhPT0ib2JqZWN0Inx8ZCBpbnN0YW5jZW9mIFN0cmluZyl7cmV0dXJuIGR9ZnVuY3Rpb24gZyh0KXtpZih0eXBlb2YgdD09PSJmdW5jdGlvbiIpe3JldHVybiB0fWlmKHR5cGVvZiB0PT09InN0cmluZyIpe3JldHVybiBxLnNhcC5nZXRPYmplY3QodCl9fXZhciBjPWcoZC5UeXBlKXx8ZyhrJiZrLnR5cGUpO2lmKHR5cGVvZiBjPT09ImZ1bmN0aW9uIil7cmV0dXJuIG5ldyBjKGQpfXZhciBtPSJEb24ndCBrbm93IGhvdyB0byBjcmVhdGUgYW4gRWxlbWVudCBmcm9tICIrZCsiICgiKyh0eXBlb2YgZCkrIikiO3Euc2FwLmxvZy5mYXRhbChtKTt0aHJvdyBuZXcgRXJyb3IobSl9O2EucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7aWYodGhpcy5nZXRNZXRhZGF0YSl7cmV0dXJuIkVsZW1lbnQgIit0aGlzLmdldE1ldGFkYXRhKCkuZ2V0TmFtZSgpKyIjIit0aGlzLnNJZH1lbHNle3JldHVybiJFbGVtZW50IHt1bmtub3duIGNsYXNzfSMiK3RoaXMuc0lkfX07YS5wcm90b3R5cGUuZ2V0RG9tUmVmPWZ1bmN0aW9uKHMpe3JldHVybiBxLnNhcC5kb21CeUlkKHM/dGhpcy5nZXRJZCgpKyItIitzOnRoaXMuZ2V0SWQoKSl9O2EucHJvdG90eXBlLiQ9ZnVuY3Rpb24ocyl7cmV0dXJuIHEodGhpcy5nZXREb21SZWYocykpfTthLnByb3RvdHlwZS5pc0FjdGl2ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9QYXJlbnQmJnRoaXMub1BhcmVudC5pc0FjdGl2ZSgpfTthLnByb3RvdHlwZS5wcm9wPWZ1bmN0aW9uKHAsdil7dmFyIFA9dGhpcy5nZXRNZXRhZGF0YSgpLmdldEpTT05LZXlzKClbcF07aWYoUCl7aWYoYXJndW1lbnRzLmxlbmd0aD09MSl7cmV0dXJuIHRoaXNbUC5fc0dldHRlcl0oKX1lbHNle3RoaXNbUC5fc011dGF0b3JdKHYpO3JldHVybiB0aGlzfX19O2EucHJvdG90eXBlLmluc2VydERlcGVuZGVudD1mdW5jdGlvbihjLGkpe3JldHVybiB0aGlzLmluc2VydEFnZ3JlZ2F0aW9uKCJkZXBlbmRlbnRzIixjLGksdHJ1ZSl9O2EucHJvdG90eXBlLmFkZERlcGVuZGVudD1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5hZGRBZ2dyZWdhdGlvbigiZGVwZW5kZW50cyIsYyx0cnVlKX07YS5wcm90b3R5cGUucmVtb3ZlRGVwZW5kZW50PWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLnJlbW92ZUFnZ3JlZ2F0aW9uKCJkZXBlbmRlbnRzIixjLHRydWUpfTthLnByb3RvdHlwZS5yZW1vdmVBbGxEZXBlbmRlbnRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVtb3ZlQWxsQWdncmVnYXRpb24oImRlcGVuZGVudHMiLHRydWUpfTthLnByb3RvdHlwZS5kZXN0cm95RGVwZW5kZW50cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRlc3Ryb3lBZ2dyZWdhdGlvbigiZGVwZW5kZW50cyIsdHJ1ZSl9O2EucHJvdG90eXBlLnJlcmVuZGVyPWZ1bmN0aW9uKCl7aWYodGhpcy5vUGFyZW50KXt0aGlzLm9QYXJlbnQucmVyZW5kZXIoKX19O2EucHJvdG90eXBlLmdldFVJQXJlYT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9QYXJlbnQ/dGhpcy5vUGFyZW50LmdldFVJQXJlYSgpOm51bGx9O2EucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24ocyl7TS5wcm90b3R5cGUuZGVzdHJveS5jYWxsKHRoaXMscyk7dGhpcy4kKCkucmVtb3ZlKCl9O2EucHJvdG90eXBlLmZpcmVFdmVudD1mdW5jdGlvbihlLHApe3ZhciBBPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpO0FbMV09cD1wfHx7fTtwLmlkPXAuaWR8fHRoaXMuZ2V0SWQoKTtyZXR1cm4gc2FwLnVpLmJhc2UuRXZlbnRQcm92aWRlci5wcm90b3R5cGUuZmlyZUV2ZW50LmFwcGx5KHRoaXMsQSl9O2EucHJvdG90eXBlLmFkZERlbGVnYXRlPWZ1bmN0aW9uKGQsYyx0LGIpe3RoaXMucmVtb3ZlRGVsZWdhdGUoZCk7aWYodHlwZW9mIGM9PT0ib2JqZWN0Iil7Yj10O3Q9YztjPWZhbHNlfWlmKHR5cGVvZiB0PT09ImJvb2xlYW4iKXtiPXQ7dD11bmRlZmluZWR9KGM/dGhpcy5hQmVmb3JlRGVsZWdhdGVzOnRoaXMuYURlbGVnYXRlcykucHVzaCh7b0RlbGVnYXRlOmQsYkNsb25lOiEhYix2VGhpczooKHQ9PT10aGlzKT90cnVlOnQpfSk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLnJlbW92ZURlbGVnYXRlPWZ1bmN0aW9uKGQpe2Zvcih2YXIgaT0wO2k8dGhpcy5hRGVsZWdhdGVzLmxlbmd0aDtpKyspe2lmKHRoaXMuYURlbGVnYXRlc1tpXS5vRGVsZWdhdGU9PWQpe3RoaXMuYURlbGVnYXRlcy5zcGxpY2UoaSwxKX19Zm9yKHZhciBpPTA7aTx0aGlzLmFCZWZvcmVEZWxlZ2F0ZXMubGVuZ3RoO2krKyl7aWYodGhpcy5hQmVmb3JlRGVsZWdhdGVzW2ldLm9EZWxlZ2F0ZT09ZCl7dGhpcy5hQmVmb3JlRGVsZWdhdGVzLnNwbGljZShpLDEpfX1yZXR1cm4gdGhpc307YS5wcm90b3R5cGUuYWRkRXZlbnREZWxlZ2F0ZT1mdW5jdGlvbihkLHQpe3JldHVybiB0aGlzLmFkZERlbGVnYXRlKGQsZmFsc2UsdCx0cnVlKX07YS5wcm90b3R5cGUucmVtb3ZlRXZlbnREZWxlZ2F0ZT1mdW5jdGlvbihkKXtyZXR1cm4gdGhpcy5yZW1vdmVEZWxlZ2F0ZShkKX07YS5wcm90b3R5cGUuZ2V0Rm9jdXNEb21SZWY9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXREb21SZWYoKXx8bnVsbH07YS5wcm90b3R5cGUuZm9jdXM9ZnVuY3Rpb24oKXt2YXIgZj10aGlzLmdldEZvY3VzRG9tUmVmKCk7aWYoZil7dHJ5e2YuZm9jdXMoKX1jYXRjaChlKXt2YXIgaT1mLmlkPyIgKGlkOiAiK2YuaWQrIikiOiIgIjtxLnNhcC5sb2cud2FybmluZygiRE9NIGVsZW1lbnQiK2krIiBpbiAiK3RoaXMudG9TdHJpbmcoKSsiIHdoaWNoIHNob3VsZCBiZSBmb2N1c2VkIGNhbm5vdCBiZSBmb2N1c2VkOiAiK2UubWVzc2FnZSl9fX07YS5wcm90b3R5cGUuZ2V0Rm9jdXNJbmZvPWZ1bmN0aW9uKCl7cmV0dXJue2lkOnRoaXMuZ2V0SWQoKX19O2EucHJvdG90eXBlLmFwcGx5Rm9jdXNJbmZvPWZ1bmN0aW9uKGYpe3RoaXMuZm9jdXMoKTtyZXR1cm4gdGhpc307YS5wcm90b3R5cGUuX3JlZnJlc2hUb29sdGlwQmFzZURlbGVnYXRlPWZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMuZ2V0VG9vbHRpcCgpO2lmKG8gaW5zdGFuY2VvZiBzYXAudWkuY29yZS5Ub29sdGlwQmFzZSl7dGhpcy5yZW1vdmVEZWxlZ2F0ZShvKX1pZih0IGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Upe3QuX2N1cnJlbnRDb250cm9sPXRoaXM7dGhpcy5hZGREZWxlZ2F0ZSh0KX19O2EucHJvdG90eXBlLnNldFRvb2x0aXA9ZnVuY3Rpb24odCl7dGhpcy5fcmVmcmVzaFRvb2x0aXBCYXNlRGVsZWdhdGUodCk7dGhpcy5zZXRBZ2dyZWdhdGlvbigidG9vbHRpcCIsdCk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmdldFRvb2x0aXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRBZ2dyZWdhdGlvbigidG9vbHRpcCIpfTthLnJ1bldpdGhQcmVwcm9jZXNzb3JzPU0ucnVuV2l0aFByZXByb2Nlc3NvcnM7YS5wcm90b3R5cGUuZ2V0VG9vbHRpcF9Bc1N0cmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0VG9vbHRpcCgpO2lmKHR5cGVvZiB0PT09InN0cmluZyJ8fHQgaW5zdGFuY2VvZiBTdHJpbmcpe3JldHVybiB0fXJldHVybiB1bmRlZmluZWR9O2EucHJvdG90eXBlLmdldFRvb2x0aXBfVGV4dD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0VG9vbHRpcCgpO2lmKHQmJnR5cGVvZiB0LmdldFRleHQ9PT0iZnVuY3Rpb24iKXtyZXR1cm4gdC5nZXRUZXh0KCl9cmV0dXJuIHR9OyhmdW5jdGlvbigpe3ZhciBnPWZ1bmN0aW9uKGUsayl7dmFyIGQ9ZS5nZXRBZ2dyZWdhdGlvbigiY3VzdG9tRGF0YSIpO2lmKGQpe2Zvcih2YXIgaT0wO2k8ZC5sZW5ndGg7aSsrKXtpZihkW2ldLmdldEtleSgpPT1rKXtyZXR1cm4gZFtpXX19fXJldHVybiBudWxsfTt2YXIgcz1mdW5jdGlvbihlLGssdix3KXtpZih2PT09bnVsbCl7dmFyIGQ9ZyhlLGspO2lmKCFkKXtyZXR1cm59dmFyIGI9ZS5nZXRBZ2dyZWdhdGlvbigiY3VzdG9tRGF0YSIpLmxlbmd0aDtpZihiPT0xKXtlLmRlc3Ryb3lBZ2dyZWdhdGlvbigiY3VzdG9tRGF0YSIsdHJ1ZSl9ZWxzZXtlLnJlbW92ZUFnZ3JlZ2F0aW9uKCJjdXN0b21EYXRhIixkLHRydWUpO2QuZGVzdHJveSgpfX1lbHNle3ZhciBkPWcoZSxrKTtpZihkKXtkLnNldFZhbHVlKHYpO2Quc2V0V3JpdGVUb0RvbSh3KX1lbHNle3ZhciBkPW5ldyBzYXAudWkuY29yZS5DdXN0b21EYXRhKHtrZXk6ayx2YWx1ZTp2LHdyaXRlVG9Eb206d30pO2UuYWRkQWdncmVnYXRpb24oImN1c3RvbURhdGEiLGQsdHJ1ZSl9fX07YS5wcm90b3R5cGUuZGF0YT1mdW5jdGlvbigpe3ZhciBiPWFyZ3VtZW50cy5sZW5ndGg7aWYoYj09MCl7dmFyIGQ9dGhpcy5nZXRBZ2dyZWdhdGlvbigiY3VzdG9tRGF0YSIpLHI9e307aWYoZCl7Zm9yKHZhciBpPTA7aTxkLmxlbmd0aDtpKyspe3JbZFtpXS5nZXRLZXkoKV09ZFtpXS5nZXRWYWx1ZSgpfX1yZXR1cm4gcn1lbHNlIGlmKGI9PTEpe3ZhciBjPWFyZ3VtZW50c1swXTtpZihjPT09bnVsbCl7dGhpcy5kZXN0cm95QWdncmVnYXRpb24oImN1c3RvbURhdGEiLHRydWUpO3JldHVybiB0aGlzfWVsc2UgaWYodHlwZW9mIGM9PSJzdHJpbmciKXt2YXIgZT1nKHRoaXMsYyk7cmV0dXJuIGU/ZS5nZXRWYWx1ZSgpOm51bGx9ZWxzZSBpZih0eXBlb2YgYz09Im9iamVjdCIpe2Zvcih2YXIgayBpbiBjKXtzKHRoaXMsayxjW2tdKX1yZXR1cm4gdGhpc31lbHNle3Rocm93IG5ldyBFcnJvcigiV2hlbiBkYXRhKCkgaXMgY2FsbGVkIHdpdGggb25lIGFyZ3VtZW50LCB0aGlzIGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcsIGFuIG9iamVjdCBvciBudWxsLCBidXQgaXMgIisodHlwZW9mIGMpKyI6IitjKyIgKG9uIFVJIEVsZW1lbnQgd2l0aCBJRCAnIit0aGlzLmdldElkKCkrIicpIil9fWVsc2UgaWYoYj09Mil7cyh0aGlzLGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0pO3JldHVybiB0aGlzfWVsc2UgaWYoYj09Myl7cyh0aGlzLGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdKTtyZXR1cm4gdGhpc31lbHNle3Rocm93IG5ldyBFcnJvcigiZGF0YSgpIG1heSBvbmx5IGJlIGNhbGxlZCB3aXRoIDAtMyBhcmd1bWVudHMgKG9uIFVJIEVsZW1lbnQgd2l0aCBJRCAnIit0aGlzLmdldElkKCkrIicpIil9fX0pKCk7YS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oSSxsKXt2YXIgYz1NLnByb3RvdHlwZS5jbG9uZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7Zm9yKHZhciBpPTA7aTx0aGlzLmFEZWxlZ2F0ZXMubGVuZ3RoO2krKyl7aWYodGhpcy5hRGVsZWdhdGVzW2ldLmJDbG9uZSl7Yy5hRGVsZWdhdGVzLnB1c2godGhpcy5hRGVsZWdhdGVzW2ldKX19Zm9yKHZhciBpPTA7aTx0aGlzLmFCZWZvcmVEZWxlZ2F0ZXMubGVuZ3RoO2krKyl7aWYodGhpcy5hQmVmb3JlRGVsZWdhdGVzW2ldLmJDbG9uZSl7Yy5hQmVmb3JlRGVsZWdhdGVzLnB1c2godGhpcy5hQmVmb3JlRGVsZWdhdGVzW2ldKX19cmV0dXJuIGN9O2EucHJvdG90eXBlLmZpbmRFbGVtZW50cz1mdW5jdGlvbihyKXt2YXIgYz1NLnByb3RvdHlwZS5maW5kQWdncmVnYXRlZE9iamVjdHMuY2FsbCh0aGlzLHIpO3JldHVybiBjfTthLnByb3RvdHlwZS5zZXRMYXlvdXREYXRhPWZ1bmN0aW9uKGwpe3RoaXMuc2V0QWdncmVnYXRpb24oImxheW91dERhdGEiLGwsdHJ1ZSk7dmFyIEw9dGhpcy5nZXRQYXJlbnQoKTtpZihMKXt2YXIgZT1xLkV2ZW50KCJMYXlvdXREYXRhQ2hhbmdlIik7ZS5zcmNDb250cm9sPXRoaXM7TC5faGFuZGxlRXZlbnQoZSl9cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLmJpbmRFbGVtZW50PWZ1bmN0aW9uKHAsUCl7cmV0dXJuIHRoaXMuYmluZE9iamVjdChwLFApfTthLnByb3RvdHlwZS51bmJpbmRFbGVtZW50PWZ1bmN0aW9uKG0pe3JldHVybiB0aGlzLnVuYmluZE9iamVjdChtKX07YS5wcm90b3R5cGUuZ2V0RWxlbWVudEJpbmRpbmc9ZnVuY3Rpb24obSl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0QmluZGluZyhtKX07cmV0dXJuIGF9LHRydWUpfTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9DdXN0b21TdHlsZUNsYXNzU3VwcG9ydCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vRWxlbWVudCddLGZ1bmN0aW9uKHEsRSl7InVzZSBzdHJpY3QiO3ZhciBDPWZ1bmN0aW9uKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgRSkpe3JldHVybn12YXIgbz10aGlzLmNsb25lO3RoaXMuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYz1vLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZih0aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMpe2MuYUN1c3RvbVN0eWxlQ2xhc3Nlcz10aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMuc2xpY2UoKX1yZXR1cm4gY307dGhpcy5hZGRTdHlsZUNsYXNzPWZ1bmN0aW9uKHMsUyl7aWYoIXRoaXMuYUN1c3RvbVN0eWxlQ2xhc3Nlcyl7dGhpcy5hQ3VzdG9tU3R5bGVDbGFzc2VzPVtdfWlmKHMpe2lmKHMuaW5kZXhPZigiXCIiKT4tMSl7cmV0dXJuIHRoaXN9aWYocy5pbmRleE9mKCInIik+LTEpe3JldHVybiB0aGlzfWZvcih2YXIgaT10aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMubGVuZ3RoLTE7aT49MDtpLS0pe2lmKHRoaXMuYUN1c3RvbVN0eWxlQ2xhc3Nlc1tpXT09cyl7cmV0dXJuIHRoaXN9fXRoaXMuYUN1c3RvbVN0eWxlQ2xhc3Nlcy5wdXNoKHMpO3ZhciByPXRoaXMuZ2V0RG9tUmVmKCk7aWYocil7cShyKS5hZGRDbGFzcyhzKX1lbHNlIGlmKFM9PT1mYWxzZSl7dGhpcy5pbnZhbGlkYXRlKCl9fXJldHVybiB0aGlzfTt0aGlzLnJlbW92ZVN0eWxlQ2xhc3M9ZnVuY3Rpb24ocyxTKXtpZihzJiZ0aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMpe2Zvcih2YXIgaT10aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMubGVuZ3RoLTE7aT49MDtpLS0pe2lmKHRoaXMuYUN1c3RvbVN0eWxlQ2xhc3Nlc1tpXT09cyl7dGhpcy5hQ3VzdG9tU3R5bGVDbGFzc2VzLnNwbGljZShpLDEpO3ZhciByPXRoaXMuZ2V0RG9tUmVmKCk7aWYocil7cShyKS5yZW1vdmVDbGFzcyhzKX1lbHNlIGlmKFM9PT1mYWxzZSl7dGhpcy5pbnZhbGlkYXRlKCl9fX19cmV0dXJuIHRoaXN9O3RoaXMudG9nZ2xlU3R5bGVDbGFzcz1mdW5jdGlvbihzLGEpe2lmKHMmJnR5cGVvZiBzPT09InN0cmluZyIpe2lmKGE9PT10cnVlKXt0aGlzLmFkZFN0eWxlQ2xhc3Mocyl9ZWxzZSBpZihhPT09ZmFsc2Upe3RoaXMucmVtb3ZlU3R5bGVDbGFzcyhzKX1lbHNlIGlmKGE9PT11bmRlZmluZWQpe3RoaXMuaGFzU3R5bGVDbGFzcyhzKT90aGlzLnJlbW92ZVN0eWxlQ2xhc3Mocyk6dGhpcy5hZGRTdHlsZUNsYXNzKHMpfWVsc2V7cS5zYXAubG9nLndhcm5pbmcodGhpcy50b1N0cmluZygpKyItIHRvZ2dsZVN0eWxlQ2xhc3MoKTogYkFkZCBzaG91bGQgYmUgYSBib29sZWFuIG9yIHVuZGVmaW5lZCwgYnV0IGlzICciK2ErIiciKX19cmV0dXJuIHRoaXN9O3RoaXMuaGFzU3R5bGVDbGFzcz1mdW5jdGlvbihzKXtpZihzJiZ0aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMpe2Zvcih2YXIgaT10aGlzLmFDdXN0b21TdHlsZUNsYXNzZXMubGVuZ3RoLTE7aT49MDtpLS0pe2lmKHRoaXMuYUN1c3RvbVN0eWxlQ2xhc3Nlc1tpXT09cyl7cmV0dXJuIHRydWV9fX1yZXR1cm4gZmFsc2V9O3RoaXMuZ2V0TWV0YWRhdGEoKS5hZGRQdWJsaWNNZXRob2RzKFsiYWRkU3R5bGVDbGFzcyIsInJlbW92ZVN0eWxlQ2xhc3MiLCJ0b2dnbGVTdHlsZUNsYXNzIiwiaGFzU3R5bGVDbGFzcyJdKX07cmV0dXJuIEN9LHRydWUpfTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Db250cm9sIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9DdXN0b21TdHlsZUNsYXNzU3VwcG9ydCcsJy4vRWxlbWVudCddLGZ1bmN0aW9uKHEsQyxFKXsidXNlIHN0cmljdCI7dmFyIGE9RS5leHRlbmQoInNhcC51aS5jb3JlLkNvbnRyb2wiLHttZXRhZGF0YTp7c3RlcmVvdHlwZToiY29udHJvbCIsImFic3RyYWN0Ijp0cnVlLHB1YmxpY01ldGhvZHM6WyJwbGFjZUF0IiwiYXR0YWNoQnJvd3NlckV2ZW50IiwiZGV0YWNoQnJvd3NlckV2ZW50Il0sbGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJidXN5Ijp7dHlwZToiYm9vbGVhbiIsZGVmYXVsdFZhbHVlOmZhbHNlfSwiYnVzeUluZGljYXRvckRlbGF5Ijp7dHlwZToiaW50IixkZWZhdWx0VmFsdWU6MTAwMH19LGFnZ3JlZ2F0aW9uczp7fSxhc3NvY2lhdGlvbnM6e30sZXZlbnRzOnt9fSxjb25zdHJ1Y3RvcjpmdW5jdGlvbihpLHMpe3RoaXMuYkFsbG93VGV4dFNlbGVjdGlvbj10cnVlO0UuYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuYk91dHB1dD10aGlzLmdldERvbVJlZigpIT1udWxsO2lmKHRoaXMuX3NhcFVpQ29yZUxvY2FsQnVzeV9pbml0QnVzeUluZGljYXRvcil7dGhpcy5fc2FwVWlDb3JlTG9jYWxCdXN5X2luaXRCdXN5SW5kaWNhdG9yKCl9fSxyZW5kZXJlcjpudWxsfSk7YS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYz1FLnByb3RvdHlwZS5jbG9uZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYodGhpcy5hQmluZFBhcmFtZXRlcnMpe2Zvcih2YXIgaT0wLGw9dGhpcy5hQmluZFBhcmFtZXRlcnMubGVuZ3RoO2k8bDtpKyspe3ZhciBwPXRoaXMuYUJpbmRQYXJhbWV0ZXJzW2ldO2MuYXR0YWNoQnJvd3NlckV2ZW50KHAuc0V2ZW50VHlwZSxwLmZuSGFuZGxlcixwLm9MaXN0ZW5lciE9PXRoaXM/cC5vTGlzdGVuZXI6dW5kZWZpbmVkKX19Yy5iQWxsb3dUZXh0U2VsZWN0aW9uPXRoaXMuYkFsbG93VGV4dFNlbGVjdGlvbjtyZXR1cm4gY307Qy5hcHBseShhLnByb3RvdHlwZSk7YS5wcm90b3R5cGUuaXNBY3RpdmU9ZnVuY3Rpb24oKXtyZXR1cm4gcS5zYXAuZG9tQnlJZCh0aGlzLnNJZCkhPW51bGx9O2EucHJvdG90eXBlLmludmFsaWRhdGU9ZnVuY3Rpb24obyl7dmFyIHU7aWYodGhpcy5iT3V0cHV0JiYodT10aGlzLmdldFVJQXJlYSgpKSl7dS5hZGRJbnZhbGlkYXRlZENvbnRyb2wodGhpcyl9ZWxzZXt2YXIgcD10aGlzLmdldFBhcmVudCgpO2lmKHAmJih0aGlzLmJPdXRwdXR8fCEodGhpcy5nZXRWaXNpYmxlJiZ0aGlzLmdldFZpc2libGUoKT09PWZhbHNlKSkpe3AuaW52YWxpZGF0ZSh0aGlzKX19fTthLnByb3RvdHlwZS5yZXJlbmRlcj1mdW5jdGlvbigpe3NhcC51aS5jb3JlLlVJQXJlYS5yZXJlbmRlckNvbnRyb2wodGhpcyl9O2EucHJvdG90eXBlLmFsbG93VGV4dFNlbGVjdGlvbj1mdW5jdGlvbihBKXt0aGlzLmJBbGxvd1RleHRTZWxlY3Rpb249QTtyZXR1cm4gdGhpc307YS5wcm90b3R5cGUuYXR0YWNoQnJvd3NlckV2ZW50PWZ1bmN0aW9uKGUsaCxsKXtpZihlJiYodHlwZW9mKGUpPT09InN0cmluZyIpKXtpZihoJiZ0eXBlb2YoaCk9PT0iZnVuY3Rpb24iKXtpZighdGhpcy5hQmluZFBhcmFtZXRlcnMpe3RoaXMuYUJpbmRQYXJhbWV0ZXJzPVtdfWw9bHx8dGhpczt2YXIgcD1mdW5jdGlvbigpe2guYXBwbHkobCxhcmd1bWVudHMpfTt0aGlzLmFCaW5kUGFyYW1ldGVycy5wdXNoKHtzRXZlbnRUeXBlOmUsZm5IYW5kbGVyOmgsb0xpc3RlbmVyOmwsZm5Qcm94eTpwfSk7dGhpcy4kKCkuYmluZChlLHApfX1yZXR1cm4gdGhpc307YS5wcm90b3R5cGUuZGV0YWNoQnJvd3NlckV2ZW50PWZ1bmN0aW9uKGUsaCxsKXtpZihlJiYodHlwZW9mKGUpPT09InN0cmluZyIpKXtpZihoJiZ0eXBlb2YoaCk9PT0iZnVuY3Rpb24iKXt2YXIgJD10aGlzLiQoKSxpLHA7bD1sfHx0aGlzO2lmKHRoaXMuYUJpbmRQYXJhbWV0ZXJzKXtmb3IoaT10aGlzLmFCaW5kUGFyYW1ldGVycy5sZW5ndGgtMTtpPj0wO2ktLSl7cD10aGlzLmFCaW5kUGFyYW1ldGVyc1tpXTtpZihwLnNFdmVudFR5cGU9PT1lJiZwLmZuSGFuZGxlcj09PWgmJnAub0xpc3RlbmVyPT09bCl7dGhpcy5hQmluZFBhcmFtZXRlcnMuc3BsaWNlKGksMSk7JC51bmJpbmQoZSxwLmZuUHJveHkpfX19fX1yZXR1cm4gdGhpc307YS5wcm90b3R5cGUuZ2V0UmVuZGVyZXI9ZnVuY3Rpb24oKXtyZXR1cm4gc2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlci5nZXRSZW5kZXJlcih0aGlzKX07YS5wcm90b3R5cGUucGxhY2VBdD1mdW5jdGlvbihyLHApe3ZhciBjPXNhcC51aS5nZXRDb3JlKCk7aWYoYy5pc0luaXRpYWxpemVkKCkpe3ZhciBvPXI7aWYodHlwZW9mIG89PT0ic3RyaW5nIil7bz1jLmJ5SWQocil9dmFyIGk9ZmFsc2U7aWYoIShvIGluc3RhbmNlb2YgRSkpe289Yy5jcmVhdGVVSUFyZWEocik7aT10cnVlfWlmKCFvKXtyZXR1cm59aWYoIWkpe3ZhciBiPW8uZ2V0TWV0YWRhdGEoKS5nZXRBbGxBZ2dyZWdhdGlvbnMoKVsiY29udGVudCJdO3ZhciBkPXRydWU7aWYoYil7aWYoIWIubXVsdGlwbGV8fGIudHlwZSE9InNhcC51aS5jb3JlLkNvbnRyb2wiKXtkPWZhbHNlfX1lbHNle2lmKCFvLmFkZENvbnRlbnR8fCFvLmluc2VydENvbnRlbnR8fCFvLnJlbW92ZUFsbENvbnRlbnQpe2Q9ZmFsc2V9fWlmKCFkKXtxLnNhcC5sb2cud2FybmluZygicGxhY2VBdCBjYW5ub3QgYmUgcHJvY2Vzc2VkIGJlY2F1c2UgY29udGFpbmVyICIrbysiIGRvZXMgbm90IGhhdmUgYW4gYWdncmVnYXRpb24gJ2NvbnRlbnQnLiIpO3JldHVybn19aWYodHlwZW9mIHA9PT0ibnVtYmVyIil7by5pbnNlcnRDb250ZW50KHRoaXMscCl9ZWxzZXtwPXB8fCJsYXN0Ijtzd2l0Y2gocCl7Y2FzZSJsYXN0IjpvLmFkZENvbnRlbnQodGhpcyk7YnJlYWs7Y2FzZSJmaXJzdCI6by5pbnNlcnRDb250ZW50KHRoaXMsMCk7YnJlYWs7Y2FzZSJvbmx5IjpvLnJlbW92ZUFsbENvbnRlbnQoKTtvLmFkZENvbnRlbnQodGhpcyk7YnJlYWs7ZGVmYXVsdDpxLnNhcC5sb2cud2FybmluZygiUG9zaXRpb24gIitwKyIgaXMgbm90IHN1cHBvcnRlZCBmb3IgZnVuY3Rpb24gcGxhY2VBdC4iKX19fWVsc2V7dmFyIHQ9dGhpcztjLmF0dGFjaEluaXRFdmVudChmdW5jdGlvbigpe3QucGxhY2VBdChyLHApfSl9cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLm9uc2VsZWN0c3RhcnQ9ZnVuY3Rpb24oYil7aWYoIXRoaXMuYkFsbG93VGV4dFNlbGVjdGlvbil7Yi5wcmV2ZW50RGVmYXVsdCgpO2Iuc3RvcFByb3BhZ2F0aW9uKCl9fTthLnByb3RvdHlwZS5nZXRJZEZvckxhYmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0SWQoKX07YS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbihzKXt0aGlzLl9jbGVhbnVwQnVzeUluZGljYXRvcigpO3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3RlckFsbEZvckNvbnRyb2wodGhpcy5nZXRJZCgpKTtFLnByb3RvdHlwZS5kZXN0cm95LmNhbGwodGhpcyxzKX07KGZ1bmN0aW9uKCl7dmFyIHA9ImZvY3VzaW4gZm9jdXNvdXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCIsYj17b25BZnRlclJlbmRlcmluZzpmdW5jdGlvbigpe2lmKHRoaXMuZ2V0UHJvcGVydHkoImJ1c3kiKT09PXRydWUmJnRoaXMuJCgpKXtBLmFwcGx5KHRoaXMpfX19LEE9ZnVuY3Rpb24oKXt2YXIgJD10aGlzLiQoKSxGPVsiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZW51aXRlbSIsIm1ldGEiLCJwYXJhbSIsInNvdXJjZSIsInRyYWNrIiwid2JyIl07aWYodGhpcy5fYnVzeUluZGljYXRvckRlbGF5ZWRDYWxsSWQpe3Euc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5fYnVzeUluZGljYXRvckRlbGF5ZWRDYWxsSWQpO2RlbGV0ZSB0aGlzLl9idXN5SW5kaWNhdG9yRGVsYXllZENhbGxJZH12YXIgdD0kLmdldCgwKSYmJC5nZXQoMCkudGFnTmFtZTtpZih0JiZxLmluQXJyYXkodC50b0xvd2VyQ2FzZSgpLEYpPj0wKXtxLnNhcC5sb2cud2FybmluZygiQnVzeSBJbmRpY2F0b3IgY2Fubm90IGJlIHBsYWNlZCBpbiBlbGVtZW50cyB3aXRoIHRhZyAiK3QpO3JldHVybn1pZigkLmNzcygncG9zaXRpb24nKT09J3N0YXRpYycpe3RoaXMuX2J1c3lTdG9yZWRQb3NpdGlvbj0nc3RhdGljJzskLmNzcygncG9zaXRpb24nLCdyZWxhdGl2ZScpfXZhciBCPXEoJzxkaXYgY2xhc3M9InNhcFVpTG9jYWxCdXN5SW5kaWNhdG9yIj48ZGl2IGNsYXNzPSJzYXBVaUxvY2FsQnVzeUluZGljYXRvckFuaW1hdGlvbiI+PGRpdiBjbGFzcz0ic2FwVWlMb2NhbEJ1c3lJbmRpY2F0b3JCb3giPjwvZGl2PjxkaXYgY2xhc3M9InNhcFVpTG9jYWxCdXN5SW5kaWNhdG9yQm94Ij48L2Rpdj48ZGl2IGNsYXNzPSJzYXBVaUxvY2FsQnVzeUluZGljYXRvckJveCI+PC9kaXY+PC9kaXY+PC9kaXY+Jyk7Qi5hdHRyKCJpZCIsdGhpcy5nZXRJZCgpKyItYnVzeUluZGljYXRvciIpOyQuYXBwZW5kKEIpO3RoaXMuX2J1c3lEZWxheWVkQ2FsbElkPXEuc2FwLmRlbGF5ZWRDYWxsKDEyMDAsdGhpcyxmKTtoLmFwcGx5KHRoaXMsW3RydWVdKX0saD1mdW5jdGlvbihCKXtpZihCKXt2YXIgJD10aGlzLiQoKSx0PSQuZmluZCgnW3RhYmluZGV4XScpLGM9dGhpczt0aGlzLl9idXN5VGFiSW5kaWNlcz1bXTt0LmVhY2goZnVuY3Rpb24oaSxvKXt2YXIgcj1xKG8pLFQ9ci5hdHRyKCd0YWJpbmRleCcpO2lmKFQ8MClyZXR1cm4gdHJ1ZTtjLl9idXN5VGFiSW5kaWNlcy5wdXNoKHtyZWY6cix0YWJpbmRleDpUfSk7ci5hdHRyKCd0YWJpbmRleCcsLTEpO3IuYmluZChwLFApfSl9ZWxzZXtpZih0aGlzLl9idXN5VGFiSW5kaWNlcyl7cS5lYWNoKHRoaXMuX2J1c3lUYWJJbmRpY2VzLGZ1bmN0aW9uKGksbyl7by5yZWYuYXR0cigndGFiaW5kZXgnLG8udGFiaW5kZXgpO28ucmVmLnVuYmluZChwLFApfSl9dGhpcy5fYnVzeVRhYkluZGljZXM9W119fSxQPWZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKTtlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpfSxmPWZ1bmN0aW9uKCl7dmFyICQ9dGhpcy4kKCkuY2hpbGRyZW4oJy5zYXBVaUxvY2FsQnVzeUluZGljYXRvcicpLmNoaWxkcmVuKCcuc2FwVWlMb2NhbEJ1c3lJbmRpY2F0b3JBbmltYXRpb24nKTt2YXIgdD10aGlzO3QuX2J1c3lBbmltYXRpb25UaW1lcjE9c2V0VGltZW91dChmdW5jdGlvbigpeyQuY2hpbGRyZW4oIjplcSgwKSIpLmFkZENsYXNzKCdhY3RpdmUnKTskLmNoaWxkcmVuKCI6bm90KDplcSgwKSkiKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7dC5fYnVzeUFuaW1hdGlvblRpbWVyMj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7JC5jaGlsZHJlbigiOmVxKDEpIikuYWRkQ2xhc3MoJ2FjdGl2ZScpOyQuY2hpbGRyZW4oIjpub3QoOmVxKDEpKSIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTt0Ll9idXN5QW5pbWF0aW9uVGltZXIzPXNldFRpbWVvdXQoZnVuY3Rpb24oKXskLmNoaWxkcmVuKCI6ZXEoMikiKS5hZGRDbGFzcygnYWN0aXZlJyk7JC5jaGlsZHJlbigiOm5vdCg6ZXEoMikpIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO3QuX2J1c3lBbmltYXRpb25UaW1lcjQ9c2V0VGltZW91dChmdW5jdGlvbigpeyQuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcygnYWN0aXZlJyl9LDE1MCl9LDE1MCl9LDE1MCl9LDE1MCk7dGhpcy5fYnVzeURlbGF5ZWRDYWxsSWQ9cS5zYXAuZGVsYXllZENhbGwoMTIwMCx0aGlzLGYpfTthLnByb3RvdHlwZS5zZXRCdXN5PWZ1bmN0aW9uKEIpe3ZhciAkPXRoaXMuJCgpO2lmKEI9PXRoaXMuZ2V0UHJvcGVydHkoImJ1c3kiKSl7cmV0dXJufXRoaXMuc2V0UHJvcGVydHkoImJ1c3kiLEIsdHJ1ZSk7aWYoQil7dGhpcy5hZGREZWxlZ2F0ZShiLGZhbHNlLHRoaXMpfWVsc2V7dGhpcy5yZW1vdmVEZWxlZ2F0ZShiKX1pZighdGhpcy5nZXREb21SZWYoKSl7cmV0dXJufWlmKEIpe2lmKHRoaXMuZ2V0QnVzeUluZGljYXRvckRlbGF5KCk8PTApe0EuYXBwbHkodGhpcyl9ZWxzZXt0aGlzLl9idXN5SW5kaWNhdG9yRGVsYXllZENhbGxJZD1xLnNhcC5kZWxheWVkQ2FsbCh0aGlzLmdldEJ1c3lJbmRpY2F0b3JEZWxheSgpLHRoaXMsQSl9fWVsc2V7aWYodGhpcy5fYnVzeUluZGljYXRvckRlbGF5ZWRDYWxsSWQpe3Euc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5fYnVzeUluZGljYXRvckRlbGF5ZWRDYWxsSWQpO2RlbGV0ZSB0aGlzLl9idXN5SW5kaWNhdG9yRGVsYXllZENhbGxJZH10aGlzLiQoImJ1c3lJbmRpY2F0b3IiKS5yZW1vdmUoKTtpZih0aGlzLl9idXN5U3RvcmVkUG9zaXRpb24peyQuY3NzKCdwb3NpdGlvbicsdGhpcy5fYnVzeVN0b3JlZFBvc2l0aW9uKTtkZWxldGUgdGhpcy5fYnVzeVN0b3JlZFBvc2l0aW9ufWguYXBwbHkodGhpcyxbZmFsc2VdKTtpZih0aGlzLl9idXN5RGVsYXllZENhbGxJZCl7cS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLl9idXN5RGVsYXllZENhbGxJZCk7ZGVsZXRlIHRoaXMuX2J1c3lEZWxheWVkQ2FsbElkfX19O2EucHJvdG90eXBlLmlzQnVzeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFByb3BlcnR5KCJidXN5Iil9O2EucHJvdG90eXBlLnNldEJ1c3lJbmRpY2F0b3JEZWxheT1mdW5jdGlvbihkKXt0aGlzLnNldFByb3BlcnR5KCJidXN5SW5kaWNhdG9yRGVsYXkiLGQsdHJ1ZSk7cmV0dXJuIHRoaXN9O2EucHJvdG90eXBlLl9jbGVhbnVwQnVzeUluZGljYXRvcj1mdW5jdGlvbigpe2lmKHRoaXMuX2J1c3lJbmRpY2F0b3JEZWxheWVkQ2FsbElkKXtxLnNhcC5jbGVhckRlbGF5ZWRDYWxsKHRoaXMuX2J1c3lJbmRpY2F0b3JEZWxheWVkQ2FsbElkKTtkZWxldGUgdGhpcy5fYnVzeUluZGljYXRvckRlbGF5ZWRDYWxsSWR9aWYodGhpcy5fYnVzeURlbGF5ZWRDYWxsSWQpe3Euc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5fYnVzeURlbGF5ZWRDYWxsSWQpO2RlbGV0ZSB0aGlzLl9idXN5RGVsYXllZENhbGxJZH1pZih0aGlzLl9idXN5QW5pbWF0aW9uVGltZXIxKXtjbGVhclRpbWVvdXQodGhpcy5fYnVzeUFuaW1hdGlvblRpbWVyMSk7ZGVsZXRlIHRoaXMuX2J1c3lBbmltYXRpb25UaW1lcjF9aWYodGhpcy5fYnVzeUFuaW1hdGlvblRpbWVyMil7Y2xlYXJUaW1lb3V0KHRoaXMuX2J1c3lBbmltYXRpb25UaW1lcjIpO2RlbGV0ZSB0aGlzLl9idXN5QW5pbWF0aW9uVGltZXIyfWlmKHRoaXMuX2J1c3lBbmltYXRpb25UaW1lcjMpe2NsZWFyVGltZW91dCh0aGlzLl9idXN5QW5pbWF0aW9uVGltZXIzKTtkZWxldGUgdGhpcy5fYnVzeUFuaW1hdGlvblRpbWVyM31pZih0aGlzLl9idXN5QW5pbWF0aW9uVGltZXI0KXtjbGVhclRpbWVvdXQodGhpcy5fYnVzeUFuaW1hdGlvblRpbWVyNCk7ZGVsZXRlIHRoaXMuX2J1c3lBbmltYXRpb25UaW1lcjR9fX0pKCk7cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5VSUFyZWEnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5VSUFyZWEnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9VSUFyZWEiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvYmFzZS9NYW5hZ2VkT2JqZWN0JywnLi9FbGVtZW50JywnanF1ZXJ5LnNhcC5hY3QnLCdqcXVlcnkuc2FwLnVpJ10sZnVuY3Rpb24ocSxNLEUpeyJ1c2Ugc3RyaWN0Ijt2YXIgVT1NLmV4dGVuZCgic2FwLnVpLmNvcmUuVUlBcmVhIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oYyxyKXtpZihhcmd1bWVudHMubGVuZ3RoPT09MCl7cmV0dXJufU0uYXBwbHkodGhpcyk7dGhpcy5vQ29yZT1jO3RoaXMuYkxvY2tlZD1mYWxzZTt0aGlzLmJJbml0aWFsPXRydWU7dGhpcy5hQ29udGVudFRvUmVtb3ZlPVtdO3RoaXMuYk5lZWRzUmVyZW5kZXJpbmc9ZmFsc2U7aWYociE9bnVsbCl7dGhpcy5zZXRSb290Tm9kZShyKTt0aGlzLmJOZWVkc1JlcmVuZGVyaW5nPXRoaXMuYk5lZWRzUmVyZW5kZXJpbmcmJiFxLnNhcC5kb21CeUlkKHIuaWQrIi1Jbml0Iil9dGhpcy5tSW52YWxpZGF0ZWRDb250cm9scz17fTtpZighdGhpcy5iTmVlZHNSZXJlbmRlcmluZyl7dGhpcy5vUmVuZGVyQ29udHJvbD1udWxsfWVsc2V7dGhpcy5vQ29yZS5hZGRJbnZhbGlkYXRlZFVJQXJlYSh0aGlzKX19LG1ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsic2V0Um9vdE5vZGUiLCJnZXRSb290Tm9kZSIsInNldFJvb3RDb250cm9sIiwiZ2V0Um9vdENvbnRyb2wiLCJsb2NrIiwidW5sb2NrIiwiaXNMb2NrZWQiXSxhZ2dyZWdhdGlvbnM6e2NvbnRlbnQ6e25hbWU6ImNvbnRlbnQiLHR5cGU6InNhcC51aS5jb3JlLkNvbnRyb2wiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJjb250ZW50In0sZGVwZW5kZW50czp7bmFtZToiZGVwZW5kZW50cyIsdHlwZToic2FwLnVpLmNvcmUuQ29udHJvbCIsbXVsdGlwbGU6dHJ1ZX19fX0pO1UucHJvdG90eXBlLmlzSW52YWxpZGF0ZVN1cHByZXNzZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pU3VwcHJlc3NJbnZhbGlkYXRlPjB9O1UucHJvdG90eXBlLmdldElkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub1Jvb3ROb2RlP3RoaXMub1Jvb3ROb2RlLmlkOm51bGx9O1UucHJvdG90eXBlLmdldFVJQXJlYT1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtVLnByb3RvdHlwZS5zZXRSb290Tm9kZT1mdW5jdGlvbihyKXtpZih0aGlzLm9Sb290Tm9kZT09PXIpe3JldHVybn1pZih0aGlzLm9Sb290Tm9kZSl7dGhpcy5fb25kZXRhY2goKX10aGlzLm9Sb290Tm9kZT1yO2lmKHRoaXMuZ2V0Q29udGVudCgpLmxlbmd0aD4wKXt0aGlzLmludmFsaWRhdGUoKX1pZih0aGlzLm9Sb290Tm9kZSl7dGhpcy5fb25hdHRhY2goKX19O1UucHJvdG90eXBlLmdldFJvb3ROb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub1Jvb3ROb2RlfTtVLnByb3RvdHlwZS5zZXRSb290Q29udHJvbD1mdW5jdGlvbihyKXt0aGlzLnJlbW92ZUFsbENvbnRlbnQoKTt0aGlzLmFkZENvbnRlbnQocil9O1UucHJvdG90eXBlLmdldFJvb3RDb250cm9sPWZ1bmN0aW9uKGkpe3ZhciBjPXRoaXMuZ2V0Q29udGVudCgpO2lmKGMubGVuZ3RoPjApe2lmKGk+PTAmJmk8Yy5sZW5ndGgpe3JldHVybiBjW2ldfXJldHVybiBjWzBdfXJldHVybiBudWxsfTtVLnByb3RvdHlwZS5fYWRkUmVtb3ZlZENvbnRlbnQ9ZnVuY3Rpb24oZCl7aWYodGhpcy5vUm9vdE5vZGUmJmQpe3RoaXMuYUNvbnRlbnRUb1JlbW92ZS5wdXNoKGQpfX07VS5wcm90b3R5cGUuYWRkQ29udGVudD1mdW5jdGlvbihjLF8pe3RoaXMuYWRkQWdncmVnYXRpb24oImNvbnRlbnQiLGMsXyk7aWYoXyE9PXRydWUpe3RoaXMuaW52YWxpZGF0ZSgpfXJldHVybiB0aGlzfTtVLnByb3RvdHlwZS5yZW1vdmVDb250ZW50PWZ1bmN0aW9uKGMsXyl7dmFyIEM9dGhpcy5yZW1vdmVBZ2dyZWdhdGlvbigiY29udGVudCIsYyxfKTtpZighXyl7dmFyIGQ7aWYoQyYmQy5nZXREb21SZWYpe2Q9Qy5nZXREb21SZWYoKX10aGlzLl9hZGRSZW1vdmVkQ29udGVudChkKX1yZXR1cm4gQ307VS5wcm90b3R5cGUucmVtb3ZlQWxsQ29udGVudD1mdW5jdGlvbigpe3ZhciBjPXRoaXMucmVtb3ZlQWxsQWdncmVnYXRpb24oImNvbnRlbnQiKTtmb3IodmFyIGk9MDtpPGMubGVuZ3RoO2krKyl7dmFyIGQ7dmFyIEM9Y1tpXTtpZihDJiZDLmdldERvbVJlZil7ZD1DLmdldERvbVJlZigpfXRoaXMuX2FkZFJlbW92ZWRDb250ZW50KGQpfXJldHVybiBjfTtVLnByb3RvdHlwZS5kZXN0cm95Q29udGVudD1mdW5jdGlvbigpe3ZhciBjPXRoaXMuZ2V0Q29udGVudCgpO2Zvcih2YXIgaT0wO2k8Yy5sZW5ndGg7aSsrKXt2YXIgZDt2YXIgQz1jW2ldO2lmKEMmJkMuZ2V0RG9tUmVmKXtkPUMuZ2V0RG9tUmVmKCl9dGhpcy5fYWRkUmVtb3ZlZENvbnRlbnQoZCl9dGhpcy5kZXN0cm95QWdncmVnYXRpb24oImNvbnRlbnQiKTtyZXR1cm4gdGhpc307VS5wcm90b3R5cGUubG9jaz1mdW5jdGlvbigpe3RoaXMuYkxvY2tlZD10cnVlfTtVLnByb3RvdHlwZS51bmxvY2s9ZnVuY3Rpb24oKXtpZih0aGlzLmJMb2NrZWQmJnRoaXMuYk5lZWRzUmVyZW5kZXJpbmcpe3RoaXMub0NvcmUuYWRkSW52YWxpZGF0ZWRVSUFyZWEodGhpcyl9dGhpcy5iTG9ja2VkPWZhbHNlfTtVLnByb3RvdHlwZS5pc0xvY2tlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJMb2NrZWR9O1UucHJvdG90eXBlLmdldEJpbmRpbmdDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9O1UucHJvdG90eXBlLmdldEV2ZW50aW5nUGFyZW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub0NvcmV9O1UucHJvdG90eXBlLmlzQWN0aXZlPWZ1bmN0aW9uKCl7cmV0dXJuIHEuc2FwLmRvbUJ5SWQodGhpcy5nZXRJZCgpKSE9bnVsbH07VS5wcm90b3R5cGUuaW52YWxpZGF0ZT1mdW5jdGlvbigpe3RoaXMuYWRkSW52YWxpZGF0ZWRDb250cm9sKHRoaXMpfTtVLnByb3RvdHlwZS5hZGRJbnZhbGlkYXRlZENvbnRyb2w9ZnVuY3Rpb24oYyl7aWYodGhpcy5vUmVuZGVyQ29udHJvbD09dGhpcyl7cmV0dXJufWlmKCF0aGlzLmJOZWVkc1JlcmVuZGVyaW5nKXt0aGlzLm9Db3JlLmFkZEludmFsaWRhdGVkVUlBcmVhKHRoaXMpfXZhciBpPWMuZ2V0SWQoKTtpZihjPT10aGlzKXt0aGlzLm9SZW5kZXJDb250cm9sPXRoaXM7dGhpcy5iTmVlZHNSZXJlbmRlcmluZz10cnVlO3JldHVybn1pZih0aGlzLm1JbnZhbGlkYXRlZENvbnRyb2xzW2ldKXtyZXR1cm59aWYoIXRoaXMub1JlbmRlckNvbnRyb2wpe3RoaXMubUludmFsaWRhdGVkQ29udHJvbHNbaV09Yzt0aGlzLmJOZWVkc1JlcmVuZGVyaW5nPXRydWV9fTtVLnByb3RvdHlwZS5yZXJlbmRlcj1mdW5jdGlvbihmKXtpZihmKXt0aGlzLmJOZWVkc1JlcmVuZGVyaW5nPXRydWV9aWYodGhpcy5iTG9ja2VkfHwhdGhpcy5iTmVlZHNSZXJlbmRlcmluZyl7cmV0dXJuIGZhbHNlfXZhciB0PXRoaXM7cS5zYXAubWVhc3VyZS5wYXVzZSgicmVyZW5kZXJBbGxVSUFyZWFzIik7cS5zYXAubWVhc3VyZS5zdGFydCh0aGlzLmdldElkKCkrIi0tLXJlcmVuZGVyIiwiUmVyZW5kZXJpbmcgb2YgIit0aGlzLmdldE1ldGFkYXRhKCkuZ2V0TmFtZSgpKTtpZih0aGlzLm9SZW5kZXJDb250cm9sPT10aGlzKXtpZih0aGlzLm9Sb290Tm9kZSl7cS5zYXAubG9nLmluZm8oIlJlcmVuZGVyaW5nIG9mIFVJIGFyZWE6ICIrdGhpcy5nZXRJZCgpKTtzYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLnByZXNlcnZlQ29udGVudCh0aGlzLm9Sb290Tm9kZSxmYWxzZSx0aGlzLmJJbml0aWFsKTt0aGlzLmJJbml0aWFsPWZhbHNlO3ZhciBjPWZ1bmN0aW9uKGIsZCl7dmFyIGw9Yi5sZW5ndGg7dmFyIEQ7Zm9yKHZhciBpPTA7aTxsO2krKyl7RD1kP2JbaV0uZ2V0RG9tUmVmKCk6YltpXTtpZihEJiYhc2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlci5pc1ByZXNlcnZlZENvbnRlbnQoRCkmJnQub1Jvb3ROb2RlPT09RC5wYXJlbnROb2RlKXtxKEQpLnJlbW92ZSgpfX1yZXR1cm4gbH07Yyh0aGlzLmFDb250ZW50VG9SZW1vdmUpO3RoaXMuYUNvbnRlbnRUb1JlbW92ZT1bXTt2YXIgQz10aGlzLmdldENvbnRlbnQoKTt2YXIgbD1jKEMsdHJ1ZSk7Zm9yKHZhciBpPTA7aTxsO2krKyl7dGhpcy5vQ29yZS5vUmVuZGVyTWFuYWdlci5yZW5kZXIoQ1tpXSx0aGlzLm9Sb290Tm9kZSx0cnVlKX19ZWxzZXtxLnNhcC5tZWFzdXJlLmVuZCh0aGlzLmdldElkKCkrIi0tLXJlcmVuZGVyIik7cS5zYXAubWVhc3VyZS5yZXN1bWUoInJlcmVuZGVyQWxsVUlBcmVhcyIpO3JldHVybiBmYWxzZX19ZWxzZXt2YXIgYT1mdW5jdGlvbihBKXt3aGlsZShBJiZBIT09dCl7aWYodC5tSW52YWxpZGF0ZWRDb250cm9scy5oYXNPd25Qcm9wZXJ0eShBLmdldElkKCkpKXtyZXR1cm4gdHJ1ZX1pZihBJiZBLmdldE1ldGFkYXRhJiZBLmdldE1ldGFkYXRhKCkuaXNJbnN0YW5jZU9mKCJzYXAudWkuY29yZS5Qb3B1cEludGVyZmFjZSIpKXticmVha31BPUEuZ2V0UGFyZW50KCl9cmV0dXJuIGZhbHNlfTtmb3IodmFyIG4gaW4gdGhpcy5tSW52YWxpZGF0ZWRDb250cm9scyl7dmFyIG89dGhpcy5vQ29yZS5ieUlkKG4pO2lmKG8mJiFhKG8uZ2V0UGFyZW50KCkpKXtvLnJlcmVuZGVyKCl9fX10aGlzLm9SZW5kZXJDb250cm9sPW51bGw7dGhpcy5tSW52YWxpZGF0ZWRDb250cm9scz17fTt0aGlzLmJOZWVkc1JlcmVuZGVyaW5nPWZhbHNlO3Euc2FwLm1lYXN1cmUuZW5kKHRoaXMuZ2V0SWQoKSsiLS0tcmVyZW5kZXIiKTtxLnNhcC5tZWFzdXJlLnJlc3VtZSgicmVyZW5kZXJBbGxVSUFyZWFzIik7cmV0dXJuIHRydWV9O1UucmVyZW5kZXJDb250cm9sPWZ1bmN0aW9uKGMpe3ZhciBkPWM/Yy5nZXREb21SZWYoKTpudWxsO3ZhciBwPWQmJmQucGFyZW50Tm9kZTtpZihwKXt2YXIgdT1jLmdldFVJQXJlYSgpO3ZhciByPXU/dS5vQ29yZS5vUmVuZGVyTWFuYWdlcjpzYXAudWkuZ2V0Q29yZSgpLmNyZWF0ZVJlbmRlck1hbmFnZXIoKTtxLnNhcC5sb2cuaW5mbygiUmVyZW5kZXJpbmcgb2YgY29udHJvbCAodXNpbmcgQ29yZS1SZW5kZXJNYW5hZ2VyOiAiKyghIXUpKyIpOiAiK2MuZ2V0SWQoKSk7c2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlci5wcmVzZXJ2ZUNvbnRlbnQoZCx0cnVlLGZhbHNlKTtyLnJlbmRlcihjLHApfWVsc2V7cS5zYXAubG9nLndhcm5pbmcoIkNvdWxkbid0IHJlcmVuZGVyICciK2MuZ2V0SWQoKSsiJywgYXMgaXRzIERPTSBsb2NhdGlvbiBjb3VsZG4ndCBiZSBkZXRlcm1pbmVkIil9fTtVLnByb3RvdHlwZS5faGFuZGxlRXZlbnQ9ZnVuY3Rpb24oZSl7dmFyIG89bnVsbDtvPXEoZS50YXJnZXQpLmNvbnRyb2woMCk7cS5zYXAuYWN0LnJlZnJlc2goKTtpZihvPT09bnVsbCl7cmV0dXJufWlmKGUuaXNNYXJrZWQoImRlbGF5ZWRNb3VzZUV2ZW50Iikpe3JldHVybn1pZihlLmlzTWFya2VkKCJoYW5kbGVkQnlVSUFyZWEiKSl7ZS5zZXRNYXJrKCJmaXJzdFVJQXJlYSIsZmFsc2UpO3JldHVybn1lLnNldE1hcmtlZCgiZmlyc3RVSUFyZWEiKTtlLnNyY0NvbnRyb2w9bzt0aGlzLm9Db3JlLl9oYW5kbGVDb250cm9sRXZlbnQoZSx0aGlzLmdldElkKCkpO2lmKHRoaXMuYkxvY2tlZHx8dGhpcy5vQ29yZS5pc0xvY2tlZCgpKXtyZXR1cm59dmFyIGE9W107aWYoZS5nZXRQc2V1ZG9UeXBlcyl7YT1lLmdldFBzZXVkb1R5cGVzKCl9YS5wdXNoKGUudHlwZSk7d2hpbGUobyYmbyBpbnN0YW5jZW9mIEUmJm8uaXNBY3RpdmUoKSYmIWUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSl7Zm9yKHZhciBpPTAsYj1hLmxlbmd0aDtpPGI7aSsrKXt2YXIgdD1hW2ldO2UudHlwZT10O2UuY3VycmVudFRhcmdldD1vLmdldERvbVJlZigpO28uX2hhbmRsZUV2ZW50KGUpO2lmKGUuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSl7YnJlYWt9fWlmKGUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSl7YnJlYWt9aWYoby5iU3RvcEV2ZW50QnViYmxpbmcpe2JyZWFrfXZhciBkPW8uZ2V0RG9tUmVmKCk7aWYoIWQpe2JyZWFrfWQ9ZC5wYXJlbnROb2RlO289bnVsbDtpZihlLmlzTWFya2VkKCJmcm9tTW91c2VvdXQiKSYmcS5zYXAuY29udGFpbnNPckVxdWFscyhkLGUucmVsYXRlZFRhcmdldCkpe2JyZWFrfXdoaWxlKGQmJmQhPT10aGlzLmdldFJvb3ROb2RlKCkpe2lmKGQuaWQpe289cShkKS5jb250cm9sKDApO2lmKG8pe2JyZWFrfX1kPWQucGFyZW50Tm9kZX19ZS5jdXJyZW50VGFyZ2V0PXRoaXMuZ2V0Um9vdE5vZGUoKTsoZS5vcmlnaW5hbEV2ZW50fHxlKS5fc2FwdWlfaGFuZGxlZEJ5VUlBcmVhPXRydWU7aWYoZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKXtxLnNhcC5sb2cuZGVidWcoIiciK2UudHlwZSsiJyBwcm9wYWdhdGlvbiBoYXMgYmVlbiBzdG9wcGVkIil9dmFyIG49ZS50eXBlO2lmKG4hPSJtb3VzZW1vdmUiJiZuIT0ibW91c2VvdmVyIiYmbiE9InNjcm9sbCImJm4hPSJtb3VzZW91dCIpe3ZhciBjPXEoZS50YXJnZXQpLmNvbnRyb2woMCk7aWYoYyl7cS5zYXAubG9nLmRlYnVnKCJFdmVudCBmaXJlZDogJyIrZS50eXBlKyInIG9uICIrYywiIiwic2FwLnVpLmNvcmUuVUlBcmVhIil9ZWxzZXtxLnNhcC5sb2cuZGVidWcoIkV2ZW50IGZpcmVkOiAnIitlLnR5cGUrIiciLCIiLCJzYXAudWkuY29yZS5VSUFyZWEiKX19fTtVLnByb3RvdHlwZS5fb25hdHRhY2g9ZnVuY3Rpb24oKXt2YXIgZD10aGlzLmdldFJvb3ROb2RlKCk7aWYoZD09bnVsbCl7cmV0dXJufXEoZCkuYXR0cigiZGF0YS1zYXAtdWktYXJlYSIsZC5pZCkuYmluZChxLnNhcC5Db250cm9sRXZlbnRzLmpvaW4oIiAiKSxxLnByb3h5KHRoaXMuX2hhbmRsZUV2ZW50LHRoaXMpKX07VS5wcm90b3R5cGUuX29uZGV0YWNoPWZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5nZXRSb290Tm9kZSgpO2lmKGQ9PW51bGwpe3JldHVybn1xKGQpLnJlbW92ZUF0dHIoImRhdGEtc2FwLXVpLWFyZWEiKS51bmJpbmQoKX07VS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoIlVJQXJlYSBjYW4ndCBiZSBjbG9uZWQiKX07cmV0dXJuIFV9LHRydWUpfTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Db3JlIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnc2FwL3VpL0RldmljZScsJ3NhcC91aS9HbG9iYWwnLCdzYXAvdWkvYmFzZS9EYXRhVHlwZScsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCcuL0NvbXBvbmVudCcsJy4vQ29uZmlndXJhdGlvbicsJy4vQ29udHJvbCcsJy4vRWxlbWVudCcsJy4vRWxlbWVudE1ldGFkYXRhJywnLi9Gb2N1c0hhbmRsZXInLCcuL1JlbmRlck1hbmFnZXInLCcuL1Jlc2l6ZUhhbmRsZXInLCcuL1RoZW1lQ2hlY2snLCcuL1VJQXJlYScsJy4vdG1wbC9UZW1wbGF0ZScsJ2pxdWVyeS5zYXAuYWN0JywnanF1ZXJ5LnNhcC5kb20nLCdqcXVlcnkuc2FwLmV2ZW50cycsJ2pxdWVyeS5zYXAubW9iaWxlJywnanF1ZXJ5LnNhcC5wcm9wZXJ0aWVzJywnanF1ZXJ5LnNhcC5yZXNvdXJjZXMnLCdqcXVlcnkuc2FwLnNjcmlwdCddLGZ1bmN0aW9uKHEsRCxHLGEsRSxDLGMsZCxlLGcsRixSLGgsVCxVLGopeyJ1c2Ugc3RyaWN0Ijt2YXIgaz1FLmV4dGVuZCgic2FwLnVpLmNvcmUuQ29yZSIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7aWYoc2FwLnVpLmdldENvcmUmJnNhcC51aS5nZXRDb3JlKCkpe3JldHVybiBzYXAudWkuZ2V0Q29yZSgpfXZhciB0PXRoaXMsbD1xLnNhcC5sb2csTT0ic2FwLnVpLmNvcmUuQ29yZSI7RS5hcHBseSh0aGlzKTt0aGlzLmJCb290ZWQ9ZmFsc2U7dGhpcy5iSW5pdGlhbGl6ZWQ9ZmFsc2U7dGhpcy5hUGx1Z2lucz1bXTt0aGlzLm1MaWJyYXJpZXM9e307dGhpcy5tUmVzb3VyY2VCdW5kbGVzPXt9O3RoaXMubVVJQXJlYXM9e307dGhpcy5vTW9kZWxzPXt9O3RoaXMub0V2ZW50QnVzPW51bGw7dGhpcy5tRWxlbWVudHM9e307dGhpcy5tT2JqZWN0cz17ImNvbXBvbmVudCI6e30sInRlbXBsYXRlIjp7fX07dGhpcy5vUm9vdENvbXBvbmVudD1udWxsO3RoaXMuYUluaXRMaXN0ZW5lcnM9W107dGhpcy5iSW5pdExlZ2FjeUxpYj1mYWxzZTtsLmluZm8oIkNyZWF0aW5nIENvcmUiLG51bGwsTSk7dGhpcy5vQ29uZmlndXJhdGlvbj1uZXcgYyh0aGlzKTtpZih0aGlzLm9Db25maWd1cmF0aW9uWyJ4eC1iaW5kaW5nU3ludGF4Il09PT0iY29tcGxleCIpe3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuYmluZGluZ1BhcnNlcj1zYXAudWkuYmFzZS5CaW5kaW5nUGFyc2VyLmNvbXBsZXhQYXJzZXJ9aWYodGhpcy5vQ29uZmlndXJhdGlvblsieHgtZGVzaWduTW9kZSJdPT10cnVlKXtzYXAudWkuYmFzZS5CaW5kaW5nUGFyc2VyLl9rZWVwQmluZGluZ1N0cmluZ3M9dHJ1ZX1nLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihKKXt0LnJlZ2lzdGVyRWxlbWVudENsYXNzKEopfTtlLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbigpe3QucmVnaXN0ZXJFbGVtZW50KHRoaXMpfTtlLnByb3RvdHlwZS5kZXJlZ2lzdGVyPWZ1bmN0aW9uKCl7dC5kZXJlZ2lzdGVyRWxlbWVudCh0aGlzKX07Qy5wcm90b3R5cGUucmVnaXN0ZXI9ZnVuY3Rpb24oKXt0LnJlZ2lzdGVyT2JqZWN0KHRoaXMpfTtDLnByb3RvdHlwZS5kZXJlZ2lzdGVyPWZ1bmN0aW9uKCl7dC5kZXJlZ2lzdGVyT2JqZWN0KHRoaXMpfTtqLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbigpe3QucmVnaXN0ZXJPYmplY3QodGhpcyl9O2oucHJvdG90eXBlLmRlcmVnaXN0ZXI9ZnVuY3Rpb24oKXt0LmRlcmVnaXN0ZXJPYmplY3QodGhpcyl9O3ZhciBtPXRoaXMub0NvbmZpZ3VyYXRpb24ubW9kdWxlcztpZih0aGlzLm9Db25maWd1cmF0aW9uLmdldERlYnVnKCkpe20udW5zaGlmdCgic2FwLXVpLWRlYnVnIil9dmFyIGk9cS5pbkFycmF5KCJzYXAudWkuY29yZS5saWJyYXJ5IixtKTtpZihpIT0wKXtpZihpPjApe20uc3BsaWNlKGksMSl9bS51bnNoaWZ0KCJzYXAudWkuY29yZS5saWJyYXJ5Iil9bC5pbmZvKCJEZWNsYXJlZCBtb2R1bGVzOiAiK20sTSk7dmFyIG89d2luZG93WyJzYXAtdWktY29uZmlnIl07aWYodGhpcy5vQ29uZmlndXJhdGlvbi50aGVtZVJvb3Qpe289b3x8e307by50aGVtZXJvb3RzPW8udGhlbWVyb290c3x8e307by50aGVtZXJvb3RzW3RoaXMub0NvbmZpZ3VyYXRpb24uZ2V0VGhlbWUoKV09dGhpcy5vQ29uZmlndXJhdGlvbi50aGVtZVJvb3R9aWYobyl7aWYoby50aGVtZXJvb3RzKXtmb3IodmFyIGYgaW4gby50aGVtZXJvb3RzKXt2YXIgbj1vLnRoZW1lcm9vdHNbZl07aWYodHlwZW9mIG49PT0ic3RyaW5nIil7dGhpcy5zZXRUaGVtZVJvb3QoZixuKX1lbHNle2Zvcih2YXIgcCBpbiBuKXtpZihwLmxlbmd0aD4wKXt0aGlzLnNldFRoZW1lUm9vdChmLFtwXSxuW3BdKX1lbHNle3RoaXMuc2V0VGhlbWVSb290KGYsbltwXSl9fX19fX10aGlzLnNUaGVtZT10aGlzLm9Db25maWd1cmF0aW9uLmdldFRoZW1lKCk7cShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmFkZENsYXNzKCJzYXBVaVRoZW1lLSIrdGhpcy5zVGhlbWUpO2wuaW5mbygiRGVjbGFyZWQgdGhlbWUgIit0aGlzLnNUaGVtZSxudWxsLE0pO2lmKHRoaXMub0NvbmZpZ3VyYXRpb24uZ2V0UlRMKCkpe3EoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5hdHRyKCJkaXIiLCJydGwiKTtsLmluZm8oIlJUTCBtb2RlIGFjdGl2YXRlZCIsbnVsbCxNKX12YXIgJD1xKCJodG1sIik7dmFyIGI9RC5icm93c2VyO3ZhciByPWIubmFtZTtpZihyPT09Yi5CUk9XU0VSLkNIUk9NRSl7cS5icm93c2VyLnNhZmFyaT1mYWxzZTtxLmJyb3dzZXIuY2hyb21lPXRydWV9ZWxzZSBpZihyPT09Yi5CUk9XU0VSLlNBRkFSSSl7cS5icm93c2VyLnNhZmFyaT10cnVlO3EuYnJvd3Nlci5jaHJvbWU9ZmFsc2U7aWYoYi5tb2JpbGUpe3I9Im0iK3J9fWlmKHIpe3EuYnJvd3Nlci5mVmVyc2lvbj1iLnZlcnNpb247cS5icm93c2VyLm1vYmlsZT1iLm1vYmlsZTtyPXIrTWF0aC5mbG9vcihiLnZlcnNpb24pOyQuYXR0cigiZGF0YS1zYXAtdWktYnJvd3NlciIscik7bC5kZWJ1ZygiQnJvd3Nlci1JZDogIityLG51bGwsTSl9JC5hdHRyKCJkYXRhLXNhcC11aS1vcyIsRC5vcy5uYW1lK0Qub3MudmVyc2lvblN0cik7dmFyIHM9bnVsbDtzd2l0Y2goRC5vcy5uYW1lKXtjYXNlIEQub3MuT1MuSU9TOnM9InNhcC1pb3MiO2JyZWFrO2Nhc2UgRC5vcy5PUy5BTkRST0lEOnM9InNhcC1hbmRyb2lkIjticmVhaztjYXNlIEQub3MuT1MuQkxBQ0tCRVJSWTpzPSJzYXAtYmIiO2JyZWFrO2Nhc2UgRC5vcy5PUy5XSU5ET1dTX1BIT05FOnM9InNhcC13aW5waG9uZSI7YnJlYWt9aWYocyl7JC5hZGRDbGFzcyhzKX1pZih0aGlzLm9Db25maWd1cmF0aW9uLmdldFdlaW5yZUlkKCkpe2wuaW5mbygiU3RhcnRpbmcgV0VJTlJFIFJlbW90ZSBXZWIgSW5zcGVjdG9yIik7dmFyIHc9IjxzY3JpcHQgc3JjPVwiIjt3Kz10aGlzLm9Db25maWd1cmF0aW9uLmdldFdlaW5yZVNlcnZlcigpO3crPSIvdGFyZ2V0L3RhcmdldC1zY3JpcHQtbWluLmpzIyI7dys9cS5zYXAuZW5jb2RlVVJMKHRoaXMub0NvbmZpZ3VyYXRpb24uZ2V0V2VpbnJlSWQoKSk7dys9IlwiPjwvc2NyaXB0PiI7ZG9jdW1lbnQud3JpdGUodyl9c2FwLnVpLmdldENvcmU9cS5zYXAuZ2V0dGVyKHRoaXMuZ2V0SW50ZXJmYWNlKCkpO1IuaW5pdEhUTUw1U3VwcG9ydCgpO3RoaXMub1JlbmRlck1hbmFnZXI9bmV3IFIoKTt2YXIgUz1xLnNhcC5zeW5jUG9pbnQoIlVJNSBEb2N1bWVudCBSZWFkeSIsZnVuY3Rpb24oTyxKKXt0LmhhbmRsZUxvYWQoKX0pO3ZhciB1PVMuc3RhcnRUYXNrKCJkb2N1bWVudC5yZWFkeSIpO3ZhciB2PVMuc3RhcnRUYXNrKCJwcmVsb2FkIGFuZCBib290Iik7cShmdW5jdGlvbigpe2wudHJhY2UoImRvY3VtZW50IGlzIHJlYWR5Iik7Uy5maW5pc2hUYXNrKHUpfSk7dmFyIHg9cS5zYXAuc3luY1BvaW50KCJVSTUgQ29yZSBQcmVsb2FkcyBhbmQgQm9vdHN0cmFwIFNjcmlwdCIsZnVuY3Rpb24oTyxKKXtsLnRyYWNlKCJDb3JlIGxvYWRlZDogb3Blbj0iK08rIiwgZmFpbHVyZXM9IitKKTt0Ll9ib290KCk7Uy5maW5pc2hUYXNrKHYpfSk7dmFyIHk9dGhpcy5vQ29uZmlndXJhdGlvblsieHgtYm9vdFRhc2siXTtpZih5KXt2YXIgej14LnN0YXJ0VGFzaygiY3VzdG9tIGJvb3QgdGFzayIpO3koZnVuY3Rpb24oSil7eC5maW5pc2hUYXNrKHosdHlwZW9mIEo9PT0idW5kZWZpbmVkInx8Sj09PXRydWUpfSl9dmFyIEE9bmV3IHEuc2FwLlZlcnNpb24odGhpcy5vQ29uZmlndXJhdGlvbi5nZXRDb21wYXRpYmlsaXR5VmVyc2lvbigiZmxleEJveFBvbHlmaWxsIikpO2lmKEEuY29tcGFyZVRvKCIxLjE2Iik+PTApe3Euc3VwcG9ydC51c2VGbGV4Qm94UG9seWZpbGw9ZmFsc2V9ZWxzZSBpZighcS5zdXBwb3J0LmZsZXhCb3hMYXlvdXQmJiFxLnN1cHBvcnQubmV3RmxleEJveExheW91dCYmIXEuc3VwcG9ydC5pZTEwRmxleEJveExheW91dCl7cS5zdXBwb3J0LnVzZUZsZXhCb3hQb2x5ZmlsbD10cnVlfWVsc2V7cS5zdXBwb3J0LnVzZUZsZXhCb3hQb2x5ZmlsbD1mYWxzZX12YXIgQj14LnN0YXJ0VGFzaygiYm9vdHN0cmFwIHNjcmlwdCIpO3RoaXMuYm9vdD1mdW5jdGlvbigpe2lmKHRoaXMuYkJvb3RlZCl7cmV0dXJufXRoaXMuYkJvb3RlZD10cnVlO3guZmluaXNoVGFzayhCKX07dmFyIFA9dGhpcy5vQ29uZmlndXJhdGlvbi5wcmVsb2FkO2lmKHdpbmRvd1sic2FwLXVpLWRlYnVnIl0pe1A9IiJ9aWYoUD09PSJhdXRvIil7UD0od2luZG93WyJzYXAtdWktb3B0aW1pemVkIl0mJiF0aGlzLm9Db25maWd1cmF0aW9uWyd4eC1sb2FkQWxsTW9kZSddKT8ic3luYyI6IiJ9dGhpcy5vQ29uZmlndXJhdGlvbi5wcmVsb2FkPVA7aWYoUD09PSJzeW5jInx8UD09PSJhc3luYyIpe3ZhciBIPVAhPT0ic3luYyI7cS5lYWNoKG0sZnVuY3Rpb24oaSxKKXtpZihKLm1hdGNoKC9cLmxpYnJhcnkkLykpe3Euc2FwLnByZWxvYWRNb2R1bGVzKEorIi1wcmVsb2FkIixILHgpfX0pfXZhciBJPXRoaXMub0NvbmZpZ3VyYXRpb24uZ2V0QXBwQ2FjaGVCdXN0ZXIoKTtpZihJJiZJLmxlbmd0aD4wKXtxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5BcHBDYWNoZUJ1c3RlciIpO3NhcC51aS5jb3JlLkFwcENhY2hlQnVzdGVyLmJvb3QoeCl9fSxtZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImJvb3QiLCJpc0luaXRpYWxpemVkIiwiaXNUaGVtZUFwcGxpZWQiLCJhdHRhY2hJbml0RXZlbnQiLCJhdHRhY2hJbml0IiwiZ2V0UmVuZGVyTWFuYWdlciIsImNyZWF0ZVJlbmRlck1hbmFnZXIiLCJnZXRDb25maWd1cmF0aW9uIiwic2V0Um9vdCIsImNyZWF0ZVVJQXJlYSIsImdldFVJQXJlYSIsImdldFVJRGlydHkiLCJnZXRFbGVtZW50QnlJZCIsImdldEN1cnJlbnRGb2N1c2VkQ29udHJvbElkIiwiZ2V0Q29udHJvbCIsImdldENvbXBvbmVudCIsImdldFRlbXBsYXRlIiwibG9jayIsInVubG9jayIsImlzTG9ja2VkIiwiYXR0YWNoRXZlbnQiLCJkZXRhY2hFdmVudCIsImFwcGx5Q2hhbmdlcyIsImdldEV2ZW50QnVzIiwiYXBwbHlUaGVtZSIsInNldFRoZW1lUm9vdCIsImF0dGFjaFRoZW1lQ2hhbmdlZCIsImRldGFjaFRoZW1lQ2hhbmdlZCIsImdldFN0YXRpY0FyZWFSZWYiLCJyZWdpc3RlclBsdWdpbiIsInVucmVnaXN0ZXJQbHVnaW4iLCJnZXRMaWJyYXJ5UmVzb3VyY2VCdW5kbGUiLCJieUlkIiwiZ2V0TG9hZGVkTGlicmFyaWVzIiwibG9hZExpYnJhcnkiLCJpbml0TGlicmFyeSIsImluY2x1ZGVMaWJyYXJ5VGhlbWUiLCJzZXRNb2RlbCIsImdldE1vZGVsIiwiaGFzTW9kZWwiLCJpc01vYmlsZSIsImF0dGFjaENvbnRyb2xFdmVudCIsImRldGFjaENvbnRyb2xFdmVudCIsImF0dGFjaEludGVydmFsVGltZXIiLCJkZXRhY2hJbnRlcnZhbFRpbWVyIiwiYXR0YWNoUGFyc2VFcnJvciIsImRldGFjaFBhcnNlRXJyb3IiLCJmaXJlUGFyc2VFcnJvciIsImF0dGFjaFZhbGlkYXRpb25FcnJvciIsImRldGFjaFZhbGlkYXRpb25FcnJvciIsImZpcmVWYWxpZGF0aW9uRXJyb3IiLCJhdHRhY2hGb3JtYXRFcnJvciIsImRldGFjaEZvcm1hdEVycm9yIiwiZmlyZUZvcm1hdEVycm9yIiwiYXR0YWNoVmFsaWRhdGlvblN1Y2Nlc3MiLCJkZXRhY2hWYWxpZGF0aW9uU3VjY2VzcyIsImZpcmVWYWxpZGF0aW9uU3VjY2VzcyIsImF0dGFjaExvY2FsaXphdGlvbkNoYW5nZWQiLCJkZXRhY2hMb2NhbGl6YXRpb25DaGFuZ2VkIiwiYXR0YWNoTGlicmFyeUNoYW5nZWQiLCJkZXRhY2hMaWJyYXJ5Q2hhbmdlZCIsImlzU3RhdGljQXJlYVJlZiIsImNyZWF0ZUNvbXBvbmVudCIsImdldFJvb3RDb21wb25lbnQiLCJnZXRBcHBsaWNhdGlvbiJdfX0pO2suTV9FVkVOVFM9e0NvbnRyb2xFdmVudDoiQ29udHJvbEV2ZW50IixVSVVwZGF0ZWQ6IlVJVXBkYXRlZCIsVGhlbWVDaGFuZ2VkOiJUaGVtZUNoYW5nZWQiLExvY2FsaXphdGlvbkNoYW5nZWQ6ImxvY2FsaXphdGlvbkNoYW5nZWQiLExpYnJhcnlDaGFuZ2VkOiJsaWJyYXJ5Q2hhbmdlZCIsVmFsaWRhdGlvbkVycm9yOiJ2YWxpZGF0aW9uRXJyb3IiLFBhcnNlRXJyb3I6InBhcnNlRXJyb3IiLEZvcm1hdEVycm9yOiJmb3JtYXRFcnJvciIsVmFsaWRhdGlvblN1Y2Nlc3M6InZhbGlkYXRpb25TdWNjZXNzIn07ay5wcm90b3R5cGUuX2Jvb3Q9ZnVuY3Rpb24oKXt0aGlzLmxvY2soKTt2YXIgYj10aGlzLm9Db25maWd1cmF0aW9uWyd4eC1wcmVsb2FkTGliQ3NzJ107aWYoYi5sZW5ndGg+MCl7dmFyIEE9YlswXS5zbGljZSgwLDEpPT09IiEiO2lmKEEpe2JbMF09YlswXS5zbGljZSgxKX1pZihiWzBdPT09IioiKXtiLnNwbGljZSgwLDEpO3ZhciBwPTA7cS5lYWNoKHRoaXMub0NvbmZpZ3VyYXRpb24ubW9kdWxlcyxmdW5jdGlvbihpLGYpe3ZhciBtPWYubWF0Y2goL14oLiopXC5saWJyYXJ5JC8pO2lmKG0pe2Iuc3BsaWNlKHAsMCxtWzFdKX19KX1pZighQSl7dGhpcy5pbmNsdWRlTGlicmFyeVRoZW1lKCJzYXAtdWktbWVyZ2VkIix1bmRlZmluZWQsIj9sPSIrYi5qb2luKCIsIikpfX12YXIgdD10aGlzO3EuZWFjaCh0aGlzLm9Db25maWd1cmF0aW9uLm1vZHVsZXMsZnVuY3Rpb24oaSxmKXt2YXIgbT1mLm1hdGNoKC9eKC4qKVwubGlicmFyeSQvKTtpZihtKXt0LmxvYWRMaWJyYXJ5KG1bMV0pfWVsc2V7cS5zYXAucmVxdWlyZShmKX19KTt0aGlzLnVubG9jaygpfTtrLnByb3RvdHlwZS5hcHBseVRoZW1lPWZ1bmN0aW9uKHQscyl7dD10aGlzLm9Db25maWd1cmF0aW9uLl9ub3JtYWxpemVUaGVtZSh0LHMpO2lmKHMpe3RoaXMuc2V0VGhlbWVSb290KHQscyl9aWYodCYmdGhpcy5zVGhlbWUhPXQpe3ZhciBiPXRoaXMuc1RoZW1lO3RoaXMuX3VwZGF0ZVRoZW1lVXJscyh0KTt0aGlzLnNUaGVtZT10O3RoaXMub0NvbmZpZ3VyYXRpb24uX3NldFRoZW1lKHQpO3EoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5yZW1vdmVDbGFzcygic2FwVWlUaGVtZS0iK2IpLmFkZENsYXNzKCJzYXBVaVRoZW1lLSIrdCk7aWYodGhpcy5vVGhlbWVDaGVjayl7dGhpcy5vVGhlbWVDaGVjay5maXJlVGhlbWVDaGFuZ2VkRXZlbnQoZmFsc2UsdHJ1ZSl9fX07ay5wcm90b3R5cGUuX3VwZGF0ZVRoZW1lVXJscz1mdW5jdGlvbih0KXt2YXIgYj10aGlzLHI9dGhpcy5vQ29uZmlndXJhdGlvbi5nZXRSVEwoKT8iLVJUTCI6IiI7cSgibGlua1tpZF49c2FwLXVpLXRoZW1lLV0iKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGw9dGhpcy5pZC5zbGljZSgxMyksTD10aGlzLmhyZWYuc2xpY2UodGhpcy5ocmVmLmxhc3RJbmRleE9mKCIvIikrMSkscz0ibGlicmFyeSIsSCxwO2lmKChwPWwuaW5kZXhPZigiLVsiKSk+MCl7cys9bC5zbGljZShwKzIsLTEpO2w9bC5zbGljZSgwLHApfWlmKEw9PT0ocysiLmNzcyIpfHxMPT09KHMrIi1SVEwuY3NzIikpe0w9cytyKyIuY3NzIn1IPWIuX2dldFRoZW1lUGF0aChsLHQpK0w7aWYoSCE9dGhpcy5ocmVmKXt0aGlzLmhyZWY9SDtxKHRoaXMpLnJlbW92ZUF0dHIoInNhcC11aS1yZWFkeSIpfX0pfTtrLnByb3RvdHlwZS5fZ2V0VGhlbWVQYXRoPWZ1bmN0aW9uKGwsdCl7aWYodGhpcy5fbVRoZW1lUm9vdHMpe3ZhciBwPXRoaXMuX21UaGVtZVJvb3RzW3QrIiAiK2xdfHx0aGlzLl9tVGhlbWVSb290c1t0XTtpZihwKXtwPXArbC5yZXBsYWNlKC9cLi9nLCIvIikrIi90aGVtZXMvIit0KyIvIjtxLnNhcC5yZWdpc3Rlck1vZHVsZVBhdGgobCsiLnRoZW1lcy4iK3QscCk7cmV0dXJuIHB9fXJldHVybiBxLnNhcC5nZXRNb2R1bGVQYXRoKGwrIi50aGVtZXMuIit0LCIvIil9O2sucHJvdG90eXBlLnNldFRoZW1lUm9vdD1mdW5jdGlvbih0LGwscyl7aWYoIXRoaXMuX21UaGVtZVJvb3RzKXt0aGlzLl9tVGhlbWVSb290cz17fX1pZihzPT09dW5kZWZpbmVkKXtzPWw7bD11bmRlZmluZWR9cz1zKyhzLnNsaWNlKC0xKT09Ii8iPyIiOiIvIik7aWYobCl7Zm9yKHZhciBpPTA7aTxsLmxlbmd0aDtpKyspe3ZhciBiPWxbaV07dGhpcy5fbVRoZW1lUm9vdHNbdCsiICIrYl09c319ZWxzZXt0aGlzLl9tVGhlbWVSb290c1t0XT1zfXJldHVybiB0aGlzfTtrLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7aWYodGhpcy5iSW5pdGlhbGl6ZWQpe3JldHVybn12YXIgYj1xLnNhcC5sb2csTT0ic2FwLnVpLmNvcmUuQ29yZS5pbml0KCkiO3RoaXMuYm9vdCgpO2IuaW5mbygiSW5pdGlhbGl6aW5nIixudWxsLE0pO3RoaXMub0ZvY3VzSGFuZGxlcj1uZXcgRihkb2N1bWVudC5ib2R5LHRoaXMpO3RoaXMub1Jlc2l6ZUhhbmRsZXI9bmV3IGgodGhpcyk7dGhpcy5vVGhlbWVDaGVjaz1uZXcgVCh0aGlzKTtiLmluZm8oIkluaXRpYWxpemVkIixudWxsLE0pO3RoaXMuYkluaXRpYWxpemVkPXRydWU7Yi5pbmZvKCJTdGFydGluZyBQbHVnaW5zIixudWxsLE0pO3RoaXMuc3RhcnRQbHVnaW5zKCk7Yi5pbmZvKCJQbHVnaW5zIHN0YXJ0ZWQiLG51bGwsTSk7dmFyIG89dGhpcy5vQ29uZmlndXJhdGlvbjtpZihvLmFyZWFzKXtmb3IodmFyIGk9MCxsPW8uYXJlYXMubGVuZ3RoO2k8bDtpKyspe3RoaXMuY3JlYXRlVUlBcmVhKG8uYXJlYXNbaV0pfW8uYXJlYXM9dW5kZWZpbmVkfWlmKG8ub25Jbml0KXtpZih0eXBlb2Ygby5vbkluaXQ9PT0iZnVuY3Rpb24iKXtvLm9uSW5pdCgpfWVsc2V7cS5zYXAuZ2xvYmFsRXZhbChvLm9uSW5pdCl9by5vbkluaXQ9dW5kZWZpbmVkfXRoaXMub1RoZW1lQ2hlY2suZmlyZVRoZW1lQ2hhbmdlZEV2ZW50KHRydWUpO3ZhciByPW8uZ2V0Um9vdENvbXBvbmVudCgpO2lmKHIpe2IuaW5mbygiTG9hZGluZyBSb290IENvbXBvbmVudDogIityLG51bGwsTSk7dmFyIG09c2FwLnVpLmNvbXBvbmVudCh7bmFtZTpyfSk7dGhpcy5vUm9vdENvbXBvbmVudD1tO3ZhciBzPW9bInh4LXJvb3RDb21wb25lbnROb2RlIl07aWYocyYmbSBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLlVJQ29tcG9uZW50KXt2YXIgbj1xLnNhcC5kb21CeUlkKHMpO2lmKG4pe2IuaW5mbygiQ3JlYXRpbmcgQ29tcG9uZW50Q29udGFpbmVyIGZvciBSb290IENvbXBvbmVudDogIityLG51bGwsTSk7dmFyIHA9bmV3IHNhcC51aS5jb3JlLkNvbXBvbmVudENvbnRhaW5lcih7Y29tcG9uZW50Om0scHJvcGFnYXRlTW9kZWw6dHJ1ZX0pO3AucGxhY2VBdChuKX19fWVsc2V7dmFyIEE9by5nZXRBcHBsaWNhdGlvbigpO2lmKEEpe2Iud2FybmluZygiVGhlIGNvbmZpZ3VyYXRpb24gJ2FwcGxpY2F0aW9uJyBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIHRoZSBjb25maWd1cmF0aW9uICdjb21wb25lbnQnIGluc3RlYWQhIFBsZWFzZSBtaWdyYXRlIGZyb20gc2FwLnVpLmFwcC5BcHBsaWNhdGlvbiB0byBzYXAudWkuY29yZS5Db21wb25lbnQuIik7Yi5pbmZvKCJMb2FkaW5nIEFwcGxpY2F0aW9uOiAiK0EsbnVsbCxNKTtxLnNhcC5yZXF1aXJlKEEpO3ZhciB0PXEuc2FwLmdldE9iamVjdChBKTt2YXIgdT1uZXcgdCgpO319dmFyIHY9dGhpcy5hSW5pdExpc3RlbmVyczt0aGlzLmFJbml0TGlzdGVuZXJzPXVuZGVmaW5lZDtpZih2JiZ2Lmxlbmd0aD4wKXtiLmluZm8oIkZpcmUgTG9hZGVkIEV2ZW50IixudWxsLE0pO3EuZWFjaCh2LGZ1bmN0aW9uKGksZil7ZigpfSl9dGhpcy5fcmVyZW5kZXJBbGxVSUFyZWFzKCl9O2sucHJvdG90eXBlLmhhbmRsZUxvYWQ9ZnVuY3Rpb24oKXt2YXIgdz10aGlzLmlzTG9ja2VkKCk7aWYoIXcpe3RoaXMubG9jaygpfXRoaXMuaW5pdCgpO2lmKCF3KXt0aGlzLnVubG9jaygpfX07ay5wcm90b3R5cGUuaXNJbml0aWFsaXplZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmJJbml0aWFsaXplZH07ay5wcm90b3R5cGUuaXNUaGVtZUFwcGxpZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gVC50aGVtZUxvYWRlZH07ay5wcm90b3R5cGUuYXR0YWNoSW5pdEV2ZW50PWZ1bmN0aW9uKGYpe2lmKHRoaXMuYUluaXRMaXN0ZW5lcnMpe3RoaXMuYUluaXRMaXN0ZW5lcnMucHVzaChmKX19O2sucHJvdG90eXBlLmF0dGFjaEluaXQ9ZnVuY3Rpb24oZil7aWYodGhpcy5hSW5pdExpc3RlbmVycyl7dGhpcy5hSW5pdExpc3RlbmVycy5wdXNoKGYpfWVsc2V7ZigpfX07ay5wcm90b3R5cGUubG9jaz1mdW5jdGlvbigpe3RoaXMuYkxvY2tlZD10cnVlfTtrLnByb3RvdHlwZS51bmxvY2s9ZnVuY3Rpb24oKXt0aGlzLmJMb2NrZWQ9ZmFsc2V9O2sucHJvdG90eXBlLmlzTG9ja2VkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYkxvY2tlZH07ay5wcm90b3R5cGUuZ2V0Q29uZmlndXJhdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9Db25maWd1cmF0aW9ufTtrLnByb3RvdHlwZS5nZXRSZW5kZXJNYW5hZ2VyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3JlYXRlUmVuZGVyTWFuYWdlcigpfTtrLnByb3RvdHlwZS5jcmVhdGVSZW5kZXJNYW5hZ2VyPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBSKCkpLmdldEludGVyZmFjZSgpfTtrLnByb3RvdHlwZS5nZXRDdXJyZW50Rm9jdXNlZENvbnRyb2xJZD1mdW5jdGlvbigpe2lmKCF0aGlzLmlzSW5pdGlhbGl6ZWQoKSl7dGhyb3cgbmV3IEVycm9yKCJDb3JlIG11c3QgYmUgaW5pdGlhbGl6ZWQiKX1yZXR1cm4gdGhpcy5vRm9jdXNIYW5kbGVyLmdldEN1cnJlbnRGb2N1c2VkQ29udHJvbElkKCl9O2sucHJvdG90eXBlLmxvYWRMaWJyYXJ5PWZ1bmN0aW9uKGwsdSl7aWYoIXRoaXMubUxpYnJhcmllc1tsXSl7dmFyIG09bCsiLmxpYnJhcnkiLEE7aWYodSl7cS5zYXAucmVnaXN0ZXJNb2R1bGVQYXRoKGwsdSl9aWYodGhpcy5vQ29uZmlndXJhdGlvblsneHgtbG9hZEFsbE1vZGUnXSYmIXEuc2FwLmlzRGVjbGFyZWQobSkpe0E9bSsiLWFsbCI7cS5zYXAubG9nLmRlYnVnKCJsb2FkIGFsbC1pbi1vbmUgZmlsZSAiK0EpO3Euc2FwLnJlcXVpcmUoQSl9ZWxzZSBpZih0aGlzLm9Db25maWd1cmF0aW9uLnByZWxvYWQ9PT0nc3luYyd8fHRoaXMub0NvbmZpZ3VyYXRpb24ucHJlbG9hZD09PSdhc3luYycpe3Euc2FwLnByZWxvYWRNb2R1bGVzKG0rIi1wcmVsb2FkIixmYWxzZSl9cS5zYXAucmVxdWlyZShtKTtpZighdGhpcy5tTGlicmFyaWVzW2xdKXtxLnNhcC5sb2cud2FybmluZygibGlicmFyeSAiK2wrIiBkaWRuJ3QgaW5pdGlhbGl6ZSBpdHNlbGYiKTt0aGlzLmluaXRMaWJyYXJ5KGwpfWlmKHRoaXMub1RoZW1lQ2hlY2smJnRoaXMuaXNJbml0aWFsaXplZCgpKXt0aGlzLm9UaGVtZUNoZWNrLmZpcmVUaGVtZUNoYW5nZWRFdmVudCh0cnVlKX19cmV0dXJuIHRoaXMubUxpYnJhcmllc1tsXX07ay5wcm90b3R5cGUuY3JlYXRlQ29tcG9uZW50PWZ1bmN0aW9uKHYsdSxpLHMpe2lmKHR5cGVvZiB2PT09InN0cmluZyIpe3Y9e25hbWU6dix1cmw6dX07aWYodHlwZW9mIGk9PT0ib2JqZWN0Iil7di5zZXR0aW5ncz1pfWVsc2V7di5pZD1pO3Yuc2V0dGluZ3M9c319cmV0dXJuIHNhcC51aS5jb21wb25lbnQodil9O2sucHJvdG90eXBlLmdldFJvb3RDb21wb25lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vUm9vdENvbXBvbmVudH07ay5wcm90b3R5cGUuaW5pdExpYnJhcnk9ZnVuY3Rpb24obCl7dmFyIEw9dHlwZW9mIGw9PT0ic3RyaW5nIixvPUw/e25hbWU6bH06bCxzPW8ubmFtZSxiPXEuc2FwLmxvZyxNPSJzYXAudWkuY29yZS5Db3JlLmluaXRMaWJyYXJ5KCkiO2lmKEwpe2Iud2FybmluZygiW0RlcHJlY2F0ZWRdIGxpYnJhcnkgIitzKyIgdXNlcyBvbGQgZmFzaGlvbmVkIGluaXRMaWJyYXJ5KCkgY2FsbCAocmVidWlsZCB3aXRoIG5ld2VzdCBnZW5lcmF0b3IpIil9aWYoIXN8fHRoaXMubUxpYnJhcmllc1tzXSl7cmV0dXJufWIuZGVidWcoIkFuYWx5emluZyBMaWJyYXJ5ICIrcyxudWxsLE0pO3RoaXMubUxpYnJhcmllc1tzXT1vPXEuZXh0ZW5kKHtkZXBlbmRlbmNpZXM6W10sdHlwZXM6W10saW50ZXJmYWNlczpbXSxjb250cm9sczpbXSxlbGVtZW50czpbXX0sbyk7ZnVuY3Rpb24gcigpe3ZhciBwPXEuc2FwLnByb3BlcnRpZXMoe3VybDpzYXAudWkucmVzb3VyY2UocywibGlicmFyeS5wcm9wZXJ0aWVzIil9KTtvLnZlcnNpb249cC5nZXRQcm9wZXJ0eShzKyJbdmVyc2lvbl0iKTt2YXIgbj1wLmdldFByb3BlcnR5KHMrIltkZXBlbmRlbmNpZXNdIik7Yi5kZWJ1ZygiUmVxdWlyZWQgTGlicmFyaWVzOiAiK24sbnVsbCxNKTtvLmRlcGVuZGVuY2llcz0obiYmbi5zcGxpdCgvWyw7fCBdLykpfHxbXTt2YXIgSz1wLmdldEtleXMoKSx0PS8oLispXC4odHlwZXxpbnRlcmZhY2V8Y29udHJvbHxlbGVtZW50KSQvLHU7Zm9yKHZhciBpPTA7aTxLLmxlbmd0aDtpKyspe3ZhciB2PXAuZ2V0UHJvcGVydHkoS1tpXSk7aWYodT12Lm1hdGNoKHQpKXtvW3VbMl0rInMiXS5wdXNoKEtbaV0pfX19aWYoTCl7cigpfWZvcih2YXIgaT0wO2k8by5kZXBlbmRlbmNpZXMubGVuZ3RoO2krKyl7dmFyIGY9by5kZXBlbmRlbmNpZXNbaV07Yi5kZWJ1ZygicmVzb2x2ZSBEZXBlbmRlbmNpZXMgdG8gIitmLG51bGwsTSk7aWYoIXRoaXMubUxpYnJhcmllc1tmXSl7Yi53YXJuaW5nKCJEZXBlbmRlbmN5IGZyb20gIitzKyIgdG8gIitmKyIgaGFzIG5vdCBiZWVuIHJlc29sdmVkIGJ5IGxpYnJhcnkgaXRzZWxmIixudWxsLE0pO3RoaXMubG9hZExpYnJhcnkoZil9fWEucmVnaXN0ZXJJbnRlcmZhY2VUeXBlcyhvLmludGVyZmFjZXMpO3ZhciBtPW8uY29udHJvbHMuY29uY2F0KG8uZWxlbWVudHMpO2Zvcih2YXIgaT0wO2k8bS5sZW5ndGg7aSsrKXtzYXAudWkubGF6eVJlcXVpcmUobVtpXSwibmV3IGV4dGVuZCBnZXRNZXRhZGF0YSIpfWlmKCFvLm5vTGlicmFyeUNTUyYmcS5pbkFycmF5KHMsdGhpcy5vQ29uZmlndXJhdGlvblsneHgtcHJlbG9hZExpYkNzcyddKTwwKXt0aGlzLmluY2x1ZGVMaWJyYXJ5VGhlbWUocyl9by5zTmFtZT1vLm5hbWU7by5hQ29udHJvbHM9by5jb250cm9scztpZighcS5zYXAuaXNEZWNsYXJlZChzKyIubGlicmFyeSIpKXtiLndhcm5pbmcoIkxpYnJhcnkgTW9kdWxlICIrcysiLmxpYnJhcnkiKyIgbm90IGxvYWRlZCBhdXRvbWF0aWNhbGx5IixudWxsLE0pO3Euc2FwLnJlcXVpcmUocysiLmxpYnJhcnkiKX10aGlzLmZpcmVMaWJyYXJ5Q2hhbmdlZCh7bmFtZTpzLHN0ZXJlb3R5cGU6ImxpYnJhcnkiLG9wZXJhdGlvbjoiYWRkIixtZXRhZGF0YTpvfSl9O2sucHJvdG90eXBlLmluY2x1ZGVMaWJyYXJ5VGhlbWU9ZnVuY3Rpb24obCx2LFEpe2lmKChsIT0ic2FwLnVpLmxlZ2FjeSIpJiYobCE9InNhcC51aS5jbGFzc2ljIikpe2lmKCF2KXt2PSIifXZhciByPSh0aGlzLm9Db25maWd1cmF0aW9uLmdldFJUTCgpPyItUlRMIjoiIik7dmFyIEwscz1sKyh2Lmxlbmd0aD4wPyItWyIrdisiXSI6dik7aWYobCYmbC5pbmRleE9mKCI6Iik9PS0xKXtMPSJsaWJyYXJ5Iit2K3J9ZWxzZXtMPWwuc3Vic3RyaW5nKGwuaW5kZXhPZigiOiIpKzEpK3Y7bD1sLnN1YnN0cmluZygwLGwuaW5kZXhPZigiOiIpKX12YXIgYj10aGlzLl9nZXRUaGVtZVBhdGgobCx0aGlzLnNUaGVtZSkrTCsiLmNzcyIrKFE/UToiIik7cS5zYXAubG9nLmluZm8oIkluY2x1ZGluZyAiK2IrIiAtICBzYXAudWkuY29yZS5Db3JlLmluY2x1ZGVMaWJyYXJ5VGhlbWUoKSIpO3Euc2FwLmluY2x1ZGVTdHlsZVNoZWV0KGIsInNhcC11aS10aGVtZS0iK3MpO2lmKHNhcC51aS5jb3JlLnRoZW1pbmcmJnNhcC51aS5jb3JlLnRoZW1pbmcuUGFyYW1ldGVycyl7c2FwLnVpLmNvcmUudGhlbWluZy5QYXJhbWV0ZXJzLl9hZGRMaWJyYXJ5VGhlbWUoYil9fX07ay5wcm90b3R5cGUuZ2V0TG9hZGVkTGlicmFyaWVzPWZ1bmN0aW9uKCl7cmV0dXJuIHEuZXh0ZW5kKHt9LHRoaXMubUxpYnJhcmllcyl9O2sucHJvdG90eXBlLnNldFJvb3Q9ZnVuY3Rpb24obyxiKXtpZihiKXtiLnBsYWNlQXQobywib25seSIpfX07ay5wcm90b3R5cGUuY3JlYXRlVUlBcmVhPWZ1bmN0aW9uKG8pe3ZhciB0PXRoaXM7aWYoIW8pe3Rocm93IG5ldyBFcnJvcigib0RvbVJlZiBtdXN0IG5vdCBiZSBudWxsIil9aWYodHlwZW9mKG8pPT09InN0cmluZyIpe3ZhciBpPW87bz1xLnNhcC5kb21CeUlkKG8pO2lmKCFvKXt0aHJvdyBuZXcgRXJyb3IoIkRPTSBlbGVtZW50IHdpdGggSUQgJyIraSsiJyBub3QgZm91bmQgaW4gcGFnZSwgYnV0IGFwcGxpY2F0aW9uIHRyaWVzIHRvIGluc2VydCBjb250ZW50LiIpfX1pZighby5pZHx8by5pZC5sZW5ndGg9PTApe28uaWQ9cS5zYXAudWlkKCl9dmFyIEk9by5pZDtpZighdGhpcy5tVUlBcmVhc1tJXSl7dGhpcy5tVUlBcmVhc1tJXT1uZXcgVSh0aGlzLG8pO3EuZWFjaCh0aGlzLm9Nb2RlbHMsZnVuY3Rpb24obixtKXt0Lm1VSUFyZWFzW0ldLm9Qcm9wYWdhdGVkUHJvcGVydGllcy5vTW9kZWxzW25dPW19KTt0aGlzLm1VSUFyZWFzW0ldLnByb3BhZ2F0ZVByb3BlcnRpZXModHJ1ZSl9ZWxzZXt0aGlzLm1VSUFyZWFzW0ldLnNldFJvb3ROb2RlKG8pfXJldHVybiB0aGlzLm1VSUFyZWFzW0ldfTtrLnByb3RvdHlwZS5nZXRVSUFyZWE9ZnVuY3Rpb24obyl7dmFyIGk9IiI7aWYodHlwZW9mKG8pPT0ic3RyaW5nIil7aT1vfWVsc2V7aT1vLmlkfWlmKGkpe3JldHVybiB0aGlzLm1VSUFyZWFzW2ldfXJldHVybiBudWxsfTtrLnByb3RvdHlwZS5hZGRJbnZhbGlkYXRlZFVJQXJlYT1mdW5jdGlvbih1KXt0aGlzLnJlcmVuZGVyQWxsVUlBcmVhcygpfTtrLnByb3RvdHlwZS5nZXRMaWJyYXJ5UmVzb3VyY2VCdW5kbGU9ZnVuY3Rpb24obCxMKXtsPWx8fCJzYXAudWkuY29yZSI7TD1MfHx0aGlzLmdldENvbmZpZ3VyYXRpb24oKS5nZXRMYW5ndWFnZSgpO3ZhciBLPWwrIi8iK0w7aWYoIXRoaXMubVJlc291cmNlQnVuZGxlc1tLXSl7dmFyIHU9c2FwLnVpLnJlc291cmNlKGwsJ21lc3NhZ2VidW5kbGUucHJvcGVydGllcycpO3RoaXMubVJlc291cmNlQnVuZGxlc1tLXT1xLnNhcC5yZXNvdXJjZXMoe3VybDp1LGxvY2FsZTpMfSl9cmV0dXJuIHRoaXMubVJlc291cmNlQnVuZGxlc1tLXX07ay5wcm90b3R5cGUucmVyZW5kZXJBbGxVSUFyZWFzPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX3NSZXJlbmRlclRpbWVyKXtxLnNhcC5sb2cuaW5mbygicmVnaXN0ZXJpbmcgdGltZXIgZm9yIGRlbGF5ZWQgcmUtcmVuZGVyaW5nIik7dGhpcy5fc1JlcmVuZGVyVGltZXI9cS5zYXAuZGVsYXllZENhbGwoMCx0aGlzLCJfcmVyZW5kZXJBbGxVSUFyZWFzIil9fTtrLnByb3RvdHlwZS5fcmVyZW5kZXJBbGxVSUFyZWFzPWZ1bmN0aW9uKCl7cS5zYXAubWVhc3VyZS5zdGFydCgicmVyZW5kZXJBbGxVSUFyZWFzIiwiUmVyZW5kZXJpbmcgb2YgYWxsIFVJQXJlYXMiKTtpZih0aGlzLl9zUmVyZW5kZXJUaW1lcil7cS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLl9zUmVyZW5kZXJUaW1lcik7dGhpcy5fc1JlcmVuZGVyVGltZXI9dW5kZWZpbmVkfXZhciB1PWZhbHNlO3ZhciBtPXRoaXMubVVJQXJlYXM7Zm9yKHZhciBpIGluIG0pe3U9bVtpXS5yZXJlbmRlcigpfHx1fWlmKHUpe3RoaXMuZmlyZVVJVXBkYXRlZCgpfXEuc2FwLm1lYXN1cmUuZW5kKCJyZXJlbmRlckFsbFVJQXJlYXMiKX07ay5wcm90b3R5cGUuZ2V0VUlEaXJ0eT1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5fc1JlcmVuZGVyVGltZXJ9O2sucHJvdG90eXBlLmF0dGFjaFVJVXBkYXRlZD1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoay5NX0VWRU5UUy5VSVVwZGF0ZWQsZixsKX07ay5wcm90b3R5cGUuZGV0YWNoVUlVcGRhdGVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudChrLk1fRVZFTlRTLlVJVXBkYXRlZCxmLGwpfTtrLnByb3RvdHlwZS5maXJlVUlVcGRhdGVkPWZ1bmN0aW9uKHApe3RoaXMuZmlyZUV2ZW50KGsuTV9FVkVOVFMuVUlVcGRhdGVkLHApfTtrLnByb3RvdHlwZS5hdHRhY2hUaGVtZUNoYW5nZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KGsuTV9FVkVOVFMuVGhlbWVDaGFuZ2VkLGYsbCl9O2sucHJvdG90eXBlLmRldGFjaFRoZW1lQ2hhbmdlZD1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoay5NX0VWRU5UUy5UaGVtZUNoYW5nZWQsZixsKX07ay5wcm90b3R5cGUuZmlyZVRoZW1lQ2hhbmdlZD1mdW5jdGlvbihwKXtxLnNhcC5zY3JvbGxiYXJTaXplKHRydWUpO2lmKHNhcC51aS5jb3JlLnRoZW1pbmcmJnNhcC51aS5jb3JlLnRoZW1pbmcuUGFyYW1ldGVycyl7c2FwLnVpLmNvcmUudGhlbWluZy5QYXJhbWV0ZXJzLnJlc2V0KHRydWUpfXZhciBzPWsuTV9FVkVOVFMuVGhlbWVDaGFuZ2VkO3ZhciBvPXEuRXZlbnQocyk7by50aGVtZT1wP3AudGhlbWU6bnVsbDtxLmVhY2godGhpcy5tRWxlbWVudHMsZnVuY3Rpb24oaSxiKXtiLl9oYW5kbGVFdmVudChvKX0pO3Euc2FwLmFjdC5yZWZyZXNoKCk7dGhpcy5maXJlRXZlbnQocyxwKX07ay5wcm90b3R5cGUuYXR0YWNoTG9jYWxpemF0aW9uQ2hhbmdlZD1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoay5NX0VWRU5UUy5Mb2NhbGl6YXRpb25DaGFuZ2VkLGYsbCl9O2sucHJvdG90eXBlLmRldGFjaExvY2FsaXphdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KGsuTV9FVkVOVFMuTG9jYWxpemF0aW9uQ2hhbmdlZCxmLGwpfTtrLnByb3RvdHlwZS5maXJlTG9jYWxpemF0aW9uQ2hhbmdlZD1mdW5jdGlvbihtKXt2YXIgdD10aGlzLHM9ay5NX0VWRU5UUy5Mb2NhbGl6YXRpb25DaGFuZ2VkLGI9cS5FdmVudChzLHtjaGFuZ2VzOm19KSxBPXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QuX2hhbmRsZUxvY2FsaXphdGlvbkNoYW5nZSxmPVtdO3EuZWFjaChtLGZ1bmN0aW9uKGksdil7Zi5wdXNoKGkpfSk7cS5zYXAubG9nLmluZm8oImxvY2FsaXphdGlvbiBzZXR0aW5ncyBjaGFuZ2VkOiAiK2Yuam9pbigiLCIpLG51bGwsInNhcC51aS5jb3JlLkNvcmUiKTtxLmVhY2godGhpcy5vTW9kZWxzLGZ1bmN0aW9uKE4sTSl7aWYoTSYmTS5faGFuZGxlTG9jYWxpemF0aW9uQ2hhbmdlKXtNLl9oYW5kbGVMb2NhbGl6YXRpb25DaGFuZ2UoKX19KTtmdW5jdGlvbiBuKHApe3EuZWFjaCh0aGlzLm1VSUFyZWFzLGZ1bmN0aW9uKCl7QS5jYWxsKHRoaXMscCl9KTtxLmVhY2godGhpcy5tT2JqZWN0c1siY29tcG9uZW50Il0sZnVuY3Rpb24oKXtBLmNhbGwodGhpcyxwKX0pO3EuZWFjaCh0aGlzLm1FbGVtZW50cyxmdW5jdGlvbigpe0EuY2FsbCh0aGlzLHApfSl9bi5jYWxsKHRoaXMsMSk7bi5jYWxsKHRoaXMsMik7aWYobS5ydGwhPXVuZGVmaW5lZCl7cShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmF0dHIoImRpciIsbS5ydGw/InJ0bCI6Imx0ciIpO3RoaXMuX3VwZGF0ZVRoZW1lVXJscyh0aGlzLnNUaGVtZSk7cS5lYWNoKHRoaXMubVVJQXJlYXMsZnVuY3Rpb24oKXt0aGlzLmludmFsaWRhdGUoKX0pO3Euc2FwLmxvZy5pbmZvKCJSVEwgbW9kZSAiK20ucnRsPyJhY3RpdmF0ZWQiOiJkZWFjdGl2YXRlZCIpfXEuZWFjaCh0aGlzLm1FbGVtZW50cyxmdW5jdGlvbihpLG8pe3RoaXMuX2hhbmRsZUV2ZW50KGIpfSk7dGhpcy5maXJlRXZlbnQocyx7Y2hhbmdlczptfSl9O2sucHJvdG90eXBlLmF0dGFjaExpYnJhcnlDaGFuZ2VkPWZ1bmN0aW9uKGYsbCl7dGhpcy5hdHRhY2hFdmVudChrLk1fRVZFTlRTLkxpYnJhcnlDaGFuZ2VkLGYsbCl9O2sucHJvdG90eXBlLmRldGFjaExpYnJhcnlDaGFuZ2VkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudChrLk1fRVZFTlRTLkxpYnJhcnlDaGFuZ2VkLGYsbCl9O2sucHJvdG90eXBlLmZpcmVMaWJyYXJ5Q2hhbmdlZD1mdW5jdGlvbihwKXt0aGlzLmZpcmVFdmVudChrLk1fRVZFTlRTLkxpYnJhcnlDaGFuZ2VkLHApfTtrLnByb3RvdHlwZS5hcHBseUNoYW5nZXM9ZnVuY3Rpb24oKXt0aGlzLl9yZXJlbmRlckFsbFVJQXJlYXMoKX07ay5wcm90b3R5cGUucmVnaXN0ZXJFbGVtZW50Q2xhc3M9ZnVuY3Rpb24obSl7dmFyIG49bS5nZXROYW1lKCksbD1tLmdldExpYnJhcnlOYW1lKCl8fCIiLEw9dGhpcy5tTGlicmFyaWVzW2xdLGI9ZC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihtLmdldENsYXNzKCkucHJvdG90eXBlKSxmPWZhbHNlO2lmKCFMKXtMPXRoaXMubUxpYnJhcmllc1tsXT17ZGVwZW5kZW5jaWVzOltdLHR5cGVzOltdLGludGVyZmFjZXM6W10sY29udHJvbHM6W10sZWxlbWVudHM6W119fWlmKGIpe2lmKHEuaW5BcnJheShuLEwuY29udHJvbHMpPDApe0wuY29udHJvbHMucHVzaChuKTtmPXRydWV9fWVsc2V7aWYocS5pbkFycmF5KG4sTC5lbGVtZW50cyk8MCl7TC5lbGVtZW50cy5wdXNoKG4pO2Y9dHJ1ZX19aWYoZil7cS5zYXAubG9nLmRlYnVnKCJDbGFzcyAiK20uZ2V0TmFtZSgpKyIgcmVnaXN0ZXJlZCBmb3IgbGlicmFyeSAiK20uZ2V0TGlicmFyeU5hbWUoKSk7dGhpcy5maXJlTGlicmFyeUNoYW5nZWQoe25hbWU6bS5nZXROYW1lKCksc3RlcmVvdHlwZTptLmdldFN0ZXJlb3R5cGUoKSxvcGVyYXRpb246ImFkZCIsbWV0YWRhdGE6bX0pfX07ay5wcm90b3R5cGUucmVnaXN0ZXJFbGVtZW50PWZ1bmN0aW9uKG8pe3ZhciBiPXRoaXMuYnlJZChvLmdldElkKCkpO2lmKGImJmIhPT1vKXtpZih0aGlzLm9Db25maWd1cmF0aW9uLmdldE5vRHVwbGljYXRlSWRzKCkpe3Euc2FwLmxvZy5lcnJvcigiYWRkaW5nIGVsZW1lbnQgd2l0aCBkdXBsaWNhdGUgaWQgJyIrby5nZXRJZCgpKyInIik7dGhyb3cgbmV3IEVycm9yKCJFcnJvcjogYWRkaW5nIGVsZW1lbnQgd2l0aCBkdXBsaWNhdGUgaWQgJyIrby5nZXRJZCgpKyInIil9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiYWRkaW5nIGVsZW1lbnQgd2l0aCBkdXBsaWNhdGUgaWQgJyIrby5nZXRJZCgpKyInIil9fXRoaXMubUVsZW1lbnRzW28uZ2V0SWQoKV09b307ay5wcm90b3R5cGUuZGVyZWdpc3RlckVsZW1lbnQ9ZnVuY3Rpb24obyl7ZGVsZXRlIHRoaXMubUVsZW1lbnRzW28uZ2V0SWQoKV19O2sucHJvdG90eXBlLnJlZ2lzdGVyT2JqZWN0PWZ1bmN0aW9uKG8pe3ZhciBpPW8uZ2V0SWQoKSx0PW8uZ2V0TWV0YWRhdGEoKS5nZXRTdGVyZW90eXBlKCksYj10aGlzLmdldE9iamVjdCh0LGkpO2lmKGImJmIhPT1vKXtxLnNhcC5sb2cuZXJyb3IoImFkZGluZyBvYmplY3QgXCIiK3QrIlwiIHdpdGggZHVwbGljYXRlIGlkICciK2krIiciKTt0aHJvdyBuZXcgRXJyb3IoIkVycm9yOiBhZGRpbmcgb2JqZWN0IFwiIit0KyJcIiB3aXRoIGR1cGxpY2F0ZSBpZCAnIitpKyInIil9dGhpcy5tT2JqZWN0c1t0XVtpXT1vfTtrLnByb3RvdHlwZS5kZXJlZ2lzdGVyT2JqZWN0PWZ1bmN0aW9uKG8pe3ZhciBpPW8uZ2V0SWQoKSx0PW8uZ2V0TWV0YWRhdGEoKS5nZXRTdGVyZW90eXBlKCk7ZGVsZXRlIHRoaXMubU9iamVjdHNbdF1baV19O2sucHJvdG90eXBlLmJ5SWQ9ZnVuY3Rpb24oaSl7cmV0dXJuIGk9PW51bGw/dW5kZWZpbmVkOnRoaXMubUVsZW1lbnRzW2ldfTtrLnByb3RvdHlwZS5nZXRDb250cm9sPWsucHJvdG90eXBlLmJ5SWQ7ay5wcm90b3R5cGUuZ2V0RWxlbWVudEJ5SWQ9ay5wcm90b3R5cGUuYnlJZDtrLnByb3RvdHlwZS5nZXRPYmplY3Q9ZnVuY3Rpb24odCxpKXtyZXR1cm4gaT09bnVsbD91bmRlZmluZWQ6dGhpcy5tT2JqZWN0c1t0XSYmdGhpcy5tT2JqZWN0c1t0XVtpXX07ay5wcm90b3R5cGUuZ2V0Q29tcG9uZW50PWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLmdldE9iamVjdCgiY29tcG9uZW50IixpKX07ay5wcm90b3R5cGUuZ2V0VGVtcGxhdGU9ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0KCJ0ZW1wbGF0ZSIsaSl9O2sucHJvdG90eXBlLmdldFN0YXRpY0FyZWFSZWY9ZnVuY3Rpb24oKXt2YXIgcz0ic2FwLXVpLXN0YXRpYyI7dmFyIFM9cS5zYXAuZG9tQnlJZChzKTtpZighUyl7dmFyIGw9dGhpcy5nZXRDb25maWd1cmF0aW9uKCkuZ2V0UlRMKCk/InJpZ2h0IjoibGVmdCI7Uz1xKCI8RElWLz4iLHtpZDpzfSkuY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIikuY3NzKCJoZWlnaHQiLCIwIikuY3NzKCJ3aWR0aCIsIjAiKS5jc3MoIm92ZXJmbG93IiwiaGlkZGVuIikuY3NzKCJmbG9hdCIsbCkucHJlcGVuZFRvKGRvY3VtZW50LmJvZHkpWzBdO3RoaXMuY3JlYXRlVUlBcmVhKFMpLmJJbml0aWFsPWZhbHNlfXJldHVybiBTfTtrLnByb3RvdHlwZS5pc1N0YXRpY0FyZWFSZWY9ZnVuY3Rpb24obyl7cmV0dXJuIG8mJihvLmlkPT09InNhcC11aS1zdGF0aWMiKX07ay5fSV9JTlRFUlZBTD0yMDA7aC5wcm90b3R5cGUuSV9JTlRFUlZBTD1rLl9JX0lOVEVSVkFMO2sucHJvdG90eXBlLmF0dGFjaEludGVydmFsVGltZXI9ZnVuY3Rpb24oZixsKXtpZighdGhpcy5vVGltZWRUcmlnZ2VyKXtxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5JbnRlcnZhbFRyaWdnZXIiKTt0aGlzLm9UaW1lZFRyaWdnZXI9bmV3IHNhcC51aS5jb3JlLkludGVydmFsVHJpZ2dlcihrLl9JX0lOVEVSVkFMKX10aGlzLm9UaW1lZFRyaWdnZXIuYWRkTGlzdGVuZXIoZixsKX07ay5wcm90b3R5cGUuZGV0YWNoSW50ZXJ2YWxUaW1lcj1mdW5jdGlvbihmLGwpe2lmKHRoaXMub1RpbWVkVHJpZ2dlcil7dGhpcy5vVGltZWRUcmlnZ2VyLnJlbW92ZUxpc3RlbmVyKGYsbCl9fTtrLnByb3RvdHlwZS5hdHRhY2hDb250cm9sRXZlbnQ9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KGsuTV9FVkVOVFMuQ29udHJvbEV2ZW50LGYsbCl9O2sucHJvdG90eXBlLmRldGFjaENvbnRyb2xFdmVudD1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoay5NX0VWRU5UUy5Db250cm9sRXZlbnQsZixsKX07ay5wcm90b3R5cGUuZmlyZUNvbnRyb2xFdmVudD1mdW5jdGlvbihwKXt0aGlzLmZpcmVFdmVudChrLk1fRVZFTlRTLkNvbnRyb2xFdmVudCxwKX07ay5wcm90b3R5cGUuX2hhbmRsZUNvbnRyb2xFdmVudD1mdW5jdGlvbihvLHUpe3ZhciBiPXEuRXZlbnQoby50eXBlKTtxLmV4dGVuZChiLG8pO2Iub3JpZ2luYWxFdmVudD11bmRlZmluZWQ7dGhpcy5maXJlQ29udHJvbEV2ZW50KHsiYnJvd3NlckV2ZW50IjpiLCJ1aUFyZWEiOnV9KX07ay5wcm90b3R5cGUuZ2V0QXBwbGljYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gc2FwLnVpLmdldEFwcGxpY2F0aW9uJiZzYXAudWkuZ2V0QXBwbGljYXRpb24oKX07ay5wcm90b3R5cGUucmVnaXN0ZXJQbHVnaW49ZnVuY3Rpb24ocCl7aWYoIXApe3JldHVybn1mb3IodmFyIGk9MCxsPXRoaXMuYVBsdWdpbnMubGVuZ3RoO2k8bDtpKyspe2lmKHRoaXMuYVBsdWdpbnNbaV09PT1wKXtyZXR1cm59fXRoaXMuYVBsdWdpbnMucHVzaChwKTtpZih0aGlzLmJJbml0aWFsaXplZCYmcCYmcC5zdGFydFBsdWdpbil7cC5zdGFydFBsdWdpbih0aGlzKX19O2sucHJvdG90eXBlLnVucmVnaXN0ZXJQbHVnaW49ZnVuY3Rpb24ocCl7aWYoIXApe3JldHVybn12YXIgUD0tMTtmb3IodmFyIGk9dGhpcy5hUGx1Z2lucy5sZW5ndGg7aS0tO2k+PTApe2lmKHRoaXMuYVBsdWdpbnNbaV09PT1wKXtQPWk7YnJlYWt9fWlmKFA9PS0xKXtyZXR1cm59aWYodGhpcy5iSW5pdGlhbGl6ZWQmJnAmJnAuc3RvcFBsdWdpbil7cC5zdG9wUGx1Z2luKHRoaXMpfXRoaXMuYVBsdWdpbnMuc3BsaWNlKFAsMSl9O2sucHJvdG90eXBlLnN0YXJ0UGx1Z2lucz1mdW5jdGlvbigpe2Zvcih2YXIgaT0wLGw9dGhpcy5hUGx1Z2lucy5sZW5ndGg7aTxsO2krKyl7dmFyIHA9dGhpcy5hUGx1Z2luc1tpXTtpZihwJiZwLnN0YXJ0UGx1Z2luKXtwLnN0YXJ0UGx1Z2luKHRoaXMsdHJ1ZSl9fX07ay5wcm90b3R5cGUuc3RvcFBsdWdpbnM9ZnVuY3Rpb24oKXtmb3IodmFyIGk9MCxsPXRoaXMuYVBsdWdpbnMubGVuZ3RoO2k8bDtpKyspe3ZhciBwPXRoaXMuYVBsdWdpbnNbaV07aWYocCYmcC5zdG9wUGx1Z2luKXtwLnN0b3BQbHVnaW4odGhpcyl9fX07ay5wcm90b3R5cGUuc2V0TW9kZWw9ZnVuY3Rpb24obSxuKXtpZighbSYmdGhpcy5vTW9kZWxzW25dKXtkZWxldGUgdGhpcy5vTW9kZWxzW25dO3EuZWFjaCh0aGlzLm1VSUFyZWFzLGZ1bmN0aW9uKGksdSl7ZGVsZXRlIHUub1Byb3BhZ2F0ZWRQcm9wZXJ0aWVzLm9Nb2RlbHNbbl07dS5wcm9wYWdhdGVQcm9wZXJ0aWVzKG4pfSl9ZWxzZSBpZihtJiZtIT09dGhpcy5vTW9kZWxzW25dKXt0aGlzLm9Nb2RlbHNbbl09bTtxLmVhY2godGhpcy5tVUlBcmVhcyxmdW5jdGlvbihpLHUpe3Uub1Byb3BhZ2F0ZWRQcm9wZXJ0aWVzLm9Nb2RlbHNbbl09bTt1LnByb3BhZ2F0ZVByb3BlcnRpZXMobil9KX1lbHNle31yZXR1cm4gdGhpc307ay5wcm90b3R5cGUuZ2V0TW9kZWw9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMub01vZGVsc1tuXX07ay5wcm90b3R5cGUuaGFzTW9kZWw9ZnVuY3Rpb24oKXtyZXR1cm4hcS5pc0VtcHR5T2JqZWN0KHRoaXMub01vZGVscyl9O2sucHJvdG90eXBlLmdldEV2ZW50QnVzPWZ1bmN0aW9uKCl7aWYoIXRoaXMub0V2ZW50QnVzKXtxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5FdmVudEJ1cyIpO3RoaXMub0V2ZW50QnVzPW5ldyBzYXAudWkuY29yZS5FdmVudEJ1cygpfXJldHVybiB0aGlzLm9FdmVudEJ1c307ay5wcm90b3R5cGUuYXR0YWNoVmFsaWRhdGlvbkVycm9yPWZ1bmN0aW9uKGYsbCl7dGhpcy5hdHRhY2hFdmVudChrLk1fRVZFTlRTLlZhbGlkYXRpb25FcnJvcixmLGwpO3JldHVybiB0aGlzfTtrLnByb3RvdHlwZS5kZXRhY2hWYWxpZGF0aW9uRXJyb3I9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KGsuTV9FVkVOVFMuVmFsaWRhdGlvbkVycm9yLGYsbCk7cmV0dXJuIHRoaXN9O2sucHJvdG90eXBlLmF0dGFjaFBhcnNlRXJyb3I9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KGsuTV9FVkVOVFMuUGFyc2VFcnJvcixmLGwpO3JldHVybiB0aGlzfTtrLnByb3RvdHlwZS5kZXRhY2hQYXJzZUVycm9yPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudChrLk1fRVZFTlRTLlBhcnNlRXJyb3IsZixsKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuYXR0YWNoRm9ybWF0RXJyb3I9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KGsuTV9FVkVOVFMuRm9ybWF0RXJyb3IsZixsKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuZGV0YWNoRm9ybWF0RXJyb3I9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KGsuTV9FVkVOVFMuRm9ybWF0RXJyb3IsZixsKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuYXR0YWNoVmFsaWRhdGlvblN1Y2Nlc3M9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KGsuTV9FVkVOVFMuVmFsaWRhdGlvblN1Y2Nlc3MsZixsKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuZGV0YWNoVmFsaWRhdGlvblN1Y2Nlc3M9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KGsuTV9FVkVOVFMuVmFsaWRhdGlvblN1Y2Nlc3MsZixsKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuZmlyZVBhcnNlRXJyb3I9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoay5NX0VWRU5UUy5QYXJzZUVycm9yLEEpO3JldHVybiB0aGlzfTtrLnByb3RvdHlwZS5maXJlVmFsaWRhdGlvbkVycm9yPWZ1bmN0aW9uKEEpe3RoaXMuZmlyZUV2ZW50KGsuTV9FVkVOVFMuVmFsaWRhdGlvbkVycm9yLEEpO3JldHVybiB0aGlzfTtrLnByb3RvdHlwZS5maXJlRm9ybWF0RXJyb3I9ZnVuY3Rpb24oQSl7dGhpcy5maXJlRXZlbnQoay5NX0VWRU5UUy5Gb3JtYXRFcnJvcixBKTtyZXR1cm4gdGhpc307ay5wcm90b3R5cGUuZmlyZVZhbGlkYXRpb25TdWNjZXNzPWZ1bmN0aW9uKEEpe3RoaXMuZmlyZUV2ZW50KGsuTV9FVkVOVFMuVmFsaWRhdGlvblN1Y2Nlc3MsQSk7cmV0dXJuIHRoaXN9O2sucHJvdG90eXBlLmlzTW9iaWxlPWZ1bmN0aW9uKCl7cmV0dXJuIEQuYnJvd3Nlci5tb2JpbGV9O2lmKCF3aW5kb3cuc2FwLnVpLmdldENvcmUpeyhmdW5jdGlvbigpe25ldyBrKCl9KCkpfXNhcC51aS5zZXRSb290PWZ1bmN0aW9uKG8sYil7c2FwLnVpLmdldENvcmUoKS5zZXRSb290KG8sYil9O3JldHVybiBrfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmFwcC5BcHBsaWNhdGlvbicpKXsNCi8qCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmFwcC5BcHBsaWNhdGlvbicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9hcHAvQXBwbGljYXRpb24iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0FwcGxpY2F0aW9uTWV0YWRhdGEnLCdzYXAvdWkvY29yZS9Db21wb25lbnQnXSxmdW5jdGlvbihxLEEsQyl7InVzZSBzdHJpY3QiO3ZhciBhPUMuZXh0ZW5kKCJzYXAudWkuYXBwLkFwcGxpY2F0aW9uIix7bWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxwcm9wZXJ0aWVzOntyb290OiJzdHJpbmciLGNvbmZpZzoiYW55In0sYWdncmVnYXRpb25zOntyb290Q29tcG9uZW50Ont0eXBlOiJzYXAudWkuY29yZS5VSUNvbXBvbmVudCIsbXVsdGlwbGU6ZmFsc2V9fSxwdWJsaWNNZXRob2RzOlsiZ2V0VmlldyJdLGRlcHJlY2F0ZWQ6dHJ1ZX0sY29uc3RydWN0b3I6ZnVuY3Rpb24oaSxzKXtpZih0aGlzLm9uRXJyb3Ipe3RoaXMub25XaW5kb3dFcnJvcj10aGlzLm9uRXJyb3J9aWYodGhpcy5vbkJlZm9yZUV4aXQpe3RoaXMub25XaW5kb3dCZWZvcmVVbmxvYWQ9dGhpcy5vbkJlZm9yZUV4aXR9aWYodGhpcy5vbkV4aXQpe3RoaXMub25XaW5kb3dVbmxvYWQ9dGhpcy5vbkV4aXR9Qy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoc2FwLnVpLmdldEFwcGxpY2F0aW9uKXt0aHJvdyBuZXcgRXJyb3IoIk9ubHkgb25lIGluc3RhbmNlIG9mIHNhcC51aS5hcHAuQXBwbGljYXRpb24gaXMgYWxsb3dlZCIpfXNhcC51aS5nZXRBcHBsaWNhdGlvbj1xLnByb3h5KHRoaXMuX2dldEluc3RhbmNlLHRoaXMpO3NhcC51aS5nZXRDb3JlKCkuYXR0YWNoSW5pdChxLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5faW5pdFJvb3RDb21wb25lbnQoKTt0aGlzLm1haW4oKX0sdGhpcykpfSxfaW5pdFJvb3RDb21wb25lbnQ6ZnVuY3Rpb24oKXt2YXIgcj10aGlzLmNyZWF0ZVJvb3RDb21wb25lbnQoKTtpZihyKXt0aGlzLnNldFJvb3RDb21wb25lbnQocik7dmFyIGM9bmV3IHNhcC51aS5jb3JlLkNvbXBvbmVudENvbnRhaW5lcih7Y29tcG9uZW50OnJ9KTtjLnBsYWNlQXQodGhpcy5nZXRSb290KCl8fGRvY3VtZW50LmJvZHkpfX0sY3JlYXRlUm9vdENvbXBvbmVudDpmdW5jdGlvbigpe3ZhciByPXRoaXMuZ2V0TWV0YWRhdGEoKS5nZXRSb290Q29tcG9uZW50KCk7dmFyIFI7aWYocil7Uj1zYXAudWkuY29tcG9uZW50KHtuYW1lOnJ9KX1yZXR1cm4gUn0sZ2V0VmlldzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFJvb3RDb21wb25lbnQoKX0sX2dldEluc3RhbmNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LG1haW46ZnVuY3Rpb24oKXt9LG9uQmVmb3JlRXhpdDpmdW5jdGlvbigpe30sb25FeGl0OmZ1bmN0aW9uKCl7fSxvbkVycm9yOm51bGwsc2V0Q29uZmlnOmZ1bmN0aW9uKGMpe2lmKHR5cGVvZiBjPT09InN0cmluZyIpe3ZhciB1PWM7dmFyIGM9bmV3IHNhcC51aS5tb2RlbC5qc29uLkpTT05Nb2RlbCgpO3ZhciByPXEuc2FwLnNqYXgoe3VybDp1LGRhdGFUeXBlOidqc29uJ30pO2lmKHIuc3VjY2Vzcyl7Yy5zZXREYXRhKHIuZGF0YSl9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIkNvdWxkIG5vdCBsb2FkIGNvbmZpZyBmaWxlOiAiK3UpfX1pZih0eXBlb2YgYz09PSJvYmplY3QiJiYhYyBpbnN0YW5jZW9mIHNhcC51aS5tb2RlbC5Nb2RlbCl7Yz1uZXcgc2FwLnVpLm1vZGVsLkpTT05Nb2RlbChjKX10aGlzLnNldFByb3BlcnR5KCJjb25maWciLGMpfSxkZXN0cm95OmZ1bmN0aW9uKHMpe2RlbGV0ZSBzYXAudWkuZ2V0QXBwbGljYXRpb247Qy5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxBKTtyZXR1cm4gYX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkFwcENhY2hlQnVzdGVyJykpew0KLyohCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpCiAqIChjKSBDb3B5cmlnaHQgMjAwOS0yMDE0IFNBUCBBRyBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIAogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0LgogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuQXBwQ2FjaGVCdXN0ZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9BcHBDYWNoZUJ1c3RlciIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJy4vQ29yZScsJ3NhcC91aS90aGlyZHBhcnR5L1VSSSddLGZ1bmN0aW9uKHEsQyxVKXsidXNlIHN0cmljdCI7dmFyIGM9c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCk7dmFyIGw9Yy5nZXRMYW5ndWFnZSgpO3ZhciBzPWMuZ2V0QXBwQ2FjaGVCdXN0ZXJNb2RlKCk9PT0ic3luYyI7dmFyIGI9Yy5nZXRBcHBDYWNoZUJ1c3Rlck1vZGUoKT09PSJiYXRjaCI7dmFyIGk9e307dmFyIGE9cS5hamF4O3ZhciBJPXEuc2FwLmluY2x1ZGVTY3JpcHQ7dmFyIGY9cS5zYXAuaW5jbHVkZVN0eWxlU2hlZXQ7dmFyIHY9c2FwLnVpLmJhc2UuTWFuYWdlZE9iamVjdC5wcm90b3R5cGUudmFsaWRhdGVQcm9wZXJ0eTt2YXIgTD1kb2N1bWVudC5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoL1w/Lip8Iy4qL2csIiIpO3ZhciBCPVVSSSgiLi8iKS5hYnNvbHV0ZVRvKEwpO3ZhciBBPUIudG9TdHJpbmcoKTt2YXIgdT1VUkkocS5zYXAuZ2V0TW9kdWxlUGF0aCgiIiwiLy4uLyIpKTt2YXIgbz11LnRvU3RyaW5nKCk7aWYodS5pcygicmVsYXRpdmUiKSl7dT11LmFic29sdXRlVG8oTCl9dmFyIGQ9dS5ub3JtYWxpemUoKS50b1N0cmluZygpO3ZhciByPVVSSSgicmVzb3VyY2VzIikuYWJzb2x1dGVUbyhkKS50b1N0cmluZygpO3ZhciBGPW5ldyBSZWdFeHAoIl4iK3Euc2FwLmVzY2FwZVJlZ0V4cChyKSk7dmFyIEU9ZnVuY3Rpb24oZSl7aWYoZS5sZW5ndGg+MCYmZS5zbGljZSgtMSkhPT0iLyIpe2UrPSIvIn1yZXR1cm4gZX07dmFyIFI9ZnVuY3Rpb24oZCxTKXt2YXIgZTtpZihxLmlzQXJyYXkoZCkmJiFiKXtxLmVhY2goZCxmdW5jdGlvbih4LHkpe1IoeSxTKX0pfWVsc2UgaWYocS5pc0FycmF5KGQpJiZiKXt2YXIgaD1FKGRbMF0pO3ZhciBqPVtdO3Euc2FwLmxvZy5kZWJ1Zygic2FwLnVpLmNvcmUuQXBwQ2FjaGVCdXN0ZXIucmVnaXN0ZXIoXCIiK2grIlwiKTsgLy8gQkFUQ0ggTU9ERSEiKTt2YXIgaz1nLm5vcm1hbGl6ZVVSTChoKTtxLnNhcC5sb2cuZGVidWcoIiAgLS0+IG5vcm1hbGl6ZWQgdG86IFwiIitrKyJcIiIpO3EuZWFjaChkLGZ1bmN0aW9uKHgseSl7dmFyIG09RSh5KTt2YXIgej1nLm5vcm1hbGl6ZVVSTChtKTtpZighaVtuXSl7ai5wdXNoKHopfX0pO2lmKGoubGVuZ3RoPjApe3ZhciBtPWsrInNhcC11aS1jYWNoZWJ1c3Rlci1pbmZvLmpzb24/c2FwLXVpLWxhbmd1YWdlPSIrbDtlPXt1cmw6bSx0eXBlOiJQT1NUIixhc3luYzohcyYmISFTLGRhdGFUeXBlOiJqc29uIixjb250ZW50VHlwZToidGV4dC9wbGFpbiIsZGF0YTpqLmpvaW4oIlxuIiksc3VjY2VzczpmdW5jdGlvbih4KXtxLmV4dGVuZChpLHgpfSxlcnJvcjpmdW5jdGlvbigpe3Euc2FwLmxvZy5lcnJvcigiRmFpbGVkIHRvIGJhdGNoIGxvYWQgQXBwQ2FjaGVCdXN0ZXIgaW5kZXggZmlsZSBmcm9tOiBcIiIrbSsiXCIuIil9fX19ZWxzZXtkPUUoZCk7cS5zYXAubG9nLmRlYnVnKCJzYXAudWkuY29yZS5BcHBDYWNoZUJ1c3Rlci5yZWdpc3RlcihcIiIrZCsiXCIpOyIpO3ZhciBuPWcubm9ybWFsaXplVVJMKGQpO3Euc2FwLmxvZy5kZWJ1ZygiICAtLT4gbm9ybWFsaXplZCB0bzogXCIiK24rIlwiIik7aWYoIWlbbl0pe3ZhciBtPW4rInNhcC11aS1jYWNoZWJ1c3Rlci1pbmZvLmpzb24/c2FwLXVpLWxhbmd1YWdlPSIrbDtlPXt1cmw6bSxhc3luYzohcyYmISFTLGRhdGFUeXBlOiJqc29uIixzdWNjZXNzOmZ1bmN0aW9uKHgpe2lbbl09eH0sZXJyb3I6ZnVuY3Rpb24oKXtxLnNhcC5sb2cuZXJyb3IoIkZhaWxlZCB0byBsb2FkIEFwcENhY2hlQnVzdGVyIGluZGV4IGZpbGUgZnJvbTogXCIiK20rIlwiLiIpfX19fWlmKGUpe2lmKGUuYXN5bmMpe3ZhciBwPVMuc3RhcnRUYXNrKCJsb2FkICIrbSk7dmFyIHQ9ZS5zdWNjZXNzLHc9ZS5lcnJvcjtxLmV4dGVuZChlLHtzdWNjZXNzOmZ1bmN0aW9uKHgpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpO1MuZmluaXNoVGFzayhwKX0sZXJyb3I6ZnVuY3Rpb24oKXt3LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtTLmZpbmlzaFRhc2socCxmYWxzZSl9fSl9cS5zYXAubG9nLmluZm8oIkxvYWRpbmcgQXBwQ2FjaGVCdXN0ZXIgaW5kZXggZmlsZSBmcm9tOiBcIiIrbSsiXCIuIik7cS5hamF4KGUpfX07dmFyIGc9e2Jvb3Q6ZnVuY3Rpb24oUyl7dmFyIGU9Yy5nZXRBcHBDYWNoZUJ1c3RlcigpO2lmKGUmJmUubGVuZ3RoPjApe2U9ZS5zbGljZSgpO3ZhciBoPXRydWU7dmFyIFY9U3RyaW5nKGVbMF0pLnRvTG93ZXJDYXNlKCk7aWYoZS5sZW5ndGg9PT0xKXtpZihWPT09InRydWUifHxWPT09IngiKXt2YXIgdT1VUkkobyk7ZT11LmlzKCJyZWxhdGl2ZSIpP1t1LnRvU3RyaW5nKCldOltdfWVsc2UgaWYoVj09PSJmYWxzZSIpe2g9ZmFsc2V9fWlmKGgpe2cuaW5pdCgpO1IoZSxTKX19fSxpbml0OmZ1bmN0aW9uKCl7dmFyIGg9Zy5jb252ZXJ0VVJMO3ZhciBuPWcubm9ybWFsaXplVVJMO3ZhciBqPWZ1bmN0aW9uKGUpe2lmKGUmJnR5cGVvZihlKT09PSJzdHJpbmciKXtlPW4oZSk7cmV0dXJuIWUubWF0Y2goRil9cmV0dXJuIGZhbHNlfTtxLmFqYXg9ZnVuY3Rpb24oZSxrKXtpZihlJiZlLnVybCYmaihlLnVybCkpe2UudXJsPWgoZS51cmwpfXJldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cS5zYXAuaW5jbHVkZVNjcmlwdD1mdW5jdGlvbihlLGspe3ZhciBtPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpO2lmKGoobVswXSkpe21bMF09aChtWzBdKX1yZXR1cm4gSS5hcHBseSh0aGlzLG0pfTtxLnNhcC5pbmNsdWRlU3R5bGVTaGVldD1mdW5jdGlvbihlLGspe3ZhciBtPUFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpO2lmKGoobVswXSkpe21bMF09aChtWzBdKX1yZXR1cm4gZi5hcHBseSh0aGlzLG0pfTtzYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LnByb3RvdHlwZS52YWxpZGF0ZVByb3BlcnR5PWZ1bmN0aW9uKHAsVil7dmFyIG09dGhpcy5nZXRNZXRhZGF0YSgpLFA9bS5nZXRBbGxQcm9wZXJ0aWVzKClbcF0saztpZihQJiZQLnR5cGU9PT0ic2FwLnVpLmNvcmUuVVJJIil7az1BcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkoYXJndW1lbnRzKTt0cnl7aWYoaihrWzFdKSl7a1sxXT1oKGtbMV0pfX1jYXRjaChlKXt9fXJldHVybiB2LmFwcGx5KHRoaXMsa3x8YXJndW1lbnRzKX19LGV4aXQ6ZnVuY3Rpb24oKXtxLmFqYXg9YTtxLnNhcC5pbmNsdWRlU2NyaXB0PUk7cS5zYXAuaW5jbHVkZVN0eWxlU2hlZXQ9ZjtzYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LnByb3RvdHlwZS52YWxpZGF0ZVByb3BlcnR5PXY7aT17fX0scmVnaXN0ZXI6ZnVuY3Rpb24oZCl7UihkKX0sY29udmVydFVSTDpmdW5jdGlvbihlKXtxLnNhcC5sb2cuZGVidWcoInNhcC51aS5jb3JlLkFwcENhY2hlQnVzdGVyLmNvbnZlcnRVUkwoXCIiK2UrIlwiKTsiKTtpZihpJiZlKXt2YXIgbj1nLm5vcm1hbGl6ZVVSTChlKTtxLnNhcC5sb2cuZGVidWcoIiAgLS0+IG5vcm1hbGl6ZWQgdG86IFwiIituKyJcIiIpO2lmKG4mJmcuaGFuZGxlVVJMKG4pKXtxLmVhY2goaSxmdW5jdGlvbihkLG0pe3ZhciBoO2lmKGQmJm4ubGVuZ3RoPj1kLmxlbmd0aCYmbi5zbGljZSgwLGQubGVuZ3RoKT09PWQpe2g9bi5zbGljZShkLmxlbmd0aCk7aWYobVtoXSl7ZT1kKyJ+IittW2hdKyJ+LyIraDtxLnNhcC5sb2cuZGVidWcoIiAgPT0+IHJldHVybiBcIiIrZSsiXCI7Iik7cmV0dXJuIGZhbHNlfX19KX19cmV0dXJuIGV9LG5vcm1hbGl6ZVVSTDpmdW5jdGlvbihlKXt2YXIgdT1VUkkoZXx8Ii4vIik7aWYodS5pcygicmVsYXRpdmUiKSl7dT11LmFic29sdXRlVG8oTCl9cmV0dXJuIHUubm9ybWFsaXplUHJvdG9jb2woKS5ub3JtYWxpemVIb3N0bmFtZSgpLm5vcm1hbGl6ZVBvcnQoKS5ub3JtYWxpemVQYXRoKCkudG9TdHJpbmcoKX0saGFuZGxlVVJMOmZ1bmN0aW9uKGUpe3JldHVybiB0cnVlfX07cmV0dXJuIGd9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24nKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24iLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0NvcmUnXSxmdW5jdGlvbihxLEMpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT0ic2FwLnVpLnZpZXdSZXBsYWNlbWVudHMiLGI9InNhcC51aS52aWV3RXh0ZW5zaW9ucyIsYz0ic2FwLnVpLnZpZXdNb2RpZmljYXRpb25zIixkPSJzYXAudWkuY29udHJvbGxlckV4dGVuc2lvbnMiO3ZhciBtPXt9O2Z1bmN0aW9uIGYodCxnKXtxLmVhY2gobSxmdW5jdGlvbihuLG8pe2lmKG8mJm9bdF0pe2lmKGcob1t0XSkpe3JldHVybiBmYWxzZX19fSl9O3ZhciBlPXtsb2c6ZnVuY3Rpb24oKXtpZih3aW5kb3cuY29uc29sZSl7d2luZG93LmNvbnNvbGUubG9nKG0pfX0sYWN0aXZhdGVGb3JDb21wb25lbnQ6ZnVuY3Rpb24ocyl7cS5zYXAubG9nLmluZm8oIkN1c3RvbWl6aW5nQ29uZmlndXJhdGlvbjogYWN0aXZhdGVGb3JDb21wb25lbnQoJyIrcysiJykiKTt2YXIgRj1zKyIuQ29tcG9uZW50IjtxLnNhcC5yZXF1aXJlKEYpO3ZhciBvPXEuc2FwLmdldE9iamVjdChGKS5nZXRNZXRhZGF0YSgpLmdldEN1c3RvbWl6aW5nKCk7bVtzXT1vfSxkZWFjdGl2YXRlRm9yQ29tcG9uZW50OmZ1bmN0aW9uKHMpe3Euc2FwLmxvZy5pbmZvKCJDdXN0b21pemluZ0NvbmZpZ3VyYXRpb246IGRlYWN0aXZhdGVGb3JDb21wb25lbnQoJyIrcysiJykiKTtkZWxldGUgbVtzXX0sZ2V0Vmlld1JlcGxhY2VtZW50OmZ1bmN0aW9uKHYpe3ZhciByPXVuZGVmaW5lZDtmKGEsZnVuY3Rpb24obyl7cj1vW3ZdO3JldHVybiEhcn0pO3JldHVybiByfSxnZXRWaWV3RXh0ZW5zaW9uOmZ1bmN0aW9uKHYsRSl7dmFyIHI9dW5kZWZpbmVkO2YoYixmdW5jdGlvbihvKXtyPW9bdl0mJm9bdl1bRV07cmV0dXJuISFyfSk7cmV0dXJuIHJ9LGdldENvbnRyb2xsZXJFeHRlbnNpb246ZnVuY3Rpb24ocyl7dmFyIHI9dW5kZWZpbmVkO2YoZCxmdW5jdGlvbihvKXtyPW9bc107cmV0dXJuISFyfSk7cmV0dXJuIHJ9LGdldEN1c3RvbVByb3BlcnRpZXM6ZnVuY3Rpb24odixzKXt2YXIgUz17fTtmKGMsZnVuY3Rpb24obyl7dmFyIGc9b1t2XSYmb1t2XVtzXTt2YXIgdT17fTtpZihnKXtxLmVhY2goZyxmdW5jdGlvbihuLFYpe2lmKG49PT0idmlzaWJsZSIpe3Vbbl09VjtxLnNhcC5sb2cuaW5mbygiQ3VzdG9taXppbmc6IGN1c3RvbSB2YWx1ZSBmb3IgcHJvcGVydHkgJyIrbisiJyBvZiBjb250cm9sICciK3MrIicgaW4gVmlldyAnIit2KyInIGFwcGxpZWQ6ICIrVil9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiQ3VzdG9taXppbmc6IGN1c3RvbSB2YWx1ZSBmb3IgcHJvcGVydHkgJyIrbisiJyBvZiBjb250cm9sICciK3MrIicgaW4gVmlldyAnIit2KyInIGlnbm9yZWQ6IG9ubHkgdGhlICd2aXNpYmxlJyBwcm9wZXJ0eSBjYW4gYmUgY3VzdG9taXplZC4iKX19KTtxLmV4dGVuZChTLHUpfX0pO3JldHVybiBTfX07aWYoc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0RGlzYWJsZUN1c3RvbWl6aW5nKCkpe3Euc2FwLmxvZy5pbmZvKCJDdXN0b21pemluZ0NvbmZpZ3VyYXRpb246IGRpc2FibGluZyBDdXN0b21pemluZyBub3ciKTtxLmVhY2goZSxmdW5jdGlvbihuLEEpe2lmKHR5cGVvZiBBPT09ImZ1bmN0aW9uIil7ZVtuXT1mdW5jdGlvbigpe319fSl9cmV0dXJuIGV9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3JTdXBwb3J0Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yU3VwcG9ydCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0xvY2FsQnVzeUluZGljYXRvclN1cHBvcnQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0VsZW1lbnQnXSxmdW5jdGlvbihxLEUpeyJ1c2Ugc3RyaWN0Ijt2YXIgTD1mdW5jdGlvbigpe2lmKHRoaXM9PT1zYXAudWkuY29yZS5Db250cm9sLnByb3RvdHlwZSl7dGhpcy5zZXREZWxheT1mdW5jdGlvbihkKXt0aGlzLnNldEJ1c3lJbmRpY2F0b3JEZWxheShkKX19ZWxzZXtxLnNhcC5sb2cuZXJyb3IoIk9ubHkgY29udHJvbHMgY2FuIHVzZSB0aGUgTG9jYWxCdXN5SW5kaWNhdG9yIix0aGlzKX19O3JldHVybiBMfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUubGlicmFyeScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLmxpYnJhcnknKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9saWJyYXJ5IixbJy4vQ29yZSddLGZ1bmN0aW9uKCl7c2FwLnVpLmdldENvcmUoKS5pbml0TGlicmFyeSh7bmFtZToic2FwLnVpLmNvcmUiLHR5cGVzOlsic2FwLnVpLmNvcmUuQWNjZXNzaWJsZVJvbGUiLCJzYXAudWkuY29yZS5CYXJDb2xvciIsInNhcC51aS5jb3JlLkNTU0NvbG9yIiwic2FwLnVpLmNvcmUuQ1NTU2l6ZSIsInNhcC51aS5jb3JlLkNTU1NpemVTaG9ydEhhbmQiLCJzYXAudWkuY29yZS5Db2xsaXNpb24iLCJzYXAudWkuY29yZS5EZXNpZ24iLCJzYXAudWkuY29yZS5Eb2NrIiwic2FwLnVpLmNvcmUuSG9yaXpvbnRhbEFsaWduIiwic2FwLnVpLmNvcmUuSUQiLCJzYXAudWkuY29yZS5JY29uQ29sb3IiLCJzYXAudWkuY29yZS5JbWVNb2RlIiwic2FwLnVpLmNvcmUuTWVzc2FnZVR5cGUiLCJzYXAudWkuY29yZS5PcGVuU3RhdGUiLCJzYXAudWkuY29yZS5QZXJjZW50YWdlIiwic2FwLnVpLmNvcmUuU2Nyb2xsQmFyQWN0aW9uIiwic2FwLnVpLmNvcmUuU2Nyb2xsaW5nIiwic2FwLnVpLmNvcmUuVGV4dEFsaWduIiwic2FwLnVpLmNvcmUuVGV4dERpcmVjdGlvbiIsInNhcC51aS5jb3JlLlRpdGxlTGV2ZWwiLCJzYXAudWkuY29yZS5VUkkiLCJzYXAudWkuY29yZS5WYWx1ZVN0YXRlIiwic2FwLnVpLmNvcmUuVmVydGljYWxBbGlnbiIsInNhcC51aS5jb3JlLldyYXBwaW5nIiwiYW55IiwiYm9vbGVhbiIsImZsb2F0IiwiaW50Iiwic2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlIiwib2JqZWN0Iiwic2FwLnVpLmNvcmUucm91dGluZy5IaXN0b3J5RGlyZWN0aW9uIiwic3RyaW5nIiwidm9pZCJdLGludGVyZmFjZXM6WyJzYXAudWkuY29yZS5MYWJlbCIsInNhcC51aS5jb3JlLlBvcHVwSW50ZXJmYWNlIl0sY29udHJvbHM6WyJzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXIiLCJzYXAudWkuY29yZS5Db250cm9sIiwic2FwLnVpLmNvcmUuSFRNTCIsInNhcC51aS5jb3JlLkljb24iLCJzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3IiLCJzYXAudWkuY29yZS5TY3JvbGxCYXIiLCJzYXAudWkuY29yZS5Ub29sdGlwQmFzZSIsInNhcC51aS5jb3JlLlVJQ29tcG9uZW50Iiwic2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3Iiwic2FwLnVpLmNvcmUubXZjLkpTT05WaWV3Iiwic2FwLnVpLmNvcmUubXZjLkpTVmlldyIsInNhcC51aS5jb3JlLm12Yy5UZW1wbGF0ZVZpZXciLCJzYXAudWkuY29yZS5tdmMuVmlldyIsInNhcC51aS5jb3JlLm12Yy5YTUxWaWV3Iiwic2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50Iiwic2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZSIsInNhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sIl0sZWxlbWVudHM6WyJzYXAudWkuY29yZS5DdXN0b21EYXRhIiwic2FwLnVpLmNvcmUuRWxlbWVudCIsInNhcC51aS5jb3JlLkl0ZW0iLCJzYXAudWkuY29yZS5MYXlvdXREYXRhIiwic2FwLnVpLmNvcmUuTGlzdEl0ZW0iLCJzYXAudWkuY29yZS5NZXNzYWdlIiwic2FwLnVpLmNvcmUuU2VwYXJhdG9ySXRlbSIsInNhcC51aS5jb3JlLlRpdGxlIiwic2FwLnVpLmNvcmUuVmFyaWFudExheW91dERhdGEiLCJzYXAudWkuY29yZS5zZWFyY2guT3BlblNlYXJjaFByb3ZpZGVyIiwic2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyIiwic2FwLnVpLmNvcmUudG1wbC5ET01BdHRyaWJ1dGUiXSx2ZXJzaW9uOiIxLjIwLjQifSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvQWNjZXNzaWJsZVJvbGUiLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLkFjY2Vzc2libGVSb2xlPXtOb25lOiJOb25lIixBbGVydDoiQWxlcnQiLEFsZXJ0RGlhbG9nOiJBbGVydERpYWxvZyIsQXBwbGljYXRpb246IkFwcGxpY2F0aW9uIixCYW5uZXI6IkJhbm5lciIsQnV0dG9uOiJCdXR0b24iLENoZWNrYm94OiJDaGVja2JveCIsQ29sdW1uSGVhZGVyOiJDb2x1bW5IZWFkZXIiLENvbWJvYm94OiJDb21ib2JveCIsDQovKioNCiAgICAgKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY29udGVudCBvbiB0aGUgcGFnZS4gRXhhbXBsZXMgYXJlIGZvb3Rub3RlcywgY29weXJpZ2h0cywgb3IgbGlua3MgdG8gcHJpdmFjeSBzdGF0ZW1lbnRzLg0KICAgICAqICANCiAgICAgKiBAcHVibGljDQogICAgICovDQpDb250ZW50SW5mbzoiQ29udGVudEluZm8iLERlZmluaXRpb246IkRlZmluaXRpb24iLERlc2NyaXB0aW9uOiJEZXNjcmlwdGlvbiIsRGlhbG9nOiJEaWFsb2ciLERpcmVjdG9yeToiRGlyZWN0b3J5IixEb2N1bWVudDoiRG9jdW1lbnQiLEdyaWQ6IkdyaWQiLEdyaWRDZWxsOiJHcmlkQ2VsbCIsR3JvdXA6Ikdyb3VwIixIZWFkaW5nOiJIZWFkaW5nIixJbWc6IkltZyIsTGluazoiTGluayIsTGlzdDoiTGlzdCIsTGlzdGJveDoiTGlzdGJveCIsTGlzdEl0ZW06Ikxpc3RJdGVtIixMb2c6IkxvZyIsTWFpbjoiTWFpbiIsTWFycXVlZToiTWFycXVlZSIsTWVudToiTWVudSIsTWVudWJhcjoiTWVudWJhciIsTWVudUl0ZW06Ik1lbnVJdGVtIixNZW51SXRlbUNoZWNrYm94OiJNZW51SXRlbUNoZWNrYm94IixNZW51SXRlbVJhZGlvOiJNZW51SXRlbVJhZGlvIixOYXZpZ2F0aW9uOiJOYXZpZ2F0aW9uIixOb3RlOiJOb3RlIixPcHRpb246Ik9wdGlvbiIsUHJlc2VudGF0aW9uOiJQcmVzZW50YXRpb24iLFByb2dyZXNzQmFyOiJQcm9ncmVzc0JhciIsUmFkaW86IlJhZGlvIixSYWRpb0dyb3VwOiJSYWRpb0dyb3VwIixSZWdpb246IlJlZ2lvbiIsUm93OiJSb3ciLFJvd0hlYWRlcjoiUm93SGVhZGVyIixTZWFyY2g6IlNlYXJjaCIsU2Vjb25kYXJ5OiJTZWNvbmRhcnkiLFNlZUFsc286IlNlZUFsc28iLFNlcGFyYXRvcjoiU2VwYXJhdG9yIixTbGlkZXI6IlNsaWRlciIsU3BpbkJ1dHRvbjoiU3BpbkJ1dHRvbiIsU3RhdHVzOiJTdGF0dXMiLFRhYjoiVGFiIixUYWJsaXN0OiJUYWJsaXN0IixUYWJwYW5lbDoiVGFicGFuZWwiLFRleHRib3g6IlRleHRib3giLFRpbWVyOiJUaW1lciIsVG9vbGJhcjoiVG9vbGJhciIsVG9vbHRpcDoiVG9vbHRpcCIsVHJlZToiVHJlZSIsVHJlZUdyaWQ6IlRyZWVHcmlkIixUcmVlSXRlbToiVHJlZUl0ZW0ifTtyZXR1cm4gc2FwLnVpLmNvcmUuQWNjZXNzaWJsZVJvbGV9LHRydWUpOw0KLyohDQogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQ0KICogKGMpIENvcHlyaWdodCAyMDA5LTIwMTQgU0FQIEFHIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gDQogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wIC0gc2VlIExJQ0VOU0UudHh0Lg0KICovDQpzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9CYXJDb2xvciIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuQmFyQ29sb3I9e05FVVRSQUw6Ik5FVVRSQUwiLFBPU0lUSVZFOiJQT1NJVElWRSIsQ1JJVElDQUw6IkNSSVRJQ0FMIixORUdBVElWRToiTkVHQVRJVkUifTtyZXR1cm4gc2FwLnVpLmNvcmUuQmFyQ29sb3J9LHRydWUpO3NhcC51aS5kZWZpbmUoJ3NhcC91aS9jb3JlL0NTU0NvbG9yJyxbJ3NhcC91aS9iYXNlL0RhdGFUeXBlJ10sZnVuY3Rpb24oRCl7c2FwLnVpLmNvcmUuQ1NTQ29sb3I9RC5jcmVhdGVUeXBlKCdzYXAudWkuY29yZS5DU1NDb2xvcicse2lzVmFsaWQ6ZnVuY3Rpb24odil7cmV0dXJuL14oIyhbMC05YS1mQS1GXXszfXxbMC05YS1mQS1GXXs2fSl8cmdiXChccyooKDE/WzAtOV0/WzAtOV18MihbMC00XVswLTldfDVbMC01XSkpfChbMC05XT9bMC05XShcLlswLTldKyk/fDEwMChcLjArKT8pJSlccyooLFxzKigoMT9bMC05XT9bMC05XXwyKFswLTRdWzAtOV18NVswLTVdKSl8KFswLTldP1swLTldKFwuWzAtOV0rKT98MTAwKFwuMCspPyklKVxzKil7Mn1cKXxyZ2JhXCgoXHMqKCgxP1swLTldP1swLTldfDIoWzAtNF1bMC05XXw1WzAtNV0pKXwoWzAtOV0/WzAtOV0oXC5bMC05XSspP3wxMDAoXC4wKyk/KSUpXHMqLCl7M31ccyooMChcLlswLTldKyk/fDEoXC4wKyk/KVxzKlwpfGhzbFwoXHMqKFswLTJdP1swLTldP1swLTldfDMoWzAtNV1bMC05XXw2MCkpXHMqKCxccyooKFswLTldP1swLTldKFwuWzAtOV0rKT98MTAwKFwuMCspPyklKVxzKil7Mn1cKXxoc2xhXChccyooWzAtMl0/WzAtOV0/WzAtOV18MyhbMC01XVswLTldfDYwKSlccyosKFxzKigoWzAtOV0/WzAtOV0oXC5bMC05XSspP3wxMDAoXC4wKyk/KSUpXHMqLCl7Mn1ccyooMChcLlswLTldKyk/fDEoXC4wKyk/KVxzKlwpfGFsaWNlYmx1ZXxhbnRpcXVld2hpdGV8YXF1YXxhcXVhbWFyaW5lfGF6dXJlfGJlaWdlfGJpc3F1ZXxibGFja3xibGFuY2hlZGFsbW9uZHxibHVlfGJsdWV2aW9sZXR8YnJvd258YnVybHl3b29kfGNhZGV0Ymx1ZXxjaGFydHJldXNlfGNob2NvbGF0ZXxjb3JhbGNvcm5mbG93ZXJibHVlfGNvcm5zaWxrfGNyaW1zb258Y3lhbnxkYXJrYmx1ZXxkYXJrY3lhbnxkYXJrZ29sZGVucm9kfGRhcmtncmF5fGRhcmtncmVlbnxkYXJra2hha2l8ZGFya21hZ2VudGF8ZGFya29saXZlZ3JlZW58ZGFya29yYW5nZXxkYXJrb3JjaGlkfGRhcmtyZWR8ZGFya3NhbG1vbnxkYXJrc2VhZ3JlZW58ZGFya3NsYXRlYmx1ZXxkYXJrc2xhdGVncmF5fGRhcmt0dXJxdW9pc2V8ZGFya3Zpb2xldHxkZWVwcGlua3xkZWVwc2t5Ymx1ZXxkaW1ncmF5fGRvZGdlcmJsdWV8ZmlyZWJyaWNrfGZsb3JhbHdoaXRlfGZvcmVzdGdyZWVufGZ1Y2hzaWF8Z2FpbnNib3JvfGdob3N0d2hpdGV8Z29sZHxnb2xkZW5yb2R8Z3JheXxncmVlbnxncmVlbnllbGxvd3xob25leWRld3xob3RwaW5rfGluZGlhbnJlZHxpbmRpZ298aXZvcnl8a2hha2l8bGF2ZW5kZXJ8bGF2ZW5kZXJibHVzaHxsYXduZ3JlZW58bGVtb25jaGlmZm9ufGxpZ2h0Ymx1ZXxsaWdodGNvcmFsfGxpZ2h0Y3lhbnxsaWdodGdvbGRlbnJvZHllbGxvd3xsaWdodGdyYXl8bGlnaHRncmVlbnxsaWdodHBpbmt8bGlnaHRzYWxtb258bGlnaHRzZWFncmVlbnxsaWdodHNreWJsdWV8bGlnaHRzbGF0ZWdyYXl8bGlnaHRzdGVlbGJsdWV8bGlnaHR5ZWxsb3d8bGltZXxsaW1lZ3JlZW58bGluZW58bWFnZW50YXxtYXJvb258bWVkaXVtYXF1YW1hcmluZXxtZWRpdW1ibHVlfG1lZGl1bW9yY2hpZHxtZWRpdW1wdXJwbGV8bWVkaXVtc2VhZ3JlZW58bWVkaXVtc2xhdGVibHVlfG1lZGl1bXNwcmluZ2dyZWVufG1lZGl1bXR1cnF1b2lzZXxtZWRpdW12aW9sZXRyZWR8bWlkbmlnaHRibHVlfG1pbnRjcmVhbXxtaXN0eXJvc2V8bW9jY2FzaW58bmF2YWpvd2hpdGV8bmF2eXxvbGRsYWNlfG9saXZlfG9saXZlZHJhYnxvcmFuZ2V8b3JhbmdlcmVkfG9yY2hpZHxwYWxlZ29sZGVucm9kfHBhbGVncmVlbnxwYWxldHVycXVvaXNlfHBhbGV2aW9sZXRyZWR8cGFwYXlhd2hpcHxwZWFjaHB1ZmZ8cGVydXxwaW5rfHBsdW18cG93ZGVyYmx1ZXxwdXJwbGV8cmVkfHJvc3licm93bnxyb3lhbGJsdWV8c2FkZGxlYnJvd258c2FsbW9ufHNhbmR5YnJvd258c2VhZ3JlZW58c2Vhc2hlbGx8c2llbm5hfHNpbHZlcnNreWJsdWV8c2xhdGVibHVlfHNsYXRlZ3JheXxzbm93fHNwcmluZ2dyZWVufHN0ZWVsYmx1ZXx0YW58dGVhbHx0aGlzdGxlfHRvbWF0b3x0dXJxdW9pc2V8dmlvbGV0fHdoZWF0fHdoaXRlfHdoaXRlc21va2V8eWVsbG93fHllbGxvd2dyZWVufHRyYW5zcGFyZW50fGluaGVyaXR8KSQvLnRlc3Qodil9fSxELmdldFR5cGUoJ3N0cmluZycpKTtyZXR1cm4gc2FwLnVpLmNvcmUuQ1NTQ29sb3J9LHRydWUpO3NhcC51aS5kZWZpbmUoJ3NhcC91aS9jb3JlL0NTU1NpemUnLFsnc2FwL3VpL2Jhc2UvRGF0YVR5cGUnXSxmdW5jdGlvbihEKXtzYXAudWkuY29yZS5DU1NTaXplPUQuY3JlYXRlVHlwZSgnc2FwLnVpLmNvcmUuQ1NTU2l6ZScse2lzVmFsaWQ6ZnVuY3Rpb24odil7cmV0dXJuL14oYXV0b3xpbmhlcml0fFstK10/KDAqfChbMC05XSt8WzAtOV0qXC5bMC05XSspKFtyUl1bZUVdW21NXXxbZUVdW21NXXxbZUVdW3hYXXxbcFBdW3hYXXxbY0NdW21NXXxbbU1dW21NXXxbaUldW25OXXxbcFBdW3RUXXxbcFBdW2NDXXwlKSkpJC8udGVzdCh2KX19LEQuZ2V0VHlwZSgnc3RyaW5nJykpO3JldHVybiBzYXAudWkuY29yZS5DU1NTaXplfSx0cnVlKTtzYXAudWkuZGVmaW5lKCdzYXAvdWkvY29yZS9DU1NTaXplU2hvcnRIYW5kJyxbJ3NhcC91aS9iYXNlL0RhdGFUeXBlJ10sZnVuY3Rpb24oRCl7c2FwLnVpLmNvcmUuQ1NTU2l6ZVNob3J0SGFuZD1ELmNyZWF0ZVR5cGUoJ3NhcC51aS5jb3JlLkNTU1NpemVTaG9ydEhhbmQnLHtpc1ZhbGlkOmZ1bmN0aW9uKHYpe3JldHVybi9eKGluaGVyaXR8KGF1dG98Wy0rXT8oMCp8KFxkK3xcZCpcLlxkKykoW2VFXVttTV18W2VFXVt4WF18W3BQXVt4WF18W2NDXVttTV18W21NXVttTV18W2lJXVtuTl18W3BQXVt0VF18W3BQXVtjQ118JSkpKXsxfShccyhhdXRvfFstK10/KDAqfChcZCt8XGQqXC5cZCspKFtlRV1bbU1dfFtlRV1beFhdfFtwUF1beFhdfFtjQ11bbU1dfFttTV1bbU1dfFtpSV1bbk5dfFtwUF1bdFRdfFtwUF1bY0NdfCUpKSkpezAsM30pJC8udGVzdCh2KX19LEQuZ2V0VHlwZSgnc3RyaW5nJykpO3JldHVybiBzYXAudWkuY29yZS5DU1NTaXplU2hvcnRIYW5kfSx0cnVlKTtzYXAudWkuZGVmaW5lKCdzYXAvdWkvY29yZS9Db2xsaXNpb24nLFsnc2FwL3VpL2Jhc2UvRGF0YVR5cGUnXSxmdW5jdGlvbihEKXtzYXAudWkuY29yZS5Db2xsaXNpb249RC5jcmVhdGVUeXBlKCdzYXAudWkuY29yZS5Db2xsaXNpb24nLHtpc1ZhbGlkOmZ1bmN0aW9uKHYpe3JldHVybi9eKChmbGlwfGZpdHxub25lKSggKGZsaXB8Zml0fG5vbmUpKT8pJC8udGVzdCh2KX19LEQuZ2V0VHlwZSgnc3RyaW5nJykpO3JldHVybiBzYXAudWkuY29yZS5Db2xsaXNpb259LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0Rlc2lnbiIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuRGVzaWduPXtTdGFuZGFyZDoiU3RhbmRhcmQiLE1vbm9zcGFjZToiTW9ub3NwYWNlIn07cmV0dXJuIHNhcC51aS5jb3JlLkRlc2lnbn0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgnc2FwL3VpL2NvcmUvRG9jaycsWydzYXAvdWkvYmFzZS9EYXRhVHlwZSddLGZ1bmN0aW9uKEQpe3NhcC51aS5jb3JlLkRvY2s9RC5jcmVhdGVUeXBlKCdzYXAudWkuY29yZS5Eb2NrJyx7aXNWYWxpZDpmdW5jdGlvbih2KXtyZXR1cm4vXigoYmVnaW58bGVmdHxjZW50ZXJ8cmlnaHR8ZW5kKSAodG9wfGNlbnRlcnxib3R0b20pKSQvLnRlc3Qodil9fSxELmdldFR5cGUoJ3N0cmluZycpKTtyZXR1cm4gc2FwLnVpLmNvcmUuRG9ja30sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvSG9yaXpvbnRhbEFsaWduIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5Ib3Jpem9udGFsQWxpZ249e0JlZ2luOiJCZWdpbiIsRW5kOiJFbmQiLExlZnQ6IkxlZnQiLFJpZ2h0OiJSaWdodCIsQ2VudGVyOiJDZW50ZXIifTtyZXR1cm4gc2FwLnVpLmNvcmUuSG9yaXpvbnRhbEFsaWdufSx0cnVlKTtzYXAudWkuZGVmaW5lKCdzYXAvdWkvY29yZS9JRCcsWydzYXAvdWkvYmFzZS9EYXRhVHlwZSddLGZ1bmN0aW9uKEQpe3NhcC51aS5jb3JlLklEPUQuY3JlYXRlVHlwZSgnc2FwLnVpLmNvcmUuSUQnLHtpc1ZhbGlkOmZ1bmN0aW9uKHYpe3JldHVybi9eKFtBLVphLXpfXVstQS1aYS16MC05Xy46XSopJC8udGVzdCh2KX19LEQuZ2V0VHlwZSgnc3RyaW5nJykpO3JldHVybiBzYXAudWkuY29yZS5JRH0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvSWNvbkNvbG9yIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5JY29uQ29sb3I9e0RlZmF1bHQ6IkRlZmF1bHQiLFBvc2l0aXZlOiJQb3NpdGl2ZSIsTmVnYXRpdmU6Ik5lZ2F0aXZlIixDcml0aWNhbDoiQ3JpdGljYWwiLE5ldXRyYWw6Ik5ldXRyYWwifTtyZXR1cm4gc2FwLnVpLmNvcmUuSWNvbkNvbG9yfSx0cnVlKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9JbWVNb2RlIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5JbWVNb2RlPXtBdXRvOiJBdXRvIixBY3RpdmU6IkFjdGl2ZSIsSW5hY3RpdmU6IkluYWN0aXZlIixEaXNhYmxlZDoiRGlzYWJsZWQifTtyZXR1cm4gc2FwLnVpLmNvcmUuSW1lTW9kZX0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvTWVzc2FnZVR5cGUiLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLk1lc3NhZ2VUeXBlPXtJbmZvcm1hdGlvbjoiSW5mb3JtYXRpb24iLFdhcm5pbmc6Ildhcm5pbmciLEVycm9yOiJFcnJvciIsTm9uZToiTm9uZSIsU3VjY2VzczoiU3VjY2VzcyJ9O3JldHVybiBzYXAudWkuY29yZS5NZXNzYWdlVHlwZX0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvT3BlblN0YXRlIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5PcGVuU3RhdGU9e09QRU46Ik9QRU4iLENMT1NFRDoiQ0xPU0VEIixPUEVOSU5HOiJPUEVOSU5HIixDTE9TSU5HOiJDTE9TSU5HIn07cmV0dXJuIHNhcC51aS5jb3JlLk9wZW5TdGF0ZX0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgnc2FwL3VpL2NvcmUvUGVyY2VudGFnZScsWydzYXAvdWkvYmFzZS9EYXRhVHlwZSddLGZ1bmN0aW9uKEQpe3NhcC51aS5jb3JlLlBlcmNlbnRhZ2U9RC5jcmVhdGVUeXBlKCdzYXAudWkuY29yZS5QZXJjZW50YWdlJyx7aXNWYWxpZDpmdW5jdGlvbih2KXtyZXR1cm4vXihbMC05XVswLTldKihcLlswLTldKyk/JSkkLy50ZXN0KHYpfX0sRC5nZXRUeXBlKCdzdHJpbmcnKSk7cmV0dXJuIHNhcC51aS5jb3JlLlBlcmNlbnRhZ2V9LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1Njcm9sbEJhckFjdGlvbiIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuU2Nyb2xsQmFyQWN0aW9uPXtTdGVwOiJTdGVwIixQYWdlOiJQYWdlIixNb3VzZVdoZWVsOiJNb3VzZVdoZWVsIixEcmFnOiJEcmFnIn07cmV0dXJuIHNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbn0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvU2Nyb2xsaW5nIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5TY3JvbGxpbmc9e05vbmU6Ik5vbmUiLEF1dG86IkF1dG8iLFNjcm9sbDoiU2Nyb2xsIixIaWRkZW46IkhpZGRlbiJ9O3JldHVybiBzYXAudWkuY29yZS5TY3JvbGxpbmd9LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1RleHRBbGlnbiIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuVGV4dEFsaWduPXtCZWdpbjoiQmVnaW4iLEVuZDoiRW5kIixMZWZ0OiJMZWZ0IixSaWdodDoiUmlnaHQiLENlbnRlcjoiQ2VudGVyIn07cmV0dXJuIHNhcC51aS5jb3JlLlRleHRBbGlnbn0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvVGV4dERpcmVjdGlvbiIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuVGV4dERpcmVjdGlvbj17TFRSOiJMVFIiLFJUTDoiUlRMIixJbmhlcml0OiJJbmhlcml0In07cmV0dXJuIHNhcC51aS5jb3JlLlRleHREaXJlY3Rpb259LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1RpdGxlTGV2ZWwiLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLlRpdGxlTGV2ZWw9e0F1dG86IkF1dG8iLEgxOiJIMSIsSDI6IkgyIixIMzoiSDMiLEg0OiJINCIsSDU6Ikg1IixINjoiSDYifTtyZXR1cm4gc2FwLnVpLmNvcmUuVGl0bGVMZXZlbH0sdHJ1ZSk7c2FwLnVpLmRlZmluZSgnc2FwL3VpL2NvcmUvVVJJJyxbJ3NhcC91aS9iYXNlL0RhdGFUeXBlJ10sZnVuY3Rpb24oRCl7c2FwLnVpLmNvcmUuVVJJPUQuY3JlYXRlVHlwZSgnc2FwLnVpLmNvcmUuVVJJJyx7aXNWYWxpZDpmdW5jdGlvbih2KXtyZXR1cm4vXigoKFteOlwvPyNdKyk6KT8oXC9cLyhbXlwvPyNdKikpPyhbXj8jXSopKFw/KFteI10qKSk/KCMoLiopKT8pJC8udGVzdCh2KX19LEQuZ2V0VHlwZSgnc3RyaW5nJykpO3JldHVybiBzYXAudWkuY29yZS5VUkl9LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1ZhbHVlU3RhdGUiLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLlZhbHVlU3RhdGU9e0Vycm9yOiJFcnJvciIsV2FybmluZzoiV2FybmluZyIsU3VjY2VzczoiU3VjY2VzcyIsTm9uZToiTm9uZSJ9O3JldHVybiBzYXAudWkuY29yZS5WYWx1ZVN0YXRlfSx0cnVlKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9WZXJ0aWNhbEFsaWduIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5WZXJ0aWNhbEFsaWduPXtCb3R0b206IkJvdHRvbSIsTWlkZGxlOiJNaWRkbGUiLFRvcDoiVG9wIixJbmhlcml0OiJJbmhlcml0In07cmV0dXJuIHNhcC51aS5jb3JlLlZlcnRpY2FsQWxpZ259LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1dyYXBwaW5nIixmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5XcmFwcGluZz17Tm9uZToiTm9uZSIsU29mdDoiU29mdCIsSGFyZDoiSGFyZCIsT2ZmOiJPZmYifTtyZXR1cm4gc2FwLnVpLmNvcmUuV3JhcHBpbmd9LHRydWUpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL212Yy9WaWV3VHlwZSIsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlPXtKU09OOiJKU09OIixYTUw6IlhNTCIsSFRNTDoiSFRNTCIsSlM6IkpTIixUZW1wbGF0ZToiVGVtcGxhdGUifTtyZXR1cm4gc2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlfSx0cnVlKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9yb3V0aW5nL0hpc3RvcnlEaXJlY3Rpb24iLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLnJvdXRpbmcuSGlzdG9yeURpcmVjdGlvbj17Rm9yd2FyZHM6IkZvcndhcmRzIixCYWNrd2FyZHM6IkJhY2t3YXJkcyIsTmV3RW50cnk6Ik5ld0VudHJ5IixVbmtub3duOiJVbmtub3duIn07cmV0dXJuIHNhcC51aS5jb3JlLnJvdXRpbmcuSGlzdG9yeURpcmVjdGlvbn0sdHJ1ZSk7KGZ1bmN0aW9uKCl7dmFyIGw9c2FwLnVpLmxhenlSZXF1aXJlO2Z1bmN0aW9uIGUocCxjLHMpe2Zvcih2YXIgaT0wO2k8Yy5sZW5ndGg7aSsrKXtpZihzKXtsKHMsY1tpXS50b0xvd2VyQ2FzZSgpLHArY1tpXSl9ZWxzZXtsKHArY1tpXSwibmV3IGV4dGVuZCBnZXRNZXRhZGF0YSIpfX19bCgic2FwLnVpLmNvcmUuQnVzeUluZGljYXRvciIsInNob3cgaGlkZSBhdHRhY2hPcGVuIGRldGFjaE9wZW4gYXR0YWNoQ2xvc2UgZGV0YWNoQ2xvc2UiKTtsKCJzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlIiwicmVnaXN0ZXJUeXBlIHVucmVnaXN0ZXJUeXBlIik7bCgic2FwLnVpLmNvcmUuRnJhZ21lbnQiLCJyZWdpc3RlclR5cGUiKTtsKCJzYXAudWkiLCJ4bWxmcmFnbWVudCIsInNhcC51aS5jb3JlLkZyYWdtZW50Iik7bCgic2FwLnVpIiwianNmcmFnbWVudCIsInNhcC51aS5jb3JlLkZyYWdtZW50Iik7bCgic2FwLnVpIiwiaHRtbGZyYWdtZW50Iiwic2FwLnVpLmNvcmUuRnJhZ21lbnQiKTtlKCJzYXAudWkubW9kZWwuIixbIkZpbHRlciIsIlNvcnRlciIsImpzb24uSlNPTk1vZGVsIiwicmVzb3VyY2UuUmVzb3VyY2VNb2RlbCIsIm9kYXRhLk9EYXRhTW9kZWwiLCJ4bWwuWE1MTW9kZWwiXSk7ZSgic2FwLnVpLm1vZGVsLnR5cGUuIixbIkJvb2xlYW4iLCJJbnRlZ2VyIiwiRmxvYXQiLCJTdHJpbmciLCJEYXRlIiwiVGltZSIsIkRhdGVUaW1lIl0pO2UoInNhcC51aS5jb3JlLiIsWyJMb2NhbGUiLCJMb2NhbGVEYXRhIiwibXZjLkNvbnRyb2xsZXIiXSk7ZSgic2FwLnVpLmNvcmUubXZjLiIsWyJDb250cm9sbGVyIiwiVmlldyIsIkpTVmlldyIsIkpTT05WaWV3IiwiWE1MVmlldyIsIkhUTUxWaWV3IiwiVGVtcGxhdGVWaWV3Il0sInNhcC51aSIpO2UoInNhcC51aS5jb3JlLiIsWyJDb21wb25lbnQiXSwic2FwLnVpIik7ZSgic2FwLnVpLmNvcmUudG1wbC4iLFsiVGVtcGxhdGUiXSwic2FwLnVpIil9KCkpfSxmYWxzZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLnBsdWdpbi5UZW1wbGF0aW5nU3VwcG9ydCcpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnBsdWdpbi5UZW1wbGF0aW5nU3VwcG9ydCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3BsdWdpbi9UZW1wbGF0aW5nU3VwcG9ydCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9jb3JlL0NvcmUnLCdzYXAvdWkvY29yZS90bXBsL1RlbXBsYXRlJ10sZnVuY3Rpb24ocSxDLFQpeyJ1c2Ugc3RyaWN0Ijt2YXIgYT1mdW5jdGlvbigpe307YS5wcm90b3R5cGUuc3RhcnRQbHVnaW49ZnVuY3Rpb24oYyxvKXtxLnNhcC5sb2cuaW5mbygiU3RhcnRpbmcgVGVtcGxhdGluZ1N1cHBvcnQgcGx1Z2luLiIpO3RoaXMub0NvcmU9YztzYXAudWkudGVtcGxhdGUoKX07YS5wcm90b3R5cGUuc3RvcFBsdWdpbj1mdW5jdGlvbigpe3Euc2FwLmxvZy5pbmZvKCJTdG9wcGluZyBUZW1wbGF0aW5nU3VwcG9ydCBwbHVnaW4uIik7dGhpcy5vQ29yZT1udWxsfTsoZnVuY3Rpb24oKXt2YXIgdD1uZXcgYSgpO3NhcC51aS5nZXRDb3JlKCkucmVnaXN0ZXJQbHVnaW4odCl9KCkpO3JldHVybiBhfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvc2VhcmNoL1NlYXJjaFByb3ZpZGVyIixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCdzYXAvdWkvY29yZS9FbGVtZW50J10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuRWxlbWVudC5leHRlbmQoInNhcC51aS5jb3JlLnNlYXJjaC5TZWFyY2hQcm92aWRlciIse21ldGFkYXRhOntwdWJsaWNNZXRob2RzOlsic3VnZ2VzdCJdLGxpYnJhcnk6InNhcC51aS5jb3JlIixwcm9wZXJ0aWVzOnsiaWNvbiI6e3R5cGU6InN0cmluZyIsZ3JvdXA6Ik1pc2MiLGRlZmF1bHRWYWx1ZTpudWxsfX19fSk7c2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyLnByb3RvdHlwZS5zdWdnZXN0PWZ1bmN0aW9uKHYsYyl7alF1ZXJ5LnNhcC5sb2cud2FybmluZygic2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyIGlzIHRoZSBhYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBhbGwgU2VhcmNoUHJvdmlkZXJzLiBEbyBub3QgY3JlYXRlIGluc3RhbmNlcyBvZiB0aGlzIGNsYXNzLCBidXQgdXNlIGEgY29uY3JldGUgc3ViIGNsYXNzIGluc3RlYWQuIil9O3JldHVybiBzYXAudWkuY29yZS5zZWFyY2guU2VhcmNoUHJvdmlkZXJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS50aGVtaW5nLlBhcmFtZXRlcnMnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50aGVtaW5nLlBhcmFtZXRlcnMnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS90aGVtaW5nL1BhcmFtZXRlcnMiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCdzYXAvdWkvY29yZS9Db3JlJ10sZnVuY3Rpb24ocSxDKXsidXNlIHN0cmljdCI7dmFyIFA9e307dmFyIHA9bnVsbDt2YXIgdD1udWxsO2Z1bmN0aW9uIHIoKXtwPW51bGx9ZnVuY3Rpb24gbCh1KXt2YXIgUixvO3U9dS5yZXBsYWNlKC9cL2xpYnJhcnkoW15cLy5dKilcLig/OmNzc3xsZXNzKSgkfFs/I10pLyxmdW5jdGlvbigkLGEsYil7cmV0dXJuIi9saWJyYXJ5LXBhcmFtZXRlcnMuanNvbiIrKGI/YjoiIil9KTtSPXEuc2FwLnNqYXgoe3VybDp1LGRhdGFUeXBlOidqc29uJ30pO2lmKFIuc3VjY2Vzcyl7bz0odHlwZW9mIFIuZGF0YT09InN0cmluZyIpP3EucGFyc2VKU09OKFIuZGF0YSk6Ui5kYXRhO2lmKHEuaXNBcnJheShvKSl7Zm9yKHZhciBqPTA7ajxvLmxlbmd0aDtqKyspe3A9cS5leHRlbmQocCxvW2pdKX19ZWxzZXtwPXEuZXh0ZW5kKHAsbyl9fWVsc2V7cS5zYXAubG9nLndhcm5pbmcoIkNvdWxkIG5vdCBsb2FkIHRoZW1lIHBhcmFtZXRlcnMgZnJvbTogIit1KX19ZnVuY3Rpb24gZygpe2lmKCFwKXtwPXt9O3Q9c2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0VGhlbWUoKTtxKCJsaW5rW2lkXj1zYXAtdWktdGhlbWUtXSIpLmVhY2goZnVuY3Rpb24oKXtsKHRoaXMuaHJlZil9KX1yZXR1cm4gcH1QLl9hZGRMaWJyYXJ5VGhlbWU9ZnVuY3Rpb24odSl7aWYocCl7bCh1KX19O1AuZ2V0PWZ1bmN0aW9uKG4pe2lmKGFyZ3VtZW50cy5sZW5ndGg9PTEpe3JldHVybiBnKClbbl19ZWxzZSBpZihhcmd1bWVudHMubGVuZ3RoPT0wKXt2YXIgYz17fTtyZXR1cm4gcS5leHRlbmQoYyxnKCkpfWVsc2V7cmV0dXJuIHVuZGVmaW5lZH19O1AucmVzZXQ9ZnVuY3Rpb24oKXt2YXIgbz1hcmd1bWVudHNbMF09PT10cnVlO2lmKCFvfHxzYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRUaGVtZSgpIT09dCl7cigpfX07cmV0dXJuIFB9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS50bXBsLkRPTUF0dHJpYnV0ZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnRtcGwuRE9NQXR0cmlidXRlJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvdG1wbC9ET01BdHRyaWJ1dGUiLFsnc2FwL3VpL2NvcmUvbGlicmFyeScsJ3NhcC91aS9jb3JlL0VsZW1lbnQnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5FbGVtZW50LmV4dGVuZCgic2FwLnVpLmNvcmUudG1wbC5ET01BdHRyaWJ1dGUiLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJuYW1lIjp7dHlwZToic3RyaW5nIixncm91cDoiRGF0YSIsZGVmYXVsdFZhbHVlOm51bGx9LCJ2YWx1ZSI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkRhdGEiLGRlZmF1bHRWYWx1ZTpudWxsfX19fSk7c2FwLnVpLmNvcmUudG1wbC5ET01BdHRyaWJ1dGUucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKHYpe3RoaXMuc2V0UHJvcGVydHkoInZhbHVlIix2LHRydWUpO3ZhciBwPXRoaXMuZ2V0UGFyZW50KCksJD1wJiZwLiQoKTtpZigkJiYkLmxlbmd0aD4wKXskLmF0dHIodGhpcy5nZXROYW1lKCksdGhpcy5nZXRQcm9wZXJ0eSgidmFsdWUiKSl9cmV0dXJuIHRoaXN9O3JldHVybiBzYXAudWkuY29yZS50bXBsLkRPTUF0dHJpYnV0ZX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkN1c3RvbURhdGEnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5DdXN0b21EYXRhJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvQ3VzdG9tRGF0YSIsWycuL2xpYnJhcnknLCcuL0VsZW1lbnQnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5FbGVtZW50LmV4dGVuZCgic2FwLnVpLmNvcmUuQ3VzdG9tRGF0YSIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7ImtleSI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkRhdGEiLGRlZmF1bHRWYWx1ZTpudWxsfSwidmFsdWUiOnt0eXBlOiJhbnkiLGdyb3VwOiJEYXRhIixkZWZhdWx0VmFsdWU6bnVsbH0sIndyaXRlVG9Eb20iOnt0eXBlOiJib29sZWFuIixncm91cDoiRGF0YSIsZGVmYXVsdFZhbHVlOmZhbHNlfX19fSk7c2FwLnVpLmNvcmUuQ3VzdG9tRGF0YS5wcm90b3R5cGUuc2V0VmFsdWU9ZnVuY3Rpb24odil7dGhpcy5zZXRQcm9wZXJ0eSgidmFsdWUiLHYsdHJ1ZSk7dmFyIGM9dGhpcy5nZXRQYXJlbnQoKTtpZihjJiZjLmdldERvbVJlZigpJiZ0aGlzLmdldFdyaXRlVG9Eb20oKSl7dmFyIGs9dGhpcy5nZXRLZXkoKTtpZih0eXBlb2Ygdj09PSJzdHJpbmciKXtpZigoc2FwLnVpLmNvcmUuSUQuaXNWYWxpZChrKSkmJihrLmluZGV4T2YoIjoiKT09LTEpJiYoay5pbmRleE9mKCJzYXAtdWkiKSE9PTApKXtjLiQoKS5hdHRyKCJkYXRhLSIrayx2KX1lbHNle2pRdWVyeS5zYXAubG9nLmVycm9yKCJDdXN0b21EYXRhIHdpdGgga2V5ICIraysiIHNob3VsZCBiZSB3cml0dGVuIHRvIEhUTUwgb2YgIitjKyIgYnV0IHRoZSBrZXkgaXMgbm90IHZhbGlkIChtdXN0IGJlIGEgdmFsaWQgc2FwLnVpLmNvcmUuSUQgd2l0aG91dCBhbnkgY29sb24gYW5kIG1heSBub3Qgc3RhcnQgd2l0aCAnc2FwLXVpJykuIil9fWVsc2V7alF1ZXJ5LnNhcC5sb2cuZXJyb3IoIkN1c3RvbURhdGEgd2l0aCBrZXkgIitrKyIgc2hvdWxkIGJlIHdyaXR0ZW4gdG8gSFRNTCBvZiAiK2MrIiBidXQgdGhlIHZhbHVlIGlzIG5vdCBhIHN0cmluZy4iKX19cmV0dXJuIHRoaXN9O3JldHVybiBzYXAudWkuY29yZS5DdXN0b21EYXRhfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuRW5hYmxlZFByb3BhZ2F0b3InKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5FbmFibGVkUHJvcGFnYXRvcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0VuYWJsZWRQcm9wYWdhdG9yIixbJ2pxdWVyeS5zYXAuZ2xvYmFsJywnLi9Db250cm9sJ10sZnVuY3Rpb24ocSxDKXsidXNlIHN0cmljdCI7dmFyIEU9ZnVuY3Rpb24oZCxsKXtpZighKHRoaXMgaW5zdGFuY2VvZiBDKSl7dGhyb3cgbmV3IEVycm9yKCJFbmFibGVkUHJvcGFnYXRvciBvbmx5IHN1cHBvcnRzIHN1YmNsYXNzZXMgb2YgQ29udHJvbCIpfWlmKGQ9PT11bmRlZmluZWQpe2Q9dHJ1ZX1mdW5jdGlvbiBmKGMpe3ZhciBwPWMuZ2V0UGFyZW50KCk7d2hpbGUocCYmIXAuZ2V0RW5hYmxlZCYmcC5nZXRQYXJlbnQpe3A9cC5nZXRQYXJlbnQoKX1yZXR1cm4gcH1pZih0aGlzLmdldEVuYWJsZWQ9PT11bmRlZmluZWQpe3RoaXMuZ2V0RW5hYmxlZD1mdW5jdGlvbigpe3ZhciBwPWYodGhpcyk7cmV0dXJuKHAmJnAuZ2V0RW5hYmxlZCYmIXAuZ2V0RW5hYmxlZCgpKT9mYWxzZTp0aGlzLmdldFByb3BlcnR5KCJlbmFibGVkIil9O2lmKGwpe3RoaXMuZ2V0TWV0YWRhdGEoKS5hZGRQcm9wZXJ0eSgiRW5hYmxlZCIse3R5cGU6ImJvb2xlYW4iLGdyb3VwOiJCZWhhdmlvciIsZGVmYXVsdFZhbHVlOiEhZH0pfXRoaXMuZ2V0TWV0YWRhdGEoKS5hZGRQcm9wZXJ0eSgiZW5hYmxlZCIse3R5cGU6ImJvb2xlYW4iLGdyb3VwOiJCZWhhdmlvciIsZGVmYXVsdFZhbHVlOiEhZH0pO3RoaXMuZ2V0TWV0YWRhdGEoKS5hZGRQdWJsaWNNZXRob2RzKCdnZXRFbmFibGVkJyl9ZWxzZXt2YXIgbz10aGlzLmdldEVuYWJsZWQ7dGhpcy5nZXRFbmFibGVkPWZ1bmN0aW9uKCl7dmFyIHA9Zih0aGlzKTtyZXR1cm4ocCYmcC5nZXRFbmFibGVkJiYhcC5nZXRFbmFibGVkKCkpP2ZhbHNlOm8uYXBwbHkodGhpcyl9fWlmKHRoaXMuc2V0RW5hYmxlZD09PXVuZGVmaW5lZCl7dGhpcy5zZXRFbmFibGVkPWZ1bmN0aW9uKGUpe3RoaXMuc2V0UHJvcGVydHkoImVuYWJsZWQiLGUpfTt0aGlzLmdldE1ldGFkYXRhKCkuYWRkUHVibGljTWV0aG9kcygnc2V0RW5hYmxlZCcpfX07cmV0dXJuIEV9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5IVE1MJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuSFRNTCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0hUTUwiLFsnLi9saWJyYXJ5JywnLi9Db250cm9sJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuQ29udHJvbC5leHRlbmQoInNhcC51aS5jb3JlLkhUTUwiLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJjb250ZW50Ijp7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOm51bGx9LCJwcmVmZXJET00iOnt0eXBlOiJib29sZWFuIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOnRydWV9LCJzYW5pdGl6ZUNvbnRlbnQiOnt0eXBlOiJib29sZWFuIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOmZhbHNlfX0sZXZlbnRzOnsiYWZ0ZXJSZW5kZXJpbmciOnt9fX19KTtzYXAudWkuY29yZS5IVE1MLk1fRVZFTlRTPXsnYWZ0ZXJSZW5kZXJpbmcnOidhZnRlclJlbmRlcmluZyd9O3NhcC51aS5jb3JlLkhUTUwucHJvdG90eXBlLmdldERvbVJlZj1mdW5jdGlvbihzKXt2YXIgaT1zP3RoaXMuZ2V0SWQoKSsiLSIrczp0aGlzLmdldElkKCk7cmV0dXJuIGpRdWVyeS5zYXAuZG9tQnlJZCgic2FwLXVpLWR1bW15LSIraSl8fGpRdWVyeS5zYXAuZG9tQnlJZChpKX07c2FwLnVpLmNvcmUuSFRNTC5wcm90b3R5cGUuc2V0Q29udGVudD1mdW5jdGlvbihjKXtmdW5jdGlvbiBwKHMpe2lmKGpRdWVyeS5wYXJzZUhUTUwpe3ZhciBhPWpRdWVyeS5wYXJzZUhUTUwocyk7aWYoYSl7dmFyIGI9MCxlPWEubGVuZ3RoO3doaWxlKGI8ZSYmYVtiXS5ub2RlVHlwZSE9MSl7YisrfXdoaWxlKGI8ZSYmYVtlLTFdLm5vZGVUeXBlIT0xKXtlLS19aWYoYj4wfHxlPGEubGVuZ3RoKXthPWEuc2xpY2UoYixlKX1yZXR1cm4galF1ZXJ5KGEpfX1yZXR1cm4galF1ZXJ5KHMpfWlmKHRoaXMuZ2V0U2FuaXRpemVDb250ZW50KCkpe2M9alF1ZXJ5LnNhcC5fc2FuaXRpemVIVE1MKGMpfXRoaXMuc2V0UHJvcGVydHkoImNvbnRlbnQiLGMsdHJ1ZSk7aWYodGhpcy5nZXREb21SZWYoKSl7dmFyICQ9cCh0aGlzLmdldENvbnRlbnQoKSk7alF1ZXJ5KHRoaXMuZ2V0RG9tUmVmKCkpLnJlcGxhY2VXaXRoKCQpO3RoaXMuX3Bvc3Rwcm9jZXNzTmV3Q29udGVudCgkKX1lbHNle3RoaXMuaW52YWxpZGF0ZSgpfXJldHVybiB0aGlzfTtzYXAudWkuY29yZS5IVE1MLnByb3RvdHlwZS5vbkJlZm9yZVJlbmRlcmluZz1mdW5jdGlvbigpe2lmKHRoaXMuZ2V0UHJlZmVyRE9NKCkmJnRoaXMuZ2V0RG9tUmVmKCkmJiFzYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLmlzUHJlc2VydmVkQ29udGVudCh0aGlzLmdldERvbVJlZigpKSl7c2FwLnVpLmNvcmUuUmVuZGVyTWFuYWdlci5wcmVzZXJ2ZUNvbnRlbnQodGhpcy5nZXREb21SZWYoKSx0cnVlLGZhbHNlKX19O3NhcC51aS5jb3JlLkhUTUwucHJvdG90eXBlLm9uQWZ0ZXJSZW5kZXJpbmc9ZnVuY3Rpb24oKXt2YXIgJD1qUXVlcnkoalF1ZXJ5LnNhcC5kb21CeUlkKCJzYXAtdWktZHVtbXktIit0aGlzLmdldElkKCkpKTt2YXIgYT1zYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLmZpbmRQcmVzZXJ2ZWRDb250ZW50KHRoaXMuZ2V0SWQoKSk7dmFyIGI9dW5kZWZpbmVkO3ZhciBpPWZhbHNlO2lmKCghdGhpcy5nZXRQcmVmZXJET00oKXx8YS5zaXplKCk9PTApKXthLnJlbW92ZSgpO2I9bmV3IGpRdWVyeSh0aGlzLmdldENvbnRlbnQoKSk7JC5yZXBsYWNlV2l0aChiKX1lbHNlIGlmKGEuc2l6ZSgpPjApeyQucmVwbGFjZVdpdGgoYSk7Yj1hO2k9dHJ1ZX1lbHNleyQucmVtb3ZlKCl9dGhpcy5fcG9zdHByb2Nlc3NOZXdDb250ZW50KGIpO3RoaXMuZmlyZUFmdGVyUmVuZGVyaW5nKHtpc1ByZXNlcnZlZERPTTppfSl9O3NhcC51aS5jb3JlLkhUTUwucHJvdG90eXBlLl9wb3N0cHJvY2Vzc05ld0NvbnRlbnQ9ZnVuY3Rpb24oJCl7aWYoJCYmJC5zaXplKCk+MCl7aWYoJC5sZW5ndGg+MSl7alF1ZXJ5LnNhcC5sb2cud2FybmluZygiW1Vuc3VwcG9ydGVkIEZlYXR1cmVdOiAiK3RoaXMrIiBoYXMgcmVuZGVyZWQgIiskLmxlbmd0aCsiIHJvb3Qgbm9kZXMhIil9ZWxzZXt2YXIgYz0kLmF0dHIoImlkIik7aWYoYyYmYyE9dGhpcy5nZXRJZCgpKXtqUXVlcnkuc2FwLmxvZy53YXJuaW5nKCJbVW5zdXBwb3J0ZWQgRmVhdHVyZV06IElkIG9mIEhUTUwgQ29udHJvbCAnIit0aGlzLmdldElkKCkrIicgZG9lcyBub3QgbWF0Y2ggd2l0aCBjb250ZW50IGlkICciK2MrIichIil9fXNhcC51aS5jb3JlLlJlbmRlck1hbmFnZXIubWFya1ByZXNlcnZhYmxlQ29udGVudCgkLHRoaXMuZ2V0SWQoKSk7aWYoJC5maW5kKCIjIit0aGlzLmdldElkKCkucmVwbGFjZSgvKDp8XC4pL2csJ1xcJDEnKSkubGVuZ3RoPT09MCl7JC5maWx0ZXIoIjpub3QoW2lkXSkiKS5maXJzdCgpLmF0dHIoImlkIix0aGlzLmdldElkKCkpfX1lbHNle2pRdWVyeS5zYXAubG9nLmRlYnVnKCIiK3RoaXMrIiBpcyBlbXB0eSBhZnRlciByZW5kZXJpbmcsIHNldHRpbmcgYk91dHB1dCB0byBmYWxzZSIpO3RoaXMuYk91dHB1dD1mYWxzZX19O3NhcC51aS5jb3JlLkhUTUwucHJvdG90eXBlLnNldERPTUNvbnRlbnQ9ZnVuY3Rpb24oZCl7dmFyICQ9alF1ZXJ5KGQpO2lmKHRoaXMuZ2V0RG9tUmVmKCkpe2pRdWVyeSh0aGlzLmdldERvbVJlZigpKS5yZXBsYWNlV2l0aCgkKTt0aGlzLl9wb3N0cHJvY2Vzc05ld0NvbnRlbnQoJCl9ZWxzZXskLmFwcGVuZFRvKHNhcC51aS5jb3JlLlJlbmRlck1hbmFnZXIuZ2V0UHJlc2VydmVBcmVhUmVmKCkpO2lmKHRoaXMuZ2V0VUlBcmVhKCkpe3RoaXMuZ2V0VUlBcmVhKCkuaW52YWxpZGF0ZSgpfXRoaXMuX3Bvc3Rwcm9jZXNzTmV3Q29udGVudCgkKX1yZXR1cm4gdGhpc307c2FwLnVpLmNvcmUuSFRNTC5wcm90b3R5cGUuc2V0VG9vbHRpcD1mdW5jdGlvbih0KXtqUXVlcnkuc2FwLmxvZy53YXJuaW5nKCJUaGUgc2FwLnVpLmNvcmUuSFRNTCBjb250cm9sIGRvZXNuJ3Qgc3VwcG9ydCB0b29sdGlwcy4gQWRkIHRoZSB0b29sdGlwIHRvIHRoZSBIVE1MIGNvbnRlbnQgaW5zdGVhZC4iKTtyZXR1cm4gc2FwLnVpLmNvcmUuQ29udHJvbC5wcm90b3R5cGUuc2V0VG9vbHRpcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiBzYXAudWkuY29yZS5IVE1MfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuSWNvbicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLkljb24nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9JY29uIixbJy4vbGlicmFyeScsJy4vQ29udHJvbCcsJy4vSWNvblBvb2wnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5Db250cm9sLmV4dGVuZCgic2FwLnVpLmNvcmUuSWNvbiIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7InNyYyI6e3R5cGU6InNhcC51aS5jb3JlLlVSSSIsZ3JvdXA6IkRhdGEiLGRlZmF1bHRWYWx1ZTpudWxsfSwic2l6ZSI6e3R5cGU6InNhcC51aS5jb3JlLkNTU1NpemUiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTpudWxsfSwiY29sb3IiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NDb2xvciIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpudWxsfSwiaG92ZXJDb2xvciI6e3R5cGU6InNhcC51aS5jb3JlLkNTU0NvbG9yIixncm91cDoiQXBwZWFyYW5jZSIsZGVmYXVsdFZhbHVlOm51bGx9LCJhY3RpdmVDb2xvciI6e3R5cGU6InNhcC51aS5jb3JlLkNTU0NvbG9yIixncm91cDoiQXBwZWFyYW5jZSIsZGVmYXVsdFZhbHVlOm51bGx9LCJ3aWR0aCI6e3R5cGU6InNhcC51aS5jb3JlLkNTU1NpemUiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTpudWxsfSwiaGVpZ2h0Ijp7dHlwZToic2FwLnVpLmNvcmUuQ1NTU2l6ZSIsZ3JvdXA6IkRpbWVuc2lvbiIsZGVmYXVsdFZhbHVlOm51bGx9LCJiYWNrZ3JvdW5kQ29sb3IiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NDb2xvciIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpudWxsfSwiaG92ZXJCYWNrZ3JvdW5kQ29sb3IiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NDb2xvciIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpudWxsfSwiYWN0aXZlQmFja2dyb3VuZENvbG9yIjp7dHlwZToic2FwLnVpLmNvcmUuQ1NTQ29sb3IiLGdyb3VwOiJBcHBlYXJhbmNlIixkZWZhdWx0VmFsdWU6bnVsbH0sInZpc2libGUiOnt0eXBlOiJib29sZWFuIixncm91cDoiQXBwZWFyYW5jZSIsZGVmYXVsdFZhbHVlOnRydWV9LCJkZWNvcmF0aXZlIjp7dHlwZToiYm9vbGVhbiIsZ3JvdXA6IkFjY2Vzc2liaWxpdHkiLGRlZmF1bHRWYWx1ZTp0cnVlfX0sZXZlbnRzOnsicHJlc3MiOnt9fX19KTtzYXAudWkuY29yZS5JY29uLk1fRVZFTlRTPXsncHJlc3MnOidwcmVzcyd9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9uQWZ0ZXJSZW5kZXJpbmc9ZnVuY3Rpb24oKXt2YXIgJD10aGlzLiQoKTtpZihzYXAudWkuRGV2aWNlLmJyb3dzZXIuY2hyb21lJiZ0aGlzLmhhc0xpc3RlbmVycygicHJlc3MiKSl7JC5jc3MoImN1cnNvciIsInBvaW50ZXIiKX1pZigkLmNzcygiY3Vyc29yIik9PT0iYXV0byIpeyQuY3NzKCJjdXJzb3IiLCJkZWZhdWx0Iil9fTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbm1vdXNlZG93bj1mdW5jdGlvbihlKXt0aGlzLl9iUHJlc3NGaXJlZD1mYWxzZTtpZihlLnNyY0NvbnRyb2wubUV2ZW50UmVnaXN0cnlbInByZXNzIl18fGUuc3JjQ29udHJvbC5tRXZlbnRSZWdpc3RyeVsidGFwIl0pe2Uuc2V0TWFya2VkKCl9dmFyIGE9dGhpcy5nZXRBY3RpdmVDb2xvcigpLEE9dGhpcy5nZXRBY3RpdmVCYWNrZ3JvdW5kQ29sb3IoKSwkO2lmKGF8fEEpe2lmKCFlLnRhcmdldFRvdWNoZXN8fChlLnRhcmdldFRvdWNoZXMmJmUudGFyZ2V0VG91Y2hlcy5sZW5ndGg9PT0xKSl7JD10aGlzLiQoKTskLmFkZENsYXNzKCJzYXBVaUljb25BY3RpdmUiKTtpZihhKXskLmNzcygiY29sb3IiLGEpfWlmKEEpeyQuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIixBKX19fX07c2FwLnVpLmNvcmUuSWNvbi5wcm90b3R5cGUub250b3VjaHN0YXJ0PXNhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9ubW91c2Vkb3duO3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9ubW91c2V1cD1mdW5jdGlvbihlKXtpZighZS50YXJnZXRUb3VjaGVzfHwoZS50YXJnZXRUb3VjaGVzJiZlLnRhcmdldFRvdWNoZXMubGVuZ3RoPT09MCkpe3RoaXMuJCgpLnJlbW92ZUNsYXNzKCJzYXBVaUljb25BY3RpdmUiKTt0aGlzLl9yZXN0b3JlQ29sb3JzKCl9fTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbnRvdWNoZW5kPXNhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9ubW91c2V1cDtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbnRvdWNoY2FuY2VsPXNhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9ubW91c2V1cDtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbm1vdXNlb3Zlcj1mdW5jdGlvbigpe3ZhciBoPXRoaXMuZ2V0SG92ZXJDb2xvcigpLEg9dGhpcy5nZXRIb3ZlckJhY2tncm91bmRDb2xvcigpLCQ9dGhpcy4kKCk7aWYoaCl7JC5jc3MoImNvbG9yIixoKX1pZihIKXskLmNzcygiYmFja2dyb3VuZC1jb2xvciIsSCl9fTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbm1vdXNlb3V0PWZ1bmN0aW9uKCl7dGhpcy5fcmVzdG9yZUNvbG9ycygpfTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbmNsaWNrPWZ1bmN0aW9uKCl7aWYodGhpcy5fYlByZXNzRmlyZWQpe3JldHVybn10aGlzLmZpcmVQcmVzcyh7fSk7dGhpcy5fYlByZXNzRmlyZWQ9dHJ1ZX07c2FwLnVpLmNvcmUuSWNvbi5wcm90b3R5cGUub250YXA9c2FwLnVpLmNvcmUuSWNvbi5wcm90b3R5cGUub25jbGljaztzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5vbmtleWRvd249ZnVuY3Rpb24oZSl7aWYoZS53aGljaD09PWpRdWVyeS5zYXAuS2V5Q29kZXMuU1BBQ0V8fGUud2hpY2g9PT1qUXVlcnkuc2FwLktleUNvZGVzLkVOVEVSKXtlLnByZXZlbnREZWZhdWx0KCk7dmFyICQ9dGhpcy4kKCksYT10aGlzLmdldEFjdGl2ZUNvbG9yKCksQT10aGlzLmdldEFjdGl2ZUJhY2tncm91bmRDb2xvcigpOyQuYWRkQ2xhc3MoInNhcFVpSWNvbkFjdGl2ZSIpO2lmKGEpeyQuY3NzKCJjb2xvciIsYSl9aWYoQSl7JC5jc3MoImJhY2tncm91bmQtY29sb3IiLEEpfX19O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLm9ua2V5dXA9ZnVuY3Rpb24oZSl7aWYoZS53aGljaD09PWpRdWVyeS5zYXAuS2V5Q29kZXMuU1BBQ0V8fGUud2hpY2g9PT1qUXVlcnkuc2FwLktleUNvZGVzLkVOVEVSKXt0aGlzLiQoKS5yZW1vdmVDbGFzcygic2FwVWlJY29uQWN0aXZlIik7dGhpcy5fcmVzdG9yZUNvbG9ycygpO3RoaXMuZmlyZVByZXNzKHt9KX19O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLl9yZXN0b3JlQ29sb3JzPWZ1bmN0aW9uKCl7dGhpcy4kKCkuY3NzKHsiY29sb3IiOnRoaXMuZ2V0Q29sb3IoKXx8IiIsImJhY2tncm91bmQtY29sb3IiOnRoaXMuZ2V0QmFja2dyb3VuZENvbG9yKCl8fCIifSl9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldFNyYz1mdW5jdGlvbihzKXt2YXIgaT1zYXAudWkuY29yZS5JY29uUG9vbC5nZXRJY29uSW5mbyhzKSx0PSghIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmc2FwLnVpLkRldmljZS5icm93c2VyLnZlcnNpb248OSksJD10aGlzLiQoKTtpZihpKXskLmNzcygiZm9udC1mYW1pbHkiLGkuZm9udEZhbWlseSk7aWYodCl7JC50ZXh0KGkuY29udGVudCl9ZWxzZXskLmF0dHIoImRhdGEtc2FwLXVpLWljb24tY29udGVudCIsaS5jb250ZW50KX0kLnRvZ2dsZUNsYXNzKCJzYXBVaUljb25NaXJyb3JJblJUTCIsIWkuc3VwcHJlc3NNaXJyb3JpbmcpfXRoaXMuc2V0UHJvcGVydHkoInNyYyIscywhIWkpO3JldHVybiB0aGlzfTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5zZXRXaWR0aD1mdW5jdGlvbih3KXt0aGlzLnNldFByb3BlcnR5KCJ3aWR0aCIsdyx0cnVlKTt0aGlzLiQoKS5jc3MoIndpZHRoIix3KTtyZXR1cm4gdGhpc307c2FwLnVpLmNvcmUuSWNvbi5wcm90b3R5cGUuc2V0SGVpZ2h0PWZ1bmN0aW9uKGgpe3RoaXMuc2V0UHJvcGVydHkoImhlaWdodCIsaCx0cnVlKTt0aGlzLiQoKS5jc3MoeyJoZWlnaHQiOmgsImxpbmUtaGVpZ2h0IjpofSk7cmV0dXJuIHRoaXN9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldFNpemU9ZnVuY3Rpb24ocyl7dGhpcy5zZXRQcm9wZXJ0eSgic2l6ZSIscyx0cnVlKTt0aGlzLiQoKS5jc3MoImZvbnQtc2l6ZSIscyk7cmV0dXJuIHRoaXN9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldENvbG9yPWZ1bmN0aW9uKGMpe3RoaXMuc2V0UHJvcGVydHkoImNvbG9yIixjLHRydWUpO3RoaXMuJCgpLmNzcygiY29sb3IiLGMpO3JldHVybiB0aGlzfTtzYXAudWkuY29yZS5JY29uLnByb3RvdHlwZS5zZXRBY3RpdmVDb2xvcj1mdW5jdGlvbihjKXtyZXR1cm4gdGhpcy5zZXRQcm9wZXJ0eSgiYWN0aXZlQ29sb3IiLGMsdHJ1ZSl9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldEhvdmVyQ29sb3I9ZnVuY3Rpb24oYyl7cmV0dXJuIHRoaXMuc2V0UHJvcGVydHkoImhvdmVyQ29sb3IiLGMsdHJ1ZSl9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldEJhY2tncm91bmRDb2xvcj1mdW5jdGlvbihjKXt0aGlzLnNldFByb3BlcnR5KCJiYWNrZ3JvdW5kQ29sb3IiLGMsdHJ1ZSk7dGhpcy4kKCkuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIixjKTtyZXR1cm4gdGhpc307c2FwLnVpLmNvcmUuSWNvbi5wcm90b3R5cGUuc2V0QWN0aXZlQmFja2dyb3VuZENvbG9yPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLnNldFByb3BlcnR5KCJhY3RpdmVCYWNrZ3JvdW5kQ29sb3IiLGMsdHJ1ZSl9O3NhcC51aS5jb3JlLkljb24ucHJvdG90eXBlLnNldEhvdmVyQmFja2dyb3VuZENvbG9yPWZ1bmN0aW9uKGMpe3JldHVybiB0aGlzLnNldFByb3BlcnR5KCJob3ZlckJhY2tncm91bmRDb2xvciIsYyx0cnVlKX07cmV0dXJuIHNhcC51aS5jb3JlLkljb259LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5JdGVtJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuSXRlbScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0l0ZW0iLFsnLi9saWJyYXJ5JywnLi9FbGVtZW50J10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuRWxlbWVudC5leHRlbmQoInNhcC51aS5jb3JlLkl0ZW0iLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJ0ZXh0Ijp7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOiIifSwiZW5hYmxlZCI6e3R5cGU6ImJvb2xlYW4iLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6dHJ1ZX0sInRleHREaXJlY3Rpb24iOnt0eXBlOiJzYXAudWkuY29yZS5UZXh0RGlyZWN0aW9uIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOnNhcC51aS5jb3JlLlRleHREaXJlY3Rpb24uSW5oZXJpdH0sImtleSI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkRhdGEiLGRlZmF1bHRWYWx1ZTpudWxsfX19fSk7cmV0dXJuIHNhcC51aS5jb3JlLkl0ZW19LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5MYXlvdXREYXRhJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuTGF5b3V0RGF0YScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0xheW91dERhdGEiLFsnLi9saWJyYXJ5JywnLi9FbGVtZW50J10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuRWxlbWVudC5leHRlbmQoInNhcC51aS5jb3JlLkxheW91dERhdGEiLHttZXRhZGF0YTp7ImFic3RyYWN0Ijp0cnVlLGxpYnJhcnk6InNhcC51aS5jb3JlIn19KTtzYXAudWkuY29yZS5MYXlvdXREYXRhLnByb3RvdHlwZS5pbnZhbGlkYXRlPWZ1bmN0aW9uKCl7dmFyIHA9dGhpcy5nZXRQYXJlbnQoKTtpZihwJiZwLmdldE1ldGFkYXRhKCkuZ2V0TmFtZSgpPT0ic2FwLnVpLmNvcmUuVmFyaWFudExheW91dERhdGEiKXtwPXAuZ2V0UGFyZW50KCl9aWYocCl7dmFyIGw9cC5nZXRQYXJlbnQoKTtpZihsKXt2YXIgZT1qUXVlcnkuRXZlbnQoIkxheW91dERhdGFDaGFuZ2UiKTtlLnNyY0NvbnRyb2w9cDtsLl9oYW5kbGVFdmVudChlKX19fTtzYXAudWkuY29yZS5MYXlvdXREYXRhLnByb3RvdHlwZS5zZXRMYXlvdXREYXRhPWZ1bmN0aW9uKGwpe3JldHVybiB0aGlzfTtyZXR1cm4gc2FwLnVpLmNvcmUuTGF5b3V0RGF0YX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLkxpc3RJdGVtJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuTGlzdEl0ZW0nKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9MaXN0SXRlbSIsWycuL2xpYnJhcnknLCcuL0l0ZW0nXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5JdGVtLmV4dGVuZCgic2FwLnVpLmNvcmUuTGlzdEl0ZW0iLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJpY29uIjp7dHlwZToic3RyaW5nIixncm91cDoiQXBwZWFyYW5jZSIsZGVmYXVsdFZhbHVlOm51bGx9LCJhZGRpdGlvbmFsVGV4dCI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkRhdGEiLGRlZmF1bHRWYWx1ZTpudWxsfX19fSk7cmV0dXJuIHNhcC51aS5jb3JlLkxpc3RJdGVtfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvTG9jYWxCdXN5SW5kaWNhdG9yIixbJy4vbGlicmFyeScsJy4vQ29udHJvbCcsJy4vdGhlbWluZy9QYXJhbWV0ZXJzJywnLi9Mb2NhbEJ1c3lJbmRpY2F0b3JSZW5kZXJlciddLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLkNvbnRyb2wuZXh0ZW5kKCJzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3IiLHttZXRhZGF0YTp7ZGVwcmVjYXRlZDp0cnVlLGxpYnJhcnk6InNhcC51aS5jb3JlIixwcm9wZXJ0aWVzOnsid2lkdGgiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NTaXplIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOicxMDBweCd9LCJoZWlnaHQiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NTaXplIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOicxMDBweCd9fX19KTsoZnVuY3Rpb24oKXtzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3IucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgcj0ic2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yOiI7dmFyIHA9InNhcFVpTG9jYWxCdXN5SW5kaWNhdG9yQm94U2l6ZSI7cD1zYXAudWkuY29yZS50aGVtaW5nLlBhcmFtZXRlcnMuZ2V0KHIrcCk7dGhpcy5faUJveFNpemU9ODtwPSJzYXBVaUxvY2FsQnVzeUluZGljYXRvckJveENvbG9yIjt0aGlzLl9zQm94Q29sb3I9c2FwLnVpLmNvcmUudGhlbWluZy5QYXJhbWV0ZXJzLmdldChyK3ApO3A9InNhcFVpTG9jYWxCdXN5SW5kaWNhdG9yQm94Q29sb3JBY3RpdmUiO3RoaXMuX3NCb3hDb2xvckFjdGl2ZT1zYXAudWkuY29yZS50aGVtaW5nLlBhcmFtZXRlcnMuZ2V0KHIrcCk7dGhpcy5fYW5pbWF0ZVByb3h5PWpRdWVyeS5wcm94eShhLHRoaXMpfTtzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3IucHJvdG90eXBlLmV4aXQ9ZnVuY3Rpb24oKXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5fZGVsYXllZENhbGxJZCk7ZGVsZXRlIHRoaXMuX2RlbGF5ZWRDYWxsSWR9O3NhcC51aS5jb3JlLkxvY2FsQnVzeUluZGljYXRvci5wcm90b3R5cGUub25UaGVtZUNoYW5nZWQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5nZXREb21SZWYoKSl7dGhpcy5pbnZhbGlkYXRlKCl9fTtzYXAudWkuY29yZS5Mb2NhbEJ1c3lJbmRpY2F0b3IucHJvdG90eXBlLm9uQWZ0ZXJSZW5kZXJpbmc9ZnVuY3Rpb24oKXt2YXIgdz1wYXJzZUludCh0aGlzLmdldFdpZHRoKCksMTApO3ZhciBoPXBhcnNlSW50KHRoaXMuZ2V0SGVpZ2h0KCksMTApO3ZhciAkPXRoaXMuJCgpOyQuY3NzKCJ3aWR0aCIsdysicHgiKTskLmNzcygiaGVpZ2h0IixoKyJweCIpO3ZhciBiPXRoaXMuJCgiYW5pbWF0aW9uIik7dmFyIGw9TWF0aC5mbG9vcih3LzIpO2wtPU1hdGguZmxvb3IoKDUqdGhpcy5faUJveFNpemUpLzIpO3ZhciB0PU1hdGguZmxvb3IoaC8yKS1NYXRoLmZsb29yKHRoaXMuX2lCb3hTaXplLzIpO2IuY3NzKCJsZWZ0IixsKyJweCIpO2IuY3NzKCJ0b3AiLHQrInB4Iik7aWYoIXRoaXMuXyRsZWZ0KXt0aGlzLl8kbGVmdD10aGlzLiQoImxlZnRCb3giKX1pZighdGhpcy5fJG1pZGRsZSl7dGhpcy5fJG1pZGRsZT10aGlzLiQoIm1pZGRsZUJveCIpfWlmKCF0aGlzLl8kcmlnaHQpe3RoaXMuXyRyaWdodD10aGlzLiQoInJpZ2h0Qm94Iil9dGhpcy5fZGVsYXllZENhbGxJZD1qUXVlcnkuc2FwLmRlbGF5ZWRDYWxsKDAsdGhpcyx0aGlzLl9hbmltYXRlUHJveHkpfTt2YXIgYT1mdW5jdGlvbigpe2lmKHRoaXMuZ2V0RG9tUmVmKCkpe3ZhciB0PXRoaXM7dmFyICQsYixjO3ZhciBkPSIiLGU9IiI7aWYodC5fJGxlZnQpeyQ9dC5fJGxlZnR9ZWxzZXtyZXR1cm59aWYodC5fJG1pZGRsZSl7Yj10Ll8kbWlkZGxlfWVsc2V7cmV0dXJufWlmKHQuXyRyaWdodCl7Yz10Ll8kcmlnaHR9ZWxzZXtyZXR1cm59aWYodC5fc0JveENvbG9yKXtkPXQuX3NCb3hDb2xvcn1lbHNle3JldHVybn1pZih0Ll9zQm94Q29sb3JBY3RpdmUpe2U9dC5fc0JveENvbG9yQWN0aXZlfWVsc2V7cmV0dXJufSQuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIixlKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7JC5jc3MoImJhY2tncm91bmQtY29sb3IiLGQpO2IuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIixlKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5jc3MoImJhY2tncm91bmQtY29sb3IiLGQpO2MuY3NzKCJiYWNrZ3JvdW5kLWNvbG9yIixlKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5jc3MoImJhY2tncm91bmQtY29sb3IiLGQpfSwxNTApfSwxNTApfSwxNTApO3RoaXMuX2RlbGF5ZWRDYWxsSWQ9alF1ZXJ5LnNhcC5kZWxheWVkQ2FsbCgxMjAwLHRoaXMsdGhpcy5fYW5pbWF0ZVByb3h5KX19fSgpKTtyZXR1cm4gc2FwLnVpLmNvcmUuTG9jYWxCdXN5SW5kaWNhdG9yfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuTWVzc2FnZScpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLk1lc3NhZ2UnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9NZXNzYWdlIixbJy4vbGlicmFyeScsJy4vRWxlbWVudCcsJy4vdGhlbWluZy9QYXJhbWV0ZXJzJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuRWxlbWVudC5leHRlbmQoInNhcC51aS5jb3JlLk1lc3NhZ2UiLHttZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImdldERlZmF1bHRJY29uIl0sbGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJ0ZXh0Ijp7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOm51bGx9LCJ0aW1lc3RhbXAiOnt0eXBlOiJzdHJpbmciLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6bnVsbH0sImljb24iOnt0eXBlOiJzYXAudWkuY29yZS5VUkkiLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6bnVsbH0sImxldmVsIjp7dHlwZToic2FwLnVpLmNvcmUuTWVzc2FnZVR5cGUiLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6c2FwLnVpLmNvcmUuTWVzc2FnZVR5cGUuTm9uZX0sInJlYWRPbmx5Ijp7dHlwZToiYm9vbGVhbiIsZ3JvdXA6Ik1pc2MiLGRlZmF1bHRWYWx1ZTpmYWxzZX19fX0pO3NhcC51aS5jb3JlLk1lc3NhZ2UucHJvdG90eXBlLmdldERlZmF1bHRJY29uPWZ1bmN0aW9uKHMpe3ZhciBtPWpRdWVyeS5zYXAuZ2V0TW9kdWxlUGF0aCgic2FwLnVpLmNvcmUiLCcvJyk7dmFyIHQ9InRoZW1lcy8iK3NhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFRoZW1lKCk7dmFyIGk9Ii9pbWcvbWVzc2FnZS8iO2lmKHMmJnM9PSIzMngzMiIpe2krPSIzMngzMi8ifWVsc2V7aSs9IjE2eDE2LyJ9dmFyIHU9IiI7c3dpdGNoKHRoaXMuZ2V0UHJvcGVydHkoImxldmVsIikpe2Nhc2Ugc2FwLnVpLmNvcmUuTWVzc2FnZVR5cGUuRXJyb3I6dT1tK3QraSsiTWVzc2FnZV9JY29uX0Vycm9yLnBuZyI7YnJlYWs7Y2FzZSBzYXAudWkuY29yZS5NZXNzYWdlVHlwZS5JbmZvcm1hdGlvbjp1PW0rdCtpKyJNZXNzYWdlX0ljb25fSW5mb3JtYXRpb24ucG5nIjticmVhaztjYXNlIHNhcC51aS5jb3JlLk1lc3NhZ2VUeXBlLldhcm5pbmc6dT1tK3QraSsiTWVzc2FnZV9JY29uX1dhcm5pbmcucG5nIjticmVhaztjYXNlIHNhcC51aS5jb3JlLk1lc3NhZ2VUeXBlLlN1Y2Nlc3M6dT1tK3QraSsiTWVzc2FnZV9JY29uX1N1Y2Nlc3MucG5nIjticmVhaztjYXNlIHNhcC51aS5jb3JlLk1lc3NhZ2VUeXBlLk5vbmU6ZGVmYXVsdDp1PXRoaXMuZ2V0UHJvcGVydHkoImljb24iKTticmVha31yZXR1cm4gdX07c2FwLnVpLmNvcmUuTWVzc2FnZS5wcm90b3R5cGUuY29tcGFyZUJ5VHlwZT1mdW5jdGlvbihvKXtzYXAudWkuY29yZS5NZXNzYWdlLmNvbXBhcmVCeVR5cGUodGhpcyxvKX07c2FwLnVpLmNvcmUuTWVzc2FnZS5jb21wYXJlQnlUeXBlPWZ1bmN0aW9uKG0sTSl7aWYoIW0mJiFNKXtyZXR1cm4gMH1pZihtJiYhTSl7cmV0dXJuIDF9aWYoIW0mJk0pe3JldHVybi0xfXZhciBsPW0uZ2V0TGV2ZWwoKTt2YXIgTD1NLmdldExldmVsKCk7dmFyIHQ9c2FwLnVpLmNvcmUuTWVzc2FnZVR5cGU7aWYobD09PUwpe3JldHVybiAwfXN3aXRjaChsKXtjYXNlIHQuRXJyb3I6cmV0dXJuIDE7Y2FzZSB0Lldhcm5pbmc6cmV0dXJuIEw9PT10LkVycm9yPy0xOjE7Y2FzZSB0LlN1Y2Nlc3M6cmV0dXJuIEw9PT10LkVycm9yfHxMPT09dC5XYXJuaW5nPy0xOjE7Y2FzZSB0LkluZm9ybWF0aW9uOnJldHVybiBMPT09dC5Ob25lPzE6LTE7Y2FzZSB0Lk5vbmU6cmV0dXJuLTE7ZGVmYXVsdDpqUXVlcnkuc2FwLmxvZy5lcnJvcigiQ29tcGFyaXNvbiBlcnJvciIsdGhpcyk7cmV0dXJuIDB9fTtyZXR1cm4gc2FwLnVpLmNvcmUuTWVzc2FnZX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlBvcHVwJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuUG9wdXAnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Qb3B1cCIsWydqcXVlcnkuc2FwLmdsb2JhbCcsJ3NhcC91aS9iYXNlL0V2ZW50UHJvdmlkZXInLCdzYXAvdWkvYmFzZS9PYmplY3QnLCcuL0NvbnRyb2wnLCcuL0ludGVydmFsVHJpZ2dlcicsJy4vUmVuZGVyTWFuYWdlcicsJy4vVUlBcmVhJywnanF1ZXJ5LnNhcC5zY3JpcHQnXSxmdW5jdGlvbihxLEUsQixDLEksUixVKXsidXNlIHN0cmljdCI7dmFyIFA9RS5leHRlbmQoInNhcC51aS5jb3JlLlBvcHVwIix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oYyxtLHMsYSl7RS5hcHBseSh0aGlzKTt0aGlzLl9pZD1xLnNhcC51aWQoKTt0aGlzLmJPcGVuPWZhbHNlO3RoaXMuZU9wZW5TdGF0ZT1zYXAudWkuY29yZS5PcGVuU3RhdGUuQ0xPU0VEO2lmKGMpe3RoaXMuc2V0Q29udGVudChjKX10aGlzLl9vRGVmYXVsdFBvc2l0aW9uPXtteTpQLkRvY2suQ2VudGVyQ2VudGVyLGF0OlAuRG9jay5DZW50ZXJDZW50ZXIsb2Y6ZG9jdW1lbnQsb2Zmc2V0OiIwIDAiLGNvbGxpc2lvbjoiZmxpcCJ9O3RoaXMuX29Qb3NpdGlvbj1xLmV4dGVuZCh7fSx0aGlzLl9vRGVmYXVsdFBvc2l0aW9uKTt0aGlzLl9iTW9kYWw9ISFtO3RoaXMuX29QcmV2aW91c0ZvY3VzPW51bGw7dGhpcy5fc0luaXRpYWxGb2N1c0lkPW51bGw7dGhpcy5fYlNoYWRvdz10eXBlb2Yocyk9PT0iYm9vbGVhbiI/czp0cnVlO3RoaXMuX2JBdXRvQ2xvc2U9ISFhO3RoaXMuX2FBdXRvQ2xvc2VBcmVhczt0aGlzLl9hbmltYXRpb25zPXtvcGVuOm51bGwsY2xvc2U6bnVsbH07dGhpcy5fZHVyYXRpb25zPXtvcGVuOiJmYXN0IixjbG9zZToiZmFzdCJ9O3RoaXMuX2laSW5kZXg9LTE7dGhpcy5fb0JsaW5kTGF5ZXI9bnVsbDtpZih0aGlzLnRvdWNoRW5hYmxlZCl7dGhpcy5fZkF1dG9DbG9zZUhhbmRsZXI9ZnVuY3Rpb24oZSl7aWYoZS5pc01hcmtlZCgiZGVsYXllZE1vdXNlRXZlbnQiKXx8ZS5pc01hcmtlZCgiY2FuY2VsQXV0b0Nsb3NlIikpe3JldHVybn1pZih0aGlzLmVPcGVuU3RhdGU9PT1zYXAudWkuY29yZS5PcGVuU3RhdGUuQ0xPU0lOR3x8dGhpcy5lT3BlblN0YXRlPT09c2FwLnVpLmNvcmUuT3BlblN0YXRlLkNMT1NFRCl7cmV0dXJufXZhciBkPWUudGFyZ2V0LHA9dGhpcy5fJCgpLmdldCgwKSxiPXEuY29udGFpbnMocCxkKSxmPWZhbHNlLGc9ZmFsc2UsaTtpZih0aGlzLl9hQXV0b0Nsb3NlQXJlYXMpe2ZvcihpPTA7aTx0aGlzLl9hQXV0b0Nsb3NlQXJlYXMubGVuZ3RoO2krKyl7aWYocS5zYXAuY29udGFpbnNPckVxdWFscyh0aGlzLl9hQXV0b0Nsb3NlQXJlYXNbaV0sZCkpe2Y9dHJ1ZTticmVha319fWlmKHRoaXMuX2FGb2N1c2FibGVBcmVhKXtmb3IoaT0wO2k8dGhpcy5fYUZvY3VzYWJsZUFyZWEubGVuZ3RoO2krKyl7aWYocS5zYXAuY29udGFpbnNPckVxdWFscyhxLnNhcC5kb21CeUlkKHRoaXMuX2FGb2N1c2FibGVBcmVhW2ldKSksZCl7Zz10cnVlO2JyZWFrfX19aWYoIShifHxmfHxnKSl7dGhpcy5jbG9zZSgpfX19fSxtZXRhZGF0YTp7cHVibGljTWV0aG9kczpbIm9wZW4iLCJjbG9zZSIsInNldENvbnRlbnQiLCJnZXRDb250ZW50Iiwic2V0UG9zaXRpb24iLCJzZXRTaGFkb3ciLCJzZXRNb2RhbCIsInNldEF1dG9DbG9zZSIsImlzT3BlbiIsImdldEF1dG9DbG9zZSIsImdldE9wZW5TdGF0ZSIsInNldEFuaW1hdGlvbnMiLCJzZXREdXJhdGlvbnMiLCJhdHRhY2hPcGVuZWQiLCJhdHRhY2hDbG9zZWQiLCJkZXRhY2hPcGVuZWQiLCJkZXRhY2hDbG9zZWQiXX19KTtQLl9hY3RpdmF0ZUJsaW5kTGF5ZXI9dHJ1ZTtQLmJsU3RhY2s9W107UC5NX0VWRU5UUz17b3BlbmVkOidvcGVuZWQnLGNsb3NlZDonY2xvc2VkJ307UC5Eb2NrPXtCZWdpblRvcDoiYmVnaW4gdG9wIixCZWdpbkNlbnRlcjoiYmVnaW4gY2VudGVyIixCZWdpbkJvdHRvbToiYmVnaW4gYm90dG9tIixMZWZ0VG9wOiJsZWZ0IHRvcCIsTGVmdENlbnRlcjoibGVmdCBjZW50ZXIiLExlZnRCb3R0b206ImxlZnQgYm90dG9tIixDZW50ZXJUb3A6ImNlbnRlciB0b3AiLENlbnRlckNlbnRlcjoiY2VudGVyIGNlbnRlciIsQ2VudGVyQm90dG9tOiJjZW50ZXIgYm90dG9tIixSaWdodFRvcDoicmlnaHQgdG9wIixSaWdodENlbnRlcjoicmlnaHQgY2VudGVyIixSaWdodEJvdHRvbToicmlnaHQgYm90dG9tIixFbmRUb3A6ImVuZCB0b3AiLEVuZENlbnRlcjoiZW5kIGNlbnRlciIsRW5kQm90dG9tOiJlbmQgYm90dG9tIn07UC5wcm90b3R5cGUudG91Y2hFbmFibGVkPXNhcC51aS5EZXZpY2Uuc3VwcG9ydC50b3VjaHx8cS5zYXAuc2ltdWxhdGVNb2JpbGVPbkRlc2t0b3A7UC5wcm90b3R5cGUucmVzdG9yZUZvY3VzPSFzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2gmJiFxLnNhcC5zaW11bGF0ZU1vYmlsZU9uRGVza3RvcDtQLnByb3RvdHlwZS5hdHRhY2hPcGVuZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KCJvcGVuZWQiLGYsbCk7cmV0dXJuIHRoaXN9O1AucHJvdG90eXBlLmF0dGFjaENsb3NlZD1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoImNsb3NlZCIsZixsKTtyZXR1cm4gdGhpc307UC5wcm90b3R5cGUuZGV0YWNoT3BlbmVkPWZ1bmN0aW9uKGYsbCl7dGhpcy5kZXRhY2hFdmVudCgib3BlbmVkIixmLGwpO3JldHVybiB0aGlzfTtQLnByb3RvdHlwZS5kZXRhY2hDbG9zZWQ9ZnVuY3Rpb24oZixsKXt0aGlzLmRldGFjaEV2ZW50KCJjbG9zZWQiLGYsbCk7cmV0dXJuIHRoaXN9O0IuZXh0ZW5kKCJzYXAudWkuY29yZS5Qb3B1cC5MYXllciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5nZXREb21TdHJpbmcoKTt0aGlzLl8kUmVmPXEoZCkuYXBwZW5kVG8oc2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCkpfX0pO1AuTGF5ZXIucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24ocix6KXt0aGlzLl8kUmVmLmNzcygidmlzaWJpbGl0eSIsInZpc2libGUiKS5jc3MoInotaW5kZXgiLHopO3RoaXMudXBkYXRlKHIseik7dGhpcy5fJFJlZi5pbnNlcnRBZnRlcihyKS5zaG93KCl9O1AuTGF5ZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihyLHope3ZhciBvPXIucmVjdCgpO3RoaXMuXyRSZWYuY3NzKCJsZWZ0IixvLmxlZnQpLmNzcygidG9wIixvLnRvcCk7aWYoci5jc3MoInJpZ2h0IikhPSJhdXRvIiYmci5jc3MoInJpZ2h0IikhPSJpbmhlcml0Iil7dGhpcy5fJFJlZi5jc3MoInJpZ2h0IixyLmNzcygicmlnaHQiKSkuY3NzKCJ3aWR0aCIsImF1dG8iKX1lbHNle3RoaXMuXyRSZWYuY3NzKCJ3aWR0aCIsby53aWR0aCkuY3NzKCJyaWdodCIsImF1dG8iKX1pZihyLmNzcygiYm90dG9tIikhPSJhdXRvIiYmci5jc3MoImJvdHRvbSIpIT0iaW5oZXJpdCIpe3RoaXMuXyRSZWYuY3NzKCJib3R0b20iLHIuY3NzKCJib3R0b20iKSkuY3NzKCJoZWlnaHQiLCJhdXRvIil9ZWxzZXt0aGlzLl8kUmVmLmNzcygiaGVpZ2h0IixvLmhlaWdodCkuY3NzKCJib3R0b20iLCJhdXRvIil9aWYodHlwZW9mKHopPT09Im51bWJlciIpe3RoaXMuXyRSZWYuY3NzKCJ6LWluZGV4Iix6KX19O1AuTGF5ZXIucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5fJFJlZi5oaWRlKCkuY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIikuYXBwZW5kVG8oc2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCkpfTtQLkxheWVyLnByb3RvdHlwZS5nZXREb21TdHJpbmc9ZnVuY3Rpb24oKXtxLnNhcC5sb2cuZXJyb3IoInNhcC51aS5jb3JlLlBvcHVwLkxheWVyOiBnZXREb21TdHJpbmcgZnVuY3Rpb24gbXVzdCBiZSBvdmVyd3JpdHRlbiEiKTtyZXR1cm4iIn07UC5MYXllci5leHRlbmQoInNhcC51aS5jb3JlLlBvcHVwLkJsaW5kTGF5ZXIiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe1AuTGF5ZXIuYXBwbHkodGhpcyl9fSk7UC5CbGluZExheWVyLnByb3RvdHlwZS5nZXREb21TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iPGRpdiBjbGFzcz1cInNhcFVpQmxpTHlcIiBpZD1cInNhcC11aS1ibGluZGxheWVyLSIrcS5zYXAudWlkKCkrIlwiPjxpZnJhbWUgc2Nyb2xsaW5nPVwibm9cIiBzcmM9XCJqYXZhc2NyaXB0OicnXCIJdGFiSW5kZXg9XCItMVwiPjwvaWZyYW1lPjwvZGl2PiJ9O1AucHJvdG90eXBlLm9CbGluZExheWVyUG9vbD1uZXcgc2FwLnVpLmJhc2UuT2JqZWN0UG9vbChQLkJsaW5kTGF5ZXIpO1AuTGF5ZXIuZXh0ZW5kKCJzYXAudWkuY29yZS5Qb3B1cC5TaGllbGRMYXllciIse2NvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7UC5MYXllci5hcHBseSh0aGlzKX19KTtQLlNoaWVsZExheWVyLnByb3RvdHlwZS5nZXREb21TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iPGRpdiBjbGFzcz1cInNhcFVpUG9wdXBTaGllbGRcIiBpZD1cInNhcC11aS1zaGllbGRsYXllci0iK3Euc2FwLnVpZCgpKyJcIj48L2Rpdj4ifTtQLnByb3RvdHlwZS5vU2hpZWxkTGF5ZXJQb29sPW5ldyBzYXAudWkuYmFzZS5PYmplY3RQb29sKFAuU2hpZWxkTGF5ZXIpOyhmdW5jdGlvbigpe3ZhciBsPTA7UC5nZXRMYXN0WkluZGV4PWZ1bmN0aW9uKCl7cmV0dXJuIGx9O1AucHJvdG90eXBlLmdldExhc3RaSW5kZXg9ZnVuY3Rpb24oKXtyZXR1cm4gUC5nZXRMYXN0WkluZGV4KCl9O1AuZ2V0TmV4dFpJbmRleD1mdW5jdGlvbigpe3JldHVybihsKz0xMCl9O1AucHJvdG90eXBlLmdldE5leHRaSW5kZXg9ZnVuY3Rpb24oKXtyZXR1cm4gUC5nZXROZXh0WkluZGV4KCl9fSgpKTtQLnByb3RvdHlwZS5vcGVuPWZ1bmN0aW9uKGQsbSxhLG8sYixjLGYpe2lmKHRoaXMuZU9wZW5TdGF0ZSE9c2FwLnVpLmNvcmUuT3BlblN0YXRlLkNMT1NFRCl7cmV0dXJufXRoaXMuZU9wZW5TdGF0ZT1zYXAudWkuY29yZS5PcGVuU3RhdGUuT1BFTklORzt2YXIgcz1zYXAudWkuZ2V0Q29yZSgpLmdldFN0YXRpY0FyZWFSZWYoKTtzPXNhcC51aS5nZXRDb3JlKCkuZ2V0VUlBcmVhKHMpO3RoaXMuX2JDb250ZW50QWRkZWRUb1N0YXRpYz1mYWxzZTtpZih0aGlzLm9Db250ZW50IGluc3RhbmNlb2YgQyYmIXRoaXMub0NvbnRlbnQuZ2V0UGFyZW50KCkpe3MuYWRkQ29udGVudCh0aGlzLm9Db250ZW50LHRydWUpO3RoaXMuX2JDb250ZW50QWRkZWRUb1N0YXRpYz10cnVlfWlmKHRoaXMub0NvbnRlbnQuZ2V0VUlBcmVhKXt2YXIgQT10aGlzLm9Db250ZW50LmdldFVJQXJlYSgpO2lmKEE9PT1udWxsKXtxLnNhcC5sb2cud2FybmluZygiVGhlIFBvcHVwIGNvbnRlbnQgaXMgTk9UIGNvbm5lY3RlZCB3aXRoIGFuIFVJQXJlYSBhbmQgbWF5IG5vdCB3b3JrIHByb3Blcmx5ISIpfWVsc2UgaWYoUC5fYkVuYWJsZVVJQXJlYUNoZWNrJiZBLmdldFJvb3ROb2RlKCkuaWQhPT1zLmdldFJvb3ROb2RlKCkuaWQpe3Euc2FwLmxvZy53YXJuaW5nKCJUaGUgUG9wdXAgY29udGVudCBpcyBOT1QgY29ubmVjdGVkIHdpdGggdGhlIHN0YXRpYy1VSUFyZWEgYW5kIG1heSBub3Qgd29yayBwcm9wZXJseSEiKX19aWYodHlwZW9mKGQpPT0ic3RyaW5nIil7Zj1jO2M9YjtiPW87bz1hO2E9bTttPWQ7ZD0tMX1pZihkPT09dW5kZWZpbmVkKXtkPS0xfWlmKHRoaXMucmVzdG9yZUZvY3VzKXt0aGlzLl9vUHJldmlvdXNGb2N1cz1QLmdldEN1cnJlbnRGb2N1c0luZm8oKX12YXIgcj10aGlzLl8kKHRydWUpO3ZhciBlPSJmYXN0IjtpZigoZD09PTApfHwoZD4wKSl7ZT1kfWVsc2UgaWYoKHRoaXMuX2R1cmF0aW9ucy5vcGVuPT09MCl8fCh0aGlzLl9kdXJhdGlvbnMub3Blbj4wKSl7ZT10aGlzLl9kdXJhdGlvbnMub3Blbn12YXIgXztpZihtfHxhfHxvfHxifHxjKXtfPXRoaXMuX2NyZWF0ZVBvc2l0aW9uKG0sYSxvLGIsYyl9ZWxzZXtfPXRoaXMuX29Qb3NpdGlvbn1pZighXy5vZil7Xy5vZj10aGlzLl9vUG9zaXRpb24ub2Z8fGRvY3VtZW50fXRoaXMuX2laSW5kZXg9dGhpcy5faVpJbmRleD09PXRoaXMuZ2V0TGFzdFpJbmRleCgpP3RoaXMuX2laSW5kZXg6dGhpcy5nZXROZXh0WkluZGV4KCk7dmFyIFM9c2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCk7ci5jc3MoInBvc2l0aW9uIiwiYWJzb2x1dGUiKS5jc3MoInZpc2liaWxpdHkiLCJoaWRkZW4iKTtpZighKHJbMF0ucGFyZW50Tm9kZT09Uykpe3IuYXBwZW5kVG8oUyl9ci5jc3MoInotaW5kZXgiLHRoaXMuX2laSW5kZXgpO3Euc2FwLmxvZy5kZWJ1ZygicG9zaXRpb24gcG9wdXAgY29udGVudCAiK3IuYXR0cigiaWQiKSsiIGF0ICIrKHdpbmRvdy5KU09OP0pTT04uc3RyaW5naWZ5KF8uYXQpOlN0cmluZyhfLmF0KSkpO3RoaXMuX2FwcGx5UG9zaXRpb24oXyk7aWYoZiE9PXVuZGVmaW5lZCl7dGhpcy5zZXRGb2xsb3dPZihmKX12YXIgdD10aGlzO2lmKHNhcC51aS5EZXZpY2Uub3MuaW9zJiZzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2gpe2lmKHRoaXMuX29Ub3BTaGllbGRMYXllcil7cS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLl9pVG9wU2hpZWxkUmVtb3ZlVGltZXIpO3RoaXMuX2lUb3BTaGllbGRSZW1vdmVUaW1lcj1udWxsfWVsc2V7dGhpcy5fb1RvcFNoaWVsZExheWVyPXRoaXMub1NoaWVsZExheWVyUG9vbC5ib3Jyb3dPYmplY3Qocix0aGlzLl9pWkluZGV4KzEpfXRoaXMuX2lUb3BTaGllbGRSZW1vdmVUaW1lcj1xLnNhcC5kZWxheWVkQ2FsbCg1MDAsdGhpcyxmdW5jdGlvbigpe3RoaXMub1NoaWVsZExheWVyUG9vbC5yZXR1cm5PYmplY3QodGhpcy5fb1RvcFNoaWVsZExheWVyKTt0aGlzLl9vVG9wU2hpZWxkTGF5ZXI9bnVsbDt0aGlzLl9pVG9wU2hpZWxkUmVtb3ZlVGltZXI9bnVsbH0pfXZhciBPPWZ1bmN0aW9uKCl7ci5jc3MoImRpc3BsYXkiLCJibG9jayIpO2lmKHQuX2JNb2RhbHx8dC5fYkF1dG9DbG9zZXx8dC5fc0luaXRpYWxGb2N1c0lkKXt2YXIgZz1udWxsO2lmKHQuX3NJbml0aWFsRm9jdXNJZCl7dmFyIGg9c2FwLnVpLmdldENvcmUoKS5ieUlkKHQuX3NJbml0aWFsRm9jdXNJZCk7aWYoaCl7Zz1oLmdldEZvY3VzRG9tUmVmKCl9Zz1nfHxxLnNhcC5kb21CeUlkKHQuX3NJbml0aWFsRm9jdXNJZCl9cS5zYXAuZm9jdXMoZ3x8ci5maXJzdEZvY3VzYWJsZURvbVJlZigpKX10LmVPcGVuU3RhdGU9c2FwLnVpLmNvcmUuT3BlblN0YXRlLk9QRU47aWYodC5nZXRGb2xsb3dPZigpKXtQLkRvY2tUcmlnZ2VyLmFkZExpc3RlbmVyKFAuY2hlY2tEb2NraW5nLHQpfXQuX3VwZGF0ZUJsaW5kTGF5ZXIoKTtpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmc2FwLnVpLkRldmljZS5icm93c2VyLnZlcnNpb249PTkpe3Euc2FwLmRlbGF5ZWRDYWxsKDAsdCxmdW5jdGlvbigpe3QuZmlyZUV2ZW50KFAuTV9FVkVOVFMub3BlbmVkKX0pfWVsc2V7dC5maXJlRXZlbnQoUC5NX0VWRU5UUy5vcGVuZWQpfX07ci50b2dnbGVDbGFzcygic2FwVWlTaGQiLHRoaXMuX2JTaGFkb3cpLmhpZGUoKS5jc3MoInZpc2liaWxpdHkiLCJ2aXNpYmxlIik7aWYoZT09MCl7dGhpcy5iT3Blbj10cnVlO08uYXBwbHkoKX1lbHNle2lmKHRoaXMuX2FuaW1hdGlvbnMub3Blbil7dGhpcy5fYW5pbWF0aW9ucy5vcGVuLmNhbGwobnVsbCxyLGUsTyl9ZWxzZXtyLmZhZGVJbihlLE8pfX1pZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5pbnRlcm5ldF9leHBsb3JlciYmUC5fYWN0aXZhdGVCbGluZExheWVyKXt0aGlzLl9vQmxpbmRMYXllcj10aGlzLm9CbGluZExheWVyUG9vbC5ib3Jyb3dPYmplY3Qocix0aGlzLl9pWkluZGV4LTEpfWlmKHRoaXMuX2JNb2RhbCl7dGhpcy5fc2hvd0Jsb2NrTGF5ZXIoKX1pZih0aGlzLm9Db250ZW50IGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuRWxlbWVudCl7dGhpcy5vQ29udGVudC5hZGREZWxlZ2F0ZSh0aGlzKX10aGlzLmJPcGVuPXRydWU7aWYodGhpcy5fYk1vZGFsfHx0aGlzLl9iQXV0b0Nsb3NlKXt0aGlzLmZFdmVudEhhbmRsZXI9cS5wcm94eSh0aGlzLm9uRm9jdXNFdmVudCx0aGlzKTt2YXIgcD1yO2lmKGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXImJiFzYXAudWkuRGV2aWNlLmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXIpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLmZFdmVudEhhbmRsZXIsdHJ1ZSk7cC5nZXQoMCkuYWRkRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpO2lmKHRoaXMuX2FBdXRvQ2xvc2VBcmVhcyl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hQXV0b0Nsb3NlQXJlYXMubGVuZ3RoO2krKyl7dGhpcy5fYUF1dG9DbG9zZUFyZWFzW2ldLmFkZEV2ZW50TGlzdGVuZXIoImJsdXIiLHRoaXMuZkV2ZW50SGFuZGxlcix0cnVlKX19fWVsc2V7cShkb2N1bWVudCkuYmluZCgiYWN0aXZhdGUuIit0aGlzLl9pZCx0aGlzLmZFdmVudEhhbmRsZXIpO3AuYmluZCgiZGVhY3RpdmF0ZS4iK3RoaXMuX2lkLHRoaXMuZkV2ZW50SGFuZGxlcik7aWYodGhpcy5fYUF1dG9DbG9zZUFyZWFzKXtmb3IodmFyIGk9MDtpPHRoaXMuX2FBdXRvQ2xvc2VBcmVhcy5sZW5ndGg7aSsrKXtxKHRoaXMuX2FBdXRvQ2xvc2VBcmVhc1tpXSkuYmluZCgiZGVhY3RpdmF0ZS4iK3RoaXMuX2lkLHRoaXMuZkV2ZW50SGFuZGxlcil9fX19aWYodGhpcy50b3VjaEVuYWJsZWQmJiF0aGlzLl9iTW9kYWwmJnRoaXMuX2JBdXRvQ2xvc2Upe3EoZG9jdW1lbnQpLm9uKCJ0b3VjaHN0YXJ0IG1vdXNlZG93biIscS5wcm94eSh0aGlzLl9mQXV0b0Nsb3NlSGFuZGxlcix0aGlzKSl9aWYodGhpcy5fb0JsaW5kTGF5ZXIpe3RoaXMuX3Jlc2l6ZUxpc3RlbmVySWQ9c2FwLnVpLmNvcmUuUmVzaXplSGFuZGxlci5yZWdpc3Rlcih0aGlzLl8kKCkuZ2V0KDApLHEucHJveHkodGhpcy5vbnJlc2l6ZSx0aGlzKSl9fTtQLnByb3RvdHlwZS5vbkZvY3VzRXZlbnQ9ZnVuY3Rpb24oYil7dmFyIGU9cS5ldmVudC5maXgoYik7dmFyIHQ9KGUudHlwZT09ImZvY3VzInx8ZS50eXBlPT0iYWN0aXZhdGUiKT8iZm9jdXMiOiJibHVyIjt2YXIgYz1mYWxzZTtpZih0PT0iZm9jdXMiKXt2YXIgZD10aGlzLl8kKCkuZ2V0KDApO2lmKGQpe2M9ZD09ZS50YXJnZXR8fHEuY29udGFpbnMoZCxlLnRhcmdldCk7aWYoIWMmJnRoaXMuX2FBdXRvQ2xvc2VBcmVhcyl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hQXV0b0Nsb3NlQXJlYXMubGVuZ3RoO2krKyl7Yz10aGlzLl9hQXV0b0Nsb3NlQXJlYXNbaV09PWUudGFyZ2V0fHxxLmNvbnRhaW5zKHRoaXMuX2FBdXRvQ2xvc2VBcmVhc1tpXSxlLnRhcmdldCk7aWYoYyl7YnJlYWt9fX1pZighYyYmdGhpcy5fYUZvY3VzYWJsZUFyZWEpe3ZhciBqPXRoaXMuX2FGb2N1c2FibGVBcmVhLmxlbmd0aDtmb3IoaT0wO2k8ajtpKyspe2lmKHEuc2FwLmRvbUJ5SWQodGhpcy5fYUZvY3VzYWJsZUFyZWFbaV0pKXtjPWUudGFyZ2V0LmlkPT09dGhpcy5fYUZvY3VzYWJsZUFyZWFbaV18fHEuY29udGFpbnMocS5zYXAuZG9tQnlJZCh0aGlzLl9hRm9jdXNhYmxlQXJlYVtpXSksZS50YXJnZXQpO2lmKGMpe2JyZWFrfX19fXEuc2FwLmxvZy5kZWJ1ZygiZm9jdXMgZXZlbnQgb24gIitlLnRhcmdldC5pZCsiLCBjb250YWluczogIitjKTtpZih0aGlzLl9iTW9kYWwmJiFjKXt2YXIgVD0oUC5nZXRMYXN0WkluZGV4KCk9PXRoaXMuX2laSW5kZXgpO2lmKFQpe2lmKCFzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2h8fHEoZS50YXJnZXQpLmlzKCI6aW5wdXQiKSl7dmFyIEQ9dGhpcy5vTGFzdEJsdXJyZWRFbGVtZW50P3RoaXMub0xhc3RCbHVycmVkRWxlbWVudDpkO3Euc2FwLmZvY3VzKEQpfX19ZWxzZSBpZih0aGlzLl9iQXV0b0Nsb3NlJiZjJiZ0aGlzLl9zVGltZW91dElkKXtpZih0aGlzLl9zVGltZW91dElkKXtxLnNhcC5jbGVhckRlbGF5ZWRDYWxsKHRoaXMuX3NUaW1lb3V0SWQpO3RoaXMuX3NUaW1lb3V0SWQ9bnVsbH19fX1lbHNlIGlmKHQ9PSJibHVyIil7cS5zYXAubG9nLmRlYnVnKCJibHVyIGV2ZW50IG9uICIrZS50YXJnZXQuaWQpO2lmKHRoaXMuX2JNb2RhbCl7dGhpcy5vTGFzdEJsdXJyZWRFbGVtZW50PWUudGFyZ2V0fWVsc2UgaWYodGhpcy5fYkF1dG9DbG9zZSl7aWYoIXRoaXMudG91Y2hFbmFibGVkJiYhdGhpcy5fc1RpbWVvdXRJZCl7dGhpcy5fc1RpbWVvdXRJZD1xLnNhcC5kZWxheWVkQ2FsbCgwLHRoaXMsImNsb3NlIil9fX19O1AucHJvdG90eXBlLnNldEluaXRpYWxGb2N1c0lkPWZ1bmN0aW9uKGkpe3RoaXMuX3NJbml0aWFsRm9jdXNJZD1pfTtQLnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbihkKXtpZih0aGlzLmVPcGVuU3RhdGU9PXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5DTE9TRUR8fHRoaXMuZU9wZW5TdGF0ZT09c2FwLnVpLmNvcmUuT3BlblN0YXRlLkNMT1NJTkcpe3JldHVybn12YXIgcj0iZmFzdCI7aWYoKGQ9PT0wKXx8KGQ+MCkpe3I9ZH1lbHNlIGlmKCh0aGlzLl9kdXJhdGlvbnMuY2xvc2U9PT0wKXx8KHRoaXMuX2R1cmF0aW9ucy5jbG9zZT4wKSl7cj10aGlzLl9kdXJhdGlvbnMuY2xvc2V9aWYocj09PTAmJnRoaXMuZU9wZW5TdGF0ZT09c2FwLnVpLmNvcmUuT3BlblN0YXRlLk9QRU5JTkcpe3JldHVybn10aGlzLmVPcGVuU3RhdGU9c2FwLnVpLmNvcmUuT3BlblN0YXRlLkNMT1NJTkc7aWYodGhpcy5nZXRGb2xsb3dPZigpKXtQLkRvY2tUcmlnZ2VyLnJlbW92ZUxpc3RlbmVyKFAuY2hlY2tEb2NraW5nLHRoaXMpfWlmKHRoaXMuX2FGb2N1c2FibGVBcmVhKXtkZWxldGUgdGhpcy5fYUZvY3VzYWJsZUFyZWF9aWYodGhpcy5fYkZvY3VzYWJsZUxpc3RlbmVyc1JlZ2lzdGVyZWQpe2RlbGV0ZSB0aGlzLl9iRm9jdXNhYmxlTGlzdGVuZXJzUmVnaXN0ZXJlZDt2YXIgZT0ic2FwLnVpLmNvcmUuUG9wdXAuYWRkRm9jdXNhYmxlQ29udGVudC0iK3RoaXMuX2lkO3NhcC51aS5nZXRDb3JlKCkuZ2V0RXZlbnRCdXMoKS51bnN1YnNjcmliZSgic2FwLnVpIixlLHRoaXMuX2FkZEZvY3VzYWJsZUFyZWEsdGhpcyk7ZT0ic2FwLnVpLmNvcmUuUG9wdXAucmVtb3ZlRm9jdXNhYmxlQ29udGVudC0iK3RoaXMuX2lkO3NhcC51aS5nZXRDb3JlKCkuZ2V0RXZlbnRCdXMoKS51bnN1YnNjcmliZSgic2FwLnVpIixlLHRoaXMuX3JlbW92ZUZvY3VzYWJsZUFyZWEsdGhpcyl9aWYodGhpcy5vQ29udGVudCYmdGhpcy5fYkNvbnRlbnRBZGRlZFRvU3RhdGljKXtzYXAudWkuZ2V0Q29yZSgpLmdldEV2ZW50QnVzKCkucHVibGlzaCgic2FwLnVpIiwiX19iZWZvcmVQb3B1cENsb3NlIix7ZG9tTm9kZTp0aGlzLl8kKCkuZ2V0KDApfSk7dmFyIHM9c2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCk7cz1zYXAudWkuZ2V0Q29yZSgpLmdldFVJQXJlYShzKTtzLnJlbW92ZUNvbnRlbnQocy5pbmRleE9mQ29udGVudCh0aGlzLm9Db250ZW50KSx0cnVlKX10aGlzLl9iQ29udGVudEFkZGVkVG9TdGF0aWM9ZmFsc2U7dGhpcy5fc1RpbWVvdXRJZD1udWxsO2lmKHRoaXMuZkV2ZW50SGFuZGxlcil7dmFyIHA9dGhpcy5fJCgpO2lmKGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXImJiFzYXAudWkuRGV2aWNlLmJyb3dzZXIuaW50ZXJuZXRfZXhwbG9yZXIpe2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLmZFdmVudEhhbmRsZXIsdHJ1ZSk7cC5nZXQoMCkucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYmx1ciIsdGhpcy5mRXZlbnRIYW5kbGVyLHRydWUpO2lmKHRoaXMuX2FBdXRvQ2xvc2VBcmVhcyl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hQXV0b0Nsb3NlQXJlYXMubGVuZ3RoO2krKyl7dGhpcy5fYUF1dG9DbG9zZUFyZWFzW2ldLnJlbW92ZUV2ZW50TGlzdGVuZXIoImJsdXIiLHRoaXMuZkV2ZW50SGFuZGxlcix0cnVlKX19fWVsc2V7cShkb2N1bWVudCkudW5iaW5kKCJhY3RpdmF0ZS4iK3RoaXMuX2lkLHRoaXMuZkV2ZW50SGFuZGxlcik7cC51bmJpbmQoImRlYWN0aXZhdGUuIit0aGlzLl9pZCx0aGlzLmZFdmVudEhhbmRsZXIpO2lmKHRoaXMuX2FBdXRvQ2xvc2VBcmVhcyl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hQXV0b0Nsb3NlQXJlYXMubGVuZ3RoO2krKyl7cSh0aGlzLl9hQXV0b0Nsb3NlQXJlYXNbaV0pLnVuYmluZCgiZGVhY3RpdmF0ZS4iK3RoaXMuX2lkLHRoaXMuZkV2ZW50SGFuZGxlcil9fX10aGlzLmZFdmVudEhhbmRsZXI9bnVsbH1pZih0aGlzLnRvdWNoRW5hYmxlZCl7aWYoIXRoaXMuX2JNb2RhbCYmdGhpcy5fYkF1dG9DbG9zZSl7cShkb2N1bWVudCkub2ZmKCJ0b3VjaHN0YXJ0IG1vdXNlZG93biIsdGhpcy5fZkF1dG9DbG9zZUhhbmRsZXIpfX1pZih0aGlzLm9Db250ZW50IGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuRWxlbWVudCl7dGhpcy5vQ29udGVudC5yZW1vdmVEZWxlZ2F0ZSh0aGlzKX12YXIgJD10aGlzLl8kKCk7aWYodGhpcy5fb0JsaW5kTGF5ZXIpe3RoaXMub0JsaW5kTGF5ZXJQb29sLnJldHVybk9iamVjdCh0aGlzLl9vQmxpbmRMYXllcil9dGhpcy5fb0JsaW5kTGF5ZXI9bnVsbDt2YXIgdD10aGlzO2lmKHNhcC51aS5EZXZpY2Uub3MuaW9zJiZzYXAudWkuRGV2aWNlLnN1cHBvcnQudG91Y2gpe2lmKHRoaXMuX29Cb3R0b21TaGllbGRMYXllcil7cS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLl9pQm90dG9tU2hpZWxkUmVtb3ZlVGltZXIpO3RoaXMuX2lCb3R0b21TaGllbGRSZW1vdmVUaW1lcj1udWxsfWVsc2V7dGhpcy5fb0JvdHRvbVNoaWVsZExheWVyPXRoaXMub1NoaWVsZExheWVyUG9vbC5ib3Jyb3dPYmplY3QoJCx0aGlzLl9pWkluZGV4LTMpfXRoaXMuX2lCb3R0b21TaGllbGRSZW1vdmVUaW1lcj1xLnNhcC5kZWxheWVkQ2FsbCg1MDAsdGhpcyxmdW5jdGlvbigpe3RoaXMub1NoaWVsZExheWVyUG9vbC5yZXR1cm5PYmplY3QodGhpcy5fb0JvdHRvbVNoaWVsZExheWVyKTt0aGlzLl9vQm90dG9tU2hpZWxkTGF5ZXI9bnVsbDt0aGlzLl9pQm90dG9tU2hpZWxkUmVtb3ZlVGltZXI9bnVsbH0pfXZhciBjPWZ1bmN0aW9uKCl7cSgkKS5oaWRlKCkuY3NzKCJ2aXNpYmlsaXR5IiwiaW5oZXJpdCIpLmNzcygibGVmdCIsIjBweCIpLmNzcygidG9wIiwiMHB4IikuY3NzKCJyaWdodCIsIiIpO2lmKHQucmVzdG9yZUZvY3VzKXtpZih0Ll9iTW9kYWwpe1AuYXBwbHlGb2N1c0luZm8odC5fb1ByZXZpb3VzRm9jdXMpO3QuX29QcmV2aW91c0ZvY3VzPW51bGw7dC5vTGFzdEJsdXJyZWRFbGVtZW50PW51bGx9fXQuYk9wZW49ZmFsc2U7dC5lT3BlblN0YXRlPXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5DTE9TRUQ7dC5maXJlRXZlbnQoUC5NX0VWRU5UUy5jbG9zZWQpfTtpZihyPT0wKXtjLmFwcGx5KCl9ZWxzZXtpZih0aGlzLl9hbmltYXRpb25zLmNsb3NlKXt0aGlzLl9hbmltYXRpb25zLmNsb3NlLmNhbGwobnVsbCwkLHIsYyl9ZWxzZXskLmZhZGVPdXQocixjKX19aWYodGhpcy5fYk1vZGFsKXt0aGlzLl9oaWRlQmxvY2tMYXllcigpfWlmKHRoaXMuX3Jlc2l6ZUxpc3RlbmVySWQpe3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3Rlcih0aGlzLl9yZXNpemVMaXN0ZW5lcklkKTt0aGlzLl9yZXNpemVMaXN0ZW5lcklkPW51bGx9fTtQLmdldEN1cnJlbnRGb2N1c0luZm89ZnVuY3Rpb24oKXt2YXIgXz1udWxsO3ZhciBmPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q3VycmVudEZvY3VzZWRDb250cm9sSWQoKTtpZihmKXt2YXIgRj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbnRyb2woZik7Xz17J3NGb2N1c0lkJzpmLCdvRm9jdXNJbmZvJzpGP0YuZ2V0Rm9jdXNJbmZvKCk6e319fWVsc2V7dHJ5e3ZhciBlPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7aWYoZSl7Xz17J3NGb2N1c0lkJzplLmlkLCdvRm9jdXNlZEVsZW1lbnQnOmUsJ29Gb2N1c0luZm8nOnt9fX19Y2F0Y2goYSl7Xz1udWxsfX1yZXR1cm4gX307UC5hcHBseUZvY3VzSW5mbz1mdW5jdGlvbihwKXtpZihwKXt2YXIgZj1zYXAudWkuZ2V0Q29yZSgpLmdldENvbnRyb2wocC5zRm9jdXNJZCk7aWYoZil7Zi5hcHBseUZvY3VzSW5mbyhwLm9Gb2N1c0luZm8pfWVsc2V7dmFyIGU9cS5zYXAuZG9tQnlJZChwLnNGb2N1c0lkKXx8cC5vRm9jdXNlZEVsZW1lbnQ7cS5zYXAuZm9jdXMoZSl9fX07UC5wcm90b3R5cGUuc2V0Q29udGVudD1mdW5jdGlvbihjKXt0aGlzLm9Db250ZW50PWM7cmV0dXJuIHRoaXN9O1AucHJvdG90eXBlLmdldENvbnRlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vQ29udGVudH07UC5wcm90b3R5cGUuc2V0UG9zaXRpb249ZnVuY3Rpb24obSxhLG8sYixjKXt0aGlzLl9vUG9zaXRpb249dGhpcy5fY3JlYXRlUG9zaXRpb24obSxhLG8sYixjKTtpZih0aGlzLmVPcGVuU3RhdGUhPXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5DTE9TRUQpe3RoaXMuX2FwcGx5UG9zaXRpb24odGhpcy5fb1Bvc2l0aW9uKTt0aGlzLl9vQmxpbmRMYXllciYmdGhpcy5fb0JsaW5kTGF5ZXIudXBkYXRlKHRoaXMuXyQoKSl9cmV0dXJuIHRoaXN9O1AucHJvdG90eXBlLl9jcmVhdGVQb3NpdGlvbj1mdW5jdGlvbihtLGEsbyxiLGMpe3ZhciBuPWZhbHNlO2lmKG0mJihtLmluZGV4T2YoIisiKT49MHx8bS5pbmRleE9mKCItIik+PTApKXtuPXRydWU7aWYoYiYmYiE9IjAgMCIpe3Euc2FwLmxvZy53YXJuaW5nKCJvZmZzZXQgdXNlZCBpbiBteSBhbmQgaW4gb2Zmc2V0LCB0aGUgb2Zmc2V0IHZhbHVlIHdpbGwgYmUgaWdub3JlZCIsInNhcC51aS5jb3JlLlBvcHVwIiwic2V0UG9zaXRpb24iKX1iPW51bGx9dmFyIHA9cS5leHRlbmQoe30sdGhpcy5fb0RlZmF1bHRQb3NpdGlvbix7Im15IjptfHx0aGlzLl9vRGVmYXVsdFBvc2l0aW9uLm15LCJhdCI6YXx8dGhpcy5fb0RlZmF1bHRQb3NpdGlvbi5hdCwib2YiOm8sIm9mZnNldCI6YiwiY29sbGlzaW9uIjpjfSk7aWYoIXEudWkudmVyc2lvbil7aWYoUC5fYk5ld09mZnNldD09bnVsbCl7UC5fYk5ld09mZnNldD10cnVlO2lmKCEoc2FwLnVpLkRldmljZS5icm93c2VyLmludGVybmV0X2V4cGxvcmVyJiZzYXAudWkuRGV2aWNlLmJyb3dzZXIudmVyc2lvbj09OCYmcS5zYXAuVmVyc2lvbihxKCkuanF1ZXJ5KS5jb21wYXJlVG8oIjEuOC4xIik8MCkpe3ZhciBkPXEoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpO2QucG9zaXRpb24oe29mOndpbmRvdyx1c2luZzpmdW5jdGlvbihlLGYpe1AuX2JOZXdPZmZzZXQ9KGYhPT11bmRlZmluZWQpfX0pfX19aWYoUC5fYk5ld09mZnNldHx8cS5zYXAuVmVyc2lvbihxLnVpLnZlcnNpb24pLmNvbXBhcmVUbygiMS44LjIzIik+MCl7aWYoYiYmYiE9IjAgMCIpe3ZhciBNPXAubXkuc3BsaXQoIiAiKTt2YXIgTz1iLnNwbGl0KCIgIik7dmFyIHM9W3BhcnNlSW50KE9bMF0pPDA/IiI6IisiLHBhcnNlSW50KE9bMV0pPDA/IiI6IisiXTtwLm15PU1bMF0rc1swXStPWzBdKyIgIitNWzFdK3NbMV0rT1sxXTtwLm9mZnNldD1udWxsfX1lbHNlIGlmKG4pe3ZhciBNPXAubXkuc3BsaXQoIiAiKTt2YXIgTz1bIiIsIiJdO3ZhciBpPU1bMF0uaW5kZXhPZigiKyIpO2lmKGk8MCl7aT1NWzBdLmluZGV4T2YoIi0iKX1pZihpPj0wKXtPWzBdPU1bMF0uc2xpY2UoaSk7TVswXT1NWzBdLnNsaWNlKDAsaSl9aT1NWzFdLmluZGV4T2YoIisiKTtpZihpPDApe2k9TVsxXS5pbmRleE9mKCItIil9aWYoaT49MCl7T1sxXT1NWzFdLnNsaWNlKGkpO01bMV09TVsxXS5zbGljZSgwLGkpfXAubXk9TVswXSsiICIrTVsxXTtwLm9mZnNldD1PWzBdKyIgIitPWzFdfXJldHVybiBwfTtQLnByb3RvdHlwZS5fZ2V0UG9zaXRpb25PZmZzZXQ9ZnVuY3Rpb24oKXt2YXIgbz1bXTtpZih0aGlzLl9vUG9zaXRpb24ubXkmJih0aGlzLl9vUG9zaXRpb24ubXkuaW5kZXhPZigiKyIpPj0wfHx0aGlzLl9vUG9zaXRpb24ubXkuaW5kZXhPZigiLSIpPj0wKSl7dmFyIG09dGhpcy5fb1Bvc2l0aW9uLm15LnNwbGl0KCIgIik7dmFyIGk9bVswXS5pbmRleE9mKCIrIik7aWYoaTwwKXtpPW1bMF0uaW5kZXhPZigiLSIpfWlmKGk+PTApe29bMF09bVswXS5zbGljZShpKX1pPW1bMV0uaW5kZXhPZigiKyIpO2lmKGk8MCl7aT1tWzFdLmluZGV4T2YoIi0iKX1pZihpPj0wKXtvWzFdPW1bMV0uc2xpY2UoaSl9fWVsc2UgaWYodGhpcy5fb1Bvc2l0aW9uLm9mZnNldCl7bz10aGlzLl9vUG9zaXRpb24ub2Zmc2V0LnNwbGl0KCIgIil9cmV0dXJuIG99O1AucHJvdG90eXBlLl9hcHBseVBvc2l0aW9uPWZ1bmN0aW9uKHApe3ZhciByPXNhcC51aS5nZXRDb3JlKCkuZ2V0Q29uZmlndXJhdGlvbigpLmdldFJUTCgpO3ZhciAkPXRoaXMuXyQoKTt2YXIgYT1wLmF0O2lmKHR5cGVvZihhKT09PSJzdHJpbmciKXskLmNzcygiZGlzcGxheSIsImJsb2NrIikucG9zaXRpb24odGhpcy5fcmVzb2x2ZVJlZmVyZW5jZSh0aGlzLl9jb252ZXJ0UG9zaXRpb25SVEwocCxyKSkpO3RoaXMuX2ZpeFBvc2l0aW9uaW5nKHAscil9ZWxzZSBpZihzYXAudWkuY29yZS5DU1NTaXplLmlzVmFsaWQoYS5sZWZ0KSYmc2FwLnVpLmNvcmUuQ1NTU2l6ZS5pc1ZhbGlkKGEudG9wKSl7JC5jc3MoImxlZnQiLGEubGVmdCkuY3NzKCJ0b3AiLGEudG9wKX1lbHNlIGlmKHNhcC51aS5jb3JlLkNTU1NpemUuaXNWYWxpZChhLnJpZ2h0KSYmc2FwLnVpLmNvcmUuQ1NTU2l6ZS5pc1ZhbGlkKGEudG9wKSl7JC5jc3MoInJpZ2h0IixhLnJpZ2h0KS5jc3MoInRvcCIsYS50b3ApfWVsc2UgaWYodHlwZW9mKGEubGVmdCk9PT0ibnVtYmVyIiYmdHlwZW9mKGEudG9wKT09PSJudW1iZXIiKXt2YXIgZD0kWzBdO2lmKGQmJmQuc3R5bGUucmlnaHQpe3ZhciB3PSQub3V0ZXJXaWR0aCgpOyQuY3NzKCJyaWdodCIsKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aC0oYS5sZWZ0K3cpKSsicHgiKS5jc3MoInRvcCIsYS50b3ArInB4Iil9ZWxzZXskLmNzcygibGVmdCIsYS5sZWZ0KyJweCIpLmNzcygidG9wIixhLnRvcCsicHgiKX19dGhpcy5fb0xhc3RQb3NpdGlvbj1wO3RoaXMuX29MYXN0T2ZSZWN0PXRoaXMuX2NhbGNPZlJlY3QocC5vZil9O1AucHJvdG90eXBlLl9jYWxjT2ZSZWN0PWZ1bmN0aW9uKG8pe3JldHVybiBxKG8gaW5zdGFuY2VvZiBzYXAudWkuY29yZS5FbGVtZW50P28uZ2V0RG9tUmVmKCk6bykucmVjdCgpfTtQLnByb3RvdHlwZS5fY29udmVydFBvc2l0aW9uUlRMPWZ1bmN0aW9uKHAscil7dmFyIGY9cS5leHRlbmQoe30scCk7aWYocil7dmFyIG49ZmFsc2U7aWYoZi5teSYmKGYubXkuaW5kZXhPZigiKyIpPj0wfHxmLm15LmluZGV4T2YoIi0iKT49MCkpe249dHJ1ZX1pZigoZi5vZmZzZXR8fG4pJiYoKGYubXkuaW5kZXhPZigiYmVnaW4iKT4tMSl8fChmLm15LmluZGV4T2YoImVuZCIpPi0xKSkmJigoZi5hdC5pbmRleE9mKCJiZWdpbiIpPi0xKXx8KGYuYXQuaW5kZXhPZigiZW5kIik+LTEpKSl7aWYobil7dmFyIG09Zi5teS5zcGxpdCgiICIpO2lmKG0ubGVuZ3RoPT0yKXtmLm15PSIiO2lmKG1bMF0pe2lmKG1bMF0uaW5kZXhPZigiYmVnaW4iKT4tMXx8bVswXS5pbmRleE9mKCJlbmQiKT4tMSl7aWYobVswXS5pbmRleE9mKCIrIik+LTEpe21bMF09bVswXS5yZXBsYWNlKCIrIiwiLSIpfWVsc2UgaWYobVswXS5pbmRleE9mKCItIik+LTEpe21bMF09bVswXS5yZXBsYWNlKCItIiwiKyIpfX1mLm15PW1bMF19aWYobVsxXSl7aWYobVsxXS5pbmRleE9mKCJiZWdpbiIpPi0xfHxtWzFdLmluZGV4T2YoImVuZCIpPi0xKXtpZihtWzFdLmluZGV4T2YoIisiKT4tMSl7bVsxXT1tWzFdLnJlcGxhY2UoIisiLCItIil9ZWxzZSBpZihtWzFdLmluZGV4T2YoIi0iKT4tMSl7bVsxXT1tWzFdLnJlcGxhY2UoIi0iLCIrIil9fWlmKG1bMF0pe2YubXk9Zi5teSsiICJ9Zi5teT1mLm15K21bMV19fX1lbHNle2Yub2Zmc2V0PXRoaXMuX21pcnJvck9mZnNldChmLm9mZnNldCl9fWYubXk9Zi5teS5yZXBsYWNlKCJiZWdpbiIsInJpZ2h0IikucmVwbGFjZSgiZW5kIiwibGVmdCIpO2YuYXQ9Zi5hdC5yZXBsYWNlKCJiZWdpbiIsInJpZ2h0IikucmVwbGFjZSgiZW5kIiwibGVmdCIpfWVsc2V7Zi5teT1mLm15LnJlcGxhY2UoImVuZCIsInJpZ2h0IikucmVwbGFjZSgiYmVnaW4iLCJsZWZ0Iik7Zi5hdD1mLmF0LnJlcGxhY2UoImVuZCIsInJpZ2h0IikucmVwbGFjZSgiYmVnaW4iLCJsZWZ0Iil9cmV0dXJuIGZ9O1AucHJvdG90eXBlLl9taXJyb3JPZmZzZXQ9ZnVuY3Rpb24obyl7dmFyIE89cS50cmltKG8pLnNwbGl0KC9ccy8pO3ZhciBwPXBhcnNlSW50KE9bMF0sMTApO3JldHVybigtcCkrIiAiK09bTy5sZW5ndGgtMV19O1AucHJvdG90eXBlLl9maXhQb3NpdGlvbmluZz1mdW5jdGlvbihwLHIpe3ZhciBtPXAubXk7aWYodHlwZW9mKG0pPT09InN0cmluZyIpe2lmKHImJigobS5pbmRleE9mKCJyaWdodCIpPi0xKXx8KG0uaW5kZXhPZigiYmVnaW4iKT4tMSl8fChtLmluZGV4T2YoImNlbnRlciIpPi0xKSkpe3ZhciAkPXRoaXMuXyQoKTt2YXIgYT1xKHdpbmRvdykud2lkdGgoKS0kLm91dGVyV2lkdGgoKS0kLm9mZnNldCgpLmxlZnQ7JC5jc3MoInJpZ2h0IixhKyJweCIpLmNzcygibGVmdCIsIiIpfWVsc2UgaWYoKG0uaW5kZXhPZigicmlnaHQiKT4tMSl8fChtLmluZGV4T2YoImVuZCIpPi0xKSl7dmFyICQ9dGhpcy5fJCgpO3ZhciBhPXEod2luZG93KS53aWR0aCgpLSQub3V0ZXJXaWR0aCgpLSQub2Zmc2V0KCkubGVmdDskLmNzcygicmlnaHQiLGErInB4IikuY3NzKCJsZWZ0IiwiIil9fX07UC5wcm90b3R5cGUuX3Jlc29sdmVSZWZlcmVuY2U9ZnVuY3Rpb24ocCl7dmFyIHI9cDtpZihwLm9mIGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuRWxlbWVudCl7cj1xLmV4dGVuZCh7fSxwLHtvZjpwLm9mLmdldERvbVJlZigpfSl9cmV0dXJuIHJ9O1AucHJvdG90eXBlLnNldFNoYWRvdz1mdW5jdGlvbihzKXt0aGlzLl9iU2hhZG93PXM7aWYodGhpcy5lT3BlblN0YXRlIT1zYXAudWkuY29yZS5PcGVuU3RhdGUuQ0xPU0VEKXt0aGlzLl8kKCkudG9nZ2xlQ2xhc3MoInNhcFVpU2hkIixzKX1yZXR1cm4gdGhpc307UC5wcm90b3R5cGUuc2V0TW9kYWw9ZnVuY3Rpb24obSxNKXt2YXIgbz10aGlzLl9iTW9kYWw7dGhpcy5fYk1vZGFsPW07dGhpcy5fc01vZGFsQ1NTQ2xhc3M9TTtpZih0aGlzLmlzT3BlbigpKXtpZihvIT09bSl7aWYobSl7dGhpcy5fc2hvd0Jsb2NrTGF5ZXIoKX1lbHNle3RoaXMuX2hpZGVCbG9ja0xheWVyKCl9aWYodGhpcy50b3VjaEVuYWJsZWQmJnRoaXMuX2JBdXRvQ2xvc2Upe2lmKCFtKXtxKGRvY3VtZW50KS5vbigidG91Y2hzdGFydCBtb3VzZWRvd24iLHEucHJveHkodGhpcy5fZkF1dG9DbG9zZUhhbmRsZXIsdGhpcykpfWVsc2V7cShkb2N1bWVudCkub2ZmKCJ0b3VjaHN0YXJ0IG1vdXNlZG93biIsdGhpcy5fZkF1dG9DbG9zZUhhbmRsZXIpfX19fXJldHVybiB0aGlzfTtQLnByb3RvdHlwZS5zZXRBdXRvQ2xvc2U9ZnVuY3Rpb24oYSl7aWYodGhpcy50b3VjaEVuYWJsZWQmJnRoaXMuaXNPcGVuKCkmJnRoaXMuX2JBdXRvQ2xvc2UhPT1hKXtpZighdGhpcy5fYk1vZGFsKXtpZihhKXtxKGRvY3VtZW50KS5vbigidG91Y2hzdGFydCBtb3VzZWRvd24iLHEucHJveHkodGhpcy5fZkF1dG9DbG9zZUhhbmRsZXIsdGhpcykpfWVsc2V7cShkb2N1bWVudCkub2ZmKCJ0b3VjaHN0YXJ0IG1vdXNlZG93biIsdGhpcy5fZkF1dG9DbG9zZUhhbmRsZXIpfX19dGhpcy5fYkF1dG9DbG9zZT1hO3JldHVybiB0aGlzfTtQLnByb3RvdHlwZS5zZXRBdXRvQ2xvc2VBcmVhcz1mdW5jdGlvbihhKXt0aGlzLl9hQXV0b0Nsb3NlQXJlYXM9YTtyZXR1cm4gdGhpc307UC5wcm90b3R5cGUuc2V0QW5pbWF0aW9ucz1mdW5jdGlvbihvLGMpe2lmKG8mJih0eXBlb2Yobyk9PSJmdW5jdGlvbiIpKXt0aGlzLl9hbmltYXRpb25zLm9wZW49b31pZihjJiYodHlwZW9mKGMpPT0iZnVuY3Rpb24iKSl7dGhpcy5fYW5pbWF0aW9ucy5jbG9zZT1jfXJldHVybiB0aGlzfTtQLnByb3RvdHlwZS5zZXREdXJhdGlvbnM9ZnVuY3Rpb24obyxjKXtpZigobz4wKXx8KG89PT0wKSl7dGhpcy5fZHVyYXRpb25zLm9wZW49b31pZigoYz4wKXx8KGM9PT0wKSl7dGhpcy5fZHVyYXRpb25zLmNsb3NlPWN9cmV0dXJuIHRoaXN9O1AucHJvdG90eXBlLnNldEZvbGxvd09mPWZ1bmN0aW9uKGYpe3ZhciB1PWZhbHNlO1AuRG9ja1RyaWdnZXIucmVtb3ZlTGlzdGVuZXIoUC5jaGVja0RvY2tpbmcsdGhpcyk7aWYodHlwZW9mKGYpPT09ImZ1bmN0aW9uIil7dGhpcy5fYkZvbGxvd09mPXRydWU7dGhpcy5fZm9sbG93T2ZIYW5kbGVyPWY7dT10cnVlfWVsc2UgaWYodHlwZW9mKGYpPT09ImJvb2xlYW4iKXt0aGlzLl9iRm9sbG93T2Y9ZjtpZighdGhpcy5fYkZvbGxvd09mKXt0aGlzLl9mb2xsb3dPZkhhbmRsZXI9bnVsbH11PWZ9ZWxzZXt0aGlzLl9iRm9sbG93T2Y9ZmFsc2U7dGhpcy5fZm9sbG93T2ZIYW5kbGVyPW51bGw7aWYoZiE9bnVsbCl7cS5zYXAubG9nLmVycm9yKCJUcnlpbmcgdG8gc2V0IGFuIGludmFsaWQgdHlwZSB0byAnZm9sbG93T2Y6ICIrZil9fWlmKHUmJnRoaXMuX29MYXN0UG9zaXRpb24pe3RoaXMuX29MYXN0T2ZSZWN0PXRoaXMuX2NhbGNPZlJlY3QodGhpcy5fb0xhc3RQb3NpdGlvbi5vZil9aWYodGhpcy5fYkZvbGxvd09mJiZ0aGlzLmdldE9wZW5TdGF0ZSgpPT09c2FwLnVpLmNvcmUuT3BlblN0YXRlLk9QRU4pe1AuRG9ja1RyaWdnZXIuYWRkTGlzdGVuZXIoUC5jaGVja0RvY2tpbmcsdGhpcyl9fTtQLnByb3RvdHlwZS5nZXRBdXRvQ2xvc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYkF1dG9DbG9zZX07UC5wcm90b3R5cGUuZ2V0Rm9sbG93T2Y9ZnVuY3Rpb24oKXtpZih0aGlzLl9iRm9sbG93T2Ype3JldHVybiB0eXBlb2YodGhpcy5fZm9sbG93T2ZIYW5kbGVyKT09PSJmdW5jdGlvbiI/dGhpcy5fZm9sbG93T2ZIYW5kbGVyOnRydWV9cmV0dXJuIGZhbHNlfTtQLnByb3RvdHlwZS5pc09wZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5iT3Blbn07UC5wcm90b3R5cGUuZ2V0T3BlblN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZU9wZW5TdGF0ZX07UC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe2lmKHRoaXMuX3Jlc2l6ZUxpc3RlbmVySWQpe3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3Rlcih0aGlzLl9yZXNpemVMaXN0ZW5lcklkKTt0aGlzLl9yZXNpemVMaXN0ZW5lcklkPW51bGx9dGhpcy5jbG9zZSgpO3RoaXMub0NvbnRlbnQ9bnVsbDtpZih0aGlzLl9iRm9sbG93T2Ype3RoaXMuc2V0Rm9sbG93T2YobnVsbCl9aWYodGhpcy5fYUZvY3VzYWJsZUFyZWEpe2RlbGV0ZSB0aGlzLl9hRm9jdXNhYmxlQXJlYX1pZih0aGlzLl9iRm9jdXNhYmxlTGlzdGVuZXJzUmVnaXN0ZXJlZCl7ZGVsZXRlIHRoaXMuX2JGb2N1c2FibGVMaXN0ZW5lcnNSZWdpc3RlcmVkO3ZhciBlPSJzYXAudWkuY29yZS5Qb3B1cC5hZGRGb2N1c2FibGVDb250ZW50LSIrdGhpcy5faWQ7c2FwLnVpLmdldENvcmUoKS5nZXRFdmVudEJ1cygpLnVuc3Vic2NyaWJlKCJzYXAudWkiLGUsdGhpcy5fYWRkRm9jdXNhYmxlQXJlYSk7ZT0ic2FwLnVpLmNvcmUuUG9wdXAucmVtb3ZlRm9jdXNhYmxlQ29udGVudC0iK3RoaXMuX2lkO3NhcC51aS5nZXRDb3JlKCkuZ2V0RXZlbnRCdXMoKS51bnN1YnNjcmliZSgic2FwLnVpIixlLHRoaXMuX3JlbW92ZUZvY3VzYWJsZUFyZWEpfX07UC5wcm90b3R5cGUuX2FkZEZvY3VzYWJsZUFyZWE9ZnVuY3Rpb24oYyxlLGYpe2lmKCF0aGlzLl9hRm9jdXNhYmxlQXJlYSl7dGhpcy5fYUZvY3VzYWJsZUFyZWE9W119aWYoZi5pZCYmdHlwZW9mKGYuaWQpPT09InN0cmluZyIpe3RoaXMuX2FGb2N1c2FibGVBcmVhLnB1c2goZi5pZCl9ZWxzZXtxLnNhcC5sb2cud2FybmluZygiRWl0aGVyIG5vIGlkIGdpdmVuIG9yIGlkIGlzIG5vIHN0cmluZyIpfX07UC5wcm90b3R5cGUuX3JlbW92ZUZvY3VzYWJsZUFyZWE9ZnVuY3Rpb24oYyxlLGYpe2lmKHRoaXMuX2FGb2N1c2FibGVBcmVhJiZ0aGlzLl9hRm9jdXNhYmxlQXJlYS5sZW5ndGg+MCl7Zm9yKHZhciBpPTA7aTx0aGlzLl9hRm9jdXNhYmxlQXJlYS5sZW5ndGg7aSsrKXtpZih0aGlzLl9hRm9jdXNhYmxlQXJlYVtpXT09PWYuaWQpe3RoaXMuX2FGb2N1c2FibGVBcmVhPXRoaXMuX2FGb2N1c2FibGVBcmVhLnNwbGljZShpLGkpO2JyZWFrfX1pZihmLmJBdXRvQ2xvc2UmJnRoaXMuX2JBdXRvQ2xvc2Upe3RoaXMuY2xvc2UoKX19fTtQLnByb3RvdHlwZS5fc2V0SWRlbnRpdHk9ZnVuY3Rpb24ocil7aWYodHlwZW9mIHI9PT0ib2JqZWN0Iil7ci5hdHRyKCJkYXRhLXNhcC11aS1wb3B1cCIsdGhpcy5faWQpfWVsc2V7cS5zYXAubG9nLndhcm5pbmcoIkluY29ycmVjdCBEb21SZWYtdHlwZSBmb3IgJ3NldElkZW50aXR5JzogIityLHRoaXMpO3JldHVybn1pZighdGhpcy5fYkZvY3VzYWJsZUxpc3RlbmVyc1JlZ2lzdGVyZWQpe3RoaXMuX2JGb2N1c2FibGVMaXN0ZW5lcnNSZWdpc3RlcmVkPXRydWU7dmFyIGU9InNhcC51aS5jb3JlLlBvcHVwLmFkZEZvY3VzYWJsZUNvbnRlbnQtIit0aGlzLl9pZDtzYXAudWkuZ2V0Q29yZSgpLmdldEV2ZW50QnVzKCkuc3Vic2NyaWJlKCJzYXAudWkiLGUsdGhpcy5fYWRkRm9jdXNhYmxlQXJlYSx0aGlzKTtlPSJzYXAudWkuY29yZS5Qb3B1cC5yZW1vdmVGb2N1c2FibGVDb250ZW50LSIrdGhpcy5faWQ7c2FwLnVpLmdldENvcmUoKS5nZXRFdmVudEJ1cygpLnN1YnNjcmliZSgic2FwLnVpIixlLHRoaXMuX3JlbW92ZUZvY3VzYWJsZUFyZWEsdGhpcyl9fTtQLnByb3RvdHlwZS5fJD1mdW5jdGlvbihmKXt2YXIgYztpZih0aGlzLm9Db250ZW50IGluc3RhbmNlb2YgQyl7Yz10aGlzLm9Db250ZW50LiQoKTtpZihjLmxlbmd0aD09PTB8fGYpe3Euc2FwLmxvZy5pbmZvKCJSZW5kZXJpbmcgb2YgcG9wdXAgY29udGVudDogIit0aGlzLm9Db250ZW50LmdldElkKCkpO2lmKGMubGVuZ3RoPjApe1IucHJlc2VydmVDb250ZW50KGNbMF0sdHJ1ZSxmYWxzZSl9c2FwLnVpLmdldENvcmUoKS5nZXRSZW5kZXJNYW5hZ2VyKCkucmVuZGVyKHRoaXMub0NvbnRlbnQsc2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCkpO2M9dGhpcy5vQ29udGVudC4kKCl9fWVsc2UgaWYodGhpcy5vQ29udGVudCBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkVsZW1lbnQpe2M9dGhpcy5vQ29udGVudC4kKCl9ZWxzZXtjPXEodGhpcy5vQ29udGVudCl9dGhpcy5fc2V0SWRlbnRpdHkoYyk7cmV0dXJuIGN9O1AucHJvdG90eXBlLl9zaG93QmxvY2tMYXllcj1mdW5jdGlvbigpe3ZhciBiPXEoIiNzYXAtdWktYmxvY2tsYXllci1wb3B1cCIpLGM9InNhcFVpQkx5IisodGhpcy5fc01vZGFsQ1NTQ2xhc3M/IiAiK3RoaXMuX3NNb2RhbENTU0NsYXNzOiIiKTtpZihiLmxlbmd0aD09PTApe2I9cSgnPGRpdiBpZD0ic2FwLXVpLWJsb2NrbGF5ZXItcG9wdXAiIHRhYmluZGV4PSIwIiBjbGFzcz0iJytjKyciPjwvZGl2PicpO2IuYXBwZW5kVG8oc2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCkpfWVsc2V7Yi5yZW1vdmVDbGFzcygpLmFkZENsYXNzKGMpfVAuYmxTdGFjay5wdXNoKHRoaXMuX2laSW5kZXgtMik7Yi5jc3MoInotaW5kZXgiLHRoaXMuX2laSW5kZXgtMikuY3NzKCJ2aXNpYmlsaXR5IiwidmlzaWJsZSIpLnNob3coKTtxKCJodG1sIikuYWRkQ2xhc3MoInNhcFVpQkx5QmFjayIpfTtQLnByb3RvdHlwZS5faGlkZUJsb2NrTGF5ZXI9ZnVuY3Rpb24oKXtQLmJsU3RhY2sucG9wKCk7aWYoUC5ibFN0YWNrLmxlbmd0aD4wKXtxKCIjc2FwLXVpLWJsb2NrbGF5ZXItcG9wdXAiKS5jc3MoInotaW5kZXgiLFAuYmxTdGFja1tQLmJsU3RhY2subGVuZ3RoLTFdKS5jc3MoInZpc2liaWxpdHkiLCJ2aXNpYmxlIikuc2hvdygpfWVsc2V7cSgiI3NhcC11aS1ibG9ja2xheWVyLXBvcHVwIikuY3NzKCJ2aXNpYmlsaXR5IiwiaW5oZXJpdCIpLmhpZGUoKX1xKCJodG1sIikucmVtb3ZlQ2xhc3MoInNhcFVpQkx5QmFjayIpfTtQLkRvY2tUcmlnZ2VyPW5ldyBJKDIwMCk7UC5jaGVja0RvY2tpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLmdldE9wZW5TdGF0ZSgpPT09c2FwLnVpLmNvcmUuT3BlblN0YXRlLk9QRU4pe3ZhciBjPXEodGhpcy5fb0xhc3RQb3NpdGlvbi5vZiBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLkVsZW1lbnQ/dGhpcy5fb0xhc3RQb3NpdGlvbi5vZi5nZXREb21SZWYoKTp0aGlzLl9vTGFzdFBvc2l0aW9uLm9mKS5yZWN0KCk7aWYoIWMpe3RoaXMuY2xvc2UoKTtyZXR1cm59aWYoYyYmYy5sZWZ0PT09MCYmYy50b3A9PT0wJiZjLndpZHRoPT09MCYmYy5oZWlnaHQ9PT0wKXtpZih0aGlzLl9vTGFzdFBvc2l0aW9uLm9mLmlkJiZ0aGlzLl9vTGFzdFBvc2l0aW9uLm9mLmlkIT09IiIpe3ZhciBuPXEocS5zYXAuZG9tQnlJZCh0aGlzLl9vTGFzdFBvc2l0aW9uLm9mLmlkKSkucmVjdCgpO2lmKG4mJm4hPT1jKXtjPW59fX1pZih0aGlzLl9vTGFzdE9mUmVjdCl7aWYodGhpcy5fb0xhc3RPZlJlY3QubGVmdCE9Yy5sZWZ0fHx0aGlzLl9vTGFzdE9mUmVjdC50b3AhPWMudG9wfHx0aGlzLl9vTGFzdE9mUmVjdC53aWR0aCE9Yy53aWR0aHx8dGhpcy5fb0xhc3RPZlJlY3QuaGVpZ2h0IT1jLmhlaWdodCl7aWYodGhpcy5fZm9sbG93T2ZIYW5kbGVyKXt2YXIgbD1xLmV4dGVuZCh0cnVlLHt9LHRoaXMuX29MYXN0UG9zaXRpb24pO3RoaXMuX2ZvbGxvd09mSGFuZGxlcihsKX1lbHNle3RoaXMuX2FwcGx5UG9zaXRpb24odGhpcy5fb0xhc3RQb3NpdGlvbil9fX19fTtQLnByb3RvdHlwZS5vbnRvdWNoc3RhcnQ9ZnVuY3Rpb24oZSl7dGhpcy5vbm1vdXNlZG93bihlLHRydWUpO3RoaXMuX2JNb3VzZWRvd25DYWxsZWQ9dHJ1ZX07UC5wcm90b3R5cGUub25tb3VzZWRvd249ZnVuY3Rpb24oZSxzKXtpZih0aGlzLl9iTW91c2Vkb3duQ2FsbGVkJiYhcyl7dGhpcy5fYk1vdXNlZG93bkNhbGxlZD1mYWxzZTtyZXR1cm59aWYodGhpcy5faVpJbmRleD09PXRoaXMuZ2V0TGFzdFpJbmRleCgpKXtyZXR1cm59dGhpcy5faVpJbmRleD10aGlzLmdldE5leHRaSW5kZXgoKTt2YXIgcj10aGlzLl8kKCk7ci5jc3MoInotaW5kZXgiLHRoaXMuX2laSW5kZXgpO2lmKHRoaXMuX29CbGluZExheWVyKXt0aGlzLl9vQmxpbmRMYXllci51cGRhdGUocix0aGlzLl9pWkluZGV4LTEpfX07UC5wcm90b3R5cGUub25BZnRlclJlbmRlcmluZz1mdW5jdGlvbihlKXt2YXIgcj10aGlzLmdldENvbnRlbnQoKS4kKCk7ci50b2dnbGVDbGFzcygic2FwVWlTaGQiLHRoaXMuX2JTaGFkb3cpO3IuY3NzKCJwb3NpdGlvbiIsImFic29sdXRlIik7dGhpcy5fc2V0SWRlbnRpdHkocik7dmFyIGE9clswXTt2YXIgbD1hLnN0eWxlLmxlZnQ7dmFyIGI9YS5zdHlsZS5yaWdodDt2YXIgdD1hLnN0eWxlLnRvcDt2YXIgYz1hLnN0eWxlLmJvdHRvbTtpZighKGwmJmwhPSJhdXRvInx8YiYmYiE9ImF1dG8ifHx0JiZ0IT0iYXV0byJ8fGMmJmMhPSJhdXRvIikpe3Euc2FwLmxvZy5kZWJ1ZygicmVwb3NpdGlvbiBwb3B1cCBjb250ZW50ICIrci5hdHRyKCJpZCIpKyIgYXQgIisod2luZG93LkpTT04/SlNPTi5zdHJpbmdpZnkodGhpcy5fb0xhc3RQb3NpdGlvbi5hdCk6U3RyaW5nKHRoaXMuX29MYXN0UG9zaXRpb24uYXQpKSk7dGhpcy5fYXBwbHlQb3NpdGlvbih0aGlzLl9vTGFzdFBvc2l0aW9uKX1yLnNob3coKS5jc3MoInZpc2liaWxpdHkiLCJ2aXNpYmxlIikuY3NzKCJ6LWluZGV4Iix0aGlzLl9pWkluZGV4KTtpZih0aGlzLl9vQmxpbmRMYXllcil7dGhpcy5fcmVzaXplTGlzdGVuZXJJZD1zYXAudWkuY29yZS5SZXNpemVIYW5kbGVyLnJlZ2lzdGVyKHRoaXMuXyQoKS5nZXQoMCkscS5wcm94eSh0aGlzLm9ucmVzaXplLHRoaXMpKX19O1AucHJvdG90eXBlLm9uQmVmb3JlUmVuZGVyaW5nPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX3Jlc2l6ZUxpc3RlbmVySWQpe3NhcC51aS5jb3JlLlJlc2l6ZUhhbmRsZXIuZGVyZWdpc3Rlcih0aGlzLl9yZXNpemVMaXN0ZW5lcklkKTt0aGlzLl9yZXNpemVMaXN0ZW5lcklkPW51bGx9fTtQLnByb3RvdHlwZS5vbnJlc2l6ZT1mdW5jdGlvbihlKXtpZih0aGlzLmVPcGVuU3RhdGUhPXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5DTE9TRUQmJnRoaXMuX29CbGluZExheWVyKXt2YXIgdD10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll91cGRhdGVCbGluZExheWVyKCl9LDApfX07UC5wcm90b3R5cGUuX3VwZGF0ZUJsaW5kTGF5ZXI9ZnVuY3Rpb24oKXtpZih0aGlzLmVPcGVuU3RhdGUhPXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5DTE9TRUQmJnRoaXMuX29CbGluZExheWVyKXt0aGlzLl9vQmxpbmRMYXllci51cGRhdGUodGhpcy5fJCgpKX19O3JldHVybiBQfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuU2Nyb2xsQmFyJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuU2Nyb2xsQmFyJyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvU2Nyb2xsQmFyIixbJy4vbGlicmFyeScsJy4vQ29udHJvbCddLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLkNvbnRyb2wuZXh0ZW5kKCJzYXAudWkuY29yZS5TY3JvbGxCYXIiLHttZXRhZGF0YTp7cHVibGljTWV0aG9kczpbImJpbmQiLCJ1bmJpbmQiLCJwYWdlVXAiLCJwYWdlRG93biJdLGxpYnJhcnk6InNhcC51aS5jb3JlIixwcm9wZXJ0aWVzOnsidmVydGljYWwiOnt0eXBlOiJib29sZWFuIixncm91cDoiQmVoYXZpb3IiLGRlZmF1bHRWYWx1ZTp0cnVlfSwic2Nyb2xsUG9zaXRpb24iOnt0eXBlOiJpbnQiLGdyb3VwOiJCZWhhdmlvciIsZGVmYXVsdFZhbHVlOm51bGx9LCJzaXplIjp7dHlwZToic2FwLnVpLmNvcmUuQ1NTU2l6ZSIsZ3JvdXA6IkRpbWVuc2lvbiIsZGVmYXVsdFZhbHVlOm51bGx9LCJjb250ZW50U2l6ZSI6e3R5cGU6InNhcC51aS5jb3JlLkNTU1NpemUiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTpudWxsfSwic3RlcHMiOnt0eXBlOiJpbnQiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTpudWxsfX0sZXZlbnRzOnsic2Nyb2xsIjp7fX19fSk7c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLk1fRVZFTlRTPXsnc2Nyb2xsJzonc2Nyb2xsJ307c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5fJFNjcm9sbERvbVJlZj1udWxsO3RoaXMuX2lPbGRTY3JvbGxQb3M9MDt0aGlzLl9pT2xkU3RlcD0wO3RoaXMuX2JTY3JvbGxQb3NJc0NoZWNrZWQ9ZmFsc2U7dGhpcy5fYlJUTD1zYXAudWkuZ2V0Q29yZSgpLmdldENvbmZpZ3VyYXRpb24oKS5nZXRSVEwoKTt0aGlzLl9iU3VwcHJlc3NTY3JvbGw9ZmFsc2U7dGhpcy5faU1heENvbnRlbnREaXZTaXplPTEwMDAwMDA7aWYoalF1ZXJ5LnNhcC50b3VjaEV2ZW50TW9kZT09PSJPTiIpe2pRdWVyeS5zYXAucmVxdWlyZSgic2FwLnVpLnRoaXJkcGFydHkuenluZ2FzY3JvbGwiKTt0aGlzLl9pTGFzdFRvdWNoU2Nyb2xsZXJQb3NpdGlvbj1udWxsO3RoaXMuX2lUb3VjaFN0ZXBUcmVzaG9sZD0yNDt0aGlzLl9iU2tpcFRvdWNoSGFuZGxpbmc9ZmFsc2U7dGhpcy5fb1RvdWNoU2Nyb2xsZXI9bmV3IHdpbmRvdy5TY3JvbGxlcihqUXVlcnkucHJveHkodGhpcy5faGFuZGxlVG91Y2hTY3JvbGwsdGhpcykse2JvdW5jaW5nOmZhbHNlfSl9fTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLm9uQmVmb3JlUmVuZGVyaW5nPWZ1bmN0aW9uKCl7dGhpcy4kKCJzYiIpLnVuYmluZCgic2Nyb2xsIix0aGlzLm9uc2Nyb2xsKX07c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5vbkFmdGVyUmVuZGVyaW5nPWZ1bmN0aW9uKCl7dGhpcy5faVN0ZXBzPXRoaXMuZ2V0U3RlcHMoKTt2YXIgYz10aGlzLmdldENvbnRlbnRTaXplKCk7dGhpcy5fYlN0ZXBNb2RlPSFjO3ZhciBzPXRoaXMuZ2V0U2l6ZSgpO2lmKGpRdWVyeS5zYXAuZW5kc1dpdGgocywicHgiKSl7cz1zLnN1YnN0cigwLHMubGVuZ3RoLTIpfWVsc2V7cz10aGlzLmdldFZlcnRpY2FsKCk/dGhpcy4kKCkuaGVpZ2h0KCk6dGhpcy4kKCkud2lkdGgoKX12YXIgYT1udWxsO3ZhciAkPXRoaXMuJCgiZmZzaXplIik7aWYoISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuZmlyZWZveCl7YT0kLm91dGVySGVpZ2h0KCl9JC5yZW1vdmUoKTtpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci53ZWJraXQpe2lmKCFkb2N1bWVudC53aWR0aCl7YT1NYXRoLnJvdW5kKDQwLyh3aW5kb3cub3V0ZXJXaWR0aC9qUXVlcnkoZG9jdW1lbnQpLndpZHRoKCkpKX1lbHNle2E9TWF0aC5yb3VuZCg0MC8oZG9jdW1lbnQud2lkdGgvalF1ZXJ5KGRvY3VtZW50KS53aWR0aCgpKSl9fWlmKHRoaXMuZ2V0VmVydGljYWwoKSl7dGhpcy5faUZhY3Rvcj0hIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5maXJlZm94P2E6ISFzYXAudWkuRGV2aWNlLmJyb3dzZXIud2Via2l0P2E6TWF0aC5mbG9vcihzKjAuMTI1KTt0aGlzLl9pRmFjdG9yUGFnZT0hIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5maXJlZm94P3MtYTpNYXRoLmZsb29yKHMqMC44NzUpfWVsc2V7dGhpcy5faUZhY3Rvcj0hIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5maXJlZm94PzEwOiEhc2FwLnVpLkRldmljZS5icm93c2VyLndlYmtpdD9hOjc7dGhpcy5faUZhY3RvclBhZ2U9ISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuZmlyZWZveD9NYXRoLmZsb29yKHMqMC44KTohIXNhcC51aS5EZXZpY2UuYnJvd3Nlci53ZWJraXQ/TWF0aC5mbG9vcihzKjAuODc1KTpzLTE0fXRoaXMuXyRTY3JvbGxEb21SZWY9dGhpcy4kKCJzYiIpO2lmKHRoaXMuX2JTdGVwTW9kZSl7aWYodGhpcy5nZXRWZXJ0aWNhbCgpKXt2YXIgUz10aGlzLl9pU3RlcHMqdGhpcy5faUZhY3RvcjtpZihTPnRoaXMuX2lNYXhDb250ZW50RGl2U2l6ZSl7dGhpcy5faUZhY3Rvcj1NYXRoLmNlaWwodGhpcy5faUZhY3Rvci9NYXRoLmNlaWwoUy90aGlzLl9pTWF4Q29udGVudERpdlNpemUpKX12YXIgQz10aGlzLl8kU2Nyb2xsRG9tUmVmLmhlaWdodCgpK3RoaXMuX2lTdGVwcyp0aGlzLl9pRmFjdG9yO3RoaXMuXyRTY3JvbGxEb21SZWYuZmluZCgiZGl2IikuaGVpZ2h0KEMpfWVsc2V7dmFyIEM9dGhpcy5fJFNjcm9sbERvbVJlZi53aWR0aCgpK3RoaXMuX2lTdGVwcyp0aGlzLl9pRmFjdG9yO3RoaXMuXyRTY3JvbGxEb21SZWYuZmluZCgiZGl2Iikud2lkdGgoQyl9fXRoaXMuc2V0Q2hlY2tlZFNjcm9sbFBvc2l0aW9uKHRoaXMuZ2V0U2Nyb2xsUG9zaXRpb24oKT90aGlzLmdldFNjcm9sbFBvc2l0aW9uKCk6MCx0cnVlKTt0aGlzLl8kU2Nyb2xsRG9tUmVmLmJpbmQoInNjcm9sbCIsalF1ZXJ5LnByb3h5KHRoaXMub25zY3JvbGwsdGhpcykpO2lmKGpRdWVyeS5zYXAudG91Y2hFdmVudE1vZGU9PT0iT04iKXt0aGlzLl9iU2tpcFRvdWNoSGFuZGxpbmc9dHJ1ZTt2YXIgbz17d2lkdGg6MCxoZWlnaHQ6MH07b1t0aGlzLmdldFZlcnRpY2FsKCk/ImhlaWdodCI6IndpZHRoIl09dGhpcy5fYlN0ZXBNb2RlPyh0aGlzLmdldFN0ZXBzKCkqdGhpcy5faVRvdWNoU3RlcFRyZXNob2xkKTpwYXJzZUludCh0aGlzLmdldENvbnRlbnRTaXplKCksMTApO3RoaXMuX29Ub3VjaFNjcm9sbGVyLnNldERpbWVuc2lvbnMoMCwwLG8ud2lkdGgsby5oZWlnaHQpO3ZhciBlPXRoaXMuXyRTY3JvbGxEb21SZWYuZ2V0KDApO3ZhciByPWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dGhpcy5fb1RvdWNoU2Nyb2xsZXIuc2V0UG9zaXRpb24oci5sZWZ0K2UuY2xpZW50TGVmdCxyLnRvcCtlLmNsaWVudFRvcCk7dGhpcy5fYlNraXBUb3VjaEhhbmRsaW5nPWZhbHNlfX07c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5vbm1vdXNld2hlZWw9ZnVuY3Rpb24oZSl7aWYodGhpcy4kKCkuaXMoIjp2aXNpYmxlIikpe3ZhciBvPWUub3JpZ2luYWxFdmVudDt2YXIgdz1vLmRldGFpbD9vLmRldGFpbDpvLndoZWVsRGVsdGEqKC0xKS80MDt2YXIgZj13PjA/dHJ1ZTpmYWxzZTtpZihqUXVlcnkuc2FwLmNvbnRhaW5zT3JFcXVhbHModGhpcy5fJFNjcm9sbERvbVJlZlswXSxlLnRhcmdldCkpe3RoaXMuX2RvU2Nyb2xsKHNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbi5Nb3VzZVdoZWVsLGYpfWVsc2V7dGhpcy5fYk1vdXNlV2hlZWw9dHJ1ZTt2YXIgcD1udWxsO2lmKHRoaXMuX2JTdGVwTW9kZSl7cD13K3RoaXMuX2lPbGRTdGVwfWVsc2V7cD13KnRoaXMuX2lGYWN0b3IrdGhpcy5faU9sZFNjcm9sbFBvc310aGlzLnNldENoZWNrZWRTY3JvbGxQb3NpdGlvbihwLHRydWUpfWUucHJldmVudERlZmF1bHQoKTtlLnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBmYWxzZX19O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUub250b3VjaHN0YXJ0PWZ1bmN0aW9uKGUpe3ZhciB0PWUudG91Y2hlczt2YXIgZj10WzBdO2lmKGYmJmYudGFyZ2V0JiZmLnRhcmdldC50YWdOYW1lLm1hdGNoKC9pbnB1dHx0ZXh0YXJlYXxzZWxlY3QvaSkpe3JldHVybn1pZih0aGlzLl9vVG91Y2hTY3JvbGxlcil7dGhpcy5fb1RvdWNoU2Nyb2xsZXIuZG9Ub3VjaFN0YXJ0KHQsZS50aW1lU3RhbXApfWlmKHQubGVuZ3RoPT0xKXtlLnByZXZlbnREZWZhdWx0KCl9fTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLm9udG91Y2htb3ZlPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX29Ub3VjaFNjcm9sbGVyKXt0aGlzLl9vVG91Y2hTY3JvbGxlci5kb1RvdWNoTW92ZShlLnRvdWNoZXMsZS50aW1lU3RhbXAsZS5zY2FsZSl9fTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLm9udG91Y2hlbmQ9ZnVuY3Rpb24oZSl7aWYodGhpcy5fb1RvdWNoU2Nyb2xsZXIpe3RoaXMuX29Ub3VjaFNjcm9sbGVyLmRvVG91Y2hFbmQoZS50aW1lU3RhbXApfX07c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5vbnRvdWNoY2FuY2VsPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX29Ub3VjaFNjcm9sbGVyKXt0aGlzLl9vVG91Y2hTY3JvbGxlci5kb1RvdWNoRW5kKGUudGltZVN0YW1wKX19O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUub25zY3JvbGw9ZnVuY3Rpb24oZSl7aWYodGhpcy5fYlN1cHByZXNzU2Nyb2xsKXt0aGlzLl9iU3VwcHJlc3NTY3JvbGw9ZmFsc2U7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIGZhbHNlfXZhciBzPW51bGw7aWYodGhpcy5fJFNjcm9sbERvbVJlZil7aWYodGhpcy5nZXRWZXJ0aWNhbCgpKXtzPXRoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsVG9wKCl9ZWxzZXtzPXRoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsTGVmdCgpO2lmKCEhc2FwLnVpLkRldmljZS5icm93c2VyLmZpcmVmb3gmJnRoaXMuX2JSVEwpe3M9TWF0aC5hYnMocyl9ZWxzZSBpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci53ZWJraXQmJnRoaXMuX2JSVEwpe3ZhciBTPXRoaXMuXyRTY3JvbGxEb21SZWYuZ2V0KDApO3M9Uy5zY3JvbGxXaWR0aC1TLmNsaWVudFdpZHRoLVMuc2Nyb2xsTGVmdH19fXZhciBkPXMtdGhpcy5faU9sZFNjcm9sbFBvczt2YXIgZj1kPjA/dHJ1ZTpmYWxzZTtpZihkPDApe2Q9ZCooLTEpfXZhciBhPXNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbi5EcmFnO2lmKGQ9PXRoaXMuX2lGYWN0b3Ipe2E9c2FwLnVpLmNvcmUuU2Nyb2xsQmFyQWN0aW9uLlN0ZXB9ZWxzZSBpZihkPT10aGlzLl9pRmFjdG9yUGFnZSl7YT1zYXAudWkuY29yZS5TY3JvbGxCYXJBY3Rpb24uUGFnZX1lbHNlIGlmKHRoaXMuX2JNb3VzZVdoZWVsKXthPXNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbi5Nb3VzZVdoZWVsfXRoaXMuX2RvU2Nyb2xsKGEsZik7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIGZhbHNlfTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLl9oYW5kbGVUb3VjaFNjcm9sbD1mdW5jdGlvbihsLHQseil7aWYodGhpcy5fYlNraXBUb3VjaEhhbmRsaW5nKXtyZXR1cm59dmFyIHY9dGhpcy5nZXRWZXJ0aWNhbCgpP3Q6bDtpZih0aGlzLl9iU3RlcE1vZGUpe3ZhciBwPU1hdGgubWF4KE1hdGgucm91bmQodi90aGlzLl9pVG91Y2hTdGVwVHJlc2hvbGQpLDApfWVsc2V7dmFyIHA9TWF0aC5yb3VuZCh2KX1pZih0aGlzLl9pTGFzdFRvdWNoU2Nyb2xsZXJQb3NpdGlvbiE9PXApe3RoaXMuX2lMYXN0VG91Y2hTY3JvbGxlclBvc2l0aW9uPXA7dGhpcy5zZXRDaGVja2VkU2Nyb2xsUG9zaXRpb24ocCx0cnVlKTt0aGlzLmZpcmVTY3JvbGwoKX19O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUudW5iaW5kPWZ1bmN0aW9uKG8pe2lmKG8pe3RoaXMuXyRPd25lckRvbVJlZj1qUXVlcnkobyk7aWYodGhpcy5nZXRWZXJ0aWNhbCgpKXt0aGlzLl8kT3duZXJEb21SZWYudW5iaW5kKCEhc2FwLnVpLkRldmljZS5icm93c2VyLmZpcmVmb3g/IkRPTU1vdXNlU2Nyb2xsIjoibW91c2V3aGVlbCIsdGhpcy5vbm1vdXNld2hlZWwpfWlmKGpRdWVyeS5zYXAudG91Y2hFdmVudE1vZGU9PT0iT04iKXt0aGlzLl8kT3duZXJEb21SZWYudW5iaW5kKHRoaXMuX2dldFRvdWNoRXZlbnRUeXBlKCJ0b3VjaHN0YXJ0IiksalF1ZXJ5LnByb3h5KHRoaXMub250b3VjaHN0YXJ0LHRoaXMpKTt0aGlzLl8kT3duZXJEb21SZWYudW5iaW5kKHRoaXMuX2dldFRvdWNoRXZlbnRUeXBlKCJ0b3VjaG1vdmUiKSxqUXVlcnkucHJveHkodGhpcy5vbnRvdWNobW92ZSx0aGlzKSk7dGhpcy5fJE93bmVyRG9tUmVmLnVuYmluZCh0aGlzLl9nZXRUb3VjaEV2ZW50VHlwZSgidG91Y2hlbmQiKSxqUXVlcnkucHJveHkodGhpcy5vbnRvdWNoZW5kLHRoaXMpKTt0aGlzLl8kT3duZXJEb21SZWYudW5iaW5kKHRoaXMuX2dldFRvdWNoRXZlbnRUeXBlKCJ0b3VjaGNhbmNsZSIpLGpRdWVyeS5wcm94eSh0aGlzLm9udG91Y2hjYW5jbGUsdGhpcykpfX19O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihvKXtpZihvKXt0aGlzLl8kT3duZXJEb21SZWY9alF1ZXJ5KG8pO2lmKHRoaXMuZ2V0VmVydGljYWwoKSl7dGhpcy5fJE93bmVyRG9tUmVmLmJpbmQoISFzYXAudWkuRGV2aWNlLmJyb3dzZXIuZmlyZWZveD8iRE9NTW91c2VTY3JvbGwiOiJtb3VzZXdoZWVsIixqUXVlcnkucHJveHkodGhpcy5vbm1vdXNld2hlZWwsdGhpcykpfWlmKGpRdWVyeS5zYXAudG91Y2hFdmVudE1vZGU9PT0iT04iKXt0aGlzLl8kT3duZXJEb21SZWYuYmluZCh0aGlzLl9nZXRUb3VjaEV2ZW50VHlwZSgidG91Y2hzdGFydCIpLGpRdWVyeS5wcm94eSh0aGlzLm9udG91Y2hzdGFydCx0aGlzKSk7dGhpcy5fJE93bmVyRG9tUmVmLmJpbmQodGhpcy5fZ2V0VG91Y2hFdmVudFR5cGUoInRvdWNobW92ZSIpLGpRdWVyeS5wcm94eSh0aGlzLm9udG91Y2htb3ZlLHRoaXMpKTt0aGlzLl8kT3duZXJEb21SZWYuYmluZCh0aGlzLl9nZXRUb3VjaEV2ZW50VHlwZSgidG91Y2hlbmQiKSxqUXVlcnkucHJveHkodGhpcy5vbnRvdWNoZW5kLHRoaXMpKTt0aGlzLl8kT3duZXJEb21SZWYuYmluZCh0aGlzLl9nZXRUb3VjaEV2ZW50VHlwZSgidG91Y2hjYW5jbGUiKSxqUXVlcnkucHJveHkodGhpcy5vbnRvdWNoY2FuY2xlLHRoaXMpKX19fTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLl9nZXRUb3VjaEV2ZW50VHlwZT1mdW5jdGlvbih0KXtyZXR1cm4galF1ZXJ5LnNhcC50b3VjaEV2ZW50TW9kZT09PSJTSU0iPygic2FwIit0KTp0fTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLnBhZ2VVcD1mdW5jdGlvbigpe3RoaXMuX2RvU2Nyb2xsKHNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbi5QYWdlLGZhbHNlKX07c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5wYWdlRG93bj1mdW5jdGlvbigpe3RoaXMuX2RvU2Nyb2xsKHNhcC51aS5jb3JlLlNjcm9sbEJhckFjdGlvbi5QYWdlLHRydWUpfTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLnNldFNjcm9sbFBvc2l0aW9uPWZ1bmN0aW9uKHMpe2lmKHRoaXMuXyRTY3JvbGxEb21SZWYpe3RoaXMuc2V0Q2hlY2tlZFNjcm9sbFBvc2l0aW9uKHMsdHJ1ZSl9ZWxzZXt0aGlzLnNldFByb3BlcnR5KCJzY3JvbGxQb3NpdGlvbiIscyl9cmV0dXJuIHRoaXN9O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUuc2V0Q2hlY2tlZFNjcm9sbFBvc2l0aW9uPWZ1bmN0aW9uKHMsYyl7dmFyIEM9TWF0aC5tYXgocywwKTtpZih0aGlzLl9iU3RlcE1vZGU9PT11bmRlZmluZWQpe3RoaXMuX2JTdGVwTW9kZT0hdGhpcy5nZXRDb250ZW50U2l6ZSgpfXZhciBTPUM7aWYodGhpcy5fYlN0ZXBNb2RlKXtDPU1hdGgubWluKEMsdGhpcy5nZXRTdGVwcygpKTtTPUMqdGhpcy5faUZhY3Rvcn1DPU1hdGguZmxvb3IoQyk7dGhpcy5fYlN1cHByZXNzU2Nyb2xsPSFjO3RoaXMuc2V0UHJvcGVydHkoInNjcm9sbFBvc2l0aW9uIixDLHRydWUpO2lmKHRoaXMuZ2V0VmVydGljYWwoKSl7dGhpcy5fJFNjcm9sbERvbVJlZi5zY3JvbGxUb3AoUyl9ZWxzZXtpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci5maXJlZm94JiZ0aGlzLl9iUlRMKXt0aGlzLl8kU2Nyb2xsRG9tUmVmLnNjcm9sbExlZnQoLVMpfWVsc2UgaWYoISFzYXAudWkuRGV2aWNlLmJyb3dzZXIud2Via2l0JiZ0aGlzLl9iUlRMKXt2YXIgbz10aGlzLl8kU2Nyb2xsRG9tUmVmLmdldCgwKTt0aGlzLl8kU2Nyb2xsRG9tUmVmLnNjcm9sbExlZnQoby5zY3JvbGxXaWR0aC1vLmNsaWVudFdpZHRoLVMpfWVsc2V7dGhpcy5fJFNjcm9sbERvbVJlZi5zY3JvbGxMZWZ0KFMpfX1pZihqUXVlcnkuc2FwLnRvdWNoRXZlbnRNb2RlPT09Ik9OIil7dmFyIHY9QztpZih0aGlzLl9iU3RlcE1vZGUpe3Y9TWF0aC5yb3VuZChDKnRoaXMuX2lUb3VjaFN0ZXBUcmVzaG9sZCl9dGhpcy5fb1RvdWNoU2Nyb2xsZXIuX19zY3JvbGxUb3A9dGhpcy5nZXRWZXJ0aWNhbCgpP3Y6MDt0aGlzLl9vVG91Y2hTY3JvbGxlci5fX3Njcm9sbExlZnQ9dGhpcy5nZXRWZXJ0aWNhbCgpPzA6dn19O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUuc2V0Q29udGVudFNpemU9ZnVuY3Rpb24oYyl7dGhpcy5zZXRQcm9wZXJ0eSgiY29udGVudFNpemUiLGMpO3RoaXMuX2JTdGVwTW9kZT1mYWxzZTt2YXIgcz10aGlzLiQoInNiY250Iik7aWYocyl7aWYodGhpcy5nZXRWZXJ0aWNhbCgpKXtzLmhlaWdodChjKX1lbHNle3Mud2lkdGgoYyl9fXJldHVybiB0aGlzfTtzYXAudWkuY29yZS5TY3JvbGxCYXIucHJvdG90eXBlLl9kb1Njcm9sbD1mdW5jdGlvbihlLGYpe3ZhciBzPW51bGw7aWYodGhpcy5fJFNjcm9sbERvbVJlZil7aWYodGhpcy5nZXRWZXJ0aWNhbCgpKXtzPXRoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsVG9wKCl9ZWxzZXtzPXRoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsTGVmdCgpO2lmKCEhc2FwLnVpLkRldmljZS5icm93c2VyLmZpcmVmb3gmJnRoaXMuX2JSVEwpe3M9TWF0aC5hYnMocyl9ZWxzZSBpZighIXNhcC51aS5EZXZpY2UuYnJvd3Nlci53ZWJraXQmJnRoaXMuX2JSVEwpe3ZhciBTPXRoaXMuXyRTY3JvbGxEb21SZWYuZ2V0KDApO3M9Uy5zY3JvbGxXaWR0aC1TLmNsaWVudFdpZHRoLVMuc2Nyb2xsTGVmdH19fWlmKHRoaXMuX2JTdGVwTW9kZSl7dmFyIGk9TWF0aC5yb3VuZChzL3RoaXMuX2lGYWN0b3IpO3ZhciBvPXRoaXMuX2lPbGRTdGVwO2lmKG8hPT1pKXt0aGlzLnNldENoZWNrZWRTY3JvbGxQb3NpdGlvbihpLGZhbHNlKTtqUXVlcnkuc2FwLmxvZy5kZWJ1ZygiLS0tLS1TVEVQTU9ERS0tLS0tOiBOZXcgU3RlcDogIitpKyIgLS0tIE9sZCBTdGVwOiAiK28rIiAtLS0gU2Nyb2xsIFBvcyBpbiBweDogIitzKyIgLS0tIEFjdGlvbjogIitlKyIgLS0tIERpcmVjdGlvbiBpcyBmb3J3YXJkOiAiK2YpO3RoaXMuZmlyZVNjcm9sbCh7YWN0aW9uOmUsZm9yd2FyZDpmLG5ld1Njcm9sbFBvczppLG9sZFNjcm9sbFBvczpvfSk7dGhpcy5faU9sZFN0ZXA9aX19ZWxzZXt0aGlzLnNldFByb3BlcnR5KCJzY3JvbGxQb3NpdGlvbiIscyx0cnVlKTtqUXVlcnkuc2FwLmxvZy5kZWJ1ZygiLS0tLS1QSVhFTE1PREUtLS0tLTogTmV3IFNjcm9sbFBvczogIitzKyIgLS0tIE9sZCBTY3JvbGxQb3M6ICIrdGhpcy5faU9sZFNjcm9sbFBvcysiIC0tLSBBY3Rpb246ICIrZSsiIC0tLSBEaXJlY3Rpb24gaXMgZm9yd2FyZDogIitmKTt0aGlzLmZpcmVTY3JvbGwoe2FjdGlvbjplLGZvcndhcmQ6ZixuZXdTY3JvbGxQb3M6cyxvbGRTY3JvbGxQb3M6dGhpcy5faU9sZFNjcm9sbFBvc30pfXRoaXMuX2JTdXBwcmVzc1Njcm9sbD1mYWxzZTt0aGlzLl9pT2xkU2Nyb2xsUG9zPXM7dGhpcy5fYk1vdXNlV2hlZWw9ZmFsc2V9O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUub25UaGVtZUNoYW5nZWQ9ZnVuY3Rpb24oKXt0aGlzLnJlcmVuZGVyKCl9O3NhcC51aS5jb3JlLlNjcm9sbEJhci5wcm90b3R5cGUuZ2V0TmF0aXZlU2Nyb2xsUG9zaXRpb249ZnVuY3Rpb24oKXtpZih0aGlzLl8kU2Nyb2xsRG9tUmVmKXtpZih0aGlzLmdldFZlcnRpY2FsKCkpe3JldHVybiB0aGlzLl8kU2Nyb2xsRG9tUmVmLnNjcm9sbFRvcCgpfWVsc2V7cmV0dXJuIHRoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsTGVmdCgpfX1yZXR1cm4gMH07c2FwLnVpLmNvcmUuU2Nyb2xsQmFyLnByb3RvdHlwZS5zZXROYXRpdmVTY3JvbGxQb3NpdGlvbj1mdW5jdGlvbihuKXtpZih0aGlzLl8kU2Nyb2xsRG9tUmVmKXtpZih0aGlzLmdldFZlcnRpY2FsKCkpe3RoaXMuXyRTY3JvbGxEb21SZWYuc2Nyb2xsVG9wKG4pfWVsc2V7dGhpcy5fJFNjcm9sbERvbVJlZi5zY3JvbGxMZWZ0KG4pfX19O3JldHVybiBzYXAudWkuY29yZS5TY3JvbGxCYXJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5TZXBhcmF0b3JJdGVtJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuU2VwYXJhdG9ySXRlbScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1NlcGFyYXRvckl0ZW0iLFsnLi9saWJyYXJ5JywnLi9JdGVtJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuSXRlbS5leHRlbmQoInNhcC51aS5jb3JlLlNlcGFyYXRvckl0ZW0iLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUifX0pO3JldHVybiBzYXAudWkuY29yZS5TZXBhcmF0b3JJdGVtfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuVGl0bGUnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5UaXRsZScpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL1RpdGxlIixbJy4vbGlicmFyeScsJy4vRWxlbWVudCddLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3NhcC51aS5jb3JlLkVsZW1lbnQuZXh0ZW5kKCJzYXAudWkuY29yZS5UaXRsZSIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7InRleHQiOnt0eXBlOiJzdHJpbmciLGdyb3VwOiJBcHBlYXJhbmNlIixkZWZhdWx0VmFsdWU6bnVsbH0sImljb24iOnt0eXBlOiJzYXAudWkuY29yZS5VUkkiLGdyb3VwOiJBcHBlYXJhbmNlIixkZWZhdWx0VmFsdWU6bnVsbH0sImxldmVsIjp7dHlwZToic2FwLnVpLmNvcmUuVGl0bGVMZXZlbCIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpzYXAudWkuY29yZS5UaXRsZUxldmVsLkF1dG99LCJlbXBoYXNpemVkIjp7dHlwZToiYm9vbGVhbiIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpmYWxzZX19fX0pO3JldHVybiBzYXAudWkuY29yZS5UaXRsZX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlRvb2x0aXBCYXNlJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Ub29sdGlwQmFzZSIsWycuL2xpYnJhcnknLCcuL0NvbnRyb2wnLCcuL1BvcHVwJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuQ29udHJvbC5leHRlbmQoInNhcC51aS5jb3JlLlRvb2x0aXBCYXNlIix7bWV0YWRhdGE6eyJhYnN0cmFjdCI6dHJ1ZSxsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7InRleHQiOnt0eXBlOiJzdHJpbmciLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6IiJ9LCJvcGVuRHVyYXRpb24iOnt0eXBlOiJpbnQiLGdyb3VwOiJCZWhhdmlvciIsZGVmYXVsdFZhbHVlOjIwMH0sImNsb3NlRHVyYXRpb24iOnt0eXBlOiJpbnQiLGdyb3VwOiJCZWhhdmlvciIsZGVmYXVsdFZhbHVlOjIwMH0sIm15UG9zaXRpb24iOnt0eXBlOiJzYXAudWkuY29yZS5Eb2NrIixncm91cDoiQmVoYXZpb3IiLGRlZmF1bHRWYWx1ZTonYmVnaW4gdG9wJ30sImF0UG9zaXRpb24iOnt0eXBlOiJzYXAudWkuY29yZS5Eb2NrIixncm91cDoiQmVoYXZpb3IiLGRlZmF1bHRWYWx1ZTonYmVnaW4gYm90dG9tJ30sIm9mZnNldCI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkJlaGF2aW9yIixkZWZhdWx0VmFsdWU6JzEwIDMnfSwiY29sbGlzaW9uIjp7dHlwZToic2FwLnVpLmNvcmUuQ29sbGlzaW9uIixncm91cDoiQmVoYXZpb3IiLGRlZmF1bHRWYWx1ZTonZmxpcCd9LCJvcGVuRGVsYXkiOnt0eXBlOiJpbnQiLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6NTAwfSwiY2xvc2VEZWxheSI6e3R5cGU6ImludCIsZ3JvdXA6Ik1pc2MiLGRlZmF1bHRWYWx1ZToxMDB9fX19KTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUuX2dldFBvcHVwPWpRdWVyeS5zYXAuZ2V0dGVyKChmdW5jdGlvbigpe3ZhciBwPW5ldyBzYXAudWkuY29yZS5Qb3B1cCgpO3Auc2V0U2hhZG93KHRydWUpO3JldHVybiBwfSgpKSk7c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLm9uZm9jdXNpbj1mdW5jdGlvbihlKXt2YXIgcz1qUXVlcnkoZS50YXJnZXQpLmNvbnRyb2woMCk7aWYocyE9bnVsbCl7dmFyIGQ9cy5nZXRGb2N1c0RvbVJlZigpO3RoaXMuc1N0b3JlZFRvb2x0aXA9bnVsbDtpZihkLnRpdGxlJiZkLnRpdGxlIT0iIil7dGhpcy5zU3RvcmVkVG9vbHRpcD1kLnRpdGxlO2QudGl0bGU9IiJ9dmFyIHA9dGhpcy5fZ2V0UG9wdXAoKTtpZighKHAuaXNPcGVuKCkmJnAuZ2V0Q29udGVudCgpPT10aGlzKSl7c2FwLnVpLmdldENvcmUoKS5nZXRSZW5kZXJNYW5hZ2VyKCkucmVuZGVyKHRoaXMsc2FwLnVpLmdldENvcmUoKS5nZXRTdGF0aWNBcmVhUmVmKCksdHJ1ZSl9dmFyIHY9ZC5nZXRBdHRyaWJ1dGUoImFyaWEtZGVzY3JpYmVkYnkiKTt2YXIgaT10aGlzLmdldElkKCkrIi10aXRsZSAiK3RoaXMuZ2V0SWQoKSsiLXR4dCI7aWYodj09bnVsbHx8dj09IiIpe2Quc2V0QXR0cmlidXRlKCJhcmlhLWRlc2NyaWJlZGJ5IixpKX1lbHNlIGlmKHYuaW5kZXhPZihpKT09LTEpe2Quc2V0QXR0cmlidXRlKCJhcmlhLWRlc2NyaWJlZGJ5Iix2KyIgIitpKX19fTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUub25mb2N1c291dD1mdW5jdGlvbihlKXt2YXIgcz1qUXVlcnkoZS50YXJnZXQpLmNvbnRyb2woMCk7aWYocyE9bnVsbCl7dmFyIGQ9cy5nZXRGb2N1c0RvbVJlZigpO2lmKHRoaXMuc1N0b3JlZFRvb2x0aXApe2QudGl0bGU9dGhpcy5zU3RvcmVkVG9vbHRpcH12YXIgdj1kLmdldEF0dHJpYnV0ZSgiYXJpYS1kZXNjcmliZWRieSIpO3ZhciBpPXRoaXMuZ2V0SWQoKSsiLXRpdGxlICIrdGhpcy5nZXRJZCgpKyItdHh0IjtpZih2JiZ2LmluZGV4T2YoaSk+PTApe2lmKGpRdWVyeS50cmltKHYpPT1pKXtkLnJlbW92ZUF0dHJpYnV0ZSgiYXJpYS1kZXNjcmliZWRieSIpfWVsc2V7dj12LnJlcGxhY2UoaSwiIik7ZC5zZXRBdHRyaWJ1dGUoImFyaWEtZGVzY3JpYmVkYnkiLHYpfX19aWYoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5zT3BlblRpbWVvdXQ9dW5kZWZpbmVkfXRoaXMuc0Nsb3NlTm93VGltZW91dD1qUXVlcnkuc2FwLmRlbGF5ZWRDYWxsKHRoaXMuZ2V0Q2xvc2VEZWxheSgpLHRoaXMsImNsb3NlUG9wdXAiKX07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLmlzU3RhbmRhcmRUb29sdGlwPWZ1bmN0aW9uKHQpe3JldHVybih0eXBlb2YgdD09PSJzdHJpbmciJiYoalF1ZXJ5LnRyaW0odCkpIT09IiIpfTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUub25tb3VzZW92ZXI9ZnVuY3Rpb24oZSl7dmFyIEU9alF1ZXJ5KGUudGFyZ2V0KS5jb250cm9sKDApO2lmKEUhPW51bGwpe2lmKEU9PT10aGlzKXtpZih0aGlzLnNDbG9zZU5vd1RpbWVvdXQpe2pRdWVyeS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLnNDbG9zZU5vd1RpbWVvdXQpO3RoaXMuc0Nsb3NlTm93VGltZW91dD1udWxsfWUuc3RvcFByb3BhZ2F0aW9uKCk7ZS5wcmV2ZW50RGVmYXVsdCgpO3JldHVybn12YXIgYz1qUXVlcnkoZS5jdXJyZW50VGFyZ2V0KS5jb250cm9sKDApO2lmKGMhPT1FJiYhdGhpcy5pc1N0YW5kYXJkVG9vbHRpcChFLmdldFRvb2x0aXAoKSkpe2lmKHRoaXMuc0Nsb3NlTm93VGltZW91dCl7alF1ZXJ5LnNhcC5jbGVhckRlbGF5ZWRDYWxsKHRoaXMuc0Nsb3NlTm93VGltZW91dCk7dGhpcy5zQ2xvc2VOb3dUaW1lb3V0PW51bGw7ZS5zdG9wUHJvcGFnYXRpb24oKTtlLnByZXZlbnREZWZhdWx0KCk7cmV0dXJufX12YXIgbD1qUXVlcnkoZS5yZWxhdGVkVGFyZ2V0KS5jb250cm9sKDApO2lmKGwpe2lmKGwuZ2V0UGFyZW50KCkpe2lmKGwuZ2V0UGFyZW50KCk9PT1jJiZjPT09RSl7dmFyIEw9bC5nZXRUb29sdGlwKCk7aWYoIXRoaXMuaXNTdGFuZGFyZFRvb2x0aXAoTCkmJighTHx8IShMIGluc3RhbmNlb2Ygc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UpKSl7aWYodGhpcy5zQ2xvc2VOb3dUaW1lb3V0KXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5zQ2xvc2VOb3dUaW1lb3V0KTt0aGlzLnNDbG9zZU5vd1RpbWVvdXQ9bnVsbDtlLnN0b3BQcm9wYWdhdGlvbigpO2UucHJldmVudERlZmF1bHQoKTtyZXR1cm59fX19fWlmKHRoaXMuX2N1cnJlbnRDb250cm9sPT09RXx8IXRoaXMuaXNTdGFuZGFyZFRvb2x0aXAoRS5nZXRUb29sdGlwKCkpKXt0aGlzLnJlbW92ZVN0YW5kYXJkVG9vbHRpcHMoRSk7aWYoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KX1zYXAudWkuY29yZS5Ub29sdGlwQmFzZS5zT3BlblRpbWVvdXQ9alF1ZXJ5LnNhcC5kZWxheWVkQ2FsbCh0aGlzLmdldE9wZW5EZWxheSgpLHRoaXMsIm9wZW5Qb3B1cCIsW3RoaXMuX2N1cnJlbnRDb250cm9sXSk7ZS5zdG9wUHJvcGFnYXRpb24oKTtlLnByZXZlbnREZWZhdWx0KCl9fX07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLm9ubW91c2VvdXQ9ZnVuY3Rpb24oZSl7aWYoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5zT3BlblRpbWVvdXQ9dW5kZWZpbmVkfWlmKCF0aGlzLnNDbG9zZU5vd1RpbWVvdXQpe3RoaXMuc0Nsb3NlTm93VGltZW91dD1qUXVlcnkuc2FwLmRlbGF5ZWRDYWxsKHRoaXMuZ2V0Q2xvc2VEZWxheSgpLHRoaXMsImNsb3NlUG9wdXAiKX10aGlzLnJlc3RvcmVTdGFuZGFyZFRvb2x0aXBzKCk7ZS5zdG9wUHJvcGFnYXRpb24oKTtlLnByZXZlbnREZWZhdWx0KCl9O3NhcC51aS5jb3JlLlRvb2x0aXBCYXNlLnByb3RvdHlwZS5jbG9zZVBvcHVwPWZ1bmN0aW9uKCl7dmFyIHA9dGhpcy5fZ2V0UG9wdXAoKTtpZih0aGlzLnNDbG9zZU5vd1RpbWVvdXQpe2pRdWVyeS5zYXAuY2xlYXJEZWxheWVkQ2FsbCh0aGlzLnNDbG9zZU5vd1RpbWVvdXQpfXRoaXMuc0Nsb3NlTm93VGltZW91dD11bmRlZmluZWQ7cC5hdHRhY2hDbG9zZWQodGhpcy5oYW5kbGVDbG9zZWQsdGhpcyk7cC5jbG9zZSgpO3RoaXMucmVzdG9yZVN0YW5kYXJkVG9vbHRpcHMoKX07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLmhhbmRsZUNsb3NlZD1mdW5jdGlvbigpe3RoaXMuX2dldFBvcHVwKCkuZGV0YWNoQ2xvc2VkKGpRdWVyeS5wcm94eSh0aGlzLmhhbmRsZUNsb3NlZCx0aGlzKSk7dGhpcy5maXJlRXZlbnQoc2FwLnVpLmNvcmUuUG9wdXAuTV9FVkVOVFMuY2xvc2VkKX07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLm9wZW5Qb3B1cD1mdW5jdGlvbihzKXtpZihzLmdldFRvb2x0aXAoKSE9bnVsbCl7aWYodGhpcy5zQ2xvc2VOb3dUaW1lb3V0KXtqUXVlcnkuc2FwLmNsZWFyRGVsYXllZENhbGwodGhpcy5zQ2xvc2VOb3dUaW1lb3V0KTt0aGlzLnNDbG9zZU5vd1RpbWVvdXQ9bnVsbDtyZXR1cm59dmFyIHA9dGhpcy5fZ2V0UG9wdXAoKTtpZihwLmlzT3BlbigpJiZwLmdldENvbnRlbnQoKT09dGhpcyl7cmV0dXJufXNhcC51aS5nZXRDb3JlKCkuZ2V0UmVuZGVyTWFuYWdlcigpLnJlbmRlcih0aGlzLHNhcC51aS5nZXRDb3JlKCkuZ2V0U3RhdGljQXJlYVJlZigpLHRydWUpO3ZhciBkPXMuZ2V0RG9tUmVmKCk7cC5zZXRDb250ZW50KHRoaXMpO3Auc2V0UG9zaXRpb24odGhpcy5nZXRNeVBvc2l0aW9uKCksdGhpcy5nZXRBdFBvc2l0aW9uKCksZCx0aGlzLmdldE9mZnNldCgpLHRoaXMuZ2V0Q29sbGlzaW9uKCkpO3Auc2V0RHVyYXRpb25zKHRoaXMuZ2V0T3BlbkR1cmF0aW9uKCksdGhpcy5nZXRDbG9zZUR1cmF0aW9uKCkpO3Aub3BlbigpO3RoaXMucmVtb3ZlU3RhbmRhcmRUb29sdGlwcyh0aGlzLl9jdXJyZW50Q29udHJvbCl9fTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUucmVtb3ZlU3RhbmRhcmRUb29sdGlwcz1mdW5jdGlvbigpe3ZhciBkPXRoaXMuX2N1cnJlbnRDb250cm9sLmdldERvbVJlZigpO2lmKCF0aGlzLmFTdG9yZWRUb29sdGlwcyl7dGhpcy5hU3RvcmVkVG9vbHRpcHM9W119ZWxzZXtyZXR1cm59dmFyIHQ9IiI7d2hpbGUoZCYmIShkPT09ZG9jdW1lbnQpKXt0PWQudGl0bGU7aWYodCl7dGhpcy5hU3RvcmVkVG9vbHRpcHMucHVzaCh7ZG9tcmVmOmQsdG9vbHRpcDp0fSk7ZC50aXRsZT0iIn1kPWQucGFyZW50Tm9kZX1pZih0aGlzLl9jdXJyZW50Q29udHJvbC5nZXRUb29sdGlwRG9tUmVmcyl7dmFyIEQ9dGhpcy5fY3VycmVudENvbnRyb2wuZ2V0VG9vbHRpcERvbVJlZnMoKTtmb3IodmFyIGk9MDtpPEQubGVuZ3RoO2krKyl7ZD1EW2ldO2lmKGQpe3Q9ZC50aXRsZTtpZih0KXt0aGlzLmFTdG9yZWRUb29sdGlwcy5wdXNoKHtkb21yZWY6ZCx0b29sdGlwOnR9KTtkLnRpdGxlPSIifX19fX07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLnJlc3RvcmVTdGFuZGFyZFRvb2x0aXBzPWZ1bmN0aW9uKCl7dmFyIHA9dGhpcy5fZ2V0UG9wdXAoKTt2YXIgZT1wLmdldE9wZW5TdGF0ZSgpO2lmKGU9PT1zYXAudWkuY29yZS5PcGVuU3RhdGUuT1BFTnx8ZT09PXNhcC51aS5jb3JlLk9wZW5TdGF0ZS5PUEVOSU5HKXtyZXR1cm59aWYoc2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0KXtyZXR1cm59aWYodGhpcy5hU3RvcmVkVG9vbHRpcHMpe2Zvcih2YXIgaT0wO2k8dGhpcy5hU3RvcmVkVG9vbHRpcHMubGVuZ3RoO2krKyl7dmFyIGQ9dGhpcy5hU3RvcmVkVG9vbHRpcHNbaV0uZG9tcmVmO2QudGl0bGU9dGhpcy5hU3RvcmVkVG9vbHRpcHNbaV0udG9vbHRpcH19dGhpcy5hU3RvcmVkVG9vbHRpcHM9bnVsbH07c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLl9zZXRQYXJlbnQ9c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2UucHJvdG90eXBlLnNldFBhcmVudDtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUuc2V0UGFyZW50PWZ1bmN0aW9uKHAsYSl7dmFyIF89dGhpcy5fZ2V0UG9wdXAoKTtpZihfJiZfLmlzT3BlbigpKXt0aGlzLmNsb3NlUG9wdXAoKX10aGlzLl9zZXRQYXJlbnQuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5wcm90b3R5cGUub25rZXlkb3duPWZ1bmN0aW9uKGUpe2lmKGUuY3RybEtleSYmZS53aGljaD09alF1ZXJ5LnNhcC5LZXlDb2Rlcy5JKXt2YXIgRT1qUXVlcnkoZS50YXJnZXQpLmNvbnRyb2woMCk7aWYoRSE9bnVsbCl7aWYodGhpcy5fY3VycmVudENvbnRyb2w9PT1FfHwhdGhpcy5pc1N0YW5kYXJkVG9vbHRpcChFLmdldFRvb2x0aXAoKSkpe3RoaXMucmVtb3ZlU3RhbmRhcmRUb29sdGlwcyhFKTt0aGlzLm9wZW5Qb3B1cCh0aGlzLl9jdXJyZW50Q29udHJvbCk7ZS5wcmV2ZW50RGVmYXVsdCgpO2Uuc3RvcFByb3BhZ2F0aW9uKCl9fX1lbHNlIGlmKGUud2hpY2g9PWpRdWVyeS5zYXAuS2V5Q29kZXMuRVNDQVBFKXtpZihzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5zT3BlblRpbWVvdXQpe2pRdWVyeS5zYXAuY2xlYXJEZWxheWVkQ2FsbChzYXAudWkuY29yZS5Ub29sdGlwQmFzZS5zT3BlblRpbWVvdXQpO3NhcC51aS5jb3JlLlRvb2x0aXBCYXNlLnNPcGVuVGltZW91dD11bmRlZmluZWR9dmFyIHc9dGhpcy5vUG9wdXAmJnRoaXMub1BvcHVwLmlzT3BlbigpO3RoaXMuY2xvc2VQb3B1cCgpO2lmKHcpe2UucHJldmVudERlZmF1bHQoKTtlLnN0b3BQcm9wYWdhdGlvbigpfX19O3NhcC51aS5jb3JlLlRvb2x0aXBCYXNlLnByb3RvdHlwZS5fY2xvc2VPclByZXZlbnRPcGVuPWZ1bmN0aW9uKCl7dmFyIHA9dGhpcy5fZ2V0UG9wdXAoKTtpZihwLmlzT3BlbigpKXt0aGlzLmNsb3NlUG9wdXAoKX1lbHNlIGlmKHNhcC51aS5jb3JlLlRvb2x0aXBCYXNlLnNPcGVuVGltZW91dCl7alF1ZXJ5LnNhcC5jbGVhckRlbGF5ZWRDYWxsKHNhcC51aS5jb3JlLlRvb2x0aXBCYXNlLnNPcGVuVGltZW91dCk7c2FwLnVpLmNvcmUuVG9vbHRpcEJhc2Uuc09wZW5UaW1lb3V0PXVuZGVmaW5lZH19O3JldHVybiBzYXAudWkuY29yZS5Ub29sdGlwQmFzZX0sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLlZhcmlhbnRMYXlvdXREYXRhJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuVmFyaWFudExheW91dERhdGEnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9WYXJpYW50TGF5b3V0RGF0YSIsWycuL2xpYnJhcnknLCcuL0xheW91dERhdGEnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5MYXlvdXREYXRhLmV4dGVuZCgic2FwLnVpLmNvcmUuVmFyaWFudExheW91dERhdGEiLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLGFnZ3JlZ2F0aW9uczp7Im11bHRpcGxlTGF5b3V0RGF0YSI6e3R5cGU6InNhcC51aS5jb3JlLkxheW91dERhdGEiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJtdWx0aXBsZUxheW91dERhdGEifX19fSk7cmV0dXJuIHNhcC51aS5jb3JlLlZhcmlhbnRMYXlvdXREYXRhfSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUubXZjLlZpZXcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuVmlldycpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL212Yy9WaWV3IixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCdzYXAvdWkvY29yZS9Db250cm9sJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuQ29udHJvbC5leHRlbmQoInNhcC51aS5jb3JlLm12Yy5WaWV3Iix7bWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJnZXRDb250cm9sbGVyIl0sbGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJ3aWR0aCI6e3R5cGU6InNhcC51aS5jb3JlLkNTU1NpemUiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTonMTAwJSd9LCJoZWlnaHQiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NTaXplIixncm91cDoiRGltZW5zaW9uIixkZWZhdWx0VmFsdWU6bnVsbH0sInZpZXdOYW1lIjp7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOm51bGx9LCJkaXNwbGF5QmxvY2siOnt0eXBlOiJib29sZWFuIixncm91cDoiQXBwZWFyYW5jZSIsZGVmYXVsdFZhbHVlOmZhbHNlfX0sYWdncmVnYXRpb25zOnsiY29udGVudCI6e3R5cGU6InNhcC51aS5jb3JlLkNvbnRyb2wiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJjb250ZW50In19LGV2ZW50czp7ImFmdGVySW5pdCI6e30sImJlZm9yZUV4aXQiOnt9LCJhZnRlclJlbmRlcmluZyI6e30sImJlZm9yZVJlbmRlcmluZyI6e319fX0pO3NhcC51aS5jb3JlLm12Yy5WaWV3Lk1fRVZFTlRTPXsnYWZ0ZXJJbml0JzonYWZ0ZXJJbml0JywnYmVmb3JlRXhpdCc6J2JlZm9yZUV4aXQnLCdhZnRlclJlbmRlcmluZyc6J2FmdGVyUmVuZGVyaW5nJywnYmVmb3JlUmVuZGVyaW5nJzonYmVmb3JlUmVuZGVyaW5nJ307KGZ1bmN0aW9uKCl7c2FwLnVpLmNvcmUubXZjLlZpZXcucHJvdG90eXBlLl9pbml0Q29tcG9zaXRlU3VwcG9ydD1mdW5jdGlvbihzKXt0aGlzLm9WaWV3RGF0YT1zLnZpZXdEYXRhO3RoaXMuc1ZpZXdOYW1lPXMudmlld05hbWU7aWYodGhpcy5pbml0Vmlld1NldHRpbmdzKXt0aGlzLmluaXRWaWV3U2V0dGluZ3Mocyl9Yyh0aGlzLHMpO2lmKHRoaXMub25Db250cm9sbGVyQ29ubmVjdGVkKXt0aGlzLm9uQ29udHJvbGxlckNvbm5lY3RlZCh0aGlzLm9Db250cm9sbGVyKX10aGlzLmZpcmVBZnRlckluaXQoKX07c2FwLnVpLmNvcmUubXZjLlZpZXcucHJvdG90eXBlLmdldENvbnRyb2xsZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vQ29udHJvbGxlcn07c2FwLnVpLmNvcmUubXZjLlZpZXcucHJvdG90eXBlLmJ5SWQ9ZnVuY3Rpb24oaSl7cmV0dXJuIHNhcC51aS5nZXRDb3JlKCkuYnlJZCh0aGlzLmNyZWF0ZUlkKGkpKX07c2FwLnVpLmNvcmUubXZjLlZpZXcucHJvdG90eXBlLmNyZWF0ZUlkPWZ1bmN0aW9uKGkpe2lmKCF0aGlzLmlzUHJlZml4ZWRJZChpKSl7aT10aGlzLmdldElkKCkrIi0tIitpfXJldHVybiBpfTtzYXAudWkuY29yZS5tdmMuVmlldy5wcm90b3R5cGUuaXNQcmVmaXhlZElkPWZ1bmN0aW9uKGkpe3JldHVybihpJiZpLmluZGV4T2YodGhpcy5nZXRJZCgpKyItLSIpPT09MCl9O3ZhciBjPWZ1bmN0aW9uKHQscyl7dmFyIEM9cy5jb250cm9sbGVyO2lmKCFDJiZ0LmdldENvbnRyb2xsZXJOYW1lKXt2YXIgZD10LmdldENvbnRyb2xsZXJOYW1lKCk7aWYoZCl7Qz1zYXAudWkuY29udHJvbGxlcihkKX19aWYoc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0RGVzaWduTW9kZSgpJiYhc2FwLnVpLmdldENvcmUoKS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0U3VwcHJlc3NEZWFjdGl2YXRpb25PZkNvbnRyb2xsZXJDb2RlKCkpe2Zvcih2YXIgbSBpbiBDKXtpZih0eXBlb2YgQ1ttXT09PSJmdW5jdGlvbiImJiFzYXAudWkuY29yZS5tdmMuQ29udHJvbGxlci5wcm90b3R5cGVbbV0pe0NbbV09ZnVuY3Rpb24oKXt9fX19aWYoQyl7dC5vQ29udHJvbGxlcj1DO0MuY29ubmVjdFRvVmlldyh0KX19O3NhcC51aS5jb3JlLm12Yy5WaWV3LnByb3RvdHlwZS5nZXRWaWV3RGF0YT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm9WaWV3RGF0YX07c2FwLnVpLmNvcmUubXZjLlZpZXcucHJvdG90eXBlLmV4aXQ9ZnVuY3Rpb24oKXt0aGlzLmZpcmVCZWZvcmVFeGl0KCk7dGhpcy5vQ29udHJvbGxlcj1udWxsfTtzYXAudWkuY29yZS5tdmMuVmlldy5wcm90b3R5cGUub25BZnRlclJlbmRlcmluZz1mdW5jdGlvbigpe3RoaXMuZmlyZUFmdGVyUmVuZGVyaW5nKCl9O3NhcC51aS5jb3JlLm12Yy5WaWV3LnByb3RvdHlwZS5vbkJlZm9yZVJlbmRlcmluZz1mdW5jdGlvbigpe3RoaXMuZmlyZUJlZm9yZVJlbmRlcmluZygpfTtzYXAudWkuY29yZS5tdmMuVmlldy5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oaSxsKXt2YXIgcz17fSxrLEM7Zm9yKGsgaW4gdGhpcy5tUHJvcGVydGllcyYmISh0aGlzLmlzQm91bmQmJnRoaXMuaXNCb3VuZChrKSkpe2lmKHRoaXMubVByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoaykpe3Nba109dGhpcy5tUHJvcGVydGllc1trXX19Qz1zYXAudWkuY29yZS5Db250cm9sLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsaSxsLHtjbG9uZUNoaWxkcmVuOmZhbHNlLGNsb25lQmluZGluZ3M6dHJ1ZX0pO0MuYXBwbHlTZXR0aW5ncyhzKTtyZXR1cm4gQ307c2FwLnVpLnZpZXc9ZnVuY3Rpb24oaSx2LHQpe3ZhciBhPW51bGwsVj17fTtpZih0eXBlb2YgaT09PSJvYmplY3QifHx0eXBlb2YgaT09PSJzdHJpbmciJiZ2PT09dW5kZWZpbmVkKXt2PWk7aT11bmRlZmluZWR9aWYodil7aWYodHlwZW9mIHY9PT0ic3RyaW5nIil7Vi52aWV3TmFtZT12fWVsc2V7Vj12fX1pZihpKXtWLmlkPWl9aWYodCl7Vi50eXBlPXR9aWYoc2FwLnVpLmNvcmUuQ3VzdG9taXppbmdDb25maWd1cmF0aW9uKXt2YXIgYj1zYXAudWkuY29yZS5DdXN0b21pemluZ0NvbmZpZ3VyYXRpb24uZ2V0Vmlld1JlcGxhY2VtZW50KFYudmlld05hbWUpO2lmKGIpe2pRdWVyeS5zYXAubG9nLmluZm8oIkN1c3RvbWl6aW5nOiBWaWV3IHJlcGxhY2VtZW50IGZvciB2aWV3ICciK1Yudmlld05hbWUrIicgZm91bmQgYW5kIGFwcGxpZWQ6ICIrYi52aWV3TmFtZSsiICh0eXBlOiAiK2IudHlwZSsiKSIpO2pRdWVyeS5leHRlbmQoVixiKX19aWYoIVYudHlwZSl7dGhyb3cgbmV3IEVycm9yKCJObyB2aWV3IHR5cGUgc3BlY2lmaWVkLiIpfWVsc2UgaWYoVi50eXBlPT09c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLkpTKXthPW5ldyBzYXAudWkuY29yZS5tdmMuSlNWaWV3KFYpfWVsc2UgaWYoVi50eXBlPT09c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLkpTT04pe2E9bmV3IHNhcC51aS5jb3JlLm12Yy5KU09OVmlldyhWKX1lbHNlIGlmKFYudHlwZT09PXNhcC51aS5jb3JlLm12Yy5WaWV3VHlwZS5YTUwpe2E9bmV3IHNhcC51aS5jb3JlLm12Yy5YTUxWaWV3KFYpfWVsc2UgaWYoVi50eXBlPT09c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLkhUTUwpe2E9bmV3IHNhcC51aS5jb3JlLm12Yy5IVE1MVmlldyhWKX1lbHNlIGlmKFYudHlwZT09PXNhcC51aS5jb3JlLm12Yy5WaWV3VHlwZS5UZW1wbGF0ZSl7YT1uZXcgc2FwLnVpLmNvcmUubXZjLlRlbXBsYXRlVmlldyhWKX1lbHNle3Rocm93IG5ldyBFcnJvcigiVW5rbm93biB2aWV3IHR5cGUgIitWLnR5cGUrIiBzcGVjaWZpZWQuIil9cmV0dXJuIGF9fSgpKTtyZXR1cm4gc2FwLnVpLmNvcmUubXZjLlZpZXd9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuWE1MVmlldycpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLm12Yy5YTUxWaWV3Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL1hNTFZpZXciLFsnc2FwL3VpL2NvcmUvbGlicmFyeScsJy4vVmlldycsJ2pxdWVyeS5zYXAueG1sJywnc2FwL3VpL2Jhc2UvRGF0YVR5cGUnLCdzYXAvdWkvbW9kZWwvcmVzb3VyY2UvUmVzb3VyY2VNb2RlbCcsJ3NhcC91aS9jb3JlL1hNTFRlbXBsYXRlUHJvY2Vzc29yJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUubXZjLlZpZXcuZXh0ZW5kKCJzYXAudWkuY29yZS5tdmMuWE1MVmlldyIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSJ9fSk7c2FwLnVpLnhtbHZpZXc9ZnVuY3Rpb24oaSx2KXtyZXR1cm4gc2FwLnVpLnZpZXcoaSx2LHNhcC51aS5jb3JlLm12Yy5WaWV3VHlwZS5YTUwpfTtzYXAudWkuY29yZS5tdmMuWE1MVmlldy5fc1R5cGU9c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLlhNTDtzYXAudWkuY29yZS5tdmMuWE1MVmlldy5wcm90b3R5cGUuaW5pdFZpZXdTZXR0aW5ncz1mdW5jdGlvbihzKXtpZighcyl7dGhyb3cgbmV3IEVycm9yKCJtU2V0dGluZ3MgbXVzdCBiZSBnaXZlbiIpfWlmKHMudmlld05hbWUmJnMudmlld0NvbnRlbnQpe3Rocm93IG5ldyBFcnJvcigiVmlldyBuYW1lIGFuZCB2aWV3IGNvbnRlbnQgYXJlIGdpdmVuLiBUaGVyZSBpcyBubyBwb2ludCBpbiBkb2luZyB0aGlzLCBzbyBwbGVhc2UgZGVjaWRlLiIpfWVsc2UgaWYoKHMudmlld05hbWV8fHMudmlld0NvbnRlbnQpJiZzLnhtbE5vZGUpe3Rocm93IG5ldyBFcnJvcigiVmlldyBuYW1lL2NvbnRlbnQgQU5EIGFuIFhNTCBub2RlIGFyZSBnaXZlbi4gVGhlcmUgaXMgbm8gcG9pbnQgaW4gZG9pbmcgdGhpcywgc28gcGxlYXNlIGRlY2lkZS4iKX1lbHNlIGlmKCEocy52aWV3TmFtZXx8cy52aWV3Q29udGVudCkmJiFzLnhtbE5vZGUpe3Rocm93IG5ldyBFcnJvcigiTmVpdGhlciB2aWV3IG5hbWUvY29udGVudCBub3IgYW4gWE1MIG5vZGUgaXMgZ2l2ZW4uIE9uZSBvZiB0aGVtIGlzIHJlcXVpcmVkLiIpfWlmKHMudmlld05hbWUpe3RoaXMuX3hDb250ZW50PXNhcC51aS5jb3JlLlhNTFRlbXBsYXRlUHJvY2Vzc29yLmxvYWRUZW1wbGF0ZShzLnZpZXdOYW1lKX1lbHNlIGlmKHMudmlld0NvbnRlbnQpe3RoaXMubVByb3BlcnRpZXNbInZpZXdDb250ZW50Il09cy52aWV3Q29udGVudDt0aGlzLl94Q29udGVudD1qUXVlcnkuc2FwLnBhcnNlWE1MKHMudmlld0NvbnRlbnQpO2lmKHRoaXMuX3hDb250ZW50LnBhcnNlRXJyb3IuZXJyb3JDb2RlIT0wKXt2YXIgcD10aGlzLl94Q29udGVudC5wYXJzZUVycm9yO3Rocm93IG5ldyBFcnJvcigiVGhlIGZvbGxvd2luZyBwcm9ibGVtIG9jY3VycmVkOiBYTUwgcGFyc2UgRXJyb3IgZm9yICIrcC51cmwrIiBjb2RlOiAiK3AuZXJyb3JDb2RlKyIgcmVhc29uOiAiK3AucmVhc29uKyIgc3JjOiAiK3Auc3JjVGV4dCsiIGxpbmU6ICIrcC5saW5lKyIgbGluZXBvczogIitwLmxpbmVwb3MrIiBmaWxlcG9zOiAiK3AuZmlsZXBvcyl9ZWxzZXt0aGlzLl94Q29udGVudD10aGlzLl94Q29udGVudC5kb2N1bWVudEVsZW1lbnR9fWVsc2UgaWYocy54bWxOb2RlKXt0aGlzLl94Q29udGVudD1zLnhtbE5vZGV9ZWxzZXt9dGhpcy5fb0NvbnRhaW5pbmdWaWV3PXMuY29udGFpbmluZ1ZpZXd8fHRoaXM7aWYoIXRoaXMuaXNTdWJWaWV3KCkpe3NhcC51aS5jb3JlLlhNTFRlbXBsYXRlUHJvY2Vzc29yLnBhcnNlVmlld0F0dHJpYnV0ZXModGhpcy5feENvbnRlbnQsdGhpcyxzKX1lbHNle2RlbGV0ZSBzLmNvbnRyb2xsZXJ9aWYoKHRoaXMuX3Jlc291cmNlQnVuZGxlTmFtZXx8dGhpcy5fcmVzb3VyY2VCdW5kbGVVcmwpJiYoIXMubW9kZWxzfHwhcy5tb2RlbHNbdGhpcy5fcmVzb3VyY2VCdW5kbGVBbGlhc10pKXt2YXIgbT1uZXcgc2FwLnVpLm1vZGVsLnJlc291cmNlLlJlc291cmNlTW9kZWwoe2J1bmRsZU5hbWU6dGhpcy5fcmVzb3VyY2VCdW5kbGVOYW1lLGJ1bmRsZVVybDp0aGlzLl9yZXNvdXJjZUJ1bmRsZVVybCxidW5kbGVMb2NhbGU6dGhpcy5fcmVzb3VyY2VCdW5kbGVMb2NhbGV9KTt0aGlzLnNldE1vZGVsKG0sdGhpcy5fcmVzb3VyY2VCdW5kbGVBbGlhcyl9dmFyIHQ9dGhpczt0aGlzLm9BZnRlclJlbmRlcmluZ05vdGlmaWVyPW5ldyBzYXAudWkuY29yZS5tdmMuWE1MQWZ0ZXJSZW5kZXJpbmdOb3RpZmllcigpO3RoaXMub0FmdGVyUmVuZGVyaW5nTm90aWZpZXIuYWRkRGVsZWdhdGUoe29uQWZ0ZXJSZW5kZXJpbmc6ZnVuY3Rpb24oKXt0Lm9uQWZ0ZXJSZW5kZXJpbmdCZWZvcmVDaGlsZHJlbigpfX0pfTtzYXAudWkuY29yZS5tdmMuWE1MVmlldy5wcm90b3R5cGUuZXhpdD1mdW5jdGlvbigpe3RoaXMub0FmdGVyUmVuZGVyaW5nTm90aWZpZXIuZGVzdHJveSgpO3NhcC51aS5jb3JlLm12Yy5WaWV3LnByb3RvdHlwZS5leGl0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07c2FwLnVpLmNvcmUubXZjLlhNTFZpZXcucHJvdG90eXBlLm9uQ29udHJvbGxlckNvbm5lY3RlZD1mdW5jdGlvbihjKXt2YXIgdD10aGlzO3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QucnVuV2l0aFByZXByb2Nlc3NvcnMoZnVuY3Rpb24oKXt0Ll9hUGFyc2VkQ29udGVudD1zYXAudWkuY29yZS5YTUxUZW1wbGF0ZVByb2Nlc3Nvci5wYXJzZVRlbXBsYXRlKHQuX3hDb250ZW50LHQpfSl9O3NhcC51aS5jb3JlLm12Yy5YTUxWaWV3LnByb3RvdHlwZS5nZXRDb250cm9sbGVyTmFtZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250cm9sbGVyTmFtZX07c2FwLnVpLmNvcmUubXZjLlhNTFZpZXcucHJvdG90eXBlLmlzU3ViVmlldz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9vQ29udGFpbmluZ1ZpZXchPXRoaXN9O3NhcC51aS5jb3JlLm12Yy5YTUxWaWV3LnByb3RvdHlwZS5vbkFmdGVyUmVuZGVyaW5nQmVmb3JlQ2hpbGRyZW49ZnVuY3Rpb24oKXtpZih0aGlzLl8kb2xkQ29udGVudC5sZW5ndGghPT0wKXt2YXIgYz10aGlzLmdldEFnZ3JlZ2F0aW9uKCJjb250ZW50Iik7aWYoYyl7Zm9yKHZhciBpPTA7aTxjLmxlbmd0aDtpKyspe3ZhciAkPWNbaV0uJCgpO2pRdWVyeS5zYXAuYnlJZCgic2FwLXVpLWR1bW15LSIrY1tpXS5nZXRJZCgpLHRoaXMuXyRvbGRDb250ZW50KS5yZXBsYWNlV2l0aCgkKX19alF1ZXJ5LnNhcC5ieUlkKCJzYXAtdWktZHVtbXktIit0aGlzLmdldElkKCkpLnJlcGxhY2VXaXRoKHRoaXMuXyRvbGRDb250ZW50KX10aGlzLl8kb2xkQ29udGVudD11bmRlZmluZWR9O3NhcC51aS5jb3JlLkNvbnRyb2wuZXh0ZW5kKCJzYXAudWkuY29yZS5tdmMuWE1MQWZ0ZXJSZW5kZXJpbmdOb3RpZmllciIse3JlbmRlcmVyOmZ1bmN0aW9uKHIsYyl7ci53cml0ZSgiIil9fSk7cmV0dXJuIHNhcC51aS5jb3JlLm12Yy5YTUxWaWV3fSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuc2VhcmNoLk9wZW5TZWFyY2hQcm92aWRlcicpKXtqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLnNlYXJjaC5PcGVuU2VhcmNoUHJvdmlkZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9zZWFyY2gvT3BlblNlYXJjaFByb3ZpZGVyIixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCcuL1NlYXJjaFByb3ZpZGVyJywnanF1ZXJ5LnNhcC5lbmNvZGVyJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuc2VhcmNoLlNlYXJjaFByb3ZpZGVyLmV4dGVuZCgic2FwLnVpLmNvcmUuc2VhcmNoLk9wZW5TZWFyY2hQcm92aWRlciIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7InN1Z2dlc3RVcmwiOnt0eXBlOiJzYXAudWkuY29yZS5VUkkiLGdyb3VwOiJNaXNjIixkZWZhdWx0VmFsdWU6bnVsbH0sInN1Z2dlc3RUeXBlIjp7dHlwZToic3RyaW5nIixncm91cDoiTWlzYyIsZGVmYXVsdFZhbHVlOidqc29uJ319fX0pO3NhcC51aS5jb3JlLnNlYXJjaC5PcGVuU2VhcmNoUHJvdmlkZXIucHJvdG90eXBlLnN1Z2dlc3Q9ZnVuY3Rpb24odixjKXt2YXIgdT10aGlzLmdldFN1Z2dlc3RVcmwoKTtpZighdSl7cmV0dXJufXU9dS5yZXBsYWNlKCJ7c2VhcmNoVGVybXN9IixqUXVlcnkuc2FwLmVuY29kZVVSTCh2KSk7dmFyIHQ9dGhpcy5nZXRTdWdnZXN0VHlwZSgpO3ZhciBzO2lmKHQmJnQudG9Mb3dlckNhc2UoKT09PSJ4bWwiKXt0PSJ4bWwiO3M9ZnVuY3Rpb24oZCl7dmFyIHg9alF1ZXJ5KGQpO3ZhciBpPXguZmluZCgiVGV4dCIpO3ZhciBTPVtdO2kuZWFjaChmdW5jdGlvbigpe1MucHVzaChqUXVlcnkodGhpcykudGV4dCgpKX0pO2ModixTKX19ZWxzZXt0PSJqc29uIjtzPWZ1bmN0aW9uKGQpe2ModixkWzFdKX19alF1ZXJ5LmFqYXgoe3VybDp1LGRhdGFUeXBlOnQsc3VjY2VzczpzLGVycm9yOmZ1bmN0aW9uKFgsYSxlKXtqUXVlcnkuc2FwLmxvZy5mYXRhbCgiVGhlIGZvbGxvd2luZyBwcm9ibGVtIG9jY3VycmVkOiAiK2EsWC5yZXNwb25zZVRleHQrIiwiK1guc3RhdHVzKX19KX07cmV0dXJuIHNhcC51aS5jb3JlLnNlYXJjaC5PcGVuU2VhcmNoUHJvdmlkZXJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQnKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS90bXBsL0RPTUVsZW1lbnQiLFsnc2FwL3VpL2NvcmUvbGlicmFyeScsJ3NhcC91aS9jb3JlL0NvbnRyb2wnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5Db250cm9sLmV4dGVuZCgic2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50Iix7bWV0YWRhdGE6e3B1YmxpY01ldGhvZHM6WyJhdHRyIiwicmVtb3ZlQXR0ciJdLGxpYnJhcnk6InNhcC51aS5jb3JlIixwcm9wZXJ0aWVzOnsidGV4dCI6e3R5cGU6InN0cmluZyIsZ3JvdXA6IkFwcGVhcmFuY2UiLGRlZmF1bHRWYWx1ZTpudWxsfSwidGFnIjp7dHlwZToic3RyaW5nIixncm91cDoiQmVoYXZpb3IiLGRlZmF1bHRWYWx1ZTonc3Bhbid9fSxhZ2dyZWdhdGlvbnM6eyJhdHRyaWJ1dGVzIjp7dHlwZToic2FwLnVpLmNvcmUudG1wbC5ET01BdHRyaWJ1dGUiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJhdHRyaWJ1dGUifSwiZWxlbWVudHMiOnt0eXBlOiJzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJlbGVtZW50In19fX0pO3NhcC51aS5jb3JlLnRtcGwuRE9NRWxlbWVudC5wcm90b3R5cGUuYXBwbHlTZXR0aW5ncz1mdW5jdGlvbihzKXtzYXAudWkuY29yZS5Db250cm9sLnByb3RvdHlwZS5hcHBseVNldHRpbmdzLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgdD10aGlzLG09dGhpcy5nZXRNZXRhZGF0YSgpLGo9bS5nZXRKU09OS2V5cygpO2pRdWVyeS5lYWNoKHMsZnVuY3Rpb24oayx2KXtpZihrIT09ImlkIiYmayE9PSJ0ZXh0IiYmIWpba10mJnR5cGVvZiB2PT09InN0cmluZyIpe3QuYXR0cihrLHYpfX0pfTtzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQucHJvdG90eXBlLmV4aXQ9c2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50LnByb3RvdHlwZS5vbkJlZm9yZVJlbmRlcmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0VGFnKCkudG9Mb3dlckNhc2UoKTtpZih0PT09ImlucHV0Inx8dD09PSJ0ZXh0YXJlYSJ8fHQ9PT0ic2VsZWN0Iil7dGhpcy4kKCkub2ZmKCJjaGFuZ2UiKX19O3NhcC51aS5jb3JlLnRtcGwuRE9NRWxlbWVudC5wcm90b3R5cGUub25BZnRlclJlbmRlcmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0VGFnKCkudG9Mb3dlckNhc2UoKTtpZih0PT09ImlucHV0Inx8dD09PSJ0ZXh0YXJlYSJ8fHQ9PT0ic2VsZWN0Iil7dGhpcy4kKCkub24oImNoYW5nZSIsalF1ZXJ5LnByb3h5KHRoaXMub25pbnB1dGNoYW5nZSx0aGlzKSl9fTtzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQucHJvdG90eXBlLm9uaW5wdXRjaGFuZ2U9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5nZXRUYWcoKS50b0xvd2VyQ2FzZSgpO2lmKHQ9PT0iaW5wdXQiKXt2YXIgdj10aGlzLiQoKS52YWwoKTtqUXVlcnkuZWFjaCh0aGlzLmdldEF0dHJpYnV0ZXMoKSxmdW5jdGlvbihpLGEpe2lmKGEuZ2V0TmFtZSgpLnRvTG93ZXJDYXNlKCk9PT0idmFsdWUiKXthLnNldFZhbHVlKHYpfX0pfWVsc2UgaWYodD09PSJ0ZXh0YXJlYSIpe3ZhciBUPXRoaXMuJCgpLnZhbCgpO3RoaXMuc2V0VGV4dChUKX1lbHNlIGlmKHQ9PT0ic2VsZWN0Iil7dmFyIFQ9IiI7dGhpcy4kKCkuZmluZCgic2VsZWN0IG9wdGlvbjpzZWxlY3RlZCIpLmVhY2goZnVuY3Rpb24oKXtUKz1qUXVlcnkodGhpcykudGV4dCgpKyIgIn0pO3RoaXMuc2V0VGV4dChUKX19O3NhcC51aS5jb3JlLnRtcGwuRE9NRWxlbWVudC5wcm90b3R5cGUuYXR0cj1mdW5jdGlvbihrLHYpe3ZhciBhPXRoaXMuZ2V0QXR0cmlidXRlcygpLEE7alF1ZXJ5LmVhY2goYSxmdW5jdGlvbihpLFYpe3ZhciBuPVYuZ2V0TmFtZSgpO2lmKG4udG9Mb3dlckNhc2UoKT09PWspe0E9VjtyZXR1cm4gZmFsc2V9fSk7aWYodj09PXVuZGVmaW5lZCl7cmV0dXJuIEEmJkEuZ2V0VmFsdWUoKX1lbHNle2lmKEEpe2lmKHY9PT1udWxsKXt0aGlzLnJlbW92ZUF0dHJpYnV0ZShBKX1lbHNle0Euc2V0VmFsdWUodil9fWVsc2V7aWYodiE9PW51bGwpe3RoaXMuYWRkQXR0cmlidXRlKG5ldyBzYXAudWkuY29yZS50bXBsLkRPTUF0dHJpYnV0ZSh7bmFtZTprLHZhbHVlOnZ9KSl9fXJldHVybiB0aGlzfX07c2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyPWZ1bmN0aW9uKGspe3RoaXMuYXR0cihrLG51bGwpO3JldHVybiB0aGlzfTtzYXAudWkuY29yZS50bXBsLkRPTUVsZW1lbnQucHJvdG90eXBlLnNldFRleHQ9ZnVuY3Rpb24odCl7dGhpcy5zZXRQcm9wZXJ0eSgidGV4dCIsdCx0cnVlKTt2YXIgJD10aGlzLiQoKTtpZigkLmxlbmd0aD4wKXt2YXIgVD10aGlzLmdldFRhZygpLnRvTG93ZXJDYXNlKCk7aWYoVD09PSJ0ZXh0YXJlYSIpeyQudmFsKHRoaXMuZ2V0UHJvcGVydHkoInRleHQiKSl9ZWxzZXskLnRleHQodGhpcy5nZXRQcm9wZXJ0eSgidGV4dCIpKX19fTtyZXR1cm4gc2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50fSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL3RtcGwvVGVtcGxhdGVDb250cm9sIixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCdzYXAvdWkvY29yZS9Db250cm9sJywnLi9ET01FbGVtZW50JywnLi9ET01BdHRyaWJ1dGUnLCdzYXAvdWkvY29yZS9EZWNsYXJhdGl2ZVN1cHBvcnQnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5Db250cm9sLmV4dGVuZCgic2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wiLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUiLHByb3BlcnRpZXM6eyJjb250ZXh0Ijp7dHlwZToib2JqZWN0Iixncm91cDoiRGF0YSIsZGVmYXVsdFZhbHVlOm51bGx9fSxhZ2dyZWdhdGlvbnM6eyJjb250cm9scyI6e3R5cGU6InNhcC51aS5jb3JlLkNvbnRyb2wiLG11bHRpcGxlOnRydWUsc2luZ3VsYXJOYW1lOiJjb250cm9sIix2aXNpYmlsaXR5OiJoaWRkZW4ifX0sYXNzb2NpYXRpb25zOnsidGVtcGxhdGUiOnt0eXBlOiJzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlIixtdWx0aXBsZTpmYWxzZX19LGV2ZW50czp7ImFmdGVyUmVuZGVyaW5nIjp7fSwiYmVmb3JlUmVuZGVyaW5nIjp7fX19fSk7c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wuTV9FVkVOVFM9eydhZnRlclJlbmRlcmluZyc6J2FmdGVyUmVuZGVyaW5nJywnYmVmb3JlUmVuZGVyaW5nJzonYmVmb3JlUmVuZGVyaW5nJ307c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLl9hQmluZGluZ0luZm9zPVtdfTtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUuaXNJbmxpbmU9ZnVuY3Rpb24oKXt2YXIgaT1mYWxzZTtpZih0aGlzLmdldFBhcmVudCgpaW5zdGFuY2VvZiBzYXAudWkuY29yZS5VSUFyZWEmJmpRdWVyeSh0aGlzLmdldFBhcmVudCgpLmdldFJvb3ROb2RlKCkpLmF0dHIoImlkIik9PT10aGlzLmdldElkKCkpe2k9dHJ1ZX1yZXR1cm4gaX07c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wucHJvdG90eXBlLnBsYWNlQXQ9ZnVuY3Rpb24ocixwKXt2YXIgaT10aGlzLmlzSW5saW5lKCk7dmFyICQ9dGhpcy4kKCksdT10aGlzLmdldFVJQXJlYSgpO3NhcC51aS5jb3JlLkNvbnRyb2wucHJvdG90eXBlLnBsYWNlQXQuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGkmJiQubGVuZ3RoPT09MSl7JC5yZW1vdmUoKTt1LmRlc3Ryb3lDb250ZW50KCl9fTtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUuZ2V0VGVtcGxhdGVSZW5kZXJlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZuUmVuZGVyZXJ9O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5zZXRUZW1wbGF0ZVJlbmRlcmVyPWZ1bmN0aW9uKHIpe3RoaXMuZm5SZW5kZXJlcj1yO3JldHVybiB0aGlzfTtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUuX2NsZWFudXA9ZnVuY3Rpb24oKXt0aGlzLmRlc3Ryb3lBZ2dyZWdhdGlvbigiY29udHJvbHMiKTtpZih0aGlzLl9hQmluZGluZ0luZm9zKXt2YXIgdD10aGlzO2pRdWVyeS5lYWNoKHRoaXMuX2FCaW5kaW5nSW5mb3MsZnVuY3Rpb24oaSxiKXt0LmdldE1vZGVsKGIubW9kZWwpLnJlbW92ZUJpbmRpbmcoYi5iaW5kaW5nKX0pO3RoaXMuX2FCaW5kaW5nSW5mb3M9W119fTtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUuX2NvbXBpbGU9ZnVuY3Rpb24oKXt2YXIgdD1zYXAudWkuZ2V0Q29yZSgpLmJ5SWQodGhpcy5nZXRUZW1wbGF0ZSgpKSxkPXQmJnQuZ2V0RGVjbGFyYXRpdmVTdXBwb3J0KCk7aWYoZCl7dmFyIGE9dGhpcztzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7c2FwLnVpLmNvcmUuRGVjbGFyYXRpdmVTdXBwb3J0LmNvbXBpbGUoYS5nZXREb21SZWYoKSl9KX19O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5leGl0PWZ1bmN0aW9uKCl7dGhpcy5fY2xlYW51cCgpfTtzYXAudWkuY29yZS50bXBsLlRlbXBsYXRlQ29udHJvbC5wcm90b3R5cGUub25CZWZvcmVSZW5kZXJpbmc9ZnVuY3Rpb24oKXt0aGlzLmZpcmVCZWZvcmVSZW5kZXJpbmcoKTt0aGlzLl9jbGVhbnVwKCl9O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5vbkFmdGVyUmVuZGVyaW5nPWZ1bmN0aW9uKCl7dGhpcy5maXJlQWZ0ZXJSZW5kZXJpbmcoKX07c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wucHJvdG90eXBlLnVwZGF0ZUJpbmRpbmdzPWZ1bmN0aW9uKHUsbSl7c2FwLnVpLmJhc2UuTWFuYWdlZE9iamVjdC5wcm90b3R5cGUudXBkYXRlQmluZGluZ3MuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKHRoaXMuZ2V0RG9tUmVmKCkpe3RoaXMuaW52YWxpZGF0ZSgpfX07c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24ocCx0KXt2YXIgUD1zYXAudWkuY29yZS50bXBsLlRlbXBsYXRlLnBhcnNlUGF0aChwKSxtPXRoaXMuZ2V0TW9kZWwoUC5tb2RlbCkscD1QLnBhdGgsTT10PyJiaW5kIitqUXVlcnkuc2FwLmNoYXJUb1VwcGVyQ2FzZSh0KToiYmluZFByb3BlcnR5IixiPW0mJm1bTV0ocCksYT10aGlzO2lmKGIpe2IuYXR0YWNoQ2hhbmdlKGZ1bmN0aW9uKCl7alF1ZXJ5LnNhcC5sb2cuZGVidWcoIlRlbXBsYXRlQ29udHJvbCMiK2EuZ2V0SWQoKSsiOiAiK3QrIiBiaW5kaW5nIGNoYW5nZWQgZm9yIHBhdGggXCIiK3ArIlwiIik7YS5pbnZhbGlkYXRlKCl9KX10aGlzLl9hQmluZGluZ0luZm9zLnB1c2goe2JpbmRpbmc6YixwYXRoOlAucGF0aCxtb2RlbDpQLm1vZGVsfSk7cmV0dXJuIGJ9O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5iaW5kUHJvcD1mdW5jdGlvbihwKXt2YXIgYj10aGlzLmJpbmQocCwicHJvcGVydHkiKTtyZXR1cm4gYiYmYi5nZXRFeHRlcm5hbFZhbHVlKCl9O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5iaW5kTGlzdD1mdW5jdGlvbihwKXt2YXIgYj10aGlzLmJpbmQocCwibGlzdCIpLG09YiYmYi5nZXRNb2RlbCgpLHA9YiYmYi5nZXRQYXRoKCk7cmV0dXJuIGImJm0uZ2V0UHJvcGVydHkocCl9O3NhcC51aS5jb3JlLnRtcGwuVGVtcGxhdGVDb250cm9sLnByb3RvdHlwZS5jcmVhdGVET01FbGVtZW50PWZ1bmN0aW9uKHMscCxkKXt2YXIgZT1uZXcgc2FwLnVpLmNvcmUudG1wbC5ET01FbGVtZW50KHMpO2lmKHApe2UuYmluZEVsZW1lbnQocCl9aWYoIWQpe3RoaXMuYWRkQWdncmVnYXRpb24oImNvbnRyb2xzIixlKX1yZXR1cm4gZX07c2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2wucHJvdG90eXBlLmNyZWF0ZUNvbnRyb2w9ZnVuY3Rpb24ocyxwLGQsdil7dmFyIGg9e307alF1ZXJ5LmVhY2gocyxmdW5jdGlvbihrLFYpe2hbImRhdGEtIitqUXVlcnkuc2FwLmh5cGhlbihrKV09Vn0pO3ZhciAkPWpRdWVyeSgiPGRpdi8+IixoKTt2YXIgYz1zYXAudWkuY29yZS5EZWNsYXJhdGl2ZVN1cHBvcnQuX2NyZWF0ZUNvbnRyb2woJC5nZXQoMCksdik7aWYocCl7Yy5iaW5kRWxlbWVudChwKX1pZighZCl7dGhpcy5hZGRBZ2dyZWdhdGlvbigiY29udHJvbHMiLGMpfXJldHVybiBjfTtyZXR1cm4gc2FwLnVpLmNvcmUudG1wbC5UZW1wbGF0ZUNvbnRyb2x9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5CdXN5SW5kaWNhdG9yJykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuQnVzeUluZGljYXRvcicpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0J1c3lJbmRpY2F0b3IiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL1BvcHVwJ10sZnVuY3Rpb24ocSxQKXsidXNlIHN0cmljdCI7dmFyIEI9cS5leHRlbmQocS5zYXAubmV3T2JqZWN0KHNhcC51aS5iYXNlLkV2ZW50UHJvdmlkZXIucHJvdG90eXBlKSx7b1BvcHVwOm51bGwsb0RvbVJlZjpudWxsLGJPcGVuUmVxdWVzdGVkOmZhbHNlLGlERUZBVUxUX0RFTEFZX01TOjEwMDAsc0RPTV9JRDoic2FwVWlCdXN5SW5kaWNhdG9yIn0pO3NhcC51aS5iYXNlLkV2ZW50UHJvdmlkZXIuYXBwbHkoQik7Qi5NX0VWRU5UUz17T3BlbjoiT3BlbiIsQ2xvc2U6IkNsb3NlIn07Qi5faW5pdD1mdW5jdGlvbigpe3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3IuaWQ9dGhpcy5zRE9NX0lEO3ZhciBpPXNhcC51aS5nZXRDb3JlKCkuZ2V0U3RhdGljQXJlYVJlZigpO2kuYXBwZW5kQ2hpbGQocik7cShyKS5hZGRDbGFzcygic2FwVWlCdXN5IikuYXR0cigidGFiaW5kZXgiLDApLmF0dHIoInJvbGUiLCJwcm9ncmVzc2JhciIpLmF0dHIoImFsdCIsIiIpLmF0dHIoInRpdGxlIiwiUGxlYXNlIFdhaXQiKTt0aGlzLm9Eb21SZWY9cjt0aGlzLm9Qb3B1cD1uZXcgUChyKTt0aGlzLm9Qb3B1cC5zZXRNb2RhbCh0cnVlLCJzYXBVaUJseUJ1c3kiKTt0aGlzLm9Qb3B1cC5zZXRTaGFkb3coZmFsc2UpfTtCLnNob3c9ZnVuY3Rpb24oZCl7cS5zYXAubG9nLmRlYnVnKCJzYXAudWkuY29yZS5CdXN5SW5kaWNhdG9yLnNob3cgKGRlbGF5OiAiK2QrIikgYXQgIituZXcgRGF0ZSgpLmdldFRpbWUoKSk7aWYoKGQ9PT11bmRlZmluZWQpfHwoKGQhPTApJiYocGFyc2VJbnQoZCwxMCk9PTApKXx8KHBhcnNlSW50KGQsMTApPDApKXtkPXRoaXMuaURFRkFVTFRfREVMQVlfTVN9dGhpcy5iT3BlblJlcXVlc3RlZD10cnVlO2lmKGQ9PT0wKXt0aGlzLl9zaG93Tm93SWZSZXF1ZXN0ZWQoKX1lbHNle3Euc2FwLmRlbGF5ZWRDYWxsKGQsdGhpcywiX3Nob3dOb3dJZlJlcXVlc3RlZCIpfX07Qi5fc2hvd05vd0lmUmVxdWVzdGVkPWZ1bmN0aW9uKCl7cS5zYXAubG9nLmRlYnVnKCJzYXAudWkuY29yZS5CdXN5SW5kaWNhdG9yLl9zaG93Tm93SWZSZXF1ZXN0ZWQgKGJPcGVuUmVxdWVzdGVkOiAiK3RoaXMuYk9wZW5SZXF1ZXN0ZWQrIikgYXQgIituZXcgRGF0ZSgpLmdldFRpbWUoKSk7aWYoIXRoaXMuYk9wZW5SZXF1ZXN0ZWQpe3JldHVybn1pZighZG9jdW1lbnQuYm9keXx8IXNhcC51aS5nZXRDb3JlKCkuaXNJbml0aWFsaXplZCgpKXtxLnNhcC5kZWxheWVkQ2FsbCgxMDAsdGhpcywiX3Nob3dOb3dJZlJlcXVlc3RlZCIpO3JldHVybn10aGlzLmJPcGVuUmVxdWVzdGVkPWZhbHNlO2lmKCF0aGlzLm9Eb21SZWYpe3RoaXMuX2luaXQoKX10aGlzLm9Qb3B1cC5vcGVuKDAsUC5Eb2NrLkNlbnRlckNlbnRlcixQLkRvY2suQ2VudGVyQ2VudGVyLGRvY3VtZW50KTt0aGlzLmZpcmVPcGVuKHskQnVzeTp0aGlzLm9Qb3B1cC5fJCgpfSk7dmFyIGQ9cS5zYXAuZG9tQnlJZChCLnNET01fSUQpO3Euc2FwLmZvY3VzKGQpO3EoImJvZHkiKS5hdHRyKCJhcmlhLWJ1c3kiLHRydWUpfTtCLmhpZGU9ZnVuY3Rpb24oKXtxLnNhcC5sb2cuZGVidWcoInNhcC51aS5jb3JlLkJ1c3lJbmRpY2F0b3IuaGlkZSBhdCAiK25ldyBEYXRlKCkuZ2V0VGltZSgpKTt2YXIgdD1CO3QuYk9wZW5SZXF1ZXN0ZWQ9ZmFsc2U7aWYodC5vRG9tUmVmKXtxKCJib2R5IikucmVtb3ZlQXR0cigiYXJpYS1idXN5Iik7dGhpcy5maXJlQ2xvc2UoeyRCdXN5OnRoaXMub1BvcHVwLl8kKCl9KTt0Lm9Qb3B1cC5jbG9zZSgwKX19O0IuYXR0YWNoT3Blbj1mdW5jdGlvbihmLGwpe3RoaXMuYXR0YWNoRXZlbnQoQi5NX0VWRU5UUy5PcGVuLGYsbCk7cmV0dXJuIHRoaXN9O0IuZGV0YWNoT3Blbj1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoQi5NX0VWRU5UUy5PcGVuLGYsbCk7cmV0dXJuIHRoaXN9O0IuYXR0YWNoQ2xvc2U9ZnVuY3Rpb24oZixsKXt0aGlzLmF0dGFjaEV2ZW50KEIuTV9FVkVOVFMuQ2xvc2UsZixsKTtyZXR1cm4gdGhpc307Qi5kZXRhY2hDbG9zZT1mdW5jdGlvbihmLGwpe3RoaXMuZGV0YWNoRXZlbnQoQi5NX0VWRU5UUy5DbG9zZSxmLGwpO3JldHVybiB0aGlzfTtCLmZpcmVPcGVuPWZ1bmN0aW9uKHApe3RoaXMuZmlyZUV2ZW50KEIuTV9FVkVOVFMuT3BlbixwKX07Qi5maXJlQ2xvc2U9ZnVuY3Rpb24ocCl7dGhpcy5maXJlRXZlbnQoQi5NX0VWRU5UUy5DbG9zZSxwKX07cmV0dXJuIEJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXInKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXInKTtzYXAudWkuZGVmaW5lKCJzYXAvdWkvY29yZS9Db21wb25lbnRDb250YWluZXIiLFsnLi9saWJyYXJ5JywnLi9Db250cm9sJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUuQ29udHJvbC5leHRlbmQoInNhcC51aS5jb3JlLkNvbXBvbmVudENvbnRhaW5lciIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSIscHJvcGVydGllczp7Im5hbWUiOnt0eXBlOiJzdHJpbmciLGdyb3VwOiIiLGRlZmF1bHRWYWx1ZTpudWxsfSwidXJsIjp7dHlwZToic2FwLnVpLmNvcmUuVVJJIixncm91cDoiIixkZWZhdWx0VmFsdWU6bnVsbH0sInNldHRpbmdzIjp7dHlwZToib2JqZWN0Iixncm91cDoiIixkZWZhdWx0VmFsdWU6bnVsbH0sInByb3BhZ2F0ZU1vZGVsIjp7dHlwZToiYm9vbGVhbiIsZ3JvdXA6IiIsZGVmYXVsdFZhbHVlOmZhbHNlfSwid2lkdGgiOnt0eXBlOiJzYXAudWkuY29yZS5DU1NTaXplIixncm91cDoiRGltZW5zaW9uIixkZWZhdWx0VmFsdWU6bnVsbH0sImhlaWdodCI6e3R5cGU6InNhcC51aS5jb3JlLkNTU1NpemUiLGdyb3VwOiJEaW1lbnNpb24iLGRlZmF1bHRWYWx1ZTpudWxsfX0sYXNzb2NpYXRpb25zOnsiY29tcG9uZW50Ijp7dHlwZToic2FwLnVpLmNvcmUuVUlDb21wb25lbnQiLG11bHRpcGxlOmZhbHNlfX19fSk7c2FwLnVpLmNvcmUuQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5nZXRDb21wb25lbnRJbnN0YW5jZT1mdW5jdGlvbigpe3ZhciBjPXRoaXMuZ2V0Q29tcG9uZW50KCk7cmV0dXJuIHNhcC51aS5nZXRDb3JlKCkuZ2V0Q29tcG9uZW50KGMpfTtzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXIucHJvdG90eXBlLnNldENvbXBvbmVudD1mdW5jdGlvbihjKXt2YXIgbz10aGlzLmdldENvbXBvbmVudEluc3RhbmNlKCk7aWYobyl7by5zZXRDb250YWluZXIodW5kZWZpbmVkKX10aGlzLnNldEFzc29jaWF0aW9uKCJjb21wb25lbnQiLGMpO2M9dGhpcy5nZXRDb21wb25lbnRJbnN0YW5jZSgpO2lmKGMpe2Muc2V0Q29udGFpbmVyKHRoaXMpO3RoaXMucHJvcGFnYXRlUHJvcGVydGllcygpfX07c2FwLnVpLmNvcmUuQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5vbkJlZm9yZVJlbmRlcmluZz1mdW5jdGlvbigpe3ZhciBjPXRoaXMuZ2V0Q29tcG9uZW50SW5zdGFuY2UoKTtpZighYyl7dmFyIG49dGhpcy5nZXROYW1lKCk7aWYobil7Yz1zYXAudWkuY29tcG9uZW50KHtuYW1lOm4sdXJsOnRoaXMuZ2V0VXJsKCksc2V0dGluZ3M6dGhpcy5nZXRTZXR0aW5ncygpfSk7dGhpcy5zZXRDb21wb25lbnQoYyl9fWlmKGMmJmMub25CZWZvcmVSZW5kZXJpbmcpe2Mub25CZWZvcmVSZW5kZXJpbmcoKX19O3NhcC51aS5jb3JlLkNvbXBvbmVudENvbnRhaW5lci5wcm90b3R5cGUub25BZnRlclJlbmRlcmluZz1mdW5jdGlvbigpe3ZhciBjPXRoaXMuZ2V0Q29tcG9uZW50SW5zdGFuY2UoKTtpZihjJiZjLm9uQWZ0ZXJSZW5kZXJpbmcpe2Mub25BZnRlclJlbmRlcmluZygpfX07c2FwLnVpLmNvcmUuQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5leGl0PWZ1bmN0aW9uKCl7dmFyIGM9dGhpcy5nZXRDb21wb25lbnRJbnN0YW5jZSgpO2lmKGMpe2MuZGVzdHJveSgpfX07c2FwLnVpLmNvcmUuQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5wcm9wYWdhdGVQcm9wZXJ0aWVzPWZ1bmN0aW9uKG4pe3ZhciBjPXRoaXMuZ2V0Q29tcG9uZW50SW5zdGFuY2UoKTtpZihjJiZ0aGlzLmdldFByb3BhZ2F0ZU1vZGVsKCkpe3RoaXMuX3Byb3BhZ2F0ZVByb3BlcnRpZXMobixjKTtzYXAudWkuY29yZS5Db250cm9sLnByb3RvdHlwZS5wcm9wYWdhdGVQcm9wZXJ0aWVzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19O3JldHVybiBzYXAudWkuY29yZS5Db21wb25lbnRDb250YWluZXJ9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5Db21wb3NpdGVTdXBwb3J0Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUuQ29tcG9zaXRlU3VwcG9ydCcpO3NhcC51aS5kZWZpbmUoInNhcC91aS9jb3JlL0NvbXBvc2l0ZVN1cHBvcnQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0NvbnRyb2wnLCdzYXAvdWkvbW9kZWwvY29udHJvbC9Db250cm9sTW9kZWwnXSxmdW5jdGlvbihxLEMsYSl7InVzZSBzdHJpY3QiO3ZhciBiPXt9O2IubWl4SW50bz1mdW5jdGlvbihjLGYsbSl7aWYoYXJndW1lbnRzLmxlbmd0aD09MiYmdHlwZW9mIGY9PT0ib2JqZWN0Iil7bT1mO2Y9IkNvbXBvbmVudEZhY3RvcnkifWZ1bmN0aW9uIF8oKXt2YXIgTT1jLmdldE1ldGFkYXRhKCk7ZG97TT1NLmdldFBhcmVudCgpO2lmKE0mJk0uZ2V0Q29tcG9uZW50RmFjdG9yeUNsYXNzKXtyZXR1cm4gTS5nZXRDb21wb25lbnRGYWN0b3J5Q2xhc3MoKX19d2hpbGUoTSk7cmV0dXJuIHNhcC51aS5jb3JlLkNvbXBvbmVudEZhY3Rvcnl9Y1tmXT0oXygpKS5zdWJjbGFzcyhtKTtjLmdldE1ldGFkYXRhKCkuZ2V0Q29tcG9uZW50RmFjdG9yeUNsYXNzPXEuc2FwLmdldHRlcihjW2ZdKTtpZighYy5wcm90b3R5cGUuX2luaXRDb21wb3NpdGVTdXBwb3J0KXtjLnByb3RvdHlwZS5faW5pdENvbXBvc2l0ZVN1cHBvcnQ9ZnVuY3Rpb24ocyl7dmFyIEY9bmV3KHRoaXMuZ2V0TWV0YWRhdGEoKS5nZXRDb21wb25lbnRGYWN0b3J5Q2xhc3MoKSkodGhpcyk7aWYocy5jb21wb25lbnRGYWN0b3J5KXtGLmN1c3RvbWl6ZShzLmNvbXBvbmVudEZhY3RvcnkpO2RlbGV0ZSBzLmNvbXBvbmVudEZhY3Rvcnl9dGhpcy5nZXRDb21wb25lbnRGYWN0b3J5PXEuc2FwLmdldHRlcihGKX19aWYoIWMucHJvdG90eXBlLl9leGl0Q29tcG9zaXRlU3VwcG9ydCl7Yy5wcm90b3R5cGUuX2V4aXRDb21wb3NpdGVTdXBwb3J0PWZ1bmN0aW9uKCl7dGhpcy5nZXRDb21wb25lbnRGYWN0b3J5KCkuZGVzdHJveSgpO2RlbGV0ZSB0aGlzLmdldENvbXBvbmVudEZhY3Rvcnl9fX07c2FwLnVpLmJhc2UuRXZlbnRQcm92aWRlci5leHRlbmQoInNhcC51aS5jb3JlLkNvbXBvbmVudEZhY3RvcnkiLHtjb25zdHJ1Y3RvcjpmdW5jdGlvbihjKXtzYXAudWkuYmFzZS5FdmVudFByb3ZpZGVyLmFwcGx5KHRoaXMpO3RoaXMub0NvbXBvc2l0ZT1jO3JldHVybiB0aGlzfX0pO3NhcC51aS5jb3JlLkNvbXBvbmVudEZhY3RvcnkucHJvdG90eXBlLmF0dGFjaENoYW5nZT1mdW5jdGlvbihmLG8pe3RoaXMuZ2V0TW9kZWwoKTt0aGlzLmF0dGFjaEV2ZW50KCJjaGFuZ2UiLGYsbyk7cmV0dXJuIHRoaXN9O3NhcC51aS5jb3JlLkNvbXBvbmVudEZhY3RvcnkucHJvdG90eXBlLmRldGFjaENoYW5nZT1mdW5jdGlvbihmLG8pe3RoaXMuZ2V0TW9kZWwoKTt0aGlzLmRldGFjaEV2ZW50KCJjaGFuZ2UiLGYsbyk7cmV0dXJuIHRoaXN9O3NhcC51aS5jb3JlLkNvbXBvbmVudEZhY3RvcnkucHJvdG90eXBlLmdldE1vZGVsPWZ1bmN0aW9uKCl7aWYoIXRoaXMub01vZGVsKXt2YXIgdD10aGlzO3RoaXMub01vZGVsPW5ldyBhKHRoaXMub0NvbXBvc2l0ZSk7dGhpcy5vTW9kZWwuX29uY2hhbmdlPWZ1bmN0aW9uKGUpe3QuZmlyZUV2ZW50KCJjaGFuZ2UiLGUuZ2V0UGFyYW1ldGVycyYmZS5nZXRQYXJhbWV0ZXJzKCkpfX1yZXR1cm4gdGhpcy5vTW9kZWx9O3NhcC51aS5jb3JlLkNvbXBvbmVudEZhY3RvcnkucHJvdG90eXBlLmFkZEZhY2FkZUNvbXBvbmVudD1mdW5jdGlvbihlKXt0aGlzLmdldE1vZGVsKCkuYWRkKGUpfTtzYXAudWkuY29yZS5Db21wb25lbnRGYWN0b3J5LnByb3RvdHlwZS5yZW1vdmVGYWNhZGVDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dGhpcy5nZXRNb2RlbCgpLnJlbW92ZShlKX07KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gXyhvLG0sZCl7cS5lYWNoKG0sZnVuY3Rpb24obixmKXtpZihuLmluZGV4T2YoImRlZmF1bHQiKSE9MCl7b1tuXT1mfWlmKGQmJm4uaW5kZXhPZigiY3JlYXRlIik9PTApe29bImRlZmF1bHRDIituLnN1YnN0cmluZygxKV09b1tuXX19KX1mdW5jdGlvbiBjKEIpe3JldHVybiBmdW5jdGlvbihtKXt2YXIgZj1mdW5jdGlvbigpe0IuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtmLnByb3RvdHlwZT1xLnNhcC5uZXdPYmplY3QoQi5wcm90b3R5cGUpO18oZi5wcm90b3R5cGUsbSx0cnVlKTtmLmN1c3RvbWl6ZT1mdW5jdGlvbihtKXtfKGYucHJvdG90eXBlLG0pO3JldHVybiB0aGlzfTtmLnN1YmNsYXNzPWMoZik7cmV0dXJuIGZ9fXNhcC51aS5jb3JlLkNvbXBvbmVudEZhY3Rvcnkuc3ViY2xhc3M9YyhzYXAudWkuY29yZS5Db21wb25lbnRGYWN0b3J5KTtzYXAudWkuY29yZS5Db21wb25lbnRGYWN0b3J5LnByb3RvdHlwZS5jdXN0b21pemU9ZnVuY3Rpb24obSl7Xyh0aGlzLG0pO2lmKHRoaXMub0NvbXBvc2l0ZSYmdGhpcy5vQ29tcG9zaXRlLl9vbkNvbXBvbmVudEZhY3RvcnlDaGFuZ2VkKXt0aGlzLm9Db21wb3NpdGUuX29uQ29tcG9uZW50RmFjdG9yeUNoYW5nZWQoKX1yZXR1cm4gdGhpc319KCkpO3JldHVybiBifSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUuVUlDb21wb25lbnQnKSl7DQovKgogKiBTQVAgVUkgZGV2ZWxvcG1lbnQgdG9vbGtpdCBmb3IgSFRNTDUgKFNBUFVJNS9PcGVuVUk1KQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiAKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAtIHNlZSBMSUNFTlNFLnR4dC4KICovDQpqUXVlcnkuc2FwLmRlY2xhcmUoJ3NhcC51aS5jb3JlLlVJQ29tcG9uZW50Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvVUlDb21wb25lbnQiLFsnanF1ZXJ5LnNhcC5nbG9iYWwnLCcuL0NvbXBvbmVudCcsJy4vVUlDb21wb25lbnRNZXRhZGF0YScsJy4vbXZjL1ZpZXcnXSxmdW5jdGlvbihxLEMsVSxWKXsidXNlIHN0cmljdCI7dmFyIGE9Qy5leHRlbmQoInNhcC51aS5jb3JlLlVJQ29tcG9uZW50Iix7Y29uc3RydWN0b3I6ZnVuY3Rpb24oaSxzKXt0cnl7Qy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2goZSl7aWYodGhpcy5fb1JvdXRlcil7dGhpcy5fb1JvdXRlci5kZXN0cm95KCl9dGhyb3cgZX19LG1ldGFkYXRhOnsiYWJzdHJhY3QiOnRydWUscm9vdFZpZXc6bnVsbCxwdWJsaWNNZXRob2RzOlsicmVuZGVyIl0sYWdncmVnYXRpb25zOnsicm9vdENvbnRyb2wiOnt0eXBlOiJzYXAudWkuY29yZS5Db250cm9sIixtdWx0aXBsZTpmYWxzZSx2aXNpYmlsaXR5OiJoaWRkZW4ifX0scm91dGluZzp7fX19LFUpO2EucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3ZhciBwPXt9O2lmKHRoaXMuZ2V0QXV0b1ByZWZpeElkKCkpe3AuaWQ9ZnVuY3Rpb24oaSl7cmV0dXJuIHQuY3JlYXRlSWQoaSl9fXZhciBtPXRoaXMuZ2V0TWV0YWRhdGEoKTt2YXIgcj1xLmV4dGVuZCh7fSxtLmdldFJvdXRpbmdDb25maWcoKSk7dmFyIFI9bS5nZXRSb3V0ZXMoKTtpZihSKXtxLnNhcC5yZXF1aXJlKCJzYXAudWkuY29yZS5yb3V0aW5nLlJvdXRlciIpO3RoaXMuX29Sb3V0ZXI9bmV3IHNhcC51aS5jb3JlLnJvdXRpbmcuUm91dGVyKFIscix0aGlzKX1zYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LnJ1bldpdGhPd25lcihmdW5jdGlvbigpe3NhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QucnVuV2l0aFByZXByb2Nlc3NvcnMoZnVuY3Rpb24oKXt0LnNldEFnZ3JlZ2F0aW9uKCJyb290Q29udHJvbCIsdC5jcmVhdGVDb250ZW50KCkpfSxwKX0sdGhpcyk7dmFyIG89dGhpcy5nZXRBZ2dyZWdhdGlvbigicm9vdENvbnRyb2wiKTtpZihvIGluc3RhbmNlb2YgVil7aWYoci50YXJnZXRQYXJlbnQ9PT11bmRlZmluZWQpe3IudGFyZ2V0UGFyZW50PW8uZ2V0SWQoKX19fTthLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7aWYodGhpcy5fb1JvdXRlcil7dGhpcy5fb1JvdXRlci5kZXN0cm95KCk7ZGVsZXRlIHRoaXMuX29Sb3V0ZXJ9Qy5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2EuZ2V0Um91dGVyRm9yPWZ1bmN0aW9uKGMpe3ZhciB2PWM7aWYodiBpbnN0YW5jZW9mIHNhcC51aS5jb3JlLm12Yy5Db250cm9sbGVyKXt2PXYuZ2V0VmlldygpfWlmKHYgaW5zdGFuY2VvZiBWKXt2YXIgbz1DLmdldE93bmVySWRGb3IodiksYj1zYXAudWkuY29tcG9uZW50KG8pO2lmKGIpe3JldHVybiBiLmdldFJvdXRlcigpfWVsc2V7cmV0dXJuIHVuZGVmaW5lZH19fTthLnByb3RvdHlwZS5nZXRSb3V0ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb1JvdXRlcn07YS5wcm90b3R5cGUuZ2V0QXV0b1ByZWZpeElkPWZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlfTthLnByb3RvdHlwZS5ieUlkPWZ1bmN0aW9uKGkpe3JldHVybiBzYXAudWkuZ2V0Q29yZSgpLmJ5SWQodGhpcy5jcmVhdGVJZChpKSl9O2EucHJvdG90eXBlLmNyZWF0ZUlkPWZ1bmN0aW9uKGkpe2lmKCF0aGlzLmlzUHJlZml4ZWRJZChpKSl7aT10aGlzLmdldElkKCkrIi0tLSIraX1yZXR1cm4gaX07YS5wcm90b3R5cGUuaXNQcmVmaXhlZElkPWZ1bmN0aW9uKGkpe3JldHVybihpJiZpLmluZGV4T2YodGhpcy5nZXRJZCgpKyItLS0iKT09PTApfTthLnByb3RvdHlwZS5jcmVhdGVDb250ZW50PWZ1bmN0aW9uKCl7dmFyIHI9dGhpcy5nZXRNZXRhZGF0YSgpLmdldFJvb3RWaWV3KCk7aWYocil7cmV0dXJuIHNhcC51aS52aWV3KHIpfXJldHVybiBudWxsfTthLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24ocil7dmFyIGM9dGhpcy5nZXRBZ2dyZWdhdGlvbigicm9vdENvbnRyb2wiKTtpZihjJiZyKXtyLnJlbmRlckNvbnRyb2woYyl9fTthLnByb3RvdHlwZS5nZXRVSUFyZWE9ZnVuY3Rpb24oKXtyZXR1cm4odGhpcy5vQ29udGFpbmVyP3RoaXMub0NvbnRhaW5lci5nZXRVSUFyZWEoKTpudWxsKX07YS5wcm90b3R5cGUuZ2V0RXZlbnRpbmdQYXJlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRVSUFyZWEoKX07YS5wcm90b3R5cGUuc2V0Q29udGFpbmVyPWZ1bmN0aW9uKGMpe3RoaXMub0NvbnRhaW5lcj1jO3JldHVybiB0aGlzfTthLnByb3RvdHlwZS5vbkJlZm9yZVJlbmRlcmluZz1mdW5jdGlvbigpe307YS5wcm90b3R5cGUub25BZnRlclJlbmRlcmluZz1mdW5jdGlvbigpe307cmV0dXJuIGF9LHRydWUpfTtpZighalF1ZXJ5LnNhcC5pc0RlY2xhcmVkKCdzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcnKSl7DQovKiENCiAqIFNBUCBVSSBkZXZlbG9wbWVudCB0b29sa2l0IGZvciBIVE1MNSAoU0FQVUk1L09wZW5VSTUpDQogKiAoYykgQ29weXJpZ2h0IDIwMDktMjAxNCBTQVAgQUcgb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiANCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgLSBzZWUgTElDRU5TRS50eHQuDQogKi8NCmpRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL0hUTUxWaWV3IixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCcuL1ZpZXcnLCdzYXAvdWkvY29yZS9EZWNsYXJhdGl2ZVN1cHBvcnQnLCdzYXAvdWkvY29yZS9SZW5kZXJNYW5hZ2VyJ10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUubXZjLlZpZXcuZXh0ZW5kKCJzYXAudWkuY29yZS5tdmMuSFRNTFZpZXciLHttZXRhZGF0YTp7bGlicmFyeToic2FwLnVpLmNvcmUifX0pO3NhcC51aS5odG1sdmlldz1mdW5jdGlvbihpLHYpe3JldHVybiBzYXAudWkudmlldyhpLHYsc2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLkhUTUwpfTtzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcuX3NUeXBlPXNhcC51aS5jb3JlLm12Yy5WaWV3VHlwZS5IVE1MO3NhcC51aS5jb3JlLm12Yy5IVE1MVmlldy5fbVRlbXBsYXRlcz17fTtzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcuX21BbGxvd2VkU2V0dGluZ3M9eyJ2aWV3TmFtZSI6dHJ1ZSwiY29udHJvbGxlciI6dHJ1ZSwidmlld0NvbnRlbnQiOnRydWUsImNvbnRyb2xsZXJOYW1lIjp0cnVlLCJyZXNvdXJjZUJ1bmRsZU5hbWUiOnRydWUsInJlc291cmNlQnVuZGxlVXJsIjp0cnVlLCJyZXNvdXJjZUJ1bmRsZUxvY2FsZSI6dHJ1ZSwicmVzb3VyY2VCdW5kbGVBbGlhcyI6dHJ1ZX07c2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3Ll9nZXRUZW1wbGF0ZT1mdW5jdGlvbih0KXt2YXIgdT10aGlzLl9nZXRWaWV3VXJsKHQpO3ZhciBoPXRoaXMuX21UZW1wbGF0ZXNbdV07aWYoIWgpe2g9dGhpcy5fbG9hZFRlbXBsYXRlKHQpO3RoaXMuX21UZW1wbGF0ZXNbdV09aH1yZXR1cm4gaH07c2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3LnByb3RvdHlwZS5nZXRDb250cm9sbGVyTmFtZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250cm9sbGVyTmFtZX07c2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3Ll9nZXRWaWV3VXJsPWZ1bmN0aW9uKHQpe3JldHVybiBqUXVlcnkuc2FwLmdldE1vZHVsZVBhdGgodCwiLnZpZXcuaHRtbCIpfTtzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcuX2xvYWRUZW1wbGF0ZT1mdW5jdGlvbih0KXt2YXIgcj1qUXVlcnkuc2FwLmdldFJlc291cmNlTmFtZSh0LCIudmlldy5odG1sIik7cmV0dXJuIGpRdWVyeS5zYXAubG9hZFJlc291cmNlKHIpfTtzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcucHJvdG90eXBlLmluaXRWaWV3U2V0dGluZ3M9ZnVuY3Rpb24ocyl7aWYoIXMpe3Rocm93IG5ldyBFcnJvcigibVNldHRpbmdzIG11c3QgYmUgZ2l2ZW4iKX1pZihzLnZpZXdOYW1lJiZzLnZpZXdDb250ZW50KXt0aHJvdyBuZXcgRXJyb3IoIlZpZXcgbmFtZSBhbmQgdmlldyBjb250ZW50IGFyZSBnaXZlbi4gVGhlcmUgaXMgbm8gcG9pbnQgaW4gZG9pbmcgdGhpcywgc28gcGxlYXNlIGRlY2lkZS4iKX1lbHNlIGlmKCFzLnZpZXdOYW1lJiYhcy52aWV3Q29udGVudCl7dGhyb3cgbmV3IEVycm9yKCJOZWl0aGVyIHZpZXcgbmFtZSBub3IgdmlldyBjb250ZW50IGlzIGdpdmVuLiBPbmUgb2YgdGhlbSBpcyByZXF1aXJlZC4iKX12YXIgaD1zLnZpZXdDb250ZW50fHxzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcuX2dldFRlbXBsYXRlKHMudmlld05hbWUpO3RoaXMuX29UZW1wbGF0ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt2YXIgaD1zYXAudWkuY29yZS5SZW5kZXJNYW5hZ2VyLnByZXBhcmVIVE1MNShoKTtpZih0eXBlb2YgaD09PSJzdHJpbmciKXt0aGlzLl9vVGVtcGxhdGUuaW5uZXJIVE1MPWh9ZWxzZXt2YXIgbj1oO3ZhciBmPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7Zi5hcHBlbmRDaGlsZChuLml0ZW0oaSkpfXRoaXMuX29UZW1wbGF0ZS5hcHBlbmRDaGlsZChmKX12YXIgbT10aGlzLl9vVGVtcGxhdGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRlbXBsYXRlIilbMF07dmFyIHA9dGhpcy5nZXRNZXRhZGF0YSgpLmdldEFsbFByb3BlcnRpZXMoKTtpZihtKXt2YXIgYT10aGlzO3ZhciBEPXNhcC51aS5jb3JlLkRlY2xhcmF0aXZlU3VwcG9ydDtqUXVlcnkuZWFjaChtLmF0dHJpYnV0ZXMsZnVuY3Rpb24oSSxBKXt2YXIgTj1ELmNvbnZlcnRBdHRyaWJ1dGVUb1NldHRpbmdOYW1lKEEubmFtZSxhLmdldElkKCkpO3ZhciB2PUEudmFsdWU7dmFyIFA9cFtOXTtpZighc1tOXSl7aWYoUCl7c1tOXT1ELmNvbnZlcnRWYWx1ZVRvVHlwZShELmdldFByb3BlcnR5RGF0YVR5cGUoUCksdil9ZWxzZSBpZihzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcuX21BbGxvd2VkU2V0dGluZ3NbTl0pe3NbTl09dn19fSk7dGhpcy5fb1RlbXBsYXRlPW19aWYodGhpcy5fb1RlbXBsYXRlLmNvbnRlbnQpe3ZhciBmPXRoaXMuX29UZW1wbGF0ZS5jb250ZW50O3RoaXMuX29UZW1wbGF0ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt0aGlzLl9vVGVtcGxhdGUuYXBwZW5kQ2hpbGQoZil9aWYocy5jb250cm9sbGVyTmFtZSl7dGhpcy5fY29udHJvbGxlck5hbWU9cy5jb250cm9sbGVyTmFtZX1pZigocy5yZXNvdXJjZUJ1bmRsZU5hbWV8fHMucmVzb3VyY2VCdW5kbGVVcmwpJiYoIXMubW9kZWxzfHwhcy5tb2RlbHNbcy5yZXNvdXJjZUJ1bmRsZUFsaWFzXSkpe3ZhciBiPW5ldyBzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VNb2RlbCh7YnVuZGxlTmFtZTpzLnJlc291cmNlQnVuZGxlTmFtZSxidW5kbGVVcmw6cy5yZXNvdXJjZUJ1bmRsZVVybCxidW5kbGVMb2NhbGU6cy5yZXNvdXJjZUJ1bmRsZUxvY2FsZX0pO3RoaXMuc2V0TW9kZWwoYixzLnJlc291cmNlQnVuZGxlQWxpYXMpfX07c2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3LnByb3RvdHlwZS5vbkNvbnRyb2xsZXJDb25uZWN0ZWQ9ZnVuY3Rpb24oYyl7dmFyIHM9dGhpcztzYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LnJ1bldpdGhQcmVwcm9jZXNzb3JzKGZ1bmN0aW9uKCl7c2FwLnVpLmNvcmUuRGVjbGFyYXRpdmVTdXBwb3J0LmNvbXBpbGUocy5fb1RlbXBsYXRlLHMpfSl9O3NhcC51aS5jb3JlLm12Yy5IVE1MVmlldy5wcm90b3R5cGUuZXhpdD1mdW5jdGlvbigpe3RoaXMuX29UZW1wbGF0ZT1udWxsO3NhcC51aS5jb3JlLm12Yy5WaWV3LnByb3RvdHlwZS5leGl0LmNhbGwodGhpcyk7aWYodGhpcy5fY29ubmVjdGVkQ29udHJvbHMpe2Zvcih2YXIgaT0wO2k8dGhpcy5fY29ubmVjdGVkQ29udHJvbHMubGVuZ3RoO2krKyl7dGhpcy5fY29ubmVjdGVkQ29udHJvbHNbaV0uZGVzdHJveSgpfXRoaXMuX2Nvbm5lY3RlZENvbnRyb2xzPW51bGx9fTtzYXAudWkuY29yZS5tdmMuSFRNTFZpZXcucHJvdG90eXBlLmNvbm5lY3RDb250cm9sPWZ1bmN0aW9uKGMpe3RoaXMuX2Nvbm5lY3RlZENvbnRyb2xzPXRoaXMuX2Nvbm5lY3RlZENvbnRyb2xzfHxbXTt0aGlzLl9jb25uZWN0ZWRDb250cm9scy5wdXNoKGMpfTtyZXR1cm4gc2FwLnVpLmNvcmUubXZjLkhUTUxWaWV3fSx0cnVlKX07aWYoIWpRdWVyeS5zYXAuaXNEZWNsYXJlZCgnc2FwLnVpLmNvcmUubXZjLkpTT05WaWV3Jykpe2pRdWVyeS5zYXAuZGVjbGFyZSgnc2FwLnVpLmNvcmUubXZjLkpTT05WaWV3Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL0pTT05WaWV3IixbJ3NhcC91aS9jb3JlL2xpYnJhcnknLCcuL1ZpZXcnXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtzYXAudWkuY29yZS5tdmMuVmlldy5leHRlbmQoInNhcC51aS5jb3JlLm12Yy5KU09OVmlldyIse21ldGFkYXRhOntsaWJyYXJ5OiJzYXAudWkuY29yZSJ9fSk7KGZ1bmN0aW9uKCl7c2FwLnVpLmpzb252aWV3PWZ1bmN0aW9uKGksdil7cmV0dXJuIHNhcC51aS52aWV3KGksdixzYXAudWkuY29yZS5tdmMuVmlld1R5cGUuSlNPTil9O3NhcC51aS5jb3JlLm12Yy5KU09OVmlldy5fc1R5cGU9c2FwLnVpLmNvcmUubXZjLlZpZXdUeXBlLkpTT047c2FwLnVpLmNvcmUubXZjLkpTT05WaWV3LnByb3RvdHlwZS5pbml0Vmlld1NldHRpbmdzPWZ1bmN0aW9uKHMpe2lmKCFzKXt0aHJvdyBuZXcgRXJyb3IoIm1TZXR0aW5ncyBtdXN0IGJlIGdpdmVuIil9aWYocy52aWV3TmFtZSYmcy52aWV3Q29udGVudCl7dGhyb3cgbmV3IEVycm9yKCJWaWV3IG5hbWUgYW5kIHZpZXcgY29udGVudCBhcmUgZ2l2ZW4uIFRoZXJlIGlzIG5vIHBvaW50IGluIGRvaW5nIHRoaXMsIHNvIHBsZWFzZSBkZWNpZGUuIil9ZWxzZSBpZighcy52aWV3TmFtZSYmIXMudmlld0NvbnRlbnQpe3Rocm93IG5ldyBFcnJvcigiTmVpdGhlciB2aWV3IG5hbWUgbm9yIHZpZXcgY29udGVudCBpcyBnaXZlbi4gT25lIG9mIHRoZW0gaXMgcmVxdWlyZWQuIil9aWYocy52aWV3TmFtZSl7dGhpcy5fbG9hZFRlbXBsYXRlKHMudmlld05hbWUpfWVsc2UgaWYocy52aWV3Q29udGVudCl7dGhpcy5tUHJvcGVydGllc1sidmlld0NvbnRlbnQiXT1zLnZpZXdDb250ZW50O2lmKHR5cGVvZiBzLnZpZXdDb250ZW50PT09InN0cmluZyIpe3RoaXMuX29KU09OVmlldz1qUXVlcnkucGFyc2VKU09OKHMudmlld0NvbnRlbnQpO2lmKCF0aGlzLl9vSlNPTlZpZXcpe3Rocm93IG5ldyBFcnJvcigiZXJyb3Igd2hlbiBwYXJzaW5nIHZpZXdDb250ZW50OiAiK3Mudmlld0NvbnRlbnQpfX1lbHNlIGlmKHR5cGVvZiBzLnZpZXdDb250ZW50PT09Im9iamVjdCIpe3RoaXMuX29KU09OVmlldz1zLnZpZXdDb250ZW50fWVsc2V7dGhyb3cgbmV3IEVycm9yKCJ2aWV3Q29udGVudCBtdXN0IGJlIGEgSlNPTiBzdHJpbmcgb3Igb2JqZWN0LCBidXQgaXMgYSAiKyh0eXBlb2Ygcy52aWV3Q29udGVudCkpfX1lbHNle31pZigodGhpcy5fb0pTT05WaWV3LnJlc291cmNlQnVuZGxlTmFtZXx8dGhpcy5fb0pTT05WaWV3LnJlc291cmNlQnVuZGxlVXJsKSYmKCFzLm1vZGVsc3x8IXMubW9kZWxzW3RoaXMuX29KU09OVmlldy5yZXNvdXJjZUJ1bmRsZUFsaWFzXSkpe3ZhciBtPW5ldyBzYXAudWkubW9kZWwucmVzb3VyY2UuUmVzb3VyY2VNb2RlbCh7YnVuZGxlTmFtZTp0aGlzLl9vSlNPTlZpZXcucmVzb3VyY2VCdW5kbGVOYW1lLGJ1bmRsZVVybDp0aGlzLl9vSlNPTlZpZXcucmVzb3VyY2VCdW5kbGVVcmx9KTt0aGlzLnNldE1vZGVsKG0sdGhpcy5fb0pTT05WaWV3LnJlc291cmNlQnVuZGxlQWxpYXMpfX07c2FwLnVpLmNvcmUubXZjLkpTT05WaWV3LnByb3RvdHlwZS5vbkNvbnRyb2xsZXJDb25uZWN0ZWQ9ZnVuY3Rpb24oYyl7dmFyIHQ9dGhpcztzYXAudWkuYmFzZS5NYW5hZ2VkT2JqZWN0LnJ1bldpdGhQcmVwcm9jZXNzb3JzKGZ1bmN0aW9uKCl7dC5hcHBseVNldHRpbmdzKHtjb250ZW50OnQuX29KU09OVmlldy5jb250ZW50fSl9LHtpZDpmdW5jdGlvbihpKXtyZXR1cm4gdC5jcmVhdGVJZChpKX0sc2V0dGluZ3M6ZnVuY3Rpb24ocyl7dmFyIG09dGhpcy5nZXRNZXRhZGF0YSgpLHY9bS5nZXRKU09OS2V5cygpLGssVixLO2ZvcihrIGluIHMpe2lmKEs9dltrXSl7Vj1zW2tdO3N3aXRjaChLLl9pS2luZCl7Y2FzZSAzOnNba109dC5jcmVhdGVJZChWKTticmVhaztjYXNlIDU6aWYodHlwZW9mIHNba109PT0ic3RyaW5nIil7c1trXT1bY1tzW2tdXSxjXX1icmVha319fX19KX07c2FwLnVpLmNvcmUubXZjLkpTT05WaWV3LnByb3RvdHlwZS5fbG9hZFRlbXBsYXRlPWZ1bmN0aW9uKHQpe3ZhciByPWpRdWVyeS5zYXAuZ2V0UmVzb3VyY2VOYW1lKHQsIi52aWV3Lmpzb24iKTt0aGlzLl9vSlNPTlZpZXc9alF1ZXJ5LnNhcC5sb2FkUmVzb3VyY2Uocil9O3NhcC51aS5jb3JlLm12Yy5KU09OVmlldy5wcm90b3R5cGUuZ2V0Q29udHJvbGxlck5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb0pTT05WaWV3LmNvbnRyb2xsZXJOYW1lfX0oKSk7cmV0dXJuIHNhcC51aS5jb3JlLm12Yy5KU09OVmlld30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLm12Yy5KU1ZpZXcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuSlNWaWV3Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL0pTVmlldyIsWydzYXAvdWkvY29yZS9saWJyYXJ5JywnLi9WaWV3J10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUubXZjLlZpZXcuZXh0ZW5kKCJzYXAudWkuY29yZS5tdmMuSlNWaWV3Iix7bWV0YWRhdGE6e2xpYnJhcnk6InNhcC51aS5jb3JlIn19KTsoZnVuY3Rpb24oKXt2YXIgcj17fTtzYXAudWkuanN2aWV3PWZ1bmN0aW9uKGksdil7dmFyIHM9e307aWYodiYmdHlwZW9mKHYpPT0ic3RyaW5nIil7cy52aWV3TmFtZT12O3MuY29udHJvbGxlcj1hcmd1bWVudHNbMl07dmFyIFY9bmV3IHNhcC51aS5jb3JlLm12Yy5KU1ZpZXcoaSxzKTtyZXR1cm4gVn1lbHNlIGlmKHYmJnR5cGVvZih2KT09Im9iamVjdCIpe3JbaV09djtqUXVlcnkuc2FwLmRlY2xhcmUoe21vZE5hbWU6aSx0eXBlOiJ2aWV3In0sZmFsc2UpfWVsc2UgaWYoYXJndW1lbnRzLmxlbmd0aD09MSYmdHlwZW9mKGFyZ3VtZW50c1swXSk9PSJzdHJpbmciKXtzLnZpZXdOYW1lPWk7cy5jb250cm9sbGVyPWFyZ3VtZW50c1sxXTt2YXIgVj1zLmlkP25ldyBzYXAudWkuY29yZS5tdmMuSlNWaWV3KHMuaWQscyk6bmV3IHNhcC51aS5jb3JlLm12Yy5KU1ZpZXcocyk7cmV0dXJuIFZ9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoIldyb25nIGFyZ3VtZW50cyEgRWl0aGVyIGNhbGwgc2FwLnVpLmpzdmlldyhbc0lkLF0gc1ZpZXdOYW1lKSB0byBpbnN0YW50aWF0ZSBhIFZpZXcgb3Igc2FwLnVpLmpzdmlldyhzVmlld05hbWUsIG9WaWV3SW1wbCkgdG8gZGVmaW5lIGEgVmlldyB0eXBlLiIpfX07c2FwLnVpLmNvcmUubXZjLkpTVmlldy5wcm90b3R5cGUuaW5pdFZpZXdTZXR0aW5ncz1mdW5jdGlvbihzKXtpZighcltzLnZpZXdOYW1lXSl7alF1ZXJ5LnNhcC5yZXF1aXJlKHttb2ROYW1lOnMudmlld05hbWUsdHlwZToidmlldyJ9KX1qUXVlcnkuZXh0ZW5kKHRoaXMscltzLnZpZXdOYW1lXSl9O3NhcC51aS5jb3JlLm12Yy5KU1ZpZXcucHJvdG90eXBlLm9uQ29udHJvbGxlckNvbm5lY3RlZD1mdW5jdGlvbihjKXt2YXIgdD10aGlzO3ZhciBwPXt9O2lmKHRoaXMuZ2V0QXV0b1ByZWZpeElkKCkpe3AuaWQ9ZnVuY3Rpb24oaSl7cmV0dXJuIHQuY3JlYXRlSWQoaSl9fXNhcC51aS5iYXNlLk1hbmFnZWRPYmplY3QucnVuV2l0aFByZXByb2Nlc3NvcnMoZnVuY3Rpb24oKXt0LmFwcGx5U2V0dGluZ3Moe2NvbnRlbnQ6dC5jcmVhdGVDb250ZW50KGMpfSl9LHApfTtzYXAudWkuY29yZS5tdmMuSlNWaWV3LnByb3RvdHlwZS5nZXRBdXRvUHJlZml4SWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2V9fSgpKTtyZXR1cm4gc2FwLnVpLmNvcmUubXZjLkpTVmlld30sdHJ1ZSl9O2lmKCFqUXVlcnkuc2FwLmlzRGVjbGFyZWQoJ3NhcC51aS5jb3JlLm12Yy5UZW1wbGF0ZVZpZXcnKSl7alF1ZXJ5LnNhcC5kZWNsYXJlKCdzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3Jyk7c2FwLnVpLmRlZmluZSgic2FwL3VpL2NvcmUvbXZjL1RlbXBsYXRlVmlldyIsWydzYXAvdWkvY29yZS9saWJyYXJ5JywnLi9WaWV3J10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7c2FwLnVpLmNvcmUubXZjLlZpZXcuZXh0ZW5kKCJzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3Iix7bWV0YWRhdGE6e2xpYnJhcnk6InNhcC51aS5jb3JlIn19KTsoZnVuY3Rpb24oKXtzYXAudWkudGVtcGxhdGV2aWV3PWZ1bmN0aW9uKGksdil7cmV0dXJuIHNhcC51aS52aWV3KGksdixzYXAudWkuY29yZS5tdmMuVmlld1R5cGUuVGVtcGxhdGUpfTtzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3Ll9zVHlwZT1zYXAudWkuY29yZS5tdmMuVmlld1R5cGUuVGVtcGxhdGU7c2FwLnVpLmNvcmUubXZjLlRlbXBsYXRlVmlldy5wcm90b3R5cGUuZ2V0Q29udHJvbGxlck5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc0NvbnRyb2xsZXJOYW1lfTtzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3Ll9nZXRWaWV3VXJsPWZ1bmN0aW9uKHQpe3JldHVybiBqUXVlcnkuc2FwLmdldE1vZHVsZVBhdGgodCwiLnZpZXcudG1wbCIpfTtzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3LnByb3RvdHlwZS5pbml0Vmlld1NldHRpbmdzPWZ1bmN0aW9uKHMpe2lmKCFzKXt0aHJvdyBuZXcgRXJyb3IoIm1TZXR0aW5ncyBtdXN0IGJlIGdpdmVuIil9aWYoIXMudmlld05hbWUpe3Rocm93IG5ldyBFcnJvcigiTm8gdmlldyBuYW1lIGlzIGdpdmVuLiIpfXRoaXMuX29UZW1wbGF0ZT1zYXAudWkudGVtcGxhdGUoe2lkOnRoaXMuZ2V0SWQoKSxzcmM6c2FwLnVpLmNvcmUubXZjLlRlbXBsYXRlVmlldy5fZ2V0Vmlld1VybChzLnZpZXdOYW1lKX0pO3RoaXMuX3NDb250cm9sbGVyTmFtZT10aGlzLl9vVGVtcGxhdGUuX3NDb250cm9sbGVyTmFtZTt0aGlzLl9vVGVtcGxhdGU9dGhpcy5fb1RlbXBsYXRlLmNyZWF0ZUNvbnRyb2wodW5kZWZpbmVkLHVuZGVmaW5lZCx0aGlzKX19KCkpO3JldHVybiBzYXAudWkuY29yZS5tdmMuVGVtcGxhdGVWaWV3fSx0cnVlKX07c2FwLnVpLmdldENvcmUoKS5ib290JiZzYXAudWkuZ2V0Q29yZSgpLmJvb3QoKTsNCn0gY2F0Y2gob0Vycm9yKSB7CmlmIChvRXJyb3IubmFtZSAhPSAiUmVzdGFydCIpIHsgdGhyb3cgb0Vycm9yOyB9Cn0K",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 21:26:14 GMT",
                    "Content-Length": "922137",
                    "Date": "Fri, 07 Nov 2014 21:26:23 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}