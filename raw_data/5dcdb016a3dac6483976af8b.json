{
    "url": "http://localhost:9999/mixxen/cesiumjs/Build/Apps/CesiumViewer/CesiumViewerStartup.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>window.location.href</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>e(t)||(t=document.createElement(\"a\")),t.href=window.location.href;</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/mixxen/cesiumjs/Build/Apps/CesiumViewer/CesiumViewerStartup.js",
                "path": "/mixxen/cesiumjs/Build/Apps/CesiumViewer/CesiumViewerStartup.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9taXh4ZW4vY2VzaXVtanMvQnVpbGQvQXBwcy9DZXNpdW1WaWV3ZXIvQ2VzaXVtVmlld2VyU3RhcnR1cC5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "LyoqDQogKiBAbGljZW5zZQ0KICoNCiAqIEdyYXV3IFVSSSB1dGlsaXRpZXMNCiAqDQogKiBTZWU6IGh0dHA6Ly9oZy5ncmF1dy5ubC9ncmF1dy1saWIvZmlsZS90aXAvc3JjL3VyaS5qcw0KICoNCiAqIEBhdXRob3IgTGF1cmVucyBIb2xzdCAoaHR0cDovL3d3dy5ncmF1dy5ubC8pDQogKg0KICogICBDb3B5cmlnaHQgMjAxMiBMYXVyZW5zIEhvbHN0DQogKg0KICogICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsNCiAqICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KICogICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQNCiAqDQogKiAgICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjANCiAqDQogKiAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUNCiAqICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiAqICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuDQogKiAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQNCiAqICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQogKg0KICovDQoNCi8qKg0KQGxpY2Vuc2UNCm1lcnNlbm5lLXR3aXN0ZXIuanMgLSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9iYW5rc2Vhbi8zMDA0OTQNCg0KICAgQ29weXJpZ2h0IChDKSAxOTk3IC0gMjAwMiwgTWFrb3RvIE1hdHN1bW90byBhbmQgVGFrdWppIE5pc2hpbXVyYSwNCiAgIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQoNCiAgIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dA0KICAgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zDQogICBhcmUgbWV0Og0KDQogICAgIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0DQogICAgICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4NCg0KICAgICAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodA0KICAgICAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlDQogICAgICAgIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uDQoNCiAgICAgMy4gVGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMgbWF5IG5vdCBiZSB1c2VkIHRvIGVuZG9yc2Ugb3IgcHJvbW90ZQ0KICAgICAgICBwcm9kdWN0cyBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4NCiAgICAgICAgcGVybWlzc2lvbi4NCg0KICAgVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUw0KICAgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QNCiAgIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUg0KICAgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuICBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIE9XTkVSIE9SDQogICBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwNCiAgIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywNCiAgIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUg0KICAgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRg0KICAgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcNCiAgIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUw0KICAgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuDQoqLw0KDQovKioNCkBsaWNlbnNlDQpzcHJpbnRmLmpzIGZyb20gdGhlIHBocC5qcyBwcm9qZWN0IC0gaHR0cHM6Ly9naXRodWIuY29tL2t2ei9waHBqcw0KRGlyZWN0bHkgZnJvbSBodHRwczovL2dpdGh1Yi5jb20va3Z6L3BocGpzL2Jsb2IvbWFzdGVyL2Z1bmN0aW9ucy9zdHJpbmdzL3NwcmludGYuanMNCg0KcGhwLmpzIGlzIGNvcHlyaWdodCAyMDEyIEtldmluIHZhbiBab25uZXZlbGQuDQoNClBvcnRpb25zIGNvcHlyaWdodCBCcmV0dCBaYW1pciAoaHR0cDovL2JyZXR0LXphbWlyLm1lKSwgS2V2aW4gdmFuIFpvbm5ldmVsZA0KKGh0dHA6Ly9rZXZpbi52YW56b25uZXZlbGQubmV0KSwgT25ubyBNYXJzbWFuLCBUaGVyaWF1bHQsIE1pY2hhZWwgV2hpdGUNCihodHRwOi8vZ2V0c3ByaW5rLmNvbSksIFdhbGRvIE1hbHF1aSBTaWx2YSwgUGF1bG8gRnJlaXRhcywgSmFjaywgSm9uYXMNClJhb25pIFNvYXJlcyBTaWx2YSAoaHR0cDovL3d3dy5qc2Zyb21oZWxsLmNvbSksIFBoaWxpcCBQZXRlcnNvbiwgTGVnYWV2DQpBbmRyZXksIEF0ZXMgR29yYWwgKGh0dHA6Ly9tYWduZXRpcS5jb20pLCBBbGV4LCBSYXRoZW91cywgTWFydGlqbiBXaWVyaW5nYSwNClJhZmE/IEt1a2F3c2tpIChodHRwOi8vYmxvZy5rdWthd3NraS5wbCksIGxtZXlyaWNrDQooaHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvYmNtYXRoLWpzLyksIE5hdGUsIFBoaWxpcHBlIEJhdW1hbm4sDQpFbnJpcXVlIEdvbnphbGV6LCBXZWJ0b29sa2l0LmluZm8gKGh0dHA6Ly93d3cud2VidG9vbGtpdC5pbmZvLyksIENhcmxvcyBSLg0KTC4gUm9kcmlndWVzIChodHRwOi8vd3d3LmpzZnJvbWhlbGwuY29tKSwgQXNoIFNlYXJsZQ0KKGh0dHA6Ly9oZXhtZW4uY29tL2Jsb2cvKSwgSmFuaSBIYXJ0aWthaW5lbiwgdHJhdmMsIE9sZSBWcmlqZW5ob2VrLA0KRXJrZWtqZXR0ZXIsIE1pY2hhZWwgR3JpZXIsIFJhZmE/IEt1a2F3c2tpIChodHRwOi8va3VrYXdza2kucGwpLCBKb2hubnkNCk1hc3QgKGh0dHA6Ly93d3cucGhwdnJvdXdlbi5ubCksIFQuV2lsZCwgZDN4LA0KaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81NzgwMy9ob3ctdG8tY29udmVydC1kZWNpbWFsLXRvLWhleC1pbi1qYXZhc2NyaXB0LA0KUmFmYT8gS3VrYXdza2kgKGh0dHA6Ly9ibG9nLmt1a2F3c2tpLnBsLyksIHN0YWcwMTksIHBpbHVzLCBXZWJEZXZIb2JvDQooaHR0cDovL3dlYmRldmhvYm8uYmxvZ3Nwb3QuY29tLyksIG1hcnJ0aW5zLCBHZWVrRkcNCihodHRwOi8vZ2Vla2ZnLmJsb2dzcG90LmNvbSksIEFuZHJlYSBHaWFtbWFyY2hpDQooaHR0cDovL3dlYnJlZmxlY3Rpb24uYmxvZ3Nwb3QuY29tKSwgQXJwYWQgUmF5IChtYWlsdG86YXJwYWRAcGhwLm5ldCksDQpnb3J0aGF1ciwgUGF1bCBTbWl0aCwgVGltIGRlIEtvbmluZyAoaHR0cDovL3d3dy5raW5nc3F1YXJlLm5sKSwgSm9yaXMsIE9sZWcNCkVyZW1lZXYsIFN0ZXZlIEhpbGRlciwgbWFqYWssIGdldHRpbWVvZmRheSwgS0VMQU4sIEpvc2ggRnJhc2VyDQooaHR0cDovL29ubGluZWFzcGVjdC5jb20vMjAwNy8wNi8wOC9hdXRvLWRldGVjdC1hLXRpbWUtem9uZS13aXRoLWphdmFzY3JpcHQvKSwNCk1hcmMgUGFsYXUsIE1hcnRpbg0KKGh0dHA6Ly93d3cuZXJsZW53aWVzZS5kZS8pLCBCcmVha2luZyBQYXIgQ29uc3VsdGluZyBJbmMNCihodHRwOi8vd3d3LmJyZWFraW5ncGFyLmNvbS9ia3AvaG9tZS5uc2YvMC84NzI1NkIyODAwMTUxOTNGODcyNTZDRkIwMDZDNDVGNyksDQpDaHJpcywgTWlyZWsgU2x1Z2VuLCBzYXVsaXVzLCBBbGZvbnNvIEppbWVuZXoNCihodHRwOi8vd3d3LmFsZm9uc29qaW1lbmV6LmNvbSksIERpcGxvbUB0IChodHRwOi8vZGlmYW5lLmNvbS8pLCBmZWxpeCwNCk1haWxmYWtlciAoaHR0cDovL3d3dy53ZWVkZW0uZnIvKSwgVHlsZXIgQWtpbnMgKGh0dHA6Ly9ydW1raW4uY29tKSwgQ2Fpbw0KQXJpZWRlIChodHRwOi8vY2Fpb2FyaWVkZS5jb20pLCBSb2JpbiwgS2Fua3JlbHVuZQ0KKGh0dHA6Ly93d3cud2ViZmFrdG9yeS5pbmZvLyksIEthcm9sIEtvd2Fsc2tpLCBJbWdlbiBUYXRhDQooaHR0cDovL3d3dy5teWlwZGYuY29tLyksIG1kc2phY2sgKGh0dHA6Ly93d3cubWRzamFjay5iby5pdCksIERyZWFtZXIsDQpGZWxpeCBHZWlzZW5kb2VyZmVyIChodHRwOi8vd3d3LmRlYnVnZ2FibGUuY29tL2ZlbGl4KSwgTGFycyBGaXNjaGVyLCBBSiwNCkRhdmlkLCBBbWFuIEd1cHRhLCBNaWNoYWVsIFdoaXRlLCBQdWJsaWMgRG9tYWluDQooaHR0cDovL3d3dy5qc29uLm9yZy9qc29uMi5qcyksIFN0ZXZlbiBMZXZpdGhhbg0KKGh0dHA6Ly9ibG9nLnN0ZXZlbmxldml0aGFuLmNvbSksIFNha2ltb3JpLCBQZWxsZW50ZXNxdWUgTWFsZXN1YWRhLA0KVGh1bmRlci5tLCBEaiAoaHR0cDovL3BocGpzLm9yZy9mdW5jdGlvbnMvaHRtbGVudGl0aWVzOjQyNSNjb21tZW50XzEzNDAxOCksDQpTdGV2ZSBDbGF5LCBEYXZpZCBKYW1lcywgRnJhbmNvaXMsIGNsYXNzX2V4aXN0cywgbm9iYmxlciwgVC4gV2lsZCwgSXRzYWNvbg0KKGh0dHA6Ly93d3cuaXRzYWNvbi5uZXQvKSwgZGF0ZSwgT2xlIFZyaWplbmhvZWsgKGh0dHA6Ly93d3cubmVydm91cy5ubC8pLA0KRm94LCBSYXBoYWVsIChBbyBSVURMRVIpLCBNYXJjbywgbm9uYW1lLCBNYXRldXN6ICJsb29ucXVhd2wiIFphbGVnYSwgRnJhbmsNCkZvcnRlLCBBcm5vLCBnZXIsIG1rdGltZSwgam9obiAoaHR0cDovL3d3dy5qZC10ZWNoLm5ldCksIE5pY2sgS29sb3Nvdg0KKGh0dHA6Ly9zYW1teS5ydSksIG1hcmMgYW5kcmV1LCBTY290dCBDYXJpc3MsIERvdWdsYXMgQ3JvY2tmb3JkDQooaHR0cDovL2phdmFzY3JpcHQuY3JvY2tmb3JkLmNvbSksIG1hZGlwdGEsIFNsYXdvbWlyIEthbmllY2tpLA0KUmV2ZXJzZVN5bnRheCwgTmF0aGFuLCBBbGV4IFdpbHNvbiwga2VubmV0aCwgQmF5cm9uIEd1ZXZhcmEsIEFkYW0gV2FsbG5lcg0KKGh0dHA6Ly93ZWIyLmJpdGJhcm8uaHUvKSwgcGF1bG8ga3VvbmcsIGptd2ViLCBMaW5jb2xuIFJhbXNheSwgZGptaXgsDQpQeWVycmUsIEpvbiBIb2hsZSwgVGhpYWdvIE1hdGEgKGh0dHA6Ly90aGlhZ29tYXRhLmJsb2cuY29tKSwgbG1leXJpY2sNCihodHRwczovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9iY21hdGgtanMvdGhpcy4pLCBMaW51eHdvcmxkLCBkdW5jYW4sDQpHaWxiZXJ0LCBTYW5qb3kgUm95LCBTaGluZ28sIHNhbmthaSwgT3NrYXIgTGFyc3NvbiBIP2dmZWxkdA0KKGh0dHA6Ly9vc2thci1saC5uYW1lLyksIERlbm55IFdhcmRoYW5hLCAwbTNyLCBFdmVybGFzdG8sIFN1Ymhhc2lzIERlYiwNCmpvc2gsIGpkLCBQaWVyIFBhb2xvIFJhbW9uIChodHRwOi8vd3d3Lm1hc3RlcnNvdXAuY29tLyksIFAsIG1lcmFiaSwgU29yZW4NCkhhbnNlbiwgRXVnZW5lIEJ1bGtpbiAoaHR0cDovL2RvdWJsZWF3LmNvbS8pLCBEZXIgU2ltb24NCihodHRwOi8vaW5uZXJkb20uc291cmNlZm9yZ2UubmV0LyksIGVjaG8gaXMgYmFkLCBPemgsIFhvcmFYDQooaHR0cDovL3d3dy54b3JheC5pbmZvKSwgRWRvckZhdXMsIEpCLCBKIEEgUiwgTWFyYyBKYW5zZW4sIEZyYW5jZXNjbywgTEgsDQpTdG95YW4gS3lvc2V2IChodHRwOi8vd3d3LnN2ZXN0Lm9yZy8pLCBub3JkX3VhLCBvbWlkDQooaHR0cDovL3BocGpzLm9yZy9mdW5jdGlvbnMvMzgwOjM4MCNjb21tZW50XzEzNzEyMiksIEJyYWQgVG91ZXNuYXJkLCBNZUV0Yw0KKGh0dHA6Ly95YXNzLm1lZXRjd2ViLmNvbSksIFBldGVyLVBhdWwgS29jaA0KKGh0dHA6Ly93d3cucXVpcmtzbW9kZS5vcmcvanMvYmVhdC5odG1sKSwgT2xpdmllciBMb3V2aWduZXMNCihodHRwOi8vbWctY3JlYS5jb20vKSwgVDBic24sIFRpbSBXaWVsLCBCcnlhbiBFbGxpb3R0LCBKYWxhbCBCZXJyYW1pLA0KTWFydGluLCBKVCwgRGF2aWQgUmFuZGFsbCwgVGhvbWFzIEJlYXVjb3VydCAoaHR0cDovL3d3dy53ZWJhcHAuZnIpLCB0YWl0aCwNCnZsYWRvIGhvdWJhLCBQaWVycmUtTHVjIFBhb3VyLCBLcmlzdG9mIENvb21hbnMgKFNDSy1DRU4gQmVsZ2lhbiBOdWNsZWFpcg0KUmVzZWFyY2ggQ2VudHJlKSwgTWFydGluIFBvb2wsIEtpcmsgU3Ryb2JlY2ssIFJpY2sgV2FsZHJvbiwgQnJhbnQgTWVzc2VuZ2VyDQooaHR0cDovL3d3dy5icmFudG1lc3Nlbmdlci5jb20vKSwgRGV2YW4gUGVubmVyLVdvZWxrLCBTYXVsbyBWYWxsb3J5LCBXYWduZXINCkIuIFNvYXJlcywgQXJ0dXIgVGNoZXJueWNoZXYsIFZhbGVudGluYSBEZSBSb3NhLCBKYXNvbiBXb25nDQooaHR0cDovL2NhcnJvdC5vcmcvKSwgQ2hyaXN0b3BoLCBEYW5pZWwgRXN0ZWJhbiwgc3RyZnRpbWUsIE1pY2tAZWwsIHJlem5hLA0KU2ltb24gV2lsbGlzb24gKGh0dHA6Ly9zaW1vbndpbGxpc29uLm5ldCksIEFudG9uIE9uZ3NvbiwgR2FicmllbCBQYWRlcm5pLA0KTWFyY28gdmFuIE9vcnQsIHBlbnV0YnV0dGVyamVsbHksIFBoaWxpcHAgTGVuc3NlbiwgQmpvcm4gUm9lc2Jla2UNCihodHRwOi8vd3d3LmJqb3Jucm9lc2Jla2UuYmUvKSwgQnVnPywgRXJpYyBOYWdlbCwgVG9tYXN6IFdlc29sb3dza2ksDQpFdmVydGphbiBHYXJyZXRzZW4sIEJvYmJ5IERyYWtlLCBCbHVlcyAoaHR0cDovL3RlY2guYmx1ZXNtb29uLmluZm8vKSwgTHVrZQ0KR29kZnJleSwgUHVsLCB1ZXN0bGEsIEFsYW4gQywgVWxyaWNoLCBSYWZhbCBLdWthd3NraSwgWXZlcyBTdWNhZXQsDQpzb3diZXJyeSwgTm9ybWFuICJ6RWgiIEZ1Y2hzLCBoaXR3b3JrLCBaYWhsaWksIGpvaG5yZW1ibywgTmljayBDYWxsZW4sDQpTdGV2ZW4gTGV2aXRoYW4gKHN0ZXZlbmxldml0aGFuLmNvbSksIGVqc2FuZGVycywgU2NvdHQgQmFrZXIsIEJyaWFuIFRhZm95YQ0KKGh0dHA6Ly93d3cucHJlbWFzb2x1dGlvbnMuY29tLyksIFBoaWxpcHBlIEphdXNpb25zDQooaHR0cDovL3BlYXIucGhwLm5ldC91c2VyL2phdXNpb25zKSwgQWlkYW4gTGlzdGVyDQooaHR0cDovL2FpZGFubGlzdGVyLmNvbS8pLCBSb2IsIGUtbWlrZSwgSEtNLCBDaGFvc05vMSwgbWV0amF5LCBzdHJjYXNlY21wLA0Kc3RyY21wLCBUYXJhcyBCb2dhY2gsIGpwZmxlLCBBbGV4YW5kZXIgRXJtb2xhZXYNCihodHRwOi8vc25pcHBldHMuZHpvbmUuY29tL3VzZXIvQWxleGFuZGVyRXJtb2xhZXYpLCBEeEd4LCBraWxvcHMsIE9ybGFuZG8sDQpkcHRyMTk4OCwgTGUgVG9yYmksIEphbWVzIChodHRwOi8vd3d3LmphbWVzLWJlbGwuY28udWsvKSwgUGVkcm8gVGFpbmhhDQooaHR0cDovL3d3dy5wZWRyb3RhaW5oYS5jb20pLCBKYW1lcywgQXJub3V0IEthemVtaWVyDQooaHR0cDovL3d3dy4zcmQtRWRlbi5jb20pLCBDaHJpcyBNY01hY2tlbiwgZ2FicmllbCBwYWRlcm5pLCBZYW5ub28sDQpGR0ZFbXBlcm9yLCBiYXJpcyBvemRpbCwgVG9kIEdlbnRpbGxlLCBHcmVnIEZyYXppZXIsIGpha2VzLCAzRC1HUkFGLCBBbGxhbg0KSmVuc2VuIChodHRwOi8vd3d3LndpbnRlcm5ldC5ubyksIEhvd2FyZCBZZWVuZCwgQmVuamFtaW4gTHVwdG9uLCBkYXZvb2ssDQpkYW5pZWwgYWlydG9uIHdlcm1hbm4gKGh0dHA6Ly93ZXJtYW5uLmNvbS5iciksIEF0bGkgVMKowq5yLCBNYXhpbXVzeWEsIFJ5YW4NClcgVGVubmV5IChodHRwOi8vcnlhbi4xMGUudXMpLCBBbGV4YW5kZXIgTSBCZWVkaWUsIGZlYXJwaGFnZQ0KKGh0dHA6Ly9odHRwL215Lm9wZXJhLmNvbS9mZWFycGhhZ2UvKSwgTmF0aGFuIFNlcHVsdmVkYSwgVmljdG9yLCBNYXR0ZW8sDQpCaWxseSwgc3RlbnNpLCBDb3JkLCBNYW5pc2gsIFQuSi4gTGVhaHksIFJpZGRsZXINCihodHRwOi8vd3d3LmZyb250aWVyd2ViZGV2LmNvbS8pLCBSYWZhPyBLdWthd3NraSwgRnJlbXlDb21wYW55LCBNYXR0DQpCcmFkbGV5LCBUaW0gZGUgS29uaW5nLCBMdWlzIFNhbGF6YXIgKGh0dHA6Ly93d3cuZnJlYWt5LW1lZGlhLmNvbS8pLCBEaW9nbw0KUmVzZW5kZSwgUml2YWwsIEFuZHJlaiBQYXZsb3ZpYywgR2FyYWdvdGgsIExlIFRvcmJpDQooaHR0cDovL3d3dy5sZXRvcmJpLmRlLyksIERpbm8sIEpvc2VwIFNhbnogKGh0dHA6Ly93d3cud3MzLmVzLyksIHJlbSwNClJ1c3NlbGwgV2Fsa2VyIChodHRwOi8vd3d3Lm5iaWxsLmNvLnVrLyksIEphbWllIEJlY2sNCihodHRwOi8vd3d3LnRlcmFiaXQuY2EvKSwgc2V0Y29va2llLCBNaWNoYWVsLCBZVUkgTGlicmFyeToNCmh0dHA6Ly9kZXZlbG9wZXIueWFob28uY29tL3l1aS9kb2NzL1lBSE9PLnV0aWwuRGF0ZUxvY2FsZS5odG1sLCBCbHVlcyBhdA0KaHR0cDovL2hhY2tzLmJsdWVzbW9vbi5pbmZvL3N0cmZ0aW1lL3N0cmZ0aW1lLmpzLCBCZW4NCihodHRwOi8vYmVuYmx1bWUuY28udWsvKSwgRHRUdkINCihodHRwOi8vZHQuaW4udGgvMjAwOC0wOS0xNi5zdHJpbmctbGVuZ3RoLWluLWJ5dGVzLmh0bWwpLCBBbmRyZWFzLCBXaWxsaWFtLA0KbWVvLCBpbmNpZGVuY2UsIENhZ3JpIEVraW4sIEFtaXJvdWNoZSwgQW1pciBIYWJpYmkNCihodHRwOi8vd3d3LnJlc2lkZW5jZS1taXh0ZS5jb20vKSwgTHVrZSBTbWl0aCAoaHR0cDovL2x1Y2Fzc21pdGgubmFtZSksDQpLaGVhbmcgSG9rIENoaW4gKGh0dHA6Ly93d3cuZGlzdGFudGlhLmNhLyksIEpheSBLbGVociwgTG9yZW56byBQaXNhbmksDQpUb255LCBZZW4tV2VpIExpdSwgR3JlZW5zZWVkLCBtay5rZWNrLCBMZXNsaWUgSG9hcmUsIGR1ZGUsIGJvb2V5T0gsIEJlbg0KQnJ5YW4NCg0KTGljZW5zZWQgdW5kZXIgdGhlIE1JVCAoTUlULUxJQ0VOU0UudHh0KSBsaWNlbnNlLg0KDQpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYQ0KY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQ0KIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZw0Kd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLA0KZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvDQpwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8NCnRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoNCg0KVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQNCmluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KDQpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUw0KT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRg0KTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULg0KSU4gTk8gRVZFTlQgU0hBTEwgS0VWSU4gVkFOIFpPTk5FVkVMRCBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUw0KT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsDQpBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1INCk9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4NCiovDQoNCi8qKg0KICBAbGljZW5zZQ0KICB3aGVuLmpzIC0gaHR0cHM6Ly9naXRodWIuY29tL2N1am9qcy93aGVuDQoNCiAgTUlUIExpY2Vuc2UgKGMpIGNvcHlyaWdodCBCIENhdmFsaWVyICYgSiBIYW5uDQoNCiAqIEEgbGlnaHR3ZWlnaHQgQ29tbW9uSlMgUHJvbWlzZXMvQSBhbmQgd2hlbigpIGltcGxlbWVudGF0aW9uDQogKiB3aGVuIGlzIHBhcnQgb2YgdGhlIGN1am8uanMgZmFtaWx5IG9mIGxpYnJhcmllcyAoaHR0cDovL2N1am9qcy5jb20vKQ0KICoNCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSBhdDoNCiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwDQogKg0KICogQHZlcnNpb24gMS43LjENCiAqLw0KDQovKioNCiAgQGxpY2Vuc2UNCiAgZm9udG1ldHJpY3MuanMgLSBodHRwczovL2dpdGh1Yi5jb20vUG9tYXgvZm9udG1ldHJpY3MuanMNCg0KICBDb3B5cmlnaHQgKEMpIDIwMTEgYnkgTWlrZSAiUG9tYXgiIEthbWVybWFucw0KDQogIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkNCiAgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwNCiAgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cw0KICB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsDQogIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcw0KICBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOg0KDQogIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluDQogIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLg0KDQogIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SDQogIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLA0KICBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUNCiAgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUg0KICBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLA0KICBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElODQogIFRIRSBTT0ZUV0FSRS4NCioqLw0KDQovKioNCkBsaWNlbnNlDQp0b3BvanNvbiAtIGh0dHBzOi8vZ2l0aHViLmNvbS9tYm9zdG9jay90b3BvanNvbg0KDQpDb3B5cmlnaHQgKGMpIDIwMTIsIE1pY2hhZWwgQm9zdG9jaw0KQWxsIHJpZ2h0cyByZXNlcnZlZC4NCg0KUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0DQptb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoNCg0KKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMNCiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuDQoNCiogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLA0KICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uDQogIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLg0KDQoqIFRoZSBuYW1lIE1pY2hhZWwgQm9zdG9jayBtYXkgbm90IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzDQogIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLg0KDQpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyINCkFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUNCklNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRQ0KRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgTUlDSEFFTCBCT1NUT0NLIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwNCklORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLA0KQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwNCkRBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkNCk9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HDQpORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsDQpFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLg0KKi8NCg0KLyoqDQogKiBAbGljZW5zZQ0KICogS25vY2tvdXQgSmF2YVNjcmlwdCBsaWJyYXJ5IHYzLjEuMA0KICogKGMpIFN0ZXZlbiBTYW5kZXJzb24gLSBodHRwOi8va25vY2tvdXRqcy5jb20vDQogKiBMaWNlbnNlOiBNSVQgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwKQ0KICovDQoNCi8qKg0KICogQGxpY2Vuc2UNCiAqIEtub2Nrb3V0IEVTNSBwbHVnaW4gLSBodHRwczovL2dpdGh1Yi5jb20vU3RldmVTYW5kZXJzb24va25vY2tvdXQtZXM1DQogKiBDb3B5cmlnaHQgKGMpIFN0ZXZlIFNhbmRlcnNvbg0KICogTUlUIGxpY2Vuc2UNCiAqLw0KDQovLyBDb3B5cmlnaHQgMjAxMiBHb29nbGUgSW5jLiwgQXBhY2hlIDIuMCBsaWNlbnNlLg0KDQovKioNCkBsaWNlbnNlDQp0d2Vlbi5qcyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9zb2xlL3R3ZWVuLmpzDQoNCkNvcHlyaWdodCAoYykgMjAxMC0yMDEyIFR3ZWVuLmpzIGF1dGhvcnMuDQoNCkVhc2luZyBlcXVhdGlvbnMgQ29weXJpZ2h0IChjKSAyMDAxIFJvYmVydCBQZW5uZXIgaHR0cDovL3JvYmVydHBlbm5lci5jb20vZWFzaW5nLw0KDQpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5DQpvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbA0KaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cw0KdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbA0KY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzDQpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOg0KDQpUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbg0KYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuDQoNClRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SDQpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwNCkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRQ0KQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUg0KTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwNCk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4NClRIRSBTT0ZUV0FSRS4NCiovDQoNCi8qKgogKiBAbGljZW5zZQogKiBDb3B5cmlnaHQgKGMpIDIwMTEgTlZJRElBIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKgogKiBUTyAgVEhFIE1BWElNVU0gIEVYVEVOVCBQRVJNSVRURUQgIEJZIEFQUExJQ0FCTEUgIExBVywgVEhJUyBTT0ZUV0FSRSAgSVMgUFJPVklERUQKICogKkFTIElTKiAgQU5EIE5WSURJQSBBTkQgIElUUyBTVVBQTElFUlMgRElTQ0xBSU0gIEFMTCBXQVJSQU5USUVTLCAgRUlUSEVSICBFWFBSRVNTCiAqIE9SIElNUExJRUQsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEICBUTywgTk9OSU5GUklOR0VNRU5ULElNUExJRUQgV0FSUkFOVElFUyBPRgogKiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgSU4gTk8gRVZFTlQgU0hBTEwgIE5WSURJQSAKICogT1IgSVRTIFNVUFBMSUVSUyBCRSAgTElBQkxFICBGT1IgIEFOWSAgRElSRUNULCBTUEVDSUFMLCAgSU5DSURFTlRBTCwgIElORElSRUNULCAgT1IgIAogKiBDT05TRVFVRU5USUFMIERBTUFHRVMgV0hBVFNPRVZFUiAoSU5DTFVESU5HLCBXSVRIT1VUIExJTUlUQVRJT04sICBEQU1BR0VTIEZPUiBMT1NTIAogKiBPRiBCVVNJTkVTUyBQUk9GSVRTLCBCVVNJTkVTUyBJTlRFUlJVUFRJT04sIExPU1MgT0YgQlVTSU5FU1MgSU5GT1JNQVRJT04sIE9SIEFOWSAKICogT1RIRVIgUEVDVU5JQVJZIExPU1MpIEFSSVNJTkcgT1VUIE9GIFRIRSAgVVNFIE9GIE9SIElOQUJJTElUWSAgVE8gVVNFIFRISVMgU09GVFdBUkUsIAogKiBFVkVOIElGIE5WSURJQSBIQVMgQkVFTiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRVMuCiAqLw0KDQovKioKICogQGxpY2Vuc2UKICogQ29weXJpZ2h0IChjKSAyMDAwLTIwMDUsIFNlYW4gTydOZWlsIChzX3Bfb25laWxAaG90bWFpbC5jb20pCiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIAogKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKICogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zCiAqIGFyZSBtZXQ6CiAqIAogKiAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKICogICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgogKiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwKICogICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uCiAqICAgYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCiAqICogTmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgcHJvamVjdCBub3IgdGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMgbWF5IGJlCiAqICAgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIHRoaXMgc29mdHdhcmUgd2l0aG91dAogKiAgIHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi4KICogCiAqIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIgogKiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFCiAqIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRQogKiBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIE9XTkVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUKICogRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwKICogREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IKICogU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIKICogQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwKICogT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UKICogT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS4KICoKICogTW9kaWZpY2F0aW9ucyBtYWRlIGJ5IEFuYWx5dGljYWwgR3JhcGhpY3MsIEluYy4KICovDQoNCi8qKg0KICogQGxpY2Vuc2UgUmVxdWlyZUpTIGRvbVJlYWR5IDIuMC4xIENvcHlyaWdodCAoYykgMjAxMC0yMDEyLCBUaGUgRG9qbyBGb3VuZGF0aW9uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuDQogKiBBdmFpbGFibGUgdmlhIHRoZSBNSVQgb3IgbmV3IEJTRCBsaWNlbnNlLg0KICogc2VlOiBodHRwOi8vZ2l0aHViLmNvbS9yZXF1aXJlanMvZG9tUmVhZHkgZm9yIGRldGFpbHMNCiAqLw0KDQohZnVuY3Rpb24oKXtkZWZpbmUoIkNvcmUvZGVmaW5lZCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWV9O3JldHVybiBlfSksZGVmaW5lKCJDb3JlL2Zvcm1hdEVycm9yIixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0KXt2YXIgaSxuPXQubmFtZSxyPXQubWVzc2FnZTtpPWUobikmJmUocik/bisiOiAiK3I6dC50b1N0cmluZygpO3ZhciBvPXQuc3RhY2s7cmV0dXJuIGUobykmJihpKz0iXG4iK28pLGl9O3JldHVybiB0fSksZGVmaW5lKCJUaGlyZFBhcnR5L1VyaSIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe2lmKHQgaW5zdGFuY2VvZiBlKXRoaXMuc2NoZW1lPXQuc2NoZW1lLHRoaXMuYXV0aG9yaXR5PXQuYXV0aG9yaXR5LHRoaXMucGF0aD10LnBhdGgsdGhpcy5xdWVyeT10LnF1ZXJ5LHRoaXMuZnJhZ21lbnQ9dC5mcmFnbWVudDtlbHNlIGlmKHQpe3ZhciBpPW4uZXhlYyh0KTt0aGlzLnNjaGVtZT1pWzFdLHRoaXMuYXV0aG9yaXR5PWlbMl0sdGhpcy5wYXRoPWlbM10sdGhpcy5xdWVyeT1pWzRdLHRoaXMuZnJhZ21lbnQ9aVs1XX19ZnVuY3Rpb24gdChlKXt2YXIgdD11bmVzY2FwZShlKTtyZXR1cm4gby50ZXN0KHQpP3Q6ZS50b1VwcGVyQ2FzZSgpfWZ1bmN0aW9uIGkoZSx0LGksbil7cmV0dXJuKHR8fCIiKStpLnRvTG93ZXJDYXNlKCkrKG58fCIiKX1lLnByb3RvdHlwZS5zY2hlbWU9bnVsbCxlLnByb3RvdHlwZS5hdXRob3JpdHk9bnVsbCxlLnByb3RvdHlwZS5wYXRoPSIiLGUucHJvdG90eXBlLnF1ZXJ5PW51bGwsZS5wcm90b3R5cGUuZnJhZ21lbnQ9bnVsbDt2YXIgbj1uZXcgUmVnRXhwKCJeKD86KFteOi8/I10rKTopPyg/Oi8vKFteLz8jXSopKT8oW14/I10qKSg/OlxcPyhbXiNdKikpPyg/OiMoLiopKT8kIik7ZS5wcm90b3R5cGUuZ2V0U2NoZW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2NoZW1lfSxlLnByb3RvdHlwZS5nZXRBdXRob3JpdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hdXRob3JpdHl9LGUucHJvdG90eXBlLmdldFBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wYXRofSxlLnByb3RvdHlwZS5nZXRRdWVyeT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnF1ZXJ5fSxlLnByb3RvdHlwZS5nZXRGcmFnbWVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZyYWdtZW50fSxlLnByb3RvdHlwZS5pc0Fic29sdXRlPWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLnNjaGVtZSYmIXRoaXMuZnJhZ21lbnR9LGUucHJvdG90eXBlLmlzU2FtZURvY3VtZW50QXM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc2NoZW1lPT10aGlzLnNjaGVtZSYmZS5hdXRob3JpdHk9PXRoaXMuYXV0aG9yaXR5JiZlLnBhdGg9PXRoaXMucGF0aCYmZS5xdWVyeT09dGhpcy5xdWVyeX0sZS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmlzU2FtZURvY3VtZW50QXMoZSkmJmUuZnJhZ21lbnQ9PXRoaXMuZnJhZ21lbnR9LGUucHJvdG90eXBlLm5vcm1hbGl6ZT1mdW5jdGlvbigpe3RoaXMucmVtb3ZlRG90U2VnbWVudHMoKSx0aGlzLnNjaGVtZSYmKHRoaXMuc2NoZW1lPXRoaXMuc2NoZW1lLnRvTG93ZXJDYXNlKCkpLHRoaXMuYXV0aG9yaXR5JiYodGhpcy5hdXRob3JpdHk9dGhpcy5hdXRob3JpdHkucmVwbGFjZShhLGkpLnJlcGxhY2Uocix0KSksdGhpcy5wYXRoJiYodGhpcy5wYXRoPXRoaXMucGF0aC5yZXBsYWNlKHIsdCkpLHRoaXMucXVlcnkmJih0aGlzLnF1ZXJ5PXRoaXMucXVlcnkucmVwbGFjZShyLHQpKSx0aGlzLmZyYWdtZW50JiYodGhpcy5mcmFnbWVudD10aGlzLmZyYWdtZW50LnJlcGxhY2Uocix0KSl9O3ZhciByPS8lWzAtOWEtel17Mn0vZ2ksbz0vW2EtekEtWjAtOVwtXC5ffl0vLGE9LyguKkApPyhbXkA6XSopKDouKik/LztyZXR1cm4gZS5wcm90b3R5cGUucmVzb2x2ZT1mdW5jdGlvbih0KXt2YXIgaT1uZXcgZTtyZXR1cm4gdGhpcy5zY2hlbWU/KGkuc2NoZW1lPXRoaXMuc2NoZW1lLGkuYXV0aG9yaXR5PXRoaXMuYXV0aG9yaXR5LGkucGF0aD10aGlzLnBhdGgsaS5xdWVyeT10aGlzLnF1ZXJ5KTooaS5zY2hlbWU9dC5zY2hlbWUsdGhpcy5hdXRob3JpdHk/KGkuYXV0aG9yaXR5PXRoaXMuYXV0aG9yaXR5LGkucGF0aD10aGlzLnBhdGgsaS5xdWVyeT10aGlzLnF1ZXJ5KTooaS5hdXRob3JpdHk9dC5hdXRob3JpdHksIiI9PXRoaXMucGF0aD8oaS5wYXRoPXQucGF0aCxpLnF1ZXJ5PXRoaXMucXVlcnl8fHQucXVlcnkpOigiLyI9PXRoaXMucGF0aC5jaGFyQXQoMCk/KGkucGF0aD10aGlzLnBhdGgsaS5yZW1vdmVEb3RTZWdtZW50cygpKTooaS5wYXRoPXQuYXV0aG9yaXR5JiYiIj09dC5wYXRoPyIvIit0aGlzLnBhdGg6dC5wYXRoLnN1YnN0cmluZygwLHQucGF0aC5sYXN0SW5kZXhPZigiLyIpKzEpK3RoaXMucGF0aCxpLnJlbW92ZURvdFNlZ21lbnRzKCkpLGkucXVlcnk9dGhpcy5xdWVyeSkpKSxpLmZyYWdtZW50PXRoaXMuZnJhZ21lbnQsaX0sZS5wcm90b3R5cGUucmVtb3ZlRG90U2VnbWVudHM9ZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMucGF0aC5zcGxpdCgiLyIpLGk9W10sbj0iIj09dFswXTtmb3IobiYmdC5zaGlmdCgpLCIiPT10WzBdP3Quc2hpZnQoKTpudWxsO3QubGVuZ3RoOyllPXQuc2hpZnQoKSwiLi4iPT1lP2kucG9wKCk6Ii4iIT1lJiZpLnB1c2goZSk7KCIuIj09ZXx8Ii4uIj09ZSkmJmkucHVzaCgiIiksbiYmaS51bnNoaWZ0KCIiKSx0aGlzLnBhdGg9aS5qb2luKCIvIil9LGUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGU9IiI7cmV0dXJuIHRoaXMuc2NoZW1lJiYoZSs9dGhpcy5zY2hlbWUrIjoiKSx0aGlzLmF1dGhvcml0eSYmKGUrPSIvLyIrdGhpcy5hdXRob3JpdHkpLGUrPXRoaXMucGF0aCx0aGlzLnF1ZXJ5JiYoZSs9Ij8iK3RoaXMucXVlcnkpLHRoaXMuZnJhZ21lbnQmJihlKz0iIyIrdGhpcy5mcmFnbWVudCksZX0sZX0pLGRlZmluZSgiQ29yZS9EZXZlbG9wZXJFcnJvciIsWyIuL2RlZmluZWQiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24oZSl7dGhpcy5uYW1lPSJEZXZlbG9wZXJFcnJvciIsdGhpcy5tZXNzYWdlPWU7dmFyIHQ7dHJ5e3Rocm93IG5ldyBFcnJvcn1jYXRjaChpKXt0PWkuc3RhY2t9dGhpcy5zdGFjaz10fTtyZXR1cm4gdC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5hbWUrIjogIit0aGlzLm1lc3NhZ2U7cmV0dXJuIGUodGhpcy5zdGFjaykmJih0Kz0iXG4iK3RoaXMuc3RhY2sudG9TdHJpbmcoKSksdH0sdC50aHJvd0luc3RhbnRpYXRpb25FcnJvcj1mdW5jdGlvbigpe3Rocm93IG5ldyB0KCJUaGlzIGZ1bmN0aW9uIGRlZmluZXMgYW4gaW50ZXJmYWNlIGFuZCBzaG91bGQgbm90IGJlIGNhbGxlZCBkaXJlY3RseS4iKX0sdH0pLGRlZmluZSgiQ29yZS9nZXRGaWxlbmFtZUZyb21VcmkiLFsiLi4vVGhpcmRQYXJ0eS9VcmkiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQpe3ZhciBpPW5ldyBlKHQpO2kubm9ybWFsaXplKCk7dmFyIG49aS5wYXRoLHI9bi5sYXN0SW5kZXhPZigiLyIpO3JldHVybi0xIT09ciYmKG49bi5zdWJzdHIocisxKSksbn07cmV0dXJuIHR9KSxkZWZpbmUoIkNvcmUvZnJlZXplT2JqZWN0IixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1PYmplY3QuZnJlZXplO3JldHVybiBlKHQpfHwodD1mdW5jdGlvbihlKXtyZXR1cm4gZX0pLHR9KSxkZWZpbmUoIkNvcmUvZGVmYXVsdFZhbHVlIixbIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMCE9PWU/ZTp0fTtyZXR1cm4gdC5FTVBUWV9PQkpFQ1Q9ZSh7fSksdH0pLGRlZmluZSgiVGhpcmRQYXJ0eS9tZXJzZW5uZS10d2lzdGVyIixbXSxmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKGUpe3ZvaWQgMD09ZSYmKGU9KG5ldyBEYXRlKS5nZXRUaW1lKCkpLHRoaXMuTj02MjQsdGhpcy5NPTM5Nyx0aGlzLk1BVFJJWF9BPTI1Njc0ODM2MTUsdGhpcy5VUFBFUl9NQVNLPTIxNDc0ODM2NDgsdGhpcy5MT1dFUl9NQVNLPTIxNDc0ODM2NDcsdGhpcy5tdD1uZXcgQXJyYXkodGhpcy5OKSx0aGlzLm10aT10aGlzLk4rMSx0aGlzLmluaXRfZ2VucmFuZChlKX07cmV0dXJuIGUucHJvdG90eXBlLmluaXRfZ2VucmFuZD1mdW5jdGlvbihlKXtmb3IodGhpcy5tdFswXT1lPj4+MCx0aGlzLm10aT0xO3RoaXMubXRpPHRoaXMuTjt0aGlzLm10aSsrKXt2YXIgZT10aGlzLm10W3RoaXMubXRpLTFdXnRoaXMubXRbdGhpcy5tdGktMV0+Pj4zMDt0aGlzLm10W3RoaXMubXRpXT0oMTgxMjQzMzI1MyooKDQyOTQ5MDE3NjAmZSk+Pj4xNik8PDE2KSsxODEyNDMzMjUzKig2NTUzNSZlKSt0aGlzLm10aSx0aGlzLm10W3RoaXMubXRpXT4+Pj0wfX0sZS5wcm90b3R5cGUuZ2VucmFuZF9pbnQzMj1mdW5jdGlvbigpe3ZhciBlLHQ9bmV3IEFycmF5KDAsdGhpcy5NQVRSSVhfQSk7aWYodGhpcy5tdGk+PXRoaXMuTil7dmFyIGk7Zm9yKHRoaXMubXRpPT10aGlzLk4rMSYmdGhpcy5pbml0X2dlbnJhbmQoNTQ4OSksaT0wO2k8dGhpcy5OLXRoaXMuTTtpKyspZT10aGlzLm10W2ldJnRoaXMuVVBQRVJfTUFTS3x0aGlzLm10W2krMV0mdGhpcy5MT1dFUl9NQVNLLHRoaXMubXRbaV09dGhpcy5tdFtpK3RoaXMuTV1eZT4+PjFedFsxJmVdO2Zvcig7aTx0aGlzLk4tMTtpKyspZT10aGlzLm10W2ldJnRoaXMuVVBQRVJfTUFTS3x0aGlzLm10W2krMV0mdGhpcy5MT1dFUl9NQVNLLHRoaXMubXRbaV09dGhpcy5tdFtpKyh0aGlzLk0tdGhpcy5OKV1eZT4+PjFedFsxJmVdO2U9dGhpcy5tdFt0aGlzLk4tMV0mdGhpcy5VUFBFUl9NQVNLfHRoaXMubXRbMF0mdGhpcy5MT1dFUl9NQVNLLHRoaXMubXRbdGhpcy5OLTFdPXRoaXMubXRbdGhpcy5NLTFdXmU+Pj4xXnRbMSZlXSx0aGlzLm10aT0wfXJldHVybiBlPXRoaXMubXRbdGhpcy5tdGkrK10sZV49ZT4+PjExLGVePTI2MzY5Mjg2NDAmZTw8NyxlXj00MDIyNzMwNzUyJmU8PDE1LGVePWU+Pj4xOCxlPj4+MH0sZS5wcm90b3R5cGUucmFuZG9tPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2VucmFuZF9pbnQzMigpKigxLzQyOTQ5NjcyOTYpfSxlfSksZGVmaW5lKCJDb3JlL01hdGgiLFsiLi4vVGhpcmRQYXJ0eS9tZXJzZW5uZS10d2lzdGVyIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9e307aS5FUFNJTE9OMT0uMSxpLkVQU0lMT04yPS4wMSxpLkVQU0lMT04zPS4wMDEsaS5FUFNJTE9OND0xZS00LGkuRVBTSUxPTjU9MWUtNSxpLkVQU0lMT042PTFlLTYsaS5FUFNJTE9ONz0xZS03LGkuRVBTSUxPTjg9MWUtOCxpLkVQU0lMT045PTFlLTksaS5FUFNJTE9OMTA9MWUtMTAsaS5FUFNJTE9OMTE9MWUtMTEsaS5FUFNJTE9OMTI9MWUtMTIsaS5FUFNJTE9OMTM9MWUtMTMsaS5FUFNJTE9OMTQ9MWUtMTQsaS5FUFNJTE9OMTU9MWUtMTUsaS5FUFNJTE9OMTY9MWUtMTYsaS5FUFNJTE9OMTc9MWUtMTcsaS5FUFNJTE9OMTg9MWUtMTgsaS5FUFNJTE9OMTk9MWUtMTksaS5FUFNJTE9OMjA9MWUtMjAsaS5HUkFWSVRBVElPTkFMUEFSQU1FVEVSPTM5ODYwMDQ0MThlNSxpLlNPTEFSX1JBRElVUz02OTU1ZTUsaS5MVU5BUl9SQURJVVM9MTczNzQwMCxpLlNJWFRZX0ZPVVJfS0lMT0JZVEVTPTY1NTM2LGkuc2lnbj1mdW5jdGlvbihlKXtyZXR1cm4gZT4wPzE6MD5lPy0xOjB9LGkuc2lnbk5vdFplcm89ZnVuY3Rpb24oZSl7cmV0dXJuIDA+ZT8tMToxfSxpLnRvU05vcm09ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgucm91bmQoMjU1KiguNSppLmNsYW1wKGUsLTEsMSkrLjUpKX0saS5mcm9tU05vcm09ZnVuY3Rpb24oZSl7cmV0dXJuIDIqKGkuY2xhbXAoZSwwLDI1NSkvMjU1KS0xfSxpLnNpbmg9ZnVuY3Rpb24oZSl7dmFyIHQ9TWF0aC5wb3coTWF0aC5FLGUpLGk9TWF0aC5wb3coTWF0aC5FLC0xKmUpO3JldHVybi41Kih0LWkpfSxpLmNvc2g9ZnVuY3Rpb24oZSl7dmFyIHQ9TWF0aC5wb3coTWF0aC5FLGUpLGk9TWF0aC5wb3coTWF0aC5FLC0xKmUpO3JldHVybi41Kih0K2kpfSxpLmxlcnA9ZnVuY3Rpb24oZSx0LGkpe3JldHVybigxLWkpKmUraSp0fSxpLlBJPU1hdGguUEksaS5PTkVfT1ZFUl9QST0xL01hdGguUEksaS5QSV9PVkVSX1RXTz0uNSpNYXRoLlBJLGkuUElfT1ZFUl9USFJFRT1NYXRoLlBJLzMsaS5QSV9PVkVSX0ZPVVI9TWF0aC5QSS80LGkuUElfT1ZFUl9TSVg9TWF0aC5QSS82LGkuVEhSRUVfUElfT1ZFUl9UV089LjUqMypNYXRoLlBJLGkuVFdPX1BJPTIqTWF0aC5QSSxpLk9ORV9PVkVSX1RXT19QST0xLygyKk1hdGguUEkpLGkuUkFESUFOU19QRVJfREVHUkVFPU1hdGguUEkvMTgwLGkuREVHUkVFU19QRVJfUkFESUFOPTE4MC9NYXRoLlBJLGkuUkFESUFOU19QRVJfQVJDU0VDT05EPWkuUkFESUFOU19QRVJfREVHUkVFLzM2MDAsaS50b1JhZGlhbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIGUqaS5SQURJQU5TX1BFUl9ERUdSRUV9LGkudG9EZWdyZWVzPWZ1bmN0aW9uKGUpe3JldHVybiBlKmkuREVHUkVFU19QRVJfUkFESUFOfSxpLmNvbnZlcnRMb25naXR1ZGVSYW5nZT1mdW5jdGlvbihlKXt2YXIgdD1pLlRXT19QSSxuPWUtTWF0aC5mbG9vcihlL3QpKnQ7cmV0dXJuIG48LU1hdGguUEk/bit0Om4+PU1hdGguUEk/bi10Om59LGkubmVnYXRpdmVQaVRvUGk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWkuRVBTSUxPTjEwLG49aS5QSSxyPWkuVFdPX1BJOy0obit0KT5lOyllKz1yO2lmKC1uPmUpcmV0dXJuLW47Zm9yKDtlPm4rdDspZS09cjtyZXR1cm4gZT5uP246ZX0saS56ZXJvVG9Ud29QaT1mdW5jdGlvbihlKXt2YXIgdD1lJWkuVFdPX1BJO3JldHVybiAwPnQ/KHQraS5UV09fUEkpJWkuVFdPX1BJOnR9LGkuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLGksbil7cmV0dXJuIG49dChuLDApLE1hdGguYWJzKGUtaSk8PW59O3ZhciBuPVsxXTtpLmZhY3RvcmlhbD1mdW5jdGlvbihlKXt2YXIgdD1uLmxlbmd0aDtpZihlPj10KWZvcih2YXIgaT1uW3QtMV0scj10O2U+PXI7cisrKW4ucHVzaChpKnIpO3JldHVybiBuW2VdfSxpLmluY3JlbWVudFdyYXA9ZnVuY3Rpb24oZSxpLG4pe3JldHVybiBuPXQobiwwKSwrK2UsZT5pJiYoZT1uKSxlfSxpLmlzUG93ZXJPZlR3bz1mdW5jdGlvbihlKXtyZXR1cm4gMCE9PWUmJjA9PT0oZSZlLTEpfSxpLm5leHRQb3dlck9mVHdvPWZ1bmN0aW9uKGUpe3JldHVybi0tZSxlfD1lPj4xLGV8PWU+PjIsZXw9ZT4+NCxlfD1lPj44LGV8PWU+PjE2LCsrZSxlfSxpLmNsYW1wPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gdD5lP3Q6ZT5pP2k6ZX07dmFyIHI9bmV3IGU7cmV0dXJuIGkuc2V0UmFuZG9tTnVtYmVyU2VlZD1mdW5jdGlvbih0KXtyPW5ldyBlKHQpfSxpLm5leHRSYW5kb21OdW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4gci5yYW5kb20oKX0saS5hY29zQ2xhbXBlZD1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5hY29zKGkuY2xhbXAoZSwtMSwxKSl9LGkuYXNpbkNsYW1wZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguYXNpbihpLmNsYW1wKGUsLTEsMSkpfSxpfSksZGVmaW5lKCJDb3JlL0NhcnRlc2lhbjIiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9mcmVlemVPYmplY3QiLCIuL01hdGgiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LGkpe3RoaXMueD1lKHQsMCksdGhpcy55PWUoaSwwKX07by5mcm9tRWxlbWVudHM9ZnVuY3Rpb24oZSxpLG4pe3JldHVybiB0KG4pPyhuLng9ZSxuLnk9aSxuKTpuZXcgbyhlLGkpfSxvLmNsb25lPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHQoZSk/dChpKT8oaS54PWUueCxpLnk9ZS55LGkpOm5ldyBvKGUueCxlLnkpOnZvaWQgMH0sby5mcm9tQ2FydGVzaWFuMz1vLmNsb25lLG8uZnJvbUNhcnRlc2lhbjQ9by5jbG9uZSxvLnBhY2tlZExlbmd0aD0yLG8ucGFjaz1mdW5jdGlvbih0LGksbil7bj1lKG4sMCksaVtuKytdPXQueCxpW25dPXQueX0sby51bnBhY2s9ZnVuY3Rpb24oaSxuLHIpe3JldHVybiBuPWUobiwwKSx0KHIpfHwocj1uZXcgbyksci54PWlbbisrXSxyLnk9aVtuXSxyfSxvLmZyb21BcnJheT1vLnVucGFjayxvLm1heGltdW1Db21wb25lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgubWF4KGUueCxlLnkpfSxvLm1pbmltdW1Db21wb25lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgubWluKGUueCxlLnkpfSxvLm1pbmltdW1CeUNvbXBvbmVudD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1NYXRoLm1pbihlLngsdC54KSxpLnk9TWF0aC5taW4oZS55LHQueSksaX0sby5tYXhpbXVtQnlDb21wb25lbnQ9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9TWF0aC5tYXgoZS54LHQueCksaS55PU1hdGgubWF4KGUueSx0LnkpLGl9LG8ubWFnbml0dWRlU3F1YXJlZD1mdW5jdGlvbihlKXtyZXR1cm4gZS54KmUueCtlLnkqZS55fSxvLm1hZ25pdHVkZT1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5zcXJ0KG8ubWFnbml0dWRlU3F1YXJlZChlKSl9O3ZhciBhPW5ldyBvO28uZGlzdGFuY2U9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5zdWJ0cmFjdChlLHQsYSksby5tYWduaXR1ZGUoYSl9LG8ubm9ybWFsaXplPWZ1bmN0aW9uKGUsdCl7dmFyIGk9by5tYWduaXR1ZGUoZSk7cmV0dXJuIHQueD1lLngvaSx0Lnk9ZS55L2ksdH0sby5kb3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS54KnQueCtlLnkqdC55fSxvLm11bHRpcGx5Q29tcG9uZW50cz1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngqdC54LGkueT1lLnkqdC55LGl9LG8uYWRkPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PWUueCt0LngsaS55PWUueSt0LnksaX0sby5zdWJ0cmFjdD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngtdC54LGkueT1lLnktdC55LGl9LG8ubXVsdGlwbHlCeVNjYWxhcj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngqdCxpLnk9ZS55KnQsaX0sby5kaXZpZGVCeVNjYWxhcj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngvdCxpLnk9ZS55L3QsaX0sby5uZWdhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PS1lLngsdC55PS1lLnksdH0sby5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PU1hdGguYWJzKGUueCksdC55PU1hdGguYWJzKGUueSksdH07dmFyIHM9bmV3IG87by5sZXJwPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBvLm11bHRpcGx5QnlTY2FsYXIodCxpLHMpLG49by5tdWx0aXBseUJ5U2NhbGFyKGUsMS1pLG4pLG8uYWRkKHMsbixuKX07dmFyIGw9bmV3IG8sdT1uZXcgbztvLmFuZ2xlQmV0d2Vlbj1mdW5jdGlvbihlLHQpe3JldHVybiBvLm5vcm1hbGl6ZShlLGwpLG8ubm9ybWFsaXplKHQsdSksci5hY29zQ2xhbXBlZChvLmRvdChsLHUpKX07dmFyIGM9bmV3IG87cmV0dXJuIG8ubW9zdE9ydGhvZ29uYWxBeGlzPWZ1bmN0aW9uKGUsdCl7dmFyIGk9by5ub3JtYWxpemUoZSxjKTtyZXR1cm4gby5hYnMoaSxpKSx0PWkueDw9aS55P28uY2xvbmUoby5VTklUX1gsdCk6by5jbG9uZShvLlVOSVRfWSx0KX0sby5lcXVhbHM9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJmUueD09PWkueCYmZS55PT09aS55fSxvLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSxpLG4pe3JldHVybiBlPT09aXx8dChlKSYmdChpKSYmTWF0aC5hYnMoZS54LWkueCk8PW4mJk1hdGguYWJzKGUueS1pLnkpPD1ufSxvLlpFUk89bihuZXcgbygwLDApKSxvLlVOSVRfWD1uKG5ldyBvKDEsMCkpLG8uVU5JVF9ZPW4obmV3IG8oMCwxKSksby5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uY2xvbmUodGhpcyxlKX0sby5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBvLmVxdWFscyh0aGlzLGUpfSxvLnByb3RvdHlwZS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uZXF1YWxzRXBzaWxvbih0aGlzLGUsdCl9LG8ucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIigiK3RoaXMueCsiLCAiK3RoaXMueSsiKSJ9LG99KSxkZWZpbmUoIkNvcmUvQ2FydGVzaWFuMyIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vTWF0aCJdLGZ1bmN0aW9uKGUsdCxpLG4scil7InVzZSBzdHJpY3QiO3ZhciBvPWZ1bmN0aW9uKHQsaSxuKXt0aGlzLng9ZSh0LDApLHRoaXMueT1lKGksMCksdGhpcy56PWUobiwwKX07by5mcm9tU3BoZXJpY2FsPWZ1bmN0aW9uKGksbil7dChuKXx8KG49bmV3IG8pO3ZhciByPWkuY2xvY2ssYT1pLmNvbmUscz1lKGkubWFnbml0dWRlLDEpLGw9cypNYXRoLnNpbihhKTtyZXR1cm4gbi54PWwqTWF0aC5jb3Mociksbi55PWwqTWF0aC5zaW4ociksbi56PXMqTWF0aC5jb3MoYSksbn0sby5mcm9tRWxlbWVudHM9ZnVuY3Rpb24oZSxpLG4scil7cmV0dXJuIHQocik/KHIueD1lLHIueT1pLHIuej1uLHIpOm5ldyBvKGUsaSxuKX0sby5jbG9uZT1mdW5jdGlvbihlLGkpe3JldHVybiB0KGUpP3QoaSk/KGkueD1lLngsaS55PWUueSxpLno9ZS56LGkpOm5ldyBvKGUueCxlLnksZS56KTp2b2lkIDB9LG8uZnJvbUNhcnRlc2lhbjQ9by5jbG9uZSxvLnBhY2tlZExlbmd0aD0zLG8ucGFjaz1mdW5jdGlvbih0LGksbil7bj1lKG4sMCksaVtuKytdPXQueCxpW24rK109dC55LGlbbl09dC56fSxvLnVucGFjaz1mdW5jdGlvbihpLG4scil7cmV0dXJuIG49ZShuLDApLHQocil8fChyPW5ldyBvKSxyLng9aVtuKytdLHIueT1pW24rK10sci56PWlbbl0scn0sby5mcm9tQXJyYXk9by51bnBhY2ssby5tYXhpbXVtQ29tcG9uZW50PWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1heChlLngsZS55LGUueil9LG8ubWluaW11bUNvbXBvbmVudD1mdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5taW4oZS54LGUueSxlLnopfSxvLm1pbmltdW1CeUNvbXBvbmVudD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1NYXRoLm1pbihlLngsdC54KSxpLnk9TWF0aC5taW4oZS55LHQueSksaS56PU1hdGgubWluKGUueix0LnopLGl9LG8ubWF4aW11bUJ5Q29tcG9uZW50PWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PU1hdGgubWF4KGUueCx0LngpLGkueT1NYXRoLm1heChlLnksdC55KSxpLno9TWF0aC5tYXgoZS56LHQueiksaX0sby5tYWduaXR1ZGVTcXVhcmVkPWZ1bmN0aW9uKGUpe3JldHVybiBlLngqZS54K2UueSplLnkrZS56KmUuen0sby5tYWduaXR1ZGU9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguc3FydChvLm1hZ25pdHVkZVNxdWFyZWQoZSkpfTt2YXIgYT1uZXcgbztvLmRpc3RhbmNlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8uc3VidHJhY3QoZSx0LGEpLG8ubWFnbml0dWRlKGEpfSxvLm5vcm1hbGl6ZT1mdW5jdGlvbihlLHQpe3ZhciBpPW8ubWFnbml0dWRlKGUpO3JldHVybiB0Lng9ZS54L2ksdC55PWUueS9pLHQuej1lLnovaSx0fSxvLmRvdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLngqdC54K2UueSp0LnkrZS56KnQuen0sby5tdWx0aXBseUNvbXBvbmVudHM9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54KnQueCxpLnk9ZS55KnQueSxpLno9ZS56KnQueixpfSxvLmFkZD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngrdC54LGkueT1lLnkrdC55LGkuej1lLnordC56LGl9LG8uc3VidHJhY3Q9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54LXQueCxpLnk9ZS55LXQueSxpLno9ZS56LXQueixpfSxvLm11bHRpcGx5QnlTY2FsYXI9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54KnQsaS55PWUueSp0LGkuej1lLnoqdCxpfSxvLmRpdmlkZUJ5U2NhbGFyPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PWUueC90LGkueT1lLnkvdCxpLno9ZS56L3QsaX0sby5uZWdhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PS1lLngsdC55PS1lLnksdC56PS1lLnosdH0sby5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PU1hdGguYWJzKGUueCksdC55PU1hdGguYWJzKGUueSksdC56PU1hdGguYWJzKGUueiksdH07dmFyIHM9bmV3IG87by5sZXJwPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBvLm11bHRpcGx5QnlTY2FsYXIodCxpLHMpLG49by5tdWx0aXBseUJ5U2NhbGFyKGUsMS1pLG4pLG8uYWRkKHMsbixuKX07dmFyIGw9bmV3IG8sdT1uZXcgbztvLmFuZ2xlQmV0d2Vlbj1mdW5jdGlvbihlLHQpe28ubm9ybWFsaXplKGUsbCksby5ub3JtYWxpemUodCx1KTt2YXIgaT1vLmRvdChsLHUpLG49by5tYWduaXR1ZGUoby5jcm9zcyhsLHUsbCkpO3JldHVybiBNYXRoLmF0YW4yKG4saSl9O3ZhciBjPW5ldyBvO28ubW9zdE9ydGhvZ29uYWxBeGlzPWZ1bmN0aW9uKGUsdCl7dmFyIGk9by5ub3JtYWxpemUoZSxjKTtyZXR1cm4gby5hYnMoaSxpKSx0PWkueDw9aS55P2kueDw9aS56P28uY2xvbmUoby5VTklUX1gsdCk6by5jbG9uZShvLlVOSVRfWix0KTppLnk8PWkuej9vLmNsb25lKG8uVU5JVF9ZLHQpOm8uY2xvbmUoby5VTklUX1osdCl9LG8uZXF1YWxzPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIGU9PT1pfHx0KGUpJiZ0KGkpJiZlLng9PT1pLngmJmUueT09PWkueSYmZS56PT09aS56fSxvLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSxpLG4pe3JldHVybiBlPT09aXx8dChlKSYmdChpKSYmTWF0aC5hYnMoZS54LWkueCk8PW4mJk1hdGguYWJzKGUueS1pLnkpPD1uJiZNYXRoLmFicyhlLnotaS56KTw9bn0sby5jcm9zcz1mdW5jdGlvbihlLHQsaSl7dmFyIG49ZS54LHI9ZS55LG89ZS56LGE9dC54LHM9dC55LGw9dC56LHU9cipsLW8qcyxjPW8qYS1uKmwsZD1uKnMtciphO3JldHVybiBpLng9dSxpLnk9YyxpLno9ZCxpfSxvLmZyb21EZWdyZWVzPWZ1bmN0aW9uKGUsdCxpLG4sYSl7dmFyIHM9ci50b1JhZGlhbnMoZSksbD1yLnRvUmFkaWFucyh0KTtyZXR1cm4gby5mcm9tUmFkaWFucyhzLGwsaSxuLGEpfTt2YXIgZD1uZXcgbyxoPW5ldyBvLG09bmV3IG8oNDA2ODA2MzE1OTA3NjksNDA2ODA2MzE1OTA3NjksNDA0MDgyOTk5ODQ2NjEuNDQ1KTtyZXR1cm4gby5mcm9tUmFkaWFucz1mdW5jdGlvbihpLG4scixhLHMpe3I9ZShyLDApO3ZhciBsPXQoYSk/YS5yYWRpaVNxdWFyZWQ6bSx1PU1hdGguY29zKG4pO2QueD11Kk1hdGguY29zKGkpLGQueT11Kk1hdGguc2luKGkpLGQuej1NYXRoLnNpbihuKSxkPW8ubm9ybWFsaXplKGQsZCksby5tdWx0aXBseUNvbXBvbmVudHMobCxkLGgpO3ZhciBjPU1hdGguc3FydChvLmRvdChkLGgpKTtyZXR1cm4gaD1vLmRpdmlkZUJ5U2NhbGFyKGgsYyxoKSxkPW8ubXVsdGlwbHlCeVNjYWxhcihkLHIsZCksdChzKXx8KHM9bmV3IG8pLG8uYWRkKGgsZCxzKX0sby5mcm9tRGVncmVlc0FycmF5PWZ1bmN0aW9uKGUsdCxpKXtmb3IodmFyIG49bmV3IEFycmF5KGUubGVuZ3RoKSxhPTA7YTxlLmxlbmd0aDthKyspblthXT1yLnRvUmFkaWFucyhlW2FdKTtyZXR1cm4gby5mcm9tUmFkaWFuc0FycmF5KG4sdCxpKX0sby5mcm9tUmFkaWFuc0FycmF5PWZ1bmN0aW9uKGUsaSxuKXt2YXIgcj1lLmxlbmd0aDt0KG4pP24ubGVuZ3RoPXIvMjpuPW5ldyBBcnJheShyLzIpO2Zvcih2YXIgYT0wO3I+YTthKz0yKXt2YXIgcz1lW2FdLGw9ZVthKzFdO25bYS8yXT1vLmZyb21SYWRpYW5zKHMsbCwwLGksblthLzJdKX1yZXR1cm4gbn0sby5mcm9tRGVncmVlc0FycmF5SGVpZ2h0cz1mdW5jdGlvbihlLHQsaSl7Zm9yKHZhciBuPW5ldyBBcnJheShlLmxlbmd0aCksYT0wO2E8ZS5sZW5ndGg7YSs9MyluW2FdPXIudG9SYWRpYW5zKGVbYV0pLG5bYSsxXT1yLnRvUmFkaWFucyhlW2ErMV0pLG5bYSsyXT1lW2ErMl07cmV0dXJuIG8uZnJvbVJhZGlhbnNBcnJheUhlaWdodHMobix0LGkpfSxvLmZyb21SYWRpYW5zQXJyYXlIZWlnaHRzPWZ1bmN0aW9uKGUsaSxuKXt2YXIgcj1lLmxlbmd0aDt0KG4pP24ubGVuZ3RoPXIvMzpuPW5ldyBBcnJheShyLzMpO2Zvcih2YXIgYT0wO3I+YTthKz0zKXt2YXIgcz1lW2FdLGw9ZVthKzFdLHU9ZVthKzJdO25bYS8zXT1vLmZyb21SYWRpYW5zKHMsbCx1LGksblthLzNdKX1yZXR1cm4gbn0sby5aRVJPPW4obmV3IG8oMCwwLDApKSxvLlVOSVRfWD1uKG5ldyBvKDEsMCwwKSksby5VTklUX1k9bihuZXcgbygwLDEsMCkpLG8uVU5JVF9aPW4obmV3IG8oMCwwLDEpKSxvLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gby5jbG9uZSh0aGlzLGUpfSxvLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZXF1YWxzKHRoaXMsZSl9LG8ucHJvdG90eXBlLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5lcXVhbHNFcHNpbG9uKHRoaXMsZSx0KX0sby5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iKCIrdGhpcy54KyIsICIrdGhpcy55KyIsICIrdGhpcy56KyIpIn0sb30pLGRlZmluZSgiQ29yZS9DYXJ0b2dyYXBoaWMiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9mcmVlemVPYmplY3QiLCIuL01hdGgiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LGksbil7dGhpcy5sb25naXR1ZGU9ZSh0LDApLHRoaXMubGF0aXR1ZGU9ZShpLDApLHRoaXMuaGVpZ2h0PWUobiwwKX07cmV0dXJuIG8uZnJvbVJhZGlhbnM9ZnVuY3Rpb24oaSxuLHIsYSl7cmV0dXJuIHI9ZShyLDApLHQoYSk/KGEubG9uZ2l0dWRlPWksYS5sYXRpdHVkZT1uLGEuaGVpZ2h0PXIsYSk6bmV3IG8oaSxuLHIpfSxvLmZyb21EZWdyZWVzPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBlPXIudG9SYWRpYW5zKGUpLHQ9ci50b1JhZGlhbnModCksby5mcm9tUmFkaWFucyhlLHQsaSxuKX0sby5jbG9uZT1mdW5jdGlvbihlLGkpe3JldHVybiB0KGUpP3QoaSk/KGkubG9uZ2l0dWRlPWUubG9uZ2l0dWRlLGkubGF0aXR1ZGU9ZS5sYXRpdHVkZSxpLmhlaWdodD1lLmhlaWdodCxpKTpuZXcgbyhlLmxvbmdpdHVkZSxlLmxhdGl0dWRlLGUuaGVpZ2h0KTp2b2lkIDB9LG8uZXF1YWxzPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIGU9PT1pfHx0KGUpJiZ0KGkpJiZlLmxvbmdpdHVkZT09PWkubG9uZ2l0dWRlJiZlLmxhdGl0dWRlPT09aS5sYXRpdHVkZSYmZS5oZWlnaHQ9PT1pLmhlaWdodH0sby5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsaSxuKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJk1hdGguYWJzKGUubG9uZ2l0dWRlLWkubG9uZ2l0dWRlKTw9biYmTWF0aC5hYnMoZS5sYXRpdHVkZS1pLmxhdGl0dWRlKTw9biYmTWF0aC5hYnMoZS5oZWlnaHQtaS5oZWlnaHQpPD1ufSxvLlpFUk89bihuZXcgbygwLDAsMCkpLG8ucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiBvLmNsb25lKHRoaXMsZSl9LG8ucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gby5lcXVhbHModGhpcyxlKX0sby5wcm90b3R5cGUuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQpe3JldHVybiBvLmVxdWFsc0Vwc2lsb24odGhpcyxlLHQpfSxvLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzLmxvbmdpdHVkZSsiLCAiK3RoaXMubGF0aXR1ZGUrIiwgIit0aGlzLmhlaWdodCsiKSJ9LG99KSxkZWZpbmUoIkNvcmUvQ2xvY2tSYW5nZSIsWyIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17VU5CT1VOREVEOjAsQ0xBTVBFRDoxLExPT1BfU1RPUDoyfTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9DbG9ja1N0ZXAiLFsiLi9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e1RJQ0tfREVQRU5ERU5UOjAsU1lTVEVNX0NMT0NLX01VTFRJUExJRVI6MSxTWVNURU1fQ0xPQ0s6Mn07cmV0dXJuIGUodCl9KSxkZWZpbmUoIkNvcmUvZGVmaW5lUHJvcGVydGllcyIsWyIuL2RlZmluZWQiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIngiaW4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJ4Iix7fSl9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGk9T2JqZWN0LmRlZmluZVByb3BlcnRpZXM7cmV0dXJuIHQmJmUoaSl8fChpPWZ1bmN0aW9uKGUpe3JldHVybiBlfSksaX0pLGRlZmluZSgiQ29yZS9GdWxsc2NyZWVuIixbIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpLG49e3JlcXVlc3RGdWxsc2NyZWVuOnZvaWQgMCxleGl0RnVsbHNjcmVlbjp2b2lkIDAsZnVsbHNjcmVlbkVuYWJsZWQ6dm9pZCAwLGZ1bGxzY3JlZW5FbGVtZW50OnZvaWQgMCxmdWxsc2NyZWVuY2hhbmdlOnZvaWQgMCxmdWxsc2NyZWVuZXJyb3I6dm9pZCAwfSxyPXt9O3JldHVybiB0KHIse2VsZW1lbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiByLnN1cHBvcnRzRnVsbHNjcmVlbigpP2RvY3VtZW50W24uZnVsbHNjcmVlbkVsZW1lbnRdOnZvaWQgMH19LGNoYW5nZUV2ZW50TmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIuc3VwcG9ydHNGdWxsc2NyZWVuKCk/bi5mdWxsc2NyZWVuY2hhbmdlOnZvaWQgMH19LGVycm9yRXZlbnROYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5zdXBwb3J0c0Z1bGxzY3JlZW4oKT9uLmZ1bGxzY3JlZW5lcnJvcjp2b2lkIDB9fSxlbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5zdXBwb3J0c0Z1bGxzY3JlZW4oKT9kb2N1bWVudFtuLmZ1bGxzY3JlZW5FbmFibGVkXTp2b2lkIDB9fSxmdWxsc2NyZWVuOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gci5zdXBwb3J0c0Z1bGxzY3JlZW4oKT9udWxsIT09ci5lbGVtZW50OnZvaWQgMH19fSksci5zdXBwb3J0c0Z1bGxzY3JlZW49ZnVuY3Rpb24oKXtpZihlKGkpKXJldHVybiBpO2k9ITE7dmFyIHQ9ZG9jdW1lbnQuYm9keTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdC5yZXF1ZXN0RnVsbHNjcmVlbilyZXR1cm4gbi5yZXF1ZXN0RnVsbHNjcmVlbj0icmVxdWVzdEZ1bGxzY3JlZW4iLG4uZXhpdEZ1bGxzY3JlZW49ImV4aXRGdWxsc2NyZWVuIixuLmZ1bGxzY3JlZW5FbmFibGVkPSJmdWxsc2NyZWVuRW5hYmxlZCIsbi5mdWxsc2NyZWVuRWxlbWVudD0iZnVsbHNjcmVlbkVsZW1lbnQiLG4uZnVsbHNjcmVlbmNoYW5nZT0iZnVsbHNjcmVlbmNoYW5nZSIsbi5mdWxsc2NyZWVuZXJyb3I9ImZ1bGxzY3JlZW5lcnJvciIsaT0hMDtmb3IodmFyIHIsbz1bIndlYmtpdCIsIm1veiIsIm8iLCJtcyIsImtodG1sIl0sYT0wLHM9by5sZW5ndGg7cz5hOysrYSl7dmFyIGw9b1thXTtyPWwrIlJlcXVlc3RGdWxsc2NyZWVuIiwiZnVuY3Rpb24iPT10eXBlb2YgdFtyXT8obi5yZXF1ZXN0RnVsbHNjcmVlbj1yLGk9ITApOihyPWwrIlJlcXVlc3RGdWxsU2NyZWVuIiwiZnVuY3Rpb24iPT10eXBlb2YgdFtyXSYmKG4ucmVxdWVzdEZ1bGxzY3JlZW49cixpPSEwKSkscj1sKyJFeGl0RnVsbHNjcmVlbiIsImZ1bmN0aW9uIj09dHlwZW9mIGRvY3VtZW50W3JdP24uZXhpdEZ1bGxzY3JlZW49cjoocj1sKyJDYW5jZWxGdWxsU2NyZWVuIiwiZnVuY3Rpb24iPT10eXBlb2YgZG9jdW1lbnRbcl0mJihuLmV4aXRGdWxsc2NyZWVuPXIpKSxyPWwrIkZ1bGxzY3JlZW5FbmFibGVkIixlKGRvY3VtZW50W3JdKT9uLmZ1bGxzY3JlZW5FbmFibGVkPXI6KHI9bCsiRnVsbFNjcmVlbkVuYWJsZWQiLGUoZG9jdW1lbnRbcl0pJiYobi5mdWxsc2NyZWVuRW5hYmxlZD1yKSkscj1sKyJGdWxsc2NyZWVuRWxlbWVudCIsZShkb2N1bWVudFtyXSk/bi5mdWxsc2NyZWVuRWxlbWVudD1yOihyPWwrIkZ1bGxTY3JlZW5FbGVtZW50IixlKGRvY3VtZW50W3JdKSYmKG4uZnVsbHNjcmVlbkVsZW1lbnQ9cikpLHI9bCsiZnVsbHNjcmVlbmNoYW5nZSIsZShkb2N1bWVudFsib24iK3JdKSYmKCJtcyI9PT1sJiYocj0iTVNGdWxsc2NyZWVuQ2hhbmdlIiksbi5mdWxsc2NyZWVuY2hhbmdlPXIpLHI9bCsiZnVsbHNjcmVlbmVycm9yIixlKGRvY3VtZW50WyJvbiIrcl0pJiYoIm1zIj09PWwmJihyPSJNU0Z1bGxzY3JlZW5FcnJvciIpLG4uZnVsbHNjcmVlbmVycm9yPXIpfXJldHVybiBpfSxyLnJlcXVlc3RGdWxsc2NyZWVuPWZ1bmN0aW9uKGUpe3Iuc3VwcG9ydHNGdWxsc2NyZWVuKCkmJmVbbi5yZXF1ZXN0RnVsbHNjcmVlbl0oKX0sci5leGl0RnVsbHNjcmVlbj1mdW5jdGlvbigpe3Iuc3VwcG9ydHNGdWxsc2NyZWVuKCkmJmRvY3VtZW50W24uZXhpdEZ1bGxzY3JlZW5dKCl9LHJ9KSxkZWZpbmUoIkNvcmUvRmVhdHVyZURldGVjdGlvbiIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRnVsbHNjcmVlbiJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtmb3IodmFyIHQ9ZS5zcGxpdCgiLiIpLGk9MCxuPXQubGVuZ3RoO24+aTsrK2kpdFtpXT1wYXJzZUludCh0W2ldLDEwKTtyZXR1cm4gdH1mdW5jdGlvbiByKCl7aWYoIXQoaCkpe3ZhciBlPS8gQ2hyb21lXC8oW1wuMC05XSspLy5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQpO251bGw9PT1lP2g9ITE6KGg9ITAsbT1uKGVbMV0pKX1yZXR1cm4gaH1mdW5jdGlvbiBvKCl7cmV0dXJuIHIoKSYmbX1mdW5jdGlvbiBhKCl7aWYoIXQoZikpaWYocigpfHwhLyBTYWZhcmlcL1tcLjAtOV0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKWY9ITE7ZWxzZXt2YXIgZT0vIFZlcnNpb25cLyhbXC4wLTldKykvLmV4ZWMobmF2aWdhdG9yLnVzZXJBZ2VudCk7bnVsbD09PWU/Zj0hMTooZj0hMCxwPW4oZVsxXSkpfXJldHVybiBmfWZ1bmN0aW9uIHMoKXtyZXR1cm4gYSgpJiZwfWZ1bmN0aW9uIGwoKXtpZighdCh2KSl7dmFyIGU9LyBBcHBsZVdlYktpdFwvKFtcLjAtOV0rKShcKz8pLy5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQpO251bGw9PT1lP3Y9ITE6KHY9ITAsZz1uKGVbMV0pLGcuaXNOaWdodGx5PSEhZVsyXSl9cmV0dXJuIHZ9ZnVuY3Rpb24gdSgpe3JldHVybiBsKCkmJmd9ZnVuY3Rpb24gYygpe2lmKCF0KF8pKXt2YXIgZTsiTWljcm9zb2Z0IEludGVybmV0IEV4cGxvcmVyIj09PW5hdmlnYXRvci5hcHBOYW1lPyhlPS9NU0lFIChbMC05XXsxLH1bXC4wLTldezAsfSkvLmV4ZWMobmF2aWdhdG9yLnVzZXJBZ2VudCksbnVsbCE9PWUmJihfPSEwLHk9bihlWzFdKSkpOiJOZXRzY2FwZSI9PT1uYXZpZ2F0b3IuYXBwTmFtZT8oZT0vVHJpZGVudFwvLipydjooWzAtOV17MSx9W1wuMC05XXswLH0pLy5leGVjKG5hdmlnYXRvci51c2VyQWdlbnQpLG51bGwhPT1lJiYoXz0hMCx5PW4oZVsxXSkpKTpfPSExfXJldHVybiBffWZ1bmN0aW9uIGQoKXtyZXR1cm4gYygpJiZ5fXZhciBoLG0sZixwLHYsZyxfLHksQz17aXNDaHJvbWU6cixjaHJvbWVWZXJzaW9uOm8saXNTYWZhcmk6YSxzYWZhcmlWZXJzaW9uOnMsaXNXZWJraXQ6bCx3ZWJraXRWZXJzaW9uOnUsaXNJbnRlcm5ldEV4cGxvcmVyOmMsaW50ZXJuZXRFeHBsb3JlclZlcnNpb246ZCxoYXJkd2FyZUNvbmN1cnJlbmN5OmUobmF2aWdhdG9yLmhhcmR3YXJlQ29uY3VycmVuY3ksMyl9O3JldHVybiBDLnN1cHBvcnRzRnVsbHNjcmVlbj1mdW5jdGlvbigpe3JldHVybiBpLnN1cHBvcnRzRnVsbHNjcmVlbigpfSxDLnN1cHBvcnRzVHlwZWRBcnJheXM9ZnVuY3Rpb24oKXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyfSxDLnN1cHBvcnRzV2ViV29ya2Vycz1mdW5jdGlvbigpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgV29ya2VyfSxDfSksZGVmaW5lKCJDb3JlL0NvbG9yIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRmVhdHVyZURldGVjdGlvbiIsIi4vZnJlZXplT2JqZWN0IiwiLi9NYXRoIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhKGUsdCxpKXtyZXR1cm4gMD5pJiYoaSs9MSksaT4xJiYoaS09MSksMT42Kmk/ZSs2Kih0LWUpKmk6MT4yKmk/dDoyPjMqaT9lKzYqKHQtZSkqKDIvMy1pKTplfXZhciBzPWZ1bmN0aW9uKHQsaSxuLHIpe3RoaXMucmVkPWUodCwxKSx0aGlzLmdyZWVuPWUoaSwxKSx0aGlzLmJsdWU9ZShuLDEpLHRoaXMuYWxwaGE9ZShyLDEpfTtzLmZyb21DYXJ0ZXNpYW40PWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHQoaSk/KGkucmVkPWUueCxpLmdyZWVuPWUueSxpLmJsdWU9ZS56LGkuYWxwaGE9ZS53LGkpOm5ldyBzKGUueCxlLnksZS56LGUudyl9LHMuZnJvbUJ5dGVzPWZ1bmN0aW9uKHQsaSxuLHIpe3JldHVybiB0PXMuYnl0ZVRvRmxvYXQoZSh0LDI1NSkpLGk9cy5ieXRlVG9GbG9hdChlKGksMjU1KSksbj1zLmJ5dGVUb0Zsb2F0KGUobiwyNTUpKSxyPXMuYnl0ZVRvRmxvYXQoZShyLDI1NSkpLG5ldyBzKHQsaSxuLHIpfTt2YXIgbCx1LGM7bi5zdXBwb3J0c1R5cGVkQXJyYXlzKCkmJihsPW5ldyBBcnJheUJ1ZmZlcig0KSx1PW5ldyBVaW50MzJBcnJheShsKSxjPW5ldyBVaW50OEFycmF5KGwpKSxzLmZyb21SZ2JhPWZ1bmN0aW9uKGUpe3JldHVybiB1WzBdPWUscy5mcm9tQnl0ZXMoY1swXSxjWzFdLGNbMl0sY1szXSl9LHMuZnJvbUhzbD1mdW5jdGlvbih0LGksbixyKXt0PWUodCwwKSUxLGk9ZShpLDApLG49ZShuLDApLHI9ZShyLDEpO3ZhciBvPW4sbD1uLHU9bjtpZigwIT09aSl7dmFyIGM7Yz0uNT5uP24qKDEraSk6bitpLW4qaTt2YXIgZD0yKm4tYztvPWEoZCxjLHQrMS8zKSxsPWEoZCxjLHQpLHU9YShkLGMsdC0xLzMpfXJldHVybiBuZXcgcyhvLGwsdSxyKX0scy5mcm9tUmFuZG9tPWZ1bmN0aW9uKGksbil7aT1lKGksZS5FTVBUWV9PQkpFQ1QpO3ZhciByPWkucmVkO2lmKCF0KHIpKXt2YXIgYT1lKGkubWluaW11bVJlZCwwKSxsPWUoaS5tYXhpbXVtUmVkLDEpO3I9YStvLm5leHRSYW5kb21OdW1iZXIoKSoobC1hKX12YXIgdT1pLmdyZWVuO2lmKCF0KHUpKXt2YXIgYz1lKGkubWluaW11bUdyZWVuLDApLGQ9ZShpLm1heGltdW1HcmVlbiwxKTt1PWMrby5uZXh0UmFuZG9tTnVtYmVyKCkqKGQtYyl9dmFyIGg9aS5ibHVlO2lmKCF0KGgpKXt2YXIgbT1lKGkubWluaW11bUJsdWUsMCksZj1lKGkubWF4aW11bUJsdWUsMSk7aD1tK28ubmV4dFJhbmRvbU51bWJlcigpKihmLW0pfXZhciBwPWkuYWxwaGE7aWYoIXQocCkpe3ZhciB2PWUoaS5taW5pbXVtQWxwaGEsMCksZz1lKGkubWF4aW11bUFscGhhLDEpO3A9ditvLm5leHRSYW5kb21OdW1iZXIoKSooZy12KX1yZXR1cm4gdChuKT8obi5yZWQ9cixuLmdyZWVuPXUsbi5ibHVlPWgsbi5hbHBoYT1wLG4pOm5ldyBzKHIsdSxoLHApfTt2YXIgZD0vXiMoWzAtOWEtZl0pKFswLTlhLWZdKShbMC05YS1mXSkkL2ksaD0vXiMoWzAtOWEtZl17Mn0pKFswLTlhLWZdezJ9KShbMC05YS1mXXsyfSkkL2ksbT0vXnJnYmE/XChccyooWzAtOS5dKyU/KVxzKixccyooWzAtOS5dKyU/KVxzKixccyooWzAtOS5dKyU/KSg/OlxzKixccyooWzAtOS5dKykpP1xzKlwpJC9pLGY9L15oc2xhP1woXHMqKFswLTkuXSspXHMqLFxzKihbMC05Ll0rJSlccyosXHMqKFswLTkuXSslKSg/OlxzKixccyooWzAtOS5dKykpP1xzKlwpJC9pO3JldHVybiBzLmZyb21Dc3NDb2xvclN0cmluZz1mdW5jdGlvbihpKXt2YXIgbj1zW2kudG9VcHBlckNhc2UoKV07aWYodChuKSlyZXR1cm4gcy5jbG9uZShuKTt2YXIgcj1kLmV4ZWMoaSk7cmV0dXJuIG51bGwhPT1yP25ldyBzKHBhcnNlSW50KHJbMV0sMTYpLzE1LHBhcnNlSW50KHJbMl0sMTYpLzE1LHBhcnNlSW50KHJbM10sMTYpLzE1KToocj1oLmV4ZWMoaSksbnVsbCE9PXI/bmV3IHMocGFyc2VJbnQoclsxXSwxNikvMjU1LHBhcnNlSW50KHJbMl0sMTYpLzI1NSxwYXJzZUludChyWzNdLDE2KS8yNTUpOihyPW0uZXhlYyhpKSxudWxsIT09cj9uZXcgcyhwYXJzZUZsb2F0KHJbMV0pLygiJSI9PT1yWzFdLnN1YnN0cigtMSk/MTAwOjI1NSkscGFyc2VGbG9hdChyWzJdKS8oIiUiPT09clsyXS5zdWJzdHIoLTEpPzEwMDoyNTUpLHBhcnNlRmxvYXQoclszXSkvKCIlIj09PXJbM10uc3Vic3RyKC0xKT8xMDA6MjU1KSxwYXJzZUZsb2F0KGUocls0XSwiMS4wIikpKToocj1mLmV4ZWMoaSksbnVsbCE9PXI/cy5mcm9tSHNsKHBhcnNlRmxvYXQoclsxXSkvMzYwLHBhcnNlRmxvYXQoclsyXSkvMTAwLHBhcnNlRmxvYXQoclszXSkvMTAwLHBhcnNlRmxvYXQoZShyWzRdLCIxLjAiKSkpOnZvaWQgMCkpKX0scy5wYWNrZWRMZW5ndGg9NCxzLnBhY2s9ZnVuY3Rpb24odCxpLG4pe249ZShuLDApLGlbbisrXT10LnJlZCxpW24rK109dC5ncmVlbixpW24rK109dC5ibHVlLGlbbl09dC5hbHBoYX0scy51bnBhY2s9ZnVuY3Rpb24oaSxuLHIpe3JldHVybiBuPWUobiwwKSx0KHIpfHwocj1uZXcgcyksci5yZWQ9aVtuKytdLHIuZ3JlZW49aVtuKytdLHIuYmx1ZT1pW24rK10sci5hbHBoYT1pW25dLHJ9LHMuYnl0ZVRvRmxvYXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUvMjU1fSxzLmZsb2F0VG9CeXRlPWZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZT8yNTU6MHwyNTYqZX0scy5jbG9uZT1mdW5jdGlvbihlLGkpe3JldHVybiB0KGUpP3QoaSk/KGkucmVkPWUucmVkLGkuZ3JlZW49ZS5ncmVlbixpLmJsdWU9ZS5ibHVlLGkuYWxwaGE9ZS5hbHBoYSxpKTpuZXcgcyhlLnJlZCxlLmdyZWVuLGUuYmx1ZSxlLmFscGhhKTp2b2lkIDB9LHMuZXF1YWxzPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIGU9PT1pfHx0KGUpJiZ0KGkpJiZlLnJlZD09PWkucmVkJiZlLmdyZWVuPT09aS5ncmVlbiYmZS5ibHVlPT09aS5ibHVlJiZlLmFscGhhPT09aS5hbHBoYX0scy5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIHMuY2xvbmUodGhpcyxlKX0scy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBzLmVxdWFscyh0aGlzLGUpfSxzLnByb3RvdHlwZS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHRoaXM9PT1lfHx0KGUpJiZNYXRoLmFicyh0aGlzLnJlZC1lLnJlZCk8PWkmJk1hdGguYWJzKHRoaXMuZ3JlZW4tZS5ncmVlbik8PWkmJk1hdGguYWJzKHRoaXMuYmx1ZS1lLmJsdWUpPD1pJiZNYXRoLmFicyh0aGlzLmFscGhhLWUuYWxwaGEpPD1pfSxzLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzLnJlZCsiLCAiK3RoaXMuZ3JlZW4rIiwgIit0aGlzLmJsdWUrIiwgIit0aGlzLmFscGhhKyIpIn0scy5wcm90b3R5cGUudG9Dc3NDb2xvclN0cmluZz1mdW5jdGlvbigpe3ZhciBlPXMuZmxvYXRUb0J5dGUodGhpcy5yZWQpLHQ9cy5mbG9hdFRvQnl0ZSh0aGlzLmdyZWVuKSxpPXMuZmxvYXRUb0J5dGUodGhpcy5ibHVlKTtyZXR1cm4gMT09PXRoaXMuYWxwaGE/InJnYigiK2UrIiwiK3QrIiwiK2krIikiOiJyZ2JhKCIrZSsiLCIrdCsiLCIraSsiLCIrdGhpcy5hbHBoYSsiKSJ9LHMucHJvdG90eXBlLnRvQnl0ZXM9ZnVuY3Rpb24oZSl7dmFyIGk9cy5mbG9hdFRvQnl0ZSh0aGlzLnJlZCksbj1zLmZsb2F0VG9CeXRlKHRoaXMuZ3JlZW4pLHI9cy5mbG9hdFRvQnl0ZSh0aGlzLmJsdWUpLG89cy5mbG9hdFRvQnl0ZSh0aGlzLmFscGhhKTtyZXR1cm4gdChlKT8oZVswXT1pLGVbMV09bixlWzJdPXIsZVszXT1vLGUpOltpLG4scixvXX0scy5wcm90b3R5cGUudG9SZ2JhPWZ1bmN0aW9uKCl7cmV0dXJuIGNbMF09cy5mbG9hdFRvQnl0ZSh0aGlzLnJlZCksY1sxXT1zLmZsb2F0VG9CeXRlKHRoaXMuZ3JlZW4pLGNbMl09cy5mbG9hdFRvQnl0ZSh0aGlzLmJsdWUpLGNbM109cy5mbG9hdFRvQnl0ZSh0aGlzLmFscGhhKSx1WzBdfSxzLnByb3RvdHlwZS5icmlnaHRlbj1mdW5jdGlvbihlLHQpe3JldHVybiBlPTEtZSx0LnJlZD0xLSgxLXRoaXMucmVkKSplLHQuZ3JlZW49MS0oMS10aGlzLmdyZWVuKSplLHQuYmx1ZT0xLSgxLXRoaXMuYmx1ZSkqZSx0LmFscGhhPXRoaXMuYWxwaGEsdH0scy5wcm90b3R5cGUuZGFya2VuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9MS1lLHQucmVkPXRoaXMucmVkKmUsdC5ncmVlbj10aGlzLmdyZWVuKmUsdC5ibHVlPXRoaXMuYmx1ZSplLHQuYWxwaGE9dGhpcy5hbHBoYSx0fSxzLkFMSUNFQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRjBGOEZGIikpLHMuQU5USVFVRVdISVRFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGQUVCRDciKSkscy5BUVVBPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMEZGRkYiKSkscy5BUVVBTUFSSU5FPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM3RkZGRDQiKSkscy5BWlVSRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRjBGRkZGIikpLHMuQkVJR0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0Y1RjVEQyIpKSxzLkJJU1FVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZFNEM0IikpLHMuQkxBQ0s9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzAwMDAwMCIpKSxzLkJMQU5DSEVEQUxNT05EPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGRkVCQ0QiKSkscy5CTFVFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMDAwRkYiKSkscy5CTFVFVklPTEVUPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM4QTJCRTIiKSkscy5CUk9XTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQTUyQTJBIikpLHMuQlVSTFlXT09EPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNERUI4ODciKSkscy5DQURFVEJMVUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzVGOUVBMCIpKSxzLkNIQVJUUkVVU0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzdGRkYwMCIpKSxzLkNIT0NPTEFURT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRDI2OTFFIikpLHMuQ09SQUw9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGN0Y1MCIpKSxzLkNPUk5GTE9XRVJCTFVFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM2NDk1RUQiKSkscy5DT1JOU0lMSz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGOERDIikpLHMuQ1JJTVNPTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjREMxNDNDIikpLHMuQ1lBTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMDBGRkZGIikpLHMuREFSS0JMVUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzAwMDA4QiIpKSxzLkRBUktDWUFOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMDhCOEIiKSkscy5EQVJLR09MREVOUk9EPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNCODg2MEIiKSkscy5EQVJLR1JBWT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQTlBOUE5IikpLHMuREFSS0dSRUVOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMDY0MDAiKSkscy5EQVJLR1JFWT1zLkRBUktHUkFZLHMuREFSS0tIQUtJPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNCREI3NkIiKSkscy5EQVJLTUFHRU5UQT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjOEIwMDhCIikpLHMuREFSS09MSVZFR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzU1NkIyRiIpKSxzLkRBUktPUkFOR0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGOEMwMCIpKSxzLkRBUktPUkNISUQ9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzk5MzJDQyIpKSxzLkRBUktSRUQ9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzhCMDAwMCIpKSxzLkRBUktTQUxNT049cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0U5OTY3QSIpKSxzLkRBUktTRUFHUkVFTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjOEZCQzhGIikpLHMuREFSS1NMQVRFQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjNDgzRDhCIikpLHMuREFSS1NMQVRFR1JBWT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMkY0RjRGIikpLHMuREFSS1NMQVRFR1JFWT1zLkRBUktTTEFURUdSQVkscy5EQVJLVFVSUVVPSVNFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMENFRDEiKSkscy5EQVJLVklPTEVUPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM5NDAwRDMiKSkscy5ERUVQUElOSz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkYxNDkzIikpLHMuREVFUFNLWUJMVUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzAwQkZGRiIpKSxzLkRJTUdSQVk9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzY5Njk2OSIpKSxzLkRJTUdSRVk9cy5ESU1HUkFZLHMuRE9ER0VSQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMUU5MEZGIikpLHMuRklSRUJSSUNLPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNCMjIyMjIiKSkscy5GTE9SQUxXSElURT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGQUYwIikpLHMuRk9SRVNUR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzIyOEIyMiIpKSxzLkZVU0NISUE9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGMDBGRiIpKSxzLkdBSU5TQk9STz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRENEQ0RDIikpLHMuR0hPU1RXSElURT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRjhGOEZGIikpLHMuR09MRD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZENzAwIikpLHMuR09MREVOUk9EPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNEQUE1MjAiKSkscy5HUkFZPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM4MDgwODAiKSkscy5HUkVFTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMDA4MDAwIikpLHMuR1JFRU5ZRUxMT1c9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0FERkYyRiIpKSxzLkdSRVk9cy5HUkFZLHMuSE9ORVlERVc9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0YwRkZGMCIpKSxzLkhPVFBJTks9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGNjlCNCIpKSxzLklORElBTlJFRD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQ0Q1QzVDIikpLHMuSU5ESUdPPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM0QjAwODIiKSkscy5JVk9SWT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGRkYwIikpLHMuS0hBS0k9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0YwRTY4QyIpKSxzLkxBVkVOREVSPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNFNkU2RkEiKSkscy5MQVZFTkRBUl9CTFVTSD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGMEY1IikpLHMuTEFXTkdSRUVOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM3Q0ZDMDAiKSkscy5MRU1PTkNISUZGT049cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRkFDRCIpKSxzLkxJR0hUQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQUREOEU2IikpLHMuTElHSFRDT1JBTD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRjA4MDgwIikpLHMuTElHSFRDWUFOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNFMEZGRkYiKSkscy5MSUdIVEdPTERFTlJPRFlFTExPVz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkFGQUQyIikpLHMuTElHSFRHUkFZPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNEM0QzRDMiKSkscy5MSUdIVEdSRUVOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM5MEVFOTAiKSkscy5MSUdIVEdSRVk9cy5MSUdIVEdSQVkscy5MSUdIVFBJTks9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGQjZDMSIpKSxzLkxJR0hUU0VBR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzIwQjJBQSIpKSxzLkxJR0hUU0tZQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjODdDRUZBIikpLHMuTElHSFRTTEFURUdSQVk9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzc3ODg5OSIpKSxzLkxJR0hUU0xBVEVHUkVZPXMuTElHSFRTTEFURUdSQVkscy5MSUdIVFNURUVMQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQjBDNERFIikpLHMuTElHSFRZRUxMT1c9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRkZFMCIpKSxzLkxJTUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzAwRkYwMCIpKSxzLkxJTUVHUkVFTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMzJDRDMyIikpLHMuTElORU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZBRjBFNiIpKSxzLk1BR0VOVEE9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGMDBGRiIpKSxzLk1BUk9PTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjODAwMDAwIikpLHMuTUVESVVNQVFVQU1BUklORT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjNjZDREFBIikpLHMuTUVESVVNQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMDAwMENEIikpLHMuTUVESVVNT1JDSElEPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNCQTU1RDMiKSkscy5NRURJVU1QVVJQTEU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzkzNzBEQiIpKSxzLk1FRElVTVNFQUdSRUVOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMzQ0IzNzEiKSkscy5NRURJVU1TTEFURUJMVUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzdCNjhFRSIpKSxzLk1FRElVTVNQUklOR0dSRUVOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMEZBOUEiKSkscy5NRURJVU1UVVJRVU9JU0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzQ4RDFDQyIpKSxzLk1FRElVTVZJT0xFVFJFRD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQzcxNTg1IikpLHMuTUlETklHSFRCTFVFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMxOTE5NzAiKSkscy5NSU5UQ1JFQU09cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0Y1RkZGQSIpKSxzLk1JU1RZUk9TRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZFNEUxIikpLHMuTU9DQ0FTSU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRTRCNSIpKSxzLk5BVkFKT1dISVRFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGRkRFQUQiKSkscy5OQVZZPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMDAwODAiKSkscy5PTERMQUNFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGREY1RTYiKSkscy5PTElWRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjODA4MDAwIikpLHMuT0xJVkVEUkFCPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM2QjhFMjMiKSkscy5PUkFOR0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGQTUwMCIpKSxzLk9SQU5HRVJFRD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkY0NTAwIikpLHMuT1JDSElEPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNEQTcwRDYiKSkscy5QQUxFR09MREVOUk9EPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNFRUU4QUEiKSkscy5QQUxFR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzk4RkI5OCIpKSxzLlBBTEVUVVJRVU9JU0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0FGRUVFRSIpKSxzLlBBTEVWSU9MRVRSRUQ9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0RCNzA5MyIpKSxzLlBBUEFZQVdISVA9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRUZENSIpKSxzLlBFQUNIUFVGRj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZEQUI5IikpLHMuUEVSVT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQ0Q4NTNGIikpLHMuUElOSz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZDMENCIikpLHMuUExVTT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRERBMEREIikpLHMuUE9XREVSQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQjBFMEU2IikpLHMuUFVSUExFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM4MDAwODAiKSkscy5SRUQ9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGMDAwMCIpKSxzLlJPU1lCUk9XTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQkM4RjhGIikpLHMuUk9ZQUxCTFVFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM0MTY5RTEiKSkscy5TQURETEVCUk9XTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjOEI0NTEzIikpLHMuU0FMTU9OPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGQTgwNzIiKSkscy5TQU5EWUJST1dOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNGNEE0NjAiKSkscy5TRUFHUkVFTj1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjMkU4QjU3IikpLHMuU0VBU0hFTEw9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRjVFRSIpKSxzLlNJRU5OQT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjQTA1MjJEIikpLHMuU0lMVkVSPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNDMEMwQzAiKSkscy5TS1lCTFVFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiM4N0NFRUIiKSkscy5TTEFURUJMVUU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzZBNUFDRCIpKSxzLlNMQVRFR1JBWT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjNzA4MDkwIikpLHMuU0xBVEVHUkVZPXMuU0xBVEVHUkFZLHMuU05PVz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGQUZBIikpLHMuU1BSSU5HR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzAwRkY3RiIpKSxzLlNURUVMQkxVRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjNDY4MkI0IikpLHMuVEFOPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNEMkI0OEMiKSkscy5URUFMPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiMwMDgwODAiKSkscy5USElTVExFPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNEOEJGRDgiKSkscy5UT01BVE89cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGNjM0NyIpKSxzLlRVUlFVT0lTRT1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjNDBFMEQwIikpLHMuVklPTEVUPXIocy5mcm9tQ3NzQ29sb3JTdHJpbmcoIiNFRTgyRUUiKSkscy5XSEVBVD1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRjVERUIzIikpLHMuV0hJVEU9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0ZGRkZGRiIpKSxzLldISVRFU01PS0U9cihzLmZyb21Dc3NDb2xvclN0cmluZygiI0Y1RjVGNSIpKSxzLllFTExPVz1yKHMuZnJvbUNzc0NvbG9yU3RyaW5nKCIjRkZGRjAwIikpLHMuWUVMTE9XR1JFRU49cihzLmZyb21Dc3NDb2xvclN0cmluZygiIzlBQ0QzMiIpKSxzfSksZGVmaW5lKCJDb3JlL2NyZWF0ZUd1aWQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKCl7cmV0dXJuInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCIucmVwbGFjZSgvW3h5XS9nLGZ1bmN0aW9uKGUpe3ZhciB0PTB8MTYqTWF0aC5yYW5kb20oKSxpPSJ4Ij09PWU/dDo4fDMmdDtyZXR1cm4gaS50b1N0cmluZygxNil9KX07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvRWxsaXBzb2lkIixbIi4vQ2FydGVzaWFuMyIsIi4vQ2FydG9ncmFwaGljIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIiwiLi9mcmVlemVPYmplY3QiLCIuL01hdGgiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsKHQsbixyLG8pe249aShuLDApLHI9aShyLDApLG89aShvLDApLHQuX3JhZGlpPW5ldyBlKG4scixvKSx0Ll9yYWRpaVNxdWFyZWQ9bmV3IGUobipuLHIqcixvKm8pLHQuX3JhZGlpVG9UaGVGb3VydGg9bmV3IGUobipuKm4qbixyKnIqcipyLG8qbypvKm8pLHQuX29uZU92ZXJSYWRpaT1uZXcgZSgwPT09bj8wOjEvbiwwPT09cj8wOjEvciwwPT09bz8wOjEvbyksdC5fb25lT3ZlclJhZGlpU3F1YXJlZD1uZXcgZSgwPT09bj8wOjEvKG4qbiksMD09PXI/MDoxLyhyKnIpLDA9PT1vPzA6MS8obypvKSksdC5fbWluaW11bVJhZGl1cz1NYXRoLm1pbihuLHIsbyksdC5fbWF4aW11bVJhZGl1cz1NYXRoLm1heChuLHIsbyksdC5fY2VudGVyVG9sZXJhbmNlU3F1YXJlZD1zLkVQU0lMT04xfXZhciB1PWZ1bmN0aW9uKGUsdCxpKXt0aGlzLl9yYWRpaT12b2lkIDAsdGhpcy5fcmFkaWlTcXVhcmVkPXZvaWQgMCx0aGlzLl9yYWRpaVRvVGhlRm91cnRoPXZvaWQgMCx0aGlzLl9vbmVPdmVyUmFkaWk9dm9pZCAwLHRoaXMuX29uZU92ZXJSYWRpaVNxdWFyZWQ9dm9pZCAwLHRoaXMuX21pbmltdW1SYWRpdXM9dm9pZCAwLHRoaXMuX21heGltdW1SYWRpdXM9dm9pZCAwLHRoaXMuX2NlbnRlclRvbGVyYW5jZVNxdWFyZWQ9dm9pZCAwLGwodGhpcyxlLHQsaSl9O3IodS5wcm90b3R5cGUse3JhZGlpOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFkaWl9fSxyYWRpaVNxdWFyZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yYWRpaVNxdWFyZWR9fSxyYWRpaVRvVGhlRm91cnRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFkaWlUb1RoZUZvdXJ0aH19LG9uZU92ZXJSYWRpaTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29uZU92ZXJSYWRpaX19LG9uZU92ZXJSYWRpaVNxdWFyZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vbmVPdmVyUmFkaWlTcXVhcmVkfX0sbWluaW11bVJhZGl1czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21pbmltdW1SYWRpdXMKfX0sbWF4aW11bVJhZGl1czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1SYWRpdXN9fX0pLHUuY2xvbmU9ZnVuY3Rpb24odCxpKXtpZighbih0KSlyZXR1cm4gdm9pZCAwO3ZhciByPXQuX3JhZGlpO3JldHVybiBuKGkpPyhlLmNsb25lKHIsaS5fcmFkaWkpLGUuY2xvbmUodC5fcmFkaWlTcXVhcmVkLGkuX3JhZGlpU3F1YXJlZCksZS5jbG9uZSh0Ll9yYWRpaVRvVGhlRm91cnRoLGkuX3JhZGlpVG9UaGVGb3VydGgpLGUuY2xvbmUodC5fb25lT3ZlclJhZGlpLGkuX29uZU92ZXJSYWRpaSksZS5jbG9uZSh0Ll9vbmVPdmVyUmFkaWlTcXVhcmVkLGkuX29uZU92ZXJSYWRpaVNxdWFyZWQpLGkuX21pbmltdW1SYWRpdXM9dC5fbWluaW11bVJhZGl1cyxpLl9tYXhpbXVtUmFkaXVzPXQuX21heGltdW1SYWRpdXMsaS5fY2VudGVyVG9sZXJhbmNlU3F1YXJlZD10Ll9jZW50ZXJUb2xlcmFuY2VTcXVhcmVkLGkpOm5ldyB1KHIueCxyLnksci56KX0sdS5mcm9tQ2FydGVzaWFuMz1mdW5jdGlvbihlLHQpe3JldHVybiBuKHQpfHwodD1uZXcgdSksbihlKT8obCh0LGUueCxlLnksZS56KSx0KTp0fSx1LldHUzg0PWEobmV3IHUoNjM3ODEzNyw2Mzc4MTM3LDYzNTY3NTIuMzE0MjQ1MTc5KSksdS5VTklUX1NQSEVSRT1hKG5ldyB1KDEsMSwxKSksdS5NT09OPWEobmV3IHUocy5MVU5BUl9SQURJVVMscy5MVU5BUl9SQURJVVMscy5MVU5BUl9SQURJVVMpKSx1LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdS5jbG9uZSh0aGlzLGUpfSx1LnByb3RvdHlwZS5nZW9jZW50cmljU3VyZmFjZU5vcm1hbD1lLm5vcm1hbGl6ZSx1LnByb3RvdHlwZS5nZW9kZXRpY1N1cmZhY2VOb3JtYWxDYXJ0b2dyYXBoaWM9ZnVuY3Rpb24odCxpKXt2YXIgcj10LmxvbmdpdHVkZSxvPXQubGF0aXR1ZGUsYT1NYXRoLmNvcyhvKSxzPWEqTWF0aC5jb3MociksbD1hKk1hdGguc2luKHIpLHU9TWF0aC5zaW4obyk7cmV0dXJuIG4oaSl8fChpPW5ldyBlKSxpLng9cyxpLnk9bCxpLno9dSxlLm5vcm1hbGl6ZShpLGkpfSx1LnByb3RvdHlwZS5nZW9kZXRpY1N1cmZhY2VOb3JtYWw9ZnVuY3Rpb24odCxpKXtyZXR1cm4gbihpKXx8KGk9bmV3IGUpLGk9ZS5tdWx0aXBseUNvbXBvbmVudHModCx0aGlzLl9vbmVPdmVyUmFkaWlTcXVhcmVkLGkpLGUubm9ybWFsaXplKGksaSl9O3ZhciBjPW5ldyBlLGQ9bmV3IGU7dS5wcm90b3R5cGUuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW49ZnVuY3Rpb24odCxpKXt2YXIgcj1jLG89ZDt0aGlzLmdlb2RldGljU3VyZmFjZU5vcm1hbENhcnRvZ3JhcGhpYyh0LHIpLGUubXVsdGlwbHlDb21wb25lbnRzKHRoaXMuX3JhZGlpU3F1YXJlZCxyLG8pO3ZhciBhPU1hdGguc3FydChlLmRvdChyLG8pKTtyZXR1cm4gZS5kaXZpZGVCeVNjYWxhcihvLGEsbyksZS5tdWx0aXBseUJ5U2NhbGFyKHIsdC5oZWlnaHQsciksbihpKXx8KGk9bmV3IGUpLGUuYWRkKG8scixpKX0sdS5wcm90b3R5cGUuY2FydG9ncmFwaGljQXJyYXlUb0NhcnRlc2lhbkFycmF5PWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZS5sZW5ndGg7bih0KT90Lmxlbmd0aD1pOnQ9bmV3IEFycmF5KGkpO2Zvcih2YXIgcj0wO2k+cjtyKyspdFtyXT10aGlzLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGVbcl0sdFtyXSk7cmV0dXJuIHR9O3ZhciBoPW5ldyBlLG09bmV3IGUsZj1uZXcgZTt1LnByb3RvdHlwZS5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYz1mdW5jdGlvbihpLHIpe3ZhciBvPXRoaXMuc2NhbGVUb0dlb2RldGljU3VyZmFjZShpLG0pO2lmKCFuKG8pKXJldHVybiB2b2lkIDA7dmFyIGE9dGhpcy5nZW9kZXRpY1N1cmZhY2VOb3JtYWwobyxoKSxsPWUuc3VidHJhY3QoaSxvLGYpLHU9TWF0aC5hdGFuMihhLnksYS54KSxjPU1hdGguYXNpbihhLnopLGQ9cy5zaWduKGUuZG90KGwsaSkpKmUubWFnbml0dWRlKGwpO3JldHVybiBuKHIpPyhyLmxvbmdpdHVkZT11LHIubGF0aXR1ZGU9YyxyLmhlaWdodD1kLHIpOm5ldyB0KHUsYyxkKX0sdS5wcm90b3R5cGUuY2FydGVzaWFuQXJyYXlUb0NhcnRvZ3JhcGhpY0FycmF5PWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZS5sZW5ndGg7bih0KT90Lmxlbmd0aD1pOnQ9bmV3IEFycmF5KGkpO2Zvcih2YXIgcj0wO2k+cjsrK3IpdFtyXT10aGlzLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGVbcl0sdFtyXSk7cmV0dXJuIHR9O3ZhciBwPW5ldyBlLHY9bmV3IGU7cmV0dXJuIHUucHJvdG90eXBlLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2U9ZnVuY3Rpb24odCxpKXt2YXIgcj10Lngsbz10LnksYT10LnosbD10aGlzLl9vbmVPdmVyUmFkaWksdT1sLngsYz1sLnksZD1sLnosaD1yKnIqdSp1LG09bypvKmMqYyxmPWEqYSpkKmQsZz1oK20rZixfPU1hdGguc3FydCgxL2cpLHk9ZS5tdWx0aXBseUJ5U2NhbGFyKHQsXyxwKTtpZihnPHRoaXMuX2NlbnRlclRvbGVyYW5jZVNxdWFyZWQpcmV0dXJuIGlzRmluaXRlKF8pP2UuY2xvbmUoeSxpKTp2b2lkIDA7dmFyIEM9dGhpcy5fb25lT3ZlclJhZGlpU3F1YXJlZCx3PUMueCxFPUMueSxiPUMueixTPXY7Uy54PTIqeS54KncsUy55PTIqeS55KkUsUy56PTIqeS56KmI7dmFyIFQseCxBLFAsTSxJLEQsTyxSLEwsTix6PSgxLV8pKmUubWFnbml0dWRlKHQpLyguNSplLm1hZ25pdHVkZShTKSksQj0wO2Rve3otPUIsQT0xLygxK3oqdyksUD0xLygxK3oqRSksTT0xLygxK3oqYiksST1BKkEsRD1QKlAsTz1NKk0sUj1JKkEsTD1EKlAsTj1PKk0sVD1oKkkrbSpEK2YqTy0xLHg9aCpSKncrbSpMKkUrZipOKmI7dmFyIEY9LTIqeDtCPVQvRn13aGlsZShNYXRoLmFicyhUKT5zLkVQU0lMT04xMik7cmV0dXJuIG4oaSk/KGkueD1yKkEsaS55PW8qUCxpLno9YSpNLGkpOm5ldyBlKHIqQSxvKlAsYSpNKX0sdS5wcm90b3R5cGUuc2NhbGVUb0dlb2NlbnRyaWNTdXJmYWNlPWZ1bmN0aW9uKHQsaSl7bihpKXx8KGk9bmV3IGUpO3ZhciByPXQueCxvPXQueSxhPXQueixzPXRoaXMuX29uZU92ZXJSYWRpaVNxdWFyZWQsbD0xL01hdGguc3FydChyKnIqcy54K28qbypzLnkrYSphKnMueik7cmV0dXJuIGUubXVsdGlwbHlCeVNjYWxhcih0LGwsaSl9LHUucHJvdG90eXBlLnRyYW5zZm9ybVBvc2l0aW9uVG9TY2FsZWRTcGFjZT1mdW5jdGlvbih0LGkpe3JldHVybiBuKGkpfHwoaT1uZXcgZSksZS5tdWx0aXBseUNvbXBvbmVudHModCx0aGlzLl9vbmVPdmVyUmFkaWksaSl9LHUucHJvdG90eXBlLnRyYW5zZm9ybVBvc2l0aW9uRnJvbVNjYWxlZFNwYWNlPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIG4oaSl8fChpPW5ldyBlKSxlLm11bHRpcGx5Q29tcG9uZW50cyh0LHRoaXMuX3JhZGlpLGkpfSx1LnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXM9PT10fHxuKHQpJiZlLmVxdWFscyh0aGlzLl9yYWRpaSx0Ll9yYWRpaSl9LHUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JhZGlpLnRvU3RyaW5nKCl9LHV9KSxkZWZpbmUoIkNvcmUvRXZlbnQiLFsiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXJzPVtdLHRoaXMuX3Njb3Blcz1bXSx0aGlzLl90b1JlbW92ZT1bXSx0aGlzLl9pbnNpZGVSYWlzZUV2ZW50PSExfTtyZXR1cm4gdChpLnByb3RvdHlwZSx7bnVtYmVyT2ZMaXN0ZW5lcnM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9saXN0ZW5lcnMubGVuZ3RoLXRoaXMuX3RvUmVtb3ZlLmxlbmd0aH19fSksaS5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe3RoaXMuX2xpc3RlbmVycy5wdXNoKGUpLHRoaXMuX3Njb3Blcy5wdXNoKHQpO3ZhciBpPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKCl7aS5yZW1vdmVFdmVudExpc3RlbmVyKGUsdCl9fSxpLnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPXRoaXMuX2xpc3RlbmVycyxuPXRoaXMuX3Njb3BlcyxyPS0xLG89MDtvPGkubGVuZ3RoO28rKylpZihpW29dPT09ZSYmbltvXT09PXQpe3I9bzticmVha31yZXR1cm4tMSE9PXI/KHRoaXMuX2luc2lkZVJhaXNlRXZlbnQ/KHRoaXMuX3RvUmVtb3ZlLnB1c2gociksaVtyXT12b2lkIDAsbltyXT12b2lkIDApOihpLnNwbGljZShyLDEpLG4uc3BsaWNlKHIsMSkpLCEwKTohMX0saS5wcm90b3R5cGUucmFpc2VFdmVudD1mdW5jdGlvbigpe3RoaXMuX2luc2lkZVJhaXNlRXZlbnQ9ITA7dmFyIHQsaT10aGlzLl9saXN0ZW5lcnMsbj10aGlzLl9zY29wZXMscj1pLmxlbmd0aDtmb3IodD0wO3I+dDt0Kyspe3ZhciBvPWlbdF07ZShvKSYmaVt0XS5hcHBseShuW3RdLGFyZ3VtZW50cyl9dmFyIGE9dGhpcy5fdG9SZW1vdmU7Zm9yKHI9YS5sZW5ndGgsdD0wO3I+dDt0Kyspe3ZhciBzPWFbdF07aS5zcGxpY2UocywxKSxuLnNwbGljZShzLDEpfWEubGVuZ3RoPTAsdGhpcy5faW5zaWRlUmFpc2VFdmVudD0hMX0saX0pLGRlZmluZSgiQ29yZS9FeHRyYXBvbGF0aW9uVHlwZSIsWyIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17Tk9ORTowLEhPTEQ6MSxFWFRSQVBPTEFURToyfTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9IZXJtaXRlUG9seW5vbWlhbEFwcHJveGltYXRpb24iLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9NYXRoIl0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHIoZSx0LGksbixvLGEpe3ZhciBzLGwsdSxjPTA7aWYobj4wKXtmb3IobD0wO28+bDtsKyspe2ZvcihzPSExLHU9MDt1PGEubGVuZ3RoJiYhczt1KyspbD09PWFbdV0mJihzPSEwKTtzfHwoYS5wdXNoKGwpLGMrPXIoZSx0LGksbi0xLG8sYSksYS5zcGxpY2UoYS5sZW5ndGgtMSwxKSl9cmV0dXJuIGN9Zm9yKGM9MSxsPTA7bz5sO2wrKyl7Zm9yKHM9ITEsdT0wO3U8YS5sZW5ndGgmJiFzO3UrKylsPT09YVt1XSYmKHM9ITApO3N8fChjKj1lLWlbdFtsXV0pfXJldHVybiBjfWZ1bmN0aW9uIG8oZSx0LGkscixvLGEpe2Zvcih2YXIgcyxsLHU9LTEsYz10Lmxlbmd0aCxkPWMqKGMrMSkvMixoPTA7bz5oO2grKyl7dmFyIG09TWF0aC5mbG9vcihoKmQpO2ZvcihzPTA7Yz5zO3MrKylsPXRbc10qbyooYSsxKStoLGVbbStzXT1yW2xdO2Zvcih2YXIgZj0xO2M+ZjtmKyspe3ZhciBwPTAsdj1NYXRoLmZsb29yKGYqKDEtZikvMikrYypmLGc9ITE7Zm9yKHM9MDtjLWY+cztzKyspe3ZhciBfLHksQz1pW3Rbc11dLHc9aVt0W3MrZl1dO2lmKDA+PXctQylsPXRbc10qbyooYSsxKStvKmYraCxfPXJbbF0seT1fL24uZmFjdG9yaWFsKGYpLGVbbSt2K3BdPXkscCsrO2Vsc2V7dmFyIEU9TWF0aC5mbG9vcigoZi0xKSooMi1mKS8yKStjKihmLTEpO189ZVttK0UrcysxXS1lW20rRStzXSx5PV8vKHctQyksZVttK3YrcF09eSxwKyt9Zz1nfHwwIT09X31nJiYodT1NYXRoLm1heCh1LGYpKX19cmV0dXJuIHV9dmFyIGE9bi5mYWN0b3JpYWwscz17dHlwZToiSGVybWl0ZSJ9O3MuZ2V0UmVxdWlyZWREYXRhUG9pbnRzPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIGk9ZShpLDApLE1hdGgubWF4KE1hdGguZmxvb3IoKHQrMSkvKGkrMSkpLDIpfSxzLmludGVycG9sYXRlT3JkZXJaZXJvPWZ1bmN0aW9uKGUsaSxuLG8scyl7dChzKXx8KHM9bmV3IEFycmF5KG8pKTt2YXIgbCx1LGMsZCxoLG0sZj1pLmxlbmd0aCxwPW5ldyBBcnJheShvKTtmb3IobD0wO28+bDtsKyspe3NbbF09MDt2YXIgdj1uZXcgQXJyYXkoZik7Zm9yKHBbbF09dix1PTA7Zj51O3UrKyl2W3VdPVtdfXZhciBnPWYsXz1uZXcgQXJyYXkoZyk7Zm9yKGw9MDtnPmw7bCsrKV9bbF09bDt2YXIgeT1mLTE7Zm9yKGQ9MDtvPmQ7ZCsrKXtmb3IodT0wO2c+dTt1KyspbT1fW3VdKm8rZCxwW2RdWzBdLnB1c2goblttXSk7Zm9yKGw9MTtnPmw7bCsrKXt2YXIgQz0hMTtmb3IodT0wO2ctbD51O3UrKyl7dmFyIHcsRT1pW19bdV1dLGI9aVtfW3UrbF1dOzA+PWItRT8obT1fW3VdKm8rbypsK2Qsdz1uW21dLHBbZF1bbF0ucHVzaCh3L2EobCkpKToodz1wW2RdW2wtMV1bdSsxXS1wW2RdW2wtMV1bdV0scFtkXVtsXS5wdXNoKHcvKGItRSkpKSxDPUN8fDAhPT13fUN8fCh5PWwtMSl9fWZvcihjPTAsaD0wO2g+PWM7YysrKWZvcihsPWM7eT49bDtsKyspe3ZhciBTPXIoZSxfLGksYyxsLFtdKTtmb3IoZD0wO28+ZDtkKyspe3ZhciBUPXBbZF1bbF1bMF07c1tkK2Mqb10rPVQqU319cmV0dXJuIHN9O3ZhciBsPVtdO3JldHVybiBzLmludGVycG9sYXRlPWZ1bmN0aW9uKGUsaSxuLGEscyx1LGMpe3ZhciBkPWEqKHUrMSk7dChjKXx8KGM9bmV3IEFycmF5KGQpKTtmb3IodmFyIGg9MDtkPmg7aCsrKWNbaF09MDtmb3IodmFyIG09aS5sZW5ndGgsZj1uZXcgQXJyYXkobSoocysxKSkscD0wO20+cDtwKyspZm9yKHZhciB2PTA7cysxPnY7disrKWZbcCoocysxKSt2XT1wO2Zvcih2YXIgZz1mLmxlbmd0aCxfPWwseT1vKF8sZixpLG4sYSxzKSxDPVtdLHc9ZyooZysxKS8yLEU9TWF0aC5taW4oeSx1KSxiPTA7RT49YjtiKyspZm9yKHA9Yjt5Pj1wO3ArKyl7Qy5sZW5ndGg9MDtmb3IodmFyIFM9cihlLGYsaSxiLHAsQyksVD1NYXRoLmZsb29yKHAqKDEtcCkvMikrZypwLHg9MDthPng7eCsrKXt2YXIgQT1NYXRoLmZsb29yKHgqdyksUD1fW0ErVF07Y1t4K2IqYV0rPVAqU319cmV0dXJuIGN9LHN9KSxkZWZpbmUoIkNvcmUvaXNBcnJheSIsWyIuL2RlZmluZWQiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9QXJyYXkuaXNBcnJheTtyZXR1cm4gZSh0KXx8KHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pLHR9KSxkZWZpbmUoIlRoaXJkUGFydHkvc3ByaW50ZiIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dmFyIGU9LyUlfCUoXGQrXCQpPyhbLStcJyMwIF0qKShcKlxkK1wkfFwqfFxkKyk/KFwuKFwqXGQrXCR8XCp8XGQrKSk/KFtzY2JveFh1aWRlRWZGZ0ddKS9nLHQ9YXJndW1lbnRzLGk9MCxuPXRbaSsrXSxyPWZ1bmN0aW9uKGUsdCxpLG4pe2l8fChpPSIgIik7dmFyIHI9ZS5sZW5ndGg+PXQ/IiI6QXJyYXkoMSt0LWUubGVuZ3RoPj4+MCkuam9pbihpKTtyZXR1cm4gbj9lK3I6citlfSxvPWZ1bmN0aW9uKGUsdCxpLG4sbyxhKXt2YXIgcz1uLWUubGVuZ3RoO3JldHVybiBzPjAmJihlPWl8fCFvP3IoZSxuLGEsaSk6ZS5zbGljZSgwLHQubGVuZ3RoKStyKCIiLHMsIjAiLCEwKStlLnNsaWNlKHQubGVuZ3RoKSksZX0sYT1mdW5jdGlvbihlLHQsaSxuLGEscyxsKXt2YXIgdT1lPj4+MDtyZXR1cm4gaT1pJiZ1JiZ7MjoiMGIiLDg6IjAiLDE2OiIweCJ9W3RdfHwiIixlPWkrcih1LnRvU3RyaW5nKHQpLHN8fDAsIjAiLCExKSxvKGUsaSxuLGEsbCl9LHM9ZnVuY3Rpb24oZSx0LGksbixyLGEpe3JldHVybiBudWxsIT1uJiYoZT1lLnNsaWNlKDAsbikpLG8oZSwiIix0LGkscixhKX0sbD1mdW5jdGlvbihlLG4sbCx1LGMsZCxoKXt2YXIgbSxmLHAsdixnO2lmKCIlJSI9PWUpcmV0dXJuIiUiO2Zvcih2YXIgXz0hMSx5PSIiLEM9ITEsdz0hMSxFPSIgIixiPWwubGVuZ3RoLFM9MDtsJiZiPlM7UysrKXN3aXRjaChsLmNoYXJBdChTKSl7Y2FzZSIgIjp5PSIgIjticmVhaztjYXNlIisiOnk9IisiO2JyZWFrO2Nhc2UiLSI6Xz0hMDticmVhaztjYXNlIiciOkU9bC5jaGFyQXQoUysxKTticmVhaztjYXNlIjAiOkM9ITA7YnJlYWs7Y2FzZSIjIjp3PSEwfWlmKHU9dT8iKiI9PXU/K3RbaSsrXToiKiI9PXUuY2hhckF0KDApPyt0W3Uuc2xpY2UoMSwtMSldOit1OjAsMD51JiYodT0tdSxfPSEwKSwhaXNGaW5pdGUodSkpdGhyb3cgbmV3IEVycm9yKCJzcHJpbnRmOiAobWluaW11bS0pd2lkdGggbXVzdCBiZSBmaW5pdGUiKTtzd2l0Y2goZD1kPyIqIj09ZD8rdFtpKytdOiIqIj09ZC5jaGFyQXQoMCk/K3RbZC5zbGljZSgxLC0xKV06K2Q6ImZGZUUiLmluZGV4T2YoaCk+LTE/NjoiZCI9PWg/MDp2b2lkIDAsZz1uP3Rbbi5zbGljZSgwLC0xKV06dFtpKytdLGgpe2Nhc2UicyI6cmV0dXJuIHMoU3RyaW5nKGcpLF8sdSxkLEMsRSk7Y2FzZSJjIjpyZXR1cm4gcyhTdHJpbmcuZnJvbUNoYXJDb2RlKCtnKSxfLHUsZCxDKTtjYXNlImIiOnJldHVybiBhKGcsMix3LF8sdSxkLEMpO2Nhc2UibyI6cmV0dXJuIGEoZyw4LHcsXyx1LGQsQyk7Y2FzZSJ4IjpyZXR1cm4gYShnLDE2LHcsXyx1LGQsQyk7Y2FzZSJYIjpyZXR1cm4gYShnLDE2LHcsXyx1LGQsQykudG9VcHBlckNhc2UoKTtjYXNlInUiOnJldHVybiBhKGcsMTAsdyxfLHUsZCxDKTtjYXNlImkiOmNhc2UiZCI6cmV0dXJuIG09K2d8fDAsbT1NYXRoLnJvdW5kKG0tbSUxKSxmPTA+bT8iLSI6eSxnPWYrcihTdHJpbmcoTWF0aC5hYnMobSkpLGQsIjAiLCExKSxvKGcsZixfLHUsQyk7Y2FzZSJlIjpjYXNlIkUiOmNhc2UiZiI6Y2FzZSJGIjpjYXNlImciOmNhc2UiRyI6cmV0dXJuIG09K2csZj0wPm0/Ii0iOnkscD1bInRvRXhwb25lbnRpYWwiLCJ0b0ZpeGVkIiwidG9QcmVjaXNpb24iXVsiZWZnIi5pbmRleE9mKGgudG9Mb3dlckNhc2UoKSldLHY9WyJ0b1N0cmluZyIsInRvVXBwZXJDYXNlIl1bImVFZkZnRyIuaW5kZXhPZihoKSUyXSxnPWYrTWF0aC5hYnMobSlbcF0oZCksbyhnLGYsXyx1LEMpW3ZdKCk7ZGVmYXVsdDpyZXR1cm4gZX19O3JldHVybiBuLnJlcGxhY2UoZSxsKX1yZXR1cm4gZX0pLGRlZmluZSgiQ29yZS9iaW5hcnlTZWFyY2giLFsiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCxpKXtmb3IodmFyIG4scixvPTAsYT1lLmxlbmd0aC0xO2E+PW87KWlmKG49fn4oKG8rYSkvMikscj1pKGVbbl0sdCksMD5yKW89bisxO2Vsc2V7aWYoIShyPjApKXJldHVybiBuO2E9bi0xfXJldHVybn4oYSsxKX07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvR3JlZ29yaWFuRGF0ZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXt0aGlzLnllYXI9ZSx0aGlzLm1vbnRoPXQsdGhpcy5kYXk9aSx0aGlzLmhvdXI9bix0aGlzLm1pbnV0ZT1yLHRoaXMuc2Vjb25kPW8sdGhpcy5taWxsaXNlY29uZD1hLHRoaXMuaXNMZWFwU2Vjb25kPXN9O3JldHVybiBlfSksZGVmaW5lKCJDb3JlL2lzTGVhcFllYXIiLFsiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUoZSl7cmV0dXJuIDA9PT1lJTQmJjAhPT1lJTEwMHx8MD09PWUlNDAwfXJldHVybiBlfSksZGVmaW5lKCJDb3JlL0xlYXBTZWNvbmQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCl7dGhpcy5qdWxpYW5EYXRlPWUsdGhpcy5vZmZzZXQ9dH07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvVGltZUNvbnN0YW50cyIsWyIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17U0VDT05EU19QRVJfTUlMTElTRUNPTkQ6LjAwMSxTRUNPTkRTX1BFUl9NSU5VVEU6NjAsTUlOVVRFU19QRVJfSE9VUjo2MCxIT1VSU19QRVJfREFZOjI0LFNFQ09ORFNfUEVSX0hPVVI6MzYwMCxNSU5VVEVTX1BFUl9EQVk6MTQ0MCxTRUNPTkRTX1BFUl9EQVk6ODY0MDAsREFZU19QRVJfSlVMSUFOX0NFTlRVUlk6MzY1MjUsUElDT1NFQ09ORDoxZS05LE1PRElGSUVEX0pVTElBTl9EQVRFX0RJRkZFUkVOQ0U6MjQwMDAwMC41fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9UaW1lU3RhbmRhcmQiLFsiLi9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e1VUQzowLFRBSToxfTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9KdWxpYW5EYXRlIixbIi4uL1RoaXJkUGFydHkvc3ByaW50ZiIsIi4vYmluYXJ5U2VhcmNoIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9HcmVnb3JpYW5EYXRlIiwiLi9pc0xlYXBZZWFyIiwiLi9MZWFwU2Vjb25kIiwiLi9UaW1lQ29uc3RhbnRzIiwiLi9UaW1lU3RhbmRhcmQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYyhlLHQpe3JldHVybiBNLmNvbXBhcmUoZS5qdWxpYW5EYXRlLHQuanVsaWFuRGF0ZSl9ZnVuY3Rpb24gZChlKXtfLmp1bGlhbkRhdGU9ZTt2YXIgaT1NLmxlYXBTZWNvbmRzLG49dChpLF8sYyk7MD5uJiYobj1+biksbj49aS5sZW5ndGgmJihuPWkubGVuZ3RoLTEpO3ZhciByPWlbbl0ub2Zmc2V0O2lmKG4+MCl7dmFyIG89TS5zZWNvbmRzRGlmZmVyZW5jZShpW25dLmp1bGlhbkRhdGUsZSk7bz5yJiYobi0tLHI9aVtuXS5vZmZzZXQpfU0uYWRkU2Vjb25kcyhlLHIsZSl9ZnVuY3Rpb24gaChlLGkpe18uanVsaWFuRGF0ZT1lO3ZhciBuPU0ubGVhcFNlY29uZHMscj10KG4sXyxjKTtpZigwPnImJihyPX5yKSwwPT09cilyZXR1cm4gTS5hZGRTZWNvbmRzKGUsLW5bMF0ub2Zmc2V0LGkpO2lmKHI+PW4ubGVuZ3RoKXJldHVybiBNLmFkZFNlY29uZHMoZSwtbltyLTFdLm9mZnNldCxpKTt2YXIgbz1NLnNlY29uZHNEaWZmZXJlbmNlKG5bcl0uanVsaWFuRGF0ZSxlKTtyZXR1cm4gMD09PW8/TS5hZGRTZWNvbmRzKGUsLW5bcl0ub2Zmc2V0LGkpOjE+PW8/dm9pZCAwOk0uYWRkU2Vjb25kcyhlLC1uWy0tcl0ub2Zmc2V0LGkpfWZ1bmN0aW9uIG0oZSx0LGkpe3ZhciBuPTB8dC9sLlNFQ09ORFNfUEVSX0RBWTtyZXR1cm4gZSs9bix0LT1sLlNFQ09ORFNfUEVSX0RBWSpuLDA+dCYmKGUtLSx0Kz1sLlNFQ09ORFNfUEVSX0RBWSksaS5kYXlOdW1iZXI9ZSxpLnNlY29uZHNPZkRheT10LGl9ZnVuY3Rpb24gZihlLHQsaSxuLHIsbyxhKXt2YXIgcz0wfCh0LTE0KS8xMix1PWUrNDgwMCtzLGM9KDB8MTQ2MSp1LzQpKygwfDM2NyoodC0yLTEyKnMpLzEyKS0oMHwzKigodSsxMDApLzEwMCkvNCkraS0zMjA3NTtuLT0xMiwwPm4mJihuKz0yNCk7dmFyIGQ9bysobipsLlNFQ09ORFNfUEVSX0hPVVIrcipsLlNFQ09ORFNfUEVSX01JTlVURSthKmwuU0VDT05EU19QRVJfTUlMTElTRUNPTkQpO3JldHVybiBkPj00MzIwMCYmKGMtPTEpLFtjLGRdfXZhciBwPW5ldyBvLHY9WzMxLDI4LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxXSxnPTI5LF89bmV3IHMseT0vXihcZHs0fSkkLyxDPS9eKFxkezR9KS0oXGR7Mn0pJC8sdz0vXihcZHs0fSktPyhcZHszfSkkLyxFPS9eKFxkezR9KS0/VyhcZHsyfSktPyhcZHsxfSk/JC8sYj0vXihcZHs0fSktPyhcZHsyfSktPyhcZHsyfSkkLyxTPS8oW1orXC1dKT8oXGR7Mn0pPzo/KFxkezJ9KT8kLyxUPS9eKFxkezJ9KShcLlxkKyk/Ly5zb3VyY2UrUy5zb3VyY2UseD0vXihcZHsyfSk6PyhcZHsyfSkoXC5cZCspPy8uc291cmNlK1Muc291cmNlLEE9L14oXGR7Mn0pOj8oXGR7Mn0pOj8oXGR7Mn0pKFwuXGQrKT8vLnNvdXJjZStTLnNvdXJjZSxQPSJJbnZhbGlkIElTTyA4NjAxIGRhdGUuIixNPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLmRheU51bWJlcj12b2lkIDAsdGhpcy5zZWNvbmRzT2ZEYXk9dm9pZCAwLGU9aShlLDApLHQ9aSh0LDApLG49aShuLHUuVVRDKTt2YXIgcj0wfGU7dCs9KGUtcikqbC5TRUNPTkRTX1BFUl9EQVksbShyLHQsdGhpcyksbj09PXUuVVRDJiZkKHRoaXMpfTtNLmZyb21EYXRlPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZihlLmdldFVUQ0Z1bGxZZWFyKCksZS5nZXRVVENNb250aCgpKzEsZS5nZXRVVENEYXRlKCksZS5nZXRVVENIb3VycygpLGUuZ2V0VVRDTWludXRlcygpLGUuZ2V0VVRDU2Vjb25kcygpLGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCkpO3JldHVybiBuKHQpPyhtKGlbMF0saVsxXSx0KSxkKHQpLHQpOm5ldyBNKGlbMF0saVsxXSx1LlVUQyl9LE0uZnJvbUlzbzg2MDE9ZnVuY3Rpb24oZSx0KXtlPWUucmVwbGFjZSgiLCIsIi4iKTt2YXIgaSxvLHMsbD1lLnNwbGl0KCJUIiksYz0xLGg9MSxwPTAsXz0wLFM9MCxJPTAsRD1sWzBdLE89bFsxXTtpZighbihEKSl0aHJvdyBuZXcgcihQKTt2YXIgUjtpZihsPUQubWF0Y2goYiksbnVsbCE9PWwpe2lmKFI9RC5zcGxpdCgiLSIpLmxlbmd0aC0xLFI+MCYmMiE9PVIpdGhyb3cgbmV3IHIoUCk7aT0rbFsxXSxjPStsWzJdLGg9K2xbM119ZWxzZSBpZihsPUQubWF0Y2goQyksbnVsbCE9PWwpaT0rbFsxXSxjPStsWzJdO2Vsc2UgaWYobD1ELm1hdGNoKHkpLG51bGwhPT1sKWk9K2xbMV07ZWxzZXt2YXIgTDtpZihsPUQubWF0Y2godyksbnVsbCE9PWwpe2lmKGk9K2xbMV0sTD0rbFsyXSxzPWEoaSksMT5MfHxzJiZMPjM2Nnx8IXMmJkw+MzY1KXRocm93IG5ldyByKFApfWVsc2V7aWYobD1ELm1hdGNoKEUpLG51bGw9PT1sKXRocm93IG5ldyByKFApO2k9K2xbMV07dmFyIE49K2xbMl0sej0rbFszXXx8MDtpZihSPUQuc3BsaXQoIi0iKS5sZW5ndGgtMSxSPjAmJighbihsWzNdKSYmMSE9PVJ8fG4obFszXSkmJjIhPT1SKSl0aHJvdyBuZXcgcihQKTt2YXIgQj1uZXcgRGF0ZShEYXRlLlVUQyhpLDAsNCkpO0w9NypOK3otQi5nZXRVVENEYXkoKS0zfW89bmV3IERhdGUoRGF0ZS5VVEMoaSwwLDEpKSxvLnNldFVUQ0RhdGUoTCksYz1vLmdldFVUQ01vbnRoKCkrMSxoPW8uZ2V0VVRDRGF0ZSgpfWlmKHM9YShpKSwxPmN8fGM+MTJ8fDE+aHx8KDIhPT1jfHwhcykmJmg+dltjLTFdfHxzJiYyPT09YyYmaD5nKXRocm93IG5ldyByKFApO3ZhciBGO2lmKG4oTykpe2lmKGw9Ty5tYXRjaChBKSxudWxsIT09bCl7aWYoUj1PLnNwbGl0KCI6IikubGVuZ3RoLTEsUj4wJiYyIT09UiYmMyE9PVIpdGhyb3cgbmV3IHIoUCk7cD0rbFsxXSxfPStsWzJdLFM9K2xbM10sST0xZTMqKyhsWzRdfHwwKSxGPTV9ZWxzZSBpZihsPU8ubWF0Y2goeCksbnVsbCE9PWwpe2lmKFI9Ty5zcGxpdCgiOiIpLmxlbmd0aC0xLFI+MCYmMSE9PVIpdGhyb3cgbmV3IHIoUCk7cD0rbFsxXSxfPStsWzJdLFM9NjAqKyhsWzNdfHwwKSxGPTR9ZWxzZXtpZihsPU8ubWF0Y2goVCksbnVsbD09PWwpdGhyb3cgbmV3IHIoUCk7cD0rbFsxXSxfPTYwKisobFsyXXx8MCksRj0zfWlmKF8+PTYwfHxTPj02MXx8cD4yNHx8MjQ9PT1wJiYoXz4wfHxTPjB8fEk+MCkpdGhyb3cgbmV3IHIoUCk7dmFyIFY9bFtGXSxrPStsW0YrMV0sVT0rKGxbRisyXXx8MCk7c3dpdGNoKFYpe2Nhc2UiKyI6cC09ayxfLT1VO2JyZWFrO2Nhc2UiLSI6cCs9ayxfKz1VO2JyZWFrO2Nhc2UiWiI6YnJlYWs7ZGVmYXVsdDpfKz1uZXcgRGF0ZShEYXRlLlVUQyhpLGMtMSxoLHAsXykpLmdldFRpbWV6b25lT2Zmc2V0KCl9fWVsc2UgXys9bmV3IERhdGUoRGF0ZS5VVEMoaSxjLTEsaCkpLmdldFRpbWV6b25lT2Zmc2V0KCk7dmFyIFc9NjA9PT1TO2ZvcihXJiZTLS07Xz49NjA7KV8tPTYwLHArKztmb3IoO3A+PTI0OylwLT0yNCxoKys7Zm9yKG89cyYmMj09PWM/Zzp2W2MtMV07aD5vOyloLT1vLGMrKyxjPjEyJiYoYy09MTIsaSsrKSxvPXMmJjI9PT1jP2c6dltjLTFdO2Zvcig7MD5fOylfKz02MCxwLS07Zm9yKDswPnA7KXArPTI0LGgtLTtmb3IoOzE+aDspYy0tLDE+YyYmKGMrPTEyLGktLSksbz1zJiYyPT09Yz9nOnZbYy0xXSxoKz1vO3ZhciBHPWYoaSxjLGgscCxfLFMsSSk7cmV0dXJuIG4odCk/KG0oR1swXSxHWzFdLHQpLGQodCkpOnQ9bmV3IE0oR1swXSxHWzFdLHUuVVRDKSxXJiZNLmFkZFNlY29uZHModCwxLHQpLHR9LE0ubm93PWZ1bmN0aW9uKGUpe3JldHVybiBNLmZyb21EYXRlKG5ldyBEYXRlLGUpfTt2YXIgST1uZXcgTSgwLDAsdS5UQUkpO3JldHVybiBNLnRvR3JlZ29yaWFuRGF0ZT1mdW5jdGlvbihlLHQpe3ZhciBpPSExLHI9aChlLEkpO24ocil8fChNLmFkZFNlY29uZHMoZSwtMSxJKSxyPWgoSSxJKSxpPSEwKTt2YXIgYT1yLmRheU51bWJlcixzPXIuc2Vjb25kc09mRGF5O3M+PTQzMjAwJiYoYSs9MSk7dmFyIHU9MHxhKzY4NTY5LGM9MHw0KnUvMTQ2MDk3O3U9MHx1LSgwfCgxNDYwOTcqYyszKS80KTt2YXIgZD0wfDRlMyoodSsxKS8xNDYxMDAxO3U9MHx1LSgwfDE0NjEqZC80KSszMTt2YXIgbT0wfDgwKnUvMjQ0NyxmPTB8dS0oMHwyNDQ3Km0vODApO3U9MHxtLzExO3ZhciBwPTB8bSsyLTEyKnUsdj0wfDEwMCooYy00OSkrZCt1LGc9MHxzL2wuU0VDT05EU19QRVJfSE9VUixfPXMtZypsLlNFQ09ORFNfUEVSX0hPVVIseT0wfF8vbC5TRUNPTkRTX1BFUl9NSU5VVEU7Xy09eSpsLlNFQ09ORFNfUEVSX01JTlVURTt2YXIgQz0wfF8sdz0oXy1DKS9sLlNFQ09ORFNfUEVSX01JTExJU0VDT05EO3JldHVybiBnKz0xMixnPjIzJiYoZy09MjQpLGkmJihDKz0xKSxuKHQpPyh0LnllYXI9dix0Lm1vbnRoPXAsdC5kYXk9Zix0LmhvdXI9Zyx0Lm1pbnV0ZT15LHQuc2Vjb25kPUMsdC5taWxsaXNlY29uZD13LHQuaXNMZWFwU2Vjb25kPWksdCk6bmV3IG8odixwLGYsZyx5LEMsdyxpKX0sTS50b0RhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9TS50b0dyZWdvcmlhbkRhdGUoZSxwKSxpPXQuc2Vjb25kO3JldHVybiB0LmlzTGVhcFNlY29uZCYmKGktPTEpLG5ldyBEYXRlKERhdGUuVVRDKHQueWVhcix0Lm1vbnRoLTEsdC5kYXksdC5ob3VyLHQubWludXRlLGksdC5taWxsaXNlY29uZCkpfSxNLnRvSXNvODYwMT1mdW5jdGlvbih0LGkpe3ZhciByLG89TS50b0dyZWdvcmlhbkRhdGUodCxvKTtyZXR1cm4gbihpKXx8MD09PW8ubWlsbGlzZWNvbmQ/bihpKSYmMCE9PWk/KHI9KC4wMSpvLm1pbGxpc2Vjb25kKS50b0ZpeGVkKGkpLnJlcGxhY2UoIi4iLCIiKS5zbGljZSgwLGkpLGUoIiUwNGQtJTAyZC0lMDJkVCUwMmQ6JTAyZDolMDJkLiVzWiIsby55ZWFyLG8ubW9udGgsby5kYXksby5ob3VyLG8ubWludXRlLG8uc2Vjb25kLHIpKTplKCIlMDRkLSUwMmQtJTAyZFQlMDJkOiUwMmQ6JTAyZFoiLG8ueWVhcixvLm1vbnRoLG8uZGF5LG8uaG91cixvLm1pbnV0ZSxvLnNlY29uZCk6KHI9KC4wMSpvLm1pbGxpc2Vjb25kKS50b1N0cmluZygpLnJlcGxhY2UoIi4iLCIiKSxlKCIlMDRkLSUwMmQtJTAyZFQlMDJkOiUwMmQ6JTAyZC4lc1oiLG8ueWVhcixvLm1vbnRoLG8uZGF5LG8uaG91cixvLm1pbnV0ZSxvLnNlY29uZCxyKSl9LE0uY2xvbmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbihlKT9uKHQpPyh0LmRheU51bWJlcj1lLmRheU51bWJlcix0LnNlY29uZHNPZkRheT1lLnNlY29uZHNPZkRheSx0KTpuZXcgTShlLmRheU51bWJlcixlLnNlY29uZHNPZkRheSx1LlRBSSk6dm9pZCAwfSxNLmNvbXBhcmU9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lLmRheU51bWJlci10LmRheU51bWJlcjtyZXR1cm4gMCE9PWk/aTplLnNlY29uZHNPZkRheS10LnNlY29uZHNPZkRheX0sTS5lcXVhbHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR8fG4oZSkmJm4odCkmJmUuZGF5TnVtYmVyPT09dC5kYXlOdW1iZXImJmUuc2Vjb25kc09mRGF5PT09dC5zZWNvbmRzT2ZEYXl9LE0uZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGU9PT10fHxuKGUpJiZuKHQpJiZNYXRoLmFicyhNLnNlY29uZHNEaWZmZXJlbmNlKGUsdCkpPD1pfSxNLnRvdGFsRGF5cz1mdW5jdGlvbihlKXtyZXR1cm4gZS5kYXlOdW1iZXIrZS5zZWNvbmRzT2ZEYXkvbC5TRUNPTkRTX1BFUl9EQVl9LE0uc2Vjb25kc0RpZmZlcmVuY2U9ZnVuY3Rpb24oZSx0KXt2YXIgaT0oZS5kYXlOdW1iZXItdC5kYXlOdW1iZXIpKmwuU0VDT05EU19QRVJfREFZO3JldHVybiBpKyhlLnNlY29uZHNPZkRheS10LnNlY29uZHNPZkRheSl9LE0uZGF5c0RpZmZlcmVuY2U9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lLmRheU51bWJlci10LmRheU51bWJlcixuPShlLnNlY29uZHNPZkRheS10LnNlY29uZHNPZkRheSkvbC5TRUNPTkRTX1BFUl9EQVk7cmV0dXJuIGkrbn0sTS5jb21wdXRlVGFpTWludXNVdGM9ZnVuY3Rpb24oZSl7Xy5qdWxpYW5EYXRlPWU7dmFyIGk9TS5sZWFwU2Vjb25kcyxuPXQoaSxfLGMpO3JldHVybiAwPm4mJihuPX5uLC0tbiwwPm4mJihuPTApKSxpW25dLm9mZnNldH0sTS5hZGRTZWNvbmRzPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gbShlLmRheU51bWJlcixlLnNlY29uZHNPZkRheSt0LGkpfSxNLmFkZE1pbnV0ZXM9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWUuc2Vjb25kc09mRGF5K3QqbC5TRUNPTkRTX1BFUl9NSU5VVEU7cmV0dXJuIG0oZS5kYXlOdW1iZXIsbixpKX0sTS5hZGRIb3Vycz1mdW5jdGlvbihlLHQsaSl7dmFyIG49ZS5zZWNvbmRzT2ZEYXkrdCpsLlNFQ09ORFNfUEVSX0hPVVI7cmV0dXJuIG0oZS5kYXlOdW1iZXIsbixpKX0sTS5hZGREYXlzPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1lLmRheU51bWJlcit0O3JldHVybiBtKG4sZS5zZWNvbmRzT2ZEYXksaSl9LE0ubGVzc1RoYW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gTS5jb21wYXJlKGUsdCk8MH0sTS5sZXNzVGhhbk9yRXF1YWxzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE0uY29tcGFyZShlLHQpPD0wfSxNLmdyZWF0ZXJUaGFuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE0uY29tcGFyZShlLHQpPjB9LE0uZ3JlYXRlclRoYW5PckVxdWFscz1mdW5jdGlvbihlLHQpe3JldHVybiBNLmNvbXBhcmUoZSx0KT49MH0sTS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIE0uY2xvbmUodGhpcyxlKX0sTS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBNLmVxdWFscyh0aGlzLGUpfSxNLnByb3RvdHlwZS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE0uZXF1YWxzRXBzaWxvbih0aGlzLGUsdCl9LE0ucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIE0udG9Jc284NjAxKHRoaXMpfSxNLmxlYXBTZWNvbmRzPVtuZXcgcyhuZXcgTSgyNDQxMzE3LDQzMjEwLHUuVEFJKSwxMCksbmV3IHMobmV3IE0oMjQ0MTQ5OSw0MzIxMSx1LlRBSSksMTEpLG5ldyBzKG5ldyBNKDI0NDE2ODMsNDMyMTIsdS5UQUkpLDEyKSxuZXcgcyhuZXcgTSgyNDQyMDQ4LDQzMjEzLHUuVEFJKSwxMyksbmV3IHMobmV3IE0oMjQ0MjQxMyw0MzIxNCx1LlRBSSksMTQpLG5ldyBzKG5ldyBNKDI0NDI3NzgsNDMyMTUsdS5UQUkpLDE1KSxuZXcgcyhuZXcgTSgyNDQzMTQ0LDQzMjE2LHUuVEFJKSwxNiksbmV3IHMobmV3IE0oMjQ0MzUwOSw0MzIxNyx1LlRBSSksMTcpLG5ldyBzKG5ldyBNKDI0NDM4NzQsNDMyMTgsdS5UQUkpLDE4KSxuZXcgcyhuZXcgTSgyNDQ0MjM5LDQzMjE5LHUuVEFJKSwxOSksbmV3IHMobmV3IE0oMjQ0NDc4Niw0MzIyMCx1LlRBSSksMjApLG5ldyBzKG5ldyBNKDI0NDUxNTEsNDMyMjEsdS5UQUkpLDIxKSxuZXcgcyhuZXcgTSgyNDQ1NTE2LDQzMjIyLHUuVEFJKSwyMiksbmV3IHMobmV3IE0oMjQ0NjI0Nyw0MzIyMyx1LlRBSSksMjMpLG5ldyBzKG5ldyBNKDI0NDcxNjEsNDMyMjQsdS5UQUkpLDI0KSxuZXcgcyhuZXcgTSgyNDQ3ODkyLDQzMjI1LHUuVEFJKSwyNSksbmV3IHMobmV3IE0oMjQ0ODI1Nyw0MzIyNix1LlRBSSksMjYpLG5ldyBzKG5ldyBNKDI0NDg4MDQsNDMyMjcsdS5UQUkpLDI3KSxuZXcgcyhuZXcgTSgyNDQ5MTY5LDQzMjI4LHUuVEFJKSwyOCksbmV3IHMobmV3IE0oMjQ0OTUzNCw0MzIyOSx1LlRBSSksMjkpLG5ldyBzKG5ldyBNKDI0NTAwODMsNDMyMzAsdS5UQUkpLDMwKSxuZXcgcyhuZXcgTSgyNDUwNjMwLDQzMjMxLHUuVEFJKSwzMSksbmV3IHMobmV3IE0oMjQ1MTE3OSw0MzIzMix1LlRBSSksMzIpLG5ldyBzKG5ldyBNKDI0NTM3MzYsNDMyMzMsdS5UQUkpLDMzKSxuZXcgcyhuZXcgTSgyNDU0ODMyLDQzMjM0LHUuVEFJKSwzNCksbmV3IHMobmV3IE0oMjQ1NjEwOSw0MzIzNSx1LlRBSSksMzUpXSxNfSksZGVmaW5lKCJDb3JlL1RpbWVJbnRlcnZhbCIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vSnVsaWFuRGF0ZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9ZnVuY3Rpb24oaSl7aT1lKGksZS5FTVBUWV9PQkpFQ1QpLHRoaXMuc3RhcnQ9dChpLnN0YXJ0KT9vLmNsb25lKGkuc3RhcnQpOm5ldyBvLHRoaXMuc3RvcD10KGkuc3RvcCk/by5jbG9uZShpLnN0b3ApOm5ldyBvLHRoaXMuZGF0YT1pLmRhdGEsdGhpcy5pc1N0YXJ0SW5jbHVkZWQ9ZShpLmlzU3RhcnRJbmNsdWRlZCwhMCksdGhpcy5pc1N0b3BJbmNsdWRlZD1lKGkuaXNTdG9wSW5jbHVkZWQsITApfTtpKGEucHJvdG90eXBlLHtpc0VtcHR5OntnZXQ6ZnVuY3Rpb24oKXt2YXIgZT1vLmNvbXBhcmUodGhpcy5zdG9wLHRoaXMuc3RhcnQpO3JldHVybiAwPmV8fDA9PT1lJiYoIXRoaXMuaXNTdGFydEluY2x1ZGVkfHwhdGhpcy5pc1N0b3BJbmNsdWRlZCl9fX0pO3ZhciBzPXtzdGFydDp2b2lkIDAsc3RvcDp2b2lkIDAsaXNTdGFydEluY2x1ZGVkOnZvaWQgMCxpc1N0b3BJbmNsdWRlZDp2b2lkIDAsZGF0YTp2b2lkIDB9O3JldHVybiBhLmZyb21Jc284NjAxPWZ1bmN0aW9uKGksbil7dmFyIHI9aS5pc284NjAxLnNwbGl0KCIvIiksbD1vLmZyb21Jc284NjAxKHJbMF0pLHU9by5mcm9tSXNvODYwMShyWzFdKSxjPWUoaS5pc1N0YXJ0SW5jbHVkZWQsITApLGQ9ZShpLmlzU3RvcEluY2x1ZGVkLCEwKSxoPWkuZGF0YTtyZXR1cm4gdChuKT8obi5zdGFydD1sLG4uc3RvcD11LG4uaXNTdGFydEluY2x1ZGVkPWMsbi5pc1N0b3BJbmNsdWRlZD1kLG4uZGF0YT1oLG4pOihzLnN0YXJ0PWwscy5zdG9wPXUscy5pc1N0YXJ0SW5jbHVkZWQ9YyxzLmlzU3RvcEluY2x1ZGVkPWQscy5kYXRhPWgsbmV3IGEocykpfSxhLnRvSXNvODYwMT1mdW5jdGlvbihlLHQpe3JldHVybiBvLnRvSXNvODYwMShlLnN0YXJ0LHQpKyIvIitvLnRvSXNvODYwMShlLnN0b3AsdCl9LGEuY2xvbmU9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdChlKT90KGkpPyhpLnN0YXJ0PWUuc3RhcnQsaS5zdG9wPWUuc3RvcCxpLmlzU3RhcnRJbmNsdWRlZD1lLmlzU3RhcnRJbmNsdWRlZCxpLmlzU3RvcEluY2x1ZGVkPWUuaXNTdG9wSW5jbHVkZWQsaS5kYXRhPWUuZGF0YSxpKTpuZXcgYShlKTp2b2lkIDB9LGEuZXF1YWxzPWZ1bmN0aW9uKGUsaSxuKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJihlLmlzRW1wdHkmJmkuaXNFbXB0eXx8ZS5pc1N0YXJ0SW5jbHVkZWQ9PT1pLmlzU3RhcnRJbmNsdWRlZCYmZS5pc1N0b3BJbmNsdWRlZD09PWkuaXNTdG9wSW5jbHVkZWQmJm8uZXF1YWxzKGUuc3RhcnQsaS5zdGFydCkmJm8uZXF1YWxzKGUuc3RvcCxpLnN0b3ApJiYoZS5kYXRhPT09aS5kYXRhfHx0KG4pJiZuKGUuZGF0YSxpLmRhdGEpKSl9LGEuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLGksbixyKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJihlLmlzRW1wdHkmJmkuaXNFbXB0eXx8ZS5pc1N0YXJ0SW5jbHVkZWQ9PT1pLmlzU3RhcnRJbmNsdWRlZCYmZS5pc1N0b3BJbmNsdWRlZD09PWkuaXNTdG9wSW5jbHVkZWQmJm8uZXF1YWxzRXBzaWxvbihlLnN0YXJ0LGkuc3RhcnQsbikmJm8uZXF1YWxzRXBzaWxvbihlLnN0b3AsaS5zdG9wLG4pJiYoZS5kYXRhPT09aS5kYXRhfHx0KHIpJiZyKGUuZGF0YSxpLmRhdGEpKSl9LGEuaW50ZXJzZWN0PWZ1bmN0aW9uKGUsaSxuLHIpe2lmKCF0KGkpKXJldHVybiBhLmNsb25lKGEuRU1QVFksbik7dmFyIHM9ZS5zdGFydCxsPWUuc3RvcCx1PWkuc3RhcnQsYz1pLnN0b3AsZD1vLmdyZWF0ZXJUaGFuT3JFcXVhbHModSxzKSYmby5ncmVhdGVyVGhhbk9yRXF1YWxzKGwsdSksaD0hZCYmby5sZXNzVGhhbk9yRXF1YWxzKHUscykmJm8ubGVzc1RoYW5PckVxdWFscyhzLGMpO2lmKCFkJiYhaClyZXR1cm4gYS5jbG9uZShhLkVNUFRZLG4pO3ZhciBtPWUuaXNTdGFydEluY2x1ZGVkLGY9ZS5pc1N0b3BJbmNsdWRlZCxwPWkuaXNTdGFydEluY2x1ZGVkLHY9aS5pc1N0b3BJbmNsdWRlZCxnPW8ubGVzc1RoYW4obCxjKTtyZXR1cm4gbi5zdGFydD1kP3U6cyxuLmlzU3RhcnRJbmNsdWRlZD1tJiZwfHwhby5lcXVhbHModSxzKSYmKGQmJnB8fGgmJm0pLG4uc3RvcD1nP2w6YyxuLmlzU3RvcEluY2x1ZGVkPWc/ZjpmJiZ2fHwhby5lcXVhbHMoYyxsKSYmdixuLmRhdGE9dChyKT9yKGUuZGF0YSxpLmRhdGEpOmUuZGF0YSxufSxhLmNvbnRhaW5zPWZ1bmN0aW9uKGUsdCl7aWYoZS5pc0VtcHR5KXJldHVybiExO3ZhciBpPW8uY29tcGFyZShlLnN0YXJ0LHQpO2lmKDA9PT1pKXJldHVybiBlLmlzU3RhcnRJbmNsdWRlZDt2YXIgbj1vLmNvbXBhcmUodCxlLnN0b3ApO3JldHVybiAwPT09bj9lLmlzU3RvcEluY2x1ZGVkOjA+aSYmMD5ufSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gYS5jbG9uZSh0aGlzLGUpfSxhLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYS5lcXVhbHModGhpcyxlLHQpfSxhLnByb3RvdHlwZS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gYS5lcXVhbHNFcHNpbG9uKHRoaXMsZSx0LGkpfSxhLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBhLnRvSXNvODYwMSh0aGlzKX0sYS5FTVBUWT1yKG5ldyBhKHtzdGFydDpuZXcgbyxzdG9wOm5ldyBvLGlzU3RhcnRJbmNsdWRlZDohMSxpc1N0b3BJbmNsdWRlZDohMX0pKSxhfSksZGVmaW5lKCJDb3JlL0lzbzg2MDEiLFsiLi9mcmVlemVPYmplY3QiLCIuL0p1bGlhbkRhdGUiLCIuL1RpbWVJbnRlcnZhbCJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZSh0LmZyb21Jc284NjAxKCIwMDAwLTAxLTAxVDAwOjAwOjAwWiIpKSxyPWUodC5mcm9tSXNvODYwMSgiOTk5OS0xMi0zMVQyNDowMDowMFoiKSksbz1lKG5ldyBpKHtzdGFydDpuLHN0b3A6cn0pKSxhPXtNSU5JTVVNX1ZBTFVFOm4sTUFYSU1VTV9WQUxVRTpyLE1BWElNVU1fSU5URVJWQUw6b307cmV0dXJuIGF9KSxkZWZpbmUoIkNvcmUvTGFncmFuZ2VQb2x5bm9taWFsQXBwcm94aW1hdGlvbiIsWyIuL2RlZmluZWQiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e3R5cGU6IkxhZ3JhbmdlIn07cmV0dXJuIHQuZ2V0UmVxdWlyZWREYXRhUG9pbnRzPWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1heChlKzEsMil9LHQuaW50ZXJwb2xhdGVPcmRlclplcm89ZnVuY3Rpb24odCxpLG4scixvKXtlKG8pfHwobz1uZXcgQXJyYXkocikpO3ZhciBhLHMsbD1pLmxlbmd0aDtmb3IoYT0wO3I+YTthKyspb1thXT0wO2ZvcihhPTA7bD5hO2ErKyl7dmFyIHU9MTtmb3Iocz0wO2w+cztzKyspaWYocyE9PWEpe3ZhciBjPWlbYV0taVtzXTt1Kj0odC1pW3NdKS9jfWZvcihzPTA7cj5zO3MrKylvW3NdKz11Km5bYSpyK3NdfXJldHVybiBvfSx0fSksZGVmaW5lKCJDb3JlL0xpbmVhckFwcHJveGltYXRpb24iLFsiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17dHlwZToiTGluZWFyIn07cmV0dXJuIHQuZ2V0UmVxdWlyZWREYXRhUG9pbnRzPWZ1bmN0aW9uKCl7cmV0dXJuIDJ9LHQuaW50ZXJwb2xhdGVPcmRlclplcm89ZnVuY3Rpb24odCxpLG4scixvKXtlKG8pfHwobz1uZXcgQXJyYXkocikpO3ZhciBhLHMsbCx1PWlbMF0sYz1pWzFdO2ZvcihhPTA7cj5hO2ErKylzPW5bYV0sbD1uW2Ercl0sb1thXT0oKGwtcykqdCtjKnMtdSpsKS8oYy11KTtyZXR1cm4gb30sdH0pLGRlZmluZSgiQ29yZS9jbG9uZSIsWyIuL2RlZmF1bHRWYWx1ZSJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbihpLG4pe2lmKG51bGw9PT1pfHwib2JqZWN0IiE9dHlwZW9mIGkpcmV0dXJuIGk7bj1lKG4sITEpO3ZhciByPW5ldyBpLmNvbnN0cnVjdG9yO2Zvcih2YXIgbyBpbiBpKWlmKGkuaGFzT3duUHJvcGVydHkobykpe3ZhciBhPWlbb107biYmKGE9dChhLG4pKSxyW29dPWF9cmV0dXJuIHJ9O3JldHVybiB0fSksZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO2UoIlRoaXJkUGFydHkvd2hlbiIsW10sZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsaSxuLHIpe3JldHVybiB0KGUpLnRoZW4oaSxuLHIpfWZ1bmN0aW9uIHQoZSl7dmFyIHQsaTtyZXR1cm4gZSBpbnN0YW5jZW9mIG4/dD1lOnMoZSk/KGk9YSgpLGUudGhlbihmdW5jdGlvbihlKXtpLnJlc29sdmUoZSl9LGZ1bmN0aW9uKGUpe2kucmVqZWN0KGUpfSxmdW5jdGlvbihlKXtpLnByb2dyZXNzKGUpfSksdD1pLnByb21pc2UpOnQ9cihlKSx0fWZ1bmN0aW9uIGkodCl7cmV0dXJuIGUodCxvKX1mdW5jdGlvbiBuKGUpe3RoaXMudGhlbj1lfWZ1bmN0aW9uIHIoZSl7dmFyIGk9bmV3IG4oZnVuY3Rpb24oaSl7dHJ5e3JldHVybiB0KGk/aShlKTplKX1jYXRjaChuKXtyZXR1cm4gbyhuKX19KTtyZXR1cm4gaX1mdW5jdGlvbiBvKGUpe3ZhciBpPW5ldyBuKGZ1bmN0aW9uKGksbil7dHJ5e3JldHVybiBuP3QobihlKSk6byhlKX1jYXRjaChyKXtyZXR1cm4gbyhyKX19KTtyZXR1cm4gaX1mdW5jdGlvbiBhKCl7ZnVuY3Rpb24gZShlLHQsaSl7cmV0dXJuIGgoZSx0LGkpfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIGYoZSl9ZnVuY3Rpb24gcihlKXtyZXR1cm4gZihvKGUpKX1mdW5jdGlvbiBzKGUpe3JldHVybiBtKGUpfXZhciBsLHUsYyxkLGgsbSxmO3JldHVybiB1PW5ldyBuKGUpLGw9e3RoZW46ZSxyZXNvbHZlOmkscmVqZWN0OnIscHJvZ3Jlc3M6cyxwcm9taXNlOnUscmVzb2x2ZXI6e3Jlc29sdmU6aSxyZWplY3Q6cixwcm9ncmVzczpzfX0sYz1bXSxkPVtdLGg9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuLHI7cmV0dXJuIG49YSgpLHI9ImZ1bmN0aW9uIj09dHlwZW9mIGk/ZnVuY3Rpb24oZSl7dHJ5e24ucHJvZ3Jlc3MoaShlKSl9Y2F0Y2godCl7bi5wcm9ncmVzcyh0KX19OmZ1bmN0aW9uKGUpe24ucHJvZ3Jlc3MoZSl9LGMucHVzaChmdW5jdGlvbihpKXtpLnRoZW4oZSx0KS50aGVuKG4ucmVzb2x2ZSxuLnJlamVjdCxyKX0pLGQucHVzaChyKSxuLnByb21pc2V9LG09ZnVuY3Rpb24oZSl7cmV0dXJuIHAoZCxlKSxlfSxmPWZ1bmN0aW9uKGUpe3JldHVybiBlPXQoZSksaD1lLnRoZW4sZj10LG09ZyxwKGMsZSksZD1jPXcsZX0sbH1mdW5jdGlvbiBzKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgZS50aGVufWZ1bmN0aW9uIGwodCxpLG4scixvKXtyZXR1cm4gdigyLGFyZ3VtZW50cyksZSh0LGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIHMoZSl7cChlKX1mdW5jdGlvbiBsKGUpe2YoZSl9dmFyIHUsYyxkLGgsbSxmLHAsdixfLHk7aWYoXz10Lmxlbmd0aD4+PjAsdT1NYXRoLm1heCgwLE1hdGgubWluKGksXykpLGQ9W10sYz1fLXUrMSxoPVtdLG09YSgpLHUpZm9yKHY9bS5wcm9ncmVzcyxwPWZ1bmN0aW9uKGUpe2gucHVzaChlKSwtLWN8fChmPXA9ZyxtLnJlamVjdChoKSl9LGY9ZnVuY3Rpb24oZSl7ZC5wdXNoKGUpLC0tdXx8KGY9cD1nLG0ucmVzb2x2ZShkKSl9LHk9MDtfPnk7Kyt5KXkgaW4gdCYmZSh0W3ldLGwscyx2KTtlbHNlIG0ucmVzb2x2ZShkKTtyZXR1cm4gbS50aGVuKG4scixvKX0pfWZ1bmN0aW9uIHUoZSx0LGksbil7ZnVuY3Rpb24gcihlKXtyZXR1cm4gdD90KGVbMF0pOmVbMF19cmV0dXJuIGwoZSwxLHIsaSxuKX1mdW5jdGlvbiBjKGUsdCxpLG4pe3JldHVybiB2KDEsYXJndW1lbnRzKSxoKGUsXykudGhlbih0LGksbil9ZnVuY3Rpb24gZCgpe3JldHVybiBoKGFyZ3VtZW50cyxfKX1mdW5jdGlvbiBoKHQsaSl7cmV0dXJuIGUodCxmdW5jdGlvbih0KXt2YXIgbixyLG8scyxsLHU7aWYobz1yPXQubGVuZ3RoPj4+MCxuPVtdLHU9YSgpLG8pZm9yKHM9ZnVuY3Rpb24odCxyKXtlKHQsaSkudGhlbihmdW5jdGlvbihlKXtuW3JdPWUsLS1vfHx1LnJlc29sdmUobil9LHUucmVqZWN0KX0sbD0wO3I+bDtsKyspbCBpbiB0P3ModFtsXSxsKTotLW87ZWxzZSB1LnJlc29sdmUobik7cmV0dXJuIHUucHJvbWlzZX0pfWZ1bmN0aW9uIG0odCxpKXt2YXIgbj1DLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiBlKHQsZnVuY3Rpb24odCl7dmFyIHI7cmV0dXJuIHI9dC5sZW5ndGgsblswXT1mdW5jdGlvbih0LG4sbyl7cmV0dXJuIGUodCxmdW5jdGlvbih0KXtyZXR1cm4gZShuLGZ1bmN0aW9uKGUpe3JldHVybiBpKHQsZSxvLHIpfSl9KX0seS5hcHBseSh0LG4pfSl9ZnVuY3Rpb24gZih0LGksbil7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yO3JldHVybiBlKHQsZnVuY3Rpb24oZSl7cmV0dXJuIGU9cj9uOmUsaS5yZXNvbHZlKGUpLGV9LGZ1bmN0aW9uKGUpe3JldHVybiBpLnJlamVjdChlKSxvKGUpfSxpLnByb2dyZXNzKX1mdW5jdGlvbiBwKGUsdCl7Zm9yKHZhciBpLG49MDtpPWVbbisrXTspaSh0KX1mdW5jdGlvbiB2KGUsdCl7Zm9yKHZhciBpLG49dC5sZW5ndGg7bj5lOylpZihpPXRbLS1uXSxudWxsIT1pJiYiZnVuY3Rpb24iIT10eXBlb2YgaSl0aHJvdyBuZXcgRXJyb3IoImFyZyAiK24rIiBtdXN0IGJlIGEgZnVuY3Rpb24iKX1mdW5jdGlvbiBnKCl7fWZ1bmN0aW9uIF8oZSl7cmV0dXJuIGV9dmFyIHksQyx3O3JldHVybiBlLmRlZmVyPWEsZS5yZXNvbHZlPXQsZS5yZWplY3Q9aSxlLmpvaW49ZCxlLmFsbD1jLGUubWFwPWgsZS5yZWR1Y2U9bSxlLmFueT11LGUuc29tZT1sLGUuY2hhaW49ZixlLmlzUHJvbWlzZT1zLG4ucHJvdG90eXBlPXthbHdheXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy50aGVuKGUsZSx0KX0sb3RoZXJ3aXNlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odyxlKX0seWllbGQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbigpe3JldHVybiBlfSl9LHNwcmVhZDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBjKHQsZnVuY3Rpb24odCl7cmV0dXJuIGUuYXBwbHkodyx0KX0pfSl9fSxDPVtdLnNsaWNlLHk9W10ucmVkdWNlfHxmdW5jdGlvbihlKXt2YXIgdCxpLG4scixvO2lmKG89MCx0PU9iamVjdCh0aGlzKSxyPXQubGVuZ3RoPj4+MCxpPWFyZ3VtZW50cyxpLmxlbmd0aDw9MSlmb3IoOzspe2lmKG8gaW4gdCl7bj10W28rK107YnJlYWt9aWYoKytvPj1yKXRocm93IG5ldyBUeXBlRXJyb3J9ZWxzZSBuPWlbMV07Zm9yKDtyPm87KytvKW8gaW4gdCYmKG49ZShuLHRbb10sbyx0KSk7cmV0dXJuIG59LGV9KX0oImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmU6ZnVuY3Rpb24oZSl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTp0aGlzLndoZW49ZSgpfSksZGVmaW5lKCJDb3JlL3BhcnNlUmVzcG9uc2VIZWFkZXJzIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT1mdW5jdGlvbihlKXt2YXIgdD17fTtpZighZSlyZXR1cm4gdDtmb3IodmFyIGk9ZS5zcGxpdCgiXHJcbiIpLG49MDtuPGkubGVuZ3RoOysrbil7dmFyIHI9aVtuXSxvPXIuaW5kZXhPZigiOiAiKTtpZihvPjApe3ZhciBhPXIuc3Vic3RyaW5nKDAsbykscz1yLnN1YnN0cmluZyhvKzIpO3RbYV09c319cmV0dXJuIHR9O3JldHVybiBlfSksZGVmaW5lKCJDb3JlL1JlcXVlc3RFcnJvckV2ZW50IixbIi4vZGVmaW5lZCIsIi4vcGFyc2VSZXNwb25zZUhlYWRlcnMiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbihlLGksbil7dGhpcy5zdGF0dXNDb2RlPWUsdGhpcy5yZXNwb25zZT1pLHRoaXMucmVzcG9uc2VIZWFkZXJzPW4sInN0cmluZyI9PXR5cGVvZiB0aGlzLnJlc3BvbnNlSGVhZGVycyYmKHRoaXMucmVzcG9uc2VIZWFkZXJzPXQodGhpcy5yZXNwb25zZUhlYWRlcnMpKX07cmV0dXJuIGkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9IlJlcXVlc3QgaGFzIGZhaWxlZC4iO3JldHVybiBlKHRoaXMuc3RhdHVzQ29kZSkmJih0Kz0iIFN0YXR1cyBDb2RlOiAiK3RoaXMuc3RhdHVzQ29kZSksdH0saX0pLGRlZmluZSgiQ29yZS9SdW50aW1lRXJyb3IiLFsiLi9kZWZpbmVkIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKGUpe3RoaXMubmFtZT0iUnVudGltZUVycm9yIix0aGlzLm1lc3NhZ2U9ZTt2YXIgdDt0cnl7dGhyb3cgbmV3IEVycm9yfWNhdGNoKGkpe3Q9aS5zdGFja310aGlzLnN0YWNrPXR9O3JldHVybiB0LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMubmFtZSsiOiAiK3RoaXMubWVzc2FnZTtyZXR1cm4gZSh0aGlzLnN0YWNrKSYmKHQrPSJcbiIrdGhpcy5zdGFjay50b1N0cmluZygpKSx0fSx0fSksZGVmaW5lKCJDb3JlL2xvYWRXaXRoWGhyIixbIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vUmVxdWVzdEVycm9yRXZlbnQiLCIuL1J1bnRpbWVFcnJvciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYShlLHQpe3ZhciBpPWRlY29kZVVSSUNvbXBvbmVudCh0KTtyZXR1cm4gZT9hdG9iKGkpOml9ZnVuY3Rpb24gcyhlLHQpe2Zvcih2YXIgaT1hKGUsdCksbj1uZXcgQXJyYXlCdWZmZXIoaS5sZW5ndGgpLHI9bmV3IFVpbnQ4QXJyYXkobiksbz0wO288aS5sZW5ndGg7bysrKXJbb109aS5jaGFyQ29kZUF0KG8pO3JldHVybiBufWZ1bmN0aW9uIGwoZSxpKXtpPXQoaSwiIik7dmFyIHI9ZVsxXSxvPSEhZVsyXSxsPWVbM107c3dpdGNoKGkpe2Nhc2UiIjpjYXNlInRleHQiOnJldHVybiBhKG8sbCk7Y2FzZSJhcnJheWJ1ZmZlciI6cmV0dXJuIHMobyxsKTtjYXNlImJsb2IiOnZhciB1PXMobyxsKTtyZXR1cm4gbmV3IEJsb2IoW3VdLHt0eXBlOnJ9KTtjYXNlImRvY3VtZW50Ijp2YXIgYz1uZXcgRE9NUGFyc2VyO3JldHVybiBjLnBhcnNlRnJvbVN0cmluZyhhKG8sbCkscik7Y2FzZSJqc29uIjpyZXR1cm4gSlNPTi5wYXJzZShhKG8sbCkpO2RlZmF1bHQ6dGhyb3cgbmV3IG4oIlVuaGFuZGxlZCByZXNwb25zZVR5cGU6ICIraSl9fXZhciB1PWZ1bmN0aW9uKGkpe2k9dChpLHQuRU1QVFlfT0JKRUNUKTt2YXIgbj1pLnJlc3BvbnNlVHlwZSxyPXQoaS5tZXRob2QsIkdFVCIpLG89aS5kYXRhLGE9aS5oZWFkZXJzLHM9aS5vdmVycmlkZU1pbWVUeXBlO3JldHVybiBlKGkudXJsLGZ1bmN0aW9uKHQpe3ZhciBpPWUuZGVmZXIoKTtyZXR1cm4gdS5sb2FkKHQsbixyLG8sYSxpLHMpLGkucHJvbWlzZX0pfSxjPS9eZGF0YTooLio/KSg7YmFzZTY0KT8sKC4qKSQvO3JldHVybiB1LmxvYWQ9ZnVuY3Rpb24oZSx0LG4sYSxzLHUsZCl7dmFyIGg9Yy5leGVjKGUpO2lmKG51bGwhPT1oKXJldHVybiB1LnJlc29sdmUobChoLHQpKSx2b2lkIDA7dmFyIG09bmV3IFhNTEh0dHBSZXF1ZXN0O2lmKGkoZCkmJmkobS5vdmVycmlkZU1pbWVUeXBlKSYmbS5vdmVycmlkZU1pbWVUeXBlKGQpLG0ub3BlbihuLGUsITApLGkocykpZm9yKHZhciBmIGluIHMpcy5oYXNPd25Qcm9wZXJ0eShmKSYmbS5zZXRSZXF1ZXN0SGVhZGVyKGYsc1tmXSk7aSh0KSYmKG0ucmVzcG9uc2VUeXBlPXQpLG0ub25sb2FkPWZ1bmN0aW9uKCl7MjAwPT09bS5zdGF0dXM/aShtLnJlc3BvbnNlKT91LnJlc29sdmUobS5yZXNwb25zZSk6aShtLnJlc3BvbnNlWE1MKSYmbS5yZXNwb25zZVhNTC5oYXNDaGlsZE5vZGVzKCk/dS5yZXNvbHZlKG0ucmVzcG9uc2VYTUwpOmkobS5yZXNwb25zZVRleHQpP3UucmVzb2x2ZShtLnJlc3BvbnNlVGV4dCk6dS5yZWplY3QobmV3IG8oInVua25vd24gWE1MSHR0cFJlcXVlc3QgcmVzcG9uc2UgdHlwZS4iKSk6dS5yZWplY3QobmV3IHIobS5zdGF0dXMsbS5yZXNwb25zZSxtLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSl9LG0ub25lcnJvcj1mdW5jdGlvbigpe3UucmVqZWN0KG5ldyByKX0sbS5zZW5kKGEpfSx1LmRlZmF1bHRMb2FkPXUubG9hZCx1fSksZGVmaW5lKCJDb3JlL2xvYWRUZXh0IixbIi4vbG9hZFdpdGhYaHIiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxpKXtyZXR1cm4gZSh7dXJsOnQsaGVhZGVyczppfSl9O3JldHVybiB0fSksZGVmaW5lKCJDb3JlL2xvYWRKc29uIixbIi4vY2xvbmUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9sb2FkVGV4dCJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj17QWNjZXB0OiJhcHBsaWNhdGlvbi9qc29uLCovKjtxPTAuMDEifSxvPWZ1bmN0aW9uKGksbyl7cmV0dXJuIHQobyk/dChvLkFjY2VwdCl8fChvPWUobyksby5BY2NlcHQ9ci5BY2NlcHQpOm89cixuKGksbykudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gSlNPTi5wYXJzZShlKX0pfTtyZXR1cm4gb30pLGRlZmluZSgiQ29yZS9NYXRyaXgzIixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vZnJlZXplT2JqZWN0IiwiLi9NYXRoIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhKGUpe2Zvcih2YXIgdD0wLGk9MDs5Pmk7KytpKXt2YXIgbj1lW2ldO3QrPW4qbn1yZXR1cm4gTWF0aC5zcXJ0KHQpfWZ1bmN0aW9uIHMoZSl7Zm9yKHZhciB0PTAsaT0wOzM+aTsrK2kpe3ZhciBuPWVbdS5nZXRFbGVtZW50SW5kZXgobVtpXSxoW2ldKV07dCs9MipuKm59cmV0dXJuIE1hdGguc3FydCh0KX1mdW5jdGlvbiBsKGUsdCl7Zm9yKHZhciBpPW8uRVBTSUxPTjE1LG49MCxyPTEsYT0wOzM+YTsrK2Epe3ZhciBzPU1hdGguYWJzKGVbdS5nZXRFbGVtZW50SW5kZXgobVthXSxoW2FdKV0pO3M+biYmKHI9YSxuPXMpfXZhciBsPTEsYz0wLGQ9aFtyXSxmPW1bcl07aWYoTWF0aC5hYnMoZVt1LmdldEVsZW1lbnRJbmRleChmLGQpXSk+aSl7dmFyIHAsdj1lW3UuZ2V0RWxlbWVudEluZGV4KGYsZildLGc9ZVt1LmdldEVsZW1lbnRJbmRleChkLGQpXSxfPWVbdS5nZXRFbGVtZW50SW5kZXgoZixkKV0seT0odi1nKS8yL187cD0wPnk/LTEvKC15K01hdGguc3FydCgxK3kqeSkpOjEvKHkrTWF0aC5zcXJ0KDEreSp5KSksbD0xL01hdGguc3FydCgxK3AqcCksYz1wKmx9cmV0dXJuIHQ9dS5jbG9uZSh1LklERU5USVRZLHQpLHRbdS5nZXRFbGVtZW50SW5kZXgoZCxkKV09dFt1LmdldEVsZW1lbnRJbmRleChmLGYpXT1sLHRbdS5nZXRFbGVtZW50SW5kZXgoZixkKV09Yyx0W3UuZ2V0RWxlbWVudEluZGV4KGQsZildPS1jLHR9dmFyIHU9ZnVuY3Rpb24oZSxpLG4scixvLGEscyxsLHUpe3RoaXNbMF09dChlLDApLHRoaXNbMV09dChyLDApLHRoaXNbMl09dChzLDApLHRoaXNbM109dChpLDApLHRoaXNbNF09dChvLDApLHRoaXNbNV09dChsLDApLHRoaXNbNl09dChuLDApLHRoaXNbN109dChhLDApLHRoaXNbOF09dCh1LDApfTt1LmNsb25lPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSk/aSh0KT8odFswXT1lWzBdLHRbMV09ZVsxXSx0WzJdPWVbMl0sdFszXT1lWzNdLHRbNF09ZVs0XSx0WzVdPWVbNV0sdFs2XT1lWzZdLHRbN109ZVs3XSx0WzhdPWVbOF0sdCk6bmV3IHUoZVswXSxlWzNdLGVbNl0sZVsxXSxlWzRdLGVbN10sZVsyXSxlWzVdLGVbOF0pOnZvaWQgMH0sdS5mcm9tQXJyYXk9ZnVuY3Rpb24oZSxuLHIpe3JldHVybiBuPXQobiwwKSxpKHIpfHwocj1uZXcgdSksclswXT1lW25dLHJbMV09ZVtuKzFdLHJbMl09ZVtuKzJdLHJbM109ZVtuKzNdLHJbNF09ZVtuKzRdLHJbNV09ZVtuKzVdLHJbNl09ZVtuKzZdLHJbN109ZVtuKzddLHJbOF09ZVtuKzhdLHJ9LHUuZnJvbUNvbHVtbk1ham9yQXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdS5jbG9uZShlLHQpfSx1LmZyb21Sb3dNYWpvckFycmF5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodCk/KHRbMF09ZVswXSx0WzFdPWVbM10sdFsyXT1lWzZdLHRbM109ZVsxXSx0WzRdPWVbNF0sdFs1XT1lWzddLHRbNl09ZVsyXSx0WzddPWVbNV0sdFs4XT1lWzhdLHQpOm5ldyB1KGVbMF0sZVsxXSxlWzJdLGVbM10sZVs0XSxlWzVdLGVbNl0sZVs3XSxlWzhdKX0sdS5mcm9tUXVhdGVybmlvbj1mdW5jdGlvbihlLHQpe3ZhciBuPWUueCplLngscj1lLngqZS55LG89ZS54KmUueixhPWUueCplLncscz1lLnkqZS55LGw9ZS55KmUueixjPWUueSplLncsZD1lLnoqZS56LGg9ZS56KmUudyxtPWUudyplLncsZj1uLXMtZCttLHA9Miooci1oKSx2PTIqKG8rYyksZz0yKihyK2gpLF89LW4rcy1kK20seT0yKihsLWEpLEM9Miooby1jKSx3PTIqKGwrYSksRT0tbi1zK2QrbTtyZXR1cm4gaSh0KT8odFswXT1mLHRbMV09Zyx0WzJdPUMsdFszXT1wLHRbNF09Xyx0WzVdPXcsdFs2XT12LHRbN109eSx0WzhdPUUsdCk6bmV3IHUoZixwLHYsZyxfLHksQyx3LEUpfSx1LmZyb21TY2FsZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWUueCx0WzFdPTAsdFsyXT0wLHRbM109MCx0WzRdPWUueSx0WzVdPTAsdFs2XT0wLHRbN109MCx0WzhdPWUueix0KTpuZXcgdShlLngsMCwwLDAsZS55LDAsMCwwLGUueil9LHUuZnJvbVVuaWZvcm1TY2FsZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWUsdFsxXT0wLHRbMl09MCx0WzNdPTAsdFs0XT1lLHRbNV09MCx0WzZdPTAsdFs3XT0wLHRbOF09ZSx0KTpuZXcgdShlLDAsMCwwLGUsMCwwLDAsZSl9LHUuZnJvbUNyb3NzUHJvZHVjdD1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPTAsdFsxXT1lLnosdFsyXT0tZS55LHRbM109LWUueix0WzRdPTAsdFs1XT1lLngsdFs2XT1lLnksdFs3XT0tZS54LHRbOF09MCx0KTpuZXcgdSgwLC1lLnosZS55LGUueiwwLC1lLngsLWUueSxlLngsMCl9LHUuZnJvbVJvdGF0aW9uWD1mdW5jdGlvbihlLHQpe3ZhciBuPU1hdGguY29zKGUpLHI9TWF0aC5zaW4oZSk7cmV0dXJuIGkodCk/KHRbMF09MSx0WzFdPTAsdFsyXT0wLHRbM109MCx0WzRdPW4sdFs1XT1yLHRbNl09MCx0WzddPS1yLHRbOF09bix0KTpuZXcgdSgxLDAsMCwwLG4sLXIsMCxyLG4pfSx1LmZyb21Sb3RhdGlvblk9ZnVuY3Rpb24oZSx0KXt2YXIgbj1NYXRoLmNvcyhlKSxyPU1hdGguc2luKGUpO3JldHVybiBpKHQpPyh0WzBdPW4sdFsxXT0wLHRbMl09LXIsdFszXT0wLHRbNF09MSx0WzVdPTAsdFs2XT1yLHRbN109MCx0WzhdPW4sdCk6bmV3IHUobiwwLHIsMCwxLDAsLXIsMCxuKX0sdS5mcm9tUm90YXRpb25aPWZ1bmN0aW9uKGUsdCl7dmFyIG49TWF0aC5jb3MoZSkscj1NYXRoLnNpbihlKTtyZXR1cm4gaSh0KT8odFswXT1uLHRbMV09cix0WzJdPTAsdFszXT0tcix0WzRdPW4sdFs1XT0wLHRbNl09MCx0WzddPTAsdFs4XT0xLHQpOm5ldyB1KG4sLXIsMCxyLG4sMCwwLDAsMSl9LHUudG9BcnJheT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWVbMF0sdFsxXT1lWzFdLHRbMl09ZVsyXSx0WzNdPWVbM10sdFs0XT1lWzRdLHRbNV09ZVs1XSx0WzZdPWVbNl0sdFs3XT1lWzddLHRbOF09ZVs4XSx0KTpbZVswXSxlWzFdLGVbMl0sZVszXSxlWzRdLGVbNV0sZVs2XSxlWzddLGVbOF1dfSx1LmdldEVsZW1lbnRJbmRleD1mdW5jdGlvbihlLHQpe3JldHVybiAzKmUrdH0sdS5nZXRDb2x1bW49ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPTMqdCxyPWVbbl0sbz1lW24rMV0sYT1lW24rMl07cmV0dXJuIGkueD1yLGkueT1vLGkuej1hLGl9LHUuc2V0Q29sdW1uPWZ1bmN0aW9uKGUsdCxpLG4pe249dS5jbG9uZShlLG4pO3ZhciByPTMqdDtyZXR1cm4gbltyXT1pLngsbltyKzFdPWkueSxuW3IrMl09aS56LG59LHUuZ2V0Um93PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1lW3RdLHI9ZVt0KzNdLG89ZVt0KzZdO3JldHVybiBpLng9bixpLnk9cixpLno9byxpfSx1LnNldFJvdz1mdW5jdGlvbihlLHQsaSxuKXtyZXR1cm4gbj11LmNsb25lKGUsbiksblt0XT1pLngsblt0KzNdPWkueSxuW3QrNl09aS56LG59O3ZhciBjPW5ldyBlO3UuZ2V0U2NhbGU9ZnVuY3Rpb24odCxpKXtyZXR1cm4gaS54PWUubWFnbml0dWRlKGUuZnJvbUVsZW1lbnRzKHRbMF0sdFsxXSx0WzJdLGMpKSxpLnk9ZS5tYWduaXR1ZGUoZS5mcm9tRWxlbWVudHModFszXSx0WzRdLHRbNV0sYykpLGkuej1lLm1hZ25pdHVkZShlLmZyb21FbGVtZW50cyh0WzZdLHRbN10sdFs4XSxjKSksaX07dmFyIGQ9bmV3IGU7dS5nZXRNYXhpbXVtU2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIHUuZ2V0U2NhbGUodCxkKSxlLm1heGltdW1Db21wb25lbnQoZCl9LHUubXVsdGlwbHk9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWVbMF0qdFswXStlWzNdKnRbMV0rZVs2XSp0WzJdLHI9ZVsxXSp0WzBdK2VbNF0qdFsxXStlWzddKnRbMl0sbz1lWzJdKnRbMF0rZVs1XSp0WzFdK2VbOF0qdFsyXSxhPWVbMF0qdFszXStlWzNdKnRbNF0rZVs2XSp0WzVdLHM9ZVsxXSp0WzNdK2VbNF0qdFs0XStlWzddKnRbNV0sbD1lWzJdKnRbM10rZVs1XSp0WzRdK2VbOF0qdFs1XSx1PWVbMF0qdFs2XStlWzNdKnRbN10rZVs2XSp0WzhdLGM9ZVsxXSp0WzZdK2VbNF0qdFs3XStlWzddKnRbOF0sZD1lWzJdKnRbNl0rZVs1XSp0WzddK2VbOF0qdFs4XTsKcmV0dXJuIGlbMF09bixpWzFdPXIsaVsyXT1vLGlbM109YSxpWzRdPXMsaVs1XT1sLGlbNl09dSxpWzddPWMsaVs4XT1kLGl9LHUuYWRkPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaVswXT1lWzBdK3RbMF0saVsxXT1lWzFdK3RbMV0saVsyXT1lWzJdK3RbMl0saVszXT1lWzNdK3RbM10saVs0XT1lWzRdK3RbNF0saVs1XT1lWzVdK3RbNV0saVs2XT1lWzZdK3RbNl0saVs3XT1lWzddK3RbN10saVs4XT1lWzhdK3RbOF0saX0sdS5zdWJ0cmFjdD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGlbMF09ZVswXS10WzBdLGlbMV09ZVsxXS10WzFdLGlbMl09ZVsyXS10WzJdLGlbM109ZVszXS10WzNdLGlbNF09ZVs0XS10WzRdLGlbNV09ZVs1XS10WzVdLGlbNl09ZVs2XS10WzZdLGlbN109ZVs3XS10WzddLGlbOF09ZVs4XS10WzhdLGl9LHUubXVsdGlwbHlCeVZlY3Rvcj1mdW5jdGlvbihlLHQsaSl7dmFyIG49dC54LHI9dC55LG89dC56LGE9ZVswXSpuK2VbM10qcitlWzZdKm8scz1lWzFdKm4rZVs0XSpyK2VbN10qbyxsPWVbMl0qbitlWzVdKnIrZVs4XSpvO3JldHVybiBpLng9YSxpLnk9cyxpLno9bCxpfSx1Lm11bHRpcGx5QnlTY2FsYXI9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpWzBdPWVbMF0qdCxpWzFdPWVbMV0qdCxpWzJdPWVbMl0qdCxpWzNdPWVbM10qdCxpWzRdPWVbNF0qdCxpWzVdPWVbNV0qdCxpWzZdPWVbNl0qdCxpWzddPWVbN10qdCxpWzhdPWVbOF0qdCxpfSx1Lm5lZ2F0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0WzBdPS1lWzBdLHRbMV09LWVbMV0sdFsyXT0tZVsyXSx0WzNdPS1lWzNdLHRbNF09LWVbNF0sdFs1XT0tZVs1XSx0WzZdPS1lWzZdLHRbN109LWVbN10sdFs4XT0tZVs4XSx0fSx1LnRyYW5zcG9zZT1mdW5jdGlvbihlLHQpe3ZhciBpPWVbMF0sbj1lWzNdLHI9ZVs2XSxvPWVbMV0sYT1lWzRdLHM9ZVs3XSxsPWVbMl0sdT1lWzVdLGM9ZVs4XTtyZXR1cm4gdFswXT1pLHRbMV09bix0WzJdPXIsdFszXT1vLHRbNF09YSx0WzVdPXMsdFs2XT1sLHRbN109dSx0WzhdPWMsdH07dmFyIGg9WzEsMCwwXSxtPVsyLDIsMV0sZj1uZXcgdSxwPW5ldyB1O3JldHVybiB1LmNvbXB1dGVFaWdlbkRlY29tcG9zaXRpb249ZnVuY3Rpb24oZSx0KXt2YXIgbj1vLkVQU0lMT04yMCxyPTEwLGM9MCxkPTA7aSh0KXx8KHQ9e30pO2Zvcih2YXIgaD10LnVuaXRhcnk9dS5jbG9uZSh1LklERU5USVRZLHQudW5pdGFyeSksbT10LmRpYWdvbmFsPXUuY2xvbmUoZSx0LmRpYWdvbmFsKSx2PW4qYShtKTtyPmQmJnMobSk+djspbChtLGYpLHUudHJhbnNwb3NlKGYscCksdS5tdWx0aXBseShtLGYsbSksdS5tdWx0aXBseShwLG0sbSksdS5tdWx0aXBseShoLGYsaCksKytjPjImJigrK2QsYz0wKTtyZXR1cm4gdH0sdS5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdFswXT1NYXRoLmFicyhlWzBdKSx0WzFdPU1hdGguYWJzKGVbMV0pLHRbMl09TWF0aC5hYnMoZVsyXSksdFszXT1NYXRoLmFicyhlWzNdKSx0WzRdPU1hdGguYWJzKGVbNF0pLHRbNV09TWF0aC5hYnMoZVs1XSksdFs2XT1NYXRoLmFicyhlWzZdKSx0WzddPU1hdGguYWJzKGVbN10pLHRbOF09TWF0aC5hYnMoZVs4XSksdH0sdS5kZXRlcm1pbmFudD1mdW5jdGlvbihlKXt2YXIgdD1lWzBdLGk9ZVszXSxuPWVbNl0scj1lWzFdLG89ZVs0XSxhPWVbN10scz1lWzJdLGw9ZVs1XSx1PWVbOF07cmV0dXJuIHQqKG8qdS1sKmEpK3IqKGwqbi1pKnUpK3MqKGkqYS1vKm4pfSx1LmludmVyc2U9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lWzBdLHI9ZVsxXSxhPWVbMl0scz1lWzNdLGw9ZVs0XSxjPWVbNV0sZD1lWzZdLGg9ZVs3XSxtPWVbOF0sZj11LmRldGVybWluYW50KGUpO2lmKE1hdGguYWJzKGYpPD1vLkVQU0lMT04xNSl0aHJvdyBuZXcgbigibWF0cml4IGlzIG5vdCBpbnZlcnRpYmxlIik7dFswXT1sKm0taCpjLHRbMV09aCphLXIqbSx0WzJdPXIqYy1sKmEsdFszXT1kKmMtcyptLHRbNF09aSptLWQqYSx0WzVdPXMqYS1pKmMsdFs2XT1zKmgtZCpsLHRbN109ZCpyLWkqaCx0WzhdPWkqbC1zKnI7dmFyIHA9MS9mO3JldHVybiB1Lm11bHRpcGx5QnlTY2FsYXIodCxwLHQpfSx1LmVxdWFscz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8aShlKSYmaSh0KSYmZVswXT09PXRbMF0mJmVbMV09PT10WzFdJiZlWzJdPT09dFsyXSYmZVszXT09PXRbM10mJmVbNF09PT10WzRdJiZlWzVdPT09dFs1XSYmZVs2XT09PXRbNl0mJmVbN109PT10WzddJiZlWzhdPT09dFs4XX0sdS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZT09PXR8fGkoZSkmJmkodCkmJk1hdGguYWJzKGVbMF0tdFswXSk8PW4mJk1hdGguYWJzKGVbMV0tdFsxXSk8PW4mJk1hdGguYWJzKGVbMl0tdFsyXSk8PW4mJk1hdGguYWJzKGVbM10tdFszXSk8PW4mJk1hdGguYWJzKGVbNF0tdFs0XSk8PW4mJk1hdGguYWJzKGVbNV0tdFs1XSk8PW4mJk1hdGguYWJzKGVbNl0tdFs2XSk8PW4mJk1hdGguYWJzKGVbN10tdFs3XSk8PW4mJk1hdGguYWJzKGVbOF0tdFs4XSk8PW59LHUuSURFTlRJVFk9cihuZXcgdSgxLDAsMCwwLDEsMCwwLDAsMSkpLHUuQ09MVU1OMFJPVzA9MCx1LkNPTFVNTjBST1cxPTEsdS5DT0xVTU4wUk9XMj0yLHUuQ09MVU1OMVJPVzA9Myx1LkNPTFVNTjFST1cxPTQsdS5DT0xVTU4xUk9XMj01LHUuQ09MVU1OMlJPVzA9Nix1LkNPTFVNTjJST1cxPTcsdS5DT0xVTU4yUk9XMj04LHUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiB1LmNsb25lKHRoaXMsZSl9LHUucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdS5lcXVhbHModGhpcyxlKX0sdS5wcm90b3R5cGUuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQpe3JldHVybiB1LmVxdWFsc0Vwc2lsb24odGhpcyxlLHQpfSx1LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzWzBdKyIsICIrdGhpc1szXSsiLCAiK3RoaXNbNl0rIilcbiIrIigiK3RoaXNbMV0rIiwgIit0aGlzWzRdKyIsICIrdGhpc1s3XSsiKVxuIisiKCIrdGhpc1syXSsiLCAiK3RoaXNbNV0rIiwgIit0aGlzWzhdKyIpIn0sdX0pLGRlZmluZSgiQ29yZS9RdWF0ZXJuaW9uIixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRmVhdHVyZURldGVjdGlvbiIsIi4vZnJlZXplT2JqZWN0IiwiLi9NYXRoIiwiLi9NYXRyaXgzIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24oZSxpLG4scil7dGhpcy54PXQoZSwwKSx0aGlzLnk9dChpLDApLHRoaXMuej10KG4sMCksdGhpcy53PXQociwwKX0sdT1uZXcgZTtsLmZyb21BeGlzQW5nbGU9ZnVuY3Rpb24odCxuLHIpe3ZhciBvPW4vMixhPU1hdGguc2luKG8pO3U9ZS5ub3JtYWxpemUodCx1KTt2YXIgcz11LngqYSxjPXUueSphLGQ9dS56KmEsaD1NYXRoLmNvcyhvKTtyZXR1cm4gaShyKT8oci54PXMsci55PWMsci56PWQsci53PWgscik6bmV3IGwocyxjLGQsaCl9O3ZhciBjPVsxLDIsMF0sZD1uZXcgQXJyYXkoMyk7bC5mcm9tUm90YXRpb25NYXRyaXg9ZnVuY3Rpb24oZSx0KXt2YXIgbixyLG8sYSx1LGg9ZVtzLkNPTFVNTjBST1cwXSxtPWVbcy5DT0xVTU4xUk9XMV0sZj1lW3MuQ09MVU1OMlJPVzJdLHA9aCttK2Y7aWYocD4wKW49TWF0aC5zcXJ0KHArMSksdT0uNSpuLG49LjUvbixyPShlW3MuQ09MVU1OMVJPVzJdLWVbcy5DT0xVTU4yUk9XMV0pKm4sbz0oZVtzLkNPTFVNTjJST1cwXS1lW3MuQ09MVU1OMFJPVzJdKSpuLGE9KGVbcy5DT0xVTU4wUk9XMV0tZVtzLkNPTFVNTjFST1cwXSkqbjtlbHNle3ZhciB2PWMsZz0wO20+aCYmKGc9MSksZj5oJiZmPm0mJihnPTIpO3ZhciBfPXZbZ10seT12W19dO249TWF0aC5zcXJ0KGVbcy5nZXRFbGVtZW50SW5kZXgoZyxnKV0tZVtzLmdldEVsZW1lbnRJbmRleChfLF8pXS1lW3MuZ2V0RWxlbWVudEluZGV4KHkseSldKzEpO3ZhciBDPWQ7Q1tnXT0uNSpuLG49LjUvbix1PShlW3MuZ2V0RWxlbWVudEluZGV4KHksXyldLWVbcy5nZXRFbGVtZW50SW5kZXgoXyx5KV0pKm4sQ1tfXT0oZVtzLmdldEVsZW1lbnRJbmRleChfLGcpXStlW3MuZ2V0RWxlbWVudEluZGV4KGcsXyldKSpuLENbeV09KGVbcy5nZXRFbGVtZW50SW5kZXgoeSxnKV0rZVtzLmdldEVsZW1lbnRJbmRleChnLHkpXSkqbixyPS1DWzBdLG89LUNbMV0sYT0tQ1syXX1yZXR1cm4gaSh0KT8odC54PXIsdC55PW8sdC56PWEsdC53PXUsdCk6bmV3IGwocixvLGEsdSl9O3ZhciBoPW5ldyBlLG09bmV3IGUsZj1uZXcgbCxwPW5ldyBsLHY9bmV3IGw7bC5wYWNrZWRMZW5ndGg9NCxsLnBhY2s9ZnVuY3Rpb24oZSxpLG4pe249dChuLDApLGlbbisrXT1lLngsaVtuKytdPWUueSxpW24rK109ZS56LGlbbl09ZS53fSxsLnVucGFjaz1mdW5jdGlvbihlLG4scil7cmV0dXJuIG49dChuLDApLGkocil8fChyPW5ldyBsKSxyLng9ZVtuXSxyLnk9ZVtuKzFdLHIuej1lW24rMl0sci53PWVbbiszXSxyfSxsLnBhY2tlZEludGVycG9sYXRpb25MZW5ndGg9MyxsLmNvbnZlcnRQYWNrZWRBcnJheUZvckludGVycG9sYXRpb249ZnVuY3Rpb24oZSx0LGksbil7bC51bnBhY2soZSw0KmksdiksbC5jb25qdWdhdGUodix2KTtmb3IodmFyIHI9MCxvPWktdCsxO28+cjtyKyspe3ZhciBhPTMqcjtsLnVucGFjayhlLDQqKHQrciksZiksbC5tdWx0aXBseShmLHYsZiksZi53PDAmJmwubmVnYXRlKGYsZiksbC5jb21wdXRlQXhpcyhmLGgpO3ZhciBzPWwuY29tcHV0ZUFuZ2xlKGYpO25bYV09aC54KnMsblthKzFdPWgueSpzLG5bYSsyXT1oLnoqc319LGwudW5wYWNrSW50ZXJwb2xhdGlvblJlc3VsdD1mdW5jdGlvbih0LG4scixvLGEpe2koYSl8fChhPW5ldyBsKSxlLmZyb21BcnJheSh0LDAsbSk7dmFyIHM9ZS5tYWduaXR1ZGUobSk7cmV0dXJuIGwudW5wYWNrKG4sNCpvLHApLDA9PT1zP2wuY2xvbmUobC5JREVOVElUWSxmKTpsLmZyb21BeGlzQW5nbGUobSxzLGYpLGwubXVsdGlwbHkoZixwLGEpfSxsLmNsb25lPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSk/aSh0KT8odC54PWUueCx0Lnk9ZS55LHQuej1lLnosdC53PWUudyx0KTpuZXcgbChlLngsZS55LGUueixlLncpOnZvaWQgMH0sbC5jb25qdWdhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PS1lLngsdC55PS1lLnksdC56PS1lLnosdC53PWUudyx0fSxsLm1hZ25pdHVkZVNxdWFyZWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUueCplLngrZS55KmUueStlLnoqZS56K2UudyplLnd9LGwubWFnbml0dWRlPWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnNxcnQobC5tYWduaXR1ZGVTcXVhcmVkKGUpKX0sbC5ub3JtYWxpemU9ZnVuY3Rpb24oZSx0KXt2YXIgaT0xL2wubWFnbml0dWRlKGUpLG49ZS54Kmkscj1lLnkqaSxvPWUueippLGE9ZS53Kmk7cmV0dXJuIHQueD1uLHQueT1yLHQuej1vLHQudz1hLHR9LGwuaW52ZXJzZT1mdW5jdGlvbihlLHQpe3ZhciBpPWwubWFnbml0dWRlU3F1YXJlZChlKTtyZXR1cm4gdD1sLmNvbmp1Z2F0ZShlLHQpLGwubXVsdGlwbHlCeVNjYWxhcih0LDEvaSx0KX0sbC5hZGQ9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54K3QueCxpLnk9ZS55K3QueSxpLno9ZS56K3QueixpLnc9ZS53K3QudyxpfSxsLnN1YnRyYWN0PWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PWUueC10LngsaS55PWUueS10LnksaS56PWUuei10LnosaS53PWUudy10LncsaX0sbC5uZWdhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PS1lLngsdC55PS1lLnksdC56PS1lLnosdC53PS1lLncsdH0sbC5kb3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS54KnQueCtlLnkqdC55K2Uueip0LnorZS53KnQud30sbC5tdWx0aXBseT1mdW5jdGlvbihlLHQsaSl7dmFyIG49ZS54LHI9ZS55LG89ZS56LGE9ZS53LHM9dC54LGw9dC55LHU9dC56LGM9dC53LGQ9YSpzK24qYytyKnUtbypsLGg9YSpsLW4qdStyKmMrbypzLG09YSp1K24qbC1yKnMrbypjLGY9YSpjLW4qcy1yKmwtbyp1O3JldHVybiBpLng9ZCxpLnk9aCxpLno9bSxpLnc9ZixpfSxsLm11bHRpcGx5QnlTY2FsYXI9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54KnQsaS55PWUueSp0LGkuej1lLnoqdCxpLnc9ZS53KnQsaX0sbC5kaXZpZGVCeVNjYWxhcj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngvdCxpLnk9ZS55L3QsaS56PWUuei90LGkudz1lLncvdCxpfSxsLmNvbXB1dGVBeGlzPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZS53O2lmKE1hdGguYWJzKGktMSk8YS5FUFNJTE9ONilyZXR1cm4gdC54PXQueT10Lno9MCx0O3ZhciBuPTEvTWF0aC5zcXJ0KDEtaSppKTtyZXR1cm4gdC54PWUueCpuLHQueT1lLnkqbix0Lno9ZS56Km4sdH0sbC5jb21wdXRlQW5nbGU9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguYWJzKGUudy0xKTxhLkVQU0lMT042PzA6MipNYXRoLmFjb3MoZS53KX07dmFyIGc9bmV3IGw7bC5sZXJwPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiBnPWwubXVsdGlwbHlCeVNjYWxhcih0LGksZyksbj1sLm11bHRpcGx5QnlTY2FsYXIoZSwxLWksbiksbC5hZGQoZyxuLG4pfTt2YXIgXz1uZXcgbCx5PW5ldyBsLEM9bmV3IGw7bC5zbGVycD1mdW5jdGlvbihlLHQsaSxuKXt2YXIgcj1sLmRvdChlLHQpLG89dDtpZigwPnImJihyPS1yLG89Xz1sLm5lZ2F0ZSh0LF8pKSwxLXI8YS5FUFNJTE9ONilyZXR1cm4gbC5sZXJwKGUsbyxpLG4pO3ZhciBzPU1hdGguYWNvcyhyKTtyZXR1cm4geT1sLm11bHRpcGx5QnlTY2FsYXIoZSxNYXRoLnNpbigoMS1pKSpzKSx5KSxDPWwubXVsdGlwbHlCeVNjYWxhcihvLE1hdGguc2luKGkqcyksQyksbj1sLmFkZCh5LEMsbiksbC5tdWx0aXBseUJ5U2NhbGFyKG4sMS9NYXRoLnNpbihzKSxuKX0sbC5sb2c9ZnVuY3Rpb24odCxpKXt2YXIgbj1hLmFjb3NDbGFtcGVkKHQudykscj0wO3JldHVybiAwIT09biYmKHI9bi9NYXRoLnNpbihuKSksZS5tdWx0aXBseUJ5U2NhbGFyKHQscixpKX0sbC5leHA9ZnVuY3Rpb24odCxpKXt2YXIgbj1lLm1hZ25pdHVkZSh0KSxyPTA7cmV0dXJuIDAhPT1uJiYocj1NYXRoLnNpbihuKS9uKSxpLng9dC54KnIsaS55PXQueSpyLGkuej10LnoqcixpLnc9TWF0aC5jb3MobiksaX07dmFyIHc9bmV3IGUsRT1uZXcgZSxiPW5ldyBsLFM9bmV3IGw7bC5jb21wdXRlSW5uZXJRdWFkcmFuZ2xlPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvPWwuY29uanVnYXRlKGksYik7bC5tdWx0aXBseShvLG4sUyk7dmFyIGE9bC5sb2coUyx3KTtsLm11bHRpcGx5KG8sdCxTKTt2YXIgcz1sLmxvZyhTLEUpO3JldHVybiBlLmFkZChhLHMsYSksZS5tdWx0aXBseUJ5U2NhbGFyKGEsLjI1LGEpLGUubmVnYXRlKGEsYSksbC5leHAoYSxiKSxsLm11bHRpcGx5KGksYixyKX0sbC5zcXVhZD1mdW5jdGlvbihlLHQsaSxuLHIsbyl7dmFyIGE9bC5zbGVycChlLHQscixiKSxzPWwuc2xlcnAoaSxuLHIsUyk7cmV0dXJuIGwuc2xlcnAoYSxzLDIqciooMS1yKSxvKX07Zm9yKHZhciBUPW5ldyBsLHg9MS45MDExMDc0NTM1MTczMDAzLEE9ci5zdXBwb3J0c1R5cGVkQXJyYXlzKCk/bmV3IEZsb2F0MzJBcnJheSg4KTpbXSxQPXIuc3VwcG9ydHNUeXBlZEFycmF5cygpP25ldyBGbG9hdDMyQXJyYXkoOCk6W10sTT1yLnN1cHBvcnRzVHlwZWRBcnJheXMoKT9uZXcgRmxvYXQzMkFycmF5KDgpOltdLEk9ci5zdXBwb3J0c1R5cGVkQXJyYXlzKCk/bmV3IEZsb2F0MzJBcnJheSg4KTpbXSxEPTA7Nz5EOysrRCl7dmFyIE89RCsxLFI9MipPKzE7QVtEXT0xLyhPKlIpLFBbRF09Ty9SfXJldHVybiBBWzddPXgvMTM2LFBbN109OCp4LzE3LGwuZmFzdFNsZXJwPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByLG89bC5kb3QoZSx0KTtvPj0wP3I9MToocj0tMSxvPS1vKTtmb3IodmFyIGE9by0xLHM9MS1pLHU9aSppLGM9cypzLGQ9NztkPj0wOy0tZClNW2RdPShBW2RdKnUtUFtkXSkqYSxJW2RdPShBW2RdKmMtUFtkXSkqYTt2YXIgaD1yKmkqKDErTVswXSooMStNWzFdKigxK01bMl0qKDErTVszXSooMStNWzRdKigxK01bNV0qKDErTVs2XSooMStNWzddKSkpKSkpKSksbT1zKigxK0lbMF0qKDErSVsxXSooMStJWzJdKigxK0lbM10qKDErSVs0XSooMStJWzVdKigxK0lbNl0qKDErSVs3XSkpKSkpKSkpLGY9bC5tdWx0aXBseUJ5U2NhbGFyKGUsbSxUKTtyZXR1cm4gbC5tdWx0aXBseUJ5U2NhbGFyKHQsaCxuKSxsLmFkZChmLG4sbil9LGwuZmFzdFNxdWFkPWZ1bmN0aW9uKGUsdCxpLG4scixvKXt2YXIgYT1sLmZhc3RTbGVycChlLHQscixiKSxzPWwuZmFzdFNsZXJwKGksbixyLFMpO3JldHVybiBsLmZhc3RTbGVycChhLHMsMipyKigxLXIpLG8pfSxsLmVxdWFscz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8aShlKSYmaSh0KSYmZS54PT09dC54JiZlLnk9PT10LnkmJmUuej09PXQueiYmZS53PT09dC53fSxsLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlPT09dHx8aShlKSYmaSh0KSYmTWF0aC5hYnMoZS54LXQueCk8PW4mJk1hdGguYWJzKGUueS10LnkpPD1uJiZNYXRoLmFicyhlLnotdC56KTw9biYmTWF0aC5hYnMoZS53LXQudyk8PW59LGwuWkVSTz1vKG5ldyBsKDAsMCwwLDApKSxsLklERU5USVRZPW8obmV3IGwoMCwwLDAsMSkpLGwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiBsLmNsb25lKHRoaXMsZSl9LGwucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gbC5lcXVhbHModGhpcyxlKX0sbC5wcm90b3R5cGUuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQpe3JldHVybiBsLmVxdWFsc0Vwc2lsb24odGhpcyxlLHQpfSxsLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzLngrIiwgIit0aGlzLnkrIiwgIit0aGlzLnorIiwgIit0aGlzLncrIikifSxsfSksZGVmaW5lKCJDb3JlL1JlY3RhbmdsZSIsWyIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9mcmVlemVPYmplY3QiLCIuL01hdGgiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9ZnVuY3Rpb24oZSxpLG4scil7dGhpcy53ZXN0PXQoZSwwKSx0aGlzLnNvdXRoPXQoaSwwKSx0aGlzLmVhc3Q9dChuLDApLHRoaXMubm9ydGg9dChyLDApfTtzLmZyb21EZWdyZWVzPWZ1bmN0aW9uKGUsbixyLG8sbCl7cmV0dXJuIGU9YS50b1JhZGlhbnModChlLDApKSxuPWEudG9SYWRpYW5zKHQobiwwKSkscj1hLnRvUmFkaWFucyh0KHIsMCkpLG89YS50b1JhZGlhbnModChvLDApKSxpKGwpPyhsLndlc3Q9ZSxsLnNvdXRoPW4sbC5lYXN0PXIsbC5ub3J0aD1vLGwpOm5ldyBzKGUsbixyLG8pfSxzLmZyb21DYXJ0b2dyYXBoaWNBcnJheT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1OdW1iZXIuTUFYX1ZBTFVFLHI9LU51bWJlci5NQVhfVkFMVUUsbz1OdW1iZXIuTUFYX1ZBTFVFLGE9LU51bWJlci5NQVhfVkFMVUUsbD0wLHU9ZS5sZW5ndGg7dT5sO2wrKyl7dmFyIGM9ZVtsXTtuPU1hdGgubWluKG4sYy5sb25naXR1ZGUpLHI9TWF0aC5tYXgocixjLmxvbmdpdHVkZSksbz1NYXRoLm1pbihvLGMubGF0aXR1ZGUpLGE9TWF0aC5tYXgoYSxjLmxhdGl0dWRlKX1yZXR1cm4gaSh0KT8odC53ZXN0PW4sdC5zb3V0aD1vLHQuZWFzdD1yLHQubm9ydGg9YSx0KTpuZXcgcyhuLG8scixhKX0scy5wYWNrZWRMZW5ndGg9NCxzLnBhY2s9ZnVuY3Rpb24oZSxpLG4pe249dChuLDApLGlbbisrXT1lLndlc3QsaVtuKytdPWUuc291dGgsaVtuKytdPWUuZWFzdCxpW25dPWUubm9ydGh9LHMudW5wYWNrPWZ1bmN0aW9uKGUsbixyKXtyZXR1cm4gbj10KG4sMCksaShyKXx8KHI9bmV3IHMpLHIud2VzdD1lW24rK10sci5zb3V0aD1lW24rK10sci5lYXN0PWVbbisrXSxyLm5vcnRoPWVbbl0scn0scy5jbG9uZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKGUpP2kodCk/KHQud2VzdD1lLndlc3QsdC5zb3V0aD1lLnNvdXRoLHQuZWFzdD1lLmVhc3QsdC5ub3J0aD1lLm5vcnRoLHQpOm5ldyBzKGUud2VzdCxlLnNvdXRoLGUuZWFzdCxlLm5vcnRoKTp2b2lkIDB9LHMucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiBzLmNsb25lKHRoaXMsZSl9LHMucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gcy5lcXVhbHModGhpcyxlKX0scy5lcXVhbHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR8fGkoZSkmJmkodCkmJmUud2VzdD09PXQud2VzdCYmZS5zb3V0aD09PXQuc291dGgmJmUuZWFzdD09PXQuZWFzdCYmZS5ub3J0aD09PXQubm9ydGh9LHMucHJvdG90eXBlLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaShlKSYmTWF0aC5hYnModGhpcy53ZXN0LWUud2VzdCk8PXQmJk1hdGguYWJzKHRoaXMuc291dGgtZS5zb3V0aCk8PXQmJk1hdGguYWJzKHRoaXMuZWFzdC1lLmVhc3QpPD10JiZNYXRoLmFicyh0aGlzLm5vcnRoLWUubm9ydGgpPD10fSxzLnZhbGlkYXRlPWZ1bmN0aW9uKCl7fSxzLnNvdXRod2VzdD1mdW5jdGlvbih0LG4pe3JldHVybiBpKG4pPyhuLmxvbmdpdHVkZT10Lndlc3Qsbi5sYXRpdHVkZT10LnNvdXRoLG4uaGVpZ2h0PTAsbik6bmV3IGUodC53ZXN0LHQuc291dGgpfSxzLm5vcnRod2VzdD1mdW5jdGlvbih0LG4pe3JldHVybiBpKG4pPyhuLmxvbmdpdHVkZT10Lndlc3Qsbi5sYXRpdHVkZT10Lm5vcnRoLG4uaGVpZ2h0PTAsbik6bmV3IGUodC53ZXN0LHQubm9ydGgpfSxzLm5vcnRoZWFzdD1mdW5jdGlvbih0LG4pe3JldHVybiBpKG4pPyhuLmxvbmdpdHVkZT10LmVhc3Qsbi5sYXRpdHVkZT10Lm5vcnRoLG4uaGVpZ2h0PTAsbik6bmV3IGUodC5lYXN0LHQubm9ydGgpfSxzLnNvdXRoZWFzdD1mdW5jdGlvbih0LG4pe3JldHVybiBpKG4pPyhuLmxvbmdpdHVkZT10LmVhc3Qsbi5sYXRpdHVkZT10LnNvdXRoLG4uaGVpZ2h0PTAsbik6bmV3IGUodC5lYXN0LHQuc291dGgpfSxzLmNlbnRlcj1mdW5jdGlvbih0LG4pe3ZhciByPXQuZWFzdCxvPXQud2VzdCxzPS41KihvK3IpO3JldHVybiBvPnImJihzPWEubmVnYXRpdmVQaVRvUGkocythLlBJKSksaShuKT8obi5sb25naXR1ZGU9cyxuLmxhdGl0dWRlPS41Kih0LnNvdXRoK3Qubm9ydGgpLG4uaGVpZ2h0PTAsbik6bmV3IGUocywuNSoodC5zb3V0aCt0Lm5vcnRoKSl9LHMuaW50ZXJzZWN0V2l0aD1mdW5jdGlvbihlLHQsbil7dmFyIHI9TWF0aC5tYXgoZS53ZXN0LHQud2VzdCksbz1NYXRoLm1heChlLnNvdXRoLHQuc291dGgpLGE9TWF0aC5taW4oZS5lYXN0LHQuZWFzdCksbD1NYXRoLm1pbihlLm5vcnRoLHQubm9ydGgpO3JldHVybiBpKG4pPyhuLndlc3Q9cixuLnNvdXRoPW8sbi5lYXN0PWEsbi5ub3J0aD1sLG4pOm5ldyBzKHIsbyxhLGwpfSxzLmNvbnRhaW5zPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubG9uZ2l0dWRlPj1lLndlc3QmJnQubG9uZ2l0dWRlPD1lLmVhc3QmJnQubGF0aXR1ZGU+PWUuc291dGgmJnQubGF0aXR1ZGU8PWUubm9ydGh9LHMuaXNFbXB0eT1mdW5jdGlvbihlKXtyZXR1cm4gZS53ZXN0Pj1lLmVhc3R8fGUuc291dGg+PWUubm9ydGh9O3ZhciBsPW5ldyBlO3JldHVybiBzLnN1YnNhbXBsZT1mdW5jdGlvbihlLG4sbyxzKXtuPXQobixyLldHUzg0KSxvPXQobywwKSxpKHMpfHwocz1bXSk7dmFyIHU9MCxjPWUubm9ydGgsZD1lLnNvdXRoLGg9ZS5lYXN0LG09ZS53ZXN0LGY9bDtmLmhlaWdodD1vLGYubG9uZ2l0dWRlPW0sZi5sYXRpdHVkZT1jLHNbdV09bi5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihmLHNbdV0pLHUrKyxmLmxvbmdpdHVkZT1oLHNbdV09bi5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihmLHNbdV0pLHUrKyxmLmxhdGl0dWRlPWQsc1t1XT1uLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGYsc1t1XSksdSsrLGYubG9uZ2l0dWRlPW0sc1t1XT1uLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGYsc1t1XSksdSsrLGYubGF0aXR1ZGU9MD5jP2M6ZD4wP2Q6MDtmb3IodmFyIHA9MTs4PnA7KytwKXt2YXIgdj0tTWF0aC5QSStwKmEuUElfT1ZFUl9UV087dj5tJiZoPnYmJihmLmxvbmdpdHVkZT12LHNbdV09bi5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihmLHNbdV0pLHUrKyl9cmV0dXJuIDA9PT1mLmxhdGl0dWRlJiYoZi5sb25naXR1ZGU9bSxzW3VdPW4uY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oZixzW3VdKSx1KyssZi5sb25naXR1ZGU9aCxzW3VdPW4uY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oZixzW3VdKSx1KyspLHMubGVuZ3RoPXUsc30scy5NQVhfVkFMVUU9byhuZXcgcygtTWF0aC5QSSwtYS5QSV9PVkVSX1RXTyxNYXRoLlBJLGEuUElfT1ZFUl9UV08pKSxzfSksZGVmaW5lKCJDb3JlL1JlZmVyZW5jZUZyYW1lIixbIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtGSVhFRDowLElORVJUSUFMOjF9O3JldHVybiBlKHQpfSksZGVmaW5lKCJDb3JlL1NwaGVyaWNhbCIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbih0LGksbil7dGhpcy5jbG9jaz1lKHQsMCksdGhpcy5jb25lPWUoaSwwKSx0aGlzLm1hZ25pdHVkZT1lKG4sMSl9O3JldHVybiBpLmZyb21DYXJ0ZXNpYW4zPWZ1bmN0aW9uKGUsbil7dmFyIHI9ZS54LG89ZS55LGE9ZS56LHM9cipyK28qbztyZXR1cm4gdChuKXx8KG49bmV3IGkpLG4uY2xvY2s9TWF0aC5hdGFuMihvLHIpLG4uY29uZT1NYXRoLmF0YW4yKE1hdGguc3FydChzKSxhKSxuLm1hZ25pdHVkZT1NYXRoLnNxcnQocythKmEpLG59LGkuY2xvbmU9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdChlKT90KG4pPyhuLmNsb2NrPWUuY2xvY2ssbi5jb25lPWUuY29uZSxuLm1hZ25pdHVkZT1lLm1hZ25pdHVkZSxuKTpuZXcgaShlLmNsb2NrLGUuY29uZSxlLm1hZ25pdHVkZSk6dm9pZCAwfSxpLm5vcm1hbGl6ZT1mdW5jdGlvbihlLG4pe3JldHVybiB0KG4pPyhuLmNsb2NrPWUuY2xvY2ssbi5jb25lPWUuY29uZSxuLm1hZ25pdHVkZT0xLG4pOm5ldyBpKGUuY2xvY2ssZS5jb25lLDEpfSxpLmVxdWFscz1mdW5jdGlvbihlLGkpe3JldHVybiBlPT09aXx8dChlKSYmdChpKSYmZS5jbG9jaz09PWkuY2xvY2smJmUuY29uZT09PWkuY29uZSYmZS5tYWduaXR1ZGU9PT1pLm1hZ25pdHVkZX0saS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGksbixyKXtyZXR1cm4gcj1lKHIsMCksaT09PW58fHQoaSkmJnQobikmJk1hdGguYWJzKGkuY2xvY2stbi5jbG9jayk8PXImJk1hdGguYWJzKGkuY29uZS1uLmNvbmUpPD1yJiZNYXRoLmFicyhpLm1hZ25pdHVkZS1uLm1hZ25pdHVkZSk8PXJ9LGkucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gaS5lcXVhbHModGhpcyxlKX0saS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGkuY2xvbmUodGhpcyxlKX0saS5wcm90b3R5cGUuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQpe3JldHVybiBpLmVxdWFsc0Vwc2lsb24odGhpcyxlLHQpfSxpLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzLmNsb2NrKyIsICIrdGhpcy5jb25lKyIsICIrdGhpcy5tYWduaXR1ZGUrIikifSxpfSksZGVmaW5lKCJDb3JlL1RpbWVJbnRlcnZhbENvbGxlY3Rpb24iLFsiLi9iaW5hcnlTZWFyY2giLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0V2ZW50IiwiLi9KdWxpYW5EYXRlIiwiLi9UaW1lSW50ZXJ2YWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsKGUsdCl7cmV0dXJuIGEuY29tcGFyZShlLnN0YXJ0LHQuc3RhcnQpfXZhciB1PWZ1bmN0aW9uKCl7dGhpcy5faW50ZXJ2YWxzPVtdLHRoaXMuX2NoYW5nZWRFdmVudD1uZXcgb307bih1LnByb3RvdHlwZSx7Y2hhbmdlZEV2ZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hhbmdlZEV2ZW50fX0sc3RhcnQ6e2dldDpmdW5jdGlvbigpe3ZhciBlPXRoaXMuX2ludGVydmFscztyZXR1cm4gMD09PWUubGVuZ3RoP3ZvaWQgMDplWzBdLnN0YXJ0fX0saXNTdGFydEluY2x1ZGVkOntnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9pbnRlcnZhbHM7cmV0dXJuIDA9PT1lLmxlbmd0aD8hMTplWzBdLmlzU3RhcnRJbmNsdWRlZH19LHN0b3A6e2dldDpmdW5jdGlvbigpe3ZhciBlPXRoaXMuX2ludGVydmFscyx0PWUubGVuZ3RoO3JldHVybiAwPT09dD92b2lkIDA6ZVt0LTFdLnN0b3B9fSxpc1N0b3BJbmNsdWRlZDp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faW50ZXJ2YWxzLHQ9ZS5sZW5ndGg7cmV0dXJuIDA9PT10PyExOmVbdC0xXS5pc1N0b3BJbmNsdWRlZH19LGxlbmd0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludGVydmFscy5sZW5ndGh9fSxpc0VtcHR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuX2ludGVydmFscy5sZW5ndGh9fX0pLHUucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlLHQpe2lmKHRoaXM9PT1lKXJldHVybiEwO2lmKCEoZSBpbnN0YW5jZW9mIHUpKXJldHVybiExO3ZhciBpPXRoaXMuX2ludGVydmFscyxuPWUuX2ludGVydmFscyxyPWkubGVuZ3RoO2lmKHIhPT1uLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG89MDtyPm87bysrKWlmKCFzLmVxdWFscyhpW29dLG5bb10sdCkpcmV0dXJuITE7cmV0dXJuITB9LHUucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5faW50ZXJ2YWxzW2VdfSx1LnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24oKXt0aGlzLl9pbnRlcnZhbHMubGVuZ3RoPjAmJih0aGlzLl9pbnRlcnZhbHMubGVuZ3RoPTAsdGhpcy5fY2hhbmdlZEV2ZW50LnJhaXNlRXZlbnQodGhpcykpfSx1LnByb3RvdHlwZS5maW5kSW50ZXJ2YWxDb250YWluaW5nRGF0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmluZGV4T2YoZSk7cmV0dXJuIHQ+PTA/dGhpcy5faW50ZXJ2YWxzW3RdOnZvaWQgMH0sdS5wcm90b3R5cGUuZmluZERhdGFGb3JJbnRlcnZhbENvbnRhaW5pbmdEYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuaW5kZXhPZihlKTtyZXR1cm4gdD49MD90aGlzLl9pbnRlcnZhbHNbdF0uZGF0YTp2b2lkIDB9LHUucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmluZGV4T2YoZSk+PTB9O3ZhciBjPW5ldyBzO3JldHVybiB1LnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuX2ludGVydmFscztjLnN0YXJ0PXQsYy5zdG9wPXQ7dmFyIG49ZShpLGMsbCk7cmV0dXJuIG4+PTA/aVtuXS5pc1N0YXJ0SW5jbHVkZWQ/bjpuPjAmJmlbbi0xXS5zdG9wLmVxdWFscyh0KSYmaVtuLTFdLmlzU3RvcEluY2x1ZGVkP24tMTp+bjoobj1+bixuPjAmJm4tMTxpLmxlbmd0aCYmcy5jb250YWlucyhpW24tMV0sdCk/bi0xOn5uKX0sdS5wcm90b3R5cGUuZmluZEludGVydmFsPWZ1bmN0aW9uKGUpe2U9dChlLHQuRU1QVFlfT0JKRUNUKTtmb3IodmFyIG49ZS5zdGFydCxyPWUuc3RvcCxvPWUuaXNTdGFydEluY2x1ZGVkLGE9ZS5pc1N0b3BJbmNsdWRlZCxzPXRoaXMuX2ludGVydmFscyxsPTAsdT1zLmxlbmd0aDt1Pmw7bCsrKXt2YXIgYz1zW2xdO2lmKCEoaShuKSYmIWMuc3RhcnQuZXF1YWxzKG4pfHxpKHIpJiYhYy5zdG9wLmVxdWFscyhyKXx8aShvKSYmYy5pc1N0YXJ0SW5jbHVkZWQhPT1vfHxpKGEpJiZjLmlzU3RvcEluY2x1ZGVkIT09YSkpcmV0dXJuIHNbbF19cmV0dXJuIHZvaWQgMH0sdS5wcm90b3R5cGUuYWRkSW50ZXJ2YWw9ZnVuY3Rpb24odCxuKXtpZighdC5pc0VtcHR5KXt2YXIgcixvLHU9dGhpcy5faW50ZXJ2YWxzO2lmKDA9PT11Lmxlbmd0aHx8YS5ncmVhdGVyVGhhbih0LnN0YXJ0LHVbdS5sZW5ndGgtMV0uc3RvcCkpcmV0dXJuIHUucHVzaCh0KSx0aGlzLl9jaGFuZ2VkRXZlbnQucmFpc2VFdmVudCh0aGlzKSx2b2lkIDA7Zm9yKG89ZSh1LHQsbCksMD5vP289fm86bz4wJiZ0LmlzU3RhcnRJbmNsdWRlZCYmdVtvLTFdLmlzU3RhcnRJbmNsdWRlZCYmdVtvLTFdLnN0YXJ0LmVxdWFscyh0LnN0YXJ0KT8tLW86bzx1Lmxlbmd0aCYmIXQuaXNTdGFydEluY2x1ZGVkJiZ1W29dLmlzU3RhcnRJbmNsdWRlZCYmdVtvXS5zdGFydC5lcXVhbHModC5zdGFydCkmJisrbyxvPjAmJihyPWEuY29tcGFyZSh1W28tMV0uc3RvcCx0LnN0YXJ0KSwocj4wfHwwPT09ciYmKHVbby0xXS5pc1N0b3BJbmNsdWRlZHx8dC5pc1N0YXJ0SW5jbHVkZWQpKSYmKChpKG4pP24odVtvLTFdLmRhdGEsdC5kYXRhKTp1W28tMV0uZGF0YT09PXQuZGF0YSk/KHQ9YS5ncmVhdGVyVGhhbih0LnN0b3AsdVtvLTFdLnN0b3ApP25ldyBzKHtzdGFydDp1W28tMV0uc3RhcnQsc3RvcDp0LnN0b3AsaXNTdGFydEluY2x1ZGVkOnVbby0xXS5pc1N0YXJ0SW5jbHVkZWQsaXNTdG9wSW5jbHVkZWQ6dC5pc1N0b3BJbmNsdWRlZCxkYXRhOnQuZGF0YX0pOm5ldyBzKHtzdGFydDp1W28tMV0uc3RhcnQsc3RvcDp1W28tMV0uc3RvcCxpc1N0YXJ0SW5jbHVkZWQ6dVtvLTFdLmlzU3RhcnRJbmNsdWRlZCxpc1N0b3BJbmNsdWRlZDp1W28tMV0uaXNTdG9wSW5jbHVkZWR8fHQuc3RvcC5lcXVhbHModVtvLTFdLnN0b3ApJiZ0LmlzU3RvcEluY2x1ZGVkLGRhdGE6dC5kYXRhfSksdS5zcGxpY2Uoby0xLDEpLC0tbyk6KHI9YS5jb21wYXJlKHVbby0xXS5zdG9wLHQuc3RvcCkscj4wfHwwPT09ciYmdVtvLTFdLmlzU3RvcEluY2x1ZGVkJiYhdC5pc1N0b3BJbmNsdWRlZD91LnNwbGljZShvLTEsMSxuZXcgcyh7c3RhcnQ6dVtvLTFdLnN0YXJ0LHN0b3A6dC5zdGFydCxpc1N0YXJ0SW5jbHVkZWQ6dVtvLTFdLmlzU3RhcnRJbmNsdWRlZCxpc1N0b3BJbmNsdWRlZDohdC5pc1N0YXJ0SW5jbHVkZWQsZGF0YTp1W28tMV0uZGF0YX0pLG5ldyBzKHtzdGFydDp0LnN0b3Asc3RvcDp1W28tMV0uc3RvcCxpc1N0YXJ0SW5jbHVkZWQ6IXQuaXNTdG9wSW5jbHVkZWQsaXNTdG9wSW5jbHVkZWQ6dVtvLTFdLmlzU3RvcEluY2x1ZGVkLGRhdGE6dVtvLTFdLmRhdGF9KSk6dVtvLTFdPW5ldyBzKHtzdGFydDp1W28tMV0uc3RhcnQsc3RvcDp0LnN0YXJ0LGlzU3RhcnRJbmNsdWRlZDp1W28tMV0uaXNTdGFydEluY2x1ZGVkLGlzU3RvcEluY2x1ZGVkOiF0LmlzU3RhcnRJbmNsdWRlZCxkYXRhOnVbby0xXS5kYXRhfSkpKSk7bzx1Lmxlbmd0aCYmKHI9YS5jb21wYXJlKHQuc3RvcCx1W29dLnN0YXJ0KSxyPjB8fDA9PT1yJiYodC5pc1N0b3BJbmNsdWRlZHx8dVtvXS5pc1N0YXJ0SW5jbHVkZWQpKTspaWYoaShuKT9uKHVbb10uZGF0YSx0LmRhdGEpOnVbb10uZGF0YT09PXQuZGF0YSl0PW5ldyBzKHtzdGFydDp0LnN0YXJ0LHN0b3A6YS5ncmVhdGVyVGhhbih1W29dLnN0b3AsdC5zdG9wKT91W29dLnN0b3A6dC5zdG9wLGlzU3RhcnRJbmNsdWRlZDp0LmlzU3RhcnRJbmNsdWRlZCxpc1N0b3BJbmNsdWRlZDphLmdyZWF0ZXJUaGFuKHVbb10uc3RvcCx0LnN0b3ApP3Vbb10uaXNTdG9wSW5jbHVkZWQ6dC5pc1N0b3BJbmNsdWRlZCxkYXRhOnQuZGF0YX0pLHUuc3BsaWNlKG8sMSk7ZWxzZXtpZih1W29dPW5ldyBzKHtzdGFydDp0LnN0b3Asc3RvcDp1W29dLnN0b3AsaXNTdGFydEluY2x1ZGVkOiF0LmlzU3RvcEluY2x1ZGVkLGlzU3RvcEluY2x1ZGVkOnVbb10uaXNTdG9wSW5jbHVkZWQsZGF0YTp1W29dLmRhdGF9KSwhdVtvXS5pc0VtcHR5KWJyZWFrO3Uuc3BsaWNlKG8sMSl9dS5zcGxpY2UobywwLHQpLHRoaXMuX2NoYW5nZWRFdmVudC5yYWlzZUV2ZW50KHRoaXMpfX0sdS5wcm90b3R5cGUucmVtb3ZlSW50ZXJ2YWw9ZnVuY3Rpb24odCl7aWYodC5pc0VtcHR5KXJldHVybiExO3ZhciBpPSExLG49dGhpcy5faW50ZXJ2YWxzLHI9ZShuLHQsbCk7MD5yJiYocj1+cik7dmFyIG89dC5zdGFydCx1PXQuc3RvcCxjPXQuaXNTdGFydEluY2x1ZGVkLGQ9dC5pc1N0b3BJbmNsdWRlZDtpZihyPjApe3ZhciBoPW5bci0xXSxtPWguc3RvcDsoYS5ncmVhdGVyVGhhbihtLG8pfHxzLmVxdWFscyhtLG8pJiZoLmlzU3RvcEluY2x1ZGVkJiZjKSYmKGk9ITAsKGEuZ3JlYXRlclRoYW4obSx1KXx8aC5pc1N0b3BJbmNsdWRlZCYmIWQmJnMuZXF1YWxzKG0sdSkpJiZuLnNwbGljZShyLDAsbmV3IHMoe3N0YXJ0OnUsc3RvcDptLGlzU3RhcnRJbmNsdWRlZDohZCxpc1N0b3BJbmNsdWRlZDpoLmlzU3RvcEluY2x1ZGVkLGRhdGE6aC5kYXRhfSkpLG5bci0xXT1uZXcgcyh7c3RhcnQ6aC5zdGFydCxzdG9wOm8saXNTdGFydEluY2x1ZGVkOmguaXNTdGFydEluY2x1ZGVkLGlzU3RvcEluY2x1ZGVkOiFjLGRhdGE6aC5kYXRhfSkpfXZhciBmPW5bcl07Zm9yKHI8bi5sZW5ndGgmJiFjJiZmLmlzU3RhcnRJbmNsdWRlZCYmby5lcXVhbHMoZi5zdGFydCkmJihpPSEwLG4uc3BsaWNlKHIsMCxuZXcgcyh7c3RhcnQ6Zi5zdGFydCxzdG9wOmYuc3RhcnQsaXNTdGFydEluY2x1ZGVkOiEwLGlzU3RvcEluY2x1ZGVkOiEwLGRhdGE6Zi5kYXRhfSkpLCsrcixmPW5bcl0pO3I8bi5sZW5ndGgmJmEuZ3JlYXRlclRoYW4odSxmLnN0b3ApOylpPSEwLG4uc3BsaWNlKHIsMSk7cmV0dXJuIHI8bi5sZW5ndGgmJnUuZXF1YWxzKGYuc3RvcCkmJihpPSEwLCFkJiZmLmlzU3RvcEluY2x1ZGVkPyhyKzE8bi5sZW5ndGgmJm5bcisxXS5zdGFydC5lcXVhbHModSkmJmYuZGF0YT09PW5bcisxXS5kYXRhPyhuLnNwbGljZShyLDEpLGY9bmV3IHMoe3N0YXJ0OmYuc3RhcnQsc3RvcDpmLnN0b3AsaXNTdGFydEluY2x1ZGVkOiEwLGlzU3RvcEluY2x1ZGVkOmYuaXNTdG9wSW5jbHVkZWQsZGF0YTpmLmRhdGF9KSk6Zj1uZXcgcyh7c3RhcnQ6dSxzdG9wOnUsaXNTdGFydEluY2x1ZGVkOiEwLGlzU3RvcEluY2x1ZGVkOiEwLGRhdGE6Zi5kYXRhfSksbltyXT1mKTpuLnNwbGljZShyLDEpKSxyPG4ubGVuZ3RoJiYoYS5ncmVhdGVyVGhhbih1LGYuc3RhcnQpfHx1LmVxdWFscyhmLnN0YXJ0KSYmZCYmZi5pc1N0YXJ0SW5jbHVkZWQpJiYoaT0hMCxuW3JdPW5ldyBzKHtzdGFydDp1LHN0b3A6Zi5zdG9wLGlzU3RhcnRJbmNsdWRlZDohZCxpc1N0b3BJbmNsdWRlZDpmLmlzU3RvcEluY2x1ZGVkLGRhdGE6Zi5kYXRhfSkpLGkmJnRoaXMuX2NoYW5nZWRFdmVudC5yYWlzZUV2ZW50KHRoaXMpLGl9LHUucHJvdG90eXBlLmludGVyc2VjdD1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciByPTAsbz0wLGw9bmV3IHUsYz10aGlzLl9pbnRlcnZhbHMsZD1lLl9pbnRlcnZhbHM7cjxjLmxlbmd0aCYmbzxkLmxlbmd0aDspe3ZhciBoPWNbcl0sbT1kW29dO2lmKGEubGVzc1RoYW4oaC5zdG9wLG0uc3RhcnQpKSsrcjtlbHNlIGlmKGEubGVzc1RoYW4obS5zdG9wLGguc3RhcnQpKSsrbztlbHNle2lmKGkobil8fGkodCkmJnQoaC5kYXRhLG0uZGF0YSl8fCFpKHQpJiZtLmRhdGE9PT1oLmRhdGEpe3ZhciBmPXMuaW50ZXJzZWN0KGgsbSxuZXcgcyxuKTtmLmlzRW1wdHl8fGwuYWRkSW50ZXJ2YWwoZix0KX1hLmxlc3NUaGFuKGguc3RvcCxtLnN0b3ApfHxoLnN0b3AuZXF1YWxzKG0uc3RvcCkmJiFoLmlzU3RvcEluY2x1ZGVkJiZtLmlzU3RvcEluY2x1ZGVkPysrcjorK299fXJldHVybiBsfSx1fSksZGVmaW5lKCJTY2VuZS9Ib3Jpem9udGFsT3JpZ2luIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtDRU5URVI6MCxMRUZUOjEsUklHSFQ6LTF9O3JldHVybiBlKHQpfSksZGVmaW5lKCJTY2VuZS9MYWJlbFN0eWxlIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtGSUxMOjAsT1VUTElORToxLEZJTExfQU5EX09VVExJTkU6Mn07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL1ZlcnRpY2FsT3JpZ2luIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtDRU5URVI6MCxCT1RUT006MSxUT1A6LTF9O3JldHVybiBlKHQpfSksZGVmaW5lKCJEYXRhU291cmNlcy9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKGUsaSxuLHIpe3JldHVybntjb25maWd1cmFibGU6cixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tpXX0sc2V0OmZ1bmN0aW9uKHIpe3ZhciBvPXRoaXNbaV0sYT10aGlzW25dO3QoYSkmJihhKCksdGhpc1tuXT12b2lkIDApLG8hPT1yJiYodGhpc1tpXT1yLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyxlLHIsbykpLHQocikmJnQoci5kZWZpbml0aW9uQ2hhbmdlZCkmJih0aGlzW25dPXIuZGVmaW5pdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcihmdW5jdGlvbigpe3RoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyxlLHIscil9LHRoaXMpKX19fWZ1bmN0aW9uIG4odCxuKXtyZXR1cm4gaSh0LCJfIit0LCJfIit0KyJTdWJzY3JpcHRpb24iLGUobiwhMSkpfXJldHVybiBufSksZGVmaW5lKCJEYXRhU291cmNlcy9CaWxsYm9hcmRHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5faW1hZ2U9dm9pZCAwLHRoaXMuX2ltYWdlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl93aWR0aD12b2lkIDAsdGhpcy5fd2lkdGhTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2hlaWdodD12b2lkIDAsdGhpcy5faGVpZ2h0U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9zY2FsZT12b2lkIDAsdGhpcy5fc2NhbGVTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3JvdGF0aW9uPXZvaWQgMCx0aGlzLl9yb3RhdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fYWxpZ25lZEF4aXM9dm9pZCAwLHRoaXMuX2FsaWduZWRBeGlzU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9ob3Jpem9udGFsT3JpZ2luPXZvaWQgMCx0aGlzLl9ob3Jpem9udGFsT3JpZ2luU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl92ZXJ0aWNhbE9yaWdpbj12b2lkIDAsdGhpcy5fdmVydGljYWxPcmlnaW5TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2NvbG9yPXZvaWQgMCx0aGlzLl9jb2xvclN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZXllT2Zmc2V0PXZvaWQgMCx0aGlzLl9leWVPZmZzZXRTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3BpeGVsT2Zmc2V0PXZvaWQgMCx0aGlzLl9waXhlbE9mZnNldFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc2NhbGVCeURpc3RhbmNlPXZvaWQgMCx0aGlzLl9zY2FsZUJ5RGlzdGFuY2VTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9dm9pZCAwLHRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2VTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPXZvaWQgMCx0aGlzLl9waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IHJ9O3JldHVybiBpKGEucHJvdG90eXBlLHtkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0saW1hZ2U6bygiaW1hZ2UiKSxzY2FsZTpvKCJzY2FsZSIpLHJvdGF0aW9uOm8oInJvdGF0aW9uIiksYWxpZ25lZEF4aXM6bygiYWxpZ25lZEF4aXMiKSxob3Jpem9udGFsT3JpZ2luOm8oImhvcml6b250YWxPcmlnaW4iKSx2ZXJ0aWNhbE9yaWdpbjpvKCJ2ZXJ0aWNhbE9yaWdpbiIpLGNvbG9yOm8oImNvbG9yIiksZXllT2Zmc2V0Om8oImV5ZU9mZnNldCIpLHBpeGVsT2Zmc2V0Om8oInBpeGVsT2Zmc2V0Iiksc2hvdzpvKCJzaG93Iiksd2lkdGg6bygid2lkdGgiKSxoZWlnaHQ6bygiaGVpZ2h0Iiksc2NhbGVCeURpc3RhbmNlOm8oInNjYWxlQnlEaXN0YW5jZSIpLHRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U6bygidHJhbnNsdWNlbmN5QnlEaXN0YW5jZSIpLHBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlOm8oInBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlIil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuY29sb3I9dGhpcy5fY29sb3IsZS5leWVPZmZzZXQ9dGhpcy5fZXllT2Zmc2V0LGUuaG9yaXpvbnRhbE9yaWdpbj10aGlzLl9ob3Jpem9udGFsT3JpZ2luLGUuaW1hZ2U9dGhpcy5faW1hZ2UsZS5waXhlbE9mZnNldD10aGlzLl9waXhlbE9mZnNldCxlLnNjYWxlPXRoaXMuX3NjYWxlLGUucm90YXRpb249dGhpcy5fcm90YXRpb24sZS5hbGlnbmVkQXhpcz10aGlzLl9hbGlnbmVkQXhpcyxlLnNob3c9dGhpcy5fc2hvdyxlLnZlcnRpY2FsT3JpZ2luPXRoaXMuX3ZlcnRpY2FsT3JpZ2luLGUud2lkdGg9dGhpcy5fd2lkdGgsZS5oZWlnaHQ9dGhpcy5faGVpZ2h0LGUuc2NhbGVCeURpc3RhbmNlPXRoaXMuX3NjYWxlQnlEaXN0YW5jZSxlLnRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9dGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZSxlLnBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPXRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlLGV9LGEucHJvdG90eXBlLm1lcmdlPWZ1bmN0aW9uKHQpe3RoaXMuY29sb3I9ZSh0aGlzLl9jb2xvcix0Ll9jb2xvciksdGhpcy5leWVPZmZzZXQ9ZSh0aGlzLl9leWVPZmZzZXQsdC5fZXllT2Zmc2V0KSx0aGlzLmhvcml6b250YWxPcmlnaW49ZSh0aGlzLl9ob3Jpem9udGFsT3JpZ2luLHQuX2hvcml6b250YWxPcmlnaW4pLHRoaXMuaW1hZ2U9ZSh0aGlzLl9pbWFnZSx0Ll9pbWFnZSksdGhpcy5waXhlbE9mZnNldD1lKHRoaXMuX3BpeGVsT2Zmc2V0LHQuX3BpeGVsT2Zmc2V0KSx0aGlzLnNjYWxlPWUodGhpcy5fc2NhbGUsdC5fc2NhbGUpLHRoaXMucm90YXRpb249ZSh0aGlzLl9yb3RhdGlvbix0Ll9yb3RhdGlvbiksdGhpcy5hbGlnbmVkQXhpcz1lKHRoaXMuX2FsaWduZWRBeGlzLHQuX2FsaWduZWRBeGlzKSx0aGlzLnNob3c9ZSh0aGlzLl9zaG93LHQuX3Nob3cpLHRoaXMudmVydGljYWxPcmlnaW49ZSh0aGlzLl92ZXJ0aWNhbE9yaWdpbix0Ll92ZXJ0aWNhbE9yaWdpbiksdGhpcy53aWR0aD1lKHRoaXMuX3dpZHRoLHQuX3dpZHRoKSx0aGlzLmhlaWdodD1lKHRoaXMuX2hlaWdodCx0Ll9oZWlnaHQpLHRoaXMuc2NhbGVCeURpc3RhbmNlPWUodGhpcy5fc2NhbGVCeURpc3RhbmNlLHQuX3NjYWxlQnlEaXN0YW5jZSksdGhpcy50cmFuc2x1Y2VuY3lCeURpc3RhbmNlPWUodGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZSx0Ll90cmFuc2x1Y2VuY3lCeURpc3RhbmNlKSx0aGlzLnBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPWUodGhpcy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UsdC5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UpfSxhfSksZGVmaW5lKCJEYXRhU291cmNlcy9Db25zdGFudFByb3BlcnR5IixbIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9pc0FycmF5Il0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO3ZhciByPWZ1bmN0aW9uKGUpe3RoaXMuX3ZhbHVlPXZvaWQgMCx0aGlzLl9zaW1wbGU9ITAsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IGksdGhpcy5zZXRWYWx1ZShlKX07cmV0dXJuIGUoci5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e3ZhbHVlOiEwfSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX19KSxyLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9zaW1wbGU/dGhpcy5fdmFsdWU6dGhpcy5fdmFsdWUuY2xvbmUodCl9LHIucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3ZhbHVlLGk9dGhpcy5fc2ltcGxlOyhpJiZ0IT09ZXx8IWkmJiF0LmVxdWFscyhlKSkmJihpPSJvYmplY3QiIT10eXBlb2YgZXx8bihlKSx0aGlzLl92YWx1ZT1pP2U6ZS5jbG9uZSgpLHRoaXMuX3NpbXBsZT1pLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfSxyLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxlIGluc3RhbmNlb2YgciYmKHRoaXMuX3NpbXBsZSYmdGhpcy5fdmFsdWU9PT1lLl92YWx1ZXx8IXRoaXMuX3NpbXBsZSYmdGhpcy5fdmFsdWUuZXF1YWxzKGUuX3ZhbHVlKSl9LHJ9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1Byb3BlcnR5IixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKCl7aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcigpfTtyZXR1cm4gdChuLnByb3RvdHlwZSx7aXNDb25zdGFudDp7Z2V0OmkudGhyb3dJbnN0YW50aWF0aW9uRXJyb3J9LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn19KSxuLnByb3RvdHlwZS5nZXRWYWx1ZT1pLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG4ucHJvdG90eXBlLmVxdWFscz1pLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG4uZXF1YWxzPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIHQ9PT1pfHxlKHQpJiZ0LmVxdWFscyhpKX0sbi5hcnJheUVxdWFscz1mdW5jdGlvbih0LGkpe2lmKHQ9PT1pKXJldHVybiEwO2lmKCFlKHQpfHwhZShpKXx8dC5sZW5ndGghPT1pLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIHI9dC5sZW5ndGgsbz0wO3I+bztvKyspaWYoIW4uZXF1YWxzKHRbb10saVtvXSkpcmV0dXJuITE7cmV0dXJuITB9LG4uaXNDb25zdGFudD1mdW5jdGlvbih0KXtyZXR1cm4hZSh0KXx8dC5pc0NvbnN0YW50fSxuLmdldFZhbHVlT3JVbmRlZmluZWQ9ZnVuY3Rpb24odCxpLG4pe3JldHVybiBlKHQpP3QuZ2V0VmFsdWUoaSxuKTp2b2lkIDB9LG4uZ2V0VmFsdWVPckRlZmF1bHQ9ZnVuY3Rpb24odCxpLG4scil7dmFyIG87cmV0dXJuIGUodCkmJihvPXQuZ2V0VmFsdWUoaSxyKSksZShvKXx8KG89biksb30sbi5nZXRWYWx1ZU9yQ2xvbmVkRGVmYXVsdD1mdW5jdGlvbih0LGksbixyKXt2YXIgbztyZXR1cm4gZSh0KSYmKG89dC5nZXRWYWx1ZShpLHIpKSxlKG8pfHwobz1uLmNsb25lKG8pKSxvfSxufSksZGVmaW5lKCJEYXRhU291cmNlcy9Db2xvck1hdGVyaWFsUHJvcGVydHkiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9Db25zdGFudFByb3BlcnR5IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24oZSl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IHIsdGhpcy5fY29sb3I9dm9pZCAwLHRoaXMuX2NvbG9yU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLmNvbG9yPWV9O3JldHVybiBsLmZyb21Db2xvcj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGwobmV3IG8oZSkpfSxpKGwucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcy5pc0NvbnN0YW50KHRoaXMuX2NvbG9yKX19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxjb2xvcjphKCJjb2xvciIpfSksbC5wcm90b3R5cGUuZ2V0VHlwZT1mdW5jdGlvbigpe3JldHVybiJDb2xvciJ9LGwucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKGksbil7cmV0dXJuIHQobil8fChuPXt9KSxuLmNvbG9yPXMuZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fY29sb3IsaSxlLldISVRFLG4uY29sb3IpLG59LGwucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcz09PWV8fGUgaW5zdGFuY2VvZiBsJiZzLmVxdWFscyh0aGlzLl9jb2xvcixlLl9jb2xvcil9LGwucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sbH0pLGRlZmluZSgiQ29yZS9FdmVudEhlbHBlciIsWyIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmFsRnVuY3Rpb25zPVtdfTtyZXR1cm4gZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1lLmFkZEV2ZW50TGlzdGVuZXIodCxpKTt0aGlzLl9yZW1vdmFsRnVuY3Rpb25zLnB1c2gobik7dmFyIHI9dGhpcztyZXR1cm4gZnVuY3Rpb24oKXtuKCk7dmFyIGU9ci5fcmVtb3ZhbEZ1bmN0aW9ucztlLnNwbGljZShlLmluZGV4T2YobiksMSl9fSxlLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fcmVtb3ZhbEZ1bmN0aW9ucyx0PTAsaT1lLmxlbmd0aDtpPnQ7Kyt0KWVbdF0oKTtlLmxlbmd0aD0wfSxlfSksZGVmaW5lKCJEYXRhU291cmNlcy9Db21wb3NpdGVQcm9wZXJ0eSIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvRXZlbnRIZWxwZXIiLCIuLi9Db3JlL1RpbWVJbnRlcnZhbENvbGxlY3Rpb24iLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHModCxpLG4scil7dmFyIG89ZnVuY3Rpb24oKXtuLnJhaXNlRXZlbnQodCl9LGE9W107aS5yZW1vdmVBbGwoKTtmb3IodmFyIHM9ci5sZW5ndGgsbD0wO3M+bDtsKyspe3ZhciB1PXIuZ2V0KGwpO2UodS5kYXRhKSYmLTE9PT1hLmluZGV4T2YodS5kYXRhKSYmaS5hZGQodS5kYXRhLmRlZmluaXRpb25DaGFuZ2VkLG8pfX12YXIgbD1mdW5jdGlvbigpe3RoaXMuX2V2ZW50SGVscGVyPW5ldyByLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyBuLHRoaXMuX2ludGVydmFscz1uZXcgbyx0aGlzLl9pbnRlcnZhbHMuY2hhbmdlZEV2ZW50LmFkZEV2ZW50TGlzdGVuZXIobC5wcm90b3R5cGUuX2ludGVydmFsc0NoYW5nZWQsdGhpcyl9O3JldHVybiB0KGwucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW50ZXJ2YWxzLmlzRW1wdHl9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0saW50ZXJ2YWxzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW50ZXJ2YWxzfX19KSxsLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbih0LGkpe3ZhciBuPXRoaXMuX2ludGVydmFscy5maW5kRGF0YUZvckludGVydmFsQ29udGFpbmluZ0RhdGUodCk7cmV0dXJuIGUobik/bi5nZXRWYWx1ZSh0LGkpOnZvaWQgMH0sbC5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzPT09ZXx8ZSBpbnN0YW5jZW9mIGwmJnRoaXMuX2ludGVydmFscy5lcXVhbHMoZS5faW50ZXJ2YWxzLGEuZXF1YWxzKX0sbC5wcm90b3R5cGUuX2ludGVydmFsc0NoYW5nZWQ9ZnVuY3Rpb24oKXtzKHRoaXMsdGhpcy5fZXZlbnRIZWxwZXIsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQsdGhpcy5faW50ZXJ2YWxzKSx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSxsfSksZGVmaW5lKCJEYXRhU291cmNlcy9Db21wb3NpdGVNYXRlcmlhbFByb3BlcnR5IixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9Db21wb3NpdGVQcm9wZXJ0eSIsIi4vUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG4sdGhpcy5fY29tcG9zaXRlPW5ldyByLHRoaXMuX2NvbXBvc2l0ZS5kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKGEucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkLHRoaXMpfTtyZXR1cm4gdChhLnByb3RvdHlwZSx7aXNDb25zdGFudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbXBvc2l0ZS5pc0NvbnN0YW50fX0sZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LGludGVydmFsczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbXBvc2l0ZS5faW50ZXJ2YWxzfX19KSxhLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuX2NvbXBvc2l0ZS5faW50ZXJ2YWxzLmZpbmREYXRhRm9ySW50ZXJ2YWxDb250YWluaW5nRGF0ZSh0KTtyZXR1cm4gZShpKT9pLmdldFR5cGUodCk6dm9pZCAwfSxhLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbih0LGkpe3ZhciBuPXRoaXMuX2NvbXBvc2l0ZS5faW50ZXJ2YWxzLmZpbmREYXRhRm9ySW50ZXJ2YWxDb250YWluaW5nRGF0ZSh0KTtyZXR1cm4gZShuKT9uLmdldFZhbHVlKHQsaSk6dm9pZCAwfSxhLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxlIGluc3RhbmNlb2YgYSYmdGhpcy5fY29tcG9zaXRlLmVxdWFscyhlLl9jb21wb3NpdGUsby5lcXVhbHMpfSxhLnByb3RvdHlwZS5fcmFpc2VEZWZpbml0aW9uQ2hhbmdlZD1mdW5jdGlvbigpe3RoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyl9LGF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0NvbXBvc2l0ZVBvc2l0aW9uUHJvcGVydHkiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvUmVmZXJlbmNlRnJhbWUiLCIuL0NvbXBvc2l0ZVByb3BlcnR5IiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO3ZhciBsPWZ1bmN0aW9uKHQpe3RoaXMuX3JlZmVyZW5jZUZyYW1lPWUodCxvLkZJWEVEKSx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcix0aGlzLl9jb21wb3NpdGU9bmV3IGEsdGhpcy5fY29tcG9zaXRlLmRlZmluaXRpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIobC5wcm90b3R5cGUuX3JhaXNlRGVmaW5pdGlvbkNoYW5nZWQsdGhpcyl9O3JldHVybiBpKGwucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29tcG9zaXRlLmlzQ29uc3RhbnR9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0saW50ZXJ2YWxzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29tcG9zaXRlLmludGVydmFsc319LHJlZmVyZW5jZUZyYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVmZXJlbmNlRnJhbWV9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9yZWZlcmVuY2VGcmFtZT1lfX19KSxsLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZShlLG8uRklYRUQsdCl9LGwucHJvdG90eXBlLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZT1mdW5jdGlvbihlLGksbil7dmFyIHI9dGhpcy5fY29tcG9zaXRlLl9pbnRlcnZhbHMuZmluZERhdGFGb3JJbnRlcnZhbENvbnRhaW5pbmdEYXRlKGUpO3JldHVybiB0KHIpP3IuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKGUsaSxuKTp2b2lkIDB9LGwucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcz09PWV8fGUgaW5zdGFuY2VvZiBsJiZ0aGlzLl9yZWZlcmVuY2VGcmFtZT09PWUuX3JlZmVyZW5jZUZyYW1lJiZ0aGlzLl9jb21wb3NpdGUuZXF1YWxzKGUuX2NvbXBvc2l0ZSxzLmVxdWFscyl9LGwucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sbH0pLGRlZmluZSgiQ29yZS9DYXJ0ZXNpYW40IixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO3ZhciByPWZ1bmN0aW9uKHQsaSxuLHIpe3RoaXMueD1lKHQsMCksdGhpcy55PWUoaSwwKSx0aGlzLno9ZShuLDApLHRoaXMudz1lKHIsMCl9O3IuZnJvbUVsZW1lbnRzPWZ1bmN0aW9uKGUsaSxuLG8sYSl7cmV0dXJuIHQoYSk/KGEueD1lLGEueT1pLGEuej1uLGEudz1vLGEpOm5ldyByKGUsaSxuLG8pfSxyLmZyb21Db2xvcj1mdW5jdGlvbihlLGkpe3JldHVybiB0KGkpPyhpLng9ZS5yZWQsaS55PWUuZ3JlZW4saS56PWUuYmx1ZSxpLnc9ZS5hbHBoYSxpKTpuZXcgcihlLnJlZCxlLmdyZWVuLGUuYmx1ZSxlLmFscGhhKX0sci5jbG9uZT1mdW5jdGlvbihlLGkpe3JldHVybiB0KGUpP3QoaSk/KGkueD1lLngsaS55PWUueSxpLno9ZS56LGkudz1lLncsaSk6bmV3IHIoZS54LGUueSxlLnosZS53KTp2b2lkIDB9LHIucGFja2VkTGVuZ3RoPTQsci5wYWNrPWZ1bmN0aW9uKHQsaSxuKXtuPWUobiwwKSxpW24rK109dC54LGlbbisrXT10LnksaVtuKytdPXQueixpW25dPXQud30sci51bnBhY2s9ZnVuY3Rpb24oaSxuLG8pe3JldHVybiBuPWUobiwwKSx0KG8pfHwobz1uZXcgciksby54PWlbbisrXSxvLnk9aVtuKytdLG8uej1pW24rK10sby53PWlbbl0sb30sci5mcm9tQXJyYXk9ci51bnBhY2ssci5tYXhpbXVtQ29tcG9uZW50PWZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1heChlLngsZS55LGUueixlLncpfSxyLm1pbmltdW1Db21wb25lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgubWluKGUueCxlLnksZS56LGUudyl9LHIubWluaW11bUJ5Q29tcG9uZW50PWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PU1hdGgubWluKGUueCx0LngpLGkueT1NYXRoLm1pbihlLnksdC55KSxpLno9TWF0aC5taW4oZS56LHQueiksaS53PU1hdGgubWluKGUudyx0LncpLGl9LHIubWF4aW11bUJ5Q29tcG9uZW50PWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaS54PU1hdGgubWF4KGUueCx0LngpLGkueT1NYXRoLm1heChlLnksdC55KSxpLno9TWF0aC5tYXgoZS56LHQueiksaS53PU1hdGgubWF4KGUudyx0LncpLGl9LHIubWFnbml0dWRlU3F1YXJlZD1mdW5jdGlvbihlKXtyZXR1cm4gZS54KmUueCtlLnkqZS55K2UueiplLnorZS53KmUud30sci5tYWduaXR1ZGU9ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguc3FydChyLm1hZ25pdHVkZVNxdWFyZWQoZSkpfTt2YXIgbz1uZXcgcjtyLmRpc3RhbmNlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIuc3VidHJhY3QoZSx0LG8pLHIubWFnbml0dWRlKG8pfSxyLm5vcm1hbGl6ZT1mdW5jdGlvbihlLHQpe3ZhciBpPXIubWFnbml0dWRlKGUpO3JldHVybiB0Lng9ZS54L2ksdC55PWUueS9pLHQuej1lLnovaSx0Lnc9ZS53L2ksdH0sci5kb3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS54KnQueCtlLnkqdC55K2Uueip0LnorZS53KnQud30sci5tdWx0aXBseUNvbXBvbmVudHM9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54KnQueCxpLnk9ZS55KnQueSxpLno9ZS56KnQueixpLnc9ZS53KnQudyxpfSxyLmFkZD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngrdC54LGkueT1lLnkrdC55LGkuej1lLnordC56LGkudz1lLncrdC53LGl9LHIuc3VidHJhY3Q9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54LXQueCxpLnk9ZS55LXQueSxpLno9ZS56LXQueixpLnc9ZS53LXQudyxpfSxyLm11bHRpcGx5QnlTY2FsYXI9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpLng9ZS54KnQsaS55PWUueSp0LGkuej1lLnoqdCxpLnc9ZS53KnQsaX0sci5kaXZpZGVCeVNjYWxhcj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGkueD1lLngvdCxpLnk9ZS55L3QsaS56PWUuei90LGkudz1lLncvdCxpfSxyLm5lZ2F0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0Lng9LWUueCx0Lnk9LWUueSx0Lno9LWUueix0Lnc9LWUudyx0Cn0sci5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC54PU1hdGguYWJzKGUueCksdC55PU1hdGguYWJzKGUueSksdC56PU1hdGguYWJzKGUueiksdC53PU1hdGguYWJzKGUudyksdH07dmFyIGE9bmV3IHI7ci5sZXJwPWZ1bmN0aW9uKGUsdCxpLG4pe3JldHVybiByLm11bHRpcGx5QnlTY2FsYXIodCxpLGEpLG49ci5tdWx0aXBseUJ5U2NhbGFyKGUsMS1pLG4pLHIuYWRkKGEsbixuKX07dmFyIHM9bmV3IHI7cmV0dXJuIHIubW9zdE9ydGhvZ29uYWxBeGlzPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ci5ub3JtYWxpemUoZSxzKTtyZXR1cm4gci5hYnMoaSxpKSx0PWkueDw9aS55P2kueDw9aS56P2kueDw9aS53P3IuY2xvbmUoci5VTklUX1gsdCk6ci5jbG9uZShyLlVOSVRfVyx0KTppLno8PWkudz9yLmNsb25lKHIuVU5JVF9aLHQpOnIuY2xvbmUoci5VTklUX1csdCk6aS55PD1pLno/aS55PD1pLnc/ci5jbG9uZShyLlVOSVRfWSx0KTpyLmNsb25lKHIuVU5JVF9XLHQpOmkuejw9aS53P3IuY2xvbmUoci5VTklUX1osdCk6ci5jbG9uZShyLlVOSVRfVyx0KX0sci5lcXVhbHM9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJmUueD09PWkueCYmZS55PT09aS55JiZlLno9PT1pLnomJmUudz09PWkud30sci5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsaSxuKXtyZXR1cm4gZT09PWl8fHQoZSkmJnQoaSkmJk1hdGguYWJzKGUueC1pLngpPD1uJiZNYXRoLmFicyhlLnktaS55KTw9biYmTWF0aC5hYnMoZS56LWkueik8PW4mJk1hdGguYWJzKGUudy1pLncpPD1ufSxyLlpFUk89bihuZXcgcigwLDAsMCwwKSksci5VTklUX1g9bihuZXcgcigxLDAsMCwwKSksci5VTklUX1k9bihuZXcgcigwLDEsMCwwKSksci5VTklUX1o9bihuZXcgcigwLDAsMSwwKSksci5VTklUX1c9bihuZXcgcigwLDAsMCwxKSksci5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIHIuY2xvbmUodGhpcyxlKX0sci5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiByLmVxdWFscyh0aGlzLGUpfSxyLnByb3RvdHlwZS5lcXVhbHNFcHNpbG9uPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIuZXF1YWxzRXBzaWxvbih0aGlzLGUsdCl9LHIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIigiK3RoaXMueCsiLCAiK3RoaXMueSsiLCAiK3RoaXMueisiLCAiK3RoaXMudysiKSJ9LHJ9KSxkZWZpbmUoIkNvcmUvRWFydGhPcmllbnRhdGlvblBhcmFtZXRlcnNTYW1wbGUiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCxpLG4scil7dGhpcy54UG9sZVdhbmRlcj1lLHRoaXMueVBvbGVXYW5kZXI9dCx0aGlzLnhQb2xlT2Zmc2V0PWksdGhpcy55UG9sZU9mZnNldD1uLHRoaXMudXQxTWludXNVdGM9cn07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvRWFydGhPcmllbnRhdGlvblBhcmFtZXRlcnMiLFsiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9iaW5hcnlTZWFyY2giLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRWFydGhPcmllbnRhdGlvblBhcmFtZXRlcnNTYW1wbGUiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vSnVsaWFuRGF0ZSIsIi4vTGVhcFNlY29uZCIsIi4vbG9hZEpzb24iLCIuL1J1bnRpbWVFcnJvciIsIi4vVGltZUNvbnN0YW50cyIsIi4vVGltZVN0YW5kYXJkIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBoKGUsdCl7cmV0dXJuIGEuY29tcGFyZShlLmp1bGlhbkRhdGUsdCl9ZnVuY3Rpb24gbShlLGkpe2lmKCFuKGkuY29sdW1uTmFtZXMpKXJldHVybiBlLl9kYXRhRXJyb3I9IkVycm9yIGluIGxvYWRlZCBFT1AgZGF0YTogVGhlIGNvbHVtbk5hbWVzIHByb3BlcnR5IGlzIHJlcXVpcmVkLiIsdm9pZCAwO2lmKCFuKGkuc2FtcGxlcykpcmV0dXJuIGUuX2RhdGFFcnJvcj0iRXJyb3IgaW4gbG9hZGVkIEVPUCBkYXRhOiBUaGUgc2FtcGxlcyBwcm9wZXJ0eSBpcyByZXF1aXJlZC4iLHZvaWQgMDt2YXIgcj1pLmNvbHVtbk5hbWVzLmluZGV4T2YoIm1vZGlmaWVkSnVsaWFuRGF0ZVV0YyIpLG89aS5jb2x1bW5OYW1lcy5pbmRleE9mKCJ4UG9sZVdhbmRlclJhZGlhbnMiKSxsPWkuY29sdW1uTmFtZXMuaW5kZXhPZigieVBvbGVXYW5kZXJSYWRpYW5zIiksdT1pLmNvbHVtbk5hbWVzLmluZGV4T2YoInV0MU1pbnVzVXRjU2Vjb25kcyIpLG09aS5jb2x1bW5OYW1lcy5pbmRleE9mKCJ4Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnMiKSxmPWkuY29sdW1uTmFtZXMuaW5kZXhPZigieUNlbGVzdGlhbFBvbGVPZmZzZXRSYWRpYW5zIikscD1pLmNvbHVtbk5hbWVzLmluZGV4T2YoInRhaU1pbnVzVXRjU2Vjb25kcyIpO2lmKDA+cnx8MD5vfHwwPmx8fDA+dXx8MD5tfHwwPmZ8fDA+cClyZXR1cm4gZS5fZGF0YUVycm9yPSJFcnJvciBpbiBsb2FkZWQgRU9QIGRhdGE6IFRoZSBjb2x1bW5OYW1lcyBwcm9wZXJ0eSBtdXN0IGluY2x1ZGUgbW9kaWZpZWRKdWxpYW5EYXRlVXRjLCB4UG9sZVdhbmRlclJhZGlhbnMsIHlQb2xlV2FuZGVyUmFkaWFucywgdXQxTWludXNVdGNTZWNvbmRzLCB4Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnMsIHlDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFucywgYW5kIHRhaU1pbnVzVXRjU2Vjb25kcyBjb2x1bW5zIix2b2lkIDA7dmFyIHY9ZS5fc2FtcGxlcz1pLnNhbXBsZXMsZz1lLl9kYXRlcz1bXTtlLl9kYXRlQ29sdW1uPXIsZS5feFBvbGVXYW5kZXJSYWRpYW5zQ29sdW1uPW8sZS5feVBvbGVXYW5kZXJSYWRpYW5zQ29sdW1uPWwsZS5fdXQxTWludXNVdGNTZWNvbmRzQ29sdW1uPXUsZS5feENlbGVzdGlhbFBvbGVPZmZzZXRSYWRpYW5zQ29sdW1uPW0sZS5feUNlbGVzdGlhbFBvbGVPZmZzZXRSYWRpYW5zQ29sdW1uPWYsZS5fdGFpTWludXNVdGNTZWNvbmRzQ29sdW1uPXAsZS5fY29sdW1uQ291bnQ9aS5jb2x1bW5OYW1lcy5sZW5ndGgsZS5fbGFzdEluZGV4PXZvaWQgMDtmb3IodmFyIF8seT1lLl9hZGROZXdMZWFwU2Vjb25kcyxDPTAsdz12Lmxlbmd0aDt3PkM7Qys9ZS5fY29sdW1uQ291bnQpe3ZhciBFPXZbQytyXSxiPXZbQytwXSxTPUUrYy5NT0RJRklFRF9KVUxJQU5fREFURV9ESUZGRVJFTkNFLFQ9bmV3IGEoUyxiLGQuVEFJKTtpZihnLnB1c2goVCkseSl7aWYoYiE9PV8mJm4oXykpe3ZhciB4PWEubGVhcFNlY29uZHMsQT10KHgsVCxoKTtpZigwPkEpe3ZhciBQPW5ldyBzKFQsYik7eC5zcGxpY2UofkEsMCxQKX19Xz1ifX19ZnVuY3Rpb24gZihlLHQsaSxuLHIpe3ZhciBvPWkqbjtyLnhQb2xlV2FuZGVyPXRbbytlLl94UG9sZVdhbmRlclJhZGlhbnNDb2x1bW5dLHIueVBvbGVXYW5kZXI9dFtvK2UuX3lQb2xlV2FuZGVyUmFkaWFuc0NvbHVtbl0sci54UG9sZU9mZnNldD10W28rZS5feENlbGVzdGlhbFBvbGVPZmZzZXRSYWRpYW5zQ29sdW1uXSxyLnlQb2xlT2Zmc2V0PXRbbytlLl95Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnNDb2x1bW5dLHIudXQxTWludXNVdGM9dFtvK2UuX3V0MU1pbnVzVXRjU2Vjb25kc0NvbHVtbl19ZnVuY3Rpb24gcChlLHQsaSl7cmV0dXJuIHQrZSooaS10KX1mdW5jdGlvbiB2KGUsdCxpLG4scixvLHMpe3ZhciBsPWUuX2NvbHVtbkNvdW50O2lmKG8+dC5sZW5ndGgtMSlyZXR1cm4gcy54UG9sZVdhbmRlcj0wLHMueVBvbGVXYW5kZXI9MCxzLnhQb2xlT2Zmc2V0PTAscy55UG9sZU9mZnNldD0wLHMudXQxTWludXNVdGM9MCxzO3ZhciB1PXRbcl0sYz10W29dO2lmKHUuZXF1YWxzKGMpfHxuLmVxdWFscyh1KSlyZXR1cm4gZihlLGkscixsLHMpLHM7aWYobi5lcXVhbHMoYykpcmV0dXJuIGYoZSxpLG8sbCxzKSxzO3ZhciBkPWEuc2Vjb25kc0RpZmZlcmVuY2Uobix1KS9hLnNlY29uZHNEaWZmZXJlbmNlKGMsdSksaD1yKmwsbT1vKmwsdj1pW2grZS5fdXQxTWludXNVdGNTZWNvbmRzQ29sdW1uXSxnPWlbbStlLl91dDFNaW51c1V0Y1NlY29uZHNDb2x1bW5dLF89Zy12O2lmKF8+LjV8fC0uNT5fKXt2YXIgeT1pW2grZS5fdGFpTWludXNVdGNTZWNvbmRzQ29sdW1uXSxDPWlbbStlLl90YWlNaW51c1V0Y1NlY29uZHNDb2x1bW5dO3khPT1DJiYoYy5lcXVhbHMobik/dj1nOmctPUMteSl9cmV0dXJuIHMueFBvbGVXYW5kZXI9cChkLGlbaCtlLl94UG9sZVdhbmRlclJhZGlhbnNDb2x1bW5dLGlbbStlLl94UG9sZVdhbmRlclJhZGlhbnNDb2x1bW5dKSxzLnlQb2xlV2FuZGVyPXAoZCxpW2grZS5feVBvbGVXYW5kZXJSYWRpYW5zQ29sdW1uXSxpW20rZS5feVBvbGVXYW5kZXJSYWRpYW5zQ29sdW1uXSkscy54UG9sZU9mZnNldD1wKGQsaVtoK2UuX3hDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFuc0NvbHVtbl0saVttK2UuX3hDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFuc0NvbHVtbl0pLHMueVBvbGVPZmZzZXQ9cChkLGlbaCtlLl95Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnNDb2x1bW5dLGlbbStlLl95Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnNDb2x1bW5dKSxzLnV0MU1pbnVzVXRjPXAoZCx2LGcpLHN9dmFyIGc9ZnVuY3Rpb24odCl7aWYodD1pKHQsaS5FTVBUWV9PQkpFQ1QpLHRoaXMuX2RhdGVzPXZvaWQgMCx0aGlzLl9zYW1wbGVzPXZvaWQgMCx0aGlzLl9kYXRlQ29sdW1uPS0xLHRoaXMuX3hQb2xlV2FuZGVyUmFkaWFuc0NvbHVtbj0tMSx0aGlzLl95UG9sZVdhbmRlclJhZGlhbnNDb2x1bW49LTEsdGhpcy5fdXQxTWludXNVdGNTZWNvbmRzQ29sdW1uPS0xLHRoaXMuX3hDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFuc0NvbHVtbj0tMSx0aGlzLl95Q2VsZXN0aWFsUG9sZU9mZnNldFJhZGlhbnNDb2x1bW49LTEsdGhpcy5fdGFpTWludXNVdGNTZWNvbmRzQ29sdW1uPS0xLHRoaXMuX2NvbHVtbkNvdW50PTAsdGhpcy5fbGFzdEluZGV4PS0xLHRoaXMuX2Rvd25sb2FkUHJvbWlzZT12b2lkIDAsdGhpcy5fZGF0YUVycm9yPXZvaWQgMCx0aGlzLl9hZGROZXdMZWFwU2Vjb25kcz1pKHQuYWRkTmV3TGVhcFNlY29uZHMsITApLG4odC5kYXRhKSltKHRoaXMsdC5kYXRhKTtlbHNlIGlmKG4odC51cmwpKXt2YXIgcj10aGlzO3RoaXMuX2Rvd25sb2FkUHJvbWlzZT1lKGwodC51cmwpLGZ1bmN0aW9uKGUpe20ocixlKX0sZnVuY3Rpb24oKXtyLl9kYXRhRXJyb3I9IkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIHJldHJpZXZpbmcgdGhlIEVPUCBkYXRhIGZyb20gdGhlIFVSTCAiK3QudXJsKyIuIn0pfWVsc2UgbSh0aGlzLHtjb2x1bW5OYW1lczpbImRhdGVJc284NjAxIiwibW9kaWZpZWRKdWxpYW5EYXRlVXRjIiwieFBvbGVXYW5kZXJSYWRpYW5zIiwieVBvbGVXYW5kZXJSYWRpYW5zIiwidXQxTWludXNVdGNTZWNvbmRzIiwibGVuZ3RoT2ZEYXlDb3JyZWN0aW9uU2Vjb25kcyIsInhDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFucyIsInlDZWxlc3RpYWxQb2xlT2Zmc2V0UmFkaWFucyIsInRhaU1pbnVzVXRjU2Vjb25kcyJdLHNhbXBsZXM6W119KX07cmV0dXJuIGcuTk9ORT1vKHtnZXRQcm9taXNlVG9Mb2FkOmZ1bmN0aW9uKCl7cmV0dXJuIGUoKX0sY29tcHV0ZTpmdW5jdGlvbihlLHQpe3JldHVybiBuKHQpPyh0LnhQb2xlV2FuZGVyPTAsdC55UG9sZVdhbmRlcj0wLHQueFBvbGVPZmZzZXQ9MCx0LnlQb2xlT2Zmc2V0PTAsdC51dDFNaW51c1V0Yz0wKTp0PW5ldyByKDAsMCwwLDAsMCksdH19KSxnLnByb3RvdHlwZS5nZXRQcm9taXNlVG9Mb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcy5fZG93bmxvYWRQcm9taXNlKX0sZy5wcm90b3R5cGUuY29tcHV0ZT1mdW5jdGlvbihlLGkpe2lmKCFuKHRoaXMuX3NhbXBsZXMpKXtpZihuKHRoaXMuX2RhdGFFcnJvcikpdGhyb3cgbmV3IHUodGhpcy5fZGF0YUVycm9yKTtyZXR1cm4gdm9pZCAwfWlmKG4oaSl8fChpPW5ldyByKDAsMCwwLDAsMCkpLDA9PT10aGlzLl9zYW1wbGVzLmxlbmd0aClyZXR1cm4gaS54UG9sZVdhbmRlcj0wLGkueVBvbGVXYW5kZXI9MCxpLnhQb2xlT2Zmc2V0PTAsaS55UG9sZU9mZnNldD0wLGkudXQxTWludXNVdGM9MCxpO3ZhciBvPXRoaXMuX2RhdGVzLHM9dGhpcy5fbGFzdEluZGV4LGw9MCxjPTA7aWYobihzKSl7dmFyIGQ9b1tzXSxoPW9bcysxXSxtPWEubGVzc1RoYW5PckVxdWFscyhkLGUpLGY9IW4oaCkscD1mfHxhLmdyZWF0ZXJUaGFuT3JFcXVhbHMoaCxlKTtpZihtJiZwKXJldHVybiBsPXMsIWYmJmguZXF1YWxzKGUpJiYrK2wsYz1sKzEsdih0aGlzLG8sdGhpcy5fc2FtcGxlcyxlLGwsYyxpKSxpfXZhciBnPXQobyxlLGEuY29tcGFyZSx0aGlzLl9kYXRlQ29sdW1uKTtyZXR1cm4gZz49MD8oZzxvLmxlbmd0aC0xJiZvW2crMV0uZXF1YWxzKGUpJiYrK2csbD1nLGM9Zyk6KGM9fmcsbD1jLTEsMD5sJiYobD0wKSksdGhpcy5fbGFzdEluZGV4PWwsdih0aGlzLG8sdGhpcy5fc2FtcGxlcyxlLGwsYyxpKSxpfSxnfSksZGVmaW5lKCJDb3JlL2J1aWxkTW9kdWxlVXJsIixbIi4uL1RoaXJkUGFydHkvVXJpIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsInJlcXVpcmUiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcigpe2Zvcih2YXIgZT1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IiksdD0wLGk9ZS5sZW5ndGg7aT50OysrdCl7dmFyIG49ZVt0XS5nZXRBdHRyaWJ1dGUoInNyYyIpLHI9ZC5leGVjKG4pO2lmKG51bGwhPT1yKXJldHVybiByWzFdfXJldHVybiB2b2lkIDB9ZnVuY3Rpb24gbygpe2lmKHQobCkpcmV0dXJuIGw7dmFyIG47aWYobj0idW5kZWZpbmVkIiE9dHlwZW9mIENFU0lVTV9CQVNFX1VSTD9DRVNJVU1fQkFTRV9VUkw6cigpLCF0KG4pKXRocm93IG5ldyBpKCJVbmFibGUgdG8gZGV0ZXJtaW5lIENlc2l1bSBiYXNlIFVSTCBhdXRvbWF0aWNhbGx5LCB0cnkgZGVmaW5pbmcgYSBnbG9iYWwgdmFyaWFibGUgY2FsbGVkIENFU0lVTV9CQVNFX1VSTC4iKTtyZXR1cm4gbD1uZXcgZShuKS5yZXNvbHZlKG5ldyBlKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpKX1mdW5jdGlvbiBhKGUpe3JldHVybiBuLnRvVXJsKCIuLi8iK2UpfWZ1bmN0aW9uIHModCl7cmV0dXJuIG5ldyBlKHQpLnJlc29sdmUobygpKS50b1N0cmluZygpfXZhciBsLHUsYyxkPS8oKD86LipcLyl8XiljZXNpdW1bXHctXSpcLmpzKD86XFd8JCkvaSxoPWZ1bmN0aW9uKGUpe3QodSl8fCh1PXQobi50b1VybCk/YTpzKSx0KGMpfHwoYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIikpO3ZhciBpPXUoZSk7cmV0dXJuIGMuaHJlZj1pLGMuaHJlZj1jLmhyZWYsYy5ocmVmfTtyZXR1cm4gaC5fY2VzaXVtU2NyaXB0UmVnZXg9ZCxofSksZGVmaW5lKCJDb3JlL0lhdTIwMDZYeXNTYW1wbGUiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCxpKXt0aGlzLng9ZSx0aGlzLnk9dCx0aGlzLnM9aX07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvSWF1MjAwNlh5c0RhdGEiLFsiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9idWlsZE1vZHVsZVVybCIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9JYXUyMDA2WHlzU2FtcGxlIiwiLi9KdWxpYW5EYXRlIiwiLi9sb2FkSnNvbiIsIi4vVGltZVN0YW5kYXJkIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbChlLHQsaSl7dmFyIG49ZDtyZXR1cm4gbi5kYXlOdW1iZXI9dCxuLnNlY29uZHNPZkRheT1pLG8uZGF5c0RpZmZlcmVuY2UobixlLl9zYW1wbGVaZXJvRGF0ZVRUKX1mdW5jdGlvbiB1KGkscil7aWYoaS5fY2h1bmtEb3dubG9hZHNJblByb2dyZXNzW3JdKXJldHVybiBpLl9jaHVua0Rvd25sb2Fkc0luUHJvZ3Jlc3Nbcl07dmFyIG89ZS5kZWZlcigpO2kuX2NodW5rRG93bmxvYWRzSW5Qcm9ncmVzc1tyXT1vO3ZhciBzLGw9aS5feHlzRmlsZVVybFRlbXBsYXRlO3JldHVybiBzPW4obCk/bC5yZXBsYWNlKCJ7MH0iLHIpOnQoIkFzc2V0cy9JQVUyMDA2X1hZUy9JQVUyMDA2X1hZU18iK3IrIi5qc29uIiksZShhKHMpLGZ1bmN0aW9uKGUpe2kuX2NodW5rRG93bmxvYWRzSW5Qcm9ncmVzc1tyXT0hMTtmb3IodmFyIHQ9aS5fc2FtcGxlcyxuPWUuc2FtcGxlcyxhPTMqcippLl9zYW1wbGVzUGVyWHlzRmlsZSxzPTAsbD1uLmxlbmd0aDtsPnM7KytzKXRbYStzXT1uW3NdO28ucmVzb2x2ZSgpfSksby5wcm9taXNlfXZhciBjPWZ1bmN0aW9uKGUpe2U9aShlLGkuRU1QVFlfT0JKRUNUKSx0aGlzLl94eXNGaWxlVXJsVGVtcGxhdGU9ZS54eXNGaWxlVXJsVGVtcGxhdGUsdGhpcy5faW50ZXJwb2xhdGlvbk9yZGVyPWkoZS5pbnRlcnBvbGF0aW9uT3JkZXIsOSksdGhpcy5fc2FtcGxlWmVyb0p1bGlhbkVwaGVtZXJpc0RhdGU9aShlLnNhbXBsZVplcm9KdWxpYW5FcGhlbWVyaXNEYXRlLDI0NDIzOTYuNSksdGhpcy5fc2FtcGxlWmVyb0RhdGVUVD1uZXcgbyh0aGlzLl9zYW1wbGVaZXJvSnVsaWFuRXBoZW1lcmlzRGF0ZSwwLHMuVEFJKSx0aGlzLl9zdGVwU2l6ZURheXM9aShlLnN0ZXBTaXplRGF5cywxKSx0aGlzLl9zYW1wbGVzUGVyWHlzRmlsZT1pKGUuc2FtcGxlc1Blclh5c0ZpbGUsMWUzKSx0aGlzLl90b3RhbFNhbXBsZXM9aShlLnRvdGFsU2FtcGxlcywyNzQyNiksdGhpcy5fc2FtcGxlcz1uZXcgQXJyYXkoMyp0aGlzLl90b3RhbFNhbXBsZXMpLHRoaXMuX2NodW5rRG93bmxvYWRzSW5Qcm9ncmVzcz1bXTtmb3IodmFyIHQ9dGhpcy5faW50ZXJwb2xhdGlvbk9yZGVyLG49dGhpcy5fZGVub21pbmF0b3JzPW5ldyBBcnJheSh0KzEpLHI9dGhpcy5feFRhYmxlPW5ldyBBcnJheSh0KzEpLGE9TWF0aC5wb3codGhpcy5fc3RlcFNpemVEYXlzLHQpLGw9MDt0Pj1sOysrbCl7bltsXT1hLHJbbF09bCp0aGlzLl9zdGVwU2l6ZURheXM7Zm9yKHZhciB1PTA7dD49dTsrK3UpdSE9PWwmJihuW2xdKj1sLXUpO25bbF09MS9uW2xdfXRoaXMuX3dvcms9bmV3IEFycmF5KHQrMSksdGhpcy5fY29lZj1uZXcgQXJyYXkodCsxKX0sZD1uZXcgbygwLDAscy5UQUkpO3JldHVybiBjLnByb3RvdHlwZS5wcmVsb2FkPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvPWwodGhpcyx0LGkpLGE9bCh0aGlzLG4scikscz0wfG8vdGhpcy5fc3RlcFNpemVEYXlzLXRoaXMuX2ludGVycG9sYXRpb25PcmRlci8yOzA+cyYmKHM9MCk7dmFyIGM9YS90aGlzLl9zdGVwU2l6ZURheXMtdGhpcy5faW50ZXJwb2xhdGlvbk9yZGVyLzJ8MCt0aGlzLl9pbnRlcnBvbGF0aW9uT3JkZXI7Yz49dGhpcy5fdG90YWxTYW1wbGVzJiYoYz10aGlzLl90b3RhbFNhbXBsZXMtMSk7Zm9yKHZhciBkPTB8cy90aGlzLl9zYW1wbGVzUGVyWHlzRmlsZSxoPTB8Yy90aGlzLl9zYW1wbGVzUGVyWHlzRmlsZSxtPVtdLGY9ZDtoPj1mOysrZiltLnB1c2godSh0aGlzLGYpKTtyZXR1cm4gZS5hbGwobSl9LGMucHJvdG90eXBlLmNvbXB1dGVYeXNSYWRpYW5zPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbz1sKHRoaXMsZSx0KTtpZigwPm8pcmV0dXJuIHZvaWQgMDt2YXIgYT0wfG8vdGhpcy5fc3RlcFNpemVEYXlzO2lmKGE+PXRoaXMuX3RvdGFsU2FtcGxlcylyZXR1cm4gdm9pZCAwO3ZhciBzPXRoaXMuX2ludGVycG9sYXRpb25PcmRlcixjPWEtKDB8cy8yKTswPmMmJihjPTApO3ZhciBkPWMrcztkPj10aGlzLl90b3RhbFNhbXBsZXMmJihkPXRoaXMuX3RvdGFsU2FtcGxlcy0xLGM9ZC1zLDA+YyYmKGM9MCkpO3ZhciBoPSExLG09dGhpcy5fc2FtcGxlcztpZihuKG1bMypjXSl8fCh1KHRoaXMsMHxjL3RoaXMuX3NhbXBsZXNQZXJYeXNGaWxlKSxoPSEwKSxuKG1bMypkXSl8fCh1KHRoaXMsMHxkL3RoaXMuX3NhbXBsZXNQZXJYeXNGaWxlKSxoPSEwKSxoKXJldHVybiB2b2lkIDA7bihpKT8oaS54PTAsaS55PTAsaS5zPTApOmk9bmV3IHIoMCwwLDApO3ZhciBmLHAsdj1vLWMqdGhpcy5fc3RlcFNpemVEYXlzLGc9dGhpcy5fd29yayxfPXRoaXMuX2Rlbm9taW5hdG9ycyx5PXRoaXMuX2NvZWYsQz10aGlzLl94VGFibGU7Zm9yKGY9MDtzPj1mOysrZilnW2ZdPXYtQ1tmXTtmb3IoZj0wO3M+PWY7KytmKXtmb3IoeVtmXT0xLHA9MDtzPj1wOysrcClwIT09ZiYmKHlbZl0qPWdbcF0pO3lbZl0qPV9bZl07dmFyIHc9MyooYytmKTtpLngrPXlbZl0qbVt3KytdLGkueSs9eVtmXSptW3crK10saS5zKz15W2ZdKm1bd119cmV0dXJuIGl9LGN9KSxkZWZpbmUoIkNvcmUvTWF0cml4NCIsWyIuL0NhcnRlc2lhbjMiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vTWF0aCIsIi4vTWF0cml4MyIsIi4vUnVudGltZUVycm9yIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24oZSxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdil7dGhpc1swXT10KGUsMCksdGhpc1sxXT10KG8sMCksdGhpc1syXT10KHUsMCksdGhpc1szXT10KG0sMCksdGhpc1s0XT10KGksMCksdGhpc1s1XT10KGEsMCksdGhpc1s2XT10KGMsMCksdGhpc1s3XT10KGYsMCksdGhpc1s4XT10KG4sMCksdGhpc1s5XT10KHMsMCksdGhpc1sxMF09dChkLDApLHRoaXNbMTFdPXQocCwwKSx0aGlzWzEyXT10KHIsMCksdGhpc1sxM109dChsLDApLHRoaXNbMTRdPXQoaCwwKSx0aGlzWzE1XT10KHYsMCl9O2wucGFja2VkTGVuZ3RoPTE2LGwucGFjaz1mdW5jdGlvbihlLGksbil7bj10KG4sMCksaVtuKytdPWVbMF0saVtuKytdPWVbMV0saVtuKytdPWVbMl0saVtuKytdPWVbM10saVtuKytdPWVbNF0saVtuKytdPWVbNV0saVtuKytdPWVbNl0saVtuKytdPWVbN10saVtuKytdPWVbOF0saVtuKytdPWVbOV0saVtuKytdPWVbMTBdLGlbbisrXT1lWzExXSxpW24rK109ZVsxMl0saVtuKytdPWVbMTNdLGlbbisrXT1lWzE0XSxpW25dPWVbMTVdfSxsLnVucGFjaz1mdW5jdGlvbihlLG4scil7cmV0dXJuIG49dChuLDApLGkocil8fChyPW5ldyBsKSxyWzBdPWVbbisrXSxyWzFdPWVbbisrXSxyWzJdPWVbbisrXSxyWzNdPWVbbisrXSxyWzRdPWVbbisrXSxyWzVdPWVbbisrXSxyWzZdPWVbbisrXSxyWzddPWVbbisrXSxyWzhdPWVbbisrXSxyWzldPWVbbisrXSxyWzEwXT1lW24rK10sclsxMV09ZVtuKytdLHJbMTJdPWVbbisrXSxyWzEzXT1lW24rK10sclsxNF09ZVtuKytdLHJbMTVdPWVbbl0scn0sbC5jbG9uZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKGUpP2kodCk/KHRbMF09ZVswXSx0WzFdPWVbMV0sdFsyXT1lWzJdLHRbM109ZVszXSx0WzRdPWVbNF0sdFs1XT1lWzVdLHRbNl09ZVs2XSx0WzddPWVbN10sdFs4XT1lWzhdLHRbOV09ZVs5XSx0WzEwXT1lWzEwXSx0WzExXT1lWzExXSx0WzEyXT1lWzEyXSx0WzEzXT1lWzEzXSx0WzE0XT1lWzE0XSx0WzE1XT1lWzE1XSx0KTpuZXcgbChlWzBdLGVbNF0sZVs4XSxlWzEyXSxlWzFdLGVbNV0sZVs5XSxlWzEzXSxlWzJdLGVbNl0sZVsxMF0sZVsxNF0sZVszXSxlWzddLGVbMTFdLGVbMTVdKTp2b2lkIDB9LGwuZnJvbUFycmF5PWwudW5wYWNrLGwuZnJvbUNvbHVtbk1ham9yQXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5jbG9uZShlLHQpfSxsLmZyb21Sb3dNYWpvckFycmF5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodCk/KHRbMF09ZVswXSx0WzFdPWVbNF0sdFsyXT1lWzhdLHRbM109ZVsxMl0sdFs0XT1lWzFdLHRbNV09ZVs1XSx0WzZdPWVbOV0sdFs3XT1lWzEzXSx0WzhdPWVbMl0sdFs5XT1lWzZdLHRbMTBdPWVbMTBdLHRbMTFdPWVbMTRdLHRbMTJdPWVbM10sdFsxM109ZVs3XSx0WzE0XT1lWzExXSx0WzE1XT1lWzE1XSx0KTpuZXcgbChlWzBdLGVbMV0sZVsyXSxlWzNdLGVbNF0sZVs1XSxlWzZdLGVbN10sZVs4XSxlWzldLGVbMTBdLGVbMTFdLGVbMTJdLGVbMTNdLGVbMTRdLGVbMTVdKX0sbC5mcm9tUm90YXRpb25UcmFuc2xhdGlvbj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGkobik/KG5bMF09ZVswXSxuWzFdPWVbMV0sblsyXT1lWzJdLG5bM109MCxuWzRdPWVbM10sbls1XT1lWzRdLG5bNl09ZVs1XSxuWzddPTAsbls4XT1lWzZdLG5bOV09ZVs3XSxuWzEwXT1lWzhdLG5bMTFdPTAsblsxMl09dC54LG5bMTNdPXQueSxuWzE0XT10LnosblsxNV09MSxuKTpuZXcgbChlWzBdLGVbM10sZVs2XSx0LngsZVsxXSxlWzRdLGVbN10sdC55LGVbMl0sZVs1XSxlWzhdLHQueiwwLDAsMCwxKX0sbC5mcm9tVHJhbnNsYXRpb25RdWF0ZXJuaW9uUm90YXRpb25TY2FsZT1mdW5jdGlvbihlLHQsbixyKXtpKHIpfHwocj1uZXcgbCk7dmFyIG89bi54LGE9bi55LHM9bi56LHU9dC54KnQueCxjPXQueCp0LnksZD10LngqdC56LGg9dC54KnQudyxtPXQueSp0LnksZj10LnkqdC56LHA9dC55KnQudyx2PXQueip0LnosZz10LnoqdC53LF89dC53KnQudyx5PXUtbS12K18sQz0yKihjLWcpLHc9MiooZCtwKSxFPTIqKGMrZyksYj0tdSttLXYrXyxTPTIqKGYtaCksVD0yKihkLXApLHg9MiooZitoKSxBPS11LW0rditfO3JldHVybiByWzBdPXkqbyxyWzFdPUUqbyxyWzJdPVQqbyxyWzNdPTAscls0XT1DKmEscls1XT1iKmEscls2XT14KmEscls3XT0wLHJbOF09dypzLHJbOV09UypzLHJbMTBdPUEqcyxyWzExXT0wLHJbMTJdPWUueCxyWzEzXT1lLnksclsxNF09ZS56LHJbMTVdPTEscn0sbC5mcm9tVHJhbnNsYXRpb249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbC5mcm9tUm90YXRpb25UcmFuc2xhdGlvbihhLklERU5USVRZLGUsdCl9LGwuZnJvbVNjYWxlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodCk/KHRbMF09ZS54LHRbMV09MCx0WzJdPTAsdFszXT0wLHRbNF09MCx0WzVdPWUueSx0WzZdPTAsdFs3XT0wLHRbOF09MCx0WzldPTAsdFsxMF09ZS56LHRbMTFdPTAsdFsxMl09MCx0WzEzXT0wLHRbMTRdPTAsdFsxNV09MSx0KTpuZXcgbChlLngsMCwwLDAsMCxlLnksMCwwLDAsMCxlLnosMCwwLDAsMCwxKX0sbC5mcm9tVW5pZm9ybVNjYWxlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodCk/KHRbMF09ZSx0WzFdPTAsdFsyXT0wLHRbM109MCx0WzRdPTAsdFs1XT1lLHRbNl09MCx0WzddPTAsdFs4XT0wLHRbOV09MCx0WzEwXT1lLHRbMTFdPTAsdFsxMl09MCx0WzEzXT0wLHRbMTRdPTAsdFsxNV09MSx0KTpuZXcgbChlLDAsMCwwLDAsZSwwLDAsMCwwLGUsMCwwLDAsMCwxKX07dmFyIHU9bmV3IGUsYz1uZXcgZSxkPW5ldyBlO2wuZnJvbUNhbWVyYT1mdW5jdGlvbih0LG4pe3ZhciByPXQuZXllLG89dC50YXJnZXQsYT10LnVwO2Uubm9ybWFsaXplKGUuc3VidHJhY3QobyxyLHUpLHUpLGUubm9ybWFsaXplKGUuY3Jvc3ModSxhLGMpLGMpLGUubm9ybWFsaXplKGUuY3Jvc3MoYyx1LGQpLGQpO3ZhciBzPWMueCxoPWMueSxtPWMueixmPXUueCxwPXUueSx2PXUueixnPWQueCxfPWQueSx5PWQueixDPXIueCx3PXIueSxFPXIueixiPXMqLUMraCotdyttKi1FLFM9ZyotQytfKi13K3kqLUUsVD1mKkMrcCp3K3YqRTtyZXR1cm4gaShuKT8oblswXT1zLG5bMV09ZyxuWzJdPS1mLG5bM109MCxuWzRdPWgsbls1XT1fLG5bNl09LXAsbls3XT0wLG5bOF09bSxuWzldPXksblsxMF09LXYsblsxMV09MCxuWzEyXT1iLG5bMTNdPVMsblsxNF09VCxuWzE1XT0xLG4pOm5ldyBsKHMsaCxtLGIsZyxfLHksUywtZiwtcCwtdixULDAsMCwwLDEpfSxsLmNvbXB1dGVQZXJzcGVjdGl2ZUZpZWxkT2ZWaWV3PWZ1bmN0aW9uKGUsdCxpLG4scil7dmFyIG89TWF0aC50YW4oLjUqZSksYT0xL28scz1hL3QsbD0obitpKS8oaS1uKSx1PTIqbippLyhpLW4pO3JldHVybiByWzBdPXMsclsxXT0wLHJbMl09MCxyWzNdPTAscls0XT0wLHJbNV09YSxyWzZdPTAscls3XT0wLHJbOF09MCxyWzldPTAsclsxMF09bCxyWzExXT0tMSxyWzEyXT0wLHJbMTNdPTAsclsxNF09dSxyWzE1XT0wLHJ9LGwuY29tcHV0ZU9ydGhvZ3JhcGhpY09mZkNlbnRlcj1mdW5jdGlvbihlLHQsaSxuLHIsbyxhKXt2YXIgcz0xLyh0LWUpLGw9MS8obi1pKSx1PTEvKG8tciksYz0tKHQrZSkqcyxkPS0obitpKSpsLGg9LShvK3IpKnU7cmV0dXJuIHMqPTIsbCo9Mix1Kj0tMixhWzBdPXMsYVsxXT0wLGFbMl09MCxhWzNdPTAsYVs0XT0wLGFbNV09bCxhWzZdPTAsYVs3XT0wLGFbOF09MCxhWzldPTAsYVsxMF09dSxhWzExXT0wLGFbMTJdPWMsYVsxM109ZCxhWzE0XT1oLGFbMTVdPTEsYX0sbC5jb21wdXRlUGVyc3BlY3RpdmVPZmZDZW50ZXI9ZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7dmFyIHM9MipyLyh0LWUpLGw9MipyLyhuLWkpLHU9KHQrZSkvKHQtZSksYz0obitpKS8obi1pKSxkPS0obytyKS8oby1yKSxoPS0xLG09LTIqbypyLyhvLXIpO3JldHVybiBhWzBdPXMsYVsxXT0wLGFbMl09MCxhWzNdPTAsYVs0XT0wLGFbNV09bCxhWzZdPTAsYVs3XT0wLGFbOF09dSxhWzldPWMsYVsxMF09ZCxhWzExXT1oLGFbMTJdPTAsYVsxM109MCxhWzE0XT1tLGFbMTVdPTAsYX0sbC5jb21wdXRlSW5maW5pdGVQZXJzcGVjdGl2ZU9mZkNlbnRlcj1mdW5jdGlvbihlLHQsaSxuLHIsbyl7dmFyIGE9MipyLyh0LWUpLHM9MipyLyhuLWkpLGw9KHQrZSkvKHQtZSksdT0obitpKS8obi1pKSxjPS0xLGQ9LTEsaD0tMipyO3JldHVybiBvWzBdPWEsb1sxXT0wLG9bMl09MCxvWzNdPTAsb1s0XT0wLG9bNV09cyxvWzZdPTAsb1s3XT0wLG9bOF09bCxvWzldPXUsb1sxMF09YyxvWzExXT1kLG9bMTJdPTAsb1sxM109MCxvWzE0XT1oLG9bMTVdPTAsb30sbC5jb21wdXRlVmlld3BvcnRUcmFuc2Zvcm1hdGlvbj1mdW5jdGlvbihlLGksbixyKXtlPXQoZSx0LkVNUFRZX09CSkVDVCk7dmFyIG89dChlLngsMCksYT10KGUueSwwKSxzPXQoZS53aWR0aCwwKSxsPXQoZS5oZWlnaHQsMCk7aT10KGksMCksbj10KG4sMSk7dmFyIHU9LjUqcyxjPS41KmwsZD0uNSoobi1pKSxoPXUsbT1jLGY9ZCxwPW8rdSx2PWErYyxnPWkrZCxfPTE7cmV0dXJuIHJbMF09aCxyWzFdPTAsclsyXT0wLHJbM109MCxyWzRdPTAscls1XT1tLHJbNl09MCxyWzddPTAscls4XT0wLHJbOV09MCxyWzEwXT1mLHJbMTFdPTAsclsxMl09cCxyWzEzXT12LHJbMTRdPWcsclsxNV09XyxyfSxsLnRvQXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSh0KT8odFswXT1lWzBdLHRbMV09ZVsxXSx0WzJdPWVbMl0sdFszXT1lWzNdLHRbNF09ZVs0XSx0WzVdPWVbNV0sdFs2XT1lWzZdLHRbN109ZVs3XSx0WzhdPWVbOF0sdFs5XT1lWzldLHRbMTBdPWVbMTBdLHRbMTFdPWVbMTFdLHRbMTJdPWVbMTJdLHRbMTNdPWVbMTNdLHRbMTRdPWVbMTRdLHRbMTVdPWVbMTVdLHQpOltlWzBdLGVbMV0sZVsyXSxlWzNdLGVbNF0sZVs1XSxlWzZdLGVbN10sZVs4XSxlWzldLGVbMTBdLGVbMTFdLGVbMTJdLGVbMTNdLGVbMTRdLGVbMTVdXX0sbC5nZXRFbGVtZW50SW5kZXg9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gNCplK3R9LGwuZ2V0Q29sdW1uPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj00KnQscj1lW25dLG89ZVtuKzFdLGE9ZVtuKzJdLHM9ZVtuKzNdO3JldHVybiBpLng9cixpLnk9byxpLno9YSxpLnc9cyxpfSxsLnNldENvbHVtbj1mdW5jdGlvbihlLHQsaSxuKXtuPWwuY2xvbmUoZSxuKTt2YXIgcj00KnQ7cmV0dXJuIG5bcl09aS54LG5bcisxXT1pLnksbltyKzJdPWkueixuW3IrM109aS53LG59LGwuZ2V0Um93PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1lW3RdLHI9ZVt0KzRdLG89ZVt0KzhdLGE9ZVt0KzEyXTtyZXR1cm4gaS54PW4saS55PXIsaS56PW8saS53PWEsaX0sbC5zZXRSb3c9ZnVuY3Rpb24oZSx0LGksbil7cmV0dXJuIG49bC5jbG9uZShlLG4pLG5bdF09aS54LG5bdCs0XT1pLnksblt0KzhdPWkueixuW3QrMTJdPWkudyxufTt2YXIgaD1uZXcgZTtsLmdldFNjYWxlPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIGkueD1lLm1hZ25pdHVkZShlLmZyb21FbGVtZW50cyh0WzBdLHRbMV0sdFsyXSxoKSksaS55PWUubWFnbml0dWRlKGUuZnJvbUVsZW1lbnRzKHRbNF0sdFs1XSx0WzZdLGgpKSxpLno9ZS5tYWduaXR1ZGUoZS5mcm9tRWxlbWVudHModFs4XSx0WzldLHRbMTBdLGgpKSxpfTt2YXIgbT1uZXcgZTtsLmdldE1heGltdW1TY2FsZT1mdW5jdGlvbih0KXtyZXR1cm4gbC5nZXRTY2FsZSh0LG0pLGUubWF4aW11bUNvbXBvbmVudChtKX0sbC5tdWx0aXBseT1mdW5jdGlvbihlLHQsaSl7dmFyIG49ZVswXSxyPWVbMV0sbz1lWzJdLGE9ZVszXSxzPWVbNF0sbD1lWzVdLHU9ZVs2XSxjPWVbN10sZD1lWzhdLGg9ZVs5XSxtPWVbMTBdLGY9ZVsxMV0scD1lWzEyXSx2PWVbMTNdLGc9ZVsxNF0sXz1lWzE1XSx5PXRbMF0sQz10WzFdLHc9dFsyXSxFPXRbM10sYj10WzRdLFM9dFs1XSxUPXRbNl0seD10WzddLEE9dFs4XSxQPXRbOV0sTT10WzEwXSxJPXRbMTFdLEQ9dFsxMl0sTz10WzEzXSxSPXRbMTRdLEw9dFsxNV0sTj1uKnkrcypDK2QqdytwKkUsej1yKnkrbCpDK2gqdyt2KkUsQj1vKnkrdSpDK20qdytnKkUsRj1hKnkrYypDK2YqdytfKkUsVj1uKmIrcypTK2QqVCtwKngsaz1yKmIrbCpTK2gqVCt2KngsVT1vKmIrdSpTK20qVCtnKngsVz1hKmIrYypTK2YqVCtfKngsRz1uKkErcypQK2QqTStwKkksSD1yKkErbCpQK2gqTSt2KkkscT1vKkErdSpQK20qTStnKkksaj1hKkErYypQK2YqTStfKkksWT1uKkQrcypPK2QqUitwKkwsWD1yKkQrbCpPK2gqUit2KkwsWj1vKkQrdSpPK20qUitnKkwsSj1hKkQrYypPK2YqUitfKkw7cmV0dXJuIGlbMF09TixpWzFdPXosaVsyXT1CLGlbM109RixpWzRdPVYsaVs1XT1rLGlbNl09VSxpWzddPVcsaVs4XT1HLGlbOV09SCxpWzEwXT1xLGlbMTFdPWosaVsxMl09WSxpWzEzXT1YLGlbMTRdPVosaVsxNV09SixpfSxsLmFkZD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGlbMF09ZVswXSt0WzBdLGlbMV09ZVsxXSt0WzFdLGlbMl09ZVsyXSt0WzJdLGlbM109ZVszXSt0WzNdLGlbNF09ZVs0XSt0WzRdLGlbNV09ZVs1XSt0WzVdLGlbNl09ZVs2XSt0WzZdLGlbN109ZVs3XSt0WzddLGlbOF09ZVs4XSt0WzhdLGlbOV09ZVs5XSt0WzldLGlbMTBdPWVbMTBdK3RbMTBdLGlbMTFdPWVbMTFdK3RbMTFdLGlbMTJdPWVbMTJdK3RbMTJdLGlbMTNdPWVbMTNdK3RbMTNdLGlbMTRdPWVbMTRdK3RbMTRdLGlbMTVdPWVbMTVdK3RbMTVdLGl9LGwuc3VidHJhY3Q9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpWzBdPWVbMF0tdFswXSxpWzFdPWVbMV0tdFsxXSxpWzJdPWVbMl0tdFsyXSxpWzNdPWVbM10tdFszXSxpWzRdPWVbNF0tdFs0XSxpWzVdPWVbNV0tdFs1XSxpWzZdPWVbNl0tdFs2XSxpWzddPWVbN10tdFs3XSxpWzhdPWVbOF0tdFs4XSxpWzldPWVbOV0tdFs5XSxpWzEwXT1lWzEwXS10WzEwXSxpWzExXT1lWzExXS10WzExXSxpWzEyXT1lWzEyXS10WzEyXSxpWzEzXT1lWzEzXS10WzEzXSxpWzE0XT1lWzE0XS10WzE0XSxpWzE1XT1lWzE1XS10WzE1XSxpfSxsLm11bHRpcGx5VHJhbnNmb3JtYXRpb249ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWVbMF0scj1lWzFdLG89ZVsyXSxhPWVbNF0scz1lWzVdLGw9ZVs2XSx1PWVbOF0sYz1lWzldLGQ9ZVsxMF0saD1lWzEyXSxtPWVbMTNdLGY9ZVsxNF0scD10WzBdLHY9dFsxXSxnPXRbMl0sXz10WzRdLHk9dFs1XSxDPXRbNl0sdz10WzhdLEU9dFs5XSxiPXRbMTBdLFM9dFsxMl0sVD10WzEzXSx4PXRbMTRdLEE9bipwK2Eqdit1KmcsUD1yKnArcyp2K2MqZyxNPW8qcCtsKnYrZCpnLEk9bipfK2EqeSt1KkMsRD1yKl8rcyp5K2MqQyxPPW8qXytsKnkrZCpDLFI9bip3K2EqRSt1KmIsTD1yKncrcypFK2MqYixOPW8qdytsKkUrZCpiLHo9bipTK2EqVCt1KngraCxCPXIqUytzKlQrYyp4K20sRj1vKlMrbCpUK2QqeCtmO3JldHVybiBpWzBdPUEsaVsxXT1QLGlbMl09TSxpWzNdPTAsaVs0XT1JLGlbNV09RCxpWzZdPU8saVs3XT0wLGlbOF09UixpWzldPUwsaVsxMF09TixpWzExXT0wLGlbMTJdPXosaVsxM109QixpWzE0XT1GLGlbMTVdPTEsaX0sbC5tdWx0aXBseUJ5VHJhbnNsYXRpb249ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXQueCxyPXQueSxvPXQueixhPW4qZVswXStyKmVbNF0rbyplWzhdK2VbMTJdLHM9biplWzFdK3IqZVs1XStvKmVbOV0rZVsxM10sbD1uKmVbMl0rciplWzZdK28qZVsxMF0rZVsxNF07cmV0dXJuIGlbMF09ZVswXSxpWzFdPWVbMV0saVsyXT1lWzJdLGlbM109ZVszXSxpWzRdPWVbNF0saVs1XT1lWzVdLGlbNl09ZVs2XSxpWzddPWVbN10saVs4XT1lWzhdLGlbOV09ZVs5XSxpWzEwXT1lWzEwXSxpWzExXT1lWzExXSxpWzEyXT1hLGlbMTNdPXMsaVsxNF09bCxpWzE1XT1lWzE1XSxpfTt2YXIgZj1uZXcgZTtyZXR1cm4gbC5tdWx0aXBseUJ5VW5pZm9ybVNjYWxlPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZi54PXQsZi55PXQsZi56PXQsbC5tdWx0aXBseUJ5U2NhbGUoZSxmLGkpfSxsLm11bHRpcGx5QnlTY2FsZT1mdW5jdGlvbihlLHQsaSl7dmFyIG49dC54LHI9dC55LG89dC56O3JldHVybiAxPT09biYmMT09PXImJjE9PT1vP2wuY2xvbmUoZSxpKTooaVswXT1uKmVbMF0saVsxXT1uKmVbMV0saVsyXT1uKmVbMl0saVszXT0wLGlbNF09ciplWzRdLGlbNV09ciplWzVdLGlbNl09ciplWzZdLGlbN109MCxpWzhdPW8qZVs4XSxpWzldPW8qZVs5XSxpWzEwXT1vKmVbMTBdLGlbMTFdPTAsaVsxMl09ZVsxMl0saVsxM109ZVsxM10saVsxNF09ZVsxNF0saVsxNV09MSxpKX0sbC5tdWx0aXBseUJ5VmVjdG9yPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj10Lngscj10Lnksbz10LnosYT10Lncscz1lWzBdKm4rZVs0XSpyK2VbOF0qbytlWzEyXSphLGw9ZVsxXSpuK2VbNV0qcitlWzldKm8rZVsxM10qYSx1PWVbMl0qbitlWzZdKnIrZVsxMF0qbytlWzE0XSphLGM9ZVszXSpuK2VbN10qcitlWzExXSpvK2VbMTVdKmE7cmV0dXJuIGkueD1zLGkueT1sLGkuej11LGkudz1jLGl9LGwubXVsdGlwbHlCeVBvaW50QXNWZWN0b3I9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXQueCxyPXQueSxvPXQueixhPWVbMF0qbitlWzRdKnIrZVs4XSpvLHM9ZVsxXSpuK2VbNV0qcitlWzldKm8sbD1lWzJdKm4rZVs2XSpyK2VbMTBdKm87cmV0dXJuIGkueD1hLGkueT1zLGkuej1sLGl9LGwubXVsdGlwbHlCeVBvaW50PWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj10Lngscj10Lnksbz10LnosYT1lWzBdKm4rZVs0XSpyK2VbOF0qbytlWzEyXSxzPWVbMV0qbitlWzVdKnIrZVs5XSpvK2VbMTNdLGw9ZVsyXSpuK2VbNl0qcitlWzEwXSpvK2VbMTRdO3JldHVybiBpLng9YSxpLnk9cyxpLno9bCxpfSxsLm11bHRpcGx5QnlTY2FsYXI9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpWzBdPWVbMF0qdCxpWzFdPWVbMV0qdCxpWzJdPWVbMl0qdCxpWzNdPWVbM10qdCxpWzRdPWVbNF0qdCxpWzVdPWVbNV0qdCxpWzZdPWVbNl0qdCxpWzddPWVbN10qdCxpWzhdPWVbOF0qdCxpWzldPWVbOV0qdCxpWzEwXT1lWzEwXSp0LGlbMTFdPWVbMTFdKnQsaVsxMl09ZVsxMl0qdCxpWzEzXT1lWzEzXSp0LGlbMTRdPWVbMTRdKnQsaVsxNV09ZVsxNV0qdCxpfSxsLm5lZ2F0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0WzBdPS1lWzBdLHRbMV09LWVbMV0sdFsyXT0tZVsyXSx0WzNdPS1lWzNdLHRbNF09LWVbNF0sdFs1XT0tZVs1XSx0WzZdPS1lWzZdLHRbN109LWVbN10sdFs4XT0tZVs4XSx0WzldPS1lWzldLHRbMTBdPS1lWzEwXSx0WzExXT0tZVsxMV0sdFsxMl09LWVbMTJdLHRbMTNdPS1lWzEzXSx0WzE0XT0tZVsxNF0sdFsxNV09LWVbMTVdLHR9LGwudHJhbnNwb3NlPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZVsxXSxuPWVbMl0scj1lWzNdLG89ZVs2XSxhPWVbN10scz1lWzExXTtyZXR1cm4gdFswXT1lWzBdLHRbMV09ZVs0XSx0WzJdPWVbOF0sdFszXT1lWzEyXSx0WzRdPWksdFs1XT1lWzVdLHRbNl09ZVs5XSx0WzddPWVbMTNdLHRbOF09bix0WzldPW8sdFsxMF09ZVsxMF0sdFsxMV09ZVsxNF0sdFsxMl09cix0WzEzXT1hLHRbMTRdPXMsdFsxNV09ZVsxNV0sdH0sbC5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdFswXT1NYXRoLmFicyhlWzBdKSx0WzFdPU1hdGguYWJzKGVbMV0pLHRbMl09TWF0aC5hYnMoZVsyXSksdFszXT1NYXRoLmFicyhlWzNdKSx0WzRdPU1hdGguYWJzKGVbNF0pLHRbNV09TWF0aC5hYnMoZVs1XSksdFs2XT1NYXRoLmFicyhlWzZdKSx0WzddPU1hdGguYWJzKGVbN10pLHRbOF09TWF0aC5hYnMoZVs4XSksdFs5XT1NYXRoLmFicyhlWzldKSx0WzEwXT1NYXRoLmFicyhlWzEwXSksdFsxMV09TWF0aC5hYnMoZVsxMV0pLHRbMTJdPU1hdGguYWJzKGVbMTJdKSx0WzEzXT1NYXRoLmFicyhlWzEzXSksdFsxNF09TWF0aC5hYnMoZVsxNF0pLHRbMTVdPU1hdGguYWJzKGVbMTVdKSx0fSxsLmVxdWFscz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8aShlKSYmaSh0KSYmZVswXT09PXRbMF0mJmVbMV09PT10WzFdJiZlWzJdPT09dFsyXSYmZVszXT09PXRbM10mJmVbNF09PT10WzRdJiZlWzVdPT09dFs1XSYmZVs2XT09PXRbNl0mJmVbN109PT10WzddJiZlWzhdPT09dFs4XSYmZVs5XT09PXRbOV0mJmVbMTBdPT09dFsxMF0mJmVbMTFdPT09dFsxMV0mJmVbMTJdPT09dFsxMl0mJmVbMTNdPT09dFsxM10mJmVbMTRdPT09dFsxNF0mJmVbMTVdPT09dFsxNV19LGwuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGU9PT10fHxpKGUpJiZpKHQpJiZNYXRoLmFicyhlWzBdLXRbMF0pPD1uJiZNYXRoLmFicyhlWzFdLXRbMV0pPD1uJiZNYXRoLmFicyhlWzJdLXRbMl0pPD1uJiZNYXRoLmFicyhlWzNdLXRbM10pPD1uJiZNYXRoLmFicyhlWzRdLXRbNF0pPD1uJiZNYXRoLmFicyhlWzVdLXRbNV0pPD1uJiZNYXRoLmFicyhlWzZdLXRbNl0pPD1uJiZNYXRoLmFicyhlWzddLXRbN10pPD1uJiZNYXRoLmFicyhlWzhdLXRbOF0pPD1uJiZNYXRoLmFicyhlWzldLXRbOV0pPD1uJiZNYXRoLmFicyhlWzEwXS10WzEwXSk8PW4mJk1hdGguYWJzKGVbMTFdLXRbMTFdKTw9biYmTWF0aC5hYnMoZVsxMl0tdFsxMl0pPD1uJiZNYXRoLmFicyhlWzEzXS10WzEzXSk8PW4mJk1hdGguYWJzKGVbMTRdLXRbMTRdKTw9biYmTWF0aC5hYnMoZVsxNV0tdFsxNV0pPD1ufSxsLmdldFRyYW5zbGF0aW9uPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQueD1lWzEyXSx0Lnk9ZVsxM10sdC56PWVbMTRdLHR9LGwuZ2V0Um90YXRpb249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdFswXT1lWzBdLHRbMV09ZVsxXSx0WzJdPWVbMl0sdFszXT1lWzRdLHRbNF09ZVs1XSx0WzVdPWVbNl0sdFs2XT1lWzhdLHRbN109ZVs5XSx0WzhdPWVbMTBdLHR9LGwuaW52ZXJzZT1mdW5jdGlvbihlLHQpe3ZhciBpPWVbMF0sbj1lWzRdLHI9ZVs4XSxhPWVbMTJdLGw9ZVsxXSx1PWVbNV0sYz1lWzldLGQ9ZVsxM10saD1lWzJdLG09ZVs2XSxmPWVbMTBdLHA9ZVsxNF0sdj1lWzNdLGc9ZVs3XSxfPWVbMTFdLHk9ZVsxNV0sQz1mKnksdz1wKl8sRT1tKnksYj1wKmcsUz1tKl8sVD1mKmcseD1oKnksQT1wKnYsUD1oKl8sTT1mKnYsST1oKmcsRD1tKnYsTz1DKnUrYipjK1MqZC0odyp1K0UqYytUKmQpLFI9dypsK3gqYytNKmQtKEMqbCtBKmMrUCpkKSxMPUUqbCtBKnUrSSpkLShiKmwreCp1K0QqZCksTj1UKmwrUCp1K0QqYy0oUypsK00qdStJKmMpLHo9dypuK0UqcitUKmEtKEMqbitiKnIrUyphKSxCPUMqaStBKnIrUCphLSh3KmkreCpyK00qYSksRj1iKmkreCpuK0QqYS0oRSppK0EqbitJKmEpLFY9UyppK00qbitJKnItKFQqaStQKm4rRCpyKTtDPXIqZCx3PWEqYyxFPW4qZCxiPWEqdSxTPW4qYyxUPXIqdSx4PWkqZCxBPWEqbCxQPWkqYyxNPXIqbCxJPWkqdSxEPW4qbDt2YXIgaz1DKmcrYipfK1MqeS0odypnK0UqXytUKnkpLFU9dyp2K3gqXytNKnktKEMqditBKl8rUCp5KSxXPUUqditBKmcrSSp5LShiKnYreCpnK0QqeSksRz1UKnYrUCpnK0QqXy0oUyp2K00qZytJKl8pLEg9RSpmK1QqcCt3Km0tKFMqcCtDKm0rYipmKSxxPVAqcCtDKmgrQSpmLSh4KmYrTSpwK3cqaCksaj14Km0rRCpwK2IqaC0oSSpwK0UqaCtBKm0pLFk9SSpmK1MqaCtNKm0tKFAqbStEKmYrVCpoKSxYPWkqTytuKlIrcipMK2EqTjtpZihNYXRoLmFicyhYKTxvLkVQU0lMT04yMCl0aHJvdyBuZXcgcygibWF0cml4IGlzIG5vdCBpbnZlcnRpYmxlIGJlY2F1c2UgaXRzIGRldGVybWluYXRlIGlzIHplcm8uIik7cmV0dXJuIFg9MS9YLHRbMF09TypYLHRbMV09UipYLHRbMl09TCpYLHRbM109TipYLHRbNF09eipYLHRbNV09QipYLHRbNl09RipYLHRbN109VipYLHRbOF09aypYLHRbOV09VSpYLHRbMTBdPVcqWCx0WzExXT1HKlgsdFsxMl09SCpYLHRbMTNdPXEqWCx0WzE0XT1qKlgsdFsxNV09WSpYLHR9LGwuaW52ZXJzZVRyYW5zZm9ybWF0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZVswXSxuPWVbMV0scj1lWzJdLG89ZVs0XSxhPWVbNV0scz1lWzZdLGw9ZVs4XSx1PWVbOV0sYz1lWzEwXSxkPWVbMTJdLGg9ZVsxM10sbT1lWzE0XSxmPS1pKmQtbipoLXIqbSxwPS1vKmQtYSpoLXMqbSx2PS1sKmQtdSpoLWMqbTtyZXR1cm4gdFswXT1pLHRbMV09byx0WzJdPWwsdFszXT0wLHRbNF09bix0WzVdPWEsdFs2XT11LHRbN109MCx0WzhdPXIsdFs5XT1zLHRbMTBdPWMsdFsxMV09MCx0WzEyXT1mLHRbMTNdPXAsdFsxNF09dix0WzE1XT0xLHR9LGwuSURFTlRJVFk9cihuZXcgbCgxLDAsMCwwLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwxKSksbC5DT0xVTU4wUk9XMD0wLGwuQ09MVU1OMFJPVzE9MSxsLkNPTFVNTjBST1cyPTIsbC5DT0xVTU4wUk9XMz0zLGwuQ09MVU1OMVJPVzA9NCxsLkNPTFVNTjFST1cxPTUsbC5DT0xVTU4xUk9XMj02LGwuQ09MVU1OMVJPVzM9NyxsLkNPTFVNTjJST1cwPTgsbC5DT0xVTU4yUk9XMT05LGwuQ09MVU1OMlJPVzI9MTAsbC5DT0xVTU4yUk9XMz0xMSxsLkNPTFVNTjNST1cwPTEyLGwuQ09MVU1OM1JPVzE9MTMsbC5DT0xVTU4zUk9XMj0xNCxsLkNPTFVNTjNST1czPTE1LGwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiBsLmNsb25lKHRoaXMsZSl9LGwucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gbC5lcXVhbHModGhpcyxlKX0sbC5wcm90b3R5cGUuZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQpe3JldHVybiBsLmVxdWFsc0Vwc2lsb24odGhpcyxlLHQpfSxsLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIoIit0aGlzWzBdKyIsICIrdGhpc1s0XSsiLCAiK3RoaXNbOF0rIiwgIit0aGlzWzEyXSsiKVxuIisiKCIrdGhpc1sxXSsiLCAiK3RoaXNbNV0rIiwgIit0aGlzWzldKyIsICIrdGhpc1sxM10rIilcbiIrIigiK3RoaXNbMl0rIiwgIit0aGlzWzZdKyIsICIrdGhpc1sxMF0rIiwgIit0aGlzWzE0XSsiKVxuIisiKCIrdGhpc1szXSsiLCAiK3RoaXNbN10rIiwgIit0aGlzWzExXSsiLCAiK3RoaXNbMTVdKyIpIn0sbH0pLGRlZmluZSgiQ29yZS9UcmFuc2Zvcm1zIixbIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vQ2FydGVzaWFuMiIsIi4vQ2FydGVzaWFuMyIsIi4vQ2FydGVzaWFuNCIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWFydGhPcmllbnRhdGlvblBhcmFtZXRlcnMiLCIuL0VhcnRoT3JpZW50YXRpb25QYXJhbWV0ZXJzU2FtcGxlIiwiLi9FbGxpcHNvaWQiLCIuL0lhdTIwMDZYeXNEYXRhIiwiLi9JYXUyMDA2WHlzU2FtcGxlIiwiLi9KdWxpYW5EYXRlIiwiLi9NYXRoIiwiLi9NYXRyaXgzIiwiLi9NYXRyaXg0IiwiLi9UaW1lQ29uc3RhbnRzIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2KXsidXNlIHN0cmljdCI7dmFyIGc9e30sXz1uZXcgaSx5PW5ldyBpLEM9bmV3IGk7Zy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZT1mdW5jdGlvbihlLHQsbil7aWYobS5lcXVhbHNFcHNpbG9uKGUueCwwLG0uRVBTSUxPTjE0KSYmbS5lcXVhbHNFcHNpbG9uKGUueSwwLG0uRVBTSUxPTjE0KSl7dmFyIGE9bS5zaWduKGUueik7cmV0dXJuIG8obik/KG5bMF09MCxuWzFdPTEsblsyXT0wLG5bM109MCxuWzRdPS1hLG5bNV09MCxuWzZdPTAsbls3XT0wLG5bOF09MCxuWzldPTAsblsxMF09YSxuWzExXT0wLG5bMTJdPWUueCxuWzEzXT1lLnksblsxNF09ZS56LG5bMTVdPTEsbik6bmV3IHAoMCwtYSwwLGUueCwxLDAsMCxlLnksMCwwLGEsZS56LDAsMCwwLDEpfXZhciBzPV8sbD15LGM9QztyZXR1cm4gdD1yKHQsdS5XR1M4NCksdC5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoZSxzKSxsLng9LWUueSxsLnk9ZS54LGwuej0wLGkubm9ybWFsaXplKGwsbCksaS5jcm9zcyhzLGwsYyksbyhuKT8oblswXT1sLngsblsxXT1sLnksblsyXT1sLnosblszXT0wLG5bNF09Yy54LG5bNV09Yy55LG5bNl09Yy56LG5bN109MCxuWzhdPXMueCxuWzldPXMueSxuWzEwXT1zLnosblsxMV09MCxuWzEyXT1lLngsblsxM109ZS55LG5bMTRdPWUueixuWzE1XT0xLG4pOm5ldyBwKGwueCxjLngscy54LGUueCxsLnksYy55LHMueSxlLnksbC56LGMueixzLnosZS56LDAsMCwwLDEpfTt2YXIgdz1uZXcgaSxFPW5ldyBpLGI9bmV3IGk7Zy5ub3J0aEVhc3REb3duVG9GaXhlZEZyYW1lPWZ1bmN0aW9uKGUsdCxuKXtpZihtLmVxdWFsc0Vwc2lsb24oZS54LDAsbS5FUFNJTE9OMTQpJiZtLmVxdWFsc0Vwc2lsb24oZS55LDAsbS5FUFNJTE9OMTQpKXt2YXIgYT1tLnNpZ24oZS56KTtyZXR1cm4gbyhuKT8oblswXT0tYSxuWzFdPTAsblsyXT0wLG5bM109MCxuWzRdPTAsbls1XT0xLG5bNl09MCxuWzddPTAsbls4XT0wLG5bOV09MCxuWzEwXT0tYSxuWzExXT0wLG5bMTJdPWUueCxuWzEzXT1lLnksblsxNF09ZS56LG5bMTVdPTEsbik6bmV3IHAoLWEsMCwwLGUueCwwLDEsMCxlLnksMCwwLC1hLGUueiwwLDAsMCwxKX12YXIgcz13LGw9RSxjPWI7cmV0dXJuIHQ9cih0LHUuV0dTODQpLHQuZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKGUscyksbC54PS1lLnksbC55PWUueCxsLno9MCxpLm5vcm1hbGl6ZShsLGwpLGkuY3Jvc3MocyxsLGMpLG8obik/KG5bMF09Yy54LG5bMV09Yy55LG5bMl09Yy56LG5bM109MCxuWzRdPWwueCxuWzVdPWwueSxuWzZdPWwueixuWzddPTAsbls4XT0tcy54LG5bOV09LXMueSxuWzEwXT0tcy56LG5bMTFdPTAsblsxMl09ZS54LG5bMTNdPWUueSxuWzE0XT1lLnosblsxNV09MSxuKTpuZXcgcChjLngsbC54LC1zLngsZS54LGMueSxsLnksLXMueSxlLnksYy56LGwueiwtcy56LGUueiwwLDAsMCwxKX0sZy5ub3J0aFVwRWFzdFRvRml4ZWRGcmFtZT1mdW5jdGlvbihlLHQsbil7aWYobS5lcXVhbHNFcHNpbG9uKGUueCwwLG0uRVBTSUxPTjE0KSYmbS5lcXVhbHNFcHNpbG9uKGUueSwwLG0uRVBTSUxPTjE0KSl7dmFyIGE9bS5zaWduKGUueik7cmV0dXJuIG8obik/KG5bMF09LWEsblsxXT0wLG5bMl09MCxuWzNdPTAsbls0XT0wLG5bNV09MCxuWzZdPWEsbls3XT0wLG5bOF09MCxuWzldPTEsblsxMF09MCxuWzExXT0wLG5bMTJdPWUueCxuWzEzXT1lLnksblsxNF09ZS56LG5bMTVdPTEsbik6bmV3IHAoLWEsMCwwLGUueCwwLDAsMSxlLnksMCxhLDAsZS56LDAsMCwwLDEpfXZhciBzPV8sbD15LGM9QztyZXR1cm4gdD1yKHQsdS5XR1M4NCksdC5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoZSxzKSxsLng9LWUueSxsLnk9ZS54LGwuej0wLGkubm9ybWFsaXplKGwsbCksaS5jcm9zcyhzLGwsYyksbyhuKT8oblswXT1jLngsblsxXT1jLnksblsyXT1jLnosblszXT0wLG5bNF09cy54LG5bNV09cy55LG5bNl09cy56LG5bN109MCxuWzhdPWwueCxuWzldPWwueSxuWzEwXT1sLnosblsxMV09MCxuWzEyXT1lLngsblsxM109ZS55LG5bMTRdPWUueixuWzE1XT0xLG4pOm5ldyBwKGMueCxzLngsbC54LGUueCxjLnkscy55LGwueSxlLnksYy56LHMueixsLnosZS56LDAsMCwwLDEpfTt2YXIgUz0yNDExMC41NDg0MSxUPTg2NDAxODQuODEyODY2LHg9LjA5MzEwNCxBPS02MmUtNyxQPTEuMTc3Mjc1ODM4NDY2OGUtMTksTT03MjkyMTE1ODU1M2UtMTUsST1tLlRXT19QSS84NjQwMCxEPW5ldyBoO2cuY29tcHV0ZVRlbWVUb1BzZXVkb0ZpeGVkTWF0cml4PWZ1bmN0aW9uKGUsdCl7RD1oLmFkZFNlY29uZHMoZSwtaC5jb21wdXRlVGFpTWludXNVdGMoZSksRCk7dmFyIGksbj1ELmRheU51bWJlcixyPUQuc2Vjb25kc09mRGF5LGE9bi0yNDUxNTQ1O2k9cj49NDMyMDA/KGErLjUpL3YuREFZU19QRVJfSlVMSUFOX0NFTlRVUlk6KGEtLjUpL3YuREFZU19QRVJfSlVMSUFOX0NFTlRVUlk7dmFyIHM9UytpKihUK2kqKHgraSpBKSksbD1zKkklbS5UV09fUEksdT1NK1AqKG4tMjQ1MTU0NS41KSxjPShyKy41KnYuU0VDT05EU19QRVJfREFZKSV2LlNFQ09ORFNfUEVSX0RBWSxkPWwrdSpjLHA9TWF0aC5jb3MoZCksZz1NYXRoLnNpbihkKTtyZXR1cm4gbyh0KT8odFswXT1wLHRbMV09LWcsdFsyXT0wLHRbM109Zyx0WzRdPXAsdFs1XT0wLHRbNl09MCx0WzddPTAsdFs4XT0xLHQpOm5ldyBmKHAsZywwLC1nLHAsMCwwLDAsMSl9LGcuaWF1MjAwNlh5c0RhdGE9bmV3IGMsZy5lYXJ0aE9yaWVudGF0aW9uUGFyYW1ldGVycz1zLk5PTkU7dmFyIE89MzIuMTg0LFI9MjQ1MTU0NTtnLnByZWxvYWRJY3JmRml4ZWQ9ZnVuY3Rpb24odCl7dmFyIGk9dC5zdGFydC5kYXlOdW1iZXIsbj10LnN0YXJ0LnNlY29uZHNPZkRheStPLHI9dC5zdG9wLmRheU51bWJlcixvPXQuc3RvcC5zZWNvbmRzT2ZEYXkrTyxhPWcuaWF1MjAwNlh5c0RhdGEucHJlbG9hZChpLG4scixvKSxzPWcuZWFydGhPcmllbnRhdGlvblBhcmFtZXRlcnMuZ2V0UHJvbWlzZVRvTG9hZCgpO3JldHVybiBlLmFsbChbYSxzXSl9LGcuY29tcHV0ZUljcmZUb0ZpeGVkTWF0cml4PWZ1bmN0aW9uKGUsdCl7byh0KXx8KHQ9bmV3IGYpO3ZhciBpPWcuY29tcHV0ZUZpeGVkVG9JY3JmTWF0cml4KGUsdCk7cmV0dXJuIG8oaSk/Zi50cmFuc3Bvc2UoaSx0KTp2b2lkIDB9O3ZhciBMPW5ldyBkKDAsMCwwKSxOPW5ldyBsKDAsMCwwLDAsMCwwKSx6PW5ldyBmLEI9bmV3IGY7Zy5jb21wdXRlRml4ZWRUb0ljcmZNYXRyaXg9ZnVuY3Rpb24oZSx0KXtvKHQpfHwodD1uZXcgZik7dmFyIGk9Zy5lYXJ0aE9yaWVudGF0aW9uUGFyYW1ldGVycy5jb21wdXRlKGUsTik7aWYoIW8oaSkpcmV0dXJuIHZvaWQgMDt2YXIgbj1lLmRheU51bWJlcixyPWUuc2Vjb25kc09mRGF5K08sYT1nLmlhdTIwMDZYeXNEYXRhLmNvbXB1dGVYeXNSYWRpYW5zKG4scixMKTtpZighbyhhKSlyZXR1cm4gdm9pZCAwO3ZhciBzPWEueCtpLnhQb2xlT2Zmc2V0LGw9YS55K2kueVBvbGVPZmZzZXQsdT0xLygxK01hdGguc3FydCgxLXMqcy1sKmwpKSxjPXo7Y1swXT0xLXUqcypzLGNbM109LXUqcypsLGNbNl09cyxjWzFdPS11KnMqbCxjWzRdPTEtdSpsKmwsY1s3XT1sLGNbMl09LXMsY1s1XT0tbCxjWzhdPTEtdSoocypzK2wqbCk7dmFyIGQ9Zi5mcm9tUm90YXRpb25aKC1hLnMsQikscD1mLm11bHRpcGx5KGMsZCx6KSxfPWUuZGF5TnVtYmVyLHk9ZS5zZWNvbmRzT2ZEYXktaC5jb21wdXRlVGFpTWludXNVdGMoZSkraS51dDFNaW51c1V0YyxDPV8tMjQ1MTU0NSx3PXkvdi5TRUNPTkRTX1BFUl9EQVksRT0uNzc5MDU3MjczMjY0K3crLjAwMjczNzgxMTkxMTM1NDQ4KihDK3cpO0U9RSUxKm0uVFdPX1BJO3ZhciBiPWYuZnJvbVJvdGF0aW9uWihFLEIpLFM9Zi5tdWx0aXBseShwLGIseiksVD1NYXRoLmNvcyhpLnhQb2xlV2FuZGVyKSx4PU1hdGguY29zKGkueVBvbGVXYW5kZXIpLEE9TWF0aC5zaW4oaS54UG9sZVdhbmRlciksUD1NYXRoLnNpbihpLnlQb2xlV2FuZGVyKSxNPW4tUityL3YuU0VDT05EU19QRVJfREFZO00vPTM2NTI1O3ZhciBJPS00N2UtNipNKm0uUkFESUFOU19QRVJfREVHUkVFLzM2MDAsRD1NYXRoLmNvcyhJKSxGPU1hdGguc2luKEkpLFY9QjtyZXR1cm4gVlswXT1UKkQsVlsxXT1UKkYsVlsyXT1BLFZbM109LXgqRitQKkEqRCxWWzRdPXgqRCtQKkEqRixWWzVdPS1QKlQsVls2XT0tUCpGLXgqQSpELFZbN109UCpELXgqQSpGLFZbOF09eCpULGYubXVsdGlwbHkoUyxWLHQpfTt2YXIgRj1uZXcgbjtyZXR1cm4gZy5wb2ludFRvV2luZG93Q29vcmRpbmF0ZXM9ZnVuY3Rpb24oZSx0LGksbil7cmV0dXJuIG49Zy5wb2ludFRvR0xXaW5kb3dDb29yZGluYXRlcyhlLHQsaSxuKSxuLnk9Mip0WzVdLW4ueSxufSxnLnBvaW50VG9HTFdpbmRvd0Nvb3JkaW5hdGVzPWZ1bmN0aW9uKGUsaSxyLGEpe28oYSl8fChhPW5ldyB0KTt2YXIgcz1GO3JldHVybiBwLm11bHRpcGx5QnlWZWN0b3IoZSxuLmZyb21FbGVtZW50cyhyLngsci55LHIueiwxLHMpLHMpLG4ubXVsdGlwbHlCeVNjYWxhcihzLDEvcy53LHMpLHAubXVsdGlwbHlCeVZlY3RvcihpLHMscyksdC5mcm9tQ2FydGVzaWFuNChzLGEpfSxnfSksZGVmaW5lKCJEYXRhU291cmNlcy9Qb3NpdGlvblByb3BlcnR5IixbIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL1JlZmVyZW5jZUZyYW1lIiwiLi4vQ29yZS9UcmFuc2Zvcm1zIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKCl7bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcigpfTtpKHMucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpuLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxyZWZlcmVuY2VGcmFtZTp7Z2V0Om4udGhyb3dJbnN0YW50aWF0aW9uRXJyb3J9fSkscy5wcm90b3R5cGUuZ2V0VmFsdWU9bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcixzLnByb3RvdHlwZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWU9bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcixzLnByb3RvdHlwZS5lcXVhbHM9bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcjt2YXIgbD1uZXcgcjtyZXR1cm4gcy5jb252ZXJ0VG9SZWZlcmVuY2VGcmFtZT1mdW5jdGlvbihpLG4scyx1LGMpe2lmKCF0KG4pKXJldHVybiBuO2lmKHQoYyl8fChjPW5ldyBlKSxzPT09dSlyZXR1cm4gZS5jbG9uZShuLGMpO3ZhciBkPWEuY29tcHV0ZUljcmZUb0ZpeGVkTWF0cml4KGksbCk7cmV0dXJuIHQoZCl8fChkPWEuY29tcHV0ZVRlbWVUb1BzZXVkb0ZpeGVkTWF0cml4KGksbCkpLHM9PT1vLklORVJUSUFMP3IubXVsdGlwbHlCeVZlY3RvcihkLG4sYyk6cz09PW8uRklYRUQ/ci5tdWx0aXBseUJ5VmVjdG9yKHIudHJhbnNwb3NlKGQsbCksbixjKTp2b2lkIDB9LHN9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0NvbnN0YW50UG9zaXRpb25Qcm9wZXJ0eSIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9SZWZlcmVuY2VGcmFtZSIsIi4vUG9zaXRpb25Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO3ZhciBsPWZ1bmN0aW9uKGksbil7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG8sdGhpcy5fdmFsdWU9ZS5jbG9uZShpKSx0aGlzLl9yZWZlcmVuY2VGcmFtZT10KG4sYS5GSVhFRCl9O3JldHVybiBuKGwucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4haSh0aGlzLl92YWx1ZSl8fHRoaXMuX3JlZmVyZW5jZUZyYW1lPT09YS5GSVhFRH19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxyZWZlcmVuY2VGcmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlZmVyZW5jZUZyYW1lfX19KSxsLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZShlLGEuRklYRUQsdCl9LGwucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKHQsbil7dmFyIHI9ITE7ZS5lcXVhbHModGhpcy5fdmFsdWUsdCl8fChyPSEwLHRoaXMuX3ZhbHVlPWUuY2xvbmUodCkpLGkobikmJnRoaXMuX3JlZmVyZW5jZUZyYW1lIT09biYmKHI9ITAsdGhpcy5fcmVmZXJlbmNlRnJhbWU9biksciYmdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sbC5wcm90b3R5cGUuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gcy5jb252ZXJ0VG9SZWZlcmVuY2VGcmFtZShlLHRoaXMuX3ZhbHVlLHRoaXMuX3JlZmVyZW5jZUZyYW1lLHQsaSl9LGwucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcz09PXR8fHQgaW5zdGFuY2VvZiBsJiZlLmVxdWFscyh0aGlzLl92YWx1ZSx0Ll92YWx1ZSkmJnRoaXMuX3JlZmVyZW5jZUZyYW1lPT09dC5fcmVmZXJlbmNlRnJhbWV9LGx9KSxkZWZpbmUoIkNvcmUvZ2V0VGltZXN0YW1wIixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdDtyZXR1cm4gdD0idW5kZWZpbmVkIiE9dHlwZW9mIHBlcmZvcm1hbmNlJiZlKHBlcmZvcm1hbmNlLm5vdyk/ZnVuY3Rpb24oKXtyZXR1cm4gcGVyZm9ybWFuY2Uubm93KCl9OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9fSksZGVmaW5lKCJDb3JlL0Nsb2NrIixbIi4vQ2xvY2tSYW5nZSIsIi4vQ2xvY2tTdGVwIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FdmVudCIsIi4vZ2V0VGltZXN0YW1wIiwiLi9KdWxpYW5EYXRlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24ocil7cj1pKHIsaS5FTVBUWV9PQkpFQ1QpO3ZhciBsPXIuc3RhcnRUaW1lLHU9IW4obCksYz1yLnN0b3BUaW1lLGQ9IW4oYyksaD1yLmN1cnJlbnRUaW1lLG09IW4oaCk7dSYmZCYmbT8oaD1zLm5vdygpLGw9cy5jbG9uZShoKSxjPXMuYWRkRGF5cyhoLDEsbmV3IHMpKTp1JiZkPyhsPXMuY2xvbmUoaCksYz1zLmFkZERheXMoaCwxLG5ldyBzKSk6dSYmbT8obD1zLmFkZERheXMoYywtMSxuZXcgcyksaD1zLmNsb25lKGwpKTptJiZkPyhoPXMuY2xvbmUobCksYz1zLmFkZERheXMobCwxLG5ldyBzKSk6bT9oPXMuY2xvbmUobCk6ZD9jPXMuYWRkRGF5cyhoLDEsbmV3IHMpOnUmJihsPXMuY2xvbmUoaCkpLHRoaXMuc3RhcnRUaW1lPWwsdGhpcy5zdG9wVGltZT1jLHRoaXMuY3VycmVudFRpbWU9aCx0aGlzLm11bHRpcGxpZXI9aShyLm11bHRpcGxpZXIsMSksdGhpcy5jbG9ja1N0ZXA9aShyLmNsb2NrU3RlcCx0LlNZU1RFTV9DTE9DS19NVUxUSVBMSUVSKSx0aGlzLmNsb2NrUmFuZ2U9aShyLmNsb2NrUmFuZ2UsZS5VTkJPVU5ERUQpLHRoaXMuY2FuQW5pbWF0ZT1pKHIuY2FuQW5pbWF0ZSwhMCksdGhpcy5zaG91bGRBbmltYXRlPWkoci5zaG91bGRBbmltYXRlLCEwKSx0aGlzLm9uVGljaz1uZXcgbyx0aGlzLl9sYXN0U3lzdGVtVGltZT1hKCl9O3JldHVybiBsLnByb3RvdHlwZS50aWNrPWZ1bmN0aW9uKCl7dmFyIGk9YSgpLG49cy5jbG9uZSh0aGlzLmN1cnJlbnRUaW1lKSxyPXRoaXMuc3RhcnRUaW1lLG89dGhpcy5zdG9wVGltZSxsPXRoaXMubXVsdGlwbGllcjtpZih0aGlzLmNhbkFuaW1hdGUmJnRoaXMuc2hvdWxkQW5pbWF0ZSlpZih0aGlzLmNsb2NrU3RlcD09PXQuU1lTVEVNX0NMT0NLKW49cy5ub3cobik7ZWxzZXtpZih0aGlzLmNsb2NrU3RlcD09PXQuVElDS19ERVBFTkRFTlQpbj1zLmFkZFNlY29uZHMobixsLG4pO2Vsc2V7dmFyIHU9aS10aGlzLl9sYXN0U3lzdGVtVGltZTtuPXMuYWRkU2Vjb25kcyhuLGwqKHUvMWUzKSxuKX1pZih0aGlzLmNsb2NrUmFuZ2U9PT1lLkNMQU1QRUQpcy5sZXNzVGhhbihuLHIpP249cy5jbG9uZShyLG4pOnMuZ3JlYXRlclRoYW4obixvKSYmKG49cy5jbG9uZShvLG4pKTtlbHNlIGlmKHRoaXMuY2xvY2tSYW5nZT09PWUuTE9PUF9TVE9QKWZvcihzLmxlc3NUaGFuKG4scikmJihuPXMuY2xvbmUocixuKSk7cy5ncmVhdGVyVGhhbihuLG8pOyluPXMuYWRkU2Vjb25kcyhyLHMuc2Vjb25kc0RpZmZlcmVuY2UobixvKSxuKX1yZXR1cm4gdGhpcy5jdXJyZW50VGltZT1uLHRoaXMuX2xhc3RTeXN0ZW1UaW1lPWksdGhpcy5vblRpY2sucmFpc2VFdmVudCh0aGlzKSxufSxsfSksZGVmaW5lKCJEYXRhU291cmNlcy9EYXRhU291cmNlQ2xvY2siLFsiLi4vQ29yZS9DbG9jayIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL0p1bGlhbkRhdGUiLCIuL2NyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO3ZhciBsPWZ1bmN0aW9uKCl7dGhpcy5fc3RhcnRUaW1lPXZvaWQgMCx0aGlzLl9zdG9wVGltZT12b2lkIDAsdGhpcy5fY3VycmVudFRpbWU9dm9pZCAwLHRoaXMuX2Nsb2NrUmFuZ2U9dm9pZCAwLHRoaXMuX2Nsb2NrU3RlcD12b2lkIDAsdGhpcy5fbXVsdGlwbGllcj12b2lkIDAsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG8KfTtyZXR1cm4gbihsLnByb3RvdHlwZSx7ZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LHN0YXJ0VGltZTpzKCJzdGFydFRpbWUiKSxzdG9wVGltZTpzKCJzdG9wVGltZSIpLGN1cnJlbnRUaW1lOnMoImN1cnJlbnRUaW1lIiksY2xvY2tSYW5nZTpzKCJjbG9ja1JhbmdlIiksY2xvY2tTdGVwOnMoImNsb2NrU3RlcCIpLG11bHRpcGxpZXI6cygibXVsdGlwbGllciIpfSksbC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGkoZSl8fChlPW5ldyBsKSxlLnN0YXJ0VGltZT10aGlzLnN0YXJ0VGltZSxlLnN0b3BUaW1lPXRoaXMuc3RvcFRpbWUsZS5jdXJyZW50VGltZT10aGlzLmN1cnJlbnRUaW1lLGUuY2xvY2tSYW5nZT10aGlzLmNsb2NrUmFuZ2UsZS5jbG9ja1N0ZXA9dGhpcy5jbG9ja1N0ZXAsZS5tdWx0aXBsaWVyPXRoaXMubXVsdGlwbGllcixlfSxsLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxpKGUpJiZhLmVxdWFscyh0aGlzLnN0YXJ0VGltZSxlLnN0YXJ0VGltZSkmJmEuZXF1YWxzKHRoaXMuc3RvcFRpbWUsZS5zdG9wVGltZSkmJmEuZXF1YWxzKHRoaXMuY3VycmVudFRpbWUsZS5jdXJyZW50VGltZSkmJnRoaXMuY2xvY2tSYW5nZT09PWUuY2xvY2tSYW5nZSYmdGhpcy5jbG9ja1N0ZXA9PT1lLmNsb2NrU3RlcCYmdGhpcy5tdWx0aXBsaWVyPT09ZS5tdWx0aXBsaWVyfSxsLnByb3RvdHlwZS5tZXJnZT1mdW5jdGlvbihlKXt0aGlzLnN0YXJ0VGltZT10KHRoaXMuc3RhcnRUaW1lLGUuc3RhcnRUaW1lKSx0aGlzLnN0b3BUaW1lPXQodGhpcy5zdG9wVGltZSxlLnN0b3BUaW1lKSx0aGlzLmN1cnJlbnRUaW1lPXQodGhpcy5jdXJyZW50VGltZSxlLmN1cnJlbnRUaW1lKSx0aGlzLmNsb2NrUmFuZ2U9dCh0aGlzLmNsb2NrUmFuZ2UsZS5jbG9ja1JhbmdlKSx0aGlzLmNsb2NrU3RlcD10KHRoaXMuY2xvY2tTdGVwLGUuY2xvY2tTdGVwKSx0aGlzLm11bHRpcGxpZXI9dCh0aGlzLm11bHRpcGxpZXIsZS5tdWx0aXBsaWVyKX0sbC5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIGkodCl8fCh0PW5ldyBlKSx0LnN0YXJ0VGltZT10aGlzLnN0YXJ0VGltZSx0LnN0b3BUaW1lPXRoaXMuc3RvcFRpbWUsdC5jbG9ja1JhbmdlPXRoaXMuY2xvY2tSYW5nZSx0LmNsb2NrU3RlcD10aGlzLmNsb2NrU3RlcCx0Lm11bHRpcGxpZXI9dGhpcy5tdWx0aXBsaWVyLHQuY3VycmVudFRpbWU9dGhpcy5jdXJyZW50VGltZSx0fSxsfSksZGVmaW5lKCJEYXRhU291cmNlcy9FbGxpcHNlR3JhcGhpY3MiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4vY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgYT1mdW5jdGlvbigpe3RoaXMuX3NlbWlNYWpvckF4aXM9dm9pZCAwLHRoaXMuX3NlbWlNYWpvckF4aXNTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3NlbWlNaW5vckF4aXM9dm9pZCAwLHRoaXMuX3NlbWlNaW5vckF4aXNTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3JvdGF0aW9uPXZvaWQgMCx0aGlzLl9yb3RhdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbWF0ZXJpYWw9dm9pZCAwLHRoaXMuX21hdGVyaWFsU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9oZWlnaHQ9dm9pZCAwLHRoaXMuX2hlaWdodFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZXh0cnVkZWRIZWlnaHQ9dm9pZCAwLHRoaXMuX2V4dHJ1ZGVkSGVpZ2h0U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9ncmFudWxhcml0eT12b2lkIDAsdGhpcy5fZ3JhbnVsYXJpdHlTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3N0Um90YXRpb249dm9pZCAwLHRoaXMuX3N0Um90YXRpb25TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX291dGxpbmU9dm9pZCAwLHRoaXMuX291dGxpbmVTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX291dGxpbmVDb2xvcj12b2lkIDAsdGhpcy5fb3V0bGluZUNvbG9yU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9udW1iZXJPZlZlcnRpY2FsTGluZXM9dm9pZCAwLHRoaXMuX251bWJlck9mVmVydGljYWxMaW5lc1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IHJ9O3JldHVybiBpKGEucHJvdG90eXBlLHtkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0sc2VtaU1ham9yQXhpczpvKCJzZW1pTWFqb3JBeGlzIiksc2VtaU1pbm9yQXhpczpvKCJzZW1pTWlub3JBeGlzIikscm90YXRpb246bygicm90YXRpb24iKSxzaG93Om8oInNob3ciKSxtYXRlcmlhbDpvKCJtYXRlcmlhbCIpLGhlaWdodDpvKCJoZWlnaHQiKSxleHRydWRlZEhlaWdodDpvKCJleHRydWRlZEhlaWdodCIpLGdyYW51bGFyaXR5Om8oImdyYW51bGFyaXR5Iiksc3RSb3RhdGlvbjpvKCJzdFJvdGF0aW9uIiksZmlsbDpvKCJmaWxsIiksb3V0bGluZTpvKCJvdXRsaW5lIiksb3V0bGluZUNvbG9yOm8oIm91dGxpbmVDb2xvciIpLG51bWJlck9mVmVydGljYWxMaW5lczpvKCJudW1iZXJPZlZlcnRpY2FsTGluZXMiKX0pLGEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfHwoZT1uZXcgYSksZS5yb3RhdGlvbj10aGlzLnJvdGF0aW9uLGUuc2VtaU1ham9yQXhpcz10aGlzLnNlbWlNYWpvckF4aXMsZS5zZW1pTWlub3JBeGlzPXRoaXMuc2VtaU1pbm9yQXhpcyxlLnNob3c9dGhpcy5zaG93LGUubWF0ZXJpYWw9dGhpcy5tYXRlcmlhbCxlLmhlaWdodD10aGlzLmhlaWdodCxlLmV4dHJ1ZGVkSGVpZ2h0PXRoaXMuZXh0cnVkZWRIZWlnaHQsZS5ncmFudWxhcml0eT10aGlzLmdyYW51bGFyaXR5LGUuc3RSb3RhdGlvbj10aGlzLnN0Um90YXRpb24sZS5maWxsPXRoaXMuZmlsbCxlLm91dGxpbmU9dGhpcy5vdXRsaW5lLGUub3V0bGluZUNvbG9yPXRoaXMub3V0bGluZUNvbG9yLGUubnVtYmVyT2ZWZXJ0aWNhbExpbmVzPXRoaXMubnVtYmVyT2ZWZXJ0aWNhbExpbmVzLGV9LGEucHJvdG90eXBlLm1lcmdlPWZ1bmN0aW9uKHQpe3RoaXMucm90YXRpb249ZSh0aGlzLnJvdGF0aW9uLHQucm90YXRpb24pLHRoaXMuc2VtaU1ham9yQXhpcz1lKHRoaXMuc2VtaU1ham9yQXhpcyx0LnNlbWlNYWpvckF4aXMpLHRoaXMuc2VtaU1pbm9yQXhpcz1lKHRoaXMuc2VtaU1pbm9yQXhpcyx0LnNlbWlNaW5vckF4aXMpLHRoaXMuc2hvdz1lKHRoaXMuc2hvdyx0LnNob3cpLHRoaXMubWF0ZXJpYWw9ZSh0aGlzLm1hdGVyaWFsLHQubWF0ZXJpYWwpLHRoaXMuaGVpZ2h0PWUodGhpcy5oZWlnaHQsdC5oZWlnaHQpLHRoaXMuZXh0cnVkZWRIZWlnaHQ9ZSh0aGlzLmV4dHJ1ZGVkSGVpZ2h0LHQuZXh0cnVkZWRIZWlnaHQpLHRoaXMuZ3JhbnVsYXJpdHk9ZSh0aGlzLmdyYW51bGFyaXR5LHQuZ3JhbnVsYXJpdHkpLHRoaXMuc3RSb3RhdGlvbj1lKHRoaXMuc3RSb3RhdGlvbix0LnN0Um90YXRpb24pLHRoaXMuZmlsbD1lKHRoaXMuZmlsbCx0LmZpbGwpLHRoaXMub3V0bGluZT1lKHRoaXMub3V0bGluZSx0Lm91dGxpbmUpLHRoaXMub3V0bGluZUNvbG9yPWUodGhpcy5vdXRsaW5lQ29sb3IsdC5vdXRsaW5lQ29sb3IpLHRoaXMubnVtYmVyT2ZWZXJ0aWNhbExpbmVzPWUodGhpcy5udW1iZXJPZlZlcnRpY2FsTGluZXMsdC5udW1iZXJPZlZlcnRpY2FsTGluZXMpfSxhfSksZGVmaW5lKCJEYXRhU291cmNlcy9FbGxpcHNvaWRHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fcmFkaWk9dm9pZCAwLHRoaXMuX3JhZGlpU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9tYXRlcmlhbD12b2lkIDAsdGhpcy5fbWF0ZXJpYWxTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3N0YWNrUGFydGl0aW9ucz12b2lkIDAsdGhpcy5fc3RhY2tQYXJ0aXRpb25zU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9zbGljZVBhcnRpdGlvbnM9dm9pZCAwLHRoaXMuX3NsaWNlUGFydGl0aW9uc1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc3ViZGl2aXNpb25zPXZvaWQgMCx0aGlzLl9zdWJkaXZpc2lvbnNTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyByfTtyZXR1cm4gaShhLnByb3RvdHlwZSx7ZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LHNob3c6bygic2hvdyIpLHJhZGlpOm8oInJhZGlpIiksbWF0ZXJpYWw6bygibWF0ZXJpYWwiKSxmaWxsOm8oImZpbGwiKSxvdXRsaW5lOm8oIm91dGxpbmUiKSxvdXRsaW5lQ29sb3I6bygib3V0bGluZUNvbG9yIiksc3RhY2tQYXJ0aXRpb25zOm8oInN0YWNrUGFydGl0aW9ucyIpLHNsaWNlUGFydGl0aW9uczpvKCJzbGljZVBhcnRpdGlvbnMiKSxzdWJkaXZpc2lvbnM6bygic3ViZGl2aXNpb25zIil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuc2hvdz10aGlzLnNob3csZS5yYWRpaT10aGlzLnJhZGlpLGUubWF0ZXJpYWw9dGhpcy5tYXRlcmlhbCxlLmZpbGw9dGhpcy5maWxsLGUub3V0bGluZT10aGlzLm91dGxpbmUsZS5vdXRsaW5lQ29sb3I9dGhpcy5vdXRsaW5lQ29sb3IsZS5zdGFja1BhcnRpdGlvbnM9dGhpcy5zdGFja1BhcnRpdGlvbnMsZS5zbGljZVBhcnRpdGlvbnM9dGhpcy5zbGljZVBhcnRpdGlvbnMsZS5zdWJkaXZpc2lvbnM9dGhpcy5zdWJkaXZpc2lvbnMsZX0sYS5wcm90b3R5cGUubWVyZ2U9ZnVuY3Rpb24odCl7dGhpcy5zaG93PWUodGhpcy5zaG93LHQuc2hvdyksdGhpcy5yYWRpaT1lKHRoaXMucmFkaWksdC5yYWRpaSksdGhpcy5tYXRlcmlhbD1lKHRoaXMubWF0ZXJpYWwsdC5tYXRlcmlhbCksdGhpcy5maWxsPWUodGhpcy5maWxsLHQuZmlsbCksdGhpcy5vdXRsaW5lPWUodGhpcy5vdXRsaW5lLHQub3V0bGluZSksdGhpcy5vdXRsaW5lQ29sb3I9ZSh0aGlzLm91dGxpbmVDb2xvcix0Lm91dGxpbmVDb2xvciksdGhpcy5zdGFja1BhcnRpdGlvbnM9ZSh0aGlzLnN0YWNrUGFydGl0aW9ucyx0LnN0YWNrUGFydGl0aW9ucyksdGhpcy5zbGljZVBhcnRpdGlvbnM9ZSh0aGlzLnNsaWNlUGFydGl0aW9ucyx0LnNsaWNlUGFydGl0aW9ucyksdGhpcy5zdWJkaXZpc2lvbnM9ZSh0aGlzLnN1YmRpdmlzaW9ucyx0LnN1YmRpdmlzaW9ucyl9LGF9KSxkZWZpbmUoIkNvcmUvQXNzb2NpYXRpdmVBcnJheSIsWyIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9ZnVuY3Rpb24oKXt0aGlzLl9hcnJheT1bXSx0aGlzLl9oYXNoPXt9fTtyZXR1cm4gdChpLnByb3RvdHlwZSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXkubGVuZ3RofX0sdmFsdWVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXJyYXl9fX0pLGkucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uKHQpe3JldHVybiBlKHRoaXMuX2hhc2hbdF0pfSxpLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9oYXNoW2VdO3QhPT1pJiYodGhpcy5yZW1vdmUoZSksdGhpcy5faGFzaFtlXT10LHRoaXMuX2FycmF5LnB1c2godCkpfSxpLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2hhc2hbZV19LGkucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0KXt2YXIgaT10aGlzLl9oYXNoW3RdLG49ZShpKTtpZihuKXt2YXIgcj10aGlzLl9hcnJheTtyLnNwbGljZShyLmluZGV4T2YoaSksMSksdGhpcy5faGFzaFt0XT12b2lkIDB9cmV0dXJuIG59LGkucHJvdG90eXBlLnJlbW92ZUFsbD1mdW5jdGlvbigpe3RoaXMuX2hhc2g9e30sdGhpcy5fYXJyYXkubGVuZ3RoPTB9LGl9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0VudGl0eSIsWyIuLi9Db3JlL2NyZWF0ZUd1aWQiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9ZnVuY3Rpb24odCl7aSh0KXx8KHQ9ZSgpKSx0aGlzLl9hdmFpbGFiaWxpdHk9dm9pZCAwLHRoaXMuX2lkPXQsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG8sdGhpcy5fbmFtZT12b2lkIDAsdGhpcy5fcGFyZW50PXZvaWQgMCx0aGlzLl9wcm9wZXJ0eU5hbWVzPVsiYmlsbGJvYXJkIiwiZGVzY3JpcHRpb24iLCJlbGxpcHNlIiwiZWxsaXBzb2lkIiwibGFiZWwiLCJtb2RlbCIsIm9yaWVudGF0aW9uIiwicGF0aCIsInBvaW50IiwicG9seWdvbiIsInBvbHlsaW5lIiwicG9zaXRpb24iLCJyZWN0YW5nbGUiLCJ2aWV3RnJvbSIsIndhbGwiXSx0aGlzLl9iaWxsYm9hcmQ9dm9pZCAwLHRoaXMuX2JpbGxib2FyZFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZGVzY3JpcHRpb249dm9pZCAwLHRoaXMuX2Rlc2NyaXB0aW9uU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9lbGxpcHNlPXZvaWQgMCx0aGlzLl9lbGxpcHNlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9lbGxpcHNvaWQ9dm9pZCAwLHRoaXMuX2VsbGlwc29pZFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbGFiZWw9dm9pZCAwLHRoaXMuX2xhYmVsU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9tb2RlbD12b2lkIDAsdGhpcy5fbW9kZWxTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX29yaWVudGF0aW9uPXZvaWQgMCx0aGlzLl9vcmllbnRhdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fcGF0aD12b2lkIDAsdGhpcy5fcGF0aFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fcG9pbnQ9dm9pZCAwLHRoaXMuX3BvaW50U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9wb2x5Z29uPXZvaWQgMCx0aGlzLl9wb2x5Z29uU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9wb2x5bGluZT12b2lkIDAsdGhpcy5fcG9seWxpbmVTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3Bvc2l0aW9uPXZvaWQgMCx0aGlzLl9wb3NpdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fcmVjdGFuZ2xlPXZvaWQgMCx0aGlzLl9yZWN0YW5nbGVTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3ZpZXdGcm9tPXZvaWQgMCx0aGlzLl92aWV3RnJvbVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fd2FsbD12b2lkIDAsdGhpcy5fd2FsbFN1YnNjcmlwdGlvbj12b2lkIDB9O3JldHVybiBuKHMucHJvdG90eXBlLHthdmFpbGFiaWxpdHk6YSgiYXZhaWxhYmlsaXR5IiksaWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxuYW1lOntjb25maWd1cmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX25hbWV9LHNldDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9uYW1lO3QhPT1lJiYodGhpcy5fbmFtZT1lLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcywibmFtZSIsZSx0KSl9fSxwYXJlbnQ6YSgicGFyZW50IikscHJvcGVydHlOYW1lczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb3BlcnR5TmFtZXN9fSxiaWxsYm9hcmQ6YSgiYmlsbGJvYXJkIiksZGVzY3JpcHRpb246YSgiZGVzY3JpcHRpb24iKSxlbGxpcHNlOmEoImVsbGlwc2UiKSxlbGxpcHNvaWQ6YSgiZWxsaXBzb2lkIiksbGFiZWw6YSgibGFiZWwiKSxtb2RlbDphKCJtb2RlbCIpLG9yaWVudGF0aW9uOmEoIm9yaWVudGF0aW9uIikscGF0aDphKCJwYXRoIikscG9pbnQ6YSgicG9pbnQiKSxwb2x5Z29uOmEoInBvbHlnb24iKSxwb2x5bGluZTphKCJwb2x5bGluZSIpLHBvc2l0aW9uOmEoInBvc2l0aW9uIikscmVjdGFuZ2xlOmEoInJlY3RhbmdsZSIpLHZpZXdGcm9tOmEoInZpZXdGcm9tIiksd2FsbDphKCJ3YWxsIil9KSxzLnByb3RvdHlwZS5pc0F2YWlsYWJsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9hdmFpbGFiaWxpdHk7cmV0dXJuIWkodCl8fHQuY29udGFpbnMoZSl9LHMucHJvdG90eXBlLmFkZFByb3BlcnR5PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3Byb3BlcnR5TmFtZXM7dC5wdXNoKGUpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLGUsYShlLCEwKSl9LHMucHJvdG90eXBlLnJlbW92ZVByb3BlcnR5PWZ1bmN0aW9uKGUpe3RoaXMuX3Byb3BlcnR5TmFtZXMsdGhpcy5fcHJvcGVydHlOYW1lcy5wdXNoKGUpLGRlbGV0ZSB0aGlzW2VdfSxzLnByb3RvdHlwZS5tZXJnZT1mdW5jdGlvbihlKXt0aGlzLm5hbWU9dCh0aGlzLm5hbWUsZS5uYW1lKSx0aGlzLmF2YWlsYWJpbGl0eT10KGUuYXZhaWxhYmlsaXR5LHRoaXMuYXZhaWxhYmlsaXR5KTtmb3IodmFyIG49dGhpcy5fcHJvcGVydHlOYW1lcyxyPW4ubGVuZ3RoLG89MDtyPm87bysrKXt2YXIgYT1uW29dLHM9dGhpc1thXSxsPWVbYV07aShsKSYmKGkocyk/aShzLm1lcmdlKSYmcy5tZXJnZShsKTp0aGlzW2FdPWkobC5tZXJnZSkmJmkobC5jbG9uZSk/bC5jbG9uZSgpOmwpfX0sc30pLGRlZmluZSgiRGF0YVNvdXJjZXMvRW50aXR5Q29sbGVjdGlvbiIsWyIuLi9Db3JlL0Fzc29jaWF0aXZlQXJyYXkiLCIuLi9Db3JlL2NyZWF0ZUd1aWQiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvSXNvODYwMSIsIi4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uL0NvcmUvUnVudGltZUVycm9yIiwiLi4vQ29yZS9UaW1lSW50ZXJ2YWwiLCIuL0VudGl0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoZSl7aWYoMD09PWUuX3N1c3BlbmRDb3VudCl7dmFyIHQ9ZS5fYWRkZWRFbnRpdGllcyxpPWUuX3JlbW92ZWRFbnRpdGllcyxuPWUuX2NoYW5nZWRFbnRpdGllczsoMCE9PW4ubGVuZ3RofHwwIT09dC5sZW5ndGh8fDAhPT1pLmxlbmd0aCkmJihlLl9jb2xsZWN0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KGUsdC52YWx1ZXMsaS52YWx1ZXMsbi52YWx1ZXMpLHQucmVtb3ZlQWxsKCksaS5yZW1vdmVBbGwoKSxuLnJlbW92ZUFsbCgpKX19dmFyIGg9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdGllcz1uZXcgZSx0aGlzLl9hZGRlZEVudGl0aWVzPW5ldyBlLHRoaXMuX3JlbW92ZWRFbnRpdGllcz1uZXcgZSx0aGlzLl9jaGFuZ2VkRW50aXRpZXM9bmV3IGUsdGhpcy5fc3VzcGVuZENvdW50PTAsdGhpcy5fY29sbGVjdGlvbkNoYW5nZWQ9bmV3IG8sdGhpcy5faWQ9dCgpfTtyZXR1cm4gaC5wcm90b3R5cGUuc3VzcGVuZEV2ZW50cz1mdW5jdGlvbigpe3RoaXMuX3N1c3BlbmRDb3VudCsrfSxoLnByb3RvdHlwZS5yZXN1bWVFdmVudHM9ZnVuY3Rpb24oKXt0aGlzLl9zdXNwZW5kQ291bnQtLSxkKHRoaXMpfSxoLmNvbGxlY3Rpb25DaGFuZ2VkRXZlbnRDYWxsYmFjaz12b2lkIDAsbihoLnByb3RvdHlwZSx7Y29sbGVjdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb2xsZWN0aW9uQ2hhbmdlZH19LGlkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faWR9fSxlbnRpdGllczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VudGl0aWVzLnZhbHVlc319fSksaC5wcm90b3R5cGUuY29tcHV0ZUF2YWlsYWJpbGl0eT1mdW5jdGlvbigpe2Zvcih2YXIgZT1hLk1BWElNVU1fVkFMVUUsdD1hLk1JTklNVU1fVkFMVUUsbj10aGlzLl9lbnRpdGllcy52YWx1ZXMscj0wLG89bi5sZW5ndGg7bz5yO3IrKyl7dmFyIGw9bltyXSxjPWwuYXZhaWxhYmlsaXR5O2lmKGkoYykpe3ZhciBkPWMuc3RhcnQsaD1jLnN0b3A7cy5sZXNzVGhhbihkLGUpJiYhZC5lcXVhbHMoYS5NSU5JTVVNX1ZBTFVFKSYmKGU9ZCkscy5ncmVhdGVyVGhhbihoLHQpJiYhaC5lcXVhbHMoYS5NQVhJTVVNX1ZBTFVFKSYmKHQ9aCl9fXJldHVybiBhLk1BWElNVU1fVkFMVUUuZXF1YWxzKGUpJiYoZT1hLk1JTklNVU1fVkFMVUUpLGEuTUlOSU1VTV9WQUxVRS5lcXVhbHModCkmJih0PWEuTUFYSU1VTV9WQUxVRSksbmV3IHUoe3N0YXJ0OmUsc3RvcDp0fSl9LGgucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlKXt2YXIgdD1lLmlkLGk9dGhpcy5fZW50aXRpZXM7aWYoaS5jb250YWlucyh0KSl0aHJvdyBuZXcgbCgiQW4gZW50aXR5IHdpdGggaWQgIit0KyIgYWxyZWFkeSBleGlzdHMgaW4gdGhpcyBjb2xsZWN0aW9uLiIpO2kuc2V0KHQsZSksdGhpcy5fcmVtb3ZlZEVudGl0aWVzLHRoaXMuX3JlbW92ZWRFbnRpdGllcy5yZW1vdmUodCl8fHRoaXMuX2FkZGVkRW50aXRpZXMuc2V0KHQsZSksZS5kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKGgucHJvdG90eXBlLl9vbkVudGl0eURlZmluaXRpb25DaGFuZ2VkLHRoaXMpLGQodGhpcyl9LGgucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZW1vdmVCeUlkKGUuaWQpfSxoLnByb3RvdHlwZS5yZW1vdmVCeUlkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VudGl0aWVzLGk9dC5nZXQoZSk7cmV0dXJuIHRoaXMuX2VudGl0aWVzLnJlbW92ZShlKT8odGhpcy5fYWRkZWRFbnRpdGllcy5yZW1vdmUoZSl8fCh0aGlzLl9yZW1vdmVkRW50aXRpZXMuc2V0KGUsaSksdGhpcy5fY2hhbmdlZEVudGl0aWVzLnJlbW92ZShlKSksdGhpcy5fZW50aXRpZXMucmVtb3ZlKGUpLGkuZGVmaW5pdGlvbkNoYW5nZWQucmVtb3ZlRXZlbnRMaXN0ZW5lcihoLnByb3RvdHlwZS5fb25FbnRpdHlEZWZpbml0aW9uQ2hhbmdlZCx0aGlzKSxkKHRoaXMpLCEwKTohMX0saC5wcm90b3R5cGUucmVtb3ZlQWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuX2VudGl0aWVzLHQ9ZS5sZW5ndGgsbj1lLnZhbHVlcyxyPXRoaXMuX2FkZGVkRW50aXRpZXMsbz10aGlzLl9yZW1vdmVkRW50aXRpZXMsYT0wO3Q+YTthKyspe3ZhciBzPW5bYV0sbD1zLmlkLHU9ci5nZXQobCk7aSh1KXx8KHMuZGVmaW5pdGlvbkNoYW5nZWQucmVtb3ZlRXZlbnRMaXN0ZW5lcihoLnByb3RvdHlwZS5fb25FbnRpdHlEZWZpbml0aW9uQ2hhbmdlZCx0aGlzKSxvLnNldChsLHMpKX1lLnJlbW92ZUFsbCgpLHIucmVtb3ZlQWxsKCksdGhpcy5fY2hhbmdlZEVudGl0aWVzLnJlbW92ZUFsbCgpLGQodGhpcyl9LGgucHJvdG90eXBlLmdldEJ5SWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2VudGl0aWVzLmdldChlKX0saC5wcm90b3R5cGUuZ2V0T3JDcmVhdGVFbnRpdHk9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZW50aXRpZXMuZ2V0KGUpO3JldHVybiBpKHQpfHwodD1uZXcgYyhlKSx0aGlzLmFkZCh0KSksdH0saC5wcm90b3R5cGUuX29uRW50aXR5RGVmaW5pdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pZDt0aGlzLl9hZGRlZEVudGl0aWVzLmNvbnRhaW5zKHQpfHx0aGlzLl9jaGFuZ2VkRW50aXRpZXMuc2V0KHQsZSksZCh0aGlzKX0saH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvR3JpZE1hdGVyaWFsUHJvcGVydHkiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRXZlbnQiLCIuL2NyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciIsIi4vUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9dC5XSElURSxsPS4xLHU9bmV3IGUoOCw4KSxjPW5ldyBlKDAsMCksZD1uZXcgZSgxLDEpLGg9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcix0aGlzLl9jb2xvcj12b2lkIDAsdGhpcy5fY29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2NlbGxBbHBoYT12b2lkIDAsdGhpcy5fY2VsbEFscGhhU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9saW5lQ291bnQ9dm9pZCAwLHRoaXMuX2xpbmVDb3VudFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbGluZVRoaWNrbmVzcz12b2lkIDAsdGhpcy5fbGluZVRoaWNrbmVzc1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbGluZU9mZnNldD12b2lkIDAsdGhpcy5fbGluZU9mZnNldFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5jb2xvcj12b2lkIDAsdGhpcy5jZWxsQWxwaGE9dm9pZCAwLHRoaXMubGluZUNvdW50PXZvaWQgMCx0aGlzLmxpbmVUaGlja25lc3M9dm9pZCAwLHRoaXMubGluZU9mZnNldD12b2lkIDB9O3JldHVybiBuKGgucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYS5pc0NvbnN0YW50KHRoaXMuX2NvbG9yKSYmYS5pc0NvbnN0YW50KHRoaXMuX2NlbGxBbHBoYSkmJmEuaXNDb25zdGFudCh0aGlzLl9saW5lQ291bnQpJiZhLmlzQ29uc3RhbnQodGhpcy5fbGluZVRoaWNrbmVzcykmJmEuaXNDb25zdGFudCh0aGlzLl9saW5lT2Zmc2V0KX19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxjb2xvcjpvKCJjb2xvciIpLGNlbGxBbHBoYTpvKCJjZWxsQWxwaGEiKSxsaW5lQ291bnQ6bygibGluZUNvdW50IiksbGluZVRoaWNrbmVzczpvKCJsaW5lVGhpY2tuZXNzIiksbGluZU9mZnNldDpvKCJsaW5lT2Zmc2V0Iil9KSxoLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIkdyaWQifSxoLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpfHwodD17fSksdC5jb2xvcj1hLmdldFZhbHVlT3JDbG9uZWREZWZhdWx0KHRoaXMuX2NvbG9yLGUscyx0LmNvbG9yKSx0LmNlbGxBbHBoYT1hLmdldFZhbHVlT3JEZWZhdWx0KHRoaXMuX2NlbGxBbHBoYSxlLGwpLHQubGluZUNvdW50PWEuZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fbGluZUNvdW50LGUsdSx0LmxpbmVDb3VudCksdC5saW5lVGhpY2tuZXNzPWEuZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fbGluZVRoaWNrbmVzcyxlLGQsdC5saW5lVGhpY2tuZXNzKSx0LmxpbmVPZmZzZXQ9YS5nZXRWYWx1ZU9yQ2xvbmVkRGVmYXVsdCh0aGlzLl9saW5lT2Zmc2V0LGUsYyx0LmxpbmVPZmZzZXQpLHR9LGgucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcz09PWV8fGUgaW5zdGFuY2VvZiBoJiZhLmVxdWFscyh0aGlzLl9jb2xvcixlLl9jb2xvcikmJmEuZXF1YWxzKHRoaXMuX2NlbGxBbHBoYSxlLl9jZWxsQWxwaGEpJiZhLmVxdWFscyh0aGlzLl9saW5lQ291bnQsZS5fbGluZUNvdW50KSYmYS5lcXVhbHModGhpcy5fbGluZVRoaWNrbmVzcyxlLl9saW5lVGhpY2tuZXNzKSYmYS5lcXVhbHModGhpcy5fbGluZU9mZnNldCxlLl9saW5lT2Zmc2V0KX0saC5wcm90b3R5cGUuX3JhaXNlRGVmaW5pdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSxofSksZGVmaW5lKCJEYXRhU291cmNlcy9JbWFnZU1hdGVyaWFsUHJvcGVydHkiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9FdmVudCIsIi4vY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9bmV3IGUoMSwxKSxzPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG4sdGhpcy5faW1hZ2U9dm9pZCAwLHRoaXMuX2ltYWdlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9yZXBlYXQ9dm9pZCAwLHRoaXMuX3JlcGVhdFN1YnNjcmlwdGlvbj12b2lkIDB9O3JldHVybiBpKHMucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gby5pc0NvbnN0YW50KHRoaXMuX2ltYWdlKSYmby5pc0NvbnN0YW50KHRoaXMuX3JlcGVhdCl9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0saW1hZ2U6cigiaW1hZ2UiKSxyZXBlYXQ6cigicmVwZWF0Iil9KSxzLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIkltYWdlIn0scy5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdChpKXx8KGk9e30pLGkuaW1hZ2U9by5nZXRWYWx1ZU9yVW5kZWZpbmVkKHRoaXMuX2ltYWdlLGUpLGkucmVwZWF0PW8uZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fcmVwZWF0LGUsYSxpLnJlcGVhdCksaX0scy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzPT09ZXx8ZSBpbnN0YW5jZW9mIHMmJm8uZXF1YWxzKHRoaXMuX2ltYWdlLGUuX2ltYWdlKSYmby5lcXVhbHModGhpcy5fcmVwZWF0LGUuX3JlcGVhdCl9LHMucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sc30pLGRlZmluZSgiRGF0YVNvdXJjZXMvTGFiZWxHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fdGV4dD12b2lkIDAsdGhpcy5fdGV4dFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZm9udD12b2lkIDAsdGhpcy5fZm9udFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc3R5bGU9dm9pZCAwLHRoaXMuX3N0eWxlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9maWxsQ29sb3I9dm9pZCAwLHRoaXMuX2ZpbGxDb2xvclN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fb3V0bGluZUNvbG9yPXZvaWQgMCx0aGlzLl9vdXRsaW5lQ29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX291dGxpbmVXaWR0aD12b2lkIDAsdGhpcy5fb3V0bGluZVdpZHRoU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9ob3Jpem9udGFsT3JpZ2luPXZvaWQgMCx0aGlzLl9ob3Jpem9udGFsT3JpZ2luU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl92ZXJ0aWNhbE9yaWdpbj12b2lkIDAsdGhpcy5fdmVydGljYWxPcmlnaW5TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2V5ZU9mZnNldD12b2lkIDAsdGhpcy5fZXllT2Zmc2V0U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9waXhlbE9mZnNldD12b2lkIDAsdGhpcy5fcGl4ZWxPZmZzZXRTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3NjYWxlPXZvaWQgMCx0aGlzLl9zY2FsZVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZT12b2lkIDAsdGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U9dm9pZCAwLHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcn07cmV0dXJuIGkoYS5wcm90b3R5cGUse2RlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSx0ZXh0Om8oInRleHQiKSxmb250Om8oImZvbnQiKSxzdHlsZTpvKCJzdHlsZSIpLGZpbGxDb2xvcjpvKCJmaWxsQ29sb3IiKSxvdXRsaW5lQ29sb3I6bygib3V0bGluZUNvbG9yIiksb3V0bGluZVdpZHRoOm8oIm91dGxpbmVXaWR0aCIpLGhvcml6b250YWxPcmlnaW46bygiaG9yaXpvbnRhbE9yaWdpbiIpLHZlcnRpY2FsT3JpZ2luOm8oInZlcnRpY2FsT3JpZ2luIiksZXllT2Zmc2V0Om8oImV5ZU9mZnNldCIpLHBpeGVsT2Zmc2V0Om8oInBpeGVsT2Zmc2V0Iiksc2NhbGU6bygic2NhbGUiKSxzaG93Om8oInNob3ciKSx0cmFuc2x1Y2VuY3lCeURpc3RhbmNlOm8oInRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UiKSxwaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZTpvKCJwaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSIpfSksYS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl8fChlPW5ldyBhKSxlLnRleHQ9dGhpcy50ZXh0LGUuZm9udD10aGlzLmZvbnQsZS5zaG93PXRoaXMuc2hvdyxlLnN0eWxlPXRoaXMuc3R5bGUsZS5maWxsQ29sb3I9dGhpcy5maWxsQ29sb3IsZS5vdXRsaW5lQ29sb3I9dGhpcy5vdXRsaW5lQ29sb3IsZS5vdXRsaW5lV2lkdGg9dGhpcy5vdXRsaW5lV2lkdGgsZS5zY2FsZT10aGlzLnNjYWxlLGUuaG9yaXpvbnRhbE9yaWdpbj10aGlzLmhvcml6b250YWxPcmlnaW4sZS52ZXJ0aWNhbE9yaWdpbj10aGlzLnZlcnRpY2FsT3JpZ2luLGUuZXllT2Zmc2V0PXRoaXMuZXllT2Zmc2V0LGUucGl4ZWxPZmZzZXQ9dGhpcy5waXhlbE9mZnNldCxlLnRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9dGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZSxlLnBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPXRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlLGV9LGEucHJvdG90eXBlLm1lcmdlPWZ1bmN0aW9uKHQpe3RoaXMudGV4dD1lKHRoaXMudGV4dCx0LnRleHQpLHRoaXMuZm9udD1lKHRoaXMuZm9udCx0LmZvbnQpLHRoaXMuc2hvdz1lKHRoaXMuc2hvdyx0LnNob3cpLHRoaXMuc3R5bGU9ZSh0aGlzLnN0eWxlLHQuc3R5bGUpLHRoaXMuZmlsbENvbG9yPWUodGhpcy5maWxsQ29sb3IsdC5maWxsQ29sb3IpLHRoaXMub3V0bGluZUNvbG9yPWUodGhpcy5vdXRsaW5lQ29sb3IsdC5vdXRsaW5lQ29sb3IpLHRoaXMub3V0bGluZVdpZHRoPWUodGhpcy5vdXRsaW5lV2lkdGgsdC5vdXRsaW5lV2lkdGgpLHRoaXMuc2NhbGU9ZSh0aGlzLnNjYWxlLHQuc2NhbGUpLHRoaXMuaG9yaXpvbnRhbE9yaWdpbj1lKHRoaXMuaG9yaXpvbnRhbE9yaWdpbix0Lmhvcml6b250YWxPcmlnaW4pLHRoaXMudmVydGljYWxPcmlnaW49ZSh0aGlzLnZlcnRpY2FsT3JpZ2luLHQudmVydGljYWxPcmlnaW4pLHRoaXMuZXllT2Zmc2V0PWUodGhpcy5leWVPZmZzZXQsdC5leWVPZmZzZXQpLHRoaXMucGl4ZWxPZmZzZXQ9ZSh0aGlzLnBpeGVsT2Zmc2V0LHQucGl4ZWxPZmZzZXQpLHRoaXMudHJhbnNsdWNlbmN5QnlEaXN0YW5jZT1lKHRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2UsdC5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZSksdGhpcy5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZT1lKHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlLHQuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlKX0sYX0pLGRlZmluZSgiRGF0YVNvdXJjZXMvTW9kZWxHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fc2NhbGU9dm9pZCAwLHRoaXMuX3NjYWxlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9taW5pbXVtUGl4ZWxTaXplPXZvaWQgMCx0aGlzLl9taW5pbXVtUGl4ZWxTaXplU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl91cmk9dm9pZCAwLHRoaXMuX3VyaVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IHJ9O3JldHVybiBpKGEucHJvdG90eXBlLHtkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0sc2hvdzpvKCJzaG93Iiksc2NhbGU6bygic2NhbGUiKSxtaW5pbXVtUGl4ZWxTaXplOm8oIm1pbmltdW1QaXhlbFNpemUiKSx1cmk6bygidXJpIil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuc2hvdz10aGlzLnNob3csZS5zY2FsZT10aGlzLnNjYWxlLGUubWluaW11bVBpeGVsU2l6ZT10aGlzLm1pbmltdW1QaXhlbFNpemUsZS51cmk9dGhpcy51cmksZX0sYS5wcm90b3R5cGUubWVyZ2U9ZnVuY3Rpb24odCl7dGhpcy5zaG93PWUodGhpcy5zaG93LHQuc2hvdyksdGhpcy5zY2FsZT1lKHRoaXMuc2NhbGUsdC5zY2FsZSksdGhpcy5taW5pbXVtUGl4ZWxTaXplPWUodGhpcy5taW5pbXVtUGl4ZWxTaXplLHQubWluaW11bVBpeGVsU2l6ZSksdGhpcy51cmk9ZSh0aGlzLnVyaSx0LnVyaSl9LGF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1BhdGhHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fbWF0ZXJpYWw9dm9pZCAwLHRoaXMuX21hdGVyaWFsU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9zaG93PXZvaWQgMCx0aGlzLl9zaG93U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl93aWR0aD12b2lkIDAsdGhpcy5fd2lkdGhTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3Jlc29sdXRpb249dm9pZCAwLHRoaXMuX3Jlc29sdXRpb25TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2xlYWRUaW1lPXZvaWQgMCx0aGlzLl9sZWFkVGltZVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fdHJhaWxUaW1lPXZvaWQgMCx0aGlzLl90cmFpbFRpbWVTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyByfTtyZXR1cm4gaShhLnByb3RvdHlwZSx7ZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LG1hdGVyaWFsOm8oIm1hdGVyaWFsIiksc2hvdzpvKCJzaG93Iiksd2lkdGg6bygid2lkdGgiKSxyZXNvbHV0aW9uOm8oInJlc29sdXRpb24iKSxsZWFkVGltZTpvKCJsZWFkVGltZSIpLHRyYWlsVGltZTpvKCJ0cmFpbFRpbWUiKX0pLGEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfHwoZT1uZXcgYSksZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsLGUud2lkdGg9dGhpcy53aWR0aCxlLnJlc29sdXRpb249dGhpcy5yZXNvbHV0aW9uLGUuc2hvdz10aGlzLnNob3csZS5sZWFkVGltZT10aGlzLmxlYWRUaW1lLGUudHJhaWxUaW1lPXRoaXMudHJhaWxUaW1lLGV9LGEucHJvdG90eXBlLm1lcmdlPWZ1bmN0aW9uKHQpe3RoaXMubWF0ZXJpYWw9ZSh0aGlzLm1hdGVyaWFsLHQubWF0ZXJpYWwpLHRoaXMud2lkdGg9ZSh0aGlzLndpZHRoLHQud2lkdGgpLHRoaXMucmVzb2x1dGlvbj1lKHRoaXMucmVzb2x1dGlvbix0LnJlc29sdXRpb24pLHRoaXMuc2hvdz1lKHRoaXMuc2hvdyx0LnNob3cpLHRoaXMubGVhZFRpbWU9ZSh0aGlzLmxlYWRUaW1lLHQubGVhZFRpbWUpLHRoaXMudHJhaWxUaW1lPWUodGhpcy50cmFpbFRpbWUsdC50cmFpbFRpbWUpfSxhfSksZGVmaW5lKCJEYXRhU291cmNlcy9Qb2ludEdyYXBoaWNzIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuL2NyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9ZnVuY3Rpb24oKXt0aGlzLl9jb2xvcj12b2lkIDAsdGhpcy5fY29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3BpeGVsU2l6ZT12b2lkIDAsdGhpcy5fcGl4ZWxTaXplU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9vdXRsaW5lQ29sb3I9dm9pZCAwLHRoaXMuX291dGxpbmVDb2xvclN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fb3V0bGluZVdpZHRoPXZvaWQgMCx0aGlzLl9vdXRsaW5lV2lkdGhTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3Nob3c9dm9pZCAwLHRoaXMuX3Nob3dTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3NjYWxlQnlEaXN0YW5jZT12b2lkIDAsdGhpcy5fc2NhbGVCeURpc3RhbmNlU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcn07cmV0dXJuIGkoYS5wcm90b3R5cGUse2RlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxjb2xvcjpvKCJjb2xvciIpLHBpeGVsU2l6ZTpvKCJwaXhlbFNpemUiKSxvdXRsaW5lQ29sb3I6bygib3V0bGluZUNvbG9yIiksb3V0bGluZVdpZHRoOm8oIm91dGxpbmVXaWR0aCIpLHNob3c6bygic2hvdyIpLHNjYWxlQnlEaXN0YW5jZTpvKCJzY2FsZUJ5RGlzdGFuY2UiKX0pLGEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfHwoZT1uZXcgYSksZS5jb2xvcj10aGlzLmNvbG9yLGUucGl4ZWxTaXplPXRoaXMucGl4ZWxTaXplLGUub3V0bGluZUNvbG9yPXRoaXMub3V0bGluZUNvbG9yLGUub3V0bGluZVdpZHRoPXRoaXMub3V0bGluZVdpZHRoLGUuc2hvdz10aGlzLnNob3csZS5zY2FsZUJ5RGlzdGFuY2U9dGhpcy5zY2FsZUJ5RGlzdGFuY2UsZX0sYS5wcm90b3R5cGUubWVyZ2U9ZnVuY3Rpb24odCl7dGhpcy5jb2xvcj1lKHRoaXMuY29sb3IsdC5jb2xvciksdGhpcy5waXhlbFNpemU9ZSh0aGlzLnBpeGVsU2l6ZSx0LnBpeGVsU2l6ZSksdGhpcy5vdXRsaW5lQ29sb3I9ZSh0aGlzLm91dGxpbmVDb2xvcix0Lm91dGxpbmVDb2xvciksdGhpcy5vdXRsaW5lV2lkdGg9ZSh0aGlzLm91dGxpbmVXaWR0aCx0Lm91dGxpbmVXaWR0aCksdGhpcy5zaG93PWUodGhpcy5zaG93LHQuc2hvdyksdGhpcy5zY2FsZUJ5RGlzdGFuY2U9ZSh0aGlzLnNjYWxlQnlEaXN0YW5jZSx0LnNjYWxlQnlEaXN0YW5jZSl9LGF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1BvbHlnb25HcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbWF0ZXJpYWw9dm9pZCAwLHRoaXMuX21hdGVyaWFsU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9wb3NpdGlvbnM9dm9pZCAwLHRoaXMuX3Bvc2l0aW9uc1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5faGVpZ2h0PXZvaWQgMCx0aGlzLl9oZWlnaHRTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2V4dHJ1ZGVkSGVpZ2h0PXZvaWQgMCx0aGlzLl9leHRydWRlZEhlaWdodFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZ3JhbnVsYXJpdHk9dm9pZCAwLHRoaXMuX2dyYW51bGFyaXR5U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9zdFJvdGF0aW9uPXZvaWQgMCx0aGlzLl9zdFJvdGF0aW9uU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9wZXJQb3NpdGlvbkhlaWdodD12b2lkIDAsdGhpcy5fcGVyUG9zaXRpb25IZWlnaHRTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyByfTtyZXR1cm4gaShhLnByb3RvdHlwZSx7ZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LHNob3c6bygic2hvdyIpLG1hdGVyaWFsOm8oIm1hdGVyaWFsIikscG9zaXRpb25zOm8oInBvc2l0aW9ucyIpLGhlaWdodDpvKCJoZWlnaHQiKSxleHRydWRlZEhlaWdodDpvKCJleHRydWRlZEhlaWdodCIpLGdyYW51bGFyaXR5Om8oImdyYW51bGFyaXR5Iiksc3RSb3RhdGlvbjpvKCJzdFJvdGF0aW9uIiksZmlsbDpvKCJmaWxsIiksb3V0bGluZTpvKCJvdXRsaW5lIiksb3V0bGluZUNvbG9yOm8oIm91dGxpbmVDb2xvciIpLHBlclBvc2l0aW9uSGVpZ2h0Om8oInBlclBvc2l0aW9uSGVpZ2h0Iil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuc2hvdz10aGlzLnNob3csZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsLGUucG9zaXRpb25zPXRoaXMucG9zaXRpb25zLGUuaGVpZ2h0PXRoaXMuaGVpZ2h0LGUuZXh0cnVkZWRIZWlnaHQ9dGhpcy5leHRydWRlZEhlaWdodCxlLmdyYW51bGFyaXR5PXRoaXMuZ3JhbnVsYXJpdHksZS5zdFJvdGF0aW9uPXRoaXMuc3RSb3RhdGlvbixlLmZpbGw9dGhpcy5maWxsLGUub3V0bGluZT10aGlzLm91dGxpbmUsZS5vdXRsaW5lQ29sb3I9dGhpcy5vdXRsaW5lQ29sb3IsZS5wZXJQb3NpdGlvbkhlaWdodD10aGlzLnBlclBvc2l0aW9uSGVpZ2h0LGV9LGEucHJvdG90eXBlLm1lcmdlPWZ1bmN0aW9uKHQpe3RoaXMuc2hvdz1lKHRoaXMuc2hvdyx0LnNob3cpLHRoaXMubWF0ZXJpYWw9ZSh0aGlzLm1hdGVyaWFsLHQubWF0ZXJpYWwpLHRoaXMucG9zaXRpb25zPWUodGhpcy5wb3NpdGlvbnMsdC5wb3NpdGlvbnMpLHRoaXMuaGVpZ2h0PWUodGhpcy5oZWlnaHQsdC5oZWlnaHQpLHRoaXMuZXh0cnVkZWRIZWlnaHQ9ZSh0aGlzLmV4dHJ1ZGVkSGVpZ2h0LHQuZXh0cnVkZWRIZWlnaHQpLHRoaXMuZ3JhbnVsYXJpdHk9ZSh0aGlzLmdyYW51bGFyaXR5LHQuZ3JhbnVsYXJpdHkpLHRoaXMuc3RSb3RhdGlvbj1lKHRoaXMuc3RSb3RhdGlvbix0LnN0Um90YXRpb24pLHRoaXMuZmlsbD1lKHRoaXMuZmlsbCx0LmZpbGwpLHRoaXMub3V0bGluZT1lKHRoaXMub3V0bGluZSx0Lm91dGxpbmUpLHRoaXMub3V0bGluZUNvbG9yPWUodGhpcy5vdXRsaW5lQ29sb3IsdC5vdXRsaW5lQ29sb3IpLHRoaXMucGVyUG9zaXRpb25IZWlnaHQ9ZSh0aGlzLnBlclBvc2l0aW9uSGVpZ2h0LHQucGVyUG9zaXRpb25IZWlnaHQpfSxhfSksZGVmaW5lKCJEYXRhU291cmNlcy9Qb2x5bGluZUdsb3dNYXRlcmlhbFByb3BlcnR5IixbIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgYT1lLldISVRFLHM9LjI1LGw9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgbix0aGlzLl9jb2xvcj12b2lkIDAsdGhpcy5fY29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2dsb3dQb3dlcj12b2lkIDAsdGhpcy5fZ2xvd1Bvd2VyU3Vic2NyaXB0aW9uPXZvaWQgMH07cmV0dXJuIGkobC5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiBvLmlzQ29uc3RhbnQodGhpcy5fY29sb3IpJiZvLmlzQ29uc3RhbnQodGhpcy5fZ2xvdyl9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0sY29sb3I6cigiY29sb3IiKSxnbG93UG93ZXI6cigiZ2xvd1Bvd2VyIil9KSxsLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIlBvbHlsaW5lR2xvdyJ9LGwucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHQoaSl8fChpPXt9KSxpLmNvbG9yPW8uZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fY29sb3IsZSxhLGkuY29sb3IpLGkuZ2xvd1Bvd2VyPW8uZ2V0VmFsdWVPckRlZmF1bHQodGhpcy5fZ2xvd1Bvd2VyLGUscyxpLmdsb3dQb3dlciksaX0sbC5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzPT09ZXx8ZSBpbnN0YW5jZW9mIGwmJm8uZXF1YWxzKHRoaXMuX2NvbG9yLGUuX2NvbG9yKSYmby5lcXVhbHModGhpcy5fZ2xvd1Bvd2VyLGUuX2dsb3dQb3dlcil9LGwucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sbH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvUG9seWxpbmVHcmFwaGljcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi9jcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fc2hvdz12b2lkIDAsdGhpcy5fc2hvd1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fbWF0ZXJpYWw9dm9pZCAwLHRoaXMuX21hdGVyaWFsU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9wb3NpdGlvbnM9dm9pZCAwLHRoaXMuX3Bvc2l0aW9uc1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZm9sbG93U3VyZmFjZT12b2lkIDAsdGhpcy5fZm9sbG93U3VyZmFjZVN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZ3JhbnVsYXJpdHk9dm9pZCAwLHRoaXMuX2dyYW51bGFyaXR5U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl93aWR0aFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fd2lkdGg9dm9pZCAwLHRoaXMuX3dpZHRoU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcn07cmV0dXJuIGkoYS5wcm90b3R5cGUse2RlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxzaG93Om8oInNob3ciKSxtYXRlcmlhbDpvKCJtYXRlcmlhbCIpLHBvc2l0aW9uczpvKCJwb3NpdGlvbnMiKSx3aWR0aDpvKCJ3aWR0aCIpLGZvbGxvd1N1cmZhY2U6bygiZm9sbG93U3VyZmFjZSIpLGdyYW51bGFyaXR5Om8oImdyYW51bGFyaXR5Iil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuc2hvdz10aGlzLnNob3csZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsLGUucG9zaXRpb25zPXRoaXMucG9zaXRpb25zLGUud2lkdGg9dGhpcy53aWR0aCxlLmZvbGxvd1N1cmZhY2U9dGhpcy5mb2xsb3dTdXJmYWNlLGUuZ3JhbnVsYXJpdHk9dGhpcy5ncmFudWxhcml0eSxlfSxhLnByb3RvdHlwZS5tZXJnZT1mdW5jdGlvbih0KXt0aGlzLnNob3c9ZSh0aGlzLnNob3csdC5zaG93KSx0aGlzLm1hdGVyaWFsPWUodGhpcy5tYXRlcmlhbCx0Lm1hdGVyaWFsKSx0aGlzLnBvc2l0aW9ucz1lKHRoaXMucG9zaXRpb25zLHQucG9zaXRpb25zKSx0aGlzLndpZHRoPWUodGhpcy53aWR0aCx0LndpZHRoKSx0aGlzLmZvbGxvd1N1cmZhY2U9ZSh0aGlzLmZvbGxvd1N1cmZhY2UsdC5mb2xsb3dTdXJmYWNlKSx0aGlzLmdyYW51bGFyaXR5PWUodGhpcy5ncmFudWxhcml0eSx0LmdyYW51bGFyaXR5KX0sYX0pLGRlZmluZSgiRGF0YVNvdXJjZXMvUG9seWxpbmVPdXRsaW5lTWF0ZXJpYWxQcm9wZXJ0eSIsWyIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9FdmVudCIsIi4vY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9ZS5XSElURSxzPWUuQkxBQ0ssbD0wLHU9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgbix0aGlzLl9jb2xvcj12b2lkIDAsdGhpcy5fY29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX291dGxpbmVDb2xvcj12b2lkIDAsdGhpcy5fb3V0bGluZUNvbG9yU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9vdXRsaW5lV2lkdGg9dm9pZCAwLHRoaXMuX291dGxpbmVXaWR0aFN1YnNjcmlwdGlvbj12b2lkIDB9O3JldHVybiBpKHUucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gby5pc0NvbnN0YW50KHRoaXMuX2NvbG9yKSYmby5pc0NvbnN0YW50KHRoaXMuX291dGxpbmVDb2xvcikmJm8uaXNDb25zdGFudCh0aGlzLl9vdXRsaW5lV2lkdGgpfX0sZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LGNvbG9yOnIoImNvbG9yIiksb3V0bGluZUNvbG9yOnIoIm91dGxpbmVDb2xvciIpLG91dGxpbmVXaWR0aDpyKCJvdXRsaW5lV2lkdGgiKX0pLHUucHJvdG90eXBlLmdldFR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4iUG9seWxpbmVPdXRsaW5lIn0sdS5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdChpKXx8KGk9e30pLGkuY29sb3I9by5nZXRWYWx1ZU9yQ2xvbmVkRGVmYXVsdCh0aGlzLl9jb2xvcixlLGEsaS5jb2xvciksaS5vdXRsaW5lQ29sb3I9by5nZXRWYWx1ZU9yQ2xvbmVkRGVmYXVsdCh0aGlzLl9vdXRsaW5lQ29sb3IsZSxzLGkub3V0bGluZUNvbG9yKSxpLm91dGxpbmVXaWR0aD1vLmdldFZhbHVlT3JEZWZhdWx0KHRoaXMuX291dGxpbmVXaWR0aCxlLGwpLGl9LHUucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcz09PWV8fGUgaW5zdGFuY2VvZiB1JiZvLmVxdWFscyh0aGlzLl9jb2xvcixlLl9jb2xvcikmJm8uZXF1YWxzKHRoaXMuX291dGxpbmVDb2xvcixlLl9vdXRsaW5lQ29sb3IpJiZvLmVxdWFscyh0aGlzLl9vdXRsaW5lV2lkdGgsZS5fb3V0bGluZVdpZHRoKX0sdS5wcm90b3R5cGUuX3JhaXNlRGVmaW5pdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSx1fSksZGVmaW5lKCJEYXRhU291cmNlcy9Qb3NpdGlvblByb3BlcnR5QXJyYXkiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvRXZlbnRIZWxwZXIiLCIuLi9Db3JlL1JlZmVyZW5jZUZyYW1lIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO3ZhciBsPWZ1bmN0aW9uKHQsaSl7dGhpcy5fdmFsdWU9dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyByLHRoaXMuX2V2ZW50SGVscGVyPW5ldyBvLHRoaXMuX3JlZmVyZW5jZUZyYW1lPWUoaSxhLkZJWEVEKSx0aGlzLnNldFZhbHVlKHQpfTtyZXR1cm4gaShsLnByb3RvdHlwZSx7aXNDb25zdGFudDp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdmFsdWU7aWYoIXQoZSkpcmV0dXJuITA7Zm9yKHZhciBpPWUubGVuZ3RoLG49MDtpPm47bisrKWlmKCFzLmlzQ29uc3RhbnQoZVtuXSkpcmV0dXJuITE7cmV0dXJuITB9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0scmVmZXJlbmNlRnJhbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWZlcmVuY2VGcmFtZX19fSksbC5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUoZSxhLkZJWEVELHQpfSxsLnByb3RvdHlwZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWU9ZnVuY3Rpb24oZSxpLG4pe3ZhciByPXRoaXMuX3ZhbHVlO2lmKCF0KHIpKXJldHVybiB2b2lkIDA7dmFyIG89ci5sZW5ndGg7dChuKXx8KG49bmV3IEFycmF5KG8pKTtmb3IodmFyIGE9MCxzPTA7bz5hOyl7dmFyIGw9clthXSx1PWwuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKGUsaSxuW2FdKTt0KHUpJiYobltzXT11LHMrKyksYSsrfXJldHVybiBuLmxlbmd0aD1zLG59LGwucHJvdG90eXBlLnNldFZhbHVlPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2V2ZW50SGVscGVyO2lmKGkucmVtb3ZlQWxsKCksdChlKSl7dGhpcy5fdmFsdWU9ZS5zbGljZSgpO2Zvcih2YXIgbj1lLmxlbmd0aCxyPTA7bj5yO3IrKyl7dmFyIG89ZVtyXTt0KG8pJiZpLmFkZChvLmRlZmluaXRpb25DaGFuZ2VkLGwucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkLHRoaXMpfX1lbHNlIHRoaXMuX3ZhbHVlPXZvaWQgMDt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSxsLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxlIGluc3RhbmNlb2YgbCYmdGhpcy5fcmVmZXJlbmNlRnJhbWU9PT1lLl9yZWZlcmVuY2VGcmFtZSYmcy5hcnJheUVxdWFscyh0aGlzLl92YWx1ZSxlLl92YWx1ZSl9LGwucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sbH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvUmVjdGFuZ2xlR3JhcGhpY3MiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4vY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgYT1mdW5jdGlvbigpe3RoaXMuX3Nob3c9dm9pZCAwLHRoaXMuX3Nob3dTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX21hdGVyaWFsPXZvaWQgMCx0aGlzLl9tYXRlcmlhbFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fY29vcmRpbmF0ZXM9dm9pZCAwLHRoaXMuX2Nvb3JkaW5hdGVzU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9oZWlnaHQ9dm9pZCAwLHRoaXMuX2hlaWdodFN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZXh0cnVkZWRIZWlnaHQ9dm9pZCAwLHRoaXMuX2V4dHJ1ZGVkSGVpZ2h0U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9ncmFudWxhcml0eT12b2lkIDAsdGhpcy5fZ3JhbnVsYXJpdHlTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3N0Um90YXRpb249dm9pZCAwLHRoaXMuX3N0Um90YXRpb25TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3JvdGF0aW9uPXZvaWQgMCx0aGlzLl9yb3RhdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fY2xvc2VUb3A9dm9pZCAwLHRoaXMuX2Nsb3NlVG9wU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9jbG9zZUJvdHRvbT12b2lkIDAsdGhpcy5fY2xvc2VCb3R0b21TdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyByfTtyZXR1cm4gaShhLnByb3RvdHlwZSx7ZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LHNob3c6bygic2hvdyIpLGNvb3JkaW5hdGVzOm8oImNvb3JkaW5hdGVzIiksbWF0ZXJpYWw6bygibWF0ZXJpYWwiKSxoZWlnaHQ6bygiaGVpZ2h0IiksZXh0cnVkZWRIZWlnaHQ6bygiZXh0cnVkZWRIZWlnaHQiKSxncmFudWxhcml0eTpvKCJncmFudWxhcml0eSIpLHN0Um90YXRpb246bygic3RSb3RhdGlvbiIpLHJvdGF0aW9uOm8oInJvdGF0aW9uIiksZmlsbDpvKCJmaWxsIiksb3V0bGluZTpvKCJvdXRsaW5lIiksb3V0bGluZUNvbG9yOm8oIm91dGxpbmVDb2xvciIpLGNsb3NlVG9wOm8oImNsb3NlVG9wIiksY2xvc2VCb3R0b206bygiY2xvc2VCb3R0b20iKX0pLGEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfHwoZT1uZXcgYSksZS5zaG93PXRoaXMuc2hvdyxlLmNvb3JkaW5hdGVzPXRoaXMuY29vcmRpbmF0ZXMsZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsLGUuaGVpZ2h0PXRoaXMuaGVpZ2h0LGUuZXh0cnVkZWRIZWlnaHQ9dGhpcy5leHRydWRlZEhlaWdodCxlLmdyYW51bGFyaXR5PXRoaXMuZ3JhbnVsYXJpdHksZS5zdFJvdGF0aW9uPXRoaXMuc3RSb3RhdGlvbixlLnJvdGF0aW9uPXRoaXMucm90YXRpb24sZS5maWxsPXRoaXMuZmlsbCxlLm91dGxpbmU9dGhpcy5vdXRsaW5lLGUub3V0bGluZUNvbG9yPXRoaXMub3V0bGluZUNvbG9yLGUuY2xvc2VUb3A9dGhpcy5jbG9zZVRvcCxlLmNsb3NlQm90dG9tPXRoaXMuY2xvc2VCb3R0b20sZX0sYS5wcm90b3R5cGUubWVyZ2U9ZnVuY3Rpb24odCl7dGhpcy5zaG93PWUodGhpcy5zaG93LHQuc2hvdyksdGhpcy5jb29yZGluYXRlcz1lKHRoaXMuY29vcmRpbmF0ZXMsdC5jb29yZGluYXRlcyksdGhpcy5tYXRlcmlhbD1lKHRoaXMubWF0ZXJpYWwsdC5tYXRlcmlhbCksdGhpcy5oZWlnaHQ9ZSh0aGlzLmhlaWdodCx0LmhlaWdodCksdGhpcy5leHRydWRlZEhlaWdodD1lKHRoaXMuZXh0cnVkZWRIZWlnaHQsdC5leHRydWRlZEhlaWdodCksdGhpcy5ncmFudWxhcml0eT1lKHRoaXMuZ3JhbnVsYXJpdHksdC5ncmFudWxhcml0eSksdGhpcy5zdFJvdGF0aW9uPWUodGhpcy5zdFJvdGF0aW9uLHQuc3RSb3RhdGlvbiksdGhpcy5yb3RhdGlvbj1lKHRoaXMucm90YXRpb24sdC5yb3RhdGlvbiksdGhpcy5maWxsPWUodGhpcy5maWxsLHQuZmlsbCksdGhpcy5vdXRsaW5lPWUodGhpcy5vdXRsaW5lLHQub3V0bGluZSksdGhpcy5vdXRsaW5lQ29sb3I9ZSh0aGlzLm91dGxpbmVDb2xvcix0Lm91dGxpbmVDb2xvciksdGhpcy5jbG9zZVRvcD1lKHRoaXMuY2xvc2VUb3AsdC5jbG9zZVRvcCksdGhpcy5jbG9zZUJvdHRvbT1lKHRoaXMuY2xvc2VCb3R0b20sdC5jbG9zZUJvdHRvbSl9LGF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1JlZmVyZW5jZVByb3BlcnR5IixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9SdW50aW1lRXJyb3IiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhKHQpe3ZhciBpPXQuX3RhcmdldFByb3BlcnR5O2lmKCFlKGkpKXt2YXIgbj10Ll90YXJnZXRFbnRpdHk7aWYoIWUobikpe3ZhciBvPXQuX3RhcmdldENvbGxlY3Rpb247aWYobj1vLmdldEJ5SWQodC5fdGFyZ2V0SWQpLCFlKG4pKXRocm93IG5ldyByKCd0YXJnZXQgZW50aXR5ICInK3QuX3RhcmdldElkKyciIGNvdWxkIG5vdCBiZSByZXNvbHZlZC4nKTtuLmRlZmluaXRpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIocy5wcm90b3R5cGUuX29uVGFyZ2V0RW50aXR5RGVmaW5pdGlvbkNoYW5nZWQsdCksdC5fdGFyZ2V0RW50aXR5PW59dmFyIGE9dC5fdGFyZ2V0UHJvcGVydHlOYW1lcztpPW47Zm9yKHZhciBsPWEubGVuZ3RoLHU9MDtsPnU7dSsrKWlmKGk9aVthW3VdXSwhZShpKSl0aHJvdyBuZXcgcigndGFyZ2V0UHJvcGVydHkgIicrYVt1XSsnIiBjb3VsZCBub3QgYmUgcmVzb2x2ZWQuJyk7dC5fdGFyZ2V0UHJvcGVydHk9aX1yZXR1cm4gaX12YXIgcz1mdW5jdGlvbihlLHQsaSl7dGhpcy5fdGFyZ2V0Q29sbGVjdGlvbj1lLHRoaXMuX3RhcmdldElkPXQsdGhpcy5fdGFyZ2V0UHJvcGVydHlOYW1lcz1pLHRoaXMuX3RhcmdldFByb3BlcnR5PXZvaWQgMCx0aGlzLl90YXJnZXRFbnRpdHk9dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyBuLGUuY29sbGVjdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcihzLnByb3RvdHlwZS5fb25Db2xsZWN0aW9uQ2hhbmdlZCx0aGlzKX07cmV0dXJuIHQocy5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiBvLmlzQ29uc3RhbnQoYSh0aGlzKSl9fSxkZWZpbml0aW9uQ2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkfX0scmVmZXJlbmNlRnJhbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiBhKHRoaXMpLnJlZmVyZW5jZUZyYW1lCn19LHRhcmdldElkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0SWR9fSx0YXJnZXRDb2xsZWN0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0Q29sbGVjdGlvbn19LHRhcmdldFByb3BlcnR5TmFtZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90YXJnZXRQcm9wZXJ0eU5hbWVzfX0scmVzb2x2ZWRQcm9wZXJ0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEodGhpcyl9fX0pLHMuZnJvbVN0cmluZz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgaSxuPVtdLHI9ITAsbz0hMSxhPSIiLGw9MDtsPHQubGVuZ3RoOysrbCl7dmFyIHU9dC5jaGFyQXQobCk7bz8oYSs9dSxvPSExKToiXFwiPT09dT9vPSEwOnImJiIjIj09PXU/KGk9YSxyPSExLGE9IiIpOnJ8fCIuIiE9PXU/YSs9dToobi5wdXNoKGEpLGE9IiIpfXJldHVybiBuLnB1c2goYSksbmV3IHMoZSxpLG4pfSxzLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiBhKHRoaXMpLmdldFZhbHVlKGUsdCl9LHMucHJvdG90eXBlLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZT1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGEodGhpcykuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKGUsdCxpKX0scy5wcm90b3R5cGUuZ2V0VHlwZT1mdW5jdGlvbihlKXtyZXR1cm4gYSh0aGlzKS5nZXRUeXBlKGUpfSxzLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7aWYodGhpcz09PWUpcmV0dXJuITA7dmFyIHQ9dGhpcy5fdGFyZ2V0UHJvcGVydHlOYW1lcyxpPWUuX3RhcmdldFByb3BlcnR5TmFtZXM7aWYodGhpcy5fdGFyZ2V0Q29sbGVjdGlvbiE9PWUuX3RhcmdldENvbGxlY3Rpb258fHRoaXMuX3RhcmdldElkIT09ZS5fdGFyZ2V0SWR8fHQubGVuZ3RoIT09aS5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBuPXRoaXMuX3RhcmdldFByb3BlcnR5TmFtZXMubGVuZ3RoLHI9MDtuPnI7cisrKWlmKHRbcl0hPT1pW3JdKXJldHVybiExO3JldHVybiEwfSxzLnByb3RvdHlwZS5fb25UYXJnZXRFbnRpdHlEZWZpbml0aW9uQ2hhbmdlZD1mdW5jdGlvbihlLHQpe3RoaXMuX3RhcmdldFByb3BlcnR5TmFtZXNbMF09PT10JiYodGhpcy5fdGFyZ2V0UHJvcGVydHk9dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfSxzLnByb3RvdHlwZS5fb25Db2xsZWN0aW9uQ2hhbmdlZD1mdW5jdGlvbih0LGksbil7dmFyIHI9dGhpcy5fdGFyZ2V0RW50aXR5O2UocikmJi0xIT09bi5pbmRleE9mKHIpJiYoci5kZWZpbml0aW9uQ2hhbmdlZC5yZW1vdmVFdmVudExpc3RlbmVyKHMucHJvdG90eXBlLl9vblRhcmdldEVudGl0eURlZmluaXRpb25DaGFuZ2VkLHRoaXMpLHRoaXMuX3RhcmdldFByb3BlcnR5PXZvaWQgMCx0aGlzLl90YXJnZXRFbnRpdHk9dm9pZCAwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfSxzfSksZGVmaW5lKCJEYXRhU291cmNlcy9TYW1wbGVkUHJvcGVydHkiLFsiLi4vQ29yZS9iaW5hcnlTZWFyY2giLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9FeHRyYXBvbGF0aW9uVHlwZSIsIi4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uL0NvcmUvTGluZWFyQXBwcm94aW1hdGlvbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gdShlLHQsaSl7dmFyIG4scj1lLmxlbmd0aCxvPWkubGVuZ3RoLGE9citvO2lmKGUubGVuZ3RoPWEsciE9PXQpe3ZhciBzPXItMTtmb3Iobj1hLTE7bj49dDtuLS0pZVtuXT1lW3MtLV19Zm9yKG49MDtvPm47bisrKWVbdCsrXT1pW25dfWZ1bmN0aW9uIGMoZSx0KXtyZXR1cm4gZSBpbnN0YW5jZW9mIHM/ZToic3RyaW5nIj09dHlwZW9mIGU/cy5mcm9tSXNvODYwMShlKTpzLmFkZFNlY29uZHModCxlLG5ldyBzKX12YXIgZD17cGFja2VkTGVuZ3RoOjEscGFjazpmdW5jdGlvbihlLGksbil7bj10KG4sMCksaVtuXT1lfSx1bnBhY2s6ZnVuY3Rpb24oZSxpKXtyZXR1cm4gaT10KGksMCksZVtpXX19LGg9W10sbT1bXSxmPWZ1bmN0aW9uKHQsbixyLG8sYSl7Zm9yKHZhciBsLGQsZixwLHYsZyxfPTA7XzxvLmxlbmd0aDspe3Y9YyhvW19dLHQpLGY9ZShuLHYscy5jb21wYXJlKTt2YXIgeT0wLEM9MDtpZigwPmYpe2ZvcihmPX5mLHA9ZiphLGQ9dm9pZCAwLGc9bltmXTtfPG8ubGVuZ3RoJiYodj1jKG9bX10sdCksIShpKGQpJiZzLmNvbXBhcmUoZCx2KT49MHx8aShnKSYmcy5jb21wYXJlKHYsZyk+PTApKTspe2ZvcihoW3krK109dixfKz0xLGw9MDthPmw7bCsrKW1bQysrXT1vW19dLF8rPTE7ZD12fXk+MCYmKG0ubGVuZ3RoPUMsdShyLHAsbSksaC5sZW5ndGg9eSx1KG4sZixoKSl9ZWxzZXtmb3IobD0wO2E+bDtsKyspXysrLHJbZiphK2xdPW9bX107XysrfX19LHA9ZnVuY3Rpb24oZSxuKXt2YXIgcj1lO3I9PT1OdW1iZXImJihyPWQpO3ZhciBzLHU9ci5wYWNrZWRMZW5ndGgsYz10KHIucGFja2VkSW50ZXJwb2xhdGlvbkxlbmd0aCx1KSxoPTA7aWYoaShuKSl7dmFyIG09bi5sZW5ndGg7cz1uZXcgQXJyYXkobSk7Zm9yKHZhciBmPTA7bT5mO2YrKyl7dmFyIHA9bltmXTtwPT09TnVtYmVyJiYocD1kKTt2YXIgdj1wLnBhY2tlZExlbmd0aDt1Kz12LGMrPXQocC5wYWNrZWRJbnRlcnBvbGF0aW9uTGVuZ3RoLHYpLHNbZl09cH1oPW19dGhpcy5fdHlwZT1lLHRoaXMuX2lubmVyVHlwZT1yLHRoaXMuX2ludGVycG9sYXRpb25EZWdyZWU9MSx0aGlzLl9pbnRlcnBvbGF0aW9uQWxnb3JpdGhtPWwsdGhpcy5fbnVtYmVyT2ZQb2ludHM9MCx0aGlzLl90aW1lcz1bXSx0aGlzLl92YWx1ZXM9W10sdGhpcy5feFRhYmxlPVtdLHRoaXMuX3lUYWJsZT1bXSx0aGlzLl9wYWNrZWRMZW5ndGg9dSx0aGlzLl9wYWNrZWRJbnRlcnBvbGF0aW9uTGVuZ3RoPWMsdGhpcy5fdXBkYXRlVGFibGVMZW5ndGg9ITAsdGhpcy5faW50ZXJwb2xhdGlvblJlc3VsdD1uZXcgQXJyYXkoYyksdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG8sdGhpcy5fZGVyaXZhdGl2ZVR5cGVzPW4sdGhpcy5faW5uZXJEZXJpdmF0aXZlVHlwZXM9cyx0aGlzLl9pbnB1dE9yZGVyPWgsdGhpcy5fZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlPWEuTk9ORSx0aGlzLl9mb3J3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uPTAsdGhpcy5fYmFja3dhcmRFeHRyYXBvbGF0aW9uVHlwZT1hLk5PTkUsdGhpcy5fYmFja3dhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb249MH07cmV0dXJuIG4ocC5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy5fdmFsdWVzLmxlbmd0aH19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSx0eXBlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHlwZX19LGRlcml2YXRpdmVUeXBlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Rlcml2YXRpdmVUeXBlc319LGludGVycG9sYXRpb25EZWdyZWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnBvbGF0aW9uRGVncmVlfX0saW50ZXJwb2xhdGlvbkFsZ29yaXRobTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludGVycG9sYXRpb25BbGdvcml0aG19fSxmb3J3YXJkRXh0cmFwb2xhdGlvblR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mb3J3YXJkRXh0cmFwb2xhdGlvblR5cGV9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9mb3J3YXJkRXh0cmFwb2xhdGlvblR5cGUhPT1lJiYodGhpcy5fZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlPWUsdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSl9fSxmb3J3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9yd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2ZvcndhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb24hPT1lJiYodGhpcy5fZm9yd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbj1lLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX0sYmFja3dhcmRFeHRyYXBvbGF0aW9uVHlwZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGV9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9iYWNrd2FyZEV4dHJhcG9sYXRpb25UeXBlIT09ZSYmKHRoaXMuX2JhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGU9ZSx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKX19LGJhY2t3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYmFja3dhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb259LHNldDpmdW5jdGlvbihlKXt0aGlzLl9iYWNrd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbiE9PWUmJih0aGlzLl9iYWNrd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbj1lLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX19KSxwLnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbih0LG4pe3ZhciByLG89dGhpcy5faW5uZXJUeXBlLGw9dGhpcy5fdGltZXMsdT10aGlzLl92YWx1ZXMsYz1lKGwsdCxzLmNvbXBhcmUpO2lmKDA+Yyl7aWYoYz1+YywwPT09Yyl7dmFyIGQ9bFtjXTtpZihyPXRoaXMuX2JhY2t3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uLHRoaXMuX2JhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGU9PT1hLk5PTkV8fDAhPT1yJiZzLnNlY29uZHNEaWZmZXJlbmNlKGQsdCk+cilyZXR1cm4gdm9pZCAwO2lmKHRoaXMuX2JhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGU9PT1hLkhPTEQpcmV0dXJuIG8udW5wYWNrKHRoaXMuX3ZhbHVlcywwLG4pfWlmKGM+PWwubGVuZ3RoKXtjPWwubGVuZ3RoLTE7dmFyIGg9bFtjXTtpZihyPXRoaXMuX2ZvcndhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb24sdGhpcy5fZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlPT09YS5OT05FfHwwIT09ciYmcy5zZWNvbmRzRGlmZmVyZW5jZSh0LGgpPnIpcmV0dXJuIHZvaWQgMDtpZih0aGlzLl9mb3J3YXJkRXh0cmFwb2xhdGlvblR5cGU9PT1hLkhPTEQpcmV0dXJuIGM9bC5sZW5ndGgtMSxvLnVucGFjayh0aGlzLl92YWx1ZXMsYypvLnBhY2tlZExlbmd0aCxuKX12YXIgbT10aGlzLl94VGFibGUsZj10aGlzLl95VGFibGUscD10aGlzLl9pbnRlcnBvbGF0aW9uQWxnb3JpdGhtLHY9dGhpcy5fcGFja2VkSW50ZXJwb2xhdGlvbkxlbmd0aCxnPXRoaXMuX2lucHV0T3JkZXI7aWYodGhpcy5fdXBkYXRlVGFibGVMZW5ndGgpe3RoaXMuX3VwZGF0ZVRhYmxlTGVuZ3RoPSExO3ZhciBfPU1hdGgubWluKHAuZ2V0UmVxdWlyZWREYXRhUG9pbnRzKHRoaXMuX2ludGVycG9sYXRpb25EZWdyZWUsZyksbC5sZW5ndGgpO18hPT10aGlzLl9udW1iZXJPZlBvaW50cyYmKHRoaXMuX251bWJlck9mUG9pbnRzPV8sbS5sZW5ndGg9XyxmLmxlbmd0aD1fKnYpfXZhciB5PXRoaXMuX251bWJlck9mUG9pbnRzLTE7aWYoMT55KXJldHVybiB2b2lkIDA7dmFyIEM9MCx3PWwubGVuZ3RoLTEsRT13LUMrMTtpZih5KzE+RSk7ZWxzZXt2YXIgYj1jLSgwfHkvMiktMTtDPmImJihiPUMpO3ZhciBTPWIreTtTPncmJihTPXcsYj1TLXksQz5iJiYoYj1DKSksQz1iLHc9U31mb3IodmFyIFQ9dy1DKzEseD0wO1Q+eDsrK3gpbVt4XT1zLnNlY29uZHNEaWZmZXJlbmNlKGxbQyt4XSxsW3ddKTtpZihpKG8uY29udmVydFBhY2tlZEFycmF5Rm9ySW50ZXJwb2xhdGlvbikpby5jb252ZXJ0UGFja2VkQXJyYXlGb3JJbnRlcnBvbGF0aW9uKHUsQyx3LGYpO2Vsc2UgZm9yKHZhciBBPTAsUD10aGlzLl9wYWNrZWRMZW5ndGgsTT1DKlAsST0odysxKSpQO0k+TTspZltBXT11W01dLE0rKyxBKys7dmFyIEQsTz1zLnNlY29uZHNEaWZmZXJlbmNlKHQsbFt3XSk7aWYoMCE9PWcmJmkocC5pbnRlcnBvbGF0ZSkpe3ZhciBSPU1hdGguZmxvb3Iodi8oZysxKSk7RD1wLmludGVycG9sYXRlKE8sbSxmLFIsZyxnLHRoaXMuX2ludGVycG9sYXRpb25SZXN1bHQpfWVsc2UgRD1wLmludGVycG9sYXRlT3JkZXJaZXJvKE8sbSxmLHYsdGhpcy5faW50ZXJwb2xhdGlvblJlc3VsdCk7cmV0dXJuIGkoby51bnBhY2tJbnRlcnBvbGF0aW9uUmVzdWx0KT9vLnVucGFja0ludGVycG9sYXRpb25SZXN1bHQoRCx1LEMsdyxuKTpvLnVucGFjayhELDAsbil9cmV0dXJuIG8udW5wYWNrKHRoaXMuX3ZhbHVlcyxjKnRoaXMuX3BhY2tlZExlbmd0aCxuKX0scC5wcm90b3R5cGUuc2V0SW50ZXJwb2xhdGlvbk9wdGlvbnM9ZnVuY3Rpb24oZSl7dmFyIHQ9ITEsaT1lLmludGVycG9sYXRpb25BbGdvcml0aG0sbj1lLmludGVycG9sYXRpb25EZWdyZWU7dGhpcy5faW50ZXJwb2xhdGlvbkFsZ29yaXRobSE9PWkmJih0aGlzLl9pbnRlcnBvbGF0aW9uQWxnb3JpdGhtPWksdD0hMCksdGhpcy5faW50ZXJwb2xhdGlvbkRlZ3JlZSE9PW4mJih0aGlzLl9pbnRlcnBvbGF0aW9uRGVncmVlPW4sdD0hMCksdCYmKHRoaXMuX3VwZGF0ZVRhYmxlTGVuZ3RoPSEwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfSxwLnByb3RvdHlwZS5hZGRTYW1wbGU9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuX2lubmVyRGVyaXZhdGl2ZVR5cGVzLG89aShyKSxhPXRoaXMuX2lubmVyVHlwZSxzPVtdO2lmKHMucHVzaChlKSxhLnBhY2sodCxzLHMubGVuZ3RoKSxvKWZvcih2YXIgbD1yLmxlbmd0aCx1PTA7bD51O3UrKylyW3VdLnBhY2soblt1XSxzLHMubGVuZ3RoKTtmKHZvaWQgMCx0aGlzLl90aW1lcyx0aGlzLl92YWx1ZXMscyx0aGlzLl9wYWNrZWRMZW5ndGgpLHRoaXMuX3VwZGF0ZVRhYmxlTGVuZ3RoPSEwLHRoaXMuX2RlZmluaXRpb25DaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyl9LHAucHJvdG90eXBlLmFkZFNhbXBsZXM9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj10aGlzLl9pbm5lckRlcml2YXRpdmVUeXBlcyxvPWkociksYT10aGlzLl9pbm5lclR5cGUscz1lLmxlbmd0aCxsPVtdLHU9MDtzPnU7dSsrKWlmKGwucHVzaChlW3VdKSxhLnBhY2sodFt1XSxsLGwubGVuZ3RoKSxvKWZvcih2YXIgYz1uW3VdLGQ9ci5sZW5ndGgsaD0wO2Q+aDtoKyspcltoXS5wYWNrKGNbaF0sbCxsLmxlbmd0aCk7Zih2b2lkIDAsdGhpcy5fdGltZXMsdGhpcy5fdmFsdWVzLGwsdGhpcy5fcGFja2VkTGVuZ3RoKSx0aGlzLl91cGRhdGVUYWJsZUxlbmd0aD0hMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSxwLnByb3RvdHlwZS5hZGRTYW1wbGVzUGFja2VkQXJyYXk9ZnVuY3Rpb24oZSx0KXtmKHQsdGhpcy5fdGltZXMsdGhpcy5fdmFsdWVzLGUsdGhpcy5fcGFja2VkTGVuZ3RoKSx0aGlzLl91cGRhdGVUYWJsZUxlbmd0aD0hMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSxwLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7aWYodGhpcz09PWUpcmV0dXJuITA7aWYoIWkoZSkpcmV0dXJuITE7aWYodGhpcy5fdHlwZSE9PWUuX3R5cGV8fHRoaXMuX2ludGVycG9sYXRpb25EZWdyZWUhPT1lLl9pbnRlcnBvbGF0aW9uRGVncmVlfHx0aGlzLl9pbnRlcnBvbGF0aW9uQWxnb3JpdGhtIT09ZS5faW50ZXJwb2xhdGlvbkFsZ29yaXRobSlyZXR1cm4hMTt2YXIgdD10aGlzLl9kZXJpdmF0aXZlVHlwZXMsbj1pKHQpLHI9ZS5fZGVyaXZhdGl2ZVR5cGVzLG89aShyKTtpZihuIT09bylyZXR1cm4hMTt2YXIgYSxsO2lmKG4pe2lmKGw9dC5sZW5ndGgsbCE9PXIubGVuZ3RoKXJldHVybiExO2ZvcihhPTA7bD5hO2ErKylpZih0W2FdIT09clthXSlyZXR1cm4hMX12YXIgdT10aGlzLl90aW1lcyxjPWUuX3RpbWVzO2lmKGw9dS5sZW5ndGgsbCE9PWMubGVuZ3RoKXJldHVybiExO2ZvcihhPTA7bD5hO2ErKylpZighcy5lcXVhbHModVthXSxjW2FdKSlyZXR1cm4hMTt2YXIgZD10aGlzLl92YWx1ZXMsaD1lLl92YWx1ZXM7Zm9yKGE9MDtsPmE7YSsrKWlmKGRbYV0hPT1oW2FdKXJldHVybiExO3JldHVybiEwfSxwLl9tZXJnZU5ld1NhbXBsZXM9ZixwfSksZGVmaW5lKCJEYXRhU291cmNlcy9TYW1wbGVkUG9zaXRpb25Qcm9wZXJ0eSIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9SZWZlcmVuY2VGcmFtZSIsIi4vUG9zaXRpb25Qcm9wZXJ0eSIsIi4vUHJvcGVydHkiLCIuL1NhbXBsZWRQcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUpeyJ1c2Ugc3RyaWN0Ijt2YXIgYz1mdW5jdGlvbihpLG4pe249dChuLDApO3ZhciByO2lmKG4+MCl7cj1uZXcgQXJyYXkobik7Zm9yKHZhciBzPTA7bj5zO3MrKylyW3NdPWV9dGhpcy5fbnVtYmVyT2ZEZXJpdmF0aXZlcz1uLHRoaXMuX3Byb3BlcnR5PW5ldyB1KGUsciksdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG8sdGhpcy5fcmVmZXJlbmNlRnJhbWU9dChpLGEuRklYRUQpLHRoaXMuX3Byb3BlcnR5Ll9kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKGZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sdGhpcyl9O3JldHVybiBuKGMucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvcGVydHkuaXNDb25zdGFudH19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxyZWZlcmVuY2VGcmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlZmVyZW5jZUZyYW1lfX0saW50ZXJwb2xhdGlvbkRlZ3JlZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb3BlcnR5LmludGVycG9sYXRpb25EZWdyZWV9fSxpbnRlcnBvbGF0aW9uQWxnb3JpdGhtOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvcGVydHkuaW50ZXJwb2xhdGlvbkFsZ29yaXRobX19LG51bWJlck9mRGVyaXZhdGl2ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9udW1iZXJPZkRlcml2YXRpdmVzfX0sZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvcGVydHkuZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fcHJvcGVydHkuZm9yd2FyZEV4dHJhcG9sYXRpb25UeXBlPWV9fSxmb3J3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvcGVydHkuZm9yd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3Byb3BlcnR5LmZvcndhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb249ZX19LGJhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wZXJ0eS5iYWNrd2FyZEV4dHJhcG9sYXRpb25UeXBlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fcHJvcGVydHkuYmFja3dhcmRFeHRyYXBvbGF0aW9uVHlwZT1lfX0sYmFja3dhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wZXJ0eS5iYWNrd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3Byb3BlcnR5LmJhY2t3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uPWV9fX0pLGMucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKGUsYS5GSVhFRCx0KX0sYy5wcm90b3R5cGUuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbj10aGlzLl9wcm9wZXJ0eS5nZXRWYWx1ZShlLG4pLGkobik/cy5jb252ZXJ0VG9SZWZlcmVuY2VGcmFtZShlLG4sdGhpcy5fcmVmZXJlbmNlRnJhbWUsdCxuKTp2b2lkIDB9LGMucHJvdG90eXBlLnNldEludGVycG9sYXRpb25PcHRpb25zPWZ1bmN0aW9uKGUpe3RoaXMuX3Byb3BlcnR5LnNldEludGVycG9sYXRpb25PcHRpb25zKGUpfSxjLnByb3RvdHlwZS5hZGRTYW1wbGU9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX251bWJlck9mRGVyaXZhdGl2ZXMsdGhpcy5fcHJvcGVydHkuYWRkU2FtcGxlKGUsdCxpKX0sYy5wcm90b3R5cGUuYWRkU2FtcGxlcz1mdW5jdGlvbihlLHQsaSl7dGhpcy5fcHJvcGVydHkuYWRkU2FtcGxlcyhlLHQsaSl9LGMucHJvdG90eXBlLmFkZFNhbXBsZXNQYWNrZWRBcnJheT1mdW5jdGlvbihlLHQpe3RoaXMuX3Byb3BlcnR5LmFkZFNhbXBsZXNQYWNrZWRBcnJheShlLHQpfSxjLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxsLmVxdWFscyh0aGlzLl9wcm9wZXJ0eSxlLl9wcm9wZXJ0eSkmJnRoaXMuX3JlZmVyZW5jZUZyYW1lPT09ZS5fcmVmZXJlbmNlRnJhbWV9LGN9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1N0cmlwZU9yaWVudGF0aW9uIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtIT1JJWk9OVEFMOjAsVkVSVElDQUw6MX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1N0cmlwZU1hdGVyaWFsUHJvcGVydHkiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRXZlbnQiLCIuL2NyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciIsIi4vUHJvcGVydHkiLCIuL1N0cmlwZU9yaWVudGF0aW9uIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWEuSE9SSVpPTlRBTCxsPWUuV0hJVEUsdT1lLkJMQUNLLGM9MCxkPTEsaD1mdW5jdGlvbigpe3RoaXMuX2RlZmluaXRpb25DaGFuZ2VkPW5ldyBuLHRoaXMuX29yaWVudGF0aW9uPXZvaWQgMCx0aGlzLl9vcmllbnRhdGlvblN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZXZlbkNvbG9yPXZvaWQgMCx0aGlzLl9ldmVuQ29sb3JTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX29kZENvbG9yPXZvaWQgMCx0aGlzLl9vZGRDb2xvclN1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fb2Zmc2V0PXZvaWQgMCx0aGlzLl9vZmZzZXRTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3JlcGVhdD12b2lkIDAsdGhpcy5fcmVwZWF0U3Vic2NyaXB0aW9uPXZvaWQgMH07cmV0dXJuIGkoaC5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiBvLmlzQ29uc3RhbnQodGhpcy5fb3JpZW50YXRpb24pJiZvLmlzQ29uc3RhbnQodGhpcy5fZXZlbkNvbG9yKSYmby5pc0NvbnN0YW50KHRoaXMuX29kZENvbG9yKSYmby5pc0NvbnN0YW50KHRoaXMuX29mZnNldCkmJm8uaXNDb25zdGFudCh0aGlzLl9yZXBlYXQpfX0sZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZH19LG9yaWVudGF0aW9uOnIoIm9yaWVudGF0aW9uIiksZXZlbkNvbG9yOnIoImV2ZW5Db2xvciIpLG9kZENvbG9yOnIoIm9kZENvbG9yIiksb2Zmc2V0OnIoIm9mZnNldCIpLHJlcGVhdDpyKCJyZXBlYXQiKX0pLGgucHJvdG90eXBlLmdldFR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4iU3RyaXBlIn0saC5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gdChpKXx8KGk9e30pLGkuaG9yaXpvbnRhbD1vLmdldFZhbHVlT3JEZWZhdWx0KHRoaXMuX29yaWVudGF0aW9uLGUscyk9PT1hLkhPUklaT05UQUwsaS5ldmVuQ29sb3I9by5nZXRWYWx1ZU9yQ2xvbmVkRGVmYXVsdCh0aGlzLl9ldmVuQ29sb3IsZSxsLGkuZXZlbkNvbG9yKSxpLm9kZENvbG9yPW8uZ2V0VmFsdWVPckNsb25lZERlZmF1bHQodGhpcy5fb2RkQ29sb3IsZSx1LGkub2RkQ29sb3IpLGkub2Zmc2V0PW8uZ2V0VmFsdWVPckRlZmF1bHQodGhpcy5fb2Zmc2V0LGUsYyksaS5yZXBlYXQ9by5nZXRWYWx1ZU9yRGVmYXVsdCh0aGlzLl9yZXBlYXQsZSxkKSxpfSxoLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXM9PT1lfHxlIGluc3RhbmNlb2YgaCYmby5lcXVhbHModGhpcy5fb3JpZW50YXRpb24sZS5fb3JpZW50YXRpb24pJiZvLmVxdWFscyh0aGlzLl9ldmVuQ29sb3IsZS5fZXZlbkNvbG9yKSYmby5lcXVhbHModGhpcy5fb2RkQ29sb3IsZS5fb2RkQ29sb3IpJiZvLmVxdWFscyh0aGlzLl9vZmZzZXQsZS5fb2Zmc2V0KSYmby5lcXVhbHModGhpcy5fcmVwZWF0LGUuX3JlcGVhdCl9LGgucHJvdG90eXBlLl9yYWlzZURlZmluaXRpb25DaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0saH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvVGltZUludGVydmFsQ29sbGVjdGlvblBvc2l0aW9uUHJvcGVydHkiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvUmVmZXJlbmNlRnJhbWUiLCIuLi9Db3JlL1RpbWVJbnRlcnZhbENvbGxlY3Rpb24iLCIuL1Bvc2l0aW9uUHJvcGVydHkiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpeyJ1c2Ugc3RyaWN0Ijt2YXIgdT1mdW5jdGlvbih0KXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcix0aGlzLl9pbnRlcnZhbHM9bmV3IGEsdGhpcy5faW50ZXJ2YWxzLmNoYW5nZWRFdmVudC5hZGRFdmVudExpc3RlbmVyKHUucHJvdG90eXBlLl9pbnRlcnZhbHNDaGFuZ2VkLHRoaXMpLHRoaXMuX3JlZmVyZW5jZUZyYW1lPWUodCxvLkZJWEVEKX07cmV0dXJuIGkodS5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnZhbHMuaXNFbXB0eX19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxpbnRlcnZhbHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnZhbHN9fSxyZWZlcmVuY2VGcmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlZmVyZW5jZUZyYW1lfX19KSx1LnByb3RvdHlwZS5nZXRWYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZShlLG8uRklYRUQsdCl9LHUucHJvdG90eXBlLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZT1mdW5jdGlvbihlLGksbil7dmFyIHI9dGhpcy5faW50ZXJ2YWxzLmZpbmREYXRhRm9ySW50ZXJ2YWxDb250YWluaW5nRGF0ZShlKTtyZXR1cm4gdChyKT9zLmNvbnZlcnRUb1JlZmVyZW5jZUZyYW1lKGUscix0aGlzLl9yZWZlcmVuY2VGcmFtZSxpLG4pOnZvaWQgMH0sdS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzPT09ZXx8ZSBpbnN0YW5jZW9mIHUmJnRoaXMuX2ludGVydmFscy5lcXVhbHMoZS5faW50ZXJ2YWxzLGwuZXF1YWxzKSYmdGhpcy5fcmVmZXJlbmNlRnJhbWU9PT1lLl9yZWZlcmVuY2VGcmFtZX0sdS5wcm90b3R5cGUuX2ludGVydmFsc0NoYW5nZWQ9ZnVuY3Rpb24oKXt0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfSx1fSksZGVmaW5lKCJEYXRhU291cmNlcy9UaW1lSW50ZXJ2YWxDb2xsZWN0aW9uUHJvcGVydHkiLFsiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL2lzQXJyYXkiLCIuLi9Db3JlL1RpbWVJbnRlcnZhbENvbGxlY3Rpb24iLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQ9bmV3IG4sdGhpcy5faW50ZXJ2YWxzPW5ldyBvLHRoaXMuX2ludGVydmFscy5jaGFuZ2VkRXZlbnQuYWRkRXZlbnRMaXN0ZW5lcihzLnByb3RvdHlwZS5faW50ZXJ2YWxzQ2hhbmdlZCx0aGlzKX07cmV0dXJuIHQocy5wcm90b3R5cGUse2lzQ29uc3RhbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnZhbHMuaXNFbXB0eX19LGRlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxpbnRlcnZhbHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnRlcnZhbHN9fX0pLHMucHJvdG90eXBlLmdldFZhbHVlPWZ1bmN0aW9uKHQsaSl7dmFyIG49dGhpcy5faW50ZXJ2YWxzLmZpbmREYXRhRm9ySW50ZXJ2YWxDb250YWluaW5nRGF0ZSh0KTtyZXR1cm4gZShuKSYmIm9iamVjdCI9PXR5cGVvZiBuJiYhcihuKT9uLmNsb25lKGkpOm59LHMucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcz09PWV8fGUgaW5zdGFuY2VvZiBzJiZ0aGlzLl9pbnRlcnZhbHMuZXF1YWxzKGUuX2ludGVydmFscyxhLmVxdWFscyl9LHMucHJvdG90eXBlLl9pbnRlcnZhbHNDaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5fZGVmaW5pdGlvbkNoYW5nZWQucmFpc2VFdmVudCh0aGlzKX0sc30pLGRlZmluZSgiRGF0YVNvdXJjZXMvV2FsbEdyYXBoaWNzIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuL2NyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9ZnVuY3Rpb24oKXt0aGlzLl9zaG93PXZvaWQgMCx0aGlzLl9zaG93U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9tYXRlcmlhbD12b2lkIDAsdGhpcy5fbWF0ZXJpYWxTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX3Bvc2l0aW9ucz12b2lkIDAsdGhpcy5fcG9zaXRpb25zU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9taW5pbXVtSGVpZ2h0cz12b2lkIDAsdGhpcy5fbWluaW11bUhlaWdodHNTdWJzY3JpcHRpb249dm9pZCAwLHRoaXMuX21heGltdW1IZWlnaHRzPXZvaWQgMCx0aGlzLl9tYXhpbXVtSGVpZ2h0c1N1YnNjcmlwdGlvbj12b2lkIDAsdGhpcy5fZ3JhbnVsYXJpdHk9dm9pZCAwLHRoaXMuX2dyYW51bGFyaXR5U3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLl9kZWZpbml0aW9uQ2hhbmdlZD1uZXcgcn07cmV0dXJuIGkoYS5wcm90b3R5cGUse2RlZmluaXRpb25DaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVmaW5pdGlvbkNoYW5nZWR9fSxzaG93Om8oInNob3ciKSxtYXRlcmlhbDpvKCJtYXRlcmlhbCIpLHBvc2l0aW9uczpvKCJwb3NpdGlvbnMiKSxtaW5pbXVtSGVpZ2h0czpvKCJtaW5pbXVtSGVpZ2h0cyIpLG1heGltdW1IZWlnaHRzOm8oIm1heGltdW1IZWlnaHRzIiksZ3JhbnVsYXJpdHk6bygiZ3JhbnVsYXJpdHkiKSxmaWxsOm8oImZpbGwiKSxvdXRsaW5lOm8oIm91dGxpbmUiKSxvdXRsaW5lQ29sb3I6bygib3V0bGluZUNvbG9yIil9KSxhLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKXx8KGU9bmV3IGEpLGUuc2hvdz10aGlzLnNob3csZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsLGUucG9zaXRpb25zPXRoaXMucG9zaXRpb25zLGUubWluaW11bUhlaWdodHM9dGhpcy5taW5pbXVtSGVpZ2h0cyxlLm1heGltdW1IZWlnaHRzPXRoaXMubWF4aW11bUhlaWdodHMsZS5ncmFudWxhcml0eT10aGlzLmdyYW51bGFyaXR5LGUuZmlsbD10aGlzLmZpbGwsZS5vdXRsaW5lPXRoaXMub3V0bGluZSxlLm91dGxpbmVDb2xvcj10aGlzLm91dGxpbmVDb2xvcixlfSxhLnByb3RvdHlwZS5tZXJnZT1mdW5jdGlvbih0KXt0aGlzLnNob3c9ZSh0aGlzLnNob3csdC5zaG93KSx0aGlzLm1hdGVyaWFsPWUodGhpcy5tYXRlcmlhbCx0Lm1hdGVyaWFsKSx0aGlzLnBvc2l0aW9ucz1lKHRoaXMucG9zaXRpb25zLHQucG9zaXRpb25zKSx0aGlzLm1pbmltdW1IZWlnaHRzPWUodGhpcy5taW5pbXVtSGVpZ2h0cyx0Lm1pbmltdW1IZWlnaHRzKSx0aGlzLm1heGltdW1IZWlnaHRzPWUodGhpcy5tYXhpbXVtSGVpZ2h0cyx0Lm1heGltdW1IZWlnaHRzKSx0aGlzLmdyYW51bGFyaXR5PWUodGhpcy5ncmFudWxhcml0eSx0LmdyYW51bGFyaXR5KSx0aGlzLmZpbGw9ZSh0aGlzLmZpbGwsdC5maWxsKSx0aGlzLm91dGxpbmU9ZSh0aGlzLm91dGxpbmUsdC5vdXRsaW5lKSx0aGlzLm91dGxpbmVDb2xvcj1lKHRoaXMub3V0bGluZUNvbG9yLHQub3V0bGluZUNvbG9yKX0sYX0pLGRlZmluZSgiRGF0YVNvdXJjZXMvQ3ptbERhdGFTb3VyY2UiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMiLCIuLi9Db3JlL0Nsb2NrUmFuZ2UiLCIuLi9Db3JlL0Nsb2NrU3RlcCIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL2NyZWF0ZUd1aWQiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0VsbGlwc29pZCIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL0V4dHJhcG9sYXRpb25UeXBlIiwiLi4vQ29yZS9nZXRGaWxlbmFtZUZyb21VcmkiLCIuLi9Db3JlL0hlcm1pdGVQb2x5bm9taWFsQXBwcm94aW1hdGlvbiIsIi4uL0NvcmUvaXNBcnJheSIsIi4uL0NvcmUvSXNvODYwMSIsIi4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uL0NvcmUvTGFncmFuZ2VQb2x5bm9taWFsQXBwcm94aW1hdGlvbiIsIi4uL0NvcmUvTGluZWFyQXBwcm94aW1hdGlvbiIsIi4uL0NvcmUvbG9hZEpzb24iLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL1F1YXRlcm5pb24iLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL0NvcmUvUmVmZXJlbmNlRnJhbWUiLCIuLi9Db3JlL1J1bnRpbWVFcnJvciIsIi4uL0NvcmUvU3BoZXJpY2FsIiwiLi4vQ29yZS9UaW1lSW50ZXJ2YWwiLCIuLi9Db3JlL1RpbWVJbnRlcnZhbENvbGxlY3Rpb24iLCIuLi9TY2VuZS9Ib3Jpem9udGFsT3JpZ2luIiwiLi4vU2NlbmUvTGFiZWxTdHlsZSIsIi4uL1NjZW5lL1ZlcnRpY2FsT3JpZ2luIiwiLi4vVGhpcmRQYXJ0eS9VcmkiLCIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL0JpbGxib2FyZEdyYXBoaWNzIiwiLi9Db2xvck1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbXBvc2l0ZU1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbXBvc2l0ZVBvc2l0aW9uUHJvcGVydHkiLCIuL0NvbXBvc2l0ZVByb3BlcnR5IiwiLi9Db25zdGFudFBvc2l0aW9uUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL0RhdGFTb3VyY2VDbG9jayIsIi4vRWxsaXBzZUdyYXBoaWNzIiwiLi9FbGxpcHNvaWRHcmFwaGljcyIsIi4vRW50aXR5Q29sbGVjdGlvbiIsIi4vR3JpZE1hdGVyaWFsUHJvcGVydHkiLCIuL0ltYWdlTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vTGFiZWxHcmFwaGljcyIsIi4vTW9kZWxHcmFwaGljcyIsIi4vUGF0aEdyYXBoaWNzIiwiLi9Qb2ludEdyYXBoaWNzIiwiLi9Qb2x5Z29uR3JhcGhpY3MiLCIuL1BvbHlsaW5lR2xvd01hdGVyaWFsUHJvcGVydHkiLCIuL1BvbHlsaW5lR3JhcGhpY3MiLCIuL1BvbHlsaW5lT3V0bGluZU1hdGVyaWFsUHJvcGVydHkiLCIuL1Bvc2l0aW9uUHJvcGVydHlBcnJheSIsIi4vUmVjdGFuZ2xlR3JhcGhpY3MiLCIuL1JlZmVyZW5jZVByb3BlcnR5IiwiLi9TYW1wbGVkUG9zaXRpb25Qcm9wZXJ0eSIsIi4vU2FtcGxlZFByb3BlcnR5IiwiLi9TdHJpcGVNYXRlcmlhbFByb3BlcnR5IiwiLi9TdHJpcGVPcmllbnRhdGlvbiIsIi4vVGltZUludGVydmFsQ29sbGVjdGlvblBvc2l0aW9uUHJvcGVydHkiLCIuL1RpbWVJbnRlcnZhbENvbGxlY3Rpb25Qcm9wZXJ0eSIsIi4vV2FsbEdyYXBoaWNzIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0sSSxELE8sUixMLE4seixCLEYsVixrLFUsVyxHLEgscSxqLFksWCxaLEosSyxRLCQsZXQsdHQsaXQsbnQscnQsb3QsYXQsc3QsbHQsdXQsY3QsZHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBodChlLHQpe3JldHVybiIjIj09PXRbMF0mJih0PVp0K3QpLHJ0LmZyb21TdHJpbmcoZSx0KX1mdW5jdGlvbiBtdChlKXt2YXIgdD1lLnJnYmFmO2lmKGwodCkpcmV0dXJuIHQ7dmFyIGk9ZS5yZ2JhO2lmKCFsKGkpKXJldHVybiB2b2lkIDA7aWYoaS5sZW5ndGg9PT1vLmxlbmd0aClyZXR1cm5bby5ieXRlVG9GbG9hdChpWzBdKSxvLmJ5dGVUb0Zsb2F0KGlbMV0pLG8uYnl0ZVRvRmxvYXQoaVsyXSksby5ieXRlVG9GbG9hdChpWzNdKV07dmFyIG49aS5sZW5ndGg7dD1uZXcgQXJyYXkobik7Zm9yKHZhciByPTA7bj5yO3IrPTUpdFtyXT1pW3JdLHRbcisxXT1vLmJ5dGVUb0Zsb2F0KGlbcisxXSksdFtyKzJdPW8uYnl0ZVRvRmxvYXQoaVtyKzJdKSx0W3IrM109by5ieXRlVG9GbG9hdChpW3IrM10pLHRbcis0XT1vLmJ5dGVUb0Zsb2F0KGlbcis0XSk7cmV0dXJuIHR9ZnVuY3Rpb24gZnQoZSx0KXt2YXIgaT1zKGUudXJpLGUpO2lmKGwodCkpe3ZhciBuPW5ldyBSKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpO3Q9bmV3IFIodCksaT1uZXcgUihpKS5yZXNvbHZlKHQucmVzb2x2ZShuKSkudG9TdHJpbmcoKX1yZXR1cm4gaX1mdW5jdGlvbiBwdChlKXt2YXIgdD1lLndzZW5EZWdyZWVzO2lmKGwodCkpe2Zvcih2YXIgaT10Lmxlbmd0aCxuPTA7aT5uO24rKyl0W25dPUUudG9SYWRpYW5zKHRbbl0pO3JldHVybiB0fXJldHVybiBlLndzZW59ZnVuY3Rpb24gdnQoZSl7aWYobChlLmNhcnRlc2lhbikpcmV0dXJuIGUuY2FydGVzaWFuO2lmKGwoZS5jYXJ0ZXNpYW5WZWxvY2l0eSkpcmV0dXJuIGUuY2FydGVzaWFuVmVsb2NpdHk7aWYobChlLnVuaXRDYXJ0ZXNpYW4pKXJldHVybiBlLnVuaXRDYXJ0ZXNpYW47dmFyIGksbixyLG89ZS51bml0U3BoZXJpY2FsO2lmKGwobykpe2lmKG49by5sZW5ndGgsMj09PW4pS3QuY2xvY2s9b1swXSxLdC5jb25lPW9bMV0sdC5mcm9tU3BoZXJpY2FsKEt0LEp0KSxyPVtKdC54LEp0LnksSnQuel07ZWxzZXt2YXIgYT0wO2ZvcihyPW5ldyBBcnJheSg0KihuLzMpKSxpPTA7bj5pO2krPTQpcltpXT1vW2ErK10sS3QuY2xvY2s9b1thKytdLEt0LmNvbmU9b1thKytdLHQuZnJvbVNwaGVyaWNhbChLdCxKdCkscltpKzFdPUp0LngscltpKzJdPUp0LnkscltpKzNdPUp0Lnp9cmV0dXJuIHJ9dmFyIHM9ZS5jYXJ0b2dyYXBoaWNSYWRpYW5zO2lmKGwocykpe2lmKDM9PT1zLmxlbmd0aClRdC5sb25naXR1ZGU9c1swXSxRdC5sYXRpdHVkZT1zWzFdLFF0LmhlaWdodD1zWzJdLGQuV0dTODQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oUXQsSnQpLHI9W0p0LngsSnQueSxKdC56XTtlbHNlIGZvcihuPXMubGVuZ3RoLHI9bmV3IEFycmF5KG4pLGk9MDtuPmk7aSs9NClRdC5sb25naXR1ZGU9c1tpKzFdLFF0LmxhdGl0dWRlPXNbaSsyXSxRdC5oZWlnaHQ9c1tpKzNdLGQuV0dTODQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oUXQsSnQpLHJbaV09c1tpXSxyW2krMV09SnQueCxyW2krMl09SnQueSxyW2krM109SnQuejtyZXR1cm4gcn12YXIgdT1lLmNhcnRvZ3JhcGhpY0RlZ3JlZXM7aWYoIWwodSkpdGhyb3cgbmV3IHgoSlNPTi5zdHJpbmdpZnkoZSkrIiBpcyBub3QgYSB2YWxpZCBDWk1MIGludGVydmFsLiIpO2lmKDM9PT11Lmxlbmd0aClRdC5sb25naXR1ZGU9RS50b1JhZGlhbnModVswXSksUXQubGF0aXR1ZGU9RS50b1JhZGlhbnModVsxXSksUXQuaGVpZ2h0PXVbMl0sZC5XR1M4NC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihRdCxKdCkscj1bSnQueCxKdC55LEp0LnpdO2Vsc2UgZm9yKG49dS5sZW5ndGgscj1uZXcgQXJyYXkobiksaT0wO24+aTtpKz00KVF0LmxvbmdpdHVkZT1FLnRvUmFkaWFucyh1W2krMV0pLFF0LmxhdGl0dWRlPUUudG9SYWRpYW5zKHVbaSsyXSksUXQuaGVpZ2h0PXVbaSszXSxkLldHUzg0LmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKFF0LEp0KSxyW2ldPXVbaV0scltpKzFdPUp0LngscltpKzJdPUp0LnkscltpKzNdPUp0Lno7cmV0dXJuIHJ9ZnVuY3Rpb24gZ3QoaSxuLHIpe3N3aXRjaChpKXtjYXNlIEJvb2xlYW46cmV0dXJuIHMoblsiYm9vbGVhbiJdLG4pO2Nhc2UgZTpyZXR1cm4gbi5jYXJ0ZXNpYW4yO2Nhc2UgdDpyZXR1cm4gdnQobik7Y2FzZSBvOnJldHVybiBtdChuKTtjYXNlIGx0OnJldHVybiBsdFtzKG4uc3RyaXBlT3JpZW50YXRpb24sbildO2Nhc2UgSTpyZXR1cm4gSVtzKG4uaG9yaXpvbnRhbE9yaWdpbixuKV07Y2FzZSBJbWFnZTpyZXR1cm4gZnQobixyKTtjYXNlIF86cmV0dXJuIF8uZnJvbUlzbzg2MDEocyhuLmRhdGUsbikpO2Nhc2UgRDpyZXR1cm4gRFtzKG4ubGFiZWxTdHlsZSxuKV07Y2FzZSBOdW1iZXI6cmV0dXJuIHMobi5udW1iZXIsbik7Y2FzZSBTdHJpbmc6cmV0dXJuIHMobi5zdHJpbmcsbik7Y2FzZSBBcnJheTpyZXR1cm4gbi5hcnJheTtjYXNlIGI6cmV0dXJuIG4udW5pdFF1YXRlcm5pb247Y2FzZSBTOnJldHVybiBwdChuKTtjYXNlIFI6cmV0dXJuIGZ0KG4scik7Y2FzZSBPOnJldHVybiBPW3Mobi52ZXJ0aWNhbE9yaWdpbixuKV07ZGVmYXVsdDp0aHJvdyBuZXcgYyhpKX19ZnVuY3Rpb24gX3QoZSx0KXt2YXIgaT1lLmludGVycG9sYXRpb25BbGdvcml0aG07KGwoaSl8fGwoZS5pbnRlcnBvbGF0aW9uRGVncmVlKSkmJnQuc2V0SW50ZXJwb2xhdGlvbk9wdGlvbnMoe2ludGVycG9sYXRpb25BbGdvcml0aG06ZWlbaV0saW50ZXJwb2xhdGlvbkRlZ3JlZTplLmludGVycG9sYXRpb25EZWdyZWV9KTt2YXIgbj1lLmZvcndhcmRFeHRyYXBvbGF0aW9uVHlwZTtsKG4pJiYodC5mb3J3YXJkRXh0cmFwb2xhdGlvblR5cGU9bVtuXSk7dmFyIHI9ZS5mb3J3YXJkRXh0cmFwb2xhdGlvbkR1cmF0aW9uO2wocikmJih0LmZvcndhcmRFeHRyYXBvbGF0aW9uRHVyYXRpb249cik7dmFyIG89ZS5iYWNrd2FyZEV4dHJhcG9sYXRpb25UeXBlO2wobykmJih0LmJhY2t3YXJkRXh0cmFwb2xhdGlvblR5cGU9bVtvXSk7dmFyIGE9ZS5iYWNrd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbjtsKGEpJiYodC5iYWNrd2FyZEV4dHJhcG9sYXRpb25EdXJhdGlvbj1hKX1mdW5jdGlvbiB5dChlLHQsaSxuLHIsbyxhKXt2YXIgdSxjPW4uaW50ZXJ2YWw7bChjKT8odGkuaXNvODYwMT1jLHU9UC5mcm9tSXNvODYwMSh0aSksbChyKSYmKHU9UC5pbnRlcnNlY3QodSxyLCR0KSkpOmwocikmJih1PXIpO3ZhciBkLGgsbSxmLHA9bChuLnJlZmVyZW5jZSksdj1sKHUpJiYhdS5lcXVhbHMoZy5NQVhJTVVNX0lOVEVSVkFMKTtpZihwfHwobT1ndChlLG4sbyksZD1zKGUucGFja2VkTGVuZ3RoLDEpLGY9cyhtLmxlbmd0aCwxKSxoPSFsKG4uYXJyYXkpJiYic3RyaW5nIiE9dHlwZW9mIG0mJmY+ZCksIWgmJiF2KXJldHVybiB0W2ldPXA/aHQoYSxuLnJlZmVyZW5jZSk6bChlLnVucGFjayk/bmV3IFUoZS51bnBhY2sobSwwKSk6bmV3IFUobSksdm9pZCAwO3ZhciB5LEM9dFtpXSx3PW4uZXBvY2g7aWYobCh3KSYmKHk9Xy5mcm9tSXNvODYwMSh3KSksaCYmIXYpcmV0dXJuIEMgaW5zdGFuY2VvZiBhdHx8KEM9bmV3IGF0KGUpLHRbaV09QyksQy5hZGRTYW1wbGVzUGFja2VkQXJyYXkobSx5KSxfdChuLEMpLHZvaWQgMDt2YXIgRTtpZighaCYmdilyZXR1cm4gdT11LmNsb25lKCksdS5kYXRhPXA/aHQoYSxuLnJlZmVyZW5jZSk6bChlLnVucGFjayk/ZS51bnBhY2sobSwwKTptLGwoQyl8fChDPXA/bmV3IFY6bmV3IGN0LHRbaV09QyksIXAmJkMgaW5zdGFuY2VvZiBjdD9DLmludGVydmFscy5hZGRJbnRlcnZhbCh1KTpDIGluc3RhbmNlb2YgVj8odS5kYXRhPXA/dS5kYXRhOm5ldyBVKHUuZGF0YSksQy5pbnRlcnZhbHMuYWRkSW50ZXJ2YWwodSkpOihFPWcuTUFYSU1VTV9JTlRFUlZBTC5jbG9uZSgpLEUuZGF0YT1DLEM9bmV3IFYsdFtpXT1DLEMuaW50ZXJ2YWxzLmFkZEludGVydmFsKEUpLHUuZGF0YT1wP3UuZGF0YTpuZXcgVSh1LmRhdGEpLEMuaW50ZXJ2YWxzLmFkZEludGVydmFsKHUpKSx2b2lkIDA7bChDKXx8KEM9bmV3IFYsdFtpXT1DKSxDIGluc3RhbmNlb2YgVnx8KEU9Zy5NQVhJTVVNX0lOVEVSVkFMLmNsb25lKCksRS5kYXRhPUMsQz1uZXcgVix0W2ldPUMsQy5pbnRlcnZhbHMuYWRkSW50ZXJ2YWwoRSkpO3ZhciBiPUMuaW50ZXJ2YWxzO0U9Yi5maW5kSW50ZXJ2YWwodSksbChFKSYmRS5kYXRhIGluc3RhbmNlb2YgYXR8fChFPXUuY2xvbmUoKSxFLmRhdGE9bmV3IGF0KGUpLGIuYWRkSW50ZXJ2YWwoRSkpLEUuZGF0YS5hZGRTYW1wbGVzUGFja2VkQXJyYXkobSx5KSxfdChuLEUuZGF0YSl9ZnVuY3Rpb24gQ3QoZSx0LGksbixyLG8sYSl7aWYobChuKSlpZih2KG4pKWZvcih2YXIgcz0wLHU9bi5sZW5ndGg7dT5zO3MrKyl5dChlLHQsaSxuW3NdLHIsbyxhKTtlbHNlIHl0KGUsdCxpLG4scixvLGEpfWZ1bmN0aW9uIHd0KGUsaSxuLHIsbyxhKXt2YXIgdSxjPW4uaW50ZXJ2YWw7bChjKT8odGkuaXNvODYwMT1jLHU9UC5mcm9tSXNvODYwMSh0aSksbChyKSYmKHU9UC5pbnRlcnNlY3QodSxyLCR0KSkpOmwocikmJih1PXIpO3ZhciBkLGgsbSxmPSExLHA9bChuLmNhcnRlc2lhblZlbG9jaXR5KT8xOjAsdj10LnBhY2tlZExlbmd0aCoocCsxKSx5PWwobi5yZWZlcmVuY2UpLEM9bCh1KSYmIXUuZXF1YWxzKGcuTUFYSU1VTV9JTlRFUlZBTCk7aWYoeXx8KGQ9cyhUW24ucmVmZXJlbmNlRnJhbWVdLHZvaWQgMCksaD12dChuKSxtPXMoaC5sZW5ndGgsMSksZj1tPnYpLCFmJiYhQylyZXR1cm4gZVtpXT15P2h0KGEsbi5yZWZlcmVuY2UpOm5ldyBrKHQudW5wYWNrKGgpLGQpLHZvaWQgMDt2YXIgdyxFPWVbaV0sYj1uLmVwb2NoO2lmKGwoYikmJih3PV8uZnJvbUlzbzg2MDEoYikpLGYmJiFDKXJldHVybighKEUgaW5zdGFuY2VvZiBvdCl8fGwoZCkmJkUucmVmZXJlbmNlRnJhbWUhPT1kKSYmKEU9bmV3IG90KGQscCksZVtpXT1FKSxFLmFkZFNhbXBsZXNQYWNrZWRBcnJheShoLHcpLF90KG4sRSksdm9pZCAwO3ZhciBTO2lmKCFmJiZDKXJldHVybiB1PXUuY2xvbmUoKSx1LmRhdGE9eT9odChhLG4ucmVmZXJlbmNlKTp0LnVucGFjayhoKSxsKEUpfHwoRT15P25ldyBGKGQpOm5ldyB1dChkKSxlW2ldPUUpLCF5JiZFIGluc3RhbmNlb2YgdXQmJmwoZCkmJkUucmVmZXJlbmNlRnJhbWU9PT1kP0UuaW50ZXJ2YWxzLmFkZEludGVydmFsKHUpOkUgaW5zdGFuY2VvZiBGPyh1LmRhdGE9eT91LmRhdGE6bmV3IGsodS5kYXRhLGQpLEUuaW50ZXJ2YWxzLmFkZEludGVydmFsKHUpKTooUz1nLk1BWElNVU1fSU5URVJWQUwuY2xvbmUoKSxTLmRhdGE9RSxFPW5ldyBGKEUucmVmZXJlbmNlRnJhbWUpLGVbaV09RSxFLmludGVydmFscy5hZGRJbnRlcnZhbChTKSx1LmRhdGE9eT91LmRhdGE6bmV3IGsodS5kYXRhLGQpLEUuaW50ZXJ2YWxzLmFkZEludGVydmFsKHUpKSx2b2lkIDA7bChFKT9FIGluc3RhbmNlb2YgRnx8KFM9Zy5NQVhJTVVNX0lOVEVSVkFMLmNsb25lKCksUy5kYXRhPUUsRT1uZXcgRihFLnJlZmVyZW5jZUZyYW1lKSxlW2ldPUUsRS5pbnRlcnZhbHMuYWRkSW50ZXJ2YWwoUykpOihFPW5ldyBGKGQpLGVbaV09RSk7dmFyIHg9RS5pbnRlcnZhbHM7Uz14LmZpbmRJbnRlcnZhbCh1KSxsKFMpJiZTLmRhdGEgaW5zdGFuY2VvZiBvdCYmKCFsKGQpfHxTLmRhdGEucmVmZXJlbmNlRnJhbWU9PT1kKXx8KFM9dS5jbG9uZSgpLFMuZGF0YT1uZXcgb3QoZCxwKSx4LmFkZEludGVydmFsKFMpKSxTLmRhdGEuYWRkU2FtcGxlc1BhY2tlZEFycmF5KGgsdyksX3QobixTLmRhdGEpfWZ1bmN0aW9uIEV0KGUsdCxpLG4scixvKXtpZihsKGkpKWlmKHYoaSkpZm9yKHZhciBhPTAscz1pLmxlbmd0aDtzPmE7YSsrKXd0KGUsdCxpW2FdLG4scixvKTtlbHNlIHd0KGUsdCxpLG4scixvKX1mdW5jdGlvbiBidCh0LGksbixyLGEscyl7dmFyIHUsYz1uLmludGVydmFsO2woYyk/KHRpLmlzbzg2MDE9Yyx1PVAuZnJvbUlzbzg2MDEodGkpLGwocikmJih1PVAuaW50ZXJzZWN0KHUsciwkdCkpKTpsKHIpJiYodT1yKTt2YXIgZCxoLG09dFtpXTtpZihsKHUpKXttIGluc3RhbmNlb2YgQnx8KG09bmV3IEIsdFtpXT1tKTt2YXIgZj1tLmludGVydmFscztoPWYuZmluZEludGVydmFsKHtzdGFydDp1LnN0YXJ0LHN0b3A6dS5zdG9wfSksbChoKT9kPWguZGF0YTooaD11LmNsb25lKCksZi5hZGRJbnRlcnZhbChoKSl9ZWxzZSBkPW07dmFyIHA7bChuLnNvbGlkQ29sb3IpPyhkIGluc3RhbmNlb2Ygenx8KGQ9bmV3IHopLHA9bi5zb2xpZENvbG9yLEN0KG8sZCwiY29sb3IiLHAuY29sb3Isdm9pZCAwLHZvaWQgMCxzKSk6bChuLmdyaWQpPyhkIGluc3RhbmNlb2Yganx8KGQ9bmV3IGopLHA9bi5ncmlkLEN0KG8sZCwiY29sb3IiLHAuY29sb3Isdm9pZCAwLGEscyksQ3QoTnVtYmVyLGQsImNlbGxBbHBoYSIscC5jZWxsQWxwaGEsdm9pZCAwLGEscyksQ3QoZSxkLCJsaW5lVGhpY2tuZXNzIixwLmxpbmVUaGlja25lc3Msdm9pZCAwLGEscyksQ3QoZSxkLCJsaW5lT2Zmc2V0IixwLmxpbmVPZmZzZXQsdm9pZCAwLGEscyksQ3QoZSxkLCJsaW5lQ291bnQiLHAubGluZUNvdW50LHZvaWQgMCxhLHMpKTpsKG4uaW1hZ2UpPyhkIGluc3RhbmNlb2YgWXx8KGQ9bmV3IFkpLHA9bi5pbWFnZSxDdChJbWFnZSxkLCJpbWFnZSIscC5pbWFnZSx2b2lkIDAsYSxzKSxDdChlLGQsInJlcGVhdCIscC5yZXBlYXQsdm9pZCAwLGEscykpOmwobi5zdHJpcGUpPyhkIGluc3RhbmNlb2Ygc3R8fChkPW5ldyBzdCkscD1uLnN0cmlwZSxDdChsdCxkLCJvcmllbnRhdGlvbiIscC5vcmllbnRhdGlvbix2b2lkIDAsYSxzKSxDdChvLGQsImV2ZW5Db2xvciIscC5ldmVuQ29sb3Isdm9pZCAwLGEscyksQ3QobyxkLCJvZGRDb2xvciIscC5vZGRDb2xvcix2b2lkIDAsYSxzKSxDdChOdW1iZXIsZCwib2Zmc2V0IixwLm9mZnNldCx2b2lkIDAsYSxzKSxDdChOdW1iZXIsZCwicmVwZWF0IixwLnJlcGVhdCx2b2lkIDAsYSxzKSk6bChuLnBvbHlsaW5lT3V0bGluZSk/KGQgaW5zdGFuY2VvZiB0dHx8KGQ9bmV3IHR0KSxwPW4ucG9seWxpbmVPdXRsaW5lLEN0KG8sZCwiY29sb3IiLHAuY29sb3Isdm9pZCAwLGEscyksQ3QobyxkLCJvdXRsaW5lQ29sb3IiLHAub3V0bGluZUNvbG9yLHZvaWQgMCxhLHMpLEN0KE51bWJlcixkLCJvdXRsaW5lV2lkdGgiLHAub3V0bGluZVdpZHRoLHZvaWQgMCxhLHMpKTpsKG4ucG9seWxpbmVHbG93KSYmKGQgaW5zdGFuY2VvZiAkfHwoZD1uZXcgJCkscD1uLnBvbHlsaW5lR2xvdyxDdChvLGQsImNvbG9yIixwLmNvbG9yLHZvaWQgMCxhLHMpLEN0KE51bWJlcixkLCJnbG93UG93ZXIiLHAuZ2xvd1Bvd2VyLHZvaWQgMCxhLHMpKSxsKGgpP2guZGF0YT1kOnRbaV09ZH1mdW5jdGlvbiBTdChlLHQsaSxuLHIsbyl7aWYobChpKSlpZih2KGkpKWZvcih2YXIgYT0wLHM9aS5sZW5ndGg7cz5hO2ErKylidChlLHQsaVthXSxuLHIsbyk7ZWxzZSBidChlLHQsaSxuLHIsbyl9ZnVuY3Rpb24gVHQoZSx0KXtlLm5hbWU9cyh0Lm5hbWUsZS5uYW1lKX1mdW5jdGlvbiB4dChlLHQsaSxuKXt2YXIgcj10LmRlc2NyaXB0aW9uO2wocikmJkN0KFN0cmluZyxlLCJkZXNjcmlwdGlvbiIscix2b2lkIDAsbixpKX1mdW5jdGlvbiBBdChlLHQsaSxuKXt2YXIgcj10LnBvc2l0aW9uO2wocikmJkV0KGUsInBvc2l0aW9uIixyLHZvaWQgMCxuLGkpfWZ1bmN0aW9uIFB0KGUsaSxuLHIpe3ZhciBvPWkudmlld0Zyb207bChvKSYmQ3QodCxlLCJ2aWV3RnJvbSIsbyx2b2lkIDAscixuKX1mdW5jdGlvbiBNdChlLHQsaSxuKXt2YXIgcj10Lm9yaWVudGF0aW9uO2wocikmJkN0KGIsZSwib3JpZW50YXRpb24iLHIsdm9pZCAwLG4saSl9ZnVuY3Rpb24gSXQoZSxpLG4pe3ZhciByLG8sYT1pLnJlZmVyZW5jZXM7aWYobChhKSl7dmFyIHM9W107Zm9yKHI9MCxvPWEubGVuZ3RoO28+cjtyKyspcy5wdXNoKGh0KG4sYVtyXSkpO3ZhciB1PWkuaW50ZXJ2YWw7bCh1KT8odT1QLmZyb21Jc284NjAxKHUpLGUucG9zaXRpb25zIGluc3RhbmNlb2YgRnx8KGUucG9zaXRpb25zPW5ldyBGLHUuZGF0YT1uZXcgaXQocyksZS5wb3NpdGlvbnMuaW50ZXJ2YWxzLmFkZEludGVydmFsKHUpKSk6ZS5wb3NpdGlvbnM9bmV3IGl0KHMpfWVsc2V7dmFyIGM9W10saD1pLmNhcnRlc2lhbjtpZihsKGgpKXtmb3Iocj0wLG89aC5sZW5ndGg7bz5yO3IrPTMpYy5wdXNoKG5ldyB0KGhbcl0saFtyKzFdLGhbcisyXSkpO2kuYXJyYXk9Y31lbHNlIGlmKGg9aS5jYXJ0b2dyYXBoaWNSYWRpYW5zLGwoaCkpe2ZvcihyPTAsbz1oLmxlbmd0aDtvPnI7cis9MylRdC5sb25naXR1ZGU9aFtyXSxRdC5sYXRpdHVkZT1oW3IrMV0sUXQuaGVpZ2h0PWhbcisyXSxjLnB1c2goZC5XR1M4NC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihRdCkpO2kuYXJyYXk9Y31lbHNlIGlmKGg9aS5jYXJ0b2dyYXBoaWNEZWdyZWVzLGwoaCkpe2ZvcihyPTAsbz1oLmxlbmd0aDtvPnI7cis9MyljLnB1c2godC5mcm9tRGVncmVlcyhoW3JdLGhbcisxXSxoW3IrMl0pKTtpLmFycmF5PWN9bChpLmFycmF5KSYmQ3QoQXJyYXksZSwicG9zaXRpb25zIixpLHZvaWQgMCx2b2lkIDAsbil9fWZ1bmN0aW9uIER0KGUsdCxpKXtpZihsKHQpKWlmKHYodCkpZm9yKHZhciBuPXQubGVuZ3RoLHI9MDtuPnI7cisrKUl0KGUsdFtyXSxpKTtlbHNlIEl0KGUsdCxpKX1mdW5jdGlvbiBPdChlLHQpe3ZhciBpLG49dC5hdmFpbGFiaWxpdHk7aWYobChuKSl7dmFyIHI7aWYodihuKSlmb3IodmFyIG89bi5sZW5ndGgsYT0wO28+YTthKyspbChyKXx8KHI9bmV3IE0pLHRpLmlzbzg2MDE9blthXSxpPVAuZnJvbUlzbzg2MDEodGkpLHIuYWRkSW50ZXJ2YWwoaSk7ZWxzZSB0aS5pc284NjAxPW4saT1QLmZyb21Jc284NjAxKHRpKSxyPW5ldyBNLHIuYWRkSW50ZXJ2YWwoaSk7ZS5hdmFpbGFiaWxpdHk9cn19ZnVuY3Rpb24gUnQoaSxuLHIsYSl7dmFyIHM9bi5iaWxsYm9hcmQ7aWYobChzKSl7dmFyIHUsYz1zLmludGVydmFsO2woYykmJih0aS5pc284NjAxPWMsdT1QLmZyb21Jc284NjAxKHRpKSk7dmFyIGQ9aS5iaWxsYm9hcmQ7bChkKXx8KGkuYmlsbGJvYXJkPWQ9bmV3IE4pLEN0KG8sZCwiY29sb3IiLHMuY29sb3IsdSxhLHIpLEN0KHQsZCwiZXllT2Zmc2V0IixzLmV5ZU9mZnNldCx1LGEsciksQ3QoSSxkLCJob3Jpem9udGFsT3JpZ2luIixzLmhvcml6b250YWxPcmlnaW4sdSxhLHIpLEN0KEltYWdlLGQsImltYWdlIixzLmltYWdlLHUsYSxyKSxDdChlLGQsInBpeGVsT2Zmc2V0IixzLnBpeGVsT2Zmc2V0LHUsYSxyKSxDdChOdW1iZXIsZCwic2NhbGUiLHMuc2NhbGUsdSxhLHIpLEN0KE51bWJlcixkLCJyb3RhdGlvbiIscy5yb3RhdGlvbix1LGEsciksQ3QodCxkLCJhbGlnbmVkQXhpcyIscy5hbGlnbmVkQXhpcyx1LGEsciksQ3QoQm9vbGVhbixkLCJzaG93IixzLnNob3csdSxhLHIpLEN0KE8sZCwidmVydGljYWxPcmlnaW4iLHMudmVydGljYWxPcmlnaW4sdSxhLHIpfX1mdW5jdGlvbiBMdChlLHQpe3ZhciBpPWUudmVyc2lvbjtpZihsKGkpJiYic3RyaW5nIj09dHlwZW9mIGkpe3ZhciBuPWkuc3BsaXQoIi4iKTtpZigyPT09bi5sZW5ndGgpe2lmKCIxIiE9PW5bMF0pdGhyb3cgbmV3IHgoIkNlc2l1bSBvbmx5IHN1cHBvcnRzIENaTUwgdmVyc2lvbiAxLiIpO3QuX3ZlcnNpb249aX19aWYoIWwodC5fdmVyc2lvbikpdGhyb3cgbmV3IHgoIkNaTUwgdmVyc2lvbiBpbmZvcm1hdGlvbiBpbnZhbGlkLiAgSXQgaXMgZXhwZWN0ZWQgdG8gYmUgYSBwcm9wZXJ0eSBvbiB0aGUgZG9jdW1lbnQgb2JqZWN0IGluIHRoZSA8TWFqb3I+LjxNaW5vcj4gdmVyc2lvbiBmb3JtYXQuIik7dmFyIHI9dC5fZG9jdW1lbnRQYWNrZXQ7bChlLm5hbWUpJiYoci5uYW1lPWUubmFtZSk7dmFyIG89ZS5jbG9jaztpZihsKG8pKXt2YXIgYT1yLmNsb2NrO2woYSk/KGEuaW50ZXJ2YWw9cyhvLmludGVydmFsLGEuaW50ZXJ2YWwpLGEuY3VycmVudFRpbWU9cyhvLmN1cnJlbnRUaW1lLGEuY3VycmVudFRpbWUpLGEucmFuZ2U9cyhvLnJhbmdlLGEucmFuZ2UpLGEuc3RlcD1zKG8uc3RlcCxhLnN0ZXApLGEubXVsdGlwbGllcj1zKG8ubXVsdGlwbGllcixhLm11bHRpcGxpZXIpKTpyLmNsb2NrPXtpbnRlcnZhbDpvLmludGVydmFsLGN1cnJlbnRUaW1lOm8uY3VycmVudFRpbWUscmFuZ2U6by5yYW5nZSxzdGVwOm8uc3RlcCxtdWx0aXBsaWVyOm8ubXVsdGlwbGllcn19fWZ1bmN0aW9uIE50KGUsdCxpLG4pe3ZhciByPXQuZWxsaXBzZTtpZihsKHIpKXt2YXIgYSxzPXIuaW50ZXJ2YWw7bChzKSYmKHRpLmlzbzg2MDE9cyxhPVAuZnJvbUlzbzg2MDEodGkpKTt2YXIgdT1lLmVsbGlwc2U7bCh1KXx8KGUuZWxsaXBzZT11PW5ldyBHKSxDdChCb29sZWFuLHUsInNob3ciLHIuc2hvdyxhLG4saSksQ3QoTnVtYmVyLHUsInJvdGF0aW9uIixyLnJvdGF0aW9uLGEsbixpKSxDdChOdW1iZXIsdSwic2VtaU1ham9yQXhpcyIsci5zZW1pTWFqb3JBeGlzLGEsbixpKSxDdChOdW1iZXIsdSwic2VtaU1pbm9yQXhpcyIsci5zZW1pTWlub3JBeGlzLGEsbixpKSxDdChOdW1iZXIsdSwiaGVpZ2h0IixyLmhlaWdodCxhLG4saSksQ3QoTnVtYmVyLHUsImV4dHJ1ZGVkSGVpZ2h0IixyLmV4dHJ1ZGVkSGVpZ2h0LGEsbixpKSxDdChOdW1iZXIsdSwiZ3JhbnVsYXJpdHkiLHIuZ3JhbnVsYXJpdHksYSxuLGkpLEN0KE51bWJlcix1LCJzdFJvdGF0aW9uIixyLnN0Um90YXRpb24sYSxuLGkpLFN0KHUsIm1hdGVyaWFsIixyLm1hdGVyaWFsLGEsbixpKSxDdChCb29sZWFuLHUsImZpbGwiLHIuZmlsbCxhLG4saSksQ3QoQm9vbGVhbix1LCJvdXRsaW5lIixyLm91dGxpbmUsYSxuLGkpLEN0KG8sdSwib3V0bGluZUNvbG9yIixyLm91dGxpbmVDb2xvcixhLG4saSksQ3QoTnVtYmVyLHUsIm51bWJlck9mVmVydGljYWxMaW5lcyIsci5udW1iZXJPZlZlcnRpY2FsTGluZXMsYSxuLGkpfX1mdW5jdGlvbiB6dChlLGksbixyKXt2YXIgYT1pLmVsbGlwc29pZDtpZihsKGEpKXt2YXIgcyx1PWEuaW50ZXJ2YWw7bCh1KSYmKHRpLmlzbzg2MDE9dSxzPVAuZnJvbUlzbzg2MDEodGkpKTt2YXIgYz1lLmVsbGlwc29pZDtsKGMpfHwoZS5lbGxpcHNvaWQ9Yz1uZXcgSCksQ3QoQm9vbGVhbixjLCJzaG93IixhLnNob3cscyxyLG4pLEN0KHQsYywicmFkaWkiLGEucmFkaWkscyxyLG4pLFN0KGMsIm1hdGVyaWFsIixhLm1hdGVyaWFsLHMscixuKSxDdChCb29sZWFuLGMsImZpbGwiLGEuZmlsbCxzLHIsbiksQ3QoQm9vbGVhbixjLCJvdXRsaW5lIixhLm91dGxpbmUscyxyLG4pLEN0KG8sYywib3V0bGluZUNvbG9yIixhLm91dGxpbmVDb2xvcixzLHIsbil9fWZ1bmN0aW9uIEJ0KGksbixyLGEpe3ZhciBzPW4ubGFiZWw7aWYobChzKSl7dmFyIHUsYz1zLmludGVydmFsO2woYykmJih0aS5pc284NjAxPWMsdT1QLmZyb21Jc284NjAxKHRpKSk7dmFyIGQ9aS5sYWJlbDtsKGQpfHwoaS5sYWJlbD1kPW5ldyBYKSxDdChvLGQsImZpbGxDb2xvciIscy5maWxsQ29sb3IsdSxhLHIpLEN0KG8sZCwib3V0bGluZUNvbG9yIixzLm91dGxpbmVDb2xvcix1LGEsciksQ3QoTnVtYmVyLGQsIm91dGxpbmVXaWR0aCIscy5vdXRsaW5lV2lkdGgsdSxhLHIpLEN0KHQsZCwiZXllT2Zmc2V0IixzLmV5ZU9mZnNldCx1LGEsciksQ3QoSSxkLCJob3Jpem9udGFsT3JpZ2luIixzLmhvcml6b250YWxPcmlnaW4sdSxhLHIpLEN0KFN0cmluZyxkLCJ0ZXh0IixzLnRleHQsdSxhLHIpLEN0KGUsZCwicGl4ZWxPZmZzZXQiLHMucGl4ZWxPZmZzZXQsdSxhLHIpLEN0KE51bWJlcixkLCJzY2FsZSIscy5zY2FsZSx1LGEsciksQ3QoQm9vbGVhbixkLCJzaG93IixzLnNob3csdSxhLHIpLEN0KE8sZCwidmVydGljYWxPcmlnaW4iLHMudmVydGljYWxPcmlnaW4sdSxhLHIpLEN0KFN0cmluZyxkLCJmb250IixzLmZvbnQsdSxhLHIpLEN0KEQsZCwic3R5bGUiLHMuc3R5bGUsdSxhLHIpfX1mdW5jdGlvbiBGdChlLHQsaSxuKXt2YXIgcj10Lm1vZGVsO2lmKGwocikpe3ZhciBvLGE9ci5pbnRlcnZhbDtsKGEpJiYodGkuaXNvODYwMT1hLG89UC5mcm9tSXNvODYwMSh0aSkpO3ZhciBzPWUubW9kZWw7bChzKXx8KGUubW9kZWw9cz1uZXcgWiksQ3QoQm9vbGVhbixzLCJzaG93IixyLnNob3csbyxuLGkpLEN0KE51bWJlcixzLCJzY2FsZSIsci5zY2FsZSxvLG4saSksQ3QoTnVtYmVyLHMsIm1pbmltdW1QaXhlbFNpemUiLHIubWluaW11bVBpeGVsU2l6ZSxvLG4saSksQ3QoUixzLCJ1cmkiLHIuZ2x0ZixvLG4saSl9fWZ1bmN0aW9uIFZ0KGUsdCxpLG4pe3ZhciByPXQucGF0aDtpZihsKHIpKXt2YXIgbyxhPXIuaW50ZXJ2YWw7bChhKSYmKHRpLmlzbzg2MDE9YSxvPVAuZnJvbUlzbzg2MDEodGkpKTt2YXIgcz1lLnBhdGg7bChzKXx8KGUucGF0aD1zPW5ldyBKKSxDdChCb29sZWFuLHMsInNob3ciLHIuc2hvdyxvLG4saSksQ3QoTnVtYmVyLHMsIndpZHRoIixyLndpZHRoLG8sbixpKSxDdChOdW1iZXIscywicmVzb2x1dGlvbiIsci5yZXNvbHV0aW9uLG8sbixpKSxDdChOdW1iZXIscywibGVhZFRpbWUiLHIubGVhZFRpbWUsbyxuLGkpLEN0KE51bWJlcixzLCJ0cmFpbFRpbWUiLHIudHJhaWxUaW1lLG8sbixpKSxTdChzLCJtYXRlcmlhbCIsci5tYXRlcmlhbCxvLG4saSl9fWZ1bmN0aW9uIGt0KGUsdCxpLG4pe3ZhciByPXQucG9pbnQ7aWYobChyKSl7dmFyIGEscz1yLmludGVydmFsO2wocykmJih0aS5pc284NjAxPXMsYT1QLmZyb21Jc284NjAxKHRpKSk7dmFyIHU9ZS5wb2ludDtsKHUpfHwoZS5wb2ludD11PW5ldyBLKSxDdChvLHUsImNvbG9yIixyLmNvbG9yLGEsbixpKSxDdChOdW1iZXIsdSwicGl4ZWxTaXplIixyLnBpeGVsU2l6ZSxhLG4saSksQ3Qobyx1LCJvdXRsaW5lQ29sb3IiLHIub3V0bGluZUNvbG9yLGEsbixpKSxDdChOdW1iZXIsdSwib3V0bGluZVdpZHRoIixyLm91dGxpbmVXaWR0aCxhLG4saSksQ3QoQm9vbGVhbix1LCJzaG93IixyLnNob3csYSxuLGkpfX1mdW5jdGlvbiBVdChlLHQsaSxuKXt2YXIgcj10LnBvbHlnb247aWYobChyKSl7dmFyIGEscz1yLmludGVydmFsO2wocykmJih0aS5pc284NjAxPXMsYT1QLmZyb21Jc284NjAxKHRpKSk7dmFyIHU9ZS5wb2x5Z29uO2wodSl8fChlLnBvbHlnb249dT1uZXcgUSksQ3QoQm9vbGVhbix1LCJzaG93IixyLnNob3csYSxuLGkpLFN0KHUsIm1hdGVyaWFsIixyLm1hdGVyaWFsLGEsbixpKSxDdChOdW1iZXIsdSwiaGVpZ2h0IixyLmhlaWdodCxhLG4saSksQ3QoTnVtYmVyLHUsImV4dHJ1ZGVkSGVpZ2h0IixyLmV4dHJ1ZGVkSGVpZ2h0LGEsbixpKSxDdChOdW1iZXIsdSwiZ3JhbnVsYXJpdHkiLHIuZ3JhbnVsYXJpdHksYSxuLGkpLEN0KE51bWJlcix1LCJzdFJvdGF0aW9uIixyLnN0Um90YXRpb24sYSxuLGkpLEN0KEJvb2xlYW4sdSwiZmlsbCIsci5maWxsLGEsbixpKSxDdChCb29sZWFuLHUsIm91dGxpbmUiLHIub3V0bGluZSxhLG4saSksQ3Qobyx1LCJvdXRsaW5lQ29sb3IiLHIub3V0bGluZUNvbG9yLGEsbixpKSxDdChCb29sZWFuLHUsInBlclBvc2l0aW9uSGVpZ2h0IixyLnBlclBvc2l0aW9uSGVpZ2h0LGEsbixpKSxEdCh1LHIucG9zaXRpb25zLGkpfX1mdW5jdGlvbiBXdChlLHQsaSxuKXt2YXIgcj10LnJlY3RhbmdsZTtpZihsKHIpKXt2YXIgYSxzPXIuaW50ZXJ2YWw7bChzKSYmKHRpLmlzbzg2MDE9cyxhPVAuZnJvbUlzbzg2MDEodGkpKTt2YXIgdT1lLnJlY3RhbmdsZTtsKHUpfHwoZS5yZWN0YW5nbGU9dT1uZXcgbnQpLEN0KEJvb2xlYW4sdSwic2hvdyIsci5zaG93LGEsbixpKSxDdChTLHUsImNvb3JkaW5hdGVzIixyLmNvb3JkaW5hdGVzLGEsbixpKSxTdCh1LCJtYXRlcmlhbCIsci5tYXRlcmlhbCxhLG4saSksQ3QoTnVtYmVyLHUsImhlaWdodCIsci5oZWlnaHQsYSxuLGkpLEN0KE51bWJlcix1LCJleHRydWRlZEhlaWdodCIsci5leHRydWRlZEhlaWdodCxhLG4saSksQ3QoTnVtYmVyLHUsImdyYW51bGFyaXR5IixyLmdyYW51bGFyaXR5LGEsbixpKSxDdChOdW1iZXIsdSwicm90YXRpb24iLHIucm90YXRpb24sYSxuLGkpLEN0KE51bWJlcix1LCJzdFJvdGF0aW9uIixyLnN0Um90YXRpb24sYSxuLGkpLEN0KEJvb2xlYW4sdSwiZmlsbCIsci5maWxsLGEsbixpKSxDdChCb29sZWFuLHUsIm91dGxpbmUiLHIub3V0bGluZSxhLG4saSksQ3Qobyx1LCJvdXRsaW5lQ29sb3IiLHIub3V0bGluZUNvbG9yLGEsbixpKSxDdChCb29sZWFuLHUsImNsb3NlQm90dG9tIixyLmNsb3NlQm90dG9tLGEsbixpKSxDdChCb29sZWFuLHUsImNsb3NlVG9wIixyLmNsb3NlVG9wLGEsbixpKQp9fWZ1bmN0aW9uIEd0KGUsdCxpLG4pe3ZhciByPXQud2FsbDtpZihsKHIpKXt2YXIgYSxzPXIuaW50ZXJ2YWw7bChzKSYmKHRpLmlzbzg2MDE9cyxhPVAuZnJvbUlzbzg2MDEodGkpKTt2YXIgdT1lLndhbGw7bCh1KXx8KGUud2FsbD11PW5ldyBkdCksQ3QoQm9vbGVhbix1LCJzaG93IixyLnNob3csYSxuLGkpLFN0KHUsIm1hdGVyaWFsIixyLm1hdGVyaWFsLGEsbixpKSxDdChBcnJheSx1LCJtaW5pbXVtSGVpZ2h0cyIsci5taW5pbXVtSGVpZ2h0cyxhLG4saSksQ3QoQXJyYXksdSwibWF4aW11bUhlaWdodHMiLHIubWF4aW11bUhlaWdodHMsYSxuLGkpLEN0KE51bWJlcix1LCJncmFudWxhcml0eSIsci5ncmFudWxhcml0eSxhLG4saSksQ3QoQm9vbGVhbix1LCJmaWxsIixyLmZpbGwsYSxuLGkpLEN0KEJvb2xlYW4sdSwib3V0bGluZSIsci5vdXRsaW5lLGEsbixpKSxDdChvLHUsIm91dGxpbmVDb2xvciIsci5vdXRsaW5lQ29sb3IsYSxuLGkpLER0KHUsci5wb3NpdGlvbnMsaSl9fWZ1bmN0aW9uIEh0KGUsdCxpLG4pe3ZhciByPXQucG9seWxpbmU7aWYobChyKSl7dmFyIG8sYT1yLmludGVydmFsO2woYSkmJih0aS5pc284NjAxPWEsbz1QLmZyb21Jc284NjAxKHRpKSk7dmFyIHM9ZS5wb2x5bGluZTtsKHMpfHwoZS5wb2x5bGluZT1zPW5ldyBldCksQ3QoQm9vbGVhbixzLCJzaG93IixyLnNob3csbyxuLGkpLEN0KE51bWJlcixzLCJ3aWR0aCIsci53aWR0aCxvLG4saSksU3QocywibWF0ZXJpYWwiLHIubWF0ZXJpYWwsbyxuLGkpLEN0KEJvb2xlYW4scywiZm9sbG93U3VyZmFjZSIsci5mb2xsb3dTdXJmYWNlLG8sbixpKSxDdChOdW1iZXIscywiZ3JhbnVsYXJpdHkiLHIuZ3JhbnVsYXJpdHksbyxuLGkpLER0KHMsci5wb3NpdGlvbnMsaSl9fWZ1bmN0aW9uIHF0KGUsdCxpLG4scil7dmFyIG89ZS5pZDtpZihsKG8pfHwobz1hKCkpLFp0PW8sIWwoci5fdmVyc2lvbikmJiJkb2N1bWVudCIhPT1vKXRocm93IG5ldyB4KCJUaGUgZmlyc3QgQ1pNTCBwYWNrZXQgaXMgcmVxdWlyZWQgdG8gYmUgdGhlIGRvY3VtZW50IG9iamVjdC4iKTtpZihlWyJkZWxldGUiXT09PSEwKXQucmVtb3ZlQnlJZChvKTtlbHNlIGlmKCJkb2N1bWVudCI9PT1vKUx0KGUscik7ZWxzZXt2YXIgcz10LmdldE9yQ3JlYXRlRW50aXR5KG8pLHU9ZS5wYXJlbnQ7bCh1KSYmKHMucGFyZW50PXQuZ2V0T3JDcmVhdGVFbnRpdHkodSkpO2Zvcih2YXIgYz1pLmxlbmd0aC0xO2M+LTE7Yy0tKWlbY10ocyxlLHQsbil9WnQ9dm9pZCAwfWZ1bmN0aW9uIGp0KGUpe3ZhciB0LGk9ZS5fZG9jdW1lbnRQYWNrZXQuY2xvY2s7aWYoIWwoaSkpe2lmKCFsKGUuX2Nsb2NrKSl7dmFyIG89ZS5fZW50aXR5Q29sbGVjdGlvbi5jb21wdXRlQXZhaWxhYmlsaXR5KCk7aWYoIW8uc3RhcnQuZXF1YWxzKGcuTUlOSU1VTV9WQUxVRSkpe3ZhciBhPW8uc3RhcnQsdT1vLnN0b3AsYz1fLnNlY29uZHNEaWZmZXJlbmNlKHUsYSksZD1NYXRoLnJvdW5kKGMvMTIwKTtyZXR1cm4gdD1uZXcgVyx0LnN0YXJ0VGltZT1fLmNsb25lKGEpLHQuc3RvcFRpbWU9Xy5jbG9uZSh1KSx0LmNsb2NrUmFuZ2U9bi5MT09QX1NUT1AsdC5tdWx0aXBsaWVyPWQsdC5jdXJyZW50VGltZT1fLmNsb25lKGEpLHQuY2xvY2tTdGVwPXIuU1lTVEVNX0NMT0NLX01VTFRJUExJRVIsZS5fY2xvY2s9dCwhMH19cmV0dXJuITF9aWYobChlLl9jbG9jayk/dD1lLl9jbG9jay5jbG9uZSgpOih0PW5ldyBXLHQuc3RhcnRUaW1lPWcuTUlOSU1VTV9WQUxVRS5jbG9uZSgpLHQuc3RvcFRpbWU9Zy5NQVhJTVVNX1ZBTFVFLmNsb25lKCksdC5jdXJyZW50VGltZT1nLk1JTklNVU1fVkFMVUUuY2xvbmUoKSx0LmNsb2NrUmFuZ2U9bi5MT09QX1NUT1AsdC5jbG9ja1N0ZXA9ci5TWVNURU1fQ0xPQ0tfTVVMVElQTElFUix0Lm11bHRpcGxpZXI9MSksbChpLmludGVydmFsKSl7dGkuaXNvODYwMT1pLmludGVydmFsO3ZhciBoPVAuZnJvbUlzbzg2MDEodGkpO3Quc3RhcnRUaW1lPWguc3RhcnQsdC5zdG9wVGltZT1oLnN0b3B9cmV0dXJuIGwoaS5jdXJyZW50VGltZSkmJih0LmN1cnJlbnRUaW1lPV8uZnJvbUlzbzg2MDEoaS5jdXJyZW50VGltZSkpLGwoaS5yYW5nZSkmJih0LmNsb2NrUmFuZ2U9cyhuW2kucmFuZ2VdLG4uTE9PUF9TVE9QKSksbChpLnN0ZXApJiYodC5jbG9ja1N0ZXA9cyhyW2kuc3RlcF0sci5TWVNURU1fQ0xPQ0tfTVVMVElQTElFUikpLGwoaS5tdWx0aXBsaWVyKSYmKHQubXVsdGlwbGllcj1pLm11bHRpcGxpZXIpLHQuZXF1YWxzKGUuX2Nsb2NrKT8hMTooZS5fY2xvY2s9dC5jbG9uZShlLl9jbG9jayksITApfWZ1bmN0aW9uIFl0KGUsdCxpKXt2YXIgbj1lLl9lbnRpdHlDb2xsZWN0aW9uO24uc3VzcGVuZEV2ZW50cygpLG5pLl9wcm9jZXNzQ3ptbCh0LG4saSx2b2lkIDAsZSk7dmFyIHI9anQoZSksbz1lLl9kb2N1bWVudFBhY2tldDtsKG8ubmFtZSkmJmUuX25hbWUhPT1vLm5hbWU/KGUuX25hbWU9by5uYW1lLHI9ITApOiFsKGUuX25hbWUpJiZsKGkpJiYoZS5fbmFtZT1mKGkpLHI9ITApLG4ucmVzdW1lRXZlbnRzKCksciYmZS5fY2hhbmdlZC5yYWlzZUV2ZW50KGUpfWZ1bmN0aW9uIFh0KGUsdCl7ZS5faXNMb2FkaW5nIT09dCYmKGUuX2lzTG9hZGluZz10LGUuX2xvYWRpbmcucmFpc2VFdmVudChlLHQpKX12YXIgWnQsSnQ9bmV3IHQsS3Q9bmV3IEEsUXQ9bmV3IGksJHQ9bmV3IFAsZWk9e0hFUk1JVEU6cCxMQUdSQU5HRTp5LExJTkVBUjpDfSx0aT17aXNvODYwMTp2b2lkIDB9LGlpPWZ1bmN0aW9uKCl7dGhpcy5uYW1lPXZvaWQgMCx0aGlzLmNsb2NrPXZvaWQgMH0sbmk9ZnVuY3Rpb24oZSl7dGhpcy5fbmFtZT1lLHRoaXMuX2NoYW5nZWQ9bmV3IGgsdGhpcy5fZXJyb3I9bmV3IGgsdGhpcy5faXNMb2FkaW5nPSExLHRoaXMuX2xvYWRpbmc9bmV3IGgsdGhpcy5fY2xvY2s9dm9pZCAwLHRoaXMuX2RvY3VtZW50UGFja2V0PW5ldyBpaSx0aGlzLl92ZXJzaW9uPXZvaWQgMCx0aGlzLl9lbnRpdHlDb2xsZWN0aW9uPW5ldyBxfTtyZXR1cm4gdShuaS5wcm90b3R5cGUse25hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9uYW1lfX0sY2xvY2s6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jbG9ja319LGVudGl0aWVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW50aXR5Q29sbGVjdGlvbn19LGlzTG9hZGluZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzTG9hZGluZ319LGNoYW5nZWRFdmVudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoYW5nZWR9fSxlcnJvckV2ZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXJyb3J9fSxsb2FkaW5nRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2FkaW5nfX19KSxuaS51cGRhdGVycz1bUnQsTnQsenQsQnQsRnQsVHQseHQsVnQsa3QsVXQsSHQsV3QsQXQsUHQsR3QsTXQsT3RdLG5pLnByb3RvdHlwZS5wcm9jZXNzPWZ1bmN0aW9uKGUsdCl7WXQodGhpcyxlLHQpfSxuaS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihlLHQpe3RoaXMuX3ZlcnNpb249dm9pZCAwLHRoaXMuX2RvY3VtZW50UGFja2V0PW5ldyBpaSx0aGlzLl9lbnRpdHlDb2xsZWN0aW9uLnJlbW92ZUFsbCgpLFl0KHRoaXMsZSx0KX0sbmkucHJvdG90eXBlLnByb2Nlc3NVcmw9ZnVuY3Rpb24oZSl7WHQodGhpcywhMCk7dmFyIHQ9dGhpcztyZXR1cm4gTCh3KGUpLGZ1bmN0aW9uKGkpe3QucHJvY2VzcyhpLGUpLFh0KHQsITEpfSkub3RoZXJ3aXNlKGZ1bmN0aW9uKGUpe3JldHVybiBYdCh0LCExKSx0Ll9lcnJvci5yYWlzZUV2ZW50KHQsZSksTC5yZWplY3QoZSl9KX0sbmkucHJvdG90eXBlLmxvYWRVcmw9ZnVuY3Rpb24oZSl7WHQodGhpcywhMCk7dmFyIHQ9dGhpcztyZXR1cm4gTCh3KGUpLGZ1bmN0aW9uKGkpe3QubG9hZChpLGUpLFh0KHQsITEpfSkub3RoZXJ3aXNlKGZ1bmN0aW9uKGUpe3JldHVybiBYdCh0LCExKSx0Ll9lcnJvci5yYWlzZUV2ZW50KHQsZSksTC5yZWplY3QoZSl9KX0sbmkucHJvY2Vzc1BhY2tldERhdGE9Q3QsbmkucHJvY2Vzc1Bvc2l0aW9uUGFja2V0RGF0YT1FdCxuaS5wcm9jZXNzTWF0ZXJpYWxQYWNrZXREYXRhPVN0LG5pLl9wcm9jZXNzQ3ptbD1mdW5jdGlvbihlLHQsaSxuLHIpe2lmKG49bChuKT9uOm5pLnVwZGF0ZXJzLHYoZSkpZm9yKHZhciBvPTAsYT1lLmxlbmd0aDthPm87bysrKXF0KGVbb10sdCxuLGkscik7ZWxzZSBxdChlLHQsbixpLHIpfSxuaX0pLGRlZmluZSgiQ29yZS9pc0Nyb3NzT3JpZ2luVXJsIixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdCxpPWZ1bmN0aW9uKGkpe2UodCl8fCh0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKSksdC5ocmVmPXdpbmRvdy5sb2NhdGlvbi5ocmVmO3ZhciBuPXQuaG9zdCxyPXQucHJvdG9jb2w7cmV0dXJuIHQuaHJlZj1pLHQuaHJlZj10LmhyZWYsciE9PXQucHJvdG9jb2x8fG4hPT10Lmhvc3R9O3JldHVybiBpfSksZGVmaW5lKCJDb3JlL2xvYWRJbWFnZSIsWyIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2lzQ3Jvc3NPcmlnaW5VcmwiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz0vXmRhdGE6LyxhPWZ1bmN0aW9uKGksbil7cmV0dXJuIG49dChuLCEwKSxlKGksZnVuY3Rpb24odCl7dmFyIGk7aT1vLnRlc3QodCl8fCFuPyExOnIodCk7dmFyIHM9ZS5kZWZlcigpO3JldHVybiBhLmNyZWF0ZUltYWdlKHQsaSxzKSxzLnByb21pc2V9KX07cmV0dXJuIGEuY3JlYXRlSW1hZ2U9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPW5ldyBJbWFnZTtuLm9ubG9hZD1mdW5jdGlvbigpe2kucmVzb2x2ZShuKX0sbi5vbmVycm9yPWZ1bmN0aW9uKGUpe2kucmVqZWN0KGUpfSx0JiYobi5jcm9zc09yaWdpbj0iIiksbi5zcmM9ZX0sYS5kZWZhdWx0Q3JlYXRlSW1hZ2U9YS5jcmVhdGVJbWFnZSxhfSksZGVmaW5lKCJUaGlyZFBhcnR5L21lYXN1cmVUZXh0IixbXSxmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHQpfSx0PWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvPXQubWVhc3VyZVRleHQoaSksYT1lKHQuY2FudmFzLCJmb250LWZhbWlseSIpLHM9ZSh0LmNhbnZhcywiZm9udC1zaXplIikucmVwbGFjZSgicHgiLCIiKSxsPSEvXFMvLnRlc3QoaSk7by5mb250c2l6ZT1zO3ZhciB1PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3Uuc3R5bGUucG9zaXRpb249ImFic29sdXRlIix1LnN0eWxlLm9wYWNpdHk9MCx1LnN0eWxlLmZvbnQ9cysicHggIithLHUuaW5uZXJIVE1MPWkrIjxici8+IitpLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodSksby5sZWFkaW5nPTEuMipzO3ZhciBjPWUodSwiaGVpZ2h0Iik7aWYoYz1jLnJlcGxhY2UoInB4IiwiIiksYz49MipzJiYoby5sZWFkaW5nPTB8Yy8yKSxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHUpLGwpby5hc2NlbnQ9MCxvLmRlc2NlbnQ9MCxvLmJvdW5kcz17bWlueDowLG1heHg6by53aWR0aCxtaW55OjAsbWF4eTowfSxvLmhlaWdodD0wO2Vsc2V7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIiksaD0xMDA7ZC53aWR0aD1vLndpZHRoK2gsZC5oZWlnaHQ9MypzLGQuc3R5bGUub3BhY2l0eT0xLGQuc3R5bGUuZm9udEZhbWlseT1hLGQuc3R5bGUuZm9udFNpemU9czt2YXIgbT1kLmdldENvbnRleHQoIjJkIik7bS5mb250PXMrInB4ICIrYTt2YXIgZj1kLndpZHRoLHA9ZC5oZWlnaHQsdj1wLzI7bS5maWxsU3R5bGU9IndoaXRlIixtLmZpbGxSZWN0KC0xLC0xLGYrMixwKzIpLG4mJihtLnN0cm9rZVN0eWxlPSJibGFjayIsbS5saW5lV2lkdGg9dC5saW5lV2lkdGgsbS5zdHJva2VUZXh0KGksaC8yLHYpKSxyJiYobS5maWxsU3R5bGU9ImJsYWNrIixtLmZpbGxUZXh0KGksaC8yLHYpKTtmb3IodmFyIGc9bS5nZXRJbWFnZURhdGEoMCwwLGYscCkuZGF0YSxfPTAseT00KmYsQz1nLmxlbmd0aDsrK188QyYmMjU1PT09Z1tfXTspO3ZhciB3PTB8Xy95O2ZvcihfPUMtMTstLV8+MCYmMjU1PT09Z1tfXTspO3ZhciBFPTB8Xy95O2ZvcihfPTA7Qz5fJiYyNTU9PT1nW19dOylfKz15LF8+PUMmJihfPV8tQys0KTt2YXIgYj0wfF8leS80LFM9MTtmb3IoXz1DLTM7Xz49MCYmMjU1PT09Z1tfXTspXy09eSwwPl8mJihfPUMtMy00KlMrKyk7dmFyIFQ9MHxfJXkvNCsxO28uYXNjZW50PXYtdyxvLmRlc2NlbnQ9RS12LG8uYm91bmRzPXttaW54OmItaC8yLG1heHg6VC1oLzIsbWlueTowLG1heHk6RS13fSxvLmhlaWdodD0xKyhFLXcpfXJldHVybiBvfTtyZXR1cm4gdH0pLGRlZmluZSgiQ29yZS93cml0ZVRleHRUb0NhbnZhcyIsWyIuLi9UaGlyZFBhcnR5L21lYXN1cmVUZXh0IiwiLi9Db2xvciIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24obixyKXtpZigiIj09PW4pcmV0dXJuIHZvaWQgMDtyPWkocixpLkVNUFRZX09CSkVDVCk7dmFyIG89aShyLmZvbnQsIjEwcHggc2Fucy1zZXJpZiIpLGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7YS53aWR0aD1hLmhlaWdodD0xLGEuc3R5bGUuZm9udD1vO3ZhciBzPWEuZ2V0Q29udGV4dCgiMmQiKTtzLmZvbnQ9byxzLnRleHRCYXNlbGluZT1pKHIudGV4dEJhc2VsaW5lLCJib3R0b20iKSxhLnN0eWxlLnZpc2liaWxpdHk9ImhpZGRlbiIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTt2YXIgbD1pKHIuc3Ryb2tlLCExKSx1PWkoci5maWxsLCEwKSxjPTIqaShyLnN0cm9rZVdpZHRoLDEpO3MubGluZVdpZHRoPWM7dmFyIGQ9ZShzLG4sbCx1KTthLmRpbWVuc2lvbnM9ZCxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpLGEuc3R5bGUudmlzaWJpbGl0eT0iIjt2YXIgaD1kLmhlaWdodC1kLmFzY2VudDthLndpZHRoPWQud2lkdGgsYS5oZWlnaHQ9ZC5oZWlnaHQ7dmFyIG09YS5oZWlnaHQtaDtpZihzLmZvbnQ9byxsKXt2YXIgZj1pKHIuc3Ryb2tlQ29sb3IsdC5CTEFDSyk7cy5zdHJva2VTdHlsZT1mLnRvQ3NzQ29sb3JTdHJpbmcoKSxzLmxpbmVXaWR0aD1jLHMuc3Ryb2tlVGV4dChuLDAsbSl9aWYodSl7dmFyIHA9aShyLmZpbGxDb2xvcix0LldISVRFKTtzLmZpbGxTdHlsZT1wLnRvQ3NzQ29sb3JTdHJpbmcoKSxzLmZpbGxUZXh0KG4sMCxtKX1yZXR1cm4gYX07cmV0dXJuIG59KSxkZWZpbmUoIkNvcmUvUGluQnVpbGRlciIsWyIuL2J1aWxkTW9kdWxlVXJsIiwiLi9Db2xvciIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2xvYWRJbWFnZSIsIi4vd3JpdGVUZXh0VG9DYW52YXMiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGEoZSx0LGkpe2Uuc2F2ZSgpLGUuc2NhbGUoaS8yNCxpLzI0KSxlLmZpbGxTdHlsZT10LnRvQ3NzQ29sb3JTdHJpbmcoKSxlLnN0cm9rZVN0eWxlPXQuYnJpZ2h0ZW4oLjYsYykudG9Dc3NDb2xvclN0cmluZygpLGUubGluZVdpZHRoPS44NDYsZS5iZWdpblBhdGgoKSxlLm1vdmVUbyg2LjcyLC40MjIpLGUubGluZVRvKDE3LjI4LC40MjIpLGUuYmV6aWVyQ3VydmVUbygxOC41NTMsLjQyMiwxOS41NzcsMS43NTgsMTkuNTc3LDMuNDE1KSxlLmxpbmVUbygxOS41NzcsMTAuOTczKSxlLmJlemllckN1cnZlVG8oMTkuNTc3LDEyLjYzLDE4LjU1MywxMy45NjYsMTcuMjgyLDEzLjk2NiksZS5saW5lVG8oMTQuMzg2LDE0LjAwOCksZS5saW5lVG8oMTEuODI2LDIzLjU3OCksZS5saW5lVG8oOS42MTQsMTQuMDA4KSxlLmxpbmVUbyg2LjcxOSwxMy45NjUpLGUuYmV6aWVyQ3VydmVUbyg1LjQ0NiwxMy45ODMsNC40MjIsMTIuNjI5LDQuNDIyLDEwLjk3MiksZS5saW5lVG8oNC40MjIsMy40MTYpLGUuYmV6aWVyQ3VydmVUbyg0LjQyMywxLjc2LDUuNDQ3LC40MjMsNi43MTgsLjQyMyksZS5jbG9zZVBhdGgoKSxlLmZpbGwoKSxlLnN0cm9rZSgpLGUucmVzdG9yZSgpfWZ1bmN0aW9uIHMoZSxpLG4pe3ZhciByPW4vMi41LG89cixhPXI7aS53aWR0aD5pLmhlaWdodD9hPXIqKGkuaGVpZ2h0L2kud2lkdGgpOmkud2lkdGg8aS5oZWlnaHQmJihvPXIqKGkud2lkdGgvaS5oZWlnaHQpKTt2YXIgcz0obi1vKS8yLGw9Ny8yNCpuLWEvMjtlLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj0iZGVzdGluYXRpb24tb3V0IixlLmRyYXdJbWFnZShpLHMtMSxsLG8sYSksZS5kcmF3SW1hZ2UoaSxzLGwtMSxvLGEpLGUuZHJhd0ltYWdlKGkscysxLGwsbyxhKSxlLmRyYXdJbWFnZShpLHMsbCsxLG8sYSksZS5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249ImRlc3RpbmF0aW9uLW92ZXIiLGUuZmlsbFN0eWxlPXQuQkxBQ0sudG9Dc3NDb2xvclN0cmluZygpLGUuZmlsbFJlY3Qocy0xLGwtMSxvKzEsYSsxKSxlLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj0iZGVzdGluYXRpb24tb3V0IixlLmRyYXdJbWFnZShpLHMsbCxvLGEpLGUuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPSJkZXN0aW5hdGlvbi1vdmVyIixlLmZpbGxTdHlsZT10LldISVRFLnRvQ3NzQ29sb3JTdHJpbmcoKSxlLmZpbGxSZWN0KHMsbCxvLGEpfWZ1bmN0aW9uIGwoZSx0LG4sbCx1KXtkWzBdPWUsZFsxXT10LGRbMl09bixkWzNdPWw7dmFyIGM9SlNPTi5zdHJpbmdpZnkoZCksaD11W2NdO2lmKGkoaCkpcmV0dXJuIGg7dmFyIG09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7bS53aWR0aD1sLG0uaGVpZ2h0PWw7dmFyIGY9bS5nZXRDb250ZXh0KCIyZCIpO2lmKGEoZixuLGwpLGkoZSkpe3ZhciBwPXIoZSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gcyhmLGUsbCksdVtjXT1tLG19KTtyZXR1cm4gdVtjXT1wLHB9aWYoaSh0KSl7dmFyIHY9byh0LHtmb250OiJib2xkICIrbCsicHggc2Fucy1zZXJpZiJ9KTtzKGYsdixsKX1yZXR1cm4gdVtjXT1tLG19dmFyIHU9ZnVuY3Rpb24oKXt0aGlzLl9jYWNoZT17fX07dS5wcm90b3R5cGUuZnJvbUNvbG9yPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGwodm9pZCAwLHZvaWQgMCxlLHQsdGhpcy5fY2FjaGUpfSx1LnByb3RvdHlwZS5mcm9tVXJsPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gbChlLHZvaWQgMCx0LGksdGhpcy5fY2FjaGUpfSx1LnByb3RvdHlwZS5mcm9tTWFraUljb25JZD1mdW5jdGlvbih0LGksbil7cmV0dXJuIGwoZSgiQXNzZXRzL1RleHR1cmVzL21ha2kvIitlbmNvZGVVUklDb21wb25lbnQodCkrIi5wbmciKSx2b2lkIDAsaSxuLHRoaXMuX2NhY2hlKX0sdS5wcm90b3R5cGUuZnJvbVRleHQ9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBsKHZvaWQgMCxlLHQsaSx0aGlzLl9jYWNoZSl9O3ZhciBjPW5ldyB0LGQ9bmV3IEFycmF5KDQpO3JldHVybiB1fSksIWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Z1bmN0aW9uIGkodCl7dmFyIGksbj1lLmFyY3NbMD50P350OnRdLHI9blswXTtyZXR1cm4gZS50cmFuc2Zvcm0/KGk9WzAsMF0sbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lbMF0rPWVbMF0saVsxXSs9ZVsxXX0pKTppPW5bbi5sZW5ndGgtMV0sMD50P1tpLHJdOltyLGldfWZ1bmN0aW9uIG4oZSx0KXtmb3IodmFyIGkgaW4gZSl7dmFyIG49ZVtpXTtkZWxldGUgdFtuLnN0YXJ0XSxkZWxldGUgbi5zdGFydCxkZWxldGUgbi5lbmQsbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JbMD5lP35lOmVdPTF9KSxzLnB1c2gobil9fXZhciByPXt9LG89e30sYT17fSxzPVtdLGw9LTE7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbihpLG4pe3ZhciByLG89ZS5hcmNzWzA+aT9+aTppXTtvLmxlbmd0aDwzJiYhb1sxXVswXSYmIW9bMV1bMV0mJihyPXRbKytsXSx0W2xdPWksdFtuXT1yKX0pLHQuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdCxuLHI9aShlKSxzPXJbMF0sbD1yWzFdO2lmKHQ9YVtzXSlpZihkZWxldGUgYVt0LmVuZF0sdC5wdXNoKGUpLHQuZW5kPWwsbj1vW2xdKXtkZWxldGUgb1tuLnN0YXJ0XTt2YXIgdT1uPT09dD90OnQuY29uY2F0KG4pO29bdS5zdGFydD10LnN0YXJ0XT1hW3UuZW5kPW4uZW5kXT11fWVsc2Ugb1t0LnN0YXJ0XT1hW3QuZW5kXT10O2Vsc2UgaWYodD1vW2xdKWlmKGRlbGV0ZSBvW3Quc3RhcnRdLHQudW5zaGlmdChlKSx0LnN0YXJ0PXMsbj1hW3NdKXtkZWxldGUgYVtuLmVuZF07dmFyIGM9bj09PXQ/dDpuLmNvbmNhdCh0KTtvW2Muc3RhcnQ9bi5zdGFydF09YVtjLmVuZD10LmVuZF09Y31lbHNlIG9bdC5zdGFydF09YVt0LmVuZF09dDtlbHNlIHQ9W2VdLG9bdC5zdGFydD1zXT1hW3QuZW5kPWxdPXR9KSxuKGEsbyksbihvLGEpLHQuZm9yRWFjaChmdW5jdGlvbihlKXtyWzA+ZT9+ZTplXXx8cy5wdXNoKFtlXSl9KSxzfWZ1bmN0aW9uIHQodCxpLG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9MD5lP35lOmU7KGNbdF18fChjW3RdPVtdKSkucHVzaCh7aTplLGc6dX0pfWZ1bmN0aW9uIG8oZSl7ZS5mb3JFYWNoKHIpfWZ1bmN0aW9uIGEoZSl7ZS5mb3JFYWNoKG8pfWZ1bmN0aW9uIHMoZSl7Ikdlb21ldHJ5Q29sbGVjdGlvbiI9PT1lLnR5cGU/ZS5nZW9tZXRyaWVzLmZvckVhY2gocyk6ZS50eXBlIGluIGQmJih1PWUsZFtlLnR5cGVdKGUuYXJjcykpfXZhciBsPVtdO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7dmFyIHUsYz1bXSxkPXtMaW5lU3RyaW5nOm8sTXVsdGlMaW5lU3RyaW5nOmEsUG9seWdvbjphLE11bHRpUG9seWdvbjpmdW5jdGlvbihlKXtlLmZvckVhY2goYSl9fTtzKGkpLGMuZm9yRWFjaChhcmd1bWVudHMubGVuZ3RoPDM/ZnVuY3Rpb24oZSl7bC5wdXNoKGVbMF0uaSl9OmZ1bmN0aW9uKGUpe24oZVswXS5nLGVbZS5sZW5ndGgtMV0uZykmJmwucHVzaChlWzBdLmkpfSl9ZWxzZSBmb3IodmFyIGg9MCxtPXQuYXJjcy5sZW5ndGg7bT5oOysraClsLnB1c2goaCk7cmV0dXJue3R5cGU6Ik11bHRpTGluZVN0cmluZyIsYXJjczplKHQsbCl9fWZ1bmN0aW9uIGkodCxpKXtmdW5jdGlvbiByKGUpe2UuZm9yRWFjaChmdW5jdGlvbih0KXt0LmZvckVhY2goZnVuY3Rpb24odCl7KHNbdD0wPnQ/fnQ6dF18fChzW3RdPVtdKSkucHVzaChlKX0pfSksbC5wdXNoKGUpfWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGQoYSh0LHt0eXBlOiJQb2x5Z29uIixhcmNzOltlXX0pLmNvb3JkaW5hdGVzWzBdKT4wfXZhciBzPXt9LGw9W10sdT1bXTtyZXR1cm4gaS5mb3JFYWNoKGZ1bmN0aW9uKGUpeyJQb2x5Z29uIj09PWUudHlwZT9yKGUuYXJjcyk6Ik11bHRpUG9seWdvbiI9PT1lLnR5cGUmJmUuYXJjcy5mb3JFYWNoKHIpfSksbC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lmKCFlLl8pe3ZhciB0PVtdLGk9W2VdO2ZvcihlLl89MSx1LnB1c2godCk7ZT1pLnBvcCgpOyl0LnB1c2goZSksZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuZm9yRWFjaChmdW5jdGlvbihlKXtzWzA+ZT9+ZTplXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuX3x8KGUuXz0xLGkucHVzaChlKSl9KX0pfSl9fSksbC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2RlbGV0ZSBlLl99KSx7dHlwZToiTXVsdGlQb2x5Z29uIixhcmNzOnUubWFwKGZ1bmN0aW9uKGkpe3ZhciByPVtdO2lmKGkuZm9yRWFjaChmdW5jdGlvbihlKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3NbMD5lP35lOmVdLmxlbmd0aDwyJiZyLnB1c2goZSl9KX0pfSkscj1lKHQsciksKG49ci5sZW5ndGgpPjEpZm9yKHZhciBhLGw9byhpWzBdWzBdKSx1PTA7bj51OysrdSlpZihsPT09byhyW3VdKSl7YT1yWzBdLHJbMF09clt1XSxyW3VdPWE7YnJlYWt9cmV0dXJuIHJ9KX19ZnVuY3Rpb24gcihlLHQpe3JldHVybiJHZW9tZXRyeUNvbGxlY3Rpb24iPT09dC50eXBlP3t0eXBlOiJGZWF0dXJlQ29sbGVjdGlvbiIsZmVhdHVyZXM6dC5nZW9tZXRyaWVzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbyhlLHQpfSl9Om8oZSx0KX1mdW5jdGlvbiBvKGUsdCl7dmFyIGk9e3R5cGU6IkZlYXR1cmUiLGlkOnQuaWQscHJvcGVydGllczp0LnByb3BlcnRpZXN8fHt9LGdlb21ldHJ5OmEoZSx0KX07cmV0dXJuIG51bGw9PXQuaWQmJmRlbGV0ZSBpLmlkLGl9ZnVuY3Rpb24gYShlLHQpe2Z1bmN0aW9uIGkoZSx0KXt0Lmxlbmd0aCYmdC5wb3AoKTtmb3IodmFyIGksbj1jWzA+ZT9+ZTplXSxyPTAsbz1uLmxlbmd0aDtvPnI7KytyKXQucHVzaChpPW5bcl0uc2xpY2UoKSksdShpLHIpOzA+ZSYmcyh0LG8pfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGU9ZS5zbGljZSgpLHUoZSwwKSxlfWZ1bmN0aW9uIHIoZSl7Zm9yKHZhciB0PVtdLG49MCxyPWUubGVuZ3RoO3I+bjsrK24paShlW25dLHQpO3JldHVybiB0Lmxlbmd0aDwyJiZ0LnB1c2godFswXS5zbGljZSgpKSx0fWZ1bmN0aW9uIG8oZSl7Zm9yKHZhciB0PXIoZSk7dC5sZW5ndGg8NDspdC5wdXNoKHRbMF0uc2xpY2UoKSk7cmV0dXJuIHR9ZnVuY3Rpb24gYShlKXtyZXR1cm4gZS5tYXAobyl9ZnVuY3Rpb24gbChlKXt2YXIgdD1lLnR5cGU7cmV0dXJuIkdlb21ldHJ5Q29sbGVjdGlvbiI9PT10P3t0eXBlOnQsZ2VvbWV0cmllczplLmdlb21ldHJpZXMubWFwKGwpfTp0IGluIGQ/e3R5cGU6dCxjb29yZGluYXRlczpkW3RdKGUpfTpudWxsfXZhciB1PXAoZS50cmFuc2Zvcm0pLGM9ZS5hcmNzLGQ9e1BvaW50OmZ1bmN0aW9uKGUpe3JldHVybiBuKGUuY29vcmRpbmF0ZXMpfSxNdWx0aVBvaW50OmZ1bmN0aW9uKGUpe3JldHVybiBlLmNvb3JkaW5hdGVzLm1hcChuKX0sTGluZVN0cmluZzpmdW5jdGlvbihlKXtyZXR1cm4gcihlLmFyY3MpfSxNdWx0aUxpbmVTdHJpbmc6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuYXJjcy5tYXAocil9LFBvbHlnb246ZnVuY3Rpb24oZSl7cmV0dXJuIGEoZS5hcmNzKX0sTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKGUpe3JldHVybiBlLmFyY3MubWFwKGEpfX07cmV0dXJuIGwodCl9ZnVuY3Rpb24gcyhlLHQpe2Zvcih2YXIgaSxuPWUubGVuZ3RoLHI9bi10O3I8LS1uOylpPWVbcl0sZVtyKytdPWVbbl0sZVtuXT1pfWZ1bmN0aW9uIGwoZSx0KXtmb3IodmFyIGk9MCxuPWUubGVuZ3RoO24+aTspe3ZhciByPWkrbj4+PjE7ZVtyXTx0P2k9cisxOm49cn1yZXR1cm4gaX1mdW5jdGlvbiB1KGUpe2Z1bmN0aW9uIHQoZSx0KXtlLmZvckVhY2goZnVuY3Rpb24oZSl7MD5lJiYoZT1+ZSk7dmFyIGk9cltlXTtpP2kucHVzaCh0KTpyW2VdPVt0XX0pfWZ1bmN0aW9uIGkoZSxpKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7dChlLGkpfSl9ZnVuY3Rpb24gbihlLHQpeyJHZW9tZXRyeUNvbGxlY3Rpb24iPT09ZS50eXBlP2UuZ2VvbWV0cmllcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe24oZSx0KX0pOmUudHlwZSBpbiBhJiZhW2UudHlwZV0oZS5hcmNzLHQpfXZhciByPXt9LG89ZS5tYXAoZnVuY3Rpb24oKXtyZXR1cm5bXX0pLGE9e0xpbmVTdHJpbmc6dCxNdWx0aUxpbmVTdHJpbmc6aSxQb2x5Z29uOmksTXVsdGlQb2x5Z29uOmZ1bmN0aW9uKGUsdCl7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2koZSx0KX0pfX07ZS5mb3JFYWNoKG4pO2Zvcih2YXIgcyBpbiByKWZvcih2YXIgdT1yW3NdLGM9dS5sZW5ndGgsZD0wO2M+ZDsrK2QpZm9yKHZhciBoPWQrMTtjPmg7KytoKXt2YXIgbSxmPXVbZF0scD11W2hdOyhtPW9bZl0pW3M9bChtLHApXSE9PXAmJm0uc3BsaWNlKHMsMCxwKSwobT1vW3BdKVtzPWwobSxmKV0hPT1mJiZtLnNwbGljZShzLDAsZil9cmV0dXJuIG99ZnVuY3Rpb24gYyhlLHQpe2Z1bmN0aW9uIGkoZSl7YS5yZW1vdmUoZSksZVsxXVsyXT10KGUpLGEucHVzaChlKX12YXIgbixyPXAoZS50cmFuc2Zvcm0pLG89dihlLnRyYW5zZm9ybSksYT1mKCkscz0wO2Zvcih0fHwodD1oKSxlLmFyY3MuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgaT1bXTtlLmZvckVhY2gocik7Zm9yKHZhciBvPTEscz1lLmxlbmd0aC0xO3M+bzsrK28pbj1lLnNsaWNlKG8tMSxvKzIpLG5bMV1bMl09dChuKSxpLnB1c2gobiksYS5wdXNoKG4pO2VbMF1bMl09ZVtzXVsyXT0xLzA7Zm9yKHZhciBvPTAscz1pLmxlbmd0aDtzPm87KytvKW49aVtvXSxuLnByZXZpb3VzPWlbby0xXSxuLm5leHQ9aVtvKzFdfSk7bj1hLnBvcCgpOyl7dmFyIGw9bi5wcmV2aW91cyx1PW4ubmV4dDtuWzFdWzJdPHM/blsxXVsyXT1zOnM9blsxXVsyXSxsJiYobC5uZXh0PXUsbFsyXT1uWzJdLGkobCkpLHUmJih1LnByZXZpb3VzPWwsdVswXT1uWzBdLGkodSkpfXJldHVybiBlLmFyY3MuZm9yRWFjaChmdW5jdGlvbihlKXtlLmZvckVhY2gobyl9KSxlfWZ1bmN0aW9uIGQoZSl7Zm9yKHZhciB0LGk9LTEsbj1lLmxlbmd0aCxyPWVbbi0xXSxvPTA7KytpPG47KXQ9cixyPWVbaV0sbys9dFswXSpyWzFdLXRbMV0qclswXTtyZXR1cm4uNSpvfWZ1bmN0aW9uIGgoZSl7dmFyIHQ9ZVswXSxpPWVbMV0sbj1lWzJdO3JldHVybiBNYXRoLmFicygodFswXS1uWzBdKSooaVsxXS10WzFdKS0odFswXS1pWzBdKSooblsxXS10WzFdKSl9ZnVuY3Rpb24gbShlLHQpe3JldHVybiBlWzFdWzJdLXRbMV1bMl19ZnVuY3Rpb24gZigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IoO3Q+MDspe3ZhciBpPSh0KzE+PjEpLTEscj1uW2ldO2lmKG0oZSxyKT49MClicmVhaztuW3IuXz10XT1yLG5bZS5fPXQ9aV09ZX19ZnVuY3Rpb24gdChlLHQpe2Zvcig7Oyl7dmFyIGk9dCsxPDwxLG89aS0xLGE9dCxzPW5bYV07aWYocj5vJiZtKG5bb10scyk8MCYmKHM9blthPW9dKSxyPmkmJm0obltpXSxzKTwwJiYocz1uW2E9aV0pLGE9PT10KWJyZWFrO25bcy5fPXRdPXMsbltlLl89dD1hXT1lfX12YXIgaT17fSxuPVtdLHI9MDtyZXR1cm4gaS5wdXNoPWZ1bmN0aW9uKHQpe3JldHVybiBlKG5bdC5fPXJdPXQscisrKSxyfSxpLnBvcD1mdW5jdGlvbigpe2lmKCEoMD49cikpe3ZhciBlLGk9blswXTtyZXR1cm4tLXI+MCYmKGU9bltyXSx0KG5bZS5fPTBdPWUsMCkpLGl9fSxpLnJlbW92ZT1mdW5jdGlvbihpKXt2YXIgbyxhPWkuXztpZihuW2FdPT09aSlyZXR1cm4gYSE9PS0tciYmKG89bltyXSwobShvLGkpPDA/ZTp0KShuW28uXz1hXT1vLGEpKSxhfSxpfWZ1bmN0aW9uIHAoZSl7aWYoIWUpcmV0dXJuIGc7dmFyIHQsaSxuPWUuc2NhbGVbMF0scj1lLnNjYWxlWzFdLG89ZS50cmFuc2xhdGVbMF0sYT1lLnRyYW5zbGF0ZVsxXTtyZXR1cm4gZnVuY3Rpb24oZSxzKXtzfHwodD1pPTApLGVbMF09KHQrPWVbMF0pKm4rbyxlWzFdPShpKz1lWzFdKSpyK2F9fWZ1bmN0aW9uIHYoZSl7aWYoIWUpcmV0dXJuIGc7dmFyIHQsaSxuPWUuc2NhbGVbMF0scj1lLnNjYWxlWzFdLG89ZS50cmFuc2xhdGVbMF0sYT1lLnRyYW5zbGF0ZVsxXTtyZXR1cm4gZnVuY3Rpb24oZSxzKXtzfHwodD1pPTApO3ZhciBsPTB8KGVbMF0tbykvbix1PTB8KGVbMV0tYSkvcjtlWzBdPWwtdCxlWzFdPXUtaSx0PWwsaT11fX1mdW5jdGlvbiBnKCl7fXZhciBfPXt2ZXJzaW9uOiIxLjYuOCIsbWVzaDpmdW5jdGlvbihlKXtyZXR1cm4gYShlLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0sbWVzaEFyY3M6dCxtZXJnZTpmdW5jdGlvbihlKXtyZXR1cm4gYShlLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0sbWVyZ2VBcmNzOmksZmVhdHVyZTpyLG5laWdoYm9yczp1LHByZXNpbXBsaWZ5OmN9OyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKCJUaGlyZFBhcnR5L3RvcG9qc29uIixfKToib2JqZWN0Ij09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9Xzp0aGlzLnRvcG9qc29uPV99KCksZGVmaW5lKCJEYXRhU291cmNlcy9HZW9Kc29uRGF0YVNvdXJjZSIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9jcmVhdGVHdWlkIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvZ2V0RmlsZW5hbWVGcm9tVXJpIiwiLi4vQ29yZS9sb2FkSnNvbiIsIi4uL0NvcmUvUGluQnVpbGRlciIsIi4uL0NvcmUvUnVudGltZUVycm9yIiwiLi4vU2NlbmUvVmVydGljYWxPcmlnaW4iLCIuLi9UaGlyZFBhcnR5L3RvcG9qc29uIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9CaWxsYm9hcmRHcmFwaGljcyIsIi4vQ29sb3JNYXRlcmlhbFByb3BlcnR5IiwiLi9Db25zdGFudFBvc2l0aW9uUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL0VudGl0eUNvbGxlY3Rpb24iLCIuL1BvbHlnb25HcmFwaGljcyIsIi4vUG9seWxpbmVHcmFwaGljcyJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBFKGUsdCl7dmFyIGk9Jzx0YWJsZSBjbGFzcz0iY2VzaXVtLWluZm9Cb3gtZGVmYXVsdFRhYmxlIj48dGJvZHk+Jztmb3IodmFyIG4gaW4gZSlpZihlLmhhc093blByb3BlcnR5KG4pKXtpZihuPT09dHx8LTEhPT1ZLmluZGV4T2YobikpY29udGludWU7dmFyIG89ZVtuXTtyKG8pJiYoaSs9Im9iamVjdCI9PXR5cGVvZiBvPyI8dHI+PHRoPiIrbisiPC90aD48dGQ+IitFKG8pKyI8L3RkPjwvdHI+IjoiPHRyPjx0aD4iK24rIjwvdGg+PHRkPiIrbysiPC90ZD48L3RyPiIpfXJldHVybiBpKz0iPC90Ym9keT48L3RhYmxlPiJ9ZnVuY3Rpb24gYihlLHQpe3ZhciBuPWUuaWQ7aWYocihuKSYmIkZlYXR1cmUiPT09ZS50eXBlKXtmb3IodmFyIG89MixhPW47cih0LmdldEJ5SWQoYSkpOylhPW4rIl8iK28sbysrO249YX1lbHNlIG49aSgpO3ZhciBzPXQuZ2V0T3JDcmVhdGVFbnRpdHkobiksbD1lLnByb3BlcnRpZXM7aWYocihsKSl7cy5hZGRQcm9wZXJ0eSgicHJvcGVydGllcyIpLHMucHJvcGVydGllcz1sO3ZhciB1LGM9bC50aXRsZTtpZihyKGMpKXMubmFtZT1jLHU9InRpdGxlIjtlbHNle3ZhciBkPU51bWJlci5NQVhfVkFMVUU7Zm9yKHZhciBoIGluIGwpaWYobC5oYXNPd25Qcm9wZXJ0eShoKSYmbFtoXSl7dmFyIG09aC50b0xvd2VyQ2FzZSgpO2lmKGQ+MSYmInRpdGxlIj09PW0pe2Q9MSx1PWg7YnJlYWt9ZD4yJiYibmFtZSI9PT1tPyhkPTIsdT1oKTpkPjMmJi90aXRsZS9pLnRlc3QoaCk/KGQ9Myx1PWgpOmQ+NCYmL25hbWUvaS50ZXN0KGgpJiYoZD00LHU9aCl9cih1KSYmKHMubmFtZT1sW3VdKX12YXIgZj1sLmRlc2NyaXB0aW9uO3IoZil8fChmPUUobCx1KSkscy5kZXNjcmlwdGlvbj1uZXcgXyhmKX1yZXR1cm4gc31mdW5jdGlvbiBTKGUsdCl7Zm9yKHZhciBpPW5ldyBBcnJheShlLmxlbmd0aCksbj0wO248ZS5sZW5ndGg7bisrKWlbbl09dChlW25dKTtyZXR1cm4gaX1mdW5jdGlvbiBUKGUsdCxpLG4pe2lmKCFyKHQuZ2VvbWV0cnkpKXRocm93IG5ldyBkKCJmZWF0dXJlLmdlb21ldHJ5IGlzIHJlcXVpcmVkLiIpO2lmKG51bGw9PT10Lmdlb21ldHJ5KWIodCxlLl9lbnRpdHlDb2xsZWN0aW9uKTtlbHNle3ZhciBvPXQuZ2VvbWV0cnkudHlwZSxhPVpbb107aWYoIXIoYSkpdGhyb3cgbmV3IGQoIlVua25vd24gZ2VvbWV0cnkgdHlwZTogIitvKTthKGUsdCx0Lmdlb21ldHJ5LG4pfX1mdW5jdGlvbiB4KGUsdCxpLG4pe2Zvcih2YXIgcj10LmZlYXR1cmVzLG89MCxhPXIubGVuZ3RoO2E+bztvKyspVChlLHJbb10sdm9pZCAwLG4pfWZ1bmN0aW9uIEEoZSx0LGksbil7Zm9yKHZhciBvPWkuZ2VvbWV0cmllcyxhPTAscz1vLmxlbmd0aDtzPmE7YSsrKXt2YXIgbD1vW2FdLHU9bC50eXBlLGM9Wlt1XTtpZighcihjKSl0aHJvdyBuZXcgZCgiVW5rbm93biBnZW9tZXRyeSB0eXBlOiAiK3UpO2MoZSx0LGwsbil9fWZ1bmN0aW9uIFAoZSxpLG8sYSl7dmFyIHMsbD10LlJPWUFMQkxVRSx1PWsubWVkaXVtLGM9aS5wcm9wZXJ0aWVzO2lmKHIoYykpe3ZhciBkPWNbIm1hcmtlci1jb2xvciJdO3IoZCkmJihsPXQuZnJvbUNzc0NvbG9yU3RyaW5nKGQpKSx1PW4oa1tjWyJtYXJrZXItc2l6ZSJdXSx1KSxzPWNbIm1hcmtlci1zeW1ib2wiXX12YXIgbTttPXIocyk/MT09PXMubGVuZ3RoP2UuX3BpbkJ1aWxkZXIuZnJvbVRleHQocy50b1VwcGVyQ2FzZSgpLGwsdSk6ZS5fcGluQnVpbGRlci5mcm9tTWFraUljb25JZChzLGwsdSk6ZS5fcGluQnVpbGRlci5mcm9tQ29sb3IobCx1KSxlLl9wcm9taXNlcy5wdXNoKGYobSxmdW5jdGlvbih0KXt2YXIgbj1uZXcgcDtuLnZlcnRpY2FsT3JpZ2luPW5ldyBfKGguQk9UVE9NKSxuLmltYWdlPW5ldyBfKHQudG9EYXRhVVJMKCkpO3ZhciByPWIoaSxlLl9lbnRpdHlDb2xsZWN0aW9uKTtyLmJpbGxib2FyZD1uLHIucG9zaXRpb249bmV3IGcobyhhKSl9KSl9ZnVuY3Rpb24gTShlLHQsaSxuKXtQKGUsdCxuLGkuY29vcmRpbmF0ZXMpfWZ1bmN0aW9uIEkoZSx0LGksbil7Zm9yKHZhciByPWkuY29vcmRpbmF0ZXMsbz0wO288ci5sZW5ndGg7bysrKVAoZSx0LG4scltvXSl9ZnVuY3Rpb24gRChlLGksbixvKXt2YXIgYT1VLHM9VyxsPWkucHJvcGVydGllcztpZihyKGwpKXt2YXIgdT1sWyJzdHJva2Utd2lkdGgiXTtyKHUpJiYocz1uZXcgXyh1KSk7dmFyIGMsZD1sLnN0cm9rZTtyKGQpJiYoYz10LmZyb21Dc3NDb2xvclN0cmluZyhkKSk7dmFyIGg9bFsic3Ryb2tlLW9wYWNpdHkiXTtyKGgpJiYxIT09aCYmKHIoYyl8fChjPWEuY29sb3IuY2xvbmUoKSksYy5hbHBoYT1oKSxyKGMpJiYoYT12LmZyb21Db2xvcihjKSl9dmFyIG09bmV3IHc7bS5tYXRlcmlhbD1hLG0ud2lkdGg9cyxtLnBvc2l0aW9ucz1uZXcgXyhTKG8sbikpO3ZhciBmPWIoaSxlLl9lbnRpdHlDb2xsZWN0aW9uKTtmLnBvbHlsaW5lPW19ZnVuY3Rpb24gTyhlLHQsaSxuKXtEKGUsdCxuLGkuY29vcmRpbmF0ZXMpfWZ1bmN0aW9uIFIoZSx0LGksbil7Zm9yKHZhciByPWkuY29vcmRpbmF0ZXMsbz0wO288ci5sZW5ndGg7bysrKUQoZSx0LG4scltvXSl9ZnVuY3Rpb24gTChlLGksbixvKXt2YXIgYT1qLHM9RyxsPWkucHJvcGVydGllcztpZihyKGwpKXt2YXIgdSxjPWwuc3Ryb2tlO3IoYykmJih1PXQuZnJvbUNzc0NvbG9yU3RyaW5nKGMpKTt2YXIgZD1sWyJzdHJva2Utb3BhY2l0eSJdO3IoZCkmJjEhPT1kJiYocih1KXx8KHU9cS5jbG9uZSgpKSx1LmFscGhhPWQpLHIodSkmJihhPW5ldyBfKHUpKTt2YXIgaCxtPWwuZmlsbDtyKG0pJiYoaD10LmZyb21Dc3NDb2xvclN0cmluZyhtKSxoLmFscGhhPXMuY29sb3IuYWxwaGEpLGQ9bFsiZmlsbC1vcGFjaXR5Il0scihkKSYmZCE9PXMuY29sb3IuYWxwaGEmJihyKGgpfHwoaD1zLmNvbG9yLmNsb25lKCkpLGguYWxwaGE9ZCkscihoKSYmKHM9di5mcm9tQ29sb3IoaCkpfXZhciBmPW5ldyBDO2Yub3V0bGluZT1ILGYub3V0bGluZUNvbG9yPWEsZi5tYXRlcmlhbD1zLGYucG9zaXRpb25zPW5ldyBfKFMobyxuKSksby5sZW5ndGg+MCYmb1swXS5sZW5ndGg+MiYmKGYucGVyUG9zaXRpb25IZWlnaHQ9bmV3IF8oITApKTt2YXIgcD1iKGksZS5fZW50aXR5Q29sbGVjdGlvbik7cC5wb2x5Z29uPWZ9ZnVuY3Rpb24gTihlLHQsaSxuKXtMKGUsdCxuLGkuY29vcmRpbmF0ZXNbMF0pfWZ1bmN0aW9uIHooZSx0LGksbil7Zm9yKHZhciByPWkuY29vcmRpbmF0ZXMsbz0wO288ci5sZW5ndGg7bysrKUwoZSx0LG4scltvXVswXSl9ZnVuY3Rpb24gQihlLHQsaSxuKXtmb3IodmFyIHIgaW4gaS5vYmplY3RzKWlmKGkub2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIG89bS5mZWF0dXJlKGksaS5vYmplY3RzW3JdKSxhPVhbby50eXBlXTthKGUsbyxvLG4pfX1mdW5jdGlvbiBGKGUsdCl7ZS5faXNMb2FkaW5nIT09dCYmKHQ/ZS5fZW50aXR5Q29sbGVjdGlvbi5zdXNwZW5kRXZlbnRzKCk6ZS5fZW50aXR5Q29sbGVjdGlvbi5yZXN1bWVFdmVudHMoKSxlLl9pc0xvYWRpbmc9dCxlLl9sb2FkaW5nLnJhaXNlRXZlbnQoZSx0KSl9ZnVuY3Rpb24gVih0KXtyZXR1cm4gZS5mcm9tRGVncmVlcyh0WzBdLHRbMV0sdFsyXSl9dmFyIGs9e3NtYWxsOjI0LG1lZGl1bTo0OCxsYXJnZTo2NH0sVT12LmZyb21Db2xvcih0LllFTExPVyksVz1uZXcgXygyKSxHPXYuZnJvbUNvbG9yKHQuZnJvbUJ5dGVzKDI1NSwyNTUsMCwxMDApKSxIPW5ldyBfKCEwKSxxPXQuQkxBQ0ssaj1uZXcgXyhxKSxZPVsidGl0bGUiLCJkZXNjcmlwdGlvbiIsIm1hcmtlci1zaXplIiwibWFya2VyLXN5bWJvbCIsIm1hcmtlci1jb2xvciIsInN0cm9rZSIsInN0cm9rZS1vcGFjaXR5Iiwic3Ryb2tlLXdpZHRoIiwiZmlsbCIsImZpbGwtb3BhY2l0eSJdLFg9e0ZlYXR1cmU6VCxGZWF0dXJlQ29sbGVjdGlvbjp4LEdlb21ldHJ5Q29sbGVjdGlvbjpBLExpbmVTdHJpbmc6TyxNdWx0aUxpbmVTdHJpbmc6UixNdWx0aVBvaW50OkksTXVsdGlQb2x5Z29uOnosUG9pbnQ6TSxQb2x5Z29uOk4sVG9wb2xvZ3k6Qn0sWj17R2VvbWV0cnlDb2xsZWN0aW9uOkEsTGluZVN0cmluZzpPLE11bHRpTGluZVN0cmluZzpSLE11bHRpUG9pbnQ6SSxNdWx0aVBvbHlnb246eixQb2ludDpNLFBvbHlnb246TixUb3BvbG9neTpCfSxKPWZ1bmN0aW9uKGUpe3RoaXMuX25hbWU9ZSx0aGlzLl9jaGFuZ2VkPW5ldyBzLHRoaXMuX2Vycm9yPW5ldyBzLHRoaXMuX2lzTG9hZGluZz0hMSx0aGlzLl9sb2FkaW5nPW5ldyBzLHRoaXMuX2VudGl0eUNvbGxlY3Rpb249bmV3IHksdGhpcy5fcHJvbWlzZXM9W10sdGhpcy5fcGluQnVpbGRlcj1uZXcgY307cmV0dXJuIEouZnJvbVVybD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgSjtyZXR1cm4gdC5sb2FkVXJsKGUpLHR9LG8oSi5wcm90b3R5cGUse25hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9uYW1lfX0sY2xvY2s6e3ZhbHVlOnZvaWQgMCx3cml0YWJsZTohMX0sZW50aXRpZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbnRpdHlDb2xsZWN0aW9ufX0saXNMb2FkaW5nOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNMb2FkaW5nfX0sY2hhbmdlZEV2ZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hhbmdlZH19LGVycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvcn19LGxvYWRpbmdFdmVudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvYWRpbmd9fX0pLEoucHJvdG90eXBlLmxvYWRVcmw9ZnVuY3Rpb24oZSl7Rih0aGlzLCEwKTt2YXIgdD10aGlzO3JldHVybiBmKHUoZSksZnVuY3Rpb24oaSl7cmV0dXJuIHQubG9hZChpLGUpfSkub3RoZXJ3aXNlKGZ1bmN0aW9uKGUpe3JldHVybiBGKHQsITEpLHQuX2Vycm9yLnJhaXNlRXZlbnQodCxlKSxmLnJlamVjdChlKX0pfSxKLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGUsdCl7dmFyIGk7cih0KSYmKGk9bCh0KSkscihpKSYmdGhpcy5fbmFtZSE9PWkmJih0aGlzLl9uYW1lPWksdGhpcy5fY2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKTt2YXIgbj1YW2UudHlwZV07aWYoIXIobikpdGhyb3cgbmV3IGEoIlVuc3VwcG9ydGVkIEdlb0pTT04gb2JqZWN0IHR5cGU6ICIrZS50eXBlKTt2YXIgbz1WLHM9ZS5jcnM7aWYocihzKSl7aWYobnVsbD09PXMpdGhyb3cgbmV3IGQoImNycyBpcyBudWxsLiIpO2lmKCFyKHMucHJvcGVydGllcykpdGhyb3cgbmV3IGQoImNycy5wcm9wZXJ0aWVzIGlzIHVuZGVmaW5lZC4iKTt2YXIgdT1zLnByb3BlcnRpZXM7aWYoIm5hbWUiPT09cy50eXBlKXtpZihvPUouY3JzTmFtZXNbdS5uYW1lXSwhcihvKSl0aHJvdyBuZXcgZCgiVW5rbm93biBjcnMgbmFtZTogIit1Lm5hbWUpfWVsc2UgaWYoImxpbmsiPT09cy50eXBlKXt2YXIgYz1KLmNyc0xpbmtIcmVmc1t1LmhyZWZdO2lmKHIoYyl8fChjPUouY3JzTGlua1R5cGVzW3UudHlwZV0pLCFyKGMpKXRocm93IG5ldyBkKCJVbmFibGUgdG8gcmVzb2x2ZSBjcnMgbGluazogIitKU09OLnN0cmluZ2lmeSh1KSk7bz1jKHUpfWVsc2V7aWYoIkVQU0ciIT09cy50eXBlKXRocm93IG5ldyBkKCJVbmtub3duIGNycyB0eXBlOiAiK3MudHlwZSk7aWYobz1KLmNyc05hbWVzWyJFUFNHOiIrdS5jb2RlXSwhcihvKSl0aHJvdyBuZXcgZCgiVW5rbm93biBjcnMgRVBTRyBjb2RlOiAiK3UuY29kZSl9fUYodGhpcywhMCk7dmFyIGg9dGhpcztyZXR1cm4gZihvLGZ1bmN0aW9uKHQpe2guX2VudGl0eUNvbGxlY3Rpb24ucmVtb3ZlQWxsKCksbihoLGUsZSx0KSxmLmFsbChoLl9wcm9taXNlcyxmdW5jdGlvbigpe2guX3Byb21pc2VzLmxlbmd0aD0wLEYoaCwhMSksaC5fY2hhbmdlZC5yYWlzZUV2ZW50KGgpfSl9KS5vdGhlcndpc2UoZnVuY3Rpb24oZSl7cmV0dXJuIEYoaCwhMSksaC5fZXJyb3IucmFpc2VFdmVudChoLGUpLGYucmVqZWN0KGUpfSl9LEouY3JzTmFtZXM9eyJ1cm46b2djOmRlZjpjcnM6T0dDOjEuMzpDUlM4NCI6ViwiRVBTRzo0MzI2IjpWfSxKLmNyc0xpbmtIcmVmcz17fSxKLmNyc0xpbmtUeXBlcz17fSxKfSksZGVmaW5lKCJDb3JlL0NyZWRpdCIsWyIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9ZnVuY3Rpb24odCxpLG4pe3ZhciByPWUobiksbz1lKGkpLGE9ZSh0KTthfHxvfHwodD1uKSx0aGlzLl90ZXh0PXQsdGhpcy5faW1hZ2VVcmw9aSx0aGlzLl9saW5rPW4sdGhpcy5faGFzTGluaz1yLHRoaXMuX2hhc0ltYWdlPW99O3JldHVybiB0KGkucHJvdG90eXBlLHt0ZXh0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dH19LGltYWdlVXJsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW1hZ2VVcmx9fSxsaW5rOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGlua319fSksaS5wcm90b3R5cGUuaGFzSW1hZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzSW1hZ2V9LGkucHJvdG90eXBlLmhhc0xpbms9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzTGlua30saS5lcXVhbHM9ZnVuY3Rpb24odCxpKXt2YXIgbj0hZSh0KSxyPSFlKGkpO3JldHVybiB0PT09aXx8KG4mJnJ8fCFuJiYhcikmJnQuX3RleHQ9PT1pLl90ZXh0JiZ0Ll9pbWFnZVVybD09PWkuX2ltYWdlVXJsJiZ0Ll9saW5rPT09aS5fbGlua30saS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBpLmVxdWFscyh0aGlzLGUpfSxpfSksZGVmaW5lKCJDb3JlL0dlb2dyYXBoaWNQcm9qZWN0aW9uIixbIi4vQ2FydGVzaWFuMyIsIi4vQ2FydG9ncmFwaGljIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9ZnVuY3Rpb24oZSl7dGhpcy5fZWxsaXBzb2lkPWkoZSxhLldHUzg0KSx0aGlzLl9zZW1pbWFqb3JBeGlzPXRoaXMuX2VsbGlwc29pZC5tYXhpbXVtUmFkaXVzLHRoaXMuX29uZU92ZXJTZW1pbWFqb3JBeGlzPTEvdGhpcy5fc2VtaW1ham9yQXhpc307cmV0dXJuIHIocy5wcm90b3R5cGUse2VsbGlwc29pZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VsbGlwc29pZH19fSkscy5wcm90b3R5cGUucHJvamVjdD1mdW5jdGlvbih0LGkpe3ZhciByPXRoaXMuX3NlbWltYWpvckF4aXMsbz10LmxvbmdpdHVkZSpyLGE9dC5sYXRpdHVkZSpyLHM9dC5oZWlnaHQ7cmV0dXJuIG4oaSk/KGkueD1vLGkueT1hLGkuej1zLGkpOm5ldyBlKG8sYSxzKX0scy5wcm90b3R5cGUudW5wcm9qZWN0PWZ1bmN0aW9uKGUsaSl7dmFyIHI9dGhpcy5fb25lT3ZlclNlbWltYWpvckF4aXMsbz1lLngqcixhPWUueSpyLHM9ZS56O3JldHVybiBuKGkpPyhpLmxvbmdpdHVkZT1vLGkubGF0aXR1ZGU9YSxpLmhlaWdodD1zLGkpOm5ldyB0KG8sYSxzKX0sc30pLGRlZmluZSgiQ29yZS9HZW9ncmFwaGljVGlsaW5nU2NoZW1lIixbIi4vQ2FydGVzaWFuMiIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4vTWF0aCIsIi4vUmVjdGFuZ2xlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpeyJ1c2Ugc3RyaWN0Ijt2YXIgdT1mdW5jdGlvbihlKXtlPXQoZSx7fSksdGhpcy5fZWxsaXBzb2lkPXQoZS5lbGxpcHNvaWQsby5XR1M4NCksdGhpcy5fcmVjdGFuZ2xlPXQoZS5yZWN0YW5nbGUsbC5NQVhfVkFMVUUpLHRoaXMuX3Byb2plY3Rpb249bmV3IGEodGhpcy5fZWxsaXBzb2lkKSx0aGlzLl9udW1iZXJPZkxldmVsWmVyb1RpbGVzWD10KGUubnVtYmVyT2ZMZXZlbFplcm9UaWxlc1gsMiksdGhpcy5fbnVtYmVyT2ZMZXZlbFplcm9UaWxlc1k9dChlLm51bWJlck9mTGV2ZWxaZXJvVGlsZXNZLDEpfTtyZXR1cm4gbih1LnByb3RvdHlwZSx7ZWxsaXBzb2lkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZWxsaXBzb2lkfX0scmVjdGFuZ2xlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdGFuZ2xlfX0scHJvamVjdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3Rpb259fX0pLHUucHJvdG90eXBlLmdldE51bWJlck9mWFRpbGVzQXRMZXZlbD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbnVtYmVyT2ZMZXZlbFplcm9UaWxlc1g8PGV9LHUucHJvdG90eXBlLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbnVtYmVyT2ZMZXZlbFplcm9UaWxlc1k8PGV9LHUucHJvdG90eXBlLnJlY3RhbmdsZVRvTmF0aXZlUmVjdGFuZ2xlPWZ1bmN0aW9uKGUsdCl7dmFyIG49cy50b0RlZ3JlZXMoZS53ZXN0KSxyPXMudG9EZWdyZWVzKGUuc291dGgpLG89cy50b0RlZ3JlZXMoZS5lYXN0KSxhPXMudG9EZWdyZWVzKGUubm9ydGgpO3JldHVybiBpKHQpPyh0Lndlc3Q9bix0LnNvdXRoPXIsdC5lYXN0PW8sdC5ub3J0aD1hLHQpOm5ldyBsKG4scixvLGEpfSx1LnByb3RvdHlwZS50aWxlWFlUb05hdGl2ZVJlY3RhbmdsZT1mdW5jdGlvbihlLHQsaSxuKXt2YXIgcj10aGlzLnRpbGVYWVRvUmVjdGFuZ2xlKGUsdCxpLG4pO3JldHVybiByLndlc3Q9cy50b0RlZ3JlZXMoci53ZXN0KSxyLnNvdXRoPXMudG9EZWdyZWVzKHIuc291dGgpLHIuZWFzdD1zLnRvRGVncmVlcyhyLmVhc3QpLHIubm9ydGg9cy50b0RlZ3JlZXMoci5ub3J0aCkscn0sdS5wcm90b3R5cGUudGlsZVhZVG9SZWN0YW5nbGU9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89dGhpcy5fcmVjdGFuZ2xlLGE9dGhpcy5nZXROdW1iZXJPZlhUaWxlc0F0TGV2ZWwobikscz10aGlzLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbChuKSx1PShvLmVhc3Qtby53ZXN0KS9hLGM9ZSp1K28ud2VzdCxkPShlKzEpKnUrby53ZXN0LGg9KG8ubm9ydGgtby5zb3V0aCkvcyxtPW8ubm9ydGgtdCpoLGY9by5ub3J0aC0odCsxKSpoO3JldHVybiBpKHIpfHwocj1uZXcgbChjLGYsZCxtKSksci53ZXN0PWMsci5zb3V0aD1mLHIuZWFzdD1kLHIubm9ydGg9bSxyfSx1LnByb3RvdHlwZS5wb3NpdGlvblRvVGlsZVhZPWZ1bmN0aW9uKHQsbixyKXt2YXIgbz10aGlzLl9yZWN0YW5nbGU7aWYodC5sYXRpdHVkZT5vLm5vcnRofHx0LmxhdGl0dWRlPG8uc291dGh8fHQubG9uZ2l0dWRlPG8ud2VzdHx8dC5sb25naXR1ZGU+by5lYXN0KXJldHVybiB2b2lkIDA7dmFyIGE9dGhpcy5nZXROdW1iZXJPZlhUaWxlc0F0TGV2ZWwobikscz10aGlzLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbChuKSxsPShvLmVhc3Qtby53ZXN0KS9hLHU9KG8ubm9ydGgtby5zb3V0aCkvcyxjPTB8KHQubG9uZ2l0dWRlLW8ud2VzdCkvbDtjPj1hJiYoYz1hLTEpO3ZhciBkPTB8KG8ubm9ydGgtdC5sYXRpdHVkZSkvdTtyZXR1cm4gZD49cyYmKGQ9cy0xKSxpKHIpPyhyLng9YyxyLnk9ZCxyKTpuZXcgZShjLGQpfSx1fSksZGVmaW5lKCJDb3JlL2xvYWRYTUwiLFsiLi9sb2FkV2l0aFhociJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0LGkpe3JldHVybiBlKHt1cmw6dCxyZXNwb25zZVR5cGU6ImRvY3VtZW50IixoZWFkZXJzOmksb3ZlcnJpZGVNaW1lVHlwZToidGV4dC94bWwifSl9O3JldHVybiB0fSksZGVmaW5lKCJDb3JlL1RpbGVQcm92aWRlckVycm9yIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9mb3JtYXRFcnJvciJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24odCxpLG4scixvLGEpe3RoaXMucHJvdmlkZXI9dCx0aGlzLm1lc3NhZ2U9aSx0aGlzLng9bix0aGlzLnk9cix0aGlzLmxldmVsPW8sdGhpcy50aW1lc1JldHJpZWQ9ZShhLDApLHRoaXMucmV0cnk9ITF9O3JldHVybiBuLmhhbmRsZUVycm9yPWZ1bmN0aW9uKGUscixvLGEscyxsLHUsYyl7dmFyIGQ9ZTtyZXR1cm4gdChlKT8oZC5wcm92aWRlcj1yLGQubWVzc2FnZT1hLGQueD1zLGQueT1sLGQubGV2ZWw9dSxkLnJldHJ5PSExLCsrZC50aW1lc1JldHJpZWQpOmQ9bmV3IG4ocixhLHMsbCx1LDApLG8ubnVtYmVyT2ZMaXN0ZW5lcnM+MD9vLnJhaXNlRXZlbnQoZCk6Y29uc29sZS5sb2coJ0FuIGVycm9yIG9jY3VycmVkIGluICInK3IuY29uc3RydWN0b3IubmFtZSsnIjogJytpKGEpKSxkLnJldHJ5JiZ0KGMpJiZjKCksZH0sbi5oYW5kbGVTdWNjZXNzPWZ1bmN0aW9uKGUpe3QoZSkmJihlLnRpbWVzUmV0cmllZD0tMSl9LG59KSxkZWZpbmUoIkNvcmUvV2ViTWVyY2F0b3JQcm9qZWN0aW9uIixbIi4vQ2FydGVzaWFuMyIsIi4vQ2FydG9ncmFwaGljIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiLCIuL01hdGgiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgbD1mdW5jdGlvbihlKXt0aGlzLl9lbGxpcHNvaWQ9aShlLGEuV0dTODQpLHRoaXMuX3NlbWltYWpvckF4aXM9dGhpcy5fZWxsaXBzb2lkLm1heGltdW1SYWRpdXMsdGhpcy5fb25lT3ZlclNlbWltYWpvckF4aXM9MS90aGlzLl9zZW1pbWFqb3JBeGlzfTtyZXR1cm4gcihsLnByb3RvdHlwZSx7ZWxsaXBzb2lkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZWxsaXBzb2lkfX19KSxsLm1lcmNhdG9yQW5nbGVUb0dlb2RldGljTGF0aXR1ZGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHMuUElfT1ZFUl9UV08tMipNYXRoLmF0YW4oTWF0aC5leHAoLWUpKX0sbC5nZW9kZXRpY0xhdGl0dWRlVG9NZXJjYXRvckFuZ2xlPWZ1bmN0aW9uKGUpe2U+bC5NYXhpbXVtTGF0aXR1ZGU/ZT1sLk1heGltdW1MYXRpdHVkZTplPC1sLk1heGltdW1MYXRpdHVkZSYmKGU9LWwuTWF4aW11bUxhdGl0dWRlKTt2YXIgdD1NYXRoLnNpbihlKTtyZXR1cm4uNSpNYXRoLmxvZygoMSt0KS8oMS10KSl9LGwuTWF4aW11bUxhdGl0dWRlPWwubWVyY2F0b3JBbmdsZVRvR2VvZGV0aWNMYXRpdHVkZShNYXRoLlBJKSxsLnByb3RvdHlwZS5wcm9qZWN0PWZ1bmN0aW9uKHQsaSl7dmFyIHI9dGhpcy5fc2VtaW1ham9yQXhpcyxvPXQubG9uZ2l0dWRlKnIsYT1sLmdlb2RldGljTGF0aXR1ZGVUb01lcmNhdG9yQW5nbGUodC5sYXRpdHVkZSkqcixzPXQuaGVpZ2h0O3JldHVybiBuKGkpPyhpLng9byxpLnk9YSxpLno9cyxpKTpuZXcgZShvLGEscyl9LGwucHJvdG90eXBlLnVucHJvamVjdD1mdW5jdGlvbihlLGkpe3ZhciByPXRoaXMuX29uZU92ZXJTZW1pbWFqb3JBeGlzLG89ZS54KnIsYT1sLm1lcmNhdG9yQW5nbGVUb0dlb2RldGljTGF0aXR1ZGUoZS55KnIpLHM9ZS56O3JldHVybiBuKGkpPyhpLmxvbmdpdHVkZT1vLGkubGF0aXR1ZGU9YSxpLmhlaWdodD1zLGkpOm5ldyB0KG8sYSxzKX0sbH0pLGRlZmluZSgiQ29yZS9XZWJNZXJjYXRvclRpbGluZ1NjaGVtZSIsWyIuL0NhcnRlc2lhbjIiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRWxsaXBzb2lkIiwiLi9SZWN0YW5nbGUiLCIuL1dlYk1lcmNhdG9yUHJvamVjdGlvbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbihuKXtpZihuPXQobix7fSksdGhpcy5fZWxsaXBzb2lkPXQobi5lbGxpcHNvaWQsci5XR1M4NCksdGhpcy5fbnVtYmVyT2ZMZXZlbFplcm9UaWxlc1g9dChuLm51bWJlck9mTGV2ZWxaZXJvVGlsZXNYLDEpLHRoaXMuX251bWJlck9mTGV2ZWxaZXJvVGlsZXNZPXQobi5udW1iZXJPZkxldmVsWmVyb1RpbGVzWSwxKSx0aGlzLl9wcm9qZWN0aW9uPW5ldyBhKHRoaXMuX2VsbGlwc29pZCksaShuLnJlY3RhbmdsZVNvdXRod2VzdEluTWV0ZXJzKSYmaShuLnJlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzKSl0aGlzLl9yZWN0YW5nbGVTb3V0aHdlc3RJbk1ldGVycz1uLnJlY3RhbmdsZVNvdXRod2VzdEluTWV0ZXJzLHRoaXMuX3JlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzPW4ucmVjdGFuZ2xlTm9ydGhlYXN0SW5NZXRlcnM7ZWxzZXt2YXIgcz10aGlzLl9lbGxpcHNvaWQubWF4aW11bVJhZGl1cypNYXRoLlBJO3RoaXMuX3JlY3RhbmdsZVNvdXRod2VzdEluTWV0ZXJzPW5ldyBlKC1zLC1zKSx0aGlzLl9yZWN0YW5nbGVOb3J0aGVhc3RJbk1ldGVycz1uZXcgZShzLHMpfXZhciBsPXRoaXMuX3Byb2plY3Rpb24udW5wcm9qZWN0KHRoaXMuX3JlY3RhbmdsZVNvdXRod2VzdEluTWV0ZXJzKSx1PXRoaXMuX3Byb2plY3Rpb24udW5wcm9qZWN0KHRoaXMuX3JlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzKTt0aGlzLl9yZWN0YW5nbGU9bmV3IG8obC5sb25naXR1ZGUsbC5sYXRpdHVkZSx1LmxvbmdpdHVkZSx1LmxhdGl0dWRlKX07cmV0dXJuIG4ocy5wcm90b3R5cGUse2VsbGlwc29pZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VsbGlwc29pZH19LHJlY3RhbmdsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlY3RhbmdsZX19LHByb2plY3Rpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9qZWN0aW9ufX19KSxzLnByb3RvdHlwZS5nZXROdW1iZXJPZlhUaWxlc0F0TGV2ZWw9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX251bWJlck9mTGV2ZWxaZXJvVGlsZXNYPDxlfSxzLnByb3RvdHlwZS5nZXROdW1iZXJPZllUaWxlc0F0TGV2ZWw9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX251bWJlck9mTGV2ZWxaZXJvVGlsZXNZPDxlfSxzLnByb3RvdHlwZS5yZWN0YW5nbGVUb05hdGl2ZVJlY3RhbmdsZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuX3Byb2plY3Rpb24scj1uLnByb2plY3Qoby5zb3V0aHdlc3QoZSkpLGE9bi5wcm9qZWN0KG8ubm9ydGhlYXN0KGUpKTtyZXR1cm4gaSh0KT8odC53ZXN0PXIueCx0LnNvdXRoPXIueSx0LmVhc3Q9YS54LHQubm9ydGg9YS55LHQpOm5ldyBvKHIueCxyLnksYS54LGEueSl9LHMucHJvdG90eXBlLnRpbGVYWVRvTmF0aXZlUmVjdGFuZ2xlPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBhPXRoaXMuZ2V0TnVtYmVyT2ZYVGlsZXNBdExldmVsKG4pLHM9dGhpcy5nZXROdW1iZXJPZllUaWxlc0F0TGV2ZWwobiksbD0odGhpcy5fcmVjdGFuZ2xlTm9ydGhlYXN0SW5NZXRlcnMueC10aGlzLl9yZWN0YW5nbGVTb3V0aHdlc3RJbk1ldGVycy54KS9hLHU9dGhpcy5fcmVjdGFuZ2xlU291dGh3ZXN0SW5NZXRlcnMueCtlKmwsYz10aGlzLl9yZWN0YW5nbGVTb3V0aHdlc3RJbk1ldGVycy54KyhlKzEpKmwsZD0odGhpcy5fcmVjdGFuZ2xlTm9ydGhlYXN0SW5NZXRlcnMueS10aGlzLl9yZWN0YW5nbGVTb3V0aHdlc3RJbk1ldGVycy55KS9zLGg9dGhpcy5fcmVjdGFuZ2xlTm9ydGhlYXN0SW5NZXRlcnMueS10KmQsbT10aGlzLl9yZWN0YW5nbGVOb3J0aGVhc3RJbk1ldGVycy55LSh0KzEpKmQ7cmV0dXJuIGkocik/KHIud2VzdD11LHIuc291dGg9bSxyLmVhc3Q9YyxyLm5vcnRoPWgscik6bmV3IG8odSxtLGMsaCl9LHMucHJvdG90eXBlLnRpbGVYWVRvUmVjdGFuZ2xlPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvPXRoaXMudGlsZVhZVG9OYXRpdmVSZWN0YW5nbGUodCxpLG4sciksYT10aGlzLl9wcm9qZWN0aW9uLHM9YS51bnByb2plY3QobmV3IGUoby53ZXN0LG8uc291dGgpKSxsPWEudW5wcm9qZWN0KG5ldyBlKG8uZWFzdCxvLm5vcnRoKSk7cmV0dXJuIG8ud2VzdD1zLmxvbmdpdHVkZSxvLnNvdXRoPXMubGF0aXR1ZGUsby5lYXN0PWwubG9uZ2l0dWRlLG8ubm9ydGg9bC5sYXRpdHVkZSxvfSxzLnByb3RvdHlwZS5wb3NpdGlvblRvVGlsZVhZPWZ1bmN0aW9uKHQsbixyKXt2YXIgbz10aGlzLl9yZWN0YW5nbGU7aWYodC5sYXRpdHVkZT5vLm5vcnRofHx0LmxhdGl0dWRlPG8uc291dGh8fHQubG9uZ2l0dWRlPG8ud2VzdHx8dC5sb25naXR1ZGU+by5lYXN0KXJldHVybiB2b2lkIDA7dmFyIGE9dGhpcy5nZXROdW1iZXJPZlhUaWxlc0F0TGV2ZWwobikscz10aGlzLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbChuKSxsPXRoaXMuX3JlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzLngtdGhpcy5fcmVjdGFuZ2xlU291dGh3ZXN0SW5NZXRlcnMueCx1PWwvYSxjPXRoaXMuX3JlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzLnktdGhpcy5fcmVjdGFuZ2xlU291dGh3ZXN0SW5NZXRlcnMueSxkPWMvcyxoPXRoaXMuX3Byb2plY3Rpb24sbT1oLnByb2plY3QodCksZj1tLngtdGhpcy5fcmVjdGFuZ2xlU291dGh3ZXN0SW5NZXRlcnMueCxwPXRoaXMuX3JlY3RhbmdsZU5vcnRoZWFzdEluTWV0ZXJzLnktbS55LHY9MHxmL3U7dj49YSYmKHY9YS0xKTt2YXIgZz0wfHAvZDtyZXR1cm4gZz49cyYmKGc9cy0xKSxpKHIpPyhyLng9dixyLnk9ZyxyKTpuZXcgZSh2LGcpfSxzfSksZGVmaW5lKCJDb3JlL2xvYWRCbG9iIixbIi4vbG9hZFdpdGhYaHIiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxpKXtyZXR1cm4gZSh7dXJsOnQscmVzcG9uc2VUeXBlOiJibG9iIixoZWFkZXJzOml9KX07cmV0dXJuIHR9KSxkZWZpbmUoIkNvcmUvbG9hZEltYWdlVmlhQmxvYiIsWyIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL2xvYWRCbG9iIiwiLi9sb2FkSW1hZ2UiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPS9eZGF0YTovLHI9ZnVuY3Rpb24ocil7cmV0dXJuIG4udGVzdChyKT9pKHIpOnQocikudGhlbihmdW5jdGlvbih0KXt2YXIgbj13aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTCh0KTtyZXR1cm4gaShuLCExKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJsb2I9dCx3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTChuKSxlfSxmdW5jdGlvbih0KXtyZXR1cm4gd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwobiksZS5yZWplY3QodCl9KX0pfSxvPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4gZS5vcGVuKCJHRVQiLCIjIiwhMCksZS5yZXNwb25zZVR5cGU9ImJsb2IiLCJibG9iIj09PWUucmVzcG9uc2VUeXBlfWNhdGNoKHQpe3JldHVybiExfX0oKTtyZXR1cm4gbz9yOml9KSxkZWZpbmUoIkNvcmUvdGhyb3R0bGVSZXF1ZXN0QnlTZXJ2ZXIiLFsiLi4vVGhpcmRQYXJ0eS9VcmkiLCIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL2RlZmF1bHRWYWx1ZSJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbih0KXt2YXIgaT1uZXcgZSh0KS5yZXNvbHZlKGEpO2kubm9ybWFsaXplKCk7dmFyIG49aS5hdXRob3JpdHk7cmV0dXJuLzovLnRlc3Qobil8fChuPW4rIjoiKygiaHR0cHMiPT09aS5zY2hlbWU/IjQ0MyI6IjgwIikpLG59dmFyIHI9NixvPXt9LGE9bmV3IGUoZG9jdW1lbnQubG9jYXRpb24uaHJlZikscz1mdW5jdGlvbihlLGEpe3ZhciBzPW4oZSksbD1pKG9bc10sMCk7cmV0dXJuIGw+cj92b2lkIDA6KG9bc109bCsxLHQoYShlKSxmdW5jdGlvbihlKXtyZXR1cm4gb1tzXS0tLGV9KS5vdGhlcndpc2UoZnVuY3Rpb24oZSl7cmV0dXJuIG9bc10tLSx0LnJlamVjdChlKX0pKX07cmV0dXJuIHN9KSxkZWZpbmUoIlNjZW5lL0ltYWdlcnlQcm92aWRlciIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9sb2FkSW1hZ2UiLCIuLi9Db3JlL2xvYWRJbWFnZVZpYUJsb2IiLCIuLi9Db3JlL3Rocm90dGxlUmVxdWVzdEJ5U2VydmVyIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgYT1mdW5jdGlvbigpe3RoaXMuZGVmYXVsdEFscGhhPXZvaWQgMCx0aGlzLmRlZmF1bHRCcmlnaHRuZXNzPXZvaWQgMCx0aGlzLmRlZmF1bHRDb250cmFzdD12b2lkIDAsdGhpcy5kZWZhdWx0SHVlPXZvaWQgMCx0aGlzLmRlZmF1bHRTYXR1cmF0aW9uPXZvaWQgMCx0aGlzLmRlZmF1bHRHYW1tYT12b2lkIDAsaS50aHJvd0luc3RhbnRpYXRpb25FcnJvcigpfTtyZXR1cm4gdChhLnByb3RvdHlwZSx7cmVhZHk6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxyZWN0YW5nbGU6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSx0aWxlV2lkdGg6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSx0aWxlSGVpZ2h0OntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sbWF4aW11bUxldmVsOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sbWluaW11bUxldmVsOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sdGlsaW5nU2NoZW1lOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sdGlsZURpc2NhcmRQb2xpY3k6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxlcnJvckV2ZW50OntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sY3JlZGl0OntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0scHJveHk6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxoYXNBbHBoYUNoYW5uZWw6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfX0pLGEucHJvdG90eXBlLmdldFRpbGVDcmVkaXRzPWkudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IsYS5wcm90b3R5cGUucmVxdWVzdEltYWdlPWkudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IsYS5wcm90b3R5cGUucGlja0ZlYXR1cmVzPWkudGhyb3dJbnN0YW50aWF0aW9uRXJyb3IsYS5sb2FkSW1hZ2U9ZnVuY3Rpb24odCxpKXtyZXR1cm4gZSh0LnRpbGVEaXNjYXJkUG9saWN5KT9vKGkscik6byhpLG4pCn0sYX0pLGRlZmluZSgiU2NlbmUvVGlsZU1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMiLCIuLi9Db3JlL0NyZWRpdCIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL0dlb2dyYXBoaWNUaWxpbmdTY2hlbWUiLCIuLi9Db3JlL2xvYWRYTUwiLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL0NvcmUvVGlsZVByb3ZpZGVyRXJyb3IiLCIuLi9Db3JlL1dlYk1lcmNhdG9yVGlsaW5nU2NoZW1lIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9JbWFnZXJ5UHJvdmlkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHAoZSx0LGksbil7dmFyIG89ZS5fdGlsaW5nU2NoZW1lLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbChuKSxhPWUuX3VybCtuKyIvIit0KyIvIisoby1pLTEpKyIuIitlLl9maWxlRXh0ZW5zaW9uLHM9ZS5fcHJveHk7cmV0dXJuIHIocykmJihhPXMuZ2V0VVJMKGEpKSxhfXZhciB2PS9cLyQvLGc9ZnVuY3Rpb24obyl7ZnVuY3Rpb24gYShpKXtmb3IodmFyIG8sYSxzLHUsbT0vdGlsZWZvcm1hdC9pLGY9L3RpbGVzZXQvaSx2PS90aWxlc2V0cy9pLF89L2JvdW5kaW5nYm94L2ksdz0vc3JzL2ksRT1bXSxiPWkuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzLFM9MDtTPGIubGVuZ3RoO1MrKylpZihtLnRlc3QoYi5pdGVtKFMpLm5vZGVOYW1lKSlvPWIuaXRlbShTKTtlbHNlIGlmKHYudGVzdChiLml0ZW0oUykubm9kZU5hbWUpKXtzPWIuaXRlbShTKTtmb3IodmFyIFQ9Yi5pdGVtKFMpLmNoaWxkTm9kZXMseD0wO3g8VC5sZW5ndGg7eCsrKWYudGVzdChULml0ZW0oeCkubm9kZU5hbWUpJiZFLnB1c2goVC5pdGVtKHgpKX1lbHNlIF8udGVzdChiLml0ZW0oUykubm9kZU5hbWUpP2E9Yi5pdGVtKFMpOncudGVzdChiLml0ZW0oUykubm9kZU5hbWUpJiYodT1iLml0ZW0oUykudGV4dENvbnRlbnQpO0MuX2ZpbGVFeHRlbnNpb249bihDLl9maWxlRXh0ZW5zaW9uLG8uZ2V0QXR0cmlidXRlKCJleHRlbnNpb24iKSksQy5fdGlsZVdpZHRoPW4oQy5fdGlsZVdpZHRoLHBhcnNlSW50KG8uZ2V0QXR0cmlidXRlKCJ3aWR0aCIpLDEwKSksQy5fdGlsZUhlaWdodD1uKEMuX3RpbGVIZWlnaHQscGFyc2VJbnQoby5nZXRBdHRyaWJ1dGUoImhlaWdodCIpLDEwKSksQy5fbWluaW11bUxldmVsPW4oQy5fbWluaW11bUxldmVsLHBhcnNlSW50KEVbMF0uZ2V0QXR0cmlidXRlKCJvcmRlciIpLDEwKSksQy5fbWF4aW11bUxldmVsPW4oQy5fbWF4aW11bUxldmVsLHBhcnNlSW50KEVbRS5sZW5ndGgtMV0uZ2V0QXR0cmlidXRlKCJvcmRlciIpLDEwKSk7dmFyIEE9cy5nZXRBdHRyaWJ1dGUoInByb2ZpbGUiKSxQPSExO2lmKCgiZ2VvZGV0aWMiPT09QXx8Im1lcmNhdG9yIj09PUEpJiYoUD0hMCksIXIoQy5fdGlsaW5nU2NoZW1lKSlpZigiZ2VvZGV0aWMiPT09QXx8Imdsb2JhbC1nZW9kZXRpYyI9PT1BKUMuX3RpbGluZ1NjaGVtZT1uZXcgbDtlbHNle2lmKCJtZXJjYXRvciIhPT1BJiYiZ2xvYmFsLW1lcmNhdG9yIiE9PUEpe3ZhciBNPWcrInRpbGVtYXByZXNvdXJjZS54bWwgc3BlY2lmaWVzIGFuIHVuc3VwcG9ydGVkIHByb2ZpbGUgYXR0cmlidXRlLCAiK0ErIi4iO3JldHVybiB5PWQuaGFuZGxlRXJyb3IoeSxDLEMuX2Vycm9yRXZlbnQsTSx2b2lkIDAsdm9pZCAwLHZvaWQgMCxwKSx2b2lkIDB9Qy5fdGlsaW5nU2NoZW1lPW5ldyBofXZhciBJPUMuX3RpbGluZ1NjaGVtZTtpZighcihDLl9yZWN0YW5nbGUpKXt2YXIgRCxPLFIsTDtpZihQKUQ9bmV3IGUocGFyc2VGbG9hdChhLmdldEF0dHJpYnV0ZSgibWlueSIpKSxwYXJzZUZsb2F0KGEuZ2V0QXR0cmlidXRlKCJtaW54IikpKSxPPW5ldyBlKHBhcnNlRmxvYXQoYS5nZXRBdHRyaWJ1dGUoIm1heHkiKSkscGFyc2VGbG9hdChhLmdldEF0dHJpYnV0ZSgibWF4eCIpKSksUj10LmZyb21EZWdyZWVzKEQueCxELnkpLEw9dC5mcm9tRGVncmVlcyhPLngsTy55KTtlbHNlIGlmKEQ9bmV3IGUocGFyc2VGbG9hdChhLmdldEF0dHJpYnV0ZSgibWlueCIpKSxwYXJzZUZsb2F0KGEuZ2V0QXR0cmlidXRlKCJtaW55IikpKSxPPW5ldyBlKHBhcnNlRmxvYXQoYS5nZXRBdHRyaWJ1dGUoIm1heHgiKSkscGFyc2VGbG9hdChhLmdldEF0dHJpYnV0ZSgibWF4eSIpKSksQy5fdGlsaW5nU2NoZW1lIGluc3RhbmNlb2YgbClSPXQuZnJvbURlZ3JlZXMoRC54LEQueSksTD10LmZyb21EZWdyZWVzKE8ueCxPLnkpO2Vsc2V7dmFyIE49Qy5fdGlsaW5nU2NoZW1lLnByb2plY3Rpb247Uj1OLnVucHJvamVjdChEKSxMPU4udW5wcm9qZWN0KE8pfUMuX3JlY3RhbmdsZT1uZXcgYyhSLmxvbmdpdHVkZSxSLmxhdGl0dWRlLEwubG9uZ2l0dWRlLEwubGF0aXR1ZGUpfUMuX3JlY3RhbmdsZS53ZXN0PEkucmVjdGFuZ2xlLndlc3QmJihDLl9yZWN0YW5nbGUud2VzdD1JLnJlY3RhbmdsZS53ZXN0KSxDLl9yZWN0YW5nbGUuZWFzdD5JLnJlY3RhbmdsZS5lYXN0JiYoQy5fcmVjdGFuZ2xlLmVhc3Q9SS5yZWN0YW5nbGUuZWFzdCksQy5fcmVjdGFuZ2xlLnNvdXRoPEkucmVjdGFuZ2xlLnNvdXRoJiYoQy5fcmVjdGFuZ2xlLnNvdXRoPUkucmVjdGFuZ2xlLnNvdXRoKSxDLl9yZWN0YW5nbGUubm9ydGg+SS5yZWN0YW5nbGUubm9ydGgmJihDLl9yZWN0YW5nbGUubm9ydGg9SS5yZWN0YW5nbGUubm9ydGgpO3ZhciB6PUkucG9zaXRpb25Ub1RpbGVYWShjLnNvdXRod2VzdChDLl9yZWN0YW5nbGUpLEMuX21pbmltdW1MZXZlbCksQj1JLnBvc2l0aW9uVG9UaWxlWFkoYy5ub3J0aGVhc3QoQy5fcmVjdGFuZ2xlKSxDLl9taW5pbXVtTGV2ZWwpLEY9KE1hdGguYWJzKEIueC16LngpKzEpKihNYXRoLmFicyhCLnktei55KSsxKTtGPjQmJihDLl9taW5pbXVtTGV2ZWw9MCksQy5fdGlsaW5nU2NoZW1lPUksQy5fcmVhZHk9ITB9ZnVuY3Rpb24gZigpe0MuX2ZpbGVFeHRlbnNpb249bihvLmZpbGVFeHRlbnNpb24sInBuZyIpLEMuX3RpbGVXaWR0aD1uKG8udGlsZVdpZHRoLDI1NiksQy5fdGlsZUhlaWdodD1uKG8udGlsZUhlaWdodCwyNTYpLEMuX21pbmltdW1MZXZlbD1uKG8ubWluaW11bUxldmVsLDApLEMuX21heGltdW1MZXZlbD1uKG8ubWF4aW11bUxldmVsLDE4KSxDLl90aWxpbmdTY2hlbWU9bihvLnRpbGluZ1NjaGVtZSxuZXcgaCksQy5fcmVjdGFuZ2xlPW4oby5yZWN0YW5nbGUsQy5fdGlsaW5nU2NoZW1lLnJlY3RhbmdsZSksQy5fcmVhZHk9ITB9ZnVuY3Rpb24gcCgpe20odShnKyJ0aWxlbWFwcmVzb3VyY2UueG1sIiksYSxmKX1vPW4obyx7fSk7dmFyIGc9by51cmw7di50ZXN0KGcpfHwoZys9Ii8iKSx0aGlzLl91cmw9Zyx0aGlzLl9yZWFkeT0hMSx0aGlzLl9wcm94eT1vLnByb3h5LHRoaXMuX3RpbGVEaXNjYXJkUG9saWN5PW8udGlsZURpc2NhcmRQb2xpY3ksdGhpcy5fZXJyb3JFdmVudD1uZXcgcyx0aGlzLl9maWxlRXh0ZW5zaW9uPW8uZmlsZUV4dGVuc2lvbix0aGlzLl90aWxlV2lkdGg9by50aWxlV2lkdGgsdGhpcy5fdGlsZUhlaWdodD1vLnRpbGVIZWlnaHQsdGhpcy5fbWluaW11bUxldmVsPW8ubWluaW11bUxldmVsLHRoaXMuX21heGltdW1MZXZlbD1vLm1heGltdW1MZXZlbCx0aGlzLl9yZWN0YW5nbGU9Yy5jbG9uZShvLnJlY3RhbmdsZSksdGhpcy5fdGlsaW5nU2NoZW1lPW8udGlsaW5nU2NoZW1lO3ZhciBfPW8uY3JlZGl0OyJzdHJpbmciPT10eXBlb2YgXyYmKF89bmV3IGkoXykpLHRoaXMuX2NyZWRpdD1fO3ZhciB5LEM9dGhpcztwKCl9O3JldHVybiBvKGcucHJvdG90eXBlLHt1cmw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cmx9fSxwcm94eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb3h5fX0sdGlsZVdpZHRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZVdpZHRofX0sdGlsZUhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGVIZWlnaHR9fSxtYXhpbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtTGV2ZWx9fSxtaW5pbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9taW5pbXVtTGV2ZWx9fSx0aWxpbmdTY2hlbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxpbmdTY2hlbWV9fSxyZWN0YW5nbGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWN0YW5nbGV9fSx0aWxlRGlzY2FyZFBvbGljeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGVEaXNjYXJkUG9saWN5fX0sZXJyb3JFdmVudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Vycm9yRXZlbnR9fSxyZWFkeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWR5fX0sY3JlZGl0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlZGl0fX0saGFzQWxwaGFDaGFubmVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH19fSksZy5wcm90b3R5cGUuZ2V0VGlsZUNyZWRpdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSxnLnByb3RvdHlwZS5yZXF1ZXN0SW1hZ2U9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXAodGhpcyxlLHQsaSk7cmV0dXJuIGYubG9hZEltYWdlKHRoaXMsbil9LGcucHJvdG90eXBlLnBpY2tGZWF0dXJlcz1mdW5jdGlvbigpe3JldHVybiB2b2lkIDB9LGd9KSxkZWZpbmUoIkNvcmUvZGVzdHJveU9iamVjdCIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKCl7cmV0dXJuITB9dmFyIG49ZnVuY3Rpb24obixyKXtmdW5jdGlvbiBvKCl7dGhyb3cgbmV3IHQocil9cj1lKHIsIlRoaXMgb2JqZWN0IHdhcyBkZXN0cm95ZWQsIGkuZS4sIGRlc3Ryb3koKSB3YXMgY2FsbGVkLiIpO2Zvcih2YXIgYSBpbiBuKSJmdW5jdGlvbiI9PXR5cGVvZiBuW2FdJiYoblthXT1vKTtyZXR1cm4gbi5pc0Rlc3Ryb3llZD1pLHZvaWQgMH07cmV0dXJuIG59KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0RhdGFTb3VyY2VDb2xsZWN0aW9uIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKCl7dGhpcy5fZGF0YVNvdXJjZXM9W10sdGhpcy5fZGF0YVNvdXJjZUFkZGVkPW5ldyBvLHRoaXMuX2RhdGFTb3VyY2VSZW1vdmVkPW5ldyBvfTtyZXR1cm4gaShhLnByb3RvdHlwZSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YVNvdXJjZXMubGVuZ3RofX0sZGF0YVNvdXJjZUFkZGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YVNvdXJjZUFkZGVkfX0sZGF0YVNvdXJjZVJlbW92ZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhU291cmNlUmVtb3ZlZH19fSksYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUpe3RoaXMuX2RhdGFTb3VyY2VzLnB1c2goZSksdGhpcy5fZGF0YVNvdXJjZUFkZGVkLnJhaXNlRXZlbnQodGhpcyxlKX0sYS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQsaSl7aT1lKGksITEpO3ZhciBuPXRoaXMuX2RhdGFTb3VyY2VzLmluZGV4T2YodCk7cmV0dXJuLTEhPT1uPyh0aGlzLl9kYXRhU291cmNlcy5zcGxpY2UobiwxKSx0aGlzLl9kYXRhU291cmNlUmVtb3ZlZC5yYWlzZUV2ZW50KHRoaXMsdCksaSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuZGVzdHJveSYmdC5kZXN0cm95KCksITApOiExfSxhLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24odCl7dD1lKHQsITEpO2Zvcih2YXIgaT10aGlzLl9kYXRhU291cmNlcyxuPTAscj1pLmxlbmd0aDtyPm47KytuKXt2YXIgbz1pW25dO3RoaXMuX2RhdGFTb3VyY2VSZW1vdmVkLnJhaXNlRXZlbnQodGhpcyxvKSx0JiYiZnVuY3Rpb24iPT10eXBlb2Ygby5kZXN0cm95JiZvLmRlc3Ryb3koKX1pLmxlbmd0aD0wfSxhLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4tMSE9PXRoaXMuaW5kZXhPZihlKX0sYS5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZGF0YVNvdXJjZXMuaW5kZXhPZihlKX0sYS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9kYXRhU291cmNlc1tlXX0sYS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sYS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbW92ZUFsbCghMCksbih0aGlzKX0sYX0pLGRlZmluZSgiQ29yZS9OZWFyRmFyU2NhbGFyIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKHQsaSxuLHIpe3RoaXMubmVhcj1lKHQsMCksdGhpcy5uZWFyVmFsdWU9ZShpLDApLHRoaXMuZmFyPWUobiwxKSx0aGlzLmZhclZhbHVlPWUociwwKX07cmV0dXJuIGkuY2xvbmU9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdChlKT90KG4pPyhuLm5lYXI9ZS5uZWFyLG4ubmVhclZhbHVlPWUubmVhclZhbHVlLG4uZmFyPWUuZmFyLG4uZmFyVmFsdWU9ZS5mYXJWYWx1ZSxuKTpuZXcgaShlLm5lYXIsZS5uZWFyVmFsdWUsZS5mYXIsZS5mYXJWYWx1ZSk6dm9pZCAwfSxpLnBhY2tlZExlbmd0aD00LGkucGFjaz1mdW5jdGlvbih0LGksbil7bj1lKG4sMCksaVtuKytdPXQubmVhcixpW24rK109dC5uZWFyVmFsdWUsaVtuKytdPXQuZmFyLGlbbl09dC5mYXJWYWx1ZX0saS51bnBhY2s9ZnVuY3Rpb24obixyLG8pe3JldHVybiByPWUociwwKSx0KG8pfHwobz1uZXcgaSksby5uZWFyPW5bcisrXSxvLm5lYXJWYWx1ZT1uW3IrK10sby5mYXI9bltyKytdLG8uZmFyVmFsdWU9bltyXSxvfSxpLmVxdWFscz1mdW5jdGlvbihlLGkpe3JldHVybiBlPT09aXx8dChlKSYmdChpKSYmZS5uZWFyPT09aS5uZWFyJiZlLm5lYXJWYWx1ZT09PWkubmVhclZhbHVlJiZlLmZhcj09PWkuZmFyJiZlLmZhclZhbHVlPT09aS5mYXJWYWx1ZX0saS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGkuY2xvbmUodGhpcyxlKX0saS5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBpLmVxdWFscyh0aGlzLGUpfSxpfSksZGVmaW5lKCJDb3JlL0ludGVyc2VjdCIsWyIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17T1VUU0lERTotMSxJTlRFUlNFQ1RJTkc6MCxJTlNJREU6MX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIkNvcmUvSW50ZXJ2YWwiLFsiLi9kZWZhdWx0VmFsdWUiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxpKXt0aGlzLnN0YXJ0PWUodCwwKSx0aGlzLnN0b3A9ZShpLDApfTtyZXR1cm4gdH0pLGRlZmluZSgiQ29yZS9Cb3VuZGluZ1NwaGVyZSIsWyIuL0NhcnRlc2lhbjMiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4vSW50ZXJzZWN0IiwiLi9JbnRlcnZhbCIsIi4vTWF0cml4NCIsIi4vUmVjdGFuZ2xlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjKXsidXNlIHN0cmljdCI7dmFyIGQ9ZnVuY3Rpb24odCxuKXt0aGlzLmNlbnRlcj1lLmNsb25lKGkodCxlLlpFUk8pKSx0aGlzLnJhZGl1cz1pKG4sMCl9LGg9bmV3IGUsbT1uZXcgZSxmPW5ldyBlLHA9bmV3IGUsdj1uZXcgZSxnPW5ldyBlLF89bmV3IGUseT1uZXcgZSxDPW5ldyBlLHc9bmV3IGUsRT1uZXcgZSxiPW5ldyBlO2QuZnJvbVBvaW50cz1mdW5jdGlvbih0LGkpe2lmKG4oaSl8fChpPW5ldyBkKSwhbih0KXx8MD09PXQubGVuZ3RoKXJldHVybiBpLmNlbnRlcj1lLmNsb25lKGUuWkVSTyxpLmNlbnRlciksaS5yYWRpdXM9MCxpO2Zvcih2YXIgcj1lLmNsb25lKHRbMF0sXyksbz1lLmNsb25lKHIsaCksYT1lLmNsb25lKHIsbSkscz1lLmNsb25lKHIsZiksbD1lLmNsb25lKHIscCksdT1lLmNsb25lKHIsdiksYz1lLmNsb25lKHIsZyksUz10Lmxlbmd0aCxUPTE7Uz5UO1QrKyl7ZS5jbG9uZSh0W1RdLHIpO3ZhciB4PXIueCxBPXIueSxQPXIuejt4PG8ueCYmZS5jbG9uZShyLG8pLHg+bC54JiZlLmNsb25lKHIsbCksQTxhLnkmJmUuY2xvbmUocixhKSxBPnUueSYmZS5jbG9uZShyLHUpLFA8cy56JiZlLmNsb25lKHIscyksUD5jLnomJmUuY2xvbmUocixjKX12YXIgTT1lLm1hZ25pdHVkZVNxdWFyZWQoZS5zdWJ0cmFjdChsLG8seSkpLEk9ZS5tYWduaXR1ZGVTcXVhcmVkKGUuc3VidHJhY3QodSxhLHkpKSxEPWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KGMscyx5KSksTz1vLFI9bCxMPU07ST5MJiYoTD1JLE89YSxSPXUpLEQ+TCYmKEw9RCxPPXMsUj1jKTt2YXIgTj1DO04ueD0uNSooTy54K1IueCksTi55PS41KihPLnkrUi55KSxOLno9LjUqKE8ueitSLnopO3ZhciB6PWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KFIsTix5KSksQj1NYXRoLnNxcnQoeiksRj13O0YueD1vLngsRi55PWEueSxGLno9cy56O3ZhciBWPUU7Vi54PWwueCxWLnk9dS55LFYuej1jLno7dmFyIGs9ZS5tdWx0aXBseUJ5U2NhbGFyKGUuYWRkKEYsVix5KSwuNSxiKSxVPTA7Zm9yKFQ9MDtTPlQ7VCsrKXtlLmNsb25lKHRbVF0scik7dmFyIFc9ZS5tYWduaXR1ZGUoZS5zdWJ0cmFjdChyLGsseSkpO1c+VSYmKFU9Vyk7dmFyIEc9ZS5tYWduaXR1ZGVTcXVhcmVkKGUuc3VidHJhY3QocixOLHkpKTtpZihHPnope3ZhciBIPU1hdGguc3FydChHKTtCPS41KihCK0gpLHo9QipCO3ZhciBxPUgtQjtOLng9KEIqTi54K3Eqci54KS9ILE4ueT0oQipOLnkrcSpyLnkpL0gsTi56PShCKk4ueitxKnIueikvSH19cmV0dXJuIFU+Qj8oZS5jbG9uZShOLGkuY2VudGVyKSxpLnJhZGl1cz1CKTooZS5jbG9uZShrLGkuY2VudGVyKSxpLnJhZGl1cz1VKSxpfTt2YXIgUz1uZXcgYSxUPW5ldyBlLHg9bmV3IGUsQT1uZXcgdCxQPW5ldyB0O2QuZnJvbVJlY3RhbmdsZTJEPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZC5mcm9tUmVjdGFuZ2xlV2l0aEhlaWdodHMyRChlLHQsMCwwLGkpfSxkLmZyb21SZWN0YW5nbGVXaXRoSGVpZ2h0czJEPWZ1bmN0aW9uKHQscixvLGEscyl7aWYobihzKXx8KHM9bmV3IGQpLCFuKHQpKXJldHVybiBzLmNlbnRlcj1lLmNsb25lKGUuWkVSTyxzLmNlbnRlcikscy5yYWRpdXM9MCxzO3I9aShyLFMpLGMuc291dGh3ZXN0KHQsQSksQS5oZWlnaHQ9byxjLm5vcnRoZWFzdCh0LFApLFAuaGVpZ2h0PWE7dmFyIGw9ci5wcm9qZWN0KEEsVCksdT1yLnByb2plY3QoUCx4KSxoPXUueC1sLngsbT11LnktbC55LGY9dS56LWwuejtzLnJhZGl1cz0uNSpNYXRoLnNxcnQoaCpoK20qbStmKmYpO3ZhciBwPXMuY2VudGVyO3JldHVybiBwLng9bC54Ky41KmgscC55PWwueSsuNSptLHAuej1sLnorLjUqZixzfTt2YXIgTT1bXTtkLmZyb21SZWN0YW5nbGUzRD1mdW5jdGlvbihlLHQscixhKXt0PWkodCxvLldHUzg0KSxyPWkociwwKTt2YXIgcztyZXR1cm4gbihlKSYmKHM9Yy5zdWJzYW1wbGUoZSx0LHIsTSkpLGQuZnJvbVBvaW50cyhzLGEpfSxkLmZyb21WZXJ0aWNlcz1mdW5jdGlvbih0LHIsbyxhKXtpZihuKGEpfHwoYT1uZXcgZCksIW4odCl8fDA9PT10Lmxlbmd0aClyZXR1cm4gYS5jZW50ZXI9ZS5jbG9uZShlLlpFUk8sYS5jZW50ZXIpLGEucmFkaXVzPTAsYTtyPWkocixlLlpFUk8pLG89aShvLDMpO3ZhciBzPV87cy54PXRbMF0rci54LHMueT10WzFdK3IueSxzLno9dFsyXStyLno7Zm9yKHZhciBsPWUuY2xvbmUocyxoKSx1PWUuY2xvbmUocyxtKSxjPWUuY2xvbmUocyxmKSxTPWUuY2xvbmUocyxwKSxUPWUuY2xvbmUocyx2KSx4PWUuY2xvbmUocyxnKSxBPXQubGVuZ3RoLFA9MDtBPlA7UCs9byl7dmFyIE09dFtQXStyLngsST10W1ArMV0rci55LEQ9dFtQKzJdK3IuejtzLng9TSxzLnk9SSxzLno9RCxNPGwueCYmZS5jbG9uZShzLGwpLE0+Uy54JiZlLmNsb25lKHMsUyksSTx1LnkmJmUuY2xvbmUocyx1KSxJPlQueSYmZS5jbG9uZShzLFQpLEQ8Yy56JiZlLmNsb25lKHMsYyksRD54LnomJmUuY2xvbmUocyx4KX12YXIgTz1lLm1hZ25pdHVkZVNxdWFyZWQoZS5zdWJ0cmFjdChTLGwseSkpLFI9ZS5tYWduaXR1ZGVTcXVhcmVkKGUuc3VidHJhY3QoVCx1LHkpKSxMPWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KHgsYyx5KSksTj1sLHo9UyxCPU87Uj5CJiYoQj1SLE49dSx6PVQpLEw+QiYmKEI9TCxOPWMsej14KTt2YXIgRj1DO0YueD0uNSooTi54K3oueCksRi55PS41KihOLnkrei55KSxGLno9LjUqKE4ueit6LnopO3ZhciBWPWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KHosRix5KSksaz1NYXRoLnNxcnQoViksVT13O1UueD1sLngsVS55PXUueSxVLno9Yy56O3ZhciBXPUU7Vy54PVMueCxXLnk9VC55LFcuej14Lno7dmFyIEc9ZS5tdWx0aXBseUJ5U2NhbGFyKGUuYWRkKFUsVyx5KSwuNSxiKSxIPTA7Zm9yKFA9MDtBPlA7UCs9byl7cy54PXRbUF0rci54LHMueT10W1ArMV0rci55LHMuej10W1ArMl0rci56O3ZhciBxPWUubWFnbml0dWRlKGUuc3VidHJhY3QocyxHLHkpKTtxPkgmJihIPXEpO3ZhciBqPWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KHMsRix5KSk7aWYoaj5WKXt2YXIgWT1NYXRoLnNxcnQoaik7az0uNSooaytZKSxWPWsqazt2YXIgWD1ZLWs7Ri54PShrKkYueCtYKnMueCkvWSxGLnk9KGsqRi55K1gqcy55KS9ZLEYuej0oaypGLnorWCpzLnopL1l9fXJldHVybiBIPms/KGUuY2xvbmUoRixhLmNlbnRlciksYS5yYWRpdXM9ayk6KGUuY2xvbmUoRyxhLmNlbnRlciksYS5yYWRpdXM9SCksYX0sZC5mcm9tQ29ybmVyUG9pbnRzPWZ1bmN0aW9uKHQsaSxyKXtuKHIpfHwocj1uZXcgZCk7dmFyIG89ci5jZW50ZXI7cmV0dXJuIGUuYWRkKHQsaSxvKSxlLm11bHRpcGx5QnlTY2FsYXIobywuNSxvKSxyLnJhZGl1cz1lLmRpc3RhbmNlKG8saSkscn0sZC5mcm9tRWxsaXBzb2lkPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIG4oaSl8fChpPW5ldyBkKSxlLmNsb25lKGUuWkVSTyxpLmNlbnRlciksaS5yYWRpdXM9dC5tYXhpbXVtUmFkaXVzLGl9LGQuY2xvbmU9ZnVuY3Rpb24odCxpKXtyZXR1cm4gbih0KT9uKGkpPyhpLmNlbnRlcj1lLmNsb25lKHQuY2VudGVyLGkuY2VudGVyKSxpLnJhZGl1cz10LnJhZGl1cyxpKTpuZXcgZCh0LmNlbnRlcix0LnJhZGl1cyk6dm9pZCAwfSxkLnBhY2tlZExlbmd0aD00LGQucGFjaz1mdW5jdGlvbihlLHQsbil7bj1pKG4sMCk7dmFyIHI9ZS5jZW50ZXI7dFtuKytdPXIueCx0W24rK109ci55LHRbbisrXT1yLnosdFtuXT1lLnJhZGl1c30sZC51bnBhY2s9ZnVuY3Rpb24oZSx0LHIpe3Q9aSh0LDApLG4ocil8fChyPW5ldyBkKTt2YXIgbz1yLmNlbnRlcjtyZXR1cm4gby54PWVbdCsrXSxvLnk9ZVt0KytdLG8uej1lW3QrK10sci5yYWRpdXM9ZVt0XSxyfTt2YXIgST1uZXcgZSxEPW5ldyBlO2QudW5pb249ZnVuY3Rpb24odCxpLHIpe24ocil8fChyPW5ldyBkKTt2YXIgbz10LmNlbnRlcixhPWkuY2VudGVyO2UuYWRkKG8sYSxEKTt2YXIgcz1lLm11bHRpcGx5QnlTY2FsYXIoRCwuNSxEKSxsPWUubWFnbml0dWRlKGUuc3VidHJhY3QobyxzLEkpKSt0LnJhZGl1cyx1PWUubWFnbml0dWRlKGUuc3VidHJhY3QoYSxzLEkpKStpLnJhZGl1cztyZXR1cm4gci5yYWRpdXM9TWF0aC5tYXgobCx1KSxlLmNsb25lKHMsci5jZW50ZXIpLHJ9O3ZhciBPPW5ldyBlO2QuZXhwYW5kPWZ1bmN0aW9uKHQsaSxuKXtuPWQuY2xvbmUodCxuKTt2YXIgcj1lLm1hZ25pdHVkZShlLnN1YnRyYWN0KGksbi5jZW50ZXIsTykpO3JldHVybiByPm4ucmFkaXVzJiYobi5yYWRpdXM9ciksbn0sZC5pbnRlcnNlY3Q9ZnVuY3Rpb24odCxpKXt2YXIgbj10LmNlbnRlcixyPXQucmFkaXVzLG89ZS5kb3QoaSxuKStpLnc7cmV0dXJuLXI+bz9zLk9VVFNJREU6cj5vP3MuSU5URVJTRUNUSU5HOnMuSU5TSURFfSxkLnRyYW5zZm9ybT1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIG4oaSl8fChpPW5ldyBkKSxpLmNlbnRlcj11Lm11bHRpcGx5QnlQb2ludCh0LGUuY2VudGVyLGkuY2VudGVyKSxpLnJhZGl1cz11LmdldE1heGltdW1TY2FsZSh0KSplLnJhZGl1cyxpfTt2YXIgUj1uZXcgZTtkLmRpc3RhbmNlU3F1YXJlZFRvPWZ1bmN0aW9uKHQsaSl7dmFyIG49ZS5zdWJ0cmFjdCh0LmNlbnRlcixpLFIpO3JldHVybiBlLm1hZ25pdHVkZVNxdWFyZWQobiktdC5yYWRpdXMqdC5yYWRpdXN9LGQudHJhbnNmb3JtV2l0aG91dFNjYWxlPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gbihpKXx8KGk9bmV3IGQpLGkuY2VudGVyPXUubXVsdGlwbHlCeVBvaW50KHQsZS5jZW50ZXIsaS5jZW50ZXIpLGkucmFkaXVzPWUucmFkaXVzLGl9O3ZhciBMPW5ldyBlO2QuY29tcHV0ZVBsYW5lRGlzdGFuY2VzPWZ1bmN0aW9uKHQsaSxyLG8pe24obyl8fChvPW5ldyBsKTt2YXIgYT1lLnN1YnRyYWN0KHQuY2VudGVyLGksTCkscz1lLm11bHRpcGx5QnlTY2FsYXIocixlLmRvdChyLGEpLEwpLHU9ZS5tYWduaXR1ZGUocyk7cmV0dXJuIG8uc3RhcnQ9dS10LnJhZGl1cyxvLnN0b3A9dSt0LnJhZGl1cyxvfTtmb3IodmFyIE49bmV3IGUsej1uZXcgZSxCPW5ldyBlLEY9bmV3IGUsVj1uZXcgZSxrPW5ldyB0LFU9bmV3IEFycmF5KDgpLFc9MDs4Plc7KytXKVVbV109bmV3IGU7dmFyIEc9bmV3IGE7cmV0dXJuIGQucHJvamVjdFRvMkQ9ZnVuY3Rpb24odCxuLHIpe249aShuLEcpO3ZhciBvPW4uZWxsaXBzb2lkLGE9dC5jZW50ZXIscz10LnJhZGl1cyxsPW8uZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKGEsTiksdT1lLmNyb3NzKGUuVU5JVF9aLGwseik7ZS5ub3JtYWxpemUodSx1KTt2YXIgYz1lLmNyb3NzKGwsdSxCKTtlLm5vcm1hbGl6ZShjLGMpLGUubXVsdGlwbHlCeVNjYWxhcihsLHMsbCksZS5tdWx0aXBseUJ5U2NhbGFyKGMscyxjKSxlLm11bHRpcGx5QnlTY2FsYXIodSxzLHUpO3ZhciBoPWUubmVnYXRlKGMsViksbT1lLm5lZ2F0ZSh1LEYpLGY9VSxwPWZbMF07ZS5hZGQobCxjLHApLGUuYWRkKHAsdSxwKSxwPWZbMV0sZS5hZGQobCxjLHApLGUuYWRkKHAsbSxwKSxwPWZbMl0sZS5hZGQobCxoLHApLGUuYWRkKHAsbSxwKSxwPWZbM10sZS5hZGQobCxoLHApLGUuYWRkKHAsdSxwKSxlLm5lZ2F0ZShsLGwpLHA9Zls0XSxlLmFkZChsLGMscCksZS5hZGQocCx1LHApLHA9Zls1XSxlLmFkZChsLGMscCksZS5hZGQocCxtLHApLHA9Zls2XSxlLmFkZChsLGgscCksZS5hZGQocCxtLHApLHA9Zls3XSxlLmFkZChsLGgscCksZS5hZGQocCx1LHApO2Zvcih2YXIgdj1mLmxlbmd0aCxnPTA7dj5nOysrZyl7dmFyIF89ZltnXTtlLmFkZChhLF8sXyk7dmFyIHk9by5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhfLGspO24ucHJvamVjdCh5LF8pfXI9ZC5mcm9tUG9pbnRzKGYsciksYT1yLmNlbnRlcjt2YXIgQz1hLngsdz1hLnksRT1hLno7cmV0dXJuIGEueD1FLGEueT1DLGEuej13LHJ9LGQuZXF1YWxzPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIHQ9PT1pfHxuKHQpJiZuKGkpJiZlLmVxdWFscyh0LmNlbnRlcixpLmNlbnRlcikmJnQucmFkaXVzPT09aS5yYWRpdXN9LGQucHJvdG90eXBlLmludGVyc2VjdD1mdW5jdGlvbihlKXtyZXR1cm4gZC5pbnRlcnNlY3QodGhpcyxlKX0sZC5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBkLmVxdWFscyh0aGlzLGUpfSxkLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gZC5jbG9uZSh0aGlzLGUpfSxkfSksZGVmaW5lKCJDb3JlL0NvbXBvbmVudERhdGF0eXBlIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRmVhdHVyZURldGVjdGlvbiIsIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSx0LGksbixyKXsidXNlIHN0cmljdCI7aWYoIW4uc3VwcG9ydHNUeXBlZEFycmF5cygpKXJldHVybnt9O3ZhciBvPXtCWVRFOjUxMjAsVU5TSUdORURfQllURTo1MTIxLFNIT1JUOjUxMjIsVU5TSUdORURfU0hPUlQ6NTEyMyxGTE9BVDo1MTI2LERPVUJMRTo1MTMwfTtyZXR1cm4gby5nZXRTaXplSW5CeXRlcz1mdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZSBvLkJZVEU6cmV0dXJuIEludDhBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtjYXNlIG8uVU5TSUdORURfQllURTpyZXR1cm4gVWludDhBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtjYXNlIG8uU0hPUlQ6cmV0dXJuIEludDE2QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7Y2FzZSBvLlVOU0lHTkVEX1NIT1JUOnJldHVybiBVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtjYXNlIG8uRkxPQVQ6cmV0dXJuIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtjYXNlIG8uRE9VQkxFOnJldHVybiBGbG9hdDY0QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7ZGVmYXVsdDp0aHJvdyBuZXcgaSgiY29tcG9uZW50RGF0YXR5cGUgaXMgbm90IGEgdmFsaWQgdmFsdWUuIil9fSxvLmZyb21UeXBlZEFycmF5PWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgSW50OEFycmF5P28uQllURTplIGluc3RhbmNlb2YgVWludDhBcnJheT9vLlVOU0lHTkVEX0JZVEU6ZSBpbnN0YW5jZW9mIEludDE2QXJyYXk/by5TSE9SVDplIGluc3RhbmNlb2YgVWludDE2QXJyYXk/by5VTlNJR05FRF9TSE9SVDplIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P28uRkxPQVQ6ZSBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheT9vLkRPVUJMRTp2b2lkIDB9LG8udmFsaWRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSkmJihlPT09by5CWVRFfHxlPT09by5VTlNJR05FRF9CWVRFfHxlPT09by5TSE9SVHx8ZT09PW8uVU5TSUdORURfU0hPUlR8fGU9PT1vLkZMT0FUfHxlPT09by5ET1VCTEUpfSxvLmNyZWF0ZVR5cGVkQXJyYXk9ZnVuY3Rpb24oZSx0KXtzd2l0Y2goZSl7Y2FzZSBvLkJZVEU6cmV0dXJuIG5ldyBJbnQ4QXJyYXkodCk7Y2FzZSBvLlVOU0lHTkVEX0JZVEU6cmV0dXJuIG5ldyBVaW50OEFycmF5KHQpO2Nhc2Ugby5TSE9SVDpyZXR1cm4gbmV3IEludDE2QXJyYXkodCk7Y2FzZSBvLlVOU0lHTkVEX1NIT1JUOnJldHVybiBuZXcgVWludDE2QXJyYXkodCk7Y2FzZSBvLkZMT0FUOnJldHVybiBuZXcgRmxvYXQzMkFycmF5KHQpO2Nhc2Ugby5ET1VCTEU6cmV0dXJuIG5ldyBGbG9hdDY0QXJyYXkodCk7ZGVmYXVsdDp0aHJvdyBuZXcgaSgiY29tcG9uZW50RGF0YXR5cGUgaXMgbm90IGEgdmFsaWQgdmFsdWUuIil9fSxvLmNyZWF0ZUFycmF5QnVmZmVyVmlldz1mdW5jdGlvbih0LG4scixhKXtzd2l0Y2gocj1lKHIsMCksYT1lKGEsKG4uYnl0ZUxlbmd0aC1yKS9vLmdldFNpemVJbkJ5dGVzKHQpKSx0KXtjYXNlIG8uQllURTpyZXR1cm4gbmV3IEludDhBcnJheShuLHIsYSk7Y2FzZSBvLlVOU0lHTkVEX0JZVEU6cmV0dXJuIG5ldyBVaW50OEFycmF5KG4scixhKTtjYXNlIG8uU0hPUlQ6cmV0dXJuIG5ldyBJbnQxNkFycmF5KG4scixhKTtjYXNlIG8uVU5TSUdORURfU0hPUlQ6cmV0dXJuIG5ldyBVaW50MTZBcnJheShuLHIsYSk7Y2FzZSBvLkZMT0FUOnJldHVybiBuZXcgRmxvYXQzMkFycmF5KG4scixhKTtjYXNlIG8uRE9VQkxFOnJldHVybiBuZXcgRmxvYXQ2NEFycmF5KG4scixhKTtkZWZhdWx0OnRocm93IG5ldyBpKCJjb21wb25lbnREYXRhdHlwZSBpcyBub3QgYSB2YWxpZCB2YWx1ZS4iKX19LHIobyl9KSxkZWZpbmUoIkNvcmUvRW5jb2RlZENhcnRlc2lhbjMiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKCl7dGhpcy5oaWdoPWUuY2xvbmUoZS5aRVJPKSx0aGlzLmxvdz1lLmNsb25lKGUuWkVSTyl9O2kuZW5jb2RlPWZ1bmN0aW9uKGUsaSl7dChpKXx8KGk9e2hpZ2g6MCxsb3c6MH0pO3ZhciBuO3JldHVybiBlPj0wPyhuPTY1NTM2Kk1hdGguZmxvb3IoZS82NTUzNiksaS5oaWdoPW4saS5sb3c9ZS1uKToobj02NTUzNipNYXRoLmZsb29yKC1lLzY1NTM2KSxpLmhpZ2g9LW4saS5sb3c9ZStuKSxpfTt2YXIgbj17aGlnaDowLGxvdzowfTtpLmZyb21DYXJ0ZXNpYW49ZnVuY3Rpb24oZSxyKXt0KHIpfHwocj1uZXcgaSk7dmFyIG89ci5oaWdoLGE9ci5sb3c7cmV0dXJuIGkuZW5jb2RlKGUueCxuKSxvLng9bi5oaWdoLGEueD1uLmxvdyxpLmVuY29kZShlLnksbiksby55PW4uaGlnaCxhLnk9bi5sb3csaS5lbmNvZGUoZS56LG4pLG8uej1uLmhpZ2gsYS56PW4ubG93LHJ9O3ZhciByPW5ldyBpO3JldHVybiBpLndyaXRlRWxlbWVudHM9ZnVuY3Rpb24oZSx0LG4pe2kuZnJvbUNhcnRlc2lhbihlLHIpO3ZhciBvPXIuaGlnaCxhPXIubG93O3Rbbl09by54LHRbbisxXT1vLnksdFtuKzJdPW8ueix0W24rM109YS54LHRbbis0XT1hLnksdFtuKzVdPWEuen0saX0pLGRlZmluZSgiQ29yZS9JbmRleERhdGF0eXBlIixbIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vTWF0aCJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj17VU5TSUdORURfQllURTo1MTIxLFVOU0lHTkVEX1NIT1JUOjUxMjMsVU5TSUdORURfSU5UOjUxMjV9O3JldHVybiByLmdldFNpemVJbkJ5dGVzPWZ1bmN0aW9uKGUpe3N3aXRjaChlKXtjYXNlIHIuVU5TSUdORURfQllURTpyZXR1cm4gVWludDhBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtjYXNlIHIuVU5TSUdORURfU0hPUlQ6cmV0dXJuIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO2Nhc2Ugci5VTlNJR05FRF9JTlQ6cmV0dXJuIFVpbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UfX0sci52YWxpZGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gZSh0KSYmKHQ9PT1yLlVOU0lHTkVEX0JZVEV8fHQ9PT1yLlVOU0lHTkVEX1NIT1JUfHx0PT09ci5VTlNJR05FRF9JTlQpfSxyLmNyZWF0ZVR5cGVkQXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT5uLlNJWFRZX0ZPVVJfS0lMT0JZVEVTP25ldyBVaW50MzJBcnJheSh0KTpuZXcgVWludDE2QXJyYXkodCl9LGkocil9KSxkZWZpbmUoIlJlbmRlcmVyL0J1ZmZlclVzYWdlIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtTVFJFQU1fRFJBVzozNTA0MCxTVEFUSUNfRFJBVzozNTA0NCxEWU5BTUlDX0RSQVc6MzUwNDgsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10LlNUUkVBTV9EUkFXfHxlPT09dC5TVEFUSUNfRFJBV3x8ZT09PXQuRFlOQU1JQ19EUkFXfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlJlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4obil7bj1lKG4sZS5FTVBUWV9PQkpFQ1QpO3ZhciByPW4uZGVmaW5lcyxvPW4uc291cmNlcyxhPW4ucGlja0NvbG9yUXVhbGlmaWVyO2lmKHQoYSkmJiJ1bmlmb3JtIiE9PWEmJiJ2YXJ5aW5nIiE9PWEpdGhyb3cgbmV3IGkoIm9wdGlvbnMucGlja0NvbG9yUXVhbGlmaWVyIG11c3QgYmUgJ3VuaWZvcm0nIG9yICd2YXJ5aW5nJy4iKTt2YXIgcyxsLHU9IiI7aWYodChyKSYmci5sZW5ndGg+MClmb3IobD1yLmxlbmd0aCxzPTA7bD5zOysrcykwIT09cltzXS5sZW5ndGgmJih1Kz0iI2RlZmluZSAiK3Jbc10rIlxuIik7aWYodChvKSYmby5sZW5ndGg+MClmb3IobD1vLmxlbmd0aCxzPTA7bD5zOysrcyl1Kz0iXG4jbGluZSAwXG4iK29bc107aWYodChhKSl7dmFyIGM9dS5yZXBsYWNlKC92b2lkXHMrbWFpblxzKlwoXHMqKD86dm9pZCk/XHMqXCkvZywidm9pZCBjem1fb2xkX21haW4oKSIpLGQ9YSsiIHZlYzQgY3ptX3BpY2tDb2xvcjsgXG4iKyJ2b2lkIG1haW4oKSBcbiIrInsgXG4iKyIgICAgY3ptX29sZF9tYWluKCk7IFxuIisiICAgIGlmIChnbF9GcmFnQ29sb3IuYSA9PSAwLjApIHsgXG4iKyIgICAgICAgIGRpc2NhcmQ7IFxuIisiICAgIH0gXG4iKyIgICAgZ2xfRnJhZ0NvbG9yID0gY3ptX3BpY2tDb2xvcjsgXG4iKyJ9Ijt1PWMrIlxuIitkfXJldHVybiB1fXJldHVybiBufSksZGVmaW5lKCJDb3JlL1ByaW1pdGl2ZVR5cGUiLFsiLi9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e1BPSU5UUzowLExJTkVTOjEsTElORV9MT09QOjIsTElORV9TVFJJUDozLFRSSUFOR0xFUzo0LFRSSUFOR0xFX1NUUklQOjUsVFJJQU5HTEVfRkFOOjYsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10LlBPSU5UU3x8ZT09PXQuTElORVN8fGU9PT10LkxJTkVfTE9PUHx8ZT09PXQuTElORV9TVFJJUHx8ZT09PXQuVFJJQU5HTEVTfHxlPT09dC5UUklBTkdMRV9TVFJJUHx8ZT09PXQuVFJJQU5HTEVfRkFOfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlJlbmRlcmVyL0RyYXdDb21tYW5kIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9QcmltaXRpdmVUeXBlIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9ZnVuY3Rpb24oaSl7aT1lKGksZS5FTVBUWV9PQkpFQ1QpLHRoaXMuYm91bmRpbmdWb2x1bWU9aS5ib3VuZGluZ1ZvbHVtZSx0aGlzLmN1bGw9ZShpLmN1bGwsITApLHRoaXMubW9kZWxNYXRyaXg9aS5tb2RlbE1hdHJpeCx0aGlzLnByaW1pdGl2ZVR5cGU9ZShpLnByaW1pdGl2ZVR5cGUsdC5UUklBTkdMRVMpLHRoaXMudmVydGV4QXJyYXk9aS52ZXJ0ZXhBcnJheSx0aGlzLmNvdW50PWkuY291bnQsdGhpcy5vZmZzZXQ9ZShpLm9mZnNldCwwKSx0aGlzLnNoYWRlclByb2dyYW09aS5zaGFkZXJQcm9ncmFtLHRoaXMudW5pZm9ybU1hcD1pLnVuaWZvcm1NYXAsdGhpcy5yZW5kZXJTdGF0ZT1pLnJlbmRlclN0YXRlLHRoaXMuZnJhbWVidWZmZXI9aS5mcmFtZWJ1ZmZlcix0aGlzLnBhc3M9aS5wYXNzLHRoaXMuZXhlY3V0ZUluQ2xvc2VzdEZydXN0dW09ZShpLmV4ZWN1dGVJbkNsb3Nlc3RGcnVzdHVtLCExKSx0aGlzLm93bmVyPWkub3duZXIsdGhpcy5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZT1lKGkuZGVidWdTaG93Qm91bmRpbmdWb2x1bWUsITEpLHRoaXMuZGVidWdPdmVybGFwcGluZ0ZydXN0dW1zPTAsdGhpcy5vaXQ9dm9pZCAwfTtyZXR1cm4gaS5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbihlLHQsaSxuKXtlLmRyYXcodGhpcyx0LGksbil9LGl9KSxkZWZpbmUoIlJlbmRlcmVyL1ZlcnRleEFycmF5RmFjYWRlIixbIi4uL0NvcmUvQ29tcG9uZW50RGF0YXR5cGUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL01hdGgiLCIuL0J1ZmZlclVzYWdlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHMoZSx0KXtpZih0Lm5lZWRzQ29tbWl0JiZ0LnZlcnRleFNpemVJbkJ5dGVzPjApe3QubmVlZHNDb21taXQ9ITE7dmFyIG49dC52ZXJ0ZXhCdWZmZXIscj1lLl9zaXplKnQudmVydGV4U2l6ZUluQnl0ZXMsbz1pKG4pO2lmKCFvfHxuLnNpemVJbkJ5dGVzPHIpcmV0dXJuIG8mJm4uZGVzdHJveSgpLHQudmVydGV4QnVmZmVyPWUuX2NvbnRleHQuY3JlYXRlVmVydGV4QnVmZmVyKHQuYXJyYXlCdWZmZXIsdC51c2FnZSksdC52ZXJ0ZXhCdWZmZXIudmVydGV4QXJyYXlEZXN0cm95YWJsZT0hMSwhMDt0LnZlcnRleEJ1ZmZlci5jb3B5RnJvbUFycmF5Vmlldyh0LmFycmF5QnVmZmVyKX1yZXR1cm4hMX1mdW5jdGlvbiBsKGUsdCxpKXtpZihlLm5lZWRzQ29tbWl0JiZlLnZlcnRleFNpemVJbkJ5dGVzPjApe3ZhciBuPWUudmVydGV4U2l6ZUluQnl0ZXMqdCxyPWUudmVydGV4U2l6ZUluQnl0ZXMqaTtlLnZlcnRleEJ1ZmZlci5jb3B5RnJvbUFycmF5VmlldyhuZXcgVWludDhBcnJheShlLmFycmF5QnVmZmVyLG4sciksbil9fWZ1bmN0aW9uIHUoZSl7dmFyIHQ9ZS52YUJ5UHVycG9zZTtpZihpKHQpKXtmb3IodmFyIG4gaW4gdClpZih0Lmhhc093blByb3BlcnR5KG4pKWZvcih2YXIgcj10W25dLG89ci5sZW5ndGgsYT0wO28+YTsrK2EpclthXS52YS5kZXN0cm95KCk7ZS52YUJ5UHVycG9zZT12b2lkIDB9fXZhciBjPWZ1bmN0aW9uKHQsbixyKXtmdW5jdGlvbiBvKHQsaSl7cmV0dXJuIGUuZ2V0U2l6ZUluQnl0ZXMoaS5jb21wb25lbnREYXRhdHlwZSktZS5nZXRTaXplSW5CeXRlcyh0LmNvbXBvbmVudERhdGF0eXBlKX12YXIgcz1jLl92ZXJpZnlBdHRyaWJ1dGVzKG4pO3I9cnx8MDtmb3IodmFyIGwsdSxkLGgsbT17fSxmPVtdLHA9cy5sZW5ndGgsdj0wO3A+djsrK3Ype3ZhciBnPXNbdl07Zy52ZXJ0ZXhCdWZmZXI/Zi5wdXNoKGcpOihkPWcucHVycG9zZSxsPW1bZF0saShsKXx8KGw9bVtkXT17fSksaD1nLnVzYWdlLHU9bFtoXSxpKHUpfHwodT1sW2hdPVtdKSx1LnB1c2goZykpfXRoaXMuX2J1ZmZlcnNCeVB1cnBvc2VBbmRVc2FnZT17fSx0aGlzLl9hbGxCdWZmZXJzPVtdO2ZvcihkIGluIG0paWYobS5oYXNPd25Qcm9wZXJ0eShkKSl7bD1tW2RdO3ZhciBfPXRoaXMuX2J1ZmZlcnNCeVB1cnBvc2VBbmRVc2FnZVtkXTtpKF8pfHwoXz10aGlzLl9idWZmZXJzQnlQdXJwb3NlQW5kVXNhZ2VbZF09e30pO2ZvcihoIGluIGwpaWYobC5oYXNPd25Qcm9wZXJ0eShoKSl7dT1sW2hdLHUuc29ydChvKTt2YXIgeSxDPWMuX3ZlcnRleFNpemVJbkJ5dGVzKHUpO3N3aXRjaChOdW1iZXIoaCkpe2Nhc2UgYS5TVEFUSUNfRFJBVzp5PWEuU1RBVElDX0RSQVc7YnJlYWs7Y2FzZSBhLlNUUkVBTV9EUkFXOnk9YS5TVFJFQU1fRFJBVzticmVhaztjYXNlIGEuRFlOQU1JQ19EUkFXOnk9YS5EWU5BTUlDX0RSQVd9dmFyIHc9e3B1cnBvc2U6ZCx2ZXJ0ZXhTaXplSW5CeXRlczpDLHZlcnRleEJ1ZmZlcjp2b2lkIDAsdXNhZ2U6eSxuZWVkc0NvbW1pdDohMSxhcnJheUJ1ZmZlcjp2b2lkIDAsYXJyYXlWaWV3czpjLl9jcmVhdGVBcnJheVZpZXdzKHUsQyl9O19baF09dyx0aGlzLl9hbGxCdWZmZXJzLnB1c2godyl9fXRoaXMuX3NpemU9MCx0aGlzLl9wcmVjcmVhdGVkPWYsdGhpcy5fY29udGV4dD10LHRoaXMud3JpdGVycz12b2lkIDAsdGhpcy52YUJ5UHVycG9zZT12b2lkIDAsdGhpcy5yZXNpemUocil9O2MuX3ZlcmlmeUF0dHJpYnV0ZXM9ZnVuY3Rpb24obil7Zm9yKHZhciBvPVtdLHM9MDtzPG4ubGVuZ3RoOysrcyl7dmFyIGw9bltzXSx1PXtpbmRleDp0KGwuaW5kZXgscyksZW5hYmxlZDp0KGwuZW5hYmxlZCwhMCksY29tcG9uZW50c1BlckF0dHJpYnV0ZTpsLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsY29tcG9uZW50RGF0YXR5cGU6bC5jb21wb25lbnREYXRhdHlwZXx8ZS5GTE9BVCxub3JtYWxpemU6bC5ub3JtYWxpemV8fCExLHB1cnBvc2U6dChsLnB1cnBvc2UsImFsbCIpLHZlcnRleEJ1ZmZlcjpsLnZlcnRleEJ1ZmZlcix1c2FnZTpsLnVzYWdlfHxhLlNUQVRJQ19EUkFXfTtpZihvLnB1c2godSksMSE9PXUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSYmMiE9PXUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSYmMyE9PXUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSYmNCE9PXUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSl0aHJvdyBuZXcgcigiYXR0cmlidXRlLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUgbXVzdCBiZSBpbiB0aGUgcmFuZ2UgWzEsIDRdLiIpO3ZhciBjPXUuY29tcG9uZW50RGF0YXR5cGU7aWYoIWUudmFsaWRhdGUoYykpdGhyb3cgbmV3IHIoIkF0dHJpYnV0ZSBtdXN0IGhhdmUgYSB2YWxpZCBjb21wb25lbnREYXRhdHlwZSBvciBub3Qgc3BlY2lmeSBpdC4iKTtpZighYS52YWxpZGF0ZSh1LnVzYWdlKSl0aHJvdyBuZXcgcigiQXR0cmlidXRlIG11c3QgaGF2ZSBhIHZhbGlkIHVzYWdlIG9yIG5vdCBzcGVjaWZ5IGl0LiIpfWZvcih2YXIgZD1uZXcgQXJyYXkoby5sZW5ndGgpLGg9MDtoPG8ubGVuZ3RoOysraCl7dmFyIG09b1toXSxmPW0uaW5kZXgscD1tLnB1cnBvc2U7aWYoImFsbCIhPT1wKXt2YXIgdj1kW2ZdO2lmKHY9PT0hMCl0aHJvdyBuZXcgcigiSW5kZXggIitmKyIgaXMgdXNlZCBieSBtb3JlIHRoYW4gb25lIGF0dHJpYnV0ZS4iKTtpZihpKHYpKXtpZih2W3BdKXRocm93IG5ldyByKCJJbmRleCAiK2YrIiBpcyB1c2VkIGJ5IG1vcmUgdGhhbiBvbmUgYXR0cmlidXRlIHdpdGggdGhlIHNhbWUgcHVycG9zZS4iKX1lbHNlIHY9ZFtmXT17fTt2W3BdPSEwfWVsc2V7aWYoZFtmXSl0aHJvdyBuZXcgcigiSW5kZXggIitmKyIgaXMgdXNlZCBieSBtb3JlIHRoYW4gb25lIGF0dHJpYnV0ZS4iKTtkW2ZdPSEwfX1yZXR1cm4gb30sYy5fdmVydGV4U2l6ZUluQnl0ZXM9ZnVuY3Rpb24odCl7Zm9yKHZhciBpPTAsbj10Lmxlbmd0aCxyPTA7bj5yOysrcil7dmFyIG89dFtyXTtpKz1vLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUqZS5nZXRTaXplSW5CeXRlcyhvLmNvbXBvbmVudERhdGF0eXBlKX12YXIgYT1uPjA/ZS5nZXRTaXplSW5CeXRlcyh0WzBdLmNvbXBvbmVudERhdGF0eXBlKTowLHM9YT4wP2klYTowLGw9MD09PXM/MDphLXM7cmV0dXJuIGkrPWx9LGMuX2NyZWF0ZUFycmF5Vmlld3M9ZnVuY3Rpb24odCxpKXtmb3IodmFyIG49W10scj0wLG89dC5sZW5ndGgsYT0wO28+YTsrK2Epe3ZhciBzPXRbYV0sbD1zLmNvbXBvbmVudERhdGF0eXBlO24ucHVzaCh7aW5kZXg6cy5pbmRleCxlbmFibGVkOnMuZW5hYmxlZCxjb21wb25lbnRzUGVyQXR0cmlidXRlOnMuY29tcG9uZW50c1BlckF0dHJpYnV0ZSxjb21wb25lbnREYXRhdHlwZTpsLG5vcm1hbGl6ZTpzLm5vcm1hbGl6ZSxvZmZzZXRJbkJ5dGVzOnIsdmVydGV4U2l6ZUluQ29tcG9uZW50VHlwZTppL2UuZ2V0U2l6ZUluQnl0ZXMobCksdmlldzp2b2lkIDB9KSxyKz1zLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUqZS5nZXRTaXplSW5CeXRlcyhsKX1yZXR1cm4gbn0sYy5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKGUpe3RoaXMuX3NpemU9ZTt2YXIgdD10aGlzLl9hbGxCdWZmZXJzO3RoaXMud3JpdGVycz17fTtmb3IodmFyIG49MCxyPXQubGVuZ3RoO3I+bjsrK24pe3ZhciBvPXRbbl07Yy5fcmVzaXplKG8sdGhpcy5fc2l6ZSk7dmFyIGE9dGhpcy53cml0ZXJzW28ucHVycG9zZV07aShhKXx8KGE9dGhpcy53cml0ZXJzW28ucHVycG9zZV09W10pLGMuX2FwcGVuZFdyaXRlcnMoYSxvKX11KHRoaXMpfSxjLl9yZXNpemU9ZnVuY3Rpb24odCxuKXtpZih0LnZlcnRleFNpemVJbkJ5dGVzPjApe3ZhciByPW5ldyBBcnJheUJ1ZmZlcihuKnQudmVydGV4U2l6ZUluQnl0ZXMpO2lmKGkodC5hcnJheUJ1ZmZlcikpZm9yKHZhciBvPW5ldyBVaW50OEFycmF5KHIpLGE9bmV3IFVpbnQ4QXJyYXkodC5hcnJheUJ1ZmZlcikscz1hLmxlbmd0aCxsPTA7cz5sOysrbClvW2xdPWFbbF07Zm9yKHZhciB1PXQuYXJyYXlWaWV3cyxjPXUubGVuZ3RoLGQ9MDtjPmQ7KytkKXt2YXIgaD11W2RdO2gudmlldz1lLmNyZWF0ZUFycmF5QnVmZmVyVmlldyhoLmNvbXBvbmVudERhdGF0eXBlLHIsaC5vZmZzZXRJbkJ5dGVzKX10LmFycmF5QnVmZmVyPXJ9fTt2YXIgZD1bZnVuY3Rpb24oZSx0LGkpe3JldHVybiBmdW5jdGlvbihuLHIpe3RbbippXT1yLGUubmVlZHNDb21taXQ9ITB9fSxmdW5jdGlvbihlLHQsaSl7cmV0dXJuIGZ1bmN0aW9uKG4scixvKXt2YXIgYT1uKmk7dFthXT1yLHRbYSsxXT1vLGUubmVlZHNDb21taXQ9ITB9fSxmdW5jdGlvbihlLHQsaSl7cmV0dXJuIGZ1bmN0aW9uKG4scixvLGEpe3ZhciBzPW4qaTt0W3NdPXIsdFtzKzFdPW8sdFtzKzJdPWEsZS5uZWVkc0NvbW1pdD0hMH19LGZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gZnVuY3Rpb24obixyLG8sYSxzKXt2YXIgbD1uKmk7dFtsXT1yLHRbbCsxXT1vLHRbbCsyXT1hLHRbbCszXT1zLGUubmVlZHNDb21taXQ9ITB9fV07cmV0dXJuIGMuX2FwcGVuZFdyaXRlcnM9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9dC5hcnJheVZpZXdzLG49aS5sZW5ndGgscj0wO24+cjsrK3Ipe3ZhciBvPWlbcl07ZVtvLmluZGV4XT1kW28uY29tcG9uZW50c1BlckF0dHJpYnV0ZS0xXSh0LG8udmlldyxvLnZlcnRleFNpemVJbkNvbXBvbmVudFR5cGUpfX0sYy5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPSExLHI9dGhpcy5fYWxsQnVmZmVycyxhPTAsbD1yLmxlbmd0aDtsPmE7KythKXQ9clthXSxuPXModGhpcyx0KXx8bjtpZihufHwhaSh0aGlzLnZhQnlQdXJwb3NlKSl7dmFyIGQ9dGhpcy5fYnVmZmVyc0J5UHVycG9zZUFuZFVzYWdlO3UodGhpcyksdGhpcy52YUJ5UHVycG9zZT17fTtmb3IodmFyIGggaW4gZClpZihkLmhhc093blByb3BlcnR5KGgpKXtmb3IodmFyIG09ZFtoXSxmPVtdLHA9TWF0aC5jZWlsKHRoaXMuX3NpemUvby5TSVhUWV9GT1VSX0tJTE9CWVRFUyksdj0wO3A+djsrK3Ype3ZhciBnPVtdLF89ZC5hbGw7aWYoXyE9PW0pZm9yKHZhciB5IGluIF8paWYoXy5oYXNPd25Qcm9wZXJ0eSh5KSl7dmFyIEM9X1t5XTtjLl9hcHBlbmRBdHRyaWJ1dGVzKGcsQyx2KkMudmVydGV4U2l6ZUluQnl0ZXMqby5TSVhUWV9GT1VSX0tJTE9CWVRFUyl9Zm9yKHZhciB3IGluIG0pbS5oYXNPd25Qcm9wZXJ0eSh3KSYmKHQ9bVt3XSxjLl9hcHBlbmRBdHRyaWJ1dGVzKGcsdCx2KnQudmVydGV4U2l6ZUluQnl0ZXMqby5TSVhUWV9GT1VSX0tJTE9CWVRFUykpO2c9Zy5jb25jYXQodGhpcy5fcHJlY3JlYXRlZCksZi5wdXNoKHt2YTp0aGlzLl9jb250ZXh0LmNyZWF0ZVZlcnRleEFycmF5KGcsZSksaW5kaWNlc0NvdW50OjEuNSoodiE9PXAtMT9vLlNJWFRZX0ZPVVJfS0lMT0JZVEVTOnRoaXMuX3NpemUlby5TSVhUWV9GT1VSX0tJTE9CWVRFUyl9KX10aGlzLnZhQnlQdXJwb3NlW2hdPWZ9fX0sYy5fYXBwZW5kQXR0cmlidXRlcz1mdW5jdGlvbihlLHQsaSl7Zm9yKHZhciBuPXQuYXJyYXlWaWV3cyxyPW4ubGVuZ3RoLG89MDtyPm87KytvKXt2YXIgYT1uW29dO2UucHVzaCh7aW5kZXg6YS5pbmRleCxlbmFibGVkOmEuZW5hYmxlZCxjb21wb25lbnRzUGVyQXR0cmlidXRlOmEuY29tcG9uZW50c1BlckF0dHJpYnV0ZSxjb21wb25lbnREYXRhdHlwZTphLmNvbXBvbmVudERhdGF0eXBlLG5vcm1hbGl6ZTphLm5vcm1hbGl6ZSx2ZXJ0ZXhCdWZmZXI6dC52ZXJ0ZXhCdWZmZXIsb2Zmc2V0SW5CeXRlczppK2Eub2Zmc2V0SW5CeXRlcyxzdHJpZGVJbkJ5dGVzOnQudmVydGV4U2l6ZUluQnl0ZXN9KX19LGMucHJvdG90eXBlLnN1YkNvbW1pdD1mdW5jdGlvbihlLHQpe2Zvcih2YXIgaT10aGlzLl9hbGxCdWZmZXJzLG49MCxyPWkubGVuZ3RoO3I+bjsrK24pbChpW25dLGUsdCl9LGMucHJvdG90eXBlLmVuZFN1YkNvbW1pdHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fYWxsQnVmZmVycyx0PTAsaT1lLmxlbmd0aDtpPnQ7Kyt0KWVbdF0ubmVlZHNDb21taXQ9ITF9LGMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fYWxsQnVmZmVycyx0PTAsaT1lLmxlbmd0aDtpPnQ7Kyt0KXt2YXIgcj1lW3RdO3IudmVydGV4QnVmZmVyPXIudmVydGV4QnVmZmVyJiZyLnZlcnRleEJ1ZmZlci5kZXN0cm95KCl9cmV0dXJuIHUodGhpcyksbih0aGlzKX0sY30pLGRlZmluZSgiU2hhZGVycy9CaWxsYm9hcmRDb2xsZWN0aW9uRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ1bmlmb3JtIHNhbXBsZXIyRCB1X2F0bGFzO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbiNpZmRlZiBSRU5ERVJfRk9SX1BJQ0tcbnZhcnlpbmcgdmVjNCB2X3BpY2tDb2xvcjtcbiNlbHNlXG52YXJ5aW5nIHZlYzQgdl9jb2xvcjtcbiNlbmRpZlxuXG52b2lkIG1haW4oKVxue1xuI2lmZGVmIFJFTkRFUl9GT1JfUElDS1xuICAgIHZlYzQgdmVydGV4Q29sb3IgPSB2ZWM0KDEuMCwgMS4wLCAxLjAsIDEuMCk7XG4jZWxzZVxuICAgIHZlYzQgdmVydGV4Q29sb3IgPSB2X2NvbG9yO1xuI2VuZGlmXG4gICAgXG4gICAgdmVjNCBjb2xvciA9IHRleHR1cmUyRCh1X2F0bGFzLCB2X3RleHR1cmVDb29yZGluYXRlcykgKiB2ZXJ0ZXhDb2xvcjtcbiAgICBpZiAoY29sb3IuYSA9PSAwLjApXG4gICAge1xuICAgICAgICBkaXNjYXJkO1xuICAgIH1cbiAgICBcbiNpZmRlZiBSRU5ERVJfRk9SX1BJQ0tcbiAgICBnbF9GcmFnQ29sb3IgPSB2X3BpY2tDb2xvcjtcbiNlbHNlXG4gICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7XG4jZW5kaWZcbn0ifSksZGVmaW5lKCJTaGFkZXJzL0JpbGxib2FyZENvbGxlY3Rpb25WUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uSGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uTG93O1xuYXR0cmlidXRlIHZlYzIgZGlyZWN0aW9uOyAgICAgICAgICAgICAgICAgICAgICAgLy8gaW4gc2NyZWVuIHNwYWNlXG5hdHRyaWJ1dGUgdmVjNCB0ZXh0dXJlQ29vcmRpbmF0ZXNBbmRJbWFnZVNpemU7ICAvLyBzaXplIGluIG5vcm1hbGl6ZWQgdGV4dHVyZSBjb29yZGluYXRlc1xuYXR0cmlidXRlIHZlYzMgb3JpZ2luQW5kU2hvdzsgICAgICAgICAgICAgICAgICAgLy8gc2hvdyBpcyAwLjAgKGZhbHNlKSBvciAxLjAgKHRydWUpXG5hdHRyaWJ1dGUgdmVjNCBwaXhlbE9mZnNldEFuZFRyYW5zbGF0ZTsgICAgICAgICAvLyB4LHksIHRyYW5zbGF0ZVgsIHRyYW5zbGF0ZVlcbmF0dHJpYnV0ZSB2ZWM0IGV5ZU9mZnNldEFuZFNjYWxlOyAgICAgICAgICAgICAgIC8vIGV5ZSBvZmZzZXQgaW4gbWV0ZXJzXG5hdHRyaWJ1dGUgdmVjNCByb3RhdGlvbkFuZEFsaWduZWRBeGlzO1xuYXR0cmlidXRlIHZlYzQgc2NhbGVCeURpc3RhbmNlOyAgICAgICAgICAgICAgICAgLy8gbmVhciwgbmVhclNjYWxlLCBmYXIsIGZhclNjYWxlXG5hdHRyaWJ1dGUgdmVjNCB0cmFuc2x1Y2VuY3lCeURpc3RhbmNlOyAgICAgICAgICAvLyBuZWFyLCBuZWFyVHJhbnMsIGZhciwgZmFyVHJhbnNcbmF0dHJpYnV0ZSB2ZWM0IHBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlOyAgICAgIC8vIG5lYXIsIG5lYXJTY2FsZSwgZmFyLCBmYXJTY2FsZVxuXG4jaWZkZWYgUkVOREVSX0ZPUl9QSUNLXG5hdHRyaWJ1dGUgdmVjNCBwaWNrQ29sb3I7XG4jZWxzZVxuYXR0cmlidXRlIHZlYzQgY29sb3I7XG4jZW5kaWZcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG4jaWZkZWYgUkVOREVSX0ZPUl9QSUNLXG52YXJ5aW5nIHZlYzQgdl9waWNrQ29sb3I7XG4jZWxzZVxudmFyeWluZyB2ZWM0IHZfY29sb3I7XG4jZW5kaWZcblxuZmxvYXQgZ2V0TmVhckZhclNjYWxhcih2ZWM0IG5lYXJGYXJTY2FsYXIsIGZsb2F0IGNhbWVyYURpc3RTcSlcbntcbiAgICBmbG9hdCB2YWx1ZUF0TWluID0gbmVhckZhclNjYWxhci55O1xuICAgIGZsb2F0IHZhbHVlQXRNYXggPSBuZWFyRmFyU2NhbGFyLnc7XG4gICAgZmxvYXQgbmVhckRpc3RhbmNlU3EgPSBuZWFyRmFyU2NhbGFyLnggKiBuZWFyRmFyU2NhbGFyLng7XG4gICAgZmxvYXQgZmFyRGlzdGFuY2VTcSA9IG5lYXJGYXJTY2FsYXIueiAqIG5lYXJGYXJTY2FsYXIuejtcblxuICAgIGZsb2F0IHQgPSAoY2FtZXJhRGlzdFNxIC0gbmVhckRpc3RhbmNlU3EpIC8gKGZhckRpc3RhbmNlU3EgLSBuZWFyRGlzdGFuY2VTcSk7XG5cbiAgICB0ID0gcG93KGNsYW1wKHQsIDAuMCwgMS4wKSwgMC4yKTtcblxuICAgIHJldHVybiBtaXgodmFsdWVBdE1pbiwgdmFsdWVBdE1heCwgdCk7XG59XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIC8vIE1vZGlmeWluZyB0aGlzIHNoYWRlciBtYXkgYWxzbyByZXF1aXJlIG1vZGlmaWNhdGlvbnMgdG8gQmlsbGJvYXJkLl9jb21wdXRlU2NyZWVuU3BhY2VQb3NpdGlvblxuICAgIFxuICAgIC8vIHVucGFjayBhdHRyaWJ1dGVzXG4gICAgdmVjMyBleWVPZmZzZXQgPSBleWVPZmZzZXRBbmRTY2FsZS54eXo7XG4gICAgZmxvYXQgc2NhbGUgPSBleWVPZmZzZXRBbmRTY2FsZS53O1xuICAgIHZlYzIgdGV4dHVyZUNvb3JkaW5hdGVzID0gdGV4dHVyZUNvb3JkaW5hdGVzQW5kSW1hZ2VTaXplLnh5O1xuICAgIHZlYzIgaW1hZ2VTaXplID0gdGV4dHVyZUNvb3JkaW5hdGVzQW5kSW1hZ2VTaXplLnp3O1xuICAgIHZlYzIgb3JpZ2luID0gb3JpZ2luQW5kU2hvdy54eTtcbiAgICBmbG9hdCBzaG93ID0gb3JpZ2luQW5kU2hvdy56O1xuICAgIHZlYzIgcGl4ZWxPZmZzZXQgPSBwaXhlbE9mZnNldEFuZFRyYW5zbGF0ZS54eTtcbiAgICB2ZWMyIHRyYW5zbGF0ZSA9IHBpeGVsT2Zmc2V0QW5kVHJhbnNsYXRlLnp3O1xuICAgIFxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIFxuICAgIHZlYzQgcCA9IGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHBvc2l0aW9uSGlnaCwgcG9zaXRpb25Mb3cpO1xuICAgIHZlYzQgcG9zaXRpb25FQyA9IGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllICogcDtcbiAgICBwb3NpdGlvbkVDID0gY3ptX2V5ZU9mZnNldChwb3NpdGlvbkVDLCBleWVPZmZzZXQpO1xuICAgIHBvc2l0aW9uRUMueHl6ICo9IHNob3c7XG4gICAgXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vICAgICBcblxuI2lmIGRlZmluZWQoRVlFX0RJU1RBTkNFX1NDQUxJTkcpIHx8IGRlZmluZWQoRVlFX0RJU1RBTkNFX1RSQU5TTFVDRU5DWSkgfHwgZGVmaW5lZChFWUVfRElTVEFOQ0VfUElYRUxfT0ZGU0VUKVxuICAgIGZsb2F0IGxlbmd0aFNxO1xuICAgIGlmIChjem1fc2NlbmVNb2RlID09IGN6bV9zY2VuZU1vZGUyRClcbiAgICB7XG4gICAgICAgIC8vIDJEIGNhbWVyYSBkaXN0YW5jZSBpcyBhIHNwZWNpYWwgY2FzZVxuICAgICAgICAvLyB0cmVhdCBhbGwgYmlsbGJvYXJkcyBhcyBmbGF0dGVuZWQgdG8gdGhlIHo9MC4wIHBsYW5lXG4gICAgICAgIGxlbmd0aFNxID0gY3ptX2V5ZUhlaWdodDJELnk7XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIGxlbmd0aFNxID0gZG90KHBvc2l0aW9uRUMueHl6LCBwb3NpdGlvbkVDLnh5eik7XG4gICAgfVxuI2VuZGlmXG5cbiNpZmRlZiBFWUVfRElTVEFOQ0VfU0NBTElOR1xuICAgIHNjYWxlICo9IGdldE5lYXJGYXJTY2FsYXIoc2NhbGVCeURpc3RhbmNlLCBsZW5ndGhTcSk7XG4gICAgLy8gcHVzaCB2ZXJ0ZXggYmVoaW5kIG5lYXIgcGxhbmUgZm9yIGNsaXBwaW5nXG4gICAgaWYgKHNjYWxlID09IDAuMClcbiAgICB7XG4gICAgICAgIHBvc2l0aW9uRUMueHl6ID0gdmVjMygwLjApO1xuICAgIH1cbiNlbmRpZlxuXG4gICAgZmxvYXQgdHJhbnNsdWNlbmN5ID0gMS4wO1xuI2lmZGVmIEVZRV9ESVNUQU5DRV9UUkFOU0xVQ0VOQ1lcbiAgICB0cmFuc2x1Y2VuY3kgPSBnZXROZWFyRmFyU2NhbGFyKHRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UsIGxlbmd0aFNxKTtcbiAgICAvLyBwdXNoIHZlcnRleCBiZWhpbmQgbmVhciBwbGFuZSBmb3IgY2xpcHBpbmdcbiAgICBpZiAodHJhbnNsdWNlbmN5ID09IDAuMClcbiAgICB7XG4gICAgICAgIHBvc2l0aW9uRUMueHl6ID0gdmVjMygwLjApO1xuICAgIH1cbiNlbmRpZlxuXG4jaWZkZWYgRVlFX0RJU1RBTkNFX1BJWEVMX09GRlNFVFxuICAgIGZsb2F0IHBpeGVsT2Zmc2V0U2NhbGUgPSBnZXROZWFyRmFyU2NhbGFyKHBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlLCBsZW5ndGhTcSk7XG4gICAgcGl4ZWxPZmZzZXQgKj0gcGl4ZWxPZmZzZXRTY2FsZTtcbiNlbmRpZlxuXG4gICAgdmVjNCBwb3NpdGlvbldDID0gY3ptX2V5ZVRvV2luZG93Q29vcmRpbmF0ZXMocG9zaXRpb25FQyk7XG4gICAgXG4gICAgdmVjMiBoYWxmU2l6ZSA9IGltYWdlU2l6ZSAqIHNjYWxlICogY3ptX3Jlc29sdXRpb25TY2FsZTtcbiAgICBoYWxmU2l6ZSAqPSAoKGRpcmVjdGlvbiAqIDIuMCkgLSAxLjApO1xuICAgIFxuICAgIHBvc2l0aW9uV0MueHkgKz0gKG9yaWdpbiAqIGFicyhoYWxmU2l6ZSkpO1xuICAgIFxuI2lmZGVmIFJPVEFUSU9OXG4gICAgZmxvYXQgcm90YXRpb24gPSByb3RhdGlvbkFuZEFsaWduZWRBeGlzLng7XG4gICAgdmVjMyBhbGlnbmVkQXhpcyA9IHJvdGF0aW9uQW5kQWxpZ25lZEF4aXMueXp3O1xuICAgIFxuICAgIGlmICghYWxsKGVxdWFsKHJvdGF0aW9uQW5kQWxpZ25lZEF4aXMsIHZlYzQoMC4wKSkpKVxuICAgIHtcbiAgICAgICAgZmxvYXQgYW5nbGUgPSByb3RhdGlvbjtcbiAgICAgICAgaWYgKCFhbGwoZXF1YWwoYWxpZ25lZEF4aXMsIHZlYzMoMC4wKSkpKVxuICAgICAgICB7XG4gICAgICAgICAgICB2ZWMzIHBvcyA9IHBvc2l0aW9uRUMueHl6ICsgY3ptX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DSGlnaCArIGN6bV9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0xvdztcbiAgICAgICAgICAgIHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKGNyb3NzKGFsaWduZWRBeGlzLCBwb3MpKTtcbiAgICAgICAgICAgIHZlYzQgdGFuZ2VudCA9IHZlYzQobm9ybWFsaXplKGNyb3NzKHBvcywgbm9ybWFsKSksIDAuMCk7XG4gICAgICAgICAgICB0YW5nZW50ID0gY3ptX21vZGVsVmlld1Byb2plY3Rpb24gKiB0YW5nZW50O1xuICAgICAgICAgICAgYW5nbGUgKz0gc2lnbigtdGFuZ2VudC54KSAqIGFjb3ModGFuZ2VudC55IC8gbGVuZ3RoKHRhbmdlbnQueHkpKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZmxvYXQgY29zVGhldGEgPSBjb3MoYW5nbGUpO1xuICAgICAgICBmbG9hdCBzaW5UaGV0YSA9IHNpbihhbmdsZSk7XG4gICAgICAgIG1hdDIgcm90YXRpb25NYXRyaXggPSBtYXQyKGNvc1RoZXRhLCBzaW5UaGV0YSwgLXNpblRoZXRhLCBjb3NUaGV0YSk7XG4gICAgICAgIGhhbGZTaXplID0gcm90YXRpb25NYXRyaXggKiBoYWxmU2l6ZTtcbiAgICB9XG4jZW5kaWZcbiAgICBcbiAgICBwb3NpdGlvbldDLnh5ICs9IGhhbGZTaXplO1xuICAgIHBvc2l0aW9uV0MueHkgKz0gdHJhbnNsYXRlO1xuICAgIHBvc2l0aW9uV0MueHkgKz0gKHBpeGVsT2Zmc2V0ICogY3ptX3Jlc29sdXRpb25TY2FsZSk7XG5cbiAgICBnbF9Qb3NpdGlvbiA9IGN6bV92aWV3cG9ydE9ydGhvZ3JhcGhpYyAqIHZlYzQocG9zaXRpb25XQy54eSwgLXBvc2l0aW9uV0MueiwgMS4wKTtcbiAgICB2X3RleHR1cmVDb29yZGluYXRlcyA9IHRleHR1cmVDb29yZGluYXRlcztcblxuI2lmZGVmIFJFTkRFUl9GT1JfUElDS1xuICAgIHZfcGlja0NvbG9yID0gcGlja0NvbG9yO1xuI2Vsc2VcbiAgICB2X2NvbG9yID0gY29sb3I7XG4gICAgdl9jb2xvci5hICo9IHRyYW5zbHVjZW5jeTtcbiNlbmRpZlxufVxuIn0pLGRlZmluZSgiQ29yZS9Cb3VuZGluZ1JlY3RhbmdsZSIsWyIuL0NhcnRlc2lhbjIiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vR2VvZ3JhcGhpY1Byb2plY3Rpb24iLCIuL0ludGVyc2VjdCIsIi4vUmVjdGFuZ2xlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24oZSx0LG4scil7dGhpcy54PWkoZSwwKSx0aGlzLnk9aSh0LDApLHRoaXMud2lkdGg9aShuLDApLHRoaXMuaGVpZ2h0PWkociwwKX07bC5mcm9tUG9pbnRzPWZ1bmN0aW9uKGUsdCl7aWYobih0KXx8KHQ9bmV3IGwpLCFuKGUpfHwwPT09ZS5sZW5ndGgpcmV0dXJuIHQueD0wLHQueT0wLHQud2lkdGg9MCx0LmhlaWdodD0wLHQ7Zm9yKHZhciBpPWUubGVuZ3RoLHI9ZVswXS54LG89ZVswXS55LGE9ZVswXS54LHM9ZVswXS55LHU9MTtpPnU7dSsrKXt2YXIgYz1lW3VdLGQ9Yy54LGg9Yy55O3I9TWF0aC5taW4oZCxyKSxhPU1hdGgubWF4KGQsYSksbz1NYXRoLm1pbihoLG8pLHM9TWF0aC5tYXgoaCxzKX1yZXR1cm4gdC54PXIsdC55PW8sdC53aWR0aD1hLXIsdC5oZWlnaHQ9cy1vLHR9O3ZhciB1PW5ldyBvLGM9bmV3IHQsZD1uZXcgdDtyZXR1cm4gbC5mcm9tUmVjdGFuZ2xlPWZ1bmN0aW9uKHQscixvKXtpZihuKG8pfHwobz1uZXcgbCksIW4odCkpcmV0dXJuIG8ueD0wLG8ueT0wLG8ud2lkdGg9MCxvLmhlaWdodD0wLG87cj1pKHIsdSk7dmFyIGE9ci5wcm9qZWN0KHMuc291dGh3ZXN0KHQsYykpLGg9ci5wcm9qZWN0KHMubm9ydGhlYXN0KHQsZCkpOwpyZXR1cm4gZS5zdWJ0cmFjdChoLGEsaCksby54PWEueCxvLnk9YS55LG8ud2lkdGg9aC54LG8uaGVpZ2h0PWgueSxvfSxsLmNsb25lPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4oZSk/bih0KT8odC54PWUueCx0Lnk9ZS55LHQud2lkdGg9ZS53aWR0aCx0LmhlaWdodD1lLmhlaWdodCx0KTpuZXcgbChlLngsZS55LGUud2lkdGgsZS5oZWlnaHQpOnZvaWQgMH0sbC51bmlvbj1mdW5jdGlvbihlLHQsaSl7bihpKXx8KGk9bmV3IGwpO3ZhciByPU1hdGgubWluKGUueCx0LngpLG89TWF0aC5taW4oZS55LHQueSksYT1NYXRoLm1heChlLngrZS53aWR0aCx0LngrdC53aWR0aCkscz1NYXRoLm1heChlLnkrZS5oZWlnaHQsdC55K3QuaGVpZ2h0KTtyZXR1cm4gaS54PXIsaS55PW8saS53aWR0aD1hLXIsaS5oZWlnaHQ9cy1vLGl9LGwuZXhwYW5kPWZ1bmN0aW9uKGUsdCxpKXtpPWwuY2xvbmUoZSxpKTt2YXIgbj10LngtaS54LHI9dC55LWkueTtyZXR1cm4gbj5pLndpZHRoP2kud2lkdGg9bjowPm4mJihpLndpZHRoLT1uLGkueD10LngpLHI+aS5oZWlnaHQ/aS5oZWlnaHQ9cjowPnImJihpLmhlaWdodC09cixpLnk9dC55KSxpfSxsLmludGVyc2VjdD1mdW5jdGlvbihlLHQpe3ZhciBpPWUueCxuPWUueSxyPXQueCxvPXQueTtyZXR1cm4gaT5yK3Qud2lkdGh8fGkrZS53aWR0aDxyfHxuK2UuaGVpZ2h0PG98fG4+byt0LmhlaWdodD9hLk9VVFNJREU6YS5JTlRFUlNFQ1RJTkd9LGwuZXF1YWxzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9PT10fHxuKGUpJiZuKHQpJiZlLng9PT10LngmJmUueT09PXQueSYmZS53aWR0aD09PXQud2lkdGgmJmUuaGVpZ2h0PT09dC5oZWlnaHR9LGwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGUpe3JldHVybiBsLmNsb25lKHRoaXMsZSl9LGwucHJvdG90eXBlLmludGVyc2VjdD1mdW5jdGlvbihlKXtyZXR1cm4gbC5pbnRlcnNlY3QodGhpcyxlKX0sbC5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKGUpe3JldHVybiBsLmVxdWFscyh0aGlzLGUpfSxsfSksZGVmaW5lKCJTY2VuZS9TY2VuZU1vZGUiLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e01PUlBISU5HOjAsQ09MVU1CVVNfVklFVzoxLFNDRU5FMkQ6MixTQ0VORTNEOjN9O3JldHVybiB0LmdldE1vcnBoVGltZT1mdW5jdGlvbihlKXtyZXR1cm4gZT09PXQuU0NFTkUzRD8xOmU9PT10Lk1PUlBISU5HP3ZvaWQgMDowfSxlKHQpfSksZGVmaW5lKCJTY2VuZS9TY2VuZVRyYW5zZm9ybXMiLFsiLi4vQ29yZS9Cb3VuZGluZ1JlY3RhbmdsZSIsIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvQ2FydGVzaWFuNCIsIi4uL0NvcmUvQ2FydG9ncmFwaGljIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO3ZhciBjPXt9LGQ9bmV3IG4oMCwwLDAsMSksaD1uZXcgbixtPW5ldyBsO2Mud2dzODRUb1dpbmRvd0Nvb3JkaW5hdGVzPWZ1bmN0aW9uKGUsdCxpKXt2YXIgcj1jLmNvbXB1dGVBY3R1YWxXZ3M4NFBvc2l0aW9uKGUuZnJhbWVTdGF0ZSx0LGQpO2lmKCFvKHIpKXJldHVybiB2b2lkIDA7dmFyIGE9ZS5jYW1lcmEscz1sLm11bHRpcGx5KGEuZnJ1c3R1bS5wcm9qZWN0aW9uTWF0cml4LGEudmlld01hdHJpeCxtKTtyZXR1cm4gbC5tdWx0aXBseUJ5VmVjdG9yKHMsbi5mcm9tRWxlbWVudHMoci54LHIueSxyLnosMSxoKSxoKSxoLno8MCYmZS5tb2RlIT09dS5TQ0VORTJEP3ZvaWQgMDooaT1jLmNsaXBUb0dMV2luZG93Q29vcmRpbmF0ZXMoZSxoLGkpLGkueT1lLmNhbnZhcy5jbGllbnRIZWlnaHQtaS55LGkpfSxjLndnczg0VG9EcmF3aW5nQnVmZmVyQ29vcmRpbmF0ZXM9ZnVuY3Rpb24oZSx0LGkpe3ZhciByPWMuY29tcHV0ZUFjdHVhbFdnczg0UG9zaXRpb24oZS5mcmFtZVN0YXRlLHQsZCk7aWYoIW8ocikpcmV0dXJuIHZvaWQgMDt2YXIgYT1lLmNhbWVyYSxzPWwubXVsdGlwbHkoYS5mcnVzdHVtLnByb2plY3Rpb25NYXRyaXgsYS52aWV3TWF0cml4LG0pO3JldHVybiBsLm11bHRpcGx5QnlWZWN0b3IocyxuLmZyb21FbGVtZW50cyhyLngsci55LHIueiwxLGgpLGgpLGguejwwJiZlLm1vZGUhPT11LlNDRU5FMkQ/dm9pZCAwOmMuY2xpcFRvRHJhd2luZ0J1ZmZlckNvb3JkaW5hdGVzKGUsaCxpKX07dmFyIGY9bmV3IGkscD1uZXcgcjtjLmNvbXB1dGVBY3R1YWxXZ3M4NFBvc2l0aW9uPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1lLm1vZGU7aWYocj09PXUuU0NFTkUzRClyZXR1cm4gaS5jbG9uZSh0LG4pO3ZhciBhPWUubWFwUHJvamVjdGlvbixsPWEuZWxsaXBzb2lkLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHQscCk7aWYoIW8obCkpcmV0dXJuIHZvaWQgMDtpZihhLnByb2plY3QobCxmKSxyPT09dS5DT0xVTUJVU19WSUVXKXJldHVybiBpLmZyb21FbGVtZW50cyhmLnosZi54LGYueSxuKTtpZihyPT09dS5TQ0VORTJEKXJldHVybiBpLmZyb21FbGVtZW50cygwLGYueCxmLnksbik7dmFyIGM9ZS5tb3JwaFRpbWU7cmV0dXJuIGkuZnJvbUVsZW1lbnRzKHMubGVycChmLnosdC54LGMpLHMubGVycChmLngsdC55LGMpLHMubGVycChmLnksdC56LGMpLG4pfTt2YXIgdj1uZXcgaSxnPW5ldyBpLF89bmV3IGUseT1uZXcgbDtyZXR1cm4gYy5jbGlwVG9HTFdpbmRvd0Nvb3JkaW5hdGVzPWZ1bmN0aW9uKGUsbixyKXt2YXIgbz1lLmNhbnZhcztyZXR1cm4gaS5kaXZpZGVCeVNjYWxhcihuLG4udyx2KSxfLndpZHRoPW8uY2xpZW50V2lkdGgsXy5oZWlnaHQ9by5jbGllbnRIZWlnaHQsbC5jb21wdXRlVmlld3BvcnRUcmFuc2Zvcm1hdGlvbihfLDAsMSx5KSxsLm11bHRpcGx5QnlQb2ludCh5LHYsZyksdC5mcm9tQ2FydGVzaWFuMyhnLHIpfSxjLmNsaXBUb0RyYXdpbmdCdWZmZXJDb29yZGluYXRlcz1mdW5jdGlvbihlLG4scil7cmV0dXJuIGkuZGl2aWRlQnlTY2FsYXIobixuLncsdiksXy53aWR0aD1lLmRyYXdpbmdCdWZmZXJXaWR0aCxfLmhlaWdodD1lLmRyYXdpbmdCdWZmZXJIZWlnaHQsbC5jb21wdXRlVmlld3BvcnRUcmFuc2Zvcm1hdGlvbihfLDAsMSx5KSxsLm11bHRpcGx5QnlQb2ludCh5LHYsZyksdC5mcm9tQ2FydGVzaWFuMyhnLHIpfSxjLnRyYW5zZm9ybVdpbmRvd1RvRHJhd2luZ0J1ZmZlcj1mdW5jdGlvbihlLGksbil7dmFyIHI9ZS5jYW52YXMsbz1lLmRyYXdpbmdCdWZmZXJXaWR0aC9yLmNsaWVudFdpZHRoLGE9ZS5kcmF3aW5nQnVmZmVySGVpZ2h0L3IuY2xpZW50SGVpZ2h0O3JldHVybiB0LmZyb21FbGVtZW50cyhpLngqbyxpLnkqYSxuKX0sY30pLGRlZmluZSgiU2NlbmUvQmlsbGJvYXJkIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9jcmVhdGVHdWlkIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9OZWFyRmFyU2NhbGFyIiwiLi9Ib3Jpem9udGFsT3JpZ2luIiwiLi9TY2VuZU1vZGUiLCIuL1NjZW5lVHJhbnNmb3JtcyIsIi4vVmVydGljYWxPcmlnaW4iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gdihlLHQpe3ZhciBpPWUuX2JpbGxib2FyZENvbGxlY3Rpb247cyhpKSYmKGkuX3VwZGF0ZUJpbGxib2FyZChlLHQpLGUuX2RpcnR5PSEwKX12YXIgZz1mdW5jdGlvbihlLG4pe2U9YShlLGEuRU1QVFlfT0JKRUNUKSx0aGlzLl9zaG93PWEoZS5zaG93LCEwKSx0aGlzLl9wb3NpdGlvbj1pLmNsb25lKGEoZS5wb3NpdGlvbixpLlpFUk8pKSx0aGlzLl9hY3R1YWxQb3NpdGlvbj1pLmNsb25lKHRoaXMuX3Bvc2l0aW9uKSx0aGlzLl9waXhlbE9mZnNldD10LmNsb25lKGEoZS5waXhlbE9mZnNldCx0LlpFUk8pKSx0aGlzLl90cmFuc2xhdGU9bmV3IHQoMCwwKSx0aGlzLl9leWVPZmZzZXQ9aS5jbG9uZShhKGUuZXllT2Zmc2V0LGkuWkVSTykpLHRoaXMuX3ZlcnRpY2FsT3JpZ2luPWEoZS52ZXJ0aWNhbE9yaWdpbixwLkNFTlRFUiksdGhpcy5faG9yaXpvbnRhbE9yaWdpbj1hKGUuaG9yaXpvbnRhbE9yaWdpbixoLkNFTlRFUiksdGhpcy5fc2NhbGU9YShlLnNjYWxlLDEpLHRoaXMuX2NvbG9yPXIuY2xvbmUoYShlLmNvbG9yLHIuV0hJVEUpKSx0aGlzLl9yb3RhdGlvbj1hKGUucm90YXRpb24sMCksdGhpcy5fYWxpZ25lZEF4aXM9aS5jbG9uZShhKGUuYWxpZ25lZEF4aXMsaS5aRVJPKSksdGhpcy5fd2lkdGg9ZS53aWR0aCx0aGlzLl9oZWlnaHQ9ZS5oZWlnaHQsdGhpcy5fc2NhbGVCeURpc3RhbmNlPWUuc2NhbGVCeURpc3RhbmNlLHRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9ZS50cmFuc2x1Y2VuY3lCeURpc3RhbmNlLHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPWUucGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UsdGhpcy5faWQ9ZS5pZCx0aGlzLl9jb2xsZWN0aW9uPWEoZS5jb2xsZWN0aW9uLG4pLHRoaXMuX3BpY2tJZD12b2lkIDAsdGhpcy5fcGlja1ByaW1pdGl2ZT1hKGUuX3BpY2tQcmltaXRpdmUsdGhpcyksdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbj1uLHRoaXMuX2RpcnR5PSExLHRoaXMuX2luZGV4PS0xLHRoaXMuX2ltYWdlSW5kZXg9LTEsdGhpcy5faW1hZ2VJbmRleFByb21pc2U9dm9pZCAwLHRoaXMuX2ltYWdlSWQ9dm9pZCAwLHRoaXMuX2ltYWdlPXZvaWQgMCx0aGlzLl9pbWFnZVN1YlJlZ2lvbj12b2lkIDA7dmFyIGw9ZS5pbWFnZSx1PWUuaW1hZ2VJZDtzKGwpJiYocyh1KXx8KHU9InN0cmluZyI9PXR5cGVvZiBsP2w6cyhsLnNyYyk/bC5zcmM6bygpKSx0aGlzLl9pbWFnZUlkPXUsdGhpcy5faW1hZ2U9bCkscyhlLmltYWdlU3ViUmVnaW9uKSYmKHRoaXMuX2ltYWdlSWQ9dSx0aGlzLl9pbWFnZVN1YlJlZ2lvbj1lLmltYWdlU3ViUmVnaW9uKSxzKHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24uX3RleHR1cmVBdGxhcykmJnRoaXMuX2xvYWRJbWFnZSgpfSxfPWcuU0hPV19JTkRFWD0wLHk9Zy5QT1NJVElPTl9JTkRFWD0xLEM9Zy5QSVhFTF9PRkZTRVRfSU5ERVg9Mix3PWcuRVlFX09GRlNFVF9JTkRFWD0zLEU9Zy5IT1JJWk9OVEFMX09SSUdJTl9JTkRFWD00LGI9Zy5WRVJUSUNBTF9PUklHSU5fSU5ERVg9NSxTPWcuU0NBTEVfSU5ERVg9NixUPWcuSU1BR0VfSU5ERVhfSU5ERVg9Nyx4PWcuQ09MT1JfSU5ERVg9OCxBPWcuUk9UQVRJT05fSU5ERVg9OSxQPWcuQUxJR05FRF9BWElTX0lOREVYPTEwLE09Zy5TQ0FMRV9CWV9ESVNUQU5DRV9JTkRFWD0xMSxJPWcuVFJBTlNMVUNFTkNZX0JZX0RJU1RBTkNFX0lOREVYPTEyLEQ9Zy5QSVhFTF9PRkZTRVRfU0NBTEVfQllfRElTVEFOQ0VfSU5ERVg9MTM7Zy5OVU1CRVJfT0ZfUFJPUEVSVElFUz0xNCxsKGcucHJvdG90eXBlLHtzaG93OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd30sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3Nob3chPT1lJiYodGhpcy5fc2hvdz1lLHYodGhpcyxfKSl9fSxwb3NpdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Bvc2l0aW9ufSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fcG9zaXRpb247aS5lcXVhbHModCxlKXx8KGkuY2xvbmUoZSx0KSxpLmNsb25lKGUsdGhpcy5fYWN0dWFsUG9zaXRpb24pLHYodGhpcyx5KSl9fSxwaXhlbE9mZnNldDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BpeGVsT2Zmc2V0fSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fcGl4ZWxPZmZzZXQ7dC5lcXVhbHMoaSxlKXx8KHQuY2xvbmUoZSxpKSx2KHRoaXMsQykpfX0sc2NhbGVCeURpc3RhbmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NhbGVCeURpc3RhbmNlfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fc2NhbGVCeURpc3RhbmNlO2QuZXF1YWxzKHQsZSl8fCh0aGlzLl9zY2FsZUJ5RGlzdGFuY2U9ZC5jbG9uZShlLHQpLHYodGhpcyxNKSl9fSx0cmFuc2x1Y2VuY3lCeURpc3RhbmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZX0sc2V0OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2U7ZC5lcXVhbHModCxlKXx8KHRoaXMuX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9ZC5jbG9uZShlLHQpLHYodGhpcyxJKSl9fSxwaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U7ZC5lcXVhbHModCxlKXx8KHRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPWQuY2xvbmUoZSx0KSx2KHRoaXMsRCkpfX0sZXllT2Zmc2V0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXllT2Zmc2V0fSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZXllT2Zmc2V0O2kuZXF1YWxzKHQsZSl8fChpLmNsb25lKGUsdCksdih0aGlzLHcpKX19LGhvcml6b250YWxPcmlnaW46e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ob3Jpem9udGFsT3JpZ2lufSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5faG9yaXpvbnRhbE9yaWdpbiE9PWUmJih0aGlzLl9ob3Jpem9udGFsT3JpZ2luPWUsdih0aGlzLEUpKX19LHZlcnRpY2FsT3JpZ2luOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGljYWxPcmlnaW59LHNldDpmdW5jdGlvbihlKXt0aGlzLl92ZXJ0aWNhbE9yaWdpbiE9PWUmJih0aGlzLl92ZXJ0aWNhbE9yaWdpbj1lLHYodGhpcyxiKSl9fSxzY2FsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjYWxlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fc2NhbGUhPT1lJiYodGhpcy5fc2NhbGU9ZSx2KHRoaXMsUykpfX0sY29sb3I6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb2xvcn0sc2V0OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2NvbG9yO3IuZXF1YWxzKHQsZSl8fChyLmNsb25lKGUsdCksdih0aGlzLHgpKX19LHJvdGF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcm90YXRpb259LHNldDpmdW5jdGlvbihlKXt0aGlzLl9yb3RhdGlvbiE9PWUmJih0aGlzLl9yb3RhdGlvbj1lLHYodGhpcyxBKSl9fSxhbGlnbmVkQXhpczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FsaWduZWRBeGlzfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fYWxpZ25lZEF4aXM7aS5lcXVhbHModCxlKXx8KGkuY2xvbmUoZSx0KSx2KHRoaXMsUCkpfX0sd2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93aWR0aH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3dpZHRoIT09ZSYmKHRoaXMuX3dpZHRoPWUsdih0aGlzLFQpKX19LGhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2hlaWdodCE9PWUmJih0aGlzLl9oZWlnaHQ9ZSx2KHRoaXMsVCkpfX0saWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2lkPWUscyh0aGlzLl9waWNrSWQpJiYodGhpcy5fcGlja0lkLm9iamVjdC5pZD1lKX19LHBpY2tQcmltaXRpdmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waWNrUHJpbWl0aXZlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fcGlja1ByaW1pdGl2ZT1lLHModGhpcy5fcGlja0lkKSYmKHRoaXMuX3BpY2tJZC5vYmplY3QucHJpbWl0aXZlPWUpfX0saW1hZ2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbWFnZUlkfSxzZXQ6ZnVuY3Rpb24oZSl7cyhlKT8ic3RyaW5nIj09dHlwZW9mIGU/dGhpcy5zZXRJbWFnZShlLGUpOnMoZS5zcmMpP3RoaXMuc2V0SW1hZ2UoZS5zcmMsZSk6dGhpcy5zZXRJbWFnZShvKCksZSk6KHRoaXMuX2ltYWdlSW5kZXg9LTEsdGhpcy5faW1hZ2VTdWJSZWdpb249dm9pZCAwLHRoaXMuX2ltYWdlSWQ9dm9pZCAwLHRoaXMuX2ltYWdlPXZvaWQgMCx0aGlzLl9pbWFnZUluZGV4UHJvbWlzZT12b2lkIDAsdih0aGlzLFQpKX19LHJlYWR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4tMSE9PXRoaXMuX2ltYWdlSW5kZXh9fX0pLGcucHJvdG90eXBlLmdldFBpY2tJZD1mdW5jdGlvbihlKXtyZXR1cm4gcyh0aGlzLl9waWNrSWQpfHwodGhpcy5fcGlja0lkPWUuY3JlYXRlUGlja0lkKHtwcmltaXRpdmU6dGhpcy5fcGlja1ByaW1pdGl2ZSxjb2xsZWN0aW9uOnRoaXMuX2NvbGxlY3Rpb24saWQ6dGhpcy5faWR9KSksdGhpcy5fcGlja0lkfSxnLnByb3RvdHlwZS5fbG9hZEltYWdlPWZ1bmN0aW9uKCl7dmFyIHQsaT10aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uLl90ZXh0dXJlQXRsYXMsbj10aGlzLl9pbWFnZUlkLHI9dGhpcy5faW1hZ2Usbz10aGlzLl9pbWFnZVN1YlJlZ2lvbjtpZihzKHIpJiYodD1pLmFkZEltYWdlKG4scikpLHMobykmJih0PWkuYWRkU3ViUmVnaW9uKG4sbykpLHRoaXMuX2ltYWdlSW5kZXhQcm9taXNlPXQscyh0KSl7dmFyIGE9dGhpczt0LnRoZW4oZnVuY3Rpb24odCl7YS5faW1hZ2VJZD09PW4mJmEuX2ltYWdlPT09ciYmZS5lcXVhbHMoYS5faW1hZ2VTdWJSZWdpb24sbykmJihhLl9pbWFnZUluZGV4PXQsYS5fcmVhZHk9ITAsYS5faW1hZ2U9dm9pZCAwLGEuX2ltYWdlSW5kZXhQcm9taXNlPXZvaWQgMCx2KGEsVCkpfSkub3RoZXJ3aXNlKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIkVycm9yIGxvYWRpbmcgaW1hZ2UgZm9yIGJpbGxib2FyZDogIitlKSxhLl9pbWFnZUluZGV4UHJvbWlzZT12b2lkIDB9KX19LGcucHJvdG90eXBlLnNldEltYWdlPWZ1bmN0aW9uKGUsdCl7dGhpcy5faW1hZ2VJZCE9PWUmJih0aGlzLl9pbWFnZUluZGV4PS0xLHRoaXMuX2ltYWdlU3ViUmVnaW9uPXZvaWQgMCx0aGlzLl9pbWFnZUlkPWUsdGhpcy5faW1hZ2U9dCxzKHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24uX3RleHR1cmVBdGxhcykmJnRoaXMuX2xvYWRJbWFnZSgpKX0sZy5wcm90b3R5cGUuc2V0SW1hZ2VTdWJSZWdpb249ZnVuY3Rpb24odCxpKXt0aGlzLl9pbWFnZUlkPT09dCYmZS5lcXVhbHModGhpcy5faW1hZ2VTdWJSZWdpb24saSl8fCh0aGlzLl9pbWFnZUluZGV4PS0xLHRoaXMuX2ltYWdlSWQ9dCx0aGlzLl9pbWFnZVN1YlJlZ2lvbj1pLHModGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbi5fdGV4dHVyZUF0bGFzKSYmdGhpcy5fbG9hZEltYWdlKCkpfSxnLnByb3RvdHlwZS5fc2V0VHJhbnNsYXRlPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3RyYW5zbGF0ZTt0LmVxdWFscyhpLGUpfHwodC5jbG9uZShlLGkpLHYodGhpcyxDKSl9LGcucHJvdG90eXBlLl9nZXRBY3R1YWxQb3NpdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hY3R1YWxQb3NpdGlvbn0sZy5wcm90b3R5cGUuX3NldEFjdHVhbFBvc2l0aW9uPWZ1bmN0aW9uKGUpe2kuY2xvbmUoZSx0aGlzLl9hY3R1YWxQb3NpdGlvbiksdih0aGlzLHkpfTt2YXIgTz1uZXcgbjtnLl9jb21wdXRlQWN0dWFsUG9zaXRpb249ZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0Lm1vZGU9PT1tLlNDRU5FM0Q/ZTooYy5tdWx0aXBseUJ5UG9pbnQoaSxlLE8pLGYuY29tcHV0ZUFjdHVhbFdnczg0UG9zaXRpb24odCxPKSl9O3ZhciBSPW5ldyBjLEw9bmV3IG4sTj1uZXcgaSx6PW5ldyB0LEI9bmV3IHQ7Zy5fY29tcHV0ZVNjcmVlblNwYWNlUG9zaXRpb249ZnVuY3Rpb24oZSxyLG8sYSxzKXt2YXIgbD1zLmNhbWVyYSx1PWwudmlld01hdHJpeCxkPWwuZnJ1c3R1bS5wcm9qZWN0aW9uTWF0cml4LGg9Yy5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKHUsZSxSKSxtPWMubXVsdGlwbHlCeVZlY3RvcihoLG4uZnJvbUVsZW1lbnRzKHIueCxyLnksci56LDEsTCksTCkscD1pLm11bHRpcGx5Q29tcG9uZW50cyhvLGkubm9ybWFsaXplKG0sTiksTik7bS54Kz1vLngrcC54LG0ueSs9by55K3AueSxtLnorPXAuejt2YXIgdj1jLm11bHRpcGx5QnlWZWN0b3IoZCxtLEwpLGc9Zi5jbGlwVG9HTFdpbmRvd0Nvb3JkaW5hdGVzKHMsdixuZXcgdCk7YT10LmNsb25lKGEsQiksYS55PS1hLnk7dmFyIF89dC5tdWx0aXBseUJ5U2NhbGFyKGEscy5jb250ZXh0LnVuaWZvcm1TdGF0ZS5yZXNvbHV0aW9uU2NhbGUseik7cmV0dXJuIGcueCs9Xy54LGcueSs9Xy55LGd9O3ZhciBGPW5ldyB0KDAsMCk7cmV0dXJuIGcucHJvdG90eXBlLmNvbXB1dGVTY3JlZW5TcGFjZVBvc2l0aW9uPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb247dC5jbG9uZSh0aGlzLl9waXhlbE9mZnNldCxGKSx0LmFkZChGLHRoaXMuX3RyYW5zbGF0ZSxGKTt2YXIgbj1pLm1vZGVsTWF0cml4LHI9Zy5fY29tcHV0ZVNjcmVlblNwYWNlUG9zaXRpb24obix0aGlzLl9hY3R1YWxQb3NpdGlvbix0aGlzLl9leWVPZmZzZXQsRixlKTtyZXR1cm4gci55PWUuY2FudmFzLmNsaWVudEhlaWdodC1yLnkscn0sZy5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uKG4pe3JldHVybiB0aGlzPT09bnx8cyhuKSYmdGhpcy5fc2hvdz09PW4uX3Nob3cmJnRoaXMuX3NjYWxlPT09bi5fc2NhbGUmJnRoaXMuX3ZlcnRpY2FsT3JpZ2luPT09bi5fdmVydGljYWxPcmlnaW4mJnRoaXMuX2hvcml6b250YWxPcmlnaW49PT1uLl9ob3Jpem9udGFsT3JpZ2luJiZ0aGlzLl9pZD09PW4uX2lkJiZ0aGlzLl9pbWFnZUlkPT09bi5faW1hZ2VJZCYmZS5lcXVhbHModGhpcy5faW1hZ2VTdWJSZWdpb24sbi5faW1hZ2VTdWJSZWdpb24pJiZpLmVxdWFscyh0aGlzLl9wb3NpdGlvbixuLl9wb3NpdGlvbikmJnIuZXF1YWxzKHRoaXMuX2NvbG9yLG4uX2NvbG9yKSYmdC5lcXVhbHModGhpcy5fcGl4ZWxPZmZzZXQsbi5fcGl4ZWxPZmZzZXQpJiZ0LmVxdWFscyh0aGlzLl90cmFuc2xhdGUsbi5fdHJhbnNsYXRlKSYmaS5lcXVhbHModGhpcy5fZXllT2Zmc2V0LG4uX2V5ZU9mZnNldCkmJmQuZXF1YWxzKHRoaXMuX3NjYWxlQnlEaXN0YW5jZSxuLl9zY2FsZUJ5RGlzdGFuY2UpJiZkLmVxdWFscyh0aGlzLl90cmFuc2x1Y2VuY3lCeURpc3RhbmNlLG4uX3RyYW5zbHVjZW5jeUJ5RGlzdGFuY2UpJiZkLmVxdWFscyh0aGlzLl9waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSxuLl9waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSl9LGcucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5pbWFnZT12b2lkIDAsdGhpcy5fcGlja0lkPXRoaXMuX3BpY2tJZCYmdGhpcy5fcGlja0lkLmRlc3Ryb3koKSx0aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uPXZvaWQgMH0sZ30pLGRlZmluZSgiU2NlbmUvQmxlbmRFcXVhdGlvbiIsWyIuLi9Db3JlL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17QUREOjMyNzc0LFNVQlRSQUNUOjMyNzc4LFJFVkVSU0VfU1VCVFJBQ1Q6MzI3Nzl9O3JldHVybiBlKHQpfSksZGVmaW5lKCJTY2VuZS9CbGVuZEZ1bmN0aW9uIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtaRVJPOjAsT05FOjEsU09VUkNFX0NPTE9SOjc2OCxPTkVfTUlOVVNfU09VUkNFX0NPTE9SOjc2OSxERVNUSU5BVElPTl9DT0xPUjo3NzQsT05FX01JTlVTX0RFU1RJTkFUSU9OX0NPTE9SOjc3NSxTT1VSQ0VfQUxQSEE6NzcwLE9ORV9NSU5VU19TT1VSQ0VfQUxQSEE6NzcxLERFU1RJTkFUSU9OX0FMUEhBOjc3MixPTkVfTUlOVVNfREVTVElOQVRJT05fQUxQSEE6NzczLENPTlNUQU5UX0NPTE9SOjMyNzY5LE9ORV9NSU5VU19DT05TVEFOVF9DT0xPUjozMjc3MCxDT05TVEFOVF9BTFBIQTozMjc3MSxPTkVfTUlOVVNfQ09OU1RBTlRfQUxQSEE6MzI3NzIsU09VUkNFX0FMUEhBX1NBVFVSQVRFOjc3Nn07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL0JsZW5kaW5nU3RhdGUiLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiLCIuL0JsZW5kRXF1YXRpb24iLCIuL0JsZW5kRnVuY3Rpb24iXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPXtESVNBQkxFRDplKHtlbmFibGVkOiExfSksQUxQSEFfQkxFTkQ6ZSh7ZW5hYmxlZDohMCxlcXVhdGlvblJnYjp0LkFERCxlcXVhdGlvbkFscGhhOnQuQURELGZ1bmN0aW9uU291cmNlUmdiOmkuU09VUkNFX0FMUEhBLGZ1bmN0aW9uU291cmNlQWxwaGE6aS5TT1VSQ0VfQUxQSEEsZnVuY3Rpb25EZXN0aW5hdGlvblJnYjppLk9ORV9NSU5VU19TT1VSQ0VfQUxQSEEsZnVuY3Rpb25EZXN0aW5hdGlvbkFscGhhOmkuT05FX01JTlVTX1NPVVJDRV9BTFBIQX0pLFBSRV9NVUxUSVBMSUVEX0FMUEhBX0JMRU5EOmUoe2VuYWJsZWQ6ITAsZXF1YXRpb25SZ2I6dC5BREQsZXF1YXRpb25BbHBoYTp0LkFERCxmdW5jdGlvblNvdXJjZVJnYjppLk9ORSxmdW5jdGlvblNvdXJjZUFscGhhOmkuT05FLGZ1bmN0aW9uRGVzdGluYXRpb25SZ2I6aS5PTkVfTUlOVVNfU09VUkNFX0FMUEhBLGZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYTppLk9ORV9NSU5VU19TT1VSQ0VfQUxQSEF9KSxBRERJVElWRV9CTEVORDplKHtlbmFibGVkOiEwLGVxdWF0aW9uUmdiOnQuQURELGVxdWF0aW9uQWxwaGE6dC5BREQsZnVuY3Rpb25Tb3VyY2VSZ2I6aS5TT1VSQ0VfQUxQSEEsZnVuY3Rpb25Tb3VyY2VBbHBoYTppLlNPVVJDRV9BTFBIQSxmdW5jdGlvbkRlc3RpbmF0aW9uUmdiOmkuT05FLGZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYTppLk9ORX0pfTtyZXR1cm4gZShuKX0pLGRlZmluZSgiU2NlbmUvUGFzcyIsWyIuLi9Db3JlL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17T1BBUVVFOjAsVFJBTlNMVUNFTlQ6MSxPVkVSTEFZOjJ9O3JldHVybiBlKHQpfSksZGVmaW5lKCJDb3JlL1BpeGVsRm9ybWF0IixbIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtERVBUSF9DT01QT05FTlQ6NjQwMixERVBUSF9TVEVOQ0lMOjM0MDQxLEFMUEhBOjY0MDYsUkdCOjY0MDcsUkdCQTo2NDA4LExVTUlOQU5DRTo2NDA5LExVTUlOQU5DRV9BTFBIQTo2NDEwLHZhbGlkYXRlOmZ1bmN0aW9uKGUpe3JldHVybiBlPT09dC5ERVBUSF9DT01QT05FTlR8fGU9PT10LkRFUFRIX1NURU5DSUx8fGU9PT10LkFMUEhBfHxlPT09dC5SR0J8fGU9PT10LlJHQkF8fGU9PT10LkxVTUlOQU5DRXx8ZT09PXQuTFVNSU5BTkNFX0FMUEhBfSxpc0NvbG9yRm9ybWF0OmZ1bmN0aW9uKGUpe3JldHVybiBlPT09dC5BTFBIQXx8ZT09PXQuUkdCfHxlPT09dC5SR0JBfHxlPT09dC5MVU1JTkFOQ0V8fGU9PT10LkxVTUlOQU5DRV9BTFBIQX0saXNEZXB0aEZvcm1hdDpmdW5jdGlvbihlKXtyZXR1cm4gZT09PXQuREVQVEhfQ09NUE9ORU5UfHxlPT09dC5ERVBUSF9TVEVOQ0lMfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL1RleHR1cmVBdGxhcyIsWyIuLi9Db3JlL0JvdW5kaW5nUmVjdGFuZ2xlIiwiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9jcmVhdGVHdWlkIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9sb2FkSW1hZ2UiLCIuLi9Db3JlL1BpeGVsRm9ybWF0IiwiLi4vQ29yZS9SdW50aW1lRXJyb3IiLCIuLi9UaGlyZFBhcnR5L3doZW4iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGgoZSxpLHIsbyxhKXt0aGlzLmJvdHRvbUxlZnQ9bihlLHQuWkVSTyksdGhpcy50b3BSaWdodD1uKGksdC5aRVJPKSx0aGlzLmNoaWxkTm9kZTE9cix0aGlzLmNoaWxkTm9kZTI9byx0aGlzLmltYWdlSW5kZXg9YX1mdW5jdGlvbiBtKGUsaSl7dmFyIG49ZS5udW1iZXJPZkltYWdlcyxvPTI7aWYobj4wKXt2YXIgYT1lLl90ZXh0dXJlLndpZHRoLHM9ZS5fdGV4dHVyZS5oZWlnaHQsbD1vKihhK2kud2lkdGgrZS5fYm9yZGVyV2lkdGhJblBpeGVscyksdT1vKihzK2kuaGVpZ2h0K2UuX2JvcmRlcldpZHRoSW5QaXhlbHMpLGM9YS9sLGQ9cy91LG09bmV3IGgobmV3IHQoYStlLl9ib3JkZXJXaWR0aEluUGl4ZWxzLDApLG5ldyB0KGwscykpLGY9bmV3IGgobmV3IHQsbmV3IHQobCxzKSxlLl9yb290LG0pLHA9bmV3IGgobmV3IHQoMCxzK2UuX2JvcmRlcldpZHRoSW5QaXhlbHMpLG5ldyB0KGwsdSkpLHY9bmV3IGgobmV3IHQsbmV3IHQobCx1KSxmLHApO2UuX3Jvb3Q9djtmb3IodmFyIGc9MDtnPGUuX3RleHR1cmVDb29yZGluYXRlcy5sZW5ndGg7ZysrKXt2YXIgXz1lLl90ZXh0dXJlQ29vcmRpbmF0ZXNbZ107cihfKSYmKF8ueCo9YyxfLnkqPWQsXy53aWR0aCo9YyxfLmhlaWdodCo9ZCl9dmFyIHk9ZS5fY29udGV4dC5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOmwsaGVpZ2h0OnUscGl4ZWxGb3JtYXQ6ZS5fcGl4ZWxGb3JtYXR9KSxDPWUuX2NvbnRleHQuY3JlYXRlRnJhbWVidWZmZXIoe2NvbG9yVGV4dHVyZXM6W2UuX3RleHR1cmVdfSk7Qy5fYmluZCgpLHkuY29weUZyb21GcmFtZWJ1ZmZlcigwLDAsMCwwLGEscyksQy5fdW5CaW5kKCksQy5kZXN0cm95KCksZS5fdGV4dHVyZT15fWVsc2V7dmFyIHc9byooaS53aWR0aCtlLl9ib3JkZXJXaWR0aEluUGl4ZWxzKSxFPW8qKGkuaGVpZ2h0K2UuX2JvcmRlcldpZHRoSW5QaXhlbHMpO2UuX3RleHR1cmU9ZS5fdGV4dHVyZSYmZS5fdGV4dHVyZS5kZXN0cm95KCksZS5fdGV4dHVyZT1lLl9jb250ZXh0LmNyZWF0ZVRleHR1cmUyRCh7d2lkdGg6dyxoZWlnaHQ6RSxwaXhlbEZvcm1hdDplLl9waXhlbEZvcm1hdH0pLGUuX3Jvb3Q9bmV3IGgobmV3IHQsbmV3IHQodyxFKSl9fWZ1bmN0aW9uIGYoZSxpLG4pe2lmKCFyKGkpKXJldHVybiB2b2lkIDA7aWYoIXIoaS5jaGlsZE5vZGUxKSYmIXIoaS5jaGlsZE5vZGUyKSl7aWYocihpLmltYWdlSW5kZXgpKXJldHVybiB2b2lkIDA7dmFyIG89aS50b3BSaWdodC54LWkuYm90dG9tTGVmdC54LGE9aS50b3BSaWdodC55LWkuYm90dG9tTGVmdC55LHM9by1uLndpZHRoLGw9YS1uLmhlaWdodDtpZigwPnN8fDA+bClyZXR1cm4gdm9pZCAwO2lmKDA9PT1zJiYwPT09bClyZXR1cm4gaTtpZihzPmwpe2kuY2hpbGROb2RlMT1uZXcgaChuZXcgdChpLmJvdHRvbUxlZnQueCxpLmJvdHRvbUxlZnQueSksbmV3IHQoaS5ib3R0b21MZWZ0Lngrbi53aWR0aCxpLnRvcFJpZ2h0LnkpKTt2YXIgdT1pLmJvdHRvbUxlZnQueCtuLndpZHRoK2UuX2JvcmRlcldpZHRoSW5QaXhlbHM7dTxpLnRvcFJpZ2h0LngmJihpLmNoaWxkTm9kZTI9bmV3IGgobmV3IHQodSxpLmJvdHRvbUxlZnQueSksbmV3IHQoaS50b3BSaWdodC54LGkudG9wUmlnaHQueSkpKX1lbHNle2kuY2hpbGROb2RlMT1uZXcgaChuZXcgdChpLmJvdHRvbUxlZnQueCxpLmJvdHRvbUxlZnQueSksbmV3IHQoaS50b3BSaWdodC54LGkuYm90dG9tTGVmdC55K24uaGVpZ2h0KSk7dmFyIGM9aS5ib3R0b21MZWZ0Lnkrbi5oZWlnaHQrZS5fYm9yZGVyV2lkdGhJblBpeGVscztjPGkudG9wUmlnaHQueSYmKGkuY2hpbGROb2RlMj1uZXcgaChuZXcgdChpLmJvdHRvbUxlZnQueCxjKSxuZXcgdChpLnRvcFJpZ2h0LngsaS50b3BSaWdodC55KSkpfXJldHVybiBmKGUsaS5jaGlsZE5vZGUxLG4pfXJldHVybiBmKGUsaS5jaGlsZE5vZGUxLG4pfHxmKGUsaS5jaGlsZE5vZGUyLG4pfWZ1bmN0aW9uIHAodCxuLG8pe3ZhciBhPWYodCx0Ll9yb290LG4pO2lmKHIoYSkpe2EuaW1hZ2VJbmRleD1vO3ZhciBzPXQuX3RleHR1cmUud2lkdGgsbD10Ll90ZXh0dXJlLmhlaWdodCx1PWEudG9wUmlnaHQueC1hLmJvdHRvbUxlZnQueCxjPWEudG9wUmlnaHQueS1hLmJvdHRvbUxlZnQueSxkPWEuYm90dG9tTGVmdC54L3MsaD1hLmJvdHRvbUxlZnQueS9sLHY9dS9zLGc9Yy9sO3QuX3RleHR1cmVDb29yZGluYXRlc1tvXT1uZXcgZShkLGgsdixnKSx0Ll90ZXh0dXJlLmNvcHlGcm9tKG4sYS5ib3R0b21MZWZ0LngsYS5ib3R0b21MZWZ0LnkpfWVsc2UgbSh0LG4pLHAodCxuLG8pO3QuX2d1aWQ9aSgpfXZhciB2PW5ldyB0KDE2LDE2KSxnPWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgcj1uKGUuYm9yZGVyV2lkdGhJblBpeGVscywxKSxvPW4oZS5pbml0aWFsU2l6ZSx2KTt0aGlzLl9jb250ZXh0PWUuY29udGV4dCx0aGlzLl9waXhlbEZvcm1hdD1uKGUucGl4ZWxGb3JtYXQsdS5SR0JBKSx0aGlzLl9ib3JkZXJXaWR0aEluUGl4ZWxzPXIsdGhpcy5fdGV4dHVyZUNvb3JkaW5hdGVzPVtdLHRoaXMuX2d1aWQ9aSgpLHRoaXMuX2lkSGFzaD17fSx0aGlzLl90ZXh0dXJlPXRoaXMuX2NvbnRleHQuY3JlYXRlVGV4dHVyZTJEKHt3aWR0aDpvLngsaGVpZ2h0Om8ueSxwaXhlbEZvcm1hdDp0aGlzLl9waXhlbEZvcm1hdH0pLHRoaXMuX3Jvb3Q9bmV3IGgobmV3IHQsbmV3IHQoby54LG8ueSkpfTtyZXR1cm4gbyhnLnByb3RvdHlwZSx7Ym9yZGVyV2lkdGhJblBpeGVsczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JvcmRlcldpZHRoSW5QaXhlbHN9fSx0ZXh0dXJlQ29vcmRpbmF0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXh0dXJlQ29vcmRpbmF0ZXN9fSx0ZXh0dXJlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dHVyZX19LG51bWJlck9mSW1hZ2VzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dHVyZUNvb3JkaW5hdGVzLmxlbmd0aH19LGd1aWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ndWlkfX19KSxnLnByb3RvdHlwZS5hZGRJbWFnZT1mdW5jdGlvbihlLHQpe3ZhciBpPXRoaXMuX2lkSGFzaFtlXTtpZihyKGkpKXJldHVybiBpOyJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q9dChlKToic3RyaW5nIj09dHlwZW9mIHQmJih0PWwodCkpO3ZhciBuPXRoaXM7cmV0dXJuIGk9ZCh0LGZ1bmN0aW9uKGUpe2lmKG4uaXNEZXN0cm95ZWQoKSlyZXR1cm4tMTt2YXIgdD1uLm51bWJlck9mSW1hZ2VzO3JldHVybiBwKG4sZSx0KSx0fSksdGhpcy5faWRIYXNoW2VdPWksaX0sZy5wcm90b3R5cGUuYWRkU3ViUmVnaW9uPWZ1bmN0aW9uKHQsbil7dmFyIG89dGhpcy5faWRIYXNoW3RdO2lmKCFyKG8pKXRocm93IG5ldyBjKCdpbWFnZSB3aXRoIGlkICInK3QrJyIgbm90IGZvdW5kIGluIHRoZSBhdGxhcy4nKTt2YXIgYT10aGlzO3JldHVybiBkKG8sZnVuY3Rpb24odCl7aWYoLTE9PT10KXJldHVybi0xO3ZhciByPWEuX3RleHR1cmUud2lkdGgsbz1hLl90ZXh0dXJlLmhlaWdodCxzPWEubnVtYmVyT2ZJbWFnZXMsbD1hLl90ZXh0dXJlQ29vcmRpbmF0ZXNbdF0sdT1sLngrbi54L3IsYz1sLnkrbi55L28sZD1uLndpZHRoL3IsaD1uLmhlaWdodC9vO3JldHVybiBhLl90ZXh0dXJlQ29vcmRpbmF0ZXMucHVzaChuZXcgZSh1LGMsZCxoKSksYS5fZ3VpZD1pKCksc30pfSxnLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxnLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmU9dGhpcy5fdGV4dHVyZSYmdGhpcy5fdGV4dHVyZS5kZXN0cm95KCksYSh0aGlzKX0sZ30pLGRlZmluZSgiU2NlbmUvQmlsbGJvYXJkQ29sbGVjdGlvbiIsWyIuLi9Db3JlL0JvdW5kaW5nU3BoZXJlIiwiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvQ29tcG9uZW50RGF0YXR5cGUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0VuY29kZWRDYXJ0ZXNpYW4zIiwiLi4vQ29yZS9JbmRleERhdGF0eXBlIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vUmVuZGVyZXIvQnVmZmVyVXNhZ2UiLCIuLi9SZW5kZXJlci9jcmVhdGVTaGFkZXJTb3VyY2UiLCIuLi9SZW5kZXJlci9EcmF3Q29tbWFuZCIsIi4uL1JlbmRlcmVyL1ZlcnRleEFycmF5RmFjYWRlIiwiLi4vU2hhZGVycy9CaWxsYm9hcmRDb2xsZWN0aW9uRlMiLCIuLi9TaGFkZXJzL0JpbGxib2FyZENvbGxlY3Rpb25WUyIsIi4vQmlsbGJvYXJkIiwiLi9CbGVuZGluZ1N0YXRlIiwiLi9Ib3Jpem9udGFsT3JpZ2luIiwiLi9QYXNzIiwiLi9TY2VuZU1vZGUiLCIuL1RleHR1cmVBdGxhcyJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSxiLFMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBUKGUpe2lmKGUuX2JpbGxib2FyZHNSZW1vdmVkKXtlLl9iaWxsYm9hcmRzUmVtb3ZlZD0hMTtmb3IodmFyIHQ9W10saT1lLl9iaWxsYm9hcmRzLG49aS5sZW5ndGgscj0wLG89MDtuPnI7KytyKXt2YXIgYT1pW3JdO2EmJihhLl9pbmRleD1vKyssdC5wdXNoKGEpKX1lLl9iaWxsYm9hcmRzPXR9fWZ1bmN0aW9uIHgoZSl7dmFyIHQ9MTYzODQsaT1lLmNhY2hlLmJpbGxib2FyZENvbGxlY3Rpb25fZGlyZWN0aW9uc1ZlcnRleEJ1ZmZlcjtpZihhKGkpKXJldHVybiBpO2Zvcih2YXIgbj1uZXcgVWludDhBcnJheSgyKjQqdCkscj0wLG89MDt0PnI7KytyKW5bbysrXT0wLG5bbysrXT0wLG5bbysrXT0yNTUsbltvKytdPTAsbltvKytdPTI1NSxuW28rK109MjU1LG5bbysrXT0wLG5bbysrXT0yNTU7cmV0dXJuIGk9ZS5jcmVhdGVWZXJ0ZXhCdWZmZXIobixtLlNUQVRJQ19EUkFXKSxpLnZlcnRleEFycmF5RGVzdHJveWFibGU9ITEsZS5jYWNoZS5iaWxsYm9hcmRDb2xsZWN0aW9uX2RpcmVjdGlvbnNWZXJ0ZXhCdWZmZXI9aSxpfWZ1bmN0aW9uIEEoZSl7dmFyIHQ9MTYzODQsaT1lLmNhY2hlLmJpbGxib2FyZENvbGxlY3Rpb25faW5kZXhCdWZmZXI7aWYoYShpKSlyZXR1cm4gaTtmb3IodmFyIG49Nip0LHI9bmV3IFVpbnQxNkFycmF5KG4pLG89MCxzPTA7bj5vO28rPTYscys9NClyW29dPXMscltvKzFdPXMrMSxyW28rMl09cysyLHJbbyszXT1zKzAscltvKzRdPXMrMixyW28rNV09cyszO3JldHVybiBpPWUuY3JlYXRlSW5kZXhCdWZmZXIocixtLlNUQVRJQ19EUkFXLGQuVU5TSUdORURfU0hPUlQpLGkudmVydGV4QXJyYXlEZXN0cm95YWJsZT0hMSxlLmNhY2hlLmJpbGxib2FyZENvbGxlY3Rpb25faW5kZXhCdWZmZXI9aSxpfWZ1bmN0aW9uIFAoZSx0LGkpe3ZhciBuPXgoZSk7cmV0dXJuIG5ldyB2KGUsW3tpbmRleDpvdC5wb3NpdGlvbkhpZ2gsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLGNvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsdXNhZ2U6aVtxXX0se2luZGV4Om90LnBvc2l0aW9uTG93LGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULHVzYWdlOmlbcV19LHtpbmRleDpvdC5waXhlbE9mZnNldEFuZFRyYW5zbGF0ZSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjQsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCx1c2FnZTppW2pdfSx7aW5kZXg6b3QuZXllT2Zmc2V0QW5kU2NhbGUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTo0LGNvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsdXNhZ2U6aVtKXX0se2luZGV4Om90LnRleHR1cmVDb29yZGluYXRlc0FuZEltYWdlU2l6ZSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjQsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCx1c2FnZTppW0tdfSx7aW5kZXg6b3QucGlja0NvbG9yLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxub3JtYWxpemU6ITAsY29tcG9uZW50RGF0YXR5cGU6ci5VTlNJR05FRF9CWVRFLHVzYWdlOm0uU1RBVElDX0RSQVcscHVycG9zZTpsdH0se2luZGV4Om90LmNvbG9yLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxub3JtYWxpemU6ITAsY29tcG9uZW50RGF0YXR5cGU6ci5VTlNJR05FRF9CWVRFLHVzYWdlOmlbUV0scHVycG9zZTpzdH0se2luZGV4Om90Lm9yaWdpbkFuZFNob3csY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLGNvbXBvbmVudERhdGF0eXBlOnIuQllURSx1c2FnZTppW0hdfSx7aW5kZXg6b3QuZGlyZWN0aW9uLHZlcnRleEJ1ZmZlcjpuLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Mixub3JtYWxpemU6ITAsY29tcG9uZW50RGF0YXR5cGU6ci5VTlNJR05FRF9CWVRFfSx7aW5kZXg6b3Qucm90YXRpb25BbmRBbGlnbmVkQXhpcyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjQsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCx1c2FnZTppWyRdfSx7aW5kZXg6b3Quc2NhbGVCeURpc3RhbmNlLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULHVzYWdlOmlbdHRdfSx7aW5kZXg6b3QudHJhbnNsdWNlbmN5QnlEaXN0YW5jZSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjQsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCx1c2FnZTppW2l0XX0se2luZGV4Om90LnBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULHVzYWdlOmlbbnRdfV0sNCp0KX1mdW5jdGlvbiBNKHQsaSxuLHIsbyl7dmFyIGE9NCpvLl9pbmRleCxzPW8uX2dldEFjdHVhbFBvc2l0aW9uKCk7dC5fbW9kZT09PWIuU0NFTkUzRCYmKGUuZXhwYW5kKHQuX2Jhc2VWb2x1bWUscyx0Ll9iYXNlVm9sdW1lKSx0Ll9ib3VuZGluZ1ZvbHVtZURpcnR5PSEwKSxjLmZyb21DYXJ0ZXNpYW4ocyxjdCk7dmFyIGw9clthdF0sdT1sW290LnBvc2l0aW9uSGlnaF0sZD1jdC5oaWdoO3UoYSswLGQueCxkLnksZC56KSx1KGErMSxkLngsZC55LGQueiksdShhKzIsZC54LGQueSxkLnopLHUoYSszLGQueCxkLnksZC56KTt2YXIgaD1sW290LnBvc2l0aW9uTG93XSxtPWN0LmxvdztoKGErMCxtLngsbS55LG0ueiksaChhKzEsbS54LG0ueSxtLnopLGgoYSsyLG0ueCxtLnksbS56KSxoKGErMyxtLngsbS55LG0ueil9ZnVuY3Rpb24gSShlLHQsaSxuLHIpe3ZhciBvPTQqci5faW5kZXgsYT1yLnBpeGVsT2Zmc2V0LHM9ci5fdHJhbnNsYXRlO2UuX21heFBpeGVsT2Zmc2V0PU1hdGgubWF4KGUuX21heFBpeGVsT2Zmc2V0LE1hdGguYWJzKGEueCtzLngpLE1hdGguYWJzKC1hLnkrcy55KSk7dmFyIGw9blthdF0sdT1sW290LnBpeGVsT2Zmc2V0QW5kVHJhbnNsYXRlXTt1KG8rMCxhLngsLWEueSxzLngscy55KSx1KG8rMSxhLngsLWEueSxzLngscy55KSx1KG8rMixhLngsLWEueSxzLngscy55KSx1KG8rMyxhLngsLWEueSxzLngscy55KX1mdW5jdGlvbiBEKGUsdCxpLG4scil7dmFyIG89NCpyLl9pbmRleCxhPXIuZXllT2Zmc2V0LHM9ci5zY2FsZTtlLl9tYXhFeWVPZmZzZXQ9TWF0aC5tYXgoZS5fbWF4RXllT2Zmc2V0LE1hdGguYWJzKGEueCksTWF0aC5hYnMoYS55KSxNYXRoLmFicyhhLnopKSxlLl9tYXhTY2FsZT1NYXRoLm1heChlLl9tYXhTY2FsZSxzKTt2YXIgbD1uW2F0XSx1PWxbb3QuZXllT2Zmc2V0QW5kU2NhbGVdO3UobyswLGEueCxhLnksYS56LHMpLHUobysxLGEueCxhLnksYS56LHMpLHUobysyLGEueCxhLnksYS56LHMpLHUobyszLGEueCxhLnksYS56LHMpfWZ1bmN0aW9uIE8oZSx0LGkscixvKXt2YXIgYT00Km8uX2luZGV4LHM9cltsdF0sbD1zW290LnBpY2tDb2xvcl0sdT1vLmdldFBpY2tJZCh0KS5jb2xvcixjPW4uZmxvYXRUb0J5dGUodS5yZWQpLGQ9bi5mbG9hdFRvQnl0ZSh1LmdyZWVuKSxoPW4uZmxvYXRUb0J5dGUodS5ibHVlKSxtPW4uZmxvYXRUb0J5dGUodS5hbHBoYSk7bChhKzAsYyxkLGgsbSksbChhKzEsYyxkLGgsbSksbChhKzIsYyxkLGgsbSksbChhKzMsYyxkLGgsbSl9ZnVuY3Rpb24gUihlLHQsaSxyLG8pe3ZhciBhPTQqby5faW5kZXgscz1yW3N0XSxsPXNbb3QuY29sb3JdLHU9by5jb2xvcixjPW4uZmxvYXRUb0J5dGUodS5yZWQpLGQ9bi5mbG9hdFRvQnl0ZSh1LmdyZWVuKSxoPW4uZmxvYXRUb0J5dGUodS5ibHVlKSxtPW4uZmxvYXRUb0J5dGUodS5hbHBoYSk7bChhKzAsYyxkLGgsbSksbChhKzEsYyxkLGgsbSksbChhKzIsYyxkLGgsbSksbChhKzMsYyxkLGgsbSl9ZnVuY3Rpb24gTChlLHQsaSxuLHIpe3ZhciBvPTQqci5faW5kZXgsYT1yLmhvcml6b250YWxPcmlnaW4scz1yLnZlcnRpY2FsT3JpZ2luLGw9ci5zaG93OzA9PT1yLmNvbG9yLmFscGhhJiYobD0hMSksZS5fYWxsSG9yaXpvbnRhbENlbnRlcj1lLl9hbGxIb3Jpem9udGFsQ2VudGVyJiZhPT09dy5DRU5URVI7dmFyIHU9blthdF0sYz11W290Lm9yaWdpbkFuZFNob3ddO2MobyswLGEscyxsKSxjKG8rMSxhLHMsbCksYyhvKzIsYSxzLGwpLGMobyszLGEscyxsKX1mdW5jdGlvbiBOKGUsdCxpLG4scil7dmFyIGE9NCpyLl9pbmRleCxzPTAsbD0wLHU9MCxjPTAsZD1yLl9pbWFnZUluZGV4O2lmKC0xIT09ZCl7dmFyIGg9aVtkXTtzPWgueCxsPWgueSx1PWgud2lkdGgsYz1oLmhlaWdodH12YXIgbT1zK3UsZj1sK2MscD1lLl90ZXh0dXJlQXRsYXMudGV4dHVyZS5kaW1lbnNpb25zLHY9LjUqbyhyLndpZHRoLHAueCp1KSxnPS41Km8oci5oZWlnaHQscC55KmMpO2UuX21heFNpemU9TWF0aC5tYXgoZS5fbWF4U2l6ZSx2LGcpO3ZhciBfPW5bYXRdLHk9X1tvdC50ZXh0dXJlQ29vcmRpbmF0ZXNBbmRJbWFnZVNpemVdO3koYSswLHMsbCx2LGcpLHkoYSsxLG0sbCx2LGcpLHkoYSsyLG0sZix2LGcpLHkoYSszLHMsZix2LGcpfWZ1bmN0aW9uIHooZSx0LG4scixvKXt2YXIgYT00Km8uX2luZGV4LHM9by5yb3RhdGlvbixsPW8uYWxpZ25lZEF4aXM7MD09PXMmJmkuZXF1YWxzKGwsaS5aRVJPKXx8KGUuX3NoYWRlclJvdGF0aW9uPSEwKTt2YXIgdT1sLngsYz1sLnksZD1sLnosaD1yW2F0XSxtPWhbb3Qucm90YXRpb25BbmRBbGlnbmVkQXhpc107bShhKzAscyx1LGMsZCksbShhKzEscyx1LGMsZCksbShhKzIscyx1LGMsZCksbShhKzMscyx1LGMsZCl9ZnVuY3Rpb24gQihlLHQsaSxuLHIpe3ZhciBvPTQqci5faW5kZXgscz1uW2F0XSxsPXNbb3Quc2NhbGVCeURpc3RhbmNlXSx1PTAsYz0xLGQ9MSxoPTEsbT1yLnNjYWxlQnlEaXN0YW5jZTthKG0pJiYodT1tLm5lYXIsYz1tLm5lYXJWYWx1ZSxkPW0uZmFyLGg9bS5mYXJWYWx1ZSwoMSE9PWN8fDEhPT1oKSYmKGUuX3NoYWRlclNjYWxlQnlEaXN0YW5jZT0hMCkpLGwobyswLHUsYyxkLGgpLGwobysxLHUsYyxkLGgpLGwobysyLHUsYyxkLGgpLGwobyszLHUsYyxkLGgpfWZ1bmN0aW9uIEYoZSx0LGksbixyKXt2YXIgbz00KnIuX2luZGV4LHM9blthdF0sbD1zW290LnRyYW5zbHVjZW5jeUJ5RGlzdGFuY2VdLHU9MCxjPTEsZD0xLGg9MSxtPXIudHJhbnNsdWNlbmN5QnlEaXN0YW5jZTthKG0pJiYodT1tLm5lYXIsYz1tLm5lYXJWYWx1ZSxkPW0uZmFyLGg9bS5mYXJWYWx1ZSwoMSE9PWN8fDEhPT1oKSYmKGUuX3NoYWRlclRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9ITApKSxsKG8rMCx1LGMsZCxoKSxsKG8rMSx1LGMsZCxoKSxsKG8rMix1LGMsZCxoKSxsKG8rMyx1LGMsZCxoKX1mdW5jdGlvbiBWKGUsdCxpLG4scil7dmFyIG89NCpyLl9pbmRleCxzPW5bYXRdLGw9c1tvdC5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZV0sdT0wLGM9MSxkPTEsaD0xLG09ci5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZTthKG0pJiYodT1tLm5lYXIsYz1tLm5lYXJWYWx1ZSxkPW0uZmFyLGg9bS5mYXJWYWx1ZSwoMSE9PWN8fDEhPT1oKSYmKGUuX3NoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPSEwKSksbChvKzAsdSxjLGQsaCksbChvKzEsdSxjLGQsaCksbChvKzIsdSxjLGQsaCksbChvKzMsdSxjLGQsaCl9ZnVuY3Rpb24gayhlLHQsaSxuLHIpe00oZSx0LGksbixyKSxJKGUsdCxpLG4sciksRChlLHQsaSxuLHIpLE8oZSx0LGksbixyKSxSKGUsdCxpLG4sciksTChlLHQsaSxuLHIpLE4oZSx0LGksbixyKSx6KGUsdCxpLG4sciksQihlLHQsaSxuLHIpLEYoZSx0LGksbixyKSxWKGUsdCxpLG4scil9ZnVuY3Rpb24gVSh0LGksbixyLG8scyl7dmFyIGw7ci5tb2RlPT09Yi5TQ0VORTNEPyhsPXQuX2Jhc2VWb2x1bWUsdC5fYm91bmRpbmdWb2x1bWVEaXJ0eT0hMCk6bD10Ll9iYXNlVm9sdW1lMkQ7Zm9yKHZhciB1PVtdLGM9MDtuPmM7KytjKXt2YXIgZD1pW2NdLGg9ZC5wb3NpdGlvbixtPXkuX2NvbXB1dGVBY3R1YWxQb3NpdGlvbihoLHIsbyk7YShtKSYmKGQuX3NldEFjdHVhbFBvc2l0aW9uKG0pLHM/dS5wdXNoKG0pOmUuZXhwYW5kKGwsbSxsKSl9cyYmZS5mcm9tUG9pbnRzKHUsbCl9ZnVuY3Rpb24gVyhlLHQpe3ZhciBpPXQubW9kZSxuPWUuX2JpbGxib2FyZHMscj1lLl9iaWxsYm9hcmRzVG9VcGRhdGUsbz1lLl9tb2RlbE1hdHJpeDtlLl9jcmVhdGVWZXJ0ZXhBcnJheXx8ZS5fbW9kZSE9PWl8fGkhPT1iLlNDRU5FM0QmJiFoLmVxdWFscyhvLGUubW9kZWxNYXRyaXgpPyhlLl9tb2RlPWksaC5jbG9uZShlLm1vZGVsTWF0cml4LG8pLGUuX2NyZWF0ZVZlcnRleEFycmF5PSEwLChpPT09Yi5TQ0VORTNEfHxpPT09Yi5TQ0VORTJEfHxpPT09Yi5DT0xVTUJVU19WSUVXKSYmVShlLG4sbi5sZW5ndGgsdCxvLCEwKSk6aT09PWIuTU9SUEhJTkc/VShlLG4sbi5sZW5ndGgsdCxvLCEwKTooaT09PWIuU0NFTkUyRHx8aT09PWIuQ09MVU1CVVNfVklFVykmJlUoZSxyLGUuX2JpbGxib2FyZHNUb1VwZGF0ZUluZGV4LHQsbywhMSl9ZnVuY3Rpb24gRyhlLHQsbixyKXt2YXIgbz1uLmNhbWVyYSxhPW8uZnJ1c3R1bSxzPWkuc3VidHJhY3Qoby5wb3NpdGlvbldDLHIuY2VudGVyLGh0KSxsPWkubXVsdGlwbHlCeVNjYWxhcihvLmRpcmVjdGlvbldDLGkuZG90KHMsby5kaXJlY3Rpb25XQyksbXQpLHU9TWF0aC5tYXgoMCxpLm1hZ25pdHVkZShsKS1yLnJhZGl1cyk7ZHQueD10LmRyYXdpbmdCdWZmZXJXaWR0aCxkdC55PXQuZHJhd2luZ0J1ZmZlckhlaWdodDt2YXIgYz1hLmdldFBpeGVsU2l6ZShkdCx1KSxkPU1hdGgubWF4KGMueCxjLnkpLGg9MipkKmUuX21heFNjYWxlKmUuX21heFNpemU7ZS5fYWxsSG9yaXpvbnRhbENlbnRlciYmKGgqPS41KTt2YXIgbT1kKmUuX21heFBpeGVsT2Zmc2V0K2UuX21heEV5ZU9mZnNldDtyLnJhZGl1cys9aCttfXZhciBIPXkuU0hPV19JTkRFWCxxPXkuUE9TSVRJT05fSU5ERVgsaj15LlBJWEVMX09GRlNFVF9JTkRFWCxZPXkuRVlFX09GRlNFVF9JTkRFWCxYPXkuSE9SSVpPTlRBTF9PUklHSU5fSU5ERVgsWj15LlZFUlRJQ0FMX09SSUdJTl9JTkRFWCxKPXkuU0NBTEVfSU5ERVgsSz15LklNQUdFX0lOREVYX0lOREVYLFE9eS5DT0xPUl9JTkRFWCwkPXkuUk9UQVRJT05fSU5ERVgsZXQ9eS5BTElHTkVEX0FYSVNfSU5ERVgsdHQ9eS5TQ0FMRV9CWV9ESVNUQU5DRV9JTkRFWCxpdD15LlRSQU5TTFVDRU5DWV9CWV9ESVNUQU5DRV9JTkRFWCxudD15LlBJWEVMX09GRlNFVF9TQ0FMRV9CWV9ESVNUQU5DRV9JTkRFWCxydD15Lk5VTUJFUl9PRl9QUk9QRVJUSUVTLG90PXtwb3NpdGlvbkhpZ2g6MCxwb3NpdGlvbkxvdzoxLHBpeGVsT2Zmc2V0QW5kVHJhbnNsYXRlOjIsZXllT2Zmc2V0QW5kU2NhbGU6Myx0ZXh0dXJlQ29vcmRpbmF0ZXNBbmRJbWFnZVNpemU6NCxvcmlnaW5BbmRTaG93OjUsZGlyZWN0aW9uOjYscGlja0NvbG9yOjcsY29sb3I6Nyxyb3RhdGlvbkFuZEFsaWduZWRBeGlzOjgsc2NhbGVCeURpc3RhbmNlOjksdHJhbnNsdWNlbmN5QnlEaXN0YW5jZToxMCxwaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZToxMX0sYXQ9ImFsbCIsc3Q9ImNvbG9yIixsdD0icGljayIsdXQ9ZnVuY3Rpb24odCl7dD1vKHQsby5FTVBUWV9PQkpFQ1QpLHRoaXMuX3RleHR1cmVBdGxhcz12b2lkIDAsdGhpcy5fdGV4dHVyZUF0bGFzR1VJRD12b2lkIDAsdGhpcy5fZGVzdHJveVRleHR1cmVBdGxhcz0hMCx0aGlzLl9zcD12b2lkIDAsdGhpcy5fcnM9dm9pZCAwLHRoaXMuX3ZhZj12b2lkIDAsdGhpcy5fc3BQaWNrPXZvaWQgMCx0aGlzLl9iaWxsYm9hcmRzPVtdLHRoaXMuX2JpbGxib2FyZHNUb1VwZGF0ZT1bXSx0aGlzLl9iaWxsYm9hcmRzVG9VcGRhdGVJbmRleD0wLHRoaXMuX2JpbGxib2FyZHNSZW1vdmVkPSExLHRoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSExLHRoaXMuX3NoYWRlclJvdGF0aW9uPSExLHRoaXMuX2NvbXBpbGVkU2hhZGVyUm90YXRpb249ITEsdGhpcy5fY29tcGlsZWRTaGFkZXJSb3RhdGlvblBpY2s9ITEsdGhpcy5fc2hhZGVyU2NhbGVCeURpc3RhbmNlPSExLHRoaXMuX2NvbXBpbGVkU2hhZGVyU2NhbGVCeURpc3RhbmNlPSExLHRoaXMuX2NvbXBpbGVkU2hhZGVyU2NhbGVCeURpc3RhbmNlUGljaz0hMSx0aGlzLl9zaGFkZXJUcmFuc2x1Y2VuY3lCeURpc3RhbmNlPSExLHRoaXMuX2NvbXBpbGVkU2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZT0hMSx0aGlzLl9jb21waWxlZFNoYWRlclRyYW5zbHVjZW5jeUJ5RGlzdGFuY2VQaWNrPSExLHRoaXMuX3NoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPSExLHRoaXMuX2NvbXBpbGVkU2hhZGVyUGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U9ITEsdGhpcy5fY29tcGlsZWRTaGFkZXJQaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZVBpY2s9ITEsdGhpcy5fcHJvcGVydGllc0NoYW5nZWQ9bmV3IFVpbnQzMkFycmF5KHJ0KSx0aGlzLl9tYXhTaXplPTAsdGhpcy5fbWF4RXllT2Zmc2V0PTAsdGhpcy5fbWF4U2NhbGU9MSx0aGlzLl9tYXhQaXhlbE9mZnNldD0wLHRoaXMuX2FsbEhvcml6b250YWxDZW50ZXI9ITAsdGhpcy5fYmFzZVZvbHVtZT1uZXcgZSx0aGlzLl9iYXNlVm9sdW1lV0M9bmV3IGUsdGhpcy5fYmFzZVZvbHVtZTJEPW5ldyBlLHRoaXMuX2JvdW5kaW5nVm9sdW1lPW5ldyBlLHRoaXMuX2JvdW5kaW5nVm9sdW1lRGlydHk9ITEsdGhpcy5fY29sb3JDb21tYW5kcz1bXSx0aGlzLl9waWNrQ29tbWFuZHM9W10sdGhpcy5tb2RlbE1hdHJpeD1oLmNsb25lKG8odC5tb2RlbE1hdHJpeCxoLklERU5USVRZKSksdGhpcy5fbW9kZWxNYXRyaXg9aC5jbG9uZShoLklERU5USVRZKSx0aGlzLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPW8odC5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSwhMSksdGhpcy5fbW9kZT1iLlNDRU5FM0QsdGhpcy5fYnVmZmVyc1VzYWdlPVttLlNUQVRJQ19EUkFXLG0uU1RBVElDX0RSQVcsbS5TVEFUSUNfRFJBVyxtLlNUQVRJQ19EUkFXLG0uU1RBVElDX0RSQVcsbS5TVEFUSUNfRFJBVyxtLlNUQVRJQ19EUkFXLG0uU1RBVElDX0RSQVcsbS5TVEFUSUNfRFJBVyxtLlNUQVRJQ19EUkFXLG0uU1RBVElDX0RSQVcsbS5TVEFUSUNfRFJBVyxtLlNUQVRJQ19EUkFXLG0uU1RBVElDX0RSQVddO3ZhciBpPXRoaXM7dGhpcy5fdW5pZm9ybXM9e3VfYXRsYXM6ZnVuY3Rpb24oKXtyZXR1cm4gaS5fdGV4dHVyZUF0bGFzLnRleHR1cmV9fX07cyh1dC5wcm90b3R5cGUse2xlbmd0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFQodGhpcyksdGhpcy5fYmlsbGJvYXJkcy5sZW5ndGh9fSx0ZXh0dXJlQXRsYXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXh0dXJlQXRsYXN9LHNldDpmdW5jdGlvbihlKXt0aGlzLl90ZXh0dXJlQXRsYXMhPT1lJiYodGhpcy5fdGV4dHVyZUF0bGFzPXRoaXMuX2Rlc3Ryb3lUZXh0dXJlQXRsYXMmJnRoaXMuX3RleHR1cmVBdGxhcyYmdGhpcy5fdGV4dHVyZUF0bGFzLmRlc3Ryb3koKSx0aGlzLl90ZXh0dXJlQXRsYXM9ZSx0aGlzLl9jcmVhdGVWZXJ0ZXhBcnJheT0hMCl9fSxkZXN0cm95VGV4dHVyZUF0bGFzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVzdHJveVRleHR1cmVBdGxhc30sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2Rlc3Ryb3lUZXh0dXJlQXRsYXM9ZX19fSksdXQucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgeShlLHRoaXMpO3JldHVybiB0Ll9pbmRleD10aGlzLl9iaWxsYm9hcmRzLmxlbmd0aCx0aGlzLl9iaWxsYm9hcmRzLnB1c2godCksdGhpcy5fY3JlYXRlVmVydGV4QXJyYXk9ITAsdH0sdXQucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jb250YWlucyhlKT8odGhpcy5fYmlsbGJvYXJkc1tlLl9pbmRleF09bnVsbCx0aGlzLl9iaWxsYm9hcmRzUmVtb3ZlZD0hMCx0aGlzLl9jcmVhdGVWZXJ0ZXhBcnJheT0hMCxlLl9kZXN0cm95KCksITApOiExfSx1dC5wcm90b3R5cGUucmVtb3ZlQWxsPWZ1bmN0aW9uKCl7dGhpcy5fZGVzdHJveUJpbGxib2FyZHMoKSx0aGlzLl9iaWxsYm9hcmRzPVtdLHRoaXMuX2JpbGxib2FyZHNUb1VwZGF0ZT1bXSx0aGlzLl9iaWxsYm9hcmRzVG9VcGRhdGVJbmRleD0wLHRoaXMuX2JpbGxib2FyZHNSZW1vdmVkPSExLHRoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSEwfSx1dC5wcm90b3R5cGUuX3VwZGF0ZUJpbGxib2FyZD1mdW5jdGlvbihlLHQpe2UuX2RpcnR5fHwodGhpcy5fYmlsbGJvYXJkc1RvVXBkYXRlW3RoaXMuX2JpbGxib2FyZHNUb1VwZGF0ZUluZGV4KytdPWUpLCsrdGhpcy5fcHJvcGVydGllc0NoYW5nZWRbdF19LHV0LnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4gYShlKSYmZS5fYmlsbGJvYXJkQ29sbGVjdGlvbj09PXRoaXN9LHV0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIFQodGhpcyksdGhpcy5fYmlsbGJvYXJkc1tlXX0sdXQucHJvdG90eXBlLmNvbXB1dGVOZXdCdWZmZXJzVXNhZ2U9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fYnVmZmVyc1VzYWdlLHQ9ITEsaT10aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZCxuPTA7cnQ+bjsrK24pe3ZhciByPTA9PT1pW25dP20uU1RBVElDX0RSQVc6bS5TVFJFQU1fRFJBVzt0PXR8fGVbbl0hPT1yLGVbbl09cn1yZXR1cm4gdH07dmFyIGN0PW5ldyBjLGR0PW5ldyB0LGh0PW5ldyBpLG10PW5ldyBpO3JldHVybiB1dC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsaSxuKXt2YXIgcj10aGlzLl9iaWxsYm9hcmRzLG89ci5sZW5ndGgscz10aGlzLl90ZXh0dXJlQXRsYXM7aWYoIWEocykpe3M9dGhpcy5fdGV4dHVyZUF0bGFzPW5ldyBTKHtjb250ZXh0OnR9KTtmb3IodmFyIGw9MDtvPmw7KytsKXJbbF0uX2xvYWRJbWFnZSgpfXZhciB1PXMudGV4dHVyZUNvb3JkaW5hdGVzO2lmKDAhPT11Lmxlbmd0aCl7VCh0aGlzKSxXKHRoaXMsaSkscj10aGlzLl9iaWxsYm9hcmRzLG89ci5sZW5ndGg7dmFyIGM9dGhpcy5fYmlsbGJvYXJkc1RvVXBkYXRlLGQ9dGhpcy5fYmlsbGJvYXJkc1RvVXBkYXRlSW5kZXgsbT10aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZCx2PXMuZ3VpZCx5PXRoaXMuX2NyZWF0ZVZlcnRleEFycmF5fHx0aGlzLl90ZXh0dXJlQXRsYXNHVUlEIT09djt0aGlzLl90ZXh0dXJlQXRsYXNHVUlEPXY7dmFyIHcseD1pLnBhc3NlcyxPPXgucGljaztpZih5fHwhTyYmdGhpcy5jb21wdXRlTmV3QnVmZmVyc1VzYWdlKCkpe3RoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSExO2Zvcih2YXIgVT0wO3J0PlU7KytVKW1bVV09MDtpZih0aGlzLl92YWY9dGhpcy5fdmFmJiZ0aGlzLl92YWYuZGVzdHJveSgpLG8+MCl7dGhpcy5fdmFmPVAodCxvLHRoaXMuX2J1ZmZlcnNVc2FnZSksdz10aGlzLl92YWYud3JpdGVycztmb3IodmFyIGF0PTA7bz5hdDsrK2F0KXt2YXIgdXQ9dGhpcy5fYmlsbGJvYXJkc1thdF07dXQuX2RpcnR5PSExLGsodGhpcyx0LHUsdyx1dCl9dGhpcy5fdmFmLmNvbW1pdChBKHQpKX10aGlzLl9iaWxsYm9hcmRzVG9VcGRhdGVJbmRleD0wfWVsc2UgaWYoZD4wKXt2YXIgY3Q9W107aWYobVtxXSYmY3QucHVzaChNKSxtW2pdJiZjdC5wdXNoKEkpLChtW1ldfHxtW0pdKSYmY3QucHVzaChEKSxtW0tdJiZjdC5wdXNoKE4pLG1bUV0mJmN0LnB1c2goUiksKG1bWF18fG1bWl18fG1bSF0pJiZjdC5wdXNoKEwpLChtWyRdfHxtW2V0XSkmJmN0LnB1c2goeiksbVt0dF0mJmN0LnB1c2goQiksbVtpdF0mJmN0LnB1c2goRiksbVtudF0mJmN0LnB1c2goViksdz10aGlzLl92YWYud3JpdGVycyxkL28+LjEpe2Zvcih2YXIgZHQ9MDtkPmR0OysrZHQpe3ZhciBodD1jW2R0XTtodC5fZGlydHk9ITE7Zm9yKHZhciBtdD0wO210PGN0Lmxlbmd0aDsrK210KWN0W210XSh0aGlzLHQsdSx3LGh0KX10aGlzLl92YWYuY29tbWl0KEEodCkpfWVsc2V7Zm9yKHZhciBmdD0wO2Q+ZnQ7KytmdCl7dmFyIHB0PWNbZnRdO3B0Ll9kaXJ0eT0hMTtmb3IodmFyIHZ0PTA7dnQ8Y3QubGVuZ3RoOysrdnQpY3RbdnRdKHRoaXMsdCx1LHcscHQpO3RoaXMuX3ZhZi5zdWJDb21taXQoNCpwdC5faW5kZXgsNCl9dGhpcy5fdmFmLmVuZFN1YkNvbW1pdHMoKX10aGlzLl9iaWxsYm9hcmRzVG9VcGRhdGVJbmRleD0wfWlmKGQ+MS41Km8mJihjLmxlbmd0aD1vKSxhKHRoaXMuX3ZhZikmJmEodGhpcy5fdmFmLnZhQnlQdXJwb3NlKSl7dGhpcy5fYm91bmRpbmdWb2x1bWVEaXJ0eSYmKHRoaXMuX2JvdW5kaW5nVm9sdW1lRGlydHk9ITEsZS50cmFuc2Zvcm0odGhpcy5fYmFzZVZvbHVtZSx0aGlzLm1vZGVsTWF0cml4LHRoaXMuX2Jhc2VWb2x1bWVXQykpO3ZhciBndCxfdD1oLklERU5USVRZO2kubW9kZT09PWIuU0NFTkUzRD8oX3Q9dGhpcy5tb2RlbE1hdHJpeCxndD1lLmNsb25lKHRoaXMuX2Jhc2VWb2x1bWVXQyx0aGlzLl9ib3VuZGluZ1ZvbHVtZSkpOmd0PWUuY2xvbmUodGhpcy5fYmFzZVZvbHVtZTJELHRoaXMuX2JvdW5kaW5nVm9sdW1lKSxHKHRoaXMsdCxpLGd0KTt2YXIgeXQsQ3Qsd3QsRXQ7aWYoeC5yZW5kZXIpe3ZhciBidD10aGlzLl9jb2xvckNvbW1hbmRzO2ZvcihhKHRoaXMuX3JzKXx8KHRoaXMuX3JzPXQuY3JlYXRlUmVuZGVyU3RhdGUoe2RlcHRoVGVzdDp7ZW5hYmxlZDohMH0sYmxlbmRpbmc6Qy5BTFBIQV9CTEVORH0pKSwoIWEodGhpcy5fc3ApfHx0aGlzLl9zaGFkZXJSb3RhdGlvbiYmIXRoaXMuX2NvbXBpbGVkU2hhZGVyUm90YXRpb258fHRoaXMuX3NoYWRlclNjYWxlQnlEaXN0YW5jZSYmIXRoaXMuX2NvbXBpbGVkU2hhZGVyU2NhbGVCeURpc3RhbmNlfHx0aGlzLl9zaGFkZXJUcmFuc2x1Y2VuY3lCeURpc3RhbmNlJiYhdGhpcy5fY29tcGlsZWRTaGFkZXJUcmFuc2x1Y2VuY3lCeURpc3RhbmNlfHx0aGlzLl9zaGFkZXJQaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSYmIXRoaXMuX2NvbXBpbGVkU2hhZGVyUGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UpJiYodGhpcy5fc3A9dC5yZXBsYWNlU2hhZGVyUHJvZ3JhbSh0aGlzLl9zcCxmKHtkZWZpbmVzOlt0aGlzLl9zaGFkZXJSb3RhdGlvbj8iUk9UQVRJT04iOiIiLHRoaXMuX3NoYWRlclNjYWxlQnlEaXN0YW5jZT8iRVlFX0RJU1RBTkNFX1NDQUxJTkciOiIiLHRoaXMuX3NoYWRlclRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U/IkVZRV9ESVNUQU5DRV9UUkFOU0xVQ0VOQ1kiOiIiLHRoaXMuX3NoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPyJFWUVfRElTVEFOQ0VfUElYRUxfT0ZGU0VUIjoiIl0sc291cmNlczpbX119KSxnLG90KSx0aGlzLl9jb21waWxlZFNoYWRlclJvdGF0aW9uPXRoaXMuX3NoYWRlclJvdGF0aW9uLHRoaXMuX2NvbXBpbGVkU2hhZGVyU2NhbGVCeURpc3RhbmNlPXRoaXMuX3NoYWRlclNjYWxlQnlEaXN0YW5jZSx0aGlzLl9jb21waWxlZFNoYWRlclRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U9dGhpcy5fc2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZSx0aGlzLl9jb21waWxlZFNoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlPXRoaXMuX3NoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlKSx5dD10aGlzLl92YWYudmFCeVB1cnBvc2Vbc3RdLEN0PXl0Lmxlbmd0aCxidC5sZW5ndGg9Q3QsRXQ9MDtDdD5FdDsrK0V0KXd0PWJ0W0V0XSxhKHd0KXx8KHd0PWJ0W0V0XT1uZXcgcCh7cGFzczpFLk9QQVFVRSxvd25lcjp0aGlzfSkpLHd0LmJvdW5kaW5nVm9sdW1lPWd0LHd0Lm1vZGVsTWF0cml4PV90LHd0LmNvdW50PXl0W0V0XS5pbmRpY2VzQ291bnQsd3Quc2hhZGVyUHJvZ3JhbT10aGlzLl9zcCx3dC51bmlmb3JtTWFwPXRoaXMuX3VuaWZvcm1zLHd0LnZlcnRleEFycmF5PXl0W0V0XS52YSx3dC5yZW5kZXJTdGF0ZT10aGlzLl9ycyx3dC5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZT10aGlzLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lLG4ucHVzaCh3dCl9aWYoTyl7dmFyIFN0PXRoaXMuX3BpY2tDb21tYW5kcztmb3IoKCFhKHRoaXMuX3NwUGljayl8fHRoaXMuX3NoYWRlclJvdGF0aW9uJiYhdGhpcy5fY29tcGlsZWRTaGFkZXJSb3RhdGlvblBpY2t8fHRoaXMuX3NoYWRlclNjYWxlQnlEaXN0YW5jZSYmIXRoaXMuX2NvbXBpbGVkU2hhZGVyU2NhbGVCeURpc3RhbmNlUGlja3x8dGhpcy5fc2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZSYmIXRoaXMuX2NvbXBpbGVkU2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZVBpY2t8fHRoaXMuX3NoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlJiYhdGhpcy5fY29tcGlsZWRTaGFkZXJQaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZVBpY2spJiYodGhpcy5fc3BQaWNrPXQucmVwbGFjZVNoYWRlclByb2dyYW0odGhpcy5fc3BQaWNrLGYoe2RlZmluZXM6WyJSRU5ERVJfRk9SX1BJQ0siLHRoaXMuX3NoYWRlclJvdGF0aW9uPyJST1RBVElPTiI6IiIsdGhpcy5fc2hhZGVyU2NhbGVCeURpc3RhbmNlPyJFWUVfRElTVEFOQ0VfU0NBTElORyI6IiIsdGhpcy5fc2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZT8iRVlFX0RJU1RBTkNFX1RSQU5TTFVDRU5DWSI6IiIsdGhpcy5fc2hhZGVyUGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U/IkVZRV9ESVNUQU5DRV9QSVhFTF9PRkZTRVQiOiIiXSxzb3VyY2VzOltfXX0pLGYoe2RlZmluZXM6WyJSRU5ERVJfRk9SX1BJQ0siXSxzb3VyY2VzOltnXX0pLG90KSx0aGlzLl9jb21waWxlZFNoYWRlclJvdGF0aW9uUGljaz10aGlzLl9zaGFkZXJSb3RhdGlvbix0aGlzLl9jb21waWxlZFNoYWRlclNjYWxlQnlEaXN0YW5jZVBpY2s9dGhpcy5fc2hhZGVyU2NhbGVCeURpc3RhbmNlLHRoaXMuX2NvbXBpbGVkU2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZVBpY2s9dGhpcy5fc2hhZGVyVHJhbnNsdWNlbmN5QnlEaXN0YW5jZSx0aGlzLl9jb21waWxlZFNoYWRlclBpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlUGljaz10aGlzLl9zaGFkZXJQaXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSkseXQ9dGhpcy5fdmFmLnZhQnlQdXJwb3NlW2x0XSxDdD15dC5sZW5ndGgsU3QubGVuZ3RoPUN0LEV0PTA7Q3Q+RXQ7KytFdCl3dD1TdFtFdF0sYSh3dCl8fCh3dD1TdFtFdF09bmV3IHAoe3Bhc3M6RS5PUEFRVUUsb3duZXI6dGhpc30pKSx3dC5ib3VuZGluZ1ZvbHVtZT1ndCx3dC5tb2RlbE1hdHJpeD1fdCx3dC5jb3VudD15dFtFdF0uaW5kaWNlc0NvdW50LHd0LnNoYWRlclByb2dyYW09dGhpcy5fc3BQaWNrLHd0LnVuaWZvcm1NYXA9dGhpcy5fdW5pZm9ybXMsd3QudmVydGV4QXJyYXk9eXRbRXRdLnZhLHd0LnJlbmRlclN0YXRlPXRoaXMuX3JzLG4ucHVzaCh3dCkKfX19fSx1dC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdXQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dHVyZUF0bGFzPXRoaXMuX2Rlc3Ryb3lUZXh0dXJlQXRsYXMmJnRoaXMuX3RleHR1cmVBdGxhcyYmdGhpcy5fdGV4dHVyZUF0bGFzLmRlc3Ryb3koKSx0aGlzLl9zcD10aGlzLl9zcCYmdGhpcy5fc3AuZGVzdHJveSgpLHRoaXMuX3NwUGljaz10aGlzLl9zcFBpY2smJnRoaXMuX3NwUGljay5kZXN0cm95KCksdGhpcy5fdmFmPXRoaXMuX3ZhZiYmdGhpcy5fdmFmLmRlc3Ryb3koKSx0aGlzLl9kZXN0cm95QmlsbGJvYXJkcygpLGwodGhpcyl9LHV0LnByb3RvdHlwZS5fZGVzdHJveUJpbGxib2FyZHM9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fYmlsbGJvYXJkcyx0PWUubGVuZ3RoLGk9MDt0Pmk7KytpKWVbaV0mJmVbaV0uX2Rlc3Ryb3koKX0sdXR9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0JpbGxib2FyZFZpc3VhbGl6ZXIiLFsiLi4vQ29yZS9Bc3NvY2lhdGl2ZUFycmF5IiwiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL05lYXJGYXJTY2FsYXIiLCIuLi9TY2VuZS9CaWxsYm9hcmRDb2xsZWN0aW9uIiwiLi4vU2NlbmUvSG9yaXpvbnRhbE9yaWdpbiIsIi4uL1NjZW5lL1ZlcnRpY2FsT3JpZ2luIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaChlLHQsaSl7dmFyIG49ZS5fYmlsbGJvYXJkVmlzdWFsaXplckluZGV4O2lmKHIobikpe3ZhciBvPXQuZ2V0KG4pO28uc2hvdz0hMSxvLmltYWdlPXZvaWQgMCxlLl9iaWxsYm9hcmRWaXN1YWxpemVySW5kZXg9dm9pZCAwLGkucHVzaChuKX19dmFyIG09bi5XSElURSxmPWkuWkVSTyxwPXQuWkVSTyx2PTEsZz0wLF89aS5aRVJPLHk9dS5DRU5URVIsQz1jLkNFTlRFUix3PW5ldyBpLEU9bmV3IG4sYj1uZXcgaSxTPW5ldyB0LFQ9bmV3IHMseD1uZXcgcyxBPW5ldyBzLFA9ZnVuY3Rpb24odCxpKXt2YXIgbj1uZXcgbDt0LnByaW1pdGl2ZXMuYWRkKG4pLGkuY29sbGVjdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcihQLnByb3RvdHlwZS5fb25Db2xsZWN0aW9uQ2hhbmdlZCx0aGlzKSx0aGlzLl9zY2VuZT10LHRoaXMuX3VudXNlZEluZGV4ZXM9W10sdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbj1uLHRoaXMuX2VudGl0eUNvbGxlY3Rpb249aSx0aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplPW5ldyBlLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZWQoaSxpLmVudGl0aWVzLFtdLFtdKX07cmV0dXJuIFAucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtmb3IodmFyIHQ9dGhpcy5fZW50aXRpZXNUb1Zpc3VhbGl6ZS52YWx1ZXMsaT10aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uLG49dGhpcy5fdW51c2VkSW5kZXhlcyxvPTAsYT10Lmxlbmd0aDthPm87bysrKXt2YXIgcyxsLHU9dFtvXSxjPXUuX2JpbGxib2FyZCxQPXUuX2JpbGxib2FyZFZpc3VhbGl6ZXJJbmRleCxNPXUuaXNBdmFpbGFibGUoZSkmJmQuZ2V0VmFsdWVPckRlZmF1bHQoYy5fc2hvdyxlLCEwKTtpZihNJiYodz1kLmdldFZhbHVlT3JVbmRlZmluZWQodS5fcG9zaXRpb24sZSx3KSxzPWQuZ2V0VmFsdWVPclVuZGVmaW5lZChjLl9pbWFnZSxlKSxNPXIodykmJnIocykpLE0pe2lmKHIoUCkpbD1pLmdldChQKTtlbHNle3ZhciBJPW4ubGVuZ3RoO0k+MD8oUD1uLnBvcCgpLGw9aS5nZXQoUCkpOihQPWkubGVuZ3RoLGw9aS5hZGQoKSksdS5fYmlsbGJvYXJkVmlzdWFsaXplckluZGV4PVAsbC5pZD11LGwuaW1hZ2U9dm9pZCAwfWwuc2hvdz1NLGwuaW1hZ2U9cyxsLnBvc2l0aW9uPXcsbC5jb2xvcj1kLmdldFZhbHVlT3JEZWZhdWx0KGMuX2NvbG9yLGUsbSxFKSxsLmV5ZU9mZnNldD1kLmdldFZhbHVlT3JEZWZhdWx0KGMuX2V5ZU9mZnNldCxlLGYsYiksbC5waXhlbE9mZnNldD1kLmdldFZhbHVlT3JEZWZhdWx0KGMuX3BpeGVsT2Zmc2V0LGUscCxTKSxsLnNjYWxlPWQuZ2V0VmFsdWVPckRlZmF1bHQoYy5fc2NhbGUsZSx2KSxsLnJvdGF0aW9uPWQuZ2V0VmFsdWVPckRlZmF1bHQoYy5fcm90YXRpb24sZSxnKSxsLmFsaWduZWRBeGlzPWQuZ2V0VmFsdWVPckRlZmF1bHQoYy5fYWxpZ25lZEF4aXMsZSxfKSxsLmhvcml6b250YWxPcmlnaW49ZC5nZXRWYWx1ZU9yRGVmYXVsdChjLl9ob3Jpem9udGFsT3JpZ2luLGUseSksbC52ZXJ0aWNhbE9yaWdpbj1kLmdldFZhbHVlT3JEZWZhdWx0KGMuX3ZlcnRpY2FsT3JpZ2luLGUsQyksbC53aWR0aD1kLmdldFZhbHVlT3JVbmRlZmluZWQoYy5fd2lkdGgsZSksbC5oZWlnaHQ9ZC5nZXRWYWx1ZU9yVW5kZWZpbmVkKGMuX2hlaWdodCxlKSxsLnNjYWxlQnlEaXN0YW5jZT1kLmdldFZhbHVlT3JVbmRlZmluZWQoYy5fc2NhbGVCeURpc3RhbmNlLGUsVCksbC50cmFuc2x1Y2VuY3lCeURpc3RhbmNlPWQuZ2V0VmFsdWVPclVuZGVmaW5lZChjLl90cmFuc2x1Y2VuY3lCeURpc3RhbmNlLGUseCksbC5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZT1kLmdldFZhbHVlT3JVbmRlZmluZWQoYy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UsZSxBKX1lbHNlIGgodSxpLG4pfXJldHVybiEwfSxQLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxQLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZW50aXR5Q29sbGVjdGlvbi5jb2xsZWN0aW9uQ2hhbmdlZC5yZW1vdmVFdmVudExpc3RlbmVyKFAucHJvdG90eXBlLl9vbkNvbGxlY3Rpb25DaGFuZ2VkLHRoaXMpO2Zvcih2YXIgZT10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplLnZhbHVlcyx0PWUubGVuZ3RoLGk9MDt0Pmk7aSsrKWVbaV0uX2JpbGxib2FyZFZpc3VhbGl6ZXJJbmRleD12b2lkIDA7cmV0dXJuIHRoaXMuX3NjZW5lLnByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24pLG8odGhpcyl9LFAucHJvdG90eXBlLl9vbkNvbGxlY3Rpb25DaGFuZ2VkPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciBvLGEscz10aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uLGw9dGhpcy5fdW51c2VkSW5kZXhlcyx1PXRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemU7Zm9yKG89dC5sZW5ndGgtMTtvPi0xO28tLSlhPXRbb10scihhLl9iaWxsYm9hcmQpJiZyKGEuX3Bvc2l0aW9uKSYmdS5zZXQoYS5pZCxhKTtmb3Iobz1uLmxlbmd0aC0xO28+LTE7by0tKWE9bltvXSxyKGEuX2JpbGxib2FyZCkmJnIoYS5fcG9zaXRpb24pP3Uuc2V0KGEuaWQsYSk6KGgoYSxzLGwpLHUucmVtb3ZlKGEuaWQpKTtmb3Iobz1pLmxlbmd0aC0xO28+LTE7by0tKWE9aVtvXSxoKGEscyxsKSx1LnJlbW92ZShhLmlkKX0sUH0pLGRlZmluZSgiQ29yZS9Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLFsiLi9Db2xvciIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LG4scixvKXt0PWkodCwxKSxuPWkobiwxKSxyPWkociwxKSxvPWkobywxKSx0aGlzLnZhbHVlPW5ldyBVaW50OEFycmF5KFtlLmZsb2F0VG9CeXRlKHQpLGUuZmxvYXRUb0J5dGUobiksZS5mbG9hdFRvQnl0ZShyKSxlLmZsb2F0VG9CeXRlKG8pXSl9O3JldHVybiByKG8ucHJvdG90eXBlLHtjb21wb25lbnREYXRhdHlwZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHQuVU5TSUdORURfQllURX19LGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6e2dldDpmdW5jdGlvbigpe3JldHVybiA0fX0sbm9ybWFsaXplOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH19fSksby5mcm9tQ29sb3I9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBvKGUucmVkLGUuZ3JlZW4sZS5ibHVlLGUuYWxwaGEpfSxvLnRvVmFsdWU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbih0KT9lLnRvQnl0ZXModCk6bmV3IFVpbnQ4QXJyYXkoZS50b0J5dGVzKCkpfSxvfSksZGVmaW5lKCJDb3JlL0VsbGlwc2VHZW9tZXRyeUxpYnJhcnkiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9NYXRoIiwiLi9NYXRyaXgzIiwiLi9RdWF0ZXJuaW9uIl0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHIodCxyLG8sYyxkLGgsbSxmLHAsdil7dmFyIGc9dCtyO2UubXVsdGlwbHlCeVNjYWxhcihjLE1hdGguY29zKGcpLGEpLGUubXVsdGlwbHlCeVNjYWxhcihvLE1hdGguc2luKGcpLHMpLGUuYWRkKGEscyxhKTt2YXIgXz1NYXRoLmNvcyh0KTtfKj1fO3ZhciB5PU1hdGguc2luKHQpO3kqPXk7dmFyIEM9aC9NYXRoLnNxcnQobSpfK2QqeSksdz1DL2Y7cmV0dXJuIG4uZnJvbUF4aXNBbmdsZShhLHcsbCksaS5mcm9tUXVhdGVybmlvbihsLHUpLGkubXVsdGlwbHlCeVZlY3Rvcih1LHAsdiksZS5ub3JtYWxpemUodix2KSxlLm11bHRpcGx5QnlTY2FsYXIodixmLHYpLHZ9dmFyIG89e30sYT1uZXcgZSxzPW5ldyBlLGw9bmV3IG4sdT1uZXcgaSxjPW5ldyBlLGQ9bmV3IGUsaD1uZXcgZSxtPW5ldyBlO28ucmFpc2VQb3NpdGlvbnNUb0hlaWdodD1mdW5jdGlvbih0LGksbil7Zm9yKHZhciByPWkuZWxsaXBzb2lkLG89aS5oZWlnaHQsYT1pLmV4dHJ1ZGVkSGVpZ2h0LHM9bj8yKih0Lmxlbmd0aC8zKTp0Lmxlbmd0aC8zLGw9bmV3IEZsb2F0NjRBcnJheSgzKnMpLHU9bSxmPXQubGVuZ3RoLHA9bj9mOjAsdj0wO2Y+djt2Kz0zKXt2YXIgZyxfPXYrMSx5PXYrMixDPWUuZnJvbUFycmF5KHQsdixjKTtDPXIuc2NhbGVUb0dlb2RldGljU3VyZmFjZShDLEMpLGc9ZS5jbG9uZShDLGQpLHU9ci5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoQyx1KTt2YXIgdz1lLm11bHRpcGx5QnlTY2FsYXIodSxvLGgpO0M9ZS5hZGQoQyx3LEMpLG4mJih3PWUubXVsdGlwbHlCeVNjYWxhcih1LGEsdyksZz1lLmFkZChnLHcsZyksbFt2K3BdPWcueCxsW18rcF09Zy55LGxbeStwXT1nLnopLGxbdl09Qy54LGxbX109Qy55LGxbeV09Qy56fXJldHVybiBsfTt2YXIgZj1uZXcgZSxwPW5ldyBlLHY9bmV3IGU7cmV0dXJuIG8uY29tcHV0ZUVsbGlwc2VQb3NpdGlvbnM9ZnVuY3Rpb24oaSxuLG8pe3ZhciBhPWkuc2VtaU1pbm9yQXhpcyxzPWkuc2VtaU1ham9yQXhpcyxsPWkucm90YXRpb24sdT1pLmNlbnRlcixtPWkuZ3JhbnVsYXJpdHksZz0yLjMxLF89YSphLHk9cypzLEM9cyphLHc9ZS5tYWduaXR1ZGUodSksRT1lLm5vcm1hbGl6ZSh1LGYpLGI9ZS5jcm9zcyhlLlVOSVRfWix1LHApO2I9ZS5ub3JtYWxpemUoYixiKTt2YXIgUyxULHgsQSxQLE09ZS5jcm9zcyhFLGIsdiksST0xK01hdGguY2VpbCh0LlBJX09WRVJfVFdPL20pLEQ9Zy8oSS0xKSxPPTIqSSooSSsxKSxSPW4/bmV3IEFycmF5KDMqTyk6dm9pZCAwLEw9MCxOPWMsej1kLEI9bz9bXTp2b2lkIDAsRj1vP1tdOnZvaWQgMCxWPXQuUElfT1ZFUl9UV087Zm9yKFM9MDtJPlMmJlY+MDsrK1Mpe2lmKE49cihWLGwsTSxiLF8sQyx5LHcsRSxOKSx6PXIoTWF0aC5QSS1WLGwsTSxiLF8sQyx5LHcsRSx6KSxuKXtmb3IoUltMKytdPU4ueCxSW0wrK109Ti55LFJbTCsrXT1OLnoseD0yKlMrMixUPTE7eC0xPlQ7KytUKUE9VC8oeC0xKSxQPWUubGVycChOLHosQSxoKSxSW0wrK109UC54LFJbTCsrXT1QLnksUltMKytdPVAuejtSW0wrK109ei54LFJbTCsrXT16LnksUltMKytdPXouen1vJiYoRi51bnNoaWZ0KE4ueCxOLnksTi56KSwwIT09UyYmQi5wdXNoKHoueCx6Lnksei56KSksVj10LlBJX09WRVJfVFdPLShTKzEpKkR9Zm9yKEk9UyxTPUk7Uz4wOy0tUyl7aWYoVj10LlBJX09WRVJfVFdPLShTLTEpKkQsTj1yKC1WLGwsTSxiLF8sQyx5LHcsRSxOKSx6PXIoVitNYXRoLlBJLGwsTSxiLF8sQyx5LHcsRSx6KSxuKXtmb3IoUltMKytdPU4ueCxSW0wrK109Ti55LFJbTCsrXT1OLnoseD0yKihTLTEpKzIsVD0xO3gtMT5UOysrVClBPVQvKHgtMSksUD1lLmxlcnAoTix6LEEsaCksUltMKytdPVAueCxSW0wrK109UC55LFJbTCsrXT1QLno7UltMKytdPXoueCxSW0wrK109ei55LFJbTCsrXT16Lnp9byYmKEYudW5zaGlmdChOLngsTi55LE4ueiksMSE9PVMmJkIucHVzaCh6Lngsei55LHoueikpfXZhciBrPXt9O3JldHVybiBuJiYoUi5sZW5ndGghPT1MJiYoTz1MLzMsUi5sZW5ndGg9TCksay5wb3NpdGlvbnM9UixrLm51bVB0cz1JKSxvJiYoay5vdXRlclBvc2l0aW9ucz1GLmNvbmNhdChCKSksa30sb30pLGRlZmluZSgiQ29yZS9HZW9tZXRyeSIsWyIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKHQpe3Q9ZSh0LGUuRU1QVFlfT0JKRUNUKSx0aGlzLmF0dHJpYnV0ZXM9dC5hdHRyaWJ1dGVzLHRoaXMuaW5kaWNlcz10LmluZGljZXMsdGhpcy5wcmltaXRpdmVUeXBlPXQucHJpbWl0aXZlVHlwZSx0aGlzLmJvdW5kaW5nU3BoZXJlPXQuYm91bmRpbmdTcGhlcmV9O3JldHVybiBuLmNvbXB1dGVOdW1iZXJPZlZlcnRpY2VzPWZ1bmN0aW9uKGUpe3ZhciBuPS0xO2Zvcih2YXIgciBpbiBlLmF0dHJpYnV0ZXMpaWYoZS5hdHRyaWJ1dGVzLmhhc093blByb3BlcnR5KHIpJiZ0KGUuYXR0cmlidXRlc1tyXSkmJnQoZS5hdHRyaWJ1dGVzW3JdLnZhbHVlcykpe3ZhciBvPWUuYXR0cmlidXRlc1tyXSxhPW8udmFsdWVzLmxlbmd0aC9vLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGU7aWYobiE9PWEmJi0xIT09bil0aHJvdyBuZXcgaSgiQWxsIGF0dHJpYnV0ZSBsaXN0cyBtdXN0IGhhdmUgdGhlIHNhbWUgbnVtYmVyIG9mIGF0dHJpYnV0ZXMuIik7bj1hfXJldHVybiBufSxufSksZGVmaW5lKCJDb3JlL0dlb21ldHJ5QXR0cmlidXRlIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0KXt0PWUodCxlLkVNUFRZX09CSkVDVCksdGhpcy5jb21wb25lbnREYXRhdHlwZT10LmNvbXBvbmVudERhdGF0eXBlLHRoaXMuY29tcG9uZW50c1BlckF0dHJpYnV0ZT10LmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsdGhpcy5ub3JtYWxpemU9ZSh0Lm5vcm1hbGl6ZSwhMSksdGhpcy52YWx1ZXM9dC52YWx1ZXN9O3JldHVybiB0fSksZGVmaW5lKCJDb3JlL0dlb21ldHJ5QXR0cmlidXRlcyIsWyIuL2RlZmF1bHRWYWx1ZSJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0KXt0PWUodCxlLkVNUFRZX09CSkVDVCksdGhpcy5wb3NpdGlvbj10LnBvc2l0aW9uLHRoaXMubm9ybWFsPXQubm9ybWFsLHRoaXMuc3Q9dC5zdCx0aGlzLmJpbm9ybWFsPXQuYmlub3JtYWwsdGhpcy50YW5nZW50PXQudGFuZ2VudCx0aGlzLmNvbG9yPXQuY29sb3J9O3JldHVybiB0fSksZGVmaW5lKCJDb3JlL0dlb21ldHJ5SW5zdGFuY2UiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9NYXRyaXg0Il0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO3ZhciByPWZ1bmN0aW9uKHQpe3Q9ZSh0LGUuRU1QVFlfT0JKRUNUKSx0aGlzLmdlb21ldHJ5PXQuZ2VvbWV0cnksdGhpcy5tb2RlbE1hdHJpeD1uLmNsb25lKGUodC5tb2RlbE1hdHJpeCxuLklERU5USVRZKSksdGhpcy5pZD10LmlkLHRoaXMucGlja1ByaW1pdGl2ZT10LnBpY2tQcmltaXRpdmUsdGhpcy5hdHRyaWJ1dGVzPWUodC5hdHRyaWJ1dGVzLHt9KX07cmV0dXJuIHJ9KSxkZWZpbmUoIkNvcmUvYmFyeWNlbnRyaWNDb29yZGluYXRlcyIsWyIuL0NhcnRlc2lhbjIiLCIuL0NhcnRlc2lhbjMiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0LGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1uZXcgdCxyPW5ldyB0LG89bmV3IHQsYT1mdW5jdGlvbihhLHMsbCx1LGMpe2koYyl8fChjPW5ldyB0KTt2YXIgZCxoLG0sZixwLHYsZyxfO2kocy56KT8oZD10LnN1YnRyYWN0KGwscyxuKSxoPXQuc3VidHJhY3QodSxzLHIpLG09dC5zdWJ0cmFjdChhLHMsbyksZj10LmRvdChkLGQpLHA9dC5kb3QoZCxoKSx2PXQuZG90KGQsbSksZz10LmRvdChoLGgpLF89dC5kb3QoaCxtKSk6KGQ9ZS5zdWJ0cmFjdChsLHMsbiksaD1lLnN1YnRyYWN0KHUscyxyKSxtPWUuc3VidHJhY3QoYSxzLG8pLGY9ZS5kb3QoZCxkKSxwPWUuZG90KGQsaCksdj1lLmRvdChkLG0pLGc9ZS5kb3QoaCxoKSxfPWUuZG90KGgsbSkpO3ZhciB5PTEvKGYqZy1wKnApO3JldHVybiBjLnk9KGcqdi1wKl8pKnksYy56PShmKl8tcCp2KSp5LGMueD0xLWMueS1jLnosY307cmV0dXJuIGF9KSxkZWZpbmUoIkNvcmUvUXVhZHJhdGljUmVhbFBvbHlub21pYWwiLFsiLi9EZXZlbG9wZXJFcnJvciIsIi4vTWF0aCJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoZSxpLG4pe3ZhciByPWUraTtyZXR1cm4gdC5zaWduKGUpIT09dC5zaWduKGkpJiZNYXRoLmFicyhyL01hdGgubWF4KE1hdGguYWJzKGUpLE1hdGguYWJzKGkpKSk8bj8wOnJ9dmFyIG49e307cmV0dXJuIG4uY29tcHV0ZURpc2NyaW1pbmFudD1mdW5jdGlvbihlLHQsaSl7dmFyIG49dCp0LTQqZSppO3JldHVybiBufSxuLmNvbXB1dGVSZWFsUm9vdHM9ZnVuY3Rpb24oZSxuLHIpe3ZhciBvO2lmKDA9PT1lKXJldHVybiAwPT09bj9bXTpbLXIvbl07aWYoMD09PW4pe2lmKDA9PT1yKXJldHVyblswLDBdO3ZhciBhPU1hdGguYWJzKHIpLHM9TWF0aC5hYnMoZSk7aWYocz5hJiZhL3M8dC5FUFNJTE9OMTQpcmV0dXJuWzAsMF07aWYoYT5zJiZzL2E8dC5FUFNJTE9OMTQpcmV0dXJuW107aWYobz0tci9lLDA+bylyZXR1cm5bXTt2YXIgbD1NYXRoLnNxcnQobyk7cmV0dXJuWy1sLGxdfWlmKDA9PT1yKXJldHVybiBvPS1uL2UsMD5vP1tvLDBdOlswLG9dO3ZhciB1PW4qbixjPTQqZSpyLGQ9aSh1LC1jLHQuRVBTSUxPTjE0KTtpZigwPmQpcmV0dXJuW107dmFyIGg9LS41Kmkobix0LnNpZ24obikqTWF0aC5zcXJ0KGQpLHQuRVBTSUxPTjE0KTtyZXR1cm4gbj4wP1toL2Usci9oXTpbci9oLGgvZV19LG59KSxkZWZpbmUoIkNvcmUvQ3ViaWNSZWFsUG9seW5vbWlhbCIsWyIuL0RldmVsb3BlckVycm9yIiwiLi9RdWFkcmF0aWNSZWFsUG9seW5vbWlhbCJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoZSx0LGksbil7dmFyIHIsbyxhPWUscz10LzMsbD1pLzMsdT1uLGM9YSpsLGQ9cyp1LGg9cypzLG09bCpsLGY9YSpsLWgscD1hKnUtcypsLHY9cyp1LW0sZz00KmYqdi1wKnA7aWYoMD5nKXt2YXIgXyx5LEM7aCpkPj1jKm0/KF89YSx5PWYsQz0tMipzKmYrYSpwKTooXz11LHk9dixDPS11KnArMipsKnYpO3ZhciB3PTA+Qz8tMToxLEU9LXcqTWF0aC5hYnMoXykqTWF0aC5zcXJ0KC1nKTtvPS1DK0U7dmFyIGI9by8yLFM9MD5iPy1NYXRoLnBvdygtYiwxLzMpOk1hdGgucG93KGIsMS8zKSxUPW89PT1FPy1TOi15L1M7cmV0dXJuIHI9MD49eT9TK1Q6LUMvKFMqUytUKlQreSksaCpkPj1jKm0/WyhyLXMpL2FdOlstdS8ocitsKV19dmFyIHg9ZixBPS0yKnMqZithKnAsUD12LE09LXUqcCsyKmwqdixJPU1hdGguc3FydChnKSxEPU1hdGguc3FydCgzKS8yLE89TWF0aC5hYnMoTWF0aC5hdGFuMihhKkksLUEpLzMpO3I9MipNYXRoLnNxcnQoLXgpO3ZhciBSPU1hdGguY29zKE8pO289cipSO3ZhciBMPXIqKC1SLzItRCpNYXRoLnNpbihPKSksTj1vK0w+MipzP28tczpMLXMsej1hLEI9Ti96O089TWF0aC5hYnMoTWF0aC5hdGFuMih1KkksLU0pLzMpLHI9MipNYXRoLnNxcnQoLVApLFI9TWF0aC5jb3MoTyksbz1yKlIsTD1yKigtUi8yLUQqTWF0aC5zaW4oTykpO3ZhciBGPS11LFY9MipsPm8rTD9vK2w6TCtsLGs9Ri9WLFU9eipWLFc9LU4qVi16KkYsRz1OKkYsSD0obCpXLXMqRykvKC1zKlcrbCpVKTtyZXR1cm4gSD49Qj9rPj1CP2s+PUg/W0IsSCxrXTpbQixrLEhdOltrLEIsSF06az49Qj9bSCxCLGtdOms+PUg/W0gsayxCXTpbayxILEJdfXZhciBuPXt9O3JldHVybiBuLmNvbXB1dGVEaXNjcmltaW5hbnQ9ZnVuY3Rpb24oZSx0LGksbil7dmFyIHI9ZSplLG89dCp0LGE9aSppLHM9bipuLGw9MTgqZSp0KmkqbitvKmEtMjcqcipzLTQqKGUqYSppK28qdCpuKTtyZXR1cm4gbH0sbi5jb21wdXRlUmVhbFJvb3RzPWZ1bmN0aW9uKGUsbixyLG8pe3ZhciBhLHM7aWYoMD09PWUpcmV0dXJuIHQuY29tcHV0ZVJlYWxSb290cyhuLHIsbyk7aWYoMD09PW4pe2lmKDA9PT1yKXtpZigwPT09bylyZXR1cm5bMCwwLDBdO3M9LW8vZTt2YXIgbD0wPnM/LU1hdGgucG93KC1zLDEvMyk6TWF0aC5wb3cocywxLzMpO3JldHVybltsLGwsbF19cmV0dXJuIDA9PT1vPyhhPXQuY29tcHV0ZVJlYWxSb290cyhlLDAsciksMD09PWEuTGVuZ3RoP1swXTpbYVswXSwwLGFbMV1dKTppKGUsMCxyLG8pfXJldHVybiAwPT09cj8wPT09bz8ocz0tbi9lLDA+cz9bcywwLDBdOlswLDAsc10pOmkoZSxuLDAsbyk6MD09PW8/KGE9dC5jb21wdXRlUmVhbFJvb3RzKGUsbixyKSwwPT09YS5sZW5ndGg/WzBdOmFbMV08PTA/W2FbMF0sYVsxXSwwXTphWzBdPj0wP1swLGFbMF0sYVsxXV06W2FbMF0sMCxhWzFdXSk6aShlLG4scixvKX0sbn0pLGRlZmluZSgiQ29yZS9RdWFydGljUmVhbFBvbHlub21pYWwiLFsiLi9DdWJpY1JlYWxQb2x5bm9taWFsIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vTWF0aCIsIi4vUXVhZHJhdGljUmVhbFBvbHlub21pYWwiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcih0LHIsbyxhKXt2YXIgcz10KnQsbD1yLTMqcy84LHU9by1yKnQvMitzKnQvOCxjPWEtbyp0LzQrcipzLzE2LTMqcypzLzI1NixkPWUuY29tcHV0ZVJlYWxSb290cygxLDIqbCxsKmwtNCpjLC11KnUpO2lmKGQubGVuZ3RoPjApe3ZhciBoPS10LzQsbT1kW2QubGVuZ3RoLTFdO2lmKE1hdGguYWJzKG0pPGkuRVBTSUxPTjE0KXt2YXIgZj1uLmNvbXB1dGVSZWFsUm9vdHMoMSxsLGMpO2lmKDI9PT1mLmxlbmd0aCl7dmFyIHAsdj1mWzBdLGc9ZlsxXTtpZih2Pj0wJiZnPj0wKXt2YXIgXz1NYXRoLnNxcnQodikseT1NYXRoLnNxcnQoZyk7cmV0dXJuW2gteSxoLV8saCtfLGgreV19aWYodj49MCYmMD5nKXJldHVybiBwPU1hdGguc3FydCh2KSxbaC1wLGgrcF07aWYoMD52JiZnPj0wKXJldHVybiBwPU1hdGguc3FydChnKSxbaC1wLGgrcF19cmV0dXJuW119aWYobT4wKXt2YXIgQz1NYXRoLnNxcnQobSksdz0obCttLXUvQykvMixFPShsK20rdS9DKS8yLGI9bi5jb21wdXRlUmVhbFJvb3RzKDEsQyx3KSxTPW4uY29tcHV0ZVJlYWxSb290cygxLC1DLEUpO3JldHVybiAwIT09Yi5sZW5ndGg/KGJbMF0rPWgsYlsxXSs9aCwwIT09Uy5sZW5ndGg/KFNbMF0rPWgsU1sxXSs9aCxiWzFdPD1TWzBdP1tiWzBdLGJbMV0sU1swXSxTWzFdXTpTWzFdPD1iWzBdP1tTWzBdLFNbMV0sYlswXSxiWzFdXTpiWzBdPj1TWzBdJiZiWzFdPD1TWzFdP1tTWzBdLGJbMF0sYlsxXSxTWzFdXTpTWzBdPj1iWzBdJiZTWzFdPD1iWzFdP1tiWzBdLFNbMF0sU1sxXSxiWzFdXTpiWzBdPlNbMF0mJmJbMF08U1sxXT9bU1swXSxiWzBdLFNbMV0sYlsxXV06W2JbMF0sU1swXSxiWzFdLFNbMV1dKTpiKTowIT09Uy5sZW5ndGg/KFNbMF0rPWgsU1sxXSs9aCxTKTpbXX19cmV0dXJuW119ZnVuY3Rpb24gbyh0LHIsbyxhKXt2YXIgcz1vKm8sbD1yKnIsdT10KnQsYz0tMipyLGQ9byp0K2wtNCphLGg9dSphLW8qcip0K3MsbT1lLmNvbXB1dGVSZWFsUm9vdHMoMSxjLGQsaCk7aWYobS5sZW5ndGg+MCl7dmFyIGYscCx2PW1bMF0sZz1yLXYsXz1nKmcseT10LzIsQz1nLzIsdz1fLTQqYSxFPV8rNCpNYXRoLmFicyhhKSxiPXUtNCp2LFM9dSs0Kk1hdGguYWJzKHYpO2lmKDA+dnx8YipFPncqUyl7dmFyIFQ9TWF0aC5zcXJ0KGIpO2Y9VC8yLHA9MD09PVQ/MDoodCpDLW8pL1R9ZWxzZXt2YXIgeD1NYXRoLnNxcnQodyk7Zj0wPT09eD8wOih0KkMtbykveCxwPXgvMn12YXIgQSxQOzA9PT15JiYwPT09Zj8oQT0wLFA9MCk6aS5zaWduKHkpPT09aS5zaWduKGYpPyhBPXkrZixQPXYvQSk6KFA9eS1mLEE9di9QKTt2YXIgTSxJOzA9PT1DJiYwPT09cD8oTT0wLEk9MCk6aS5zaWduKEMpPT09aS5zaWduKHApPyhNPUMrcCxJPWEvTSk6KEk9Qy1wLE09YS9JKTt2YXIgRD1uLmNvbXB1dGVSZWFsUm9vdHMoMSxBLE0pLE89bi5jb21wdXRlUmVhbFJvb3RzKDEsUCxJKTtpZigwIT09RC5sZW5ndGgpcmV0dXJuIDAhPT1PLmxlbmd0aD9EWzFdPD1PWzBdP1tEWzBdLERbMV0sT1swXSxPWzFdXTpPWzFdPD1EWzBdP1tPWzBdLE9bMV0sRFswXSxEWzFdXTpEWzBdPj1PWzBdJiZEWzFdPD1PWzFdP1tPWzBdLERbMF0sRFsxXSxPWzFdXTpPWzBdPj1EWzBdJiZPWzFdPD1EWzFdP1tEWzBdLE9bMF0sT1sxXSxEWzFdXTpEWzBdPk9bMF0mJkRbMF08T1sxXT9bT1swXSxEWzBdLE9bMV0sRFsxXV06W0RbMF0sT1swXSxEWzFdLE9bMV1dOkQ7aWYoMCE9PU8ubGVuZ3RoKXJldHVybiBPfXJldHVybltdfXZhciBhPXt9O3JldHVybiBhLmNvbXB1dGVEaXNjcmltaW5hbnQ9ZnVuY3Rpb24oZSx0LGksbixyKXt2YXIgbz1lKmUsYT1vKmUscz10KnQsbD1zKnQsdT1pKmksYz11KmksZD1uKm4saD1kKm4sbT1yKnIsZj1tKnIscD1zKnUqZC00KmwqaC00KmUqYypkKzE4KmUqdCppKmgtMjcqbypkKmQrMjU2KmEqZityKigxOCpsKmkqbi00KnMqYysxNiplKnUqdS04MCplKnQqdSpuLTYqZSpzKmQrMTQ0Km8qaSpkKSttKigxNDQqZSpzKmktMjcqcypzLTEyOCpvKnUtMTkyKm8qdCpuKTtyZXR1cm4gcH0sYS5jb21wdXRlUmVhbFJvb3RzPWZ1bmN0aW9uKHQsbixhLHMsbCl7aWYoTWF0aC5hYnModCk8aS5FUFNJTE9OMTUpcmV0dXJuIGUuY29tcHV0ZVJlYWxSb290cyhuLGEscyxsKTt2YXIgdT1uL3QsYz1hL3QsZD1zL3QsaD1sL3QsbT0wPnU/MTowO3N3aXRjaChtKz0wPmM/bSsxOm0sbSs9MD5kP20rMTptLG0rPTA+aD9tKzE6bSl7Y2FzZSAwOnJldHVybiByKHUsYyxkLGgpO2Nhc2UgMTpyZXR1cm4gbyh1LGMsZCxoKTtjYXNlIDI6cmV0dXJuIG8odSxjLGQsaCk7Y2FzZSAzOnJldHVybiByKHUsYyxkLGgpO2Nhc2UgNDpyZXR1cm4gcih1LGMsZCxoKTtjYXNlIDU6cmV0dXJuIG8odSxjLGQsaCk7Y2FzZSA2OnJldHVybiByKHUsYyxkLGgpO2Nhc2UgNzpyZXR1cm4gcih1LGMsZCxoKTtjYXNlIDg6cmV0dXJuIG8odSxjLGQsaCk7Y2FzZSA5OnJldHVybiByKHUsYyxkLGgpO2Nhc2UgMTA6cmV0dXJuIHIodSxjLGQsaCk7Y2FzZSAxMTpyZXR1cm4gbyh1LGMsZCxoKTtjYXNlIDEyOnJldHVybiByKHUsYyxkLGgpO2Nhc2UgMTM6cmV0dXJuIHIodSxjLGQsaCk7Y2FzZSAxNDpyZXR1cm4gcih1LGMsZCxoKTtjYXNlIDE1OnJldHVybiByKHUsYyxkLGgpO2RlZmF1bHQ6cmV0dXJuIHZvaWQgMH19LGF9KSxkZWZpbmUoIkNvcmUvUmF5IixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24oaSxuKXtuPWUuY2xvbmUodChuLGUuWkVSTykpLGUuZXF1YWxzKG4sZS5aRVJPKXx8ZS5ub3JtYWxpemUobixuKSx0aGlzLm9yaWdpbj1lLmNsb25lKHQoaSxlLlpFUk8pKSx0aGlzLmRpcmVjdGlvbj1ufTtyZXR1cm4gbi5nZXRQb2ludD1mdW5jdGlvbih0LG4scil7cmV0dXJuIGkocil8fChyPW5ldyBlKSxyPWUubXVsdGlwbHlCeVNjYWxhcih0LmRpcmVjdGlvbixuLHIpLGUuYWRkKHQub3JpZ2luLHIscil9LG59KSxkZWZpbmUoIkNvcmUvSW50ZXJzZWN0aW9uVGVzdHMiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9DYXJ0b2dyYXBoaWMiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL01hdGgiLCIuL01hdHJpeDMiLCIuL1F1YWRyYXRpY1JlYWxQb2x5bm9taWFsIiwiLi9RdWFydGljUmVhbFBvbHlub21pYWwiLCIuL1JheSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBjKHQsbixyLGEscyl7cz1pKHMsITEpO3ZhciBsLHUsYyxkLGgsbT10Lm9yaWdpbixmPXQuZGlyZWN0aW9uLHA9ZS5zdWJ0cmFjdChyLG4sdiksdz1lLnN1YnRyYWN0KGEsbixnKSxFPWUuY3Jvc3MoZix3LF8pLGI9ZS5kb3QocCxFKTtpZihzKXtpZihiPG8uRVBTSUxPTjYpcmV0dXJuIHZvaWQgMDtpZihsPWUuc3VidHJhY3QobSxuLHkpLGM9ZS5kb3QobCxFKSwwPmN8fGM+YilyZXR1cm4gdm9pZCAwO2lmKHU9ZS5jcm9zcyhsLHAsQyksZD1lLmRvdChmLHUpLDA+ZHx8YytkPmIpcmV0dXJuIHZvaWQgMDtoPWUuZG90KHcsdSkvYn1lbHNle2lmKE1hdGguYWJzKGIpPG8uRVBTSUxPTjYpcmV0dXJuIHZvaWQgMDt2YXIgUz0xL2I7aWYobD1lLnN1YnRyYWN0KG0sbix5KSxjPWUuZG90KGwsRSkqUywwPmN8fGM+MSlyZXR1cm4gdm9pZCAwO2lmKHU9ZS5jcm9zcyhsLHAsQyksZD1lLmRvdChmLHUpKlMsMD5kfHxjK2Q+MSlyZXR1cm4gdm9pZCAwO2g9ZS5kb3Qodyx1KSpTfXJldHVybiBofWZ1bmN0aW9uIGQoZSx0LGksbil7dmFyIHI9dCp0LTQqZSppO2lmKDA+cilyZXR1cm4gdm9pZCAwO2lmKHI+MCl7dmFyIG89MS8oMiplKSxhPU1hdGguc3FydChyKSxzPSgtdCthKSpvLGw9KC10LWEpKm87cmV0dXJuIGw+cz8obi5yb290MD1zLG4ucm9vdDE9bCk6KG4ucm9vdDA9bCxuLnJvb3QxPXMpLG59dmFyIHU9LXQvKDIqZSk7cmV0dXJuIDA9PT11P3ZvaWQgMDoobi5yb290MD1uLnJvb3QxPXUsbil9ZnVuY3Rpb24gaCh0LGkscil7bihyKXx8KHI9e30pO3ZhciBvPXQub3JpZ2luLGE9dC5kaXJlY3Rpb24scz1pLmNlbnRlcixsPWkucmFkaXVzKmkucmFkaXVzLHU9ZS5zdWJ0cmFjdChvLHMsXyksYz1lLmRvdChhLGEpLGg9MiplLmRvdChhLHUpLG09ZS5tYWduaXR1ZGVTcXVhcmVkKHUpLWwsZj1kKGMsaCxtLEUpO3JldHVybiBuKGYpPyhyLnN0YXJ0PWYucm9vdDAsci5zdG9wPWYucm9vdDEscik6dm9pZCAwfWZ1bmN0aW9uIG0oZSx0LGkpe3ZhciBuPWUrdDtyZXR1cm4gby5zaWduKGUpIT09by5zaWduKHQpJiZNYXRoLmFicyhuL01hdGgubWF4KE1hdGguYWJzKGUpLE1hdGguYWJzKHQpKSk8aT8wOm59ZnVuY3Rpb24gZih0LGksbixyLHUpe3ZhciBjLGQ9cipyLGg9dSp1LGY9KHRbYS5DT0xVTU4xUk9XMV0tdFthLkNPTFVNTjJST1cyXSkqaCxwPXUqKHIqbSh0W2EuQ09MVU1OMVJPVzBdLHRbYS5DT0xVTU4wUk9XMV0sby5FUFNJTE9OMTUpK2kueSksdj10W2EuQ09MVU1OMFJPVzBdKmQrdFthLkNPTFVNTjJST1cyXSpoK3IqaS54K24sZz1oKm0odFthLkNPTFVNTjJST1cxXSx0W2EuQ09MVU1OMVJPVzJdLG8uRVBTSUxPTjE1KSxfPXUqKHIqbSh0W2EuQ09MVU1OMlJPVzBdLHRbYS5DT0xVTU4wUk9XMl0pK2kueikseT1bXTtpZigwPT09XyYmMD09PWcpe2lmKGM9cy5jb21wdXRlUmVhbFJvb3RzKGYscCx2KSwwPT09Yy5sZW5ndGgpcmV0dXJuIHk7dmFyIEM9Y1swXSx3PU1hdGguc3FydChNYXRoLm1heCgxLUMqQywwKSk7aWYoeS5wdXNoKG5ldyBlKHIsdSpDLHUqLXcpKSx5LnB1c2gobmV3IGUocix1KkMsdSp3KSksMj09PWMubGVuZ3RoKXt2YXIgRT1jWzFdLGI9TWF0aC5zcXJ0KE1hdGgubWF4KDEtRSpFLDApKTt5LnB1c2gobmV3IGUocix1KkUsdSotYikpLHkucHVzaChuZXcgZShyLHUqRSx1KmIpKX1yZXR1cm4geX12YXIgUz1fKl8sVD1nKmcseD1mKmYsQT1fKmcsUD14K1QsTT0yKihwKmYrQSksST0yKnYqZitwKnAtVCtTLEQ9MioodipwLUEpLE89dip2LVM7aWYoMD09PVAmJjA9PT1NJiYwPT09SSYmMD09PUQpcmV0dXJuIHk7Yz1sLmNvbXB1dGVSZWFsUm9vdHMoUCxNLEksRCxPKTt2YXIgUj1jLmxlbmd0aDtpZigwPT09UilyZXR1cm4geTtmb3IodmFyIEw9MDtSPkw7KytMKXt2YXIgTix6PWNbTF0sQj16KnosRj1NYXRoLm1heCgxLUIsMCksVj1NYXRoLnNxcnQoRik7Tj1vLnNpZ24oZik9PT1vLnNpZ24odik/bShmKkIrdixwKnosby5FUFNJTE9OMTIpOm8uc2lnbih2KT09PW8uc2lnbihwKnopP20oZipCLHAqeit2LG8uRVBTSUxPTjEyKTptKGYqQitwKnosdixvLkVQU0lMT04xMik7dmFyIGs9bShnKnosXyxvLkVQU0lMT04xNSksVT1OKms7MD5VP3kucHVzaChuZXcgZShyLHUqeix1KlYpKTpVPjA/eS5wdXNoKG5ldyBlKHIsdSp6LHUqLVYpKTowIT09Vj8oeS5wdXNoKG5ldyBlKHIsdSp6LHUqLVYpKSx5LnB1c2gobmV3IGUocix1KnosdSpWKSksKytMKTp5LnB1c2gobmV3IGUocix1KnosdSpWKSl9cmV0dXJuIHl9dmFyIHA9e307cC5yYXlQbGFuZT1mdW5jdGlvbih0LGkscil7bihyKXx8KHI9bmV3IGUpO3ZhciBhPXQub3JpZ2luLHM9dC5kaXJlY3Rpb24sbD1pLm5vcm1hbCx1PWUuZG90KGwscyk7aWYoTWF0aC5hYnModSk8by5FUFNJTE9OMTUpcmV0dXJuIHZvaWQgMDt2YXIgYz0oLWkuZGlzdGFuY2UtZS5kb3QobCxhKSkvdTtyZXR1cm4gMD5jP3ZvaWQgMDoocj1lLm11bHRpcGx5QnlTY2FsYXIocyxjLHIpLGUuYWRkKGEscixyKSl9O3ZhciB2PW5ldyBlLGc9bmV3IGUsXz1uZXcgZSx5PW5ldyBlLEM9bmV3IGU7cC5yYXlUcmlhbmdsZT1mdW5jdGlvbih0LGkscixvLGEscyl7dmFyIGw9Yyh0LGkscixvLGEpO3JldHVybiFuKGwpfHwwPmw/dm9pZCAwOihuKHMpfHwocz1uZXcgZSksZS5tdWx0aXBseUJ5U2NhbGFyKHQuZGlyZWN0aW9uLGwscyksZS5hZGQodC5vcmlnaW4scyxzKSl9O3ZhciB3PW5ldyB1O3AubGluZVNlZ21lbnRUcmlhbmdsZT1mdW5jdGlvbih0LGkscixvLGEscyxsKXt2YXIgdT13O2UuY2xvbmUodCx1Lm9yaWdpbiksZS5zdWJ0cmFjdChpLHQsdS5kaXJlY3Rpb24pLGUubm9ybWFsaXplKHUuZGlyZWN0aW9uLHUuZGlyZWN0aW9uKTt2YXIgZD1jKHUscixvLGEscyk7cmV0dXJuIW4oZCl8fDA+ZHx8ZD5lLmRpc3RhbmNlKHQsaSk/dm9pZCAwOihuKGwpfHwobD1uZXcgZSksZS5tdWx0aXBseUJ5U2NhbGFyKHUuZGlyZWN0aW9uLGQsbCksZS5hZGQodS5vcmlnaW4sbCxsKSl9O3ZhciBFPXtyb290MDowLHJvb3QxOjB9O3AucmF5U3BoZXJlPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gaT1oKGUsdCxpKSwhbihpKXx8aS5zdG9wPDA/dm9pZCAwOihpLnN0YXJ0PU1hdGgubWF4KGkuc3RhcnQsMCksaSl9O3ZhciBiPW5ldyB1O3AubGluZVNlZ21lbnRTcGhlcmU9ZnVuY3Rpb24odCxpLHIsbyl7dmFyIGE9YjtlLmNsb25lKHQsYS5vcmlnaW4pO3ZhciBzPWUuc3VidHJhY3QoaSx0LGEuZGlyZWN0aW9uKSxsPWUubWFnbml0dWRlKHMpO3JldHVybiBlLm5vcm1hbGl6ZShzLHMpLG89aChhLHIsbyksIW4obyl8fG8uc3RvcDwwfHxvLnN0YXJ0Pmw/dm9pZCAwOihvLnN0YXJ0PU1hdGgubWF4KG8uc3RhcnQsMCksby5zdG9wPU1hdGgubWluKG8uc3RvcCxsKSxvKX07dmFyIFM9bmV3IGUsVD1uZXcgZTtwLnJheUVsbGlwc29pZD1mdW5jdGlvbih0LGkpe3ZhciBuLHIsbyxhLHMsbD1pLm9uZU92ZXJSYWRpaSx1PWUubXVsdGlwbHlDb21wb25lbnRzKGwsdC5vcmlnaW4sUyksYz1lLm11bHRpcGx5Q29tcG9uZW50cyhsLHQuZGlyZWN0aW9uLFQpLGQ9ZS5tYWduaXR1ZGVTcXVhcmVkKHUpLGg9ZS5kb3QodSxjKTtpZihkPjEpe2lmKGg+PTApcmV0dXJuIHZvaWQgMDt2YXIgbT1oKmg7aWYobj1kLTEscj1lLm1hZ25pdHVkZVNxdWFyZWQoYyksbz1yKm4sbz5tKXJldHVybiB2b2lkIDA7aWYobT5vKXthPWgqaC1vLHM9LWgrTWF0aC5zcXJ0KGEpO3ZhciBmPXMvcixwPW4vcztyZXR1cm4gcD5mP3tzdGFydDpmLHN0b3A6cH06e3N0YXJ0OnAsc3RvcDpmfX12YXIgdj1NYXRoLnNxcnQobi9yKTtyZXR1cm57c3RhcnQ6dixzdG9wOnZ9fXJldHVybiAxPmQ/KG49ZC0xLHI9ZS5tYWduaXR1ZGVTcXVhcmVkKGMpLG89cipuLGE9aCpoLW8scz0taCtNYXRoLnNxcnQoYSkse3N0YXJ0OjAsc3RvcDpzL3J9KTowPmg/KHI9ZS5tYWduaXR1ZGVTcXVhcmVkKGMpLHtzdGFydDowLHN0b3A6LWgvcn0pOnZvaWQgMH07dmFyIHg9bmV3IGUsQT1uZXcgZSxQPW5ldyBlLE09bmV3IGUsST1uZXcgZSxEPW5ldyBhLE89bmV3IGEsUj1uZXcgYSxMPW5ldyBhLE49bmV3IGEsej1uZXcgYSxCPW5ldyBhLEY9bmV3IGUsVj1uZXcgZSxrPW5ldyB0O3AuZ3JhemluZ0FsdGl0dWRlTG9jYXRpb249ZnVuY3Rpb24odCxpKXt2YXIgcj10Lm9yaWdpbixzPXQuZGlyZWN0aW9uLGw9aS5nZW9kZXRpY1N1cmZhY2VOb3JtYWwocik7aWYoZS5kb3QocyxsKT49MClyZXR1cm4gcjt2YXIgdT1uKHRoaXMucmF5RWxsaXBzb2lkKHQsaSkpLGM9aS50cmFuc2Zvcm1Qb3NpdGlvblRvU2NhbGVkU3BhY2UocyksZD1lLm5vcm1hbGl6ZShjLHgpLGg9ZS5tb3N0T3J0aG9nb25hbEF4aXMoYyxNKSxtPWUubm9ybWFsaXplKGUuY3Jvc3MoaCxkLEEpLEEpLHA9ZS5ub3JtYWxpemUoZS5jcm9zcyhkLG0sUCksUCksdj1EO3ZbMF09ZC54LHZbMV09ZC55LHZbMl09ZC56LHZbM109bS54LHZbNF09bS55LHZbNV09bS56LHZbNl09cC54LHZbN109cC55LHZbOF09cC56O3ZhciBnPWEudHJhbnNwb3NlKHYsTyksXz1hLmZyb21TY2FsZShpLnJhZGlpLFIpLHk9YS5mcm9tU2NhbGUoaS5vbmVPdmVyUmFkaWksTCksQz1OO0NbMF09MCxDWzFdPS1zLnosQ1syXT1zLnksQ1szXT1zLnosQ1s0XT0wLENbNV09LXMueCxDWzZdPS1zLnksQ1s3XT1zLngsQ1s4XT0wO3ZhciB3LEUsYj1hLm11bHRpcGx5KGEubXVsdGlwbHkoZyx5LHopLEMseiksUz1hLm11bHRpcGx5KGEubXVsdGlwbHkoYixfLEIpLHYsQiksVD1hLm11bHRpcGx5QnlWZWN0b3IoYixyLEkpLFU9ZihTLGUubmVnYXRlKFQseCksMCwwLDEpLFc9VS5sZW5ndGg7aWYoVz4wKXtmb3IodmFyIEc9ZS5jbG9uZShlLlpFUk8sViksSD1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkscT0wO1c+cTsrK3Epe3c9YS5tdWx0aXBseUJ5VmVjdG9yKF8sYS5tdWx0aXBseUJ5VmVjdG9yKHYsVVtxXSxGKSxGKTt2YXIgaj1lLm5vcm1hbGl6ZShlLnN1YnRyYWN0KHcscixNKSxNKSxZPWUuZG90KGoscyk7WT5IJiYoSD1ZLEc9ZS5jbG9uZSh3LEcpKX12YXIgWD1pLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKEcsayk7cmV0dXJuIEg9by5jbGFtcChILDAsMSksRT1lLm1hZ25pdHVkZShlLnN1YnRyYWN0KEcscixNKSkqTWF0aC5zcXJ0KDEtSCpIKSxFPXU/LUU6RSxYLmhlaWdodD1FLGkuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oWCl9cmV0dXJuIHZvaWQgMH07dmFyIFU9bmV3IGU7cmV0dXJuIHAubGluZVNlZ21lbnRQbGFuZT1mdW5jdGlvbih0LGkscixhKXtuKGEpfHwoYT1uZXcgZSk7dmFyIHM9ZS5zdWJ0cmFjdChpLHQsVSksbD1yLm5vcm1hbCx1PWUuZG90KGwscyk7aWYoTWF0aC5hYnModSk8by5FUFNJTE9ONilyZXR1cm4gdm9pZCAwO3ZhciBjPWUuZG90KGwsdCksZD0tKHIuZGlzdGFuY2UrYykvdTtyZXR1cm4gMD5kfHxkPjE/dm9pZCAwOihlLm11bHRpcGx5QnlTY2FsYXIocyxkLGEpLGUuYWRkKHQsYSxhKSxhKX0scC50cmlhbmdsZVBsYW5lSW50ZXJzZWN0aW9uPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvPXIubm9ybWFsLGE9ci5kaXN0YW5jZSxzPWUuZG90KG8sdCkrYTwwLGw9ZS5kb3QobyxpKSthPDAsdT1lLmRvdChvLG4pK2E8MCxjPTA7Yys9cz8xOjAsYys9bD8xOjAsYys9dT8xOjA7dmFyIGQsaDtpZigoMT09PWN8fDI9PT1jKSYmKGQ9bmV3IGUsaD1uZXcgZSksMT09PWMpe2lmKHMpcmV0dXJuIHAubGluZVNlZ21lbnRQbGFuZSh0LGkscixkKSxwLmxpbmVTZWdtZW50UGxhbmUodCxuLHIsaCkse3Bvc2l0aW9uczpbdCxpLG4sZCxoXSxpbmRpY2VzOlswLDMsNCwxLDIsNCwxLDQsM119O2lmKGwpcmV0dXJuIHAubGluZVNlZ21lbnRQbGFuZShpLG4scixkKSxwLmxpbmVTZWdtZW50UGxhbmUoaSx0LHIsaCkse3Bvc2l0aW9uczpbdCxpLG4sZCxoXSxpbmRpY2VzOlsxLDMsNCwyLDAsNCwyLDQsM119O2lmKHUpcmV0dXJuIHAubGluZVNlZ21lbnRQbGFuZShuLHQscixkKSxwLmxpbmVTZWdtZW50UGxhbmUobixpLHIsaCkse3Bvc2l0aW9uczpbdCxpLG4sZCxoXSxpbmRpY2VzOlsyLDMsNCwwLDEsNCwwLDQsM119fWVsc2UgaWYoMj09PWMpe2lmKCFzKXJldHVybiBwLmxpbmVTZWdtZW50UGxhbmUoaSx0LHIsZCkscC5saW5lU2VnbWVudFBsYW5lKG4sdCxyLGgpLHtwb3NpdGlvbnM6W3QsaSxuLGQsaF0saW5kaWNlczpbMSwyLDQsMSw0LDMsMCwzLDRdfTtpZighbClyZXR1cm4gcC5saW5lU2VnbWVudFBsYW5lKG4saSxyLGQpLHAubGluZVNlZ21lbnRQbGFuZSh0LGkscixoKSx7cG9zaXRpb25zOlt0LGksbixkLGhdLGluZGljZXM6WzIsMCw0LDIsNCwzLDEsMyw0XX07aWYoIXUpcmV0dXJuIHAubGluZVNlZ21lbnRQbGFuZSh0LG4scixkKSxwLmxpbmVTZWdtZW50UGxhbmUoaSxuLHIsaCkse3Bvc2l0aW9uczpbdCxpLG4sZCxoXSxpbmRpY2VzOlswLDEsNCwwLDQsMywyLDMsNF19fXJldHVybiB2b2lkIDB9LHB9KSxkZWZpbmUoIkNvcmUvUGxhbmUiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKHQsaSl7dGhpcy5ub3JtYWw9ZS5jbG9uZSh0KSx0aGlzLmRpc3RhbmNlPWl9O3JldHVybiBpLmZyb21Qb2ludE5vcm1hbD1mdW5jdGlvbihuLHIsbyl7dmFyIGE9LWUuZG90KHIsbik7cmV0dXJuIHQobyk/KGUuY2xvbmUocixvLm5vcm1hbCksby5kaXN0YW5jZT1hLG8pOm5ldyBpKHIsYSl9LGkuZ2V0UG9pbnREaXN0YW5jZT1mdW5jdGlvbih0LGkpe3JldHVybiBlLmRvdCh0Lm5vcm1hbCxpKSt0LmRpc3RhbmNlfSxpfSksZGVmaW5lKCJDb3JlL1RpcHNpZnkiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9e307cmV0dXJuIGkuY2FsY3VsYXRlQUNNUj1mdW5jdGlvbihpKXtpPWUoaSxlLkVNUFRZX09CSkVDVCk7dmFyIG49aS5pbmRpY2VzLHI9aS5tYXhpbXVtSW5kZXgsbz1lKGkuY2FjaGVTaXplLDI0KSxhPW4ubGVuZ3RoO2lmKCF0KHIpKXtyPTA7Zm9yKHZhciBzPTAsbD1uW3NdO2E+czspbD5yJiYocj1sKSwrK3MsbD1uW3NdfWZvcih2YXIgdT1bXSxjPTA7cisxPmM7YysrKXVbY109MDtmb3IodmFyIGQ9bysxLGg9MDthPmg7KytoKWQtdVtuW2hdXT5vJiYodVtuW2hdXT1kLCsrZCk7cmV0dXJuKGQtbysxKS8oYS8zKX0saS50aXBzaWZ5PWZ1bmN0aW9uKGkpe2Z1bmN0aW9uIG4oZSx0LGksbil7Zm9yKDt0Lmxlbmd0aD49MTspe3ZhciByPXRbdC5sZW5ndGgtMV07aWYodC5zcGxpY2UodC5sZW5ndGgtMSwxKSxlW3JdLm51bUxpdmVUcmlhbmdsZXM+MClyZXR1cm4gcn1mb3IoO24+bzspe2lmKGVbb10ubnVtTGl2ZVRyaWFuZ2xlcz4wKXJldHVybisrbyxvLTE7KytvfXJldHVybi0xfWZ1bmN0aW9uIHIoZSx0LGkscixvLGEscyl7Zm9yKHZhciBsLHU9LTEsYz0tMSxkPTA7ZDxpLmxlbmd0aDspe3ZhciBoPWlbZF07cltoXS5udW1MaXZlVHJpYW5nbGVzJiYobD0wLG8tcltoXS50aW1lU3RhbXArMipyW2hdLm51bUxpdmVUcmlhbmdsZXM8PXQmJihsPW8tcltoXS50aW1lU3RhbXApLChsPmN8fC0xPT09YykmJihjPWwsdT1oKSksKytkfXJldHVybi0xPT09dT9uKHIsYSxlLHMpOnV9aT1lKGksZS5FTVBUWV9PQkpFQ1QpO3ZhciBvLGE9aS5pbmRpY2VzLHM9aS5tYXhpbXVtSW5kZXgsbD1lKGkuY2FjaGVTaXplLDI0KSx1PWEubGVuZ3RoLGM9MCxkPTAsaD1hW2RdLG09dTtpZih0KHMpKWM9cysxO2Vsc2V7Zm9yKDttPmQ7KWg+YyYmKGM9aCksKytkLGg9YVtkXTtpZigtMT09PWMpcmV0dXJuIDA7KytjfWZvcih2YXIgZj1bXSxwPTA7Yz5wO3ArKylmW3BdPXtudW1MaXZlVHJpYW5nbGVzOjAsdGltZVN0YW1wOjAsdmVydGV4VHJpYW5nbGVzOltdfTtkPTA7Zm9yKHZhciB2PTA7bT5kOylmW2FbZF1dLnZlcnRleFRyaWFuZ2xlcy5wdXNoKHYpLCsrZlthW2RdXS5udW1MaXZlVHJpYW5nbGVzLGZbYVtkKzFdXS52ZXJ0ZXhUcmlhbmdsZXMucHVzaCh2KSwrK2ZbYVtkKzFdXS5udW1MaXZlVHJpYW5nbGVzLGZbYVtkKzJdXS52ZXJ0ZXhUcmlhbmdsZXMucHVzaCh2KSwrK2ZbYVtkKzJdXS5udW1MaXZlVHJpYW5nbGVzLCsrdixkKz0zO3ZhciBnPTAsXz1sKzE7bz0xO3ZhciB5LEMsdz1bXSxFPVtdLGI9MCxTPVtdLFQ9dS8zLHg9W107Zm9yKHA9MDtUPnA7cCsrKXhbcF09ITE7Zm9yKHZhciBBLFA7LTEhPT1nOyl7dz1bXSxDPWZbZ10sUD1DLnZlcnRleFRyaWFuZ2xlcy5sZW5ndGg7Zm9yKHZhciBNPTA7UD5NOysrTSlpZih2PUMudmVydGV4VHJpYW5nbGVzW01dLCF4W3ZdKXt4W3ZdPSEwLGQ9dit2K3Y7Zm9yKHZhciBJPTA7Mz5JOysrSSlBPWFbZF0sdy5wdXNoKEEpLEUucHVzaChBKSxTW2JdPUEsKytiLHk9ZltBXSwtLXkubnVtTGl2ZVRyaWFuZ2xlcyxfLXkudGltZVN0YW1wPmwmJih5LnRpbWVTdGFtcD1fLCsrXyksKytkfWc9cihhLGwsdyxmLF8sRSxjKX1yZXR1cm4gU30saX0pLGRlZmluZSgiQ29yZS9HZW9tZXRyeVBpcGVsaW5lIixbIi4vYmFyeWNlbnRyaWNDb29yZGluYXRlcyIsIi4vQm91bmRpbmdTcGhlcmUiLCIuL0NhcnRlc2lhbjIiLCIuL0NhcnRlc2lhbjMiLCIuL0NhcnRlc2lhbjQiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VuY29kZWRDYXJ0ZXNpYW4zIiwiLi9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4vR2VvbWV0cnkiLCIuL0dlb21ldHJ5QXR0cmlidXRlIiwiLi9JbmRleERhdGF0eXBlIiwiLi9JbnRlcnNlY3QiLCIuL0ludGVyc2VjdGlvblRlc3RzIiwiLi9NYXRoIiwiLi9NYXRyaXgzIiwiLi9NYXRyaXg0IiwiLi9QbGFuZSIsIi4vUHJpbWl0aXZlVHlwZSIsIi4vVGlwc2lmeSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoZSx0LGksbixyKXtlW3QrK109aSxlW3QrK109bixlW3QrK109bixlW3QrK109cixlW3QrK109cixlW3RdPWl9ZnVuY3Rpb24gUyhlKXtmb3IodmFyIHQ9ZS5sZW5ndGgsaT02Kih0LzMpLG49Zi5jcmVhdGVUeXBlZEFycmF5KHQsaSkscj0wLG89MDt0Pm87bys9MyxyKz02KWIobixyLGVbb10sZVtvKzFdLGVbbysyXSk7cmV0dXJuIG59ZnVuY3Rpb24gVChlKXt2YXIgdD1lLmxlbmd0aDtpZih0Pj0zKXt2YXIgaT02Kih0LTIpLG49Zi5jcmVhdGVUeXBlZEFycmF5KHQsaSk7YihuLDAsZVswXSxlWzFdLGVbMl0pO2Zvcih2YXIgcj02LG89Mzt0Pm87KytvLHIrPTYpYihuLHIsZVtvLTFdLGVbb10sZVtvLTJdKTtyZXR1cm4gbn1yZXR1cm4gbmV3IFVpbnQxNkFycmF5fWZ1bmN0aW9uIHgoZSl7aWYoZS5sZW5ndGg+MCl7Zm9yKHZhciB0PWUubGVuZ3RoLTEsaT02Kih0LTEpLG49Zi5jcmVhdGVUeXBlZEFycmF5KHQsaSkscj1lWzBdLG89MCxhPTE7dD5hOysrYSxvKz02KWIobixvLHIsZVthXSxlW2ErMV0pO3JldHVybiBufXJldHVybiBuZXcgVWludDE2QXJyYXl9ZnVuY3Rpb24gQShlKXt2YXIgdD17fTtmb3IodmFyIGkgaW4gZSlpZihlLmhhc093blByb3BlcnR5KGkpJiZsKGVbaV0pJiZsKGVbaV0udmFsdWVzKSl7dmFyIG49ZVtpXTt0W2ldPW5ldyBtKHtjb21wb25lbnREYXRhdHlwZTpuLmNvbXBvbmVudERhdGF0eXBlLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6bi5jb21wb25lbnRzUGVyQXR0cmlidXRlLG5vcm1hbGl6ZTpuLm5vcm1hbGl6ZSx2YWx1ZXM6W119KX1yZXR1cm4gdH1mdW5jdGlvbiBQKGUsdCxpKXtmb3IodmFyIG4gaW4gdClpZih0Lmhhc093blByb3BlcnR5KG4pJiZsKHRbbl0pJiZsKHRbbl0udmFsdWVzKSlmb3IodmFyIHI9dFtuXSxvPTA7bzxyLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGU7KytvKWVbbl0udmFsdWVzLnB1c2goci52YWx1ZXNbaSpyLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUrb10pfWZ1bmN0aW9uIE0oZSx0KXtpZihsKHQpKWZvcih2YXIgaT10LnZhbHVlcyxyPWkubGVuZ3RoLG89MDtyPm87bys9MyluLnVucGFjayhpLG8sWikseS5tdWx0aXBseUJ5UG9pbnQoZSxaLFopLG4ucGFjayhaLGksbyl9ZnVuY3Rpb24gSShlLHQpe2lmKGwodCkpZm9yKHZhciBpPXQudmFsdWVzLHI9aS5sZW5ndGgsbz0wO3I+bztvKz0zKW4udW5wYWNrKGksbyxaKSxfLm11bHRpcGx5QnlWZWN0b3IoZSxaLFopLFo9bi5ub3JtYWxpemUoWixaKSxuLnBhY2soWixpLG8pfWZ1bmN0aW9uIEQoZSl7dmFyIHQsaT1lLmxlbmd0aCxuPXt9LHI9ZVswXS5nZW9tZXRyeS5hdHRyaWJ1dGVzO2Zvcih0IGluIHIpaWYoci5oYXNPd25Qcm9wZXJ0eSh0KSYmbChyW3RdKSYmbChyW3RdLnZhbHVlcykpe2Zvcih2YXIgbz1yW3RdLHM9by52YWx1ZXMubGVuZ3RoLHU9ITAsYz0xO2k+YzsrK2Mpe3ZhciBkPWVbY10uZ2VvbWV0cnkuYXR0cmlidXRlc1t0XTtpZighbChkKXx8by5jb21wb25lbnREYXRhdHlwZSE9PWQuY29tcG9uZW50RGF0YXR5cGV8fG8uY29tcG9uZW50c1BlckF0dHJpYnV0ZSE9PWQuY29tcG9uZW50c1BlckF0dHJpYnV0ZXx8by5ub3JtYWxpemUhPT1kLm5vcm1hbGl6ZSl7dT0hMTticmVha31zKz1kLnZhbHVlcy5sZW5ndGh9dSYmKG5bdF09bmV3IG0oe2NvbXBvbmVudERhdGF0eXBlOm8uY29tcG9uZW50RGF0YXR5cGUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpvLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsbm9ybWFsaXplOm8ubm9ybWFsaXplLHZhbHVlczphLmNyZWF0ZVR5cGVkQXJyYXkoby5jb21wb25lbnREYXRhdHlwZSxzKX0pKX1yZXR1cm4gbn1mdW5jdGlvbiBPKGUpe2lmKGwoZS5pbmRpY2VzKSlyZXR1cm4gZTtmb3IodmFyIHQ9aC5jb21wdXRlTnVtYmVyT2ZWZXJ0aWNlcyhlKSxpPWYuY3JlYXRlVHlwZWRBcnJheSh0LHQpLG49MDt0Pm47KytuKWlbbl09bjtyZXR1cm4gZS5pbmRpY2VzPWksZX1mdW5jdGlvbiBSKGUpe3ZhciB0PWguY29tcHV0ZU51bWJlck9mVmVydGljZXMoZSksaT1mLmNyZWF0ZVR5cGVkQXJyYXkodCwzKih0LTIpKTtpWzBdPTEsaVsxXT0wLGlbMl09Mjtmb3IodmFyIG49MyxyPTM7dD5yOysrcilpW24rK109ci0xLGlbbisrXT0wLGlbbisrXT1yO3JldHVybiBlLmluZGljZXM9aSxlLnByaW1pdGl2ZVR5cGU9dy5UUklBTkdMRVMsZX1mdW5jdGlvbiBMKGUpe3ZhciB0PWguY29tcHV0ZU51bWJlck9mVmVydGljZXMoZSksaT1mLmNyZWF0ZVR5cGVkQXJyYXkodCwzKih0LTIpKTtpWzBdPTAsaVsxXT0xLGlbMl09Mix0PjMmJihpWzNdPTAsaVs0XT0yLGlbNV09Myk7Zm9yKHZhciBuPTYscj0zO3QtMT5yO3IrPTIpaVtuKytdPXIsaVtuKytdPXItMSxpW24rK109cisxLHQ+cisyJiYoaVtuKytdPXIsaVtuKytdPXIrMSxpW24rK109cisyKTtyZXR1cm4gZS5pbmRpY2VzPWksZS5wcmltaXRpdmVUeXBlPXcuVFJJQU5HTEVTLGV9ZnVuY3Rpb24gTihlKXtpZihsKGUuaW5kaWNlcykpcmV0dXJuIGU7Zm9yKHZhciB0PWguY29tcHV0ZU51bWJlck9mVmVydGljZXMoZSksaT1mLmNyZWF0ZVR5cGVkQXJyYXkodCx0KSxuPTA7dD5uOysrbilpW25dPW47cmV0dXJuIGUuaW5kaWNlcz1pLGV9ZnVuY3Rpb24geihlKXt2YXIgdD1oLmNvbXB1dGVOdW1iZXJPZlZlcnRpY2VzKGUpLGk9Zi5jcmVhdGVUeXBlZEFycmF5KHQsMioodC0xKSk7aVswXT0wLGlbMV09MTtmb3IodmFyIG49MixyPTI7dD5yOysrcilpW24rK109ci0xLGlbbisrXT1yO3JldHVybiBlLmluZGljZXM9aSxlLnByaW1pdGl2ZVR5cGU9dy5MSU5FUyxlfWZ1bmN0aW9uIEIoZSl7dmFyIHQ9aC5jb21wdXRlTnVtYmVyT2ZWZXJ0aWNlcyhlKSxpPWYuY3JlYXRlVHlwZWRBcnJheSh0LDIqdCk7aVswXT0wLGlbMV09MTtmb3IodmFyIG49MixyPTI7dD5yOysrcilpW24rK109ci0xLGlbbisrXT1yO3JldHVybiBpW24rK109dC0xLGlbbl09MCxlLmluZGljZXM9aSxlLnByaW1pdGl2ZVR5cGU9dy5MSU5FUyxlfWZ1bmN0aW9uIEYoZSl7c3dpdGNoKGUucHJpbWl0aXZlVHlwZSl7Y2FzZSB3LlRSSUFOR0xFX0ZBTjpyZXR1cm4gUihlKTtjYXNlIHcuVFJJQU5HTEVfU1RSSVA6cmV0dXJuIEwoZSk7Y2FzZSB3LlRSSUFOR0xFUzpyZXR1cm4gTyhlKTtjYXNlIHcuTElORV9TVFJJUDpyZXR1cm4geihlKTtjYXNlIHcuTElORV9MT09QOnJldHVybiBCKGUpO2Nhc2Ugdy5MSU5FUzpyZXR1cm4gTihlKX1yZXR1cm4gZX1mdW5jdGlvbiBWKGUsdCl7TWF0aC5hYnMoZS55KTxnLkVQU0lMT04xMSYmKGUueT10Py1nLkVQU0lMT04xMTpnLkVQU0lMT04xMSl9ZnVuY3Rpb24gayhlLHQsaSxyKXtuLmFkZChlLG4ubXVsdGlwbHlCeVNjYWxhcihuLnN1YnRyYWN0KHQsZSxhdCksZS55LyhlLnktdC55KSxhdCksaSksbi5jbG9uZShpLHIpLFYoaSwhMCksVihyLCExKX1mdW5jdGlvbiBVKGUsdCxpKXtpZihlLng+PTB8fHQueD49MHx8aS54Pj0wKXJldHVybiB2b2lkIDA7dmFyIG49ZS55PDAscj10Lnk8MCxvPWkueTwwO1YoZSxuKSxWKHQsciksVihpLG8pO3ZhciBhPTA7YSs9bj8xOjAsYSs9cj8xOjAsYSs9bz8xOjA7dmFyIHM9ZHQuaW5kaWNlczsxPT09YT8oc1sxXT0zLHNbMl09NCxzWzVdPTYsc1s3XT02LHNbOF09NSxuPyhrKGUsdCxzdCx1dCksayhlLGksbHQsY3QpLHNbMF09MCxzWzNdPTEsc1s0XT0yLHNbNl09MSk6cj8oayh0LGksc3QsdXQpLGsodCxlLGx0LGN0KSxzWzBdPTEsc1szXT0yLHNbNF09MCxzWzZdPTIpOm8mJihrKGksZSxzdCx1dCksayhpLHQsbHQsY3QpLHNbMF09MixzWzNdPTAsc1s0XT0xLHNbNl09MCkpOjI9PT1hJiYoc1syXT00LHNbNF09NCxzWzVdPTMsc1s3XT01LHNbOF09NixuP3I/b3x8KGsoaSxlLHN0LHV0KSxrKGksdCxsdCxjdCksc1swXT0wLHNbMV09MSxzWzNdPTAsc1s2XT0yKTooayh0LGksc3QsdXQpLGsodCxlLGx0LGN0KSxzWzBdPTIsc1sxXT0wLHNbM109MixzWzZdPTEpOihrKGUsdCxzdCx1dCksayhlLGksbHQsY3QpLHNbMF09MSxzWzFdPTIsc1szXT0xLHNbNl09MCkpO3ZhciBsPWR0LnBvc2l0aW9ucztyZXR1cm4gbFswXT1lLGxbMV09dCxsWzJdPWksZHQubGVuZ3RoPTMsKDE9PT1hfHwyPT09YSkmJihsWzNdPXN0LGxbNF09bHQsbFs1XT11dCxsWzZdPWN0LGR0Lmxlbmd0aD03KSxkdH1mdW5jdGlvbiBXKHQscixvLGEscyx1LGMsZCl7aWYobChzKXx8bCh1KXx8bChjKXx8bChkKSl7dmFyIGgsbSxmLHAsdixnLF8seSxDLHcsRSxiLFM9YS5wb3NpdGlvbnMsVD1TWzBdLHg9U1sxXSxBPVNbMl0sUD1wdCxNPXZ0LEk9Z3QsRD1odCxPPW10LFI9ZnQ7bChzKSYmKGg9bi5mcm9tQXJyYXkocywzKnQpLG09bi5mcm9tQXJyYXkocywzKnIpLGY9bi5mcm9tQXJyYXkocywzKm8pKSxsKHUpJiYocD1uLmZyb21BcnJheSh1LDMqdCksdj1uLmZyb21BcnJheSh1LDMqciksZz1uLmZyb21BcnJheSh1LDMqbykpLGwoYykmJihfPW4uZnJvbUFycmF5KGMsMyp0KSx5PW4uZnJvbUFycmF5KGMsMypyKSxDPW4uZnJvbUFycmF5KGMsMypvKSksbChkKSYmKHc9aS5mcm9tQXJyYXkoZCwyKnQpLEU9aS5mcm9tQXJyYXkoZCwyKnIpLGI9aS5mcm9tQXJyYXkoZCwyKm8pKTtmb3IodmFyIEw9MztMPFMubGVuZ3RoOysrTCl7dmFyIE49U1tMXSx6PWUoTixULHgsQSk7aWYobChzKSl7UD1uLm11bHRpcGx5QnlTY2FsYXIoaCx6LngsUCksTT1uLm11bHRpcGx5QnlTY2FsYXIobSx6LnksTSksST1uLm11bHRpcGx5QnlTY2FsYXIoZix6LnosSSk7dmFyIEI9bi5hZGQoUCxNLF90KTtuLmFkZChCLEksQiksbi5ub3JtYWxpemUoQixCKSxzLnB1c2goQi54LEIueSxCLnopfWlmKGwodSkpe1A9bi5tdWx0aXBseUJ5U2NhbGFyKHAsei54LFApLE09bi5tdWx0aXBseUJ5U2NhbGFyKHYsei55LE0pLEk9bi5tdWx0aXBseUJ5U2NhbGFyKGcsei56LEkpO3ZhciBGPW4uYWRkKFAsTSxfdCk7bi5hZGQoRixJLEYpLG4ubm9ybWFsaXplKEYsRiksdS5wdXNoKEYueCxGLnksRi56KX1pZihsKGMpKXtQPW4ubXVsdGlwbHlCeVNjYWxhcihfLHoueCxQKSxNPW4ubXVsdGlwbHlCeVNjYWxhcih5LHoueSxNKSxJPW4ubXVsdGlwbHlCeVNjYWxhcihDLHoueixJKTt2YXIgVj1uLmFkZChQLE0sX3QpO24uYWRkKFYsSSxWKSxuLm5vcm1hbGl6ZShWLFYpLGMucHVzaChWLngsVi55LFYueil9aWYobChkKSl7RD1pLm11bHRpcGx5QnlTY2FsYXIodyx6LngsRCksTz1pLm11bHRpcGx5QnlTY2FsYXIoRSx6LnksTyksUj1pLm11bHRpcGx5QnlTY2FsYXIoYix6LnosUik7dmFyIGs9aS5hZGQoRCxPLEQpO2kuYWRkKGssUixrKSxkLnB1c2goay54LGsueSl9fX19ZnVuY3Rpb24gRyhlKXtmb3IodmFyIHQ9ZS5hdHRyaWJ1dGVzLGk9dC5wb3NpdGlvbi52YWx1ZXMscj1sKHQubm9ybWFsKT90Lm5vcm1hbC52YWx1ZXM6dm9pZCAwLG89bCh0LmJpbm9ybWFsKT90LmJpbm9ybWFsLnZhbHVlczp2b2lkIDAscz1sKHQudGFuZ2VudCk/dC50YW5nZW50LnZhbHVlczp2b2lkIDAsdT1sKHQuc3QpP3Quc3QudmFsdWVzOnZvaWQgMCxjPWUuaW5kaWNlcyxkPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGksMCksbT1sKHIpP0FycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHIsMCk6dm9pZCAwLHA9bChvKT9BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChvLDApOnZvaWQgMCx2PWwocyk/QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocywwKTp2b2lkIDAsZz1sKHUpP0FycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHUsMCk6dm9pZCAwLF89W10seT1jLmxlbmd0aCxDPTA7eT5DO0MrPTMpe3ZhciB3PWNbQ10sRT1jW0MrMV0sYj1jW0MrMl0sUz1uLmZyb21BcnJheShpLDMqdyksVD1uLmZyb21BcnJheShpLDMqRSkseD1uLmZyb21BcnJheShpLDMqYiksQT1VKFMsVCx4KTtpZihsKEEpKWlmKGRbMyp3KzFdPUEucG9zaXRpb25zWzBdLnksZFszKkUrMV09QS5wb3NpdGlvbnNbMV0ueSxkWzMqYisxXT1BLnBvc2l0aW9uc1syXS55LEEubGVuZ3RoPjMpe2Zvcih2YXIgUD1kLmxlbmd0aC8zLE09MDtNPEEuaW5kaWNlcy5sZW5ndGg7KytNKXt2YXIgST1BLmluZGljZXNbTV07Mz5JP18ucHVzaChjW0MrSV0pOl8ucHVzaChJLTMrUCl9Zm9yKHZhciBEPTM7RDxBLnBvc2l0aW9ucy5sZW5ndGg7KytEKXt2YXIgTz1BLnBvc2l0aW9uc1tEXTtkLnB1c2goTy54LE8ueSxPLnopfVcodyxFLGIsQSxtLHAsdixnKX1lbHNlIF8ucHVzaCh3LEUsYik7ZWxzZSBfLnB1c2godyxFLGIpfWUuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXM9bmV3IEZsb2F0NjRBcnJheShkKSxsKG0pJiYodC5ub3JtYWwudmFsdWVzPWEuY3JlYXRlVHlwZWRBcnJheSh0Lm5vcm1hbC5jb21wb25lbnREYXRhdHlwZSxtKSksbChwKSYmKHQuYmlub3JtYWwudmFsdWVzPWEuY3JlYXRlVHlwZWRBcnJheSh0LmJpbm9ybWFsLmNvbXBvbmVudERhdGF0eXBlLHApKSxsKHYpJiYodC50YW5nZW50LnZhbHVlcz1hLmNyZWF0ZVR5cGVkQXJyYXkodC50YW5nZW50LmNvbXBvbmVudERhdGF0eXBlLHYpKSxsKGcpJiYodC5zdC52YWx1ZXM9YS5jcmVhdGVUeXBlZEFycmF5KHQuc3QuY29tcG9uZW50RGF0YXR5cGUsZykpO3ZhciBSPWguY29tcHV0ZU51bWJlck9mVmVydGljZXMoZSk7ZS5pbmRpY2VzPWYuY3JlYXRlVHlwZWRBcnJheShSLF8pfWZ1bmN0aW9uIEgoZSl7Zm9yKHZhciB0PWUuYXR0cmlidXRlcyxpPXQucG9zaXRpb24udmFsdWVzLHI9ZS5pbmRpY2VzLG89QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoaSwwKSxhPVtdLHM9Qy5mcm9tUG9pbnROb3JtYWwobi5aRVJPLG4uVU5JVF9ZKSx1PXIubGVuZ3RoLGM9MDt1PmM7Yys9Mil7dmFyIGQ9cltjXSxtPXJbYysxXSxwPW4uZnJvbUFycmF5KGksMypkKSxfPW4uZnJvbUFycmF5KGksMyptKTtpZihNYXRoLmFicyhwLnkpPGcuRVBTSUxPTjYmJihwLnk9cC55PDA/LWcuRVBTSUxPTjY6Zy5FUFNJTE9ONixvWzMqZCsxXT1wLnkpLE1hdGguYWJzKF8ueSk8Zy5FUFNJTE9ONiYmKF8ueT1fLnk8MD8tZy5FUFNJTE9ONjpnLkVQU0lMT042LG9bMyptKzFdPV8ueSksYS5wdXNoKGQpLHAueDwwfHxfLng8MCl7dmFyIHk9di5saW5lU2VnbWVudFBsYW5lKHAsXyxzKTtpZihsKHkpKXt2YXIgdz1uLm11bHRpcGx5QnlTY2FsYXIobi5VTklUX1ksNSpnLkVQU0lMT045LHl0KTtwLnk8MCYmbi5uZWdhdGUodyx3KTt2YXIgRT1vLmxlbmd0aC8zO2EucHVzaChFLEUrMSk7dmFyIGI9bi5hZGQoeSx3LEN0KTtvLnB1c2goYi54LGIueSxiLnopLG4ubmVnYXRlKHcsdyksbi5hZGQoeSx3LGIpLG8ucHVzaChiLngsYi55LGIueil9fWEucHVzaChtKX1lLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzPW5ldyBGbG9hdDY0QXJyYXkobyk7dmFyIFM9aC5jb21wdXRlTnVtYmVyT2ZWZXJ0aWNlcyhlKTtlLmluZGljZXM9Zi5jcmVhdGVUeXBlZEFycmF5KFMsYSl9dmFyIHE9e307cS50b1dpcmVmcmFtZT1mdW5jdGlvbihlKXt2YXIgdD1lLmluZGljZXM7aWYobCh0KSl7c3dpdGNoKGUucHJpbWl0aXZlVHlwZSl7Y2FzZSB3LlRSSUFOR0xFUzplLmluZGljZXM9Uyh0KTticmVhaztjYXNlIHcuVFJJQU5HTEVfU1RSSVA6ZS5pbmRpY2VzPVQodCk7YnJlYWs7Y2FzZSB3LlRSSUFOR0xFX0ZBTjplLmluZGljZXM9eCh0KTticmVhaztkZWZhdWx0OnRocm93IG5ldyB1KCJnZW9tZXRyeS5wcmltaXRpdmVUeXBlIG11c3QgYmUgVFJJQU5HTEVTLCBUUklBTkdMRV9TVFJJUCwgb3IgVFJJQU5HTEVfRkFOLiIpfWUucHJpbWl0aXZlVHlwZT13LkxJTkVTfXJldHVybiBlfSxxLmNyZWF0ZUxpbmVTZWdtZW50c0ZvclZlY3RvcnM9ZnVuY3Rpb24oZSxpLG4pe2k9cyhpLCJub3JtYWwiKSxuPXMobiwxZTQpO2Zvcih2YXIgcj1lLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzLG89ZS5hdHRyaWJ1dGVzW2ldLnZhbHVlcyx1PXIubGVuZ3RoLGM9bmV3IEZsb2F0NjRBcnJheSgyKnUpLGQ9MCxmPTA7dT5mO2YrPTMpY1tkKytdPXJbZl0sY1tkKytdPXJbZisxXSxjW2QrK109cltmKzJdLGNbZCsrXT1yW2ZdK29bZl0qbixjW2QrK109cltmKzFdK29bZisxXSpuLGNbZCsrXT1yW2YrMl0rb1tmKzJdKm47dmFyIHAsdj1lLmJvdW5kaW5nU3BoZXJlO3JldHVybiBsKHYpJiYocD1uZXcgdCh2LmNlbnRlcix2LnJhZGl1cytuKSksbmV3IGgoe2F0dHJpYnV0ZXM6e3Bvc2l0aW9uOm5ldyBtKHtjb21wb25lbnREYXRhdHlwZTphLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOmN9KX0scHJpbWl0aXZlVHlwZTp3LkxJTkVTLGJvdW5kaW5nU3BoZXJlOnB9KX0scS5jcmVhdGVBdHRyaWJ1dGVMb2NhdGlvbnM9ZnVuY3Rpb24oZSl7dmFyIHQsaT1bInBvc2l0aW9uIiwicG9zaXRpb25IaWdoIiwicG9zaXRpb25Mb3ciLCJwb3NpdGlvbjNESGlnaCIsInBvc2l0aW9uM0RMb3ciLCJwb3NpdGlvbjJESGlnaCIsInBvc2l0aW9uMkRMb3ciLCJwaWNrQ29sb3IiLCJub3JtYWwiLCJzdCIsImJpbm9ybWFsIiwidGFuZ2VudCJdLG49ZS5hdHRyaWJ1dGVzLHI9e30sbz0wLGE9aS5sZW5ndGg7Zm9yKHQ9MDthPnQ7Kyt0KXt2YXIgcz1pW3RdO2wobltzXSkmJihyW3NdPW8rKyl9Zm9yKHZhciB1IGluIG4pbi5oYXNPd25Qcm9wZXJ0eSh1KSYmIWwoclt1XSkmJihyW3VdPW8rKyk7cmV0dXJuIHJ9LHEucmVvcmRlckZvclByZVZlcnRleENhY2hlPWZ1bmN0aW9uKGUpe3ZhciB0PWguY29tcHV0ZU51bWJlck9mVmVydGljZXMoZSksaT1lLmluZGljZXM7aWYobChpKSl7Zm9yKHZhciBuPW5ldyBJbnQzMkFycmF5KHQpLHI9MDt0PnI7cisrKW5bcl09LTE7Zm9yKHZhciBvLHM9aSx1PXMubGVuZ3RoLGM9Zi5jcmVhdGVUeXBlZEFycmF5KHQsdSksZD0wLG09MCxwPTA7dT5kOylvPW5bc1tkXV0sLTEhPT1vP2NbbV09bzoobz1zW2RdLG5bb109cCxjW21dPXAsKytwKSwrK2QsKyttO2UuaW5kaWNlcz1jO3ZhciB2PWUuYXR0cmlidXRlcztmb3IodmFyIGcgaW4gdilpZih2Lmhhc093blByb3BlcnR5KGcpJiZsKHZbZ10pJiZsKHZbZ10udmFsdWVzKSl7Zm9yKHZhciBfPXZbZ10seT1fLnZhbHVlcyxDPTAsdz1fLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsRT1hLmNyZWF0ZVR5cGVkQXJyYXkoXy5jb21wb25lbnREYXRhdHlwZSxwKncpO3Q+Qzspe3ZhciBiPW5bQ107aWYoLTEhPT1iKWZvcihyPTA7dz5yO3IrKylFW3cqYityXT15W3cqQytyXTsrK0N9Xy52YWx1ZXM9RX19cmV0dXJuIGV9LHEucmVvcmRlckZvclBvc3RWZXJ0ZXhDYWNoZT1mdW5jdGlvbihlLHQpe3ZhciBpPWUuaW5kaWNlcztpZihlLnByaW1pdGl2ZVR5cGU9PT13LlRSSUFOR0xFUyYmbChpKSl7Zm9yKHZhciBuPWkubGVuZ3RoLHI9MCxvPTA7bj5vO28rKylpW29dPnImJihyPWlbb10pOwplLmluZGljZXM9RS50aXBzaWZ5KHtpbmRpY2VzOmksbWF4aW11bUluZGV4OnIsY2FjaGVTaXplOnR9KX1yZXR1cm4gZX0scS5maXRUb1Vuc2lnbmVkU2hvcnRJbmRpY2VzPWZ1bmN0aW9uKGUpe3ZhciB0PVtdLGk9aC5jb21wdXRlTnVtYmVyT2ZWZXJ0aWNlcyhlKTtpZihsKGUuaW5kaWNlcykmJmk+Zy5TSVhUWV9GT1VSX0tJTE9CWVRFUyl7dmFyIG4scj1bXSxvPVtdLGE9MCxzPUEoZS5hdHRyaWJ1dGVzKSx1PWUuaW5kaWNlcyxjPXUubGVuZ3RoO2UucHJpbWl0aXZlVHlwZT09PXcuVFJJQU5HTEVTP249MzplLnByaW1pdGl2ZVR5cGU9PT13LkxJTkVTP249MjplLnByaW1pdGl2ZVR5cGU9PT13LlBPSU5UUyYmKG49MSk7Zm9yKHZhciBkPTA7Yz5kO2QrPW4pe2Zvcih2YXIgbT0wO24+bTsrK20pe3ZhciBmPXVbZCttXSxwPXJbZl07bChwKXx8KHA9YSsrLHJbZl09cCxQKHMsZS5hdHRyaWJ1dGVzLGYpKSxvLnB1c2gocCl9YStuPmcuU0lYVFlfRk9VUl9LSUxPQllURVMmJih0LnB1c2gobmV3IGgoe2F0dHJpYnV0ZXM6cyxpbmRpY2VzOm8scHJpbWl0aXZlVHlwZTplLnByaW1pdGl2ZVR5cGUsYm91bmRpbmdTcGhlcmU6ZS5ib3VuZGluZ1NwaGVyZX0pKSxyPVtdLG89W10sYT0wLHM9QShlLmF0dHJpYnV0ZXMpKX0wIT09by5sZW5ndGgmJnQucHVzaChuZXcgaCh7YXR0cmlidXRlczpzLGluZGljZXM6byxwcmltaXRpdmVUeXBlOmUucHJpbWl0aXZlVHlwZSxib3VuZGluZ1NwaGVyZTplLmJvdW5kaW5nU3BoZXJlfSkpfWVsc2UgdC5wdXNoKGUpO3JldHVybiB0fTt2YXIgaj1uZXcgbixZPW5ldyBvO3EucHJvamVjdFRvMkQ9ZnVuY3Rpb24oZSx0LGkscixvKXt2YXIgcz1lLmF0dHJpYnV0ZXNbdF07bz1sKG8pP286bmV3IGQ7Zm9yKHZhciBjPW8uZWxsaXBzb2lkLGg9cy52YWx1ZXMsZj1uZXcgRmxvYXQ2NEFycmF5KGgubGVuZ3RoKSxwPTAsdj0wO3Y8aC5sZW5ndGg7dis9Myl7dmFyIGc9bi5mcm9tQXJyYXkoaCx2LGopLF89Yy5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhnLFkpO2lmKCFsKF8pKXRocm93IG5ldyB1KCJDb3VsZCBub3QgcHJvamVjdCBwb2ludCAoIitnLngrIiwgIitnLnkrIiwgIitnLnorIikgdG8gMkQuIik7dmFyIHk9by5wcm9qZWN0KF8saik7ZltwKytdPXkueCxmW3ArK109eS55LGZbcCsrXT15Lnp9cmV0dXJuIGUuYXR0cmlidXRlc1tpXT1zLGUuYXR0cmlidXRlc1tyXT1uZXcgbSh7Y29tcG9uZW50RGF0YXR5cGU6YS5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpmfSksZGVsZXRlIGUuYXR0cmlidXRlc1t0XSxlfTt2YXIgWD17aGlnaDowLGxvdzowfTtxLmVuY29kZUF0dHJpYnV0ZT1mdW5jdGlvbihlLHQsaSxuKXtmb3IodmFyIHI9ZS5hdHRyaWJ1dGVzW3RdLG89ci52YWx1ZXMscz1vLmxlbmd0aCxsPW5ldyBGbG9hdDMyQXJyYXkocyksdT1uZXcgRmxvYXQzMkFycmF5KHMpLGQ9MDtzPmQ7KytkKWMuZW5jb2RlKG9bZF0sWCksbFtkXT1YLmhpZ2gsdVtkXT1YLmxvdzt2YXIgaD1yLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGU7cmV0dXJuIGUuYXR0cmlidXRlc1tpXT1uZXcgbSh7Y29tcG9uZW50RGF0YXR5cGU6YS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOmgsdmFsdWVzOmx9KSxlLmF0dHJpYnV0ZXNbbl09bmV3IG0oe2NvbXBvbmVudERhdGF0eXBlOmEuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpoLHZhbHVlczp1fSksZGVsZXRlIGUuYXR0cmlidXRlc1t0XSxlfTt2YXIgWj1uZXcgbixKPW5ldyB5LEs9bmV3IF87cS50cmFuc2Zvcm1Ub1dvcmxkQ29vcmRpbmF0ZXM9ZnVuY3Rpb24oZSl7dmFyIGk9ZS5tb2RlbE1hdHJpeDtpZih5LmVxdWFscyhpLHkuSURFTlRJVFkpKXJldHVybiBlO3ZhciBuPWUuZ2VvbWV0cnkuYXR0cmlidXRlcztNKGksbi5wb3NpdGlvbiksTShpLG4ucHJldlBvc2l0aW9uKSxNKGksbi5uZXh0UG9zaXRpb24pLChsKG4ubm9ybWFsKXx8bChuLmJpbm9ybWFsKXx8bChuLnRhbmdlbnQpKSYmKHkuaW52ZXJzZShpLEopLHkudHJhbnNwb3NlKEosSikseS5nZXRSb3RhdGlvbihKLEspLEkoSyxuLm5vcm1hbCksSShLLG4uYmlub3JtYWwpLEkoSyxuLnRhbmdlbnQpKTt2YXIgcj1lLmdlb21ldHJ5LmJvdW5kaW5nU3BoZXJlO3JldHVybiBsKHIpJiYoZS5nZW9tZXRyeS5ib3VuZGluZ1NwaGVyZT10LnRyYW5zZm9ybShyLGkscikpLGUubW9kZWxNYXRyaXg9eS5jbG9uZSh5LklERU5USVRZKSxlfTt2YXIgUT1uZXcgbjtxLmNvbWJpbmU9ZnVuY3Rpb24oZSl7dmFyIGkscixvLGEscz1lLmxlbmd0aDtlWzBdLm1vZGVsTWF0cml4O3ZhciB1LGMsZCxtPWwoZVswXS5nZW9tZXRyeS5pbmRpY2VzKSxwPWVbMF0uZ2VvbWV0cnkucHJpbWl0aXZlVHlwZSx2PUQoZSk7Zm9yKGkgaW4gdilpZih2Lmhhc093blByb3BlcnR5KGkpKWZvcih1PXZbaV0udmFsdWVzLGE9MCxyPTA7cz5yOysrcilmb3IoYz1lW3JdLmdlb21ldHJ5LmF0dHJpYnV0ZXNbaV0udmFsdWVzLGQ9Yy5sZW5ndGgsbz0wO2Q+bzsrK28pdVthKytdPWNbb107dmFyIGc7aWYobSl7dmFyIF89MDtmb3Iocj0wO3M+cjsrK3IpXys9ZVtyXS5nZW9tZXRyeS5pbmRpY2VzLmxlbmd0aDt2YXIgeT1oLmNvbXB1dGVOdW1iZXJPZlZlcnRpY2VzKG5ldyBoKHthdHRyaWJ1dGVzOnYscHJpbWl0aXZlVHlwZTp3LlBPSU5UU30pKSxDPWYuY3JlYXRlVHlwZWRBcnJheSh5LF8pLEU9MCxiPTA7Zm9yKHI9MDtzPnI7KytyKXt2YXIgUz1lW3JdLmdlb21ldHJ5LmluZGljZXMsVD1TLmxlbmd0aDtmb3IoYT0wO1Q+YTsrK2EpQ1tFKytdPWIrU1thXTtiKz1oLmNvbXB1dGVOdW1iZXJPZlZlcnRpY2VzKGVbcl0uZ2VvbWV0cnkpfWc9Q312YXIgeCxBPW5ldyBuLFA9MDtmb3Iocj0wO3M+cjsrK3Ipe2lmKHg9ZVtyXS5nZW9tZXRyeS5ib3VuZGluZ1NwaGVyZSwhbCh4KSl7QT12b2lkIDA7YnJlYWt9bi5hZGQoeC5jZW50ZXIsQSxBKX1pZihsKEEpKWZvcihuLmRpdmlkZUJ5U2NhbGFyKEEscyxBKSxyPTA7cz5yOysrcil7eD1lW3JdLmdlb21ldHJ5LmJvdW5kaW5nU3BoZXJlO3ZhciBNPW4ubWFnbml0dWRlKG4uc3VidHJhY3QoeC5jZW50ZXIsQSxRKSkreC5yYWRpdXM7TT5QJiYoUD1NKX1yZXR1cm4gbmV3IGgoe2F0dHJpYnV0ZXM6dixpbmRpY2VzOmcscHJpbWl0aXZlVHlwZTpwLGJvdW5kaW5nU3BoZXJlOmwoQSk/bmV3IHQoQSxQKTp2b2lkIDB9KX07dmFyICQ9bmV3IG4sZXQ9bmV3IG4sdHQ9bmV3IG4saXQ9bmV3IG47cS5jb21wdXRlTm9ybWFsPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmluZGljZXMsaT1lLmF0dHJpYnV0ZXMscj1pLnBvc2l0aW9uLnZhbHVlcyxvPWkucG9zaXRpb24udmFsdWVzLmxlbmd0aC8zLHM9dC5sZW5ndGgsbD1uZXcgQXJyYXkobyksdT1uZXcgQXJyYXkocy8zKSxjPW5ldyBBcnJheShzKSxkPTA7bz5kO2QrKylsW2RdPXtpbmRleE9mZnNldDowLGNvdW50OjAsY3VycmVudENvdW50OjB9O3ZhciBoPTA7Zm9yKGQ9MDtzPmQ7ZCs9Myl7dmFyIGY9dFtkXSxwPXRbZCsxXSx2PXRbZCsyXSxnPTMqZixfPTMqcCx5PTMqdjtldC54PXJbZ10sZXQueT1yW2crMV0sZXQuej1yW2crMl0sdHQueD1yW19dLHR0Lnk9cltfKzFdLHR0Lno9cltfKzJdLGl0Lng9clt5XSxpdC55PXJbeSsxXSxpdC56PXJbeSsyXSxsW2ZdLmNvdW50KyssbFtwXS5jb3VudCsrLGxbdl0uY291bnQrKyxuLnN1YnRyYWN0KHR0LGV0LHR0KSxuLnN1YnRyYWN0KGl0LGV0LGl0KSx1W2hdPW4uY3Jvc3ModHQsaXQsbmV3IG4pLGgrK312YXIgQz0wO2ZvcihkPTA7bz5kO2QrKylsW2RdLmluZGV4T2Zmc2V0Kz1DLEMrPWxbZF0uY291bnQ7aD0wO3ZhciB3O2ZvcihkPTA7cz5kO2QrPTMpe3c9bFt0W2RdXTt2YXIgRT13LmluZGV4T2Zmc2V0K3cuY3VycmVudENvdW50O2NbRV09aCx3LmN1cnJlbnRDb3VudCsrLHc9bFt0W2QrMV1dLEU9dy5pbmRleE9mZnNldCt3LmN1cnJlbnRDb3VudCxjW0VdPWgsdy5jdXJyZW50Q291bnQrKyx3PWxbdFtkKzJdXSxFPXcuaW5kZXhPZmZzZXQrdy5jdXJyZW50Q291bnQsY1tFXT1oLHcuY3VycmVudENvdW50KyssaCsrfXZhciBiPW5ldyBGbG9hdDMyQXJyYXkoMypvKTtmb3IoZD0wO28+ZDtkKyspe3ZhciBTPTMqZDtpZih3PWxbZF0sdy5jb3VudD4wKXtmb3Iobi5jbG9uZShuLlpFUk8sJCksaD0wO2g8dy5jb3VudDtoKyspbi5hZGQoJCx1W2Nbdy5pbmRleE9mZnNldCtoXV0sJCk7bi5ub3JtYWxpemUoJCwkKSxiW1NdPSQueCxiW1MrMV09JC55LGJbUysyXT0kLnp9ZWxzZSBiW1NdPTAsYltTKzFdPTAsYltTKzJdPTF9cmV0dXJuIGUuYXR0cmlidXRlcy5ub3JtYWw9bmV3IG0oe2NvbXBvbmVudERhdGF0eXBlOmEuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpifSksZX07dmFyIG50PW5ldyBuLHJ0PW5ldyBuLG90PW5ldyBuO3EuY29tcHV0ZUJpbm9ybWFsQW5kVGFuZ2VudD1mdW5jdGlvbihlKXtlLmF0dHJpYnV0ZXM7Zm9yKHZhciB0PWUuaW5kaWNlcyxpPWUuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXMscj1lLmF0dHJpYnV0ZXMubm9ybWFsLnZhbHVlcyxvPWUuYXR0cmlidXRlcy5zdC52YWx1ZXMscz1lLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzLmxlbmd0aC8zLGw9dC5sZW5ndGgsdT1uZXcgQXJyYXkoMypzKSxjPTA7Yzx1Lmxlbmd0aDtjKyspdVtjXT0wO3ZhciBkLGgsZjtmb3IoYz0wO2w+YztjKz0zKXt2YXIgcD10W2NdLHY9dFtjKzFdLGc9dFtjKzJdO2Q9MypwLGg9Myp2LGY9MypnO3ZhciBfPTIqcCx5PTIqdixDPTIqZyx3PWlbZF0sRT1pW2QrMV0sYj1pW2QrMl0sUz1vW19dLFQ9b1tfKzFdLHg9b1t5KzFdLVQsQT1vW0MrMV0tVCxQPTEvKChvW3ldLVMpKkEtKG9bQ10tUykqeCksTT0oQSooaVtoXS13KS14KihpW2ZdLXcpKSpQLEk9KEEqKGlbaCsxXS1FKS14KihpW2YrMV0tRSkpKlAsRD0oQSooaVtoKzJdLWIpLXgqKGlbZisyXS1iKSkqUDt1W2RdKz1NLHVbZCsxXSs9SSx1W2QrMl0rPUQsdVtoXSs9TSx1W2grMV0rPUksdVtoKzJdKz1ELHVbZl0rPU0sdVtmKzFdKz1JLHVbZisyXSs9RH12YXIgTz1uZXcgRmxvYXQzMkFycmF5KDMqcyksUj1uZXcgRmxvYXQzMkFycmF5KDMqcyk7Zm9yKGM9MDtzPmM7YysrKXtkPTMqYyxoPWQrMSxmPWQrMjt2YXIgTD1uLmZyb21BcnJheShyLGQsbnQpLE49bi5mcm9tQXJyYXkodSxkLG90KSx6PW4uZG90KEwsTik7bi5tdWx0aXBseUJ5U2NhbGFyKEwseixydCksbi5ub3JtYWxpemUobi5zdWJ0cmFjdChOLHJ0LE4pLE4pLFJbZF09Ti54LFJbaF09Ti55LFJbZl09Ti56LG4ubm9ybWFsaXplKG4uY3Jvc3MoTCxOLE4pLE4pLE9bZF09Ti54LE9baF09Ti55LE9bZl09Ti56fXJldHVybiBlLmF0dHJpYnV0ZXMudGFuZ2VudD1uZXcgbSh7Y29tcG9uZW50RGF0YXR5cGU6YS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOlJ9KSxlLmF0dHJpYnV0ZXMuYmlub3JtYWw9bmV3IG0oe2NvbXBvbmVudERhdGF0eXBlOmEuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpPfSksZX07dmFyIGF0PW5ldyBuLHN0PW5ldyBuLGx0PW5ldyBuLHV0PW5ldyBuLGN0PW5ldyBuLGR0PXtwb3NpdGlvbnM6bmV3IEFycmF5KDcpLGluZGljZXM6bmV3IEFycmF5KDkpfSxodD1uZXcgaSxtdD1uZXcgaSxmdD1uZXcgaSxwdD1uZXcgbix2dD1uZXcgbixndD1uZXcgbixfdD1uZXcgbix5dD1uZXcgbixDdD1uZXcgbjtyZXR1cm4gcS53cmFwTG9uZ2l0dWRlPWZ1bmN0aW9uKGUpe3ZhciBpPWUuYm91bmRpbmdTcGhlcmU7aWYobChpKSl7dmFyIG49aS5jZW50ZXIueC1pLnJhZGl1cztpZihuPjB8fHQuaW50ZXJzZWN0KGksci5VTklUX1kpIT09cC5JTlRFUlNFQ1RJTkcpcmV0dXJuIGV9cmV0dXJuIEYoZSksZS5wcmltaXRpdmVUeXBlPT09dy5UUklBTkdMRVM/RyhlKTplLnByaW1pdGl2ZVR5cGU9PT13LkxJTkVTJiZIKGUpLGV9LHF9KSxkZWZpbmUoIkNvcmUvVmVydGV4Rm9ybWF0IixbIi4vZGVmYXVsdFZhbHVlIiwiLi9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbih0KXt0PWUodCxlLkVNUFRZX09CSkVDVCksdGhpcy5wb3NpdGlvbj1lKHQucG9zaXRpb24sITEpLHRoaXMubm9ybWFsPWUodC5ub3JtYWwsITEpLHRoaXMuc3Q9ZSh0LnN0LCExKSx0aGlzLmJpbm9ybWFsPWUodC5iaW5vcm1hbCwhMSksdGhpcy50YW5nZW50PWUodC50YW5nZW50LCExKX07cmV0dXJuIGkuUE9TSVRJT05fT05MWT10KG5ldyBpKHtwb3NpdGlvbjohMH0pKSxpLlBPU0lUSU9OX0FORF9OT1JNQUw9dChuZXcgaSh7cG9zaXRpb246ITAsbm9ybWFsOiEwfSkpLGkuUE9TSVRJT05fTk9STUFMX0FORF9TVD10KG5ldyBpKHtwb3NpdGlvbjohMCxub3JtYWw6ITAsc3Q6ITB9KSksaS5QT1NJVElPTl9BTkRfU1Q9dChuZXcgaSh7cG9zaXRpb246ITAsc3Q6ITB9KSksaS5BTEw9dChuZXcgaSh7cG9zaXRpb246ITAsbm9ybWFsOiEwLHN0OiEwLGJpbm9ybWFsOiEwLHRhbmdlbnQ6ITB9KSksaS5ERUZBVUxUPWkuUE9TSVRJT05fTk9STUFMX0FORF9TVCxpfSksZGVmaW5lKCJDb3JlL0VsbGlwc2VHZW9tZXRyeSIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4yIiwiLi9DYXJ0ZXNpYW4zIiwiLi9DYXJ0b2dyYXBoaWMiLCIuL0NvbXBvbmVudERhdGF0eXBlIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNlR2VvbWV0cnlMaWJyYXJ5IiwiLi9FbGxpcHNvaWQiLCIuL0dlb2dyYXBoaWNQcm9qZWN0aW9uIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL0dlb21ldHJ5QXR0cmlidXRlcyIsIi4vR2VvbWV0cnlJbnN0YW5jZSIsIi4vR2VvbWV0cnlQaXBlbGluZSIsIi4vSW5kZXhEYXRhdHlwZSIsIi4vTWF0aCIsIi4vTWF0cml4MyIsIi4vUHJpbWl0aXZlVHlwZSIsIi4vUXVhdGVybmlvbiIsIi4vVmVydGV4Rm9ybWF0Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIEUoZSx0LG4pe3ZhciBvPXQudmVydGV4Rm9ybWF0LGE9dC5jZW50ZXIscz10LnNlbWlNYWpvckF4aXMsdT10LmVsbGlwc29pZCxkPXQuc3RSb3RhdGlvbixmPW4/MiooZS5sZW5ndGgvMyk6ZS5sZW5ndGgvMyxwPW8uc3Q/bmV3IEZsb2F0MzJBcnJheSgyKmYpOnZvaWQgMCx2PW8ubm9ybWFsP25ldyBGbG9hdDMyQXJyYXkoMypmKTp2b2lkIDAsZz1vLnRhbmdlbnQ/bmV3IEZsb2F0MzJBcnJheSgzKmYpOnZvaWQgMCx5PW8uYmlub3JtYWw/bmV3IEZsb2F0MzJBcnJheSgzKmYpOnZvaWQgMCx3PTAsRT1OLGI9eixTPUIsVD1uZXcgYyh1KSx4PVQucHJvamVjdCh1LmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGEsRiksViksQT11LnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UoYSxQKTt1Lmdlb2RldGljU3VyZmFjZU5vcm1hbChBLEEpO2Zvcih2YXIgRD1DLmZyb21BeGlzQW5nbGUoQSxkLEwpLGs9Xy5mcm9tUXVhdGVybmlvbihELFIpLFU9ZS5sZW5ndGgsVz1uP1U6MCxHPTIqKFcvMyksSD0wO1U+SDtIKz0zKXt2YXIgcT1IKzEsaj1IKzIsWT1pLmZyb21BcnJheShlLEgsUCk7aWYoby5zdCl7dmFyIFg9Xy5tdWx0aXBseUJ5VmVjdG9yKGssWSxNKSxaPVQucHJvamVjdCh1LmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKFgsRiksSSk7aS5zdWJ0cmFjdChaLHgsWiksTy54PShaLngrcykvKDIqcyksTy55PShaLnkrcykvKDIqcyksbiYmKHBbdytHXT1PLngscFt3KzErR109Ty55KSxwW3crK109Ty54LHBbdysrXT1PLnl9RT11Lmdlb2RldGljU3VyZmFjZU5vcm1hbChZLEUpLChvLm5vcm1hbHx8by50YW5nZW50fHxvLmJpbm9ybWFsKSYmKChvLnRhbmdlbnR8fG8uYmlub3JtYWwpJiYoYj1pLmNyb3NzKGkuVU5JVF9aLEUsYiksXy5tdWx0aXBseUJ5VmVjdG9yKGssYixiKSksby5ub3JtYWwmJih2W0hdPUUueCx2W3FdPUUueSx2W2pdPUUueixuJiYodltIK1ddPS1FLngsdltxK1ddPS1FLnksdltqK1ddPS1FLnopKSxvLnRhbmdlbnQmJihnW0hdPWIueCxnW3FdPWIueSxnW2pdPWIueixuJiYoZ1tIK1ddPS1iLngsZ1txK1ddPS1iLnksZ1tqK1ddPS1iLnopKSxvLmJpbm9ybWFsJiYoUz1pLmNyb3NzKEUsYixTKSx5W0hdPVMueCx5W3FdPVMueSx5W2pdPVMueixuJiYoeVtIK1ddPVMueCx5W3ErV109Uy55LHlbaitXXT1TLnopKSl9dmFyIEo9bmV3IG07aWYoby5wb3NpdGlvbil7dmFyIEs9bC5yYWlzZVBvc2l0aW9uc1RvSGVpZ2h0KGUsdCxuKTtKLnBvc2l0aW9uPW5ldyBoKHtjb21wb25lbnREYXRhdHlwZTpyLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOkt9KX1yZXR1cm4gby5zdCYmKEouc3Q9bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZToyLHZhbHVlczpwfSkpLG8ubm9ybWFsJiYoSi5ub3JtYWw9bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczp2fSkpLG8udGFuZ2VudCYmKEoudGFuZ2VudD1uZXcgaCh7Y29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOmd9KSksby5iaW5vcm1hbCYmKEouYmlub3JtYWw9bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczp5fSkpLEp9ZnVuY3Rpb24gYihlKXt2YXIgdCxpLG4scixvLGE9bmV3IEFycmF5KDIqZSooZSsxKSkscz0wO2ZvcihyPTE7ZT5yOysrcil7Zm9yKG49cioocisxKSx0PShyLTEpKnIsYVtzKytdPW4rKyxhW3MrK109dCxhW3MrK109bixpPTIqcixvPTA7aS0xPm87KytvKWFbcysrXT1uLGFbcysrXT10KyssYVtzKytdPXQsYVtzKytdPW4rKyxhW3MrK109dCxhW3MrK109bjthW3MrK109bisrLGFbcysrXT10LGFbcysrXT1ufWZvcihpPTIqZSwrK24sKyt0LHI9MDtpLTE+cjsrK3IpYVtzKytdPW4sYVtzKytdPXQrKyxhW3MrK109dCxhW3MrK109bisrLGFbcysrXT10LGFbcysrXT1uO2ZvcigrK3QsKytuLHI9ZS0xO3I+MDstLXIpe2ZvcihhW3MrK109dCsrLGFbcysrXT10LGFbcysrXT1uLGk9MipyLG89MDtpLTE+bzsrK28pYVtzKytdPW4sYVtzKytdPXQrKyxhW3MrK109dCxhW3MrK109bisrLGFbcysrXT10LGFbcysrXT1uO2FbcysrXT10KyssYVtzKytdPXQrKyxhW3MrK109bisrfXJldHVybiBhfWZ1bmN0aW9uIFModCl7dmFyIG49dC5jZW50ZXI7az1pLm11bHRpcGx5QnlTY2FsYXIodC5lbGxpcHNvaWQuZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKG4sayksdC5oZWlnaHQsayksaz1pLmFkZChuLGssayk7dmFyIHI9bmV3IGUoayx0LnNlbWlNYWpvckF4aXMpLG89bC5jb21wdXRlRWxsaXBzZVBvc2l0aW9ucyh0LCEwLCExKSxhPW8ucG9zaXRpb25zLHM9by5udW1QdHMsdT1FKGEsdCwhMSksYz1iKHMpO3JldHVybiBjPXYuY3JlYXRlVHlwZWRBcnJheShhLmxlbmd0aC8zLGMpLHtib3VuZGluZ1NwaGVyZTpyLGF0dHJpYnV0ZXM6dSxpbmRpY2VzOmN9fWZ1bmN0aW9uIFQoZSx0KXt2YXIgbj10LnZlcnRleEZvcm1hdCxvPXQuY2VudGVyLGE9dC5zZW1pTWFqb3JBeGlzLHM9dC5lbGxpcHNvaWQsbD10LmhlaWdodCx1PXQuZXh0cnVkZWRIZWlnaHQsZD10LnN0Um90YXRpb24sZj0yKihlLmxlbmd0aC8zKSxwPW5ldyBGbG9hdDY0QXJyYXkoMypmKSx2PW4uc3Q/bmV3IEZsb2F0MzJBcnJheSgyKmYpOnZvaWQgMCxnPW4ubm9ybWFsP25ldyBGbG9hdDMyQXJyYXkoMypmKTp2b2lkIDAseT1uLnRhbmdlbnQ/bmV3IEZsb2F0MzJBcnJheSgzKmYpOnZvaWQgMCx3PW4uYmlub3JtYWw/bmV3IEZsb2F0MzJBcnJheSgzKmYpOnZvaWQgMCxFPTAsYj1OLFM9eixUPUIseD1uZXcgYyhzKSxBPXgucHJvamVjdChzLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKG8sRiksViksaz1zLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UobyxQKTtzLmdlb2RldGljU3VyZmFjZU5vcm1hbChrLGspO2Zvcih2YXIgVT1DLmZyb21BeGlzQW5nbGUoayxkLEwpLFc9Xy5mcm9tUXVhdGVybmlvbihVLFIpLEc9ZS5sZW5ndGgsSD0yKihHLzMpLHE9MDtHPnE7cSs9Myl7dmFyIGosWT1xKzEsWD1xKzIsWj1pLmZyb21BcnJheShlLHEsUCk7aWYobi5zdCl7dmFyIEo9Xy5tdWx0aXBseUJ5VmVjdG9yKFcsWixNKSxLPXgucHJvamVjdChzLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKEosRiksSSk7aS5zdWJ0cmFjdChLLEEsSyksTy54PShLLngrYSkvKDIqYSksTy55PShLLnkrYSkvKDIqYSksdltFK0hdPU8ueCx2W0UrMStIXT1PLnksdltFKytdPU8ueCx2W0UrK109Ty55fVo9cy5zY2FsZVRvR2VvZGV0aWNTdXJmYWNlKFosWiksaj1pLmNsb25lKFosTSksYj1zLmdlb2RldGljU3VyZmFjZU5vcm1hbChaLGIpO3ZhciBRPWkubXVsdGlwbHlCeVNjYWxhcihiLGwsRCk7aWYoWj1pLmFkZChaLFEsWiksUT1pLm11bHRpcGx5QnlTY2FsYXIoYix1LFEpLGo9aS5hZGQoaixRLGopLG4ucG9zaXRpb24mJihwW3ErR109ai54LHBbWStHXT1qLnkscFtYK0ddPWoueixwW3FdPVoueCxwW1ldPVoueSxwW1hdPVoueiksbi5ub3JtYWx8fG4udGFuZ2VudHx8bi5iaW5vcm1hbCl7VD1pLmNsb25lKGIsVCk7dmFyICQ9aS5mcm9tQXJyYXkoZSwocSszKSVHLEQpO2kuc3VidHJhY3QoJCxaLCQpO3ZhciBldD1pLnN1YnRyYWN0KGosWixJKTtiPWkubm9ybWFsaXplKGkuY3Jvc3MoZXQsJCxiKSxiKSxuLm5vcm1hbCYmKGdbcV09Yi54LGdbWV09Yi55LGdbWF09Yi56LGdbcStHXT1iLngsZ1tZK0ddPWIueSxnW1grR109Yi56KSxuLnRhbmdlbnQmJihTPWkubm9ybWFsaXplKGkuY3Jvc3MoVCxiLFMpLFMpLHlbcV09Uy54LHlbWV09Uy55LHlbWF09Uy56LHlbcStHXT1TLngseVtxKzErR109Uy55LHlbcSsyK0ddPVMueiksbi5iaW5vcm1hbCYmKHdbcV09VC54LHdbWV09VC55LHdbWF09VC56LHdbcStHXT1ULngsd1tZK0ddPVQueSx3W1grR109VC56KX19dmFyIHR0PW5ldyBtO3JldHVybiBuLnBvc2l0aW9uJiYodHQucG9zaXRpb249bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRE9VQkxFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6cH0pKSxuLnN0JiYodHQuc3Q9bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZToyLHZhbHVlczp2fSkpLG4ubm9ybWFsJiYodHQubm9ybWFsPW5ldyBoKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6Z30pKSxuLnRhbmdlbnQmJih0dC50YW5nZW50PW5ldyBoKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6eX0pKSxuLmJpbm9ybWFsJiYodHQuYmlub3JtYWw9bmV3IGgoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczp3fSkpLHR0fWZ1bmN0aW9uIHgoZSl7Zm9yKHZhciB0LGksbixyLG89ZS5sZW5ndGgvMyxhPXYuY3JlYXRlVHlwZWRBcnJheShvLDYqbykscz0wLGw9MDtvLTE+bDtsKyspdD1sLG49bCtvLGk9dCsxLHI9aStvLGFbcysrXT10LGFbcysrXT1uLGFbcysrXT1pLGFbcysrXT1pLGFbcysrXT1uLGFbcysrXT1yO3JldHVybiB0PW8tMSxuPWwrbyxpPTAscj1pK28sYVtzKytdPXQsYVtzKytdPW4sYVtzKytdPWksYVtzKytdPWksYVtzKytdPW4sYVtzKytdPXIsYX1mdW5jdGlvbiBBKHQpe3ZhciBuPXQuY2VudGVyLHI9dC5lbGxpcHNvaWQsbz10LnNlbWlNYWpvckF4aXMsYT1pLm11bHRpcGx5QnlTY2FsYXIoci5nZW9kZXRpY1N1cmZhY2VOb3JtYWwobixQKSx0LmhlaWdodCxQKTtVLmNlbnRlcj1pLmFkZChuLGEsVS5jZW50ZXIpLFUucmFkaXVzPW8sYT1pLm11bHRpcGx5QnlTY2FsYXIoci5nZW9kZXRpY1N1cmZhY2VOb3JtYWwobixhKSx0LmV4dHJ1ZGVkSGVpZ2h0LGEpLFcuY2VudGVyPWkuYWRkKG4sYSxXLmNlbnRlciksVy5yYWRpdXM9bzt2YXIgcz1sLmNvbXB1dGVFbGxpcHNlUG9zaXRpb25zKHQsITAsITApLHU9cy5wb3NpdGlvbnMsYz1zLm51bVB0cyxoPXMub3V0ZXJQb3NpdGlvbnMsbT1lLnVuaW9uKFUsVyksZz1FKHUsdCwhMCksXz1iKGMpLEM9Xy5sZW5ndGg7Xy5sZW5ndGg9MipDO2Zvcih2YXIgdz11Lmxlbmd0aC8zLFM9MDtDPlM7Uys9MylfW1MrQ109X1tTKzJdK3csX1tTKzErQ109X1tTKzFdK3csX1tTKzIrQ109X1tTXSt3O3ZhciBBPXYuY3JlYXRlVHlwZWRBcnJheSgyKncvMyxfKSxNPW5ldyBkKHthdHRyaWJ1dGVzOmcsaW5kaWNlczpBLHByaW1pdGl2ZVR5cGU6eS5UUklBTkdMRVN9KSxJPVQoaCx0KTtfPXgoaCk7dmFyIEQ9di5jcmVhdGVUeXBlZEFycmF5KDIqaC5sZW5ndGgvMyxfKSxPPW5ldyBkKHthdHRyaWJ1dGVzOkksaW5kaWNlczpELHByaW1pdGl2ZVR5cGU6eS5UUklBTkdMRVN9KSxSPXAuY29tYmluZShbbmV3IGYoe2dlb21ldHJ5Ok19KSxuZXcgZih7Z2VvbWV0cnk6T30pXSk7cmV0dXJue2JvdW5kaW5nU3BoZXJlOm0sYXR0cmlidXRlczpSLmF0dHJpYnV0ZXMsaW5kaWNlczpSLmluZGljZXN9fXZhciBQPW5ldyBpLE09bmV3IGksST1uZXcgaSxEPW5ldyBpLE89bmV3IHQsUj1uZXcgXyxMPW5ldyBDLE49bmV3IGksej1uZXcgaSxCPW5ldyBpLEY9bmV3IG4sVj1uZXcgaSxrPW5ldyBpLFU9bmV3IGUsVz1uZXcgZSxHPWZ1bmN0aW9uKGUpe2U9byhlLG8uRU1QVFlfT0JKRUNUKTt2YXIgdD1lLmNlbnRlcixuPWUuc2VtaU1ham9yQXhpcyxyPWUuc2VtaU1pbm9yQXhpcyxzPW8oZS5ncmFudWxhcml0eSxnLlJBRElBTlNfUEVSX0RFR1JFRSksbD1vKGUuaGVpZ2h0LDApLGM9ZS5leHRydWRlZEhlaWdodCxkPWEoYykmJiFnLmVxdWFsc0Vwc2lsb24obCxjLDEpO3RoaXMuX2NlbnRlcj1pLmNsb25lKHQpLHRoaXMuX3NlbWlNYWpvckF4aXM9bix0aGlzLl9zZW1pTWlub3JBeGlzPXIsdGhpcy5fZWxsaXBzb2lkPW8oZS5lbGxpcHNvaWQsdS5XR1M4NCksdGhpcy5fcm90YXRpb249byhlLnJvdGF0aW9uLDApLHRoaXMuX3N0Um90YXRpb249byhlLnN0Um90YXRpb24sMCksdGhpcy5faGVpZ2h0PWwsdGhpcy5fZ3JhbnVsYXJpdHk9cyx0aGlzLl92ZXJ0ZXhGb3JtYXQ9byhlLnZlcnRleEZvcm1hdCx3LkRFRkFVTFQpLHRoaXMuX2V4dHJ1ZGVkSGVpZ2h0PWMsdGhpcy5fZXh0cnVkZT1kLHRoaXMuX3dvcmtlck5hbWU9ImNyZWF0ZUVsbGlwc2VHZW9tZXRyeSJ9O3JldHVybiBHLmNyZWF0ZUdlb21ldHJ5PWZ1bmN0aW9uKGUpe3ZhciB0LGk9e2NlbnRlcjplLl9jZW50ZXIsc2VtaU1ham9yQXhpczplLl9zZW1pTWFqb3JBeGlzLHNlbWlNaW5vckF4aXM6ZS5fc2VtaU1pbm9yQXhpcyxlbGxpcHNvaWQ6ZS5fZWxsaXBzb2lkLHJvdGF0aW9uOmUuX3JvdGF0aW9uLGhlaWdodDplLl9oZWlnaHQsZXh0cnVkZWRIZWlnaHQ6ZS5fZXh0cnVkZWRIZWlnaHQsZ3JhbnVsYXJpdHk6ZS5fZ3JhbnVsYXJpdHksdmVydGV4Rm9ybWF0OmUuX3ZlcnRleEZvcm1hdCxzdFJvdGF0aW9uOmUuX3N0Um90YXRpb259O3JldHVybiBlLl9leHRydWRlPyhpLmV4dHJ1ZGVkSGVpZ2h0PU1hdGgubWluKGUuX2V4dHJ1ZGVkSGVpZ2h0LGUuX2hlaWdodCksaS5oZWlnaHQ9TWF0aC5tYXgoZS5fZXh0cnVkZWRIZWlnaHQsZS5faGVpZ2h0KSx0PUEoaSkpOnQ9UyhpKSxuZXcgZCh7YXR0cmlidXRlczp0LmF0dHJpYnV0ZXMsaW5kaWNlczp0LmluZGljZXMscHJpbWl0aXZlVHlwZTp5LlRSSUFOR0xFUyxib3VuZGluZ1NwaGVyZTp0LmJvdW5kaW5nU3BoZXJlfSl9LEd9KSxkZWZpbmUoIkNvcmUvRWxsaXBzZU91dGxpbmVHZW9tZXRyeSIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4zIiwiLi9Db21wb25lbnREYXRhdHlwZSIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzZUdlb21ldHJ5TGlicmFyeSIsIi4vRWxsaXBzb2lkIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL0dlb21ldHJ5QXR0cmlidXRlcyIsIi4vSW5kZXhEYXRhdHlwZSIsIi4vTWF0aCIsIi4vUHJpbWl0aXZlVHlwZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGYobil7dmFyIHI9bi5jZW50ZXI7Zz10Lm11bHRpcGx5QnlTY2FsYXIobi5lbGxpcHNvaWQuZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHIsZyksbi5oZWlnaHQsZyksZz10LmFkZChyLGcsZyk7Zm9yKHZhciBvPW5ldyBlKGcsbi5zZW1pTWFqb3JBeGlzKSxzPWEuY29tcHV0ZUVsbGlwc2VQb3NpdGlvbnMobiwhMSwhMCkub3V0ZXJQb3NpdGlvbnMsbD1uZXcgYyh7cG9zaXRpb246bmV3IHUoe2NvbXBvbmVudERhdGF0eXBlOmkuRE9VQkxFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6YS5yYWlzZVBvc2l0aW9uc1RvSGVpZ2h0KHMsbiwhMSl9KX0pLGg9cy5sZW5ndGgvMyxtPWQuY3JlYXRlVHlwZWRBcnJheShoLDIqaCksZj0wLHA9MDtoLTE+cDtwKyspbVtmKytdPXAsbVtmKytdPXArMTtyZXR1cm4gbVtmKytdPWgtMSxtW2YrK109MCx7Ym91bmRpbmdTcGhlcmU6byxhdHRyaWJ1dGVzOmwsaW5kaWNlczptfX1mdW5jdGlvbiBwKHIpe3ZhciBvPW4oci5udW1iZXJPZlZlcnRpY2FsTGluZXMsMTYpO289TWF0aC5tYXgobywwKTt2YXIgcz1yLmNlbnRlcixsPXIuZWxsaXBzb2lkLGg9ci5zZW1pTWFqb3JBeGlzLG09dC5tdWx0aXBseUJ5U2NhbGFyKGwuZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHMsdiksci5oZWlnaHQsdik7Xy5jZW50ZXI9dC5hZGQocyxtLF8uY2VudGVyKSxfLnJhZGl1cz1oLG09dC5tdWx0aXBseUJ5U2NhbGFyKGwuZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHMsbSksci5leHRydWRlZEhlaWdodCxtKSx5LmNlbnRlcj10LmFkZChzLG0seS5jZW50ZXIpLHkucmFkaXVzPWg7dmFyIGY9YS5jb21wdXRlRWxsaXBzZVBvc2l0aW9ucyhyLCExLCEwKS5vdXRlclBvc2l0aW9ucyxwPW5ldyBjKHtwb3NpdGlvbjpuZXcgdSh7Y29tcG9uZW50RGF0YXR5cGU6aS5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczphLnJhaXNlUG9zaXRpb25zVG9IZWlnaHQoZixyLCEwKX0pfSk7Zj1wLnBvc2l0aW9uLnZhbHVlczt2YXIgZz1lLnVuaW9uKF8seSksQz1mLmxlbmd0aC8zLHc9ZC5jcmVhdGVUeXBlZEFycmF5KEMsMipDKzIqbyk7Qy89Mjtmb3IodmFyIEU9MCxiPTA7Qy0xPmI7YisrKXdbRSsrXT1iLHdbRSsrXT1iKzEsd1tFKytdPWIrQyx3W0UrK109YitDKzE7d1tFKytdPUMtMSx3W0UrK109MCx3W0UrK109QytDLTEsd1tFKytdPUM7dmFyIFM7aWYobz4wKXt2YXIgVD1NYXRoLm1pbihvLEMpO1M9TWF0aC5yb3VuZChDL1QpfXZhciB4PU1hdGgubWluKFMqbyxDKTtpZihvPjApZm9yKGI9MDt4PmI7Yis9Uyl3W0UrK109Yix3W0UrK109YitDO3JldHVybntib3VuZGluZ1NwaGVyZTpnLGF0dHJpYnV0ZXM6cCxpbmRpY2VzOnd9fXZhciB2PW5ldyB0LGc9bmV3IHQsXz1uZXcgZSx5PW5ldyBlLEM9ZnVuY3Rpb24oZSl7ZT1uKGUsbi5FTVBUWV9PQkpFQ1QpO3ZhciBpPWUuY2VudGVyLG89ZS5zZW1pTWFqb3JBeGlzLGE9ZS5zZW1pTWlub3JBeGlzLGw9bihlLmdyYW51bGFyaXR5LGguUkFESUFOU19QRVJfREVHUkVFKSx1PW4oZS5oZWlnaHQsMCksYz1lLmV4dHJ1ZGVkSGVpZ2h0LGQ9cihjKSYmIWguZXF1YWxzRXBzaWxvbih1LGMsMSk7dGhpcy5fY2VudGVyPXQuY2xvbmUoaSksdGhpcy5fc2VtaU1ham9yQXhpcz1vLHRoaXMuX3NlbWlNaW5vckF4aXM9YSx0aGlzLl9lbGxpcHNvaWQ9bihlLmVsbGlwc29pZCxzLldHUzg0KSx0aGlzLl9yb3RhdGlvbj1uKGUucm90YXRpb24sMCksdGhpcy5faGVpZ2h0PXUsdGhpcy5fZ3JhbnVsYXJpdHk9bCx0aGlzLl9leHRydWRlZEhlaWdodD1jLHRoaXMuX2V4dHJ1ZGU9ZCx0aGlzLl9udW1iZXJPZlZlcnRpY2FsTGluZXM9TWF0aC5tYXgobihlLm51bWJlck9mVmVydGljYWxMaW5lcywxNiksMCksdGhpcy5fd29ya2VyTmFtZT0iY3JlYXRlRWxsaXBzZU91dGxpbmVHZW9tZXRyeSJ9O3JldHVybiBDLmNyZWF0ZUdlb21ldHJ5PWZ1bmN0aW9uKGUpe3ZhciB0LGk9e2NlbnRlcjplLl9jZW50ZXIsc2VtaU1ham9yQXhpczplLl9zZW1pTWFqb3JBeGlzLHNlbWlNaW5vckF4aXM6ZS5fc2VtaU1pbm9yQXhpcyxlbGxpcHNvaWQ6ZS5fZWxsaXBzb2lkLHJvdGF0aW9uOmUuX3JvdGF0aW9uLGhlaWdodDplLl9oZWlnaHQsZXh0cnVkZWRIZWlnaHQ6ZS5fZXh0cnVkZWRIZWlnaHQsZ3JhbnVsYXJpdHk6ZS5fZ3JhbnVsYXJpdHksbnVtYmVyT2ZWZXJ0aWNhbExpbmVzOmUuX251bWJlck9mVmVydGljYWxMaW5lc307cmV0dXJuIGUuX2V4dHJ1ZGU/KGkuZXh0cnVkZWRIZWlnaHQ9TWF0aC5taW4oZS5fZXh0cnVkZWRIZWlnaHQsZS5faGVpZ2h0KSxpLmhlaWdodD1NYXRoLm1heChlLl9leHRydWRlZEhlaWdodCxlLl9oZWlnaHQpLHQ9cChpKSk6dD1mKGkpLG5ldyBsKHthdHRyaWJ1dGVzOnQuYXR0cmlidXRlcyxpbmRpY2VzOnQuaW5kaWNlcyxwcmltaXRpdmVUeXBlOm0uTElORVMsYm91bmRpbmdTcGhlcmU6dC5ib3VuZGluZ1NwaGVyZX0pfSxDfSksZGVmaW5lKCJDb3JlL1Nob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIixbIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7dmFyIHI9ZnVuY3Rpb24oZSl7ZT10KGUsITApLHRoaXMudmFsdWU9ci50b1ZhbHVlKGUpfTtyZXR1cm4gbihyLnByb3RvdHlwZSx7Y29tcG9uZW50RGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiBlLlVOU0lHTkVEX0JZVEV9fSxjb21wb25lbnRzUGVyQXR0cmlidXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMX19LG5vcm1hbGl6ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9fX0pLHIudG9WYWx1ZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWUsdCk6bmV3IFVpbnQ4QXJyYXkoW2VdKX0scn0pLGRlZmluZSgiU2hhZGVycy9BcHBlYXJhbmNlcy9BbGxNYXRlcmlhbEFwcGVhcmFuY2VGUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG52YXJ5aW5nIHZlYzMgdl9ub3JtYWxFQztcbnZhcnlpbmcgdmVjMyB2X3RhbmdlbnRFQztcbnZhcnlpbmcgdmVjMyB2X2Jpbm9ybWFsRUM7XG52YXJ5aW5nIHZlYzIgdl9zdDtcblxudm9pZCBtYWluKClcbntcbiAgICB2ZWMzIHBvc2l0aW9uVG9FeWVFQyA9IC12X3Bvc2l0aW9uRUM7IFxuICAgIG1hdDMgdGFuZ2VudFRvRXllTWF0cml4ID0gY3ptX3RhbmdlbnRUb0V5ZVNwYWNlTWF0cml4KHZfbm9ybWFsRUMsIHZfdGFuZ2VudEVDLCB2X2Jpbm9ybWFsRUMpO1xuXG4JdmVjMyBub3JtYWxFQztcbiNpZmRlZiBGQUNFX0ZPUldBUkRcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZShmYWNlZm9yd2FyZCh2X25vcm1hbEVDLCB2ZWMzKDAuMCwgMC4wLCAxLjApLCAtdl9ub3JtYWxFQykpO1xuI2Vsc2VcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZSh2X25vcm1hbEVDKTtcbiNlbmRpZlxuXG4gICAgY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dDtcbiAgICBtYXRlcmlhbElucHV0Lm5vcm1hbEVDID0gbm9ybWFsRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC50YW5nZW50VG9FeWVNYXRyaXggPSB0YW5nZW50VG9FeWVNYXRyaXg7XG4gICAgbWF0ZXJpYWxJbnB1dC5wb3NpdGlvblRvRXllRUMgPSBwb3NpdGlvblRvRXllRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC5zdCA9IHZfc3Q7XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuI2lmZGVmIEZMQVQgICAgXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChtYXRlcmlhbC5kaWZmdXNlICsgbWF0ZXJpYWwuZW1pc3Npb24sIG1hdGVyaWFsLmFscGhhKTtcbiNlbHNlXG4gICAgZ2xfRnJhZ0NvbG9yID0gY3ptX3Bob25nKG5vcm1hbGl6ZShwb3NpdGlvblRvRXllRUMpLCBtYXRlcmlhbCk7XG4jZW5kaWZcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQXBwZWFyYW5jZXMvQWxsTWF0ZXJpYWxBcHBlYXJhbmNlVlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJhdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjNESGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uM0RMb3c7XG5hdHRyaWJ1dGUgdmVjMyBub3JtYWw7XG5hdHRyaWJ1dGUgdmVjMyB0YW5nZW50O1xuYXR0cmlidXRlIHZlYzMgYmlub3JtYWw7XG5hdHRyaWJ1dGUgdmVjMiBzdDtcblxudmFyeWluZyB2ZWMzIHZfcG9zaXRpb25FQztcbnZhcnlpbmcgdmVjMyB2X25vcm1hbEVDO1xudmFyeWluZyB2ZWMzIHZfdGFuZ2VudEVDO1xudmFyeWluZyB2ZWMzIHZfYmlub3JtYWxFQztcbnZhcnlpbmcgdmVjMiB2X3N0O1xuXG52b2lkIG1haW4oKSBcbntcbiAgICB2ZWM0IHAgPSBjem1fY29tcHV0ZVBvc2l0aW9uKCk7XG5cbiAgICB2X3Bvc2l0aW9uRUMgPSAoY3ptX21vZGVsVmlld1JlbGF0aXZlVG9FeWUgKiBwKS54eXo7ICAgICAgLy8gcG9zaXRpb24gaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgdl9ub3JtYWxFQyA9IGN6bV9ub3JtYWwgKiBub3JtYWw7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vcm1hbCBpbiBleWUgY29vcmRpbmF0ZXNcbiAgICB2X3RhbmdlbnRFQyA9IGN6bV9ub3JtYWwgKiB0YW5nZW50OyAgICAgICAgICAgICAgICAgICAgICAgLy8gdGFuZ2VudCBpbiBleWUgY29vcmRpbmF0ZXNcbiAgICB2X2Jpbm9ybWFsRUMgPSBjem1fbm9ybWFsICogYmlub3JtYWw7ICAgICAgICAgICAgICAgICAgICAgLy8gYmlub3JtYWwgaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgdl9zdCA9IHN0O1xuICAgIFxuICAgIGdsX1Bvc2l0aW9uID0gY3ptX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllICogcDtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQXBwZWFyYW5jZXMvQmFzaWNNYXRlcmlhbEFwcGVhcmFuY2VGUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG52YXJ5aW5nIHZlYzMgdl9ub3JtYWxFQztcblxudm9pZCBtYWluKClcbntcbiAgICB2ZWMzIHBvc2l0aW9uVG9FeWVFQyA9IC12X3Bvc2l0aW9uRUM7IFxuXG4JdmVjMyBub3JtYWxFQztcbiNpZmRlZiBGQUNFX0ZPUldBUkRcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZShmYWNlZm9yd2FyZCh2X25vcm1hbEVDLCB2ZWMzKDAuMCwgMC4wLCAxLjApLCAtdl9ub3JtYWxFQykpO1xuI2Vsc2VcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZSh2X25vcm1hbEVDKTtcbiNlbmRpZlxuXG4gICAgY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dDtcbiAgICBtYXRlcmlhbElucHV0Lm5vcm1hbEVDID0gbm9ybWFsRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC5wb3NpdGlvblRvRXllRUMgPSBwb3NpdGlvblRvRXllRUM7XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuI2lmZGVmIEZMQVQgICAgXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChtYXRlcmlhbC5kaWZmdXNlICsgbWF0ZXJpYWwuZW1pc3Npb24sIG1hdGVyaWFsLmFscGhhKTtcbiNlbHNlXG4gICAgZ2xfRnJhZ0NvbG9yID0gY3ptX3Bob25nKG5vcm1hbGl6ZShwb3NpdGlvblRvRXllRUMpLCBtYXRlcmlhbCk7XG4jZW5kaWZcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQXBwZWFyYW5jZXMvQmFzaWNNYXRlcmlhbEFwcGVhcmFuY2VWUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zRExvdztcbmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDtcblxudmFyeWluZyB2ZWMzIHZfcG9zaXRpb25FQztcbnZhcnlpbmcgdmVjMyB2X25vcm1hbEVDO1xuXG52b2lkIG1haW4oKSBcbntcbiAgICB2ZWM0IHAgPSBjem1fY29tcHV0ZVBvc2l0aW9uKCk7XG5cbiAgICB2X3Bvc2l0aW9uRUMgPSAoY3ptX21vZGVsVmlld1JlbGF0aXZlVG9FeWUgKiBwKS54eXo7ICAgICAgLy8gcG9zaXRpb24gaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgdl9ub3JtYWxFQyA9IGN6bV9ub3JtYWwgKiBub3JtYWw7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vcm1hbCBpbiBleWUgY29vcmRpbmF0ZXNcbiAgICBcbiAgICBnbF9Qb3NpdGlvbiA9IGN6bV9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZSAqIHA7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0FwcGVhcmFuY2VzL1RleHR1cmVkTWF0ZXJpYWxBcHBlYXJhbmNlRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ2YXJ5aW5nIHZlYzMgdl9wb3NpdGlvbkVDO1xudmFyeWluZyB2ZWMzIHZfbm9ybWFsRUM7XG52YXJ5aW5nIHZlYzIgdl9zdDtcblxudm9pZCBtYWluKClcbntcbiAgICB2ZWMzIHBvc2l0aW9uVG9FeWVFQyA9IC12X3Bvc2l0aW9uRUM7IFxuXG4JdmVjMyBub3JtYWxFQztcbiNpZmRlZiBGQUNFX0ZPUldBUkRcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZShmYWNlZm9yd2FyZCh2X25vcm1hbEVDLCB2ZWMzKDAuMCwgMC4wLCAxLjApLCAtdl9ub3JtYWxFQykpO1xuI2Vsc2VcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZSh2X25vcm1hbEVDKTtcbiNlbmRpZlxuXG4gICAgY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dDtcbiAgICBtYXRlcmlhbElucHV0Lm5vcm1hbEVDID0gbm9ybWFsRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC5wb3NpdGlvblRvRXllRUMgPSBwb3NpdGlvblRvRXllRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC5zdCA9IHZfc3Q7XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuI2lmZGVmIEZMQVQgICAgXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChtYXRlcmlhbC5kaWZmdXNlICsgbWF0ZXJpYWwuZW1pc3Npb24sIG1hdGVyaWFsLmFscGhhKTtcbiNlbHNlXG4gICAgZ2xfRnJhZ0NvbG9yID0gY3ptX3Bob25nKG5vcm1hbGl6ZShwb3NpdGlvblRvRXllRUMpLCBtYXRlcmlhbCk7XG4jZW5kaWZcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQXBwZWFyYW5jZXMvVGV4dHVyZWRNYXRlcmlhbEFwcGVhcmFuY2VWUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zRExvdztcbmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDtcbmF0dHJpYnV0ZSB2ZWMyIHN0O1xuXG52YXJ5aW5nIHZlYzMgdl9wb3NpdGlvbkVDO1xudmFyeWluZyB2ZWMzIHZfbm9ybWFsRUM7XG52YXJ5aW5nIHZlYzIgdl9zdDtcblxudm9pZCBtYWluKCkgXG57XG4gICAgdmVjNCBwID0gY3ptX2NvbXB1dGVQb3NpdGlvbigpO1xuXG4gICAgdl9wb3NpdGlvbkVDID0gKGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllICogcCkueHl6OyAgICAgIC8vIHBvc2l0aW9uIGluIGV5ZSBjb29yZGluYXRlc1xuICAgIHZfbm9ybWFsRUMgPSBjem1fbm9ybWFsICogbm9ybWFsOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub3JtYWwgaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgdl9zdCA9IHN0O1xuICAgIFxuICAgIGdsX1Bvc2l0aW9uID0gY3ptX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllICogcDtcbn1cbiJ9KSxkZWZpbmUoIlNjZW5lL0N1bGxGYWNlIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtGUk9OVDoxMDI4LEJBQ0s6MTAyOSxGUk9OVF9BTkRfQkFDSzoxMDMyfTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiU2NlbmUvQXBwZWFyYW5jZSIsWyIuLi9Db3JlL2Nsb25lIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9SZW5kZXJlci9jcmVhdGVTaGFkZXJTb3VyY2UiLCIuL0JsZW5kaW5nU3RhdGUiLCIuL0N1bGxGYWNlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKGUpe2U9dChlLHQuRU1QVFlfT0JKRUNUKSx0aGlzLm1hdGVyaWFsPWUubWF0ZXJpYWwsdGhpcy50cmFuc2x1Y2VudD10KGUudHJhbnNsdWNlbnQsITApLHRoaXMuX3ZlcnRleFNoYWRlclNvdXJjZT1lLnZlcnRleFNoYWRlclNvdXJjZSx0aGlzLl9mcmFnbWVudFNoYWRlclNvdXJjZT1lLmZyYWdtZW50U2hhZGVyU291cmNlLHRoaXMuX3JlbmRlclN0YXRlPWUucmVuZGVyU3RhdGUsdGhpcy5fY2xvc2VkPXQoZS5jbG9zZWQsITEpfTtyZXR1cm4gbihzLnByb3RvdHlwZSx7dmVydGV4U2hhZGVyU291cmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGV4U2hhZGVyU291cmNlfX0sZnJhZ21lbnRTaGFkZXJTb3VyY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFnbWVudFNoYWRlclNvdXJjZX19LHJlbmRlclN0YXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyU3RhdGV9fSxjbG9zZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jbG9zZWR9fX0pLHMucHJvdG90eXBlLmdldEZyYWdtZW50U2hhZGVyU291cmNlPWZ1bmN0aW9uKCl7cmV0dXJuIHIoe2RlZmluZXM6W3RoaXMuZmxhdD8iRkxBVCI6IiIsdGhpcy5mYWNlRm9yd2FyZD8iRkFDRV9GT1JXQVJEIjoiIl0sc291cmNlczpbaSh0aGlzLm1hdGVyaWFsKT90aGlzLm1hdGVyaWFsLnNoYWRlclNvdXJjZToiIix0aGlzLmZyYWdtZW50U2hhZGVyU291cmNlXX0pfSxzLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50PWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5tYXRlcmlhbCkmJnRoaXMubWF0ZXJpYWwuaXNUcmFuc2x1Y2VudCgpfHwhaSh0aGlzLm1hdGVyaWFsKSYmdGhpcy50cmFuc2x1Y2VudH0scy5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmlzVHJhbnNsdWNlbnQoKSxpPWUodGhpcy5yZW5kZXJTdGF0ZSwhMSk7cmV0dXJuIHQ/KGkuZGVwdGhNYXNrPSExLGkuYmxlbmRpbmc9by5BTFBIQV9CTEVORCk6aS5kZXB0aE1hc2s9ITAsaX0scy5nZXREZWZhdWx0UmVuZGVyU3RhdGU9ZnVuY3Rpb24oZSx0KXt2YXIgaT17ZGVwdGhUZXN0OntlbmFibGVkOiEwfX07cmV0dXJuIGUmJihpLmRlcHRoTWFzaz0hMSxpLmJsZW5kaW5nPW8uQUxQSEFfQkxFTkQpLHQmJihpLmN1bGw9e2VuYWJsZWQ6ITAsZmFjZTphLkJBQ0t9KSxpfSxzfSksZGVmaW5lKCJDb3JlL2NvbWJpbmUiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbihuLHIsbyl7bz1lKG8sITEpO3ZhciBhLHMsbCx1PXt9LGM9dChuKSxkPXQocik7aWYoYylmb3IoYSBpbiBuKW4uaGFzT3duUHJvcGVydHkoYSkmJihzPW5bYV0sZCYmbyYmIm9iamVjdCI9PXR5cGVvZiBzJiZyLmhhc093blByb3BlcnR5KGEpPyhsPXJbYV0sdVthXT0ib2JqZWN0Ij09dHlwZW9mIGw/aShzLGwsbyk6cyk6dVthXT1zKTtpZihkKWZvcihhIGluIHIpci5oYXNPd25Qcm9wZXJ0eShhKSYmIXUuaGFzT3duUHJvcGVydHkoYSkmJihsPXJbYV0sdVthXT1sKTtyZXR1cm4gdX07cmV0dXJuIGl9KSxkZWZpbmUoIkNvcmUvTWF0cml4MiIsWyIuL0NhcnRlc2lhbjIiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUsdCxpLG4scil7InVzZSBzdHJpY3QiO3ZhciBvPWZ1bmN0aW9uKGUsaSxuLHIpe3RoaXNbMF09dChlLDApLHRoaXNbMV09dChuLDApLHRoaXNbMl09dChpLDApLHRoaXNbM109dChyLDApfTtvLmNsb25lPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoZSk/aSh0KT8odFswXT1lWzBdLHRbMV09ZVsxXSx0WzJdPWVbMl0sdFszXT1lWzNdLHQpOm5ldyBvKGVbMF0sZVsyXSxlWzFdLGVbM10pOnZvaWQgMH0sby5mcm9tQXJyYXk9ZnVuY3Rpb24oZSxuLHIpe3JldHVybiBuPXQobiwwKSxpKHIpfHwocj1uZXcgbyksclswXT1lW25dLHJbMV09ZVtuKzFdLHJbMl09ZVtuKzJdLHJbM109ZVtuKzNdLHJ9LG8uZnJvbUNvbHVtbk1ham9yQXJyYXk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5jbG9uZShlLHQpfSxvLmZyb21Sb3dNYWpvckFycmF5PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkodCk/KHRbMF09ZVswXSx0WzFdPWVbMl0sdFsyXT1lWzFdLHRbM109ZVszXSx0KTpuZXcgbyhlWzBdLGVbMV0sZVsyXSxlWzNdKX0sby5mcm9tU2NhbGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSh0KT8odFswXT1lLngsdFsxXT0wLHRbMl09MCx0WzNdPWUueSx0KTpuZXcgbyhlLngsMCwwLGUueSl9LG8uZnJvbVVuaWZvcm1TY2FsZT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWUsdFsxXT0wLHRbMl09MCx0WzNdPWUsdCk6bmV3IG8oZSwwLDAsZSl9LG8uZnJvbVJvdGF0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG49TWF0aC5jb3MoZSkscj1NYXRoLnNpbihlKTtyZXR1cm4gaSh0KT8odFswXT1uLHRbMV09cix0WzJdPS1yLHRbM109bix0KTpuZXcgbyhuLC1yLHIsbil9LG8udG9BcnJheT1mdW5jdGlvbihlLHQpe3JldHVybiBpKHQpPyh0WzBdPWVbMF0sdFsxXT1lWzFdLHRbMl09ZVsyXSx0WzNdPWVbM10sdCk6W2VbMF0sZVsxXSxlWzJdLGVbM11dfSxvLmdldEVsZW1lbnRJbmRleD1mdW5jdGlvbihlLHQpe3JldHVybiAyKmUrdH0sby5nZXRDb2x1bW49ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPTIqdCxyPWVbbl0sbz1lW24rMV07cmV0dXJuIGkueD1yLGkueT1vLGl9LG8uc2V0Q29sdW1uPWZ1bmN0aW9uKGUsdCxpLG4pe249by5jbG9uZShlLG4pO3ZhciByPTIqdDtyZXR1cm4gbltyXT1pLngsbltyKzFdPWkueSxufSxvLmdldFJvdz1mdW5jdGlvbihlLHQsaSl7dmFyIG49ZVt0XSxyPWVbdCsyXTtyZXR1cm4gaS54PW4saS55PXIsaX0sby5zZXRSb3c9ZnVuY3Rpb24oZSx0LGksbil7cmV0dXJuIG49by5jbG9uZShlLG4pLG5bdF09aS54LG5bdCsyXT1pLnksbn07dmFyIGE9bmV3IGU7by5nZXRTY2FsZT1mdW5jdGlvbih0LGkpe3JldHVybiBpLng9ZS5tYWduaXR1ZGUoZS5mcm9tRWxlbWVudHModFswXSx0WzFdLGEpKSxpLnk9ZS5tYWduaXR1ZGUoZS5mcm9tRWxlbWVudHModFsyXSx0WzNdLGEpKSxpfTt2YXIgcz1uZXcgZTtyZXR1cm4gby5nZXRNYXhpbXVtU2NhbGU9ZnVuY3Rpb24odCl7cmV0dXJuIG8uZ2V0U2NhbGUodCxzKSxlLm1heGltdW1Db21wb25lbnQocyl9LG8ubXVsdGlwbHk9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWVbMF0qdFswXStlWzJdKnRbMV0scj1lWzBdKnRbMl0rZVsyXSp0WzNdLG89ZVsxXSp0WzBdK2VbM10qdFsxXSxhPWVbMV0qdFsyXStlWzNdKnRbM107cmV0dXJuIGlbMF09bixpWzFdPW8saVsyXT1yLGlbM109YSxpfSxvLmFkZD1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGlbMF09ZVswXSt0WzBdLGlbMV09ZVsxXSt0WzFdLGlbMl09ZVsyXSt0WzJdLGlbM109ZVszXSt0WzNdLGl9LG8uc3VidHJhY3Q9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBpWzBdPWVbMF0tdFswXSxpWzFdPWVbMV0tdFsxXSxpWzJdPWVbMl0tdFsyXSxpWzNdPWVbM10tdFszXSxpfSxvLm11bHRpcGx5QnlWZWN0b3I9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWVbMF0qdC54K2VbMl0qdC55LHI9ZVsxXSp0LngrZVszXSp0Lnk7cmV0dXJuIGkueD1uLGkueT1yLGl9LG8ubXVsdGlwbHlCeVNjYWxhcj1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIGlbMF09ZVswXSp0LGlbMV09ZVsxXSp0LGlbMl09ZVsyXSp0LGlbM109ZVszXSp0LGl9LG8ubmVnYXRlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRbMF09LWVbMF0sdFsxXT0tZVsxXSx0WzJdPS1lWzJdLHRbM109LWVbM10sdH0sby50cmFuc3Bvc2U9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lWzBdLG49ZVsyXSxyPWVbMV0sbz1lWzNdO3JldHVybiB0WzBdPWksdFsxXT1uLHRbMl09cix0WzNdPW8sdH0sby5hYnM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdFswXT1NYXRoLmFicyhlWzBdKSx0WzFdPU1hdGguYWJzKGVbMV0pLHRbMl09TWF0aC5hYnMoZVsyXSksdFszXT1NYXRoLmFicyhlWzNdKSx0fSxvLmVxdWFscz1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dHx8aShlKSYmaSh0KSYmZVswXT09PXRbMF0mJmVbMV09PT10WzFdJiZlWzJdPT09dFsyXSYmZVszXT09PXRbM119LG8uZXF1YWxzRXBzaWxvbj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGU9PT10fHxpKGUpJiZpKHQpJiZNYXRoLmFicyhlWzBdLXRbMF0pPD1uJiZNYXRoLmFicyhlWzFdLXRbMV0pPD1uJiZNYXRoLmFicyhlWzJdLXRbMl0pPD1uJiZNYXRoLmFicyhlWzNdLXRbM10pPD1ufSxvLklERU5USVRZPXIobmV3IG8oMSwwLDAsMSkpLG8uQ09MVU1OMFJPVzA9MCxvLkNPTFVNTjBST1cxPTEsby5DT0xVTU4xUk9XMD0yLG8uQ09MVU1OMVJPVzE9MyxvLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gby5jbG9uZSh0aGlzLGUpfSxvLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZXF1YWxzKHRoaXMsZSl9LG8ucHJvdG90eXBlLmVxdWFsc0Vwc2lsb249ZnVuY3Rpb24oZSx0KXtyZXR1cm4gby5lcXVhbHNFcHNpbG9uKHRoaXMsZSx0KX0sby5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iKCIrdGhpc1swXSsiLCAiK3RoaXNbMl0rIilcbiIrIigiK3RoaXNbMV0rIiwgIit0aGlzWzNdKyIpIn0sb30pLGRlZmluZSgiUmVuZGVyZXIvUGl4ZWxEYXRhdHlwZSIsWyIuLi9Db3JlL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17VU5TSUdORURfQllURTo1MTIxLFVOU0lHTkVEX1NIT1JUOjUxMjMsVU5TSUdORURfSU5UOjUxMjUsRkxPQVQ6NTEyNixVTlNJR05FRF9JTlRfMjRfOF9XRUJHTDozNDA0MixVTlNJR05FRF9TSE9SVF80XzRfNF80OjMyODE5LFVOU0lHTkVEX1NIT1JUXzVfNV81XzE6MzI4MjAsVU5TSUdORURfU0hPUlRfNV82XzU6MzM2MzUsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10LlVOU0lHTkVEX0JZVEV8fGU9PT10LlVOU0lHTkVEX1NIT1JUfHxlPT09dC5VTlNJR05FRF9JTlR8fGU9PT10LkZMT0FUfHxlPT09dC5VTlNJR05FRF9JTlRfMjRfOF9XRUJHTHx8ZT09PXQuVU5TSUdORURfU0hPUlRfNF80XzRfNHx8ZT09PXQuVU5TSUdORURfU0hPUlRfNV81XzVfMXx8ZT09PXQuVU5TSUdORURfU0hPUlRfNV82XzV9fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiUmVuZGVyZXIvQ3ViZU1hcEZhY2UiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi9QaXhlbERhdGF0eXBlIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9ZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpe3RoaXMuX2dsPWUsdGhpcy5fdGV4dHVyZT10LHRoaXMuX3RleHR1cmVUYXJnZXQ9aSx0aGlzLl90YXJnZXRGYWNlPW4sdGhpcy5fcGl4ZWxGb3JtYXQ9cix0aGlzLl9waXhlbERhdGF0eXBlPW8sdGhpcy5fc2l6ZT1hLHRoaXMuX3ByZU11bHRpcGx5QWxwaGE9cyx0aGlzLl9mbGlwWT1sfTtyZXR1cm4gdChpLnByb3RvdHlwZSx7cGl4ZWxGb3JtYXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbEZvcm1hdH19LHBpeGVsRGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbERhdGF0eXBlfX0sX3RhcmdldDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RhcmdldEZhY2V9fX0pLGkucHJvdG90eXBlLmNvcHlGcm9tPWZ1bmN0aW9uKHQsaSxuKXtpPWUoaSwwKSxuPWUobiwwKTt2YXIgcj10aGlzLl9nbCxvPXRoaXMuX3RleHR1cmVUYXJnZXQ7ci5waXhlbFN0b3JlaShyLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCx0aGlzLl9wcmVNdWx0aXBseUFscGhhKSxyLnBpeGVsU3RvcmVpKHIuVU5QQUNLX0ZMSVBfWV9XRUJHTCx0aGlzLl9mbGlwWSksci5hY3RpdmVUZXh0dXJlKHIuVEVYVFVSRTApLHIuYmluZFRleHR1cmUobyx0aGlzLl90ZXh0dXJlKSx0LmFycmF5QnVmZmVyVmlldz9yLnRleFN1YkltYWdlMkQodGhpcy5fdGFyZ2V0RmFjZSwwLGksbix0LndpZHRoLHQuaGVpZ2h0LHRoaXMuX3BpeGVsRm9ybWF0LHRoaXMuX3BpeGVsRGF0YXR5cGUsdC5hcnJheUJ1ZmZlclZpZXcpOnIudGV4U3ViSW1hZ2UyRCh0aGlzLl90YXJnZXRGYWNlLDAsaSxuLHRoaXMuX3BpeGVsRm9ybWF0LHRoaXMuX3BpeGVsRGF0YXR5cGUsdCksci5iaW5kVGV4dHVyZShvLG51bGwpfSxpLnByb3RvdHlwZS5jb3B5RnJvbUZyYW1lYnVmZmVyPWZ1bmN0aW9uKHQsaSxuLHIsbyxhKXt0PWUodCwwKSxpPWUoaSwwKSxuPWUobiwwKSxyPWUociwwKSxvPWUobyx0aGlzLl9zaXplKSxhPWUoYSx0aGlzLl9zaXplKTt2YXIgcz10aGlzLl9nbCxsPXRoaXMuX3RleHR1cmVUYXJnZXQ7cy5hY3RpdmVUZXh0dXJlKHMuVEVYVFVSRTApLHMuYmluZFRleHR1cmUobCx0aGlzLl90ZXh0dXJlKSxzLmNvcHlUZXhTdWJJbWFnZTJEKHRoaXMuX3RhcmdldEZhY2UsMCx0LGksbixyLG8sYSkscy5iaW5kVGV4dHVyZShsLG51bGwpfSxpfSksZGVmaW5lKCJSZW5kZXJlci9NaXBtYXBIaW50IixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtET05UX0NBUkU6NDM1MixGQVNURVNUOjQzNTMsTklDRVNUOjQzNTQsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10LkRPTlRfQ0FSRXx8ZT09PXQuRkFTVEVTVHx8ZT09PXQuTklDRVNUfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlJlbmRlcmVyL1RleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtORUFSRVNUOjk3MjgsTElORUFSOjk3MjksdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10Lk5FQVJFU1R8fGU9PT10LkxJTkVBUn19O3JldHVybiBlKHQpfSksZGVmaW5lKCJSZW5kZXJlci9UZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtORUFSRVNUOjk3MjgsTElORUFSOjk3MjksTkVBUkVTVF9NSVBNQVBfTkVBUkVTVDo5OTg0LExJTkVBUl9NSVBNQVBfTkVBUkVTVDo5OTg1LE5FQVJFU1RfTUlQTUFQX0xJTkVBUjo5OTg2LExJTkVBUl9NSVBNQVBfTElORUFSOjk5ODcsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10Lk5FQVJFU1R8fGU9PT10LkxJTkVBUnx8ZT09PXQuTkVBUkVTVF9NSVBNQVBfTkVBUkVTVHx8ZT09PXQuTElORUFSX01JUE1BUF9ORUFSRVNUfHxlPT09dC5ORUFSRVNUX01JUE1BUF9MSU5FQVJ8fGU9PT10LkxJTkVBUl9NSVBNQVBfTElORUFSfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlJlbmRlcmVyL1RleHR1cmVXcmFwIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtDTEFNUF9UT19FREdFOjMzMDcxLFJFUEVBVDoxMDQ5NyxNSVJST1JFRF9SRVBFQVQ6MzM2NDgsdmFsaWRhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10LkNMQU1QX1RPX0VER0V8fGU9PT10LlJFUEVBVHx8ZT09PXQuTUlSUk9SRURfUkVQRUFUfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlJlbmRlcmVyL0N1YmVNYXAiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9NYXRoIiwiLi9DdWJlTWFwRmFjZSIsIi4vTWlwbWFwSGludCIsIi4vUGl4ZWxEYXRhdHlwZSIsIi4vVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIiLCIuL1RleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIiLCIuL1RleHR1cmVXcmFwIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaD1mdW5jdGlvbihlLHQsaSxuLHIsbyxzLGwsdSl7dGhpcy5fZ2w9ZSx0aGlzLl90ZXh0dXJlRmlsdGVyQW5pc290cm9waWM9dCx0aGlzLl90ZXh0dXJlVGFyZ2V0PWksdGhpcy5fdGV4dHVyZT1uLHRoaXMuX3BpeGVsRm9ybWF0PXIsdGhpcy5fcGl4ZWxEYXRhdHlwZT1vLHRoaXMuX3NpemU9cyx0aGlzLl9wcmVNdWx0aXBseUFscGhhPWwsdGhpcy5fZmxpcFk9dSx0aGlzLl9zYW1wbGVyPXZvaWQgMCx0aGlzLl9wb3NpdGl2ZVg9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1gscixvLHMsbCx1KSx0aGlzLl9uZWdhdGl2ZVg9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1gscixvLHMsbCx1KSx0aGlzLl9wb3NpdGl2ZVk9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1kscixvLHMsbCx1KSx0aGlzLl9uZWdhdGl2ZVk9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1kscixvLHMsbCx1KSx0aGlzLl9wb3NpdGl2ZVo9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1oscixvLHMsbCx1KSx0aGlzLl9uZWdhdGl2ZVo9bmV3IGEoZSxuLGksZS5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1oscixvLHMsbCx1KSx0aGlzLnNhbXBsZXI9dm9pZCAwfTtyZXR1cm4gaShoLnByb3RvdHlwZSx7cG9zaXRpdmVYOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcG9zaXRpdmVYfX0sbmVnYXRpdmVYOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbmVnYXRpdmVYfX0scG9zaXRpdmVZOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcG9zaXRpdmVZfX0sbmVnYXRpdmVZOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbmVnYXRpdmVZfX0scG9zaXRpdmVaOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcG9zaXRpdmVafX0sbmVnYXRpdmVaOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbmVnYXRpdmVafX0sc2FtcGxlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NhbXBsZXJ9LHNldDpmdW5jdGlvbihlKXt2YXIgaT0hMDtpZighdChlKSl7aT0hMTt2YXIgbj1jLkxJTkVBUixvPXUuTElORUFSO3RoaXMuX3BpeGVsRGF0YXR5cGU9PT1sLkZMT0FUJiYobj1jLk5FQVJFU1Qsbz11Lk5FQVJFU1QpLGU9e3dyYXBTOmQuQ0xBTVBfVE9fRURHRSx3cmFwVDpkLkNMQU1QX1RPX0VER0UsbWluaWZpY2F0aW9uRmlsdGVyOm4sbWFnbmlmaWNhdGlvbkZpbHRlcjpvLG1heGltdW1Bbmlzb3Ryb3B5OjF9fWlmKHRoaXMuX3BpeGVsRGF0YXR5cGU9PT1sLkZMT0FUKXtpZihlLm1pbmlmaWNhdGlvbkZpbHRlciE9PWMuTkVBUkVTVCYmZS5taW5pZmljYXRpb25GaWx0ZXIhPT1jLk5FQVJFU1RfTUlQTUFQX05FQVJFU1QpdGhyb3cgbmV3IHIoIk9ubHkgTkVBUkVTVCBhbmQgTkVBUkVTVF9NSVBNQVBfTkVBUkVTVCBtaW5pZmljYXRpb24gZmlsdGVycyBhcmUgc3VwcG9ydGVkIGZvciBmbG9hdGluZyBwb2ludCB0ZXh0dXJlcy4iKTtpZihlLm1hZ25pZmljYXRpb25GaWx0ZXIhPT11Lk5FQVJFU1QpdGhyb3cgbmV3IHIoIk9ubHkgdGhlIE5FQVJFU1QgbWFnbmlmaWNhdGlvbiBmaWx0ZXIgaXMgc3VwcG9ydGVkIGZvciBmbG9hdGluZyBwb2ludCB0ZXh0dXJlcy4iKX12YXIgYT10aGlzLl9nbCxzPXRoaXMuX3RleHR1cmVUYXJnZXQ7YS5hY3RpdmVUZXh0dXJlKGEuVEVYVFVSRTApLGEuYmluZFRleHR1cmUocyx0aGlzLl90ZXh0dXJlKSxhLnRleFBhcmFtZXRlcmkocyxhLlRFWFRVUkVfTUlOX0ZJTFRFUixlLm1pbmlmaWNhdGlvbkZpbHRlciksYS50ZXhQYXJhbWV0ZXJpKHMsYS5URVhUVVJFX01BR19GSUxURVIsZS5tYWduaWZpY2F0aW9uRmlsdGVyKSxhLnRleFBhcmFtZXRlcmkocyxhLlRFWFRVUkVfV1JBUF9TLGUud3JhcFMpLGEudGV4UGFyYW1ldGVyaShzLGEuVEVYVFVSRV9XUkFQX1QsZS53cmFwVCksdCh0aGlzLl90ZXh0dXJlRmlsdGVyQW5pc290cm9waWMpJiZhLnRleFBhcmFtZXRlcmkocyx0aGlzLl90ZXh0dXJlRmlsdGVyQW5pc290cm9waWMuVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQsZS5tYXhpbXVtQW5pc290cm9weSksYS5iaW5kVGV4dHVyZShzLG51bGwpLHRoaXMuX3NhbXBsZXI9aT97d3JhcFM6ZS53cmFwUyx3cmFwVDplLndyYXBULG1pbmlmaWNhdGlvbkZpbHRlcjplLm1pbmlmaWNhdGlvbkZpbHRlcixtYWduaWZpY2F0aW9uRmlsdGVyOmUubWFnbmlmaWNhdGlvbkZpbHRlcixtYXhpbXVtQW5pc290cm9weTplLm1heGltdW1Bbmlzb3Ryb3B5fTp2b2lkIDAKfX0scGl4ZWxGb3JtYXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbEZvcm1hdH19LHBpeGVsRGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbERhdGF0eXBlfX0sd2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zaXplfX0saGVpZ2h0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2l6ZX19LHByZU11bHRpcGx5QWxwaGE6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcmVNdWx0aXBseUFscGhhfX0sZmxpcFk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mbGlwWX19LF90YXJnZXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXh0dXJlVGFyZ2V0fX19KSxoLnByb3RvdHlwZS5nZW5lcmF0ZU1pcG1hcD1mdW5jdGlvbih0KXt0PWUodCxzLkRPTlRfQ0FSRSk7dmFyIGk9dGhpcy5fZ2wsbj10aGlzLl90ZXh0dXJlVGFyZ2V0O2kuaGludChpLkdFTkVSQVRFX01JUE1BUF9ISU5ULHQpLGkuYWN0aXZlVGV4dHVyZShpLlRFWFRVUkUwKSxpLmJpbmRUZXh0dXJlKG4sdGhpcy5fdGV4dHVyZSksaS5nZW5lcmF0ZU1pcG1hcChuKSxpLmJpbmRUZXh0dXJlKG4sbnVsbCl9LGgucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGgucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2wuZGVsZXRlVGV4dHVyZSh0aGlzLl90ZXh0dXJlKSx0aGlzLl9wb3NpdGl2ZVg9bih0aGlzLl9wb3NpdGl2ZVgpLHRoaXMuX25lZ2F0aXZlWD1uKHRoaXMuX25lZ2F0aXZlWCksdGhpcy5fcG9zaXRpdmVZPW4odGhpcy5fcG9zaXRpdmVZKSx0aGlzLl9uZWdhdGl2ZVk9bih0aGlzLl9uZWdhdGl2ZVkpLHRoaXMuX3Bvc2l0aXZlWj1uKHRoaXMuX3Bvc2l0aXZlWiksdGhpcy5fbmVnYXRpdmVaPW4odGhpcy5fbmVnYXRpdmVaKSxuKHRoaXMpfSxofSksZGVmaW5lKCJSZW5kZXJlci9UZXh0dXJlIixbIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvUGl4ZWxGb3JtYXQiLCIuL01pcG1hcEhpbnQiLCIuL1BpeGVsRGF0YXR5cGUiLCIuL1RleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyIiwiLi9UZXh0dXJlTWluaWZpY2F0aW9uRmlsdGVyIiwiLi9UZXh0dXJlV3JhcCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgpeyJ1c2Ugc3RyaWN0Ijt2YXIgbT1mdW5jdGlvbihuLHIpe3I9dChyLHQuRU1QVFlfT0JKRUNUKTt2YXIgYT1yLnNvdXJjZSxsPWkoYSk/YS53aWR0aDpyLndpZHRoLGM9aShhKT9hLmhlaWdodDpyLmhlaWdodCxkPXQoci5waXhlbEZvcm1hdCxzLlJHQkEpLGg9dChyLnBpeGVsRGF0YXR5cGUsdS5VTlNJR05FRF9CWVRFKTtpZihoPT09dS5GTE9BVCYmIW4uZmxvYXRpbmdQb2ludFRleHR1cmUpdGhyb3cgbmV3IG8oIldoZW4gb3B0aW9ucy5waXhlbERhdGF0eXBlIGlzIEZMT0FULCB0aGlzIFdlYkdMIGltcGxlbWVudGF0aW9uIG11c3Qgc3VwcG9ydCB0aGUgT0VTX3RleHR1cmVfZmxvYXQgZXh0ZW5zaW9uLiAgQ2hlY2sgY29udGV4dC5mbG9hdGluZ1BvaW50VGV4dHVyZS4iKTtpZihzLmlzRGVwdGhGb3JtYXQoZCkmJiFuLmRlcHRoVGV4dHVyZSl0aHJvdyBuZXcgbygiV2hlbiBvcHRpb25zLnBpeGVsRm9ybWF0IGlzIERFUFRIX0NPTVBPTkVOVCBvciBERVBUSF9TVEVOQ0lMLCB0aGlzIFdlYkdMIGltcGxlbWVudGF0aW9uIG11c3Qgc3VwcG9ydCBXRUJHTF9kZXB0aF90ZXh0dXJlLiAgQ2hlY2sgY29udGV4dC5kZXB0aFRleHR1cmUuIik7dmFyIG09ci5wcmVNdWx0aXBseUFscGhhfHxkPT09cy5SR0J8fGQ9PT1zLkxVTUlOQU5DRSxmPXQoci5mbGlwWSwhMCkscD1uLl9nbCx2PXAuVEVYVFVSRV8yRCxnPXAuY3JlYXRlVGV4dHVyZSgpO3AuYWN0aXZlVGV4dHVyZShwLlRFWFRVUkUwKSxwLmJpbmRUZXh0dXJlKHYsZyksaShhKT8ocC5waXhlbFN0b3JlaShwLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCxtKSxwLnBpeGVsU3RvcmVpKHAuVU5QQUNLX0ZMSVBfWV9XRUJHTCxmKSxpKGEuYXJyYXlCdWZmZXJWaWV3KT9wLnRleEltYWdlMkQodiwwLGQsbCxjLDAsZCxoLGEuYXJyYXlCdWZmZXJWaWV3KTppKGEuZnJhbWVidWZmZXIpPyhhLmZyYW1lYnVmZmVyIT09bi5kZWZhdWx0RnJhbWVidWZmZXImJmEuZnJhbWVidWZmZXIuX2JpbmQoKSxwLmNvcHlUZXhJbWFnZTJEKHYsMCxkLGEueE9mZnNldCxhLnlPZmZzZXQsbCxjLDApLGEuZnJhbWVidWZmZXIhPT1uLmRlZmF1bHRGcmFtZWJ1ZmZlciYmYS5mcmFtZWJ1ZmZlci5fdW5CaW5kKCkpOnAudGV4SW1hZ2UyRCh2LDAsZCxkLGgsYSkpOnAudGV4SW1hZ2UyRCh2LDAsZCxsLGMsMCxkLGgsbnVsbCkscC5iaW5kVGV4dHVyZSh2LG51bGwpLHRoaXMuX2NvbnRleHQ9bix0aGlzLl90ZXh0dXJlRmlsdGVyQW5pc290cm9waWM9bi5fdGV4dHVyZUZpbHRlckFuaXNvdHJvcGljLHRoaXMuX3RleHR1cmVUYXJnZXQ9dix0aGlzLl90ZXh0dXJlPWcsdGhpcy5fcGl4ZWxGb3JtYXQ9ZCx0aGlzLl9waXhlbERhdGF0eXBlPWgsdGhpcy5fd2lkdGg9bCx0aGlzLl9oZWlnaHQ9Yyx0aGlzLl9kaW1lbnNpb25zPW5ldyBlKGwsYyksdGhpcy5fcHJlTXVsdGlwbHlBbHBoYT1tLHRoaXMuX2ZsaXBZPWYsdGhpcy5fc2FtcGxlcj12b2lkIDAsdGhpcy5zYW1wbGVyPXZvaWQgMH07cmV0dXJuIG4obS5wcm90b3R5cGUse3NhbXBsZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zYW1wbGVyfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ITA7aWYoIWkoZSkpe3Q9ITE7dmFyIG49ZC5MSU5FQVIscj1jLkxJTkVBUjt0aGlzLl9waXhlbERhdGF0eXBlPT09dS5GTE9BVCYmKG49ZC5ORUFSRVNULHI9Yy5ORUFSRVNUKSxlPXt3cmFwUzpoLkNMQU1QX1RPX0VER0Usd3JhcFQ6aC5DTEFNUF9UT19FREdFLG1pbmlmaWNhdGlvbkZpbHRlcjpuLG1hZ25pZmljYXRpb25GaWx0ZXI6cixtYXhpbXVtQW5pc290cm9weToxfX1pZih0aGlzLl9waXhlbERhdGF0eXBlPT09dS5GTE9BVCl7aWYoZS5taW5pZmljYXRpb25GaWx0ZXIhPT1kLk5FQVJFU1QmJmUubWluaWZpY2F0aW9uRmlsdGVyIT09ZC5ORUFSRVNUX01JUE1BUF9ORUFSRVNUKXRocm93IG5ldyBvKCJPbmx5IE5FQVJFU1QgYW5kIE5FQVJFU1RfTUlQTUFQX05FQVJFU1QgbWluaWZpY2F0aW9uIGZpbHRlcnMgYXJlIHN1cHBvcnRlZCBmb3IgZmxvYXRpbmcgcG9pbnQgdGV4dHVyZXMuIik7aWYoZS5tYWduaWZpY2F0aW9uRmlsdGVyIT09Yy5ORUFSRVNUKXRocm93IG5ldyBvKCJPbmx5IHRoZSBORUFSRVNUIG1hZ25pZmljYXRpb24gZmlsdGVyIGlzIHN1cHBvcnRlZCBmb3IgZmxvYXRpbmcgcG9pbnQgdGV4dHVyZXMuIil9dmFyIGE9dGhpcy5fY29udGV4dC5fZ2wscz10aGlzLl90ZXh0dXJlVGFyZ2V0O2EuYWN0aXZlVGV4dHVyZShhLlRFWFRVUkUwKSxhLmJpbmRUZXh0dXJlKHMsdGhpcy5fdGV4dHVyZSksYS50ZXhQYXJhbWV0ZXJpKHMsYS5URVhUVVJFX01JTl9GSUxURVIsZS5taW5pZmljYXRpb25GaWx0ZXIpLGEudGV4UGFyYW1ldGVyaShzLGEuVEVYVFVSRV9NQUdfRklMVEVSLGUubWFnbmlmaWNhdGlvbkZpbHRlciksYS50ZXhQYXJhbWV0ZXJpKHMsYS5URVhUVVJFX1dSQVBfUyxlLndyYXBTKSxhLnRleFBhcmFtZXRlcmkocyxhLlRFWFRVUkVfV1JBUF9ULGUud3JhcFQpLGkodGhpcy5fdGV4dHVyZUZpbHRlckFuaXNvdHJvcGljKSYmYS50ZXhQYXJhbWV0ZXJpKHMsdGhpcy5fdGV4dHVyZUZpbHRlckFuaXNvdHJvcGljLlRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhULGUubWF4aW11bUFuaXNvdHJvcHkpLGEuYmluZFRleHR1cmUocyxudWxsKSx0aGlzLl9zYW1wbGVyPXQ/e3dyYXBTOmUud3JhcFMsd3JhcFQ6ZS53cmFwVCxtaW5pZmljYXRpb25GaWx0ZXI6ZS5taW5pZmljYXRpb25GaWx0ZXIsbWFnbmlmaWNhdGlvbkZpbHRlcjplLm1hZ25pZmljYXRpb25GaWx0ZXIsbWF4aW11bUFuaXNvdHJvcHk6ZS5tYXhpbXVtQW5pc290cm9weX06dm9pZCAwfX0scGl4ZWxGb3JtYXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbEZvcm1hdH19LHBpeGVsRGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbERhdGF0eXBlfX0sZGltZW5zaW9uczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RpbWVuc2lvbnN9fSxwcmVNdWx0aXBseUFscGhhOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJlTXVsdGlwbHlBbHBoYX19LGZsaXBZOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmxpcFl9fSx3aWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dpZHRofX0saGVpZ2h0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVpZ2h0fX0sX3RhcmdldDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RleHR1cmVUYXJnZXR9fX0pLG0ucHJvdG90eXBlLmNvcHlGcm9tPWZ1bmN0aW9uKGUsaSxuKXtpPXQoaSwwKSxuPXQobiwwKTt2YXIgcj10aGlzLl9jb250ZXh0Ll9nbCxvPXRoaXMuX3RleHR1cmVUYXJnZXQ7ci5waXhlbFN0b3JlaShyLlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCx0aGlzLl9wcmVNdWx0aXBseUFscGhhKSxyLnBpeGVsU3RvcmVpKHIuVU5QQUNLX0ZMSVBfWV9XRUJHTCx0aGlzLl9mbGlwWSksci5hY3RpdmVUZXh0dXJlKHIuVEVYVFVSRTApLHIuYmluZFRleHR1cmUobyx0aGlzLl90ZXh0dXJlKSxlLmFycmF5QnVmZmVyVmlldz9yLnRleFN1YkltYWdlMkQobywwLGksbixlLndpZHRoLGUuaGVpZ2h0LHRoaXMuX3BpeGVsRm9ybWF0LHRoaXMuX3BpeGVsRGF0YXR5cGUsZS5hcnJheUJ1ZmZlclZpZXcpOnIudGV4U3ViSW1hZ2UyRChvLDAsaSxuLHRoaXMuX3BpeGVsRm9ybWF0LHRoaXMuX3BpeGVsRGF0YXR5cGUsZSksci5iaW5kVGV4dHVyZShvLG51bGwpfSxtLnByb3RvdHlwZS5jb3B5RnJvbUZyYW1lYnVmZmVyPWZ1bmN0aW9uKGUsaSxuLHIsbyxhKXtlPXQoZSwwKSxpPXQoaSwwKSxuPXQobiwwKSxyPXQociwwKSxvPXQobyx0aGlzLl93aWR0aCksYT10KGEsdGhpcy5faGVpZ2h0KTt2YXIgcz10aGlzLl9jb250ZXh0Ll9nbCxsPXRoaXMuX3RleHR1cmVUYXJnZXQ7cy5hY3RpdmVUZXh0dXJlKHMuVEVYVFVSRTApLHMuYmluZFRleHR1cmUobCx0aGlzLl90ZXh0dXJlKSxzLmNvcHlUZXhTdWJJbWFnZTJEKGwsMCxlLGksbixyLG8sYSkscy5iaW5kVGV4dHVyZShsLG51bGwpfSxtLnByb3RvdHlwZS5nZW5lcmF0ZU1pcG1hcD1mdW5jdGlvbihlKXtlPXQoZSxsLkRPTlRfQ0FSRSk7dmFyIGk9dGhpcy5fY29udGV4dC5fZ2wsbj10aGlzLl90ZXh0dXJlVGFyZ2V0O2kuaGludChpLkdFTkVSQVRFX01JUE1BUF9ISU5ULGUpLGkuYWN0aXZlVGV4dHVyZShpLlRFWFRVUkUwKSxpLmJpbmRUZXh0dXJlKG4sdGhpcy5fdGV4dHVyZSksaS5nZW5lcmF0ZU1pcG1hcChuKSxpLmJpbmRUZXh0dXJlKG4sbnVsbCl9LG0ucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LG0ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGV4dC5fZ2wuZGVsZXRlVGV4dHVyZSh0aGlzLl90ZXh0dXJlKSxyKHRoaXMpfSxtfSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9CdW1wTWFwTWF0ZXJpYWwiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ1bmlmb3JtIHNhbXBsZXIyRCBpbWFnZTtcbnVuaWZvcm0gZmxvYXQgc3RyZW5ndGg7XG51bmlmb3JtIHZlYzIgcmVwZWF0O1xuXG5jem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcblxuICAgIHZlYzIgc3QgPSBtYXRlcmlhbElucHV0LnN0O1xuICAgIFxuICAgIHZlYzIgY2VudGVyUGl4ZWwgPSBmcmFjdChyZXBlYXQgKiBzdCk7XG4gICAgZmxvYXQgY2VudGVyQnVtcCA9IHRleHR1cmUyRChpbWFnZSwgY2VudGVyUGl4ZWwpLmNoYW5uZWw7XG4gICAgXG4gICAgZmxvYXQgaW1hZ2VXaWR0aCA9IGZsb2F0KGltYWdlRGltZW5zaW9ucy54KTtcbiAgICB2ZWMyIHJpZ2h0UGl4ZWwgPSBmcmFjdChyZXBlYXQgKiAoc3QgKyB2ZWMyKDEuMCAvIGltYWdlV2lkdGgsIDAuMCkpKTtcbiAgICBmbG9hdCByaWdodEJ1bXAgPSB0ZXh0dXJlMkQoaW1hZ2UsIHJpZ2h0UGl4ZWwpLmNoYW5uZWw7XG4gICAgXG4gICAgZmxvYXQgaW1hZ2VIZWlnaHQgPSBmbG9hdChpbWFnZURpbWVuc2lvbnMueSk7XG4gICAgdmVjMiBsZWZ0UGl4ZWwgPSBmcmFjdChyZXBlYXQgKiAoc3QgKyB2ZWMyKDAuMCwgMS4wIC8gaW1hZ2VIZWlnaHQpKSk7XG4gICAgZmxvYXQgdG9wQnVtcCA9IHRleHR1cmUyRChpbWFnZSwgbGVmdFBpeGVsKS5jaGFubmVsO1xuICAgIFxuICAgIHZlYzMgbm9ybWFsVGFuZ2VudFNwYWNlID0gbm9ybWFsaXplKHZlYzMoY2VudGVyQnVtcCAtIHJpZ2h0QnVtcCwgY2VudGVyQnVtcCAtIHRvcEJ1bXAsIGNsYW1wKDEuMCAtIHN0cmVuZ3RoLCAwLjEsIDEuMCkpKTtcbiAgICB2ZWMzIG5vcm1hbEVDID0gbWF0ZXJpYWxJbnB1dC50YW5nZW50VG9FeWVNYXRyaXggKiBub3JtYWxUYW5nZW50U3BhY2U7XG4gXG4gICAgbWF0ZXJpYWwubm9ybWFsID0gbm9ybWFsRUM7XG4gICAgbWF0ZXJpYWwuZGlmZnVzZSA9IHZlYzMoMC4wMSk7XG4gICAgXG4gICAgcmV0dXJuIG1hdGVyaWFsO1xufSJ9KSxkZWZpbmUoIlNoYWRlcnMvTWF0ZXJpYWxzL0NoZWNrZXJib2FyZE1hdGVyaWFsIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4idW5pZm9ybSB2ZWM0IGxpZ2h0Q29sb3I7XG51bmlmb3JtIHZlYzQgZGFya0NvbG9yO1xudW5pZm9ybSB2ZWMyIHJlcGVhdDtcblxuY3ptX21hdGVyaWFsIGN6bV9nZXRNYXRlcmlhbChjem1fbWF0ZXJpYWxJbnB1dCBtYXRlcmlhbElucHV0KVxue1xuICAgIGN6bV9tYXRlcmlhbCBtYXRlcmlhbCA9IGN6bV9nZXREZWZhdWx0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7XG5cbiAgICB2ZWMyIHN0ID0gbWF0ZXJpYWxJbnB1dC5zdDtcbiAgICBcbiAgICAvLyBGcm9tIFN0ZWZhbiBHdXN0YXZzb24ncyBQcm9jZWR1cmFsIFRleHR1cmVzIGluIEdMU0wgaW4gT3BlbkdMIEluc2lnaHRzXG4gICAgZmxvYXQgYiA9IG1vZChmbG9vcihyZXBlYXQucyAqIHN0LnMpICsgZmxvb3IocmVwZWF0LnQgKiBzdC50KSwgMi4wKTsgIC8vIDAuMCBvciAxLjBcbiAgICBcbiAgICAvLyBGaW5kIHRoZSBkaXN0YW5jZSBmcm9tIHRoZSBjbG9zZXN0IHNlcGFyYXRvciAocmVnaW9uIGJldHdlZW4gdHdvIGNvbG9ycylcbiAgICBmbG9hdCBzY2FsZWRXaWR0aCA9IGZyYWN0KHJlcGVhdC5zICogc3Qucyk7XG4gICAgc2NhbGVkV2lkdGggPSBhYnMoc2NhbGVkV2lkdGggLSBmbG9vcihzY2FsZWRXaWR0aCArIDAuNSkpO1xuICAgIGZsb2F0IHNjYWxlZEhlaWdodCA9IGZyYWN0KHJlcGVhdC50ICogc3QudCk7XG4gICAgc2NhbGVkSGVpZ2h0ID0gYWJzKHNjYWxlZEhlaWdodCAtIGZsb29yKHNjYWxlZEhlaWdodCArIDAuNSkpO1xuICAgIGZsb2F0IHZhbHVlID0gbWluKHNjYWxlZFdpZHRoLCBzY2FsZWRIZWlnaHQpO1xuICAgIFxuICAgIHZlYzQgY3VycmVudENvbG9yID0gbWl4KGxpZ2h0Q29sb3IsIGRhcmtDb2xvciwgYik7XG4gICAgdmVjNCBjb2xvciA9IGN6bV9hbnRpYWxpYXMobGlnaHRDb2xvciwgZGFya0NvbG9yLCBjdXJyZW50Q29sb3IsIHZhbHVlLCAwLjAzKTtcbiAgICBcbiAgICBtYXRlcmlhbC5kaWZmdXNlID0gY29sb3IucmdiO1xuICAgIG1hdGVyaWFsLmFscGhhID0gY29sb3IuYTtcbiAgICBcbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9Eb3RNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBsaWdodENvbG9yO1xudW5pZm9ybSB2ZWM0IGRhcmtDb2xvcjtcbnVuaWZvcm0gdmVjMiByZXBlYXQ7XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuICAgIC8vIEZyb20gU3RlZmFuIEd1c3RhdnNvbidzIFByb2NlZHVyYWwgVGV4dHVyZXMgaW4gR0xTTCBpbiBPcGVuR0wgSW5zaWdodHNcbiAgICBmbG9hdCBiID0gc21vb3Roc3RlcCgwLjMsIDAuMzIsIGxlbmd0aChmcmFjdChyZXBlYXQgKiBtYXRlcmlhbElucHV0LnN0KSAtIDAuNSkpOyAgLy8gMC4wIG9yIDEuMFxuXG4gICAgdmVjNCBjb2xvciA9IG1peChsaWdodENvbG9yLCBkYXJrQ29sb3IsIGIpO1xuICAgIG1hdGVyaWFsLmRpZmZ1c2UgPSBjb2xvci5yZ2I7XG4gICAgbWF0ZXJpYWwuYWxwaGEgPSBjb2xvci5hO1xuICAgIFxuICAgIHJldHVybiBtYXRlcmlhbDtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvTWF0ZXJpYWxzL0ZhZGVNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBmYWRlSW5Db2xvcjtcbnVuaWZvcm0gdmVjNCBmYWRlT3V0Q29sb3I7XG51bmlmb3JtIGZsb2F0IG1heGltdW1EaXN0YW5jZTtcbnVuaWZvcm0gYm9vbCByZXBlYXQ7XG51bmlmb3JtIHZlYzIgZmFkZURpcmVjdGlvbjtcbnVuaWZvcm0gdmVjMiB0aW1lO1xuXG5mbG9hdCBnZXRUaW1lKGZsb2F0IHQsIGZsb2F0IGNvb3JkKVxue1xuICAgIGZsb2F0IHNjYWxhciA9IDEuMCAvIG1heGltdW1EaXN0YW5jZTtcbiAgICBmbG9hdCBxICA9IGRpc3RhbmNlKHQsIGNvb3JkKSAqIHNjYWxhcjtcbiAgICBpZiAocmVwZWF0KVxuICAgIHtcbiAgICAgICAgZmxvYXQgciA9IGRpc3RhbmNlKHQsIGNvb3JkICsgMS4wKSAqIHNjYWxhcjtcbiAgICAgICAgZmxvYXQgcyA9IGRpc3RhbmNlKHQsIGNvb3JkIC0gMS4wKSAqIHNjYWxhcjtcbiAgICAgICAgcSA9IG1pbihtaW4ociwgcyksIHEpO1xuICAgIH1cbiAgICByZXR1cm4gY2xhbXAocSwgMC4wLCAxLjApO1xufVxuXG5jem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcbiAgICBcbiAgICB2ZWMyIHN0ID0gbWF0ZXJpYWxJbnB1dC5zdDtcbiAgICBmbG9hdCBzID0gZ2V0VGltZSh0aW1lLngsIHN0LnMpICogZmFkZURpcmVjdGlvbi5zO1xuICAgIGZsb2F0IHQgPSBnZXRUaW1lKHRpbWUueSwgc3QudCkgKiBmYWRlRGlyZWN0aW9uLnQ7XG4gICAgXG4gICAgZmxvYXQgdSA9IGxlbmd0aCh2ZWMyKHMsIHQpKTtcbiAgICB2ZWM0IGNvbG9yID0gbWl4KGZhZGVJbkNvbG9yLCBmYWRlT3V0Q29sb3IsIHUpO1xuICAgIFxuICAgIG1hdGVyaWFsLmVtaXNzaW9uID0gY29sb3IucmdiO1xuICAgIG1hdGVyaWFsLmFscGhhID0gY29sb3IuYTtcbiAgICBcbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9HcmlkTWF0ZXJpYWwiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybicjaWZkZWYgR0xfT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzXG4gICAgI2V4dGVuc2lvbiBHTF9PRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMgOiBlbmFibGVcbiNlbmRpZlxuXG51bmlmb3JtIHZlYzQgY29sb3I7XG51bmlmb3JtIGZsb2F0IGNlbGxBbHBoYTtcbnVuaWZvcm0gdmVjMiBsaW5lQ291bnQ7XG51bmlmb3JtIHZlYzIgbGluZVRoaWNrbmVzcztcbnVuaWZvcm0gdmVjMiBsaW5lT2Zmc2V0O1xuXG5jem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcblxuICAgIHZlYzIgc3QgPSBtYXRlcmlhbElucHV0LnN0O1xuXG4gICAgZmxvYXQgc2NhbGVkV2lkdGggPSBmcmFjdChsaW5lQ291bnQucyAqIHN0LnMgLSBsaW5lT2Zmc2V0LnMpO1xuICAgIHNjYWxlZFdpZHRoID0gYWJzKHNjYWxlZFdpZHRoIC0gZmxvb3Ioc2NhbGVkV2lkdGggKyAwLjUpKTtcbiAgICBmbG9hdCBzY2FsZWRIZWlnaHQgPSBmcmFjdChsaW5lQ291bnQudCAqIHN0LnQgLSBsaW5lT2Zmc2V0LnQpO1xuICAgIHNjYWxlZEhlaWdodCA9IGFicyhzY2FsZWRIZWlnaHQgLSBmbG9vcihzY2FsZWRIZWlnaHQgKyAwLjUpKTtcblxuICAgIGZsb2F0IHZhbHVlO1xuI2lmZGVmIEdMX09FU19zdGFuZGFyZF9kZXJpdmF0aXZlc1xuICAgIC8vIEZ1enogRmFjdG9yIC0gQ29udHJvbHMgYmx1cnJpbmVzcyBvZiBsaW5lc1xuICAgIGNvbnN0IGZsb2F0IGZ1enogPSAxLjI7XG4gICAgdmVjMiB0aGlja25lc3MgPSAobGluZVRoaWNrbmVzcyAqIGN6bV9yZXNvbHV0aW9uU2NhbGUpIC0gMS4wO1xuXG4gICAgLy8gRnJvbSAiM0QgRW5naW5lIERlc2lnbiBmb3IgVmlydHVhbCBHbG9iZXMiIGJ5IENvenppIGFuZCBSaW5nLCBMaXN0aW5nIDQuMTMuXG4gICAgdmVjMiBkeCA9IGFicyhkRmR4KHN0KSk7XG4gICAgdmVjMiBkeSA9IGFicyhkRmR5KHN0KSk7XG4gICAgdmVjMiBkRiA9IHZlYzIobWF4KGR4LnMsIGR5LnMpLCBtYXgoZHgudCwgZHkudCkpICogbGluZUNvdW50O1xuICAgIHZhbHVlID0gbWluKFxuICAgICAgICBzbW9vdGhzdGVwKGRGLnMgKiB0aGlja25lc3MucywgZEYucyAqIChmdXp6ICsgdGhpY2tuZXNzLnMpLCBzY2FsZWRXaWR0aCksXG4gICAgICAgIHNtb290aHN0ZXAoZEYudCAqIHRoaWNrbmVzcy50LCBkRi50ICogKGZ1enogKyB0aGlja25lc3MudCksIHNjYWxlZEhlaWdodCkpO1xuI2Vsc2VcbiAgICAvLyBGdXp6IEZhY3RvciAtIENvbnRyb2xzIGJsdXJyaW5lc3Mgb2YgbGluZXNcbiAgICBjb25zdCBmbG9hdCBmdXp6ID0gMC4wNTtcblxuICAgIHZlYzIgcmFuZ2UgPSAwLjUgLSAobGluZVRoaWNrbmVzcyAqIDAuMDUpO1xuICAgIHZhbHVlID0gbWluKFxuICAgICAgICAxLjAgLSBzbW9vdGhzdGVwKHJhbmdlLnMsIHJhbmdlLnMgKyBmdXp6LCBzY2FsZWRXaWR0aCksXG4gICAgICAgIDEuMCAtIHNtb290aHN0ZXAocmFuZ2UudCwgcmFuZ2UudCArIGZ1enosIHNjYWxlZEhlaWdodCkpO1xuI2VuZGlmXG5cbiAgICAvLyBFZGdlcyB0YWtlbiBmcm9tIFJpbUxpZ2h0aW5nTWF0ZXJpYWwuZ2xzbFxuICAgIC8vIFNlZSBodHRwOi8vd3d3LmZ1bmR6YS5jb20vcm1hbl9zaGFkZXJzL3N1cmZhY2UvZmFrZV9yaW0vZmFrZV9yaW0xLmh0bWxcbiAgICBmbG9hdCBkUmltID0gMS4wIC0gYWJzKGRvdChtYXRlcmlhbElucHV0Lm5vcm1hbEVDLCBub3JtYWxpemUobWF0ZXJpYWxJbnB1dC5wb3NpdGlvblRvRXllRUMpKSk7XG4gICAgZmxvYXQgc1JpbSA9IHNtb290aHN0ZXAoMC44LCAxLjAsIGRSaW0pO1xuICAgIHZhbHVlICo9ICgxLjAgLSBzUmltKTtcblxuICAgIHZlYzMgaGFsZkNvbG9yID0gY29sb3IucmdiICogMC41O1xuICAgIG1hdGVyaWFsLmRpZmZ1c2UgPSBoYWxmQ29sb3I7XG4gICAgbWF0ZXJpYWwuZW1pc3Npb24gPSBoYWxmQ29sb3I7XG4gICAgbWF0ZXJpYWwuYWxwaGEgPSBjb2xvci5hICogKDEuMCAtICgoMS4wIC0gY2VsbEFscGhhKSAqIHZhbHVlKSk7XG5cbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4nfSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9Ob3JtYWxNYXBNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gc2FtcGxlcjJEIGltYWdlO1xudW5pZm9ybSBmbG9hdCBzdHJlbmd0aDtcbnVuaWZvcm0gdmVjMiByZXBlYXQ7XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuICAgIHZlYzQgdGV4dHVyZVZhbHVlID0gdGV4dHVyZTJEKGltYWdlLCBmcmFjdChyZXBlYXQgKiBtYXRlcmlhbElucHV0LnN0KSk7XG4gICAgdmVjMyBub3JtYWxUYW5nZW50U3BhY2UgPSB0ZXh0dXJlVmFsdWUuY2hhbm5lbHM7XG4gICAgbm9ybWFsVGFuZ2VudFNwYWNlLnh5ID0gbm9ybWFsVGFuZ2VudFNwYWNlLnh5ICogMi4wIC0gMS4wO1xuICAgIG5vcm1hbFRhbmdlbnRTcGFjZS56ID0gY2xhbXAoMS4wIC0gc3RyZW5ndGgsIDAuMSwgMS4wKTtcbiAgICBub3JtYWxUYW5nZW50U3BhY2UgPSBub3JtYWxpemUobm9ybWFsVGFuZ2VudFNwYWNlKTtcbiAgICB2ZWMzIG5vcm1hbEVDID0gbWF0ZXJpYWxJbnB1dC50YW5nZW50VG9FeWVNYXRyaXggKiBub3JtYWxUYW5nZW50U3BhY2U7XG4gICAgXG4gICAgbWF0ZXJpYWwubm9ybWFsID0gbm9ybWFsRUM7XG4gICAgXG4gICAgcmV0dXJuIG1hdGVyaWFsO1xufSJ9KSxkZWZpbmUoIlNoYWRlcnMvTWF0ZXJpYWxzL1BvbHlsaW5lQXJyb3dNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIiNleHRlbnNpb24gR0xfT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIDogZW5hYmxlXG5cbnVuaWZvcm0gdmVjNCBjb2xvcjtcblxudmFyeWluZyBmbG9hdCB2X3dpZHRoO1xuXG5mbG9hdCBnZXRQb2ludE9uTGluZSh2ZWMyIHAwLCB2ZWMyIHAxLCBmbG9hdCB4KVxue1xuICAgIGZsb2F0IHNsb3BlID0gKHAwLnkgLSBwMS55KSAvIChwMC54IC0gcDEueCk7XG4gICAgcmV0dXJuIHNsb3BlICogKHggLSBwMC54KSArIHAwLnk7XG59XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuICAgIFxuICAgIHZlYzIgc3QgPSBtYXRlcmlhbElucHV0LnN0O1xuICAgIFxuICAgIGZsb2F0IGJhc2UgPSAxLjAgLSBhYnMoZndpZHRoKHN0LnMpKSAqIDEwLjA7XG4gICAgdmVjMiBjZW50ZXIgPSB2ZWMyKDEuMCwgMC41KTtcbiAgICBmbG9hdCBwdE9uVXBwZXJMaW5lID0gZ2V0UG9pbnRPbkxpbmUodmVjMihiYXNlLCAxLjApLCBjZW50ZXIsIHN0LnMpO1xuICAgIGZsb2F0IHB0T25Mb3dlckxpbmUgPSBnZXRQb2ludE9uTGluZSh2ZWMyKGJhc2UsIDAuMCksIGNlbnRlciwgc3Qucyk7XG4gICAgXG4gICAgZmxvYXQgaGFsZldpZHRoID0gMC4xNTtcbiAgICBmbG9hdCBzID0gc3RlcCgwLjUgLSBoYWxmV2lkdGgsIHN0LnQpO1xuICAgIHMgKj0gMS4wIC0gc3RlcCgwLjUgKyBoYWxmV2lkdGgsIHN0LnQpO1xuICAgIHMgKj0gMS4wIC0gc3RlcChiYXNlLCBzdC5zKTtcbiAgICBcbiAgICBmbG9hdCB0ID0gc3RlcChiYXNlLCBtYXRlcmlhbElucHV0LnN0LnMpO1xuICAgIHQgKj0gMS4wIC0gc3RlcChwdE9uVXBwZXJMaW5lLCBzdC50KTtcbiAgICB0ICo9IHN0ZXAocHRPbkxvd2VyTGluZSwgc3QudCk7XG4gICAgXG4gICAgLy8gRmluZCB0aGUgZGlzdGFuY2UgZnJvbSB0aGUgY2xvc2VzdCBzZXBhcmF0b3IgKHJlZ2lvbiBiZXR3ZWVuIHR3byBjb2xvcnMpXG4gICAgZmxvYXQgZGlzdDtcbiAgICBpZiAoc3QucyA8IGJhc2UpXG4gICAge1xuICAgICAgICBmbG9hdCBkMSA9IGFicyhzdC50IC0gKDAuNSAtIGhhbGZXaWR0aCkpO1xuICAgICAgICBmbG9hdCBkMiA9IGFicyhzdC50IC0gKDAuNSArIGhhbGZXaWR0aCkpO1xuICAgICAgICBkaXN0ID0gbWluKGQxLCBkMik7XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIGZsb2F0IGQxID0gY3ptX2luZmluaXR5O1xuICAgICAgICBpZiAoc3QudCA8IDAuNSAtIGhhbGZXaWR0aCAmJiBzdC50ID4gMC41ICsgaGFsZldpZHRoKVxuICAgICAgICB7XG4gICAgICAgICAgICBkMSA9IGFicyhzdC5zIC0gYmFzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZmxvYXQgZDIgPSBhYnMoc3QudCAtIHB0T25VcHBlckxpbmUpO1xuICAgICAgICBmbG9hdCBkMyA9IGFicyhzdC50IC0gcHRPbkxvd2VyTGluZSk7XG4gICAgICAgIGRpc3QgPSBtaW4obWluKGQxLCBkMiksIGQzKTtcbiAgICB9XG4gICAgXG4gICAgdmVjNCBvdXRzaWRlQ29sb3IgPSB2ZWM0KDAuMCk7XG4gICAgdmVjNCBjdXJyZW50Q29sb3IgPSBtaXgob3V0c2lkZUNvbG9yLCBjb2xvciwgY2xhbXAocyArIHQsIDAuMCwgMS4wKSk7XG4gICAgdmVjNCBvdXRDb2xvciA9IGN6bV9hbnRpYWxpYXMob3V0c2lkZUNvbG9yLCBjb2xvciwgY3VycmVudENvbG9yLCBkaXN0KTtcbiAgICBcbiAgICBtYXRlcmlhbC5kaWZmdXNlID0gb3V0Q29sb3IucmdiO1xuICAgIG1hdGVyaWFsLmFscGhhID0gb3V0Q29sb3IuYTtcbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9Qb2x5bGluZUdsb3dNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBjb2xvcjtcbnVuaWZvcm0gZmxvYXQgZ2xvd1Bvd2VyO1xuXG52YXJ5aW5nIGZsb2F0IHZfd2lkdGg7XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuXG4gICAgdmVjMiBzdCA9IG1hdGVyaWFsSW5wdXQuc3Q7XG4gICAgZmxvYXQgZ2xvdyA9IGdsb3dQb3dlciAvIGFicyhzdC50IC0gMC41KSAtIChnbG93UG93ZXIgLyAwLjUpO1xuXG4gICAgbWF0ZXJpYWwuZW1pc3Npb24gPSBtYXgodmVjMyhnbG93IC0gMS4wICsgY29sb3IucmdiKSwgY29sb3IucmdiKTtcbiAgICBtYXRlcmlhbC5hbHBoYSA9IGNsYW1wKDAuMCwgMS4wLCBnbG93KSAqIGNvbG9yLmE7XG5cbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9Qb2x5bGluZU91dGxpbmVNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBjb2xvcjtcbnVuaWZvcm0gdmVjNCBvdXRsaW5lQ29sb3I7XG51bmlmb3JtIGZsb2F0IG91dGxpbmVXaWR0aDtcblxudmFyeWluZyBmbG9hdCB2X3dpZHRoO1xuXG5jem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcbiAgICBcbiAgICB2ZWMyIHN0ID0gbWF0ZXJpYWxJbnB1dC5zdDtcbiAgICBmbG9hdCBoYWxmSW50ZXJpb3JXaWR0aCA9ICAwLjUgKiAodl93aWR0aCAtIG91dGxpbmVXaWR0aCkgLyB2X3dpZHRoO1xuICAgIGZsb2F0IGIgPSBzdGVwKDAuNSAtIGhhbGZJbnRlcmlvcldpZHRoLCBzdC50KTtcbiAgICBiICo9IDEuMCAtIHN0ZXAoMC41ICsgaGFsZkludGVyaW9yV2lkdGgsIHN0LnQpO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGRpc3RhbmNlIGZyb20gdGhlIGNsb3Nlc3Qgc2VwYXJhdG9yIChyZWdpb24gYmV0d2VlbiB0d28gY29sb3JzKVxuICAgIGZsb2F0IGQxID0gYWJzKHN0LnQgLSAoMC41IC0gaGFsZkludGVyaW9yV2lkdGgpKTtcbiAgICBmbG9hdCBkMiA9IGFicyhzdC50IC0gKDAuNSArIGhhbGZJbnRlcmlvcldpZHRoKSk7XG4gICAgZmxvYXQgZGlzdCA9IG1pbihkMSwgZDIpO1xuICAgIFxuICAgIHZlYzQgY3VycmVudENvbG9yID0gbWl4KG91dGxpbmVDb2xvciwgY29sb3IsIGIpO1xuICAgIHZlYzQgb3V0Q29sb3IgPSBjem1fYW50aWFsaWFzKG91dGxpbmVDb2xvciwgY29sb3IsIGN1cnJlbnRDb2xvciwgZGlzdCk7XG4gICAgXG4gICAgbWF0ZXJpYWwuZGlmZnVzZSA9IG91dENvbG9yLnJnYjtcbiAgICBtYXRlcmlhbC5hbHBoYSA9IG91dENvbG9yLmE7XG4gICAgXG4gICAgcmV0dXJuIG1hdGVyaWFsO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9NYXRlcmlhbHMvUmltTGlnaHRpbmdNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBjb2xvcjtcbnVuaWZvcm0gdmVjNCByaW1Db2xvcjtcbnVuaWZvcm0gZmxvYXQgd2lkdGg7XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuXG4gICAgLy8gU2VlIGh0dHA6Ly93d3cuZnVuZHphLmNvbS9ybWFuX3NoYWRlcnMvc3VyZmFjZS9mYWtlX3JpbS9mYWtlX3JpbTEuaHRtbFxuICAgIGZsb2F0IGQgPSAxLjAgLSBkb3QobWF0ZXJpYWxJbnB1dC5ub3JtYWxFQywgbm9ybWFsaXplKG1hdGVyaWFsSW5wdXQucG9zaXRpb25Ub0V5ZUVDKSk7XG4gICAgZmxvYXQgcyA9IHNtb290aHN0ZXAoMS4wIC0gd2lkdGgsIDEuMCwgZCk7XG5cbiAgICBtYXRlcmlhbC5kaWZmdXNlID0gY29sb3IucmdiO1xuICAgIG1hdGVyaWFsLmVtaXNzaW9uID0gcmltQ29sb3IucmdiICogczsgXG4gICAgbWF0ZXJpYWwuYWxwaGEgPSBtaXgoY29sb3IuYSwgcmltQ29sb3IuYSwgcyk7XG5cbiAgICByZXR1cm4gbWF0ZXJpYWw7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL01hdGVyaWFscy9TdHJpcGVNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gdmVjNCBldmVuQ29sb3I7XG51bmlmb3JtIHZlYzQgb2RkQ29sb3I7XG51bmlmb3JtIGZsb2F0IG9mZnNldDtcbnVuaWZvcm0gZmxvYXQgcmVwZWF0O1xudW5pZm9ybSBib29sIGhvcml6b250YWw7XG5cbmN6bV9tYXRlcmlhbCBjem1fZ2V0TWF0ZXJpYWwoY3ptX21hdGVyaWFsSW5wdXQgbWF0ZXJpYWxJbnB1dClcbntcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0RGVmYXVsdE1hdGVyaWFsKG1hdGVyaWFsSW5wdXQpO1xuXG4gICAgLy8gQmFzZWQgb24gdGhlIFN0cmlwZXMgRnJhZ21lbnQgU2hhZGVyIGluIHRoZSBPcmFuZ2UgQm9vayAoMTEuMS4yKVxuICAgIGZsb2F0IGNvb3JkID0gbWl4KG1hdGVyaWFsSW5wdXQuc3QucywgbWF0ZXJpYWxJbnB1dC5zdC50LCBmbG9hdChob3Jpem9udGFsKSk7XG4gICAgZmxvYXQgdmFsdWUgPSBmcmFjdCgoY29vcmQgLSBvZmZzZXQpICogKHJlcGVhdCAqIDAuNSkpO1xuICAgIGZsb2F0IGRpc3QgPSBtaW4odmFsdWUsIG1pbihhYnModmFsdWUgLSAwLjUpLCAxLjAgLSB2YWx1ZSkpO1xuICAgIFxuICAgIHZlYzQgY3VycmVudENvbG9yID0gbWl4KGV2ZW5Db2xvciwgb2RkQ29sb3IsIHN0ZXAoMC41LCB2YWx1ZSkpO1xuICAgIHZlYzQgY29sb3IgPSBjem1fYW50aWFsaWFzKGV2ZW5Db2xvciwgb2RkQ29sb3IsIGN1cnJlbnRDb2xvciwgZGlzdCk7XG4gICAgXG4gICAgbWF0ZXJpYWwuZGlmZnVzZSA9IGNvbG9yLnJnYjtcbiAgICBtYXRlcmlhbC5hbHBoYSA9IGNvbG9yLmE7XG4gICAgXG4gICAgcmV0dXJuIG1hdGVyaWFsO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9NYXRlcmlhbHMvV2F0ZXIiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvLyBUaGFua3MgZm9yIHRoZSBjb250cmlidXRpb24gSm9uYXNcbi8vIGh0dHA6Ly8yOWEuY2gvMjAxMi83LzE5L3dlYmdsLXRlcnJhaW4tcmVuZGVyaW5nLXdhdGVyLWZvZ1xuXG51bmlmb3JtIHNhbXBsZXIyRCBzcGVjdWxhck1hcDtcbnVuaWZvcm0gc2FtcGxlcjJEIG5vcm1hbE1hcDtcbnVuaWZvcm0gdmVjNCBiYXNlV2F0ZXJDb2xvcjtcbnVuaWZvcm0gdmVjNCBibGVuZENvbG9yO1xudW5pZm9ybSBmbG9hdCBmcmVxdWVuY3k7XG51bmlmb3JtIGZsb2F0IGFuaW1hdGlvblNwZWVkO1xudW5pZm9ybSBmbG9hdCBhbXBsaXR1ZGU7XG51bmlmb3JtIGZsb2F0IHNwZWN1bGFySW50ZW5zaXR5O1xudW5pZm9ybSBmbG9hdCBmYWRlRmFjdG9yO1xuXG5jem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4gICAgY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcblxuICAgIGZsb2F0IHRpbWUgPSBjem1fZnJhbWVOdW1iZXIgKiBhbmltYXRpb25TcGVlZDtcbiAgICBcbiAgICAvLyBmYWRlIGlzIGEgZnVuY3Rpb24gb2YgdGhlIGRpc3RhbmNlIGZyb20gdGhlIGZyYWdtZW50IGFuZCB0aGUgZnJlcXVlbmN5IG9mIHRoZSB3YXZlc1xuICAgIGZsb2F0IGZhZGUgPSBtYXgoMS4wLCAobGVuZ3RoKG1hdGVyaWFsSW5wdXQucG9zaXRpb25Ub0V5ZUVDKSAvIDEwMDAwMDAwMDAwLjApICogZnJlcXVlbmN5ICogZmFkZUZhY3Rvcik7XG4gICAgICAgICAgICBcbiAgICBmbG9hdCBzcGVjdWxhck1hcFZhbHVlID0gdGV4dHVyZTJEKHNwZWN1bGFyTWFwLCBtYXRlcmlhbElucHV0LnN0KS5yO1xuICAgIFxuICAgIC8vIG5vdGU6IG5vdCB1c2luZyBkaXJlY3Rpb25hbCBtb3Rpb24gYXQgdGhpcyB0aW1lLCBqdXN0IHNldCB0aGUgYW5nbGUgdG8gMC4wO1xuICAgIHZlYzQgbm9pc2UgPSBjem1fZ2V0V2F0ZXJOb2lzZShub3JtYWxNYXAsIG1hdGVyaWFsSW5wdXQuc3QgKiBmcmVxdWVuY3ksIHRpbWUsIDAuMCk7XG4gICAgdmVjMyBub3JtYWxUYW5nZW50U3BhY2UgPSBub2lzZS54eXogKiB2ZWMzKDEuMCwgMS4wLCAoMS4wIC8gYW1wbGl0dWRlKSk7XG4gICAgXG4gICAgLy8gZmFkZSBvdXQgdGhlIG5vcm1hbCBwZXJ0dXJiYXRpb24gYXMgd2UgbW92ZSBmdXJ0aGVyIGZyb20gdGhlIHdhdGVyIHN1cmZhY2VcbiAgICBub3JtYWxUYW5nZW50U3BhY2UueHkgLz0gZmFkZTtcbiAgICAgICAgXG4gICAgLy8gYXR0ZW1wdCB0byBmYWRlIG91dCB0aGUgbm9ybWFsIHBlcnR1cmJhdGlvbiBhcyB3ZSBhcHByb2FjaCBub24gd2F0ZXIgYXJlYXMgKGxvdyBzcGVjdWxhciBtYXAgdmFsdWUpXG4gICAgbm9ybWFsVGFuZ2VudFNwYWNlID0gbWl4KHZlYzMoMC4wLCAwLjAsIDUwLjApLCBub3JtYWxUYW5nZW50U3BhY2UsIHNwZWN1bGFyTWFwVmFsdWUpO1xuICAgIFxuICAgIG5vcm1hbFRhbmdlbnRTcGFjZSA9IG5vcm1hbGl6ZShub3JtYWxUYW5nZW50U3BhY2UpO1xuICAgIFxuICAgIC8vIGdldCByYXRpb3MgZm9yIGFsaWdubWVudCBvZiB0aGUgbmV3IG5vcm1hbCB2ZWN0b3Igd2l0aCBhIHZlY3RvciBwZXJwZW5kaWN1bGFyIHRvIHRoZSB0YW5nZW50IHBsYW5lXG4gICAgZmxvYXQgdHNQZXJ0dXJiYXRpb25SYXRpbyA9IGNsYW1wKGRvdChub3JtYWxUYW5nZW50U3BhY2UsIHZlYzMoMC4wLCAwLjAsIDEuMCkpLCAwLjAsIDEuMCk7XG4gICAgXG4gICAgLy8gZmFkZSBvdXQgd2F0ZXIgZWZmZWN0IGFzIHNwZWN1bGFyIG1hcCB2YWx1ZSBkZWNyZWFzZXNcbiAgICBtYXRlcmlhbC5hbHBoYSA9IHNwZWN1bGFyTWFwVmFsdWU7XG4gICAgXG4gICAgLy8gYmFzZSBjb2xvciBpcyBhIGJsZW5kIG9mIHRoZSB3YXRlciBhbmQgbm9uLXdhdGVyIGNvbG9yIGJhc2VkIG9uIHRoZSB2YWx1ZSBmcm9tIHRoZSBzcGVjdWxhciBtYXBcbiAgICAvLyBtYXkgbmVlZCBhIHVuaWZvcm0gYmxlbmQgZmFjdG9yIHRvIGJldHRlciBjb250cm9sIHRoaXNcbiAgICBtYXRlcmlhbC5kaWZmdXNlID0gbWl4KGJsZW5kQ29sb3IucmdiLCBiYXNlV2F0ZXJDb2xvci5yZ2IsIHNwZWN1bGFyTWFwVmFsdWUpO1xuICAgIFxuICAgIC8vIGRpZmZ1c2UgaGlnaGxpZ2h0cyBhcmUgYmFzZWQgb24gaG93IHBlcnR1cmJlZCB0aGUgbm9ybWFsIGlzXG4gICAgbWF0ZXJpYWwuZGlmZnVzZSArPSAoMC4xICogdHNQZXJ0dXJiYXRpb25SYXRpbyk7XG4gICAgXG4gICAgbWF0ZXJpYWwubm9ybWFsID0gbm9ybWFsaXplKG1hdGVyaWFsSW5wdXQudGFuZ2VudFRvRXllTWF0cml4ICogbm9ybWFsVGFuZ2VudFNwYWNlKTtcbiAgICBcbiAgICBtYXRlcmlhbC5zcGVjdWxhciA9IHNwZWN1bGFySW50ZW5zaXR5O1xuICAgIG1hdGVyaWFsLnNoaW5pbmVzcyA9IDEwLjA7XG4gICAgXG4gICAgcmV0dXJuIG1hdGVyaWFsO1xufSJ9KSxkZWZpbmUoIlNjZW5lL01hdGVyaWFsIixbIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvY2xvbmUiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9jb21iaW5lIiwiLi4vQ29yZS9jcmVhdGVHdWlkIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9pc0FycmF5IiwiLi4vQ29yZS9sb2FkSW1hZ2UiLCIuLi9Db3JlL01hdHJpeDIiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9SZW5kZXJlci9DdWJlTWFwIiwiLi4vUmVuZGVyZXIvVGV4dHVyZSIsIi4uL1NoYWRlcnMvTWF0ZXJpYWxzL0J1bXBNYXBNYXRlcmlhbCIsIi4uL1NoYWRlcnMvTWF0ZXJpYWxzL0NoZWNrZXJib2FyZE1hdGVyaWFsIiwiLi4vU2hhZGVycy9NYXRlcmlhbHMvRG90TWF0ZXJpYWwiLCIuLi9TaGFkZXJzL01hdGVyaWFscy9GYWRlTWF0ZXJpYWwiLCIuLi9TaGFkZXJzL01hdGVyaWFscy9HcmlkTWF0ZXJpYWwiLCIuLi9TaGFkZXJzL01hdGVyaWFscy9Ob3JtYWxNYXBNYXRlcmlhbCIsIi4uL1NoYWRlcnMvTWF0ZXJpYWxzL1BvbHlsaW5lQXJyb3dNYXRlcmlhbCIsIi4uL1NoYWRlcnMvTWF0ZXJpYWxzL1BvbHlsaW5lR2xvd01hdGVyaWFsIiwiLi4vU2hhZGVycy9NYXRlcmlhbHMvUG9seWxpbmVPdXRsaW5lTWF0ZXJpYWwiLCIuLi9TaGFkZXJzL01hdGVyaWFscy9SaW1MaWdodGluZ01hdGVyaWFsIiwiLi4vU2hhZGVycy9NYXRlcmlhbHMvU3RyaXBlTWF0ZXJpYWwiLCIuLi9TaGFkZXJzL01hdGVyaWFscy9XYXRlciIsIi4uL1RoaXJkUGFydHkvd2hlbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSxiLFMsVCx4LEEsUCxNKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gSShlLGkpe2U9byhlLG8uRU1QVFlfT0JKRUNUKSxpLl9zdHJpY3Q9byhlLnN0cmljdCwhMSksaS5fY291bnQ9byhlLmNvdW50LDApLGkuX3RlbXBsYXRlPXQobyhlLmZhYnJpYyxvLkVNUFRZX09CSkVDVCkpLGkuX3RlbXBsYXRlLnVuaWZvcm1zPXQobyhpLl90ZW1wbGF0ZS51bmlmb3JtcyxvLkVNUFRZX09CSkVDVCkpLGkuX3RlbXBsYXRlLm1hdGVyaWFscz10KG8oaS5fdGVtcGxhdGUubWF0ZXJpYWxzLG8uRU1QVFlfT0JKRUNUKSksaS50eXBlPWEoaS5fdGVtcGxhdGUudHlwZSk/aS5fdGVtcGxhdGUudHlwZTpyKCksaS5zaGFkZXJTb3VyY2U9IiIsaS5tYXRlcmlhbHM9e30saS51bmlmb3Jtcz17fSxpLl91bmlmb3Jtcz17fSxpLl90cmFuc2x1Y2VudEZ1bmN0aW9ucz1bXTt2YXIgcyxsPUguX21hdGVyaWFsQ2FjaGUuZ2V0TWF0ZXJpYWwoaS50eXBlKTtpZihhKGwpKXt2YXIgdT10KGwuZmFicmljLCEwKTtpLl90ZW1wbGF0ZT1uKGkuX3RlbXBsYXRlLHUsITApLHM9bC50cmFuc2x1Y2VudH1MKGkpLGEobCl8fEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoaS50eXBlLGkpLE4oaSksRihpKSxVKGkpO3ZhciBjPTA9PT1pLl90cmFuc2x1Y2VudEZ1bmN0aW9ucy5sZW5ndGg/ITA6dm9pZCAwO2lmKHM9byhzLGMpLHM9byhlLnRyYW5zbHVjZW50LHMpLGEocykpaWYoImZ1bmN0aW9uIj09dHlwZW9mIHMpe3ZhciBkPWZ1bmN0aW9uKCl7cmV0dXJuIHMoaSl9O2kuX3RyYW5zbHVjZW50RnVuY3Rpb25zLnB1c2goZCl9ZWxzZSBpLl90cmFuc2x1Y2VudEZ1bmN0aW9ucy5wdXNoKHMpfWZ1bmN0aW9uIEQoZSx0LGksbil7aWYoYShlKSlmb3IodmFyIHIgaW4gZSlpZihlLmhhc093blByb3BlcnR5KHIpKXt2YXIgbz0tMSE9PXQuaW5kZXhPZihyKTsobiYmIW98fCFuJiZvKSYmaShyLHQpfX1mdW5jdGlvbiBPKGUsdCl7Zm9yKHZhciBpPSJmYWJyaWM6IHByb3BlcnR5IG5hbWUgJyIrZSsiJyBpcyBub3QgdmFsaWQuIEl0IHNob3VsZCBiZSAiLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIHI9IiciK3Rbbl0rIiciO2krPW49PT10Lmxlbmd0aC0xPyJvciAiK3IrIi4iOnIrIiwgIn10aHJvdyBuZXcgdShpKX1mdW5jdGlvbiBSKGUpe3ZhciB0PSJmYWJyaWM6IHVuaWZvcm1zIGFuZCBtYXRlcmlhbHMgY2Fubm90IHNoYXJlIHRoZSBzYW1lIHByb3BlcnR5ICciK2UrIiciO3Rocm93IG5ldyB1KHQpfWZ1bmN0aW9uIEwoZSl7dmFyIHQ9ZS5fdGVtcGxhdGUsaT10LnVuaWZvcm1zLG49dC5tYXRlcmlhbHMscj10LmNvbXBvbmVudHM7aWYoYShyKSYmYSh0LnNvdXJjZSkpdGhyb3cgbmV3IHUoImZhYnJpYzogY2Fubm90IGhhdmUgc291cmNlIGFuZCBjb21wb25lbnRzIGluIHRoZSBzYW1lIHRlbXBsYXRlLiIpO0QodCxxLE8sITApLEQocixqLE8sITApO3ZhciBvPVtdO2Zvcih2YXIgcyBpbiBuKW4uaGFzT3duUHJvcGVydHkocykmJm8ucHVzaChzKTtEKGksbyxSLCExKX1mdW5jdGlvbiBOKGUpe3ZhciB0PWUuX3RlbXBsYXRlLmNvbXBvbmVudHMsaT1lLl90ZW1wbGF0ZS5zb3VyY2U7aWYoYShpKSllLnNoYWRlclNvdXJjZSs9aSsiXG4iO2Vsc2V7aWYoZS5zaGFkZXJTb3VyY2UrPSJjem1fbWF0ZXJpYWwgY3ptX2dldE1hdGVyaWFsKGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQpXG57XG4iLGUuc2hhZGVyU291cmNlKz0iY3ptX21hdGVyaWFsIG1hdGVyaWFsID0gY3ptX2dldERlZmF1bHRNYXRlcmlhbChtYXRlcmlhbElucHV0KTtcbiIsYSh0KSlmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZS5zaGFkZXJTb3VyY2UrPSJtYXRlcmlhbC4iK24rIiA9ICIrdFtuXSsiO1xuIik7ZS5zaGFkZXJTb3VyY2UrPSJyZXR1cm4gbWF0ZXJpYWw7XG59XG4ifX1mdW5jdGlvbiB6KGUpe3JldHVybiBmdW5jdGlvbih0LGkpe3ZhciBuLHIsbz10LnVuaWZvcm1zLHM9b1tlXSxsPXQuX3RleHR1cmVzW2VdO2lmKHMgaW5zdGFuY2VvZiB2JiZzIT09bClyZXR1cm4gSC5fdGV4dHVyZUNhY2hlLnJlbGVhc2VUZXh0dXJlKHQuX3RleHR1cmVQYXRoc1tlXSksdC5fdGV4dHVyZVBhdGhzW2VdPXZvaWQgMCx0Ll90ZXh0dXJlc1tlXT1zLG49ZSsiRGltZW5zaW9ucyIsby5oYXNPd25Qcm9wZXJ0eShuKSYmKHI9b1tuXSxyLng9cy5fd2lkdGgsci55PXMuX2hlaWdodCksdm9pZCAwO2lmKGEobCl8fCh0Ll90ZXh0dXJlUGF0aHNbZV09dm9pZCAwLGw9dC5fdGV4dHVyZXNbZV09aS5kZWZhdWx0VGV4dHVyZSxuPWUrIkRpbWVuc2lvbnMiLG8uaGFzT3duUHJvcGVydHkobikmJihyPW9bbl0sci54PWwuX3dpZHRoLHIueT1sLl9oZWlnaHQpKSxzIT09SC5EZWZhdWx0SW1hZ2VJZCYmcyE9PXQuX3RleHR1cmVQYXRoc1tlXSl7dmFyIHU9SC5fdGV4dHVyZUNhY2hlLmdldFRleHR1cmUocyk7YSh1KT8oSC5fdGV4dHVyZUNhY2hlLnJlbGVhc2VUZXh0dXJlKHQuX3RleHR1cmVQYXRoc1tlXSksdC5fdGV4dHVyZXNbZV09dSk6TShkKHMpLGZ1bmN0aW9uKGkpe3QuX2xvYWRlZEltYWdlcy5wdXNoKHtpZDplLGltYWdlOml9KX0pLHQuX3RleHR1cmVQYXRoc1tlXT1zfX19ZnVuY3Rpb24gQihlKXtyZXR1cm4gZnVuY3Rpb24odCxpKXt2YXIgbj10LnVuaWZvcm1zW2VdO2lmKG4gaW5zdGFuY2VvZiBwKXJldHVybiBILl90ZXh0dXJlQ2FjaGUucmVsZWFzZVRleHR1cmUodC5fdGV4dHVyZVBhdGhzW2VdKSx0Ll90ZXh0dXJlUGF0aHNbZV09dm9pZCAwLHQuX3RleHR1cmVzW2VdPW4sdm9pZCAwO2lmKGEodC5fdGV4dHVyZXNbZV0pfHwodC5fdGV4dHVyZVBhdGhzW2VdPXZvaWQgMCx0Ll90ZXh0dXJlc1tlXT1pLmRlZmF1bHRDdWJlTWFwKSxuIT09SC5EZWZhdWx0Q3ViZU1hcElkKXt2YXIgcj1uLnBvc2l0aXZlWCtuLm5lZ2F0aXZlWCtuLnBvc2l0aXZlWStuLm5lZ2F0aXZlWStuLnBvc2l0aXZlWituLm5lZ2F0aXZlWjtpZihyIT09dC5fdGV4dHVyZVBhdGhzW2VdKXt2YXIgbz1ILl90ZXh0dXJlQ2FjaGUuZ2V0VGV4dHVyZShyKTtpZihhKG8pKUguX3RleHR1cmVDYWNoZS5yZWxlYXNlVGV4dHVyZSh0Ll90ZXh0dXJlUGF0aHNbZV0pLHQuX3RleHR1cmVzW2VdPW87ZWxzZXt2YXIgcz1bZChuLnBvc2l0aXZlWCksZChuLm5lZ2F0aXZlWCksZChuLnBvc2l0aXZlWSksZChuLm5lZ2F0aXZlWSksZChuLnBvc2l0aXZlWiksZChuLm5lZ2F0aXZlWildO00uYWxsKHMpLnRoZW4oZnVuY3Rpb24oaSl7dC5fbG9hZGVkQ3ViZU1hcHMucHVzaCh7aWQ6ZSxpbWFnZXM6aX0pfSl9dC5fdGV4dHVyZVBhdGhzW2VdPXJ9fX19ZnVuY3Rpb24gRihlKXt2YXIgdD1lLl90ZW1wbGF0ZS51bmlmb3Jtcztmb3IodmFyIGkgaW4gdCl0Lmhhc093blByb3BlcnR5KGkpJiZWKGUsaSl9ZnVuY3Rpb24gVihlLHQpe3ZhciBpPWUuX3N0cmljdCxuPWUuX3RlbXBsYXRlLnVuaWZvcm1zLHI9blt0XSxvPWsocik7aWYoIWEobykpdGhyb3cgbmV3IHUoImZhYnJpYzogdW5pZm9ybSAnIit0KyInIGhhcyBpbnZhbGlkIHR5cGUuIik7aWYoImNoYW5uZWxzIj09PW8pe2lmKDA9PT1XKGUsdCxyLCExKSYmaSl0aHJvdyBuZXcgdSgic3RyaWN0OiBzaGFkZXIgc291cmNlIGRvZXMgbm90IHVzZSBjaGFubmVscyAnIit0KyInLiIpfWVsc2V7aWYoInNhbXBsZXIyRCI9PT1vKXt2YXIgcz10KyJEaW1lbnNpb25zIjtHKGUscyk+MCYmKG5bc109e3R5cGU6Iml2ZWMzIix4OjEseToxfSxWKGUscykpfXZhciBsPW5ldyBSZWdFeHAoInVuaWZvcm1cXHMrIitvKyJcXHMrIit0KyJcXHMqOyIpO2lmKCFsLnRlc3QoZS5zaGFkZXJTb3VyY2UpKXt2YXIgYz0idW5pZm9ybSAiK28rIiAiK3QrIjsiO2Uuc2hhZGVyU291cmNlPWMrZS5zaGFkZXJTb3VyY2V9dmFyIGQ9dCsiXyIrZS5fY291bnQrKztpZigxPT09VyhlLHQsZCkmJmkpdGhyb3cgbmV3IHUoInN0cmljdDogc2hhZGVyIHNvdXJjZSBkb2VzIG5vdCB1c2UgdW5pZm9ybSAnIit0KyInLiIpO2lmKGUudW5pZm9ybXNbdF09ciwic2FtcGxlcjJEIj09PW8pZS5fdW5pZm9ybXNbZF09ZnVuY3Rpb24oKXtyZXR1cm4gZS5fdGV4dHVyZXNbdF19LGUuX3VwZGF0ZUZ1bmN0aW9ucy5wdXNoKHoodCkpO2Vsc2UgaWYoInNhbXBsZXJDdWJlIj09PW8pZS5fdW5pZm9ybXNbZF09ZnVuY3Rpb24oKXtyZXR1cm4gZS5fdGV4dHVyZXNbdF19LGUuX3VwZGF0ZUZ1bmN0aW9ucy5wdXNoKEIodCkpO2Vsc2UgaWYoLTEhPT1vLmluZGV4T2YoIm1hdCIpKXt2YXIgaD1uZXcgWVtvXTtlLl91bmlmb3Jtc1tkXT1mdW5jdGlvbigpe3JldHVybiBZW29dLmZyb21Db2x1bW5NYWpvckFycmF5KGUudW5pZm9ybXNbdF0saCl9fWVsc2UgZS5fdW5pZm9ybXNbZF09ZnVuY3Rpb24oKXtyZXR1cm4gZS51bmlmb3Jtc1t0XX19fWZ1bmN0aW9uIGsoZSl7dmFyIHQ9ZS50eXBlO2lmKCFhKHQpKXt2YXIgaT10eXBlb2YgZTtpZigibnVtYmVyIj09PWkpdD0iZmxvYXQiO2Vsc2UgaWYoImJvb2xlYW4iPT09aSl0PSJib29sIjtlbHNlIGlmKCJzdHJpbmciPT09aSl0PS9eKFtyZ2JhXSl7MSw0fSQvaS50ZXN0KGUpPyJjaGFubmVscyI6ZT09PUguRGVmYXVsdEN1YmVNYXBJZD8ic2FtcGxlckN1YmUiOiJzYW1wbGVyMkQiO2Vsc2UgaWYoIm9iamVjdCI9PT1pKWlmKGMoZSkpKDQ9PT1lLmxlbmd0aHx8OT09PWUubGVuZ3RofHwxNj09PWUubGVuZ3RoKSYmKHQ9Im1hdCIrTWF0aC5zcXJ0KGUubGVuZ3RoKSk7ZWxzZXt2YXIgbj0wO2Zvcih2YXIgciBpbiBlKWUuaGFzT3duUHJvcGVydHkocikmJihuKz0xKTtuPj0yJiY0Pj1uP3Q9InZlYyIrbjo2PT09biYmKHQ9InNhbXBsZXJDdWJlIil9fXJldHVybiB0fWZ1bmN0aW9uIFUoZSl7dmFyIHQ9ZS5fc3RyaWN0LGk9ZS5fdGVtcGxhdGUubWF0ZXJpYWxzO2Zvcih2YXIgciBpbiBpKWlmKGkuaGFzT3duUHJvcGVydHkocikpe3ZhciBvPW5ldyBIKHtzdHJpY3Q6dCxmYWJyaWM6aVtyXSxjb3VudDplLl9jb3VudH0pO2UuX2NvdW50PW8uX2NvdW50LGUuX3VuaWZvcm1zPW4oZS5fdW5pZm9ybXMsby5fdW5pZm9ybXMsITApLGUubWF0ZXJpYWxzW3JdPW8sZS5fdHJhbnNsdWNlbnRGdW5jdGlvbnM9ZS5fdHJhbnNsdWNlbnRGdW5jdGlvbnMuY29uY2F0KG8uX3RyYW5zbHVjZW50RnVuY3Rpb25zKTt2YXIgYT0iY3ptX2dldE1hdGVyaWFsIixzPWErIl8iK2UuX2NvdW50Kys7VyhvLGEscyksZS5zaGFkZXJTb3VyY2U9by5zaGFkZXJTb3VyY2UrZS5zaGFkZXJTb3VyY2U7dmFyIGw9cysiKG1hdGVyaWFsSW5wdXQpIjtpZigwPT09VyhlLHIsbCkmJnQpdGhyb3cgbmV3IHUoInN0cmljdDogc2hhZGVyIHNvdXJjZSBkb2VzIG5vdCB1c2UgbWF0ZXJpYWwgJyIrcisiJy4iKX19ZnVuY3Rpb24gVyhlLHQsaSxuKXtuPW8obiwhMCk7dmFyIHI9MCxhPSIoW1xcd10pPyIscz0iKFtcXHciKyhuPyIuIjoiIikrIl0pPyIsbD1uZXcgUmVnRXhwKHMrdCthLCJnIik7cmV0dXJuIGUuc2hhZGVyU291cmNlPWUuc2hhZGVyU291cmNlLnJlcGxhY2UobCxmdW5jdGlvbihlLHQsbil7cmV0dXJuIHR8fG4/ZToocis9MSxpKX0pLHJ9ZnVuY3Rpb24gRyhlLHQsaSl7cmV0dXJuIFcoZSx0LHQsaSl9dmFyIEg9ZnVuY3Rpb24oZSl7dGhpcy50eXBlPXZvaWQgMCx0aGlzLnNoYWRlclNvdXJjZT12b2lkIDAsdGhpcy5tYXRlcmlhbHM9dm9pZCAwLHRoaXMudW5pZm9ybXM9dm9pZCAwLHRoaXMuX3VuaWZvcm1zPXZvaWQgMCx0aGlzLnRyYW5zbHVjZW50PXZvaWQgMCx0aGlzLl9zdHJpY3Q9dm9pZCAwLHRoaXMuX3RlbXBsYXRlPXZvaWQgMCx0aGlzLl9jb3VudD12b2lkIDAsdGhpcy5fdGV4dHVyZVBhdGhzPXt9LHRoaXMuX2xvYWRlZEltYWdlcz1bXSx0aGlzLl9sb2FkZWRDdWJlTWFwcz1bXSx0aGlzLl90ZXh0dXJlcz17fSx0aGlzLl91cGRhdGVGdW5jdGlvbnM9W10sSShlLHRoaXMpLHModGhpcyx7dHlwZTp7dmFsdWU6dGhpcy50eXBlLHdyaXRhYmxlOiExfX0pLGEoSC5fdW5pZm9ybUxpc3RbdGhpcy50eXBlXSl8fChILl91bmlmb3JtTGlzdFt0aGlzLnR5cGVdPU9iamVjdC5rZXlzKHRoaXMuX3VuaWZvcm1zKSl9O0guX3VuaWZvcm1MaXN0PXt9LEguZnJvbVR5cGU9ZnVuY3Rpb24oZSx0KXt2YXIgaT1uZXcgSCh7ZmFicmljOnt0eXBlOmV9fSk7aWYoYSh0KSlmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoaS51bmlmb3Jtc1tuXT10W25dKTtyZXR1cm4gaX0sSC5wcm90b3R5cGUuaXNUcmFuc2x1Y2VudD1mdW5jdGlvbigpe2lmKGEodGhpcy50cmFuc2x1Y2VudCkpcmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMudHJhbnNsdWNlbnQ/dGhpcy50cmFuc2x1Y2VudCgpOnRoaXMudHJhbnNsdWNlbnQ7Zm9yKHZhciBlPSEwLHQ9dGhpcy5fdHJhbnNsdWNlbnRGdW5jdGlvbnMsaT10Lmxlbmd0aCxuPTA7aT5uOysrbil7dmFyIHI9dFtuXTtpZihlPSJmdW5jdGlvbiI9PXR5cGVvZiByP2UmJnIoKTplJiZyLCFlKWJyZWFrfXJldHVybiBlfSxILnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQsaSxuPXRoaXMuX2xvYWRlZEltYWdlcyxyPW4ubGVuZ3RoO2Zvcih0PTA7cj50OysrdCl7dmFyIG89blt0XTtpPW8uaWQ7dmFyIHM9by5pbWFnZSxsPUguX3RleHR1cmVDYWNoZS5nZXRUZXh0dXJlKHRoaXMuX3RleHR1cmVQYXRoc1tpXSk7YShsKXx8KGw9ZS5jcmVhdGVUZXh0dXJlMkQoe3NvdXJjZTpzfSksSC5fdGV4dHVyZUNhY2hlLmFkZFRleHR1cmUodGhpcy5fdGV4dHVyZVBhdGhzW2ldLGwpKSx0aGlzLl90ZXh0dXJlc1tpXT1sO3ZhciB1PWkrIkRpbWVuc2lvbnMiO2lmKHRoaXMudW5pZm9ybXMuaGFzT3duUHJvcGVydHkodSkpe3ZhciBjPXRoaXMudW5pZm9ybXNbdV07Yy54PWwuX3dpZHRoLGMueT1sLl9oZWlnaHR9fW4ubGVuZ3RoPTA7dmFyIGQ9dGhpcy5fbG9hZGVkQ3ViZU1hcHM7Zm9yKHI9ZC5sZW5ndGgsdD0wO3I+dDsrK3Qpe3ZhciBoPWRbdF07aT1oLmlkO3ZhciBtPWguaW1hZ2VzLGY9SC5fdGV4dHVyZUNhY2hlLmdldFRleHR1cmUodGhpcy5fdGV4dHVyZVBhdGhzW2ldKTthKGYpfHwoZj1lLmNyZWF0ZUN1YmVNYXAoe3NvdXJjZTp7cG9zaXRpdmVYOm1bMF0sbmVnYXRpdmVYOm1bMV0scG9zaXRpdmVZOm1bMl0sbmVnYXRpdmVZOm1bM10scG9zaXRpdmVaOm1bNF0sbmVnYXRpdmVaOm1bNV19fSksSC5fdGV4dHVyZUNhY2hlLmFkZFRleHR1cmUodGhpcy5fdGV4dHVyZVBhdGhzW2ldLGYpKSx0aGlzLl90ZXh0dXJlc1tpXT1mfWQubGVuZ3RoPTA7dmFyIHA9dGhpcy5fdXBkYXRlRnVuY3Rpb25zO2ZvcihyPXAubGVuZ3RoLHQ9MDtyPnQ7Kyt0KXBbdF0odGhpcyxlKTt2YXIgdj10aGlzLm1hdGVyaWFscztmb3IodmFyIGcgaW4gdil2Lmhhc093blByb3BlcnR5KGcpJiZ2W2ddLnVwZGF0ZShlKX0sSC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sSC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMubWF0ZXJpYWxzLHQ9dGhpcy51bmlmb3Jtcztmb3IodmFyIGkgaW4gdClpZih0Lmhhc093blByb3BlcnR5KGkpKXt2YXIgbj10aGlzLl90ZXh0dXJlUGF0aHNbaV07SC5fdGV4dHVyZUNhY2hlLnJlbGVhc2VUZXh0dXJlKG4pfWZvcih2YXIgciBpbiBlKWUuaGFzT3duUHJvcGVydHkocikmJmVbcl0uZGVzdHJveSgpO3JldHVybiBsKHRoaXMpfTt2YXIgcT1bInR5cGUiLCJtYXRlcmlhbHMiLCJ1bmlmb3JtcyIsImNvbXBvbmVudHMiLCJzb3VyY2UiXSxqPVsiZGlmZnVzZSIsInNwZWN1bGFyIiwic2hpbmluZXNzIiwibm9ybWFsIiwiZW1pc3Npb24iLCJhbHBoYSJdLFk9e21hdDI6aCxtYXQzOm0sbWF0NDpmfTtyZXR1cm4gSC5fdGV4dHVyZUNhY2hlPXtfdGV4dHVyZXM6e30sYWRkVGV4dHVyZTpmdW5jdGlvbihlLHQpe3RoaXMuX3RleHR1cmVzW2VdPXt0ZXh0dXJlOnQsY291bnQ6MX19LGdldFRleHR1cmU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdGV4dHVyZXNbZV07cmV0dXJuIGEodCk/KHQuY291bnQrKyx0LnRleHR1cmUpOnZvaWQgMH0scmVsZWFzZVRleHR1cmU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdGV4dHVyZXNbZV07YSh0KSYmMD09PS0tdC5jb3VudCYmKHQudGV4dHVyZT10LnRleHR1cmUmJnQudGV4dHVyZS5kZXN0cm95KCksdGhpcy5fdGV4dHVyZXNbZV09dm9pZCAwKX19LEguX21hdGVyaWFsQ2FjaGU9e19tYXRlcmlhbHM6e30sYWRkTWF0ZXJpYWw6ZnVuY3Rpb24oZSx0KXt0aGlzLl9tYXRlcmlhbHNbZV09dH0sZ2V0TWF0ZXJpYWw6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX21hdGVyaWFsc1tlXX19LEguRGVmYXVsdEltYWdlSWQ9ImN6bV9kZWZhdWx0SW1hZ2UiLEguRGVmYXVsdEN1YmVNYXBJZD0iY3ptX2RlZmF1bHRDdWJlTWFwIixILkNvbG9yVHlwZT0iQ29sb3IiLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5Db2xvclR5cGUse2ZhYnJpYzp7dHlwZTpILkNvbG9yVHlwZSx1bmlmb3Jtczp7Y29sb3I6bmV3IGkoMSwwLDAsLjUpfSxjb21wb25lbnRzOntkaWZmdXNlOiJjb2xvci5yZ2IiLGFscGhhOiJjb2xvci5hIn19LHRyYW5zbHVjZW50OmZ1bmN0aW9uKGUpe3JldHVybiBlLnVuaWZvcm1zLmNvbG9yLmFscGhhPDF9fSksSC5JbWFnZVR5cGU9IkltYWdlIixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguSW1hZ2VUeXBlLHtmYWJyaWM6e3R5cGU6SC5JbWFnZVR5cGUsdW5pZm9ybXM6e2ltYWdlOkguRGVmYXVsdEltYWdlSWQscmVwZWF0Om5ldyBlKDEsMSl9LGNvbXBvbmVudHM6e2RpZmZ1c2U6InRleHR1cmUyRChpbWFnZSwgZnJhY3QocmVwZWF0ICogbWF0ZXJpYWxJbnB1dC5zdCkpLnJnYiIsYWxwaGE6InRleHR1cmUyRChpbWFnZSwgZnJhY3QocmVwZWF0ICogbWF0ZXJpYWxJbnB1dC5zdCkpLmEifX0sdHJhbnNsdWNlbnQ6ITB9KSxILkRpZmZ1c2VNYXBUeXBlPSJEaWZmdXNlTWFwIixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguRGlmZnVzZU1hcFR5cGUse2ZhYnJpYzp7dHlwZTpILkRpZmZ1c2VNYXBUeXBlLHVuaWZvcm1zOntpbWFnZTpILkRlZmF1bHRJbWFnZUlkLGNoYW5uZWxzOiJyZ2IiLHJlcGVhdDpuZXcgZSgxLDEpfSxjb21wb25lbnRzOntkaWZmdXNlOiJ0ZXh0dXJlMkQoaW1hZ2UsIGZyYWN0KHJlcGVhdCAqIG1hdGVyaWFsSW5wdXQuc3QpKS5jaGFubmVscyJ9fSx0cmFuc2x1Y2VudDohMX0pLEguQWxwaGFNYXBUeXBlPSJBbHBoYU1hcCIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILkFscGhhTWFwVHlwZSx7ZmFicmljOnt0eXBlOkguQWxwaGFNYXBUeXBlLHVuaWZvcm1zOntpbWFnZTpILkRlZmF1bHRJbWFnZUlkLGNoYW5uZWw6ImEiLHJlcGVhdDpuZXcgZSgxLDEpfSxjb21wb25lbnRzOnthbHBoYToidGV4dHVyZTJEKGltYWdlLCBmcmFjdChyZXBlYXQgKiBtYXRlcmlhbElucHV0LnN0KSkuY2hhbm5lbCJ9fSx0cmFuc2x1Y2VudDohMH0pLEguU3BlY3VsYXJNYXBUeXBlPSJTcGVjdWxhck1hcCIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILlNwZWN1bGFyTWFwVHlwZSx7ZmFicmljOnt0eXBlOkguU3BlY3VsYXJNYXBUeXBlLHVuaWZvcm1zOntpbWFnZTpILkRlZmF1bHRJbWFnZUlkLGNoYW5uZWw6InIiLHJlcGVhdDpuZXcgZSgxLDEpfSxjb21wb25lbnRzOntzcGVjdWxhcjoidGV4dHVyZTJEKGltYWdlLCBmcmFjdChyZXBlYXQgKiBtYXRlcmlhbElucHV0LnN0KSkuY2hhbm5lbCJ9fSx0cmFuc2x1Y2VudDohMX0pLEguRW1pc3Npb25NYXBUeXBlPSJFbWlzc2lvbk1hcCIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILkVtaXNzaW9uTWFwVHlwZSx7ZmFicmljOnt0eXBlOkguRW1pc3Npb25NYXBUeXBlLHVuaWZvcm1zOntpbWFnZTpILkRlZmF1bHRJbWFnZUlkLGNoYW5uZWxzOiJyZ2IiLHJlcGVhdDpuZXcgZSgxLDEpfSxjb21wb25lbnRzOntlbWlzc2lvbjoidGV4dHVyZTJEKGltYWdlLCBmcmFjdChyZXBlYXQgKiBtYXRlcmlhbElucHV0LnN0KSkuY2hhbm5lbHMifX0sdHJhbnNsdWNlbnQ6ITF9KSxILkJ1bXBNYXBUeXBlPSJCdW1wTWFwIixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguQnVtcE1hcFR5cGUse2ZhYnJpYzp7dHlwZTpILkJ1bXBNYXBUeXBlLHVuaWZvcm1zOntpbWFnZTpILkRlZmF1bHRJbWFnZUlkLGNoYW5uZWw6InIiLHN0cmVuZ3RoOi44LHJlcGVhdDpuZXcgZSgxLDEpfSxzb3VyY2U6Z30sdHJhbnNsdWNlbnQ6ITF9KSxILk5vcm1hbE1hcFR5cGU9Ik5vcm1hbE1hcCIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILk5vcm1hbE1hcFR5cGUse2ZhYnJpYzp7dHlwZTpILk5vcm1hbE1hcFR5cGUsdW5pZm9ybXM6e2ltYWdlOkguRGVmYXVsdEltYWdlSWQsY2hhbm5lbHM6InJnYiIsc3RyZW5ndGg6LjgscmVwZWF0Om5ldyBlKDEsMSl9LHNvdXJjZTpFfSx0cmFuc2x1Y2VudDohMX0pLEguR3JpZFR5cGU9IkdyaWQiLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5HcmlkVHlwZSx7ZmFicmljOnt0eXBlOkguR3JpZFR5cGUsdW5pZm9ybXM6e2NvbG9yOm5ldyBpKDAsMSwwLDEpLGNlbGxBbHBoYTouMSxsaW5lQ291bnQ6bmV3IGUoOCw4KSxsaW5lVGhpY2tuZXNzOm5ldyBlKDEsMSksbGluZU9mZnNldDpuZXcgZSgwLDApfSxzb3VyY2U6d30sdHJhbnNsdWNlbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS51bmlmb3JtcztyZXR1cm4gdC5jb2xvci5hbHBoYTwxfHx0LmNlbGxBbHBoYTwxfX0pLEguU3RyaXBlVHlwZT0iU3RyaXBlIixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguU3RyaXBlVHlwZSx7ZmFicmljOnt0eXBlOkguU3RyaXBlVHlwZSx1bmlmb3Jtczp7aG9yaXpvbnRhbDohMCxldmVuQ29sb3I6bmV3IGkoMSwxLDEsLjUpLG9kZENvbG9yOm5ldyBpKDAsMCwxLC41KSxvZmZzZXQ6MCxyZXBlYXQ6NX0sc291cmNlOkF9LHRyYW5zbHVjZW50OmZ1bmN0aW9uKGUpe3ZhciB0PWUudW5pZm9ybXM7cmV0dXJuIHQuZXZlbkNvbG9yLmFscGhhPDF8fHQub2RkQ29sb3IuYWxwaGE8MH19KSxILkNoZWNrZXJib2FyZFR5cGU9IkNoZWNrZXJib2FyZCIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILkNoZWNrZXJib2FyZFR5cGUse2ZhYnJpYzp7dHlwZTpILkNoZWNrZXJib2FyZFR5cGUsdW5pZm9ybXM6e2xpZ2h0Q29sb3I6bmV3IGkoMSwxLDEsLjUpLGRhcmtDb2xvcjpuZXcgaSgwLDAsMCwuNSkscmVwZWF0Om5ldyBlKDUsNSl9LHNvdXJjZTpffSx0cmFuc2x1Y2VudDpmdW5jdGlvbihlKXt2YXIgdD1lLnVuaWZvcm1zOwpyZXR1cm4gdC5saWdodENvbG9yLmFscGhhPDF8fHQuZGFya0NvbG9yLmFscGhhPDB9fSksSC5Eb3RUeXBlPSJEb3QiLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5Eb3RUeXBlLHtmYWJyaWM6e3R5cGU6SC5Eb3RUeXBlLHVuaWZvcm1zOntsaWdodENvbG9yOm5ldyBpKDEsMSwwLC43NSksZGFya0NvbG9yOm5ldyBpKDAsMSwxLC43NSkscmVwZWF0Om5ldyBlKDUsNSl9LHNvdXJjZTp5fSx0cmFuc2x1Y2VudDpmdW5jdGlvbihlKXt2YXIgdD1lLnVuaWZvcm1zO3JldHVybiB0LmxpZ2h0Q29sb3IuYWxwaGE8MXx8dC5kYXJrQ29sb3IuYWxwaGE8MH19KSxILldhdGVyVHlwZT0iV2F0ZXIiLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5XYXRlclR5cGUse2ZhYnJpYzp7dHlwZTpILldhdGVyVHlwZSx1bmlmb3Jtczp7YmFzZVdhdGVyQ29sb3I6bmV3IGkoLjIsLjMsLjYsMSksYmxlbmRDb2xvcjpuZXcgaSgwLDEsLjY5OSwxKSxzcGVjdWxhck1hcDpILkRlZmF1bHRJbWFnZUlkLG5vcm1hbE1hcDpILkRlZmF1bHRJbWFnZUlkLGZyZXF1ZW5jeToxMCxhbmltYXRpb25TcGVlZDouMDEsYW1wbGl0dWRlOjEsc3BlY3VsYXJJbnRlbnNpdHk6LjUsZmFkZUZhY3RvcjoxfSxzb3VyY2U6UH0sdHJhbnNsdWNlbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS51bmlmb3JtcztyZXR1cm4gdC5iYXNlV2F0ZXJDb2xvci5hbHBoYTwxfHx0LmJsZW5kQ29sb3IuYWxwaGE8MH19KSxILlJpbUxpZ2h0aW5nVHlwZT0iUmltTGlnaHRpbmciLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5SaW1MaWdodGluZ1R5cGUse2ZhYnJpYzp7dHlwZTpILlJpbUxpZ2h0aW5nVHlwZSx1bmlmb3Jtczp7Y29sb3I6bmV3IGkoMSwwLDAsLjcpLHJpbUNvbG9yOm5ldyBpKDEsMSwxLC40KSx3aWR0aDouM30sc291cmNlOnh9LHRyYW5zbHVjZW50OmZ1bmN0aW9uKGUpe3ZhciB0PWUudW5pZm9ybXM7cmV0dXJuIHQuY29sb3IuYWxwaGE8MXx8dC5yaW1Db2xvci5hbHBoYTwwfX0pLEguRmFkZVR5cGU9IkZhZGUiLEguX21hdGVyaWFsQ2FjaGUuYWRkTWF0ZXJpYWwoSC5GYWRlVHlwZSx7ZmFicmljOnt0eXBlOkguRmFkZVR5cGUsdW5pZm9ybXM6e2ZhZGVJbkNvbG9yOm5ldyBpKDEsMCwwLDEpLGZhZGVPdXRDb2xvcjpuZXcgaSgwLDAsMCwwKSxtYXhpbXVtRGlzdGFuY2U6LjUscmVwZWF0OiEwLGZhZGVEaXJlY3Rpb246e3g6ITAseTohMH0sdGltZTpuZXcgZSguNSwuNSl9LHNvdXJjZTpDfSx0cmFuc2x1Y2VudDpmdW5jdGlvbihlKXt2YXIgdD1lLnVuaWZvcm1zO3JldHVybiB0LmZhZGVJbkNvbG9yLmFscGhhPDF8fHQuZmFkZU91dENvbG9yLmFscGhhPDB9fSksSC5Qb2x5bGluZUFycm93VHlwZT0iUG9seWxpbmVBcnJvdyIsSC5fbWF0ZXJpYWxDYWNoZS5hZGRNYXRlcmlhbChILlBvbHlsaW5lQXJyb3dUeXBlLHtmYWJyaWM6e3R5cGU6SC5Qb2x5bGluZUFycm93VHlwZSx1bmlmb3Jtczp7Y29sb3I6bmV3IGkoMSwxLDEsMSl9LHNvdXJjZTpifSx0cmFuc2x1Y2VudDohMH0pLEguUG9seWxpbmVHbG93VHlwZT0iUG9seWxpbmVHbG93IixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguUG9seWxpbmVHbG93VHlwZSx7ZmFicmljOnt0eXBlOkguUG9seWxpbmVHbG93VHlwZSx1bmlmb3Jtczp7Y29sb3I6bmV3IGkoMCwuNSwxLDEpLGdsb3dQb3dlcjouMjV9LHNvdXJjZTpTfSx0cmFuc2x1Y2VudDohMH0pLEguUG9seWxpbmVPdXRsaW5lVHlwZT0iUG9seWxpbmVPdXRsaW5lIixILl9tYXRlcmlhbENhY2hlLmFkZE1hdGVyaWFsKEguUG9seWxpbmVPdXRsaW5lVHlwZSx7ZmFicmljOnt0eXBlOkguUG9seWxpbmVPdXRsaW5lVHlwZSx1bmlmb3Jtczp7Y29sb3I6bmV3IGkoMSwxLDEsMSksb3V0bGluZUNvbG9yOm5ldyBpKDEsMCwwLDEpLG91dGxpbmVXaWR0aDoxfSxzb3VyY2U6VH0sdHJhbnNsdWNlbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS51bmlmb3JtcztyZXR1cm4gdC5jb2xvci5hbHBoYTwxfHx0Lm91dGxpbmVDb2xvci5hbHBoYTwxfX0pLEh9KSxkZWZpbmUoIlNjZW5lL01hdGVyaWFsQXBwZWFyYW5jZSIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZnJlZXplT2JqZWN0IiwiLi4vQ29yZS9WZXJ0ZXhGb3JtYXQiLCIuLi9TaGFkZXJzL0FwcGVhcmFuY2VzL0FsbE1hdGVyaWFsQXBwZWFyYW5jZUZTIiwiLi4vU2hhZGVycy9BcHBlYXJhbmNlcy9BbGxNYXRlcmlhbEFwcGVhcmFuY2VWUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvQmFzaWNNYXRlcmlhbEFwcGVhcmFuY2VGUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvQmFzaWNNYXRlcmlhbEFwcGVhcmFuY2VWUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvVGV4dHVyZWRNYXRlcmlhbEFwcGVhcmFuY2VGUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvVGV4dHVyZWRNYXRlcmlhbEFwcGVhcmFuY2VWUyIsIi4vQXBwZWFyYW5jZSIsIi4vTWF0ZXJpYWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoKXsidXNlIHN0cmljdCI7dmFyIG09ZnVuY3Rpb24oaSl7aT1lKGksZS5FTVBUWV9PQkpFQ1QpO3ZhciBuPWUoaS50cmFuc2x1Y2VudCwhMCkscj1lKGkuY2xvc2VkLCExKSxvPWUoaS5tYXRlcmlhbFN1cHBvcnQsbS5NYXRlcmlhbFN1cHBvcnQuVEVYVFVSRUQpO3RoaXMubWF0ZXJpYWw9dChpLm1hdGVyaWFsKT9pLm1hdGVyaWFsOmguZnJvbVR5cGUoaC5Db2xvclR5cGUpLHRoaXMudHJhbnNsdWNlbnQ9bix0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2U9ZShpLnZlcnRleFNoYWRlclNvdXJjZSxvLnZlcnRleFNoYWRlclNvdXJjZSksdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2U9ZShpLmZyYWdtZW50U2hhZGVyU291cmNlLG8uZnJhZ21lbnRTaGFkZXJTb3VyY2UpLHRoaXMuX3JlbmRlclN0YXRlPWUoaS5yZW5kZXJTdGF0ZSxkLmdldERlZmF1bHRSZW5kZXJTdGF0ZShuLHIpKSx0aGlzLl9jbG9zZWQ9cix0aGlzLl9tYXRlcmlhbFN1cHBvcnQ9byx0aGlzLl92ZXJ0ZXhGb3JtYXQ9by52ZXJ0ZXhGb3JtYXQsdGhpcy5fZmxhdD1lKGkuZmxhdCwhMSksdGhpcy5fZmFjZUZvcndhcmQ9ZShpLmZhY2VGb3J3YXJkLCFyKX07cmV0dXJuIGkobS5wcm90b3R5cGUse3ZlcnRleFNoYWRlclNvdXJjZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZlcnRleFNoYWRlclNvdXJjZX19LGZyYWdtZW50U2hhZGVyU291cmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2V9fSxyZW5kZXJTdGF0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlclN0YXRlfX0sY2xvc2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xvc2VkfX0sbWF0ZXJpYWxTdXBwb3J0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWxTdXBwb3J0fX0sdmVydGV4Rm9ybWF0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGV4Rm9ybWF0fX0sZmxhdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZsYXR9fSxmYWNlRm9yd2FyZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZhY2VGb3J3YXJkfX19KSxtLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZT1kLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSxtLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50PWQucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQsbS5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU9ZC5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGUsbS5NYXRlcmlhbFN1cHBvcnQ9e0JBU0lDOm4oe3ZlcnRleEZvcm1hdDpyLlBPU0lUSU9OX0FORF9OT1JNQUwsdmVydGV4U2hhZGVyU291cmNlOmwsZnJhZ21lbnRTaGFkZXJTb3VyY2U6c30pLFRFWFRVUkVEOm4oe3ZlcnRleEZvcm1hdDpyLlBPU0lUSU9OX05PUk1BTF9BTkRfU1QsdmVydGV4U2hhZGVyU291cmNlOmMsZnJhZ21lbnRTaGFkZXJTb3VyY2U6dX0pLEFMTDpuKHt2ZXJ0ZXhGb3JtYXQ6ci5BTEwsdmVydGV4U2hhZGVyU291cmNlOmEsZnJhZ21lbnRTaGFkZXJTb3VyY2U6b30pfSxtfSksZGVmaW5lKCJTaGFkZXJzL0FwcGVhcmFuY2VzL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ2YXJ5aW5nIHZlYzMgdl9wb3NpdGlvbkVDO1xudmFyeWluZyB2ZWMzIHZfbm9ybWFsRUM7XG52YXJ5aW5nIHZlYzQgdl9jb2xvcjtcblxudm9pZCBtYWluKClcbntcbiAgICB2ZWMzIHBvc2l0aW9uVG9FeWVFQyA9IC12X3Bvc2l0aW9uRUM7XG4gICAgXG4JdmVjMyBub3JtYWxFQztcbiNpZmRlZiBGQUNFX0ZPUldBUkRcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZShmYWNlZm9yd2FyZCh2X25vcm1hbEVDLCB2ZWMzKDAuMCwgMC4wLCAxLjApLCAtdl9ub3JtYWxFQykpO1xuI2Vsc2VcbiAgICBub3JtYWxFQyA9IG5vcm1hbGl6ZSh2X25vcm1hbEVDKTtcbiNlbmRpZlxuICAgIFxuICAgIGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQ7XG4gICAgbWF0ZXJpYWxJbnB1dC5ub3JtYWxFQyA9IG5vcm1hbEVDO1xuICAgIG1hdGVyaWFsSW5wdXQucG9zaXRpb25Ub0V5ZUVDID0gcG9zaXRpb25Ub0V5ZUVDO1xuICAgIGN6bV9tYXRlcmlhbCBtYXRlcmlhbCA9IGN6bV9nZXREZWZhdWx0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7XG4gICAgbWF0ZXJpYWwuZGlmZnVzZSA9IHZfY29sb3IucmdiO1xuICAgIG1hdGVyaWFsLmFscGhhID0gdl9jb2xvci5hO1xuICAgIFxuICAgIGdsX0ZyYWdDb2xvciA9IGN6bV9waG9uZyhub3JtYWxpemUocG9zaXRpb25Ub0V5ZUVDKSwgbWF0ZXJpYWwpO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9BcHBlYXJhbmNlcy9QZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZVZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjNETG93O1xuYXR0cmlidXRlIHZlYzMgbm9ybWFsO1xuYXR0cmlidXRlIHZlYzQgY29sb3I7XG5cbnZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG52YXJ5aW5nIHZlYzMgdl9ub3JtYWxFQztcbnZhcnlpbmcgdmVjNCB2X2NvbG9yO1xuXG52b2lkIG1haW4oKSBcbntcbiAgICB2ZWM0IHAgPSBjem1fY29tcHV0ZVBvc2l0aW9uKCk7XG5cbiAgICB2X3Bvc2l0aW9uRUMgPSAoY3ptX21vZGVsVmlld1JlbGF0aXZlVG9FeWUgKiBwKS54eXo7ICAgICAgLy8gcG9zaXRpb24gaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgdl9ub3JtYWxFQyA9IGN6bV9ub3JtYWwgKiBub3JtYWw7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vcm1hbCBpbiBleWUgY29vcmRpbmF0ZXNcbiAgICB2X2NvbG9yID0gY29sb3I7XG4gICAgXG4gICAgZ2xfUG9zaXRpb24gPSBjem1fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWUgKiBwO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9BcHBlYXJhbmNlcy9QZXJJbnN0YW5jZUZsYXRDb2xvckFwcGVhcmFuY2VGUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInZhcnlpbmcgdmVjNCB2X2NvbG9yO1xuXG52b2lkIG1haW4oKVxue1xuICAgIGdsX0ZyYWdDb2xvciA9IHZfY29sb3I7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0FwcGVhcmFuY2VzL1Blckluc3RhbmNlRmxhdENvbG9yQXBwZWFyYW5jZVZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjNETG93O1xuYXR0cmlidXRlIHZlYzQgY29sb3I7XG5cbnZhcnlpbmcgdmVjNCB2X2NvbG9yO1xuXG52b2lkIG1haW4oKSBcbntcbiAgICB2ZWM0IHAgPSBjem1fY29tcHV0ZVBvc2l0aW9uKCk7XG5cbiAgICB2X2NvbG9yID0gY29sb3I7XG4gICAgXG4gICAgZ2xfUG9zaXRpb24gPSBjem1fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWUgKiBwO1xufVxuIn0pLGRlZmluZSgiU2NlbmUvUGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2UiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL1ZlcnRleEZvcm1hdCIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvUGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2VGUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvUGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2VWUyIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvUGVySW5zdGFuY2VGbGF0Q29sb3JBcHBlYXJhbmNlRlMiLCIuLi9TaGFkZXJzL0FwcGVhcmFuY2VzL1Blckluc3RhbmNlRmxhdENvbG9yQXBwZWFyYW5jZVZTIiwiLi9BcHBlYXJhbmNlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24odCl7dD1lKHQsZS5FTVBUWV9PQkpFQ1QpO3ZhciBpPWUodC50cmFuc2x1Y2VudCwhMCksdT1lKHQuY2xvc2VkLCExKSxjPWUodC5mbGF0LCExKSxkPWM/YTpyLGg9Yz9vOm4sbT1jP2wuRkxBVF9WRVJURVhfRk9STUFUOmwuVkVSVEVYX0ZPUk1BVDt0aGlzLm1hdGVyaWFsPXZvaWQgMCx0aGlzLnRyYW5zbHVjZW50PWksdGhpcy5fdmVydGV4U2hhZGVyU291cmNlPWUodC52ZXJ0ZXhTaGFkZXJTb3VyY2UsZCksdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2U9ZSh0LmZyYWdtZW50U2hhZGVyU291cmNlLGgpLHRoaXMuX3JlbmRlclN0YXRlPWUodC5yZW5kZXJTdGF0ZSxzLmdldERlZmF1bHRSZW5kZXJTdGF0ZShpLHUpKSx0aGlzLl9jbG9zZWQ9dSx0aGlzLl92ZXJ0ZXhGb3JtYXQ9bSx0aGlzLl9mbGF0PWMsdGhpcy5fZmFjZUZvcndhcmQ9ZSh0LmZhY2VGb3J3YXJkLCF1KX07cmV0dXJuIHQobC5wcm90b3R5cGUse3ZlcnRleFNoYWRlclNvdXJjZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZlcnRleFNoYWRlclNvdXJjZX19LGZyYWdtZW50U2hhZGVyU291cmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2V9fSxyZW5kZXJTdGF0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlclN0YXRlfX0sY2xvc2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xvc2VkfX0sdmVydGV4Rm9ybWF0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGV4Rm9ybWF0fX0sZmxhdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZsYXR9fSxmYWNlRm9yd2FyZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZhY2VGb3J3YXJkfX19KSxsLlZFUlRFWF9GT1JNQVQ9aS5QT1NJVElPTl9BTkRfTk9STUFMLGwuRkxBVF9WRVJURVhfRk9STUFUPWkuUE9TSVRJT05fT05MWSxsLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZT1zLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSxsLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50PXMucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQsbC5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU9cy5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGUsbH0pLGRlZmluZSgiQ29yZS9HZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0KXt0PWUodCxlLkVNUFRZX09CSkVDVCksdGhpcy5jb21wb25lbnREYXRhdHlwZT10LmNvbXBvbmVudERhdGF0eXBlLHRoaXMuY29tcG9uZW50c1BlckF0dHJpYnV0ZT10LmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsdGhpcy5ub3JtYWxpemU9ZSh0Lm5vcm1hbGl6ZSwhMSksdGhpcy52YWx1ZT10LnZhbHVlfTtyZXR1cm4gdH0pLGRlZmluZSgiQ29yZS9zdWJkaXZpZGVBcnJheSIsWyIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9W10sbj1lLmxlbmd0aCxyPTA7bj5yOyl7dmFyIG89TWF0aC5jZWlsKChuLXIpL3QtLSk7aS5wdXNoKGUuc2xpY2UocixyK28pKSxyKz1vfXJldHVybiBpfTtyZXR1cm4gZX0pLGRlZmluZSgiQ29yZS9UYXNrUHJvY2Vzc29yIixbIi4uL1RoaXJkUGFydHkvVXJpIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9idWlsZE1vZHVsZVVybCIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZXN0cm95T2JqZWN0IiwiLi9pc0Nyb3NzT3JpZ2luVXJsIiwicmVxdWlyZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGwoKXtpZighcihmLl9jYW5UcmFuc2ZlckFycmF5QnVmZmVyKSl7dmFyIGU9bmV3IFdvcmtlcihjKCJXb3JrZXJzL3RyYW5zZmVyVHlwZWRBcnJheVRlc3QuanMiKSk7ZS5wb3N0TWVzc2FnZT1uKGUud2Via2l0UG9zdE1lc3NhZ2UsZS5wb3N0TWVzc2FnZSk7dmFyIGk9OTksbz1uZXcgSW50OEFycmF5KFtpXSk7dHJ5e2UucG9zdE1lc3NhZ2Uoe2FycmF5Om99LFtvLmJ1ZmZlcl0pfWNhdGNoKGEpe3JldHVybiBmLl9jYW5UcmFuc2ZlckFycmF5QnVmZmVyPSExLGYuX2NhblRyYW5zZmVyQXJyYXlCdWZmZXJ9dmFyIHM9dC5kZWZlcigpO2Uub25tZXNzYWdlPWZ1bmN0aW9uKHQpe3ZhciBuPXQuZGF0YS5hcnJheSxvPXIobikmJm5bMF09PT1pO3MucmVzb2x2ZShvKSxlLnRlcm1pbmF0ZSgpLGYuX2NhblRyYW5zZmVyQXJyYXlCdWZmZXI9b30sZi5fY2FuVHJhbnNmZXJBcnJheUJ1ZmZlcj1zLnByb21pc2V9cmV0dXJuIGYuX2NhblRyYW5zZmVyQXJyYXlCdWZmZXJ9ZnVuY3Rpb24gdShlLHQpey0tZS5fYWN0aXZlVGFza3M7dmFyIGk9dC5pZDtpZihyKGkpKXt2YXIgbj1lLl9kZWZlcnJlZHMsbz1uW2ldO3IodC5lcnJvcik/by5yZWplY3QodC5lcnJvcik6by5yZXNvbHZlKHQucmVzdWx0KSxkZWxldGUgbltpXX19ZnVuY3Rpb24gYyhlKXt2YXIgdD1pKGUpO2lmKGEodCkpe3ZhciBuLHI9J2ltcG9ydFNjcmlwdHMoIicrdCsnIik7Jzt0cnl7bj1uZXcgQmxvYihbcl0se3R5cGU6ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQifSl9Y2F0Y2gobyl7dmFyIHM9d2luZG93LkJsb2JCdWlsZGVyfHx3aW5kb3cuV2ViS2l0QmxvYkJ1aWxkZXJ8fHdpbmRvdy5Nb3pCbG9iQnVpbGRlcnx8d2luZG93Lk1TQmxvYkJ1aWxkZXIsbD1uZXcgcztsLmFwcGVuZChyKSxuPWwuZ2V0QmxvYigiYXBwbGljYXRpb24vamF2YXNjcmlwdCIpfXZhciB1PXdpbmRvdy5VUkx8fHdpbmRvdy53ZWJraXRVUkw7dD11LmNyZWF0ZU9iamVjdFVSTChuKX1yZXR1cm4gdH1mdW5jdGlvbiBkKCl7cmV0dXJuIHIobSl8fChtPWMoIldvcmtlcnMvY2VzaXVtV29ya2VyQm9vdHN0cmFwcGVyLmpzIikpLG19ZnVuY3Rpb24gaCh0KXt2YXIgbz1uZXcgV29ya2VyKGQoKSk7by5wb3N0TWVzc2FnZT1uKG8ud2Via2l0UG9zdE1lc3NhZ2Usby5wb3N0TWVzc2FnZSk7dmFyIGE9e2xvYWRlckNvbmZpZzp7fSx3b3JrZXJNb2R1bGU6Zi5fd29ya2VyTW9kdWxlUHJlZml4K3QuX3dvcmtlck5hbWV9O2lmKHIoZi5fbG9hZGVyQ29uZmlnKSlhLmxvYWRlckNvbmZpZz1mLl9sb2FkZXJDb25maWc7ZWxzZSBpZihyKHMudG9VcmwpKXt2YXIgbD1uZXcgZSgiLi4iKS5yZXNvbHZlKG5ldyBlKGkoIldvcmtlcnMvY2VzaXVtV29ya2VyQm9vdHN0cmFwcGVyLmpzIikpKS50b1N0cmluZygpO2EubG9hZGVyQ29uZmlnLmJhc2VVcmw9bH1lbHNlIGEubG9hZGVyQ29uZmlnLnBhdGhzPXtXb3JrZXJzOmkoIldvcmtlcnMiKX07cmV0dXJuIG8ucG9zdE1lc3NhZ2UoYSksby5vbm1lc3NhZ2U9ZnVuY3Rpb24oZSl7dSh0LGUuZGF0YSl9LG99dmFyIG0sZj1mdW5jdGlvbihlLHQpe3RoaXMuX3dvcmtlck5hbWU9ZSx0aGlzLl9tYXhpbXVtQWN0aXZlVGFza3M9bih0LDUpLHRoaXMuX2FjdGl2ZVRhc2tzPTAsdGhpcy5fZGVmZXJyZWRzPXt9LHRoaXMuX25leHRJRD0wfSxwPVtdO3JldHVybiBmLnByb3RvdHlwZS5zY2hlZHVsZVRhc2s9ZnVuY3Rpb24oZSxpKXtpZihyKHRoaXMuX3dvcmtlcil8fCh0aGlzLl93b3JrZXI9aCh0aGlzKSksdGhpcy5fYWN0aXZlVGFza3M+PXRoaXMuX21heGltdW1BY3RpdmVUYXNrcylyZXR1cm4gdm9pZCAwOysrdGhpcy5fYWN0aXZlVGFza3M7dmFyIG49dGhpcztyZXR1cm4gdChsKCksZnVuY3Rpb24obyl7cihpKT9vfHwoaS5sZW5ndGg9MCk6aT1wO3ZhciBhPW4uX25leHRJRCsrLHM9dC5kZWZlcigpO3JldHVybiBuLl9kZWZlcnJlZHNbYV09cyxuLl93b3JrZXIucG9zdE1lc3NhZ2Uoe2lkOmEscGFyYW1ldGVyczplLGNhblRyYW5zZmVyQXJyYXlCdWZmZXI6b30saSkscy5wcm9taXNlfSl9LGYucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGYucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLl93b3JrZXIpJiZ0aGlzLl93b3JrZXIudGVybWluYXRlKCksbyh0aGlzKX0sZi5fZGVmYXVsdFdvcmtlck1vZHVsZVByZWZpeD0iV29ya2Vycy8iLGYuX3dvcmtlck1vZHVsZVByZWZpeD1mLl9kZWZhdWx0V29ya2VyTW9kdWxlUHJlZml4LGYuX2xvYWRlckNvbmZpZz12b2lkIDAsZi5fY2FuVHJhbnNmZXJBcnJheUJ1ZmZlcj12b2lkIDAsZn0pLGRlZmluZSgiU2NlbmUvUHJpbWl0aXZlUGlwZWxpbmUiLFsiLi4vQ29yZS9Cb3VuZGluZ1NwaGVyZSIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FbGxpcHNvaWQiLCIuLi9Db3JlL0ZlYXR1cmVEZXRlY3Rpb24iLCIuLi9Db3JlL0dlb2dyYXBoaWNQcm9qZWN0aW9uIiwiLi4vQ29yZS9HZW9tZXRyeSIsIi4uL0NvcmUvR2VvbWV0cnlBdHRyaWJ1dGUiLCIuLi9Db3JlL0dlb21ldHJ5UGlwZWxpbmUiLCIuLi9Db3JlL0luZGV4RGF0YXR5cGUiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1dlYk1lcmNhdG9yUHJvamVjdGlvbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcChlLHQsaSl7dmFyIG4scj0haSxvPWUubGVuZ3RoO2lmKCFyJiZvPjEpe3ZhciBhPWVbMF0ubW9kZWxNYXRyaXg7Zm9yKG49MTtvPm47KytuKWlmKCFtLmVxdWFscyhhLGVbbl0ubW9kZWxNYXRyaXgpKXtyPSEwO2JyZWFrfX1pZihyKWZvcihuPTA7bz5uOysrbilkLnRyYW5zZm9ybVRvV29ybGRDb29yZGluYXRlcyhlW25dKTtlbHNlIG0uY2xvbmUoZVswXS5tb2RlbE1hdHJpeCx0KX1mdW5jdGlvbiB2KGUsbil7Zm9yKHZhciByPWUubGVuZ3RoLG89MDtyPm87KytvKXt2YXIgYT1lW29dLHM9YS5nZW9tZXRyeSxsPXMuYXR0cmlidXRlcyx1PWwucG9zaXRpb24sZD00Kih1LnZhbHVlcy5sZW5ndGgvdS5jb21wb25lbnRzUGVyQXR0cmlidXRlKTtsLnBpY2tDb2xvcj1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6aS5VTlNJR05FRF9CWVRFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxub3JtYWxpemU6ITAsdmFsdWVzOm5ldyBVaW50OEFycmF5KGQpfSk7Zm9yKHZhciBoPW5bb10sbT10LmZsb2F0VG9CeXRlKGgucmVkKSxmPXQuZmxvYXRUb0J5dGUoaC5ncmVlbikscD10LmZsb2F0VG9CeXRlKGguYmx1ZSksdj10LmZsb2F0VG9CeXRlKGguYWxwaGEpLGc9bC5waWNrQ29sb3IudmFsdWVzLF89MDtkPl87Xys9NClnW19dPW0sZ1tfKzFdPWYsZ1tfKzJdPXAsZ1tfKzNdPXZ9fWZ1bmN0aW9uIGcoZSl7dmFyIHQsaT1lLmxlbmd0aCxuPVtdLG89ZVswXS5hdHRyaWJ1dGVzO2Zvcih0IGluIG8paWYoby5oYXNPd25Qcm9wZXJ0eSh0KSl7Zm9yKHZhciBhPW9bdF0scz0hMCxsPTE7aT5sOysrbCl7dmFyIHU9ZVtsXS5hdHRyaWJ1dGVzW3RdO2lmKCFyKHUpfHxhLmNvbXBvbmVudERhdGF0eXBlIT09dS5jb21wb25lbnREYXRhdHlwZXx8YS5jb21wb25lbnRzUGVyQXR0cmlidXRlIT09dS5jb21wb25lbnRzUGVyQXR0cmlidXRlfHxhLm5vcm1hbGl6ZSE9PXUubm9ybWFsaXplKXtzPSExO2JyZWFrfX1zJiZuLnB1c2godCl9cmV0dXJuIG59ZnVuY3Rpb24gXyhlLHQpe2Zvcih2YXIgbj1lLmxlbmd0aCxyPTA7bj5yOysrcilmb3IodmFyIG89ZVtyXSxhPW8uYXR0cmlidXRlcyxzPW8uZ2VvbWV0cnksbD11LmNvbXB1dGVOdW1iZXJPZlZlcnRpY2VzKHMpLGQ9dC5sZW5ndGgsaD0wO2Q+aDsrK2gpe2Zvcih2YXIgbT10W2hdLGY9YVttXSxwPWYuY29tcG9uZW50RGF0YXR5cGUsdj1mLnZhbHVlLGc9di5sZW5ndGgsXz1pLmNyZWF0ZVR5cGVkQXJyYXkocCxsKmcpLHk9MDtsPnk7Kyt5KV8uc2V0KHYseSpnKTtzLmF0dHJpYnV0ZXNbbV09bmV3IGMoe2NvbXBvbmVudERhdGF0eXBlOnAsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpnLG5vcm1hbGl6ZTpmLm5vcm1hbGl6ZSx2YWx1ZXM6X30pfX1mdW5jdGlvbiB5KGUpe3ZhciB0LG49ZS5pbnN0YW5jZXMscj1lLnBpY2tJZHMsbz1lLnByb2plY3Rpb24sYT1lLmVsZW1lbnRJbmRleFVpbnRTdXBwb3J0ZWQscz1lLnNjZW5lM0RPbmx5LGw9ZS5hbGxvd1BpY2tpbmcsdT1lLnZlcnRleENhY2hlT3B0aW1pemUsYz1lLm1vZGVsTWF0cml4LGg9bi5sZW5ndGg7aWYoblswXS5nZW9tZXRyeS5wcmltaXRpdmVUeXBlLHAobixjLHMpLCFzKWZvcih0PTA7aD50OysrdClkLndyYXBMb25naXR1ZGUoblt0XS5nZW9tZXRyeSk7bCYmdihuLHIpO3ZhciBtPWcobik7aWYoXyhuLG0pLHUpZm9yKHQ9MDtoPnQ7Kyt0KWQucmVvcmRlckZvclBvc3RWZXJ0ZXhDYWNoZShuW3RdLmdlb21ldHJ5KSxkLnJlb3JkZXJGb3JQcmVWZXJ0ZXhDYWNoZShuW3RdLmdlb21ldHJ5KTt2YXIgZix5PWQuY29tYmluZShuKSxDPXkuYXR0cmlidXRlcztpZihzKWZvcihmIGluIEMpQy5oYXNPd25Qcm9wZXJ0eShmKSYmQ1tmXS5jb21wb25lbnREYXRhdHlwZT09PWkuRE9VQkxFJiZkLmVuY29kZUF0dHJpYnV0ZSh5LGYsZisiM0RIaWdoIixmKyIzRExvdyIpO2Vsc2UgZm9yKGYgaW4gQylpZihDLmhhc093blByb3BlcnR5KGYpJiZDW2ZdLmNvbXBvbmVudERhdGF0eXBlPT09aS5ET1VCTEUpe3ZhciB3PWYrIjNEIixFPWYrIjJEIjtkLnByb2plY3RUbzJEKHksZix3LEUsbyksZC5lbmNvZGVBdHRyaWJ1dGUoeSx3LHcrIkhpZ2giLHcrIkxvdyIpLGQuZW5jb2RlQXR0cmlidXRlKHksRSxFKyJIaWdoIixFKyJMb3ciKX1yZXR1cm4gYT9beV06ZC5maXRUb1Vuc2lnbmVkU2hvcnRJbmRpY2VzKHkpfWZ1bmN0aW9uIEMoZSx0LG4pe2Zvcih2YXIgcj1bXSxvPWUuYXR0cmlidXRlcyxhPW4ubGVuZ3RoLHM9MDthPnM7KytzKXt2YXIgbD1uW3NdLHU9b1tsXSxjPXUuY29tcG9uZW50RGF0YXR5cGU7Yz09PWkuRE9VQkxFJiYoYz1pLkZMT0FUKTt2YXIgZD1pLmNyZWF0ZVR5cGVkQXJyYXkoYyx1LnZhbHVlcyk7ci5wdXNoKHtpbmRleDp0W2xdLGNvbXBvbmVudERhdGF0eXBlOmMsY29tcG9uZW50c1BlckF0dHJpYnV0ZTp1LmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsbm9ybWFsaXplOnUubm9ybWFsaXplLHZhbHVlczpkfSksZGVsZXRlIG9bbF19cmV0dXJuIHJ9ZnVuY3Rpb24gdyhlLHQsaSl7Zm9yKHZhciBvPVtdLGE9ZyhlKSxzPWUubGVuZ3RoLGw9e30sYz17fSxkPTA7cz5kOysrZClmb3IodmFyIGg9ZVtkXSxtPXUuY29tcHV0ZU51bWJlck9mVmVydGljZXMoaC5nZW9tZXRyeSksZj1hLmxlbmd0aCxwPTA7Zj5wOysrcClmb3IodmFyIHY9YVtwXSxfPWlbdl0seT1tO3k+MDspe2Zvcih2YXIgQyx3PW4oY1t2XSwwKSxFPXRbd10sYj1FLmxlbmd0aCxTPTA7Yj5TJiYoQz1FW1NdLEMuaW5kZXghPT1fKTsrK1MpO3Iob1tkXSl8fChvW2RdPXt9KSxyKG9bZF1bdl0pfHwob1tkXVt2XT17ZGlydHk6ITEsdmFsdWU6aC5hdHRyaWJ1dGVzW3ZdLnZhbHVlLGluZGljZXM6W119KTt2YXIgVCx4PUMudmFsdWVzLmxlbmd0aC9DLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsQT1uKGxbdl0sMCk7eD5BK3k/KFQ9eSxvW2RdW3ZdLmluZGljZXMucHVzaCh7YXR0cmlidXRlOkMsb2Zmc2V0OkEsY291bnQ6VH0pLGxbdl09QSt5KTooVD14LUEsb1tkXVt2XS5pbmRpY2VzLnB1c2goe2F0dHJpYnV0ZTpDLG9mZnNldDpBLGNvdW50OlR9KSxsW3ZdPTAsY1t2XT13KzEpLHktPVR9cmV0dXJuIG99ZnVuY3Rpb24gRShlLHQpe3ZhciBpPWUuYXR0cmlidXRlcztmb3IodmFyIG4gaW4gaSlpZihpLmhhc093blByb3BlcnR5KG4pKXt2YXIgbz1pW25dO3IobykmJnIoby52YWx1ZXMpJiZ0LnB1c2goby52YWx1ZXMuYnVmZmVyKX1yKGUuaW5kaWNlcykmJnQucHVzaChlLmluZGljZXMuYnVmZmVyKX1mdW5jdGlvbiBiKGUsdCl7Zm9yKHZhciBpPWUubGVuZ3RoLG49MDtpPm47KytuKUUoZVtuXSx0KX1mdW5jdGlvbiBTKGUsdCl7Zm9yKHZhciBpPWUubGVuZ3RoLG49MDtpPm47KytuKWZvcih2YXIgcj1lW25dLG89ci5sZW5ndGgsYT0wO28+YTsrK2EpdC5wdXNoKHJbYV0udmFsdWVzLmJ1ZmZlcil9ZnVuY3Rpb24gVCh0KXtmb3IodmFyIGk9MSxuPXQubGVuZ3RoLG89MDtuPm87bysrKXt2YXIgYT10W29dLHM9YS5hdHRyaWJ1dGVzO2krPTMrZS5wYWNrZWRMZW5ndGgrKHIoYS5pbmRpY2VzKT9hLmluZGljZXMubGVuZ3RoOjApO2Zvcih2YXIgbCBpbiBzKWlmKHMuaGFzT3duUHJvcGVydHkobCkmJnIoc1tsXSkpe3ZhciB1PXNbbF07aSs9NSt1LnZhbHVlcy5sZW5ndGh9fXJldHVybiBpfWZ1bmN0aW9uIHgoZSx0KXtmb3IodmFyIGk9ZS5sZW5ndGgsbj1uZXcgVWludDMyQXJyYXkoZS5sZW5ndGgpLHI9MDtpPnI7KytyKW5bcl09ZVtyXS50b1JnYmEoKTtyZXR1cm4gdC5wdXNoKG4uYnVmZmVyKSxufWZ1bmN0aW9uIEEoZSl7Zm9yKHZhciBpPWUubGVuZ3RoLG49bmV3IEFycmF5KGkpLHI9MDtpPnI7cisrKW5bcl09dC5mcm9tUmdiYShlW3JdKTtyZXR1cm4gbn1mdW5jdGlvbiBQKGUpe2Zvcih2YXIgdD1lLmxlbmd0aCxpPTErMTcqdCxuPTA7dD5uO24rKyl7dmFyIG89ZVtuXS5hdHRyaWJ1dGVzO2Zvcih2YXIgYSBpbiBvKWlmKG8uaGFzT3duUHJvcGVydHkoYSkmJnIob1thXSkpe3ZhciBzPW9bYV07aSs9NStzLnZhbHVlLmxlbmd0aH19cmV0dXJuIGl9ZnVuY3Rpb24gTShlLHQpe3ZhciBpPW5ldyBGbG9hdDY0QXJyYXkoUChlKSksbj17fSxvPVtdLGE9ZS5sZW5ndGgscz0wO2lbcysrXT1hO2Zvcih2YXIgbD0wO2E+bDtsKyspe3ZhciB1PWVbbF07bS5wYWNrKHUubW9kZWxNYXRyaXgsaSxzKSxzKz1tLnBhY2tlZExlbmd0aDt2YXIgYz11LmF0dHJpYnV0ZXMsZD1bXTtmb3IodmFyIGggaW4gYyljLmhhc093blByb3BlcnR5KGgpJiZyKGNbaF0pJiYoZC5wdXNoKGgpLHIobltoXSl8fChuW2hdPW8ubGVuZ3RoLG8ucHVzaChoKSkpO2lbcysrXT1kLmxlbmd0aDtmb3IodmFyIGY9MDtmPGQubGVuZ3RoO2YrKyl7dmFyIHA9ZFtmXSx2PWNbcF07aVtzKytdPW5bcF0saVtzKytdPXYuY29tcG9uZW50RGF0YXR5cGUsaVtzKytdPXYuY29tcG9uZW50c1BlckF0dHJpYnV0ZSxpW3MrK109di5ub3JtYWxpemUsaVtzKytdPXYudmFsdWUubGVuZ3RoLGkuc2V0KHYudmFsdWUscykscys9di52YWx1ZS5sZW5ndGh9fXJldHVybiB0LnB1c2goaS5idWZmZXIpLHtzdHJpbmdUYWJsZTpvLHBhY2tlZERhdGE6aX19ZnVuY3Rpb24gSShlKXtmb3IodmFyIHQ9ZS5wYWNrZWREYXRhLG49ZS5zdHJpbmdUYWJsZSxyPW5ldyBBcnJheSh0WzBdKSxvPTAsYT0xO2E8dC5sZW5ndGg7KXt2YXIgcz1tLnVucGFjayh0LGEpO2ErPW0ucGFja2VkTGVuZ3RoO2Zvcih2YXIgbD17fSx1PXRbYSsrXSxjPTA7dT5jO2MrKyl7Zm9yKHZhciBkPW5bdFthKytdXSxoPXRbYSsrXSxmPXRbYSsrXSxwPTAhPT10W2ErK10sdj10W2ErK10sZz1pLmNyZWF0ZVR5cGVkQXJyYXkoaCx2KSxfPTA7dj5fO18rKylnW19dPXRbYSsrXTtsW2RdPXtjb21wb25lbnREYXRhdHlwZTpoLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Zixub3JtYWxpemU6cCx2YWx1ZTpnfX1yW28rK109e2F0dHJpYnV0ZXM6bCxtb2RlbE1hdHJpeDpzfX1yZXR1cm4gcn1mdW5jdGlvbiBEKGUpe2Zvcih2YXIgdD1lLmxlbmd0aCxpPTErdCxuPTA7dD5uO24rKyl7dmFyIG89ZVtuXTtmb3IodmFyIGEgaW4gbylpZihvLmhhc093blByb3BlcnR5KGEpJiZyKG9bYV0pKXt2YXIgcz1vW2FdO2krPTMrMypzLmluZGljZXMubGVuZ3RoK3MudmFsdWUubGVuZ3RofX1yZXR1cm4gaX1mdW5jdGlvbiBPKGUsdCl7dmFyIGk9bmV3IEZsb2F0NjRBcnJheShEKGUpKSxuPVtdLG89W10sYT17fSxzPWUubGVuZ3RoLGw9MDtpW2wrK109cztmb3IodmFyIHU9MDtzPnU7dSsrKXt2YXIgYz1lW3VdLGQ9W107Zm9yKHZhciBoIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShoKSYmcihjW2hdKSYmKGQucHVzaChoKSxyKGFbaF0pfHwoYVtoXT1uLmxlbmd0aCxuLnB1c2goaCkpKTtpW2wrK109ZC5sZW5ndGg7Zm9yKHZhciBtPTA7bTxkLmxlbmd0aDttKyspe3ZhciBmPWRbbV0scD1jW2ZdO2lbbCsrXT1hW2ZdO3ZhciB2PXAuaW5kaWNlcyxnPXYubGVuZ3RoO2lbbCsrXT1nO2Zvcih2YXIgXz0wO2c+XztfKyspe3ZhciB5PXZbX107aVtsKytdPXkuY291bnQsaVtsKytdPXkub2Zmc2V0O3ZhciBDPW8uaW5kZXhPZih5LmF0dHJpYnV0ZSk7LTE9PT1DJiYoQz1vLmxlbmd0aCxvLnB1c2goeS5hdHRyaWJ1dGUpKSxpW2wrK109Q31pW2wrK109cC52YWx1ZS5sZW5ndGgsaS5zZXQocC52YWx1ZSxsKSxsKz1wLnZhbHVlLmxlbmd0aH19cmV0dXJuIHQucHVzaChpLmJ1ZmZlcikse3N0cmluZ1RhYmxlOm4scGFja2VkRGF0YTppLGF0dHJpYnV0ZVRhYmxlOm99fWZ1bmN0aW9uIFIoZSl7Zm9yKHZhciB0PWUuc3RyaW5nVGFibGUsbj1lLmF0dHJpYnV0ZVRhYmxlLHI9ZS5wYWNrZWREYXRhLG89bmV3IEFycmF5KHJbMF0pLGE9MCxzPTEsbD1yLmxlbmd0aDtsPnM7KXtmb3IodmFyIHU9e30sYz1yW3MrK10sZD0wO2M+ZDtkKyspe2Zvcih2YXIgaD10W3JbcysrXV0sbT1uZXcgQXJyYXkocltzKytdKSxmPTA7ZjxtLmxlbmd0aDtmKyspe3ZhciBwPXt9O3AuY291bnQ9cltzKytdLHAub2Zmc2V0PXJbcysrXSxwLmF0dHJpYnV0ZT1uW3JbcysrXV0sbVtmXT1wfWZvcih2YXIgdj1yW3MrK10sZz1pLmNyZWF0ZVR5cGVkQXJyYXkobVswXS5hdHRyaWJ1dGUuY29tcG9uZW50RGF0YXR5cGUsdiksXz0wO3Y+XztfKyspZ1tfXT1yW3MrK107dVtoXT17ZGlydHk6ITEsaW5kaWNlczptLHZhbHVlOmd9fW9bYSsrXT11fXJldHVybiBvfWlmKCFzLnN1cHBvcnRzVHlwZWRBcnJheXMoKSlyZXR1cm57fTt2YXIgTD17fTtyZXR1cm4gTC5jb21iaW5lR2VvbWV0cnk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXkoZSksaT1kLmNyZWF0ZUF0dHJpYnV0ZUxvY2F0aW9ucyh0WzBdKSxuPWUuaW5zdGFuY2VzLHI9ZyhuKSxvPVtdLGE9dC5sZW5ndGgscz0wO2E+czsrK3Mpe3ZhciBsPXRbc107by5wdXNoKEMobCxpLHIpKX12YXIgdT13KG4sbyxpKTtyZXR1cm57Z2VvbWV0cmllczp0LG1vZGVsTWF0cml4OmUubW9kZWxNYXRyaXgsYXR0cmlidXRlTG9jYXRpb25zOmksdmFBdHRyaWJ1dGVzOm8sdmFBdHRyaWJ1dGVMb2NhdGlvbnM6dX19LEwucGFja0NyZWF0ZUdlb21ldHJ5UmVzdWx0cz1mdW5jdGlvbih0LGkpe3ZhciBuPW5ldyBGbG9hdDY0QXJyYXkoVCh0KSksbz1bXSxhPXt9LHM9dC5sZW5ndGgsbD0wO25bbCsrXT1zO2Zvcih2YXIgdT0wO3M+dTt1Kyspe3ZhciBjPXRbdV07bltsKytdPWMucHJpbWl0aXZlVHlwZSxlLnBhY2soYy5ib3VuZGluZ1NwaGVyZSxuLGwpLGwrPWUucGFja2VkTGVuZ3RoO3ZhciBkPWMuYXR0cmlidXRlcyxoPVtdO2Zvcih2YXIgbSBpbiBkKWQuaGFzT3duUHJvcGVydHkobSkmJnIoZFttXSkmJihoLnB1c2gobSkscihhW21dKXx8KGFbbV09by5sZW5ndGgsby5wdXNoKG0pKSk7bltsKytdPWgubGVuZ3RoO2Zvcih2YXIgZj0wO2Y8aC5sZW5ndGg7ZisrKXt2YXIgcD1oW2ZdLHY9ZFtwXTtuW2wrK109YVtwXSxuW2wrK109di5jb21wb25lbnREYXRhdHlwZSxuW2wrK109di5jb21wb25lbnRzUGVyQXR0cmlidXRlLG5bbCsrXT12Lm5vcm1hbGl6ZT8xOjAsbltsKytdPXYudmFsdWVzLmxlbmd0aCxuLnNldCh2LnZhbHVlcyxsKSxsKz12LnZhbHVlcy5sZW5ndGh9dmFyIGc9cihjLmluZGljZXMpP2MuaW5kaWNlcy5sZW5ndGg6MDtuW2wrK109ZyxnPjAmJihuLnNldChjLmluZGljZXMsbCksbCs9Zyl9cmV0dXJuIGkucHVzaChuLmJ1ZmZlcikse3N0cmluZ1RhYmxlOm8scGFja2VkRGF0YTpufX0sTC51bnBhY2tDcmVhdGVHZW9tZXRyeVJlc3VsdHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBuLHI9dC5zdHJpbmdUYWJsZSxvPXQucGFja2VkRGF0YSxhPW5ldyBBcnJheShvWzBdKSxzPTAsbD0xO2w8by5sZW5ndGg7KXt2YXIgZD1vW2wrK10sbT1lLnVucGFjayhvLGwpO2wrPWUucGFja2VkTGVuZ3RoO3ZhciBmLHAsdixnPXt9LF89b1tsKytdO2ZvcihuPTA7Xz5uO24rKyl7dmFyIHk9cltvW2wrK11dLEM9b1tsKytdO3Y9b1tsKytdO3ZhciB3PTAhPT1vW2wrK107Zj1vW2wrK10scD1pLmNyZWF0ZVR5cGVkQXJyYXkoQyxmKTtmb3IodmFyIEU9MDtmPkU7RSsrKXBbRV09b1tsKytdO2dbeV09bmV3IGMoe2NvbXBvbmVudERhdGF0eXBlOkMsY29tcG9uZW50c1BlckF0dHJpYnV0ZTp2LG5vcm1hbGl6ZTp3LHZhbHVlczpwfSl9dmFyIGI7aWYoZj1vW2wrK10sZj4wKXt2YXIgUz1wLmxlbmd0aC92O2ZvcihiPWguY3JlYXRlVHlwZWRBcnJheShTLGYpLG49MDtmPm47bisrKWJbbl09b1tsKytdfWFbcysrXT1uZXcgdSh7cHJpbWl0aXZlVHlwZTpkLGJvdW5kaW5nU3BoZXJlOm0saW5kaWNlczpiLGF0dHJpYnV0ZXM6Z30pfXJldHVybiBhfSxMLnBhY2tDb21iaW5lR2VvbWV0cnlQYXJhbWV0ZXJzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPWUuY3JlYXRlR2VvbWV0cnlSZXN1bHRzLG49aS5sZW5ndGgscj0wO24+cjtyKyspdC5wdXNoKGlbcl0ucGFja2VkRGF0YS5idWZmZXIpO3ZhciBvO3JldHVybiBlLmFsbG93UGlja2luZyYmKG89eChlLnBpY2tJZHMsdCkpLHtjcmVhdGVHZW9tZXRyeVJlc3VsdHM6ZS5jcmVhdGVHZW9tZXRyeVJlc3VsdHMscGFja2VkSW5zdGFuY2VzOk0oZS5pbnN0YW5jZXMsdCkscGFja2VkUGlja0lkczpvLGVsbGlwc29pZDplLmVsbGlwc29pZCxpc0dlb2dyYXBoaWM6ZS5wcm9qZWN0aW9uIGluc3RhbmNlb2YgbCxlbGVtZW50SW5kZXhVaW50U3VwcG9ydGVkOmUuZWxlbWVudEluZGV4VWludFN1cHBvcnRlZCxzY2VuZTNET25seTplLnNjZW5lM0RPbmx5LGFsbG93UGlja2luZzplLmFsbG93UGlja2luZyx2ZXJ0ZXhDYWNoZU9wdGltaXplOmUudmVydGV4Q2FjaGVPcHRpbWl6ZSxtb2RlbE1hdHJpeDplLm1vZGVsTWF0cml4fX0sTC51bnBhY2tDb21iaW5lR2VvbWV0cnlQYXJhbWV0ZXJzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1JKGUucGFja2VkSW5zdGFuY2VzKSxpPWUuYWxsb3dQaWNraW5nP0EoZS5wYWNrZWRQaWNrSWRzKTp2b2lkIDAsbj1lLmNyZWF0ZUdlb21ldHJ5UmVzdWx0cyxyPW4ubGVuZ3RoLG89MCxzPTA7cj5zO3MrKylmb3IodmFyIHU9TC51bnBhY2tDcmVhdGVHZW9tZXRyeVJlc3VsdHMobltzXSksYz11Lmxlbmd0aCxkPTA7Yz5kO2QrKyl0W28rK10uZ2VvbWV0cnk9dVtkXTt2YXIgaD1hLmNsb25lKGUuZWxsaXBzb2lkKSxwPWUuaXNHZW9ncmFwaGljP25ldyBsKGgpOm5ldyBmKGgpO3JldHVybntpbnN0YW5jZXM6dCxwaWNrSWRzOmksZWxsaXBzb2lkOmgscHJvamVjdGlvbjpwLGVsZW1lbnRJbmRleFVpbnRTdXBwb3J0ZWQ6ZS5lbGVtZW50SW5kZXhVaW50U3VwcG9ydGVkLHNjZW5lM0RPbmx5OmUuc2NlbmUzRE9ubHksYWxsb3dQaWNraW5nOmUuYWxsb3dQaWNraW5nLHZlcnRleENhY2hlT3B0aW1pemU6ZS52ZXJ0ZXhDYWNoZU9wdGltaXplLG1vZGVsTWF0cml4Om0uY2xvbmUoZS5tb2RlbE1hdHJpeCl9fSxMLnBhY2tDb21iaW5lR2VvbWV0cnlSZXN1bHRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGIoZS5nZW9tZXRyaWVzLHQpLFMoZS52YUF0dHJpYnV0ZXMsdCkse2dlb21ldHJpZXM6ZS5nZW9tZXRyaWVzLGF0dHJpYnV0ZUxvY2F0aW9uczplLmF0dHJpYnV0ZUxvY2F0aW9ucyx2YUF0dHJpYnV0ZXM6ZS52YUF0dHJpYnV0ZXMscGFja2VkVmFBdHRyaWJ1dGVMb2NhdGlvbnM6TyhlLnZhQXR0cmlidXRlTG9jYXRpb25zLHQpLG1vZGVsTWF0cml4OmUubW9kZWxNYXRyaXh9fSxMLnVucGFja0NvbWJpbmVHZW9tZXRyeVJlc3VsdHM9ZnVuY3Rpb24oZSl7cmV0dXJue2dlb21ldHJpZXM6ZS5nZW9tZXRyaWVzLGF0dHJpYnV0ZUxvY2F0aW9uczplLmF0dHJpYnV0ZUxvY2F0aW9ucyx2YUF0dHJpYnV0ZXM6ZS52YUF0dHJpYnV0ZXMscGVySW5zdGFuY2VBdHRyaWJ1dGVMb2NhdGlvbnM6UihlLnBhY2tlZFZhQXR0cmlidXRlTG9jYXRpb25zLGUudmFBdHRyaWJ1dGVzKSxtb2RlbE1hdHJpeDplLm1vZGVsTWF0cml4fX0sTH0pLGRlZmluZSgiU2NlbmUvUHJpbWl0aXZlU3RhdGUiLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e1JFQURZOjAsQ1JFQVRJTkc6MSxDUkVBVEVEOjIsQ09NQklOSU5HOjMsQ09NQklORUQ6NCxDT01QTEVURTo1LEZBSUxFRDo2fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiU2NlbmUvUHJpbWl0aXZlIixbIi4uL0NvcmUvQm91bmRpbmdTcGhlcmUiLCIuLi9Db3JlL2Nsb25lIiwiLi4vQ29yZS9Db21wb25lbnREYXRhdHlwZSIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRmVhdHVyZURldGVjdGlvbiIsIi4uL0NvcmUvR2VvbWV0cnkiLCIuLi9Db3JlL0dlb21ldHJ5QXR0cmlidXRlIiwiLi4vQ29yZS9HZW9tZXRyeUF0dHJpYnV0ZXMiLCIuLi9Db3JlL0dlb21ldHJ5SW5zdGFuY2UiLCIuLi9Db3JlL0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9Db3JlL2lzQXJyYXkiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL3N1YmRpdmlkZUFycmF5IiwiLi4vQ29yZS9UYXNrUHJvY2Vzc29yIiwiLi4vUmVuZGVyZXIvQnVmZmVyVXNhZ2UiLCIuLi9SZW5kZXJlci9jcmVhdGVTaGFkZXJTb3VyY2UiLCIuLi9SZW5kZXJlci9EcmF3Q29tbWFuZCIsIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vQ3VsbEZhY2UiLCIuL1Bhc3MiLCIuL1ByaW1pdGl2ZVBpcGVsaW5lIiwiLi9QcmltaXRpdmVTdGF0ZSIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBBKGUpe3JldHVybiBuZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ZS5jb21wb25lbnREYXRhdHlwZSxjb21wb25lbnRzUGVyQXR0cmlidXRlOmUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSxub3JtYWxpemU6ZS5ub3JtYWxpemUsdmFsdWVzOm5ldyBlLnZhbHVlcy5jb25zdHJ1Y3RvcihlLnZhbHVlcyl9KX1mdW5jdGlvbiBQKHQpe3ZhciBpPXQuYXR0cmlidXRlcyxuPW5ldyBkO2Zvcih2YXIgbyBpbiBpKWkuaGFzT3duUHJvcGVydHkobykmJnIoaVtvXSkmJihuW29dPUEoaVtvXSkpO3ZhciBhO2lmKHIodC5pbmRpY2VzKSl7dmFyIHM9dC5pbmRpY2VzO2E9bmV3IHMuY29uc3RydWN0b3Iocyl9cmV0dXJuIG5ldyB1KHthdHRyaWJ1dGVzOm4saW5kaWNlczphLHByaW1pdGl2ZVR5cGU6dC5wcmltaXRpdmVUeXBlLGJvdW5kaW5nU3BoZXJlOmUuY2xvbmUodC5ib3VuZGluZ1NwaGVyZSl9KX1mdW5jdGlvbiBNKGUpe3JldHVybiBuZXcgbSh7Y29tcG9uZW50RGF0YXR5cGU6ZS5jb21wb25lbnREYXRhdHlwZSxjb21wb25lbnRzUGVyQXR0cmlidXRlOmUuY29tcG9uZW50c1BlckF0dHJpYnV0ZSxub3JtYWxpemU6ZS5ub3JtYWxpemUsdmFsdWU6bmV3IGUudmFsdWUuY29uc3RydWN0b3IoZS52YWx1ZSl9KX1mdW5jdGlvbiBJKGUsdCl7dmFyIGk9ZS5hdHRyaWJ1dGVzLG49e307Zm9yKHZhciByIGluIGkpaS5oYXNPd25Qcm9wZXJ0eShyKSYmKG5bcl09TShpW3JdKSk7cmV0dXJuIG5ldyBoKHtnZW9tZXRyeTp0LG1vZGVsTWF0cml4OnAuY2xvbmUoZS5tb2RlbE1hdHJpeCksYXR0cmlidXRlczpufSl9ZnVuY3Rpb24gRChlLHQsaSl7Zm9yKHZhciBuLHI9IiIsbz0iIixhPSIiO251bGwhPT0obj1rLmV4ZWModCkpOyl7dmFyIHM9blsxXSxsPSJ2ZWM0IGN6bV9jb21wdXRlIitzWzBdLnRvVXBwZXJDYXNlKCkrcy5zdWJzdHIoMSkrIigpIjsidmVjNCBjem1fY29tcHV0ZVBvc2l0aW9uKCkiIT09bCYmKHIrPWwrIjtcbiIpLGk/YSs9bCsiXG4iKyJ7XG4iKyIgICAgcmV0dXJuIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKCIrcysiM0RIaWdoLCAiK3MrIjNETG93KTtcbiIrIn1cblxuIjoobys9ImF0dHJpYnV0ZSB2ZWMzICIrcysiMkRIaWdoO1xuIisiYXR0cmlidXRlIHZlYzMgIitzKyIyRExvdztcbiIsYSs9bCsiXG4iKyJ7XG4iKyIgICAgdmVjNCBwO1xuIisiICAgIGlmIChjem1fbW9ycGhUaW1lID09IDEuMClcbiIrIiAgICB7XG4iKyIgICAgICAgIHAgPSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZSgiK3MrIjNESGlnaCwgIitzKyIzRExvdyk7XG4iKyIgICAgfVxuIisiICAgIGVsc2UgaWYgKGN6bV9tb3JwaFRpbWUgPT0gMC4wKVxuIisiICAgIHtcbiIrIiAgICAgICAgcCA9IGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKCIrcysiMkRIaWdoLnp4eSwgIitzKyIyRExvdy56eHkpO1xuIisiICAgIH1cbiIrIiAgICBlbHNlXG4iKyIgICAge1xuIisiICAgICAgICBwID0gY3ptX2NvbHVtYnVzVmlld01vcnBoKFxuIisiICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKCIrcysiMkRIaWdoLnp4eSwgIitzKyIyRExvdy56eHkpLFxuIisiICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKCIrcysiM0RIaWdoLCAiK3MrIjNETG93KSxcbiIrIiAgICAgICAgICAgICAgICBjem1fbW9ycGhUaW1lKTtcbiIrIiAgICB9XG4iKyIgICAgcmV0dXJuIHA7XG4iKyJ9XG5cbiIpfXJldHVybiB5KHtzb3VyY2VzOltyLG8sdCxhXX0pfWZ1bmN0aW9uIE8oZSl7dmFyIHQ9ZS5yZXBsYWNlKC92b2lkXHMrbWFpblxzKlwoXHMqKD86dm9pZCk/XHMqXCkvZywidm9pZCBjem1fb2xkX21haW4oKSIpLGk9ImF0dHJpYnV0ZSB2ZWM0IHBpY2tDb2xvcjsgXG52YXJ5aW5nIHZlYzQgY3ptX3BpY2tDb2xvcjsgXG52b2lkIG1haW4oKSBcbnsgXG4gICAgY3ptX29sZF9tYWluKCk7IFxuICAgIGN6bV9waWNrQ29sb3IgPSBwaWNrQ29sb3I7IFxufSI7cmV0dXJuIHQrIlxuIitpfWZ1bmN0aW9uIFIoZSx0KXtpZighcihlLl9hdHRyaWJ1dGVMb2NhdGlvbnMuc2hvdykpcmV0dXJuIHQ7dmFyIGk9dC5yZXBsYWNlKC92b2lkXHMrbWFpblxzKlwoXHMqKD86dm9pZCk/XHMqXCkvZywidm9pZCBjem1fbm9uX3Nob3dfbWFpbigpIiksbj0iYXR0cmlidXRlIGZsb2F0IHNob3c7XG52b2lkIG1haW4oKSBcbnsgXG4gICAgY3ptX25vbl9zaG93X21haW4oKTsgXG4gICAgZ2xfUG9zaXRpb24gKj0gc2hvdzsgXG59IjtyZXR1cm4gaSsiXG4iK259ZnVuY3Rpb24gTChlKXtlLnZlcnRleEF0dHJpYnV0ZXN9ZnVuY3Rpb24gTihlLHQsaSl7Zm9yKHZhciBvPVtdLGE9aS5sZW5ndGgscz0wO2E+czsrK3Mpe3ZhciBsPXtwcmltaXRpdmU6bihpW3NdLnBpY2tQcmltaXRpdmUsdCl9O3IoaVtzXS5pZCkmJihsLmlkPWlbc10uaWQpO3ZhciB1PWUuY3JlYXRlUGlja0lkKGwpO3QuX3BpY2tJZHMucHVzaCh1KSxvLnB1c2godS5jb2xvcil9cmV0dXJuIG99ZnVuY3Rpb24geihlLHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0W2VdLnZhbHVlfX1mdW5jdGlvbiBCKGUsdCxpKXtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHI9dFtlXTtyLnZhbHVlPW4sci5kaXJ0eXx8KGkucHVzaChyKSxyLmRpcnR5PSEwKX19dmFyIEY9ZnVuY3Rpb24oZSl7ZT1uKGUsbi5FTVBUWV9PQkpFQ1QpLHRoaXMuZ2VvbWV0cnlJbnN0YW5jZXM9ZS5nZW9tZXRyeUluc3RhbmNlcyx0aGlzLmFwcGVhcmFuY2U9ZS5hcHBlYXJhbmNlLHRoaXMuX2FwcGVhcmFuY2U9dm9pZCAwLHRoaXMuX21hdGVyaWFsPXZvaWQgMCx0aGlzLm1vZGVsTWF0cml4PXAuY2xvbmUocC5JREVOVElUWSksdGhpcy5fbW9kZWxNYXRyaXg9bmV3IHAsdGhpcy5zaG93PW4oZS5zaG93LCEwKSx0aGlzLl92ZXJ0ZXhDYWNoZU9wdGltaXplPW4oZS52ZXJ0ZXhDYWNoZU9wdGltaXplLCExKSx0aGlzLl9pbnRlcmxlYXZlPW4oZS5pbnRlcmxlYXZlLCExKSx0aGlzLl9yZWxlYXNlR2VvbWV0cnlJbnN0YW5jZXM9bihlLnJlbGVhc2VHZW9tZXRyeUluc3RhbmNlcywhMCksdGhpcy5fYWxsb3dQaWNraW5nPW4oZS5hbGxvd1BpY2tpbmcsITApLHRoaXMuX2FzeW5jaHJvbm91cz1uKGUuYXN5bmNocm9ub3VzLCEwKSx0aGlzLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPW4oZS5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSwhMSksdGhpcy5fdHJhbnNsdWNlbnQ9dm9pZCAwLHRoaXMuX3N0YXRlPVQuUkVBRFksdGhpcy5fZ2VvbWV0cmllcz1bXSx0aGlzLl92YUF0dHJpYnV0ZXM9dm9pZCAwLHRoaXMuX2Vycm9yPXZvaWQgMCx0aGlzLl9udW1iZXJPZkluc3RhbmNlcz0wLHRoaXMuX2JvdW5kaW5nU3BoZXJlPXZvaWQgMCx0aGlzLl9ib3VuZGluZ1NwaGVyZVdDPXZvaWQgMCx0aGlzLl9ib3VuZGluZ1NwaGVyZUNWPXZvaWQgMCx0aGlzLl9ib3VuZGluZ1NwaGVyZTJEPXZvaWQgMCx0aGlzLl9wZXJJbnN0YW5jZUF0dHJpYnV0ZUxvY2F0aW9ucz12b2lkIDAsdGhpcy5faW5zdGFuY2VJZHM9W10sdGhpcy5fbGFzdFBlckluc3RhbmNlQXR0cmlidXRlSW5kZXg9MCx0aGlzLl9kaXJ0eUF0dHJpYnV0ZXM9W10sdGhpcy5fdmE9W10sdGhpcy5fYXR0cmlidXRlTG9jYXRpb25zPXZvaWQgMCx0aGlzLl9wcmltaXRpdmVUeXBlPXZvaWQgMCx0aGlzLl9mcm9udEZhY2VSUz12b2lkIDAsdGhpcy5fYmFja0ZhY2VSUz12b2lkIDAsdGhpcy5fc3A9dm9pZCAwLHRoaXMuX3BpY2tSUz12b2lkIDAsdGhpcy5fcGlja1NQPXZvaWQgMCx0aGlzLl9waWNrSWRzPVtdLHRoaXMuX2NvbG9yQ29tbWFuZHM9W10sdGhpcy5fcGlja0NvbW1hbmRzPVtdLHRoaXMuX2NyZWF0ZUdlb21ldHJ5UmVzdWx0cz12b2lkIDB9O28oRi5wcm90b3R5cGUse3ZlcnRleENhY2hlT3B0aW1pemU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92ZXJ0ZXhDYWNoZU9wdGltaXplfX0saW50ZXJsZWF2ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludGVybGVhdmV9fSxyZWxlYXNlR2VvbWV0cnlJbnN0YW5jZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWxlYXNlR2VvbWV0cnlJbnN0YW5jZXN9fSxhbGxvd1BpY2tpbmc6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbGxvd1BpY2tpbmd9fSxhc3luY2hyb25vdXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hc3luY2hyb25vdXN9fSxyZWFkeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXRlPT09VC5DT01QTEVURX19fSk7dmFyIFYsaz0vYXR0cmlidXRlXHMrdmVjKD86M3w0KVxzKyguKikzREhpZ2g7L2csVT1NYXRoLm1heChsLmhhcmR3YXJlQ29uY3VycmVuY3ktMSwxKSxXPW5ldyBnKCJjb21iaW5lR2VvbWV0cnkiLE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7cmV0dXJuIEYucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihuLG8sYSl7aWYoISghcih0aGlzLmdlb21ldHJ5SW5zdGFuY2VzKSYmMD09PXRoaXMuX3ZhLmxlbmd0aHx8cih0aGlzLmdlb21ldHJ5SW5zdGFuY2VzKSYmZih0aGlzLmdlb21ldHJ5SW5zdGFuY2VzKSYmMD09PXRoaXMuZ2VvbWV0cnlJbnN0YW5jZXMubGVuZ3RofHwhcih0aGlzLmFwcGVhcmFuY2UpfHxvLm1vZGUhPT14LlNDRU5FM0QmJm8uc2NlbmUzRE9ubHl8fCFvLnBhc3Nlcy5yZW5kZXImJiFvLnBhc3Nlcy5waWNrKSl7dmFyIHMsbCx1LGMsZCxoLG0sQSxNLHosQixGLGssRz1vLm1hcFByb2plY3Rpb24sSD10aGlzLmFsbG93UGlja2luZyxxPXRoaXMuX2luc3RhbmNlSWRzLGo9by5zY2VuZTNET25seSxZPXRoaXM7aWYodGhpcy5fc3RhdGUhPT1ULkNPTVBMRVRFJiZ0aGlzLl9zdGF0ZSE9PVQuQ09NQklORUQpaWYodGhpcy5hc3luY2hyb25vdXMpe2lmKHRoaXMuX3N0YXRlPT09VC5GQUlMRUQpdGhyb3cgdGhpcy5fZXJyb3I7aWYodGhpcy5fc3RhdGU9PT1ULlJFQURZKXtCPWYodGhpcy5nZW9tZXRyeUluc3RhbmNlcyk/dGhpcy5nZW9tZXRyeUluc3RhbmNlczpbdGhpcy5nZW9tZXRyeUluc3RhbmNlc10sdGhpcy5fbnVtYmVyT2ZJbnN0YW5jZXM9aD1CLmxlbmd0aDt2YXIgWD1bXSxaPVtdO2ZvcihtPTA7aD5tOysrbSl1PUJbbV0uZ2VvbWV0cnkscS5wdXNoKEJbbV0uaWQpLFoucHVzaCh7bW9kdWxlTmFtZTp1Ll93b3JrZXJOYW1lLGdlb21ldHJ5OnV9KTtpZighcihWKSlmb3IoVj1uZXcgQXJyYXkoVSksbT0wO1U+bTttKyspVlttXT1uZXcgZygiY3JlYXRlR2VvbWV0cnkiLE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7Zm9yKFo9dihaLFUpLG09MDttPFoubGVuZ3RoO20rKylYLnB1c2goVlttXS5zY2hlZHVsZVRhc2soe3N1YlRhc2tzOlpbbV19KSk7dGhpcy5fc3RhdGU9VC5DUkVBVElORyx3LmFsbChYLGZ1bmN0aW9uKGUpe1kuX2NyZWF0ZUdlb21ldHJ5UmVzdWx0cz1lLFkuX3N0YXRlPVQuQ1JFQVRFRH0sZnVuY3Rpb24oZSl7WS5fZXJyb3I9ZSxZLl9zdGF0ZT1ULkZBSUxFRH0pfWVsc2UgaWYodGhpcy5fc3RhdGU9PT1ULkNSRUFURUQpe3ZhciBKPVtdO0I9Zih0aGlzLmdlb21ldHJ5SW5zdGFuY2VzKT90aGlzLmdlb21ldHJ5SW5zdGFuY2VzOlt0aGlzLmdlb21ldHJ5SW5zdGFuY2VzXSx6PVcuc2NoZWR1bGVUYXNrKFMucGFja0NvbWJpbmVHZW9tZXRyeVBhcmFtZXRlcnMoe2NyZWF0ZUdlb21ldHJ5UmVzdWx0czp0aGlzLl9jcmVhdGVHZW9tZXRyeVJlc3VsdHMsaW5zdGFuY2VzOkIscGlja0lkczpIP04obix0aGlzLEIpOnZvaWQgMCxlbGxpcHNvaWQ6Ry5lbGxpcHNvaWQscHJvamVjdGlvbjpHLGVsZW1lbnRJbmRleFVpbnRTdXBwb3J0ZWQ6bi5lbGVtZW50SW5kZXhVaW50LHNjZW5lM0RPbmx5OmosYWxsb3dQaWNraW5nOkgsdmVydGV4Q2FjaGVPcHRpbWl6ZTp0aGlzLnZlcnRleENhY2hlT3B0aW1pemUsbW9kZWxNYXRyaXg6dGhpcy5tb2RlbE1hdHJpeH0sSiksSiksdGhpcy5fY3JlYXRlR2VvbWV0cnlSZXN1bHRzPXZvaWQgMCx0aGlzLl9zdGF0ZT1ULkNPTUJJTklORyx3KHosZnVuY3Rpb24oZSl7dmFyIHQ9Uy51bnBhY2tDb21iaW5lR2VvbWV0cnlSZXN1bHRzKGUpO1kuX2dlb21ldHJpZXM9dC5nZW9tZXRyaWVzLFkuX2F0dHJpYnV0ZUxvY2F0aW9ucz10LmF0dHJpYnV0ZUxvY2F0aW9ucyxZLl92YUF0dHJpYnV0ZXM9dC52YUF0dHJpYnV0ZXMsWS5fcGVySW5zdGFuY2VBdHRyaWJ1dGVMb2NhdGlvbnM9dC5wZXJJbnN0YW5jZUF0dHJpYnV0ZUxvY2F0aW9ucyxZLl9zdGF0ZT1ULkNPTUJJTkVELFkubW9kZWxNYXRyaXg9cC5jbG9uZSh0Lm1vZGVsTWF0cml4LFkubW9kZWxNYXRyaXgpfSxmdW5jdGlvbihlKXtZLl9lcnJvcj1lLFkuX3N0YXRlPVQuRkFJTEVEfSl9fWVsc2V7Zm9yKEI9Zih0aGlzLmdlb21ldHJ5SW5zdGFuY2VzKT90aGlzLmdlb21ldHJ5SW5zdGFuY2VzOlt0aGlzLmdlb21ldHJ5SW5zdGFuY2VzXSx0aGlzLl9udW1iZXJPZkluc3RhbmNlcz1oPUIubGVuZ3RoLGs9bmV3IEFycmF5KGgpLEY9bmV3IEFycmF5KEIubGVuZ3RoKSxtPTA7aD5tO20rKyl7dmFyIEs9QlttXTt1PUsuZ2VvbWV0cnkscS5wdXNoKEsuaWQpO3ZhciBRO1E9cih1LmF0dHJpYnV0ZXMpJiZyKHUucHJpbWl0aXZlVHlwZSk/UCh1KTp1LmNvbnN0cnVjdG9yLmNyZWF0ZUdlb21ldHJ5KHUpLGtbbV09USxGW21dPUkoSyxRKX12YXIgJD1TLmNvbWJpbmVHZW9tZXRyeSh7aW5zdGFuY2VzOkYscGlja0lkczpIP04obix0aGlzLEIpOnZvaWQgMCxlbGxpcHNvaWQ6Ry5lbGxpcHNvaWQscHJvamVjdGlvbjpHLGVsZW1lbnRJbmRleFVpbnRTdXBwb3J0ZWQ6bi5lbGVtZW50SW5kZXhVaW50LHNjZW5lM0RPbmx5OmosYWxsb3dQaWNraW5nOkgsdmVydGV4Q2FjaGVPcHRpbWl6ZTp0aGlzLnZlcnRleENhY2hlT3B0aW1pemUsbW9kZWxNYXRyaXg6dGhpcy5tb2RlbE1hdHJpeH0pO3RoaXMuX2dlb21ldHJpZXM9JC5nZW9tZXRyaWVzLHRoaXMuX2F0dHJpYnV0ZUxvY2F0aW9ucz0kLmF0dHJpYnV0ZUxvY2F0aW9ucyx0aGlzLl92YUF0dHJpYnV0ZXM9JC52YUF0dHJpYnV0ZXMsdGhpcy5fcGVySW5zdGFuY2VBdHRyaWJ1dGVMb2NhdGlvbnM9JC52YUF0dHJpYnV0ZUxvY2F0aW9ucyx0aGlzLl9zdGF0ZT1ULkNPTUJJTkVEfXZhciBldD10aGlzLl9hdHRyaWJ1dGVMb2NhdGlvbnM7aWYodGhpcy5fc3RhdGU9PT1ULkNPTUJJTkVEKXtrPXRoaXMuX2dlb21ldHJpZXM7dmFyIHR0PXRoaXMuX3ZhQXR0cmlidXRlczt0aGlzLl9ib3VuZGluZ1NwaGVyZT1lLmNsb25lKGtbMF0uYm91bmRpbmdTcGhlcmUpO3ZhciBpdD1bXTtmb3IoaD1rLmxlbmd0aCxtPTA7aD5tOysrbSl7dT1rW21dLGM9dHRbbV07dmFyIG50PWMubGVuZ3RoO2ZvcihBPTA7bnQ+QTsrK0EpZD1jW0FdLGQudmVydGV4QnVmZmVyPW4uY3JlYXRlVmVydGV4QnVmZmVyKGQudmFsdWVzLF8uRFlOQU1JQ19EUkFXKSxkZWxldGUgZC52YWx1ZXM7aXQucHVzaChuLmNyZWF0ZVZlcnRleEFycmF5RnJvbUdlb21ldHJ5KHtnZW9tZXRyeTp1LGF0dHJpYnV0ZUxvY2F0aW9uczpldCxidWZmZXJVc2FnZTpfLlNUQVRJQ19EUkFXLGludGVybGVhdmU6dGhpcy5faW50ZXJsZWF2ZSx2ZXJ0ZXhBcnJheUF0dHJpYnV0ZXM6Y30pKX10aGlzLl92YT1pdCx0aGlzLl9wcmltaXRpdmVUeXBlPWtbMF0ucHJpbWl0aXZlVHlwZSx0aGlzLnJlbGVhc2VHZW9tZXRyeUluc3RhbmNlcyYmKHRoaXMuZ2VvbWV0cnlJbnN0YW5jZXM9dm9pZCAwKSx0aGlzLl9nZW9tZXRyaWVzPXZvaWQgMCx0aGlzLl9zdGF0ZT1ULkNPTVBMRVRFfWlmKHRoaXMuc2hvdyYmdGhpcy5fc3RhdGU9PT1ULkNPTVBMRVRFKXt2YXIgcnQ9dGhpcy5hcHBlYXJhbmNlLG90PXJ0Lm1hdGVyaWFsLGF0PSExLHN0PSExO3RoaXMuX2FwcGVhcmFuY2UhPT1ydD8odGhpcy5fYXBwZWFyYW5jZT1ydCx0aGlzLl9tYXRlcmlhbD1vdCxhdD0hMCxzdD0hMCk6dGhpcy5fbWF0ZXJpYWwhPT1vdCYmKHRoaXMuX21hdGVyaWFsPW90LHN0PSEwKTt2YXIgbHQ9dGhpcy5fYXBwZWFyYW5jZS5pc1RyYW5zbHVjZW50KCk7dGhpcy5fdHJhbnNsdWNlbnQhPT1sdCYmKHRoaXMuX3RyYW5zbHVjZW50PWx0LGF0PSEwKSxyKHRoaXMuX21hdGVyaWFsKSYmdGhpcy5fbWF0ZXJpYWwudXBkYXRlKG4pO3ZhciB1dD1ydC5jbG9zZWQmJmx0O2lmKGF0KXt2YXIgY3QsZHQ9cnQuZ2V0UmVuZGVyU3RhdGUoKTt1dD8oY3Q9dChkdCwhMSksY3QuY3VsbD17ZW5hYmxlZDohMCxmYWNlOkUuQkFDS30sdGhpcy5fZnJvbnRGYWNlUlM9bi5jcmVhdGVSZW5kZXJTdGF0ZShjdCksY3QuY3VsbC5mYWNlPUUuRlJPTlQsdGhpcy5fYmFja0ZhY2VSUz1uLmNyZWF0ZVJlbmRlclN0YXRlKGN0KSk6KHRoaXMuX2Zyb250RmFjZVJTPW4uY3JlYXRlUmVuZGVyU3RhdGUoZHQpLHRoaXMuX2JhY2tGYWNlUlM9dGhpcy5fZnJvbnRGYWNlUlMpLEg/dXQ/KGN0PXQoZHQsITEpLGN0LmN1bGw9e2VuYWJsZWQ6ITF9LHRoaXMuX3BpY2tSUz1uLmNyZWF0ZVJlbmRlclN0YXRlKGN0KSk6dGhpcy5fcGlja1JTPXRoaXMuX2Zyb250RmFjZVJTOihjdD10KGR0LCExKSxjdC5jb2xvck1hc2s9e3JlZDohMSxncmVlbjohMSxibHVlOiExLGFscGhhOiExfSx1dD8oY3QuY3VsbD17ZW5hYmxlZDohMX0sdGhpcy5fcGlja1JTPW4uY3JlYXRlUmVuZGVyU3RhdGUoY3QpKTp0aGlzLl9waWNrUlM9bi5jcmVhdGVSZW5kZXJTdGF0ZShjdCkpfWlmKHN0KXt2YXIgaHQ9RCh0aGlzLHJ0LnZlcnRleFNoYWRlclNvdXJjZSxqKTtodD1SKHRoaXMsaHQpO3ZhciBtdD1ydC5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSgpO2lmKHRoaXMuX3NwPW4ucmVwbGFjZVNoYWRlclByb2dyYW0odGhpcy5fc3AsaHQsbXQsZXQpLEwodGhpcy5fc3AsZXQpLEgpe3ZhciBmdD15KHtzb3VyY2VzOlttdF0scGlja0NvbG9yUXVhbGlmaWVyOiJ2YXJ5aW5nIn0pO3RoaXMuX3BpY2tTUD1uLnJlcGxhY2VTaGFkZXJQcm9ncmFtKHRoaXMuX3BpY2tTUCxPKGh0KSxmdCxldCl9ZWxzZSB0aGlzLl9waWNrU1A9bi5jcmVhdGVTaGFkZXJQcm9ncmFtKGh0LG10LGV0KTtMKHRoaXMuX3BpY2tTUCxldCl9dmFyIHB0PXRoaXMuX2NvbG9yQ29tbWFuZHMsdnQ9dGhpcy5fcGlja0NvbW1hbmRzO2lmKGF0fHxzdCl7dmFyIGd0PXIob3QpP290Ll91bmlmb3Jtczp2b2lkIDAsX3Q9bHQ/Yi5UUkFOU0xVQ0VOVDpiLk9QQVFVRTtwdC5sZW5ndGg9dGhpcy5fdmEubGVuZ3RoKih1dD8yOjEpLHZ0Lmxlbmd0aD10aGlzLl92YS5sZW5ndGgsaD1wdC5sZW5ndGg7dmFyIHl0PTAsQ3Q9MDtmb3IobT0wO2g+bTsrK20pdXQmJihzPXB0W21dLHIocyl8fChzPXB0W21dPW5ldyBDKHtvd25lcjp0aGlzLHByaW1pdGl2ZVR5cGU6dGhpcy5fcHJpbWl0aXZlVHlwZX0pKSxzLnZlcnRleEFycmF5PXRoaXMuX3ZhW0N0XSxzLnJlbmRlclN0YXRlPXRoaXMuX2JhY2tGYWNlUlMscy5zaGFkZXJQcm9ncmFtPXRoaXMuX3NwLHMudW5pZm9ybU1hcD1ndCxzLnBhc3M9X3QsKyttKSxzPXB0W21dLHIocyl8fChzPXB0W21dPW5ldyBDKHtvd25lcjp0aGlzLHByaW1pdGl2ZVR5cGU6dGhpcy5fcHJpbWl0aXZlVHlwZX0pKSxzLnZlcnRleEFycmF5PXRoaXMuX3ZhW0N0XSxzLnJlbmRlclN0YXRlPXRoaXMuX2Zyb250RmFjZVJTLHMuc2hhZGVyUHJvZ3JhbT10aGlzLl9zcCxzLnVuaWZvcm1NYXA9Z3Qscy5wYXNzPV90LGw9dnRbeXRdLHIobCl8fChsPXZ0W3l0XT1uZXcgQyh7b3duZXI6dGhpcyxwcmltaXRpdmVUeXBlOnRoaXMuX3ByaW1pdGl2ZVR5cGV9KSksbC52ZXJ0ZXhBcnJheT10aGlzLl92YVtDdF0sbC5yZW5kZXJTdGF0ZT10aGlzLl9waWNrUlMsbC5zaGFkZXJQcm9ncmFtPXRoaXMuX3BpY2tTUCxsLnVuaWZvcm1NYXA9Z3QsbC5wYXNzPV90LCsreXQsKytDdH1pZih0aGlzLl9kaXJ0eUF0dHJpYnV0ZXMubGVuZ3RoPjApe2ZvcihjPXRoaXMuX2RpcnR5QXR0cmlidXRlcyxoPWMubGVuZ3RoLG09MDtoPm07KyttKXtkPWNbbV07dmFyIHd0PWQudmFsdWUsRXQ9ZC5pbmRpY2VzLGJ0PUV0Lmxlbmd0aDtmb3IoQT0wO2J0PkE7KytBKXtNPUV0W0FdO2Zvcih2YXIgU3Q9TS5vZmZzZXQsVHQ9TS5jb3VudCx4dD1NLmF0dHJpYnV0ZSxBdD14dC5jb21wb25lbnREYXRhdHlwZSxQdD14dC5jb21wb25lbnRzUGVyQXR0cmlidXRlLE10PWkuY3JlYXRlVHlwZWRBcnJheShBdCxUdCpQdCksSXQ9MDtUdD5JdDsrK0l0KU10LnNldCh3dCxJdCpQdCk7dmFyIER0PVN0KlB0KmkuZ2V0U2l6ZUluQnl0ZXMoQXQpO3h0LnZlcnRleEJ1ZmZlci5jb3B5RnJvbUFycmF5VmlldyhNdCxEdCl9ZC5kaXJ0eT0hMX1jLmxlbmd0aD0wfXZhciBPdDtPdD10aGlzLl9udW1iZXJPZkluc3RhbmNlcz4xfHxvLm1vZGUhPT14LlNDRU5FM0Q/cC5JREVOVElUWTp0aGlzLm1vZGVsTWF0cml4LHAuZXF1YWxzKE90LHRoaXMuX21vZGVsTWF0cml4KXx8KHAuY2xvbmUoT3QsdGhpcy5fbW9kZWxNYXRyaXgpLHRoaXMuX2JvdW5kaW5nU3BoZXJlV0M9ZS50cmFuc2Zvcm0odGhpcy5fYm91bmRpbmdTcGhlcmUsT3QsdGhpcy5fYm91bmRpbmdTcGhlcmVXQyksIWomJnIodGhpcy5fYm91bmRpbmdTcGhlcmUpJiYodGhpcy5fYm91bmRpbmdTcGhlcmVDVj1lLnByb2plY3RUbzJEKHRoaXMuX2JvdW5kaW5nU3BoZXJlV0MsRyx0aGlzLl9ib3VuZGluZ1NwaGVyZUNWKSx0aGlzLl9ib3VuZGluZ1NwaGVyZTJEPWUuY2xvbmUodGhpcy5fYm91bmRpbmdTcGhlcmVDVix0aGlzLl9ib3VuZGluZ1NwaGVyZTJEKSx0aGlzLl9ib3VuZGluZ1NwaGVyZTJELmNlbnRlci54PTApKTt2YXIgUnQ7by5tb2RlPT09eC5TQ0VORTNEP1J0PXRoaXMuX2JvdW5kaW5nU3BoZXJlV0M6by5tb2RlPT09eC5DT0xVTUJVU19WSUVXP1J0PXRoaXMuX2JvdW5kaW5nU3BoZXJlQ1Y6by5tb2RlPT09eC5TQ0VORTJEJiZyKHRoaXMuX2JvdW5kaW5nU3BoZXJlMkQpP1J0PXRoaXMuX2JvdW5kaW5nU3BoZXJlMkQ6cih0aGlzLl9ib3VuZGluZ1NwaGVyZVdDKSYmcih0aGlzLl9ib3VuZGluZ1NwaGVyZUNWKSYmKFJ0PWUudW5pb24odGhpcy5fYm91bmRpbmdTcGhlcmVXQyx0aGlzLl9ib3VuZGluZ1NwaGVyZUNWKSk7CnZhciBMdD1vLnBhc3NlcztpZihMdC5yZW5kZXIpZm9yKGg9cHQubGVuZ3RoLG09MDtoPm07KyttKXB0W21dLm1vZGVsTWF0cml4PU90LHB0W21dLmJvdW5kaW5nVm9sdW1lPVJ0LHB0W21dLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPXRoaXMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWUsYS5wdXNoKHB0W21dKTtpZihMdC5waWNrKWZvcihoPXZ0Lmxlbmd0aCxtPTA7aD5tOysrbSl2dFttXS5tb2RlbE1hdHJpeD1PdCx2dFttXS5ib3VuZGluZ1ZvbHVtZT1SdCxhLnB1c2godnRbbV0pfX19LEYucHJvdG90eXBlLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0tMSxpPXRoaXMuX2xhc3RQZXJJbnN0YW5jZUF0dHJpYnV0ZUluZGV4LG49dGhpcy5faW5zdGFuY2VJZHMscj1uLmxlbmd0aCxhPTA7cj5hOysrYSl7dmFyIHM9KGkrYSklcjtpZihlPT09bltzXSl7dD1zO2JyZWFrfX1pZigtMT09PXQpcmV0dXJuIHZvaWQgMDt2YXIgbD10aGlzLl9wZXJJbnN0YW5jZUF0dHJpYnV0ZUxvY2F0aW9uc1t0XSx1PXt9LGM9e30sZD0hMTtmb3IodmFyIGggaW4gbClsLmhhc093blByb3BlcnR5KGgpJiYoZD0hMCxjW2hdPXtnZXQ6eihoLGwpLHNldDpCKGgsbCx0aGlzLl9kaXJ0eUF0dHJpYnV0ZXMpfSk7cmV0dXJuIGQmJm8odSxjKSx0aGlzLl9sYXN0UGVySW5zdGFuY2VBdHRyaWJ1dGVJbmRleD10LHV9LEYucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LEYucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZSx0O3RoaXMuX3NwPXRoaXMuX3NwJiZ0aGlzLl9zcC5kZXN0cm95KCksdGhpcy5fcGlja1NQPXRoaXMuX3BpY2tTUCYmdGhpcy5fcGlja1NQLmRlc3Ryb3koKTt2YXIgaT10aGlzLl92YTtmb3IoZT1pLmxlbmd0aCx0PTA7ZT50OysrdClpW3RdLmRlc3Ryb3koKTt0aGlzLl92YT12b2lkIDA7dmFyIG49dGhpcy5fcGlja0lkcztmb3IoZT1uLmxlbmd0aCx0PTA7ZT50OysrdCluW3RdLmRlc3Ryb3koKTtyZXR1cm4gdGhpcy5fcGlja0lkcz12b2lkIDAsYSh0aGlzKX0sRn0pLGRlZmluZSgiRGF0YVNvdXJjZXMvTWF0ZXJpYWxQcm9wZXJ0eSIsWyIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL1NjZW5lL01hdGVyaWFsIl0sZnVuY3Rpb24oZSx0LGksbixyKXsidXNlIHN0cmljdCI7dmFyIG89ZnVuY3Rpb24oKXtuLnRocm93SW5zdGFudGlhdGlvbkVycm9yKCl9O3JldHVybiBpKG8ucHJvdG90eXBlLHtpc0NvbnN0YW50OntnZXQ6bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sZGVmaW5pdGlvbkNoYW5nZWQ6e2dldDpuLnRocm93SW5zdGFudGlhdGlvbkVycm9yfX0pLG8ucHJvdG90eXBlLmdldFR5cGU9bi50aHJvd0luc3RhbnRpYXRpb25FcnJvcixvLnByb3RvdHlwZS5nZXRWYWx1ZT1uLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG8ucHJvdG90eXBlLmVxdWFscz1uLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG8uZ2V0VmFsdWU9ZnVuY3Rpb24oaSxuLG8pe3ZhciBhO3JldHVybiB0KG4pJiYoYT1uLmdldFR5cGUoaSksdChhKSk/KHQobykmJm8udHlwZT09PWF8fChvPXIuZnJvbVR5cGUoYSkpLG4uZ2V0VmFsdWUoaSxvLnVuaWZvcm1zKSxvKToodChvKSYmby50eXBlPT09ci5Db2xvclR5cGV8fChvPXIuZnJvbVR5cGUoci5Db2xvclR5cGUpKSxlLmNsb25lKGUuV0hJVEUsby51bmlmb3Jtcy5jb2xvciksbyl9LG99KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0VsbGlwc2VHZW9tZXRyeVVwZGF0ZXIiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FbGxpcHNlR2VvbWV0cnkiLCIuLi9Db3JlL0VsbGlwc2VPdXRsaW5lR2VvbWV0cnkiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9tZXRyeUluc3RhbmNlIiwiLi4vQ29yZS9Jc284NjAxIiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL1NjZW5lL01hdGVyaWFsQXBwZWFyYW5jZSIsIi4uL1NjZW5lL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUHJpbWl0aXZlIiwiLi9Db2xvck1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL01hdGVyaWFsUHJvcGVydHkiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5KXsidXNlIHN0cmljdCI7dmFyIEM9di5mcm9tQ29sb3IoZS5XSElURSksdz1uZXcgZyghMCksRT1uZXcgZyghMCksYj1uZXcgZyghMSksUz1uZXcgZyhlLkJMQUNLKSxUPWZ1bmN0aW9uKGUpe3RoaXMuaWQ9ZSx0aGlzLnZlcnRleEZvcm1hdD12b2lkIDAsdGhpcy5jZW50ZXI9dm9pZCAwLHRoaXMuc2VtaU1ham9yQXhpcz12b2lkIDAsdGhpcy5zZW1pTWlub3JBeGlzPXZvaWQgMCx0aGlzLnJvdGF0aW9uPXZvaWQgMCx0aGlzLmhlaWdodD12b2lkIDAsdGhpcy5leHRydWRlZEhlaWdodD12b2lkIDAsdGhpcy5ncmFudWxhcml0eT12b2lkIDAsdGhpcy5zdFJvdGF0aW9uPXZvaWQgMCx0aGlzLm51bWJlck9mVmVydGljYWxMaW5lcz12b2lkIDB9LHg9ZnVuY3Rpb24oZSl7dGhpcy5fZW50aXR5PWUsdGhpcy5fZW50aXR5U3Vic2NyaXB0aW9uPWUuZGVmaW5pdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcih4LnByb3RvdHlwZS5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQsdGhpcyksdGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5faXNDbG9zZWQ9ITEsdGhpcy5fZHluYW1pYz0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQ9bmV3IHUsdGhpcy5fc2hvd1Byb3BlcnR5PXZvaWQgMCx0aGlzLl9tYXRlcmlhbFByb3BlcnR5PXZvaWQgMCx0aGlzLl9oYXNDb25zdGFudE91dGxpbmU9ITAsdGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eT12b2lkIDAsdGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHk9dm9pZCAwLHRoaXMuX29wdGlvbnM9bmV3IFQoZSksdGhpcy5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQoZSwiZWxsaXBzZSIsZS5lbGxpcHNlLHZvaWQgMCl9O3IoeCx7cGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2VUeXBlOnt2YWx1ZTpmfSxtYXRlcmlhbEFwcGVhcmFuY2VUeXBlOnt2YWx1ZTptfX0pLHIoeC5wcm90b3R5cGUse2VudGl0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VudGl0eX19LGZpbGxFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsbEVuYWJsZWR9fSxoYXNDb25zdGFudEZpbGw6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9maWxsRW5hYmxlZHx8IW4odGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZ5LmlzQ29uc3RhbnQodGhpcy5fZmlsbFByb3BlcnR5KX19LGZpbGxNYXRlcmlhbFByb3BlcnR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eX19LG91dGxpbmVFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0bGluZUVuYWJsZWR9fSxoYXNDb25zdGFudE91dGxpbmU6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9vdXRsaW5lRW5hYmxlZHx8IW4odGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZ5LmlzQ29uc3RhbnQodGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eSl9fSxvdXRsaW5lQ29sb3JQcm9wZXJ0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5fX0saXNEeW5hbWljOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZHluYW1pY319LGlzQ2xvc2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNDbG9zZWR9fSxnZW9tZXRyeUNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9nZW9tZXRyeUNoYW5nZWR9fX0pLHgucHJvdG90eXBlLmlzT3V0bGluZVZpc2libGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZW50aXR5O3JldHVybiB0aGlzLl9vdXRsaW5lRW5hYmxlZCYmdC5pc0F2YWlsYWJsZShlKSYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGUpJiZ0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5LmdldFZhbHVlKGUpfSx4LnByb3RvdHlwZS5pc0ZpbGxlZD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9lbnRpdHk7cmV0dXJuIHRoaXMuX2ZpbGxFbmFibGVkJiZ0LmlzQXZhaWxhYmxlKGUpJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSkmJnRoaXMuX2ZpbGxQcm9wZXJ0eS5nZXRWYWx1ZShlKX0seC5wcm90b3R5cGUuY3JlYXRlRmlsbEdlb21ldHJ5SW5zdGFuY2U9ZnVuY3Rpb24oaSl7dmFyIHIsbyxhPXRoaXMuX2VudGl0eSxsPWEuaXNBdmFpbGFibGUoaSksdT1uZXcgaChsJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoaSkmJnRoaXMuX2ZpbGxQcm9wZXJ0eS5nZXRWYWx1ZShpKSk7aWYodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eSBpbnN0YW5jZW9mIHYpe3ZhciBkPWUuV0hJVEU7bih0aGlzLl9tYXRlcmlhbFByb3BlcnR5LmNvbG9yKSYmKHRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IuaXNDb25zdGFudHx8bCkmJihkPXRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IuZ2V0VmFsdWUoaSkpLG89dC5mcm9tQ29sb3IoZCkscj17c2hvdzp1LGNvbG9yOm99fWVsc2Ugcj17c2hvdzp1fTtyZXR1cm4gbmV3IGMoe2lkOmEsZ2VvbWV0cnk6bmV3IHModGhpcy5fb3B0aW9ucyksYXR0cmlidXRlczpyfSl9LHgucHJvdG90eXBlLmNyZWF0ZU91dGxpbmVHZW9tZXRyeUluc3RhbmNlPWZ1bmN0aW9uKGkpe3ZhciBuPXRoaXMuX2VudGl0eSxyPW4uaXNBdmFpbGFibGUoaSk7cmV0dXJuIG5ldyBjKHtpZDpuLGdlb21ldHJ5Om5ldyBsKHRoaXMuX29wdGlvbnMpLGF0dHJpYnV0ZXM6e3Nob3c6bmV3IGgociYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGkpJiZ0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5LmdldFZhbHVlKGkpKSxjb2xvcjp0LmZyb21Db2xvcihyP3RoaXMuX291dGxpbmVDb2xvclByb3BlcnR5LmdldFZhbHVlKGkpOmUuQkxBQ0spfX0pfSx4LnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSx4LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZW50aXR5U3Vic2NyaXB0aW9uKCksbyh0aGlzKX0seC5wcm90b3R5cGUuX29uRW50aXR5UHJvcGVydHlDaGFuZ2VkPWZ1bmN0aW9uKGUsdCl7aWYoImF2YWlsYWJpbGl0eSI9PT10fHwicG9zaXRpb24iPT09dHx8ImVsbGlwc2UiPT09dCl7dmFyIHI9dGhpcy5fZW50aXR5LmVsbGlwc2U7aWYoIW4ocikpcmV0dXJuKHRoaXMuX2ZpbGxFbmFibGVkfHx0aGlzLl9vdXRsaW5lRW5hYmxlZCkmJih0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSksdm9pZCAwO3ZhciBvPXIuZmlsbCxhPW4obykmJm8uaXNDb25zdGFudD9vLmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSk6ITAscz1yLm91dGxpbmUsbD1uKHMpO2lmKGwmJnMuaXNDb25zdGFudCYmKGw9cy5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUpKSwhYSYmIWwpcmV0dXJuKHRoaXMuX2ZpbGxFbmFibGVkfHx0aGlzLl9vdXRsaW5lRW5hYmxlZCkmJih0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSksdm9pZCAwO3ZhciB1PXRoaXMuX2VudGl0eS5wb3NpdGlvbixjPXIuc2VtaU1ham9yQXhpcyxoPXIuc2VtaU1pbm9yQXhpcyxwPXIuc2hvdztpZihuKHApJiZwLmlzQ29uc3RhbnQmJiFwLmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSl8fCFuKHUpfHwhbihjKXx8IW4oaCkpcmV0dXJuKHRoaXMuX2ZpbGxFbmFibGVkfHx0aGlzLl9vdXRsaW5lRW5hYmxlZCkmJih0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSksdm9pZCAwO3ZhciBnPWkoci5tYXRlcmlhbCxDKSxfPWcgaW5zdGFuY2VvZiB2O3RoaXMuX21hdGVyaWFsUHJvcGVydHk9Zyx0aGlzLl9maWxsUHJvcGVydHk9aShvLEUpLHRoaXMuX3Nob3dQcm9wZXJ0eT1pKHAsdyksdGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eT1pKHIub3V0bGluZSxiKSx0aGlzLl9vdXRsaW5lQ29sb3JQcm9wZXJ0eT1sP2koci5vdXRsaW5lQ29sb3IsUyk6dm9pZCAwO3ZhciBUPXIucm90YXRpb24seD1yLmhlaWdodCxBPXIuZXh0cnVkZWRIZWlnaHQsUD1yLmdyYW51bGFyaXR5LE09ci5zdFJvdGF0aW9uLEk9ci5udW1iZXJPZlZlcnRpY2FsTGluZXM7aWYodGhpcy5faXNDbG9zZWQ9bihBKSx0aGlzLl9maWxsRW5hYmxlZD1hLHRoaXMuX291dGxpbmVFbmFibGVkPWwsdS5pc0NvbnN0YW50JiZjLmlzQ29uc3RhbnQmJmguaXNDb25zdGFudCYmeS5pc0NvbnN0YW50KFQpJiZ5LmlzQ29uc3RhbnQoeCkmJnkuaXNDb25zdGFudChBKSYmeS5pc0NvbnN0YW50KFApJiZ5LmlzQ29uc3RhbnQoTSkmJnkuaXNDb25zdGFudChJKSl7dmFyIEQ9dGhpcy5fb3B0aW9ucztELnZlcnRleEZvcm1hdD1fP2YuVkVSVEVYX0ZPUk1BVDptLlZFUlRFWF9GT1JNQVQsRC5jZW50ZXI9dS5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUsRC5jZW50ZXIpLEQuc2VtaU1ham9yQXhpcz1jLmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSxELnNlbWlNYWpvckF4aXMpLEQuc2VtaU1pbm9yQXhpcz1oLmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSxELnNlbWlNaW5vckF4aXMpLEQucm90YXRpb249bihUKT9ULmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSk6dm9pZCAwLEQuaGVpZ2h0PW4oeCk/eC5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUpOnZvaWQgMCxELmV4dHJ1ZGVkSGVpZ2h0PW4oQSk/QS5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUpOnZvaWQgMCxELmdyYW51bGFyaXR5PW4oUCk/UC5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUpOnZvaWQgMCxELnN0Um90YXRpb249bihNKT9NLmdldFZhbHVlKGQuTUlOSU1VTV9WQUxVRSk6dm9pZCAwLEQubnVtYmVyT2ZWZXJ0aWNhbExpbmVzPW4oSSk/SS5nZXRWYWx1ZShkLk1JTklNVU1fVkFMVUUpOnZvaWQgMCx0aGlzLl9keW5hbWljPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfWVsc2UgdGhpcy5fZHluYW1pY3x8KHRoaXMuX2R5bmFtaWM9ITAsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX0seC5wcm90b3R5cGUuY3JlYXRlRHluYW1pY1VwZGF0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBBKGUsdGhpcyl9O3ZhciBBPWZ1bmN0aW9uKGUsdCl7dGhpcy5fcHJpbWl0aXZlcz1lLHRoaXMuX3ByaW1pdGl2ZT12b2lkIDAsdGhpcy5fb3V0bGluZVByaW1pdGl2ZT12b2lkIDAsdGhpcy5fZ2VvbWV0cnlVcGRhdGVyPXQsdGhpcy5fb3B0aW9ucz1uZXcgVCh0Ll9lbnRpdHkpfTtyZXR1cm4gQS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGkpe3ZhciByPXRoaXMuX2dlb21ldHJ5VXBkYXRlcjtuKHRoaXMuX3ByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX3ByaW1pdGl2ZSksbih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fb3V0bGluZVByaW1pdGl2ZSk7dmFyIG89ci5fZW50aXR5LGE9by5lbGxpcHNlLHU9YS5zaG93O2lmKG8uaXNBdmFpbGFibGUoaSkmJighbih1KXx8dS5nZXRWYWx1ZShpKSkpe3ZhciBkPXRoaXMuX29wdGlvbnMsaD1vLnBvc2l0aW9uLHY9YS5zZW1pTWFqb3JBeGlzLGc9YS5zZW1pTWlub3JBeGlzLHk9YS5yb3RhdGlvbixDPWEuaGVpZ2h0LHc9YS5leHRydWRlZEhlaWdodCxFPWEuZ3JhbnVsYXJpdHksYj1hLnN0Um90YXRpb24sUz1hLm51bWJlck9mVmVydGljYWxMaW5lcztpZihkLmNlbnRlcj1oLmdldFZhbHVlKGksZC5jZW50ZXIpLGQuc2VtaU1ham9yQXhpcz12LmdldFZhbHVlKGksZC5zZW1pTWFqb3JBeGlzKSxkLnNlbWlNaW5vckF4aXM9Zy5nZXRWYWx1ZShpLGQuc2VtaU1pbm9yQXhpcyksZC5yb3RhdGlvbj1uKHkpP3kuZ2V0VmFsdWUoaSxkKTp2b2lkIDAsZC5oZWlnaHQ9bihDKT9DLmdldFZhbHVlKGksZCk6dm9pZCAwLGQuZXh0cnVkZWRIZWlnaHQ9bih3KT93LmdldFZhbHVlKGksZCk6dm9pZCAwLGQuZ3JhbnVsYXJpdHk9bihFKT9FLmdldFZhbHVlKGkpOnZvaWQgMCxkLnN0Um90YXRpb249bihiKT9iLmdldFZhbHVlKGkpOnZvaWQgMCwhbihhLmZpbGwpfHxhLmZpbGwuZ2V0VmFsdWUoaSkpe3RoaXMuX21hdGVyaWFsPV8uZ2V0VmFsdWUoaSxyLmZpbGxNYXRlcmlhbFByb3BlcnR5LHRoaXMuX21hdGVyaWFsKTt2YXIgVD10aGlzLl9tYXRlcmlhbCx4PW5ldyBtKHttYXRlcmlhbDpULHRyYW5zbHVjZW50OlQuaXNUcmFuc2x1Y2VudCgpLGNsb3NlZDpuKGQuZXh0cnVkZWRIZWlnaHQpfSk7ZC52ZXJ0ZXhGb3JtYXQ9eC52ZXJ0ZXhGb3JtYXQsdGhpcy5fcHJpbWl0aXZlPW5ldyBwKHtnZW9tZXRyeUluc3RhbmNlczpuZXcgYyh7aWQ6byxnZW9tZXRyeTpuZXcgcyhkKX0pLGFwcGVhcmFuY2U6eCxhc3luY2hyb25vdXM6ITF9KSx0aGlzLl9wcmltaXRpdmVzLmFkZCh0aGlzLl9wcmltaXRpdmUpfWlmKG4oYS5vdXRsaW5lKSYmYS5vdXRsaW5lLmdldFZhbHVlKGkpKXtkLnZlcnRleEZvcm1hdD1mLlZFUlRFWF9GT1JNQVQsZC5udW1iZXJPZlZlcnRpY2FsTGluZXM9bihTKT9TLmdldFZhbHVlKGkpOnZvaWQgMDt2YXIgQT1uKGEub3V0bGluZUNvbG9yKT9hLm91dGxpbmVDb2xvci5nZXRWYWx1ZShpKTplLkJMQUNLO3RoaXMuX291dGxpbmVQcmltaXRpdmU9bmV3IHAoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBjKHtpZDpvLGdlb21ldHJ5Om5ldyBsKGQpLGF0dHJpYnV0ZXM6e2NvbG9yOnQuZnJvbUNvbG9yKEEpfX0pLGFwcGVhcmFuY2U6bmV3IGYoe2ZsYXQ6ITAsdHJhbnNsdWNlbnQ6MSE9PUEuYWxwaGF9KSxhc3luY2hyb25vdXM6ITF9KSx0aGlzLl9wcmltaXRpdmVzLmFkZCh0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKX19fSxBLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxBLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7bih0aGlzLl9wcmltaXRpdmUpJiZ0aGlzLl9wcmltaXRpdmVzLnJlbW92ZSh0aGlzLl9wcmltaXRpdmUpLG4odGhpcy5fb3V0bGluZVByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX291dGxpbmVQcmltaXRpdmUpLG8odGhpcyl9LHh9KSxkZWZpbmUoIkNvcmUvRWxsaXBzb2lkR2VvbWV0cnkiLFsiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMiIsIi4vQ2FydGVzaWFuMyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vR2VvbWV0cnkiLCIuL0dlb21ldHJ5QXR0cmlidXRlIiwiLi9HZW9tZXRyeUF0dHJpYnV0ZXMiLCIuL0luZGV4RGF0YXR5cGUiLCIuL01hdGgiLCIuL1ByaW1pdGl2ZVR5cGUiLCIuL1ZlcnRleEZvcm1hdCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSl7InVzZSBzdHJpY3QiO3ZhciBmPW5ldyBpLHA9bmV3IGksdj1uZXcgaSxnPW5ldyBpLF89bmV3IGkseT1uZXcgaSgxLDEsMSksQz1NYXRoLmNvcyx3PU1hdGguc2luLEU9ZnVuY3Rpb24oZSl7ZT1yKGUsci5FTVBUWV9PQkpFQ1QpO3ZhciB0PXIoZS5yYWRpaSx5KSxuPXIoZS5zdGFja1BhcnRpdGlvbnMsNjQpLG89cihlLnNsaWNlUGFydGl0aW9ucyw2NCksYT1yKGUudmVydGV4Rm9ybWF0LG0uREVGQVVMVCk7dGhpcy5fcmFkaWk9aS5jbG9uZSh0KSx0aGlzLl9zdGFja1BhcnRpdGlvbnM9bix0aGlzLl9zbGljZVBhcnRpdGlvbnM9byx0aGlzLl92ZXJ0ZXhGb3JtYXQ9YSx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVFbGxpcHNvaWRHZW9tZXRyeSJ9O3JldHVybiBFLmNyZWF0ZUdlb21ldHJ5PWZ1bmN0aW9uKHIpe3ZhciBvLG0seT1yLl9yYWRpaSxFPWEuZnJvbUNhcnRlc2lhbjMoeSksYj1yLl92ZXJ0ZXhGb3JtYXQsUz1yLl9zbGljZVBhcnRpdGlvbnMrMSxUPXIuX3N0YWNrUGFydGl0aW9ucysxLHg9VCpTLEE9bmV3IEZsb2F0NjRBcnJheSgzKngpLFA9NiooUy0xKSooVC0xKSxNPWMuY3JlYXRlVHlwZWRBcnJheSh4LFApLEk9Yi5ub3JtYWw/bmV3IEZsb2F0MzJBcnJheSgzKngpOnZvaWQgMCxEPWIudGFuZ2VudD9uZXcgRmxvYXQzMkFycmF5KDMqeCk6dm9pZCAwLE89Yi5iaW5vcm1hbD9uZXcgRmxvYXQzMkFycmF5KDMqeCk6dm9pZCAwLFI9Yi5zdD9uZXcgRmxvYXQzMkFycmF5KDIqeCk6dm9pZCAwLEw9bmV3IEFycmF5KFMpLE49bmV3IEFycmF5KFMpLHo9MDtmb3Iobz0wO1M+bztvKyspe3ZhciBCPWQuVFdPX1BJKm8vKFMtMSk7TFtvXT1DKEIpLE5bb109dyhCKSxBW3orK109MCxBW3orK109MCxBW3orK109eS56fWZvcihvPTE7VC0xPm87bysrKXt2YXIgRj1NYXRoLlBJKm8vKFQtMSksVj13KEYpLGs9eS54KlYsVT15LnkqVixXPXkueipDKEYpO2ZvcihtPTA7Uz5tO20rKylBW3orK109TFttXSprLEFbeisrXT1OW21dKlUsQVt6KytdPVd9Zm9yKG89MDtTPm87bysrKUFbeisrXT0wLEFbeisrXT0wLEFbeisrXT0teS56O3ZhciBHPW5ldyB1O2IucG9zaXRpb24mJihHLnBvc2l0aW9uPW5ldyBsKHtjb21wb25lbnREYXRhdHlwZTpuLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOkF9KSk7dmFyIEg9MCxxPTAsaj0wLFk9MDtpZihiLnN0fHxiLm5vcm1hbHx8Yi50YW5nZW50fHxiLmJpbm9ybWFsKXtmb3Iobz0wO3g+bztvKyspe3ZhciBYPWkuZnJvbUFycmF5KEEsMypvLGYpLFo9RS5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoWCxwKTtpZihiLnN0KXt2YXIgSj10Lm5lZ2F0ZShaLF8pO3QubWFnbml0dWRlKEopPGQuRVBTSUxPTjYmJih6PTMqKG8rUypNYXRoLmZsb29yKC41KlQpKSx6PkEubGVuZ3RoJiYoej0zKihvLVMqTWF0aC5mbG9vciguNSpUKSkpLGkuZnJvbUFycmF5KEEseixKKSxFLmdlb2RldGljU3VyZmFjZU5vcm1hbChKLEopLHQubmVnYXRlKEosSikpLFJbSCsrXT1NYXRoLmF0YW4yKEoueSxKLngpL2QuVFdPX1BJKy41LFJbSCsrXT1NYXRoLmFzaW4oWi56KS9NYXRoLlBJKy41fWlmKGIubm9ybWFsJiYoSVtxKytdPVoueCxJW3ErK109Wi55LElbcSsrXT1aLnopLGIudGFuZ2VudHx8Yi5iaW5vcm1hbCl7dmFyIEs9djtpZihTPm98fG8+eC1TLTE/KGkuY3Jvc3MoaS5VTklUX1gsWixLKSxpLm5vcm1hbGl6ZShLLEspKTooaS5jcm9zcyhpLlVOSVRfWixaLEspLGkubm9ybWFsaXplKEssSykpLGIudGFuZ2VudCYmKERbaisrXT1LLngsRFtqKytdPUsueSxEW2orK109Sy56KSxiLmJpbm9ybWFsKXt2YXIgUT1pLmNyb3NzKFosSyxnKTtpLm5vcm1hbGl6ZShRLFEpLE9bWSsrXT1RLngsT1tZKytdPVEueSxPW1krK109US56fX19Yi5zdCYmKEcuc3Q9bmV3IGwoe2NvbXBvbmVudERhdGF0eXBlOm4uRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZToyLHZhbHVlczpSfSkpLGIubm9ybWFsJiYoRy5ub3JtYWw9bmV3IGwoe2NvbXBvbmVudERhdGF0eXBlOm4uRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpJfSkpLGIudGFuZ2VudCYmKEcudGFuZ2VudD1uZXcgbCh7Y29tcG9uZW50RGF0YXR5cGU6bi5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOkR9KSksYi5iaW5vcm1hbCYmKEcuYmlub3JtYWw9bmV3IGwoe2NvbXBvbmVudERhdGF0eXBlOm4uRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpPfSkpfWZvcih6PTAsbz0wO1Q+bztvKyspe3ZhciAkPW8qUyxldD0obysxKSpTO2ZvcihtPTA7Uy0xPm07bSsrKU1beisrXT1ldCttLE1beisrXT1ldCttKzEsTVt6KytdPSQrbSsxLE1beisrXT1ldCttLE1beisrXT0kK20rMSxNW3orK109JCttfXJldHVybiBuZXcgcyh7YXR0cmlidXRlczpHLGluZGljZXM6TSxwcmltaXRpdmVUeXBlOmguVFJJQU5HTEVTLGJvdW5kaW5nU3BoZXJlOmUuZnJvbUVsbGlwc29pZChFKX0pfSxFfSksZGVmaW5lKCJDb3JlL0VsbGlwc29pZE91dGxpbmVHZW9tZXRyeSIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4zIiwiLi9Db21wb25lbnREYXRhdHlwZSIsIi4vZGVmYXVsdFZhbHVlIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL0dlb21ldHJ5QXR0cmlidXRlcyIsIi4vSW5kZXhEYXRhdHlwZSIsIi4vTWF0aCIsIi4vUHJpbWl0aXZlVHlwZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkKXsidXNlIHN0cmljdCI7dmFyIGg9bmV3IHQoMSwxLDEpLG09TWF0aC5jb3MsZj1NYXRoLnNpbixwPWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgaT1uKGUucmFkaWksaCkscj1uKGUuc3RhY2tQYXJ0aXRpb25zLDEwKSxvPW4oZS5zbGljZVBhcnRpdGlvbnMsOCksYT1uKGUuc3ViZGl2aXNpb25zLDEyOCk7dGhpcy5fcmFkaWk9dC5jbG9uZShpKSx0aGlzLl9zdGFja1BhcnRpdGlvbnM9cix0aGlzLl9zbGljZVBhcnRpdGlvbnM9byx0aGlzLl9zdWJkaXZpc2lvbnM9YSx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkifTtyZXR1cm4gcC5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbih0KXt2YXIgbixyLGgscCx2LGcsXz10Ll9yYWRpaSx5PW8uZnJvbUNhcnRlc2lhbjMoXyksQz10Ll9zdGFja1BhcnRpdGlvbnMsdz10Ll9zbGljZVBhcnRpdGlvbnMsRT10Ll9zdWJkaXZpc2lvbnMsYj1FKihDK3ctMSksUz1iLXcrMixUPW5ldyBGbG9hdDY0QXJyYXkoMypTKSx4PXUuY3JlYXRlVHlwZWRBcnJheShTLDIqYiksQT0wLFA9bmV3IEFycmF5KEUpLE09bmV3IEFycmF5KEUpO2ZvcihuPTA7RT5uO24rKyloPWMuVFdPX1BJKm4vRSxQW25dPW0oaCksTVtuXT1mKGgpO2ZvcihuPTE7Qz5uO24rKylmb3IocD1NYXRoLlBJKm4vQyx2PW0ocCksZz1mKHApLHI9MDtFPnI7cisrKVRbQSsrXT1fLngqUFtyXSpnLFRbQSsrXT1fLnkqTVtyXSpnLFRbQSsrXT1fLnoqdjtmb3IoUC5sZW5ndGg9dyxNLmxlbmd0aD13LG49MDt3Pm47bisrKWg9Yy5UV09fUEkqbi93LFBbbl09bShoKSxNW25dPWYoaCk7Zm9yKFRbQSsrXT0wLFRbQSsrXT0wLFRbQSsrXT1fLnosbj0xO0U+bjtuKyspZm9yKHA9TWF0aC5QSSpuL0Usdj1tKHApLGc9ZihwKSxyPTA7dz5yO3IrKylUW0ErK109Xy54KlBbcl0qZyxUW0ErK109Xy55Kk1bcl0qZyxUW0ErK109Xy56KnY7Zm9yKFRbQSsrXT0wLFRbQSsrXT0wLFRbQSsrXT0tXy56LEE9MCxuPTA7Qy0xPm47KytuKXt2YXIgST1uKkU7Zm9yKHI9MDtFLTE+cjsrK3IpeFtBKytdPUkrcix4W0ErK109SStyKzE7eFtBKytdPUkrRS0xLHhbQSsrXT1JfXZhciBEPUUqKEMtMSk7Zm9yKHI9MTt3KzE+cjsrK3IpeFtBKytdPUQseFtBKytdPUQrcjtmb3Iobj0wO0UtMj5uOysrbil7dmFyIE89bip3KzErRCxSPShuKzEpKncrMStEO2ZvcihyPTA7dy0xPnI7KytyKXhbQSsrXT1SK3IseFtBKytdPU8rcjt4W0ErK109Uit3LTEseFtBKytdPU8rdy0xfXZhciBMPVQubGVuZ3RoLzMtMTtmb3Iocj1MLTE7cj5MLXctMTstLXIpeFtBKytdPUwseFtBKytdPXI7dmFyIE49bmV3IGwoe3Bvc2l0aW9uOm5ldyBzKHtjb21wb25lbnREYXRhdHlwZTppLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOlR9KX0pO3JldHVybiBuZXcgYSh7YXR0cmlidXRlczpOLGluZGljZXM6eCxwcmltaXRpdmVUeXBlOmQuTElORVMsYm91bmRpbmdTcGhlcmU6ZS5mcm9tRWxsaXBzb2lkKHkpfSl9LHB9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL0VsbGlwc29pZEdlb21ldHJ5VXBkYXRlciIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0VsbGlwc29pZEdlb21ldHJ5IiwiLi4vQ29yZS9FbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9tZXRyeUluc3RhbmNlIiwiLi4vQ29yZS9Jc284NjAxIiwiLi4vQ29yZS9NYXRyaXgzIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL1NjZW5lL01hdGVyaWFsQXBwZWFyYW5jZSIsIi4uL1NjZW5lL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUHJpbWl0aXZlIiwiLi4vU2NlbmUvU2NlbmVNb2RlIiwiLi9Db2xvck1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL01hdGVyaWFsUHJvcGVydHkiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIpeyJ1c2Ugc3RyaWN0Ijt2YXIgUyxULHgsQSxQPUMuZnJvbUNvbG9yKHQuV0hJVEUpLE09bmV3IHcoITApLEk9bmV3IHcoITApLEQ9bmV3IHcoITEpLE89bmV3IHcodC5CTEFDSyksUj1uZXcgZSgxLDEsMSksTD1mdW5jdGlvbihlKXt0aGlzLmlkPWUsdGhpcy52ZXJ0ZXhGb3JtYXQ9dm9pZCAwLHRoaXMucmFkaWk9dm9pZCAwLHRoaXMuc3RhY2tQYXJ0aXRpb25zPXZvaWQgMCx0aGlzLnNsaWNlUGFydGl0aW9ucz12b2lkIDAsdGhpcy5zdWJkaXZpc2lvbnM9dm9pZCAwfSxOPWZ1bmN0aW9uKGUsdCl7dGhpcy5fc2NlbmU9dCx0aGlzLl9lbnRpdHk9ZSx0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb249ZS5kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKE4ucHJvdG90eXBlLl9vbkVudGl0eVByb3BlcnR5Q2hhbmdlZCx0aGlzKSx0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9keW5hbWljPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZD1uZXcgYyx0aGlzLl9zaG93UHJvcGVydHk9dm9pZCAwLHRoaXMuX21hdGVyaWFsUHJvcGVydHk9dm9pZCAwLHRoaXMuX2hhc0NvbnN0YW50T3V0bGluZT0hMCx0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5PXZvaWQgMCx0aGlzLl9vdXRsaW5lQ29sb3JQcm9wZXJ0eT12b2lkIDAsdGhpcy5fb3B0aW9ucz1uZXcgTChlKSx0aGlzLl9vbkVudGl0eVByb3BlcnR5Q2hhbmdlZChlLCJlbGxpcHNvaWQiLGUuZWxsaXBzb2lkLHZvaWQgMCl9O28oTix7cGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2VUeXBlOnt2YWx1ZTpnfSxtYXRlcmlhbEFwcGVhcmFuY2VUeXBlOnt2YWx1ZTp2fX0pLG8oTi5wcm90b3R5cGUse2VudGl0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VudGl0eX19LGZpbGxFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsbEVuYWJsZWR9fSxoYXNDb25zdGFudEZpbGw6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9maWxsRW5hYmxlZHx8IXIodGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJmIuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZiLmlzQ29uc3RhbnQodGhpcy5fZmlsbFByb3BlcnR5KX19LGZpbGxNYXRlcmlhbFByb3BlcnR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eX19LG91dGxpbmVFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0bGluZUVuYWJsZWR9fSxoYXNDb25zdGFudE91dGxpbmU6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9vdXRsaW5lRW5hYmxlZHx8IXIodGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJmIuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZiLmlzQ29uc3RhbnQodGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eSl9fSxvdXRsaW5lQ29sb3JQcm9wZXJ0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5fX0saXNEeW5hbWljOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZHluYW1pY319LGlzQ2xvc2VkOnt2YWx1ZTohMH0sZ2VvbWV0cnlDaGFuZ2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkfX19KSxOLnByb3RvdHlwZS5pc091dGxpbmVWaXNpYmxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VudGl0eTtyZXR1cm4gdGhpcy5fb3V0bGluZUVuYWJsZWQmJnQuaXNBdmFpbGFibGUoZSkmJnRoaXMuX3Nob3dQcm9wZXJ0eS5nZXRWYWx1ZShlKSYmdGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eS5nZXRWYWx1ZShlKX0sTi5wcm90b3R5cGUuaXNGaWxsZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZW50aXR5O3JldHVybiB0aGlzLl9maWxsRW5hYmxlZCYmdC5pc0F2YWlsYWJsZShlKSYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGUpJiZ0aGlzLl9maWxsUHJvcGVydHkuZ2V0VmFsdWUoZSl9LE4ucHJvdG90eXBlLmNyZWF0ZUZpbGxHZW9tZXRyeUluc3RhbmNlPWZ1bmN0aW9uKGUpe3ZhciBuLG8sYT10aGlzLl9lbnRpdHkscz1hLmlzQXZhaWxhYmxlKGUpLHU9bmV3IHAocyYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGUpJiZ0aGlzLl9maWxsUHJvcGVydHkuZ2V0VmFsdWUoZSkpO2lmKHRoaXMuX21hdGVyaWFsUHJvcGVydHkgaW5zdGFuY2VvZiBDKXt2YXIgYz10LldISVRFO3IodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvcikmJih0aGlzLl9tYXRlcmlhbFByb3BlcnR5LmNvbG9yLmlzQ29uc3RhbnR8fHMpJiYoYz10aGlzLl9tYXRlcmlhbFByb3BlcnR5LmNvbG9yLmdldFZhbHVlKGUpKSxvPWkuZnJvbUNvbG9yKGMpLG49e3Nob3c6dSxjb2xvcjpvfX1lbHNlIG49e3Nob3c6dX07cmV0dXJuIFM9YS5wb3NpdGlvbi5nZXRWYWx1ZShoLk1JTklNVU1fVkFMVUUsUyksVD1hLm9yaWVudGF0aW9uLmdldFZhbHVlKGguTUlOSU1VTV9WQUxVRSxUKSxBPW0uZnJvbVF1YXRlcm5pb24oVCxBKSxuZXcgZCh7aWQ6YSxnZW9tZXRyeTpuZXcgbCh0aGlzLl9vcHRpb25zKSxtb2RlbE1hdHJpeDpmLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uKEEsUyksYXR0cmlidXRlczpufSl9LE4ucHJvdG90eXBlLmNyZWF0ZU91dGxpbmVHZW9tZXRyeUluc3RhbmNlPWZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMuX2VudGl0eSxyPW4uaXNBdmFpbGFibGUoZSk7cmV0dXJuIFM9bi5wb3NpdGlvbi5nZXRWYWx1ZShoLk1JTklNVU1fVkFMVUUsUyksVD1uLm9yaWVudGF0aW9uLmdldFZhbHVlKGguTUlOSU1VTV9WQUxVRSxUKSxBPW0uZnJvbVF1YXRlcm5pb24oVCxBKSxuZXcgZCh7aWQ6bixnZW9tZXRyeTpuZXcgdSh0aGlzLl9vcHRpb25zKSxtb2RlbE1hdHJpeDpmLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uKEEsUyksYXR0cmlidXRlczp7c2hvdzpuZXcgcChyJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSkmJnRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHkuZ2V0VmFsdWUoZSkpLGNvbG9yOmkuZnJvbUNvbG9yKHI/dGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHkuZ2V0VmFsdWUoZSk6dC5CTEFDSyl9fSl9LE4ucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LE4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb24oKSxhKHRoaXMpfSxOLnByb3RvdHlwZS5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQ9ZnVuY3Rpb24oZSx0KXtpZigiYXZhaWxhYmlsaXR5Ij09PXR8fCJwb3NpdGlvbiI9PT10fHwib3JpZW50YXRpb24iPT09dHx8ImVsbGlwc29pZCI9PT10KXt2YXIgaT10aGlzLl9lbnRpdHkuZWxsaXBzb2lkO2lmKCFyKGkpKXJldHVybih0aGlzLl9maWxsRW5hYmxlZHx8dGhpcy5fb3V0bGluZUVuYWJsZWQpJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgbz1pLmZpbGwsYT1yKG8pJiZvLmlzQ29uc3RhbnQ/by5nZXRWYWx1ZShoLk1JTklNVU1fVkFMVUUpOiEwLHM9aS5vdXRsaW5lLGw9cihzKTtpZihsJiZzLmlzQ29uc3RhbnQmJihsPXMuZ2V0VmFsdWUoaC5NSU5JTVVNX1ZBTFVFKSksIWEmJiFsKXJldHVybih0aGlzLl9maWxsRW5hYmxlZHx8dGhpcy5fb3V0bGluZUVuYWJsZWQpJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgdT10aGlzLl9lbnRpdHkucG9zaXRpb24sYz10aGlzLl9lbnRpdHkub3JpZW50YXRpb24sZD1pLnJhZGlpLG09aS5zaG93O2lmKHIobSkmJm0uaXNDb25zdGFudCYmIW0uZ2V0VmFsdWUoaC5NSU5JTVVNX1ZBTFVFKXx8IXIodSl8fCFyKGMpfHwhcihkKSlyZXR1cm4odGhpcy5fZmlsbEVuYWJsZWR8fHRoaXMuX291dGxpbmVFbmFibGVkKSYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIGY9bihpLm1hdGVyaWFsLFApLHA9ZiBpbnN0YW5jZW9mIEM7dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eT1mLHRoaXMuX2ZpbGxQcm9wZXJ0eT1uKG8sSSksdGhpcy5fc2hvd1Byb3BlcnR5PW4obSxNKSx0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5PW4oaS5vdXRsaW5lLEQpLHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5PWw/bihpLm91dGxpbmVDb2xvcixPKTp2b2lkIDAsdGhpcy5fZmlsbEVuYWJsZWQ9YSx0aGlzLl9vdXRsaW5lRW5hYmxlZD1sO3ZhciBfPWkuc3RhY2tQYXJ0aXRpb25zLHk9aS5zbGljZVBhcnRpdGlvbnMsdz1pLnN1YmRpdmlzaW9ucztpZih1LmlzQ29uc3RhbnQmJmMuaXNDb25zdGFudCYmZC5pc0NvbnN0YW50JiZiLmlzQ29uc3RhbnQoXykmJmIuaXNDb25zdGFudCh5KSYmYi5pc0NvbnN0YW50KHcpKXt2YXIgRT10aGlzLl9vcHRpb25zO0UudmVydGV4Rm9ybWF0PXA/Zy5WRVJURVhfRk9STUFUOnYuVkVSVEVYX0ZPUk1BVCxFLnJhZGlpPWQuZ2V0VmFsdWUoaC5NSU5JTVVNX1ZBTFVFLEUucmFkaWkpLEUuc3RhY2tQYXJ0aXRpb25zPXIoXyk/Xy5nZXRWYWx1ZShoLk1JTklNVU1fVkFMVUUpOnZvaWQgMCxFLnNsaWNlUGFydGl0aW9ucz1yKHkpP3kuZ2V0VmFsdWUoaC5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsRS5zdWJkaXZpc2lvbnM9cih3KT93LmdldFZhbHVlKGguTUlOSU1VTV9WQUxVRSk6dm9pZCAwLHRoaXMuX2R5bmFtaWM9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyl9ZWxzZSB0aGlzLl9keW5hbWljfHwodGhpcy5fZHluYW1pYz0hMCx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSl9fSxOLnByb3RvdHlwZS5jcmVhdGVEeW5hbWljVXBkYXRlcj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IHooZSx0aGlzKX07dmFyIHo9ZnVuY3Rpb24oZSx0KXt0aGlzLl9lbnRpdHk9dC5fZW50aXR5LHRoaXMuX3NjZW5lPXQuX3NjZW5lLHRoaXMuX3ByaW1pdGl2ZXM9ZSx0aGlzLl9wcmltaXRpdmU9dm9pZCAwLHRoaXMuX291dGxpbmVQcmltaXRpdmU9dm9pZCAwLHRoaXMuX2dlb21ldHJ5VXBkYXRlcj10LHRoaXMuX29wdGlvbnM9bmV3IEwodC5fZW50aXR5KSx0aGlzLl9tb2RlbE1hdHJpeD1uZXcgZix0aGlzLl9tYXRlcmlhbD12b2lkIDAsdGhpcy5fYXR0cmlidXRlcz12b2lkIDAsdGhpcy5fb3V0bGluZUF0dHJpYnV0ZXM9dm9pZCAwLHRoaXMuX2xhc3RTY2VuZU1vZGU9dm9pZCAwfTtyZXR1cm4gei5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciBvPXRoaXMuX2VudGl0eSxhPW8uZWxsaXBzb2lkLHM9YS5zaG93O2lmKCFvLmlzQXZhaWxhYmxlKGUpfHxyKHMpJiYhcy5nZXRWYWx1ZShlKSlyZXR1cm4gcih0aGlzLl9wcmltaXRpdmUpJiYodGhpcy5fcHJpbWl0aXZlLnNob3c9ITEpLHIodGhpcy5fb3V0bGluZVByaW1pdGl2ZSkmJih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlLnNob3c9ITEpLHZvaWQgMDt2YXIgYyxoPSFyKGEuZmlsbCl8fGEuZmlsbC5nZXRWYWx1ZShlKSxDPXIoYS5vdXRsaW5lKSYmYS5vdXRsaW5lLmdldFZhbHVlKGUpLHc9cihhLm91dGxpbmVDb2xvcik/YS5vdXRsaW5lQ29sb3IuZ2V0VmFsdWUoZSk6dC5CTEFDSyxiPUUuZ2V0VmFsdWUoZSxuKGEubWF0ZXJpYWwsUCksdGhpcy5fbWF0ZXJpYWwpO3RoaXMuX21hdGVyaWFsPWI7dmFyIE09YS5zdGFja1BhcnRpdGlvbnMsST1hLnNsaWNlUGFydGl0aW9ucyxEPWEuc3ViZGl2aXNpb25zLE89cihNKT9NLmdldFZhbHVlKGUpOnZvaWQgMCxMPXIoSSk/SS5nZXRWYWx1ZShlKTp2b2lkIDAsTj1yKEQpP0QuZ2V0VmFsdWUoZSk6dm9pZCAwLHo9dGhpcy5fb3B0aW9ucyxCPXRoaXMuX3NjZW5lLm1vZGUsRj1CPT09eS5TQ0VORTNELFY9dGhpcy5fbW9kZWxNYXRyaXgsaz1vLnBvc2l0aW9uLFU9by5vcmllbnRhdGlvbixXPWEucmFkaWk7Uz1rLmdldFZhbHVlKGUsUyksVD1VLmdldFZhbHVlKGUsVCksQT1tLmZyb21RdWF0ZXJuaW9uKFQsQSkseD1XLmdldFZhbHVlKGUseCksVj1mLmZyb21Sb3RhdGlvblRyYW5zbGF0aW9uKEEsUyxWKTt2YXIgRz0hRnx8dGhpcy5fbGFzdFNjZW5lTW9kZSE9PUJ8fCFyKHRoaXMuX3ByaW1pdGl2ZSl8fHouc3RhY2tQYXJ0aXRpb25zIT09T3x8ei5zbGljZVBhcnRpdGlvbnMhPT1MfHx6LnN1YmRpdmlzaW9ucyE9PU47aWYoRyl0aGlzLl9yZW1vdmVQcmltaXRpdmVzKCksdGhpcy5fbGFzdFNjZW5lTW9kZT1CLHouc3RhY2tQYXJ0aXRpb25zPU8sei5zbGljZVBhcnRpdGlvbnM9TCx6LnN1YmRpdmlzaW9ucz1OLHoucmFkaWk9Rj9SOngsdGhpcy5fbWF0ZXJpYWw9YixiPXRoaXMuX21hdGVyaWFsLGM9bmV3IHYoe21hdGVyaWFsOmIsdHJhbnNsdWNlbnQ6Yi5pc1RyYW5zbHVjZW50KCksY2xvc2VkOiEwfSksei52ZXJ0ZXhGb3JtYXQ9Yy52ZXJ0ZXhGb3JtYXQsdGhpcy5fcHJpbWl0aXZlPW5ldyBfKHtnZW9tZXRyeUluc3RhbmNlczpuZXcgZCh7aWQ6byxnZW9tZXRyeTpuZXcgbCh6KSxtb2RlbE1hdHJpeDpGP3ZvaWQgMDpWLGF0dHJpYnV0ZXM6e3Nob3c6bmV3IHAoaCl9fSksYXBwZWFyYW5jZTpjLGFzeW5jaHJvbm91czohMX0pLHRoaXMuX3ByaW1pdGl2ZXMuYWRkKHRoaXMuX3ByaW1pdGl2ZSksei52ZXJ0ZXhGb3JtYXQ9Zy5WRVJURVhfRk9STUFULHRoaXMuX291dGxpbmVQcmltaXRpdmU9bmV3IF8oe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBkKHtpZDpvLGdlb21ldHJ5Om5ldyB1KHopLG1vZGVsTWF0cml4OkY/dm9pZCAwOlYsYXR0cmlidXRlczp7c2hvdzpuZXcgcChDKSxjb2xvcjppLmZyb21Db2xvcih3KX19KSxhcHBlYXJhbmNlOm5ldyBnKHtmbGF0OiEwLHRyYW5zbHVjZW50OjEhPT13LmFscGhhfSksYXN5bmNocm9ub3VzOiExfSksdGhpcy5fcHJpbWl0aXZlcy5hZGQodGhpcy5fb3V0bGluZVByaW1pdGl2ZSk7ZWxzZSBpZih0aGlzLl9wcmltaXRpdmUucmVhZHkpe3ZhciBIPXRoaXMuX3ByaW1pdGl2ZTtjPUguYXBwZWFyYW5jZSxjLm1hdGVyaWFsPWI7dmFyIHE9dGhpcy5fYXR0cmlidXRlcztyKHEpfHwocT1ILmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKG8pLHRoaXMuX2F0dHJpYnV0ZXM9cSkscS5zaG93PXAudG9WYWx1ZShoLHEuc2hvdyk7dmFyIGo9dGhpcy5fb3V0bGluZVByaW1pdGl2ZSxZPXRoaXMuX291dGxpbmVBdHRyaWJ1dGVzO3IoWSl8fChZPWouZ2V0R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZXMobyksdGhpcy5fb3V0bGluZUF0dHJpYnV0ZXM9WSksWS5zaG93PXAudG9WYWx1ZShDLFkuc2hvdyksWS5jb2xvcj1pLnRvVmFsdWUodyxZLmNvbG9yKX1GJiYoeC54PU1hdGgubWF4KHgueCwuMDAxKSx4Lnk9TWF0aC5tYXgoeC55LC4wMDEpLHguej1NYXRoLm1heCh4LnosLjAwMSksVj1mLm11bHRpcGx5QnlTY2FsZShWLHgsViksdGhpcy5fcHJpbWl0aXZlLm1vZGVsTWF0cml4PVYsdGhpcy5fb3V0bGluZVByaW1pdGl2ZS5tb2RlbE1hdHJpeD1WKX0sei5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sei5wcm90b3R5cGUuX3JlbW92ZVByaW1pdGl2ZXM9ZnVuY3Rpb24oKXtyKHRoaXMuX3ByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX3ByaW1pdGl2ZSkscih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fb3V0bGluZVByaW1pdGl2ZSl9LHoucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVQcmltaXRpdmVzKCksYSh0aGlzKX0sTn0pLGRlZmluZSgiRGF0YVNvdXJjZXMvU3RhdGljR2VvbWV0cnlDb2xvckJhdGNoIixbIi4uL0NvcmUvQXNzb2NpYXRpdmVBcnJheSIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9TY2VuZS9QcmltaXRpdmUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPW5ldyB0LHM9ZnVuY3Rpb24odCxpLG4scil7dGhpcy50cmFuc2x1Y2VudD1pLHRoaXMuYXBwZWFyYW5jZVR5cGU9bix0aGlzLmNsb3NlZD1yLHRoaXMucHJpbWl0aXZlcz10LHRoaXMuY3JlYXRlUHJpbWl0aXZlPSExLHRoaXMucHJpbWl0aXZlPXZvaWQgMCx0aGlzLm9sZFByaW1pdGl2ZT12b2lkIDAsdGhpcy5nZW9tZXRyeT1uZXcgZSx0aGlzLnVwZGF0ZXJzPW5ldyBlLHRoaXMudXBkYXRlcnNXaXRoQXR0cmlidXRlcz1uZXcgZSx0aGlzLmF0dHJpYnV0ZXM9bmV3IGUsdGhpcy5pdGVtc1RvUmVtb3ZlPVtdfTtzLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT1lLmVudGl0eS5pZDt0aGlzLmNyZWF0ZVByaW1pdGl2ZT0hMCx0aGlzLmdlb21ldHJ5LnNldChpLHQpLHRoaXMudXBkYXRlcnMuc2V0KGksZSksZS5oYXNDb25zdGFudEZpbGwmJmUuZmlsbE1hdGVyaWFsUHJvcGVydHkuaXNDb25zdGFudHx8dGhpcy51cGRhdGVyc1dpdGhBdHRyaWJ1dGVzLnNldChpLGUpfSxzLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5lbnRpdHkuaWQ7dGhpcy5jcmVhdGVQcmltaXRpdmU9dGhpcy5nZW9tZXRyeS5yZW1vdmUodCl8fHRoaXMuY3JlYXRlUHJpbWl0aXZlLHRoaXMudXBkYXRlcnMucmVtb3ZlKHQpLHRoaXMudXBkYXRlcnNXaXRoQXR0cmlidXRlcy5yZW1vdmUodCl9LHMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXt2YXIgcz0hMCxsPSEwLHU9MCxjPXRoaXMucHJpbWl0aXZlLGQ9dGhpcy5wcmltaXRpdmVzO2lmKHRoaXMuY3JlYXRlUHJpbWl0aXZlKXt0aGlzLmF0dHJpYnV0ZXMucmVtb3ZlQWxsKCksbihjKSYmKGMucmVhZHk/dGhpcy5vbGRQcmltaXRpdmU9YzpkLnJlbW92ZShjKSxzPSExKTt2YXIgaD10aGlzLmdlb21ldHJ5LnZhbHVlcztoLmxlbmd0aD4wJiYoYz1uZXcgbyh7YXN5bmNocm9ub3VzOiEwLGdlb21ldHJ5SW5zdGFuY2VzOmgsYXBwZWFyYW5jZTpuZXcgdGhpcy5hcHBlYXJhbmNlVHlwZSh7dHJhbnNsdWNlbnQ6dGhpcy50cmFuc2x1Y2VudCxjbG9zZWQ6dGhpcy5jbG9zZWR9KX0pLGMuc2hvdz1zLGQuYWRkKGMpLGw9ITEpLHRoaXMucHJpbWl0aXZlPWMsdGhpcy5jcmVhdGVQcmltaXRpdmU9ITF9ZWxzZSBpZihuKGMpJiZjLnJlYWR5KXtuKHRoaXMub2xkUHJpbWl0aXZlKSYmKGQucmVtb3ZlKHRoaXMub2xkUHJpbWl0aXZlKSx0aGlzLm9sZFByaW1pdGl2ZT12b2lkIDAsYy5zaG93PSEwKTtmb3IodmFyIG09dGhpcy51cGRhdGVyc1dpdGhBdHRyaWJ1dGVzLnZhbHVlcyxmPW0ubGVuZ3RoLHA9MDtmPnA7cCsrKXt2YXIgdj1tW3BdLGc9dGhpcy5nZW9tZXRyeS5nZXQodi5lbnRpdHkuaWQpLF89dGhpcy5hdHRyaWJ1dGVzLmdldChnLmlkLmlkKTtpZihuKF8pfHwoXz1jLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKGcuaWQpLHRoaXMuYXR0cmlidXRlcy5zZXQoZy5pZC5pZCxfKSksIXYuZmlsbE1hdGVyaWFsUHJvcGVydHkuaXNDb25zdGFudCl7dmFyIHk9di5maWxsTWF0ZXJpYWxQcm9wZXJ0eS5jb2xvcjt5LmdldFZhbHVlKGUsYSksdC5lcXVhbHMoXy5fbGFzdENvbG9yLGEpfHwoXy5fbGFzdENvbG9yPXQuY2xvbmUoYSxfLl9sYXN0Q29sb3IpLF8uY29sb3I9aS50b1ZhbHVlKGEsXy5jb2xvciksKHRoaXMudHJhbnNsdWNlbnQmJjI1NT09PV8uY29sb3JbM118fCF0aGlzLnRyYW5zbHVjZW50JiYyNTUhPT1fLmNvbG9yWzNdKSYmKHRoaXMuaXRlbXNUb1JlbW92ZVt1KytdPXYpKX12Lmhhc0NvbnN0YW50RmlsbHx8KHM9di5pc0ZpbGxlZChlKSxzIT09Xy5fbGFzdFNob3cmJihfLl9sYXN0U2hvdz1zLF8uc2hvdz1yLnRvVmFsdWUocyxfLnNob3cpKSl9fWVsc2UgbihjKSYmIWMucmVhZHkmJihsPSExKTtyZXR1cm4gdGhpcy5pdGVtc1RvUmVtb3ZlLmxlbmd0aD11LGx9LHMucHJvdG90eXBlLnJlbW92ZUFsbFByaW1pdGl2ZXM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByaW1pdGl2ZTtuKGUpJiYodGhpcy5wcmltaXRpdmVzLnJlbW92ZShlKSx0aGlzLnByaW1pdGl2ZT12b2lkIDAsdGhpcy5nZW9tZXRyeS5yZW1vdmVBbGwoKSx0aGlzLnVwZGF0ZXJzLnJlbW92ZUFsbCgpKX07dmFyIGw9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX3NvbGlkQmF0Y2g9bmV3IHMoZSwhMSx0LGkpLHRoaXMuX3RyYW5zbHVjZW50QmF0Y2g9bmV3IHMoZSwhMCx0LGkpfTtyZXR1cm4gbC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dC5jcmVhdGVGaWxsR2VvbWV0cnlJbnN0YW5jZShlKTsyNTU9PT1pLmF0dHJpYnV0ZXMuY29sb3IudmFsdWVbM10/dGhpcy5fc29saWRCYXRjaC5hZGQodCxpKTp0aGlzLl90cmFuc2x1Y2VudEJhdGNoLmFkZCh0LGkpfSxsLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7dGhpcy5fc29saWRCYXRjaC5yZW1vdmUoZSl8fHRoaXMuX3RyYW5zbHVjZW50QmF0Y2gucmVtb3ZlKGUpfSxsLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQsaSxuPXRoaXMuX3NvbGlkQmF0Y2gudXBkYXRlKGUpO249dGhpcy5fdHJhbnNsdWNlbnRCYXRjaC51cGRhdGUoZSkmJm47dmFyIHI9dGhpcy5fc29saWRCYXRjaC5pdGVtc1RvUmVtb3ZlLG89ci5sZW5ndGg7aWYobz4wKWZvcih0PTA7bz50O3QrKylpPXJbdF0sdGhpcy5fc29saWRCYXRjaC5yZW1vdmUoaSksdGhpcy5fdHJhbnNsdWNlbnRCYXRjaC5hZGQoaSxpLmNyZWF0ZUZpbGxHZW9tZXRyeUluc3RhbmNlKGUpKTtyPXRoaXMuX3RyYW5zbHVjZW50QmF0Y2guaXRlbXNUb1JlbW92ZTt2YXIgYT1yLmxlbmd0aDtpZihhPjApZm9yKHQ9MDthPnQ7dCsrKWk9clt0XSx0aGlzLl90cmFuc2x1Y2VudEJhdGNoLnJlbW92ZShpKSx0aGlzLl9zb2xpZEJhdGNoLmFkZChpLGkuY3JlYXRlRmlsbEdlb21ldHJ5SW5zdGFuY2UoZSkpO3JldHVybihvPjB8fGE+MCkmJihuPXRoaXMuX3NvbGlkQmF0Y2gudXBkYXRlKGUpJiZuLG49dGhpcy5fdHJhbnNsdWNlbnRCYXRjaC51cGRhdGUoZSkmJm4pLG59LGwucHJvdG90eXBlLnJlbW92ZUFsbFByaW1pdGl2ZXM9ZnVuY3Rpb24oKXt0aGlzLl9zb2xpZEJhdGNoLnJlbW92ZUFsbFByaW1pdGl2ZXMoKSx0aGlzLl90cmFuc2x1Y2VudEJhdGNoLnJlbW92ZUFsbFByaW1pdGl2ZXMoKX0sbH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvU3RhdGljR2VvbWV0cnlQZXJNYXRlcmlhbEJhdGNoIixbIi4uL0NvcmUvQXNzb2NpYXRpdmVBcnJheSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9TY2VuZS9QcmltaXRpdmUiLCIuL01hdGVyaWFsUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LGksbixyKXt0aGlzLnByaW1pdGl2ZXM9dCx0aGlzLmFwcGVhcmFuY2VUeXBlPWksdGhpcy5tYXRlcmlhbFByb3BlcnR5PW4sdGhpcy5jbG9zZWQ9cix0aGlzLnVwZGF0ZXJzPW5ldyBlLHRoaXMuY3JlYXRlUHJpbWl0aXZlPSEwLHRoaXMucHJpbWl0aXZlPXZvaWQgMCx0aGlzLm9sZFByaW1pdGl2ZT12b2lkIDAsdGhpcy5nZW9tZXRyeT1uZXcgZSx0aGlzLm1hdGVyaWFsPXZvaWQgMCx0aGlzLnVwZGF0ZXJzV2l0aEF0dHJpYnV0ZXM9bmV3IGUsdGhpcy5hdHRyaWJ1dGVzPW5ldyBlLHRoaXMuaW52YWxpZGF0ZWQ9ITEsdGhpcy5yZW1vdmVNYXRlcmlhbFN1YnNjcmlwdGlvbj1uLmRlZmluaXRpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIoby5wcm90b3R5cGUub25NYXRlcmlhbENoYW5nZWQsdGhpcyl9O28ucHJvdG90eXBlLm9uTWF0ZXJpYWxDaGFuZ2VkPWZ1bmN0aW9uKCl7dGhpcy5pbnZhbGlkYXRlZD0hMH0sby5wcm90b3R5cGUuaXNNYXRlcmlhbD1mdW5jdGlvbihlKXt2YXIgaT10aGlzLm1hdGVyaWFsUHJvcGVydHksbj1lLmZpbGxNYXRlcmlhbFByb3BlcnR5O3JldHVybiBuPT09aT8hMDp0KGkpP2kuZXF1YWxzKG4pOiExfSxvLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT10LmVudGl0eS5pZDt0aGlzLnVwZGF0ZXJzLnNldChpLHQpLHRoaXMuZ2VvbWV0cnkuc2V0KGksdC5jcmVhdGVGaWxsR2VvbWV0cnlJbnN0YW5jZShlKSksdC5oYXNDb25zdGFudEZpbGwmJnQuZmlsbE1hdGVyaWFsUHJvcGVydHkuaXNDb25zdGFudHx8dGhpcy51cGRhdGVyc1dpdGhBdHRyaWJ1dGVzLnNldChpLHQpLHRoaXMuY3JlYXRlUHJpbWl0aXZlPSEwfSxvLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5lbnRpdHkuaWQ7cmV0dXJuIHRoaXMuY3JlYXRlUHJpbWl0aXZlPXRoaXMudXBkYXRlcnMucmVtb3ZlKHQpLHRoaXMuZ2VvbWV0cnkucmVtb3ZlKHQpLHRoaXMudXBkYXRlcnNXaXRoQXR0cmlidXRlcy5yZW1vdmUodCksdGhpcy5jcmVhdGVQcmltaXRpdmV9LG8ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXt2YXIgbz0hMCxhPSEwLHM9dGhpcy5wcmltaXRpdmUsbD10aGlzLnByaW1pdGl2ZXMsdT10aGlzLmdlb21ldHJ5LnZhbHVlcztpZih0aGlzLmNyZWF0ZVByaW1pdGl2ZSl0KHMpJiYocy5yZWFkeT90aGlzLm9sZFByaW1pdGl2ZT1zOmwucmVtb3ZlKHMpLG89ITEpLHUubGVuZ3RoPjAmJih0aGlzLm1hdGVyaWFsPXIuZ2V0VmFsdWUoZSx0aGlzLm1hdGVyaWFsUHJvcGVydHksdGhpcy5tYXRlcmlhbCkscz1uZXcgbih7YXN5bmNocm9ub3VzOiEwLGdlb21ldHJ5SW5zdGFuY2VzOnUsYXBwZWFyYW5jZTpuZXcgdGhpcy5hcHBlYXJhbmNlVHlwZSh7bWF0ZXJpYWw6dGhpcy5tYXRlcmlhbCx0cmFuc2x1Y2VudDp0aGlzLm1hdGVyaWFsLmlzVHJhbnNsdWNlbnQoKSxjbG9zZWQ6dGhpcy5jbG9zZWR9KX0pLHMuc2hvdz1vLGwuYWRkKHMpLGE9ITEpLHRoaXMucHJpbWl0aXZlPXMsdGhpcy5jcmVhdGVQcmltaXRpdmU9ITE7ZWxzZSBpZih0KHMpJiZzLnJlYWR5KXt0KHRoaXMub2xkUHJpbWl0aXZlKSYmKGwucmVtb3ZlKHRoaXMub2xkUHJpbWl0aXZlKSx0aGlzLm9sZFByaW1pdGl2ZT12b2lkIDAscy5zaG93PSEwKSx0aGlzLm1hdGVyaWFsPXIuZ2V0VmFsdWUoZSx0aGlzLm1hdGVyaWFsUHJvcGVydHksdGhpcy5tYXRlcmlhbCksdGhpcy5wcmltaXRpdmUuYXBwZWFyYW5jZS5tYXRlcmlhbD10aGlzLm1hdGVyaWFsO2Zvcih2YXIgYz10aGlzLnVwZGF0ZXJzV2l0aEF0dHJpYnV0ZXMudmFsdWVzLGQ9Yy5sZW5ndGgsaD0wO2Q+aDtoKyspe3ZhciBtPWNbaF0sZj10aGlzLmdlb21ldHJ5LmdldChtLmVudGl0eS5pZCkscD10aGlzLmF0dHJpYnV0ZXMuZ2V0KGYuaWQuaWQpO3QocCl8fChwPXMuZ2V0R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZXMoZi5pZCksdGhpcy5hdHRyaWJ1dGVzLnNldChmLmlkLmlkLHApKSxtLmhhc0NvbnN0YW50RmlsbHx8KG89bS5pc0ZpbGxlZChlKSxvIT09cC5fbGFzdFNob3cmJihwLl9sYXN0U2hvdz1vLHAuc2hvdz1pLnRvVmFsdWUobyxwLnNob3cpKSl9fWVsc2UgdChzKSYmIXMucmVhZHkmJihhPSExKTtyZXR1cm4gYX0sby5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMucHJpbWl0aXZlLGk9dGhpcy5wcmltaXRpdmVzO3QoZSkmJmkucmVtb3ZlKGUpLHRoaXMucmVtb3ZlTWF0ZXJpYWxTdWJzY3JpcHRpb24oKX07dmFyIGE9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX2l0ZW1zPVtdLHRoaXMuX3ByaW1pdGl2ZXM9ZSx0aGlzLl9hcHBlYXJhbmNlVHlwZT10LHRoaXMuX2Nsb3NlZD1pfTtyZXR1cm4gYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPXRoaXMuX2l0ZW1zLG49aS5sZW5ndGgscj0wO24+cjtyKyspe3ZhciBhPWlbcl07aWYoYS5pc01hdGVyaWFsKHQpKXJldHVybiBhLmFkZChlLHQpLHZvaWQgMH12YXIgcz1uZXcgbyh0aGlzLl9wcmltaXRpdmVzLHRoaXMuX2FwcGVhcmFuY2VUeXBlLHQuZmlsbE1hdGVyaWFsUHJvcGVydHksdGhpcy5fY2xvc2VkKTtzLmFkZChlLHQpLGkucHVzaChzKX0sYS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLl9pdGVtcyxpPXQubGVuZ3RoLG49aS0xO24+PTA7bi0tKXt2YXIgcj10W25dO2lmKHIucmVtb3ZlKGUpKXswPT09ci51cGRhdGVycy5sZW5ndGgmJih0LnNwbGljZShuLDEpLHIuZGVzdHJveSgpKTticmVha319fSxhLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQsaT10aGlzLl9pdGVtcyxuPWkubGVuZ3RoO2Zvcih0PW4tMTt0Pj0wO3QtLSl7dmFyIHI9aVt0XTtpZihyLmludmFsaWRhdGVkKXtpLnNwbGljZSh0LDEpO2Zvcih2YXIgbz1yLnVwZGF0ZXJzLnZhbHVlcyxhPW8ubGVuZ3RoLHM9MDthPnM7cysrKXRoaXMuYWRkKGUsb1tzXSk7ci5kZXN0cm95KCl9fXZhciBsPSEwO2Zvcih0PTA7bj50O3QrKylsPWlbdF0udXBkYXRlKGUpJiZsO3JldHVybiBsfSxhLnByb3RvdHlwZS5yZW1vdmVBbGxQcmltaXRpdmVzPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuX2l0ZW1zLHQ9ZS5sZW5ndGgsaT0wO3Q+aTtpKyspZVtpXS5kZXN0cm95KCk7dGhpcy5faXRlbXMubGVuZ3RoPTB9LGF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1N0YXRpY091dGxpbmVHZW9tZXRyeUJhdGNoIixbIi4uL0NvcmUvQXNzb2NpYXRpdmVBcnJheSIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9TY2VuZS9QZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZSIsIi4uL1NjZW5lL1ByaW1pdGl2ZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbih0LGkpe3RoaXMudHJhbnNsdWNlbnQ9aSx0aGlzLnByaW1pdGl2ZXM9dCx0aGlzLmNyZWF0ZVByaW1pdGl2ZT0hMSx0aGlzLnByaW1pdGl2ZT12b2lkIDAsdGhpcy5vbGRQcmltaXRpdmU9dm9pZCAwLHRoaXMuZ2VvbWV0cnk9bmV3IGUsdGhpcy51cGRhdGVycz1uZXcgZSx0aGlzLnVwZGF0ZXJzV2l0aEF0dHJpYnV0ZXM9bmV3IGUsdGhpcy5hdHRyaWJ1dGVzPW5ldyBlLHRoaXMuaXRlbXNUb1JlbW92ZT1bXX07cy5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsdCl7dmFyIGk9ZS5lbnRpdHkuaWQ7dGhpcy5jcmVhdGVQcmltaXRpdmU9ITAsdGhpcy5nZW9tZXRyeS5zZXQoaSx0KSx0aGlzLnVwZGF0ZXJzLnNldChpLGUpLGUuaGFzQ29uc3RhbnRPdXRsaW5lJiZlLm91dGxpbmVDb2xvclByb3BlcnR5LmlzQ29uc3RhbnR8fHRoaXMudXBkYXRlcnNXaXRoQXR0cmlidXRlcy5zZXQoaSxlKX0scy5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe3ZhciB0PWUuZW50aXR5LmlkO3RoaXMuY3JlYXRlUHJpbWl0aXZlPXRoaXMuZ2VvbWV0cnkucmVtb3ZlKHQpfHx0aGlzLmNyZWF0ZVByaW1pdGl2ZSx0aGlzLnVwZGF0ZXJzLnJlbW92ZSh0KSx0aGlzLnVwZGF0ZXJzV2l0aEF0dHJpYnV0ZXMucmVtb3ZlKHQpfTt2YXIgbD1uZXcgdDtzLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHM9ITAsdT0hMCxjPTAsZD10aGlzLnByaW1pdGl2ZSxoPXRoaXMucHJpbWl0aXZlcztpZih0aGlzLmNyZWF0ZVByaW1pdGl2ZSl7dGhpcy5hdHRyaWJ1dGVzLnJlbW92ZUFsbCgpLG4oZCkmJihkLnJlYWR5P3RoaXMub2xkUHJpbWl0aXZlPWQ6aC5yZW1vdmUoZCkscz0hMSk7dmFyIG09dGhpcy5nZW9tZXRyeS52YWx1ZXM7bS5sZW5ndGg+MCYmKGQ9bmV3IGEoe2FzeW5jaHJvbm91czohMCxnZW9tZXRyeUluc3RhbmNlczptLGFwcGVhcmFuY2U6bmV3IG8oe2ZsYXQ6ITAsdHJhbnNsdWNlbnQ6dGhpcy50cmFuc2x1Y2VudH0pfSksaC5hZGQoZCksdT0hMSxkLnNob3c9cyksdGhpcy5wcmltaXRpdmU9ZCx0aGlzLmNyZWF0ZVByaW1pdGl2ZT0hMX1lbHNlIGlmKG4oZCkmJmQucmVhZHkpe24odGhpcy5vbGRQcmltaXRpdmUpJiYoaC5yZW1vdmUodGhpcy5vbGRQcmltaXRpdmUpLHRoaXMub2xkUHJpbWl0aXZlPXZvaWQgMCxkLnNob3c9ITApO2Zvcih2YXIgZj10aGlzLnVwZGF0ZXJzV2l0aEF0dHJpYnV0ZXMudmFsdWVzLHA9Zi5sZW5ndGgsdj0wO3A+djt2Kyspe3ZhciBnPWZbdl0sXz10aGlzLmdlb21ldHJ5LmdldChnLmVudGl0eS5pZCkseT10aGlzLmF0dHJpYnV0ZXMuZ2V0KF8uaWQuaWQpO2lmKG4oeSl8fCh5PWQuZ2V0R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZXMoXy5pZCksdGhpcy5hdHRyaWJ1dGVzLnNldChfLmlkLmlkLHkpKSwhZy5vdXRsaW5lQ29sb3JQcm9wZXJ0eS5pc0NvbnN0YW50KXt2YXIgQz1nLm91dGxpbmVDb2xvclByb3BlcnR5O0MuZ2V0VmFsdWUoZSxsKSx0LmVxdWFscyh5Ll9sYXN0Q29sb3IsbCl8fCh5Ll9sYXN0Q29sb3I9dC5jbG9uZShsLHkuX2xhc3RDb2xvcikseS5jb2xvcj1pLnRvVmFsdWUobCx5LmNvbG9yKSwodGhpcy50cmFuc2x1Y2VudCYmMjU1PT09eS5jb2xvclszXXx8IXRoaXMudHJhbnNsdWNlbnQmJjI1NSE9PXkuY29sb3JbM10pJiYodGhpcy5pdGVtc1RvUmVtb3ZlW2MrK109ZykpfWcuaGFzQ29uc3RhbnRPdXRsaW5lfHwocz1nLmlzT3V0bGluZVZpc2libGUoZSkscyE9PXkuX2xhc3RTaG93JiYoeS5fbGFzdFNob3c9cyx5LnNob3c9ci50b1ZhbHVlKHMseS5zaG93KSkpfX1lbHNlIG4oZCkmJiFkLnJlYWR5JiYodT0hMSk7cmV0dXJuIHRoaXMuaXRlbXNUb1JlbW92ZS5sZW5ndGg9Yyx1fSxzLnByb3RvdHlwZS5yZW1vdmVBbGxQcmltaXRpdmVzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wcmltaXRpdmU7bihlKSYmKHRoaXMucHJpbWl0aXZlcy5yZW1vdmUoZSksdGhpcy5wcmltaXRpdmU9dm9pZCAwLHRoaXMuZ2VvbWV0cnkucmVtb3ZlQWxsKCksdGhpcy51cGRhdGVycy5yZW1vdmVBbGwoKSl9O3ZhciB1PWZ1bmN0aW9uKGUpe3RoaXMuX3NvbGlkQmF0Y2g9bmV3IHMoZSwhMSksdGhpcy5fdHJhbnNsdWNlbnRCYXRjaD1uZXcgcyhlLCEwKX07cmV0dXJuIHUucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlLHQpe3ZhciBpPXQuY3JlYXRlT3V0bGluZUdlb21ldHJ5SW5zdGFuY2UoZSk7MjU1PT09aS5hdHRyaWJ1dGVzLmNvbG9yLnZhbHVlWzNdP3RoaXMuX3NvbGlkQmF0Y2guYWRkKHQsaSk6dGhpcy5fdHJhbnNsdWNlbnRCYXRjaC5hZGQodCxpKX0sdS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe3RoaXMuX3NvbGlkQmF0Y2gucmVtb3ZlKGUpfHx0aGlzLl90cmFuc2x1Y2VudEJhdGNoLnJlbW92ZShlKX0sdS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0LGksbj10aGlzLl9zb2xpZEJhdGNoLnVwZGF0ZShlKTtuPXRoaXMuX3RyYW5zbHVjZW50QmF0Y2gudXBkYXRlKGUpJiZuO3ZhciByPXRoaXMuX3NvbGlkQmF0Y2guaXRlbXNUb1JlbW92ZSxvPXIubGVuZ3RoO2lmKG8+MClmb3IodD0wO28+dDt0KyspaT1yW3RdLHRoaXMuX3NvbGlkQmF0Y2gucmVtb3ZlKGkpLHRoaXMuX3RyYW5zbHVjZW50QmF0Y2guYWRkKGksaS5jcmVhdGVPdXRsaW5lR2VvbWV0cnlJbnN0YW5jZShlKSk7cj10aGlzLl90cmFuc2x1Y2VudEJhdGNoLml0ZW1zVG9SZW1vdmU7CnZhciBhPXIubGVuZ3RoO2lmKGE+MClmb3IodD0wO2E+dDt0KyspaT1yW3RdLHRoaXMuX3RyYW5zbHVjZW50QmF0Y2gucmVtb3ZlKGkpLHRoaXMuX3NvbGlkQmF0Y2guYWRkKGksaS5jcmVhdGVPdXRsaW5lR2VvbWV0cnlJbnN0YW5jZShlKSk7cmV0dXJuKG8+MHx8YT4wKSYmKG49dGhpcy5fc29saWRCYXRjaC51cGRhdGUoZSkmJm4sbj10aGlzLl90cmFuc2x1Y2VudEJhdGNoLnVwZGF0ZShlKSYmbiksbn0sdS5wcm90b3R5cGUucmVtb3ZlQWxsUHJpbWl0aXZlcz1mdW5jdGlvbigpe3RoaXMuX3NvbGlkQmF0Y2gucmVtb3ZlQWxsUHJpbWl0aXZlcygpLHRoaXMuX3RyYW5zbHVjZW50QmF0Y2gucmVtb3ZlQWxsUHJpbWl0aXZlcygpfSx1fSksZGVmaW5lKCJEYXRhU291cmNlcy9HZW9tZXRyeVZpc3VhbGl6ZXIiLFsiLi4vQ29yZS9Bc3NvY2lhdGl2ZUFycmF5IiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4vQ29sb3JNYXRlcmlhbFByb3BlcnR5IiwiLi9TdGF0aWNHZW9tZXRyeUNvbG9yQmF0Y2giLCIuL1N0YXRpY0dlb21ldHJ5UGVyTWF0ZXJpYWxCYXRjaCIsIi4vU3RhdGljT3V0bGluZUdlb21ldHJ5QmF0Y2giXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsKGUsdCl7ZS5fb3V0bGluZUJhdGNoLnJlbW92ZSh0KSxlLl9jbG9zZWRDb2xvckJhdGNoLnJlbW92ZSh0KSxlLl9jbG9zZWRNYXRlcmlhbEJhdGNoLnJlbW92ZSh0KSxlLl9vcGVuQ29sb3JCYXRjaC5yZW1vdmUodCksZS5fb3Blbk1hdGVyaWFsQmF0Y2gucmVtb3ZlKHQpLGUuX2R5bmFtaWNCYXRjaC5yZW1vdmUodCl9ZnVuY3Rpb24gdShlLHQsaSl7cmV0dXJuIGkuaXNEeW5hbWljPyhlLl9keW5hbWljQmF0Y2guYWRkKHQsaSksdm9pZCAwKTooaS5vdXRsaW5lRW5hYmxlZCYmZS5fb3V0bGluZUJhdGNoLmFkZCh0LGkpLGkuZmlsbEVuYWJsZWQmJihpLmlzQ2xvc2VkP2kuZmlsbE1hdGVyaWFsUHJvcGVydHkgaW5zdGFuY2VvZiByP2UuX2Nsb3NlZENvbG9yQmF0Y2guYWRkKHQsaSk6ZS5fY2xvc2VkTWF0ZXJpYWxCYXRjaC5hZGQodCxpKTppLmZpbGxNYXRlcmlhbFByb3BlcnR5IGluc3RhbmNlb2Ygcj9lLl9vcGVuQ29sb3JCYXRjaC5hZGQodCxpKTplLl9vcGVuTWF0ZXJpYWxCYXRjaC5hZGQodCxpKSksdm9pZCAwKX12YXIgYz1bXSxkPWZ1bmN0aW9uKHQpe3RoaXMuX3ByaW1pdGl2ZXM9dCx0aGlzLl9keW5hbWljVXBkYXRlcnM9bmV3IGV9O2QucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlLHQpe3RoaXMuX2R5bmFtaWNVcGRhdGVycy5zZXQodC5lbnRpdHkuaWQsdC5jcmVhdGVEeW5hbWljVXBkYXRlcih0aGlzLl9wcmltaXRpdmVzKSl9LGQucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXt2YXIgaT1lLmVudGl0eS5pZCxuPXRoaXMuX2R5bmFtaWNVcGRhdGVycy5nZXQoaSk7dChuKSYmKHRoaXMuX2R5bmFtaWNVcGRhdGVycy5yZW1vdmUoaSksbi5kZXN0cm95KCkpfSxkLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMuX2R5bmFtaWNVcGRhdGVycy52YWx1ZXMsaT0wLG49dC5sZW5ndGg7bj5pO2krKyl0W2ldLnVwZGF0ZShlKTtyZXR1cm4hMH0sZC5wcm90b3R5cGUucmVtb3ZlQWxsUHJpbWl0aXZlcz1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLl9keW5hbWljVXBkYXRlcnMudmFsdWVzLHQ9MCxpPWUubGVuZ3RoO2k+dDt0KyspZVt0XS5kZXN0cm95KCk7dGhpcy5fZHluYW1pY1VwZGF0ZXJzLnJlbW92ZUFsbCgpfTt2YXIgaD1mdW5jdGlvbih0LGksbil7dGhpcy5fdHlwZT10O3ZhciByPWkucHJpbWl0aXZlczt0aGlzLl9zY2VuZT1pLHRoaXMuX3ByaW1pdGl2ZXM9cix0aGlzLl9lbnRpdHlDb2xsZWN0aW9uPXZvaWQgMCx0aGlzLl9hZGRlZE9iamVjdHM9bmV3IGUsdGhpcy5fcmVtb3ZlZE9iamVjdHM9bmV3IGUsdGhpcy5fY2hhbmdlZE9iamVjdHM9bmV3IGUsdGhpcy5fb3V0bGluZUJhdGNoPW5ldyBzKHIpLHRoaXMuX2Nsb3NlZENvbG9yQmF0Y2g9bmV3IG8ocix0LnBlckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlVHlwZSwhMCksdGhpcy5fY2xvc2VkTWF0ZXJpYWxCYXRjaD1uZXcgYShyLHQubWF0ZXJpYWxBcHBlYXJhbmNlVHlwZSwhMCksdGhpcy5fb3BlbkNvbG9yQmF0Y2g9bmV3IG8ocix0LnBlckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlVHlwZSwhMSksdGhpcy5fb3Blbk1hdGVyaWFsQmF0Y2g9bmV3IGEocix0Lm1hdGVyaWFsQXBwZWFyYW5jZVR5cGUsITEpLHRoaXMuX2R5bmFtaWNCYXRjaD1uZXcgZChyKSx0aGlzLl9zdWJzY3JpcHRpb25zPW5ldyBlLHRoaXMuX3VwZGF0ZXJzPW5ldyBlLHRoaXMuX2VudGl0eUNvbGxlY3Rpb249bixuLmNvbGxlY3Rpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIoaC5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyksdGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlZChuLG4uZW50aXRpZXMsYyl9O3JldHVybiBoLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQsaSxuLHIsbz10aGlzLl9hZGRlZE9iamVjdHMsYT1vLnZhbHVlcyxzPXRoaXMuX3JlbW92ZWRPYmplY3RzLGM9cy52YWx1ZXMsZD10aGlzLl9jaGFuZ2VkT2JqZWN0cyxtPWQudmFsdWVzO2Zvcih0PWMubGVuZ3RoLTE7dD4tMTt0LS0paT1jW3RdLG49aS5pZCxyPXRoaXMuX3VwZGF0ZXJzLmdldChuKSxsKHRoaXMsciksci5kZXN0cm95KCksdGhpcy5fdXBkYXRlcnMucmVtb3ZlKG4pLHRoaXMuX3N1YnNjcmlwdGlvbnMuZ2V0KG4pKCksdGhpcy5fc3Vic2NyaXB0aW9ucy5yZW1vdmUobik7Zm9yKHQ9YS5sZW5ndGgtMTt0Pi0xO3QtLSlpPWFbdF0sbj1pLmlkLHI9bmV3IHRoaXMuX3R5cGUoaSx0aGlzLl9zY2VuZSksdGhpcy5fdXBkYXRlcnMuc2V0KG4sciksdSh0aGlzLGUsciksdGhpcy5fc3Vic2NyaXB0aW9ucy5zZXQobixyLmdlb21ldHJ5Q2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKGguX29uR2VvbWV0cnlDaGFuZ2VkLHRoaXMpKTtmb3IodD1tLmxlbmd0aC0xO3Q+LTE7dC0tKWk9bVt0XSxuPWkuaWQscj10aGlzLl91cGRhdGVycy5nZXQobiksbCh0aGlzLHIpLHUodGhpcyxlLHIpO28ucmVtb3ZlQWxsKCkscy5yZW1vdmVBbGwoKSxkLnJlbW92ZUFsbCgpO3ZhciBmPXRoaXMuX291dGxpbmVCYXRjaC51cGRhdGUoZSk7cmV0dXJuIGY9dGhpcy5fY2xvc2VkQ29sb3JCYXRjaC51cGRhdGUoZSkmJmYsZj10aGlzLl9jbG9zZWRNYXRlcmlhbEJhdGNoLnVwZGF0ZShlKSYmZixmPXRoaXMuX29wZW5Db2xvckJhdGNoLnVwZGF0ZShlKSYmZixmPXRoaXMuX29wZW5NYXRlcmlhbEJhdGNoLnVwZGF0ZShlKSYmZixmPXRoaXMuX2R5bmFtaWNCYXRjaC51cGRhdGUoZSkmJmZ9LGgucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGgucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdHlDb2xsZWN0aW9uLmNvbGxlY3Rpb25DaGFuZ2VkLnJlbW92ZUV2ZW50TGlzdGVuZXIoaC5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyksdGhpcy5fYWRkZWRPYmplY3RzLnJlbW92ZUFsbCgpLHRoaXMuX3JlbW92ZWRPYmplY3RzLnJlbW92ZUFsbCgpLHRoaXMuX291dGxpbmVCYXRjaC5yZW1vdmVBbGxQcmltaXRpdmVzKCksdGhpcy5fY2xvc2VkQ29sb3JCYXRjaC5yZW1vdmVBbGxQcmltaXRpdmVzKCksdGhpcy5fY2xvc2VkTWF0ZXJpYWxCYXRjaC5yZW1vdmVBbGxQcmltaXRpdmVzKCksdGhpcy5fb3BlbkNvbG9yQmF0Y2gucmVtb3ZlQWxsUHJpbWl0aXZlcygpLHRoaXMuX29wZW5NYXRlcmlhbEJhdGNoLnJlbW92ZUFsbFByaW1pdGl2ZXMoKSx0aGlzLl9keW5hbWljQmF0Y2gucmVtb3ZlQWxsUHJpbWl0aXZlcygpO2Zvcih2YXIgZT10aGlzLl9zdWJzY3JpcHRpb25zLnZhbHVlcyx0PWUubGVuZ3RoLG49MDt0Pm47bisrKWVbbl0oKTtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9ucy5yZW1vdmVBbGwoKSxpKHRoaXMpfSxoLl9vbkdlb21ldHJ5Q2hhbmdlZD1mdW5jdGlvbihlKXt2YXIgaT10aGlzLl9yZW1vdmVkT2JqZWN0cyxuPXRoaXMuX2NoYW5nZWRPYmplY3RzLHI9ZS5lbnRpdHksbz1yLmlkO3QoaS5nZXQobykpfHx0KG4uZ2V0KG8pKXx8bi5zZXQobyxyKX0saC5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuLHIsbyxhPXRoaXMuX2FkZGVkT2JqZWN0cyxzPXRoaXMuX3JlbW92ZWRPYmplY3RzLGw9dGhpcy5fY2hhbmdlZE9iamVjdHM7Zm9yKG49aS5sZW5ndGgtMTtuPi0xO24tLSlvPWlbbl0scj1vLmlkLGEucmVtb3ZlKHIpfHwocy5zZXQocixvKSxsLnJlbW92ZShyKSk7Zm9yKG49dC5sZW5ndGgtMTtuPi0xO24tLSlvPXRbbl0scj1vLmlkLHMucmVtb3ZlKHIpP2wuc2V0KHIsbyk6YS5zZXQocixvKX0saH0pLGRlZmluZSgiU2NlbmUvTGFiZWwiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTmVhckZhclNjYWxhciIsIi4vQmlsbGJvYXJkIiwiLi9Ib3Jpem9udGFsT3JpZ2luIiwiLi9MYWJlbFN0eWxlIiwiLi9WZXJ0aWNhbE9yaWdpbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaChlKXtlLl9yZWJpbmRBbGxHbHlwaHN8fGUuX3JlcG9zaXRpb25BbGxHbHlwaHN8fGUuX2xhYmVsQ29sbGVjdGlvbi5fbGFiZWxzVG9VcGRhdGUucHVzaChlKSxlLl9yZWJpbmRBbGxHbHlwaHM9ITB9ZnVuY3Rpb24gbShlKXtlLl9yZWJpbmRBbGxHbHlwaHN8fGUuX3JlcG9zaXRpb25BbGxHbHlwaHN8fGUuX2xhYmVsQ29sbGVjdGlvbi5fbGFiZWxzVG9VcGRhdGUucHVzaChlKSxlLl9yZXBvc2l0aW9uQWxsR2x5cGhzPSEwfXZhciBmPWZ1bmN0aW9uKHIsbyl7cj1uKHIsbi5FTVBUWV9PQkpFQ1QpLHRoaXMuX3RleHQ9bihyLnRleHQsIiIpLHRoaXMuX3Nob3c9bihyLnNob3csITApLHRoaXMuX2ZvbnQ9bihyLmZvbnQsIjMwcHggc2Fucy1zZXJpZiIpLHRoaXMuX2ZpbGxDb2xvcj1pLmNsb25lKG4oci5maWxsQ29sb3IsaS5XSElURSkpLHRoaXMuX291dGxpbmVDb2xvcj1pLmNsb25lKG4oci5vdXRsaW5lQ29sb3IsaS5CTEFDSykpLHRoaXMuX291dGxpbmVXaWR0aD1uKHIub3V0bGluZVdpZHRoLDEpLHRoaXMuX3N0eWxlPW4oci5zdHlsZSxjLkZJTEwpLHRoaXMuX3ZlcnRpY2FsT3JpZ2luPW4oci52ZXJ0aWNhbE9yaWdpbixkLkJPVFRPTSksdGhpcy5faG9yaXpvbnRhbE9yaWdpbj1uKHIuaG9yaXpvbnRhbE9yaWdpbix1LkxFRlQpLHRoaXMuX3BpeGVsT2Zmc2V0PWUuY2xvbmUobihyLnBpeGVsT2Zmc2V0LGUuWkVSTyksbmV3IGUpLHRoaXMuX2V5ZU9mZnNldD10LmNsb25lKG4oci5leWVPZmZzZXQsdC5aRVJPKSksdGhpcy5fcG9zaXRpb249dC5jbG9uZShuKHIucG9zaXRpb24sdC5aRVJPKSksdGhpcy5fc2NhbGU9bihyLnNjYWxlLDEpLHRoaXMuX2lkPXIuaWQsdGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZT1yLnRyYW5zbHVjZW5jeUJ5RGlzdGFuY2UsdGhpcy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U9ci5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZSx0aGlzLl9sYWJlbENvbGxlY3Rpb249byx0aGlzLl9nbHlwaHM9W10sdGhpcy5fcmViaW5kQWxsR2x5cGhzPSEwLHRoaXMuX3JlcG9zaXRpb25BbGxHbHlwaHM9ITB9O3JldHVybiBvKGYucHJvdG90eXBlLHtzaG93OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd30sc2V0OmZ1bmN0aW9uKGUpe2lmKHRoaXMuX3Nob3chPT1lKXt0aGlzLl9zaG93PWU7Zm9yKHZhciB0PXRoaXMuX2dseXBocyxpPTAsbj10Lmxlbmd0aDtuPmk7aSsrKXt2YXIgbz10W2ldO3Ioby5iaWxsYm9hcmQpJiYoby5iaWxsYm9hcmQuc2hvdz1lKX19fX0scG9zaXRpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wb3NpdGlvbn0sc2V0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3Bvc2l0aW9uO2lmKCF0LmVxdWFscyhpLGUpKXt0LmNsb25lKGUsaSk7Zm9yKHZhciBuPXRoaXMuX2dseXBocyxvPTAsYT1uLmxlbmd0aDthPm87bysrKXt2YXIgcz1uW29dO3Iocy5iaWxsYm9hcmQpJiYocy5iaWxsYm9hcmQucG9zaXRpb249ZSl9fX19LHRleHQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXh0fSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fdGV4dCE9PWUmJih0aGlzLl90ZXh0PWUsaCh0aGlzKSl9fSxmb250OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9udH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2ZvbnQhPT1lJiYodGhpcy5fZm9udD1lLGgodGhpcykpfX0sZmlsbENvbG9yOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsbENvbG9yfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZmlsbENvbG9yO2kuZXF1YWxzKHQsZSl8fChpLmNsb25lKGUsdCksaCh0aGlzKSl9fSxvdXRsaW5lQ29sb3I6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vdXRsaW5lQ29sb3J9LHNldDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9vdXRsaW5lQ29sb3I7aS5lcXVhbHModCxlKXx8KGkuY2xvbmUoZSx0KSxoKHRoaXMpKX19LG91dGxpbmVXaWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dGxpbmVXaWR0aH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX291dGxpbmVXaWR0aCE9PWUmJih0aGlzLl9vdXRsaW5lV2lkdGg9ZSxoKHRoaXMpKX19LHN0eWxlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3R5bGV9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9zdHlsZSE9PWUmJih0aGlzLl9zdHlsZT1lLGgodGhpcykpfX0scGl4ZWxPZmZzZXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbE9mZnNldH0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuX3BpeGVsT2Zmc2V0O2lmKCFlLmVxdWFscyhpLHQpKXtlLmNsb25lKHQsaSk7Zm9yKHZhciBuPXRoaXMuX2dseXBocyxvPTAsYT1uLmxlbmd0aDthPm87bysrKXt2YXIgcz1uW29dO3Iocy5iaWxsYm9hcmQpJiYocy5iaWxsYm9hcmQucGl4ZWxPZmZzZXQ9dCl9fX19LHRyYW5zbHVjZW5jeUJ5RGlzdGFuY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90cmFuc2x1Y2VuY3lCeURpc3RhbmNlfSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZTtpZighcy5lcXVhbHModCxlKSl7dGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZT1zLmNsb25lKGUsdCk7Zm9yKHZhciBpPXRoaXMuX2dseXBocyxuPTAsbz1pLmxlbmd0aDtvPm47bisrKXt2YXIgYT1pW25dO3IoYS5iaWxsYm9hcmQpJiYoYS5iaWxsYm9hcmQudHJhbnNsdWNlbmN5QnlEaXN0YW5jZT1lKX19fX0scGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZX0sc2V0OmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3BpeGVsT2Zmc2V0U2NhbGVCeURpc3RhbmNlO2lmKCFzLmVxdWFscyh0LGUpKXt0aGlzLl9waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZT1zLmNsb25lKGUsdCk7Zm9yKHZhciBpPXRoaXMuX2dseXBocyxuPTAsbz1pLmxlbmd0aDtvPm47bisrKXt2YXIgYT1pW25dO3IoYS5iaWxsYm9hcmQpJiYoYS5iaWxsYm9hcmQucGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U9ZSl9fX19LGV5ZU9mZnNldDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V5ZU9mZnNldH0sc2V0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2V5ZU9mZnNldDtpZighdC5lcXVhbHMoaSxlKSl7dC5jbG9uZShlLGkpO2Zvcih2YXIgbj10aGlzLl9nbHlwaHMsbz0wLGE9bi5sZW5ndGg7YT5vO28rKyl7dmFyIHM9bltvXTtyKHMuYmlsbGJvYXJkKSYmKHMuYmlsbGJvYXJkLmV5ZU9mZnNldD1lKX19fX0saG9yaXpvbnRhbE9yaWdpbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hvcml6b250YWxPcmlnaW59LHNldDpmdW5jdGlvbihlKXt0aGlzLl9ob3Jpem9udGFsT3JpZ2luIT09ZSYmKHRoaXMuX2hvcml6b250YWxPcmlnaW49ZSxtKHRoaXMpKX19LHZlcnRpY2FsT3JpZ2luOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGljYWxPcmlnaW59LHNldDpmdW5jdGlvbihlKXtpZih0aGlzLl92ZXJ0aWNhbE9yaWdpbiE9PWUpe3RoaXMuX3ZlcnRpY2FsT3JpZ2luPWU7Zm9yKHZhciB0PXRoaXMuX2dseXBocyxpPTAsbj10Lmxlbmd0aDtuPmk7aSsrKXt2YXIgbz10W2ldO3Ioby5iaWxsYm9hcmQpJiYoby5iaWxsYm9hcmQudmVydGljYWxPcmlnaW49ZSl9bSh0aGlzKX19fSxzY2FsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjYWxlfSxzZXQ6ZnVuY3Rpb24oZSl7aWYodGhpcy5fc2NhbGUhPT1lKXt0aGlzLl9zY2FsZT1lO2Zvcih2YXIgdD10aGlzLl9nbHlwaHMsaT0wLG49dC5sZW5ndGg7bj5pO2krKyl7dmFyIG89dFtpXTtyKG8uYmlsbGJvYXJkKSYmKG8uYmlsbGJvYXJkLnNjYWxlPWUpfW0odGhpcyl9fX0saWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH0sc2V0OmZ1bmN0aW9uKGUpe2lmKHRoaXMuX2lkIT09ZSl7dGhpcy5faWQ9ZTtmb3IodmFyIHQ9dGhpcy5fZ2x5cGhzLGk9MCxuPXQubGVuZ3RoO24+aTtpKyspe3ZhciBvPXRbaV07cihvLmJpbGxib2FyZCkmJihvLmJpbGxib2FyZC5pZD1lKX19fX19KSxmLnByb3RvdHlwZS5jb21wdXRlU2NyZWVuU3BhY2VQb3NpdGlvbj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9sYWJlbENvbGxlY3Rpb24saT10Lm1vZGVsTWF0cml4LG49bC5fY29tcHV0ZUFjdHVhbFBvc2l0aW9uKHRoaXMuX3Bvc2l0aW9uLGUuZnJhbWVTdGF0ZSxpKSxyPWwuX2NvbXB1dGVTY3JlZW5TcGFjZVBvc2l0aW9uKGksbix0aGlzLl9leWVPZmZzZXQsdGhpcy5fcGl4ZWxPZmZzZXQsZSk7cmV0dXJuIHIueT1lLmNhbnZhcy5jbGllbnRIZWlnaHQtci55LHJ9LGYucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcz09PW58fHIobikmJnRoaXMuX3Nob3c9PT1uLl9zaG93JiZ0aGlzLl9zY2FsZT09PW4uX3NjYWxlJiZ0aGlzLl9zdHlsZT09PW4uX3N0eWxlJiZ0aGlzLl92ZXJ0aWNhbE9yaWdpbj09PW4uX3ZlcnRpY2FsT3JpZ2luJiZ0aGlzLl9ob3Jpem9udGFsT3JpZ2luPT09bi5faG9yaXpvbnRhbE9yaWdpbiYmdGhpcy5fdGV4dD09PW4uX3RleHQmJnRoaXMuX2ZvbnQ9PT1uLl9mb250JiZ0LmVxdWFscyh0aGlzLl9wb3NpdGlvbixuLl9wb3NpdGlvbikmJmkuZXF1YWxzKHRoaXMuX2ZpbGxDb2xvcixuLl9maWxsQ29sb3IpJiZpLmVxdWFscyh0aGlzLl9vdXRsaW5lQ29sb3Isbi5fb3V0bGluZUNvbG9yKSYmZS5lcXVhbHModGhpcy5fcGl4ZWxPZmZzZXQsbi5fcGl4ZWxPZmZzZXQpJiZ0LmVxdWFscyh0aGlzLl9leWVPZmZzZXQsbi5fZXllT2Zmc2V0KSYmcy5lcXVhbHModGhpcy5fdHJhbnNsdWNlbmN5QnlEaXN0YW5jZSxuLl90cmFuc2x1Y2VuY3lCeURpc3RhbmNlKSYmcy5lcXVhbHModGhpcy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2Usbi5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UpJiZ0aGlzLl9pZD09PW4uX2lkfSxmLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxmfSksZGVmaW5lKCJTY2VuZS9MYWJlbENvbGxlY3Rpb24iLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS93cml0ZVRleHRUb0NhbnZhcyIsIi4vQmlsbGJvYXJkQ29sbGVjdGlvbiIsIi4vSG9yaXpvbnRhbE9yaWdpbiIsIi4vTGFiZWwiLCIuL0xhYmVsU3R5bGUiLCIuL1RleHR1cmVBdGxhcyIsIi4vVmVydGljYWxPcmlnaW4iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBmKCl7dGhpcy50ZXh0dXJlSW5mbz12b2lkIDAsdGhpcy5kaW1lbnNpb25zPXZvaWQgMCx0aGlzLmJpbGxib2FyZD12b2lkIDB9ZnVuY3Rpb24gcChlLHQsaSl7dGhpcy5sYWJlbENvbGxlY3Rpb249ZSx0aGlzLmluZGV4PXQsdGhpcy5kaW1lbnNpb25zPWl9ZnVuY3Rpb24gdihlLHQsaSxuLHIsbyxhKXtyZXR1cm4gRS5mb250PXQsRS5maWxsQ29sb3I9aSxFLnN0cm9rZUNvbG9yPW4sRS5zdHJva2VXaWR0aD1yLEUudGV4dEJhc2VsaW5lPWE9PT1tLkJPVFRPTT8iYm90dG9tIjphPT09bS5UT1A/InRvcCI6Im1pZGRsZSIsRS5maWxsPW89PT1kLkZJTEx8fG89PT1kLkZJTExfQU5EX09VVExJTkUsRS5zdHJva2U9bz09PWQuT1VUTElORXx8bz09PWQuRklMTF9BTkRfT1VUTElORSxzKGUsRSl9ZnVuY3Rpb24gZyhlLHQpe3QudGV4dHVyZUluZm89dm9pZCAwLHQuZGltZW5zaW9ucz12b2lkIDA7dmFyIG49dC5iaWxsYm9hcmQ7aShuKSYmKG4uc2hvdz0hMSxuLmltYWdlPXZvaWQgMCxlLl9zcGFyZUJpbGxib2FyZHMucHVzaChuKSx0LmJpbGxib2FyZD12b2lkIDApfWZ1bmN0aW9uIF8oZSx0LGksbil7ZS5hZGRJbWFnZSh0LGkpLnRoZW4oZnVuY3Rpb24oZSl7bi5pbmRleD1lfSl9ZnVuY3Rpb24geShlLHQpe3ZhciBuLHIsbyxhPXQuX3RleHQscz1hLmxlbmd0aCxsPXQuX2dseXBocyxjPWwubGVuZ3RoO2lmKGM+cylmb3Iocj1zO2M+cjsrK3IpZyhlLGxbcl0pO2wubGVuZ3RoPXM7dmFyIGQ9ZS5fZ2x5cGhUZXh0dXJlQ2FjaGU7Zm9yKG89MDtzPm87KytvKXt2YXIgaD1hLmNoYXJBdChvKSxtPXQuX2ZvbnQseT10Ll9maWxsQ29sb3IsQz10Ll9vdXRsaW5lQ29sb3Isdz10Ll9vdXRsaW5lV2lkdGgsRT10Ll9zdHlsZSxiPXQuX3ZlcnRpY2FsT3JpZ2luLFM9SlNPTi5zdHJpbmdpZnkoW2gsbSx5LnRvUmdiYSgpLEMudG9SZ2JhKCksdywrRSwrYl0pLFQ9ZFtTXTtpZighaShUKSl7dmFyIHg9dihoLG0seSxDLHcsRSxiKTtUPW5ldyBwKGUsLTEseC5kaW1lbnNpb25zKSxkW1NdPVQseC53aWR0aD4wJiZ4LmhlaWdodD4wJiZfKGUuX3RleHR1cmVBdGxhcyxTLHgsVCl9aWYobj1sW29dLGkobik/LTE9PT1ULmluZGV4P2coZSxuKTppKG4udGV4dHVyZUluZm8pJiYobi50ZXh0dXJlSW5mbz12b2lkIDApOihuPW5ldyBmLGxbb109biksbi50ZXh0dXJlSW5mbz1ULG4uZGltZW5zaW9ucz1ULmRpbWVuc2lvbnMsLTEhPT1ULmluZGV4KXt2YXIgQT1uLmJpbGxib2FyZDtpKEEpfHwoQT1lLl9zcGFyZUJpbGxib2FyZHMubGVuZ3RoPjA/ZS5fc3BhcmVCaWxsYm9hcmRzLnBvcCgpOmUuX2JpbGxib2FyZENvbGxlY3Rpb24uYWRkKHtjb2xsZWN0aW9uOmV9KSxuLmJpbGxib2FyZD1BKSxBLnNob3c9dC5fc2hvdyxBLnBvc2l0aW9uPXQuX3Bvc2l0aW9uLEEuZXllT2Zmc2V0PXQuX2V5ZU9mZnNldCxBLnBpeGVsT2Zmc2V0PXQuX3BpeGVsT2Zmc2V0LEEuaG9yaXpvbnRhbE9yaWdpbj11LkxFRlQsQS52ZXJ0aWNhbE9yaWdpbj10Ll92ZXJ0aWNhbE9yaWdpbixBLnNjYWxlPXQuX3NjYWxlLEEucGlja1ByaW1pdGl2ZT10LEEuaWQ9dC5faWQsQS5pbWFnZT1TLEEudHJhbnNsdWNlbmN5QnlEaXN0YW5jZT10Ll90cmFuc2x1Y2VuY3lCeURpc3RhbmNlLEEucGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2U9dC5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2V9fXQuX3JlcG9zaXRpb25BbGxHbHlwaHM9ITB9ZnVuY3Rpb24gQyhlLHQpe3ZhciBuLHIsbz1lLl9nbHlwaHMsYT0wLHM9MCxsPTAsYz1vLmxlbmd0aDtmb3IobD0wO2M+bDsrK2wpbj1vW2xdLHI9bi5kaW1lbnNpb25zLGErPXIud2lkdGgscz1NYXRoLm1heChzLHIuaGVpZ2h0KTt2YXIgZD1lLl9zY2FsZSxoPWUuX2hvcml6b250YWxPcmlnaW4sZj0wO2g9PT11LkNFTlRFUj9mLT1hLzIqZDpoPT09dS5SSUdIVCYmKGYtPWEqZCksYi54PWYqdCxiLnk9MDt2YXIgcD1lLl92ZXJ0aWNhbE9yaWdpbjtmb3IobD0wO2M+bDsrK2wpbj1vW2xdLHI9bi5kaW1lbnNpb25zLHA9PT1tLkJPVFRPTXx8ci5oZWlnaHQ9PT1zP2IueT0tci5kZXNjZW50KmQ6cD09PW0uVE9QP2IueT0tKHMtci5oZWlnaHQpKmQtci5kZXNjZW50KmQ6cD09PW0uQ0VOVEVSJiYoYi55PS0ocy1yLmhlaWdodCkvMipkLXIuZGVzY2VudCpkKSxiLnkqPXQsaShuLmJpbGxib2FyZCkmJm4uYmlsbGJvYXJkLl9zZXRUcmFuc2xhdGUoYiksYi54Kz1yLndpZHRoKmQqdH1mdW5jdGlvbiB3KGUsdCl7Zm9yKHZhciBpPXQuX2dseXBocyxuPTAsbz1pLmxlbmd0aDtvPm47KytuKWcoZSxpW25dKTt0Ll9sYWJlbENvbGxlY3Rpb249dm9pZCAwLHIodCl9dmFyIEU9e30sYj1uZXcgZSxTPWZ1bmN0aW9uKGUpe2U9dChlLHQuRU1QVFlfT0JKRUNUKSx0aGlzLl90ZXh0dXJlQXRsYXM9dm9pZCAwLHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb249bmV3IGwsdGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbi5kZXN0cm95VGV4dHVyZUF0bGFzPSExLHRoaXMuX3NwYXJlQmlsbGJvYXJkcz1bXSx0aGlzLl9nbHlwaFRleHR1cmVDYWNoZT17fSx0aGlzLl9sYWJlbHM9W10sdGhpcy5fbGFiZWxzVG9VcGRhdGU9W10sdGhpcy5fdG90YWxHbHlwaENvdW50PTAsdGhpcy5fcmVzb2x1dGlvblNjYWxlPXZvaWQgMCx0aGlzLm1vZGVsTWF0cml4PWEuY2xvbmUodChlLm1vZGVsTWF0cml4LGEuSURFTlRJVFkpKSx0aGlzLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPXQoZS5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSwhMSl9O3JldHVybiBuKFMucHJvdG90eXBlLHtsZW5ndGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sYWJlbHMubGVuZ3RofX19KSxTLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IGMoZSx0aGlzKTtyZXR1cm4gdGhpcy5fbGFiZWxzLnB1c2godCksdGhpcy5fbGFiZWxzVG9VcGRhdGUucHVzaCh0KSx0fSxTLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7aWYoaShlKSYmZS5fbGFiZWxDb2xsZWN0aW9uPT09dGhpcyl7dmFyIHQ9dGhpcy5fbGFiZWxzLmluZGV4T2YoZSk7aWYoLTEhPT10KXJldHVybiB0aGlzLl9sYWJlbHMuc3BsaWNlKHQsMSksdyh0aGlzLGUpLCEwfXJldHVybiExfSxTLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24oKXtmb3IodmFyIGU9dGhpcy5fbGFiZWxzLHQ9MCxpPWUubGVuZ3RoO2k+dDsrK3Qpdyh0aGlzLGVbdF0pO2UubGVuZ3RoPTB9LFMucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uKGUpe3JldHVybiBpKGUpJiZlLl9sYWJlbENvbGxlY3Rpb249PT10aGlzfSxTLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2xhYmVsc1tlXX0sUy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uO3IubW9kZWxNYXRyaXg9dGhpcy5tb2RlbE1hdHJpeCxyLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPXRoaXMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWUsaSh0aGlzLl90ZXh0dXJlQXRsYXMpfHwodGhpcy5fdGV4dHVyZUF0bGFzPW5ldyBoKHtjb250ZXh0OmV9KSxyLnRleHR1cmVBdGxhcz10aGlzLl90ZXh0dXJlQXRsYXMpO3ZhciBvPWUudW5pZm9ybVN0YXRlLGE9by5yZXNvbHV0aW9uU2NhbGUscz10aGlzLl9yZXNvbHV0aW9uU2NhbGUhPT1hO3RoaXMuX3Jlc29sdXRpb25TY2FsZT1hO3ZhciBsO2w9cz90aGlzLl9sYWJlbHM6dGhpcy5fbGFiZWxzVG9VcGRhdGU7Zm9yKHZhciB1PTAsYz1sLmxlbmd0aDtjPnU7Kyt1KXt2YXIgZD1sW3VdO2lmKCFkLmlzRGVzdHJveWVkKCkpe3ZhciBtPWQuX2dseXBocy5sZW5ndGg7ZC5fcmViaW5kQWxsR2x5cGhzJiYoeSh0aGlzLGQpLGQuX3JlYmluZEFsbEdseXBocz0hMSksKHN8fGQuX3JlcG9zaXRpb25BbGxHbHlwaHMpJiYoQyhkLGEpLGQuX3JlcG9zaXRpb25BbGxHbHlwaHM9ITEpO3ZhciBmPWQuX2dseXBocy5sZW5ndGgtbTt0aGlzLl90b3RhbEdseXBoQ291bnQrPWZ9fXRoaXMuX2xhYmVsc1RvVXBkYXRlLmxlbmd0aD0wLHIudXBkYXRlKGUsdCxuKX0sUy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sUy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbW92ZUFsbCgpLHRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb249dGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbi5kZXN0cm95KCksdGhpcy5fdGV4dHVyZUF0bGFzPXRoaXMuX3RleHR1cmVBdGxhcyYmdGhpcy5fdGV4dHVyZUF0bGFzLmRlc3Ryb3koKSxyKHRoaXMpfSxTfSksZGVmaW5lKCJEYXRhU291cmNlcy9MYWJlbFZpc3VhbGl6ZXIiLFsiLi4vQ29yZS9Bc3NvY2lhdGl2ZUFycmF5IiwiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL05lYXJGYXJTY2FsYXIiLCIuLi9TY2VuZS9Ib3Jpem9udGFsT3JpZ2luIiwiLi4vU2NlbmUvTGFiZWxDb2xsZWN0aW9uIiwiLi4vU2NlbmUvTGFiZWxTdHlsZSIsIi4uL1NjZW5lL1ZlcnRpY2FsT3JpZ2luIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBtKGUsdCxpKXt2YXIgbj1lLl9sYWJlbFZpc3VhbGl6ZXJJbmRleDtpZihyKG4pKXt2YXIgbz10LmdldChuKTtvLnNob3c9ITEsaS5wdXNoKG4pLGUuX2xhYmVsVmlzdWFsaXplckluZGV4PXZvaWQgMH19dmFyIGY9MSxwPSIzMHB4IHNhbnMtc2VyaWYiLHY9Yy5GSUxMLGc9bi5XSElURSxfPW4uQkxBQ0sseT0xLEM9dC5aRVJPLHc9aS5aRVJPLEU9bC5DRU5URVIsYj1kLkNFTlRFUixTPW5ldyBpLFQ9bmV3IG4seD1uZXcgbixBPW5ldyBpLFA9bmV3IHQsTT1uZXcgcyxJPW5ldyBzLEQ9ZnVuY3Rpb24odCxpKXt2YXIgbj1uZXcgdTt0LnByaW1pdGl2ZXMuYWRkKG4pLGkuY29sbGVjdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcihELnByb3RvdHlwZS5fb25Db2xsZWN0aW9uQ2hhbmdlZCx0aGlzKSx0aGlzLl9zY2VuZT10LHRoaXMuX3VudXNlZEluZGV4ZXM9W10sdGhpcy5fbGFiZWxDb2xsZWN0aW9uPW4sdGhpcy5fZW50aXR5Q29sbGVjdGlvbj1pLHRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemU9bmV3IGUsdGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlZChpLGkuZW50aXRpZXMsW10sW10pfTtyZXR1cm4gRC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplLnZhbHVlcyxpPXRoaXMuX3VudXNlZEluZGV4ZXMsbj10aGlzLl9sYWJlbENvbGxlY3Rpb24sbz0wLGE9dC5sZW5ndGg7YT5vO28rKyl7dmFyIHMsbCx1PXRbb10sYz11Ll9sYWJlbCxkPXUuX2xhYmVsVmlzdWFsaXplckluZGV4LEQ9dS5pc0F2YWlsYWJsZShlKSYmaC5nZXRWYWx1ZU9yRGVmYXVsdChjLl9zaG93LGUsITApO2lmKEQmJihTPWguZ2V0VmFsdWVPclVuZGVmaW5lZCh1Ll9wb3NpdGlvbixlLFMpLHM9aC5nZXRWYWx1ZU9yVW5kZWZpbmVkKGMuX3RleHQsZSksRD1yKFMpJiZyKHMpKSxEKXtpZihyKGQpKWw9bi5nZXQoZCk7ZWxzZXt2YXIgTz1pLmxlbmd0aDtPPjA/KGQ9aS5wb3AoKSxsPW4uZ2V0KGQpKTooZD1uLmxlbmd0aCxsPW4uYWRkKCkpLHUuX2xhYmVsVmlzdWFsaXplckluZGV4PWQsbC5pZD11fWwuc2hvdz0hMCxsLnBvc2l0aW9uPVMsbC50ZXh0PXMsbC5zY2FsZT1oLmdldFZhbHVlT3JEZWZhdWx0KGMuX3NjYWxlLGUsZiksbC5mb250PWguZ2V0VmFsdWVPckRlZmF1bHQoYy5fZm9udCxlLHApLGwuc3R5bGU9aC5nZXRWYWx1ZU9yRGVmYXVsdChjLl9zdHlsZSxlLHYpLGwuZmlsbENvbG9yPWguZ2V0VmFsdWVPckRlZmF1bHQoYy5fZmlsbENvbG9yLGUsZyxUKSxsLm91dGxpbmVDb2xvcj1oLmdldFZhbHVlT3JEZWZhdWx0KGMuX291dGxpbmVDb2xvcixlLF8seCksbC5vdXRsaW5lV2lkdGg9aC5nZXRWYWx1ZU9yRGVmYXVsdChjLl9vdXRsaW5lV2lkdGgsZSx5KSxsLnBpeGVsT2Zmc2V0PWguZ2V0VmFsdWVPckRlZmF1bHQoYy5fcGl4ZWxPZmZzZXQsZSxDLFApLGwuZXllT2Zmc2V0PWguZ2V0VmFsdWVPckRlZmF1bHQoYy5fZXllT2Zmc2V0LGUsdyxBKSxsLmhvcml6b250YWxPcmlnaW49aC5nZXRWYWx1ZU9yRGVmYXVsdChjLl9ob3Jpem9udGFsT3JpZ2luLGUsRSksbC52ZXJ0aWNhbE9yaWdpbj1oLmdldFZhbHVlT3JEZWZhdWx0KGMuX3ZlcnRpY2FsT3JpZ2luLGUsYiksbC50cmFuc2x1Y2VuY3lCeURpc3RhbmNlPWguZ2V0VmFsdWVPclVuZGVmaW5lZChjLl90cmFuc2x1Y2VuY3lCeURpc3RhbmNlLGUsTSksbC5waXhlbE9mZnNldFNjYWxlQnlEaXN0YW5jZT1oLmdldFZhbHVlT3JVbmRlZmluZWQoYy5fcGl4ZWxPZmZzZXRTY2FsZUJ5RGlzdGFuY2UsZSxJKX1lbHNlIG0odSxuLGkpfXJldHVybiEwfSxELnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxELnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fZW50aXR5Q29sbGVjdGlvbjtlLmNvbGxlY3Rpb25DaGFuZ2VkLnJlbW92ZUV2ZW50TGlzdGVuZXIoRC5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyk7Zm9yKHZhciB0PWUuZW50aXRpZXMsaT10Lmxlbmd0aCxuPTA7aT5uO24rKyl0W25dLl9sYWJlbFZpc3VhbGl6ZXJJbmRleD12b2lkIDA7cmV0dXJuIHRoaXMuX3NjZW5lLnByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX2xhYmVsQ29sbGVjdGlvbiksbyh0aGlzKX0sRC5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZSx0LGksbil7dmFyIG8sYSxzPXRoaXMuX2xhYmVsQ29sbGVjdGlvbixsPXRoaXMuX3VudXNlZEluZGV4ZXMsdT10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplO2ZvcihvPXQubGVuZ3RoLTE7bz4tMTtvLS0pYT10W29dLHIoYS5fbGFiZWwpJiZyKGEuX3Bvc2l0aW9uKSYmdS5zZXQoYS5pZCxhKTtmb3Iobz1uLmxlbmd0aC0xO28+LTE7by0tKWE9bltvXSxyKGEuX2xhYmVsKSYmcihhLl9wb3NpdGlvbik/dS5zZXQoYS5pZCxhKToobShhLHMsbCksdS5yZW1vdmUoYS5pZCkpO2ZvcihvPWkubGVuZ3RoLTE7bz4tMTtvLS0pYT1pW29dLG0oYSxzLGwpLHUucmVtb3ZlKGEuaWQpfSxEfSksZGVmaW5lKCJDb3JlL2xvYWRBcnJheUJ1ZmZlciIsWyIuL2xvYWRXaXRoWGhyIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQsaSl7cmV0dXJuIGUoe3VybDp0LHJlc3BvbnNlVHlwZToiYXJyYXlidWZmZXIiLGhlYWRlcnM6aX0pfTtyZXR1cm4gdH0pLGRlZmluZSgiQ29yZS9RdWV1ZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oKXt0aGlzLl9hcnJheT1bXSx0aGlzLl9vZmZzZXQ9MCx0aGlzLmxlbmd0aD0wfTtyZXR1cm4gZS5wcm90b3R5cGUuZW5xdWV1ZT1mdW5jdGlvbihlKXt0aGlzLl9hcnJheS5wdXNoKGUpLHRoaXMubGVuZ3RoKyt9LGUucHJvdG90eXBlLmRlcXVldWU9ZnVuY3Rpb24oKXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIHZvaWQgMDt2YXIgZT10aGlzLl9hcnJheSx0PXRoaXMuX29mZnNldCxpPWVbdF07cmV0dXJuIGVbdF09dm9pZCAwLHQrKyx0PjEwJiYyKnQ+ZS5sZW5ndGgmJih0aGlzLl9hcnJheT1lLnNsaWNlKHQpLHQ9MCksdGhpcy5fb2Zmc2V0PXQsdGhpcy5sZW5ndGgtLSxpfSxlLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4tMSE9PXRoaXMuX2FycmF5LmluZGV4T2YoZSl9LGUucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5fYXJyYXkubGVuZ3RoPXRoaXMuX29mZnNldD10aGlzLmxlbmd0aD0wfSxlLnByb3RvdHlwZS5zb3J0PWZ1bmN0aW9uKGUpe3RoaXMuX29mZnNldD4wJiYodGhpcy5fYXJyYXk9dGhpcy5fYXJyYXkuc2xpY2UodGhpcy5fb2Zmc2V0KSx0aGlzLl9vZmZzZXQ9MCksdGhpcy5fYXJyYXkuc29ydChlKX0sZX0pLGRlZmluZSgiVGhpcmRQYXJ0eS9nbHRmRGVmYXVsdHMiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKGkpe3QoaS5hY2Nlc3NvcnMpfHwoaS5hY2Nlc3NvcnM9e30pO3ZhciBuPWkuYWNjZXNzb3JzO2Zvcih2YXIgciBpbiBuKWlmKG4uaGFzT3duUHJvcGVydHkocikpe3ZhciBvPW5bcl07by5ieXRlU3RyaWRlPWUoby5ieXRlU3RyaWRlLDApfX1mdW5jdGlvbiBuKGkpe3QoaS5hbmltYXRpb25zKXx8KGkuYW5pbWF0aW9ucz17fSk7dmFyIG49aS5hbmltYXRpb25zO2Zvcih2YXIgciBpbiBuKWlmKG4uaGFzT3duUHJvcGVydHkocikpe3ZhciBvPW5bcl07dChvLmNoYW5uZWxzKXx8KG8uY2hhbm5lbHM9W10pLHQoby5wYXJhbWV0ZXJzKXx8KG8ucGFyYW1ldGVycz17fSksdChvLnNhbXBsZXJzKXx8KG8uc2FtcGxlcnM9e30pO3ZhciBhPW4uc2FtcGxlcnM7Zm9yKHZhciBzIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShzKSl7dmFyIGw9YVtzXTtsLmludGVycG9sYXRpb249ZShsLmludGVycG9sYXRpb24sIkxJTkVBUiIpfX19ZnVuY3Rpb24gcihpKXt0KGkuYXNzZXQpfHwoaS5hc3NldD17fSksaS5hc3NldC5wcmVtdWx0aXBsaWVkQWxwaGE9ZShpLmFzc2V0LnByZW11bHRpcGxpZWRBbHBoYSwhMSl9ZnVuY3Rpb24gbyhpKXt0KGkuYnVmZmVycyl8fChpLmJ1ZmZlcnM9e30pO3ZhciBuPWkuYnVmZmVycztmb3IodmFyIHIgaW4gbilpZihuLmhhc093blByb3BlcnR5KHIpKXt2YXIgbz1uW3JdO28udHlwZT1lKG8udHlwZSwiYXJyYXlidWZmZXIiKX19ZnVuY3Rpb24gYShlKXt0KGUuYnVmZmVyVmlld3MpfHwoZS5idWZmZXJWaWV3cz17fSl9ZnVuY3Rpb24gcyhlKXt0KGUuY2FtZXJhcyl8fChlLmNhbWVyYXM9e30pfWZ1bmN0aW9uIGwoZSl7dChlLmltYWdlcyl8fChlLmltYWdlcz17fSl9ZnVuY3Rpb24gdShpKXt0KGkubGlnaHRzKXx8KGkubGlnaHRzPXt9KTt2YXIgbj1pLmxpZ2h0cztmb3IodmFyIHIgaW4gbilpZihuLmhhc093blByb3BlcnR5KHIpKXt2YXIgbz1uW3JdO2lmKCJhbWJpZW50Ij09PW8udHlwZSl7dChvLmFtYmllbnQpfHwoby5hbWJpZW50PXt9KTt2YXIgYT1vLmFtYmllbnQ7dChhLmNvbG9yKXx8KGEuY29sb3I9WzEsMSwxXSl9ZWxzZSBpZigiZGlyZWN0aW9uYWwiPT09by50eXBlKXt0KG8uZGlyZWN0aW9uYWwpfHwoby5kaXJlY3Rpb25hbD17fSk7dmFyIHM9by5kaXJlY3Rpb25hbDt0KHMuY29sb3IpfHwocy5jb2xvcj1bMSwxLDFdKX1lbHNlIGlmKCJwb2ludCI9PT1vLnR5cGUpe3Qoby5wb2ludCl8fChvLnBvaW50PXt9KTt2YXIgbD1vLnBvaW50O3QobC5jb2xvcil8fChsLmNvbG9yPVsxLDEsMV0pLGwuY29uc3RhbnRBdHRlbnVhdGlvbj1lKGwuY29uc3RhbnRBdHRlbnVhdGlvbiwxKSxsLmxpbmVhckF0dGVudWF0aW9uPWUobC5saW5lYXJBdHRlbnVhdGlvbiwwKSxsLnF1YWRyYXRpY0F0dGVudWF0aW9uPWUobC5xdWFkcmF0aWNBdHRlbnVhdGlvbiwwKX1lbHNlIGlmKCJzcG90Ij09PW8udHlwZSl7dChvLnNwb3QpfHwoby5zcG90PXt9KTt2YXIgdT1vLnNwb3Q7dCh1LmNvbG9yKXx8KHUuY29sb3I9WzEsMSwxXSksdS5jb25zdGFudEF0dGVudWF0aW9uPWUodS5jb25zdGFudEF0dGVudWF0aW9uLDEpLHUuZmFsbE9mZkFuZ2xlPWUodS5mYWxsT2ZmQW5nbGUsMy4xNDE1OTI2NSksdS5mYWxsT2ZmRXhwb25lbnQ9ZSh1LmZhbGxPZmZFeHBvbmVudCwwKSx1LmxpbmVhckF0dGVudWF0aW9uPWUodS5saW5lYXJBdHRlbnVhdGlvbiwwKSx1LnF1YWRyYXRpY0F0dGVudWF0aW9uPWUodS5xdWFkcmF0aWNBdHRlbnVhdGlvbiwwKX19fWZ1bmN0aW9uIGMoZSl7dChlLm1hdGVyaWFscyl8fChlLm1hdGVyaWFscz17fSk7dmFyIGk9ZS5tYXRlcmlhbHM7Zm9yKHZhciBuIGluIGkpaWYoaS5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIHI9aVtuXS5pbnN0YW5jZVRlY2huaXF1ZTt0KHIudmFsdWVzKXx8KHIudmFsdWVzPXt9KX19ZnVuY3Rpb24gZChpKXt0KGkubWVzaGVzKXx8KGkubWVzaGVzPXt9KTt2YXIgbj1pLm1lc2hlcztmb3IodmFyIHIgaW4gbilpZihuLmhhc093blByb3BlcnR5KHIpKXt2YXIgbz1uW3JdO3Qoby5wcmltaXRpdmVzKXx8KG8ucHJpbWl0aXZlcz1bXSk7Zm9yKHZhciBhPW8ucHJpbWl0aXZlcy5sZW5ndGgscz1hLmxlbmd0aCxsPTA7cz5sOysrbCl7dmFyIHU9YVtsXTt0KHUuYXR0cmlidXRlcyl8fCh1LmF0dHJpYnV0ZXM9e30pLHUucHJpbWl0aXZlPWUodS5wcmltaXRpdmUsV2ViR0xSZW5kZXJpbmdDb250ZXh0LlRSSUFOR0xFUyl9fX1mdW5jdGlvbiBoKGUpe3QoZS5ub2Rlcyl8fChlLm5vZGVzPXt9KTt2YXIgaT1lLm5vZGVzO2Zvcih2YXIgbiBpbiBpKWlmKGkuaGFzT3duUHJvcGVydHkobikpe3ZhciByPWlbbl07dChyLmNoaWxkcmVuKXx8KHIuY2hpbGRyZW49W10pLHQoci5tYXRyaXgpfHwodChyLnRyYW5zbGF0aW9uKSYmdChyLnJvdGF0aW9uKSYmdChyLnNjYWxlKT8odChyLnRyYW5zbGF0aW9uKXx8KHIudHJhbnNsYXRpb249WzAsMCwwXSksdChyLnJvdGF0aW9uKXx8KHIucm90YXRpb249WzEsMCwwLDBdKSx0KHIuc2NhbGUpfHwoci5zY2FsZT1bMSwxLDFdKSk6ci5tYXRyaXg9WzEsMCwwLDAsMCwxLDAsMCwwLDAsMSwwLDAsMCwwLDFdKX19ZnVuY3Rpb24gbShlKXt0KGUucHJvZ3JhbXMpfHwoZS5wcm9ncmFtcz17fSk7dmFyIGk9ZS5wcm9ncmFtcztmb3IodmFyIG4gaW4gaSlpZihpLmhhc093blByb3BlcnR5KG4pKXt2YXIgcj1pW25dO3Qoci5hdHRyaWJ1dGVzKXx8KHIuYXR0cmlidXRlcz1bXSl9fWZ1bmN0aW9uIGYoaSl7dChpLnNhbXBsZXJzKXx8KGkuc2FtcGxlcnM9e30pO3ZhciBuPWkuc2FtcGxlcnM7Zm9yKHZhciByIGluIG4paWYobi5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIG89bltyXTtvLm1hZ0ZpbHRlcj1lKG8ubWFnRmlsdGVyLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5MSU5FQVIpLG8ubWluRmlsdGVyPWUoby5taW5GaWx0ZXIsV2ViR0xSZW5kZXJpbmdDb250ZXh0Lk5FQVJFU1RfTUlQTUFQX0xJTkVBUiksby53cmFwUz1lKG8ud3JhcFMsV2ViR0xSZW5kZXJpbmdDb250ZXh0LlJFUEVBVCksby53cmFwVD1lKG8ud3JhcFQsV2ViR0xSZW5kZXJpbmdDb250ZXh0LlJFUEVBVCl9fWZ1bmN0aW9uIHAoZSl7dChlLnNjZW5lcyl8fChlLnNjZW5lcz17fSk7dmFyIGk9ZS5zY2VuZXM7Zm9yKHZhciBuIGluIGkpaWYoaS5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIHI9aVtuXTt0KHIubm9kZSl8fChyLm5vZGU9W10pfX1mdW5jdGlvbiB2KGUpe3QoZS5zaGFkZXJzKXx8KGUuc2hhZGVycz17fSl9ZnVuY3Rpb24gZyhlKXt0KGUuc2tpbnMpfHwoZS5za2lucz17fSk7dmFyIGk9ZS5za2lucztmb3IodmFyIG4gaW4gaSlpZihpLmhhc093blByb3BlcnR5KG4pKXt2YXIgcj1pW25dO3Qoci5iaW5kU2hhcGVNYXRyaXgpJiYoci5iaW5kU2hhcGVNYXRyaXg9WzEsMCwwLDAsMCwxLDAsMCwwLDAsMSwwLDAsMCwwLDFdKX19ZnVuY3Rpb24gXyhlKXt0KGUuZW5hYmxlKXx8KGUuZW5hYmxlPVtdKSx0KGUuZGlzYWJsZSl8fChlLmRpc2FibGU9W10pfWZ1bmN0aW9uIHkoZSl7dChlLnRlY2huaXF1ZXMpfHwoZS50ZWNobmlxdWVzPXt9KTt2YXIgaT1lLnRlY2huaXF1ZXM7Zm9yKHZhciBuIGluIGkpaWYoaS5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIHI9aVtuXTt0KHIucGFyYW1ldGVycyl8fChyLnBhcmFtZXRlcnM9e30pO3ZhciBvPXIucGFzc2VzO2Zvcih2YXIgYSBpbiBvKWlmKG8uaGFzT3duUHJvcGVydHkoYSkpe3ZhciBzPW9bYV0sbD1zLmluc3RhbmNlUHJvZ3JhbTt0KGwuYXR0cmlidXRlcyl8fChsLmF0dHJpYnV0ZXM9e30pLHQobC51bmlmb3Jtcyl8fChsLnVuaWZvcm1zPXt9KSx0KHMuc3RhdGVzKXx8KHMuc3RhdGVzPXt9KSxfKHMuc3RhdGVzKX19fWZ1bmN0aW9uIEMoaSl7dChpLnRleHR1cmVzKXx8KGkudGV4dHVyZXM9e30pO3ZhciBuPWkudGV4dHVyZXM7Zm9yKHZhciByIGluIG4paWYobi5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIG89bltyXTtvLmZvcm1hdD1lKG8uZm9ybWF0LFdlYkdMUmVuZGVyaW5nQ29udGV4dC5SR0JBKSxvLmludGVybmFsRm9ybWF0PWUoby5pbnRlcm5hbEZvcm1hdCxvLmZvcm1hdCksby50YXJnZXQ9ZShvLnRhcmdldCxXZWJHTFJlbmRlcmluZ0NvbnRleHQuVEVYVFVSRV8yRCksby50eXBlPWUoby50eXBlLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5VTlNJR05FRF9CWVRFKX19dmFyIHc9ZnVuY3Rpb24oXyl7cmV0dXJuIHQoXyk/KHQoXy5hbGxFeHRlbnNpb25zKXx8KF8uYWxsRXh0ZW5zaW9ucz1bXSksaShfKSxuKF8pLHIoXyksbyhfKSxhKF8pLHMoXyksbChfKSx1KF8pLGMoXyksZChfKSxoKF8pLG0oXyksZihfKSxwKF8pLHYoXyksZyhfKSx5KF8pLF8ucHJvZmlsZT1lKF8ucHJvZmlsZSwiV2ViR0wgMS4wLjIiKSxfLnZlcnNpb249ZShfLnZlcnNpb24sIjEuMCIpLEMoXyksXyk6dm9pZCAwfTtyZXR1cm4gd30pLGRlZmluZSgiU2NlbmUvZ2V0TW9kZWxBY2Nlc3NvciIsWyIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtTQ0FMQVI6MSxWRUMyOjIsVkVDMzozLFZFQzQ6NCxNQVQyOjQsTUFUMzo5LE1BVDQ6MTZ9LGk9ZnVuY3Rpb24oaSl7dmFyIG49aS5jb21wb25lbnRUeXBlLHI9dFtpLnR5cGVdO3JldHVybntjb21wb25lbnRzUGVyQXR0cmlidXRlOnIsY3JlYXRlQXJyYXlCdWZmZXJWaWV3OmZ1bmN0aW9uKHQsaSxvKXtyZXR1cm4gZS5jcmVhdGVBcnJheUJ1ZmZlclZpZXcobix0LGkscipvKX19fTtyZXR1cm4gaX0pLGRlZmluZSgiQ29yZS9TcGxpbmUiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0LGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1mdW5jdGlvbigpe3RoaXMudGltZXM9dm9pZCAwLHRoaXMucG9pbnRzPXZvaWQgMCxpLnRocm93SW5zdGFudGlhdGlvbkVycm9yKCl9O3JldHVybiBuLnByb3RvdHlwZS5ldmFsdWF0ZT1pLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG4ucHJvdG90eXBlLmZpbmRUaW1lSW50ZXJ2YWw9ZnVuY3Rpb24odCxpKXt2YXIgbj10aGlzLnRpbWVzLHI9bi5sZW5ndGg7aWYoaT1lKGksMCksdD49bltpXSl7aWYocj5pKzEmJnQ8bltpKzFdKXJldHVybiBpO2lmKHI+aSsyJiZ0PG5baSsyXSlyZXR1cm4gaSsxfWVsc2UgaWYoaS0xPj0wJiZ0Pj1uW2ktMV0pcmV0dXJuIGktMTt2YXIgbztpZih0Pm5baV0pZm9yKG89aTtyLTE+byYmISh0Pj1uW29dJiZ0PG5bbysxXSk7KytvKTtlbHNlIGZvcihvPWktMTtvPj0wJiYhKHQ+PW5bb10mJnQ8bltvKzFdKTstLW8pO3JldHVybiBvPT09ci0xJiYobz1yLTIpLG99LG59KSxkZWZpbmUoIkNvcmUvTGluZWFyU3BsaW5lIixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vU3BsaW5lIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgYT1mdW5jdGlvbihlKXtlPXQoZSx0LkVNUFRZX09CSkVDVCk7dmFyIGk9ZS5wb2ludHMsbj1lLnRpbWVzO3RoaXMuX3RpbWVzPW4sdGhpcy5fcG9pbnRzPWksdGhpcy5fbGFzdFRpbWVJbmRleD0wfTtyZXR1cm4gbihhLnByb3RvdHlwZSx7dGltZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aW1lc319LHBvaW50czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BvaW50c319fSksYS5wcm90b3R5cGUuZmluZFRpbWVJbnRlcnZhbD1vLnByb3RvdHlwZS5maW5kVGltZUludGVydmFsLGEucHJvdG90eXBlLmV2YWx1YXRlPWZ1bmN0aW9uKHQsbil7dmFyIHI9dGhpcy5wb2ludHMsbz10aGlzLnRpbWVzLGE9dGhpcy5fbGFzdFRpbWVJbmRleD10aGlzLmZpbmRUaW1lSW50ZXJ2YWwodCx0aGlzLl9sYXN0VGltZUluZGV4KSxzPSh0LW9bYV0pLyhvW2ErMV0tb1thXSk7cmV0dXJuIGkobil8fChuPW5ldyBlKSxlLmxlcnAoclthXSxyW2ErMV0scyxuKX0sYX0pLGRlZmluZSgiQ29yZS9RdWF0ZXJuaW9uU3BsaW5lIixbIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vUXVhdGVybmlvbiIsIi4vU3BsaW5lIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhKGUsaSxuKXt2YXIgbz1lLmxlbmd0aCxhPW5ldyBBcnJheShvKTthWzBdPXQoaSk/aTplWzBdLGFbby0xXT10KG4pP246ZVtvLTFdO2Zvcih2YXIgcz0xO28tMT5zOysrcylhW3NdPXIuY29tcHV0ZUlubmVyUXVhZHJhbmdsZShlW3MtMV0sZVtzXSxlW3MrMV0sbmV3IHIpO3JldHVybiBhfWZ1bmN0aW9uIHMoZSl7dmFyIGk9ZS5wb2ludHMsbj1lLmlubmVyUXVhZHJhbmdsZXMsbz1lLnRpbWVzO2lmKGkubGVuZ3RoPDMpe3ZhciBhPW9bMF0scz0xLyhvWzFdLWEpLGw9aVswXSx1PWlbMV07cmV0dXJuIGZ1bmN0aW9uKGUsaSl7dChpKXx8KGk9bmV3IHIpO3ZhciBuPShlLWEpKnM7cmV0dXJuIHIuZmFzdFNsZXJwKGwsdSxuLGkpfX1yZXR1cm4gZnVuY3Rpb24oYSxzKXt0KHMpfHwocz1uZXcgcik7dmFyIGw9ZS5fbGFzdFRpbWVJbmRleD1lLmZpbmRUaW1lSW50ZXJ2YWwoYSxlLl9sYXN0VGltZUluZGV4KSx1PShhLW9bbF0pLyhvW2wrMV0tb1tsXSksYz1pW2xdLGQ9aVtsKzFdLGg9bltsXSxtPW5bbCsxXTtyZXR1cm4gci5mYXN0U3F1YWQoYyxkLGgsbSx1LHMpfX12YXIgbD1mdW5jdGlvbih0KXt0PWUodCxlLkVNUFRZX09CSkVDVCk7dmFyIGk9dC5wb2ludHMsbj10LnRpbWVzLHI9dC5maXJzdElubmVyUXVhZHJhbmdsZSxvPXQubGFzdElubmVyUXVhZHJhbmdsZSxsPWEoaSxyLG8pO3RoaXMuX3RpbWVzPW4sdGhpcy5fcG9pbnRzPWksdGhpcy5faW5uZXJRdWFkcmFuZ2xlcz1sLHRoaXMuX2V2YWx1YXRlRnVuY3Rpb249cyh0aGlzKSx0aGlzLl9sYXN0VGltZUluZGV4PTB9O3JldHVybiBpKGwucHJvdG90eXBlLHt0aW1lczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbWVzfX0scG9pbnRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcG9pbnRzfX0saW5uZXJRdWFkcmFuZ2xlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lubmVyUXVhZHJhbmdsZXN9fX0pLGwucHJvdG90eXBlLmZpbmRUaW1lSW50ZXJ2YWw9by5wcm90b3R5cGUuZmluZFRpbWVJbnRlcnZhbCxsLnByb3RvdHlwZS5ldmFsdWF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9ldmFsdWF0ZUZ1bmN0aW9uKGUsdCl9LGx9KSxkZWZpbmUoIlNjZW5lL01vZGVsQW5pbWF0aW9uQ2FjaGUiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9MaW5lYXJTcGxpbmUiLCIuLi9Db3JlL1F1YXRlcm5pb24iLCIuLi9Db3JlL1F1YXRlcm5pb25TcGxpbmUiLCIuL2dldE1vZGVsQWNjZXNzb3IiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGEoZSx0KXt2YXIgaT1lLmdsdGYsbj1pLmJ1ZmZlcnMscj1pLmJ1ZmZlclZpZXdzLGE9clt0LmJ1ZmZlclZpZXddLHM9blthLmJ1ZmZlcl0sbD1hLmJ5dGVPZmZzZXQrdC5ieXRlT2Zmc2V0LHU9dC5jb3VudCpvKHQpLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGU7cmV0dXJuIGUuYmFzZVBhdGgrcy5wYXRoKyI6IitsKyI6Iit1fWZ1bmN0aW9uIHMoZSx0LGkpe3JldHVybiBlLmJhc2VQYXRoKyI6Iit0KyI6IitpfXZhciBsPWZ1bmN0aW9uKCl7fSx1PXt9LGM9bmV3IGU7bC5nZXRBbmltYXRpb25QYXJhbWV0ZXJWYWx1ZXM9ZnVuY3Rpb24oaSxyKXt2YXIgcz1hKGksciksbD11W3NdO2lmKCF0KGwpKXt2YXIgZCxoPWkuX2xvYWRSZXNvdXJjZXMuYnVmZmVycyxtPWkuZ2x0ZixmPW0uYnVmZmVyVmlld3MscD1mW3IuYnVmZmVyVmlld10sdj1yLmNvbXBvbmVudFR5cGUsZz1yLnR5cGUsXz1yLmNvdW50LHk9byhyKS5jcmVhdGVBcnJheUJ1ZmZlclZpZXcoaFtwLmJ1ZmZlcl0scC5ieXRlT2Zmc2V0K3IuYnl0ZU9mZnNldCxfKTtpZih2PT09V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUJiYiU0NBTEFSIj09PWcpbD15O2Vsc2UgaWYodj09PVdlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVCYmIlZFQzMiPT09Zylmb3IobD1uZXcgQXJyYXkoXyksZD0wO18+ZDsrK2QpbFtkXT1lLmZyb21BcnJheSh5LDMqZCk7ZWxzZSBpZih2PT09V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUJiYiVkVDNCI9PT1nKWZvcihsPW5ldyBBcnJheShfKSxkPTA7Xz5kOysrZCl7dmFyIEM9NCpkO2xbZF09bi5mcm9tQXhpc0FuZ2xlKGUuZnJvbUFycmF5KHksQyxjKSx5W0MrM10pfSIiIT09aS5iYXNlUGF0aCYmKHVbc109bCl9cmV0dXJuIGx9O3ZhciBkPXt9LGg9ZnVuY3Rpb24oZSl7dGhpcy5fdmFsdWU9ZX07cmV0dXJuIGgucHJvdG90eXBlLmV2YWx1YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZhbHVlfSxsLmdldEFuaW1hdGlvblNwbGluZT1mdW5jdGlvbihlLG4sbyxhLGwsdSl7dmFyIGM9cyhlLG4sYSksbT1kW2NdO2lmKCF0KG0pKXt2YXIgZj11W2wuaW5wdXRdLHA9ZS5nbHRmLmFjY2Vzc29yc1tvLnBhcmFtZXRlcnNbbC5vdXRwdXRdXSx2PXVbbC5vdXRwdXRdO2lmKDE9PT1mLmxlbmd0aCYmMT09PXYubGVuZ3RoKW09bmV3IGgodlswXSk7ZWxzZXt2YXIgZz1wLmNvbXBvbmVudFR5cGUsXz1wLnR5cGU7IkxJTkVBUiI9PT1sLmludGVycG9sYXRpb24mJihnPT09V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUJiYiVkVDMyI9PT1fP209bmV3IGkoe3RpbWVzOmYscG9pbnRzOnZ9KTpnPT09V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUJiYiVkVDNCI9PT1fJiYobT1uZXcgcih7dGltZXM6Zixwb2ludHM6dn0pKSl9IiIhPT1lLmJhc2VQYXRoJiYoZFtjXT1tKX1yZXR1cm4gbX0sbH0pLGRlZmluZSgiU2NlbmUvTW9kZWxBbmltYXRpb25Mb29wIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtOT05FOjAsUkVQRUFUOjEsTUlSUk9SRURfUkVQRUFUOjJ9O3JldHVybiBlKHQpfSksZGVmaW5lKCJTY2VuZS9Nb2RlbEFuaW1hdGlvblN0YXRlIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3JldHVybiBlKHtTVE9QUEVEOjAsQU5JTUFUSU5HOjF9KX0pLGRlZmluZSgiU2NlbmUvTW9kZWxBbmltYXRpb24iLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0V2ZW50IiwiLi9Nb2RlbEFuaW1hdGlvbkxvb3AiLCIuL01vZGVsQW5pbWF0aW9uU3RhdGUiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LG8sYSl7dGhpcy5fbmFtZT10Lm5hbWUsdGhpcy5fc3RhcnRUaW1lPXQuc3RhcnRUaW1lLHRoaXMuX2RlbGF5PWUodC5kZWxheSwwKSx0aGlzLl9zdG9wVGltZT10LnN0b3BUaW1lLHRoaXMucmVtb3ZlT25TdG9wPWUodC5yZW1vdmVPblN0b3AsITEpLHRoaXMuX3NwZWVkdXA9ZSh0LnNwZWVkdXAsMSksdGhpcy5fcmV2ZXJzZT1lKHQucmV2ZXJzZSwhMSksdGhpcy5fbG9vcD1lKHQubG9vcCxuLk5PTkUpLHRoaXMuc3RhcnQ9bmV3IGksdGhpcy51cGRhdGU9bmV3IGksdGhpcy5zdG9wPW5ldyBpLHRoaXMuX3N0YXRlPXIuU1RPUFBFRCx0aGlzLl9ydW50aW1lQW5pbWF0aW9uPWEsdGhpcy5fc3RhcnRUaW1lPXZvaWQgMCx0aGlzLl9kdXJhdGlvbj12b2lkIDA7dmFyIHM9dGhpczt0aGlzLl9yYWlzZVN0YXJ0RXZlbnQ9ZnVuY3Rpb24oKXtzLnN0YXJ0LnJhaXNlRXZlbnQobyxzKX0sdGhpcy5fdXBkYXRlRXZlbnRUaW1lPTAsdGhpcy5fcmFpc2VVcGRhdGVFdmVudD1mdW5jdGlvbigpe3MudXBkYXRlLnJhaXNlRXZlbnQobyxzLHMuX3VwZGF0ZUV2ZW50VGltZSl9LHRoaXMuX3JhaXNlU3RvcEV2ZW50PWZ1bmN0aW9uKCl7cy5zdG9wLnJhaXNlRXZlbnQobyxzKX19O3JldHVybiB0KG8ucHJvdG90eXBlLHtuYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbmFtZX19LHN0YXJ0VGltZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXJ0VGltZX19LGRlbGF5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsYXl9fSxzdG9wVGltZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0b3BUaW1lfX0sc3BlZWR1cDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NwZWVkdXB9fSxyZXZlcnNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmV2ZXJzZX19LGxvb3A6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb29wfX19KSxvfSksZGVmaW5lKCJTY2VuZS9Nb2RlbEFuaW1hdGlvbkNvbGxlY3Rpb24iLFsiLi4vQ29yZS9jbG9uZSIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL0p1bGlhbkRhdGUiLCIuLi9Db3JlL01hdGgiLCIuL01vZGVsQW5pbWF0aW9uIiwiLi9Nb2RlbEFuaW1hdGlvbkxvb3AiLCIuL01vZGVsQW5pbWF0aW9uU3RhdGUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGUsdCl7Zm9yKHZhciBpPWUuY2hhbm5lbEV2YWx1YXRvcnMsbj1pLmxlbmd0aCxyPTA7bj5yOysrcilpW3JdKHQpfWZ1bmN0aW9uIGgoZSx0LGkpe3JldHVybiBmdW5jdGlvbigpe2UuYW5pbWF0aW9uUmVtb3ZlZC5yYWlzZUV2ZW50KHQsaSl9fXZhciBtPWZ1bmN0aW9uKGUpe3RoaXMuYW5pbWF0aW9uQWRkZWQ9bmV3IG8sdGhpcy5hbmltYXRpb25SZW1vdmVkPW5ldyBvLHRoaXMuX21vZGVsPWUsdGhpcy5fc2NoZWR1bGVkQW5pbWF0aW9ucz1bXSx0aGlzLl9wcmV2aW91c1RpbWU9dm9pZCAwfTtuKG0ucHJvdG90eXBlLHtsZW5ndGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlZHVsZWRBbmltYXRpb25zLmxlbmd0aH19fSksbS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUpe2U9dChlLHQuRU1QVFlfT0JKRUNUKTt2YXIgaT10aGlzLl9tb2RlbCxuPWkuX3J1bnRpbWUuYW5pbWF0aW9ucyxyPW5bZS5uYW1lXSxvPW5ldyBsKGUsaSxyKTtyZXR1cm4gdGhpcy5fc2NoZWR1bGVkQW5pbWF0aW9ucy5wdXNoKG8pLHRoaXMuYW5pbWF0aW9uQWRkZWQucmFpc2VFdmVudChpLG8pLG99LG0ucHJvdG90eXBlLmFkZEFsbD1mdW5jdGlvbihpKXtpPXQoaSx0LkVNUFRZX09CSkVDVCksaT1lKGkpO3ZhciBuPVtdLHI9dGhpcy5fbW9kZWwuZ2x0Zi5hbmltYXRpb25zO2Zvcih2YXIgbyBpbiByKXIuaGFzT3duUHJvcGVydHkobykmJihpLm5hbWU9byxuLnB1c2godGhpcy5hZGQoaSkpKTtyZXR1cm4gbn0sbS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGUpe2lmKGkoZSkpe3ZhciB0PXRoaXMuX3NjaGVkdWxlZEFuaW1hdGlvbnMsbj10LmluZGV4T2YoZSk7aWYoLTEhPT1uKXJldHVybiB0LnNwbGljZShuLDEpLHRoaXMuYW5pbWF0aW9uUmVtb3ZlZC5yYWlzZUV2ZW50KHRoaXMuX21vZGVsLGUpLCEwfXJldHVybiExfSxtLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9tb2RlbCx0PXRoaXMuX3NjaGVkdWxlZEFuaW1hdGlvbnMsaT10Lmxlbmd0aDt0aGlzLl9zY2hlZHVsZWRBbmltYXRpb25zPVtdO2Zvcih2YXIgbj0wO2k+bjsrK24pdGhpcy5hbmltYXRpb25SZW1vdmVkLnJhaXNlRXZlbnQoZSx0W25dKX0sbS5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIGkoZSk/LTEhPT10aGlzLl9zY2hlZHVsZWRBbmltYXRpb25zLmluZGV4T2YoZSk6ITF9LG0ucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc2NoZWR1bGVkQW5pbWF0aW9uc1tlXX07dmFyIGY9W107cmV0dXJuIG0ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZihhLmVxdWFscyhlLnRpbWUsdGhpcy5fcHJldmlvdXNUaW1lKSlyZXR1cm4hMTt0aGlzLl9wcmV2aW91c1RpbWU9YS5jbG9uZShlLnRpbWUsdGhpcy5fcHJldmlvdXNUaW1lKTtmb3IodmFyIG49ITEscj1lLnRpbWUsbz10aGlzLl9tb2RlbCxsPXRoaXMuX3NjaGVkdWxlZEFuaW1hdGlvbnMsbT1sLmxlbmd0aCxwPTA7bT5wOysrcCl7dmFyIHY9bFtwXSxnPXYuX3J1bnRpbWVBbmltYXRpb247aSh2Ll9zdGFydFRpbWUpfHwodi5fc3RhcnRUaW1lPWEuYWRkU2Vjb25kcyh0KHYuc3RhcnRUaW1lLHIpLHYuZGVsYXksbmV3IGEpKSxpKHYuX2R1cmF0aW9uKXx8KHYuX2R1cmF0aW9uPWcuc3RvcFRpbWUqKDEvdi5zcGVlZHVwKSk7dmFyIF89di5fc3RhcnRUaW1lLHk9di5fZHVyYXRpb24sQz12LnN0b3BUaW1lLHc9MCE9PXk/YS5zZWNvbmRzRGlmZmVyZW5jZShyLF8pL3k6MCxFPXc+PTAsYj1FJiYoMT49d3x8di5sb29wPT09dS5SRVBFQVR8fHYubG9vcD09PXUuTUlSUk9SRURfUkVQRUFUKSYmKCFpKEMpfHxhLmxlc3NUaGFuT3JFcXVhbHMocixDKSk7aWYoYil7aWYodi5fc3RhdGU9PT1jLlNUT1BQRUQmJih2Ll9zdGF0ZT1jLkFOSU1BVElORyx2LnN0YXJ0Lm51bWJlck9mTGlzdGVuZXJzPjAmJmUuYWZ0ZXJSZW5kZXIucHVzaCh2Ll9yYWlzZVN0YXJ0RXZlbnQpKSx2Lmxvb3A9PT11LlJFUEVBVCl3LT1NYXRoLmZsb29yKHcpO2Vsc2UgaWYodi5sb29wPT09dS5NSVJST1JFRF9SRVBFQVQpe3ZhciBTPU1hdGguZmxvb3IodyksVD13LVM7dz0xPT09UyUyPzEtVDpUfXYucmV2ZXJzZSYmKHc9MS13KTt2YXIgeD13Knkqdi5zcGVlZHVwO3g9cy5jbGFtcCh4LGcuc3RhcnRUaW1lLGcuc3RvcFRpbWUpLGQoZyx4KSx2LnVwZGF0ZS5udW1iZXJPZkxpc3RlbmVycz4wJiYodi5fdXBkYXRlRXZlbnRUaW1lPXgsZS5hZnRlclJlbmRlci5wdXNoKHYuX3JhaXNlVXBkYXRlRXZlbnQpKSxuPSEwfWVsc2UgRSYmdi5fc3RhdGU9PT1jLkFOSU1BVElORyYmKHYuX3N0YXRlPWMuU1RPUFBFRCx2LnN0b3AubnVtYmVyT2ZMaXN0ZW5lcnM+MCYmZS5hZnRlclJlbmRlci5wdXNoKHYuX3JhaXNlU3RvcEV2ZW50KSx2LnJlbW92ZU9uU3RvcCYmZi5wdXNoKHYpKX1tPWYubGVuZ3RoO2Zvcih2YXIgQT0wO20+QTsrK0Epe3ZhciBQPWZbQV07bC5zcGxpY2UobC5pbmRleE9mKFApLDEpLGUuYWZ0ZXJSZW5kZXIucHVzaChoKHRoaXMsbyxQKSl9cmV0dXJuIGYubGVuZ3RoPTAsbn0sbX0pLGRlZmluZSgiU2NlbmUvTW9kZWxNYXRlcmlhbCIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX25hbWU9dC5uYW1lLHRoaXMuX2lkPWksdGhpcy5fdW5pZm9ybU1hcD1lLl9yZW5kZXJlclJlc291cmNlcy51bmlmb3JtTWFwc1tpXX07cmV0dXJuIHQoaS5wcm90b3R5cGUse25hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9uYW1lfX0saWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH19fSksaS5wcm90b3R5cGUuc2V0VmFsdWU9ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl91bmlmb3JtTWFwLnZhbHVlc1tlXTtpLnZhbHVlPWkuY2xvbmUodCxpLnZhbHVlKX0saS5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24odCl7dmFyIGk9dGhpcy5fdW5pZm9ybU1hcC52YWx1ZXNbdF07cmV0dXJuIGUoaSk/aS52YWx1ZTp2b2lkIDB9LGl9KSxkZWZpbmUoIlNjZW5lL01vZGVsTWVzaCIsWyIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24oZSx0LGkpe2Zvcih2YXIgbj1bXSxyPWUucHJpbWl0aXZlcyxvPXIubGVuZ3RoLGE9MDtvPmE7KythKXt2YXIgcz1yW2FdO25bYV09dFtzLm1hdGVyaWFsXX10aGlzLl9uYW1lPWUubmFtZSx0aGlzLl9tYXRlcmlhbHM9bix0aGlzLl9pZD1pfTtyZXR1cm4gZSh0LnByb3RvdHlwZSx7bmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX25hbWV9fSxpZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkfX0sbWF0ZXJpYWxzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWxzfX19KSx0Cn0pLGRlZmluZSgiU2NlbmUvTW9kZWxOb2RlIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9NYXRyaXg0Il0sZnVuY3Rpb24oZSx0LGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1mdW5jdGlvbih0LG4scixvKXt0aGlzLl9tb2RlbD10LHRoaXMuX3J1bnRpbWVOb2RlPXIsdGhpcy5fbmFtZT1uLm5hbWUsdGhpcy5faWQ9byx0aGlzLnVzZU1hdHJpeD0hMSx0aGlzLl9tYXRyaXg9aS5jbG9uZShlKG4ubWF0cml4LGkuSURFTlRJVFkpKX07cmV0dXJuIHQobi5wcm90b3R5cGUse25hbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9uYW1lfX0saWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH19LG1hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21hdHJpeH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX21hdHJpeD1pLmNsb25lKGUsdGhpcy5fbWF0cml4KSx0aGlzLnVzZU1hdHJpeD0hMDt2YXIgdD10aGlzLl9tb2RlbDt0Ll9jZXNpdW1BbmltYXRpb25zRGlydHk9ITAsdGhpcy5fcnVudGltZU5vZGUuZGlydHlOdW1iZXI9dC5fbWF4RGlydHlOdW1iZXJ9fX0pLG59KSxkZWZpbmUoIlNjZW5lL01vZGVsIixbIi4uL0NvcmUvQm91bmRpbmdTcGhlcmUiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL2NvbWJpbmUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9JbmRleERhdGF0eXBlIiwiLi4vQ29yZS9sb2FkQXJyYXlCdWZmZXIiLCIuLi9Db3JlL2xvYWRJbWFnZSIsIi4uL0NvcmUvbG9hZFRleHQiLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL01hdHJpeDIiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1ByaW1pdGl2ZVR5cGUiLCIuLi9Db3JlL1F1YXRlcm5pb24iLCIuLi9Db3JlL1F1ZXVlIiwiLi4vQ29yZS9SdW50aW1lRXJyb3IiLCIuLi9SZW5kZXJlci9CdWZmZXJVc2FnZSIsIi4uL1JlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kIiwiLi4vUmVuZGVyZXIvVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciIsIi4uL1JlbmRlcmVyL1RleHR1cmVXcmFwIiwiLi4vVGhpcmRQYXJ0eS9nbHRmRGVmYXVsdHMiLCIuLi9UaGlyZFBhcnR5L1VyaSIsIi4vZ2V0TW9kZWxBY2Nlc3NvciIsIi4vTW9kZWxBbmltYXRpb25DYWNoZSIsIi4vTW9kZWxBbmltYXRpb25Db2xsZWN0aW9uIiwiLi9Nb2RlbE1hdGVyaWFsIiwiLi9Nb2RlbE1lc2giLCIuL01vZGVsTm9kZSIsIi4vUGFzcyIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0sSSxELE8sUixMLE4seixCKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gRigpe3RoaXMuYnVmZmVyc1RvQ3JlYXRlPW5ldyB3LHRoaXMuYnVmZmVycz17fSx0aGlzLnBlbmRpbmdCdWZmZXJMb2Fkcz0wLHRoaXMucHJvZ3JhbXNUb0NyZWF0ZT1uZXcgdyx0aGlzLnNoYWRlcnM9e30sdGhpcy5wZW5kaW5nU2hhZGVyTG9hZHM9MCx0aGlzLnRleHR1cmVzVG9DcmVhdGU9bmV3IHcsdGhpcy5wZW5kaW5nVGV4dHVyZUxvYWRzPTAsdGhpcy5jcmVhdGVTYW1wbGVycz0hMCx0aGlzLmNyZWF0ZVNraW5zPSEwLHRoaXMuY3JlYXRlUnVudGltZUFuaW1hdGlvbnM9ITAsdGhpcy5jcmVhdGVWZXJ0ZXhBcnJheXM9ITAsdGhpcy5jcmVhdGVSZW5kZXJTdGF0ZXM9ITAsdGhpcy5jcmVhdGVVbmlmb3JtTWFwcz0hMCx0aGlzLmNyZWF0ZVJ1bnRpbWVOb2Rlcz0hMCx0aGlzLnNraW5uZWROb2Rlc05hbWVzPVtdfWZ1bmN0aW9uIFYoZSx0LGkpe3JldHVybiBlLl9ydW50aW1lW3RdW2ldfWZ1bmN0aW9uIGsoZSl7aWYoYShlLm1hdHJpeCkpcmV0dXJuIF8uZnJvbUFycmF5KGUubWF0cml4KTt2YXIgdD1pLmZyb21BcnJheShlLnJvdGF0aW9uLDAsSHQpO3JldHVybiBfLmZyb21UcmFuc2xhdGlvblF1YXRlcm5pb25Sb3RhdGlvblNjYWxlKGkuZnJvbUFycmF5KGUudHJhbnNsYXRpb24sMCxxdCksQy5mcm9tQXhpc0FuZ2xlKHQsZS5yb3RhdGlvblszXSxqdCksaS5mcm9tQXJyYXkoZS5zY2FsZSwwLFl0KSl9ZnVuY3Rpb24gVSh0KXtmb3IodmFyIG49dC5ub2RlcyxyPXQubWVzaGVzLHM9dC5hY2Nlc3NvcnMsbD10LnNjZW5lc1t0LnNjZW5lXS5ub2Rlcyx1PWwubGVuZ3RoLGM9W10sZD1uZXcgaShOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUsTnVtYmVyLk1BWF9WQUxVRSksaD1uZXcgaShOdW1iZXIuTUlOX1ZBTFVFLE51bWJlci5NSU5fVkFMVUUsTnVtYmVyLk1JTl9WQUxVRSksbT0wO3U+bTsrK20pe3ZhciBmPW5bbFttXV07Zm9yKGYuX3RyYW5zZm9ybVRvUm9vdD1rKGYpLGMucHVzaChmKTtjLmxlbmd0aD4wOyl7Zj1jLnBvcCgpO3ZhciBwPWYuX3RyYW5zZm9ybVRvUm9vdCx2PW8oZi5tZXNoZXMsYShmLmluc3RhbmNlU2tpbik/Zi5pbnN0YW5jZVNraW4ubWVzaGVzOnZvaWQgMCk7aWYoYSh2KSlmb3IodmFyIGc9di5sZW5ndGgseT0wO2c+eTsrK3kpZm9yKHZhciBDPXJbdlt5XV0ucHJpbWl0aXZlcyx3PUMubGVuZ3RoLEU9MDt3PkU7KytFKXt2YXIgYj1DW0VdLmF0dHJpYnV0ZXMuUE9TSVRJT047aWYoYShiKSl7dmFyIFM9c1tiXSxUPWkuZnJvbUFycmF5KFMubWluLDAsWHQpLHg9aS5mcm9tQXJyYXkoUy5tYXgsMCxadCk7YShkKSYmYShoKSYmKF8ubXVsdGlwbHlCeVBvaW50KHAsVCxUKSxfLm11bHRpcGx5QnlQb2ludChwLHgseCksaS5taW5pbXVtQnlDb21wb25lbnQoZCxULGQpLGkubWF4aW11bUJ5Q29tcG9uZW50KGgseCxoKSl9fWZvcih2YXIgQT1mLmNoaWxkcmVuLFA9QS5sZW5ndGgsTT0wO1A+TTsrK00pe3ZhciBJPW5bQVtNXV07SS5fdHJhbnNmb3JtVG9Sb290PWsoSSksXy5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKHAsSS5fdHJhbnNmb3JtVG9Sb290LEkuX3RyYW5zZm9ybVRvUm9vdCksYy5wdXNoKEkpfWRlbGV0ZSBmLl90cmFuc2Zvcm1Ub1Jvb3R9fXZhciBEPWUuZnJvbUNvcm5lclBvaW50cyhkLGgpO3JldHVybiBlLnRyYW5zZm9ybVdpdGhvdXRTY2FsZShELFV0LEQpfWZ1bmN0aW9uIFcoZSx0LGkpe3JldHVybiBmdW5jdGlvbigpe2UuX2xvYWRFcnJvcj1uZXcgRSgiRmFpbGVkIHRvIGxvYWQgZXh0ZXJuYWwgIit0KyI6ICIraSksZS5fc3RhdGU9V3QuRkFJTEVEfX1mdW5jdGlvbiBHKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBuPWUuX2xvYWRSZXNvdXJjZXM7bi5idWZmZXJzW3RdPWksLS1uLnBlbmRpbmdCdWZmZXJMb2Fkc319ZnVuY3Rpb24gSChlKXt2YXIgdD1lLmdsdGYuYnVmZmVycztmb3IodmFyIGkgaW4gdClpZih0Lmhhc093blByb3BlcnR5KGkpKXsrK2UuX2xvYWRSZXNvdXJjZXMucGVuZGluZ0J1ZmZlckxvYWRzO3ZhciBuPXRbaV0scj1uZXcgTShuLnVyaSksbz1yLnJlc29sdmUoZS5fYmFzZVVyaSkudG9TdHJpbmcoKTtoKG8pLnRoZW4oRyhlLGkpKS5vdGhlcndpc2UoVyhlLCJidWZmZXIiLG8pKX19ZnVuY3Rpb24gcShlKXt2YXIgdD1lLmdsdGYuYnVmZmVyVmlld3M7Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmZS5fbG9hZFJlc291cmNlcy5idWZmZXJzVG9DcmVhdGUuZW5xdWV1ZShpKX1mdW5jdGlvbiBqKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBuPWUuX2xvYWRSZXNvdXJjZXM7bi5zaGFkZXJzW3RdPWksLS1uLnBlbmRpbmdTaGFkZXJMb2Fkc319ZnVuY3Rpb24gWShlKXt2YXIgdD1lLmdsdGYuc2hhZGVycztmb3IodmFyIGkgaW4gdClpZih0Lmhhc093blByb3BlcnR5KGkpKXsrK2UuX2xvYWRSZXNvdXJjZXMucGVuZGluZ1NoYWRlckxvYWRzO3ZhciBuPXRbaV0scj1uZXcgTShuLnVyaSksbz1yLnJlc29sdmUoZS5fYmFzZVVyaSkudG9TdHJpbmcoKTtmKG8pLnRoZW4oaihlLGkpKS5vdGhlcndpc2UoVyhlLCJzaGFkZXIiLG8pKX19ZnVuY3Rpb24gWChlKXt2YXIgdD1lLmdsdGYucHJvZ3JhbXM7Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmZS5fbG9hZFJlc291cmNlcy5wcm9ncmFtc1RvQ3JlYXRlLmVucXVldWUoaSl9ZnVuY3Rpb24gWihlLHQpe3JldHVybiBmdW5jdGlvbihpKXt2YXIgbj1lLl9sb2FkUmVzb3VyY2VzOy0tbi5wZW5kaW5nVGV4dHVyZUxvYWRzLG4udGV4dHVyZXNUb0NyZWF0ZS5lbnF1ZXVlKHtuYW1lOnQsaW1hZ2U6aX0pfX1mdW5jdGlvbiBKKGUpe3ZhciB0PWUuZ2x0Zi5pbWFnZXMsaT1lLmdsdGYudGV4dHVyZXM7Zm9yKHZhciBuIGluIGkpaWYoaS5oYXNPd25Qcm9wZXJ0eShuKSl7KytlLl9sb2FkUmVzb3VyY2VzLnBlbmRpbmdUZXh0dXJlTG9hZHM7dmFyIHI9aVtuXSxvPW5ldyBNKHRbci5zb3VyY2VdLnVyaSksYT1vLnJlc29sdmUoZS5fYmFzZVVyaSkudG9TdHJpbmcoKTttKGEpLnRoZW4oWihlLG4pKS5vdGhlcndpc2UoVyhlLCJpbWFnZSIsYSkpfX1mdW5jdGlvbiBLKGUpe3ZhciB0PXt9LGk9e30sbj1bXSxyPWUuX2xvYWRSZXNvdXJjZXMuc2tpbm5lZE5vZGVzTmFtZXMsbz1lLmdsdGYubm9kZXM7Zm9yKHZhciBzIGluIG8paWYoby5oYXNPd25Qcm9wZXJ0eShzKSl7dmFyIGw9b1tzXSx1PXttYXRyaXg6dm9pZCAwLHRyYW5zbGF0aW9uOnZvaWQgMCxyb3RhdGlvbjp2b2lkIDAsc2NhbGU6dm9pZCAwLHRyYW5zZm9ybVRvUm9vdDpuZXcgXyxjb21wdXRlZE1hdHJpeDpuZXcgXyxkaXJ0eU51bWJlcjowLGNvbW1hbmRzOltdLGludmVyc2VCaW5kTWF0cmljZXM6dm9pZCAwLGJpbmRTaGFwZU1hdHJpeDp2b2lkIDAsam9pbnRzOltdLGNvbXB1dGVkSm9pbnRNYXRyaWNlczpbXSxqb2ludE5hbWU6bC5qb2ludE5hbWUsY2hpbGRyZW46W10scGFyZW50czpbXSxwdWJsaWNOb2RlOnZvaWQgMH07dS5wdWJsaWNOb2RlPW5ldyBOKGUsbCx1LHMpLHRbc109dSxpW2wubmFtZV09dSxhKGwuaW5zdGFuY2VTa2luKSYmKHIucHVzaChzKSxuLnB1c2godSkpfWUuX3J1bnRpbWUubm9kZXM9dCxlLl9ydW50aW1lLm5vZGVzQnlOYW1lPWksZS5fcnVudGltZS5za2lubmVkTm9kZXM9bn1mdW5jdGlvbiBRKGUpe3ZhciB0PXt9LGk9e30sbj1lLmdsdGYubWF0ZXJpYWxzLHI9ZS5fcmVuZGVyZXJSZXNvdXJjZXMudW5pZm9ybU1hcHM7Zm9yKHZhciBvIGluIG4paWYobi5oYXNPd25Qcm9wZXJ0eShvKSl7cltvXT17dW5pZm9ybU1hcDp2b2lkIDAsdmFsdWVzOnZvaWQgMCxqb2ludE1hdHJpeFVuaWZvcm1OYW1lOnZvaWQgMH07dmFyIGE9bltvXSxzPW5ldyBSKGUsYSxvKTt0W2EubmFtZV09cyxpW29dPXN9ZS5fcnVudGltZS5tYXRlcmlhbHNCeU5hbWU9dCxlLl9ydW50aW1lLm1hdGVyaWFsc0J5SWQ9aX1mdW5jdGlvbiAkKGUpe3ZhciB0PXt9LGk9ZS5fcnVudGltZS5tYXRlcmlhbHNCeUlkLG49ZS5nbHRmLm1lc2hlcztmb3IodmFyIHIgaW4gbilpZihuLmhhc093blByb3BlcnR5KHIpKXt2YXIgbz1uW3JdO3Rbby5uYW1lXT1uZXcgTChvLGkscil9ZS5fcnVudGltZS5tZXNoZXNCeU5hbWU9dH1mdW5jdGlvbiBldChlKXtIKGUpLHEoZSksWShlKSxYKGUpLEooZSksUShlKSwkKGUpLEsoZSl9ZnVuY3Rpb24gdHQoZSx0KXt2YXIgaT1lLl9sb2FkUmVzb3VyY2VzO2lmKDA9PT1pLnBlbmRpbmdCdWZmZXJMb2Fkcyl7Zm9yKHZhciBuLHIsbz1lLmdsdGYuYnVmZmVyVmlld3Mscz1pLmJ1ZmZlcnMsbD1lLl9yZW5kZXJlclJlc291cmNlcy5idWZmZXJzO2kuYnVmZmVyc1RvQ3JlYXRlLmxlbmd0aD4wOyl7dmFyIHU9aS5idWZmZXJzVG9DcmVhdGUuZGVxdWV1ZSgpO2lmKHI9b1t1XSxyLnRhcmdldD09PVdlYkdMUmVuZGVyaW5nQ29udGV4dC5BUlJBWV9CVUZGRVIpe249bmV3IFVpbnQ4QXJyYXkoc1tyLmJ1ZmZlcl0sci5ieXRlT2Zmc2V0LHIuYnl0ZUxlbmd0aCk7dmFyIGM9dC5jcmVhdGVWZXJ0ZXhCdWZmZXIobixiLlNUQVRJQ19EUkFXKTtjLnZlcnRleEFycmF5RGVzdHJveWFibGU9ITEsbFt1XT1jfX12YXIgZD1lLmdsdGYuYWNjZXNzb3JzO2Zvcih2YXIgaCBpbiBkKWlmKGQuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBtPWRbaF07aWYocj1vW20uYnVmZmVyVmlld10sci50YXJnZXQ9PT1XZWJHTFJlbmRlcmluZ0NvbnRleHQuRUxFTUVOVF9BUlJBWV9CVUZGRVImJiFhKGxbbS5idWZmZXJWaWV3XSkpe249bmV3IFVpbnQ4QXJyYXkoc1tyLmJ1ZmZlcl0sci5ieXRlT2Zmc2V0LHIuYnl0ZUxlbmd0aCk7dmFyIGY9dC5jcmVhdGVJbmRleEJ1ZmZlcihuLGIuU1RBVElDX0RSQVcsbS5jb21wb25lbnRUeXBlKTtmLnZlcnRleEFycmF5RGVzdHJveWFibGU9ITEsbFttLmJ1ZmZlclZpZXddPWZ9fX19ZnVuY3Rpb24gaXQoZSl7Zm9yKHZhciB0PXt9LGk9ZS5sZW5ndGgsbj0wO2k+bjsrK24pdFtlW25dXT1uO3JldHVybiB0fWZ1bmN0aW9uIG50KGUsdCxpKXt2YXIgbj10LmdsdGYucHJvZ3JhbXMscj10Ll9sb2FkUmVzb3VyY2VzLnNoYWRlcnMsbz1uW2VdLGE9aXQoby5hdHRyaWJ1dGVzKSxzPXJbby52ZXJ0ZXhTaGFkZXJdLGw9cltvLmZyYWdtZW50U2hhZGVyXTtpZih0Ll9yZW5kZXJlclJlc291cmNlcy5wcm9ncmFtc1tlXT1pLmNyZWF0ZVNoYWRlclByb2dyYW0ocyxsLGEpLHQuYWxsb3dQaWNraW5nKXt2YXIgdT1TKHtzb3VyY2VzOltsXSxwaWNrQ29sb3JRdWFsaWZpZXI6InVuaWZvcm0ifSk7dC5fcmVuZGVyZXJSZXNvdXJjZXMucGlja1Byb2dyYW1zW2VdPWkuY3JlYXRlU2hhZGVyUHJvZ3JhbShzLHUsYSl9fWZ1bmN0aW9uIHJ0KGUsdCl7dmFyIGksbj1lLl9sb2FkUmVzb3VyY2VzO2lmKDA9PT1uLnBlbmRpbmdTaGFkZXJMb2FkcylpZihlLmFzeW5jaHJvbm91cyluLnByb2dyYW1zVG9DcmVhdGUubGVuZ3RoPjAmJihpPW4ucHJvZ3JhbXNUb0NyZWF0ZS5kZXF1ZXVlKCksbnQoaSxlLHQpKTtlbHNlIGZvcig7bi5wcm9ncmFtc1RvQ3JlYXRlLmxlbmd0aD4wOylpPW4ucHJvZ3JhbXNUb0NyZWF0ZS5kZXF1ZXVlKCksbnQoaSxlLHQpfWZ1bmN0aW9uIG90KGUsdCl7dmFyIGk9ZS5fbG9hZFJlc291cmNlcztpZihpLmNyZWF0ZVNhbXBsZXJzKXtpLmNyZWF0ZVNhbXBsZXJzPSExO3ZhciBuPWUuX3JlbmRlcmVyUmVzb3VyY2VzLnNhbXBsZXJzLHI9ZS5nbHRmLnNhbXBsZXJzO2Zvcih2YXIgbyBpbiByKWlmKHIuaGFzT3duUHJvcGVydHkobykpe3ZhciBhPXJbb107bltvXT10LmNyZWF0ZVNhbXBsZXIoe3dyYXBTOmEud3JhcFMsd3JhcFQ6YS53cmFwVCxtaW5pZmljYXRpb25GaWx0ZXI6YS5taW5GaWx0ZXIsbWFnbmlmaWNhdGlvbkZpbHRlcjphLm1hZ0ZpbHRlcn0pfX19ZnVuY3Rpb24gYXQoZSx0LGkpe3ZhciBuPXQuZ2x0Zi50ZXh0dXJlcyxyPW5bZS5uYW1lXSxvPXQuX3JlbmRlcmVyUmVzb3VyY2VzLnNhbXBsZXJzLGE9b1tyLnNhbXBsZXJdLHM9YS5taW5pZmljYXRpb25GaWx0ZXI9PT14Lk5FQVJFU1RfTUlQTUFQX05FQVJFU1R8fGEubWluaWZpY2F0aW9uRmlsdGVyPT09eC5ORUFSRVNUX01JUE1BUF9MSU5FQVJ8fGEubWluaWZpY2F0aW9uRmlsdGVyPT09eC5MSU5FQVJfTUlQTUFQX05FQVJFU1R8fGEubWluaWZpY2F0aW9uRmlsdGVyPT09eC5MSU5FQVJfTUlQTUFQX0xJTkVBUixsPXN8fGEud3JhcFM9PT1BLlJFUEVBVHx8YS53cmFwUz09PUEuTUlSUk9SRURfUkVQRUFUfHxhLndyYXBUPT09QS5SRVBFQVR8fGEud3JhcFQ9PT1BLk1JUlJPUkVEX1JFUEVBVCx1PWUuaW1hZ2UsYz0hcC5pc1Bvd2VyT2ZUd28odS53aWR0aCl8fCFwLmlzUG93ZXJPZlR3byh1LmhlaWdodCk7aWYobCYmYyl7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7ZC53aWR0aD1wLm5leHRQb3dlck9mVHdvKHUud2lkdGgpLGQuaGVpZ2h0PXAubmV4dFBvd2VyT2ZUd28odS5oZWlnaHQpO3ZhciBoPWQuZ2V0Q29udGV4dCgiMmQiKTtoLmRyYXdJbWFnZSh1LDAsMCx1LndpZHRoLHUuaGVpZ2h0LDAsMCxkLndpZHRoLGQuaGVpZ2h0KSx1PWR9dmFyIG07ci50YXJnZXQ9PT1XZWJHTFJlbmRlcmluZ0NvbnRleHQuVEVYVFVSRV8yRCYmKG09aS5jcmVhdGVUZXh0dXJlMkQoe3NvdXJjZTp1LHBpeGVsRm9ybWF0OnIuaW50ZXJuYWxGb3JtYXQscGl4ZWxEYXRhdHlwZTpyLnR5cGUsZmxpcFk6ITF9KSkscyYmbS5nZW5lcmF0ZU1pcG1hcCgpLG0uc2FtcGxlcj1hLHQuX3JlbmRlcmVyUmVzb3VyY2VzLnRleHR1cmVzW2UubmFtZV09bX1mdW5jdGlvbiBzdChlLHQpe3ZhciBpLG49ZS5fbG9hZFJlc291cmNlcztpZihlLmFzeW5jaHJvbm91cyluLnRleHR1cmVzVG9DcmVhdGUubGVuZ3RoPjAmJihpPW4udGV4dHVyZXNUb0NyZWF0ZS5kZXF1ZXVlKCksYXQoaSxlLHQpKTtlbHNlIGZvcig7bi50ZXh0dXJlc1RvQ3JlYXRlLmxlbmd0aD4wOylpPW4udGV4dHVyZXNUb0NyZWF0ZS5kZXF1ZXVlKCksYXQoaSxlLHQpfWZ1bmN0aW9uIGx0KGUsdCl7dmFyIGk9ZS5nbHRmO2kucHJvZ3JhbXM7dmFyIG49aS50ZWNobmlxdWVzLHI9aS5tYXRlcmlhbHMsbz17fSxhPW5bclt0Lm1hdGVyaWFsXS5pbnN0YW5jZVRlY2huaXF1ZS50ZWNobmlxdWVdLHM9YS5wYXJhbWV0ZXJzLGw9YS5wYXNzZXNbYS5wYXNzXSx1PWwuaW5zdGFuY2VQcm9ncmFtLGM9dS5hdHRyaWJ1dGVzLGQ9ZS5fcmVuZGVyZXJSZXNvdXJjZXMucHJvZ3JhbXNbdS5wcm9ncmFtXS52ZXJ0ZXhBdHRyaWJ1dGVzO2Zvcih2YXIgaCBpbiBjKWlmKGMuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBtPXNbY1toXV07b1ttLnNlbWFudGljXT1kW2hdLmluZGV4fXJldHVybiBvfWZ1bmN0aW9uIHV0KGUsdCl7Zm9yKHZhciBpPWUubGVuZ3RoLG49MDtpPm47KytuKWZvcih2YXIgcj1bZVtuXV07ci5sZW5ndGg+MDspe3ZhciBvPXIucG9wKCk7aWYoby5qb2ludE5hbWU9PT10KXJldHVybiBvO2Zvcih2YXIgYT1vLmNoaWxkcmVuLHM9YS5sZW5ndGgsbD0wO3M+bDsrK2wpci5wdXNoKGFbbF0pfXJldHVybiB2b2lkIDB9ZnVuY3Rpb24gY3QoZSx0KXtmb3IodmFyIGk9ZS5nbHRmLG49aS5za2lucyxyPWkubm9kZXMsbz1lLl9ydW50aW1lLm5vZGVzLGE9ZS5fbG9hZFJlc291cmNlcy5za2lubmVkTm9kZXNOYW1lcyxzPWEubGVuZ3RoLGw9MDtzPmw7KytsKXt2YXIgdT1hW2xdLGM9b1t1XSxkPXJbdV0uaW5zdGFuY2VTa2luLGg9dFtkLnNraW5dO2MuaW52ZXJzZUJpbmRNYXRyaWNlcz1oLmludmVyc2VCaW5kTWF0cmljZXMsYy5iaW5kU2hhcGVNYXRyaXg9aC5iaW5kU2hhcGVNYXRyaXg7Zm9yKHZhciBtPVtdLGY9ZC5za2VsZXRvbnMscD1mLmxlbmd0aCx2PTA7cD52OysrdiltLnB1c2gob1tmW3ZdXSk7Zm9yKHZhciBnPW5bZC5za2luXS5qb2ludE5hbWVzLF89Zy5sZW5ndGgseT0wO18+eTsrK3kpe3ZhciBDPWdbeV07Yy5qb2ludHMucHVzaCh1dChtLEMpKX19fWZ1bmN0aW9uIGR0KGUpe3ZhciB0PWUuX2xvYWRSZXNvdXJjZXM7aWYodC5maW5pc2hlZEJ1ZmZlcnNDcmVhdGlvbigpJiZ0LmNyZWF0ZVNraW5zKXt0LmNyZWF0ZVNraW5zPSExO3ZhciBpPWUuZ2x0ZixuPXQuYnVmZmVycyxyPWkuYWNjZXNzb3JzLG89aS5idWZmZXJWaWV3cyxhPWkuc2tpbnMscz17fTtmb3IodmFyIGwgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGwpKXt2YXIgdT1hW2xdLGM9clt1LmludmVyc2VCaW5kTWF0cmljZXNdLGQ9b1tjLmJ1ZmZlclZpZXddLGg9Yy5jb21wb25lbnRUeXBlLG09Yy50eXBlLGY9Yy5jb3VudCxwPUkoYykuY3JlYXRlQXJyYXlCdWZmZXJWaWV3KG5bZC5idWZmZXJdLGQuYnl0ZU9mZnNldCtjLmJ5dGVPZmZzZXQsZiksdj1uZXcgQXJyYXkoZik7aWYoaD09PVdlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVCYmIk1BVDQiPT09bSlmb3IodmFyIGc9MDtmPmc7KytnKXZbZ109Xy5mcm9tQXJyYXkocCwxNipnKTt2YXIgeTtfLmVxdWFscyh1LmJpbmRTaGFwZU1hdHJpeCxfLklERU5USVRZKXx8KHk9Xy5jbG9uZSh1LmJpbmRTaGFwZU1hdHJpeCkpLHNbbF09e2ludmVyc2VCaW5kTWF0cmljZXM6dixiaW5kU2hhcGVNYXRyaXg6eX19Y3QoZSxzKX19ZnVuY3Rpb24gaHQoZSx0LGksbil7cmV0dXJuIGZ1bmN0aW9uKHIpe3RbaV09bi5ldmFsdWF0ZShyLHRbaV0pLHQuZGlydHlOdW1iZXI9ZS5fbWF4RGlydHlOdW1iZXJ9fWZ1bmN0aW9uIG10KGUpe3ZhciB0PWUuX2xvYWRSZXNvdXJjZXM7aWYodC5maW5pc2hlZFBlbmRpbmdMb2FkcygpJiZ0LmNyZWF0ZVJ1bnRpbWVBbmltYXRpb25zKXt0LmNyZWF0ZVJ1bnRpbWVBbmltYXRpb25zPSExLGUuX3J1bnRpbWUuYW5pbWF0aW9ucz17fTt2YXIgaSxuPWUuX3J1bnRpbWUubm9kZXMscj1lLmdsdGYuYW5pbWF0aW9ucyxvPWUuZ2x0Zi5hY2Nlc3NvcnM7Zm9yKHZhciBhIGluIHIpaWYoci5oYXNPd25Qcm9wZXJ0eShhKSl7dmFyIHM9clthXSxsPXMuY2hhbm5lbHMsdT1zLnBhcmFtZXRlcnMsYz1zLnNhbXBsZXJzLGQ9e307Zm9yKGkgaW4gdSl1Lmhhc093blByb3BlcnR5KGkpJiYoZFtpXT1ELmdldEFuaW1hdGlvblBhcmFtZXRlclZhbHVlcyhlLG9bdVtpXV0pKTtmb3IodmFyIGg9TnVtYmVyLk1BWF9WQUxVRSxtPS1OdW1iZXIuTUFYX1ZBTFVFLGY9bC5sZW5ndGgscD1uZXcgQXJyYXkoZiksdj0wO2Y+djsrK3Ype3ZhciBnPWxbdl0sXz1nLnRhcmdldCx5PWNbZy5zYW1wbGVyXSxDPWRbeS5pbnB1dF07aD1NYXRoLm1pbihoLENbMF0pLG09TWF0aC5tYXgobSxDW0MubGVuZ3RoLTFdKTt2YXIgdz1ELmdldEFuaW1hdGlvblNwbGluZShlLGEscyxnLnNhbXBsZXIseSxkKTtwW3ZdPWh0KGUsbltfLmlkXSxfLnBhdGgsdyl9ZS5fcnVudGltZS5hbmltYXRpb25zW2FdPXtzdGFydFRpbWU6aCxzdG9wVGltZTptLGNoYW5uZWxFdmFsdWF0b3JzOnB9fX19ZnVuY3Rpb24gZnQoZSx0KXt2YXIgaT1lLl9sb2FkUmVzb3VyY2VzO2lmKGkuZmluaXNoZWRCdWZmZXJzQ3JlYXRpb24oKSYmaS5maW5pc2hlZFByb2dyYW1DcmVhdGlvbigpJiZpLmNyZWF0ZVZlcnRleEFycmF5cyl7aS5jcmVhdGVWZXJ0ZXhBcnJheXM9ITE7dmFyIG49ZS5fcmVuZGVyZXJSZXNvdXJjZXMuYnVmZmVycyxyPWUuX3JlbmRlcmVyUmVzb3VyY2VzLnZlcnRleEFycmF5cyxvPWUuZ2x0ZixzPW8uYWNjZXNzb3JzLGw9by5tZXNoZXM7Zm9yKHZhciB1IGluIGwpaWYobC5oYXNPd25Qcm9wZXJ0eSh1KSlmb3IodmFyIGM9bFt1XS5wcmltaXRpdmVzLGQ9Yy5sZW5ndGgsaD0wO2Q+aDsrK2gpe3ZhciBtPWNbaF0sZj1sdChlLG0pLHA9W10sdj1tLmF0dHJpYnV0ZXM7Zm9yKHZhciBnIGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIF89ZltnXTtpZihhKF8pKXt2YXIgeT1zW3ZbZ11dO3AucHVzaCh7aW5kZXg6Xyx2ZXJ0ZXhCdWZmZXI6blt5LmJ1ZmZlclZpZXddLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6SSh5KS5jb21wb25lbnRzUGVyQXR0cmlidXRlLGNvbXBvbmVudERhdGF0eXBlOnkuY29tcG9uZW50VHlwZSxub3JtYWxpemU6ITEsb2Zmc2V0SW5CeXRlczp5LmJ5dGVPZmZzZXQsc3RyaWRlSW5CeXRlczp5LmJ5dGVTdHJpZGV9KX19dmFyIEM9c1ttLmluZGljZXNdLHc9bltDLmJ1ZmZlclZpZXddO3JbdSsiLnByaW1pdGl2ZS4iK2hdPXQuY3JlYXRlVmVydGV4QXJyYXkocCx3KX19fWZ1bmN0aW9uIHB0KGUpe3ZhciB0PXt9O3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LkJMRU5EXT0hMSx0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5DVUxMX0ZBQ0VdPSExLHRbV2ViR0xSZW5kZXJpbmdDb250ZXh0LkRFUFRIX1RFU1RdPSExLHRbV2ViR0xSZW5kZXJpbmdDb250ZXh0LlBPTFlHT05fT0ZGU0VUX0ZJTExdPSExLHRbV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNBTVBMRV9DT1ZFUkFHRV09ITEsdFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuU0NJU1NPUl9URVNUXT0hMTt2YXIgaSxuPWUuZW5hYmxlLHI9bi5sZW5ndGg7Zm9yKGk9MDtyPmk7KytpKXRbbltpXV09ITA7cmV0dXJuIHR9ZnVuY3Rpb24gdnQoZSx0KXt2YXIgaT1lLl9sb2FkUmVzb3VyY2VzO2lmKGkuY3JlYXRlUmVuZGVyU3RhdGVzKXtpLmNyZWF0ZVJlbmRlclN0YXRlcz0hMTt2YXIgbj1lLl9yZW5kZXJlclJlc291cmNlcy5yZW5kZXJTdGF0ZXMscj1lLmdsdGYudGVjaG5pcXVlcztmb3IodmFyIHMgaW4gcilpZihyLmhhc093blByb3BlcnR5KHMpKXt2YXIgbD1yW3NdLHU9bC5wYXNzZXNbbC5wYXNzXSxjPXUuc3RhdGVzLGQ9cHQoYyksaD1vKGMuZnVuY3Rpb25zLG8uRU1QVFlfT0JKRUNUKSxtPW8oaC5ibGVuZENvbG9yLFswLDAsMCwwXSksZj1vKGguYmxlbmRFcXVhdGlvblNlcGFyYXRlLFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuRlVOQ19BREQsV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZVTkNfQUREXSkscD1vKGguYmxlbmRGdW5jU2VwYXJhdGUsW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5PTkUsV2ViR0xSZW5kZXJpbmdDb250ZXh0Lk9ORSxXZWJHTFJlbmRlcmluZ0NvbnRleHQuWkVSTyxXZWJHTFJlbmRlcmluZ0NvbnRleHQuWkVST10pLHY9byhoLmNvbG9yTWFzayxbITAsITAsITAsITBdKSxnPW8oaC5kZXB0aFJhbmdlLFswLDFdKSxfPW8oaC5wb2x5Z29uT2Zmc2V0LFswLDBdKSx5PW8oaC5zYW1wbGVDb3ZlcmFnZSxbMCwwXSksQz1vKGguc2Npc3NvcixbMCwwLDAsMF0pO25bc109dC5jcmVhdGVSZW5kZXJTdGF0ZSh7ZnJvbnRGYWNlOmEoaC5mcm9udEZhY2UpP2guZnJvbnRGYWNlWzBdOldlYkdMUmVuZGVyaW5nQ29udGV4dC5DQ1csY3VsbDp7ZW5hYmxlZDpkW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5DVUxMX0ZBQ0VdLGZhY2U6YShoLmN1bGxGYWNlKT9oLmN1bGxGYWNlWzBdOldlYkdMUmVuZGVyaW5nQ29udGV4dC5CQUNLfSxsaW5lV2lkdGg6YShoLmxpbmVXaWR0aCk/aC5saW5lV2lkdGhbMF06MSxwb2x5Z29uT2Zmc2V0OntlbmFibGVkOmRbV2ViR0xSZW5kZXJpbmdDb250ZXh0LlBPTFlHT05fT0ZGU0VUX0ZJTExdLGZhY3RvcjpfWzBdLHVuaXRzOl9bMV19LHNjaXNzb3JUZXN0OntlbmFibGVkOmRbV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNDSVNTT1JfVEVTVF0scmVjdGFuZ2xlOnt4OkNbMF0seTpDWzFdLHdpZHRoOkNbMl0saGVpZ2h0OkNbM119fSxkZXB0aFJhbmdlOntuZWFyOmdbMF0sZmFyOmdbMV19LGRlcHRoVGVzdDp7ZW5hYmxlZDpkW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5ERVBUSF9URVNUXSxmdW5jOmEoaC5kZXB0aEZ1bmMpP2guZGVwdGhGdW5jWzBdOldlYkdMUmVuZGVyaW5nQ29udGV4dC5MRVNTfSxjb2xvck1hc2s6e3JlZDp2WzBdLGdyZWVuOnZbMV0sYmx1ZTp2WzJdLGFscGhhOnZbM119LGRlcHRoTWFzazphKGguZGVwdGhNYXNrKT9oLmRlcHRoTWFza1swXTohMCxibGVuZGluZzp7ZW5hYmxlZDpkW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CTEVORF0sY29sb3I6e3JlZDptWzBdLGdyZWVuOm1bMV0sYmx1ZTptWzJdLGFscGhhOm1bM119LGVxdWF0aW9uUmdiOmZbMF0sZXF1YXRpb25BbHBoYTpmWzFdLGZ1bmN0aW9uU291cmNlUmdiOnBbMF0sZnVuY3Rpb25Tb3VyY2VBbHBoYTpwWzFdLGZ1bmN0aW9uRGVzdGluYXRpb25SZ2I6cFsyXSxmdW5jdGlvbkRlc3RpbmF0aW9uQWxwaGE6cFszXX0sc2FtcGxlQ292ZXJhZ2U6e2VuYWJsZWQ6ZFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuU0FNUExFX0NPVkVSQUdFXSx2YWx1ZTp5WzBdLGludmVydDp5WzFdfX0pfX19ZnVuY3Rpb24gZ3QoZSl7dmFyIHQ9e3ZhbHVlOmUsY2xvbmU6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGZ1bmM6ZnVuY3Rpb24oKXtyZXR1cm4gdC52YWx1ZX19O3JldHVybiB0fWZ1bmN0aW9uIF90KGUpe3ZhciBpPXt2YWx1ZTp0LmZyb21BcnJheShlKSxjbG9uZTp0LmNsb25lLGZ1bmM6ZnVuY3Rpb24oKXtyZXR1cm4gaS52YWx1ZX19O3JldHVybiBpfWZ1bmN0aW9uIHl0KGUpe3ZhciB0PXt2YWx1ZTppLmZyb21BcnJheShlKSxjbG9uZTppLmNsb25lLGZ1bmM6ZnVuY3Rpb24oKXtyZXR1cm4gdC52YWx1ZX19O3JldHVybiB0fWZ1bmN0aW9uIEN0KGUpe3ZhciB0PXt2YWx1ZTpuLmZyb21BcnJheShlKSxjbG9uZTpuLmNsb25lLGZ1bmM6ZnVuY3Rpb24oKXtyZXR1cm4gdC52YWx1ZX19O3JldHVybiB0fWZ1bmN0aW9uIHd0KGUpe3ZhciB0PXt2YWx1ZTp2LmZyb21Db2x1bW5NYWpvckFycmF5KGUpLGNsb25lOnYuY2xvbmUsZnVuYzpmdW5jdGlvbigpe3JldHVybiB0LnZhbHVlfX07cmV0dXJuIHR9ZnVuY3Rpb24gRXQoZSl7dmFyIHQ9e3ZhbHVlOmcuZnJvbUNvbHVtbk1ham9yQXJyYXkoZSksY2xvbmU6Zy5jbG9uZSxmdW5jOmZ1bmN0aW9uKCl7cmV0dXJuIHQudmFsdWV9fTtyZXR1cm4gdH1mdW5jdGlvbiBidChlKXt2YXIgdD17dmFsdWU6Xy5mcm9tQ29sdW1uTWFqb3JBcnJheShlKSxjbG9uZTpfLmNsb25lLGZ1bmM6ZnVuY3Rpb24oKXtyZXR1cm4gdC52YWx1ZX19O3JldHVybiB0fWZ1bmN0aW9uIFN0KGUsdCl7dmFyIGk9e3ZhbHVlOnQuX3JlbmRlcmVyUmVzb3VyY2VzLnRleHR1cmVzW2VdLGNsb25lOmZ1bmN0aW9uKGUpe3JldHVybiBlfSxmdW5jOmZ1bmN0aW9uKCl7cmV0dXJuIGkudmFsdWV9fTtyZXR1cm4gaX1mdW5jdGlvbiBUdChlLHQpe3ZhciBpPXQuX3J1bnRpbWUubm9kZXNbZV07cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkuY29tcHV0ZWRNYXRyaXh9fWZ1bmN0aW9uIHh0KGUsdCl7dmFyIGk9ZS5fbG9hZFJlc291cmNlcztpZihpLmZpbmlzaGVkVGV4dHVyZUNyZWF0aW9uKCkmJmkuZmluaXNoZWRQcm9ncmFtQ3JlYXRpb24oKSYmaS5jcmVhdGVVbmlmb3JtTWFwcyl7aS5jcmVhdGVVbmlmb3JtTWFwcz0hMTt2YXIgbj1lLmdsdGYscj1uLm1hdGVyaWFscyxvPW4udGVjaG5pcXVlcztuLnByb2dyYW1zO3ZhciBzPWUuX3JlbmRlcmVyUmVzb3VyY2VzLnVuaWZvcm1NYXBzO2Zvcih2YXIgbCBpbiByKWlmKHIuaGFzT3duUHJvcGVydHkobCkpe3ZhciB1PXJbbF0sYz11Lmluc3RhbmNlVGVjaG5pcXVlLGQ9Yy52YWx1ZXMsaD1vW2MudGVjaG5pcXVlXSxtPWgucGFyYW1ldGVycyxmPWgucGFzc2VzW2gucGFzc10scD1mLmluc3RhbmNlUHJvZ3JhbSx2PXAudW5pZm9ybXM7ZS5fcmVuZGVyZXJSZXNvdXJjZXMucHJvZ3JhbXNbcC5wcm9ncmFtXS5hbGxVbmlmb3Jtczt2YXIgZyxfPXt9LHk9e307Zm9yKHZhciBDIGluIHYpaWYodi5oYXNPd25Qcm9wZXJ0eShDKSl7dmFyIHc9dltDXSxFPW1bd107aWYoYShkW3ddKSl7dmFyIGI9S3RbRS50eXBlXShkW3ddLGUpO19bQ109Yi5mdW5jLHlbd109Yn1lbHNlIGlmKGEoRS5zZW1hbnRpYykpIkpPSU5UTUFUUklYIiE9PUUuc2VtYW50aWM/X1tDXT1KdFtFLnNlbWFudGljXSh0LnVuaWZvcm1TdGF0ZSk6Zz1DO2Vsc2UgaWYoYShFLnNvdXJjZSkpX1tDXT1UdChFLnNvdXJjZSxlKTtlbHNlIGlmKGEoRS52YWx1ZSkpe3ZhciBTPUt0W0UudHlwZV0oRS52YWx1ZSxlKTtfW0NdPVMuZnVuYyx5W3ddPVN9fXZhciBUPXNbbF07VC51bmlmb3JtTWFwPV8sVC52YWx1ZXM9eSxULmpvaW50TWF0cml4VW5pZm9ybU5hbWU9Z319fWZ1bmN0aW9uIEF0KGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlfX1mdW5jdGlvbiBQdChlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5jb21wdXRlZEpvaW50TWF0cmljZXN9fWZ1bmN0aW9uIE10KHQsbixzLGwpe2Zvcih2YXIgdT10Ll9yZW5kZXJDb21tYW5kcyxjPXQuX3BpY2tDb21tYW5kcyxoPXQuX3BpY2tJZHMsbT10LmFsbG93UGlja2luZyxmPXQuX3J1bnRpbWUubWVzaGVzQnlOYW1lLHA9dC5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSx2PXQuX3JlbmRlcmVyUmVzb3VyY2VzLGc9di52ZXJ0ZXhBcnJheXMseT12LnByb2dyYW1zLEM9di5waWNrUHJvZ3JhbXMsdz12LnJlbmRlclN0YXRlcyxFPXYudW5pZm9ybU1hcHMsYj10LmdsdGYsUz1iLmFjY2Vzc29ycyx4PWIubWVzaGVzLEE9Yi50ZWNobmlxdWVzLFA9Yi5tYXRlcmlhbHMsTT1hKG4ubWVzaGVzKT9uLm1lc2hlczpuLmluc3RhbmNlU2tpbi5tZXNoZXMsST1NLmxlbmd0aCxEPTA7ST5EOysrRClmb3IodmFyIE89TVtEXSxSPXhbT10sTD1SLnByaW1pdGl2ZXMsTj1MLmxlbmd0aCxCPTA7Tj5COysrQil7dmFyIEYsVj1MW0JdLGs9U1tWLmluZGljZXNdLFU9UFtWLm1hdGVyaWFsXS5pbnN0YW5jZVRlY2huaXF1ZSxXPUFbVS50ZWNobmlxdWVdLEc9Vy5wYXNzZXNbVy5wYXNzXSxIPUcuaW5zdGFuY2VQcm9ncmFtLHE9Vi5hdHRyaWJ1dGVzLlBPU0lUSU9OO2lmKGEocSkpe3ZhciBqPVNbcV07Rj1lLmZyb21Db3JuZXJQb2ludHMoaS5mcm9tQXJyYXkoai5taW4pLGkuZnJvbUFycmF5KGoubWF4KSl9dmFyIFk9Z1tPKyIucHJpbWl0aXZlLiIrQl0sWD1rLmNvdW50LFo9ay5ieXRlT2Zmc2V0L2QuZ2V0U2l6ZUluQnl0ZXMoay5jb21wb25lbnRUeXBlKSxKPUVbVi5tYXRlcmlhbF0sSz1KLnVuaWZvcm1NYXA7aWYoYShKLmpvaW50TWF0cml4VW5pZm9ybU5hbWUpKXt2YXIgUT17fTtRW0ouam9pbnRNYXRyaXhVbmlmb3JtTmFtZV09UHQocyksSz1yKEssUSl9dmFyICQ9d1tVLnRlY2huaXF1ZV0sZXQ9JC5ibGVuZGluZy5lbmFibGVkLHR0PXtwcmltaXRpdmU6byh0LnBpY2tQcmltaXRpdmUsdCksaWQ6dC5pZCxub2RlOnMucHVibGljTm9kZSxtZXNoOmZbUi5uYW1lXX0saXQ9bmV3IFQoe2JvdW5kaW5nVm9sdW1lOm5ldyBlLG1vZGVsTWF0cml4Om5ldyBfLHByaW1pdGl2ZVR5cGU6Vi5wcmltaXRpdmUsdmVydGV4QXJyYXk6WSxjb3VudDpYLG9mZnNldDpaLHNoYWRlclByb2dyYW06eVtILnByb2dyYW1dLHVuaWZvcm1NYXA6SyxyZW5kZXJTdGF0ZTokLG93bmVyOnR0LGRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lOnAscGFzczpldD96LlRSQU5TTFVDRU5UOnouT1BBUVVFfSk7dS5wdXNoKGl0KTt2YXIgbnQ7aWYobSl7dmFyIHJ0PWwuY3JlYXRlUGlja0lkKHR0KTtoLnB1c2gocnQpO3ZhciBvdD1yKEsse2N6bV9waWNrQ29sb3I6QXQocnQuY29sb3IpfSk7bnQ9bmV3IFQoe2JvdW5kaW5nVm9sdW1lOm5ldyBlLG1vZGVsTWF0cml4Om5ldyBfLHByaW1pdGl2ZVR5cGU6Vi5wcmltaXRpdmUsdmVydGV4QXJyYXk6WSxjb3VudDpYLG9mZnNldDpaLHNoYWRlclByb2dyYW06Q1tILnByb2dyYW1dLHVuaWZvcm1NYXA6b3QscmVuZGVyU3RhdGU6JCxvd25lcjp0dCxwYXNzOmV0P3ouVFJBTlNMVUNFTlQ6ei5PUEFRVUV9KSxjLnB1c2gobnQpfXMuY29tbWFuZHMucHVzaCh7Y29tbWFuZDppdCxwaWNrQ29tbWFuZDpudCxib3VuZGluZ1NwaGVyZTpGfSl9fWZ1bmN0aW9uIEl0KGUsdCl7dmFyIG49ZS5fbG9hZFJlc291cmNlcztpZihuLmZpbmlzaGVkUGVuZGluZ0xvYWRzKCkmJm4uZmluaXNoZWRSZXNvdXJjZUNyZWF0aW9uKCkmJm4uY3JlYXRlUnVudGltZU5vZGVzKXtuLmNyZWF0ZVJ1bnRpbWVOb2Rlcz0hMTtmb3IodmFyIHI9W10sbz1lLl9ydW50aW1lLm5vZGVzLHM9ZS5nbHRmLGw9cy5ub2Rlcyx1PXMuc2NlbmVzW3Muc2NlbmVdLGM9dS5ub2RlcyxkPWMubGVuZ3RoLGg9W10sbT1uZXcgaSxmPTA7ZD5mOysrZilmb3IoaC5wdXNoKHtwYXJlbnRSdW50aW1lTm9kZTp2b2lkIDAsZ2x0Zk5vZGU6bFtjW2ZdXSxpZDpjW2ZdfSk7aC5sZW5ndGg+MDspe3ZhciBwPWgucG9wKCksdj1wLnBhcmVudFJ1bnRpbWVOb2RlLGc9cC5nbHRmTm9kZSx5PW9bcC5pZF07MD09PXkucGFyZW50cy5sZW5ndGgmJihhKGcubWF0cml4KT95Lm1hdHJpeD1fLmZyb21Db2x1bW5NYWpvckFycmF5KGcubWF0cml4KToobT1pLmZyb21BcnJheShnLnJvdGF0aW9uLDAsbSkseS50cmFuc2xhdGlvbj1pLmZyb21BcnJheShnLnRyYW5zbGF0aW9uKSx5LnJvdGF0aW9uPUMuZnJvbUF4aXNBbmdsZShtLGcucm90YXRpb25bM10pLHkuc2NhbGU9aS5mcm9tQXJyYXkoZy5zY2FsZSkpKSxhKHYpPyh2LmNoaWxkcmVuLnB1c2goeSkseS5wYXJlbnRzLnB1c2godikpOnIucHVzaCh5KSwoYShnLm1lc2hlcyl8fGEoZy5pbnN0YW5jZVNraW4pKSYmTXQoZSxnLHksdCk7Zm9yKHZhciB3PWcuY2hpbGRyZW4sRT13Lmxlbmd0aCxiPTA7RT5iOysrYiloLnB1c2goe3BhcmVudFJ1bnRpbWVOb2RlOnksZ2x0Zk5vZGU6bFt3W2JdXSxpZDp3W2JdfSl9ZS5fcnVudGltZS5yb290Tm9kZXM9cixlLl9ydW50aW1lLm5vZGVzPW99fWZ1bmN0aW9uIER0KGUsdCl7dHQoZSx0KSxydChlLHQpLG90KGUsdCksc3QoZSx0KSxkdChlKSxtdChlKSxmdChlLHQpLHZ0KGUsdCkseHQoZSx0KSxJdChlLHQpfWZ1bmN0aW9uIE90KGUsdCl7dmFyIGk9ZS5wdWJsaWNOb2RlLG49aS5tYXRyaXg7aS51c2VNYXRyaXgmJmEobik/Xy5jbG9uZShuLHQpOmEoZS5tYXRyaXgpP18uY2xvbmUoZS5tYXRyaXgsdCk6Xy5mcm9tVHJhbnNsYXRpb25RdWF0ZXJuaW9uUm90YXRpb25TY2FsZShlLnRyYW5zbGF0aW9uLGUucm90YXRpb24sZS5zY2FsZSx0KX1mdW5jdGlvbiBSdCh0LGksbil7Zm9yKHZhciByPXQuX21heERpcnR5TnVtYmVyLG89dC5hbGxvd1BpY2tpbmcsYT10Ll9ydW50aW1lLnJvb3ROb2RlcyxzPWEubGVuZ3RoLGw9UXQsdT10Ll9jb21wdXRlZE1vZGVsTWF0cml4LGM9MDtzPmM7KytjKXt2YXIgZD1hW2NdO2ZvcihPdChkLGQudHJhbnNmb3JtVG9Sb290KSxsLnB1c2goZCk7bC5sZW5ndGg+MDspe2Q9bC5wb3AoKTt2YXIgaD1kLnRyYW5zZm9ybVRvUm9vdCxtPWQuY29tbWFuZHM7aWYoZC5kaXJ0eU51bWJlcj09PXJ8fGl8fG4pe3ZhciBmPW0ubGVuZ3RoO2lmKGY+MClmb3IodmFyIHA9MDtmPnA7KytwKXt2YXIgdj1tW3BdLGc9di5jb21tYW5kO2lmKF8ubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbih1LGgsZy5tb2RlbE1hdHJpeCksZS50cmFuc2Zvcm0odi5ib3VuZGluZ1NwaGVyZSxnLm1vZGVsTWF0cml4LGcuYm91bmRpbmdWb2x1bWUpLG8pe3ZhciB5PXYucGlja0NvbW1hbmQ7Xy5jbG9uZShnLm1vZGVsTWF0cml4LHkubW9kZWxNYXRyaXgpLGUuY2xvbmUoZy5ib3VuZGluZ1ZvbHVtZSx5LmJvdW5kaW5nVm9sdW1lKX19ZWxzZSBkLmNvbXB1dGVkTWF0cml4PV8ubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbih1LGgsZC5jb21wdXRlZE1hdHJpeCl9Zm9yKHZhciBDPWQuY2hpbGRyZW4sdz1DLmxlbmd0aCxFPTA7dz5FOysrRSl7dmFyIGI9Q1tFXTtiLmRpcnR5TnVtYmVyPU1hdGgubWF4KGIuZGlydHlOdW1iZXIsZC5kaXJ0eU51bWJlciksKGIuZGlydHlOdW1iZXI9PT1yfHxuKSYmKE90KGIsYi50cmFuc2Zvcm1Ub1Jvb3QpLF8ubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbihoLGIudHJhbnNmb3JtVG9Sb290LGIudHJhbnNmb3JtVG9Sb290KSksbC5wdXNoKGIpfX19Kyt0Ll9tYXhEaXJ0eU51bWJlcn1mdW5jdGlvbiBMdChlKXtmb3IodmFyIHQ9ZS5fcnVudGltZS5za2lubmVkTm9kZXMsaT10Lmxlbmd0aCxuPTA7aT5uOysrbil7dmFyIHI9dFtuXTskdD1fLmludmVyc2VUcmFuc2Zvcm1hdGlvbihyLnRyYW5zZm9ybVRvUm9vdCwkdCk7Zm9yKHZhciBvPXIuY29tcHV0ZWRKb2ludE1hdHJpY2VzLHM9ci5qb2ludHMsbD1yLmJpbmRTaGFwZU1hdHJpeCx1PXIuaW52ZXJzZUJpbmRNYXRyaWNlcyxjPXUubGVuZ3RoLGQ9MDtjPmQ7KytkKWEob1tkXSl8fChvW2RdPW5ldyBfKSxvW2RdPV8ubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbigkdCxzW2RdLnRyYW5zZm9ybVRvUm9vdCxvW2RdKSxvW2RdPV8ubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbihvW2RdLHVbZF0sb1tkXSksYShsKSYmKG9bZF09Xy5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKG9bZF0sbCxvW2RdKSl9fWZ1bmN0aW9uIE50KGUpe3ZhciB0PWUuaWQ7aWYoZS5faWQhPT10KXtlLl9pZD10O2Zvcih2YXIgaT1lLl9waWNrSWRzLG49aS5sZW5ndGgscj0wO24+cjsrK3IpaVtyXS5vYmplY3QuaWQ9dH19ZnVuY3Rpb24genQoZSl7aWYoZS5fZGVidWdXaXJlZnJhbWUhPT1lLmRlYnVnV2lyZWZyYW1lKXtlLl9kZWJ1Z1dpcmVmcmFtZT1lLmRlYnVnV2lyZWZyYW1lO2Zvcih2YXIgdD1lLmRlYnVnV2lyZWZyYW1lP3kuTElORVM6eS5UUklBTkdMRVMsaT1lLl9yZW5kZXJDb21tYW5kcyxuPWkubGVuZ3RoLHI9MDtuPnI7KytyKWlbcl0ucHJpbWl0aXZlVHlwZT10fX1mdW5jdGlvbiBCdChlLHQsbixyKXt2YXIgbz1yLmNhbWVyYSxhPW8uZnJ1c3R1bSxzPWkuc3VidHJhY3Qoby5wb3NpdGlvbldDLGUsdGkpLGw9aS5tdWx0aXBseUJ5U2NhbGFyKG8uZGlyZWN0aW9uV0MsaS5kb3QocyxvLmRpcmVjdGlvbldDKSxpaSksdT1NYXRoLm1heChhLm5lYXIsaS5tYWduaXR1ZGUobCktdCk7ZWkueD1uLmRyYXdpbmdCdWZmZXJXaWR0aCxlaS55PW4uZHJhd2luZ0J1ZmZlckhlaWdodDt2YXIgYz1hLmdldFBpeGVsU2l6ZShlaSx1KSxkPU1hdGgubWF4KGMueCxjLnkpO3JldHVybiBkfWZ1bmN0aW9uIEZ0KGUsdCxpKXt2YXIgbj1lLl9zY2FsZTtpZigwIT09ZS5taW5pbXVtUGl4ZWxTaXplKXt2YXIgcj1NYXRoLm1heCh0LmRyYXdpbmdCdWZmZXJXaWR0aCx0LmRyYXdpbmdCdWZmZXJIZWlnaHQpLG89ZS5tb2RlbE1hdHJpeDtuaS54PW9bMTJdLG5pLnk9b1sxM10sbmkuej1vWzE0XTt2YXIgYT1lLmJvdW5kaW5nU3BoZXJlLnJhZGl1cyxzPUJ0KG5pLGEsdCxpKSxsPTEvcyx1PU1hdGgubWluKGwqMiphLHIpO3U8ZS5taW5pbXVtUGl4ZWxTaXplJiYobj1lLm1pbmltdW1QaXhlbFNpemUqcy8oMiplLl9pbml0aWFsUmFkaXVzKSl9cmV0dXJuIG59ZnVuY3Rpb24gVnQoZSl7Zm9yKHZhciB0IGluIGUpZS5oYXNPd25Qcm9wZXJ0eSh0KSYmZVt0XS5kZXN0cm95KCl9ZnVuY3Rpb24ga3QoZSl7Zm9yKHZhciB0IGluIGUpZS5oYXNPd25Qcm9wZXJ0eSh0KSYmZVt0XS5kZXN0cm95KCl9dmFyIFV0PV8uZnJvbVJvdGF0aW9uVHJhbnNsYXRpb24oZy5mcm9tUm90YXRpb25YKHAuUElfT1ZFUl9UV08pLGkuWkVSTyksV3Q9e05FRURTX0xPQUQ6MCxMT0FESU5HOjEsTE9BREVEOjIsRkFJTEVEOjN9O0YucHJvdG90eXBlLmZpbmlzaGVkUGVuZGluZ0xvYWRzPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLnBlbmRpbmdCdWZmZXJMb2FkcyYmMD09PXRoaXMucGVuZGluZ1NoYWRlckxvYWRzJiYwPT09dGhpcy5wZW5kaW5nVGV4dHVyZUxvYWRzfSxGLnByb3RvdHlwZS5maW5pc2hlZFJlc291cmNlQ3JlYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuYnVmZmVyc1RvQ3JlYXRlLmxlbmd0aCYmMD09PXRoaXMucHJvZ3JhbXNUb0NyZWF0ZS5sZW5ndGgmJjA9PT10aGlzLnRleHR1cmVzVG9DcmVhdGUubGVuZ3RofSxGLnByb3RvdHlwZS5maW5pc2hlZEJ1ZmZlcnNDcmVhdGlvbj1mdW5jdGlvbigpe3JldHVybiAwPT09dGhpcy5wZW5kaW5nQnVmZmVyTG9hZHMmJjA9PT10aGlzLmJ1ZmZlcnNUb0NyZWF0ZS5sZW5ndGh9LEYucHJvdG90eXBlLmZpbmlzaGVkUHJvZ3JhbUNyZWF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLnBlbmRpbmdTaGFkZXJMb2FkcyYmMD09PXRoaXMucHJvZ3JhbXNUb0NyZWF0ZS5sZW5ndGh9LEYucHJvdG90eXBlLmZpbmlzaGVkVGV4dHVyZUNyZWF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLnBlbmRpbmdUZXh0dXJlTG9hZHMmJjA9PT10aGlzLnRleHR1cmVzVG9DcmVhdGUubGVuZ3RofTt2YXIgR3Q9ZnVuY3Rpb24oZSl7ZT1vKGUsby5FTVBUWV9PQkpFQ1QpLHRoaXMuX2dsdGY9UChlLmdsdGYpLHRoaXMuX2Jhc2VQYXRoPW8oZS5iYXNlUGF0aCwiIik7dmFyIHQ9bmV3IE0oZG9jdW1lbnQubG9jYXRpb24uaHJlZiksaT1uZXcgTSh0aGlzLl9iYXNlUGF0aCk7dGhpcy5fYmFzZVVyaT1pLnJlc29sdmUodCksdGhpcy5zaG93PW8oZS5zaG93LCEwKSx0aGlzLm1vZGVsTWF0cml4PV8uY2xvbmUobyhlLm1vZGVsTWF0cml4LF8uSURFTlRJVFkpKSx0aGlzLl9tb2RlbE1hdHJpeD1fLmNsb25lKHRoaXMubW9kZWxNYXRyaXgpLHRoaXMuc2NhbGU9byhlLnNjYWxlLDEpLHRoaXMuX3NjYWxlPXRoaXMuc2NhbGUsdGhpcy5taW5pbXVtUGl4ZWxTaXplPW8oZS5taW5pbXVtUGl4ZWxTaXplLDApLHRoaXMuX21pbmltdW1QaXhlbFNpemU9dGhpcy5taW5pbXVtUGl4ZWxTaXplLHRoaXMuaWQ9ZS5pZCx0aGlzLl9pZD1lLmlkLHRoaXMucGlja1ByaW1pdGl2ZT1lLnBpY2tQcmltaXRpdmUsdGhpcy5fYWxsb3dQaWNraW5nPW8oZS5hbGxvd1BpY2tpbmcsITApLHRoaXMucmVhZHlUb1JlbmRlcj1uZXcgYyx0aGlzLl9yZWFkeT0hMSx0aGlzLmFjdGl2ZUFuaW1hdGlvbnM9bmV3IE8odGhpcyksdGhpcy5fYXN5bmNocm9ub3VzPW8oZS5hc3luY2hyb25vdXMsITApLHRoaXMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWU9byhlLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lLCExKSx0aGlzLmRlYnVnV2lyZWZyYW1lPW8oZS5kZWJ1Z1dpcmVmcmFtZSwhMSksdGhpcy5fZGVidWdXaXJlZnJhbWU9ITEsdGhpcy5fY29tcHV0ZWRNb2RlbE1hdHJpeD1uZXcgXyx0aGlzLl9pbml0aWFsUmFkaXVzPXZvaWQgMCx0aGlzLl9ib3VuZGluZ1NwaGVyZT12b2lkIDAsdGhpcy5fc3RhdGU9V3QuTkVFRFNfTE9BRCx0aGlzLl9sb2FkRXJyb3I9dm9pZCAwLHRoaXMuX2xvYWRSZXNvdXJjZXM9dm9pZCAwLHRoaXMuX2Nlc2l1bUFuaW1hdGlvbnNEaXJ0eT0hMSx0aGlzLl9tYXhEaXJ0eU51bWJlcj0wLHRoaXMuX3J1bnRpbWU9e2FuaW1hdGlvbnM6dm9pZCAwLHJvb3ROb2Rlczp2b2lkIDAsbm9kZXM6dm9pZCAwLG5vZGVzQnlOYW1lOnZvaWQgMCxza2lubmVkTm9kZXM6dm9pZCAwLG1lc2hlc0J5TmFtZTp2b2lkIDAsbWF0ZXJpYWxzQnlOYW1lOnZvaWQgMCxtYXRlcmlhbHNCeUlkOnZvaWQgMH0sdGhpcy5fcmVuZGVyZXJSZXNvdXJjZXM9e2J1ZmZlcnM6e30sdmVydGV4QXJyYXlzOnt9LHByb2dyYW1zOnt9LHBpY2tQcm9ncmFtczp7fSx0ZXh0dXJlczp7fSxzYW1wbGVyczp7fSxyZW5kZXJTdGF0ZXM6e30sdW5pZm9ybU1hcHM6e319LHRoaXMuX3JlbmRlckNvbW1hbmRzPVtdLHRoaXMuX3BpY2tDb21tYW5kcz1bXSx0aGlzLl9waWNrSWRzPVtdfTtzKEd0LnByb3RvdHlwZSx7Z2x0Zjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dsdGZ9fSxiYXNlUGF0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Jhc2VQYXRofX0sYm91bmRpbmdTcGhlcmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ib3VuZGluZ1NwaGVyZS5yYWRpdXM9dGhpcy5zY2FsZSpfLmdldE1heGltdW1TY2FsZSh0aGlzLm1vZGVsTWF0cml4KSp0aGlzLl9pbml0aWFsUmFkaXVzLHRoaXMuX2JvdW5kaW5nU3BoZXJlfX0scmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkeX19LGFzeW5jaHJvbm91czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FzeW5jaHJvbm91c319LGFsbG93UGlja2luZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FsbG93UGlja2luZ319fSksR3QuZnJvbUdsdGY9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS51cmwsaT0iIixuPXQubGFzdEluZGV4T2YoIi8iKTstMSE9PW4mJihpPXQuc3Vic3RyaW5nKDAsbisxKSk7dmFyIHI9bmV3IEd0KGUpO3JldHVybiBmKHQsZS5oZWFkZXJzKS50aGVuKGZ1bmN0aW9uKGUpe3IuX2dsdGY9UChKU09OLnBhcnNlKGUpKSxyLl9iYXNlUGF0aD1pO3ZhciB0PW5ldyBNKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpLG49bmV3IE0oci5fYmFzZVBhdGgpO3IuX2Jhc2VVcmk9bi5yZXNvbHZlKHQpfSkub3RoZXJ3aXNlKFcociwiZ2x0ZiIsdCkpLHJ9LEd0LnByb3RvdHlwZS5nZXROb2RlPWZ1bmN0aW9uKGUpe3ZhciB0PVYodGhpcywibm9kZXNCeU5hbWUiLGUpO3JldHVybiBhKHQpP3QucHVibGljTm9kZTp2b2lkIDB9LEd0LnByb3RvdHlwZS5nZXRNZXNoPWZ1bmN0aW9uKGUpe3JldHVybiBWKHRoaXMsIm1lc2hlc0J5TmFtZSIsZSl9LEd0LnByb3RvdHlwZS5nZXRNYXRlcmlhbD1mdW5jdGlvbihlKXtyZXR1cm4gVih0aGlzLCJtYXRlcmlhbHNCeU5hbWUiLGUpfTt2YXIgSHQ9bmV3IGkscXQ9bmV3IGksanQ9bmV3IEMsWXQ9bmV3IGksWHQ9bmV3IGksWnQ9bmV3IGksSnQ9e01PREVMOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLm1vZGVsfX0sVklFVzpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS52aWV3fX0sUFJPSkVDVElPTjpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5wcm9qZWN0aW9ufX0sTU9ERUxWSUVXOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLm1vZGVsVmlld319LE1PREVMVklFV1BST0pFQ1RJT046ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUubW9kZWxWaWV3UHJvamVjdGlvbn19LE1PREVMSU5WRVJTRTpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5pbnZlcnNlTW9kZWx9fSxWSUVXSU5WRVJTRTpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5pbnZlcnNlVmlld319LFBST0pFQ1RJT05JTlZFUlNFOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmludmVyc2VQcm9qZWN0aW9ufX0sTU9ERUxWSUVXSU5WRVJTRTpmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5pbnZlcnNlTW9kZWxWaWV3fX0sTU9ERUxWSUVXUFJPSkVDVElPTklOVkVSU0U6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuaW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb259fSxNT0RFTElOVkVSU0VUUkFOU1BPU0U6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuaW52ZXJzZVRyYW5wb3NlTW9kZWx9fSxNT0RFTFZJRVdJTlZFUlNFVFJBTlNQT1NFOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLm5vcm1hbH19LFZJRVdQT1JUOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLnZpZXdwb3J0Q2FydGVzaWFuNH19fSxLdD17fTsidW5kZWZpbmVkIiE9dHlwZW9mIFdlYkdMUmVuZGVyaW5nQ29udGV4dCYmKEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF09Z3QsS3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzJdPV90LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9WRUMzXT15dCxLdFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDNF09Q3QsS3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LklOVF09Z3QsS3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LklOVF9WRUMyXT1fdCxLdFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuSU5UX1ZFQzNdPXl0LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5JTlRfVkVDNF09Q3QsS3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LkJPT0xdPWd0LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CT09MX1ZFQzJdPV90LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CT09MX1ZFQzNdPXl0LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CT09MX1ZFQzRdPUN0LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQyXT13dCxLdFtXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUM109RXQsS3RbV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDRdPWJ0LEt0W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5TQU1QTEVSXzJEXT1TdCk7dmFyIFF0PVtdLCR0PW5ldyBfLGVpPW5ldyB0LHRpPW5ldyBpLGlpPW5ldyBpLG5pPW5ldyBpO3JldHVybiBHdC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxpKXtpZih0Lm1vZGU9PT1CLlNDRU5FM0Qpe3RoaXMuX3N0YXRlPT09V3QuTkVFRFNfTE9BRCYmYSh0aGlzLmdsdGYpJiYodGhpcy5fc3RhdGU9V3QuTE9BRElORyx0aGlzLl9ib3VuZGluZ1NwaGVyZT1VKHRoaXMuZ2x0ZiksdGhpcy5faW5pdGlhbFJhZGl1cz10aGlzLl9ib3VuZGluZ1NwaGVyZS5yYWRpdXMsdGhpcy5fbG9hZFJlc291cmNlcz1uZXcgRixldCh0aGlzKSk7dmFyIG49ITE7aWYodGhpcy5fc3RhdGU9PT1XdC5GQUlMRUQpdGhyb3cgdGhpcy5fbG9hZEVycm9yO2lmKHRoaXMuX3N0YXRlPT09V3QuTE9BRElORyl7RHQodGhpcyxlKTt2YXIgcj10aGlzLl9sb2FkUmVzb3VyY2VzO3IuZmluaXNoZWRQZW5kaW5nTG9hZHMoKSYmci5maW5pc2hlZFJlc291cmNlQ3JlYXRpb24oKSYmKHRoaXMuX3N0YXRlPVd0LkxPQURFRCx0aGlzLl9sb2FkUmVzb3VyY2VzPXZvaWQgMCxuPSEwKX12YXIgbz10aGlzLnNob3cmJjAhPT10aGlzLnNjYWxlO2lmKG8mJnRoaXMuX3N0YXRlPT09V3QuTE9BREVEfHxuKXt2YXIgcz10aGlzLmFjdGl2ZUFuaW1hdGlvbnMudXBkYXRlKHQpfHx0aGlzLl9jZXNpdW1BbmltYXRpb25zRGlydHk7dGhpcy5fY2VzaXVtQW5pbWF0aW9uc0RpcnR5PSExO3ZhciBsPSFfLmVxdWFscyh0aGlzLl9tb2RlbE1hdHJpeCx0aGlzLm1vZGVsTWF0cml4KXx8dGhpcy5fc2NhbGUhPT10aGlzLnNjYWxlfHx0aGlzLl9taW5pbXVtUGl4ZWxTaXplIT09dGhpcy5taW5pbXVtUGl4ZWxTaXplfHwwIT09dGhpcy5taW5pbXVtUGl4ZWxTaXplO2lmKGx8fG4pe18uY2xvbmUodGhpcy5tb2RlbE1hdHJpeCx0aGlzLl9tb2RlbE1hdHJpeCksdGhpcy5fc2NhbGU9dGhpcy5zY2FsZSx0aGlzLl9taW5pbXVtUGl4ZWxTaXplPXRoaXMubWluaW11bVBpeGVsU2l6ZTt2YXIgdT1GdCh0aGlzLGUsdCksYz10aGlzLl9jb21wdXRlZE1vZGVsTWF0cml4O18ubXVsdGlwbHlCeVVuaWZvcm1TY2FsZSh0aGlzLm1vZGVsTWF0cml4LHUsYyksXy5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKGMsVXQsYyl9KHN8fGx8fG4pJiYoUnQodGhpcyxsLG4pLChzfHxuKSYmTHQodGhpcykpLE50KHRoaXMsZSksenQodGhpcyl9aWYobil7dmFyIGQ9dGhpcztyZXR1cm4gdC5hZnRlclJlbmRlci5wdXNoKGZ1bmN0aW9uKCl7ZC5fcmVhZHk9ITAsZC5yZWFkeVRvUmVuZGVyLnJhaXNlRXZlbnQoZCl9KSx2b2lkIDB9aWYobyl7dmFyIGgsbSxmLHA9dC5wYXNzZXM7aWYocC5yZW5kZXIpZm9yKGY9dGhpcy5fcmVuZGVyQ29tbWFuZHMsbT1mLmxlbmd0aCxoPTA7bT5oOysraClpLnB1c2goZltoXSk7aWYocC5waWNrKWZvcihmPXRoaXMuX3BpY2tDb21tYW5kcyxtPWYubGVuZ3RoLGg9MDttPmg7KytoKWkucHVzaChmW2hdKX19fSxHdC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sR3QucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9yZW5kZXJlclJlc291cmNlcztWdChlLmJ1ZmZlcnMpLFZ0KGUudmVydGV4QXJyYXlzKSxrdChlLnByb2dyYW1zKSxrdChlLnBpY2tQcm9ncmFtcyksVnQoZS50ZXh0dXJlcyksZT12b2lkIDAsdGhpcy5fcmVuZGVyZXJSZXNvdXJjZXM9dm9pZCAwO2Zvcih2YXIgdD10aGlzLl9waWNrSWRzLGk9dC5sZW5ndGgsbj0wO2k+bjsrK24pdFtuXS5kZXN0cm95KCk7cmV0dXJuIGwodGhpcyl9LEd0fSksZGVmaW5lKCJEYXRhU291cmNlcy9Nb2RlbFZpc3VhbGl6ZXIiLFsiLi4vQ29yZS9Bc3NvY2lhdGl2ZUFycmF5IiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTWF0cml4MyIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvUXVhdGVybmlvbiIsIi4uL0NvcmUvVHJhbnNmb3JtcyIsIi4uL1NjZW5lL01vZGVsIiwiLi4vU2NlbmUvTW9kZWxBbmltYXRpb25Mb29wIiwiLi9Qcm9wZXJ0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaChlLHQsbixyKXt2YXIgbz1uW3QuaWRdO2lmKGkobykpe3ZhciBhPW8ubW9kZWxQcmltaXRpdmU7YS5yZWFkeVRvUmVuZGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIobSxlKSxyLnJlbW92ZShhKSxhLmlzRGVzdHJveWVkKCl8fGEuZGVzdHJveSgpLGRlbGV0ZSBuW3QuaWRdfX1mdW5jdGlvbiBtKGUpe2UuYWN0aXZlQW5pbWF0aW9ucy5hZGRBbGwoe2xvb3A6Yy5SRVBFQVR9KX12YXIgZj0xLHA9MCx2PW5ldyBvLGc9bmV3IHQsXz1uZXcgcyx5PWZ1bmN0aW9uKHQsaSl7aS5jb2xsZWN0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKHkucHJvdG90eXBlLl9vbkNvbGxlY3Rpb25DaGFuZ2VkLHRoaXMpLHRoaXMuX3NjZW5lPXQsdGhpcy5fcHJpbWl0aXZlcz10LnByaW1pdGl2ZXMsdGhpcy5fZW50aXR5Q29sbGVjdGlvbj1pLHRoaXMuX21vZGVsSGFzaD17fSx0aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplPW5ldyBlLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZWQoaSxpLmVudGl0aWVzLFtdLFtdKX07cmV0dXJuIHkucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXt0aGlzLl9zY2VuZS5jb250ZXh0O2Zvcih2YXIgbj10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplLnZhbHVlcyxyPXRoaXMuX21vZGVsSGFzaCxjPXRoaXMuX3ByaW1pdGl2ZXMsaD10aGlzLl9zY2VuZSx5PTAsQz1uLmxlbmd0aDtDPnk7eSsrKXt2YXIgdyxFPW5beV0sYj1FLl9tb2RlbCxTPXJbRS5pZF0sVD1FLmlzQXZhaWxhYmxlKGUpJiZkLmdldFZhbHVlT3JEZWZhdWx0KGIuX3Nob3csZSwhMCk7aWYoVCYmKGc9ZC5nZXRWYWx1ZU9yVW5kZWZpbmVkKEUuX3Bvc2l0aW9uLGUsZyksdz1kLmdldFZhbHVlT3JVbmRlZmluZWQoYi5fdXJpLGUpLFQ9aShnKSYmaSh3KSksVCl7dmFyIHg9aShTKT9TLm1vZGVsUHJpbWl0aXZlOnZvaWQgMDtpKHgpJiZ3PT09Uy51cml8fChpKHgpJiYoYy5yZW1vdmUoeCkseC5pc0Rlc3Ryb3llZCgpfHx4LmRlc3Ryb3koKSxkZWxldGUgcltFLmlkXSkseD11LmZyb21HbHRmKHt1cmw6d30pLHgucmVhZHlUb1JlbmRlci5hZGRFdmVudExpc3RlbmVyKG0sdGhpcykseC5pZD1FLGMuYWRkKHgpLFM9e21vZGVsUHJpbWl0aXZlOngsdXJpOncscG9zaXRpb246dm9pZCAwLG9yaWVudGF0aW9uOnZvaWQgMH0scltFLmlkXT1TKSx4LnNob3c9ITAseC5zY2FsZT1kLmdldFZhbHVlT3JEZWZhdWx0KGIuX3NjYWxlLGUsZikseC5taW5pbXVtUGl4ZWxTaXplPWQuZ2V0VmFsdWVPckRlZmF1bHQoYi5fbWluaW11bVBpeGVsU2l6ZSxlLHApLF89ZC5nZXRWYWx1ZU9yVW5kZWZpbmVkKEUuX29yaWVudGF0aW9uLGUsXyksdC5lcXVhbHMoZyxTLnBvc2l0aW9uKSYmcy5lcXVhbHMoXyxTLm9yaWVudGF0aW9uKXx8KGkoXyk/YS5mcm9tUm90YXRpb25UcmFuc2xhdGlvbihvLmZyb21RdWF0ZXJuaW9uKF8sdiksZyx4Lm1vZGVsTWF0cml4KTpsLmVhc3ROb3J0aFVwVG9GaXhlZEZyYW1lKGcsaC5nbG9iZS5lbGxpcHNvaWQseC5tb2RlbE1hdHJpeCksUy5wb3NpdGlvbj10LmNsb25lKGcsUy5wb3NpdGlvbiksUy5vcmllbnRhdGlvbj1zLmNsb25lKF8sUy5vcmllbnRhdGlvbikpfWVsc2UgaShTKSYmKFMubW9kZWxQcmltaXRpdmUuc2hvdz0hMSl9cmV0dXJuITB9LHkucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHkucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdHlDb2xsZWN0aW9uLmNvbGxlY3Rpb25DaGFuZ2VkLnJlbW92ZUV2ZW50TGlzdGVuZXIoeS5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyk7Zm9yKHZhciBlPXRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemUudmFsdWVzLHQ9dGhpcy5fbW9kZWxIYXNoLGk9dGhpcy5fcHJpbWl0aXZlcyxyPWUubGVuZ3RoLTE7cj4tMTtyLS0paCh0aGlzLGVbcl0sdCxpKTtyZXR1cm4gbih0aGlzKX0seS5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG8sYSxzPXRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemUsbD10aGlzLl9tb2RlbEhhc2gsdT10aGlzLl9wcmltaXRpdmVzO2ZvcihvPXQubGVuZ3RoLTE7bz4tMTtvLS0pYT10W29dLGkoYS5fbW9kZWwpJiZpKGEuX3Bvc2l0aW9uKSYmcy5zZXQoYS5pZCxhKTtmb3Iobz1yLmxlbmd0aC0xO28+LTE7by0tKWE9cltvXSxpKGEuX21vZGVsKSYmaShhLl9wb3NpdGlvbik/cy5zZXQoYS5pZCxhKTooaCh0aGlzLGEsbCx1KSxzLnJlbW92ZShhLmlkKSk7Zm9yKG89bi5sZW5ndGgtMTtvPi0xO28tLSlhPW5bb10saCh0aGlzLGEsbCx1KSxzLnJlbW92ZShhLmlkKX0seX0pLGRlZmluZSgiU2hhZGVycy9Qb2x5bGluZUNvbW1vbiIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInZvaWQgY2xpcExpbmVTZWdtZW50VG9OZWFyUGxhbmUoXG4gICAgdmVjMyBwMCxcbiAgICB2ZWMzIHAxLFxuICAgIG91dCB2ZWM0IHBvc2l0aW9uV0MsXG4gICAgb3V0IGJvb2wgY2xpcHBlZCxcbiAgICBvdXQgYm9vbCBjdWxsZWRCeU5lYXJQbGFuZSlcbntcbiAgICBjdWxsZWRCeU5lYXJQbGFuZSA9IGZhbHNlO1xuICAgIGNsaXBwZWQgPSBmYWxzZTtcbiAgICBcbiAgICB2ZWMzIHAxVG9QMCA9IHAxIC0gcDA7XG4gICAgZmxvYXQgbWFnbml0dWRlID0gbGVuZ3RoKHAxVG9QMCk7XG4gICAgdmVjMyBkaXJlY3Rpb24gPSBub3JtYWxpemUocDFUb1AwKTtcbiAgICBmbG9hdCBlbmRQb2ludDBEaXN0YW5jZSA9ICAtKGN6bV9jdXJyZW50RnJ1c3R1bS54ICsgcDAueik7XG4gICAgZmxvYXQgZGVub21pbmF0b3IgPSAtZGlyZWN0aW9uLno7XG4gICAgXG4gICAgaWYgKGVuZFBvaW50MERpc3RhbmNlIDwgMC4wICYmIGFicyhkZW5vbWluYXRvcikgPCBjem1fZXBzaWxvbjcpXG4gICAge1xuICAgICAgICBjdWxsZWRCeU5lYXJQbGFuZSA9IHRydWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGVuZFBvaW50MERpc3RhbmNlIDwgMC4wICYmIGFicyhkZW5vbWluYXRvcikgPiBjem1fZXBzaWxvbjcpXG4gICAge1xuICAgICAgICAvLyB0ID0gKC1wbGFuZSBkaXN0YW5jZSAtIGRvdChwbGFuZSBub3JtYWwsIHJheSBvcmlnaW4pKSAvIGRvdChwbGFuZSBub3JtYWwsIHJheSBkaXJlY3Rpb24pXG4gICAgICAgIGZsb2F0IHQgPSAoY3ptX2N1cnJlbnRGcnVzdHVtLnggKyBwMC56KSAvIGRlbm9taW5hdG9yO1xuICAgICAgICBpZiAodCA8IDAuMCB8fCB0ID4gbWFnbml0dWRlKVxuICAgICAgICB7XG4gICAgICAgICAgICBjdWxsZWRCeU5lYXJQbGFuZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBwMCA9IHAwICsgdCAqIGRpcmVjdGlvbjtcbiAgICAgICAgICAgIGNsaXBwZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHBvc2l0aW9uV0MgPSBjem1fZXllVG9XaW5kb3dDb29yZGluYXRlcyh2ZWM0KHAwLCAxLjApKTtcbn1cblxudmVjNCBnZXRQb2x5bGluZVdpbmRvd0Nvb3JkaW5hdGVzKHZlYzQgcG9zaXRpb24sIHZlYzQgcHJldmlvdXMsIHZlYzQgbmV4dCwgZmxvYXQgZXhwYW5kRGlyZWN0aW9uLCBmbG9hdCB3aWR0aCwgYm9vbCB1c2VQcmV2aW91cykge1xuICAgIHZlYzQgZW5kUG9pbnRXQywgcDAsIHAxO1xuICAgIGJvb2wgY3VsbGVkQnlOZWFyUGxhbmUsIGNsaXBwZWQ7XG4gICAgXG4gICAgdmVjNCBwb3NpdGlvbkVDID0gY3ptX21vZGVsVmlld1JlbGF0aXZlVG9FeWUgKiBwb3NpdGlvbjtcbiAgICB2ZWM0IHByZXZFQyA9IGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllICogcHJldmlvdXM7XG4gICAgdmVjNCBuZXh0RUMgPSBjem1fbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZSAqIG5leHQ7XG4gICAgXG4gICAgY2xpcExpbmVTZWdtZW50VG9OZWFyUGxhbmUocHJldkVDLnh5eiwgcG9zaXRpb25FQy54eXosIHAwLCBjbGlwcGVkLCBjdWxsZWRCeU5lYXJQbGFuZSk7XG4gICAgY2xpcExpbmVTZWdtZW50VG9OZWFyUGxhbmUobmV4dEVDLnh5eiwgcG9zaXRpb25FQy54eXosIHAxLCBjbGlwcGVkLCBjdWxsZWRCeU5lYXJQbGFuZSk7XG4gICAgY2xpcExpbmVTZWdtZW50VG9OZWFyUGxhbmUocG9zaXRpb25FQy54eXosIHVzZVByZXZpb3VzID8gcHJldkVDLnh5eiA6IG5leHRFQy54eXosIGVuZFBvaW50V0MsIGNsaXBwZWQsIGN1bGxlZEJ5TmVhclBsYW5lKTtcbiAgICBcbiAgICBpZiAoY3VsbGVkQnlOZWFyUGxhbmUpXG4gICAge1xuICAgICAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAxLjApO1xuICAgIH1cbiAgICBcbiAgICB2ZWMyIHByZXZXQyA9IG5vcm1hbGl6ZShwMC54eSAtIGVuZFBvaW50V0MueHkpO1xuICAgIHZlYzIgbmV4dFdDID0gbm9ybWFsaXplKHAxLnh5IC0gZW5kUG9pbnRXQy54eSk7XG4gICAgXG4gICAgZmxvYXQgZXhwYW5kV2lkdGggPSB3aWR0aCAqIDAuNTtcbiAgICB2ZWMyIGRpcmVjdGlvbjtcblxuICAgIGlmIChjem1fZXF1YWxzRXBzaWxvbihub3JtYWxpemUocHJldmlvdXMueHl6IC0gcG9zaXRpb24ueHl6KSwgdmVjMygwLjApLCBjem1fZXBzaWxvbjEpIHx8IGN6bV9lcXVhbHNFcHNpbG9uKHByZXZXQywgLW5leHRXQywgY3ptX2Vwc2lsb24xKSlcbiAgICB7XG4gICAgICAgIGRpcmVjdGlvbiA9IHZlYzIoLW5leHRXQy55LCBuZXh0V0MueCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGN6bV9lcXVhbHNFcHNpbG9uKG5vcm1hbGl6ZShuZXh0Lnh5eiAtIHBvc2l0aW9uLnh5eiksIHZlYzMoMC4wKSwgY3ptX2Vwc2lsb24xKSB8fCBjbGlwcGVkKVxuICAgIHtcbiAgICAgICAgZGlyZWN0aW9uID0gdmVjMihwcmV2V0MueSwgLXByZXZXQy54KTtcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1uZXh0V0MueSwgbmV4dFdDLngpO1xuICAgICAgICBkaXJlY3Rpb24gPSBub3JtYWxpemUoKG5leHRXQyArIHByZXZXQykgKiAwLjUpO1xuICAgICAgICBpZiAoZG90KGRpcmVjdGlvbiwgbm9ybWFsKSA8IDAuMClcbiAgICAgICAge1xuICAgICAgICAgICAgZGlyZWN0aW9uID0gLWRpcmVjdGlvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRoZSBzaW5lIG9mIHRoZSBhbmdsZSBiZXR3ZWVuIHRoZSB0d28gdmVjdG9ycyBpcyBnaXZlbiBieSB0aGUgZm9ybXVsYVxuICAgICAgICAvLyAgICAgICAgIHxhIHggYnwgPSB8YXx8YnxzaW4odGhldGEpXG4gICAgICAgIC8vIHdoaWNoIGlzXG4gICAgICAgIC8vICAgICBmbG9hdCBzaW5BbmdsZSA9IGxlbmd0aChjcm9zcyh2ZWMzKGRpcmVjdGlvbiwgMC4wKSwgdmVjMyhuZXh0V0MsIDAuMCkpKTtcbiAgICAgICAgLy8gQmVjYXVzZSB0aGUgeiBjb21wb25lbnRzIG9mIGJvdGggdmVjdG9ycyBhcmUgemVybywgdGhlIHggYW5kIHkgY29vcmRpbmF0ZSB3aWxsIGJlIHplcm8uXG4gICAgICAgIC8vIFRoZXJlZm9yZSwgdGhlIHNpbmUgb2YgdGhlIGFuZ2xlIGlzIGp1c3QgdGhlIHogY29tcG9uZW50IG9mIHRoZSBjcm9zcyBwcm9kdWN0LlxuICAgICAgICBmbG9hdCBzaW5BbmdsZSA9IGFicyhkaXJlY3Rpb24ueCAqIG5leHRXQy55IC0gZGlyZWN0aW9uLnkgKiBuZXh0V0MueCk7XG4gICAgICAgIGV4cGFuZFdpZHRoID0gY2xhbXAoZXhwYW5kV2lkdGggLyBzaW5BbmdsZSwgMC4wLCB3aWR0aCAqIDIuMCk7XG4gICAgfVxuXG4gICAgdmVjMiBvZmZzZXQgPSBkaXJlY3Rpb24gKiBleHBhbmREaXJlY3Rpb24gKiBleHBhbmRXaWR0aCAqIGN6bV9yZXNvbHV0aW9uU2NhbGU7XG4gICAgcmV0dXJuIHZlYzQoZW5kUG9pbnRXQy54eSArIG9mZnNldCwgLWVuZFBvaW50V0MueiwgMS4wKTtcbn1cbiIKfSksZGVmaW5lKCJTaGFkZXJzL1BvbHlsaW5lRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ2YXJ5aW5nIHZlYzIgdl9zdDtcblxudm9pZCBtYWluKClcbntcbiAgICBjem1fbWF0ZXJpYWxJbnB1dCBtYXRlcmlhbElucHV0O1xuICAgIFxuICAgIG1hdGVyaWFsSW5wdXQucyA9IHZfc3QucztcbiAgICBtYXRlcmlhbElucHV0LnN0ID0gdl9zdDtcbiAgICBtYXRlcmlhbElucHV0LnN0ciA9IHZlYzModl9zdCwgMC4wKTtcbiAgICBcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7XG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChtYXRlcmlhbC5kaWZmdXNlICsgbWF0ZXJpYWwuZW1pc3Npb24sIG1hdGVyaWFsLmFscGhhKTtcbn0ifSksZGVmaW5lKCJTaGFkZXJzL1BvbHlsaW5lVlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJhdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjNESGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uM0RMb3c7XG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjJESGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uMkRMb3c7XG5hdHRyaWJ1dGUgdmVjMyBwcmV2UG9zaXRpb24zREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBwcmV2UG9zaXRpb24zRExvdztcbmF0dHJpYnV0ZSB2ZWMzIHByZXZQb3NpdGlvbjJESGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHByZXZQb3NpdGlvbjJETG93O1xuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9uM0RMb3c7XG5hdHRyaWJ1dGUgdmVjMyBuZXh0UG9zaXRpb24yREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBuZXh0UG9zaXRpb24yRExvdztcbmF0dHJpYnV0ZSB2ZWM0IHRleENvb3JkRXhwYW5kV2lkdGhBbmRTaG93O1xuYXR0cmlidXRlIHZlYzQgcGlja0NvbG9yO1xuXG52YXJ5aW5nIHZlYzIgIHZfc3Q7XG52YXJ5aW5nIGZsb2F0IHZfd2lkdGg7XG52YXJ5aW5nIHZlYzQgIGN6bV9waWNrQ29sb3I7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIGZsb2F0IHRleENvb3JkID0gdGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3cueDtcbiAgICBmbG9hdCBleHBhbmREaXIgPSB0ZXhDb29yZEV4cGFuZFdpZHRoQW5kU2hvdy55O1xuICAgIGZsb2F0IHdpZHRoID0gYWJzKHRleENvb3JkRXhwYW5kV2lkdGhBbmRTaG93LnopICsgMC41O1xuICAgIGJvb2wgdXNlUHJldiA9IHRleENvb3JkRXhwYW5kV2lkdGhBbmRTaG93LnogPCAwLjA7XG4gICAgZmxvYXQgc2hvdyA9IHRleENvb3JkRXhwYW5kV2lkdGhBbmRTaG93Lnc7XG4gICAgXG4gICAgdmVjNCBwLCBwcmV2LCBuZXh0O1xuICAgIGlmIChjem1fbW9ycGhUaW1lID09IDEuMClcbiAgICB7XG4gICAgICAgIHAgPSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZShwb3NpdGlvbjNESGlnaC54eXosIHBvc2l0aW9uM0RMb3cueHl6KTtcbiAgICAgICAgcHJldiA9IGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHByZXZQb3NpdGlvbjNESGlnaC54eXosIHByZXZQb3NpdGlvbjNETG93Lnh5eik7XG4gICAgICAgIG5leHQgPSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZShuZXh0UG9zaXRpb24zREhpZ2gueHl6LCBuZXh0UG9zaXRpb24zRExvdy54eXopO1xuICAgIH1cbiAgICBlbHNlIGlmIChjem1fbW9ycGhUaW1lID09IDAuMClcbiAgICB7XG4gICAgICAgIHAgPSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZShwb3NpdGlvbjJESGlnaC56eHksIHBvc2l0aW9uMkRMb3cuenh5KTtcbiAgICAgICAgcHJldiA9IGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHByZXZQb3NpdGlvbjJESGlnaC56eHksIHByZXZQb3NpdGlvbjJETG93Lnp4eSk7XG4gICAgICAgIG5leHQgPSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZShuZXh0UG9zaXRpb24yREhpZ2guenh5LCBuZXh0UG9zaXRpb24yRExvdy56eHkpO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBwID0gY3ptX2NvbHVtYnVzVmlld01vcnBoKFxuICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHBvc2l0aW9uMkRIaWdoLnp4eSwgcG9zaXRpb24yRExvdy56eHkpLFxuICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHBvc2l0aW9uM0RIaWdoLnh5eiwgcG9zaXRpb24zRExvdy54eXopLFxuICAgICAgICAgICAgICAgIGN6bV9tb3JwaFRpbWUpO1xuICAgICAgICBwcmV2ID0gY3ptX2NvbHVtYnVzVmlld01vcnBoKFxuICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKHByZXZQb3NpdGlvbjJESGlnaC56eHksIHByZXZQb3NpdGlvbjJETG93Lnp4eSksXG4gICAgICAgICAgICAgICAgY3ptX3RyYW5zbGF0ZVJlbGF0aXZlVG9FeWUocHJldlBvc2l0aW9uM0RIaWdoLnh5eiwgcHJldlBvc2l0aW9uM0RMb3cueHl6KSxcbiAgICAgICAgICAgICAgICBjem1fbW9ycGhUaW1lKTtcbiAgICAgICAgbmV4dCA9IGN6bV9jb2x1bWJ1c1ZpZXdNb3JwaChcbiAgICAgICAgICAgICAgICBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZShuZXh0UG9zaXRpb24yREhpZ2guenh5LCBuZXh0UG9zaXRpb24yRExvdy56eHkpLFxuICAgICAgICAgICAgICAgIGN6bV90cmFuc2xhdGVSZWxhdGl2ZVRvRXllKG5leHRQb3NpdGlvbjNESGlnaC54eXosIG5leHRQb3NpdGlvbjNETG93Lnh5eiksXG4gICAgICAgICAgICAgICAgY3ptX21vcnBoVGltZSk7XG4gICAgfVxuICAgIFxuICAgIHZlYzQgcG9zaXRpb25XQyA9IGdldFBvbHlsaW5lV2luZG93Q29vcmRpbmF0ZXMocCwgcHJldiwgbmV4dCwgZXhwYW5kRGlyLCB3aWR0aCwgdXNlUHJldik7XG4gICAgZ2xfUG9zaXRpb24gPSBjem1fdmlld3BvcnRPcnRob2dyYXBoaWMgKiBwb3NpdGlvbldDICogc2hvdztcbiAgICBcbiAgICB2X3N0ID0gdmVjMih0ZXhDb29yZCwgY2xhbXAoZXhwYW5kRGlyLCAwLjAsIDEuMCkpO1xuICAgIHZfd2lkdGggPSB3aWR0aDtcbiAgICBjem1fcGlja0NvbG9yID0gcGlja0NvbG9yO1xufVxuIn0pLGRlZmluZSgiQ29yZS9FbGxpcHNvaWRHZW9kZXNpYyIsWyIuL0NhcnRlc2lhbjMiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9NYXRoIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbChlKXt2YXIgdD1lLl91U3F1YXJlZCxpPWUuX2VsbGlwc29pZC5tYXhpbXVtUmFkaXVzLG49ZS5fZWxsaXBzb2lkLm1pbmltdW1SYWRpdXMscj0oaS1uKS9pLG89TWF0aC5jb3MoZS5fc3RhcnRIZWFkaW5nKSxhPU1hdGguc2luKGUuX3N0YXJ0SGVhZGluZykscz0oMS1yKSpNYXRoLnRhbihlLl9zdGFydC5sYXRpdHVkZSksbD0xL01hdGguc3FydCgxK3MqcyksdT1sKnMsYz1NYXRoLmF0YW4yKHMsbyksZD1sKmEsaD1kKmQsbT0xLWgsZj1NYXRoLnNxcnQobSkscD10LzQsdj1wKnAsZz12KnAsXz12KnYseT0xK3AtMyp2LzQrNSpnLzQtMTc1Kl8vNjQsQz0xLXArMTUqdi84LTM1KmcvOCx3PTEtMypwKzM1KnYvNCxFPTEtNSpwLGI9eSpjLUMqTWF0aC5zaW4oMipjKSpwLzItdypNYXRoLnNpbig0KmMpKnYvMTYtRSpNYXRoLnNpbig2KmMpKmcvNDgtNSpNYXRoLnNpbig4KmMpKl8vNTEyLFM9ZS5fY29uc3RhbnRzO1MuYT1pLFMuYj1uLFMuZj1yLFMuY29zaW5lSGVhZGluZz1vLFMuc2luZUhlYWRpbmc9YSxTLnRhblU9cyxTLmNvc2luZVU9bCxTLnNpbmVVPXUsUy5zaWdtYT1jLFMuc2luZUFscGhhPWQsUy5zaW5lU3F1YXJlZEFscGhhPWgsUy5jb3NpbmVTcXVhcmVkQWxwaGE9bSxTLmNvc2luZUFscGhhPWYsUy51Mk92ZXI0PXAsUy51NE92ZXIxNj12LFMudTZPdmVyNjQ9ZyxTLnU4T3ZlcjI1Nj1fLFMuYTA9eSxTLmExPUMsUy5hMj13LFMuYTM9RSxTLmRpc3RhbmNlUmF0aW89Yn1mdW5jdGlvbiB1KGUsdCl7cmV0dXJuIGUqdCooNCtlKig0LTMqdCkpLzE2fWZ1bmN0aW9uIGMoZSx0LGksbixyLG8sYSl7dmFyIHM9dShlLGkpO3JldHVybigxLXMpKmUqdCoobitzKnIqKGErcypvKigyKmEqYS0xKSkpfWZ1bmN0aW9uIGQoZSx0LGksbixyLG8sYSl7dmFyIGwsdSxkLGgsbSxmPSh0LWkpL3QscD1vLW4sdj1NYXRoLmF0YW4oKDEtZikqTWF0aC50YW4ocikpLGc9TWF0aC5hdGFuKCgxLWYpKk1hdGgudGFuKGEpKSxfPU1hdGguY29zKHYpLHk9TWF0aC5zaW4odiksQz1NYXRoLmNvcyhnKSx3PU1hdGguc2luKGcpLEU9XypDLGI9Xyp3LFM9eSp3LFQ9eSpDLHg9cCxBPXMuVFdPX1BJLFA9TWF0aC5jb3MoeCksTT1NYXRoLnNpbih4KTtkb3tQPU1hdGguY29zKHgpLE09TWF0aC5zaW4oeCk7dmFyIEk9Yi1UKlA7ZD1NYXRoLnNxcnQoQypDKk0qTStJKkkpLHU9UytFKlAsbD1NYXRoLmF0YW4yKGQsdSk7dmFyIEQ7MD09PWQ/KEQ9MCxoPTEpOihEPUUqTS9kLGg9MS1EKkQpLEE9eCxtPXUtMipTL2gsaXNOYU4obSkmJihtPTApLHg9cCtjKGYsRCxoLGwsZCx1LG0pfXdoaWxlKE1hdGguYWJzKHgtQSk+cy5FUFNJTE9OMTIpO3ZhciBPPWgqKHQqdC1pKmkpLyhpKmkpLFI9MStPKig0MDk2K08qKE8qKDMyMC0xNzUqTyktNzY4KSkvMTYzODQsTD1PKigyNTYrTyooTyooNzQtNDcqTyktMTI4KSkvMTAyNCxOPW0qbSx6PUwqZCoobStMKih1KigyKk4tMSktTCptKig0KmQqZC0zKSooNCpOLTMpLzYpLzQpLEI9aSpSKihsLXopLEY9TWF0aC5hdGFuMihDKk0sYi1UKlApLFY9TWF0aC5hdGFuMihfKk0sYipQLVQpO2UuX2Rpc3RhbmNlPUIsZS5fc3RhcnRIZWFkaW5nPUYsZS5fZW5kSGVhZGluZz1WLGUuX3VTcXVhcmVkPU99ZnVuY3Rpb24gaChpLG4scixvKXtlLm5vcm1hbGl6ZShvLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKG4sZiksbSksZS5ub3JtYWxpemUoby5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihyLGYpLGYpLGQoaSxvLm1heGltdW1SYWRpdXMsby5taW5pbXVtUmFkaXVzLG4ubG9uZ2l0dWRlLG4ubGF0aXR1ZGUsci5sb25naXR1ZGUsci5sYXRpdHVkZSksbi5oZWlnaHQ9MCxyLmhlaWdodD0wLGkuX3N0YXJ0PXQuY2xvbmUobixpLl9zdGFydCksaS5fZW5kPXQuY2xvbmUocixpLl9lbmQpLGwoaSl9dmFyIG09bmV3IGUsZj1uZXcgZSxwPWZ1bmN0aW9uKGUscixvKXt2YXIgcz1pKG8sYS5XR1M4NCk7dGhpcy5fZWxsaXBzb2lkPXMsdGhpcy5fc3RhcnQ9bmV3IHQsdGhpcy5fZW5kPW5ldyB0LHRoaXMuX2NvbnN0YW50cz17fSx0aGlzLl9zdGFydEhlYWRpbmc9dm9pZCAwLHRoaXMuX2VuZEhlYWRpbmc9dm9pZCAwLHRoaXMuX2Rpc3RhbmNlPXZvaWQgMCx0aGlzLl91U3F1YXJlZD12b2lkIDAsbihlKSYmbihyKSYmaCh0aGlzLGUscixzKX07cmV0dXJuIHIocC5wcm90b3R5cGUse3N1cmZhY2VEaXN0YW5jZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Rpc3RhbmNlfX0sc3RhcnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGFydH19LGVuZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VuZH19LHN0YXJ0SGVhZGluZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXJ0SGVhZGluZ319LGVuZEhlYWRpbmc6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbmRIZWFkaW5nfX19KSxwLnByb3RvdHlwZS5zZXRFbmRQb2ludHM9ZnVuY3Rpb24oZSx0KXtoKHRoaXMsZSx0LHRoaXMuX2VsbGlwc29pZCl9LHAucHJvdG90eXBlLmludGVycG9sYXRlVXNpbmdGcmFjdGlvbj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmludGVycG9sYXRlVXNpbmdTdXJmYWNlRGlzdGFuY2UodGhpcy5fZGlzdGFuY2UqZSx0KX0scC5wcm90b3R5cGUuaW50ZXJwb2xhdGVVc2luZ1N1cmZhY2VEaXN0YW5jZT1mdW5jdGlvbihlLGkpe3ZhciByPXRoaXMuX2NvbnN0YW50cyxvPXIuZGlzdGFuY2VSYXRpbytlL3IuYixhPU1hdGguY29zKDIqbykscz1NYXRoLmNvcyg0Km8pLGw9TWF0aC5jb3MoNipvKSx1PU1hdGguc2luKDIqbyksZD1NYXRoLnNpbig0Km8pLGg9TWF0aC5zaW4oNipvKSxtPU1hdGguc2luKDgqbyksZj1vKm8scD1vKmYsdj1yLnU4T3ZlcjI1NixnPXIudTJPdmVyNCxfPXIudTZPdmVyNjQseT1yLnU0T3ZlcjE2LEM9MipwKnYqYS8zK28qKDEtZys3KnkvNC0xNSpfLzQrNTc5KnYvNjQtKHktMTUqXy80KzE4Nyp2LzE2KSphLSg1Kl8vNC0xMTUqdi8xNikqcy0yOSp2KmwvMTYpKyhnLzIteSs3MSpfLzMyLTg1KnYvMTYpKnUrKDUqeS8xNi01Kl8vNCszODMqdi85NikqZC1mKigoXy0xMSp2LzIpKnUrNSp2KmQvMikrKDI5Kl8vOTYtMjkqdi8xNikqaCs1MzkqdiptLzE1MzYsdz1NYXRoLmFzaW4oTWF0aC5zaW4oQykqci5jb3NpbmVBbHBoYSksRT1NYXRoLmF0YW4oci5hL3IuYipNYXRoLnRhbih3KSk7Qy09ci5zaWdtYTt2YXIgYj1NYXRoLmNvcygyKnIuc2lnbWErQyksUz1NYXRoLnNpbihDKSxUPU1hdGguY29zKEMpLHg9ci5jb3NpbmVVKlQsQT1yLnNpbmVVKlMsUD1NYXRoLmF0YW4yKFMqci5zaW5lSGVhZGluZyx4LUEqci5jb3NpbmVIZWFkaW5nKSxNPVAtYyhyLmYsci5zaW5lQWxwaGEsci5jb3NpbmVTcXVhcmVkQWxwaGEsQyxTLFQsYik7cmV0dXJuIG4oaSk/KGkubG9uZ2l0dWRlPXRoaXMuX3N0YXJ0LmxvbmdpdHVkZStNLGkubGF0aXR1ZGU9RSxpLmhlaWdodD0wLGkpOm5ldyB0KHRoaXMuX3N0YXJ0LmxvbmdpdHVkZStNLEUsMCl9LHB9KSxkZWZpbmUoIkNvcmUvUG9seWxpbmVQaXBlbGluZSIsWyIuL0NhcnRlc2lhbjMiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9FbGxpcHNvaWRHZW9kZXNpYyIsIi4vSW50ZXJzZWN0aW9uVGVzdHMiLCIuL2lzQXJyYXkiLCIuL01hdGgiLCIuL01hdHJpeDQiLCIuL1BsYW5lIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBoKGUsdCxpKXt2YXIgbixyPW5ldyBBcnJheShlKTtpZih0PT09aSl7Zm9yKG49MDtlPm47bisrKXJbbl09dDtyZXR1cm4gcn12YXIgbz1pLXQsYT1vL2U7Zm9yKG49MTtlPm47bisrKXt2YXIgcz10K24qYTtyW25dPXN9cmV0dXJuIHJbMF09dCxyfWZ1bmN0aW9uIG0odCxpLG4scixvLGEscyxsKXt2YXIgdT1yLnNjYWxlVG9HZW9kZXRpY1N1cmZhY2UodCxBKSxjPXIuc2NhbGVUb0dlb2RldGljU3VyZmFjZShpLFApLGQ9Zi5udW1iZXJPZlBvaW50cyh0LGksbiksbT1yLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHUsUykscD1yLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGMsVCksdj1oKGQsbyxhKTtNLnNldEVuZFBvaW50cyhtLHApO3ZhciBnPU0uc3VyZmFjZURpc3RhbmNlL2QsXz1sO20uaGVpZ2h0PW87dmFyIHk9ci5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihtLHgpO2UucGFjayh5LHMsXyksXys9Mztmb3IodmFyIEM9MTtkPkM7QysrKXt2YXIgdz1NLmludGVycG9sYXRlVXNpbmdTdXJmYWNlRGlzdGFuY2UoQypnLFQpO3cuaGVpZ2h0PXZbQ10seT1yLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKHcseCksZS5wYWNrKHkscyxfKSxfKz0zfXJldHVybiBffXZhciBmPXt9O2YubnVtYmVyT2ZQb2ludHM9ZnVuY3Rpb24odCxpLG4pe3ZhciByPWUuYW5nbGVCZXR3ZWVuKHQsaSk7cmV0dXJuIE1hdGguY2VpbChyL24pfTt2YXIgcD1uZXcgdDtmLmV4dHJhY3RIZWlnaHRzPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPWUubGVuZ3RoLG49bmV3IEFycmF5KGkpLHI9MDtpPnI7cisrKXt2YXIgbz1lW3JdO25bcl09dC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhvLHApLmhlaWdodH1yZXR1cm4gbn07dmFyIHY9bmV3IGMsZz1uZXcgZSxfPW5ldyBlLHk9bmV3IGQoZS5aRVJPLDApLEM9bmV3IGUsdz1uZXcgZChlLlpFUk8sMCksRT1uZXcgZSxiPW5ldyBlLFM9bmV3IHQsVD1uZXcgdCx4PW5ldyBlLEE9bmV3IGUsUD1uZXcgZSxNPW5ldyBhO3JldHVybiBmLndyYXBMb25naXR1ZGU9ZnVuY3Rpb24odCxyKXt2YXIgbz1bXSxhPVtdO2lmKG4odCkmJnQubGVuZ3RoPjApe3I9aShyLGMuSURFTlRJVFkpO3ZhciBsPWMuaW52ZXJzZVRyYW5zZm9ybWF0aW9uKHIsdiksdT1jLm11bHRpcGx5QnlQb2ludChsLGUuWkVSTyxnKSxoPWMubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IobCxlLlVOSVRfWSxfKSxtPWQuZnJvbVBvaW50Tm9ybWFsKHUsaCx5KSxmPWMubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IobCxlLlVOSVRfWCxDKSxwPWQuZnJvbVBvaW50Tm9ybWFsKHUsZix3KSxTPTE7by5wdXNoKGUuY2xvbmUodFswXSkpO2Zvcih2YXIgVD1vWzBdLHg9dC5sZW5ndGgsQT0xO3g+QTsrK0Epe3ZhciBQPXRbQV07aWYoZC5nZXRQb2ludERpc3RhbmNlKHAsVCk8MHx8ZC5nZXRQb2ludERpc3RhbmNlKHAsUCk8MCl7dmFyIE09cy5saW5lU2VnbWVudFBsYW5lKFQsUCxtLEUpO2lmKG4oTSkpe3ZhciBJPWUubXVsdGlwbHlCeVNjYWxhcihoLDVlLTksYik7ZC5nZXRQb2ludERpc3RhbmNlKG0sVCk8MCYmZS5uZWdhdGUoSSxJKSxvLnB1c2goZS5hZGQoTSxJLG5ldyBlKSksYS5wdXNoKFMrMSksZS5uZWdhdGUoSSxJKSxvLnB1c2goZS5hZGQoTSxJLG5ldyBlKSksUz0xfX1vLnB1c2goZS5jbG9uZSh0W0FdKSksUysrLFQ9UH1hLnB1c2goUyl9cmV0dXJue3Bvc2l0aW9uczpvLGxlbmd0aHM6YX19LGYucmVtb3ZlRHVwbGljYXRlcz1mdW5jdGlvbih0KXt2YXIgaT10Lmxlbmd0aDtpZigyPmkpcmV0dXJuIHQuc2xpY2UoMCk7dmFyIG49W107bi5wdXNoKHRbMF0pO2Zvcih2YXIgcj0xO2k+cjsrK3Ipe3ZhciBvPXRbci0xXSxhPXRbcl07ZS5lcXVhbHMobyxhKXx8bi5wdXNoKGEpfXJldHVybiBufSxmLmdlbmVyYXRlQXJjPWZ1bmN0aW9uKHQpe24odCl8fCh0PXt9KTt2YXIgcixhLHMsYz10LnBvc2l0aW9ucyxkPWkodC5lbGxpcHNvaWQsby5XR1M4NCksaD1pKHQuaGVpZ2h0LDApLHA9aSh0LmdyYW51bGFyaXR5LHUuUkFESUFOU19QRVJfREVHUkVFKSx2PWMubGVuZ3RoLGc9MDtmb3Iocj0wO3YtMT5yO3IrKylhPWNbcl0scz1jW3IrMV0sZys9Zi5udW1iZXJPZlBvaW50cyhhLHMscCk7ZysrO3ZhciBfPTMqZyx5PW5ldyBBcnJheShfKSxDPTA7Zm9yKHI9MDt2LTE+cjtyKyspe2E9Y1tyXSxzPWNbcisxXTt2YXIgdyxFO2woaCk/KHc9aFtyXSxFPWhbcisxXSk6KHc9aCxFPWgpLEM9bShhLHMscCxkLHcsRSx5LEMpfXZhciBiPWNbdi0xXSxUPWQuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoYixTKTtULmhlaWdodD1sKGgpP2hbdi0xXTpoO3ZhciBBPWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oVCx4KTtyZXR1cm4gZS5wYWNrKEEseSxfLTMpLHl9LGYuZ2VuZXJhdGVDYXJ0ZXNpYW5BcmM9ZnVuY3Rpb24odCl7Zm9yKHZhciBpPWYuZ2VuZXJhdGVBcmModCksbj1pLmxlbmd0aC8zLHI9bmV3IEFycmF5KG4pLG89MDtuPm87bysrKXJbb109ZS51bnBhY2soaSwzKm8pO3JldHVybiByfSxmfSksZGVmaW5lKCJTY2VuZS9Qb2x5bGluZSIsWyIuLi9Db3JlL0JvdW5kaW5nU3BoZXJlIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvUG9seWxpbmVQaXBlbGluZSIsIi4vTWF0ZXJpYWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYyhlLHQpeysrZS5fcHJvcGVydGllc0NoYW5nZWRbdF07dmFyIGk9ZS5fcG9seWxpbmVDb2xsZWN0aW9uO3IoaSkmJihpLl91cGRhdGVQb2x5bGluZShlLHQpLGUuX2RpcnR5PSEwKX12YXIgZD1mdW5jdGlvbihvLGEpe289bihvLG4uRU1QVFlfT0JKRUNUKSx0aGlzLl9zaG93PW4oby5zaG93LCEwKSx0aGlzLl93aWR0aD1uKG8ud2lkdGgsMSksdGhpcy5fbG9vcD1uKG8ubG9vcCwhMSksdGhpcy5fbWF0ZXJpYWw9by5tYXRlcmlhbCxyKHRoaXMuX21hdGVyaWFsKXx8KHRoaXMuX21hdGVyaWFsPXUuZnJvbVR5cGUodS5Db2xvclR5cGUse2NvbG9yOm5ldyBpKDEsMSwxLDEpfSkpO3ZhciBjPW8ucG9zaXRpb25zO3IoYyl8fChjPVtdKSx0aGlzLl9wb3NpdGlvbnM9Yyx0aGlzLl9sb29wJiZjLmxlbmd0aD4yJiYhdC5lcXVhbHMoY1swXSxjW2MubGVuZ3RoLTFdKSYmYy5wdXNoKHQuY2xvbmUoY1swXSkpLHRoaXMuX2xlbmd0aD1jLmxlbmd0aCx0aGlzLl9pZD1vLmlkO3ZhciBkO3IoYSkmJihkPXMuY2xvbmUoYS5tb2RlbE1hdHJpeCkpLHRoaXMuX21vZGVsTWF0cml4PWQsdGhpcy5fc2VnbWVudHM9bC53cmFwTG9uZ2l0dWRlKGMsZCksdGhpcy5fYWN0dWFsTGVuZ3RoPXZvaWQgMCx0aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZD1uZXcgVWludDMyQXJyYXkoZyksdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uPWEsdGhpcy5fZGlydHk9ITEsdGhpcy5fcGlja0lkPXZvaWQgMCx0aGlzLl9ib3VuZGluZ1ZvbHVtZT1lLmZyb21Qb2ludHModGhpcy5fcG9zaXRpb25zKSx0aGlzLl9ib3VuZGluZ1ZvbHVtZVdDPWUudHJhbnNmb3JtKHRoaXMuX2JvdW5kaW5nVm9sdW1lLHRoaXMuX21vZGVsTWF0cml4KSx0aGlzLl9ib3VuZGluZ1ZvbHVtZTJEPW5ldyBlfSxoPWQuU0hPV19JTkRFWD0wLG09ZC5XSURUSF9JTkRFWD0xLGY9ZC5QT1NJVElPTl9JTkRFWD0yLHA9ZC5NQVRFUklBTF9JTkRFWD0zLHY9ZC5QT1NJVElPTl9TSVpFX0lOREVYPTQsZz1kLk5VTUJFUl9PRl9QUk9QRVJUSUVTPTU7cmV0dXJuIG8oZC5wcm90b3R5cGUse3Nob3c6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zaG93fSxzZXQ6ZnVuY3Rpb24oZSl7ZSE9PXRoaXMuX3Nob3cmJih0aGlzLl9zaG93PWUsYyh0aGlzLGgpKX19LHBvc2l0aW9uczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Bvc2l0aW9uc30sc2V0OmZ1bmN0aW9uKGkpe3RoaXMuX2xvb3AmJmkubGVuZ3RoPjImJiF0LmVxdWFscyhpWzBdLGlbaS5sZW5ndGgtMV0pJiZpLnB1c2godC5jbG9uZShpWzBdKSksKHRoaXMuX3Bvc2l0aW9ucy5sZW5ndGghPT1pLmxlbmd0aHx8dGhpcy5fcG9zaXRpb25zLmxlbmd0aCE9PXRoaXMuX2xlbmd0aCkmJmModGhpcyx2KSx0aGlzLl9wb3NpdGlvbnM9aSx0aGlzLl9sZW5ndGg9aS5sZW5ndGgsdGhpcy5fYm91bmRpbmdWb2x1bWU9ZS5mcm9tUG9pbnRzKHRoaXMuX3Bvc2l0aW9ucyx0aGlzLl9ib3VuZGluZ1ZvbHVtZSksdGhpcy5fYm91bmRpbmdWb2x1bWVXQz1lLnRyYW5zZm9ybSh0aGlzLl9ib3VuZGluZ1ZvbHVtZSx0aGlzLl9tb2RlbE1hdHJpeCx0aGlzLl9ib3VuZGluZ1ZvbHVtZVdDKSxjKHRoaXMsZiksdGhpcy51cGRhdGUoKX19LG1hdGVyaWFsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWx9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9tYXRlcmlhbCE9PWUmJih0aGlzLl9tYXRlcmlhbD1lLGModGhpcyxwKSl9fSx3aWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dpZHRofSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fd2lkdGg7ZSE9PXQmJih0aGlzLl93aWR0aD1lLGModGhpcyxtKSl9fSxsb29wOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9vcH0sc2V0OmZ1bmN0aW9uKGUpe2lmKGUhPT10aGlzLl9sb29wKXt2YXIgaT10aGlzLl9wb3NpdGlvbnM7ZT9pLmxlbmd0aD4yJiYhdC5lcXVhbHMoaVswXSxpW2kubGVuZ3RoLTFdKSYmaS5wdXNoKHQuY2xvbmUoaVswXSkpOmkubGVuZ3RoPjImJnQuZXF1YWxzKGlbMF0saVtpLmxlbmd0aC0xXSkmJmkucG9wKCksdGhpcy5fbG9vcD1lLGModGhpcyx2KX19fSxpZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5faWQ9ZSxyKHRoaXMuX3BpY2tJZCkmJih0aGlzLl9waWNrSWQub2JqZWN0LmlkPWUpfX19KSxkLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt2YXIgdD1zLklERU5USVRZO3IodGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uKSYmKHQ9dGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLm1vZGVsTWF0cml4KTt2YXIgaT10aGlzLl9zZWdtZW50cy5wb3NpdGlvbnMubGVuZ3RoLG49dGhpcy5fc2VnbWVudHMubGVuZ3RocyxvPXRoaXMuX3Byb3BlcnRpZXNDaGFuZ2VkW2ZdPjB8fHRoaXMuX3Byb3BlcnRpZXNDaGFuZ2VkW3ZdPjA7aWYoKCFzLmVxdWFscyh0LHRoaXMuX21vZGVsTWF0cml4KXx8bykmJih0aGlzLl9zZWdtZW50cz1sLndyYXBMb25naXR1ZGUodGhpcy5fcG9zaXRpb25zLHQpLHRoaXMuX2JvdW5kaW5nVm9sdW1lV0M9ZS50cmFuc2Zvcm0odGhpcy5fYm91bmRpbmdWb2x1bWUsdCx0aGlzLl9ib3VuZGluZ1ZvbHVtZVdDKSksdGhpcy5fbW9kZWxNYXRyaXg9dCx0aGlzLl9zZWdtZW50cy5wb3NpdGlvbnMubGVuZ3RoIT09aSljKHRoaXMsdik7ZWxzZSBmb3IodmFyIGE9bi5sZW5ndGgsdT0wO2E+dTsrK3UpaWYoblt1XSE9PXRoaXMuX3NlZ21lbnRzLmxlbmd0aHNbdV0pe2ModGhpcyx2KTticmVha319LGQucHJvdG90eXBlLmdldFBpY2tJZD1mdW5jdGlvbihlKXtyZXR1cm4gcih0aGlzLl9waWNrSWQpfHwodGhpcy5fcGlja0lkPWUuY3JlYXRlUGlja0lkKHtwcmltaXRpdmU6dGhpcyxjb2xsZWN0aW9uOnRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbixpZDp0aGlzLl9pZH0pKSx0aGlzLl9waWNrSWR9LGQucHJvdG90eXBlLl9jbGVhbj1mdW5jdGlvbigpe3RoaXMuX2RpcnR5PSExO2Zvcih2YXIgZT10aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZCx0PTA7Zy0xPnQ7Kyt0KWVbdF09MH0sZC5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9waWNrSWQ9dGhpcy5fcGlja0lkJiZ0aGlzLl9waWNrSWQuZGVzdHJveSgpLHRoaXMuX21hdGVyaWFsPXRoaXMuX21hdGVyaWFsJiZ0aGlzLl9tYXRlcmlhbC5kZXN0cm95KCksdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uPXZvaWQgMH0sZH0pLGRlZmluZSgiU2NlbmUvUG9seWxpbmVDb2xsZWN0aW9uIixbIi4uL0NvcmUvQm91bmRpbmdTcGhlcmUiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9Db21wb25lbnREYXRhdHlwZSIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRW5jb2RlZENhcnRlc2lhbjMiLCIuLi9Db3JlL0luZGV4RGF0YXR5cGUiLCIuLi9Db3JlL0ludGVyc2VjdCIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlIiwiLi4vUmVuZGVyZXIvY3JlYXRlU2hhZGVyU291cmNlIiwiLi4vUmVuZGVyZXIvRHJhd0NvbW1hbmQiLCIuLi9TaGFkZXJzL1BvbHlsaW5lQ29tbW9uIiwiLi4vU2hhZGVycy9Qb2x5bGluZUZTIiwiLi4vU2hhZGVycy9Qb2x5bGluZVZTIiwiLi9CbGVuZGluZ1N0YXRlIiwiLi9NYXRlcmlhbCIsIi4vUGFzcyIsIi4vUG9seWxpbmUiLCIuL1NjZW5lTW9kZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSxiLFMsVCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHgodCxpLG4scixvLHMsbCl7Zm9yKHZhciB1PXIubGVuZ3RoLGM9MCxkPSEwLGg9dC5fdmVydGV4QXJyYXlzLG09dC5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSxmPWgubGVuZ3RoLHA9MDtmPnA7KytwKWZvcih2YXIgdj1oW3BdLF89di5idWNrZXRzLHk9Xy5sZW5ndGgsQz0wO3k+QzsrK0Mpe2Zvcih2YXIgdyxFLFMseD1fW0NdLEE9eC5vZmZzZXQsUD1sP3guYnVja2V0LnNoYWRlclByb2dyYW06eC5idWNrZXQucGlja1NoYWRlclByb2dyYW0sST14LmJ1Y2tldC5wb2x5bGluZXMsRD1JLmxlbmd0aCxPPTAsUj0wO0Q+UjsrK1Ipe3ZhciBMPUlbUl0sTj1NKEwuX21hdGVyaWFsKTtpZihOIT09dyl7aWYoYSh3KSYmTz4wKXt2YXIgej1FLmlzVHJhbnNsdWNlbnQoKTtjPj11PyhTPW5ldyBnKHtvd25lcjp0fSksci5wdXNoKFMpKTpTPXJbY10sKytjLFMuYm91bmRpbmdWb2x1bWU9ZS5jbG9uZShqLFMuYm91bmRpbmdWb2x1bWUpLFMubW9kZWxNYXRyaXg9cyxTLnNoYWRlclByb2dyYW09UCxTLnZlcnRleEFycmF5PXYudmEsUy5yZW5kZXJTdGF0ZT16P3QuX3RyYW5zbHVjZW50UlM6dC5fb3BhcXVlUlMsUy5wYXNzPXo/Yi5UUkFOU0xVQ0VOVDpiLk9QQVFVRSxTLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPWw/bTohMSxTLnVuaWZvcm1NYXA9RS5fdW5pZm9ybXMsUy5jb3VudD1PLFMub2Zmc2V0PUEsQSs9TyxPPTAsZD0hMCxvLnB1c2goUyl9RT1MLl9tYXRlcmlhbCxFLnVwZGF0ZShpKSx3PU59Zm9yKHZhciBCPUwuX2xvY2F0b3JCdWNrZXRzLEY9Qi5sZW5ndGgsVj0wO0Y+VjsrK1Ype3ZhciBrPUJbVl07ay5sb2NhdG9yPT09eCYmKE8rPWsuY291bnQpfXZhciBVO24ubW9kZT09PVQuU0NFTkUzRD9VPUwuX2JvdW5kaW5nVm9sdW1lV0M6bi5tb2RlPT09VC5DT0xVTUJVU19WSUVXP1U9TC5fYm91bmRpbmdWb2x1bWUyRDpuLm1vZGU9PT1ULlNDRU5FMkQ/YShMLl9ib3VuZGluZ1ZvbHVtZTJEKSYmKFU9ZS5jbG9uZShMLl9ib3VuZGluZ1ZvbHVtZTJELFkpLFUuY2VudGVyLng9MCk6YShMLl9ib3VuZGluZ1ZvbHVtZVdDKSYmYShMLl9ib3VuZGluZ1ZvbHVtZTJEKSYmKFU9ZS51bmlvbihMLl9ib3VuZGluZ1ZvbHVtZVdDLEwuX2JvdW5kaW5nVm9sdW1lMkQsWSkpLGQ/KGQ9ITEsZS5jbG9uZShVLGopKTplLnVuaW9uKFUsaixqKX1hKHcpJiZPPjAmJihjPj11PyhTPW5ldyBnKHtvd25lcjp0fSksci5wdXNoKFMpKTpTPXJbY10sKytjLFMuYm91bmRpbmdWb2x1bWU9ZS5jbG9uZShqLFMuYm91bmRpbmdWb2x1bWUpLFMubW9kZWxNYXRyaXg9cyxTLnNoYWRlclByb2dyYW09UCxTLnZlcnRleEFycmF5PXYudmEsUy5yZW5kZXJTdGF0ZT1FLmlzVHJhbnNsdWNlbnQoKT90Ll90cmFuc2x1Y2VudFJTOnQuX29wYXF1ZVJTLFMucGFzcz1FLmlzVHJhbnNsdWNlbnQoKT9iLlRSQU5TTFVDRU5UOmIuT1BBUVVFLFMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWU9bD9tOiExLFMudW5pZm9ybU1hcD1FLl91bmlmb3JtcyxTLmNvdW50PU8sUy5vZmZzZXQ9QSxkPSEwLG8ucHVzaChTKSksdz12b2lkIDB9ci5sZW5ndGg9Y31mdW5jdGlvbiBBKGUpe2Zvcih2YXIgdD1lLl9idWZmZXJzVXNhZ2UsaT0hMSxuPWUuX3Byb3BlcnRpZXNDaGFuZ2VkLHI9MDtHLTI+cjsrK3Ipe3ZhciBvPXRbcl07bltyXT9vLmJ1ZmZlclVzYWdlIT09cC5TVFJFQU1fRFJBVz8oaT0hMCxvLmJ1ZmZlclVzYWdlPXAuU1RSRUFNX0RSQVcsby5mcmFtZUNvdW50PTEwMCk6by5mcmFtZUNvdW50PTEwMDpvLmJ1ZmZlclVzYWdlIT09cC5TVEFUSUNfRFJBVyYmKDA9PT1vLmZyYW1lQ291bnQ/KGk9ITAsby5idWZmZXJVc2FnZT1wLlNUQVRJQ19EUkFXKTpvLmZyYW1lQ291bnQtLSl9cmV0dXJuIGl9ZnVuY3Rpb24gUChlLHQsaSl7ZS5fY3JlYXRlVmVydGV4QXJyYXk9ITEsUihlKSxMKGUpLEkoZSk7dmFyIG4sbyxzPVtbXV0sbD1zWzBdLHU9WzBdLGM9MCxoPVtbXV0sZj0wLHY9ZS5fcG9seWxpbmVCdWNrZXRzO2ZvcihuIGluIHYpdi5oYXNPd25Qcm9wZXJ0eShuKSYmKG89dltuXSxvLnVwZGF0ZVNoYWRlcih0KSxmKz1vLmxlbmd0aE9mUG9zaXRpb25zKTtpZihmPjApe3ZhciBnLF89ZS5fbW9kZSx5PW5ldyBGbG9hdDMyQXJyYXkoMyo2KmYpLEM9bmV3IFVpbnQ4QXJyYXkoNCpmKSx3PW5ldyBGbG9hdDMyQXJyYXkoNCpmKSxFPTAsYj0wLFM9MDtmb3IobiBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkobikpe289dltuXSxvLndyaXRlKHksQyx3LEUsYixTLHQsaSksXz09PVQuTU9SUEhJTkcmJihhKGcpfHwoZz1uZXcgRmxvYXQzMkFycmF5KDMqNipmKSksby53cml0ZUZvck1vcnBoKGcsRSkpO3ZhciB4PW8ubGVuZ3RoT2ZQb3NpdGlvbnM7RSs9Myo2KngsYis9NCp4LFMrPTQqeCxjPW8udXBkYXRlSW5kaWNlcyhzLHUsaCxjKX12YXIgQT1lLl9idWZmZXJzVXNhZ2Vba10uYnVmZmVyVXNhZ2UsUD1lLl9idWZmZXJzVXNhZ2VbRl0uYnVmZmVyVXNhZ2UsTT1lLl9idWZmZXJzVXNhZ2VbVl0uYnVmZmVyVXNhZ2UsRD1QPT09cC5TVFJFQU1fRFJBV3x8TT09PXAuU1RSRUFNX0RSQVc/cC5TVFJFQU1fRFJBVzpwLlNUQVRJQ19EUkFXO2UuX3Bvc2l0aW9uQnVmZmVyPXQuY3JlYXRlVmVydGV4QnVmZmVyKHksQSk7dmFyIE87YShnKSYmKE89dC5jcmVhdGVWZXJ0ZXhCdWZmZXIoZyxBKSksZS5fcGlja0NvbG9yQnVmZmVyPXQuY3JlYXRlVmVydGV4QnVmZmVyKEMscC5TVEFUSUNfRFJBVyksZS5fdGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3dCdWZmZXI9dC5jcmVhdGVWZXJ0ZXhCdWZmZXIodyxEKTtmb3IodmFyIE49NCpVaW50OEFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULHo9MypGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQsQj00KkZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCxVPTAsVz1zLmxlbmd0aCxHPTA7Vz5HOysrRylpZihsPXNbR10sbC5sZW5ndGg+MCl7dmFyIHE9bmV3IFVpbnQxNkFycmF5KGwpLGo9dC5jcmVhdGVJbmRleEJ1ZmZlcihxLHAuU1RBVElDX0RSQVcsZC5VTlNJR05FRF9TSE9SVCk7VSs9dVtHXTt2YXIgWSxaLEosSyxRPTYqKEcqeiptLlNJWFRZX0ZPVVJfS0lMT0JZVEVTLVUqeiksJD16K1EsZXQ9eiskLHR0PXorZXQsaXQ9eit0dCxudD16K2l0LHJ0PUcqTiptLlNJWFRZX0ZPVVJfS0lMT0JZVEVTLVUqTixvdD1HKkIqbS5TSVhUWV9GT1VSX0tJTE9CWVRFUy1VKkIsYXQ9W3tpbmRleDpILnBvc2l0aW9uM0RIaWdoLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULG9mZnNldEluQnl0ZXM6USxzdHJpZGVJbkJ5dGVzOjYqen0se2luZGV4OkgucG9zaXRpb24zRExvdyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOiQsc3RyaWRlSW5CeXRlczo2Knp9LHtpbmRleDpILnBvc2l0aW9uMkRIaWdoLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULG9mZnNldEluQnl0ZXM6USxzdHJpZGVJbkJ5dGVzOjYqen0se2luZGV4OkgucG9zaXRpb24yRExvdyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOiQsc3RyaWRlSW5CeXRlczo2Knp9LHtpbmRleDpILnByZXZQb3NpdGlvbjNESGlnaCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOmV0LHN0cmlkZUluQnl0ZXM6Nip6fSx7aW5kZXg6SC5wcmV2UG9zaXRpb24zRExvdyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOnR0LHN0cmlkZUluQnl0ZXM6Nip6fSx7aW5kZXg6SC5wcmV2UG9zaXRpb24yREhpZ2gsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLGNvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsb2Zmc2V0SW5CeXRlczpldCxzdHJpZGVJbkJ5dGVzOjYqen0se2luZGV4OkgucHJldlBvc2l0aW9uMkRMb3csY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLGNvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsb2Zmc2V0SW5CeXRlczp0dCxzdHJpZGVJbkJ5dGVzOjYqen0se2luZGV4OkgubmV4dFBvc2l0aW9uM0RIaWdoLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULG9mZnNldEluQnl0ZXM6aXQsc3RyaWRlSW5CeXRlczo2Knp9LHtpbmRleDpILm5leHRQb3NpdGlvbjNETG93LGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myxjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULG9mZnNldEluQnl0ZXM6bnQsc3RyaWRlSW5CeXRlczo2Knp9LHtpbmRleDpILm5leHRQb3NpdGlvbjJESGlnaCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOml0LHN0cmlkZUluQnl0ZXM6Nip6fSx7aW5kZXg6SC5uZXh0UG9zaXRpb24yRExvdyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxvZmZzZXRJbkJ5dGVzOm50LHN0cmlkZUluQnl0ZXM6Nip6fSx7aW5kZXg6SC50ZXhDb29yZEV4cGFuZFdpZHRoQW5kU2hvdyxjb21wb25lbnRzUGVyQXR0cmlidXRlOjQsY29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCx2ZXJ0ZXhCdWZmZXI6ZS5fdGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3dCdWZmZXIsb2Zmc2V0SW5CeXRlczpvdH0se2luZGV4OkgucGlja0NvbG9yLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6NCxjb21wb25lbnREYXRhdHlwZTpyLlVOU0lHTkVEX0JZVEUsdmVydGV4QnVmZmVyOmUuX3BpY2tDb2xvckJ1ZmZlcixvZmZzZXRJbkJ5dGVzOnJ0LG5vcm1hbGl6ZTohMH1dO189PT1ULlNDRU5FM0Q/KFk9ZS5fcG9zaXRpb25CdWZmZXIsWj0idmVydGV4QnVmZmVyIixKPVgsSz0idmFsdWUiKTpfPT09VC5TQ0VORTJEfHxfPT09VC5DT0xVTUJVU19WSUVXPyhZPVgsWj0idmFsdWUiLEo9ZS5fcG9zaXRpb25CdWZmZXIsSz0idmVydGV4QnVmZmVyIik6KFk9TyxaPSJ2ZXJ0ZXhCdWZmZXIiLEo9ZS5fcG9zaXRpb25CdWZmZXIsSz0idmVydGV4QnVmZmVyIiksYXRbMF1bWl09WSxhdFsxXVtaXT1ZLGF0WzJdW0tdPUosYXRbM11bS109SixhdFs0XVtaXT1ZLGF0WzVdW1pdPVksYXRbNl1bS109SixhdFs3XVtLXT1KLGF0WzhdW1pdPVksYXRbOV1bWl09WSxhdFsxMF1bS109SixhdFsxMV1bS109Sjt2YXIgc3Q9dC5jcmVhdGVWZXJ0ZXhBcnJheShhdCxqKTtlLl92ZXJ0ZXhBcnJheXMucHVzaCh7dmE6c3QsYnVja2V0czpoW0ddfSl9fX1mdW5jdGlvbiBNKGUpe3ZhciB0PUUuX3VuaWZvcm1MaXN0W2UudHlwZV0saT10Lmxlbmd0aDtaLmxlbmd0aD0yKmk7Zm9yKHZhciBuPTAscj0wO2k+cjsrK3Ipe3ZhciBvPXRbcl07WltuXT1vLFpbbisxXT1lLl91bmlmb3Jtc1tvXSgpLG4rPTJ9cmV0dXJuIGUudHlwZSsiOiIrSlNPTi5zdHJpbmdpZnkoWil9ZnVuY3Rpb24gSShlKXtmb3IodmFyIHQ9ZS5fbW9kZSxpPWUuX21vZGVsTWF0cml4LG49ZS5fcG9seWxpbmVCdWNrZXRzPXt9LHI9ZS5fcG9seWxpbmVzLG89ci5sZW5ndGgscz0wO28+czsrK3Mpe3ZhciBsPXJbc107aWYobC5wb3NpdGlvbnMubGVuZ3RoPjEpe2wudXBkYXRlKCk7dmFyIHU9bC5tYXRlcmlhbCxjPW5bdS50eXBlXTthKGMpfHwoYz1uW3UudHlwZV09bmV3IEoodSx0LGkpKSxjLmFkZFBvbHlsaW5lKGwpfX19ZnVuY3Rpb24gRChlLHQpe3ZhciBpPXQubW9kZTtlLl9tb2RlPT09aSYmZi5lcXVhbHMoZS5fbW9kZWxNYXRyaXgsZS5tb2RlbE1hdHJpeCl8fChlLl9tb2RlPWksZS5fbW9kZWxNYXRyaXg9Zi5jbG9uZShlLm1vZGVsTWF0cml4KSxlLl9jcmVhdGVWZXJ0ZXhBcnJheT0hMCl9ZnVuY3Rpb24gTyhlKXtpZihlLl9wb2x5bGluZXNSZW1vdmVkKXtlLl9wb2x5bGluZXNSZW1vdmVkPSExO2Zvcih2YXIgdD1bXSxpPWUuX3BvbHlsaW5lcy5sZW5ndGgsbj0wLHI9MDtpPm47KytuKXt2YXIgbz1lLl9wb2x5bGluZXNbbl07YShvKSYmKG8uX2luZGV4PXIrKyx0LnB1c2gobykpfWUuX3BvbHlsaW5lcz10fX1mdW5jdGlvbiBSKGUpe2Zvcih2YXIgdD1lLl9wb2x5bGluZXMsaT10Lmxlbmd0aCxuPTA7aT5uOysrbilpZihhKHRbbl0pKXt2YXIgcj10W25dLl9idWNrZXQ7YShyKSYmKHIuc2hhZGVyUHJvZ3JhbT1yLnNoYWRlclByb2dyYW0mJnIuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCkpfX1mdW5jdGlvbiBMKGUpe2Zvcih2YXIgdD1lLl92ZXJ0ZXhBcnJheXMubGVuZ3RoLGk9MDt0Pmk7KytpKWUuX3ZlcnRleEFycmF5c1tpXS52YS5kZXN0cm95KCk7ZS5fdmVydGV4QXJyYXlzLmxlbmd0aD0wfWZ1bmN0aW9uIE4oZSl7Zm9yKHZhciB0PWUuX3BvbHlsaW5lcyxpPXQubGVuZ3RoLG49MDtpPm47KytuKWEodFtuXSkmJnRbbl0uX2Rlc3Ryb3koKX1mdW5jdGlvbiB6KGUsdCxpKXt0aGlzLmNvdW50PWUsdGhpcy5vZmZzZXQ9dCx0aGlzLmJ1Y2tldD1pfWZ1bmN0aW9uIEIoZSl7cmV0dXJuIHQuZG90KHQuVU5JVF9YLGUuX2JvdW5kaW5nVm9sdW1lLmNlbnRlcik8MHx8ZS5fYm91bmRpbmdWb2x1bWUuaW50ZXJzZWN0KGkuVU5JVF9ZKT09PWguSU5URVJTRUNUSU5HfXZhciBGPVMuU0hPV19JTkRFWCxWPVMuV0lEVEhfSU5ERVgsaz1TLlBPU0lUSU9OX0lOREVYLFU9Uy5NQVRFUklBTF9JTkRFWCxXPVMuUE9TSVRJT05fU0laRV9JTkRFWCxHPVMuTlVNQkVSX09GX1BST1BFUlRJRVMsSD17dGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3c6MCxwb3NpdGlvbjNESGlnaDoxLHBvc2l0aW9uM0RMb3c6Mixwb3NpdGlvbjJESGlnaDozLHBvc2l0aW9uMkRMb3c6NCxwcmV2UG9zaXRpb24zREhpZ2g6NSxwcmV2UG9zaXRpb24zRExvdzo2LHByZXZQb3NpdGlvbjJESGlnaDo3LHByZXZQb3NpdGlvbjJETG93OjgsbmV4dFBvc2l0aW9uM0RIaWdoOjksbmV4dFBvc2l0aW9uM0RMb3c6MTAsbmV4dFBvc2l0aW9uMkRIaWdoOjExLG5leHRQb3NpdGlvbjJETG93OjEyLHBpY2tDb2xvcjoxM30scT1mdW5jdGlvbihlKXtlPW8oZSxvLkVNUFRZX09CSkVDVCksdGhpcy5tb2RlbE1hdHJpeD1mLmNsb25lKG8oZS5tb2RlbE1hdHJpeCxmLklERU5USVRZKSksdGhpcy5fbW9kZWxNYXRyaXg9Zi5jbG9uZShmLklERU5USVRZKSx0aGlzLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPW8oZS5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSwhMSksdGhpcy5fb3BhcXVlUlM9dm9pZCAwLHRoaXMuX3RyYW5zbHVjZW50UlM9dm9pZCAwLHRoaXMuX2NvbG9yQ29tbWFuZHM9W10sdGhpcy5fcGlja0NvbW1hbmRzPVtdLHRoaXMuX3BvbHlsaW5lc1VwZGF0ZWQ9ITEsdGhpcy5fcG9seWxpbmVzUmVtb3ZlZD0hMSx0aGlzLl9jcmVhdGVWZXJ0ZXhBcnJheT0hMSx0aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZD1uZXcgVWludDMyQXJyYXkoRyksdGhpcy5fcG9seWxpbmVzPVtdLHRoaXMuX3BvbHlsaW5lQnVja2V0cz17fSx0aGlzLl9idWZmZXJzVXNhZ2U9W3tidWZmZXJVc2FnZTpwLlNUQVRJQ19EUkFXLGZyYW1lQ291bnQ6MH0se2J1ZmZlclVzYWdlOnAuU1RBVElDX0RSQVcsZnJhbWVDb3VudDowfSx7YnVmZmVyVXNhZ2U6cC5TVEFUSUNfRFJBVyxmcmFtZUNvdW50OjB9XSx0aGlzLl9tb2RlPXZvaWQgMCx0aGlzLl9wb2x5bGluZXNUb1VwZGF0ZT1bXSx0aGlzLl92ZXJ0ZXhBcnJheXM9W10sdGhpcy5fcG9zaXRpb25CdWZmZXI9dm9pZCAwLHRoaXMuX3BpY2tDb2xvckJ1ZmZlcj12b2lkIDAsdGhpcy5fdGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3dCdWZmZXI9dm9pZCAwfTtzKHEucHJvdG90eXBlLHtsZW5ndGg6e2dldDpmdW5jdGlvbigpe3JldHVybiBPKHRoaXMpLHRoaXMuX3BvbHlsaW5lcy5sZW5ndGh9fX0pLHEucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgUyhlLHRoaXMpO3JldHVybiB0Ll9pbmRleD10aGlzLl9wb2x5bGluZXMubGVuZ3RoLHRoaXMuX3BvbHlsaW5lcy5wdXNoKHQpLHRoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSEwLHR9LHEucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXtpZih0aGlzLmNvbnRhaW5zKGUpKXtpZih0aGlzLl9wb2x5bGluZXNbZS5faW5kZXhdPXZvaWQgMCx0aGlzLl9wb2x5bGluZXNSZW1vdmVkPSEwLHRoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSEwLGEoZS5fYnVja2V0KSl7dmFyIHQ9ZS5fYnVja2V0O3Quc2hhZGVyUHJvZ3JhbT10LnNoYWRlclByb2dyYW0mJnQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksdC5waWNrU2hhZGVyUHJvZ3JhbT10LnBpY2tTaGFkZXJQcm9ncmFtJiZ0LnBpY2tTaGFkZXJQcm9ncmFtLmRlc3Ryb3koKX1yZXR1cm4gZS5fZGVzdHJveSgpLCEwfXJldHVybiExfSxxLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24oKXtSKHRoaXMpLE4odGhpcyksdGhpcy5fcG9seWxpbmVCdWNrZXRzPXt9LHRoaXMuX3BvbHlsaW5lc1JlbW92ZWQ9ITEsdGhpcy5fcG9seWxpbmVzLmxlbmd0aD0wLHRoaXMuX3BvbHlsaW5lc1RvVXBkYXRlLmxlbmd0aD0wLHRoaXMuX2NyZWF0ZVZlcnRleEFycmF5PSEwfSxxLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4gYShlKSYmZS5fcG9seWxpbmVDb2xsZWN0aW9uPT09dGhpc30scS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiBPKHRoaXMpLHRoaXMuX3BvbHlsaW5lc1tlXX0scS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxpKXtpZihPKHRoaXMpLDAhPT10aGlzLl9wb2x5bGluZXMubGVuZ3RoKXtEKHRoaXMsdCk7dmFyIG4scj10Lm1hcFByb2plY3Rpb24sbz10aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZDtpZih0aGlzLl9jcmVhdGVWZXJ0ZXhBcnJheXx8QSh0aGlzKSlQKHRoaXMsZSxyKTtlbHNlIGlmKHRoaXMuX3BvbHlsaW5lc1VwZGF0ZWQpe3ZhciBzPXRoaXMuX3BvbHlsaW5lc1RvVXBkYXRlO2lmKHRoaXMuX21vZGUhPT1ULlNDRU5FM0QpZm9yKHZhciBsPXMubGVuZ3RoLHU9MDtsPnU7Kyt1KW49c1t1XSxuLnVwZGF0ZSgpO2lmKG9bV118fG9bVV0pUCh0aGlzLGUscik7ZWxzZSBmb3IodmFyIGM9cy5sZW5ndGgsZD10aGlzLl9wb2x5bGluZUJ1Y2tldHMsaD0wO2M+aDsrK2gpe249c1toXSxvPW4uX3Byb3BlcnRpZXNDaGFuZ2VkO3ZhciBtPW4uX2J1Y2tldCxwPTA7Zm9yKHZhciB2IGluIGQpaWYoZC5oYXNPd25Qcm9wZXJ0eSh2KSl7aWYoZFt2XT09PW0peyhvW2tdfHxvW0ZdfHxvW1ZdKSYmbS53cml0ZVVwZGF0ZShwLG4sdGhpcy5fcG9zaXRpb25CdWZmZXIsdGhpcy5fdGV4Q29vcmRFeHBhbmRXaWR0aEFuZFNob3dCdWZmZXIscik7YnJlYWt9cCs9ZFt2XS5sZW5ndGhPZlBvc2l0aW9uc31uLl9jbGVhbigpfXMubGVuZ3RoPTAsdGhpcy5fcG9seWxpbmVzVXBkYXRlZD0hMX1vPXRoaXMuX3Byb3BlcnRpZXNDaGFuZ2VkO2Zvcih2YXIgZz0wO0c+ZzsrK2cpb1tnXT0wO3ZhciBfPWYuSURFTlRJVFk7dC5tb2RlPT09VC5TQ0VORTNEJiYoXz10aGlzLm1vZGVsTWF0cml4KTt2YXIgeT10LnBhc3NlcyxDPTAhPT10Lm1vcnBoVGltZTtpZihhKHRoaXMuX29wYXF1ZVJTKSYmdGhpcy5fb3BhcXVlUlMuZGVwdGhUZXN0LmVuYWJsZWQ9PT1DfHwodGhpcy5fb3BhcXVlUlM9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7ZGVwdGhNYXNrOkMsZGVwdGhUZXN0OntlbmFibGVkOkN9fSkpLGEodGhpcy5fdHJhbnNsdWNlbnRSUykmJnRoaXMuX3RyYW5zbHVjZW50UlMuZGVwdGhUZXN0LmVuYWJsZWQ9PT1DfHwodGhpcy5fdHJhbnNsdWNlbnRSUz1lLmNyZWF0ZVJlbmRlclN0YXRlKHtibGVuZGluZzp3LkFMUEhBX0JMRU5ELGRlcHRoTWFzazohQyxkZXB0aFRlc3Q6e2VuYWJsZWQ6Q319KSkseS5yZW5kZXIpe3ZhciBFPXRoaXMuX2NvbG9yQ29tbWFuZHM7eCh0aGlzLGUsdCxFLGksXywhMCl9aWYoeS5waWNrKXt2YXIgYj10aGlzLl9waWNrQ29tbWFuZHM7eCh0aGlzLGUsdCxiLGksXywhMSl9fX07dmFyIGo9bmV3IGUsWT1uZXcgZTtxLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxxLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIEwodGhpcyksUih0aGlzKSxOKHRoaXMpLGwodGhpcyl9O3ZhciBYPVswLDAsMF0sWj1bXTtxLnByb3RvdHlwZS5fdXBkYXRlUG9seWxpbmU9ZnVuY3Rpb24oZSx0KXt0aGlzLl9wb2x5bGluZXNVcGRhdGVkPSEwLHRoaXMuX3BvbHlsaW5lc1RvVXBkYXRlLnB1c2goZSksKyt0aGlzLl9wcm9wZXJ0aWVzQ2hhbmdlZFt0XX07dmFyIEo9ZnVuY3Rpb24oZSx0LGkpe3RoaXMucG9seWxpbmVzPVtdLHRoaXMubGVuZ3RoT2ZQb3NpdGlvbnM9MCx0aGlzLm1hdGVyaWFsPWUsdGhpcy5zaGFkZXJQcm9ncmFtPXZvaWQgMCx0aGlzLnBpY2tTaGFkZXJQcm9ncmFtPXZvaWQgMCx0aGlzLm1vZGU9dCx0aGlzLm1vZGVsTWF0cml4PWl9O0oucHJvdG90eXBlLmFkZFBvbHlsaW5lPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucG9seWxpbmVzO3QucHVzaChlKSxlLl9hY3R1YWxMZW5ndGg9dGhpcy5nZXRQb2x5bGluZVBvc2l0aW9uc0xlbmd0aChlKSx0aGlzLmxlbmd0aE9mUG9zaXRpb25zKz1lLl9hY3R1YWxMZW5ndGgsZS5fYnVja2V0PXRoaXN9LEoucHJvdG90eXBlLnVwZGF0ZVNoYWRlcj1mdW5jdGlvbihlKXtpZighYSh0aGlzLnNoYWRlclByb2dyYW0pKXt2YXIgdD12KHtzb3VyY2VzOltfLENdfSksaT12KHtzb3VyY2VzOlt0aGlzLm1hdGVyaWFsLnNoYWRlclNvdXJjZSx5XX0pLG49dih7c291cmNlczpbaV0scGlja0NvbG9yUXVhbGlmaWVyOiJ2YXJ5aW5nIn0pO3RoaXMuc2hhZGVyUHJvZ3JhbT1lLmNyZWF0ZVNoYWRlclByb2dyYW0odCxpLEgpLHRoaXMucGlja1NoYWRlclByb2dyYW09ZS5jcmVhdGVTaGFkZXJQcm9ncmFtKHQsbixIKX19LEoucHJvdG90eXBlLmdldFBvbHlsaW5lUG9zaXRpb25zTGVuZ3RoPWZ1bmN0aW9uKGUpe3ZhciB0O2lmKHRoaXMubW9kZT09PVQuU0NFTkUzRHx8IUIoZSkpcmV0dXJuIHQ9ZS5wb3NpdGlvbnMubGVuZ3RoLDQqdC00O3ZhciBpPTAsbj1lLl9zZWdtZW50cy5sZW5ndGhzO3Q9bi5sZW5ndGg7Zm9yKHZhciByPTA7dD5yOysrcilpKz00Km5bcl0tNDtyZXR1cm4gaX07dmFyIEs9bmV3IHQsUT1uZXcgdCwkPW5ldyB0LGV0PW5ldyB0O0oucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGUsaSxyLG8sYSxzLGwsdSl7Zm9yKHZhciBkPXRoaXMubW9kZSxoPXRoaXMucG9seWxpbmVzLG09aC5sZW5ndGgsZj0wO20+ZjsrK2YpZm9yKHZhciBwLHY9aFtmXSxnPXYud2lkdGgsXz12LnNob3cmJmc+MCx5PXRoaXMuZ2V0U2VnbWVudHModix1KSxDPXkucG9zaXRpb25zLHc9eS5sZW5ndGhzLEU9Qy5sZW5ndGgsYj12LmdldFBpY2tJZChsKS5jb2xvcixTPTAseD0wLEE9MDtFPkE7KytBKXswPT09QT92Ll9sb29wP3A9Q1tFLTJdOihwPWV0LHQuc3VidHJhY3QoQ1swXSxDWzFdLHApLHQuYWRkKENbMF0scCxwKSk6cD1DW0EtMV0sUS54PXAueCxRLnk9cC55LFEuej1kIT09VC5TQ0VORTJEP3AuejowLHA9Q1tBXSxLLng9cC54LEsueT1wLnksSy56PWQhPT1ULlNDRU5FMkQ/cC56OjAsQT09PUUtMT92Ll9sb29wP3A9Q1sxXToocD1ldCx0LnN1YnRyYWN0KENbRS0xXSxDW0UtMl0scCksdC5hZGQoQ1tFLTFdLHAscCkpOnA9Q1tBKzFdLCQueD1wLngsJC55PXAueSwkLno9ZCE9PVQuU0NFTkUyRD9wLno6MDt2YXIgUD13W1NdO0E9PT14K1AmJih4Kz1QLCsrUyk7Zm9yKHZhciBNPTA9PT1BLXgsST1BPT09eCt3W1NdLTEsRD1NPzI6MCxPPUk/Mjo0LFI9RDtPPlI7KytSKXtjLndyaXRlRWxlbWVudHMoSyxlLG8pLGMud3JpdGVFbGVtZW50cyhRLGUsbys2KSxjLndyaXRlRWxlbWVudHMoJCxlLG8rMTIpLGlbYV09bi5mbG9hdFRvQnl0ZShiLnJlZCksaVthKzFdPW4uZmxvYXRUb0J5dGUoYi5ncmVlbiksaVthKzJdPW4uZmxvYXRUb0J5dGUoYi5ibHVlKSxpW2ErM109bi5mbG9hdFRvQnl0ZShiLmFscGhhKTt2YXIgTD0wPlItMj8tMToxO3Jbc109QS8oRS0xKSxyW3MrMV09MiooUiUyKS0xLHJbcysyXT1MKmcscltzKzNdPV8sbys9MTgsYSs9NCxzKz00fX19O3ZhciB0dD1uZXcgdCxpdD1uZXcgdCxudD1uZXcgdCxydD1uZXcgdDtKLnByb3RvdHlwZS53cml0ZUZvck1vcnBoPWZ1bmN0aW9uKGUsaSl7Zm9yKHZhciBuPXRoaXMubW9kZWxNYXRyaXgscj10aGlzLnBvbHlsaW5lcyxvPXIubGVuZ3RoLGE9MDtvPmE7KythKWZvcih2YXIgcz1yW2FdLGw9cy5fc2VnbWVudHMucG9zaXRpb25zLHU9cy5fc2VnbWVudHMubGVuZ3RocyxkPWwubGVuZ3RoLGg9MCxtPTAscD0wO2Q+cDsrK3Ape3ZhciB2OzA9PT1wP3MuX2xvb3A/dj1sW2QtMl06KHY9cnQsdC5zdWJ0cmFjdChsWzBdLGxbMV0sdiksdC5hZGQobFswXSx2LHYpKTp2PWxbcC0xXSx2PWYubXVsdGlwbHlCeVBvaW50KG4sdixpdCk7dmFyIGcsXz1mLm11bHRpcGx5QnlQb2ludChuLGxbcF0sdHQpO3A9PT1kLTE/cy5fbG9vcD9nPWxbMV06KGc9cnQsdC5zdWJ0cmFjdChsW2QtMV0sbFtkLTJdLGcpLHQuYWRkKGxbZC0xXSxnLGcpKTpnPWxbcCsxXSxnPWYubXVsdGlwbHlCeVBvaW50KG4sZyxudCk7dmFyIHk9dVtoXTtwPT09bSt5JiYobSs9eSwrK2gpO2Zvcih2YXIgQz0wPT09cC1tLHc9cD09PW0rdVtoXS0xLEU9Qz8yOjAsYj13PzI6NCxTPUU7Yj5TOysrUyljLndyaXRlRWxlbWVudHMoXyxlLGkpLGMud3JpdGVFbGVtZW50cyh2LGUsaSs2KSxjLndyaXRlRWxlbWVudHMoZyxlLGkrMTIpLGkrPTE4fX07dmFyIG90PW5ldyBBcnJheSgxKTtKLnByb3RvdHlwZS51cGRhdGVJbmRpY2VzPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPWkubGVuZ3RoLTEsbz1uZXcgeigwLG4sdGhpcyk7aVtyXS5wdXNoKG8pO3ZhciBhPTAscz1lW2UubGVuZ3RoLTFdLGw9MDtzLmxlbmd0aD4wJiYobD1zW3MubGVuZ3RoLTFdKzEpO2Zvcih2YXIgdT10aGlzLnBvbHlsaW5lcyxjPXUubGVuZ3RoLGQ9MDtjPmQ7KytkKXt2YXIgaD11W2RdO2guX2xvY2F0b3JCdWNrZXRzPVtdO3ZhciBmO2lmKHRoaXMubW9kZT09PVQuU0NFTkUzRCl7Zj1vdDt2YXIgcD1oLnBvc2l0aW9ucy5sZW5ndGg7aWYoIShwPjApKWNvbnRpbnVlO2ZbMF09cH1lbHNlIGY9aC5fc2VnbWVudHMubGVuZ3Roczt2YXIgdj1mLmxlbmd0aDtpZih2PjApe2Zvcih2YXIgZz0wLF89MDt2Pl87KytfKWZvcih2YXIgeT1mW19dLTEsQz0wO3k+QzsrK0MpbCs0Pj1tLlNJWFRZX0ZPVVJfS0lMT0JZVEVTLTEmJihoLl9sb2NhdG9yQnVja2V0cy5wdXNoKHtsb2NhdG9yOm8sY291bnQ6Z30pLGc9MCx0LnB1c2goNCkscz1bXSxlLnB1c2gocyksbD0wLG8uY291bnQ9YSxhPTAsbj0wLG89bmV3IHooMCwwLHRoaXMpLGlbKytyXT1bb10pLHMucHVzaChsLGwrMixsKzEpLHMucHVzaChsKzEsbCsyLGwrMyksZys9NixhKz02LG4rPTYsbCs9NDtoLl9sb2NhdG9yQnVja2V0cy5wdXNoKHtsb2NhdG9yOm8sY291bnQ6Z30pLGwrND49bS5TSVhUWV9GT1VSX0tJTE9CWVRFUy0xJiYodC5wdXNoKDApLHM9W10sZS5wdXNoKHMpLGw9MCxvLmNvdW50PWEsbj0wLGE9MCxvPW5ldyB6KDAsMCx0aGlzKSxpWysrcl09W29dKX1oLl9jbGVhbigpfXJldHVybiBvLmNvdW50PWEsbn0sSi5wcm90b3R5cGUuZ2V0UG9seWxpbmVTdGFydEluZGV4PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLnBvbHlsaW5lcyxpPTAsbj10Lmxlbmd0aCxyPTA7bj5yOysrcil7dmFyIG89dFtyXTtpZihvPT09ZSlicmVhaztpKz1vLl9hY3R1YWxMZW5ndGh9cmV0dXJuIGl9O3ZhciBhdD17cG9zaXRpb25zOnZvaWQgMCxsZW5ndGhzOnZvaWQgMH0sc3Q9bmV3IEFycmF5KDEpLGx0PW5ldyB0O0oucHJvdG90eXBlLmdldFNlZ21lbnRzPWZ1bmN0aW9uKGksbil7dmFyIHI9aS5wb3NpdGlvbnM7aWYodGhpcy5tb2RlPT09VC5TQ0VORTNEKXJldHVybiBzdFswXT1yLmxlbmd0aCxhdC5wb3NpdGlvbnM9cixhdC5sZW5ndGhzPXN0LGF0O0IoaSkmJihyPWkuX3NlZ21lbnRzLnBvc2l0aW9ucyk7Zm9yKHZhciBvLGE9bi5lbGxpcHNvaWQscz1bXSxsPXRoaXMubW9kZWxNYXRyaXgsdT1yLmxlbmd0aCxjPWx0LGQ9MDt1PmQ7KytkKW89cltkXSxjPWYubXVsdGlwbHlCeVBvaW50KGwsbyxjKSxzLnB1c2gobi5wcm9qZWN0KGEuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoYykpKTtpZihzLmxlbmd0aD4wKXtpLl9ib3VuZGluZ1ZvbHVtZTJEPWUuZnJvbVBvaW50cyhzLGkuX2JvdW5kaW5nVm9sdW1lMkQpO3ZhciBoPWkuX2JvdW5kaW5nVm9sdW1lMkQuY2VudGVyO2kuX2JvdW5kaW5nVm9sdW1lMkQuY2VudGVyPW5ldyB0KGgueixoLngsaC55KX1yZXR1cm4gYXQucG9zaXRpb25zPXMsYXQubGVuZ3Rocz1pLl9zZWdtZW50cy5sZW5ndGhzLGF0fTt2YXIgdXQsY3Q7cmV0dXJuIEoucHJvdG90eXBlLndyaXRlVXBkYXRlPWZ1bmN0aW9uKGUsaSxuLHIsbyl7dmFyIHM9dGhpcy5tb2RlLGw9aS5fYWN0dWFsTGVuZ3RoO2lmKGwpe2UrPXRoaXMuZ2V0UG9seWxpbmVTdGFydEluZGV4KGkpO3ZhciB1PXV0LGQ9Y3QsaD0zKjYqbDshYSh1KXx8dS5sZW5ndGg8aD8odT11dD1uZXcgRmxvYXQzMkFycmF5KGgpLGQ9Y3Q9bmV3IEZsb2F0MzJBcnJheSg0KmwpKTp1Lmxlbmd0aD5oJiYodT1uZXcgRmxvYXQzMkFycmF5KHUuYnVmZmVyLDAsaCksZD1uZXcgRmxvYXQzMkFycmF5KGQuYnVmZmVyLDAsNCpsKSk7dmFyIG0sZj0wLHA9MCx2PXRoaXMuZ2V0U2VnbWVudHMoaSxvKSxnPXYucG9zaXRpb25zLF89di5sZW5ndGhzLHk9MCxDPTAsdz1pLndpZHRoLEU9aS5zaG93JiZ3PjA7bD1nLmxlbmd0aDtmb3IodmFyIGI9MDtsPmI7KytiKXswPT09Yj9pLl9sb29wP209Z1tsLTJdOihtPWV0LHQuc3VidHJhY3QoZ1swXSxnWzFdLG0pLHQuYWRkKGdbMF0sbSxtKSk6bT1nW2ItMV0sUS54PW0ueCxRLnk9bS55LFEuej1zIT09VC5TQ0VORTJEP20uejowLG09Z1tiXSxLLng9bS54LEsueT1tLnksSy56PXMhPT1ULlNDRU5FMkQ/bS56OjAsYj09PWwtMT9pLl9sb29wP209Z1sxXToobT1ldCx0LnN1YnRyYWN0KGdbbC0xXSxnW2wtMl0sbSksdC5hZGQoZ1tsLTFdLG0sbSkpOm09Z1tiKzFdLCQueD1tLngsJC55PW0ueSwkLno9cyE9PVQuU0NFTkUyRD9tLno6MDt2YXIgUz1fW3ldO2I9PT1DK1MmJihDKz1TLCsreSk7Zm9yKHZhciB4PTA9PT1iLUMsQT1iPT09QytfW3ldLTEsUD14PzI6MCxNPUE/Mjo0LEk9UDtNPkk7KytJKXtjLndyaXRlRWxlbWVudHMoSyx1LGYpLGMud3JpdGVFbGVtZW50cyhRLHUsZis2KSxjLndyaXRlRWxlbWVudHMoJCx1LGYrMTIpO3ZhciBEPTA+SS0yPy0xOjE7ZFtwXT1iLyhsLTEpLGRbcCsxXT0yKihJJTIpLTEsZFtwKzJdPUQqdyxkW3ArM109RSxmKz0xOCxwKz00fX1uLmNvcHlGcm9tQXJyYXlWaWV3KHUsMTgqRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKmUpLHIuY29weUZyb21BcnJheVZpZXcoZCw0KkZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCplKX19LHF9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1BhdGhWaXN1YWxpemVyIixbIi4uL0NvcmUvQXNzb2NpYXRpdmVBcnJheSIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0p1bGlhbkRhdGUiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1JlZmVyZW5jZUZyYW1lIiwiLi4vQ29yZS9UaW1lSW50ZXJ2YWwiLCIuLi9Db3JlL1RyYW5zZm9ybXMiLCIuLi9TY2VuZS9Qb2x5bGluZUNvbGxlY3Rpb24iLCIuLi9TY2VuZS9TY2VuZU1vZGUiLCIuL0NvbXBvc2l0ZVBvc2l0aW9uUHJvcGVydHkiLCIuL0NvbnN0YW50UG9zaXRpb25Qcm9wZXJ0eSIsIi4vTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vUHJvcGVydHkiLCIuL1JlZmVyZW5jZVByb3BlcnR5IiwiLi9TYW1wbGVkUG9zaXRpb25Qcm9wZXJ0eSIsIi4vVGltZUludGVydmFsQ29sbGVjdGlvblBvc2l0aW9uUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHkpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBDKGUsdCxuLHIsYSxzLGwsdSl7dmFyIGMsZD1lLl9wcm9wZXJ0eS5fdGltZXMsaD1sO2M9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUodCxhLHVbaF0pLGkoYykmJih1W2grK109Yyk7Zm9yKHZhciBtLGYscCx2PSFpKHIpfHxvLmxlc3NUaGFuT3JFcXVhbHMocix0KXx8by5ncmVhdGVyVGhhbk9yRXF1YWxzKHIsbiksZz0wLF89ZC5sZW5ndGgseT1kW2ddLEM9bix3PSExO18+Zzspe2lmKCF2JiZvLmdyZWF0ZXJUaGFuT3JFcXVhbHMoeSxyKSYmKGM9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUocixhLHVbaF0pLGkoYykmJih1W2grK109Yyksdj0hMCksby5ncmVhdGVyVGhhbih5LHQpJiZvLmxlc3NUaGFuKHksQykmJiF5LmVxdWFscyhyKSYmKGM9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUoeSxhLHVbaF0pLGkoYykmJih1W2grK109YykpLF8tMT5nKXtpZihzPjAmJiF3KXt2YXIgRT1kW2crMV0sYj1vLnNlY29uZHNEaWZmZXJlbmNlKEUseSk7dz1iPnMsdyYmKG09TWF0aC5jZWlsKGIvcyksZj0wLHA9Yi9NYXRoLm1heChtLDIpLG09TWF0aC5tYXgobS0xLDEpKX1pZih3JiZtPmYpe3k9by5hZGRTZWNvbmRzKHkscCxuZXcgbyksZisrO2NvbnRpbnVlfX13PSExLGcrKyx5PWRbZ119cmV0dXJuIGM9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUobixhLHVbaF0pLGkoYykmJih1W2grK109YyksaH1mdW5jdGlvbiB3KGUsdCxuLHIsYSxzLGwsdSl7Zm9yKHZhciBjLGQ9MCxoPWwsbT10LGY9TWF0aC5tYXgocyw2MCkscD0haShyKXx8by5sZXNzVGhhbk9yRXF1YWxzKHIsdCl8fG8uZ3JlYXRlclRoYW5PckVxdWFscyhyLG4pO28ubGVzc1RoYW4obSxuKTspIXAmJm8uZ3JlYXRlclRoYW5PckVxdWFscyhtLHIpJiYocD0hMCxjPWUuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKHIsYSx1W2hdKSxpKGMpJiYodVtoXT1jLGgrKykpLGM9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUobSxhLHVbaF0pLGkoYykmJih1W2hdPWMsaCsrKSxkKyssbT1vLmFkZFNlY29uZHModCxmKmQsbmV3IG8pO3JldHVybiBjPWUuZ2V0VmFsdWVJblJlZmVyZW5jZUZyYW1lKG4sYSx1W2hdKSxpKGMpJiYodVtoXT1jLGgrKyksaH1mdW5jdGlvbiBFKGUsdCxuLHIsYSxzLGwsYyl7SS5zdGFydD10LEkuc3RvcD1uO2Zvcih2YXIgZD1sLGg9ZS5pbnRlcnZhbHMsbT0wO208aC5sZW5ndGg7bSsrKXt2YXIgZj1oLmdldChtKTtpZighdS5pbnRlcnNlY3QoZixJLFApLmlzRW1wdHkpe3ZhciBwPWYuc3RhcnQ7Zi5pc1N0YXJ0SW5jbHVkZWR8fChwPWYuaXNTdG9wSW5jbHVkZWQ/Zi5zdG9wOm8uYWRkU2Vjb25kcyhmLnN0YXJ0LG8uc2Vjb25kc0RpZmZlcmVuY2UoZi5zdG9wLGYuc3RhcnQpLzIsbmV3IG8pKTt2YXIgdj1lLmdldFZhbHVlSW5SZWZlcmVuY2VGcmFtZShwLGEsY1tkXSk7aSh2KSYmKGNbZF09dixkKyspfX1yZXR1cm4gZH1mdW5jdGlvbiBiKGUsdCxuLHIsbyxhLHMsbCl7dmFyIHU9ZS5nZXRWYWx1ZUluUmVmZXJlbmNlRnJhbWUodCxvLGxbc10pO3JldHVybiBpKHUpJiYobFtzKytdPXUpLHN9ZnVuY3Rpb24gUyhlLHQsaSxuLHIsYSxzLGwpe00uc3RhcnQ9dCxNLnN0b3A9aTtmb3IodmFyIGM9cyxkPWUuaW50ZXJ2YWxzLGg9MDtoPGQubGVuZ3RoO2grKyl7dmFyIHA9ZC5nZXQoaCk7aWYoIXUuaW50ZXJzZWN0KHAsTSxQKS5pc0VtcHR5KXt2YXIgdj1wLnN0YXJ0LFQ9cC5zdG9wLHg9dDtvLmdyZWF0ZXJUaGFuKHYseCkmJih4PXYpO3ZhciBBPWk7by5sZXNzVGhhbihULEEpJiYoQT1UKTt2YXIgST1wLmRhdGE7SSBpbnN0YW5jZW9mIGcmJihJPUkucmVzb2x2ZWRQcm9wZXJ0eSksYz1JIGluc3RhbmNlb2YgXz9DKEkseCxBLG4scixhLGMsbCk6SSBpbnN0YW5jZW9mIG0/UyhJLHgsQSxuLHIsYSxjLGwpOkkgaW5zdGFuY2VvZiB5P0UoSSx4LEEsbixyLGEsYyxsKTpJIGluc3RhbmNlb2YgZj9iKEkseCxBLG4scixhLGMsbCk6dyhJLHgsQSxuLHIsYSxjLGwpfX1yZXR1cm4gY31mdW5jdGlvbiBUKGUsdCxuLHIsbyxhLHMpe2kocyl8fChzPVtdKSxlIGluc3RhbmNlb2YgZyYmKGU9ZS5yZXNvbHZlZFByb3BlcnR5KTt2YXIgbD0wO3JldHVybiBsPWUgaW5zdGFuY2VvZiBfP0MoZSx0LG4scixvLGEsMCxzKTplIGluc3RhbmNlb2YgbT9TKGUsdCxuLHIsbyxhLDAscyk6ZSBpbnN0YW5jZW9mIHk/RShlLHQsbixyLG8sYSwwLHMpOmUgaW5zdGFuY2VvZiBmP2IoZSx0LG4scixvLGEsMCxzKTp3KGUsdCxuLHIsbyxhLDAscykscy5sZW5ndGg9bCxzfXZhciB4PTYwLEE9MSxQPW5ldyB1LE09bmV3IHUsST1uZXcgdSxEPW5ldyBhLE89ZnVuY3Rpb24oZSx0KXt0aGlzLl91bnVzZWRJbmRleGVzPVtdLHRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbj1uZXcgZCx0aGlzLl9zY2VuZT1lLHRoaXMuX3JlZmVyZW5jZUZyYW1lPXQsZS5wcmltaXRpdmVzLmFkZCh0aGlzLl9wb2x5bGluZUNvbGxlY3Rpb24pfTtPLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7aWYodGhpcy5fcmVmZXJlbmNlRnJhbWU9PT1sLklORVJUSUFMKXt2YXIgbj1jLmNvbXB1dGVJY3JmVG9GaXhlZE1hdHJpeChlLEQpO2kobil8fChuPWMuY29tcHV0ZVRlbWVUb1BzZXVkb0ZpeGVkTWF0cml4KGUsRCkpLHMuZnJvbVJvdGF0aW9uVHJhbnNsYXRpb24obix0LlpFUk8sdGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLm1vZGVsTWF0cml4KQp9fSxPLnByb3RvdHlwZS51cGRhdGVPYmplY3Q9ZnVuY3Rpb24oZSx0KXt2YXIgbj10Ll9wYXRoO2lmKGkobikpe3ZhciByPXQuX3Bvc2l0aW9uO2lmKGkocikpe3ZhciBhLHMsbCx1PW4uX3Nob3csYz10Ll9wYXRoVmlzdWFsaXplckluZGV4LGQ9IWkodSl8fHUuZ2V0VmFsdWUoZSk7aWYoZCl7dmFyIGg9di5nZXRWYWx1ZU9yVW5kZWZpbmVkKG4uX2xlYWRUaW1lLGUpLG09di5nZXRWYWx1ZU9yVW5kZWZpbmVkKG4uX3RyYWlsVGltZSxlKSxmPXQuX2F2YWlsYWJpbGl0eSxnPWkoZiksXz1pKGgpLHk9aShtKTtpZihkPWd8fF8mJnkpe2lmKHkmJihzPW8uYWRkU2Vjb25kcyhlLC1tLG5ldyBvKSksXyYmKGw9by5hZGRTZWNvbmRzKGUsaCxuZXcgbykpLGcpe3ZhciBDPWYuc3RhcnQsdz1mLnN0b3A7KCF5fHxvLmdyZWF0ZXJUaGFuKEMscykpJiYocz1DKSwoIV98fG8ubGVzc1RoYW4odyxsKSkmJihsPXcpfWQ9by5sZXNzVGhhbihzLGwpfX1pZighZClyZXR1cm4gaShjKSYmKGE9dGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLmdldChjKSxhLnNob3c9ITEsdC5fcGF0aFZpc3VhbGl6ZXJJbmRleD12b2lkIDAsdGhpcy5fdW51c2VkSW5kZXhlcy5wdXNoKGMpKSx2b2lkIDA7aWYoaShjKSlhPXRoaXMuX3BvbHlsaW5lQ29sbGVjdGlvbi5nZXQoYyk7ZWxzZXt2YXIgRT10aGlzLl91bnVzZWRJbmRleGVzLGI9RS5sZW5ndGg7Yj4wPyhjPUUucG9wKCksYT10aGlzLl9wb2x5bGluZUNvbGxlY3Rpb24uZ2V0KGMpKTooYz10aGlzLl9wb2x5bGluZUNvbGxlY3Rpb24ubGVuZ3RoLGE9dGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLmFkZCgpKSx0Ll9wYXRoVmlzdWFsaXplckluZGV4PWMsYS5pZD10fXZhciBTPXYuZ2V0VmFsdWVPckRlZmF1bHQobi5fcmVzb2x1dGlvbixlLHgpO2Euc2hvdz0hMCxhLnBvc2l0aW9ucz1UKHIscyxsLGUsdGhpcy5fcmVmZXJlbmNlRnJhbWUsUyxhLnBvc2l0aW9ucyksYS5tYXRlcmlhbD1wLmdldFZhbHVlKGUsbi5fbWF0ZXJpYWwsYS5tYXRlcmlhbCksYS53aWR0aD12LmdldFZhbHVlT3JEZWZhdWx0KG4uX3dpZHRoLGUsQSl9fX0sTy5wcm90b3R5cGUucmVtb3ZlT2JqZWN0PWZ1bmN0aW9uKGUpe3ZhciB0PWUuX3BhdGhWaXN1YWxpemVySW5kZXg7aWYoaSh0KSl7dmFyIG49dGhpcy5fcG9seWxpbmVDb2xsZWN0aW9uLmdldCh0KTtuLnNob3c9ITEsdGhpcy5fdW51c2VkSW5kZXhlcy5wdXNoKHQpLGUuX3BhdGhWaXN1YWxpemVySW5kZXg9dm9pZCAwfX0sTy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2VuZS5wcmltaXRpdmVzLnJlbW92ZSh0aGlzLl9wb2x5bGluZUNvbGxlY3Rpb24pLG4odGhpcyl9O3ZhciBSPWZ1bmN0aW9uKHQsaSl7aS5jb2xsZWN0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKFIucHJvdG90eXBlLl9vbkNvbGxlY3Rpb25DaGFuZ2VkLHRoaXMpLHRoaXMuX3NjZW5lPXQsdGhpcy5fdXBkYXRlcnM9e30sdGhpcy5fZW50aXR5Q29sbGVjdGlvbj1pLHRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemU9bmV3IGUsdGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlZChpLGkuZW50aXRpZXMsW10sW10pfTtyZXR1cm4gUi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3VwZGF0ZXJzO2Zvcih2YXIgbiBpbiB0KXQuaGFzT3duUHJvcGVydHkobikmJnRbbl0udXBkYXRlKGUpO2Zvcih2YXIgcj10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplLnZhbHVlcyxvPTAsYT1yLmxlbmd0aDthPm87bysrKXt2YXIgcz1yW29dLHU9cy5fcG9zaXRpb24sYz1zLl9wYXRoVXBkYXRlcixkPWwuRklYRUQ7dGhpcy5fc2NlbmUubW9kZT09PWguU0NFTkUzRCYmKGQ9dS5yZWZlcmVuY2VGcmFtZSk7dmFyIG09dGhpcy5fdXBkYXRlcnNbZF07Yz09PW0mJmkobSk/bS51cGRhdGVPYmplY3QoZSxzKTooaShjKSYmYy5yZW1vdmVPYmplY3QocyksaShtKXx8KG09bmV3IE8odGhpcy5fc2NlbmUsZCksbS51cGRhdGUoZSksdGhpcy5fdXBkYXRlcnNbZF09bSkscy5fcGF0aFVwZGF0ZXI9bSxpKG0pJiZtLnVwZGF0ZU9iamVjdChlLHMpKX1yZXR1cm4hMH0sUi5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sUi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2VudGl0eUNvbGxlY3Rpb247ZS5jb2xsZWN0aW9uQ2hhbmdlZC5yZW1vdmVFdmVudExpc3RlbmVyKFIucHJvdG90eXBlLl9vbkNvbGxlY3Rpb25DaGFuZ2VkLHRoaXMpO3ZhciB0PXRoaXMuX3VwZGF0ZXJzO2Zvcih2YXIgaSBpbiB0KXQuaGFzT3duUHJvcGVydHkoaSkmJnRbaV0uZGVzdHJveSgpO2Zvcih2YXIgcj1lLmVudGl0aWVzLG89ci5sZW5ndGgsYT0wO28+YTthKyspclthXS5fcGF0aFVwZGF0ZXI9dm9pZCAwLHJbYV0uX3BhdGhWaXN1YWxpemVySW5kZXg9dm9pZCAwO3JldHVybiBuKHRoaXMpfSxSLnByb3RvdHlwZS5fb25Db2xsZWN0aW9uQ2hhbmdlZD1mdW5jdGlvbihlLHQsbixyKXt2YXIgbyxhLHMsbD10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplO2ZvcihvPXQubGVuZ3RoLTE7bz4tMTtvLS0pYT10W29dLGkoYS5fcGF0aCkmJmkoYS5fcG9zaXRpb24pJiZsLnNldChhLmlkLGEpO2ZvcihvPXIubGVuZ3RoLTE7bz4tMTtvLS0pYT1yW29dLGkoYS5fcGF0aCkmJmkoYS5fcG9zaXRpb24pP2wuc2V0KGEuaWQsYSk6KHM9YS5fcGF0aFVwZGF0ZXIsaShzKSYmcy5yZW1vdmVPYmplY3QoYSksbC5yZW1vdmUoYS5pZCkpO2ZvcihvPW4ubGVuZ3RoLTE7bz4tMTtvLS0pYT1uW29dLHM9YS5fcGF0aFVwZGF0ZXIsaShzKSYmcy5yZW1vdmVPYmplY3QoYSksbC5yZW1vdmUoYS5pZCl9LFIuX3N1YlNhbXBsZT1ULFJ9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1BvaW50VmlzdWFsaXplciIsWyIuLi9Db3JlL0Fzc29jaWF0aXZlQXJyYXkiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTmVhckZhclNjYWxhciIsIi4uL1NjZW5lL0JpbGxib2FyZENvbGxlY3Rpb24iLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB1KGUsdCxpKXt2YXIgcj1lLl9wb2ludFZpc3VhbGl6ZXJJbmRleDtpZihuKHIpKXt2YXIgbz10LmdldChyKTtvLnNob3c9ITEsZS5fcG9pbnRWaXN1YWxpemVySW5kZXg9dm9pZCAwLGkucHVzaChyKX19ZnVuY3Rpb24gYyhlLHQsaSxuLHIpe3JldHVybiBmdW5jdGlvbigpe3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGE9cisyKm47by5oZWlnaHQ9by53aWR0aD1hO3ZhciBzPW8uZ2V0Q29udGV4dCgiMmQiKTtyZXR1cm4gcy5jbGVhclJlY3QoMCwwLGEsYSksMCE9PW4mJihzLmJlZ2luUGF0aCgpLHMuYXJjKGEvMixhLzIsYS8yLDAsMipNYXRoLlBJLCEwKSxzLmNsb3NlUGF0aCgpLHMuZmlsbFN0eWxlPWkscy5maWxsKCksMT5lJiYocy5zYXZlKCkscy5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb249ImRlc3RpbmF0aW9uLW91dCIscy5iZWdpblBhdGgoKSxzLmFyYyhhLzIsYS8yLHIvMiwwLDIqTWF0aC5QSSwhMCkscy5jbG9zZVBhdGgoKSxzLmZpbGxTdHlsZT0iYmxhY2siLHMuZmlsbCgpLHMucmVzdG9yZSgpKSkscy5iZWdpblBhdGgoKSxzLmFyYyhhLzIsYS8yLHIvMiwwLDIqTWF0aC5QSSwhMCkscy5jbG9zZVBhdGgoKSxzLmZpbGxTdHlsZT10LHMuZmlsbCgpLG99fXZhciBkPWkuV0hJVEUsaD1pLkJMQUNLLG09MCxmPTEscD1uZXcgaSx2PW5ldyB0LGc9bmV3IGksXz1uZXcgYSx5PWZ1bmN0aW9uKHQsaSl7dmFyIG49bmV3IHM7dC5wcmltaXRpdmVzLmFkZChuKSxpLmNvbGxlY3Rpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIoeS5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyksdGhpcy5fc2NlbmU9dCx0aGlzLl91bnVzZWRJbmRleGVzPVtdLHRoaXMuX2VudGl0eUNvbGxlY3Rpb249aSx0aGlzLl9iaWxsYm9hcmRDb2xsZWN0aW9uPW4sdGhpcy5fZW50aXRpZXNUb1Zpc3VhbGl6ZT1uZXcgZSx0aGlzLl9vbkNvbGxlY3Rpb25DaGFuZ2VkKGksaS5lbnRpdGllcyxbXSxbXSl9O3JldHVybiB5LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMuX2VudGl0aWVzVG9WaXN1YWxpemUudmFsdWVzLHI9dGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbixvPXRoaXMuX3VudXNlZEluZGV4ZXMsYT0wLHM9dC5sZW5ndGg7cz5hO2ErKyl7dmFyIHksQz10W2FdLHc9Qy5fcG9pbnQsRT1DLl9wb2ludFZpc3VhbGl6ZXJJbmRleCxiPUMuaXNBdmFpbGFibGUoZSkmJmwuZ2V0VmFsdWVPckRlZmF1bHQody5fc2hvdyxlLCEwKTtpZihiJiYodj1sLmdldFZhbHVlT3JVbmRlZmluZWQoQy5fcG9zaXRpb24sZSx2KSxiPW4odikpLGIpe3ZhciBTPSExO2lmKG4oRSkpeT1yLmdldChFKTtlbHNle3ZhciBUPW8ubGVuZ3RoO1Q+MD8oRT1vLnBvcCgpLHk9ci5nZXQoRSkpOihFPXIubGVuZ3RoLHk9ci5hZGQoKSksQy5fcG9pbnRWaXN1YWxpemVySW5kZXg9RSx5LmlkPUMseS5fdmlzdWFsaXplckNvbG9yPWkuY2xvbmUoaS5XSElURSx5Ll92aXN1YWxpemVyQ29sb3IpLHkuX3Zpc3VhbGl6ZXJPdXRsaW5lQ29sb3I9aS5jbG9uZShpLkJMQUNLLHkuX3Zpc3VhbGl6ZXJPdXRsaW5lQ29sb3IpLHkuX3Zpc3VhbGl6ZXJPdXRsaW5lV2lkdGg9MCx5Ll92aXN1YWxpemVyUGl4ZWxTaXplPTEsUz0hMH15LnNob3c9ITAseS5wb3NpdGlvbj12LHkuc2NhbGVCeURpc3RhbmNlPWwuZ2V0VmFsdWVPclVuZGVmaW5lZCh3Ll9zY2FsZUJ5RGlzdGFuY2UsZSxfKTt2YXIgeD1sLmdldFZhbHVlT3JEZWZhdWx0KHcuX2NvbG9yLGUsZCxwKSxBPWwuZ2V0VmFsdWVPckRlZmF1bHQody5fb3V0bGluZUNvbG9yLGUsaCxnKSxQPWwuZ2V0VmFsdWVPckRlZmF1bHQody5fb3V0bGluZVdpZHRoLGUsbSksTT1sLmdldFZhbHVlT3JEZWZhdWx0KHcuX3BpeGVsU2l6ZSxlLGYpO2lmKFM9U3x8UCE9PXkuX3Zpc3VhbGl6ZXJPdXRsaW5lV2lkdGh8fE0hPT15Ll92aXN1YWxpemVyUGl4ZWxTaXplfHwhaS5lcXVhbHMoeCx5Ll92aXN1YWxpemVyQ29sb3IpfHwhaS5lcXVhbHMoQSx5Ll92aXN1YWxpemVyT3V0bGluZUNvbG9yKSl7eS5fdmlzdWFsaXplckNvbG9yPWkuY2xvbmUoeCx5Ll92aXN1YWxpemVyQ29sb3IpLHkuX3Zpc3VhbGl6ZXJPdXRsaW5lQ29sb3I9aS5jbG9uZShBLHkuX3Zpc3VhbGl6ZXJPdXRsaW5lQ29sb3IpLHkuX3Zpc3VhbGl6ZXJQaXhlbFNpemU9TSx5Ll92aXN1YWxpemVyT3V0bGluZVdpZHRoPVA7dmFyIEk9eC5hbHBoYSxEPXgudG9Dc3NDb2xvclN0cmluZygpLE89QS50b0Nzc0NvbG9yU3RyaW5nKCksUj1QLEw9SlNPTi5zdHJpbmdpZnkoW0QsTSxPLFJdKTt5LnNldEltYWdlKEwsYyhJLEQsTyxSLE0pKX19ZWxzZSB1KEMscixvKX1yZXR1cm4hMH0seS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0seS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLl9lbnRpdGllc1RvVmlzdWFsaXplLnZhbHVlcyx0PWUubGVuZ3RoLTE7dD4tMTt0LS0pZVt0XS5fcG9pbnRWaXN1YWxpemVySW5kZXg9dm9pZCAwO3JldHVybiB0aGlzLl9lbnRpdHlDb2xsZWN0aW9uLmNvbGxlY3Rpb25DaGFuZ2VkLnJlbW92ZUV2ZW50TGlzdGVuZXIoeS5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQsdGhpcyksdGhpcy5fc2NlbmUucHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fYmlsbGJvYXJkQ29sbGVjdGlvbikscih0aGlzKX0seS5wcm90b3R5cGUuX29uQ29sbGVjdGlvbkNoYW5nZWQ9ZnVuY3Rpb24oZSx0LGkscil7dmFyIG8sYSxzPXRoaXMuX2JpbGxib2FyZENvbGxlY3Rpb24sbD10aGlzLl91bnVzZWRJbmRleGVzLGM9dGhpcy5fZW50aXRpZXNUb1Zpc3VhbGl6ZTtmb3Iobz10Lmxlbmd0aC0xO28+LTE7by0tKWE9dFtvXSxuKGEuX3BvaW50KSYmbihhLl9wb3NpdGlvbikmJmMuc2V0KGEuaWQsYSk7Zm9yKG89ci5sZW5ndGgtMTtvPi0xO28tLSlhPXJbb10sbihhLl9wb2ludCkmJm4oYS5fcG9zaXRpb24pP2Muc2V0KGEuaWQsYSk6KHUoYSxzLGwpLGMucmVtb3ZlKGEuaWQpKTtmb3Iobz1pLmxlbmd0aC0xO28+LTE7by0tKWE9aVtvXSx1KGEscyxsKSxjLnJlbW92ZShhLmlkKX0seX0pLGRlZmluZSgiQ29yZS9BeGlzQWxpZ25lZEJvdW5kaW5nQm94IixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vSW50ZXJzZWN0Il0sZnVuY3Rpb24oZSx0LGksbixyKXsidXNlIHN0cmljdCI7dmFyIG89ZnVuY3Rpb24obixyLG8pe3RoaXMubWluaW11bT1lLmNsb25lKHQobixlLlpFUk8pKSx0aGlzLm1heGltdW09ZS5jbG9uZSh0KHIsZS5aRVJPKSksaShvKT9vPWUuY2xvbmUobyk6KG89ZS5hZGQodGhpcy5taW5pbXVtLHRoaXMubWF4aW11bSxuZXcgZSksZS5tdWx0aXBseUJ5U2NhbGFyKG8sLjUsbykpLHRoaXMuY2VudGVyPW99O28uZnJvbVBvaW50cz1mdW5jdGlvbih0LG4pe2lmKGkobil8fChuPW5ldyBvKSwhaSh0KXx8MD09PXQubGVuZ3RoKXJldHVybiBuLm1pbmltdW09ZS5jbG9uZShlLlpFUk8sbi5taW5pbXVtKSxuLm1heGltdW09ZS5jbG9uZShlLlpFUk8sbi5tYXhpbXVtKSxuLmNlbnRlcj1lLmNsb25lKGUuWkVSTyxuLmNlbnRlciksbjtmb3IodmFyIHI9dFswXS54LGE9dFswXS55LHM9dFswXS56LGw9dFswXS54LHU9dFswXS55LGM9dFswXS56LGQ9dC5sZW5ndGgsaD0xO2Q+aDtoKyspe3ZhciBtPXRbaF0sZj1tLngscD1tLnksdj1tLno7cj1NYXRoLm1pbihmLHIpLGw9TWF0aC5tYXgoZixsKSxhPU1hdGgubWluKHAsYSksdT1NYXRoLm1heChwLHUpLHM9TWF0aC5taW4odixzKSxjPU1hdGgubWF4KHYsYyl9dmFyIGc9bi5taW5pbXVtO2cueD1yLGcueT1hLGcuej1zO3ZhciBfPW4ubWF4aW11bTtfLng9bCxfLnk9dSxfLno9Yzt2YXIgeT1lLmFkZChnLF8sbi5jZW50ZXIpO3JldHVybiBlLm11bHRpcGx5QnlTY2FsYXIoeSwuNSx5KSxufSxvLmNsb25lPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGkodCk/aShuKT8obi5taW5pbXVtPWUuY2xvbmUodC5taW5pbXVtLG4ubWluaW11bSksbi5tYXhpbXVtPWUuY2xvbmUodC5tYXhpbXVtLG4ubWF4aW11bSksbi5jZW50ZXI9ZS5jbG9uZSh0LmNlbnRlcixuLmNlbnRlciksbik6bmV3IG8odC5taW5pbXVtLHQubWF4aW11bSk6dm9pZCAwfSxvLmVxdWFscz1mdW5jdGlvbih0LG4pe3JldHVybiB0PT09bnx8aSh0KSYmaShuKSYmZS5lcXVhbHModC5jZW50ZXIsbi5jZW50ZXIpJiZlLmVxdWFscyh0Lm1pbmltdW0sbi5taW5pbXVtKSYmZS5lcXVhbHModC5tYXhpbXVtLG4ubWF4aW11bSl9O3ZhciBhPW5ldyBlO3JldHVybiBvLmludGVyc2VjdD1mdW5jdGlvbih0LGkpe2E9ZS5zdWJ0cmFjdCh0Lm1heGltdW0sdC5taW5pbXVtLGEpO3ZhciBuPWUubXVsdGlwbHlCeVNjYWxhcihhLC41LGEpLG89bi54Kk1hdGguYWJzKGkueCkrbi55Kk1hdGguYWJzKGkueSkrbi56Kk1hdGguYWJzKGkueikscz1lLmRvdCh0LmNlbnRlcixpKStpLnc7cmV0dXJuIHMtbz4wP3IuSU5TSURFOjA+cytvP3IuT1VUU0lERTpyLklOVEVSU0VDVElOR30sby5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uY2xvbmUodGhpcyxlKX0sby5wcm90b3R5cGUuaW50ZXJzZWN0PWZ1bmN0aW9uKGUpe3JldHVybiBvLmludGVyc2VjdCh0aGlzLGUpfSxvLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uZXF1YWxzKHRoaXMsZSl9LG99KSxkZWZpbmUoIkNvcmUvRWxsaXBzb2lkVGFuZ2VudFBsYW5lIixbIi4vQXhpc0FsaWduZWRCb3VuZGluZ0JveCIsIi4vQ2FydGVzaWFuMiIsIi4vQ2FydGVzaWFuMyIsIi4vQ2FydGVzaWFuNCIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vRWxsaXBzb2lkIiwiLi9JbnRlcnNlY3Rpb25UZXN0cyIsIi4vTWF0cml4NCIsIi4vUGxhbmUiLCIuL1JheSIsIi4vVHJhbnNmb3JtcyJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSl7InVzZSBzdHJpY3QiO3ZhciBmPW5ldyBuLHA9ZnVuY3Rpb24oZSx0KXt0PXIodCxsLldHUzg0KSxlPXQuc2NhbGVUb0dlb2RldGljU3VyZmFjZShlKTt2YXIgbj1tLmVhc3ROb3J0aFVwVG9GaXhlZEZyYW1lKGUsdCk7dGhpcy5fZWxsaXBzb2lkPXQsdGhpcy5fb3JpZ2luPWUsdGhpcy5feEF4aXM9aS5mcm9tQ2FydGVzaWFuNChjLmdldENvbHVtbihuLDAsZikpLHRoaXMuX3lBeGlzPWkuZnJvbUNhcnRlc2lhbjQoYy5nZXRDb2x1bW4obiwxLGYpKTt2YXIgbz1pLmZyb21DYXJ0ZXNpYW40KGMuZ2V0Q29sdW1uKG4sMixmKSk7dGhpcy5fcGxhbmU9ZC5mcm9tUG9pbnROb3JtYWwoZSxvKX07YShwLnByb3RvdHlwZSx7ZWxsaXBzb2lkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZWxsaXBzb2lkfX0sb3JpZ2luOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3JpZ2lufX19KTt2YXIgdj1uZXcgZTtwLmZyb21Qb2ludHM9ZnVuY3Rpb24odCxpKXt2YXIgbj1lLmZyb21Qb2ludHModCx2KTtyZXR1cm4gbmV3IHAobi5jZW50ZXIsaSl9O3ZhciBnPW5ldyBoLF89bmV3IGk7cC5wcm90b3R5cGUucHJvamVjdFBvaW50T250b1BsYW5lPWZ1bmN0aW9uKGUsbil7dmFyIHI9ZztyLm9yaWdpbj1lLGkubm9ybWFsaXplKGUsci5kaXJlY3Rpb24pO3ZhciBhPXUucmF5UGxhbmUocix0aGlzLl9wbGFuZSxfKTtpZihvKGEpfHwoaS5uZWdhdGUoci5kaXJlY3Rpb24sci5kaXJlY3Rpb24pLGE9dS5yYXlQbGFuZShyLHRoaXMuX3BsYW5lLF8pKSxvKGEpKXt2YXIgcz1pLnN1YnRyYWN0KGEsdGhpcy5fb3JpZ2luLGEpLGw9aS5kb3QodGhpcy5feEF4aXMscyksYz1pLmRvdCh0aGlzLl95QXhpcyxzKTtyZXR1cm4gbyhuKT8obi54PWwsbi55PWMsbik6bmV3IHQobCxjKX1yZXR1cm4gdm9pZCAwfSxwLnByb3RvdHlwZS5wcm9qZWN0UG9pbnRzT250b1BsYW5lPWZ1bmN0aW9uKGUsdCl7byh0KXx8KHQ9W10pO2Zvcih2YXIgaT0wLG49ZS5sZW5ndGgscj0wO24+cjtyKyspe3ZhciBhPXRoaXMucHJvamVjdFBvaW50T250b1BsYW5lKGVbcl0sdFtpXSk7byhhKSYmKHRbaV09YSxpKyspfXJldHVybiB0Lmxlbmd0aD1pLHR9O3ZhciB5PW5ldyBpO3JldHVybiBwLnByb3RvdHlwZS5wcm9qZWN0UG9pbnRzT250b0VsbGlwc29pZD1mdW5jdGlvbihlLHQpe3ZhciBuPWUubGVuZ3RoO28odCk/dC5sZW5ndGg9bjp0PW5ldyBBcnJheShuKTtmb3IodmFyIHI9dGhpcy5fZWxsaXBzb2lkLGE9dGhpcy5fb3JpZ2luLHM9dGhpcy5feEF4aXMsbD10aGlzLl95QXhpcyx1PXksYz0wO24+YzsrK2Mpe3ZhciBkPWVbY107aS5tdWx0aXBseUJ5U2NhbGFyKHMsZC54LHUpLG8odFtjXSl8fCh0W2NdPW5ldyBpKTt2YXIgaD1pLmFkZChhLHUsdFtjXSk7aS5tdWx0aXBseUJ5U2NhbGFyKGwsZC55LHUpLGkuYWRkKGgsdSxoKSxyLnNjYWxlVG9HZW9jZW50cmljU3VyZmFjZShoLGgpfXJldHVybiB0fSxwfSksZGVmaW5lKCJDb3JlL1BvbHlnb25HZW9tZXRyeUxpYnJhcnkiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0VsbGlwc29pZCJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiByKHQsaSxuLHIpe3JldHVybiBlLnN1YnRyYWN0KGksdCxhKSxlLm11bHRpcGx5QnlTY2FsYXIoYSxuL3IsYSksZS5hZGQodCxhLGEpLFthLngsYS55LGEuel19dmFyIG89e30sYT1uZXcgZTtvLnN1YmRpdmlkZUxpbmU9ZnVuY3Rpb24odCxpLG4pe3ZhciBvPWUuZGlzdGFuY2UodCxpKSxhPWUuYW5nbGVCZXR3ZWVuKHQsaSkscz1hL24sbD1NYXRoLmNlaWwoTWF0aC5sb2cocykvTWF0aC5sb2coMikpOzE+bCYmKGw9MCk7dmFyIHU9TWF0aC5wb3coMixsKSxjPW8vdSxkPW5ldyBBcnJheSgzKnUpLGg9MDtkW2grK109dC54LGRbaCsrXT10LnksZFtoKytdPXQuejtmb3IodmFyIG09MTt1Pm07bSsrKXt2YXIgZj1yKHQsaSxtKmMsbyk7ZFtoKytdPWZbMF0sZFtoKytdPWZbMV0sZFtoKytdPWZbMl19cmV0dXJuIGR9O3ZhciBzPW5ldyBlLGw9bmV3IGUsdT1uZXcgZSxjPW5ldyBlO3JldHVybiBvLnNjYWxlVG9HZW9kZXRpY0hlaWdodEV4dHJ1ZGVkPWZ1bmN0aW9uKHIsbyxhLGQsaCl7ZD10KGQsbi5XR1M4NCk7dmFyIG09cyxmPWwscD11LHY9YztpZihpKHIpJiZpKHIuYXR0cmlidXRlcykmJmkoci5hdHRyaWJ1dGVzLnBvc2l0aW9uKSlmb3IodmFyIGc9ci5hdHRyaWJ1dGVzLnBvc2l0aW9uLnZhbHVlcyxfPWcubGVuZ3RoLzIseT0wO18+eTt5Kz0zKWUuZnJvbUFycmF5KGcseSxwKSxkLmdlb2RldGljU3VyZmFjZU5vcm1hbChwLG0pLHY9ZC5zY2FsZVRvR2VvZGV0aWNTdXJmYWNlKHAsdiksZj1lLm11bHRpcGx5QnlTY2FsYXIobSxhLGYpLGY9ZS5hZGQodixmLGYpLGdbeStfXT1mLngsZ1t5KzErX109Zi55LGdbeSsyK19dPWYueixoJiYodj1lLmNsb25lKHAsdikpLGY9ZS5tdWx0aXBseUJ5U2NhbGFyKG0sbyxmKSxmPWUuYWRkKHYsZixmKSxnW3ldPWYueCxnW3krMV09Zi55LGdbeSsyXT1mLno7cmV0dXJuIHJ9LG99KSxkZWZpbmUoIkNvcmUvcG9pbnRJbnNpZGVUcmlhbmdsZSIsWyIuL2JhcnljZW50cmljQ29vcmRpbmF0ZXMiLCIuL0NhcnRlc2lhbjMiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uZXcgdCxuPWZ1bmN0aW9uKHQsbixyLG8pe3JldHVybiBlKHQsbixyLG8saSksaS54PjAmJmkueT4wJiZpLno+MH07cmV0dXJuIG59KSxkZWZpbmUoIkNvcmUvV2luZGluZ09yZGVyIixbIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtDTE9DS1dJU0U6MjMwNCxDT1VOVEVSX0NMT0NLV0lTRToyMzA1LHZhbGlkYXRlOmZ1bmN0aW9uKGUpe3JldHVybiBlPT09dC5DTE9DS1dJU0V8fGU9PT10LkNPVU5URVJfQ0xPQ0tXSVNFfX07cmV0dXJuIGUodCl9KSxkZWZpbmUoIkNvcmUvUG9seWdvblBpcGVsaW5lIixbIi4vQ2FydGVzaWFuMiIsIi4vQ2FydGVzaWFuMyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vRWxsaXBzb2lkVGFuZ2VudFBsYW5lIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL01hdGgiLCIuL3BvaW50SW5zaWRlVHJpYW5nbGUiLCIuL1ByaW1pdGl2ZVR5cGUiLCIuL1F1ZXVlIiwiLi9XaW5kaW5nT3JkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHAodCxpLG4pe3ZhciByPWUuc3VidHJhY3QoaSx0LEYpLG89ZS5zdWJ0cmFjdChuLGksVik7cmV0dXJuIHIueCpvLnktci55Km8ueD49MH1mdW5jdGlvbiB2KGUpe2Zvcih2YXIgdD1lWzBdLngsaT0wLG49MDtuPGUubGVuZ3RoO24rKyllW25dLng+dCYmKHQ9ZVtuXS54LGk9bik7cmV0dXJuIGl9ZnVuY3Rpb24gZyhlKXtmb3IodmFyIHQ9ZVswXVswXS54LGk9MCxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl1bdihlW25dKV0ueDtyPnQmJih0PXIsaT1uKX1yZXR1cm4gaX1mdW5jdGlvbiBfKGUpe2Zvcih2YXIgdD1bXSxpPTA7aTxlLmxlbmd0aDtpKyspe3ZhciBuPWVbKGktMStlLmxlbmd0aCklZS5sZW5ndGhdLHI9ZVtpXSxvPWVbKGkrMSklZS5sZW5ndGhdO3AobixyLG8pfHx0LnB1c2gocil9cmV0dXJuIHR9ZnVuY3Rpb24geSh0LGkpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWlmKGUuZXF1YWxzKGksdFtuXSkpcmV0dXJuIG47cmV0dXJuLTF9ZnVuY3Rpb24gQyhpLHIsbyl7bz1uKG8sW10pO3ZhciBhPU51bWJlci5NQVhfVkFMVUUscz12KHIpLGw9bmV3IGUocltzXS54LGkueSk7by5wdXNoKHMpLG8ucHVzaCgocysxKSVyLmxlbmd0aCk7Zm9yKHZhciB1PXJbMF0ueCxjPXUsZD0xO2Q8ci5sZW5ndGg7KytkKXJbZF0ueDx1P3U9cltkXS54OnJbZF0ueD5jJiYoYz1yW2RdLngpO2MrPWMtdTt2YXIgaD1uZXcgdChjLGkueSwwKTtmb3IoZD0wO2Q8ci5sZW5ndGg7ZCsrKXt2YXIgbT1yW2RdLGY9clsoZCsxKSVyLmxlbmd0aF07aWYoKG0ueD49aS54fHxmLng+PWkueCkmJihtLnk+PWkueSYmZi55PD1pLnl8fG0ueTw9aS55JiZmLnk+PWkueSkpe3ZhciBwPShmLnktbS55KSooaC54LWkueCktKGYueC1tLngpKihoLnktaS55KTtpZigwIT09cCl7cD0xL3A7dmFyIGc9KChmLngtbS54KSooaS55LW0ueSktKGYueS1tLnkpKihpLngtbS54KSkqcCxfPSgoaC54LWkueCkqKGkueS1tLnkpLShoLnktaS55KSooaS54LW0ueCkpKnA7aWYoZz49MCYmMT49ZyYmXz49MCYmMT49Xyl7dmFyIHk9bmV3IGUoaS54K2cqKGgueC1pLngpLGkueStnKihoLnktaS55KSksQz1lLnN1YnRyYWN0KHksaSxrKTtwPWUubWFnbml0dWRlU3F1YXJlZChDKSxhPnAmJihsPXksYT1wLG9bMF09ZCxvWzFdPShkKzEpJXIubGVuZ3RoKX19fX1yZXR1cm4gbH1mdW5jdGlvbiB3KHQsaSl7dmFyIG49ZyhpKSxyPWlbbl0sbz12KHIpLGE9cltvXSxzPVtdLGw9QyhhLHQscyksdT15KHQsbCk7aWYoLTEhPT11KXJldHVybiB1O3ZhciBoPWUubWFnbml0dWRlU3F1YXJlZChlLnN1YnRyYWN0KHRbc1swXV0sYSxVKSksbT1lLm1hZ25pdHVkZVNxdWFyZWQoZS5zdWJ0cmFjdCh0W3NbMV1dLGEsVSkpLGY9bT5oP3Rbc1swXV06dFtzWzFdXSxwPV8odCksdz1wLmluZGV4T2YoZik7LTEhPT13JiZwLnNwbGljZSh3LDEpO2Zvcih2YXIgRT1bXSxiPTA7YjxwLmxlbmd0aDtiKyspe3ZhciBTPXBbYl07ZChTLGEsbCxmKSYmRS5wdXNoKFMpfXZhciBUPU51bWJlci5NQVhfVkFMVUU7aWYoRS5sZW5ndGg+MCl7dmFyIHg9ZS5mcm9tRWxlbWVudHMoMSwwLFUpO2ZvcihiPTA7YjxFLmxlbmd0aDtiKyspe3ZhciBBPWUuc3VidHJhY3QoRVtiXSxhLFcpLFA9ZS5tYWduaXR1ZGUoeCkqZS5tYWduaXR1ZGVTcXVhcmVkKEEpO2lmKDAhPT1QKXt2YXIgTT1NYXRoLmFicyhjLmFjb3NDbGFtcGVkKGUuZG90KHgsQSkvUCkpO1Q+TSYmKFQ9TSxmPUVbYl0pfX19cmV0dXJuIHQuaW5kZXhPZihmKX1mdW5jdGlvbiBFKGUsaSxuKXtmb3IodmFyIHI9c3QuY29tcHV0ZVdpbmRpbmdPcmRlcjJEKGUpLG89MDtvPGkubGVuZ3RoO28rKyl7dmFyIGE9aVtvXTt0LmVxdWFscyhhWzBdLGFbYS5sZW5ndGgtMV0pfHxhLnB1c2goYVswXSk7dmFyIGw9c3QuY29tcHV0ZVdpbmRpbmdPcmRlcjJEKGEpO2w9PT1yJiZhLnJldmVyc2UoKX12YXIgdT1zLmZyb21Qb2ludHMoZSxuKSxjPXUucHJvamVjdFBvaW50c09udG9QbGFuZShlKSxkPVtdO2ZvcihvPTA7bzxpLmxlbmd0aDtvKyspZC5wdXNoKHUucHJvamVjdFBvaW50c09udG9QbGFuZShpW29dKSk7dmFyIGg9dyhjLGQpLG09ZyhkKSxmPXYoZFttXSkscD1pW21dLF89W107Zm9yKG89MDtvPGUubGVuZ3RoO28rKylfLnB1c2goZVtvXSk7dmFyIHksQz1bXTtpZigwIT09Zilmb3IoeT0wO3k8PXAubGVuZ3RoO3krKyl7dmFyIEU9KHkrZiklcC5sZW5ndGg7MCE9PUUmJkMucHVzaChwW0VdKX1lbHNlIGZvcih5PTA7eTxwLmxlbmd0aDt5KyspQy5wdXNoKHBbKHkrZiklcC5sZW5ndGhdKTt2YXIgYj1fLmxhc3RJbmRleE9mKGVbaF0pO0MucHVzaChlW2JdKTt2YXIgUz1fLnNsaWNlKDAsYisxKSxUPV8uc2xpY2UoYisxKTtyZXR1cm4gXz1TLmNvbmNhdChDLFQpLGkuc3BsaWNlKG0sMSksX31mdW5jdGlvbiBiKGUpe3ZhciB0PSIwLiIrTWF0aC5zaW4oRykudG9TdHJpbmcoKS5zdWJzdHIoNSk7Rys9LjI7dmFyIGk9TWF0aC5mbG9vcih0KmUpO3JldHVybiBpPT09ZSYmaS0tLGl9ZnVuY3Rpb24gUyh0LGksbil7cmV0dXJuIFQodCxpLG4pJiZUKGksdCxuKSYmIUwoblt0XS5wb3NpdGlvbixuW2ldLnBvc2l0aW9uLG4pJiYhZS5lcXVhbHMoblt0XS5wb3NpdGlvbixuW2ldLnBvc2l0aW9uKX1mdW5jdGlvbiBUKHQsaSxuKXtQKHQsbik7dmFyIHI9blt0XSxvPW5baV0sYT1BKHQsbixIKSxzPUEodCxuLHEpLGw9ZS5zdWJ0cmFjdChuW2FdLnBvc2l0aW9uLHIucG9zaXRpb24saiksdT1lLnN1YnRyYWN0KG5bc10ucG9zaXRpb24sci5wb3NpdGlvbixZKSxjPWUuc3VidHJhY3Qoby5wb3NpdGlvbixyLnBvc2l0aW9uLFgpO3JldHVybiBNKGwsYyk/eChsLGMpOk0odSxjKT94KHUsYyk6SShsLHUpP1IobCx1LGMpPyEwOiExOkQobCx1KT9PKGwsdSxjKT8hMTohMDp2b2lkIDB9ZnVuY3Rpb24geCh0LGkpe3JldHVybiBlLm1hZ25pdHVkZShpKTxlLm1hZ25pdHVkZSh0KX1mdW5jdGlvbiBBKGUsdCxpKXt2YXIgbj1lK2k7cmV0dXJuIDA+biYmKG49dC5sZW5ndGgtMSksbj09PXQubGVuZ3RoJiYobj0wKSxQKG4sdCksbn1mdW5jdGlvbiBQKHQsaSl7dmFyIG49dC0xLHI9dCsxOzA+biYmKG49aS5sZW5ndGgtMSkscj09PWkubGVuZ3RoJiYocj0wKTt2YXIgYT1lLnN1YnRyYWN0KGlbbl0ucG9zaXRpb24saVt0XS5wb3NpdGlvbixaKSxzPWUuc3VidHJhY3QoaVtyXS5wb3NpdGlvbixpW3RdLnBvc2l0aW9uLEopO2lmKE0oYSxzKSl7dmFyIGw9bmV3IG8oIlN1cGVyZmx1b3VzIHZlcnRleCBmb3VuZC4iKTt0aHJvdyBsLnZlcnRleEluZGV4PXQsbH19ZnVuY3Rpb24gTShlLGkpe3JldHVybiAwPT09dC5jcm9zcyhlLGksSykuen1mdW5jdGlvbiBJKGUsaSl7cmV0dXJuIHQuY3Jvc3MoZSxpLFEpLno8MH1mdW5jdGlvbiBEKGUsaSl7cmV0dXJuIHQuY3Jvc3MoZSxpLCQpLno+MH1mdW5jdGlvbiBPKGUsaSxuKXtyZXR1cm4gdC5jcm9zcyhlLG4sZXQpLno+MCYmdC5jcm9zcyhuLGksZXQpLno+MH1mdW5jdGlvbiBSKGUsaSxuKXtyZXR1cm4gdC5jcm9zcyhlLG4sdHQpLno8MCYmdC5jcm9zcyhuLGksdHQpLno8MH1mdW5jdGlvbiBMKHQsaSxuKXtmb3IodmFyIHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIG8sYT1uW3JdLnBvc2l0aW9uO2lmKG89cjxuLmxlbmd0aC0xP25bcisxXS5wb3NpdGlvbjpuWzBdLnBvc2l0aW9uLCEoZS5lcXVhbHModCxhKXx8ZS5lcXVhbHMoaSxvKXx8ZS5lcXVhbHModCxvKXx8ZS5lcXVhbHMoaSxhKSkpe3ZhciBzPShpLnktdC55KS8oaS54LXQueCksbD0oby55LWEueSkvKG8ueC1hLngpO2lmKCEocz09PWx8fGlzTmFOKHMpJiZpc05hTihsKSkpe3ZhciB1O3U9aXNOYU4ocyk/dC54OmlzTmFOKGwpP2EueDoodC55LWEueS1zKnQueCtsKmEueCkvKGwtcyk7dmFyIGM9cyp1K3QueS1zKnQueCxkPWUuZnJvbUVsZW1lbnRzKHUsYyxpdCk7aWYoIShlLmVxdWFscyhkLHQpfHxlLmVxdWFscyhkLGkpfHxlLmVxdWFscyhkLGEpfHxlLmVxdWFscyhkLG8pKSl7dmFyIGg9eih1LHQueCxpLngpJiZ6KGMsdC55LGkueSkmJnoodSxhLngsby54KSYmeihjLGEueSxvLnkpO2lmKGgpcmV0dXJuITB9fX19cmV0dXJuITF9ZnVuY3Rpb24gTih0KXt2YXIgaT10WzBdLnBvc2l0aW9uLG49dFsxXS5wb3NpdGlvbixyPXRbMl0ucG9zaXRpb24sbz1lLnN1YnRyYWN0KG4saSxudCksYT1lLnN1YnRyYWN0KHIsaSxydCk7cmV0dXJuIE0obyxhKX1mdW5jdGlvbiB6KGUsdCxpKXtyZXR1cm4oZT50fHxlPmkpJiYodD5lfHxpPmUpfHx0PT09aSYmdD09PWV9ZnVuY3Rpb24gQihlKXt2YXIgdD1lLmxlbmd0aDtpZigzPT09dClyZXR1cm4gTihlKT9bXTpbZVswXS5pbmRleCxlWzFdLmluZGV4LGVbMl0uaW5kZXhdO2lmKGUubGVuZ3RoPDMpdGhyb3cgbmV3IG8oIkludmFsaWQgcG9seWdvbjogbXVzdCBoYXZlIGF0IGxlYXN0IHRocmVlIHZlcnRpY2VzLiIpO2Zvcih2YXIgaT0hMSxuPTA7IWk7KXt2YXIgcj0xMCplLmxlbmd0aDtpZihuPnIpcmV0dXJuW107bisrO2Zvcih2YXIgYT1iKGUubGVuZ3RoKSxzPWErMTtNYXRoLmFicyhhLXMpPDJ8fE1hdGguYWJzKGEtcyk+ZS5sZW5ndGgtMjspcz1iKGUubGVuZ3RoKTtpZihhPnMpe3ZhciBsPWE7YT1zLHM9bH10cnl7aWYoUyhhLHMsZSkpe3ZhciB1PWUuc3BsaWNlKGEscy1hKzEsZVthXSxlW3NdKTtyZXR1cm4gQihlKS5jb25jYXQoQih1KSl9fWNhdGNoKGMpe2lmKGMuaGFzT3duUHJvcGVydHkoInZlcnRleEluZGV4IikpcmV0dXJuIGUuc3BsaWNlKGMudmVydGV4SW5kZXgsMSksQihlKTt0aHJvdyBjfX19dmFyIEY9bmV3IGUsVj1uZXcgZSxrPW5ldyBlLFU9bmV3IGUoMSwwKSxXPW5ldyBlLEc9MCxIPS0xLHE9MSxqPW5ldyB0LFk9bmV3IHQsWD1uZXcgdCxaPW5ldyB0LEo9bmV3IHQsSz1uZXcgdCxRPW5ldyB0LCQ9bmV3IHQsZXQ9bmV3IHQsdHQ9bmV3IHQsaXQ9bmV3IGUsbnQ9bmV3IHQscnQ9bmV3IHQsb3Q9bmV3IHQsYXQ9bmV3IHQsc3Q9e307cmV0dXJuIHN0LnJlbW92ZUR1cGxpY2F0ZXM9ZnVuY3Rpb24oZSl7Zm9yKHZhciBpPWUubGVuZ3RoLG49W10scj1pLTEsbz0wO2k+bztyPW8rKyl7dmFyIGE9ZVtyXSxzPWVbb107dC5lcXVhbHMoYSxzKXx8bi5wdXNoKHMpfXJldHVybiBufSxzdC5jb21wdXRlQXJlYTJEPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmxlbmd0aCxpPTAsbj10LTEscj0wO3Q+cjtuPXIrKyl7dmFyIG89ZVtuXSxhPWVbcl07aSs9by54KmEueS1hLngqby55fXJldHVybi41Kml9LHN0LmNvbXB1dGVXaW5kaW5nT3JkZXIyRD1mdW5jdGlvbihlKXt2YXIgdD1zdC5jb21wdXRlQXJlYTJEKGUpO3JldHVybiB0PjA/Zi5DT1VOVEVSX0NMT0NLV0lTRTpmLkNMT0NLV0lTRX0sc3QudHJpYW5ndWxhdGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUubGVuZ3RoLGk9W10sbj0wO3Q+bjsrK24paVtuXT17cG9zaXRpb246ZVtuXSxpbmRleDpufTtyZXR1cm4gQihpKX0sc3QucmVzZXRTZWVkPWZ1bmN0aW9uKGUpe0c9bihlLDApfSxzdC5jb21wdXRlU3ViZGl2aXNpb249ZnVuY3Rpb24oZSxyLG8pe289bihvLGMuUkFESUFOU19QRVJfREVHUkVFKTtmb3IodmFyIGE9bmV3IG0scz1yLmxlbmd0aCxkPTA7cz5kO2QrPTMpYS5lbnF1ZXVlKHtpMDpyW2RdLGkxOnJbZCsxXSxpMjpyW2QrMl19KTtmb3IodmFyIGYscD1lLnNsaWNlKDApLHY9W10sZz17fTthLmxlbmd0aD4wOyl7dmFyIF8seSxDPWEuZGVxdWV1ZSgpLHc9cFtDLmkwXSxFPXBbQy5pMV0sYj1wW0MuaTJdLFM9dC5hbmdsZUJldHdlZW4odyxFKSxUPXQuYW5nbGVCZXR3ZWVuKEUsYikseD10LmFuZ2xlQmV0d2VlbihiLHcpLEE9TWF0aC5tYXgoUyxNYXRoLm1heChULHgpKTtBPm8/Uz09PUE/KF89TWF0aC5taW4oQy5pMCxDLmkxKS50b1N0cmluZygpKyIgIitNYXRoLm1heChDLmkwLEMuaTEpLnRvU3RyaW5nKCksZj1nW19dLGZ8fCh5PXQuYWRkKHcsRSxuZXcgdCksdC5tdWx0aXBseUJ5U2NhbGFyKHksLjUseSkscC5wdXNoKHkpLGY9cC5sZW5ndGgtMSxnW19dPWYpLGEuZW5xdWV1ZSh7aTA6Qy5pMCxpMTpmLGkyOkMuaTJ9KSxhLmVucXVldWUoe2kwOmYsaTE6Qy5pMSxpMjpDLmkyfSkpOlQ9PT1BPyhfPU1hdGgubWluKEMuaTEsQy5pMikudG9TdHJpbmcoKSsiICIrTWF0aC5tYXgoQy5pMSxDLmkyKS50b1N0cmluZygpLGY9Z1tfXSxmfHwoeT10LmFkZChFLGIsbmV3IHQpLHQubXVsdGlwbHlCeVNjYWxhcih5LC41LHkpLHAucHVzaCh5KSxmPXAubGVuZ3RoLTEsZ1tfXT1mKSxhLmVucXVldWUoe2kwOkMuaTEsaTE6ZixpMjpDLmkwfSksYS5lbnF1ZXVlKHtpMDpmLGkxOkMuaTIsaTI6Qy5pMH0pKTp4PT09QSYmKF89TWF0aC5taW4oQy5pMixDLmkwKS50b1N0cmluZygpKyIgIitNYXRoLm1heChDLmkyLEMuaTApLnRvU3RyaW5nKCksZj1nW19dLGZ8fCh5PXQuYWRkKGIsdyxuZXcgdCksdC5tdWx0aXBseUJ5U2NhbGFyKHksLjUseSkscC5wdXNoKHkpLGY9cC5sZW5ndGgtMSxnW19dPWYpLGEuZW5xdWV1ZSh7aTA6Qy5pMixpMTpmLGkyOkMuaTF9KSxhLmVucXVldWUoe2kwOmYsaTE6Qy5pMCxpMjpDLmkxfSkpOih2LnB1c2goQy5pMCksdi5wdXNoKEMuaTEpLHYucHVzaChDLmkyKSl9dmFyIFA9cC5sZW5ndGgsTT1uZXcgQXJyYXkoMypQKSxJPTA7Zm9yKGY9MDtQPmY7ZisrKXt2YXIgRD1wW2ZdO01bSSsrXT1ELngsTVtJKytdPUQueSxNW0krK109RC56fXJldHVybiBuZXcgbCh7YXR0cmlidXRlczp7cG9zaXRpb246bmV3IHUoe2NvbXBvbmVudERhdGF0eXBlOmkuRE9VQkxFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6TX0pfSxpbmRpY2VzOnYscHJpbWl0aXZlVHlwZTpoLlRSSUFOR0xFU30pfSxzdC5zY2FsZVRvR2VvZGV0aWNIZWlnaHQ9ZnVuY3Rpb24oZSxpLG8scyl7bz1uKG8sYS5XR1M4NCk7dmFyIGw9b3QsdT1hdDtpZihpPW4oaSwwKSxzPW4ocywhMCkscihlKSYmcihlLmF0dHJpYnV0ZXMpJiZyKGUuYXR0cmlidXRlcy5wb3NpdGlvbikpZm9yKHZhciBjPWUuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXMsZD1jLmxlbmd0aCxoPTA7ZD5oO2grPTMpdC5mcm9tQXJyYXkoYyxoLHUpLHMmJih1PW8uc2NhbGVUb0dlb2RldGljU3VyZmFjZSh1LHUpKSxsPW8uZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHUsbCksdC5tdWx0aXBseUJ5U2NhbGFyKGwsaSxsKSx0LmFkZCh1LGwsdSksY1toXT11LngsY1toKzFdPXUueSxjW2grMl09dS56O3JldHVybiBlfSxzdC5lbGltaW5hdGVIb2xlcz1mdW5jdGlvbihlLGkscil7cj1uKHIsYS5XR1M4NCk7Zm9yKHZhciBvPVtdLHM9MDtzPGkubGVuZ3RoO3MrKyl7Zm9yKHZhciBsPVtdLHU9MDt1PGlbc10ubGVuZ3RoO3UrKylsLnB1c2godC5jbG9uZShpW3NdW3VdKSk7by5wdXNoKGwpfWZvcih2YXIgYz1lO28ubGVuZ3RoPjA7KWM9RShjLG8scik7cmV0dXJuIGN9LHN0fSksZGVmaW5lKCJDb3JlL1BvbHlnb25HZW9tZXRyeSIsWyIuL0JvdW5kaW5nUmVjdGFuZ2xlIiwiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMiIsIi4vQ2FydGVzaWFuMyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vRWxsaXBzb2lkVGFuZ2VudFBsYW5lIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL0dlb21ldHJ5QXR0cmlidXRlcyIsIi4vR2VvbWV0cnlJbnN0YW5jZSIsIi4vR2VvbWV0cnlQaXBlbGluZSIsIi4vSW5kZXhEYXRhdHlwZSIsIi4vTWF0aCIsIi4vTWF0cml4MyIsIi4vUG9seWdvbkdlb21ldHJ5TGlicmFyeSIsIi4vUG9seWdvblBpcGVsaW5lIiwiLi9QcmltaXRpdmVUeXBlIiwiLi9RdWF0ZXJuaW9uIiwiLi9RdWV1ZSIsIi4vVmVydGV4Rm9ybWF0IiwiLi9XaW5kaW5nT3JkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyx3LEUsYixTKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gVChlLHQsaSxyKXtmb3IodmFyIG89dy5mcm9tQXhpc0FuZ2xlKGUuX3BsYW5lLm5vcm1hbCxpLE8pLHM9Zy5mcm9tUXVhdGVybmlvbihvLFIpLGw9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLHU9TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLGM9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLGQ9TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLGg9dC5sZW5ndGgsbT0wO2g+bTsrK20pe3ZhciBmPW4uY2xvbmUodFttXSxEKTtnLm11bHRpcGx5QnlWZWN0b3IocyxmLGYpO3ZhciBwPWUucHJvamVjdFBvaW50T250b1BsYW5lKGYsSSk7YShwKSYmKGw9TWF0aC5taW4obCxwLngpLHU9TWF0aC5tYXgodSxwLngpLGM9TWF0aC5taW4oYyxwLnkpLGQ9TWF0aC5tYXgoZCxwLnkpKX1yZXR1cm4gci54PWwsci55PWMsci53aWR0aD11LWwsci5oZWlnaHQ9ZC1jLHJ9ZnVuY3Rpb24geChlLHQsaSxuKXt2YXIgbz11LmZyb21Qb2ludHModCxlKSxhPW8ucHJvamVjdFBvaW50c09udG9QbGFuZSh0LEwpLHM9eS5jb21wdXRlV2luZGluZ09yZGVyMkQoYSk7cz09PVMuQ0xPQ0tXSVNFJiYoYS5yZXZlcnNlKCksdC5yZXZlcnNlKCkpO3ZhciBsPXkudHJpYW5ndWxhdGUoYSk7bC5sZW5ndGg8MyYmKGw9WzAsMSwyXSk7dmFyIGg7aWYobil7Zm9yKHZhciBmPXQubGVuZ3RoLHA9bmV3IEFycmF5KDMqZiksdj0wLGc9MDtmPmc7ZysrKXt2YXIgXz10W2ddO3BbdisrXT1fLngscFt2KytdPV8ueSxwW3YrK109Xy56fWg9bmV3IGMoe2F0dHJpYnV0ZXM6e3Bvc2l0aW9uOm5ldyBkKHtjb21wb25lbnREYXRhdHlwZTpyLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOnB9KX0saW5kaWNlczpsLHByaW1pdGl2ZVR5cGU6Qy5UUklBTkdMRVN9KX1lbHNlIGg9eS5jb21wdXRlU3ViZGl2aXNpb24odCxsLGkpO3JldHVybiBuZXcgbSh7Z2VvbWV0cnk6aH0pfWZ1bmN0aW9uIEEoZSx0LG8sYSxzLGwsYyl7aWYoZS5zdHx8ZS5ub3JtYWx8fGUudGFuZ2VudHx8ZS5iaW5vcm1hbCl7dmFyIGg9dS5mcm9tUG9pbnRzKG8sYSksbT1UKGgsbyxzLE4pLGY9VztmLng9bS54LGYueT1tLnk7dmFyIHA9dC5hdHRyaWJ1dGVzLnBvc2l0aW9uLnZhbHVlcyxfPXAubGVuZ3RoLHk9ZS5zdD9uZXcgRmxvYXQzMkFycmF5KDIqKF8vMykpOnZvaWQgMCxDPWUubm9ybWFsP25ldyBGbG9hdDMyQXJyYXkoXyk6dm9pZCAwLEU9ZS50YW5nZW50P25ldyBGbG9hdDMyQXJyYXkoXyk6dm9pZCAwLGI9ZS5iaW5vcm1hbD9uZXcgRmxvYXQzMkFycmF5KF8pOnZvaWQgMCxTPTAseD0wLEE9QixQPUYsTT1WLEk9ITAsRD13LmZyb21BeGlzQW5nbGUoaC5fcGxhbmUubm9ybWFsLHMscSksTz1nLmZyb21RdWF0ZXJuaW9uKEQsaiksUj1fLzIsTD1fLzM7bCYmKF8vPTIpO2Zvcih2YXIgWT0wO18+WTtZKz0zKXt2YXIgWD1uLmZyb21BcnJheShwLFksSCk7aWYoZS5zdCl7dmFyIFo9Zy5tdWx0aXBseUJ5VmVjdG9yKE8sWCx6KSxKPWgucHJvamVjdFBvaW50T250b1BsYW5lKFosRyk7aS5zdWJ0cmFjdChKLGYsSiksbCYmKHlbUytMXT1KLngvbS53aWR0aCx5W1MrMStMXT1KLnkvbS5oZWlnaHQpLHlbU109Si54L20ud2lkdGgseVtTKzFdPUoueS9tLmhlaWdodCxTKz0yfWlmKGUubm9ybWFsfHxlLnRhbmdlbnR8fGUuYmlub3JtYWwpe3ZhciBLPXgrMSxRPXgrMjtpZihjKXtpZihfPlkrMyl7dmFyICQ9bi5mcm9tQXJyYXkocCxZKzMsayk7aWYoSSl7dmFyIGV0PW4uZnJvbUFycmF5KHAsWStfLFUpO24uc3VidHJhY3QoJCxYLCQpLG4uc3VidHJhY3QoZXQsWCxldCksQT1uLm5vcm1hbGl6ZShuLmNyb3NzKGV0LCQsQSksQSksST0hMX1uLmVxdWFsc0Vwc2lsb24oJCxYLHYuRVBTSUxPTjEwKSYmKEk9ITApfShlLnRhbmdlbnR8fGUuYmlub3JtYWwpJiYoTT1hLmdlb2RldGljU3VyZmFjZU5vcm1hbChYLE0pLGUudGFuZ2VudCYmKFA9bi5ub3JtYWxpemUobi5jcm9zcyhNLEEsUCksUCkpKX1lbHNlIEE9YS5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoWCxBKSwoZS50YW5nZW50fHxlLmJpbm9ybWFsKSYmKFA9bi5jcm9zcyhuLlVOSVRfWixBLFApLFA9bi5ub3JtYWxpemUoZy5tdWx0aXBseUJ5VmVjdG9yKE8sUCxQKSxQKSxlLmJpbm9ybWFsJiYoTT1uLm5vcm1hbGl6ZShuLmNyb3NzKEEsUCxNKSxNKSkpO2Uubm9ybWFsJiYobCYmIWM/KENbeCtSXT0tQS54LENbSytSXT0tQS55LENbUStSXT0tQS56KTooQ1t4K1JdPUEueCxDW0srUl09QS55LENbUStSXT1BLnopLENbeF09QS54LENbS109QS55LENbUV09QS56KSxlLnRhbmdlbnQmJihsJiYhYz8oRVt4K1JdPS1QLngsRVtLK1JdPS1QLnksRVtRK1JdPS1QLnopOihFW3grUl09UC54LEVbSytSXT1QLnksRVtRK1JdPVAueiksRVt4XT1QLngsRVtLXT1QLnksRVtRXT1QLnopLGUuYmlub3JtYWwmJihsJiYoYlt4K1JdPU0ueCxiW0srUl09TS55LGJbUStSXT1NLnopLGJbeF09TS54LGJbS109TS55LGJbUV09TS56KSx4Kz0zfX1lLnN0JiYodC5hdHRyaWJ1dGVzLnN0PW5ldyBkKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Mix2YWx1ZXM6eX0pKSxlLm5vcm1hbCYmKHQuYXR0cmlidXRlcy5ub3JtYWw9bmV3IGQoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpDfSkpLGUudGFuZ2VudCYmKHQuYXR0cmlidXRlcy50YW5nZW50PW5ldyBkKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6RX0pKSxlLmJpbm9ybWFsJiYodC5hdHRyaWJ1dGVzLmJpbm9ybWFsPW5ldyBkKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6Yn0pKX1yZXR1cm4gdH1mdW5jdGlvbiBQKGUsdCxpKXt2YXIgbyxhLHMsbCx1LG0sZixnLHksdz1bXSxFPWUubGVuZ3RoO2lmKGkpZm9yKGY9MDtFPmY7ZisrKWc9ZVtmXSx5PWVbKGYrMSklRV0sdy5wdXNoKGcueCxnLnksZy56LHkueCx5LnkseS56KTtlbHNlIGZvcihmPTA7RT5mO2YrKylnPWVbZl0seT1lWyhmKzEpJUVdLG89Xy5zdWJkaXZpZGVMaW5lKGcseSx0KSxvLnB1c2goeS54LHkueSx5LnopLHc9dy5jb25jYXQobyk7dz13LmNvbmNhdCh3KSxFPXcubGVuZ3RoO3ZhciBiPXAuY3JlYXRlVHlwZWRBcnJheShFLzMsRS02KmUubGVuZ3RoKTtmb3IoYT0wLEUvPTYsZj0wO0U+ZjtmKyspcz1mLGw9cysxLGc9bi5mcm9tQXJyYXkodywzKnMsaykseT1uLmZyb21BcnJheSh3LDMqbCxVKSxuLmVxdWFsc0Vwc2lsb24oZyx5LHYuRVBTSUxPTjYpfHwodT1zK0UsbT11KzEsYlthKytdPXMsYlthKytdPXUsYlthKytdPWwsYlthKytdPWwsYlthKytdPXUsYlthKytdPW0pO3JldHVybiBuZXcgYyh7YXR0cmlidXRlczpuZXcgaCh7cG9zaXRpb246bmV3IGQoe2NvbXBvbmVudERhdGF0eXBlOnIuRE9VQkxFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6d30pfSksaW5kaWNlczpiLHByaW1pdGl2ZVR5cGU6Qy5UUklBTkdMRVN9KX1mdW5jdGlvbiBNKGUsdCxpLG4sbyl7dmFyIGE9eChlLHQsaSxvKS5nZW9tZXRyeSxzPWEuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXMsbD1hLmluZGljZXMsZj1zLmNvbmNhdChzKSx2PWYubGVuZ3RoLzMsZz1wLmNyZWF0ZVR5cGVkQXJyYXkodiwyKmwubGVuZ3RoKTtnLnNldChsKTt2YXIgXyxDPWwubGVuZ3RoLHc9di8yO2ZvcihfPTA7Qz5fO18rPTMpe3ZhciBFPWdbX10rdyxiPWdbXysxXSt3LFQ9Z1tfKzJdK3c7Z1tfK0NdPVQsZ1tfKzErQ109YixnW18rMitDXT1FfXZhciBBPW5ldyBjKHthdHRyaWJ1dGVzOm5ldyBoKHtwb3NpdGlvbjpuZXcgZCh7Y29tcG9uZW50RGF0YXR5cGU6ci5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpmfSl9KSxpbmRpY2VzOmcscHJpbWl0aXZlVHlwZTphLnByaW1pdGl2ZVR5cGV9KSxNPXt0b3BBbmRCb3R0b206bmV3IG0oe2dlb21ldHJ5OkF9KX07TS53YWxscz1bXTt2YXIgST1uLm91dGVyUmluZyxEPXUuZnJvbVBvaW50cyhJLGUpLE89RC5wcm9qZWN0UG9pbnRzT250b1BsYW5lKEksWSksUj15LmNvbXB1dGVXaW5kaW5nT3JkZXIyRChPKTtSPT09Uy5DTE9DS1dJU0UmJkkucmV2ZXJzZSgpO3ZhciBMPVAoSSxpLG8pO00ud2FsbHMucHVzaChuZXcgbSh7Z2VvbWV0cnk6TH0pKTt2YXIgTj1uLmhvbGVzO2ZvcihfPTA7XzxOLmxlbmd0aDtfKyspe3ZhciB6PU5bX107RD11LmZyb21Qb2ludHMoeixlKSxPPUQucHJvamVjdFBvaW50c09udG9QbGFuZSh6LFkpLFI9eS5jb21wdXRlV2luZGluZ09yZGVyMkQoTyksUj09PVMuQ0xPQ0tXSVNFJiZ6LnJldmVyc2UoKSxMPVAoeixpKSxNLndhbGxzLnB1c2gobmV3IG0oe2dlb21ldHJ5Okx9KSl9cmV0dXJuIE19dmFyIEk9bmV3IGksRD1uZXcgbixPPW5ldyB3LFI9bmV3IGcsTD1bXSxOPW5ldyBlLHo9bmV3IG4sQj1uZXcgbixGPW5ldyBuLFY9bmV3IG4saz1uZXcgbixVPW5ldyBuLFc9bmV3IGksRz1uZXcgaSxIPW5ldyBuLHE9bmV3IHcsaj1uZXcgZyxZPVtdLFg9ZnVuY3Rpb24oZSl7ZT1vKGUsby5FTVBUWV9PQkpFQ1QpO3ZhciB0PW8oZS52ZXJ0ZXhGb3JtYXQsYi5ERUZBVUxUKSxpPW8oZS5lbGxpcHNvaWQsbC5XR1M4NCksbj1vKGUuZ3JhbnVsYXJpdHksdi5SQURJQU5TX1BFUl9ERUdSRUUpLHI9byhlLnN0Um90YXRpb24sMCkscz1vKGUuaGVpZ2h0LDApLHU9byhlLnBlclBvc2l0aW9uSGVpZ2h0LCExKSxjPWUuZXh0cnVkZWRIZWlnaHQsZD1hKGMpJiYoIXYuZXF1YWxzRXBzaWxvbihzLGMsdi5FUFNJTE9ONil8fHUpO2lmKGQpe3ZhciBoPWM7Yz1NYXRoLm1pbihoLHMpLHM9TWF0aC5tYXgoaCxzKX12YXIgbT1lLnBvbHlnb25IaWVyYXJjaHk7dGhpcy5fdmVydGV4Rm9ybWF0PXQsdGhpcy5fZWxsaXBzb2lkPWksdGhpcy5fZ3JhbnVsYXJpdHk9bix0aGlzLl9zdFJvdGF0aW9uPXIsdGhpcy5faGVpZ2h0PXMsdGhpcy5fZXh0cnVkZWRIZWlnaHQ9Yyx0aGlzLl9leHRydWRlPWQsdGhpcy5fcG9seWdvbkhpZXJhcmNoeT1tLHRoaXMuX3BlclBvc2l0aW9uSGVpZ2h0PXUsdGhpcy5fd29ya2VyTmFtZT0iY3JlYXRlUG9seWdvbkdlb21ldHJ5In07cmV0dXJuIFguZnJvbVBvc2l0aW9ucz1mdW5jdGlvbihlKXtlPW8oZSxvLkVNUFRZX09CSkVDVCk7dmFyIHQ9e3BvbHlnb25IaWVyYXJjaHk6e3Bvc2l0aW9uczplLnBvc2l0aW9uc30saGVpZ2h0OmUuaGVpZ2h0LGV4dHJ1ZGVkSGVpZ2h0OmUuZXh0cnVkZWRIZWlnaHQsdmVydGV4Rm9ybWF0OmUudmVydGV4Rm9ybWF0LHN0Um90YXRpb246ZS5zdFJvdGF0aW9uLGVsbGlwc29pZDplLmVsbGlwc29pZCxncmFudWxhcml0eTplLmdyYW51bGFyaXR5LHBlclBvc2l0aW9uSGVpZ2h0OmUucGVyUG9zaXRpb25IZWlnaHR9O3JldHVybiBuZXcgWCh0KX0sWC5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihlKXt2YXIgaSxuLHIsbz1lLl92ZXJ0ZXhGb3JtYXQsbD1lLl9lbGxpcHNvaWQsdT1lLl9ncmFudWxhcml0eSxkPWUuX3N0Um90YXRpb24saD1lLl9oZWlnaHQsbT1lLl9leHRydWRlZEhlaWdodCx2PWUuX2V4dHJ1ZGUsZz1lLl9wb2x5Z29uSGllcmFyY2h5LEM9ZS5fcGVyUG9zaXRpb25IZWlnaHQsdz1bXSxiPW5ldyBFO2IuZW5xdWV1ZShnKSxnPVtdO2Zvcih2YXIgUzswIT09Yi5sZW5ndGg7KXt2YXIgVD1iLmRlcXVldWUoKSxQPVQucG9zaXRpb25zLEk9VC5ob2xlcztpZihQPXkucmVtb3ZlRHVwbGljYXRlcyhQKSxQLmxlbmd0aDwzKXRocm93IG5ldyBzKCJBdCBsZWFzdCB0aHJlZSBwb3NpdGlvbnMgYXJlIHJlcXVpcmVkLiIpO3ZhciBEPUk/SS5sZW5ndGg6MDtpZigwPT09RClnLnB1c2goe291dGVyUmluZzpQLGhvbGVzOltdfSksdy5wdXNoKFApO2Vsc2V7dmFyIE89W107Zm9yKFM9MDtEPlM7UysrKXt2YXIgUj1JW1NdO2lmKFIucG9zaXRpb25zPXkucmVtb3ZlRHVwbGljYXRlcyhSLnBvc2l0aW9ucyksUi5wb3NpdGlvbnMubGVuZ3RoPDMpdGhyb3cgbmV3IHMoIkF0IGxlYXN0IHRocmVlIHBvc2l0aW9ucyBhcmUgcmVxdWlyZWQuIik7Ty5wdXNoKFIucG9zaXRpb25zKTt2YXIgTD0wO2EoUi5ob2xlcykmJihMPVIuaG9sZXMubGVuZ3RoKTtmb3IodmFyIE49MDtMPk47TisrKWIuZW5xdWV1ZShSLmhvbGVzW05dKX1nLnB1c2goe291dGVyUmluZzpQLGhvbGVzOk99KTt2YXIgej15LmVsaW1pbmF0ZUhvbGVzKFAsTyk7dy5wdXNoKHopfX1yPXdbMF07dmFyIEIsRj1bXTtpZih2KXtmb3IoUz0wO1M8dy5sZW5ndGg7UysrKWlmKEI9TShsLHdbU10sdSxnW1NdLEMpLGEoQikpe249Qi50b3BBbmRCb3R0b20sbi5nZW9tZXRyeT1fLnNjYWxlVG9HZW9kZXRpY0hlaWdodEV4dHJ1ZGVkKG4uZ2VvbWV0cnksaCxtLGwsQyksbi5nZW9tZXRyeT1BKG8sbi5nZW9tZXRyeSxyLGwsZCwhMCwhMSksRi5wdXNoKG4pLGk9Qi53YWxscztmb3IodmFyIFY9MDtWPGkubGVuZ3RoO1YrKyl7dmFyIGs9aVtWXTtrLmdlb21ldHJ5PV8uc2NhbGVUb0dlb2RldGljSGVpZ2h0RXh0cnVkZWQoay5nZW9tZXRyeSxoLG0sbCxDKSxrLmdlb21ldHJ5PUEobyxrLmdlb21ldHJ5LHIsbCxkLCEwLCEwKSxGLnB1c2goayl9fX1lbHNlIGZvcihTPTA7Uzx3Lmxlbmd0aDtTKyspQj14KGwsd1tTXSx1LEMpLGEoQikmJihCLmdlb21ldHJ5PXkuc2NhbGVUb0dlb2RldGljSGVpZ2h0KEIuZ2VvbWV0cnksaCxsLCFDKSxCLmdlb21ldHJ5PUEobyxCLmdlb21ldHJ5LHIsbCxkLCExLCExKSxGLnB1c2goQikpO0I9Zi5jb21iaW5lKEYpLEIuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXM9bmV3IEZsb2F0NjRBcnJheShCLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzKSxCLmluZGljZXM9cC5jcmVhdGVUeXBlZEFycmF5KEIuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXMubGVuZ3RoLzMsQi5pbmRpY2VzKTt2YXIgVT1CLmF0dHJpYnV0ZXMsVz10LmZyb21WZXJ0aWNlcyhVLnBvc2l0aW9uLnZhbHVlcyk7cmV0dXJuIG8ucG9zaXRpb258fGRlbGV0ZSBVLnBvc2l0aW9uLG5ldyBjKHthdHRyaWJ1dGVzOlUsaW5kaWNlczpCLmluZGljZXMscHJpbWl0aXZlVHlwZTpCLnByaW1pdGl2ZVR5cGUsYm91bmRpbmdTcGhlcmU6V30pfSxYfSksZGVmaW5lKCJDb3JlL1BvbHlnb25PdXRsaW5lR2VvbWV0cnkiLFsiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vRWxsaXBzb2lkVGFuZ2VudFBsYW5lIiwiLi9HZW9tZXRyeSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGUiLCIuL0dlb21ldHJ5QXR0cmlidXRlcyIsIi4vR2VvbWV0cnlJbnN0YW5jZSIsIi4vR2VvbWV0cnlQaXBlbGluZSIsIi4vSW5kZXhEYXRhdHlwZSIsIi4vTWF0aCIsIi4vUG9seWdvbkdlb21ldHJ5TGlicmFyeSIsIi4vUG9seWdvblBpcGVsaW5lIiwiLi9QcmltaXRpdmVUeXBlIiwiLi9RdWV1ZSIsIi4vV2luZGluZ09yZGVyIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHkoZSxpLG4scil7dmFyIG89cC5yZW1vdmVEdXBsaWNhdGVzKGkpLGQ9YS5mcm9tUG9pbnRzKG8sZSksbT1kLnByb2plY3RQb2ludHNPbnRvUGxhbmUobyx3KSxnPXAuY29tcHV0ZVdpbmRpbmdPcmRlcjJEKG0pO2c9PT1fLkNMT0NLV0lTRSYmKG0ucmV2ZXJzZSgpLG8ucmV2ZXJzZSgpKTt2YXIgeSxDPVtdLEU9by5sZW5ndGg7aWYocilmb3IoeT0wO0U+eTt5Kyspe3ZhciBiPW9beV0sUz1vWyh5KzEpJUVdO0MucHVzaChiLngsYi55LGIueixTLngsUy55LFMueil9ZWxzZSBmb3IoeT0wO0U+eTt5KyspQz1DLmNvbmNhdChmLnN1YmRpdmlkZUxpbmUob1t5XSxvWyh5KzEpJUVdLG4pKTtFPUMubGVuZ3RoLzM7dmFyIFQ9MipFLHg9aC5jcmVhdGVUeXBlZEFycmF5KEMubGVuZ3RoLzMsVCksQT0wO2Zvcih5PTA7RS0xPnk7eSsrKXhbQSsrXT15LHhbQSsrXT15KzE7cmV0dXJuIHhbQSsrXT1FLTEseFtBKytdPTAsbmV3IGMoe2dlb21ldHJ5Om5ldyBzKHthdHRyaWJ1dGVzOm5ldyB1KHtwb3NpdGlvbjpuZXcgbCh7Y29tcG9uZW50RGF0YXR5cGU6dC5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpuZXcgRmxvYXQ2NEFycmF5KEMpfSl9KSxpbmRpY2VzOngscHJpbWl0aXZlVHlwZTp2LkxJTkVTfSl9KX1mdW5jdGlvbiBDKGUsaSxuLHIpe3ZhciBvPXAucmVtb3ZlRHVwbGljYXRlcyhpKSxkPWEuZnJvbVBvaW50cyhvLGUpLG09ZC5wcm9qZWN0UG9pbnRzT250b1BsYW5lKG8sdyksZz1wLmNvbXB1dGVXaW5kaW5nT3JkZXIyRChtKTtnPT09Xy5DTE9DS1dJU0UmJihtLnJldmVyc2UoKSxvLnJldmVyc2UoKSk7dmFyIHksQz1bXSxFPW8ubGVuZ3RoLGI9bmV3IEFycmF5KEUpO2lmKGJbMF09MCxyKXt2YXIgUyxUO2Zvcih5PTA7RS0xPnk7eSsrKVM9b1t5XSxUPW9bKHkrMSklRV0sQy5wdXNoKFMueCxTLnksUy56LFQueCxULnksVC56KSxiW3krMV09Qy5sZW5ndGgvMztTPW9bRS0xXSxUPW9bMF0sQy5wdXNoKFMueCxTLnksUy56LFQueCxULnksVC56KX1lbHNle2Zvcih5PTA7RS0xPnk7eSsrKUM9Qy5jb25jYXQoZi5zdWJkaXZpZGVMaW5lKG9beV0sb1t5KzFdLG4pKSxiW3krMV09Qy5sZW5ndGgvMztDPUMuY29uY2F0KGYuc3ViZGl2aWRlTGluZShvW0UtMV0sb1swXSxuKSl9RT1DLmxlbmd0aC8zO3ZhciB4PTIqKDIqRStiLmxlbmd0aCksQT1oLmNyZWF0ZVR5cGVkQXJyYXkoQy5sZW5ndGgvMyx4KSxQPTA7Zm9yKHk9MDtFLTE+eTt5KyspQVtQKytdPXksQVtQKytdPXkrMSxBW1ArK109eStFLEFbUCsrXT15KzErRTtmb3IoQVtQKytdPUUtMSxBW1ArK109MCxBW1ArK109RStFLTEsQVtQKytdPUUseT0wO3k8Yi5sZW5ndGg7eSsrKXt2YXIgTT1iW3ldO0FbUCsrXT1NLEFbUCsrXT1NK0V9cmV0dXJuIEM9Qy5jb25jYXQoQyksbmV3IGMoe2dlb21ldHJ5Om5ldyBzKHthdHRyaWJ1dGVzOm5ldyB1KHtwb3NpdGlvbjpuZXcgbCh7Y29tcG9uZW50RGF0YXR5cGU6dC5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpuZXcgRmxvYXQ2NEFycmF5KEMpfSl9KSxpbmRpY2VzOkEscHJpbWl0aXZlVHlwZTp2LkxJTkVTfSl9KX12YXIgdz1bXSxFPWZ1bmN0aW9uKGUpe2U9aShlLGkuRU1QVFlfT0JKRUNUKTt2YXIgdD1pKGUuZWxsaXBzb2lkLG8uV0dTODQpLHI9aShlLmdyYW51bGFyaXR5LG0uUkFESUFOU19QRVJfREVHUkVFKSxhPWkoZS5oZWlnaHQsMCkscz1pKGUucGVyUG9zaXRpb25IZWlnaHQsITEpLGw9ZS5leHRydWRlZEhlaWdodCx1PW4obCkmJighbS5lcXVhbHNFcHNpbG9uKGEsbCxtLkVQU0lMT042KXx8cyk7aWYodSl7dmFyIGM9bDtsPU1hdGgubWluKGMsYSksYT1NYXRoLm1heChjLGEpfXZhciBkPWUucG9seWdvbkhpZXJhcmNoeTt0aGlzLl9lbGxpcHNvaWQ9dCx0aGlzLl9ncmFudWxhcml0eT1yLHRoaXMuX2hlaWdodD1hLHRoaXMuX2V4dHJ1ZGVkSGVpZ2h0PWwsdGhpcy5fZXh0cnVkZT11LHRoaXMuX3BvbHlnb25IaWVyYXJjaHk9ZCx0aGlzLl9wZXJQb3NpdGlvbkhlaWdodD1zLHRoaXMuX3dvcmtlck5hbWU9ImNyZWF0ZVBvbHlnb25PdXRsaW5lR2VvbWV0cnkifTtyZXR1cm4gRS5mcm9tUG9zaXRpb25zPWZ1bmN0aW9uKGUpe2U9aShlLGkuRU1QVFlfT0JKRUNUKTt2YXIgdD17cG9seWdvbkhpZXJhcmNoeTp7cG9zaXRpb25zOmUucG9zaXRpb25zfSxoZWlnaHQ6ZS5oZWlnaHQsZXh0cnVkZWRIZWlnaHQ6ZS5leHRydWRlZEhlaWdodCxlbGxpcHNvaWQ6ZS5lbGxpcHNvaWQsZ3JhbnVsYXJpdHk6ZS5ncmFudWxhcml0eSxwZXJQb3NpdGlvbkhlaWdodDplLnBlclBvc2l0aW9uSGVpZ2h0fTtyZXR1cm4gbmV3IEUodCl9LEUuY3JlYXRlR2VvbWV0cnk9ZnVuY3Rpb24odCl7dmFyIGk9dC5fZWxsaXBzb2lkLG89dC5fZ3JhbnVsYXJpdHksYT10Ll9oZWlnaHQsbD10Ll9leHRydWRlZEhlaWdodCx1PXQuX2V4dHJ1ZGUsYz10Ll9wb2x5Z29uSGllcmFyY2h5LGg9dC5fcGVyUG9zaXRpb25IZWlnaHQsbT1bXSx2PW5ldyBnO3YuZW5xdWV1ZShjKTtmb3IodmFyIF87MCE9PXYubGVuZ3RoOyl7dmFyIHc9di5kZXF1ZXVlKCksRT13LnBvc2l0aW9ucztpZihFLmxlbmd0aDwzKXRocm93IG5ldyByKCJBdCBsZWFzdCB0aHJlZSBwb3NpdGlvbnMgYXJlIHJlcXVpcmVkLiIpO3ZhciBiPXcuaG9sZXM/dy5ob2xlcy5sZW5ndGg6MDtmb3IoXz0wO2I+XztfKyspe3ZhciBTPXcuaG9sZXNbX107bS5wdXNoKFMucG9zaXRpb25zKTt2YXIgVD0wO24oUy5ob2xlcykmJihUPVMuaG9sZXMubGVuZ3RoKTtmb3IodmFyIHg9MDtUPng7eCsrKXYuZW5xdWV1ZShTLmhvbGVzW3hdKX1tLnB1c2goRSl9dmFyIEEsUD1bXTtpZih1KWZvcihfPTA7XzxtLmxlbmd0aDtfKyspQT1DKGksbVtfXSxvLGgpLG4oQSkmJihBLmdlb21ldHJ5PWYuc2NhbGVUb0dlb2RldGljSGVpZ2h0RXh0cnVkZWQoQS5nZW9tZXRyeSxhLGwsaSxoKSxQLnB1c2goQSkpO2Vsc2UgZm9yKF89MDtfPG0ubGVuZ3RoO18rKylBPXkoaSxtW19dLG8saCksbihBKSYmKEEuZ2VvbWV0cnk9cC5zY2FsZVRvR2VvZGV0aWNIZWlnaHQoQS5nZW9tZXRyeSxhLGksIWgpLFAucHVzaChBKSk7QT1kLmNvbWJpbmUoUCk7dmFyIE09ZS5mcm9tVmVydGljZXMoQS5hdHRyaWJ1dGVzLnBvc2l0aW9uLnZhbHVlcyk7cmV0dXJuIG5ldyBzKHthdHRyaWJ1dGVzOkEuYXR0cmlidXRlcyxpbmRpY2VzOkEuaW5kaWNlcyxwcmltaXRpdmVUeXBlOkEucHJpbWl0aXZlVHlwZSxib3VuZGluZ1NwaGVyZTpNfSl9LEV9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1BvbHlnb25HZW9tZXRyeVVwZGF0ZXIiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvR2VvbWV0cnlJbnN0YW5jZSIsIi4uL0NvcmUvSXNvODYwMSIsIi4uL0NvcmUvUG9seWdvbkdlb21ldHJ5IiwiLi4vQ29yZS9Qb2x5Z29uT3V0bGluZUdlb21ldHJ5IiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL1NjZW5lL01hdGVyaWFsQXBwZWFyYW5jZSIsIi4uL1NjZW5lL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUHJpbWl0aXZlIiwiLi9Db2xvck1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL01hdGVyaWFsUHJvcGVydHkiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5KXsidXNlIHN0cmljdCI7dmFyIEM9di5mcm9tQ29sb3IoZS5XSElURSksdz1uZXcgZyghMCksRT1uZXcgZyghMCksYj1uZXcgZyghMSksUz1uZXcgZyhlLkJMQUNLKSxUPWZ1bmN0aW9uKGUpe3RoaXMuaWQ9ZSx0aGlzLnZlcnRleEZvcm1hdD12b2lkIDAsdGhpcy5wb2x5Z29uSGllcmFyY2h5PXtwb3NpdGlvbnM6dm9pZCAwfSx0aGlzLnBlclBvc2l0aW9uSGVpZ2h0PXZvaWQgMCx0aGlzLmhlaWdodD12b2lkIDAsdGhpcy5leHRydWRlZEhlaWdodD12b2lkIDAsdGhpcy5ncmFudWxhcml0eT12b2lkIDAsdGhpcy5zdFJvdGF0aW9uPXZvaWQgMH0seD1mdW5jdGlvbihlKXt0aGlzLl9lbnRpdHk9ZSx0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb249ZS5kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKHgucHJvdG90eXBlLl9vbkVudGl0eVByb3BlcnR5Q2hhbmdlZCx0aGlzKSx0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9pc0Nsb3NlZD0hMSx0aGlzLl9keW5hbWljPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZD1uZXcgcyx0aGlzLl9zaG93UHJvcGVydHk9dm9pZCAwLHRoaXMuX21hdGVyaWFsUHJvcGVydHk9dm9pZCAwLHRoaXMuX2hhc0NvbnN0YW50T3V0bGluZT0hMCx0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5PXZvaWQgMCx0aGlzLl9vdXRsaW5lQ29sb3JQcm9wZXJ0eT12b2lkIDAsdGhpcy5fb3B0aW9ucz1uZXcgVChlKSx0aGlzLl9vbkVudGl0eVByb3BlcnR5Q2hhbmdlZChlLCJwb2x5Z29uIixlLnBvbHlnb24sdm9pZCAwKX07cih4LHtwZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOmZ9LG1hdGVyaWFsQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOm19fSkscih4LnByb3RvdHlwZSx7ZW50aXR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW50aXR5fX0sZmlsbEVuYWJsZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9maWxsRW5hYmxlZH19LGhhc0NvbnN0YW50RmlsbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2ZpbGxFbmFibGVkfHwhbih0aGlzLl9lbnRpdHkuYXZhaWxhYmlsaXR5KSYmeS5pc0NvbnN0YW50KHRoaXMuX3Nob3dQcm9wZXJ0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9maWxsUHJvcGVydHkpfX0sZmlsbE1hdGVyaWFsUHJvcGVydHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXRlcmlhbFByb3BlcnR5fX0sb3V0bGluZUVuYWJsZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vdXRsaW5lRW5hYmxlZH19LGhhc0NvbnN0YW50T3V0bGluZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX291dGxpbmVFbmFibGVkfHwhbih0aGlzLl9lbnRpdHkuYXZhaWxhYmlsaXR5KSYmeS5pc0NvbnN0YW50KHRoaXMuX3Nob3dQcm9wZXJ0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5KX19LG91dGxpbmVDb2xvclByb3BlcnR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHl9fSxpc0R5bmFtaWM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9keW5hbWljCn19LGlzQ2xvc2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNDbG9zZWR9fSxnZW9tZXRyeUNoYW5nZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9nZW9tZXRyeUNoYW5nZWR9fX0pLHgucHJvdG90eXBlLmlzT3V0bGluZVZpc2libGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZW50aXR5O3JldHVybiB0aGlzLl9vdXRsaW5lRW5hYmxlZCYmdC5pc0F2YWlsYWJsZShlKSYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGUpJiZ0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5LmdldFZhbHVlKGUpfSx4LnByb3RvdHlwZS5pc0ZpbGxlZD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9lbnRpdHk7cmV0dXJuIHRoaXMuX2ZpbGxFbmFibGVkJiZ0LmlzQXZhaWxhYmxlKGUpJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSkmJnRoaXMuX2ZpbGxQcm9wZXJ0eS5nZXRWYWx1ZShlKX0seC5wcm90b3R5cGUuY3JlYXRlRmlsbEdlb21ldHJ5SW5zdGFuY2U9ZnVuY3Rpb24oaSl7dmFyIHIsbyxhPXRoaXMuX2VudGl0eSxzPWEuaXNBdmFpbGFibGUoaSksdT1uZXcgaChzJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoaSkmJnRoaXMuX2ZpbGxQcm9wZXJ0eS5nZXRWYWx1ZShpKSk7aWYodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eSBpbnN0YW5jZW9mIHYpe3ZhciBkPWUuV0hJVEU7bih0aGlzLl9tYXRlcmlhbFByb3BlcnR5LmNvbG9yKSYmKHRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IuaXNDb25zdGFudHx8cykmJihkPXRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IuZ2V0VmFsdWUoaSkpLG89dC5mcm9tQ29sb3IoZCkscj17c2hvdzp1LGNvbG9yOm99fWVsc2Ugcj17c2hvdzp1fTtyZXR1cm4gbmV3IGwoe2lkOmEsZ2VvbWV0cnk6bmV3IGModGhpcy5fb3B0aW9ucyksYXR0cmlidXRlczpyfSl9LHgucHJvdG90eXBlLmNyZWF0ZU91dGxpbmVHZW9tZXRyeUluc3RhbmNlPWZ1bmN0aW9uKGkpe3ZhciBuPXRoaXMuX2VudGl0eSxyPW4uaXNBdmFpbGFibGUoaSk7cmV0dXJuIG5ldyBsKHtpZDpuLGdlb21ldHJ5Om5ldyBkKHRoaXMuX29wdGlvbnMpLGF0dHJpYnV0ZXM6e3Nob3c6bmV3IGgociYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGkpJiZ0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5LmdldFZhbHVlKGkpKSxjb2xvcjp0LmZyb21Db2xvcihyP3RoaXMuX291dGxpbmVDb2xvclByb3BlcnR5LmdldFZhbHVlKGkpOmUuQkxBQ0spfX0pfSx4LnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSx4LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZW50aXR5U3Vic2NyaXB0aW9uKCksbyh0aGlzKX0seC5wcm90b3R5cGUuX29uRW50aXR5UHJvcGVydHlDaGFuZ2VkPWZ1bmN0aW9uKGUsdCl7aWYoImF2YWlsYWJpbGl0eSI9PT10fHwicG9seWdvbiI9PT10KXt2YXIgcj10aGlzLl9lbnRpdHkucG9seWdvbjtpZighbihyKSlyZXR1cm4odGhpcy5fZmlsbEVuYWJsZWR8fHRoaXMuX291dGxpbmVFbmFibGVkKSYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIG89ci5maWxsLGE9bihvKSYmby5pc0NvbnN0YW50P28uZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTohMCxzPXIub3V0bGluZSxsPW4ocyk7aWYobCYmcy5pc0NvbnN0YW50JiYobD1zLmdldFZhbHVlKHUuTUlOSU1VTV9WQUxVRSkpLCFhJiYhbClyZXR1cm4odGhpcy5fZmlsbEVuYWJsZWR8fHRoaXMuX291dGxpbmVFbmFibGVkKSYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIGM9ci5wb3NpdGlvbnMsZD1yLnNob3c7aWYobihkKSYmZC5pc0NvbnN0YW50JiYhZC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpfHwhbihjKSlyZXR1cm4odGhpcy5fZmlsbEVuYWJsZWR8fHRoaXMuX291dGxpbmVFbmFibGVkKSYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIGg9aShyLm1hdGVyaWFsLEMpLHA9aCBpbnN0YW5jZW9mIHY7dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eT1oLHRoaXMuX2ZpbGxQcm9wZXJ0eT1pKG8sRSksdGhpcy5fc2hvd1Byb3BlcnR5PWkoZCx3KSx0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5PWkoci5vdXRsaW5lLGIpLHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5PWw/aShyLm91dGxpbmVDb2xvcixTKTp2b2lkIDA7dmFyIGc9ci5oZWlnaHQsXz1yLmV4dHJ1ZGVkSGVpZ2h0LFQ9ci5ncmFudWxhcml0eSx4PXIuc3RSb3RhdGlvbixBPXIucGVyUG9zaXRpb25IZWlnaHQ7aWYodGhpcy5faXNDbG9zZWQ9bihfKSx0aGlzLl9maWxsRW5hYmxlZD1hLHRoaXMuX291dGxpbmVFbmFibGVkPWwsYy5pc0NvbnN0YW50JiZ5LmlzQ29uc3RhbnQoZykmJnkuaXNDb25zdGFudChfKSYmeS5pc0NvbnN0YW50KFQpJiZ5LmlzQ29uc3RhbnQoeCkmJnkuaXNDb25zdGFudChBKSl7dmFyIFA9dGhpcy5fb3B0aW9ucztQLnZlcnRleEZvcm1hdD1wP2YuVkVSVEVYX0ZPUk1BVDptLlZFUlRFWF9GT1JNQVQsUC5wb2x5Z29uSGllcmFyY2h5LnBvc2l0aW9ucz1jLmdldFZhbHVlKHUuTUlOSU1VTV9WQUxVRSxQLnBvbHlnb25IaWVyYXJjaHkucG9zaXRpb25zKSxQLmhlaWdodD1uKGcpP2cuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsUC5leHRydWRlZEhlaWdodD1uKF8pP18uZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsUC5ncmFudWxhcml0eT1uKFQpP1QuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsUC5zdFJvdGF0aW9uPW4oeCk/eC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCxQLnBlclBvc2l0aW9uSGVpZ2h0PW4oQSk/QS5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCx0aGlzLl9keW5hbWljPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfWVsc2UgdGhpcy5fZHluYW1pY3x8KHRoaXMuX2R5bmFtaWM9ITAsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX0seC5wcm90b3R5cGUuY3JlYXRlRHluYW1pY1VwZGF0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBBKGUsdGhpcyl9O3ZhciBBPWZ1bmN0aW9uKGUsdCl7dGhpcy5fcHJpbWl0aXZlcz1lLHRoaXMuX3ByaW1pdGl2ZT12b2lkIDAsdGhpcy5fb3V0bGluZVByaW1pdGl2ZT12b2lkIDAsdGhpcy5fZ2VvbWV0cnlVcGRhdGVyPXQsdGhpcy5fb3B0aW9ucz1uZXcgVCh0Ll9lbnRpdHkpfTtyZXR1cm4gQS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGkpe3ZhciByPXRoaXMuX2dlb21ldHJ5VXBkYXRlcjtuKHRoaXMuX3ByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX3ByaW1pdGl2ZSksbih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fb3V0bGluZVByaW1pdGl2ZSk7dmFyIG89ci5fZW50aXR5LGE9by5wb2x5Z29uLHM9YS5zaG93O2lmKG8uaXNBdmFpbGFibGUoaSkmJighbihzKXx8cy5nZXRWYWx1ZShpKSkpe3ZhciB1PXRoaXMuX29wdGlvbnMsaD1hLnBvc2l0aW9ucyx2PWEucGVyUG9zaXRpb25IZWlnaHQsZz1hLmhlaWdodCx5PWEuZXh0cnVkZWRIZWlnaHQsQz1hLmdyYW51bGFyaXR5LHc9YS5zdFJvdGF0aW9uO2lmKHUucG9seWdvbkhpZXJhcmNoeS5wb3NpdGlvbnM9aC5nZXRWYWx1ZShpLHUucG9seWdvbkhpZXJhcmNoeS5wb3NpdGlvbnMpLHUuaGVpZ2h0PW4oZyk/Zy5nZXRWYWx1ZShpLHUpOnZvaWQgMCx1LmV4dHJ1ZGVkSGVpZ2h0PW4oeSk/eS5nZXRWYWx1ZShpLHUpOnZvaWQgMCx1LmdyYW51bGFyaXR5PW4oQyk/Qy5nZXRWYWx1ZShpKTp2b2lkIDAsdS5zdFJvdGF0aW9uPW4odyk/dy5nZXRWYWx1ZShpKTp2b2lkIDAsIW4oYS5maWxsKXx8YS5maWxsLmdldFZhbHVlKGkpKXt1LnBlclBvc2l0aW9uSGVpZ2h0PW4odik/di5nZXRWYWx1ZShpKTp2b2lkIDAsdGhpcy5fbWF0ZXJpYWw9Xy5nZXRWYWx1ZShpLHIuZmlsbE1hdGVyaWFsUHJvcGVydHksdGhpcy5fbWF0ZXJpYWwpO3ZhciBFPXRoaXMuX21hdGVyaWFsLGI9bmV3IG0oe21hdGVyaWFsOkUsdHJhbnNsdWNlbnQ6RS5pc1RyYW5zbHVjZW50KCksY2xvc2VkOm4odS5leHRydWRlZEhlaWdodCl9KTt1LnZlcnRleEZvcm1hdD1iLnZlcnRleEZvcm1hdCx0aGlzLl9wcmltaXRpdmU9bmV3IHAoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBsKHtpZDpvLGdlb21ldHJ5Om5ldyBjKHUpfSksYXBwZWFyYW5jZTpiLGFzeW5jaHJvbm91czohMX0pLHRoaXMuX3ByaW1pdGl2ZXMuYWRkKHRoaXMuX3ByaW1pdGl2ZSl9aWYobihhLm91dGxpbmUpJiZhLm91dGxpbmUuZ2V0VmFsdWUoaSkpe3UudmVydGV4Rm9ybWF0PWYuVkVSVEVYX0ZPUk1BVDt2YXIgUz1uKGEub3V0bGluZUNvbG9yKT9hLm91dGxpbmVDb2xvci5nZXRWYWx1ZShpKTplLkJMQUNLO3RoaXMuX291dGxpbmVQcmltaXRpdmU9bmV3IHAoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBsKHtpZDpvLGdlb21ldHJ5Om5ldyBkKHUpLGF0dHJpYnV0ZXM6e2NvbG9yOnQuZnJvbUNvbG9yKFMpfX0pLGFwcGVhcmFuY2U6bmV3IGYoe2ZsYXQ6ITAsdHJhbnNsdWNlbnQ6MSE9PVMuYWxwaGF9KSxhc3luY2hyb25vdXM6ITF9KSx0aGlzLl9wcmltaXRpdmVzLmFkZCh0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKX19fSxBLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxBLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7bih0aGlzLl9wcmltaXRpdmUpJiZ0aGlzLl9wcmltaXRpdmVzLnJlbW92ZSh0aGlzLl9wcmltaXRpdmUpLG4odGhpcy5fb3V0bGluZVByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX291dGxpbmVQcmltaXRpdmUpLG8odGhpcyl9LHh9KSxkZWZpbmUoIkNvcmUvUG9seWxpbmVHZW9tZXRyeSIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4zIiwiLi9Db2xvciIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vR2VvbWV0cnkiLCIuL0dlb21ldHJ5QXR0cmlidXRlIiwiLi9HZW9tZXRyeUF0dHJpYnV0ZXMiLCIuL0luZGV4RGF0YXR5cGUiLCIuL01hdGgiLCIuL1BvbHlsaW5lUGlwZWxpbmUiLCIuL1ByaW1pdGl2ZVR5cGUiLCIuL1ZlcnRleEZvcm1hdCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHApeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB2KGUsdCxuLHIsbyl7dmFyIGEscz1tLm51bWJlck9mUG9pbnRzKGUsdCxvKSxsPW5ldyBBcnJheShzKSx1PW4ucmVkLGM9bi5ncmVlbixkPW4uYmx1ZSxoPW4uYWxwaGEsZj1yLnJlZCxwPXIuZ3JlZW4sdj1yLmJsdWUsZz1yLmFscGhhO2lmKGkuZXF1YWxzKG4scikpe2ZvcihhPTA7cz5hO2ErKylsW2FdPWkuY2xvbmUobik7cmV0dXJuIGx9dmFyIF89KGYtdSkvcyx5PShwLWMpL3MsQz0odi1kKS9zLHc9KGctaCkvcztmb3IoYT0wO3M+YTthKyspbFthXT1uZXcgaSh1K2EqXyxjK2EqeSxkK2EqQyxoK2Eqdyk7cmV0dXJuIGx9dmFyIGc9ZnVuY3Rpb24oZSl7ZT1yKGUsci5FTVBUWV9PQkpFQ1QpO3ZhciB0PWUucG9zaXRpb25zLGk9ZS5jb2xvcnMsbj1yKGUud2lkdGgsMSksbz1yKGUuY29sb3JzUGVyVmVydGV4LCExKTt0aGlzLl9wb3NpdGlvbnM9dCx0aGlzLl9jb2xvcnM9aSx0aGlzLl93aWR0aD1uLHRoaXMuX3BlclZlcnRleD1vLHRoaXMuX3ZlcnRleEZvcm1hdD1yKGUudmVydGV4Rm9ybWF0LHAuREVGQVVMVCksdGhpcy5fZm9sbG93U3VyZmFjZT1yKGUuZm9sbG93U3VyZmFjZSwhMCksdGhpcy5fZ3JhbnVsYXJpdHk9cihlLmdyYW51bGFyaXR5LGguUkFESUFOU19QRVJfREVHUkVFKSx0aGlzLl9lbGxpcHNvaWQ9cihlLmVsbGlwc29pZCxzLldHUzg0KSx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVQb2x5bGluZUdlb21ldHJ5In0sXz1uZXcgdCx5PW5ldyB0LEM9bmV3IHQsdz1uZXcgdDtyZXR1cm4gZy5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihyKXt2YXIgYSxzLGgscCxnLEUsYixTPXIuX3dpZHRoLFQ9ci5fdmVydGV4Rm9ybWF0LHg9ci5fY29sb3JzLEE9ci5fcGVyVmVydGV4LFA9ci5fZm9sbG93U3VyZmFjZSxNPXIuX2dyYW51bGFyaXR5LEk9ci5fZWxsaXBzb2lkLEQ9ci5fcG9zaXRpb25zO2lmKFApe3ZhciBPPW0uZXh0cmFjdEhlaWdodHMoRCxJKSxSPW8oeCk/W106dm9pZCAwO2lmKG8oeCkpe2ZvcihhPTA7YTxELmxlbmd0aC0xO2ErKylpZihwPURbYV0sZz1EW2ErMV0sRT14W2FdLEEmJmE8eC5sZW5ndGgpYj14W2ErMV0sUj1SLmNvbmNhdCh2KHAsZyxFLGIsTSkpO2Vsc2V7dmFyIEw9bS5udW1iZXJPZlBvaW50cyhwLGcsTSk7Zm9yKHM9MDtMPnM7cysrKVIucHVzaChpLmNsb25lKEUpKX1SLnB1c2goaS5jbG9uZSh4W3gubGVuZ3RoLTFdKSkseD1SfUQ9bS5nZW5lcmF0ZUNhcnRlc2lhbkFyYyh7cG9zaXRpb25zOkQsZ3JhbnVsYXJpdHk6TSxlbGxpcHNvaWQ6SSxoZWlnaHQ6T30pfWVsc2UgRD1yLl9wb3NpdGlvbnM7dmFyIE49bS53cmFwTG9uZ2l0dWRlKEQpO0Q9Ti5wb3NpdGlvbnM7dmFyIHo9Ti5sZW5ndGhzLEI9MCxGPXoubGVuZ3RoO2ZvcihhPTA7Rj5hOysrYSlCKz00KnpbYV0tNDt2YXIgVixrLFU9bmV3IEZsb2F0NjRBcnJheSgzKkIpLFc9bmV3IEZsb2F0NjRBcnJheSgzKkIpLEc9bmV3IEZsb2F0NjRBcnJheSgzKkIpLEg9bmV3IEZsb2F0MzJBcnJheSgyKkIpLHE9VC5zdD9uZXcgRmxvYXQzMkFycmF5KDIqQik6dm9pZCAwLGo9byh4KT9uZXcgVWludDhBcnJheSg0KkIpOnZvaWQgMCxZPTAsWD0wLFo9MCxKPTAsSz0wLFE9MCwkPUQubGVuZ3RoO2ZvcihzPTA7JD5zOysrcyl7MD09PXM/KGs9Xyx0LnN1YnRyYWN0KERbMF0sRFsxXSxrKSx0LmFkZChEWzBdLGssaykpOms9RFtzLTFdLHQuY2xvbmUoayxDKSx0LmNsb25lKERbc10seSkscz09PSQtMT8oaz1fLHQuc3VidHJhY3QoRFskLTFdLERbJC0yXSxrKSx0LmFkZChEWyQtMV0sayxrKSk6az1EW3MrMV0sdC5jbG9uZShrLHcpLFY9eltLXSxzPT09UStWJiYoUSs9ViwrK0spO3ZhciBldCx0dCxpdD0wPT09cy1RLG50PXM9PT1RK3pbS10tMSxydD1pdD8yOjAsb3Q9bnQ/Mjo0O2lmKG8oaikpe3ZhciBhdD1zLUs7ZXQ9aXR8fEE/eFthdF06eFthdC0xXSxudHx8KHR0PXhbYXRdKX1mb3IoaD1ydDtvdD5oOysraCl7dC5wYWNrKHksVSxZKSx0LnBhY2soQyxXLFkpLHQucGFjayh3LEcsWSksWSs9Mzt2YXIgc3Q9MD5oLTI/LTE6MTtpZihIW1grK109MiooaCUyKS0xLEhbWCsrXT1zdCpTLFQuc3QmJihxW1orK109cy8oJC0xKSxxW1orK109TWF0aC5tYXgoSFtYLTJdLDApKSxvKGopKXt2YXIgbHQ9Mj5oP2V0OnR0O2pbSisrXT1pLmZsb2F0VG9CeXRlKGx0LnJlZCksaltKKytdPWkuZmxvYXRUb0J5dGUobHQuZ3JlZW4pLGpbSisrXT1pLmZsb2F0VG9CeXRlKGx0LmJsdWUpLGpbSisrXT1pLmZsb2F0VG9CeXRlKGx0LmFscGhhKX19fXZhciB1dD1uZXcgYzt1dC5wb3NpdGlvbj1uZXcgdSh7Y29tcG9uZW50RGF0YXR5cGU6bi5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpVfSksdXQucHJldlBvc2l0aW9uPW5ldyB1KHtjb21wb25lbnREYXRhdHlwZTpuLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOld9KSx1dC5uZXh0UG9zaXRpb249bmV3IHUoe2NvbXBvbmVudERhdGF0eXBlOm4uRE9VQkxFLGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6R30pLHV0LmV4cGFuZEFuZFdpZHRoPW5ldyB1KHtjb21wb25lbnREYXRhdHlwZTpuLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Mix2YWx1ZXM6SH0pLFQuc3QmJih1dC5zdD1uZXcgdSh7Y29tcG9uZW50RGF0YXR5cGU6bi5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOnF9KSksbyhqKSYmKHV0LmNvbG9yPW5ldyB1KHtjb21wb25lbnREYXRhdHlwZTpuLlVOU0lHTkVEX0JZVEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTo0LHZhbHVlczpqLG5vcm1hbGl6ZTohMH0pKSxGPXoubGVuZ3RoO3ZhciBjdD1kLmNyZWF0ZVR5cGVkQXJyYXkoQiw2KkQubGVuZ3RoLTYqRiksZHQ9MCxodD0wO2ZvcihhPTA7Rj5hOysrYSlmb3IoVj16W2FdLTEscz0wO1Y+czsrK3MpY3RbaHQrK109ZHQsY3RbaHQrK109ZHQrMixjdFtodCsrXT1kdCsxLGN0W2h0KytdPWR0KzEsY3RbaHQrK109ZHQrMixjdFtodCsrXT1kdCszLGR0Kz00O3JldHVybiBuZXcgbCh7YXR0cmlidXRlczp1dCxpbmRpY2VzOmN0LHByaW1pdGl2ZVR5cGU6Zi5UUklBTkdMRVMsYm91bmRpbmdTcGhlcmU6ZS5mcm9tUG9pbnRzKEQpfSl9LGd9KSxkZWZpbmUoIlNoYWRlcnMvQXBwZWFyYW5jZXMvUG9seWxpbmVDb2xvckFwcGVhcmFuY2VWUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zRExvdztcbmF0dHJpYnV0ZSB2ZWMzIHByZXZQb3NpdGlvbjNESGlnaDtcbmF0dHJpYnV0ZSB2ZWMzIHByZXZQb3NpdGlvbjNETG93O1xuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9uM0RMb3c7XG5hdHRyaWJ1dGUgdmVjMiBleHBhbmRBbmRXaWR0aDtcbmF0dHJpYnV0ZSB2ZWM0IGNvbG9yO1xuXG52YXJ5aW5nIHZlYzQgdl9jb2xvcjtcblxudm9pZCBtYWluKCkgXG57XG4gICAgZmxvYXQgZXhwYW5kRGlyID0gZXhwYW5kQW5kV2lkdGgueDtcbiAgICBmbG9hdCB3aWR0aCA9IGFicyhleHBhbmRBbmRXaWR0aC55KSArIDAuNTtcbiAgICBib29sIHVzZVByZXYgPSBleHBhbmRBbmRXaWR0aC55IDwgMC4wO1xuICAgIFxuICAgIHZlYzQgcCA9IGN6bV9jb21wdXRlUG9zaXRpb24oKTtcbiAgICB2ZWM0IHByZXYgPSBjem1fY29tcHV0ZVByZXZQb3NpdGlvbigpO1xuICAgIHZlYzQgbmV4dCA9IGN6bV9jb21wdXRlTmV4dFBvc2l0aW9uKCk7XG4gICAgXG4gICAgdl9jb2xvciA9IGNvbG9yO1xuICAgIFxuICAgIHZlYzQgcG9zaXRpb25XQyA9IGdldFBvbHlsaW5lV2luZG93Q29vcmRpbmF0ZXMocCwgcHJldiwgbmV4dCwgZXhwYW5kRGlyLCB3aWR0aCwgdXNlUHJldik7XG4gICAgZ2xfUG9zaXRpb24gPSBjem1fdmlld3BvcnRPcnRob2dyYXBoaWMgKiBwb3NpdGlvbldDO1xufVxuIn0pLGRlZmluZSgiU2NlbmUvUG9seWxpbmVDb2xvckFwcGVhcmFuY2UiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL1ZlcnRleEZvcm1hdCIsIi4uL1JlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvUGVySW5zdGFuY2VGbGF0Q29sb3JBcHBlYXJhbmNlRlMiLCIuLi9TaGFkZXJzL0FwcGVhcmFuY2VzL1BvbHlsaW5lQ29sb3JBcHBlYXJhbmNlVlMiLCIuLi9TaGFkZXJzL1BvbHlsaW5lQ29tbW9uIiwiLi9BcHBlYXJhbmNlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9ZnVuY3Rpb24odCl7dD1lKHQsZS5FTVBUWV9PQkpFQ1QpO3ZhciBpPWUodC50cmFuc2x1Y2VudCwhMCksdT0hMSxjPW4oe3NvdXJjZXM6W2Esb119KSxkPXIsaD1sLlZFUlRFWF9GT1JNQVQ7dGhpcy5tYXRlcmlhbD12b2lkIDAsdGhpcy50cmFuc2x1Y2VudD1pLHRoaXMuX3ZlcnRleFNoYWRlclNvdXJjZT1lKHQudmVydGV4U2hhZGVyU291cmNlLGMpLHRoaXMuX2ZyYWdtZW50U2hhZGVyU291cmNlPWUodC5mcmFnbWVudFNoYWRlclNvdXJjZSxkKSx0aGlzLl9yZW5kZXJTdGF0ZT1lKHQucmVuZGVyU3RhdGUscy5nZXREZWZhdWx0UmVuZGVyU3RhdGUoaSx1KSksdGhpcy5fY2xvc2VkPXUsdGhpcy5fdmVydGV4Rm9ybWF0PWh9O3JldHVybiB0KGwucHJvdG90eXBlLHt2ZXJ0ZXhTaGFkZXJTb3VyY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2V9fSxmcmFnbWVudFNoYWRlclNvdXJjZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZyYWdtZW50U2hhZGVyU291cmNlfX0scmVuZGVyU3RhdGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJTdGF0ZX19LGNsb3NlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nsb3NlZH19LHZlcnRleEZvcm1hdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZlcnRleEZvcm1hdH19fSksbC5WRVJURVhfRk9STUFUPWkuUE9TSVRJT05fT05MWSxsLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZT1zLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSxsLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50PXMucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQsbC5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU9cy5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGUsbH0pLGRlZmluZSgiU2hhZGVycy9BcHBlYXJhbmNlcy9Qb2x5bGluZU1hdGVyaWFsQXBwZWFyYW5jZVZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzMgcG9zaXRpb24zREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjNETG93O1xuYXR0cmlidXRlIHZlYzMgcHJldlBvc2l0aW9uM0RIaWdoO1xuYXR0cmlidXRlIHZlYzMgcHJldlBvc2l0aW9uM0RMb3c7XG5hdHRyaWJ1dGUgdmVjMyBuZXh0UG9zaXRpb24zREhpZ2g7XG5hdHRyaWJ1dGUgdmVjMyBuZXh0UG9zaXRpb24zRExvdztcbmF0dHJpYnV0ZSB2ZWMyIGV4cGFuZEFuZFdpZHRoO1xuYXR0cmlidXRlIHZlYzIgc3Q7XG5cbnZhcnlpbmcgZmxvYXQgdl93aWR0aDtcbnZhcnlpbmcgdmVjMiB2X3N0O1xuXG52b2lkIG1haW4oKSBcbntcbiAgICBmbG9hdCBleHBhbmREaXIgPSBleHBhbmRBbmRXaWR0aC54O1xuICAgIGZsb2F0IHdpZHRoID0gYWJzKGV4cGFuZEFuZFdpZHRoLnkpICsgMC41O1xuICAgIGJvb2wgdXNlUHJldiA9IGV4cGFuZEFuZFdpZHRoLnkgPCAwLjA7XG4gICAgXG4gICAgdmVjNCBwID0gY3ptX2NvbXB1dGVQb3NpdGlvbigpO1xuICAgIHZlYzQgcHJldiA9IGN6bV9jb21wdXRlUHJldlBvc2l0aW9uKCk7XG4gICAgdmVjNCBuZXh0ID0gY3ptX2NvbXB1dGVOZXh0UG9zaXRpb24oKTtcbiAgICBcbiAgICB2X3dpZHRoID0gd2lkdGg7XG4gICAgdl9zdCA9IHN0O1xuICAgIFxuICAgIHZlYzQgcG9zaXRpb25XQyA9IGdldFBvbHlsaW5lV2luZG93Q29vcmRpbmF0ZXMocCwgcHJldiwgbmV4dCwgZXhwYW5kRGlyLCB3aWR0aCwgdXNlUHJldik7XG4gICAgZ2xfUG9zaXRpb24gPSBjem1fdmlld3BvcnRPcnRob2dyYXBoaWMgKiBwb3NpdGlvbldDO1xufVxuIn0pLGRlZmluZSgiU2NlbmUvUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL1ZlcnRleEZvcm1hdCIsIi4uL1JlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsIi4uL1NoYWRlcnMvQXBwZWFyYW5jZXMvUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2VWUyIsIi4uL1NoYWRlcnMvUG9seWxpbmVDb21tb24iLCIuLi9TaGFkZXJzL1BvbHlsaW5lRlMiLCIuL0FwcGVhcmFuY2UiLCIuL01hdGVyaWFsIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO3ZhciBjPWZ1bmN0aW9uKGkpe2k9ZShpLGUuRU1QVFlfT0JKRUNUKTt2YXIgbj1lKGkudHJhbnNsdWNlbnQsITApLGQ9ITEsaD1yKHtzb3VyY2VzOlthLG9dfSksbT1zLGY9Yy5WRVJURVhfRk9STUFUO3RoaXMubWF0ZXJpYWw9dChpLm1hdGVyaWFsKT9pLm1hdGVyaWFsOnUuZnJvbVR5cGUodS5Db2xvclR5cGUpLHRoaXMudHJhbnNsdWNlbnQ9bix0aGlzLl92ZXJ0ZXhTaGFkZXJTb3VyY2U9ZShpLnZlcnRleFNoYWRlclNvdXJjZSxoKSx0aGlzLl9mcmFnbWVudFNoYWRlclNvdXJjZT1lKGkuZnJhZ21lbnRTaGFkZXJTb3VyY2UsbSksdGhpcy5fcmVuZGVyU3RhdGU9ZShpLnJlbmRlclN0YXRlLGwuZ2V0RGVmYXVsdFJlbmRlclN0YXRlKG4sZCkpLHRoaXMuX2Nsb3NlZD1kLHRoaXMuX3ZlcnRleEZvcm1hdD1mfTtyZXR1cm4gaShjLnByb3RvdHlwZSx7dmVydGV4U2hhZGVyU291cmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGV4U2hhZGVyU291cmNlfX0sZnJhZ21lbnRTaGFkZXJTb3VyY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFnbWVudFNoYWRlclNvdXJjZX19LHJlbmRlclN0YXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVuZGVyU3RhdGV9fSxjbG9zZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jbG9zZWR9fSx2ZXJ0ZXhGb3JtYXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92ZXJ0ZXhGb3JtYXR9fX0pLGMuVkVSVEVYX0ZPUk1BVD1uLlBPU0lUSU9OX0FORF9TVCxjLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZT1sLnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSxjLnByb3RvdHlwZS5pc1RyYW5zbHVjZW50PWwucHJvdG90eXBlLmlzVHJhbnNsdWNlbnQsYy5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGU9bC5wcm90b3R5cGUuZ2V0UmVuZGVyU3RhdGUsY30pLGRlZmluZSgiRGF0YVNvdXJjZXMvUG9seWxpbmVHZW9tZXRyeVVwZGF0ZXIiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FbGxpcHNvaWQiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9tZXRyeUluc3RhbmNlIiwiLi4vQ29yZS9Jc284NjAxIiwiLi4vQ29yZS9Qb2x5bGluZUdlb21ldHJ5IiwiLi4vQ29yZS9Qb2x5bGluZVBpcGVsaW5lIiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL1NjZW5lL1BvbHlsaW5lQ29sbGVjdGlvbiIsIi4uL1NjZW5lL1BvbHlsaW5lQ29sb3JBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UiLCIuL0NvbG9yTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vQ29uc3RhbnRQcm9wZXJ0eSIsIi4vTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyl7InVzZSBzdHJpY3QiO3ZhciB3PXt9LEU9Zy5mcm9tQ29sb3IoZS5XSElURSksYj1uZXcgXyghMCksUz1mdW5jdGlvbihlKXt0aGlzLmlkPWUsdGhpcy52ZXJ0ZXhGb3JtYXQ9dm9pZCAwLHRoaXMucG9zaXRpb25zPXZvaWQgMCx0aGlzLndpZHRoPXZvaWQgMCx0aGlzLmZvbGxvd1N1cmZhY2U9dm9pZCAwLHRoaXMuZ3JhbnVsYXJpdHk9dm9pZCAwfSxUPWZ1bmN0aW9uKGUsdCl7dGhpcy5fZW50aXR5PWUsdGhpcy5fc2NlbmU9dCx0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb249ZS5kZWZpbml0aW9uQ2hhbmdlZC5hZGRFdmVudExpc3RlbmVyKFQucHJvdG90eXBlLl9vbkVudGl0eVByb3BlcnR5Q2hhbmdlZCx0aGlzKSx0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9keW5hbWljPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZD1uZXcgbCx0aGlzLl9zaG93UHJvcGVydHk9dm9pZCAwLHRoaXMuX21hdGVyaWFsUHJvcGVydHk9dm9pZCAwLHRoaXMuX29wdGlvbnM9bmV3IFMoZSksdGhpcy5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQoZSwicG9seWxpbmUiLGUucG9seWxpbmUsdm9pZCAwKX07cihULHtwZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOnB9LG1hdGVyaWFsQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOnZ9fSkscihULnByb3RvdHlwZSx7ZW50aXR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW50aXR5fX0sZmlsbEVuYWJsZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9maWxsRW5hYmxlZH19LGhhc0NvbnN0YW50RmlsbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2ZpbGxFbmFibGVkfHwhbih0aGlzLl9lbnRpdHkuYXZhaWxhYmlsaXR5KSYmQy5pc0NvbnN0YW50KHRoaXMuX3Nob3dQcm9wZXJ0eSl9fSxmaWxsTWF0ZXJpYWxQcm9wZXJ0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21hdGVyaWFsUHJvcGVydHl9fSxvdXRsaW5lRW5hYmxlZDp7dmFsdWU6ITF9LGhhc0NvbnN0YW50T3V0bGluZTp7dmFsdWU6ITB9LG91dGxpbmVDb2xvclByb3BlcnR5Ont2YWx1ZTp2b2lkIDB9LGlzRHluYW1pYzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2R5bmFtaWN9fSxpc0Nsb3NlZDp7dmFsdWU6ITF9LGdlb21ldHJ5Q2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dlb21ldHJ5Q2hhbmdlZH19fSksVC5wcm90b3R5cGUuaXNPdXRsaW5lVmlzaWJsZT1mdW5jdGlvbigpe3JldHVybiExfSxULnByb3RvdHlwZS5pc0ZpbGxlZD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9lbnRpdHk7cmV0dXJuIHRoaXMuX2ZpbGxFbmFibGVkJiZ0LmlzQXZhaWxhYmxlKGUpJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSl9LFQucHJvdG90eXBlLmNyZWF0ZUZpbGxHZW9tZXRyeUluc3RhbmNlPWZ1bmN0aW9uKGkpe3ZhciByLG8sYT10aGlzLl9lbnRpdHkscz1hLmlzQXZhaWxhYmxlKGkpLGw9bmV3IG0ocyYmdGhpcy5fc2hvd1Byb3BlcnR5LmdldFZhbHVlKGkpKTtpZih0aGlzLl9tYXRlcmlhbFByb3BlcnR5IGluc3RhbmNlb2YgZyl7dmFyIGM9ZS5XSElURTtuKHRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IpJiYodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5pc0NvbnN0YW50fHxzKSYmKGM9dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5nZXRWYWx1ZShpKSkscj10LmZyb21Db2xvcihjKSxvPXtzaG93OmwsY29sb3I6cn19ZWxzZSBvPXtzaG93Omx9O3JldHVybiBuZXcgdSh7aWQ6YSxnZW9tZXRyeTpuZXcgZCh0aGlzLl9vcHRpb25zKSxhdHRyaWJ1dGVzOm99KX0sVC5wcm90b3R5cGUuY3JlYXRlT3V0bGluZUdlb21ldHJ5SW5zdGFuY2U9ZnVuY3Rpb24oKXt9LFQucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LFQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb24oKSxvKHRoaXMpfSxULnByb3RvdHlwZS5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQ9ZnVuY3Rpb24oZSx0KXtpZigiYXZhaWxhYmlsaXR5Ij09PXR8fCJwb2x5bGluZSI9PT10KXt2YXIgcj10aGlzLl9lbnRpdHkucG9seWxpbmU7aWYoIW4ocikpcmV0dXJuIHRoaXMuX2ZpbGxFbmFibGVkJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgbz1yLnBvc2l0aW9ucyxhPXIuc2hvdztpZihuKGEpJiZhLmlzQ29uc3RhbnQmJiFhLmdldFZhbHVlKGMuTUlOSU1VTV9WQUxVRSl8fCFuKG8pKXJldHVybiB0aGlzLl9maWxsRW5hYmxlZCYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIHM9aShyLm1hdGVyaWFsLEUpLGw9cyBpbnN0YW5jZW9mIGc7dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eT1zLHRoaXMuX3Nob3dQcm9wZXJ0eT1pKGEsYiksdGhpcy5fZmlsbEVuYWJsZWQ9ITA7dmFyIHU9ci53aWR0aCxkPXIuZm9sbG93U3VyZmFjZSxoPXIuZ3JhbnVsYXJpdHk7aWYoby5pc0NvbnN0YW50JiZDLmlzQ29uc3RhbnQodSkmJkMuaXNDb25zdGFudChkKSYmQy5pc0NvbnN0YW50KGgpKXt2YXIgbT10aGlzLl9vcHRpb25zLGY9by5nZXRWYWx1ZShjLk1JTklNVU1fVkFMVUUsbS5wb3NpdGlvbnMpO2lmKCFuKGYpfHxmLmxlbmd0aDwyKXJldHVybiB0aGlzLl9maWxsRW5hYmxlZCYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7bS52ZXJ0ZXhGb3JtYXQ9bD9wLlZFUlRFWF9GT1JNQVQ6di5WRVJURVhfRk9STUFULG0ucG9zaXRpb25zPWYsbS53aWR0aD1uKHUpP3UuZ2V0VmFsdWUoYy5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsbS5mb2xsb3dTdXJmYWNlPW4oZCk/ZC5nZXRWYWx1ZShjLk1JTklNVU1fVkFMVUUpOnZvaWQgMCxtLmdyYW51bGFyaXR5PW4oaCk/aC5nZXRWYWx1ZShjLk1JTklNVU1fVkFMVUUpOnZvaWQgMCx0aGlzLl9keW5hbWljPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfWVsc2UgdGhpcy5fZHluYW1pY3x8KHRoaXMuX2R5bmFtaWM9ITAsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX0sVC5wcm90b3R5cGUuY3JlYXRlRHluYW1pY1VwZGF0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyB4KGUsdGhpcyl9O3ZhciB4PWZ1bmN0aW9uKGUsdCl7dmFyIGk9dC5fc2NlbmUuaWQscj13W2ldO24ocil8fChyPW5ldyBmLHdbaV09cixlLmFkZChyKSk7dmFyIG89ci5hZGQoKTtvLmlkPXQuX2VudGl0eSx0aGlzLl9saW5lPW8sdGhpcy5fcHJpbWl0aXZlcz1lLHRoaXMuX2dlb21ldHJ5VXBkYXRlcj10LHRoaXMuX3Bvc2l0aW9ucz1bXX07cmV0dXJuIHgucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9nZW9tZXRyeVVwZGF0ZXIsaT10Ll9lbnRpdHksbj1pLnBvbHlsaW5lLHI9dGhpcy5fbGluZSxvPWkuaXNBdmFpbGFibGUoZSkmJkMuZ2V0VmFsdWVPckRlZmF1bHQobi5fc2hvdyxlLCEwKTtpZighbylyZXR1cm4gci5zaG93PSExLHZvaWQgMDt2YXIgYT1uLnBvc2l0aW9ucyxsPWEuZ2V0VmFsdWUoZSx0aGlzLl9wb3NpdGlvbnMpLHU9Qy5nZXRWYWx1ZU9yRGVmYXVsdChuLl9mb2xsb3dTdXJmYWNlLGUsITApO2lmKHUpe3ZhciBjPUMuZ2V0VmFsdWVPclVuZGVmaW5lZChuLl9ncmFudWxhcml0eSxlKTtsPWguZ2VuZXJhdGVDYXJ0ZXNpYW5BcmMoe3Bvc2l0aW9uczpsLGdyYW51bGFyaXR5OmMsaGVpZ2h0OmguZXh0cmFjdEhlaWdodHMobCxzLldHUzg0KX0pfXIuc2hvdz0hMCxyLnBvc2l0aW9ucz1sLHIubWF0ZXJpYWw9eS5nZXRWYWx1ZShlLHQuZmlsbE1hdGVyaWFsUHJvcGVydHksci5tYXRlcmlhbCksci53aWR0aD1DLmdldFZhbHVlT3JEZWZhdWx0KG4uX3dpZHRoLGUsMSl9LHgucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHgucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9nZW9tZXRyeVVwZGF0ZXIsdD1lLl9zY2VuZS5pZCxpPXdbdF07aS5yZW1vdmUodGhpcy5fbGluZSksMD09PWkubGVuZ3RoJiYodGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUoaSksaS5pc0Rlc3Ryb3llZCgpfHxpLmRlc3Ryb3koKSxkZWxldGUgd1t0XSksbyh0aGlzKX0sVH0pLGRlZmluZSgiQ29yZS9SZWN0YW5nbGVHZW9tZXRyeUxpYnJhcnkiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9DYXJ0b2dyYXBoaWMiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4vTWF0aCIsIi4vTWF0cml4MiIsIi4vUmVjdGFuZ2xlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9TWF0aC5jb3MsdT1NYXRoLnNpbixjPU1hdGguc3FydCxkPXt9O2QuY29tcHV0ZVBvc2l0aW9uPWZ1bmN0aW9uKGUsdCxuLHIsbyl7dmFyIHM9ZS5lbGxpcHNvaWQucmFkaWlTcXVhcmVkLGQ9ZS5ud0Nvcm5lcixoPWUucmVjdGFuZ2xlLG09ZC5sYXRpdHVkZS1lLmdyYW5ZQ29zKnQrbiplLmdyYW5YU2luLGY9bChtKSxwPXUobSksdj1zLnoqcCxnPWQubG9uZ2l0dWRlK3QqZS5ncmFuWVNpbituKmUuZ3JhblhDb3MsXz1mKmwoZykseT1mKnUoZyksQz1zLngqXyx3PXMueSp5LEU9YyhDKl8rdyp5K3YqcCk7ci54PUMvRSxyLnk9dy9FLHIuej12L0UsaShlLnZlcnRleEZvcm1hdCkmJmUudmVydGV4Rm9ybWF0LnN0JiYoby54PShnLWgud2VzdCkqZS5sb25TY2FsYXItLjUsby55PShtLWguc291dGgpKmUubGF0U2NhbGFyLS41LGEubXVsdGlwbHlCeVZlY3RvcihlLnRleHR1cmVNYXRyaXgsbyxvKSxvLngrPS41LG8ueSs9LjUpfTt2YXIgaD1uZXcgYSxtPW5ldyBlLGY9bmV3IHQscD1uZXcgZSx2PW5ldyByO3JldHVybiBkLmNvbXB1dGVPcHRpb25zPWZ1bmN0aW9uKHQscixsKXt2YXIgdSxjLGQsZyxfLHk9dC5fZ3JhbnVsYXJpdHksQz10Ll9lbGxpcHNvaWQsdz10Ll9zdXJmYWNlSGVpZ2h0LEU9dC5fcm90YXRpb24sYj10Ll9leHRydWRlZEhlaWdodCxTPXIuZWFzdCxUPXIud2VzdCx4PXIubm9ydGgsQT1yLnNvdXRoLFA9eC1BO1Q+Uz8oXz1vLlRXT19QSS1UK1MsdT1NYXRoLmNlaWwoXy95KSsxLGM9TWF0aC5jZWlsKFAveSkrMSxkPV8vKHUtMSksZz1QLyhjLTEpKTooXz1TLVQsdT1NYXRoLmNlaWwoXy95KSsxLGM9TWF0aC5jZWlsKFAveSkrMSxkPV8vKHUtMSksZz1QLyhjLTEpKSxsPXMubm9ydGh3ZXN0KHIsbCk7dmFyIE09cy5jZW50ZXIocixmKSxJPWcsRD1kLE89MCxSPTA7aWYoaShFKSl7dmFyIEw9TWF0aC5jb3MoRSk7SSo9TCxEKj1MO3ZhciBOPU1hdGguc2luKEUpO089ZypOLFI9ZCpOLG09di5wcm9qZWN0KGwsbSkscD12LnByb2plY3QoTSxwKSxtPWUuc3VidHJhY3QobSxwLG0pO3ZhciB6PWEuZnJvbVJvdGF0aW9uKEUsaCk7bT1hLm11bHRpcGx5QnlWZWN0b3IoeixtLG0pLG09ZS5hZGQobSxwLG0pLGw9di51bnByb2plY3QobSxsKTt2YXIgQj1sLmxhdGl0dWRlLEY9QisodS0xKSpSLFY9Qi1JKihjLTEpLGs9Qi1JKihjLTEpKyh1LTEpKlI7eD1NYXRoLm1heChCLEYsVixrKSxBPU1hdGgubWluKEIsRixWLGspO3ZhciBVPWwubG9uZ2l0dWRlLFc9VSsodS0xKSpELEc9VSsoYy0xKSpPLEg9VSsoYy0xKSpPKyh1LTEpKkQ7aWYoUz1NYXRoLm1heChVLFcsRyxIKSxUPU1hdGgubWluKFUsVyxHLEgpLHg8LW8uUElfT1ZFUl9UV098fHg+by5QSV9PVkVSX1RXT3x8QTwtby5QSV9PVkVSX1RXT3x8QT5vLlBJX09WRVJfVFdPKXRocm93IG5ldyBuKCJSb3RhdGVkIGV4dGVudCBpcyBpbnZhbGlkLiIpO3Iubm9ydGg9eCxyLnNvdXRoPUEsci5lYXN0PVMsci53ZXN0PVR9cmV0dXJue2dyYW5ZQ29zOkksZ3JhbllTaW46TyxncmFuWENvczpELGdyYW5YU2luOlIsZWxsaXBzb2lkOkMsd2lkdGg6dSxoZWlnaHQ6YyxzdXJmYWNlSGVpZ2h0OncsZXh0cnVkZWRIZWlnaHQ6Yixud0Nvcm5lcjpsLHJlY3RhbmdsZTpyfX0sZH0pLGRlZmluZSgiQ29yZS9SZWN0YW5nbGVHZW9tZXRyeSIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4yIiwiLi9DYXJ0ZXNpYW4zIiwiLi9DYXJ0b2dyYXBoaWMiLCIuL0NvbXBvbmVudERhdGF0eXBlIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiLCIuL0dlb21ldHJ5IiwiLi9HZW9tZXRyeUF0dHJpYnV0ZSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGVzIiwiLi9HZW9tZXRyeUluc3RhbmNlIiwiLi9HZW9tZXRyeVBpcGVsaW5lIiwiLi9JbmRleERhdGF0eXBlIiwiLi9NYXRoIiwiLi9NYXRyaXgyIiwiLi9NYXRyaXgzIiwiLi9Qb2x5Z29uUGlwZWxpbmUiLCIuL1ByaW1pdGl2ZVR5cGUiLCIuL1F1YXRlcm5pb24iLCIuL1JlY3RhbmdsZSIsIi4vUmVjdGFuZ2xlR2VvbWV0cnlMaWJyYXJ5IiwiLi9WZXJ0ZXhGb3JtYXQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyx3LEUsYil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIFMoZSx0KXt2YXIgaT1uZXcgdSh7YXR0cmlidXRlczpuZXcgZCxwcmltaXRpdmVUeXBlOnkuVFJJQU5HTEVTfSk7cmV0dXJuIGkuYXR0cmlidXRlcy5wb3NpdGlvbj1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ci5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczp0LnBvc2l0aW9uc30pLGUubm9ybWFsJiYoaS5hdHRyaWJ1dGVzLm5vcm1hbD1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOnQubm9ybWFsc30pKSxlLnRhbmdlbnQmJihpLmF0dHJpYnV0ZXMudGFuZ2VudD1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOnQudGFuZ2VudHN9KSksZS5iaW5vcm1hbCYmKGkuYXR0cmlidXRlcy5iaW5vcm1hbD1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOnQuYmlub3JtYWxzfSkpLGl9ZnVuY3Rpb24gVChlLHQsbixyKXtmb3IodmFyIG89ZS5sZW5ndGgsYT10Lm5vcm1hbD9uZXcgRmxvYXQzMkFycmF5KG8pOnZvaWQgMCxzPXQudGFuZ2VudD9uZXcgRmxvYXQzMkFycmF5KG8pOnZvaWQgMCxsPXQuYmlub3JtYWw/bmV3IEZsb2F0MzJBcnJheShvKTp2b2lkIDAsdT0wLGM9TCxkPVIsaD1PLG09MDtvPm07bSs9Myl7dmFyIGY9aS5mcm9tQXJyYXkoZSxtLEQpLHA9dSsxLHY9dSsyOyh0Lm5vcm1hbHx8dC50YW5nZW50fHx0LmJpbm9ybWFsKSYmKGg9bi5nZW9kZXRpY1N1cmZhY2VOb3JtYWwoZixoKSwodC50YW5nZW50fHx0LmJpbm9ybWFsKSYmKGkuY3Jvc3MoaS5VTklUX1osaCxkKSxnLm11bHRpcGx5QnlWZWN0b3IocixkLGQpLGkubm9ybWFsaXplKGQsZCksdC5iaW5vcm1hbCYmaS5ub3JtYWxpemUoaS5jcm9zcyhoLGQsYyksYykpLHQubm9ybWFsJiYoYVt1XT1oLngsYVtwXT1oLnksYVt2XT1oLnopLHQudGFuZ2VudCYmKHNbdV09ZC54LHNbcF09ZC55LHNbdl09ZC56KSx0LmJpbm9ybWFsJiYobFt1XT1jLngsbFtwXT1jLnksbFt2XT1jLnopKSx1Kz0zfXJldHVybiBTKHQse3Bvc2l0aW9uczplLG5vcm1hbHM6YSx0YW5nZW50czpzLGJpbm9ybWFsczpsfSl9ZnVuY3Rpb24geChlLHQsbil7Zm9yKHZhciByPWUubGVuZ3RoLG89dC5ub3JtYWw/bmV3IEZsb2F0MzJBcnJheShyKTp2b2lkIDAsYT10LnRhbmdlbnQ/bmV3IEZsb2F0MzJBcnJheShyKTp2b2lkIDAscz10LmJpbm9ybWFsP25ldyBGbG9hdDMyQXJyYXkocik6dm9pZCAwLGw9MCx1PTAsYz0wLGQ9ITAsaD1MLG09UixmPU8sdj0wO3I+djt2Kz02KXt2YXIgZz1pLmZyb21BcnJheShlLHYsRCk7aWYodC5ub3JtYWx8fHQudGFuZ2VudHx8dC5iaW5vcm1hbCl7dmFyIF89aS5mcm9tQXJyYXkoZSx2KzYsVik7aWYoZCl7dmFyIHk9aS5mcm9tQXJyYXkoZSx2KzMsayk7aS5zdWJ0cmFjdChfLGcsXyksaS5zdWJ0cmFjdCh5LGcseSksZj1pLm5vcm1hbGl6ZShpLmNyb3NzKHksXyxmKSxmKSxkPSExfWkuZXF1YWxzRXBzaWxvbihfLGcscC5FUFNJTE9OMTApJiYoZD0hMCksKHQudGFuZ2VudHx8dC5iaW5vcm1hbCkmJihoPW4uZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKGcsaCksdC50YW5nZW50JiYobT1pLm5vcm1hbGl6ZShpLmNyb3NzKGgsZixtKSxtKSkpLHQubm9ybWFsJiYob1tsKytdPWYueCxvW2wrK109Zi55LG9bbCsrXT1mLnosb1tsKytdPWYueCxvW2wrK109Zi55LG9bbCsrXT1mLnopLHQudGFuZ2VudCYmKGFbdSsrXT1tLngsYVt1KytdPW0ueSxhW3UrK109bS56LGFbdSsrXT1tLngsYVt1KytdPW0ueSxhW3UrK109bS56KSx0LmJpbm9ybWFsJiYoc1tjKytdPWgueCxzW2MrK109aC55LHNbYysrXT1oLnosc1tjKytdPWgueCxzW2MrK109aC55LHNbYysrXT1oLnopfX1yZXR1cm4gUyh0LHtwb3NpdGlvbnM6ZSxub3JtYWxzOm8sdGFuZ2VudHM6YSxiaW5vcm1hbHM6c30pfWZ1bmN0aW9uIEEoZSl7Zm9yKHZhciB0PWUudmVydGV4Rm9ybWF0LGk9ZS5lbGxpcHNvaWQsbj1lLnNpemUsbz1lLmhlaWdodCxhPWUud2lkdGgscz10LnBvc2l0aW9uP25ldyBGbG9hdDY0QXJyYXkoMypuKTp2b2lkIDAsbD10LnN0P25ldyBGbG9hdDMyQXJyYXkoMipuKTp2b2lkIDAsdT0wLGQ9MCxoPUQsbT16LHA9MDtvPnA7KytwKWZvcih2YXIgdj0wO2E+djsrK3YpRS5jb21wdXRlUG9zaXRpb24oZSxwLHYsaCxtKSxzW3UrK109aC54LHNbdSsrXT1oLnksc1t1KytdPWgueix0LnN0JiYobFtkKytdPW0ueCxsW2QrK109bS55KTtmb3IodmFyIGc9VChzLHQsaSxlLnRhbmdlbnRSb3RhdGlvbk1hdHJpeCksXz02KihhLTEpKihvLTEpLHk9Zi5jcmVhdGVUeXBlZEFycmF5KG4sXyksQz0wLHc9MCxiPTA7by0xPmI7KytiKXtmb3IodmFyIFM9MDthLTE+UzsrK1Mpe3ZhciB4PUMsQT14K2EsUD1BKzEsTT14KzE7eVt3KytdPXgseVt3KytdPUEseVt3KytdPU0seVt3KytdPU0seVt3KytdPUEseVt3KytdPVAsKytDfSsrQ31yZXR1cm4gZy5pbmRpY2VzPXksdC5zdCYmKGcuYXR0cmlidXRlcy5zdD1uZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6ci5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOmx9KSksZ31mdW5jdGlvbiBQKGUsdCxpLG4scil7cmV0dXJuIGVbdCsrXT1uW2ldLGVbdCsrXT1uW2krMV0sZVt0KytdPW5baSsyXSxlW3QrK109cltpXSxlW3QrK109cltpKzFdLGVbdCsrXT1yW2krMl0sZX1mdW5jdGlvbiBNKGUsdCxpLG4pe3JldHVybiBlW3QrK109bltpXSxlW3QrK109bltpKzFdLGVbdCsrXT1uW2ldLGVbdCsrXT1uW2krMV0sZX1mdW5jdGlvbiBJKGUpe3ZhciB0LG49ZS52ZXJ0ZXhGb3JtYXQsbz1lLnN1cmZhY2VIZWlnaHQsYT1lLmV4dHJ1ZGVkSGVpZ2h0LHM9TWF0aC5taW4oYSxvKSxsPU1hdGgubWF4KGEsbyksdT1lLmhlaWdodCxkPWUud2lkdGgsdj1lLmVsbGlwc29pZCxnPUEoZSk7aWYocC5lcXVhbHNFcHNpbG9uKHMsbCwuMSkpcmV0dXJuIGc7Zz1fLnNjYWxlVG9HZW9kZXRpY0hlaWdodChnLGwsdiwhMSk7dmFyIHk9bmV3IEZsb2F0NjRBcnJheShnLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzKSxDPXkubGVuZ3RoLHc9MipDLEU9bmV3IEZsb2F0NjRBcnJheSh3KTtFLnNldCh5KSxnPV8uc2NhbGVUb0dlb2RldGljSGVpZ2h0KGcscyx2KTt2YXIgYj1nLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzO0Uuc2V0KGIsQyksZy5hdHRyaWJ1dGVzLnBvc2l0aW9uLnZhbHVlcz1FO3ZhciBTLFQ9bi5ub3JtYWw/bmV3IEZsb2F0MzJBcnJheSh3KTp2b2lkIDAsST1uLnRhbmdlbnQ/bmV3IEZsb2F0MzJBcnJheSh3KTp2b2lkIDAsRD1uLmJpbm9ybWFsP25ldyBGbG9hdDMyQXJyYXkodyk6dm9pZCAwLE89bi5zdD9uZXcgRmxvYXQzMkFycmF5KDIqKHcvMykpOnZvaWQgMDtpZihuLm5vcm1hbCl7dmFyIFI9Zy5hdHRyaWJ1dGVzLm5vcm1hbC52YWx1ZXM7Zm9yKFQuc2V0KFIpLHQ9MDtDPnQ7dCsrKVJbdF09LVJbdF07VC5zZXQoUixDKSxnLmF0dHJpYnV0ZXMubm9ybWFsLnZhbHVlcz1UfWlmKG4udGFuZ2VudCl7dmFyIEw9Zy5hdHRyaWJ1dGVzLnRhbmdlbnQudmFsdWVzO2ZvcihJLnNldChMKSx0PTA7Qz50O3QrKylMW3RdPS1MW3RdO0kuc2V0KEwsQyksZy5hdHRyaWJ1dGVzLnRhbmdlbnQudmFsdWVzPUl9aWYobi5iaW5vcm1hbCl7dmFyIE49Zy5hdHRyaWJ1dGVzLmJpbm9ybWFsLnZhbHVlcztELnNldChOKSxELnNldChOLEMpLGcuYXR0cmlidXRlcy5iaW5vcm1hbC52YWx1ZXM9RH1uLnN0JiYoUz1nLmF0dHJpYnV0ZXMuc3QudmFsdWVzLE8uc2V0KFMpLE8uc2V0KFMsMiooQy8zKSksZy5hdHRyaWJ1dGVzLnN0LnZhbHVlcz1PKTt2YXIgej1nLmluZGljZXMsQj16Lmxlbmd0aCxGPUMvMyxVPWYuY3JlYXRlVHlwZWRBcnJheSh3LzMsMipCKTtmb3IoVS5zZXQoeiksdD0wO0I+dDt0Kz0zKVVbdCtCXT16W3QrMl0rRixVW3QrMStCXT16W3QrMV0rRixVW3QrMitCXT16W3RdK0Y7Zy5pbmRpY2VzPVU7dmFyIFc9MipkKzIqdS00LEc9MiooVys0KSxIPW5ldyBGbG9hdDY0QXJyYXkoMypHKSxxPW4uc3Q/bmV3IEZsb2F0MzJBcnJheSgyKkcpOnZvaWQgMCxqPTAsWT0wLFg9ZCp1O2Zvcih0PTA7WD50O3QrPWQpSD1QKEgsaiwzKnQseSxiKSxqKz02LG4uc3QmJihxPU0ocSxZLDIqdCxTKSxZKz00KTtmb3IodD1YLWQ7WD50O3QrKylIPVAoSCxqLDMqdCx5LGIpLGorPTYsbi5zdCYmKHE9TShxLFksMip0LFMpLFkrPTQpO2Zvcih0PVgtMTt0PjA7dC09ZClIPVAoSCxqLDMqdCx5LGIpLGorPTYsbi5zdCYmKHE9TShxLFksMip0LFMpLFkrPTQpO2Zvcih0PWQtMTt0Pj0wO3QtLSlIPVAoSCxqLDMqdCx5LGIpLGorPTYsbi5zdCYmKHE9TShxLFksMip0LFMpLFkrPTQpO3ZhciBaPXgoSCxuLHYpO24uc3QmJihaLmF0dHJpYnV0ZXMuc3Q9bmV3IGMoe2NvbXBvbmVudERhdGF0eXBlOnIuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZToyLHZhbHVlczpxfSkpO3ZhciBKLEssUSwkLGV0PWYuY3JlYXRlVHlwZWRBcnJheShHLDYqVyk7Qz1ILmxlbmd0aC8zO3ZhciB0dD0wO2Zvcih0PTA7Qy0xPnQ7dCs9Mil7Sj10LCQ9SisyO3ZhciBpdD1pLmZyb21BcnJheShILDMqSixWKSxudD1pLmZyb21BcnJheShILDMqJCxrKTtpLmVxdWFsc0Vwc2lsb24oaXQsbnQscC5FUFNJTE9OMTApfHwoSz1KKzEsUT1LKzIsZXRbdHQrK109SixldFt0dCsrXT1LLGV0W3R0KytdPSQsZXRbdHQrK109JCxldFt0dCsrXT1LLGV0W3R0KytdPVEpfXJldHVybiBaLmluZGljZXM9ZXQsWj1tLmNvbWJpbmUoW25ldyBoKHtnZW9tZXRyeTpnfSksbmV3IGgoe2dlb21ldHJ5Olp9KV0pfXZhciBEPW5ldyBpLE89bmV3IGksUj1uZXcgaSxMPW5ldyBpLE49bmV3IHcsej1uZXcgdCxCPW5ldyBlLEY9bmV3IGUsVj1uZXcgaSxrPW5ldyBpLFU9ZnVuY3Rpb24oZSl7ZT1vKGUsby5FTVBUWV9PQkpFQ1QpO3ZhciB0PWUucmVjdGFuZ2xlLGk9byhlLmdyYW51bGFyaXR5LHAuUkFESUFOU19QRVJfREVHUkVFKSxuPW8oZS5lbGxpcHNvaWQsbC5XR1M4NCkscj1vKGUuaGVpZ2h0LDApLGE9ZS5yb3RhdGlvbixzPWUuc3RSb3RhdGlvbix1PW8oZS52ZXJ0ZXhGb3JtYXQsYi5ERUZBVUxUKTt0aGlzLl9yZWN0YW5nbGU9dCx0aGlzLl9ncmFudWxhcml0eT1pLHRoaXMuX2VsbGlwc29pZD1uLHRoaXMuX3N1cmZhY2VIZWlnaHQ9cix0aGlzLl9yb3RhdGlvbj1hLHRoaXMuX3N0Um90YXRpb249cyx0aGlzLl92ZXJ0ZXhGb3JtYXQ9dSx0aGlzLl9leHRydWRlZEhlaWdodD1lLmV4dHJ1ZGVkSGVpZ2h0LHRoaXMuX2Nsb3NlVG9wPWUuY2xvc2VUb3AsdGhpcy5fY2xvc2VCb3R0b209ZS5jbG9zZUJvdHRvbSx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVSZWN0YW5nbGVHZW9tZXRyeSJ9LFc9bmV3IHYsRz1uZXcgZyxIPW5ldyBuLHE9bmV3IEMsaj1uZXcgbjtyZXR1cm4gVS5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbih0KXt2YXIgbj13LmNsb25lKHQuX3JlY3RhbmdsZSxOKSxyPXQuX2VsbGlwc29pZCxvPXQuX3N1cmZhY2VIZWlnaHQscz10Ll9leHRydWRlZEhlaWdodCxsPXQuX3N0Um90YXRpb24sYz10Ll92ZXJ0ZXhGb3JtYXQsaD1FLmNvbXB1dGVPcHRpb25zKHQsbixIKSxtPVcsZj1HO2lmKGEobCkpe3YuZnJvbVJvdGF0aW9uKC1sLG0pO3ZhciBwPXcuY2VudGVyKG4saikseT1yLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKHAsVik7aS5ub3JtYWxpemUoeSx5KSxDLmZyb21BeGlzQW5nbGUoeSwtbCxxKSxnLmZyb21RdWF0ZXJuaW9uKHEsZil9ZWxzZSB2LmNsb25lKHYuSURFTlRJVFksbSksZy5jbG9uZShnLklERU5USVRZLGYpO2gubG9uU2NhbGFyPTEvKG4uZWFzdC1uLndlc3QpLGgubGF0U2NhbGFyPTEvKG4ubm9ydGgtbi5zb3V0aCksaC52ZXJ0ZXhGb3JtYXQ9YyxoLnRleHR1cmVNYXRyaXg9bSxoLnRhbmdlbnRSb3RhdGlvbk1hdHJpeD1mLGguc2l6ZT1oLndpZHRoKmguaGVpZ2h0O3ZhciBiLFM7aWYobj10Ll9yZWN0YW5nbGUsYShzKSl7Yj1JKGgpO3ZhciBUPWUuZnJvbVJlY3RhbmdsZTNEKG4scixvLEYpLHg9ZS5mcm9tUmVjdGFuZ2xlM0QobixyLHMsQik7Uz1lLnVuaW9uKFQseCl9ZWxzZSBiPUEoaCksYj1fLnNjYWxlVG9HZW9kZXRpY0hlaWdodChiLG8sciwhMSksUz1lLmZyb21SZWN0YW5nbGUzRChuLHIsbyk7cmV0dXJuIGMucG9zaXRpb258fGRlbGV0ZSBiLmF0dHJpYnV0ZXMucG9zaXRpb24sbmV3IHUoe2F0dHJpYnV0ZXM6bmV3IGQoYi5hdHRyaWJ1dGVzKSxpbmRpY2VzOmIuaW5kaWNlcyxwcmltaXRpdmVUeXBlOmIucHJpbWl0aXZlVHlwZSxib3VuZGluZ1NwaGVyZTpTfSl9LFV9KSxkZWZpbmUoIkNvcmUvUmVjdGFuZ2xlT3V0bGluZUdlb21ldHJ5IixbIi4vQm91bmRpbmdTcGhlcmUiLCIuL0NhcnRlc2lhbjMiLCIuL0NhcnRvZ3JhcGhpYyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vR2VvbWV0cnkiLCIuL0dlb21ldHJ5QXR0cmlidXRlIiwiLi9HZW9tZXRyeUF0dHJpYnV0ZXMiLCIuL0luZGV4RGF0YXR5cGUiLCIuL01hdGgiLCIuL1BvbHlnb25QaXBlbGluZSIsIi4vUHJpbWl0aXZlVHlwZSIsIi4vUmVjdGFuZ2xlIiwiLi9SZWN0YW5nbGVHZW9tZXRyeUxpYnJhcnkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBnKGUpe3ZhciB0LGk9ZS5zaXplLHI9ZS5oZWlnaHQsbz1lLndpZHRoLGE9bmV3IEZsb2F0NjRBcnJheSgzKmkpLHM9MCxoPTAsbT13O2Zvcih0PTA7bz50O3QrKyl2LmNvbXB1dGVQb3NpdGlvbihlLGgsdCxtKSxhW3MrK109bS54LGFbcysrXT1tLnksYVtzKytdPW0uejtmb3IodD1vLTEsaD0xO3I+aDtoKyspdi5jb21wdXRlUG9zaXRpb24oZSxoLHQsbSksYVtzKytdPW0ueCxhW3MrK109bS55LGFbcysrXT1tLno7Zm9yKGg9ci0xLHQ9by0yO3Q+PTA7dC0tKXYuY29tcHV0ZVBvc2l0aW9uKGUsaCx0LG0pLGFbcysrXT1tLngsYVtzKytdPW0ueSxhW3MrK109bS56O2Zvcih0PTAsaD1yLTI7aD4wO2gtLSl2LmNvbXB1dGVQb3NpdGlvbihlLGgsdCxtKSxhW3MrK109bS54LGFbcysrXT1tLnksYVtzKytdPW0uejtmb3IodmFyIHA9MiooYS5sZW5ndGgvMyksZz1kLmNyZWF0ZVR5cGVkQXJyYXkoYS5sZW5ndGgvMyxwKSxfPTAseT0wO3k8YS5sZW5ndGgvMy0xO3krKylnW18rK109eSxnW18rK109eSsxO2dbXysrXT1hLmxlbmd0aC8zLTEsZ1tfKytdPTA7dmFyIEM9bmV3IGwoe2F0dHJpYnV0ZXM6bmV3IGMscHJpbWl0aXZlVHlwZTpmLkxJTkVTfSk7cmV0dXJuIEMuYXR0cmlidXRlcy5wb3NpdGlvbj1uZXcgdSh7Y29tcG9uZW50RGF0YXR5cGU6bi5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczphfSksQy5pbmRpY2VzPWcsQ31mdW5jdGlvbiBfKGUpe3ZhciB0PWUuc3VyZmFjZUhlaWdodCxpPWUuZXh0cnVkZWRIZWlnaHQsbj1lLmVsbGlwc29pZCxyPU1hdGgubWluKGksdCksbz1NYXRoLm1heChpLHQpLGE9ZyhlKTtpZihoLmVxdWFsc0Vwc2lsb24ocixvLC4xKSlyZXR1cm4gYTt2YXIgcz1lLmhlaWdodCxsPWUud2lkdGg7YT1tLnNjYWxlVG9HZW9kZXRpY0hlaWdodChhLG8sbiwhMSk7dmFyIHU9YS5hdHRyaWJ1dGVzLnBvc2l0aW9uLnZhbHVlcyxjPXUubGVuZ3RoLGY9bmV3IEZsb2F0NjRBcnJheSgyKmMpO2Yuc2V0KHUpLGE9bS5zY2FsZVRvR2VvZGV0aWNIZWlnaHQoYSxyLG4pO3ZhciBwPWEuYXR0cmlidXRlcy5wb3NpdGlvbi52YWx1ZXM7Zi5zZXQocCxjKSxhLmF0dHJpYnV0ZXMucG9zaXRpb24udmFsdWVzPWY7dmFyIHY9MiooZi5sZW5ndGgvMykrOCxfPWQuY3JlYXRlVHlwZWRBcnJheShmLmxlbmd0aC8zLHYpO2M9Zi5sZW5ndGgvNjtmb3IodmFyIHk9MCxDPTA7Yy0xPkM7QysrKV9beSsrXT1DLF9beSsrXT1DKzEsX1t5KytdPUMrYyxfW3krK109QytjKzE7cmV0dXJuIF9beSsrXT1jLTEsX1t5KytdPTAsX1t5KytdPWMrYy0xLF9beSsrXT1jLF9beSsrXT0wLF9beSsrXT1jLF9beSsrXT1sLTEsX1t5KytdPWMrbC0xLF9beSsrXT1sK3MtMixfW3krK109bCtzLTIrYyxfW3krK109MipsK3MtMyxfW3krK109MipsK3MtMytjLGEuaW5kaWNlcz1fLGF9dmFyIHk9bmV3IGUsQz1uZXcgZSx3PW5ldyB0LEU9bmV3IHAsYj1mdW5jdGlvbihlKXtlPXIoZSxyLkVNUFRZX09CSkVDVCk7dmFyIHQ9ZS5yZWN0YW5nbGUsaT1yKGUuZ3JhbnVsYXJpdHksaC5SQURJQU5TX1BFUl9ERUdSRUUpLG49cihlLmVsbGlwc29pZCxzLldHUzg0KSxvPXIoZS5oZWlnaHQsMCksYT1lLnJvdGF0aW9uO3RoaXMuX3JlY3RhbmdsZT10LHRoaXMuX2dyYW51bGFyaXR5PWksdGhpcy5fZWxsaXBzb2lkPW4sdGhpcy5fc3VyZmFjZUhlaWdodD1vLHRoaXMuX3JvdGF0aW9uPWEsdGhpcy5fZXh0cnVkZWRIZWlnaHQ9ZS5leHRydWRlZEhlaWdodCx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVSZWN0YW5nbGVPdXRsaW5lR2VvbWV0cnkifSxTPW5ldyBpO3JldHVybiBiLmNyZWF0ZUdlb21ldHJ5PWZ1bmN0aW9uKHQpe3ZhciBpPXAuY2xvbmUodC5fcmVjdGFuZ2xlLEUpLG49dC5fZWxsaXBzb2lkLHI9dC5fc3VyZmFjZUhlaWdodCxhPXQuX2V4dHJ1ZGVkSGVpZ2h0LHM9di5jb21wdXRlT3B0aW9ucyh0LGksUyk7cy5zaXplPTIqcy53aWR0aCsyKnMuaGVpZ2h0LTQ7dmFyIHUsYztpZihpPXQuX3JlY3RhbmdsZSxvKGEpKXt1PV8ocyk7dmFyIGQ9ZS5mcm9tUmVjdGFuZ2xlM0QoaSxuLHIsQyksaD1lLmZyb21SZWN0YW5nbGUzRChpLG4sYSx5KTtjPWUudW5pb24oZCxoKX1lbHNlIHU9ZyhzKSx1PW0uc2NhbGVUb0dlb2RldGljSGVpZ2h0KHUscixuLCExKSxjPWUuZnJvbVJlY3RhbmdsZTNEKGksbixyKTtyZXR1cm4gbmV3IGwoe2F0dHJpYnV0ZXM6dS5hdHRyaWJ1dGVzLGluZGljZXM6dS5pbmRpY2VzLHByaW1pdGl2ZVR5cGU6Zi5MSU5FUyxib3VuZGluZ1NwaGVyZTpjfSl9LGJ9KSxkZWZpbmUoIkRhdGFTb3VyY2VzL1JlY3RhbmdsZUdlb21ldHJ5VXBkYXRlciIsWyIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9tZXRyeUluc3RhbmNlIiwiLi4vQ29yZS9Jc284NjAxIiwiLi4vQ29yZS9SZWN0YW5nbGVHZW9tZXRyeSIsIi4uL0NvcmUvUmVjdGFuZ2xlT3V0bGluZUdlb21ldHJ5IiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL1NjZW5lL01hdGVyaWFsQXBwZWFyYW5jZSIsIi4uL1NjZW5lL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUHJpbWl0aXZlIiwiLi9Db2xvck1hdGVyaWFsUHJvcGVydHkiLCIuL0NvbnN0YW50UHJvcGVydHkiLCIuL01hdGVyaWFsUHJvcGVydHkiLCIuL1Byb3BlcnR5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5KXsidXNlIHN0cmljdCI7dmFyIEM9di5mcm9tQ29sb3IoZS5XSElURSksdz1uZXcgZyghMCksRT1uZXcgZyghMCksYj1uZXcgZyghMSksUz1uZXcgZyhlLkJMQUNLKSxUPWZ1bmN0aW9uKGUpe3RoaXMuaWQ9ZSx0aGlzLnZlcnRleEZvcm1hdD12b2lkIDAsdGhpcy5yZWN0YW5nbGU9dm9pZCAwLHRoaXMuY2xvc2VCb3R0b209dm9pZCAwLHRoaXMuY2xvc2VUb3A9dm9pZCAwLHRoaXMuaGVpZ2h0PXZvaWQgMCx0aGlzLmV4dHJ1ZGVkSGVpZ2h0PXZvaWQgMCx0aGlzLmdyYW51bGFyaXR5PXZvaWQgMCx0aGlzLnN0Um90YXRpb249dm9pZCAwLHRoaXMucm90YXRpb249dm9pZCAwfSx4PWZ1bmN0aW9uKGUpe3RoaXMuX2VudGl0eT1lLHRoaXMuX2VudGl0eVN1YnNjcmlwdGlvbj1lLmRlZmluaXRpb25DaGFuZ2VkLmFkZEV2ZW50TGlzdGVuZXIoeC5wcm90b3R5cGUuX29uRW50aXR5UHJvcGVydHlDaGFuZ2VkLHRoaXMpLHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX2lzQ2xvc2VkPSExLHRoaXMuX2R5bmFtaWM9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkPW5ldyBzLHRoaXMuX3Nob3dQcm9wZXJ0eT12b2lkIDAsdGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eT12b2lkIDAsdGhpcy5faGFzQ29uc3RhbnRPdXRsaW5lPSEwLHRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHk9dm9pZCAwLHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5PXZvaWQgMCx0aGlzLl9vcHRpb25zPW5ldyBUKGUpLHRoaXMuX29uRW50aXR5UHJvcGVydHlDaGFuZ2VkKGUsInJlY3RhbmdsZSIsZS5yZWN0YW5nbGUsdm9pZCAwKX07cih4LHtwZXJJbnN0YW5jZUNvbG9yQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOmZ9LG1hdGVyaWFsQXBwZWFyYW5jZVR5cGU6e3ZhbHVlOm19fSkscih4LnByb3RvdHlwZSx7ZW50aXR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZW50aXR5fX0sZmlsbEVuYWJsZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9maWxsRW5hYmxlZH19LGhhc0NvbnN0YW50RmlsbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2ZpbGxFbmFibGVkfHwhbih0aGlzLl9lbnRpdHkuYXZhaWxhYmlsaXR5KSYmeS5pc0NvbnN0YW50KHRoaXMuX3Nob3dQcm9wZXJ0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9maWxsUHJvcGVydHkpfX0sZmlsbE1hdGVyaWFsUHJvcGVydHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXRlcmlhbFByb3BlcnR5fX0sb3V0bGluZUVuYWJsZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vdXRsaW5lRW5hYmxlZH19LGhhc0NvbnN0YW50T3V0bGluZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX291dGxpbmVFbmFibGVkfHwhbih0aGlzLl9lbnRpdHkuYXZhaWxhYmlsaXR5KSYmeS5pc0NvbnN0YW50KHRoaXMuX3Nob3dQcm9wZXJ0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5KX19LG91dGxpbmVDb2xvclByb3BlcnR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHl9fSxpc0R5bmFtaWM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9keW5hbWljfX0saXNDbG9zZWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0Nsb3NlZH19LGdlb21ldHJ5Q2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dlb21ldHJ5Q2hhbmdlZH19fSkseC5wcm90b3R5cGUuaXNPdXRsaW5lVmlzaWJsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9lbnRpdHk7cmV0dXJuIHRoaXMuX291dGxpbmVFbmFibGVkJiZ0LmlzQXZhaWxhYmxlKGUpJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSkmJnRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHkuZ2V0VmFsdWUoZSl9LHgucHJvdG90eXBlLmlzRmlsbGVkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VudGl0eTtyZXR1cm4gdGhpcy5fZmlsbEVuYWJsZWQmJnQuaXNBdmFpbGFibGUoZSkmJnRoaXMuX3Nob3dQcm9wZXJ0eS5nZXRWYWx1ZShlKSYmdGhpcy5fZmlsbFByb3BlcnR5LmdldFZhbHVlKGUpfSx4LnByb3RvdHlwZS5jcmVhdGVGaWxsR2VvbWV0cnlJbnN0YW5jZT1mdW5jdGlvbihpKXt2YXIgcixvLGE9dGhpcy5fZW50aXR5LHM9YS5pc0F2YWlsYWJsZShpKSx1PW5ldyBoKHMmJnRoaXMuX3Nob3dQcm9wZXJ0eS5nZXRWYWx1ZShpKSYmdGhpcy5fZmlsbFByb3BlcnR5LmdldFZhbHVlKGkpKTtpZih0aGlzLl9tYXRlcmlhbFByb3BlcnR5IGluc3RhbmNlb2Ygdil7dmFyIGQ9ZS5XSElURTtuKHRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IpJiYodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5pc0NvbnN0YW50fHxzKSYmKGQ9dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5nZXRWYWx1ZShpKSksbz10LmZyb21Db2xvcihkKSxyPXtzaG93OnUsY29sb3I6b319ZWxzZSByPXtzaG93OnV9O3JldHVybiBuZXcgbCh7aWQ6YSxnZW9tZXRyeTpuZXcgYyh0aGlzLl9vcHRpb25zKSxhdHRyaWJ1dGVzOnJ9KX0seC5wcm90b3R5cGUuY3JlYXRlT3V0bGluZUdlb21ldHJ5SW5zdGFuY2U9ZnVuY3Rpb24oaSl7dmFyIG49dGhpcy5fZW50aXR5LHI9bi5pc0F2YWlsYWJsZShpKTtyZXR1cm4gbmV3IGwoe2lkOm4sZ2VvbWV0cnk6bmV3IGQodGhpcy5fb3B0aW9ucyksYXR0cmlidXRlczp7c2hvdzpuZXcgaChyJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoaSkmJnRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHkuZ2V0VmFsdWUoaSkpLGNvbG9yOnQuZnJvbUNvbG9yKHI/dGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHkuZ2V0VmFsdWUoaSk6ZS5CTEFDSyl9fSkKfSx4LnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSx4LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fZW50aXR5U3Vic2NyaXB0aW9uKCksbyh0aGlzKX0seC5wcm90b3R5cGUuX29uRW50aXR5UHJvcGVydHlDaGFuZ2VkPWZ1bmN0aW9uKGUsdCl7aWYoImF2YWlsYWJpbGl0eSI9PT10fHwicmVjdGFuZ2xlIj09PXQpe3ZhciByPXRoaXMuX2VudGl0eS5yZWN0YW5nbGU7aWYoIW4ocikpcmV0dXJuKHRoaXMuX2ZpbGxFbmFibGVkfHx0aGlzLl9vdXRsaW5lRW5hYmxlZCkmJih0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSksdm9pZCAwO3ZhciBvPXIuZmlsbCxhPW4obykmJm8uaXNDb25zdGFudD9vLmdldFZhbHVlKHUuTUlOSU1VTV9WQUxVRSk6ITAscz1yLm91dGxpbmUsbD1uKHMpO2lmKGwmJnMuaXNDb25zdGFudCYmKGw9cy5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpKSwhYSYmIWwpcmV0dXJuKHRoaXMuX2ZpbGxFbmFibGVkfHx0aGlzLl9vdXRsaW5lRW5hYmxlZCkmJih0aGlzLl9maWxsRW5hYmxlZD0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSksdm9pZCAwO3ZhciBjPXIuY29vcmRpbmF0ZXMsZD1yLnNob3c7aWYobihkKSYmZC5pc0NvbnN0YW50JiYhZC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpfHwhbihjKSlyZXR1cm4odGhpcy5fZmlsbEVuYWJsZWR8fHRoaXMuX291dGxpbmVFbmFibGVkKSYmKHRoaXMuX2ZpbGxFbmFibGVkPSExLHRoaXMuX291dGxpbmVFbmFibGVkPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpKSx2b2lkIDA7dmFyIGg9aShyLm1hdGVyaWFsLEMpLHA9aCBpbnN0YW5jZW9mIHY7dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eT1oLHRoaXMuX2ZpbGxQcm9wZXJ0eT1pKG8sRSksdGhpcy5fc2hvd1Byb3BlcnR5PWkoZCx3KSx0aGlzLl9zaG93T3V0bGluZVByb3BlcnR5PWkoci5vdXRsaW5lLGIpLHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5PWw/aShyLm91dGxpbmVDb2xvcixTKTp2b2lkIDA7dmFyIGc9ci5oZWlnaHQsXz1yLmV4dHJ1ZGVkSGVpZ2h0LFQ9ci5ncmFudWxhcml0eSx4PXIuc3RSb3RhdGlvbixBPXIucm90YXRpb24sUD1yLmNsb3NlQm90dG9tLE09ci5jbG9zZVRvcDtpZih0aGlzLl9maWxsRW5hYmxlZD1hLHRoaXMuX291dGxpbmVFbmFibGVkPWwsYy5pc0NvbnN0YW50JiZ5LmlzQ29uc3RhbnQoZykmJnkuaXNDb25zdGFudChfKSYmeS5pc0NvbnN0YW50KFQpJiZ5LmlzQ29uc3RhbnQoeCkmJnkuaXNDb25zdGFudChBKSYmeS5pc0NvbnN0YW50KFApJiZ5LmlzQ29uc3RhbnQoTSkpe3ZhciBJPXRoaXMuX29wdGlvbnM7SS52ZXJ0ZXhGb3JtYXQ9cD9mLlZFUlRFWF9GT1JNQVQ6bS5WRVJURVhfRk9STUFULEkucmVjdGFuZ2xlPWMuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFLEkucmVjdGFuZ2xlKSxJLmhlaWdodD1uKGcpP2cuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsSS5leHRydWRlZEhlaWdodD1uKF8pP18uZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsSS5ncmFudWxhcml0eT1uKFQpP1QuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKTp2b2lkIDAsSS5zdFJvdGF0aW9uPW4oeCk/eC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCxJLnJvdGF0aW9uPW4oQSk/QS5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCxJLmNsb3NlQm90dG9tPW4oUCk/UC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCxJLmNsb3NlVG9wPW4oTSk/TS5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCx0aGlzLl9pc0Nsb3NlZD1uKF8pJiZuKEkuY2xvc2VUb3ApJiZuKEkuY2xvc2VCb3R0b20pJiZJLmNsb3NlVG9wJiZJLmNsb3NlQm90dG9tLHRoaXMuX2R5bmFtaWM9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcyl9ZWxzZSB0aGlzLl9keW5hbWljfHwodGhpcy5fZHluYW1pYz0hMCx0aGlzLl9nZW9tZXRyeUNoYW5nZWQucmFpc2VFdmVudCh0aGlzKSl9fSx4LnByb3RvdHlwZS5jcmVhdGVEeW5hbWljVXBkYXRlcj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IEEoZSx0aGlzKX07dmFyIEE9ZnVuY3Rpb24oZSx0KXt0aGlzLl9wcmltaXRpdmVzPWUsdGhpcy5fcHJpbWl0aXZlPXZvaWQgMCx0aGlzLl9vdXRsaW5lUHJpbWl0aXZlPXZvaWQgMCx0aGlzLl9nZW9tZXRyeVVwZGF0ZXI9dCx0aGlzLl9vcHRpb25zPW5ldyBUKHQuX2VudGl0eSl9O3JldHVybiBBLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oaSl7dmFyIHI9dGhpcy5fZ2VvbWV0cnlVcGRhdGVyO24odGhpcy5fcHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fcHJpbWl0aXZlKSxuKHRoaXMuX291dGxpbmVQcmltaXRpdmUpJiZ0aGlzLl9wcmltaXRpdmVzLnJlbW92ZSh0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKTt2YXIgbz1yLl9lbnRpdHksYT1vLnJlY3RhbmdsZSxzPWEuc2hvdztpZihvLmlzQXZhaWxhYmxlKGkpJiYoIW4ocyl8fHMuZ2V0VmFsdWUoaSkpKXt2YXIgdT10aGlzLl9vcHRpb25zLGg9YS5jb29yZGluYXRlcyx2PWEuY2xvc2VCb3R0b20sZz1hLmNsb3NlVG9wLHk9YS5oZWlnaHQsQz1hLmV4dHJ1ZGVkSGVpZ2h0LHc9YS5ncmFudWxhcml0eSxFPWEuc3RSb3RhdGlvbixiPWEucm90YXRpb247aWYodS5yZWN0YW5nbGU9aC5nZXRWYWx1ZShpLHUucmVjdGFuZ2xlKSx1LmhlaWdodD1uKHkpP3kuZ2V0VmFsdWUoaSx1KTp2b2lkIDAsdS5leHRydWRlZEhlaWdodD1uKEMpP0MuZ2V0VmFsdWUoaSx1KTp2b2lkIDAsdS5ncmFudWxhcml0eT1uKHcpP3cuZ2V0VmFsdWUoaSk6dm9pZCAwLHUuc3RSb3RhdGlvbj1uKEUpP0UuZ2V0VmFsdWUoaSk6dm9pZCAwLHUucm90YXRpb249bihiKT9iLmdldFZhbHVlKGkpOnZvaWQgMCwhbihhLmZpbGwpfHxhLmZpbGwuZ2V0VmFsdWUoaSkpe3UuY2xvc2VCb3R0b209bih2KT92LmdldFZhbHVlKGkpOnZvaWQgMCx1LmNsb3NlVG9wPW4oZyk/Zy5nZXRWYWx1ZShpKTp2b2lkIDAsdGhpcy5fbWF0ZXJpYWw9Xy5nZXRWYWx1ZShpLHIuZmlsbE1hdGVyaWFsUHJvcGVydHksdGhpcy5fbWF0ZXJpYWwpO3ZhciBTPXRoaXMuX21hdGVyaWFsLFQ9bmV3IG0oe21hdGVyaWFsOlMsdHJhbnNsdWNlbnQ6Uy5pc1RyYW5zbHVjZW50KCksY2xvc2VkOnUuY2xvc2VUb3AmJnUuY2xvc2VCb3R0b219KTt1LnZlcnRleEZvcm1hdD1ULnZlcnRleEZvcm1hdCx0aGlzLl9wcmltaXRpdmU9bmV3IHAoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBsKHtpZDpvLGdlb21ldHJ5Om5ldyBjKHUpfSksYXBwZWFyYW5jZTpULGFzeW5jaHJvbm91czohMX0pLHRoaXMuX3ByaW1pdGl2ZXMuYWRkKHRoaXMuX3ByaW1pdGl2ZSl9aWYobihhLm91dGxpbmUpJiZhLm91dGxpbmUuZ2V0VmFsdWUoaSkpe3UudmVydGV4Rm9ybWF0PWYuVkVSVEVYX0ZPUk1BVDt2YXIgeD1uKGEub3V0bGluZUNvbG9yKT9hLm91dGxpbmVDb2xvci5nZXRWYWx1ZShpKTplLkJMQUNLO3RoaXMuX291dGxpbmVQcmltaXRpdmU9bmV3IHAoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBsKHtpZDpvLGdlb21ldHJ5Om5ldyBkKHUpLGF0dHJpYnV0ZXM6e2NvbG9yOnQuZnJvbUNvbG9yKHgpfX0pLGFwcGVhcmFuY2U6bmV3IGYoe2ZsYXQ6ITAsdHJhbnNsdWNlbnQ6MSE9PXguYWxwaGF9KSxhc3luY2hyb25vdXM6ITF9KSx0aGlzLl9wcmltaXRpdmVzLmFkZCh0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKX19fSxBLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxBLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7bih0aGlzLl9wcmltaXRpdmUpJiZ0aGlzLl9wcmltaXRpdmVzLnJlbW92ZSh0aGlzLl9wcmltaXRpdmUpLG4odGhpcy5fb3V0bGluZVByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX291dGxpbmVQcmltaXRpdmUpLG8odGhpcyl9LHh9KSxkZWZpbmUoIkNvcmUvV2FsbEdlb21ldHJ5TGlicmFyeSIsWyIuL0NhcnRvZ3JhcGhpYyIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZFRhbmdlbnRQbGFuZSIsIi4vTWF0aCIsIi4vUG9seWdvblBpcGVsaW5lIiwiLi9Qb2x5bGluZVBpcGVsaW5lIiwiLi9XaW5kaW5nT3JkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBsKGUsdCl7cmV0dXJuIHIuZXF1YWxzRXBzaWxvbihlLmxhdGl0dWRlLHQubGF0aXR1ZGUsci5FUFNJTE9OMTQpJiZyLmVxdWFsc0Vwc2lsb24oZS5sb25naXR1ZGUsdC5sb25naXR1ZGUsci5FUFNJTE9OMTQpfWZ1bmN0aW9uIHUoaSxuLHIsbyl7dmFyIGE9dChvKSxzPXQociksdT1bXSxjPVtdLG09W10sZj1uLmxlbmd0aDtpZigyPmYpcmV0dXJue3Bvc2l0aW9uczpufTt2YXIgcD1uWzBdO3UucHVzaChwKTt2YXIgdj1pLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHAsZCk7cyYmKHYuaGVpZ2h0PXJbMF0pLGMucHVzaCh2LmhlaWdodCksYT9tLnB1c2gob1swXSk6bS5wdXNoKDApO2Zvcih2YXIgZz0xO2Y+ZzsrK2cpe3ZhciBfPW5bZ10seT1pLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKF8saCk7cyYmKHkuaGVpZ2h0PXJbZ10pLGwodix5KT92LmhlaWdodDx5LmhlaWdodCYmKGNbYy5sZW5ndGgtMV09eS5oZWlnaHQpOih1LnB1c2goXyksYy5wdXNoKHkuaGVpZ2h0KSxhP20ucHVzaChvW2ddKTptLnB1c2goMCkpLGUuY2xvbmUoeSx2KX1yZXR1cm57cG9zaXRpb25zOnUsdG9wSGVpZ2h0czpjLGJvdHRvbUhlaWdodHM6bX19dmFyIGM9e30sZD1uZXcgZSxoPW5ldyBlO3JldHVybiBjLmNvbXB1dGVQb3NpdGlvbnM9ZnVuY3Rpb24oZSx0LGkscixsLGMpe3ZhciBkPXUoZSx0LGkscik7aWYodD1kLnBvc2l0aW9ucyxpPWQudG9wSGVpZ2h0cyxyPWQuYm90dG9tSGVpZ2h0cyx0Lmxlbmd0aD49Myl7dmFyIGg9bi5mcm9tUG9pbnRzKHQsZSksbT1oLnByb2plY3RQb2ludHNPbnRvUGxhbmUodCk7by5jb21wdXRlV2luZGluZ09yZGVyMkQobSk9PT1zLkNMT0NLV0lTRSYmKHQucmV2ZXJzZSgpLGkucmV2ZXJzZSgpLHIucmV2ZXJzZSgpKX12YXIgZixwLHYsZyxfLHk9dC5sZW5ndGg7aWYoYyl7dmFyIEM9MDtmb3IoZj0wO3ktMT5mO2YrKylnPXRbZl0sXz10W2YrMV0sQys9YS5udW1iZXJPZlBvaW50cyhnLF8sbCksQysrO3A9bmV3IEZsb2F0NjRBcnJheSgzKkMpLHY9bmV3IEZsb2F0NjRBcnJheSgzKkMpO3ZhciB3PTA7Zm9yKGY9MDt5LTE+ZjtmKyspe2c9dFtmXSxfPXRbZisxXTt2YXIgRT1pW2ZdLGI9aVtmKzFdLFM9YS5nZW5lcmF0ZUFyYyh7cG9zaXRpb25zOltnLF9dLGhlaWdodDpbRSxiXSxncmFudWxhcml0eTpsLGVsbGlwc29pZDplfSk7cC5zZXQoUyx3KSxFPXJbZl0sYj1yW2YrMV0sdi5zZXQoYS5nZW5lcmF0ZUFyYyh7cG9zaXRpb25zOltnLF9dLGhlaWdodDpbRSxiXSxncmFudWxhcml0eTpsLGVsbGlwc29pZDplfSksdyksdys9Uy5sZW5ndGh9fWVsc2UgcD1uZXcgRmxvYXQ2NEFycmF5KGEuZ2VuZXJhdGVBcmMoe3Bvc2l0aW9uczp0LGhlaWdodDppLGdyYW51bGFyaXR5OmwsZWxsaXBzb2lkOmV9KSksdj1uZXcgRmxvYXQ2NEFycmF5KGEuZ2VuZXJhdGVBcmMoe3Bvc2l0aW9uczp0LGhlaWdodDpyLGdyYW51bGFyaXR5OmwsZWxsaXBzb2lkOmV9KSk7cmV0dXJue2JvdHRvbVBvc2l0aW9uczp2LHRvcFBvc2l0aW9uczpwfX0sY30pLGRlZmluZSgiQ29yZS9XYWxsR2VvbWV0cnkiLFsiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0VsbGlwc29pZCIsIi4vR2VvbWV0cnkiLCIuL0dlb21ldHJ5QXR0cmlidXRlIiwiLi9HZW9tZXRyeUF0dHJpYnV0ZXMiLCIuL0luZGV4RGF0YXR5cGUiLCIuL01hdGgiLCIuL1ByaW1pdGl2ZVR5cGUiLCIuL1ZlcnRleEZvcm1hdCIsIi4vV2FsbEdlb21ldHJ5TGlicmFyeSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmKXsidXNlIHN0cmljdCI7dmFyIHA9bmV3IHQsdj1uZXcgdCxnPW5ldyB0LF89bmV3IHQseT1uZXcgdCxDPW5ldyB0LHc9bmV3IHQsRT1uZXcgdCxiPWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgdD1lLnBvc2l0aW9ucyxpPWUubWF4aW11bUhlaWdodHMscj1lLm1pbmltdW1IZWlnaHRzLG89bihlLnZlcnRleEZvcm1hdCxtLkRFRkFVTFQpLHM9bihlLmdyYW51bGFyaXR5LGQuUkFESUFOU19QRVJfREVHUkVFKSxsPW4oZS5lbGxpcHNvaWQsYS5XR1M4NCk7dGhpcy5fcG9zaXRpb25zPXQsdGhpcy5fbWluaW11bUhlaWdodHM9cix0aGlzLl9tYXhpbXVtSGVpZ2h0cz1pLHRoaXMuX3ZlcnRleEZvcm1hdD1vLHRoaXMuX2dyYW51bGFyaXR5PXMsdGhpcy5fZWxsaXBzb2lkPWwsdGhpcy5fd29ya2VyTmFtZT0iY3JlYXRlV2FsbEdlb21ldHJ5In07cmV0dXJuIGIuZnJvbUNvbnN0YW50SGVpZ2h0cz1mdW5jdGlvbihlKXtlPW4oZSxuLkVNUFRZX09CSkVDVCk7dmFyIHQsaSxvPWUucG9zaXRpb25zLGE9ZS5taW5pbXVtSGVpZ2h0LHM9ZS5tYXhpbXVtSGVpZ2h0LGw9cihhKSx1PXIocyk7aWYobHx8dSl7dmFyIGM9by5sZW5ndGg7dD1sP25ldyBBcnJheShjKTp2b2lkIDAsaT11P25ldyBBcnJheShjKTp2b2lkIDA7Zm9yKHZhciBkPTA7Yz5kOysrZClsJiYodFtkXT1hKSx1JiYoaVtkXT1zKX12YXIgaD17cG9zaXRpb25zOm8sbWF4aW11bUhlaWdodHM6aSxtaW5pbXVtSGVpZ2h0czp0LGVsbGlwc29pZDplLmVsbGlwc29pZCx2ZXJ0ZXhGb3JtYXQ6ZS52ZXJ0ZXhGb3JtYXR9O3JldHVybiBuZXcgYihoKX0sYi5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihuKXt2YXIgcj1uLl9wb3NpdGlvbnMsbz1uLl9taW5pbXVtSGVpZ2h0cyxhPW4uX21heGltdW1IZWlnaHRzLG09bi5fdmVydGV4Rm9ybWF0LGI9bi5fZ3JhbnVsYXJpdHksUz1uLl9lbGxpcHNvaWQsVD1mLmNvbXB1dGVQb3NpdGlvbnMoUyxyLGEsbyxiLCEwKSx4PVQuYm90dG9tUG9zaXRpb25zLEE9VC50b3BQb3NpdGlvbnMsUD1BLmxlbmd0aCxNPTIqUCxJPW0ucG9zaXRpb24/bmV3IEZsb2F0NjRBcnJheShNKTp2b2lkIDAsRD1tLm5vcm1hbD9uZXcgRmxvYXQzMkFycmF5KE0pOnZvaWQgMCxPPW0udGFuZ2VudD9uZXcgRmxvYXQzMkFycmF5KE0pOnZvaWQgMCxSPW0uYmlub3JtYWw/bmV3IEZsb2F0MzJBcnJheShNKTp2b2lkIDAsTD1tLnN0P25ldyBGbG9hdDMyQXJyYXkoMiooTS8zKSk6dm9pZCAwLE49MCx6PTAsQj0wLEY9MCxWPTAsaz1FLFU9dyxXPUMsRz0hMDtQLz0zO3ZhciBIO2ZvcihIPTA7UD5IOysrSCl7dmFyIHE9MypILGo9dC5mcm9tQXJyYXkoQSxxLHApLFk9dC5mcm9tQXJyYXkoeCxxLHYpO2lmKG0ucG9zaXRpb24mJihJW04rK109WS54LElbTisrXT1ZLnksSVtOKytdPVkueixJW04rK109ai54LElbTisrXT1qLnksSVtOKytdPWoueiksbS5ub3JtYWx8fG0udGFuZ2VudHx8bS5iaW5vcm1hbCl7dmFyIFgsWj1uZXcgdCxKPVMuc2NhbGVUb0dlb2RldGljU3VyZmFjZSh0LmZyb21BcnJheShBLHEsdiksdik7aWYoUD5IKzEmJihYPVMuc2NhbGVUb0dlb2RldGljU3VyZmFjZSh0LmZyb21BcnJheShBLHErMyxnKSxnKSxaPXQuZnJvbUFycmF5KEEscSszLHkpKSxHKXt2YXIgSz10LnN1YnRyYWN0KFosaixfKSxRPXQuc3VidHJhY3QoSixqLHApO2s9dC5ub3JtYWxpemUodC5jcm9zcyhRLEssayksayksRz0hMX10LmVxdWFsc0Vwc2lsb24oWCxKLGQuRVBTSUxPTjYpP0c9ITA6KG0udGFuZ2VudCYmKFU9dC5ub3JtYWxpemUodC5zdWJ0cmFjdChYLEosVSksVSkpLG0uYmlub3JtYWwmJihXPXQubm9ybWFsaXplKHQuY3Jvc3MoayxVLFcpLFcpKSksbS5ub3JtYWwmJihEW3orK109ay54LERbeisrXT1rLnksRFt6KytdPWsueixEW3orK109ay54LERbeisrXT1rLnksRFt6KytdPWsueiksbS50YW5nZW50JiYoT1tGKytdPVUueCxPW0YrK109VS55LE9bRisrXT1VLnosT1tGKytdPVUueCxPW0YrK109VS55LE9bRisrXT1VLnopLG0uYmlub3JtYWwmJihSW0IrK109Vy54LFJbQisrXT1XLnksUltCKytdPVcueixSW0IrK109Vy54LFJbQisrXT1XLnksUltCKytdPVcueil9aWYobS5zdCl7dmFyICQ9SC8oUC0xKTtMW1YrK109JCxMW1YrK109MCxMW1YrK109JCxMW1YrK109MX19dmFyIGV0PW5ldyB1O20ucG9zaXRpb24mJihldC5wb3NpdGlvbj1uZXcgbCh7Y29tcG9uZW50RGF0YXR5cGU6aS5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpJfSkpLG0ubm9ybWFsJiYoZXQubm9ybWFsPW5ldyBsKHtjb21wb25lbnREYXRhdHlwZTppLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6RH0pKSxtLnRhbmdlbnQmJihldC50YW5nZW50PW5ldyBsKHtjb21wb25lbnREYXRhdHlwZTppLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6T30pKSxtLmJpbm9ybWFsJiYoZXQuYmlub3JtYWw9bmV3IGwoe2NvbXBvbmVudERhdGF0eXBlOmkuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpSfSkpLG0uc3QmJihldC5zdD1uZXcgbCh7Y29tcG9uZW50RGF0YXR5cGU6aS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOkx9KSk7dmFyIHR0PU0vMztNLT02O3ZhciBpdD1jLmNyZWF0ZVR5cGVkQXJyYXkodHQsTSksbnQ9MDtmb3IoSD0wO3R0LTI+SDtIKz0yKXt2YXIgcnQ9SCxvdD1IKzIsYXQ9dC5mcm9tQXJyYXkoSSwzKnJ0LHApLHN0PXQuZnJvbUFycmF5KEksMypvdCx2KTtpZighdC5lcXVhbHNFcHNpbG9uKGF0LHN0LGQuRVBTSUxPTjYpKXt2YXIgbHQ9SCsxLHV0PUgrMztpdFtudCsrXT1sdCxpdFtudCsrXT1ydCxpdFtudCsrXT11dCxpdFtudCsrXT11dCxpdFtudCsrXT1ydCxpdFtudCsrXT1vdH19cmV0dXJuIG5ldyBzKHthdHRyaWJ1dGVzOmV0LGluZGljZXM6aXQscHJpbWl0aXZlVHlwZTpoLlRSSUFOR0xFUyxib3VuZGluZ1NwaGVyZTpuZXcgZS5mcm9tVmVydGljZXMoSSl9KX0sYn0pLGRlZmluZSgiQ29yZS9XYWxsT3V0bGluZUdlb21ldHJ5IixbIi4vQm91bmRpbmdTcGhlcmUiLCIuL0NhcnRlc2lhbjMiLCIuL0NvbXBvbmVudERhdGF0eXBlIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiLCIuL0dlb21ldHJ5IiwiLi9HZW9tZXRyeUF0dHJpYnV0ZSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGVzIiwiLi9JbmRleERhdGF0eXBlIiwiLi9NYXRoIiwiLi9QcmltaXRpdmVUeXBlIiwiLi9XYWxsR2VvbWV0cnlMaWJyYXJ5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtKXsidXNlIHN0cmljdCI7dmFyIGY9bmV3IHQscD1uZXcgdCx2PWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgdD1lLnBvc2l0aW9ucyxpPWUubWF4aW11bUhlaWdodHMscj1lLm1pbmltdW1IZWlnaHRzLG89bihlLmdyYW51bGFyaXR5LGQuUkFESUFOU19QRVJfREVHUkVFKSxzPW4oZS5lbGxpcHNvaWQsYS5XR1M4NCk7dGhpcy5fcG9zaXRpb25zPXQsdGhpcy5fbWluaW11bUhlaWdodHM9cix0aGlzLl9tYXhpbXVtSGVpZ2h0cz1pLHRoaXMuX2dyYW51bGFyaXR5PW8sdGhpcy5fZWxsaXBzb2lkPXMsdGhpcy5fd29ya2VyTmFtZT0iY3JlYXRlV2FsbE91dGxpbmVHZW9tZXRyeSJ9O3JldHVybiB2LmZyb21Db25zdGFudEhlaWdodHM9ZnVuY3Rpb24oZSl7ZT1uKGUsbi5FTVBUWV9PQkpFQ1QpO3ZhciB0LGksbz1lLnBvc2l0aW9ucyxhPWUubWluaW11bUhlaWdodCxzPWUubWF4aW11bUhlaWdodCxsPXIoYSksdT1yKHMpO2lmKGx8fHUpe3ZhciBjPW8ubGVuZ3RoO3Q9bD9uZXcgQXJyYXkoYyk6dm9pZCAwLGk9dT9uZXcgQXJyYXkoYyk6dm9pZCAwO2Zvcih2YXIgZD0wO2M+ZDsrK2QpbCYmKHRbZF09YSksdSYmKGlbZF09cyl9dmFyIGg9e3Bvc2l0aW9uczpvLG1heGltdW1IZWlnaHRzOmksbWluaW11bUhlaWdodHM6dCxlbGxpcHNvaWQ6ZS5lbGxpcHNvaWR9O3JldHVybiBuZXcgdihoKX0sdi5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihuKXt2YXIgcj1uLl9wb3NpdGlvbnMsbz1uLl9taW5pbXVtSGVpZ2h0cyxhPW4uX21heGltdW1IZWlnaHRzLHY9bi5fZ3JhbnVsYXJpdHksZz1uLl9lbGxpcHNvaWQsXz1tLmNvbXB1dGVQb3NpdGlvbnMoZyxyLGEsbyx2LCExKSx5PV8uYm90dG9tUG9zaXRpb25zLEM9Xy50b3BQb3NpdGlvbnMsdz1DLmxlbmd0aCxFPTIqdyxiPW5ldyBGbG9hdDY0QXJyYXkoRSksUz0wO3cvPTM7dmFyIFQ7Zm9yKFQ9MDt3PlQ7KytUKXt2YXIgeD0zKlQsQT10LmZyb21BcnJheShDLHgsZiksUD10LmZyb21BcnJheSh5LHgscCk7YltTKytdPVAueCxiW1MrK109UC55LGJbUysrXT1QLnosYltTKytdPUEueCxiW1MrK109QS55LGJbUysrXT1BLnp9dmFyIE09bmV3IHUoe3Bvc2l0aW9uOm5ldyBsKHtjb21wb25lbnREYXRhdHlwZTppLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOmJ9KX0pLEk9RS8zO0U9MipJLTQrSTt2YXIgRD1jLmNyZWF0ZVR5cGVkQXJyYXkoSSxFKSxPPTA7Zm9yKFQ9MDtJLTI+VDtUKz0yKXt2YXIgUj1ULEw9VCsyLE49dC5mcm9tQXJyYXkoYiwzKlIsZiksej10LmZyb21BcnJheShiLDMqTCxwKTtpZighdC5lcXVhbHNFcHNpbG9uKE4seixkLkVQU0lMT042KSl7dmFyIEI9VCsxLEY9VCszO0RbTysrXT1CLERbTysrXT1SLERbTysrXT1CLERbTysrXT1GLERbTysrXT1SLERbTysrXT1MfX1yZXR1cm4gRFtPKytdPUktMixEW08rK109SS0xLG5ldyBzKHthdHRyaWJ1dGVzOk0saW5kaWNlczpELHByaW1pdGl2ZVR5cGU6aC5MSU5FUyxib3VuZGluZ1NwaGVyZTpuZXcgZS5mcm9tVmVydGljZXMoYil9KX0sdn0pLGRlZmluZSgiRGF0YVNvdXJjZXMvV2FsbEdlb21ldHJ5VXBkYXRlciIsWyIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9Db2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9tZXRyeUluc3RhbmNlIiwiLi4vQ29yZS9Jc284NjAxIiwiLi4vQ29yZS9TaG93R2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL0NvcmUvV2FsbEdlb21ldHJ5IiwiLi4vQ29yZS9XYWxsT3V0bGluZUdlb21ldHJ5IiwiLi4vU2NlbmUvTWF0ZXJpYWxBcHBlYXJhbmNlIiwiLi4vU2NlbmUvUGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2UiLCIuLi9TY2VuZS9QcmltaXRpdmUiLCIuL0NvbG9yTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vQ29uc3RhbnRQcm9wZXJ0eSIsIi4vTWF0ZXJpYWxQcm9wZXJ0eSIsIi4vUHJvcGVydHkiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHkpeyJ1c2Ugc3RyaWN0Ijt2YXIgQz12LmZyb21Db2xvcihlLldISVRFKSx3PW5ldyBnKCEwKSxFPW5ldyBnKCEwKSxiPW5ldyBnKCExKSxTPW5ldyBnKGUuQkxBQ0spLFQ9ZnVuY3Rpb24oZSl7dGhpcy5pZD1lLHRoaXMudmVydGV4Rm9ybWF0PXZvaWQgMCx0aGlzLnBvc2l0aW9ucz12b2lkIDAsdGhpcy5taW5pbXVtSGVpZ2h0cz12b2lkIDAsdGhpcy5tYXhpbXVtSGVpZ2h0cz12b2lkIDAsdGhpcy5ncmFudWxhcml0eT12b2lkIDB9LHg9ZnVuY3Rpb24oZSl7dGhpcy5fZW50aXR5PWUsdGhpcy5fZW50aXR5U3Vic2NyaXB0aW9uPWUuZGVmaW5pdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcih4LnByb3RvdHlwZS5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQsdGhpcyksdGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fZHluYW1pYz0hMSx0aGlzLl9vdXRsaW5lRW5hYmxlZD0hMSx0aGlzLl9nZW9tZXRyeUNoYW5nZWQ9bmV3IHMsdGhpcy5fc2hvd1Byb3BlcnR5PXZvaWQgMCx0aGlzLl9tYXRlcmlhbFByb3BlcnR5PXZvaWQgMCx0aGlzLl9oYXNDb25zdGFudE91dGxpbmU9ITAsdGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eT12b2lkIDAsdGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHk9dm9pZCAwLHRoaXMuX29wdGlvbnM9bmV3IFQoZSksdGhpcy5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQoZSwid2FsbCIsZS53YWxsLHZvaWQgMCl9O3IoeCx7cGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2VUeXBlOnt2YWx1ZTpmfSxtYXRlcmlhbEFwcGVhcmFuY2VUeXBlOnt2YWx1ZTptfX0pLHIoeC5wcm90b3R5cGUse2VudGl0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VudGl0eX19LGZpbGxFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsbEVuYWJsZWR9fSxoYXNDb25zdGFudEZpbGw6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9maWxsRW5hYmxlZHx8IW4odGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZ5LmlzQ29uc3RhbnQodGhpcy5fZmlsbFByb3BlcnR5KX19LGZpbGxNYXRlcmlhbFByb3BlcnR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eX19LG91dGxpbmVFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0bGluZUVuYWJsZWR9fSxoYXNDb25zdGFudE91dGxpbmU6e2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9vdXRsaW5lRW5hYmxlZHx8IW4odGhpcy5fZW50aXR5LmF2YWlsYWJpbGl0eSkmJnkuaXNDb25zdGFudCh0aGlzLl9zaG93UHJvcGVydHkpJiZ5LmlzQ29uc3RhbnQodGhpcy5fc2hvd091dGxpbmVQcm9wZXJ0eSl9fSxvdXRsaW5lQ29sb3JQcm9wZXJ0eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dGxpbmVDb2xvclByb3BlcnR5fX0saXNEeW5hbWljOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZHluYW1pY319LGlzQ2xvc2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX19LGdlb21ldHJ5Q2hhbmdlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dlb21ldHJ5Q2hhbmdlZH19fSkseC5wcm90b3R5cGUuaXNPdXRsaW5lVmlzaWJsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9lbnRpdHk7cmV0dXJuIHRoaXMuX291dGxpbmVFbmFibGVkJiZ0LmlzQXZhaWxhYmxlKGUpJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoZSkmJnRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHkuZ2V0VmFsdWUoZSl9LHgucHJvdG90eXBlLmlzRmlsbGVkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VudGl0eTtyZXR1cm4gdGhpcy5fZmlsbEVuYWJsZWQmJnQuaXNBdmFpbGFibGUoZSkmJnRoaXMuX3Nob3dQcm9wZXJ0eS5nZXRWYWx1ZShlKSYmdGhpcy5fZmlsbFByb3BlcnR5LmdldFZhbHVlKGUpfSx4LnByb3RvdHlwZS5jcmVhdGVGaWxsR2VvbWV0cnlJbnN0YW5jZT1mdW5jdGlvbihpKXt2YXIgcixvLGE9dGhpcy5fZW50aXR5LHM9YS5pc0F2YWlsYWJsZShpKSx1PW5ldyBjKHMmJnRoaXMuX3Nob3dQcm9wZXJ0eS5nZXRWYWx1ZShpKSYmdGhpcy5fZmlsbFByb3BlcnR5LmdldFZhbHVlKGkpKTtpZih0aGlzLl9tYXRlcmlhbFByb3BlcnR5IGluc3RhbmNlb2Ygdil7dmFyIGg9ZS5XSElURTtuKHRoaXMuX21hdGVyaWFsUHJvcGVydHkuY29sb3IpJiYodGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5pc0NvbnN0YW50fHxzKSYmKGg9dGhpcy5fbWF0ZXJpYWxQcm9wZXJ0eS5jb2xvci5nZXRWYWx1ZShpKSksbz10LmZyb21Db2xvcihoKSxyPXtzaG93OnUsY29sb3I6b319ZWxzZSByPXtzaG93OnV9O3JldHVybiBuZXcgbCh7aWQ6YSxnZW9tZXRyeTpuZXcgZCh0aGlzLl9vcHRpb25zKSxhdHRyaWJ1dGVzOnJ9KX0seC5wcm90b3R5cGUuY3JlYXRlT3V0bGluZUdlb21ldHJ5SW5zdGFuY2U9ZnVuY3Rpb24oaSl7dmFyIG49dGhpcy5fZW50aXR5LHI9bi5pc0F2YWlsYWJsZShpKTtyZXR1cm4gbmV3IGwoe2lkOm4sZ2VvbWV0cnk6bmV3IGgodGhpcy5fb3B0aW9ucyksYXR0cmlidXRlczp7c2hvdzpuZXcgYyhyJiZ0aGlzLl9zaG93UHJvcGVydHkuZ2V0VmFsdWUoaSkmJnRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHkuZ2V0VmFsdWUoaSkpLGNvbG9yOnQuZnJvbUNvbG9yKHI/dGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHkuZ2V0VmFsdWUoaSk6ZS5CTEFDSyl9fSl9LHgucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHgucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9lbnRpdHlTdWJzY3JpcHRpb24oKSxvKHRoaXMpfSx4LnByb3RvdHlwZS5fb25FbnRpdHlQcm9wZXJ0eUNoYW5nZWQ9ZnVuY3Rpb24oZSx0KXtpZigiYXZhaWxhYmlsaXR5Ij09PXR8fCJ3YWxsIj09PXQpe3ZhciByPXRoaXMuX2VudGl0eS53YWxsO2lmKCFuKHIpKXJldHVybih0aGlzLl9maWxsRW5hYmxlZHx8dGhpcy5fb3V0bGluZUVuYWJsZWQpJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgbz1yLmZpbGwsYT1uKG8pJiZvLmlzQ29uc3RhbnQ/by5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOiEwLHM9ci5vdXRsaW5lLGw9bihzKTtpZihsJiZzLmlzQ29uc3RhbnQmJihsPXMuZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFKSksIWEmJiFsKXJldHVybih0aGlzLl9maWxsRW5hYmxlZHx8dGhpcy5fb3V0bGluZUVuYWJsZWQpJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgYz1yLnBvc2l0aW9ucyxkPXIuc2hvdztpZihuKGQpJiZkLmlzQ29uc3RhbnQmJiFkLmdldFZhbHVlKHUuTUlOSU1VTV9WQUxVRSl8fCFuKGMpKXJldHVybih0aGlzLl9maWxsRW5hYmxlZHx8dGhpcy5fb3V0bGluZUVuYWJsZWQpJiYodGhpcy5fZmlsbEVuYWJsZWQ9ITEsdGhpcy5fb3V0bGluZUVuYWJsZWQ9ITEsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpLHZvaWQgMDt2YXIgaD1pKHIubWF0ZXJpYWwsQykscD1oIGluc3RhbmNlb2Ygdjt0aGlzLl9tYXRlcmlhbFByb3BlcnR5PWgsdGhpcy5fZmlsbFByb3BlcnR5PWkobyxFKSx0aGlzLl9zaG93UHJvcGVydHk9aShkLHcpLHRoaXMuX3Nob3dPdXRsaW5lUHJvcGVydHk9aShyLm91dGxpbmUsYiksdGhpcy5fb3V0bGluZUNvbG9yUHJvcGVydHk9bD9pKHIub3V0bGluZUNvbG9yLFMpOnZvaWQgMDt2YXIgZz1yLm1pbmltdW1IZWlnaHRzLF89ci5tYXhpbXVtSGVpZ2h0cyxUPXIuZ3JhbnVsYXJpdHk7aWYodGhpcy5fZmlsbEVuYWJsZWQ9YSx0aGlzLl9vdXRsaW5lRW5hYmxlZD1sLGMuaXNDb25zdGFudCYmeS5pc0NvbnN0YW50KGcpJiZ5LmlzQ29uc3RhbnQoXykmJnkuaXNDb25zdGFudChUKSl7dmFyIHg9dGhpcy5fb3B0aW9uczt4LnZlcnRleEZvcm1hdD1wP2YuVkVSVEVYX0ZPUk1BVDptLlZFUlRFWF9GT1JNQVQseC5wb3NpdGlvbnM9Yy5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUseC5wb3NpdGlvbnMpLHgubWluaW11bUhlaWdodHM9bihnKT9nLmdldFZhbHVlKHUuTUlOSU1VTV9WQUxVRSx4Lm1pbmltdW1IZWlnaHRzKTp2b2lkIDAseC5tYXhpbXVtSGVpZ2h0cz1uKF8pP18uZ2V0VmFsdWUodS5NSU5JTVVNX1ZBTFVFLHgubWF4aW11bUhlaWdodHMpOnZvaWQgMCx4LmdyYW51bGFyaXR5PW4oVCk/VC5nZXRWYWx1ZSh1Lk1JTklNVU1fVkFMVUUpOnZvaWQgMCx0aGlzLl9keW5hbWljPSExLHRoaXMuX2dlb21ldHJ5Q2hhbmdlZC5yYWlzZUV2ZW50KHRoaXMpfWVsc2UgdGhpcy5fZHluYW1pY3x8KHRoaXMuX2R5bmFtaWM9ITAsdGhpcy5fZ2VvbWV0cnlDaGFuZ2VkLnJhaXNlRXZlbnQodGhpcykpfX0seC5wcm90b3R5cGUuY3JlYXRlRHluYW1pY1VwZGF0ZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBBKGUsdGhpcyl9O3ZhciBBPWZ1bmN0aW9uKGUsdCl7dGhpcy5fcHJpbWl0aXZlcz1lLHRoaXMuX3ByaW1pdGl2ZT12b2lkIDAsdGhpcy5fb3V0bGluZVByaW1pdGl2ZT12b2lkIDAsdGhpcy5fZ2VvbWV0cnlVcGRhdGVyPXQsdGhpcy5fb3B0aW9ucz1uZXcgVCh0Ll9lbnRpdHkpfTtyZXR1cm4gQS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGkpe3ZhciByPXRoaXMuX2dlb21ldHJ5VXBkYXRlcjtuKHRoaXMuX3ByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX3ByaW1pdGl2ZSksbih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fb3V0bGluZVByaW1pdGl2ZSk7dmFyIG89ci5fZW50aXR5LGE9by53YWxsLHM9YS5zaG93O2lmKG8uaXNBdmFpbGFibGUoaSkmJighbihzKXx8cy5nZXRWYWx1ZShpKSkpe3ZhciB1PXRoaXMuX29wdGlvbnMsYz1hLnBvc2l0aW9ucyx2PWEubWluaW11bUhlaWdodHMsZz1hLm1heGltdW1IZWlnaHRzLHk9YS5ncmFudWxhcml0eTtpZih1LnBvc2l0aW9ucz1jLmdldFZhbHVlKGksdS5wb3NpdGlvbnMpLHUubWluaW11bUhlaWdodHM9bih2KT92LmdldFZhbHVlKGksdS5taW5pbXVtSGVpZ2h0cyk6dm9pZCAwLHUubWF4aW11bUhlaWdodHM9bihnKT9nLmdldFZhbHVlKGksdS5tYXhpbXVtSGVpZ2h0cyk6dm9pZCAwLHUuZ3JhbnVsYXJpdHk9bih5KT95LmdldFZhbHVlKGkpOnZvaWQgMCwhbihhLmZpbGwpfHxhLmZpbGwuZ2V0VmFsdWUoaSkpe3RoaXMuX21hdGVyaWFsPV8uZ2V0VmFsdWUoaSxyLmZpbGxNYXRlcmlhbFByb3BlcnR5LHRoaXMuX21hdGVyaWFsKTt2YXIgQz10aGlzLl9tYXRlcmlhbCx3PW5ldyBtKHttYXRlcmlhbDpDLHRyYW5zbHVjZW50OkMuaXNUcmFuc2x1Y2VudCgpLGNsb3NlZDohMX0pO3UudmVydGV4Rm9ybWF0PXcudmVydGV4Rm9ybWF0LHRoaXMuX3ByaW1pdGl2ZT1uZXcgcCh7Z2VvbWV0cnlJbnN0YW5jZXM6bmV3IGwoe2lkOm8sZ2VvbWV0cnk6bmV3IGQodSl9KSxhcHBlYXJhbmNlOncsYXN5bmNocm9ub3VzOiExfSksdGhpcy5fcHJpbWl0aXZlcy5hZGQodGhpcy5fcHJpbWl0aXZlKX1pZihuKGEub3V0bGluZSkmJmEub3V0bGluZS5nZXRWYWx1ZShpKSl7dS52ZXJ0ZXhGb3JtYXQ9Zi5WRVJURVhfRk9STUFUO3ZhciBFPW4oYS5vdXRsaW5lQ29sb3IpP2Eub3V0bGluZUNvbG9yLmdldFZhbHVlKGkpOmUuQkxBQ0s7dGhpcy5fb3V0bGluZVByaW1pdGl2ZT1uZXcgcCh7Z2VvbWV0cnlJbnN0YW5jZXM6bmV3IGwoe2lkOm8sZ2VvbWV0cnk6bmV3IGgodSksYXR0cmlidXRlczp7Y29sb3I6dC5mcm9tQ29sb3IoRSl9fSksYXBwZWFyYW5jZTpuZXcgZih7ZmxhdDohMCx0cmFuc2x1Y2VudDoxIT09RS5hbHBoYX0pLGFzeW5jaHJvbm91czohMX0pLHRoaXMuX3ByaW1pdGl2ZXMuYWRkKHRoaXMuX291dGxpbmVQcmltaXRpdmUpfX19LEEucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LEEucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtuKHRoaXMuX3ByaW1pdGl2ZSkmJnRoaXMuX3ByaW1pdGl2ZXMucmVtb3ZlKHRoaXMuX3ByaW1pdGl2ZSksbih0aGlzLl9vdXRsaW5lUHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fb3V0bGluZVByaW1pdGl2ZSksbyh0aGlzKX0seH0pLGRlZmluZSgiRGF0YVNvdXJjZXMvRGF0YVNvdXJjZURpc3BsYXkiLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudEhlbHBlciIsIi4vQmlsbGJvYXJkVmlzdWFsaXplciIsIi4vRWxsaXBzZUdlb21ldHJ5VXBkYXRlciIsIi4vRWxsaXBzb2lkR2VvbWV0cnlVcGRhdGVyIiwiLi9HZW9tZXRyeVZpc3VhbGl6ZXIiLCIuL0xhYmVsVmlzdWFsaXplciIsIi4vTW9kZWxWaXN1YWxpemVyIiwiLi9QYXRoVmlzdWFsaXplciIsIi4vUG9pbnRWaXN1YWxpemVyIiwiLi9Qb2x5Z29uR2VvbWV0cnlVcGRhdGVyIiwiLi9Qb2x5bGluZUdlb21ldHJ5VXBkYXRlciIsIi4vUmVjdGFuZ2xlR2VvbWV0cnlVcGRhdGVyIiwiLi9XYWxsR2VvbWV0cnlVcGRhdGVyIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2KXsidXNlIHN0cmljdCI7dmFyIGc9ZnVuY3Rpb24odCl7dmFyIGk9dC5zY2VuZSxuPXQuZGF0YVNvdXJjZUNvbGxlY3Rpb247dGhpcy5fZXZlbnRIZWxwZXI9bmV3IHIsdGhpcy5fZXZlbnRIZWxwZXIuYWRkKG4uZGF0YVNvdXJjZUFkZGVkLHRoaXMuX29uRGF0YVNvdXJjZUFkZGVkLHRoaXMpLHRoaXMuX2V2ZW50SGVscGVyLmFkZChuLmRhdGFTb3VyY2VSZW1vdmVkLHRoaXMuX29uRGF0YVNvdXJjZVJlbW92ZWQsdGhpcyksdGhpcy5fZGF0YVNvdXJjZUNvbGxlY3Rpb249bix0aGlzLl9zY2VuZT1pLHRoaXMuX3Zpc3VhbGl6ZXJzQ2FsbGJhY2s9ZSh0LnZpc3VhbGl6ZXJzQ2FsbGJhY2ssZy5kZWZhdWx0VmlzdWFsaXplcnNDYWxsYmFjayk7Zm9yKHZhciBvPTAsYT1uLmxlbmd0aDthPm87bysrKXRoaXMuX29uRGF0YVNvdXJjZUFkZGVkKG4sbi5nZXQobykpfTtyZXR1cm4gZy5kZWZhdWx0VmlzdWFsaXplcnNDYWxsYmFjaz1mdW5jdGlvbihlLHQpe3ZhciBpPXQuZW50aXRpZXM7cmV0dXJuW25ldyBvKGUsaSksbmV3IGwoYSxlLGkpLG5ldyBsKHMsZSxpKSxuZXcgbChtLGUsaSksbmV3IGwoZixlLGkpLG5ldyBsKHAsZSxpKSxuZXcgbCh2LGUsaSksbmV3IHUoZSxpKSxuZXcgYyhlLGkpLG5ldyBoKGUsaSksbmV3IGQoZSxpKV19LGcucHJvdG90eXBlLmdldFNjZW5lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjZW5lfSxnLnByb3RvdHlwZS5nZXREYXRhU291cmNlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhU291cmNlQ29sbGVjdGlvbn0sZy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuX2V2ZW50SGVscGVyLnJlbW92ZUFsbCgpO2Zvcih2YXIgZT10aGlzLl9kYXRhU291cmNlQ29sbGVjdGlvbix0PTAsbj1lLmxlbmd0aDtuPnQ7Kyt0KXRoaXMuX29uRGF0YVNvdXJjZVJlbW92ZWQodGhpcy5fZGF0YVNvdXJjZUNvbGxlY3Rpb24sZS5nZXQodCkpO3JldHVybiBpKHRoaXMpfSxnLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIGksbixyLG8sYT0hMCxzPXRoaXMuX2RhdGFTb3VyY2VDb2xsZWN0aW9uLGw9cy5sZW5ndGg7Zm9yKGk9MDtsPmk7aSsrKXt2YXIgdT1zLmdldChpKTtmb3IodCh1LnVwZGF0ZSkmJihhPXUudXBkYXRlKGUpJiZhKSxyPXUuX3Zpc3VhbGl6ZXJzLG89ci5sZW5ndGgsbj0wO28+bjtuKyspYT1yW25dLnVwZGF0ZShlKSYmYX1yZXR1cm4gYX0sZy5wcm90b3R5cGUuX29uRGF0YVNvdXJjZUFkZGVkPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fdmlzdWFsaXplcnNDYWxsYmFjayh0aGlzLl9zY2VuZSx0KTt0Ll92aXN1YWxpemVycz1pfSxnLnByb3RvdHlwZS5fb25EYXRhU291cmNlUmVtb3ZlZD1mdW5jdGlvbihlLHQpe2Zvcih2YXIgaT10Ll92aXN1YWxpemVycyxuPWkubGVuZ3RoLHI9MDtuPnI7cisrKWlbcl0uZGVzdHJveSgpLHQuX3Zpc3VhbGl6ZXJzPXZvaWQgMH0sZ30pLGZ1bmN0aW9uKCl7IWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXN8fCgwLGV2YWwpKCJ0aGlzIiksaT10LmRvY3VtZW50LG49dC5uYXZpZ2F0b3Iscj10LmpRdWVyeSxvPXQuSlNPTjshZnVuY3Rpb24oZSl7ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cyYmIm9iamVjdCI9PXR5cGVvZiBtb2R1bGU/ZShtb2R1bGUuZXhwb3J0c3x8ZXhwb3J0cyk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoIlRoaXJkUGFydHkva25vY2tvdXQtMy4xLjAiLFsiZXhwb3J0cyJdLGUpOmUodC5rbz17fSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIHMoZSx0KXtyZXR1cm4gbnVsbD09PWV8fHR5cGVvZiBlIGluIGg/ZT09PXQ6ITF9ZnVuY3Rpb24gbCh0LGkpe3ZhciBuO3JldHVybiBmdW5jdGlvbigpe258fChuPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuPWUsdCgpfSxpKSl9fWZ1bmN0aW9uIHUoZSx0KXt2YXIgaTtyZXR1cm4gZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoaSksaT1zZXRUaW1lb3V0KGUsdCl9fWZ1bmN0aW9uIGMoZSx0LGksbil7ZC5kW2VdPXtpbml0OmZ1bmN0aW9uKGUscixvLGEscyl7dmFyIGwsdTtyZXR1cm4gZC5iYShmdW5jdGlvbigpe3ZhciBvPWQuYS5jKHIoKSksYT0haSE9IW8sYz0hdTsoY3x8dHx8YSE9PWwpJiYoYyYmZC5jYS5mYSgpJiYodT1kLmEubGIoZC5lLmNoaWxkTm9kZXMoZSksITApKSxhPyhjfHxkLmUuVShlLGQuYS5sYih1KSksZC5nYihuP24ocyxvKTpzLGUpKTpkLmUuZGEoZSksbD1hKX0sbnVsbCx7RzplfSkse2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX19LGQuZy5hYVtlXT0hMSxkLmUuUVtlXT0hMH12YXIgZD0idW5kZWZpbmVkIiE9dHlwZW9mIGE/YTp7fTtkLmI9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9ZS5zcGxpdCgiLiIpLG49ZCxyPTA7cjxpLmxlbmd0aC0xO3IrKyluPW5baVtyXV07bltpW2kubGVuZ3RoLTFdXT10fSxkLnM9ZnVuY3Rpb24oZSx0LGkpe2VbdF09aX0sZC52ZXJzaW9uPSIzLjEuMCIsZC5iKCJ2ZXJzaW9uIixkLnZlcnNpb24pLGQuYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZSx0KXtmb3IodmFyIGkgaW4gZSllLmhhc093blByb3BlcnR5KGkpJiZ0KGksZVtpXSl9ZnVuY3Rpb24gcyhlLHQpe2lmKHQpZm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmKGVbaV09dFtpXSk7cmV0dXJuIGV9ZnVuY3Rpb24gbChlLHQpe3JldHVybiBlLl9fcHJvdG9fXz10LGV9dmFyIHU9e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5LGM9e30saD17fTtjW24mJi9GaXJlZm94XC8yL2kudGVzdChuLnVzZXJBZ2VudCk/IktleWJvYXJkRXZlbnQiOiJVSUV2ZW50cyJdPVsia2V5dXAiLCJrZXlkb3duIiwia2V5cHJlc3MiXSxjLk1vdXNlRXZlbnRzPSJjbGljayBkYmxjbGljayBtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSIuc3BsaXQoIiAiKSxhKGMsZnVuY3Rpb24oZSx0KXtpZih0Lmxlbmd0aClmb3IodmFyIGk9MCxuPXQubGVuZ3RoO24+aTtpKyspaFt0W2ldXT1lfSk7dmFyIG09e3Byb3BlcnR5Y2hhbmdlOiEwfSxmPWkmJmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTMsbj1pLmNyZWF0ZUVsZW1lbnQoImRpdiIpLHI9bi5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaSIpO24uaW5uZXJIVE1MPSI8IS0tW2lmIGd0IElFICIrICsrdCsiXT48aT48L2k+PCFbZW5kaWZdLS0+IixyWzBdOyk7cmV0dXJuIHQ+ND90OmV9KCk7cmV0dXJue21iOlsiYXV0aGVudGljaXR5X3Rva2VuIiwvXl9fUmVxdWVzdFZlcmlmaWNhdGlvblRva2VuKF8uKik/JC9dLHI6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9MCxuPWUubGVuZ3RoO24+aTtpKyspdChlW2ldLGkpfSxsOmZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIEFycmF5LnByb3RvdHlwZS5pbmRleE9mKXJldHVybiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUsdCk7Zm9yKHZhciBpPTAsbj1lLmxlbmd0aDtuPmk7aSsrKWlmKGVbaV09PT10KXJldHVybiBpO3JldHVybi0xfSxoYjpmdW5jdGlvbihlLHQsaSl7Zm9yKHZhciBuPTAscj1lLmxlbmd0aDtyPm47bisrKWlmKHQuY2FsbChpLGVbbl0sbikpcmV0dXJuIGVbbl07cmV0dXJuIG51bGx9LG1hOmZ1bmN0aW9uKGUsdCl7dmFyIGk9ZC5hLmwoZSx0KTtpPjA/ZS5zcGxpY2UoaSwxKTowPT09aSYmZS5zaGlmdCgpfSxpYjpmdW5jdGlvbihlKXtlPWV8fFtdO2Zvcih2YXIgdD1bXSxpPTAsbj1lLmxlbmd0aDtuPmk7aSsrKTA+ZC5hLmwodCxlW2ldKSYmdC5wdXNoKGVbaV0pO3JldHVybiB0fSx5YTpmdW5jdGlvbihlLHQpe2U9ZXx8W107Zm9yKHZhciBpPVtdLG49MCxyPWUubGVuZ3RoO3I+bjtuKyspaS5wdXNoKHQoZVtuXSxuKSk7cmV0dXJuIGl9LGxhOmZ1bmN0aW9uKGUsdCl7ZT1lfHxbXTtmb3IodmFyIGk9W10sbj0wLHI9ZS5sZW5ndGg7cj5uO24rKyl0KGVbbl0sbikmJmkucHVzaChlW25dKTtyZXR1cm4gaX0sJDpmdW5jdGlvbihlLHQpe2lmKHQgaW5zdGFuY2VvZiBBcnJheSllLnB1c2guYXBwbHkoZSx0KTtlbHNlIGZvcih2YXIgaT0wLG49dC5sZW5ndGg7bj5pO2krKyllLnB1c2godFtpXSk7cmV0dXJuIGV9LFk6ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWQuYS5sKGQuYS5TYShlKSx0KTswPm4/aSYmZS5wdXNoKHQpOml8fGUuc3BsaWNlKG4sMSl9LG5hOnUsZXh0ZW5kOnMscmE6bCxzYTp1P2w6cyxBOmEsT2E6ZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm4gZTt2YXIgaSxuPXt9O2ZvcihpIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShpKSYmKG5baV09dChlW2ldLGksZSkpO3JldHVybiBufSxGYTpmdW5jdGlvbihlKXtmb3IoO2UuZmlyc3RDaGlsZDspZC5yZW1vdmVOb2RlKGUuZmlyc3RDaGlsZCl9LGVjOmZ1bmN0aW9uKGUpe2U9ZC5hLlIoZSk7Zm9yKHZhciB0PWkuY3JlYXRlRWxlbWVudCgiZGl2Iiksbj0wLHI9ZS5sZW5ndGg7cj5uO24rKyl0LmFwcGVuZENoaWxkKGQuTShlW25dKSk7cmV0dXJuIHR9LGxiOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBpPTAsbj1lLmxlbmd0aCxyPVtdO24+aTtpKyspe3ZhciBvPWVbaV0uY2xvbmVOb2RlKCEwKTtyLnB1c2godD9kLk0obyk6byl9cmV0dXJuIHJ9LFU6ZnVuY3Rpb24oZSx0KXtpZihkLmEuRmEoZSksdClmb3IodmFyIGk9MCxuPXQubGVuZ3RoO24+aTtpKyspZS5hcHBlbmRDaGlsZCh0W2ldKX0sQmI6ZnVuY3Rpb24oZSx0KXt2YXIgaT1lLm5vZGVUeXBlP1tlXTplO2lmKDA8aS5sZW5ndGgpe2Zvcih2YXIgbj1pWzBdLHI9bi5wYXJlbnROb2RlLG89MCxhPXQubGVuZ3RoO2E+bztvKyspci5pbnNlcnRCZWZvcmUodFtvXSxuKTtmb3Iobz0wLGE9aS5sZW5ndGg7YT5vO28rKylkLnJlbW92ZU5vZGUoaVtvXSl9fSxlYTpmdW5jdGlvbihlLHQpe2lmKGUubGVuZ3RoKXtmb3IodD04PT09dC5ub2RlVHlwZSYmdC5wYXJlbnROb2RlfHx0O2UubGVuZ3RoJiZlWzBdLnBhcmVudE5vZGUhPT10OyllLnNoaWZ0KCk7aWYoMTxlLmxlbmd0aCl7dmFyIGk9ZVswXSxuPWVbZS5sZW5ndGgtMV07Zm9yKGUubGVuZ3RoPTA7aSE9PW47KWlmKGUucHVzaChpKSxpPWkubmV4dFNpYmxpbmcsIWkpcmV0dXJuO2UucHVzaChuKX19cmV0dXJuIGV9LERiOmZ1bmN0aW9uKGUsdCl7Nz5mP2Uuc2V0QXR0cmlidXRlKCJzZWxlY3RlZCIsdCk6ZS5zZWxlY3RlZD10fSx0YTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXR8fHQ9PT1lPyIiOnQudHJpbT90LnRyaW0oKTp0LnRvU3RyaW5nKCkucmVwbGFjZSgvXltcc1x4YTBdK3xbXHNceGEwXSskL2csIiIpfSxvYzpmdW5jdGlvbihlLHQpe2Zvcih2YXIgaT1bXSxuPShlfHwiIikuc3BsaXQodCkscj0wLG89bi5sZW5ndGg7bz5yO3IrKyl7dmFyIGE9ZC5hLnRhKG5bcl0pOyIiIT09YSYmaS5wdXNoKGEpfXJldHVybiBpfSxrYzpmdW5jdGlvbihlLHQpe3JldHVybiBlPWV8fCIiLHQubGVuZ3RoPmUubGVuZ3RoPyExOmUuc3Vic3RyaW5nKDAsdC5sZW5ndGgpPT09dH0sU2I6ZnVuY3Rpb24oZSx0KXtpZihlPT09dClyZXR1cm4hMDtpZigxMT09PWUubm9kZVR5cGUpcmV0dXJuITE7aWYodC5jb250YWlucylyZXR1cm4gdC5jb250YWlucygzPT09ZS5ub2RlVHlwZT9lLnBhcmVudE5vZGU6ZSk7aWYodC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbilyZXR1cm4gMTY9PSgxNiZ0LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGUpKTtmb3IoO2UmJmUhPXQ7KWU9ZS5wYXJlbnROb2RlO3JldHVybiEhZX0sRWE6ZnVuY3Rpb24oZSl7cmV0dXJuIGQuYS5TYihlLGUub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpfSxlYjpmdW5jdGlvbihlKXtyZXR1cm4hIWQuYS5oYihlLGQuYS5FYSl9LEI6ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUudGFnTmFtZSYmZS50YWdOYW1lLnRvTG93ZXJDYXNlKCl9LHE6ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWYmJm1bdF07aWYoIW4mJnIpcihlKS5iaW5kKHQsaSk7ZWxzZSBpZihufHwiZnVuY3Rpb24iIT10eXBlb2YgZS5hZGRFdmVudExpc3RlbmVyKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIGUuYXR0YWNoRXZlbnQpdGhyb3cgRXJyb3IoIkJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGFkZEV2ZW50TGlzdGVuZXIgb3IgYXR0YWNoRXZlbnQiKTt2YXIgbz1mdW5jdGlvbih0KXtpLmNhbGwoZSx0KX0sYT0ib24iK3Q7ZS5hdHRhY2hFdmVudChhLG8pLGQuYS51LmphKGUsZnVuY3Rpb24oKXtlLmRldGFjaEV2ZW50KGEsbyl9KX1lbHNlIGUuYWRkRXZlbnRMaXN0ZW5lcih0LGksITEpfSxoYTpmdW5jdGlvbihlLG4pe2lmKCFlfHwhZS5ub2RlVHlwZSl0aHJvdyBFcnJvcigiZWxlbWVudCBtdXN0IGJlIGEgRE9NIG5vZGUgd2hlbiBjYWxsaW5nIHRyaWdnZXJFdmVudCIpO3ZhciBvO2lmKCJpbnB1dCI9PT1kLmEuQihlKSYmZS50eXBlJiYiY2xpY2siPT1uLnRvTG93ZXJDYXNlKCk/KG89ZS50eXBlLG89ImNoZWNrYm94Ij09b3x8InJhZGlvIj09byk6bz0hMSxyJiYhbylyKGUpLnRyaWdnZXIobik7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgaS5jcmVhdGVFdmVudCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUuZGlzcGF0Y2hFdmVudCl0aHJvdyBFcnJvcigiVGhlIHN1cHBsaWVkIGVsZW1lbnQgZG9lc24ndCBzdXBwb3J0IGRpc3BhdGNoRXZlbnQiKTtvPWkuY3JlYXRlRXZlbnQoaFtuXXx8IkhUTUxFdmVudHMiKSxvLmluaXRFdmVudChuLCEwLCEwLHQsMCwwLDAsMCwwLCExLCExLCExLCExLDAsZSksZS5kaXNwYXRjaEV2ZW50KG8pfWVsc2UgaWYobyYmZS5jbGljayllLmNsaWNrKCk7ZWxzZXtpZigidW5kZWZpbmVkIj09dHlwZW9mIGUuZmlyZUV2ZW50KXRocm93IEVycm9yKCJCcm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCB0cmlnZ2VyaW5nIGV2ZW50cyIpO2UuZmlyZUV2ZW50KCJvbiIrbil9fSxjOmZ1bmN0aW9uKGUpe3JldHVybiBkLnYoZSk/ZSgpOmV9LFNhOmZ1bmN0aW9uKGUpe3JldHVybiBkLnYoZSk/ZS5vKCk6ZX0sdWE6ZnVuY3Rpb24oZSx0LGkpe2lmKHQpe3ZhciBuPS9cUysvZyxyPWUuY2xhc3NOYW1lLm1hdGNoKG4pfHxbXTtkLmEucih0Lm1hdGNoKG4pLGZ1bmN0aW9uKGUpe2QuYS5ZKHIsZSxpKX0pLGUuY2xhc3NOYW1lPXIuam9pbigiICIpfX0sWGE6ZnVuY3Rpb24odCxpKXt2YXIgbj1kLmEuYyhpKTsobnVsbD09PW58fG49PT1lKSYmKG49IiIpO3ZhciByPWQuZS5maXJzdENoaWxkKHQpOyFyfHwzIT1yLm5vZGVUeXBlfHxkLmUubmV4dFNpYmxpbmcocik/ZC5lLlUodCxbdC5vd25lckRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pXSk6ci5kYXRhPW4sZC5hLlZiKHQpfSxDYjpmdW5jdGlvbihlLHQpe2lmKGUubmFtZT10LDc+PWYpdHJ5e2UubWVyZ2VBdHRyaWJ1dGVzKGkuY3JlYXRlRWxlbWVudCgiPGlucHV0IG5hbWU9JyIrZS5uYW1lKyInLz4iKSwhMSl9Y2F0Y2gobil7fX0sVmI6ZnVuY3Rpb24oZSl7Zj49OSYmKGU9MT09ZS5ub2RlVHlwZT9lOmUucGFyZW50Tm9kZSxlLnN0eWxlJiYoZS5zdHlsZS56b29tPWUuc3R5bGUuem9vbSkpfSxUYjpmdW5jdGlvbihlKXtpZihmKXt2YXIgdD1lLnN0eWxlLndpZHRoO2Uuc3R5bGUud2lkdGg9MCxlLnN0eWxlLndpZHRoPXR9fSxpYzpmdW5jdGlvbihlLHQpe2U9ZC5hLmMoZSksdD1kLmEuYyh0KTtmb3IodmFyIGk9W10sbj1lO3Q+PW47bisrKWkucHVzaChuKTtyZXR1cm4gaX0sUjpmdW5jdGlvbihlKXtmb3IodmFyIHQ9W10saT0wLG49ZS5sZW5ndGg7bj5pO2krKyl0LnB1c2goZVtpXSk7cmV0dXJuIHR9LG1jOjY9PT1mLG5jOjc9PT1mLG9hOmYsb2I6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9ZC5hLlIoZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaW5wdXQiKSkuY29uY2F0KGQuYS5SKGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRleHRhcmVhIikpKSxuPSJzdHJpbmciPT10eXBlb2YgdD9mdW5jdGlvbihlKXtyZXR1cm4gZS5uYW1lPT09dH06ZnVuY3Rpb24oZSl7cmV0dXJuIHQudGVzdChlLm5hbWUpfSxyPVtdLG89aS5sZW5ndGgtMTtvPj0wO28tLSluKGlbb10pJiZyLnB1c2goaVtvXSk7cmV0dXJuIHJ9LGZjOmZ1bmN0aW9uKGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgZSYmKGU9ZC5hLnRhKGUpKT9vJiZvLnBhcnNlP28ucGFyc2UoZSk6bmV3IEZ1bmN0aW9uKCJyZXR1cm4gIitlKSgpOm51bGx9LFlhOmZ1bmN0aW9uKGUsdCxpKXtpZighb3x8IW8uc3RyaW5naWZ5KXRocm93IEVycm9yKCJDYW5ub3QgZmluZCBKU09OLnN0cmluZ2lmeSgpLiBTb21lIGJyb3dzZXJzIChlLmcuLCBJRSA8IDgpIGRvbid0IHN1cHBvcnQgaXQgbmF0aXZlbHksIGJ1dCB5b3UgY2FuIG92ZXJjb21lIHRoaXMgYnkgYWRkaW5nIGEgc2NyaXB0IHJlZmVyZW5jZSB0byBqc29uMi5qcywgZG93bmxvYWRhYmxlIGZyb20gaHR0cDovL3d3dy5qc29uLm9yZy9qc29uMi5qcyIpO3JldHVybiBvLnN0cmluZ2lmeShkLmEuYyhlKSx0LGkpfSxnYzpmdW5jdGlvbihlLHQsbil7bj1ufHx7fTt2YXIgcj1uLnBhcmFtc3x8e30sbz1uLmluY2x1ZGVGaWVsZHN8fHRoaXMubWIscz1lO2lmKCJvYmplY3QiPT10eXBlb2YgZSYmImZvcm0iPT09ZC5hLkIoZSkpZm9yKHZhciBzPWUuYWN0aW9uLGw9by5sZW5ndGgtMTtsPj0wO2wtLSlmb3IodmFyIHU9ZC5hLm9iKGUsb1tsXSksYz11Lmxlbmd0aC0xO2M+PTA7Yy0tKXJbdVtjXS5uYW1lXT11W2NdLnZhbHVlO3Q9ZC5hLmModCk7dmFyIGg9aS5jcmVhdGVFbGVtZW50KCJmb3JtIik7aC5zdHlsZS5kaXNwbGF5PSJub25lIixoLmFjdGlvbj1zLGgubWV0aG9kPSJwb3N0Ijtmb3IodmFyIG0gaW4gdCllPWkuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxlLm5hbWU9bSxlLnZhbHVlPWQuYS5ZYShkLmEuYyh0W21dKSksaC5hcHBlbmRDaGlsZChlKTthKHIsZnVuY3Rpb24oZSx0KXt2YXIgbj1pLmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7bi5uYW1lPWUsbi52YWx1ZT10LGguYXBwZW5kQ2hpbGQobil9KSxpLmJvZHkuYXBwZW5kQ2hpbGQoaCksbi5zdWJtaXR0ZXI/bi5zdWJtaXR0ZXIoaCk6aC5zdWJtaXQoKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpfSwwKX19fSgpLGQuYigidXRpbHMiLGQuYSksZC5iKCJ1dGlscy5hcnJheUZvckVhY2giLGQuYS5yKSxkLmIoInV0aWxzLmFycmF5Rmlyc3QiLGQuYS5oYiksZC5iKCJ1dGlscy5hcnJheUZpbHRlciIsZC5hLmxhKSxkLmIoInV0aWxzLmFycmF5R2V0RGlzdGluY3RWYWx1ZXMiLGQuYS5pYiksZC5iKCJ1dGlscy5hcnJheUluZGV4T2YiLGQuYS5sKSxkLmIoInV0aWxzLmFycmF5TWFwIixkLmEueWEpLGQuYigidXRpbHMuYXJyYXlQdXNoQWxsIixkLmEuJCksZC5iKCJ1dGlscy5hcnJheVJlbW92ZUl0ZW0iLGQuYS5tYSksZC5iKCJ1dGlscy5leHRlbmQiLGQuYS5leHRlbmQpLGQuYigidXRpbHMuZmllbGRzSW5jbHVkZWRXaXRoSnNvblBvc3QiLGQuYS5tYiksZC5iKCJ1dGlscy5nZXRGb3JtRmllbGRzIixkLmEub2IpLGQuYigidXRpbHMucGVla09ic2VydmFibGUiLGQuYS5TYSksZC5iKCJ1dGlscy5wb3N0SnNvbiIsZC5hLmdjKSxkLmIoInV0aWxzLnBhcnNlSnNvbiIsZC5hLmZjKSxkLmIoInV0aWxzLnJlZ2lzdGVyRXZlbnRIYW5kbGVyIixkLmEucSksZC5iKCJ1dGlscy5zdHJpbmdpZnlKc29uIixkLmEuWWEpLGQuYigidXRpbHMucmFuZ2UiLGQuYS5pYyksZC5iKCJ1dGlscy50b2dnbGVEb21Ob2RlQ3NzQ2xhc3MiLGQuYS51YSksZC5iKCJ1dGlscy50cmlnZ2VyRXZlbnQiLGQuYS5oYSksZC5iKCJ1dGlscy51bndyYXBPYnNlcnZhYmxlIixkLmEuYyksZC5iKCJ1dGlscy5vYmplY3RGb3JFYWNoIixkLmEuQSksZC5iKCJ1dGlscy5hZGRPclJlbW92ZUl0ZW0iLGQuYS5ZKSxkLmIoInVud3JhcCIsZC5hLmMpLEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIGU9aS5zaGlmdCgpLGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkoZSxpLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSl9fSksZC5hLmY9bmV3IGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LG8pe3ZhciBhPXRbbl07aWYoIWF8fCJudWxsIj09PWF8fCFyW2FdKXtpZighbylyZXR1cm4gZTthPXRbbl09ImtvIitpKyssclthXT17fX1yZXR1cm4gclthXX12YXIgaT0wLG49Il9fa29fXyIrKG5ldyBEYXRlKS5nZXRUaW1lKCkscj17fTtyZXR1cm57Z2V0OmZ1bmN0aW9uKGksbil7dmFyIHI9dChpLCExKTtyZXR1cm4gcj09PWU/ZTpyW25dfSxzZXQ6ZnVuY3Rpb24oaSxuLHIpeyhyIT09ZXx8dChpLCExKSE9PWUpJiYodChpLCEwKVtuXT1yKX0sY2xlYXI6ZnVuY3Rpb24oZSl7dmFyIHQ9ZVtuXTtyZXR1cm4gdD8oZGVsZXRlIHJbdF0sZVtuXT1udWxsLCEwKTohMX0sTDpmdW5jdGlvbigpe3JldHVybiBpKysgK259fX0sZC5iKCJ1dGlscy5kb21EYXRhIixkLmEuZiksZC5iKCJ1dGlscy5kb21EYXRhLmNsZWFyIixkLmEuZi5jbGVhciksZC5hLnU9bmV3IGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGkpe3ZhciByPWQuYS5mLmdldCh0LG4pO3JldHVybiByPT09ZSYmaSYmKHI9W10sZC5hLmYuc2V0KHQsbixyKSkscn1mdW5jdGlvbiBpKGUpe3ZhciBuPXQoZSwhMSk7aWYobilmb3IodmFyIG49bi5zbGljZSgwKSxyPTA7cjxuLmxlbmd0aDtyKyspbltyXShlKTtpZihkLmEuZi5jbGVhcihlKSxkLmEudS5jbGVhbkV4dGVybmFsRGF0YShlKSxhW2Uubm9kZVR5cGVdKWZvcihuPWUuZmlyc3RDaGlsZDtlPW47KW49ZS5uZXh0U2libGluZyw4PT09ZS5ub2RlVHlwZSYmaShlKX12YXIgbj1kLmEuZi5MKCksbz17MTohMCw4OiEwLDk6ITB9LGE9ezE6ITAsOTohMH07cmV0dXJue2phOmZ1bmN0aW9uKGUsaSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGkpdGhyb3cgRXJyb3IoIkNhbGxiYWNrIG11c3QgYmUgYSBmdW5jdGlvbiIpO3QoZSwhMCkucHVzaChpKX0sQWI6ZnVuY3Rpb24oaSxyKXt2YXIgbz10KGksITEpO28mJihkLmEubWEobyxyKSwwPT1vLmxlbmd0aCYmZC5hLmYuc2V0KGksbixlKSl9LE06ZnVuY3Rpb24oZSl7aWYob1tlLm5vZGVUeXBlXSYmKGkoZSksYVtlLm5vZGVUeXBlXSkpe3ZhciB0PVtdO2QuYS4kKHQsZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpKTtmb3IodmFyIG49MCxyPXQubGVuZ3RoO3I+bjtuKyspaSh0W25dKX1yZXR1cm4gZX0scmVtb3ZlTm9kZTpmdW5jdGlvbihlKXtkLk0oZSksZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9LGNsZWFuRXh0ZXJuYWxEYXRhOmZ1bmN0aW9uKGUpe3ImJiJmdW5jdGlvbiI9PXR5cGVvZiByLmNsZWFuRGF0YSYmci5jbGVhbkRhdGEoW2VdKX19fSxkLk09ZC5hLnUuTSxkLnJlbW92ZU5vZGU9ZC5hLnUucmVtb3ZlTm9kZSxkLmIoImNsZWFuTm9kZSIsZC5NKSxkLmIoInJlbW92ZU5vZGUiLGQucmVtb3ZlTm9kZSksZC5iKCJ1dGlscy5kb21Ob2RlRGlzcG9zYWwiLGQuYS51KSxkLmIoInV0aWxzLmRvbU5vZGVEaXNwb3NhbC5hZGREaXNwb3NlQ2FsbGJhY2siLGQuYS51LmphKSxkLmIoInV0aWxzLmRvbU5vZGVEaXNwb3NhbC5yZW1vdmVEaXNwb3NlQ2FsbGJhY2siLGQuYS51LkFiKSxmdW5jdGlvbigpe2QuYS5RYT1mdW5jdGlvbihlKXt2YXIgbjtpZihyKXtpZihyLnBhcnNlSFRNTCluPXIucGFyc2VIVE1MKGUpfHxbXTtlbHNlIGlmKChuPXIuY2xlYW4oW2VdKSkmJm5bMF0pe2ZvcihlPW5bMF07ZS5wYXJlbnROb2RlJiYxMSE9PWUucGFyZW50Tm9kZS5ub2RlVHlwZTspZT1lLnBhcmVudE5vZGU7ZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9fWVsc2V7dmFyIG89ZC5hLnRhKGUpLnRvTG93ZXJDYXNlKCk7Zm9yKG49aS5jcmVhdGVFbGVtZW50KCJkaXYiKSxvPW8ubWF0Y2goL148KHRoZWFkfHRib2R5fHRmb290KS8pJiZbMSwiPHRhYmxlPiIsIjwvdGFibGU+Il18fCFvLmluZGV4T2YoIjx0ciIpJiZbMiwiPHRhYmxlPjx0Ym9keT4iLCI8L3Rib2R5PjwvdGFibGU+Il18fCghby5pbmRleE9mKCI8dGQiKXx8IW8uaW5kZXhPZigiPHRoIikpJiZbMywiPHRhYmxlPjx0Ym9keT48dHI+IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il18fFswLCIiLCIiXSxlPSJpZ25vcmVkPGRpdj4iK29bMV0rZStvWzJdKyI8L2Rpdj4iLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmlubmVyU2hpdj9uLmFwcGVuZENoaWxkKHQuaW5uZXJTaGl2KGUpKTpuLmlubmVySFRNTD1lO29bMF0tLTspbj1uLmxhc3RDaGlsZDtuPWQuYS5SKG4ubGFzdENoaWxkLmNoaWxkTm9kZXMpfXJldHVybiBufSxkLmEuVmE9ZnVuY3Rpb24odCxpKXtpZihkLmEuRmEodCksaT1kLmEuYyhpKSxudWxsIT09aSYmaSE9PWUpaWYoInN0cmluZyIhPXR5cGVvZiBpJiYoaT1pLnRvU3RyaW5nKCkpLHIpcih0KS5odG1sKGkpO2Vsc2UgZm9yKHZhciBuPWQuYS5RYShpKSxvPTA7bzxuLmxlbmd0aDtvKyspdC5hcHBlbmRDaGlsZChuW29dKX19KCksZC5iKCJ1dGlscy5wYXJzZUh0bWxGcmFnbWVudCIsZC5hLlFhKSxkLmIoInV0aWxzLnNldEh0bWwiLGQuYS5WYSksZC53PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlLGkpe2lmKGUpaWYoOD09ZS5ub2RlVHlwZSl7dmFyIG49ZC53LnhiKGUubm9kZVZhbHVlKTtudWxsIT1uJiZpLnB1c2goe1JiOmUsY2M6bn0pfWVsc2UgaWYoMT09ZS5ub2RlVHlwZSlmb3IodmFyIG49MCxyPWUuY2hpbGROb2RlcyxvPXIubGVuZ3RoO28+bjtuKyspdChyW25dLGkpfXZhciBpPXt9O3JldHVybntOYTpmdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBFcnJvcigiWW91IGNhbiBvbmx5IHBhc3MgYSBmdW5jdGlvbiB0byBrby5tZW1vaXphdGlvbi5tZW1vaXplKCkiKTt2YXIgdD0oMHw0Mjk0OTY3Mjk2KigxK01hdGgucmFuZG9tKCkpKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDEpKygwfDQyOTQ5NjcyOTYqKDErTWF0aC5yYW5kb20oKSkpLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7cmV0dXJuIGlbdF09ZSwiPCEtLVtrb19tZW1vOiIrdCsiXS0tPiJ9LEhiOmZ1bmN0aW9uKHQsbil7dmFyIHI9aVt0XTtpZihyPT09ZSl0aHJvdyBFcnJvcigiQ291bGRuJ3QgZmluZCBhbnkgbWVtbyB3aXRoIElEICIrdCsiLiBQZXJoYXBzIGl0J3MgYWxyZWFkeSBiZWVuIHVubWVtb2l6ZWQuIik7dHJ5e3JldHVybiByLmFwcGx5KG51bGwsbnx8W10pLCEwfWZpbmFsbHl7ZGVsZXRlIGlbdF19fSxJYjpmdW5jdGlvbihlLGkpe3ZhciBuPVtdO3QoZSxuKTtmb3IodmFyIHI9MCxvPW4ubGVuZ3RoO28+cjtyKyspe3ZhciBhPW5bcl0uUmIscz1bYV07aSYmZC5hLiQocyxpKSxkLncuSGIobltyXS5jYyxzKSxhLm5vZGVWYWx1ZT0iIixhLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKX19LHhiOmZ1bmN0aW9uKGUpe3JldHVybihlPWUubWF0Y2goL15cW2tvX21lbW9cOiguKj8pXF0kLykpP2VbMV06bnVsbH19fSgpLGQuYigibWVtb2l6YXRpb24iLGQudyksZC5iKCJtZW1vaXphdGlvbi5tZW1vaXplIixkLncuTmEpLGQuYigibWVtb2l6YXRpb24udW5tZW1vaXplIixkLncuSGIpLGQuYigibWVtb2l6YXRpb24ucGFyc2VNZW1vVGV4dCIsZC53LnhiKSxkLmIoIm1lbW9pemF0aW9uLnVubWVtb2l6ZURvbU5vZGVBbmREZXNjZW5kYW50cyIsZC53LkliKSxkLkdhPXt0aHJvdHRsZTpmdW5jdGlvbihlLHQpe2UudGhyb3R0bGVFdmFsdWF0aW9uPXQ7dmFyIGk9bnVsbDtyZXR1cm4gZC5oKHtyZWFkOmUsd3JpdGU6ZnVuY3Rpb24obil7Y2xlYXJUaW1lb3V0KGkpLGk9c2V0VGltZW91dChmdW5jdGlvbigpe2Uobil9LHQpfX0pfSxyYXRlTGltaXQ6ZnVuY3Rpb24oZSx0KXt2YXIgaSxuLHI7Im51bWJlciI9PXR5cGVvZiB0P2k9dDooaT10LnRpbWVvdXQsbj10Lm1ldGhvZCkscj0ibm90aWZ5V2hlbkNoYW5nZXNTdG9wIj09bj91OmwsZS5NYShmdW5jdGlvbihlKXtyZXR1cm4gcihlLGkpfSl9LG5vdGlmeTpmdW5jdGlvbihlLHQpe2UuZXF1YWxpdHlDb21wYXJlcj0iYWx3YXlzIj09dD9udWxsOnMKfX07dmFyIGg9e3VuZGVmaW5lZDoxLCJib29sZWFuIjoxLG51bWJlcjoxLHN0cmluZzoxfTtkLmIoImV4dGVuZGVycyIsZC5HYSksZC5GYj1mdW5jdGlvbihlLHQsaSl7dGhpcy50YXJnZXQ9ZSx0aGlzLnphPXQsdGhpcy5RYj1pLHRoaXMuc2I9ITEsZC5zKHRoaXMsImRpc3Bvc2UiLHRoaXMuRil9LGQuRmIucHJvdG90eXBlLkY9ZnVuY3Rpb24oKXt0aGlzLnNiPSEwLHRoaXMuUWIoKX0sZC5OPWZ1bmN0aW9uKCl7ZC5hLnNhKHRoaXMsZC5OLmZuKSx0aGlzLkg9e319O3ZhciBtPSJjaGFuZ2UiO2E9e1Y6ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXRoaXM7aT1pfHxtO3ZhciByPW5ldyBkLkZiKG4sdD9lLmJpbmQodCk6ZSxmdW5jdGlvbigpe2QuYS5tYShuLkhbaV0scil9KTtyZXR1cm4gbi5vJiZuLm8oKSxuLkhbaV18fChuLkhbaV09W10pLG4uSFtpXS5wdXNoKHIpLHJ9LG5vdGlmeVN1YnNjcmliZXJzOmZ1bmN0aW9uKGUsdCl7aWYodD10fHxtLHRoaXMucWIodCkpdHJ5e2Quay5qYigpO2Zvcih2YXIgaSxuPXRoaXMuSFt0XS5zbGljZSgwKSxyPTA7aT1uW3JdOysrcilpLnNifHxpLnphKGUpfWZpbmFsbHl7ZC5rLmVuZCgpfX0sTWE6ZnVuY3Rpb24oZSl7dmFyIHQsaSxuLHI9dGhpcyxvPWQudihyKTtyLmlhfHwoci5pYT1yLm5vdGlmeVN1YnNjcmliZXJzLHIubm90aWZ5U3Vic2NyaWJlcnM9ZnVuY3Rpb24oZSx0KXt0JiZ0IT09bT8iYmVmb3JlQ2hhbmdlIj09PXQ/ci5iYihlKTpyLmlhKGUsdCk6ci5jYihlKX0pO3ZhciBhPWUoZnVuY3Rpb24oKXtvJiZuPT09ciYmKG49cigpKSx0PSExLHIuS2EoaSxuKSYmci5pYShpPW4pfSk7ci5jYj1mdW5jdGlvbihlKXt0PSEwLG49ZSxhKCl9LHIuYmI9ZnVuY3Rpb24oZSl7dHx8KGk9ZSxyLmlhKGUsImJlZm9yZUNoYW5nZSIpKX19LHFiOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLkhbZV0mJnRoaXMuSFtlXS5sZW5ndGh9LFdiOmZ1bmN0aW9uKCl7dmFyIGU9MDtyZXR1cm4gZC5hLkEodGhpcy5ILGZ1bmN0aW9uKHQsaSl7ZSs9aS5sZW5ndGh9KSxlfSxLYTpmdW5jdGlvbihlLHQpe3JldHVybiF0aGlzLmVxdWFsaXR5Q29tcGFyZXJ8fCF0aGlzLmVxdWFsaXR5Q29tcGFyZXIoZSx0KX0sZXh0ZW5kOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIGUmJmQuYS5BKGUsZnVuY3Rpb24oZSxpKXt2YXIgbj1kLkdhW2VdOyJmdW5jdGlvbiI9PXR5cGVvZiBuJiYodD1uKHQsaSl8fHQpfSksdH19LGQucyhhLCJzdWJzY3JpYmUiLGEuViksZC5zKGEsImV4dGVuZCIsYS5leHRlbmQpLGQucyhhLCJnZXRTdWJzY3JpcHRpb25zQ291bnQiLGEuV2IpLGQuYS5uYSYmZC5hLnJhKGEsRnVuY3Rpb24ucHJvdG90eXBlKSxkLk4uZm49YSxkLnRiPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT1lJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5WJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5ub3RpZnlTdWJzY3JpYmVyc30sZC5iKCJzdWJzY3JpYmFibGUiLGQuTiksZC5iKCJpc1N1YnNjcmliYWJsZSIsZC50YiksZC5jYT1kLms9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe24ucHVzaChpKSxpPWV9ZnVuY3Rpb24gdCgpe2k9bi5wb3AoKX12YXIgaSxuPVtdLHI9MDtyZXR1cm57amI6ZSxlbmQ6dCx6YjpmdW5jdGlvbihlKXtpZihpKXtpZighZC50YihlKSl0aHJvdyBFcnJvcigiT25seSBzdWJzY3JpYmFibGUgdGhpbmdzIGNhbiBhY3QgYXMgZGVwZW5kZW5jaWVzIik7aS56YShlLGUuS2J8fChlLktiPSsrcikpfX0sdDpmdW5jdGlvbihpLG4scil7dHJ5e3JldHVybiBlKCksaS5hcHBseShuLHJ8fFtdKX1maW5hbGx5e3QoKX19LGZhOmZ1bmN0aW9uKCl7cmV0dXJuIGk/aS5iYS5mYSgpOnZvaWQgMH0scGE6ZnVuY3Rpb24oKXtyZXR1cm4gaT9pLnBhOnZvaWQgMH19fSgpLGQuYigiY29tcHV0ZWRDb250ZXh0IixkLmNhKSxkLmIoImNvbXB1dGVkQ29udGV4dC5nZXREZXBlbmRlbmNpZXNDb3VudCIsZC5jYS5mYSksZC5iKCJjb21wdXRlZENvbnRleHQuaXNJbml0aWFsIixkLmNhLnBhKSxkLm09ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCgpe3JldHVybiAwPGFyZ3VtZW50cy5sZW5ndGg/KHQuS2EoaSxhcmd1bWVudHNbMF0pJiYodC5QKCksaT1hcmd1bWVudHNbMF0sdC5PKCkpLHRoaXMpOihkLmsuemIodCksaSl9dmFyIGk9ZTtyZXR1cm4gZC5OLmNhbGwodCksZC5hLnNhKHQsZC5tLmZuKSx0Lm89ZnVuY3Rpb24oKXtyZXR1cm4gaX0sdC5PPWZ1bmN0aW9uKCl7dC5ub3RpZnlTdWJzY3JpYmVycyhpKX0sdC5QPWZ1bmN0aW9uKCl7dC5ub3RpZnlTdWJzY3JpYmVycyhpLCJiZWZvcmVDaGFuZ2UiKX0sZC5zKHQsInBlZWsiLHQubyksZC5zKHQsInZhbHVlSGFzTXV0YXRlZCIsdC5PKSxkLnModCwidmFsdWVXaWxsTXV0YXRlIix0LlApLHR9LGQubS5mbj17ZXF1YWxpdHlDb21wYXJlcjpzfTt2YXIgZj1kLm0uaGM9Il9fa29fcHJvdG9fXyI7ZC5tLmZuW2ZdPWQubSxkLmEubmEmJmQuYS5yYShkLm0uZm4sZC5OLmZuKSxkLkhhPWZ1bmN0aW9uKHQsaSl7cmV0dXJuIG51bGw9PT10fHx0PT09ZXx8dFtmXT09PWU/ITE6dFtmXT09PWk/ITA6ZC5IYSh0W2ZdLGkpfSxkLnY9ZnVuY3Rpb24oZSl7cmV0dXJuIGQuSGEoZSxkLm0pfSxkLnViPWZ1bmN0aW9uKGUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBlJiZlW2ZdPT09ZC5tfHwiZnVuY3Rpb24iPT10eXBlb2YgZSYmZVtmXT09PWQuaCYmZS5ZYj8hMDohMX0sZC5iKCJvYnNlcnZhYmxlIixkLm0pLGQuYigiaXNPYnNlcnZhYmxlIixkLnYpLGQuYigiaXNXcml0ZWFibGVPYnNlcnZhYmxlIixkLnViKSxkLlQ9ZnVuY3Rpb24oZSl7aWYoZT1lfHxbXSwib2JqZWN0IiE9dHlwZW9mIGV8fCEoImxlbmd0aCJpbiBlKSl0aHJvdyBFcnJvcigiVGhlIGFyZ3VtZW50IHBhc3NlZCB3aGVuIGluaXRpYWxpemluZyBhbiBvYnNlcnZhYmxlIGFycmF5IG11c3QgYmUgYW4gYXJyYXksIG9yIG51bGwsIG9yIHVuZGVmaW5lZC4iKTtyZXR1cm4gZT1kLm0oZSksZC5hLnNhKGUsZC5ULmZuKSxlLmV4dGVuZCh7dHJhY2tBcnJheUNoYW5nZXM6ITB9KX0sZC5ULmZuPXtyZW1vdmU6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMubygpLGk9W10sbj0iZnVuY3Rpb24iIT10eXBlb2YgZXx8ZC52KGUpP2Z1bmN0aW9uKHQpe3JldHVybiB0PT09ZX06ZSxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07bihvKSYmKDA9PT1pLmxlbmd0aCYmdGhpcy5QKCksaS5wdXNoKG8pLHQuc3BsaWNlKHIsMSksci0tKX1yZXR1cm4gaS5sZW5ndGgmJnRoaXMuTygpLGl9LHJlbW92ZUFsbDpmdW5jdGlvbih0KXtpZih0PT09ZSl7dmFyIGk9dGhpcy5vKCksbj1pLnNsaWNlKDApO3JldHVybiB0aGlzLlAoKSxpLnNwbGljZSgwLGkubGVuZ3RoKSx0aGlzLk8oKSxufXJldHVybiB0P3RoaXMucmVtb3ZlKGZ1bmN0aW9uKGUpe3JldHVybiAwPD1kLmEubCh0LGUpfSk6W119LGRlc3Ryb3k6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5vKCksaT0iZnVuY3Rpb24iIT10eXBlb2YgZXx8ZC52KGUpP2Z1bmN0aW9uKHQpe3JldHVybiB0PT09ZX06ZTt0aGlzLlAoKTtmb3IodmFyIG49dC5sZW5ndGgtMTtuPj0wO24tLSlpKHRbbl0pJiYodFtuXS5fZGVzdHJveT0hMCk7dGhpcy5PKCl9LGRlc3Ryb3lBbGw6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lP3RoaXMuZGVzdHJveShmdW5jdGlvbigpe3JldHVybiEwfSk6dD90aGlzLmRlc3Ryb3koZnVuY3Rpb24oZSl7cmV0dXJuIDA8PWQuYS5sKHQsZSl9KTpbXX0saW5kZXhPZjpmdW5jdGlvbihlKXt2YXIgdD10aGlzKCk7cmV0dXJuIGQuYS5sKHQsZSl9LHJlcGxhY2U6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLmluZGV4T2YoZSk7aT49MCYmKHRoaXMuUCgpLHRoaXMubygpW2ldPXQsdGhpcy5PKCkpfX0sZC5hLnIoInBvcCBwdXNoIHJldmVyc2Ugc2hpZnQgc29ydCBzcGxpY2UgdW5zaGlmdCIuc3BsaXQoIiAiKSxmdW5jdGlvbihlKXtkLlQuZm5bZV09ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm8oKTtyZXR1cm4gdGhpcy5QKCksdGhpcy5rYih0LGUsYXJndW1lbnRzKSx0PXRbZV0uYXBwbHkodCxhcmd1bWVudHMpLHRoaXMuTygpLHR9fSksZC5hLnIoWyJzbGljZSJdLGZ1bmN0aW9uKGUpe2QuVC5mbltlXT1mdW5jdGlvbigpe3ZhciB0PXRoaXMoKTtyZXR1cm4gdFtlXS5hcHBseSh0LGFyZ3VtZW50cyl9fSksZC5hLm5hJiZkLmEucmEoZC5ULmZuLGQubS5mbiksZC5iKCJvYnNlcnZhYmxlQXJyYXkiLGQuVCk7dmFyIHA9ImFycmF5Q2hhbmdlIjtkLkdhLnRyYWNrQXJyYXlDaGFuZ2VzPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtpZighaSl7aT0hMDt2YXIgdD1lLm5vdGlmeVN1YnNjcmliZXJzO2Uubm90aWZ5U3Vic2NyaWJlcnM9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gaSYmaSE9PW18fCsrcix0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07dmFyIG89W10uY29uY2F0KGUubygpfHxbXSk7bj1udWxsLGUuVihmdW5jdGlvbih0KXtpZih0PVtdLmNvbmNhdCh0fHxbXSksZS5xYihwKSl7dmFyIGk7KCFufHxyPjEpJiYobj1kLmEuQWEobyx0LHtzcGFyc2U6ITB9KSksaT1uLGkubGVuZ3RoJiZlLm5vdGlmeVN1YnNjcmliZXJzKGkscCl9bz10LG49bnVsbCxyPTB9KX19aWYoIWUua2Ipe3ZhciBpPSExLG49bnVsbCxyPTAsbz1lLlY7ZS5WPWUuc3Vic2NyaWJlPWZ1bmN0aW9uKGUsaSxuKXtyZXR1cm4gbj09PXAmJnQoKSxvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZS5rYj1mdW5jdGlvbihlLHQsbyl7ZnVuY3Rpb24gYShlLHQsaSl7cmV0dXJuIHNbcy5sZW5ndGhdPXtzdGF0dXM6ZSx2YWx1ZTp0LGluZGV4Oml9fWlmKGkmJiFyKXt2YXIgcz1bXSxsPWUubGVuZ3RoLHU9by5sZW5ndGgsYz0wO3N3aXRjaCh0KXtjYXNlInB1c2giOmM9bDtjYXNlInVuc2hpZnQiOmZvcih0PTA7dT50O3QrKylhKCJhZGRlZCIsb1t0XSxjK3QpO2JyZWFrO2Nhc2UicG9wIjpjPWwtMTtjYXNlInNoaWZ0IjpsJiZhKCJkZWxldGVkIixlW2NdLGMpO2JyZWFrO2Nhc2Uic3BsaWNlIjp0PU1hdGgubWluKE1hdGgubWF4KDAsMD5vWzBdP2wrb1swXTpvWzBdKSxsKTtmb3IodmFyIGw9MT09PXU/bDpNYXRoLm1pbih0KyhvWzFdfHwwKSxsKSx1PXQrdS0yLGM9TWF0aC5tYXgobCx1KSxoPVtdLG09W10sZj0yO2M+dDsrK3QsKytmKWw+dCYmbS5wdXNoKGEoImRlbGV0ZWQiLGVbdF0sdCkpLHU+dCYmaC5wdXNoKGEoImFkZGVkIixvW2ZdLHQpKTtkLmEubmIobSxoKTticmVhaztkZWZhdWx0OnJldHVybn1uPXN9fX19LGQuYmE9ZC5oPWZ1bmN0aW9uKGUsdCxpKXtmdW5jdGlvbiBuKCl7bT0hMCxkLmEuQShDLGZ1bmN0aW9uKGUsdCl7dC5GKCl9KSxDPXt9LHc9MCx1PSExfWZ1bmN0aW9uIHIoKXt2YXIgZT1hLnRocm90dGxlRXZhbHVhdGlvbjtlJiZlPj0wPyhjbGVhclRpbWVvdXQoRSksRT1zZXRUaW1lb3V0KG8sZSkpOmEud2E/YS53YSgpOm8oKX1mdW5jdGlvbiBvKCl7aWYoIWMmJiFtKXtpZihfJiZfKCkpe2lmKCFoKXJldHVybiB5KCksdm9pZCAwfWVsc2UgaD0hMTtjPSEwO3RyeXt2YXIgZT1DLGk9dztkLmsuamIoe3phOmZ1bmN0aW9uKHQsbil7bXx8KGkmJmVbbl0/KENbbl09ZVtuXSwrK3csZGVsZXRlIGVbbl0sLS1pKTpDW25dfHwoQ1tuXT10LlYociksKyt3KSl9LGJhOmEscGE6IXd9KSxDPXt9LHc9MDt0cnl7dmFyIG49dD9mLmNhbGwodCk6ZigpfWZpbmFsbHl7ZC5rLmVuZCgpLGkmJmQuYS5BKGUsZnVuY3Rpb24oZSx0KXt0LkYoKX0pLHU9ITF9YS5LYShsLG4pJiYoYS5ub3RpZnlTdWJzY3JpYmVycyhsLCJiZWZvcmVDaGFuZ2UiKSxsPW4sYS53YSYmIWEudGhyb3R0bGVFdmFsdWF0aW9ufHxhLm5vdGlmeVN1YnNjcmliZXJzKGwpKX1maW5hbGx5e2M9ITF9d3x8eSgpfX1mdW5jdGlvbiBhKCl7aWYoMDxhcmd1bWVudHMubGVuZ3RoKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgcCl0aHJvdyBFcnJvcigiQ2Fubm90IHdyaXRlIGEgdmFsdWUgdG8gYSBrby5jb21wdXRlZCB1bmxlc3MgeW91IHNwZWNpZnkgYSAnd3JpdGUnIG9wdGlvbi4gSWYgeW91IHdpc2ggdG8gcmVhZCB0aGUgY3VycmVudCB2YWx1ZSwgZG9uJ3QgcGFzcyBhbnkgcGFyYW1ldGVycy4iKTtyZXR1cm4gcC5hcHBseSh0LGFyZ3VtZW50cyksdGhpc31yZXR1cm4gdSYmbygpLGQuay56YihhKSxsfWZ1bmN0aW9uIHMoKXtyZXR1cm4gdXx8dz4wfXZhciBsLHU9ITAsYz0hMSxoPSExLG09ITEsZj1lO2lmKGYmJiJvYmplY3QiPT10eXBlb2YgZj8oaT1mLGY9aS5yZWFkKTooaT1pfHx7fSxmfHwoZj1pLnJlYWQpKSwiZnVuY3Rpb24iIT10eXBlb2YgZil0aHJvdyBFcnJvcigiUGFzcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGtvLmNvbXB1dGVkIik7dmFyIHA9aS53cml0ZSx2PWkuZGlzcG9zZVdoZW5Ob2RlSXNSZW1vdmVkfHxpLkd8fG51bGwsZz1pLmRpc3Bvc2VXaGVufHxpLkRhLF89Zyx5PW4sQz17fSx3PTAsRT1udWxsO3R8fCh0PWkub3duZXIpLGQuTi5jYWxsKGEpLGQuYS5zYShhLGQuaC5mbiksYS5vPWZ1bmN0aW9uKCl7cmV0dXJuIHUmJiF3JiZvKCksbH0sYS5mYT1mdW5jdGlvbigpe3JldHVybiB3fSxhLlliPSJmdW5jdGlvbiI9PXR5cGVvZiBpLndyaXRlLGEuRj1mdW5jdGlvbigpe3koKX0sYS5nYT1zO3ZhciBiPWEuTWE7cmV0dXJuIGEuTWE9ZnVuY3Rpb24oZSl7Yi5jYWxsKGEsZSksYS53YT1mdW5jdGlvbigpe2EuYmIobCksdT0hMCxhLmNiKGEpfX0sZC5zKGEsInBlZWsiLGEubyksZC5zKGEsImRpc3Bvc2UiLGEuRiksZC5zKGEsImlzQWN0aXZlIixhLmdhKSxkLnMoYSwiZ2V0RGVwZW5kZW5jaWVzQ291bnQiLGEuZmEpLHYmJihoPSEwLHYubm9kZVR5cGUmJihfPWZ1bmN0aW9uKCl7cmV0dXJuIWQuYS5FYSh2KXx8ZyYmZygpfSkpLCEwIT09aS5kZWZlckV2YWx1YXRpb24mJm8oKSx2JiZzKCkmJnYubm9kZVR5cGUmJih5PWZ1bmN0aW9uKCl7ZC5hLnUuQWIodix5KSxuKCl9LGQuYS51LmphKHYseSkpLGF9LGQuJGI9ZnVuY3Rpb24oZSl7cmV0dXJuIGQuSGEoZSxkLmgpfSxhPWQubS5oYyxkLmhbYV09ZC5tLGQuaC5mbj17ZXF1YWxpdHlDb21wYXJlcjpzfSxkLmguZm5bYV09ZC5oLGQuYS5uYSYmZC5hLnJhKGQuaC5mbixkLk4uZm4pLGQuYigiZGVwZW5kZW50T2JzZXJ2YWJsZSIsZC5oKSxkLmIoImNvbXB1dGVkIixkLmgpLGQuYigiaXNDb21wdXRlZCIsZC4kYiksZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHIsbyxhKXtpZihhPWF8fG5ldyBuLHI9byhyKSwib2JqZWN0IiE9dHlwZW9mIHJ8fG51bGw9PT1yfHxyPT09ZXx8ciBpbnN0YW5jZW9mIERhdGV8fHIgaW5zdGFuY2VvZiBTdHJpbmd8fHIgaW5zdGFuY2VvZiBOdW1iZXJ8fHIgaW5zdGFuY2VvZiBCb29sZWFuKXJldHVybiByO3ZhciBzPXIgaW5zdGFuY2VvZiBBcnJheT9bXTp7fTtyZXR1cm4gYS5zYXZlKHIscyksaShyLGZ1bmN0aW9uKGkpe3ZhciBuPW8ocltpXSk7c3dpdGNoKHR5cGVvZiBuKXtjYXNlImJvb2xlYW4iOmNhc2UibnVtYmVyIjpjYXNlInN0cmluZyI6Y2FzZSJmdW5jdGlvbiI6c1tpXT1uO2JyZWFrO2Nhc2Uib2JqZWN0IjpjYXNlInVuZGVmaW5lZCI6dmFyIGw9YS5nZXQobik7c1tpXT1sIT09ZT9sOnQobixvLGEpfX0pLHN9ZnVuY3Rpb24gaShlLHQpe2lmKGUgaW5zdGFuY2VvZiBBcnJheSl7Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKyspdChpKTsiZnVuY3Rpb24iPT10eXBlb2YgZS50b0pTT04mJnQoInRvSlNPTiIpfWVsc2UgZm9yKGkgaW4gZSl0KGkpfWZ1bmN0aW9uIG4oKXt0aGlzLmtleXM9W10sdGhpcy5hYj1bXX1kLkdiPWZ1bmN0aW9uKGUpe2lmKDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgRXJyb3IoIldoZW4gY2FsbGluZyBrby50b0pTLCBwYXNzIHRoZSBvYmplY3QgeW91IHdhbnQgdG8gY29udmVydC4iKTtyZXR1cm4gdChlLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO2QudihlKSYmMTA+dDt0KyspZT1lKCk7cmV0dXJuIGV9KX0sZC50b0pTT049ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBlPWQuR2IoZSksZC5hLllhKGUsdCxpKX0sbi5wcm90b3R5cGU9e3NhdmU6ZnVuY3Rpb24oZSx0KXt2YXIgaT1kLmEubCh0aGlzLmtleXMsZSk7aT49MD90aGlzLmFiW2ldPXQ6KHRoaXMua2V5cy5wdXNoKGUpLHRoaXMuYWIucHVzaCh0KSl9LGdldDpmdW5jdGlvbih0KXtyZXR1cm4gdD1kLmEubCh0aGlzLmtleXMsdCksdD49MD90aGlzLmFiW3RdOmV9fX0oKSxkLmIoInRvSlMiLGQuR2IpLGQuYigidG9KU09OIixkLnRvSlNPTiksZnVuY3Rpb24oKXtkLmk9e3A6ZnVuY3Rpb24odCl7c3dpdGNoKGQuYS5CKHQpKXtjYXNlIm9wdGlvbiI6cmV0dXJuITA9PT10Ll9fa29fX2hhc0RvbURhdGFPcHRpb25WYWx1ZV9fP2QuYS5mLmdldCh0LGQuZC5vcHRpb25zLlBhKTo3Pj1kLmEub2E/dC5nZXRBdHRyaWJ1dGVOb2RlKCJ2YWx1ZSIpJiZ0LmdldEF0dHJpYnV0ZU5vZGUoInZhbHVlIikuc3BlY2lmaWVkP3QudmFsdWU6dC50ZXh0OnQudmFsdWU7Y2FzZSJzZWxlY3QiOnJldHVybiAwPD10LnNlbGVjdGVkSW5kZXg/ZC5pLnAodC5vcHRpb25zW3Quc2VsZWN0ZWRJbmRleF0pOmU7ZGVmYXVsdDpyZXR1cm4gdC52YWx1ZX19LFg6ZnVuY3Rpb24odCxpLG4pe3N3aXRjaChkLmEuQih0KSl7Y2FzZSJvcHRpb24iOnN3aXRjaCh0eXBlb2YgaSl7Y2FzZSJzdHJpbmciOmQuYS5mLnNldCh0LGQuZC5vcHRpb25zLlBhLGUpLCJfX2tvX19oYXNEb21EYXRhT3B0aW9uVmFsdWVfXyJpbiB0JiZkZWxldGUgdC5fX2tvX19oYXNEb21EYXRhT3B0aW9uVmFsdWVfXyx0LnZhbHVlPWk7YnJlYWs7ZGVmYXVsdDpkLmEuZi5zZXQodCxkLmQub3B0aW9ucy5QYSxpKSx0Ll9fa29fX2hhc0RvbURhdGFPcHRpb25WYWx1ZV9fPSEwLHQudmFsdWU9Im51bWJlciI9PXR5cGVvZiBpP2k6IiJ9YnJlYWs7Y2FzZSJzZWxlY3QiOigiIj09PWl8fG51bGw9PT1pKSYmKGk9ZSk7Zm9yKHZhciByLG89LTEsYT0wLHM9dC5vcHRpb25zLmxlbmd0aDtzPmE7KythKWlmKHI9ZC5pLnAodC5vcHRpb25zW2FdKSxyPT1pfHwiIj09ciYmaT09PWUpe289YTticmVha30obnx8bz49MHx8aT09PWUmJjE8dC5zaXplKSYmKHQuc2VsZWN0ZWRJbmRleD1vKTticmVhaztkZWZhdWx0OihudWxsPT09aXx8aT09PWUpJiYoaT0iIiksdC52YWx1ZT1pfX19fSgpLGQuYigic2VsZWN0RXh0ZW5zaW9ucyIsZC5pKSxkLmIoInNlbGVjdEV4dGVuc2lvbnMucmVhZFZhbHVlIixkLmkucCksZC5iKCJzZWxlY3RFeHRlbnNpb25zLndyaXRlVmFsdWUiLGQuaS5YKSxkLmc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe2U9ZC5hLnRhKGUpLDEyMz09PWUuY2hhckNvZGVBdCgwKSYmKGU9ZS5zbGljZSgxLC0xKSk7dmFyIHQsaSxhPVtdLHM9ZS5tYXRjaChuKSxsPTA7aWYocyl7cy5wdXNoKCIsIik7Zm9yKHZhciB1LGM9MDt1PXNbY107KytjKXt2YXIgaD11LmNoYXJDb2RlQXQoMCk7aWYoNDQ9PT1oKXtpZigwPj1sKXt0JiZhLnB1c2goaT97a2V5OnQsdmFsdWU6aS5qb2luKCIiKX06e3Vua25vd246dH0pLHQ9aT1sPTA7Y29udGludWV9fWVsc2UgaWYoNTg9PT1oKXtpZighaSljb250aW51ZX1lbHNlIGlmKDQ3PT09aCYmYyYmMTx1Lmxlbmd0aCkoaD1zW2MtMV0ubWF0Y2gocikpJiYhb1toWzBdXSYmKGU9ZS5zdWJzdHIoZS5pbmRleE9mKHUpKzEpLHM9ZS5tYXRjaChuKSxzLnB1c2goIiwiKSxjPS0xLHU9Ii8iKTtlbHNlIGlmKDQwPT09aHx8MTIzPT09aHx8OTE9PT1oKSsrbDtlbHNlIGlmKDQxPT09aHx8MTI1PT09aHx8OTM9PT1oKS0tbDtlbHNlIGlmKCF0JiYhaSl7dD0zND09PWh8fDM5PT09aD91LnNsaWNlKDEsLTEpOnU7Y29udGludWV9aT9pLnB1c2godSk6aT1bdV19fXJldHVybiBhfXZhciB0PVsidHJ1ZSIsImZhbHNlIiwibnVsbCIsInVuZGVmaW5lZCJdLGk9L14oPzpbJF9hLXpdWyRcd10qfCguKykoXC5ccypbJF9hLXpdWyRcd10qfFxbLitcXSkpJC9pLG49UmVnRXhwKCJcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8Jyg/OlteJ1xcXFxdfFxcXFwuKSonfC8oPzpbXi9cXFxcXXxcXFxcLikqL3cqfFteXFxzOiwvXVteLFwiJ3t9KCkvOltcXF1dKlteXFxzLFwiJ3t9KCkvOltcXF1dfFteXFxzXSIsImciKSxyPS9bXF0pIidBLVphLXowLTlfJF0rJC8sbz17ImluIjoxLCJyZXR1cm4iOjEsInR5cGVvZiI6MX0sYT17fTtyZXR1cm57YWE6W10sVzphLFJhOmUscWE6ZnVuY3Rpb24obixyKXtmdW5jdGlvbiBvKGUsbil7dmFyIHIsYz1kLmdldEJpbmRpbmdIYW5kbGVyKGUpOyhjJiZjLnByZXByb2Nlc3M/bj1jLnByZXByb2Nlc3MobixlLG8pOjEpJiYoKGM9YVtlXSkmJihyPW4sMDw9ZC5hLmwodCxyKT9yPSExOihjPXIubWF0Y2goaSkscj1udWxsPT09Yz8hMTpjWzFdPyJPYmplY3QoIitjWzFdKyIpIitjWzJdOnIpLGM9ciksYyYmbC5wdXNoKCInIitlKyInOmZ1bmN0aW9uKF96KXsiK3IrIj1fen0iKSx1JiYobj0iZnVuY3Rpb24oKXtyZXR1cm4gIituKyIgfSIpLHMucHVzaCgiJyIrZSsiJzoiK24pKX1yPXJ8fHt9O3ZhciBzPVtdLGw9W10sdT1yLnZhbHVlQWNjZXNzb3JzLGM9InN0cmluZyI9PXR5cGVvZiBuP2Uobik6bjtyZXR1cm4gZC5hLnIoYyxmdW5jdGlvbihlKXtvKGUua2V5fHxlLnVua25vd24sZS52YWx1ZSl9KSxsLmxlbmd0aCYmbygiX2tvX3Byb3BlcnR5X3dyaXRlcnMiLCJ7IitsLmpvaW4oIiwiKSsiIH0iKSxzLmpvaW4oIiwiKX0sYmM6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKylpZihlW2ldLmtleT09dClyZXR1cm4hMDtyZXR1cm4hMX0sdmE6ZnVuY3Rpb24oZSx0LGksbixyKXtlJiZkLnYoZSk/IWQudWIoZSl8fHImJmUubygpPT09bnx8ZShuKTooZT10LmdldCgiX2tvX3Byb3BlcnR5X3dyaXRlcnMiKSkmJmVbaV0mJmVbaV0obil9fX0oKSxkLmIoImV4cHJlc3Npb25SZXdyaXRpbmciLGQuZyksZC5iKCJleHByZXNzaW9uUmV3cml0aW5nLmJpbmRpbmdSZXdyaXRlVmFsaWRhdG9ycyIsZC5nLmFhKSxkLmIoImV4cHJlc3Npb25SZXdyaXRpbmcucGFyc2VPYmplY3RMaXRlcmFsIixkLmcuUmEpLGQuYigiZXhwcmVzc2lvblJld3JpdGluZy5wcmVQcm9jZXNzQmluZGluZ3MiLGQuZy5xYSksZC5iKCJleHByZXNzaW9uUmV3cml0aW5nLl90d29XYXlCaW5kaW5ncyIsZC5nLlcpLGQuYigianNvbkV4cHJlc3Npb25SZXdyaXRpbmciLGQuZyksZC5iKCJqc29uRXhwcmVzc2lvblJld3JpdGluZy5pbnNlcnRQcm9wZXJ0eUFjY2Vzc29yc0ludG9Kc29uIixkLmcucWEpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXtyZXR1cm4gOD09ZS5ub2RlVHlwZSYmYS50ZXN0KG8/ZS50ZXh0OmUubm9kZVZhbHVlKX1mdW5jdGlvbiB0KGUpe3JldHVybiA4PT1lLm5vZGVUeXBlJiZzLnRlc3Qobz9lLnRleHQ6ZS5ub2RlVmFsdWUpfWZ1bmN0aW9uIG4oaSxuKXtmb3IodmFyIHI9aSxvPTEsYT1bXTtyPXIubmV4dFNpYmxpbmc7KXtpZih0KHIpJiYoby0tLDA9PT1vKSlyZXR1cm4gYTthLnB1c2gociksZShyKSYmbysrfWlmKCFuKXRocm93IEVycm9yKCJDYW5ub3QgZmluZCBjbG9zaW5nIGNvbW1lbnQgdGFnIHRvIG1hdGNoOiAiK2kubm9kZVZhbHVlKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiByKGUsdCl7dmFyIGk9bihlLHQpO3JldHVybiBpPzA8aS5sZW5ndGg/aVtpLmxlbmd0aC0xXS5uZXh0U2libGluZzplLm5leHRTaWJsaW5nOm51bGx9dmFyIG89aSYmIjwhLS10ZXN0LS0+Ij09PWkuY3JlYXRlQ29tbWVudCgidGVzdCIpLnRleHQsYT1vPy9eXHgzYyEtLVxzKmtvKD86XHMrKFtcc1xTXSspKT9ccyotLVx4M2UkLzovXlxzKmtvKD86XHMrKFtcc1xTXSspKT9ccyokLyxzPW8/L15ceDNjIS0tXHMqXC9rb1xzKi0tXHgzZSQvOi9eXHMqXC9rb1xzKiQvLGw9e3VsOiEwLG9sOiEwfTtkLmU9e1E6e30sY2hpbGROb2RlczpmdW5jdGlvbih0KXtyZXR1cm4gZSh0KT9uKHQpOnQuY2hpbGROb2Rlc30sZGE6ZnVuY3Rpb24odCl7aWYoZSh0KSl7dD1kLmUuY2hpbGROb2Rlcyh0KTtmb3IodmFyIGk9MCxuPXQubGVuZ3RoO24+aTtpKyspZC5yZW1vdmVOb2RlKHRbaV0pfWVsc2UgZC5hLkZhKHQpfSxVOmZ1bmN0aW9uKHQsaSl7aWYoZSh0KSl7ZC5lLmRhKHQpO2Zvcih2YXIgbj10Lm5leHRTaWJsaW5nLHI9MCxvPWkubGVuZ3RoO28+cjtyKyspbi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShpW3JdLG4pfWVsc2UgZC5hLlUodCxpKX0seWI6ZnVuY3Rpb24odCxpKXtlKHQpP3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaSx0Lm5leHRTaWJsaW5nKTp0LmZpcnN0Q2hpbGQ/dC5pbnNlcnRCZWZvcmUoaSx0LmZpcnN0Q2hpbGQpOnQuYXBwZW5kQ2hpbGQoaSl9LHJiOmZ1bmN0aW9uKHQsaSxuKXtuP2UodCk/dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShpLG4ubmV4dFNpYmxpbmcpOm4ubmV4dFNpYmxpbmc/dC5pbnNlcnRCZWZvcmUoaSxuLm5leHRTaWJsaW5nKTp0LmFwcGVuZENoaWxkKGkpOmQuZS55Yih0LGkpfSxmaXJzdENoaWxkOmZ1bmN0aW9uKGkpe3JldHVybiBlKGkpPyFpLm5leHRTaWJsaW5nfHx0KGkubmV4dFNpYmxpbmcpP251bGw6aS5uZXh0U2libGluZzppLmZpcnN0Q2hpbGR9LG5leHRTaWJsaW5nOmZ1bmN0aW9uKGkpe3JldHVybiBlKGkpJiYoaT1yKGkpKSxpLm5leHRTaWJsaW5nJiZ0KGkubmV4dFNpYmxpbmcpP251bGw6aS5uZXh0U2libGluZ30sWGI6ZSxsYzpmdW5jdGlvbihlKXtyZXR1cm4oZT0obz9lLnRleHQ6ZS5ub2RlVmFsdWUpLm1hdGNoKGEpKT9lWzFdOm51bGx9LHdiOmZ1bmN0aW9uKGkpe2lmKGxbZC5hLkIoaSldKXt2YXIgbj1pLmZpcnN0Q2hpbGQ7aWYobilkbyBpZigxPT09bi5ub2RlVHlwZSl7dmFyIG87bz1uLmZpcnN0Q2hpbGQ7dmFyIGE9bnVsbDtpZihvKWRvIGlmKGEpYS5wdXNoKG8pO2Vsc2UgaWYoZShvKSl7dmFyIHM9cihvLCEwKTtzP289czphPVtvXX1lbHNlIHQobykmJihhPVtvXSk7d2hpbGUobz1vLm5leHRTaWJsaW5nKTtpZihvPWEpZm9yKGE9bi5uZXh0U2libGluZyxzPTA7czxvLmxlbmd0aDtzKyspYT9pLmluc2VydEJlZm9yZShvW3NdLGEpOmkuYXBwZW5kQ2hpbGQob1tzXSl9d2hpbGUobj1uLm5leHRTaWJsaW5nKX19fX0oKSxkLmIoInZpcnR1YWxFbGVtZW50cyIsZC5lKSxkLmIoInZpcnR1YWxFbGVtZW50cy5hbGxvd2VkQmluZGluZ3MiLGQuZS5RKSxkLmIoInZpcnR1YWxFbGVtZW50cy5lbXB0eU5vZGUiLGQuZS5kYSksZC5iKCJ2aXJ0dWFsRWxlbWVudHMuaW5zZXJ0QWZ0ZXIiLGQuZS5yYiksZC5iKCJ2aXJ0dWFsRWxlbWVudHMucHJlcGVuZCIsZC5lLnliKSxkLmIoInZpcnR1YWxFbGVtZW50cy5zZXREb21Ob2RlQ2hpbGRyZW4iLGQuZS5VKSxmdW5jdGlvbigpe2QuSj1mdW5jdGlvbigpe3RoaXMuTmI9e319LGQuYS5leHRlbmQoZC5KLnByb3RvdHlwZSx7bm9kZUhhc0JpbmRpbmdzOmZ1bmN0aW9uKGUpe3N3aXRjaChlLm5vZGVUeXBlKXtjYXNlIDE6cmV0dXJuIG51bGwhPWUuZ2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiKTtjYXNlIDg6cmV0dXJuIGQuZS5YYihlKTtkZWZhdWx0OnJldHVybiExfX0sZ2V0QmluZGluZ3M6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLmdldEJpbmRpbmdzU3RyaW5nKGUsdCk7cmV0dXJuIGk/dGhpcy5wYXJzZUJpbmRpbmdzU3RyaW5nKGksdCxlKTpudWxsfSxnZXRCaW5kaW5nQWNjZXNzb3JzOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5nZXRCaW5kaW5nc1N0cmluZyhlLHQpO3JldHVybiBpP3RoaXMucGFyc2VCaW5kaW5nc1N0cmluZyhpLHQsZSx7dmFsdWVBY2Nlc3NvcnM6ITB9KTpudWxsfSxnZXRCaW5kaW5nc1N0cmluZzpmdW5jdGlvbihlKXtzd2l0Y2goZS5ub2RlVHlwZSl7Y2FzZSAxOnJldHVybiBlLmdldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIik7Y2FzZSA4OnJldHVybiBkLmUubGMoZSk7ZGVmYXVsdDpyZXR1cm4gbnVsbH19LHBhcnNlQmluZGluZ3NTdHJpbmc6ZnVuY3Rpb24oZSx0LGksbil7dHJ5e3ZhciByLG89dGhpcy5OYixhPWUrKG4mJm4udmFsdWVBY2Nlc3NvcnN8fCIiKTtpZighKHI9b1thXSkpe3ZhciBzLGw9IndpdGgoJGNvbnRleHQpe3dpdGgoJGRhdGF8fHt9KXtyZXR1cm57IitkLmcucWEoZSxuKSsifX19IjtzPW5ldyBGdW5jdGlvbigiJGNvbnRleHQiLCIkZWxlbWVudCIsbCkscj1vW2FdPXN9cmV0dXJuIHIodCxpKX1jYXRjaCh1KXt0aHJvdyB1Lm1lc3NhZ2U9IlVuYWJsZSB0byBwYXJzZSBiaW5kaW5ncy5cbkJpbmRpbmdzIHZhbHVlOiAiK2UrIlxuTWVzc2FnZTogIit1Lm1lc3NhZ2UsdX19fSksZC5KLmluc3RhbmNlPW5ldyBkLkp9KCksZC5iKCJiaW5kaW5nUHJvdmlkZXIiLGQuSiksZnVuY3Rpb24oKXtmdW5jdGlvbiBpKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlfX1mdW5jdGlvbiBuKGUpe3JldHVybiBlKCl9ZnVuY3Rpb24gbyhlKXtyZXR1cm4gZC5hLk9hKGQuay50KGUpLGZ1bmN0aW9uKHQsaSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUoKVtpXX19KX1mdW5jdGlvbiBhKGUsdCl7cmV0dXJuIG8odGhpcy5nZXRCaW5kaW5ncy5iaW5kKHRoaXMsZSx0KSl9ZnVuY3Rpb24gcyhlLHQsaSl7dmFyIG4scj1kLmUuZmlyc3RDaGlsZCh0KSxvPWQuSi5pbnN0YW5jZSxhPW8ucHJlcHJvY2Vzc05vZGU7aWYoYSl7Zm9yKDtuPXI7KXI9ZC5lLm5leHRTaWJsaW5nKG4pLGEuY2FsbChvLG4pO3I9ZC5lLmZpcnN0Q2hpbGQodCl9Zm9yKDtuPXI7KXI9ZC5lLm5leHRTaWJsaW5nKG4pLGwoZSxuLGkpfWZ1bmN0aW9uIGwoZSx0LGkpe3ZhciBuPSEwLHI9MT09PXQubm9kZVR5cGU7ciYmZC5lLndiKHQpLChyJiZpfHxkLkouaW5zdGFuY2Uubm9kZUhhc0JpbmRpbmdzKHQpKSYmKG49Yyh0LG51bGwsZSxpKS5zaG91bGRCaW5kRGVzY2VuZGFudHMpLG4mJiFtW2QuYS5CKHQpXSYmcyhlLHQsIXIpfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9W10saT17fSxuPVtdO3JldHVybiBkLmEuQShlLGZ1bmN0aW9uIHIobyl7aWYoIWlbb10pe3ZhciBhPWQuZ2V0QmluZGluZ0hhbmRsZXIobyk7YSYmKGEuYWZ0ZXImJihuLnB1c2gobyksZC5hLnIoYS5hZnRlcixmdW5jdGlvbih0KXtpZihlW3RdKXtpZigtMSE9PWQuYS5sKG4sdCkpdGhyb3cgRXJyb3IoIkNhbm5vdCBjb21iaW5lIHRoZSBmb2xsb3dpbmcgYmluZGluZ3MsIGJlY2F1c2UgdGhleSBoYXZlIGEgY3ljbGljIGRlcGVuZGVuY3k6ICIrbi5qb2luKCIsICIpKTtyKHQpfX0pLG4ubGVuZ3RoLS0pLHQucHVzaCh7a2V5Om8scGI6YX0pKSxpW29dPSEwfX0pLHR9ZnVuY3Rpb24gYyh0LGkscixvKXt2YXIgcz1kLmEuZi5nZXQodCxmKTtpZighaSl7aWYocyl0aHJvdyBFcnJvcigiWW91IGNhbm5vdCBhcHBseSBiaW5kaW5ncyBtdWx0aXBsZSB0aW1lcyB0byB0aGUgc2FtZSBlbGVtZW50LiIpO2QuYS5mLnNldCh0LGYsITApfSFzJiZvJiZkLkViKHQscik7dmFyIGw7aWYoaSYmImZ1bmN0aW9uIiE9dHlwZW9mIGkpbD1pO2Vsc2V7dmFyIGM9ZC5KLmluc3RhbmNlLGg9Yy5nZXRCaW5kaW5nQWNjZXNzb3JzfHxhLG09ZC5oKGZ1bmN0aW9uKCl7cmV0dXJuKGw9aT9pKHIsdCk6aC5jYWxsKGMsdCxyKSkmJnIuRCYmci5EKCksbH0sbnVsbCx7Rzp0fSk7bCYmbS5nYSgpfHwobT1udWxsKX12YXIgcDtpZihsKXt2YXIgdj1tP2Z1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuKG0oKVtlXSl9fTpmdW5jdGlvbihlKXtyZXR1cm4gbFtlXX0sZz1mdW5jdGlvbigpe3JldHVybiBkLmEuT2EobT9tKCk6bCxuKX07Zy5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGxbZV0mJm4odihlKSl9LGcuaGFzPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluIGx9LG89dShsKSxkLmEucihvLGZ1bmN0aW9uKGkpe3ZhciBuPWkucGIuaW5pdCxvPWkucGIudXBkYXRlLGE9aS5rZXk7aWYoOD09PXQubm9kZVR5cGUmJiFkLmUuUVthXSl0aHJvdyBFcnJvcigiVGhlIGJpbmRpbmcgJyIrYSsiJyBjYW5ub3QgYmUgdXNlZCB3aXRoIHZpcnR1YWwgZWxlbWVudHMiKTt0cnl7ImZ1bmN0aW9uIj09dHlwZW9mIG4mJmQuay50KGZ1bmN0aW9uKCl7dmFyIGk9bih0LHYoYSksZyxyLiRkYXRhLHIpO2lmKGkmJmkuY29udHJvbHNEZXNjZW5kYW50QmluZGluZ3Mpe2lmKHAhPT1lKXRocm93IEVycm9yKCJNdWx0aXBsZSBiaW5kaW5ncyAoIitwKyIgYW5kICIrYSsiKSBhcmUgdHJ5aW5nIHRvIGNvbnRyb2wgZGVzY2VuZGFudCBiaW5kaW5ncyBvZiB0aGUgc2FtZSBlbGVtZW50LiBZb3UgY2Fubm90IHVzZSB0aGVzZSBiaW5kaW5ncyB0b2dldGhlciBvbiB0aGUgc2FtZSBlbGVtZW50LiIpO3A9YX19KSwiZnVuY3Rpb24iPT10eXBlb2YgbyYmZC5oKGZ1bmN0aW9uKCl7byh0LHYoYSksZyxyLiRkYXRhLHIpfSxudWxsLHtHOnR9KX1jYXRjaChzKXt0aHJvdyBzLm1lc3NhZ2U9J1VuYWJsZSB0byBwcm9jZXNzIGJpbmRpbmcgIicrYSsiOiAiK2xbYV0rJyJcbk1lc3NhZ2U6ICcrcy5tZXNzYWdlLHN9fSl9cmV0dXJue3Nob3VsZEJpbmREZXNjZW5kYW50czpwPT09ZX19ZnVuY3Rpb24gaChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIGQuST9lOm5ldyBkLkkoZSl9ZC5kPXt9O3ZhciBtPXtzY3JpcHQ6ITB9O2QuZ2V0QmluZGluZ0hhbmRsZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIGQuZFtlXX0sZC5JPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvLGE9dGhpcyxzPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiYhZC52KHQpLGw9ZC5oKGZ1bmN0aW9uKCl7dmFyIGU9cz90KCk6dCxvPWQuYS5jKGUpO3JldHVybiBpPyhpLkQmJmkuRCgpLGQuYS5leHRlbmQoYSxpKSxsJiYoYS5EPWwpKTooYS4kcGFyZW50cz1bXSxhLiRyb290PW8sYS5rbz1kKSxhLiRyYXdEYXRhPWUsYS4kZGF0YT1vLG4mJihhW25dPW8pLHImJnIoYSxpLG8pLGEuJGRhdGF9LG51bGwse0RhOmZ1bmN0aW9uKCl7cmV0dXJuIG8mJiFkLmEuZWIobyl9LEc6ITB9KTtsLmdhKCkmJihhLkQ9bCxsLmVxdWFsaXR5Q29tcGFyZXI9bnVsbCxvPVtdLGwuSmI9ZnVuY3Rpb24odCl7by5wdXNoKHQpLGQuYS51LmphKHQsZnVuY3Rpb24odCl7ZC5hLm1hKG8sdCksby5sZW5ndGh8fChsLkYoKSxhLkQ9bD1lKX0pfSl9LGQuSS5wcm90b3R5cGUuY3JlYXRlQ2hpbGRDb250ZXh0PWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gbmV3IGQuSShlLHRoaXMsdCxmdW5jdGlvbihlLHQpe2UuJHBhcmVudENvbnRleHQ9dCxlLiRwYXJlbnQ9dC4kZGF0YSxlLiRwYXJlbnRzPSh0LiRwYXJlbnRzfHxbXSkuc2xpY2UoMCksZS4kcGFyZW50cy51bnNoaWZ0KGUuJHBhcmVudCksaSYmaShlKX0pfSxkLkkucHJvdG90eXBlLmV4dGVuZD1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGQuSSh0aGlzLkR8fHRoaXMuJGRhdGEsdGhpcyxudWxsLGZ1bmN0aW9uKHQsaSl7dC4kcmF3RGF0YT1pLiRyYXdEYXRhLGQuYS5leHRlbmQodCwiZnVuY3Rpb24iPT10eXBlb2YgZT9lKCk6ZSl9KX07dmFyIGY9ZC5hLmYuTCgpLHA9ZC5hLmYuTCgpO2QuRWI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMiE9YXJndW1lbnRzLmxlbmd0aD9kLmEuZi5nZXQoZSxwKTooZC5hLmYuc2V0KGUscCx0KSx0LkQmJnQuRC5KYihlKSx2b2lkIDApfSxkLnhhPWZ1bmN0aW9uKGUsdCxpKXtyZXR1cm4gMT09PWUubm9kZVR5cGUmJmQuZS53YihlKSxjKGUsdCxoKGkpLCEwKX0sZC5MYj1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG49aChuKSxkLnhhKGUsImZ1bmN0aW9uIj09dHlwZW9mIHQ/byh0LmJpbmQobnVsbCxuLGUpKTpkLmEuT2EodCxpKSxuKX0sZC5nYj1mdW5jdGlvbihlLHQpezEhPT10Lm5vZGVUeXBlJiY4IT09dC5ub2RlVHlwZXx8cyhoKGUpLHQsITApfSxkLmZiPWZ1bmN0aW9uKGUsaSl7aWYoIXImJnQualF1ZXJ5JiYocj10LmpRdWVyeSksaSYmMSE9PWkubm9kZVR5cGUmJjghPT1pLm5vZGVUeXBlKXRocm93IEVycm9yKCJrby5hcHBseUJpbmRpbmdzOiBmaXJzdCBwYXJhbWV0ZXIgc2hvdWxkIGJlIHlvdXIgdmlldyBtb2RlbDsgc2Vjb25kIHBhcmFtZXRlciBzaG91bGQgYmUgYSBET00gbm9kZSIpO2k9aXx8dC5kb2N1bWVudC5ib2R5LGwoaChlKSxpLCEwKX0sZC5DYT1mdW5jdGlvbih0KXtzd2l0Y2godC5ub2RlVHlwZSl7Y2FzZSAxOmNhc2UgODp2YXIgaT1kLkViKHQpO2lmKGkpcmV0dXJuIGk7aWYodC5wYXJlbnROb2RlKXJldHVybiBkLkNhKHQucGFyZW50Tm9kZSl9cmV0dXJuIGV9LGQuUGI9ZnVuY3Rpb24odCl7cmV0dXJuKHQ9ZC5DYSh0KSk/dC4kZGF0YTplfSxkLmIoImJpbmRpbmdIYW5kbGVycyIsZC5kKSxkLmIoImFwcGx5QmluZGluZ3MiLGQuZmIpLGQuYigiYXBwbHlCaW5kaW5nc1RvRGVzY2VuZGFudHMiLGQuZ2IpLGQuYigiYXBwbHlCaW5kaW5nQWNjZXNzb3JzVG9Ob2RlIixkLnhhKSxkLmIoImFwcGx5QmluZGluZ3NUb05vZGUiLGQuTGIpLGQuYigiY29udGV4dEZvciIsZC5DYSksZC5iKCJkYXRhRm9yIixkLlBiKX0oKTt2YXIgdj17ImNsYXNzIjoiY2xhc3NOYW1lIiwiZm9yIjoiaHRtbEZvciJ9O2QuZC5hdHRyPXt1cGRhdGU6ZnVuY3Rpb24odCxpKXt2YXIgbj1kLmEuYyhpKCkpfHx7fTtkLmEuQShuLGZ1bmN0aW9uKGksbil7bj1kLmEuYyhuKTt2YXIgcj0hMT09PW58fG51bGw9PT1ufHxuPT09ZTtyJiZ0LnJlbW92ZUF0dHJpYnV0ZShpKSw4Pj1kLmEub2EmJmkgaW4gdj8oaT12W2ldLHI/dC5yZW1vdmVBdHRyaWJ1dGUoaSk6dFtpXT1uKTpyfHx0LnNldEF0dHJpYnV0ZShpLG4udG9TdHJpbmcoKSksIm5hbWUiPT09aSYmZC5hLkNiKHQscj8iIjpuLnRvU3RyaW5nKCkpfSl9fSxmdW5jdGlvbigpe2QuZC5jaGVja2VkPXthZnRlcjpbInZhbHVlIiwiYXR0ciJdLGluaXQ6ZnVuY3Rpb24odCxpLG4pe2Z1bmN0aW9uIHIoKXtyZXR1cm4gbi5oYXMoImNoZWNrZWRWYWx1ZSIpP2QuYS5jKG4uZ2V0KCJjaGVja2VkVmFsdWUiKSk6dC52YWx1ZX1mdW5jdGlvbiBvKCl7dmFyIGU9dC5jaGVja2VkLG89aD9yKCk6ZTtpZighZC5jYS5wYSgpJiYoIWx8fGUpKXt2YXIgYT1kLmsudChpKTt1P2MhPT1vPyhlJiYoZC5hLlkoYSxvLCEwKSxkLmEuWShhLGMsITEpKSxjPW8pOmQuYS5ZKGEsbyxlKTpkLmcudmEoYSxuLCJjaGVja2VkIixvLCEwKX19ZnVuY3Rpb24gYSgpe3ZhciBlPWQuYS5jKGkoKSk7dC5jaGVja2VkPXU/MDw9ZC5hLmwoZSxyKCkpOnM/ZTpyKCk9PT1lfXZhciBzPSJjaGVja2JveCI9PXQudHlwZSxsPSJyYWRpbyI9PXQudHlwZTtpZihzfHxsKXt2YXIgdT1zJiZkLmEuYyhpKCkpaW5zdGFuY2VvZiBBcnJheSxjPXU/cigpOmUsaD1sfHx1O2wmJiF0Lm5hbWUmJmQuZC51bmlxdWVOYW1lLmluaXQodCxmdW5jdGlvbigpe3JldHVybiEwfSksZC5iYShvLG51bGwse0c6dH0pLGQuYS5xKHQsImNsaWNrIixvKSxkLmJhKGEsbnVsbCx7Rzp0fSl9fX0sZC5nLlcuY2hlY2tlZD0hMCxkLmQuY2hlY2tlZFZhbHVlPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXtlLnZhbHVlPWQuYS5jKHQoKSl9fX0oKSxkLmQuY3NzPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgaT1kLmEuYyh0KCkpOyJvYmplY3QiPT10eXBlb2YgaT9kLmEuQShpLGZ1bmN0aW9uKHQsaSl7aT1kLmEuYyhpKSxkLmEudWEoZSx0LGkpfSk6KGk9U3RyaW5nKGl8fCIiKSxkLmEudWEoZSxlLl9fa29fX2Nzc1ZhbHVlLCExKSxlLl9fa29fX2Nzc1ZhbHVlPWksZC5hLnVhKGUsaSwhMCkpfX0sZC5kLmVuYWJsZT17dXBkYXRlOmZ1bmN0aW9uKGUsdCl7dmFyIGk9ZC5hLmModCgpKTtpJiZlLmRpc2FibGVkP2UucmVtb3ZlQXR0cmlidXRlKCJkaXNhYmxlZCIpOml8fGUuZGlzYWJsZWR8fChlLmRpc2FibGVkPSEwKX19LGQuZC5kaXNhYmxlPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXtkLmQuZW5hYmxlLnVwZGF0ZShlLGZ1bmN0aW9uKCl7cmV0dXJuIWQuYS5jKHQoKSl9KX19LGQuZC5ldmVudD17aW5pdDpmdW5jdGlvbihlLHQsaSxuLHIpe3ZhciBvPXQoKXx8e307ZC5hLkEobyxmdW5jdGlvbihvKXsic3RyaW5nIj09dHlwZW9mIG8mJmQuYS5xKGUsbyxmdW5jdGlvbihlKXt2YXIgYSxzPXQoKVtvXTtpZihzKXt0cnl7dmFyIGw9ZC5hLlIoYXJndW1lbnRzKTtuPXIuJGRhdGEsbC51bnNoaWZ0KG4pLGE9cy5hcHBseShuLGwpfWZpbmFsbHl7ITAhPT1hJiYoZS5wcmV2ZW50RGVmYXVsdD9lLnByZXZlbnREZWZhdWx0KCk6ZS5yZXR1cm5WYWx1ZT0hMSl9ITE9PT1pLmdldChvKyJCdWJibGUiKSYmKGUuY2FuY2VsQnViYmxlPSEwLGUuc3RvcFByb3BhZ2F0aW9uJiZlLnN0b3BQcm9wYWdhdGlvbigpKX19KX0pfX0sZC5kLmZvcmVhY2g9e3ZiOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3ZhciB0PWUoKSxpPWQuYS5TYSh0KTtyZXR1cm4gaSYmIm51bWJlciIhPXR5cGVvZiBpLmxlbmd0aD8oZC5hLmModCkse2ZvcmVhY2g6aS5kYXRhLGFzOmkuYXMsaW5jbHVkZURlc3Ryb3llZDppLmluY2x1ZGVEZXN0cm95ZWQsYWZ0ZXJBZGQ6aS5hZnRlckFkZCxiZWZvcmVSZW1vdmU6aS5iZWZvcmVSZW1vdmUsYWZ0ZXJSZW5kZXI6aS5hZnRlclJlbmRlcixiZWZvcmVNb3ZlOmkuYmVmb3JlTW92ZSxhZnRlck1vdmU6aS5hZnRlck1vdmUsdGVtcGxhdGVFbmdpbmU6ZC5LLkphfSk6e2ZvcmVhY2g6dCx0ZW1wbGF0ZUVuZ2luZTpkLksuSmF9fX0saW5pdDpmdW5jdGlvbihlLHQpe3JldHVybiBkLmQudGVtcGxhdGUuaW5pdChlLGQuZC5mb3JlYWNoLnZiKHQpKX0sdXBkYXRlOmZ1bmN0aW9uKGUsdCxpLG4scil7cmV0dXJuIGQuZC50ZW1wbGF0ZS51cGRhdGUoZSxkLmQuZm9yZWFjaC52Yih0KSxpLG4scil9fSxkLmcuYWEuZm9yZWFjaD0hMSxkLmUuUS5mb3JlYWNoPSEwLGQuZC5oYXNmb2N1cz17aW5pdDpmdW5jdGlvbihlLHQsaSl7ZnVuY3Rpb24gbihuKXtlLl9fa29faGFzZm9jdXNVcGRhdGluZz0hMDt2YXIgcj1lLm93bmVyRG9jdW1lbnQ7aWYoImFjdGl2ZUVsZW1lbnQiaW4gcil7dmFyIG87dHJ5e289ci5hY3RpdmVFbGVtZW50fWNhdGNoKGEpe289ci5ib2R5fW49bz09PWV9cj10KCksZC5nLnZhKHIsaSwiaGFzZm9jdXMiLG4sITApLGUuX19rb19oYXNmb2N1c0xhc3RWYWx1ZT1uLGUuX19rb19oYXNmb2N1c1VwZGF0aW5nPSExfXZhciByPW4uYmluZChudWxsLCEwKSxvPW4uYmluZChudWxsLCExKTtkLmEucShlLCJmb2N1cyIsciksZC5hLnEoZSwiZm9jdXNpbiIsciksZC5hLnEoZSwiYmx1ciIsbyksZC5hLnEoZSwiZm9jdXNvdXQiLG8pfSx1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgaT0hIWQuYS5jKHQoKSk7ZS5fX2tvX2hhc2ZvY3VzVXBkYXRpbmd8fGUuX19rb19oYXNmb2N1c0xhc3RWYWx1ZT09PWl8fChpP2UuZm9jdXMoKTplLmJsdXIoKSxkLmsudChkLmEuaGEsbnVsbCxbZSxpPyJmb2N1c2luIjoiZm9jdXNvdXQiXSkpfX0sZC5nLlcuaGFzZm9jdXM9ITAsZC5kLmhhc0ZvY3VzPWQuZC5oYXNmb2N1cyxkLmcuVy5oYXNGb2N1cz0hMCxkLmQuaHRtbD17aW5pdDpmdW5jdGlvbigpe3JldHVybntjb250cm9sc0Rlc2NlbmRhbnRCaW5kaW5nczohMH19LHVwZGF0ZTpmdW5jdGlvbihlLHQpe2QuYS5WYShlLHQoKSl9fSxjKCJpZiIpLGMoImlmbm90IiwhMSwhMCksYygid2l0aCIsITAsITEsZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5jcmVhdGVDaGlsZENvbnRleHQodCl9KTt2YXIgZz17fTtkLmQub3B0aW9ucz17aW5pdDpmdW5jdGlvbihlKXtpZigic2VsZWN0IiE9PWQuYS5CKGUpKXRocm93IEVycm9yKCJvcHRpb25zIGJpbmRpbmcgYXBwbGllcyBvbmx5IHRvIFNFTEVDVCBlbGVtZW50cyIpO2Zvcig7MDxlLmxlbmd0aDspZS5yZW1vdmUoMCk7cmV0dXJue2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX0sdXBkYXRlOmZ1bmN0aW9uKHQsaSxuKXtmdW5jdGlvbiByKCl7cmV0dXJuIGQuYS5sYSh0Lm9wdGlvbnMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuc2VsZWN0ZWR9KX1mdW5jdGlvbiBvKGUsdCxpKXt2YXIgbj10eXBlb2YgdDtyZXR1cm4iZnVuY3Rpb24iPT1uP3QoZSk6InN0cmluZyI9PW4/ZVt0XTppfWZ1bmN0aW9uIGEoZSxpKXtpZihoLmxlbmd0aCl7dmFyIG49MDw9ZC5hLmwoaCxkLmkucChpWzBdKSk7ZC5hLkRiKGlbMF0sbiksbSYmIW4mJmQuay50KGQuYS5oYSxudWxsLFt0LCJjaGFuZ2UiXSl9fXZhciBzPTAhPXQubGVuZ3RoJiZ0Lm11bHRpcGxlP3Quc2Nyb2xsVG9wOm51bGwsbD1kLmEuYyhpKCkpLHU9bi5nZXQoIm9wdGlvbnNJbmNsdWRlRGVzdHJveWVkIik7aT17fTt2YXIgYyxoO2g9dC5tdWx0aXBsZT9kLmEueWEocigpLGQuaS5wKTowPD10LnNlbGVjdGVkSW5kZXg/W2QuaS5wKHQub3B0aW9uc1t0LnNlbGVjdGVkSW5kZXhdKV06W10sbCYmKCJ1bmRlZmluZWQiPT10eXBlb2YgbC5sZW5ndGgmJihsPVtsXSksYz1kLmEubGEobCxmdW5jdGlvbih0KXtyZXR1cm4gdXx8dD09PWV8fG51bGw9PT10fHwhZC5hLmModC5fZGVzdHJveSl9KSxuLmhhcygib3B0aW9uc0NhcHRpb24iKSYmKGw9ZC5hLmMobi5nZXQoIm9wdGlvbnNDYXB0aW9uIikpLG51bGwhPT1sJiZsIT09ZSYmYy51bnNoaWZ0KGcpKSk7dmFyIG09ITE7aS5iZWZvcmVSZW1vdmU9ZnVuY3Rpb24oZSl7dC5yZW1vdmVDaGlsZChlKX0sbD1hLG4uaGFzKCJvcHRpb25zQWZ0ZXJSZW5kZXIiKSYmKGw9ZnVuY3Rpb24odCxpKXthKDAsaSksZC5rLnQobi5nZXQoIm9wdGlvbnNBZnRlclJlbmRlciIpLG51bGwsW2lbMF0sdCE9PWc/dDplXSl9KSxkLmEuVWEodCxjLGZ1bmN0aW9uKGkscixhKXtyZXR1cm4gYS5sZW5ndGgmJihoPWFbMF0uc2VsZWN0ZWQ/W2QuaS5wKGFbMF0pXTpbXSxtPSEwKSxyPXQub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSxpPT09Zz8oZC5hLlhhKHIsbi5nZXQoIm9wdGlvbnNDYXB0aW9uIikpLGQuaS5YKHIsZSkpOihhPW8oaSxuLmdldCgib3B0aW9uc1ZhbHVlIiksaSksZC5pLlgocixkLmEuYyhhKSksaT1vKGksbi5nZXQoIm9wdGlvbnNUZXh0IiksYSksZC5hLlhhKHIsaSkpLFtyXX0saSxsKSxkLmsudChmdW5jdGlvbigpe24uZ2V0KCJ2YWx1ZUFsbG93VW5zZXQiKSYmbi5oYXMoInZhbHVlIik/ZC5pLlgodCxkLmEuYyhuLmdldCgidmFsdWUiKSksITApOih0Lm11bHRpcGxlP2gubGVuZ3RoJiZyKCkubGVuZ3RoPGgubGVuZ3RoOmgubGVuZ3RoJiYwPD10LnNlbGVjdGVkSW5kZXg/ZC5pLnAodC5vcHRpb25zW3Quc2VsZWN0ZWRJbmRleF0pIT09aFswXTpoLmxlbmd0aHx8MDw9dC5zZWxlY3RlZEluZGV4KSYmZC5hLmhhKHQsImNoYW5nZSIpfSksZC5hLlRiKHQpLHMmJjIwPE1hdGguYWJzKHMtdC5zY3JvbGxUb3ApJiYodC5zY3JvbGxUb3A9cyl9fSxkLmQub3B0aW9ucy5QYT1kLmEuZi5MKCksZC5kLnNlbGVjdGVkT3B0aW9ucz17YWZ0ZXI6WyJvcHRpb25zIiwiZm9yZWFjaCJdLGluaXQ6ZnVuY3Rpb24oZSx0LGkpe2QuYS5xKGUsImNoYW5nZSIsZnVuY3Rpb24oKXt2YXIgbj10KCkscj1bXTtkLmEucihlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJvcHRpb24iKSxmdW5jdGlvbihlKXtlLnNlbGVjdGVkJiZyLnB1c2goZC5pLnAoZSkpfSksZC5nLnZhKG4saSwic2VsZWN0ZWRPcHRpb25zIixyKX0pfSx1cGRhdGU6ZnVuY3Rpb24oZSx0KXtpZigic2VsZWN0IiE9ZC5hLkIoZSkpdGhyb3cgRXJyb3IoInZhbHVlcyBiaW5kaW5nIGFwcGxpZXMgb25seSB0byBTRUxFQ1QgZWxlbWVudHMiKTt2YXIgaT1kLmEuYyh0KCkpO2kmJiJudW1iZXIiPT10eXBlb2YgaS5sZW5ndGgmJmQuYS5yKGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIm9wdGlvbiIpLGZ1bmN0aW9uKGUpe3ZhciB0PTA8PWQuYS5sKGksZC5pLnAoZSkpO2QuYS5EYihlLHQpfSl9fSxkLmcuVy5zZWxlY3RlZE9wdGlvbnM9ITAsZC5kLnN0eWxlPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgaT1kLmEuYyh0KCl8fHt9KTtkLmEuQShpLGZ1bmN0aW9uKHQsaSl7aT1kLmEuYyhpKSxlLnN0eWxlW3RdPWl8fCIifSl9fSxkLmQuc3VibWl0PXtpbml0OmZ1bmN0aW9uKGUsdCxpLG4scil7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQoKSl0aHJvdyBFcnJvcigiVGhlIHZhbHVlIGZvciBhIHN1Ym1pdCBiaW5kaW5nIG11c3QgYmUgYSBmdW5jdGlvbiIpO2QuYS5xKGUsInN1Ym1pdCIsZnVuY3Rpb24oaSl7dmFyIG4sbz10KCk7dHJ5e249by5jYWxsKHIuJGRhdGEsZSl9ZmluYWxseXshMCE9PW4mJihpLnByZXZlbnREZWZhdWx0P2kucHJldmVudERlZmF1bHQoKTppLnJldHVyblZhbHVlPSExKX19KX19LGQuZC50ZXh0PXtpbml0OmZ1bmN0aW9uKCl7cmV0dXJue2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX0sdXBkYXRlOmZ1bmN0aW9uKGUsdCl7ZC5hLlhhKGUsdCgpKX19LGQuZS5RLnRleHQ9ITAsZC5kLnVuaXF1ZU5hbWU9e2luaXQ6ZnVuY3Rpb24oZSx0KXtpZih0KCkpe3ZhciBpPSJrb191bmlxdWVfIisgKytkLmQudW5pcXVlTmFtZS5PYjtkLmEuQ2IoZSxpKX19fSxkLmQudW5pcXVlTmFtZS5PYj0wLGQuZC52YWx1ZT17YWZ0ZXI6WyJvcHRpb25zIiwiZm9yZWFjaCJdLGluaXQ6ZnVuY3Rpb24oZSx0LGkpe2Z1bmN0aW9uIG4oKXthPSExO3ZhciBuPXQoKSxyPWQuaS5wKGUpO2QuZy52YShuLGksInZhbHVlIixyKX12YXIgcj1bImNoYW5nZSJdLG89aS5nZXQoInZhbHVlVXBkYXRlIiksYT0hMTtvJiYoInN0cmluZyI9PXR5cGVvZiBvJiYobz1bb10pLGQuYS4kKHIsbykscj1kLmEuaWIocikpLCFkLmEub2F8fCJpbnB1dCIhPWUudGFnTmFtZS50b0xvd2VyQ2FzZSgpfHwidGV4dCIhPWUudHlwZXx8Im9mZiI9PWUuYXV0b2NvbXBsZXRlfHxlLmZvcm0mJiJvZmYiPT1lLmZvcm0uYXV0b2NvbXBsZXRlfHwtMSE9ZC5hLmwociwicHJvcGVydHljaGFuZ2UiKXx8KGQuYS5xKGUsInByb3BlcnR5Y2hhbmdlIixmdW5jdGlvbigpe2E9ITB9KSxkLmEucShlLCJmb2N1cyIsZnVuY3Rpb24oKXthPSExfSksZC5hLnEoZSwiYmx1ciIsZnVuY3Rpb24oKXthJiZuKCl9KSksZC5hLnIocixmdW5jdGlvbih0KXt2YXIgaT1uO2QuYS5rYyh0LCJhZnRlciIpJiYoaT1mdW5jdGlvbigpe3NldFRpbWVvdXQobiwwKX0sdD10LnN1YnN0cmluZyg1KSksZC5hLnEoZSx0LGkpfSl9LHVwZGF0ZTpmdW5jdGlvbihlLHQsaSl7dmFyIG49ZC5hLmModCgpKTtpZih0PWQuaS5wKGUpLG4hPT10KWlmKCJzZWxlY3QiPT09ZC5hLkIoZSkpe3ZhciByPWkuZ2V0KCJ2YWx1ZUFsbG93VW5zZXQiKTtpPWZ1bmN0aW9uKCl7ZC5pLlgoZSxuLHIpfSxpKCkscnx8bj09PWQuaS5wKGUpP3NldFRpbWVvdXQoaSwwKTpkLmsudChkLmEuaGEsbnVsbCxbZSwiY2hhbmdlIl0pfWVsc2UgZC5pLlgoZSxuKX19LGQuZy5XLnZhbHVlPSEwLGQuZC52aXNpYmxlPXt1cGRhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgaT1kLmEuYyh0KCkpLG49Im5vbmUiIT1lLnN0eWxlLmRpc3BsYXk7aSYmIW4/ZS5zdHlsZS5kaXNwbGF5PSIiOiFpJiZuJiYoZS5zdHlsZS5kaXNwbGF5PSJub25lIil9fSxmdW5jdGlvbihlKXtkLmRbZV09e2luaXQ6ZnVuY3Rpb24odCxpLG4scixvKXtyZXR1cm4gZC5kLmV2ZW50LmluaXQuY2FsbCh0aGlzLHQsZnVuY3Rpb24oKXt2YXIgdD17fTtyZXR1cm4gdFtlXT1pKCksdH0sbixyLG8pfX19KCJjbGljayIpLGQuQz1mdW5jdGlvbigpe30sZC5DLnByb3RvdHlwZS5yZW5kZXJUZW1wbGF0ZVNvdXJjZT1mdW5jdGlvbigpe3Rocm93IEVycm9yKCJPdmVycmlkZSByZW5kZXJUZW1wbGF0ZVNvdXJjZSIpfSxkLkMucHJvdG90eXBlLmNyZWF0ZUphdmFTY3JpcHRFdmFsdWF0b3JCbG9jaz1mdW5jdGlvbigpe3Rocm93IEVycm9yKCJPdmVycmlkZSBjcmVhdGVKYXZhU2NyaXB0RXZhbHVhdG9yQmxvY2siKX0sZC5DLnByb3RvdHlwZS5tYWtlVGVtcGxhdGVTb3VyY2U9ZnVuY3Rpb24oZSx0KXtpZigic3RyaW5nIj09dHlwZW9mIGUpe3Q9dHx8aTt2YXIgbj10LmdldEVsZW1lbnRCeUlkKGUpO2lmKCFuKXRocm93IEVycm9yKCJDYW5ub3QgZmluZCB0ZW1wbGF0ZSB3aXRoIElEICIrZSk7cmV0dXJuIG5ldyBkLm4uaihuKX1pZigxPT1lLm5vZGVUeXBlfHw4PT1lLm5vZGVUeXBlKXJldHVybiBuZXcgZC5uLlooZSk7dGhyb3cgRXJyb3IoIlVua25vd24gdGVtcGxhdGUgdHlwZTogIitlKX0sZC5DLnByb3RvdHlwZS5yZW5kZXJUZW1wbGF0ZT1mdW5jdGlvbihlLHQsaSxuKXtyZXR1cm4gZT10aGlzLm1ha2VUZW1wbGF0ZVNvdXJjZShlLG4pLHRoaXMucmVuZGVyVGVtcGxhdGVTb3VyY2UoZSx0LGkpfSxkLkMucHJvdG90eXBlLmlzVGVtcGxhdGVSZXdyaXR0ZW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4hMT09PXRoaXMuYWxsb3dUZW1wbGF0ZVJld3JpdGluZz8hMDp0aGlzLm1ha2VUZW1wbGF0ZVNvdXJjZShlLHQpLmRhdGEoImlzUmV3cml0dGVuIil9LGQuQy5wcm90b3R5cGUucmV3cml0ZVRlbXBsYXRlPWZ1bmN0aW9uKGUsdCxpKXtlPXRoaXMubWFrZVRlbXBsYXRlU291cmNlKGUsaSksdD10KGUudGV4dCgpKSxlLnRleHQodCksZS5kYXRhKCJpc1Jld3JpdHRlbiIsITApfSxkLmIoInRlbXBsYXRlRW5naW5lIixkLkMpLGQuWmE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxpLG4pe2U9ZC5nLlJhKGUpO2Zvcih2YXIgcj1kLmcuYWEsbz0wO288ZS5sZW5ndGg7bysrKXt2YXIgYT1lW29dLmtleTtpZihyLmhhc093blByb3BlcnR5KGEpKXt2YXIgcz1yW2FdO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBzKXtpZihhPXMoZVtvXS52YWx1ZSkpdGhyb3cgRXJyb3IoYSl9ZWxzZSBpZighcyl0aHJvdyBFcnJvcigiVGhpcyB0ZW1wbGF0ZSBlbmdpbmUgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJyIrYSsiJyBiaW5kaW5nIHdpdGhpbiBpdHMgdGVtcGxhdGVzIil9fXJldHVybiBpPSJrby5fX3RyX2FtYnRucyhmdW5jdGlvbigkY29udGV4dCwkZWxlbWVudCl7cmV0dXJuKGZ1bmN0aW9uKCl7cmV0dXJueyAiK2QuZy5xYShlLHt2YWx1ZUFjY2Vzc29yczohMH0pKyIgfSB9KSgpfSwnIitpLnRvTG93ZXJDYXNlKCkrIicpIixuLmNyZWF0ZUphdmFTY3JpcHRFdmFsdWF0b3JCbG9jayhpKSt0fXZhciB0PS8oPChbYS16XStcZCopKD86XHMrKD8hZGF0YS1iaW5kXHMqPVxzKilbYS16MC05XC1dKyg/Oj0oPzpcIlteXCJdKlwifFwnW15cJ10qXCcpKT8pKlxzKylkYXRhLWJpbmRccyo9XHMqKFsiJ10pKFtcc1xTXSo/KVwzL2dpLGk9L1x4M2MhLS1ccyprb1xiXHMqKFtcc1xTXSo/KVxzKi0tXHgzZS9nO3JldHVybntVYjpmdW5jdGlvbihlLHQsaSl7dC5pc1RlbXBsYXRlUmV3cml0dGVuKGUsaSl8fHQucmV3cml0ZVRlbXBsYXRlKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGQuWmEuZGMoZSx0KX0saSl9LGRjOmZ1bmN0aW9uKG4scil7cmV0dXJuIG4ucmVwbGFjZSh0LGZ1bmN0aW9uKHQsaSxuLG8sYSl7cmV0dXJuIGUoYSxpLG4scil9KS5yZXBsYWNlKGksZnVuY3Rpb24odCxpKXtyZXR1cm4gZShpLCI8IS0tIGtvIC0tPiIsIiNjb21tZW50IixyKX0pfSxNYjpmdW5jdGlvbihlLHQpe3JldHVybiBkLncuTmEoZnVuY3Rpb24oaSxuKXt2YXIgcj1pLm5leHRTaWJsaW5nO3ImJnIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXQmJmQueGEocixlLG4pfSl9fX0oKSxkLmIoIl9fdHJfYW1idG5zIixkLlphLk1iKSxmdW5jdGlvbigpe2Qubj17fSxkLm4uaj1mdW5jdGlvbihlKXt0aGlzLmo9ZX0sZC5uLmoucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oKXt2YXIgZT1kLmEuQih0aGlzLmopLGU9InNjcmlwdCI9PT1lPyJ0ZXh0IjoidGV4dGFyZWEiPT09ZT8idmFsdWUiOiJpbm5lckhUTUwiO2lmKDA9PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMualtlXTt2YXIgdD1hcmd1bWVudHNbMF07ImlubmVySFRNTCI9PT1lP2QuYS5WYSh0aGlzLmosdCk6dGhpcy5qW2VdPXR9O3ZhciB0PWQuYS5mLkwoKSsiXyI7ZC5uLmoucHJvdG90eXBlLmRhdGE9ZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP2QuYS5mLmdldCh0aGlzLmosdCtlKTooZC5hLmYuc2V0KHRoaXMuaix0K2UsYXJndW1lbnRzWzFdKSx2b2lkIDApfTt2YXIgaT1kLmEuZi5MKCk7ZC5uLlo9ZnVuY3Rpb24oZSl7dGhpcy5qPWV9LGQubi5aLnByb3RvdHlwZT1uZXcgZC5uLmosZC5uLloucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oKXtpZigwPT1hcmd1bWVudHMubGVuZ3RoKXt2YXIgdD1kLmEuZi5nZXQodGhpcy5qLGkpfHx7fTtyZXR1cm4gdC4kYT09PWUmJnQuQmEmJih0LiRhPXQuQmEuaW5uZXJIVE1MKSx0LiRhfWQuYS5mLnNldCh0aGlzLmosaSx7JGE6YXJndW1lbnRzWzBdfSl9LGQubi5qLnByb3RvdHlwZS5ub2Rlcz1mdW5jdGlvbigpe3JldHVybiAwPT1hcmd1bWVudHMubGVuZ3RoPyhkLmEuZi5nZXQodGhpcy5qLGkpfHx7fSkuQmE6KGQuYS5mLnNldCh0aGlzLmosaSx7QmE6YXJndW1lbnRzWzBdfSksdm9pZCAwKX0sZC5iKCJ0ZW1wbGF0ZVNvdXJjZXMiLGQubiksZC5iKCJ0ZW1wbGF0ZVNvdXJjZXMuZG9tRWxlbWVudCIsZC5uLmopLGQuYigidGVtcGxhdGVTb3VyY2VzLmFub255bW91c1RlbXBsYXRlIixkLm4uWil9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUsdCxpKXt2YXIgbjtmb3IodD1kLmUubmV4dFNpYmxpbmcodCk7ZSYmKG49ZSkhPT10OyllPWQuZS5uZXh0U2libGluZyhuKSxpKG4sZSl9ZnVuY3Rpb24gaShlLGkpe2lmKGUubGVuZ3RoKXt2YXIgbj1lWzBdLHI9ZVtlLmxlbmd0aC0xXSxvPW4ucGFyZW50Tm9kZSxhPWQuSi5pbnN0YW5jZSxzPWEucHJlcHJvY2Vzc05vZGU7aWYocyl7aWYodChuLHIsZnVuY3Rpb24oZSx0KXt2YXIgaT1lLnByZXZpb3VzU2libGluZyxvPXMuY2FsbChhLGUpO28mJihlPT09biYmKG49b1swXXx8dCksZT09PXImJihyPW9bby5sZW5ndGgtMV18fGkpKX0pLGUubGVuZ3RoPTAsIW4pcmV0dXJuO249PT1yP2UucHVzaChuKTooZS5wdXNoKG4sciksZC5hLmVhKGUsbykpfXQobixyLGZ1bmN0aW9uKGUpezEhPT1lLm5vZGVUeXBlJiY4IT09ZS5ub2RlVHlwZXx8ZC5mYihpLGUpfSksdChuLHIsZnVuY3Rpb24oZSl7MSE9PWUubm9kZVR5cGUmJjghPT1lLm5vZGVUeXBlfHxkLncuSWIoZSxbaV0pfSksZC5hLmVhKGUsbyl9fWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGUubm9kZVR5cGU/ZTowPGUubGVuZ3RoP2VbMF06bnVsbH1mdW5jdGlvbiByKGUsdCxyLGEscyl7cz1zfHx7fTt2YXIgbD1lJiZuKGUpLGw9bCYmbC5vd25lckRvY3VtZW50LHU9cy50ZW1wbGF0ZUVuZ2luZXx8bztpZihkLlphLlViKHIsdSxsKSxyPXUucmVuZGVyVGVtcGxhdGUocixhLHMsbCksIm51bWJlciIhPXR5cGVvZiByLmxlbmd0aHx8MDxyLmxlbmd0aCYmIm51bWJlciIhPXR5cGVvZiByWzBdLm5vZGVUeXBlKXRocm93IEVycm9yKCJUZW1wbGF0ZSBlbmdpbmUgbXVzdCByZXR1cm4gYW4gYXJyYXkgb2YgRE9NIG5vZGVzIik7c3dpdGNoKGw9ITEsdCl7Y2FzZSJyZXBsYWNlQ2hpbGRyZW4iOmQuZS5VKGUsciksbD0hMDticmVhaztjYXNlInJlcGxhY2VOb2RlIjpkLmEuQmIoZSxyKSxsPSEwO2JyZWFrO2Nhc2UiaWdub3JlVGFyZ2V0Tm9kZSI6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcigiVW5rbm93biByZW5kZXJNb2RlOiAiK3QpfXJldHVybiBsJiYoaShyLGEpLHMuYWZ0ZXJSZW5kZXImJmQuay50KHMuYWZ0ZXJSZW5kZXIsbnVsbCxbcixhLiRkYXRhXSkpLHJ9dmFyIG87ZC5XYT1mdW5jdGlvbih0KXtpZih0IT1lJiYhKHQgaW5zdGFuY2VvZiBkLkMpKXRocm93IEVycm9yKCJ0ZW1wbGF0ZUVuZ2luZSBtdXN0IGluaGVyaXQgZnJvbSBrby50ZW1wbGF0ZUVuZ2luZSIpO289dH0sZC5UYT1mdW5jdGlvbih0LGksYSxzLGwpe2lmKGE9YXx8e30sKGEudGVtcGxhdGVFbmdpbmV8fG8pPT1lKXRocm93IEVycm9yKCJTZXQgYSB0ZW1wbGF0ZSBlbmdpbmUgYmVmb3JlIGNhbGxpbmcgcmVuZGVyVGVtcGxhdGUiKTtpZihsPWx8fCJyZXBsYWNlQ2hpbGRyZW4iLHMpe3ZhciB1PW4ocyk7cmV0dXJuIGQuaChmdW5jdGlvbigpe3ZhciBlPWkmJmkgaW5zdGFuY2VvZiBkLkk/aTpuZXcgZC5JKGQuYS5jKGkpKSxvPWQudih0KT90KCk6ImZ1bmN0aW9uIj09dHlwZW9mIHQ/dChlLiRkYXRhLGUpOnQsZT1yKHMsbCxvLGUsYSk7InJlcGxhY2VOb2RlIj09bCYmKHM9ZSx1PW4ocykpfSxudWxsLHtEYTpmdW5jdGlvbigpe3JldHVybiF1fHwhZC5hLkVhKHUpfSxHOnUmJiJyZXBsYWNlTm9kZSI9PWw/dS5wYXJlbnROb2RlOnV9KX1yZXR1cm4gZC53Lk5hKGZ1bmN0aW9uKGUpe2QuVGEodCxpLGEsZSwicmVwbGFjZU5vZGUiKX0pfSxkLmpjPWZ1bmN0aW9uKHQsbixvLGEscyl7ZnVuY3Rpb24gbChlLHQpe2kodCxjKSxvLmFmdGVyUmVuZGVyJiZvLmFmdGVyUmVuZGVyKHQsZSl9ZnVuY3Rpb24gdShlLGkpe2M9cy5jcmVhdGVDaGlsZENvbnRleHQoZSxvLmFzLGZ1bmN0aW9uKGUpe2UuJGluZGV4PWl9KTt2YXIgbj0iZnVuY3Rpb24iPT10eXBlb2YgdD90KGUsYyk6dDtyZXR1cm4gcihudWxsLCJpZ25vcmVUYXJnZXROb2RlIixuLGMsbyl9dmFyIGM7cmV0dXJuIGQuaChmdW5jdGlvbigpe3ZhciB0PWQuYS5jKG4pfHxbXTsidW5kZWZpbmVkIj09dHlwZW9mIHQubGVuZ3RoJiYodD1bdF0pLHQ9ZC5hLmxhKHQsZnVuY3Rpb24odCl7cmV0dXJuIG8uaW5jbHVkZURlc3Ryb3llZHx8dD09PWV8fG51bGw9PT10fHwhZC5hLmModC5fZGVzdHJveSl9KSxkLmsudChkLmEuVWEsbnVsbCxbYSx0LHUsbyxsXSl9LG51bGwse0c6YX0pfTt2YXIgYT1kLmEuZi5MKCk7ZC5kLnRlbXBsYXRlPXtpbml0OmZ1bmN0aW9uKGUsdCl7dmFyIGk9ZC5hLmModCgpKTtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGl8fGkubmFtZT9kLmUuZGEoZSk6KGk9ZC5lLmNoaWxkTm9kZXMoZSksaT1kLmEuZWMoaSksbmV3IGQubi5aKGUpLm5vZGVzKGkpKSx7Y29udHJvbHNEZXNjZW5kYW50QmluZGluZ3M6ITB9fSx1cGRhdGU6ZnVuY3Rpb24odCxpLG4scixvKXt2YXIgcyxsPWkoKTtpPWQuYS5jKGwpLG49ITAscj1udWxsLCJzdHJpbmciPT10eXBlb2YgaT9pPXt9OihsPWkubmFtZSwiaWYiaW4gaSYmKG49ZC5hLmMoaVsiaWYiXSkpLG4mJiJpZm5vdCJpbiBpJiYobj0hZC5hLmMoaS5pZm5vdCkpLHM9ZC5hLmMoaS5kYXRhKSksImZvcmVhY2giaW4gaT9yPWQuamMobHx8dCxuJiZpLmZvcmVhY2h8fFtdLGksdCxvKTpuPyhvPSJkYXRhImluIGk/by5jcmVhdGVDaGlsZENvbnRleHQocyxpLmFzKTpvLHI9ZC5UYShsfHx0LG8saSx0KSk6ZC5lLmRhKHQpLG89ciwocz1kLmEuZi5nZXQodCxhKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBzLkYmJnMuRigpLGQuYS5mLnNldCh0LGEsbyYmby5nYSgpP286ZSl9fSxkLmcuYWEudGVtcGxhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9ZC5nLlJhKGUpLDE9PWUubGVuZ3RoJiZlWzBdLnVua25vd258fGQuZy5iYyhlLCJuYW1lIik/bnVsbDoiVGhpcyB0ZW1wbGF0ZSBlbmdpbmUgZG9lcyBub3Qgc3VwcG9ydCBhbm9ueW1vdXMgdGVtcGxhdGVzIG5lc3RlZCB3aXRoaW4gaXRzIHRlbXBsYXRlcyJ9LGQuZS5RLnRlbXBsYXRlPSEwfSgpLGQuYigic2V0VGVtcGxhdGVFbmdpbmUiLGQuV2EpLGQuYigicmVuZGVyVGVtcGxhdGUiLGQuVGEpLGQuYS5uYj1mdW5jdGlvbihlLHQsaSl7aWYoZS5sZW5ndGgmJnQubGVuZ3RoKXt2YXIgbixyLG8sYSxzO2ZvcihuPXI9MDsoIWl8fGk+bikmJihhPWVbcl0pOysrcil7Zm9yKG89MDtzPXRbb107KytvKWlmKGEudmFsdWU9PT1zLnZhbHVlKXthLm1vdmVkPXMuaW5kZXgscy5tb3ZlZD1hLmluZGV4LHQuc3BsaWNlKG8sMSksbj1vPTA7YnJlYWt9bis9b319fSxkLmEuQWE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxpLG4scil7dmFyIG8sYSxzLGwsdSxjPU1hdGgubWluLGg9TWF0aC5tYXgsbT1bXSxmPWUubGVuZ3RoLHA9dC5sZW5ndGgsdj1wLWZ8fDEsZz1mK3ArMTtmb3Iobz0wO2Y+PW87bysrKWZvcihsPXMsbS5wdXNoKHM9W10pLHU9YyhwLG8rdiksYT1oKDAsby0xKTt1Pj1hO2ErKylzW2FdPWE/bz9lW28tMV09PT10W2EtMV0/bFthLTFdOmMobFthXXx8ZyxzW2EtMV18fGcpKzE6YSsxOm8rMTtmb3IoYz1bXSxoPVtdLHY9W10sbz1mLGE9cDtvfHxhOylwPW1bb11bYV0tMSxhJiZwPT09bVtvXVthLTFdP2gucHVzaChjW2MubGVuZ3RoXT17c3RhdHVzOmksdmFsdWU6dFstLWFdLGluZGV4OmF9KTpvJiZwPT09bVtvLTFdW2FdP3YucHVzaChjW2MubGVuZ3RoXT17c3RhdHVzOm4sdmFsdWU6ZVstLW9dLGluZGV4Om99KTooLS1hLC0tbyxyLnNwYXJzZXx8Yy5wdXNoKHtzdGF0dXM6InJldGFpbmVkIix2YWx1ZTp0W2FdfSkpO3JldHVybiBkLmEubmIoaCx2LDEwKmYpLGMucmV2ZXJzZSgpfXJldHVybiBmdW5jdGlvbih0LGksbil7cmV0dXJuIG49ImJvb2xlYW4iPT10eXBlb2Ygbj97ZG9udExpbWl0TW92ZXM6bn06bnx8e30sdD10fHxbXSxpPWl8fFtdLHQubGVuZ3RoPD1pLmxlbmd0aD9lKHQsaSwiYWRkZWQiLCJkZWxldGVkIixuKTplKGksdCwiZGVsZXRlZCIsImFkZGVkIixuKX19KCksZC5iKCJ1dGlscy5jb21wYXJlQXJyYXlzIixkLmEuQWEpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGksbixyLG8pe3ZhciBhPVtdLHM9ZC5oKGZ1bmN0aW9uKCl7dmFyIGU9aShuLG8sZC5hLmVhKGEsdCkpfHxbXTsKMDxhLmxlbmd0aCYmKGQuYS5CYihhLGUpLHImJmQuay50KHIsbnVsbCxbbixlLG9dKSksYS5sZW5ndGg9MCxkLmEuJChhLGUpfSxudWxsLHtHOnQsRGE6ZnVuY3Rpb24oKXtyZXR1cm4hZC5hLmViKGEpfX0pO3JldHVybntTOmEsaDpzLmdhKCk/czplfX12YXIgaT1kLmEuZi5MKCk7ZC5hLlVhPWZ1bmN0aW9uKG4scixvLGEscyl7ZnVuY3Rpb24gbChlLHQpe0M9aFt0XSxnIT09dCYmKGJbZV09QyksQy5JYShnKyspLGQuYS5lYShDLlMsbikscC5wdXNoKEMpLHkucHVzaChDKX1mdW5jdGlvbiB1KGUsdCl7aWYoZSlmb3IodmFyIGk9MCxuPXQubGVuZ3RoO24+aTtpKyspdFtpXSYmZC5hLnIodFtpXS5TLGZ1bmN0aW9uKG4pe2UobixpLHRbaV0ua2EpfSl9cj1yfHxbXSxhPWF8fHt9O3ZhciBjPWQuYS5mLmdldChuLGkpPT09ZSxoPWQuYS5mLmdldChuLGkpfHxbXSxtPWQuYS55YShoLGZ1bmN0aW9uKGUpe3JldHVybiBlLmthfSksZj1kLmEuQWEobSxyLGEuZG9udExpbWl0TW92ZXMpLHA9W10sdj0wLGc9MCxfPVtdLHk9W107cj1bXTtmb3IodmFyIEMsdyxFLGI9W10sbT1bXSxTPTA7dz1mW1NdO1MrKylzd2l0Y2goRT13Lm1vdmVkLHcuc3RhdHVzKXtjYXNlImRlbGV0ZWQiOkU9PT1lJiYoQz1oW3ZdLEMuaCYmQy5oLkYoKSxfLnB1c2guYXBwbHkoXyxkLmEuZWEoQy5TLG4pKSxhLmJlZm9yZVJlbW92ZSYmKHJbU109Qyx5LnB1c2goQykpKSx2Kys7YnJlYWs7Y2FzZSJyZXRhaW5lZCI6bChTLHYrKyk7YnJlYWs7Y2FzZSJhZGRlZCI6RSE9PWU/bChTLEUpOihDPXtrYTp3LnZhbHVlLElhOmQubShnKyspfSxwLnB1c2goQykseS5wdXNoKEMpLGN8fChtW1NdPUMpKX11KGEuYmVmb3JlTW92ZSxiKSxkLmEucihfLGEuYmVmb3JlUmVtb3ZlP2QuTTpkLnJlbW92ZU5vZGUpO2Zvcih2YXIgVCxTPTAsYz1kLmUuZmlyc3RDaGlsZChuKTtDPXlbU107UysrKXtmb3IoQy5TfHxkLmEuZXh0ZW5kKEMsdChuLG8sQy5rYSxzLEMuSWEpKSx2PTA7Zj1DLlNbdl07Yz1mLm5leHRTaWJsaW5nLFQ9Zix2KyspZiE9PWMmJmQuZS5yYihuLGYsVCk7IUMuWmImJnMmJihzKEMua2EsQy5TLEMuSWEpLEMuWmI9ITApfXUoYS5iZWZvcmVSZW1vdmUsciksdShhLmFmdGVyTW92ZSxiKSx1KGEuYWZ0ZXJBZGQsbSksZC5hLmYuc2V0KG4saSxwKX19KCksZC5iKCJ1dGlscy5zZXREb21Ob2RlQ2hpbGRyZW5Gcm9tQXJyYXlNYXBwaW5nIixkLmEuVWEpLGQuSz1mdW5jdGlvbigpe3RoaXMuYWxsb3dUZW1wbGF0ZVJld3JpdGluZz0hMX0sZC5LLnByb3RvdHlwZT1uZXcgZC5DLGQuSy5wcm90b3R5cGUucmVuZGVyVGVtcGxhdGVTb3VyY2U9ZnVuY3Rpb24oZSl7dmFyIHQ9KDk+ZC5hLm9hPzA6ZS5ub2Rlcyk/ZS5ub2RlcygpOm51bGw7cmV0dXJuIHQ/ZC5hLlIodC5jbG9uZU5vZGUoITApLmNoaWxkTm9kZXMpOihlPWUudGV4dCgpLGQuYS5RYShlKSl9LGQuSy5KYT1uZXcgZC5LLGQuV2EoZC5LLkphKSxkLmIoIm5hdGl2ZVRlbXBsYXRlRW5naW5lIixkLkspLGZ1bmN0aW9uKCl7ZC5MYT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuYWM9ZnVuY3Rpb24oKXtpZighcnx8IXIudG1wbClyZXR1cm4gMDt0cnl7aWYoMDw9ci50bXBsLnRhZy50bXBsLm9wZW4udG9TdHJpbmcoKS5pbmRleE9mKCJfXyIpKXJldHVybiAyfWNhdGNoKGUpe31yZXR1cm4gMX0oKTt0aGlzLnJlbmRlclRlbXBsYXRlU291cmNlPWZ1bmN0aW9uKHQsbixvKXtpZihvPW98fHt9LDI+ZSl0aHJvdyBFcnJvcigiWW91ciB2ZXJzaW9uIG9mIGpRdWVyeS50bXBsIGlzIHRvbyBvbGQuIFBsZWFzZSB1cGdyYWRlIHRvIGpRdWVyeS50bXBsIDEuMC4wcHJlIG9yIGxhdGVyLiIpO3ZhciBhPXQuZGF0YSgicHJlY29tcGlsZWQiKTtyZXR1cm4gYXx8KGE9dC50ZXh0KCl8fCIiLGE9ci50ZW1wbGF0ZShudWxsLCJ7e2tvX3dpdGggJGl0ZW0ua29CaW5kaW5nQ29udGV4dH19IithKyJ7ey9rb193aXRofX0iKSx0LmRhdGEoInByZWNvbXBpbGVkIixhKSksdD1bbi4kZGF0YV0sbj1yLmV4dGVuZCh7a29CaW5kaW5nQ29udGV4dDpufSxvLnRlbXBsYXRlT3B0aW9ucyksbj1yLnRtcGwoYSx0LG4pLG4uYXBwZW5kVG8oaS5jcmVhdGVFbGVtZW50KCJkaXYiKSksci5mcmFnbWVudHM9e30sbn0sdGhpcy5jcmVhdGVKYXZhU2NyaXB0RXZhbHVhdG9yQmxvY2s9ZnVuY3Rpb24oZSl7cmV0dXJuInt7a29fY29kZSAoKGZ1bmN0aW9uKCkgeyByZXR1cm4gIitlKyIgfSkoKSkgfX0ifSx0aGlzLmFkZFRlbXBsYXRlPWZ1bmN0aW9uKGUsdCl7aS53cml0ZSgiPHNjcmlwdCB0eXBlPSd0ZXh0L2h0bWwnIGlkPSciK2UrIic+Iit0KyI8L3NjcmlwdD4iKX0sZT4wJiYoci50bXBsLnRhZy5rb19jb2RlPXtvcGVuOiJfXy5wdXNoKCQxIHx8ICcnKTsifSxyLnRtcGwudGFnLmtvX3dpdGg9e29wZW46IndpdGgoJDEpIHsiLGNsb3NlOiJ9ICJ9KX0sZC5MYS5wcm90b3R5cGU9bmV3IGQuQzt2YXIgZT1uZXcgZC5MYTswPGUuYWMmJmQuV2EoZSksZC5iKCJqcXVlcnlUbXBsVGVtcGxhdGVFbmdpbmUiLGQuTGEpfSgpfSl9KCl9KCksZGVmaW5lKCJUaGlyZFBhcnR5L2tub2Nrb3V0LWVzNSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZShlLGkpe2lmKCFlKXRocm93IG5ldyBFcnJvcigiV2hlbiBjYWxsaW5nIGtvLnRyYWNrLCB5b3UgbXVzdCBwYXNzIGFuIG9iamVjdCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyLiIpO3ZhciByPXRoaXMsbz10KGUsITApO3JldHVybiBpPWl8fE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGUpLGkuZm9yRWFjaChmdW5jdGlvbih0KXtpZih0IT09ZCYmdCE9PWgmJiEodCBpbiBvKSl7dmFyIGk9ZVt0XSxhPWkgaW5zdGFuY2VvZiBBcnJheSxzPXIuaXNPYnNlcnZhYmxlKGkpP2k6YT9yLm9ic2VydmFibGVBcnJheShpKTpyLm9ic2VydmFibGUoaSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OnMsc2V0OnIuaXNXcml0ZWFibGVPYnNlcnZhYmxlKHMpP3M6dm9pZCAwfSksb1t0XT1zLGEmJm4ocixzKX19KSxlfWZ1bmN0aW9uIHQoZSx0KXt2YXIgaT1lW2RdO3JldHVybiFpJiZ0JiYoaT17fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxkLHt2YWx1ZTppfSkpLGl9ZnVuY3Rpb24gaSh0LGksbil7dmFyIHI9dGhpcyxvPXtvd25lcjp0LGRlZmVyRXZhbHVhdGlvbjohMH07aWYoImZ1bmN0aW9uIj09dHlwZW9mIG4pby5yZWFkPW47ZWxzZXtpZigidmFsdWUiaW4gbil0aHJvdyBuZXcgRXJyb3IoJ0ZvciBrby5kZWZpbmVQcm9wZXJ0eSwgeW91IG11c3Qgbm90IHNwZWNpZnkgYSAidmFsdWUiIGZvciB0aGUgcHJvcGVydHkuIFlvdSBtdXN0IHByb3ZpZGUgYSAiZ2V0IiBmdW5jdGlvbi4nKTtpZigiZnVuY3Rpb24iIT10eXBlb2Ygbi5nZXQpdGhyb3cgbmV3IEVycm9yKCdGb3Iga28uZGVmaW5lUHJvcGVydHksIHRoZSB0aGlyZCBwYXJhbWV0ZXIgbXVzdCBiZSBlaXRoZXIgYW4gZXZhbHVhdG9yIGZ1bmN0aW9uLCBvciBhbiBvcHRpb25zIG9iamVjdCBjb250YWluaW5nIGEgZnVuY3Rpb24gY2FsbGVkICJnZXQiLicpO28ucmVhZD1uLmdldCxvLndyaXRlPW4uc2V0fXJldHVybiB0W2ldPXIuY29tcHV0ZWQobyksZS5jYWxsKHIsdCxbaV0pLHR9ZnVuY3Rpb24gbihlLHQpe3ZhciBpPW51bGw7ZS5jb21wdXRlZChmdW5jdGlvbigpe2kmJihpLmRpc3Bvc2UoKSxpPW51bGwpO3ZhciBuPXQoKTtuIGluc3RhbmNlb2YgQXJyYXkmJihpPXIoZSx0LG4pKX0pfWZ1bmN0aW9uIHIoZSx0LGkpe3ZhciBuPW8oZSxpKTtyZXR1cm4gbi5zdWJzY3JpYmUodCl9ZnVuY3Rpb24gbyhlLHQpe3ZhciBpPXRbaF07aWYoIWkpe2k9bmV3IGUuc3Vic2NyaWJhYmxlLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGgse3ZhbHVlOml9KTt2YXIgbj17fTthKHQsaSxuKSxzKGUsdCxpLG4pfXJldHVybiBpfWZ1bmN0aW9uIGEoZSx0LGkpe1sicG9wIiwicHVzaCIsInJldmVyc2UiLCJzaGlmdCIsInNvcnQiLCJzcGxpY2UiLCJ1bnNoaWZ0Il0uZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgcj1lW25dO2Vbbl09ZnVuY3Rpb24oKXt2YXIgZT1yLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gaS5wYXVzZSE9PSEwJiZ0Lm5vdGlmeVN1YnNjcmliZXJzKHRoaXMpLGV9fSl9ZnVuY3Rpb24gcyhlLHQsaSxuKXtbInJlbW92ZSIsInJlbW92ZUFsbCIsImRlc3Ryb3kiLCJkZXN0cm95QWxsIiwicmVwbGFjZSJdLmZvckVhY2goZnVuY3Rpb24ocil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQscix7ZW51bWVyYWJsZTohMSx2YWx1ZTpmdW5jdGlvbigpe3ZhciBvO24ucGF1c2U9ITA7dHJ5e289ZS5vYnNlcnZhYmxlQXJyYXkuZm5bcl0uYXBwbHkoZS5vYnNlcnZhYmxlQXJyYXkodCksYXJndW1lbnRzKX1maW5hbGx5e24ucGF1c2U9ITF9cmV0dXJuIGkubm90aWZ5U3Vic2NyaWJlcnModCksb319KX0pfWZ1bmN0aW9uIGwoZSxpKXtpZighZSlyZXR1cm4gbnVsbDt2YXIgbj10KGUsITEpO3JldHVybiBuJiZuW2ldfHxudWxsfWZ1bmN0aW9uIHUoZSx0KXt2YXIgaT1sKGUsdCk7aSYmaS52YWx1ZUhhc011dGF0ZWQoKX1mdW5jdGlvbiBjKHQpe3QudHJhY2s9ZSx0LmdldE9ic2VydmFibGU9bCx0LnZhbHVlSGFzTXV0YXRlZD11LHQuZGVmaW5lUHJvcGVydHk9aX12YXIgZD0iX19rbm9ja291dE9ic2VydmFibGVzIixoPSJfX2tub2Nrb3V0U3Vic2NyaWJhYmxlIjtyZXR1cm57YXR0YWNoVG9LbzpjfX0pLGRlZmluZSgiV2lkZ2V0cy9TdmdQYXRoQmluZGluZ0hhbmRsZXIiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsdD0iY2VzaXVtLXN2Z1BhdGgtc3ZnIixpPXtyZWdpc3RlcjpmdW5jdGlvbihpKXtpLmJpbmRpbmdIYW5kbGVycy5jZXNpdW1TdmdQYXRoPXtpbml0OmZ1bmN0aW9uKG4scil7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGUsInN2ZzpzdmciKTtvLnNldEF0dHJpYnV0ZSgiY2xhc3MiLHQpO3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhlLCJwYXRoIik7cmV0dXJuIG8uYXBwZW5kQ2hpbGQoYSksaS52aXJ0dWFsRWxlbWVudHMuc2V0RG9tTm9kZUNoaWxkcmVuKG4sW29dKSxpLmNvbXB1dGVkKHtyZWFkOmZ1bmN0aW9uKCl7dmFyIGU9aS51bndyYXAocigpKTthLnNldEF0dHJpYnV0ZSgiZCIsaS51bndyYXAoZS5wYXRoKSk7dmFyIG49aS51bndyYXAoZS53aWR0aCkscz1pLnVud3JhcChlLmhlaWdodCk7by5zZXRBdHRyaWJ1dGUoIndpZHRoIixuKSxvLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IixzKSxvLnNldEF0dHJpYnV0ZSgidmlld0JveCIsIjAgMCAiK24rIiAiK3MpLGUuY3NzJiZvLnNldEF0dHJpYnV0ZSgiY2xhc3MiLHQrIiAiK2kudW53cmFwKGUuY3NzKSl9LGRpc3Bvc2VXaGVuTm9kZUlzUmVtb3ZlZDpufSkse2NvbnRyb2xzRGVzY2VuZGFudEJpbmRpbmdzOiEwfX19LGkudmlydHVhbEVsZW1lbnRzLmFsbG93ZWRCaW5kaW5ncy5jZXNpdW1TdmdQYXRoPSEwfX07cmV0dXJuIGl9KSxkZWZpbmUoIlRoaXJkUGFydHkva25vY2tvdXQiLFsiLi9rbm9ja291dC0zLjEuMCIsIi4va25vY2tvdXQtZXM1IiwiLi4vV2lkZ2V0cy9TdmdQYXRoQmluZGluZ0hhbmRsZXIiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3JldHVybiB0LmF0dGFjaFRvS28oZSksaS5yZWdpc3RlcihlKSxlfSksZGVmaW5lKCJXaWRnZXRzL2dldEVsZW1lbnQiLFsiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUpe2lmKCJzdHJpbmciPT10eXBlb2YgZSl7dmFyIHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZSk7ZT10fXJldHVybiBlfTtyZXR1cm4gZX0pLGRlZmluZSgiV2lkZ2V0cy9zdWJzY3JpYmVBbmRFdmFsdWF0ZSIsWyIuLi9UaGlyZFBhcnR5L2tub2Nrb3V0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQsaSxuLHIsbyl7cmV0dXJuIG4uY2FsbChyLHRbaV0pLGUuZ2V0T2JzZXJ2YWJsZSh0LGkpLnN1YnNjcmliZShuLHIsbyl9O3JldHVybiB0fSksZGVmaW5lKCJXaWRnZXRzL0FuaW1hdGlvbi9BbmltYXRpb24iLFsiLi4vLi4vQ29yZS9Db2xvciIsIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9nZXRFbGVtZW50IiwiLi4vc3Vic2NyaWJlQW5kRXZhbHVhdGUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcyh0KXtyZXR1cm4gZS5mcm9tQ3NzQ29sb3JTdHJpbmcod2luZG93LmdldENvbXB1dGVkU3R5bGUodCkuZ2V0UHJvcGVydHlWYWx1ZSgiY29sb3IiKSl9ZnVuY3Rpb24gbChlKXt2YXIgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlModixlLnRhZ05hbWUpO2Zvcih2YXIgaSBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkoaSkmJiJ0YWdOYW1lIiE9PWkpaWYoImNoaWxkcmVuIj09PWkpe3ZhciBuLHI9ZS5jaGlsZHJlbi5sZW5ndGg7Zm9yKG49MDtyPm47KytuKXQuYXBwZW5kQ2hpbGQobChlLmNoaWxkcmVuW25dKSl9ZWxzZSAwPT09aS5pbmRleE9mKCJ4bGluazoiKT90LnNldEF0dHJpYnV0ZU5TKGcsaS5zdWJzdHJpbmcoNiksZVtpXSk6InRleHRDb250ZW50Ij09PWk/dC50ZXh0Q29udGVudD1lW2ldOnQuc2V0QXR0cmlidXRlKGksZVtpXSk7cmV0dXJuIHR9ZnVuY3Rpb24gdShlLHQsaSl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHYsInRleHQiKTtuLnNldEF0dHJpYnV0ZSgieCIsZSksbi5zZXRBdHRyaWJ1dGUoInkiLHQpLG4uc2V0QXR0cmlidXRlKCJjbGFzcyIsImNlc2l1bS1hbmltYXRpb24tc3ZnVGV4dCIpO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh2LCJ0c3BhbiIpO3JldHVybiByLnRleHRDb250ZW50PWksbi5hcHBlbmRDaGlsZChyKSxufWZ1bmN0aW9uIGMoZSx0LGkpe2Uuc2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iLCJ0cmFuc2xhdGUoMTAwLDEwMCkgcm90YXRlKCIraSsiKSIpLHQuc2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iLCJyb3RhdGUoIitpKyIpIil9ZnVuY3Rpb24gZChlLHQpe3ZhciBpPXQuYWxwaGEsbj0xLWk7cmV0dXJuIHgucmVkPWUucmVkKm4rdC5yZWQqaSx4LmdyZWVuPWUuZ3JlZW4qbit0LmdyZWVuKmkseC5ibHVlPWUuYmx1ZSpuK3QuYmx1ZSppLHgudG9Dc3NDb2xvclN0cmluZygpfWZ1bmN0aW9uIGgoZSx0LGkpe3ZhciBuPXt0YWdOYW1lOiJnIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLXJlY3RCdXR0b24iLHRyYW5zZm9ybToidHJhbnNsYXRlKCIrZSsiLCIrdCsiKSIsY2hpbGRyZW46W3t0YWdOYW1lOiJyZWN0IiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbkdsb3ciLHdpZHRoOjMyLGhlaWdodDozMixyeDoyLHJ5OjJ9LHt0YWdOYW1lOiJyZWN0IiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbk1haW4iLHdpZHRoOjMyLGhlaWdodDozMixyeDo0LHJ5OjR9LHt0YWdOYW1lOiJ1c2UiLCJjbGFzcyI6ImNlc2l1bS1hbmltYXRpb24tYnV0dG9uUGF0aCIsInhsaW5rOmhyZWYiOml9LHt0YWdOYW1lOiJ0aXRsZSIsdGV4dENvbnRlbnQ6IiJ9XX07cmV0dXJuIGwobil9ZnVuY3Rpb24gbShlLHQsaSl7dmFyIG49e3RhZ05hbWU6ImciLCJjbGFzcyI6ImNlc2l1bS1hbmltYXRpb24tcmVjdEJ1dHRvbiIsdHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKyIsIit0KyIpIixjaGlsZHJlbjpbe3RhZ05hbWU6InVzZSIsImNsYXNzIjoiY2VzaXVtLWFuaW1hdGlvbi1idXR0b25HbG93IiwieGxpbms6aHJlZiI6IiNhbmltYXRpb25fcGF0aFdpbmdCdXR0b24ifSx7dGFnTmFtZToidXNlIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbk1haW4iLCJ4bGluazpocmVmIjoiI2FuaW1hdGlvbl9wYXRoV2luZ0J1dHRvbiJ9LHt0YWdOYW1lOiJ1c2UiLCJjbGFzcyI6ImNlc2l1bS1hbmltYXRpb24tYnV0dG9uUGF0aCIsInhsaW5rOmhyZWYiOml9LHt0YWdOYW1lOiJ0aXRsZSIsdGV4dENvbnRlbnQ6IiJ9XX07cmV0dXJuIGwobil9ZnVuY3Rpb24gZihlLHQpe3ZhciBpPWUuX3ZpZXdNb2RlbCxuPWkuc2h1dHRsZVJpbmdEcmFnZ2luZztpZighbnx8cD09PWUpaWYoIm1vdXNlZG93biI9PT10LnR5cGV8fG4mJiJtb3VzZW1vdmUiPT09dC50eXBlfHwidG91Y2hzdGFydCI9PT10LnR5cGUmJjE9PT10LnRvdWNoZXMubGVuZ3RofHxuJiYidG91Y2htb3ZlIj09PXQudHlwZSYmMT09PXQudG91Y2hlcy5sZW5ndGgpe3ZhciByLG8sYT1lLl9jZW50ZXJYLHM9ZS5fY2VudGVyWSxsPWUuX3N2Z05vZGUsdT1sLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKCJ0b3VjaHN0YXJ0Ij09PXQudHlwZXx8InRvdWNobW92ZSI9PT10LnR5cGU/KHI9dC50b3VjaGVzWzBdLmNsaWVudFgsbz10LnRvdWNoZXNbMF0uY2xpZW50WSk6KHI9dC5jbGllbnRYLG89dC5jbGllbnRZKSwhbiYmKHI+dS5yaWdodHx8cjx1LmxlZnR8fG88dS50b3B8fG8+dS5ib3R0b20pKXJldHVybjt2YXIgYz1lLl9zaHV0dGxlUmluZ1BvaW50ZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZD1yLWEtdS5sZWZ0LGg9by1zLXUudG9wLG09MTgwKk1hdGguYXRhbjIoaCxkKS9NYXRoLlBJKzkwO20+MTgwJiYobS09MzYwKTt2YXIgZj1pLnNodXR0bGVSaW5nQW5nbGU7bnx8cjxjLnJpZ2h0JiZyPmMubGVmdCYmbz5jLnRvcCYmbzxjLmJvdHRvbT8ocD1lLGkuc2h1dHRsZVJpbmdEcmFnZ2luZz0hMCxpLnNodXR0bGVSaW5nQW5nbGU9bSk6Zj5tP2kuc2xvd2VyKCk6bT5mJiZpLmZhc3RlcigpLHQucHJldmVudERlZmF1bHQoKX1lbHNlIHA9dm9pZCAwLGkuc2h1dHRsZVJpbmdEcmFnZ2luZz0hMX12YXIgcCx2PSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsZz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIsXz1lLmZyb21Dc3NDb2xvclN0cmluZygicmdiYSgyNDcsMjUwLDI1NSwwLjM4NCkiKSx5PWUuZnJvbUNzc0NvbG9yU3RyaW5nKCJyZ2JhKDE0MywxOTEsMjU1LDAuMjE2KSIpLEM9ZS5mcm9tQ3NzQ29sb3JTdHJpbmcoInJnYmEoMTUzLDE5NywyNTUsMC4wOTgpIiksdz1lLmZyb21Dc3NDb2xvclN0cmluZygicmdiYSgyNTUsMjU1LDI1NSwwLjA4NikiKSxFPWUuZnJvbUNzc0NvbG9yU3RyaW5nKCJyZ2JhKDI1NSwyNTUsMjU1LDAuMjY3KSIpLGI9ZS5mcm9tQ3NzQ29sb3JTdHJpbmcoInJnYmEoMjU1LDI1NSwyNTUsMCkiKSxTPWUuZnJvbUNzc0NvbG9yU3RyaW5nKCJyZ2JhKDY2LDY3LDY4LDAuMykiKSxUPWUuZnJvbUNzc0NvbG9yU3RyaW5nKCJyZ2JhKDAsMCwwLDAuNSkiKSx4PW5ldyBlLEE9ZnVuY3Rpb24oZSx0KXt0aGlzLl92aWV3TW9kZWw9dCx0aGlzLnN2Z0VsZW1lbnQ9ZSx0aGlzLl9lbmFibGVkPXZvaWQgMCx0aGlzLl90b2dnbGVkPXZvaWQgMDt2YXIgaT10aGlzO3RoaXMuX2NsaWNrRnVuY3Rpb249ZnVuY3Rpb24oKXt2YXIgZT1pLl92aWV3TW9kZWwuY29tbWFuZDtlLmNhbkV4ZWN1dGUmJmUoKX0sZS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsdGhpcy5fY2xpY2tGdW5jdGlvbiwhMCksdGhpcy5fc3Vic2NyaXB0aW9ucz1bYSh0LCJ0b2dnbGVkIix0aGlzLnNldFRvZ2dsZWQsdGhpcyksYSh0LCJ0b29sdGlwIix0aGlzLnNldFRvb2x0aXAsdGhpcyksYSh0LmNvbW1hbmQsImNhbkV4ZWN1dGUiLHRoaXMuc2V0RW5hYmxlZCx0aGlzKV19O0EucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLnN2Z0VsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuX2NsaWNrRnVuY3Rpb24sITApO2Zvcih2YXIgZT10aGlzLl9zdWJzY3JpcHRpb25zLHQ9MCxpPWUubGVuZ3RoO2k+dDt0KyspZVt0XS5kaXNwb3NlKCk7bih0aGlzKX0sQS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sQS5wcm90b3R5cGUuc2V0RW5hYmxlZD1mdW5jdGlvbihlKXtpZih0aGlzLl9lbmFibGVkIT09ZSl7aWYodGhpcy5fZW5hYmxlZD1lLCFlKXJldHVybiB0aGlzLnN2Z0VsZW1lbnQuc2V0QXR0cmlidXRlKCJjbGFzcyIsImNlc2l1bS1hbmltYXRpb24tYnV0dG9uRGlzYWJsZWQiKSx2b2lkIDA7aWYodGhpcy5fdG9nZ2xlZClyZXR1cm4gdGhpcy5zdmdFbGVtZW50LnNldEF0dHJpYnV0ZSgiY2xhc3MiLCJjZXNpdW0tYW5pbWF0aW9uLXJlY3RCdXR0b24gY2VzaXVtLWFuaW1hdGlvbi1idXR0b25Ub2dnbGVkIiksdm9pZCAwO3RoaXMuc3ZnRWxlbWVudC5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1yZWN0QnV0dG9uIil9fSxBLnByb3RvdHlwZS5zZXRUb2dnbGVkPWZ1bmN0aW9uKGUpe3RoaXMuX3RvZ2dsZWQhPT1lJiYodGhpcy5fdG9nZ2xlZD1lLHRoaXMuX2VuYWJsZWQmJihlP3RoaXMuc3ZnRWxlbWVudC5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1yZWN0QnV0dG9uIGNlc2l1bS1hbmltYXRpb24tYnV0dG9uVG9nZ2xlZCIpOnRoaXMuc3ZnRWxlbWVudC5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1yZWN0QnV0dG9uIikpKX0sQS5wcm90b3R5cGUuc2V0VG9vbHRpcD1mdW5jdGlvbihlKXt0aGlzLnN2Z0VsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRpdGxlIilbMF0udGV4dENvbnRlbnQ9ZX07dmFyIFA9ZnVuY3Rpb24oZSx0KXtlPW8oZSksdGhpcy5fdmlld01vZGVsPXQsdGhpcy5fY29udGFpbmVyPWUsdGhpcy5fY2VudGVyWD0wLHRoaXMuX2NlbnRlclk9MCx0aGlzLl9kZWZzRWxlbWVudD12b2lkIDAsdGhpcy5fc3ZnTm9kZT12b2lkIDAsdGhpcy5fdG9wRz12b2lkIDAsdGhpcy5fbGFzdEhlaWdodD12b2lkIDAsdGhpcy5fbGFzdFdpZHRoPXZvaWQgMDt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpO2kudGV4dENvbnRlbnQ9Ii5jZXNpdW0tYW5pbWF0aW9uLXJlY3RCdXR0b24gLmNlc2l1bS1hbmltYXRpb24tYnV0dG9uR2xvdyB7IGZpbHRlcjogdXJsKCNhbmltYXRpb25fYmx1cnJlZCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1yZWN0QnV0dG9uIC5jZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbk1haW4geyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9idXR0b25Ob3JtYWwpOyB9LmNlc2l1bS1hbmltYXRpb24tYnV0dG9uVG9nZ2xlZCAuY2VzaXVtLWFuaW1hdGlvbi1idXR0b25NYWluIHsgZmlsbDogdXJsKCNhbmltYXRpb25fYnV0dG9uVG9nZ2xlZCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1yZWN0QnV0dG9uOmhvdmVyIC5jZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbk1haW4geyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9idXR0b25Ib3ZlcmVkKTsgfS5jZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbkRpc2FibGVkIC5jZXNpdW0tYW5pbWF0aW9uLWJ1dHRvbk1haW4geyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9idXR0b25EaXNhYmxlZCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ0cgLmNlc2l1bS1hbmltYXRpb24tc2h1dHRsZVJpbmdTd29vc2ggeyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9zaHV0dGxlUmluZ1N3b29zaEdyYWRpZW50KTsgfS5jZXNpdW0tYW5pbWF0aW9uLXNodXR0bGVSaW5nRzpob3ZlciAuY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ1N3b29zaCB7IGZpbGw6IHVybCgjYW5pbWF0aW9uX3NodXR0bGVSaW5nU3dvb3NoSG92ZXJlZCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ1BvaW50ZXIgeyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9zaHV0dGxlUmluZ1BvaW50ZXJHcmFkaWVudCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ1BhdXNlUG9pbnRlciB7IGZpbGw6IHVybCgjYW5pbWF0aW9uX3NodXR0bGVSaW5nUG9pbnRlclBhdXNlZCk7IH0uY2VzaXVtLWFuaW1hdGlvbi1rbm9iT3V0ZXIgeyBmaWxsOiB1cmwoI2FuaW1hdGlvbl9rbm9iT3V0ZXIpOyB9LmNlc2l1bS1hbmltYXRpb24ta25vYklubmVyIHsgZmlsbDogdXJsKCNhbmltYXRpb25fa25vYklubmVyKTsgfSIsZG9jdW1lbnQuaGVhZC5pbnNlcnRCZWZvcmUoaSxkb2N1bWVudC5oZWFkLmNoaWxkTm9kZXNbMF0pO3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO24uY2xhc3NOYW1lPSJjZXNpdW0tYW5pbWF0aW9uLXRoZW1lIixuLmlubmVySFRNTD0nPGRpdiBjbGFzcz0iY2VzaXVtLWFuaW1hdGlvbi10aGVtZU5vcm1hbCI+PC9kaXY+PGRpdiBjbGFzcz0iY2VzaXVtLWFuaW1hdGlvbi10aGVtZUhvdmVyIj48L2Rpdj48ZGl2IGNsYXNzPSJjZXNpdW0tYW5pbWF0aW9uLXRoZW1lU2VsZWN0Ij48L2Rpdj48ZGl2IGNsYXNzPSJjZXNpdW0tYW5pbWF0aW9uLXRoZW1lRGlzYWJsZWQiPjwvZGl2PjxkaXYgY2xhc3M9ImNlc2l1bS1hbmltYXRpb24tdGhlbWVLbm9iIj48L2Rpdj48ZGl2IGNsYXNzPSJjZXNpdW0tYW5pbWF0aW9uLXRoZW1lUG9pbnRlciI+PC9kaXY+PGRpdiBjbGFzcz0iY2VzaXVtLWFuaW1hdGlvbi10aGVtZVN3b29zaCI+PC9kaXY+PGRpdiBjbGFzcz0iY2VzaXVtLWFuaW1hdGlvbi10aGVtZVN3b29zaEhvdmVyIj48L2Rpdj4nLHRoaXMuX3RoZW1lPW4sdGhpcy5fdGhlbWVOb3JtYWw9bi5jaGlsZE5vZGVzWzBdLHRoaXMuX3RoZW1lSG92ZXI9bi5jaGlsZE5vZGVzWzFdLHRoaXMuX3RoZW1lU2VsZWN0PW4uY2hpbGROb2Rlc1syXSx0aGlzLl90aGVtZURpc2FibGVkPW4uY2hpbGROb2Rlc1szXSx0aGlzLl90aGVtZUtub2I9bi5jaGlsZE5vZGVzWzRdLHRoaXMuX3RoZW1lUG9pbnRlcj1uLmNoaWxkTm9kZXNbNV0sdGhpcy5fdGhlbWVTd29vc2g9bi5jaGlsZE5vZGVzWzZdLHRoaXMuX3RoZW1lU3dvb3NoSG92ZXI9bi5jaGlsZE5vZGVzWzddO3ZhciByPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh2LCJzdmc6c3ZnIik7dGhpcy5fc3ZnTm9kZT1yLHIuc2V0QXR0cmlidXRlTlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvIiwieG1sbnM6eGxpbmsiLGcpO3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh2LCJnIik7dGhpcy5fdG9wRz1zLHRoaXMuX3JlYWx0aW1lU1ZHPW5ldyBBKG0oMyw0LCIjYW5pbWF0aW9uX3BhdGhDbG9jayIpLHQucGxheVJlYWx0aW1lVmlld01vZGVsKSx0aGlzLl9wbGF5UmV2ZXJzZVNWRz1uZXcgQShoKDQ0LDk5LCIjYW5pbWF0aW9uX3BhdGhQbGF5UmV2ZXJzZSIpLHQucGxheVJldmVyc2VWaWV3TW9kZWwpLHRoaXMuX3BsYXlGb3J3YXJkU1ZHPW5ldyBBKGgoMTI0LDk5LCIjYW5pbWF0aW9uX3BhdGhQbGF5IiksdC5wbGF5Rm9yd2FyZFZpZXdNb2RlbCksdGhpcy5fcGF1c2VTVkc9bmV3IEEoaCg4NCw5OSwiI2FuaW1hdGlvbl9wYXRoUGF1c2UiKSx0LnBhdXNlVmlld01vZGVsKTt2YXIgZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlModiwiZyIpO2QuYXBwZW5kQ2hpbGQodGhpcy5fcmVhbHRpbWVTVkcuc3ZnRWxlbWVudCksZC5hcHBlbmRDaGlsZCh0aGlzLl9wbGF5UmV2ZXJzZVNWRy5zdmdFbGVtZW50KSxkLmFwcGVuZENoaWxkKHRoaXMuX3BsYXlGb3J3YXJkU1ZHLnN2Z0VsZW1lbnQpLGQuYXBwZW5kQ2hpbGQodGhpcy5fcGF1c2VTVkcuc3ZnRWxlbWVudCk7dmFyIHA9bCh7dGFnTmFtZToiY2lyY2xlIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLXNodXR0bGVSaW5nQmFjayIsY3g6MTAwLGN5OjEwMCxyOjk5fSk7dGhpcy5fc2h1dHRsZVJpbmdCYWNrUGFuZWw9cDt2YXIgXz1sKHt0YWdOYW1lOiJnIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLXNodXR0bGVSaW5nU3dvb3NoIixjaGlsZHJlbjpbe3RhZ05hbWU6InVzZSIsdHJhbnNmb3JtOiJ0cmFuc2xhdGUoMTAwLDk3KSBzY2FsZSgtMSwxKSIsInhsaW5rOmhyZWYiOiIjYW5pbWF0aW9uX3BhdGhTd29vc2hGWCJ9LHt0YWdOYW1lOiJ1c2UiLHRyYW5zZm9ybToidHJhbnNsYXRlKDEwMCw5NykiLCJ4bGluazpocmVmIjoiI2FuaW1hdGlvbl9wYXRoU3dvb3NoRlgifSx7dGFnTmFtZToibGluZSIseDE6MTAwLHkxOjgseDI6MTAwLHkyOjIyfV19KTt0aGlzLl9zaHV0dGxlUmluZ1N3b29zaEc9Xyx0aGlzLl9zaHV0dGxlUmluZ1BvaW50ZXI9bCh7dGFnTmFtZToidXNlIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLXNodXR0bGVSaW5nUG9pbnRlciIsInhsaW5rOmhyZWYiOiIjYW5pbWF0aW9uX3BhdGhQb2ludGVyIn0pO3ZhciB5PWwoe3RhZ05hbWU6ImciLHRyYW5zZm9ybToidHJhbnNsYXRlKDEwMCwxMDApIn0pO3RoaXMuX2tub2JPdXRlcj1sKHt0YWdOYW1lOiJjaXJjbGUiLCJjbGFzcyI6ImNlc2l1bS1hbmltYXRpb24ta25vYk91dGVyIixjeDowLGN5OjAscjo3MX0pO3ZhciBDPTYxLHc9bCh7dGFnTmFtZToiY2lyY2xlIiwiY2xhc3MiOiJjZXNpdW0tYW5pbWF0aW9uLWtub2JJbm5lciIsY3g6MCxjeTowLHI6Q30pO3RoaXMuX2tub2JEYXRlPXUoMCwtMjQsIiIpLHRoaXMuX2tub2JUaW1lPXUoMCwtNywiIiksdGhpcy5fa25vYlN0YXR1cz11KDAsLTQxLCIiKTt2YXIgRT1sKHt0YWdOYW1lOiJjaXJjbGUiLCJjbGFzcyI6ImNlc2l1bS1hbmltYXRpb24tYmxhbmsiLGN4OjAsY3k6MCxyOkN9KSxiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh2LCJnIik7Yi5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ0ciKSxlLmFwcGVuZENoaWxkKG4pLHMuYXBwZW5kQ2hpbGQoYikscy5hcHBlbmRDaGlsZCh5KSxzLmFwcGVuZENoaWxkKGQpLGIuYXBwZW5kQ2hpbGQocCksYi5hcHBlbmRDaGlsZChfKSxiLmFwcGVuZENoaWxkKHRoaXMuX3NodXR0bGVSaW5nUG9pbnRlcikseS5hcHBlbmRDaGlsZCh0aGlzLl9rbm9iT3V0ZXIpLHkuYXBwZW5kQ2hpbGQodykseS5hcHBlbmRDaGlsZCh0aGlzLl9rbm9iRGF0ZSkseS5hcHBlbmRDaGlsZCh0aGlzLl9rbm9iVGltZSkseS5hcHBlbmRDaGlsZCh0aGlzLl9rbm9iU3RhdHVzKSx5LmFwcGVuZENoaWxkKEUpLHIuYXBwZW5kQ2hpbGQocyksZS5hcHBlbmRDaGlsZChyKTt2YXIgUz10aGlzLFQ9ZnVuY3Rpb24oZSl7ZihTLGUpfTt0aGlzLl9tb3VzZUNhbGxiYWNrPVQscC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLFQsITApLHAuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsVCwhMCksXy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLFQsITApLF8uYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsVCwhMCksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIixULCEwKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaG1vdmUiLFQsITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLFQsITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoZW5kIixULCEwKSx0aGlzLl9zaHV0dGxlUmluZ1BvaW50ZXIuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixULCEwKSx0aGlzLl9zaHV0dGxlUmluZ1BvaW50ZXIuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsVCwhMCksdGhpcy5fa25vYk91dGVyLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsVCwhMCksdGhpcy5fa25vYk91dGVyLmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLFQsITApO3ZhciB4LFA9dGhpcy5fa25vYlRpbWUuY2hpbGROb2Rlc1swXSxNPXRoaXMuX2tub2JEYXRlLmNoaWxkTm9kZXNbMF0sST10aGlzLl9rbm9iU3RhdHVzLmNoaWxkTm9kZXNbMF07dGhpcy5fc3Vic2NyaXB0aW9ucz1bYSh0LnBhdXNlVmlld01vZGVsLCJ0b2dnbGVkIixmdW5jdGlvbihlKXt4IT09ZSYmKHg9ZSx4P1MuX3NodXR0bGVSaW5nUG9pbnRlci5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ1BhdXNlUG9pbnRlciIpOlMuX3NodXR0bGVSaW5nUG9pbnRlci5zZXRBdHRyaWJ1dGUoImNsYXNzIiwiY2VzaXVtLWFuaW1hdGlvbi1zaHV0dGxlUmluZ1BvaW50ZXIiKSl9KSxhKHQsInNodXR0bGVSaW5nQW5nbGUiLGZ1bmN0aW9uKGUpe2MoUy5fc2h1dHRsZVJpbmdQb2ludGVyLFMuX2tub2JPdXRlcixlKX0pLGEodCwiZGF0ZUxhYmVsIixmdW5jdGlvbihlKXtNLnRleHRDb250ZW50IT09ZSYmKE0udGV4dENvbnRlbnQ9ZSl9KSxhKHQsInRpbWVMYWJlbCIsZnVuY3Rpb24oZSl7UC50ZXh0Q29udGVudCE9PWUmJihQLnRleHRDb250ZW50PWUpfSksYSh0LCJtdWx0aXBsaWVyTGFiZWwiLGZ1bmN0aW9uKGUpe0kudGV4dENvbnRlbnQhPT1lJiYoSS50ZXh0Q29udGVudD1lKX0pXSx0aGlzLmFwcGx5VGhlbWVDaGFuZ2VzKCksdGhpcy5yZXNpemUoKX07cmV0dXJuIGkoUC5wcm90b3R5cGUse2NvbnRhaW5lcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRhaW5lcn19LHZpZXdNb2RlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZpZXdNb2RlbH19fSksUC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sUC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX21vdXNlQ2FsbGJhY2s7dGhpcy5fc2h1dHRsZVJpbmdCYWNrUGFuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixlLCEwKSx0aGlzLl9zaHV0dGxlUmluZ0JhY2tQYW5lbC5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0IixlLCEwKSx0aGlzLl9zaHV0dGxlUmluZ1N3b29zaEcucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixlLCEwKSx0aGlzLl9zaHV0dGxlUmluZ1N3b29zaEcucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsZSwhMCksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIixlLCEwKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaG1vdmUiLGUsITApLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLGUsITApLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNoZW5kIixlLCEwKSx0aGlzLl9zaHV0dGxlUmluZ1BvaW50ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIixlLCEwKSx0aGlzLl9zaHV0dGxlUmluZ1BvaW50ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsZSwhMCksdGhpcy5fa25vYk91dGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsZSwhMCksdGhpcy5fa25vYk91dGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLGUsITApLHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl9zdmdOb2RlKSx0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fdGhlbWUpLHRoaXMuX3JlYWx0aW1lU1ZHLmRlc3Ryb3koKSx0aGlzLl9wbGF5UmV2ZXJzZVNWRy5kZXN0cm95KCksdGhpcy5fcGxheUZvcndhcmRTVkcuZGVzdHJveSgpLHRoaXMuX3BhdXNlU1ZHLmRlc3Ryb3koKTtmb3IodmFyIHQ9dGhpcy5fc3Vic2NyaXB0aW9ucyxpPTAscj10Lmxlbmd0aDtyPmk7aSsrKXRbaV0uZGlzcG9zZSgpO3JldHVybiBuKHRoaXMpfSxQLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jb250YWluZXIuY2xpZW50V2lkdGgsdD10aGlzLl9jb250YWluZXIuY2xpZW50SGVpZ2h0O2lmKGUhPT10aGlzLl9sYXN0V2lkdGh8fHQhPT10aGlzLl9sYXN0SGVpZ2h0KXt2YXIgaT10aGlzLl9zdmdOb2RlLG49MjAwLHI9MTMyLG89ZSxhPXQ7MD09PWUmJjA9PT10PyhvPW4sYT1yKTowPT09ZT8oYT10LG89bioodC9yKSk6MD09PXQmJihvPWUsYT1yKihlL24pKTt2YXIgcz1vL24sbD1hL3I7aS5zdHlsZS5jc3NUZXh0PSJ3aWR0aDogIitvKyJweDsgaGVpZ2h0OiAiK2ErInB4OyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvdHRvbTogMDsgbGVmdDogMDsgb3ZlcmZsb3c6IGhpZGRlbjsiLGkuc2V0QXR0cmlidXRlKCJ3aWR0aCIsbyksaS5zZXRBdHRyaWJ1dGUoImhlaWdodCIsYSksaS5zZXRBdHRyaWJ1dGUoInZpZXdCb3giLCIwIDAgIitvKyIgIithKSx0aGlzLl90b3BHLnNldEF0dHJpYnV0ZSgidHJhbnNmb3JtIiwic2NhbGUoIitzKyIsIitsKyIpIiksdGhpcy5fY2VudGVyWD1NYXRoLm1heCgxLDEwMCpzKSx0aGlzLl9jZW50ZXJZPU1hdGgubWF4KDEsMTAwKmwpLHRoaXMuX2xhc3RIZWlnaHQ9ZSx0aGlzLl9sYXN0V2lkdGg9dH19LFAucHJvdG90eXBlLmFwcGx5VGhlbWVDaGFuZ2VzPWZ1bmN0aW9uKCl7dmFyIGU9cyh0aGlzLl90aGVtZU5vcm1hbCksaT1zKHRoaXMuX3RoZW1lSG92ZXIpLG49cyh0aGlzLl90aGVtZVNlbGVjdCkscj1zKHRoaXMuX3RoZW1lRGlzYWJsZWQpLG89cyh0aGlzLl90aGVtZUtub2IpLGE9cyh0aGlzLl90aGVtZVBvaW50ZXIpLHU9cyh0aGlzLl90aGVtZVN3b29zaCksYz1zKHRoaXMuX3RoZW1lU3dvb3NoSG92ZXIpLGg9bCh7dGFnTmFtZToiZGVmcyIsY2hpbGRyZW46W3tpZDoiYW5pbWF0aW9uX2J1dHRvbk5vcm1hbCIsdGFnTmFtZToibGluZWFyR3JhZGllbnQiLHgxOiI1MCUiLHkxOiIwJSIseDI6IjUwJSIseTI6IjEwMCUiLGNoaWxkcmVuOlt7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiIwJSIsInN0b3AtY29sb3IiOmQoZSxfKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiMTIlIiwic3RvcC1jb2xvciI6ZChlLHkpfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI0NiUiLCJzdG9wLWNvbG9yIjpkKGUsQyl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjgxJSIsInN0b3AtY29sb3IiOmQoZSx3KX1dfSx7aWQ6ImFuaW1hdGlvbl9idXR0b25Ib3ZlcmVkIix0YWdOYW1lOiJsaW5lYXJHcmFkaWVudCIseDE6IjUwJSIseTE6IjAlIix4MjoiNTAlIix5MjoiMTAwJSIsY2hpbGRyZW46W3t0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjAlIiwic3RvcC1jb2xvciI6ZChpLF8pfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiIxMiUiLCJzdG9wLWNvbG9yIjpkKGkseSl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjQ2JSIsInN0b3AtY29sb3IiOmQoaSxDKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiODElIiwic3RvcC1jb2xvciI6ZChpLHcpfV19LHtpZDoiYW5pbWF0aW9uX2J1dHRvblRvZ2dsZWQiLHRhZ05hbWU6ImxpbmVhckdyYWRpZW50Iix4MToiNTAlIix5MToiMCUiLHgyOiI1MCUiLHkyOiIxMDAlIixjaGlsZHJlbjpbe3RhZ05hbWU6InN0b3AiLG9mZnNldDoiMCUiLCJzdG9wLWNvbG9yIjpkKG4sXyl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjEyJSIsInN0b3AtY29sb3IiOmQobix5KX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiNDYlIiwic3RvcC1jb2xvciI6ZChuLEMpfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI4MSUiLCJzdG9wLWNvbG9yIjpkKG4sdyl9XX0se2lkOiJhbmltYXRpb25fYnV0dG9uRGlzYWJsZWQiLHRhZ05hbWU6ImxpbmVhckdyYWRpZW50Iix4MToiNTAlIix5MToiMCUiLHgyOiI1MCUiLHkyOiIxMDAlIixjaGlsZHJlbjpbe3RhZ05hbWU6InN0b3AiLG9mZnNldDoiMCUiLCJzdG9wLWNvbG9yIjpkKHIsRSl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6Ijc1JSIsInN0b3AtY29sb3IiOmQocixiKX1dfSx7aWQ6ImFuaW1hdGlvbl9ibHVycmVkIix0YWdOYW1lOiJmaWx0ZXIiLHdpZHRoOiIyMDAlIixoZWlnaHQ6IjIwMCUiLHg6Ii01MCUiLHk6Ii01MCUiLGNoaWxkcmVuOlt7dGFnTmFtZToiZmVHYXVzc2lhbkJsdXIiLHN0ZERldmlhdGlvbjo0LCJpbiI6IlNvdXJjZUdyYXBoaWMifV19LHtpZDoiYW5pbWF0aW9uX3NodXR0bGVSaW5nU3dvb3NoR3JhZGllbnQiLHRhZ05hbWU6ImxpbmVhckdyYWRpZW50Iix4MToiNTAlIix5MToiMCUiLHgyOiI1MCUiLHkyOiIxMDAlIixjaGlsZHJlbjpbe3RhZ05hbWU6InN0b3AiLG9mZnNldDoiMCUiLCJzdG9wLW9wYWNpdHkiOi4yLCJzdG9wLWNvbG9yIjp1LnRvQ3NzQ29sb3JTdHJpbmcoKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiODUlIiwic3RvcC1vcGFjaXR5IjouODUsInN0b3AtY29sb3IiOnUudG9Dc3NDb2xvclN0cmluZygpfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI5NSUiLCJzdG9wLW9wYWNpdHkiOi4wNSwic3RvcC1jb2xvciI6dS50b0Nzc0NvbG9yU3RyaW5nKCl9XX0se2lkOiJhbmltYXRpb25fc2h1dHRsZVJpbmdTd29vc2hIb3ZlcmVkIix0YWdOYW1lOiJsaW5lYXJHcmFkaWVudCIseDE6IjUwJSIseTE6IjAlIix4MjoiNTAlIix5MjoiMTAwJSIsY2hpbGRyZW46W3t0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjAlIiwic3RvcC1vcGFjaXR5IjouMiwic3RvcC1jb2xvciI6Yy50b0Nzc0NvbG9yU3RyaW5nKCl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6Ijg1JSIsInN0b3Atb3BhY2l0eSI6Ljg1LCJzdG9wLWNvbG9yIjpjLnRvQ3NzQ29sb3JTdHJpbmcoKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiOTUlIiwic3RvcC1vcGFjaXR5IjouMDUsInN0b3AtY29sb3IiOmMudG9Dc3NDb2xvclN0cmluZygpfV19LHtpZDoiYW5pbWF0aW9uX3NodXR0bGVSaW5nUG9pbnRlckdyYWRpZW50Iix0YWdOYW1lOiJsaW5lYXJHcmFkaWVudCIseDE6IjAlIix5MToiNTAlIix4MjoiMTAwJSIseTI6IjUwJSIsY2hpbGRyZW46W3t0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjAlIiwic3RvcC1jb2xvciI6YS50b0Nzc0NvbG9yU3RyaW5nKCl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjQwJSIsInN0b3AtY29sb3IiOmEudG9Dc3NDb2xvclN0cmluZygpfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI2MCUiLCJzdG9wLWNvbG9yIjpkKGEsVCl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjEwMCUiLCJzdG9wLWNvbG9yIjpkKGEsVCl9XX0se2lkOiJhbmltYXRpb25fc2h1dHRsZVJpbmdQb2ludGVyUGF1c2VkIix0YWdOYW1lOiJsaW5lYXJHcmFkaWVudCIseDE6IjAlIix5MToiNTAlIix4MjoiMTAwJSIseTI6IjUwJSIsY2hpbGRyZW46W3t0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjAlIiwic3RvcC1jb2xvciI6IiNDQ0MifSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI0MCUiLCJzdG9wLWNvbG9yIjoiI0NDQyJ9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjYwJSIsInN0b3AtY29sb3IiOiIjNTU1In0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiMTAwJSIsInN0b3AtY29sb3IiOiIjNTU1In1dfSx7aWQ6ImFuaW1hdGlvbl9rbm9iT3V0ZXIiLHRhZ05hbWU6ImxpbmVhckdyYWRpZW50Iix4MToiMjAlIix5MToiMCUiLHgyOiI5MCUiLHkyOiIxMDAlIixjaGlsZHJlbjpbe3RhZ05hbWU6InN0b3AiLG9mZnNldDoiNSUiLCJzdG9wLWNvbG9yIjpkKG8sXyl9LHt0YWdOYW1lOiJzdG9wIixvZmZzZXQ6IjYwJSIsInN0b3AtY29sb3IiOmQobyxTKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiODUlIiwic3RvcC1jb2xvciI6ZChvLHkpfV19LHtpZDoiYW5pbWF0aW9uX2tub2JJbm5lciIsdGFnTmFtZToibGluZWFyR3JhZGllbnQiLHgxOiIyMCUiLHkxOiIwJSIseDI6IjkwJSIseTI6IjEwMCUiLGNoaWxkcmVuOlt7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI1JSIsInN0b3AtY29sb3IiOmQobyxTKX0se3RhZ05hbWU6InN0b3AiLG9mZnNldDoiNjAlIiwic3RvcC1jb2xvciI6ZChvLF8pfSx7dGFnTmFtZToic3RvcCIsb2Zmc2V0OiI4NSUiLCJzdG9wLWNvbG9yIjpkKG8sdyl9XX0se2lkOiJhbmltYXRpb25fcGF0aFJlc2V0Iix0YWdOYW1lOiJwYXRoIix0cmFuc2Zvcm06InRyYW5zbGF0ZSgxNiwxNikgc2NhbGUoMC44NSkgdHJhbnNsYXRlKC0xNiwtMTYpIixkOiJNMjQuMzE2LDUuMzE4LDkuODMzLDEzLjY4Miw5LjgzMyw1LjUsNS41LDUuNSw1LjUsMjUuNSw5LjgzMywyNS41LDkuODMzLDE3LjMxOCwyNC4zMTYsMjUuNjgyeiJ9LHtpZDoiYW5pbWF0aW9uX3BhdGhQYXVzZSIsdGFnTmFtZToicGF0aCIsdHJhbnNmb3JtOiJ0cmFuc2xhdGUoMTYsMTYpIHNjYWxlKDAuODUpIHRyYW5zbGF0ZSgtMTYsLTE2KSIsZDoiTTEzLDUuNSw3LjUsNS41LDcuNSwyNS41LDEzLDI1LjV6TTI0LjUsNS41LDE5LDUuNSwxOSwyNS41LDI0LjUsMjUuNXoifSx7aWQ6ImFuaW1hdGlvbl9wYXRoUGxheSIsdGFnTmFtZToicGF0aCIsdHJhbnNmb3JtOiJ0cmFuc2xhdGUoMTYsMTYpIHNjYWxlKDAuODUpIHRyYW5zbGF0ZSgtMTYsLTE2KSIsZDoiTTYuNjg0LDI1LjY4MkwyNC4zMTYsMTUuNUw2LjY4NCw1LjMxOFYyNS42ODJ6In0se2lkOiJhbmltYXRpb25fcGF0aFBsYXlSZXZlcnNlIix0YWdOYW1lOiJwYXRoIix0cmFuc2Zvcm06InRyYW5zbGF0ZSgxNiwxNikgc2NhbGUoLTAuODUsMC44NSkgdHJhbnNsYXRlKC0xNiwtMTYpIixkOiJNNi42ODQsMjUuNjgyTDI0LjMxNiwxNS41TDYuNjg0LDUuMzE4VjI1LjY4MnoifSx7aWQ6ImFuaW1hdGlvbl9wYXRoTG9vcCIsdGFnTmFtZToicGF0aCIsdHJhbnNmb3JtOiJ0cmFuc2xhdGUoMTYsMTYpIHNjYWxlKDAuODUpIHRyYW5zbGF0ZSgtMTYsLTE2KSIsZDoiTTI0LjI0OSwxNS40OTljLTAuMDA5LDQuODMyLTMuOTE4LDguNzQxLTguNzUsOC43NWMtMi41MTUsMC00Ljc2OC0xLjA2NC02LjM2NS0yLjc2M2wyLjA2OC0xLjQ0MmwtNy45MDEtMy43MDNsMC43NDQsOC42OTRsMi4xOTMtMS41MjljMi4yNDQsMi41OTQsNS41NjIsNC4yNDIsOS4yNiw0LjI0MmM2Ljc2NywwLDEyLjI0OS01LjQ4MiwxMi4yNDktMTIuMjQ5SDI0LjI0OXpNMTUuNDk5LDYuNzVjMi41MTYsMCw0Ljc2OSwxLjA2NSw2LjM2NywyLjc2NGwtMi4wNjgsMS40NDNsNy45MDEsMy43MDFsLTAuNzQ2LTguNjkzbC0yLjE5MiwxLjUyOWMtMi4yNDUtMi41OTQtNS41NjItNC4yNDUtOS4yNjItNC4yNDVDOC43MzQsMy4yNSwzLjI1LDguNzM0LDMuMjQ5LDE1LjQ5OUg2Ljc1QzYuNzU4LDEwLjY2OCwxMC42NjgsNi43NTgsMTUuNDk5LDYuNzV6In0se2lkOiJhbmltYXRpb25fcGF0aENsb2NrIix0YWdOYW1lOiJwYXRoIix0cmFuc2Zvcm06InRyYW5zbGF0ZSgxNiwxNikgc2NhbGUoMC44NSkgdHJhbnNsYXRlKC0xNiwtMTUuNSkiLGQ6Ik0xNS41LDIuMzc0QzguMjUxLDIuMzc1LDIuMzc2LDguMjUxLDIuMzc0LDE1LjVDMi4zNzYsMjIuNzQ4LDguMjUxLDI4LjYyMywxNS41LDI4LjYyN2M3LjI0OS0wLjAwNCwxMy4xMjQtNS44NzksMTMuMTI1LTEzLjEyN0MyOC42MjQsOC4yNTEsMjIuNzQ5LDIuMzc1LDE1LjUsMi4zNzR6TTE1LjUsMjUuNjIzQzkuOTA5LDI1LjYxNSw1LjM4NSwyMS4wOSw1LjM3NSwxNS41QzUuMzg1LDkuOTA5LDkuOTA5LDUuMzg0LDE1LjUsNS4zNzRjNS41OSwwLjAxLDEwLjExNSw0LjUzNSwxMC4xMjQsMTAuMTI1QzI1LjYxNSwyMS4wOSwyMS4wOTEsMjUuNjE1LDE1LjUsMjUuNjIzek04LjYyNSwxNS41Yy0wLjAwMS0wLjU1Mi0wLjQ0OC0wLjk5OS0xLjAwMS0xYy0wLjU1MywwLTEsMC40NDgtMSwxYzAsMC41NTMsMC40NDksMSwxLDFDOC4xNzYsMTYuNSw4LjYyNCwxNi4wNTMsOC42MjUsMTUuNXpNOC4xNzksMTguNTcyYy0wLjQ3OCwwLjI3Ny0wLjY0MiwwLjg4OS0wLjM2NSwxLjM2N2MwLjI3NSwwLjQ3OSwwLjg4OSwwLjY0MSwxLjM2NSwwLjM2NWMwLjQ3OS0wLjI3NSwwLjY0My0wLjg4NywwLjM2Ny0xLjM2N0M5LjI3LDE4LjQ2MSw4LjY1OCwxOC4yOTcsOC4xNzksMTguNTcyek05LjE4LDEwLjY5NmMtMC40NzktMC4yNzYtMS4wOS0wLjExMi0xLjM2NiwwLjM2NnMtMC4xMTEsMS4wOSwwLjM2NSwxLjM2NmMwLjQ3OSwwLjI3NiwxLjA5LDAuMTEzLDEuMzY3LTAuMzY2QzkuODIxLDExLjU4NCw5LjY1NywxMC45NzMsOS4xOCwxMC42OTZ6TTIyLjgyMiwxMi40MjhjMC40NzgtMC4yNzUsMC42NDMtMC44ODgsMC4zNjYtMS4zNjZjLTAuMjc1LTAuNDc4LTAuODktMC42NDItMS4zNjYtMC4zNjZjLTAuNDc5LDAuMjc4LTAuNjQyLDAuODktMC4zNjYsMS4zNjdDMjEuNzMyLDEyLjU0LDIyLjM0NCwxMi43MDUsMjIuODIyLDEyLjQyOHpNMTIuMDYyLDIxLjQ1NWMtMC40NzgtMC4yNzUtMS4wODktMC4xMTEtMS4zNjYsMC4zNjdjLTAuMjc1LDAuNDc5LTAuMTExLDEuMDksMC4zNjYsMS4zNjVjMC40NzgsMC4yNzcsMS4wOTEsMC4xMTEsMS4zNjUtMC4zNjVDMTIuNzA0LDIyLjM0NCwxMi41NCwyMS43MzIsMTIuMDYyLDIxLjQ1NXpNMTIuMDYyLDkuNTQ1YzAuNDc5LTAuMjc2LDAuNjQyLTAuODg4LDAuMzY2LTEuMzY2Yy0wLjI3Ni0wLjQ3OC0wLjg4OC0wLjY0Mi0xLjM2Ni0wLjM2NnMtMC42NDIsMC44ODgtMC4zNjYsMS4zNjZDMTAuOTczLDkuNjU4LDExLjU4NCw5LjgyMiwxMi4wNjIsOS41NDV6TTIyLjgyMywxOC41NzJjLTAuNDgtMC4yNzUtMS4wOTItMC4xMTEtMS4zNjcsMC4zNjVjLTAuMjc1LDAuNDc5LTAuMTEyLDEuMDkyLDAuMzY3LDEuMzY3YzAuNDc3LDAuMjc1LDEuMDg5LDAuMTEzLDEuMzY1LTAuMzY1QzIzLjQ2NCwxOS40NjEsMjMuMywxOC44NDgsMjIuODIzLDE4LjU3MnpNMTkuOTM4LDcuODEzYy0wLjQ3Ny0wLjI3Ni0xLjA5MS0wLjExMS0xLjM2NSwwLjM2NmMtMC4yNzUsMC40OC0wLjExMSwxLjA5MSwwLjM2NiwxLjM2N3MxLjA4OSwwLjExMiwxLjM2Ni0wLjM2NkMyMC41ODEsOC43MDIsMjAuNDE4LDguMDg5LDE5LjkzOCw3LjgxM3pNMjMuMzc4LDE0LjVjLTAuNTU0LDAuMDAyLTEuMDAxLDAuNDUtMS4wMDEsMWMwLjAwMSwwLjU1MiwwLjQ0OCwxLDEuMDAxLDFjMC41NTEsMCwxLTAuNDQ3LDEtMUMyNC4zNzgsMTQuOTQ5LDIzLjkyOSwxNC41LDIzLjM3OCwxNC41ek0xNS41MDEsNi42MjRjLTAuNTUyLDAtMSwwLjQ0OC0xLDFsLTAuNDY2LDcuMzQzbC0zLjAwNCwxLjk2Yy0wLjQ3OCwwLjI3Ny0wLjY0MiwwLjg4OS0wLjM2NSwxLjM2NWMwLjI3NSwwLjQ3OSwwLjg4OSwwLjY0MywxLjM2NSwwLjM2N2wzLjMwNS0xLjY3NkMxNS4zOSwxNi45OSwxNS40NDQsMTcsMTUuNTAxLDE3YzAuODI4LDAsMS41LTAuNjcxLDEuNS0xLjVsLTAuNS03Ljg3NkMxNi41MDEsNy4wNzIsMTYuMDUzLDYuNjI0LDE1LjUwMSw2LjYyNHpNMTUuNTAxLDIyLjM3N2MtMC41NTIsMC0xLDAuNDQ3LTEsMXMwLjQ0OCwxLDEsMXMxLTAuNDQ3LDEtMVMxNi4wNTMsMjIuMzc3LDE1LjUwMSwyMi4zNzd6TTE4LjkzOSwyMS40NTVjLTAuNDc5LDAuMjc3LTAuNjQzLDAuODg5LTAuMzY2LDEuMzY3YzAuMjc1LDAuNDc3LDAuODg4LDAuNjQzLDEuMzY2LDAuMzY1YzAuNDc4LTAuMjc1LDAuNjQyLTAuODg5LDAuMzY2LTEuMzY1QzIwLjAyOCwyMS4zNDQsMTkuNDE3LDIxLjE4LDE4LjkzOSwyMS40NTV6In0se2lkOiJhbmltYXRpb25fcGF0aFdpbmdCdXR0b24iLHRhZ05hbWU6InBhdGgiLGQ6Im0gNC41LDAuNSBjIC0yLjIxNiwwIC00LDEuNzg0IC00LDQgbCAwLDI0IGMgMCwyLjIxNiAxLjc4NCw0IDQsNCBsIDEzLjcxODc1LDAgQyAyMi40Nzg1ODQsMjcuMjcyNzg1IDI3LjI3MzY4MSwyMi41MTEyNzIgMzIuNSwxOC4yNSBsIDAsLTEzLjc1IGMgMCwtMi4yMTYgLTEuNzg0LC00IC00LC00IGwgLTI0LDAgeiJ9LHtpZDoiYW5pbWF0aW9uX3BhdGhQb2ludGVyIix0YWdOYW1lOiJwYXRoIixkOiJNLTE1LC02NSwtMTUsLTU1LDE1LC01NSwxNSwtNjUsMCwtOTV6In0se2lkOiJhbmltYXRpb25fcGF0aFN3b29zaEZYIix0YWdOYW1lOiJwYXRoIixkOiJtIDg1LDAgYyAwLDE2LjYxNyAtNC44MTM5NDQsMzUuMzU2IC0xMy4xMzEwODEsNDguNDUwOCBoIDYuMDk5ODAzIGMgOC4zMTcxMzgsLTEzLjA5NDggMTMuMTMzMjIsLTI4LjU5NTUgMTMuMTMzMjIsLTQ1LjIxMjQgMCwtNDYuOTQ0ODMgLTM4LjQwMjcxNCwtODUuMDAyNjIgLTg1Ljc3NDM4NjksLTg1LjAwMjYyIC0xLjAyMTg1MjIsMCAtMi4wMzczMDAxLDAuMDI0MSAtMy4wNTA2MTMxLDAuMDU4OSA0NS45NTg0NDMsMS41OTQzNyA4Mi43MjMwNTgsMzUuNzcyODUgODIuNzIzMDU4LDgxLjcwNTMyIHoifV19KTt0KHRoaXMuX2RlZnNFbGVtZW50KT90aGlzLl9zdmdOb2RlLnJlcGxhY2VDaGlsZChoLHRoaXMuX2RlZnNFbGVtZW50KTp0aGlzLl9zdmdOb2RlLmFwcGVuZENoaWxkKGgpLHRoaXMuX2RlZnNFbGVtZW50PWh9LFB9KSxkZWZpbmUoIldpZGdldHMvY3JlYXRlQ29tbWFuZCIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vVGhpcmRQYXJ0eS9rbm9ja291dCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvKXsidXNlIHN0cmljdCI7dmFyIGE9ZnVuY3Rpb24odCxuKXtmdW5jdGlvbiBhKCl7dmFyIGUsaT17YXJnczphcmd1bWVudHMsY2FuY2VsOiExfTtyZXR1cm4gcy5yYWlzZUV2ZW50KGkpLGkuY2FuY2VsfHwoZT10LmFwcGx5KG51bGwsYXJndW1lbnRzKSxsLnJhaXNlRXZlbnQoZSkpLGV9bj1lKG4sITApO3ZhciBzPW5ldyByLGw9bmV3IHI7cmV0dXJuIGEuY2FuRXhlY3V0ZT1uLG8udHJhY2soYSxbImNhbkV4ZWN1dGUiXSksaShhLHtiZWZvcmVFeGVjdXRlOnt2YWx1ZTpzfSxhZnRlckV4ZWN1dGU6e3ZhbHVlOmx9fSksYX07cmV0dXJuIGF9KSxkZWZpbmUoIldpZGdldHMvVG9nZ2xlQnV0dG9uVmlld01vZGVsIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL1RoaXJkUGFydHkva25vY2tvdXQiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0LGkpe3RoaXMuX2NvbW1hbmQ9dCxpPWUoaSxlLkVNUFRZX09CSkVDVCksdGhpcy50b2dnbGVkPWUoaS50b2dnbGVkLCExKSx0aGlzLnRvb2x0aXA9ZShpLnRvb2x0aXAsIiIpLHIudHJhY2sodGhpcyxbInRvZ2dsZWQiLCJ0b29sdGlwIl0pfTtyZXR1cm4gaShvLnByb3RvdHlwZSx7Y29tbWFuZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbW1hbmR9fX0pLG99KSxkZWZpbmUoIldpZGdldHMvQW5pbWF0aW9uL0FuaW1hdGlvblZpZXdNb2RlbCIsWyIuLi8uLi9Db3JlL2JpbmFyeVNlYXJjaCIsIi4uLy4uL0NvcmUvQ2xvY2tSYW5nZSIsIi4uLy4uL0NvcmUvQ2xvY2tTdGVwIiwiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uLy4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi8uLi9UaGlyZFBhcnR5L3NwcmludGYiLCIuLi9jcmVhdGVDb21tYW5kIiwiLi4vVG9nZ2xlQnV0dG9uVmlld01vZGVsIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChlKXtlLmNsb2NrU3RlcD09PWkuU1lTVEVNX0NMT0NLJiYoZS5jbG9ja1N0ZXA9aS5TWVNURU1fQ0xPQ0tfTVVMVElQTElFUixlLm11bHRpcGxpZXI9MSl9ZnVuY3Rpb24gaChlKXtkKGUpLGUuc2hvdWxkQW5pbWF0ZT0hMH1mdW5jdGlvbiBtKGUsdCl7cmV0dXJuIGUtdH1mdW5jdGlvbiBmKHQsaSl7dmFyIG49ZShpLHQsbSk7cmV0dXJuIDA+bj9+bjpufWZ1bmN0aW9uIHAoZSx0KXtpZihNYXRoLmFicyhlKTw9XylyZXR1cm4gZS9fO3ZhciBpLG4scj1fLG89eSxhPTA7cmV0dXJuIGU+MD8oaT1NYXRoLmxvZyh0W3QubGVuZ3RoLTFdKSxuPShpLWEpLyhvLXIpLE1hdGguZXhwKGErbiooZS1yKSkpOihpPU1hdGgubG9nKC10WzBdKSxuPShpLWEpLyhvLXIpLC1NYXRoLmV4cChhK24qKE1hdGguYWJzKGUpLXIpKSl9ZnVuY3Rpb24gdihlLHQsbil7aWYobi5jbG9ja1N0ZXA9PT1pLlNZU1RFTV9DTE9DSylyZXR1cm4gXztpZihNYXRoLmFicyhlKTw9MSlyZXR1cm4gZSpfO3ZhciByLG8sYT1fLHM9eSxsPTA7cmV0dXJuIGU+MD8ocj1NYXRoLmxvZyh0W3QubGVuZ3RoLTFdKSxvPShyLWwpLyhzLWEpLChNYXRoLmxvZyhlKS1sKS9vK2EpOihyPU1hdGgubG9nKC10WzBdKSxvPShyLWwpLyhzLWEpLC0oKE1hdGgubG9nKE1hdGguYWJzKGUpKS1sKS9vK2EpKX12YXIgZz1bIkphbiIsIkZlYiIsIk1hciIsIkFwciIsIk1heSIsIkp1biIsIkp1bCIsIkF1ZyIsIlNlcCIsIk9jdCIsIk5vdiIsIkRlYyJdLF89MTUseT0xMDUsQz1mdW5jdGlvbihlKXt2YXIgbj10aGlzO3RoaXMuX2Nsb2NrVmlld01vZGVsPWUsdGhpcy5fYWxsU2h1dHRsZVJpbmdUaWNrcz1bXSx0aGlzLl9kYXRlRm9ybWF0dGVyPUMuZGVmYXVsdERhdGVGb3JtYXR0ZXIsdGhpcy5fdGltZUZvcm1hdHRlcj1DLmRlZmF1bHRUaW1lRm9ybWF0dGVyLHRoaXMuc2h1dHRsZVJpbmdEcmFnZ2luZz0hMSx0aGlzLnNuYXBUb1RpY2tzPSExLHMudHJhY2sodGhpcyxbIl9hbGxTaHV0dGxlUmluZ1RpY2tzIiwiX2RhdGVGb3JtYXR0ZXIiLCJfdGltZUZvcm1hdHRlciIsInNodXR0bGVSaW5nRHJhZ2dpbmciLCJzbmFwVG9UaWNrcyJdKSx0aGlzLl9zb3J0ZWRGaWx0ZXJlZFBvc2l0aXZlVGlja3M9W10sdGhpcy5zZXRTaHV0dGxlUmluZ1RpY2tzKEMuZGVmYXVsdFRpY2tzKSx0aGlzLnRpbWVMYWJlbD12b2lkIDAscy5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJ0aW1lTGFiZWwiLGZ1bmN0aW9uKCl7cmV0dXJuIG4uX3RpbWVGb3JtYXR0ZXIobi5fY2xvY2tWaWV3TW9kZWwuY3VycmVudFRpbWUsbil9KSx0aGlzLmRhdGVMYWJlbD12b2lkIDAscy5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJkYXRlTGFiZWwiLGZ1bmN0aW9uKCl7cmV0dXJuIG4uX2RhdGVGb3JtYXR0ZXIobi5fY2xvY2tWaWV3TW9kZWwuY3VycmVudFRpbWUsbil9KSx0aGlzLm11bHRpcGxpZXJMYWJlbD12b2lkIDAscy5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJtdWx0aXBsaWVyTGFiZWwiLGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWw7aWYoZS5jbG9ja1N0ZXA9PT1pLlNZU1RFTV9DTE9DSylyZXR1cm4iVG9kYXkiO3ZhciB0PWUubXVsdGlwbGllcjtyZXR1cm4gMD09PXQlMT90LnRvRml4ZWQoMCkrIngiOnQudG9GaXhlZCgzKS5yZXBsYWNlKC8wezAsM30kLywiIikrIngifSksdGhpcy5zaHV0dGxlUmluZ0FuZ2xlPXZvaWQgMCxzLmRlZmluZVByb3BlcnR5KHRoaXMsInNodXR0bGVSaW5nQW5nbGUiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdihlLm11bHRpcGxpZXIsbi5fYWxsU2h1dHRsZVJpbmdUaWNrcyxlKX0sc2V0OmZ1bmN0aW9uKGUpe2U9TWF0aC5tYXgoTWF0aC5taW4oZSx5KSwteSk7dmFyIHQ9bi5fYWxsU2h1dHRsZVJpbmdUaWNrcyxyPW4uX2Nsb2NrVmlld01vZGVsO2lmKHIuY2xvY2tTdGVwPWkuU1lTVEVNX0NMT0NLX01VTFRJUExJRVIsTWF0aC5hYnMoZSk9PT15KXJldHVybiByLm11bHRpcGxpZXI9ZT4wP3RbdC5sZW5ndGgtMV06dFswXSx2b2lkIDA7dmFyIG89cChlLHQpO2lmKG4uc25hcFRvVGlja3Mpbz10W2Yobyx0KV07ZWxzZSBpZigwIT09byl7dmFyIGE9TWF0aC5hYnMobyk7aWYoYT4xMDApe3ZhciBzPWEudG9GaXhlZCgwKS5sZW5ndGgtMixsPU1hdGgucG93KDEwLHMpO289MHxNYXRoLnJvdW5kKG8vbCkqbH1lbHNlIGE+Xz9vPU1hdGgucm91bmQobyk6YT4xP289K28udG9GaXhlZCgxKTphPjAmJihvPStvLnRvRml4ZWQoMikpfXIubXVsdGlwbGllcj1vfX0pLHRoaXMuX2NhbkFuaW1hdGU9dm9pZCAwLHMuZGVmaW5lUHJvcGVydHkodGhpcywiX2NhbkFuaW1hdGUiLGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWwsaT1lLmNsb2NrUmFuZ2U7aWYobi5zaHV0dGxlUmluZ0RyYWdnaW5nfHxpPT09dC5VTkJPVU5ERUQpcmV0dXJuITA7dmFyIHI9ZS5tdWx0aXBsaWVyLG89ZS5jdXJyZW50VGltZSxzPWUuc3RhcnRUaW1lLGw9ITE7aWYoaT09PXQuTE9PUF9TVE9QKWw9YS5ncmVhdGVyVGhhbihvLHMpfHxvLmVxdWFscyhzKSYmcj4wO2Vsc2V7dmFyIHU9ZS5zdG9wVGltZTtsPWEuZ3JlYXRlclRoYW4obyxzKSYmYS5sZXNzVGhhbihvLHUpfHxvLmVxdWFscyhzKSYmcj4wfHxvLmVxdWFscyh1KSYmMD5yfXJldHVybiBsfHwoZS5zaG91bGRBbmltYXRlPSExKSxsfSksdGhpcy5faXNTeXN0ZW1UaW1lQXZhaWxhYmxlPXZvaWQgMCxzLmRlZmluZVByb3BlcnR5KHRoaXMsIl9pc1N5c3RlbVRpbWVBdmFpbGFibGUiLGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWwsaT1lLmNsb2NrUmFuZ2U7aWYoaT09PXQuVU5CT1VOREVEKXJldHVybiEwO3ZhciByPWUuc3lzdGVtVGltZTtyZXR1cm4gYS5ncmVhdGVyVGhhbk9yRXF1YWxzKHIsZS5zdGFydFRpbWUpJiZhLmxlc3NUaGFuT3JFcXVhbHMocixlLnN0b3BUaW1lKX0pLHRoaXMuX2lzQW5pbWF0aW5nPXZvaWQgMCxzLmRlZmluZVByb3BlcnR5KHRoaXMsIl9pc0FuaW1hdGluZyIsZnVuY3Rpb24oKXtyZXR1cm4gbi5fY2xvY2tWaWV3TW9kZWwuc2hvdWxkQW5pbWF0ZSYmKG4uX2NhbkFuaW1hdGV8fG4uc2h1dHRsZVJpbmdEcmFnZ2luZyl9KTt2YXIgcj11KGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWw7ZS5zaG91bGRBbmltYXRlPyhkKGUpLGUuc2hvdWxkQW5pbWF0ZT0hMSk6bi5fY2FuQW5pbWF0ZSYmaChlKX0pO3RoaXMuX3BhdXNlVmlld01vZGVsPW5ldyBjKHIse3RvZ2dsZWQ6cy5jb21wdXRlZChmdW5jdGlvbigpe3JldHVybiFuLl9pc0FuaW1hdGluZ30pLHRvb2x0aXA6IlBhdXNlIn0pO3ZhciBvPXUoZnVuY3Rpb24oKXt2YXIgZT1uLl9jbG9ja1ZpZXdNb2RlbDtkKGUpO3ZhciB0PWUubXVsdGlwbGllcjt0PjAmJihlLm11bHRpcGxpZXI9LXQpLGUuc2hvdWxkQW5pbWF0ZT0hMH0pO3RoaXMuX3BsYXlSZXZlcnNlVmlld01vZGVsPW5ldyBjKG8se3RvZ2dsZWQ6cy5jb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBuLl9pc0FuaW1hdGluZyYmZS5tdWx0aXBsaWVyPDB9KSx0b29sdGlwOiJQbGF5IFJldmVyc2UifSk7dmFyIGw9dShmdW5jdGlvbigpe3ZhciBlPW4uX2Nsb2NrVmlld01vZGVsO2QoZSk7dmFyIHQ9ZS5tdWx0aXBsaWVyOzA+dCYmKGUubXVsdGlwbGllcj0tdCksZS5zaG91bGRBbmltYXRlPSEwfSk7dGhpcy5fcGxheUZvcndhcmRWaWV3TW9kZWw9bmV3IGMobCx7dG9nZ2xlZDpzLmNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIG4uX2lzQW5pbWF0aW5nJiZlLm11bHRpcGxpZXI+MCYmZS5jbG9ja1N0ZXAhPT1pLlNZU1RFTV9DTE9DS30pLHRvb2x0aXA6IlBsYXkgRm9yd2FyZCJ9KTt2YXIgbT11KGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWw7ZS5jbG9ja1N0ZXA9aS5TWVNURU1fQ0xPQ0ssZS5tdWx0aXBsaWVyPTEsZS5zaG91bGRBbmltYXRlPSEwfSxzLmdldE9ic2VydmFibGUodGhpcywiX2lzU3lzdGVtVGltZUF2YWlsYWJsZSIpKTt0aGlzLl9wbGF5UmVhbHRpbWVWaWV3TW9kZWw9bmV3IGMobSx7dG9nZ2xlZDpzLmNvbXB1dGVkKGZ1bmN0aW9uKCl7cmV0dXJuIGUuc2hvdWxkQW5pbWF0ZSYmZS5jbG9ja1N0ZXA9PT1pLlNZU1RFTV9DTE9DS30pLHRvb2x0aXA6cy5jb21wdXRlZChmdW5jdGlvbigpe3JldHVybiBuLl9pc1N5c3RlbVRpbWVBdmFpbGFibGU/IlRvZGF5IChyZWFsLXRpbWUpIjoiQ3VycmVudCB0aW1lIG5vdCBpbiByYW5nZSJ9KX0pLHRoaXMuX3Nsb3dlcj11KGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWw7ZChlKTt2YXIgdD1uLl9hbGxTaHV0dGxlUmluZ1RpY2tzLGk9ZS5tdWx0aXBsaWVyLHI9ZihpLHQpLTE7cj49MCYmKGUubXVsdGlwbGllcj10W3JdKX0pLHRoaXMuX2Zhc3Rlcj11KGZ1bmN0aW9uKCl7dmFyIGU9bi5fY2xvY2tWaWV3TW9kZWw7ZChlKTt2YXIgdD1uLl9hbGxTaHV0dGxlUmluZ1RpY2tzLGk9ZS5tdWx0aXBsaWVyLHI9ZihpLHQpKzE7cjx0Lmxlbmd0aCYmKGUubXVsdGlwbGllcj10W3JdKX0pfTtyZXR1cm4gQy5kZWZhdWx0RGF0ZUZvcm1hdHRlcj1mdW5jdGlvbihlKXt2YXIgdD1hLnRvR3JlZ29yaWFuRGF0ZShlKTtyZXR1cm4gZ1t0Lm1vbnRoLTFdKyIgIit0LmRheSsiICIrdC55ZWFyfSxDLmRlZmF1bHRUaWNrcz1bLjAwMSwuMDAyLC4wMDUsLjAxLC4wMiwuMDUsLjEsLjI1LC41LDEsMiw1LDEwLDE1LDMwLDYwLDEyMCwzMDAsNjAwLDkwMCwxODAwLDM2MDAsNzIwMCwxNDQwMCwyMTYwMCw0MzIwMCw4NjQwMCwxNzI4MDAsMzQ1NjAwLDYwNDgwMF0sQy5kZWZhdWx0VGltZUZvcm1hdHRlcj1mdW5jdGlvbihlLHQpe3ZhciBpPWEudG9HcmVnb3JpYW5EYXRlKGUpLG49TWF0aC5yb3VuZChpLm1pbGxpc2Vjb25kKTtyZXR1cm4gTWF0aC5hYnModC5fY2xvY2tWaWV3TW9kZWwubXVsdGlwbGllcik8MT9sKCIlMDJkOiUwMmQ6JTAyZC4lMDNkIixpLmhvdXIsaS5taW51dGUsaS5zZWNvbmQsbik6bCgiJTAyZDolMDJkOiUwMmQgVVRDIixpLmhvdXIsaS5taW51dGUsaS5zZWNvbmQpfSxDLnByb3RvdHlwZS5nZXRTaHV0dGxlUmluZ1RpY2tzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NvcnRlZEZpbHRlcmVkUG9zaXRpdmVUaWNrcy5zbGljZSgwKX0sQy5wcm90b3R5cGUuc2V0U2h1dHRsZVJpbmdUaWNrcz1mdW5jdGlvbihlKXt2YXIgdCxpLG4scj17fSxvPXRoaXMuX3NvcnRlZEZpbHRlcmVkUG9zaXRpdmVUaWNrczsKZm9yKG8ubGVuZ3RoPTAsdD0wLGk9ZS5sZW5ndGg7aT50OysrdCluPWVbdF0sci5oYXNPd25Qcm9wZXJ0eShuKXx8KHJbbl09ITAsby5wdXNoKG4pKTtvLnNvcnQobSk7dmFyIGE9W107Zm9yKGk9by5sZW5ndGgsdD1pLTE7dD49MDstLXQpbj1vW3RdLDAhPT1uJiZhLnB1c2goLW4pO0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KGEsbyksdGhpcy5fYWxsU2h1dHRsZVJpbmdUaWNrcz1hfSxyKEMucHJvdG90eXBlLHtzbG93ZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zbG93ZXJ9fSxmYXN0ZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mYXN0ZXJ9fSxjbG9ja1ZpZXdNb2RlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nsb2NrVmlld01vZGVsfX0scGF1c2VWaWV3TW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXVzZVZpZXdNb2RlbH19LHBsYXlSZXZlcnNlVmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGxheVJldmVyc2VWaWV3TW9kZWx9fSxwbGF5Rm9yd2FyZFZpZXdNb2RlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BsYXlGb3J3YXJkVmlld01vZGVsfX0scGxheVJlYWx0aW1lVmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGxheVJlYWx0aW1lVmlld01vZGVsfX0sZGF0ZUZvcm1hdHRlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGVGb3JtYXR0ZXJ9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9kYXRlRm9ybWF0dGVyPWV9fSx0aW1lRm9ybWF0dGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGltZUZvcm1hdHRlcn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3RpbWVGb3JtYXR0ZXI9ZX19fSksQy5fbWF4U2h1dHRsZVJpbmdBbmdsZT15LEMuX3JlYWx0aW1lU2h1dHRsZVJpbmdBbmdsZT1fLEN9KSxkZWZpbmUoIkNvcmUvSGVpZ2h0bWFwVGVzc2VsbGF0b3IiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiLCIuL2ZyZWV6ZU9iamVjdCIsIi4vTWF0aCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz17fTtyZXR1cm4gcy5ERUZBVUxUX1NUUlVDVFVSRT1vKHtoZWlnaHRTY2FsZToxLGhlaWdodE9mZnNldDowLGVsZW1lbnRzUGVySGVpZ2h0OjEsc3RyaWRlOjEsZWxlbWVudE11bHRpcGxpZXI6MjU2LGlzQmlnRW5kaWFuOiExfSkscy5jb21wdXRlVmVydGljZXM9ZnVuY3Rpb24obil7dmFyIG8sbCx1LGMsZD1NYXRoLmNvcyxoPU1hdGguc2luLG09TWF0aC5zcXJ0LGY9TWF0aC5hdGFuLHA9TWF0aC5leHAsdj1hLlBJX09WRVJfVFdPLGc9YS50b1JhZGlhbnMsXz1uLnZlcnRpY2VzLHk9bi5oZWlnaHRtYXAsQz1uLndpZHRoLHc9bi5oZWlnaHQsRT1uLnNraXJ0SGVpZ2h0LGI9dChuLmlzR2VvZ3JhcGhpYywhMCksUz10KG4uZWxsaXBzb2lkLHIuV0dTODQpLFQ9MS9TLm1heGltdW1SYWRpdXMseD1uLm5hdGl2ZVJlY3RhbmdsZSxBPW4ucmVjdGFuZ2xlO2koQSk/KG89QS53ZXN0LGw9QS5zb3V0aCx1PUEuZWFzdCxjPUEubm9ydGgpOmI/KG89Zyh4Lndlc3QpLGw9Zyh4LnNvdXRoKSx1PWcoeC5lYXN0KSxjPWcoeC5ub3J0aCkpOihvPXgud2VzdCpULGw9di0yKmYocCgteC5zb3V0aCpUKSksdT14LmVhc3QqVCxjPXYtMipmKHAoLXgubm9ydGgqVCkpKTt2YXIgUD10KG4ucmVsYXRpdmVUb0NlbnRlcixlLlpFUk8pLE09dChuLnN0cnVjdHVyZSxzLkRFRkFVTFRfU1RSVUNUVVJFKSxJPXQoTS5oZWlnaHRTY2FsZSxzLkRFRkFVTFRfU1RSVUNUVVJFLmhlaWdodFNjYWxlKSxEPXQoTS5oZWlnaHRPZmZzZXQscy5ERUZBVUxUX1NUUlVDVFVSRS5oZWlnaHRPZmZzZXQpLE89dChNLmVsZW1lbnRzUGVySGVpZ2h0LHMuREVGQVVMVF9TVFJVQ1RVUkUuZWxlbWVudHNQZXJIZWlnaHQpLFI9dChNLnN0cmlkZSxzLkRFRkFVTFRfU1RSVUNUVVJFLnN0cmlkZSksTD10KE0uZWxlbWVudE11bHRpcGxpZXIscy5ERUZBVUxUX1NUUlVDVFVSRS5lbGVtZW50TXVsdGlwbGllciksTj10KE0uaXNCaWdFbmRpYW4scy5ERUZBVUxUX1NUUlVDVFVSRS5pc0JpZ0VuZGlhbiksej0oeC5lYXN0LXgud2VzdCkvKEMtMSksQj0oeC5ub3J0aC14LnNvdXRoKS8ody0xKSxGPVMucmFkaWlTcXVhcmVkLFY9Ri54LGs9Ri55LFU9Ri56LFc9MCxHPTY1NTM2LEg9LTY1NTM2LHE9MCxqPXcsWT0wLFg9QztFPjAmJigtLXEsKytqLC0tWSwrK1gpO2Zvcih2YXIgWj1xO2o+WjsrK1ope3ZhciBKPVo7MD5KJiYoSj0wKSxKPj13JiYoSj13LTEpO3ZhciBLPXgubm9ydGgtQipKO0s9Yj9nKEspOnYtMipmKHAoLUsqVCkpO2Zvcih2YXIgUT1kKEspLCQ9aChLKSxldD1VKiQsdHQ9KEstbCkvKGMtbCksaXQ9WTtYPml0OysraXQpe3ZhciBudD1pdDswPm50JiYobnQ9MCksbnQ+PUMmJihudD1DLTEpO3ZhciBydD14Lndlc3QreipudDtiP3J0PWcocnQpOnJ0Kj1UO3ZhciBvdCxhdD1KKkMqUitudCpSO2lmKDE9PT1PKW90PXlbYXRdO2Vsc2V7b3Q9MDt2YXIgc3Q7aWYoTilmb3Ioc3Q9MDtPPnN0Oysrc3Qpb3Q9b3QqTCt5W2F0K3N0XTtlbHNlIGZvcihzdD1PLTE7c3Q+PTA7LS1zdClvdD1vdCpMK3lbYXQrc3RdfW90PW90KkkrRCxIPU1hdGgubWF4KEgsb3QpLEc9TWF0aC5taW4oRyxvdCksKGl0IT09bnR8fFohPT1KKSYmKG90LT1FKTt2YXIgbHQ9USpkKHJ0KSx1dD1RKmgocnQpLGN0PVYqbHQsZHQ9ayp1dCxodD1tKGN0Kmx0K2R0KnV0K2V0KiQpLG10PTEvaHQsZnQ9Y3QqbXQscHQ9ZHQqbXQsdnQ9ZXQqbXQ7X1tXKytdPWZ0K2x0Km90LVAueCxfW1crK109cHQrdXQqb3QtUC55LF9bVysrXT12dCskKm90LVAueixfW1crK109b3Q7dmFyIGd0PShydC1vKS8odS1vKTtfW1crK109Z3QsX1tXKytdPXR0fX1yZXR1cm57bWF4aW11bUhlaWdodDpILG1pbmltdW1IZWlnaHQ6R319LHN9KSxkZWZpbmUoIkNvcmUvVGVycmFpbk1lc2giLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCxpLG4scixvLGEpe3RoaXMuY2VudGVyPWUsdGhpcy52ZXJ0aWNlcz10LHRoaXMuaW5kaWNlcz1pLHRoaXMubWluaW11bUhlaWdodD1uLHRoaXMubWF4aW11bUhlaWdodD1yLHRoaXMuYm91bmRpbmdTcGhlcmUzRD1vLHRoaXMub2NjbHVkZWVQb2ludEluU2NhbGVkU3BhY2U9YX07cmV0dXJuIGV9KSxkZWZpbmUoIkNvcmUvVGVycmFpblByb3ZpZGVyIixbIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKCl7aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcigpfTt0KG4ucHJvdG90eXBlLHtlcnJvckV2ZW50OntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sY3JlZGl0OntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0sdGlsaW5nU2NoZW1lOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn0scmVhZHk6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxoYXNXYXRlck1hc2s6e2dldDppLnRocm93SW5zdGFudGlhdGlvbkVycm9yfSxoYXNWZXJ0ZXhOb3JtYWxzOntnZXQ6aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcn19KTt2YXIgcj1bXTtyZXR1cm4gbi5nZXRSZWd1bGFyR3JpZEluZGljZXM9ZnVuY3Rpb24odCxpKXt2YXIgbj1yW3RdO2Uobil8fChyW3RdPW49W10pO3ZhciBvPW5baV07aWYoIWUobykpe289bltpXT1uZXcgVWludDE2QXJyYXkoNioodC0xKSooaS0xKSk7Zm9yKHZhciBhPTAscz0wLGw9MDtpLTE+bDsrK2wpe2Zvcih2YXIgdT0wO3QtMT51OysrdSl7dmFyIGM9YSxkPWMrdCxoPWQrMSxtPWMrMTtvW3MrK109YyxvW3MrK109ZCxvW3MrK109bSxvW3MrK109bSxvW3MrK109ZCxvW3MrK109aCwrK2F9KythfX1yZXR1cm4gb30sbi5oZWlnaHRtYXBUZXJyYWluUXVhbGl0eT0uMjUsbi5nZXRFc3RpbWF0ZWRMZXZlbFplcm9HZW9tZXRyaWNFcnJvckZvckFIZWlnaHRtYXA9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiAyKmUubWF4aW11bVJhZGl1cypNYXRoLlBJKm4uaGVpZ2h0bWFwVGVycmFpblF1YWxpdHkvKHQqaSl9LG4ucHJvdG90eXBlLnJlcXVlc3RUaWxlR2VvbWV0cnk9aS50aHJvd0luc3RhbnRpYXRpb25FcnJvcixuLnByb3RvdHlwZS5nZXRMZXZlbE1heGltdW1HZW9tZXRyaWNFcnJvcj1pLnRocm93SW5zdGFudGlhdGlvbkVycm9yLG4ucHJvdG90eXBlLmdldFRpbGVEYXRhQXZhaWxhYmxlPWkudGhyb3dJbnN0YW50aWF0aW9uRXJyb3Isbn0pLGRlZmluZSgiQ29yZS9IZWlnaHRtYXBUZXJyYWluRGF0YSIsWyIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVmaW5lUHJvcGVydGllcyIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0dlb2dyYXBoaWNUaWxpbmdTY2hlbWUiLCIuL0hlaWdodG1hcFRlc3NlbGxhdG9yIiwiLi9NYXRoIiwiLi9SZWN0YW5nbGUiLCIuL1Rhc2tQcm9jZXNzb3IiLCIuL1RlcnJhaW5NZXNoIiwiLi9UZXJyYWluUHJvdmlkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGgoZSx0LGksbixyLG8sYSl7dmFyIHM9MSxsPWUuX3dpZHRoLHU9ZS5faGVpZ2h0LGM9byoobC0xKSxkPWMrbC0xLGg9YSoodS0xKSxtPWgrdS0xLGY9MTw8cztjLz1mLGQvPWYsaC89ZixtLz1mO3ZhciBwPWkqKGwtMSksdj1uKih1LTEpO2MtPXAsZC09cCxoLT12LG0tPXY7dmFyIGcsXyxDPTB8Yyx3PTB8ZCxFPTB8aCxiPTB8bSxTPXctQysxLFQ9Yi1FKzEseD1lLl9idWZmZXIsQT1lLl9zdHJ1Y3R1cmUsUD1TKlQsTT1QKkEuc3RyaWRlLEk9bmV3IHguY29uc3RydWN0b3IoTSksRD0wLE89QS5zdHJpZGU7aWYoTz4xKWZvcihfPUU7Yj49XzsrK18pZm9yKGc9Qzt3Pj1nOysrZylmb3IodmFyIFI9KF8qbCtnKSpPLEw9MDtPPkw7KytMKUlbRCsrXT14W1IrTF07ZWxzZSBmb3IoXz1FO2I+PV87KytfKWZvcihnPUM7dz49ZzsrK2cpSVtEKytdPXhbXypsK2ddO3JldHVybiBuZXcgeSh7YnVmZmVyOkksd2lkdGg6UyxoZWlnaHQ6VCxjaGlsZFRpbGVNYXNrOjAsc3RydWN0dXJlOmUuX3N0cnVjdHVyZSxjcmVhdGVkQnlVcHNhbXBsaW5nOiEwfSl9ZnVuY3Rpb24gbShlLHQsaSxuLHIsbyxhLGwpe3ZhciB1LGMsZCxoLG09ZS5fd2lkdGgsdj1lLl9oZWlnaHQsZz1lLl9zdHJ1Y3R1cmUsQz1nLnN0cmlkZSx3PWUuX2J1ZmZlcixFPW5ldyB3LmNvbnN0cnVjdG9yKG0qdipDKSxiPXQudGlsZVhZVG9SZWN0YW5nbGUoaSxuLHIpLFM9dC50aWxlWFlUb1JlY3RhbmdsZShvLGEsbCk7aWYoQz4xKXt2YXIgVD1nLmVsZW1lbnRzUGVySGVpZ2h0LHg9Zy5lbGVtZW50TXVsdGlwbGllcixBPWcuaXNCaWdFbmRpYW4sUD1NYXRoLnBvdyh4LFQtMSk7Zm9yKGM9MDt2PmM7KytjKWZvcihkPXMubGVycChTLm5vcnRoLFMuc291dGgsYy8odi0xKSksdT0wO20+dTsrK3Upe2g9cy5sZXJwKFMud2VzdCxTLmVhc3QsdS8obS0xKSk7dmFyIE09cCh3LFQseCxDLEEsYixtLHYsaCxkKTtfKEUsVCx4LFAsQyxBLGMqbSt1LE0pfX1lbHNlIGZvcihjPTA7dj5jOysrYylmb3IoZD1zLmxlcnAoUy5ub3J0aCxTLnNvdXRoLGMvKHYtMSkpLHU9MDttPnU7Kyt1KWg9cy5sZXJwKFMud2VzdCxTLmVhc3QsdS8obS0xKSksRVtjKm0rdV09Zih3LGIsbSx2LGgsZCk7cmV0dXJuIG5ldyB5KHtidWZmZXI6RSx3aWR0aDptLGhlaWdodDp2LGNoaWxkVGlsZU1hc2s6MCxzdHJ1Y3R1cmU6ZS5fc3RydWN0dXJlLGNyZWF0ZWRCeVVwc2FtcGxpbmc6ITB9KX1mdW5jdGlvbiBmKGUsdCxpLG4scixvKXt2YXIgYT0oci10Lndlc3QpKihpLTEpLyh0LmVhc3QtdC53ZXN0KSxzPShvLXQuc291dGgpKihuLTEpLyh0Lm5vcnRoLXQuc291dGgpLGw9MHxhLHU9bCsxO3U+PWkmJih1PWktMSxsPWktMik7dmFyIGM9MHxzLGQ9YysxO2Q+PW4mJihkPW4tMSxjPW4tMik7dmFyIGg9YS1sLG09cy1jO2M9bi0xLWMsZD1uLTEtZDt2YXIgZj1lW2MqaStsXSxwPWVbYyppK3VdLGc9ZVtkKmkrbF0sXz1lW2QqaSt1XTtyZXR1cm4gdihoLG0sZixwLGcsXyl9ZnVuY3Rpb24gcChlLHQsaSxuLHIsbyxhLHMsbCx1KXt2YXIgYz0obC1vLndlc3QpKihhLTEpLyhvLmVhc3Qtby53ZXN0KSxkPSh1LW8uc291dGgpKihzLTEpLyhvLm5vcnRoLW8uc291dGgpLGg9MHxjLG09aCsxO20+PWEmJihtPWEtMSxoPWEtMik7dmFyIGY9MHxkLHA9ZisxO3A+PXMmJihwPXMtMSxmPXMtMik7dmFyIF89Yy1oLHk9ZC1mO2Y9cy0xLWYscD1zLTEtcDt2YXIgQz1nKGUsdCxpLG4scixmKmEraCksdz1nKGUsdCxpLG4scixmKmErbSksRT1nKGUsdCxpLG4scixwKmEraCksYj1nKGUsdCxpLG4scixwKmErbSk7cmV0dXJuIHYoXyx5LEMsdyxFLGIpfWZ1bmN0aW9uIHYoZSx0LGksbixyLG8pe3JldHVybiBlPnQ/aStlKihuLWkpK3QqKG8tbik6aStlKihvLXIpK3QqKHItaSl9ZnVuY3Rpb24gZyhlLHQsaSxuLHIsbyl7byo9bjt2YXIgYSxzPTA7aWYocilmb3IoYT0wO3Q+YTsrK2Epcz1zKmkrZVtvK2FdO2Vsc2UgZm9yKGE9dC0xO2E+PTA7LS1hKXM9cyppK2VbbythXTtyZXR1cm4gc31mdW5jdGlvbiBfKGUsdCxpLG4scixvLGEscyl7YSo9cjt2YXIgbDtpZihvKWZvcihsPTA7dD5sOysrbCllW2ErbF09MHxzL24scy09ZVthK2xdKm4sbi89aTtlbHNlIGZvcihsPXQtMTtsPj0wOy0tbCllW2ErbF09MHxzL24scy09ZVthK2xdKm4sbi89aX12YXIgeT1mdW5jdGlvbihlKXt0aGlzLl9idWZmZXI9ZS5idWZmZXIsdGhpcy5fd2lkdGg9ZS53aWR0aCx0aGlzLl9oZWlnaHQ9ZS5oZWlnaHQsdGhpcy5fY2hpbGRUaWxlTWFzaz10KGUuY2hpbGRUaWxlTWFzaywxNSk7dmFyIG49YS5ERUZBVUxUX1NUUlVDVFVSRSxyPWUuc3RydWN0dXJlO2kocik/ciE9PW4mJihyLmhlaWdodFNjYWxlPXQoci5oZWlnaHRTY2FsZSxuLmhlaWdodFNjYWxlKSxyLmhlaWdodE9mZnNldD10KHIuaGVpZ2h0T2Zmc2V0LG4uaGVpZ2h0T2Zmc2V0KSxyLmVsZW1lbnRzUGVySGVpZ2h0PXQoci5lbGVtZW50c1BlckhlaWdodCxuLmVsZW1lbnRzUGVySGVpZ2h0KSxyLnN0cmlkZT10KHIuc3RyaWRlLG4uc3RyaWRlKSxyLmVsZW1lbnRNdWx0aXBsaWVyPXQoci5lbGVtZW50TXVsdGlwbGllcixuLmVsZW1lbnRNdWx0aXBsaWVyKSxyLmlzQmlnRW5kaWFuPXQoci5pc0JpZ0VuZGlhbixuLmlzQmlnRW5kaWFuKSk6cj1uLHRoaXMuX3N0cnVjdHVyZT1yLHRoaXMuX2NyZWF0ZWRCeVVwc2FtcGxpbmc9dChlLmNyZWF0ZWRCeVVwc2FtcGxpbmcsITEpLHRoaXMuX3dhdGVyTWFzaz1lLndhdGVyTWFza307bih5LnByb3RvdHlwZSx7d2F0ZXJNYXNrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2F0ZXJNYXNrfX19KTt2YXIgQz1uZXcgdSgiY3JlYXRlVmVydGljZXNGcm9tSGVpZ2h0bWFwIik7cmV0dXJuIHkucHJvdG90eXBlLmNyZWF0ZU1lc2g9ZnVuY3Rpb24odCxuLHIsYSl7dmFyIHM9dC5lbGxpcHNvaWQsdT10LnRpbGVYWVRvTmF0aXZlUmVjdGFuZ2xlKG4scixhKSxoPXQudGlsZVhZVG9SZWN0YW5nbGUobixyLGEpLG09cy5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihsLmNlbnRlcihoKSksZj10aGlzLl9zdHJ1Y3R1cmUscD1kLmdldEVzdGltYXRlZExldmVsWmVyb0dlb21ldHJpY0Vycm9yRm9yQUhlaWdodG1hcChzLHRoaXMuX3dpZHRoLHQuZ2V0TnVtYmVyT2ZYVGlsZXNBdExldmVsKDApKSx2PXAvKDE8PGEpLGc9Qy5zY2hlZHVsZVRhc2soe2hlaWdodG1hcDp0aGlzLl9idWZmZXIsc3RydWN0dXJlOmYsd2lkdGg6dGhpcy5fd2lkdGgsaGVpZ2h0OnRoaXMuX2hlaWdodCxuYXRpdmVSZWN0YW5nbGU6dSxyZWN0YW5nbGU6aCxyZWxhdGl2ZVRvQ2VudGVyOm0sZWxsaXBzb2lkOnMsc2tpcnRIZWlnaHQ6TWF0aC5taW4oNCp2LDFlMyksaXNHZW9ncmFwaGljOnQgaW5zdGFuY2VvZiBvfSk7cmV0dXJuIGkoZyk/ZShnLGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgYyhtLG5ldyBGbG9hdDMyQXJyYXkoZS52ZXJ0aWNlcyksZC5nZXRSZWd1bGFyR3JpZEluZGljZXMoZS5ncmlkV2lkdGgsZS5ncmlkSGVpZ2h0KSxlLm1pbmltdW1IZWlnaHQsZS5tYXhpbXVtSGVpZ2h0LGUuYm91bmRpbmdTcGhlcmUzRCxlLm9jY2x1ZGVlUG9pbnRJblNjYWxlZFNwYWNlKX0pOnZvaWQgMH0seS5wcm90b3R5cGUuaW50ZXJwb2xhdGVIZWlnaHQ9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuLHI9dGhpcy5fd2lkdGgsbz10aGlzLl9oZWlnaHQsYT10aGlzLl9zdHJ1Y3R1cmUscz1hLnN0cmlkZTtpZihzPjEpe3ZhciBsPWEuZWxlbWVudHNQZXJIZWlnaHQsdT1hLmVsZW1lbnRNdWx0aXBsaWVyLGM9YS5pc0JpZ0VuZGlhbjtuPXAodGhpcy5fYnVmZmVyLGwsdSxzLGMsZSxyLG8sdCxpKX1lbHNlIG49Zih0aGlzLl9idWZmZXIsZSxyLG8sdCxpKTtyZXR1cm4gbiphLmhlaWdodFNjYWxlK2EuaGVpZ2h0T2Zmc2V0fSx5LnByb3RvdHlwZS51cHNhbXBsZT1mdW5jdGlvbihlLHQsaSxuLHIsbyxhKXt2YXIgcztyZXR1cm4gcz0xPT09dGhpcy5fd2lkdGglMiYmMT09PXRoaXMuX2hlaWdodCUyP2godGhpcyxlLHQsaSxuLHIsbyxhKTptKHRoaXMsZSx0LGksbixyLG8sYSl9LHkucHJvdG90eXBlLmlzQ2hpbGRBdmFpbGFibGU9ZnVuY3Rpb24oZSx0LGksbil7dmFyIHI9MjtyZXR1cm4gaSE9PTIqZSYmKytyLG4hPT0yKnQmJihyLT0yKSwwIT09KHRoaXMuX2NoaWxkVGlsZU1hc2smMTw8cil9LHkucHJvdG90eXBlLndhc0NyZWF0ZWRCeVVwc2FtcGxpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlZEJ5VXBzYW1wbGluZ30seX0pLGRlZmluZSgiQ29yZS9FbGxpcHNvaWRUZXJyYWluUHJvdmlkZXIiLFsiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0VsbGlwc29pZCIsIi4vRXZlbnQiLCIuL0dlb2dyYXBoaWNUaWxpbmdTY2hlbWUiLCIuL0hlaWdodG1hcFRlcnJhaW5EYXRhIiwiLi9UZXJyYWluUHJvdmlkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMpeyJ1c2Ugc3RyaWN0Ijt2YXIgbD1mdW5jdGlvbihpKXtpPWUoaSx7fSksdGhpcy5fdGlsaW5nU2NoZW1lPWkudGlsaW5nU2NoZW1lLHQodGhpcy5fdGlsaW5nU2NoZW1lKXx8KHRoaXMuX3RpbGluZ1NjaGVtZT1uZXcgbyh7ZWxsaXBzb2lkOmUoaS5lbGxpcHNvaWQsbi5XR1M4NCl9KSksdGhpcy5fbGV2ZWxaZXJvTWF4aW11bUdlb21ldHJpY0Vycm9yPXMuZ2V0RXN0aW1hdGVkTGV2ZWxaZXJvR2VvbWV0cmljRXJyb3JGb3JBSGVpZ2h0bWFwKHRoaXMuX3RpbGluZ1NjaGVtZS5lbGxpcHNvaWQsNjQsdGhpcy5fdGlsaW5nU2NoZW1lLmdldE51bWJlck9mWFRpbGVzQXRMZXZlbCgwKSk7dmFyIGw9MTYsdT0xNjt0aGlzLl90ZXJyYWluRGF0YT1uZXcgYSh7YnVmZmVyOm5ldyBVaW50OEFycmF5KGwqdSksd2lkdGg6MTYsaGVpZ2h0OjE2fSksdGhpcy5fZXJyb3JFdmVudD1uZXcgcn07cmV0dXJuIGkobC5wcm90b3R5cGUse2Vycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvckV2ZW50fX0sY3JlZGl0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfX0sdGlsaW5nU2NoZW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsaW5nU2NoZW1lfX0scmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiEwfX0saGFzV2F0ZXJNYXNrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX19LGhhc1ZlcnRleE5vcm1hbHM6e2dldDpmdW5jdGlvbigpe3JldHVybiExfX19KSxsLnByb3RvdHlwZS5yZXF1ZXN0VGlsZUdlb21ldHJ5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RlcnJhaW5EYXRhfSxsLnByb3RvdHlwZS5nZXRMZXZlbE1heGltdW1HZW9tZXRyaWNFcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGV2ZWxaZXJvTWF4aW11bUdlb21ldHJpY0Vycm9yLygxPDxlKX0sbC5wcm90b3R5cGUuZ2V0VGlsZURhdGFBdmFpbGFibGU9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSxsfSksZGVmaW5lKCJXaWRnZXRzL0Jhc2VMYXllclBpY2tlci9CYXNlTGF5ZXJQaWNrZXJWaWV3TW9kZWwiLFsiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vQ29yZS9FbGxpcHNvaWRUZXJyYWluUHJvdmlkZXIiLCIuLi8uLi9Db3JlL2lzQXJyYXkiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vY3JlYXRlQ29tbWFuZCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO3ZhciBsPWZ1bmN0aW9uKGkpe2k9ZShpLGUuRU1QVFlfT0JKRUNUKTt2YXIgbj1pLmdsb2JlLGw9ZShpLmltYWdlcnlQcm92aWRlclZpZXdNb2RlbHMsW10pLHU9ZShpLnRlcnJhaW5Qcm92aWRlclZpZXdNb2RlbHMsW10pO3RoaXMuX2dsb2JlPW4sdGhpcy5pbWFnZXJ5UHJvdmlkZXJWaWV3TW9kZWxzPWwuc2xpY2UoMCksdGhpcy50ZXJyYWluUHJvdmlkZXJWaWV3TW9kZWxzPXUuc2xpY2UoMCksdGhpcy5kcm9wRG93blZpc2libGU9ITEsYS50cmFjayh0aGlzLFsiaW1hZ2VyeVByb3ZpZGVyVmlld01vZGVscyIsInRlcnJhaW5Qcm92aWRlclZpZXdNb2RlbHMiLCJkcm9wRG93blZpc2libGUiXSksdGhpcy5idXR0b25Ub29sdGlwPXZvaWQgMCxhLmRlZmluZVByb3BlcnR5KHRoaXMsImJ1dHRvblRvb2x0aXAiLGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5zZWxlY3RlZEltYWdlcnksaT10aGlzLnNlbGVjdGVkVGVycmFpbixuPXQoZSk/ZS5uYW1lOnZvaWQgMCxyPXQoaSk/aS5uYW1lOnZvaWQgMDtyZXR1cm4gdChuKSYmdChyKT9uKyJcbiIrcjp0KG4pP246cn0pLHRoaXMuYnV0dG9uSW1hZ2VVcmw9dm9pZCAwLGEuZGVmaW5lUHJvcGVydHkodGhpcywiYnV0dG9uSW1hZ2VVcmwiLGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5zZWxlY3RlZEltYWdlcnk7cmV0dXJuIHQoZSk/ZS5pY29uVXJsOnZvaWQgMH0pLHRoaXMuc2VsZWN0ZWRJbWFnZXJ5PXZvaWQgMDt2YXIgYz1hLm9ic2VydmFibGUoKTt0aGlzLl9jdXJyZW50SW1hZ2VyeVByb3ZpZGVycz1bXSxhLmRlZmluZVByb3BlcnR5KHRoaXMsInNlbGVjdGVkSW1hZ2VyeSIse2dldDpmdW5jdGlvbigpe3JldHVybiBjKCl9LHNldDpmdW5jdGlvbihlKXtpZihjKCk9PT1lKXJldHVybiB0aGlzLmRyb3BEb3duVmlzaWJsZT0hMSx2b2lkIDA7dmFyIGksbj10aGlzLl9jdXJyZW50SW1hZ2VyeVByb3ZpZGVycyxyPW4ubGVuZ3RoLGE9dGhpcy5fZ2xvYmUuaW1hZ2VyeUxheWVycztmb3IoaT0wO3I+aTtpKyspZm9yKHZhciBzPWEubGVuZ3RoLGw9MDtzPmw7bCsrKXt2YXIgdT1hLmdldChsKTtpZih1LmltYWdlcnlQcm92aWRlcj09PW5baV0pe2EucmVtb3ZlKHUpO2JyZWFrfX1pZih0KGUpKXt2YXIgZD1lLmNyZWF0aW9uQ29tbWFuZCgpO2lmKG8oZCkpe3ZhciBoPWQubGVuZ3RoO2ZvcihpPWgtMTtpPj0wO2ktLSlhLmFkZEltYWdlcnlQcm92aWRlcihkW2ldLDApO3RoaXMuX2N1cnJlbnRJbWFnZXJ5UHJvdmlkZXJzPWQuc2xpY2UoMCl9ZWxzZSB0aGlzLl9jdXJyZW50SW1hZ2VyeVByb3ZpZGVycz1bZF0sYS5hZGRJbWFnZXJ5UHJvdmlkZXIoZCwwKX1jKGUpLHRoaXMuZHJvcERvd25WaXNpYmxlPSExfX0pLHRoaXMuc2VsZWN0ZWRUZXJyYWluPXZvaWQgMDt2YXIgZD1hLm9ic2VydmFibGUoKTthLmRlZmluZVByb3BlcnR5KHRoaXMsInNlbGVjdGVkVGVycmFpbiIse2dldDpmdW5jdGlvbigpe3JldHVybiBkKCl9LHNldDpmdW5jdGlvbihlKXtpZihkKCk9PT1lKXJldHVybiB0aGlzLmRyb3BEb3duVmlzaWJsZT0hMSx2b2lkIDA7dmFyIGk7dChlKSYmKGk9ZS5jcmVhdGlvbkNvbW1hbmQoKSksdGhpcy5fZ2xvYmUuZGVwdGhUZXN0QWdhaW5zdFRlcnJhaW49IShpIGluc3RhbmNlb2YgciksdGhpcy5fZ2xvYmUudGVycmFpblByb3ZpZGVyPWksZChlKSx0aGlzLmRyb3BEb3duVmlzaWJsZT0hMX19KTt2YXIgaD10aGlzO3RoaXMuX3RvZ2dsZURyb3BEb3duPXMoZnVuY3Rpb24oKXtoLmRyb3BEb3duVmlzaWJsZT0haC5kcm9wRG93blZpc2libGV9KSx0aGlzLnNlbGVjdGVkSW1hZ2VyeT1lKGkuc2VsZWN0ZWRJbWFnZXJ5UHJvdmlkZXJWaWV3TW9kZWwsbFswXSksdGhpcy5zZWxlY3RlZFRlcnJhaW49ZShpLnNlbGVjdGVkVGVycmFpblByb3ZpZGVyVmlld01vZGVsLHVbMF0pfTtyZXR1cm4gaShsLnByb3RvdHlwZSx7dG9nZ2xlRHJvcERvd246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90b2dnbGVEcm9wRG93bn19LGdsb2JlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2xvYmV9fX0pLGx9KSxkZWZpbmUoIldpZGdldHMvQmFzZUxheWVyUGlja2VyL0Jhc2VMYXllclBpY2tlciIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL2dldEVsZW1lbnQiLCIuL0Jhc2VMYXllclBpY2tlclZpZXdNb2RlbCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbihlLHQpe2U9byhlKTt2YXIgaT1uZXcgYSh0KSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpO24udHlwZT0iYnV0dG9uIixuLmNsYXNzTmFtZT0iY2VzaXVtLWJ1dHRvbiBjZXNpdW0tdG9vbGJhci1idXR0b24iLG4uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJhdHRyOiB7IHRpdGxlOiBidXR0b25Ub29sdGlwIH0sY2xpY2s6IHRvZ2dsZURyb3BEb3duIiksZS5hcHBlbmRDaGlsZChuKTt2YXIgcz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTtzLnNldEF0dHJpYnV0ZSgiZHJhZ2dhYmxlIiwiZmFsc2UiKSxzLmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1zZWxlY3RlZCIscy5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImF0dHI6IHsgc3JjOiBidXR0b25JbWFnZVVybCB9Iiksbi5hcHBlbmRDaGlsZChzKTt2YXIgbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtsLmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1kcm9wRG93biIsbC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NzczogeyAiY2VzaXVtLWJhc2VMYXllclBpY2tlci1kcm9wRG93bi12aXNpYmxlIiA6IGRyb3BEb3duVmlzaWJsZSB9JyksZS5hcHBlbmRDaGlsZChsKTt2YXIgdT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt1LmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1zZWN0aW9uVGl0bGUiLHUuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJ2aXNpYmxlOiBpbWFnZXJ5UHJvdmlkZXJWaWV3TW9kZWxzLmxlbmd0aCA+IDAiKSx1LmlubmVySFRNTD0iSW1hZ2VyeSIsbC5hcHBlbmRDaGlsZCh1KTt2YXIgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtjLmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1jaG9pY2VzIixjLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiZm9yZWFjaDogaW1hZ2VyeVByb3ZpZGVyVmlld01vZGVscyIpLGwuYXBwZW5kQ2hpbGQoYyk7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZC5jbGFzc05hbWU9ImNlc2l1bS1iYXNlTGF5ZXJQaWNrZXItaXRlbSIsZC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NzczogeyAiY2VzaXVtLWJhc2VMYXllclBpY2tlci1zZWxlY3RlZEl0ZW0iIDogJGRhdGEgPT09ICRwYXJlbnQuc2VsZWN0ZWRJbWFnZXJ5IH0sYXR0cjogeyB0aXRsZTogdG9vbHRpcCB9LHZpc2libGU6IGNyZWF0aW9uQ29tbWFuZC5jYW5FeGVjdXRlLGNsaWNrOiBmdW5jdGlvbigkZGF0YSkgeyAkcGFyZW50LnNlbGVjdGVkSW1hZ2VyeSA9ICRkYXRhOyB9JyksYy5hcHBlbmRDaGlsZChkKTt2YXIgaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTtoLmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1pdGVtSWNvbiIsaC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImF0dHI6IHsgc3JjOiBpY29uVXJsIH0iKSxoLnNldEF0dHJpYnV0ZSgiZHJhZ2dhYmxlIiwiZmFsc2UiKSxkLmFwcGVuZENoaWxkKGgpO3ZhciBtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO20uY2xhc3NOYW1lPSJjZXNpdW0tYmFzZUxheWVyUGlja2VyLWl0ZW1MYWJlbCIsbS5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsInRleHQ6IG5hbWUiKSxkLmFwcGVuZENoaWxkKG0pO3ZhciBmPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2YuY2xhc3NOYW1lPSJjZXNpdW0tYmFzZUxheWVyUGlja2VyLXNlY3Rpb25UaXRsZSIsZi5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsInZpc2libGU6IHRlcnJhaW5Qcm92aWRlclZpZXdNb2RlbHMubGVuZ3RoID4gMCIpLGYuaW5uZXJIVE1MPSJUZXJyYWluIixsLmFwcGVuZENoaWxkKGYpO3ZhciBwPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3AuY2xhc3NOYW1lPSJjZXNpdW0tYmFzZUxheWVyUGlja2VyLWNob2ljZXMiLHAuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJmb3JlYWNoOiB0ZXJyYWluUHJvdmlkZXJWaWV3TW9kZWxzIiksbC5hcHBlbmRDaGlsZChwKTt2YXIgdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt2LmNsYXNzTmFtZT0iY2VzaXVtLWJhc2VMYXllclBpY2tlci1pdGVtIix2LnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ICJjZXNpdW0tYmFzZUxheWVyUGlja2VyLXNlbGVjdGVkSXRlbSIgOiAkZGF0YSA9PT0gJHBhcmVudC5zZWxlY3RlZFRlcnJhaW4gfSxhdHRyOiB7IHRpdGxlOiB0b29sdGlwIH0sdmlzaWJsZTogY3JlYXRpb25Db21tYW5kLmNhbkV4ZWN1dGUsY2xpY2s6IGZ1bmN0aW9uKCRkYXRhKSB7ICRwYXJlbnQuc2VsZWN0ZWRUZXJyYWluID0gJGRhdGE7IH0nKSxwLmFwcGVuZENoaWxkKHYpO3ZhciBnPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpO2cuY2xhc3NOYW1lPSJjZXNpdW0tYmFzZUxheWVyUGlja2VyLWl0ZW1JY29uIixnLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiYXR0cjogeyBzcmM6IGljb25VcmwgfSIpLGcuc2V0QXR0cmlidXRlKCJkcmFnZ2FibGUiLCJmYWxzZSIpLHYuYXBwZW5kQ2hpbGQoZyk7dmFyIF89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7Xy5jbGFzc05hbWU9ImNlc2l1bS1iYXNlTGF5ZXJQaWNrZXItaXRlbUxhYmVsIixfLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwidGV4dDogbmFtZSIpLHYuYXBwZW5kQ2hpbGQoXyksci5hcHBseUJpbmRpbmdzKGksbiksci5hcHBseUJpbmRpbmdzKGksbCksdGhpcy5fdmlld01vZGVsPWksdGhpcy5fY29udGFpbmVyPWUsdGhpcy5fZWxlbWVudD1uLHRoaXMuX2Ryb3BQYW5lbD1sLHRoaXMuX2Nsb3NlRHJvcERvd249ZnVuY3Rpb24oZSl7bi5jb250YWlucyhlLnRhcmdldCl8fGwuY29udGFpbnMoZS50YXJnZXQpfHwoaS5kcm9wRG93blZpc2libGU9ITEpfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMuX2Nsb3NlRHJvcERvd24sITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLHRoaXMuX2Nsb3NlRHJvcERvd24sITApfTtyZXR1cm4gdChzLnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sdmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld01vZGVsfX19KSxzLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxzLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsdGhpcy5fY2xvc2VEcm9wRG93biwhMCksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsdGhpcy5fY2xvc2VEcm9wRG93biwhMCksci5jbGVhbk5vZGUodGhpcy5fZWxlbWVudCksci5jbGVhbk5vZGUodGhpcy5fZHJvcFBhbmVsKSx0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fZWxlbWVudCksdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX2Ryb3BQYW5lbCksaSh0aGlzKX0sc30pLGRlZmluZSgiQ29yZS9qc29ucCIsWyIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSx0LGkpe2UucHVzaChlbmNvZGVVUklDb21wb25lbnQodCkrIj0iK2VuY29kZVVSSUNvbXBvbmVudChpKSl9dmFyIHI9ZnVuY3Rpb24obyxhKXthPXQoYSx0LkVNUFRZX09CSkVDVCk7dmFyIHMsbD1lLmRlZmVyKCk7ZG8gcz0ianNvbnAiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMiw4KTt3aGlsZShpKHdpbmRvd1tzXSkpO3dpbmRvd1tzXT1mdW5jdGlvbihlKXtsLnJlc29sdmUoZSk7dHJ5e2RlbGV0ZSB3aW5kb3dbc119Y2F0Y2godCl7d2luZG93W3NdPXZvaWQgMH19O3ZhciB1PXQoYS5jYWxsYmFja1BhcmFtZXRlck5hbWUsImNhbGxiYWNrIiksYz1bXTtuKGMsdSxzKTt2YXIgZD10KGEucGFyYW1ldGVycyx0LkVNUFRZX09CSkVDVCk7Zm9yKHZhciBoIGluIGQpZC5oYXNPd25Qcm9wZXJ0eShoKSYmbihjLGgsZFtoXSk7Yy5sZW5ndGg+MCYmKG8rPS0xPT09by5pbmRleE9mKCI/Iik/Ij8iOiImIixvKz1jLmpvaW4oIiYiKSk7dmFyIG09YS5wcm94eTtyZXR1cm4gaShtKSYmKG89bS5nZXRVUkwobykpLHIubG9hZEFuZEV4ZWN1dGVTY3JpcHQobyxzLGwpLGwucHJvbWlzZX07cmV0dXJuIHIubG9hZEFuZEV4ZWN1dGVTY3JpcHQ9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO24uYXN5bmM9ITAsbi5zcmM9ZTt2YXIgcj1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdO24ub25sb2FkPWZ1bmN0aW9uKCl7bi5vbmxvYWQ9dm9pZCAwLHIucmVtb3ZlQ2hpbGQobil9LG4ub25lcnJvcj1mdW5jdGlvbihlKXtpLnJlamVjdChlKX0sci5hcHBlbmRDaGlsZChuKX0sci5kZWZhdWx0TG9hZEFuZEV4ZWN1dGVTY3JpcHQ9ci5sb2FkQW5kRXhlY3V0ZVNjcmlwdCxyfSksZGVmaW5lKCJDb3JlL2dldEltYWdlUGl4ZWxzIixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17fSxpPWZ1bmN0aW9uKGksbixyKXtlKG4pfHwobj1pLndpZHRoKSxlKHIpfHwocj1pLmhlaWdodCk7dmFyIG89dFtuXTtlKG8pfHwobz17fSx0W25dPW8pO3ZhciBhPW9bcl07aWYoIWUoYSkpe3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpO3Mud2lkdGg9bixzLmhlaWdodD1yLGE9cy5nZXRDb250ZXh0KCIyZCIpLGEuZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPSJjb3B5IixvW3JdPWF9cmV0dXJuIGEuZHJhd0ltYWdlKGksMCwwLG4sciksYS5nZXRJbWFnZURhdGEoMCwwLG4scikuZGF0YX07cmV0dXJuIGl9KSxkZWZpbmUoIlNjZW5lL0Rpc2NhcmRNaXNzaW5nVGlsZUltYWdlUG9saWN5IixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvZ2V0SW1hZ2VQaXhlbHMiLCIuLi9Db3JlL2xvYWRJbWFnZVZpYUJsb2IiLCIuLi9UaGlyZFBhcnR5L3doZW4iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyl7InVzZSBzdHJpY3QiO3ZhciBhPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIHMoZSl7dChlLmJsb2IpJiYodS5fbWlzc2luZ0ltYWdlQnl0ZUxlbmd0aD1lLmJsb2Iuc2l6ZSk7dmFyIGk9bihlKTtpZihhLmRpc2FibGVDaGVja0lmQWxsUGl4ZWxzQXJlVHJhbnNwYXJlbnQpe2Zvcih2YXIgcj0hMCxvPWUud2lkdGgscz1hLnBpeGVsc1RvQ2hlY2ssbD0wLGM9cy5sZW5ndGg7ciYmYz5sOysrbCl7dmFyIGQ9c1tsXSxoPTQqZC54K2QueSpvLG09aVtoKzNdO20+MCYmKHI9ITEpfXImJihpPXZvaWQgMCl9dS5fbWlzc2luZ0ltYWdlUGl4ZWxzPWksdS5faXNSZWFkeT0hMH1mdW5jdGlvbiBsKCl7dS5fbWlzc2luZ0ltYWdlUGl4ZWxzPXZvaWQgMCx1Ll9pc1JlYWR5PSEwfWlmKGE9ZShhLGUuRU1QVFlfT0JKRUNUKSwhdChhLm1pc3NpbmdJbWFnZVVybCkpdGhyb3cgbmV3IGkoIm9wdGlvbnMubWlzc2luZ0ltYWdlVXJsIGlzIHJlcXVpcmVkLiIpO2lmKCF0KGEucGl4ZWxzVG9DaGVjaykpdGhyb3cgbmV3IGkoIm9wdGlvbnMucGl4ZWxzVG9DaGVjayBpcyByZXF1aXJlZC4iKTt0aGlzLl9waXhlbHNUb0NoZWNrPWEucGl4ZWxzVG9DaGVjayx0aGlzLl9taXNzaW5nSW1hZ2VQaXhlbHM9dm9pZCAwLHRoaXMuX21pc3NpbmdJbWFnZUJ5dGVMZW5ndGg9dm9pZCAwLHRoaXMuX2lzUmVhZHk9ITE7dmFyIHU9dGhpcztvKHIoYS5taXNzaW5nSW1hZ2VVcmwpLHMsbCl9O3JldHVybiBhLnByb3RvdHlwZS5pc1JlYWR5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzUmVhZHl9LGEucHJvdG90eXBlLnNob3VsZERpc2NhcmRJbWFnZT1mdW5jdGlvbihlKXtpZighdGhpcy5faXNSZWFkeSl0aHJvdyBuZXcgaSgic2hvdWxkRGlzY2FyZEltYWdlIG11c3Qgbm90IGJlIGNhbGxlZCBiZWZvcmUgdGhlIGRpc2NhcmQgcG9saWN5IGlzIHJlYWR5LiIpO3ZhciByPXRoaXMuX3BpeGVsc1RvQ2hlY2ssbz10aGlzLl9taXNzaW5nSW1hZ2VQaXhlbHM7aWYoIXQobykpcmV0dXJuITE7aWYodChlLmJsb2IpJiZlLmJsb2Iuc2l6ZSE9PXRoaXMuX21pc3NpbmdJbWFnZUJ5dGVMZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBhPW4oZSkscz1lLndpZHRoLGw9MCx1PXIubGVuZ3RoO3U+bDsrK2wpZm9yKHZhciBjPXJbbF0sZD00KmMueCtjLnkqcyxoPTA7ND5oOysraCl7dmFyIG09ZCtoO2lmKGFbbV0hPT1vW21dKXJldHVybiExfXJldHVybiEwfSxhfSksZGVmaW5lKCJTY2VuZS9BcmNHaXNNYXBTZXJ2ZXJJbWFnZXJ5UHJvdmlkZXIiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DcmVkaXQiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4uL0NvcmUvR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZSIsIi4uL0NvcmUvanNvbnAiLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL0NvcmUvVGlsZVByb3ZpZGVyRXJyb3IiLCIuLi9Db3JlL1dlYk1lcmNhdG9yUHJvamVjdGlvbiIsIi4uL0NvcmUvV2ViTWVyY2F0b3JUaWxpbmdTY2hlbWUiLCIuLi9UaGlyZFBhcnR5L3doZW4iLCIuL0Rpc2NhcmRNaXNzaW5nVGlsZUltYWdlUG9saWN5IiwiLi9JbWFnZXJ5UHJvdmlkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBnKGUsdCxpLHIpe3ZhciBvO2lmKGUuX3VzZVRpbGVzKW89ZS5fdXJsKyIvdGlsZS8iK3IrIi8iK2krIi8iK3Q7ZWxzZXt2YXIgYT1lLl90aWxpbmdTY2hlbWUudGlsZVhZVG9OYXRpdmVSZWN0YW5nbGUodCxpLHIpLHM9YS53ZXN0KyIlMkMiK2Euc291dGgrIiUyQyIrYS5lYXN0KyIlMkMiK2Eubm9ydGg7bz1lLl91cmwrIi9leHBvcnQ/IixvKz0iYmJveD0iK3Msbys9IiZiYm94U1I9NDMyNiZzaXplPTI1NiUyQzI1NiZpbWFnZVNSPTQzMjYmZm9ybWF0PXBuZyZ0cmFuc3BhcmVudD10cnVlJmY9aW1hZ2UifXZhciBsPWUuX3Byb3h5O3JldHVybiBuKGwpJiYobz1sLmdldFVSTChvKSksb312YXIgXz1mdW5jdGlvbihyKXtmdW5jdGlvbiBvKGkpe3ZhciByPWkudGlsZUluZm87aWYoQy5fdXNlVGlsZXMmJm4ocikpe2lmKEMuX3RpbGVXaWR0aD1yLnJvd3MsQy5fdGlsZUhlaWdodD1yLmNvbHMsMTAyMTAwPT09ci5zcGF0aWFsUmVmZXJlbmNlLndraWR8fDEwMjExMz09PXIuc3BhdGlhbFJlZmVyZW5jZS53a2lkKUMuX3RpbGluZ1NjaGVtZT1uZXcgbTtlbHNle2lmKDQzMjYhPT1pLnRpbGVJbmZvLnNwYXRpYWxSZWZlcmVuY2Uud2tpZCl7dmFyIG89IlRpbGUgc3BhdGlhbCByZWZlcmVuY2UgV0tJRCAiK2kudGlsZUluZm8uc3BhdGlhbFJlZmVyZW5jZS53a2lkKyIgaXMgbm90IHN1cHBvcnRlZC4iO3JldHVybiB5PWQuaGFuZGxlRXJyb3IoeSxDLEMuX2Vycm9yRXZlbnQsbyx2b2lkIDAsdm9pZCAwLHZvaWQgMCxfKSx2b2lkIDB9Qy5fdGlsaW5nU2NoZW1lPW5ldyBsfWlmKEMuX21heGltdW1MZXZlbD1pLnRpbGVJbmZvLmxvZHMubGVuZ3RoLTEsbihpLmZ1bGxFeHRlbnQpKXt2YXIgYT1DLl90aWxpbmdTY2hlbWUucHJvamVjdGlvbjtpZihuKGkuZnVsbEV4dGVudC5zcGF0aWFsUmVmZXJlbmNlKSYmbihpLmZ1bGxFeHRlbnQuc3BhdGlhbFJlZmVyZW5jZS53a2lkKSlpZigxMDIxMDA9PT1pLmZ1bGxFeHRlbnQuc3BhdGlhbFJlZmVyZW5jZS53a2lkfHwxMDIxMTM9PT1pLmZ1bGxFeHRlbnQuc3BhdGlhbFJlZmVyZW5jZS53a2lkKWE9bmV3IGg7ZWxzZXtpZig0MzI2IT09aS5mdWxsRXh0ZW50LnNwYXRpYWxSZWZlcmVuY2Uud2tpZCl7dmFyIHU9ImZ1bGxFeHRlbnQuc3BhdGlhbFJlZmVyZW5jZSBXS0lEICIraS5mdWxsRXh0ZW50LnNwYXRpYWxSZWZlcmVuY2Uud2tpZCsiIGlzIG5vdCBzdXBwb3J0ZWQuIjtyZXR1cm4geT1kLmhhbmRsZUVycm9yKHksQyxDLl9lcnJvckV2ZW50LHUsdm9pZCAwLHZvaWQgMCx2b2lkIDAsXyksdm9pZCAwfWE9bmV3IHN9dmFyIGY9YS51bnByb2plY3QobmV3IGUoaS5mdWxsRXh0ZW50LnhtaW4saS5mdWxsRXh0ZW50LnltaW4pKSx2PWEudW5wcm9qZWN0KG5ldyBlKGkuZnVsbEV4dGVudC54bWF4LGkuZnVsbEV4dGVudC55bWF4KSk7Qy5fcmVjdGFuZ2xlPW5ldyBjKGYubG9uZ2l0dWRlLGYubGF0aXR1ZGUsdi5sb25naXR1ZGUsdi5sYXRpdHVkZSl9ZWxzZSBDLl9yZWN0YW5nbGU9Qy5fdGlsaW5nU2NoZW1lLnJlY3RhbmdsZTtuKEMuX3RpbGVEaXNjYXJkUG9saWN5KXx8KEMuX3RpbGVEaXNjYXJkUG9saWN5PW5ldyBwKHttaXNzaW5nSW1hZ2VVcmw6ZyhDLDAsMCxDLl9tYXhpbXVtTGV2ZWwpLHBpeGVsc1RvQ2hlY2s6W25ldyBlKDAsMCksbmV3IGUoMjAwLDIwKSxuZXcgZSgyMCwyMDApLG5ldyBlKDgwLDExMCksbmV3IGUoMTYwLDEzMCldLGRpc2FibGVDaGVja0lmQWxsUGl4ZWxzQXJlVHJhbnNwYXJlbnQ6ITB9KSksQy5fdXNlVGlsZXM9ITB9ZWxzZSBDLl90aWxlV2lkdGg9MjU2LEMuX3RpbGVIZWlnaHQ9MjU2LEMuX3RpbGluZ1NjaGVtZT1uZXcgbCxDLl9yZWN0YW5nbGU9Qy5fdGlsaW5nU2NoZW1lLnJlY3RhbmdsZSxDLl91c2VUaWxlcz0hMTtuKGkuY29weXJpZ2h0VGV4dCkmJmkuY29weXJpZ2h0VGV4dC5sZW5ndGg+MCYmKEMuX2NyZWRpdD1uZXcgdChpLmNvcHlyaWdodFRleHQpKSxDLl9yZWFkeT0hMCxkLmhhbmRsZVN1Y2Nlc3MoeSl9ZnVuY3Rpb24gdigpe3ZhciBlPSJBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBhY2Nlc3NpbmcgIitDLl91cmwrIi4iO3k9ZC5oYW5kbGVFcnJvcih5LEMsQy5fZXJyb3JFdmVudCxlLHZvaWQgMCx2b2lkIDAsdm9pZCAwLF8pfWZ1bmN0aW9uIF8oKXt2YXIgZT11KEMuX3VybCx7cGFyYW1ldGVyczp7ZjoianNvbiJ9LHByb3h5OkMuX3Byb3h5fSk7ZihlLG8sdil9cj1pKHIse30pLHRoaXMuX3VybD1yLnVybCx0aGlzLl90aWxlRGlzY2FyZFBvbGljeT1yLnRpbGVEaXNjYXJkUG9saWN5LHRoaXMuX3Byb3h5PXIucHJveHksdGhpcy5fdGlsZVdpZHRoPXZvaWQgMCx0aGlzLl90aWxlSGVpZ2h0PXZvaWQgMCx0aGlzLl9tYXhpbXVtTGV2ZWw9dm9pZCAwLHRoaXMuX3RpbGluZ1NjaGVtZT12b2lkIDAsdGhpcy5fY3JlZGl0PXZvaWQgMCx0aGlzLl91c2VUaWxlcz1pKHIudXNlUHJlQ2FjaGVkVGlsZXNJZkF2YWlsYWJsZSwhMCksdGhpcy5fcmVjdGFuZ2xlPXZvaWQgMCx0aGlzLl9lcnJvckV2ZW50PW5ldyBhLHRoaXMuX3JlYWR5PSExO3ZhciB5LEM9dGhpcztfKCl9O3JldHVybiByKF8ucHJvdG90eXBlLHt1cmw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cmx9fSxwcm94eTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb3h5fX0sdGlsZVdpZHRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZVdpZHRofX0sdGlsZUhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGVIZWlnaHR9fSxtYXhpbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtTGV2ZWx9fSxtaW5pbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiAwfX0sdGlsaW5nU2NoZW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsaW5nU2NoZW1lfX0scmVjdGFuZ2xlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdGFuZ2xlfX0sdGlsZURpc2NhcmRQb2xpY3k6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlRGlzY2FyZFBvbGljeX19LGVycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvckV2ZW50fX0scmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkeX19LGNyZWRpdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWRpdH19LHVzaW5nUHJlY2FjaGVkVGlsZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91c2VUaWxlc319LGhhc0FscGhhQ2hhbm5lbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9fX0pLF8ucHJvdG90eXBlLmdldFRpbGVDcmVkaXRzPWZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH0sXy5wcm90b3R5cGUucmVxdWVzdEltYWdlPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1nKHRoaXMsZSx0LGkpO3JldHVybiB2LmxvYWRJbWFnZSh0aGlzLG4pfSxfLnByb3RvdHlwZS5waWNrRmVhdHVyZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSxffSksZGVmaW5lKCJDb3JlL0JpbmdNYXBzQXBpIixbIi4vZGVmaW5lZCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17fTt0LmRlZmF1bHRLZXk9dm9pZCAwO3ZhciBpPSExO3JldHVybiB0LmdldEtleT1mdW5jdGlvbihuKXtyZXR1cm4gZShuKT9uOmUodC5kZWZhdWx0S2V5KT90LmRlZmF1bHRLZXk6KGl8fChjb25zb2xlLmxvZygiVGhpcyBhcHBsaWNhdGlvbiBpcyB1c2luZyBDZXNpdW0ncyBkZWZhdWx0IEJpbmcgTWFwcyBrZXkuICBQbGVhc2UgY3JlYXRlIGEgbmV3IGtleSBmb3IgdGhlIGFwcGxpY2F0aW9uIGFzIHNvb24gYXMgcG9zc2libGUgYW5kIHByaW9yIHRvIGRlcGxveW1lbnQgYnkgdmlzaXRpbmcgaHR0cHM6Ly93d3cuYmluZ21hcHNwb3J0YWwuY29tLywgYW5kIHByb3ZpZGUgeW91ciBrZXkgdG8gQ2VzaXVtIGJ5IHNldHRpbmcgdGhlIENlc2l1bS5CaW5nTWFwc0FwaS5kZWZhdWx0S2V5IHByb3BlcnR5IGJlZm9yZSBjb25zdHJ1Y3RpbmcgdGhlIENlc2l1bVdpZGdldCBvciBhbnkgb3RoZXIgb2JqZWN0IHRoYXQgdXNlcyB0aGUgQmluZyBNYXBzIEFQSS4iKSxpPSEwKSwiQWoxb255Xy1UeXAtS2pHOVNKV2lLU0hZMjNVMUttSzd5QW1aYTlsRG11RjJvc1hXa2NaMjJWUHNxbUN0MFRDdCIpfSx0fSksZGVmaW5lKCJTY2VuZS9CaW5nTWFwc1N0eWxlIixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtBRVJJQUw6IkFlcmlhbCIsQUVSSUFMX1dJVEhfTEFCRUxTOiJBZXJpYWxXaXRoTGFiZWxzIixST0FEOiJSb2FkIixPUkROQU5DRV9TVVJWRVk6Ik9yZG5hbmNlU3VydmV5IixDT0xMSU5TX0JBUlQ6IkNvbGxpbnNCYXJ0In07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL0JpbmdNYXBzSW1hZ2VyeVByb3ZpZGVyIixbIi4uL0NvcmUvQmluZ01hcHNBcGkiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NyZWRpdCIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRXZlbnQiLCIuLi9Db3JlL2pzb25wIiwiLi4vQ29yZS9NYXRoIiwiLi4vQ29yZS9SZWN0YW5nbGUiLCIuLi9Db3JlL1RpbGVQcm92aWRlckVycm9yIiwiLi4vQ29yZS9XZWJNZXJjYXRvclRpbGluZ1NjaGVtZSIsIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vQmluZ01hcHNTdHlsZSIsIi4vRGlzY2FyZE1pc3NpbmdUaWxlSW1hZ2VQb2xpY3kiLCIuL0ltYWdlcnlQcm92aWRlciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGcoZSx0LGksbil7dmFyIG89ZS5faW1hZ2VVcmxUZW1wbGF0ZSxhPXkudGlsZVhZVG9RdWFkS2V5KHQsaSxuKTtvPW8ucmVwbGFjZSgie3F1YWRrZXl9IixhKTt2YXIgcz1lLl9pbWFnZVVybFN1YmRvbWFpbnMsbD0odCtpK24pJXMubGVuZ3RoO289by5yZXBsYWNlKCJ7c3ViZG9tYWlufSIsc1tsXSk7dmFyIHU9ZS5fcHJveHk7cmV0dXJuIHIodSkmJihvPXUuZ2V0VVJMKG8pKSxvfWZ1bmN0aW9uIF8oZSx0LGkpeysrdDtmb3IodmFyIG49W10scj0wLG89ZS5sZW5ndGg7bz5yOysrcil7Zm9yKHZhciBhPWVbcl0scz1hLmNvdmVyYWdlQXJlYXMsbD0hMSx1PTAsZD1hLmNvdmVyYWdlQXJlYXMubGVuZ3RoOyFsJiZkPnU7Kyt1KXt2YXIgaD1zW3VdO2lmKHQ+PWguem9vbU1pbiYmdDw9aC56b29tTWF4KXt2YXIgbT1jLmludGVyc2VjdFdpdGgoaSxoLmJib3gsdyk7Yy5pc0VtcHR5KG0pfHwobD0hMCl9fWwmJm4ucHVzaChhLmNyZWRpdCl9cmV0dXJuIG59dmFyIHk9ZnVuY3Rpb24gRShvKXtmdW5jdGlvbiBhKGUpe3ZhciBuPWUucmVzb3VyY2VTZXRzWzBdLnJlc291cmNlc1swXTt3Ll90aWxlV2lkdGg9bi5pbWFnZVdpZHRoLHcuX3RpbGVIZWlnaHQ9bi5pbWFnZUhlaWdodCx3Ll9tYXhpbXVtTGV2ZWw9bi56b29tTWF4LTEsdy5faW1hZ2VVcmxTdWJkb21haW5zPW4uaW1hZ2VVcmxTdWJkb21haW5zLHcuX2ltYWdlVXJsVGVtcGxhdGU9bi5pbWFnZVVybC5yZXBsYWNlKCJ7Y3VsdHVyZX0iLCIiKTt2YXIgbz13Ll90aWxlUHJvdG9jb2w7aWYoIXIobykpe3ZhciBhPWRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sO289L15odHRwLy50ZXN0KGEpP2E6Imh0dHA6In13Ll9pbWFnZVVybFRlbXBsYXRlPXcuX2ltYWdlVXJsVGVtcGxhdGUucmVwbGFjZSgvXmh0dHA6LyxvKSxyKHcuX3RpbGVEaXNjYXJkUG9saWN5KXx8KHcuX3RpbGVEaXNjYXJkUG9saWN5PW5ldyBwKHttaXNzaW5nSW1hZ2VVcmw6Zyh3LDAsMCx3Ll9tYXhpbXVtTGV2ZWwpLHBpeGVsc1RvQ2hlY2s6W25ldyB0KDAsMCksbmV3IHQoMTIwLDE0MCksbmV3IHQoMTMwLDE2MCksbmV3IHQoMjAwLDUwKSxuZXcgdCgyMDAsMjAwKV0sZGlzYWJsZUNoZWNrSWZBbGxQaXhlbHNBcmVUcmFuc3BhcmVudDohMH0pKTt2YXIgcz13Ll9hdHRyaWJ1dGlvbkxpc3Q9bi5pbWFnZXJ5UHJvdmlkZXJzO3N8fChzPXcuX2F0dHJpYnV0aW9uTGlzdD1bXSk7Zm9yKHZhciBsPTAsaD1zLmxlbmd0aDtoPmw7KytsKXt2YXIgbT1zW2xdO20uY3JlZGl0PW5ldyBpKG0uYXR0cmlidXRpb24pO2Zvcih2YXIgZj1tLmNvdmVyYWdlQXJlYXMsdj0wLF89bS5jb3ZlcmFnZUFyZWFzLmxlbmd0aDtfPnY7Kyt2KXt2YXIgQz1mW3ZdLEU9Qy5iYm94O0MuYmJveD1uZXcgYyh1LnRvUmFkaWFucyhFWzFdKSx1LnRvUmFkaWFucyhFWzBdKSx1LnRvUmFkaWFucyhFWzNdKSx1LnRvUmFkaWFucyhFWzJdKSl9fXcuX3JlYWR5PSEwLGQuaGFuZGxlU3VjY2Vzcyh5KX1mdW5jdGlvbiB2KCl7dmFyIGU9IkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIGFjY2Vzc2luZyAiK0MrIi4iO3k9ZC5oYW5kbGVFcnJvcih5LHcsdy5fZXJyb3JFdmVudCxlLHZvaWQgMCx2b2lkIDAsdm9pZCAwLF8pfWZ1bmN0aW9uIF8oKXt2YXIgZT1sKEMse2NhbGxiYWNrUGFyYW1ldGVyTmFtZToianNvbnAiLHByb3h5OncuX3Byb3h5fSk7bShlLGEsdil9bz1uKG8se30pLHRoaXMuX2tleT1lLmdldEtleShvLmtleSksdGhpcy5fdXJsPW8udXJsLHRoaXMuX3RpbGVQcm90b2NvbD1vLnRpbGVQcm90b2NvbCx0aGlzLl9tYXBTdHlsZT1uKG8ubWFwU3R5bGUsZi5BRVJJQUwpLHRoaXMuX3RpbGVEaXNjYXJkUG9saWN5PW8udGlsZURpc2NhcmRQb2xpY3ksdGhpcy5fcHJveHk9by5wcm94eSx0aGlzLl9jcmVkaXQ9bmV3IGkoIkJpbmcgSW1hZ2VyeSIsRS5fbG9nb0RhdGEsImh0dHA6Ly93d3cuYmluZy5jb20iKSx0aGlzLmRlZmF1bHRHYW1tYT0xLCh0aGlzLl9tYXBTdHlsZT09PWYuQUVSSUFMfHx0aGlzLl9tYXBTdHlsZT09PWYuQUVSSUFMX1dJVEhfTEFCRUxTKSYmKHRoaXMuZGVmYXVsdEdhbW1hPTEuMyksdGhpcy5fdGlsaW5nU2NoZW1lPW5ldyBoKHtudW1iZXJPZkxldmVsWmVyb1RpbGVzWDoyLG51bWJlck9mTGV2ZWxaZXJvVGlsZXNZOjJ9KSx0aGlzLl90aWxlV2lkdGg9dm9pZCAwLHRoaXMuX3RpbGVIZWlnaHQ9dm9pZCAwLHRoaXMuX21heGltdW1MZXZlbD12b2lkIDAsdGhpcy5faW1hZ2VVcmxUZW1wbGF0ZT12b2lkIDAsdGhpcy5faW1hZ2VVcmxTdWJkb21haW5zPXZvaWQgMCx0aGlzLl9lcnJvckV2ZW50PW5ldyBzLHRoaXMuX3JlYWR5PSExO3ZhciB5LEM9dGhpcy5fdXJsKyIvUkVTVC92MS9JbWFnZXJ5L01ldGFkYXRhLyIrdGhpcy5fbWFwU3R5bGUrIj9pbmNsPUltYWdlcnlQcm92aWRlcnMma2V5PSIrdGhpcy5fa2V5LHc9dGhpcztfKCl9O28oeS5wcm90b3R5cGUse3VybDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VybH19LHByb3h5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJveHl9fSxrZXk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rZXl9fSxtYXBTdHlsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21hcFN0eWxlfX0sdGlsZVdpZHRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZVdpZHRofX0sdGlsZUhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGVIZWlnaHR9fSxtYXhpbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtTGV2ZWx9fSxtaW5pbXVtTGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiAwfX0sdGlsaW5nU2NoZW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsaW5nU2NoZW1lfX0scmVjdGFuZ2xlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsaW5nU2NoZW1lLnJlY3RhbmdsZX19LHRpbGVEaXNjYXJkUG9saWN5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZURpc2NhcmRQb2xpY3l9fSxlcnJvckV2ZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXJyb3JFdmVudH19LHJlYWR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVhZHl9fSxjcmVkaXQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jcmVkaXR9fSxoYXNBbHBoYUNoYW5uZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiExfX19KTt2YXIgQz1uZXcgYzt5LnByb3RvdHlwZS5nZXRUaWxlQ3JlZGl0cz1mdW5jdGlvbihlLHQsaSl7aWYoIXRoaXMuX3JlYWR5KXRocm93IG5ldyBhKCJnZXRUaWxlQ3JlZGl0cyBtdXN0IG5vdCBiZSBjYWxsZWQgYmVmb3JlIHRoZSBpbWFnZXJ5IHByb3ZpZGVyIGlzIHJlYWR5LiIpO3ZhciBuPXRoaXMuX3RpbGluZ1NjaGVtZS50aWxlWFlUb1JlY3RhbmdsZShlLHQsaSxDKTtyZXR1cm4gXyh0aGlzLl9hdHRyaWJ1dGlvbkxpc3QsaSxuKX0seS5wcm90b3R5cGUucmVxdWVzdEltYWdlPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1nKHRoaXMsZSx0LGkpO3JldHVybiB2LmxvYWRJbWFnZSh0aGlzLG4pfSx5LnByb3RvdHlwZS5waWNrRmVhdHVyZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSx5Ll9sb2dvRGF0YT0iZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFEMEFBQUFhQ0FZQUFBQUV5MVJuQUFBQUNYQklXWE1BQUE3RUFBQU94QUdWS3c0YkFBQUFCM1JKVFVVSDNnSURFZ2NQVE1uWE9RQUFDbFpKUkVGVVdNUGRXR3RzRk5jVi91Njg5dUgxK3NYYU9OaGxXUXpCRU50eGlVRkJwQlNMZDYwSXBYSFNOaWc0VVJ0U1lRVWtSSk5TaTBpZ1ZpVlZWQkpCYUJzaUFnS1JRSlNHOEFnRUhDQ1dVNGlCQ3ByWTJNU2dYZk9JMTZ5OUQzczlNenN6dHo5eUIxMldOVTJpOUVjeTB0SE96TjQ3OTN6bjNQT2RjeTdCblJmSjhJN2lCM1NSRFBlRUV4c3dMejhZMERaSUFZRElSR0FnTFFBbSs3WGxlMzFKM0wzQW5wMU1aUFkrQlVCam9yTjMzMnZnWWhwZ1YxRlJVZDZUVHo0NXVicTZPdERWMVNYcHV1NWcvL09lcHQ5d053bE15QWk4SVhEanlGMjQ1VHNEVGRpdkRNQVRDQVRHTkRVMS9XYmh3b1dQVFpzMmJXeDFkWFdoeCtPeHJsKy9QcVRydXM1dDlXOEtXRXpqaW5UQVlocm8veHVCU3R3aUlnQm5KQkx4S0lveTF1LzNWL3I5L2tyRE1NejMzMzkvWjN0N2UzOGlrVWdDTURMRXQ4VytRMGNBSTNNY1lURERtWnhoN0RFU0c1Tmk0M2pnOUdzYStYK09zeFd4UFNKVFNqM0paRks1WlJWSkVyT3pzOGU2WEM0ZmdHd0FMaGJ6RGdBS1UxaEsyOEtFQTZQTW1UTW41NjIzM3FwZXZuejVQUURjYko3RXpWVUF1TXJMeTNNQmVBQmtjV09FREVMU3lGZTR5N2lNb0hrcmlaWmxLWVpoOEFTSFpES3BKSlBKSEFDNUFQSUE1QVBJQWVCbENqbzVUd2xwWG5iT21UUEhQM2Z1M0taVnExYXRaS0JjREpROXg3VjQ4V0pmYzNQemhwNmVuait0WExueVI4dzRNamRHNGd5VkRrN0tJQ01DbHpLbExVcnBiUU1OdzVBa1NjcHBiR3o4Y1dkbjU3V2pSNC8yY2F3K0RFQmxZak84d1gxZm9aUVd1TjN1S1pJa2xRRDRHK2ZobEcwWWw4dVZtNVdWVlc2YXBwNmRuZTBEMEc4dm54YmpKbnRIdWJDVU9LL2JhZFpJQ3lXYW5ySnVBYWVVa25UUXBtbEtrVWhFV2J4NDhVOExDd3RIaFVLaGErZlBuKzg1ZlBod1YwdEx5elVBQ1NaeDlqdk1GaElCeU5Gb1ZERU13L3FLQjVIUHZKZmtVcUJyOSs3ZGVrbEp5Wi9qOGJpNWZmdjJPQXNsaWVNTHNHK20yRHliVDJRdXpFUU9zRjVTVXFKZnZYbzF5YzJsNlhuNnJnU1JTQ1NFYytmT2hWZXVYTG13b3FKaXh2VHAwd2NXTEZnUTd1bnB1ZEhSMGRGOTd0eTV6L2Z1M1hzZVFKaDVhZGplZXJxdXk1WmxDYWxVaXZoOFB0OEhIM3l3ek9QeHlEMDlQWjgxTmpaKzJOblphUUVReDQwYjU0dkZZcWFxcXVFVksxYjRhMnRyL1d2V3JEbjE4c3N2MTQ0ZlAzNlNxcW9ENjlldjM3MW56NTdyREx3QXdISGt5SkdmalJzM3J0b3dET3YwNmRPbnU3cTZyczZiTjIvczdObXo5eklqREtlbldvRlpLZy9BbE1MQ3dsODJOemYvbTNMWDIyKy9mWGIwNk5GL0FMQzh1N3U3bTZaZGtVaGtzTDI5L1VwTFMwdnp1blhyVmdBb0J6QWFRQkdBaVkyTmpVdWkwZWkxUkNMUkZ3d0cvOVBYMTljVmk4V0NxcW9PZEhkM0h5c3JLNnNETUNjY0RsOElCb090aXFJc09uYnMyRCtpMGVpVjN0N2V6OFBoOEdlUlNLUlQwN1RCL3Y3K2kxT25UcDBIWUJxQUJ6czdPLytwYVZvMEZvdDFSeUtSaS9GNC9HcC9mMzlYSXBIb1pub1VNbjZ3VStadFJEYXltd214WkZrMkFXanZ2dnZ1Si9GNFBNbi9uNStmbjFWZVh1NmZPWE5tYlUxTnpVT000Qno4UXFJb3lnNkh3eHVMeGZxM2JkdTJhK3ZXclcvMDkvZGZLeTB0ZmZEVlYxOTlCRUMyMCtuMHVkM3VRZ0J1cDlQcDgzZzhKWXFpZUUrZVBQbnh4bzBidDMzeHhSZW44L0x5N24zaGhSY1dBU2g0N2JYWDVwV1ZsZFdGdytHdVhidDI3WGp6elRkM0JvUEJEcS9YRzFBVVpSUkhtQUtQVmZxYW9La2dDQ2tBK29ZTkc4NEVnMEZIVFUxTjVlelpzOGVXbEpRNENTRjgvTHZaWWhKUFFvUVFwRktwd2NyS3lvMXN1OUhCd1VGOTllclZ2NTg4ZVhJTmdPT21hY0l3REVvcGRhWlNLVUlweFlrVEp6NnNyNjgvQk1CYXYzNzlSY013WmsyYU5PbCtBUCtxcTZ0N3hEVE5WRVZGeFIrajBXZ1NBSms0Y2VLbFR6Lzl0TnpwZEhwWnZJdnBqVlc2cHlraGhCSkNia3Z3Z2lBUVFvZ0VRTDU1OHliZHRHbFRzTG01T1dKWmR4Wm1sbVdsbDVPVUVFSk4welNHaG9iNkdjT3JBTFN6WjgvMmFwcVdjTGxjMmF4R0FDTlJrUkFpbXFhcGgwS2g2OHhJd3dCMHk3SU1TWktjQUJ6NStma2w4WGo4eTJnMGFwT2I1bmE3cllHQmdTL0pWNTRRMHFwQUFvQkthUzBqQldDbGcxWlZGZUZ3MkFsZ1ZGMWRYZURwcDUrZVdWRlJVVnBjWE96Z3ZRd0FicmNiREpoZHVkbEdwS1pwR3R4NkpDY25SeElFUWJRc1MyUGpiak0rQU12bGNobk1TQmFYa3I3eW1DQ0lobUVZZk1vVlJWRVNCRUhJMENhVFROdWJzc1VzUVJCdXViQ3RyYTMzcFpkZUNrNllNQ0d3WnMyYWlwcWFHbjlwYVdtdUpFbDNKUDBiTjI1OGVlVElrUk1BQnJtMFlvbWlhSW1pS0dWbFplV3hMZWNBZ0Jrelp2Z2REa2ZXalJzM2dnQTBicGZwb2lpYWhCQ3FLRXFLQXkyeVVMTUE2TWxrTXA2WGwzY1AxeDJTV0N3bUZoUVUrQ21sRmhmSE5GT2V2cFg0TGN2U0pVa3lBZURRb1VPaDExOS8vZnBUVHowMVpmNzgrVVdCUUNCSFVaUTd5RS9UTkdQZnZuMG4zM3Z2dlNQNzkrLy9CRUNNZVpzQ01HUlpOZ1JCZ05QcEhIWHg0c1ZWRFEwTmYxK3dZTUdZSjU1NFlpa0FldkRnd1VNQTRvSWdRSlpsU2dnWmREcWRCaUdFWkdkbjZ3dzB0UWxKVVJUVDQvRU1IejkrL01Damp6NzYyMkF3dUhiWnNtVmJpb3VMdld2WHJtMXdPcDNacVZScWFLUVRJSW5mMWdBTWw4dWxVMHExQ3hjdUJHT3htTDV1M2JyeVFDRGd5Y3JLRWpPUlhHdHJhOGVPSFRzT0h6MTY5T3lWSzFjdUEraGxSWXJHbE5Sa1dSN1VOTzJtWVJpYXorY2IzZExTOGdZaGhPaTZIajExNnRTT1ZhdFdIUU5BTGNzYU1FMHpMZ2hDbEJEU1o5K3pRc1oyU29KUzJ1ZHdPS0xQUGZmY3Zzckt5ckpBSVBEUS92Mzd0eGlHb2ZYMTlWM3I3ZTI5VWxCUU1IcUVWcGp3bnJZQTZQRjRQSzZxNnMycXFxcXBaV1ZsaXR2dGxqT0I3ZW5waVd6YnR1M3dnUU1IVHJlMXRWMEUwTWVLa2tHdUloTUFxSHYzN3UzMGVyM1B4K054bHlpS3lnTVBQT0FuaEZpWExsMEtiZDY4dVlQTnNYYnUzTGs2bVV3YXFxcjJidG15WlVkdGJlM2hkOTU1cHd2QUVGTmNPM2p3NEsvYjJ0cWlxcXBHSXBHSTQvSEhILzlyUTBQRENhL1hPeW9TaWRETGx5OFBOVFUxUGNaNFF1TksxanU2TllIRlJBR0FTWFBuenYxRmEydnJ4elREcGFwcWF0ZXVYUi9ObnorL1NWR1Vod0ZNQnpDQkZTTFpMRjc1RHNySkdwWFJBSDRFSUFCZ1BJQnhBRW9CRkFQd0FSakZpZjFzTnpaMjUrVmxPaGF4dWZjQ3FBRlFDK0JoQVBWTGxpejVYU3FWVWtPaFVBdUFLV25GeVIzZGxzdytmZytBKzhlTUdmUHpUWnMyYlk5R296RWI4Smt6WjlxWExsMzZsK0xpNGw4QitBbUF5UURHc0dyT3pmWE5QR1Bhd0cybDg1amtzbWNQbSt2aWhIKzJXMWlGM2J2WlBOK3NXYlB1R3g0ZURyVzN0Kzg1ZnZ6NDFvNk9qbVpOMDRZMFRZdlYxOWN2WUliTjVRcVVqRzJtd2o1WUFxREs0WERNZSthWlo1NXZiVzA5K3NvcnIyeXVxcXBxWUZhdEF1Qm4zdUI3WHpKQ1kyOTdYZWFVZDJSb0d6T0ptSGI2SWpGajVENzc3TFAzRFF3TWZEdzhQQnhTVmJVdmtVajBoRUtoajE1ODhjWEgyTzd6TVNQZHBsdW1veHZlTXg1WmxqM2p4NC8zOXZiMjZnTURBNE1zdmdZWm8rcDhQcjdMcVFYNURzL1U3ZDBqRnhVVlpTMWF0S2c0TnpjMzE3SXNwNjdyWmxkWFY2eTV1ZmttSTc4aEZ0Y21yeDhad2VNaXQ2WHNVczQrNmttbGdiVytwZUxmOWd5TVpOQ1IzNzRHMHkvRnhFelg4Yi84K2JrWEVCeEtGd0FBQUFCSlJVNUVya0pnZ2c9PSIseS50aWxlWFlUb1F1YWRLZXk9ZnVuY3Rpb24oZSx0LGkpe2Zvcih2YXIgbj0iIixyPWk7cj49MDstLXIpe3ZhciBvPTE8PHIsYT0wOzAhPT0oZSZvKSYmKGF8PTEpLDAhPT0odCZvKSYmKGF8PTIpLG4rPWF9cmV0dXJuIG59LHkucXVhZEtleVRvVGlsZVhZPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLGk9MCxuPWUubGVuZ3RoLTEscj1uO3I+PTA7LS1yKXt2YXIgbz0xPDxyLGE9K2Vbbi1yXTswIT09KDEmYSkmJih0fD1vKSwwIT09KDImYSkmJihpfD1vKX1yZXR1cm57eDp0LHk6aSxsZXZlbDpufX07dmFyIHc9bmV3IGM7cmV0dXJuIHl9KSxkZWZpbmUoIlNjZW5lL09wZW5TdHJlZXRNYXBJbWFnZXJ5UHJvdmlkZXIiLFsiLi4vQ29yZS9DcmVkaXQiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9SZWN0YW5nbGUiLCIuLi9Db3JlL1dlYk1lcmNhdG9yVGlsaW5nU2NoZW1lIiwiLi9JbWFnZXJ5UHJvdmlkZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHUoZSx0LG4scil7dmFyIG89ZS5fdXJsK3IrIi8iK3QrIi8iK24rIi4iK2UuX2ZpbGVFeHRlbnNpb24sYT1lLl9wcm94eTsKcmV0dXJuIGkoYSkmJihvPWEuZ2V0VVJMKG8pKSxvfXZhciBjPS9cLyQvLGQ9bmV3IGUoIk1hcFF1ZXN0LCBPcGVuIFN0cmVldCBNYXAgYW5kIGNvbnRyaWJ1dG9ycywgQ0MtQlktU0EiKSxoPWZ1bmN0aW9uKGkpe2k9dChpLHt9KTt2YXIgbj10KGkudXJsLCIvL2EudGlsZS5vcGVuc3RyZWV0bWFwLm9yZy8iKTtjLnRlc3Qobil8fChuKz0iLyIpLHRoaXMuX3VybD1uLHRoaXMuX2ZpbGVFeHRlbnNpb249dChpLmZpbGVFeHRlbnNpb24sInBuZyIpLHRoaXMuX3Byb3h5PWkucHJveHksdGhpcy5fdGlsZURpc2NhcmRQb2xpY3k9aS50aWxlRGlzY2FyZFBvbGljeSx0aGlzLl90aWxpbmdTY2hlbWU9bmV3IHMsdGhpcy5fdGlsZVdpZHRoPTI1Nix0aGlzLl90aWxlSGVpZ2h0PTI1Nix0aGlzLl9taW5pbXVtTGV2ZWw9dChpLm1pbmltdW1MZXZlbCwwKSx0aGlzLl9tYXhpbXVtTGV2ZWw9dChpLm1heGltdW1MZXZlbCwxOCksdGhpcy5fcmVjdGFuZ2xlPXQoaS5yZWN0YW5nbGUsdGhpcy5fdGlsaW5nU2NoZW1lLnJlY3RhbmdsZSk7dmFyIGw9dGhpcy5fdGlsaW5nU2NoZW1lLnBvc2l0aW9uVG9UaWxlWFkoYS5zb3V0aHdlc3QodGhpcy5fcmVjdGFuZ2xlKSx0aGlzLl9taW5pbXVtTGV2ZWwpLHU9dGhpcy5fdGlsaW5nU2NoZW1lLnBvc2l0aW9uVG9UaWxlWFkoYS5ub3J0aGVhc3QodGhpcy5fcmVjdGFuZ2xlKSx0aGlzLl9taW5pbXVtTGV2ZWwpLGg9KE1hdGguYWJzKHUueC1sLngpKzEpKihNYXRoLmFicyh1LnktbC55KSsxKTtpZihoPjQpdGhyb3cgbmV3IHIoIlRoZSBpbWFnZXJ5IHByb3ZpZGVyJ3MgcmVjdGFuZ2xlIGFuZCBtaW5pbXVtTGV2ZWwgaW5kaWNhdGUgdGhhdCB0aGVyZSBhcmUgIitoKyIgdGlsZXMgYXQgdGhlIG1pbmltdW0gbGV2ZWwuIEltYWdlcnkgcHJvdmlkZXJzIHdpdGggbW9yZSB0aGFuIGZvdXIgdGlsZXMgYXQgdGhlIG1pbmltdW0gbGV2ZWwgYXJlIG5vdCBzdXBwb3J0ZWQuIik7dGhpcy5fZXJyb3JFdmVudD1uZXcgbyx0aGlzLl9yZWFkeT0hMDt2YXIgbT10KGkuY3JlZGl0LGQpOyJzdHJpbmciPT10eXBlb2YgbSYmKG09bmV3IGUobSkpLHRoaXMuX2NyZWRpdD1tfTtyZXR1cm4gbihoLnByb3RvdHlwZSx7dXJsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0scHJveHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm94eX19LHRpbGVXaWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGVXaWR0aH19LHRpbGVIZWlnaHQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlSGVpZ2h0fX0sbWF4aW11bUxldmVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bUxldmVsfX0sbWluaW11bUxldmVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWluaW11bUxldmVsfX0sdGlsaW5nU2NoZW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsaW5nU2NoZW1lfX0scmVjdGFuZ2xlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdGFuZ2xlfX0sdGlsZURpc2NhcmRQb2xpY3k6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlRGlzY2FyZFBvbGljeX19LGVycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvckV2ZW50fX0scmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkeX19LGNyZWRpdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWRpdH19LGhhc0FscGhhQ2hhbm5lbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuITB9fX0pLGgucHJvdG90eXBlLmdldFRpbGVDcmVkaXRzPWZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH0saC5wcm90b3R5cGUucmVxdWVzdEltYWdlPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj11KHRoaXMsZSx0LGkpO3JldHVybiBsLmxvYWRJbWFnZSh0aGlzLG4pfSxoLnByb3RvdHlwZS5waWNrRmVhdHVyZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSxofSksZGVmaW5lKCJXaWRnZXRzL0Jhc2VMYXllclBpY2tlci9Qcm92aWRlclZpZXdNb2RlbCIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL2NyZWF0ZUNvbW1hbmQiXSxmdW5jdGlvbihlLHQsaSxuLHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1mdW5jdGlvbih0KXt2YXIgaT10LmNyZWF0aW9uRnVuY3Rpb247ZShpLmNhbkV4ZWN1dGUpfHwoaT1yKGkpKSx0aGlzLl9jcmVhdGlvbkNvbW1hbmQ9aSx0aGlzLm5hbWU9dC5uYW1lLHRoaXMudG9vbHRpcD10LnRvb2x0aXAsdGhpcy5pY29uVXJsPXQuaWNvblVybCxuLnRyYWNrKHRoaXMsWyJuYW1lIiwidG9vbHRpcCIsImljb25VcmwiXSl9O3JldHVybiB0KG8ucHJvdG90eXBlLHtjcmVhdGlvbkNvbW1hbmQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jcmVhdGlvbkNvbW1hbmR9fX0pLG99KSxkZWZpbmUoIldpZGdldHMvQmFzZUxheWVyUGlja2VyL2NyZWF0ZURlZmF1bHRJbWFnZXJ5UHJvdmlkZXJWaWV3TW9kZWxzIixbIi4uLy4uL0NvcmUvYnVpbGRNb2R1bGVVcmwiLCIuLi8uLi9TY2VuZS9BcmNHaXNNYXBTZXJ2ZXJJbWFnZXJ5UHJvdmlkZXIiLCIuLi8uLi9TY2VuZS9CaW5nTWFwc0ltYWdlcnlQcm92aWRlciIsIi4uLy4uL1NjZW5lL0JpbmdNYXBzU3R5bGUiLCIuLi8uLi9TY2VuZS9PcGVuU3RyZWV0TWFwSW1hZ2VyeVByb3ZpZGVyIiwiLi4vLi4vU2NlbmUvVGlsZU1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIiLCIuLi9CYXNlTGF5ZXJQaWNrZXIvUHJvdmlkZXJWaWV3TW9kZWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcygpe3ZhciBzPVtdO3JldHVybiBzLnB1c2gobmV3IGEoe25hbWU6IkJpbmcgTWFwcyBBZXJpYWwiLGljb25Vcmw6ZSgiV2lkZ2V0cy9JbWFnZXMvSW1hZ2VyeVByb3ZpZGVycy9iaW5nQWVyaWFsLnBuZyIpLHRvb2x0aXA6IkJpbmcgTWFwcyBhZXJpYWwgaW1hZ2VyeSBcbmh0dHA6Ly93d3cuYmluZy5jb20vbWFwcyIsY3JlYXRpb25GdW5jdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgaSh7dXJsOiIvL2Rldi52aXJ0dWFsZWFydGgubmV0IixtYXBTdHlsZTpuLkFFUklBTH0pfX0pKSxzLnB1c2gobmV3IGEoe25hbWU6IkJpbmcgTWFwcyBBZXJpYWwgd2l0aCBMYWJlbHMiLGljb25Vcmw6ZSgiV2lkZ2V0cy9JbWFnZXMvSW1hZ2VyeVByb3ZpZGVycy9iaW5nQWVyaWFsTGFiZWxzLnBuZyIpLHRvb2x0aXA6IkJpbmcgTWFwcyBhZXJpYWwgaW1hZ2VyeSB3aXRoIGxhYmVsIG92ZXJsYXlzIFxuaHR0cDovL3d3dy5iaW5nLmNvbS9tYXBzIixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBpKHt1cmw6Ii8vZGV2LnZpcnR1YWxlYXJ0aC5uZXQiLG1hcFN0eWxlOm4uQUVSSUFMX1dJVEhfTEFCRUxTfSl9fSkpLHMucHVzaChuZXcgYSh7bmFtZToiQmluZyBNYXBzIFJvYWRzIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL0ltYWdlcnlQcm92aWRlcnMvYmluZ1JvYWRzLnBuZyIpLHRvb2x0aXA6IkJpbmcgTWFwcyBzdGFuZGFyZCByb2FkIG1hcHNcbmh0dHA6Ly93d3cuYmluZy5jb20vbWFwcyIsY3JlYXRpb25GdW5jdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgaSh7dXJsOiIvL2Rldi52aXJ0dWFsZWFydGgubmV0IixtYXBTdHlsZTpuLlJPQUR9KX19KSkscy5wdXNoKG5ldyBhKHtuYW1lOiJFU1JJIFdvcmxkIEltYWdlcnkiLGljb25Vcmw6ZSgiV2lkZ2V0cy9JbWFnZXMvSW1hZ2VyeVByb3ZpZGVycy9lc3JpV29ybGRJbWFnZXJ5LnBuZyIpLHRvb2x0aXA6IldvcmxkIEltYWdlcnkgcHJvdmlkZXMgb25lIG1ldGVyIG9yIGJldHRlciBzYXRlbGxpdGUgYW5kIGFlcmlhbCBpbWFnZXJ5IGluIG1hbnkgcGFydHMgb2YgdGhlIHdvcmxkIGFuZCBsb3dlciByZXNvbHV0aW9uIHNhdGVsbGl0ZSBpbWFnZXJ5IHdvcmxkd2lkZS4gIFRoZSBtYXAgaW5jbHVkZXMgTkFTQSBCbHVlIE1hcmJsZTogTmV4dCBHZW5lcmF0aW9uIDUwMG0gcmVzb2x1dGlvbiBpbWFnZXJ5IGF0IHNtYWxsIHNjYWxlcyAoYWJvdmUgMToxLDAwMCwwMDApLCBpLWN1YmVkIDE1bSBlU0FUIGltYWdlcnkgYXQgbWVkaXVtLXRvLWxhcmdlIHNjYWxlcyAoZG93biB0byAxOjcwLDAwMCkgZm9yIHRoZSB3b3JsZCwgYW5kIFVTR1MgMTVtIExhbmRzYXQgaW1hZ2VyeSBmb3IgQW50YXJjdGljYS4gVGhlIG1hcCBmZWF0dXJlcyAwLjNtIHJlc29sdXRpb24gaW1hZ2VyeSBpbiB0aGUgY29udGluZW50YWwgVW5pdGVkIFN0YXRlcyBhbmQgMC42bSByZXNvbHV0aW9uIGltYWdlcnkgaW4gcGFydHMgb2YgV2VzdGVybiBFdXJvcGUgZnJvbSBEaWdpdGFsR2xvYmUuIEluIG90aGVyIHBhcnRzIG9mIHRoZSB3b3JsZCwgMSBtZXRlciByZXNvbHV0aW9uIGltYWdlcnkgaXMgYXZhaWxhYmxlIGZyb20gR2VvRXllIElLT05PUywgaS1jdWJlZCBOYXRpb253aWRlIFByaW1lLCBHZXRtYXBwaW5nLCBBZXJvR1JJRCwgSUdOIFNwYWluLCBhbmQgSUdQIFBvcnR1Z2FsLiAgQWRkaXRpb25hbGx5LCBpbWFnZXJ5IGF0IGRpZmZlcmVudCByZXNvbHV0aW9ucyBoYXMgYmVlbiBjb250cmlidXRlZCBieSB0aGUgR0lTIFVzZXIgQ29tbXVuaXR5LlxuaHR0cDovL3d3dy5lc3JpLmNvbSIsY3JlYXRpb25GdW5jdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgdCh7dXJsOiIvL3NlcnZpY2VzLmFyY2dpc29ubGluZS5jb20vQXJjR0lTL3Jlc3Qvc2VydmljZXMvV29ybGRfSW1hZ2VyeS9NYXBTZXJ2ZXIifSl9fSkpLHMucHVzaChuZXcgYSh7bmFtZToiRVNSSSBXb3JsZCBTdHJlZXQgTWFwIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL0ltYWdlcnlQcm92aWRlcnMvZXNyaVdvcmxkU3RyZWV0TWFwLnBuZyIpLHRvb2x0aXA6IlRoaXMgd29ybGR3aWRlIHN0cmVldCBtYXAgcHJlc2VudHMgaGlnaHdheS1sZXZlbCBkYXRhIGZvciB0aGUgd29ybGQuIFN0cmVldC1sZXZlbCBkYXRhIGluY2x1ZGVzIHRoZSBVbml0ZWQgU3RhdGVzOyBtdWNoIG9mIENhbmFkYTsgSmFwYW47IG1vc3QgY291bnRyaWVzIGluIEV1cm9wZTsgQXVzdHJhbGlhIGFuZCBOZXcgWmVhbGFuZDsgSW5kaWE7IHBhcnRzIG9mIFNvdXRoIEFtZXJpY2EgaW5jbHVkaW5nIEFyZ2VudGluYSwgQnJhemlsLCBDaGlsZSwgQ29sb21iaWEsIGFuZCBWZW5lenVlbGE7IEdoYW5hOyBhbmQgcGFydHMgb2Ygc291dGhlcm4gQWZyaWNhIGluY2x1ZGluZyBCb3Rzd2FuYSwgTGVzb3RobywgTmFtaWJpYSwgU291dGggQWZyaWNhLCBhbmQgU3dhemlsYW5kLlxuaHR0cDovL3d3dy5lc3JpLmNvbSIsY3JlYXRpb25GdW5jdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgdCh7dXJsOiIvL3NlcnZpY2VzLmFyY2dpc29ubGluZS5jb20vQXJjR0lTL3Jlc3Qvc2VydmljZXMvV29ybGRfU3RyZWV0X01hcC9NYXBTZXJ2ZXIifSl9fSkpLHMucHVzaChuZXcgYSh7bmFtZToiRVNSSSBOYXRpb25hbCBHZW9ncmFwaGljIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL0ltYWdlcnlQcm92aWRlcnMvZXNyaU5hdGlvbmFsR2VvZ3JhcGhpYy5wbmciKSx0b29sdGlwOiJUaGlzIHdlYiBtYXAgY29udGFpbnMgdGhlIE5hdGlvbmFsIEdlb2dyYXBoaWMgV29ybGQgTWFwIHNlcnZpY2UuIFRoaXMgbWFwIHNlcnZpY2UgaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBhcyBhIGdlbmVyYWwgcmVmZXJlbmNlIG1hcCBmb3IgaW5mb3JtYXRpb25hbCBhbmQgZWR1Y2F0aW9uYWwgcHVycG9zZXMgYXMgd2VsbCBhcyBhIGJhc2VtYXAgYnkgR0lTIHByb2Zlc3Npb25hbHMgYW5kIG90aGVyIHVzZXJzIGZvciBjcmVhdGluZyB3ZWIgbWFwcyBhbmQgd2ViIG1hcHBpbmcgYXBwbGljYXRpb25zLlxuaHR0cDovL3d3dy5lc3JpLmNvbSIsY3JlYXRpb25GdW5jdGlvbjpmdW5jdGlvbigpe3JldHVybiBuZXcgdCh7dXJsOiIvL3NlcnZpY2VzLmFyY2dpc29ubGluZS5jb20vQXJjR0lTL3Jlc3Qvc2VydmljZXMvTmF0R2VvX1dvcmxkX01hcC9NYXBTZXJ2ZXIvIn0pfX0pKSxzLnB1c2gobmV3IGEoe25hbWU6Ik9wZW7CrVN0cmVldMKtTWFwIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL0ltYWdlcnlQcm92aWRlcnMvb3BlblN0cmVldE1hcC5wbmciKSx0b29sdGlwOiJPcGVuU3RyZWV0TWFwIChPU00pIGlzIGEgY29sbGFib3JhdGl2ZSBwcm9qZWN0IHRvIGNyZWF0ZSBhIGZyZWUgZWRpdGFibGUgbWFwIG9mIHRoZSB3b3JsZC5cbmh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmciLGNyZWF0aW9uRnVuY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIoe3VybDoiLy9hLnRpbGUub3BlbnN0cmVldG1hcC5vcmcvIn0pfX0pKSxzLnB1c2gobmV3IGEoe25hbWU6IlN0YW1lbiBXYXRlcmNvbG9yIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL0ltYWdlcnlQcm92aWRlcnMvc3RhbWVuV2F0ZXJjb2xvci5wbmciKSx0b29sdGlwOiJSZW1pbmlzY2VudCBvZiBoYW5kIGRyYXduIG1hcHMsIFN0YW1lbiB3YXRlcmNvbG9yIG1hcHMgYXBwbHkgcmFzdGVyIGVmZmVjdCBhcmVhIHdhc2hlcyBhbmQgb3JnYW5pYyBlZGdlcyBvdmVyIGEgcGFwZXIgdGV4dHVyZSB0byBhZGQgd2FybSBwb3AgdG8gYW55IG1hcC5cbmh0dHA6Ly9tYXBzLnN0YW1lbi5jb20iLGNyZWF0aW9uRnVuY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIoe3VybDoiLy9zdGFtZW4tdGlsZXMuYS5zc2wuZmFzdGx5Lm5ldC93YXRlcmNvbG9yLyIsY3JlZGl0OiJNYXAgdGlsZXMgYnkgU3RhbWVuIERlc2lnbiwgdW5kZXIgQ0MgQlkgMy4wLiBEYXRhIGJ5IE9wZW5TdHJlZXRNYXAsIHVuZGVyIENDIEJZIFNBLiJ9KX19KSkscy5wdXNoKG5ldyBhKHtuYW1lOiJTdGFtZW4gVG9uZXIiLGljb25Vcmw6ZSgiV2lkZ2V0cy9JbWFnZXMvSW1hZ2VyeVByb3ZpZGVycy9zdGFtZW5Ub25lci5wbmciKSx0b29sdGlwOiJBIGhpZ2ggY29udHJhc3QgYmxhY2sgYW5kIHdoaXRlIG1hcC5cbmh0dHA6Ly9tYXBzLnN0YW1lbi5jb20iLGNyZWF0aW9uRnVuY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIoe3VybDoiLy9zdGFtZW4tdGlsZXMuYS5zc2wuZmFzdGx5Lm5ldC90b25lci8iLGNyZWRpdDoiTWFwIHRpbGVzIGJ5IFN0YW1lbiBEZXNpZ24sIHVuZGVyIENDIEJZIDMuMC4gRGF0YSBieSBPcGVuU3RyZWV0TWFwLCB1bmRlciBDQyBCWSBTQS4ifSl9fSkpLHMucHVzaChuZXcgYSh7bmFtZToiTWFwUXVlc3QgT3BlbsKtU3RyZWV0wq1NYXAiLGljb25Vcmw6ZSgiV2lkZ2V0cy9JbWFnZXMvSW1hZ2VyeVByb3ZpZGVycy9tYXBRdWVzdE9wZW5TdHJlZXRNYXAucG5nIiksdG9vbHRpcDoiT3BlblN0cmVldE1hcCAoT1NNKSBpcyBhIGNvbGxhYm9yYXRpdmUgcHJvamVjdCB0byBjcmVhdGUgYSBmcmVlIGVkaXRhYmxlIG1hcCBvZiB0aGUgd29ybGQuXG5odHRwOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnIixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHt1cmw6Ii8vb3RpbGUxLXMubXFjZG4uY29tL3RpbGVzLzEuMC4wL29zbS8ifSl9fSkpLHMucHVzaChuZXcgYSh7bmFtZToiVGhlIEJsYWNrIE1hcmJsZSIsaWNvblVybDplKCJXaWRnZXRzL0ltYWdlcy9JbWFnZXJ5UHJvdmlkZXJzL2JsYWNrTWFyYmxlLnBuZyIpLHRvb2x0aXA6IlRoZSBsaWdodHMgb2YgY2l0aWVzIGFuZCB2aWxsYWdlcyB0cmFjZSB0aGUgb3V0bGluZXMgb2YgY2l2aWxpemF0aW9uIGluIHRoaXMgZ2xvYmFsIHZpZXcgb2YgdGhlIEVhcnRoIGF0IG5pZ2h0IGFzIHNlZW4gYnkgTkFTQS9OT0FBJ3MgU3VvbWkgTlBQIHNhdGVsbGl0ZS4iLGNyZWF0aW9uRnVuY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG8oe3VybDoiLy9jZXNpdW1qcy5vcmcvYmxhY2ttYXJibGUiLG1heGltdW1MZXZlbDo4LGNyZWRpdDoiQmxhY2sgTWFyYmxlIGltYWdlcnkgY291cnRlc3kgTkFTQSBFYXJ0aCBPYnNlcnZhdG9yeSJ9KX19KSkscy5wdXNoKG5ldyBhKHtuYW1lOiJOYXR1cmFsIEVhcnRowqBJSSIsaWNvblVybDplKCJXaWRnZXRzL0ltYWdlcy9JbWFnZXJ5UHJvdmlkZXJzL25hdHVyYWxFYXJ0aElJLnBuZyIpLHRvb2x0aXA6Ik5hdHVyYWwgRWFydGggSUksIGRhcmtlbmVkIGZvciBjb250cmFzdC5cbmh0dHA6Ly93d3cubmF0dXJhbGVhcnRoZGF0YS5jb20vIixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBvKHt1cmw6ZSgiQXNzZXRzL1RleHR1cmVzL05hdHVyYWxFYXJ0aElJIil9KX19KSksc31yZXR1cm4gc30pLGRlZmluZSgiQ29yZS9JbnRlcnNlY3Rpb25zMkQiLFsiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZpbmVkIiwiLi9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO3ZhciBpPXt9O3JldHVybiBpLmNsaXBUcmlhbmdsZUF0QXhpc0FsaWduZWRUaHJlc2hvbGQ9ZnVuY3Rpb24oZSxpLG4scixvLGEpe3QoYSk/YS5sZW5ndGg9MDphPVtdO3ZhciBzLGwsdTtpPyhzPWU+bixsPWU+cix1PWU+byk6KHM9bj5lLGw9cj5lLHU9bz5lKTt2YXIgYyxkLGgsbSxmLHAsdj1zK2wrdTtyZXR1cm4gMT09PXY/cz8oYz0oZS1uKS8oci1uKSxkPShlLW4pLyhvLW4pLGEucHVzaCgxKSxhLnB1c2goMiksMSE9PWQmJihhLnB1c2goLTEpLGEucHVzaCgwKSxhLnB1c2goMiksYS5wdXNoKGQpKSwxIT09YyYmKGEucHVzaCgtMSksYS5wdXNoKDApLGEucHVzaCgxKSxhLnB1c2goYykpKTpsPyhoPShlLXIpLyhvLXIpLG09KGUtcikvKG4tciksYS5wdXNoKDIpLGEucHVzaCgwKSwxIT09bSYmKGEucHVzaCgtMSksYS5wdXNoKDEpLGEucHVzaCgwKSxhLnB1c2gobSkpLDEhPT1oJiYoYS5wdXNoKC0xKSxhLnB1c2goMSksYS5wdXNoKDIpLGEucHVzaChoKSkpOnUmJihmPShlLW8pLyhuLW8pLHA9KGUtbykvKHItbyksYS5wdXNoKDApLGEucHVzaCgxKSwxIT09cCYmKGEucHVzaCgtMSksYS5wdXNoKDIpLGEucHVzaCgxKSxhLnB1c2gocCkpLDEhPT1mJiYoYS5wdXNoKC0xKSxhLnB1c2goMiksYS5wdXNoKDApLGEucHVzaChmKSkpOjI9PT12P3N8fG49PT1lP2x8fHI9PT1lP3V8fG89PT1lfHwoZD0oZS1uKS8oby1uKSxoPShlLXIpLyhvLXIpLGEucHVzaCgyKSxhLnB1c2goLTEpLGEucHVzaCgwKSxhLnB1c2goMiksYS5wdXNoKGQpLGEucHVzaCgtMSksYS5wdXNoKDEpLGEucHVzaCgyKSxhLnB1c2goaCkpOihwPShlLW8pLyhyLW8pLGM9KGUtbikvKHItbiksYS5wdXNoKDEpLGEucHVzaCgtMSksYS5wdXNoKDIpLGEucHVzaCgxKSxhLnB1c2gocCksYS5wdXNoKC0xKSxhLnB1c2goMCksYS5wdXNoKDEpLGEucHVzaChjKSk6KG09KGUtcikvKG4tciksZj0oZS1vKS8obi1vKSxhLnB1c2goMCksYS5wdXNoKC0xKSxhLnB1c2goMSksYS5wdXNoKDApLGEucHVzaChtKSxhLnB1c2goLTEpLGEucHVzaCgyKSxhLnB1c2goMCksYS5wdXNoKGYpKTozPT09dnx8KGEucHVzaCgwKSxhLnB1c2goMSksYS5wdXNoKDIpKSxhfSxpLmNvbXB1dGVCYXJ5Y2VudHJpY0Nvb3JkaW5hdGVzPWZ1bmN0aW9uKGksbixyLG8sYSxzLGwsdSxjKXt2YXIgZD1yLWwsaD1sLWEsbT1zLXUsZj1vLXUscD0xLyhtKmQraCpmKSx2PW4tdSxnPWktbCxfPShtKmcraCp2KSpwLHk9KC1mKmcrZCp2KSpwLEM9MS1fLXk7cmV0dXJuIHQoYyk/KGMueD1fLGMueT15LGMuej1DLGMpOm5ldyBlKF8seSxDKX0saX0pLGRlZmluZSgiQ29yZS9RdWFudGl6ZWRNZXNoVGVycmFpbkRhdGEiLFsiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vSW50ZXJzZWN0aW9uczJEIiwiLi9NYXRoIiwiLi9UYXNrUHJvY2Vzc29yIiwiLi9UZXJyYWluTWVzaCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoZSx0KXttLmxlbmd0aD1lLmxlbmd0aDtmb3IodmFyIGk9ITEsbj0wLHI9ZS5sZW5ndGg7cj5uOysrbiltW25dPWVbbl0saT1pfHxuPjAmJnQoZVtuLTFdLGVbbl0pPjA7cmV0dXJuIGk/KG0uc29ydCh0KSxuZXcgVWludDE2QXJyYXkobSkpOmV9dmFyIGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQpe3JldHVybiBhW2VdLWFbdF19ZnVuY3Rpb24gaShlLHQpe3JldHVybiBvW2VdLW9bdF19dGhpcy5fcXVhbnRpemVkVmVydGljZXM9ZS5xdWFudGl6ZWRWZXJ0aWNlcyx0aGlzLl9lbmNvZGVkTm9ybWFscz1lLmVuY29kZWROb3JtYWxzLHRoaXMuX2luZGljZXM9ZS5pbmRpY2VzLHRoaXMuX21pbmltdW1IZWlnaHQ9ZS5taW5pbXVtSGVpZ2h0LHRoaXMuX21heGltdW1IZWlnaHQ9ZS5tYXhpbXVtSGVpZ2h0LHRoaXMuX2JvdW5kaW5nU3BoZXJlPWUuYm91bmRpbmdTcGhlcmUsdGhpcy5faG9yaXpvbk9jY2x1c2lvblBvaW50PWUuaG9yaXpvbk9jY2x1c2lvblBvaW50O3ZhciByPXRoaXMuX3F1YW50aXplZFZlcnRpY2VzLmxlbmd0aC8zLG89dGhpcy5fdVZhbHVlcz10aGlzLl9xdWFudGl6ZWRWZXJ0aWNlcy5zdWJhcnJheSgwLHIpLGE9dGhpcy5fdlZhbHVlcz10aGlzLl9xdWFudGl6ZWRWZXJ0aWNlcy5zdWJhcnJheShyLDIqcik7dGhpcy5faGVpZ2h0VmFsdWVzPXRoaXMuX3F1YW50aXplZFZlcnRpY2VzLnN1YmFycmF5KDIqciwzKnIpLHRoaXMuX3dlc3RJbmRpY2VzPWQoZS53ZXN0SW5kaWNlcyx0KSx0aGlzLl9zb3V0aEluZGljZXM9ZChlLnNvdXRoSW5kaWNlcyxpKSx0aGlzLl9lYXN0SW5kaWNlcz1kKGUuZWFzdEluZGljZXMsdCksdGhpcy5fbm9ydGhJbmRpY2VzPWQoZS5ub3J0aEluZGljZXMsaSksdGhpcy5fd2VzdFNraXJ0SGVpZ2h0PWUud2VzdFNraXJ0SGVpZ2h0LHRoaXMuX3NvdXRoU2tpcnRIZWlnaHQ9ZS5zb3V0aFNraXJ0SGVpZ2h0LHRoaXMuX2Vhc3RTa2lydEhlaWdodD1lLmVhc3RTa2lydEhlaWdodCx0aGlzLl9ub3J0aFNraXJ0SGVpZ2h0PWUubm9ydGhTa2lydEhlaWdodCx0aGlzLl9jaGlsZFRpbGVNYXNrPW4oZS5jaGlsZFRpbGVNYXNrLDE1KSx0aGlzLl9jcmVhdGVkQnlVcHNhbXBsaW5nPW4oZS5jcmVhdGVkQnlVcHNhbXBsaW5nLCExKSx0aGlzLl93YXRlck1hc2s9ZS53YXRlck1hc2t9O28oaC5wcm90b3R5cGUse3dhdGVyTWFzazp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dhdGVyTWFza319fSk7dmFyIG09W10sZj1uZXcgdSgiY3JlYXRlVmVydGljZXNGcm9tUXVhbnRpemVkVGVycmFpbk1lc2giKTtoLnByb3RvdHlwZS5jcmVhdGVNZXNoPWZ1bmN0aW9uKHQsaSxuLG8pe3ZhciBhPXQuZWxsaXBzb2lkLHM9dC50aWxlWFlUb1JlY3RhbmdsZShpLG4sbyksbD1mLnNjaGVkdWxlVGFzayh7bWluaW11bUhlaWdodDp0aGlzLl9taW5pbXVtSGVpZ2h0LG1heGltdW1IZWlnaHQ6dGhpcy5fbWF4aW11bUhlaWdodCxxdWFudGl6ZWRWZXJ0aWNlczp0aGlzLl9xdWFudGl6ZWRWZXJ0aWNlcyxvY3RFbmNvZGVkTm9ybWFsczp0aGlzLl9lbmNvZGVkTm9ybWFscyxpbmRpY2VzOnRoaXMuX2luZGljZXMsd2VzdEluZGljZXM6dGhpcy5fd2VzdEluZGljZXMsc291dGhJbmRpY2VzOnRoaXMuX3NvdXRoSW5kaWNlcyxlYXN0SW5kaWNlczp0aGlzLl9lYXN0SW5kaWNlcyxub3J0aEluZGljZXM6dGhpcy5fbm9ydGhJbmRpY2VzLHdlc3RTa2lydEhlaWdodDp0aGlzLl93ZXN0U2tpcnRIZWlnaHQsc291dGhTa2lydEhlaWdodDp0aGlzLl9zb3V0aFNraXJ0SGVpZ2h0LGVhc3RTa2lydEhlaWdodDp0aGlzLl9lYXN0U2tpcnRIZWlnaHQsbm9ydGhTa2lydEhlaWdodDp0aGlzLl9ub3J0aFNraXJ0SGVpZ2h0LHJlY3RhbmdsZTpzLHJlbGF0aXZlVG9DZW50ZXI6dGhpcy5fYm91bmRpbmdTcGhlcmUuY2VudGVyLGVsbGlwc29pZDphfSk7aWYoIXIobCkpcmV0dXJuIHZvaWQgMDt2YXIgdT10aGlzO3JldHVybiBlKGwsZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBjKHUuX2JvdW5kaW5nU3BoZXJlLmNlbnRlcixuZXcgRmxvYXQzMkFycmF5KGUudmVydGljZXMpLG5ldyBVaW50MTZBcnJheShlLmluZGljZXMpLHUuX21pbmltdW1IZWlnaHQsdS5fbWF4aW11bUhlaWdodCx1Ll9ib3VuZGluZ1NwaGVyZSx1Ll9ob3Jpem9uT2NjbHVzaW9uUG9pbnQpfSl9O3ZhciBwPW5ldyB1KCJ1cHNhbXBsZVF1YW50aXplZFRlcnJhaW5NZXNoIik7aC5wcm90b3R5cGUudXBzYW1wbGU9ZnVuY3Rpb24obixvLGEscyxsLHUsYyl7dmFyIGQ9MipvIT09bCxtPTIqYT09PXUsZj1uLmVsbGlwc29pZCx2PW4udGlsZVhZVG9SZWN0YW5nbGUobCx1LGMpLGc9cC5zY2hlZHVsZVRhc2soe3ZlcnRpY2VzOnRoaXMuX3F1YW50aXplZFZlcnRpY2VzLGluZGljZXM6dGhpcy5faW5kaWNlcyxlbmNvZGVkTm9ybWFsczp0aGlzLl9lbmNvZGVkTm9ybWFscyxtaW5pbXVtSGVpZ2h0OnRoaXMuX21pbmltdW1IZWlnaHQsbWF4aW11bUhlaWdodDp0aGlzLl9tYXhpbXVtSGVpZ2h0LGlzRWFzdENoaWxkOmQsaXNOb3J0aENoaWxkOm0sY2hpbGRSZWN0YW5nbGU6dixlbGxpcHNvaWQ6Zn0pO2lmKCFyKGcpKXJldHVybiB2b2lkIDA7dmFyIF89TWF0aC5taW4odGhpcy5fd2VzdFNraXJ0SGVpZ2h0LHRoaXMuX2Vhc3RTa2lydEhlaWdodCk7Xz1NYXRoLm1pbihfLHRoaXMuX3NvdXRoU2tpcnRIZWlnaHQpLF89TWF0aC5taW4oXyx0aGlzLl9ub3J0aFNraXJ0SGVpZ2h0KTt2YXIgeT1kPy41Kl86dGhpcy5fd2VzdFNraXJ0SGVpZ2h0LEM9bT8uNSpfOnRoaXMuX3NvdXRoU2tpcnRIZWlnaHQsdz1kP3RoaXMuX2Vhc3RTa2lydEhlaWdodDouNSpfLEU9bT90aGlzLl9ub3J0aFNraXJ0SGVpZ2h0Oi41Kl87cmV0dXJuIGUoZyxmdW5jdGlvbihlKXt2YXIgbjtyZXR1cm4gcihlLmVuY29kZWROb3JtYWxzKSYmKG49bmV3IFVpbnQ4QXJyYXkoZS5lbmNvZGVkTm9ybWFscykpLG5ldyBoKHtxdWFudGl6ZWRWZXJ0aWNlczpuZXcgVWludDE2QXJyYXkoZS52ZXJ0aWNlcyksaW5kaWNlczpuZXcgVWludDE2QXJyYXkoZS5pbmRpY2VzKSxlbmNvZGVkTm9ybWFsczpuLG1pbmltdW1IZWlnaHQ6ZS5taW5pbXVtSGVpZ2h0LG1heGltdW1IZWlnaHQ6ZS5tYXhpbXVtSGVpZ2h0LGJvdW5kaW5nU3BoZXJlOnQuY2xvbmUoZS5ib3VuZGluZ1NwaGVyZSksaG9yaXpvbk9jY2x1c2lvblBvaW50OmkuY2xvbmUoZS5ob3Jpem9uT2NjbHVzaW9uUG9pbnQpLHdlc3RJbmRpY2VzOmUud2VzdEluZGljZXMsc291dGhJbmRpY2VzOmUuc291dGhJbmRpY2VzLGVhc3RJbmRpY2VzOmUuZWFzdEluZGljZXMsbm9ydGhJbmRpY2VzOmUubm9ydGhJbmRpY2VzLHdlc3RTa2lydEhlaWdodDp5LHNvdXRoU2tpcnRIZWlnaHQ6QyxlYXN0U2tpcnRIZWlnaHQ6dyxub3J0aFNraXJ0SGVpZ2h0OkUsY2hpbGRUaWxlTWFzazowLGNyZWF0ZWRCeVVwc2FtcGxpbmc6ITB9KX0pfTt2YXIgdj0zMjc2NyxnPW5ldyBpO3JldHVybiBoLnByb3RvdHlwZS5pbnRlcnBvbGF0ZUhlaWdodD1mdW5jdGlvbihlLHQsaSl7dmFyIG49KHQtZS53ZXN0KS8oZS5lYXN0LWUud2VzdCk7bio9djt2YXIgcj0oaS1lLnNvdXRoKS8oZS5ub3J0aC1lLnNvdXRoKTtyKj12O2Zvcih2YXIgbz10aGlzLl91VmFsdWVzLGE9dGhpcy5fdlZhbHVlcyx1PXRoaXMuX2hlaWdodFZhbHVlcyxjPXRoaXMuX2luZGljZXMsZD0wLGg9Yy5sZW5ndGg7aD5kO2QrPTMpe3ZhciBtPWNbZF0sZj1jW2QrMV0scD1jW2QrMl0sXz1vW21dLHk9b1tmXSxDPW9bcF0sdz1hW21dLEU9YVtmXSxiPWFbcF0sUz1zLmNvbXB1dGVCYXJ5Y2VudHJpY0Nvb3JkaW5hdGVzKG4scixfLHcseSxFLEMsYixnKTtpZihTLng+PS0xZS0xNSYmUy55Pj0tMWUtMTUmJlMuej49LTFlLTE1KXt2YXIgVD1TLngqdVttXStTLnkqdVtmXStTLnoqdVtwXTtyZXR1cm4gbC5sZXJwKHRoaXMuX21pbmltdW1IZWlnaHQsdGhpcy5fbWF4aW11bUhlaWdodCxUL3YpfX1yZXR1cm4gdm9pZCAwfSxoLnByb3RvdHlwZS5pc0NoaWxkQXZhaWxhYmxlPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPTI7cmV0dXJuIGkhPT0yKmUmJisrcixuIT09Mip0JiYoci09MiksMCE9PSh0aGlzLl9jaGlsZFRpbGVNYXNrJjE8PHIpfSxoLnByb3RvdHlwZS53YXNDcmVhdGVkQnlVcHNhbXBsaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZWRCeVVwc2FtcGxpbmd9LGh9KSxkZWZpbmUoIkNvcmUvQ2VzaXVtVGVycmFpblByb3ZpZGVyIixbIi4uL1RoaXJkUGFydHkvVXJpIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMyIsIi4vQ3JlZGl0IiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FdmVudCIsIi4vR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZSIsIi4vSGVpZ2h0bWFwVGVycmFpbkRhdGEiLCIuL2xvYWRBcnJheUJ1ZmZlciIsIi4vbG9hZEpzb24iLCIuL1F1YW50aXplZE1lc2hUZXJyYWluRGF0YSIsIi4vUnVudGltZUVycm9yIiwiLi9UZXJyYWluUHJvdmlkZXIiLCIuL3Rocm90dGxlUmVxdWVzdEJ5U2VydmVyIiwiLi9UaWxlUHJvdmlkZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB5KGUpe3JldHVybiBoKGUsQSl9ZnVuY3Rpb24gQyhlKXtyZXR1cm4gaChlLFApfWZ1bmN0aW9uIHcoZSx0KXt2YXIgaT1uZXcgVWludDE2QXJyYXkodCwwLGUuX2hlaWdodG1hcFdpZHRoKmUuX2hlaWdodG1hcFdpZHRoKTtyZXR1cm4gbmV3IGQoe2J1ZmZlcjppLGNoaWxkVGlsZU1hc2s6bmV3IFVpbnQ4QXJyYXkodCxpLmJ5dGVMZW5ndGgsMSlbMF0sd2F0ZXJNYXNrOm5ldyBVaW50OEFycmF5KHQsaS5ieXRlTGVuZ3RoKzEsdC5ieXRlTGVuZ3RoLWkuYnl0ZUxlbmd0aC0xKSx3aWR0aDplLl9oZWlnaHRtYXBXaWR0aCxoZWlnaHQ6ZS5faGVpZ2h0bWFwV2lkdGgsc3RydWN0dXJlOmUuX2hlaWdodG1hcFN0cnVjdHVyZX0pfWZ1bmN0aW9uIEUoZSx0LHIsbyxhLHMpe2Z1bmN0aW9uIGwoZSl7cmV0dXJuIGU+PjFeLSgxJmUpfXZhciB1PTAsYz0zLGQ9YysxLGg9RmxvYXQ2NEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKmMsbT1GbG9hdDY0QXJyYXkuQllURVNfUEVSX0VMRU1FTlQqZCx2PTMsZz1VaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVCp2LF89Myx5PVVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKl8sQz1uZXcgRGF0YVZpZXcodCksdz1uZXcgbihDLmdldEZsb2F0NjQodSwhMCksQy5nZXRGbG9hdDY0KHUrOCwhMCksQy5nZXRGbG9hdDY0KHUrMTYsITApKTt1Kz1oO3ZhciBFPUMuZ2V0RmxvYXQzMih1LCEwKTt1Kz1GbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7dmFyIFM9Qy5nZXRGbG9hdDMyKHUsITApO3UrPUZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDt2YXIgVD1uZXcgaShuZXcgbihDLmdldEZsb2F0NjQodSwhMCksQy5nZXRGbG9hdDY0KHUrOCwhMCksQy5nZXRGbG9hdDY0KHUrMTYsITApKSxDLmdldEZsb2F0NjQodStoLCEwKSk7dSs9bTt2YXIgQT1uZXcgbihDLmdldEZsb2F0NjQodSwhMCksQy5nZXRGbG9hdDY0KHUrOCwhMCksQy5nZXRGbG9hdDY0KHUrMTYsITApKTt1Kz1oO3ZhciBQPUMuZ2V0VWludDMyKHUsITApO3UrPVVpbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO3ZhciBNPW5ldyBVaW50MTZBcnJheSh0LHUsMypQKTtpZih1Kz1QKmcsUD42NTUzNil0aHJvdyBuZXcgcCgiQ2VzaXVtVGVycmFpblByb3ZpZGVyIGN1cnJlbnRseSBkb2VzIG5vdCBzdXBwb3J0IHRpbGVzIHdpdGggbW9yZSB0aGFuIDY1NTM2IHZlcnRpY2VzLiIpO3ZhciBJLEQ9TS5zdWJhcnJheSgwLFApLE89TS5zdWJhcnJheShQLDIqUCksUj1NLnN1YmFycmF5KDIqUCwzKlApLEw9MCxOPTAsej0wO2ZvcihJPTA7UD5JOysrSSlMKz1sKERbSV0pLE4rPWwoT1tJXSkseis9bChSW0ldKSxEW0ldPUwsT1tJXT1OLFJbSV09ejt2YXIgQj1DLmdldFVpbnQzMih1LCEwKTt1Kz1VaW50MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDt2YXIgRj1uZXcgVWludDE2QXJyYXkodCx1LEIqXyk7dSs9Qip5O3ZhciBWPTA7Zm9yKEk9MDtJPEYubGVuZ3RoOysrSSl7dmFyIGs9RltJXTtGW0ldPVYtaywwPT09ayYmKytWfXZhciBVPUMuZ2V0VWludDMyKHUsITApO3UrPVVpbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO3ZhciBXPW5ldyBVaW50MTZBcnJheSh0LHUsVSk7dSs9VSpVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVDt2YXIgRz1DLmdldFVpbnQzMih1LCEwKTt1Kz1VaW50MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVDt2YXIgSD1uZXcgVWludDE2QXJyYXkodCx1LEcpO3UrPUcqVWludDE2QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7dmFyIHE9Qy5nZXRVaW50MzIodSwhMCk7dSs9VWludDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7dmFyIGo9bmV3IFVpbnQxNkFycmF5KHQsdSxxKTt1Kz1xKlVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO3ZhciBZPUMuZ2V0VWludDMyKHUsITApO3UrPVVpbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO3ZhciBYPW5ldyBVaW50MTZBcnJheSh0LHUsWSk7dSs9WSpVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtmb3IodmFyIFo7dTxDLmJ5dGVMZW5ndGg7KXt2YXIgSj1DLmdldFVpbnQ4KHUpO3UrPVVpbnQ4QXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7dmFyIEs9Qy5nZXRVaW50MzIodSk7dSs9VWludDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQsSj09PXguT0NUX1ZFUlRFWF9OT1JNQUxTJiYoWj1uZXcgVWludDhBcnJheSh0LHUsMipQKSksdSs9S312YXIgUT01KmUuZ2V0TGV2ZWxNYXhpbXVtR2VvbWV0cmljRXJyb3Iocik7cmV0dXJuIG5ldyBmKHtjZW50ZXI6dyxtaW5pbXVtSGVpZ2h0OkUsbWF4aW11bUhlaWdodDpTLGJvdW5kaW5nU3BoZXJlOlQsaG9yaXpvbk9jY2x1c2lvblBvaW50OkEscXVhbnRpemVkVmVydGljZXM6TSxlbmNvZGVkTm9ybWFsczpaLGluZGljZXM6Rix3ZXN0SW5kaWNlczpXLHNvdXRoSW5kaWNlczpILGVhc3RJbmRpY2VzOmosbm9ydGhJbmRpY2VzOlgsd2VzdFNraXJ0SGVpZ2h0OlEsc291dGhTa2lydEhlaWdodDpRLGVhc3RTa2lydEhlaWdodDpRLG5vcnRoU2tpcnRIZWlnaHQ6USxjaGlsZFRpbGVNYXNrOmIoZSxyLG8scyl9KX1mdW5jdGlvbiBiKGUsdCxpLG4pe3ZhciByPWUuX2F2YWlsYWJsZVRpbGVzO2lmKCFyfHwwPT09ci5sZW5ndGgpcmV0dXJuIDE1O3ZhciBvPXQrMTtpZihvPj1yLmxlbmd0aClyZXR1cm4gMDt2YXIgYT1yW29dLHM9MDtyZXR1cm4gc3w9UyhhLDIqaSwyKm4pPzE6MCxzfD1TKGEsMippKzEsMipuKT8yOjAsc3w9UyhhLDIqaSwyKm4rMSk/NDowLHN8PVMoYSwyKmkrMSwyKm4rMSk/ODowfWZ1bmN0aW9uIFMoZSx0LGkpe2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7cj5uOysrbil7dmFyIG89ZVtuXTtpZih0Pj1vLnN0YXJ0WCYmdDw9by5lbmRYJiZpPj1vLnN0YXJ0WSYmaTw9by5lbmRZKXJldHVybiEwfXJldHVybiExfXZhciBUPWZ1bmN0aW9uKGkpe2Z1bmN0aW9uIG4odCl7dmFyIGk7aWYoIXQuZm9ybWF0KXJldHVybiBpPSJUaGUgdGlsZSBmb3JtYXQgaXMgbm90IHNwZWNpZmllZCBpbiB0aGUgbGF5ZXIuanNvbiBmaWxlLiIsZj1fLmhhbmRsZUVycm9yKGYscCxwLl9lcnJvckV2ZW50LGksdm9pZCAwLHZvaWQgMCx2b2lkIDAsbCksdm9pZCAwO2lmKCF0LnRpbGVzfHwwPT09dC50aWxlcy5sZW5ndGgpcmV0dXJuIGk9IlRoZSBsYXllci5qc29uIGZpbGUgZG9lcyBub3Qgc3BlY2lmeSBhbnkgdGlsZSBVUkwgdGVtcGxhdGVzLiIsZj1fLmhhbmRsZUVycm9yKGYscCxwLl9lcnJvckV2ZW50LGksdm9pZCAwLHZvaWQgMCx2b2lkIDAsbCksdm9pZCAwO2lmKCJoZWlnaHRtYXAtMS4wIj09PXQuZm9ybWF0KXAuX2hlaWdodG1hcFN0cnVjdHVyZT17aGVpZ2h0U2NhbGU6LjIsaGVpZ2h0T2Zmc2V0Oi0xZTMsZWxlbWVudHNQZXJIZWlnaHQ6MSxzdHJpZGU6MSxlbGVtZW50TXVsdGlwbGllcjoyNTYsaXNCaWdFbmRpYW46ITF9LHAuX2hhc1dhdGVyTWFzaz0hMDtlbHNle2lmKDAhPT10LmZvcm1hdC5pbmRleE9mKCJxdWFudGl6ZWQtbWVzaC0xLiIpKXJldHVybiBpPSdUaGUgdGlsZSBmb3JtYXQgIicrdC5mb3JtYXQrJyIgaXMgaW52YWxpZCBvciBub3Qgc3VwcG9ydGVkLicsZj1fLmhhbmRsZUVycm9yKGYscCxwLl9lcnJvckV2ZW50LGksdm9pZCAwLHZvaWQgMCx2b2lkIDAsbCksdm9pZCAwO3AuX2hhc1dhdGVyTWFzaz0hMX12YXIgbj1uZXcgZShoKTtwLl90aWxlVXJsVGVtcGxhdGVzPXQudGlsZXM7Zm9yKHZhciBvPTA7bzxwLl90aWxlVXJsVGVtcGxhdGVzLmxlbmd0aDsrK28pcC5fdGlsZVVybFRlbXBsYXRlc1tvXT1uZXcgZShwLl90aWxlVXJsVGVtcGxhdGVzW29dKS5yZXNvbHZlKG4pLnRvU3RyaW5nKCkucmVwbGFjZSgie3ZlcnNpb259Iix0LnZlcnNpb24pO3AuX2F2YWlsYWJsZVRpbGVzPXQuYXZhaWxhYmxlLCFhKHAuX2NyZWRpdCkmJmEodC5hdHRyaWJ1dGlvbikmJm51bGwhPT10LmF0dHJpYnV0aW9uJiYocC5fY3JlZGl0PW5ldyByKHQuYXR0cmlidXRpb24pKSxhKHQuZXh0ZW5zaW9ucykmJi0xIT09dC5leHRlbnNpb25zLmluZGV4T2YoInZlcnRleG5vcm1hbHMiKSYmKHAuX2hhc1ZlcnRleE5vcm1hbHM9ITApLHAuX3JlYWR5PSEwfWZ1bmN0aW9uIHMoZSl7aWYoYShlKSYmNDA0PT09ZS5zdGF0dXNDb2RlKXJldHVybiBuKHt0aWxlanNvbjoiMi4xLjAiLGZvcm1hdDoiaGVpZ2h0bWFwLTEuMCIsdmVyc2lvbjoiMS4wLjAiLHNjaGVtZToidG1zIix0aWxlczpbInt6fS97eH0ve3l9LnRlcnJhaW4/dj17dmVyc2lvbn0iXX0pLHZvaWQgMDt2YXIgdD0iQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgYWNjZXNzaW5nICIraCsiLiI7Zj1fLmhhbmRsZUVycm9yKGYscCxwLl9lcnJvckV2ZW50LHQsdm9pZCAwLHZvaWQgMCx2b2lkIDAsbCl9ZnVuY3Rpb24gbCgpe3ZhciBlPW0oaCk7dChlLG4scyl9dGhpcy5fdXJsPWkudXJsLCgwPT09dGhpcy5fdXJsLmxlbmd0aHx8Ii8iIT09dGhpcy5fdXJsW3RoaXMuX3VybC5sZW5ndGgtMV0pJiYodGhpcy5fdXJsPXRoaXMuX3VybCsiLyIpLHRoaXMuX3Byb3h5PWkucHJveHksdGhpcy5fdGlsaW5nU2NoZW1lPW5ldyBjKHtudW1iZXJPZkxldmVsWmVyb1RpbGVzWDoyLG51bWJlck9mTGV2ZWxaZXJvVGlsZXNZOjF9KSx0aGlzLl9oZWlnaHRtYXBXaWR0aD02NSx0aGlzLl9sZXZlbFplcm9NYXhpbXVtR2VvbWV0cmljRXJyb3I9di5nZXRFc3RpbWF0ZWRMZXZlbFplcm9HZW9tZXRyaWNFcnJvckZvckFIZWlnaHRtYXAodGhpcy5fdGlsaW5nU2NoZW1lLmVsbGlwc29pZCx0aGlzLl9oZWlnaHRtYXBXaWR0aCx0aGlzLl90aWxpbmdTY2hlbWUuZ2V0TnVtYmVyT2ZYVGlsZXNBdExldmVsKDApKSx0aGlzLl9oZWlnaHRtYXBTdHJ1Y3R1cmU9dm9pZCAwLHRoaXMuX2hhc1dhdGVyTWFzaz0hMSx0aGlzLl9oYXNWZXJ0ZXhOb3JtYWxzPSExLHRoaXMuX3JlcXVlc3RWZXJ0ZXhOb3JtYWxzPW8oaS5yZXF1ZXN0VmVydGV4Tm9ybWFscywhMSksdGhpcy5fZXJyb3JFdmVudD1uZXcgdTt2YXIgZD1pLmNyZWRpdDsic3RyaW5nIj09dHlwZW9mIGQmJihkPW5ldyByKGQpKSx0aGlzLl9jcmVkaXQ9ZCx0aGlzLl9yZWFkeT0hMTt2YXIgaD10aGlzLl91cmwrImxheWVyLmpzb24iO2EodGhpcy5fcHJveHkpJiYoaD10aGlzLl9wcm94eS5nZXRVUkwoaCkpO3ZhciBmLHA9dGhpcztsKCl9LHg9e09DVF9WRVJURVhfTk9STUFMUzoxfSxBPXtBY2NlcHQ6ImFwcGxpY2F0aW9uL3ZuZC5xdWFudGl6ZWQtbWVzaDtleHRlbnNpb25zPXZlcnRleG5vcm1hbHMsYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO3E9MC45LCovKjtxPTAuMDEifSxQPXtBY2NlcHQ6ImFwcGxpY2F0aW9uL3ZuZC5xdWFudGl6ZWQtbWVzaCxhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07cT0wLjksKi8qO3E9MC4wMSJ9O3JldHVybiBULnByb3RvdHlwZS5yZXF1ZXN0VGlsZUdlb21ldHJ5PWZ1bmN0aW9uKGUsaSxuLHIpe3ZhciBzPXRoaXMuX3RpbGVVcmxUZW1wbGF0ZXM7aWYoMD09PXMubGVuZ3RoKXJldHVybiB2b2lkIDA7dmFyIGw9dGhpcy5fdGlsaW5nU2NoZW1lLmdldE51bWJlck9mWVRpbGVzQXRMZXZlbChuKSx1PWwtaS0xLGM9c1swXS5yZXBsYWNlKCJ7en0iLG4pLnJlcGxhY2UoInt4fSIsZSkucmVwbGFjZSgie3l9Iix1KSxkPXRoaXMuX3Byb3h5O2EoZCkmJihjPWQuZ2V0VVJMKGMpKTt2YXIgaCxtPUM7aWYodGhpcy5fcmVxdWVzdFZlcnRleE5vcm1hbHMmJnRoaXMuX2hhc1ZlcnRleE5vcm1hbHMmJihtPXkpLHI9byhyLCEwKSl7aWYoaD1nKGMsbSksIWEoaCkpcmV0dXJuIHZvaWQgMH1lbHNlIGg9bShjKTt2YXIgZj10aGlzO3JldHVybiB0KGgsZnVuY3Rpb24odCl7cmV0dXJuIGEoZi5faGVpZ2h0bWFwU3RydWN0dXJlKT93KGYsdCxuLGUsaSx1KTpFKGYsdCxuLGUsaSx1KX0pfSxzKFQucHJvdG90eXBlLHtlcnJvckV2ZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXJyb3JFdmVudH19LGNyZWRpdDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWRpdH19LHRpbGluZ1NjaGVtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGluZ1NjaGVtZX19LHJlYWR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVhZHl9fSxoYXNXYXRlck1hc2s6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9oYXNXYXRlck1hc2t9fSxoYXNWZXJ0ZXhOb3JtYWxzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzVmVydGV4Tm9ybWFscyYmdGhpcy5fcmVxdWVzdFZlcnRleE5vcm1hbHN9fSxyZXF1ZXN0VmVydGV4Tm9ybWFsczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlcXVlc3RWZXJ0ZXhOb3JtYWxzfX19KSxULnByb3RvdHlwZS5nZXRMZXZlbE1heGltdW1HZW9tZXRyaWNFcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGV2ZWxaZXJvTWF4aW11bUdlb21ldHJpY0Vycm9yLygxPDxlKX0sVC5wcm90b3R5cGUuZ2V0VGlsZURhdGFBdmFpbGFibGU9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPXRoaXMuX2F2YWlsYWJsZVRpbGVzO2lmKG4mJjAhPT1uLmxlbmd0aCl7aWYoaT49bi5sZW5ndGgpcmV0dXJuITE7dmFyIHI9bltpXSxvPXRoaXMuX3RpbGluZ1NjaGVtZS5nZXROdW1iZXJPZllUaWxlc0F0TGV2ZWwoaSksYT1vLXQtMTtyZXR1cm4gUyhyLGUsYSl9cmV0dXJuIHZvaWQgMH0sVH0pLGRlZmluZSgiV2lkZ2V0cy9CYXNlTGF5ZXJQaWNrZXIvY3JlYXRlRGVmYXVsdFRlcnJhaW5Qcm92aWRlclZpZXdNb2RlbHMiLFsiLi4vLi4vQ29yZS9idWlsZE1vZHVsZVVybCIsIi4uLy4uL0NvcmUvQ2VzaXVtVGVycmFpblByb3ZpZGVyIiwiLi4vLi4vQ29yZS9FbGxpcHNvaWRUZXJyYWluUHJvdmlkZXIiLCIuLi9CYXNlTGF5ZXJQaWNrZXIvUHJvdmlkZXJWaWV3TW9kZWwiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcigpe3ZhciByPVtdO3JldHVybiByLnB1c2gobmV3IG4oe25hbWU6IldHUzg0IEVsbGlwc29pZCIsaWNvblVybDplKCJXaWRnZXRzL0ltYWdlcy9UZXJyYWluUHJvdmlkZXJzL0VsbGlwc29pZC5wbmciKSx0b29sdGlwOiJXR1M4NCBzdGFuZGFyZCBlbGxpcHNvaWQsIGFsc28ga25vd24gYXMgRVBTRzo0MzI2IixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBpfX0pKSxyLnB1c2gobmV3IG4oe25hbWU6IlNUSyBXb3JsZCBUZXJyYWluIG1lc2hlcyIsaWNvblVybDplKCJXaWRnZXRzL0ltYWdlcy9UZXJyYWluUHJvdmlkZXJzL1NUSy5wbmciKSx0b29sdGlwOiJIaWdoLXJlc29sdXRpb24sIG1lc2gtYmFzZWQgdGVycmFpbiBmb3IgdGhlIGVudGlyZSBnbG9iZS4gRnJlZSBmb3IgdXNlIG9uIHRoZSBJbnRlcm5ldC4gQ2xvc2VkLW5ldHdvcmsgb3B0aW9ucyBhcmUgYXZhaWxhYmxlLlxuaHR0cDovL3d3dy5hZ2kuY29tIixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0KHt1cmw6Ii8vY2VzaXVtanMub3JnL3N0ay10ZXJyYWluL3RpbGVzZXRzL3dvcmxkL3RpbGVzIn0pfX0pKSxyLnB1c2gobmV3IG4oe25hbWU6IlNtYWxsIFRlcnJhaW4gaGVpZ2h0bWFwcyB3aXRoIHdhdGVyIixpY29uVXJsOmUoIldpZGdldHMvSW1hZ2VzL1RlcnJhaW5Qcm92aWRlcnMvU1RLLnBuZyIpLHRvb2x0aXA6Ik1lZGl1bS1yZXNvbHV0aW9uLCBoZWlnaHRtYXAtYmFzZWQgdGVycmFpbiBmb3IgdGhlIGVudGlyZSBnbG9iZS4gVGhpcyB0aWxlc2V0IGFsc28gaW5jbHVkZXMgYSB3YXRlciBtYXNrLiBGcmVlIGZvciB1c2Ugb24gdGhlIEludGVybmV0LlxuaHR0cDovL3d3dy5hZ2kuY29tIixjcmVhdGlvbkZ1bmN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0KHt1cmw6Ii8vY2VzaXVtanMub3JnL3NtYWxsdGVycmFpbiIsY3JlZGl0OiJUZXJyYWluIGRhdGEgY291cnRlc3kgQW5hbHl0aWNhbCBHcmFwaGljcywgSW5jLiJ9KX19KSkscn1yZXR1cm4gcn0pLGRlZmluZSgiQ29yZS9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLFsiLi9kZWZpbmVkIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU7IWZ1bmN0aW9uKCl7aWYoIWUodCkpZm9yKHZhciBpPVsid2Via2l0IiwibW96IiwibXMiLCJvIl0sbj0wLHI9aS5sZW5ndGg7cj5uJiYhZSh0KTspdD13aW5kb3dbaVtuXSsiUmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0sKytuO2lmKCFlKHQpKXt2YXIgbz0wO3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9RGF0ZS5ub3coKSxpPU1hdGgubWF4KDE2LSh0LW8pLDApO3JldHVybiBvPXQraSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShvKX0saSl9fX0oKTt2YXIgaT1mdW5jdGlvbihlKXtyZXR1cm4gdChlKX07cmV0dXJuIGl9KSxkZWZpbmUoIkNvcmUvS2V5Ym9hcmRFdmVudE1vZGlmaWVyIixbIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtTSElGVDowLENUUkw6MSxBTFQ6Mn07cmV0dXJuIGUodCl9KSxkZWZpbmUoIkNvcmUvU2NyZWVuU3BhY2VFdmVudFR5cGUiLFsiLi9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e0xFRlRfRE9XTjowLExFRlRfVVA6MSxMRUZUX0NMSUNLOjIsTEVGVF9ET1VCTEVfQ0xJQ0s6MyxSSUdIVF9ET1dOOjUsUklHSFRfVVA6NixSSUdIVF9DTElDSzo3LFJJR0hUX0RPVUJMRV9DTElDSzo4LE1JRERMRV9ET1dOOjEwLE1JRERMRV9VUDoxMSxNSURETEVfQ0xJQ0s6MTIsTUlERExFX0RPVUJMRV9DTElDSzoxMyxNT1VTRV9NT1ZFOjE1LFdIRUVMOjE2LFBJTkNIX1NUQVJUOjE3LFBJTkNIX0VORDoxOCxQSU5DSF9NT1ZFOjE5fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9TY3JlZW5TcGFjZUV2ZW50SGFuZGxlciIsWyIuL0NhcnRlc2lhbjIiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vZGVzdHJveU9iamVjdCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0tleWJvYXJkRXZlbnRNb2RpZmllciIsIi4vU2NyZWVuU3BhY2VFdmVudFR5cGUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcyhlLHQsaSl7aWYoZS5fZWxlbWVudD09PWRvY3VtZW50KXJldHVybiBpLng9dC5jbGllbnRYLGkueT10LmNsaWVudFksaTt2YXIgbj1lLl9lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybiBpLng9dC5jbGllbnRYLW4ubGVmdCxpLnk9dC5jbGllbnRZLW4udG9wLGl9ZnVuY3Rpb24gbChlLHQpe3ZhciBuPWU7cmV0dXJuIGkodCkmJihuKz0iKyIrdCksbn1mdW5jdGlvbiB1KGUpe3JldHVybiBlLnNoaWZ0S2V5P28uU0hJRlQ6ZS5jdHJsS2V5P28uQ1RSTDplLmFsdEtleT9vLkFMVDp2b2lkIDB9ZnVuY3Rpb24gYyhlLHQpe3ZhciBuPXMoZSx0LEMucG9zaXRpb24pO2lmKGUuX2xhc3RNb3VzZVBvc2l0aW9uLng9bi54LGUuX2xhc3RNb3VzZVBvc2l0aW9uLnk9bi55LGUuX3RvdGFsUGl4ZWxzPTAsIWUuX3NlZW5BbnlUb3VjaEV2ZW50cyl7dmFyIHIsbz11KHQpOzA9PT10LmJ1dHRvbj8oZS5fbGVmdE1vdXNlQnV0dG9uRG93bj0hMCxyPWUuZ2V0SW5wdXRBY3Rpb24oYS5MRUZUX0RPV04sbykpOjE9PT10LmJ1dHRvbj8oZS5fbWlkZGxlTW91c2VCdXR0b25Eb3duPSEwLHI9ZS5nZXRJbnB1dEFjdGlvbihhLk1JRERMRV9ET1dOLG8pKToyPT09dC5idXR0b24mJihlLl9yaWdodE1vdXNlQnV0dG9uRG93bj0hMCxyPWUuZ2V0SW5wdXRBY3Rpb24oYS5SSUdIVF9ET1dOLG8pKSxpKHIpJiZyKEMpLHQucHJldmVudERlZmF1bHQoKX19ZnVuY3Rpb24gZChlLHQpe3ZhciBuLHIsbz11KHQpO2lmKCFlLl9zZWVuQW55VG91Y2hFdmVudHMpezA9PT10LmJ1dHRvbj8oZS5fbGVmdE1vdXNlQnV0dG9uRG93bj0hMSxuPWUuZ2V0SW5wdXRBY3Rpb24oYS5MRUZUX1VQLG8pLHI9ZS5nZXRJbnB1dEFjdGlvbihhLkxFRlRfQ0xJQ0ssbykpOjE9PT10LmJ1dHRvbj8oZS5fbWlkZGxlTW91c2VCdXR0b25Eb3duPSExLG49ZS5nZXRJbnB1dEFjdGlvbihhLk1JRERMRV9VUCxvKSxyPWUuZ2V0SW5wdXRBY3Rpb24oYS5NSURETEVfQ0xJQ0ssbykpOjI9PT10LmJ1dHRvbiYmKGUuX3JpZ2h0TW91c2VCdXR0b25Eb3duPSExLG49ZS5nZXRJbnB1dEFjdGlvbihhLlJJR0hUX1VQLG8pLHI9ZS5nZXRJbnB1dEFjdGlvbihhLlJJR0hUX0NMSUNLLG8pKTt2YXIgbD1zKGUsdCx3LnBvc2l0aW9uKSxjPWUuX2xhc3RNb3VzZVBvc2l0aW9uLngtbC54LGQ9ZS5fbGFzdE1vdXNlUG9zaXRpb24ueS1sLnk7ZS5fdG90YWxQaXhlbHMrPU1hdGguc3FydChjKmMrZCpkKSxpKG4pJiZuKHcpLGkocikmJmUuX3RvdGFsUGl4ZWxzPGUuX2NsaWNrUGl4ZWxUb2xlcmFuY2UmJnIodyl9fWZ1bmN0aW9uIGgodCxuKXt2YXIgcj1zKHQsbixFLmVuZFBvc2l0aW9uKTtpZighdC5fc2VlbkFueVRvdWNoRXZlbnRzKXt2YXIgbz10Ll9sYXN0TW91c2VQb3NpdGlvbi54LXIueCxsPXQuX2xhc3RNb3VzZVBvc2l0aW9uLnktci55O3QuX3RvdGFsUGl4ZWxzKz1NYXRoLnNxcnQobypvK2wqbCksZS5jbG9uZSh0Ll9sYXN0TW91c2VQb3NpdGlvbixFLnN0YXJ0UG9zaXRpb24pO3ZhciBjPXUobiksZD10LmdldElucHV0QWN0aW9uKGEuTU9VU0VfTU9WRSxjKTtpKGQpJiZkKEUpLGUuY2xvbmUoRS5lbmRQb3NpdGlvbix0Ll9sYXN0TW91c2VQb3NpdGlvbiksKHQuX2xlZnRNb3VzZUJ1dHRvbkRvd258fHQuX21pZGRsZU1vdXNlQnV0dG9uRG93bnx8dC5fcmlnaHRNb3VzZUJ1dHRvbkRvd24pJiZuLnByZXZlbnREZWZhdWx0KCl9fWZ1bmN0aW9uIG0odCxuKXt2YXIgcj1uLnRvdWNoZXMubGVuZ3RoO3QuX3NlZW5BbnlUb3VjaEV2ZW50cz0hMDt2YXIgbyxsPXUobiksYz1zKHQsbi50b3VjaGVzWzBdLGIucG9zaXRpb24pO2lmKDE9PT1yPyhlLmNsb25lKGMsdC5fbGFzdE1vdXNlUG9zaXRpb24pLHQuX3RvdGFsUGl4ZWxzPTAsdC5fbGVmdE1vdXNlQnV0dG9uRG93bj0hMCxvPXQuZ2V0SW5wdXRBY3Rpb24oYS5MRUZUX0RPV04sbCksaShvKSYmbyhiKSxuLnByZXZlbnREZWZhdWx0KCkpOnQuX2xlZnRNb3VzZUJ1dHRvbkRvd24mJih0Ll9sZWZ0TW91c2VCdXR0b25Eb3duPSExLG89dC5nZXRJbnB1dEFjdGlvbihhLkxFRlRfVVAsbCksaShvKSYmbyhiKSksMj09PXIpe3QuX2lzUGluY2hpbmc9ITA7dmFyIGQ9cyh0LG4udG91Y2hlc1sxXSxTLnBvc2l0aW9uMik7dC5fdG91Y2hJRDE9bi50b3VjaGVzWzBdLmlkZW50aWZpZXIsdC5fdG91Y2hJRDI9bi50b3VjaGVzWzFdLmlkZW50aWZpZXIsZS5jbG9uZShjLHQuX2xhc3RNb3VzZVBvc2l0aW9uKSxlLmNsb25lKGMsUy5wb3NpdGlvbjEpLGUuY2xvbmUoZCx0Ll9sYXN0VG91Y2gyKSxvPXQuZ2V0SW5wdXRBY3Rpb24oYS5QSU5DSF9TVEFSVCxsKSxpKG8pJiZvKFMpfWVsc2UgdC5faXNQaW5jaGluZyYmKHQuX2lzUGluY2hpbmc9ITEsbz10LmdldElucHV0QWN0aW9uKGEuUElOQ0hfRU5ELGwpLGkobykmJm8oKSl9ZnVuY3Rpb24gZihlLHQpe3ZhciBuLHIsbz10LnRvdWNoZXMubGVuZ3RoLGw9dC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGgsYz11KHQpO2lmKGUuX2xlZnRNb3VzZUJ1dHRvbkRvd24mJihlLl9sZWZ0TW91c2VCdXR0b25Eb3duPSExLG49ZS5nZXRJbnB1dEFjdGlvbihhLkxFRlRfVVAsYykscj1lLmdldElucHV0QWN0aW9uKGEuTEVGVF9DTElDSyxjKSxsPjApKXt2YXIgZD1zKGUsdC5jaGFuZ2VkVG91Y2hlc1swXSxULnBvc2l0aW9uKSxoPWUuX2xhc3RNb3VzZVBvc2l0aW9uLngtZC54LGY9ZS5fbGFzdE1vdXNlUG9zaXRpb24ueS1kLnk7ZS5fdG90YWxQaXhlbHMrPU1hdGguc3FydChoKmgrZipmKSxpKG4pJiZuKFQpLGkocikmJmUuX3RvdGFsUGl4ZWxzPGUuX2NsaWNrUGl4ZWxUb2xlcmFuY2UmJnIoVCl9ZS5faXNQaW5jaGluZyYmKGUuX2lzUGluY2hpbmc9ITEsbj1lLmdldElucHV0QWN0aW9uKGEuUElOQ0hfRU5ELGMpLG4mJm4oKSksKDE9PT1vfHwyPT09bykmJm0oZSx0KX1mdW5jdGlvbiBwKHQsbil7dmFyIHIsbyxsLGM9dShuKTtpZih0Ll9sZWZ0TW91c2VCdXR0b25Eb3duJiYxPT09bi50b3VjaGVzLmxlbmd0aCl7cj1zKHQsbi50b3VjaGVzWzBdLHguZW5kUG9zaXRpb24pO3ZhciBkPXQuX2xhc3RNb3VzZVBvc2l0aW9uLngtci54LGg9dC5fbGFzdE1vdXNlUG9zaXRpb24ueS1yLnk7dC5fdG90YWxQaXhlbHMrPU1hdGguc3FydChkKmQraCpoKSxlLmNsb25lKHQuX2xhc3RNb3VzZVBvc2l0aW9uLHguc3RhcnRQb3NpdGlvbiksbD10LmdldElucHV0QWN0aW9uKGEuTU9VU0VfTU9WRSxjKSxpKGwpJiZsKHgpLGUuY2xvbmUoeC5lbmRQb3NpdGlvbix0Ll9sYXN0TW91c2VQb3NpdGlvbiksKHQuX2xlZnRNb3VzZUJ1dHRvbkRvd258fHQuX21pZGRsZU1vdXNlQnV0dG9uRG93bnx8dC5fcmlnaHRNb3VzZUJ1dHRvbkRvd24pJiZuLnByZXZlbnREZWZhdWx0KCl9aWYodC5faXNQaW5jaGluZyYmMj09PW4udG91Y2hlcy5sZW5ndGgpe2lmKG4udG91Y2hlc1swXS5pZGVudGlmaWVyPT09dC5fdG91Y2hJRDI/KHI9cyh0LG4udG91Y2hlc1sxXSx4LnN0YXJ0UG9zaXRpb24pLG89cyh0LG4udG91Y2hlc1swXSx4LmVuZFBvc2l0aW9uKSk6KHI9cyh0LG4udG91Y2hlc1swXSx4LnN0YXJ0UG9zaXRpb24pLG89cyh0LG4udG91Y2hlc1sxXSx4LmVuZFBvc2l0aW9uKSksbD10LmdldElucHV0QWN0aW9uKGEuUElOQ0hfTU9WRSxjKSxpKGwpKXt2YXIgbT1vLngtci54LGY9by55LXIueSxwPS4yNSpNYXRoLnNxcnQobSptK2YqZiksdj10Ll9sYXN0VG91Y2gyLngtdC5fbGFzdE1vdXNlUG9zaXRpb24ueCxnPXQuX2xhc3RUb3VjaDIueS10Ll9sYXN0TW91c2VQb3NpdGlvbi55LF89LjI1Kk1hdGguc3FydCh2KnYrZypnKSx5PS4xMjUqKG8ueStyLnkpLEM9LjEyNSoodC5fbGFzdFRvdWNoMi55K3QuX2xhc3RNb3VzZVBvc2l0aW9uLnkpLHc9TWF0aC5hdGFuMihmLG0pLEU9TWF0aC5hdGFuMihnLHYpO2UuZnJvbUVsZW1lbnRzKDAsXyxBLmRpc3RhbmNlLnN0YXJ0UG9zaXRpb24pLGUuZnJvbUVsZW1lbnRzKDAscCxBLmRpc3RhbmNlLmVuZFBvc2l0aW9uKSxlLmZyb21FbGVtZW50cyhFLEMsQS5hbmdsZUFuZEhlaWdodC5zdGFydFBvc2l0aW9uKSxlLmZyb21FbGVtZW50cyh3LHksQS5hbmdsZUFuZEhlaWdodC5lbmRQb3NpdGlvbiksbChBKX1lLmNsb25lKHIsdC5fbGFzdE1vdXNlUG9zaXRpb24pLGUuY2xvbmUobyx0Ll9sYXN0VG91Y2gyKX19ZnVuY3Rpb24gdihlLHQpe3ZhciBuPXQuZGV0YWlsPy0xMjAqdC5kZXRhaWw6dC53aGVlbERlbHRhLHI9dSh0KSxvPWEuV0hFRUwscz1lLmdldElucHV0QWN0aW9uKG8scik7aShzKSYmKHQucHJldmVudERlZmF1bHQoKSxzKG4pKX1mdW5jdGlvbiBnKGUsdCl7dmFyIG4scj11KHQpO3MoZSx0LFAucG9zaXRpb24pLDA9PT10LmJ1dHRvbj9uPWUuZ2V0SW5wdXRBY3Rpb24oYS5MRUZUX0RPVUJMRV9DTElDSyxyKToxPT09dC5idXR0b24/bj1lLmdldElucHV0QWN0aW9uKGEuTUlERExFX0RPVUJMRV9DTElDSyxyKToyPT09dC5idXR0b24mJihuPWUuZ2V0SW5wdXRBY3Rpb24oYS5SSUdIVF9ET1VCTEVfQ0xJQ0sscikpLGkobikmJm4oUCl9ZnVuY3Rpb24gXyhlKXt2YXIgdD1lLG49ITA7ZS5fY2FsbGJhY2tzPVtdLGkoZS5fZWxlbWVudC5kaXNhYmxlUm9vdEV2ZW50cykmJihuPSExKSxlLl9jYWxsYmFja3MucHVzaCh7bmFtZToibW91c2Vkb3duIixvbkRvYzohMSxhY3Rpb246ZnVuY3Rpb24oZSl7Yyh0LGUpfX0pLGUuX2NhbGxiYWNrcy5wdXNoKHtuYW1lOiJtb3VzZXVwIixvbkRvYzpuLGFjdGlvbjpmdW5jdGlvbihlKXtkKHQsZSl9fSksZS5fY2FsbGJhY2tzLnB1c2goe25hbWU6Im1vdXNlbW92ZSIsb25Eb2M6bixhY3Rpb246ZnVuY3Rpb24oZSl7aCh0LGUpfX0pLGUuX2NhbGxiYWNrcy5wdXNoKHtuYW1lOiJkYmxjbGljayIsb25Eb2M6ITEsYWN0aW9uOmZ1bmN0aW9uKGUpe2codCxlKX19KSxlLl9jYWxsYmFja3MucHVzaCh7bmFtZToidG91Y2hzdGFydCIsb25Eb2M6ITEsYWN0aW9uOmZ1bmN0aW9uKGUpe20odCxlKX19KSxlLl9jYWxsYmFja3MucHVzaCh7bmFtZToidG91Y2hlbmQiLG9uRG9jOm4sYWN0aW9uOmZ1bmN0aW9uKGUpe2YodCxlKX19KSxlLl9jYWxsYmFja3MucHVzaCh7bmFtZToidG91Y2htb3ZlIixvbkRvYzpuLGFjdGlvbjpmdW5jdGlvbihlKXtwKHQsZSl9fSksZS5fY2FsbGJhY2tzLnB1c2goe25hbWU6Im1vdXNld2hlZWwiLG9uRG9jOiExLGFjdGlvbjpmdW5jdGlvbihlKXt2KHQsZSl9fSksZS5fY2FsbGJhY2tzLnB1c2goe25hbWU6IkRPTU1vdXNlU2Nyb2xsIixvbkRvYzohMSxhY3Rpb246ZnVuY3Rpb24oZSl7dih0LGUpfX0pO2Zvcih2YXIgcj0wO3I8ZS5fY2FsbGJhY2tzLmxlbmd0aDtyKyspe3ZhciBvPWUuX2NhbGxiYWNrc1tyXTtvLm9uRG9jP2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoby5uYW1lLG8uYWN0aW9uLCExKTplLl9lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoby5uYW1lLG8uYWN0aW9uLCExKX19dmFyIHk9ZnVuY3Rpb24oaSl7dGhpcy5fbW91c2VFdmVudHM9e30sdGhpcy5fbGVmdE1vdXNlQnV0dG9uRG93bj0hMSx0aGlzLl9taWRkbGVNb3VzZUJ1dHRvbkRvd249ITEsdGhpcy5fcmlnaHRNb3VzZUJ1dHRvbkRvd249ITEsdGhpcy5faXNQaW5jaGluZz0hMSx0aGlzLl9zZWVuQW55VG91Y2hFdmVudHM9ITEsdGhpcy5fbGFzdE1vdXNlUG9zaXRpb249bmV3IGUsdGhpcy5fbGFzdFRvdWNoMj1uZXcgZSx0aGlzLl90b3RhbFBpeGVscz0wLHRoaXMuX3RvdWNoSUQxPTAsdGhpcy5fdG91Y2hJRDI9MCx0aGlzLl9jbGlja1BpeGVsVG9sZXJhbmNlPTUsdGhpcy5fZWxlbWVudD10KGksZG9jdW1lbnQpLF8odGhpcyl9O3kucHJvdG90eXBlLnNldElucHV0QWN0aW9uPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj1sKHQsaSk7dGhpcy5fbW91c2VFdmVudHNbbl09ZX0seS5wcm90b3R5cGUuZ2V0SW5wdXRBY3Rpb249ZnVuY3Rpb24oZSx0KXt2YXIgaT1sKGUsdCk7cmV0dXJuIHRoaXMuX21vdXNlRXZlbnRzW2ldfSx5LnByb3RvdHlwZS5yZW1vdmVJbnB1dEFjdGlvbj1mdW5jdGlvbihlLHQpe3ZhciBpPWwoZSx0KTtkZWxldGUgdGhpcy5fbW91c2VFdmVudHNbaV19O3ZhciBDPXtwb3NpdGlvbjpuZXcgZX0sdz17cG9zaXRpb246bmV3IGV9LEU9e3N0YXJ0UG9zaXRpb246bmV3IGUsZW5kUG9zaXRpb246bmV3IGV9LGI9e3Bvc2l0aW9uOm5ldyBlfSxTPXtwb3NpdGlvbjE6bmV3IGUscG9zaXRpb24yOm5ldyBlfSxUPXtwb3NpdGlvbjpuZXcgZX0seD17c3RhcnRQb3NpdGlvbjpuZXcgZSxlbmRQb3NpdGlvbjpuZXcgZX0sQT17ZGlzdGFuY2U6e3N0YXJ0UG9zaXRpb246bmV3IGUsZW5kUG9zaXRpb246bmV3IGV9LGFuZ2xlQW5kSGVpZ2h0OntzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlfX0sUD17cG9zaXRpb246bmV3IGV9O3JldHVybiB5LnByb3RvdHlwZS5fdW5yZWdpc3Rlcj1mdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8dGhpcy5fY2FsbGJhY2tzLmxlbmd0aDtlKyspe3ZhciB0PXRoaXMuX2NhbGxiYWNrc1tlXTt0Lm9uRG9jP2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodC5uYW1lLHQuYWN0aW9uLCExKTp0aGlzLl9lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodC5uYW1lLHQuYWN0aW9uLCExKX19LHkucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHkucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdW5yZWdpc3RlcigpLG4odGhpcyl9LHl9KSxkZWZpbmUoIkNvcmUvVmlzaWJpbGl0eSIsWyIuL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17Tk9ORTotMSxQQVJUSUFMOjAsRlVMTDoxfTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiQ29yZS9PY2NsdWRlciIsWyIuL0JvdW5kaW5nU3BoZXJlIiwiLi9DYXJ0ZXNpYW4zIiwiLi9kZWZhdWx0VmFsdWUiLCIuL2RlZmluZWQiLCIuL2RlZmluZVByb3BlcnRpZXMiLCIuL0RldmVsb3BlckVycm9yIiwiLi9FbGxpcHNvaWQiLCIuL01hdGgiLCIuL1JlY3RhbmdsZSIsIi4vVmlzaWJpbGl0eSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUpeyJ1c2Ugc3RyaWN0Ijt2YXIgYz1mdW5jdGlvbihlLGkpe3RoaXMuX29jY2x1ZGVyUG9zaXRpb249dC5jbG9uZShlLmNlbnRlciksdGhpcy5fb2NjbHVkZXJSYWRpdXM9ZS5yYWRpdXMsdGhpcy5faG9yaXpvbkRpc3RhbmNlPTAsdGhpcy5faG9yaXpvblBsYW5lTm9ybWFsPXZvaWQgMCx0aGlzLl9ob3Jpem9uUGxhbmVQb3NpdGlvbj12b2lkIDAsdGhpcy5fY2FtZXJhUG9zaXRpb249dm9pZCAwLHRoaXMuY2FtZXJhUG9zaXRpb249aX0sZD1uZXcgdDtyKGMucHJvdG90eXBlLHtwb3NpdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29jY2x1ZGVyUG9zaXRpb259fSxyYWRpdXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vY2NsdWRlclJhZGl1c319LGNhbWVyYVBvc2l0aW9uOntzZXQ6ZnVuY3Rpb24oZSl7ZT10LmNsb25lKGUsdGhpcy5fY2FtZXJhUG9zaXRpb24pO3ZhciBpLG4scixvPXQuc3VidHJhY3QodGhpcy5fb2NjbHVkZXJQb3NpdGlvbixlLGQpLGE9dC5tYWduaXR1ZGVTcXVhcmVkKG8pLHM9dGhpcy5fb2NjbHVkZXJSYWRpdXMqdGhpcy5fb2NjbHVkZXJSYWRpdXM7aWYoYT5zKXtpPU1hdGguc3FydChhLXMpLGE9MS9NYXRoLnNxcnQoYSksbj10Lm11bHRpcGx5QnlTY2FsYXIobyxhLGQpO3ZhciBsPWkqaSphO3I9dC5hZGQoZSx0Lm11bHRpcGx5QnlTY2FsYXIobixsLGQpLGQpfWVsc2UgaT1OdW1iZXIuTUFYX1ZBTFVFO3RoaXMuX2hvcml6b25EaXN0YW5jZT1pLHRoaXMuX2hvcml6b25QbGFuZU5vcm1hbD1uLHRoaXMuX2hvcml6b25QbGFuZVBvc2l0aW9uPXIsdGhpcy5fY2FtZXJhUG9zaXRpb249ZX19fSksYy5mcm9tQm91bmRpbmdTcGhlcmU9ZnVuY3Rpb24oZSxpLHIpe2lmKCFuKGUpKXRocm93IG5ldyBvKCJvY2NsdWRlckJvdW5kaW5nU3BoZXJlIGlzIHJlcXVpcmVkLiIpO2lmKCFuKGkpKXRocm93IG5ldyBvKCJjYW1lcmEgcG9zaXRpb24gaXMgcmVxdWlyZWQuIik7cmV0dXJuIG4ocik/KHQuY2xvbmUoZS5jZW50ZXIsci5fb2NjbHVkZXJQb3NpdGlvbiksci5fb2NjbHVkZXJSYWRpdXM9ZS5yYWRpdXMsci5jYW1lcmFQb3NpdGlvbj1pLHIpOm5ldyBjKGUsaSl9O3ZhciBoPW5ldyB0O2MucHJvdG90eXBlLmlzUG9pbnRWaXNpYmxlPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX2hvcml6b25EaXN0YW5jZSE9PU51bWJlci5NQVhfVkFMVUUpe3ZhciBpPXQuc3VidHJhY3QoZSx0aGlzLl9vY2NsdWRlclBvc2l0aW9uLGgpLG49dGhpcy5fb2NjbHVkZXJSYWRpdXM7aWYobj10Lm1hZ25pdHVkZVNxdWFyZWQoaSktbipuLG4+MClyZXR1cm4gbj1NYXRoLnNxcnQobikrdGhpcy5faG9yaXpvbkRpc3RhbmNlLGk9dC5zdWJ0cmFjdChlLHRoaXMuX2NhbWVyYVBvc2l0aW9uLGkpLG4qbj50Lm1hZ25pdHVkZVNxdWFyZWQoaSl9cmV0dXJuITF9O3ZhciBtPW5ldyB0O2MucHJvdG90eXBlLmlzQm91bmRpbmdTcGhlcmVWaXNpYmxlPWZ1bmN0aW9uKGUpe3ZhciBpPXQuY2xvbmUoZS5jZW50ZXIsbSksbj1lLnJhZGl1cztpZih0aGlzLl9ob3Jpem9uRGlzdGFuY2UhPT1OdW1iZXIuTUFYX1ZBTFVFKXt2YXIgcj10LnN1YnRyYWN0KGksdGhpcy5fb2NjbHVkZXJQb3NpdGlvbixoKSxvPXRoaXMuX29jY2x1ZGVyUmFkaXVzLW47aWYobz10Lm1hZ25pdHVkZVNxdWFyZWQociktbypvLG48dGhpcy5fb2NjbHVkZXJSYWRpdXMpcmV0dXJuIG8+MD8obz1NYXRoLnNxcnQobykrdGhpcy5faG9yaXpvbkRpc3RhbmNlLHI9dC5zdWJ0cmFjdChpLHRoaXMuX2NhbWVyYVBvc2l0aW9uLHIpLG8qbytuKm4+dC5tYWduaXR1ZGVTcXVhcmVkKHIpKTohMTsKaWYobz4wKXtyPXQuc3VidHJhY3QoaSx0aGlzLl9jYW1lcmFQb3NpdGlvbixyKTt2YXIgYT10Lm1hZ25pdHVkZVNxdWFyZWQocikscz10aGlzLl9vY2NsdWRlclJhZGl1cyp0aGlzLl9vY2NsdWRlclJhZGl1cyxsPW4qbjtyZXR1cm4odGhpcy5faG9yaXpvbkRpc3RhbmNlKnRoaXMuX2hvcml6b25EaXN0YW5jZStzKSpsPmEqcz8hMDoobz1NYXRoLnNxcnQobykrdGhpcy5faG9yaXpvbkRpc3RhbmNlLG8qbytsPmEpfXJldHVybiEwfXJldHVybiExfTt2YXIgZj1uZXcgdDtjLnByb3RvdHlwZS5jb21wdXRlVmlzaWJpbGl0eT1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBuZXcgbygib2NjbHVkZWVCUyBpcyByZXF1aXJlZC4iKTt2YXIgaT10LmNsb25lKGUuY2VudGVyKSxyPWUucmFkaXVzO2lmKHI+dGhpcy5fb2NjbHVkZXJSYWRpdXMpcmV0dXJuIHUuRlVMTDtpZih0aGlzLl9ob3Jpem9uRGlzdGFuY2UhPT1OdW1iZXIuTUFYX1ZBTFVFKXt2YXIgYT10LnN1YnRyYWN0KGksdGhpcy5fb2NjbHVkZXJQb3NpdGlvbixmKSxzPXRoaXMuX29jY2x1ZGVyUmFkaXVzLXIsbD10Lm1hZ25pdHVkZVNxdWFyZWQoYSk7aWYocz1sLXMqcyxzPjApe3M9TWF0aC5zcXJ0KHMpK3RoaXMuX2hvcml6b25EaXN0YW5jZSxhPXQuc3VidHJhY3QoaSx0aGlzLl9jYW1lcmFQb3NpdGlvbixhKTt2YXIgYz10Lm1hZ25pdHVkZVNxdWFyZWQoYSk7cmV0dXJuIGM+cypzK3Iqcj91Lk5PTkU6KHM9dGhpcy5fb2NjbHVkZXJSYWRpdXMrcixzPWwtcypzLHM+MD8ocz1NYXRoLnNxcnQocykrdGhpcy5faG9yaXpvbkRpc3RhbmNlLHMqcytyKnI+Yz91LkZVTEw6dS5QQVJUSUFMKTooYT10LnN1YnRyYWN0KGksdGhpcy5faG9yaXpvblBsYW5lUG9zaXRpb24sYSksdC5kb3QoYSx0aGlzLl9ob3Jpem9uUGxhbmVOb3JtYWwpPi1yP3UuUEFSVElBTDp1LkZVTEwpKX19cmV0dXJuIHUuTk9ORX07dmFyIHA9bmV3IHQ7Yy5jb21wdXRlT2NjbHVkZWVQb2ludD1mdW5jdGlvbihlLGksbil7dmFyIHI9dC5jbG9uZShpKSxhPXQuY2xvbmUoZS5jZW50ZXIpLHM9ZS5yYWRpdXMsbD1uLmxlbmd0aDtpZih0LmVxdWFscyhhLGkpKXRocm93IG5ldyBvKCJvY2NsdWRlZVBvc2l0aW9uIG11c3QgYmUgZGlmZmVyZW50IHRoYW4gb2NjbHVkZXJCb3VuZGluZ1NwaGVyZS5jZW50ZXIiKTt2YXIgdT10Lm5vcm1hbGl6ZSh0LnN1YnRyYWN0KHIsYSxwKSxwKSxkPS10LmRvdCh1LGEpLGg9Yy5fYW55Um90YXRpb25WZWN0b3IoYSx1LGQpLG09Yy5faG9yaXpvblRvUGxhbmVOb3JtYWxEb3RQcm9kdWN0KGUsdSxkLGgsblswXSk7aWYoIW0pcmV0dXJuIHZvaWQgMDtmb3IodmFyIGYsdj0xO2w+djsrK3Ype2lmKGY9Yy5faG9yaXpvblRvUGxhbmVOb3JtYWxEb3RQcm9kdWN0KGUsdSxkLGgsblt2XSksIWYpcmV0dXJuIHZvaWQgMDttPmYmJihtPWYpfWlmKC4wMDE3NDUzMjgzNjU4OTgzMDg4Pm0pcmV0dXJuIHZvaWQgMDt2YXIgZz1zL207cmV0dXJuIHQuYWRkKGEsdC5tdWx0aXBseUJ5U2NhbGFyKHUsZyxwKSxwKX07dmFyIHY9W107Yy5jb21wdXRlT2NjbHVkZWVQb2ludEZyb21SZWN0YW5nbGU9ZnVuY3Rpb24obixyKXtyPWkocixhLldHUzg0KTt2YXIgbz1sLnN1YnNhbXBsZShuLHIsMCx2KSxzPWUuZnJvbVBvaW50cyhvKSx1PXQuWkVSTztyZXR1cm4gdC5lcXVhbHModSxzLmNlbnRlcik/dm9pZCAwOmMuY29tcHV0ZU9jY2x1ZGVlUG9pbnQobmV3IGUodSxyLm1pbmltdW1SYWRpdXMpLHMuY2VudGVyLG8pfTt2YXIgZz1uZXcgdDtjLl9hbnlSb3RhdGlvblZlY3Rvcj1mdW5jdGlvbihlLGksbil7dmFyIHI9dC5hYnMoaSxnKSxvPXIueD5yLnk/MDoxOygwPT09byYmci56PnIueHx8MT09PW8mJnIuej5yLnkpJiYobz0yKTt2YXIgYSxzPW5ldyB0OzA9PT1vPyhyLng9ZS54LHIueT1lLnkrMSxyLno9ZS56KzEsYT10LlVOSVRfWCk6MT09PW8/KHIueD1lLngrMSxyLnk9ZS55LHIuej1lLnorMSxhPXQuVU5JVF9ZKTooci54PWUueCsxLHIueT1lLnkrMSxyLno9ZS56LGE9dC5VTklUX1opO3ZhciBsPSh0LmRvdChpLHIpK24pLy10LmRvdChpLGEpO3JldHVybiB0Lm5vcm1hbGl6ZSh0LnN1YnRyYWN0KHQuYWRkKHIsdC5tdWx0aXBseUJ5U2NhbGFyKGEsbCxzKSxyKSxlLHIpLHIpfTt2YXIgXz1uZXcgdDtjLl9yb3RhdGlvblZlY3Rvcj1mdW5jdGlvbihlLGksbixyLG8pe3ZhciBhPXQuc3VidHJhY3QocixlLF8pO2lmKGE9dC5ub3JtYWxpemUoYSxhKSx0LmRvdChpLGEpPC45OTk5OTk5ODQ3NjkxMjkxKXt2YXIgbD10LmNyb3NzKGksYSxhKSx1PXQubWFnbml0dWRlKGwpO2lmKHU+cy5FUFNJTE9OMTMpcmV0dXJuIHQubm9ybWFsaXplKGwsbmV3IHQpfXJldHVybiBvfTt2YXIgeT1uZXcgdCxDPW5ldyB0LHc9bmV3IHQsRT1uZXcgdDtyZXR1cm4gYy5faG9yaXpvblRvUGxhbmVOb3JtYWxEb3RQcm9kdWN0PWZ1bmN0aW9uKGUsaSxuLHIsbyl7dmFyIGE9dC5jbG9uZShvLHkpLHM9dC5jbG9uZShlLmNlbnRlcixDKSxsPWUucmFkaXVzLHU9dC5zdWJ0cmFjdChzLGEsdyksYz10Lm1hZ25pdHVkZVNxdWFyZWQodSksZD1sKmw7aWYoZD5jKXJldHVybiExO3ZhciBoPWMtZCxtPU1hdGguc3FydChoKSxmPU1hdGguc3FydChjKSxwPTEvZix2PW0qcCxnPXYqbTt1PXQubm9ybWFsaXplKHUsdSk7dmFyIF89dC5hZGQoYSx0Lm11bHRpcGx5QnlTY2FsYXIodSxnLEUpLEUpLGI9TWF0aC5zcXJ0KGgtZypnKSxTPXRoaXMuX3JvdGF0aW9uVmVjdG9yKHMsaSxuLGEsciksVD10LmZyb21FbGVtZW50cyhTLngqUy54KnUueCsoUy54KlMueS1TLnopKnUueSsoUy54KlMueitTLnkpKnUueiwoUy54KlMueStTLnopKnUueCtTLnkqUy55KnUueSsoUy55KlMuei1TLngpKnUueiwoUy54KlMuei1TLnkpKnUueCsoUy55KlMueitTLngpKnUueStTLnoqUy56KnUueix5KTtUPXQubm9ybWFsaXplKFQsVCk7dmFyIHg9dC5tdWx0aXBseUJ5U2NhbGFyKFQsYix5KTtTPXQubm9ybWFsaXplKHQuc3VidHJhY3QodC5hZGQoXyx4LHcpLHMsdyksdyk7dmFyIEE9dC5kb3QoaSxTKTtTPXQubm9ybWFsaXplKHQuc3VidHJhY3QodC5zdWJ0cmFjdChfLHgsUykscyxTKSxTKTt2YXIgUD10LmRvdChpLFMpO3JldHVybiBQPkE/QTpQfSxjfSksZGVmaW5lKCJSZW5kZXJlci9DbGVhckNvbW1hbmQiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKGUpe2U9dChlLHQuRU1QVFlfT0JKRUNUKSx0aGlzLmNvbG9yPWUuY29sb3IsdGhpcy5kZXB0aD1lLmRlcHRoLHRoaXMuc3RlbmNpbD1lLnN0ZW5jaWwsdGhpcy5yZW5kZXJTdGF0ZT1lLnJlbmRlclN0YXRlLHRoaXMuZnJhbWVidWZmZXI9ZS5mcmFtZWJ1ZmZlcix0aGlzLm93bmVyPWUub3duZXJ9O3JldHVybiBuLkFMTD1pKG5ldyBuKHtjb2xvcjpuZXcgZSgwLDAsMCwwKSxkZXB0aDoxLHN0ZW5jaWw6MH0pKSxuLnByb3RvdHlwZS5leGVjdXRlPWZ1bmN0aW9uKGUsdCl7ZS5jbGVhcih0aGlzLHQpfSxufSksZGVmaW5lKCJTaGFkZXJzL0dsb2JlRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvLyNkZWZpbmUgU0hPV19USUxFX0JPVU5EQVJJRVNcblxudW5pZm9ybSB2ZWM0IHVfaW5pdGlhbENvbG9yO1xuXG4jaWYgVEVYVFVSRV9VTklUUyA+IDBcbnVuaWZvcm0gc2FtcGxlcjJEIHVfZGF5VGV4dHVyZXNbVEVYVFVSRV9VTklUU107XG51bmlmb3JtIHZlYzQgdV9kYXlUZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZVtURVhUVVJFX1VOSVRTXTtcblxuI2lmZGVmIEFQUExZX0FMUEhBXG51bmlmb3JtIGZsb2F0IHVfZGF5VGV4dHVyZUFscGhhW1RFWFRVUkVfVU5JVFNdO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9CUklHSFRORVNTXG51bmlmb3JtIGZsb2F0IHVfZGF5VGV4dHVyZUJyaWdodG5lc3NbVEVYVFVSRV9VTklUU107XG4jZW5kaWZcblxuI2lmZGVmIEFQUExZX0NPTlRSQVNUXG51bmlmb3JtIGZsb2F0IHVfZGF5VGV4dHVyZUNvbnRyYXN0W1RFWFRVUkVfVU5JVFNdO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9IVUVcbnVuaWZvcm0gZmxvYXQgdV9kYXlUZXh0dXJlSHVlW1RFWFRVUkVfVU5JVFNdO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9TQVRVUkFUSU9OXG51bmlmb3JtIGZsb2F0IHVfZGF5VGV4dHVyZVNhdHVyYXRpb25bVEVYVFVSRV9VTklUU107XG4jZW5kaWZcblxuI2lmZGVmIEFQUExZX0dBTU1BXG51bmlmb3JtIGZsb2F0IHVfZGF5VGV4dHVyZU9uZU92ZXJHYW1tYVtURVhUVVJFX1VOSVRTXTtcbiNlbmRpZlxuXG51bmlmb3JtIHZlYzQgdV9kYXlUZXh0dXJlVGV4Q29vcmRzUmVjdGFuZ2xlW1RFWFRVUkVfVU5JVFNdO1xuI2VuZGlmXG5cbiNpZmRlZiBTSE9XX1JFRkxFQ1RJVkVfT0NFQU5cbnVuaWZvcm0gc2FtcGxlcjJEIHVfd2F0ZXJNYXNrO1xudW5pZm9ybSB2ZWM0IHVfd2F0ZXJNYXNrVHJhbnNsYXRpb25BbmRTY2FsZTtcbnVuaWZvcm0gZmxvYXQgdV96b29tZWRPdXRPY2VhblNwZWN1bGFySW50ZW5zaXR5O1xuI2VuZGlmXG5cbiNpZmRlZiBTSE9XX09DRUFOX1dBVkVTXG51bmlmb3JtIHNhbXBsZXIyRCB1X29jZWFuTm9ybWFsTWFwO1xuI2VuZGlmXG5cbiNpZmRlZiBFTkFCTEVfREFZTklHSFRfU0hBRElOR1xudW5pZm9ybSB2ZWMyIHVfbGlnaHRpbmdGYWRlRGlzdGFuY2U7XG4jZW5kaWZcblxudmFyeWluZyB2ZWMzIHZfcG9zaXRpb25NQztcbnZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG52YXJ5aW5nIHZlYzMgdl9ub3JtYWxNQztcbnZhcnlpbmcgdmVjMyB2X25vcm1hbEVDO1xuXG52ZWM0IHNhbXBsZUFuZEJsZW5kKFxuICAgIHZlYzQgcHJldmlvdXNDb2xvcixcbiAgICBzYW1wbGVyMkQgdGV4dHVyZSxcbiAgICB2ZWMyIHRpbGVUZXh0dXJlQ29vcmRpbmF0ZXMsXG4gICAgdmVjNCB0ZXh0dXJlQ29vcmRpbmF0ZVJlY3RhbmdsZSxcbiAgICB2ZWM0IHRleHR1cmVDb29yZGluYXRlVHJhbnNsYXRpb25BbmRTY2FsZSxcbiAgICBmbG9hdCB0ZXh0dXJlQWxwaGEsXG4gICAgZmxvYXQgdGV4dHVyZUJyaWdodG5lc3MsXG4gICAgZmxvYXQgdGV4dHVyZUNvbnRyYXN0LFxuICAgIGZsb2F0IHRleHR1cmVIdWUsXG4gICAgZmxvYXQgdGV4dHVyZVNhdHVyYXRpb24sXG4gICAgZmxvYXQgdGV4dHVyZU9uZU92ZXJHYW1tYSlcbntcbiAgICAvLyBUaGlzIGNyYXp5IHN0ZXAgc3R1ZmYgc2V0cyB0aGUgYWxwaGEgdG8gMC4wIGlmIHRoaXMgZm9sbG93aW5nIGNvbmRpdGlvbiBpcyB0cnVlOlxuICAgIC8vICAgIHRpbGVUZXh0dXJlQ29vcmRpbmF0ZXMucyA8IHRleHR1cmVDb29yZGluYXRlUmVjdGFuZ2xlLnMgfHxcbiAgICAvLyAgICB0aWxlVGV4dHVyZUNvb3JkaW5hdGVzLnMgPiB0ZXh0dXJlQ29vcmRpbmF0ZVJlY3RhbmdsZS5wIHx8XG4gICAgLy8gICAgdGlsZVRleHR1cmVDb29yZGluYXRlcy50IDwgdGV4dHVyZUNvb3JkaW5hdGVSZWN0YW5nbGUudCB8fFxuICAgIC8vICAgIHRpbGVUZXh0dXJlQ29vcmRpbmF0ZXMudCA+IHRleHR1cmVDb29yZGluYXRlUmVjdGFuZ2xlLnFcbiAgICAvLyBJbiBvdGhlciB3b3JkcywgdGhlIGFscGhhIGlzIHplcm8gaWYgdGhlIGZyYWdtZW50IGlzIG91dHNpZGUgdGhlIHJlY3RhbmdsZVxuICAgIC8vIGNvdmVyZWQgYnkgdGhpcyB0ZXh0dXJlLiAgV291bGQgYW4gYWN0dWFsICdpZicgeWllbGQgYmV0dGVyIHBlcmZvcm1hbmNlP1xuICAgIHZlYzIgYWxwaGFNdWx0aXBsaWVyID0gc3RlcCh0ZXh0dXJlQ29vcmRpbmF0ZVJlY3RhbmdsZS5zdCwgdGlsZVRleHR1cmVDb29yZGluYXRlcyk7IFxuICAgIHRleHR1cmVBbHBoYSA9IHRleHR1cmVBbHBoYSAqIGFscGhhTXVsdGlwbGllci54ICogYWxwaGFNdWx0aXBsaWVyLnk7XG4gICAgXG4gICAgYWxwaGFNdWx0aXBsaWVyID0gc3RlcCh2ZWMyKDAuMCksIHRleHR1cmVDb29yZGluYXRlUmVjdGFuZ2xlLnBxIC0gdGlsZVRleHR1cmVDb29yZGluYXRlcyk7XG4gICAgdGV4dHVyZUFscGhhID0gdGV4dHVyZUFscGhhICogYWxwaGFNdWx0aXBsaWVyLnggKiBhbHBoYU11bHRpcGxpZXIueTtcbiAgICBcbiAgICB2ZWMyIHRyYW5zbGF0aW9uID0gdGV4dHVyZUNvb3JkaW5hdGVUcmFuc2xhdGlvbkFuZFNjYWxlLnh5O1xuICAgIHZlYzIgc2NhbGUgPSB0ZXh0dXJlQ29vcmRpbmF0ZVRyYW5zbGF0aW9uQW5kU2NhbGUuenc7XG4gICAgdmVjMiB0ZXh0dXJlQ29vcmRpbmF0ZXMgPSB0aWxlVGV4dHVyZUNvb3JkaW5hdGVzICogc2NhbGUgKyB0cmFuc2xhdGlvbjtcbiAgICB2ZWM0IHNhbXBsZSA9IHRleHR1cmUyRCh0ZXh0dXJlLCB0ZXh0dXJlQ29vcmRpbmF0ZXMpO1xuICAgIHZlYzMgY29sb3IgPSBzYW1wbGUucmdiO1xuICAgIGZsb2F0IGFscGhhID0gc2FtcGxlLmE7XG4gICAgXG4jaWZkZWYgQVBQTFlfQlJJR0hUTkVTU1xuICAgIGNvbG9yID0gbWl4KHZlYzMoMC4wKSwgY29sb3IsIHRleHR1cmVCcmlnaHRuZXNzKTtcbiNlbmRpZlxuXG4jaWZkZWYgQVBQTFlfQ09OVFJBU1RcbiAgICBjb2xvciA9IG1peCh2ZWMzKDAuNSksIGNvbG9yLCB0ZXh0dXJlQ29udHJhc3QpO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9IVUVcbiAgICBjb2xvciA9IGN6bV9odWUoY29sb3IsIHRleHR1cmVIdWUpO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9TQVRVUkFUSU9OXG4gICAgY29sb3IgPSBjem1fc2F0dXJhdGlvbihjb2xvciwgdGV4dHVyZVNhdHVyYXRpb24pO1xuI2VuZGlmXG5cbiNpZmRlZiBBUFBMWV9HQU1NQVxuICAgIGNvbG9yID0gcG93KGNvbG9yLCB2ZWMzKHRleHR1cmVPbmVPdmVyR2FtbWEpKTtcbiNlbmRpZlxuXG4gICAgZmxvYXQgc291cmNlQWxwaGEgPSBhbHBoYSAqIHRleHR1cmVBbHBoYTtcbiAgICBmbG9hdCBvdXRBbHBoYSA9IG1peChwcmV2aW91c0NvbG9yLmEsIDEuMCwgc291cmNlQWxwaGEpO1xuICAgIHZlYzMgb3V0Q29sb3IgPSBtaXgocHJldmlvdXNDb2xvci5yZ2IgKiBwcmV2aW91c0NvbG9yLmEsIGNvbG9yLCBzb3VyY2VBbHBoYSkgLyBvdXRBbHBoYTtcbiAgICByZXR1cm4gdmVjNChvdXRDb2xvciwgb3V0QWxwaGEpO1xufVxuXG52ZWM0IGNvbXB1dGVEYXlDb2xvcih2ZWM0IGluaXRpYWxDb2xvciwgdmVjMiB0ZXh0dXJlQ29vcmRpbmF0ZXMpO1xudmVjNCBjb21wdXRlV2F0ZXJDb2xvcih2ZWMzIHBvc2l0aW9uRXllQ29vcmRpbmF0ZXMsIHZlYzIgdGV4dHVyZUNvb3JkaW5hdGVzLCBtYXQzIGVudVRvRXllLCB2ZWM0IGltYWdlcnlDb2xvciwgZmxvYXQgc3BlY3VsYXJNYXBWYWx1ZSk7XG5cbnZvaWQgbWFpbigpXG57XG4gICAgLy8gVGhlIGNsYW1wIGJlbG93IHdvcmtzIGFyb3VuZCBhbiBhcHBhcmVudCBidWcgaW4gQ2hyb21lIENhbmFyeSB2MjMuMC4xMjQxLjBcbiAgICAvLyB3aGVyZSB0aGUgZnJhZ21lbnQgc2hhZGVyIHNlZXMgdGV4dHVyZXMgY29vcmRpbmF0ZXMgPCAwLjAgYW5kID4gMS4wIGZvciB0aGVcbiAgICAvLyBmcmFnbWVudHMgb24gdGhlIGVkZ2VzIG9mIHRpbGVzIGV2ZW4gdGhvdWdoIHRoZSB2ZXJ0ZXggc2hhZGVyIGlzIG91dHB1dHRpbmdcbiAgICAvLyBjb29yZGluYXRlcyBzdHJpY3RseSBpbiB0aGUgMC0xIHJhbmdlLlxuICAgIHZlYzQgY29sb3IgPSBjb21wdXRlRGF5Q29sb3IodV9pbml0aWFsQ29sb3IsIGNsYW1wKHZfdGV4dHVyZUNvb3JkaW5hdGVzLCAwLjAsIDEuMCkpO1xuXG4jaWZkZWYgU0hPV19USUxFX0JPVU5EQVJJRVNcbiAgICBpZiAodl90ZXh0dXJlQ29vcmRpbmF0ZXMueCA8ICgxLjAvMjU2LjApIHx8IHZfdGV4dHVyZUNvb3JkaW5hdGVzLnggPiAoMjU1LjAvMjU2LjApIHx8XG4gICAgICAgIHZfdGV4dHVyZUNvb3JkaW5hdGVzLnkgPCAoMS4wLzI1Ni4wKSB8fCB2X3RleHR1cmVDb29yZGluYXRlcy55ID4gKDI1NS4wLzI1Ni4wKSlcbiAgICB7XG4gICAgICAgIGNvbG9yID0gdmVjNCgxLjAsIDAuMCwgMC4wLCAxLjApO1xuICAgIH1cbiNlbmRpZlxuXG4jaWYgZGVmaW5lZChTSE9XX1JFRkxFQ1RJVkVfT0NFQU4pIHx8IGRlZmluZWQoRU5BQkxFX0RBWU5JR0hUX1NIQURJTkcpXG4gICAgdmVjMyBub3JtYWxNQyA9IG5vcm1hbGl6ZShjem1fZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHZfcG9zaXRpb25NQywgdmVjMygwLjApLCB2ZWMzKDEuMCkpKTsgICAvLyBub3JtYWxpemVkIHN1cmZhY2Ugbm9ybWFsIGluIG1vZGVsIGNvb3JkaW5hdGVzXG4gICAgdmVjMyBub3JtYWxFQyA9IG5vcm1hbGl6ZShjem1fbm9ybWFsM0QgKiBub3JtYWxNQyk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub3JtYWxpemVkIHN1cmZhY2Ugbm9ybWFsIGluIGV5ZSBjb29yZGlhbnRlc1xuI2VsaWYgZGVmaW5lZChFTkFCTEVfVkVSVEVYX0xJR0hUSU5HKVxuICAgIHZlYzMgbm9ybWFsTUMgPSBub3JtYWxpemUodl9ub3JtYWxNQyk7CQkJCQkJCQkJCQkJCQkvLyBub3JtYWxpemVkIHN1cmZhY2Ugbm9ybWFsIGluIG1vZGVsIGNvb3JkaW5hdGVzXG4gICAgdmVjMyBub3JtYWxFQyA9IG5vcm1hbGl6ZSh2X25vcm1hbEVDKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub3JtYWxpemVkIHN1cmZhY2Ugbm9ybWFsIGluIGV5ZSBjb29yZGlhbnRlc1xuI2VuZGlmXG5cbiNpZmRlZiBTSE9XX1JFRkxFQ1RJVkVfT0NFQU5cbiAgICB2ZWMyIHdhdGVyTWFza1RyYW5zbGF0aW9uID0gdV93YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLnh5O1xuICAgIHZlYzIgd2F0ZXJNYXNrU2NhbGUgPSB1X3dhdGVyTWFza1RyYW5zbGF0aW9uQW5kU2NhbGUuenc7XG4gICAgdmVjMiB3YXRlck1hc2tUZXh0dXJlQ29vcmRpbmF0ZXMgPSB2X3RleHR1cmVDb29yZGluYXRlcyAqIHdhdGVyTWFza1NjYWxlICsgd2F0ZXJNYXNrVHJhbnNsYXRpb247XG5cbiAgICBmbG9hdCBtYXNrID0gdGV4dHVyZTJEKHVfd2F0ZXJNYXNrLCB3YXRlck1hc2tUZXh0dXJlQ29vcmRpbmF0ZXMpLnI7XG5cbiAgICBpZiAobWFzayA+IDAuMClcbiAgICB7XG4gICAgICAgIG1hdDMgZW51VG9FeWUgPSBjem1fZWFzdE5vcnRoVXBUb0V5ZUNvb3JkaW5hdGVzKHZfcG9zaXRpb25NQywgbm9ybWFsRUMpO1xuICAgICAgICBcbiAgICAgICAgdmVjMiBlbGxpcHNvaWRUZXh0dXJlQ29vcmRpbmF0ZXMgPSBjem1fZWxsaXBzb2lkV2dzODRUZXh0dXJlQ29vcmRpbmF0ZXMobm9ybWFsTUMpO1xuICAgICAgICB2ZWMyIGVsbGlwc29pZEZsaXBwZWRUZXh0dXJlQ29vcmRpbmF0ZXMgPSBjem1fZWxsaXBzb2lkV2dzODRUZXh0dXJlQ29vcmRpbmF0ZXMobm9ybWFsTUMuenl4KTtcblxuICAgICAgICB2ZWMyIHRleHR1cmVDb29yZGluYXRlcyA9IG1peChlbGxpcHNvaWRUZXh0dXJlQ29vcmRpbmF0ZXMsIGVsbGlwc29pZEZsaXBwZWRUZXh0dXJlQ29vcmRpbmF0ZXMsIGN6bV9tb3JwaFRpbWUgKiBzbW9vdGhzdGVwKDAuOSwgMC45NSwgbm9ybWFsTUMueikpO1xuXG4gICAgICAgIGNvbG9yID0gY29tcHV0ZVdhdGVyQ29sb3Iodl9wb3NpdGlvbkVDLCB0ZXh0dXJlQ29vcmRpbmF0ZXMsIGVudVRvRXllLCBjb2xvciwgbWFzayk7XG4gICAgfVxuI2VuZGlmXG5cbiNpZmRlZiBFTkFCTEVfVkVSVEVYX0xJR0hUSU5HXG4gICAgZmxvYXQgZGlmZnVzZUludGVuc2l0eSA9IGN6bV9nZXRMYW1iZXJ0RGlmZnVzZShjem1fc3VuRGlyZWN0aW9uRUMsIG5vcm1hbEVDKSAqIDAuOCArIDAuMjtcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLnJnYiAqIGRpZmZ1c2VJbnRlbnNpdHksIGNvbG9yLmEpO1xuI2VsaWYgZGVmaW5lZChFTkFCTEVfREFZTklHSFRfU0hBRElORylcbiAgICBmbG9hdCBkaWZmdXNlSW50ZW5zaXR5ID0gY2xhbXAoY3ptX2dldExhbWJlcnREaWZmdXNlKGN6bV9zdW5EaXJlY3Rpb25FQywgbm9ybWFsRUMpICogNS4wICsgMC4zLCAwLjAsIDEuMCk7XG4gICAgZmxvYXQgY2FtZXJhRGlzdCA9IGxlbmd0aChjem1fdmlld1szXSk7XG4gICAgZmxvYXQgZmFkZU91dERpc3QgPSB1X2xpZ2h0aW5nRmFkZURpc3RhbmNlLng7XG4gICAgZmxvYXQgZmFkZUluRGlzdCA9IHVfbGlnaHRpbmdGYWRlRGlzdGFuY2UueTtcbiAgICBmbG9hdCB0ID0gY2xhbXAoKGNhbWVyYURpc3QgLSBmYWRlT3V0RGlzdCkgLyAoZmFkZUluRGlzdCAtIGZhZGVPdXREaXN0KSwgMC4wLCAxLjApO1xuICAgIGRpZmZ1c2VJbnRlbnNpdHkgPSBtaXgoMS4wLCBkaWZmdXNlSW50ZW5zaXR5LCB0KTtcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLnJnYiAqIGRpZmZ1c2VJbnRlbnNpdHksIGNvbG9yLmEpO1xuI2Vsc2VcbiAgICBnbF9GcmFnQ29sb3IgPSBjb2xvcjtcbiNlbmRpZlxufVxuXG4jaWZkZWYgU0hPV19SRUZMRUNUSVZFX09DRUFOXG5cbmZsb2F0IHdhdmVGYWRlKGZsb2F0IGVkZ2UwLCBmbG9hdCBlZGdlMSwgZmxvYXQgeClcbntcbiAgICBmbG9hdCB5ID0gY2xhbXAoKHggLSBlZGdlMCkgLyAoZWRnZTEgLSBlZGdlMCksIDAuMCwgMS4wKTtcbiAgICByZXR1cm4gcG93KDEuMCAtIHksIDUuMCk7XG59XG5cbmZsb2F0IGxpbmVhckZhZGUoZmxvYXQgZWRnZTAsIGZsb2F0IGVkZ2UxLCBmbG9hdCB4KVxue1xuICAgIHJldHVybiBjbGFtcCgoeCAtIGVkZ2UwKSAvIChlZGdlMSAtIGVkZ2UwKSwgMC4wLCAxLjApO1xufVxuXG4vLyBCYXNlZCBvbiB3YXRlciByZW5kZXJpbmcgYnkgSm9uYXMgV2FnbmVyOlxuLy8gaHR0cDovLzI5YS5jaC8yMDEyLzcvMTkvd2ViZ2wtdGVycmFpbi1yZW5kZXJpbmctd2F0ZXItZm9nXG5cbi8vIGxvdyBhbHRpdHVkZSB3YXZlIHNldHRpbmdzXG5jb25zdCBmbG9hdCBvY2VhbkZyZXF1ZW5jeUxvd0FsdGl0dWRlID0gODI1MDAwLjA7XG5jb25zdCBmbG9hdCBvY2VhbkFuaW1hdGlvblNwZWVkTG93QWx0aXR1ZGUgPSAwLjAwNDtcbmNvbnN0IGZsb2F0IG9jZWFuT25lT3ZlckFtcGxpdHVkZUxvd0FsdGl0dWRlID0gMS4wIC8gMi4wO1xuY29uc3QgZmxvYXQgb2NlYW5TcGVjdWxhckludGVuc2l0eSA9IDAuNTtcbiBcbi8vIGhpZ2ggYWx0aXR1ZGUgd2F2ZSBzZXR0aW5nc1xuY29uc3QgZmxvYXQgb2NlYW5GcmVxdWVuY3lIaWdoQWx0aXR1ZGUgPSAxMjUwMDAuMDtcbmNvbnN0IGZsb2F0IG9jZWFuQW5pbWF0aW9uU3BlZWRIaWdoQWx0aXR1ZGUgPSAwLjAwODtcbmNvbnN0IGZsb2F0IG9jZWFuT25lT3ZlckFtcGxpdHVkZUhpZ2hBbHRpdHVkZSA9IDEuMCAvIDIuMDtcblxudmVjNCBjb21wdXRlV2F0ZXJDb2xvcih2ZWMzIHBvc2l0aW9uRXllQ29vcmRpbmF0ZXMsIHZlYzIgdGV4dHVyZUNvb3JkaW5hdGVzLCBtYXQzIGVudVRvRXllLCB2ZWM0IGltYWdlcnlDb2xvciwgZmxvYXQgc3BlY3VsYXJNYXBWYWx1ZSlcbntcbiAgICB2ZWMzIHBvc2l0aW9uVG9FeWVFQyA9IC1wb3NpdGlvbkV5ZUNvb3JkaW5hdGVzO1xuICAgIGZsb2F0IHBvc2l0aW9uVG9FeWVFQ0xlbmd0aCA9IGxlbmd0aChwb3NpdGlvblRvRXllRUMpO1xuXG4gICAgLy8gVGhlIGRvdWJsZSBub3JtYWxpemUgYmVsb3cgd29ya3MgYXJvdW5kIGEgYnVnIGluIEZpcmVmb3ggb24gQW5kcm9pZCBkZXZpY2VzLlxuICAgIHZlYzMgbm9ybWFsaXplZHBvc2l0aW9uVG9FeWVFQyA9IG5vcm1hbGl6ZShub3JtYWxpemUocG9zaXRpb25Ub0V5ZUVDKSk7XG4gICAgXG4gICAgLy8gRmFkZSBvdXQgdGhlIHdhdmVzIGFzIHRoZSBjYW1lcmEgbW92ZXMgZmFyIGZyb20gdGhlIHN1cmZhY2UuXG4gICAgZmxvYXQgd2F2ZUludGVuc2l0eSA9IHdhdmVGYWRlKDcwMDAwLjAsIDEwMDAwMDAuMCwgcG9zaXRpb25Ub0V5ZUVDTGVuZ3RoKTtcblxuI2lmZGVmIFNIT1dfT0NFQU5fV0FWRVNcbiAgICAvLyBoaWdoIGFsdGl0dWRlIHdhdmVzXG4gICAgZmxvYXQgdGltZSA9IGN6bV9mcmFtZU51bWJlciAqIG9jZWFuQW5pbWF0aW9uU3BlZWRIaWdoQWx0aXR1ZGU7XG4gICAgdmVjNCBub2lzZSA9IGN6bV9nZXRXYXRlck5vaXNlKHVfb2NlYW5Ob3JtYWxNYXAsIHRleHR1cmVDb29yZGluYXRlcyAqIG9jZWFuRnJlcXVlbmN5SGlnaEFsdGl0dWRlLCB0aW1lLCAwLjApO1xuICAgIHZlYzMgbm9ybWFsVGFuZ2VudFNwYWNlSGlnaEFsdGl0dWRlID0gdmVjMyhub2lzZS54eSwgbm9pc2UueiAqIG9jZWFuT25lT3ZlckFtcGxpdHVkZUhpZ2hBbHRpdHVkZSk7XG4gICAgXG4gICAgLy8gbG93IGFsdGl0dWRlIHdhdmVzXG4gICAgdGltZSA9IGN6bV9mcmFtZU51bWJlciAqIG9jZWFuQW5pbWF0aW9uU3BlZWRMb3dBbHRpdHVkZTtcbiAgICBub2lzZSA9IGN6bV9nZXRXYXRlck5vaXNlKHVfb2NlYW5Ob3JtYWxNYXAsIHRleHR1cmVDb29yZGluYXRlcyAqIG9jZWFuRnJlcXVlbmN5TG93QWx0aXR1ZGUsIHRpbWUsIDAuMCk7XG4gICAgdmVjMyBub3JtYWxUYW5nZW50U3BhY2VMb3dBbHRpdHVkZSA9IHZlYzMobm9pc2UueHksIG5vaXNlLnogKiBvY2Vhbk9uZU92ZXJBbXBsaXR1ZGVMb3dBbHRpdHVkZSk7XG4gICAgXG4gICAgLy8gYmxlbmQgdGhlIDIgd2F2ZSBsYXllcnMgYmFzZWQgb24gZGlzdGFuY2UgdG8gc3VyZmFjZVxuICAgIGZsb2F0IGhpZ2hBbHRpdHVkZUZhZGUgPSBsaW5lYXJGYWRlKDAuMCwgNjAwMDAuMCwgcG9zaXRpb25Ub0V5ZUVDTGVuZ3RoKTtcbiAgICBmbG9hdCBsb3dBbHRpdHVkZUZhZGUgPSAxLjAgLSBsaW5lYXJGYWRlKDIwMDAwLjAsIDYwMDAwLjAsIHBvc2l0aW9uVG9FeWVFQ0xlbmd0aCk7XG4gICAgdmVjMyBub3JtYWxUYW5nZW50U3BhY2UgPSBcbiAgICAJKGhpZ2hBbHRpdHVkZUZhZGUgKiBub3JtYWxUYW5nZW50U3BhY2VIaWdoQWx0aXR1ZGUpICsgXG4gICAgCShsb3dBbHRpdHVkZUZhZGUgKiBub3JtYWxUYW5nZW50U3BhY2VMb3dBbHRpdHVkZSk7XG4gICAgbm9ybWFsVGFuZ2VudFNwYWNlID0gbm9ybWFsaXplKG5vcm1hbFRhbmdlbnRTcGFjZSk7XG4gICAgXG4gICAgLy8gZmFkZSBvdXQgdGhlIG5vcm1hbCBwZXJ0dXJiYXRpb24gYXMgd2UgbW92ZSBmYXJ0aGVyIGZyb20gdGhlIHdhdGVyIHN1cmZhY2VcbiAgICBub3JtYWxUYW5nZW50U3BhY2UueHkgKj0gd2F2ZUludGVuc2l0eTtcbiAgICBub3JtYWxUYW5nZW50U3BhY2UgPSBub3JtYWxpemUobm9ybWFsVGFuZ2VudFNwYWNlKTtcbiNlbHNlXG4gICAgdmVjMyBub3JtYWxUYW5nZW50U3BhY2UgPSB2ZWMzKDAuMCwgMC4wLCAxLjApO1xuI2VuZGlmXG5cbiAgICB2ZWMzIG5vcm1hbEVDID0gZW51VG9FeWUgKiBub3JtYWxUYW5nZW50U3BhY2U7XG4gICAgXG4gICAgY29uc3QgdmVjMyB3YXZlSGlnaGxpZ2h0Q29sb3IgPSB2ZWMzKDAuMywgMC40NSwgMC42KTtcbiAgICBcbiAgICAvLyBVc2UgZGlmZnVzZSBsaWdodCB0byBoaWdobGlnaHQgdGhlIHdhdmVzXG4gICAgZmxvYXQgZGlmZnVzZUludGVuc2l0eSA9IGN6bV9nZXRMYW1iZXJ0RGlmZnVzZShjem1fc3VuRGlyZWN0aW9uRUMsIG5vcm1hbEVDKTtcbiAgICB2ZWMzIGRpZmZ1c2VIaWdobGlnaHQgPSB3YXZlSGlnaGxpZ2h0Q29sb3IgKiBkaWZmdXNlSW50ZW5zaXR5O1xuICAgIFxuI2lmZGVmIFNIT1dfT0NFQU5fV0FWRVNcbiAgICAvLyBXaGVyZSBkaWZmdXNlIGxpZ2h0IGlzIGxvdyBvciBub24tZXhpc3RlbnQsIHVzZSB3YXZlIGhpZ2hsaWdodHMgYmFzZWQgc29sZWx5IG9uXG4gICAgLy8gdGhlIHdhdmUgYnVtcGluZXNzIGFuZCBubyBwYXJ0aWN1bGFyIGxpZ2h0IGRpcmVjdGlvbi5cbiAgICBmbG9hdCB0c1BlcnR1cmJhdGlvblJhdGlvID0gbm9ybWFsVGFuZ2VudFNwYWNlLno7XG4gICAgdmVjMyBub25EaWZmdXNlSGlnaGxpZ2h0ID0gbWl4KHdhdmVIaWdobGlnaHRDb2xvciAqIDUuMCAqICgxLjAgLSB0c1BlcnR1cmJhdGlvblJhdGlvKSwgdmVjMygwLjApLCBkaWZmdXNlSW50ZW5zaXR5KTtcbiNlbHNlXG4gICAgdmVjMyBub25EaWZmdXNlSGlnaGxpZ2h0ID0gdmVjMygwLjApO1xuI2VuZGlmXG5cbiAgICAvLyBBZGQgc3BlY3VsYXIgaGlnaGxpZ2h0cyBpbiAzRCwgYW5kIGluIGFsbCBtb2RlcyB3aGVuIHpvb21lZCBpbi5cbiAgICBmbG9hdCBzcGVjdWxhckludGVuc2l0eSA9IGN6bV9nZXRTcGVjdWxhcihjem1fc3VuRGlyZWN0aW9uRUMsIG5vcm1hbGl6ZWRwb3NpdGlvblRvRXllRUMsIG5vcm1hbEVDLCAxMC4wKSArIDAuMjUgKiBjem1fZ2V0U3BlY3VsYXIoY3ptX21vb25EaXJlY3Rpb25FQywgbm9ybWFsaXplZHBvc2l0aW9uVG9FeWVFQywgbm9ybWFsRUMsIDEwLjApO1xuICAgIGZsb2F0IHN1cmZhY2VSZWZsZWN0YW5jZSA9IG1peCgwLjAsIG1peCh1X3pvb21lZE91dE9jZWFuU3BlY3VsYXJJbnRlbnNpdHksIG9jZWFuU3BlY3VsYXJJbnRlbnNpdHksIHdhdmVJbnRlbnNpdHkpLCBzcGVjdWxhck1hcFZhbHVlKTtcbiAgICBmbG9hdCBzcGVjdWxhciA9IHNwZWN1bGFySW50ZW5zaXR5ICogc3VyZmFjZVJlZmxlY3RhbmNlO1xuICAgIFxuICAgIHJldHVybiB2ZWM0KGltYWdlcnlDb2xvci5yZ2IgKyBkaWZmdXNlSGlnaGxpZ2h0ICsgbm9uRGlmZnVzZUhpZ2hsaWdodCArIHNwZWN1bGFyLCBpbWFnZXJ5Q29sb3IuYSk7IFxufVxuXG4jZW5kaWYgLy8gI2lmZGVmIFNIT1dfUkVGTEVDVElWRV9PQ0VBTlxuIn0pLGRlZmluZSgiU2hhZGVycy9HbG9iZUZTRGVwdGgiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ2YXJ5aW5nIHZlYzQgcG9zaXRpb25FQztcblxudm9pZCBtYWluKClcbntcbiAgICAvLyBUT0RPOiBtYWtlIGFyYml0cmFyeSBlbGxpcHNvaWRcbiAgICBjem1fZWxsaXBzb2lkIGVsbGlwc29pZCA9IGN6bV9nZXRXZ3M4NEVsbGlwc29pZEVDKCk7XG4gICAgXG4gICAgdmVjMyBkaXJlY3Rpb24gPSBub3JtYWxpemUocG9zaXRpb25FQy54eXopO1xuICAgIGN6bV9yYXkgcmF5ID0gY3ptX3JheSh2ZWMzKDAuMCksIGRpcmVjdGlvbik7XG4gICAgXG4gICAgY3ptX3JheVNlZ21lbnQgaW50ZXJzZWN0aW9uID0gY3ptX3JheUVsbGlwc29pZEludGVyc2VjdGlvbkludGVydmFsKHJheSwgZWxsaXBzb2lkKTtcbiAgICBpZiAoIWN6bV9pc0VtcHR5KGludGVyc2VjdGlvbikpXG4gICAge1xuICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KDEuMCwgMS4wLCAwLjAsIDEuMCk7XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIGRpc2NhcmQ7XG4gICAgfVxufSJ9KSxkZWZpbmUoIlNoYWRlcnMvR2xvYmVGU1BvbGUiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ1bmlmb3JtIHZlYzMgdV9jb2xvcjtcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG52b2lkIG1haW4oKVxue1xuICAgIC8vIFRPRE86IG1ha2UgYXJiaXRyYXJ5IGVsbGlwc29pZFxuICAgIGN6bV9lbGxpcHNvaWQgZWxsaXBzb2lkID0gY3ptX2dldFdnczg0RWxsaXBzb2lkRUMoKTtcbiAgICB2ZWMzIGRpcmVjdGlvbiA9IG5vcm1hbGl6ZShjem1fd2luZG93VG9FeWVDb29yZGluYXRlcyhnbF9GcmFnQ29vcmQpLnh5eik7XG4gICAgY3ptX3JheSByYXkgPSBjem1fcmF5KHZlYzMoMC4wKSwgZGlyZWN0aW9uKTtcbiAgICBjem1fcmF5U2VnbWVudCBpbnRlcnNlY3Rpb24gPSBjem1fcmF5RWxsaXBzb2lkSW50ZXJzZWN0aW9uSW50ZXJ2YWwocmF5LCBlbGxpcHNvaWQpO1xuICAgIFxuICAgIGlmICghY3ptX2lzRW1wdHkoaW50ZXJzZWN0aW9uKSlcbiAgICB7XG4gICAgICAgIHZlYzMgcG9zaXRpb25FQyA9IGN6bV9wb2ludEFsb25nUmF5KHJheSwgaW50ZXJzZWN0aW9uLnN0YXJ0KTtcbiAgICAgICAgdmVjMyBwb3NpdGlvbk1DID0gKGN6bV9pbnZlcnNlTW9kZWxWaWV3ICogdmVjNChwb3NpdGlvbkVDLCAxLjApKS54eXo7XG4JICAgIFxuCSAgICB2ZWMzIG5vcm1hbE1DID0gbm9ybWFsaXplKGN6bV9nZW9kZXRpY1N1cmZhY2VOb3JtYWwocG9zaXRpb25NQywgdmVjMygwLjApLCB2ZWMzKDEuMCkpKTtcbgkgICAgdmVjMyBub3JtYWxFQyA9IG5vcm1hbGl6ZShjem1fbm9ybWFsICogbm9ybWFsTUMpO1xuCSAgICBcbiAgICAgICAgdmVjMyBzdGFydERheUNvbG9yID0gdV9jb2xvcjtcbgkJXG4gICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoc3RhcnREYXlDb2xvciwgMS4wKTtcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgICAgZGlzY2FyZDtcbiAgICB9XG59In0pLGRlZmluZSgiU2hhZGVycy9HbG9iZVZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzQgcG9zaXRpb24zREFuZEhlaWdodDtcbmF0dHJpYnV0ZSB2ZWM0IHRleHR1cmVDb29yZEFuZEVuY29kZWROb3JtYWxzO1xuXG51bmlmb3JtIHZlYzMgdV9jZW50ZXIzRDtcbnVuaWZvcm0gbWF0NCB1X21vZGlmaWVkTW9kZWxWaWV3O1xudW5pZm9ybSB2ZWM0IHVfdGlsZVJlY3RhbmdsZTtcblxuLy8gVW5pZm9ybXMgZm9yIDJEIE1lcmNhdG9yIHByb2plY3Rpb25cbnVuaWZvcm0gdmVjMiB1X3NvdXRoQW5kTm9ydGhMYXRpdHVkZTtcbnVuaWZvcm0gdmVjMyB1X3NvdXRoTWVyY2F0b3JZTG93QW5kSGlnaEFuZE9uZU92ZXJIZWlnaHQ7XG5cbnZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uTUM7XG52YXJ5aW5nIHZlYzMgdl9wb3NpdGlvbkVDO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG52YXJ5aW5nIHZlYzMgdl9ub3JtYWxNQztcbnZhcnlpbmcgdmVjMyB2X25vcm1hbEVDO1xuXG4vLyBUaGVzZSBmdW5jdGlvbnMgYXJlIGdlbmVyYXRlZCBhdCBydW50aW1lLlxudmVjNCBnZXRQb3NpdGlvbih2ZWMzIHBvc2l0aW9uM0RXQyk7XG5mbG9hdCBnZXQyRFlQb3NpdGlvbkZyYWN0aW9uKCk7XG5cbnZlYzQgZ2V0UG9zaXRpb24zRE1vZGUodmVjMyBwb3NpdGlvbjNEV0MpXG57XG4gICAgcmV0dXJuIGN6bV9wcm9qZWN0aW9uICogKHVfbW9kaWZpZWRNb2RlbFZpZXcgKiB2ZWM0KHBvc2l0aW9uM0RBbmRIZWlnaHQueHl6LCAxLjApKTtcbn1cblxuZmxvYXQgZ2V0MkRNZXJjYXRvcllQb3NpdGlvbkZyYWN0aW9uKClcbntcbiAgICAvLyBUaGUgd2lkdGggb2YgYSB0aWxlIGF0IGxldmVsIDExLCBpbiByYWRpYW5zIGFuZCBhc3N1bWluZyBhIHNpbmdsZSByb290IHRpbGUsIGlzXG4gICAgLy8gICAyLjAgKiBjem1fcGkgLyBwb3coMi4wLCAxMS4wKVxuICAgIC8vIFdlIHdhbnQgdG8ganVzdCBsaW5lYXJseSBpbnRlcnBvbGF0ZSB0aGUgMkQgcG9zaXRpb24gZnJvbSB0aGUgdGV4dHVyZSBjb29yZGluYXRlc1xuICAgIC8vIHdoZW4gd2UncmUgYXQgdGhpcyBsZXZlbCBvciBoaWdoZXIuICBUaGUgY29uc3RhbnQgYmVsb3cgaXMgdGhlIGV4cHJlc3Npb25cbiAgICAvLyBhYm92ZSBldmFsdWF0ZWQgYW5kIHRoZW4gcm91bmRlZCB1cCBhdCB0aGUgNHRoIHNpZ25pZmljYW50IGRpZ2l0LlxuICAgIGNvbnN0IGZsb2F0IG1heFRpbGVXaWR0aCA9IDAuMDAzMDY4O1xuICAgIGZsb2F0IHBvc2l0aW9uRnJhY3Rpb24gPSB0ZXh0dXJlQ29vcmRBbmRFbmNvZGVkTm9ybWFscy55O1xuICAgIGZsb2F0IHNvdXRoTGF0aXR1ZGUgPSB1X3NvdXRoQW5kTm9ydGhMYXRpdHVkZS54O1xuICAgIGZsb2F0IG5vcnRoTGF0aXR1ZGUgPSB1X3NvdXRoQW5kTm9ydGhMYXRpdHVkZS55O1xuICAgIGlmIChub3J0aExhdGl0dWRlIC0gc291dGhMYXRpdHVkZSA+IG1heFRpbGVXaWR0aClcbiAgICB7XG4gICAgICAgIGZsb2F0IHNvdXRoTWVyY2F0b3JZTG93ID0gdV9zb3V0aE1lcmNhdG9yWUxvd0FuZEhpZ2hBbmRPbmVPdmVySGVpZ2h0Lng7XG4gICAgICAgIGZsb2F0IHNvdXRoTWVyY2F0b3JZSGlnaCA9IHVfc291dGhNZXJjYXRvcllMb3dBbmRIaWdoQW5kT25lT3ZlckhlaWdodC55O1xuICAgICAgICBmbG9hdCBvbmVPdmVyTWVyY2F0b3JIZWlnaHQgPSB1X3NvdXRoTWVyY2F0b3JZTG93QW5kSGlnaEFuZE9uZU92ZXJIZWlnaHQuejtcblxuICAgICAgICBmbG9hdCBjdXJyZW50TGF0aXR1ZGUgPSBtaXgoc291dGhMYXRpdHVkZSwgbm9ydGhMYXRpdHVkZSwgdGV4dHVyZUNvb3JkQW5kRW5jb2RlZE5vcm1hbHMueSk7XG4gICAgICAgIGN1cnJlbnRMYXRpdHVkZSA9IGNsYW1wKGN1cnJlbnRMYXRpdHVkZSwgLWN6bV93ZWJNZXJjYXRvck1heExhdGl0dWRlLCBjem1fd2ViTWVyY2F0b3JNYXhMYXRpdHVkZSk7XG4gICAgICAgIHBvc2l0aW9uRnJhY3Rpb24gPSBjem1fbGF0aXR1ZGVUb1dlYk1lcmNhdG9yRnJhY3Rpb24oY3VycmVudExhdGl0dWRlLCBzb3V0aE1lcmNhdG9yWUxvdywgc291dGhNZXJjYXRvcllIaWdoLCBvbmVPdmVyTWVyY2F0b3JIZWlnaHQpO1xuICAgIH0gICAgXG4gICAgcmV0dXJuIHBvc2l0aW9uRnJhY3Rpb247XG59XG5cbmZsb2F0IGdldDJER2VvZ3JhcGhpY1lQb3NpdGlvbkZyYWN0aW9uKClcbntcbiAgICByZXR1cm4gdGV4dHVyZUNvb3JkQW5kRW5jb2RlZE5vcm1hbHMueTtcbn1cblxudmVjNCBnZXRQb3NpdGlvblBsYW5hckVhcnRoKHZlYzMgcG9zaXRpb24zRFdDLCBmbG9hdCBoZWlnaHQyRClcbntcbiAgICBmbG9hdCB5UG9zaXRpb25GcmFjdGlvbiA9IGdldDJEWVBvc2l0aW9uRnJhY3Rpb24oKTtcbiAgICB2ZWM0IHJ0Y1Bvc2l0aW9uMkQgPSB2ZWM0KGhlaWdodDJELCBtaXgodV90aWxlUmVjdGFuZ2xlLnN0LCB1X3RpbGVSZWN0YW5nbGUucHEsIHZlYzIodGV4dHVyZUNvb3JkQW5kRW5jb2RlZE5vcm1hbHMueCwgeVBvc2l0aW9uRnJhY3Rpb24pKSwgMS4wKTsgIFxuICAgIHJldHVybiBjem1fcHJvamVjdGlvbiAqICh1X21vZGlmaWVkTW9kZWxWaWV3ICogcnRjUG9zaXRpb24yRCk7XG59XG5cbnZlYzQgZ2V0UG9zaXRpb24yRE1vZGUodmVjMyBwb3NpdGlvbjNEV0MpXG57XG4gICAgcmV0dXJuIGdldFBvc2l0aW9uUGxhbmFyRWFydGgocG9zaXRpb24zRFdDLCAwLjApO1xufVxuXG52ZWM0IGdldFBvc2l0aW9uQ29sdW1idXNWaWV3TW9kZSh2ZWMzIHBvc2l0aW9uM0RXQylcbntcbiAgICByZXR1cm4gZ2V0UG9zaXRpb25QbGFuYXJFYXJ0aChwb3NpdGlvbjNEV0MsIHBvc2l0aW9uM0RBbmRIZWlnaHQudyk7XG59XG5cbnZlYzQgZ2V0UG9zaXRpb25Nb3JwaGluZ01vZGUodmVjMyBwb3NpdGlvbjNEV0MpXG57XG4gICAgLy8gV2UgZG8gbm90IGRvIFJUQyB3aGlsZSBtb3JwaGluZywgc28gdGhlcmUgaXMgcG90ZW50aWFsIGZvciBqaXR0ZXIuXG4gICAgLy8gVGhpcyBpcyB1bmxpa2VseSB0byBiZSBub3RpY2VhYmxlLCB0aG91Z2guXG4gICAgZmxvYXQgeVBvc2l0aW9uRnJhY3Rpb24gPSBnZXQyRFlQb3NpdGlvbkZyYWN0aW9uKCk7XG4gICAgdmVjNCBwb3NpdGlvbjJEV0MgPSB2ZWM0KDAuMCwgbWl4KHVfdGlsZVJlY3RhbmdsZS5zdCwgdV90aWxlUmVjdGFuZ2xlLnBxLCB2ZWMyKHRleHR1cmVDb29yZEFuZEVuY29kZWROb3JtYWxzLngsIHlQb3NpdGlvbkZyYWN0aW9uKSksIDEuMCk7XG4gICAgdmVjNCBtb3JwaFBvc2l0aW9uID0gY3ptX2NvbHVtYnVzVmlld01vcnBoKHBvc2l0aW9uMkRXQywgdmVjNChwb3NpdGlvbjNEV0MsIDEuMCksIGN6bV9tb3JwaFRpbWUpO1xuICAgIHJldHVybiBjem1fbW9kZWxWaWV3UHJvamVjdGlvbiAqIG1vcnBoUG9zaXRpb247XG59XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIHZlYzMgcG9zaXRpb24zRFdDID0gcG9zaXRpb24zREFuZEhlaWdodC54eXogKyB1X2NlbnRlcjNEO1xuXG4gICAgZ2xfUG9zaXRpb24gPSBnZXRQb3NpdGlvbihwb3NpdGlvbjNEV0MpO1xuXG4jaWYgZGVmaW5lZChTSE9XX1JFRkxFQ1RJVkVfT0NFQU4pIHx8IGRlZmluZWQoRU5BQkxFX0RBWU5JR0hUX1NIQURJTkcpXG4gICAgdl9wb3NpdGlvbkVDID0gKGN6bV9tb2RlbFZpZXczRCAqIHZlYzQocG9zaXRpb24zRFdDLCAxLjApKS54eXo7XG4gICAgdl9wb3NpdGlvbk1DID0gcG9zaXRpb24zRFdDOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBvc2l0aW9uIGluIG1vZGVsIGNvb3JkaW5hdGVzXG4jZWxpZiBkZWZpbmVkKEVOQUJMRV9WRVJURVhfTElHSFRJTkcpXG4gICAgdl9wb3NpdGlvbkVDID0gKGN6bV9tb2RlbFZpZXczRCAqIHZlYzQocG9zaXRpb24zRFdDLCAxLjApKS54eXo7XG4gICAgdl9wb3NpdGlvbk1DID0gcG9zaXRpb24zRFdDOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBvc2l0aW9uIGluIG1vZGVsIGNvb3JkaW5hdGVzXG4gICAgdmVjMiBlbmNvZGVkTm9ybWFsID0gdGV4dHVyZUNvb3JkQW5kRW5jb2RlZE5vcm1hbHMuenc7XG4gICAgZW5jb2RlZE5vcm1hbCA9IGVuY29kZWROb3JtYWwgLyAyNTUuMCAqIDIuMCAtIDEuMDtcbiAgICB2X25vcm1hbE1DID0gY3ptX29jdERlY29kZShlbmNvZGVkTm9ybWFsKTtcbiAgICB2X25vcm1hbEVDID0gY3ptX25vcm1hbDNEICogdl9ub3JtYWxNQztcbiNlbmRpZlxuXG4gICAgdl90ZXh0dXJlQ29vcmRpbmF0ZXMgPSB0ZXh0dXJlQ29vcmRBbmRFbmNvZGVkTm9ybWFscy54eTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvR2xvYmVWU0RlcHRoIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzQgcG9zaXRpb247XG5cbnZhcnlpbmcgdmVjNCBwb3NpdGlvbkVDO1xuXG52b2lkIG1haW4oKVxue1xuICAgIHBvc2l0aW9uRUMgPSBjem1fbW9kZWxWaWV3ICogcG9zaXRpb247XG4gICAgZ2xfUG9zaXRpb24gPSBjem1fcHJvamVjdGlvbiAqIHBvc2l0aW9uRUM7XG59In0pLGRlZmluZSgiU2hhZGVycy9HbG9iZVZTUG9sZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWM0IHBvc2l0aW9uO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIGZsb2F0IHggPSAocG9zaXRpb24ueCAtIGN6bV92aWV3cG9ydC54KSAvIGN6bV92aWV3cG9ydC56O1xuICAgIGZsb2F0IHkgPSAocG9zaXRpb24ueSAtIGN6bV92aWV3cG9ydC55KSAvIGN6bV92aWV3cG9ydC53O1xuICAgIHZfdGV4dHVyZUNvb3JkaW5hdGVzID0gdmVjMih4LCB5KTtcbiAgICBcbiAgICBnbF9Qb3NpdGlvbiA9IGN6bV92aWV3cG9ydE9ydGhvZ3JhcGhpYyAqIHBvc2l0aW9uO1xufSJ9KSxkZWZpbmUoIlNjZW5lL0RlcHRoRnVuY3Rpb24iLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e05FVkVSOjUxMixMRVNTOjUxMyxFUVVBTDo1MTQsTEVTU19PUl9FUVVBTDo1MTUsR1JFQVRFUjo1MTYsTk9UX0VRVUFMOjUxNyxHUkVBVEVSX09SX0VRVUFMOjUxOCxBTFdBWVM6NTE5fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiU2NlbmUvdGVycmFpbkF0dHJpYnV0ZUxvY2F0aW9ucyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJue3Bvc2l0aW9uM0RBbmRIZWlnaHQ6MCx0ZXh0dXJlQ29vcmRBbmRFbmNvZGVkTm9ybWFsczoxfX0pLGRlZmluZSgiU2NlbmUvR2xvYmVTdXJmYWNlU2hhZGVyU2V0IixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL1NjZW5lL3RlcnJhaW5BdHRyaWJ1dGVMb2NhdGlvbnMiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oKXt0aGlzLmJhc2VWZXJ0ZXhTaGFkZXJTdHJpbmc9dm9pZCAwLHRoaXMuYmFzZUZyYWdtZW50U2hhZGVyU3RyaW5nPXZvaWQgMCx0aGlzLl9hdHRyaWJ1dGVMb2NhdGlvbnM9aSx0aGlzLl9zaGFkZXJzPXt9fWZ1bmN0aW9uIHIoZSx0LGksbixyLG8sYSl7dmFyIHM9IiI7cmV0dXJuIHMrPWUsdCYmKHMrPSJfYnJpZ2h0bmVzcyIpLGkmJihzKz0iX2NvbnRyYXN0IiksbiYmKHMrPSJfaHVlIiksciYmKHMrPSJfc2F0dXJhdGlvbiIpLG8mJihzKz0iX2dhbW1hIiksYSYmKHMrPSJfYWxwaGEiKSxzfXJldHVybiBuLnByb3RvdHlwZS5pbnZhbGlkYXRlU2hhZGVycz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3NoYWRlcnM7Zm9yKHZhciB0IGluIGUpZS5oYXNPd25Qcm9wZXJ0eSh0KSYmZVt0XS5kZXN0cm95KCk7dGhpcy5fc2hhZGVycz17fX0sbi5wcm90b3R5cGUuZ2V0U2hhZGVyUHJvZ3JhbT1mdW5jdGlvbih0LGksbixvLGEscyxsLHUpe3ZhciBjPXIoaSxuLG8sYSxzLGwsdSksZD10aGlzLl9zaGFkZXJzW2NdO2lmKCFlKGQpKXtmb3IodmFyIGg9dGhpcy5iYXNlVmVydGV4U2hhZGVyU3RyaW5nLG09KG4/IiNkZWZpbmUgQVBQTFlfQlJJR0hUTkVTU1xuIjoiIikrKG8/IiNkZWZpbmUgQVBQTFlfQ09OVFJBU1RcbiI6IiIpKyhhPyIjZGVmaW5lIEFQUExZX0hVRVxuIjoiIikrKHM/IiNkZWZpbmUgQVBQTFlfU0FUVVJBVElPTlxuIjoiIikrKGw/IiNkZWZpbmUgQVBQTFlfR0FNTUFcbiI6IiIpKyh1PyIjZGVmaW5lIEFQUExZX0FMUEhBXG4iOiIiKSsiI2RlZmluZSBURVhUVVJFX1VOSVRTICIraSsiXG4iK3RoaXMuYmFzZUZyYWdtZW50U2hhZGVyU3RyaW5nKyJcbiIrInZlYzQgY29tcHV0ZURheUNvbG9yKHZlYzQgaW5pdGlhbENvbG9yLCB2ZWMyIHRleHR1cmVDb29yZGluYXRlcylcbiIrIntcbiIrIiAgICB2ZWM0IGNvbG9yID0gaW5pdGlhbENvbG9yO1xuIixmPTA7aT5mOysrZiltKz0iY29sb3IgPSBzYW1wbGVBbmRCbGVuZChcbiAgIGNvbG9yLFxuICAgdV9kYXlUZXh0dXJlc1siK2YrIl0sXG4iKyIgICB0ZXh0dXJlQ29vcmRpbmF0ZXMsXG4iKyIgICB1X2RheVRleHR1cmVUZXhDb29yZHNSZWN0YW5nbGVbIitmKyJdLFxuIisiICAgdV9kYXlUZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZVsiK2YrIl0sXG4iKyh1PyIgICB1X2RheVRleHR1cmVBbHBoYVsiK2YrIl0sXG4iOiIxLjAsXG4iKSsobj8iICAgdV9kYXlUZXh0dXJlQnJpZ2h0bmVzc1siK2YrIl0sXG4iOiIwLjAsXG4iKSsobz8iICAgdV9kYXlUZXh0dXJlQ29udHJhc3RbIitmKyJdLFxuIjoiMC4wLFxuIikrKGE/IiAgIHVfZGF5VGV4dHVyZUh1ZVsiK2YrIl0sXG4iOiIwLjAsXG4iKSsocz8iICAgdV9kYXlUZXh0dXJlU2F0dXJhdGlvblsiK2YrIl0sXG4iOiIwLjAsXG4iKSsobD8iICAgdV9kYXlUZXh0dXJlT25lT3ZlckdhbW1hWyIrZisiXSk7XG4iOiIwLjApO1xuIik7bSs9IiAgICByZXR1cm4gY29sb3I7XG59IixkPXQuY3JlYXRlU2hhZGVyUHJvZ3JhbShoLG0sdGhpcy5fYXR0cmlidXRlTG9jYXRpb25zKSx0aGlzLl9zaGFkZXJzW2NdPWR9cmV0dXJuIGR9LG4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbnZhbGlkYXRlU2hhZGVycygpLHQodGhpcyl9LG59KSxkZWZpbmUoIkNvcmUvZGVwcmVjYXRpb25XYXJuaW5nIixbIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e30saT1mdW5jdGlvbihpLG4pe2UodFtpXSl8fCh0W2ldPSEwLGNvbnNvbGUubG9nKG4pKX07cmV0dXJuIGl9KSxkZWZpbmUoIlNjZW5lL0ltYWdlcnlTdGF0ZSIsWyIuLi9Db3JlL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17VU5MT0FERUQ6MCxUUkFOU0lUSU9OSU5HOjEsUkVDRUlWRUQ6MixURVhUVVJFX0xPQURFRDozLFJFQURZOjQsRkFJTEVEOjUsSU5WQUxJRDo2LFBMQUNFSE9MREVSOjd9O3JldHVybiBlKHQpfSksZGVmaW5lKCJTY2VuZS9RdWFkdHJlZVRpbGVMb2FkU3RhdGUiLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e1NUQVJUOjAsTE9BRElORzoxLERPTkU6MixGQUlMRUQ6M307cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL1RlcnJhaW5TdGF0ZSIsWyIuLi9Db3JlL2ZyZWV6ZU9iamVjdCJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17RkFJTEVEOjAsVU5MT0FERUQ6MSxSRUNFSVZJTkc6MixSRUNFSVZFRDozLFRSQU5TRk9STUlORzo0LFRSQU5TRk9STUVEOjUsUkVBRFk6Nn07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL1RpbGVUZXJyYWluIixbIi4uL0NvcmUvQm91bmRpbmdTcGhlcmUiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvSW5kZXhEYXRhdHlwZSIsIi4uL0NvcmUvVGlsZVByb3ZpZGVyRXJyb3IiLCIuLi9SZW5kZXJlci9CdWZmZXJVc2FnZSIsIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vdGVycmFpbkF0dHJpYnV0ZUxvY2F0aW9ucyIsIi4vVGVycmFpblN0YXRlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChlLHQsaSxyLG8pe2Z1bmN0aW9uIHModCl7ZS5kYXRhPXQsZS5zdGF0ZT1jLlJFQ0VJVkVEfWZ1bmN0aW9uIHUoKXtlLnN0YXRlPWMuRkFJTEVEO3ZhciBuPSJGYWlsZWQgdG8gb2J0YWluIHRlcnJhaW4gdGlsZSBYOiAiK2krIiBZOiAiK3IrIiBMZXZlbDogIitvKyIuIjt0Ll9yZXF1ZXN0RXJyb3I9YS5oYW5kbGVFcnJvcih0Ll9yZXF1ZXN0RXJyb3IsdCx0LmVycm9yRXZlbnQsbixpLHIsbyxkKX1mdW5jdGlvbiBkKCl7ZS5kYXRhPXQucmVxdWVzdFRpbGVHZW9tZXRyeShpLHIsbyksbihlLmRhdGEpPyhlLnN0YXRlPWMuUkVDRUlWSU5HLGwoZS5kYXRhLHMsdSkpOmUuc3RhdGU9Yy5VTkxPQURFRH1kKCl9ZnVuY3Rpb24gaChlLHQsaSxyLG8sYSl7dmFyIHM9aS50aWxpbmdTY2hlbWUsdT1lLmRhdGEsZD11LmNyZWF0ZU1lc2gocyxyLG8sYSk7bihkKSYmKGUuc3RhdGU9Yy5UUkFOU0ZPUk1JTkcsbChkLGZ1bmN0aW9uKHQpe2UubWVzaD10LGUuc3RhdGU9Yy5UUkFOU0ZPUk1FRH0sZnVuY3Rpb24oKXtlLnN0YXRlPWMuRkFJTEVEfSkpfWZ1bmN0aW9uIG0oZSx0LHIpe3ZhciBhLGwsZD1pLkZMT0FULGg9ZS5tZXNoLnZlcnRpY2VzLG09dC5jcmVhdGVWZXJ0ZXhCdWZmZXIoaCxzLlNUQVRJQ19EUkFXKTtyLmhhc1ZlcnRleE5vcm1hbHM/KGE9OCppLmdldFNpemVJbkJ5dGVzKGQpLGw9NCk6KGE9NippLmdldFNpemVJbkJ5dGVzKGQpLGw9Mik7dmFyIGY9NCxwPVt7aW5kZXg6dS5wb3NpdGlvbjNEQW5kSGVpZ2h0LHZlcnRleEJ1ZmZlcjptLGNvbXBvbmVudERhdGF0eXBlOmQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpmLG9mZnNldEluQnl0ZXM6MCxzdHJpZGVJbkJ5dGVzOmF9LHtpbmRleDp1LnRleHR1cmVDb29yZEFuZEVuY29kZWROb3JtYWxzLHZlcnRleEJ1ZmZlcjptLGNvbXBvbmVudERhdGF0eXBlOmQsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpsLG9mZnNldEluQnl0ZXM6ZippLmdldFNpemVJbkJ5dGVzKGQpLHN0cmlkZUluQnl0ZXM6YX1dLHY9ZS5tZXNoLmluZGljZXMuaW5kZXhCdWZmZXJzfHx7fSxnPXZbdC5pZF07aWYoIW4oZyl8fGcuaXNEZXN0cm95ZWQoKSl7dmFyIF89ZS5tZXNoLmluZGljZXM7Zz10LmNyZWF0ZUluZGV4QnVmZmVyKF8scy5TVEFUSUNfRFJBVyxvLlVOU0lHTkVEX1NIT1JUKSxnLnZlcnRleEFycmF5RGVzdHJveWFibGU9ITEsZy5yZWZlcmVuY2VDb3VudD0xLHZbdC5pZF09ZyxlLm1lc2guaW5kaWNlcy5pbmRleEJ1ZmZlcnM9dn1lbHNlKytnLnJlZmVyZW5jZUNvdW50O2UudmVydGV4QXJyYXk9dC5jcmVhdGVWZXJ0ZXhBcnJheShwLGcpLGUuc3RhdGU9Yy5SRUFEWX12YXIgZj1mdW5jdGlvbihlKXt0aGlzLnN0YXRlPWMuVU5MT0FERUQsdGhpcy5kYXRhPXZvaWQgMCx0aGlzLm1lc2g9dm9pZCAwLHRoaXMudmVydGV4QXJyYXk9dm9pZCAwLHRoaXMudXBzYW1wbGVEZXRhaWxzPWV9O3JldHVybiBmLnByb3RvdHlwZS5mcmVlUmVzb3VyY2VzPWZ1bmN0aW9uKCl7aWYodGhpcy5zdGF0ZT1jLlVOTE9BREVELHRoaXMuZGF0YT12b2lkIDAsdGhpcy5tZXNoPXZvaWQgMCxuKHRoaXMudmVydGV4QXJyYXkpKXt2YXIgZT10aGlzLnZlcnRleEFycmF5LmluZGV4QnVmZmVyO3RoaXMudmVydGV4QXJyYXkuZGVzdHJveSgpLHRoaXMudmVydGV4QXJyYXk9dm9pZCAwLCFlLmlzRGVzdHJveWVkKCkmJm4oZS5yZWZlcmVuY2VDb3VudCkmJigtLWUucmVmZXJlbmNlQ291bnQsMD09PWUucmVmZXJlbmNlQ291bnQmJmUuZGVzdHJveSgpKX19LGYucHJvdG90eXBlLnB1Ymxpc2hUb1RpbGU9ZnVuY3Rpb24oaSl7dmFyIG49aS5kYXRhLHI9dGhpcy5tZXNoO3QuY2xvbmUoci5jZW50ZXIsbi5jZW50ZXIpLG4ubWluaW11bUhlaWdodD1yLm1pbmltdW1IZWlnaHQsbi5tYXhpbXVtSGVpZ2h0PXIubWF4aW11bUhlaWdodCxuLmJvdW5kaW5nU3BoZXJlM0Q9ZS5jbG9uZShyLmJvdW5kaW5nU3BoZXJlM0Qsbi5ib3VuZGluZ1NwaGVyZTNEKSxpLmRhdGEub2NjbHVkZWVQb2ludEluU2NhbGVkU3BhY2U9dC5jbG9uZShyLm9jY2x1ZGVlUG9pbnRJblNjYWxlZFNwYWNlLG4ub2NjbHVkZWVQb2ludEluU2NhbGVkU3BhY2UpLG4uZnJlZVZlcnRleEFycmF5KCksbi52ZXJ0ZXhBcnJheT10aGlzLnZlcnRleEFycmF5LHRoaXMudmVydGV4QXJyYXk9dm9pZCAwfSxmLnByb3RvdHlwZS5wcm9jZXNzTG9hZFN0YXRlTWFjaGluZT1mdW5jdGlvbihlLHQsaSxuLHIpe3RoaXMuc3RhdGU9PT1jLlVOTE9BREVEJiZkKHRoaXMsdCxpLG4sciksdGhpcy5zdGF0ZT09PWMuUkVDRUlWRUQmJmgodGhpcyxlLHQsaSxuLHIpLHRoaXMuc3RhdGU9PT1jLlRSQU5TRk9STUVEJiZtKHRoaXMsZSx0LGksbixyKX0sZi5wcm90b3R5cGUucHJvY2Vzc1Vwc2FtcGxlU3RhdGVNYWNoaW5lPWZ1bmN0aW9uKGUsdCxpLHIsbyl7aWYodGhpcy5zdGF0ZT09PWMuVU5MT0FERUQpe3ZhciBhPXRoaXMudXBzYW1wbGVEZXRhaWxzLHM9YS5kYXRhLHU9YS54LGQ9YS55LGY9YS5sZXZlbDtpZih0aGlzLmRhdGE9cy51cHNhbXBsZSh0LnRpbGluZ1NjaGVtZSx1LGQsZixpLHIsbyksIW4odGhpcy5kYXRhKSlyZXR1cm47dGhpcy5zdGF0ZT1jLlJFQ0VJVklORzt2YXIgcD10aGlzO2wodGhpcy5kYXRhLGZ1bmN0aW9uKGUpe3AuZGF0YT1lLHAuc3RhdGU9Yy5SRUNFSVZFRH0sZnVuY3Rpb24oKXtwLnN0YXRlPWMuRkFJTEVEfSl9dGhpcy5zdGF0ZT09PWMuUkVDRUlWRUQmJmgodGhpcyxlLHQsaSxyLG8pLHRoaXMuc3RhdGU9PT1jLlRSQU5TRk9STUVEJiZtKHRoaXMsZSx0LGkscixvKX0sZn0pLGRlZmluZSgiU2NlbmUvR2xvYmVTdXJmYWNlVGlsZSIsWyIuLi9Db3JlL0JvdW5kaW5nU3BoZXJlIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0ZXNpYW40IiwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVwcmVjYXRpb25XYXJuaW5nIiwiLi4vQ29yZS9JbnRlcnNlY3Rpb25UZXN0cyIsIi4uL0NvcmUvUGl4ZWxGb3JtYXQiLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL1JlbmRlcmVyL1BpeGVsRGF0YXR5cGUiLCIuLi9SZW5kZXJlci9UZXh0dXJlTWFnbmlmaWNhdGlvbkZpbHRlciIsIi4uL1JlbmRlcmVyL1RleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIiLCIuLi9SZW5kZXJlci9UZXh0dXJlV3JhcCIsIi4vSW1hZ2VyeVN0YXRlIiwiLi9RdWFkdHJlZVRpbGVMb2FkU3RhdGUiLCIuL1NjZW5lTW9kZSIsIi4vVGVycmFpblN0YXRlIiwiLi9UaWxlVGVycmFpbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIEMoZSxpLG4scixhKXtpZih0LnVucGFjayhuLDYqcixhKSx0LmFkZChlLmNlbnRlcixhLGEpLG8oaSkmJmkubW9kZSE9PWcuU0NFTkUzRCl7dmFyIHM9aS5tYXBQcm9qZWN0aW9uLGw9cy5lbGxpcHNvaWQsdT1sLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGEpO3MucHJvamVjdCh1LGEpLHQuZnJvbUVsZW1lbnRzKGEueixhLngsYS55LGEpfXJldHVybiBhfWZ1bmN0aW9uIHcoZSxpLG4pe3ZhciByPWUuZGF0YSxhPWIoZSk7byhhKSYmKHIudXBzYW1wbGVkVGVycmFpbj1uZXcgeShhKSkseChlLGkpJiYoci5sb2FkZWRUZXJyYWluPW5ldyB5KTtmb3IodmFyIHM9MCxsPW4ubGVuZ3RoO2w+czsrK3Mpe3ZhciB1PW4uZ2V0KHMpO3Uuc2hvdyYmdS5fY3JlYXRlVGlsZUltYWdlcnlTa2VsZXRvbnMoZSxpKX12YXIgZD1lLnRpbGluZ1NjaGVtZS5lbGxpcHNvaWQsaD1lLnJlY3RhbmdsZTtkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGMuc291dGh3ZXN0KGgpLHIuc291dGh3ZXN0Q29ybmVyQ2FydGVzaWFuKSxkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGMubm9ydGhlYXN0KGgpLHIubm9ydGhlYXN0Q29ybmVyQ2FydGVzaWFuKSxGLmxvbmdpdHVkZT1oLndlc3QsRi5sYXRpdHVkZT0uNSooaC5zb3V0aCtoLm5vcnRoKSxGLmhlaWdodD0wO3ZhciBtPWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oRix6KSxmPXQuY3Jvc3MobSx0LlVOSVRfWixMKTt0Lm5vcm1hbGl6ZShmLHIud2VzdE5vcm1hbCksRi5sb25naXR1ZGU9aC5lYXN0O3ZhciBwPWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oRixCKSx2PXQuY3Jvc3ModC5VTklUX1oscCxMKTt0Lm5vcm1hbGl6ZSh2LHIuZWFzdE5vcm1hbCk7dmFyIGc9ZC5nZW9kZXRpY1N1cmZhY2VOb3JtYWxDYXJ0b2dyYXBoaWMoYy5zb3V0aGVhc3QoaCksTiksXz10LnN1YnRyYWN0KG0scCxMKSxDPXQuY3Jvc3MoZyxfLE4pO3Qubm9ybWFsaXplKEMsci5zb3V0aE5vcm1hbCk7dmFyIHc9ZC5nZW9kZXRpY1N1cmZhY2VOb3JtYWxDYXJ0b2dyYXBoaWMoYy5ub3J0aHdlc3QoaCksTiksRT10LmNyb3NzKF8sdyxOKTt0Lm5vcm1hbGl6ZShFLHIubm9ydGhOb3JtYWwpfWZ1bmN0aW9uIEUoZSx0LGkpe3ZhciBuPWUuZGF0YSxhPW4ubG9hZGVkVGVycmFpbixzPW4udXBzYW1wbGVkVGVycmFpbixsPSExO2lmKG8oYSkpe2lmKGEucHJvY2Vzc0xvYWRTdGF0ZU1hY2hpbmUodCxpLGUueCxlLnksZS5sZXZlbCksYS5zdGF0ZT49Xy5SRUNFSVZFRCl7aWYobi50ZXJyYWluRGF0YSE9PWEuZGF0YSl7bi50ZXJyYWluRGF0YT1hLmRhdGE7dmFyIHU9bi50ZXJyYWluRGF0YS53YXRlck1hc2s7byh1KSYmKG8obi53YXRlck1hc2tUZXh0dXJlKSYmKC0tbi53YXRlck1hc2tUZXh0dXJlLnJlZmVyZW5jZUNvdW50LDA9PT1uLndhdGVyTWFza1RleHR1cmUucmVmZXJlbmNlQ291bnQmJm4ud2F0ZXJNYXNrVGV4dHVyZS5kZXN0cm95KCkpLG4ud2F0ZXJNYXNrVGV4dHVyZT1BKHQsdSksbi53YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLng9MCxuLndhdGVyTWFza1RyYW5zbGF0aW9uQW5kU2NhbGUueT0wLG4ud2F0ZXJNYXNrVHJhbnNsYXRpb25BbmRTY2FsZS56PTEsbi53YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLnc9MSksVChlKX1sPSEwfWEuc3RhdGU9PT1fLlJFQURZPyhhLnB1Ymxpc2hUb1RpbGUoZSksbi5waWNrVGVycmFpbj1yKG4ubG9hZGVkVGVycmFpbixuLnVwc2FtcGxlZFRlcnJhaW4pLG4ubG9hZGVkVGVycmFpbj12b2lkIDAsbi51cHNhbXBsZWRUZXJyYWluPXZvaWQgMCk6YS5zdGF0ZT09PV8uRkFJTEVEJiYobi5sb2FkZWRUZXJyYWluPXZvaWQgMCl9IWwmJm8ocykmJihzLnByb2Nlc3NVcHNhbXBsZVN0YXRlTWFjaGluZSh0LGksZS54LGUueSxlLmxldmVsKSxzLnN0YXRlPj1fLlJFQ0VJVkVEJiZuLnRlcnJhaW5EYXRhIT09cy5kYXRhJiYobi50ZXJyYWluRGF0YT1zLmRhdGEsaS5oYXNXYXRlck1hc2smJlAoZSksUyhlKSkscy5zdGF0ZT09PV8uUkVBRFk/KHMucHVibGlzaFRvVGlsZShlKSxuLnBpY2tUZXJyYWluPW4udXBzYW1wbGVkVGVycmFpbixuLnVwc2FtcGxlZFRlcnJhaW49dm9pZCAwKTpzLnN0YXRlPT09Xy5GQUlMRUQmJihuLnVwc2FtcGxlZFRlcnJhaW49dm9pZCAwKSl9ZnVuY3Rpb24gYihlKXtmb3IodmFyIHQ9ZS5wYXJlbnQ7byh0KSYmbyh0LmRhdGEpJiYhbyh0LmRhdGEudGVycmFpbkRhdGEpOyl0PXQucGFyZW50O3JldHVybiBvKHQpJiZvKHQuZGF0YSk/e2RhdGE6dC5kYXRhLnRlcnJhaW5EYXRhLHg6dC54LHk6dC55LGxldmVsOnQubGV2ZWx9OnZvaWQgMH1mdW5jdGlvbiBTKGUpe3ZhciB0PWUuZGF0YTtpZihvKGUuX2NoaWxkcmVuKSlmb3IodmFyIGk9MDs0Pmk7KytpKXt2YXIgbj1lLl9jaGlsZHJlbltpXTtpZihuLnN0YXRlIT09di5TVEFSVCl7dmFyIHI9bi5kYXRhO2lmKG8oci50ZXJyYWluRGF0YSkmJiFyLnRlcnJhaW5EYXRhLndhc0NyZWF0ZWRCeVVwc2FtcGxpbmcoKSljb250aW51ZTtvKHIudXBzYW1wbGVkVGVycmFpbikmJnIudXBzYW1wbGVkVGVycmFpbi5mcmVlUmVzb3VyY2VzKCksci51cHNhbXBsZWRUZXJyYWluPW5ldyB5KHtkYXRhOnQudGVycmFpbkRhdGEseDplLngseTplLnksbGV2ZWw6ZS5sZXZlbH0pLG4uc3RhdGU9di5MT0FESU5HfX19ZnVuY3Rpb24gVChlKXt2YXIgdD1lLmRhdGE7aWYobyhlLmNoaWxkcmVuKSlmb3IodmFyIGk9MDs0Pmk7KytpKXt2YXIgbj1lLmNoaWxkcmVuW2ldO2lmKG4uc3RhdGUhPT12LlNUQVJUKXt2YXIgcj1uLmRhdGE7aWYobyhyLnRlcnJhaW5EYXRhKSYmIXIudGVycmFpbkRhdGEud2FzQ3JlYXRlZEJ5VXBzYW1wbGluZygpKWNvbnRpbnVlO28oci51cHNhbXBsZWRUZXJyYWluKSYmci51cHNhbXBsZWRUZXJyYWluLmZyZWVSZXNvdXJjZXMoKSxyLnVwc2FtcGxlZFRlcnJhaW49bmV3IHkoe2RhdGE6dC50ZXJyYWluRGF0YSx4OmUueCx5OmUueSxsZXZlbDplLmxldmVsfSksdC50ZXJyYWluRGF0YS5pc0NoaWxkQXZhaWxhYmxlKGUueCxlLnksbi54LG4ueSkmJihvKHIubG9hZGVkVGVycmFpbil8fChyLmxvYWRlZFRlcnJhaW49bmV3IHkpKSxuLnN0YXRlPXYuTE9BRElOR319fWZ1bmN0aW9uIHgoZSx0KXtpZihvKHQuZ2V0VGlsZURhdGFBdmFpbGFibGUpKXt2YXIgaT10LmdldFRpbGVEYXRhQXZhaWxhYmxlKGUueCxlLnksZS5sZXZlbCk7aWYobyhpKSlyZXR1cm4gaX1lbHNlIHMoIlRlcnJhaW5Qcm92aWRlci5nZXRUaWxlRGF0YUF2YWlsYWJsZSIsIlRlcnJhaW5Qcm92aWRlcnMgbXVzdCBub3cgaW1wbGVtZW50IHRoZSBnZXRUaWxlRGF0YUF2YWlsYWJsZSBmdW5jdGlvbi4iKTt2YXIgbj1lLnBhcmVudDtyZXR1cm4gbyhuKT9vKG4uZGF0YSkmJm8obi5kYXRhLnRlcnJhaW5EYXRhKT9uLmRhdGEudGVycmFpbkRhdGEuaXNDaGlsZEF2YWlsYWJsZShuLngsbi55LGUueCxlLnkpOiExOiEwfWZ1bmN0aW9uIEEoZSx0KXt2YXIgaSxuPWUuY2FjaGUudGlsZV93YXRlck1hc2tEYXRhO28obil8fChuPWUuY2FjaGUudGlsZV93YXRlck1hc2tEYXRhPXthbGxXYXRlclRleHR1cmU6dm9pZCAwLGFsbExhbmRUZXh0dXJlOnZvaWQgMCxzYW1wbGVyOnZvaWQgMCxkZXN0cm95OmZ1bmN0aW9uKCl7byh0aGlzLmFsbFdhdGVyVGV4dHVyZSkmJnRoaXMuYWxsV2F0ZXJUZXh0dXJlLmRlc3Ryb3koKSxvKHRoaXMuYWxsTGFuZFRleHR1cmUpJiZ0aGlzLmFsbExhbmRUZXh0dXJlLmRlc3Ryb3koKX19KTt2YXIgcj1NYXRoLnNxcnQodC5sZW5ndGgpO3JldHVybiAxIT09cnx8MCE9PXRbMF0mJjI1NSE9PXRbMF0/KGk9ZS5jcmVhdGVUZXh0dXJlMkQoe3BpeGVsRm9ybWF0OnUuTFVNSU5BTkNFLHBpeGVsRGF0YXR5cGU6ZC5VTlNJR05FRF9CWVRFLHNvdXJjZTp7d2lkdGg6cixoZWlnaHQ6cixhcnJheUJ1ZmZlclZpZXc6dH19KSxpLnJlZmVyZW5jZUNvdW50PTAsbyhuLnNhbXBsZXIpfHwobi5zYW1wbGVyPWUuY3JlYXRlU2FtcGxlcih7d3JhcFM6Zi5DTEFNUF9UT19FREdFLHdyYXBUOmYuQ0xBTVBfVE9fRURHRSxtaW5pZmljYXRpb25GaWx0ZXI6bS5MSU5FQVIsbWFnbmlmaWNhdGlvbkZpbHRlcjpoLkxJTkVBUn0pKSxpLnNhbXBsZXI9bi5zYW1wbGVyKToobyhuLmFsbFdhdGVyVGV4dHVyZSl8fChuLmFsbFdhdGVyVGV4dHVyZT1lLmNyZWF0ZVRleHR1cmUyRCh7cGl4ZWxGb3JtYXQ6dS5MVU1JTkFOQ0UscGl4ZWxEYXRhdHlwZTpkLlVOU0lHTkVEX0JZVEUsc291cmNlOnthcnJheUJ1ZmZlclZpZXc6bmV3IFVpbnQ4QXJyYXkoWzI1NV0pLHdpZHRoOjEsaGVpZ2h0OjF9fSksbi5hbGxXYXRlclRleHR1cmUucmVmZXJlbmNlQ291bnQ9MSxuLmFsbExhbmRUZXh0dXJlPWUuY3JlYXRlVGV4dHVyZTJEKHtwaXhlbEZvcm1hdDp1LkxVTUlOQU5DRSxwaXhlbERhdGF0eXBlOmQuVU5TSUdORURfQllURSxzb3VyY2U6e2FycmF5QnVmZmVyVmlldzpuZXcgVWludDhBcnJheShbMF0pLHdpZHRoOjEsaGVpZ2h0OjF9fSksbi5hbGxMYW5kVGV4dHVyZS5yZWZlcmVuY2VDb3VudD0xKSxpPTA9PT10WzBdP24uYWxsTGFuZFRleHR1cmU6bi5hbGxXYXRlclRleHR1cmUpLCsraS5yZWZlcmVuY2VDb3VudCxpfWZ1bmN0aW9uIFAoZSl7Zm9yKHZhciB0PWUuZGF0YSxpPWUucGFyZW50O28oaSkmJiFvKGkuZGF0YS50ZXJyYWluRGF0YSl8fGkuZGF0YS50ZXJyYWluRGF0YS53YXNDcmVhdGVkQnlVcHNhbXBsaW5nKCk7KWk9aS5wYXJlbnQ7aWYobyhpKSYmbyhpLmRhdGEud2F0ZXJNYXNrVGV4dHVyZSkpe3Qud2F0ZXJNYXNrVGV4dHVyZT1pLmRhdGEud2F0ZXJNYXNrVGV4dHVyZSwrK3Qud2F0ZXJNYXNrVGV4dHVyZS5yZWZlcmVuY2VDb3VudDt2YXIgbj1pLnJlY3RhbmdsZSxyPWUucmVjdGFuZ2xlLGE9ci5lYXN0LXIud2VzdCxzPXIubm9ydGgtci5zb3V0aCxsPWEvKG4uZWFzdC1uLndlc3QpLHU9cy8obi5ub3J0aC1uLnNvdXRoKTsKdC53YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLng9bCooci53ZXN0LW4ud2VzdCkvYSx0LndhdGVyTWFza1RyYW5zbGF0aW9uQW5kU2NhbGUueT11KihyLnNvdXRoLW4uc291dGgpL3MsdC53YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLno9bCx0LndhdGVyTWFza1RyYW5zbGF0aW9uQW5kU2NhbGUudz11fX12YXIgTT1mdW5jdGlvbigpe3RoaXMuaW1hZ2VyeT1bXSx0aGlzLnNvdXRod2VzdENvcm5lckNhcnRlc2lhbj1uZXcgdCx0aGlzLm5vcnRoZWFzdENvcm5lckNhcnRlc2lhbj1uZXcgdCx0aGlzLndlc3ROb3JtYWw9bmV3IHQsdGhpcy5zb3V0aE5vcm1hbD1uZXcgdCx0aGlzLmVhc3ROb3JtYWw9bmV3IHQsdGhpcy5ub3J0aE5vcm1hbD1uZXcgdCx0aGlzLndhdGVyTWFza1RleHR1cmU9dm9pZCAwLHRoaXMud2F0ZXJNYXNrVHJhbnNsYXRpb25BbmRTY2FsZT1uZXcgaSgwLDAsMSwxKSx0aGlzLnRlcnJhaW5EYXRhPXZvaWQgMCx0aGlzLmNlbnRlcj1uZXcgdCx0aGlzLnZlcnRleEFycmF5PXZvaWQgMCx0aGlzLm1pbmltdW1IZWlnaHQ9MCx0aGlzLm1heGltdW1IZWlnaHQ9MCx0aGlzLmJvdW5kaW5nU3BoZXJlM0Q9bmV3IGUsdGhpcy5ib3VuZGluZ1NwaGVyZTJEPW5ldyBlLHRoaXMub2NjbHVkZWVQb2ludEluU2NhbGVkU3BhY2U9bmV3IHQsdGhpcy5sb2FkZWRUZXJyYWluPXZvaWQgMCx0aGlzLnVwc2FtcGxlZFRlcnJhaW49dm9pZCAwLHRoaXMucGlja0JvdW5kaW5nU3BoZXJlPW5ldyBlLHRoaXMucGlja1RlcnJhaW49dm9pZCAwfTthKE0ucHJvdG90eXBlLHtlbGlnaWJsZUZvclVubG9hZGluZzp7Z2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMubG9hZGVkVGVycmFpbix0PW8oZSkmJihlLnN0YXRlPT09Xy5SRUNFSVZJTkd8fGUuc3RhdGU9PT1fLlRSQU5TRk9STUlORyksaT10aGlzLnVwc2FtcGxlZFRlcnJhaW4sbj1vKGkpJiYoaS5zdGF0ZT09PV8uUkVDRUlWSU5HfHxpLnN0YXRlPT09Xy5UUkFOU0ZPUk1JTkcpLHI9IXQmJiFuLGE9dGhpcy5pbWFnZXJ5LHM9MCxsPWEubGVuZ3RoO3ImJmw+czsrK3Mpe3ZhciB1PWFbc107cj0hbyh1LmxvYWRpbmdJbWFnZXJ5KXx8dS5sb2FkaW5nSW1hZ2VyeS5zdGF0ZSE9PXAuVFJBTlNJVElPTklOR31yZXR1cm4gcn19fSk7dmFyIEk9bmV3IHQsRD1uZXcgdCxPPW5ldyB0LFI9bmV3IHQ7TS5wcm90b3R5cGUucGljaz1mdW5jdGlvbihlLGksbixyKXt2YXIgYT10aGlzLnBpY2tUZXJyYWluO2lmKCFvKGEpKXJldHVybiB2b2lkIDA7dmFyIHM9YS5tZXNoO2lmKCFvKHMpKXJldHVybiB2b2lkIDA7Zm9yKHZhciB1PXMudmVydGljZXMsYz1zLmluZGljZXMsZD1jLmxlbmd0aCxoPTA7ZD5oO2grPTMpe3ZhciBtPWNbaF0sZj1jW2grMV0scD1jW2grMl0sdj1DKHRoaXMsaSx1LG0sSSksZz1DKHRoaXMsaSx1LGYsRCksXz1DKHRoaXMsaSx1LHAsTykseT1sLnJheVRyaWFuZ2xlKGUsdixnLF8sbixSKTtpZihvKHkpKXJldHVybiB0LmNsb25lKHkscil9cmV0dXJuIHZvaWQgMH0sTS5wcm90b3R5cGUuZnJlZVJlc291cmNlcz1mdW5jdGlvbigpe28odGhpcy53YXRlck1hc2tUZXh0dXJlKSYmKC0tdGhpcy53YXRlck1hc2tUZXh0dXJlLnJlZmVyZW5jZUNvdW50LDA9PT10aGlzLndhdGVyTWFza1RleHR1cmUucmVmZXJlbmNlQ291bnQmJnRoaXMud2F0ZXJNYXNrVGV4dHVyZS5kZXN0cm95KCksdGhpcy53YXRlck1hc2tUZXh0dXJlPXZvaWQgMCksdGhpcy50ZXJyYWluRGF0YT12b2lkIDAsbyh0aGlzLmxvYWRlZFRlcnJhaW4pJiYodGhpcy5sb2FkZWRUZXJyYWluLmZyZWVSZXNvdXJjZXMoKSx0aGlzLmxvYWRlZFRlcnJhaW49dm9pZCAwKSxvKHRoaXMudXBzYW1wbGVkVGVycmFpbikmJih0aGlzLnVwc2FtcGxlZFRlcnJhaW4uZnJlZVJlc291cmNlcygpLHRoaXMudXBzYW1wbGVkVGVycmFpbj12b2lkIDApLG8odGhpcy5waWNrVGVycmFpbikmJih0aGlzLnBpY2tUZXJyYWluLmZyZWVSZXNvdXJjZXMoKSx0aGlzLnBpY2tUZXJyYWluPXZvaWQgMCk7dmFyIGUsdCxpPXRoaXMuaW1hZ2VyeTtmb3IoZT0wLHQ9aS5sZW5ndGg7dD5lOysrZSlpW2VdLmZyZWVSZXNvdXJjZXMoKTt0aGlzLmltYWdlcnkubGVuZ3RoPTAsdGhpcy5mcmVlVmVydGV4QXJyYXkoKX0sTS5wcm90b3R5cGUuZnJlZVZlcnRleEFycmF5PWZ1bmN0aW9uKCl7dmFyIGU7byh0aGlzLnZlcnRleEFycmF5KSYmKGU9dGhpcy52ZXJ0ZXhBcnJheS5pbmRleEJ1ZmZlcix0aGlzLnZlcnRleEFycmF5LmRlc3Ryb3koKSx0aGlzLnZlcnRleEFycmF5PXZvaWQgMCwhZS5pc0Rlc3Ryb3llZCgpJiZvKGUucmVmZXJlbmNlQ291bnQpJiYoLS1lLnJlZmVyZW5jZUNvdW50LDA9PT1lLnJlZmVyZW5jZUNvdW50JiZlLmRlc3Ryb3koKSkpLG8odGhpcy53aXJlZnJhbWVWZXJ0ZXhBcnJheSkmJihlPXRoaXMud2lyZWZyYW1lVmVydGV4QXJyYXkuaW5kZXhCdWZmZXIsdGhpcy53aXJlZnJhbWVWZXJ0ZXhBcnJheS5kZXN0cm95KCksdGhpcy53aXJlZnJhbWVWZXJ0ZXhBcnJheT12b2lkIDAsIWUuaXNEZXN0cm95ZWQoKSYmbyhlLnJlZmVyZW5jZUNvdW50KSYmKC0tZS5yZWZlcmVuY2VDb3VudCwwPT09ZS5yZWZlcmVuY2VDb3VudCYmZS5kZXN0cm95KCkpKX0sTS5wcm9jZXNzU3RhdGVNYWNoaW5lPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPWUuZGF0YTtvKHIpfHwocj1lLmRhdGE9bmV3IE0pLGUuc3RhdGU9PT12LlNUQVJUJiYodyhlLGksbiksZS5zdGF0ZT12LkxPQURJTkcpLGUuc3RhdGU9PT12LkxPQURJTkcmJkUoZSx0LGkpO2Zvcih2YXIgYT1vKHIudmVydGV4QXJyYXkpLHM9IW8oci5sb2FkZWRUZXJyYWluKSYmIW8oci51cHNhbXBsZWRUZXJyYWluKSxsPW8oci50ZXJyYWluRGF0YSkmJnIudGVycmFpbkRhdGEud2FzQ3JlYXRlZEJ5VXBzYW1wbGluZygpLHU9ci5pbWFnZXJ5LGM9MCxkPXUubGVuZ3RoO2Q+YzsrK2Mpe3ZhciBoPXVbY107aWYobyhoLmxvYWRpbmdJbWFnZXJ5KSl7aWYoaC5sb2FkaW5nSW1hZ2VyeS5zdGF0ZT09PXAuUExBQ0VIT0xERVIpe3ZhciBtPWgubG9hZGluZ0ltYWdlcnkuaW1hZ2VyeUxheWVyO2lmKG0uaW1hZ2VyeVByb3ZpZGVyLnJlYWR5KXtoLmZyZWVSZXNvdXJjZXMoKSx1LnNwbGljZShjLDEpLG0uX2NyZWF0ZVRpbGVJbWFnZXJ5U2tlbGV0b25zKGUsaSxjKSwtLWMsZD11Lmxlbmd0aDtjb250aW51ZX1sPSExfXZhciBmPWgucHJvY2Vzc1N0YXRlTWFjaGluZShlLHQpO3M9cyYmZixhPWEmJihmfHxvKGgucmVhZHlJbWFnZXJ5KSksbD1sJiZvKGgubG9hZGluZ0ltYWdlcnkpJiYoaC5sb2FkaW5nSW1hZ2VyeS5zdGF0ZT09PXAuRkFJTEVEfHxoLmxvYWRpbmdJbWFnZXJ5LnN0YXRlPT09cC5JTlZBTElEKX1lbHNlIGw9ITF9ZS51cHNhbXBsZWRGcm9tUGFyZW50PWwsYz09PWQmJihhJiYoZS5yZW5kZXJhYmxlPSEwKSxzJiYoZS5zdGF0ZT12LkRPTkUpKX07dmFyIEw9bmV3IHQsTj1uZXcgdCx6PW5ldyB0LEI9bmV3IHQsRj1uZXcgbjtyZXR1cm4gTX0pLGRlZmluZSgiU2hhZGVycy9SZXByb2plY3RXZWJNZXJjYXRvckZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4idW5pZm9ybSBzYW1wbGVyMkQgdV90ZXh0dXJlO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbnZvaWQgbWFpbigpXG57XG4gICAgZ2xfRnJhZ0NvbG9yID0gdGV4dHVyZTJEKHVfdGV4dHVyZSwgdl90ZXh0dXJlQ29vcmRpbmF0ZXMpO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9SZXByb2plY3RXZWJNZXJjYXRvclZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzQgcG9zaXRpb247XG5cbnVuaWZvcm0gdmVjMiB1X3RleHR1cmVEaW1lbnNpb25zO1xuXG51bmlmb3JtIGZsb2F0IHVfbm9ydGhMYXRpdHVkZTtcbnVuaWZvcm0gZmxvYXQgdV9zb3V0aExhdGl0dWRlO1xudW5pZm9ybSBmbG9hdCB1X3NvdXRoTWVyY2F0b3JZSGlnaDtcbnVuaWZvcm0gZmxvYXQgdV9zb3V0aE1lcmNhdG9yWUxvdztcbnVuaWZvcm0gZmxvYXQgdV9vbmVPdmVyTWVyY2F0b3JIZWlnaHQ7XG5cbnZhcnlpbmcgdmVjMiB2X3RleHR1cmVDb29yZGluYXRlcztcblxudm9pZCBtYWluKClcbntcbiAgICBmbG9hdCBjdXJyZW50TGF0aXR1ZGUgPSBtaXgodV9zb3V0aExhdGl0dWRlLCB1X25vcnRoTGF0aXR1ZGUsIHBvc2l0aW9uLnkpO1xuICAgIGZsb2F0IGZyYWN0aW9uID0gY3ptX2xhdGl0dWRlVG9XZWJNZXJjYXRvckZyYWN0aW9uKGN1cnJlbnRMYXRpdHVkZSwgdV9zb3V0aE1lcmNhdG9yWUxvdywgdV9zb3V0aE1lcmNhdG9yWUhpZ2gsIHVfb25lT3Zlck1lcmNhdG9ySGVpZ2h0KTtcbiAgICB2X3RleHR1cmVDb29yZGluYXRlcyA9IHZlYzIocG9zaXRpb24ueCwgZnJhY3Rpb24pO1xuICAgIGdsX1Bvc2l0aW9uID0gY3ptX3ZpZXdwb3J0T3J0aG9ncmFwaGljICogKHBvc2l0aW9uICogdmVjNCh1X3RleHR1cmVEaW1lbnNpb25zLCAxLjAsIDEuMCkpO1xufVxuIn0pLGRlZmluZSgiU2NlbmUvSW1hZ2VyeSIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuL0ltYWdlcnlTdGF0ZSJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24odCxuLHIsbyxhKXtpZih0aGlzLmltYWdlcnlMYXllcj10LHRoaXMueD1uLHRoaXMueT1yLHRoaXMubGV2ZWw9bywwIT09byl7dmFyIHM9MHxuLzIsbD0wfHIvMix1PW8tMTt0aGlzLnBhcmVudD10LmdldEltYWdlcnlGcm9tQ2FjaGUocyxsLHUpfWlmKHRoaXMuc3RhdGU9aS5VTkxPQURFRCx0aGlzLmltYWdlVXJsPXZvaWQgMCx0aGlzLmltYWdlPXZvaWQgMCx0aGlzLnRleHR1cmU9dm9pZCAwLHRoaXMuY3JlZGl0cz12b2lkIDAsdGhpcy5yZWZlcmVuY2VDb3VudD0wLCFlKGEpJiZ0LmltYWdlcnlQcm92aWRlci5yZWFkeSl7dmFyIGM9dC5pbWFnZXJ5UHJvdmlkZXIudGlsaW5nU2NoZW1lO2E9Yy50aWxlWFlUb1JlY3RhbmdsZShuLHIsbyl9dGhpcy5yZWN0YW5nbGU9YX07cmV0dXJuIG4uY3JlYXRlUGxhY2Vob2xkZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IG4oZSwwLDAsMCk7cmV0dXJuIHQuYWRkUmVmZXJlbmNlKCksdC5zdGF0ZT1pLlBMQUNFSE9MREVSLHR9LG4ucHJvdG90eXBlLmFkZFJlZmVyZW5jZT1mdW5jdGlvbigpeysrdGhpcy5yZWZlcmVuY2VDb3VudH0sbi5wcm90b3R5cGUucmVsZWFzZVJlZmVyZW5jZT1mdW5jdGlvbigpe3JldHVybi0tdGhpcy5yZWZlcmVuY2VDb3VudCwwPT09dGhpcy5yZWZlcmVuY2VDb3VudD8odGhpcy5pbWFnZXJ5TGF5ZXIucmVtb3ZlSW1hZ2VyeUZyb21DYWNoZSh0aGlzKSxlKHRoaXMucGFyZW50KSYmdGhpcy5wYXJlbnQucmVsZWFzZVJlZmVyZW5jZSgpLGUodGhpcy5pbWFnZSkmJmUodGhpcy5pbWFnZS5kZXN0cm95KSYmdGhpcy5pbWFnZS5kZXN0cm95KCksZSh0aGlzLnRleHR1cmUpJiZ0aGlzLnRleHR1cmUuZGVzdHJveSgpLHQodGhpcyksMCk6dGhpcy5yZWZlcmVuY2VDb3VudH0sbn0pLGRlZmluZSgiU2NlbmUvVGlsZUltYWdlcnkiLFsiLi4vQ29yZS9kZWZpbmVkIiwiLi9JbWFnZXJ5U3RhdGUiXSxmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbihlLHQpe3RoaXMucmVhZHlJbWFnZXJ5PXZvaWQgMCx0aGlzLmxvYWRpbmdJbWFnZXJ5PWUsdGhpcy50ZXh0dXJlQ29vcmRpbmF0ZVJlY3RhbmdsZT10LHRoaXMudGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGU9dm9pZCAwfTtyZXR1cm4gaS5wcm90b3R5cGUuZnJlZVJlc291cmNlcz1mdW5jdGlvbigpe2UodGhpcy5yZWFkeUltYWdlcnkpJiZ0aGlzLnJlYWR5SW1hZ2VyeS5yZWxlYXNlUmVmZXJlbmNlKCksZSh0aGlzLmxvYWRpbmdJbWFnZXJ5KSYmdGhpcy5sb2FkaW5nSW1hZ2VyeS5yZWxlYXNlUmVmZXJlbmNlKCl9LGkucHJvdG90eXBlLnByb2Nlc3NTdGF0ZU1hY2hpbmU9ZnVuY3Rpb24oaSxuKXt2YXIgcj10aGlzLmxvYWRpbmdJbWFnZXJ5LG89ci5pbWFnZXJ5TGF5ZXI7aWYoci5zdGF0ZT09PXQuVU5MT0FERUQmJihyLnN0YXRlPXQuVFJBTlNJVElPTklORyxvLl9yZXF1ZXN0SW1hZ2VyeShyKSksci5zdGF0ZT09PXQuUkVDRUlWRUQmJihyLnN0YXRlPXQuVFJBTlNJVElPTklORyxvLl9jcmVhdGVUZXh0dXJlKG4scikpLHIuc3RhdGU9PT10LlRFWFRVUkVfTE9BREVEJiYoci5zdGF0ZT10LlRSQU5TSVRJT05JTkcsby5fcmVwcm9qZWN0VGV4dHVyZShuLHIpKSxyLnN0YXRlPT09dC5SRUFEWSlyZXR1cm4gZSh0aGlzLnJlYWR5SW1hZ2VyeSkmJnRoaXMucmVhZHlJbWFnZXJ5LnJlbGVhc2VSZWZlcmVuY2UoKSx0aGlzLnJlYWR5SW1hZ2VyeT10aGlzLmxvYWRpbmdJbWFnZXJ5LHRoaXMubG9hZGluZ0ltYWdlcnk9dm9pZCAwLHRoaXMudGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGU9by5fY2FsY3VsYXRlVGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGUoaSx0aGlzKSwhMDtmb3IodmFyIGE9ci5wYXJlbnQscz0hMTtlKGEpJiZhLnN0YXRlIT09dC5SRUFEWTspcz1zfHxhLnN0YXRlIT09dC5GQUlMRUQmJmEuc3RhdGUhPT10LklOVkFMSUQsYT1hLnBhcmVudDtyZXR1cm4gdGhpcy5yZWFkeUltYWdlcnkhPT1hJiYoZSh0aGlzLnJlYWR5SW1hZ2VyeSkmJnRoaXMucmVhZHlJbWFnZXJ5LnJlbGVhc2VSZWZlcmVuY2UoKSx0aGlzLnJlYWR5SW1hZ2VyeT1hLGUoYSkmJihhLmFkZFJlZmVyZW5jZSgpLHRoaXMudGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGU9by5fY2FsY3VsYXRlVGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGUoaSx0aGlzKSkpLHN8fHIuc3RhdGUhPT10LkZBSUxFRCYmci5zdGF0ZSE9PXQuSU5WQUxJRD8hMTohMH0saX0pLGRlZmluZSgiU2NlbmUvSW1hZ2VyeUxheWVyIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9Db21wb25lbnREYXRhdHlwZSIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9GZWF0dXJlRGV0ZWN0aW9uIiwiLi4vQ29yZS9HZW9ncmFwaGljVGlsaW5nU2NoZW1lIiwiLi4vQ29yZS9HZW9tZXRyeSIsIi4uL0NvcmUvR2VvbWV0cnlBdHRyaWJ1dGUiLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL1BpeGVsRm9ybWF0IiwiLi4vQ29yZS9QcmltaXRpdmVUeXBlIiwiLi4vQ29yZS9SZWN0YW5nbGUiLCIuLi9Db3JlL1RlcnJhaW5Qcm92aWRlciIsIi4uL0NvcmUvVGlsZVByb3ZpZGVyRXJyb3IiLCIuLi9SZW5kZXJlci9CdWZmZXJVc2FnZSIsIi4uL1JlbmRlcmVyL0NsZWFyQ29tbWFuZCIsIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kIiwiLi4vUmVuZGVyZXIvTWlwbWFwSGludCIsIi4uL1JlbmRlcmVyL1RleHR1cmVNYWduaWZpY2F0aW9uRmlsdGVyIiwiLi4vUmVuZGVyZXIvVGV4dHVyZU1pbmlmaWNhdGlvbkZpbHRlciIsIi4uL1JlbmRlcmVyL1RleHR1cmVXcmFwIiwiLi4vU2hhZGVycy9SZXByb2plY3RXZWJNZXJjYXRvckZTIiwiLi4vU2hhZGVycy9SZXByb2plY3RXZWJNZXJjYXRvclZTIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9JbWFnZXJ5IiwiLi9JbWFnZXJ5U3RhdGUiLCIuL1RpbGVJbWFnZXJ5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0sSSxEKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gTyhlLHQsaSl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KFtlLHQsaV0pfWZ1bmN0aW9uIFIodCxpLHMsbCl7dmFyIHU9aS5jYWNoZS5pbWFnZXJ5TGF5ZXJfcmVwcm9qZWN0O2lmKCFhKHUpKXt1PWkuY2FjaGUuaW1hZ2VyeUxheWVyX3JlcHJvamVjdD17ZnJhbWVidWZmZXI6dm9pZCAwLHZlcnRleEFycmF5OnZvaWQgMCxzaGFkZXJQcm9ncmFtOnZvaWQgMCxyZW5kZXJTdGF0ZTp2b2lkIDAsc2FtcGxlcjp2b2lkIDAsZGVzdHJveTpmdW5jdGlvbigpe2EodGhpcy5mcmFtZWJ1ZmZlcikmJnRoaXMuZnJhbWVidWZmZXIuZGVzdHJveSgpLGEodGhpcy52ZXJ0ZXhBcnJheSkmJnRoaXMudmVydGV4QXJyYXkuZGVzdHJveSgpLGEodGhpcy5zaGFkZXJQcm9ncmFtKSYmdGhpcy5zaGFkZXJQcm9ncmFtLmRlc3Ryb3koKX19O2Zvcih2YXIgYz1uZXcgQXJyYXkoMTMxMDcyKSxtPTAsZj0wOzI1Nj5mOysrZilmb3IodmFyIHY9Zi8yNTUsXz0wOzI1Nj5fOysrXyl7dmFyIFA9Xy8yNTU7Y1ttKytdPVAsY1ttKytdPXZ9dmFyIE09bmV3IGQoe2F0dHJpYnV0ZXM6e3Bvc2l0aW9uOm5ldyBoKHtjb21wb25lbnREYXRhdHlwZTpyLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Mix2YWx1ZXM6Y30pfSxpbmRpY2VzOmcuZ2V0UmVndWxhckdyaWRJbmRpY2VzKDI1NiwyNTYpLHByaW1pdGl2ZVR5cGU6cC5UUklBTkdMRVN9KSxJPXtwb3NpdGlvbjowfTt1LnZlcnRleEFycmF5PWkuY3JlYXRlVmVydGV4QXJyYXlGcm9tR2VvbWV0cnkoe2dlb21ldHJ5Ok0sYXR0cmlidXRlTG9jYXRpb25zOkksYnVmZmVyVXNhZ2U6eS5TVEFUSUNfRFJBV30pLHUuc2hhZGVyUHJvZ3JhbT1pLmNyZWF0ZVNoYWRlclByb2dyYW0oQSx4LEkpO3ZhciBEPWkubWF4aW11bVRleHR1cmVGaWx0ZXJBbmlzb3Ryb3B5O3Uuc2FtcGxlcj1pLmNyZWF0ZVNhbXBsZXIoe3dyYXBTOlQuQ0xBTVBfVE9fRURHRSx3cmFwVDpULkNMQU1QX1RPX0VER0UsbWluaWZpY2F0aW9uRmlsdGVyOlMuTElORUFSLG1hZ25pZmljYXRpb25GaWx0ZXI6Yi5MSU5FQVIsbWF4aW11bUFuaXNvdHJvcHk6TWF0aC5taW4oRCxvKHQuX21heGltdW1Bbmlzb3Ryb3B5LEQpKX0pfXMuc2FtcGxlcj11LnNhbXBsZXI7dmFyIE89cy53aWR0aCxSPXMuaGVpZ2h0O3oudGV4dHVyZURpbWVuc2lvbnMueD1PLHoudGV4dHVyZURpbWVuc2lvbnMueT1SLHoudGV4dHVyZT1zLHoubm9ydGhMYXRpdHVkZT1sLm5vcnRoLHouc291dGhMYXRpdHVkZT1sLnNvdXRoO3ZhciBMPU1hdGguc2luKGwuc291dGgpLE49LjUqTWF0aC5sb2coKDErTCkvKDEtTCkpO0JbMF09Tix6LnNvdXRoTWVyY2F0b3JZSGlnaD1CWzBdLHouc291dGhNZXJjYXRvcllMb3c9Ti1CWzBdLEw9TWF0aC5zaW4obC5ub3J0aCk7dmFyIEY9LjUqTWF0aC5sb2coKDErTCkvKDEtTCkpO3oub25lT3Zlck1lcmNhdG9ySGVpZ2h0PTEvKEYtTik7dmFyIFY9aS5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOk8saGVpZ2h0OlIscGl4ZWxGb3JtYXQ6cy5waXhlbEZvcm1hdCxwaXhlbERhdGF0eXBlOnMucGl4ZWxEYXRhdHlwZSxwcmVNdWx0aXBseUFscGhhOnMucHJlTXVsdGlwbHlBbHBoYX0pO1YuZ2VuZXJhdGVNaXBtYXAoRS5OSUNFU1QpLGEodS5mcmFtZWJ1ZmZlcikmJnUuZnJhbWVidWZmZXIuZGVzdHJveSgpLHUuZnJhbWVidWZmZXI9aS5jcmVhdGVGcmFtZWJ1ZmZlcih7Y29sb3JUZXh0dXJlczpbVl19KSx1LmZyYW1lYnVmZmVyLmRlc3Ryb3lBdHRhY2htZW50cz0hMTt2YXIgaz1uZXcgQyh7Y29sb3I6bi5CTEFDSyxmcmFtZWJ1ZmZlcjp1LmZyYW1lYnVmZmVyfSk7ay5leGVjdXRlKGkpLGEodS5yZW5kZXJTdGF0ZSkmJnUucmVuZGVyU3RhdGUudmlld3BvcnQud2lkdGg9PT1PJiZ1LnJlbmRlclN0YXRlLnZpZXdwb3J0LmhlaWdodD09PVJ8fCh1LnJlbmRlclN0YXRlPWkuY3JlYXRlUmVuZGVyU3RhdGUoe3ZpZXdwb3J0Om5ldyBlKDAsMCxPLFIpfSkpO3ZhciBVPW5ldyB3KHtmcmFtZWJ1ZmZlcjp1LmZyYW1lYnVmZmVyLHNoYWRlclByb2dyYW06dS5zaGFkZXJQcm9ncmFtLHJlbmRlclN0YXRlOnUucmVuZGVyU3RhdGUscHJpbWl0aXZlVHlwZTpwLlRSSUFOR0xFUyx2ZXJ0ZXhBcnJheTp1LnZlcnRleEFycmF5LHVuaWZvcm1NYXA6en0pO3JldHVybiBVLmV4ZWN1dGUoaSksVn1mdW5jdGlvbiBMKGUsdCxpKXt2YXIgbj1lLl9pbWFnZXJ5UHJvdmlkZXIscj1uLnRpbGluZ1NjaGVtZSxvPXIuZWxsaXBzb2lkLGE9ZS5faW1hZ2VyeVByb3ZpZGVyLnRpbGluZ1NjaGVtZSBpbnN0YW5jZW9mIGM/MTpNYXRoLmNvcyhpKSxzPXIucmVjdGFuZ2xlLGw9by5tYXhpbXVtUmFkaXVzKihzLmVhc3Qtcy53ZXN0KSphLyhuLnRpbGVXaWR0aCpyLmdldE51bWJlck9mWFRpbGVzQXRMZXZlbCgwKSksdT1sL3QsZD1NYXRoLmxvZyh1KS9NYXRoLmxvZygyKSxoPU1hdGgucm91bmQoZCk7cmV0dXJuIDB8aH12YXIgTj1mdW5jdGlvbiBGKGUsdCl7dGhpcy5faW1hZ2VyeVByb3ZpZGVyPWUsdD1vKHQse30pLHRoaXMuYWxwaGE9byh0LmFscGhhLG8oZS5kZWZhdWx0QWxwaGEsMSkpLHRoaXMuYnJpZ2h0bmVzcz1vKHQuYnJpZ2h0bmVzcyxvKGUuZGVmYXVsdEJyaWdodG5lc3MsRi5ERUZBVUxUX0JSSUdIVE5FU1MpKSx0aGlzLmNvbnRyYXN0PW8odC5jb250cmFzdCxvKGUuZGVmYXVsdENvbnRyYXN0LEYuREVGQVVMVF9DT05UUkFTVCkpLHRoaXMuaHVlPW8odC5odWUsbyhlLmRlZmF1bHRIdWUsRi5ERUZBVUxUX0hVRSkpLHRoaXMuc2F0dXJhdGlvbj1vKHQuc2F0dXJhdGlvbixvKGUuZGVmYXVsdFNhdHVyYXRpb24sRi5ERUZBVUxUX1NBVFVSQVRJT04pKSx0aGlzLmdhbW1hPW8odC5nYW1tYSxvKGUuZGVmYXVsdEdhbW1hLEYuREVGQVVMVF9HQU1NQSkpLHRoaXMuc2hvdz1vKHQuc2hvdywhMCksdGhpcy5fbWluaW11bVRlcnJhaW5MZXZlbD10Lm1pbmltdW1UZXJyYWluTGV2ZWwsdGhpcy5fbWF4aW11bVRlcnJhaW5MZXZlbD10Lm1heGltdW1UZXJyYWluTGV2ZWwsdGhpcy5fcmVjdGFuZ2xlPW8odC5yZWN0YW5nbGUsdi5NQVhfVkFMVUUpLHRoaXMuX21heGltdW1Bbmlzb3Ryb3B5PXQubWF4aW11bUFuaXNvdHJvcHksdGhpcy5faW1hZ2VyeUNhY2hlPXt9LHRoaXMuX3NrZWxldG9uUGxhY2Vob2xkZXI9bmV3IEQoTS5jcmVhdGVQbGFjZWhvbGRlcih0aGlzKSksdGhpcy5fc2hvdz0hMCx0aGlzLl9sYXllckluZGV4PS0xLHRoaXMuX2lzQmFzZUxheWVyPSExLHRoaXMuX3JlcXVlc3RJbWFnZUVycm9yPXZvaWQgMH07cyhOLnByb3RvdHlwZSx7aW1hZ2VyeVByb3ZpZGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW1hZ2VyeVByb3ZpZGVyfX0scmVjdGFuZ2xlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjdGFuZ2xlfX19KSxOLkRFRkFVTFRfQlJJR0hUTkVTUz0xLE4uREVGQVVMVF9DT05UUkFTVD0xLE4uREVGQVVMVF9IVUU9MCxOLkRFRkFVTFRfU0FUVVJBVElPTj0xLE4uREVGQVVMVF9HQU1NQT0xLE4ucHJvdG90eXBlLmlzQmFzZUxheWVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzQmFzZUxheWVyfSxOLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxOLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGwodGhpcyl9LE4ucHJvdG90eXBlLl9jcmVhdGVUaWxlSW1hZ2VyeVNrZWxldG9ucz1mdW5jdGlvbihlLHQsbil7dmFyIHI9ZS5kYXRhO2lmKGEodGhpcy5fbWluaW11bVRlcnJhaW5MZXZlbCkmJmUubGV2ZWw8dGhpcy5fbWluaW11bVRlcnJhaW5MZXZlbClyZXR1cm4hMTtpZihhKHRoaXMuX21heGltdW1UZXJyYWluTGV2ZWwpJiZlLmxldmVsPnRoaXMuX21heGltdW1UZXJyYWluTGV2ZWwpcmV0dXJuITE7dmFyIG89dGhpcy5faW1hZ2VyeVByb3ZpZGVyO2lmKGEobil8fChuPXIuaW1hZ2VyeS5sZW5ndGgpLCFvLnJlYWR5KXJldHVybiB0aGlzLl9za2VsZXRvblBsYWNlaG9sZGVyLmxvYWRpbmdJbWFnZXJ5LmFkZFJlZmVyZW5jZSgpLHIuaW1hZ2VyeS5zcGxpY2UobiwwLHRoaXMuX3NrZWxldG9uUGxhY2Vob2xkZXIpLCEwO3ZhciBzPXYuaW50ZXJzZWN0V2l0aChlLnJlY3RhbmdsZSxvLnJlY3RhbmdsZSk7aWYocz12LmludGVyc2VjdFdpdGgocyx0aGlzLl9yZWN0YW5nbGUpLHMuZWFzdDw9cy53ZXN0fHxzLm5vcnRoPD1zLnNvdXRoKXtpZighdGhpcy5pc0Jhc2VMYXllcigpKXJldHVybiExO3ZhciBsPXYuaW50ZXJzZWN0V2l0aChvLnJlY3RhbmdsZSx0aGlzLl9yZWN0YW5nbGUpLHU9ZS5yZWN0YW5nbGU7dS5zb3V0aD49bC5ub3J0aD9zLm5vcnRoPXMuc291dGg9bC5ub3J0aDp1Lm5vcnRoPD1sLnNvdXRoJiYocy5ub3J0aD1zLnNvdXRoPWwuc291dGgpLHUud2VzdD49bC5lYXN0P3Mud2VzdD1zLmVhc3Q9bC5lYXN0OnUuZWFzdDw9bC53ZXN0JiYocy53ZXN0PXMuZWFzdD1sLndlc3QpfXZhciBjPTA7cy5zb3V0aD4wP2M9cy5zb3V0aDpzLm5vcnRoPDAmJihjPXMubm9ydGgpO3ZhciBkPTEsaD1kKnQuZ2V0TGV2ZWxNYXhpbXVtR2VvbWV0cmljRXJyb3IoZS5sZXZlbCksbT1MKHRoaXMsaCxjKTttPU1hdGgubWF4KDAsbSk7dmFyIGY9by5tYXhpbXVtTGV2ZWw7aWYobT5mJiYobT1mKSxhKG8ubWluaW11bUxldmVsKSl7dmFyIHA9by5taW5pbXVtTGV2ZWw7cD5tJiYobT1wKX12YXIgZz1vLnRpbGluZ1NjaGVtZSxfPWcucG9zaXRpb25Ub1RpbGVYWSh2Lm5vcnRod2VzdChzKSxtKSx5PWcucG9zaXRpb25Ub1RpbGVYWSh2LnNvdXRoZWFzdChzKSxtKSxDPShlLnJlY3RhbmdsZS5ub3J0aC1lLnJlY3RhbmdsZS5zb3V0aCkvNTEyLHc9KGUucmVjdGFuZ2xlLmVhc3QtZS5yZWN0YW5nbGUud2VzdCkvNTEyLEU9Zy50aWxlWFlUb1JlY3RhbmdsZShfLngsXy55LG0pO01hdGguYWJzKEUuc291dGgtZS5yZWN0YW5nbGUubm9ydGgpPHcmJl8ueTx5LnkmJisrXy55LE1hdGguYWJzKEUuZWFzdC1lLnJlY3RhbmdsZS53ZXN0KTxDJiZfLng8eS54JiYrK18ueDt2YXIgYj1nLnRpbGVYWVRvUmVjdGFuZ2xlKHkueCx5LnksbSk7TWF0aC5hYnMoYi5ub3J0aC1lLnJlY3RhbmdsZS5zb3V0aCk8dyYmeS55Pl8ueSYmLS15LnksTWF0aC5hYnMoYi53ZXN0LWUucmVjdGFuZ2xlLmVhc3QpPEMmJnkueD5fLngmJi0teS54O3ZhciBTLFQseD1lLnJlY3RhbmdsZSxBPWcudGlsZVhZVG9SZWN0YW5nbGUoXy54LF8ueSxtKSxQPTAsTT0xOyF0aGlzLmlzQmFzZUxheWVyKCkmJk1hdGguYWJzKEEud2VzdC1lLnJlY3RhbmdsZS53ZXN0KT49QyYmKFA9TWF0aC5taW4oMSwoQS53ZXN0LXgud2VzdCkvKHguZWFzdC14Lndlc3QpKSksIXRoaXMuaXNCYXNlTGF5ZXIoKSYmTWF0aC5hYnMoQS5ub3J0aC1lLnJlY3RhbmdsZS5ub3J0aCk+PXcmJihNPU1hdGgubWF4KDAsKEEubm9ydGgteC5zb3V0aCkvKHgubm9ydGgteC5zb3V0aCkpKTtmb3IodmFyIEk9TSxPPV8ueDtPPD15Lng7TysrKXtTPVAsQT1nLnRpbGVYWVRvUmVjdGFuZ2xlKE8sXy55LG0pLFA9TWF0aC5taW4oMSwoQS5lYXN0LXgud2VzdCkvKHguZWFzdC14Lndlc3QpKSxPPT09eS54JiYodGhpcy5pc0Jhc2VMYXllcigpfHxNYXRoLmFicyhBLmVhc3QtZS5yZWN0YW5nbGUuZWFzdCk8QykmJihQPTEpLE09STtmb3IodmFyIFI9Xy55O1I8PXkueTtSKyspe1Q9TSxBPWcudGlsZVhZVG9SZWN0YW5nbGUoTyxSLG0pLE09TWF0aC5tYXgoMCwoQS5zb3V0aC14LnNvdXRoKS8oeC5ub3J0aC14LnNvdXRoKSksUj09PXkueSYmKHRoaXMuaXNCYXNlTGF5ZXIoKXx8TWF0aC5hYnMoQS5zb3V0aC1lLnJlY3RhbmdsZS5zb3V0aCk8dykmJihNPTApO3ZhciBOPW5ldyBpKFMsTSxQLFQpLHo9dGhpcy5nZXRJbWFnZXJ5RnJvbUNhY2hlKE8sUixtLEEpO3IuaW1hZ2VyeS5zcGxpY2UobiwwLG5ldyBEKHosTikpLCsrbn19cmV0dXJuITB9LE4ucHJvdG90eXBlLl9jYWxjdWxhdGVUZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZT1mdW5jdGlvbihlLHQpe3ZhciBuPXQucmVhZHlJbWFnZXJ5LnJlY3RhbmdsZSxyPWUucmVjdGFuZ2xlLG89ci5lYXN0LXIud2VzdCxhPXIubm9ydGgtci5zb3V0aCxzPW8vKG4uZWFzdC1uLndlc3QpLGw9YS8obi5ub3J0aC1uLnNvdXRoKTtyZXR1cm4gbmV3IGkocyooci53ZXN0LW4ud2VzdCkvbyxsKihyLnNvdXRoLW4uc291dGgpL2EscyxsKX0sTi5wcm90b3R5cGUuX3JlcXVlc3RJbWFnZXJ5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7cmV0dXJuIGEodCk/KGUuaW1hZ2U9dCxlLnN0YXRlPUkuUkVDRUlWRUQsXy5oYW5kbGVTdWNjZXNzKG8uX3JlcXVlc3RJbWFnZUVycm9yKSx2b2lkIDApOmkoKX1mdW5jdGlvbiBpKCl7ZS5zdGF0ZT1JLkZBSUxFRDt2YXIgdD0iRmFpbGVkIHRvIG9idGFpbiBpbWFnZSB0aWxlIFg6ICIrZS54KyIgWTogIitlLnkrIiBMZXZlbDogIitlLmxldmVsKyIuIjtvLl9yZXF1ZXN0SW1hZ2VFcnJvcj1fLmhhbmRsZUVycm9yKG8uX3JlcXVlc3RJbWFnZUVycm9yLHIsci5lcnJvckV2ZW50LHQsZS54LGUueSxlLmxldmVsLG4pfWZ1bmN0aW9uIG4oKXtlLnN0YXRlPUkuVFJBTlNJVElPTklORzt2YXIgbj1yLnJlcXVlc3RJbWFnZShlLngsZS55LGUubGV2ZWwpO3JldHVybiBhKG4pPyhhKHIuZ2V0VGlsZUNyZWRpdHMpJiYoZS5jcmVkaXRzPXIuZ2V0VGlsZUNyZWRpdHMoZS54LGUueSxlLmxldmVsKSksUChuLHQsaSksdm9pZCAwKTooZS5zdGF0ZT1JLlVOTE9BREVELHZvaWQgMCl9dmFyIHI9dGhpcy5faW1hZ2VyeVByb3ZpZGVyLG89dGhpcztuKCl9LE4ucHJvdG90eXBlLl9jcmVhdGVUZXh0dXJlPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5faW1hZ2VyeVByb3ZpZGVyO2lmKGEoaS50aWxlRGlzY2FyZFBvbGljeSkpe3ZhciBuPWkudGlsZURpc2NhcmRQb2xpY3k7aWYoYShuKSl7aWYoIW4uaXNSZWFkeSgpKXJldHVybiB0LnN0YXRlPUkuUkVDRUlWRUQsdm9pZCAwO2lmKG4uc2hvdWxkRGlzY2FyZEltYWdlKHQuaW1hZ2UpKXJldHVybiB0LnN0YXRlPUkuSU5WQUxJRCx2b2lkIDB9fXZhciByPWUuY3JlYXRlVGV4dHVyZTJEKHtzb3VyY2U6dC5pbWFnZSxwaXhlbEZvcm1hdDppLmhhc0FscGhhQ2hhbm5lbD9mLlJHQkE6Zi5SR0J9KTt0LnRleHR1cmU9cix0LmltYWdlPXZvaWQgMCx0LnN0YXRlPUkuVEVYVFVSRV9MT0FERUR9LE4ucHJvdG90eXBlLl9yZXByb2plY3RUZXh0dXJlPWZ1bmN0aW9uKGUsdCl7dmFyIGk9dC50ZXh0dXJlLG49dC5yZWN0YW5nbGU7aWYoISh0aGlzLl9pbWFnZXJ5UHJvdmlkZXIudGlsaW5nU2NoZW1lIGluc3RhbmNlb2YgYykmJihuLmVhc3Qtbi53ZXN0KS9pLndpZHRoPjFlLTUpe3ZhciByPVIodGhpcyxlLGksdC5yZWN0YW5nbGUpO2kuZGVzdHJveSgpLHQudGV4dHVyZT1pPXJ9aWYobS5pc1Bvd2VyT2ZUd28oaS53aWR0aCkmJm0uaXNQb3dlck9mVHdvKGkuaGVpZ2h0KSl7dmFyIHM9ZS5jYWNoZS5pbWFnZXJ5TGF5ZXJfbWlwbWFwU2FtcGxlcjtpZighYShzKSl7dmFyIGw9ZS5tYXhpbXVtVGV4dHVyZUZpbHRlckFuaXNvdHJvcHk7cz1lLmNhY2hlLmltYWdlcnlMYXllcl9taXBtYXBTYW1wbGVyPWUuY3JlYXRlU2FtcGxlcih7d3JhcFM6VC5DTEFNUF9UT19FREdFLHdyYXBUOlQuQ0xBTVBfVE9fRURHRSxtaW5pZmljYXRpb25GaWx0ZXI6Uy5MSU5FQVJfTUlQTUFQX0xJTkVBUixtYWduaWZpY2F0aW9uRmlsdGVyOmIuTElORUFSLG1heGltdW1Bbmlzb3Ryb3B5Ok1hdGgubWluKGwsbyh0aGlzLl9tYXhpbXVtQW5pc290cm9weSxsKSl9KX1pLmdlbmVyYXRlTWlwbWFwKEUuTklDRVNUKSxpLnNhbXBsZXI9c31lbHNle3ZhciB1PWUuY2FjaGUuaW1hZ2VyeUxheWVyX25vbk1pcG1hcFNhbXBsZXI7YSh1KXx8KHU9ZS5jYWNoZS5pbWFnZXJ5TGF5ZXJfbm9uTWlwbWFwU2FtcGxlcj1lLmNyZWF0ZVNhbXBsZXIoe3dyYXBTOlQuQ0xBTVBfVE9fRURHRSx3cmFwVDpULkNMQU1QX1RPX0VER0UsbWluaWZpY2F0aW9uRmlsdGVyOlMuTElORUFSLG1hZ25pZmljYXRpb25GaWx0ZXI6Yi5MSU5FQVJ9KSksaS5zYW1wbGVyPXV9dC5zdGF0ZT1JLlJFQURZfSxOLnByb3RvdHlwZS5nZXRJbWFnZXJ5RnJvbUNhY2hlPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPU8oZSx0LGkpLG89dGhpcy5faW1hZ2VyeUNhY2hlW3JdO3JldHVybiBhKG8pfHwobz1uZXcgTSh0aGlzLGUsdCxpLG4pLHRoaXMuX2ltYWdlcnlDYWNoZVtyXT1vKSxvLmFkZFJlZmVyZW5jZSgpLG99LE4ucHJvdG90eXBlLnJlbW92ZUltYWdlcnlGcm9tQ2FjaGU9ZnVuY3Rpb24oZSl7dmFyIHQ9TyhlLngsZS55LGUubGV2ZWwpO2RlbGV0ZSB0aGlzLl9pbWFnZXJ5Q2FjaGVbdF19O3ZhciB6PXt1X3RleHR1cmVEaW1lbnNpb25zOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGV4dHVyZURpbWVuc2lvbnN9LHVfdGV4dHVyZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRleHR1cmV9LHVfbm9ydGhMYXRpdHVkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5vcnRoTGF0aXR1ZGV9LHVfc291dGhMYXRpdHVkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNvdXRoTGF0aXR1ZGV9LHVfc291dGhNZXJjYXRvcllMb3c6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb3V0aE1lcmNhdG9yWUxvd30sdV9zb3V0aE1lcmNhdG9yWUhpZ2g6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb3V0aE1lcmNhdG9yWUhpZ2h9LHVfb25lT3Zlck1lcmNhdG9ySGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub25lT3Zlck1lcmNhdG9ySGVpZ2h0fSx0ZXh0dXJlRGltZW5zaW9uczpuZXcgdCx0ZXh0dXJlOnZvaWQgMCxub3J0aExhdGl0dWRlOjAsc291dGhMYXRpdHVkZTowLHNvdXRoTWVyY2F0b3JZSGlnaDowLHNvdXRoTWVyY2F0b3JZTG93OjAsb25lT3Zlck1lcmNhdG9ySGVpZ2h0OjB9LEI9dS5zdXBwb3J0c1R5cGVkQXJyYXlzKCk/bmV3IEZsb2F0MzJBcnJheSgxKTp2b2lkIDA7cmV0dXJuIE59KSxkZWZpbmUoIlNjZW5lL0dsb2JlU3VyZmFjZVRpbGVQcm92aWRlciIsWyIuLi9Db3JlL0JvdW5kaW5nU3BoZXJlIiwiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0ZXNpYW40IiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9GZWF0dXJlRGV0ZWN0aW9uIiwiLi4vQ29yZS9HZW9tZXRyeVBpcGVsaW5lIiwiLi4vQ29yZS9JbmRleERhdGF0eXBlIiwiLi4vQ29yZS9JbnRlcnNlY3QiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1ByaW1pdGl2ZVR5cGUiLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL0NvcmUvVmlzaWJpbGl0eSIsIi4uL0NvcmUvV2ViTWVyY2F0b3JQcm9qZWN0aW9uIiwiLi4vUmVuZGVyZXIvQnVmZmVyVXNhZ2UiLCIuLi9SZW5kZXJlci9EcmF3Q29tbWFuZCIsIi4uL1NjZW5lL0JsZW5kaW5nU3RhdGUiLCIuLi9TY2VuZS9EZXB0aEZ1bmN0aW9uIiwiLi4vU2NlbmUvUGFzcyIsIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vR2xvYmVTdXJmYWNlVGlsZSIsIi4vSW1hZ2VyeUxheWVyIiwiLi9JbWFnZXJ5U3RhdGUiLCIuL1F1YWR0cmVlVGlsZUxvYWRTdGF0ZSIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBJKGUsdCl7dmFyIGk9ZS5sb2FkaW5nSW1hZ2VyeTtvKGkpfHwoaT1lLnJlYWR5SW1hZ2VyeSk7dmFyIG49dC5sb2FkaW5nSW1hZ2VyeTtyZXR1cm4gbyhuKXx8KG49dC5yZWFkeUltYWdlcnkpLGkuaW1hZ2VyeUxheWVyLl9sYXllckluZGV4LW4uaW1hZ2VyeUxheWVyLl9sYXllckluZGV4fWZ1bmN0aW9uIEQoKXt2YXIgZT17dV9pbml0aWFsQ29sb3I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbml0aWFsQ29sb3J9LHVfem9vbWVkT3V0T2NlYW5TcGVjdWxhckludGVuc2l0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnpvb21lZE91dE9jZWFuU3BlY3VsYXJJbnRlbnNpdHl9LHVfb2NlYW5Ob3JtYWxNYXA6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vY2Vhbk5vcm1hbE1hcH0sdV9saWdodGluZ0ZhZGVEaXN0YW5jZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxpZ2h0aW5nRmFkZURpc3RhbmNlfSx1X2NlbnRlcjNEOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2VudGVyM0R9LHVfdGlsZVJlY3RhbmdsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRpbGVSZWN0YW5nbGV9LHVfbW9kaWZpZWRNb2RlbFZpZXc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2RpZmllZE1vZGVsVmlld30sdV9kYXlUZXh0dXJlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRheVRleHR1cmVzfSx1X2RheVRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5VGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGV9LHVfZGF5VGV4dHVyZVRleENvb3Jkc1JlY3RhbmdsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRheVRleHR1cmVUZXhDb29yZHNSZWN0YW5nbGV9LHVfZGF5VGV4dHVyZUFscGhhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5VGV4dHVyZUFscGhhfSx1X2RheVRleHR1cmVCcmlnaHRuZXNzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5VGV4dHVyZUJyaWdodG5lc3N9LHVfZGF5VGV4dHVyZUNvbnRyYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5VGV4dHVyZUNvbnRyYXN0fSx1X2RheVRleHR1cmVIdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXlUZXh0dXJlSHVlfSx1X2RheVRleHR1cmVTYXR1cmF0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5VGV4dHVyZVNhdHVyYXRpb259LHVfZGF5VGV4dHVyZU9uZU92ZXJHYW1tYTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRheVRleHR1cmVPbmVPdmVyR2FtbWF9LHVfZGF5SW50ZW5zaXR5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF5SW50ZW5zaXR5fSx1X3NvdXRoQW5kTm9ydGhMYXRpdHVkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNvdXRoQW5kTm9ydGhMYXRpdHVkZX0sdV9zb3V0aE1lcmNhdG9yWUxvd0FuZEhpZ2hBbmRPbmVPdmVySGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc291dGhNZXJjYXRvcllMb3dBbmRIaWdoQW5kT25lT3ZlckhlaWdodH0sdV93YXRlck1hc2s6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53YXRlck1hc2t9LHVfd2F0ZXJNYXNrVHJhbnNsYXRpb25BbmRTY2FsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLndhdGVyTWFza1RyYW5zbGF0aW9uQW5kU2NhbGV9LGluaXRpYWxDb2xvcjpuZXcgbigwLDAsLjUsMSksem9vbWVkT3V0T2NlYW5TcGVjdWxhckludGVuc2l0eTouNSxvY2Vhbk5vcm1hbE1hcDp2b2lkIDAsbGlnaHRpbmdGYWRlRGlzdGFuY2U6bmV3IHQoNjVlNSw5ZTYpLGNlbnRlcjNEOnZvaWQgMCxtb2RpZmllZE1vZGVsVmlldzpuZXcgZix0aWxlUmVjdGFuZ2xlOm5ldyBuLGRheVRleHR1cmVzOltdLGRheVRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlOltdLGRheVRleHR1cmVUZXhDb29yZHNSZWN0YW5nbGU6W10sZGF5VGV4dHVyZUFscGhhOltdLGRheVRleHR1cmVCcmlnaHRuZXNzOltdLGRheVRleHR1cmVDb250cmFzdDpbXSxkYXlUZXh0dXJlSHVlOltdLGRheVRleHR1cmVTYXR1cmF0aW9uOltdLGRheVRleHR1cmVPbmVPdmVyR2FtbWE6W10sZGF5SW50ZW5zaXR5OjAsc291dGhBbmROb3J0aExhdGl0dWRlOm5ldyB0LHNvdXRoTWVyY2F0b3JZTG93QW5kSGlnaEFuZE9uZU92ZXJIZWlnaHQ6bmV3IGksd2F0ZXJNYXNrOnZvaWQgMCx3YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlOm5ldyBufTtyZXR1cm4gZX1mdW5jdGlvbiBPKGUsdCxpKXt2YXIgbj1pLmRhdGE7aWYoIW8obi53aXJlZnJhbWVWZXJ0ZXhBcnJheSkmJiFvKG4ubWVzaEZvcldpcmVmcmFtZVByb21pc2UpJiYobi5tZXNoRm9yV2lyZWZyYW1lUHJvbWlzZT1uLnRlcnJhaW5EYXRhLmNyZWF0ZU1lc2godC5fdGVycmFpblByb3ZpZGVyLnRpbGluZ1NjaGVtZSxpLngsaS55LGkubGV2ZWwpLG8obi5tZXNoRm9yV2lyZWZyYW1lUHJvbWlzZSkpKXt2YXIgcj1uLnZlcnRleEFycmF5O1Mobi5tZXNoRm9yV2lyZWZyYW1lUHJvbWlzZSxmdW5jdGlvbih0KXtuLnZlcnRleEFycmF5PT09ciYmKG4ud2lyZWZyYW1lVmVydGV4QXJyYXk9UihlLG4udmVydGV4QXJyYXksdCkpLG4ubWVzaEZvcldpcmVmcmFtZVByb21pc2U9dm9pZCAwfSl9fWZ1bmN0aW9uIFIoZSx0LGkpe3ZhciBuPXtpbmRpY2VzOmkuaW5kaWNlcyxwcmltaXRpdmVUeXBlOnAuVFJJQU5HTEVTfTtkLnRvV2lyZWZyYW1lKG4pO3ZhciByPW4uaW5kaWNlcyxvPWUuY3JlYXRlSW5kZXhCdWZmZXIocix5LlNUQVRJQ19EUkFXLGguVU5TSUdORURfU0hPUlQpO3JldHVybiBlLmNyZWF0ZVZlcnRleEFycmF5KHQuX2F0dHJpYnV0ZXMsbyl9ZnVuY3Rpb24gTCh0LHIsYSxzLGwpe3ZhciB1PXIuZGF0YSxjPXMuY2FtZXJhLnZpZXdNYXRyaXgsZD1hLm1heGltdW1UZXh0dXJlSW1hZ2VVbml0cztvKHQub2NlYW5Ob3JtYWxNYXApJiYtLWQsbyh1LndhdGVyTWFza1RleHR1cmUpJiYtLWQ7dmFyIGg9dS5jZW50ZXIsbT1WLGc9MCx5PTAsdz0wLEU9MCxTPTA7aWYocy5tb2RlIT09TS5TQ0VORTNEKXt2YXIgVD1zLm1hcFByb2plY3Rpb24sUD1ULnByb2plY3Qodi5zb3V0aHdlc3Qoci5yZWN0YW5nbGUpLFcpLEk9VC5wcm9qZWN0KHYubm9ydGhlYXN0KHIucmVjdGFuZ2xlKSxHKTtpZihtLng9UC54LG0ueT1QLnksbS56PUkueCxtLnc9SS55LHMubW9kZSE9PU0uTU9SUEhJTkcmJihoPWssaC54PTAsaC55PS41KihtLnorbS54KSxoLno9LjUqKG0udyttLnkpLG0ueC09aC55LG0ueS09aC56LG0uei09aC55LG0udy09aC56KSxUIGluc3RhbmNlb2YgXyl7Zz1yLnJlY3RhbmdsZS5zb3V0aCx5PXIucmVjdGFuZ2xlLm5vcnRoO3ZhciBSPV8uZ2VvZGV0aWNMYXRpdHVkZVRvTWVyY2F0b3JBbmdsZShnKSxMPV8uZ2VvZGV0aWNMYXRpdHVkZVRvTWVyY2F0b3JBbmdsZSh5KTtCWzBdPVIsdz1CWzBdLEU9Ui1CWzBdLFM9MS8oTC1SKX19dmFyIE49VTtOLng9aC54LE4ueT1oLnksTi56PWgueixOLnc9MSxmLm11bHRpcGx5QnlWZWN0b3IoYyxOLE4pLGYuc2V0Q29sdW1uKGMsMyxOLEYpO3ZhciB6PXUuaW1hZ2VyeSxIPTAscT16Lmxlbmd0aCxqPXQuX3JlbmRlclN0YXRlLFk9dC5fYmxlbmRSZW5kZXJTdGF0ZSxYPWosSj10Ll9maXJzdFBhc3NJbml0aWFsQ29sb3I7ZG97dmFyIEssUSwkPTA7dC5fZHJhd0NvbW1hbmRzLmxlbmd0aDw9dC5fdXNlZERyYXdDb21tYW5kcz8oSz1uZXcgQyxLLm93bmVyPXIsSy5jdWxsPSExLEsuYm91bmRpbmdWb2x1bWU9bmV3IGUsUT1EKCksdC5fZHJhd0NvbW1hbmRzLnB1c2goSyksdC5fdW5pZm9ybU1hcHMucHVzaChRKSk6KEs9dC5fZHJhd0NvbW1hbmRzW3QuX3VzZWREcmF3Q29tbWFuZHNdLFE9dC5fdW5pZm9ybU1hcHNbdC5fdXNlZERyYXdDb21tYW5kc10pLEsub3duZXI9ciwrK3QuX3VzZWREcmF3Q29tbWFuZHMsSy5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZT1yPT09dC5fZGVidWcuYm91bmRpbmdTcGhlcmVUaWxlLG4uY2xvbmUoSixRLmluaXRpYWxDb2xvciksUS5vY2Vhbk5vcm1hbE1hcD10Lm9jZWFuTm9ybWFsTWFwLFEubGlnaHRpbmdGYWRlRGlzdGFuY2UueD10LmxpZ2h0aW5nRmFkZU91dERpc3RhbmNlLFEubGlnaHRpbmdGYWRlRGlzdGFuY2UueT10LmxpZ2h0aW5nRmFkZUluRGlzdGFuY2UsUS56b29tZWRPdXRPY2VhblNwZWN1bGFySW50ZW5zaXR5PXQuem9vbWVkT3V0T2NlYW5TcGVjdWxhckludGVuc2l0eSxRLmNlbnRlcjNEPXUuY2VudGVyLG4uY2xvbmUobSxRLnRpbGVSZWN0YW5nbGUpLFEuc291dGhBbmROb3J0aExhdGl0dWRlLng9ZyxRLnNvdXRoQW5kTm9ydGhMYXRpdHVkZS55PXksUS5zb3V0aE1lcmNhdG9yWUxvd0FuZEhpZ2hBbmRPbmVPdmVySGVpZ2h0Lng9RSxRLnNvdXRoTWVyY2F0b3JZTG93QW5kSGlnaEFuZE9uZU92ZXJIZWlnaHQueT13LFEuc291dGhNZXJjYXRvcllMb3dBbmRIaWdoQW5kT25lT3ZlckhlaWdodC56PVMsZi5jbG9uZShGLFEubW9kaWZpZWRNb2RlbFZpZXcpO2Zvcih2YXIgZXQ9ITEsdHQ9ITEsaXQ9ITEsbnQ9ITEscnQ9ITEsb3Q9ITE7ZD4kJiZxPkg7KXt2YXIgYXQ9eltIXSxzdD1hdC5yZWFkeUltYWdlcnk7aWYoKytILG8oc3QpJiZzdC5zdGF0ZT09PUEuUkVBRFkmJjAhPT1zdC5pbWFnZXJ5TGF5ZXIuYWxwaGEpe3ZhciBsdD1zdC5pbWFnZXJ5TGF5ZXI7aWYobyhhdC50ZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZSl8fChhdC50ZXh0dXJlVHJhbnNsYXRpb25BbmRTY2FsZT1sdC5fY2FsY3VsYXRlVGV4dHVyZVRyYW5zbGF0aW9uQW5kU2NhbGUocixhdCkpLFEuZGF5VGV4dHVyZXNbJF09c3QudGV4dHVyZSxRLmRheVRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlWyRdPWF0LnRleHR1cmVUcmFuc2xhdGlvbkFuZFNjYWxlLFEuZGF5VGV4dHVyZVRleENvb3Jkc1JlY3RhbmdsZVskXT1hdC50ZXh0dXJlQ29vcmRpbmF0ZVJlY3RhbmdsZSxRLmRheVRleHR1cmVBbHBoYVskXT1sdC5hbHBoYSxvdD1vdHx8MSE9PVEuZGF5VGV4dHVyZUFscGhhWyRdLFEuZGF5VGV4dHVyZUJyaWdodG5lc3NbJF09bHQuYnJpZ2h0bmVzcyxldD1ldHx8US5kYXlUZXh0dXJlQnJpZ2h0bmVzc1skXSE9PXguREVGQVVMVF9CUklHSFRORVNTLFEuZGF5VGV4dHVyZUNvbnRyYXN0WyRdPWx0LmNvbnRyYXN0LHR0PXR0fHxRLmRheVRleHR1cmVDb250cmFzdFskXSE9PXguREVGQVVMVF9DT05UUkFTVCxRLmRheVRleHR1cmVIdWVbJF09bHQuaHVlLGl0PWl0fHxRLmRheVRleHR1cmVIdWVbJF0hPT14LkRFRkFVTFRfSFVFLFEuZGF5VGV4dHVyZVNhdHVyYXRpb25bJF09bHQuc2F0dXJhdGlvbixudD1udHx8US5kYXlUZXh0dXJlU2F0dXJhdGlvblskXSE9PXguREVGQVVMVF9TQVRVUkFUSU9OLFEuZGF5VGV4dHVyZU9uZU92ZXJHYW1tYVskXT0xL2x0LmdhbW1hLHJ0PXJ0fHxRLmRheVRleHR1cmVPbmVPdmVyR2FtbWFbJF0hPT0xL3guREVGQVVMVF9HQU1NQSxvKHN0LmNyZWRpdHMpKWZvcih2YXIgdXQ9cy5jcmVkaXREaXNwbGF5LGN0PXN0LmNyZWRpdHMsZHQ9MCxodD1jdC5sZW5ndGg7aHQ+ZHQ7KytkdCl1dC5hZGRDcmVkaXQoY3RbZHRdKTsrKyR9fVEuZGF5VGV4dHVyZXMubGVuZ3RoPSQsUS53YXRlck1hc2s9dS53YXRlck1hc2tUZXh0dXJlLG4uY2xvbmUodS53YXRlck1hc2tUcmFuc2xhdGlvbkFuZFNjYWxlLFEud2F0ZXJNYXNrVHJhbnNsYXRpb25BbmRTY2FsZSksSy5zaGFkZXJQcm9ncmFtPXQuX3N1cmZhY2VTaGFkZXJTZXQuZ2V0U2hhZGVyUHJvZ3JhbShhLCQsZXQsdHQsaXQsbnQscnQsb3QpLEsucmVuZGVyU3RhdGU9WCxLLnByaW1pdGl2ZVR5cGU9cC5UUklBTkdMRVMsSy52ZXJ0ZXhBcnJheT11LnZlcnRleEFycmF5LEsudW5pZm9ybU1hcD1RLEsucGFzcz1iLk9QQVFVRSx0Ll9kZWJ1Zy53aXJlZnJhbWUmJihPKGEsdCxyKSxvKHUud2lyZWZyYW1lVmVydGV4QXJyYXkpJiYoSy52ZXJ0ZXhBcnJheT11LndpcmVmcmFtZVZlcnRleEFycmF5LEsucHJpbWl0aXZlVHlwZT1wLkxJTkVTKSk7dmFyIG10PUsuYm91bmRpbmdWb2x1bWU7cy5tb2RlIT09TS5TQ0VORTNEPyhlLmZyb21SZWN0YW5nbGVXaXRoSGVpZ2h0czJEKHIucmVjdGFuZ2xlLHMubWFwUHJvamVjdGlvbix1Lm1pbmltdW1IZWlnaHQsdS5tYXhpbXVtSGVpZ2h0LG10KSxpLmZyb21FbGVtZW50cyhtdC5jZW50ZXIueixtdC5jZW50ZXIueCxtdC5jZW50ZXIueSxtdC5jZW50ZXIpLHMubW9kZT09PU0uTU9SUEhJTkcmJihtdD1lLnVuaW9uKHUuYm91bmRpbmdTcGhlcmUzRCxtdCxtdCkpKTplLmNsb25lKHUuYm91bmRpbmdTcGhlcmUzRCxtdCksbC5wdXNoKEspLFg9WSxKPVp9d2hpbGUocT5IKX12YXIgTj1mdW5jdGlvbiBKKGUpe3RoaXMubGlnaHRpbmdGYWRlT3V0RGlzdGFuY2U9NjVlNSx0aGlzLmxpZ2h0aW5nRmFkZUluRGlzdGFuY2U9OWU2LHRoaXMub2NlYW5Ob3JtYWxNYXA9dm9pZCAwLHRoaXMuem9vbWVkT3V0T2NlYW5TcGVjdWxhckludGVuc2l0eT0uNSx0aGlzLl9xdWFkdHJlZT12b2lkIDAsdGhpcy5fdGVycmFpblByb3ZpZGVyPWUudGVycmFpblByb3ZpZGVyLHRoaXMuX2ltYWdlcnlMYXllcnM9ZS5pbWFnZXJ5TGF5ZXJzLHRoaXMuX3N1cmZhY2VTaGFkZXJTZXQ9ZS5zdXJmYWNlU2hhZGVyU2V0LHRoaXMuX3JlbmRlclN0YXRlPXZvaWQgMCx0aGlzLl9ibGVuZFJlbmRlclN0YXRlPXZvaWQgMCx0aGlzLl9lcnJvckV2ZW50PW5ldyB1LHRoaXMuX2ltYWdlcnlMYXllcnMubGF5ZXJBZGRlZC5hZGRFdmVudExpc3RlbmVyKEoucHJvdG90eXBlLl9vbkxheWVyQWRkZWQsdGhpcyksdGhpcy5faW1hZ2VyeUxheWVycy5sYXllclJlbW92ZWQuYWRkRXZlbnRMaXN0ZW5lcihKLnByb3RvdHlwZS5fb25MYXllclJlbW92ZWQsdGhpcyksdGhpcy5faW1hZ2VyeUxheWVycy5sYXllck1vdmVkLmFkZEV2ZW50TGlzdGVuZXIoSi5wcm90b3R5cGUuX29uTGF5ZXJNb3ZlZCx0aGlzKSx0aGlzLl9pbWFnZXJ5TGF5ZXJzLmxheWVyU2hvd25PckhpZGRlbi5hZGRFdmVudExpc3RlbmVyKEoucHJvdG90eXBlLl9vbkxheWVyU2hvd25PckhpZGRlbix0aGlzKSx0aGlzLl9sYXllck9yZGVyQ2hhbmdlZD0hMSx0aGlzLl90aWxlc1RvUmVuZGVyQnlUZXh0dXJlQ291bnQ9W10sdGhpcy5fZHJhd0NvbW1hbmRzPVtdLHRoaXMuX3VuaWZvcm1NYXBzPVtdLHRoaXMuX3VzZWREcmF3Q29tbWFuZHM9MCx0aGlzLl9kZWJ1Zz17d2lyZWZyYW1lOiExLGJvdW5kaW5nU3BoZXJlVGlsZTp2b2lkIDB9LHRoaXMuX2Jhc2VDb2xvcj12b2lkIDAsdGhpcy5fZmlyc3RQYXNzSW5pdGlhbENvbG9yPXZvaWQgMCx0aGlzLmJhc2VDb2xvcj1uZXcgcigwLDAsLjUsMSl9O2EoTi5wcm90b3R5cGUse2Jhc2VDb2xvcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Jhc2VDb2xvcn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2Jhc2VDb2xvcj1lLHRoaXMuX2ZpcnN0UGFzc0luaXRpYWxDb2xvcj1uLmZyb21Db2xvcihlLHRoaXMuX2ZpcnN0UGFzc0luaXRpYWxDb2xvcil9fSxxdWFkdHJlZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3F1YWR0cmVlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fcXVhZHRyZWU9ZX19LHJlYWR5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGVycmFpblByb3ZpZGVyLnJlYWR5JiYoMD09PXRoaXMuX2ltYWdlcnlMYXllcnMubGVuZ3RofHx0aGlzLl9pbWFnZXJ5TGF5ZXJzLmdldCgwKS5pbWFnZXJ5UHJvdmlkZXIucmVhZHkpfX0sdGlsaW5nU2NoZW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGVycmFpblByb3ZpZGVyLnRpbGluZ1NjaGVtZX19LGVycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvckV2ZW50fX0sdGVycmFpblByb3ZpZGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGVycmFpblByb3ZpZGVyfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fdGVycmFpblByb3ZpZGVyIT09ZSYmKHRoaXMuX3RlcnJhaW5Qcm92aWRlcj1lLG8odGhpcy5fcXVhZHRyZWUpJiZ0aGlzLl9xdWFkdHJlZS5pbnZhbGlkYXRlQWxsVGlsZXMoKSl9fX0pLE4ucHJvdG90eXBlLmJlZ2luVXBkYXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5faW1hZ2VyeUxheWVycy5fdXBkYXRlKCksdGhpcy5fbGF5ZXJPcmRlckNoYW5nZWQmJih0aGlzLl9sYXllck9yZGVyQ2hhbmdlZD0hMSx0aGlzLl9xdWFkdHJlZS5mb3JFYWNoTG9hZGVkVGlsZShmdW5jdGlvbihlKXtlLmRhdGEuaW1hZ2VyeS5zb3J0KEkpfSkpO3ZhciBpLG4scj10aGlzLl90aWxlc1RvUmVuZGVyQnlUZXh0dXJlQ291bnQ7Zm9yKGk9MCxuPXIubGVuZ3RoO24+aTsrK2kpe3ZhciBhPXJbaV07byhhKSYmKGEubGVuZ3RoPTApfXRoaXMuX3VzZWREcmF3Q29tbWFuZHM9MDt2YXIgcz10LmNyZWRpdERpc3BsYXk7dGhpcy5fdGVycmFpblByb3ZpZGVyLnJlYWR5JiZvKHRoaXMuX3RlcnJhaW5Qcm92aWRlci5jcmVkaXQpJiZzLmFkZENyZWRpdCh0aGlzLl90ZXJyYWluUHJvdmlkZXIuY3JlZGl0KTt2YXIgbD10aGlzLl9pbWFnZXJ5TGF5ZXJzO2ZvcihpPTAsbj1sLmxlbmd0aDtuPmk7KytpKXt2YXIgdT1sLmdldChpKS5pbWFnZXJ5UHJvdmlkZXI7dS5yZWFkeSYmbyh1LmNyZWRpdCkmJnMuYWRkQ3JlZGl0KHUuY3JlZGl0KX19LE4ucHJvdG90eXBlLmVuZFVwZGF0ZT1mdW5jdGlvbihlLHQsaSl7byh0aGlzLl9yZW5kZXJTdGF0ZSl8fCh0aGlzLl9yZW5kZXJTdGF0ZT1lLmNyZWF0ZVJlbmRlclN0YXRlKHtjdWxsOntlbmFibGVkOiEwfSxkZXB0aFRlc3Q6e2VuYWJsZWQ6ITB9fSkpLG8odGhpcy5fYmxlbmRSZW5kZXJTdGF0ZSl8fCh0aGlzLl9ibGVuZFJlbmRlclN0YXRlPWUuY3JlYXRlUmVuZGVyU3RhdGUoe2N1bGw6e2VuYWJsZWQ6ITB9LGRlcHRoVGVzdDp7ZW5hYmxlZDohMCxmdW5jOkUuTEVTU19PUl9FUVVBTH0sYmxlbmRpbmc6dy5BTFBIQV9CTEVORH0pKSx0aGlzLl9yZW5kZXJTdGF0ZS5kZXB0aFRlc3QuZW5hYmxlZD10Lm1vZGU9PT1NLlNDRU5FM0R8fHQubW9kZT09PU0uQ09MVU1CVVNfVklFVyx0aGlzLl9ibGVuZFJlbmRlclN0YXRlLmRlcHRoVGVzdC5lbmFibGVkPXRoaXMuX3JlbmRlclN0YXRlLmRlcHRoVGVzdC5lbmFibGVkO2Zvcih2YXIgbj10aGlzLl90aWxlc1RvUmVuZGVyQnlUZXh0dXJlQ291bnQscj0wLGE9bi5sZW5ndGg7YT5yOysrcil7dmFyIHM9bltyXTtpZihvKHMpKWZvcih2YXIgbD0wLHU9cy5sZW5ndGg7dT5sOysrbClMKHRoaXMsc1tsXSxlLHQsaSl9fSxOLnByb3RvdHlwZS5nZXRMZXZlbE1heGltdW1HZW9tZXRyaWNFcnJvcj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fdGVycmFpblByb3ZpZGVyLmdldExldmVsTWF4aW11bUdlb21ldHJpY0Vycm9yKGUpfSxOLnByb3RvdHlwZS5sb2FkVGlsZT1mdW5jdGlvbihlLHQsaSl7VC5wcm9jZXNzU3RhdGVNYWNoaW5lKGksZSx0aGlzLl90ZXJyYWluUHJvdmlkZXIsdGhpcy5faW1hZ2VyeUxheWVycyl9O3ZhciB6PW5ldyBlO04ucHJvdG90eXBlLmNvbXB1dGVUaWxlVmlzaWJpbGl0eT1mdW5jdGlvbih0LG4scil7dmFyIGE9dC5kYXRhLHM9bi5jdWxsaW5nVm9sdW1lLGw9YS5ib3VuZGluZ1NwaGVyZTNEO24ubW9kZSE9PU0uU0NFTkUzRCYmKGw9eixlLmZyb21SZWN0YW5nbGVXaXRoSGVpZ2h0czJEKHQucmVjdGFuZ2xlLG4ubWFwUHJvamVjdGlvbixhLm1pbmltdW1IZWlnaHQsYS5tYXhpbXVtSGVpZ2h0LGwpLGkuZnJvbUVsZW1lbnRzKGwuY2VudGVyLnosbC5jZW50ZXIueCxsLmNlbnRlci55LGwuY2VudGVyKSxuLm1vZGU9PT1NLk1PUlBISU5HJiYobD1lLnVuaW9uKGEuYm91bmRpbmdTcGhlcmUzRCxsLGwpKSk7dmFyIHU9cy5jb21wdXRlVmlzaWJpbGl0eShsKTtpZih1PT09bS5PVVRTSURFKXJldHVybiBnLk5PTkU7aWYobi5tb2RlPT09TS5TQ0VORTNEKXt2YXIgYz1hLm9jY2x1ZGVlUG9pbnRJblNjYWxlZFNwYWNlO3JldHVybiBvKGMpP3IuZWxsaXBzb2lkLmlzU2NhbGVkU3BhY2VQb2ludFZpc2libGUoYyk/dTpnLk5PTkU6dX1yZXR1cm4gdX07dmFyIEI9Yy5zdXBwb3J0c1R5cGVkQXJyYXlzKCk/bmV3IEZsb2F0MzJBcnJheSgxKTp2b2lkIDAsRj1uZXcgZixWPW5ldyBuLGs9bmV3IGksVT1uZXcgbixXPW5ldyBpLEc9bmV3IGk7Ti5wcm90b3R5cGUuc2hvd1RpbGVUaGlzRnJhbWU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAsaT1lLmRhdGEuaW1hZ2VyeSxuPTAscj1pLmxlbmd0aDtyPm47KytuKXt2YXIgYT1pW25dO28oYS5yZWFkeUltYWdlcnkpJiYwIT09YS5yZWFkeUltYWdlcnkuaW1hZ2VyeUxheWVyLmFscGhhJiYrK3R9dmFyIHM9dGhpcy5fdGlsZXNUb1JlbmRlckJ5VGV4dHVyZUNvdW50W3RdO28ocyl8fChzPVtdLHRoaXMuX3RpbGVzVG9SZW5kZXJCeVRleHR1cmVDb3VudFt0XT1zKSxzLnB1c2goZSk7dmFyIGw9dGhpcy5fZGVidWc7KytsLnRpbGVzUmVuZGVyZWQsbC50ZXh0dXJlc1JlbmRlcmVkKz10fTt2YXIgSD1uZXcgaSxxPW5ldyBpLGo9bmV3IGkoMCwtMSwwKSxZPW5ldyBpKDAsMCwtMSksWD1uZXcgaTtOLnByb3RvdHlwZS5jb21wdXRlRGlzdGFuY2VUb1RpbGU9ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmRhdGEscj1uLnNvdXRod2VzdENvcm5lckNhcnRlc2lhbixvPW4ubm9ydGhlYXN0Q29ybmVyQ2FydGVzaWFuLGE9bi53ZXN0Tm9ybWFsLHM9bi5zb3V0aE5vcm1hbCxsPW4uZWFzdE5vcm1hbCx1PW4ubm9ydGhOb3JtYWwsYz1uLm1heGltdW1IZWlnaHQ7dC5tb2RlIT09TS5TQ0VORTNEJiYocj10Lm1hcFByb2plY3Rpb24ucHJvamVjdCh2LnNvdXRod2VzdChlLnJlY3RhbmdsZSksSCksci56PXIueSxyLnk9ci54LHIueD0wLG89dC5tYXBQcm9qZWN0aW9uLnByb2plY3Qodi5ub3J0aGVhc3QoZS5yZWN0YW5nbGUpLHEpLG8uej1vLnksby55PW8ueCxvLng9MCxhPWosbD1pLlVOSVRfWSxzPVksdT1pLlVOSVRfWixjPTApO3ZhciBkLGg9dC5jYW1lcmEucG9zaXRpb25XQyxtPXQuY2FtZXJhLnBvc2l0aW9uQ2FydG9ncmFwaGljLGY9aS5zdWJ0cmFjdChoLHIsWCkscD1pLmRvdChmLGEpLGc9aS5kb3QoZixzKSxfPWkuc3VidHJhY3QoaCxvLFgpLHk9aS5kb3QoXyxsKSxDPWkuZG90KF8sdSk7ZD10Lm1vZGU9PT1NLlNDRU5FM0Q/bS5oZWlnaHQ6aC54O3ZhciB3PWQtYyxFPTA7cmV0dXJuIHA+MD9FKz1wKnA6eT4wJiYoRSs9eSp5KSxnPjA/RSs9ZypnOkM+MCYmKEUrPUMqQyksdz4wJiYoRSs9dyp3KSxNYXRoLnNxcnQoRSl9LE4ucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LE4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZVByb3ZpZGVyPXRoaXMuX3RpbGVQcm92aWRlciYmdGhpcy5fdGlsZVByb3ZpZGVyLmRlc3Ryb3koKSxzKHRoaXMpfSxOLnByb3RvdHlwZS5fb25MYXllckFkZGVkPWZ1bmN0aW9uKGUpe2lmKGUuc2hvdyl7dmFyIHQ9dGhpcy5fdGVycmFpblByb3ZpZGVyO3RoaXMuX3F1YWR0cmVlLmZvckVhY2hMb2FkZWRUaWxlKGZ1bmN0aW9uKGkpe2UuX2NyZWF0ZVRpbGVJbWFnZXJ5U2tlbGV0b25zKGksdCkmJihpLnN0YXRlPVAuTE9BRElORyl9KSx0aGlzLl9sYXllck9yZGVyQ2hhbmdlZD0hMH19LE4ucHJvdG90eXBlLl9vbkxheWVyUmVtb3ZlZD1mdW5jdGlvbihlKXt0aGlzLl9xdWFkdHJlZS5mb3JFYWNoTG9hZGVkVGlsZShmdW5jdGlvbih0KXtmb3IodmFyIGk9dC5kYXRhLmltYWdlcnksbj0tMSxyPTAsYT0wLHM9aS5sZW5ndGg7cz5hOysrYSl7dmFyIGw9aVthXSx1PWwubG9hZGluZ0ltYWdlcnk7aWYobyh1KXx8KHU9bC5yZWFkeUltYWdlcnkpLHUuaW1hZ2VyeUxheWVyPT09ZSktMT09PW4mJihuPWEpLGwuZnJlZVJlc291cmNlcygpLCsrcjtlbHNlIGlmKC0xIT09bilicmVha30tMSE9PW4mJmkuc3BsaWNlKG4scil9KX0sTi5wcm90b3R5cGUuX29uTGF5ZXJNb3ZlZD1mdW5jdGlvbigpe3RoaXMuX2xheWVyT3JkZXJDaGFuZ2VkPSEwfSxOLnByb3RvdHlwZS5fb25MYXllclNob3duT3JIaWRkZW49ZnVuY3Rpb24oZSx0LGkpe2k/dGhpcy5fb25MYXllckFkZGVkKGUsdCk6dGhpcy5fb25MYXllclJlbW92ZWQoZSx0KX07dmFyIFo9bmV3IG4oMCwwLDAsMCk7cmV0dXJuIE59KSxkZWZpbmUoIlNjZW5lL0ltYWdlcnlMYXllckNvbGxlY3Rpb24iLFsiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvUmVjdGFuZ2xlIiwiLi4vVGhpcmRQYXJ0eS93aGVuIiwiLi9JbWFnZXJ5TGF5ZXIiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYyhlLHQpe3ZhciBpPWUuaW5kZXhPZih0KTtyZXR1cm4gaX1mdW5jdGlvbiBkKGUsdCxpKXt2YXIgbj1lLl9sYXllcnM7aWYodD1hLmNsYW1wKHQsMCxuLmxlbmd0aC0xKSxpPWEuY2xhbXAoaSwwLG4ubGVuZ3RoLTEpLHQhPT1pKXt2YXIgcj1uW3RdO25bdF09bltpXSxuW2ldPXIsZS5fdXBkYXRlKCksZS5sYXllck1vdmVkLnJhaXNlRXZlbnQocixpLHQpfX12YXIgaD1mdW5jdGlvbigpe3RoaXMuX2xheWVycz1bXSx0aGlzLmxheWVyQWRkZWQ9bmV3IG8sdGhpcy5sYXllclJlbW92ZWQ9bmV3IG8sdGhpcy5sYXllck1vdmVkPW5ldyBvLHRoaXMubGF5ZXJTaG93bk9ySGlkZGVuPW5ldyBvfTtyZXR1cm4gaShoLnByb3RvdHlwZSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGF5ZXJzLmxlbmd0aH19fSksaC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGUsaSl7dmFyIG49dChpKTtuP3RoaXMuX2xheWVycy5zcGxpY2UoaSwwLGUpOihpPXRoaXMuX2xheWVycy5sZW5ndGgsdGhpcy5fbGF5ZXJzLnB1c2goZSkpLHRoaXMuX3VwZGF0ZSgpLHRoaXMubGF5ZXJBZGRlZC5yYWlzZUV2ZW50KGUsaSl9LGgucHJvdG90eXBlLmFkZEltYWdlcnlQcm92aWRlcj1mdW5jdGlvbihlLHQpe3ZhciBpPW5ldyB1KGUpO3JldHVybiB0aGlzLmFkZChpLHQpLGl9LGgucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0LGkpe2k9ZShpLCEwKTt2YXIgbj10aGlzLl9sYXllcnMuaW5kZXhPZih0KTtyZXR1cm4tMSE9PW4/KHRoaXMuX2xheWVycy5zcGxpY2UobiwxKSx0aGlzLl91cGRhdGUoKSx0aGlzLmxheWVyUmVtb3ZlZC5yYWlzZUV2ZW50KHQsbiksaSYmdC5kZXN0cm95KCksITApOiExfSxoLnByb3RvdHlwZS5yZW1vdmVBbGw9ZnVuY3Rpb24odCl7dD1lKHQsITApO2Zvcih2YXIgaT10aGlzLl9sYXllcnMsbj0wLHI9aS5sZW5ndGg7cj5uO24rKyl7dmFyIG89aVtuXTt0aGlzLmxheWVyUmVtb3ZlZC5yYWlzZUV2ZW50KG8sbiksdCYmby5kZXN0cm95KCl9dGhpcy5fbGF5ZXJzPVtdfSxoLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4tMSE9PXRoaXMuaW5kZXhPZihlKX0saC5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGF5ZXJzLmluZGV4T2YoZSl9LGgucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGF5ZXJzW2VdfSxoLnByb3RvdHlwZS5yYWlzZT1mdW5jdGlvbihlKXt2YXIgdD1jKHRoaXMuX2xheWVycyxlKTtkKHRoaXMsdCx0KzEpfSxoLnByb3RvdHlwZS5sb3dlcj1mdW5jdGlvbihlKXt2YXIgdD1jKHRoaXMuX2xheWVycyxlKTtkKHRoaXMsdCx0LTEpfSxoLnByb3RvdHlwZS5yYWlzZVRvVG9wPWZ1bmN0aW9uKGUpe3ZhciB0PWModGhpcy5fbGF5ZXJzLGUpO3QhPT10aGlzLl9sYXllcnMubGVuZ3RoLTEmJih0aGlzLl9sYXllcnMuc3BsaWNlKHQsMSksdGhpcy5fbGF5ZXJzLnB1c2goZSksdGhpcy5fdXBkYXRlKCksdGhpcy5sYXllck1vdmVkLnJhaXNlRXZlbnQoZSx0aGlzLl9sYXllcnMubGVuZ3RoLTEsdCkpfSxoLnByb3RvdHlwZS5sb3dlclRvQm90dG9tPWZ1bmN0aW9uKGUpe3ZhciB0PWModGhpcy5fbGF5ZXJzLGUpOzAhPT10JiYodGhpcy5fbGF5ZXJzLnNwbGljZSh0LDEpLHRoaXMuX2xheWVycy5zcGxpY2UoMCwwLGUpLHRoaXMuX3VwZGF0ZSgpLHRoaXMubGF5ZXJNb3ZlZC5yYWlzZUV2ZW50KGUsMCx0KSl9LGgucHJvdG90eXBlLnBpY2tJbWFnZXJ5TGF5ZXJGZWF0dXJlcz1mdW5jdGlvbihlLGkpe3ZhciBuPWkuZ2xvYmUucGljayhlLGkpO2lmKCF0KG4pKXJldHVybiB2b2lkIDA7dmFyIHI9aS5nbG9iZS5lbGxpcHNvaWQuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMobiksbz1pLmdsb2JlLl9zdXJmYWNlLl90aWxlc1RvUmVuZGVyO28ubGVuZ3RoO2Zvcih2YXIgYSx1PTA7IXQoYSkmJnU8by5sZW5ndGg7Kyt1KXt2YXIgYz1vW3VdO3MuY29udGFpbnMoYy5yZWN0YW5nbGUscikmJihhPWMpfWlmKCF0KGEpKXJldHVybiB2b2lkIDA7YS5yZWN0YW5nbGU7Zm9yKHZhciBkPWEuZGF0YS5pbWFnZXJ5LGg9W10sbT1kLmxlbmd0aC0xO20+PTA7LS1tKXt2YXIgZj1kW21dLHA9Zi5yZWFkeUltYWdlcnk7aWYodChwKSl7dmFyIHY9cC5pbWFnZXJ5TGF5ZXIuaW1hZ2VyeVByb3ZpZGVyO2lmKHQodi5waWNrRmVhdHVyZXMpKXt2YXIgZz12LnBpY2tGZWF0dXJlcyhwLngscC55LHAubGV2ZWwsci5sb25naXR1ZGUsci5sYXRpdHVkZSk7dChnKSYmaC5wdXNoKGcpfX19cmV0dXJuIDA9PT1oLmxlbmd0aD92b2lkIDA6bC5hbGwoaCxmdW5jdGlvbihlKXtmb3IodmFyIGk9W10sbj0wO248ZS5sZW5ndGg7KytuKXt2YXIgbz1lW25dO2lmKHQobykmJm8ubGVuZ3RoPjApZm9yKHZhciBhPTA7YTxvLmxlbmd0aDsrK2Epe3ZhciBzPW9bYV07dChzLnBvc2l0aW9uKXx8KHMucG9zaXRpb249ciksaS5wdXNoKHMpfX1yZXR1cm4gaX0pfSxoLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxoLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVtb3ZlQWxsKCEwKSxuKHRoaXMpfSxoLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLGksbj0hMCxyPXRoaXMuX2xheWVycyxvPTAsYT1yLmxlbmd0aDthPm87KytvKWk9cltvXSxpLl9sYXllckluZGV4PW8saS5zaG93PyhpLl9pc0Jhc2VMYXllcj1uLG49ITEpOmkuX2lzQmFzZUxheWVyPSExLGkuc2hvdyE9PWkuX3Nob3cmJih0KGkuX3Nob3cpJiYodChlKXx8KGU9W10pLGUucHVzaChpKSksaS5fc2hvdz1pLnNob3cpOwppZih0KGUpKWZvcihvPTAsYT1lLmxlbmd0aDthPm87KytvKWk9ZVtvXSx0aGlzLmxheWVyU2hvd25PckhpZGRlbi5yYWlzZUV2ZW50KGksaS5fbGF5ZXJJbmRleCxpLnNob3cpfSxofSksZGVmaW5lKCJDb3JlL0VsbGlwc29pZGFsT2NjbHVkZXIiLFsiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMyIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vUmVjdGFuZ2xlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHMoZSxpLG4pe3ZhciByPWUudHJhbnNmb3JtUG9zaXRpb25Ub1NjYWxlZFNwYWNlKGksZiksbz10Lm1hZ25pdHVkZVNxdWFyZWQociksYT1NYXRoLnNxcnQobykscz10LmRpdmlkZUJ5U2NhbGFyKHIsYSxwKTtvPU1hdGgubWF4KDEsbyksYT1NYXRoLm1heCgxLGEpO3ZhciBsPXQuZG90KHMsbiksdT10Lm1hZ25pdHVkZSh0LmNyb3NzKHMsbixzKSksYz0xL2EsZD1NYXRoLnNxcnQoby0xKSpjO3JldHVybiAxLyhsKmMtdSpkKX1mdW5jdGlvbiBsKGUsaSxuKXtyZXR1cm4gMD49aXx8aT09PTEvMHx8aSE9PWk/dm9pZCAwOnQubXVsdGlwbHlCeVNjYWxhcihlLGksbil9ZnVuY3Rpb24gdShlLGkpe3JldHVybiBlLnRyYW5zZm9ybVBvc2l0aW9uVG9TY2FsZWRTcGFjZShpLHYpLHQubm9ybWFsaXplKHYsdil9dmFyIGM9ZnVuY3Rpb24oZSxpKXt0aGlzLl9lbGxpcHNvaWQ9ZSx0aGlzLl9jYW1lcmFQb3NpdGlvbj1uZXcgdCx0aGlzLl9jYW1lcmFQb3NpdGlvbkluU2NhbGVkU3BhY2U9bmV3IHQsdGhpcy5fZGlzdGFuY2VUb0xpbWJJblNjYWxlZFNwYWNlU3F1YXJlZD0wLG4oaSkmJih0aGlzLmNhbWVyYVBvc2l0aW9uPWkpfTtyKGMucHJvdG90eXBlLHtlbGxpcHNvaWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbGxpcHNvaWR9fSxjYW1lcmFQb3NpdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NhbWVyYVBvc2l0aW9ufSxzZXQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fZWxsaXBzb2lkLG49aS50cmFuc2Zvcm1Qb3NpdGlvblRvU2NhbGVkU3BhY2UoZSx0aGlzLl9jYW1lcmFQb3NpdGlvbkluU2NhbGVkU3BhY2UpLHI9dC5tYWduaXR1ZGVTcXVhcmVkKG4pLTE7dC5jbG9uZShlLHRoaXMuX2NhbWVyYVBvc2l0aW9uKSx0aGlzLl9jYW1lcmFQb3NpdGlvbkluU2NhbGVkU3BhY2U9bix0aGlzLl9kaXN0YW5jZVRvTGltYkluU2NhbGVkU3BhY2VTcXVhcmVkPXJ9fX0pO3ZhciBkPW5ldyB0O2MucHJvdG90eXBlLmlzUG9pbnRWaXNpYmxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2VsbGlwc29pZCxpPXQudHJhbnNmb3JtUG9zaXRpb25Ub1NjYWxlZFNwYWNlKGUsZCk7cmV0dXJuIHRoaXMuaXNTY2FsZWRTcGFjZVBvaW50VmlzaWJsZShpKX0sYy5wcm90b3R5cGUuaXNTY2FsZWRTcGFjZVBvaW50VmlzaWJsZT1mdW5jdGlvbihlKXt2YXIgaT10aGlzLl9jYW1lcmFQb3NpdGlvbkluU2NhbGVkU3BhY2Usbj10aGlzLl9kaXN0YW5jZVRvTGltYkluU2NhbGVkU3BhY2VTcXVhcmVkLHI9dC5zdWJ0cmFjdChlLGksZCksbz0tdC5kb3QocixpKSxhPW8+biYmbypvL3QubWFnbml0dWRlU3F1YXJlZChyKT5uO3JldHVybiFhfSxjLnByb3RvdHlwZS5jb21wdXRlSG9yaXpvbkN1bGxpbmdQb2ludD1mdW5jdGlvbihlLGkscil7bihyKXx8KHI9bmV3IHQpO2Zvcih2YXIgbz10aGlzLl9lbGxpcHNvaWQsYT11KG8sZSksYz0wLGQ9MCxoPWkubGVuZ3RoO2g+ZDsrK2Qpe3ZhciBtPWlbZF0sZj1zKG8sbSxhKTtjPU1hdGgubWF4KGMsZil9cmV0dXJuIGwoYSxjLHIpfTt2YXIgaD1uZXcgdDtjLnByb3RvdHlwZS5jb21wdXRlSG9yaXpvbkN1bGxpbmdQb2ludEZyb21WZXJ0aWNlcz1mdW5jdGlvbihlLHIsbyxhLGMpe24oYyl8fChjPW5ldyB0KSxhPWkoYSx0LlpFUk8pO2Zvcih2YXIgZD10aGlzLl9lbGxpcHNvaWQsbT11KGQsZSksZj0wLHA9MCx2PXIubGVuZ3RoO3Y+cDtwKz1vKXtoLng9cltwXSthLngsaC55PXJbcCsxXSthLnksaC56PXJbcCsyXSthLno7dmFyIGc9cyhkLGgsbSk7Zj1NYXRoLm1heChmLGcpfXJldHVybiBsKG0sZixjKX07dmFyIG09W107Yy5wcm90b3R5cGUuY29tcHV0ZUhvcml6b25DdWxsaW5nUG9pbnRGcm9tUmVjdGFuZ2xlPWZ1bmN0aW9uKGksbixyKXt2YXIgbz1hLnN1YnNhbXBsZShpLG4sMCxtKSxzPWUuZnJvbVBvaW50cyhvKTtyZXR1cm4gdC5tYWduaXR1ZGUocy5jZW50ZXIpPC4xKm4ubWluaW11bVJhZGl1cz92b2lkIDA6dGhpcy5jb21wdXRlSG9yaXpvbkN1bGxpbmdQb2ludChzLmNlbnRlcixvLHIpfTt2YXIgZj1uZXcgdCxwPW5ldyB0LHY9bmV3IHQ7cmV0dXJuIGN9KSxkZWZpbmUoIlNjZW5lL1F1YWR0cmVlT2NjbHVkZXJzIixbIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRWxsaXBzb2lkYWxPY2NsdWRlciJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24odCl7dGhpcy5fZWxsaXBzb2lkPW5ldyBpKHQuZWxsaXBzb2lkLGUuWkVSTyl9O3JldHVybiB0KG4ucHJvdG90eXBlLHtlbGxpcHNvaWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbGxpcHNvaWR9fX0pLG59KSxkZWZpbmUoIlNjZW5lL1F1YWR0cmVlVGlsZSIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi9RdWFkdHJlZVRpbGVMb2FkU3RhdGUiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7dmFyIHI9ZnVuY3Rpb24oZSl7dGhpcy5fdGlsaW5nU2NoZW1lPWUudGlsaW5nU2NoZW1lLHRoaXMuX3g9ZS54LHRoaXMuX3k9ZS55LHRoaXMuX2xldmVsPWUubGV2ZWwsdGhpcy5fcGFyZW50PWUucGFyZW50LHRoaXMuX3JlY3RhbmdsZT10aGlzLl90aWxpbmdTY2hlbWUudGlsZVhZVG9SZWN0YW5nbGUodGhpcy5feCx0aGlzLl95LHRoaXMuX2xldmVsKSx0aGlzLl9jaGlsZHJlbj12b2lkIDAsdGhpcy5fcmVwbGFjZW1lbnRQcmV2aW91cz12b2lkIDAsdGhpcy5fcmVwbGFjZW1lbnROZXh0PXZvaWQgMCx0aGlzLl9kaXN0YW5jZT0wLHRoaXMuc3RhdGU9bi5TVEFSVCx0aGlzLnJlbmRlcmFibGU9ITEsdGhpcy51cHNhbXBsZWRGcm9tUGFyZW50PSExLHRoaXMuZGF0YT12b2lkIDB9O3JldHVybiByLmNyZWF0ZUxldmVsWmVyb1RpbGVzPWZ1bmN0aW9uKHQpe2lmKCFlKHQpKXRocm93IG5ldyBpKCJ0aWxpbmdTY2hlbWUgaXMgcmVxdWlyZWQuIik7Zm9yKHZhciBuPXQuZ2V0TnVtYmVyT2ZYVGlsZXNBdExldmVsKDApLG89dC5nZXROdW1iZXJPZllUaWxlc0F0TGV2ZWwoMCksYT1uZXcgQXJyYXkobipvKSxzPTAsbD0wO28+bDsrK2wpZm9yKHZhciB1PTA7bj51OysrdSlhW3MrK109bmV3IHIoe3RpbGluZ1NjaGVtZTp0LHg6dSx5OmwsbGV2ZWw6MH0pO3JldHVybiBhfSx0KHIucHJvdG90eXBlLHt0aWxpbmdTY2hlbWU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxpbmdTY2hlbWV9fSx4OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5feH19LHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl95fX0sbGV2ZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sZXZlbH19LHBhcmVudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3BhcmVudH19LHJlY3RhbmdsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlY3RhbmdsZX19LGNoaWxkcmVuOntnZXQ6ZnVuY3Rpb24oKXtpZighZSh0aGlzLl9jaGlsZHJlbikpe3ZhciB0PXRoaXMudGlsaW5nU2NoZW1lLGk9dGhpcy5sZXZlbCsxLG49Mip0aGlzLngsbz0yKnRoaXMueTt0aGlzLl9jaGlsZHJlbj1bbmV3IHIoe3RpbGluZ1NjaGVtZTp0LHg6bix5Om8sbGV2ZWw6aSxwYXJlbnQ6dGhpc30pLG5ldyByKHt0aWxpbmdTY2hlbWU6dCx4Om4rMSx5Om8sbGV2ZWw6aSxwYXJlbnQ6dGhpc30pLG5ldyByKHt0aWxpbmdTY2hlbWU6dCx4Om4seTpvKzEsbGV2ZWw6aSxwYXJlbnQ6dGhpc30pLG5ldyByKHt0aWxpbmdTY2hlbWU6dCx4Om4rMSx5Om8rMSxsZXZlbDppLHBhcmVudDp0aGlzfSldfXJldHVybiB0aGlzLl9jaGlsZHJlbn19LG5lZWRzTG9hZGluZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhdGU8bi5ET05FfX0sZWxpZ2libGVGb3JVbmxvYWRpbmc6e2dldDpmdW5jdGlvbigpe3ZhciB0PSEwO3JldHVybiBlKHRoaXMuZGF0YSkmJih0PXRoaXMuZGF0YS5lbGlnaWJsZUZvclVubG9hZGluZyxlKHQpfHwodD0hMCkpLHR9fX0pLHIucHJvdG90eXBlLmZyZWVSZXNvdXJjZXM9ZnVuY3Rpb24oKXtpZih0aGlzLnN0YXRlPW4uU1RBUlQsdGhpcy5yZW5kZXJhYmxlPSExLHRoaXMudXBzYW1wbGVkRnJvbVBhcmVudD0hMSxlKHRoaXMuZGF0YSkmJmUodGhpcy5kYXRhLmZyZWVSZXNvdXJjZXMpJiZ0aGlzLmRhdGEuZnJlZVJlc291cmNlcygpLGUodGhpcy5fY2hpbGRyZW4pKXtmb3IodmFyIHQ9MCxpPXRoaXMuX2NoaWxkcmVuLmxlbmd0aDtpPnQ7Kyt0KXRoaXMuX2NoaWxkcmVuW3RdLmZyZWVSZXNvdXJjZXMoKTt0aGlzLl9jaGlsZHJlbj12b2lkIDB9fSxyfSksZGVmaW5lKCJTY2VuZS9UaWxlUmVwbGFjZW1lbnRRdWV1ZSIsWyIuLi9Db3JlL2RlZmluZWQiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gdChlLHQpe3ZhciBpPXQucmVwbGFjZW1lbnRQcmV2aW91cyxuPXQucmVwbGFjZW1lbnROZXh0O3Q9PT1lLl9sYXN0QmVmb3JlU3RhcnRPZkZyYW1lJiYoZS5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZT1uKSx0PT09ZS5oZWFkP2UuaGVhZD1uOmkucmVwbGFjZW1lbnROZXh0PW4sdD09PWUudGFpbD9lLnRhaWw9aTpuLnJlcGxhY2VtZW50UHJldmlvdXM9aSx0LnJlcGxhY2VtZW50UHJldmlvdXM9dm9pZCAwLHQucmVwbGFjZW1lbnROZXh0PXZvaWQgMCwtLWUuY291bnR9dmFyIGk9ZnVuY3Rpb24oKXt0aGlzLmhlYWQ9dm9pZCAwLHRoaXMudGFpbD12b2lkIDAsdGhpcy5jb3VudD0wLHRoaXMuX2xhc3RCZWZvcmVTdGFydE9mRnJhbWU9dm9pZCAwfTtyZXR1cm4gaS5wcm90b3R5cGUubWFya1N0YXJ0T2ZSZW5kZXJGcmFtZT1mdW5jdGlvbigpe3RoaXMuX2xhc3RCZWZvcmVTdGFydE9mRnJhbWU9dGhpcy5oZWFkfSxpLnByb3RvdHlwZS50cmltVGlsZXM9ZnVuY3Rpb24oaSl7Zm9yKHZhciBuPXRoaXMudGFpbCxyPSEwO3ImJmUodGhpcy5fbGFzdEJlZm9yZVN0YXJ0T2ZGcmFtZSkmJnRoaXMuY291bnQ+aSYmZShuKTspe3I9biE9PXRoaXMuX2xhc3RCZWZvcmVTdGFydE9mRnJhbWU7dmFyIG89bi5yZXBsYWNlbWVudFByZXZpb3VzO24uZWxpZ2libGVGb3JVbmxvYWRpbmcmJihuLmZyZWVSZXNvdXJjZXMoKSx0KHRoaXMsbikpLG49b319LGkucHJvdG90eXBlLm1hcmtUaWxlUmVuZGVyZWQ9ZnVuY3Rpb24oaSl7dmFyIG49dGhpcy5oZWFkO3JldHVybiBuPT09aT8oaT09PXRoaXMuX2xhc3RCZWZvcmVTdGFydE9mRnJhbWUmJih0aGlzLl9sYXN0QmVmb3JlU3RhcnRPZkZyYW1lPWkucmVwbGFjZW1lbnROZXh0KSx2b2lkIDApOigrK3RoaXMuY291bnQsZShuKT8oKGUoaS5yZXBsYWNlbWVudFByZXZpb3VzKXx8ZShpLnJlcGxhY2VtZW50TmV4dCkpJiZ0KHRoaXMsaSksaS5yZXBsYWNlbWVudFByZXZpb3VzPXZvaWQgMCxpLnJlcGxhY2VtZW50TmV4dD1uLG4ucmVwbGFjZW1lbnRQcmV2aW91cz1pLHRoaXMuaGVhZD1pLHZvaWQgMCk6KGkucmVwbGFjZW1lbnRQcmV2aW91cz12b2lkIDAsaS5yZXBsYWNlbWVudE5leHQ9dm9pZCAwLHRoaXMuaGVhZD1pLHRoaXMudGFpbD1pLHZvaWQgMCkpfSxpfSksZGVmaW5lKCJTY2VuZS9RdWFkdHJlZVByaW1pdGl2ZSIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL2dldFRpbWVzdGFtcCIsIi4uL0NvcmUvUXVldWUiLCIuLi9Db3JlL1Zpc2liaWxpdHkiLCIuL1F1YWR0cmVlT2NjbHVkZXJzIiwiLi9RdWFkdHJlZVRpbGUiLCIuL1F1YWR0cmVlVGlsZUxvYWRTdGF0ZSIsIi4vU2NlbmVNb2RlIiwiLi9UaWxlUmVwbGFjZW1lbnRRdWV1ZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaChlLGksbil7dmFyIHI9ZS5fZGVidWc7aWYoIXIuc3VzcGVuZExvZFVwZGF0ZSl7dmFyIG8scyx1PWUuX3RpbGVzVG9SZW5kZXI7dS5sZW5ndGg9MDt2YXIgYz1lLl90aWxlVHJhdmVyc2FsUXVldWU7aWYoYy5jbGVhcigpLHIubWF4RGVwdGg9MCxyLnRpbGVzVmlzaXRlZD0wLHIudGlsZXNDdWxsZWQ9MCxyLnRpbGVzUmVuZGVyZWQ9MCxyLnRpbGVzV2FpdGluZ0ZvckNoaWxkcmVuPTAsZS5fdGlsZUxvYWRRdWV1ZS5sZW5ndGg9MCxlLl90aWxlUmVwbGFjZW1lbnRRdWV1ZS5tYXJrU3RhcnRPZlJlbmRlckZyYW1lKCksIXQoZS5fbGV2ZWxaZXJvVGlsZXMpKXtpZighZS5fdGlsZVByb3ZpZGVyLnJlYWR5KXJldHVybjt2YXIgZD1lLl90aWxlUHJvdmlkZXIudGlsaW5nU2NoZW1lO2UuX2xldmVsWmVyb1RpbGVzPWwuY3JlYXRlTGV2ZWxaZXJvVGlsZXMoZCl9ZS5fb2NjbHVkZXJzLmVsbGlwc29pZC5jYW1lcmFQb3NpdGlvbj1uLmNhbWVyYS5wb3NpdGlvbldDO3ZhciBoLGY9ZS5fdGlsZVByb3ZpZGVyLF89ZS5fb2NjbHVkZXJzLHk9ZS5fbGV2ZWxaZXJvVGlsZXM7Zm9yKG89MCxzPXkubGVuZ3RoO3M+bzsrK28paD15W29dLGUuX3RpbGVSZXBsYWNlbWVudFF1ZXVlLm1hcmtUaWxlUmVuZGVyZWQoaCksaC5uZWVkc0xvYWRpbmcmJmcoZSxoKSxoLnJlbmRlcmFibGUmJmYuY29tcHV0ZVRpbGVWaXNpYmlsaXR5KGgsbixfKSE9PWEuTk9ORT9jLmVucXVldWUoaCk6KCsrci50aWxlc0N1bGxlZCxoLnJlbmRlcmFibGV8fCsrci50aWxlc1dhaXRpbmdGb3JDaGlsZHJlbik7Zm9yKDt0KGg9Yy5kZXF1ZXVlKCkpOylpZigrK3IudGlsZXNWaXNpdGVkLGUuX3RpbGVSZXBsYWNlbWVudFF1ZXVlLm1hcmtUaWxlUmVuZGVyZWQoaCksaC5sZXZlbD5yLm1heERlcHRoJiYoci5tYXhEZXB0aD1oLmxldmVsKSxtKGUsaSxuLGgpPGUubWF4aW11bVNjcmVlblNwYWNlRXJyb3IpcChlLGgpO2Vsc2UgaWYodihlLGgpKXt2YXIgQz1oLmNoaWxkcmVuO2ZvcihvPTAscz1DLmxlbmd0aDtzPm87KytvKWYuY29tcHV0ZVRpbGVWaXNpYmlsaXR5KENbb10sbixfKSE9PWEuTk9ORT9jLmVucXVldWUoQ1tvXSk6KytyLnRpbGVzQ3VsbGVkfWVsc2UrK3IudGlsZXNXYWl0aW5nRm9yQ2hpbGRyZW4scChlLGgpO3IuZW5hYmxlRGVidWdPdXRwdXQmJihyLnRpbGVzVmlzaXRlZCE9PXIubGFzdFRpbGVzVmlzaXRlZHx8ci50aWxlc1JlbmRlcmVkIT09ci5sYXN0VGlsZXNSZW5kZXJlZHx8ci50aWxlc0N1bGxlZCE9PXIubGFzdFRpbGVzQ3VsbGVkfHxyLm1heERlcHRoIT09ci5sYXN0TWF4RGVwdGh8fHIudGlsZXNXYWl0aW5nRm9yQ2hpbGRyZW4hPT1yLmxhc3RUaWxlc1dhaXRpbmdGb3JDaGlsZHJlbikmJihjb25zb2xlLmxvZygiVmlzaXRlZCAiK3IudGlsZXNWaXNpdGVkKyIsIFJlbmRlcmVkOiAiK3IudGlsZXNSZW5kZXJlZCsiLCBDdWxsZWQ6ICIrci50aWxlc0N1bGxlZCsiLCBNYXggRGVwdGg6ICIrci5tYXhEZXB0aCsiLCBXYWl0aW5nIGZvciBjaGlsZHJlbjogIityLnRpbGVzV2FpdGluZ0ZvckNoaWxkcmVuKSxyLmxhc3RUaWxlc1Zpc2l0ZWQ9ci50aWxlc1Zpc2l0ZWQsci5sYXN0VGlsZXNSZW5kZXJlZD1yLnRpbGVzUmVuZGVyZWQsci5sYXN0VGlsZXNDdWxsZWQ9ci50aWxlc0N1bGxlZCxyLmxhc3RNYXhEZXB0aD1yLm1heERlcHRoLHIubGFzdFRpbGVzV2FpdGluZ0ZvckNoaWxkcmVuPXIudGlsZXNXYWl0aW5nRm9yQ2hpbGRyZW4pfX1mdW5jdGlvbiBtKGUsdCxpLG4pe2lmKGkubW9kZT09PWMuU0NFTkUyRClyZXR1cm4gZihlLHQsaSxuKTt2YXIgcj1lLl90aWxlUHJvdmlkZXIuZ2V0TGV2ZWxNYXhpbXVtR2VvbWV0cmljRXJyb3Iobi5sZXZlbCksbz1lLl90aWxlUHJvdmlkZXIuY29tcHV0ZURpc3RhbmNlVG9UaWxlKG4saSk7bi5fZGlzdGFuY2U9bzt2YXIgYT10LmRyYXdpbmdCdWZmZXJIZWlnaHQscz1pLmNhbWVyYSxsPXMuZnJ1c3R1bSx1PWwuZm92eTtyZXR1cm4gciphLygyKm8qTWF0aC50YW4oLjUqdSkpfWZ1bmN0aW9uIGYoZSx0LGksbil7dmFyIHI9aS5jYW1lcmEsbz1yLmZydXN0dW0sYT10LmRyYXdpbmdCdWZmZXJXaWR0aCxzPXQuZHJhd2luZ0J1ZmZlckhlaWdodCxsPWUuX3RpbGVQcm92aWRlci5nZXRMZXZlbE1heGltdW1HZW9tZXRyaWNFcnJvcihuLmxldmVsKSx1PU1hdGgubWF4KG8udG9wLW8uYm90dG9tLG8ucmlnaHQtby5sZWZ0KS9NYXRoLm1heChhLHMpO3JldHVybiBsL3V9ZnVuY3Rpb24gcChlLHQpe2UuX3RpbGVzVG9SZW5kZXIucHVzaCh0KSwrK2UuX2RlYnVnLnRpbGVzUmVuZGVyZWR9ZnVuY3Rpb24gdihlLHQpe2Zvcih2YXIgaT0hMCxuPSEwLHI9dC5jaGlsZHJlbixvPTAsYT1yLmxlbmd0aDthPm87KytvKXt2YXIgcz1yW29dO2UuX3RpbGVSZXBsYWNlbWVudFF1ZXVlLm1hcmtUaWxlUmVuZGVyZWQocyksbj1uJiZzLnVwc2FtcGxlZEZyb21QYXJlbnQsaT1pJiZzLnJlbmRlcmFibGUscy5uZWVkc0xvYWRpbmcmJmcoZSxzKX1yZXR1cm4gaXx8KytlLl9kZWJ1Zy50aWxlc1dhaXRpbmdGb3JDaGlsZHJlbixpJiYhbn1mdW5jdGlvbiBnKGUsdCl7ZS5fdGlsZUxvYWRRdWV1ZS5wdXNoKHQpfWZ1bmN0aW9uIF8oZSx0LGkpe3ZhciBuPWUuX3RpbGVMb2FkUXVldWUsbz1lLl90aWxlUHJvdmlkZXI7aWYoMCE9PW4ubGVuZ3RoKXtlLl90aWxlUmVwbGFjZW1lbnRRdWV1ZS50cmltVGlsZXMoZS50aWxlQ2FjaGVTaXplKTtmb3IodmFyIGE9cigpLHM9ZS5fbG9hZFF1ZXVlVGltZVNsaWNlLGw9YStzLHU9bi5sZW5ndGgtMSxjPXU7Yz49MDstLWMpe3ZhciBkPW5bY107aWYoZS5fdGlsZVJlcGxhY2VtZW50UXVldWUubWFya1RpbGVSZW5kZXJlZChkKSxvLmxvYWRUaWxlKHQsaSxkKSxyKCk+PWwpYnJlYWt9fX1mdW5jdGlvbiB5KGUsdCl7cmV0dXJuIGUuX2Rpc3RhbmNlLXQuX2Rpc3RhbmNlfWZ1bmN0aW9uIEMoZSx0LGksbil7dmFyIHI9ZS5fdGlsZVByb3ZpZGVyLG89ZS5fdGlsZXNUb1JlbmRlcjtvLnNvcnQoeSk7Zm9yKHZhciBhPTAscz1vLmxlbmd0aDtzPmE7KythKXIuc2hvd1RpbGVUaGlzRnJhbWUob1thXSx0LGksbil9dmFyIHc9ZnVuY3Rpb24odCl7dGhpcy5fdGlsZVByb3ZpZGVyPXQudGlsZVByb3ZpZGVyLHRoaXMuX3RpbGVQcm92aWRlci5xdWFkdHJlZT10aGlzLHRoaXMuX2RlYnVnPXtlbmFibGVEZWJ1Z091dHB1dDohMSxtYXhEZXB0aDowLHRpbGVzVmlzaXRlZDowLHRpbGVzQ3VsbGVkOjAsdGlsZXNSZW5kZXJlZDowLHRpbGVzV2FpdGluZ0ZvckNoaWxkcmVuOjAsbGFzdE1heERlcHRoOi0xLGxhc3RUaWxlc1Zpc2l0ZWQ6LTEsbGFzdFRpbGVzQ3VsbGVkOi0xLGxhc3RUaWxlc1JlbmRlcmVkOi0xLGxhc3RUaWxlc1dhaXRpbmdGb3JDaGlsZHJlbjotMSxzdXNwZW5kTG9kVXBkYXRlOiExfTt2YXIgaT10aGlzLl90aWxlUHJvdmlkZXIudGlsaW5nU2NoZW1lLG49aS5lbGxpcHNvaWQ7dGhpcy5fdGlsZXNUb1JlbmRlcj1bXSx0aGlzLl90aWxlVHJhdmVyc2FsUXVldWU9bmV3IG8sdGhpcy5fdGlsZUxvYWRRdWV1ZT1bXSx0aGlzLl90aWxlUmVwbGFjZW1lbnRRdWV1ZT1uZXcgZCx0aGlzLl9sZXZlbFplcm9UaWxlcz12b2lkIDAsdGhpcy5fbGV2ZWxaZXJvVGlsZXNSZWFkeT0hMSx0aGlzLl9sb2FkUXVldWVUaW1lU2xpY2U9NSx0aGlzLm1heGltdW1TY3JlZW5TcGFjZUVycm9yPWUodC5tYXhpbXVtU2NyZWVuU3BhY2VFcnJvciwyKSx0aGlzLnRpbGVDYWNoZVNpemU9ZSh0LnRpbGVDYWNoZVNpemUsMTAwKSx0aGlzLl9vY2NsdWRlcnM9bmV3IHMoe2VsbGlwc29pZDpufSl9O3JldHVybiBpKHcucHJvdG90eXBlLHt0aWxlUHJvdmlkZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlUHJvdmlkZXJ9fX0pLHcucHJvdG90eXBlLmludmFsaWRhdGVBbGxUaWxlcz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3RpbGVSZXBsYWNlbWVudFF1ZXVlO2UuaGVhZD12b2lkIDAsZS50YWlsPXZvaWQgMCxlLmNvdW50PTA7dmFyIGk9dGhpcy5fbGV2ZWxaZXJvVGlsZXM7aWYodChpKSlmb3IodmFyIG49MDtuPGkubGVuZ3RoOysrbilpW25dLmZyZWVSZXNvdXJjZXMoKTt0aGlzLl9sZXZlbFplcm9UaWxlcz12b2lkIDB9LHcucHJvdG90eXBlLmZvckVhY2hMb2FkZWRUaWxlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgaT10aGlzLl90aWxlUmVwbGFjZW1lbnRRdWV1ZS5oZWFkO3QoaSk7KWkuc3RhdGUhPT11LlNUQVJUJiZlKGkpLGk9aS5yZXBsYWNlbWVudE5leHR9LHcucHJvdG90eXBlLmZvckVhY2hSZW5kZXJlZFRpbGU9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMuX3RpbGVzVG9SZW5kZXIsaT0wLG49dC5sZW5ndGg7bj5pOysraSllKHRbaV0pfSx3LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX3RpbGVQcm92aWRlci5iZWdpblVwZGF0ZShlLHQsaSksaCh0aGlzLGUsdCksXyh0aGlzLGUsdCksQyh0aGlzLGUsdCxpKSx0aGlzLl90aWxlUHJvdmlkZXIuZW5kVXBkYXRlKGUsdCxpKX0sdy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuX3RpbGVQcm92aWRlcj10aGlzLl90aWxlUHJvdmlkZXImJnRoaXMuX3RpbGVQcm92aWRlci5kZXN0cm95KCl9LHd9KSxkZWZpbmUoIlNjZW5lL0dsb2JlIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0JvdW5kaW5nU3BoZXJlIiwiLi4vQ29yZS9idWlsZE1vZHVsZVVybCIsIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvQ2FydG9ncmFwaGljIiwiLi4vQ29yZS9jb21iaW5lIiwiLi4vQ29yZS9Db21wb25lbnREYXRhdHlwZSIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRWxsaXBzb2lkIiwiLi4vQ29yZS9FbGxpcHNvaWRUZXJyYWluUHJvdmlkZXIiLCIuLi9Db3JlL0ZlYXR1cmVEZXRlY3Rpb24iLCIuLi9Db3JlL0dlb2dyYXBoaWNQcm9qZWN0aW9uIiwiLi4vQ29yZS9HZW9tZXRyeSIsIi4uL0NvcmUvR2VvbWV0cnlBdHRyaWJ1dGUiLCIuLi9Db3JlL0ludGVyc2VjdCIsIi4uL0NvcmUvSW50ZXJzZWN0aW9uVGVzdHMiLCIuLi9Db3JlL2xvYWRJbWFnZSIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvT2NjbHVkZXIiLCIuLi9Db3JlL1ByaW1pdGl2ZVR5cGUiLCIuLi9Db3JlL1JheSIsIi4uL0NvcmUvUmVjdGFuZ2xlIiwiLi4vQ29yZS9UcmFuc2Zvcm1zIiwiLi4vUmVuZGVyZXIvQnVmZmVyVXNhZ2UiLCIuLi9SZW5kZXJlci9DbGVhckNvbW1hbmQiLCIuLi9SZW5kZXJlci9jcmVhdGVTaGFkZXJTb3VyY2UiLCIuLi9SZW5kZXJlci9EcmF3Q29tbWFuZCIsIi4uL1NoYWRlcnMvR2xvYmVGUyIsIi4uL1NoYWRlcnMvR2xvYmVGU0RlcHRoIiwiLi4vU2hhZGVycy9HbG9iZUZTUG9sZSIsIi4uL1NoYWRlcnMvR2xvYmVWUyIsIi4uL1NoYWRlcnMvR2xvYmVWU0RlcHRoIiwiLi4vU2hhZGVycy9HbG9iZVZTUG9sZSIsIi4uL1RoaXJkUGFydHkvd2hlbiIsIi4vRGVwdGhGdW5jdGlvbiIsIi4vR2xvYmVTdXJmYWNlU2hhZGVyU2V0IiwiLi9HbG9iZVN1cmZhY2VUaWxlUHJvdmlkZXIiLCIuL0ltYWdlcnlMYXllckNvbGxlY3Rpb24iLCIuL1Bhc3MiLCIuL1F1YWR0cmVlUHJpbWl0aXZlIiwiLi9TY2VuZU1vZGUiLCIuL3RlcnJhaW5BdHRyaWJ1dGVMb2NhdGlvbnMiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyx3LEUsYixTLFQseCxBLFAsTSxJLEQsTyxSLEwsTix6LEIsRixWLGssVSxXLEcsSCxxLGosWSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIFgoZSl7cmV0dXJuIGZ1bmN0aW9uKGksbil7dmFyIHI9dC5kaXN0YW5jZVNxdWFyZWRUbyhpLnBpY2tCb3VuZGluZ1NwaGVyZSxlKSxvPXQuZGlzdGFuY2VTcXVhcmVkVG8obi5waWNrQm91bmRpbmdTcGhlcmUsZSk7cmV0dXJuIHItb319ZnVuY3Rpb24gWihlLHQpe3ZhciBpPWUuX2VsbGlwc29pZC5yYWRpaSxuPXQuY2FtZXJhLnBvc2l0aW9uV0Msbz1yLm11bHRpcGx5Q29tcG9uZW50cyhlLl9lbGxpcHNvaWQub25lT3ZlclJhZGlpLG4sYXQpLGE9ci5tYWduaXR1ZGUobykscz1yLm5vcm1hbGl6ZShvLHN0KSxsPXIubm9ybWFsaXplKHIuY3Jvc3Moci5VTklUX1osbyxsdCksbHQpLHU9ci5ub3JtYWxpemUoci5jcm9zcyhzLGwsdXQpLHV0KSxjPU1hdGguc3FydChyLm1hZ25pdHVkZVNxdWFyZWQobyktMSksZD1yLm11bHRpcGx5QnlTY2FsYXIocywxL2EsYXQpLGg9Yy9hLG09ci5tdWx0aXBseUJ5U2NhbGFyKGwsaCxzdCksZj1yLm11bHRpcGx5QnlTY2FsYXIodSxoLGx0KSxwPXIuYWRkKGQsZix1dCk7ci5zdWJ0cmFjdChwLG0scCksci5tdWx0aXBseUNvbXBvbmVudHMoaSxwLHApLHIucGFjayhwLG90LDApO3ZhciB2PXIuc3VidHJhY3QoZCxmLHV0KTtyLnN1YnRyYWN0KHYsbSx2KSxyLm11bHRpcGx5Q29tcG9uZW50cyhpLHYsdiksci5wYWNrKHYsb3QsMyk7dmFyIGc9ci5hZGQoZCxmLHV0KTtyLmFkZChnLG0sZyksci5tdWx0aXBseUNvbXBvbmVudHMoaSxnLGcpLHIucGFjayhnLG90LDYpO3ZhciBfPXIuc3VidHJhY3QoZCxmLHV0KTtyZXR1cm4gci5hZGQoXyxtLF8pLHIubXVsdGlwbHlDb21wb25lbnRzKGksXyxfKSxyLnBhY2soXyxvdCw5KSxvdH1mdW5jdGlvbiBKKHQsaSxuLGEscyxsKXt2YXIgdSxjPXQuX2VsbGlwc29pZC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihuZXcgbygwLGEpKSxkPXQuX2VsbGlwc29pZC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihuZXcgbyhNYXRoLlBJLGEpKSxoPS41KnIubWFnbml0dWRlKHIuc3VidHJhY3QoYyxkLGN0KSxjdCksbT10Ll9lbGxpcHNvaWQuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4obmV3IG8oMCxuKSksZj1pLmNhbWVyYS5kaXJlY3Rpb247dT0xLXIuZG90KGh0LGYpPEUuRVBTSUxPTjY/ci5VTklUX1g6ci5ub3JtYWxpemUoci5jcm9zcyhmLHIuVU5JVF9aLGN0KSxjdCk7dmFyIHA9ci5hZGQobSxyLm11bHRpcGx5QnlTY2FsYXIodSxoLGN0KSxjdCksdj1yLmFkZChtLHIubXVsdGlwbHlCeVNjYWxhcihyLm5vcm1hbGl6ZShyLmNyb3NzKHIuVU5JVF9aLHUsZHQpLGR0KSxoLGR0KSxkdCk7UC5wb2ludFRvR0xXaW5kb3dDb29yZGluYXRlcyhzLGwsbSxtKSxQLnBvaW50VG9HTFdpbmRvd0Nvb3JkaW5hdGVzKHMsbCxwLHApLFAucG9pbnRUb0dMV2luZG93Q29vcmRpbmF0ZXMocyxsLHYsdik7dmFyIGc9TWF0aC5mbG9vcihNYXRoLm1heChyLmRpc3RhbmNlKHYsbSksci5kaXN0YW5jZShwLG0pKSksXz1nO3JldHVybiBuZXcgZShNYXRoLmZsb29yKG0ueCktZyxNYXRoLmZsb29yKG0ueSktXywyKmcsMipfKX1mdW5jdGlvbiBLKGUsaSxuKXt2YXIgcj1lLnRlcnJhaW5Qcm92aWRlcjtpZihuLm1vZGU9PT1qLlNDRU5FM0QmJnIucmVhZHkpe3ZhciBvPXIudGlsaW5nU2NoZW1lLnJlY3RhbmdsZSxsPWkudW5pZm9ybVN0YXRlLnZpZXdQcm9qZWN0aW9uLGM9bXQ7Yy53aWR0aD1pLmRyYXdpbmdCdWZmZXJXaWR0aCxjLmhlaWdodD1pLmRyYXdpbmdCdWZmZXJIZWlnaHQ7dmFyIGQsaCxtLGYscCx2LEMsdz1iLmNvbXB1dGVWaWV3cG9ydFRyYW5zZm9ybWF0aW9uKGMsMCwxLGZ0KSxUPS4wNSx4PWUuX29jY2x1ZGVyO28ubm9ydGg8RS5QSV9PVkVSX1RXTyYmKGQ9bmV3IEEoLU1hdGguUEksby5ub3J0aCxNYXRoLlBJLEUuUElfT1ZFUl9UV08pLGg9dC5mcm9tUmVjdGFuZ2xlM0QoZCxlLl9lbGxpcHNvaWQpLG09bi5jdWxsaW5nVm9sdW1lLmNvbXB1dGVWaXNpYmlsaXR5KGgpPT09eS5PVVRTSURFLGY9Uy5jb21wdXRlT2NjbHVkZWVQb2ludEZyb21SZWN0YW5nbGUoZCxlLl9lbGxpcHNvaWQpLHA9ZiYmIXguaXNQb2ludFZpc2libGUoZiwwKXx8IXguaXNCb3VuZGluZ1NwaGVyZVZpc2libGUoaCksZS5fZHJhd05vcnRoUG9sZT0hbSYmIXAsZS5fZHJhd05vcnRoUG9sZSYmKEM9SihlLG4sZC5ub3J0aCxkLnNvdXRoLVQsbCx3KSxwdFswXT1DLngscHRbMV09Qy55LHB0WzJdPUMueCtDLndpZHRoLHB0WzNdPUMueSxwdFs0XT1DLngrQy53aWR0aCxwdFs1XT1DLnkrQy5oZWlnaHQscHRbNl09Qy54LHB0WzddPUMueStDLmhlaWdodCx1KGUuX25vcnRoUG9sZUNvbW1hbmQudmVydGV4QXJyYXkpP2UuX25vcnRoUG9sZUNvbW1hbmQudmVydGV4QXJyYXkuZ2V0QXR0cmlidXRlKDApLnZlcnRleEJ1ZmZlci5jb3B5RnJvbUFycmF5VmlldyhwdCk6KGUuX25vcnRoUG9sZUNvbW1hbmQuYm91bmRpbmdWb2x1bWU9dC5mcm9tUmVjdGFuZ2xlM0QoZCxlLl9lbGxpcHNvaWQpLHY9bmV3IGcoe2F0dHJpYnV0ZXM6e3Bvc2l0aW9uOm5ldyBfKHtjb21wb25lbnREYXRhdHlwZTpzLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Mix2YWx1ZXM6cHR9KX19KSxlLl9ub3J0aFBvbGVDb21tYW5kLnZlcnRleEFycmF5PWkuY3JlYXRlVmVydGV4QXJyYXlGcm9tR2VvbWV0cnkoe2dlb21ldHJ5OnYsYXR0cmlidXRlTG9jYXRpb25zOntwb3NpdGlvbjowfSxidWZmZXJVc2FnZTpNLlNUUkVBTV9EUkFXfSkpKSksby5zb3V0aD4tRS5QSV9PVkVSX1RXTyYmKGQ9bmV3IEEoLU1hdGguUEksLUUuUElfT1ZFUl9UV08sTWF0aC5QSSxvLnNvdXRoKSxoPXQuZnJvbVJlY3RhbmdsZTNEKGQsZS5fZWxsaXBzb2lkKSxtPW4uY3VsbGluZ1ZvbHVtZS5jb21wdXRlVmlzaWJpbGl0eShoKT09PXkuT1VUU0lERSxmPVMuY29tcHV0ZU9jY2x1ZGVlUG9pbnRGcm9tUmVjdGFuZ2xlKGQsZS5fZWxsaXBzb2lkKSxwPWYmJiF4LmlzUG9pbnRWaXNpYmxlKGYpfHwheC5pc0JvdW5kaW5nU3BoZXJlVmlzaWJsZShoKSxlLl9kcmF3U291dGhQb2xlPSFtJiYhcCxlLl9kcmF3U291dGhQb2xlJiYoQz1KKGUsbixkLnNvdXRoLGQubm9ydGgrVCxsLHcpLHB0WzBdPUMueCxwdFsxXT1DLnkscHRbMl09Qy54K0Mud2lkdGgscHRbM109Qy55LHB0WzRdPUMueCtDLndpZHRoLHB0WzVdPUMueStDLmhlaWdodCxwdFs2XT1DLngscHRbN109Qy55K0MuaGVpZ2h0LHUoZS5fc291dGhQb2xlQ29tbWFuZC52ZXJ0ZXhBcnJheSk/ZS5fc291dGhQb2xlQ29tbWFuZC52ZXJ0ZXhBcnJheS5nZXRBdHRyaWJ1dGUoMCkudmVydGV4QnVmZmVyLmNvcHlGcm9tQXJyYXlWaWV3KHB0KTooZS5fc291dGhQb2xlQ29tbWFuZC5ib3VuZGluZ1ZvbHVtZT10LmZyb21SZWN0YW5nbGUzRChkLGUuX2VsbGlwc29pZCksdj1uZXcgZyh7YXR0cmlidXRlczp7cG9zaXRpb246bmV3IF8oe2NvbXBvbmVudERhdGF0eXBlOnMuRkxPQVQsY29tcG9uZW50c1BlckF0dHJpYnV0ZToyLHZhbHVlczpwdH0pfX0pLGUuX3NvdXRoUG9sZUNvbW1hbmQudmVydGV4QXJyYXk9aS5jcmVhdGVWZXJ0ZXhBcnJheUZyb21HZW9tZXRyeSh7Z2VvbWV0cnk6dixhdHRyaWJ1dGVMb2NhdGlvbnM6e3Bvc2l0aW9uOjB9LGJ1ZmZlclVzYWdlOk0uU1RSRUFNX0RSQVd9KSkpKTt2YXIgUD0wLEk9ZS5faW1hZ2VyeUxheWVyQ29sbGVjdGlvbi5sZW5ndGg+MD9lLl9pbWFnZXJ5TGF5ZXJDb2xsZWN0aW9uLmdldCgwKTp2b2lkIDA7dShJKSYmdShJLmltYWdlcnlQcm92aWRlcikmJnUoSS5pbWFnZXJ5UHJvdmlkZXIuZ2V0UG9sZUludGVuc2l0eSkmJihQPUkuaW1hZ2VyeVByb3ZpZGVyLmdldFBvbGVJbnRlbnNpdHkoKSk7dmFyIEQ9e3VfZGF5SW50ZW5zaXR5OmZ1bmN0aW9uKCl7cmV0dXJuIFB9fTtpZighdShlLl9ub3J0aFBvbGVDb21tYW5kLnVuaWZvcm1NYXApKXt2YXIgTz1hKEQse3VfY29sb3I6ZnVuY3Rpb24oKXtyZXR1cm4gZS5ub3J0aFBvbGVDb2xvcn19KTtlLl9ub3J0aFBvbGVDb21tYW5kLnVuaWZvcm1NYXA9YShPLGUuX2RyYXdVbmlmb3Jtcyl9aWYoIXUoZS5fc291dGhQb2xlQ29tbWFuZC51bmlmb3JtTWFwKSl7dmFyIFI9YShELHt1X2NvbG9yOmZ1bmN0aW9uKCl7cmV0dXJuIGUuc291dGhQb2xlQ29sb3J9fSk7ZS5fc291dGhQb2xlQ29tbWFuZC51bmlmb3JtTWFwPWEoUixlLl9kcmF3VW5pZm9ybXMpfX19dmFyIFE9ZnVuY3Rpb24oZSl7ZT1sKGUsbS5XR1M4NCk7dmFyIG89bmV3IGYoe2VsbGlwc29pZDplfSksYT1uZXcgRzt0aGlzLl9lbGxpcHNvaWQ9ZSx0aGlzLl9pbWFnZXJ5TGF5ZXJDb2xsZWN0aW9uPWEsdGhpcy5fc3VyZmFjZVNoYWRlclNldD1uZXcgVSx0aGlzLl9zdXJmYWNlPW5ldyBxKHt0aWxlUHJvdmlkZXI6bmV3IFcoe3RlcnJhaW5Qcm92aWRlcjpvLGltYWdlcnlMYXllcnM6YSxzdXJmYWNlU2hhZGVyU2V0OnRoaXMuX3N1cmZhY2VTaGFkZXJTZXR9KX0pLHRoaXMuX29jY2x1ZGVyPW5ldyBTKG5ldyB0KHIuWkVSTyxlLm1pbmltdW1SYWRpdXMpLHIuWkVSTyksdGhpcy5fcnNDb2xvcj12b2lkIDAsdGhpcy5fcnNDb2xvcldpdGhvdXREZXB0aFRlc3Q9dm9pZCAwLHRoaXMuX2NsZWFyRGVwdGhDb21tYW5kPW5ldyBJKHtkZXB0aDoxLHN0ZW5jaWw6MCxvd25lcjp0aGlzfSksdGhpcy5fZGVwdGhDb21tYW5kPW5ldyBPKHtib3VuZGluZ1ZvbHVtZTpuZXcgdChyLlpFUk8sZS5tYXhpbXVtUmFkaXVzKSxwYXNzOkguT1BBUVVFLG93bmVyOnRoaXN9KSx0aGlzLl9ub3J0aFBvbGVDb21tYW5kPW5ldyBPKHtwYXNzOkguT1BBUVVFLG93bmVyOnRoaXN9KSx0aGlzLl9zb3V0aFBvbGVDb21tYW5kPW5ldyBPKHtwYXNzOkguT1BBUVVFLG93bmVyOnRoaXN9KSx0aGlzLl9kcmF3Tm9ydGhQb2xlPSExLHRoaXMuX2RyYXdTb3V0aFBvbGU9ITEsdGhpcy5fbW9kZT1qLlNDRU5FM0QsdGhpcy50ZXJyYWluUHJvdmlkZXI9byx0aGlzLm5vcnRoUG9sZUNvbG9yPW5ldyByKDIvMjU1LDYvMjU1LDE4LzI1NSksdGhpcy5zb3V0aFBvbGVDb2xvcj1uZXcgcigxLDEsMSksdGhpcy5zaG93PSEwLHRoaXMub2NlYW5Ob3JtYWxNYXBVcmw9aSgiQXNzZXRzL1RleHR1cmVzL3dhdGVyTm9ybWFsc1NtYWxsLmpwZyIpLHRoaXMuX29jZWFuTm9ybWFsTWFwVXJsPXZvaWQgMCx0aGlzLl9vY2Vhbk5vcm1hbE1hcENoYW5nZWQ9ITEsdGhpcy5kZXB0aFRlc3RBZ2FpbnN0VGVycmFpbj0hMSx0aGlzLm1heGltdW1TY3JlZW5TcGFjZUVycm9yPTIsdGhpcy50aWxlQ2FjaGVTaXplPTEwMCx0aGlzLmVuYWJsZUxpZ2h0aW5nPSExLHRoaXMuX2VuYWJsZUxpZ2h0aW5nPSExLHRoaXMubGlnaHRpbmdGYWRlT3V0RGlzdGFuY2U9NjVlNSx0aGlzLmxpZ2h0aW5nRmFkZUluRGlzdGFuY2U9OWU2LHRoaXMuc2hvd1dhdGVyRWZmZWN0PSEwLHRoaXMuX29jZWFuTm9ybWFsTWFwPXZvaWQgMCx0aGlzLl96b29tZWRPdXRPY2VhblNwZWN1bGFySW50ZW5zaXR5PS41LHRoaXMuX2hhc1dhdGVyTWFzaz0hMSx0aGlzLl9oYXNWZXJ0ZXhOb3JtYWxzPSExLHRoaXMuX2xpZ2h0aW5nRmFkZURpc3RhbmNlPW5ldyBuKHRoaXMubGlnaHRpbmdGYWRlT3V0RGlzdGFuY2UsdGhpcy5saWdodGluZ0ZhZGVJbkRpc3RhbmNlKTt2YXIgcz10aGlzO3RoaXMuX2RyYXdVbmlmb3Jtcz17dV96b29tZWRPdXRPY2VhblNwZWN1bGFySW50ZW5zaXR5OmZ1bmN0aW9uKCl7cmV0dXJuIHMuX3pvb21lZE91dE9jZWFuU3BlY3VsYXJJbnRlbnNpdHl9LHVfb2NlYW5Ob3JtYWxNYXA6ZnVuY3Rpb24oKXtyZXR1cm4gcy5fb2NlYW5Ob3JtYWxNYXB9LHVfbGlnaHRpbmdGYWRlRGlzdGFuY2U6ZnVuY3Rpb24oKXtyZXR1cm4gcy5fbGlnaHRpbmdGYWRlRGlzdGFuY2V9fX07YyhRLnByb3RvdHlwZSx7ZWxsaXBzb2lkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZWxsaXBzb2lkfX0saW1hZ2VyeUxheWVyczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ltYWdlcnlMYXllckNvbGxlY3Rpb259fSxiYXNlQ29sb3I6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdXJmYWNlLnRpbGVQcm92aWRlci5iYXNlQ29sb3J9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9zdXJmYWNlLnRpbGVQcm92aWRlci5iYXNlQ29sb3I9ZX19fSk7dmFyICQ9W10sZXQ9e3N0YXJ0OjAsc3RvcDowfTtRLnByb3RvdHlwZS5waWNrPWZ1bmN0aW9uKGUsaSxuKXt2YXIgbz1pLm1vZGUsYT1pLm1hcFByb2plY3Rpb24scz0kO3MubGVuZ3RoPTA7dmFyIGwsYyxkPXRoaXMuX3N1cmZhY2UuX3RpbGVzVG9SZW5kZXIsaD1kLmxlbmd0aDtmb3IoYz0wO2g+YzsrK2Mpe2w9ZFtjXTt2YXIgbT1sLmRhdGE7aWYodShtKSl7dmFyIGY9bS5waWNrQm91bmRpbmdTcGhlcmU7byE9PWouU0NFTkUzRD8odC5mcm9tUmVjdGFuZ2xlV2l0aEhlaWdodHMyRChsLnJlY3RhbmdsZSxhLG0ubWluaW11bUhlaWdodCxtLm1heGltdW1IZWlnaHQsZiksci5mcm9tRWxlbWVudHMoZi5jZW50ZXIueixmLmNlbnRlci54LGYuY2VudGVyLnksZi5jZW50ZXIpKTp0LmNsb25lKG0uYm91bmRpbmdTcGhlcmUzRCxmKTt2YXIgcD1DLnJheVNwaGVyZShlLGYsZXQpO3UocCkmJnMucHVzaChtKX19cy5zb3J0KFgoZS5vcmlnaW4pKTt2YXIgdjtmb3IoaD1zLmxlbmd0aCxjPTA7aD5jJiYodj1zW2NdLnBpY2soZSxpLCEwLG4pLCF1KHYpKTsrK2MpO3JldHVybiB2fTt2YXIgdHQ9bmV3IHIsaXQ9bmV3IHIsbnQ9bmV3IG8scnQ9bmV3IHg7US5wcm90b3R5cGUuZ2V0SGVpZ2h0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3N1cmZhY2UuX2xldmVsWmVyb1RpbGVzO2lmKHUodCkpe3ZhciBpLG4sbz10Lmxlbmd0aDtmb3Iobj0wO28+biYmKGk9dFtuXSwhQS5jb250YWlucyhpLnJlY3RhbmdsZSxlKSk7KytuKTtpZighdShpKXx8IUEuY29udGFpbnMoaS5yZWN0YW5nbGUsZSkpcmV0dXJuIHZvaWQgMDtmb3IoO2kucmVuZGVyYWJsZTspe3ZhciBhPWkuY2hpbGRyZW47Zm9yKG89YS5sZW5ndGgsbj0wO28+biYmKGk9YVtuXSwhQS5jb250YWlucyhpLnJlY3RhbmdsZSxlKSk7KytuKTt9Zm9yKDt1KGkpJiYoIXUoaS5kYXRhKXx8IXUoaS5kYXRhLnBpY2tUZXJyYWluKSk7KWk9aS5wYXJlbnQ7aWYoIXUoaSkpcmV0dXJuIHZvaWQgMDt2YXIgcz10aGlzLl9zdXJmYWNlLl90aWxlUHJvdmlkZXIudGlsaW5nU2NoZW1lLmVsbGlwc29pZCxsPXMuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oZSx0dCksYz1ydDtyLm5vcm1hbGl6ZShsLGMuZGlyZWN0aW9uKTt2YXIgZD1pLmRhdGEucGljayhjLHZvaWQgMCwhMSxpdCk7cmV0dXJuIHUoZCk/cy5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhkLG50KS5oZWlnaHQ6dm9pZCAwfX07dmFyIG90PXAuc3VwcG9ydHNUeXBlZEFycmF5cygpP25ldyBGbG9hdDMyQXJyYXkoMTIpOltdLGF0PW5ldyByLHN0PW5ldyByLGx0PW5ldyByLHV0PW5ldyByLGN0PW5ldyByLGR0PW5ldyByLGh0PXIubmVnYXRlKHIuVU5JVF9aLG5ldyByKSxtdD1uZXcgZSxmdD1uZXcgYixwdD1wLnN1cHBvcnRzVHlwZWRBcnJheXMoKT9uZXcgRmxvYXQzMkFycmF5KDgpOltdO3JldHVybiBRLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0LGkpe2lmKHRoaXMuc2hvdyl7dmFyIG49ZS5kcmF3aW5nQnVmZmVyV2lkdGgscj1lLmRyYXdpbmdCdWZmZXJIZWlnaHQ7aWYoMCE9PW4mJjAhPT1yKXt2YXIgbz10Lm1vZGUsYT10Lm1hcFByb2plY3Rpb24sbD0hMTt0aGlzLl9tb2RlPT09byYmdSh0aGlzLl9yc0NvbG9yKXx8KGw9ITAsbz09PWouU0NFTkUzRHx8bz09PWouQ09MVU1CVVNfVklFVz8odGhpcy5fcnNDb2xvcj1lLmNyZWF0ZVJlbmRlclN0YXRlKHtjdWxsOntlbmFibGVkOiEwfSxkZXB0aFRlc3Q6e2VuYWJsZWQ6ITB9fSksdGhpcy5fcnNDb2xvcldpdGhvdXREZXB0aFRlc3Q9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7Y3VsbDp7ZW5hYmxlZDohMH19KSx0aGlzLl9kZXB0aENvbW1hbmQucmVuZGVyU3RhdGU9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7Y3VsbDp7ZW5hYmxlZDohMH0sZGVwdGhUZXN0OntlbmFibGVkOiEwLGZ1bmM6ay5BTFdBWVN9LGNvbG9yTWFzazp7cmVkOiExLGdyZWVuOiExLGJsdWU6ITEsYWxwaGE6ITF9fSkpOih0aGlzLl9yc0NvbG9yPWUuY3JlYXRlUmVuZGVyU3RhdGUoe2N1bGw6e2VuYWJsZWQ6ITB9fSksdGhpcy5fcnNDb2xvcldpdGhvdXREZXB0aFRlc3Q9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7Y3VsbDp7ZW5hYmxlZDohMH19KSx0aGlzLl9kZXB0aENvbW1hbmQucmVuZGVyU3RhdGU9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7Y3VsbDp7ZW5hYmxlZDohMH19KSkpLHRoaXMuX21vZGU9bzt2YXIgYz10aGlzLl9ub3J0aFBvbGVDb21tYW5kLGQ9dGhpcy5fc291dGhQb2xlQ29tbWFuZDtjLnJlbmRlclN0YXRlPXRoaXMuX3JzQ29sb3JXaXRob3V0RGVwdGhUZXN0LGQucmVuZGVyU3RhdGU9dGhpcy5fcnNDb2xvcldpdGhvdXREZXB0aFRlc3Q7dmFyIGg9Wih0aGlzLHQpO2lmKHRoaXMuX2RlcHRoQ29tbWFuZC52ZXJ0ZXhBcnJheSl0aGlzLl9kZXB0aENvbW1hbmQudmVydGV4QXJyYXkuZ2V0QXR0cmlidXRlKDApLnZlcnRleEJ1ZmZlci5jb3B5RnJvbUFycmF5VmlldyhoKTtlbHNle3ZhciBtPW5ldyBnKHthdHRyaWJ1dGVzOntwb3NpdGlvbjpuZXcgXyh7Y29tcG9uZW50RGF0YXR5cGU6cy5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOmh9KX0saW5kaWNlczpbMCwxLDIsMiwxLDNdLHByaW1pdGl2ZVR5cGU6VC5UUklBTkdMRVN9KTt0aGlzLl9kZXB0aENvbW1hbmQudmVydGV4QXJyYXk9ZS5jcmVhdGVWZXJ0ZXhBcnJheUZyb21HZW9tZXRyeSh7Z2VvbWV0cnk6bSxhdHRyaWJ1dGVMb2NhdGlvbnM6e3Bvc2l0aW9uOjB9LGJ1ZmZlclVzYWdlOk0uRFlOQU1JQ19EUkFXfSl9dSh0aGlzLl9kZXB0aENvbW1hbmQuc2hhZGVyUHJvZ3JhbSl8fCh0aGlzLl9kZXB0aENvbW1hbmQuc2hhZGVyUHJvZ3JhbT1lLmNyZWF0ZVNoYWRlclByb2dyYW0oQixMLHtwb3NpdGlvbjowfSkpO3ZhciBmPXRoaXMuX3N1cmZhY2UscD1mLnRpbGVQcm92aWRlcix5PXRoaXMudGVycmFpblByb3ZpZGVyLEM9dGhpcy5zaG93V2F0ZXJFZmZlY3QmJnkucmVhZHkmJnkuaGFzV2F0ZXJNYXNrO2lmKEMmJnRoaXMub2NlYW5Ob3JtYWxNYXBVcmwhPT10aGlzLl9vY2Vhbk5vcm1hbE1hcFVybCl7dmFyIEU9dGhpcy5vY2Vhbk5vcm1hbE1hcFVybDt0aGlzLl9vY2Vhbk5vcm1hbE1hcFVybD1FO3ZhciBiPXRoaXM7Vih3KEUpLGZ1bmN0aW9uKHQpe0U9PT1iLm9jZWFuTm9ybWFsTWFwVXJsJiYoYi5fb2NlYW5Ob3JtYWxNYXA9Yi5fb2NlYW5Ob3JtYWxNYXAmJmIuX29jZWFuTm9ybWFsTWFwLmRlc3Ryb3koKSxiLl9vY2Vhbk5vcm1hbE1hcD1lLmNyZWF0ZVRleHR1cmUyRCh7c291cmNlOnR9KSxiLl9vY2Vhbk5vcm1hbE1hcENoYW5nZWQ9ITApfSl9dmFyIFM9eS5yZWFkeSYmeS5oYXNWZXJ0ZXhOb3JtYWxzLHg9dGhpcy5lbmFibGVMaWdodGluZztpZighdShjLnNoYWRlclByb2dyYW0pfHwhdShkLnNoYWRlclByb2dyYW0pfHxsfHx0aGlzLl9vY2Vhbk5vcm1hbE1hcENoYW5nZWR8fHRoaXMuX2hhc1dhdGVyTWFzayE9PUN8fHRoaXMuX2hhc1ZlcnRleE5vcm1hbHMhPT1TfHx0aGlzLl9lbmFibGVMaWdodGluZyE9PXgpe3ZhciBBLFA9InZlYzQgZ2V0UG9zaXRpb24odmVjMyBwb3NpdGlvbjNEV0MpIHsgcmV0dXJuIGdldFBvc2l0aW9uM0RNb2RlKHBvc2l0aW9uM0RXQyk7IH0iLEk9InZlYzQgZ2V0UG9zaXRpb24odmVjMyBwb3NpdGlvbjNEV0MpIHsgcmV0dXJuIGdldFBvc2l0aW9uMkRNb2RlKHBvc2l0aW9uM0RXQyk7IH0iLE89InZlYzQgZ2V0UG9zaXRpb24odmVjMyBwb3NpdGlvbjNEV0MpIHsgcmV0dXJuIGdldFBvc2l0aW9uQ29sdW1idXNWaWV3TW9kZShwb3NpdGlvbjNEV0MpOyB9IixVPSJ2ZWM0IGdldFBvc2l0aW9uKHZlYzMgcG9zaXRpb24zRFdDKSB7IHJldHVybiBnZXRQb3NpdGlvbk1vcnBoaW5nTW9kZShwb3NpdGlvbjNEV0MpOyB9Ijtzd2l0Y2gobyl7Y2FzZSBqLlNDRU5FM0Q6QT1QO2JyZWFrO2Nhc2Ugai5TQ0VORTJEOkE9STticmVhaztjYXNlIGouQ09MVU1CVVNfVklFVzpBPU87YnJlYWs7Y2FzZSBqLk1PUlBISU5HOkE9VX12YXIgVyxHPSJmbG9hdCBnZXQyRFlQb3NpdGlvbkZyYWN0aW9uKCkgeyByZXR1cm4gZ2V0MkRHZW9ncmFwaGljWVBvc2l0aW9uRnJhY3Rpb24oKTsgfSIsSD0iZmxvYXQgZ2V0MkRZUG9zaXRpb25GcmFjdGlvbigpIHsgcmV0dXJuIGdldDJETWVyY2F0b3JZUG9zaXRpb25GcmFjdGlvbigpOyB9IjtXPWEgaW5zdGFuY2VvZiB2P0c6SDt2YXIgcT10aGlzLl9zdXJmYWNlU2hhZGVyU2V0LFg9W107QyYmKFgucHVzaCgiU0hPV19SRUZMRUNUSVZFX09DRUFOIiksdSh0aGlzLl9vY2Vhbk5vcm1hbE1hcCkmJlgucHVzaCgiU0hPV19PQ0VBTl9XQVZFUyIpKSx4JiYoUz9YLnB1c2goIkVOQUJMRV9WRVJURVhfTElHSFRJTkciKTpYLnB1c2goIkVOQUJMRV9EQVlOSUdIVF9TSEFESU5HIikpLHEuYmFzZVZlcnRleFNoYWRlclN0cmluZz1EKHtkZWZpbmVzOlgsc291cmNlczpbeixBLFddfSkscS5iYXNlRnJhZ21lbnRTaGFkZXJTdHJpbmc9RCh7ZGVmaW5lczpYLHNvdXJjZXM6W1JdfSkscS5pbnZhbGlkYXRlU2hhZGVycygpO3ZhciBKPWUucmVwbGFjZVNoYWRlclByb2dyYW0oYy5zaGFkZXJQcm9ncmFtLEYsTixZKTtjLnNoYWRlclByb2dyYW09SixkLnNoYWRlclByb2dyYW09Six0aGlzLl9oYXNXYXRlck1hc2s9Qyx0aGlzLl9oYXNWZXJ0ZXhOb3JtYWxzPVMsdGhpcy5fZW5hYmxlTGlnaHRpbmc9eCx0aGlzLl9vY2Vhbk5vcm1hbE1hcENoYW5nZWQ9ITF9dGhpcy5fb2NjbHVkZXIuY2FtZXJhUG9zaXRpb249dC5jYW1lcmEucG9zaXRpb25XQyxLKHRoaXMsZSx0KTt2YXIgUT10LnBhc3NlcztRLnJlbmRlciYmKG89PT1qLlNDRU5FM0QmJih0aGlzLl9kcmF3Tm9ydGhQb2xlJiZpLnB1c2goYyksdGhpcy5fZHJhd1NvdXRoUG9sZSYmaS5wdXNoKGQpKSx0aGlzLl96b29tZWRPdXRPY2VhblNwZWN1bGFySW50ZW5zaXR5PW89PT1qLlNDRU5FM0Q/LjU6MCxmLm1heGltdW1TY3JlZW5TcGFjZUVycm9yPXRoaXMubWF4aW11bVNjcmVlblNwYWNlRXJyb3IsZi50aWxlQ2FjaGVTaXplPXRoaXMudGlsZUNhY2hlU2l6ZSxwLnRlcnJhaW5Qcm92aWRlcj10aGlzLnRlcnJhaW5Qcm92aWRlcixwLmxpZ2h0aW5nRmFkZU91dERpc3RhbmNlPXRoaXMubGlnaHRpbmdGYWRlT3V0RGlzdGFuY2UscC5saWdodGluZ0ZhZGVJbkRpc3RhbmNlPXRoaXMubGlnaHRpbmdGYWRlSW5EaXN0YW5jZSxwLnpvb21lZE91dE9jZWFuU3BlY3VsYXJJbnRlbnNpdHk9dGhpcy5fem9vbWVkT3V0T2NlYW5TcGVjdWxhckludGVuc2l0eSxwLm9jZWFuTm9ybWFsTWFwPXRoaXMuX29jZWFuTm9ybWFsTWFwLGYudXBkYXRlKGUsdCxpKSwobz09PWouU0NFTkUzRHx8bz09PWouQ09MVU1CVVNfVklFVykmJih0aGlzLmRlcHRoVGVzdEFnYWluc3RUZXJyYWlufHwoaS5wdXNoKHRoaXMuX2NsZWFyRGVwdGhDb21tYW5kKSxvPT09ai5TQ0VORTNEJiZpLnB1c2godGhpcy5fZGVwdGhDb21tYW5kKSkpKSxRLnBpY2smJmkucHVzaCh0aGlzLl9kZXB0aENvbW1hbmQpfX19LFEucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LFEucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbm9ydGhQb2xlQ29tbWFuZC52ZXJ0ZXhBcnJheT10aGlzLl9ub3J0aFBvbGVDb21tYW5kLnZlcnRleEFycmF5JiZ0aGlzLl9ub3J0aFBvbGVDb21tYW5kLnZlcnRleEFycmF5LmRlc3Ryb3koKSx0aGlzLl9zb3V0aFBvbGVDb21tYW5kLnZlcnRleEFycmF5PXRoaXMuX3NvdXRoUG9sZUNvbW1hbmQudmVydGV4QXJyYXkmJnRoaXMuX3NvdXRoUG9sZUNvbW1hbmQudmVydGV4QXJyYXkuZGVzdHJveSgpLHRoaXMuX3N1cmZhY2VTaGFkZXJTZXQ9dGhpcy5fc3VyZmFjZVNoYWRlclNldCYmdGhpcy5fc3VyZmFjZVNoYWRlclNldC5kZXN0cm95KCksdGhpcy5fbm9ydGhQb2xlQ29tbWFuZC5zaGFkZXJQcm9ncmFtPXRoaXMuX25vcnRoUG9sZUNvbW1hbmQuc2hhZGVyUHJvZ3JhbSYmdGhpcy5fbm9ydGhQb2xlQ29tbWFuZC5zaGFkZXJQcm9ncmFtLmRlc3Ryb3koKSx0aGlzLl9zb3V0aFBvbGVDb21tYW5kLnNoYWRlclByb2dyYW09dGhpcy5fbm9ydGhQb2xlQ29tbWFuZC5zaGFkZXJQcm9ncmFtLHRoaXMuX2RlcHRoQ29tbWFuZC5zaGFkZXJQcm9ncmFtPXRoaXMuX2RlcHRoQ29tbWFuZC5zaGFkZXJQcm9ncmFtJiZ0aGlzLl9kZXB0aENvbW1hbmQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksdGhpcy5fZGVwdGhDb21tYW5kLnZlcnRleEFycmF5PXRoaXMuX2RlcHRoQ29tbWFuZC52ZXJ0ZXhBcnJheSYmdGhpcy5fZGVwdGhDb21tYW5kLnZlcnRleEFycmF5LmRlc3Ryb3koKSx0aGlzLl9zdXJmYWNlPXRoaXMuX3N1cmZhY2UmJnRoaXMuX3N1cmZhY2UuZGVzdHJveSgpLHRoaXMuX29jZWFuTm9ybWFsTWFwPXRoaXMuX29jZWFuTm9ybWFsTWFwJiZ0aGlzLl9vY2Vhbk5vcm1hbE1hcC5kZXN0cm95KCksZCh0aGlzKX0sUX0pLGRlZmluZSgiQ29yZS9JYXVPcmllbnRhdGlvblBhcmFtZXRlcnMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKGUsdCxpLG4pe3RoaXMucmlnaHRBc2NlbnNpb249ZSx0aGlzLmRlY2xpbmF0aW9uPXQsdGhpcy5yb3RhdGlvbj1pLHRoaXMucm90YXRpb25SYXRlPW59O3JldHVybiBlfSksZGVmaW5lKCJDb3JlL0lhdTIwMDBPcmllbnRhdGlvbiIsWyIuL2RlZmluZWQiLCIuL0lhdU9yaWVudGF0aW9uUGFyYW1ldGVycyIsIi4vSnVsaWFuRGF0ZSIsIi4vTWF0aCIsIi4vVGltZUNvbnN0YW50cyJdLGZ1bmN0aW9uKGUsdCxpLG4scil7InVzZSBzdHJpY3QiO3ZhciBvPXt9LGE9MzIuMTg0LHM9MjQ1MTU0NSxsPS0uMDUyOTkyMSx1PS0uMTA1OTg0MixjPTEzLjAxMjAwMDksZD0xMy4zNDA3MTU0LGg9Ljk4NTYwMDMsbT0yNi40MDU3MDg0LGY9MTMuMDY0OTkzLHA9LjMyODcxNDYsdj0xLjc0ODQ4NzcsZz0tLjE1ODk3NjMsXz0uMDAzNjA5Nix5PS4xNjQzNTczLEM9MTIuOTU5MDA4OCx3PW5ldyBpO3JldHVybiBvLkNvbXB1dGVNb29uPWZ1bmN0aW9uKG8sRSl7ZShvKXx8KG89aS5ub3coKSksdz1pLmFkZFNlY29uZHMobyxhLHcpO3ZhciBiPWkudG90YWxEYXlzKHcpLXMsUz1iL3IuREFZU19QRVJfSlVMSUFOX0NFTlRVUlksVD0oMTI1LjA0NStsKmIpKm4uUkFESUFOU19QRVJfREVHUkVFLHg9KDI1MC4wODkrdSpiKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxBPSgyNjAuMDA4K2MqYikqbi5SQURJQU5TX1BFUl9ERUdSRUUsUD0oMTc2LjYyNStkKmIpKm4uUkFESUFOU19QRVJfREVHUkVFLE09KDM1Ny41MjkraCpiKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxJPSgzMTEuNTg5K20qYikqbi5SQURJQU5TX1BFUl9ERUdSRUUsRD0oMTM0Ljk2MytmKmIpKm4uUkFESUFOU19QRVJfREVHUkVFLE89KDI3Ni42MTcrcCpiKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxSPSgzNC4yMjYrdipiKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxMPSgxNS4xMzQrZypiKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxOPSgxMTkuNzQzK18qYikqbi5SQURJQU5TX1BFUl9ERUdSRUUsej0oMjM5Ljk2MSt5KmIpKm4uUkFESUFOU19QRVJfREVHUkVFLEI9KDI1LjA1MytDKmIpKm4uUkFESUFOU19QRVJfREVHUkVFLEY9TWF0aC5zaW4oVCksVj1NYXRoLnNpbih4KSxrPU1hdGguc2luKEEpLFU9TWF0aC5zaW4oUCksVz1NYXRoLnNpbihNKSxHPU1hdGguc2luKEkpLEg9TWF0aC5zaW4oRCkscT1NYXRoLnNpbihPKSxqPU1hdGguc2luKFIpLFk9TWF0aC5zaW4oTCksWD1NYXRoLnNpbihOKSxaPU1hdGguc2luKHopLEo9TWF0aC5zaW4oQiksSz1NYXRoLmNvcyhUKSxRPU1hdGguY29zKHgpLCQ9TWF0aC5jb3MoQSksZXQ9TWF0aC5jb3MoUCksdHQ9TWF0aC5jb3MoTSksaXQ9TWF0aC5jb3MoSSksbnQ9TWF0aC5jb3MoRCkscnQ9TWF0aC5jb3MoTyksb3Q9TWF0aC5jb3MoUiksYXQ9TWF0aC5jb3MoTCksc3Q9TWF0aC5jb3MoTiksbHQ9TWF0aC5jb3MoeiksdXQ9TWF0aC5jb3MoQiksY3Q9KDI2OS45OTQ5Ky4wMDMxKlMtMy44Nzg3KkYtLjEyMDQqVisuMDcqay0uMDE3MipVKy4wMDcyKkctLjAwNTIqWSsuMDA0MypKKSpuLlJBRElBTlNfUEVSX0RFR1JFRSxkdD0oNjYuNTM5MisuMDEzKlMrMS41NDE5KksrLjAyMzkqUS0uMDI3OCokKy4wMDY4KmV0LS4wMDI5Kml0KzllLTQqbnQrOGUtNCphdC05ZS00KnV0KSpuLlJBRElBTlNfUEVSX0RFR1JFRSxodD0oMzguMzIxMysxMy4xNzYzNTgxNSpiLTEuNGUtMTIqYipiKzMuNTYxKkYrLjEyMDgqVi0uMDY0MiprKy4wMTU4KlUrLjAyNTIqVy0uMDA2NipHLS4wMDQ3KkgtLjAwNDYqcSsuMDAyOCpqKy4wMDUyKlkrLjAwNCpYKy4wMDE5KlotLjAwNDQqSikqbi5SQURJQU5TX1BFUl9ERUdSRUUsbXQ9KDEzLjE3NjM1ODE1LTEuNGUtMTIqMipiKzMuNTYxKksqbCsuMTIwOCpRKnUtLjA2NDIqJCpjKy4wMTU4KmV0KmQrLjAyNTIqdHQqaC0uMDA2NippdCptLS4wMDQ3Km50KmYtLjAwNDYqcnQqcCsuMDAyOCpvdCp2Ky4wMDUyKmF0KmcrLjAwNCpzdCpfKy4wMDE5Kmx0KnktLjAwNDQqdXQqQykvODY0MDAqbi5SQURJQU5TX1BFUl9ERUdSRUU7cmV0dXJuIGUoRSl8fChFPW5ldyB0KSxFLnJpZ2h0QXNjZW5zaW9uPWN0LEUuZGVjbGluYXRpb249ZHQsRS5yb3RhdGlvbj1odCxFLnJvdGF0aW9uUmF0ZT1tdCxFfSxvfSksZGVmaW5lKCJDb3JlL0lhdU9yaWVudGF0aW9uQXhlcyIsWyIuL0NhcnRlc2lhbjMiLCIuL2RlZmluZWQiLCIuL0lhdTIwMDBPcmllbnRhdGlvbiIsIi4vSnVsaWFuRGF0ZSIsIi4vTWF0aCIsIi4vTWF0cml4MyIsIi4vUXVhdGVybmlvbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBzKGksbixhKXt2YXIgcz11O3MueD1NYXRoLmNvcyhpK3IuUElfT1ZFUl9UV08pLHMueT1NYXRoLnNpbihpK3IuUElfT1ZFUl9UV08pLHMuej0wO3ZhciBsPU1hdGguY29zKG4pLGg9ZDtoLng9bCpNYXRoLmNvcyhpKSxoLnk9bCpNYXRoLnNpbihpKSxoLno9TWF0aC5zaW4obik7dmFyIG09ZS5jcm9zcyhoLHMsYyk7cmV0dXJuIHQoYSl8fChhPW5ldyBvKSxhWzBdPXMueCxhWzFdPW0ueCxhWzJdPWgueCxhWzNdPXMueSxhWzRdPW0ueSxhWzVdPWgueSxhWzZdPXMueixhWzddPW0ueixhWzhdPWgueixhfXZhciBsPWZ1bmN0aW9uKGUpe3QoZSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBlfHwoZT1pLkNvbXB1dGVNb29uKSx0aGlzLl9jb21wdXRlRnVuY3Rpb249ZX0sdT1uZXcgZSxjPW5ldyBlLGQ9bmV3IGUsaD1uZXcgbyxtPW5ldyBhO3JldHVybiBsLnByb3RvdHlwZS5ldmFsdWF0ZT1mdW5jdGlvbihpLGwpe3QoaSl8fChpPW4ubm93KCkpO3ZhciB1PXRoaXMuX2NvbXB1dGVGdW5jdGlvbihpKSxjPXModS5yaWdodEFzY2Vuc2lvbix1LmRlY2xpbmF0aW9uLGwpLGQ9ci56ZXJvVG9Ud29QaSh1LnJvdGF0aW9uKSxmPWEuZnJvbUF4aXNBbmdsZShlLlVOSVRfWixkLG0pLHA9by5mcm9tUXVhdGVybmlvbihhLmNvbmp1Z2F0ZShmLGYpLGgpLHY9by5tdWx0aXBseShwLGMsYyk7cmV0dXJuIHZ9LGx9KSxkZWZpbmUoIkNvcmUvU2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zIixbIi4vQ2FydGVzaWFuMyIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0p1bGlhbkRhdGUiLCIuL01hdGgiLCIuL01hdHJpeDMiLCIuL1RpbWVDb25zdGFudHMiLCIuL1RpbWVTdGFuZGFyZCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGwoZSl7dmFyIHQ9Ni4yMzk5OTYrLjAxNzIwMTk2OTY1NDQqZTtyZXR1cm4uMDAxNjU3Kk1hdGguc2luKHQrLjAxNjcxKk1hdGguc2luKHQpKX1mdW5jdGlvbiB1KGUsdCl7dD1uLmFkZFNlY29uZHMoZSxDLHQpO3ZhciBpPW4udG90YWxEYXlzKHQpLXc7cmV0dXJuIHQ9bi5hZGRTZWNvbmRzKHQsbChpKSx0KX1mdW5jdGlvbiBjKG4sYSxzLGwsdSxjLG0sZil7aWYoMD5zJiYocz0tcyx1Kz1yLlBJKSwwPnN8fHM+ci5QSSl0aHJvdyBuZXcgaSgiVGhlIGluY2xpbmF0aW9uIGlzIG91dCBvZiByYW5nZS4gSW5jbGluYXRpb24gbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gemVybyBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIFBpIHJhZGlhbnMuIik7dmFyIHY9biooMS1hKSxnPWwtdSxfPXUseT1oKGMtbCxhKSxDPWQoYSwwKTtpZigiSHlwZXJib2xpYyI9PT1DJiZNYXRoLmFicyhyLk5lZ2F0aXZlUGlUb1BpKHkpKT49TWF0aC5hY29zKC0xL2EpKXRocm93IG5ldyBpKCJUaGUgdHJ1ZSBhbm9tYWx5IG9mIHRoZSBoeXBlcmJvbGljIG9yYml0IGxpZXMgb3V0c2lkZSBvZiB0aGUgYm91bmRzIG9mIHRoZSBoeXBlcmJvbGEuIik7cChnLHMsXyxNKTt2YXIgdz12KigxK2EpLEU9TWF0aC5jb3MoeSksYj1NYXRoLnNpbih5KSxTPTErYSpFO2lmKFM8PXIuRXBzaWxvbjEwKXRocm93IG5ldyBpKCJlbGVtZW50cyBjYW5ub3QgYmUgY29udmVydGVkIHRvIGNhcnRlc2lhbiIpO3ZhciBUPXcvUztyZXR1cm4gdChmKT8oZi54PVQqRSxmLnk9VCpiLGYuej0wKTpmPW5ldyBlKFQqRSxUKmIsMCksby5tdWx0aXBseUJ5VmVjdG9yKE0sZixmKX1mdW5jdGlvbiBkKGUsdCl7aWYoMD5lKXRocm93IG5ldyBpKCJlY2NlbnRyaWNpdHkgY2Fubm90IGJlIG5lZ2F0aXZlLiIpO3JldHVybiB0Pj1lPyJDaXJjdWxhciI6MS10PmU/IkVsbGlwdGljYWwiOjErdD49ZT8iUGFyYWJvbGljIjoiSHlwZXJib2xpYyJ9ZnVuY3Rpb24gaChlLHQpe2lmKDA+dHx8dD49MSl0aHJvdyBuZXcgaSgiZWNjZW50cmljaXR5IG91dCBvZiByYW5nZS4iKTt2YXIgbj1tKGUsdCk7cmV0dXJuIGYobix0KX1mdW5jdGlvbiBtKGUsdCl7aWYoMD50fHx0Pj0xKXRocm93IG5ldyBpKCJlY2NlbnRyaWNpdHkgb3V0IG9mIHJhbmdlLiIpO3ZhciBuPU1hdGguZmxvb3IoZS9yLlRXT19QSSk7ZS09bipyLlRXT19QSTt2YXIgbyxhPWUrdCpNYXRoLnNpbihlKS8oMS1NYXRoLnNpbihlK3QpK01hdGguc2luKGUpKSxzPU51bWJlci5NQVhfVkFMVUU7Zm9yKG89MDtJPm8mJk1hdGguYWJzKHMtYSk+RDsrK28pe3M9YTt2YXIgbD1zLXQqTWF0aC5zaW4ocyktZSx1PTEtdCpNYXRoLmNvcyhzKTthPXMtbC91fWlmKG8+PUkpdGhyb3cgbmV3IGkoIktlcGxlciBlcXVhdGlvbiBkaWQgbm90IGNvbnZlcmdlIik7cmV0dXJuIHM9YStuKnIuVFdPX1BJfWZ1bmN0aW9uIGYoZSx0KXtpZigwPnR8fHQ+PTEpdGhyb3cgbmV3IGkoImVjY2VudHJpY2l0eSBvdXQgb2YgcmFuZ2UuIik7dmFyIG49TWF0aC5mbG9vcihlL3IuVFdPX1BJKTtlLT1uKnIuVFdPX1BJO3ZhciBvPU1hdGguY29zKGUpLXQsYT1NYXRoLnNpbihlKSpNYXRoLnNxcnQoMS10KnQpLHM9TWF0aC5hdGFuMihhLG8pO3JldHVybiBzPXIuemVyb1RvVHdvUGkocyksMD5lJiYocy09ci5UV09fUEkpLHMrPW4qci5UV09fUEl9ZnVuY3Rpb24gcChlLG4sYSxzKXtpZigwPm58fG4+ci5QSSl0aHJvdyBuZXcgaSgiaW5jbGluYXRpb24gb3V0IG9mIHJhbmdlIik7dmFyIGw9TWF0aC5jb3MoZSksdT1NYXRoLnNpbihlKSxjPU1hdGguY29zKG4pLGQ9TWF0aC5zaW4obiksaD1NYXRoLmNvcyhhKSxtPU1hdGguc2luKGEpO3JldHVybiB0KHMpPyhzWzBdPWgqbC1tKnUqYyxzWzFdPW0qbCtoKnUqYyxzWzJdPXUqZCxzWzNdPS1oKnUtbSpsKmMsc1s0XT0tbSp1K2gqbCpjLHNbNV09bCpkLHNbNl09bSpkLHNbN109LWgqZCxzWzhdPWMpOnM9bmV3IG8oaCpsLW0qdSpjLC1oKnUtbSpsKmMsbSpkLG0qbCtoKnUqYywtbSp1K2gqbCpjLC1oKmQsdSpkLGwqZCxjKSxzfWZ1bmN0aW9uIHYoZSx0KXt1KGUsTXQpO3ZhciBpPU10LmRheU51bWJlci1FLmRheU51bWJlcisoTXQuc2Vjb25kc09mRGF5LUUuc2Vjb25kc09mRGF5KS9hLlNFQ09ORFNfUEVSX0RBWSxuPWkvKDEwKmEuREFZU19QRVJfSlVMSUFOX0NFTlRVUlkpLHI9LjM1OTUzNjIqbixvPU8rRypNYXRoLmNvcyhOKnIpK0sqTWF0aC5zaW4oTipyKStIKk1hdGguY29zKHoqcikrUSpNYXRoLnNpbih6KnIpK3EqTWF0aC5jb3MoQipyKSskKk1hdGguc2luKEIqcikraipNYXRoLmNvcyhGKnIpK2V0Kk1hdGguc2luKEYqcikrWSpNYXRoLmNvcyhWKnIpK3R0Kk1hdGguc2luKFYqcikrWCpNYXRoLmNvcyhrKnIpK2l0Kk1hdGguc2luKGsqcikrWipNYXRoLmNvcyhVKnIpK250Kk1hdGguc2luKFUqcikrSipNYXRoLmNvcyhXKnIpK3J0Kk1hdGguc2luKFcqcikscz1SK0wqbittdCpNYXRoLmNvcyhvdCpyKSt3dCpNYXRoLnNpbihvdCpyKStmdCpNYXRoLmNvcyhhdCpyKStFdCpNYXRoLnNpbihhdCpyKStwdCpNYXRoLmNvcyhzdCpyKStidCpNYXRoLnNpbihzdCpyKSt2dCpNYXRoLmNvcyhsdCpyKStTdCpNYXRoLnNpbihsdCpyKStndCpNYXRoLmNvcyh1dCpyKStUdCpNYXRoLnNpbih1dCpyKStfdCpNYXRoLmNvcyhjdCpyKSt4dCpNYXRoLnNpbihjdCpyKSt5dCpNYXRoLmNvcyhkdCpyKStBdCpNYXRoLnNpbihkdCpyKStDdCpNYXRoLmNvcyhodCpyKStQdCpNYXRoLnNpbihodCpyKSxsPS4wMTY3MDg2MzQyLS4wMDA0MjAzNjU0Km4sZD0xMDIuOTM3MzQ4MDgqeCsxMTYxMi4zNTI5KkEqbixoPTQ2OS45NzI4OSpBKm4sbT0xNzQuODczMTc1NzcqeC04Njc5LjI3MDM0KkEqbjtyZXR1cm4gYyhvLGwsaCxkLG0scyxTLHQpfWZ1bmN0aW9uIGcoZSx0KXt1KGUsTXQpO3ZhciBpPU10LmRheU51bWJlci1FLmRheU51bWJlcisoTXQuc2Vjb25kc09mRGF5LUUuc2Vjb25kc09mRGF5KS9hLlNFQ09ORFNfUEVSX0RBWSxuPWkvYS5EQVlTX1BFUl9KVUxJQU5fQ0VOVFVSWSxyPW4qbixvPXIqbixzPW8qbixsPTM4MzM5Ny43NzI1Ky4wMDQqbixkPS4wNTU1NDU1MjYtMS42ZS04Km4saD01LjE1NjY4OTgzKngsbT0tOGUtNSpuKy4wMjk2NipyLTQyZS02Km8tMS4zZS03KnMsZj04My4zNTMyNDMxMip4LHA9MTQ2NDM0MjAuMjY2OSpuLTM4LjI3MDIqci0uMDQ1MDQ3Km8rMjEzMDFlLTgqcyx2PTEyNS4wNDQ1NTUwMSp4LGc9LTY5Njc5MTkuMzYzMSpuKzYuMzYwMipyKy4wMDc2MjUqby0zNTg2ZS04KnMsXz0yMTguMzE2NjQ1NjMqeCx5PTE3MzI1NTkzNDMuNDg0NypuLTYuMzkxKnIrLjAwNjU4OCpvLTMxNjllLTgqcyxDPTI5Ny44NTAxOTU0Nyp4K0EqKDE2MDI5NjE2MDEuMjA5Km4tNi4zNzA2KnIrLjAwNjU5MypvLTMxNjllLTgqcyksdz05My4yNzIwOTA2Mip4K0EqKDE3Mzk1MjcyNjIuODQ3OCpuLTEyLjc1MTIqci0uMDAxMDM3Km8rNDE3ZS04KnMpLFM9MTM0Ljk2MzQwMjUxKngrQSooMTcxNzkxNTkyMy4yMTc4Km4rMzEuODc5MipyKy4wNTE2MzUqby0yNDQ3ZS03KnMpLFA9MzU3LjUyOTEwOTE4KngrQSooMTI5NTk2NTgxLjA0ODEqbi0uNTUzMipyKzEzNmUtNipvLTExNDllLTgqcyksTT0zMTAuMTcxMzc5MTgqeC1BKig2OTY3MDUxLjQzNipuKzYuMjA2OCpyKy4wMDc2MTgqby0zMjE5ZS04KnMpLEk9MipDLEQ9NCpDLE89NipDLFI9MipTLEw9MypTLE49NCpTLHo9Mip3O2wrPTM0MDAuNCpNYXRoLmNvcyhJKS02MzUuNipNYXRoLmNvcyhJLVMpLTIzNS42Kk1hdGguY29zKFMpKzIxOC4xKk1hdGguY29zKEktUCkrMTgxKk1hdGguY29zKEkrUyksZCs9LjAxNDIxNipNYXRoLmNvcyhJLVMpKy4wMDg1NTEqTWF0aC5jb3MoSS1SKS0uMDAxMzgzKk1hdGguY29zKFMpKy4wMDEzNTYqTWF0aC5jb3MoSStTKS0uMDAxMTQ3Kk1hdGguY29zKEQtTCktOTE0ZS02Kk1hdGguY29zKEQtUikrODY5ZS02Kk1hdGguY29zKEktUC1TKS02MjdlLTYqTWF0aC5jb3MoSSktMzk0ZS02Kk1hdGguY29zKEQtTikrMjgyZS02Kk1hdGguY29zKEktUC1SKS0yNzllLTYqTWF0aC5jb3MoQy1TKS0yMzZlLTYqTWF0aC5jb3MoUikrMjMxZS02Kk1hdGguY29zKEQpKzIyOWUtNipNYXRoLmNvcyhPLU4pLTIwMWUtNipNYXRoLmNvcyhSLXopLG0rPTQ4Ni4yNipNYXRoLmNvcyhJLXopLTQwLjEzKk1hdGguY29zKEkpKzM3LjUxKk1hdGguY29zKHopKzI1LjczKk1hdGguY29zKFIteikrMTkuOTcqTWF0aC5jb3MoSS1QLXopLHArPS01NTYwOSpNYXRoLnNpbihJLVMpLTM0NzExKk1hdGguc2luKEktUiktOTc5MipNYXRoLnNpbihTKSs5Mzg1Kk1hdGguc2luKEQtTCkrNzUwNSpNYXRoLnNpbihELVIpKzUzMTgqTWF0aC5zaW4oSStTKSszNDg0Kk1hdGguc2luKEQtTiktMzQxNypNYXRoLnNpbihJLVAtUyktMjUzMCpNYXRoLnNpbihPLU4pLTIzNzYqTWF0aC5zaW4oSSktMjA3NSpNYXRoLnNpbihJLUwpLTE4ODMqTWF0aC5zaW4oUiktMTczNipNYXRoLnNpbihPLTUqUykrMTYyNipNYXRoLnNpbihQKS0xMzcwKk1hdGguc2luKE8tTCksZys9LTUzOTIqTWF0aC5zaW4oSS16KS01NDAqTWF0aC5zaW4oUCktNDQxKk1hdGguc2luKEkpKzQyMypNYXRoLnNpbih6KS0yODgqTWF0aC5zaW4oUi16KSx5Kz0tMzMzMi45Kk1hdGguc2luKEkpKzExOTcuNCpNYXRoLnNpbihJLVMpLTY2Mi41Kk1hdGguc2luKFApKzM5Ni4zKk1hdGguc2luKFMpLTIxOCpNYXRoLnNpbihJLVApOwp2YXIgQj0yKk0sRj0zKk07bSs9NDYuOTk3Kk1hdGguY29zKE0pKm4tLjYxNCpNYXRoLmNvcyhJLXorTSkqbisuNjE0Kk1hdGguY29zKEktei1NKSpuLS4wMjk3Kk1hdGguY29zKEIpKnItLjAzMzUqTWF0aC5jb3MoTSkqcisuMDAxMipNYXRoLmNvcyhJLXorQikqci0xNmUtNSpNYXRoLmNvcyhNKSpvKzRlLTUqTWF0aC5jb3MoRikqbys0ZS01Kk1hdGguY29zKEIpKm87dmFyIFY9Mi4xMTYqTWF0aC5zaW4oTSkqbi0uMTExKk1hdGguc2luKEktei1NKSpuLS4wMDE1Kk1hdGguc2luKE0pKnI7cCs9Vix5Kz1WLGcrPS01MjAuNzcqTWF0aC5zaW4oTSkqbisxMy42NipNYXRoLnNpbihJLXorTSkqbisxLjEyKk1hdGguc2luKEktTSkqbi0xLjA2Kk1hdGguc2luKHotTSkqbisuNjYqTWF0aC5zaW4oQikqcisuMzcxKk1hdGguc2luKE0pKnItLjAzNSpNYXRoLnNpbihJLXorQikqci0uMDE1Kk1hdGguc2luKEkteitNKSpyKy4wMDE0Kk1hdGguc2luKE0pKm8tLjAwMTEqTWF0aC5zaW4oRikqby05ZS00Kk1hdGguc2luKEIpKm8sbCo9VDt2YXIgaz1oK20qQSxVPWYrcCpBLFc9Xyt5KkEsRz12K2cqQTtyZXR1cm4gYyhsLGQsayxVLEcsVyxiLHQpfWZ1bmN0aW9uIF8odCxpKXtyZXR1cm4gaT1nKHQsaSksZS5tdWx0aXBseUJ5U2NhbGFyKGksRHQsaSl9dmFyIHk9e30sQz0zMi4xODQsdz0yNDUxNTQ1LEU9bmV3IG4oMjQ1MTU0NSwwLHMuVEFJKSxiPTM5ODYwMDQzNWU2LFM9MzI4OTAwLjU2KjEuMDEyMzAwMDM0KmIsVD0xZTMseD1yLlJBRElBTlNfUEVSX0RFR1JFRSxBPXIuUkFESUFOU19QRVJfQVJDU0VDT05ELFA9MTQ5NTk3ODdlNCxNPW5ldyBvLEk9NTAsRD1yLkVQU0lMT044LE89MS4wMDAwMDEwMTc4KlAsUj0xMDAuNDY2NDU2ODMqeCxMPTEyOTU5Nzc0MjIuODM0MjkqQSxOPTE2MDAyLHo9MjE4NjMsQj0zMjAwNCxGPTEwOTMxLFY9MTQ1Mjksaz0xNjM2OCxVPTE1MzE4LFc9MzI3OTQsRz02NGUtNypQLEg9LTE1MioxZS03KlAscT02MmUtNypQLGo9LThlLTcqUCxZPTMyZS03KlAsWD0tNDEqMWUtNypQLFo9MTllLTcqUCxKPS0xMSoxZS03KlAsSz0tMTUwKjFlLTcqUCxRPS00NioxZS03KlAsJD02OCoxZS03KlAsZXQ9NTRlLTcqUCx0dD0xNGUtNypQLGl0PTI0ZS03KlAsbnQ9LTI4KjFlLTcqUCxydD0yMmUtNypQLG90PTEwLGF0PTE2MDAyLHN0PTIxODYzLGx0PTEwOTMxLHV0PTE0NzMsY3Q9MzIwMDQsZHQ9NDM4NyxodD03MyxtdD0tMzI1KjFlLTcsZnQ9LTMyMioxZS03LHB0PS03OSoxZS03LHZ0PTIzMioxZS03LGd0PS01MioxZS03LF90PTk3ZS03LHl0PTU1ZS03LEN0PS00MSoxZS03LHd0PS0xMDUqMWUtNyxFdD0tMTM3KjFlLTcsYnQ9MjU4ZS03LFN0PTM1ZS03LFR0PS0xMTYqMWUtNyx4dD0tODgqMWUtNyxBdD0tMTEyKjFlLTcsUHQ9LTgwKjFlLTcsTXQ9bmV3IG4oMCwwLHMuVEFJKSxJdD0uMDEyMzAwMDM0LER0PS0xKihJdC8oSXQrMSkpLE90PW5ldyBvKDEuMDAwMDAwMDAwMDAwMDAwMiw1LjYxOTcyMzE3Mzc4NTgyMmUtMTYsNC42OTA1MTE1MTAxNDYyOTllLTE5LC01LjE1NDEyOTQyNzQxNDYxMWUtMTYsLjkxNzQ4MjA2MjA2OTE4MTksLS4zOTc3NzcxNTU5MzE5MTM3NiwtMi4yMzk3MDA5NjEzNjU2OGUtMTYsLjM5Nzc3NzE1NTkzMTkxMzc2LC45MTc0ODIwNjIwNjkxODE5KSxSdD1uZXcgZTtyZXR1cm4geS5jb21wdXRlU3VuUG9zaXRpb25JbkVhcnRoSW5lcnRpYWxGcmFtZT1mdW5jdGlvbihpLHIpe3JldHVybiB0KGkpfHwoaT1uLm5vdygpKSx0KHIpfHwocj1uZXcgZSksUnQ9dihpLFJ0KSxyPWUubmVnYXRlKFJ0LHIpLF8oaSxSdCksZS5zdWJ0cmFjdChyLFJ0LHIpLG8ubXVsdGlwbHlCeVZlY3RvcihPdCxyLHIpLHJ9LHkuY29tcHV0ZU1vb25Qb3NpdGlvbkluRWFydGhJbmVydGlhbEZyYW1lPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHQoZSl8fChlPW4ubm93KCkpLGk9ZyhlLGkpLG8ubXVsdGlwbHlCeVZlY3RvcihPdCxpLGkpLGl9LHl9KSxkZWZpbmUoIkNvcmUvQm94R2VvbWV0cnkiLFsiLi9Cb3VuZGluZ1NwaGVyZSIsIi4vQ2FydGVzaWFuMyIsIi4vQ29tcG9uZW50RGF0YXR5cGUiLCIuL2RlZmF1bHRWYWx1ZSIsIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiLCIuL0dlb21ldHJ5IiwiLi9HZW9tZXRyeUF0dHJpYnV0ZSIsIi4vR2VvbWV0cnlBdHRyaWJ1dGVzIiwiLi9QcmltaXRpdmVUeXBlIiwiLi9WZXJ0ZXhGb3JtYXQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD1uZXcgdCxoPWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgaT1lLm1pbmltdW1Db3JuZXIscj1lLm1heGltdW1Db3JuZXIsbz1uKGUudmVydGV4Rm9ybWF0LGMuREVGQVVMVCk7dGhpcy5fbWluaW11bUNvcm5lcj10LmNsb25lKGkpLHRoaXMuX21heGltdW1Db3JuZXI9dC5jbG9uZShyKSx0aGlzLl92ZXJ0ZXhGb3JtYXQ9byx0aGlzLl93b3JrZXJOYW1lPSJjcmVhdGVCb3hHZW9tZXRyeSJ9O3JldHVybiBoLmZyb21EaW1lbnNpb25zPWZ1bmN0aW9uKGUpe2U9bihlLG4uRU1QVFlfT0JKRUNUKTt2YXIgaT1lLmRpbWVuc2lvbnMscj10Lm11bHRpcGx5QnlTY2FsYXIoaSwuNSxuZXcgdCksbz10Lm5lZ2F0ZShyLG5ldyB0KSxhPXIscz17bWluaW11bUNvcm5lcjpvLG1heGltdW1Db3JuZXI6YSx2ZXJ0ZXhGb3JtYXQ6ZS52ZXJ0ZXhGb3JtYXR9O3JldHVybiBuZXcgaChzKX0saC5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihuKXt2YXIgcixvLGM9bi5fbWluaW11bUNvcm5lcixoPW4uX21heGltdW1Db3JuZXIsbT1uLl92ZXJ0ZXhGb3JtYXQsZj1uZXcgbDtpZihtLnBvc2l0aW9uJiYobS5zdHx8bS5ub3JtYWx8fG0uYmlub3JtYWx8fG0udGFuZ2VudCkpe2lmKG0ucG9zaXRpb24mJihvPW5ldyBGbG9hdDY0QXJyYXkoNzIpLG9bMF09Yy54LG9bMV09Yy55LG9bMl09aC56LG9bM109aC54LG9bNF09Yy55LG9bNV09aC56LG9bNl09aC54LG9bN109aC55LG9bOF09aC56LG9bOV09Yy54LG9bMTBdPWgueSxvWzExXT1oLnosb1sxMl09Yy54LG9bMTNdPWMueSxvWzE0XT1jLnosb1sxNV09aC54LG9bMTZdPWMueSxvWzE3XT1jLnosb1sxOF09aC54LG9bMTldPWgueSxvWzIwXT1jLnosb1syMV09Yy54LG9bMjJdPWgueSxvWzIzXT1jLnosb1syNF09aC54LG9bMjVdPWMueSxvWzI2XT1jLnosb1syN109aC54LG9bMjhdPWgueSxvWzI5XT1jLnosb1szMF09aC54LG9bMzFdPWgueSxvWzMyXT1oLnosb1szM109aC54LG9bMzRdPWMueSxvWzM1XT1oLnosb1szNl09Yy54LG9bMzddPWMueSxvWzM4XT1jLnosb1szOV09Yy54LG9bNDBdPWgueSxvWzQxXT1jLnosb1s0Ml09Yy54LG9bNDNdPWgueSxvWzQ0XT1oLnosb1s0NV09Yy54LG9bNDZdPWMueSxvWzQ3XT1oLnosb1s0OF09Yy54LG9bNDldPWgueSxvWzUwXT1jLnosb1s1MV09aC54LG9bNTJdPWgueSxvWzUzXT1jLnosb1s1NF09aC54LG9bNTVdPWgueSxvWzU2XT1oLnosb1s1N109Yy54LG9bNThdPWgueSxvWzU5XT1oLnosb1s2MF09Yy54LG9bNjFdPWMueSxvWzYyXT1jLnosb1s2M109aC54LG9bNjRdPWMueSxvWzY1XT1jLnosb1s2Nl09aC54LG9bNjddPWMueSxvWzY4XT1oLnosb1s2OV09Yy54LG9bNzBdPWMueSxvWzcxXT1oLnosZi5wb3NpdGlvbj1uZXcgcyh7Y29tcG9uZW50RGF0YXR5cGU6aS5ET1VCTEUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTozLHZhbHVlczpvfSkpLG0ubm9ybWFsKXt2YXIgcD1uZXcgRmxvYXQzMkFycmF5KDcyKTtwWzBdPTAscFsxXT0wLHBbMl09MSxwWzNdPTAscFs0XT0wLHBbNV09MSxwWzZdPTAscFs3XT0wLHBbOF09MSxwWzldPTAscFsxMF09MCxwWzExXT0xLHBbMTJdPTAscFsxM109MCxwWzE0XT0tMSxwWzE1XT0wLHBbMTZdPTAscFsxN109LTEscFsxOF09MCxwWzE5XT0wLHBbMjBdPS0xLHBbMjFdPTAscFsyMl09MCxwWzIzXT0tMSxwWzI0XT0xLHBbMjVdPTAscFsyNl09MCxwWzI3XT0xLHBbMjhdPTAscFsyOV09MCxwWzMwXT0xLHBbMzFdPTAscFszMl09MCxwWzMzXT0xLHBbMzRdPTAscFszNV09MCxwWzM2XT0tMSxwWzM3XT0wLHBbMzhdPTAscFszOV09LTEscFs0MF09MCxwWzQxXT0wLHBbNDJdPS0xLHBbNDNdPTAscFs0NF09MCxwWzQ1XT0tMSxwWzQ2XT0wLHBbNDddPTAscFs0OF09MCxwWzQ5XT0xLHBbNTBdPTAscFs1MV09MCxwWzUyXT0xLHBbNTNdPTAscFs1NF09MCxwWzU1XT0xLHBbNTZdPTAscFs1N109MCxwWzU4XT0xLHBbNTldPTAscFs2MF09MCxwWzYxXT0tMSxwWzYyXT0wLHBbNjNdPTAscFs2NF09LTEscFs2NV09MCxwWzY2XT0wLHBbNjddPS0xLHBbNjhdPTAscFs2OV09MCxwWzcwXT0tMSxwWzcxXT0wLGYubm9ybWFsPW5ldyBzKHtjb21wb25lbnREYXRhdHlwZTppLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6cH0pfWlmKG0uc3Qpe3ZhciB2PW5ldyBGbG9hdDMyQXJyYXkoNDgpO3ZbMF09MCx2WzFdPTAsdlsyXT0xLHZbM109MCx2WzRdPTEsdls1XT0xLHZbNl09MCx2WzddPTEsdls4XT0xLHZbOV09MCx2WzEwXT0wLHZbMTFdPTAsdlsxMl09MCx2WzEzXT0xLHZbMTRdPTEsdlsxNV09MSx2WzE2XT0wLHZbMTddPTAsdlsxOF09MSx2WzE5XT0wLHZbMjBdPTEsdlsyMV09MSx2WzIyXT0wLHZbMjNdPTEsdlsyNF09MSx2WzI1XT0wLHZbMjZdPTAsdlsyN109MCx2WzI4XT0wLHZbMjldPTEsdlszMF09MSx2WzMxXT0xLHZbMzJdPTEsdlszM109MCx2WzM0XT0wLHZbMzVdPTAsdlszNl09MCx2WzM3XT0xLHZbMzhdPTEsdlszOV09MSx2WzQwXT0wLHZbNDFdPTAsdls0Ml09MSx2WzQzXT0wLHZbNDRdPTEsdls0NV09MSx2WzQ2XT0wLHZbNDddPTEsZi5zdD1uZXcgcyh7Y29tcG9uZW50RGF0YXR5cGU6aS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOnZ9KX1pZihtLnRhbmdlbnQpe3ZhciBnPW5ldyBGbG9hdDMyQXJyYXkoNzIpO2dbMF09MSxnWzFdPTAsZ1syXT0wLGdbM109MSxnWzRdPTAsZ1s1XT0wLGdbNl09MSxnWzddPTAsZ1s4XT0wLGdbOV09MSxnWzEwXT0wLGdbMTFdPTAsZ1sxMl09LTEsZ1sxM109MCxnWzE0XT0wLGdbMTVdPS0xLGdbMTZdPTAsZ1sxN109MCxnWzE4XT0tMSxnWzE5XT0wLGdbMjBdPTAsZ1syMV09LTEsZ1syMl09MCxnWzIzXT0wLGdbMjRdPTAsZ1syNV09MSxnWzI2XT0wLGdbMjddPTAsZ1syOF09MSxnWzI5XT0wLGdbMzBdPTAsZ1szMV09MSxnWzMyXT0wLGdbMzNdPTAsZ1szNF09MSxnWzM1XT0wLGdbMzZdPTAsZ1szN109LTEsZ1szOF09MCxnWzM5XT0wLGdbNDBdPS0xLGdbNDFdPTAsZ1s0Ml09MCxnWzQzXT0tMSxnWzQ0XT0wLGdbNDVdPTAsZ1s0Nl09LTEsZ1s0N109MCxnWzQ4XT0tMSxnWzQ5XT0wLGdbNTBdPTAsZ1s1MV09LTEsZ1s1Ml09MCxnWzUzXT0wLGdbNTRdPS0xLGdbNTVdPTAsZ1s1Nl09MCxnWzU3XT0tMSxnWzU4XT0wLGdbNTldPTAsZ1s2MF09MSxnWzYxXT0wLGdbNjJdPTAsZ1s2M109MSxnWzY0XT0wLGdbNjVdPTAsZ1s2Nl09MSxnWzY3XT0wLGdbNjhdPTAsZ1s2OV09MSxnWzcwXT0wLGdbNzFdPTAsZi50YW5nZW50PW5ldyBzKHtjb21wb25lbnREYXRhdHlwZTppLkZMT0FULGNvbXBvbmVudHNQZXJBdHRyaWJ1dGU6Myx2YWx1ZXM6Z30pfWlmKG0uYmlub3JtYWwpe3ZhciBfPW5ldyBGbG9hdDMyQXJyYXkoNzIpO19bMF09MCxfWzFdPTEsX1syXT0wLF9bM109MCxfWzRdPTEsX1s1XT0wLF9bNl09MCxfWzddPTEsX1s4XT0wLF9bOV09MCxfWzEwXT0xLF9bMTFdPTAsX1sxMl09MCxfWzEzXT0xLF9bMTRdPTAsX1sxNV09MCxfWzE2XT0xLF9bMTddPTAsX1sxOF09MCxfWzE5XT0xLF9bMjBdPTAsX1syMV09MCxfWzIyXT0xLF9bMjNdPTAsX1syNF09MCxfWzI1XT0wLF9bMjZdPTEsX1syN109MCxfWzI4XT0wLF9bMjldPTEsX1szMF09MCxfWzMxXT0wLF9bMzJdPTEsX1szM109MCxfWzM0XT0wLF9bMzVdPTEsX1szNl09MCxfWzM3XT0wLF9bMzhdPTEsX1szOV09MCxfWzQwXT0wLF9bNDFdPTEsX1s0Ml09MCxfWzQzXT0wLF9bNDRdPTEsX1s0NV09MCxfWzQ2XT0wLF9bNDddPTEsX1s0OF09MCxfWzQ5XT0wLF9bNTBdPTEsX1s1MV09MCxfWzUyXT0wLF9bNTNdPTEsX1s1NF09MCxfWzU1XT0wLF9bNTZdPTEsX1s1N109MCxfWzU4XT0wLF9bNTldPTEsX1s2MF09MCxfWzYxXT0wLF9bNjJdPTEsX1s2M109MCxfWzY0XT0wLF9bNjVdPTEsX1s2Nl09MCxfWzY3XT0wLF9bNjhdPTEsX1s2OV09MCxfWzcwXT0wLF9bNzFdPTEsZi5iaW5vcm1hbD1uZXcgcyh7Y29tcG9uZW50RGF0YXR5cGU6aS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOl99KX1yPW5ldyBVaW50MTZBcnJheSgzNiksclswXT0wLHJbMV09MSxyWzJdPTIsclszXT0wLHJbNF09MixyWzVdPTMscls2XT02LHJbN109NSxyWzhdPTQscls5XT03LHJbMTBdPTYsclsxMV09NCxyWzEyXT04LHJbMTNdPTksclsxNF09MTAsclsxNV09OCxyWzE2XT0xMCxyWzE3XT0xMSxyWzE4XT0xNCxyWzE5XT0xMyxyWzIwXT0xMixyWzIxXT0xNSxyWzIyXT0xNCxyWzIzXT0xMixyWzI0XT0xOCxyWzI1XT0xNyxyWzI2XT0xNixyWzI3XT0xOSxyWzI4XT0xOCxyWzI5XT0xNixyWzMwXT0yMCxyWzMxXT0yMSxyWzMyXT0yMixyWzMzXT0yMCxyWzM0XT0yMixyWzM1XT0yM31lbHNlIG89bmV3IEZsb2F0NjRBcnJheSgyNCksb1swXT1jLngsb1sxXT1jLnksb1syXT1jLnosb1szXT1oLngsb1s0XT1jLnksb1s1XT1jLnosb1s2XT1oLngsb1s3XT1oLnksb1s4XT1jLnosb1s5XT1jLngsb1sxMF09aC55LG9bMTFdPWMueixvWzEyXT1jLngsb1sxM109Yy55LG9bMTRdPWgueixvWzE1XT1oLngsb1sxNl09Yy55LG9bMTddPWgueixvWzE4XT1oLngsb1sxOV09aC55LG9bMjBdPWgueixvWzIxXT1jLngsb1syMl09aC55LG9bMjNdPWgueixmLnBvc2l0aW9uPW5ldyBzKHtjb21wb25lbnREYXRhdHlwZTppLkRPVUJMRSxjb21wb25lbnRzUGVyQXR0cmlidXRlOjMsdmFsdWVzOm99KSxyPW5ldyBVaW50MTZBcnJheSgzNiksclswXT00LHJbMV09NSxyWzJdPTYsclszXT00LHJbNF09NixyWzVdPTcscls2XT0xLHJbN109MCxyWzhdPTMscls5XT0xLHJbMTBdPTMsclsxMV09MixyWzEyXT0xLHJbMTNdPTYsclsxNF09NSxyWzE1XT0xLHJbMTZdPTIsclsxN109NixyWzE4XT0yLHJbMTldPTMsclsyMF09NyxyWzIxXT0yLHJbMjJdPTcsclsyM109NixyWzI0XT0zLHJbMjVdPTAsclsyNl09NCxyWzI3XT0zLHJbMjhdPTQsclsyOV09NyxyWzMwXT0wLHJbMzFdPTEsclszMl09NSxyWzMzXT0wLHJbMzRdPTUsclszNV09NDt2YXIgeT10LnN1YnRyYWN0KGgsYyxkKSxDPS41KnQubWFnbml0dWRlKHkpO3JldHVybiBuZXcgYSh7YXR0cmlidXRlczpmLGluZGljZXM6cixwcmltaXRpdmVUeXBlOnUuVFJJQU5HTEVTLGJvdW5kaW5nU3BoZXJlOm5ldyBlKHQuWkVSTyxDKX0pfSxofSksZGVmaW5lKCJTaGFkZXJzL0VsbGlwc29pZEZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iI2lmZGVmIFdSSVRFX0RFUFRIXG4jaWZkZWYgR0xfRVhUX2ZyYWdfZGVwdGhcbiNleHRlbnNpb24gR0xfRVhUX2ZyYWdfZGVwdGggOiBlbmFibGVcbiNlbmRpZlxuI2VuZGlmXG5cbnVuaWZvcm0gdmVjMyB1X3JhZGlpO1xudW5pZm9ybSB2ZWMzIHVfb25lT3ZlckVsbGlwc29pZFJhZGlpU3F1YXJlZDtcblxudmFyeWluZyB2ZWMzIHZfcG9zaXRpb25FQztcblxudmVjNCBjb21wdXRlRWxsaXBzb2lkQ29sb3IoY3ptX3JheSByYXksIGZsb2F0IGludGVyc2VjdGlvbiwgZmxvYXQgc2lkZSlcbntcbiAgICB2ZWMzIHBvc2l0aW9uRUMgPSBjem1fcG9pbnRBbG9uZ1JheShyYXksIGludGVyc2VjdGlvbik7XG4gICAgdmVjMyBwb3NpdGlvbk1DID0gKGN6bV9pbnZlcnNlTW9kZWxWaWV3ICogdmVjNChwb3NpdGlvbkVDLCAxLjApKS54eXo7XG4gICAgdmVjMyBnZW9kZXRpY05vcm1hbCA9IG5vcm1hbGl6ZShjem1fZ2VvZGV0aWNTdXJmYWNlTm9ybWFsKHBvc2l0aW9uTUMsIHZlYzMoMC4wKSwgdV9vbmVPdmVyRWxsaXBzb2lkUmFkaWlTcXVhcmVkKSk7XG4gICAgdmVjMyBzcGhlcmljYWxOb3JtYWwgPSBub3JtYWxpemUocG9zaXRpb25NQyAvIHVfcmFkaWkpO1xuICAgIHZlYzMgbm9ybWFsTUMgPSBnZW9kZXRpY05vcm1hbCAqIHNpZGU7ICAgICAgICAgICAgICAvLyBub3JtYWxpemVkIHN1cmZhY2Ugbm9ybWFsIChhbHdheXMgZmFjaW5nIHRoZSB2aWV3ZXIpIGluIG1vZGVsIGNvb3JkaW5hdGVzXG4gICAgdmVjMyBub3JtYWxFQyA9IG5vcm1hbGl6ZShjem1fbm9ybWFsICogbm9ybWFsTUMpOyAgIC8vIG5vcm1hbGl6ZWQgc3VyZmFjZSBub3JtYWwgaW4gZXllIGNvb3JkaWFudGVzXG5cbiAgICB2ZWMyIHN0ID0gY3ptX2VsbGlwc29pZFdnczg0VGV4dHVyZUNvb3JkaW5hdGVzKHNwaGVyaWNhbE5vcm1hbCk7XG4gICAgdmVjMyBwb3NpdGlvblRvRXllRUMgPSAtcG9zaXRpb25FQztcblxuICAgIGN6bV9tYXRlcmlhbElucHV0IG1hdGVyaWFsSW5wdXQ7XG4gICAgbWF0ZXJpYWxJbnB1dC5zID0gc3QucztcbiAgICBtYXRlcmlhbElucHV0LnN0ID0gc3Q7XG4gICAgbWF0ZXJpYWxJbnB1dC5zdHIgPSAocG9zaXRpb25NQyArIHVfcmFkaWkpIC8gdV9yYWRpaTtcbiAgICBtYXRlcmlhbElucHV0Lm5vcm1hbEVDID0gbm9ybWFsRUM7XG4gICAgbWF0ZXJpYWxJbnB1dC50YW5nZW50VG9FeWVNYXRyaXggPSBjem1fZWFzdE5vcnRoVXBUb0V5ZUNvb3JkaW5hdGVzKHBvc2l0aW9uTUMsIG5vcm1hbEVDKTtcbiAgICBtYXRlcmlhbElucHV0LnBvc2l0aW9uVG9FeWVFQyA9IHBvc2l0aW9uVG9FeWVFQztcbiAgICBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwgPSBjem1fZ2V0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7XG5cbiNpZmRlZiBPTkxZX1NVTl9MSUdIVElOR1xuICAgIHJldHVybiBjem1fcHJpdmF0ZV9waG9uZyhub3JtYWxpemUocG9zaXRpb25Ub0V5ZUVDKSwgbWF0ZXJpYWwpO1xuI2Vsc2VcbiAgICByZXR1cm4gY3ptX3Bob25nKG5vcm1hbGl6ZShwb3NpdGlvblRvRXllRUMpLCBtYXRlcmlhbCk7XG4jZW5kaWZcbn1cblxudm9pZCBtYWluKClcbntcbiAgICAvLyBQRVJGT1JNQU5DRV9UT0RPOiBXaGVuIGR5bmFtaWMgYnJhbmNoaW5nIGlzIGF2YWlsYWJsZSwgY29tcHV0ZSByYXRpbyBvZiBtYXhpbXVtIGFuZCBtaW5pbXVtIHJhZGlpXG4gICAgLy8gaW4gdGhlIHZlcnRleCBzaGFkZXIuIE9ubHkgd2hlbiBpdCBpcyBsYXJnZXIgdGhhbiBzb21lIGNvbnN0YW50LCBtYXJjaCBhbG9uZyB0aGUgcmF5LlxuICAgIC8vIE90aGVyd2lzZSBwZXJmb3JtIG9uZSBpbnRlcnNlY3Rpb24gdGVzdCB3aGljaCB3aWxsIGJlIHRoZSBjb21tb24gY2FzZS5cbiAgICBcbiAgICAvLyBUZXN0IGlmIHRoZSByYXkgaW50ZXJzZWN0cyBhIHNwaGVyZSB3aXRoIHRoZSBlbGxpcHNvaWQncyBtYXhpbXVtIHJhZGl1cy5cbiAgICAvLyBGb3IgdmVyeSBvYmxhdGUgZWxsaXBzb2lkcywgdXNpbmcgdGhlIGVsbGlwc29pZCdzIHJhZGlpIGZvciBhbiBpbnRlcnNlY3Rpb24gdGVzdFxuICAgIC8vIG1heSBjYXVzZSBmYWxzZSBuZWdhdGl2ZXMuIFRoaXMgd2lsbCBkaXNjYXJkIGZyYWdtZW50cyBiZWZvcmUgbWFyY2hpbmcgdGhlIHJheSBmb3J3YXJkLlxuICAgIGZsb2F0IG1heFJhZGl1cyA9IG1heCh1X3JhZGlpLngsIG1heCh1X3JhZGlpLnksIHVfcmFkaWkueikpICogMS41O1xuICAgIHZlYzMgZGlyZWN0aW9uID0gbm9ybWFsaXplKHZfcG9zaXRpb25FQyk7XG4gICAgdmVjMyBlbGxpcHNvaWRDZW50ZXIgPSBjem1fbW9kZWxWaWV3WzNdLnh5ejtcbiAgICBcbiAgICBmbG9hdCB0MSA9IC0xLjA7XG4gICAgZmxvYXQgdDIgPSAtMS4wO1xuICAgIFxuICAgIGZsb2F0IGIgPSAtMi4wICogZG90KGRpcmVjdGlvbiwgZWxsaXBzb2lkQ2VudGVyKTtcbiAgICBmbG9hdCBjID0gZG90KGVsbGlwc29pZENlbnRlciwgZWxsaXBzb2lkQ2VudGVyKSAtIG1heFJhZGl1cyAqIG1heFJhZGl1cztcblxuICAgIGZsb2F0IGRpc2NyaW1pbmFudCA9IGIgKiBiIC0gNC4wICogYztcbiAgICBpZiAoZGlzY3JpbWluYW50ID49IDAuMCkge1xuICAgICAgICB0MSA9ICgtYiAtIHNxcnQoZGlzY3JpbWluYW50KSkgKiAwLjU7XG4gICAgICAgIHQyID0gKC1iICsgc3FydChkaXNjcmltaW5hbnQpKSAqIDAuNTtcbiAgICB9XG4gICAgXG4gICAgaWYgKHQxIDwgMC4wICYmIHQyIDwgMC4wKSB7XG4gICAgICAgIGRpc2NhcmQ7XG4gICAgfVxuICAgIFxuICAgIGZsb2F0IHQgPSBtaW4odDEsIHQyKTtcbiAgICBpZiAodCA8IDAuMCkge1xuICAgICAgICB0ID0gMC4wO1xuICAgIH1cbiAgICBcbiAgICAvLyBNYXJjaCByYXkgZm9yd2FyZCB0byBpbnRlcnNlY3Rpb24gd2l0aCBsYXJnZXIgc3BoZXJlIGFuZCBmaW5kXG4gICAgLy8gYWN0dWFsIGludGVyc2VjdGlvbiBwb2ludCB3aXRoIGVsbGlwc29pZC5cbiAgICBjem1fZWxsaXBzb2lkIGVsbGlwc29pZCA9IGN6bV9lbGxpcHNvaWROZXcoZWxsaXBzb2lkQ2VudGVyLCB1X3JhZGlpKTtcbiAgICBjem1fcmF5IHJheSA9IGN6bV9yYXkodCAqIGRpcmVjdGlvbiwgZGlyZWN0aW9uKTtcbiAgICBjem1fcmF5U2VnbWVudCBpbnRlcnNlY3Rpb24gPSBjem1fcmF5RWxsaXBzb2lkSW50ZXJzZWN0aW9uSW50ZXJ2YWwocmF5LCBlbGxpcHNvaWQpO1xuICAgIFxuICAgIGlmIChjem1faXNFbXB0eShpbnRlcnNlY3Rpb24pKVxuICAgIHtcbiAgICAgICAgZGlzY2FyZDtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGUgdmlld2VyIGlzIG91dHNpZGUsIGNvbXB1dGUgb3V0c2lkZUZhY2VDb2xvciwgd2l0aCBub3JtYWxzIGZhY2luZyBvdXR3YXJkLlxuICAgIHZlYzQgb3V0c2lkZUZhY2VDb2xvciA9IChpbnRlcnNlY3Rpb24uc3RhcnQgIT0gMC4wKSA/IGNvbXB1dGVFbGxpcHNvaWRDb2xvcihyYXksIGludGVyc2VjdGlvbi5zdGFydCwgMS4wKSA6IHZlYzQoMC4wKTtcblxuICAgIC8vIElmIHRoZSB2aWV3ZXIgZWl0aGVyIGlzIGluc2lkZSBvciBjYW4gc2VlIGluc2lkZSwgY29tcHV0ZSBpbnNpZGVGYWNlQ29sb3IsIHdpdGggbm9ybWFscyBmYWNpbmcgaW53YXJkLlxuICAgIHZlYzQgaW5zaWRlRmFjZUNvbG9yID0gKG91dHNpZGVGYWNlQ29sb3IuYSA8IDEuMCkgPyBjb21wdXRlRWxsaXBzb2lkQ29sb3IocmF5LCBpbnRlcnNlY3Rpb24uc3RvcCwgLTEuMCkgOiB2ZWM0KDAuMCk7XG5cbiAgICBnbF9GcmFnQ29sb3IgPSBtaXgoaW5zaWRlRmFjZUNvbG9yLCBvdXRzaWRlRmFjZUNvbG9yLCBvdXRzaWRlRmFjZUNvbG9yLmEpO1xuICAgIGdsX0ZyYWdDb2xvci5hID0gMS4wIC0gKDEuMCAtIGluc2lkZUZhY2VDb2xvci5hKSAqICgxLjAgLSBvdXRzaWRlRmFjZUNvbG9yLmEpO1xuICAgIFxuI2lmZGVmIFdSSVRFX0RFUFRIXG4jaWZkZWYgR0xfRVhUX2ZyYWdfZGVwdGhcbiAgICB0ID0gKGludGVyc2VjdGlvbi5zdGFydCAhPSAwLjApID8gaW50ZXJzZWN0aW9uLnN0YXJ0IDogaW50ZXJzZWN0aW9uLnN0b3A7XG4gICAgdmVjMyBwb3NpdGlvbkVDID0gY3ptX3BvaW50QWxvbmdSYXkocmF5LCB0KTtcbiAgICB2ZWM0IHBvc2l0aW9uQ0MgPSBjem1fcHJvamVjdGlvbiAqIHZlYzQocG9zaXRpb25FQywgMS4wKTtcbiAgICBmbG9hdCB6ID0gcG9zaXRpb25DQy56IC8gcG9zaXRpb25DQy53O1xuICAgIFxuICAgIGZsb2F0IG4gPSBjem1fZGVwdGhSYW5nZS5uZWFyO1xuICAgIGZsb2F0IGYgPSBjem1fZGVwdGhSYW5nZS5mYXI7XG4gICAgXG4gICAgZ2xfRnJhZ0RlcHRoRVhUID0gKHogKiAoZiAtIG4pICsgZiArIG4pICogMC41O1xuI2VuZGlmXG4jZW5kaWZcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvRWxsaXBzb2lkVlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJhdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjtcblxudW5pZm9ybSB2ZWMzIHVfcmFkaWk7XG5cbnZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIC8vIEluIHRoZSB2ZXJ0ZXggZGF0YSwgdGhlIGN1YmUgZ29lcyBmcm9tICgtMS4wLCAtMS4wLCAtMS4wKSB0byAoMS4wLCAxLjAsIDEuMCkgaW4gbW9kZWwgY29vcmRpbmF0ZXMuXG4gICAgLy8gU2NhbGUgdG8gY29uc2lkZXIgdGhlIHJhZGlpLiAgV2UgY291bGQgYWxzbyBkbyB0aGlzIG9uY2Ugb24gdGhlIENQVSB3aGVuIHVzaW5nIHRoZSBCb3hHZW9tZXRyeSxcbiAgICAvLyBidXQgZG9pbmcgaXQgaGVyZSBhbGxvd3MgdXMgdG8gY2hhbmdlIHRoZSByYWRpaSB3aXRob3V0IHJld3JpdGluZyB0aGUgdmVydGV4IGRhdGEsIGFuZFxuICAgIC8vIGFsbG93cyBhbGwgZWxsaXBzb2lkcyB0byByZXVzZSB0aGUgc2FtZSB2ZXJ0ZXggZGF0YS5cbiAgICB2ZWM0IHAgPSB2ZWM0KHVfcmFkaWkgKiBwb3NpdGlvbiwgMS4wKTtcblxuICAgIHZfcG9zaXRpb25FQyA9IChjem1fbW9kZWxWaWV3ICogcCkueHl6OyAgICAgLy8gcG9zaXRpb24gaW4gZXllIGNvb3JkaW5hdGVzXG4gICAgZ2xfUG9zaXRpb24gPSBjem1fbW9kZWxWaWV3UHJvamVjdGlvbiAqIHA7ICAvLyBwb3NpdGlvbiBpbiBjbGlwIGNvb3JkaW5hdGVzXG5cbiAgICAvLyBXaXRoIG11bHRpLWZydXN0dW0sIHdoZW4gdGhlIGVsbGlwc29pZCBwcmltaXRpdmUgaXMgcG9zaXRpb25lZCBvbiB0aGUgaW50ZXJzZWN0aW9uIG9mIHR3byBmcnVzdHVtcyBcbiAgICAvLyBhbmQgY2xvc2UgdG8gdGVycmFpbiwgdGhlIHRlcnJhaW4gKHdyaXRlcyBkZXB0aCkgaW4gdGhlIGNsb3Nlc3QgZnJ1c3R1bSBjYW4gb3ZlcndyaXRlIHBhcnQgb2YgdGhlIFxuICAgIC8vIGVsbGlwc29pZCAoZG9lcyBub3Qgd3JpdGUgZGVwdGgpIHRoYXQgd2FzIHJlbmRlcmVkIGluIHRoZSBmYXJ0aGVyIGZydXN0dW0uXG4gICAgLy9cbiAgICAvLyBIZXJlLCB3ZSBjbGFtcCB0aGUgZGVwdGggaW4gdGhlIHZlcnRleCBzaGFkZXIgdG8gYXZvaWQgYmVpbmcgb3ZlcndyaXR0ZW47IGhvd2V2ZXIsIHRoaXMgY3JlYXRlc1xuICAgIC8vIGFydGlmYWN0cyBzaW5jZSBzb21lIGZyYWdtZW50cyBjYW4gYmUgYWxwaGEgYmxlbmRlZCB0d2ljZS4gIFRoaXMgaXMgc29sdmVkIGJ5IG9ubHkgcmVuZGVyaW5nXG4gICAgLy8gdGhlIGVsbGlwc29pZCBpbiB0aGUgY2xvc2VzdCBmcnVzdHVtIHRvIHRoZSB2aWV3ZXIuXG4gICAgZ2xfUG9zaXRpb24ueiA9IGNsYW1wKGdsX1Bvc2l0aW9uLnosIGN6bV9kZXB0aFJhbmdlLm5lYXIsIGN6bV9kZXB0aFJhbmdlLmZhcik7XG59XG4ifSksZGVmaW5lKCJTY2VuZS9FbGxpcHNvaWRQcmltaXRpdmUiLFsiLi4vQ29yZS9Cb3VuZGluZ1NwaGVyZSIsIi4uL0NvcmUvQm94R2VvbWV0cnkiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL2NvbWJpbmUiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1ZlcnRleEZvcm1hdCIsIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlIiwiLi4vUmVuZGVyZXIvY3JlYXRlU2hhZGVyU291cmNlIiwiLi4vUmVuZGVyZXIvRHJhd0NvbW1hbmQiLCIuLi9TaGFkZXJzL0VsbGlwc29pZEZTIiwiLi4vU2hhZGVycy9FbGxpcHNvaWRWUyIsIi4vQmxlbmRpbmdTdGF0ZSIsIi4vQ3VsbEZhY2UiLCIuL01hdGVyaWFsIiwiLi9QYXNzIiwiLi9TY2VuZU1vZGUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHkpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBDKGUpe3ZhciBuPWUuY2FjaGUuZWxsaXBzb2lkUHJpbWl0aXZlX3ZlcnRleEFycmF5O2lmKG8obikpcmV0dXJuIG47dmFyIHI9dC5jcmVhdGVHZW9tZXRyeSh0LmZyb21EaW1lbnNpb25zKHtkaW1lbnNpb25zOm5ldyBpKDIsMiwyKSx2ZXJ0ZXhGb3JtYXQ6dS5QT1NJVElPTl9PTkxZfSkpO3JldHVybiBuPWUuY3JlYXRlVmVydGV4QXJyYXlGcm9tR2VvbWV0cnkoe2dlb21ldHJ5OnIsYXR0cmlidXRlTG9jYXRpb25zOncsYnVmZmVyVXNhZ2U6Yy5TVEFUSUNfRFJBVyxpbnRlcmxlYXZlOiEwfSksZS5jYWNoZS5lbGxpcHNvaWRQcmltaXRpdmVfdmVydGV4QXJyYXk9bixufXZhciB3PXtwb3NpdGlvbjowfSxFPWZ1bmN0aW9uKHQpe3Q9cih0LHIuRU1QVFlfT0JKRUNUKSx0aGlzLmNlbnRlcj1pLmNsb25lKHIodC5jZW50ZXIsaS5aRVJPKSksdGhpcy5fY2VudGVyPW5ldyBpLHRoaXMucmFkaWk9aS5jbG9uZSh0LnJhZGlpKSx0aGlzLl9yYWRpaT1uZXcgaSx0aGlzLl9vbmVPdmVyRWxsaXBzb2lkUmFkaWlTcXVhcmVkPW5ldyBpLHRoaXMuX2JvdW5kaW5nU3BoZXJlPW5ldyBlLHRoaXMubW9kZWxNYXRyaXg9bC5jbG9uZShyKHQubW9kZWxNYXRyaXgsbC5JREVOVElUWSkpLHRoaXMuX21vZGVsTWF0cml4PW5ldyBsLHRoaXMuX2NvbXB1dGVkTW9kZWxNYXRyaXg9bmV3IGwsdGhpcy5zaG93PXIodC5zaG93LCEwKSx0aGlzLm1hdGVyaWFsPXIodC5tYXRlcmlhbCxnLmZyb21UeXBlKGcuQ29sb3JUeXBlKSksdGhpcy5fbWF0ZXJpYWw9dm9pZCAwLHRoaXMuX3RyYW5zbHVjZW50PXZvaWQgMCx0aGlzLmlkPXQuaWQsdGhpcy5faWQ9dm9pZCAwLHRoaXMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWU9cih0LmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lLCExKSx0aGlzLm9ubHlTdW5MaWdodGluZz1yKHQub25seVN1bkxpZ2h0aW5nLCExKSx0aGlzLl9vbmx5U3VuTGlnaHRpbmc9ITEsdGhpcy5fc3A9dm9pZCAwLHRoaXMuX3JzPXZvaWQgMCx0aGlzLl92YT12b2lkIDAsdGhpcy5fcGlja1NQPXZvaWQgMCx0aGlzLl9waWNrSWQ9dm9pZCAwLHRoaXMuX2NvbG9yQ29tbWFuZD1uZXcgaCh7b3duZXI6cih0Ll9vd25lcix0aGlzKX0pLHRoaXMuX3BpY2tDb21tYW5kPW5ldyBoKHtvd25lcjpyKHQuX293bmVyLHRoaXMpfSk7dmFyIG49dGhpczt0aGlzLl91bmlmb3Jtcz17dV9yYWRpaTpmdW5jdGlvbigpe3JldHVybiBuLnJhZGlpfSx1X29uZU92ZXJFbGxpcHNvaWRSYWRpaVNxdWFyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gbi5fb25lT3ZlckVsbGlwc29pZFJhZGlpU3F1YXJlZH19LHRoaXMuX3BpY2tVbmlmb3Jtcz17Y3ptX3BpY2tDb2xvcjpmdW5jdGlvbigpe3JldHVybiBuLl9waWNrSWQuY29sb3J9fX07cmV0dXJuIEUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LHIsYSl7aWYodGhpcy5zaG93JiZyLm1vZGU9PT15LlNDRU5FM0QmJm8odGhpcy5jZW50ZXIpJiZvKHRoaXMucmFkaWkpKXt2YXIgcz10aGlzLm1hdGVyaWFsLmlzVHJhbnNsdWNlbnQoKSx1PXRoaXMuX3RyYW5zbHVjZW50IT09czsoIW8odGhpcy5fcnMpfHx1KSYmKHRoaXMuX3RyYW5zbHVjZW50PXMsdGhpcy5fcnM9dC5jcmVhdGVSZW5kZXJTdGF0ZSh7Y3VsbDp7ZW5hYmxlZDohMCxmYWNlOnYuRlJPTlR9LGRlcHRoVGVzdDp7ZW5hYmxlZDohMH0sZGVwdGhNYXNrOiFzJiZ0LmZyYWdtZW50RGVwdGgsYmxlbmRpbmc6cz9wLkFMUEhBX0JMRU5EOnZvaWQgMH0pKSxvKHRoaXMuX3ZhKXx8KHRoaXMuX3ZhPUModCkpO3ZhciBjPSExLGg9dGhpcy5yYWRpaTtpZighaS5lcXVhbHModGhpcy5fcmFkaWksaCkpe2kuY2xvbmUoaCx0aGlzLl9yYWRpaSk7dmFyIGc9dGhpcy5fb25lT3ZlckVsbGlwc29pZFJhZGlpU3F1YXJlZDtnLng9MS8oaC54KmgueCksZy55PTEvKGgueSpoLnkpLGcuej0xLyhoLnoqaC56KSxjPSEwfWwuZXF1YWxzKHRoaXMubW9kZWxNYXRyaXgsdGhpcy5fbW9kZWxNYXRyaXgpJiZpLmVxdWFscyh0aGlzLmNlbnRlcix0aGlzLl9jZW50ZXIpfHwobC5jbG9uZSh0aGlzLm1vZGVsTWF0cml4LHRoaXMuX21vZGVsTWF0cml4KSxpLmNsb25lKHRoaXMuY2VudGVyLHRoaXMuX2NlbnRlciksbC5tdWx0aXBseUJ5VHJhbnNsYXRpb24odGhpcy5tb2RlbE1hdHJpeCx0aGlzLmNlbnRlcix0aGlzLl9jb21wdXRlZE1vZGVsTWF0cml4KSxjPSEwKSxjJiYoaS5jbG9uZShpLlpFUk8sdGhpcy5fYm91bmRpbmdTcGhlcmUuY2VudGVyKSx0aGlzLl9ib3VuZGluZ1NwaGVyZS5yYWRpdXM9aS5tYXhpbXVtQ29tcG9uZW50KGgpLGUudHJhbnNmb3JtKHRoaXMuX2JvdW5kaW5nU3BoZXJlLHRoaXMuX2NvbXB1dGVkTW9kZWxNYXRyaXgsdGhpcy5fYm91bmRpbmdTcGhlcmUpKTt2YXIgRT10aGlzLl9tYXRlcmlhbCE9PXRoaXMubWF0ZXJpYWw7dGhpcy5fbWF0ZXJpYWw9dGhpcy5tYXRlcmlhbCx0aGlzLl9tYXRlcmlhbC51cGRhdGUodCk7dmFyIGI9dGhpcy5vbmx5U3VuTGlnaHRpbmchPT10aGlzLl9vbmx5U3VuTGlnaHRpbmc7dGhpcy5fb25seVN1bkxpZ2h0aW5nPXRoaXMub25seVN1bkxpZ2h0aW5nO3ZhciBTPXRoaXMuX2NvbG9yQ29tbWFuZDtpZihFfHxifHx1KXt2YXIgVD1kKHtkZWZpbmVzOlt0aGlzLm9ubHlTdW5MaWdodGluZz8iT05MWV9TVU5fTElHSFRJTkciOiIiLCFzJiZ0LmZyYWdtZW50RGVwdGg/IldSSVRFX0RFUFRIIjoiIl0sc291cmNlczpbdGhpcy5tYXRlcmlhbC5zaGFkZXJTb3VyY2UsbV19KTt0aGlzLl9zcD10LnJlcGxhY2VTaGFkZXJQcm9ncmFtKHRoaXMuX3NwLGYsVCx3KSxTLnZlcnRleEFycmF5PXRoaXMuX3ZhLFMucmVuZGVyU3RhdGU9dGhpcy5fcnMsUy5zaGFkZXJQcm9ncmFtPXRoaXMuX3NwLFMudW5pZm9ybU1hcD1uKHRoaXMuX3VuaWZvcm1zLHRoaXMubWF0ZXJpYWwuX3VuaWZvcm1zKSxTLmV4ZWN1dGVJbkNsb3Nlc3RGcnVzdHVtPXN9dmFyIHg9ci5wYXNzZXM7aWYoeC5yZW5kZXImJihTLmJvdW5kaW5nVm9sdW1lPXRoaXMuX2JvdW5kaW5nU3BoZXJlLFMuZGVidWdTaG93Qm91bmRpbmdWb2x1bWU9dGhpcy5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSxTLm1vZGVsTWF0cml4PXRoaXMuX2NvbXB1dGVkTW9kZWxNYXRyaXgsUy5wYXNzPXM/Xy5UUkFOU0xVQ0VOVDpfLk9QQVFVRSxhLnB1c2goUykpLHgucGljayl7dmFyIEE9dGhpcy5fcGlja0NvbW1hbmQ7aWYobyh0aGlzLl9waWNrSWQpJiZ0aGlzLl9pZD09PXRoaXMuaWR8fCh0aGlzLl9pZD10aGlzLmlkLHRoaXMuX3BpY2tJZD10aGlzLl9waWNrSWQmJnRoaXMuX3BpY2tJZC5kZXN0cm95KCksdGhpcy5fcGlja0lkPXQuY3JlYXRlUGlja0lkKHtwcmltaXRpdmU6dGhpcyxpZDp0aGlzLmlkfSkpLEV8fGJ8fCFvKHRoaXMuX3BpY2tTUCkpe3ZhciBQPWQoe2RlZmluZXM6W3RoaXMub25seVN1bkxpZ2h0aW5nPyJPTkxZX1NVTl9MSUdIVElORyI6IiIsIXMmJnQuZnJhZ21lbnREZXB0aD8iV1JJVEVfREVQVEgiOiIiXSxzb3VyY2VzOlt0aGlzLm1hdGVyaWFsLnNoYWRlclNvdXJjZSxtXSxwaWNrQ29sb3JRdWFsaWZpZXI6InVuaWZvcm0ifSk7dGhpcy5fcGlja1NQPXQucmVwbGFjZVNoYWRlclByb2dyYW0odGhpcy5fcGlja1NQLGYsUCx3KSxBLnZlcnRleEFycmF5PXRoaXMuX3ZhLEEucmVuZGVyU3RhdGU9dGhpcy5fcnMsQS5zaGFkZXJQcm9ncmFtPXRoaXMuX3BpY2tTUCxBLnVuaWZvcm1NYXA9bihuKHRoaXMuX3VuaWZvcm1zLHRoaXMuX3BpY2tVbmlmb3JtcyksdGhpcy5tYXRlcmlhbC5fdW5pZm9ybXMpLEEuZXhlY3V0ZUluQ2xvc2VzdEZydXN0dW09c31BLmJvdW5kaW5nVm9sdW1lPXRoaXMuX2JvdW5kaW5nU3BoZXJlLEEubW9kZWxNYXRyaXg9dGhpcy5fY29tcHV0ZWRNb2RlbE1hdHJpeCxBLnBhc3M9cz9fLlRSQU5TTFVDRU5UOl8uT1BBUVVFLGEucHVzaChBKX19fSxFLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxFLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NwPXRoaXMuX3NwJiZ0aGlzLl9zcC5kZXN0cm95KCksdGhpcy5fcGlja1NQPXRoaXMuX3BpY2tTUCYmdGhpcy5fcGlja1NQLmRlc3Ryb3koKSx0aGlzLl9waWNrSWQ9dGhpcy5fcGlja0lkJiZ0aGlzLl9waWNrSWQuZGVzdHJveSgpLGEodGhpcyl9LEV9KSxkZWZpbmUoIlNjZW5lL01vb24iLFsiLi4vQ29yZS9idWlsZE1vZHVsZVVybCIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9FbGxpcHNvaWQiLCIuLi9Db3JlL0lhdU9yaWVudGF0aW9uQXhlcyIsIi4uL0NvcmUvTWF0cml4MyIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvU2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zIiwiLi4vQ29yZS9UcmFuc2Zvcm1zIiwiLi9FbGxpcHNvaWRQcmltaXRpdmUiLCIuL01hdGVyaWFsIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtKXsidXNlIHN0cmljdCI7dmFyIGY9ZnVuY3Rpb24odCl7dD1pKHQsaS5FTVBUWV9PQkpFQ1QpO3ZhciByPXQudGV4dHVyZVVybDtuKHIpfHwocj1lKCJBc3NldHMvVGV4dHVyZXMvbW9vblNtYWxsLmpwZyIpKSx0aGlzLnNob3c9aSh0LnNob3csITApLHRoaXMudGV4dHVyZVVybD1yLHRoaXMuX2VsbGlwc29pZD1pKHQuZWxsaXBzb2lkLGEuTU9PTiksdGhpcy5vbmx5U3VuTGlnaHRpbmc9aSh0Lm9ubHlTdW5MaWdodGluZywhMCksdGhpcy5fZWxsaXBzb2lkUHJpbWl0aXZlPW5ldyBoKHtyYWRpaTp0aGlzLmVsbGlwc29pZC5yYWRpaSxtYXRlcmlhbDptLmZyb21UeXBlKG0uSW1hZ2VUeXBlKSxfb3duZXI6dGhpc30pLHRoaXMuX2VsbGlwc29pZFByaW1pdGl2ZS5tYXRlcmlhbC50cmFuc2x1Y2VudD0hMSx0aGlzLl9heGVzPW5ldyBzfTtyKGYucHJvdG90eXBlLHtlbGxpcHNvaWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbGxpcHNvaWR9fX0pO3ZhciBwPW5ldyBsLHY9bmV3IGwsZz1uZXcgdDtyZXR1cm4gZi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxpKXtpZih0aGlzLnNob3cpe3ZhciByPXRoaXMuX2VsbGlwc29pZFByaW1pdGl2ZTtyLm1hdGVyaWFsLnVuaWZvcm1zLmltYWdlPXRoaXMudGV4dHVyZVVybCxyLm9ubHlTdW5MaWdodGluZz10aGlzLm9ubHlTdW5MaWdodGluZzt2YXIgbz10LnRpbWU7bihkLmNvbXB1dGVJY3JmVG9GaXhlZE1hdHJpeChvLHApKXx8ZC5jb21wdXRlVGVtZVRvUHNldWRvRml4ZWRNYXRyaXgobyxwKTt2YXIgYT10aGlzLl9heGVzLmV2YWx1YXRlKG8sdik7bC50cmFuc3Bvc2UoYSxhKSxsLm11bHRpcGx5KHAsYSxhKTt2YXIgcz1jLmNvbXB1dGVNb29uUG9zaXRpb25JbkVhcnRoSW5lcnRpYWxGcmFtZShvLGcpO2wubXVsdGlwbHlCeVZlY3RvcihwLHMscyksdS5mcm9tUm90YXRpb25UcmFuc2xhdGlvbihhLHMsci5tb2RlbE1hdHJpeCksci51cGRhdGUoZSx0LGkpfX0sZi5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbGxpcHNvaWRQcmltaXRpdmU9dGhpcy5fZWxsaXBzb2lkUHJpbWl0aXZlJiZ0aGlzLl9lbGxpcHNvaWRQcmltaXRpdmUuZGVzdHJveSgpLG8odGhpcyl9LGZ9KSxkZWZpbmUoIkNvcmUvbWVyZ2VTb3J0IixbIi4vZGVmaW5lZCIsIi4vRGV2ZWxvcGVyRXJyb3IiXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKGUsdCxyLG8sYSxzKXt2YXIgbCx1LGM9YS1vKzEsZD1zLWEsaD1pLG09bjtmb3IobD0wO2M+bDsrK2wpaFtsXT1lW28rbF07Zm9yKHU9MDtkPnU7Kyt1KW1bdV09ZVthK3UrMV07bD0wLHU9MDtmb3IodmFyIGY9bztzPj1mOysrZil7dmFyIHA9aFtsXSx2PW1bdV07Yz5sJiYodT49ZHx8dChwLHYscik8PTApPyhlW2ZdPXAsKytsKTpkPnUmJihlW2ZdPXYsKyt1KX19ZnVuY3Rpb24gdChpLG4scixvLGEpe2lmKCEobz49YSkpe3ZhciBzPU1hdGguZmxvb3IoLjUqKG8rYSkpO3QoaSxuLHIsbyxzKSx0KGksbixyLHMrMSxhKSxlKGksbixyLG8scyxhKX19dmFyIGk9W10sbj1bXSxyPWZ1bmN0aW9uKGUscixvKXt2YXIgYT1lLmxlbmd0aCxzPU1hdGguY2VpbCguNSphKTtpLmxlbmd0aD1zLG4ubGVuZ3RoPXMsdChlLHIsbywwLGEtMSksaS5sZW5ndGg9MCxuLmxlbmd0aD0wfTtyZXR1cm4gcn0pLGRlZmluZSgiU2hhZGVycy9WaWV3cG9ydFF1YWRWUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuImF0dHJpYnV0ZSB2ZWM0IHBvc2l0aW9uO1xuYXR0cmlidXRlIHZlYzIgdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIGdsX1Bvc2l0aW9uID0gcG9zaXRpb247XG4gICAgdl90ZXh0dXJlQ29vcmRpbmF0ZXMgPSB0ZXh0dXJlQ29vcmRpbmF0ZXM7XG59In0pLGRlZmluZSgiUmVuZGVyZXIvQnVmZmVyIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24oZSx0LGksbixyKXt0aGlzLl9nbD1lLHRoaXMuX2J1ZmZlclRhcmdldD10LHRoaXMuX3NpemVJbkJ5dGVzPWksdGhpcy5fdXNhZ2U9bix0aGlzLl9idWZmZXI9cix0aGlzLnZlcnRleEFycmF5RGVzdHJveWFibGU9ITB9O3JldHVybiB0KG4ucHJvdG90eXBlLHtzaXplSW5CeXRlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NpemVJbkJ5dGVzfX0sdXNhZ2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91c2FnZX19fSksbi5wcm90b3R5cGUuX2dldEJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9idWZmZXJ9LG4ucHJvdG90eXBlLmNvcHlGcm9tQXJyYXlWaWV3PWZ1bmN0aW9uKHQsaSl7aT1lKGksMCk7dmFyIG49dGhpcy5fZ2wscj10aGlzLl9idWZmZXJUYXJnZXQ7bi5iaW5kQnVmZmVyKHIsdGhpcy5fYnVmZmVyKSxuLmJ1ZmZlclN1YkRhdGEocixpLHQpLG4uYmluZEJ1ZmZlcihyLG51bGwpfSxuLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxuLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dsLmRlbGV0ZUJ1ZmZlcih0aGlzLl9idWZmZXIpLGkodGhpcyl9LG59KSxkZWZpbmUoIlJlbmRlcmVyL0ZyYW1lYnVmZmVyIixbIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvUGl4ZWxGb3JtYXQiXSxmdW5jdGlvbihlLHQsaSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcihlLHQsaSl7dmFyIG49ZS5fZ2w7bi5mcmFtZWJ1ZmZlclRleHR1cmUyRChuLkZSQU1FQlVGRkVSLHQsaS5fdGFyZ2V0LGkuX3RleHR1cmUsMCl9ZnVuY3Rpb24gbyhlLHQsaSl7dmFyIG49ZS5fZ2w7bi5mcmFtZWJ1ZmZlclJlbmRlcmJ1ZmZlcihuLkZSQU1FQlVGRkVSLHQsbi5SRU5ERVJCVUZGRVIsaS5fZ2V0UmVuZGVyYnVmZmVyKCkpfXZhciBhPWZ1bmN0aW9uKGksbixhKXthPWUoYSxlLkVNUFRZX09CSkVDVCksdGhpcy5fZ2w9aSx0aGlzLl9mcmFtZWJ1ZmZlcj1pLmNyZWF0ZUZyYW1lYnVmZmVyKCksdGhpcy5fY29sb3JUZXh0dXJlcz1bXSx0aGlzLl9jb2xvclJlbmRlcmJ1ZmZlcnM9W10sdGhpcy5fYWN0aXZlQ29sb3JBdHRhY2htZW50cz1bXSx0aGlzLl9kZXB0aFRleHR1cmU9dm9pZCAwLHRoaXMuX2RlcHRoUmVuZGVyYnVmZmVyPXZvaWQgMCx0aGlzLl9zdGVuY2lsUmVuZGVyYnVmZmVyPXZvaWQgMCx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlPXZvaWQgMCx0aGlzLl9kZXB0aFN0ZW5jaWxSZW5kZXJidWZmZXI9dm9pZCAwLHRoaXMuZGVzdHJveUF0dGFjaG1lbnRzPWUoYS5kZXN0cm95QXR0YWNobWVudHMsITApLHQoYS5kZXB0aFRleHR1cmUpfHx0KGEuZGVwdGhSZW5kZXJidWZmZXIpLHQoYS5kZXB0aFN0ZW5jaWxUZXh0dXJlKXx8dChhLmRlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlciksdGhpcy5fYmluZCgpO3ZhciBzLGwsdSxjLGQ7aWYodChhLmNvbG9yVGV4dHVyZXMpKXt2YXIgaD1hLmNvbG9yVGV4dHVyZXM7Zm9yKGM9dGhpcy5fY29sb3JUZXh0dXJlcy5sZW5ndGg9dGhpcy5fYWN0aXZlQ29sb3JBdHRhY2htZW50cy5sZW5ndGg9aC5sZW5ndGgsdT0wO2M+dTsrK3Upcz1oW3VdLGQ9dGhpcy5fZ2wuQ09MT1JfQVRUQUNITUVOVDArdSxyKHRoaXMsZCxzKSx0aGlzLl9hY3RpdmVDb2xvckF0dGFjaG1lbnRzW3VdPWQsdGhpcy5fY29sb3JUZXh0dXJlc1t1XT1zfWlmKHQoYS5jb2xvclJlbmRlcmJ1ZmZlcnMpKXt2YXIgbT1hLmNvbG9yUmVuZGVyYnVmZmVycztmb3IoYz10aGlzLl9jb2xvclJlbmRlcmJ1ZmZlcnMubGVuZ3RoPXRoaXMuX2FjdGl2ZUNvbG9yQXR0YWNobWVudHMubGVuZ3RoPW0ubGVuZ3RoLHU9MDtjPnU7Kyt1KWw9bVt1XSxkPXRoaXMuX2dsLkNPTE9SX0FUVEFDSE1FTlQwK3Usbyh0aGlzLGQsbCksdGhpcy5fYWN0aXZlQ29sb3JBdHRhY2htZW50c1t1XT1kLHRoaXMuX2NvbG9yUmVuZGVyYnVmZmVyc1t1XT1sfXQoYS5kZXB0aFRleHR1cmUpJiYocz1hLmRlcHRoVGV4dHVyZSxyKHRoaXMsdGhpcy5fZ2wuREVQVEhfQVRUQUNITUVOVCxzKSx0aGlzLl9kZXB0aFRleHR1cmU9cyksdChhLmRlcHRoUmVuZGVyYnVmZmVyKSYmKGw9YS5kZXB0aFJlbmRlcmJ1ZmZlcixvKHRoaXMsdGhpcy5fZ2wuREVQVEhfQVRUQUNITUVOVCxsKSx0aGlzLl9kZXB0aFJlbmRlcmJ1ZmZlcj1sKSx0KGEuc3RlbmNpbFJlbmRlcmJ1ZmZlcikmJihsPWEuc3RlbmNpbFJlbmRlcmJ1ZmZlcixvKHRoaXMsdGhpcy5fZ2wuU1RFTkNJTF9BVFRBQ0hNRU5ULGwpLHRoaXMuX3N0ZW5jaWxSZW5kZXJidWZmZXI9bCksdChhLmRlcHRoU3RlbmNpbFRleHR1cmUpJiYocz1hLmRlcHRoU3RlbmNpbFRleHR1cmUscih0aGlzLHRoaXMuX2dsLkRFUFRIX1NURU5DSUxfQVRUQUNITUVOVCxzKSx0aGlzLl9kZXB0aFN0ZW5jaWxUZXh0dXJlPXMpLHQoYS5kZXB0aFN0ZW5jaWxSZW5kZXJidWZmZXIpJiYobD1hLmRlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlcixvKHRoaXMsdGhpcy5fZ2wuREVQVEhfU1RFTkNJTF9BVFRBQ0hNRU5ULGwpLHRoaXMuX2RlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlcj1sKSx0aGlzLl91bkJpbmQoKX07cmV0dXJuIGkoYS5wcm90b3R5cGUse3N0YXR1czp7Z2V0OmZ1bmN0aW9uKCl7dGhpcy5fYmluZCgpO3ZhciBlPXRoaXMuX2dsLmNoZWNrRnJhbWVidWZmZXJTdGF0dXModGhpcy5fZ2wuRlJBTUVCVUZGRVIpO3JldHVybiB0aGlzLl91bkJpbmQoKSxlfX0sbnVtYmVyT2ZDb2xvckF0dGFjaG1lbnRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWN0aXZlQ29sb3JBdHRhY2htZW50cy5sZW5ndGh9fSxkZXB0aFRleHR1cmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZXB0aFRleHR1cmV9fSxkZXB0aFJlbmRlcmJ1ZmZlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlcHRoUmVuZGVyYnVmZmVyfX0sc3RlbmNpbFJlbmRlcmJ1ZmZlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0ZW5jaWxSZW5kZXJidWZmZXJ9fSxkZXB0aFN0ZW5jaWxUZXh0dXJlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZX19LGRlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlcn19LGhhc0RlcHRoQXR0YWNobWVudDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuISEodGhpcy5kZXB0aFRleHR1cmV8fHRoaXMuZGVwdGhSZW5kZXJidWZmZXJ8fHRoaXMuZGVwdGhTdGVuY2lsVGV4dHVyZXx8dGhpcy5kZXB0aFN0ZW5jaWxSZW5kZXJidWZmZXIpfX19KSxhLnByb3RvdHlwZS5fYmluZD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2dsO2UuYmluZEZyYW1lYnVmZmVyKGUuRlJBTUVCVUZGRVIsdGhpcy5fZnJhbWVidWZmZXIpfSxhLnByb3RvdHlwZS5fdW5CaW5kPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fZ2w7ZS5iaW5kRnJhbWVidWZmZXIoZS5GUkFNRUJVRkZFUixudWxsKX0sYS5wcm90b3R5cGUuX2dldEFjdGl2ZUNvbG9yQXR0YWNobWVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWN0aXZlQ29sb3JBdHRhY2htZW50c30sYS5wcm90b3R5cGUuZ2V0Q29sb3JUZXh0dXJlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jb2xvclRleHR1cmVzW2VdfSxhLnByb3RvdHlwZS5nZXRDb2xvclJlbmRlcmJ1ZmZlcj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY29sb3JSZW5kZXJidWZmZXJzW2VdfSxhLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxhLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7aWYodGhpcy5kZXN0cm95QXR0YWNobWVudHMpe2Zvcih2YXIgZT0wLGk9dGhpcy5fY29sb3JUZXh0dXJlcyxyPWkubGVuZ3RoO3I+ZTsrK2Upe3ZhciBvPWlbZV07dChvKSYmby5kZXN0cm95KCl9dmFyIGE9dGhpcy5fY29sb3JSZW5kZXJidWZmZXJzO2ZvcihyPWEubGVuZ3RoLGU9MDtyPmU7KytlKXt2YXIgcz1hW2VdO3QocykmJnMuZGVzdHJveSgpfXRoaXMuX2RlcHRoVGV4dHVyZT10aGlzLl9kZXB0aFRleHR1cmUmJnRoaXMuX2RlcHRoVGV4dHVyZS5kZXN0cm95KCksdGhpcy5fZGVwdGhSZW5kZXJidWZmZXI9dGhpcy5fZGVwdGhSZW5kZXJidWZmZXImJnRoaXMuX2RlcHRoUmVuZGVyYnVmZmVyLmRlc3Ryb3koKSx0aGlzLl9zdGVuY2lsUmVuZGVyYnVmZmVyPXRoaXMuX3N0ZW5jaWxSZW5kZXJidWZmZXImJnRoaXMuX3N0ZW5jaWxSZW5kZXJidWZmZXIuZGVzdHJveSgpLHRoaXMuX2RlcHRoU3RlbmNpbFRleHR1cmU9dGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZSYmdGhpcy5fZGVwdGhTdGVuY2lsVGV4dHVyZS5kZXN0cm95KCksdGhpcy5fZGVwdGhTdGVuY2lsUmVuZGVyYnVmZmVyPXRoaXMuX2RlcHRoU3RlbmNpbFJlbmRlcmJ1ZmZlciYmdGhpcy5fZGVwdGhTdGVuY2lsUmVuZGVyYnVmZmVyLmRlc3Ryb3koKX1yZXR1cm4gdGhpcy5fZ2wuZGVsZXRlRnJhbWVidWZmZXIodGhpcy5fZnJhbWVidWZmZXIpLG4odGhpcyl9LGF9KSxkZWZpbmUoIlJlbmRlcmVyL1Bhc3NTdGF0ZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oZSl7dGhpcy5jb250ZXh0PWUsdGhpcy5mcmFtZWJ1ZmZlcj12b2lkIDAsdGhpcy5ibGVuZGluZ0VuYWJsZWQ9dm9pZCAwLHRoaXMuc2Npc3NvclRlc3Q9dm9pZCAwfTtyZXR1cm4gZX0pLGRlZmluZSgiUmVuZGVyZXIvUmVuZGVyYnVmZmVyRm9ybWF0IixbIi4uL0NvcmUvZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXtSR0JBNDozMjg1NCxSR0I1X0ExOjMyODU1LFJHQjU2NTozNjE5NCxERVBUSF9DT01QT05FTlQxNjozMzE4OSxTVEVOQ0lMX0lOREVYODozNjE2OCxERVBUSF9TVEVOQ0lMOjM0MDQxLHZhbGlkYXRlOmZ1bmN0aW9uKGUpe3JldHVybiBlPT09dC5SR0JBNHx8ZT09PXQuUkdCNV9BMXx8ZT09PXQuUkdCNTY1fHxlPT09dC5ERVBUSF9DT01QT05FTlQxNnx8ZT09PXQuU1RFTkNJTF9JTkRFWDh8fGU9PT10LkRFUFRIX1NURU5DSUx9fTtyZXR1cm4gZSh0KX0pLGRlZmluZSgiUmVuZGVyZXIvUGlja0ZyYW1lYnVmZmVyIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuL1Bhc3NTdGF0ZSIsIi4vUmVuZGVyYnVmZmVyRm9ybWF0Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKHQpe3ZhciBpPW5ldyBvKHQpO2kuYmxlbmRpbmdFbmFibGVkPSExLGkuc2Npc3NvclRlc3Q9e2VuYWJsZWQ6ITAscmVjdGFuZ2xlOm5ldyBlfSx0aGlzLl9jb250ZXh0PXQsdGhpcy5fZmI9dm9pZCAwLHRoaXMuX3Bhc3NTdGF0ZT1pLHRoaXMuX3dpZHRoPTAsdGhpcy5faGVpZ2h0PTB9O3MucHJvdG90eXBlLmJlZ2luPWZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMuX2NvbnRleHQscj1pLmRyYXdpbmdCdWZmZXJXaWR0aCxvPWkuZHJhd2luZ0J1ZmZlckhlaWdodDtyZXR1cm4gZS5jbG9uZSh0LHRoaXMuX3Bhc3NTdGF0ZS5zY2lzc29yVGVzdC5yZWN0YW5nbGUpLG4odGhpcy5fZmIpJiZ0aGlzLl93aWR0aD09PXImJnRoaXMuX2hlaWdodD09PW98fCh0aGlzLl93aWR0aD1yLHRoaXMuX2hlaWdodD1vLHRoaXMuX2ZiPXRoaXMuX2ZiJiZ0aGlzLl9mYi5kZXN0cm95KCksdGhpcy5fZmI9aS5jcmVhdGVGcmFtZWJ1ZmZlcih7Y29sb3JUZXh0dXJlczpbaS5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOnIsaGVpZ2h0Om99KV0sZGVwdGhSZW5kZXJidWZmZXI6aS5jcmVhdGVSZW5kZXJidWZmZXIoe2Zvcm1hdDphLkRFUFRIX0NPTVBPTkVOVDE2fSl9KSx0aGlzLl9wYXNzU3RhdGUuZnJhbWVidWZmZXI9dGhpcy5fZmIpLHRoaXMuX3Bhc3NTdGF0ZX07dmFyIGw9bmV3IHQ7cmV0dXJuIHMucHJvdG90eXBlLmVuZD1mdW5jdGlvbihlKXtmb3IodmFyIHI9aShlLndpZHRoLDEpLG89aShlLmhlaWdodCwxKSxhPXRoaXMuX2NvbnRleHQscz1hLnJlYWRQaXhlbHMoe3g6ZS54LHk6ZS55LHdpZHRoOnIsaGVpZ2h0Om8sZnJhbWVidWZmZXI6dGhpcy5fZmJ9KSx1PU1hdGgubWF4KHIsbyksYz11KnUsZD1NYXRoLmZsb29yKC41KnIpLGg9TWF0aC5mbG9vciguNSpvKSxtPTAsZj0wLHA9MCx2PS0xLGc9MDtjPmc7KytnKXtpZihtPj0tZCYmZD49bSYmZj49LWgmJmg+PWYpe3ZhciBfPTQqKChoLWYpKnIrbStkKTtsLnJlZD10LmJ5dGVUb0Zsb2F0KHNbX10pLGwuZ3JlZW49dC5ieXRlVG9GbG9hdChzW18rMV0pLGwuYmx1ZT10LmJ5dGVUb0Zsb2F0KHNbXysyXSksbC5hbHBoYT10LmJ5dGVUb0Zsb2F0KHNbXyszXSk7dmFyIHk9YS5nZXRPYmplY3RCeVBpY2tDb2xvcihsKTtpZihuKHkpKXJldHVybiB5fWlmKG09PT1mfHwwPm0mJi1tPT09Znx8bT4wJiZtPT09MS1mKXt2YXIgQz1wO3A9LXYsdj1DfW0rPXAsZis9dn1yZXR1cm4gdm9pZCAwfSxzLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxzLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZiPXRoaXMuX2ZiJiZ0aGlzLl9mYi5kZXN0cm95KCkscih0aGlzKX0sc30pLGRlZmluZSgiUmVuZGVyZXIvUmVuZGVyYnVmZmVyIixbIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCJdLGZ1bmN0aW9uKGUsdCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoZSx0LGksbil7dGhpcy5fZ2w9ZSx0aGlzLl9mb3JtYXQ9dCx0aGlzLl93aWR0aD1pLHRoaXMuX2hlaWdodD1uLHRoaXMuX3JlbmRlcmJ1ZmZlcj10aGlzLl9nbC5jcmVhdGVSZW5kZXJidWZmZXIoKSxlLmJpbmRSZW5kZXJidWZmZXIoZS5SRU5ERVJCVUZGRVIsdGhpcy5fcmVuZGVyYnVmZmVyKSxlLnJlbmRlcmJ1ZmZlclN0b3JhZ2UoZS5SRU5ERVJCVUZGRVIsdCxpLG4pLGUuYmluZFJlbmRlcmJ1ZmZlcihlLlJFTkRFUkJVRkZFUixudWxsKX1yZXR1cm4gZShpLnByb3RvdHlwZSx7Zm9ybWF0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9ybWF0fX0sd2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93aWR0aH19LGhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH19fSksaS5wcm90b3R5cGUuX2dldFJlbmRlcmJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZW5kZXJidWZmZXJ9LGkucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGkucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2wuZGVsZXRlUmVuZGVyYnVmZmVyKHRoaXMuX3JlbmRlcmJ1ZmZlciksdCh0aGlzKX0saX0pLGRlZmluZSgiUmVuZGVyZXIvUmVuZGVyU3RhdGUiLFsiLi4vQ29yZS9Cb3VuZGluZ1JlY3RhbmdsZSIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL1J1bnRpbWVFcnJvciIsIi4uL0NvcmUvV2luZGluZ09yZGVyIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHMoZSx0LGkpe2k/ZS5lbmFibGUodCk6ZS5kaXNhYmxlKHQpfWZ1bmN0aW9uIGwoZSx0KXtlLmZyb250RmFjZSh0LmZyb250RmFjZSl9ZnVuY3Rpb24gdShlLHQpe3ZhciBpPXQuY3VsbCxuPWkuZW5hYmxlZDtzKGUsZS5DVUxMX0ZBQ0UsbiksbiYmZS5jdWxsRmFjZShpLmZhY2UpfWZ1bmN0aW9uIGMoZSx0KXtlLmxpbmVXaWR0aCh0LmxpbmVXaWR0aCl9ZnVuY3Rpb24gZChlLHQpe3ZhciBpPXQucG9seWdvbk9mZnNldCxuPWkuZW5hYmxlZDtzKGUsZS5QT0xZR09OX09GRlNFVF9GSUxMLG4pLG4mJmUucG9seWdvbk9mZnNldChpLmZhY3RvcixpLnVuaXRzKX1mdW5jdGlvbiBoKGUsdCxpKXt2YXIgcj10LnNjaXNzb3JUZXN0LG89bihpLnNjaXNzb3JUZXN0KT9pLnNjaXNzb3JUZXN0LmVuYWJsZWQ6ci5lbmFibGVkO2lmKHMoZSxlLlNDSVNTT1JfVEVTVCxvKSxvKXt2YXIgYT1uKGkuc2Npc3NvclRlc3QpP2kuc2Npc3NvclRlc3QucmVjdGFuZ2xlOnIucmVjdGFuZ2xlO2Uuc2Npc3NvcihhLngsYS55LGEud2lkdGgsYS5oZWlnaHQpfX1mdW5jdGlvbiBtKGUsdCl7dmFyIGk9dC5kZXB0aFJhbmdlO2UuZGVwdGhSYW5nZShpLm5lYXIsaS5mYXIpfWZ1bmN0aW9uIGYoZSx0KXt2YXIgaT10LmRlcHRoVGVzdCxuPWkuZW5hYmxlZDtzKGUsZS5ERVBUSF9URVNULG4pLG4mJmUuZGVwdGhGdW5jKGkuZnVuYyl9ZnVuY3Rpb24gcChlLHQpe3ZhciBpPXQuY29sb3JNYXNrO2UuY29sb3JNYXNrKGkucmVkLGkuZ3JlZW4saS5ibHVlLGkuYWxwaGEpfWZ1bmN0aW9uIHYoZSx0KXtlLmRlcHRoTWFzayh0LmRlcHRoTWFzayl9ZnVuY3Rpb24gZyhlLHQpe2Uuc3RlbmNpbE1hc2sodC5zdGVuY2lsTWFzayl9ZnVuY3Rpb24gXyhlLHQsaSl7dmFyIHI9dC5ibGVuZGluZyxvPW4oaS5ibGVuZGluZ0VuYWJsZWQpP2kuYmxlbmRpbmdFbmFibGVkOnIuZW5hYmxlZDtzKGUsZS5CTEVORCxvKSxvJiYoYihlLHIuY29sb3IpLGUuYmxlbmRFcXVhdGlvblNlcGFyYXRlKHIuZXF1YXRpb25SZ2Isci5lcXVhdGlvbkFscGhhKSxlLmJsZW5kRnVuY1NlcGFyYXRlKHIuZnVuY3Rpb25Tb3VyY2VSZ2Isci5mdW5jdGlvbkRlc3RpbmF0aW9uUmdiLHIuZnVuY3Rpb25Tb3VyY2VBbHBoYSxyLmZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYSkpfWZ1bmN0aW9uIHkoZSx0KXt2YXIgaT10LnN0ZW5jaWxUZXN0LG49aS5lbmFibGVkO2lmKHMoZSxlLlNURU5DSUxfVEVTVCxuKSxuKXt2YXIgcj1pLmZyb250RnVuY3Rpb24sbz1pLmJhY2tGdW5jdGlvbixhPWkucmVmZXJlbmNlLGw9aS5tYXNrO2Uuc3RlbmNpbEZ1bmMoaS5mcm9udEZ1bmN0aW9uLGkucmVmZXJlbmNlLGkubWFzayksZS5zdGVuY2lsRnVuY1NlcGFyYXRlKGUuQkFDSyxvLGEsbCksZS5zdGVuY2lsRnVuY1NlcGFyYXRlKGUuRlJPTlQscixhLGwpO3ZhciB1PWkuZnJvbnRPcGVyYXRpb24sYz11LmZhaWwsZD11LnpGYWlsLGg9dS56UGFzcztlLnN0ZW5jaWxPcFNlcGFyYXRlKGUuRlJPTlQsYyxkLGgpO3ZhciBtPWkuYmFja09wZXJhdGlvbixmPW0uZmFpbCxwPW0uekZhaWwsdj1tLnpQYXNzO2Uuc3RlbmNpbE9wU2VwYXJhdGUoZS5CQUNLLGYscCx2KX19ZnVuY3Rpb24gQyhlLHQsaSl7dmFyIHI9dC52aWV3cG9ydDtuKHIpfHwocj1ULHIud2lkdGg9aS5jb250ZXh0LmRyYXdpbmdCdWZmZXJXaWR0aCxyLmhlaWdodD1pLmNvbnRleHQuZHJhd2luZ0J1ZmZlckhlaWdodCksaS5jb250ZXh0LnVuaWZvcm1TdGF0ZS52aWV3cG9ydD1yLGUudmlld3BvcnQoci54LHIueSxyLndpZHRoLHIuaGVpZ2h0KX1mdW5jdGlvbiB3KGUsdCl7dmFyIGk9W107cmV0dXJuIGUuZnJvbnRGYWNlIT09dC5mcm9udEZhY2UmJmkucHVzaChsKSwoZS5jdWxsLmVuYWJsZWQhPT10LmN1bGwuZW5hYmxlZHx8ZS5jdWxsLmZhY2UhPT10LmN1bGwuZmFjZSkmJmkucHVzaCh1KSxlLmxpbmVXaWR0aCE9PXQubGluZVdpZHRoJiZpLnB1c2goYyksKGUucG9seWdvbk9mZnNldC5lbmFibGVkIT09dC5wb2x5Z29uT2Zmc2V0LmVuYWJsZWR8fGUucG9seWdvbk9mZnNldC5mYWN0b3IhPT10LnBvbHlnb25PZmZzZXQuZmFjdG9yfHxlLnBvbHlnb25PZmZzZXQudW5pdHMhPT10LnBvbHlnb25PZmZzZXQudW5pdHMpJiZpLnB1c2goZCksaS5wdXNoKGgpLChlLmRlcHRoUmFuZ2UubmVhciE9PXQuZGVwdGhSYW5nZS5uZWFyfHxlLmRlcHRoUmFuZ2UuZmFyIT09dC5kZXB0aFJhbmdlLmZhcikmJmkucHVzaChtKSwoZS5kZXB0aFRlc3QuZW5hYmxlZCE9PXQuZGVwdGhUZXN0LmVuYWJsZWR8fGUuZGVwdGhUZXN0LmZ1bmMhPT10LmRlcHRoVGVzdC5mdW5jKSYmaS5wdXNoKGYpLChlLmNvbG9yTWFzay5yZWQhPT10LmNvbG9yTWFzay5yZWR8fGUuY29sb3JNYXNrLmdyZWVuIT09dC5jb2xvck1hc2suZ3JlZW58fGUuY29sb3JNYXNrLmJsdWUhPT10LmNvbG9yTWFzay5ibHVlfHxlLmNvbG9yTWFzay5hbHBoYSE9PXQuY29sb3JNYXNrLmFscGhhKSYmaS5wdXNoKHApLGUuZGVwdGhNYXNrIT09dC5kZXB0aE1hc2smJmkucHVzaCh2KSxpLnB1c2goXyksZS5zdGVuY2lsTWFzayE9PXQuc3RlbmNpbE1hc2smJmkucHVzaChnKSwoZS5zdGVuY2lsVGVzdC5lbmFibGVkIT09dC5zdGVuY2lsVGVzdC5lbmFibGVkfHxlLnN0ZW5jaWxUZXN0LmZyb250RnVuY3Rpb24hPT10LnN0ZW5jaWxUZXN0LmZyb250RnVuY3Rpb258fGUuc3RlbmNpbFRlc3QuYmFja0Z1bmN0aW9uIT09dC5zdGVuY2lsVGVzdC5iYWNrRnVuY3Rpb258fGUuc3RlbmNpbFRlc3QucmVmZXJlbmNlIT09dC5zdGVuY2lsVGVzdC5yZWZlcmVuY2V8fGUuc3RlbmNpbFRlc3QubWFzayE9PXQuc3RlbmNpbFRlc3QubWFza3x8ZS5zdGVuY2lsVGVzdC5mcm9udE9wZXJhdGlvbi5mYWlsIT09dC5zdGVuY2lsVGVzdC5mcm9udE9wZXJhdGlvbi5mYWlsfHxlLnN0ZW5jaWxUZXN0LmZyb250T3BlcmF0aW9uLnpGYWlsIT09dC5zdGVuY2lsVGVzdC5mcm9udE9wZXJhdGlvbi56RmFpbHx8ZS5zdGVuY2lsVGVzdC5iYWNrT3BlcmF0aW9uLmZhaWwhPT10LnN0ZW5jaWxUZXN0LmJhY2tPcGVyYXRpb24uZmFpbHx8ZS5zdGVuY2lsVGVzdC5iYWNrT3BlcmF0aW9uLnpGYWlsIT09dC5zdGVuY2lsVGVzdC5iYWNrT3BlcmF0aW9uLnpGYWlsfHxlLnN0ZW5jaWxUZXN0LmJhY2tPcGVyYXRpb24uelBhc3MhPT10LnN0ZW5jaWxUZXN0LmJhY2tPcGVyYXRpb24uelBhc3MpJiZpLnB1c2goeSksKGUuc2FtcGxlQ292ZXJhZ2UuZW5hYmxlZCE9PXQuc2FtcGxlQ292ZXJhZ2UuZW5hYmxlZHx8ZS5zYW1wbGVDb3ZlcmFnZS52YWx1ZSE9PXQuc2FtcGxlQ292ZXJhZ2UudmFsdWV8fGUuc2FtcGxlQ292ZXJhZ2UuaW52ZXJ0IT09dC5zYW1wbGVDb3ZlcmFnZS5pbnZlcnQpJiZpLnB1c2goUyksaS5wdXNoKEMpLGl9dmFyIEU9ZnVuY3Rpb24ocixzKXt2YXIgbD1pKHMse30pLHU9aShsLmN1bGwse30pLGM9aShsLnBvbHlnb25PZmZzZXQse30pLGQ9aShsLnNjaXNzb3JUZXN0LHt9KSxoPWkoZC5yZWN0YW5nbGUse30pLG09aShsLmRlcHRoUmFuZ2Use30pLGY9aShsLmRlcHRoVGVzdCx7fSkscD1pKGwuY29sb3JNYXNrLHt9KSx2PWkobC5ibGVuZGluZyx7fSksZz1pKHYuY29sb3Ise30pLF89aShsLnN0ZW5jaWxUZXN0LHt9KSx5PWkoXy5mcm9udE9wZXJhdGlvbix7fSksQz1pKF8uYmFja09wZXJhdGlvbix7fSksdz1pKGwuc2FtcGxlQ292ZXJhZ2Use30pLEU9bC52aWV3cG9ydDtpZih0aGlzLmZyb250RmFjZT1pKGwuZnJvbnRGYWNlLGEuQ09VTlRFUl9DTE9DS1dJU0UpLHRoaXMuY3VsbD17ZW5hYmxlZDppKHUuZW5hYmxlZCwhMSksZmFjZTppKHUuZmFjZSxXZWJHTFJlbmRlcmluZ0NvbnRleHQuQkFDSyl9LHRoaXMubGluZVdpZHRoPWkobC5saW5lV2lkdGgsMSksdGhpcy5wb2x5Z29uT2Zmc2V0PXtlbmFibGVkOmkoYy5lbmFibGVkLCExKSxmYWN0b3I6aShjLmZhY3RvciwwKSx1bml0czppKGMudW5pdHMsMCl9LHRoaXMuc2Npc3NvclRlc3Q9e2VuYWJsZWQ6aShkLmVuYWJsZWQsITEpLHJlY3RhbmdsZTplLmNsb25lKGgpfSx0aGlzLmRlcHRoUmFuZ2U9e25lYXI6aShtLm5lYXIsMCksZmFyOmkobS5mYXIsMSl9LHRoaXMuZGVwdGhUZXN0PXtlbmFibGVkOmkoZi5lbmFibGVkLCExKSxmdW5jOmkoZi5mdW5jLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5MRVNTKX0sdGhpcy5jb2xvck1hc2s9e3JlZDppKHAucmVkLCEwKSxncmVlbjppKHAuZ3JlZW4sITApLGJsdWU6aShwLmJsdWUsITApLGFscGhhOmkocC5hbHBoYSwhMCl9LHRoaXMuZGVwdGhNYXNrPWkobC5kZXB0aE1hc2ssITApLHRoaXMuc3RlbmNpbE1hc2s9aShsLnN0ZW5jaWxNYXNrLC0xKSx0aGlzLmJsZW5kaW5nPXtlbmFibGVkOmkodi5lbmFibGVkLCExKSxjb2xvcjpuZXcgdChpKGcucmVkLDApLGkoZy5ncmVlbiwwKSxpKGcuYmx1ZSwwKSxpKGcuYWxwaGEsMCkpLGVxdWF0aW9uUmdiOmkodi5lcXVhdGlvblJnYixXZWJHTFJlbmRlcmluZ0NvbnRleHQuRlVOQ19BREQpLGVxdWF0aW9uQWxwaGE6aSh2LmVxdWF0aW9uQWxwaGEsV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZVTkNfQUREKSxmdW5jdGlvblNvdXJjZVJnYjppKHYuZnVuY3Rpb25Tb3VyY2VSZ2IsV2ViR0xSZW5kZXJpbmdDb250ZXh0Lk9ORSksZnVuY3Rpb25Tb3VyY2VBbHBoYTppKHYuZnVuY3Rpb25Tb3VyY2VBbHBoYSxXZWJHTFJlbmRlcmluZ0NvbnRleHQuT05FKSxmdW5jdGlvbkRlc3RpbmF0aW9uUmdiOmkodi5mdW5jdGlvbkRlc3RpbmF0aW9uUmdiLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5aRVJPKSxmdW5jdGlvbkRlc3RpbmF0aW9uQWxwaGE6aSh2LmZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYSxXZWJHTFJlbmRlcmluZ0NvbnRleHQuWkVSTyl9LHRoaXMuc3RlbmNpbFRlc3Q9e2VuYWJsZWQ6aShfLmVuYWJsZWQsITEpLGZyb250RnVuY3Rpb246aShfLmZyb250RnVuY3Rpb24sV2ViR0xSZW5kZXJpbmdDb250ZXh0LkFMV0FZUyksYmFja0Z1bmN0aW9uOmkoXy5iYWNrRnVuY3Rpb24sV2ViR0xSZW5kZXJpbmdDb250ZXh0LkFMV0FZUykscmVmZXJlbmNlOmkoXy5yZWZlcmVuY2UsMCksbWFzazppKF8ubWFzaywtMSksZnJvbnRPcGVyYXRpb246e2ZhaWw6aSh5LmZhaWwsV2ViR0xSZW5kZXJpbmdDb250ZXh0LktFRVApLHpGYWlsOmkoeS56RmFpbCxXZWJHTFJlbmRlcmluZ0NvbnRleHQuS0VFUCkselBhc3M6aSh5LnpQYXNzLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5LRUVQKX0sYmFja09wZXJhdGlvbjp7ZmFpbDppKEMuZmFpbCxXZWJHTFJlbmRlcmluZ0NvbnRleHQuS0VFUCksekZhaWw6aShDLnpGYWlsLFdlYkdMUmVuZGVyaW5nQ29udGV4dC5LRUVQKSx6UGFzczppKEMuelBhc3MsV2ViR0xSZW5kZXJpbmdDb250ZXh0LktFRVApfX0sdGhpcy5zYW1wbGVDb3ZlcmFnZT17ZW5hYmxlZDppKHcuZW5hYmxlZCwhMSksdmFsdWU6aSh3LnZhbHVlLDEpLGludmVydDppKHcuaW52ZXJ0LCExKX0sdGhpcy52aWV3cG9ydD1uKEUpP25ldyBlKEUueCxFLnksbihFLndpZHRoKT9FLndpZHRoOnIuZHJhd2luZ0J1ZmZlcldpZHRoLG4oRS5oZWlnaHQpP0UuaGVpZ2h0OnIuZHJhd2luZ0J1ZmZlckhlaWdodCk6dm9pZCAwLHRoaXMubGluZVdpZHRoPHIubWluaW11bUFsaWFzZWRMaW5lV2lkdGh8fHRoaXMubGluZVdpZHRoPnIubWF4aW11bUFsaWFzZWRMaW5lV2lkdGgpdGhyb3cgbmV3IG8oInJlbmRlclN0YXRlLmxpbmVXaWR0aCBpcyBvdXQgb2YgcmFuZ2UuICBDaGVjayBtaW5pbXVtQWxpYXNlZExpbmVXaWR0aCBhbmQgbWF4aW11bUFsaWFzZWRMaW5lV2lkdGguIik7CmlmKG4odGhpcy52aWV3cG9ydCkpe2lmKHRoaXMudmlld3BvcnQud2lkdGg+ci5tYXhpbXVtVmlld3BvcnRXaWR0aCl0aHJvdyBuZXcgbygicmVuZGVyU3RhdGUudmlld3BvcnQud2lkdGggbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG1heGltdW0gdmlld3BvcnQgd2lkdGggKCIrdGhpcy5tYXhpbXVtVmlld3BvcnRXaWR0aC50b1N0cmluZygpKyIpLiAgQ2hlY2sgbWF4aW11bVZpZXdwb3J0V2lkdGguIik7aWYodGhpcy52aWV3cG9ydC5oZWlnaHQ+ci5tYXhpbXVtVmlld3BvcnRIZWlnaHQpdGhyb3cgbmV3IG8oInJlbmRlclN0YXRlLnZpZXdwb3J0LmhlaWdodCBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB0aGUgbWF4aW11bSB2aWV3cG9ydCBoZWlnaHQgKCIrdGhpcy5tYXhpbXVtVmlld3BvcnRIZWlnaHQudG9TdHJpbmcoKSsiKS4gIENoZWNrIG1heGltdW1WaWV3cG9ydEhlaWdodC4iKX10aGlzLmlkPTAsdGhpcy5fYXBwbHlGdW5jdGlvbnM9W119LGI9ZnVuY3Rpb24oZSx0KXtlLmJsZW5kQ29sb3IodC5yZWQsdC5ncmVlbix0LmJsdWUsdC5hbHBoYSl9LFM9ZnVuY3Rpb24oZSx0KXt2YXIgaT10LnNhbXBsZUNvdmVyYWdlLG49aS5lbmFibGVkO3MoZSxlLlNBTVBMRV9DT1ZFUkFHRSxuKSxuJiZlLnNhbXBsZUNvdmVyYWdlKGkudmFsdWUsaS5pbnZlcnQpfSxUPW5ldyBlO3JldHVybiBFLmFwcGx5PWZ1bmN0aW9uKGUsdCxpKXtsKGUsdCksdShlLHQpLGMoZSx0KSxkKGUsdCksaChlLHQsaSksbShlLHQpLGYoZSx0KSxwKGUsdCksdihlLHQpLGcoZSx0KSxfKGUsdCxpKSx5KGUsdCksUyhlLHQpLEMoZSx0LGkpfSxFLnBhcnRpYWxBcHBseT1mdW5jdGlvbihlLHQsaSxyKXt2YXIgbz1pLl9hcHBseUZ1bmN0aW9uc1t0LmlkXTtuKG8pfHwobz13KHQsaSksaS5fYXBwbHlGdW5jdGlvbnNbdC5pZF09byk7Zm9yKHZhciBhPW8ubGVuZ3RoLHM9MDthPnM7KytzKW9bc10oZSxpLHIpfSxFLmNsb25lPWZ1bmN0aW9uKGkpe3JldHVybntmcm9udEZhY2U6aS5mcm9udEZhY2UsY3VsbDp7ZW5hYmxlZDppLmN1bGwuZW5hYmxlZCxmYWNlOmkuY3VsbC5mYWNlfSxsaW5lV2lkdGg6aS5saW5lV2lkdGgscG9seWdvbk9mZnNldDp7ZW5hYmxlZDppLnBvbHlnb25PZmZzZXQuZW5hYmxlZCxmYWN0b3I6aS5wb2x5Z29uT2Zmc2V0LmZhY3Rvcix1bml0czppLnBvbHlnb25PZmZzZXQudW5pdHN9LHNjaXNzb3JUZXN0OntlbmFibGVkOmkuc2Npc3NvclRlc3QuZW5hYmxlZCxyZWN0YW5nbGU6ZS5jbG9uZShpLnNjaXNzb3JUZXN0LnJlY3RhbmdsZSl9LGRlcHRoUmFuZ2U6e25lYXI6aS5kZXB0aFJhbmdlLm5lYXIsZmFyOmkuZGVwdGhSYW5nZS5mYXJ9LGRlcHRoVGVzdDp7ZW5hYmxlZDppLmRlcHRoVGVzdC5lbmFibGVkLGZ1bmM6aS5kZXB0aFRlc3QuZnVuY30sY29sb3JNYXNrOntyZWQ6aS5jb2xvck1hc2sucmVkLGdyZWVuOmkuY29sb3JNYXNrLmdyZWVuLGJsdWU6aS5jb2xvck1hc2suYmx1ZSxhbHBoYTppLmNvbG9yTWFzay5hbHBoYX0sZGVwdGhNYXNrOmkuZGVwdGhNYXNrLHN0ZW5jaWxNYXNrOmkuc3RlbmNpbE1hc2ssYmxlbmRpbmc6e2VuYWJsZWQ6aS5ibGVuZGluZy5lbmFibGVkLGNvbG9yOnQuY2xvbmUoaS5ibGVuZGluZy5jb2xvciksZXF1YXRpb25SZ2I6aS5ibGVuZGluZy5lcXVhdGlvblJnYixlcXVhdGlvbkFscGhhOmkuYmxlbmRpbmcuZXF1YXRpb25BbHBoYSxmdW5jdGlvblNvdXJjZVJnYjppLmJsZW5kaW5nLmZ1bmN0aW9uU291cmNlUmdiLGZ1bmN0aW9uU291cmNlQWxwaGE6aS5ibGVuZGluZy5mdW5jdGlvblNvdXJjZUFscGhhLGZ1bmN0aW9uRGVzdGluYXRpb25SZ2I6aS5ibGVuZGluZy5mdW5jdGlvbkRlc3RpbmF0aW9uUmdiLGZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYTppLmJsZW5kaW5nLmZ1bmN0aW9uRGVzdGluYXRpb25BbHBoYX0sc3RlbmNpbFRlc3Q6e2VuYWJsZWQ6aS5zdGVuY2lsVGVzdC5lbmFibGVkLGZyb250RnVuY3Rpb246aS5zdGVuY2lsVGVzdC5mcm9udEZ1bmN0aW9uLGJhY2tGdW5jdGlvbjppLnN0ZW5jaWxUZXN0LmJhY2tGdW5jdGlvbixyZWZlcmVuY2U6aS5zdGVuY2lsVGVzdC5yZWZlcmVuY2UsbWFzazppLnN0ZW5jaWxUZXN0Lm1hc2ssZnJvbnRPcGVyYXRpb246e2ZhaWw6aS5zdGVuY2lsVGVzdC5mcm9udE9wZXJhdGlvbi5mYWlsLHpGYWlsOmkuc3RlbmNpbFRlc3QuZnJvbnRPcGVyYXRpb24uekZhaWwselBhc3M6aS5zdGVuY2lsVGVzdC5mcm9udE9wZXJhdGlvbi56UGFzc30sYmFja09wZXJhdGlvbjp7ZmFpbDppLnN0ZW5jaWxUZXN0LmJhY2tPcGVyYXRpb24uZmFpbCx6RmFpbDppLnN0ZW5jaWxUZXN0LmJhY2tPcGVyYXRpb24uekZhaWwselBhc3M6aS5zdGVuY2lsVGVzdC5iYWNrT3BlcmF0aW9uLnpQYXNzfX0sc2FtcGxlQ292ZXJhZ2U6e2VuYWJsZWQ6aS5zYW1wbGVDb3ZlcmFnZS5lbmFibGVkLHZhbHVlOmkuc2FtcGxlQ292ZXJhZ2UudmFsdWUsaW52ZXJ0Omkuc2FtcGxlQ292ZXJhZ2UuaW52ZXJ0fSx2aWV3cG9ydDpuKGkudmlld3BvcnQpP2UuY2xvbmUoaS52aWV3cG9ydCk6dm9pZCAwfX0sRX0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9kZWdyZWVzUGVyUmFkaWFuIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBBIGJ1aWx0LWluIEdMU0wgZmxvYXRpbmctcG9pbnQgY29uc3RhbnQgZm9yIGNvbnZlcnRpbmcgcmFkaWFucyB0byBkZWdyZWVzLlxuICpcbiAqIEBhbGlhcyBjem1fZGVncmVlc1BlclJhZGlhblxuICogQGdsc2xDb25zdGFudFxuICpcbiAqIEBzZWUgQ2VzaXVtTWF0aC5ERUdSRUVTX1BFUl9SQURJQU5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gR0xTTCBkZWNsYXJhdGlvblxuICogY29uc3QgZmxvYXQgY3ptX2RlZ3JlZXNQZXJSYWRpYW4gPSAuLi47XG4gKlxuICogLy8gRXhhbXBsZVxuICogZmxvYXQgZGVnID0gY3ptX2RlZ3JlZXNQZXJSYWRpYW4gKiByYWQ7XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9kZWdyZWVzUGVyUmFkaWFuID0gNTcuMjk1Nzc5NTEzMDgyMzI7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9kZXB0aFJhbmdlIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBBIGJ1aWx0LWluIEdMU0wgdmVjMiBjb25zdGFudCBmb3IgZGVmaW5pbmcgdGhlIGRlcHRoIHJhbmdlLlxuICogVGhpcyBpcyBhIHdvcmthcm91bmQgdG8gYSBidWcgd2hlcmUgSUUxMSBkb2VzIG5vdCBpbXBsZW1lbnQgZ2xfRGVwdGhSYW5nZS5cbiAqXG4gKiBAYWxpYXMgY3ptX2RlcHRoUmFuZ2VcbiAqIEBnbHNsQ29uc3RhbnRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gR0xTTCBkZWNsYXJhdGlvblxuICogZmxvYXQgZGVwdGhSYW5nZU5lYXIgPSBjem1fZGVwdGhSYW5nZS5uZWFyO1xuICogZmxvYXQgZGVwdGhSYW5nZUZhciA9IGN6bV9kZXB0aFJhbmdlLmZhcjtcbiAqXG4gKi9cbmNvbnN0IGN6bV9kZXB0aFJhbmdlU3RydWN0IGN6bV9kZXB0aFJhbmdlID0gY3ptX2RlcHRoUmFuZ2VTdHJ1Y3QoMC4wLCAxLjApOyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvZXBzaWxvbjEiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIDAuMVxuICpcbiAqIEBuYW1lIGN6bV9lcHNpbG9uMVxuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1fZXBzaWxvbjEgPSAwLjE7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9lcHNpbG9uMiIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogMC4wMVxuICpcbiAqIEBuYW1lIGN6bV9lcHNpbG9uMlxuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1fZXBzaWxvbjIgPSAwLjAxOyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvZXBzaWxvbjMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIDAuMDAxXG4gKlxuICogQG5hbWUgY3ptX2Vwc2lsb24zXG4gKiBAZ2xzbENvbnN0YW50XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9lcHNpbG9uMyA9IDAuMDAxOyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvZXBzaWxvbjQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIDAuMDAwMVxuICpcbiAqIEBuYW1lIGN6bV9lcHNpbG9uNFxuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1fZXBzaWxvbjQgPSAwLjAwMDE7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9lcHNpbG9uNSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogMC4wMDAwMVxuICpcbiAqIEBuYW1lIGN6bV9lcHNpbG9uNVxuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1fZXBzaWxvbjUgPSAwLjAwMDAxOyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvZXBzaWxvbjYiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIDAuMDAwMDAxXG4gKlxuICogQG5hbWUgY3ptX2Vwc2lsb242XG4gKiBAZ2xzbENvbnN0YW50XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9lcHNpbG9uNiA9IDAuMDAwMDAxOyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvZXBzaWxvbjciLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIDAuMDAwMDAwMVxuICpcbiAqIEBuYW1lIGN6bV9lcHNpbG9uN1xuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1fZXBzaWxvbjcgPSAwLjAwMDAwMDE7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9pbmZpbml0eSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogRE9DX1RCQVxuICpcbiAqIEBuYW1lIGN6bV9pbmZpbml0eVxuICogQGdsc2xDb25zdGFudFxuICovXG5jb25zdCBmbG9hdCBjem1faW5maW5pdHkgPSA1OTA2Mzc2MjcyMDAwLjA7ICAvLyBEaXN0YW5jZSBmcm9tIHRoZSBTdW4gdG8gUGx1dG8gaW4gbWV0ZXJzLiAgVE9ETzogV2hhdCBpcyBiZXN0IGdpdmVuIGxvd3AsIG1lZGl1bXAsIGFuZCBoaWdocD8ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL29uZU92ZXJQaSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQSBidWlsdC1pbiBHTFNMIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50IGZvciA8Y29kZT4xL3BpPC9jb2RlPi5cbiAqXG4gKiBAYWxpYXMgY3ptX29uZU92ZXJQaVxuICogQGdsc2xDb25zdGFudFxuICpcbiAqIEBzZWUgQ2VzaXVtTWF0aC5PTkVfT1ZFUl9QSVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fb25lT3ZlclBpID0gLi4uO1xuICpcbiAqIC8vIEV4YW1wbGVcbiAqIGZsb2F0IHBpID0gMS4wIC8gY3ptX29uZU92ZXJQaTtcbiAqL1xuY29uc3QgZmxvYXQgY3ptX29uZU92ZXJQaSA9IDAuMzE4MzA5ODg2MTgzNzkwNzsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL29uZU92ZXJUd29QaSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQSBidWlsdC1pbiBHTFNMIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50IGZvciA8Y29kZT4xLzJwaTwvY29kZT4uXG4gKlxuICogQGFsaWFzIGN6bV9vbmVPdmVyVHdvUGlcbiAqIEBnbHNsQ29uc3RhbnRcbiAqXG4gKiBAc2VlIENlc2l1bU1hdGguT05FX09WRVJfVFdPX1BJXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEdMU0wgZGVjbGFyYXRpb25cbiAqIGNvbnN0IGZsb2F0IGN6bV9vbmVPdmVyVHdvUGkgPSAuLi47XG4gKlxuICogLy8gRXhhbXBsZVxuICogZmxvYXQgcGkgPSAyLjAgKiBjem1fb25lT3ZlclR3b1BpO1xuICovXG5jb25zdCBmbG9hdCBjem1fb25lT3ZlclR3b1BpID0gMC4xNTkxNTQ5NDMwOTE4OTUzNTsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3BpIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBBIGJ1aWx0LWluIEdMU0wgZmxvYXRpbmctcG9pbnQgY29uc3RhbnQgZm9yIDxjb2RlPk1hdGguUEk8L2NvZGU+LlxuICpcbiAqIEBhbGlhcyBjem1fcGlcbiAqIEBnbHNsQ29uc3RhbnRcbiAqXG4gKiBAc2VlIENlc2l1bU1hdGguUElcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gR0xTTCBkZWNsYXJhdGlvblxuICogY29uc3QgZmxvYXQgY3ptX3BpID0gLi4uO1xuICpcbiAqIC8vIEV4YW1wbGVcbiAqIGZsb2F0IHR3b1BpID0gMi4wICogY3ptX3BpO1xuICovXG5jb25zdCBmbG9hdCBjem1fcGkgPSAzLjE0MTU5MjY1MzU4OTc5MzsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3BpT3ZlckZvdXIiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEEgYnVpbHQtaW4gR0xTTCBmbG9hdGluZy1wb2ludCBjb25zdGFudCBmb3IgPGNvZGU+cGkvNDwvY29kZT4uXG4gKlxuICogQGFsaWFzIGN6bV9waU92ZXJGb3VyXG4gKiBAZ2xzbENvbnN0YW50XG4gKlxuICogQHNlZSBDZXNpdW1NYXRoLlBJX09WRVJfRk9VUlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fcGlPdmVyRm91ciA9IC4uLjtcbiAqXG4gKiAvLyBFeGFtcGxlXG4gKiBmbG9hdCBwaSA9IDQuMCAqIGN6bV9waU92ZXJGb3VyO1xuICovXG5jb25zdCBmbG9hdCBjem1fcGlPdmVyRm91ciA9IDAuNzg1Mzk4MTYzMzk3NDQ4MzsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3BpT3ZlclNpeCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQSBidWlsdC1pbiBHTFNMIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50IGZvciA8Y29kZT5waS82PC9jb2RlPi5cbiAqXG4gKiBAYWxpYXMgY3ptX3BpT3ZlclNpeFxuICogQGdsc2xDb25zdGFudFxuICpcbiAqIEBzZWUgQ2VzaXVtTWF0aC5QSV9PVkVSX1NJWFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fcGlPdmVyU2l4ID0gLi4uO1xuICpcbiAqIC8vIEV4YW1wbGVcbiAqIGZsb2F0IHBpID0gNi4wICogY3ptX3BpT3ZlclNpeDtcbiAqL1xuY29uc3QgZmxvYXQgY3ptX3BpT3ZlclNpeCA9IDAuNTIzNTk4Nzc1NTk4Mjk4ODsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3BpT3ZlclRocmVlIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBBIGJ1aWx0LWluIEdMU0wgZmxvYXRpbmctcG9pbnQgY29uc3RhbnQgZm9yIDxjb2RlPnBpLzM8L2NvZGU+LlxuICpcbiAqIEBhbGlhcyBjem1fcGlPdmVyVGhyZWVcbiAqIEBnbHNsQ29uc3RhbnRcbiAqXG4gKiBAc2VlIENlc2l1bU1hdGguUElfT1ZFUl9USFJFRVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fcGlPdmVyVGhyZWUgPSAuLi47XG4gKlxuICogLy8gRXhhbXBsZVxuICogZmxvYXQgcGkgPSAzLjAgKiBjem1fcGlPdmVyVGhyZWU7XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9waU92ZXJUaHJlZSA9IDEuMDQ3MTk3NTUxMTk2NTk3NjsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3BpT3ZlclR3byIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQSBidWlsdC1pbiBHTFNMIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50IGZvciA8Y29kZT5waS8yPC9jb2RlPi5cbiAqXG4gKiBAYWxpYXMgY3ptX3BpT3ZlclR3b1xuICogQGdsc2xDb25zdGFudFxuICpcbiAqIEBzZWUgQ2VzaXVtTWF0aC5QSV9PVkVSX1RXT1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fcGlPdmVyVHdvID0gLi4uO1xuICpcbiAqIC8vIEV4YW1wbGVcbiAqIGZsb2F0IHBpID0gMi4wICogY3ptX3BpT3ZlclR3bztcbiAqL1xuY29uc3QgZmxvYXQgY3ptX3BpT3ZlclR3byA9IDEuNTcwNzk2MzI2Nzk0ODk2NjsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3JhZGlhbnNQZXJEZWdyZWUiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEEgYnVpbHQtaW4gR0xTTCBmbG9hdGluZy1wb2ludCBjb25zdGFudCBmb3IgY29udmVydGluZyBkZWdyZWVzIHRvIHJhZGlhbnMuXG4gKlxuICogQGFsaWFzIGN6bV9yYWRpYW5zUGVyRGVncmVlXG4gKiBAZ2xzbENvbnN0YW50XG4gKlxuICogQHNlZSBDZXNpdW1NYXRoLlJBRElBTlNfUEVSX0RFR1JFRVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fcmFkaWFuc1BlckRlZ3JlZSA9IC4uLjtcbiAqXG4gKiAvLyBFeGFtcGxlXG4gKiBmbG9hdCByYWQgPSBjem1fcmFkaWFuc1BlckRlZ3JlZSAqIGRlZztcbiAqL1xuY29uc3QgZmxvYXQgY3ptX3JhZGlhbnNQZXJEZWdyZWUgPSAwLjAxNzQ1MzI5MjUxOTk0MzI5NTsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3NjZW5lTW9kZTJEIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBUaGUgY29uc3RhbnQgaWRlbnRpZmllciBmb3IgdGhlIDJEIHtAbGluayBTY2VuZU1vZGV9XG4gKlxuICogQG5hbWUgY3ptX3NjZW5lTW9kZTJEXG4gKiBAZ2xzbENvbnN0YW50XG4gKiBAc2VlIGN6bV9zY2VuZU1vZGVcbiAqIEBzZWUgY3ptX3NjZW5lTW9kZUNvbHVtYnVzVmlld1xuICogQHNlZSBjem1fc2NlbmVNb2RlM0RcbiAqIEBzZWUgY3ptX3NjZW5lTW9kZU1vcnBoaW5nXG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9zY2VuZU1vZGUyRCA9IDIuMDsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3NjZW5lTW9kZTNEIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBUaGUgY29uc3RhbnQgaWRlbnRpZmllciBmb3IgdGhlIDNEIHtAbGluayBTY2VuZU1vZGV9XG4gKlxuICogQG5hbWUgY3ptX3NjZW5lTW9kZTNEXG4gKiBAZ2xzbENvbnN0YW50XG4gKiBAc2VlIGN6bV9zY2VuZU1vZGVcbiAqIEBzZWUgY3ptX3NjZW5lTW9kZTJEXG4gKiBAc2VlIGN6bV9zY2VuZU1vZGVDb2x1bWJ1c1ZpZXdcbiAqIEBzZWUgY3ptX3NjZW5lTW9kZU1vcnBoaW5nXG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9zY2VuZU1vZGUzRCA9IDMuMDsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vQ29uc3RhbnRzL3NjZW5lTW9kZUNvbHVtYnVzVmlldyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogVGhlIGNvbnN0YW50IGlkZW50aWZpZXIgZm9yIHRoZSBDb2x1bWJ1cyBWaWV3IHtAbGluayBTY2VuZU1vZGV9XG4gKlxuICogQG5hbWUgY3ptX3NjZW5lTW9kZUNvbHVtYnVzVmlld1xuICogQGdsc2xDb25zdGFudFxuICogQHNlZSBjem1fc2NlbmVNb2RlXG4gKiBAc2VlIGN6bV9zY2VuZU1vZGUyRFxuICogQHNlZSBjem1fc2NlbmVNb2RlM0RcbiAqIEBzZWUgY3ptX3NjZW5lTW9kZU1vcnBoaW5nXG4gKi9cbmNvbnN0IGZsb2F0IGN6bV9zY2VuZU1vZGVDb2x1bWJ1c1ZpZXcgPSAxLjA7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9zY2VuZU1vZGVNb3JwaGluZyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogVGhlIGNvbnN0YW50IGlkZW50aWZpZXIgZm9yIHRoZSBNb3JwaGluZyB7QGxpbmsgU2NlbmVNb2RlfVxuICpcbiAqIEBuYW1lIGN6bV9zY2VuZU1vZGVNb3JwaGluZ1xuICogQGdsc2xDb25zdGFudFxuICogQHNlZSBjem1fc2NlbmVNb2RlXG4gKiBAc2VlIGN6bV9zY2VuZU1vZGUyRFxuICogQHNlZSBjem1fc2NlbmVNb2RlQ29sdW1idXNWaWV3XG4gKiBAc2VlIGN6bV9zY2VuZU1vZGUzRFxuICovXG5jb25zdCBmbG9hdCBjem1fc2NlbmVNb2RlTW9ycGhpbmcgPSAwLjA7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy9zb2xhclJhZGl1cyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQSBidWlsdC1pbiBHTFNMIGZsb2F0aW5nLXBvaW50IGNvbnN0YW50IGZvciBvbmUgc29sYXIgcmFkaXVzLlxuICpcbiAqIEBhbGlhcyBjem1fc29sYXJSYWRpdXNcbiAqIEBnbHNsQ29uc3RhbnRcbiAqXG4gKiBAc2VlIENlc2l1bU1hdGguU09MQVJfUkFESVVTXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEdMU0wgZGVjbGFyYXRpb25cbiAqIGNvbnN0IGZsb2F0IGN6bV9zb2xhclJhZGl1cyA9IC4uLjtcbiAqL1xuY29uc3QgZmxvYXQgY3ptX3NvbGFyUmFkaXVzID0gNjk1NTAwMDAwLjA7In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0NvbnN0YW50cy90aHJlZVBpT3ZlcjIiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEEgYnVpbHQtaW4gR0xTTCBmbG9hdGluZy1wb2ludCBjb25zdGFudCBmb3IgPGNvZGU+M3BpLzI8L2NvZGU+LlxuICpcbiAqIEBhbGlhcyBjem1fdGhyZWVQaU92ZXIyXG4gKiBAZ2xzbENvbnN0YW50XG4gKlxuICogQHNlZSBDZXNpdW1NYXRoLlRIUkVFX1BJX09WRVJfVFdPXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEdMU0wgZGVjbGFyYXRpb25cbiAqIGNvbnN0IGZsb2F0IGN6bV90aHJlZVBpT3ZlcjIgPSAuLi47XG4gKlxuICogLy8gRXhhbXBsZVxuICogZmxvYXQgcGkgPSAoMi4wIC8gMy4wKSAqIGN6bV90aHJlZVBpT3ZlcjI7XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV90aHJlZVBpT3ZlcjIgPSA0LjcxMjM4ODk4MDM4NDY5OyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvdHdvUGkiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEEgYnVpbHQtaW4gR0xTTCBmbG9hdGluZy1wb2ludCBjb25zdGFudCBmb3IgPGNvZGU+MnBpPC9jb2RlPi5cbiAqXG4gKiBAYWxpYXMgY3ptX3R3b1BpXG4gKiBAZ2xzbENvbnN0YW50XG4gKlxuICogQHNlZSBDZXNpdW1NYXRoLlRXT19QSVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBHTFNMIGRlY2xhcmF0aW9uXG4gKiBjb25zdCBmbG9hdCBjem1fdHdvUGkgPSAuLi47XG4gKlxuICogLy8gRXhhbXBsZVxuICogZmxvYXQgcGkgPSBjem1fdHdvUGkgLyAyLjA7XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV90d29QaSA9IDYuMjgzMTg1MzA3MTc5NTg2OyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Db25zdGFudHMvd2ViTWVyY2F0b3JNYXhMYXRpdHVkZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogVGhlIG1heGltdW0gbGF0aXR1ZGUsIGluIHJhZGlhbnMsIGJvdGggTm9ydGggYW5kIFNvdXRoLCBzdXBwb3J0ZWQgYnkgYSBXZWIgTWVyY2F0b3JcbiAqIChFUFNHOjM4NTcpIHByb2plY3Rpb24uICBUZWNobmljYWxseSwgdGhlIE1lcmNhdG9yIHByb2plY3Rpb24gaXMgZGVmaW5lZFxuICogZm9yIGFueSBsYXRpdHVkZSB1cCB0byAoYnV0IG5vdCBpbmNsdWRpbmcpIDkwIGRlZ3JlZXMsIGJ1dCBpdCBtYWtlcyBzZW5zZVxuICogdG8gY3V0IGl0IG9mZiBzb29uZXIgYmVjYXVzZSBpdCBncm93cyBleHBvbmVudGlhbGx5IHdpdGggaW5jcmVhc2luZyBsYXRpdHVkZS5cbiAqIFRoZSBsb2dpYyBiZWhpbmQgdGhpcyBwYXJ0aWN1bGFyIGN1dG9mZiB2YWx1ZSwgd2hpY2ggaXMgdGhlIG9uZSB1c2VkIGJ5XG4gKiBHb29nbGUgTWFwcywgQmluZyBNYXBzLCBhbmQgRXNyaSwgaXMgdGhhdCBpdCBtYWtlcyB0aGUgcHJvamVjdGlvblxuICogc3F1YXJlLiAgVGhhdCBpcywgdGhlIHJlY3RhbmdsZSBpcyBlcXVhbCBpbiB0aGUgWCBhbmQgWSBkaXJlY3Rpb25zLlxuICpcbiAqIFRoZSBjb25zdGFudCB2YWx1ZSBpcyBjb21wdXRlZCBhcyBmb2xsb3dzOlxuICogICBjem1fcGkgKiAwLjUgLSAoMi4wICogYXRhbihleHAoLWN6bV9waSkpKVxuICpcbiAqIEBuYW1lIGN6bV93ZWJNZXJjYXRvck1heExhdGl0dWRlXG4gKiBAZ2xzbENvbnN0YW50XG4gKi9cbmNvbnN0IGZsb2F0IGN6bV93ZWJNZXJjYXRvck1heExhdGl0dWRlID0gMS40ODQ0MjIyMjk3NDUzMzI0OyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9TdHJ1Y3RzL2RlcHRoUmFuZ2VTdHJ1Y3QiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEBuYW1lIGN6bV9kZXB0aFJhbmdlU3RydWN0XG4gKiBAZ2xzbFN0cnVjdFxuICovXG5zdHJ1Y3QgY3ptX2RlcHRoUmFuZ2VTdHJ1Y3RcbntcbiAgICBmbG9hdCBuZWFyO1xuICAgIGZsb2F0IGZhcjtcbn07In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL1N0cnVjdHMvZWxsaXBzb2lkIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqIERPQ19UQkFcbiAqXG4gKiBAbmFtZSBjem1fZWxsaXBzb2lkXG4gKiBAZ2xzbFN0cnVjdFxuICovXG5zdHJ1Y3QgY3ptX2VsbGlwc29pZFxue1xuICAgIHZlYzMgY2VudGVyO1xuICAgIHZlYzMgcmFkaWk7XG4gICAgdmVjMyBpbnZlcnNlUmFkaWk7XG4gICAgdmVjMyBpbnZlcnNlUmFkaWlTcXVhcmVkO1xufTsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vU3RydWN0cy9tYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogSG9sZHMgbWF0ZXJpYWwgaW5mb3JtYXRpb24gdGhhdCBjYW4gYmUgdXNlZCBmb3IgbGlnaHRpbmcuIFJldHVybmVkIGJ5IGFsbCBjem1fZ2V0TWF0ZXJpYWwgZnVuY3Rpb25zLlxuICpcbiAqIEBuYW1lIGN6bV9tYXRlcmlhbFxuICogQGdsc2xTdHJ1Y3RcbiAqXG4gKiBAcHJvcGVydHkge3ZlYzN9IGRpZmZ1c2UgSW5jb21pbmcgbGlnaHQgdGhhdCBzY2F0dGVycyBldmVubHkgaW4gYWxsIGRpcmVjdGlvbnMuXG4gKiBAcHJvcGVydHkge2Zsb2F0fSBzcGVjdWxhciBJbnRlbnNpdHkgb2YgaW5jb21pbmcgbGlnaHQgcmVmbGVjdGluZyBpbiBhIHNpbmdsZSBkaXJlY3Rpb24uXG4gKiBAcHJvcGVydHkge2Zsb2F0fSBzaGluaW5lc3MgVGhlIHNoYXJwbmVzcyBvZiB0aGUgc3BlY3VsYXIgcmVmbGVjdGlvbi4gIEhpZ2hlciB2YWx1ZXMgY3JlYXRlIGEgc21hbGxlciwgbW9yZSBmb2N1c2VkIHNwZWN1bGFyIGhpZ2hsaWdodC5cbiAqIEBwcm9wZXJ0eSB7dmVjM30gbm9ybWFsIFN1cmZhY2UncyBub3JtYWwgaW4gZXllIGNvb3JkaW5hdGVzLiBJdCBpcyB1c2VkIGZvciBlZmZlY3RzIHN1Y2ggYXMgbm9ybWFsIG1hcHBpbmcuIFRoZSBkZWZhdWx0IGlzIHRoZSBzdXJmYWNlJ3MgdW5tb2RpZmllZCBub3JtYWwuXG4gKiBAcHJvcGVydHkge3ZlYzN9IGVtaXNzaW9uIExpZ2h0IGVtaXR0ZWQgYnkgdGhlIG1hdGVyaWFsIGVxdWFsbHkgaW4gYWxsIGRpcmVjdGlvbnMuIFRoZSBkZWZhdWx0IGlzIHZlYzMoMC4wKSwgd2hpY2ggZW1pdHMgbm8gbGlnaHQuXG4gKiBAcHJvcGVydHkge2Zsb2F0fSBhbHBoYSBPcGFjaXR5IG9mIHRoaXMgbWF0ZXJpYWwuIDAuMCBpcyBjb21wbGV0ZWx5IHRyYW5zcGFyZW50OyAxLjAgaXMgY29tcGxldGVseSBvcGFxdWUuXG4gKi9cbnN0cnVjdCBjem1fbWF0ZXJpYWxcbntcbiAgICB2ZWMzIGRpZmZ1c2U7XG4gICAgZmxvYXQgc3BlY3VsYXI7XG4gICAgZmxvYXQgc2hpbmluZXNzO1xuICAgIHZlYzMgbm9ybWFsO1xuICAgIHZlYzMgZW1pc3Npb247XG4gICAgZmxvYXQgYWxwaGE7XG59OyJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9TdHJ1Y3RzL21hdGVyaWFsSW5wdXQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFVzZWQgYXMgaW5wdXQgdG8gZXZlcnkgbWF0ZXJpYWwncyBjem1fZ2V0TWF0ZXJpYWwgZnVuY3Rpb24uXG4gKlxuICogQG5hbWUgY3ptX21hdGVyaWFsSW5wdXRcbiAqIEBnbHNsU3RydWN0XG4gKlxuICogQHByb3BlcnR5IHtmbG9hdH0gcyAxRCB0ZXh0dXJlIGNvb3JkaW5hdGVzLlxuICogQHByb3BlcnR5IHt2ZWMyfSBzdCAyRCB0ZXh0dXJlIGNvb3JkaW5hdGVzLlxuICogQHByb3BlcnR5IHt2ZWMzfSBzdHIgM0QgdGV4dHVyZSBjb29yZGluYXRlcy5cbiAqIEBwcm9wZXJ0eSB7dmVjM30gbm9ybWFsRUMgVW5wZXJ0dXJiZWQgc3VyZmFjZSBub3JtYWwgaW4gZXllIGNvb3JkaW5hdGVzLlxuICogQHByb3BlcnR5IHttYXQzfSB0YW5nZW50VG9FeWVNYXRyaXggTWF0cml4IGZvciBjb252ZXJ0aW5nIGEgdGFuZ2VudCBzcGFjZSBub3JtYWwgdG8gZXllIHNwYWNlLlxuICogQHByb3BlcnR5IHt2ZWMzfSBwb3NpdGlvblRvRXllRUMgVmVjdG9yIGZyb20gdGhlIGZyYWdtZW50IHRvIHRoZSBleWUgaW4gZXllIGNvb3JkaW5hdGVzLiAgVGhlIG1hZ25pdHVkZSBpcyB0aGUgZGlzdGFuY2UgaW4gbWV0ZXJzIGZyb20gdGhlIGZyYWdtZW50IHRvIHRoZSBleWUuXG4gKi9cbnN0cnVjdCBjem1fbWF0ZXJpYWxJbnB1dFxue1xuICAgIGZsb2F0IHM7XG4gICAgdmVjMiBzdDtcbiAgICB2ZWMzIHN0cjtcbiAgICB2ZWMzIG5vcm1hbEVDO1xuICAgIG1hdDMgdGFuZ2VudFRvRXllTWF0cml4O1xuICAgIHZlYzMgcG9zaXRpb25Ub0V5ZUVDO1xufTsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vU3RydWN0cy9yYXkiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIERPQ19UQkFcbiAqXG4gKiBAbmFtZSBjem1fcmF5XG4gKiBAZ2xzbFN0cnVjdFxuICovXG5zdHJ1Y3QgY3ptX3JheVxue1xuICAgIHZlYzMgb3JpZ2luO1xuICAgIHZlYzMgZGlyZWN0aW9uO1xufTsifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vU3RydWN0cy9yYXlTZWdtZW50IixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBET0NfVEJBXG4gKlxuICogQG5hbWUgY3ptX3JheVNlZ21lbnRcbiAqIEBnbHNsU3RydWN0XG4gKi9cbnN0cnVjdCBjem1fcmF5U2VnbWVudFxue1xuICAgIGZsb2F0IHN0YXJ0O1xuICAgIGZsb2F0IHN0b3A7XG59O1xuXG4vKipcbiAqIERPQ19UQkFcbiAqXG4gKiBAbmFtZSBjem1fZW1wdHlSYXlTZWdtZW50XG4gKiBAZ2xzbENvbnN0YW50IFxuICovXG5jb25zdCBjem1fcmF5U2VnbWVudCBjem1fZW1wdHlSYXlTZWdtZW50ID0gY3ptX3JheVNlZ21lbnQoLWN6bV9pbmZpbml0eSwgLWN6bV9pbmZpbml0eSk7XG5cbi8qKlxuICogRE9DX1RCQVxuICpcbiAqIEBuYW1lIGN6bV9mdWxsUmF5U2VnbWVudFxuICogQGdsc2xDb25zdGFudCBcbiAqL1xuY29uc3QgY3ptX3JheVNlZ21lbnQgY3ptX2Z1bGxSYXlTZWdtZW50ID0gY3ptX3JheVNlZ21lbnQoMC4wLCBjem1faW5maW5pdHkpO1xuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9SR0JUb1hZWiIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQ29udmVydHMgYW4gUkdCIGNvbG9yIHRvIENJRSBZeHkuXG4gKiA8cD5UaGUgY29udmVyc2lvbiBpcyBkZXNjcmliZWQgaW5cbiAqIHtAbGluayBodHRwOi8vY29udGVudC5ncHdpa2kub3JnL2luZGV4LnBocC9EM0RCb29rOkhpZ2gtRHluYW1pY19SYW5nZV9SZW5kZXJpbmcjTHVtaW5hbmNlX1RyYW5zZm9ybXxMdW1pbmFuY2UgVHJhbnNmb3JtfVxuICogPC9wPlxuICogXG4gKiBAbmFtZSBjem1fUkdCVG9YWVpcbiAqIEBnbHNsRnVuY3Rpb25cbiAqIFxuICogQHBhcmFtIHt2ZWMzfSByZ2IgVGhlIGNvbG9yIGluIFJHQi5cbiAqXG4gKiBAcmV0dXJucyB7dmVjM30gVGhlIGNvbG9yIGluIENJRSBZeHkuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZlYzMgeHl6ID0gY3ptX1JHQlRvWFlaKHJnYik7XG4gKiB4eXoueCA9IG1heCh4eXoueCAtIGx1bWluYW5jZVRocmVzaG9sZCwgMC4wKTtcbiAqIHJnYiA9IGN6bV9YWVpUb1JHQih4eXopO1xuICovXG52ZWMzIGN6bV9SR0JUb1hZWih2ZWMzIHJnYilcbntcbiAgICBjb25zdCBtYXQzIFJHQjJYWVogPSBtYXQzKDAuNDEyNCwgMC4yMTI2LCAwLjAxOTMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLjM1NzYsIDAuNzE1MiwgMC4xMTkyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMC4xODA1LCAwLjA3MjIsIDAuOTUwNSk7XG4gICAgdmVjMyB4eXogPSBSR0IyWFlaICogcmdiO1xuICAgIHZlYzMgWXh5O1xuICAgIFl4eS5yID0geHl6Lmc7XG4gICAgZmxvYXQgdGVtcCA9IGRvdCh2ZWMzKDEuMCksIHh5eik7XG4gICAgWXh5LmdiID0geHl6LnJnIC8gdGVtcDtcbiAgICByZXR1cm4gWXh5O1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9YWVpUb1JHQiIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQ29udmVydHMgYSBDSUUgWXh5IGNvbG9yIHRvIFJHQi5cbiAqIDxwPlRoZSBjb252ZXJzaW9uIGlzIGRlc2NyaWJlZCBpblxuICoge0BsaW5rIGh0dHA6Ly9jb250ZW50Lmdwd2lraS5vcmcvaW5kZXgucGhwL0QzREJvb2s6SGlnaC1EeW5hbWljX1JhbmdlX1JlbmRlcmluZyNMdW1pbmFuY2VfVHJhbnNmb3JtfEx1bWluYW5jZSBUcmFuc2Zvcm19XG4gKiA8L3A+XG4gKiBcbiAqIEBuYW1lIGN6bV9YWVpUb1JHQlxuICogQGdsc2xGdW5jdGlvblxuICogXG4gKiBAcGFyYW0ge3ZlYzN9IFl4eSBUaGUgY29sb3IgaW4gQ0lFIFl4eS5cbiAqXG4gKiBAcmV0dXJucyB7dmVjM30gVGhlIGNvbG9yIGluIFJHQi5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjMyB4eXogPSBjem1fUkdCVG9YWVoocmdiKTtcbiAqIHh5ei54ID0gbWF4KHh5ei54IC0gbHVtaW5hbmNlVGhyZXNob2xkLCAwLjApO1xuICogcmdiID0gY3ptX1hZWlRvUkdCKHh5eik7XG4gKi9cbnZlYzMgY3ptX1hZWlRvUkdCKHZlYzMgWXh5KVxue1xuICAgIGNvbnN0IG1hdDMgWFlaMlJHQiA9IG1hdDMoIDMuMjQwNSwgLTAuOTY5MywgIDAuMDU1NixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0xLjUzNzEsICAxLjg3NjAsIC0wLjIwNDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtMC40OTg1LCAgMC4wNDE2LCAgMS4wNTcyKTtcbiAgICB2ZWMzIHh5ejtcbiAgICB4eXouciA9IFl4eS5yICogWXh5LmcgLyBZeHkuYjtcbiAgICB4eXouZyA9IFl4eS5yO1xuICAgIHh5ei5iID0gWXh5LnIgKiAoMS4wIC0gWXh5LmcgLSBZeHkuYikgLyBZeHkuYjtcbiAgICBcbiAgICByZXR1cm4gWFlaMlJHQiAqIHh5ejtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvYWxwaGFXZWlnaHQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEBwcml2YXRlXG4gKi9cbmZsb2F0IGN6bV9hbHBoYVdlaWdodChmbG9hdCBhKVxue1xuICAgIGZsb2F0IHo7XG4gICAgaWYgKGN6bV9zY2VuZU1vZGUgIT0gY3ptX3NjZW5lTW9kZTJEKVxuICAgIHtcbiAgICAgICAgZmxvYXQgeCA9IDIuMCAqIChnbF9GcmFnQ29vcmQueCAtIGN6bV92aWV3cG9ydC54KSAvIGN6bV92aWV3cG9ydC56IC0gMS4wO1xuCSAgICBmbG9hdCB5ID0gMi4wICogKGdsX0ZyYWdDb29yZC55IC0gY3ptX3ZpZXdwb3J0LnkpIC8gY3ptX3ZpZXdwb3J0LncgLSAxLjA7XG4JICAgIGZsb2F0IHogPSAoZ2xfRnJhZ0Nvb3JkLnogLSBjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvblszXVsyXSkgLyBjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvblsyXVsyXTtcbgkgICAgdmVjNCBxID0gdmVjNCh4LCB5LCB6LCAxLjApO1xuCSAgICBxIC89IGdsX0ZyYWdDb29yZC53O1xuCSAgICB6ID0gKGN6bV9pbnZlcnNlUHJvamVjdGlvbk9JVCAqIHEpLno7XG4gICAgfVxuICAgIGVsc2VcbiAgICB7XG4gICAgICAgIHogPSBnbF9GcmFnQ29vcmQueiAqIChjem1fY3VycmVudEZydXN0dW0ueSAtIGN6bV9jdXJyZW50RnJ1c3R1bS54KSArIGN6bV9jdXJyZW50RnJ1c3R1bS54O1xuICAgIH1cbiAgICBcbiAgICAvLyBTZWUgV2VpZ2h0ZWQgQmxlbmRlZCBPcmRlci1JbmRlcGVuZGVudCBUcmFuc3BhcmVuY3kgZm9yIGV4YW1wbGVzIG9mIGRpZmZlcmVudCB3ZWlnaHRpbmcgZnVuY3Rpb25zOlxuICAgIC8vIGh0dHA6Ly9qY2d0Lm9yZy9wdWJsaXNoZWQvMDAwMi8wMi8wOS9cbiAgICByZXR1cm4gcG93KGEgKyAwLjAxLCA0LjApICsgbWF4KDFlLTIsIG1pbigzLjAgKiAxZTMsIDEwMC4wIC8gKDFlLTUgKyBwb3coYWJzKHopIC8gMTAuMCwgMy4wKSArIHBvdyhhYnMoeikgLyAyMDAuMCwgNi4wKSkpKTtcbn0ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2FudGlhbGlhcyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogUHJvY2VkdXJhbCBhbnRpLWFsaWFzaW5nIGJ5IGJsdXJyaW5nIHR3byBjb2xvcnMgdGhhdCBtZWV0IGF0IGEgc2hhcnAgZWRnZS5cbiAqXG4gKiBAbmFtZSBjem1fYW50aWFsaWFzXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHt2ZWM0fSBjb2xvcjEgVGhlIGNvbG9yIG9uIG9uZSBzaWRlIG9mIHRoZSBlZGdlLlxuICogQHBhcmFtIHt2ZWM0fSBjb2xvcjIgVGhlIGNvbG9yIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRoZSBlZGdlLlxuICogQHBhcmFtIHt2ZWM0fSBjdXJyZW50Y29sb3IgVGhlIGN1cnJlbnQgY29sb3IsIGVpdGhlciA8Y29kZT5jb2xvcjE8L2NvZGU+IG9yIDxjb2RlPmNvbG9yMjwvY29kZT4uXG4gKiBAcGFyYW0ge2Zsb2F0fSBkaXN0IFRoZSBkaXN0YW5jZSB0byB0aGUgZWRnZSBpbiB0ZXh0dXJlIGNvb3JkaW5hdGVzLlxuICogQHBhcmFtIHtmbG9hdH0gW2Z1enpGYWN0b3I9MC4xXSBDb250cm9scyB0aGUgYmx1cnJpbmVzcyBiZXR3ZWVuIHRoZSB0d28gY29sb3JzLlxuICogQHJldHVybnMge3ZlYzR9IFRoZSBhbnRpLWFsaWFzZWQgY29sb3IuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEdMU0wgZGVjbGFyYXRpb25zXG4gKiB2ZWM0IGN6bV9hbnRpYWxpYXModmVjNCBjb2xvcjEsIHZlYzQgY29sb3IyLCB2ZWM0IGN1cnJlbnRDb2xvciwgZmxvYXQgZGlzdCwgZmxvYXQgZnV6ekZhY3Rvcik7XG4gKiB2ZWM0IGN6bV9hbnRpYWxpYXModmVjNCBjb2xvcjEsIHZlYzQgY29sb3IyLCB2ZWM0IGN1cnJlbnRDb2xvciwgZmxvYXQgZGlzdCk7XG4gKlxuICogLy8gZ2V0IHRoZSBjb2xvciBmb3IgYSBtYXRlcmlhbCB0aGF0IGhhcyBhIHNoYXJwIGVkZ2UgYXQgdGhlIGxpbmUgeSA9IDAuNSBpbiB0ZXh0dXJlIHNwYWNlXG4gKiBmbG9hdCBkaXN0ID0gYWJzKHRleHR1cmVDb29yZGluYXRlcy50IC0gMC41KTtcbiAqIHZlYzQgY3VycmVudENvbG9yID0gbWl4KGJvdHRvbUNvbG9yLCB0b3BDb2xvciwgc3RlcCgwLjUsIHRleHR1cmVDb29yZGluYXRlcy50KSk7XG4gKiB2ZWM0IGNvbG9yID0gY3ptX2FudGlhbGlhcyhib3R0b21Db2xvciwgdG9wQ29sb3IsIGN1cnJlbnRDb2xvciwgZGlzdCwgMC4xKTtcbiAqL1xudmVjNCBjem1fYW50aWFsaWFzKHZlYzQgY29sb3IxLCB2ZWM0IGNvbG9yMiwgdmVjNCBjdXJyZW50Q29sb3IsIGZsb2F0IGRpc3QsIGZsb2F0IGZ1enpGYWN0b3IpXG57XG4gICAgZmxvYXQgdmFsMSA9IGNsYW1wKGRpc3QgLyBmdXp6RmFjdG9yLCAwLjAsIDEuMCk7XG4gICAgZmxvYXQgdmFsMiA9IGNsYW1wKChkaXN0IC0gMC41KSAvIGZ1enpGYWN0b3IsIDAuMCwgMS4wKTtcbiAgICB2YWwxID0gdmFsMSAqICgxLjAgLSB2YWwyKTtcbiAgICB2YWwxID0gdmFsMSAqIHZhbDEgKiAoMy4wIC0gKDIuMCAqIHZhbDEpKTtcbiAgICB2YWwxID0gcG93KHZhbDEsIDAuNSk7IC8vbWFrZXMgdGhlIHRyYW5zaXRpb24gbmljZXJcbiAgICBcbiAgICB2ZWM0IG1pZENvbG9yID0gKGNvbG9yMSArIGNvbG9yMikgKiAwLjU7XG4gICAgcmV0dXJuIG1peChtaWRDb2xvciwgY3VycmVudENvbG9yLCB2YWwxKTtcbn1cblxudmVjNCBjem1fYW50aWFsaWFzKHZlYzQgY29sb3IxLCB2ZWM0IGNvbG9yMiwgdmVjNCBjdXJyZW50Q29sb3IsIGZsb2F0IGRpc3QpXG57XG4gICAgcmV0dXJuIGN6bV9hbnRpYWxpYXMoY29sb3IxLCBjb2xvcjIsIGN1cnJlbnRDb2xvciwgZGlzdCwgMC4xKTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvY29sdW1idXNWaWV3TW9ycGgiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIERPQ19UQkFcbiAqXG4gKiBAbmFtZSBjem1fY29sdW1idXNWaWV3TW9ycGhcbiAqIEBnbHNsRnVuY3Rpb25cbiAqL1xudmVjNCBjem1fY29sdW1idXNWaWV3TW9ycGgodmVjNCBwb3NpdGlvbjJELCB2ZWM0IHBvc2l0aW9uM0QsIGZsb2F0IHRpbWUpXG57XG4gICAgLy8gSnVzdCBsaW5lYXIgZm9yIG5vdy5cbiAgICB2ZWMzIHAgPSBtaXgocG9zaXRpb24yRC54eXosIHBvc2l0aW9uM0QueHl6LCB0aW1lKTtcbiAgICByZXR1cm4gdmVjNChwLCAxLjApO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9jb21wdXRlUG9zaXRpb24iLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFJldHVybnMgYSBwb3NpdGlvbiBpbiBtb2RlbCBjb29yZGluYXRlcyByZWxhdGl2ZSB0byBleWUgdGFraW5nIGludG9cbiAqIGFjY291bnQgdGhlIGN1cnJlbnQgc2NlbmUgbW9kZTogM0QsIDJELCBvciBDb2x1bWJ1cyB2aWV3LlxuICogPHA+XG4gKiBUaGlzIHVzZXMgc3RhbmRhcmQgcG9zaXRpb24gYXR0cmlidXRlcywgPGNvZGU+cG9zaXRpb24zREhpZ2g8L2NvZGU+LCBcbiAqIDxjb2RlPnBvc2l0aW9uM0RMb3c8L2NvZGU+LCA8Y29kZT5wb3NpdGlvbjJESGlnaDwvY29kZT4sIGFuZCA8Y29kZT5wb3NpdGlvbjJETG93PC9jb2RlPiwgXG4gKiBhbmQgc2hvdWxkIGJlIHVzZWQgd2hlbiB3cml0aW5nIGEgdmVydGV4IHNoYWRlciBmb3IgYW4ge0BsaW5rIEFwcGVhcmFuY2V9LlxuICogPC9wPlxuICpcbiAqIEBuYW1lIGN6bV9jb21wdXRlUG9zaXRpb25cbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcmV0dXJucyB7dmVjNH0gVGhlIHBvc2l0aW9uIHJlbGF0aXZlIHRvIGV5ZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjNCBwID0gY3ptX2NvbXB1dGVQb3NpdGlvbigpO1xuICogdl9wb3NpdGlvbkVDID0gKGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllICogcCkueHl6O1xuICogZ2xfUG9zaXRpb24gPSBjem1fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWUgKiBwO1xuICpcbiAqIEBzZWUgY3ptX3RyYW5zbGF0ZVJlbGF0aXZlVG9FeWVcbiAqL1xudmVjNCBjem1fY29tcHV0ZVBvc2l0aW9uKCk7XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2Nvc2luZUFuZFNpbmUiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEBwcml2YXRlXG4gKi9cbnZlYzIgY29yZGljKGZsb2F0IGFuZ2xlKVxue1xuLy8gU2NhbGUgdGhlIHZlY3RvciBieSB0aGUgYXBwcm9wcmlhdGUgZmFjdG9yIGZvciB0aGUgMjQgaXRlcmF0aW9ucyB0byBmb2xsb3cuXG4gICAgdmVjMiB2ZWN0b3IgPSB2ZWMyKDYuMDcyNTI5MzUwMDg4ODI2N2UtMSwgMC4wKTtcbi8vIEl0ZXJhdGlvbiAxXG4gICAgZmxvYXQgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAvLyAgIGZsb2F0IGZhY3RvciA9IHNlbnNlICogMS4wOyAgLy8gMl4tMFxuICAgIG1hdDIgcm90YXRpb24gPSBtYXQyKDEuMCwgc2Vuc2UsIC1zZW5zZSwgMS4wKTtcbiAgICB2ZWN0b3IgPSByb3RhdGlvbiAqIHZlY3RvcjtcbiAgICBhbmdsZSAtPSBzZW5zZSAqIDcuODUzOTgxNjMzOTc0NDgyOGUtMTsgIC8vIGF0YW4oMl4tMClcbi8vIEl0ZXJhdGlvbiAyXG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmbG9hdCBmYWN0b3IgPSBzZW5zZSAqIDUuMGUtMTsgIC8vIDJeLTFcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiA0LjYzNjQ3NjA5MDAwODA2MDllLTE7ICAvLyBhdGFuKDJeLTEpXG4vLyBJdGVyYXRpb24gM1xuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiAyLjVlLTE7ICAvLyAyXi0yXG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogMi40NDk3ODY2MzEyNjg2NDE0ZS0xOyAgLy8gYXRhbigyXi0yKVxuLy8gSXRlcmF0aW9uIDRcbiAgICBzZW5zZSA9IChhbmdsZSA8IDAuMCkgPyAtMS4wIDogMS4wO1xuICAgIGZhY3RvciA9IHNlbnNlICogMS4yNWUtMTsgIC8vIDJeLTNcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjI0MzU0OTk0NTQ2NzYxNDRlLTE7ICAvLyBhdGFuKDJeLTMpXG4vLyBJdGVyYXRpb24gNVxuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiA2LjI1ZS0yOyAgLy8gMl4tNFxuICAgIHJvdGF0aW9uWzBdWzFdID0gZmFjdG9yO1xuICAgIHJvdGF0aW9uWzFdWzBdID0gLWZhY3RvcjtcbiAgICB2ZWN0b3IgPSByb3RhdGlvbiAqIHZlY3RvcjtcbiAgICBhbmdsZSAtPSBzZW5zZSAqIDYuMjQxODgwOTk5NTk1NzM1MGUtMjsgIC8vIGF0YW4oMl4tNClcbi8vIEl0ZXJhdGlvbiA2XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDMuMTI1ZS0yOyAgLy8gMl4tNVxuICAgIHJvdGF0aW9uWzBdWzFdID0gZmFjdG9yO1xuICAgIHJvdGF0aW9uWzFdWzBdID0gLWZhY3RvcjtcbiAgICB2ZWN0b3IgPSByb3RhdGlvbiAqIHZlY3RvcjtcbiAgICBhbmdsZSAtPSBzZW5zZSAqIDMuMTIzOTgzMzQzMDI2ODI3N2UtMjsgIC8vIGF0YW4oMl4tNSlcbi8vIEl0ZXJhdGlvbiA3XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDEuNTYyNWUtMjsgIC8vIDJeLTZcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjU2MjM3Mjg2MjA0NzY4MzFlLTI7ICAvLyBhdGFuKDJeLTYpXG4vLyBJdGVyYXRpb24gOFxuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiA3LjgxMjVlLTM7ICAvLyAyXi03XG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogNy44MTIzNDEwNjAxMDExMTExZS0zOyAgLy8gYXRhbigyXi03KVxuLy8gSXRlcmF0aW9uIDlcbiAgICBzZW5zZSA9IChhbmdsZSA8IDAuMCkgPyAtMS4wIDogMS4wO1xuICAgIGZhY3RvciA9IHNlbnNlICogMy45MDYyNWUtMzsgIC8vIDJeLThcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAzLjkwNjIzMDEzMTk2Njk3MThlLTM7ICAvLyBhdGFuKDJeLTgpXG4vLyBJdGVyYXRpb24gMTBcbiAgICBzZW5zZSA9IChhbmdsZSA8IDAuMCkgPyAtMS4wIDogMS4wO1xuICAgIGZhY3RvciA9IHNlbnNlICogMS45NTMxMjVlLTM7ICAvLyAyXi05XG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogMS45NTMxMjI1MTY0Nzg4MTg4ZS0zOyAgLy8gYXRhbigyXi05KVxuLy8gSXRlcmF0aW9uIDExXG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDkuNzY1NjI1ZS00OyAgLy8gMl4tMTBcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiA5Ljc2NTYyMTg5NTU5MzE5NDZlLTQ7ICAvLyBhdGFuKDJeLTEwKVxuLy8gSXRlcmF0aW9uIDEyXG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDQuODgyODEyNWUtNDsgIC8vIDJeLTExXG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogNC44ODI4MTIxMTE5NDg5ODI5ZS00OyAgLy8gYXRhbigyXi0xMSlcbi8vIEl0ZXJhdGlvbiAxM1xuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiAyLjQ0MTQwNjI1ZS00OyAgLy8gMl4tMTJcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAyLjQ0MTQwNjIwMTQ5MzYxNzdlLTQ7ICAvLyBhdGFuKDJeLTEyKVxuLy8gSXRlcmF0aW9uIDE0XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDEuMjIwNzAzMTI1ZS00OyAgLy8gMl4tMTNcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjIyMDcwMzExODkzNjcwMjFlLTQ7ICAvLyBhdGFuKDJeLTEzKVxuLy8gSXRlcmF0aW9uIDE1XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDYuMTAzNTE1NjI1ZS01OyAgLy8gMl4tMTRcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiA2LjEwMzUxNTYxNzQyMDg3NzNlLTU7ICAvLyBhdGFuKDJeLTE0KVxuLy8gSXRlcmF0aW9uIDE2XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDMuMDUxNzU3ODEyNWUtNTsgIC8vIDJeLTE1XG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogMy4wNTE3NTc4MTE1NTI2MDk2ZS01OyAgLy8gYXRhbigyXi0xNSlcbi8vIEl0ZXJhdGlvbiAxN1xuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiAxLjUyNTg3ODkwNjI1ZS01OyAgLy8gMl4tMTZcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjUyNTg3ODkwNjEzMTU3NjJlLTU7ICAvLyBhdGFuKDJeLTE2KVxuLy8gSXRlcmF0aW9uIDE4XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDcuNjI5Mzk0NTMxMjVlLTY7ICAvLyAyXi0xN1xuICAgIHJvdGF0aW9uWzBdWzFdID0gZmFjdG9yO1xuICAgIHJvdGF0aW9uWzFdWzBdID0gLWZhY3RvcjtcbiAgICB2ZWN0b3IgPSByb3RhdGlvbiAqIHZlY3RvcjtcbiAgICBhbmdsZSAtPSBzZW5zZSAqIDcuNjI5Mzk0NTMxMTAxOTcwMGUtNjsgIC8vIGF0YW4oMl4tMTcpXG4vLyBJdGVyYXRpb24gMTlcbiAgICBzZW5zZSA9IChhbmdsZSA8IDAuMCkgPyAtMS4wIDogMS4wO1xuICAgIGZhY3RvciA9IHNlbnNlICogMy44MTQ2OTcyNjU2MjVlLTY7ICAvLyAyXi0xOFxuICAgIHJvdGF0aW9uWzBdWzFdID0gZmFjdG9yO1xuICAgIHJvdGF0aW9uWzFdWzBdID0gLWZhY3RvcjtcbiAgICB2ZWN0b3IgPSByb3RhdGlvbiAqIHZlY3RvcjtcbiAgICBhbmdsZSAtPSBzZW5zZSAqIDMuODE0Njk3MjY1NjA2NDk2MWUtNjsgIC8vIGF0YW4oMl4tMTgpXG4vLyBJdGVyYXRpb24gMjBcbiAgICBzZW5zZSA9IChhbmdsZSA8IDAuMCkgPyAtMS4wIDogMS4wO1xuICAgIGZhY3RvciA9IHNlbnNlICogMS45MDczNDg2MzI4MTI1ZS02OyAgLy8gMl4tMTlcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjkwNzM0ODYzMjgxMDE4NzBlLTY7ICAvLyBhdGFuKDJeLTE5KVxuLy8gSXRlcmF0aW9uIDIxXG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDkuNTM2NzQzMTY0MDYyNWUtNzsgIC8vIDJeLTIwXG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuICAgIGFuZ2xlIC09IHNlbnNlICogOS41MzY3NDMxNjQwNTk2MDg0ZS03OyAgLy8gYXRhbigyXi0yMClcbi8vIEl0ZXJhdGlvbiAyMlxuICAgIHNlbnNlID0gKGFuZ2xlIDwgMC4wKSA/IC0xLjAgOiAxLjA7XG4gICAgZmFjdG9yID0gc2Vuc2UgKiA0Ljc2ODM3MTU4MjAzMTI1ZS03OyAgLy8gMl4tMjFcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiA0Ljc2ODM3MTU4MjAzMDg4ODRlLTc7ICAvLyBhdGFuKDJeLTIxKVxuLy8gSXRlcmF0aW9uIDIzXG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDIuMzg0MTg1NzkxMDE1NjI1ZS03OyAgLy8gMl4tMjJcbiAgICByb3RhdGlvblswXVsxXSA9IGZhY3RvcjtcbiAgICByb3RhdGlvblsxXVswXSA9IC1mYWN0b3I7XG4gICAgdmVjdG9yID0gcm90YXRpb24gKiB2ZWN0b3I7XG4gICAgYW5nbGUgLT0gc2Vuc2UgKiAyLjM4NDE4NTc5MTAxNTU3OTdlLTc7ICAvLyBhdGFuKDJeLTIyKVxuLy8gSXRlcmF0aW9uIDI0XG4gICAgc2Vuc2UgPSAoYW5nbGUgPCAwLjApID8gLTEuMCA6IDEuMDtcbiAgICBmYWN0b3IgPSBzZW5zZSAqIDEuMTkyMDkyODk1NTA3ODEyNWUtNzsgIC8vIDJeLTIzXG4gICAgcm90YXRpb25bMF1bMV0gPSBmYWN0b3I7XG4gICAgcm90YXRpb25bMV1bMF0gPSAtZmFjdG9yO1xuICAgIHZlY3RvciA9IHJvdGF0aW9uICogdmVjdG9yO1xuLy8gICAgYW5nbGUgLT0gc2Vuc2UgKiAxLjE5MjA5Mjg5NTUwNzgwNjhlLTc7ICAvLyBhdGFuKDJeLTIzKVxuXG4gICAgcmV0dXJuIHZlY3Rvcjtcbn1cblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgY29zaW5lIGFuZCBzaW5lIG9mIHRoZSBwcm92aWRlZCBhbmdsZSB1c2luZyB0aGUgQ09SRElDIGFsZ29yaXRobS5cbiAqXG4gKiBAbmFtZSBjem1fY29zaW5lQW5kU2luZVxuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7ZmxvYXR9IGFuZ2xlIFRoZSBhbmdsZSBpbiByYWRpYW5zLlxuICpcbiAqIEByZXR1cm5zIHt2ZWMyfSBUaGUgcmVzdWx0aW5nIGNvc2luZSBvZiB0aGUgYW5nbGUgKGFzIHRoZSB4IGNvb3JkaW5hdGUpIGFuZCBzaW5lIG9mIHRoZSBhbmdsZSAoYXMgdGhlIHkgY29vcmRpbmF0ZSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIHZlYzIgdiA9IGN6bV9jb3NpbmVBbmRTaW5lKGN6bV9waU92ZXJTaXgpO1xuICogZmxvYXQgY29zaW5lID0gdi54O1xuICogZmxvYXQgc2luZSA9IHYueTtcbiAqL1xudmVjMiBjem1fY29zaW5lQW5kU2luZShmbG9hdCBhbmdsZSlcbntcbiAgICBpZiAoYW5nbGUgPCAtY3ptX3BpT3ZlclR3byB8fCBhbmdsZSA+IGN6bV9waU92ZXJUd28pXG4gICAge1xuICAgICAgICBpZiAoYW5nbGUgPCAwLjApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiAtY29yZGljKGFuZ2xlICsgY3ptX3BpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiAtY29yZGljKGFuZ2xlIC0gY3ptX3BpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICByZXR1cm4gY29yZGljKGFuZ2xlKTtcbiAgICB9XG59In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9lYXN0Tm9ydGhVcFRvRXllQ29vcmRpbmF0ZXMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIENvbXB1dGVzIGEgM3gzIHJvdGF0aW9uIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgdmVjdG9ycyBmcm9tIGFuIGVsbGlwc29pZCdzIGVhc3Qtbm9ydGgtdXAgY29vcmRpbmF0ZSBzeXN0ZW0gXG4gKiB0byBleWUgY29vcmRpbmF0ZXMuICBJbiBlYXN0LW5vcnRoLXVwIGNvb3JkaW5hdGVzLCB4IHBvaW50cyBlYXN0LCB5IHBvaW50cyBub3J0aCwgYW5kIHogcG9pbnRzIGFsb25nIHRoZSBcbiAqIHN1cmZhY2Ugbm9ybWFsLiAgRWFzdC1ub3J0aC11cCBjYW4gYmUgdXNlZCBhcyBhbiBlbGxpcHNvaWQncyB0YW5nZW50IHNwYWNlIGZvciBvcGVyYXRpb25zIHN1Y2ggYXMgYnVtcCBtYXBwaW5nLlxuICogPGJyIC8+PGJyIC8+XG4gKiBUaGUgZWxsaXBzb2lkIGlzIGFzc3VtZWQgdG8gYmUgY2VudGVyZWQgYXQgdGhlIG1vZGVsIGNvb3JkaW5hdGUncyBvcmlnaW4uXG4gKlxuICogQG5hbWUgY3ptX2Vhc3ROb3J0aFVwVG9FeWVDb29yZGluYXRlc1xuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7dmVjM30gcG9zaXRpb25NQyBUaGUgcG9zaXRpb24gb24gdGhlIGVsbGlwc29pZCBpbiBtb2RlbCBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7dmVjM30gbm9ybWFsRUMgVGhlIG5vcm1hbGl6ZWQgZWxsaXBzb2lkIHN1cmZhY2Ugbm9ybWFsLCBhdCA8Y29kZT5wb3NpdGlvbk1DPC9jb2RlPiwgaW4gZXllIGNvb3JkaW5hdGVzLlxuICpcbiAqIEByZXR1cm5zIHttYXQzfSBBIDN4MyByb3RhdGlvbiBtYXRyaXggdGhhdCB0cmFuc2Zvcm1zIHZlY3RvcnMgZnJvbSB0aGUgZWFzdC1ub3J0aC11cCBjb29yZGluYXRlIHN5c3RlbSB0byBleWUgY29vcmRpbmF0ZXMuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRyYW5zZm9ybSBhIHZlY3RvciBkZWZpbmVkIGluIHRoZSBlYXN0LW5vcnRoLXVwIGNvb3JkaW5hdGUgXG4gKiAvLyBzeXN0ZW0sICgwLCAwLCAxKSB3aGljaCBpcyB0aGUgc3VyZmFjZSBub3JtYWwsIHRvIGV5ZSBcbiAqIC8vIGNvb3JkaW5hdGVzLlxuICogbWF0MyBtID0gY3ptX2Vhc3ROb3J0aFVwVG9FeWVDb29yZGluYXRlcyhwb3NpdGlvbk1DLCBub3JtYWxFQyk7XG4gKiB2ZWMzIG5vcm1hbEVDID0gbSAqIHZlYzMoMC4wLCAwLjAsIDEuMCk7XG4gKi9cbm1hdDMgY3ptX2Vhc3ROb3J0aFVwVG9FeWVDb29yZGluYXRlcyh2ZWMzIHBvc2l0aW9uTUMsIHZlYzMgbm9ybWFsRUMpXG57XG4gICAgdmVjMyB0YW5nZW50TUMgPSBub3JtYWxpemUodmVjMygtcG9zaXRpb25NQy55LCBwb3NpdGlvbk1DLngsIDAuMCkpOyAgLy8gbm9ybWFsaXplZCBzdXJmYWNlIHRhbmdlbnQgaW4gbW9kZWwgY29vcmRpbmF0ZXNcbiAgICB2ZWMzIHRhbmdlbnRFQyA9IG5vcm1hbGl6ZShjem1fbm9ybWFsM0QgKiB0YW5nZW50TUMpOyAgICAgICAgICAgICAgICAvLyBub3JtYWxpemVkIHN1cmZhY2UgdGFuZ2VudCBpbiBleWUgY29vcmRpYW50ZXNcbiAgICB2ZWMzIGJpdGFuZ2VudEVDID0gbm9ybWFsaXplKGNyb3NzKG5vcm1hbEVDLCB0YW5nZW50RUMpKTsgICAgICAgICAgICAvLyBub3JtYWxpemVkIHN1cmZhY2UgYml0YW5nZW50IGluIGV5ZSBjb29yZGluYXRlc1xuXG4gICAgcmV0dXJuIG1hdDMoXG4gICAgICAgIHRhbmdlbnRFQy54LCAgIHRhbmdlbnRFQy55LCAgIHRhbmdlbnRFQy56LFxuICAgICAgICBiaXRhbmdlbnRFQy54LCBiaXRhbmdlbnRFQy55LCBiaXRhbmdlbnRFQy56LFxuICAgICAgICBub3JtYWxFQy54LCAgICBub3JtYWxFQy55LCAgICBub3JtYWxFQy56KTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvZWxsaXBzb2lkQ29udGFpbnNQb2ludCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogRE9DX1RCQVxuICpcbiAqIEBuYW1lIGN6bV9lbGxpcHNvaWRDb250YWluc1BvaW50XG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICovXG5ib29sIGN6bV9lbGxpcHNvaWRDb250YWluc1BvaW50KGN6bV9lbGxpcHNvaWQgZWxsaXBzb2lkLCB2ZWMzIHBvaW50KVxue1xuICAgIHZlYzMgc2NhbGVkID0gZWxsaXBzb2lkLmludmVyc2VSYWRpaSAqIChjem1faW52ZXJzZU1vZGVsVmlldyAqIHZlYzQocG9pbnQsIDEuMCkpLnh5ejtcbiAgICByZXR1cm4gKGRvdChzY2FsZWQsIHNjYWxlZCkgPD0gMS4wKTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvZWxsaXBzb2lkTmV3IixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBET0NfVEJBXG4gKlxuICogQG5hbWUgY3ptX2VsbGlwc29pZE5ld1xuICogQGdsc2xGdW5jdGlvblxuICpcbiAqL1xuY3ptX2VsbGlwc29pZCBjem1fZWxsaXBzb2lkTmV3KHZlYzMgY2VudGVyLCB2ZWMzIHJhZGlpKVxue1xuICAgIHZlYzMgaW52ZXJzZVJhZGlpID0gdmVjMygxLjAgLyByYWRpaS54LCAxLjAgLyByYWRpaS55LCAxLjAgLyByYWRpaS56KTtcbiAgICB2ZWMzIGludmVyc2VSYWRpaVNxdWFyZWQgPSBpbnZlcnNlUmFkaWkgKiBpbnZlcnNlUmFkaWk7XG4gICAgY3ptX2VsbGlwc29pZCB0ZW1wID0gY3ptX2VsbGlwc29pZChjZW50ZXIsIHJhZGlpLCBpbnZlcnNlUmFkaWksIGludmVyc2VSYWRpaVNxdWFyZWQpO1xuICAgIHJldHVybiB0ZW1wO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9lbGxpcHNvaWRXZ3M4NFRleHR1cmVDb29yZGluYXRlcyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogRE9DX1RCQVxuICpcbiAqIEBuYW1lIGN6bV9lbGxpcHNvaWRXZ3M4NFRleHR1cmVDb29yZGluYXRlc1xuICogQGdsc2xGdW5jdGlvblxuICovXG52ZWMyIGN6bV9lbGxpcHNvaWRXZ3M4NFRleHR1cmVDb29yZGluYXRlcyh2ZWMzIG5vcm1hbClcbntcbiAgICByZXR1cm4gdmVjMihhdGFuKG5vcm1hbC55LCBub3JtYWwueCkgKiBjem1fb25lT3ZlclR3b1BpICsgMC41LCBhc2luKG5vcm1hbC56KSAqIGN6bV9vbmVPdmVyUGkgKyAwLjUpO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9lcXVhbHNFcHNpbG9uIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBDb21wYXJlcyA8Y29kZT5sZWZ0PC9jb2RlPiBhbmQgPGNvZGU+cmlnaHQ8L2NvZGU+IGNvbXBvbmVudHdpc2UuIFJldHVybnMgPGNvZGU+dHJ1ZTwvY29kZT5cbiAqIGlmIHRoZXkgYXJlIHdpdGhpbiA8Y29kZT5lcHNpbG9uPC9jb2RlPiBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4gVGhlIGlucHV0c1xuICogPGNvZGU+bGVmdDwvY29kZT4gYW5kIDxjb2RlPnJpZ2h0PC9jb2RlPiBjYW4gYmUgPGNvZGU+ZmxvYXQ8L2NvZGU+cywgPGNvZGU+dmVjMjwvY29kZT5zLFxuICogPGNvZGU+dmVjMzwvY29kZT5zLCBvciA8Y29kZT52ZWM0PC9jb2RlPnMuXG4gKlxuICogQG5hbWUgY3ptX2VxdWFsc0Vwc2lsb25cbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge30gbGVmdCBUaGUgZmlyc3QgdmVjdG9yLlxuICogQHBhcmFtIHt9IHJpZ2h0IFRoZSBzZWNvbmQgdmVjdG9yLlxuICogQHBhcmFtIHtmbG9hdH0gZXBzaWxvbiBUaGUgZXBzaWxvbiB0byB1c2UgZm9yIGVxdWFsaXR5IHRlc3RpbmcuXG4gKiBAcmV0dXJucyB7Ym9vbH0gPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGNvbXBvbmVudHMgYXJlIHdpdGhpbiA8Y29kZT5lcHNpbG9uPC9jb2RlPiBhbmQgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gR0xTTCBkZWNsYXJhdGlvbnNcbiAqIGJvb2wgY3ptX2VxdWFsc0Vwc2lsb24oZmxvYXQgbGVmdCwgZmxvYXQgcmlnaHQsIGZsb2F0IGVwc2lsb24pO1xuICogYm9vbCBjem1fZXF1YWxzRXBzaWxvbih2ZWMyIGxlZnQsIHZlYzIgcmlnaHQsIGZsb2F0IGVwc2lsb24pO1xuICogYm9vbCBjem1fZXF1YWxzRXBzaWxvbih2ZWMzIGxlZnQsIHZlYzMgcmlnaHQsIGZsb2F0IGVwc2lsb24pO1xuICogYm9vbCBjem1fZXF1YWxzRXBzaWxvbih2ZWM0IGxlZnQsIHZlYzQgcmlnaHQsIGZsb2F0IGVwc2lsb24pO1xuICovXG5ib29sIGN6bV9lcXVhbHNFcHNpbG9uKHZlYzQgbGVmdCwgdmVjNCByaWdodCwgZmxvYXQgZXBzaWxvbikge1xuICAgIHJldHVybiBhbGwobGVzc1RoYW5FcXVhbChhYnMobGVmdCAtIHJpZ2h0KSwgdmVjNChlcHNpbG9uKSkpO1xufVxuXG5ib29sIGN6bV9lcXVhbHNFcHNpbG9uKHZlYzMgbGVmdCwgdmVjMyByaWdodCwgZmxvYXQgZXBzaWxvbikge1xuICAgIHJldHVybiBhbGwobGVzc1RoYW5FcXVhbChhYnMobGVmdCAtIHJpZ2h0KSwgdmVjMyhlcHNpbG9uKSkpO1xufVxuXG5ib29sIGN6bV9lcXVhbHNFcHNpbG9uKHZlYzIgbGVmdCwgdmVjMiByaWdodCwgZmxvYXQgZXBzaWxvbikge1xuICAgIHJldHVybiBhbGwobGVzc1RoYW5FcXVhbChhYnMobGVmdCAtIHJpZ2h0KSwgdmVjMihlcHNpbG9uKSkpO1xufVxuXG5ib29sIGN6bV9lcXVhbHNFcHNpbG9uKGZsb2F0IGxlZnQsIGZsb2F0IHJpZ2h0LCBmbG9hdCBlcHNpbG9uKSB7XG4gICAgcmV0dXJuIChhYnMobGVmdCAtIHJpZ2h0KSA8PSBlcHNpbG9uKTtcbn1cbiIKfSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2V5ZU9mZnNldCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogRE9DX1RCQVxuICpcbiAqIEBuYW1lIGN6bV9leWVPZmZzZXRcbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge3ZlYzR9IHBvc2l0aW9uRUMgRE9DX1RCQS5cbiAqIEBwYXJhbSB7dmVjM30gZXllT2Zmc2V0IERPQ19UQkEuXG4gKlxuICogQHJldHVybnMge3ZlYzR9IERPQ19UQkEuXG4gKi9cbnZlYzQgY3ptX2V5ZU9mZnNldCh2ZWM0IHBvc2l0aW9uRUMsIHZlYzMgZXllT2Zmc2V0KVxue1xuICAgIC8vIFRoaXMgZXF1YXRpb24gaXMgYXBwcm94aW1hdGUgaW4geCBhbmQgeS5cbiAgICB2ZWM0IHAgPSBwb3NpdGlvbkVDO1xuICAgIHZlYzQgekV5ZU9mZnNldCA9IG5vcm1hbGl6ZShwKSAqIGV5ZU9mZnNldC56O1xuICAgIHAueHkgKz0gZXllT2Zmc2V0Lnh5ICsgekV5ZU9mZnNldC54eTtcbiAgICBwLnogKz0gekV5ZU9mZnNldC56O1xuICAgIHJldHVybiBwO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9leWVUb1dpbmRvd0Nvb3JkaW5hdGVzIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBUcmFuc2Zvcm1zIGEgcG9zaXRpb24gZnJvbSBleWUgdG8gd2luZG93IGNvb3JkaW5hdGVzLiAgVGhlIHRyYW5zZm9ybWF0aW9uXG4gKiBmcm9tIGV5ZSB0byBjbGlwIGNvb3JkaW5hdGVzIGlzIGRvbmUgdXNpbmcge0BsaW5rIGN6bV9wcm9qZWN0aW9ufS5cbiAqIFRoZSB0cmFuc2Zvcm0gZnJvbSBub3JtYWxpemVkIGRldmljZSBjb29yZGluYXRlcyB0byB3aW5kb3cgY29vcmRpbmF0ZXMgaXNcbiAqIGRvbmUgdXNpbmcge0BsaW5rIGN6bV92aWV3cG9ydFRyYW5zZm9ybWF0aW9ufSwgd2hpY2ggYXNzdW1lcyBhIGRlcHRoIHJhbmdlXG4gKiBvZiA8Y29kZT5uZWFyID0gMDwvY29kZT4gYW5kIDxjb2RlPmZhciA9IDE8L2NvZGU+LlxuICogPGJyIC8+PGJyIC8+XG4gKiBUaGlzIHRyYW5zZm9ybSBpcyB1c2VmdWwgd2hlbiB0aGVyZSBpcyBhIG5lZWQgdG8gbWFuaXB1bGF0ZSB3aW5kb3cgY29vcmRpbmF0ZXNcbiAqIGluIGEgdmVydGV4IHNoYWRlciBhcyBkb25lIGJ5IHtAbGluayBCaWxsYm9hcmRDb2xsZWN0aW9ufS5cbiAqXG4gKiBAbmFtZSBjem1fZXllVG9XaW5kb3dDb29yZGluYXRlc1xuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7dmVjNH0gcG9zaXRpb24gVGhlIHBvc2l0aW9uIGluIGV5ZSBjb29yZGluYXRlcyB0byB0cmFuc2Zvcm0uXG4gKlxuICogQHJldHVybnMge3ZlYzR9IFRoZSB0cmFuc2Zvcm1lZCBwb3NpdGlvbiBpbiB3aW5kb3cgY29vcmRpbmF0ZXMuXG4gKlxuICogQHNlZSBjem1fbW9kZWxUb1dpbmRvd0Nvb3JkaW5hdGVzXG4gKiBAc2VlIGN6bV9wcm9qZWN0aW9uXG4gKiBAc2VlIGN6bV92aWV3cG9ydFRyYW5zZm9ybWF0aW9uXG4gKiBAc2VlIEJpbGxib2FyZENvbGxlY3Rpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjNCBwb3NpdGlvbldDID0gY3ptX2V5ZVRvV2luZG93Q29vcmRpbmF0ZXMocG9zaXRpb25FQyk7XG4gKi9cbnZlYzQgY3ptX2V5ZVRvV2luZG93Q29vcmRpbmF0ZXModmVjNCBwb3NpdGlvbkVDKVxue1xuICAgIHZlYzQgcSA9IGN6bV9wcm9qZWN0aW9uICogcG9zaXRpb25FQzsgICAgICAgICAgICAgICAgICAgICAgICAvLyBjbGlwIGNvb3JkaW5hdGVzXG4gICAgcS54eXogLz0gcS53OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vcm1hbGl6ZWQgZGV2aWNlIGNvb3JkaW5hdGVzXG4gICAgcS54eXogPSAoY3ptX3ZpZXdwb3J0VHJhbnNmb3JtYXRpb24gKiB2ZWM0KHEueHl6LCAxLjApKS54eXo7IC8vIHdpbmRvdyBjb29yZGluYXRlc1xuICAgIHJldHVybiBxO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9nZW9kZXRpY1N1cmZhY2VOb3JtYWwiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIERPQ19UQkFcbiAqXG4gKiBAbmFtZSBjem1fZ2VvZGV0aWNTdXJmYWNlTm9ybWFsXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHt2ZWMzfSBwb3NpdGlvbk9uRWxsaXBzb2lkIERPQ19UQkFcbiAqIEBwYXJhbSB7dmVjM30gZWxsaXBzb2lkQ2VudGVyIERPQ19UQkFcbiAqIEBwYXJhbSB7dmVjM30gb25lT3ZlckVsbGlwc29pZFJhZGlpU3F1YXJlZCBET0NfVEJBXG4gKiBcbiAqIEByZXR1cm5zIHt2ZWMzfSBET0NfVEJBLlxuICovXG52ZWMzIGN6bV9nZW9kZXRpY1N1cmZhY2VOb3JtYWwodmVjMyBwb3NpdGlvbk9uRWxsaXBzb2lkLCB2ZWMzIGVsbGlwc29pZENlbnRlciwgdmVjMyBvbmVPdmVyRWxsaXBzb2lkUmFkaWlTcXVhcmVkKVxue1xuICAgIHJldHVybiBub3JtYWxpemUoKHBvc2l0aW9uT25FbGxpcHNvaWQgLSBlbGxpcHNvaWRDZW50ZXIpICogb25lT3ZlckVsbGlwc29pZFJhZGlpU3F1YXJlZCk7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2dldERlZmF1bHRNYXRlcmlhbCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQW4gY3ptX21hdGVyaWFsIHdpdGggZGVmYXVsdCB2YWx1ZXMuIEV2ZXJ5IG1hdGVyaWFsJ3MgY3ptX2dldE1hdGVyaWFsXG4gKiBzaG91bGQgdXNlIHRoaXMgZGVmYXVsdCBtYXRlcmlhbCBhcyBhIGJhc2UgZm9yIHRoZSBtYXRlcmlhbCBpdCByZXR1cm5zLlxuICogVGhlIGRlZmF1bHQgbm9ybWFsIHZhbHVlIGlzIGdpdmVuIGJ5IG1hdGVyaWFsSW5wdXQubm9ybWFsRUMuXG4gKlxuICogQG5hbWUgY3ptX2dldERlZmF1bHRNYXRlcmlhbFxuICogQGdsc2xGdW5jdGlvbiBcbiAqXG4gKiBAcGFyYW0ge2N6bV9tYXRlcmlhbElucHV0fSBpbnB1dCBUaGUgaW5wdXQgdXNlZCB0byBjb25zdHJ1Y3QgdGhlIGRlZmF1bHQgbWF0ZXJpYWwuXG4gKiBcbiAqIEByZXR1cm5zIHtjem1fbWF0ZXJpYWx9IFRoZSBkZWZhdWx0IG1hdGVyaWFsLlxuICpcbiAqIEBzZWUgY3ptX21hdGVyaWFsSW5wdXRcbiAqIEBzZWUgY3ptX21hdGVyaWFsXG4gKiBAc2VlIGN6bV9nZXRNYXRlcmlhbFxuICovXG5jem1fbWF0ZXJpYWwgY3ptX2dldERlZmF1bHRNYXRlcmlhbChjem1fbWF0ZXJpYWxJbnB1dCBtYXRlcmlhbElucHV0KVxue1xuICAgIGN6bV9tYXRlcmlhbCBtYXRlcmlhbDtcbiAgICBtYXRlcmlhbC5kaWZmdXNlID0gdmVjMygwLjApO1xuICAgIG1hdGVyaWFsLnNwZWN1bGFyID0gMC4wO1xuICAgIG1hdGVyaWFsLnNoaW5pbmVzcyA9IDEuMDtcbiAgICBtYXRlcmlhbC5ub3JtYWwgPSBtYXRlcmlhbElucHV0Lm5vcm1hbEVDO1xuICAgIG1hdGVyaWFsLmVtaXNzaW9uID0gdmVjMygwLjApO1xuICAgIG1hdGVyaWFsLmFscGhhID0gMS4wO1xuICAgIHJldHVybiBtYXRlcmlhbDtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvZ2V0TGFtYmVydERpZmZ1c2UiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIENhbGN1bGF0ZXMgdGhlIGludGVuc2l0eSBvZiBkaWZmdXNlbHkgcmVmbGVjdGVkIGxpZ2h0LlxuICpcbiAqIEBuYW1lIGN6bV9nZXRMYW1iZXJ0RGlmZnVzZVxuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7dmVjM30gbGlnaHREaXJlY3Rpb25FQyBVbml0IHZlY3RvciBwb2ludGluZyB0byB0aGUgbGlnaHQgc291cmNlIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7dmVjM30gbm9ybWFsRUMgVGhlIHN1cmZhY2Ugbm9ybWFsIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqXG4gKiBAcmV0dXJucyB7ZmxvYXR9IFRoZSBpbnRlbnNpdHkgb2YgdGhlIGRpZmZ1c2UgcmVmbGVjdGlvbi5cbiAqXG4gKiBAc2VlIGN6bV9waG9uZ1xuICpcbiAqIEBleGFtcGxlXG4gKiBmbG9hdCBkaWZmdXNlSW50ZW5zaXR5ID0gY3ptX2dldExhbWJlcnREaWZmdXNlKGxpZ2h0RGlyZWN0aW9uRUMsIG5vcm1hbEVDKTtcbiAqIGZsb2F0IHNwZWN1bGFySW50ZW5zaXR5ID0gY3ptX2dldFNwZWN1bGFyKGxpZ2h0RGlyZWN0aW9uRUMsIHRvRXllRUMsIG5vcm1hbEVDLCAyMDApO1xuICogdmVjMyBjb2xvciA9IChkaWZmdXNlQ29sb3IgKiBkaWZmdXNlSW50ZW5zaXR5KSArIChzcGVjdWxhckNvbG9yICogc3BlY3VsYXJJbnRlbnNpdHkpO1xuICovXG5mbG9hdCBjem1fZ2V0TGFtYmVydERpZmZ1c2UodmVjMyBsaWdodERpcmVjdGlvbkVDLCB2ZWMzIG5vcm1hbEVDKVxue1xuICAgIHJldHVybiBtYXgoZG90KGxpZ2h0RGlyZWN0aW9uRUMsIG5vcm1hbEVDKSwgMC4wKTtcbn0ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2dldFNwZWN1bGFyIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBzcGVjdWxhciBpbnRlbnNpdHkgb2YgcmVmbGVjdGVkIGxpZ2h0LlxuICpcbiAqIEBuYW1lIGN6bV9nZXRTcGVjdWxhclxuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7dmVjM30gbGlnaHREaXJlY3Rpb25FQyBVbml0IHZlY3RvciBwb2ludGluZyB0byB0aGUgbGlnaHQgc291cmNlIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7dmVjM30gdG9FeWVFQyBVbml0IHZlY3RvciBwb2ludGluZyB0byB0aGUgZXllIHBvc2l0aW9uIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7dmVjM30gbm9ybWFsRUMgVGhlIHN1cmZhY2Ugbm9ybWFsIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7ZmxvYXR9IHNoaW5pbmVzcyBUaGUgc2hhcnBuZXNzIG9mIHRoZSBzcGVjdWxhciByZWZsZWN0aW9uLiAgSGlnaGVyIHZhbHVlcyBjcmVhdGUgYSBzbWFsbGVyLCBtb3JlIGZvY3VzZWQgc3BlY3VsYXIgaGlnaGxpZ2h0LlxuICpcbiAqIEByZXR1cm5zIHtmbG9hdH0gVGhlIGludGVuc2l0eSBvZiB0aGUgc3BlY3VsYXIgaGlnaGxpZ2h0LlxuICpcbiAqIEBzZWUgY3ptX3Bob25nXG4gKlxuICogQGV4YW1wbGVcbiAqIGZsb2F0IGRpZmZ1c2VJbnRlbnNpdHkgPSBjem1fZ2V0TGFtYmVydERpZmZ1c2UobGlnaHREaXJlY3Rpb25FQywgbm9ybWFsRUMpO1xuICogZmxvYXQgc3BlY3VsYXJJbnRlbnNpdHkgPSBjem1fZ2V0U3BlY3VsYXIobGlnaHREaXJlY3Rpb25FQywgdG9FeWVFQywgbm9ybWFsRUMsIDIwMCk7XG4gKiB2ZWMzIGNvbG9yID0gKGRpZmZ1c2VDb2xvciAqIGRpZmZ1c2VJbnRlbnNpdHkpICsgKHNwZWN1bGFyQ29sb3IgKiBzcGVjdWxhckludGVuc2l0eSk7XG4gKi9cbmZsb2F0IGN6bV9nZXRTcGVjdWxhcih2ZWMzIGxpZ2h0RGlyZWN0aW9uRUMsIHZlYzMgdG9FeWVFQywgdmVjMyBub3JtYWxFQywgZmxvYXQgc2hpbmluZXNzKVxue1xuICAgIHZlYzMgdG9SZWZsZWN0ZWRMaWdodCA9IHJlZmxlY3QoLWxpZ2h0RGlyZWN0aW9uRUMsIG5vcm1hbEVDKTtcbiAgICBmbG9hdCBzcGVjdWxhciA9IG1heChkb3QodG9SZWZsZWN0ZWRMaWdodCwgdG9FeWVFQyksIDAuMCk7XG4gICAgcmV0dXJuIHBvdyhzcGVjdWxhciwgc2hpbmluZXNzKTtcbn0ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2dldFdhdGVyTm9pc2UiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIEBwcml2YXRlXG4gKi9cbnZlYzQgY3ptX2dldFdhdGVyTm9pc2Uoc2FtcGxlcjJEIG5vcm1hbE1hcCwgdmVjMiB1diwgZmxvYXQgdGltZSwgZmxvYXQgYW5nbGVJblJhZGlhbnMpXG57XG4gICAgZmxvYXQgY29zQW5nbGUgPSBjb3MoYW5nbGVJblJhZGlhbnMpO1xuICAgIGZsb2F0IHNpbkFuZ2xlID0gc2luKGFuZ2xlSW5SYWRpYW5zKTtcblxuICAgIC8vIHRpbWUgZGVwZW5kZW50IHNhbXBsaW5nIGRpcmVjdGlvbnNcbiAgICB2ZWMyIHMwID0gdmVjMigxLjAvMTcuMCwgMC4wKTtcbiAgICB2ZWMyIHMxID0gdmVjMigtMS4wLzI5LjAsIDAuMCk7XG4gICAgdmVjMiBzMiA9IHZlYzIoMS4wLzEwMS4wLCAxLjAvNTkuMCk7XG4gICAgdmVjMiBzMyA9IHZlYzIoLTEuMC8xMDkuMCwgLTEuMC81Ny4wKTtcblxuICAgIC8vIHJvdGF0ZSBzYW1wbGluZyBkaXJlY3Rpb24gYnkgc3BlY2lmaWVkIGFuZ2xlXG4gICAgczAgPSB2ZWMyKChjb3NBbmdsZSAqIHMwLngpIC0gKHNpbkFuZ2xlICogczAueSksIChzaW5BbmdsZSAqIHMwLngpICsgKGNvc0FuZ2xlICogczAueSkpO1xuICAgIHMxID0gdmVjMigoY29zQW5nbGUgKiBzMS54KSAtIChzaW5BbmdsZSAqIHMxLnkpLCAoc2luQW5nbGUgKiBzMS54KSArIChjb3NBbmdsZSAqIHMxLnkpKTtcbiAgICBzMiA9IHZlYzIoKGNvc0FuZ2xlICogczIueCkgLSAoc2luQW5nbGUgKiBzMi55KSwgKHNpbkFuZ2xlICogczIueCkgKyAoY29zQW5nbGUgKiBzMi55KSk7XG4gICAgczMgPSB2ZWMyKChjb3NBbmdsZSAqIHMzLngpIC0gKHNpbkFuZ2xlICogczMueSksIChzaW5BbmdsZSAqIHMzLngpICsgKGNvc0FuZ2xlICogczMueSkpO1xuXG4gICAgdmVjMiB1djAgPSAodXYvMTAzLjApICsgKHRpbWUgKiBzMCk7XG4gICAgdmVjMiB1djEgPSB1di8xMDcuMCArICh0aW1lICogczEpICsgdmVjMigwLjIzKTtcbiAgICB2ZWMyIHV2MiA9IHV2L3ZlYzIoODk3LjAsIDk4My4wKSArICh0aW1lICogczIpICsgdmVjMigwLjUxKTtcbiAgICB2ZWMyIHV2MyA9IHV2L3ZlYzIoOTkxLjAsIDg3Ny4wKSArICh0aW1lICogczMpICsgdmVjMigwLjcxKTtcblxuICAgIHV2MCA9IGZyYWN0KHV2MCk7XG4gICAgdXYxID0gZnJhY3QodXYxKTtcbiAgICB1djIgPSBmcmFjdCh1djIpO1xuICAgIHV2MyA9IGZyYWN0KHV2Myk7XG4gICAgdmVjNCBub2lzZSA9ICh0ZXh0dXJlMkQobm9ybWFsTWFwLCB1djApKSArXG4gICAgICAgICAgICAgICAgICh0ZXh0dXJlMkQobm9ybWFsTWFwLCB1djEpKSArXG4gICAgICAgICAgICAgICAgICh0ZXh0dXJlMkQobm9ybWFsTWFwLCB1djIpKSArXG4gICAgICAgICAgICAgICAgICh0ZXh0dXJlMkQobm9ybWFsTWFwLCB1djMpKTtcblxuICAgIC8vIGF2ZXJhZ2UgYW5kIHNjYWxlIHRvIGJldHdlZW4gLTEgYW5kIDFcbiAgICByZXR1cm4gKChub2lzZSAvIDQuMCkgLSAwLjUpICogMi4wO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9nZXRXZ3M4NEVsbGlwc29pZEVDIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBSZXR1cm5zIHRoZSBXR1M4NCBlbGxpcHNvaWQsIHdpdGggaXRzIGNlbnRlciBhdCB0aGUgb3JpZ2luIG9mIHdvcmxkIGNvb3JkaW5hdGVzLCBpbiBleWUgY29vcmRpbmF0ZXMuXG4gKlxuICogQG5hbWUgY3ptX2dldFdnczg0RWxsaXBzb2lkRUNcbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcmV0dXJucyB7Y3ptX2VsbGlwc29pZH0gVGhlIFdHUzg0IGVsbGlwc29pZCwgd2l0aCBpdHMgY2VudGVyIGF0IHRoZSBvcmlnaW4gb2Ygd29ybGQgY29vcmRpbmF0ZXMsIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqXG4gKiBAc2VlIEVsbGlwc29pZC5XR1M4NFxuICpcbiAqIEBleGFtcGxlXG4gKiBjem1fZWxsaXBzb2lkIGVsbGlwc29pZCA9IGN6bV9nZXRXZ3M4NEVsbGlwc29pZEVDKCk7XG4gKi9cbmN6bV9lbGxpcHNvaWQgY3ptX2dldFdnczg0RWxsaXBzb2lkRUMoKVxue1xuICAgIHZlYzMgcmFkaWkgPSB2ZWMzKDYzNzgxMzcuMCwgNjM3ODEzNy4wLCA2MzU2NzUyLjMxNDI0NSk7XG4gICAgdmVjMyBpbnZlcnNlUmFkaWkgPSB2ZWMzKDEuMCAvIHJhZGlpLngsIDEuMCAvIHJhZGlpLnksIDEuMCAvIHJhZGlpLnopO1xuICAgIHZlYzMgaW52ZXJzZVJhZGlpU3F1YXJlZCA9IGludmVyc2VSYWRpaSAqIGludmVyc2VSYWRpaTtcbiAgICBjem1fZWxsaXBzb2lkIHRlbXAgPSBjem1fZWxsaXBzb2lkKGN6bV92aWV3WzNdLnh5eiwgcmFkaWksIGludmVyc2VSYWRpaSwgaW52ZXJzZVJhZGlpU3F1YXJlZCk7XG4gICAgcmV0dXJuIHRlbXA7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2h1ZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQWRqdXN0cyB0aGUgaHVlIG9mIGEgY29sb3IuXG4gKiBcbiAqIEBuYW1lIGN6bV9odWVcbiAqIEBnbHNsRnVuY3Rpb25cbiAqIFxuICogQHBhcmFtIHt2ZWMzfSByZ2IgVGhlIGNvbG9yLlxuICogQHBhcmFtIHtmbG9hdH0gYWRqdXN0bWVudCBUaGUgYW1vdW50IHRvIGFkanVzdCB0aGUgaHVlIG9mIHRoZSBjb2xvciBpbiByYWRpYW5zLlxuICpcbiAqIEByZXR1cm5zIHtmbG9hdH0gVGhlIGNvbG9yIHdpdGggdGhlIGh1ZSBhZGp1c3RlZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjMyBhZGp1c3RIdWUgPSBjem1faHVlKGNvbG9yLCBjem1fcGkpOyAvLyBUaGUgc2FtZSBhcyBjem1faHVlKGNvbG9yLCAtY3ptX3BpKVxuICovXG52ZWMzIGN6bV9odWUodmVjMyByZ2IsIGZsb2F0IGFkanVzdG1lbnQpXG57XG4gICAgY29uc3QgbWF0MyB0b1lJUSA9IG1hdDMoMC4yOTksICAgICAwLjU4NywgICAgIDAuMTE0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuNTk1NzE2LCAtMC4yNzQ0NTMsIC0wLjMyMTI2MyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLjIxMTQ1NiwgLTAuNTIyNTkxLCAgMC4zMTExMzUpO1xuICAgIGNvbnN0IG1hdDMgdG9SR0IgPSBtYXQzKDEuMCwgIDAuOTU2MywgIDAuNjIxMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLjAsIC0wLjI3MjEsIC0wLjY0NzQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMS4wLCAtMS4xMDcsICAgMS43MDQ2KTtcbiAgICBcbiAgICB2ZWMzIHlpcSA9IHRvWUlRICogcmdiO1xuICAgIGZsb2F0IGh1ZSA9IGF0YW4oeWlxLnosIHlpcS55KSArIGFkanVzdG1lbnQ7XG4gICAgZmxvYXQgY2hyb21hID0gc3FydCh5aXEueiAqIHlpcS56ICsgeWlxLnkgKiB5aXEueSk7XG4gICAgXG4gICAgdmVjMyBjb2xvciA9IHZlYzMoeWlxLngsIGNocm9tYSAqIGNvcyhodWUpLCBjaHJvbWEgKiBzaW4oaHVlKSk7XG4gICAgcmV0dXJuIHRvUkdCICogY29sb3I7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2lzRW1wdHkiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIERldGVybWluZXMgaWYgYSB0aW1lIGludGVydmFsIGlzIGVtcHR5LlxuICpcbiAqIEBuYW1lIGN6bV9pc0VtcHR5XG4gKiBAZ2xzbEZ1bmN0aW9uIFxuICogXG4gKiBAcGFyYW0ge2N6bV9yYXlTZWdtZW50fSBpbnRlcnZhbCBUaGUgaW50ZXJ2YWwgdG8gdGVzdC5cbiAqIFxuICogQHJldHVybnMge2Jvb2x9IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSB0aW1lIGludGVydmFsIGlzIGVtcHR5OyBvdGhlcndpc2UsIDxjb2RlPmZhbHNlPC9jb2RlPi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYm9vbCBiMCA9IGN6bV9pc0VtcHR5KGN6bV9lbXB0eVJheVNlZ21lbnQpOyAgICAgIC8vIHRydWVcbiAqIGJvb2wgYjEgPSBjem1faXNFbXB0eShjem1fcmF5U2VnbWVudCgwLjAsIDEuMCkpOyAvLyBmYWxzZVxuICogYm9vbCBiMiA9IGN6bV9pc0VtcHR5KGN6bV9yYXlTZWdtZW50KDEuMCwgMS4wKSk7IC8vIGZhbHNlLCBjb250YWlucyAxLjAuXG4gKi9cbmJvb2wgY3ptX2lzRW1wdHkoY3ptX3JheVNlZ21lbnQgaW50ZXJ2YWwpXG57XG4gICAgcmV0dXJuIChpbnRlcnZhbC5zdG9wIDwgMC4wKTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvaXNGdWxsIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGEgdGltZSBpbnRlcnZhbCBpcyBlbXB0eS5cbiAqXG4gKiBAbmFtZSBjem1faXNGdWxsXG4gKiBAZ2xzbEZ1bmN0aW9uIFxuICogXG4gKiBAcGFyYW0ge2N6bV9yYXlTZWdtZW50fSBpbnRlcnZhbCBUaGUgaW50ZXJ2YWwgdG8gdGVzdC5cbiAqIFxuICogQHJldHVybnMge2Jvb2x9IDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSB0aW1lIGludGVydmFsIGlzIGVtcHR5OyBvdGhlcndpc2UsIDxjb2RlPmZhbHNlPC9jb2RlPi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYm9vbCBiMCA9IGN6bV9pc0VtcHR5KGN6bV9lbXB0eVJheVNlZ21lbnQpOyAgICAgIC8vIHRydWVcbiAqIGJvb2wgYjEgPSBjem1faXNFbXB0eShjem1fcmF5U2VnbWVudCgwLjAsIDEuMCkpOyAvLyBmYWxzZVxuICogYm9vbCBiMiA9IGN6bV9pc0VtcHR5KGN6bV9yYXlTZWdtZW50KDEuMCwgMS4wKSk7IC8vIGZhbHNlLCBjb250YWlucyAxLjAuXG4gKi9cbmJvb2wgY3ptX2lzRnVsbChjem1fcmF5U2VnbWVudCBpbnRlcnZhbClcbntcbiAgICByZXR1cm4gKGludGVydmFsLnN0YXJ0ID09IDAuMCAmJiBpbnRlcnZhbC5zdG9wID09IGN6bV9pbmZpbml0eSk7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL2xhdGl0dWRlVG9XZWJNZXJjYXRvckZyYWN0aW9uIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBDb21wdXRlcyB0aGUgZnJhY3Rpb24gb2YgYSBXZWIgV2VyY2F0b3IgcmVjdGFuZ2xlIGF0IHdoaWNoIGEgZ2l2ZW4gZ2VvZGV0aWMgbGF0aXR1ZGUgaXMgbG9jYXRlZC5cbiAqXG4gKiBAbmFtZSBjem1fbGF0aXR1ZGVUb1dlYk1lcmNhdG9yRnJhY3Rpb25cbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge2Zsb2F0fSBsYXRpdHVkZSBUaGUgZ2VvZGV0aWMgbGF0aXR1ZGUsIGluIHJhZGlhbnMuXG4gKiBAcGFyYW0ge2Zsb2F0fSBzb3V0aE1lcmNhdG9yWUxvdyBUaGUgbG93IHBvcnRpb24gb2YgdGhlIFdlYiBNZXJjYXRvciBjb29yZGluYXRlIG9mIHRoZSBzb3V0aGVybiBib3VuZGFyeSBvZiB0aGUgcmVjdGFuZ2xlLlxuICogQHBhcmFtIHtmbG9hdH0gc291dGhNZXJjYXRvcllIaWdoIFRoZSBoaWdoIHBvcnRpb24gb2YgdGhlIFdlYiBNZXJjYXRvciBjb29yZGluYXRlIG9mIHRoZSBzb3V0aGVybiBib3VuZGFyeSBvZiB0aGUgcmVjdGFuZ2xlLlxuICogQHBhcmFtIHtmbG9hdH0gb25lT3Zlck1lcmNhdG9ySGVpZ2h0IFRoZSB0b3RhbCBoZWlnaHQgb2YgdGhlIHJlY3RhbmdsZSBpbiBXZWIgTWVyY2F0b3IgY29vcmRpbmF0ZXMuXG4gKlxuICogQHJldHVybnMge2Zsb2F0fSBUaGUgZnJhY3Rpb24gb2YgdGhlIHJlY3RhbmdsZSBhdCB3aGljaCB0aGUgbGF0aXR1ZGUgb2NjdXJzLiAgSWYgdGhlIGxhdGl0dWRlIGlzIHRoZSBzb3V0aGVyblxuICogICAgICAgICAgYm91bmRhcnkgb2YgdGhlIHJlY3RhbmdsZSwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIHplcm8uICBJZiBpdCBpcyB0aGUgbm9ydGhlcm4gYm91bmRhcnksIHRoZSByZXR1cm5cbiAqICAgICAgICAgIHZhbHVlIHdpbGwgYmUgMS4wLiAgTGF0aXR1ZGVzIGluIGJldHdlZW4gYXJlIG1hcHBlZCBhY2NvcmRpbmcgdG8gdGhlIFdlYiBNZXJjYXRvciBwcm9qZWN0aW9uLlxuICovIFxuZmxvYXQgY3ptX2xhdGl0dWRlVG9XZWJNZXJjYXRvckZyYWN0aW9uKGZsb2F0IGxhdGl0dWRlLCBmbG9hdCBzb3V0aE1lcmNhdG9yWUxvdywgZmxvYXQgc291dGhNZXJjYXRvcllIaWdoLCBmbG9hdCBvbmVPdmVyTWVyY2F0b3JIZWlnaHQpXG57XG4gICAgZmxvYXQgc2luTGF0aXR1ZGUgPSBjem1fY29zaW5lQW5kU2luZShsYXRpdHVkZSkueTtcbiAgICBmbG9hdCBtZXJjYXRvclkgPSAwLjUgKiBsb2coKDEuMCArIHNpbkxhdGl0dWRlKSAvICgxLjAgLSBzaW5MYXRpdHVkZSkpO1xuICAgIFxuICAgIC8vIG1lcmNhdG9yWSAtIHNvdXRoTWVyY2F0b3JZIGluIHNpbXVsYXRlZCBkb3VibGUgcHJlY2lzaW9uLlxuICAgIGZsb2F0IHQxID0gMC4wIC0gc291dGhNZXJjYXRvcllMb3c7XG4gICAgZmxvYXQgZSA9IHQxIC0gMC4wO1xuICAgIGZsb2F0IHQyID0gKCgtc291dGhNZXJjYXRvcllMb3cgLSBlKSArICgwLjAgLSAodDEgLSBlKSkpICsgbWVyY2F0b3JZIC0gc291dGhNZXJjYXRvcllIaWdoO1xuICAgIGZsb2F0IGhpZ2hEaWZmZXJlbmNlID0gdDEgKyB0MjtcbiAgICBmbG9hdCBsb3dEaWZmZXJlbmNlID0gdDIgLSAoaGlnaERpZmZlcmVuY2UgLSB0MSk7XG4gICAgXG4gICAgcmV0dXJuIGhpZ2hEaWZmZXJlbmNlICogb25lT3Zlck1lcmNhdG9ySGVpZ2h0ICsgbG93RGlmZmVyZW5jZSAqIG9uZU92ZXJNZXJjYXRvckhlaWdodDtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvbHVtaW5hbmNlIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBDb21wdXRlcyB0aGUgbHVtaW5hbmNlIG9mIGEgY29sb3IuIFxuICpcbiAqIEBuYW1lIGN6bV9sdW1pbmFuY2VcbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge3ZlYzN9IHJnYiBUaGUgY29sb3IuXG4gKiBcbiAqIEByZXR1cm5zIHtmbG9hdH0gVGhlIGx1bWluYW5jZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogZmxvYXQgbGlnaHQgPSBjem1fbHVtaW5hbmNlKHZlYzMoMC4wKSk7IC8vIDAuMFxuICogZmxvYXQgZGFyayA9IGN6bV9sdW1pbmFuY2UodmVjMygxLjApKTsgIC8vIH4xLjAgXG4gKi9cbmZsb2F0IGN6bV9sdW1pbmFuY2UodmVjMyByZ2IpXG57XG4gICAgLy8gQWxnb3JpdGhtIGZyb20gQ2hhcHRlciAxMCBvZiBHcmFwaGljcyBTaGFkZXJzLlxuICAgIGNvbnN0IHZlYzMgVyA9IHZlYzMoMC4yMTI1LCAwLjcxNTQsIDAuMDcyMSk7XG4gICAgcmV0dXJuIGRvdChyZ2IsIFcpO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy9tb2RlbFRvV2luZG93Q29vcmRpbmF0ZXMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFRyYW5zZm9ybXMgYSBwb3NpdGlvbiBmcm9tIG1vZGVsIHRvIHdpbmRvdyBjb29yZGluYXRlcy4gIFRoZSB0cmFuc2Zvcm1hdGlvblxuICogZnJvbSBtb2RlbCB0byBjbGlwIGNvb3JkaW5hdGVzIGlzIGRvbmUgdXNpbmcge0BsaW5rIGN6bV9tb2RlbFZpZXdQcm9qZWN0aW9ufS5cbiAqIFRoZSB0cmFuc2Zvcm0gZnJvbSBub3JtYWxpemVkIGRldmljZSBjb29yZGluYXRlcyB0byB3aW5kb3cgY29vcmRpbmF0ZXMgaXNcbiAqIGRvbmUgdXNpbmcge0BsaW5rIGN6bV92aWV3cG9ydFRyYW5zZm9ybWF0aW9ufSwgd2hpY2ggYXNzdW1lcyBhIGRlcHRoIHJhbmdlXG4gKiBvZiA8Y29kZT5uZWFyID0gMDwvY29kZT4gYW5kIDxjb2RlPmZhciA9IDE8L2NvZGU+LlxuICogPGJyIC8+PGJyIC8+XG4gKiBUaGlzIHRyYW5zZm9ybSBpcyB1c2VmdWwgd2hlbiB0aGVyZSBpcyBhIG5lZWQgdG8gbWFuaXB1bGF0ZSB3aW5kb3cgY29vcmRpbmF0ZXNcbiAqIGluIGEgdmVydGV4IHNoYWRlciBhcyBkb25lIGJ5IHtAbGluayBCaWxsYm9hcmRDb2xsZWN0aW9ufS5cbiAqIDxiciAvPjxiciAvPlxuICogVGhpcyBmdW5jdGlvbiBzaG91bGQgbm90IGJlIGNvbmZ1c2VkIHdpdGgge0BsaW5rIGN6bV92aWV3cG9ydE9ydGhvZ3JhcGhpY30sXG4gKiB3aGljaCBpcyBhbiBvcnRob2dyYXBoaWMgcHJvamVjdGlvbiBtYXRyaXggdGhhdCB0cmFuc2Zvcm1zIGZyb20gd2luZG93IFxuICogY29vcmRpbmF0ZXMgdG8gY2xpcCBjb29yZGluYXRlcy5cbiAqXG4gKiBAbmFtZSBjem1fbW9kZWxUb1dpbmRvd0Nvb3JkaW5hdGVzXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHt2ZWM0fSBwb3NpdGlvbiBUaGUgcG9zaXRpb24gaW4gbW9kZWwgY29vcmRpbmF0ZXMgdG8gdHJhbnNmb3JtLlxuICpcbiAqIEByZXR1cm5zIHt2ZWM0fSBUaGUgdHJhbnNmb3JtZWQgcG9zaXRpb24gaW4gd2luZG93IGNvb3JkaW5hdGVzLlxuICpcbiAqIEBzZWUgY3ptX2V5ZVRvV2luZG93Q29vcmRpbmF0ZXNcbiAqIEBzZWUgY3ptX21vZGVsVmlld1Byb2plY3Rpb25cbiAqIEBzZWUgY3ptX3ZpZXdwb3J0VHJhbnNmb3JtYXRpb25cbiAqIEBzZWUgY3ptX3ZpZXdwb3J0T3J0aG9ncmFwaGljXG4gKiBAc2VlIEJpbGxib2FyZENvbGxlY3Rpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjNCBwb3NpdGlvbldDID0gY3ptX21vZGVsVG9XaW5kb3dDb29yZGluYXRlcyhwb3NpdGlvbk1DKTtcbiAqL1xudmVjNCBjem1fbW9kZWxUb1dpbmRvd0Nvb3JkaW5hdGVzKHZlYzQgcG9zaXRpb24pXG57XG4gICAgdmVjNCBxID0gY3ptX21vZGVsVmlld1Byb2plY3Rpb24gKiBwb3NpdGlvbjsgICAgICAgICAgICAgICAgLy8gY2xpcCBjb29yZGluYXRlc1xuICAgIHEueHl6IC89IHEudzsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBub3JtYWxpemVkIGRldmljZSBjb29yZGluYXRlc1xuICAgIHEueHl6ID0gKGN6bV92aWV3cG9ydFRyYW5zZm9ybWF0aW9uICogdmVjNChxLnh5eiwgMS4wKSkueHl6OyAvLyB3aW5kb3cgY29vcmRpbmF0ZXNcbiAgICByZXR1cm4gcTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvbXVsdGlwbHlXaXRoQ29sb3JCYWxhbmNlIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBET0NfVEJBXG4gKlxuICogQG5hbWUgY3ptX211bHRpcGx5V2l0aENvbG9yQmFsYW5jZVxuICogQGdsc2xGdW5jdGlvblxuICovXG52ZWMzIGN6bV9tdWx0aXBseVdpdGhDb2xvckJhbGFuY2UodmVjMyBsZWZ0LCB2ZWMzIHJpZ2h0KVxue1xuICAgIC8vIEFsZ29yaXRobSBmcm9tIENoYXB0ZXIgMTAgb2YgR3JhcGhpY3MgU2hhZGVycy5cbiAgICBjb25zdCB2ZWMzIFcgPSB2ZWMzKDAuMjEyNSwgMC43MTU0LCAwLjA3MjEpO1xuICAgIFxuICAgIHZlYzMgdGFyZ2V0ID0gbGVmdCAqIHJpZ2h0O1xuICAgIGZsb2F0IGxlZnRMdW1pbmFuY2UgPSBkb3QobGVmdCwgVyk7XG4gICAgZmxvYXQgcmlnaHRMdW1pbmFuY2UgPSBkb3QocmlnaHQsIFcpO1xuICAgIGZsb2F0IHRhcmdldEx1bWluYW5jZSA9IGRvdCh0YXJnZXQsIFcpO1xuICAgIFxuICAgIHJldHVybiAoKGxlZnRMdW1pbmFuY2UgKyByaWdodEx1bWluYW5jZSkgLyAoMi4wICogdGFyZ2V0THVtaW5hbmNlKSkgKiB0YXJnZXQ7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL29jdERlY29kZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogRGVjb2RlcyBhIHVuaXQtbGVuZ3RoIHZlY3RvciBpbiAnb2N0JyBlbmNvZGluZyB0byBhIG5vcm1hbGl6ZWQgMy1jb21wb25lbnQgQ2FydGVzaWFuIHZlY3Rvci5cbiAqIFRoZSAnb2N0JyBlbmNvZGluZyBpcyBkZXNjcmliZWQgaW4gXCJBIFN1cnZleSBvZiBFZmZpY2llbnQgUmVwcmVzZW50YXRpb25zIG9mIEluZGVwZW5kZW50IFVuaXQgVmVjdG9yc1wiLFxuICogQ2lnb2xsZSBldCBhbCAyMDE0OiBodHRwOi8vamNndC5vcmcvcHVibGlzaGVkLzAwMDMvMDIvMDEvXG4gKiBcbiAqIEBuYW1lIGN6bV9vY3REZWNvZGVcbiAqIEBwYXJhbSB7dmVjMn0gZW5jb2RlZCBUaGUgb2N0LWVuY29kZWQsIHVuaXQtbGVuZ3RoIHZlY3RvclxuICogQHJldHVybnMge3ZlYzN9IFRoZSBkZWNvZGVkIGFuZCBub3JtYWxpemVkIHZlY3RvclxuICovXG4gdmVjMyBjem1fb2N0RGVjb2RlKHZlYzIgZW5jb2RlZClcbiB7XG4gICAgdmVjMyB2ID0gdmVjMyhlbmNvZGVkLngsIGVuY29kZWQueSwgMS4wIC0gYWJzKGVuY29kZWQueCkgLSBhYnMoZW5jb2RlZC55KSk7XG4gICAgaWYgKHYueiA8IDAuMClcbiAgICB7XG4gICAgICAgIHYueHkgPSAoMS4wIC0gYWJzKHYueXgpKSAqIGN6bV9zaWduTm90WmVybyh2Lnh5KTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIG5vcm1hbGl6ZSh2KTtcbiB9XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL3Bob25nIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iZmxvYXQgY3ptX3ByaXZhdGVfZ2V0TGFtYmVydERpZmZ1c2VPZk1hdGVyaWFsKHZlYzMgbGlnaHREaXJlY3Rpb25FQywgY3ptX21hdGVyaWFsIG1hdGVyaWFsKVxue1xuICAgIHJldHVybiBjem1fZ2V0TGFtYmVydERpZmZ1c2UobGlnaHREaXJlY3Rpb25FQywgbWF0ZXJpYWwubm9ybWFsKTtcbn1cblxuZmxvYXQgY3ptX3ByaXZhdGVfZ2V0U3BlY3VsYXJPZk1hdGVyaWFsKHZlYzMgbGlnaHREaXJlY3Rpb25FQywgdmVjMyB0b0V5ZUVDLCBjem1fbWF0ZXJpYWwgbWF0ZXJpYWwpXG57XG4gICAgcmV0dXJuIGN6bV9nZXRTcGVjdWxhcihsaWdodERpcmVjdGlvbkVDLCB0b0V5ZUVDLCBtYXRlcmlhbC5ub3JtYWwsIG1hdGVyaWFsLnNoaW5pbmVzcyk7XG59XG5cbi8qKlxuICogQ29tcHV0ZXMgYSBjb2xvciB1c2luZyB0aGUgUGhvbmcgbGlnaHRpbmcgbW9kZWwuXG4gKlxuICogQG5hbWUgY3ptX3Bob25nXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHt2ZWMzfSB0b0V5ZSBBIG5vcm1hbGl6ZWQgdmVjdG9yIGZyb20gdGhlIGZyYWdtZW50IHRvIHRoZSBleWUgaW4gZXllIGNvb3JkaW5hdGVzLlxuICogQHBhcmFtIHtjem1fbWF0ZXJpYWx9IG1hdGVyaWFsIFRoZSBmcmFnbWVudCdzIG1hdGVyaWFsLlxuICogXG4gKiBAcmV0dXJucyB7dmVjNH0gVGhlIGNvbXB1dGVkIGNvbG9yLlxuICogXG4gKiBAZXhhbXBsZVxuICogdmVjMyBwb3NpdGlvblRvRXllRUMgPSAvLyAuLi5cbiAqIGN6bV9tYXRlcmlhbCBtYXRlcmlhbCA9IC8vIC4uLlxuICogZ2xfRnJhZ0NvbG9yID0gY3ptX3Bob25nKG5vcm1hbGl6ZShwb3NpdGlvblRvRXllRUMpLCBtYXRlcmlhbCk7XG4gKlxuICogQHNlZSBjem1fZ2V0TWF0ZXJpYWxcbiAqL1xudmVjNCBjem1fcGhvbmcodmVjMyB0b0V5ZSwgY3ptX21hdGVyaWFsIG1hdGVyaWFsKVxue1xuICAgIC8vIERpZmZ1c2UgZnJvbSBkaXJlY3Rpb25hbCBsaWdodCBzb3VyY2VzIGF0IGV5ZSAoZm9yIHRvcC1kb3duIGFuZCBob3Jpem9uIHZpZXdzKVxuICAgIGZsb2F0IGRpZmZ1c2UgPSBjem1fcHJpdmF0ZV9nZXRMYW1iZXJ0RGlmZnVzZU9mTWF0ZXJpYWwodmVjMygwLjAsIDAuMCwgMS4wKSwgbWF0ZXJpYWwpICsgY3ptX3ByaXZhdGVfZ2V0TGFtYmVydERpZmZ1c2VPZk1hdGVyaWFsKHZlYzMoMC4wLCAxLjAsIDAuMCksIG1hdGVyaWFsKTtcblxuICAgIC8vIFNwZWN1bGFyIGZyb20gc3VuIGFuZCBwc2V1ZG8tbW9vblxuICAgIGZsb2F0IHNwZWN1bGFyID0gY3ptX3ByaXZhdGVfZ2V0U3BlY3VsYXJPZk1hdGVyaWFsKGN6bV9zdW5EaXJlY3Rpb25FQywgdG9FeWUsIG1hdGVyaWFsKSArIGN6bV9wcml2YXRlX2dldFNwZWN1bGFyT2ZNYXRlcmlhbChjem1fbW9vbkRpcmVjdGlvbkVDLCB0b0V5ZSwgbWF0ZXJpYWwpO1xuXG4gICAgLy8gVGVtcG9yYXJ5IHdvcmthcm91bmQgZm9yIGFkZGluZyBhbWJpZW50LlxuICAgIHZlYzMgbWF0ZXJpYWxEaWZmdXNlID0gbWF0ZXJpYWwuZGlmZnVzZSAqIDAuNTtcbiAgICBcbiAgICB2ZWMzIGFtYmllbnQgPSBtYXRlcmlhbERpZmZ1c2U7XG4gICAgdmVjMyBjb2xvciA9IGFtYmllbnQgKyBtYXRlcmlhbC5lbWlzc2lvbjtcbiAgICBjb2xvciArPSBtYXRlcmlhbERpZmZ1c2UgKiBkaWZmdXNlO1xuICAgIGNvbG9yICs9IG1hdGVyaWFsLnNwZWN1bGFyICogc3BlY3VsYXI7XG5cbiAgICByZXR1cm4gdmVjNChjb2xvciwgbWF0ZXJpYWwuYWxwaGEpO1xufVxuXG52ZWM0IGN6bV9wcml2YXRlX3Bob25nKHZlYzMgdG9FeWUsIGN6bV9tYXRlcmlhbCBtYXRlcmlhbClcbntcbiAgICBmbG9hdCBkaWZmdXNlID0gY3ptX3ByaXZhdGVfZ2V0TGFtYmVydERpZmZ1c2VPZk1hdGVyaWFsKGN6bV9zdW5EaXJlY3Rpb25FQywgbWF0ZXJpYWwpO1xuICAgIGZsb2F0IHNwZWN1bGFyID0gY3ptX3ByaXZhdGVfZ2V0U3BlY3VsYXJPZk1hdGVyaWFsKGN6bV9zdW5EaXJlY3Rpb25FQywgdG9FeWUsIG1hdGVyaWFsKTtcblxuICAgIHZlYzMgYW1iaWVudCA9IHZlYzMoMC4wKTtcbiAgICB2ZWMzIGNvbG9yID0gYW1iaWVudCArIG1hdGVyaWFsLmVtaXNzaW9uO1xuICAgIGNvbG9yICs9IG1hdGVyaWFsLmRpZmZ1c2UgKiBkaWZmdXNlO1xuICAgIGNvbG9yICs9IG1hdGVyaWFsLnNwZWN1bGFyICogc3BlY3VsYXI7XG5cbiAgICByZXR1cm4gdmVjNChjb2xvciwgbWF0ZXJpYWwuYWxwaGEpO1xufSJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvcG9pbnRBbG9uZ1JheSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQ29tcHV0ZXMgdGhlIHBvaW50IGFsb25nIGEgcmF5IGF0IHRoZSBnaXZlbiB0aW1lLiAgPGNvZGU+dGltZTwvY29kZT4gY2FuIGJlIHBvc2l0aXZlLCBuZWdhdGl2ZSwgb3IgemVyby5cbiAqXG4gKiBAbmFtZSBjem1fcG9pbnRBbG9uZ1JheVxuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7Y3ptX3JheX0gcmF5IFRoZSByYXkgdG8gY29tcHV0ZSB0aGUgcG9pbnQgYWxvbmcuXG4gKiBAcGFyYW0ge2Zsb2F0fSB0aW1lIFRoZSB0aW1lIGFsb25nIHRoZSByYXkuXG4gKiBcbiAqIEByZXR1cm5zIHt2ZWMzfSBUaGUgcG9pbnQgYWxvbmcgdGhlIHJheSBhdCB0aGUgZ2l2ZW4gdGltZS5cbiAqIFxuICogQGV4YW1wbGVcbiAqIGN6bV9yYXkgcmF5ID0gY3ptX3JheSh2ZWMzKDAuMCksIHZlYzMoMS4wLCAwLjAsIDAuMCkpOyAvLyBvcmlnaW4sIGRpcmVjdGlvblxuICogdmVjMyB2ID0gY3ptX3BvaW50QWxvbmdSYXkocmF5LCAyLjApOyAvLyAoMi4wLCAwLjAsIDAuMClcbiAqL1xudmVjMyBjem1fcG9pbnRBbG9uZ1JheShjem1fcmF5IHJheSwgZmxvYXQgdGltZSlcbntcbiAgICByZXR1cm4gcmF5Lm9yaWdpbiArICh0aW1lICogcmF5LmRpcmVjdGlvbik7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL3JheUVsbGlwc29pZEludGVyc2VjdGlvbkludGVydmFsIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBET0NfVEJBXG4gKlxuICogQG5hbWUgY3ptX3JheUVsbGlwc29pZEludGVyc2VjdGlvbkludGVydmFsXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKi9cbmN6bV9yYXlTZWdtZW50IGN6bV9yYXlFbGxpcHNvaWRJbnRlcnNlY3Rpb25JbnRlcnZhbChjem1fcmF5IHJheSwgY3ptX2VsbGlwc29pZCBlbGxpcHNvaWQpXG57XG4gICAvLyByYXkgYW5kIGVsbGlwc29pZCBjZW50ZXIgaW4gZXllIGNvb3JkaW5hdGVzLiAgcmFkaWkgaW4gbW9kZWwgY29vcmRpbmF0ZXMuXG4gICAgdmVjMyBxID0gZWxsaXBzb2lkLmludmVyc2VSYWRpaSAqIChjem1faW52ZXJzZU1vZGVsVmlldyAqIHZlYzQocmF5Lm9yaWdpbiwgMS4wKSkueHl6O1xuICAgIHZlYzMgdyA9IGVsbGlwc29pZC5pbnZlcnNlUmFkaWkgKiAoY3ptX2ludmVyc2VNb2RlbFZpZXcgKiB2ZWM0KHJheS5kaXJlY3Rpb24sIDAuMCkpLnh5ejtcbiAgIFxuICAgIHEgPSBxIC0gZWxsaXBzb2lkLmludmVyc2VSYWRpaSAqIChjem1faW52ZXJzZU1vZGVsVmlldyAqIHZlYzQoZWxsaXBzb2lkLmNlbnRlciwgMS4wKSkueHl6O1xuICAgIFxuICAgIGZsb2F0IHEyID0gZG90KHEsIHEpO1xuICAgIGZsb2F0IHF3ID0gZG90KHEsIHcpO1xuICAgIFxuICAgIGlmIChxMiA+IDEuMCkgLy8gT3V0c2lkZSBlbGxpcHNvaWQuXG4gICAge1xuICAgICAgICBpZiAocXcgPj0gMC4wKSAvLyBMb29raW5nIG91dHdhcmQgb3IgdGFuZ2VudCAoMCBpbnRlcnNlY3Rpb25zKS5cbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIGN6bV9lbXB0eVJheVNlZ21lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSAvLyBxdyA8IDAuMC5cbiAgICAgICAge1xuICAgICAgICAgICAgZmxvYXQgcXcyID0gcXcgKiBxdztcbiAgICAgICAgICAgIGZsb2F0IGRpZmZlcmVuY2UgPSBxMiAtIDEuMDsgLy8gUG9zaXRpdmVseSB2YWx1ZWQuXG4gICAgICAgICAgICBmbG9hdCB3MiA9IGRvdCh3LCB3KTtcbiAgICAgICAgICAgIGZsb2F0IHByb2R1Y3QgPSB3MiAqIGRpZmZlcmVuY2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChxdzIgPCBwcm9kdWN0KSAvLyBJbWFnaW5hcnkgcm9vdHMgKDAgaW50ZXJzZWN0aW9ucykuXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGN6bV9lbXB0eVJheVNlZ21lbnQ7ICAgICBcbiAgICAgICAgICAgIH0gICBcbiAgICAgICAgICAgIGVsc2UgaWYgKHF3MiA+IHByb2R1Y3QpIC8vIERpc3RpbmN0IHJvb3RzICgyIGludGVyc2VjdGlvbnMpLlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZsb2F0IGRpc2NyaW1pbmFudCA9IHF3ICogcXcgLSBwcm9kdWN0O1xuICAgICAgICAgICAgICAgIGZsb2F0IHRlbXAgPSAtcXcgKyBzcXJ0KGRpc2NyaW1pbmFudCk7IC8vIEF2b2lkIGNhbmNlbGxhdGlvbi5cbiAgICAgICAgICAgICAgICBmbG9hdCByb290MCA9IHRlbXAgLyB3MjtcbiAgICAgICAgICAgICAgICBmbG9hdCByb290MSA9IGRpZmZlcmVuY2UgLyB0ZW1wO1xuICAgICAgICAgICAgICAgIGlmIChyb290MCA8IHJvb3QxKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY3ptX3JheVNlZ21lbnQgaSA9IGN6bV9yYXlTZWdtZW50KHJvb3QwLCByb290MSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjem1fcmF5U2VnbWVudCBpID0gY3ptX3JheVNlZ21lbnQocm9vdDEsIHJvb3QwKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSAvLyBxdzIgPT0gcHJvZHVjdC4gIFJlcGVhdGVkIHJvb3RzICgyIGludGVyc2VjdGlvbnMpLlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZsb2F0IHJvb3QgPSBzcXJ0KGRpZmZlcmVuY2UgLyB3Mik7XG4gICAgICAgICAgICAgICAgY3ptX3JheVNlZ21lbnQgaSA9IGN6bV9yYXlTZWdtZW50KHJvb3QsIHJvb3QpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHEyIDwgMS4wKSAvLyBJbnNpZGUgZWxsaXBzb2lkICgyIGludGVyc2VjdGlvbnMpLlxuICAgIHtcbiAgICAgICAgZmxvYXQgZGlmZmVyZW5jZSA9IHEyIC0gMS4wOyAvLyBOZWdhdGl2ZWx5IHZhbHVlZC5cbiAgICAgICAgZmxvYXQgdzIgPSBkb3Qodywgdyk7XG4gICAgICAgIGZsb2F0IHByb2R1Y3QgPSB3MiAqIGRpZmZlcmVuY2U7IC8vIE5lZ2F0aXZlbHkgdmFsdWVkLlxuICAgICAgICBmbG9hdCBkaXNjcmltaW5hbnQgPSBxdyAqIHF3IC0gcHJvZHVjdDtcbiAgICAgICAgZmxvYXQgdGVtcCA9IC1xdyArIHNxcnQoZGlzY3JpbWluYW50KTsgLy8gUG9zaXRpdmVseSB2YWx1ZWQuXG4gICAgICAgIGN6bV9yYXlTZWdtZW50IGkgPSBjem1fcmF5U2VnbWVudCgwLjAsIHRlbXAgLyB3Mik7XG4gICAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgICBlbHNlIC8vIHEyID09IDEuMC4gT24gZWxsaXBzb2lkLlxuICAgIHtcbiAgICAgICAgaWYgKHF3IDwgMC4wKSAvLyBMb29raW5nIGlud2FyZC5cbiAgICAgICAge1xuICAgICAgICAgICAgZmxvYXQgdzIgPSBkb3Qodywgdyk7XG4gICAgICAgICAgICBjem1fcmF5U2VnbWVudCBpID0gY3ptX3JheVNlZ21lbnQoMC4wLCAtcXcgLyB3Mik7XG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIC8vIHF3ID49IDAuMC4gIExvb2tpbmcgb3V0d2FyZCBvciB0YW5nZW50LlxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gY3ptX2VtcHR5UmF5U2VnbWVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvc2F0dXJhdGlvbiIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQWRqdXN0cyB0aGUgc2F0dXJhdGlvbiBvZiBhIGNvbG9yLlxuICogXG4gKiBAbmFtZSBjem1fc2F0dXJhdGlvblxuICogQGdsc2xGdW5jdGlvblxuICogXG4gKiBAcGFyYW0ge3ZlYzN9IHJnYiBUaGUgY29sb3IuXG4gKiBAcGFyYW0ge2Zsb2F0fSBhZGp1c3RtZW50IFRoZSBhbW91bnQgdG8gYWRqdXN0IHRoZSBzYXR1cmF0aW9uIG9mIHRoZSBjb2xvci5cbiAqXG4gKiBAcmV0dXJucyB7ZmxvYXR9IFRoZSBjb2xvciB3aXRoIHRoZSBzYXR1cmF0aW9uIGFkanVzdGVkLlxuICpcbiAqIEBleGFtcGxlXG4gKiB2ZWMzIGdyZXlTY2FsZSA9IGN6bV9zYXR1cmF0aW9uKGNvbG9yLCAwLjApO1xuICogdmVjMyBkb3VibGVTYXR1cmF0aW9uID0gY3ptX3NhdHVyYXRpb24oY29sb3IsIDIuMCk7XG4gKi9cbnZlYzMgY3ptX3NhdHVyYXRpb24odmVjMyByZ2IsIGZsb2F0IGFkanVzdG1lbnQpXG57XG4gICAgLy8gQWxnb3JpdGhtIGZyb20gQ2hhcHRlciAxNiBvZiBPcGVuR0wgU2hhZGluZyBMYW5ndWFnZVxuICAgIGNvbnN0IHZlYzMgVyA9IHZlYzMoMC4yMTI1LCAwLjcxNTQsIDAuMDcyMSk7XG4gICAgdmVjMyBpbnRlbnNpdHkgPSB2ZWMzKGRvdChyZ2IsIFcpKTtcbiAgICByZXR1cm4gbWl4KGludGVuc2l0eSwgcmdiLCBhZGp1c3RtZW50KTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvc2lnbk5vdFplcm8iLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFJldHVybnMgMS4wIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBwb3NpdGl2ZSBvciB6ZXJvLCBhbmQgLTEuMCBpZiBpdCBpcyBuZWdhdGl2ZS4gIFRoaXMgaXMgc2ltaWxhciB0byB0aGUgR0xTTFxuICogYnVpbHQtaW4gZnVuY3Rpb24gPGNvZGU+c2lnbjwvY29kZT4gZXhjZXB0IHRoYXQgcmV0dXJucyAxLjAgaW5zdGVhZCBvZiAwLjAgd2hlbiB0aGUgaW5wdXQgdmFsdWUgaXMgMC4wLlxuICogXG4gKiBAbmFtZSBjem1fc2lnbk5vdFplcm9cbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge30gdmFsdWUgVGhlIHZhbHVlIGZvciB3aGljaCB0byBkZXRlcm1pbmUgdGhlIHNpZ24uXG4gKiBAcmV0dXJucyB7fSAxLjAgaWYgdGhlIHZhbHVlIGlzIHBvc2l0aXZlIG9yIHplcm8sIC0xLjAgaWYgdGhlIHZhbHVlIGlzIG5lZ2F0aXZlLlxuICovXG5mbG9hdCBjem1fc2lnbk5vdFplcm8oZmxvYXQgdmFsdWUpXG57XG4gICAgcmV0dXJuIHZhbHVlID49IDAuMCA/IDEuMCA6IC0xLjA7XG59XG5cbnZlYzIgY3ptX3NpZ25Ob3RaZXJvKHZlYzIgdmFsdWUpXG57XG4gICAgcmV0dXJuIHZlYzIoY3ptX3NpZ25Ob3RaZXJvKHZhbHVlLngpLCBjem1fc2lnbk5vdFplcm8odmFsdWUueSkpO1xufVxuXG52ZWMzIGN6bV9zaWduTm90WmVybyh2ZWMzIHZhbHVlKVxue1xuICAgIHJldHVybiB2ZWMzKGN6bV9zaWduTm90WmVybyh2YWx1ZS54KSwgY3ptX3NpZ25Ob3RaZXJvKHZhbHVlLnkpLCBjem1fc2lnbk5vdFplcm8odmFsdWUueikpO1xufVxuXG52ZWM0IGN6bV9zaWduTm90WmVybyh2ZWM0IHZhbHVlKVxue1xuICAgIHJldHVybiB2ZWM0KGN6bV9zaWduTm90WmVybyh2YWx1ZS54KSwgY3ptX3NpZ25Ob3RaZXJvKHZhbHVlLnkpLCBjem1fc2lnbk5vdFplcm8odmFsdWUueiksIGN6bV9zaWduTm90WmVybyh2YWx1ZS53KSk7XG59In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy90YW5nZW50VG9FeWVTcGFjZU1hdHJpeCIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQ3JlYXRlcyBhIG1hdHJpeCB0aGF0IHRyYW5zZm9ybXMgdmVjdG9ycyBmcm9tIHRhbmdlbnQgc3BhY2UgdG8gZXllIHNwYWNlLlxuICpcbiAqIEBuYW1lIGN6bV90YW5nZW50VG9FeWVTcGFjZU1hdHJpeFxuICogQGdsc2xGdW5jdGlvblxuICogXG4gKiBAcGFyYW0ge3ZlYzN9IG5vcm1hbEVDIFRoZSBub3JtYWwgdmVjdG9yIGluIGV5ZSBjb29yZGluYXRlcy5cbiAqIEBwYXJhbSB7dmVjM30gdGFuZ2VudEVDIFRoZSB0YW5nZW50IHZlY3RvciBpbiBleWUgY29vcmRpbmF0ZXMuXG4gKiBAcGFyYW0ge3ZlYzN9IGJpbm9ybWFsRUMgVGhlIGJpbm9ybWFsIHZlY3RvciBpbiBleWUgY29vcmRpbmF0ZXMuXG4gKlxuICogQHJldHVybnMge21hdDN9IFRoZSBtYXRyaXggdGhhdCB0cmFuc2Zvcm1zIGZyb20gdGFuZ2VudCBzcGFjZSB0byBleWUgc3BhY2UuXG4gKlxuICogQGV4YW1wbGVcbiAqIG1hdDMgdGFuZ2VudFRvRXllID0gY3ptX3RhbmdlbnRUb0V5ZVNwYWNlTWF0cml4KG5vcm1hbEVDLCB0YW5nZW50RUMsIGJpbm9ybWFsRUMpO1xuICogdmVjMyBub3JtYWwgPSB0YW5nZW50VG9FeWUgKiB0ZXh0dXJlMkQobm9ybWFsTWFwLCBzdCkueHl6O1xuICovXG5tYXQzIGN6bV90YW5nZW50VG9FeWVTcGFjZU1hdHJpeCh2ZWMzIG5vcm1hbEVDLCB2ZWMzIHRhbmdlbnRFQywgdmVjMyBiaW5vcm1hbEVDKVxue1xuICAgIHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKG5vcm1hbEVDKTtcbiAgICB2ZWMzIHRhbmdlbnQgPSBub3JtYWxpemUodGFuZ2VudEVDKTtcbiAgICB2ZWMzIGJpbm9ybWFsID0gbm9ybWFsaXplKGJpbm9ybWFsRUMpO1xuICAgIHJldHVybiBtYXQzKHRhbmdlbnQueCwgIHRhbmdlbnQueSwgIHRhbmdlbnQueixcbiAgICAgICAgICAgICAgICBiaW5vcm1hbC54LCBiaW5vcm1hbC55LCBiaW5vcm1hbC56LFxuICAgICAgICAgICAgICAgIG5vcm1hbC54LCAgIG5vcm1hbC55LCAgIG5vcm1hbC56KTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9GdW5jdGlvbnMvdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogVHJhbnNsYXRlcyBhIHBvc2l0aW9uIChvciBhbnkgPGNvZGU+dmVjMzwvY29kZT4pIHRoYXQgd2FzIGVuY29kZWQgd2l0aCB7QGxpbmsgRW5jb2RlZENhcnRlc2lhbjN9LFxuICogYW5kIHRoZW4gcHJvdmlkZWQgdG8gdGhlIHNoYWRlciBhcyBzZXBhcmF0ZSA8Y29kZT5oaWdoPC9jb2RlPiBhbmQgPGNvZGU+bG93PC9jb2RlPiBiaXRzIHRvXG4gKiBiZSByZWxhdGl2ZSB0byB0aGUgZXllLiAgQXMgc2hvd24gaW4gdGhlIGV4YW1wbGUsIHRoZSBwb3NpdGlvbiBjYW4gdGhlbiBiZSB0cmFuc2Zvcm1lZCBpbiBleWVcbiAqIG9yIGNsaXAgY29vcmRpbmF0ZXMgdXNpbmcge0BsaW5rIGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllfSBvciB7QGxpbmsgY3ptX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllfSxcbiAqIHJlc3BlY3RpdmVseS5cbiAqIDxwPlxuICogVGhpcyB0ZWNobmlxdWUsIGNhbGxlZCBHUFUgUlRFLCBlbGltaW5hdGVzIGppdHRlcmluZyBhcnRpZmFjdHMgd2hlbiB1c2luZyBsYXJnZSBjb29yZGluYXRlcyBhc1xuICogZGVzY3JpYmVkIGluIHtAbGluayBodHRwOi8vYmxvZ3MuYWdpLmNvbS9pbnNpZ2h0M2QvaW5kZXgucGhwLzIwMDgvMDkvMDMvcHJlY2lzaW9ucy1wcmVjaXNpb25zL3xQcmVjaXNpb25zLCBQcmVjaXNpb25zfS5cbiAqIDwvcD5cbiAqXG4gKiBAbmFtZSBjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZVxuICogQGdsc2xGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7dmVjM30gaGlnaCBUaGUgcG9zaXRpb24ncyBoaWdoIGJpdHMuXG4gKiBAcGFyYW0ge3ZlYzN9IGxvdyBUaGUgcG9zaXRpb24ncyBsb3cgYml0cy5cbiAqIEByZXR1cm5zIHt2ZWMzfSBUaGUgcG9zaXRpb24gdHJhbnNsYXRlZCB0byBiZSByZWxhdGl2ZSB0byB0aGUgY2FtZXJhJ3MgcG9zaXRpb24uXG4gKlxuICogQGV4YW1wbGVcbiAqIGF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uSGlnaDtcbiAqIGF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uTG93O1xuICogXG4gKiB2b2lkIG1haW4oKSBcbiAqIHtcbiAqICAgdmVjNCBwID0gY3ptX3RyYW5zbGF0ZVJlbGF0aXZlVG9FeWUocG9zaXRpb25IaWdoLCBwb3NpdGlvbkxvdyk7XG4gKiAgIGdsX1Bvc2l0aW9uID0gY3ptX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllICogcDtcbiAqIH1cbiAqXG4gKiBAc2VlIGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllXG4gKiBAc2VlIGN6bV9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZVxuICogQHNlZSBjem1fY29tcHV0ZVBvc2l0aW9uXG4gKiBAc2VlIEVuY29kZWRDYXJ0ZXNpYW4zXG4gKi9cbnZlYzQgY3ptX3RyYW5zbGF0ZVJlbGF0aXZlVG9FeWUodmVjMyBoaWdoLCB2ZWMzIGxvdylcbntcbiAgICB2ZWMzIGhpZ2hEaWZmZXJlbmNlID0gaGlnaCAtIGN6bV9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0hpZ2g7XG4gICAgdmVjMyBsb3dEaWZmZXJlbmNlID0gbG93IC0gY3ptX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DTG93O1xuXG4gICAgcmV0dXJuIHZlYzQoaGlnaERpZmZlcmVuY2UgKyBsb3dEaWZmZXJlbmNlLCAxLjApO1xufVxuIn0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy90cmFuc2x1Y2VudFBob25nIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBAcHJpdmF0ZVxuICovXG52ZWM0IGN6bV90cmFuc2x1Y2VudFBob25nKHZlYzMgdG9FeWUsIGN6bV9tYXRlcmlhbCBtYXRlcmlhbClcbntcbiAgICAvLyBEaWZmdXNlIGZyb20gZGlyZWN0aW9uYWwgbGlnaHQgc291cmNlcyBhdCBleWUgKGZvciB0b3AtZG93biBhbmQgaG9yaXpvbiB2aWV3cylcbiAgICBmbG9hdCBkaWZmdXNlID0gY3ptX2dldExhbWJlcnREaWZmdXNlKHZlYzMoMC4wLCAwLjAsIDEuMCksIG1hdGVyaWFsLm5vcm1hbCk7XG4gICAgZGlmZnVzZSArPSBjem1fZ2V0TGFtYmVydERpZmZ1c2UodmVjMygwLjAsIDEuMCwgMC4wKSwgbWF0ZXJpYWwubm9ybWFsKTtcbiAgICBkaWZmdXNlID0gY2xhbXAoZGlmZnVzZSwgMC4wLCAxLjApO1xuXG4gICAgLy8gU3BlY3VsYXIgZnJvbSBzdW4gYW5kIHBzZXVkby1tb29uXG4gICAgZmxvYXQgc3BlY3VsYXIgPSBjem1fZ2V0U3BlY3VsYXIoY3ptX3N1bkRpcmVjdGlvbkVDLCB0b0V5ZSwgbWF0ZXJpYWwubm9ybWFsLCBtYXRlcmlhbC5zaGluaW5lc3MpO1xuICAgIHNwZWN1bGFyICs9IGN6bV9nZXRTcGVjdWxhcihjem1fbW9vbkRpcmVjdGlvbkVDLCB0b0V5ZSwgbWF0ZXJpYWwubm9ybWFsLCBtYXRlcmlhbC5zaGluaW5lc3MpO1xuXG4gICAgLy8gVGVtcG9yYXJ5IHdvcmthcm91bmQgZm9yIGFkZGluZyBhbWJpZW50LlxuICAgIHZlYzMgbWF0ZXJpYWxEaWZmdXNlID0gbWF0ZXJpYWwuZGlmZnVzZSAqIDAuNTtcblxuICAgIHZlYzMgYW1iaWVudCA9IG1hdGVyaWFsRGlmZnVzZTtcbiAgICB2ZWMzIGNvbG9yID0gYW1iaWVudCArIG1hdGVyaWFsLmVtaXNzaW9uO1xuICAgIGNvbG9yICs9IG1hdGVyaWFsRGlmZnVzZSAqIGRpZmZ1c2U7XG4gICAgY29sb3IgKz0gbWF0ZXJpYWwuc3BlY3VsYXIgKiBzcGVjdWxhcjtcblxuICAgIHJldHVybiB2ZWM0KGNvbG9yLCBtYXRlcmlhbC5hbHBoYSk7XG59In0pLGRlZmluZSgiU2hhZGVycy9CdWlsdGluL0Z1bmN0aW9ucy90cmFuc3Bvc2UiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFJldHVybnMgdGhlIHRyYW5zcG9zZSBvZiB0aGUgbWF0cml4LiAgVGhlIGlucHV0IDxjb2RlPm1hdHJpeDwvY29kZT4gY2FuIGJlIFxuICogYSA8Y29kZT5tYXQyPC9jb2RlPiwgPGNvZGU+bWF0MzwvY29kZT4sIG9yIDxjb2RlPm1hdDQ8L2NvZGU+LlxuICpcbiAqIEBuYW1lIGN6bV90cmFuc3Bvc2VcbiAqIEBnbHNsRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge30gbWF0cml4IFRoZSBtYXRyaXggdG8gdHJhbnNwb3NlLlxuICpcbiAqIEByZXR1cm5zIHt9IFRoZSB0cmFuc3Bvc2VkIG1hdHJpeC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gR0xTTCBkZWNsYXJhdGlvbnNcbiAqIG1hdDIgY3ptX3RyYW5zcG9zZShtYXQyIG1hdHJpeCk7XG4gKiBtYXQzIGN6bV90cmFuc3Bvc2UobWF0MyBtYXRyaXgpO1xuICogbWF0NCBjem1fdHJhbnNwb3NlKG1hdDQgbWF0cml4KTtcbiAqXG4gKiAvLyBUcmFucG9zZSBhIDN4MyByb3RhdGlvbiBtYXRyaXggdG8gZmluZCBpdHMgaW52ZXJzZS5cbiAqIG1hdDMgZWFzdE5vcnRoVXBUb0V5ZSA9IGN6bV9lYXN0Tm9ydGhVcFRvRXllQ29vcmRpbmF0ZXMoXG4gKiAgICAgcG9zaXRpb25NQywgbm9ybWFsRUMpO1xuICogbWF0MyBleWVUb0Vhc3ROb3J0aFVwID0gY3ptX3RyYW5zcG9zZShlYXN0Tm9ydGhVcFRvRXllKTtcbiAqL1xubWF0MiBjem1fdHJhbnNwb3NlKG1hdDIgbWF0cml4KVxue1xuICAgIHJldHVybiBtYXQyKFxuICAgICAgICBtYXRyaXhbMF1bMF0sIG1hdHJpeFsxXVswXSxcbiAgICAgICAgbWF0cml4WzBdWzFdLCBtYXRyaXhbMV1bMV0pO1xufVxuXG5tYXQzIGN6bV90cmFuc3Bvc2UobWF0MyBtYXRyaXgpXG57XG4gICAgcmV0dXJuIG1hdDMoXG4gICAgICAgIG1hdHJpeFswXVswXSwgbWF0cml4WzFdWzBdLCBtYXRyaXhbMl1bMF0sXG4gICAgICAgIG1hdHJpeFswXVsxXSwgbWF0cml4WzFdWzFdLCBtYXRyaXhbMl1bMV0sXG4gICAgICAgIG1hdHJpeFswXVsyXSwgbWF0cml4WzFdWzJdLCBtYXRyaXhbMl1bMl0pO1xufVxuXG5tYXQ0IGN6bV90cmFuc3Bvc2UobWF0NCBtYXRyaXgpXG57XG4gICAgcmV0dXJuIG1hdDQoXG4gICAgICAgIG1hdHJpeFswXVswXSwgbWF0cml4WzFdWzBdLCBtYXRyaXhbMl1bMF0sIG1hdHJpeFszXVswXSxcbiAgICAgICAgbWF0cml4WzBdWzFdLCBtYXRyaXhbMV1bMV0sIG1hdHJpeFsyXVsxXSwgbWF0cml4WzNdWzFdLFxuICAgICAgICBtYXRyaXhbMF1bMl0sIG1hdHJpeFsxXVsyXSwgbWF0cml4WzJdWzJdLCBtYXRyaXhbM11bMl0sXG4gICAgICAgIG1hdHJpeFswXVszXSwgbWF0cml4WzFdWzNdLCBtYXRyaXhbMl1bM10sIG1hdHJpeFszXVszXSk7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL0J1aWx0aW4vRnVuY3Rpb25zL3dpbmRvd1RvRXllQ29vcmRpbmF0ZXMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIvKipcbiAqIFRyYW5zZm9ybXMgYSBwb3NpdGlvbiBmcm9tIHdpbmRvdyB0byBleWUgY29vcmRpbmF0ZXMuXG4gKiBUaGUgdHJhbnNmb3JtIGZyb20gd2luZG93IHRvIG5vcm1hbGl6ZWQgZGV2aWNlIGNvb3JkaW5hdGVzIGlzIGRvbmUgdXNpbmcgY29tcG9uZW50c1xuICogb2YgKEBsaW5rIGN6bV92aWV3cG9ydH0gYW5kIHtAbGluayBjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvbn0gaW5zdGVhZCBvZiBjYWxjdWxhdGluZ1xuICogdGhlIGludmVyc2Ugb2YgPGNvZGU+Y3ptX3ZpZXdwb3J0VHJhbnNmb3JtYXRpb248L2NvZGU+LiBUaGUgdHJhbnNmb3JtYXRpb24gZnJvbSBcbiAqIG5vcm1hbGl6ZWQgZGV2aWNlIGNvb3JkaW5hdGVzIHRvIGNsaXAgY29vcmRpbmF0ZXMgaXMgZG9uZSB1c2luZyA8Y29kZT5wb3NpdGlvbldDLnc8L2NvZGU+LFxuICogd2hpY2ggaXMgZXhwZWN0ZWQgdG8gYmUgdGhlIHNjYWxhciB1c2VkIGluIHRoZSBwZXJzcGVjdGl2ZSBkaXZpZGUuIFRoZSB0cmFuc2Zvcm1hdGlvblxuICogZnJvbSBjbGlwIHRvIGV5ZSBjb29yZGluYXRlcyBpcyBkb25lIHVzaW5nIHtAbGluayBjem1faW52ZXJzZVByb2plY3Rpb259LlxuICpcbiAqIEBuYW1lIGN6bV93aW5kb3dUb0V5ZUNvb3JkaW5hdGVzXG4gKiBAZ2xzbEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHt2ZWM0fSBmcmFnbWVudENvb3JkaW5hdGUgVGhlIHBvc2l0aW9uIGluIHdpbmRvdyBjb29yZGluYXRlcyB0byB0cmFuc2Zvcm0uXG4gKlxuICogQHJldHVybnMge3ZlYzR9IFRoZSB0cmFuc2Zvcm1lZCBwb3NpdGlvbiBpbiBleWUgY29vcmRpbmF0ZXMuXG4gKlxuICogQHNlZSBjem1fbW9kZWxUb1dpbmRvd0Nvb3JkaW5hdGVzXG4gKiBAc2VlIGN6bV9leWVUb1dpbmRvd0Nvb3JkaW5hdGVzXG4gKiBAc2VlIGN6bV9pbnZlcnNlUHJvamVjdGlvblxuICogQHNlZSBjem1fdmlld3BvcnRcbiAqIEBzZWUgY3ptX3ZpZXdwb3J0VHJhbnNmb3JtYXRpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogdmVjNCBwb3NpdGlvbkVDID0gY3ptX3dpbmRvd1RvRXllQ29vcmRpbmF0ZXMoZ2xfRnJhZ0Nvb3JkKTtcbiAqL1xudmVjNCBjem1fd2luZG93VG9FeWVDb29yZGluYXRlcyh2ZWM0IGZyYWdtZW50Q29vcmRpbmF0ZSlcbntcbiAgICBmbG9hdCB4ID0gMi4wICogKGZyYWdtZW50Q29vcmRpbmF0ZS54IC0gY3ptX3ZpZXdwb3J0LngpIC8gY3ptX3ZpZXdwb3J0LnogLSAxLjA7XG4gICAgZmxvYXQgeSA9IDIuMCAqIChmcmFnbWVudENvb3JkaW5hdGUueSAtIGN6bV92aWV3cG9ydC55KSAvIGN6bV92aWV3cG9ydC53IC0gMS4wO1xuICAgIGZsb2F0IHogPSAoZnJhZ21lbnRDb29yZGluYXRlLnogLSBjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvblszXVsyXSkgLyBjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvblsyXVsyXTtcbiAgICB2ZWM0IHEgPSB2ZWM0KHgsIHksIHosIDEuMCk7XG4gICAgcSAvPSBmcmFnbWVudENvb3JkaW5hdGUudztcbiAgICBxID0gY3ptX2ludmVyc2VQcm9qZWN0aW9uICogcTtcbiAgICByZXR1cm4gcTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvQnVpbHRpbi9Dem1CdWlsdGlucyIsWyIuL0NvbnN0YW50cy9kZWdyZWVzUGVyUmFkaWFuIiwiLi9Db25zdGFudHMvZGVwdGhSYW5nZSIsIi4vQ29uc3RhbnRzL2Vwc2lsb24xIiwiLi9Db25zdGFudHMvZXBzaWxvbjIiLCIuL0NvbnN0YW50cy9lcHNpbG9uMyIsIi4vQ29uc3RhbnRzL2Vwc2lsb240IiwiLi9Db25zdGFudHMvZXBzaWxvbjUiLCIuL0NvbnN0YW50cy9lcHNpbG9uNiIsIi4vQ29uc3RhbnRzL2Vwc2lsb243IiwiLi9Db25zdGFudHMvaW5maW5pdHkiLCIuL0NvbnN0YW50cy9vbmVPdmVyUGkiLCIuL0NvbnN0YW50cy9vbmVPdmVyVHdvUGkiLCIuL0NvbnN0YW50cy9waSIsIi4vQ29uc3RhbnRzL3BpT3ZlckZvdXIiLCIuL0NvbnN0YW50cy9waU92ZXJTaXgiLCIuL0NvbnN0YW50cy9waU92ZXJUaHJlZSIsIi4vQ29uc3RhbnRzL3BpT3ZlclR3byIsIi4vQ29uc3RhbnRzL3JhZGlhbnNQZXJEZWdyZWUiLCIuL0NvbnN0YW50cy9zY2VuZU1vZGUyRCIsIi4vQ29uc3RhbnRzL3NjZW5lTW9kZTNEIiwiLi9Db25zdGFudHMvc2NlbmVNb2RlQ29sdW1idXNWaWV3IiwiLi9Db25zdGFudHMvc2NlbmVNb2RlTW9ycGhpbmciLCIuL0NvbnN0YW50cy9zb2xhclJhZGl1cyIsIi4vQ29uc3RhbnRzL3RocmVlUGlPdmVyMiIsIi4vQ29uc3RhbnRzL3R3b1BpIiwiLi9Db25zdGFudHMvd2ViTWVyY2F0b3JNYXhMYXRpdHVkZSIsIi4vU3RydWN0cy9kZXB0aFJhbmdlU3RydWN0IiwiLi9TdHJ1Y3RzL2VsbGlwc29pZCIsIi4vU3RydWN0cy9tYXRlcmlhbCIsIi4vU3RydWN0cy9tYXRlcmlhbElucHV0IiwiLi9TdHJ1Y3RzL3JheSIsIi4vU3RydWN0cy9yYXlTZWdtZW50IiwiLi9GdW5jdGlvbnMvUkdCVG9YWVoiLCIuL0Z1bmN0aW9ucy9YWVpUb1JHQiIsIi4vRnVuY3Rpb25zL2FscGhhV2VpZ2h0IiwiLi9GdW5jdGlvbnMvYW50aWFsaWFzIiwiLi9GdW5jdGlvbnMvY29sdW1idXNWaWV3TW9ycGgiLCIuL0Z1bmN0aW9ucy9jb21wdXRlUG9zaXRpb24iLCIuL0Z1bmN0aW9ucy9jb3NpbmVBbmRTaW5lIiwiLi9GdW5jdGlvbnMvZWFzdE5vcnRoVXBUb0V5ZUNvb3JkaW5hdGVzIiwiLi9GdW5jdGlvbnMvZWxsaXBzb2lkQ29udGFpbnNQb2ludCIsIi4vRnVuY3Rpb25zL2VsbGlwc29pZE5ldyIsIi4vRnVuY3Rpb25zL2VsbGlwc29pZFdnczg0VGV4dHVyZUNvb3JkaW5hdGVzIiwiLi9GdW5jdGlvbnMvZXF1YWxzRXBzaWxvbiIsIi4vRnVuY3Rpb25zL2V5ZU9mZnNldCIsIi4vRnVuY3Rpb25zL2V5ZVRvV2luZG93Q29vcmRpbmF0ZXMiLCIuL0Z1bmN0aW9ucy9nZW9kZXRpY1N1cmZhY2VOb3JtYWwiLCIuL0Z1bmN0aW9ucy9nZXREZWZhdWx0TWF0ZXJpYWwiLCIuL0Z1bmN0aW9ucy9nZXRMYW1iZXJ0RGlmZnVzZSIsIi4vRnVuY3Rpb25zL2dldFNwZWN1bGFyIiwiLi9GdW5jdGlvbnMvZ2V0V2F0ZXJOb2lzZSIsIi4vRnVuY3Rpb25zL2dldFdnczg0RWxsaXBzb2lkRUMiLCIuL0Z1bmN0aW9ucy9odWUiLCIuL0Z1bmN0aW9ucy9pc0VtcHR5IiwiLi9GdW5jdGlvbnMvaXNGdWxsIiwiLi9GdW5jdGlvbnMvbGF0aXR1ZGVUb1dlYk1lcmNhdG9yRnJhY3Rpb24iLCIuL0Z1bmN0aW9ucy9sdW1pbmFuY2UiLCIuL0Z1bmN0aW9ucy9tb2RlbFRvV2luZG93Q29vcmRpbmF0ZXMiLCIuL0Z1bmN0aW9ucy9tdWx0aXBseVdpdGhDb2xvckJhbGFuY2UiLCIuL0Z1bmN0aW9ucy9vY3REZWNvZGUiLCIuL0Z1bmN0aW9ucy9waG9uZyIsIi4vRnVuY3Rpb25zL3BvaW50QWxvbmdSYXkiLCIuL0Z1bmN0aW9ucy9yYXlFbGxpcHNvaWRJbnRlcnNlY3Rpb25JbnRlcnZhbCIsIi4vRnVuY3Rpb25zL3NhdHVyYXRpb24iLCIuL0Z1bmN0aW9ucy9zaWduTm90WmVybyIsIi4vRnVuY3Rpb25zL3RhbmdlbnRUb0V5ZVNwYWNlTWF0cml4IiwiLi9GdW5jdGlvbnMvdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZSIsIi4vRnVuY3Rpb25zL3RyYW5zbHVjZW50UGhvbmciLCIuL0Z1bmN0aW9ucy90cmFuc3Bvc2UiLCIuL0Z1bmN0aW9ucy93aW5kb3dUb0V5ZUNvb3JkaW5hdGVzIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0sSSxELE8sUixMLE4seixCLEYsVixrLFUsVyxHLEgscSxqLFksWCxaLEosSyxRLCQsZXQsdHQsaXQsbnQscnQsb3QsYXQsc3QsbHQsdXQsY3QsZHQsaHQsbXQsZnQscHQpeyJ1c2Ugc3RyaWN0IjsKcmV0dXJue2N6bV9kZWdyZWVzUGVyUmFkaWFuOmUsY3ptX2RlcHRoUmFuZ2U6dCxjem1fZXBzaWxvbjE6aSxjem1fZXBzaWxvbjI6bixjem1fZXBzaWxvbjM6cixjem1fZXBzaWxvbjQ6byxjem1fZXBzaWxvbjU6YSxjem1fZXBzaWxvbjY6cyxjem1fZXBzaWxvbjc6bCxjem1faW5maW5pdHk6dSxjem1fb25lT3ZlclBpOmMsY3ptX29uZU92ZXJUd29QaTpkLGN6bV9waTpoLGN6bV9waU92ZXJGb3VyOm0sY3ptX3BpT3ZlclNpeDpmLGN6bV9waU92ZXJUaHJlZTpwLGN6bV9waU92ZXJUd286dixjem1fcmFkaWFuc1BlckRlZ3JlZTpnLGN6bV9zY2VuZU1vZGUyRDpfLGN6bV9zY2VuZU1vZGUzRDp5LGN6bV9zY2VuZU1vZGVDb2x1bWJ1c1ZpZXc6Qyxjem1fc2NlbmVNb2RlTW9ycGhpbmc6dyxjem1fc29sYXJSYWRpdXM6RSxjem1fdGhyZWVQaU92ZXIyOmIsY3ptX3R3b1BpOlMsY3ptX3dlYk1lcmNhdG9yTWF4TGF0aXR1ZGU6VCxjem1fZGVwdGhSYW5nZVN0cnVjdDp4LGN6bV9lbGxpcHNvaWQ6QSxjem1fbWF0ZXJpYWw6UCxjem1fbWF0ZXJpYWxJbnB1dDpNLGN6bV9yYXk6SSxjem1fcmF5U2VnbWVudDpELGN6bV9SR0JUb1hZWjpPLGN6bV9YWVpUb1JHQjpSLGN6bV9hbHBoYVdlaWdodDpMLGN6bV9hbnRpYWxpYXM6Tixjem1fY29sdW1idXNWaWV3TW9ycGg6eixjem1fY29tcHV0ZVBvc2l0aW9uOkIsY3ptX2Nvc2luZUFuZFNpbmU6Rixjem1fZWFzdE5vcnRoVXBUb0V5ZUNvb3JkaW5hdGVzOlYsY3ptX2VsbGlwc29pZENvbnRhaW5zUG9pbnQ6ayxjem1fZWxsaXBzb2lkTmV3OlUsY3ptX2VsbGlwc29pZFdnczg0VGV4dHVyZUNvb3JkaW5hdGVzOlcsY3ptX2VxdWFsc0Vwc2lsb246Ryxjem1fZXllT2Zmc2V0OkgsY3ptX2V5ZVRvV2luZG93Q29vcmRpbmF0ZXM6cSxjem1fZ2VvZGV0aWNTdXJmYWNlTm9ybWFsOmosY3ptX2dldERlZmF1bHRNYXRlcmlhbDpZLGN6bV9nZXRMYW1iZXJ0RGlmZnVzZTpYLGN6bV9nZXRTcGVjdWxhcjpaLGN6bV9nZXRXYXRlck5vaXNlOkosY3ptX2dldFdnczg0RWxsaXBzb2lkRUM6Syxjem1faHVlOlEsY3ptX2lzRW1wdHk6JCxjem1faXNGdWxsOmV0LGN6bV9sYXRpdHVkZVRvV2ViTWVyY2F0b3JGcmFjdGlvbjp0dCxjem1fbHVtaW5hbmNlOml0LGN6bV9tb2RlbFRvV2luZG93Q29vcmRpbmF0ZXM6bnQsY3ptX211bHRpcGx5V2l0aENvbG9yQmFsYW5jZTpydCxjem1fb2N0RGVjb2RlOm90LGN6bV9waG9uZzphdCxjem1fcG9pbnRBbG9uZ1JheTpzdCxjem1fcmF5RWxsaXBzb2lkSW50ZXJzZWN0aW9uSW50ZXJ2YWw6bHQsY3ptX3NhdHVyYXRpb246dXQsY3ptX3NpZ25Ob3RaZXJvOmN0LGN6bV90YW5nZW50VG9FeWVTcGFjZU1hdHJpeDpkdCxjem1fdHJhbnNsYXRlUmVsYXRpdmVUb0V5ZTpodCxjem1fdHJhbnNsdWNlbnRQaG9uZzptdCxjem1fdHJhbnNwb3NlOmZ0LGN6bV93aW5kb3dUb0V5ZUNvb3JkaW5hdGVzOnB0fX0pLGRlZmluZSgiUmVuZGVyZXIvQXV0b21hdGljVW5pZm9ybXMiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9NYXRyaXg0Il0sZnVuY3Rpb24oZSx0LGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1uZXcgZSxyPWZ1bmN0aW9uKGUpe3RoaXMuX3NpemU9ZS5zaXplLHRoaXMuX2RhdGF0eXBlPWUuZGF0YXR5cGUsdGhpcy5nZXRWYWx1ZT1lLmdldFZhbHVlfTtpZih0KHIucHJvdG90eXBlLHtzaXplOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2l6ZX19LGRhdGF0eXBlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YXR5cGV9fX0pLCJ1bmRlZmluZWQiPT10eXBlb2YgV2ViR0xSZW5kZXJpbmdDb250ZXh0KXJldHVybnt9O3ZhciBvPXt9O29bV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUXT0iZmxvYXQiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzJdPSJ2ZWMyIixvW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9WRUMzXT0idmVjMyIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDNF09InZlYzQiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LklOVF09ImludCIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuSU5UX1ZFQzJdPSJpdmVjMiIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuSU5UX1ZFQzNdPSJpdmVjMyIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuSU5UX1ZFQzRdPSJpdmVjNCIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuQk9PTF09ImJvb2wiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LkJPT0xfVkVDMl09ImJ2ZWMyIixvW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CT09MX1ZFQzNdPSJidmVjMyIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuQk9PTF9WRUM0XT0iYnZlYzQiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDJdPSJtYXQyIixvW1dlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQzXT0ibWF0MyIsb1tXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUNF09Im1hdDQiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNBTVBMRVJfMkRdPSJzYW1wbGVyMkQiLG9bV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNBTVBMRVJfQ1VCRV09InNhbXBsZXJDdWJlIixyLnByb3RvdHlwZS5nZXREZWNsYXJhdGlvbj1mdW5jdGlvbihlKXt2YXIgdD0idW5pZm9ybSAiK29bdGhpcy5fZGF0YXR5cGVdKyIgIitlLGk9dGhpcy5fc2l6ZTtyZXR1cm4gdCs9MT09PWk/IjsiOiJbIitpLnRvU3RyaW5nKCkrIl07In07dmFyIGE9e2N6bV92aWV3cG9ydDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9WRUM0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnZpZXdwb3J0Q2FydGVzaWFuNH19KSxjem1fdmlld3BvcnRPcnRob2dyYXBoaWM6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUNCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS52aWV3cG9ydE9ydGhvZ3JhcGhpY319KSxjem1fdmlld3BvcnRUcmFuc2Zvcm1hdGlvbjpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnZpZXdwb3J0VHJhbnNmb3JtYXRpb259fSksY3ptX21vZGVsOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9kZWx9fSksY3ptX2ludmVyc2VNb2RlbDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VNb2RlbH19KSxjem1fdmlldzpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnZpZXd9fSksY3ptX3ZpZXczRDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnZpZXczRH19KSxjem1fdmlld1JvdGF0aW9uOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudmlld1JvdGF0aW9ufX0pLGN6bV92aWV3Um90YXRpb24zRDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQzLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnZpZXdSb3RhdGlvbjNEfX0pLGN6bV9pbnZlcnNlVmlldzpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VWaWV3fX0pLGN6bV9pbnZlcnNlVmlldzNEOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW52ZXJzZVZpZXczRH19KSxjem1faW52ZXJzZVZpZXdSb3RhdGlvbjpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQzLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VWaWV3Um90YXRpb259fSksY3ptX2ludmVyc2VWaWV3Um90YXRpb24zRDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQzLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VWaWV3Um90YXRpb24zRH19KSxjem1fcHJvamVjdGlvbjpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnByb2plY3Rpb259fSksY3ptX2ludmVyc2VQcm9qZWN0aW9uOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW52ZXJzZVByb2plY3Rpb259fSksY3ptX2ludmVyc2VQcm9qZWN0aW9uT0lUOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW52ZXJzZVByb2plY3Rpb25PSVR9fSksY3ptX2luZmluaXRlUHJvamVjdGlvbjpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmluZmluaXRlUHJvamVjdGlvbn19KSxjem1fbW9kZWxWaWV3Om5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9kZWxWaWV3fX0pLGN6bV9tb2RlbFZpZXczRDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLm1vZGVsVmlldzNEfX0pLGN6bV9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9kZWxWaWV3UmVsYXRpdmVUb0V5ZX19KSxjem1faW52ZXJzZU1vZGVsVmlldzpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VNb2RlbFZpZXd9fSksY3ptX2ludmVyc2VNb2RlbFZpZXczRDpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9NQVQ0LGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmludmVyc2VNb2RlbFZpZXczRH19KSxjem1fdmlld1Byb2plY3Rpb246bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUNCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS52aWV3UHJvamVjdGlvbn19KSxjem1faW52ZXJzZVZpZXdQcm9qZWN0aW9uOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaW52ZXJzZVZpZXdQcm9qZWN0aW9ufX0pLGN6bV9tb2RlbFZpZXdQcm9qZWN0aW9uOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9kZWxWaWV3UHJvamVjdGlvbn19KSxjem1faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb246bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUNCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbn19KSxjem1fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWU6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUNCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZX19KSxjem1fbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9ufX0pLGN6bV9ub3JtYWw6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5ub3JtYWx9fSksY3ptX25vcm1hbDNEOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubm9ybWFsM0R9fSksY3ptX2ludmVyc2VOb3JtYWw6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5pbnZlcnNlTm9ybWFsfX0pLGN6bV9pbnZlcnNlTm9ybWFsM0Q6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfTUFUMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5pbnZlcnNlTm9ybWFsM0R9fSksY3ptX2V5ZUhlaWdodDJEOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzIsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZXllSGVpZ2h0MkR9fSksY3ptX2VudGlyZUZydXN0dW06bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMixnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5lbnRpcmVGcnVzdHVtfX0pLGN6bV9jdXJyZW50RnJ1c3R1bTpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVF9WRUMyLGdldFZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmN1cnJlbnRGcnVzdHVtfX0pLGN6bV9zdW5Qb3NpdGlvbldDOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3VuUG9zaXRpb25XQ319KSxjem1fc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXc6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdW5Qb3NpdGlvbkNvbHVtYnVzVmlld319KSxjem1fc3VuRGlyZWN0aW9uRUM6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdW5EaXJlY3Rpb25FQ319KSxjem1fc3VuRGlyZWN0aW9uV0M6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zdW5EaXJlY3Rpb25XQ319KSxjem1fbW9vbkRpcmVjdGlvbkVDOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubW9vbkRpcmVjdGlvbkVDfX0pLGN6bV9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0hpZ2g6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0hpZ2h9fSksY3ptX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DTG93Om5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX1ZFQzMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNMb3d9fSksY3ptX3ZpZXdlclBvc2l0aW9uV0M6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVRfVkVDMyxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gaS5nZXRUcmFuc2xhdGlvbihlLmludmVyc2VWaWV3LG4pfX0pLGN6bV9mcmFtZU51bWJlcjpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5mcmFtZVN0YXRlLmZyYW1lTnVtYmVyfX0pLGN6bV9tb3JwaFRpbWU6bmV3IHIoe3NpemU6MSxkYXRhdHlwZTpXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVQsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZnJhbWVTdGF0ZS5tb3JwaFRpbWV9fSksY3ptX3NjZW5lTW9kZTpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5mcmFtZVN0YXRlLm1vZGV9fSksY3ptX3RlbWVUb1BzZXVkb0ZpeGVkOm5ldyByKHtzaXplOjEsZGF0YXR5cGU6V2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUX01BVDMsZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUudGVtZVRvUHNldWRvRml4ZWRNYXRyaXh9fSksY3ptX3Jlc29sdXRpb25TY2FsZTpuZXcgcih7c2l6ZToxLGRhdGF0eXBlOldlYkdMUmVuZGVyaW5nQ29udGV4dC5GTE9BVCxnZXRWYWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXNvbHV0aW9uU2NhbGV9fSl9O3JldHVybiBhfSksZGVmaW5lKCJSZW5kZXJlci9TaGFkZXJQcm9ncmFtIixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0ZlYXR1cmVEZXRlY3Rpb24iLCIuLi9Db3JlL01hdHJpeDIiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1J1bnRpbWVFcnJvciIsIi4uL1NoYWRlcnMvQnVpbHRpbi9Dem1CdWlsdGlucyIsIi4vQXV0b21hdGljVW5pZm9ybXMiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKHQpe3ZhciBpPXQuX2dsLHI9dC5fbG9jYXRpb247c3dpdGNoKHQuX2FjdGl2ZVVuaWZvcm0udHlwZSl7Y2FzZSBpLkZMT0FUOnJldHVybiBmdW5jdGlvbigpe2kudW5pZm9ybTFmKHIsdC52YWx1ZSl9O2Nhc2UgaS5GTE9BVF9WRUMyOnJldHVybiBmdW5jdGlvbigpe3ZhciBlPXQudmFsdWU7aS51bmlmb3JtMmYocixlLngsZS55KX07Y2FzZSBpLkZMT0FUX1ZFQzM6cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dC52YWx1ZTtpLnVuaWZvcm0zZihyLGUueCxlLnksZS56KX07Y2FzZSBpLkZMT0FUX1ZFQzQ6cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG89dC52YWx1ZTtpZihlKG8ucmVkKSlpLnVuaWZvcm00ZihyLG8ucmVkLG8uZ3JlZW4sby5ibHVlLG8uYWxwaGEpO2Vsc2V7aWYoIWUoby54KSl0aHJvdyBuZXcgbignSW52YWxpZCB2ZWM0IHZhbHVlIGZvciB1bmlmb3JtICInK3QuX2FjdGl2ZVVuaWZvcm0ubmFtZSsnIi4nKTtpLnVuaWZvcm00ZihyLG8ueCxvLnksby56LG8udyl9fTtjYXNlIGkuU0FNUExFUl8yRDpjYXNlIGkuU0FNUExFUl9DVUJFOnJldHVybiBmdW5jdGlvbigpe2kuYWN0aXZlVGV4dHVyZShpLlRFWFRVUkUwK3QudGV4dHVyZVVuaXRJbmRleCksaS5iaW5kVGV4dHVyZSh0LnZhbHVlLl90YXJnZXQsdC52YWx1ZS5fdGV4dHVyZSl9O2Nhc2UgaS5JTlQ6Y2FzZSBpLkJPT0w6cmV0dXJuIGZ1bmN0aW9uKCl7aS51bmlmb3JtMWkocix0LnZhbHVlKX07Y2FzZSBpLklOVF9WRUMyOmNhc2UgaS5CT09MX1ZFQzI6cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dC52YWx1ZTtpLnVuaWZvcm0yaShyLGUueCxlLnkpfTtjYXNlIGkuSU5UX1ZFQzM6Y2FzZSBpLkJPT0xfVkVDMzpyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10LnZhbHVlO2kudW5pZm9ybTNpKHIsZS54LGUueSxlLnopfTtjYXNlIGkuSU5UX1ZFQzQ6Y2FzZSBpLkJPT0xfVkVDNDpyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10LnZhbHVlO2kudW5pZm9ybTRpKHIsZS54LGUueSxlLnosZS53KX07Y2FzZSBpLkZMT0FUX01BVDI6cmV0dXJuIGZ1bmN0aW9uKCl7aS51bmlmb3JtTWF0cml4MmZ2KHIsITEsby50b0FycmF5KHQudmFsdWUsVCkpfTtjYXNlIGkuRkxPQVRfTUFUMzpyZXR1cm4gZnVuY3Rpb24oKXtpLnVuaWZvcm1NYXRyaXgzZnYociwhMSxhLnRvQXJyYXkodC52YWx1ZSx4KSl9O2Nhc2UgaS5GTE9BVF9NQVQ0OnJldHVybiBmdW5jdGlvbigpe2kudW5pZm9ybU1hdHJpeDRmdihyLCExLHMudG9BcnJheSh0LnZhbHVlLEEpKX07ZGVmYXVsdDp0aHJvdyBuZXcgbCgiVW5yZWNvZ25pemVkIHVuaWZvcm0gdHlwZTogIit0Ll9hY3RpdmVVbmlmb3JtLnR5cGUrJyBmb3IgdW5pZm9ybSAiJyt0Ll9hY3RpdmVVbmlmb3JtLm5hbWUrJyIuJyl9fWZ1bmN0aW9uIGgodCl7dmFyIGk9dC5fZ2wscj10Ll9sb2NhdGlvbnM7c3dpdGNoKHQuX2FjdGl2ZVVuaWZvcm0udHlwZSl7Y2FzZSBpLkZMT0FUOnJldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT10LnZhbHVlLG49ZS5sZW5ndGgsbz0wO24+bzsrK28paS51bmlmb3JtMWYocltvXSxlW29dKX07Y2FzZSBpLkZMT0FUX1ZFQzI6cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXQudmFsdWUsbj1lLmxlbmd0aCxvPTA7bj5vOysrbyl7dmFyIGE9ZVtvXTtpLnVuaWZvcm0yZihyW29dLGEueCxhLnkpfX07Y2FzZSBpLkZMT0FUX1ZFQzM6cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXQudmFsdWUsbj1lLmxlbmd0aCxvPTA7bj5vOysrbyl7dmFyIGE9ZVtvXTtpLnVuaWZvcm0zZihyW29dLGEueCxhLnksYS56KX19O2Nhc2UgaS5GTE9BVF9WRUM0OnJldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgbz10LnZhbHVlLGE9by5sZW5ndGgscz0wO2E+czsrK3Mpe3ZhciBsPW9bc107aWYoZShsLnJlZCkpaS51bmlmb3JtNGYocltzXSxsLnJlZCxsLmdyZWVuLGwuYmx1ZSxsLmFscGhhKTtlbHNle2lmKCFlKGwueCkpdGhyb3cgbmV3IG4oIkludmFsaWQgdmVjNCB2YWx1ZS4iKTtpLnVuaWZvcm00ZihyW3NdLGwueCxsLnksbC56LGwudyl9fX07Y2FzZSBpLlNBTVBMRVJfMkQ6Y2FzZSBpLlNBTVBMRVJfQ1VCRTpyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9dC52YWx1ZSxuPWUubGVuZ3RoLHI9MDtuPnI7KytyKXt2YXIgbz1lW3JdLGE9dC50ZXh0dXJlVW5pdEluZGV4K3I7aS5hY3RpdmVUZXh0dXJlKGkuVEVYVFVSRTArYSksaS5iaW5kVGV4dHVyZShvLl90YXJnZXQsby5fdGV4dHVyZSl9fTtjYXNlIGkuSU5UOmNhc2UgaS5CT09MOnJldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT10LnZhbHVlLG49ZS5sZW5ndGgsbz0wO24+bzsrK28paS51bmlmb3JtMWkocltvXSxlW29dKX07Y2FzZSBpLklOVF9WRUMyOmNhc2UgaS5CT09MX1ZFQzI6cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXQudmFsdWUsbj1lLmxlbmd0aCxvPTA7bj5vOysrbyl7dmFyIGE9ZVtvXTtpLnVuaWZvcm0yaShyW29dLGEueCxhLnkpfX07Y2FzZSBpLklOVF9WRUMzOmNhc2UgaS5CT09MX1ZFQzM6cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXQudmFsdWUsbj1lLmxlbmd0aCxvPTA7bj5vOysrbyl7dmFyIGE9ZVtvXTtpLnVuaWZvcm0zaShyW29dLGEueCxhLnksYS56KX19O2Nhc2UgaS5JTlRfVkVDNDpjYXNlIGkuQk9PTF9WRUM0OnJldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT10LnZhbHVlLG49ZS5sZW5ndGgsbz0wO24+bzsrK28pe3ZhciBhPWVbb107aS51bmlmb3JtNGkocltvXSxhLngsYS55LGEueixhLncpfX07Y2FzZSBpLkZMT0FUX01BVDI6cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciBlPXQudmFsdWUsbj1lLmxlbmd0aCxhPTA7bj5hOysrYSlpLnVuaWZvcm1NYXRyaXgyZnYoclthXSwhMSxvLnRvQXJyYXkoZVthXSxUKSl9O2Nhc2UgaS5GTE9BVF9NQVQzOnJldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgZT10LnZhbHVlLG49ZS5sZW5ndGgsbz0wO24+bzsrK28paS51bmlmb3JtTWF0cml4M2Z2KHJbb10sITEsYS50b0FycmF5KGVbb10seCkpfTtjYXNlIGkuRkxPQVRfTUFUNDpyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9dC52YWx1ZSxuPWUubGVuZ3RoLG89MDtuPm87KytvKWkudW5pZm9ybU1hdHJpeDRmdihyW29dLCExLHMudG9BcnJheShlW29dLEEpKX07ZGVmYXVsdDp0aHJvdyBuZXcgbCgiVW5yZWNvZ25pemVkIHVuaWZvcm0gdHlwZTogIit0Ll9hY3RpdmVVbmlmb3JtLnR5cGUpfX1mdW5jdGlvbiBtKGUsdCxpKXtlLnVzZVByb2dyYW0odCk7Zm9yKHZhciBuPTAscj1pLmxlbmd0aCxvPTA7cj5vOysrbyluPWlbb10uX3NldFNhbXBsZXIobik7cmV0dXJuIGUudXNlUHJvZ3JhbShudWxsKSxufWZ1bmN0aW9uIGYoZSl7dmFyIHQ9ZS5pbmRleE9mKCIjdmVyc2lvbiIpO2lmKC0xIT09dCl7dmFyIGk9ZS5pbmRleE9mKCJcbiIsdCk7aWYoLTEhPT10KXt2YXIgbj1lLnN1YnN0cmluZyh0LGkrMSkscj1lLnN1YnN0cmluZygwLHQpKyIvLyIrZS5zdWJzdHJpbmcodCk7cmV0dXJue3ZlcnNpb246bixzb3VyY2U6cn19fXJldHVybnt2ZXJzaW9uOiIiLHNvdXJjZTplfX1mdW5jdGlvbiBwKHQsaSxuKXtmb3IodmFyIHIsbz0wO288bi5sZW5ndGg7KytvKW5bb10ubmFtZT09PXQmJihyPW5bb10pO2lmKCFlKHIpKXt2YXIgYT1pLm1hdGNoKC9cL1wqXCpbXHNcU10qP1wqXC8vZ20pO2lmKGUoYSkmJm51bGwhPT1hKWZvcihvPTA7bzxhLmxlbmd0aDsrK28pe2Zvcih2YXIgcz1hW29dLGw9cy5tYXRjaCgvXG4vZ20pLmxlbmd0aCx1PSIiLGM9MDtsPmM7KytjKXUrPTA9PT1jPyIvLyBDb21tZW50IHJlcGxhY2VkIHRvIHByZXZlbnQgcHJvYmxlbXMgd2hlbiBkZXRlcm1pbmluZyBkZXBlbmRlbmNpZXMgb24gYnVpbHQtaW4gZnVuY3Rpb25zXG4iOiIvL1xuIjtpPWkucmVwbGFjZShzLHUpfXI9e25hbWU6dCxnbHNsU291cmNlOmksZGVwZW5kc09uOltdLHJlcXVpcmVkQnk6W10sZXZhbHVhdGVkOiExfSxuLnB1c2gocil9cmV0dXJuIHJ9ZnVuY3Rpb24gdih0LGkpe2lmKCF0LmV2YWx1YXRlZCl7dC5ldmFsdWF0ZWQ9ITA7dmFyIG49dC5nbHNsU291cmNlLm1hdGNoKC9cYmN6bV9bYS16QS1aMC05X10qL2cpO2UobikmJm51bGwhPT1uJiYobj1uLmZpbHRlcihmdW5jdGlvbihlLHQpe3JldHVybiBuLmluZGV4T2YoZSk9PT10fSksbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lmKGUhPT10Lm5hbWUmJkQuX2N6bUJ1aWx0aW5zQW5kVW5pZm9ybXMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBuPXAoZSxELl9jem1CdWlsdGluc0FuZFVuaWZvcm1zW2VdLGkpO3QuZGVwZW5kc09uLnB1c2gobiksbi5yZXF1aXJlZEJ5LnB1c2godCksdihuLGkpfX0pKX19ZnVuY3Rpb24gZyhlKXtmb3IodmFyIHQ9W10saT1bXTtlLmxlbmd0aD4wOyl7dmFyIHI9ZS5wb3AoKTtpLnB1c2gociksMD09PXIucmVxdWlyZWRCeS5sZW5ndGgmJnQucHVzaChyKX1mb3IoO3QubGVuZ3RoPjA7KXt2YXIgbz10LnNoaWZ0KCk7ZS5wdXNoKG8pO2Zvcih2YXIgYT0wO2E8by5kZXBlbmRzT24ubGVuZ3RoOysrYSl7dmFyIHM9by5kZXBlbmRzT25bYV0sbD1zLnJlcXVpcmVkQnkuaW5kZXhPZihvKTtzLnJlcXVpcmVkQnkuc3BsaWNlKGwsMSksMD09PXMucmVxdWlyZWRCeS5sZW5ndGgmJnQucHVzaChzKX19Zm9yKHZhciB1PVtdLGM9MDtjPGkubGVuZ3RoOysrYykwIT09aVtjXS5yZXF1aXJlZEJ5Lmxlbmd0aCYmdS5wdXNoKGlbY10pO2lmKDAhPT11Lmxlbmd0aCl7dmFyIGQ9IkEgY2lyY3VsYXIgZGVwZW5kZW5jeSB3YXMgZm91bmQgaW4gdGhlIGZvbGxvd2luZyBidWlsdC1pbiBmdW5jdGlvbnMvc3RydWN0cy9jb25zdGFudHM6IFxuIjtmb3IoYz0wO2M8dS5sZW5ndGg7KytjKWQ9ZCt1W2NdLm5hbWUrIlxuIjt0aHJvdyBuZXcgbihkKX19ZnVuY3Rpb24gXyhlKXt2YXIgdD1bXSxpPXAoIm1haW4iLGUsdCk7dihpLHQpLGcodCk7Zm9yKHZhciBuPSIiLHI9dC5sZW5ndGgtMTtyPj0wOy0tciluPW4rdFtyXS5nbHNsU291cmNlKyJcbiI7cmV0dXJuIG4ucmVwbGFjZShpLmdsc2xTb3VyY2UsIiIpfWZ1bmN0aW9uIHkoKXtyZXR1cm4iI2lmZGVmIEdMX0ZSQUdNRU5UX1BSRUNJU0lPTl9ISUdIIFxuICBwcmVjaXNpb24gaGlnaHAgZmxvYXQ7IFxuI2Vsc2UgXG4gIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OyBcbiNlbmRpZiBcblxuIn1mdW5jdGlvbiBDKHQsaSxuLHIsbyl7dmFyIGEscz1mKG4pLHU9ZihyKSxjPXMudmVyc2lvbitfKHMuc291cmNlKSsiXG4jbGluZSAwXG4iK3Muc291cmNlLGQ9dS52ZXJzaW9uK3koKStfKHUuc291cmNlKSsiXG4jbGluZSAwXG4iK3Uuc291cmNlLGg9dC5jcmVhdGVTaGFkZXIodC5WRVJURVhfU0hBREVSKTt0LnNoYWRlclNvdXJjZShoLGMpLHQuY29tcGlsZVNoYWRlcihoKTt2YXIgbT10LmNyZWF0ZVNoYWRlcih0LkZSQUdNRU5UX1NIQURFUik7dC5zaGFkZXJTb3VyY2UobSxkKSx0LmNvbXBpbGVTaGFkZXIobSk7dmFyIHA9dC5jcmVhdGVQcm9ncmFtKCk7aWYodC5hdHRhY2hTaGFkZXIocCxoKSx0LmF0dGFjaFNoYWRlcihwLG0pLHQuZGVsZXRlU2hhZGVyKGgpLHQuZGVsZXRlU2hhZGVyKG0pLGUobykpZm9yKHZhciB2IGluIG8pby5oYXNPd25Qcm9wZXJ0eSh2KSYmdC5iaW5kQXR0cmliTG9jYXRpb24ocCxvW3ZdLHYpO2lmKHQubGlua1Byb2dyYW0ocCksIXQuZ2V0UHJvZ3JhbVBhcmFtZXRlcihwLHQuTElOS19TVEFUVVMpKXtpZighdC5nZXRTaGFkZXJQYXJhbWV0ZXIobSx0LkNPTVBJTEVfU1RBVFVTKSl0aHJvdyBhPXQuZ2V0U2hhZGVySW5mb0xvZyhtKSx0LmRlbGV0ZVByb2dyYW0ocCksY29uc29sZS5lcnJvcigiW0dMXSBGcmFnbWVudCBzaGFkZXIgY29tcGlsZSBsb2c6ICIrYSksbmV3IGwoIkZyYWdtZW50IHNoYWRlciBmYWlsZWQgdG8gY29tcGlsZS4gIENvbXBpbGUgbG9nOiAiK2EpO2lmKCF0LmdldFNoYWRlclBhcmFtZXRlcihoLHQuQ09NUElMRV9TVEFUVVMpKXRocm93IGE9dC5nZXRTaGFkZXJJbmZvTG9nKGgpLHQuZGVsZXRlUHJvZ3JhbShwKSxjb25zb2xlLmVycm9yKCJbR0xdIFZlcnRleCBzaGFkZXIgY29tcGlsZSBsb2c6ICIrYSksbmV3IGwoIlZlcnRleCBzaGFkZXIgZmFpbGVkIHRvIGNvbXBpbGUuICBDb21waWxlIGxvZzogIithKTt0aHJvdyBhPXQuZ2V0UHJvZ3JhbUluZm9Mb2cocCksdC5kZWxldGVQcm9ncmFtKHApLGNvbnNvbGUuZXJyb3IoIltHTF0gU2hhZGVyIHByb2dyYW0gbGluayBsb2c6ICIrYSksbmV3IGwoIlByb2dyYW0gZmFpbGVkIHRvIGxpbmsuICBMaW5rIGxvZzogIithKX1yZXR1cm4gaSYmKGE9dC5nZXRTaGFkZXJJbmZvTG9nKGgpLGUoYSkmJmEubGVuZ3RoPjAmJmNvbnNvbGUubG9nKCJbR0xdIFZlcnRleCBzaGFkZXIgY29tcGlsZSBsb2c6ICIrYSkpLGkmJihhPXQuZ2V0U2hhZGVySW5mb0xvZyhtKSxlKGEpJiZhLmxlbmd0aD4wJiZjb25zb2xlLmxvZygiW0dMXSBGcmFnbWVudCBzaGFkZXIgY29tcGlsZSBsb2c6ICIrYSkpLGkmJihhPXQuZ2V0UHJvZ3JhbUluZm9Mb2cocCksZShhKSYmYS5sZW5ndGg+MCYmY29uc29sZS5sb2coIltHTF0gU2hhZGVyIHByb2dyYW0gbGluayBsb2c6ICIrYSkpLHB9ZnVuY3Rpb24gdyhlLHQsaSl7Zm9yKHZhciBuPXt9LHI9MDtpPnI7KytyKXt2YXIgbz1lLmdldEFjdGl2ZUF0dHJpYih0LHIpLGE9ZS5nZXRBdHRyaWJMb2NhdGlvbih0LG8ubmFtZSk7bltvLm5hbWVdPXtuYW1lOm8ubmFtZSx0eXBlOm8udHlwZSxpbmRleDphfX1yZXR1cm4gbn1mdW5jdGlvbiBFKHQsaSl7Zm9yKHZhciBuPXt9LHI9W10sbz1bXSxhPXQuZ2V0UHJvZ3JhbVBhcmFtZXRlcihpLHQuQUNUSVZFX1VOSUZPUk1TKSxzPTA7YT5zOysrcyl7dmFyIGw9dC5nZXRBY3RpdmVVbmlmb3JtKGkscyksdT0iWzBdIixjPS0xIT09bC5uYW1lLmluZGV4T2YodSxsLm5hbWUubGVuZ3RoLXUubGVuZ3RoKT9sLm5hbWUuc2xpY2UoMCxsLm5hbWUubGVuZ3RoLTMpOmwubmFtZTtpZigwIT09Yy5pbmRleE9mKCJnbF8iKSlpZihsLm5hbWUuaW5kZXhPZigiWyIpPDApe3ZhciBkPXQuZ2V0VW5pZm9ybUxvY2F0aW9uKGksYyk7aWYobnVsbCE9PWQpe3ZhciBoPXQuZ2V0VW5pZm9ybShpLGQpLG09bmV3IFAodCxsLGMsZCxoKTtuW2NdPW0sci5wdXNoKG0pLG0uX3NldFNhbXBsZXImJm8ucHVzaChtKX19ZWxzZXt2YXIgZixwLHYsZyxfPWMuaW5kZXhPZigiWyIpO2lmKF8+PTApe2lmKGY9bltjLnNsaWNlKDAsXyldLCFlKGYpKWNvbnRpbnVlO3A9Zi5fbG9jYXRpb25zLHAubGVuZ3RoPD0xJiYodj1mLnZhbHVlLGc9dC5nZXRVbmlmb3JtTG9jYXRpb24oaSxjKSxudWxsIT09ZyYmKHAucHVzaChnKSx2LnB1c2godC5nZXRVbmlmb3JtKGksZykpKSl9ZWxzZXtwPVtdLHY9W107Zm9yKHZhciB5PTA7eTxsLnNpemU7Kyt5KWc9dC5nZXRVbmlmb3JtTG9jYXRpb24oaSxjKyJbIit5KyJdIiksbnVsbCE9PWcmJihwLnB1c2goZyksdi5wdXNoKHQuZ2V0VW5pZm9ybShpLGcpKSk7Zj1uZXcgTSh0LGwsYyxwLHYpLG5bY109ZixyLnB1c2goZiksZi5fc2V0U2FtcGxlciYmby5wdXNoKGYpfX19cmV0dXJue3VuaWZvcm1zQnlOYW1lOm4sdW5pZm9ybXM6cixzYW1wbGVyVW5pZm9ybXM6b319ZnVuY3Rpb24gYihlKXt2YXIgdD1bXSxpPXt9O2Zvcih2YXIgbiBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkobikpe3ZhciByPWNbbl07cj90LnB1c2goe3VuaWZvcm06ZVtuXSxhdXRvbWF0aWNVbmlmb3JtOnJ9KTppW25dPWVbbl19cmV0dXJue2F1dG9tYXRpY1VuaWZvcm1zOnQsbWFudWFsVW5pZm9ybXM6aX19ZnVuY3Rpb24gUyh0KXtpZighZSh0Ll9wcm9ncmFtKSl7dmFyIGk9dC5fZ2wsbj1DKGksdC5fbG9nU2hhZGVyQ29tcGlsYXRpb24sdC52ZXJ0ZXhTaGFkZXJTb3VyY2UsdC5mcmFnbWVudFNoYWRlclNvdXJjZSx0Ll9hdHRyaWJ1dGVMb2NhdGlvbnMpLHI9aS5nZXRQcm9ncmFtUGFyYW1ldGVyKG4saS5BQ1RJVkVfQVRUUklCVVRFUyksbz1FKGksbiksYT1iKG8udW5pZm9ybXNCeU5hbWUpO3QuX3Byb2dyYW09bix0Ll9udW1iZXJPZlZlcnRleEF0dHJpYnV0ZXM9cix0Ll92ZXJ0ZXhBdHRyaWJ1dGVzPXcoaSxuLHIpLHQuX3VuaWZvcm1zQnlOYW1lPW8udW5pZm9ybXNCeU5hbWUsdC5fdW5pZm9ybXM9by51bmlmb3Jtcyx0Ll9hdXRvbWF0aWNVbmlmb3Jtcz1hLmF1dG9tYXRpY1VuaWZvcm1zLHQuX21hbnVhbFVuaWZvcm1zPWEubWFudWFsVW5pZm9ybXMsdC5tYXhpbXVtVGV4dHVyZVVuaXRJbmRleD1tKGksbixvLnNhbXBsZXJVbmlmb3Jtcyl9fXZhciBULHgsQTtyLnN1cHBvcnRzVHlwZWRBcnJheXMoKSYmKFQ9bmV3IEZsb2F0MzJBcnJheSg0KSx4PW5ldyBGbG9hdDMyQXJyYXkoOSksQT1uZXcgRmxvYXQzMkFycmF5KDE2KSk7dmFyIFA9ZnVuY3Rpb24oZSx0LGksbixyKXt0aGlzLnZhbHVlPXIsdGhpcy5fZ2w9ZSx0aGlzLl9hY3RpdmVVbmlmb3JtPXQsdGhpcy5fdW5pZm9ybU5hbWU9aSx0aGlzLl9sb2NhdGlvbj1uLHRoaXMudGV4dHVyZVVuaXRJbmRleD12b2lkIDAsdGhpcy5fc2V0PWQodGhpcyksKHQudHlwZT09PWUuU0FNUExFUl8yRHx8dC50eXBlPT09ZS5TQU1QTEVSX0NVQkUpJiYodGhpcy5fc2V0U2FtcGxlcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50ZXh0dXJlVW5pdEluZGV4PXQsZS51bmlmb3JtMWkobix0KSx0KzF9KX07dChQLnByb3RvdHlwZSx7bmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VuaWZvcm1OYW1lfX0sZGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hY3RpdmVVbmlmb3JtLnR5cGV9fX0pO3ZhciBNPWZ1bmN0aW9uKGUsdCxpLG4scil7dGhpcy5fZ2w9ZSx0aGlzLl9hY3RpdmVVbmlmb3JtPXQsdGhpcy5fdW5pZm9ybU5hbWU9aSx0aGlzLnZhbHVlPXIsdGhpcy5fbG9jYXRpb25zPW4sdGhpcy50ZXh0dXJlVW5pdEluZGV4PXZvaWQgMCx0aGlzLl9zZXQ9aCh0aGlzKSwodC50eXBlPT09ZS5TQU1QTEVSXzJEfHx0LnR5cGU9PT1lLlNBTVBMRVJfQ1VCRSkmJih0aGlzLl9zZXRTYW1wbGVyPWZ1bmN0aW9uKHQpe3RoaXMudGV4dHVyZVVuaXRJbmRleD10O2Zvcih2YXIgaT1uLmxlbmd0aCxyPTA7aT5yOysrcil7dmFyIG89dCtyO2UudW5pZm9ybTFpKG5bcl0sbyl9cmV0dXJuIHQraX0pfTt0KE0ucHJvdG90eXBlLHtuYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdW5pZm9ybU5hbWV9fSxkYXRhdHlwZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FjdGl2ZVVuaWZvcm0udHlwZX19fSk7dmFyIEk9MCxEPWZ1bmN0aW9uKGUsdCxpLG4scil7dGhpcy5fZ2w9ZSx0aGlzLl9sb2dTaGFkZXJDb21waWxhdGlvbj10LHRoaXMuX2F0dHJpYnV0ZUxvY2F0aW9ucz1yLHRoaXMuX3Byb2dyYW09dm9pZCAwLHRoaXMuX251bWJlck9mVmVydGV4QXR0cmlidXRlcz12b2lkIDAsdGhpcy5fdmVydGV4QXR0cmlidXRlcz12b2lkIDAsdGhpcy5fdW5pZm9ybXNCeU5hbWU9dm9pZCAwLHRoaXMuX3VuaWZvcm1zPXZvaWQgMCx0aGlzLl9hdXRvbWF0aWNVbmlmb3Jtcz12b2lkIDAsdGhpcy5fbWFudWFsVW5pZm9ybXM9dm9pZCAwLHRoaXMuX2NhY2hlZFNoYWRlcj12b2lkIDAsdGhpcy5tYXhpbXVtVGV4dHVyZVVuaXRJbmRleD12b2lkIDAsdGhpcy5fdmVydGV4U2hhZGVyU291cmNlPWksdGhpcy5fZnJhZ21lbnRTaGFkZXJTb3VyY2U9bix0aGlzLmlkPUkrK307dChELnByb3RvdHlwZSx7dmVydGV4U2hhZGVyU291cmNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmVydGV4U2hhZGVyU291cmNlfX0sZnJhZ21lbnRTaGFkZXJTb3VyY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFnbWVudFNoYWRlclNvdXJjZX19LHZlcnRleEF0dHJpYnV0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiBTKHRoaXMpLHRoaXMuX3ZlcnRleEF0dHJpYnV0ZXN9fSxudW1iZXJPZlZlcnRleEF0dHJpYnV0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiBTKHRoaXMpLHRoaXMuX251bWJlck9mVmVydGV4QXR0cmlidXRlc319LGFsbFVuaWZvcm1zOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzKSx0aGlzLl91bmlmb3Jtc0J5TmFtZX19LG1hbnVhbFVuaWZvcm1zOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzKSx0aGlzLl9tYW51YWxVbmlmb3Jtc319fSksRC5fY3ptQnVpbHRpbnNBbmRVbmlmb3Jtcz17fTtmb3IodmFyIE8gaW4gdSl1Lmhhc093blByb3BlcnR5KE8pJiYoRC5fY3ptQnVpbHRpbnNBbmRVbmlmb3Jtc1tPXT11W09dKTtmb3IodmFyIFIgaW4gYylpZihjLmhhc093blByb3BlcnR5KFIpKXt2YXIgTD1jW1JdOyJmdW5jdGlvbiI9PXR5cGVvZiBMLmdldERlY2xhcmF0aW9uJiYoRC5fY3ptQnVpbHRpbnNBbmRVbmlmb3Jtc1tSXT1MLmdldERlY2xhcmF0aW9uKFIpKX1yZXR1cm4gRC5wcm90b3R5cGUuX2JpbmQ9ZnVuY3Rpb24oKXtTKHRoaXMpLHRoaXMuX2dsLnVzZVByb2dyYW0odGhpcy5fcHJvZ3JhbSl9LEQucHJvdG90eXBlLl9zZXRVbmlmb3Jtcz1mdW5jdGlvbihlLHQsaSl7dmFyIHIsbyxhPXRoaXMuX3VuaWZvcm1zLHM9dGhpcy5fbWFudWFsVW5pZm9ybXMsbD10aGlzLl9hdXRvbWF0aWNVbmlmb3JtcztpZihlKWZvcih2YXIgdSBpbiBzKXMuaGFzT3duUHJvcGVydHkodSkmJihzW3VdLnZhbHVlPWVbdV0oKSk7Zm9yKHI9bC5sZW5ndGgsbz0wO3I+bzsrK28pbFtvXS51bmlmb3JtLnZhbHVlPWxbb10uYXV0b21hdGljVW5pZm9ybS5nZXRWYWx1ZSh0KTtmb3Iocj1hLmxlbmd0aCxvPTA7cj5vOysrbylhW29dLl9zZXQoKTtpZihpKXt2YXIgYz10aGlzLl9nbCxkPXRoaXMuX3Byb2dyYW07aWYoYy52YWxpZGF0ZVByb2dyYW0oZCksIWMuZ2V0UHJvZ3JhbVBhcmFtZXRlcihkLGMuVkFMSURBVEVfU1RBVFVTKSl0aHJvdyBuZXcgbigiUHJvZ3JhbSB2YWxpZGF0aW9uIGZhaWxlZC4gIExpbmsgbG9nOiAiK2MuZ2V0UHJvZ3JhbUluZm9Mb2coZCkpfX0sRC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sRC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jYWNoZWRTaGFkZXIuY2FjaGUucmVsZWFzZVNoYWRlclByb2dyYW0odGhpcyksdm9pZCAwfSxELnByb3RvdHlwZS5maW5hbERlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2wuZGVsZXRlUHJvZ3JhbSh0aGlzLl9wcm9ncmFtKSxpKHRoaXMpfSxEfSksZGVmaW5lKCJSZW5kZXJlci9TaGFkZXJDYWNoZSIsWyIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuL1NoYWRlclByb2dyYW0iXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKGUpe3RoaXMuX2NvbnRleHQ9ZSx0aGlzLl9zaGFkZXJzPXt9LHRoaXMuX3NoYWRlcnNUb1JlbGVhc2U9e319O3JldHVybiBuLnByb3RvdHlwZS5yZXBsYWNlU2hhZGVyUHJvZ3JhbT1mdW5jdGlvbih0LGksbixyKXtyZXR1cm4gZSh0KSYmdC5kZXN0cm95KCksdGhpcy5nZXRTaGFkZXJQcm9ncmFtKGksbixyKX0sbi5wcm90b3R5cGUuZ2V0U2hhZGVyUHJvZ3JhbT1mdW5jdGlvbihlLHQsbil7dmFyIHIsbz1lK3QrSlNPTi5zdHJpbmdpZnkobik7aWYodGhpcy5fc2hhZGVyc1tvXSlyPXRoaXMuX3NoYWRlcnNbb10sZGVsZXRlIHRoaXMuX3NoYWRlcnNUb1JlbGVhc2Vbb107ZWxzZXt2YXIgYT10aGlzLl9jb250ZXh0LHM9bmV3IGkoYS5fZ2wsYS5sb2dTaGFkZXJDb21waWxhdGlvbixlLHQsbik7cj17Y2FjaGU6dGhpcyxzaGFkZXJQcm9ncmFtOnMsa2V5d29yZDpvLGNvdW50OjB9LHMuX2NhY2hlZFNoYWRlcj1yLHRoaXMuX3NoYWRlcnNbb109cn1yZXR1cm4rK3IuY291bnQsci5zaGFkZXJQcm9ncmFtfSxuLnByb3RvdHlwZS5kZXN0cm95UmVsZWFzZWRTaGFkZXJQcm9ncmFtcz1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3NoYWRlcnNUb1JlbGVhc2U7Zm9yKHZhciB0IGluIGUpaWYoZS5oYXNPd25Qcm9wZXJ0eSh0KSl7dmFyIGk9ZVt0XTtkZWxldGUgdGhpcy5fc2hhZGVyc1tpLmtleXdvcmRdLGkuc2hhZGVyUHJvZ3JhbS5maW5hbERlc3Ryb3koKX10aGlzLl9zaGFkZXJzVG9SZWxlYXNlPXt9fSxuLnByb3RvdHlwZS5yZWxlYXNlU2hhZGVyUHJvZ3JhbT1mdW5jdGlvbihlKXtpZihlKXt2YXIgdD1lLl9jYWNoZWRTaGFkZXI7dCYmMD09PS0tdC5jb3VudCYmKHRoaXMuX3NoYWRlcnNUb1JlbGVhc2VbdC5rZXl3b3JkXT10KX19LG4ucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LG4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9zaGFkZXJzO2Zvcih2YXIgaSBpbiBlKWUuaGFzT3duUHJvcGVydHkoaSkmJmVbaV0uc2hhZGVyUHJvZ3JhbS5maW5hbERlc3Ryb3koKTtyZXR1cm4gdCh0aGlzKX0sbn0pLGRlZmluZSgiUmVuZGVyZXIvVW5pZm9ybVN0YXRlIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NhcnRvZ3JhcGhpYyIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRW5jb2RlZENhcnRlc2lhbjMiLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL01hdHJpeDMiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1NpbW9uMTk5NFBsYW5ldGFyeVBvc2l0aW9ucyIsIi4uL0NvcmUvVHJhbnNmb3JtcyIsIi4uL1NjZW5lL1NjZW5lTW9kZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGYoZSx0KXtjLmNsb25lKHQsZS5fdmlldyksYy5nZXRSb3RhdGlvbih0LGUuX3ZpZXdSb3RhdGlvbiksZS5fdmlldzNERGlydHk9ITAsZS5faW52ZXJzZVZpZXczRERpcnR5PSEwLGUuX21vZGVsVmlld0RpcnR5PSEwLGUuX21vZGVsVmlldzNERGlydHk9ITAsZS5fbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZURpcnR5PSEwLGUuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eT0hMCxlLl9pbnZlcnNlTW9kZWxWaWV3M0REaXJ0eT0hMCxlLl92aWV3UHJvamVjdGlvbkRpcnR5PSEwLGUuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMCxlLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZURpcnR5PSEwLGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbkRpcnR5PSEwLGUuX25vcm1hbERpcnR5PSEwLGUuX2ludmVyc2VOb3JtYWxEaXJ0eT0hMCxlLl9ub3JtYWwzRERpcnR5PSEwLGUuX2ludmVyc2VOb3JtYWwzRERpcnR5PSEwfWZ1bmN0aW9uIHAoZSx0KXtjLmNsb25lKHQsZS5faW52ZXJzZVZpZXcpLGMuZ2V0Um90YXRpb24odCxlLl9pbnZlcnNlVmlld1JvdGF0aW9uKX1mdW5jdGlvbiB2KGUsdCl7Yy5jbG9uZSh0LGUuX3Byb2plY3Rpb24pLGUuX2ludmVyc2VQcm9qZWN0aW9uRGlydHk9ITAsZS5faW52ZXJzZVByb2plY3Rpb25PSVREaXJ0eT0hMCxlLl92aWV3UHJvamVjdGlvbkRpcnR5PSEwLGUuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMCxlLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZURpcnR5PSEwfWZ1bmN0aW9uIGcoZSx0KXtjLmNsb25lKHQsZS5faW5maW5pdGVQcm9qZWN0aW9uKSxlLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb25EaXJ0eT0hMH1mdW5jdGlvbiBfKGUsdCl7aS5jbG9uZSh0LnBvc2l0aW9uV0MsZS5fY2FtZXJhUG9zaXRpb24pLGkuY2xvbmUodC5kaXJlY3Rpb25XQyxlLl9jYW1lcmFEaXJlY3Rpb24pLGkuY2xvbmUodC5yaWdodFdDLGUuX2NhbWVyYVJpZ2h0KSxpLmNsb25lKHQudXBXQyxlLl9jYW1lcmFVcCksZS5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eT0hMH1mdW5jdGlvbiB5KGUsdCl7byhoLmNvbXB1dGVJY3JmVG9GaXhlZE1hdHJpeCh0LnRpbWUsVSkpfHwoVT1oLmNvbXB1dGVUZW1lVG9Qc2V1ZG9GaXhlZE1hdHJpeCh0LnRpbWUsVSkpO3ZhciBuPWQuY29tcHV0ZVN1blBvc2l0aW9uSW5FYXJ0aEluZXJ0aWFsRnJhbWUodC50aW1lLGUuX3N1blBvc2l0aW9uV0MpO3UubXVsdGlwbHlCeVZlY3RvcihVLG4sbiksaS5ub3JtYWxpemUobixlLl9zdW5EaXJlY3Rpb25XQyksbj11Lm11bHRpcGx5QnlWZWN0b3IoZS52aWV3Um90YXRpb24zRCxuLGUuX3N1bkRpcmVjdGlvbkVDKSxpLm5vcm1hbGl6ZShuLG4pLG49ZC5jb21wdXRlTW9vblBvc2l0aW9uSW5FYXJ0aEluZXJ0aWFsRnJhbWUodC50aW1lLGUuX21vb25EaXJlY3Rpb25FQyksdS5tdWx0aXBseUJ5VmVjdG9yKFUsbixuKSx1Lm11bHRpcGx5QnlWZWN0b3IoZS52aWV3Um90YXRpb24zRCxuLG4pLGkubm9ybWFsaXplKG4sbik7dmFyIHI9dC5tYXBQcm9qZWN0aW9uLGE9ci5lbGxpcHNvaWQscz1hLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGUuX3N1blBvc2l0aW9uV0MsVyk7ci5wcm9qZWN0KHMsZS5fc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXcpfWZ1bmN0aW9uIEMoZSl7aWYoZS5fdmlld3BvcnREaXJ0eSl7dmFyIHQ9ZS5fdmlld3BvcnQ7Yy5jb21wdXRlT3J0aG9ncmFwaGljT2ZmQ2VudGVyKHQueCx0LngrdC53aWR0aCx0LnksdC55K3QuaGVpZ2h0LDAsMSxlLl92aWV3cG9ydE9ydGhvZ3JhcGhpY01hdHJpeCksYy5jb21wdXRlVmlld3BvcnRUcmFuc2Zvcm1hdGlvbih0LDAsMSxlLl92aWV3cG9ydFRyYW5zZm9ybWF0aW9uKSxlLl92aWV3cG9ydERpcnR5PSExfX1mdW5jdGlvbiB3KGUpe2UuX2ludmVyc2VQcm9qZWN0aW9uRGlydHkmJihlLl9pbnZlcnNlUHJvamVjdGlvbkRpcnR5PSExLGMuaW52ZXJzZShlLl9wcm9qZWN0aW9uLGUuX2ludmVyc2VQcm9qZWN0aW9uKSl9ZnVuY3Rpb24gRShlKXtlLl9pbnZlcnNlUHJvamVjdGlvbk9JVERpcnR5JiYoZS5faW52ZXJzZVByb2plY3Rpb25PSVREaXJ0eT0hMSxlLl9tb2RlIT09bS5TQ0VORTJEJiZlLl9tb2RlIT09bS5NT1JQSElORz9jLmludmVyc2UoZS5fcHJvamVjdGlvbixlLl9pbnZlcnNlUHJvamVjdGlvbk9JVCk6Yy5jbG9uZShjLklERU5USVRZLGUuX2ludmVyc2VQcm9qZWN0aW9uT0lUKSl9ZnVuY3Rpb24gYihlKXtlLl9tb2RlbFZpZXdEaXJ0eSYmKGUuX21vZGVsVmlld0RpcnR5PSExLGMubXVsdGlwbHlUcmFuc2Zvcm1hdGlvbihlLl92aWV3LGUuX21vZGVsLGUuX21vZGVsVmlldykpfWZ1bmN0aW9uIFMoZSl7ZS5fbW9kZWxWaWV3M0REaXJ0eSYmKGUuX21vZGVsVmlldzNERGlydHk9ITEsYy5tdWx0aXBseVRyYW5zZm9ybWF0aW9uKGUudmlldzNELGUuX21vZGVsLGUuX21vZGVsVmlldzNEKSl9ZnVuY3Rpb24gVChlKXtlLl9pbnZlcnNlTW9kZWxWaWV3RGlydHkmJihlLl9pbnZlcnNlTW9kZWxWaWV3RGlydHk9ITEsYy5pbnZlcnNlKGUubW9kZWxWaWV3LGUuX2ludmVyc2VNb2RlbFZpZXcpKX1mdW5jdGlvbiB4KGUpe2UuX2ludmVyc2VNb2RlbFZpZXczRERpcnR5JiYoZS5faW52ZXJzZU1vZGVsVmlldzNERGlydHk9ITEsYy5pbnZlcnNlKGUubW9kZWxWaWV3M0QsZS5faW52ZXJzZU1vZGVsVmlldzNEKSl9ZnVuY3Rpb24gQShlKXtlLl92aWV3UHJvamVjdGlvbkRpcnR5JiYoZS5fdmlld1Byb2plY3Rpb25EaXJ0eT0hMSxjLm11bHRpcGx5KGUuX3Byb2plY3Rpb24sZS5fdmlldyxlLl92aWV3UHJvamVjdGlvbikpfWZ1bmN0aW9uIFAoZSl7ZS5faW52ZXJzZVZpZXdQcm9qZWN0aW9uRGlydHkmJihlLl9pbnZlcnNlVmlld1Byb2plY3Rpb25EaXJ0eT0hMSxjLmludmVyc2UoZS52aWV3UHJvamVjdGlvbixlLl9pbnZlcnNlVmlld1Byb2plY3Rpb24pKX1mdW5jdGlvbiBNKGUpe2UuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eSYmKGUuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMSxjLm11bHRpcGx5KGUuX3Byb2plY3Rpb24sZS5tb2RlbFZpZXcsZS5fbW9kZWxWaWV3UHJvamVjdGlvbikpfWZ1bmN0aW9uIEkoZSl7aWYoZS5fbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZURpcnR5KXtlLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllRGlydHk9ITE7dmFyIHQ9ZS5tb2RlbFZpZXcsaT1lLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllO2lbMF09dFswXSxpWzFdPXRbMV0saVsyXT10WzJdLGlbM109dFszXSxpWzRdPXRbNF0saVs1XT10WzVdLGlbNl09dFs2XSxpWzddPXRbN10saVs4XT10WzhdLGlbOV09dFs5XSxpWzEwXT10WzEwXSxpWzExXT10WzExXSxpWzEyXT0wLGlbMTNdPTAsaVsxNF09MCxpWzE1XT10WzE1XX19ZnVuY3Rpb24gRChlKXtlLl9pbnZlcnNlTW9kZWxWaWV3UHJvamVjdGlvbkRpcnR5JiYoZS5faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMSxjLmludmVyc2UoZS5tb2RlbFZpZXdQcm9qZWN0aW9uLGUuX2ludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uKSl9ZnVuY3Rpb24gTyhlKXtlLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZURpcnR5JiYoZS5fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWVEaXJ0eT0hMSxjLm11bHRpcGx5KGUuX3Byb2plY3Rpb24sZS5tb2RlbFZpZXdSZWxhdGl2ZVRvRXllLGUuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllKSl9ZnVuY3Rpb24gUihlKXtlLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb25EaXJ0eSYmKGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbkRpcnR5PSExLGMubXVsdGlwbHkoZS5faW5maW5pdGVQcm9qZWN0aW9uLGUubW9kZWxWaWV3LGUuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbikpfWZ1bmN0aW9uIEwoZSl7aWYoZS5fbm9ybWFsRGlydHkpe2UuX25vcm1hbERpcnR5PSExO3ZhciB0PWUuX25vcm1hbDtjLmdldFJvdGF0aW9uKGUuaW52ZXJzZU1vZGVsVmlldyx0KSx1LnRyYW5zcG9zZSh0LHQpfX1mdW5jdGlvbiBOKGUpe2lmKGUuX25vcm1hbDNERGlydHkpe2UuX25vcm1hbDNERGlydHk9ITE7dmFyIHQ9ZS5fbm9ybWFsM0Q7Yy5nZXRSb3RhdGlvbihlLmludmVyc2VNb2RlbFZpZXczRCx0KSx1LnRyYW5zcG9zZSh0LHQpfX1mdW5jdGlvbiB6KGUpe2UuX2ludmVyc2VOb3JtYWxEaXJ0eSYmKGUuX2ludmVyc2VOb3JtYWxEaXJ0eT0hMSxjLmdldFJvdGF0aW9uKGUuaW52ZXJzZU1vZGVsVmlldyxlLl9pbnZlcnNlTm9ybWFsKSl9ZnVuY3Rpb24gQihlKXtlLl9pbnZlcnNlTm9ybWFsM0REaXJ0eSYmKGUuX2ludmVyc2VOb3JtYWwzRERpcnR5PSExLGMuZ2V0Um90YXRpb24oZS5pbnZlcnNlTW9kZWxWaWV3M0QsZS5faW52ZXJzZU5vcm1hbDNEKSl9ZnVuY3Rpb24gRihlKXtlLl9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQ0RpcnR5JiYoZS5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUNEaXJ0eT0hMSxjLm11bHRpcGx5QnlQb2ludChlLmludmVyc2VNb2RlbCxlLl9jYW1lcmFQb3NpdGlvbixHKSxzLmZyb21DYXJ0ZXNpYW4oRyxlLl9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQykpfWZ1bmN0aW9uIFYoZSx0LG4scixhLHMsdSxkKXt2YXIgZj1IO2YueD1lLnksZi55PWUueixmLno9ZS54O3ZhciBwPXE7cC54PW4ueSxwLnk9bi56LHAuej1uLng7dmFyIHY9ajt2Lng9ci55LHYueT1yLnosdi56PXIueDt2YXIgZz1ZO2cueD10LnksZy55PXQueixnLno9dC54LHM9PT1tLlNDRU5FMkQmJihmLno9LjUqYSk7dmFyIF89dS51bnByb2plY3QoZixYKTtfLmxvbmdpdHVkZT1sLmNsYW1wKF8ubG9uZ2l0dWRlLC1NYXRoLlBJLE1hdGguUEkpLF8ubGF0aXR1ZGU9bC5jbGFtcChfLmxhdGl0dWRlLC1sLlBJX09WRVJfVFdPLGwuUElfT1ZFUl9UV08pO3ZhciB5PXUuZWxsaXBzb2lkLEM9eS5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihfLFopLHc9aC5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShDLHksSik7cmV0dXJuIGMubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IodyxwLHApLGMubXVsdGlwbHlCeVBvaW50QXNWZWN0b3Iodyx2LHYpLGMubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IodyxnLGcpLG8oZCl8fChkPW5ldyBjKSxkWzBdPXAueCxkWzFdPXYueCxkWzJdPS1nLngsZFszXT0wLGRbNF09cC55LGRbNV09di55LGRbNl09LWcueSxkWzddPTAsZFs4XT1wLnosZFs5XT12LnosZFsxMF09LWcueixkWzExXT0wLGRbMTJdPS1pLmRvdChwLEMpLGRbMTNdPS1pLmRvdCh2LEMpLGRbMTRdPWkuZG90KGcsQyksZFsxNV09MSxkfXZhciBrPWZ1bmN0aW9uKCl7dGhpcy5fdmlld3BvcnQ9bmV3IGUsdGhpcy5fdmlld3BvcnRDYXJ0ZXNpYW40PW5ldyBuLHRoaXMuX3ZpZXdwb3J0RGlydHk9ITEsdGhpcy5fdmlld3BvcnRPcnRob2dyYXBoaWNNYXRyaXg9Yy5jbG9uZShjLklERU5USVRZKSx0aGlzLl92aWV3cG9ydFRyYW5zZm9ybWF0aW9uPWMuY2xvbmUoYy5JREVOVElUWSksdGhpcy5fbW9kZWw9Yy5jbG9uZShjLklERU5USVRZKSx0aGlzLl92aWV3PWMuY2xvbmUoYy5JREVOVElUWSksdGhpcy5faW52ZXJzZVZpZXc9Yy5jbG9uZShjLklERU5USVRZKSx0aGlzLl9wcm9qZWN0aW9uPWMuY2xvbmUoYy5JREVOVElUWSksdGhpcy5faW5maW5pdGVQcm9qZWN0aW9uPWMuY2xvbmUoYy5JREVOVElUWSksdGhpcy5fZW50aXJlRnJ1c3R1bT1uZXcgdCx0aGlzLl9jdXJyZW50RnJ1c3R1bT1uZXcgdCx0aGlzLl9mcmFtZVN0YXRlPXZvaWQgMCx0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZD11LmNsb25lKGMuSURFTlRJVFkpLHRoaXMuX3ZpZXczRERpcnR5PSEwLHRoaXMuX3ZpZXczRD1uZXcgYyx0aGlzLl9pbnZlcnNlVmlldzNERGlydHk9ITAsdGhpcy5faW52ZXJzZVZpZXczRD1uZXcgYyx0aGlzLl9pbnZlcnNlTW9kZWxEaXJ0eT0hMCx0aGlzLl9pbnZlcnNlTW9kZWw9bmV3IGMsdGhpcy5faW52ZXJzZVRyYW5zcG9zZU1vZGVsRGlydHk9ITAsdGhpcy5faW52ZXJzZVRyYW5zcG9zZU1vZGVsPW5ldyB1LHRoaXMuX3ZpZXdSb3RhdGlvbj1uZXcgdSx0aGlzLl9pbnZlcnNlVmlld1JvdGF0aW9uPW5ldyB1LHRoaXMuX3ZpZXdSb3RhdGlvbjNEPW5ldyB1LHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb24zRD1uZXcgdSx0aGlzLl9pbnZlcnNlUHJvamVjdGlvbkRpcnR5PSEwLHRoaXMuX2ludmVyc2VQcm9qZWN0aW9uPW5ldyBjLHRoaXMuX2ludmVyc2VQcm9qZWN0aW9uT0lURGlydHk9ITAsdGhpcy5faW52ZXJzZVByb2plY3Rpb25PSVQ9bmV3IGMsdGhpcy5fbW9kZWxWaWV3RGlydHk9ITAsdGhpcy5fbW9kZWxWaWV3PW5ldyBjLHRoaXMuX21vZGVsVmlldzNERGlydHk9ITAsdGhpcy5fbW9kZWxWaWV3M0Q9bmV3IGMsdGhpcy5fbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZURpcnR5PSEwLHRoaXMuX21vZGVsVmlld1JlbGF0aXZlVG9FeWU9bmV3IGMsdGhpcy5faW52ZXJzZU1vZGVsVmlld0RpcnR5PSEwLHRoaXMuX2ludmVyc2VNb2RlbFZpZXc9bmV3IGMsdGhpcy5faW52ZXJzZU1vZGVsVmlldzNERGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsVmlldzNEPW5ldyBjLHRoaXMuX3ZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5fdmlld1Byb2plY3Rpb249bmV3IGMsdGhpcy5faW52ZXJzZVZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5faW52ZXJzZVZpZXdQcm9qZWN0aW9uPW5ldyBjLHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMCx0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uPW5ldyBjLHRoaXMuX2ludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb249bmV3IGMsdGhpcy5fbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWVEaXJ0eT0hMCx0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZT1uZXcgYyx0aGlzLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb25EaXJ0eT0hMCx0aGlzLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb249bmV3IGMsdGhpcy5fbm9ybWFsRGlydHk9ITAsdGhpcy5fbm9ybWFsPW5ldyB1LHRoaXMuX25vcm1hbDNERGlydHk9ITAsdGhpcy5fbm9ybWFsM0Q9bmV3IHUsdGhpcy5faW52ZXJzZU5vcm1hbERpcnR5PSEwLHRoaXMuX2ludmVyc2VOb3JtYWw9bmV3IHUsdGhpcy5faW52ZXJzZU5vcm1hbDNERGlydHk9ITAsdGhpcy5faW52ZXJzZU5vcm1hbDNEPW5ldyB1LHRoaXMuX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DRGlydHk9ITAsdGhpcy5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUM9bmV3IHMsdGhpcy5fY2FtZXJhUG9zaXRpb249bmV3IGksdGhpcy5fc3VuUG9zaXRpb25XQz1uZXcgaSx0aGlzLl9zdW5Qb3NpdGlvbkNvbHVtYnVzVmlldz1uZXcgaSx0aGlzLl9zdW5EaXJlY3Rpb25XQz1uZXcgaSx0aGlzLl9zdW5EaXJlY3Rpb25FQz1uZXcgaSx0aGlzLl9tb29uRGlyZWN0aW9uRUM9bmV3IGksdGhpcy5fbW9kZT12b2lkIDAsdGhpcy5fbWFwUHJvamVjdGlvbj12b2lkIDAsdGhpcy5fY2FtZXJhRGlyZWN0aW9uPW5ldyBpLHRoaXMuX2NhbWVyYVJpZ2h0PW5ldyBpLHRoaXMuX2NhbWVyYVVwPW5ldyBpLHRoaXMuX2ZydXN0dW0yRFdpZHRoPTAsdGhpcy5fZXllSGVpZ2h0MkQ9bmV3IHQsdGhpcy5fcmVzb2x1dGlvblNjYWxlPTF9O2Eoay5wcm90b3R5cGUse2ZyYW1lU3RhdGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFtZVN0YXRlfX0sdmlld3BvcnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3cG9ydH0sc2V0OmZ1bmN0aW9uKHQpe2lmKCFlLmVxdWFscyh0LHRoaXMuX3ZpZXdwb3J0KSl7ZS5jbG9uZSh0LHRoaXMuX3ZpZXdwb3J0KTt2YXIgaT10aGlzLl92aWV3cG9ydCxuPXRoaXMuX3ZpZXdwb3J0Q2FydGVzaWFuNDtuLng9aS54LG4ueT1pLnksbi56PWkud2lkdGgsbi53PWkuaGVpZ2h0LHRoaXMuX3ZpZXdwb3J0RGlydHk9ITB9fX0sdmlld3BvcnRDYXJ0ZXNpYW40OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld3BvcnRDYXJ0ZXNpYW40fX0sdmlld3BvcnRPcnRob2dyYXBoaWM6e2dldDpmdW5jdGlvbigpe3JldHVybiBDKHRoaXMpLHRoaXMuX3ZpZXdwb3J0T3J0aG9ncmFwaGljTWF0cml4fX0sdmlld3BvcnRUcmFuc2Zvcm1hdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEModGhpcyksdGhpcy5fdmlld3BvcnRUcmFuc2Zvcm1hdGlvbn19LG1vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZWx9LHNldDpmdW5jdGlvbihlKXtjLmNsb25lKGUsdGhpcy5fbW9kZWwpLHRoaXMuX21vZGVsVmlldzNERGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsVmlldzNERGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsRGlydHk9ITAsdGhpcy5faW52ZXJzZVRyYW5zcG9zZU1vZGVsRGlydHk9ITAsdGhpcy5fbW9kZWxWaWV3RGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsVmlld0RpcnR5PSEwLHRoaXMuX3ZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5faW52ZXJzZVZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5fbW9kZWxWaWV3UmVsYXRpdmVUb0V5ZURpcnR5PSEwLHRoaXMuX2ludmVyc2VNb2RlbFZpZXdEaXJ0eT0hMCx0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uRGlydHk9ITAsdGhpcy5faW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb25EaXJ0eT0hMCx0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9uUmVsYXRpdmVUb0V5ZURpcnR5PSEwLHRoaXMuX21vZGVsVmlld0luZmluaXRlUHJvamVjdGlvbkRpcnR5PSEwLHRoaXMuX25vcm1hbERpcnR5PSEwLHRoaXMuX2ludmVyc2VOb3JtYWxEaXJ0eT0hMCx0aGlzLl9ub3JtYWwzRERpcnR5PSEwLHRoaXMuX2ludmVyc2VOb3JtYWwzRERpcnR5PSEwLHRoaXMuX2VuY29kZWRDYW1lcmFQb3NpdGlvbk1DRGlydHk9ITB9fSxpbnZlcnNlTW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnZlcnNlTW9kZWxEaXJ0eSYmKHRoaXMuX2ludmVyc2VNb2RlbERpcnR5PSExLGMuaW52ZXJzZSh0aGlzLl9tb2RlbCx0aGlzLl9pbnZlcnNlTW9kZWwpKSx0aGlzLl9pbnZlcnNlTW9kZWx9fSxpbnZlcnNlVHJhbnBvc2VNb2RlbDp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5faW52ZXJzZVRyYW5zcG9zZU1vZGVsO3JldHVybiB0aGlzLl9pbnZlcnNlVHJhbnNwb3NlTW9kZWxEaXJ0eSYmKHRoaXMuX2ludmVyc2VUcmFuc3Bvc2VNb2RlbERpcnR5PSExLGMuZ2V0Um90YXRpb24odGhpcy5pbnZlcnNlTW9kZWwsZSksdS50cmFuc3Bvc2UoZSxlKSksZX19LHZpZXc6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3fX0sdmlldzNEOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlldzNERGlydHkmJih0aGlzLl9tb2RlPT09bS5TQ0VORTNEP2MuY2xvbmUodGhpcy5fdmlldyx0aGlzLl92aWV3M0QpOlYodGhpcy5fY2FtZXJhUG9zaXRpb24sdGhpcy5fY2FtZXJhRGlyZWN0aW9uLHRoaXMuX2NhbWVyYVJpZ2h0LHRoaXMuX2NhbWVyYVVwLHRoaXMuX2ZydXN0dW0yRFdpZHRoLHRoaXMuX21vZGUsdGhpcy5fbWFwUHJvamVjdGlvbix0aGlzLl92aWV3M0QpLGMuZ2V0Um90YXRpb24odGhpcy5fdmlldzNELHRoaXMuX3ZpZXdSb3RhdGlvbjNEKSx0aGlzLl92aWV3M0REaXJ0eT0hMSksdGhpcy5fdmlldzNEfX0sdmlld1JvdGF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld1JvdGF0aW9ufX0sdmlld1JvdGF0aW9uM0Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZpZXczRCx0aGlzLl92aWV3Um90YXRpb24zRH19LGludmVyc2VWaWV3OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW52ZXJzZVZpZXd9fSxpbnZlcnNlVmlldzNEOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW52ZXJzZVZpZXczRERpcnR5JiYoYy5pbnZlcnNlVHJhbnNmb3JtYXRpb24odGhpcy52aWV3M0QsdGhpcy5faW52ZXJzZVZpZXczRCksYy5nZXRSb3RhdGlvbih0aGlzLl9pbnZlcnNlVmlldzNELHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb24zRCksdGhpcy5faW52ZXJzZVZpZXczRERpcnR5PSExKSx0aGlzLl9pbnZlcnNlVmlldzNEfX0saW52ZXJzZVZpZXdSb3RhdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludmVyc2VWaWV3Um90YXRpb259fSxpbnZlcnNlVmlld1JvdGF0aW9uM0Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmludmVyc2VWaWV3M0QsdGhpcy5faW52ZXJzZVZpZXdSb3RhdGlvbjNEfX0scHJvamVjdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3Rpb259fSxpbnZlcnNlUHJvamVjdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHcodGhpcyksdGhpcy5faW52ZXJzZVByb2plY3Rpb259fSxpbnZlcnNlUHJvamVjdGlvbk9JVDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEUodGhpcyksdGhpcy5faW52ZXJzZVByb2plY3Rpb25PSVQKfX0saW5maW5pdGVQcm9qZWN0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5maW5pdGVQcm9qZWN0aW9ufX0sbW9kZWxWaWV3OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYih0aGlzKSx0aGlzLl9tb2RlbFZpZXd9fSxtb2RlbFZpZXczRDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFModGhpcyksdGhpcy5fbW9kZWxWaWV3M0R9fSxtb2RlbFZpZXdSZWxhdGl2ZVRvRXllOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gSSh0aGlzKSx0aGlzLl9tb2RlbFZpZXdSZWxhdGl2ZVRvRXllfX0saW52ZXJzZU1vZGVsVmlldzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFQodGhpcyksdGhpcy5faW52ZXJzZU1vZGVsVmlld319LGludmVyc2VNb2RlbFZpZXczRDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHgodGhpcyksdGhpcy5faW52ZXJzZU1vZGVsVmlldzNEfX0sdmlld1Byb2plY3Rpb246e2dldDpmdW5jdGlvbigpe3JldHVybiBBKHRoaXMpLHRoaXMuX3ZpZXdQcm9qZWN0aW9ufX0saW52ZXJzZVZpZXdQcm9qZWN0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUCh0aGlzKSx0aGlzLl9pbnZlcnNlVmlld1Byb2plY3Rpb259fSxtb2RlbFZpZXdQcm9qZWN0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTSh0aGlzKSx0aGlzLl9tb2RlbFZpZXdQcm9qZWN0aW9ufX0saW52ZXJzZU1vZGVsVmlld1Byb2plY3Rpb246e2dldDpmdW5jdGlvbigpe3JldHVybiBEKHRoaXMpLHRoaXMuX2ludmVyc2VNb2RlbFZpZXdQcm9qZWN0aW9ufX0sbW9kZWxWaWV3UHJvamVjdGlvblJlbGF0aXZlVG9FeWU6e2dldDpmdW5jdGlvbigpe3JldHVybiBPKHRoaXMpLHRoaXMuX21vZGVsVmlld1Byb2plY3Rpb25SZWxhdGl2ZVRvRXllfX0sbW9kZWxWaWV3SW5maW5pdGVQcm9qZWN0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUih0aGlzKSx0aGlzLl9tb2RlbFZpZXdJbmZpbml0ZVByb2plY3Rpb259fSxub3JtYWw6e2dldDpmdW5jdGlvbigpe3JldHVybiBMKHRoaXMpLHRoaXMuX25vcm1hbH19LG5vcm1hbDNEOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTih0aGlzKSx0aGlzLl9ub3JtYWwzRH19LGludmVyc2VOb3JtYWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB6KHRoaXMpLHRoaXMuX2ludmVyc2VOb3JtYWx9fSxpbnZlcnNlTm9ybWFsM0Q6e2dldDpmdW5jdGlvbigpe3JldHVybiBCKHRoaXMpLHRoaXMuX2ludmVyc2VOb3JtYWwzRH19LGVudGlyZUZydXN0dW06e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbnRpcmVGcnVzdHVtfX0sY3VycmVudEZydXN0dW06e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdXJyZW50RnJ1c3R1bX19LGV5ZUhlaWdodDJEOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXllSGVpZ2h0MkR9fSxzdW5Qb3NpdGlvbldDOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3VuUG9zaXRpb25XQ319LHN1blBvc2l0aW9uQ29sdW1idXNWaWV3OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXd9fSxzdW5EaXJlY3Rpb25XQzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N1bkRpcmVjdGlvbldDfX0sc3VuRGlyZWN0aW9uRUM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdW5EaXJlY3Rpb25FQ319LG1vb25EaXJlY3Rpb25FQzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vb25EaXJlY3Rpb25FQ319LGVuY29kZWRDYW1lcmFQb3NpdGlvbk1DSGlnaDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEYodGhpcyksdGhpcy5fZW5jb2RlZENhbWVyYVBvc2l0aW9uTUMuaGlnaH19LGVuY29kZWRDYW1lcmFQb3NpdGlvbk1DTG93OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gRih0aGlzKSx0aGlzLl9lbmNvZGVkQ2FtZXJhUG9zaXRpb25NQy5sb3d9fSx0ZW1lVG9Qc2V1ZG9GaXhlZE1hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RlbWVUb1BzZXVkb0ZpeGVkfX0scmVzb2x1dGlvblNjYWxlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVzb2x1dGlvblNjYWxlfX19KTt2YXIgVT1uZXcgdSxXPW5ldyByO2sucHJvdG90eXBlLnVwZGF0ZUZydXN0dW09ZnVuY3Rpb24oZSl7dih0aGlzLGUucHJvamVjdGlvbk1hdHJpeCksbyhlLmluZmluaXRlUHJvamVjdGlvbk1hdHJpeCkmJmcodGhpcyxlLmluZmluaXRlUHJvamVjdGlvbk1hdHJpeCksdGhpcy5fY3VycmVudEZydXN0dW0ueD1lLm5lYXIsdGhpcy5fY3VycmVudEZydXN0dW0ueT1lLmZhcn0say5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5fbW9kZT10Lm1vZGUsdGhpcy5fbWFwUHJvamVjdGlvbj10Lm1hcFByb2plY3Rpb247dmFyIGk9ZS5fY2FudmFzO3RoaXMuX3Jlc29sdXRpb25TY2FsZT1pLndpZHRoL2kuY2xpZW50V2lkdGg7dmFyIG49dC5jYW1lcmE7Zih0aGlzLG4udmlld01hdHJpeCkscCh0aGlzLG4uaW52ZXJzZVZpZXdNYXRyaXgpLF8odGhpcyxuKSx0Lm1vZGU9PT1tLlNDRU5FMkQ/KHRoaXMuX2ZydXN0dW0yRFdpZHRoPW4uZnJ1c3R1bS5yaWdodC1uLmZydXN0dW0ubGVmdCx0aGlzLl9leWVIZWlnaHQyRC54PS41KnRoaXMuX2ZydXN0dW0yRFdpZHRoLHRoaXMuX2V5ZUhlaWdodDJELnk9dGhpcy5fZXllSGVpZ2h0MkQueCp0aGlzLl9leWVIZWlnaHQyRC54KToodGhpcy5fZnJ1c3R1bTJEV2lkdGg9MCx0aGlzLl9leWVIZWlnaHQyRC54PTAsdGhpcy5fZXllSGVpZ2h0MkQueT0wKSx5KHRoaXMsdCksdGhpcy5fZW50aXJlRnJ1c3R1bS54PW4uZnJ1c3R1bS5uZWFyLHRoaXMuX2VudGlyZUZydXN0dW0ueT1uLmZydXN0dW0uZmFyLHRoaXMudXBkYXRlRnJ1c3R1bShuLmZydXN0dW0pLHRoaXMuX2ZyYW1lU3RhdGU9dCx0aGlzLl90ZW1lVG9Qc2V1ZG9GaXhlZD1oLmNvbXB1dGVUZW1lVG9Qc2V1ZG9GaXhlZE1hdHJpeCh0LnRpbWUsdGhpcy5fdGVtZVRvUHNldWRvRml4ZWQpfTt2YXIgRz1uZXcgaSxIPW5ldyBpLHE9bmV3IGksaj1uZXcgaSxZPW5ldyBpLFg9bmV3IHIsWj1uZXcgaSxKPW5ldyBjO3JldHVybiBrfSksZGVmaW5lKCJSZW5kZXJlci9WZXJ0ZXhBcnJheSIsWyIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSx0LGksbixyLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBhKG4scixvKXt2YXIgYT1pKHIudmVydGV4QnVmZmVyKSxzPWkoci52YWx1ZSksbD1yLnZhbHVlP3IudmFsdWUubGVuZ3RoOnIuY29tcG9uZW50c1BlckF0dHJpYnV0ZSx1PXtpbmRleDp0KHIuaW5kZXgsbyksZW5hYmxlZDp0KHIuZW5hYmxlZCwhMCksdmVydGV4QnVmZmVyOnIudmVydGV4QnVmZmVyLHZhbHVlOnM/ci52YWx1ZS5zbGljZSgwKTp2b2lkIDAsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpsLGNvbXBvbmVudERhdGF0eXBlOnQoci5jb21wb25lbnREYXRhdHlwZSxlLkZMT0FUKSxub3JtYWxpemU6dChyLm5vcm1hbGl6ZSwhMSksb2Zmc2V0SW5CeXRlczp0KHIub2Zmc2V0SW5CeXRlcywwKSxzdHJpZGVJbkJ5dGVzOnQoci5zdHJpZGVJbkJ5dGVzLDApfTtpZihhKXUudmVydGV4QXR0cmliPWZ1bmN0aW9uKGUpe2UuYmluZEJ1ZmZlcihlLkFSUkFZX0JVRkZFUix0aGlzLnZlcnRleEJ1ZmZlci5fZ2V0QnVmZmVyKCkpLGUudmVydGV4QXR0cmliUG9pbnRlcih0aGlzLmluZGV4LHRoaXMuY29tcG9uZW50c1BlckF0dHJpYnV0ZSx0aGlzLmNvbXBvbmVudERhdGF0eXBlLHRoaXMubm9ybWFsaXplLHRoaXMuc3RyaWRlSW5CeXRlcyx0aGlzLm9mZnNldEluQnl0ZXMpLGUuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGhpcy5pbmRleCl9LHUuZGlzYWJsZVZlcnRleEF0dHJpYkFycmF5PWZ1bmN0aW9uKGUpe2UuZGlzYWJsZVZlcnRleEF0dHJpYkFycmF5KHRoaXMuaW5kZXgpfTtlbHNle3N3aXRjaCh1LmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUpe2Nhc2UgMTp1LnZlcnRleEF0dHJpYj1mdW5jdGlvbihlKXtlLnZlcnRleEF0dHJpYjFmdih0aGlzLmluZGV4LHRoaXMudmFsdWUpfTticmVhaztjYXNlIDI6dS52ZXJ0ZXhBdHRyaWI9ZnVuY3Rpb24oZSl7ZS52ZXJ0ZXhBdHRyaWIyZnYodGhpcy5pbmRleCx0aGlzLnZhbHVlKX07YnJlYWs7Y2FzZSAzOnUudmVydGV4QXR0cmliPWZ1bmN0aW9uKGUpe2UudmVydGV4QXR0cmliM2Z2KHRoaXMuaW5kZXgsdGhpcy52YWx1ZSl9O2JyZWFrO2Nhc2UgNDp1LnZlcnRleEF0dHJpYj1mdW5jdGlvbihlKXtlLnZlcnRleEF0dHJpYjRmdih0aGlzLmluZGV4LHRoaXMudmFsdWUpfX11LmRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheT1mdW5jdGlvbigpe319bi5wdXNoKHUpfWZ1bmN0aW9uIHMoZSx0LG4pe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7KytyKXt2YXIgbz10W3JdO28uZW5hYmxlZCYmby52ZXJ0ZXhBdHRyaWIoZSl9aShuKSYmZS5iaW5kQnVmZmVyKGUuRUxFTUVOVF9BUlJBWV9CVUZGRVIsbi5fZ2V0QnVmZmVyKCkpfXZhciBsPWZ1bmN0aW9uKHQsbixyLGwpe2lmKCFpKHIpKXRocm93IG5ldyBvKCJhdHRyaWJ1dGVzIGlzIHJlcXVpcmVkLiIpO3ZhciB1LGM9W10sZD0xO2Zvcih1PTA7dTxyLmxlbmd0aDsrK3UpYShjLHJbdV0sdSk7Zm9yKHU9MDt1PGMubGVuZ3RoOysrdSl7dmFyIGg9Y1t1XTtpZihpKGgudmVydGV4QnVmZmVyKSl7dmFyIG09aC5zdHJpZGVJbkJ5dGVzfHxoLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUqZS5nZXRTaXplSW5CeXRlcyhoLmNvbXBvbmVudERhdGF0eXBlKTtkPWgudmVydGV4QnVmZmVyLnNpemVJbkJ5dGVzL207YnJlYWt9fWZvcih2YXIgZj17fSxwPTA7cDxjLmxlbmd0aDsrK3Ape3ZhciB2PWNbcF0uaW5kZXg7aWYoZlt2XSl0aHJvdyBuZXcgbygiSW5kZXggIit2KyIgaXMgdXNlZCBieSBtb3JlIHRoYW4gb25lIGF0dHJpYnV0ZS4iKTtmW3ZdPSEwfXZhciBnO2kobikmJihnPW4uY3JlYXRlVmVydGV4QXJyYXlPRVMoKSxuLmJpbmRWZXJ0ZXhBcnJheU9FUyhnKSxzKHQsYyxsKSxuLmJpbmRWZXJ0ZXhBcnJheU9FUyhudWxsKSksdGhpcy5fbnVtYmVyT2ZWZXJ0aWNlcz1kLHRoaXMuX2dsPXQsdGhpcy5fdmFvRXh0ZW5zaW9uPW4sdGhpcy5fdmFvPWcsdGhpcy5fYXR0cmlidXRlcz1jLHRoaXMuX2luZGV4QnVmZmVyPWx9O3JldHVybiBuKGwucHJvdG90eXBlLHtudW1iZXJPZkF0dHJpYnV0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzLmxlbmd0aH19LG51bWJlck9mVmVydGljZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9udW1iZXJPZlZlcnRpY2VzfX0saW5kZXhCdWZmZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbmRleEJ1ZmZlcn19fSksbC5wcm90b3R5cGUuZ2V0QXR0cmlidXRlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9hdHRyaWJ1dGVzW2VdfSxsLnByb3RvdHlwZS5fYmluZD1mdW5jdGlvbigpe2kodGhpcy5fdmFvKT90aGlzLl92YW9FeHRlbnNpb24uYmluZFZlcnRleEFycmF5T0VTKHRoaXMuX3Zhbyk6cyh0aGlzLl9nbCx0aGlzLl9hdHRyaWJ1dGVzLHRoaXMuX2luZGV4QnVmZmVyKX0sbC5wcm90b3R5cGUuX3VuQmluZD1mdW5jdGlvbigpe2lmKGkodGhpcy5fdmFvKSl0aGlzLl92YW9FeHRlbnNpb24uYmluZFZlcnRleEFycmF5T0VTKG51bGwpO2Vsc2V7Zm9yKHZhciBlPXRoaXMuX2F0dHJpYnV0ZXMsdD10aGlzLl9nbCxuPTA7bjxlLmxlbmd0aDsrK24pe3ZhciByPWVbbl07ci5lbmFibGVkJiZyLmRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheSh0KX10aGlzLl9pbmRleEJ1ZmZlciYmdC5iaW5kQnVmZmVyKHQuRUxFTUVOVF9BUlJBWV9CVUZGRVIsbnVsbCl9fSxsLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxsLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMuX2F0dHJpYnV0ZXMsdD0wO3Q8ZS5sZW5ndGg7Kyt0KXt2YXIgbj1lW3RdLnZlcnRleEJ1ZmZlcjtpKG4pJiYhbi5pc0Rlc3Ryb3llZCgpJiZuLnZlcnRleEFycmF5RGVzdHJveWFibGUmJm4uZGVzdHJveSgpfXZhciBvPXRoaXMuX2luZGV4QnVmZmVyO3JldHVybiBpKG8pJiYhby5pc0Rlc3Ryb3llZCgpJiZvLnZlcnRleEFycmF5RGVzdHJveWFibGUmJm8uZGVzdHJveSgpLGkodGhpcy5fdmFvKSYmdGhpcy5fdmFvRXh0ZW5zaW9uLmRlbGV0ZVZlcnRleEFycmF5T0VTKHRoaXMuX3Zhbykscih0aGlzKX0sbH0pLGRlZmluZSgiUmVuZGVyZXIvQ29udGV4dCIsWyIuLi9Db3JlL2Nsb25lIiwiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvQ29tcG9uZW50RGF0YXR5cGUiLCIuLi9Db3JlL2NyZWF0ZUd1aWQiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0dlb21ldHJ5IiwiLi4vQ29yZS9HZW9tZXRyeUF0dHJpYnV0ZSIsIi4uL0NvcmUvSW5kZXhEYXRhdHlwZSIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvUGl4ZWxGb3JtYXQiLCIuLi9Db3JlL1ByaW1pdGl2ZVR5cGUiLCIuLi9Db3JlL1J1bnRpbWVFcnJvciIsIi4uL1NoYWRlcnMvVmlld3BvcnRRdWFkVlMiLCIuL0J1ZmZlciIsIi4vQnVmZmVyVXNhZ2UiLCIuL0NsZWFyQ29tbWFuZCIsIi4vQ3ViZU1hcCIsIi4vRHJhd0NvbW1hbmQiLCIuL0ZyYW1lYnVmZmVyIiwiLi9QYXNzU3RhdGUiLCIuL1BpY2tGcmFtZWJ1ZmZlciIsIi4vUGl4ZWxEYXRhdHlwZSIsIi4vUmVuZGVyYnVmZmVyIiwiLi9SZW5kZXJidWZmZXJGb3JtYXQiLCIuL1JlbmRlclN0YXRlIiwiLi9TaGFkZXJDYWNoZSIsIi4vVGV4dHVyZSIsIi4vVGV4dHVyZU1hZ25pZmljYXRpb25GaWx0ZXIiLCIuL1RleHR1cmVNaW5pZmljYXRpb25GaWx0ZXIiLCIuL1RleHR1cmVXcmFwIiwiLi9Vbmlmb3JtU3RhdGUiLCIuL1ZlcnRleEFycmF5Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxULHgsQSxQLE0sSSxELE8sUixMLE4seil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIEIoZSx0KXt2YXIgaT0iV2ViR0wgRXJyb3I6ICAiO3N3aXRjaCh0KXtjYXNlIGUuSU5WQUxJRF9FTlVNOmkrPSJJTlZBTElEX0VOVU0iO2JyZWFrO2Nhc2UgZS5JTlZBTElEX1ZBTFVFOmkrPSJJTlZBTElEX1ZBTFVFIjticmVhaztjYXNlIGUuSU5WQUxJRF9PUEVSQVRJT046aSs9IklOVkFMSURfT1BFUkFUSU9OIjticmVhaztjYXNlIGUuT1VUX09GX01FTU9SWTppKz0iT1VUX09GX01FTU9SWSI7YnJlYWs7Y2FzZSBlLkNPTlRFWFRfTE9TVF9XRUJHTDppKz0iQ09OVEVYVF9MT1NUX1dFQkdMIGxvc3QiO2JyZWFrO2RlZmF1bHQ6aSs9IlVua25vd24gKCIrdCsiKSJ9cmV0dXJuIGl9ZnVuY3Rpb24gRihlLHQsaSxuKXtmb3IodmFyIHI9QihlLG4pKyI6ICIrdC5uYW1lKyIoIixvPTA7bzxpLmxlbmd0aDsrK28pMCE9PW8mJihyKz0iLCAiKSxyKz1pW29dO3JldHVybiByKz0iKTsifWZ1bmN0aW9uIFYoZSx0LGkpe3ZhciBuPWUuZ2V0RXJyb3IoKTtpZihuIT09ZS5OT19FUlJPUil0aHJvdyBuZXcgdihGKGUsdCxpLG4pKX1mdW5jdGlvbiBrKGUsdCxpKXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7dmFyIG49ZVt0XTtyZXR1cm4gaShlLCJnZXQ6ICIrdCxuKSxlW3RdfSxzZXQ6ZnVuY3Rpb24obil7ZVt0XT1uLGkoZSwic2V0OiAiK3Qsbil9fX1mdW5jdGlvbiBVKGUsdCl7ZnVuY3Rpb24gaShpKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1pLmFwcGx5KGUsYXJndW1lbnRzKTtyZXR1cm4gdChlLGksYXJndW1lbnRzKSxufX1pZighdClyZXR1cm4gZTt2YXIgbj17fTtmb3IodmFyIHIgaW4gZSl7dmFyIG89ZVtyXTsiZnVuY3Rpb24iPT10eXBlb2Ygbz9uW3JdPWkobyk6T2JqZWN0LmRlZmluZVByb3BlcnR5KG4scixrKGUscix0KSl9cmV0dXJuIG59ZnVuY3Rpb24gVyhlLHQpe2Zvcih2YXIgaT10Lmxlbmd0aCxuPTA7aT5uOysrbil7dmFyIHI9ZS5nZXRFeHRlbnNpb24odFtuXSk7aWYocilyZXR1cm4gcn1yZXR1cm4gdm9pZCAwfWZ1bmN0aW9uIEcoZSx0LGksbil7dmFyIHI7Im51bWJlciI9PXR5cGVvZiBpP3I9aToib2JqZWN0Ij09dHlwZW9mIGkmJiJudW1iZXIiPT10eXBlb2YgaS5ieXRlTGVuZ3RoJiYocj1pLmJ5dGVMZW5ndGgpO3ZhciBvPWUuY3JlYXRlQnVmZmVyKCk7cmV0dXJuIGUuYmluZEJ1ZmZlcih0LG8pLGUuYnVmZmVyRGF0YSh0LGksbiksZS5iaW5kQnVmZmVyKHQsbnVsbCksbmV3IF8oZSx0LHIsbixvKX1mdW5jdGlvbiBIKGUpe2lmKGUudmFsaWRhdGVGcmFtZWJ1ZmZlcil7dmFyIHQ9ZS5fZ2wsaT10LmNoZWNrRnJhbWVidWZmZXJTdGF0dXModC5GUkFNRUJVRkZFUik7aWYoaSE9PXQuRlJBTUVCVUZGRVJfQ09NUExFVEUpe3ZhciBuO3N3aXRjaChpKXtjYXNlIHQuRlJBTUVCVUZGRVJfSU5DT01QTEVURV9BVFRBQ0hNRU5UOm49IkZyYW1lYnVmZmVyIGlzIG5vdCBjb21wbGV0ZS4gIEluY29tcGxldGUgYXR0YWNobWVudDogYXQgbGVhc3Qgb25lIGF0dGFjaG1lbnQgcG9pbnQgd2l0aCBhIHJlbmRlcmJ1ZmZlciBvciB0ZXh0dXJlIGF0dGFjaGVkIGhhcyBpdHMgYXR0YWNoZWQgb2JqZWN0IG5vIGxvbmdlciBpbiBleGlzdGVuY2Ugb3IgaGFzIGFuIGF0dGFjaGVkIGltYWdlIHdpdGggYSB3aWR0aCBvciBoZWlnaHQgb2YgemVybywgb3IgdGhlIGNvbG9yIGF0dGFjaG1lbnQgcG9pbnQgaGFzIGEgbm9uLWNvbG9yLXJlbmRlcmFibGUgaW1hZ2UgYXR0YWNoZWQsIG9yIHRoZSBkZXB0aCBhdHRhY2htZW50IHBvaW50IGhhcyBhIG5vbi1kZXB0aC1yZW5kZXJhYmxlIGltYWdlIGF0dGFjaGVkLCBvciB0aGUgc3RlbmNpbCBhdHRhY2htZW50IHBvaW50IGhhcyBhIG5vbi1zdGVuY2lsLXJlbmRlcmFibGUgaW1hZ2UgYXR0YWNoZWQuICBDb2xvci1yZW5kZXJhYmxlIGZvcm1hdHMgaW5jbHVkZSBHTF9SR0JBNCwgR0xfUkdCNV9BMSwgYW5kIEdMX1JHQjU2NS4gR0xfREVQVEhfQ09NUE9ORU5UMTYgaXMgdGhlIG9ubHkgZGVwdGgtcmVuZGVyYWJsZSBmb3JtYXQuIEdMX1NURU5DSUxfSU5ERVg4IGlzIHRoZSBvbmx5IHN0ZW5jaWwtcmVuZGVyYWJsZSBmb3JtYXQuIjticmVhaztjYXNlIHQuRlJBTUVCVUZGRVJfSU5DT01QTEVURV9ESU1FTlNJT05TOm49IkZyYW1lYnVmZmVyIGlzIG5vdCBjb21wbGV0ZS4gIEluY29tcGxldGUgZGltZW5zaW9uczogbm90IGFsbCBhdHRhY2hlZCBpbWFnZXMgaGF2ZSB0aGUgc2FtZSB3aWR0aCBhbmQgaGVpZ2h0LiI7YnJlYWs7Y2FzZSB0LkZSQU1FQlVGRkVSX0lOQ09NUExFVEVfTUlTU0lOR19BVFRBQ0hNRU5UOm49IkZyYW1lYnVmZmVyIGlzIG5vdCBjb21wbGV0ZS4gIE1pc3NpbmcgYXR0YWNobWVudDogbm8gaW1hZ2VzIGFyZSBhdHRhY2hlZCB0byB0aGUgZnJhbWVidWZmZXIuIjticmVhaztjYXNlIHQuRlJBTUVCVUZGRVJfVU5TVVBQT1JURUQ6bj0iRnJhbWVidWZmZXIgaXMgbm90IGNvbXBsZXRlLiAgVW5zdXBwb3J0ZWQ6IHRoZSBjb21iaW5hdGlvbiBvZiBpbnRlcm5hbCBmb3JtYXRzIG9mIHRoZSBhdHRhY2hlZCBpbWFnZXMgdmlvbGF0ZXMgYW4gaW1wbGVtZW50YXRpb24tZGVwZW5kZW50IHNldCBvZiByZXN0cmljdGlvbnMuIn10aHJvdyBuZXcgbChuKX19fWZ1bmN0aW9uIHEoZSx0LGkpe3ZhciBuPWUuX2N1cnJlbnRSZW5kZXJTdGF0ZTtuIT09dCYmKGUuX2N1cnJlbnRSZW5kZXJTdGF0ZT10LE0ucGFydGlhbEFwcGx5KGUuX2dsLG4sdCxpKSl9ZnVuY3Rpb24gaihlLHQpe2lmKHQhPT1lLl9jdXJyZW50RnJhbWVidWZmZXIpe2UuX2N1cnJlbnRGcmFtZWJ1ZmZlcj10O3ZhciBpPW50O2lmKG8odCkpdC5fYmluZCgpLEgoZSx0KSxpPXQuX2dldEFjdGl2ZUNvbG9yQXR0YWNobWVudHMoKTtlbHNle3ZhciBuPWUuX2dsO24uYmluZEZyYW1lYnVmZmVyKG4uRlJBTUVCVUZGRVIsbnVsbCl9ZS5kcmF3QnVmZmVycyYmZS5fZHJhd0J1ZmZlcnMuZHJhd0J1ZmZlcnNXRUJHTChpKX19ZnVuY3Rpb24gWShlLHQsaSxuLG8sYSl7dmFyIHM9cihyKG8saS5yZW5kZXJTdGF0ZSksZS5fZGVmYXVsdFJlbmRlclN0YXRlKTtqKGUsdCk7dmFyIGw9cihhLGkuc2hhZGVyUHJvZ3JhbSk7bC5fYmluZCgpLGUuX21heEZyYW1lVGV4dHVyZVVuaXRJbmRleD1NYXRoLm1heChlLl9tYXhGcmFtZVRleHR1cmVVbml0SW5kZXgsbC5tYXhpbXVtVGV4dHVyZVVuaXRJbmRleCkscShlLHMsbil9ZnVuY3Rpb24gWChlLHQsaSl7dmFyIG49dC5wcmltaXRpdmVUeXBlLGE9dC52ZXJ0ZXhBcnJheSxzPXQub2Zmc2V0LGw9dC5jb3VudDtlLl91cy5tb2RlbD1yKHQubW9kZWxNYXRyaXgsbS5JREVOVElUWSk7dmFyIHU9cihpLHQuc2hhZGVyUHJvZ3JhbSk7dS5fc2V0VW5pZm9ybXModC51bmlmb3JtTWFwLGUuX3VzLGUudmFsaWRhdGVTaGFkZXJQcm9ncmFtKTt2YXIgYz1hLmluZGV4QnVmZmVyO28oYyk/KHMqPWMuYnl0ZXNQZXJJbmRleCxsPXIobCxjLm51bWJlck9mSW5kaWNlcyksYS5fYmluZCgpLGUuX2dsLmRyYXdFbGVtZW50cyhuLGwsYy5pbmRleERhdGF0eXBlLHMpLGEuX3VuQmluZCgpKToobD1yKGwsYS5udW1iZXJPZlZlcnRpY2VzKSxhLl9iaW5kKCksZS5fZ2wuZHJhd0FycmF5cyhuLHMsbCksYS5fdW5CaW5kKCkpfWZ1bmN0aW9uIFooZSl7cmV0dXJuIGUudmFsdWVzLmxlbmd0aC9lLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGV9ZnVuY3Rpb24gSihlKXtyZXR1cm4gaS5nZXRTaXplSW5CeXRlcyhlLmNvbXBvbmVudERhdGF0eXBlKSplLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGV9ZnVuY3Rpb24gSyhlKXt2YXIgdCxuLHIsYT1bXTtmb3IobiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJm8oZVtuXSkmJm8oZVtuXS52YWx1ZXMpJiYoYS5wdXNoKG4pLGVbbl0uY29tcG9uZW50RGF0YXR5cGU9PT1pLkRPVUJMRSYmKGVbbl0uY29tcG9uZW50RGF0YXR5cGU9aS5GTE9BVCxlW25dLnZhbHVlcz1pLmNyZWF0ZVR5cGVkQXJyYXkoaS5GTE9BVCxlW25dLnZhbHVlcykpKTt2YXIgcyxsPWEubGVuZ3RoO2lmKGw+MClmb3Iocz1aKGVbYVswXV0pLHQ9MTtsPnQ7Kyt0KXt2YXIgdT1aKGVbYVt0XV0pO2lmKHUhPT1zKXRocm93IG5ldyB2KCJFYWNoIGF0dHJpYnV0ZSBsaXN0IG11c3QgaGF2ZSB0aGUgc2FtZSBudW1iZXIgb2YgdmVydGljZXMuICBBdHRyaWJ1dGUgIithW3RdKyIgaGFzIGEgZGlmZmVyZW50IG51bWJlciBvZiB2ZXJ0aWNlcyAiKyIoIit1LnRvU3RyaW5nKCkrIikiKyIgdGhhbiBhdHRyaWJ1dGUgIithWzBdKyIgKCIrcy50b1N0cmluZygpKyIpLiIpfWEuc29ydChmdW5jdGlvbih0LG4pe3JldHVybiBpLmdldFNpemVJbkJ5dGVzKGVbbl0uY29tcG9uZW50RGF0YXR5cGUpLWkuZ2V0U2l6ZUluQnl0ZXMoZVt0XS5jb21wb25lbnREYXRhdHlwZSl9KTt2YXIgYz0wLGQ9e307Zm9yKHQ9MDtsPnQ7Kyt0KW49YVt0XSxyPWVbbl0sZFtuXT1jLGMrPUoocik7aWYoYz4wKXt2YXIgaD1pLmdldFNpemVJbkJ5dGVzKGVbYVswXV0uY29tcG9uZW50RGF0YXR5cGUpLG09YyVoOzAhPT1tJiYoYys9aC1tKTt2YXIgZj1zKmMscD1uZXcgQXJyYXlCdWZmZXIoZiksZz17fTtmb3IodD0wO2w+dDsrK3Qpe249YVt0XTt2YXIgXz1pLmdldFNpemVJbkJ5dGVzKGVbbl0uY29tcG9uZW50RGF0YXR5cGUpO2dbbl09e3BvaW50ZXI6aS5jcmVhdGVUeXBlZEFycmF5KGVbbl0uY29tcG9uZW50RGF0YXR5cGUscCksaW5kZXg6ZFtuXS9fLHN0cmlkZUluQ29tcG9uZW50VHlwZTpjL199fWZvcih0PTA7cz50OysrdClmb3IodmFyIHk9MDtsPnk7Kyt5KXtuPWFbeV0scj1lW25dO2Zvcih2YXIgQz1yLnZhbHVlcyx3PWdbbl0sRT13LnBvaW50ZXIsYj1yLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsUz0wO2I+UzsrK1MpRVt3LmluZGV4K1NdPUNbdCpiK1NdO3cuaW5kZXgrPXcuc3RyaWRlSW5Db21wb25lbnRUeXBlfXJldHVybntidWZmZXI6cCxvZmZzZXRzSW5CeXRlczpkLHZlcnRleFNpemVJbkJ5dGVzOmN9fXJldHVybiB2b2lkIDB9ZnVuY3Rpb24gUShlLHQsaSl7dGhpcy5fcGlja09iamVjdHM9ZSx0aGlzLmtleT10LHRoaXMuY29sb3I9aX12YXIgJD1mdW5jdGlvbihpLGEpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgV2ViR0xSZW5kZXJpbmdDb250ZXh0KXRocm93IG5ldyB2KCJUaGUgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IFdlYkdMLiAgVmlzaXQgaHR0cDovL2dldC53ZWJnbC5vcmcuIik7dGhpcy5fY2FudmFzPWksYT1lKGEsITApLGE9cihhLHt9KSxhLmFsbG93VGV4dHVyZUZpbHRlckFuaXNvdHJvcGljPXIoYS5hbGxvd1RleHR1cmVGaWx0ZXJBbmlzb3Ryb3BpYywhMCk7dmFyIHM9cihhLndlYmdsLHt9KTtpZihzLmFscGhhPXIocy5hbHBoYSwhMSkscy5zdGVuY2lsPXIocy5zdGVuY2lsLCExKSxzLmZhaWxJZk1ham9yUGVyZm9ybWFuY2VDYXZlYXQ9cihzLmZhaWxJZk1ham9yUGVyZm9ybWFuY2VDYXZlYXQsITApLHRoaXMuX29yaWdpbmFsR0xDb250ZXh0PWkuZ2V0Q29udGV4dCgid2ViZ2wiLHMpfHxpLmdldENvbnRleHQoImV4cGVyaW1lbnRhbC13ZWJnbCIscyl8fHZvaWQgMCwhbyh0aGlzLl9vcmlnaW5hbEdMQ29udGV4dCkpdGhyb3cgbmV3IHYoIlRoZSBicm93c2VyIHN1cHBvcnRzIFdlYkdMLCBidXQgaW5pdGlhbGl6YXRpb24gZmFpbGVkLiIpO3RoaXMuX2lkPW4oKSx0aGlzLnZhbGlkYXRlRnJhbWVidWZmZXI9ITEsdGhpcy52YWxpZGF0ZVNoYWRlclByb2dyYW09ITEsdGhpcy5sb2dTaGFkZXJDb21waWxhdGlvbj0hMSx0aGlzLl90aHJvd09uV2ViR0xFcnJvcj0hMSx0aGlzLl9zaGFkZXJDYWNoZT1uZXcgSSh0aGlzKTt2YXIgbD10aGlzLl9nbD10aGlzLl9vcmlnaW5hbEdMQ29udGV4dDt0aGlzLl92ZXJzaW9uPWwuZ2V0UGFyYW1ldGVyKGwuVkVSU0lPTiksdGhpcy5fc2hhZGluZ0xhbmd1YWdlVmVyc2lvbj1sLmdldFBhcmFtZXRlcihsLlNIQURJTkdfTEFOR1VBR0VfVkVSU0lPTiksdGhpcy5fdmVuZG9yPWwuZ2V0UGFyYW1ldGVyKGwuVkVORE9SKSx0aGlzLl9yZW5kZXJlcj1sLmdldFBhcmFtZXRlcihsLlJFTkRFUkVSKSx0aGlzLl9yZWRCaXRzPWwuZ2V0UGFyYW1ldGVyKGwuUkVEX0JJVFMpLHRoaXMuX2dyZWVuQml0cz1sLmdldFBhcmFtZXRlcihsLkdSRUVOX0JJVFMpLHRoaXMuX2JsdWVCaXRzPWwuZ2V0UGFyYW1ldGVyKGwuQkxVRV9CSVRTKSx0aGlzLl9hbHBoYUJpdHM9bC5nZXRQYXJhbWV0ZXIobC5BTFBIQV9CSVRTKSx0aGlzLl9kZXB0aEJpdHM9bC5nZXRQYXJhbWV0ZXIobC5ERVBUSF9CSVRTKSx0aGlzLl9zdGVuY2lsQml0cz1sLmdldFBhcmFtZXRlcihsLlNURU5DSUxfQklUUyksdGhpcy5fbWF4aW11bUNvbWJpbmVkVGV4dHVyZUltYWdlVW5pdHM9bC5nZXRQYXJhbWV0ZXIobC5NQVhfQ09NQklORURfVEVYVFVSRV9JTUFHRV9VTklUUyksdGhpcy5fbWF4aW11bUN1YmVNYXBTaXplPWwuZ2V0UGFyYW1ldGVyKGwuTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRSksdGhpcy5fbWF4aW11bUZyYWdtZW50VW5pZm9ybVZlY3RvcnM9bC5nZXRQYXJhbWV0ZXIobC5NQVhfRlJBR01FTlRfVU5JRk9STV9WRUNUT1JTKSx0aGlzLl9tYXhpbXVtVGV4dHVyZUltYWdlVW5pdHM9bC5nZXRQYXJhbWV0ZXIobC5NQVhfVEVYVFVSRV9JTUFHRV9VTklUUyksdGhpcy5fbWF4aW11bVJlbmRlcmJ1ZmZlclNpemU9bC5nZXRQYXJhbWV0ZXIobC5NQVhfUkVOREVSQlVGRkVSX1NJWkUpLHRoaXMuX21heGltdW1UZXh0dXJlU2l6ZT1sLmdldFBhcmFtZXRlcihsLk1BWF9URVhUVVJFX1NJWkUpLHRoaXMuX21heGltdW1WYXJ5aW5nVmVjdG9ycz1sLmdldFBhcmFtZXRlcihsLk1BWF9WQVJZSU5HX1ZFQ1RPUlMpLHRoaXMuX21heGltdW1WZXJ0ZXhBdHRyaWJ1dGVzPWwuZ2V0UGFyYW1ldGVyKGwuTUFYX1ZFUlRFWF9BVFRSSUJTKSx0aGlzLl9tYXhpbXVtVmVydGV4VGV4dHVyZUltYWdlVW5pdHM9bC5nZXRQYXJhbWV0ZXIobC5NQVhfVkVSVEVYX1RFWFRVUkVfSU1BR0VfVU5JVFMpLHRoaXMuX21heGltdW1WZXJ0ZXhVbmlmb3JtVmVjdG9ycz1sLmdldFBhcmFtZXRlcihsLk1BWF9WRVJURVhfVU5JRk9STV9WRUNUT1JTKSx0aGlzLl9hbGlhc2VkTGluZVdpZHRoUmFuZ2U9bC5nZXRQYXJhbWV0ZXIobC5BTElBU0VEX0xJTkVfV0lEVEhfUkFOR0UpLHRoaXMuX2FsaWFzZWRQb2ludFNpemVSYW5nZT1sLmdldFBhcmFtZXRlcihsLkFMSUFTRURfUE9JTlRfU0laRV9SQU5HRSksdGhpcy5fbWF4aW11bVZpZXdwb3J0RGltZW5zaW9ucz1sLmdldFBhcmFtZXRlcihsLk1BWF9WSUVXUE9SVF9ESU1TKSx0aGlzLl9hbnRpYWxpYXM9bC5nZXRDb250ZXh0QXR0cmlidXRlcygpLmFudGlhbGlhcyx0aGlzLl9zdGFuZGFyZERlcml2YXRpdmVzPVcobCxbIk9FU19zdGFuZGFyZF9kZXJpdmF0aXZlcyJdKSx0aGlzLl9lbGVtZW50SW5kZXhVaW50PVcobCxbIk9FU19lbGVtZW50X2luZGV4X3VpbnQiXSksdGhpcy5fZGVwdGhUZXh0dXJlPVcobCxbIldFQkdMX2RlcHRoX3RleHR1cmUiLCJXRUJLSVRfV0VCR0xfZGVwdGhfdGV4dHVyZSJdKSx0aGlzLl90ZXh0dXJlRmxvYXQ9VyhsLFsiT0VTX3RleHR1cmVfZmxvYXQiXSk7dmFyIHU9YS5hbGxvd1RleHR1cmVGaWx0ZXJBbmlzb3Ryb3BpYz9XKGwsWyJFWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWMiLCJXRUJLSVRfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljIl0pOnZvaWQgMDt0aGlzLl90ZXh0dXJlRmlsdGVyQW5pc290cm9waWM9dSx0aGlzLl9tYXhpbXVtVGV4dHVyZUZpbHRlckFuaXNvdHJvcHk9byh1KT9sLmdldFBhcmFtZXRlcih1Lk1BWF9URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCk6MSx0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdD1XKGwsWyJPRVNfdmVydGV4X2FycmF5X29iamVjdCJdKSx0aGlzLl9mcmFnRGVwdGg9VyhsLFsiRVhUX2ZyYWdfZGVwdGgiXSksdGhpcy5fZHJhd0J1ZmZlcnM9VyhsLFsiV0VCR0xfZHJhd19idWZmZXJzIl0pLHRoaXMuX21heGltdW1EcmF3QnVmZmVycz1vKHRoaXMuX2RyYXdCdWZmZXJzKT9sLmdldFBhcmFtZXRlcih0aGlzLl9kcmF3QnVmZmVycy5NQVhfRFJBV19CVUZGRVJTX1dFQkdMKToxLHRoaXMuX21heGltdW1Db2xvckF0dGFjaG1lbnRzPW8odGhpcy5fZHJhd0J1ZmZlcnMpP2wuZ2V0UGFyYW1ldGVyKHRoaXMuX2RyYXdCdWZmZXJzLk1BWF9DT0xPUl9BVFRBQ0hNRU5UU19XRUJHTCk6MTt2YXIgYz1sLmdldFBhcmFtZXRlcihsLkNPTE9SX0NMRUFSX1ZBTFVFKTt0aGlzLl9jbGVhckNvbG9yPW5ldyB0KGNbMF0sY1sxXSxjWzJdLGNbM10pLHRoaXMuX2NsZWFyRGVwdGg9bC5nZXRQYXJhbWV0ZXIobC5ERVBUSF9DTEVBUl9WQUxVRSksdGhpcy5fY2xlYXJTdGVuY2lsPWwuZ2V0UGFyYW1ldGVyKGwuU1RFTkNJTF9DTEVBUl9WQUxVRSk7dmFyIGQ9bmV3IE4saD1uZXcgUyh0aGlzKSxtPXRoaXMuY3JlYXRlUmVuZGVyU3RhdGUoKTt0aGlzLl9kZWZhdWx0UGFzc1N0YXRlPWgsdGhpcy5fZGVmYXVsdFJlbmRlclN0YXRlPW0sdGhpcy5fZGVmYXVsdFRleHR1cmU9dm9pZCAwLHRoaXMuX2RlZmF1bHRDdWJlTWFwPXZvaWQgMCx0aGlzLl91cz1kLHRoaXMuX2N1cnJlbnRSZW5kZXJTdGF0ZT1tLHRoaXMuX2N1cnJlbnRGcmFtZWJ1ZmZlcj12b2lkIDAsdGhpcy5fbWF4RnJhbWVUZXh0dXJlVW5pdEluZGV4PTAsdGhpcy5fcGlja09iamVjdHM9e30sdGhpcy5fbmV4dFBpY2tDb2xvcj1uZXcgVWludDMyQXJyYXkoMSksdGhpcy5vcHRpb25zPWEsdGhpcy5jYWNoZT17fSxNLmFwcGx5KGwsbSxoKX0sZXQ9e307YSgkLnByb3RvdHlwZSx7aWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH19LGNhbnZhczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NhbnZhc319LHNoYWRlckNhY2hlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hhZGVyQ2FjaGV9fSx1bmlmb3JtU3RhdGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91c319LHZlcnNpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92ZXJzaW9ufX0sc2hhZGluZ0xhbmd1YWdlVmVyc2lvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NoYWRpbmdMYW5ndWFnZVZlcnNpb259fSx2ZW5kb3I6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92ZW5kb3J9fSxyZW5kZXJlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlcmVyfX0scmVkQml0czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlZEJpdHN9fSxncmVlbkJpdHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ncmVlbkJpdHN9fSxibHVlQml0czp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2JsdWVCaXRzfX0sYWxwaGFCaXRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWxwaGFCaXRzfX0sZGVwdGhCaXRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVwdGhCaXRzfX0sc3RlbmNpbEJpdHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGVuY2lsQml0c319LG1heGltdW1Db21iaW5lZFRleHR1cmVJbWFnZVVuaXRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bUNvbWJpbmVkVGV4dHVyZUltYWdlVW5pdHN9fSxtYXhpbXVtQ3ViZU1hcFNpemU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtQ3ViZU1hcFNpemV9fSxtYXhpbXVtRnJhZ21lbnRVbmlmb3JtVmVjdG9yczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1GcmFnbWVudFVuaWZvcm1WZWN0b3JzfX0sbWF4aW11bVRleHR1cmVJbWFnZVVuaXRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bVRleHR1cmVJbWFnZVVuaXRzfX0sbWF4aW11bVJlbmRlcmJ1ZmZlclNpemU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtUmVuZGVyYnVmZmVyU2l6ZX19LG1heGltdW1UZXh0dXJlU2l6ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1UZXh0dXJlU2l6ZX19LG1heGltdW1WYXJ5aW5nVmVjdG9yczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1WYXJ5aW5nVmVjdG9yc319LG1heGltdW1WZXJ0ZXhBdHRyaWJ1dGVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bVZlcnRleEF0dHJpYnV0ZXN9fSxtYXhpbXVtVmVydGV4VGV4dHVyZUltYWdlVW5pdHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtVmVydGV4VGV4dHVyZUltYWdlVW5pdHN9fSxtYXhpbXVtVmVydGV4VW5pZm9ybVZlY3RvcnM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tYXhpbXVtVmVydGV4VW5pZm9ybVZlY3RvcnN9fSxtaW5pbXVtQWxpYXNlZExpbmVXaWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FsaWFzZWRMaW5lV2lkdGhSYW5nZVswXX19LG1heGltdW1BbGlhc2VkTGluZVdpZHRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWxpYXNlZExpbmVXaWR0aFJhbmdlWzFdfX0sbWluaW11bUFsaWFzZWRQb2ludFNpemU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbGlhc2VkUG9pbnRTaXplUmFuZ2VbMF19fSxtYXhpbXVtQWxpYXNlZFBvaW50U2l6ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FsaWFzZWRQb2ludFNpemVSYW5nZVsxXX19LG1heGltdW1WaWV3cG9ydFdpZHRoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bVZpZXdwb3J0RGltZW5zaW9uc1swXX19LG1heGltdW1WaWV3cG9ydEhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1WaWV3cG9ydERpbWVuc2lvbnNbMV19fSxhbnRpYWxpYXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbnRpYWxpYXN9fSxzdGFuZGFyZERlcml2YXRpdmVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX3N0YW5kYXJkRGVyaXZhdGl2ZXN9fSxlbGVtZW50SW5kZXhVaW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX2VsZW1lbnRJbmRleFVpbnR9fSxkZXB0aFRleHR1cmU6e2dldDpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5fZGVwdGhUZXh0dXJlfX0sZmxvYXRpbmdQb2ludFRleHR1cmU6e2dldDpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5fdGV4dHVyZUZsb2F0fX0sdGV4dHVyZUZpbHRlckFuaXNvdHJvcGljOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX3RleHR1cmVGaWx0ZXJBbmlzb3Ryb3BpY319LG1heGltdW1UZXh0dXJlRmlsdGVyQW5pc290cm9weTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1UZXh0dXJlRmlsdGVyQW5pc290cm9weX19LHZlcnRleEFycmF5T2JqZWN0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX3ZlcnRleEFycmF5T2JqZWN0fX0sZnJhZ21lbnREZXB0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLl9mcmFnRGVwdGh9fSxkcmF3QnVmZmVyczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLl9kcmF3QnVmZmVyc319LG1heGltdW1EcmF3QnVmZmVyczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21heGltdW1EcmF3QnVmZmVyc319LG1heGltdW1Db2xvckF0dGFjaG1lbnRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWF4aW11bUNvbG9yQXR0YWNobWVudHN9fSx0aHJvd09uV2ViR0xFcnJvcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Rocm93T25XZWJHTEVycm9yfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fdGhyb3dPbldlYkdMRXJyb3I9ZSx0aGlzLl9nbD1VKHRoaXMuX29yaWdpbmFsR0xDb250ZXh0LGU/VjpudWxsKX19LGRlZmF1bHRUZXh0dXJlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dGhpcy5fZGVmYXVsdFRleHR1cmUmJih0aGlzLl9kZWZhdWx0VGV4dHVyZT10aGlzLmNyZWF0ZVRleHR1cmUyRCh7c291cmNlOnt3aWR0aDoxLGhlaWdodDoxLGFycmF5QnVmZmVyVmlldzpuZXcgVWludDhBcnJheShbMjU1LDI1NSwyNTUsMjU1XSl9fSkpLHRoaXMuX2RlZmF1bHRUZXh0dXJlfX0sZGVmYXVsdEN1YmVNYXA6e2dldDpmdW5jdGlvbigpe2lmKHZvaWQgMD09PXRoaXMuX2RlZmF1bHRDdWJlTWFwKXt2YXIgZT17d2lkdGg6MSxoZWlnaHQ6MSxhcnJheUJ1ZmZlclZpZXc6bmV3IFVpbnQ4QXJyYXkoWzI1NSwyNTUsMjU1LDI1NV0pfTt0aGlzLl9kZWZhdWx0Q3ViZU1hcD10aGlzLmNyZWF0ZUN1YmVNYXAoe3NvdXJjZTp7cG9zaXRpdmVYOmUsbmVnYXRpdmVYOmUscG9zaXRpdmVZOmUsbmVnYXRpdmVZOmUscG9zaXRpdmVaOmUsbmVnYXRpdmVaOmV9fSl9cmV0dXJuIHRoaXMuX2RlZmF1bHRDdWJlTWFwfX0sZHJhd2luZ0J1ZmZlckhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dsLmRyYXdpbmdCdWZmZXJIZWlnaHR9fSxkcmF3aW5nQnVmZmVyV2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9nbC5kcmF3aW5nQnVmZmVyV2lkdGh9fSxkZWZhdWx0RnJhbWVidWZmZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiBldH19fSksJC5wcm90b3R5cGUucmVwbGFjZVNoYWRlclByb2dyYW09ZnVuY3Rpb24oZSx0LGksbil7cmV0dXJuIHRoaXMuc2hhZGVyQ2FjaGUucmVwbGFjZVNoYWRlclByb2dyYW0oZSx0LGksbil9LCQucHJvdG90eXBlLmNyZWF0ZVNoYWRlclByb2dyYW09ZnVuY3Rpb24oZSx0LGkpe3JldHVybiB0aGlzLnNoYWRlckNhY2hlLmdldFNoYWRlclByb2dyYW0oZSx0LGkpfSwkLnByb3RvdHlwZS5jcmVhdGVWZXJ0ZXhCdWZmZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gRyh0aGlzLl9nbCx0aGlzLl9nbC5BUlJBWV9CVUZGRVIsZSx0KX0sJC5wcm90b3R5cGUuY3JlYXRlSW5kZXhCdWZmZXI9ZnVuY3Rpb24oZSx0LGkpe2lmKGk9PT1kLlVOU0lHTkVEX0lOVCYmIXRoaXMuZWxlbWVudEluZGV4VWludCl0aHJvdyBuZXcgbCgiSW5kZXhEYXRhdHlwZS5VTlNJR05FRF9JTlQgcmVxdWlyZXMgT0VTX2VsZW1lbnRfaW5kZXhfdWludCwgd2hpY2ggaXMgbm90IHN1cHBvcnRlZCBvbiB0aGlzIHN5c3RlbS4gIENoZWNrIGNvbnRleHQuZWxlbWVudEluZGV4VWludC4iKTt2YXIgbj1kLmdldFNpemVJbkJ5dGVzKGkpLHI9dGhpcy5fZ2wsbz1HKHIsci5FTEVNRU5UX0FSUkFZX0JVRkZFUixlLHQpLHM9by5zaXplSW5CeXRlcy9uO3JldHVybiBhKG8se2luZGV4RGF0YXR5cGU6e2dldDpmdW5jdGlvbigpe3JldHVybiBpfX0sYnl0ZXNQZXJJbmRleDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG59fSxudW1iZXJPZkluZGljZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiBzfX19KSxvfSwkLnByb3RvdHlwZS5jcmVhdGVWZXJ0ZXhBcnJheT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgeih0aGlzLl9nbCx0aGlzLl92ZXJ0ZXhBcnJheU9iamVjdCxlLHQpfSwkLnByb3RvdHlwZS5jcmVhdGVUZXh0dXJlMkQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBEKHRoaXMsZSl9LCQucHJvdG90eXBlLmNyZWF0ZVRleHR1cmUyREZyb21GcmFtZWJ1ZmZlcj1mdW5jdGlvbihlLHQsaSxuLGEscyl7dmFyIGw9dGhpcy5fZ2w7ZT1yKGUsZi5SR0IpLHQ9cih0LDApLGk9cihpLDApLG49cihuLGwuZHJhd2luZ0J1ZmZlcldpZHRoKSxhPXIoYSxsLmRyYXdpbmdCdWZmZXJIZWlnaHQpO3ZhciB1PW5ldyBEKHRoaXMse3dpZHRoOm4saGVpZ2h0OmEscGl4ZWxGb3JtYXQ6ZSxzb3VyY2U6e2ZyYW1lYnVmZmVyOm8ocyk/czp0aGlzLmRlZmF1bHRGcmFtZWJ1ZmZlcix4T2Zmc2V0OnQseU9mZnNldDppLHdpZHRoOm4saGVpZ2h0OmF9fSk7cmV0dXJuIHV9LCQucHJvdG90eXBlLmNyZWF0ZUN1YmVNYXA9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHQpe3QuYXJyYXlCdWZmZXJWaWV3P3AudGV4SW1hZ2UyRChlLDAsYyx1LHUsMCxjLGQsdC5hcnJheUJ1ZmZlclZpZXcpOnAudGV4SW1hZ2UyRChlLDAsYyxjLGQsdCl9ZT1yKGUsci5FTVBUWV9PQkpFQ1QpO3ZhciBpLG4sYT1lLnNvdXJjZTtpZihvKGEpKXt2YXIgcz1bYS5wb3NpdGl2ZVgsYS5uZWdhdGl2ZVgsYS5wb3NpdGl2ZVksYS5uZWdhdGl2ZVksYS5wb3NpdGl2ZVosYS5uZWdhdGl2ZVpdO2k9c1swXS53aWR0aCxuPXNbMF0uaGVpZ2h0fWVsc2UgaT1lLndpZHRoLG49ZS5oZWlnaHQ7dmFyIHU9aSxjPXIoZS5waXhlbEZvcm1hdCxmLlJHQkEpLGQ9cihlLnBpeGVsRGF0YXR5cGUseC5VTlNJR05FRF9CWVRFKTtpZihkPT09eC5GTE9BVCYmIXRoaXMuZmxvYXRpbmdQb2ludFRleHR1cmUpdGhyb3cgbmV3IGwoIldoZW4gb3B0aW9ucy5waXhlbERhdGF0eXBlIGlzIEZMT0FULCB0aGlzIFdlYkdMIGltcGxlbWVudGF0aW9uIG11c3Qgc3VwcG9ydCB0aGUgT0VTX3RleHR1cmVfZmxvYXQgZXh0ZW5zaW9uLiIpO3ZhciBoPWUucHJlTXVsdGlwbHlBbHBoYXx8Yz09PWYuUkdCfHxjPT09Zi5MVU1JTkFOQ0UsbT1yKGUuZmxpcFksITApLHA9dGhpcy5fZ2wsdj1wLlRFWFRVUkVfQ1VCRV9NQVAsZz1wLmNyZWF0ZVRleHR1cmUoKTtyZXR1cm4gcC5hY3RpdmVUZXh0dXJlKHAuVEVYVFVSRTApLHAuYmluZFRleHR1cmUodixnKSxvKGEpPyhwLnBpeGVsU3RvcmVpKHAuVU5QQUNLX1BSRU1VTFRJUExZX0FMUEhBX1dFQkdMLGgpLHAucGl4ZWxTdG9yZWkocC5VTlBBQ0tfRkxJUF9ZX1dFQkdMLG0pLHQocC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1gsYS5wb3NpdGl2ZVgpLHQocC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1gsYS5uZWdhdGl2ZVgpLHQocC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1ksYS5wb3NpdGl2ZVkpLHQocC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1ksYS5uZWdhdGl2ZVkpLHQocC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1osYS5wb3NpdGl2ZVopLHQocC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1osYS5uZWdhdGl2ZVopKToocC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YLDAsYyx1LHUsMCxjLGQsbnVsbCkscC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9YLDAsYyx1LHUsMCxjLGQsbnVsbCkscC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9ZLDAsYyx1LHUsMCxjLGQsbnVsbCkscC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9ZLDAsYyx1LHUsMCxjLGQsbnVsbCkscC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9aLDAsYyx1LHUsMCxjLGQsbnVsbCkscC50ZXhJbWFnZTJEKHAuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9aLDAsYyx1LHUsMCxjLGQsbnVsbCkpLHAuYmluZFRleHR1cmUodixudWxsKSxuZXcgdyhwLHRoaXMuX3RleHR1cmVGaWx0ZXJBbmlzb3Ryb3BpYyx2LGcsYyxkLHUsaCxtKX0sJC5wcm90b3R5cGUuY3JlYXRlRnJhbWVidWZmZXI9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBiKHRoaXMuX2dsLHRoaXMuX21heGltdW1Db2xvckF0dGFjaG1lbnRzLGUpfSwkLnByb3RvdHlwZS5jcmVhdGVSZW5kZXJidWZmZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2w7ZT1yKGUsci5FTVBUWV9PQkpFQ1QpO3ZhciBpPXIoZS5mb3JtYXQsUC5SR0JBNCksbj1vKGUud2lkdGgpP2Uud2lkdGg6dC5kcmF3aW5nQnVmZmVyV2lkdGgsYT1vKGUuaGVpZ2h0KT9lLmhlaWdodDp0LmRyYXdpbmdCdWZmZXJIZWlnaHQ7cmV0dXJuIG5ldyBBKHQsaSxuLGEpfTt2YXIgdHQ9MCxpdD17fTskLnByb3RvdHlwZS5jcmVhdGVSZW5kZXJTdGF0ZT1mdW5jdGlvbihlKXt2YXIgdD1KU09OLnN0cmluZ2lmeShlKSxpPWl0W3RdO2lmKG8oaSkpcmV0dXJuIGk7dmFyIG49bmV3IE0odGhpcyxlKSxyPUpTT04uc3RyaW5naWZ5KG4pO3JldHVybiBpPWl0W3JdLG8oaSl8fChuLmlkPXR0KyssaT1uLGl0W3JdPWkpLGl0W3RdPWksaX0sJC5wcm90b3R5cGUuY3JlYXRlU2FtcGxlcj1mdW5jdGlvbihlKXt2YXIgdD17d3JhcFM6cihlLndyYXBTLEwuQ0xBTVBfVE9fRURHRSksd3JhcFQ6cihlLndyYXBULEwuQ0xBTVBfVE9fRURHRSksbWluaWZpY2F0aW9uRmlsdGVyOnIoZS5taW5pZmljYXRpb25GaWx0ZXIsUi5MSU5FQVIpLG1hZ25pZmljYXRpb25GaWx0ZXI6cihlLm1hZ25pZmljYXRpb25GaWx0ZXIsTy5MSU5FQVIpLG1heGltdW1Bbmlzb3Ryb3B5Om8oZS5tYXhpbXVtQW5pc290cm9weSk/ZS5tYXhpbXVtQW5pc290cm9weToxfTtyZXR1cm4gdH07dmFyIG50OyJ1bmRlZmluZWQiIT10eXBlb2YgV2ViR0xSZW5kZXJpbmdDb250ZXh0JiYobnQ9W1dlYkdMUmVuZGVyaW5nQ29udGV4dC5CQUNLXSk7dmFyIHJ0PW5ldyBDOyQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKGUsaSl7ZT1yKGUscnQpLGk9cihpLHRoaXMuX2RlZmF1bHRQYXNzU3RhdGUpO3ZhciBuPXRoaXMuX2dsLGE9MCxzPWUuY29sb3IsbD1lLmRlcHRoLHU9ZS5zdGVuY2lsO28ocykmJih0LmVxdWFscyh0aGlzLl9jbGVhckNvbG9yLHMpfHwodC5jbG9uZShzLHRoaXMuX2NsZWFyQ29sb3IpLG4uY2xlYXJDb2xvcihzLnJlZCxzLmdyZWVuLHMuYmx1ZSxzLmFscGhhKSksYXw9bi5DT0xPUl9CVUZGRVJfQklUKSxvKGwpJiYobCE9PXRoaXMuX2NsZWFyRGVwdGgmJih0aGlzLl9jbGVhckRlcHRoPWwsbi5jbGVhckRlcHRoKGwpKSxhfD1uLkRFUFRIX0JVRkZFUl9CSVQpLG8odSkmJih1IT09dGhpcy5fY2xlYXJTdGVuY2lsJiYodGhpcy5fY2xlYXJTdGVuY2lsPXUsbi5jbGVhclN0ZW5jaWwodSkpLGF8PW4uU1RFTkNJTF9CVUZGRVJfQklUKTt2YXIgYz1yKGUucmVuZGVyU3RhdGUsdGhpcy5fZGVmYXVsdFJlbmRlclN0YXRlKTtxKHRoaXMsYyxpKTt2YXIgZD1yKGUuZnJhbWVidWZmZXIsaS5mcmFtZWJ1ZmZlcik7aih0aGlzLGQpLG4uY2xlYXIoYSl9LCQucHJvdG90eXBlLmRyYXc9ZnVuY3Rpb24oZSx0LGksbil7dD1yKHQsdGhpcy5fZGVmYXVsdFBhc3NTdGF0ZSk7dmFyIG89cihlLmZyYW1lYnVmZmVyLHQuZnJhbWVidWZmZXIpO1kodGhpcyxvLGUsdCxpLG4pLFgodGhpcyxlLG4pfSwkLnByb3RvdHlwZS5lbmRGcmFtZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2dsO2UudXNlUHJvZ3JhbShudWxsKSx0aGlzLl9jdXJyZW50RnJhbWVidWZmZXI9dm9pZCAwLGUuYmluZEZyYW1lYnVmZmVyKGUuRlJBTUVCVUZGRVIsbnVsbCksdGhpcy5kcmF3QnVmZmVycyYmdGhpcy5fZHJhd0J1ZmZlcnMuZHJhd0J1ZmZlcnNXRUJHTChudCk7dmFyIHQ9dGhpcy5fbWF4RnJhbWVUZXh0dXJlVW5pdEluZGV4O3RoaXMuX21heEZyYW1lVGV4dHVyZVVuaXRJbmRleD0wO2Zvcih2YXIgaT0wO3Q+aTsrK2kpZS5hY3RpdmVUZXh0dXJlKGUuVEVYVFVSRTAraSksZS5iaW5kVGV4dHVyZShlLlRFWFRVUkVfMkQsbnVsbCksZS5iaW5kVGV4dHVyZShlLlRFWFRVUkVfQ1VCRV9NQVAsbnVsbCl9LCQucHJvdG90eXBlLnJlYWRQaXhlbHM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2w7ZT1lfHx7fTt2YXIgaT1NYXRoLm1heChlLnh8fDAsMCksbj1NYXRoLm1heChlLnl8fDAsMCkscj1lLndpZHRofHx0LmRyYXdpbmdCdWZmZXJXaWR0aCxvPWUuaGVpZ2h0fHx0LmRyYXdpbmdCdWZmZXJIZWlnaHQsYT1lLmZyYW1lYnVmZmVyLHM9bmV3IFVpbnQ4QXJyYXkoNCpyKm8pO3JldHVybiBqKHRoaXMsYSksdC5yZWFkUGl4ZWxzKGksbixyLG8sdC5SR0JBLHQuVU5TSUdORURfQllURSxzKSxzfSwkLnByb3RvdHlwZS5jcmVhdGVWZXJ0ZXhBcnJheUZyb21HZW9tZXRyeT1mdW5jdGlvbihlKXtlPXIoZSxyLkVNUFRZX09CSkVDVCk7dmFyIHQsbixhLHM9cihlLmdlb21ldHJ5LHIuRU1QVFlfT0JKRUNUKSxsPXIoZS5idWZmZXJVc2FnZSx5LkRZTkFNSUNfRFJBVyksYz1yKGUuYXR0cmlidXRlTG9jYXRpb25zLHIuRU1QVFlfT0JKRUNUKSxtPXIoZS5pbnRlcmxlYXZlLCExKSxmPWUudmVydGV4QXJyYXlBdHRyaWJ1dGVzLHA9byhmKT9mOltdLHY9cy5hdHRyaWJ1dGVzO2lmKG0pe3ZhciBnPUsodik7aWYobyhnKSl7YT10aGlzLmNyZWF0ZVZlcnRleEJ1ZmZlcihnLmJ1ZmZlcixsKTt2YXIgXz1nLm9mZnNldHNJbkJ5dGVzLEM9Zy52ZXJ0ZXhTaXplSW5CeXRlcztmb3IodCBpbiB2KXYuaGFzT3duUHJvcGVydHkodCkmJm8odlt0XSkmJihuPXZbdF0sbyhuLnZhbHVlcyk/cC5wdXNoKHtpbmRleDpjW3RdLHZlcnRleEJ1ZmZlcjphLGNvbXBvbmVudERhdGF0eXBlOm4uY29tcG9uZW50RGF0YXR5cGUsY29tcG9uZW50c1BlckF0dHJpYnV0ZTpuLmNvbXBvbmVudHNQZXJBdHRyaWJ1dGUsbm9ybWFsaXplOm4ubm9ybWFsaXplLG9mZnNldEluQnl0ZXM6X1t0XSxzdHJpZGVJbkJ5dGVzOkN9KTpwLnB1c2goe2luZGV4OmNbdF0sdmFsdWU6bi52YWx1ZSxjb21wb25lbnREYXRhdHlwZTpuLmNvbXBvbmVudERhdGF0eXBlLG5vcm1hbGl6ZTpuLm5vcm1hbGl6ZX0pKX19ZWxzZSBmb3IodCBpbiB2KWlmKHYuaGFzT3duUHJvcGVydHkodCkmJm8odlt0XSkpe249dlt0XTt2YXIgdz1uLmNvbXBvbmVudERhdGF0eXBlO3c9PT1pLkRPVUJMRSYmKHc9aS5GTE9BVCksYT12b2lkIDAsbyhuLnZhbHVlcykmJihhPXRoaXMuY3JlYXRlVmVydGV4QnVmZmVyKGkuY3JlYXRlVHlwZWRBcnJheSh3LG4udmFsdWVzKSxsKSkscC5wdXNoKHtpbmRleDpjW3RdLHZlcnRleEJ1ZmZlcjphLHZhbHVlOm4udmFsdWUsY29tcG9uZW50RGF0YXR5cGU6dyxjb21wb25lbnRzUGVyQXR0cmlidXRlOm4uY29tcG9uZW50c1BlckF0dHJpYnV0ZSxub3JtYWxpemU6bi5ub3JtYWxpemV9KX12YXIgRSxiPXMuaW5kaWNlcztyZXR1cm4gbyhiKSYmKEU9dS5jb21wdXRlTnVtYmVyT2ZWZXJ0aWNlcyhzKT5oLlNJWFRZX0ZPVVJfS0lMT0JZVEVTJiZ0aGlzLmVsZW1lbnRJbmRleFVpbnQ/dGhpcy5jcmVhdGVJbmRleEJ1ZmZlcihuZXcgVWludDMyQXJyYXkoYiksbCxkLlVOU0lHTkVEX0lOVCk6dGhpcy5jcmVhdGVJbmRleEJ1ZmZlcihuZXcgVWludDE2QXJyYXkoYiksbCxkLlVOU0lHTkVEX1NIT1JUKSksdGhpcy5jcmVhdGVWZXJ0ZXhBcnJheShwLEUpfTt2YXIgb3Q9e3Bvc2l0aW9uOjAsdGV4dHVyZUNvb3JkaW5hdGVzOjF9O3JldHVybiAkLnByb3RvdHlwZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5jYWNoZS52aWV3cG9ydFF1YWRfdmVydGV4QXJyYXk7aWYoIW8obikpe3ZhciBhPW5ldyB1KHthdHRyaWJ1dGVzOntwb3NpdGlvbjpuZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6aS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOlstMSwtMSwxLC0xLDEsMSwtMSwxXX0pLHRleHR1cmVDb29yZGluYXRlczpuZXcgYyh7Y29tcG9uZW50RGF0YXR5cGU6aS5GTE9BVCxjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsdmFsdWVzOlswLDAsMSwwLDEsMSwwLDFdfSl9LGluZGljZXM6bmV3IFVpbnQxNkFycmF5KFswLDEsMiwwLDIsM10pLHByaW1pdGl2ZVR5cGU6cC5UUklBTkdMRVN9KTtuPXRoaXMuY3JlYXRlVmVydGV4QXJyYXlGcm9tR2VvbWV0cnkoe2dlb21ldHJ5OmEsYXR0cmlidXRlTG9jYXRpb25zOntwb3NpdGlvbjowLHRleHR1cmVDb29yZGluYXRlczoxfSxidWZmZXJVc2FnZTp5LlNUQVRJQ19EUkFXLGludGVybGVhdmU6ITB9KSx0aGlzLmNhY2hlLnZpZXdwb3J0UXVhZF92ZXJ0ZXhBcnJheT1ufXJldHVybiB0PXIodCxyLkVNUFRZX09CSkVDVCksbmV3IEUoe3ZlcnRleEFycmF5Om4scHJpbWl0aXZlVHlwZTpwLlRSSUFOR0xFUyxyZW5kZXJTdGF0ZTp0LnJlbmRlclN0YXRlLHNoYWRlclByb2dyYW06dGhpcy5jcmVhdGVTaGFkZXJQcm9ncmFtKGcsZSxvdCksdW5pZm9ybU1hcDp0LnVuaWZvcm1NYXAsb3duZXI6dC5vd25lcixmcmFtZWJ1ZmZlcjp0LmZyYW1lYnVmZmVyfSl9LCQucHJvdG90eXBlLmNyZWF0ZVBpY2tGcmFtZWJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBuZXcgVCh0aGlzKX0sJC5wcm90b3R5cGUuZ2V0T2JqZWN0QnlQaWNrQ29sb3I9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3BpY2tPYmplY3RzW2UudG9SZ2JhKCldfSxhKFEucHJvdG90eXBlLHtvYmplY3Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waWNrT2JqZWN0c1t0aGlzLmtleV19LHNldDpmdW5jdGlvbihlKXt0aGlzLl9waWNrT2JqZWN0c1t0aGlzLmtleV09ZX19fSksUS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBkZWxldGUgdGhpcy5fcGlja09iamVjdHNbdGhpcy5rZXldLHZvaWQgMH0sJC5wcm90b3R5cGUuY3JlYXRlUGlja0lkPWZ1bmN0aW9uKGUpeysrdGhpcy5fbmV4dFBpY2tDb2xvclswXTt2YXIgaT10aGlzLl9uZXh0UGlja0NvbG9yWzBdO2lmKDA9PT1pKXRocm93IG5ldyB2KCJPdXQgb2YgdW5pcXVlIFBpY2sgSURzLiIpO3JldHVybiB0aGlzLl9waWNrT2JqZWN0c1tpXT1lLG5ldyBRKHRoaXMuX3BpY2tPYmplY3RzLGksdC5mcm9tUmdiYShpKSl9LCQucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LCQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmNhY2hlO2Zvcih2YXIgdCBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkodCkpe3ZhciBpPWVbdF07byhpLmRlc3Ryb3kpJiZpLmRlc3Ryb3koKX1yZXR1cm4gdGhpcy5fc2hhZGVyQ2FjaGU9dGhpcy5fc2hhZGVyQ2FjaGUuZGVzdHJveSgpLHRoaXMuX2RlZmF1bHRUZXh0dXJlPXRoaXMuX2RlZmF1bHRUZXh0dXJlJiZ0aGlzLl9kZWZhdWx0VGV4dHVyZS5kZXN0cm95KCksdGhpcy5fZGVmYXVsdEN1YmVNYXA9dGhpcy5fZGVmYXVsdEN1YmVNYXAmJnRoaXMuX2RlZmF1bHRDdWJlTWFwLmRlc3Ryb3koKSxzKHRoaXMpfSwkfSksZGVmaW5lKCJUaGlyZFBhcnR5L1R3ZWVuIixbXSxmdW5jdGlvbigpe3ZvaWQgMD09PURhdGUubm93JiYoRGF0ZS5ub3c9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLnZhbHVlT2YoKX0pO3ZhciBlPWV8fGZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJue1JFVklTSU9OOiIxMyIsZ2V0QWxsOmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHJlbW92ZUFsbDpmdW5jdGlvbigpe2U9W119LGFkZDpmdW5jdGlvbih0KXtlLnB1c2godCl9LHJlbW92ZTpmdW5jdGlvbih0KXt2YXIgaT1lLmluZGV4T2YodCk7LTEhPT1pJiZlLnNwbGljZShpLDEpfSx1cGRhdGU6ZnVuY3Rpb24odCl7aWYoMD09PWUubGVuZ3RoKXJldHVybiExO3ZhciBpPTA7Zm9yKHQ9dm9pZCAwIT09dD90OiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cucGVyZm9ybWFuY2UmJnZvaWQgMCE9PXdpbmRvdy5wZXJmb3JtYW5jZS5ub3c/d2luZG93LnBlcmZvcm1hbmNlLm5vdygpOkRhdGUubm93KCk7aTxlLmxlbmd0aDspZVtpXS51cGRhdGUodCk/aSsrOmUuc3BsaWNlKGksMSk7cmV0dXJuITB9fX0oKTtyZXR1cm4gZS5Ud2Vlbj1mdW5jdGlvbih0KXt2YXIgaT10LG49e30scj17fSxvPXt9LGE9MWUzLHM9MCxsPSExLHU9ITEsYz0hMSxkPTAsaD1udWxsLG09ZS5FYXNpbmcuTGluZWFyLk5vbmUsZj1lLkludGVycG9sYXRpb24uTGluZWFyLHA9W10sdj1udWxsLGc9ITEsXz1udWxsLHk9bnVsbCxDPW51bGw7Zm9yKHZhciB3IGluIHQpblt3XT1wYXJzZUZsb2F0KHRbd10sMTApO3RoaXMudG89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwIT09dCYmKGE9dCkscj1lLHRoaXN9LHRoaXMuc3RhcnQ9ZnVuY3Rpb24odCl7ZS5hZGQodGhpcyksdT0hMCxnPSExLGg9dm9pZCAwIT09dD90OiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cucGVyZm9ybWFuY2UmJnZvaWQgMCE9PXdpbmRvdy5wZXJmb3JtYW5jZS5ub3c/d2luZG93LnBlcmZvcm1hbmNlLm5vdygpOkRhdGUubm93KCksaCs9ZDtmb3IodmFyIGEgaW4gcil7aWYoclthXWluc3RhbmNlb2YgQXJyYXkpe2lmKDA9PT1yW2FdLmxlbmd0aCljb250aW51ZTtyW2FdPVtpW2FdXS5jb25jYXQoclthXSl9blthXT1pW2FdLG5bYV1pbnN0YW5jZW9mIEFycmF5PT0hMSYmKG5bYV0qPTEpLG9bYV09blthXXx8MH1yZXR1cm4gdGhpc30sdGhpcy5zdG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHU/KGUucmVtb3ZlKHRoaXMpLHU9ITEsbnVsbCE9PUMmJkMuY2FsbChpKSx0aGlzLnN0b3BDaGFpbmVkVHdlZW5zKCksdGhpcyk6dGhpc30sdGhpcy5zdG9wQ2hhaW5lZFR3ZWVucz1mdW5jdGlvbigpe2Zvcih2YXIgZT0wLHQ9cC5sZW5ndGg7dD5lO2UrKylwW2VdLnN0b3AoKX0sdGhpcy5kZWxheT1mdW5jdGlvbihlKXtyZXR1cm4gZD1lLHRoaXN9LHRoaXMucmVwZWF0PWZ1bmN0aW9uKGUpe3JldHVybiBzPWUsdGhpc30sdGhpcy55b3lvPWZ1bmN0aW9uKGUpe3JldHVybiBsPWUsdGhpc30sdGhpcy5lYXNpbmc9ZnVuY3Rpb24oZSl7cmV0dXJuIG09ZSx0aGlzfSx0aGlzLmludGVycG9sYXRpb249ZnVuY3Rpb24oZSl7cmV0dXJuIGY9ZSx0aGlzfSx0aGlzLmNoYWluPWZ1bmN0aW9uKCl7cmV0dXJuIHA9YXJndW1lbnRzLHRoaXN9LHRoaXMub25TdGFydD1mdW5jdGlvbihlKXtyZXR1cm4gdj1lLHRoaXN9LHRoaXMub25VcGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIF89ZSx0aGlzfSx0aGlzLm9uQ29tcGxldGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHk9ZSx0aGlzfSx0aGlzLm9uU3RvcD1mdW5jdGlvbihlKXtyZXR1cm4gQz1lLHRoaXN9LHRoaXMudXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0O2lmKGg+ZSlyZXR1cm4hMDtnPT09ITEmJihudWxsIT09diYmdi5jYWxsKGkpLGc9ITApO3ZhciB1PShlLWgpL2E7dT11PjE/MTp1O3ZhciBDPW0odSk7Zm9yKHQgaW4gcil7dmFyIHc9blt0XXx8MCxFPXJbdF07RSBpbnN0YW5jZW9mIEFycmF5P2lbdF09ZihFLEMpOigic3RyaW5nIj09dHlwZW9mIEUmJihFPXcrcGFyc2VGbG9hdChFLDEwKSksIm51bWJlciI9PXR5cGVvZiBFJiYoaVt0XT13KyhFLXcpKkMpKX1pZihudWxsIT09XyYmXy5jYWxsKGksQyksMT09dSl7aWYocz4wKXtpc0Zpbml0ZShzKSYmcy0tO2Zvcih0IGluIG8pe2lmKCJzdHJpbmciPT10eXBlb2Ygclt0XSYmKG9bdF09b1t0XStwYXJzZUZsb2F0KHJbdF0sMTApKSxsKXt2YXIgYj1vW3RdO29bdF09clt0XSxyW3RdPWJ9blt0XT1vW3RdfXJldHVybiBsJiYoYz0hYyksaD1lK2QsITB9bnVsbCE9PXkmJnkuY2FsbChpKTtmb3IodmFyIFM9MCxUPXAubGVuZ3RoO1Q+UztTKyspcFtTXS5zdGFydChlKTtyZXR1cm4hMX1yZXR1cm4hMH19LGUuRWFzaW5nPXtMaW5lYXI6e05vbmU6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9fSxRdWFkcmF0aWM6e0luOmZ1bmN0aW9uKGUpe3JldHVybiBlKmV9LE91dDpmdW5jdGlvbihlKXtyZXR1cm4gZSooMi1lKX0sSW5PdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuKGUqPTIpPDE/LjUqZSplOi0uNSooLS1lKihlLTIpLTEpfX0sQ3ViaWM6e0luOmZ1bmN0aW9uKGUpe3JldHVybiBlKmUqZX0sT3V0OmZ1bmN0aW9uKGUpe3JldHVybi0tZSplKmUrMX0sSW5PdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuKGUqPTIpPDE/LjUqZSplKmU6LjUqKChlLT0yKSplKmUrMil9fSxRdWFydGljOntJbjpmdW5jdGlvbihlKXtyZXR1cm4gZSplKmUqZX0sT3V0OmZ1bmN0aW9uKGUpe3JldHVybiAxLSAtLWUqZSplKmV9LEluT3V0OmZ1bmN0aW9uKGUpe3JldHVybihlKj0yKTwxPy41KmUqZSplKmU6LS41KigoZS09MikqZSplKmUtMil9fSxRdWludGljOntJbjpmdW5jdGlvbihlKXtyZXR1cm4gZSplKmUqZSplfSxPdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuLS1lKmUqZSplKmUrMX0sSW5PdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuKGUqPTIpPDE/LjUqZSplKmUqZSplOi41KigoZS09MikqZSplKmUqZSsyKX19LFNpbnVzb2lkYWw6e0luOmZ1bmN0aW9uKGUpe3JldHVybiAxLU1hdGguY29zKGUqTWF0aC5QSS8yKX0sT3V0OmZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLnNpbihlKk1hdGguUEkvMil9LEluT3V0OmZ1bmN0aW9uKGUpe3JldHVybi41KigxLU1hdGguY29zKE1hdGguUEkqZSkpfX0sRXhwb25lbnRpYWw6e0luOmZ1bmN0aW9uKGUpe3JldHVybiAwPT09ZT8wOk1hdGgucG93KDEwMjQsZS0xKX0sT3V0OmZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZT8xOjEtTWF0aC5wb3coMiwtMTAqZSl9LEluT3V0OmZ1bmN0aW9uKGUpe3JldHVybiAwPT09ZT8wOjE9PT1lPzE6KGUqPTIpPDE/LjUqTWF0aC5wb3coMTAyNCxlLTEpOi41KigtTWF0aC5wb3coMiwtMTAqKGUtMSkpKzIpfX0sQ2lyY3VsYXI6e0luOmZ1bmN0aW9uKGUpe3JldHVybiAxLU1hdGguc3FydCgxLWUqZSl9LE91dDpmdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5zcXJ0KDEtIC0tZSplKX0sSW5PdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuKGUqPTIpPDE/LS41KihNYXRoLnNxcnQoMS1lKmUpLTEpOi41KihNYXRoLnNxcnQoMS0oZS09MikqZSkrMSl9fSxFbGFzdGljOntJbjpmdW5jdGlvbihlKXt2YXIgdCxpPS4xLG49LjQ7cmV0dXJuIDA9PT1lPzA6MT09PWU/MTooIWl8fDE+aT8oaT0xLHQ9bi80KTp0PW4qTWF0aC5hc2luKDEvaSkvKDIqTWF0aC5QSSksLShpKk1hdGgucG93KDIsMTAqKGUtPTEpKSpNYXRoLnNpbigoZS10KSoyKk1hdGguUEkvbikpKX0sT3V0OmZ1bmN0aW9uKGUpe3ZhciB0LGk9LjEsbj0uNDtyZXR1cm4gMD09PWU/MDoxPT09ZT8xOighaXx8MT5pPyhpPTEsdD1uLzQpOnQ9bipNYXRoLmFzaW4oMS9pKS8oMipNYXRoLlBJKSxpKk1hdGgucG93KDIsLTEwKmUpKk1hdGguc2luKChlLXQpKjIqTWF0aC5QSS9uKSsxKX0sSW5PdXQ6ZnVuY3Rpb24oZSl7dmFyIHQsaT0uMSxuPS40O3JldHVybiAwPT09ZT8wOjE9PT1lPzE6KCFpfHwxPmk/KGk9MSx0PW4vNCk6dD1uKk1hdGguYXNpbigxL2kpLygyKk1hdGguUEkpLChlKj0yKTwxPy0uNSppKk1hdGgucG93KDIsMTAqKGUtPTEpKSpNYXRoLnNpbigoZS10KSoyKk1hdGguUEkvbik6LjUqaSpNYXRoLnBvdygyLC0xMCooZS09MSkpKk1hdGguc2luKChlLXQpKjIqTWF0aC5QSS9uKSsxKX19LEJhY2s6e0luOmZ1bmN0aW9uKGUpe3ZhciB0PTEuNzAxNTg7cmV0dXJuIGUqZSooKHQrMSkqZS10KX0sT3V0OmZ1bmN0aW9uKGUpe3ZhciB0PTEuNzAxNTg7cmV0dXJuLS1lKmUqKCh0KzEpKmUrdCkrMX0sSW5PdXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9Mi41OTQ5MDk1O3JldHVybihlKj0yKTwxPy41KmUqZSooKHQrMSkqZS10KTouNSooKGUtPTIpKmUqKCh0KzEpKmUrdCkrMil9fSxCb3VuY2U6e0luOmZ1bmN0aW9uKHQpe3JldHVybiAxLWUuRWFzaW5nLkJvdW5jZS5PdXQoMS10KX0sT3V0OmZ1bmN0aW9uKGUpe3JldHVybiAxLzIuNzU+ZT83LjU2MjUqZSplOjIvMi43NT5lPzcuNTYyNSooZS09MS41LzIuNzUpKmUrLjc1OjIuNS8yLjc1PmU/Ny41NjI1KihlLT0yLjI1LzIuNzUpKmUrLjkzNzU6Ny41NjI1KihlLT0yLjYyNS8yLjc1KSplKy45ODQzNzUKfSxJbk91dDpmdW5jdGlvbih0KXtyZXR1cm4uNT50Py41KmUuRWFzaW5nLkJvdW5jZS5JbigyKnQpOi41KmUuRWFzaW5nLkJvdW5jZS5PdXQoMip0LTEpKy41fX19LGUuSW50ZXJwb2xhdGlvbj17TGluZWFyOmZ1bmN0aW9uKHQsaSl7dmFyIG49dC5sZW5ndGgtMSxyPW4qaSxvPU1hdGguZmxvb3IociksYT1lLkludGVycG9sYXRpb24uVXRpbHMuTGluZWFyO3JldHVybiAwPmk/YSh0WzBdLHRbMV0scik6aT4xP2EodFtuXSx0W24tMV0sbi1yKTphKHRbb10sdFtvKzE+bj9uOm8rMV0sci1vKX0sQmV6aWVyOmZ1bmN0aW9uKHQsaSl7dmFyIG4scj0wLG89dC5sZW5ndGgtMSxhPU1hdGgucG93LHM9ZS5JbnRlcnBvbGF0aW9uLlV0aWxzLkJlcm5zdGVpbjtmb3Iobj0wO28+PW47bisrKXIrPWEoMS1pLG8tbikqYShpLG4pKnRbbl0qcyhvLG4pO3JldHVybiByfSxDYXRtdWxsUm9tOmZ1bmN0aW9uKHQsaSl7dmFyIG49dC5sZW5ndGgtMSxyPW4qaSxvPU1hdGguZmxvb3IociksYT1lLkludGVycG9sYXRpb24uVXRpbHMuQ2F0bXVsbFJvbTtyZXR1cm4gdFswXT09PXRbbl0/KDA+aSYmKG89TWF0aC5mbG9vcihyPW4qKDEraSkpKSxhKHRbKG8tMStuKSVuXSx0W29dLHRbKG8rMSklbl0sdFsobysyKSVuXSxyLW8pKTowPmk/dFswXS0oYSh0WzBdLHRbMF0sdFsxXSx0WzFdLC1yKS10WzBdKTppPjE/dFtuXS0oYSh0W25dLHRbbl0sdFtuLTFdLHRbbi0xXSxyLW4pLXRbbl0pOmEodFtvP28tMTowXSx0W29dLHRbbysxPm4/bjpvKzFdLHRbbysyPm4/bjpvKzJdLHItbyl9LFV0aWxzOntMaW5lYXI6ZnVuY3Rpb24oZSx0LGkpe3JldHVybih0LWUpKmkrZX0sQmVybnN0ZWluOmZ1bmN0aW9uKHQsaSl7dmFyIG49ZS5JbnRlcnBvbGF0aW9uLlV0aWxzLkZhY3RvcmlhbDtyZXR1cm4gbih0KS9uKGkpL24odC1pKX0sRmFjdG9yaWFsOmZ1bmN0aW9uKCl7dmFyIGU9WzFdO3JldHVybiBmdW5jdGlvbih0KXt2YXIgaSxuPTE7aWYoZVt0XSlyZXR1cm4gZVt0XTtmb3IoaT10O2k+MTtpLS0pbio9aTtyZXR1cm4gZVt0XT1ufX0oKSxDYXRtdWxsUm9tOmZ1bmN0aW9uKGUsdCxpLG4scil7dmFyIG89LjUqKGktZSksYT0uNSoobi10KSxzPXIqcixsPXIqcztyZXR1cm4oMip0LTIqaStvK2EpKmwrKC0zKnQrMyppLTIqby1hKSpzK28qcit0fX19LGV9KSxkZWZpbmUoIkNvcmUvRWFzaW5nRnVuY3Rpb24iLFsiLi4vVGhpcmRQYXJ0eS9Ud2VlbiIsIi4vZnJlZXplT2JqZWN0Il0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7dmFyIGk9e0xJTkVBUl9OT05FOmUuRWFzaW5nLkxpbmVhci5Ob25lLFFVQURSQUNUSUNfSU46ZS5FYXNpbmcuUXVhZHJhdGljLkluLFFVQURSQUNUSUNfT1VUOmUuRWFzaW5nLlF1YWRyYXRpYy5PdXQsUVVBRFJBQ1RJQ19JTl9PVVQ6ZS5FYXNpbmcuUXVhZHJhdGljLkluT3V0LENVQklDX0lOOmUuRWFzaW5nLkN1YmljLkluLENVQklDX09VVDplLkVhc2luZy5DdWJpYy5PdXQsQ1VCSUNfSU5fT1VUOmUuRWFzaW5nLkN1YmljLkluT3V0LFFVQVJUSUNfSU46ZS5FYXNpbmcuUXVhcnRpYy5JbixRVUFSVElDX09VVDplLkVhc2luZy5RdWFydGljLk91dCxRVUFSVElDX0lOX09VVDplLkVhc2luZy5RdWFydGljLkluT3V0LFFVSU5USUNfSU46ZS5FYXNpbmcuUXVpbnRpYy5JbixRVUlOVElDX09VVDplLkVhc2luZy5RdWludGljLk91dCxRVUlOVElDX0lOX09VVDplLkVhc2luZy5RdWludGljLkluT3V0LFNJTlVTT0lEQUxfSU46ZS5FYXNpbmcuU2ludXNvaWRhbC5JbixTSU5VU09JREFMX09VVDplLkVhc2luZy5TaW51c29pZGFsLk91dCxTSU5VU09JREFMX0lOX09VVDplLkVhc2luZy5TaW51c29pZGFsLkluT3V0LEVYUE9ORU5USUFMX0lOOmUuRWFzaW5nLkV4cG9uZW50aWFsLkluLEVYUE9ORU5USUFMX09VVDplLkVhc2luZy5FeHBvbmVudGlhbC5PdXQsRVhQT05FTlRJQUxfSU5fT1VUOmUuRWFzaW5nLkV4cG9uZW50aWFsLkluT3V0LENJUkNVTEFSX0lOOmUuRWFzaW5nLkNpcmN1bGFyLkluLENJUkNVTEFSX09VVDplLkVhc2luZy5DaXJjdWxhci5PdXQsQ0lSQ1VMQVJfSU5fT1VUOmUuRWFzaW5nLkNpcmN1bGFyLkluT3V0LEVMQVNUSUNfSU46ZS5FYXNpbmcuRWxhc3RpYy5JbixFTEFTVElDX09VVDplLkVhc2luZy5FbGFzdGljLk91dCxFTEFTVElDX0lOX09VVDplLkVhc2luZy5FbGFzdGljLkluT3V0LEJBQ0tfSU46ZS5FYXNpbmcuQmFjay5JbixCQUNLX09VVDplLkVhc2luZy5CYWNrLk91dCxCQUNLX0lOX09VVDplLkVhc2luZy5CYWNrLkluT3V0LEJPVU5DRV9JTjplLkVhc2luZy5Cb3VuY2UuSW4sQk9VTkNFX09VVDplLkVhc2luZy5Cb3VuY2UuT3V0LEJPVU5DRV9JTl9PVVQ6ZS5FYXNpbmcuQm91bmNlLkluT3V0fTtyZXR1cm4gdChpKX0pLGRlZmluZSgiQ29yZS9UcmlkaWFnb25hbFN5c3RlbVNvbHZlciIsWyIuL0NhcnRlc2lhbjMiLCIuL2RlZmluZWQiLCIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciB0PXt9O3JldHVybiB0LnNvbHZlPWZ1bmN0aW9uKHQsaSxuLHIpe3ZhciBvLGE9bmV3IEFycmF5KG4ubGVuZ3RoKSxzPW5ldyBBcnJheShyLmxlbmd0aCksbD1uZXcgQXJyYXkoci5sZW5ndGgpO2ZvcihvPTA7bzxzLmxlbmd0aDtvKyspc1tvXT1uZXcgZSxsW29dPW5ldyBlO2FbMF09blswXS9pWzBdLHNbMF09ZS5tdWx0aXBseUJ5U2NhbGFyKHJbMF0sMS9pWzBdLHNbMF0pO3ZhciB1O2ZvcihvPTE7bzxhLmxlbmd0aDsrK28pdT0xLyhpW29dLWFbby0xXSp0W28tMV0pLGFbb109bltvXSp1LHNbb109ZS5zdWJ0cmFjdChyW29dLGUubXVsdGlwbHlCeVNjYWxhcihzW28tMV0sdFtvLTFdLHNbb10pLHNbb10pLHNbb109ZS5tdWx0aXBseUJ5U2NhbGFyKHNbb10sdSxzW29dKTtmb3IodT0xLyhpW29dLWFbby0xXSp0W28tMV0pLHNbb109ZS5zdWJ0cmFjdChyW29dLGUubXVsdGlwbHlCeVNjYWxhcihzW28tMV0sdFtvLTFdLHNbb10pLHNbb10pLHNbb109ZS5tdWx0aXBseUJ5U2NhbGFyKHNbb10sdSxzW29dKSxsW2wubGVuZ3RoLTFdPXNbcy5sZW5ndGgtMV0sbz1sLmxlbmd0aC0yO28+PTA7LS1vKWxbb109ZS5zdWJ0cmFjdChzW29dLGUubXVsdGlwbHlCeVNjYWxhcihsW28rMV0sYVtvXSxsW29dKSxsW29dKTtyZXR1cm4gbH0sdH0pLGRlZmluZSgiQ29yZS9IZXJtaXRlU3BsaW5lIixbIi4vQ2FydGVzaWFuMyIsIi4vQ2FydGVzaWFuNCIsIi4vZGVmYXVsdFZhbHVlIiwiLi9kZWZpbmVkIiwiLi9kZWZpbmVQcm9wZXJ0aWVzIiwiLi9EZXZlbG9wZXJFcnJvciIsIi4vTGluZWFyU3BsaW5lIiwiLi9NYXRyaXg0IiwiLi9TcGxpbmUiLCIuL1RyaWRpYWdvbmFsU3lzdGVtU29sdmVyIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGModCxpLHIpe3ZhciBvPWgsYT1mLHM9bSxsPXA7by5sZW5ndGg9YS5sZW5ndGg9dC5sZW5ndGgtMSxzLmxlbmd0aD1sLmxlbmd0aD10Lmxlbmd0aDt2YXIgYztvWzBdPXNbMF09MSxhWzBdPTA7dmFyIGQ9bFswXTtmb3IobihkKXx8KGQ9bFswXT1uZXcgZSksZS5jbG9uZShpLGQpLGM9MTtjPG8ubGVuZ3RoLTE7KytjKW9bY109YVtjXT0xLHNbY109NCxkPWxbY10sbihkKXx8KGQ9bFtjXT1uZXcgZSksZS5zdWJ0cmFjdCh0W2MrMV0sdFtjLTFdLGQpLGUubXVsdGlwbHlCeVNjYWxhcihkLDMsZCk7cmV0dXJuIG9bY109MCxhW2NdPTEsc1tjXT00LGQ9bFtjXSxuKGQpfHwoZD1sW2NdPW5ldyBlKSxlLnN1YnRyYWN0KHRbYysxXSx0W2MtMV0sZCksZS5tdWx0aXBseUJ5U2NhbGFyKGQsMyxkKSxzW2MrMV09MSxkPWxbYysxXSxuKGQpfHwoZD1sW2MrMV09bmV3IGUpLGUuY2xvbmUocixkKSx1LnNvbHZlKG8scyxhLGwpfWZ1bmN0aW9uIGQodCl7dmFyIGk9aCxyPWYsbz1tLGE9cDtpLmxlbmd0aD1yLmxlbmd0aD10Lmxlbmd0aC0xLG8ubGVuZ3RoPWEubGVuZ3RoPXQubGVuZ3RoO3ZhciBzO2lbMF09clswXT0xLG9bMF09Mjt2YXIgbD1hWzBdO2ZvcihuKGwpfHwobD1hWzBdPW5ldyBlKSxlLnN1YnRyYWN0KHRbMV0sdFswXSxsKSxlLm11bHRpcGx5QnlTY2FsYXIobCwzLGwpLHM9MTtzPGkubGVuZ3RoOysrcylpW3NdPXJbc109MSxvW3NdPTQsbD1hW3NdLG4obCl8fChsPWFbc109bmV3IGUpLGUuc3VidHJhY3QodFtzKzFdLHRbcy0xXSxsKSxlLm11bHRpcGx5QnlTY2FsYXIobCwzLGwpO3JldHVybiBvW3NdPTIsbD1hW3NdLG4obCl8fChsPWFbc109bmV3IGUpLGUuc3VidHJhY3QodFtzXSx0W3MtMV0sbCksZS5tdWx0aXBseUJ5U2NhbGFyKGwsMyxsKSx1LnNvbHZlKGksbyxyLGEpfXZhciBoPVtdLG09W10sZj1bXSxwPVtdLHY9ZnVuY3Rpb24oZSl7ZT1pKGUsaS5FTVBUWV9PQkpFQ1QpO3ZhciB0PWUucG9pbnRzLG49ZS50aW1lcyxyPWUuaW5UYW5nZW50cyxvPWUub3V0VGFuZ2VudHM7dGhpcy5fdGltZXM9bix0aGlzLl9wb2ludHM9dCx0aGlzLl9pblRhbmdlbnRzPXIsdGhpcy5fb3V0VGFuZ2VudHM9byx0aGlzLl9sYXN0VGltZUluZGV4PTB9O3Iodi5wcm90b3R5cGUse3RpbWVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGltZXN9fSxwb2ludHM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wb2ludHN9fSxpblRhbmdlbnRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faW5UYW5nZW50c319LG91dFRhbmdlbnRzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3V0VGFuZ2VudHN9fX0pLHYuY3JlYXRlQzE9ZnVuY3Rpb24oZSl7ZT1pKGUsaS5FTVBUWV9PQkpFQ1QpO3ZhciB0PWUudGltZXMsbj1lLnBvaW50cyxyPWUudGFuZ2VudHMsbz1yLnNsaWNlKDAsci5sZW5ndGgtMSksYT1yLnNsaWNlKDEsci5sZW5ndGgpO3JldHVybiBuZXcgdih7dGltZXM6dCxwb2ludHM6bixpblRhbmdlbnRzOmEsb3V0VGFuZ2VudHM6b30pfSx2LmNyZWF0ZU5hdHVyYWxDdWJpYz1mdW5jdGlvbihlKXtlPWkoZSxpLkVNUFRZX09CSkVDVCk7dmFyIHQ9ZS50aW1lcyxuPWUucG9pbnRzO2lmKG4ubGVuZ3RoPDMpcmV0dXJuIG5ldyBhKHtwb2ludHM6bix0aW1lczp0fSk7dmFyIHI9ZChuKSxvPXIuc2xpY2UoMCxyLmxlbmd0aC0xKSxzPXIuc2xpY2UoMSxyLmxlbmd0aCk7cmV0dXJuIG5ldyB2KHt0aW1lczp0LHBvaW50czpuLGluVGFuZ2VudHM6cyxvdXRUYW5nZW50czpvfSl9LHYuY3JlYXRlQ2xhbXBlZEN1YmljPWZ1bmN0aW9uKGUpe2U9aShlLGkuRU1QVFlfT0JKRUNUKTt2YXIgdD1lLnRpbWVzLG49ZS5wb2ludHMscj1lLmZpcnN0VGFuZ2VudCxvPWUubGFzdFRhbmdlbnQ7aWYobi5sZW5ndGg8MylyZXR1cm4gbmV3IGEoe3BvaW50czpuLHRpbWVzOnR9KTt2YXIgcz1jKG4scixvKSxsPXMuc2xpY2UoMCxzLmxlbmd0aC0xKSx1PXMuc2xpY2UoMSxzLmxlbmd0aCk7cmV0dXJuIG5ldyB2KHt0aW1lczp0LHBvaW50czpuLGluVGFuZ2VudHM6dSxvdXRUYW5nZW50czpsfSl9LHYuaGVybWl0ZUNvZWZmaWNpZW50TWF0cml4PW5ldyBzKDIsLTMsMCwxLC0yLDMsMCwwLDEsLTIsMSwwLDEsLTEsMCwwKSx2LnByb3RvdHlwZS5maW5kVGltZUludGVydmFsPWwucHJvdG90eXBlLmZpbmRUaW1lSW50ZXJ2YWw7dmFyIGc9bmV3IHQsXz1uZXcgZTtyZXR1cm4gdi5wcm90b3R5cGUuZXZhbHVhdGU9ZnVuY3Rpb24odCxpKXtuKGkpfHwoaT1uZXcgZSk7dmFyIHI9dGhpcy5wb2ludHMsbz10aGlzLnRpbWVzLGE9dGhpcy5pblRhbmdlbnRzLGw9dGhpcy5vdXRUYW5nZW50cyx1PXRoaXMuX2xhc3RUaW1lSW5kZXg9dGhpcy5maW5kVGltZUludGVydmFsKHQsdGhpcy5fbGFzdFRpbWVJbmRleCksYz0odC1vW3VdKS8ob1t1KzFdLW9bdV0pLGQ9ZztkLno9YyxkLnk9YypjLGQueD1kLnkqYyxkLnc9MTt2YXIgaD1zLm11bHRpcGx5QnlWZWN0b3Iodi5oZXJtaXRlQ29lZmZpY2llbnRNYXRyaXgsZCxkKTtyZXR1cm4gaT1lLm11bHRpcGx5QnlTY2FsYXIoclt1XSxoLngsaSksZS5tdWx0aXBseUJ5U2NhbGFyKHJbdSsxXSxoLnksXyksZS5hZGQoaSxfLGkpLGUubXVsdGlwbHlCeVNjYWxhcihsW3VdLGgueixfKSxlLmFkZChpLF8saSksZS5tdWx0aXBseUJ5U2NhbGFyKGFbdV0saC53LF8pLGUuYWRkKGksXyxpKX0sdn0pLGRlZmluZSgiU2NlbmUvQ3VsbGluZ1ZvbHVtZSIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0ludGVyc2VjdCJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1mdW5jdGlvbih0KXt0aGlzLnBsYW5lcz1lKHQsW10pfTtyZXR1cm4gci5wcm90b3R5cGUuY29tcHV0ZVZpc2liaWxpdHk9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMucGxhbmVzLGk9ITEscj0wLG89dC5sZW5ndGg7bz5yOysrcil7dmFyIGE9ZS5pbnRlcnNlY3QodFtyXSk7aWYoYT09PW4uT1VUU0lERSlyZXR1cm4gbi5PVVRTSURFO2E9PT1uLklOVEVSU0VDVElORyYmKGk9ITApfXJldHVybiBpP24uSU5URVJTRUNUSU5HOm4uSU5TSURFfSxyfSksZGVmaW5lKCJTY2VuZS9QZXJzcGVjdGl2ZU9mZkNlbnRlckZydXN0dW0iLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0ZXNpYW40IiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi9DdWxsaW5nVm9sdW1lIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiB1KGUpe3ZhciB0PWUudG9wLGk9ZS5ib3R0b20sbj1lLnJpZ2h0LHI9ZS5sZWZ0LG89ZS5uZWFyLGE9ZS5mYXI7KHQhPT1lLl90b3B8fGkhPT1lLl9ib3R0b218fHIhPT1lLl9sZWZ0fHxuIT09ZS5fcmlnaHR8fG8hPT1lLl9uZWFyfHxhIT09ZS5fZmFyKSYmKGUuX2xlZnQ9cixlLl9yaWdodD1uLGUuX3RvcD10LGUuX2JvdHRvbT1pLGUuX25lYXI9byxlLl9mYXI9YSxlLl9wZXJzcGVjdGl2ZU1hdHJpeD1zLmNvbXB1dGVQZXJzcGVjdGl2ZU9mZkNlbnRlcihyLG4saSx0LG8sYSxlLl9wZXJzcGVjdGl2ZU1hdHJpeCksZS5faW5maW5pdGVQZXJzcGVjdGl2ZT1zLmNvbXB1dGVJbmZpbml0ZVBlcnNwZWN0aXZlT2ZmQ2VudGVyKHIsbixpLHQsbyxlLl9pbmZpbml0ZVBlcnNwZWN0aXZlKSl9dmFyIGM9ZnVuY3Rpb24oKXt0aGlzLmxlZnQ9dm9pZCAwLHRoaXMuX2xlZnQ9dm9pZCAwLHRoaXMucmlnaHQ9dm9pZCAwLHRoaXMuX3JpZ2h0PXZvaWQgMCx0aGlzLnRvcD12b2lkIDAsdGhpcy5fdG9wPXZvaWQgMCx0aGlzLmJvdHRvbT12b2lkIDAsdGhpcy5fYm90dG9tPXZvaWQgMCx0aGlzLm5lYXI9MSx0aGlzLl9uZWFyPXRoaXMubmVhcix0aGlzLmZhcj01ZTgsdGhpcy5fZmFyPXRoaXMuZmFyLHRoaXMuX2N1bGxpbmdWb2x1bWU9bmV3IGwsdGhpcy5fcGVyc3BlY3RpdmVNYXRyaXg9bmV3IHMsdGhpcy5faW5maW5pdGVQZXJzcGVjdGl2ZT1uZXcgc307byhjLnByb3RvdHlwZSx7cHJvamVjdGlvbk1hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHUodGhpcyksdGhpcy5fcGVyc3BlY3RpdmVNYXRyaXh9fSxpbmZpbml0ZVByb2plY3Rpb25NYXRyaXg6e2dldDpmdW5jdGlvbigpe3JldHVybiB1KHRoaXMpLHRoaXMuX2luZmluaXRlUGVyc3BlY3RpdmV9fX0pO3ZhciBkPW5ldyB0LGg9bmV3IHQsbT1uZXcgdCxmPW5ldyB0O3JldHVybiBjLnByb3RvdHlwZS5jb21wdXRlQ3VsbGluZ1ZvbHVtZT1mdW5jdGlvbihlLG4sbyl7dmFyIGE9dGhpcy5fY3VsbGluZ1ZvbHVtZS5wbGFuZXMscz10aGlzLnRvcCxsPXRoaXMuYm90dG9tLHU9dGhpcy5yaWdodCxjPXRoaXMubGVmdCxwPXRoaXMubmVhcix2PXRoaXMuZmFyLGc9dC5jcm9zcyhuLG8sZCksXz1oO3QubXVsdGlwbHlCeVNjYWxhcihuLHAsXyksdC5hZGQoZSxfLF8pO3ZhciB5PW07dC5tdWx0aXBseUJ5U2NhbGFyKG4sdix5KSx0LmFkZChlLHkseSk7dmFyIEM9Zjt0Lm11bHRpcGx5QnlTY2FsYXIoZyxjLEMpLHQuYWRkKF8sQyxDKSx0LnN1YnRyYWN0KEMsZSxDKSx0Lm5vcm1hbGl6ZShDLEMpLHQuY3Jvc3MoQyxvLEMpO3ZhciB3PWFbMF07cmV0dXJuIHIodyl8fCh3PWFbMF09bmV3IGkpLHcueD1DLngsdy55PUMueSx3Lno9Qy56LHcudz0tdC5kb3QoQyxlKSx0Lm11bHRpcGx5QnlTY2FsYXIoZyx1LEMpLHQuYWRkKF8sQyxDKSx0LnN1YnRyYWN0KEMsZSxDKSx0Lm5vcm1hbGl6ZShDLEMpLHQuY3Jvc3MobyxDLEMpLHc9YVsxXSxyKHcpfHwodz1hWzFdPW5ldyBpKSx3Lng9Qy54LHcueT1DLnksdy56PUMueix3Lnc9LXQuZG90KEMsZSksdC5tdWx0aXBseUJ5U2NhbGFyKG8sbCxDKSx0LmFkZChfLEMsQyksdC5zdWJ0cmFjdChDLGUsQyksdC5ub3JtYWxpemUoQyxDKSx0LmNyb3NzKGcsQyxDKSx3PWFbMl0scih3KXx8KHc9YVsyXT1uZXcgaSksdy54PUMueCx3Lnk9Qy55LHcuej1DLnosdy53PS10LmRvdChDLGUpLHQubXVsdGlwbHlCeVNjYWxhcihvLHMsQyksdC5hZGQoXyxDLEMpLHQuc3VidHJhY3QoQyxlLEMpLHQubm9ybWFsaXplKEMsQyksdC5jcm9zcyhDLGcsQyksdz1hWzNdLHIodyl8fCh3PWFbM109bmV3IGkpLHcueD1DLngsdy55PUMueSx3Lno9Qy56LHcudz0tdC5kb3QoQyxlKSx3PWFbNF0scih3KXx8KHc9YVs0XT1uZXcgaSksdy54PW4ueCx3Lnk9bi55LHcuej1uLnosdy53PS10LmRvdChuLF8pLHQubmVnYXRlKG4sQyksdz1hWzVdLHIodyl8fCh3PWFbNV09bmV3IGkpLHcueD1DLngsdy55PUMueSx3Lno9Qy56LHcudz0tdC5kb3QoQyx5KSx0aGlzLl9jdWxsaW5nVm9sdW1lfSxjLnByb3RvdHlwZS5nZXRQaXhlbFNpemU9ZnVuY3Rpb24odCxpLG8pe3UodGhpcyk7dmFyIGE9dC54LHM9dC55O2k9bihpLHRoaXMubmVhcik7dmFyIGw9MS90aGlzLm5lYXIsYz10aGlzLnRvcCpsLGQ9MippKmMvcztjPXRoaXMucmlnaHQqbDt2YXIgaD0yKmkqYy9hO3JldHVybiByKG8pPyhvLng9aCxvLnk9ZCxvKTpuZXcgZShoLGQpfSxjLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gcihlKXx8KGU9bmV3IGMpLGUucmlnaHQ9dGhpcy5yaWdodCxlLmxlZnQ9dGhpcy5sZWZ0LGUudG9wPXRoaXMudG9wLGUuYm90dG9tPXRoaXMuYm90dG9tLGUubmVhcj10aGlzLm5lYXIsZS5mYXI9dGhpcy5mYXIsZS5fbGVmdD12b2lkIDAsZS5fcmlnaHQ9dm9pZCAwLGUuX3RvcD12b2lkIDAsZS5fYm90dG9tPXZvaWQgMCxlLl9uZWFyPXZvaWQgMCxlLl9mYXI9dm9pZCAwLGV9LGMucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gcihlKSYmdGhpcy5yaWdodD09PWUucmlnaHQmJnRoaXMubGVmdD09PWUubGVmdCYmdGhpcy50b3A9PT1lLnRvcCYmdGhpcy5ib3R0b209PT1lLmJvdHRvbSYmdGhpcy5uZWFyPT09ZS5uZWFyJiZ0aGlzLmZhcj09PWUuZmFyfSxjfSksZGVmaW5lKCJTY2VuZS9QZXJzcGVjdGl2ZUZydXN0dW0iLFsiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4vUGVyc3BlY3RpdmVPZmZDZW50ZXJGcnVzdHVtIl0sZnVuY3Rpb24oZSx0LGksbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHIoZSl7dmFyIHQ9ZS5fb2ZmQ2VudGVyRnJ1c3R1bTsoZS5mb3YhPT1lLl9mb3Z8fGUuYXNwZWN0UmF0aW8hPT1lLl9hc3BlY3RSYXRpb3x8ZS5uZWFyIT09ZS5fbmVhcnx8ZS5mYXIhPT1lLl9mYXIpJiYoZS5fYXNwZWN0UmF0aW89ZS5hc3BlY3RSYXRpbyxlLl9mb3Y9ZS5mb3YsZS5fZm92eT1lLmFzcGVjdFJhdGlvPD0xP2UuZm92OjIqTWF0aC5hdGFuKE1hdGgudGFuKC41KmUuZm92KS9lLmFzcGVjdFJhdGlvKSxlLl9uZWFyPWUubmVhcixlLl9mYXI9ZS5mYXIsdC50b3A9ZS5uZWFyKk1hdGgudGFuKC41KmUuX2ZvdnkpLHQuYm90dG9tPS10LnRvcCx0LnJpZ2h0PWUuYXNwZWN0UmF0aW8qdC50b3AsdC5sZWZ0PS10LnJpZ2h0LHQubmVhcj1lLm5lYXIsdC5mYXI9ZS5mYXIpfXZhciBvPWZ1bmN0aW9uKCl7dGhpcy5fb2ZmQ2VudGVyRnJ1c3R1bT1uZXcgbix0aGlzLmZvdj12b2lkIDAsdGhpcy5fZm92PXZvaWQgMCx0aGlzLl9mb3Z5PXZvaWQgMCx0aGlzLmFzcGVjdFJhdGlvPXZvaWQgMCx0aGlzLl9hc3BlY3RSYXRpbz12b2lkIDAsdGhpcy5uZWFyPTEsdGhpcy5fbmVhcj10aGlzLm5lYXIsdGhpcy5mYXI9NWU4LHRoaXMuX2Zhcj10aGlzLmZhcn07cmV0dXJuIHQoby5wcm90b3R5cGUse3Byb2plY3Rpb25NYXRyaXg6e2dldDpmdW5jdGlvbigpe3JldHVybiByKHRoaXMpLHRoaXMuX29mZkNlbnRlckZydXN0dW0ucHJvamVjdGlvbk1hdHJpeH19LGluZmluaXRlUHJvamVjdGlvbk1hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcyksdGhpcy5fb2ZmQ2VudGVyRnJ1c3R1bS5pbmZpbml0ZVByb2plY3Rpb25NYXRyaXh9fSxmb3Z5OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzKSx0aGlzLl9mb3Z5fX19KSxvLnByb3RvdHlwZS5jb21wdXRlQ3VsbGluZ1ZvbHVtZT1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIHIodGhpcyksdGhpcy5fb2ZmQ2VudGVyRnJ1c3R1bS5jb21wdXRlQ3VsbGluZ1ZvbHVtZShlLHQsaSl9LG8ucHJvdG90eXBlLmdldFBpeGVsU2l6ZT1mdW5jdGlvbihlLHQsaSl7cmV0dXJuIHIodGhpcyksdGhpcy5fb2ZmQ2VudGVyRnJ1c3R1bS5nZXRQaXhlbFNpemUoZSx0LGkpfSxvLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbih0KXtyZXR1cm4gZSh0KXx8KHQ9bmV3IG8pLHQuYXNwZWN0UmF0aW89dGhpcy5hc3BlY3RSYXRpbyx0LmZvdj10aGlzLmZvdix0Lm5lYXI9dGhpcy5uZWFyLHQuZmFyPXRoaXMuZmFyLHQuX2FzcGVjdFJhdGlvPXZvaWQgMCx0Ll9mb3Y9dm9pZCAwLHQuX25lYXI9dm9pZCAwLHQuX2Zhcj12b2lkIDAsdGhpcy5fb2ZmQ2VudGVyRnJ1c3R1bS5jbG9uZSh0Ll9vZmZDZW50ZXJGcnVzdHVtKSx0fSxvLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24odCl7cmV0dXJuIGUodCk/KHIodGhpcykscih0KSx0aGlzLmZvdj09PXQuZm92JiZ0aGlzLmFzcGVjdFJhdGlvPT09dC5hc3BlY3RSYXRpbyYmdGhpcy5uZWFyPT09dC5uZWFyJiZ0aGlzLmZhcj09PXQuZmFyJiZ0aGlzLl9vZmZDZW50ZXJGcnVzdHVtLmVxdWFscyh0Ll9vZmZDZW50ZXJGcnVzdHVtKSk6ITF9LG99KSxkZWZpbmUoIlNjZW5lL0NhbWVyYUZsaWdodFBhdGgiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMiLCIuLi9Db3JlL2Nsb25lIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FYXNpbmdGdW5jdGlvbiIsIi4uL0NvcmUvSGVybWl0ZVNwbGluZSIsIi4uL0NvcmUvTGluZWFyU3BsaW5lIiwiLi4vQ29yZS9NYXRoIiwiLi4vQ29yZS9NYXRyaXgzIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9RdWF0ZXJuaW9uIiwiLi4vQ29yZS9RdWF0ZXJuaW9uU3BsaW5lIiwiLi9QZXJzcGVjdGl2ZUZydXN0dW0iLCIuL1BlcnNwZWN0aXZlT2ZmQ2VudGVyRnJ1c3R1bSIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBfKGUsaSxuKXtyZXR1cm4gdC5jcm9zcyhlLGksRCksdC5jcm9zcyhELGUsTyksSVswXT1ELngsSVsxXT1PLngsSVsyXT0tZS54LElbM109RC55LElbNF09Ty55LElbNV09LWUueSxJWzZdPUQueixJWzddPU8ueixJWzhdPS1lLnosbS5mcm9tUm90YXRpb25NYXRyaXgoSSxuKX1mdW5jdGlvbiB5KGUsdCxpKXt2YXIgbixyLG87aWYoZSBpbnN0YW5jZW9mIHApe3ZhciBhPU1hdGgudGFuKC41KmUuZm92eSk7cmV0dXJuIG49ZS5uZWFyLHI9ZS5uZWFyKmEsbz1lLmFzcGVjdFJhdGlvKnIsTWF0aC5tYXgodCpuL28saSpuL3IpfXJldHVybiBlIGluc3RhbmNlb2Ygdj8obj1lLm5lYXIscj1lLnRvcCxvPWUucmlnaHQsTWF0aC5tYXgodCpuL28saSpuL3IpKTpNYXRoLm1heCh0LGkpfWZ1bmN0aW9uIEMoZSxpLG4scixvLGEscyl7dmFyIHUsaCxmLHA9aS5tYXhpbXVtUmFkaXVzLHY9ZS5mcnVzdHVtLGc9eSh2LHAscCksXz10LmRvdCh0Lm5vcm1hbGl6ZShuLFIpLHQubm9ybWFsaXplKGEsTCkpO2lmKHQubWFnbml0dWRlKG4pPmcpaD1wKy42KihnLXApLGY9LjM1O2Vsc2V7dmFyIEM9dC5zdWJ0cmFjdChuLGEsUik7aD10Lm1hZ25pdHVkZSh0LmFkZCh0Lm11bHRpcGx5QnlTY2FsYXIoQywuNSxMKSxhLEwpKTt2YXIgdz10Lm1hZ25pdHVkZSh0Lm11bHRpcGx5QnlTY2FsYXIocix0LmRvdChDLHIpLEwpKSxFPXQubWFnbml0dWRlKHQubXVsdGlwbHlCeVNjYWxhcihvLHQuZG90KEMsbyksTCkpO2grPXkodix3LEUpLGY9Yy5jbGFtcChfKzEsLjI1LC41KX12YXIgYixTLFQseD10Lm11bHRpcGx5QnlTY2FsYXIodC5ub3JtYWxpemUoYSxMKSxoLEwpLEE9dC5tdWx0aXBseUJ5U2NhbGFyKHQubm9ybWFsaXplKG4sUiksaCxSKSxQPW5ldyB0O2lmKHQubWFnbml0dWRlKGEpPmcmJl8+Ljc1KVA9dC5hZGQodC5tdWx0aXBseUJ5U2NhbGFyKHQuc3VidHJhY3QobixhLFApLC41LFApLGEsUCksdT1bbixQLGFdO2Vsc2UgaWYodC5tYWduaXR1ZGUobik+ZyYmXz4wKVA9dC5hZGQodC5tdWx0aXBseUJ5U2NhbGFyKHQuc3VidHJhY3Qobix4LFApLC41LFApLHgsUCksdT1bbixQLGFdO2Vsc2V7dT1bbl0sUz1jLmFjb3NDbGFtcGVkKHQuZG90KHQubm9ybWFsaXplKEEsTiksdC5ub3JtYWxpemUoeCx6KSkpLGI9dC5jcm9zcyh4LEEsTiksdC5lcXVhbHNFcHNpbG9uKGIsdC5aRVJPLGMuRVBTSUxPTjYpJiYoYj10LlVOSVRfWik7Zm9yKHZhciBNPWYqUyxJPVMtTSxEPUk7RD4wO0QtPU0pVD1kLmZyb21RdWF0ZXJuaW9uKG0uZnJvbUF4aXNBbmdsZShiLEQpLEIpLHUucHVzaChkLm11bHRpcGx5QnlWZWN0b3IoVCx4LG5ldyB0KSk7dS5wdXNoKGEpfWZvcih2YXIgTz1uZXcgQXJyYXkodS5sZW5ndGgpLEY9cy8odS5sZW5ndGgtMSksVj0wO1Y8dS5sZW5ndGg7KytWKU9bVl09VipGO3JldHVybiBsLmNyZWF0ZU5hdHVyYWxDdWJpYyh7cG9pbnRzOnUsdGltZXM6T30pfWZ1bmN0aW9uIHcoZSxpLG4scixhKXt2YXIgcz1lLnBvaW50cyxsPW5ldyBBcnJheShzLmxlbmd0aCk7bFswXT1fKGksbik7Zm9yKHZhciB1LGM9cy5sZW5ndGgtMSxkPTE7Yz5kOysrZCl1PXNbZF0sdC5ub3JtYWxpemUodC5uZWdhdGUodSxGKSxGKSx0Lm5vcm1hbGl6ZSh0LmNyb3NzKEYsdC5VTklUX1osViksViksdC5jcm9zcyhWLEYsayksbFtkXT1fKEYsayxVKTtyZXR1cm4gdT1zW2NdLG8ocikmJm8oYSk/bFtjXT1fKHIsYSk6KHQubm9ybWFsaXplKHQubmVnYXRlKHUsRiksRiksdC5ub3JtYWxpemUodC5jcm9zcyhGLHQuVU5JVF9aLFYpLFYpLHQuY3Jvc3MoVixGLGspLGxbY109XyhGLGssVSkpLG5ldyBmKHtwb2ludHM6bCx0aW1lczplLnRpbWVzfSl9ZnVuY3Rpb24gRShlLGksbixyLG8pe3ZhciBhPWUuY2FtZXJhLHM9ZS5tYXBQcm9qZWN0aW9uLmVsbGlwc29pZCxsPWEuY2FtZXJhVG9Xb3JsZENvb3JkaW5hdGVzUG9pbnQoYS5wb3NpdGlvbixXKSx1PWEuY2FtZXJhVG9Xb3JsZENvb3JkaW5hdGVzVmVjdG9yKGEuZGlyZWN0aW9uLEcpLGM9YS5jYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXNWZWN0b3IoYS51cCxIKSxtPXQuY3Jvc3ModSxjLHEpLGY9QyhhLHMsbCxjLG0saSxuKSxwPXcoZix1LGMscixvKSx2PWZ1bmN0aW9uKGUpe3ZhciBpPWUudGltZSxuPXAuZXZhbHVhdGUoaSk7ZC5mcm9tUXVhdGVybmlvbihuLE0pLGguY2xvbmUoYS50cmFuc2Zvcm0saiksaC5jbG9uZShoLklERU5USVRZLGEudHJhbnNmb3JtKSxhLnBvc2l0aW9uPWYuZXZhbHVhdGUoaSxhLnBvc2l0aW9uKSxhLnJpZ2h0PWQuZ2V0Um93KE0sMCxhLnJpZ2h0KSxhLnVwPWQuZ2V0Um93KE0sMSxhLnVwKSxhLmRpcmVjdGlvbj10Lm5lZ2F0ZShkLmdldFJvdyhNLDIsYS5kaXJlY3Rpb24pLGEuZGlyZWN0aW9uKSxhLnNldFRyYW5zZm9ybShqKX07cmV0dXJuIHZ9ZnVuY3Rpb24gYihpLG4scixvLGEpe2lmKGMuZXF1YWxzRXBzaWxvbihlLm1hZ25pdHVkZShyKSxlLm1hZ25pdHVkZShvKSwxZTQpKXJldHVybiBuZXcgdSh7cG9pbnRzOltyLG9dLHRpbWVzOlswLGFdfSk7dmFyIHMsZCxoPW4ubWF4aW11bVJhZGl1cyxtPWkuZnJ1c3R1bSxmPXkobSxNYXRoLlBJKmgsYy5QSV9PVkVSX1RXTypoKSxwPS41O2lmKHIuej5mKWQ9LjYqZjtlbHNle3ZhciB2PXQuc3VidHJhY3QocixvLFkpO2Q9eShtLE1hdGguYWJzKHYueSksTWF0aC5hYnModi54KSl9dmFyIGc9dC5jbG9uZShvKTtnLno9ZDt2YXIgXz10LmNsb25lKHIpO18uej1kO3ZhciBDPW5ldyB0O2lmKG8uej5mKUM9dC5hZGQodC5tdWx0aXBseUJ5U2NhbGFyKHQuc3VidHJhY3QocixvLEMpLC41LEMpLG8sQykscz1bcixDLG9dO2Vsc2UgaWYoci56PmYpQz10LmFkZCh0Lm11bHRpcGx5QnlTY2FsYXIodC5zdWJ0cmFjdChyLGcsQyksLjUsQyksZyxDKSxzPVtyLEMsb107ZWxzZXtzPVtyXTt2YXIgdz10LnN1YnRyYWN0KF8sZyxZKSxFPXQubWFnbml0dWRlKHcpO3Qubm9ybWFsaXplKHcsdyk7Zm9yKHZhciBiPXAqRSxTPUUtYixUPVM7VD4wO1QtPWIpe3ZhciB4PW5ldyB0O3MucHVzaCh0LmFkZCh0Lm11bHRpcGx5QnlTY2FsYXIodyxULHgpLGcseCkpfXMucHVzaChvKX1mb3IodmFyIEE9bmV3IEFycmF5KHMubGVuZ3RoKSxQPWEvKHMubGVuZ3RoLTEpLE09MDtNPHMubGVuZ3RoOysrTSlBW01dPU0qUDtyZXR1cm4gbC5jcmVhdGVOYXR1cmFsQ3ViaWMoe3BvaW50czpzLHRpbWVzOkF9KX1mdW5jdGlvbiBTKGUsdCxpLG4pe3ZhciByPXQucG9pbnRzLGE9bmV3IEFycmF5KHIubGVuZ3RoKTthWzBdPV8oZS5kaXJlY3Rpb24sZS51cCk7Zm9yKHZhciBzPXIubGVuZ3RoLTEsbD0xO3M+bDsrK2wpYVtsXT1LO3JldHVybiBhW3NdPW8oaSkmJm8obik/XyhpLG4pOkssbmV3IGYoe3BvaW50czphLHRpbWVzOnQudGltZXN9KX1mdW5jdGlvbiBUKGUsaSxuLHIsbyl7dmFyIGE9ZS5jYW1lcmEscz1lLm1hcFByb2plY3Rpb24uZWxsaXBzb2lkLGw9YihhLHMsdC5jbG9uZShhLnBvc2l0aW9uKSxpLG4pLHU9UyhhLGwscixvKSxjPWZ1bmN0aW9uKGUpe3ZhciBpPWUudGltZSxuPXUuZXZhbHVhdGUoaSk7ZC5mcm9tUXVhdGVybmlvbihuLE0pLGguY2xvbmUoYS50cmFuc2Zvcm0saiksaC5jbG9uZShoLklERU5USVRZLGEudHJhbnNmb3JtKSxhLnBvc2l0aW9uPWwuZXZhbHVhdGUoaSxhLnBvc2l0aW9uKSxhLnJpZ2h0PWQuZ2V0Um93KE0sMCxhLnJpZ2h0KSxhLnVwPWQuZ2V0Um93KE0sMSxhLnVwKSxhLmRpcmVjdGlvbj10Lm5lZ2F0ZShkLmdldFJvdyhNLDIsYS5kaXJlY3Rpb24pLGEuZGlyZWN0aW9uKSxhLnNldFRyYW5zZm9ybShqKX07cmV0dXJuIGN9ZnVuY3Rpb24geChlLGksbixyLG8pe3ZhciBhPWUuY2FtZXJhLHM9ZS5tYXBQcm9qZWN0aW9uLmVsbGlwc29pZCxsPXQuY2xvbmUoYS5wb3NpdGlvbik7bC56PWEuZnJ1c3R1bS5yaWdodC1hLmZydXN0dW0ubGVmdDt2YXIgdT1iKGEscyxsLGksbiksYz1TKGEsdSx0Lm5lZ2F0ZSh0LlVOSVRfWixuZXcgdCksbyksaD1hLnBvc2l0aW9uLnosbT1mdW5jdGlvbihlKXt2YXIgaT1lLnRpbWUsbj1jLmV2YWx1YXRlKGkpO2QuZnJvbVF1YXRlcm5pb24obixNKSxhLnBvc2l0aW9uPXUuZXZhbHVhdGUoaSk7dmFyIHI9YS5wb3NpdGlvbi56O2EucG9zaXRpb24uej1oLGEucmlnaHQ9ZC5nZXRSb3coTSwwLGEucmlnaHQpLGEudXA9ZC5nZXRSb3coTSwxLGEudXApLGEuZGlyZWN0aW9uPXQubmVnYXRlKGQuZ2V0Um93KE0sMixhLmRpcmVjdGlvbiksYS5kaXJlY3Rpb24pO3ZhciBvPWEuZnJ1c3R1bSxzPW8udG9wL28ucmlnaHQsbD0uNSooci0oby5yaWdodC1vLmxlZnQpKTtvLnJpZ2h0Kz1sLG8ubGVmdC09bCxvLnRvcD1zKm8ucmlnaHQsby5ib3R0b209LW8udG9wfTtyZXR1cm4gbX12YXIgQT17fSxQPW5ldyB0LE09bmV3IGQsST1uZXcgZCxEPW5ldyB0LE89bmV3IHQsUj1uZXcgdCxMPW5ldyB0LE49bmV3IHQsej1uZXcgdCxCPW5ldyBkLEY9bmV3IHQsVj1uZXcgdCxrPW5ldyB0LFU9bmV3IG0sVz1uZXcgdCxHPW5ldyB0LEg9bmV3IHQscT1uZXcgdCxqPW5ldyBoLFk9bmV3IHQsWD10Lm5lZ2F0ZSh0LlVOSVRfWixuZXcgdCksWj1uZXcgdDtaPXQubm9ybWFsaXplKHQuY3Jvc3MoWCx0LlVOSVRfWSxaKSxaKTt2YXIgSj10LmNyb3NzKFosWCxuZXcgdCksSz1fKFgsSiksUT1uZXcgdCwkPW5ldyB0LGV0PW5ldyB0LHR0PW5ldyBpLGl0PW5ldyB0O3JldHVybiBBLmNyZWF0ZVR3ZWVuPWZ1bmN0aW9uKGksbil7bj1yKG4sci5FTVBUWV9PQkpFQ1QpO3ZhciBhPW4uZGVzdGluYXRpb24sbD1uLmRpcmVjdGlvbix1PW4udXA7aWYoaS5tb2RlPT09Zy5NT1JQSElORylyZXR1cm57c3RhcnRPYmplY3Q6e30sc3RvcE9iamVjdDp7fSxkdXJhdGlvbjowfTt2YXIgZD1yKG4uY29udmVydCwhMCk7aWYoZCYmaS5tb2RlIT09Zy5TQ0VORTNEKXt2YXIgaD1pLm1hcFByb2plY3Rpb24sbT1oLmVsbGlwc29pZDttLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGEsdHQpLGE9aC5wcm9qZWN0KHR0LGl0KX12YXIgZj1yKG4uZHVyYXRpb24sMykscD1pLnNjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlcjtwLmVuYWJsZUlucHV0cz0hMTt2YXIgdj1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpeyJmdW5jdGlvbiI9PXR5cGVvZiBlJiZlKCkscC5lbmFibGVJbnB1dHM9ITB9O3JldHVybiB0fSxfPXYobi5jb21wbGV0ZSkseT12KG4uY2FuY2VsKSxDPWkuY2FtZXJhLHc9bi5lbmRUcmFuc2Zvcm07byh3KSYmQy5zZXRUcmFuc2Zvcm0odyk7dmFyIGI9Qy5mcnVzdHVtO2lmKGkubW9kZT09PWcuU0NFTkUyRCl7aWYoZS5lcXVhbHNFcHNpbG9uKEMucG9zaXRpb24sYSxjLkVQU0lMT042KSYmYy5lcXVhbHNFcHNpbG9uKE1hdGgubWF4KGIucmlnaHQtYi5sZWZ0LGIudG9wLWIuYm90dG9tKSxhLnosYy5FUFNJTE9ONikpcmV0dXJue3N0YXJ0T2JqZWN0Ont9LHN0b3BPYmplY3Q6e30sZHVyYXRpb246MCxjb21wbGV0ZTpfLGNhbmNlbDp5fX1lbHNlIGlmKHQuZXF1YWxzRXBzaWxvbihhLEMucG9zaXRpb24sYy5FUFNJTE9ONikpcmV0dXJue3N0YXJ0T2JqZWN0Ont9LHN0b3BPYmplY3Q6e30sZHVyYXRpb246MCxjb21wbGV0ZTpfLGNhbmNlbDp5fTtpZigwPj1mKXt2YXIgUz1mdW5jdGlvbigpe3ZhciBlPWE7aWYoaS5tb2RlPT09Zy5TQ0VORTNEPyhvKG4uZGlyZWN0aW9uKXx8byhuLnVwKT8oUT1uLmRpcmVjdGlvbiwkPXQubm9ybWFsaXplKHQuY3Jvc3MoUSxuLnVwLCQpLCQpKTooUT10Lm5vcm1hbGl6ZSh0Lm5lZ2F0ZShlLFEpLFEpLCQ9dC5ub3JtYWxpemUodC5jcm9zcyhRLHQuVU5JVF9aLCQpLCQpKSxldD1yKG4udXAsdC5jcm9zcygkLFEsZXQpKSk6KG8obi5kaXJlY3Rpb24pfHxvKG4udXApPyhRPW4uZGlyZWN0aW9uLCQ9dC5ub3JtYWxpemUodC5jcm9zcyhRLG4udXAsJCksJCkpOihRPXQubmVnYXRlKHQuVU5JVF9aLFEpLCQ9dC5ub3JtYWxpemUodC5jcm9zcyhRLHQuVU5JVF9ZLCQpLCQpKSxldD1yKG4udXAsdC5jcm9zcygkLFEsZXQpKSksdC5jbG9uZShlLEMucG9zaXRpb24pLHQuY2xvbmUoUSxDLmRpcmVjdGlvbiksdC5jbG9uZShldCxDLnVwKSx0LmNsb25lKCQsQy5yaWdodCksaS5tb2RlPT09Zy5TQ0VORTJEKXt2YXIgcz1DLnBvc2l0aW9uLnosbD1iLnRvcC9iLnJpZ2h0LHU9LjUqKHMtKGIucmlnaHQtYi5sZWZ0KSk7Yi5yaWdodCs9dSxiLmxlZnQtPXUsYi50b3A9bCpiLnJpZ2h0LGIuYm90dG9tPS1iLnRvcH0iZnVuY3Rpb24iPT10eXBlb2YgXyYmXygpfTtyZXR1cm57c3RhcnRPYmplY3Q6e30sc3RvcE9iamVjdDp7fSxkdXJhdGlvbjowLGNvbXBsZXRlOlMsY2FuY2VsOnl9fXZhciBBO3JldHVybiBBPWkubW9kZT09PWcuU0NFTkUzRD9FKGksYSxmLGwsdSk6aS5tb2RlPT09Zy5TQ0VORTJEP3goaSxhLGYsbCx1KTpUKGksYSxmLGwsdSkse2R1cmF0aW9uOmYsZWFzaW5nRnVuY3Rpb246cy5TSU5VU09JREFMX0lOX09VVCxzdGFydE9iamVjdDp7dGltZTowfSxzdG9wT2JqZWN0Ont0aW1lOmZ9LHVwZGF0ZTpBLGNvbXBsZXRlOl8sY2FuY2VsOnl9fSxBLmNyZWF0ZVR3ZWVuUmVjdGFuZ2xlPWZ1bmN0aW9uKGUsdCl7dD1yKHQsci5FTVBUWV9PQkpFQ1QpO3ZhciBpPXQuZGVzdGluYXRpb24sbz1uKHQpO3JldHVybiBlLmNhbWVyYS5nZXRSZWN0YW5nbGVDYW1lcmFDb29yZGluYXRlcyhpLFApLG8uZGVzdGluYXRpb249UCxvLmNvbnZlcnQ9ITEsdGhpcy5jcmVhdGVUd2VlbihlLG8pfSxBfSksZGVmaW5lKCJTY2VuZS9DYW1lcmEiLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0ZXNpYW40IiwiLi4vQ29yZS9DYXJ0b2dyYXBoaWMiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0Vhc2luZ0Z1bmN0aW9uIiwiLi4vQ29yZS9FbGxpcHNvaWQiLCIuLi9Db3JlL0ludGVyc2VjdGlvblRlc3RzIiwiLi4vQ29yZS9NYXRoIiwiLi4vQ29yZS9NYXRyaXgzIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9RdWF0ZXJuaW9uIiwiLi4vQ29yZS9SYXkiLCIuLi9Db3JlL1JlY3RhbmdsZSIsIi4uL0NvcmUvVHJhbnNmb3JtcyIsIi4vQ2FtZXJhRmxpZ2h0UGF0aCIsIi4vUGVyc3BlY3RpdmVGcnVzdHVtIiwiLi9TY2VuZU1vZGUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHcoZSl7dmFyIGk9ZS5fcmlnaHQsbj1lLl91cCxyPWUuX2RpcmVjdGlvbixvPWUuX3Bvc2l0aW9uLGE9ZS5fdmlld01hdHJpeDthWzBdPWkueCxhWzFdPW4ueCxhWzJdPS1yLngsYVszXT0wLGFbNF09aS55LGFbNV09bi55LGFbNl09LXIueSxhWzddPTAsYVs4XT1pLnosYVs5XT1uLnosYVsxMF09LXIueixhWzExXT0wLGFbMTJdPS10LmRvdChpLG8pLGFbMTNdPS10LmRvdChuLG8pLGFbMTRdPXQuZG90KHIsbyksYVsxNV09MSxtLm11bHRpcGx5KGEsZS5fYWN0dWFsSW52VHJhbnNmb3JtLGUuX3ZpZXdNYXRyaXgpLG0uaW52ZXJzZVRyYW5zZm9ybWF0aW9uKGUuX3ZpZXdNYXRyaXgsZS5faW52Vmlld01hdHJpeCl9ZnVuY3Rpb24gRShlKXt2YXIgbj1lLl9wcm9qZWN0aW9uLHI9bi5lbGxpcHNvaWQsbz1tLmdldENvbHVtbihlLl90cmFuc2Zvcm0sMyxldCksYT1yLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKG8sSykscz1uLnByb2plY3QoYSxRKSxsPXR0O2wueD1zLnosbC55PXMueCxsLno9cy55LGwudz0xO3ZhciB1PWkuYWRkKG0uZ2V0Q29sdW1uKGUuX3RyYW5zZm9ybSwwLCQpLG8sJCk7ci5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyh1LGEpLG4ucHJvamVjdChhLHMpO3ZhciBjPWl0O2MueD1zLnosYy55PXMueCxjLno9cy55LGMudz0wLHQuc3VidHJhY3QoYyxsLGMpO3ZhciBkPWkuYWRkKG0uZ2V0Q29sdW1uKGUuX3RyYW5zZm9ybSwxLCQpLG8sJCk7ci5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhkLGEpLG4ucHJvamVjdChhLHMpO3ZhciBoPW50O2gueD1zLnosaC55PXMueCxoLno9cy55LGgudz0wLHQuc3VidHJhY3QoaCxsLGgpO3ZhciBmPXJ0O3QuY3Jvc3MoYyxoLGYpLHQubm9ybWFsaXplKGYsZiksdC5jcm9zcyhoLGYsYyksdC5ub3JtYWxpemUoYyxjKSx0LmNyb3NzKGYsYyxoKSx0Lm5vcm1hbGl6ZShoLGgpLG0uc2V0Q29sdW1uKGUuX2FjdHVhbFRyYW5zZm9ybSwwLGMsZS5fYWN0dWFsVHJhbnNmb3JtKSxtLnNldENvbHVtbihlLl9hY3R1YWxUcmFuc2Zvcm0sMSxoLGUuX2FjdHVhbFRyYW5zZm9ybSksbS5zZXRDb2x1bW4oZS5fYWN0dWFsVHJhbnNmb3JtLDIsZixlLl9hY3R1YWxUcmFuc2Zvcm0pLG0uc2V0Q29sdW1uKGUuX2FjdHVhbFRyYW5zZm9ybSwzLGwsZS5fYWN0dWFsVHJhbnNmb3JtKX1mdW5jdGlvbiBiKGUpe3ZhciBuPWUuX3Byb2plY3Rpb24scj1uLmVsbGlwc29pZCxvPW0uZ2V0Q29sdW1uKGUuX3RyYW5zZm9ybSwzLGV0KSxhPXIuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMobyxLKSxzPW4ucHJvamVjdChhLFEpLGw9dHQ7bC54PXMueixsLnk9cy54LGwuej1zLnksbC53PTE7dmFyIHU9aS5jbG9uZShpLlVOSVRfWCxydCksYz1pLmFkZChtLmdldENvbHVtbihlLl90cmFuc2Zvcm0sMCwkKSxvLCQpO3IuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoYyxhKSxuLnByb2plY3QoYSxzKTt2YXIgaD1pdDtoLng9cy56LGgueT1zLngsaC56PXMueSxoLnc9MCx0LnN1YnRyYWN0KGgsbCxoKSxoLng9MDt2YXIgZj1udDtpZih0Lm1hZ25pdHVkZVNxdWFyZWQoaCk+ZC5FUFNJTE9OMTApdC5jcm9zcyh1LGgsZik7ZWxzZXt2YXIgcD1pLmFkZChtLmdldENvbHVtbihlLl90cmFuc2Zvcm0sMSwkKSxvLCQpO3IuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMocCxhKSxuLnByb2plY3QoYSxzKSxmLng9cy56LGYueT1zLngsZi56PXMueSxmLnc9MCx0LnN1YnRyYWN0KGYsbCxmKSxmLng9MCx0Lm1hZ25pdHVkZVNxdWFyZWQoZik8ZC5FUFNJTE9OMTAmJihpLmNsb25lKGkuVU5JVF9ZLGgpLGkuY2xvbmUoaS5VTklUX1osZikpfXQuY3Jvc3MoZix1LGgpLHQubm9ybWFsaXplKGgsaCksdC5jcm9zcyh1LGgsZiksdC5ub3JtYWxpemUoZixmKSxtLnNldENvbHVtbihlLl9hY3R1YWxUcmFuc2Zvcm0sMCxoLGUuX2FjdHVhbFRyYW5zZm9ybSksbS5zZXRDb2x1bW4oZS5fYWN0dWFsVHJhbnNmb3JtLDEsZixlLl9hY3R1YWxUcmFuc2Zvcm0pLG0uc2V0Q29sdW1uKGUuX2FjdHVhbFRyYW5zZm9ybSwyLHUsZS5fYWN0dWFsVHJhbnNmb3JtKSxtLnNldENvbHVtbihlLl9hY3R1YWxUcmFuc2Zvcm0sMyxsLGUuX2FjdHVhbFRyYW5zZm9ybSl9ZnVuY3Rpb24gUyhlKXt2YXIgaT1lLl9wb3NpdGlvbixuPSF0LmVxdWFscyhpLGUucG9zaXRpb24pO24mJihpPXQuY2xvbmUoZS5wb3NpdGlvbixlLl9wb3NpdGlvbikpO3ZhciByPWUuX2RpcmVjdGlvbixvPSF0LmVxdWFscyhyLGUuZGlyZWN0aW9uKTtvJiYocj10LmNsb25lKGUuZGlyZWN0aW9uLGUuX2RpcmVjdGlvbikpO3ZhciBhPWUuX3VwLHM9IXQuZXF1YWxzKGEsZS51cCk7cyYmKGE9dC5jbG9uZShlLnVwLGUuX3VwKSk7dmFyIGw9ZS5fcmlnaHQsdT0hdC5lcXVhbHMobCxlLnJpZ2h0KTt1JiYobD10LmNsb25lKGUucmlnaHQsZS5fcmlnaHQpKTt2YXIgYz0hbS5lcXVhbHMoZS5fdHJhbnNmb3JtLGUudHJhbnNmb3JtKXx8ZS5fbW9kZUNoYW5nZWQ7YyYmKG0uY2xvbmUoZS50cmFuc2Zvcm0sZS5fdHJhbnNmb3JtKSxtLmludmVyc2VUcmFuc2Zvcm1hdGlvbihlLl90cmFuc2Zvcm0sZS5faW52VHJhbnNmb3JtKSxlLl9tb2RlPT09Qy5DT0xVTUJVU19WSUVXfHxlLl9tb2RlPT09Qy5TQ0VORTJEP20uZXF1YWxzKG0uSURFTlRJVFksZS5fdHJhbnNmb3JtKT9tLmNsb25lKEouVFJBTlNGT1JNXzJELGUuX2FjdHVhbFRyYW5zZm9ybSk6ZS5fbW9kZT09PUMuQ09MVU1CVVNfVklFVz9FKGUpOmIoZSk6bS5jbG9uZShlLl90cmFuc2Zvcm0sZS5fYWN0dWFsVHJhbnNmb3JtKSxtLmludmVyc2VUcmFuc2Zvcm1hdGlvbihlLl9hY3R1YWxUcmFuc2Zvcm0sZS5fYWN0dWFsSW52VHJhbnNmb3JtKSxlLl9tb2RlQ2hhbmdlZD0hMSk7dmFyIGg9ZS5fYWN0dWFsVHJhbnNmb3JtO2lmKG58fGMpe2UuX3Bvc2l0aW9uV0M9bS5tdWx0aXBseUJ5UG9pbnQoaCxpLGUuX3Bvc2l0aW9uV0MpO3ZhciBmPWUuX21vZGU7aWYoZj09PUMuU0NFTkUzRHx8Zj09PUMuTU9SUEhJTkcpZS5fcG9zaXRpb25DYXJ0b2dyYXBoaWM9ZS5fcHJvamVjdGlvbi5lbGxpcHNvaWQuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoZS5fcG9zaXRpb25XQyxlLl9wb3NpdGlvbkNhcnRvZ3JhcGhpYyk7ZWxzZXt2YXIgcD1vdDtwLng9ZS5fcG9zaXRpb25XQy55LHAueT1lLl9wb3NpdGlvbldDLnoscC56PWUuX3Bvc2l0aW9uV0MueCxmPT09Qy5TQ0VORTJEJiYocC56PS41KihlLmZydXN0dW0ucmlnaHQtZS5mcnVzdHVtLmxlZnQpKSxlLl9wcm9qZWN0aW9uLnVucHJvamVjdChwLGUuX3Bvc2l0aW9uQ2FydG9ncmFwaGljKX19aWYob3x8c3x8dSl7dmFyIHY9dC5kb3Qocix0LmNyb3NzKGEsbCxvdCkpO2lmKE1hdGguYWJzKDEtdik+ZC5FUFNJTE9OMil7cj10Lm5vcm1hbGl6ZShyLGUuX2RpcmVjdGlvbiksdC5jbG9uZShyLGUuZGlyZWN0aW9uKTt2YXIgZz0xL3QubWFnbml0dWRlU3F1YXJlZChhKSxfPXQuZG90KGEscikqZyx5PXQubXVsdGlwbHlCeVNjYWxhcihyLF8sb3QpO2E9dC5ub3JtYWxpemUodC5zdWJ0cmFjdChhLHksZS5fdXApLGUuX3VwKSx0LmNsb25lKGEsZS51cCksbD10LmNyb3NzKHIsYSxlLl9yaWdodCksdC5jbG9uZShsLGUucmlnaHQpfX0ob3x8YykmJihlLl9kaXJlY3Rpb25XQz1tLm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKGgscixlLl9kaXJlY3Rpb25XQykpLChzfHxjKSYmKGUuX3VwV0M9bS5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihoLGEsZS5fdXBXQykpLCh1fHxjKSYmKGUuX3JpZ2h0V0M9bS5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihoLGwsZS5fcmlnaHRXQykpLChufHxvfHxzfHx1fHxjKSYmdyhlKX1mdW5jdGlvbiBUKGUpe3JldHVybiBNYXRoLmF0YW4yKGUucmlnaHQueSxlLnJpZ2h0LngpfWZ1bmN0aW9uIHgoZSl7dmFyIHQ9ZS5fcHJvamVjdGlvbi5lbGxpcHNvaWQsaT1nLmVhc3ROb3J0aFVwVG9GaXhlZEZyYW1lKGUucG9zaXRpb24sdCxhdCksbj1tLmdldFJvdGF0aW9uKGksc3QpO2gudHJhbnNwb3NlKG4sbik7dmFyIHI9aC5tdWx0aXBseUJ5VmVjdG9yKG4sZS5yaWdodCxsdCk7cmV0dXJuIE1hdGguYXRhbjIoci55LHIueCl9ZnVuY3Rpb24gQShlLGkpe3ZhciBuPVQoZSk7aT1uLWksZS5sb29rKHQuVU5JVF9aLGkpfWZ1bmN0aW9uIFAoZSxpKXt2YXIgbj10Lm5vcm1hbGl6ZShlLnBvc2l0aW9uLHV0KSxyPXgoZSk7aT1yLWksZS5sb29rKG4saSl9ZnVuY3Rpb24gTShlKXtyZXR1cm4gZC5QSV9PVkVSX1RXTy1kLmFjb3NDbGFtcGVkKC1lLmRpcmVjdGlvbi56KX1mdW5jdGlvbiBJKGUpe3ZhciBpPXQubm9ybWFsaXplKGUucG9zaXRpb24sY3QpO3JldHVybiB0Lm5lZ2F0ZShpLGkpLGQuUElfT1ZFUl9UV08tZC5hY29zQ2xhbXBlZCh0LmRvdChlLmRpcmVjdGlvbixpKSl9ZnVuY3Rpb24gRChlLHQpe3ZhciBpPWUuX21heENvb3JkLngqZS5tYXhpbXVtVHJhbnNsYXRlRmFjdG9yO3QueD5pJiYodC54PWkpLHQueDwtaSYmKHQueD0taSk7dmFyIG49ZS5fbWF4Q29vcmQueSplLm1heGltdW1UcmFuc2xhdGVGYWN0b3I7dC55Pm4mJih0Lnk9biksdC55PC1uJiYodC55PS1uKX1mdW5jdGlvbiBPKGUsaSl7dmFyIG49ZS5wb3NpdGlvbixyPXQubm9ybWFsaXplKG4seXQpO2lmKG8oZS5jb25zdHJhaW5lZEF4aXMpKXt2YXIgYT10LmVxdWFsc0Vwc2lsb24ocixlLmNvbnN0cmFpbmVkQXhpcyxkLkVQU0lMT04yKSxzPXQuZXF1YWxzRXBzaWxvbihyLHQubmVnYXRlKGUuY29uc3RyYWluZWRBeGlzLEV0KSxkLkVQU0lMT04yKTtpZihhfHxzKShhJiYwPml8fHMmJmk+MCkmJmUucm90YXRlKGUucmlnaHQsaSk7ZWxzZXt2YXIgbD10Lm5vcm1hbGl6ZShlLmNvbnN0cmFpbmVkQXhpcyxDdCksdT10LmRvdChyLGwpLGM9ZC5hY29zQ2xhbXBlZCh1KTtpPjAmJmk+YyYmKGk9Yy1kLkVQU0lMT040KSx1PXQuZG90KHIsdC5uZWdhdGUobCxFdCkpLGM9ZC5hY29zQ2xhbXBlZCh1KSwwPmkmJi1pPmMmJihpPS1jK2QuRVBTSUxPTjQpO3ZhciBoPXQuY3Jvc3MobCxyLHd0KTtlLnJvdGF0ZShoLGkpfX1lbHNlIGUucm90YXRlKGUucmlnaHQsaSl9ZnVuY3Rpb24gUihlLHQpe28oZS5jb25zdHJhaW5lZEF4aXMpP2Uucm90YXRlKGUuY29uc3RyYWluZWRBeGlzLHQpOmUucm90YXRlKGUudXAsdCl9ZnVuY3Rpb24gTChlLHQpe3ZhciBpPWUuZnJ1c3R1bTt0PS41KnQ7dmFyIG49aS5yaWdodC10LHI9aS5sZWZ0K3Qsbz1lLl9tYXhDb29yZC54KmUubWF4aW11bVpvb21GYWN0b3I7bj5vJiYobj1vLHI9LW8pLHI+PW4mJihuPTEscj0tMSk7dmFyIGE9aS50b3AvaS5yaWdodDtpLnJpZ2h0PW4saS5sZWZ0PXIsaS50b3A9aS5yaWdodCphLGkuYm90dG9tPS1pLnRvcH1mdW5jdGlvbiBOKGUsdCl7ZS5tb3ZlKGUuZGlyZWN0aW9uLHQpfWZ1bmN0aW9uIHooaSxuKXt2YXIgcj0uNSotbi5oZWlnaHQsbz0tcixhPWkuZnJ1c3R1bTtpZihvPnIpe3ZhciBzPWEudG9wL2EucmlnaHQ7YS5yaWdodD1vLGEubGVmdD1yLGEudG9wPWEucmlnaHQqcyxhLmJvdHRvbT0tYS50b3B9ZS5jbG9uZShpLl9wcm9qZWN0aW9uLnByb2plY3QobiksaS5wb3NpdGlvbiksdC5uZWdhdGUodC5VTklUX1osaS5kaXJlY3Rpb24pLHQuY2xvbmUodC5VTklUX1ksaS51cCksdC5jbG9uZSh0LlVOSVRfWCxpLnJpZ2h0KX1mdW5jdGlvbiBCKGUsaSl7dmFyIG49ZS5fcHJvamVjdGlvbjtlLnBvc2l0aW9uPW4ucHJvamVjdChpKSx0Lm5lZ2F0ZSh0LlVOSVRfWixlLmRpcmVjdGlvbiksdC5jbG9uZSh0LlVOSVRfWSxlLnVwKSx0LmNsb25lKHQuVU5JVF9YLGUucmlnaHQpfWZ1bmN0aW9uIEYoZSxpKXt2YXIgbj1lLl9wcm9qZWN0aW9uLmVsbGlwc29pZDtuLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGksZS5wb3NpdGlvbiksdC5uZWdhdGUoZS5wb3NpdGlvbixlLmRpcmVjdGlvbiksdC5ub3JtYWxpemUoZS5kaXJlY3Rpb24sZS5kaXJlY3Rpb24pLHQuY3Jvc3MoZS5kaXJlY3Rpb24sdC5VTklUX1osZS5yaWdodCksdC5jcm9zcyhlLnJpZ2h0LGUuZGlyZWN0aW9uLGUudXApLHQuY3Jvc3MoZS5kaXJlY3Rpb24sZS51cCxlLnJpZ2h0KX1mdW5jdGlvbiBWKGUsaSxuLHIsYSl7byhyKXx8KHI9bmV3IHQpO3ZhciBzPWU7YSYmKHM9TXQpO3ZhciBsPWkubm9ydGgsdT1pLnNvdXRoLGM9aS5lYXN0LGg9aS53ZXN0O2g+YyYmKGMrPWQuVFdPX1BJKTt2YXIgbT1idDttLmxvbmdpdHVkZT1jLG0ubGF0aXR1ZGU9bDt2YXIgZj1uLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKG0sU3QpO20ubGF0aXR1ZGU9dTt2YXIgcD1uLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKG0sQXQpO20ubG9uZ2l0dWRlPWg7dmFyIHY9bi5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihtLFR0KTttLmxhdGl0dWRlPWw7dmFyIGc9bi5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihtLHh0KSxfPXQuc3VidHJhY3QoZix2LFB0KTt0Lm11bHRpcGx5QnlTY2FsYXIoXywuNSxfKSx0LmFkZCh2LF8sXyk7dmFyIHk9dC5tYWduaXR1ZGUoXyk7eTxkLkVQU0lMT042JiYobS5sb25naXR1ZGU9LjUqKGMraCksbS5sYXRpdHVkZT0uNSoobCt1KSxuLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKG0sXykpLHQuc3VidHJhY3QoZyxfLGcpLHQuc3VidHJhY3QocCxfLHApLHQuc3VidHJhY3QoZixfLGYpLHQuc3VidHJhY3QodixfLHYpO3ZhciBDPXQubmVnYXRlKF8scy5kaXJlY3Rpb24pO3Qubm9ybWFsaXplKEMsQyk7dmFyIHc9dC5jcm9zcyhDLHQuVU5JVF9aLHMucmlnaHQpO3Qubm9ybWFsaXplKHcsdyk7dmFyIEU9dC5jcm9zcyh3LEMscy51cCksYj1NYXRoLm1heChNYXRoLmFicyh0LmRvdChFLGcpKSxNYXRoLmFicyh0LmRvdChFLHApKSxNYXRoLmFicyh0LmRvdChFLGYpKSxNYXRoLmFicyh0LmRvdChFLHYpKSksUz1NYXRoLm1heChNYXRoLmFicyh0LmRvdCh3LGcpKSxNYXRoLmFicyh0LmRvdCh3LHApKSxNYXRoLmFicyh0LmRvdCh3LGYpKSxNYXRoLmFicyh0LmRvdCh3LHYpKSksVD1NYXRoLnRhbiguNSplLmZydXN0dW0uZm92eSkseD1lLmZydXN0dW0uYXNwZWN0UmF0aW8qVCxBPU1hdGgubWF4KFMveCxiL1QpLFA9eStBO3JldHVybiB0Lm5vcm1hbGl6ZShfLF8pLHQubXVsdGlwbHlCeVNjYWxhcihfLFAscil9ZnVuY3Rpb24gayhlLGksbixyLGEpe3ZhciBzPWkubm9ydGgsbD1pLnNvdXRoLHU9aS5lYXN0LGM9aS53ZXN0LGQ9ZS5fYWN0dWFsVHJhbnNmb3JtLGg9ZS5fYWN0dWFsSW52VHJhbnNmb3JtLGY9SXQ7Zi5sb25naXR1ZGU9dSxmLmxhdGl0dWRlPXM7dmFyIHA9bi5wcm9qZWN0KGYsRHQpO20ubXVsdGlwbHlCeVBvaW50KGQscCxwKSxtLm11bHRpcGx5QnlQb2ludChoLHAscCksZi5sb25naXR1ZGU9YyxmLmxhdGl0dWRlPWw7dmFyIHY9bi5wcm9qZWN0KGYsT3QpO20ubXVsdGlwbHlCeVBvaW50KGQsdix2KSxtLm11bHRpcGx5QnlQb2ludChoLHYsdik7dmFyIGc9TWF0aC50YW4oLjUqZS5mcnVzdHVtLmZvdnkpLF89ZS5mcnVzdHVtLmFzcGVjdFJhdGlvKmc7aWYobyhyKXx8KHI9bmV3IHQpLHIueD0uNSoocC54LXYueCkrdi54LHIueT0uNSoocC55LXYueSkrdi55LHIuej0uNSpNYXRoLm1heCgocC54LXYueCkvXywocC55LXYueSkvZyksIWEpe3ZhciB5PXQuY2xvbmUodC5VTklUX1osZS5kaXJlY3Rpb24pO3QubmVnYXRlKHkseSksdC5jbG9uZSh0LlVOSVRfWCxlLnJpZ2h0KSx0LmNsb25lKHQuVU5JVF9ZLGUudXApfXJldHVybiByfWZ1bmN0aW9uIFUoZSxpLG4scixhKXt2YXIgcz1pLm5vcnRoLGw9aS5zb3V0aCx1PWkuZWFzdCxjPWkud2VzdCxkPVJ0O2QubG9uZ2l0dWRlPXUsZC5sYXRpdHVkZT1zO3ZhciBoPW4ucHJvamVjdChkLEx0KTtkLmxvbmdpdHVkZT1jLGQubGF0aXR1ZGU9bDt2YXIgbSxmLHA9bi5wcm9qZWN0KGQsTnQpLHY9LjUqTWF0aC5hYnMoaC54LXAueCksZz0uNSpNYXRoLmFicyhoLnktcC55KSxfPWUuZnJ1c3R1bS5yaWdodC9lLmZydXN0dW0udG9wLHk9ZypfO2lmKHY+eT8obT12LGY9bS9fKTooZj1nLG09eSksZz1NYXRoLm1heCgyKm0sMipmKSxvKHIpfHwocj1uZXcgdCksci54PS41KihoLngtcC54KStwLngsci55PS41KihoLnktcC55KStwLnksYSlkPW4udW5wcm9qZWN0KHIsZCksZC5oZWlnaHQ9ZyxyPW4ucHJvamVjdChkLHIpO2Vsc2V7dmFyIEM9ZS5mcnVzdHVtO0MucmlnaHQ9bSxDLmxlZnQ9LW0sQy50b3A9ZixDLmJvdHRvbT0tZjt2YXIgdz10LmNsb25lKHQuVU5JVF9aLGUuZGlyZWN0aW9uKTt0Lm5lZ2F0ZSh3LHcpLHQuY2xvbmUodC5VTklUX1gsZS5yaWdodCksdC5jbG9uZSh0LlVOSVRfWSxlLnVwKX1yZXR1cm4gcn1mdW5jdGlvbiBXKGUsdCxpLG4pe2k9cihpLHUuV0dTODQpO3ZhciBvPWUuZ2V0UGlja1JheSh0LHp0KSxhPWMucmF5RWxsaXBzb2lkKG8saSk7aWYoIWEpcmV0dXJuIHZvaWQgMDt2YXIgcz1hLnN0YXJ0PjA/YS5zdGFydDphLnN0b3A7cmV0dXJuIHAuZ2V0UG9pbnQobyxzLG4pfWZ1bmN0aW9uIEcoZSx0LGksbil7dmFyIHI9ZS5nZXRQaWNrUmF5KHQsQnQpLG89ci5vcmlnaW47by56PTA7dmFyIGE9aS51bnByb2plY3Qobyk7cmV0dXJuIGEubGF0aXR1ZGU8LWQuUElfT1ZFUl9UV098fGEubGF0aXR1ZGU+ZC5QSV9PVkVSX1RXT3x8YS5sb25naXR1ZGU8LU1hdGguUEl8fGEubG9uZ2l0dWRlPk1hdGguUEk/dm9pZCAwOmkuZWxsaXBzb2lkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGEsbil9ZnVuY3Rpb24gSChlLGksbixyKXt2YXIgbz1lLmdldFBpY2tSYXkoaSxGdCksYT0tby5vcmlnaW4ueC9vLmRpcmVjdGlvbi54O3AuZ2V0UG9pbnQobyxhLHIpO3ZhciBzPW4udW5wcm9qZWN0KG5ldyB0KHIueSxyLnosMCkpO3JldHVybiBzLmxhdGl0dWRlPC1kLlBJX09WRVJfVFdPfHxzLmxhdGl0dWRlPmQuUElfT1ZFUl9UV098fHMubG9uZ2l0dWRlPC1NYXRoLlBJfHxzLmxvbmdpdHVkZT5NYXRoLlBJP3ZvaWQgMDpuLmVsbGlwc29pZC5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihzLHIpfWZ1bmN0aW9uIHEoZSxpLG4pe3ZhciByPWUuX3NjZW5lLmNhbnZhcyxvPXIuY2xpZW50V2lkdGgsYT1yLmNsaWVudEhlaWdodCxzPU1hdGgudGFuKC41KmUuZnJ1c3R1bS5mb3Z5KSxsPWUuZnJ1c3R1bS5hc3BlY3RSYXRpbypzLHU9ZS5mcnVzdHVtLm5lYXIsYz0yL28qaS54LTEsZD0yL2EqKGEtaS55KS0xLGg9ZS5wb3NpdGlvbldDO3QuY2xvbmUoaCxuLm9yaWdpbik7dmFyIG09dC5tdWx0aXBseUJ5U2NhbGFyKGUuZGlyZWN0aW9uV0MsdSxWdCk7dC5hZGQoaCxtLG0pO3ZhciBmPXQubXVsdGlwbHlCeVNjYWxhcihlLnJpZ2h0V0MsYyp1Kmwsa3QpLHA9dC5tdWx0aXBseUJ5U2NhbGFyKGUudXBXQyxkKnUqcyxVdCksdj10LmFkZChtLGYsbi5kaXJlY3Rpb24pO3JldHVybiB0LmFkZCh2LHAsdiksdC5zdWJ0cmFjdCh2LGgsdiksdC5ub3JtYWxpemUodix2KSxufWZ1bmN0aW9uIGooZSxpLG4pe3ZhciByPWUuX3NjZW5lLmNhbnZhcyxvPXIuY2xpZW50V2lkdGgsYT1yLmNsaWVudEhlaWdodCxzPTIvbyppLngtMTtzKj0uNSooZS5mcnVzdHVtLnJpZ2h0LWUuZnJ1c3R1bS5sZWZ0KTt2YXIgbD0yL2EqKGEtaS55KS0xO2wqPS41KihlLmZydXN0dW0udG9wLWUuZnJ1c3R1bS5ib3R0b20pO3ZhciB1PW4ub3JpZ2luO3JldHVybiB0LmNsb25lKGUucG9zaXRpb24sdSksdC5tdWx0aXBseUJ5U2NhbGFyKGUucmlnaHQscyxXdCksdC5hZGQoV3QsdSx1KSx0Lm11bHRpcGx5QnlTY2FsYXIoZS51cCxsLFd0KSx0LmFkZChXdCx1LHUpLHQuY2xvbmUoZS5kaXJlY3Rpb25XQyxuLmRpcmVjdGlvbiksbn1mdW5jdGlvbiBZKGUsaSl7dmFyIG49ZS5wb3NpdGlvbixyPW4ueDwtZS5fbWF4Q29vcmQueHx8bi54PmUuX21heENvb3JkLngsbz1uLnk8LWUuX21heENvb3JkLnl8fG4ueT5lLl9tYXhDb29yZC55LGE9cnx8byxzPWUuZnJ1c3R1bSx1PXMudG9wLGM9cy5ib3R0b20saD1zLnJpZ2h0LG09cy5sZWZ0LGY9ZS5fbWF4MkRmcnVzdHVtLHA9aD5lLl9tYXgyRGZydXN0dW0ucmlnaHQ7aWYoYXx8cCl7dmFyIHY9dC5jbG9uZShuKTt2Lng+ZS5fbWF4Q29vcmQueD92Lng9ZS5fbWF4Q29vcmQueDp2Lng8LWUuX21heENvb3JkLngmJih2Lng9LWUuX21heENvb3JkLngpLHYueT5lLl9tYXhDb29yZC55P3YueT1lLl9tYXhDb29yZC55OnYueTwtZS5fbWF4Q29vcmQueSYmKHYueT0tZS5fbWF4Q29vcmQueSk7dmFyIGc9ZnVuY3Rpb24oaSl7YSYmKGUucG9zaXRpb249dC5sZXJwKG4sdixpLnRpbWUsZS5wb3NpdGlvbikpLHAmJihlLmZydXN0dW0udG9wPWQubGVycCh1LGYudG9wLGkudGltZSksZS5mcnVzdHVtLmJvdHRvbT1kLmxlcnAoYyxmLmJvdHRvbSxpLnRpbWUpLGUuZnJ1c3R1bS5yaWdodD1kLmxlcnAoaCxmLnJpZ2h0LGkudGltZSksZS5mcnVzdHVtLmxlZnQ9ZC5sZXJwKG0sZi5sZWZ0LGkudGltZSkpfTtyZXR1cm57ZWFzaW5nRnVuY3Rpb246bC5FWFBPTkVOVElBTF9PVVQsc3RhcnRPYmplY3Q6e3RpbWU6MH0sc3RvcE9iamVjdDp7dGltZToxfSxkdXJhdGlvbjppLHVwZGF0ZTpnfX1yZXR1cm4gdm9pZCAwfWZ1bmN0aW9uIFgoZSxpLG4scixvLGEpe3ZhciBzPXQuY2xvbmUoaSk7bi55PnI/cy55LT1uLnktcjpuLnk8LXImJihzLnkrPS1yLW4ueSksbi56Pm8/cy56LT1uLnotbzpuLno8LW8mJihzLnorPS1vLW4ueik7dmFyIHU9ZnVuY3Rpb24obil7dmFyIHI9dC5sZXJwKGkscyxuLnRpbWUsbmV3IHQpO2Uud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzUG9pbnQocixlLnBvc2l0aW9uKX07cmV0dXJue2Vhc2luZ0Z1bmN0aW9uOmwuRVhQT05FTlRJQUxfT1VULHN0YXJ0T2JqZWN0Ont0aW1lOjB9LHN0b3BPYmplY3Q6e3RpbWU6MX0sZHVyYXRpb246YSx1cGRhdGU6dX19ZnVuY3Rpb24gWihlLGkpe3ZhciBuPWUucG9zaXRpb24scj1lLmRpcmVjdGlvbixvPWUud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzVmVjdG9yKHQuVU5JVF9YLEd0KSxhPS10LmRvdChvLG4pL3QuZG90KG8scikscz10LmFkZChuLHQubXVsdGlwbHlCeVNjYWxhcihyLGEsSHQpLEh0KTtlLmNhbWVyYVRvV29ybGRDb29yZGluYXRlc1BvaW50KHMscyksbj1lLmNhbWVyYVRvV29ybGRDb29yZGluYXRlc1BvaW50KGUucG9zaXRpb24scXQpO3ZhciBsPU1hdGgudGFuKC41KmUuZnJ1c3R1bS5mb3Z5KSx1PWUuZnJ1c3R1bS5hc3BlY3RSYXRpbypsLGM9dC5tYWduaXR1ZGUodC5zdWJ0cmFjdChuLHMsanQpKSxkPXUqYyxoPWwqYyxtPWUuX21heENvb3JkLngsZj1lLl9tYXhDb29yZC55LHA9TWF0aC5tYXgoZC1tLG0pLHY9TWF0aC5tYXgoaC1mLGYpO2lmKG4uejwtcHx8bi56PnB8fG4ueTwtdnx8bi55PnYpe3ZhciBnPXMueTwtcHx8cy55PnAsXz1zLno8LXZ8fHMuej52O2lmKGd8fF8pcmV0dXJuIFgoZSxuLHMscCx2LGkpfXJldHVybiB2b2lkIDB9dmFyIEo9ZnVuY3Rpb24oZSl7dGhpcy5fc2NlbmU9ZSx0aGlzLnRyYW5zZm9ybT1tLmNsb25lKG0uSURFTlRJVFkpLHRoaXMuX3RyYW5zZm9ybT1tLmNsb25lKG0uSURFTlRJVFkpLHRoaXMuX2ludlRyYW5zZm9ybT1tLmNsb25lKG0uSURFTlRJVFkpLHRoaXMuX2FjdHVhbFRyYW5zZm9ybT1tLmNsb25lKG0uSURFTlRJVFkpLHRoaXMuX2FjdHVhbEludlRyYW5zZm9ybT1tLmNsb25lKG0uSURFTlRJVFkpLHRoaXMucG9zaXRpb249bmV3IHQsdGhpcy5fcG9zaXRpb249bmV3IHQsdGhpcy5fcG9zaXRpb25XQz1uZXcgdCx0aGlzLl9wb3NpdGlvbkNhcnRvZ3JhcGhpYz1uZXcgbix0aGlzLmRpcmVjdGlvbj1uZXcgdCx0aGlzLl9kaXJlY3Rpb249bmV3IHQsdGhpcy5fZGlyZWN0aW9uV0M9bmV3IHQsdGhpcy51cD1uZXcgdCx0aGlzLl91cD1uZXcgdCx0aGlzLl91cFdDPW5ldyB0LHRoaXMucmlnaHQ9bmV3IHQsdGhpcy5fcmlnaHQ9bmV3IHQsdGhpcy5fcmlnaHRXQz1uZXcgdCx0aGlzLmZydXN0dW09bmV3IHksdGhpcy5mcnVzdHVtLmFzcGVjdFJhdGlvPWUuZHJhd2luZ0J1ZmZlcldpZHRoL2UuZHJhd2luZ0J1ZmZlckhlaWdodCx0aGlzLmZydXN0dW0uZm92PWQudG9SYWRpYW5zKDYwKSx0aGlzLmRlZmF1bHRNb3ZlQW1vdW50PTFlNSx0aGlzLmRlZmF1bHRMb29rQW1vdW50PU1hdGguUEkvNjAsdGhpcy5kZWZhdWx0Um90YXRlQW1vdW50PU1hdGguUEkvMzYwMCx0aGlzLmRlZmF1bHRab29tQW1vdW50PTFlNSx0aGlzLmNvbnN0cmFpbmVkQXhpcz12b2lkIDAsdGhpcy5tYXhpbXVtVHJhbnNsYXRlRmFjdG9yPTEuNSx0aGlzLm1heGltdW1ab29tRmFjdG9yPTIuNSx0aGlzLl92aWV3TWF0cml4PW5ldyBtLHRoaXMuX2ludlZpZXdNYXRyaXg9bmV3IG0sdyh0aGlzKSx0aGlzLl9tb2RlPUMuU0NFTkUzRCx0aGlzLl9tb2RlQ2hhbmdlZD0hMDt2YXIgaT1lLm1hcFByb2plY3Rpb247dGhpcy5fcHJvamVjdGlvbj1pLHRoaXMuX21heENvb3JkPWkucHJvamVjdChuZXcgbihNYXRoLlBJLGQuUElfT1ZFUl9UV08pKSx0aGlzLl9tYXgyRGZydXN0dW09dm9pZCAwLHRoaXMudmlld1JlY3RhbmdsZShKLkRFRkFVTFRfVklFV19SRUNUQU5HTEUpO3ZhciByPXQubWFnbml0dWRlKHRoaXMucG9zaXRpb24pO3IrPXIqSi5ERUZBVUxUX1ZJRVdfRkFDVE9SLHQubm9ybWFsaXplKHRoaXMucG9zaXRpb24sdGhpcy5wb3NpdGlvbiksdC5tdWx0aXBseUJ5U2NhbGFyKHRoaXMucG9zaXRpb24scix0aGlzLnBvc2l0aW9uKX07Si5UUkFOU0ZPUk1fMkQ9bmV3IG0oMCwwLDEsMCwxLDAsMCwwLDAsMSwwLDAsMCwwLDAsMSksSi5UUkFOU0ZPUk1fMkRfSU5WRVJTRT1tLmludmVyc2VUcmFuc2Zvcm1hdGlvbihKLlRSQU5TRk9STV8yRCxuZXcgbSksSi5ERUZBVUxUX1ZJRVdfUkVDVEFOR0xFPXYuZnJvbURlZ3JlZXMoLTk1LC0yMCwtNzAsOTApLEouREVGQVVMVF9WSUVXX0ZBQ1RPUj0uNTt2YXIgSz1uZXcgbixRPW5ldyB0LCQ9bmV3IHQsZXQ9bmV3IGksdHQ9bmV3IGksaXQ9bmV3IGksbnQ9bmV3IGkscnQ9bmV3IGksb3Q9bmV3IHQsYXQ9bmV3IG0sc3Q9bmV3IGgsbHQ9bmV3IHQsdXQ9bmV3IHQsY3Q9bmV3IHQ7YShKLnByb3RvdHlwZSx7aW52ZXJzZVRyYW5zZm9ybTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFModGhpcyksdGhpcy5faW52VHJhbnNmb3JtfX0sdmlld01hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFModGhpcyksdGhpcy5fdmlld01hdHJpeH19LGludmVyc2VWaWV3TWF0cml4OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzKSx0aGlzLl9pbnZWaWV3TWF0cml4fX0scG9zaXRpb25DYXJ0b2dyYXBoaWM6e2dldDpmdW5jdGlvbigpe3JldHVybiBTKHRoaXMpLHRoaXMuX3Bvc2l0aW9uQ2FydG9ncmFwaGljfX0scG9zaXRpb25XQzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFModGhpcyksdGhpcy5fcG9zaXRpb25XQ319LGRpcmVjdGlvbldDOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzKSx0aGlzLl9kaXJlY3Rpb25XQ319LHVwV0M6e2dldDpmdW5jdGlvbigpe3JldHVybiBTKHRoaXMpLHRoaXMuX3VwV0N9fSxyaWdodFdDOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUyh0aGlzKSx0aGlzLl9yaWdodFdDfX0saGVhZGluZzp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vZGU9PT1DLlNDRU5FMkR8fHRoaXMuX21vZGU9PT1DLkNPTFVNQlVTX1ZJRVc/VCh0aGlzKTp0aGlzLl9tb2RlPT09Qy5TQ0VORTNEP3godGhpcyk6dm9pZCAwCn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX21vZGU9PT1DLlNDRU5FMkR8fHRoaXMuX21vZGU9PT1DLkNPTFVNQlVTX1ZJRVc/QSh0aGlzLGUpOnRoaXMuX21vZGU9PT1DLlNDRU5FM0QmJlAodGhpcyxlKX19LHRpbHQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb2RlPT09Qy5DT0xVTUJVU19WSUVXP00odGhpcyk6dGhpcy5fbW9kZT09PUMuU0NFTkUzRD9JKHRoaXMpOnZvaWQgMH0sc2V0OmZ1bmN0aW9uKGUpeyh0aGlzLl9tb2RlPT09Qy5DT0xVTUJVU19WSUVXfHx0aGlzLl9tb2RlPT09Qy5TQ0VORTNEKSYmKGU9ZC5jbGFtcChlLDAsZC5QSV9PVkVSX1RXTyksZS09dGhpcy50aWx0LHRoaXMubG9vayh0aGlzLnJpZ2h0LGUpKX19fSksSi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PSExO2lmKGUhPT10aGlzLl9tb2RlJiYodGhpcy5fbW9kZT1lLHRoaXMuX21vZGVDaGFuZ2VkPWUhPT1DLk1PUlBISU5HLHQ9dGhpcy5fbW9kZT09PUMuU0NFTkUyRCksdCl7dmFyIGk9dGhpcy5fbWF4MkRmcnVzdHVtPXRoaXMuZnJ1c3R1bS5jbG9uZSgpLG49MixyPWkudG9wL2kucmlnaHQ7aS5yaWdodD10aGlzLl9tYXhDb29yZC54Km4saS5sZWZ0PS1pLnJpZ2h0LGkudG9wPXIqaS5yaWdodCxpLmJvdHRvbT0taS50b3B9fTt2YXIgZHQ9bmV3IHQsaHQ9bmV3IHQsbXQ9bmV3IHQ7Si5wcm90b3R5cGUuc2V0VHJhbnNmb3JtPWZ1bmN0aW9uKGUpe3ZhciBpPXQuY2xvbmUodGhpcy5wb3NpdGlvbldDLGR0KSxuPXQuY2xvbmUodGhpcy51cFdDLGh0KSxyPXQuY2xvbmUodGhpcy5kaXJlY3Rpb25XQyxtdCk7bS5jbG9uZShlLHRoaXMudHJhbnNmb3JtKSxTKHRoaXMpO3ZhciBvPXRoaXMuX2FjdHVhbEludlRyYW5zZm9ybTttLm11bHRpcGx5QnlQb2ludChvLGksdGhpcy5wb3NpdGlvbiksbS5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihvLHIsdGhpcy5kaXJlY3Rpb24pLG0ubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IobyxuLHRoaXMudXApLHQuY3Jvc3ModGhpcy5kaXJlY3Rpb24sdGhpcy51cCx0aGlzLnJpZ2h0KX0sSi5wcm90b3R5cGUud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8odCl8fCh0PW5ldyBpKSxTKHRoaXMpLG0ubXVsdGlwbHlCeVZlY3Rvcih0aGlzLl9hY3R1YWxJbnZUcmFuc2Zvcm0sZSx0KX0sSi5wcm90b3R5cGUud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzUG9pbnQ9ZnVuY3Rpb24oZSxpKXtyZXR1cm4gbyhpKXx8KGk9bmV3IHQpLFModGhpcyksbS5tdWx0aXBseUJ5UG9pbnQodGhpcy5fYWN0dWFsSW52VHJhbnNmb3JtLGUsaSl9LEoucHJvdG90eXBlLndvcmxkVG9DYW1lcmFDb29yZGluYXRlc1ZlY3Rvcj1mdW5jdGlvbihlLGkpe3JldHVybiBvKGkpfHwoaT1uZXcgdCksUyh0aGlzKSxtLm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKHRoaXMuX2FjdHVhbEludlRyYW5zZm9ybSxlLGkpfSxKLnByb3RvdHlwZS5jYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyh0KXx8KHQ9bmV3IGkpLFModGhpcyksbS5tdWx0aXBseUJ5VmVjdG9yKHRoaXMuX2FjdHVhbFRyYW5zZm9ybSxlLHQpfSxKLnByb3RvdHlwZS5jYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXNQb2ludD1mdW5jdGlvbihlLGkpe3JldHVybiBvKGkpfHwoaT1uZXcgdCksUyh0aGlzKSxtLm11bHRpcGx5QnlQb2ludCh0aGlzLl9hY3R1YWxUcmFuc2Zvcm0sZSxpKX0sSi5wcm90b3R5cGUuY2FtZXJhVG9Xb3JsZENvb3JkaW5hdGVzVmVjdG9yPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIG8oaSl8fChpPW5ldyB0KSxTKHRoaXMpLG0ubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IodGhpcy5fYWN0dWFsVHJhbnNmb3JtLGUsaSl9O3ZhciBmdD1uZXcgdDtKLnByb3RvdHlwZS5tb3ZlPWZ1bmN0aW9uKGUsaSl7dmFyIG49dGhpcy5wb3NpdGlvbjt0Lm11bHRpcGx5QnlTY2FsYXIoZSxpLGZ0KSx0LmFkZChuLGZ0LG4pLHRoaXMuX21vZGU9PT1DLlNDRU5FMkQmJkQodGhpcyxuKX0sSi5wcm90b3R5cGUubW92ZUZvcndhcmQ9ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0TW92ZUFtb3VudCksdGhpcy5tb3ZlKHRoaXMuZGlyZWN0aW9uLGUpfSxKLnByb3RvdHlwZS5tb3ZlQmFja3dhcmQ9ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0TW92ZUFtb3VudCksdGhpcy5tb3ZlKHRoaXMuZGlyZWN0aW9uLC1lKX0sSi5wcm90b3R5cGUubW92ZVVwPWZ1bmN0aW9uKGUpe2U9cihlLHRoaXMuZGVmYXVsdE1vdmVBbW91bnQpLHRoaXMubW92ZSh0aGlzLnVwLGUpfSxKLnByb3RvdHlwZS5tb3ZlRG93bj1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRNb3ZlQW1vdW50KSx0aGlzLm1vdmUodGhpcy51cCwtZSl9LEoucHJvdG90eXBlLm1vdmVSaWdodD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRNb3ZlQW1vdW50KSx0aGlzLm1vdmUodGhpcy5yaWdodCxlKX0sSi5wcm90b3R5cGUubW92ZUxlZnQ9ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0TW92ZUFtb3VudCksdGhpcy5tb3ZlKHRoaXMucmlnaHQsLWUpfSxKLnByb3RvdHlwZS5sb29rTGVmdD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRMb29rQW1vdW50KSx0aGlzLmxvb2sodGhpcy51cCwtZSl9LEoucHJvdG90eXBlLmxvb2tSaWdodD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRMb29rQW1vdW50KSx0aGlzLmxvb2sodGhpcy51cCxlKX0sSi5wcm90b3R5cGUubG9va1VwPWZ1bmN0aW9uKGUpe2U9cihlLHRoaXMuZGVmYXVsdExvb2tBbW91bnQpLHRoaXMubG9vayh0aGlzLnJpZ2h0LC1lKX0sSi5wcm90b3R5cGUubG9va0Rvd249ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0TG9va0Ftb3VudCksdGhpcy5sb29rKHRoaXMucmlnaHQsZSl9O3ZhciBwdD1uZXcgZix2dD1uZXcgaDtKLnByb3RvdHlwZS5sb29rPWZ1bmN0aW9uKGUsdCl7dmFyIGk9cih0LHRoaXMuZGVmYXVsdExvb2tBbW91bnQpLG49Zi5mcm9tQXhpc0FuZ2xlKGUsLWkscHQpLG89aC5mcm9tUXVhdGVybmlvbihuLHZ0KSxhPXRoaXMuZGlyZWN0aW9uLHM9dGhpcy51cCxsPXRoaXMucmlnaHQ7aC5tdWx0aXBseUJ5VmVjdG9yKG8sYSxhKSxoLm11bHRpcGx5QnlWZWN0b3IobyxzLHMpLGgubXVsdGlwbHlCeVZlY3RvcihvLGwsbCl9LEoucHJvdG90eXBlLnR3aXN0TGVmdD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRMb29rQW1vdW50KSx0aGlzLmxvb2sodGhpcy5kaXJlY3Rpb24sZSl9LEoucHJvdG90eXBlLnR3aXN0UmlnaHQ9ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0TG9va0Ftb3VudCksdGhpcy5sb29rKHRoaXMuZGlyZWN0aW9uLC1lKX07dmFyIGd0PW5ldyBmLF90PW5ldyBoO0oucHJvdG90eXBlLnJvdGF0ZT1mdW5jdGlvbihlLGkpe3ZhciBuPXIoaSx0aGlzLmRlZmF1bHRSb3RhdGVBbW91bnQpLG89Zi5mcm9tQXhpc0FuZ2xlKGUsLW4sZ3QpLGE9aC5mcm9tUXVhdGVybmlvbihvLF90KTtoLm11bHRpcGx5QnlWZWN0b3IoYSx0aGlzLnBvc2l0aW9uLHRoaXMucG9zaXRpb24pLGgubXVsdGlwbHlCeVZlY3RvcihhLHRoaXMuZGlyZWN0aW9uLHRoaXMuZGlyZWN0aW9uKSxoLm11bHRpcGx5QnlWZWN0b3IoYSx0aGlzLnVwLHRoaXMudXApLHQuY3Jvc3ModGhpcy5kaXJlY3Rpb24sdGhpcy51cCx0aGlzLnJpZ2h0KSx0LmNyb3NzKHRoaXMucmlnaHQsdGhpcy5kaXJlY3Rpb24sdGhpcy51cCl9LEoucHJvdG90eXBlLnJvdGF0ZURvd249ZnVuY3Rpb24oZSl7ZT1yKGUsdGhpcy5kZWZhdWx0Um90YXRlQW1vdW50KSxPKHRoaXMsZSl9LEoucHJvdG90eXBlLnJvdGF0ZVVwPWZ1bmN0aW9uKGUpe2U9cihlLHRoaXMuZGVmYXVsdFJvdGF0ZUFtb3VudCksTyh0aGlzLC1lKX07dmFyIHl0PW5ldyB0LEN0PW5ldyB0LHd0PW5ldyB0LEV0PW5ldyB0O0oucHJvdG90eXBlLnJvdGF0ZVJpZ2h0PWZ1bmN0aW9uKGUpe2U9cihlLHRoaXMuZGVmYXVsdFJvdGF0ZUFtb3VudCksUih0aGlzLC1lKX0sSi5wcm90b3R5cGUucm90YXRlTGVmdD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRSb3RhdGVBbW91bnQpLFIodGhpcyxlKX0sSi5wcm90b3R5cGUuem9vbUluPWZ1bmN0aW9uKGUpe2U9cihlLHRoaXMuZGVmYXVsdFpvb21BbW91bnQpLHRoaXMuX21vZGU9PT1DLlNDRU5FMkQ/TCh0aGlzLGUpOk4odGhpcyxlKX0sSi5wcm90b3R5cGUuem9vbU91dD1mdW5jdGlvbihlKXtlPXIoZSx0aGlzLmRlZmF1bHRab29tQW1vdW50KSx0aGlzLl9tb2RlPT09Qy5TQ0VORTJEP0wodGhpcywtZSk6Tih0aGlzLC1lKX0sSi5wcm90b3R5cGUuZ2V0TWFnbml0dWRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21vZGU9PT1DLlNDRU5FM0Q/dC5tYWduaXR1ZGUodGhpcy5wb3NpdGlvbik6dGhpcy5fbW9kZT09PUMuQ09MVU1CVVNfVklFVz9NYXRoLmFicyh0aGlzLnBvc2l0aW9uLnopOnRoaXMuX21vZGU9PT1DLlNDRU5FMkQ/TWF0aC5tYXgodGhpcy5mcnVzdHVtLnJpZ2h0LXRoaXMuZnJ1c3R1bS5sZWZ0LHRoaXMuZnJ1c3R1bS50b3AtdGhpcy5mcnVzdHVtLmJvdHRvbSk6dm9pZCAwfSxKLnByb3RvdHlwZS5zZXRQb3NpdGlvbkNhcnRvZ3JhcGhpYz1mdW5jdGlvbihlKXt0aGlzLl9tb2RlPT09Qy5TQ0VORTJEP3oodGhpcyxlKTp0aGlzLl9tb2RlPT09Qy5DT0xVTUJVU19WSUVXP0IodGhpcyxlKTp0aGlzLl9tb2RlPT09Qy5TQ0VORTNEJiZGKHRoaXMsZSl9LEoucHJvdG90eXBlLmxvb2tBdD1mdW5jdGlvbihpLG4scil7aWYodGhpcy5fbW9kZT09PUMuU0NFTkUyRCl7ZS5jbG9uZShuLHRoaXMucG9zaXRpb24pLHQubmVnYXRlKHQuVU5JVF9aLHRoaXMuZGlyZWN0aW9uKSx0LmNsb25lKHIsdGhpcy51cCksdGhpcy51cC56PTAsdC5tYWduaXR1ZGVTcXVhcmVkKHRoaXMudXApPGQuRVBTSUxPTjEwJiZ0LmNsb25lKHQuVU5JVF9ZLHRoaXMudXApLHQuY3Jvc3ModGhpcy5kaXJlY3Rpb24sdGhpcy51cCx0aGlzLnJpZ2h0KTt2YXIgbz10aGlzLmZydXN0dW0sYT1vLnRvcC9vLnJpZ2h0O3JldHVybiBvLnJpZ2h0PWkueixvLmxlZnQ9LW8ucmlnaHQsby50b3A9YSpvLnJpZ2h0LG8uYm90dG9tPS1vLnRvcCx2b2lkIDB9dGhpcy5wb3NpdGlvbj10LmNsb25lKGksdGhpcy5wb3NpdGlvbiksdGhpcy5kaXJlY3Rpb249dC5ub3JtYWxpemUodC5zdWJ0cmFjdChuLGksdGhpcy5kaXJlY3Rpb24pLHRoaXMuZGlyZWN0aW9uKSx0aGlzLnJpZ2h0PXQubm9ybWFsaXplKHQuY3Jvc3ModGhpcy5kaXJlY3Rpb24scix0aGlzLnJpZ2h0KSx0aGlzLnJpZ2h0KSx0aGlzLnVwPXQuY3Jvc3ModGhpcy5yaWdodCx0aGlzLmRpcmVjdGlvbix0aGlzLnVwKX07dmFyIGJ0PW5ldyBuLFN0PW5ldyB0LFR0PW5ldyB0LHh0PW5ldyB0LEF0PW5ldyB0LFB0PW5ldyB0LE10PXtkaXJlY3Rpb246bmV3IHQscmlnaHQ6bmV3IHQsdXA6bmV3IHR9LEl0PW5ldyBuLER0PW5ldyB0LE90PW5ldyB0LFJ0PW5ldyBuLEx0PW5ldyB0LE50PW5ldyB0O0oucHJvdG90eXBlLmdldFJlY3RhbmdsZUNhbWVyYUNvb3JkaW5hdGVzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX21vZGU9PT1DLlNDRU5FM0Q/Vih0aGlzLGUsdGhpcy5fcHJvamVjdGlvbi5lbGxpcHNvaWQsdCwhMCk6dGhpcy5fbW9kZT09PUMuQ09MVU1CVVNfVklFVz9rKHRoaXMsZSx0aGlzLl9wcm9qZWN0aW9uLHQsITApOnRoaXMuX21vZGU9PT1DLlNDRU5FMkQ/VSh0aGlzLGUsdGhpcy5fcHJvamVjdGlvbix0LCEwKTp2b2lkIDB9LEoucHJvdG90eXBlLnZpZXdSZWN0YW5nbGU9ZnVuY3Rpb24oZSx0KXt0PXIodCx1LldHUzg0KSx0aGlzLl9tb2RlPT09Qy5TQ0VORTNEP1YodGhpcyxlLHQsdGhpcy5wb3NpdGlvbik6dGhpcy5fbW9kZT09PUMuQ09MVU1CVVNfVklFVz9rKHRoaXMsZSx0aGlzLl9wcm9qZWN0aW9uLHRoaXMucG9zaXRpb24pOnRoaXMuX21vZGU9PT1DLlNDRU5FMkQmJlUodGhpcyxlLHRoaXMuX3Byb2plY3Rpb24sdGhpcy5wb3NpdGlvbil9O3ZhciB6dD1uZXcgcCxCdD1uZXcgcCxGdD1uZXcgcDtKLnByb3RvdHlwZS5waWNrRWxsaXBzb2lkPWZ1bmN0aW9uKGUsaSxuKXtpZihvKG4pfHwobj1uZXcgdCksaT1yKGksdS5XR1M4NCksdGhpcy5fbW9kZT09PUMuU0NFTkUzRCluPVcodGhpcyxlLGksbik7ZWxzZSBpZih0aGlzLl9tb2RlPT09Qy5TQ0VORTJEKW49Ryh0aGlzLGUsdGhpcy5fcHJvamVjdGlvbixuKTtlbHNle2lmKHRoaXMuX21vZGUhPT1DLkNPTFVNQlVTX1ZJRVcpcmV0dXJuIHZvaWQgMDtuPUgodGhpcyxlLHRoaXMuX3Byb2plY3Rpb24sbil9cmV0dXJuIG59O3ZhciBWdD1uZXcgdCxrdD1uZXcgdCxVdD1uZXcgdCxXdD1uZXcgdDtKLnByb3RvdHlwZS5nZXRQaWNrUmF5PWZ1bmN0aW9uKGUsdCl7byh0KXx8KHQ9bmV3IHApO3ZhciBpPXRoaXMuZnJ1c3R1bTtyZXR1cm4gbyhpLmFzcGVjdFJhdGlvKSYmbyhpLmZvdikmJm8oaS5uZWFyKT9xKHRoaXMsZSx0KTpqKHRoaXMsZSx0KX07dmFyIEd0PW5ldyB0LEh0PW5ldyB0LHF0PW5ldyB0LGp0PW5ldyB0O3JldHVybiBKLnByb3RvdHlwZS5jcmVhdGVDb3JyZWN0UG9zaXRpb25Ud2Vlbj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbW9kZT09PUMuU0NFTkUyRD9ZKHRoaXMsZSk6dGhpcy5fbW9kZT09PUMuQ09MVU1CVVNfVklFVz9aKHRoaXMsZSk6dm9pZCAwfSxKLnByb3RvdHlwZS5mbHlUbz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9zY2VuZTt0LnR3ZWVucy5hZGQoXy5jcmVhdGVUd2Vlbih0LGUpKX0sSi5wcm90b3R5cGUuZmx5VG9SZWN0YW5nbGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fc2NlbmU7dC50d2VlbnMuYWRkKF8uY3JlYXRlVHdlZW5SZWN0YW5nbGUodCxlKSl9LEoucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IEoodGhpcy5fc2NlbmUpO3JldHVybiBlLnBvc2l0aW9uPXQuY2xvbmUodGhpcy5wb3NpdGlvbiksZS5kaXJlY3Rpb249dC5jbG9uZSh0aGlzLmRpcmVjdGlvbiksZS51cD10LmNsb25lKHRoaXMudXApLGUucmlnaHQ9dC5jbG9uZSh0aGlzLnJpZ2h0KSxlLnRyYW5zZm9ybT1tLmNsb25lKHRoaXMudHJhbnNmb3JtKSxlLmZydXN0dW09dGhpcy5mcnVzdHVtLmNsb25lKCksZX0sSn0pLGRlZmluZSgiU2NlbmUvQ3JlZGl0RGlzcGxheSIsWyIuLi9Db3JlL0NyZWRpdCIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiByKGUsdCxuKXtpZighaShlLmVsZW1lbnQpKXt2YXIgcj1lLnRleHQsbz1lLmxpbmssYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7aWYoZS5oYXNMaW5rKCkpe3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTtzLnRleHRDb250ZW50PXIscy5ocmVmPW8scy50YXJnZXQ9Il9ibGFuayIsYS5hcHBlbmRDaGlsZChzKX1lbHNlIGEudGV4dENvbnRlbnQ9cjthLmNsYXNzTmFtZT0iY2VzaXVtLWNyZWRpdC10ZXh0IixlLmVsZW1lbnQ9YX1pZih0Lmhhc0NoaWxkTm9kZXMoKSl7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO2wudGV4dENvbnRlbnQ9bixsLmNsYXNzTmFtZT0iY2VzaXVtLWNyZWRpdC1kZWxpbWl0ZXIiLHQuYXBwZW5kQ2hpbGQobCl9dC5hcHBlbmRDaGlsZChlLmVsZW1lbnQpfWZ1bmN0aW9uIG8oZSx0KXtpZighaShlLmVsZW1lbnQpKXt2YXIgbj1lLnRleHQscj1lLmxpbmssbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIiksYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTtpZihhLnNyYz1lLmltYWdlVXJsLGEuc3R5bGVbInZlcnRpY2FsLWFsaWduIl09ImJvdHRvbSIsaShuKSYmKGEuYWx0PW4sYS50aXRsZT1uKSxlLmhhc0xpbmsoKSl7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpO3MuYXBwZW5kQ2hpbGQoYSkscy5ocmVmPXIscy50YXJnZXQ9Il9ibGFuayIsby5hcHBlbmRDaGlsZChzKX1lbHNlIG8uYXBwZW5kQ2hpbGQoYSk7by5jbGFzc05hbWU9ImNlc2l1bS1jcmVkaXQtaW1hZ2UiLGUuZWxlbWVudD1vfXQuYXBwZW5kQ2hpbGQoZS5lbGVtZW50KX1mdW5jdGlvbiBhKHQsaSl7Zm9yKHZhciBuPXQubGVuZ3RoLHI9MDtuPnI7cisrKXt2YXIgbz10W3JdO2lmKGUuZXF1YWxzKG8saSkpcmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gcyhlKXt2YXIgdD1lLmVsZW1lbnQ7aWYoaSh0KSl7dmFyIG49dC5wYXJlbnROb2RlO2lmKCFlLmhhc0ltYWdlKCkpe3ZhciByPXQucHJldmlvdXNTaWJsaW5nO251bGw9PT1yJiYocj10Lm5leHRTaWJsaW5nKSxudWxsIT09ciYmbi5yZW1vdmVDaGlsZChyKX1uLnJlbW92ZUNoaWxkKHQpfX1mdW5jdGlvbiBsKGUsdCl7dmFyIGksbixvLGE9ZS5fZGlzcGxheWVkQ3JlZGl0cy50ZXh0Q3JlZGl0cztmb3IoaT0wO2k8dC5sZW5ndGg7aSsrKW89dFtpXSxuPWEuaW5kZXhPZihvKSwtMT09PW4/cihvLGUuX3RleHRDb250YWluZXIsZS5fZGVsaW1pdGVyKTphLnNwbGljZShuLDEpO2ZvcihpPTA7aTxhLmxlbmd0aDtpKyspbz1hW2ldLHMobyl9ZnVuY3Rpb24gdShlLHQpe3ZhciBpLG4scixhPWUuX2Rpc3BsYXllZENyZWRpdHMuaW1hZ2VDcmVkaXRzO2ZvcihpPTA7aTx0Lmxlbmd0aDtpKyspcj10W2ldLG49YS5pbmRleE9mKHIpLC0xPT09bj9vKHIsZS5faW1hZ2VDb250YWluZXIpOmEuc3BsaWNlKG4sMSk7Zm9yKGk9MDtpPGEubGVuZ3RoO2krKylyPWFbaV0scyhyKX12YXIgYz1mdW5jdGlvbihlLGkpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTtuLmNsYXNzTmFtZT0iY2VzaXVtLWNyZWRpdC1pbWFnZUNvbnRhaW5lciI7dmFyIHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO3IuY2xhc3NOYW1lPSJjZXNpdW0tY3JlZGl0LXRleHRDb250YWluZXIiLGUuYXBwZW5kQ2hpbGQobiksZS5hcHBlbmRDaGlsZChyKSx0aGlzLl9kZWxpbWl0ZXI9dChpLCIg4oCiICIpLHRoaXMuX2NvbnRhaW5lcj1lLHRoaXMuX3RleHRDb250YWluZXI9cix0aGlzLl9pbWFnZUNvbnRhaW5lcj1uLHRoaXMuX2RlZmF1bHRJbWFnZUNyZWRpdHM9W10sdGhpcy5fZGVmYXVsdFRleHRDcmVkaXRzPVtdLHRoaXMuX2Rpc3BsYXllZENyZWRpdHM9e2ltYWdlQ3JlZGl0czpbXSx0ZXh0Q3JlZGl0czpbXX0sdGhpcy5fY3VycmVudEZyYW1lQ3JlZGl0cz17aW1hZ2VDcmVkaXRzOltdLHRleHRDcmVkaXRzOltdfX07cmV0dXJuIGMucHJvdG90eXBlLmFkZENyZWRpdD1mdW5jdGlvbihlKXtpZihlLmhhc0ltYWdlKCkpe3ZhciB0PXRoaXMuX2N1cnJlbnRGcmFtZUNyZWRpdHMuaW1hZ2VDcmVkaXRzO2EodCxlKXx8YSh0aGlzLl9kZWZhdWx0SW1hZ2VDcmVkaXRzLGUpfHx0LnB1c2goZSl9ZWxzZXt2YXIgaT10aGlzLl9jdXJyZW50RnJhbWVDcmVkaXRzLnRleHRDcmVkaXRzO2EoaSxlKXx8YSh0aGlzLl9kZWZhdWx0VGV4dENyZWRpdHMsZSl8fGkucHVzaChlKX19LGMucHJvdG90eXBlLmFkZERlZmF1bHRDcmVkaXQ9ZnVuY3Rpb24oZSl7aWYoZS5oYXNJbWFnZSgpKXt2YXIgdD10aGlzLl9kZWZhdWx0SW1hZ2VDcmVkaXRzO2EodCxlKXx8dC5wdXNoKGUpfWVsc2V7dmFyIGk9dGhpcy5fZGVmYXVsdFRleHRDcmVkaXRzO2EoaSxlKXx8aS5wdXNoKGUpfX0sYy5wcm90b3R5cGUucmVtb3ZlRGVmYXVsdENyZWRpdD1mdW5jdGlvbihlKXt2YXIgdDtlLmhhc0ltYWdlKCk/KHQ9dGhpcy5fZGVmYXVsdEltYWdlQ3JlZGl0cy5pbmRleE9mKGUpLC0xIT09dCYmdGhpcy5fZGVmYXVsdEltYWdlQ3JlZGl0cy5zcGxpY2UodCwxKSk6KHQ9dGhpcy5fZGVmYXVsdFRleHRDcmVkaXRzLmluZGV4T2YoZSksLTEhPT10JiZ0aGlzLl9kZWZhdWx0VGV4dENyZWRpdHMuc3BsaWNlKHQsMSkpfSxjLnByb3RvdHlwZS5iZWdpbkZyYW1lPWZ1bmN0aW9uKCl7dGhpcy5fY3VycmVudEZyYW1lQ3JlZGl0cy5pbWFnZUNyZWRpdHMubGVuZ3RoPTAsdGhpcy5fY3VycmVudEZyYW1lQ3JlZGl0cy50ZXh0Q3JlZGl0cy5sZW5ndGg9MH0sYy5wcm90b3R5cGUuZW5kRnJhbWU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9kZWZhdWx0VGV4dENyZWRpdHMuY29uY2F0KHRoaXMuX2N1cnJlbnRGcmFtZUNyZWRpdHMudGV4dENyZWRpdHMpLHQ9dGhpcy5fZGVmYXVsdEltYWdlQ3JlZGl0cy5jb25jYXQodGhpcy5fY3VycmVudEZyYW1lQ3JlZGl0cy5pbWFnZUNyZWRpdHMpO2wodGhpcyxlKSx1KHRoaXMsdCksdGhpcy5fZGlzcGxheWVkQ3JlZGl0cy50ZXh0Q3JlZGl0cz1lLHRoaXMuX2Rpc3BsYXllZENyZWRpdHMuaW1hZ2VDcmVkaXRzPXR9LGMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX3RleHRDb250YWluZXIpLHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl9pbWFnZUNvbnRhaW5lciksbih0aGlzKX0sYy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sY30pLGRlZmluZSgiU2NlbmUvRnJhbWVTdGF0ZSIsWyIuL1NjZW5lTW9kZSJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0KXt0aGlzLm1vZGU9ZS5TQ0VORTNELHRoaXMubW9ycGhUaW1lPWUuZ2V0TW9ycGhUaW1lKGUuU0NFTkUzRCksdGhpcy5mcmFtZU51bWJlcj0wLHRoaXMudGltZT12b2lkIDAsdGhpcy5tYXBQcm9qZWN0aW9uPXZvaWQgMCx0aGlzLmNhbWVyYT12b2lkIDAsdGhpcy5jdWxsaW5nVm9sdW1lPXZvaWQgMCx0aGlzLm9jY2x1ZGVyPXZvaWQgMCx0aGlzLnBhc3Nlcz17cmVuZGVyOiExLHBpY2s6ITF9LHRoaXMuY3JlZGl0RGlzcGxheT10LHRoaXMuYWZ0ZXJSZW5kZXI9W10sdGhpcy5zY2VuZTNET25seT0hMX07cmV0dXJuIHR9KSxkZWZpbmUoIlNjZW5lL0ZydXN0dW1Db21tYW5kcyIsWyIuLi9Db3JlL2RlZmF1bHRWYWx1ZSJdLGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0LGkpe3RoaXMubmVhcj1lKHQsMCksdGhpcy5mYXI9ZShpLDApLHRoaXMub3BhcXVlQ29tbWFuZHM9W10sdGhpcy50cmFuc2x1Y2VudENvbW1hbmRzPVtdfTtyZXR1cm4gdH0pLGRlZmluZSgiU2hhZGVycy9Qb3N0UHJvY2Vzc0ZpbHRlcnMvRlhBQSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxMSBOVklESUEgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVE8gIFRIRSBNQVhJTVVNICBFWFRFTlQgUEVSTUlUVEVEICBCWSBBUFBMSUNBQkxFICBMQVcsIFRISVMgU09GVFdBUkUgIElTIFBST1ZJREVEXG4gKiAqQVMgSVMqICBBTkQgTlZJRElBIEFORCAgSVRTIFNVUFBMSUVSUyBESVNDTEFJTSAgQUxMIFdBUlJBTlRJRVMsICBFSVRIRVIgIEVYUFJFU1NcbiAqIE9SIElNUExJRUQsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEICBUTywgTk9OSU5GUklOR0VNRU5ULElNUExJRUQgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIElOIE5PIEVWRU5UIFNIQUxMICBOVklESUEgXG4gKiBPUiBJVFMgU1VQUExJRVJTIEJFICBMSUFCTEUgIEZPUiAgQU5ZICBESVJFQ1QsIFNQRUNJQUwsICBJTkNJREVOVEFMLCAgSU5ESVJFQ1QsICBPUiAgXG4gKiBDT05TRVFVRU5USUFMIERBTUFHRVMgV0hBVFNPRVZFUiAoSU5DTFVESU5HLCBXSVRIT1VUIExJTUlUQVRJT04sICBEQU1BR0VTIEZPUiBMT1NTIFxuICogT0YgQlVTSU5FU1MgUFJPRklUUywgQlVTSU5FU1MgSU5URVJSVVBUSU9OLCBMT1NTIE9GIEJVU0lORVNTIElORk9STUFUSU9OLCBPUiBBTlkgXG4gKiBPVEhFUiBQRUNVTklBUlkgTE9TUykgQVJJU0lORyBPVVQgT0YgVEhFICBVU0UgT0YgT1IgSU5BQklMSVRZICBUTyBVU0UgVEhJUyBTT0ZUV0FSRSwgXG4gKiBFVkVOIElGIE5WSURJQSBIQVMgQkVFTiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRVMuXG4gKi9cblxuLypcbkZYQUFfUFJFU0VUIC0gQ2hvb3NlIGNvbXBpbGUtaW4ga25vYiBwcmVzZXQgMC01LlxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5GWEFBX0VER0VfVEhSRVNIT0xEIC0gVGhlIG1pbmltdW0gYW1vdW50IG9mIGxvY2FsIGNvbnRyYXN0IHJlcXVpcmVkIFxuICAgICAgICAgICAgICAgICAgICAgIHRvIGFwcGx5IGFsZ29yaXRobS5cbiAgICAgICAgICAgICAgICAgICAgICAxLjAvMy4wICAtIHRvbyBsaXR0bGVcbiAgICAgICAgICAgICAgICAgICAgICAxLjAvNC4wICAtIGdvb2Qgc3RhcnRcbiAgICAgICAgICAgICAgICAgICAgICAxLjAvOC4wICAtIGFwcGxpZXMgdG8gbW9yZSBlZGdlc1xuICAgICAgICAgICAgICAgICAgICAgIDEuMC8xNi4wIC0gb3ZlcmtpbGxcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuRlhBQV9FREdFX1RIUkVTSE9MRF9NSU4gLSBUcmltcyB0aGUgYWxnb3JpdGhtIGZyb20gcHJvY2Vzc2luZyBkYXJrcy5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgUGVyZiBvcHRpbWl6YXRpb24uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDEuMC8zMi4wIC0gdmlzaWJsZSBsaW1pdCAoc21hbGxlciBpc24ndCB2aXNpYmxlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAxLjAvMTYuMCAtIGdvb2QgY29tcHJvbWlzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAxLjAvMTIuMCAtIHVwcGVyIGxpbWl0IChzZWVpbmcgYXJ0aWZhY3RzKVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5GWEFBX1NFQVJDSF9TVEVQUyAtIE1heGltdW0gbnVtYmVyIG9mIHNlYXJjaCBzdGVwcyBmb3IgZW5kIG9mIHNwYW4uXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkZYQUFfU0VBUkNIX1RIUkVTSE9MRCAtIENvbnRyb2xzIHdoZW4gdG8gc3RvcCBzZWFyY2hpbmcuXG4gICAgICAgICAgICAgICAgICAgICAgICAxLjAvNC4wIC0gc2VlbXMgdG8gYmUgdGhlIGJlc3QgcXVhbGl0eSB3aXNlXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkZYQUFfU1VCUElYX1RSSU0gLSBDb250cm9scyBzdWItcGl4ZWwgYWxpYXNpbmcgcmVtb3ZhbC5cbiAgICAgICAgICAgICAgICAgICAxLjAvMi4wIC0gbG93IHJlbW92YWxcbiAgICAgICAgICAgICAgICAgICAxLjAvMy4wIC0gbWVkaXVtIHJlbW92YWxcbiAgICAgICAgICAgICAgICAgICAxLjAvNC4wIC0gZGVmYXVsdCByZW1vdmFsXG4gICAgICAgICAgICAgICAgICAgMS4wLzguMCAtIGhpZ2ggcmVtb3ZhbFxuICAgICAgICAgICAgICAgICAgIDAuMCAtIGNvbXBsZXRlIHJlbW92YWxcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuRlhBQV9TVUJQSVhfQ0FQIC0gSW5zdXJlcyBmaW5lIGRldGFpbCBpcyBub3QgY29tcGxldGVseSByZW1vdmVkLlxuICAgICAgICAgICAgICAgICAgVGhpcyBpcyBpbXBvcnRhbnQgZm9yIHRoZSB0cmFuc2l0aW9uIG9mIHN1Yi1waXhlbCBkZXRhaWwsXG4gICAgICAgICAgICAgICAgICBsaWtlIGZlbmNlcyBhbmQgd2lyZXMuXG4gICAgICAgICAgICAgICAgICAzLjAvNC4wIC0gZGVmYXVsdCAobWVkaXVtIGFtb3VudCBvZiBmaWx0ZXJpbmcpXG4gICAgICAgICAgICAgICAgICA3LjAvOC4wIC0gaGlnaCBhbW91bnQgb2YgZmlsdGVyaW5nXG4gICAgICAgICAgICAgICAgICAxLjAgLSBubyBjYXBwaW5nIG9mIHN1Yi1waXhlbCBhbGlhc2luZyByZW1vdmFsXG4qL1xuXG4jaWZuZGVmIEZYQUFfUFJFU0VUXG4gICAgI2RlZmluZSBGWEFBX1BSRVNFVCAzXG4jZW5kaWZcbiNpZiAoRlhBQV9QUkVTRVQgPT0gMylcbiAgICAjZGVmaW5lIEZYQUFfRURHRV9USFJFU0hPTEQgICAgICAoMS4wLzguMClcbiAgICAjZGVmaW5lIEZYQUFfRURHRV9USFJFU0hPTERfTUlOICAoMS4wLzI0LjApXG4gICAgI2RlZmluZSBGWEFBX1NFQVJDSF9TVEVQUyAgICAgICAgMTZcbiAgICAjZGVmaW5lIEZYQUFfU0VBUkNIX1RIUkVTSE9MRCAgICAoMS4wLzQuMClcbiAgICAjZGVmaW5lIEZYQUFfU1VCUElYX0NBUCAgICAgICAgICAoMy4wLzQuMClcbiAgICAjZGVmaW5lIEZYQUFfU1VCUElYX1RSSU0gICAgICAgICAoMS4wLzQuMClcbiNlbmRpZlxuI2lmIChGWEFBX1BSRVNFVCA9PSA0KVxuICAgICNkZWZpbmUgRlhBQV9FREdFX1RIUkVTSE9MRCAgICAgICgxLjAvOC4wKVxuICAgICNkZWZpbmUgRlhBQV9FREdFX1RIUkVTSE9MRF9NSU4gICgxLjAvMjQuMClcbiAgICAjZGVmaW5lIEZYQUFfU0VBUkNIX1NURVBTICAgICAgICAyNFxuICAgICNkZWZpbmUgRlhBQV9TRUFSQ0hfVEhSRVNIT0xEICAgICgxLjAvNC4wKVxuICAgICNkZWZpbmUgRlhBQV9TVUJQSVhfQ0FQICAgICAgICAgICgzLjAvNC4wKVxuICAgICNkZWZpbmUgRlhBQV9TVUJQSVhfVFJJTSAgICAgICAgICgxLjAvNC4wKVxuI2VuZGlmXG4jaWYgKEZYQUFfUFJFU0VUID09IDUpXG4gICAgI2RlZmluZSBGWEFBX0VER0VfVEhSRVNIT0xEICAgICAgKDEuMC84LjApXG4gICAgI2RlZmluZSBGWEFBX0VER0VfVEhSRVNIT0xEX01JTiAgKDEuMC8yNC4wKVxuICAgICNkZWZpbmUgRlhBQV9TRUFSQ0hfU1RFUFMgICAgICAgIDMyXG4gICAgI2RlZmluZSBGWEFBX1NFQVJDSF9USFJFU0hPTEQgICAgKDEuMC80LjApXG4gICAgI2RlZmluZSBGWEFBX1NVQlBJWF9DQVAgICAgICAgICAgKDMuMC80LjApXG4gICAgI2RlZmluZSBGWEFBX1NVQlBJWF9UUklNICAgICAgICAgKDEuMC80LjApXG4jZW5kaWZcblxuI2RlZmluZSBGWEFBX1NVQlBJWF9UUklNX1NDQUxFICgxLjAvKDEuMCAtIEZYQUFfU1VCUElYX1RSSU0pKVxuXG4vLyBSZXR1cm4gdGhlIGx1bWEsIHRoZSBlc3RpbWF0aW9uIG9mIGx1bWluYW5jZSBmcm9tIHJnYiBpbnB1dHMuXG4vLyBUaGlzIGFwcHJveGltYXRlcyBsdW1hIHVzaW5nIG9uZSBGTUEgaW5zdHJ1Y3Rpb24sXG4vLyBza2lwcGluZyBub3JtYWxpemF0aW9uIGFuZCB0b3NzaW5nIG91dCBibHVlLlxuLy8gRnhhYUx1bWEoKSB3aWxsIHJhbmdlIDAuMCB0byAyLjk2MzIxMDcwMi5cbmZsb2F0IEZ4YWFMdW1hKHZlYzMgcmdiKSB7XG4gICAgcmV0dXJuIHJnYi55ICogKDAuNTg3LzAuMjk5KSArIHJnYi54O1xufVxuXG52ZWMzIEZ4YWFMZXJwMyh2ZWMzIGEsIHZlYzMgYiwgZmxvYXQgYW1vdW50T2ZBKSB7XG4gICAgcmV0dXJuICh2ZWMzKC1hbW91bnRPZkEpICogYikgKyAoKGEgKiB2ZWMzKGFtb3VudE9mQSkpICsgYik7XG59XG5cbnZlYzQgRnhhYVRleE9mZihzYW1wbGVyMkQgdGV4LCB2ZWMyIHBvcywgaXZlYzIgb2ZmLCB2ZWMyIHJjcEZyYW1lKSB7XG4gICAgZmxvYXQgeCA9IHBvcy54ICsgZmxvYXQob2ZmLngpICogcmNwRnJhbWUueDtcbiAgICBmbG9hdCB5ID0gcG9zLnkgKyBmbG9hdChvZmYueSkgKiByY3BGcmFtZS55O1xuICAgIHJldHVybiB0ZXh0dXJlMkQodGV4LCB2ZWMyKHgsIHkpKTtcbn1cblxuLy8gcG9zIGlzIHRoZSBvdXRwdXQgb2YgRnhhYVZlcnRleFNoYWRlciBpbnRlcnBvbGF0ZWQgYWNyb3NzIHNjcmVlbi5cbi8vIHh5IC0+IGFjdHVhbCB0ZXh0dXJlIHBvc2l0aW9uIHswLjAgdG8gMS4wfVxuLy8gcmNwRnJhbWUgc2hvdWxkIGJlIGEgdW5pZm9ybSBlcXVhbCB0byAgezEuMC9mcmFtZVdpZHRoLCAxLjAvZnJhbWVIZWlnaHR9XG52ZWMzIEZ4YWFQaXhlbFNoYWRlcih2ZWMyIHBvcywgc2FtcGxlcjJEIHRleCwgdmVjMiByY3BGcmFtZSlcbntcbiAgICB2ZWMzIHJnYk4gPSBGeGFhVGV4T2ZmKHRleCwgcG9zLnh5LCBpdmVjMiggMCwtMSksIHJjcEZyYW1lKS54eXo7XG4gICAgdmVjMyByZ2JXID0gRnhhYVRleE9mZih0ZXgsIHBvcy54eSwgaXZlYzIoLTEsIDApLCByY3BGcmFtZSkueHl6O1xuICAgIHZlYzMgcmdiTSA9IEZ4YWFUZXhPZmYodGV4LCBwb3MueHksIGl2ZWMyKCAwLCAwKSwgcmNwRnJhbWUpLnh5ejtcbiAgICB2ZWMzIHJnYkUgPSBGeGFhVGV4T2ZmKHRleCwgcG9zLnh5LCBpdmVjMiggMSwgMCksIHJjcEZyYW1lKS54eXo7XG4gICAgdmVjMyByZ2JTID0gRnhhYVRleE9mZih0ZXgsIHBvcy54eSwgaXZlYzIoIDAsIDEpLCByY3BGcmFtZSkueHl6O1xuICAgIFxuICAgIGZsb2F0IGx1bWFOID0gRnhhYUx1bWEocmdiTik7XG4gICAgZmxvYXQgbHVtYVcgPSBGeGFhTHVtYShyZ2JXKTtcbiAgICBmbG9hdCBsdW1hTSA9IEZ4YWFMdW1hKHJnYk0pO1xuICAgIGZsb2F0IGx1bWFFID0gRnhhYUx1bWEocmdiRSk7XG4gICAgZmxvYXQgbHVtYVMgPSBGeGFhTHVtYShyZ2JTKTtcbiAgICBmbG9hdCByYW5nZU1pbiA9IG1pbihsdW1hTSwgbWluKG1pbihsdW1hTiwgbHVtYVcpLCBtaW4obHVtYVMsIGx1bWFFKSkpO1xuICAgIGZsb2F0IHJhbmdlTWF4ID0gbWF4KGx1bWFNLCBtYXgobWF4KGx1bWFOLCBsdW1hVyksIG1heChsdW1hUywgbHVtYUUpKSk7XG4gICAgXG4gICAgZmxvYXQgcmFuZ2UgPSByYW5nZU1heCAtIHJhbmdlTWluO1xuICAgIGlmKHJhbmdlIDwgbWF4KEZYQUFfRURHRV9USFJFU0hPTERfTUlOLCByYW5nZU1heCAqIEZYQUFfRURHRV9USFJFU0hPTEQpKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHJnYk07XG4gICAgfVxuICAgIFxuICAgIHZlYzMgcmdiTCA9IHJnYk4gKyByZ2JXICsgcmdiTSArIHJnYkUgKyByZ2JTO1xuICAgIFxuICAgIGZsb2F0IGx1bWFMID0gKGx1bWFOICsgbHVtYVcgKyBsdW1hRSArIGx1bWFTKSAqIDAuMjU7XG4gICAgZmxvYXQgcmFuZ2VMID0gYWJzKGx1bWFMIC0gbHVtYU0pO1xuICAgIGZsb2F0IGJsZW5kTCA9IG1heCgwLjAsIChyYW5nZUwgLyByYW5nZSkgLSBGWEFBX1NVQlBJWF9UUklNKSAqIEZYQUFfU1VCUElYX1RSSU1fU0NBTEU7IFxuICAgIGJsZW5kTCA9IG1pbihGWEFBX1NVQlBJWF9DQVAsIGJsZW5kTCk7XG4gICAgXG4gICAgdmVjMyByZ2JOVyA9IEZ4YWFUZXhPZmYodGV4LCBwb3MueHksIGl2ZWMyKC0xLC0xKSwgcmNwRnJhbWUpLnh5ejtcbiAgICB2ZWMzIHJnYk5FID0gRnhhYVRleE9mZih0ZXgsIHBvcy54eSwgaXZlYzIoIDEsLTEpLCByY3BGcmFtZSkueHl6O1xuICAgIHZlYzMgcmdiU1cgPSBGeGFhVGV4T2ZmKHRleCwgcG9zLnh5LCBpdmVjMigtMSwgMSksIHJjcEZyYW1lKS54eXo7XG4gICAgdmVjMyByZ2JTRSA9IEZ4YWFUZXhPZmYodGV4LCBwb3MueHksIGl2ZWMyKCAxLCAxKSwgcmNwRnJhbWUpLnh5ejtcbiAgICByZ2JMICs9IChyZ2JOVyArIHJnYk5FICsgcmdiU1cgKyByZ2JTRSk7XG4gICAgcmdiTCAqPSB2ZWMzKDEuMC85LjApO1xuICAgIFxuICAgIGZsb2F0IGx1bWFOVyA9IEZ4YWFMdW1hKHJnYk5XKTtcbiAgICBmbG9hdCBsdW1hTkUgPSBGeGFhTHVtYShyZ2JORSk7XG4gICAgZmxvYXQgbHVtYVNXID0gRnhhYUx1bWEocmdiU1cpO1xuICAgIGZsb2F0IGx1bWFTRSA9IEZ4YWFMdW1hKHJnYlNFKTtcbiAgICBcbiAgICBmbG9hdCBlZGdlVmVydCA9IFxuICAgICAgICBhYnMoKDAuMjUgKiBsdW1hTlcpICsgKC0wLjUgKiBsdW1hTikgKyAoMC4yNSAqIGx1bWFORSkpICtcbiAgICAgICAgYWJzKCgwLjUwICogbHVtYVcgKSArICgtMS4wICogbHVtYU0pICsgKDAuNTAgKiBsdW1hRSApKSArXG4gICAgICAgIGFicygoMC4yNSAqIGx1bWFTVykgKyAoLTAuNSAqIGx1bWFTKSArICgwLjI1ICogbHVtYVNFKSk7XG4gICAgZmxvYXQgZWRnZUhvcnogPSBcbiAgICAgICAgYWJzKCgwLjI1ICogbHVtYU5XKSArICgtMC41ICogbHVtYVcpICsgKDAuMjUgKiBsdW1hU1cpKSArXG4gICAgICAgIGFicygoMC41MCAqIGx1bWFOICkgKyAoLTEuMCAqIGx1bWFNKSArICgwLjUwICogbHVtYVMgKSkgK1xuICAgICAgICBhYnMoKDAuMjUgKiBsdW1hTkUpICsgKC0wLjUgKiBsdW1hRSkgKyAoMC4yNSAqIGx1bWFTRSkpO1xuICAgICAgICBcbiAgICBib29sIGhvcnpTcGFuID0gZWRnZUhvcnogPj0gZWRnZVZlcnQ7XG4gICAgZmxvYXQgbGVuZ3RoU2lnbiA9IGhvcnpTcGFuID8gLXJjcEZyYW1lLnkgOiAtcmNwRnJhbWUueDtcbiAgICBcbiAgICBpZighaG9yelNwYW4pXG4gICAge1xuICAgICAgICBsdW1hTiA9IGx1bWFXO1xuICAgICAgICBsdW1hUyA9IGx1bWFFO1xuICAgIH1cbiAgICBcbiAgICBmbG9hdCBncmFkaWVudE4gPSBhYnMobHVtYU4gLSBsdW1hTSk7XG4gICAgZmxvYXQgZ3JhZGllbnRTID0gYWJzKGx1bWFTIC0gbHVtYU0pO1xuICAgIGx1bWFOID0gKGx1bWFOICsgbHVtYU0pICogMC41O1xuICAgIGx1bWFTID0gKGx1bWFTICsgbHVtYU0pICogMC41O1xuICAgIFxuICAgIGlmIChncmFkaWVudE4gPCBncmFkaWVudFMpXG4gICAge1xuICAgICAgICBsdW1hTiA9IGx1bWFTO1xuICAgICAgICBsdW1hTiA9IGx1bWFTO1xuICAgICAgICBncmFkaWVudE4gPSBncmFkaWVudFM7XG4gICAgICAgIGxlbmd0aFNpZ24gKj0gLTEuMDtcbiAgICB9XG4gICAgXG4gICAgdmVjMiBwb3NOO1xuICAgIHBvc04ueCA9IHBvcy54ICsgKGhvcnpTcGFuID8gMC4wIDogbGVuZ3RoU2lnbiAqIDAuNSk7XG4gICAgcG9zTi55ID0gcG9zLnkgKyAoaG9yelNwYW4gPyBsZW5ndGhTaWduICogMC41IDogMC4wKTtcbiAgICBcbiAgICBncmFkaWVudE4gKj0gRlhBQV9TRUFSQ0hfVEhSRVNIT0xEO1xuICAgIFxuICAgIHZlYzIgcG9zUCA9IHBvc047XG4gICAgdmVjMiBvZmZOUCA9IGhvcnpTcGFuID8gdmVjMihyY3BGcmFtZS54LCAwLjApIDogdmVjMigwLjAsIHJjcEZyYW1lLnkpOyBcbiAgICBmbG9hdCBsdW1hRW5kTiA9IGx1bWFOO1xuICAgIGZsb2F0IGx1bWFFbmRQID0gbHVtYU47XG4gICAgYm9vbCBkb25lTiA9IGZhbHNlO1xuICAgIGJvb2wgZG9uZVAgPSBmYWxzZTtcbiAgICBwb3NOICs9IG9mZk5QICogdmVjMigtMS4wLCAtMS4wKTtcbiAgICBwb3NQICs9IG9mZk5QICogdmVjMiggMS4wLCAgMS4wKTtcbiAgICBcbiAgICBmb3IoaW50IGkgPSAwOyBpIDwgRlhBQV9TRUFSQ0hfU1RFUFM7IGkrKykge1xuICAgICAgICBpZighZG9uZU4pXG4gICAgICAgIHtcbiAgICAgICAgICAgIGx1bWFFbmROID0gRnhhYUx1bWEodGV4dHVyZTJEKHRleCwgcG9zTi54eSkueHl6KTtcbiAgICAgICAgfVxuICAgICAgICBpZighZG9uZVApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGx1bWFFbmRQID0gRnhhYUx1bWEodGV4dHVyZTJEKHRleCwgcG9zUC54eSkueHl6KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZG9uZU4gPSBkb25lTiB8fCAoYWJzKGx1bWFFbmROIC0gbHVtYU4pID49IGdyYWRpZW50Tik7XG4gICAgICAgIGRvbmVQID0gZG9uZVAgfHwgKGFicyhsdW1hRW5kUCAtIGx1bWFOKSA+PSBncmFkaWVudE4pO1xuICAgICAgICBcbiAgICAgICAgaWYoZG9uZU4gJiYgZG9uZVApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmKCFkb25lTilcbiAgICAgICAge1xuICAgICAgICAgICAgcG9zTiAtPSBvZmZOUDtcbiAgICAgICAgfVxuICAgICAgICBpZighZG9uZVApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHBvc1AgKz0gb2ZmTlA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZmxvYXQgZHN0TiA9IGhvcnpTcGFuID8gcG9zLnggLSBwb3NOLnggOiBwb3MueSAtIHBvc04ueTtcbiAgICBmbG9hdCBkc3RQID0gaG9yelNwYW4gPyBwb3NQLnggLSBwb3MueCA6IHBvc1AueSAtIHBvcy55O1xuICAgIGJvb2wgZGlyZWN0aW9uTiA9IGRzdE4gPCBkc3RQO1xuICAgIGx1bWFFbmROID0gZGlyZWN0aW9uTiA/IGx1bWFFbmROIDogbHVtYUVuZFA7XG4gICAgXG4gICAgaWYoKChsdW1hTSAtIGx1bWFOKSA8IDAuMCkgPT0gKChsdW1hRW5kTiAtIGx1bWFOKSA8IDAuMCkpXG4gICAge1xuICAgICAgICBsZW5ndGhTaWduID0gMC4wO1xuICAgIH1cbiBcblxuICAgIGZsb2F0IHNwYW5MZW5ndGggPSAoZHN0UCArIGRzdE4pO1xuICAgIGRzdE4gPSBkaXJlY3Rpb25OID8gZHN0TiA6IGRzdFA7XG4gICAgZmxvYXQgc3ViUGl4ZWxPZmZzZXQgPSAoMC41ICsgKGRzdE4gKiAoLTEuMC9zcGFuTGVuZ3RoKSkpICogbGVuZ3RoU2lnbjtcbiAgICB2ZWMzIHJnYkYgPSB0ZXh0dXJlMkQodGV4LCB2ZWMyKFxuICAgICAgICBwb3MueCArIChob3J6U3BhbiA/IDAuMCA6IHN1YlBpeGVsT2Zmc2V0KSxcbiAgICAgICAgcG9zLnkgKyAoaG9yelNwYW4gPyBzdWJQaXhlbE9mZnNldCA6IDAuMCkpKS54eXo7XG4gICAgcmV0dXJuIEZ4YWFMZXJwMyhyZ2JMLCByZ2JGLCBibGVuZEwpOyBcbn1cblxudW5pZm9ybSBzYW1wbGVyMkQgdV90ZXh0dXJlO1xudW5pZm9ybSB2ZWMyIHVfc3RlcDtcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG52b2lkIG1haW4oKVxue1xuICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoRnhhYVBpeGVsU2hhZGVyKHZfdGV4dHVyZUNvb3JkaW5hdGVzLCB1X3RleHR1cmUsIHVfc3RlcCksIDEuMCk7XG59XG4ifSksZGVmaW5lKCJTY2VuZS9GWEFBIixbIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL1BpeGVsRm9ybWF0IiwiLi4vUmVuZGVyZXIvQ2xlYXJDb21tYW5kIiwiLi4vUmVuZGVyZXIvY3JlYXRlU2hhZGVyU291cmNlIiwiLi4vUmVuZGVyZXIvUGl4ZWxEYXRhdHlwZSIsIi4uL1JlbmRlcmVyL1JlbmRlcmJ1ZmZlckZvcm1hdCIsIi4uL1NoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL0ZYQUEiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYyhlKXtlLl9mYm89ZS5fZmJvJiZlLl9mYm8uZGVzdHJveSgpLGUuX3RleHR1cmU9ZS5fdGV4dHVyZSYmZS5fdGV4dHVyZS5kZXN0cm95KCksZS5fZGVwdGhUZXh0dXJlPWUuX2RlcHRoVGV4dHVyZSYmZS5fZGVwdGhUZXh0dXJlLmRlc3Ryb3koKSxlLl9kZXB0aFJlbmRlcmJ1ZmZlcj1lLl9kZXB0aFJlbmRlcmJ1ZmZlciYmZS5fZGVwdGhSZW5kZXJidWZmZXIuZGVzdHJveSgpLGUuX2Zibz12b2lkIDAsZS5fdGV4dHVyZT12b2lkIDAsZS5fZGVwdGhUZXh0dXJlPXZvaWQgMCxlLl9kZXB0aFJlbmRlcmJ1ZmZlcj12b2lkIDAsaShlLl9jb21tYW5kKSYmKGUuX2NvbW1hbmQuc2hhZGVyUHJvZ3JhbT1lLl9jb21tYW5kLnNoYWRlclByb2dyYW0mJmUuX2NvbW1hbmQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksZS5fY29tbWFuZD12b2lkIDApfXZhciBkPWZ1bmN0aW9uKCl7dGhpcy5fdGV4dHVyZT12b2lkIDAsdGhpcy5fZGVwdGhUZXh0dXJlPXZvaWQgMCx0aGlzLl9kZXB0aFJlbmRlcmJ1ZmZlcj12b2lkIDAsdGhpcy5fZmJvPXZvaWQgMCx0aGlzLl9jb21tYW5kPXZvaWQgMDt2YXIgZT1uZXcgbyh7Y29sb3I6bmV3IHQoMCwwLDAsMCksZGVwdGg6MSxvd25lcjp0aGlzfSk7dGhpcy5fY2xlYXJDb21tYW5kPWV9O3JldHVybiBkLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCl7dmFyIG49dC5kcmF3aW5nQnVmZmVyV2lkdGgsbz10LmRyYXdpbmdCdWZmZXJIZWlnaHQsYz10aGlzLl90ZXh0dXJlLGQ9IWkoYyl8fGMud2lkdGghPT1ufHxjLmhlaWdodCE9PW87aWYoZCYmKHRoaXMuX3RleHR1cmU9dGhpcy5fdGV4dHVyZSYmdGhpcy5fdGV4dHVyZS5kZXN0cm95KCksdGhpcy5fZGVwdGhUZXh0dXJlPXRoaXMuX2RlcHRoVGV4dHVyZSYmdGhpcy5fZGVwdGhUZXh0dXJlLmRlc3Ryb3koKSx0aGlzLl9kZXB0aFJlbmRlcmJ1ZmZlcj10aGlzLl9kZXB0aFJlbmRlcmJ1ZmZlciYmdGhpcy5fZGVwdGhSZW5kZXJidWZmZXIuZGVzdHJveSgpLHRoaXMuX3RleHR1cmU9dC5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOm4saGVpZ2h0Om8scGl4ZWxGb3JtYXQ6ci5SR0JBLHBpeGVsRGF0YXR5cGU6cy5VTlNJR05FRF9CWVRFfSksdC5kZXB0aFRleHR1cmU/dGhpcy5fZGVwdGhUZXh0dXJlPXQuY3JlYXRlVGV4dHVyZTJEKHt3aWR0aDpuLGhlaWdodDpvLHBpeGVsRm9ybWF0OnIuREVQVEhfQ09NUE9ORU5ULHBpeGVsRGF0YXR5cGU6cy5VTlNJR05FRF9TSE9SVH0pOnRoaXMuX2RlcHRoUmVuZGVyYnVmZmVyPXQuY3JlYXRlUmVuZGVyYnVmZmVyKHt3aWR0aDpuLGhlaWdodDpvLGZvcm1hdDpsLkRFUFRIX0NPTVBPTkVOVDE2fSkpLCghaSh0aGlzLl9mYm8pfHxkKSYmKHRoaXMuX2Zibz10aGlzLl9mYm8mJnRoaXMuX2Ziby5kZXN0cm95KCksdGhpcy5fZmJvPXQuY3JlYXRlRnJhbWVidWZmZXIoe2NvbG9yVGV4dHVyZXM6W3RoaXMuX3RleHR1cmVdLGRlcHRoVGV4dHVyZTp0aGlzLl9kZXB0aFRleHR1cmUsZGVwdGhSZW5kZXJidWZmZXI6dGhpcy5fZGVwdGhSZW5kZXJidWZmZXIsZGVzdHJveUF0dGFjaG1lbnRzOiExfSkpLCFpKHRoaXMuX2NvbW1hbmQpKXt2YXIgaD1hKHtzb3VyY2VzOlt1XX0pO3RoaXMuX2NvbW1hbmQ9dC5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKGgse3JlbmRlclN0YXRlOnQuY3JlYXRlUmVuZGVyU3RhdGUoKSxvd25lcjp0aGlzfSl9aWYoZCl7dmFyIG09dGhpcyxmPW5ldyBlKDEvdGhpcy5fdGV4dHVyZS53aWR0aCwxL3RoaXMuX3RleHR1cmUuaGVpZ2h0KTt0aGlzLl9jb21tYW5kLnVuaWZvcm1NYXA9e3VfdGV4dHVyZTpmdW5jdGlvbigpe3JldHVybiBtLl90ZXh0dXJlfSx1X3N0ZXA6ZnVuY3Rpb24oKXtyZXR1cm4gZn19fX0sZC5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbihlLHQpe3RoaXMuX2NvbW1hbmQuZXhlY3V0ZShlLHQpfSxkLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbihlLGksbil7dmFyIHI9aS5mcmFtZWJ1ZmZlcjtpLmZyYW1lYnVmZmVyPXRoaXMuX2Zibyx0LmNsb25lKG4sdGhpcy5fY2xlYXJDb21tYW5kLmNvbG9yKSx0aGlzLl9jbGVhckNvbW1hbmQuZXhlY3V0ZShlLGkpLGkuZnJhbWVidWZmZXI9cn0sZC5wcm90b3R5cGUuZ2V0Q29sb3JGcmFtZWJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9mYm99LGQucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzKSxuKHRoaXMpfSxkfSksZGVmaW5lKCJTaGFkZXJzL0FkanVzdFRyYW5zbHVjZW50RlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiIjaWZkZWYgTVJUXG4jZXh0ZW5zaW9uIEdMX0VYVF9kcmF3X2J1ZmZlcnMgOiBlbmFibGVcbiNlbmRpZlxuXG51bmlmb3JtIHZlYzQgdV9iZ0NvbG9yO1xudW5pZm9ybSBzYW1wbGVyMkQgdV9kZXB0aFRleHR1cmU7XG5cbnZhcnlpbmcgdmVjMiB2X3RleHR1cmVDb29yZGluYXRlcztcblxudm9pZCBtYWluKClcbntcbiAgICBpZiAodGV4dHVyZTJEKHVfZGVwdGhUZXh0dXJlLCB2X3RleHR1cmVDb29yZGluYXRlcykuciA8IDEuMClcbiAgICB7XG4jaWZkZWYgTVJUXG4gICAgICAgIGdsX0ZyYWdEYXRhWzBdID0gdV9iZ0NvbG9yO1xuICAgICAgICBnbF9GcmFnRGF0YVsxXSA9IHZlYzQodV9iZ0NvbG9yLmEpO1xuI2Vsc2VcbiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdV9iZ0NvbG9yO1xuI2VuZGlmXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgZGlzY2FyZDtcbn0ifSksZGVmaW5lKCJTaGFkZXJzL0NvbXBvc2l0ZU9JVEZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBDb21wb3NpdGluZyBmb3IgV2VpZ2h0ZWQgQmxlbmRlZCBPcmRlci1JbmRlcGVuZGVudCBUcmFuc3BhcmVuY3kuIFNlZTpcbiAqIC0gaHR0cDovL2pjZ3Qub3JnL3B1Ymxpc2hlZC8wMDAyLzAyLzA5L1xuICogLSBodHRwOi8vY2FzdWFsLWVmZmVjdHMuYmxvZ3Nwb3QuY29tLzIwMTQvMDMvd2VpZ2h0ZWQtYmxlbmRlZC1vcmRlci1pbmRlcGVuZGVudC5odG1sXG4gKi9cbiBcbnVuaWZvcm0gc2FtcGxlcjJEIHVfb3BhcXVlO1xudW5pZm9ybSBzYW1wbGVyMkQgdV9hY2N1bXVsYXRpb247XG51bmlmb3JtIHNhbXBsZXIyRCB1X3JldmVhbGFnZTtcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG52b2lkIG1haW4oKVxue1xuICAgIHZlYzQgb3BhcXVlID0gdGV4dHVyZTJEKHVfb3BhcXVlLCB2X3RleHR1cmVDb29yZGluYXRlcyk7XG4gICAgdmVjNCBhY2N1bSA9IHRleHR1cmUyRCh1X2FjY3VtdWxhdGlvbiwgdl90ZXh0dXJlQ29vcmRpbmF0ZXMpO1xuICAgIGZsb2F0IHIgPSB0ZXh0dXJlMkQodV9yZXZlYWxhZ2UsIHZfdGV4dHVyZUNvb3JkaW5hdGVzKS5yO1xuICAgIFxuI2lmZGVmIE1SVFxuICAgIHZlYzQgdHJhbnNwYXJlbnQgPSB2ZWM0KGFjY3VtLnJnYiAvIGNsYW1wKHIsIDFlLTQsIDVlNCksIGFjY3VtLmEpO1xuI2Vsc2VcbiAgICB2ZWM0IHRyYW5zcGFyZW50ID0gdmVjNChhY2N1bS5yZ2IgLyBjbGFtcChhY2N1bS5hLCAxZS00LCA1ZTQpLCByKTtcbiNlbmRpZlxuICAgIFxuICAgIGdsX0ZyYWdDb2xvciA9ICgxLjAgLSB0cmFuc3BhcmVudC5hKSAqIHRyYW5zcGFyZW50ICsgdHJhbnNwYXJlbnQuYSAqIG9wYXF1ZTtcbn1cbiJ9KSxkZWZpbmUoIlNjZW5lL09JVCIsWyIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9QaXhlbEZvcm1hdCIsIi4uL1JlbmRlcmVyL0NsZWFyQ29tbWFuZCIsIi4uL1JlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsIi4uL1JlbmRlcmVyL1BpeGVsRGF0YXR5cGUiLCIuLi9SZW5kZXJlci9SZW5kZXJTdGF0ZSIsIi4uL1NoYWRlcnMvQWRqdXN0VHJhbnNsdWNlbnRGUyIsIi4uL1NoYWRlcnMvQ29tcG9zaXRlT0lURlMiLCIuL0JsZW5kRXF1YXRpb24iLCIuL0JsZW5kRnVuY3Rpb24iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGgoZSl7ZS5fb3BhcXVlVGV4dHVyZT1lLl9vcGFxdWVUZXh0dXJlJiYhZS5fb3BhcXVlVGV4dHVyZS5pc0Rlc3Ryb3llZCgpJiZlLl9vcGFxdWVUZXh0dXJlLmRlc3Ryb3koKSxlLl9hY2N1bXVsYXRpb25UZXh0dXJlPWUuX2FjY3VtdWxhdGlvblRleHR1cmUmJiFlLl9hY2N1bXVsYXRpb25UZXh0dXJlLmlzRGVzdHJveWVkKCkmJmUuX2FjY3VtdWxhdGlvblRleHR1cmUuZGVzdHJveSgpLGUuX3JldmVhbGFnZVRleHR1cmU9ZS5fcmV2ZWFsYWdlVGV4dHVyZSYmIWUuX3JldmVhbGFnZVRleHR1cmUuaXNEZXN0cm95ZWQoKSYmZS5fcmV2ZWFsYWdlVGV4dHVyZS5kZXN0cm95KCksZS5fZGVwdGhUZXh0dXJlPWUuX2RlcHRoVGV4dHVyZSYmIWUuX2RlcHRoVGV4dHVyZS5pc0Rlc3Ryb3llZCgpJiZlLl9kZXB0aFRleHR1cmUuZGVzdHJveSgpfWZ1bmN0aW9uIG0oZSl7ZS5fb3BhcXVlRkJPPWUuX29wYXF1ZUZCTyYmIWUuX29wYXF1ZUZCTy5pc0Rlc3Ryb3llZCgpJiZlLl9vcGFxdWVGQk8uZGVzdHJveSgpLGUuX3RyYW5zbHVjZW50RkJPPWUuX3RyYW5zbHVjZW50RkJPJiYhZS5fdHJhbnNsdWNlbnRGQk8uaXNEZXN0cm95ZWQoKSYmZS5fdHJhbnNsdWNlbnRGQk8uZGVzdHJveSgpLGUuX2FscGhhRkJPPWUuX2FscGhhRkJPJiYhZS5fYWxwaGFGQk8uaXNEZXN0cm95ZWQoKSYmZS5fYWxwaGFGQk8uZGVzdHJveSgpLGUuX2FkanVzdFRyYW5zbHVjZW50RkJPPWUuX2FkanVzdFRyYW5zbHVjZW50RkJPJiYhZS5fYWRqdXN0VHJhbnNsdWNlbnRGQk8uaXNEZXN0cm95ZWQoKSYmZS5fYWRqdXN0VHJhbnNsdWNlbnRGQk8uZGVzdHJveSgpLGUuX2FkanVzdEFscGhhRkJPPWUuX2FkanVzdEFscGhhRkJPJiYhZS5fYWRqdXN0QWxwaGFGQk8uaXNEZXN0cm95ZWQoKSYmZS5fYWRqdXN0QWxwaGFGQk8uZGVzdHJveSgpfWZ1bmN0aW9uIGYoZSl7aChlKSxtKGUpfWZ1bmN0aW9uIHAoZSx0LGkscil7aChlKSxlLl9vcGFxdWVUZXh0dXJlPXQuY3JlYXRlVGV4dHVyZTJEKHt3aWR0aDppLGhlaWdodDpyLHBpeGVsRm9ybWF0Om4uUkdCQSxwaXhlbERhdGF0eXBlOmEuVU5TSUdORURfQllURX0pLGUuX2FjY3VtdWxhdGlvblRleHR1cmU9dC5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOmksaGVpZ2h0OnIscGl4ZWxGb3JtYXQ6bi5SR0JBLHBpeGVsRGF0YXR5cGU6YS5GTE9BVH0pLGUuX3JldmVhbGFnZVRleHR1cmU9dC5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOmksaGVpZ2h0OnIscGl4ZWxGb3JtYXQ6bi5SR0JBLHBpeGVsRGF0YXR5cGU6YS5GTE9BVH0pLGUuX2RlcHRoVGV4dHVyZT10LmNyZWF0ZVRleHR1cmUyRCh7d2lkdGg6aSxoZWlnaHQ6cixwaXhlbEZvcm1hdDpuLkRFUFRIX0NPTVBPTkVOVCxwaXhlbERhdGF0eXBlOmEuVU5TSUdORURfU0hPUlR9KX1mdW5jdGlvbiB2KGUsdCl7bShlKTt2YXIgaT1XZWJHTFJlbmRlcmluZ0NvbnRleHQuRlJBTUVCVUZGRVJfQ09NUExFVEUsbj0hMDtpZihlLl90cmFuc2x1Y2VudE1SVFN1cHBvcnQmJihlLl90cmFuc2x1Y2VudEZCTz10LmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOltlLl9hY2N1bXVsYXRpb25UZXh0dXJlLGUuX3JldmVhbGFnZVRleHR1cmVdLGRlcHRoVGV4dHVyZTplLl9kZXB0aFRleHR1cmUsZGVzdHJveUF0dGFjaG1lbnRzOiExfSksZS5fYWRqdXN0VHJhbnNsdWNlbnRGQk89dC5jcmVhdGVGcmFtZWJ1ZmZlcih7Y29sb3JUZXh0dXJlczpbZS5fYWNjdW11bGF0aW9uVGV4dHVyZSxlLl9yZXZlYWxhZ2VUZXh0dXJlXSxkZXN0cm95QXR0YWNobWVudHM6ITF9KSwoZS5fdHJhbnNsdWNlbnRGQk8uc3RhdHVzIT09aXx8ZS5fYWRqdXN0VHJhbnNsdWNlbnRGQk8uc3RhdHVzIT09aSkmJihtKGUpLGUuX3RyYW5zbHVjZW50TVJUU3VwcG9ydD0hMSkpLCFlLl90cmFuc2x1Y2VudE1SVFN1cHBvcnQpe2UuX3RyYW5zbHVjZW50RkJPPXQuY3JlYXRlRnJhbWVidWZmZXIoe2NvbG9yVGV4dHVyZXM6W2UuX2FjY3VtdWxhdGlvblRleHR1cmVdLGRlcHRoVGV4dHVyZTplLl9kZXB0aFRleHR1cmUsZGVzdHJveUF0dGFjaG1lbnRzOiExfSksZS5fYWxwaGFGQk89dC5jcmVhdGVGcmFtZWJ1ZmZlcih7Y29sb3JUZXh0dXJlczpbZS5fcmV2ZWFsYWdlVGV4dHVyZV0sZGVwdGhUZXh0dXJlOmUuX2RlcHRoVGV4dHVyZSxkZXN0cm95QXR0YWNobWVudHM6ITF9KSxlLl9hZGp1c3RUcmFuc2x1Y2VudEZCTz10LmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOltlLl9hY2N1bXVsYXRpb25UZXh0dXJlXSxkZXN0cm95QXR0YWNobWVudHM6ITF9KSxlLl9hZGp1c3RBbHBoYUZCTz10LmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOltlLl9yZXZlYWxhZ2VUZXh0dXJlXSxkZXN0cm95QXR0YWNobWVudHM6ITF9KTt2YXIgcj1lLl90cmFuc2x1Y2VudEZCTy5zdGF0dXM9PT1pLG89ZS5fYWxwaGFGQk8uc3RhdHVzPT09aSxhPWUuX2FkanVzdFRyYW5zbHVjZW50RkJPLnN0YXR1cz09PWkscz1lLl9hZGp1c3RBbHBoYUZCTy5zdGF0dXM9PT1pO3ImJm8mJmEmJnN8fChmKGUpLGUuX3RyYW5zbHVjZW50TXVsdGlwYXNzU3VwcG9ydD0hMSxuPSExKX1yZXR1cm4gbiYmKGUuX29wYXF1ZUZCTz10LmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOltlLl9vcGFxdWVUZXh0dXJlXSxkZXB0aFRleHR1cmU6ZS5fZGVwdGhUZXh0dXJlLGRlc3Ryb3lBdHRhY2htZW50czohMX0pKSxufWZ1bmN0aW9uIGcoZSxpLG4scil7dmFyIG89bltyLmlkXTtpZighdChvKSl7dmFyIGE9cy5jbG9uZShyKTthLmRlcHRoTWFzaz0hMSxhLmJsZW5kaW5nPWksbz1lLmNyZWF0ZVJlbmRlclN0YXRlKGEpLG5bci5pZF09b31yZXR1cm4gb31mdW5jdGlvbiBfKGUsdCxpKXtyZXR1cm4gZyh0LFAsZS5fdHJhbnNsdWNlbnRSZW5kZXJTdGF0ZUNhY2hlLGkpfWZ1bmN0aW9uIHkoZSx0LGkpe3JldHVybiBnKHQsTSxlLl90cmFuc2x1Y2VudFJlbmRlclN0YXRlQ2FjaGUsaSl9ZnVuY3Rpb24gQyhlLHQsaSl7cmV0dXJuIGcodCxJLGUuX2FscGhhUmVuZGVyU3RhdGVDYWNoZSxpKX1mdW5jdGlvbiB3KGUsaSxuLHIpe3ZhciBvPWkuaWQsYT1uW29dO2lmKCF0KGEpKXt2YXIgcz1pLl9hdHRyaWJ1dGVMb2NhdGlvbnMsbD1pLnZlcnRleFNoYWRlclNvdXJjZSx1PWkuZnJhZ21lbnRTaGFkZXJTb3VyY2UsYz11LnJlcGxhY2UoL3ZvaWRccyttYWluXHMqXChccyooPzp2b2lkKT9ccypcKS9nLCJ2b2lkIGN6bV90cmFuc2x1Y2VudF9tYWluKCkiKTtjPWMucmVwbGFjZSgvZ2xfRnJhZ0NvbG9yL2csImN6bV9nbF9GcmFnQ29sb3IiKSxjPWMucmVwbGFjZSgvXGJkaXNjYXJkXGIvZywiY3ptX2Rpc2NhcmQgPSB0cnVlIiksYz1jLnJlcGxhY2UoL2N6bV9waG9uZy9nLCJjem1fdHJhbnNsdWNlbnRQaG9uZyIpO3ZhciBkPSgtMSE9PXIuaW5kZXhPZigiZ2xfRnJhZ0RhdGEiKT8iI2V4dGVuc2lvbiBHTF9FWFRfZHJhd19idWZmZXJzIDogZW5hYmxlIFxuIjoiIikrInZlYzQgY3ptX2dsX0ZyYWdDb2xvcjtcbiIrImJvb2wgY3ptX2Rpc2NhcmQgPSBmYWxzZTtcbiIrYysiXG5cbiIrInZvaWQgbWFpbigpXG4iKyJ7XG4iKyIgICAgY3ptX3RyYW5zbHVjZW50X21haW4oKTtcbiIrIiAgICBpZiAoY3ptX2Rpc2NhcmQpXG4iKyIgICAge1xuIisiICAgICAgICBkaXNjYXJkO1xuIisiICAgIH1cbiIrcisifVxuIjthPWUuY3JlYXRlU2hhZGVyUHJvZ3JhbShsLGQscyksbltvXT1hfXJldHVybiBhfWZ1bmN0aW9uIEUoZSx0LGkpe3JldHVybiB3KHQsaSxlLl90cmFuc2x1Y2VudFNoYWRlckNhY2hlLEQpfWZ1bmN0aW9uIGIoZSx0LGkpe3JldHVybiB3KHQsaSxlLl90cmFuc2x1Y2VudFNoYWRlckNhY2hlLE8pfWZ1bmN0aW9uIFMoZSx0LGkpe3JldHVybiB3KHQsaSxlLl9hbHBoYVNoYWRlckNhY2hlLFIpfWZ1bmN0aW9uIFQoZSxpLG4scixvKXt2YXIgYSxzLGwsdSxjPWkuY29udGV4dCxkPXIuZnJhbWVidWZmZXIsaD1vLmxlbmd0aDtyLmZyYW1lYnVmZmVyPWUuX2FkanVzdFRyYW5zbHVjZW50RkJPLGUuX2FkanVzdFRyYW5zbHVjZW50Q29tbWFuZC5leGVjdXRlKGMsciksci5mcmFtZWJ1ZmZlcj1lLl9hZGp1c3RBbHBoYUZCTyxlLl9hZGp1c3RBbHBoYUNvbW1hbmQuZXhlY3V0ZShjLHIpO3ZhciBtPWUuX29wYXF1ZUZCTztmb3Ioci5mcmFtZWJ1ZmZlcj1lLl90cmFuc2x1Y2VudEZCTyx1PTA7aD51OysrdSlhPW9bdV0sdChhLm9pdCkmJmEuc2hhZGVyUHJvZ3JhbS5pZD09PWEub2l0LnNoYWRlclByb2dyYW1JZHx8KGEub2l0PXtjb2xvclJlbmRlclN0YXRlOnkoZSxjLGEucmVuZGVyU3RhdGUpLGFscGhhUmVuZGVyU3RhdGU6QyhlLGMsYS5yZW5kZXJTdGF0ZSksY29sb3JTaGFkZXJQcm9ncmFtOmIoZSxjLGEuc2hhZGVyUHJvZ3JhbSksYWxwaGFTaGFkZXJQcm9ncmFtOlMoZSxjLGEuc2hhZGVyUHJvZ3JhbSksc2hhZGVyUHJvZ3JhbUlkOmEuc2hhZGVyUHJvZ3JhbS5pZH0pLHM9YS5vaXQuY29sb3JSZW5kZXJTdGF0ZSxsPWEub2l0LmNvbG9yU2hhZGVyUHJvZ3JhbSxuKGEsaSxjLHIscyxsLG0pO2ZvcihyLmZyYW1lYnVmZmVyPWUuX2FscGhhRkJPLHU9MDtoPnU7Kyt1KWE9b1t1XSxzPWEub2l0LmFscGhhUmVuZGVyU3RhdGUsbD1hLm9pdC5hbHBoYVNoYWRlclByb2dyYW0sbihhLGksYyxyLHMsbCxtKTtyLmZyYW1lYnVmZmVyPWR9ZnVuY3Rpb24geChlLGksbixyLG8pe3ZhciBhPWkuY29udGV4dCxzPXIuZnJhbWVidWZmZXIsbD1vLmxlbmd0aDtyLmZyYW1lYnVmZmVyPWUuX2FkanVzdFRyYW5zbHVjZW50RkJPLGUuX2FkanVzdFRyYW5zbHVjZW50Q29tbWFuZC5leGVjdXRlKGEscik7dmFyIHU9ZS5fb3BhcXVlRkJPO3IuZnJhbWVidWZmZXI9ZS5fdHJhbnNsdWNlbnRGQk87Zm9yKHZhciBjPTA7bD5jOysrYyl7dmFyIGQ9b1tjXTt0KGQub2l0KSYmZC5zaGFkZXJQcm9ncmFtLmlkPT09ZC5vaXQuc2hhZGVyUHJvZ3JhbUlkfHwoZC5vaXQ9e3RyYW5zbHVjZW50UmVuZGVyU3RhdGU6XyhlLGEsZC5yZW5kZXJTdGF0ZSksdHJhbnNsdWNlbnRTaGFkZXJQcm9ncmFtOkUoZSxhLGQuc2hhZGVyUHJvZ3JhbSksc2hhZGVyUHJvZ3JhbUlkOmQuc2hhZGVyUHJvZ3JhbS5pZH0pO3ZhciBoPWQub2l0LnRyYW5zbHVjZW50UmVuZGVyU3RhdGUsbT1kLm9pdC50cmFuc2x1Y2VudFNoYWRlclByb2dyYW07bihkLGksYSxyLGgsbSx1KX1yLmZyYW1lYnVmZmVyPXN9dmFyIEE9ZnVuY3Rpb24odCl7dmFyIGk9dC5mbG9hdGluZ1BvaW50VGV4dHVyZSYmdC5kZXB0aFRleHR1cmU7dGhpcy5fdHJhbnNsdWNlbnRNUlRTdXBwb3J0PXQuZHJhd0J1ZmZlcnMmJmksdGhpcy5fdHJhbnNsdWNlbnRNdWx0aXBhc3NTdXBwb3J0PSF0aGlzLl90cmFuc2x1Y2VudE1SVFN1cHBvcnQmJmksdGhpcy5fb3BhcXVlVGV4dHVyZT12b2lkIDAsdGhpcy5fYWNjdW11bGF0aW9uVGV4dHVyZT12b2lkIDAsdGhpcy5fZGVwdGhUZXh0dXJlPXZvaWQgMCx0aGlzLl9vcGFxdWVGQk89dm9pZCAwLHRoaXMuX3RyYW5zbHVjZW50RkJPPXZvaWQgMCx0aGlzLl9hbHBoYUZCTz12b2lkIDAsdGhpcy5fYWRqdXN0VHJhbnNsdWNlbnRGQk89dm9pZCAwLHRoaXMuX2FkanVzdEFscGhhRkJPPXZvaWQgMCx0aGlzLl9vcGFxdWVDbGVhckNvbW1hbmQ9bmV3IHIoe2NvbG9yOm5ldyBlKDAsMCwwLDApLG93bmVyOnRoaXN9KSx0aGlzLl90cmFuc2x1Y2VudE1SVENsZWFyQ29tbWFuZD1uZXcgcih7Y29sb3I6bmV3IGUoMCwwLDAsMSksb3duZXI6dGhpc30pLHRoaXMuX3RyYW5zbHVjZW50TXVsdGlwYXNzQ2xlYXJDb21tYW5kPW5ldyByKHtjb2xvcjpuZXcgZSgwLDAsMCwwKSxvd25lcjp0aGlzfSksdGhpcy5fYWxwaGFDbGVhckNvbW1hbmQ9bmV3IHIoe2NvbG9yOm5ldyBlKDEsMSwxLDEpLG93bmVyOnRoaXN9KSx0aGlzLl90cmFuc2x1Y2VudFJlbmRlclN0YXRlQ2FjaGU9e30sdGhpcy5fYWxwaGFSZW5kZXJTdGF0ZUNhY2hlPXt9LHRoaXMuX3RyYW5zbHVjZW50U2hhZGVyQ2FjaGU9e30sdGhpcy5fYWxwaGFTaGFkZXJDYWNoZT17fSx0aGlzLl9jb21wb3NpdGVDb21tYW5kPXZvaWQgMCx0aGlzLl9hZGp1c3RUcmFuc2x1Y2VudENvbW1hbmQ9dm9pZCAwLHRoaXMuX2FkanVzdEFscGhhQ29tbWFuZD12b2lkIDB9O0EucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXtpZih0aGlzLmlzU3VwcG9ydGVkKCkpe3ZhciBpPWUuZHJhd2luZ0J1ZmZlcldpZHRoLG49ZS5kcmF3aW5nQnVmZmVySGVpZ2h0LHI9dGhpcy5fb3BhcXVlVGV4dHVyZSxhPSF0KHIpfHxyLndpZHRoIT09aXx8ci5oZWlnaHQhPT1uO2lmKGEmJnAodGhpcyxlLGksbiksdCh0aGlzLl9vcGFxdWVGQk8pJiYhYXx8dih0aGlzLGUpKXt2YXIgcyxjLGQ9dGhpczt0KHRoaXMuX2NvbXBvc2l0ZUNvbW1hbmQpfHwocz1vKHtkZWZpbmVzOlt0aGlzLl90cmFuc2x1Y2VudE1SVFN1cHBvcnQ/Ik1SVCI6IiJdLHNvdXJjZXM6W3VdfSksYz17dV9vcGFxdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZC5fb3BhcXVlVGV4dHVyZX0sdV9hY2N1bXVsYXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gZC5fYWNjdW11bGF0aW9uVGV4dHVyZX0sdV9yZXZlYWxhZ2U6ZnVuY3Rpb24oKXtyZXR1cm4gZC5fcmV2ZWFsYWdlVGV4dHVyZX19LHRoaXMuX2NvbXBvc2l0ZUNvbW1hbmQ9ZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKHMse3JlbmRlclN0YXRlOmUuY3JlYXRlUmVuZGVyU3RhdGUoKSx1bmlmb3JtTWFwOmMsb3duZXI6dGhpc30pKSx0KHRoaXMuX2FkanVzdFRyYW5zbHVjZW50Q29tbWFuZCl8fCh0aGlzLl90cmFuc2x1Y2VudE1SVFN1cHBvcnQ/KHM9byh7ZGVmaW5lczpbIk1SVCJdLHNvdXJjZXM6W2xdfSksYz17dV9iZ0NvbG9yOmZ1bmN0aW9uKCl7cmV0dXJuIGQuX3RyYW5zbHVjZW50TVJUQ2xlYXJDb21tYW5kLmNvbG9yfSx1X2RlcHRoVGV4dHVyZTpmdW5jdGlvbigpe3JldHVybiBkLl9kZXB0aFRleHR1cmV9fSx0aGlzLl9hZGp1c3RUcmFuc2x1Y2VudENvbW1hbmQ9ZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKHMse3JlbmRlclN0YXRlOmUuY3JlYXRlUmVuZGVyU3RhdGUoKSx1bmlmb3JtTWFwOmMsb3duZXI6dGhpc30pKTp0aGlzLl90cmFuc2x1Y2VudE11bHRpcGFzc1N1cHBvcnQmJihzPW8oe3NvdXJjZXM6W2xdfSksYz17dV9iZ0NvbG9yOmZ1bmN0aW9uKCl7cmV0dXJuIGQuX3RyYW5zbHVjZW50TXVsdGlwYXNzQ2xlYXJDb21tYW5kLmNvbG9yfSx1X2RlcHRoVGV4dHVyZTpmdW5jdGlvbigpe3JldHVybiBkLl9kZXB0aFRleHR1cmV9fSx0aGlzLl9hZGp1c3RUcmFuc2x1Y2VudENvbW1hbmQ9ZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKHMse3JlbmRlclN0YXRlOmUuY3JlYXRlUmVuZGVyU3RhdGUoKSx1bmlmb3JtTWFwOmMsb3duZXI6dGhpc30pLGM9e3VfYmdDb2xvcjpmdW5jdGlvbigpe3JldHVybiBkLl9hbHBoYUNsZWFyQ29tbWFuZC5jb2xvcgp9LHVfZGVwdGhUZXh0dXJlOmZ1bmN0aW9uKCl7cmV0dXJuIGQuX2RlcHRoVGV4dHVyZX19LHRoaXMuX2FkanVzdEFscGhhQ29tbWFuZD1lLmNyZWF0ZVZpZXdwb3J0UXVhZENvbW1hbmQocyx7cmVuZGVyU3RhdGU6ZS5jcmVhdGVSZW5kZXJTdGF0ZSgpLHVuaWZvcm1NYXA6Yyxvd25lcjp0aGlzfSkpKX19fTt2YXIgUD17ZW5hYmxlZDohMCxjb2xvcjpuZXcgZSgwLDAsMCwwKSxlcXVhdGlvblJnYjpjLkFERCxlcXVhdGlvbkFscGhhOmMuQURELGZ1bmN0aW9uU291cmNlUmdiOmQuT05FLGZ1bmN0aW9uRGVzdGluYXRpb25SZ2I6ZC5PTkUsZnVuY3Rpb25Tb3VyY2VBbHBoYTpkLlpFUk8sZnVuY3Rpb25EZXN0aW5hdGlvbkFscGhhOmQuT05FX01JTlVTX1NPVVJDRV9BTFBIQX0sTT17ZW5hYmxlZDohMCxjb2xvcjpuZXcgZSgwLDAsMCwwKSxlcXVhdGlvblJnYjpjLkFERCxlcXVhdGlvbkFscGhhOmMuQURELGZ1bmN0aW9uU291cmNlUmdiOmQuT05FLGZ1bmN0aW9uRGVzdGluYXRpb25SZ2I6ZC5PTkUsZnVuY3Rpb25Tb3VyY2VBbHBoYTpkLk9ORSxmdW5jdGlvbkRlc3RpbmF0aW9uQWxwaGE6ZC5PTkV9LEk9e2VuYWJsZWQ6ITAsY29sb3I6bmV3IGUoMCwwLDAsMCksZXF1YXRpb25SZ2I6Yy5BREQsZXF1YXRpb25BbHBoYTpjLkFERCxmdW5jdGlvblNvdXJjZVJnYjpkLlpFUk8sZnVuY3Rpb25EZXN0aW5hdGlvblJnYjpkLk9ORV9NSU5VU19TT1VSQ0VfQUxQSEEsZnVuY3Rpb25Tb3VyY2VBbHBoYTpkLlpFUk8sZnVuY3Rpb25EZXN0aW5hdGlvbkFscGhhOmQuT05FX01JTlVTX1NPVVJDRV9BTFBIQX0sRD0iICAgIHZlYzMgQ2kgPSBjem1fZ2xfRnJhZ0NvbG9yLnJnYiAqIGN6bV9nbF9GcmFnQ29sb3IuYTtcbiAgICBmbG9hdCBhaSA9IGN6bV9nbF9GcmFnQ29sb3IuYTtcbiAgICBmbG9hdCB3emkgPSBjem1fYWxwaGFXZWlnaHQoYWkpO1xuICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChDaSAqIHd6aSwgYWkpO1xuICAgIGdsX0ZyYWdEYXRhWzFdID0gdmVjNChhaSAqIHd6aSk7XG4iLE89IiAgICB2ZWMzIENpID0gY3ptX2dsX0ZyYWdDb2xvci5yZ2IgKiBjem1fZ2xfRnJhZ0NvbG9yLmE7XG4gICAgZmxvYXQgYWkgPSBjem1fZ2xfRnJhZ0NvbG9yLmE7XG4gICAgZmxvYXQgd3ppID0gY3ptX2FscGhhV2VpZ2h0KGFpKTtcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KENpLCBhaSkgKiB3emk7XG4iLFI9IiAgICBmbG9hdCBhaSA9IGN6bV9nbF9GcmFnQ29sb3IuYTtcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGFpKTtcbiI7cmV0dXJuIEEucHJvdG90eXBlLmV4ZWN1dGVDb21tYW5kcz1mdW5jdGlvbihlLHQsaSxuKXtyZXR1cm4gdGhpcy5fdHJhbnNsdWNlbnRNUlRTdXBwb3J0Pyh4KHRoaXMsZSx0LGksbiksdm9pZCAwKTooVCh0aGlzLGUsdCxpLG4pLHZvaWQgMCl9LEEucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24oZSx0KXt0aGlzLl9jb21wb3NpdGVDb21tYW5kLmV4ZWN1dGUoZSx0KX0sQS5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24odCxpLG4pe3ZhciByPWkuZnJhbWVidWZmZXI7aS5mcmFtZWJ1ZmZlcj10aGlzLl9vcGFxdWVGQk8sZS5jbG9uZShuLHRoaXMuX29wYXF1ZUNsZWFyQ29tbWFuZC5jb2xvciksdGhpcy5fb3BhcXVlQ2xlYXJDb21tYW5kLmV4ZWN1dGUodCxpKSxpLmZyYW1lYnVmZmVyPXRoaXMuX3RyYW5zbHVjZW50RkJPO3ZhciBvPXRoaXMuX3RyYW5zbHVjZW50TVJUU3VwcG9ydD90aGlzLl90cmFuc2x1Y2VudE1SVENsZWFyQ29tbWFuZDp0aGlzLl90cmFuc2x1Y2VudE11bHRpcGFzc0NsZWFyQ29tbWFuZDtvLmV4ZWN1dGUodCxpKSx0aGlzLl90cmFuc2x1Y2VudE11bHRpcGFzc1N1cHBvcnQmJihpLmZyYW1lYnVmZmVyPXRoaXMuX2FscGhhRkJPLHRoaXMuX2FscGhhQ2xlYXJDb21tYW5kLmV4ZWN1dGUodCxpKSksaS5mcmFtZWJ1ZmZlcj1yfSxBLnByb3RvdHlwZS5nZXRDb2xvckZyYW1lYnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29wYXF1ZUZCT30sQS5wcm90b3R5cGUuaXNTdXBwb3J0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHJhbnNsdWNlbnRNUlRTdXBwb3J0fHx0aGlzLl90cmFuc2x1Y2VudE11bHRpcGFzc1N1cHBvcnR9LEEucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LEEucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtmKHRoaXMpLHQodGhpcy5fY29tcG9zaXRlQ29tbWFuZCkmJih0aGlzLl9jb21wb3NpdGVDb21tYW5kLnNoYWRlclByb2dyYW09dGhpcy5fY29tcG9zaXRlQ29tbWFuZC5zaGFkZXJQcm9ncmFtJiZ0aGlzLl9jb21wb3NpdGVDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpKSx0KHRoaXMuX2FkanVzdFRyYW5zbHVjZW50Q29tbWFuZCkmJih0aGlzLl9hZGp1c3RUcmFuc2x1Y2VudENvbW1hbmQuc2hhZGVyUHJvZ3JhbT10aGlzLl9hZGp1c3RUcmFuc2x1Y2VudENvbW1hbmQuc2hhZGVyUHJvZ3JhbSYmdGhpcy5fYWRqdXN0VHJhbnNsdWNlbnRDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpKSx0KHRoaXMuX2FkanVzdEFscGhhQ29tbWFuZCkmJih0aGlzLl9hZGp1c3RBbHBoYUNvbW1hbmQuc2hhZGVyUHJvZ3JhbT10aGlzLl9hZGp1c3RBbHBoYUNvbW1hbmQuc2hhZGVyUHJvZ3JhbSYmdGhpcy5fYWRqdXN0QWxwaGFDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpKTt2YXIgZSxuPXRoaXMuX3RyYW5zbHVjZW50U2hhZGVyQ2FjaGU7Zm9yKGUgaW4gbiluLmhhc093blByb3BlcnR5KGUpJiZ0KG5bZV0pJiZuW2VdLmRlc3Ryb3koKTt0aGlzLl90cmFuc2x1Y2VudFNoYWRlckNhY2hlPXt9LG49dGhpcy5fYWxwaGFTaGFkZXJDYWNoZTtmb3IoZSBpbiBuKW4uaGFzT3duUHJvcGVydHkoZSkmJnQobltlXSkmJm5bZV0uZGVzdHJveSgpO3JldHVybiB0aGlzLl9hbHBoYVNoYWRlckNhY2hlPXt9LGkodGhpcyl9LEF9KSxkZWZpbmUoIlNjZW5lL09ydGhvZ3JhcGhpY0ZydXN0dW0iLFsiLi4vQ29yZS9DYXJ0ZXNpYW4yIiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9DYXJ0ZXNpYW40IiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvTWF0cml4NCIsIi4vQ3VsbGluZ1ZvbHVtZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGwoZSl7KGUudG9wIT09ZS5fdG9wfHxlLmJvdHRvbSE9PWUuX2JvdHRvbXx8ZS5sZWZ0IT09ZS5fbGVmdHx8ZS5yaWdodCE9PWUuX3JpZ2h0fHxlLm5lYXIhPT1lLl9uZWFyfHxlLmZhciE9PWUuX2ZhcikmJihlLl9sZWZ0PWUubGVmdCxlLl9yaWdodD1lLnJpZ2h0LGUuX3RvcD1lLnRvcCxlLl9ib3R0b209ZS5ib3R0b20sZS5fbmVhcj1lLm5lYXIsZS5fZmFyPWUuZmFyLGUuX29ydGhvZ3JhcGhpY01hdHJpeD1hLmNvbXB1dGVPcnRob2dyYXBoaWNPZmZDZW50ZXIoZS5sZWZ0LGUucmlnaHQsZS5ib3R0b20sZS50b3AsZS5uZWFyLGUuZmFyLGUuX29ydGhvZ3JhcGhpY01hdHJpeCkpfXZhciB1PWZ1bmN0aW9uKCl7dGhpcy5sZWZ0PXZvaWQgMCx0aGlzLl9sZWZ0PXZvaWQgMCx0aGlzLnJpZ2h0PXZvaWQgMCx0aGlzLl9yaWdodD12b2lkIDAsdGhpcy50b3A9dm9pZCAwLHRoaXMuX3RvcD12b2lkIDAsdGhpcy5ib3R0b209dm9pZCAwLHRoaXMuX2JvdHRvbT12b2lkIDAsdGhpcy5uZWFyPTEsdGhpcy5fbmVhcj10aGlzLm5lYXIsdGhpcy5mYXI9NWU4LHRoaXMuX2Zhcj10aGlzLmZhcix0aGlzLl9jdWxsaW5nVm9sdW1lPW5ldyBzLHRoaXMuX29ydGhvZ3JhcGhpY01hdHJpeD1uZXcgYX07cih1LnByb3RvdHlwZSx7cHJvamVjdGlvbk1hdHJpeDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGwodGhpcyksdGhpcy5fb3J0aG9ncmFwaGljTWF0cml4fX19KTt2YXIgYz1uZXcgdCxkPW5ldyB0LGg9bmV3IHQsbT1uZXcgdDtyZXR1cm4gdS5wcm90b3R5cGUuY29tcHV0ZUN1bGxpbmdWb2x1bWU9ZnVuY3Rpb24oZSxyLG8pe3ZhciBhPXRoaXMuX2N1bGxpbmdWb2x1bWUucGxhbmVzLHM9dGhpcy50b3AsbD10aGlzLmJvdHRvbSx1PXRoaXMucmlnaHQsZj10aGlzLmxlZnQscD10aGlzLm5lYXIsdj10aGlzLmZhcixnPXQuY3Jvc3MocixvLGMpLF89ZDt0Lm11bHRpcGx5QnlTY2FsYXIocixwLF8pLHQuYWRkKGUsXyxfKTt2YXIgeT1oO3QubXVsdGlwbHlCeVNjYWxhcihnLGYseSksdC5hZGQoXyx5LHkpO3ZhciBDPWFbMF07cmV0dXJuIG4oQyl8fChDPWFbMF09bmV3IGkpLEMueD1nLngsQy55PWcueSxDLno9Zy56LEMudz0tdC5kb3QoZyx5KSx0Lm11bHRpcGx5QnlTY2FsYXIoZyx1LHkpLHQuYWRkKF8seSx5KSxDPWFbMV0sbihDKXx8KEM9YVsxXT1uZXcgaSksQy54PS1nLngsQy55PS1nLnksQy56PS1nLnosQy53PS10LmRvdCh0Lm5lZ2F0ZShnLG0pLHkpLHQubXVsdGlwbHlCeVNjYWxhcihvLGwseSksdC5hZGQoXyx5LHkpLEM9YVsyXSxuKEMpfHwoQz1hWzJdPW5ldyBpKSxDLng9by54LEMueT1vLnksQy56PW8ueixDLnc9LXQuZG90KG8seSksdC5tdWx0aXBseUJ5U2NhbGFyKG8scyx5KSx0LmFkZChfLHkseSksQz1hWzNdLG4oQyl8fChDPWFbM109bmV3IGkpLEMueD0tby54LEMueT0tby55LEMuej0tby56LEMudz0tdC5kb3QodC5uZWdhdGUobyxtKSx5KSxDPWFbNF0sbihDKXx8KEM9YVs0XT1uZXcgaSksQy54PXIueCxDLnk9ci55LEMuej1yLnosQy53PS10LmRvdChyLF8pLHQubXVsdGlwbHlCeVNjYWxhcihyLHYseSksdC5hZGQoZSx5LHkpLEM9YVs1XSxuKEMpfHwoQz1hWzVdPW5ldyBpKSxDLng9LXIueCxDLnk9LXIueSxDLno9LXIueixDLnc9LXQuZG90KHQubmVnYXRlKHIsbSkseSksdGhpcy5fY3VsbGluZ1ZvbHVtZX0sdS5wcm90b3R5cGUuZ2V0UGl4ZWxTaXplPWZ1bmN0aW9uKHQsaSxyKXtsKHRoaXMpO3ZhciBvPXRoaXMucmlnaHQtdGhpcy5sZWZ0LGE9dGhpcy50b3AtdGhpcy5ib3R0b20scz1vL3QueCx1PWEvdC55O3JldHVybiBuKHIpPyhyLng9cyxyLnk9dSxyKTpuZXcgZShzLHUpfSx1LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihlKXtyZXR1cm4gbihlKXx8KGU9bmV3IHUpLGUubGVmdD10aGlzLmxlZnQsZS5yaWdodD10aGlzLnJpZ2h0LGUudG9wPXRoaXMudG9wLGUuYm90dG9tPXRoaXMuYm90dG9tLGUubmVhcj10aGlzLm5lYXIsZS5mYXI9dGhpcy5mYXIsZS5fbGVmdD12b2lkIDAsZS5fcmlnaHQ9dm9pZCAwLGUuX3RvcD12b2lkIDAsZS5fYm90dG9tPXZvaWQgMCxlLl9uZWFyPXZvaWQgMCxlLl9mYXI9dm9pZCAwLGV9LHUucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbihlKXtyZXR1cm4gbihlKSYmdGhpcy5yaWdodD09PWUucmlnaHQmJnRoaXMubGVmdD09PWUubGVmdCYmdGhpcy50b3A9PT1lLnRvcCYmdGhpcy5ib3R0b209PT1lLmJvdHRvbSYmdGhpcy5uZWFyPT09ZS5uZWFyJiZ0aGlzLmZhcj09PWUuZmFyfSx1fSksZGVmaW5lKCJTY2VuZS9QZXJmb3JtYW5jZURpc3BsYXkiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvZ2V0VGltZXN0YW1wIiwiLi4vV2lkZ2V0cy9nZXRFbGVtZW50Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWUuZnJvbUNzc0NvbG9yU3RyaW5nKCIjZTUyIiksbD1lLmZyb21Dc3NDb2xvclN0cmluZygiI2RlMyIpLHU9ZS5mcm9tQ3NzQ29sb3JTdHJpbmcoInJnYmEoNDAsIDQwLCA0MCwgMC43KSIpLGM9ZnVuY3Rpb24oZSl7ZT10KGUsdC5FTVBUWV9PQkpFQ1QpO3ZhciBuPWEoZS5jb250YWluZXIpO2lmKCFpKG4pKXRocm93IG5ldyByKCJjb250YWluZXIgaXMgcmVxdWlyZWQiKTt0aGlzLl9jb250YWluZXI9bix0aGlzLl9mcHNDb2xvcj10KGUuZnBzQ29sb3IscykudG9Dc3NDb2xvclN0cmluZygpLHRoaXMuX2ZyYW1lVGltZUNvbG9yPXQoZS5mcmFtZVRpbWVDb2xvcixsKS50b0Nzc0NvbG9yU3RyaW5nKCksdGhpcy5fYmFja2dyb3VuZENvbG9yPXQoZS5iYWNrZ3JvdW5kQ29sb3IsdSkudG9Dc3NDb2xvclN0cmluZygpLHRoaXMuX2ZvbnQ9dChlLmZvbnQsImJvbGQgMTJweCBIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZiIpO3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dGhpcy5fZnBzVGV4dD1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIiksYy5hcHBlbmRDaGlsZCh0aGlzLl9mcHNUZXh0KSxjLnN0eWxlLmNvbG9yPXRoaXMuX2Zwc0NvbG9yO3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RoaXMuX21zVGV4dD1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIiksZC5zdHlsZS5jb2xvcj10aGlzLl9mcmFtZVRpbWVDb2xvcixkLmFwcGVuZENoaWxkKHRoaXMuX21zVGV4dCksby5hcHBlbmRDaGlsZChjKSxvLmFwcGVuZENoaWxkKGQpLG8uc3R5bGVbInotaW5kZXgiXT0xLG8uc3R5bGVbImJhY2tncm91bmQtY29sb3IiXT10aGlzLl9iYWNrZ3JvdW5kQ29sb3Isby5zdHlsZS5mb250PXRoaXMuX2ZvbnQsby5zdHlsZS5wYWRkaW5nPSI3cHgiLG8uc3R5bGVbImJvcmRlci1yYWRpdXMiXT0iNXB4IixvLnN0eWxlLmJvcmRlcj0iMXB4IHNvbGlkICM0NDQiLHRoaXMuX2NvbnRhaW5lci5hcHBlbmRDaGlsZChvKSx0aGlzLl9sYXN0RnBzU2FtcGxlVGltZT12b2lkIDAsdGhpcy5fZnJhbWVDb3VudD0wLHRoaXMuX3RpbWU9dm9pZCAwLHRoaXMuX2Zwcz0wLHRoaXMuX2ZyYW1lVGltZT0wfTtyZXR1cm4gYy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7aWYoIWkodGhpcy5fdGltZSkpcmV0dXJuIHRoaXMuX2xhc3RGcHNTYW1wbGVUaW1lPW8oKSx0aGlzLl90aW1lPW8oKSx2b2lkIDA7dmFyIGU9dGhpcy5fdGltZSx0PW8oKTt0aGlzLl90aW1lPXQ7dmFyIG49dC1lO3RoaXMuX2ZyYW1lQ291bnQrKzt2YXIgcj10aGlzLl9mcHMsYT10LXRoaXMuX2xhc3RGcHNTYW1wbGVUaW1lO2E+MWUzJiYocj0wfDFlMyp0aGlzLl9mcmFtZUNvdW50L2EsdGhpcy5fbGFzdEZwc1NhbXBsZVRpbWU9dCx0aGlzLl9mcmFtZUNvdW50PTApLHIhPT10aGlzLl9mcHMmJih0aGlzLl9mcHNUZXh0Lm5vZGVWYWx1ZT1yKyIgRlBTIix0aGlzLl9mcHM9ciksbiE9PXRoaXMuX2ZyYW1lVGltZSYmKHRoaXMuX21zVGV4dC5ub2RlVmFsdWU9bi50b0ZpeGVkKDIpKyIgTVMiLHRoaXMuX2ZyYW1lVGltZT1uKX0sYy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiBuKHRoaXMpfSxjfSksZGVmaW5lKCJTY2VuZS9QcmltaXRpdmVDb2xsZWN0aW9uIixbIi4uL0NvcmUvY3JlYXRlR3VpZCIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciJdLGZ1bmN0aW9uKGUsdCxpLG4scil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSx0KXtyZXR1cm4gZS5fcHJpbWl0aXZlcy5pbmRleE9mKHQpfXZhciBhPWZ1bmN0aW9uKGkpe2k9dChpLHQuRU1QVFlfT0JKRUNUKSx0aGlzLl9wcmltaXRpdmVzPVtdLHRoaXMuX2d1aWQ9ZSgpLHRoaXMuc2hvdz10KGkuc2hvdywhMCksdGhpcy5kZXN0cm95UHJpbWl0aXZlcz10KGkuZGVzdHJveVByaW1pdGl2ZXMsITApfTtyZXR1cm4gbihhLnByb3RvdHlwZSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJpbWl0aXZlcy5sZW5ndGh9fX0pLGEucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlKXt2YXIgdD1lLl9leHRlcm5hbD1lLl9leHRlcm5hbHx8e30saT10Ll9jb21wb3NpdGVzPXQuX2NvbXBvc2l0ZXN8fHt9O3JldHVybiBpW3RoaXMuX2d1aWRdPXtjb2xsZWN0aW9uOnRoaXN9LHRoaXMuX3ByaW1pdGl2ZXMucHVzaChlKSxlfSxhLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7aWYodGhpcy5jb250YWlucyhlKSl7dmFyIHQ9dGhpcy5fcHJpbWl0aXZlcy5pbmRleE9mKGUpO2lmKC0xIT09dClyZXR1cm4gdGhpcy5fcHJpbWl0aXZlcy5zcGxpY2UodCwxKSxkZWxldGUgZS5fZXh0ZXJuYWwuX2NvbXBvc2l0ZXNbdGhpcy5fZ3VpZF0sdGhpcy5kZXN0cm95UHJpbWl0aXZlcyYmZS5kZXN0cm95KCksITB9cmV0dXJuITF9LGEucHJvdG90eXBlLnJlbW92ZUFsbD1mdW5jdGlvbigpe2lmKHRoaXMuZGVzdHJveVByaW1pdGl2ZXMpZm9yKHZhciBlPXRoaXMuX3ByaW1pdGl2ZXMsdD1lLmxlbmd0aCxpPTA7dD5pOysraSllW2ldLmRlc3Ryb3koKTt0aGlzLl9wcmltaXRpdmVzPVtdfSxhLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihlKXtyZXR1cm4hIShpKGUpJiZlLl9leHRlcm5hbCYmZS5fZXh0ZXJuYWwuX2NvbXBvc2l0ZXMmJmUuX2V4dGVybmFsLl9jb21wb3NpdGVzW3RoaXMuX2d1aWRdKX0sYS5wcm90b3R5cGUucmFpc2U9ZnVuY3Rpb24oZSl7aWYoaShlKSl7dmFyIHQ9byh0aGlzLGUpLG49dGhpcy5fcHJpbWl0aXZlcztpZih0IT09bi5sZW5ndGgtMSl7dmFyIHI9blt0XTtuW3RdPW5bdCsxXSxuW3QrMV09cn19fSxhLnByb3RvdHlwZS5yYWlzZVRvVG9wPWZ1bmN0aW9uKGUpe2lmKGkoZSkpe3ZhciB0PW8odGhpcyxlKSxuPXRoaXMuX3ByaW1pdGl2ZXM7dCE9PW4ubGVuZ3RoLTEmJihuLnNwbGljZSh0LDEpLG4ucHVzaChlKSl9fSxhLnByb3RvdHlwZS5sb3dlcj1mdW5jdGlvbihlKXtpZihpKGUpKXt2YXIgdD1vKHRoaXMsZSksbj10aGlzLl9wcmltaXRpdmVzO2lmKDAhPT10KXt2YXIgcj1uW3RdO25bdF09blt0LTFdLG5bdC0xXT1yfX19LGEucHJvdG90eXBlLmxvd2VyVG9Cb3R0b209ZnVuY3Rpb24oZSl7aWYoaShlKSl7dmFyIHQ9byh0aGlzLGUpLG49dGhpcy5fcHJpbWl0aXZlczswIT09dCYmKG4uc3BsaWNlKHQsMSksbi51bnNoaWZ0KGUpKX19LGEucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fcHJpbWl0aXZlc1tlXX0sYS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxpKXtpZih0aGlzLnNob3cpZm9yKHZhciBuPXRoaXMuX3ByaW1pdGl2ZXMscj0wO3I8bi5sZW5ndGg7KytyKW5bcl0udXBkYXRlKGUsdCxpKX0sYS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sYS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbW92ZUFsbCgpLHIodGhpcyl9LGF9KSxkZWZpbmUoIlNjZW5lL1NjZW5lVHJhbnNpdGlvbmVyIixbIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRWFzaW5nRnVuY3Rpb24iLCIuLi9Db3JlL0VsbGlwc29pZCIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIiLCIuLi9Db3JlL1NjcmVlblNwYWNlRXZlbnRUeXBlIiwiLi9DYW1lcmEiLCIuL09ydGhvZ3JhcGhpY0ZydXN0dW0iLCIuL1BlcnNwZWN0aXZlRnJ1c3R1bSIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBwKGUsdCl7aWYoZS5fc2NlbmUuY29tcGxldGVNb3JwaE9uVXNlcklucHV0KXtlLl9tb3JwaEhhbmRsZXI9bmV3IHUoZS5fc2NlbmUuY2FudmFzKTt2YXIgaT1mdW5jdGlvbigpe2UuX21vcnBoQ2FuY2VsbGVkPSEwLHQoZSl9O2UuX2NvbXBsZXRlTW9ycGg9aSxlLl9tb3JwaEhhbmRsZXIuc2V0SW5wdXRBY3Rpb24oaSxjLkxFRlRfRE9XTiksZS5fbW9ycGhIYW5kbGVyLnNldElucHV0QWN0aW9uKGksYy5NSURETEVfRE9XTiksZS5fbW9ycGhIYW5kbGVyLnNldElucHV0QWN0aW9uKGksYy5SSUdIVF9ET1dOKSxlLl9tb3JwaEhhbmRsZXIuc2V0SW5wdXRBY3Rpb24oaSxjLldIRUVMKX19ZnVuY3Rpb24gdihlKXtmb3IodmFyIHQ9ZS5fY3VycmVudFR3ZWVucyxpPTA7aTx0Lmxlbmd0aDsrK2kpdFtpXS5jYW5jZWxUd2VlbigpO2UuX2N1cnJlbnRUd2VlbnMubGVuZ3RoPTAsZS5fbW9ycGhIYW5kbGVyPWUuX21vcnBoSGFuZGxlciYmZS5fbW9ycGhIYW5kbGVyLmRlc3Ryb3koKX1mdW5jdGlvbiBnKHQsaSxuLHIpe3ZhciBhPXQuX3NjZW5lLHM9YS5jYW1lcmE7cy5zZXRUcmFuc2Zvcm0obC5JREVOVElUWSk7dmFyIHU9cy5wb3NpdGlvbixjPXMuZGlyZWN0aW9uLGQ9cy51cCxoPWUuY2xvbmUodC5fY2FtZXJhMkQucG9zaXRpb24pLG09ZS5jbG9uZSh0Ll9jYW1lcmEyRC5kaXJlY3Rpb24pLGY9ZS5jbG9uZSh0Ll9jYW1lcmEyRC51cCkscD1mdW5jdGlvbih0KXtzLnBvc2l0aW9uPXkodSxoLHQudGltZSkscy5kaXJlY3Rpb249eShjLG0sdC50aW1lKSxzLnVwPXkoZCxmLHQudGltZSkscy5yaWdodD1lLmNyb3NzKHMuZGlyZWN0aW9uLHMudXAscy5yaWdodCksZS5ub3JtYWxpemUocy5yaWdodCxzLnJpZ2h0KX0sdj1hLnR3ZWVucy5hZGQoe2R1cmF0aW9uOmksZWFzaW5nRnVuY3Rpb246by5RVUFSVElDX09VVCxzdGFydE9iamVjdDp7dGltZTowfSxzdG9wT2JqZWN0Ont0aW1lOjF9LHVwZGF0ZTpwfSk7dC5fY3VycmVudFR3ZWVucy5wdXNoKHYpLHgodCxhLDAsMSxpLHIpfWZ1bmN0aW9uIF8oZSx0LGksbil7dCo9LjU7dmFyIHI9ZS5fc2NlbmUuY2FtZXJhO3Iuc2V0VHJhbnNmb3JtKGwuSURFTlRJVFkpLGIoZSx0LGksZnVuY3Rpb24oKXtyLmZydXN0dW09ZS5fY2FtZXJhQ1YuZnJ1c3R1bS5jbG9uZSgpLGcoZSx0LGksbil9KX1mdW5jdGlvbiB5KHQsaSxuKXtyZXR1cm4gZS5sZXJwKHQsaSxuLG5ldyBlKX1mdW5jdGlvbiBDKHQsaSxuKXt2YXIgcj10Ll9zY2VuZSxhPXIuY2FtZXJhLGw9YS5wb3NpdGlvbix1PWEuZnJ1c3R1bS5mb3YsYz0uNSpzLlJBRElBTlNfUEVSX0RFR1JFRSxkPWUubWFnbml0dWRlKGwpKk1hdGgudGFuKC41KnUpO2EuZnJ1c3R1bS5mYXI9ZC9NYXRoLnRhbiguNSpjKSsxZTc7dmFyIGg9ZnVuY3Rpb24odCl7YS5mcnVzdHVtLmZvdj1zLmxlcnAodSxjLHQudGltZSk7dmFyIGk9ZC9NYXRoLnRhbiguNSphLmZydXN0dW0uZm92KSxuPW5ldyBlO2EucG9zaXRpb249ZS5tdWx0aXBseUJ5U2NhbGFyKGUubm9ybWFsaXplKGEucG9zaXRpb24sbiksaSxuKX0sbT1yLnR3ZWVucy5hZGQoe2R1cmF0aW9uOmksZWFzaW5nRnVuY3Rpb246by5RVUFSVElDX09VVCxzdGFydE9iamVjdDp7dGltZTowfSxzdG9wT2JqZWN0Ont0aW1lOjF9LHVwZGF0ZTpoLGNvbXBsZXRlOmZ1bmN0aW9uKCl7YS5mcnVzdHVtPXQuX2NhbWVyYTJELmZydXN0dW0uY2xvbmUoKSxuKHQpfX0pO3QuX2N1cnJlbnRUd2VlbnMucHVzaChtKX1mdW5jdGlvbiB3KHQsaSxuLHIpe3ZhciBhPXQuX3NjZW5lLHM9YS5jYW1lcmE7cy5zZXRUcmFuc2Zvcm0obC5JREVOVElUWSk7dmFyIHU9bi5tYXhpbXVtUmFkaXVzLGM9ZS5jbG9uZShzLnBvc2l0aW9uKSxkPWUuY2xvbmUocy5kaXJlY3Rpb24pLGg9ZS5jbG9uZShzLnVwKSxtPU1hdGgudGFuKC41KnQuX2NhbWVyYUNWLmZydXN0dW0uZm92eSksZj10Ll9jYW1lcmFDVi5mcnVzdHVtLmFzcGVjdFJhdGlvKm0scD11Kk1hdGguUEkvZix2PW5ldyBlO3Y9ZS5tdWx0aXBseUJ5U2NhbGFyKGUubm9ybWFsaXplKHQuX2NhbWVyYTJELnBvc2l0aW9uLHYpLHAsdik7dmFyIGc9ZS5jbG9uZSh0Ll9jYW1lcmEyRC5kaXJlY3Rpb24pLF89ZS5jbG9uZSh0Ll9jYW1lcmEyRC51cCksdz1mdW5jdGlvbih0KXtzLnBvc2l0aW9uPXkoYyx2LHQudGltZSkscy5kaXJlY3Rpb249eShkLGcsdC50aW1lKSxzLnVwPXkoaCxfLHQudGltZSkscy5yaWdodD1lLmNyb3NzKHMuZGlyZWN0aW9uLHMudXAscy5yaWdodCksZS5ub3JtYWxpemUocy5yaWdodCxzLnJpZ2h0KX07aSo9LjU7dmFyIEU9YS50d2VlbnMuYWRkKHtkdXJhdGlvbjppLGVhc2luZ0Z1bmN0aW9uOm8uUVVBUlRJQ19PVVQsc3RhcnRPYmplY3Q6e3RpbWU6MH0sc3RvcE9iamVjdDp7dGltZToxfSx1cGRhdGU6dyxjb21wbGV0ZTpmdW5jdGlvbigpe0ModCxpLHIpfX0pO3QuX2N1cnJlbnRUd2VlbnMucHVzaChFKX1mdW5jdGlvbiBFKHQsaSxuLHIpe2kqPS41O3ZhciBvPW4ubWF4aW11bVJhZGl1cyxhPU1hdGgudGFuKC41KnQuX2NhbWVyYTNELmZydXN0dW0uZm92eSkscz10Ll9jYW1lcmEzRC5mcnVzdHVtLmFzcGVjdFJhdGlvKmEsbD1vKk1hdGguUEkvcyx1PXt9LGM9bmV3IGU7dS5wb3NpdGlvbjJEPWUubXVsdGlwbHlCeVNjYWxhcihlLm5vcm1hbGl6ZSh0Ll9jYW1lcmEyRC5wb3NpdGlvbjJELGMpLGwsYyksdS5kaXJlY3Rpb24yRD1lLmNsb25lKHQuX2NhbWVyYTJELmRpcmVjdGlvbjJEKSx1LnVwMkQ9ZS5jbG9uZSh0Ll9jYW1lcmEyRC51cDJEKTt2YXIgZD1mdW5jdGlvbigpe0ModCxpLHIpfTtUKHQsaSx1LGQpfWZ1bmN0aW9uIGIodCxpLG4scil7dmFyIGE9dC5fc2NlbmUsbD1hLmNhbWVyYSx1PW4ubWF4aW11bVJhZGl1cyxjPU1hdGgudGFuKC41KnQuX2NhbWVyYUNWLmZydXN0dW0uZm92eSksZD10Ll9jYW1lcmFDVi5mcnVzdHVtLmFzcGVjdFJhdGlvKmMsaD11Kk1hdGguUEkvZCxtPW5ldyBlO209ZS5tdWx0aXBseUJ5U2NhbGFyKGUubm9ybWFsaXplKHQuX2NhbWVyYTJELnBvc2l0aW9uLG0pLGgsbSk7dmFyIGY9bC5mcnVzdHVtLnRvcCxwPWwuZnJ1c3R1bS5ib3R0b20sdj1sLmZydXN0dW0ucmlnaHQsZz1sLmZydXN0dW0ubGVmdCxfPXQuX2NhbWVyYTJELmZydXN0dW0sQz10Ll9jYW1lcmFDVi5mcnVzdHVtLHc9ZS5jbG9uZShsLnBvc2l0aW9uKSxFPWZ1bmN0aW9uKGUpe2wucG9zaXRpb249eSh3LG0sZS50aW1lKSxsLmZydXN0dW0udG9wPXMubGVycChmLF8udG9wLGUudGltZSksbC5mcnVzdHVtLmJvdHRvbT1zLmxlcnAocCxfLmJvdHRvbSxlLnRpbWUpLGwuZnJ1c3R1bS5yaWdodD1zLmxlcnAodixfLnJpZ2h0LGUudGltZSksbC5mcnVzdHVtLmxlZnQ9cy5sZXJwKGcsXy5sZWZ0LGUudGltZSl9LGI9KHYtZykvKDIqdSpNYXRoLlBJKSxTPTE7Yj5TJiYoYj0wKTt2YXIgVD0oUy1iKSppO2lmKFQ8cy5FUFNJTE9ONil7aWYoZS5lcXVhbHNFcHNpbG9uKHcsbSxzLkVQU0lMT042KSlyZXR1cm4gbC5wb3NpdGlvbj1tLGwuZnJ1c3R1bT1DLmNsb25lKCkscih0KSx2b2lkIDA7VD1pLGI9MCxTPTF9dmFyIHg9YS50d2VlbnMuYWRkKHtlYXNpbmdGdW5jdGlvbjpvLlFVQVJUSUNfT1VULGR1cmF0aW9uOlQsc3RhcnRPYmplY3Q6e3RpbWU6Yn0sc3RvcE9iamVjdDp7dGltZTpTfSx1cGRhdGU6RSxjb21wbGV0ZTpmdW5jdGlvbigpe2wuZnJ1c3R1bT1DLmNsb25lKCkscih0KX19KTt0Ll9jdXJyZW50VHdlZW5zLnB1c2goeCl9ZnVuY3Rpb24gUyh0LGksbixyKXt2YXIgYT10Ll9zY2VuZSxzPWEuY2FtZXJhO3Muc2V0VHJhbnNmb3JtKGwuSURFTlRJVFkpLGkqPS41O3ZhciB1PWZ1bmN0aW9uKCl7dmFyIG49ZS5jbG9uZShzLnBvc2l0aW9uKSxsPWUuY2xvbmUocy5kaXJlY3Rpb24pLHU9ZS5jbG9uZShzLnVwKSxjPWUuY2xvbmUodC5fY2FtZXJhQ1YucG9zaXRpb24pLGQ9ZS5jbG9uZSh0Ll9jYW1lcmFDVi5kaXJlY3Rpb24pLGg9ZS5jbG9uZSh0Ll9jYW1lcmFDVi51cCksbT1mdW5jdGlvbih0KXtzLnBvc2l0aW9uPXkobixjLHQudGltZSkscy5kaXJlY3Rpb249eShsLGQsdC50aW1lKSxzLnVwPXkodSxoLHQudGltZSkscy5yaWdodD1lLmNyb3NzKHMuZGlyZWN0aW9uLHMudXAscy5yaWdodCksZS5ub3JtYWxpemUocy5yaWdodCxzLnJpZ2h0KX0sZj1hLnR3ZWVucy5hZGQoe2R1cmF0aW9uOmksZWFzaW5nRnVuY3Rpb246by5RVUFSVElDX09VVCxzdGFydE9iamVjdDp7dGltZTowfSxzdG9wT2JqZWN0Ont0aW1lOjF9LHVwZGF0ZTptLGNvbXBsZXRlOmZ1bmN0aW9uKCl7cih0KX19KTt0Ll9jdXJyZW50VHdlZW5zLnB1c2goZil9O2IodCxpLG4sdSl9ZnVuY3Rpb24gVCh0LGksbixyKXt2YXIgYT10Ll9zY2VuZSxzPWEuY2FtZXJhO3Muc2V0VHJhbnNmb3JtKGwuSURFTlRJVFkpO3ZhciB1PWUuY2xvbmUocy5wb3NpdGlvbiksYz1lLmNsb25lKHMuZGlyZWN0aW9uKSxkPWUuY2xvbmUocy51cCksaD1lLmNsb25lKG4ucG9zaXRpb24yRCksbT1lLmNsb25lKG4uZGlyZWN0aW9uMkQpLGY9ZS5jbG9uZShuLnVwMkQpLHA9ZnVuY3Rpb24odCl7cy5wb3NpdGlvbj15KHUsaCx0LnRpbWUpLHMuZGlyZWN0aW9uPXkoYyxtLHQudGltZSkscy51cD15KGQsZix0LnRpbWUpLHMucmlnaHQ9ZS5jcm9zcyhzLmRpcmVjdGlvbixzLnVwLHMucmlnaHQpLGUubm9ybWFsaXplKHMucmlnaHQscy5yaWdodCl9LHY9YS50d2VlbnMuYWRkKHtkdXJhdGlvbjppLGVhc2luZ0Z1bmN0aW9uOm8uUVVBUlRJQ19PVVQsc3RhcnRPYmplY3Q6e3RpbWU6MH0sc3RvcE9iamVjdDp7dGltZToxfSx1cGRhdGU6cCxjb21wbGV0ZTpmdW5jdGlvbigpe3MucG9zaXRpb249aCxzLmRpcmVjdGlvbj1tLHMudXA9ZixzLnJpZ2h0PWUuY3Jvc3MobSxmLHMucmlnaHQpLGUubm9ybWFsaXplKHMucmlnaHQscy5yaWdodCl9fSk7dC5fY3VycmVudFR3ZWVucy5wdXNoKHYpLHgodCxhLDEsMCxpLHIpfWZ1bmN0aW9uIHgoZSx0LG4scixhLHMpe3ZhciBsPXtvYmplY3Q6dCxwcm9wZXJ0eToibW9ycGhUaW1lIixzdGFydFZhbHVlOm4sc3RvcFZhbHVlOnIsZHVyYXRpb246YSxlYXNpbmdGdW5jdGlvbjpvLlFVQVJUSUNfT1VUfTtpKHMpJiYobC5jb21wbGV0ZT1mdW5jdGlvbigpe3MoZSl9KTt2YXIgdT10LnR3ZWVucy5hZGRQcm9wZXJ0eShsKTtlLl9jdXJyZW50VHdlZW5zLnB1c2godSl9ZnVuY3Rpb24gQShlKXt2YXIgdD1lLl9zY2VuZSxpPXQuZHJhd2luZ0J1ZmZlckhlaWdodC90LmRyYXdpbmdCdWZmZXJXaWR0aCxuPWUuX2NhbWVyYTJELmZydXN0dW07bi50b3A9bi5yaWdodCppLG4uYm90dG9tPS1uLnRvcCxpPTEvaSxuPWUuX2NhbWVyYUNWLmZydXN0dW0sbi5hc3BlY3RSYXRpbz1pLG49ZS5fY2FtZXJhM0QuZnJ1c3R1bSxuLmFzcGVjdFJhdGlvPWk7dmFyIHI9dC5jYW1lcmE7c3dpdGNoKHQubW9kZSl7Y2FzZSBmLlNDRU5FM0Q6ci5mcnVzdHVtPWUuX2NhbWVyYTNELmZydXN0dW0uY2xvbmUoKTticmVhaztjYXNlIGYuQ09MVU1CVVNfVklFVzpyLmZydXN0dW09ZS5fY2FtZXJhQ1YuZnJ1c3R1bS5jbG9uZSgpO2JyZWFrO2Nhc2UgZi5TQ0VORTJEOnIuZnJ1c3R1bT1lLl9jYW1lcmEyRC5mcnVzdHVtLmNsb25lKCl9fWZ1bmN0aW9uIFAodCl7dmFyIG49dC5fc2NlbmU7aWYobi5tb2RlPWYuU0NFTkUzRCxuLm1vcnBoVGltZT1mLmdldE1vcnBoVGltZShmLlNDRU5FM0QpLHYodCksQSh0KSx0Ll9wcmV2aW91c01vZGUhPT1mLk1PUlBISU5HfHx0Ll9tb3JwaENhbmNlbGxlZCl7dC5fbW9ycGhDYW5jZWxsZWQ9ITE7dmFyIHI9bi5jYW1lcmE7ci5wb3NpdGlvbj1lLmNsb25lKHQuX2NhbWVyYTNELnBvc2l0aW9uKSxyLmRpcmVjdGlvbj1lLmNsb25lKHQuX2NhbWVyYTNELmRpcmVjdGlvbiksci51cD1lLmNsb25lKHQuX2NhbWVyYTNELnVwKSxyLnJpZ2h0PWUuY3Jvc3Moci5kaXJlY3Rpb24sci51cCxyLnJpZ2h0KSxlLm5vcm1hbGl6ZShyLnJpZ2h0LHIucmlnaHQpfXZhciBvPWkodC5fY29tcGxldGVNb3JwaCk7dC5fY29tcGxldGVNb3JwaD12b2lkIDAsdC5fc2NlbmUubW9ycGhDb21wbGV0ZS5yYWlzZUV2ZW50KHQsdC5fcHJldmlvdXNNb2RlLGYuU0NFTkUzRCxvKX1mdW5jdGlvbiBNKHQpe3ZhciBuPXQuX3NjZW5lO24ubW9kZT1mLlNDRU5FMkQsbi5tb3JwaFRpbWU9Zi5nZXRNb3JwaFRpbWUoZi5TQ0VORTJEKSx2KHQpLEEodCk7dmFyIHI9bi5jYW1lcmE7ZS5jbG9uZSh0Ll9jYW1lcmEyRC5wb3NpdGlvbixyLnBvc2l0aW9uKSxlLmNsb25lKHQuX2NhbWVyYTJELmRpcmVjdGlvbixyLmRpcmVjdGlvbiksZS5jbG9uZSh0Ll9jYW1lcmEyRC51cCxyLnVwKSxlLmNyb3NzKHIuZGlyZWN0aW9uLHIudXAsci5yaWdodCksZS5ub3JtYWxpemUoci5yaWdodCxyLnJpZ2h0KTt2YXIgbz1pKHQuX2NvbXBsZXRlTW9ycGgpO3QuX2NvbXBsZXRlTW9ycGg9dm9pZCAwLHQuX3NjZW5lLm1vcnBoQ29tcGxldGUucmFpc2VFdmVudCh0LHQuX3ByZXZpb3VzTW9kZSxmLlNDRU5FMkQsbyl9ZnVuY3Rpb24gSSh0KXt2YXIgbj10Ll9zY2VuZTtpZihuLm1vZGU9Zi5DT0xVTUJVU19WSUVXLG4ubW9ycGhUaW1lPWYuZ2V0TW9ycGhUaW1lKGYuQ09MVU1CVVNfVklFVyksdih0KSxBKHQpLHQuX3ByZXZpb3VzTW9kZU1vZGUhPT1mLk1PUlBISU5HfHx0Ll9tb3JwaENhbmNlbGxlZCl7dC5fbW9ycGhDYW5jZWxsZWQ9ITE7dmFyIHI9bi5jYW1lcmE7ZS5jbG9uZSh0Ll9jYW1lcmFDVi5wb3NpdGlvbixyLnBvc2l0aW9uKSxlLmNsb25lKHQuX2NhbWVyYUNWLmRpcmVjdGlvbixyLmRpcmVjdGlvbiksZS5jbG9uZSh0Ll9jYW1lcmFDVi51cCxyLnVwKSxlLmNyb3NzKHIuZGlyZWN0aW9uLHIudXAsci5yaWdodCksZS5ub3JtYWxpemUoci5yaWdodCxyLnJpZ2h0KX12YXIgbz1pKHQuX2NvbXBsZXRlTW9ycGgpO3QuX2NvbXBsZXRlTW9ycGg9dm9pZCAwLHQuX3NjZW5lLm1vcnBoQ29tcGxldGUucmFpc2VFdmVudCh0LHQuX3ByZXZpb3VzTW9kZSxmLkNPTFVNQlVTX1ZJRVcsbyl9dmFyIEQ9ZnVuY3Rpb24oaSxuKXt0aGlzLl9zY2VuZT1pLG49dChuLGEuV0dTODQpO3ZhciByPW4ubWF4aW11bVJhZGl1cyxvPW5ldyBlKDAsMCwyKnIpLHU9bmV3IGU7dT1lLm5vcm1hbGl6ZShlLm5lZ2F0ZShvLHUpLHUpO3ZhciBjPWUuY2xvbmUoZS5VTklUX1kpLGY9bC5tdWx0aXBseUJ5UG9pbnQoZC5UUkFOU0ZPUk1fMkQsbyxuZXcgZSkscD1sLm11bHRpcGx5QnlQb2ludEFzVmVjdG9yKGQuVFJBTlNGT1JNXzJELHUsbmV3IGUpLHY9bC5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihkLlRSQU5TRk9STV8yRCxjLG5ldyBlKSxnPW5ldyBoO2cucmlnaHQ9cipNYXRoLlBJLGcubGVmdD0tZy5yaWdodCxnLnRvcD1nLnJpZ2h0KihpLmRyYXdpbmdCdWZmZXJIZWlnaHQvaS5kcmF3aW5nQnVmZmVyV2lkdGgpLGcuYm90dG9tPS1nLnRvcCx0aGlzLl9jYW1lcmEyRD17cG9zaXRpb246byxkaXJlY3Rpb246dSx1cDpjLHBvc2l0aW9uMkQ6ZixkaXJlY3Rpb24yRDpwLHVwMkQ6dixmcnVzdHVtOmd9LG89bmV3IGUoMCwtMSwxKSxvPWUubXVsdGlwbHlCeVNjYWxhcihlLm5vcm1hbGl6ZShvLG8pLDUqcixvKSx1PW5ldyBlLHU9ZS5ub3JtYWxpemUoZS5zdWJ0cmFjdChlLlpFUk8sbyx1KSx1KTt2YXIgXz1uZXcgZTtfPWUubm9ybWFsaXplKGUuY3Jvc3ModSxlLlVOSVRfWixfKSxfKSxjPW5ldyBlLGM9ZS5ub3JtYWxpemUoZS5jcm9zcyhfLHUsYyksYyksZj1sLm11bHRpcGx5QnlQb2ludChkLlRSQU5TRk9STV8yRCxvLG5ldyBlKSxwPWwubXVsdGlwbHlCeVBvaW50QXNWZWN0b3IoZC5UUkFOU0ZPUk1fMkQsdSxuZXcgZSk7dmFyIHk9bC5tdWx0aXBseUJ5UG9pbnRBc1ZlY3RvcihkLlRSQU5TRk9STV8yRCxfLG5ldyBlKTt2PW5ldyBlLHY9ZS5ub3JtYWxpemUoZS5jcm9zcyh5LHAsdiksdiksZz1uZXcgbSxnLmFzcGVjdFJhdGlvPWkuZHJhd2luZ0J1ZmZlcldpZHRoL2kuZHJhd2luZ0J1ZmZlckhlaWdodCxnLmZvdj1zLnRvUmFkaWFucyg2MCksdGhpcy5fY2FtZXJhQ1Y9e3Bvc2l0aW9uOm8sZGlyZWN0aW9uOnUsdXA6Yyxwb3NpdGlvbjJEOmYsZGlyZWN0aW9uMkQ6cCx1cDJEOnYsZnJ1c3R1bTpnfSxvPW5ldyBlLG89ZS5tdWx0aXBseUJ5U2NhbGFyKGUubm9ybWFsaXplKG5ldyBlKDAsLTIsMSksbyksMipyLG8pLHU9bmV3IGUsdT1lLm5vcm1hbGl6ZShlLnN1YnRyYWN0KGUuWkVSTyxvLHUpLHUpLF89bmV3IGUsXz1lLm5vcm1hbGl6ZShlLmNyb3NzKHUsZS5VTklUX1osXyksXyksYz1uZXcgZSxjPWUubm9ybWFsaXplKGUuY3Jvc3MoXyx1LGMpLGMpLHRoaXMuX2NhbWVyYTNEPXtwb3NpdGlvbjpvLGRpcmVjdGlvbjp1LHVwOmMsZnJ1c3R1bTpnfSx0aGlzLl9jdXJyZW50VHdlZW5zPVtdLHRoaXMuX21vcnBoSGFuZGxlcj12b2lkIDAsdGhpcy5fbW9ycGhDYW5jZWxsZWQ9ITEsdGhpcy5fY29tcGxldGVNb3JwaD12b2lkIDB9O3JldHVybiBELnByb3RvdHlwZS5jb21wbGV0ZU1vcnBoPWZ1bmN0aW9uKCl7aSh0aGlzLl9jb21wbGV0ZU1vcnBoKSYmdGhpcy5fY29tcGxldGVNb3JwaCgpfSxELnByb3RvdHlwZS5tb3JwaFRvMkQ9ZnVuY3Rpb24oZSx0KXtpKHRoaXMuX2NvbXBsZXRlTW9ycGgpJiZ0aGlzLl9jb21wbGV0ZU1vcnBoKCk7dmFyIG49dGhpcy5fc2NlbmU7dGhpcy5fcHJldmlvdXNNb2RlPW4ubW9kZSx0aGlzLl9wcmV2aW91c01vZGUhPT1mLlNDRU5FMkQmJnRoaXMuX3ByZXZpb3VzTW9kZSE9PWYuTU9SUEhJTkcmJih0aGlzLl9zY2VuZS5tb3JwaFN0YXJ0LnJhaXNlRXZlbnQodGhpcyx0aGlzLl9wcmV2aW91c01vZGUsZi5TQ0VORTJELCEwKSxBKHRoaXMpLG4ubW9kZT1mLk1PUlBISU5HLHAodGhpcyxNKSx0aGlzLl9wcmV2aW91c01vZGU9PT1mLkNPTFVNQlVTX1ZJRVc/dyh0aGlzLGUsdCxNKTpFKHRoaXMsZSx0LE0pLDA9PT1lJiZpKHRoaXMuX2NvbXBsZXRlTW9ycGgpJiZ0aGlzLl9jb21wbGV0ZU1vcnBoKCkpfSxELnByb3RvdHlwZS5tb3JwaFRvQ29sdW1idXNWaWV3PWZ1bmN0aW9uKGUsdCl7aSh0aGlzLl9jb21wbGV0ZU1vcnBoKSYmdGhpcy5fY29tcGxldGVNb3JwaCgpO3ZhciBuPXRoaXMuX3NjZW5lO3RoaXMuX3ByZXZpb3VzTW9kZT1uLm1vZGUsdGhpcy5fcHJldmlvdXNNb2RlIT09Zi5DT0xVTUJVU19WSUVXJiZ0aGlzLl9wcmV2aW91c01vZGUhPT1mLk1PUlBISU5HJiYodGhpcy5fc2NlbmUubW9ycGhTdGFydC5yYWlzZUV2ZW50KHRoaXMsdGhpcy5fcHJldmlvdXNNb2RlLGYuQ09MVU1CVVNfVklFVywhMCksQSh0aGlzKSxuLm1vZGU9Zi5NT1JQSElORyxwKHRoaXMsSSksdGhpcy5fcHJldmlvdXNNb2RlPT09Zi5TQ0VORTJEP1ModGhpcyxlLHQsSSk6VCh0aGlzLGUsdGhpcy5fY2FtZXJhQ1YsSSksMD09PWUmJmkodGhpcy5fY29tcGxldGVNb3JwaCkmJnRoaXMuX2NvbXBsZXRlTW9ycGgoKSl9LEQucHJvdG90eXBlLm1vcnBoVG8zRD1mdW5jdGlvbihlLHQpe2kodGhpcy5fY29tcGxldGVNb3JwaCkmJnRoaXMuX2NvbXBsZXRlTW9ycGgoKTt2YXIgbj10aGlzLl9zY2VuZTt0aGlzLl9wcmV2aW91c01vZGU9bi5tb2RlLHRoaXMuX3ByZXZpb3VzTW9kZSE9PWYuU0NFTkUzRCYmdGhpcy5fcHJldmlvdXNNb2RlIT09Zi5NT1JQSElORyYmKHRoaXMuX3NjZW5lLm1vcnBoU3RhcnQucmFpc2VFdmVudCh0aGlzLHRoaXMuX3ByZXZpb3VzTW9kZSxmLlNDRU5FM0QsITApLEEodGhpcyksbi5tb2RlPWYuTU9SUEhJTkcscCh0aGlzLFApLHRoaXMuX3ByZXZpb3VzTW9kZT09PWYuU0NFTkUyRD9fKHRoaXMsZSx0LFApOmcodGhpcyxlLHQsUCksMD09PWUmJmkodGhpcy5fY29tcGxldGVNb3JwaCkmJnRoaXMuX2NvbXBsZXRlTW9ycGgoKSl9LEQucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LEQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdih0aGlzKSxuKHRoaXMpfSxEfSksZGVmaW5lKCJTY2VuZS9DYW1lcmFFdmVudFR5cGUiLFsiLi4vQ29yZS9mcmVlemVPYmplY3QiXSxmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9e0xFRlRfRFJBRzowLFJJR0hUX0RSQUc6MSxNSURETEVfRFJBRzoyLFdIRUVMOjMsUElOQ0g6NH07cmV0dXJuIGUodCl9KSxkZWZpbmUoIlNjZW5lL0NhbWVyYUV2ZW50QWdncmVnYXRvciIsWyIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9LZXlib2FyZEV2ZW50TW9kaWZpZXIiLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL1NjcmVlblNwYWNlRXZlbnRIYW5kbGVyIiwiLi4vQ29yZS9TY3JlZW5TcGFjZUV2ZW50VHlwZSIsIi4vQ2FtZXJhRXZlbnRUeXBlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGMoZSxpKXt2YXIgbj1lO3JldHVybiB0KGkpJiYobis9IisiK2kpLG59ZnVuY3Rpb24gZCh0LGkpe2UuY2xvbmUodC5kaXN0YW5jZS5zdGFydFBvc2l0aW9uLGkuZGlzdGFuY2Uuc3RhcnRQb3NpdGlvbiksZS5jbG9uZSh0LmRpc3RhbmNlLmVuZFBvc2l0aW9uLGkuZGlzdGFuY2UuZW5kUG9zaXRpb24pLGUuY2xvbmUodC5hbmdsZUFuZEhlaWdodC5zdGFydFBvc2l0aW9uLGkuYW5nbGVBbmRIZWlnaHQuc3RhcnRQb3NpdGlvbiksZS5jbG9uZSh0LmFuZ2xlQW5kSGVpZ2h0LmVuZFBvc2l0aW9uLGkuYW5nbGVBbmRIZWlnaHQuZW5kUG9zaXRpb24pfWZ1bmN0aW9uIGgoaSxuLHIpe3ZhciBvPWModS5QSU5DSCxuKSxhPWkuX3VwZGF0ZSxzPWkuX2lzRG93bixoPWkuX2V2ZW50U3RhcnRQb3NpdGlvbixtPWkuX3ByZXNzVGltZSxmPWkuX3JlbGVhc2VUaW1lO2Fbb109ITAsc1tvXT0hMSxoW29dPW5ldyBlO3ZhciBwPWkuX21vdmVtZW50W29dO3QocCl8fChwPWkuX21vdmVtZW50W29dPXt9KSxwLmRpc3RhbmNlPXtzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlfSxwLmFuZ2xlQW5kSGVpZ2h0PXtzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlfSxwLnByZXZBbmdsZT0wLGkuX2V2ZW50SGFuZGxlci5zZXRJbnB1dEFjdGlvbihmdW5jdGlvbih0KXtpLl9idXR0b25zRG93bisrLHNbb109ITAsbVtvXT1uZXcgRGF0ZSxlLmNsb25lKHQucG9zaXRpb24saFtvXSl9LGwuUElOQ0hfU1RBUlQsbiksaS5fZXZlbnRIYW5kbGVyLnNldElucHV0QWN0aW9uKGZ1bmN0aW9uKCl7aS5fYnV0dG9uc0Rvd249TWF0aC5tYXgoaS5fYnV0dG9uc0Rvd24tMSwwKSxzW29dPSExLGZbb109bmV3IERhdGV9LGwuUElOQ0hfRU5ELG4pLGkuX2V2ZW50SGFuZGxlci5zZXRJbnB1dEFjdGlvbihmdW5jdGlvbih0KXtpZihzW29dKXthW29dPyhkKHQscCksYVtvXT0hMSxwLnByZXZBbmdsZT1wLmFuZ2xlQW5kSGVpZ2h0LnN0YXJ0UG9zaXRpb24ueCk6KGUuY2xvbmUodC5kaXN0YW5jZS5lbmRQb3NpdGlvbixwLmRpc3RhbmNlLmVuZFBvc2l0aW9uKSxlLmNsb25lKHQuYW5nbGVBbmRIZWlnaHQuZW5kUG9zaXRpb24scC5hbmdsZUFuZEhlaWdodC5lbmRQb3NpdGlvbikpO2Zvcih2YXIgaT1wLmFuZ2xlQW5kSGVpZ2h0LmVuZFBvc2l0aW9uLngsbj1wLnByZXZBbmdsZSxsPTIqTWF0aC5QSTtpPj1uK01hdGguUEk7KWktPWw7Zm9yKDtpPG4tTWF0aC5QSTspaSs9bDtwLmFuZ2xlQW5kSGVpZ2h0LmVuZFBvc2l0aW9uLng9LWkqci5jbGllbnRXaWR0aC8xMixwLmFuZ2xlQW5kSGVpZ2h0LnN0YXJ0UG9zaXRpb24ueD0tbipyLmNsaWVudFdpZHRoLzEyfX0sbC5QSU5DSF9NT1ZFLG4pfWZ1bmN0aW9uIG0oaSxuKXt2YXIgcj1jKHUuV0hFRUwsbiksbz1pLl91cGRhdGU7b1tyXT0hMDt2YXIgcz1pLl9tb3ZlbWVudFtyXTt0KHMpfHwocz1pLl9tb3ZlbWVudFtyXT17fSkscy5zdGFydFBvc2l0aW9uPW5ldyBlLHMuZW5kUG9zaXRpb249bmV3IGUsaS5fZXZlbnRIYW5kbGVyLnNldElucHV0QWN0aW9uKGZ1bmN0aW9uKHQpe3ZhciBpPTE1KmEudG9SYWRpYW5zKHQpO29bcl0/KGUuY2xvbmUoZS5aRVJPLHMuc3RhcnRQb3NpdGlvbikscy5lbmRQb3NpdGlvbi54PTAscy5lbmRQb3NpdGlvbi55PWksb1tyXT0hMSk6cy5lbmRQb3NpdGlvbi55PXMuZW5kUG9zaXRpb24ueStpfSxsLldIRUVMLG4pfWZ1bmN0aW9uIGYoaSxuLHIpe3ZhciBvPWMocixuKSxhPWkuX2lzRG93bixzPWkuX2V2ZW50U3RhcnRQb3NpdGlvbixkPWkuX3ByZXNzVGltZSxoPWkuX3JlbGVhc2VUaW1lO2Fbb109ITEsc1tvXT1uZXcgZTt2YXIgbT1pLl9sYXN0TW92ZW1lbnRbb107dChtKXx8KG09aS5fbGFzdE1vdmVtZW50W29dPXtzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlLHZhbGlkOiExfSk7dmFyIGYscDtyPT09dS5MRUZUX0RSQUc/KGY9bC5MRUZUX0RPV04scD1sLkxFRlRfVVApOnI9PT11LlJJR0hUX0RSQUc/KGY9bC5SSUdIVF9ET1dOLHA9bC5SSUdIVF9VUCk6cj09PXUuTUlERExFX0RSQUcmJihmPWwuTUlERExFX0RPV04scD1sLk1JRERMRV9VUCksaS5fZXZlbnRIYW5kbGVyLnNldElucHV0QWN0aW9uKGZ1bmN0aW9uKHQpe2kuX2J1dHRvbnNEb3duKyssbS52YWxpZD0hMSxhW29dPSEwLGRbb109bmV3IERhdGUsZS5jbG9uZSh0LnBvc2l0aW9uLHNbb10pfSxmLG4pLGkuX2V2ZW50SGFuZGxlci5zZXRJbnB1dEFjdGlvbihmdW5jdGlvbigpe2kuX2J1dHRvbnNEb3duPU1hdGgubWF4KGkuX2J1dHRvbnNEb3duLTEsMCksYVtvXT0hMSxoW29dPW5ldyBEYXRlfSxwLG4pfWZ1bmN0aW9uIHAodCxpKXtlLmNsb25lKHQuc3RhcnRQb3NpdGlvbixpLnN0YXJ0UG9zaXRpb24pLGUuY2xvbmUodC5lbmRQb3NpdGlvbixpLmVuZFBvc2l0aW9uKX1mdW5jdGlvbiB2KGksbil7dmFyIHI9aS5fdXBkYXRlLG89aS5fbW92ZW1lbnQsYT1pLl9sYXN0TW92ZW1lbnQscz1pLl9pc0Rvd247Zm9yKHZhciBkIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShkKSl7dmFyIGg9dVtkXTtpZih0KGgpKXt2YXIgbT1jKGgsbik7clttXT0hMCx0KGkuX2xhc3RNb3ZlbWVudFttXSl8fChpLl9sYXN0TW92ZW1lbnRbbV09e3N0YXJ0UG9zaXRpb246bmV3IGUsZW5kUG9zaXRpb246bmV3IGUsdmFsaWQ6ITF9KSx0KGkuX21vdmVtZW50W21dKXx8KGkuX21vdmVtZW50W21dPXtzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlfSl9fWkuX2V2ZW50SGFuZGxlci5zZXRJbnB1dEFjdGlvbihmdW5jdGlvbihsKXtmb3IodmFyIGQgaW4gdSlpZih1Lmhhc093blByb3BlcnR5KGQpKXt2YXIgaD11W2RdO2lmKHQoaCkpe3ZhciBtPWMoaCxuKTtzW21dJiYoclttXT8ocChvW21dLGFbbV0pLGFbbV0udmFsaWQ9ITAscChsLG9bbV0pLHJbbV09ITEpOmUuY2xvbmUobC5lbmRQb3NpdGlvbixvW21dLmVuZFBvc2l0aW9uKSl9fWUuY2xvbmUobC5lbmRQb3NpdGlvbixpLl9jdXJyZW50TW91c2VQb3NpdGlvbil9LGwuTU9VU0VfTU9WRSxuKX12YXIgZz1mdW5jdGlvbihpKXt0aGlzLl9ldmVudEhhbmRsZXI9bmV3IHMoaSksdGhpcy5fdXBkYXRlPXt9LHRoaXMuX21vdmVtZW50PXt9LHRoaXMuX2xhc3RNb3ZlbWVudD17fSx0aGlzLl9pc0Rvd249e30sdGhpcy5fZXZlbnRTdGFydFBvc2l0aW9uPXt9LHRoaXMuX3ByZXNzVGltZT17fSx0aGlzLl9yZWxlYXNlVGltZT17fSx0aGlzLl9idXR0b25zRG93bj0wLHRoaXMuX2N1cnJlbnRNb3VzZVBvc2l0aW9uPW5ldyBlLG0odGhpcyx2b2lkIDApLGgodGhpcyx2b2lkIDAsaSksZih0aGlzLHZvaWQgMCx1LkxFRlRfRFJBRyksZih0aGlzLHZvaWQgMCx1LlJJR0hUX0RSQUcpLGYodGhpcyx2b2lkIDAsdS5NSURETEVfRFJBRyksdih0aGlzLHZvaWQgMCk7Zm9yKHZhciBuIGluIG8paWYoby5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIHI9b1tuXTt0KHIpJiYobSh0aGlzLHIpLGgodGhpcyxyLGkpLGYodGhpcyxyLHUuTEVGVF9EUkFHKSxmKHRoaXMscix1LlJJR0hUX0RSQUcpLGYodGhpcyxyLHUuTUlERExFX0RSQUcpLHYodGhpcyxyKSl9fTtyZXR1cm4gaShnLnByb3RvdHlwZSx7Y3VycmVudE1vdXNlUG9zaXRpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jdXJyZW50TW91c2VQb3NpdGlvbn19LGFueUJ1dHRvbkRvd246e2dldDpmdW5jdGlvbigpe3ZhciBlPSEodGhpcy5fdXBkYXRlW2ModS5XSEVFTCldJiZ0aGlzLl91cGRhdGVbYyh1LldIRUVMLG8uU0hJRlQpXSYmdGhpcy5fdXBkYXRlW2ModS5XSEVFTCxvLkNUUkwpXSYmdGhpcy5fdXBkYXRlW2ModS5XSEVFTCxvLkFMVCldKTtyZXR1cm4gdGhpcy5fYnV0dG9uc0Rvd24+MHx8ZX19fSksZy5wcm90b3R5cGUuaXNNb3Zpbmc9ZnVuY3Rpb24oZSx0KXt2YXIgaT1jKGUsdCk7cmV0dXJuIXRoaXMuX3VwZGF0ZVtpXX0sZy5wcm90b3R5cGUuZ2V0TW92ZW1lbnQ9ZnVuY3Rpb24oZSx0KXt2YXIgaT1jKGUsdCksbj10aGlzLl9tb3ZlbWVudFtpXTtyZXR1cm4gbn0sZy5wcm90b3R5cGUuZ2V0TGFzdE1vdmVtZW50PWZ1bmN0aW9uKGUsdCl7dmFyIGk9YyhlLHQpLG49dGhpcy5fbGFzdE1vdmVtZW50W2ldO3JldHVybiBuLnZhbGlkP246dm9pZCAwfSxnLnByb3RvdHlwZS5pc0J1dHRvbkRvd249ZnVuY3Rpb24oZSx0KXt2YXIgaT1jKGUsdCk7cmV0dXJuIHRoaXMuX2lzRG93bltpXX0sZy5wcm90b3R5cGUuZ2V0U3RhcnRNb3VzZVBvc2l0aW9uPWZ1bmN0aW9uKGUsdCl7aWYoZT09PXUuV0hFRUwpcmV0dXJuIHRoaXMuX2N1cnJlbnRNb3VzZVBvc2l0aW9uO3ZhciBpPWMoZSx0KTtyZXR1cm4gdGhpcy5fZXZlbnRTdGFydFBvc2l0aW9uW2ldfSxnLnByb3RvdHlwZS5nZXRCdXR0b25QcmVzc1RpbWU9ZnVuY3Rpb24oZSx0KXt2YXIgaT1jKGUsdCk7cmV0dXJuIHRoaXMuX3ByZXNzVGltZVtpXX0sZy5wcm90b3R5cGUuZ2V0QnV0dG9uUmVsZWFzZVRpbWU9ZnVuY3Rpb24oZSx0KXt2YXIgaT1jKGUsdCk7cmV0dXJuIHRoaXMuX3JlbGVhc2VUaW1lW2ldfSxnLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe2Zvcih2YXIgZSBpbiB0aGlzLl91cGRhdGUpdGhpcy5fdXBkYXRlLmhhc093blByb3BlcnR5KGUpJiYodGhpcy5fdXBkYXRlW2VdPSEwKX0sZy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ldmVudEhhbmRsZXI9dGhpcy5fZXZlbnRIYW5kbGVyJiZ0aGlzLl9ldmVudEhhbmRsZXIuZGVzdHJveSgpLG4odGhpcyl9LGd9KSxkZWZpbmUoIlNjZW5lL1R3ZWVuQ29sbGVjdGlvbiIsWyIuLi9Db3JlL2Nsb25lIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9FYXNpbmdGdW5jdGlvbiIsIi4uL0NvcmUvZ2V0VGltZXN0YW1wIiwiLi4vQ29yZS9UaW1lQ29uc3RhbnRzIiwiLi4vVGhpcmRQYXJ0eS9Ud2VlbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsKXsidXNlIHN0cmljdCI7dmFyIHU9ZnVuY3Rpb24odCxpLG4scixvLGEscyxsLHUsYyl7dGhpcy5fdHdlZW5zPXQsdGhpcy5fdHdlZW5qcz1pLHRoaXMuX3N0YXJ0T2JqZWN0PWUobiksdGhpcy5fc3RvcE9iamVjdD1lKHIpLHRoaXMuX2R1cmF0aW9uPW8sdGhpcy5fZGVsYXk9YSx0aGlzLl9lYXNpbmdGdW5jdGlvbj1zLHRoaXMuX3VwZGF0ZT1sLHRoaXMuX2NvbXBsZXRlPXUsdGhpcy5jYW5jZWw9Yyx0aGlzLm5lZWRzU3RhcnQ9ITB9O24odS5wcm90b3R5cGUse3N0YXJ0T2JqZWN0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhcnRPYmplY3R9fSxzdG9wT2JqZWN0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RvcE9iamVjdH19LGR1cmF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZHVyYXRpb259fSxkZWxheTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGF5fX0sZWFzaW5nRnVuY3Rpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lYXNpbmdGdW5jdGlvbn19LHVwZGF0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VwZGF0ZX19LGNvbXBsZXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29tcGxldGV9fSx0d2VlbmpzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHdlZW5qc319fSksdS5wcm90b3R5cGUuY2FuY2VsVHdlZW49ZnVuY3Rpb24oKXt0aGlzLl90d2VlbnMucmVtb3ZlKHRoaXMpfTt2YXIgYz1mdW5jdGlvbigpe3RoaXMuX3R3ZWVucz1bXX07cmV0dXJuIG4oYy5wcm90b3R5cGUse2xlbmd0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R3ZWVucy5sZW5ndGh9fX0pLGMucHJvdG90eXBlLmFkZD1mdW5jdGlvbihuKXtpZihuPXQobix0LkVNUFRZX09CSkVDVCksMD09PW4uZHVyYXRpb24pcmV0dXJuIGkobi5jb21wbGV0ZSkmJm4uY29tcGxldGUoKSxuZXcgdSh0aGlzKTt2YXIgcj1uLmR1cmF0aW9uL3MuU0VDT05EU19QRVJfTUlMTElTRUNPTkQsYT10KG4uZGVsYXksMCksYz1hL3MuU0VDT05EU19QRVJfTUlMTElTRUNPTkQsZD10KG4uZWFzaW5nRnVuY3Rpb24sby5MSU5FQVJfTk9ORSksaD1uLnN0YXJ0T2JqZWN0LG09bmV3IGwuVHdlZW4oaCk7bS50byhlKG4uc3RvcE9iamVjdCksciksbS5kZWxheShjKSxtLmVhc2luZyhkKSxpKG4udXBkYXRlKSYmbS5vblVwZGF0ZShmdW5jdGlvbigpe24udXBkYXRlKGgpfSksbS5vbkNvbXBsZXRlKHQobi5jb21wbGV0ZSxudWxsKSksbS5yZXBlYXQodChuLl9yZXBlYXQsMCkpO3ZhciBmPW5ldyB1KHRoaXMsbSxuLnN0YXJ0T2JqZWN0LG4uc3RvcE9iamVjdCxuLmR1cmF0aW9uLGEsZCxuLnVwZGF0ZSxuLmNvbXBsZXRlLG4uY2FuY2VsKTtyZXR1cm4gdGhpcy5fdHdlZW5zLnB1c2goZiksZn0sYy5wcm90b3R5cGUuYWRkUHJvcGVydHk9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaShlKXtuW3JdPWUudmFsdWV9ZT10KGUsdC5FTVBUWV9PQkpFQ1QpO3ZhciBuPWUub2JqZWN0LHI9ZS5wcm9wZXJ0eSxvPWUuc3RhcnRWYWx1ZSxhPWUuc3RvcFZhbHVlO3JldHVybiB0aGlzLmFkZCh7c3RhcnRPYmplY3Q6e3ZhbHVlOm99LHN0b3BPYmplY3Q6e3ZhbHVlOmF9LGR1cmF0aW9uOnQoZS5kdXJhdGlvbiwzKSxkZWxheTplLmRlbGF5LGVhc2luZ0Z1bmN0aW9uOmUuZWFzaW5nRnVuY3Rpb24sdXBkYXRlOmksY29tcGxldGU6ZS5jb21wbGV0ZSxjYW5jZWw6ZS5jYW5jZWwsX3JlcGVhdDplLl9yZXBlYXR9KX0sYy5wcm90b3R5cGUuYWRkQWxwaGE9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbihlKXtmb3IodmFyIHQ9by5sZW5ndGgsaT0wO3Q+aTsrK2kpci51bmlmb3Jtc1tvW2ldXS5hbHBoYT1lLmFscGhhfWU9dChlLHQuRU1QVFlfT0JKRUNUKTt2YXIgcj1lLm1hdGVyaWFsLG89W107Zm9yKHZhciBhIGluIHIudW5pZm9ybXMpci51bmlmb3Jtcy5oYXNPd25Qcm9wZXJ0eShhKSYmaShyLnVuaWZvcm1zW2FdKSYmaShyLnVuaWZvcm1zW2FdLmFscGhhKSYmby5wdXNoKGEpO3JldHVybiB0aGlzLmFkZCh7c3RhcnRPYmplY3Q6e2FscGhhOnQoZS5zdGFydFZhbHVlLDApfSxzdG9wT2JqZWN0OnthbHBoYTp0KGUuc3RvcFZhbHVlLDEpfSxkdXJhdGlvbjp0KGUuZHVyYXRpb24sMyksZGVsYXk6ZS5kZWxheSxlYXNpbmdGdW5jdGlvbjplLmVhc2luZ0Z1bmN0aW9uLHVwZGF0ZTpuLGNvbXBsZXRlOmUuY29tcGxldGUsY2FuY2VsOmUuY2FuY2VsfSl9LGMucHJvdG90eXBlLmFkZE9mZnNldEluY3JlbWVudD1mdW5jdGlvbihlKXtlPXQoZSx0LkVNUFRZX09CSkVDVCk7dmFyIGk9ZS5tYXRlcmlhbCxuPWkudW5pZm9ybXM7cmV0dXJuIHRoaXMuYWRkUHJvcGVydHkoe29iamVjdDpuLHByb3BlcnR5OiJvZmZzZXQiLHN0YXJ0VmFsdWU6bi5vZmZzZXQsc3RvcFZhbHVlOm4ub2Zmc2V0KzEsZHVyYXRpb246ZS5kdXJhdGlvbixkZWxheTplLmRlbGF5LGVhc2luZ0Z1bmN0aW9uOmUuZWFzaW5nRnVuY3Rpb24sdXBkYXRlOmUudXBkYXRlLGNhbmNlbDplLmNhbmNlbCxfcmVwZWF0OjEvMH0pfSxjLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7aWYoIWkoZSkpcmV0dXJuITE7dmFyIHQ9dGhpcy5fdHdlZW5zLmluZGV4T2YoZSk7cmV0dXJuLTEhPT10PyhlLnR3ZWVuanMuc3RvcCgpLGkoZS5jYW5jZWwpJiZlLmNhbmNlbCgpLHRoaXMuX3R3ZWVucy5zcGxpY2UodCwxKSwhMCk6ITF9LGMucHJvdG90eXBlLnJlbW92ZUFsbD1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLl90d2VlbnMsdD0wO3Q8ZS5sZW5ndGg7Kyt0KXt2YXIgbj1lW3RdO24udHdlZW5qcy5zdG9wKCksaShuLmNhbmNlbCkmJm4uY2FuY2VsKCl9ZS5sZW5ndGg9MH0sYy5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIGkoZSkmJi0xIT09dGhpcy5fdHdlZW5zLmluZGV4T2YoZSl9LGMucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fdHdlZW5zW2VdfSxjLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdHdlZW5zLG49MDtmb3IoZT1pKGUpP2Uvcy5TRUNPTkRTX1BFUl9NSUxMSVNFQ09ORDphKCk7bjx0Lmxlbmd0aDspe3ZhciByPXRbbl0sbz1yLnR3ZWVuanM7ci5uZWVkc1N0YXJ0PyhyLm5lZWRzU3RhcnQ9ITEsby5zdGFydChlKSk6by51cGRhdGUoZSk/bisrOihvLnN0b3AoKSx0LnNwbGljZShuLDEpKX19LGN9KSxkZWZpbmUoIlNjZW5lL1NjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlciIsWyIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NhcnRvZ3JhcGhpYyIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRWxsaXBzb2lkIiwiLi4vQ29yZS9JbnRlcnNlY3Rpb25UZXN0cyIsIi4uL0NvcmUvaXNBcnJheSIsIi4uL0NvcmUvS2V5Ym9hcmRFdmVudE1vZGlmaWVyIiwiLi4vQ29yZS9NYXRoIiwiLi4vQ29yZS9NYXRyaXgzIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9QbGFuZSIsIi4uL0NvcmUvUXVhdGVybmlvbiIsIi4uL0NvcmUvUmF5IiwiLi4vQ29yZS9UcmFuc2Zvcm1zIiwiLi9DYW1lcmFFdmVudEFnZ3JlZ2F0b3IiLCIuL0NhbWVyYUV2ZW50VHlwZSIsIi4vU2NlbmVNb2RlIiwiLi9Ud2VlbkNvbGxlY3Rpb24iXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMsZCxoLG0sZixwLHYsZyxfLHksQyx3LEUpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGUsdCl7aWYoMD5lKXJldHVybiAwO3ZhciBpPTI1KigxLXQpO3JldHVybiBNYXRoLmV4cCgtaSplKX1mdW5jdGlvbiBTKHQpe3JldHVybiBlLmVxdWFsc0Vwc2lsb24odC5zdGFydFBvc2l0aW9uLHQuZW5kUG9zaXRpb24saC5FUFNJTE9OMTQpfWZ1bmN0aW9uIFQodCxpLG4scixhLHMsbCl7dmFyIHU9c1tsXTtvKHUpfHwodT1zW2xdPXtzdGFydFBvc2l0aW9uOm5ldyBlLGVuZFBvc2l0aW9uOm5ldyBlLG1vdGlvbjpuZXcgZSxhY3RpdmU6ITF9KTt2YXIgYz10LmdldEJ1dHRvblByZXNzVGltZShpLG4pLGQ9dC5nZXRCdXR0b25SZWxlYXNlVGltZShpLG4pLGg9YyYmZCYmKGQuZ2V0VGltZSgpLWMuZ2V0VGltZSgpKS8xZTMsbT1uZXcgRGF0ZSxmPWQmJihtLmdldFRpbWUoKS1kLmdldFRpbWUoKSkvMWUzO2lmKGMmJmQmJko+aCl7dmFyIHA9YihmLHIpO2lmKHUuYWN0aXZlKXUuc3RhcnRQb3NpdGlvbj1lLmNsb25lKHUuZW5kUG9zaXRpb24sdS5zdGFydFBvc2l0aW9uKSx1LmVuZFBvc2l0aW9uPWUubXVsdGlwbHlCeVNjYWxhcih1Lm1vdGlvbixwLHUuZW5kUG9zaXRpb24pLHUuZW5kUG9zaXRpb249ZS5hZGQodS5zdGFydFBvc2l0aW9uLHUuZW5kUG9zaXRpb24sdS5lbmRQb3NpdGlvbiksdS5tb3Rpb249ZS5jbG9uZShlLlpFUk8sdS5tb3Rpb24pO2Vsc2V7dmFyIHY9dC5nZXRMYXN0TW92ZW1lbnQoaSxuKTtpZighbyh2KXx8Uyh2KSlyZXR1cm47dS5tb3Rpb24ueD0uNSoodi5lbmRQb3NpdGlvbi54LXYuc3RhcnRQb3NpdGlvbi54KSx1Lm1vdGlvbi55PS41Kih2LmVuZFBvc2l0aW9uLnktdi5zdGFydFBvc2l0aW9uLnkpLHUuc3RhcnRQb3NpdGlvbj1lLmNsb25lKHYuc3RhcnRQb3NpdGlvbix1LnN0YXJ0UG9zaXRpb24pLHUuZW5kUG9zaXRpb249ZS5tdWx0aXBseUJ5U2NhbGFyKHUubW90aW9uLHAsdS5lbmRQb3NpdGlvbiksdS5lbmRQb3NpdGlvbj1lLmFkZCh1LnN0YXJ0UG9zaXRpb24sdS5lbmRQb3NpdGlvbix1LmVuZFBvc2l0aW9uKSx1LmFjdGl2ZT0hMH1pZihpc05hTih1LmVuZFBvc2l0aW9uLngpfHxpc05hTih1LmVuZFBvc2l0aW9uLnkpfHxTKHUpKXJldHVybiB1LmFjdGl2ZT0hMSx2b2lkIDA7aWYoIXQuaXNCdXR0b25Eb3duKGksbikpe3ZhciBnPXQuZ2V0U3RhcnRNb3VzZVBvc2l0aW9uKGksbik7YShzLGcsdSl9fWVsc2UgdS5hY3RpdmU9ITF9ZnVuY3Rpb24geChlLHQsaSxuLHIsYSl7aWYobyhpKSl7dmFyIHM9ZS5fYWdncmVnYXRvcjtjKGkpfHwoS1swXT1pLGk9Syk7Zm9yKHZhciBsPWkubGVuZ3RoLHU9MDtsPnU7Kyt1KXt2YXIgZD1pW3VdLGg9byhkLmV2ZW50VHlwZSk/ZC5ldmVudFR5cGU6ZCxtPWQubW9kaWZpZXIsZj1zLmlzTW92aW5nKGgsbSkmJnMuZ2V0TW92ZW1lbnQoaCxtKSxwPXMuZ2V0U3RhcnRNb3VzZVBvc2l0aW9uKGgsbSk7ZS5lbmFibGVJbnB1dHMmJnQmJihmP24oZSxwLGYpOjE+ciYmVChzLGgsbSxyLG4sZSxhKSl9fX1mdW5jdGlvbiBBKGUsdCxpLG4scixhKXt2YXIgcz0xO28oYSkmJihzPWguY2xhbXAoTWF0aC5hYnMoYSksLjI1LDEpKTt2YXIgbD1lLm1pbmltdW1ab29tRGlzdGFuY2Uqcyx1PWUubWF4aW11bVpvb21EaXN0YW5jZSxjPXItbCxkPW4qYztkPWguY2xhbXAoZCxlLl9taW5pbXVtWm9vbVJhdGUsZS5fbWF4aW11bVpvb21SYXRlKTt2YXIgbT1pLmVuZFBvc2l0aW9uLnktaS5zdGFydFBvc2l0aW9uLnksZj1tL2UuX3NjZW5lLmNhbnZhcy5jbGllbnRIZWlnaHQ7Zj1NYXRoLm1pbihmLGUubWF4aW11bU1vdmVtZW50UmF0aW8pO3ZhciBwPWQqZjtwPjAmJk1hdGguYWJzKHItbCk8MXx8MD5wJiZNYXRoLmFicyhyLXUpPDF8fChsPnItcD9wPXItbC0xOnItcD51JiYocD1yLXUpLGUuX3NjZW5lLmNhbWVyYS56b29tSW4ocCkpfWZ1bmN0aW9uIFAoZSxpLG4pe3ZhciByPWUuX3NjZW5lLG89ci5jYW1lcmEsYT1vLmdldFBpY2tSYXkobi5zdGFydFBvc2l0aW9uLFEpLm9yaWdpbixzPW8uZ2V0UGlja1JheShuLmVuZFBvc2l0aW9uLCQpLm9yaWdpbixsPW8ucG9zaXRpb24sdT10LnN1YnRyYWN0KGEsbCxldCksYz10LnN1YnRyYWN0KHMsbCx0dCksZD10LnN1YnRyYWN0KHUsYyxldCksaD10Lm1hZ25pdHVkZShkKTtoPjAmJih0Lm5vcm1hbGl6ZShkLGQpLG8ubW92ZShkLGgpKX1mdW5jdGlvbiBNKGUsdCxpKXtvKGkuZGlzdGFuY2UpJiYoaT1pLmRpc3RhbmNlKTt2YXIgbj1lLl9zY2VuZSxyPW4uY2FtZXJhO0EoZSx0LGksZS5fem9vbUZhY3RvcixyLmdldE1hZ25pdHVkZSgpKX1mdW5jdGlvbiBJKHQsaSxuKXtpZihvKG4uYW5nbGVBbmRIZWlnaHQpKXJldHVybiBEKHQsaSxuLmFuZ2xlQW5kSGVpZ2h0KSx2b2lkIDA7dmFyIHI9dC5fc2NlbmUsYT1yLmNhbWVyYSxzPXIuY2FudmFzLGw9cy5jbGllbnRXaWR0aCx1PXMuY2xpZW50SGVpZ2h0LGM9aXQ7Yy54PTIvbCpuLnN0YXJ0UG9zaXRpb24ueC0xLGMueT0yL3UqKHUtbi5zdGFydFBvc2l0aW9uLnkpLTEsYz1lLm5vcm1hbGl6ZShjLGMpO3ZhciBkPW50O2QueD0yL2wqbi5lbmRQb3NpdGlvbi54LTEsZC55PTIvdSoodS1uLmVuZFBvc2l0aW9uLnkpLTEsZD1lLm5vcm1hbGl6ZShkLGQpO3ZhciBtPWguYWNvc0NsYW1wZWQoYy54KTtjLnk8MCYmKG09aC5UV09fUEktbSk7dmFyIGY9aC5hY29zQ2xhbXBlZChkLngpO2QueTwwJiYoZj1oLlRXT19QSS1mKTt2YXIgcD1mLW07YS50d2lzdFJpZ2h0KHApfWZ1bmN0aW9uIEQoZSx0LGkpe3ZhciBuPWUuX3JvdGF0ZUZhY3RvciplLl9yb3RhdGVSYXRlUmFuZ2VBZGp1c3RtZW50O24+ZS5fbWF4aW11bVJvdGF0ZVJhdGUmJihuPWUuX21heGltdW1Sb3RhdGVSYXRlKSxuPGUuX21pbmltdW1Sb3RhdGVSYXRlJiYobj1lLl9taW5pbXVtUm90YXRlUmF0ZSk7dmFyIHI9ZS5fc2NlbmUsbz1yLmNhbWVyYSxhPXIuY2FudmFzLHM9KGkuZW5kUG9zaXRpb24ueC1pLnN0YXJ0UG9zaXRpb24ueCkvYS5jbGllbnRXaWR0aDtzPU1hdGgubWluKHMsZS5tYXhpbXVtTW92ZW1lbnRSYXRpbyk7dmFyIGw9NCpuKnMqTWF0aC5QSTtvLnR3aXN0UmlnaHQobCl9ZnVuY3Rpb24gTyhlKXt2YXIgdD1lLl90d2VlbnM7ZS5fYWdncmVnYXRvci5hbnlCdXR0b25Eb3duJiZ0LnJlbW92ZUFsbCgpO3ZhciBpPWUuX3NjZW5lLG49aS5jYW1lcmE7aWYodC5jb250YWlucyhlLl90d2Vlbil8fChmLmVxdWFscyhmLklERU5USVRZLG4udHJhbnNmb3JtKT8oeChlLGUuZW5hYmxlVHJhbnNsYXRlLGUudHJhbnNsYXRlRXZlbnRUeXBlcyxQLGUuaW5lcnRpYVRyYW5zbGF0ZSwiX2xhc3RJbmVydGlhVHJhbnNsYXRlTW92ZW1lbnQiKSx4KGUsZS5lbmFibGVab29tLGUuem9vbUV2ZW50VHlwZXMsTSxlLmluZXJ0aWFab29tLCJfbGFzdEluZXJ0aWFab29tTW92ZW1lbnQiKSx4KGUsZS5lbmFibGVSb3RhdGUsZS50aWx0RXZlbnRUeXBlcyxJLGUuaW5lcnRpYVNwaW4sIl9sYXN0SW5lcnRpYVRpbHRNb3ZlbWVudCIpKTooeChlLGUuZW5hYmxlUm90YXRlLGUudHJhbnNsYXRlRXZlbnRUeXBlcyxJLGUuaW5lcnRpYVNwaW4sIl9sYXN0SW5lcnRpYVNwaW5Nb3ZlbWVudCIpLHgoZSxlLmVuYWJsZVpvb20sZS56b29tRXZlbnRUeXBlcyxNLGUuaW5lcnRpYVpvb20sIl9sYXN0SW5lcnRpYVpvb21Nb3ZlbWVudCIpKSksIShlLl9hZ2dyZWdhdG9yLmFueUJ1dHRvbkRvd258fG8oZS5fbGFzdEluZXJ0aWFab29tTW92ZW1lbnQpJiZlLl9sYXN0SW5lcnRpYVpvb21Nb3ZlbWVudC5hY3RpdmV8fG8oZS5fbGFzdEluZXJ0aWFUcmFuc2xhdGVNb3ZlbWVudCkmJmUuX2xhc3RJbmVydGlhVHJhbnNsYXRlTW92ZW1lbnQuYWN0aXZlfHx0LmNvbnRhaW5zKGUuX3R3ZWVuKSkpe3ZhciByPW4uY3JlYXRlQ29ycmVjdFBvc2l0aW9uVHdlZW4oZS5ib3VuY2VBbmltYXRpb25UaW1lKTsKbyhyKSYmKGUuX3R3ZWVuPXQuYWRkKHIpKX10LnVwZGF0ZSgpfWZ1bmN0aW9uIFIoaSxuLHIpe2lmKHQuZXF1YWxzKG4saS5fdHJhbnNsYXRlTW91c2VQb3NpdGlvbil8fChpLl9sb29raW5nPSExKSxpLl9sb29raW5nKXJldHVybiBqKGksbixyKSx2b2lkIDA7dmFyIGE9aS5fc2NlbmUscz1hLmNhbWVyYSxsPWUuY2xvbmUoci5zdGFydFBvc2l0aW9uLGR0KSxjPWUuY2xvbmUoci5lbmRQb3NpdGlvbixodCksZD1zLmdldFBpY2tSYXkobCxydCksbT10LmNsb25lKHQuWkVSTyx1dCksZj10LlVOSVRfWDtpZihvKGkuX2dsb2JlKSYmcy5wb3NpdGlvbi56PGkubWluaW11bVBpY2tpbmdUZXJyYWluSGVpZ2h0KXt2YXIgdj1pLl9nbG9iZS5waWNrKGQsYSxhdCk7byh2KSYmKG0ueD12LngpfWlmKG0ueD5zLnBvc2l0aW9uLnope3ZhciBnPWwueTtsLnk9Yy55LGMueT1nfXZhciBfPXAuZnJvbVBvaW50Tm9ybWFsKG0sZixjdCk7ZD1zLmdldFBpY2tSYXkobCxydCk7dmFyIHk9dS5yYXlQbGFuZShkLF8sYXQpLEM9cy5nZXRQaWNrUmF5KGMsb3QpLHc9dS5yYXlQbGFuZShDLF8sc3QpO2lmKCFvKHkpfHwhbyh3KSlyZXR1cm4gaS5fbG9va2luZz0hMCxqKGksbixyKSxlLmNsb25lKG4saS5fdHJhbnNsYXRlTW91c2VQb3NpdGlvbiksdm9pZCAwO3ZhciBFPXQuc3VidHJhY3QoeSx3LGx0KSxiPUUueDtFLng9RS55LEUueT1FLnosRS56PWI7dmFyIFM9dC5tYWduaXR1ZGUoRSk7Uz5oLkVQU0lMT042JiYodC5ub3JtYWxpemUoRSxFKSxzLm1vdmUoRSxTKSl9ZnVuY3Rpb24gTCh0LGksbil7aWYobyhuLmFuZ2xlQW5kSGVpZ2h0KSYmKG49bi5hbmdsZUFuZEhlaWdodCksZS5lcXVhbHMoaSx0Ll90aWx0Q2VudGVyTW91c2VQb3NpdGlvbil8fCh0Ll90aWx0Q1ZPZmZNYXA9ITEsdC5fbG9va2luZz0hMSksdC5fbG9va2luZylyZXR1cm4gaih0LGksbiksdm9pZCAwO3ZhciByPXQuX3NjZW5lLGE9ci5jYW1lcmEscz10Ll9tYXhDb29yZCxsPU1hdGguYWJzKGEucG9zaXRpb24ueCktcy54PDAmJk1hdGguYWJzKGEucG9zaXRpb24ueSktcy55PDA7dC5fdGlsdENWT2ZmTWFwfHwhbHx8YS5wb3NpdGlvbi56PnQubWluaW11bVBpY2tpbmdUZXJyYWluSGVpZ2h0Pyh0Ll90aWx0Q1ZPZmZNYXA9ITAsTih0LGksbikpOnoodCxpLG4pfWZ1bmN0aW9uIE4oaSxuLHIpe3ZhciBhPWkuX3NjZW5lLHM9YS5jYW1lcmEsdT1hLmNhbnZhcyxjPW10O2MueD11LmNsaWVudFdpZHRoLzIsYy55PXUuY2xpZW50SGVpZ2h0LzI7dmFyIGQsbT1zLmdldFBpY2tSYXkoYyxmdCkscD10LlVOSVRfWCx2PW0ub3JpZ2luLGc9bS5kaXJlY3Rpb24seT10LmRvdChwLGcpO2lmKE1hdGguYWJzKHkpPmguRVBTSUxPTjYmJihkPS10LmRvdChwLHYpL3kpLCFvKGQpfHwwPj1kKXJldHVybiBpLl9sb29raW5nPSEwLGooaSxuLHIpLGUuY2xvbmUobixpLl90aWx0Q2VudGVyTW91c2VQb3NpdGlvbiksdm9pZCAwO3ZhciBDPXQubXVsdGlwbHlCeVNjYWxhcihnLGQscHQpO3QuYWRkKHYsQyxDKTt2YXIgdz1hLm1hcFByb2plY3Rpb24sRT13LmVsbGlwc29pZDt0LmZyb21FbGVtZW50cyhDLnksQy56LEMueCxDKTt2YXIgYj13LnVucHJvamVjdChDLEV0KTtFLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKGIsQyk7dmFyIFM9Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShDLEUsZ3QpLFQ9aS5fZ2xvYmUseD1pLl9lbGxpcHNvaWQ7aS5fZ2xvYmU9dm9pZCAwLGkuX2VsbGlwc29pZD1sLlVOSVRfU1BIRVJFLGkuX3JvdGF0ZUZhY3Rvcj0xLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9MTt2YXIgQT1mLmNsb25lKHMudHJhbnNmb3JtLGJ0KTtzLnNldFRyYW5zZm9ybShTKSxrKGksbixyLHQuVU5JVF9aKSxzLnNldFRyYW5zZm9ybShBKSxpLl9nbG9iZT1ULGkuX2VsbGlwc29pZD14O3ZhciBQPXgubWF4aW11bVJhZGl1cztpLl9yb3RhdGVGYWN0b3I9MS9QLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9UH1mdW5jdGlvbiB6KGksbixyKXt2YXIgYSxzLGM9aS5fZWxsaXBzb2lkLGQ9aS5fc2NlbmUsZz1kLmNhbWVyYSx5PXQuVU5JVF9YO2lmKGUuZXF1YWxzKG4saS5fdGlsdENlbnRlck1vdXNlUG9zaXRpb24pKWE9dC5jbG9uZShpLl90aWx0Q2VudGVyLHB0KTtlbHNle2lmKHM9Zy5nZXRQaWNrUmF5KG4sZnQpLG8oaS5fZ2xvYmUpJiZnLnBvc2l0aW9uLno8aS5taW5pbXVtUGlja2luZ1RlcnJhaW5IZWlnaHQmJihhPWkuX2dsb2JlLnBpY2socyxkLHB0KSksIW8oYSkpe3ZhciBDLHc9cy5vcmlnaW4sRT1zLmRpcmVjdGlvbixiPXQuZG90KHksRSk7aWYoTWF0aC5hYnMoYik+aC5FUFNJTE9ONiYmKEM9LXQuZG90KHksdykvYiksIW8oQyl8fDA+PUMpcmV0dXJuIGkuX2xvb2tpbmc9ITAsaihpLG4sciksZS5jbG9uZShuLGkuX3RpbHRDZW50ZXJNb3VzZVBvc2l0aW9uKSx2b2lkIDA7YT10Lm11bHRpcGx5QnlTY2FsYXIoRSxDLHB0KSx0LmFkZCh3LGEsYSl9ZS5jbG9uZShuLGkuX3RpbHRDZW50ZXJNb3VzZVBvc2l0aW9uKSx0LmNsb25lKGEsaS5fdGlsdENlbnRlcil9dmFyIFM9ZC5jYW52YXMsVD1tdDtULng9Uy5jbGllbnRXaWR0aC8yLFQueT1pLl90aWx0Q2VudGVyTW91c2VQb3NpdGlvbi55LHM9Zy5nZXRQaWNrUmF5KFQsZnQpO3ZhciB4PXQuY2xvbmUodC5aRVJPLHl0KTt4Lng9YS54O3ZhciBBPXAuZnJvbVBvaW50Tm9ybWFsKHgseSxDdCksUD11LnJheVBsYW5lKHMsQSx2dCksTT1nLl9wcm9qZWN0aW9uO2M9TS5lbGxpcHNvaWQsdC5mcm9tRWxlbWVudHMoYS55LGEueixhLngsYSk7dmFyIEk9TS51bnByb2plY3QoYSxFdCk7Yy5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihJLGEpO3ZhciBELE89Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShhLGMsZ3QpO28oUCk/KHQuZnJvbUVsZW1lbnRzKFAueSxQLnosUC54LFApLEk9TS51bnByb2plY3QoUCxFdCksYy5jYXJ0b2dyYXBoaWNUb0NhcnRlc2lhbihJLFApLEQ9Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShQLGMsX3QpKTpEPU87dmFyIFI9aS5fZ2xvYmUsTD1pLl9lbGxpcHNvaWQ7aS5fZ2xvYmU9dm9pZCAwLGkuX2VsbGlwc29pZD1sLlVOSVRfU1BIRVJFLGkuX3JvdGF0ZUZhY3Rvcj0xLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9MTt2YXIgTj10LlVOSVRfWix6PWYuY2xvbmUoZy50cmFuc2Zvcm0sYnQpO2cuc2V0VHJhbnNmb3JtKE8pO3ZhciBCPXQuY3Jvc3ModC5VTklUX1osdC5ub3JtYWxpemUoZy5wb3NpdGlvbix3dCksd3QpLEY9dC5kb3QoZy5yaWdodCxCKTtpZihrKGksbixyLE4sITEsITApLGcuc2V0VHJhbnNmb3JtKEQpLDA+Ril7ci5zdGFydFBvc2l0aW9uLnk+ci5lbmRQb3NpdGlvbi55JiYoTj12b2lkIDApO3ZhciBWPWcuY29uc3RyYWluZWRBeGlzO2cuY29uc3RyYWluZWRBeGlzPXZvaWQgMCxrKGksbixyLE4sITAsITEpLGcuY29uc3RyYWluZWRBeGlzPVZ9ZWxzZSBrKGksbixyLE4sITAsITEpO2lmKG8oZy5jb25zdHJhaW5lZEF4aXMpKXt2YXIgVT10LmNyb3NzKGcuZGlyZWN0aW9uLGcuY29uc3RyYWluZWRBeGlzLEt0KTt0LmVxdWFsc0Vwc2lsb24oVSx0LlpFUk8saC5FUFNJTE9ONil8fCh0LmRvdChVLGcucmlnaHQpPDAmJnQubmVnYXRlKFUsVSksdC5jcm9zcyhVLGcuZGlyZWN0aW9uLGcudXApLHQuY3Jvc3MoZy5kaXJlY3Rpb24sZy51cCxnLnJpZ2h0KSx0Lm5vcm1hbGl6ZShnLnVwLGcudXApLHQubm9ybWFsaXplKGcucmlnaHQsZy5yaWdodCkpfWcuc2V0VHJhbnNmb3JtKHopLGkuX2dsb2JlPVIsaS5fZWxsaXBzb2lkPUw7dmFyIFc9TC5tYXhpbXVtUmFkaXVzO2kuX3JvdGF0ZUZhY3Rvcj0xL1csaS5fcm90YXRlUmF0ZVJhbmdlQWRqdXN0bWVudD1XO3ZhciBHPXQuY2xvbmUoZy5wb3NpdGlvbldDLHd0KTtpZihYKGkpLCF0LmVxdWFscyhnLnBvc2l0aW9uV0MsRykpe2cuc2V0VHJhbnNmb3JtKEQpLGcud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzUG9pbnQoRyxHKTt2YXIgSD10Lm1hZ25pdHVkZVNxdWFyZWQoRyk7dC5tYWduaXR1ZGVTcXVhcmVkKGcucG9zaXRpb24pPkgmJih0Lm5vcm1hbGl6ZShnLnBvc2l0aW9uLGcucG9zaXRpb24pLHQubXVsdGlwbHlCeVNjYWxhcihnLnBvc2l0aW9uLE1hdGguc3FydChIKSxnLnBvc2l0aW9uKSk7dmFyIHE9dC5hbmdsZUJldHdlZW4oRyxnLnBvc2l0aW9uKSxZPXQuY3Jvc3MoRyxnLnBvc2l0aW9uLEcpO3Qubm9ybWFsaXplKFksWSk7dmFyIFo9di5mcm9tQXhpc0FuZ2xlKFkscSxTdCksSj1tLmZyb21RdWF0ZXJuaW9uKFosVHQpO20ubXVsdGlwbHlCeVZlY3RvcihKLGcuZGlyZWN0aW9uLGcuZGlyZWN0aW9uKSxtLm11bHRpcGx5QnlWZWN0b3IoSixnLnVwLGcudXApLHQuY3Jvc3MoZy5kaXJlY3Rpb24sZy51cCxnLnJpZ2h0KSx0LmNyb3NzKGcucmlnaHQsZy5kaXJlY3Rpb24sZy51cCksZy5zZXRUcmFuc2Zvcm0oeil9fWZ1bmN0aW9uIEIoZSxpLG4pe28obi5kaXN0YW5jZSkmJihuPW4uZGlzdGFuY2UpO3ZhciByPWUuX3NjZW5lLGE9ci5jYW1lcmEscz1yLmNhbnZhcyxsPXh0O2wueD1zLmNsaWVudFdpZHRoLzIsbC55PXMuY2xpZW50SGVpZ2h0LzI7dmFyIHUsYz1hLmdldFBpY2tSYXkobCxBdCk7byhlLl9nbG9iZSkmJmEucG9zaXRpb24uejxlLm1pbmltdW1QaWNraW5nVGVycmFpbkhlaWdodCYmKHU9ZS5fZ2xvYmUucGljayhjLHIsUHQpKTt2YXIgZDtpZihvKHUpKWQ9dC5kaXN0YW5jZShjLm9yaWdpbix1KTtlbHNle3ZhciBoPXQuVU5JVF9YLG09Yy5vcmlnaW4sZj1jLmRpcmVjdGlvbjtkPS10LmRvdChoLG0pL3QuZG90KGgsZil9QShlLGksbixlLl96b29tRmFjdG9yLGQpfWZ1bmN0aW9uIEYoZSl7dmFyIHQ9ZS5fc2NlbmUsaT10LmNhbWVyYTtpZihmLmVxdWFscyhmLklERU5USVRZLGkudHJhbnNmb3JtKSl7dmFyIG49ZS5fdHdlZW5zO2lmKGUuX2FnZ3JlZ2F0b3IuYW55QnV0dG9uRG93biYmbi5yZW1vdmVBbGwoKSx4KGUsZS5lbmFibGVUaWx0LGUudGlsdEV2ZW50VHlwZXMsTCxlLmluZXJ0aWFTcGluLCJfbGFzdEluZXJ0aWFUaWx0TW92ZW1lbnQiKSx4KGUsZS5lbmFibGVUcmFuc2xhdGUsZS50cmFuc2xhdGVFdmVudFR5cGVzLFIsZS5pbmVydGlhVHJhbnNsYXRlLCJfbGFzdEluZXJ0aWFUcmFuc2xhdGVNb3ZlbWVudCIpLHgoZSxlLmVuYWJsZVpvb20sZS56b29tRXZlbnRUeXBlcyxCLGUuaW5lcnRpYVpvb20sIl9sYXN0SW5lcnRpYVpvb21Nb3ZlbWVudCIpLHgoZSxlLmVuYWJsZUxvb2ssZS5sb29rRXZlbnRUeXBlcyxqKSwhKGUuX2FnZ3JlZ2F0b3IuYW55QnV0dG9uRG93bnx8byhlLl9sYXN0SW5lcnRpYVpvb21Nb3ZlbWVudCkmJmUuX2xhc3RJbmVydGlhWm9vbU1vdmVtZW50LmFjdGl2ZXx8byhlLl9sYXN0SW5lcnRpYVRyYW5zbGF0ZU1vdmVtZW50KSYmZS5fbGFzdEluZXJ0aWFUcmFuc2xhdGVNb3ZlbWVudC5hY3RpdmV8fG4uY29udGFpbnMoZS5fdHdlZW4pKSl7dmFyIHI9aS5jcmVhdGVDb3JyZWN0UG9zaXRpb25Ud2VlbihlLmJvdW5jZUFuaW1hdGlvblRpbWUpO28ocikmJihlLl90d2Vlbj1uLmFkZChyKSl9bi51cGRhdGUoKX1lbHNlIHgoZSxlLmVuYWJsZVJvdGF0ZSxlLnJvdGF0ZUV2ZW50VHlwZXMsayxlLmluZXJ0aWFTcGluLCJfbGFzdEluZXJ0aWFTcGluTW92ZW1lbnQiKSx4KGUsZS5lbmFibGVab29tLGUuem9vbUV2ZW50VHlwZXMsVyxlLmluZXJ0aWFab29tLCJfbGFzdEluZXJ0aWFab29tTW92ZW1lbnQiKX1mdW5jdGlvbiBWKGksbixyKXt2YXIgYT1pLl9zY2VuZSxzPWEuY2FtZXJhO2lmKCFmLmVxdWFscyhzLnRyYW5zZm9ybSxmLklERU5USVRZKSlyZXR1cm4gayhpLG4sciksdm9pZCAwO3ZhciB1LGMsZCxoPWkuX2VsbGlwc29pZC5nZW9kZXRpY1N1cmZhY2VOb3JtYWwocy5wb3NpdGlvbixOdCk7aWYoZS5lcXVhbHMobixpLl9yb3RhdGVNb3VzZVBvc2l0aW9uKSlyZXR1cm4gaS5fbG9va2luZz9qKGksbixyLGgpOmkuX3JvdGF0aW5nP2soaSxuLHIpOih1PXQubWFnbml0dWRlKGkuX3JvdGF0ZVN0YXJ0UG9zaXRpb24pLGM9UnQsYy54PWMueT1jLno9dSxkPWwuZnJvbUNhcnRlc2lhbjMoYyxMdCksVShpLG4scixkKSksdm9pZCAwO2kuX2xvb2tpbmc9ITEsaS5fcm90YXRpbmc9ITE7dmFyIG09aS5fZWxsaXBzb2lkLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHMucG9zaXRpb25XQyxEdCkuaGVpZ2h0O2lmKG8oaS5fZ2xvYmUpJiZtPGkubWluaW11bVBpY2tpbmdUZXJyYWluSGVpZ2h0KXt2YXIgcD1zLmdldFBpY2tSYXkoci5zdGFydFBvc2l0aW9uLEl0KSx2PWkuX2dsb2JlLnBpY2socCxhLE90KTtvKHYpPyh1PXQubWFnbml0dWRlKHYpLGM9UnQsYy54PWMueT1jLno9dSxkPWwuZnJvbUNhcnRlc2lhbjMoYyxMdCksVShpLG4scixkKSx0LmNsb25lKHYsaS5fcm90YXRlU3RhcnRQb3NpdGlvbikpOihpLl9sb29raW5nPSEwLGooaSxuLHIsaCkpfWVsc2UgbyhzLnBpY2tFbGxpcHNvaWQoci5zdGFydFBvc2l0aW9uLGkuX2VsbGlwc29pZCxNdCkpPyhVKGksbixyLGkuX2VsbGlwc29pZCksdC5jbG9uZShNdCxpLl9yb3RhdGVTdGFydFBvc2l0aW9uKSk6bT5pLm1pbmltdW1UcmFja0JhbGxIZWlnaHQ/KGkuX3JvdGF0aW5nPSEwLGsoaSxuLHIpKTooaS5fbG9va2luZz0hMCxqKGksbixyLGgpKTtlLmNsb25lKG4saS5fcm90YXRlTW91c2VQb3NpdGlvbil9ZnVuY3Rpb24gayhlLGksbixhLHMsbCl7cz1yKHMsITEpLGw9cihsLCExKTt2YXIgdT1lLl9zY2VuZSxjPXUuY2FtZXJhLGQ9dS5jYW52YXMsaD1jLmNvbnN0cmFpbmVkQXhpcztvKGEpJiYoYy5jb25zdHJhaW5lZEF4aXM9YSk7dmFyIG09dC5tYWduaXR1ZGUoYy5wb3NpdGlvbiksZj1lLl9yb3RhdGVGYWN0b3IqKG0tZS5fcm90YXRlUmF0ZVJhbmdlQWRqdXN0bWVudCk7Zj5lLl9tYXhpbXVtUm90YXRlUmF0ZSYmKGY9ZS5fbWF4aW11bVJvdGF0ZVJhdGUpLGY8ZS5fbWluaW11bVJvdGF0ZVJhdGUmJihmPWUuX21pbmltdW1Sb3RhdGVSYXRlKTt2YXIgcD0obi5zdGFydFBvc2l0aW9uLngtbi5lbmRQb3NpdGlvbi54KS9kLmNsaWVudFdpZHRoLHY9KG4uc3RhcnRQb3NpdGlvbi55LW4uZW5kUG9zaXRpb24ueSkvZC5jbGllbnRIZWlnaHQ7cD1NYXRoLm1pbihwLGUubWF4aW11bU1vdmVtZW50UmF0aW8pLHY9TWF0aC5taW4odixlLm1heGltdW1Nb3ZlbWVudFJhdGlvKTt2YXIgZz0yKmYqcCpNYXRoLlBJLF89Zip2Kk1hdGguUEk7c3x8Yy5yb3RhdGVSaWdodChnKSxsfHxjLnJvdGF0ZVVwKF8pLGMuY29uc3RyYWluZWRBeGlzPWh9ZnVuY3Rpb24gVShpLG4scixhKXt2YXIgcz1pLl9zY2VuZSx1PXMuY2FtZXJhLGM9dC5tYWduaXR1ZGUodS5wb3NpdGlvbiksZD1lLmNsb25lKHIuc3RhcnRQb3NpdGlvbixXdCksbT1lLmNsb25lKHIuZW5kUG9zaXRpb24sR3QpO2lmKGM8YS5tYXhpbXVtUmFkaXVzKXtkLnk9bS55LG0ueT1yLnN0YXJ0UG9zaXRpb24ueTt2YXIgZj1jKzIqKGEubWF4aW11bVJhZGl1cy1jKSxwPVJ0O3AueD1wLnk9cC56PWYsYT1sLmZyb21DYXJ0ZXNpYW4zKHAsYSl9dmFyIHY9dS5waWNrRWxsaXBzb2lkKGQsYSx6dCksZz11LnBpY2tFbGxpcHNvaWQobSxhLEJ0KTtpZighbyh2KXx8IW8oZykpcmV0dXJuIGkuX3JvdGF0aW5nPSEwLGsoaSxuLHIpLHZvaWQgMDtpZih2PXUud29ybGRUb0NhbWVyYUNvb3JkaW5hdGVzKHYsdiksZz11LndvcmxkVG9DYW1lcmFDb29yZGluYXRlcyhnLGcpLG8odS5jb25zdHJhaW5lZEF4aXMpKXt2YXIgXz11LmNvbnN0cmFpbmVkQXhpcyx5PXQubW9zdE9ydGhvZ29uYWxBeGlzKF8sRnQpO3QuY3Jvc3MoeSxfLHkpLHQubm9ybWFsaXplKHkseSk7dmFyIEM9dC5jcm9zcyhfLHksVnQpLHc9dC5tYWduaXR1ZGUodiksRT10LmRvdChfLHYpLGI9TWF0aC5hY29zKEUvdyksUz10Lm11bHRpcGx5QnlTY2FsYXIoXyxFLGt0KTt0LnN1YnRyYWN0KHYsUyxTKSx0Lm5vcm1hbGl6ZShTLFMpO3ZhciBUPXQubWFnbml0dWRlKGcpLHg9dC5kb3QoXyxnKSxBPU1hdGguYWNvcyh4L1QpLFA9dC5tdWx0aXBseUJ5U2NhbGFyKF8seCxVdCk7dC5zdWJ0cmFjdChnLFAsUCksdC5ub3JtYWxpemUoUCxQKTt2YXIgTT1NYXRoLmFjb3ModC5kb3QoUyx5KSk7dC5kb3QoUyxDKTwwJiYoTT1oLlRXT19QSS1NKTt2YXIgST1NYXRoLmFjb3ModC5kb3QoUCx5KSk7dC5kb3QoUCxDKTwwJiYoST1oLlRXT19QSS1JKTt2YXIgRCxPPU0tSTtEPXQuZXF1YWxzRXBzaWxvbihfLHUucG9zaXRpb24saC5FUFNJTE9OMik/dS5yaWdodDp0LmNyb3NzKF8sdS5wb3NpdGlvbixGdCk7dmFyIFIsTD10LmNyb3NzKF8sRCxGdCksTj10LmRvdChMLHQuc3VidHJhY3QodixfLFZ0KSksej10LmRvdChMLHQuc3VidHJhY3QoZyxfLFZ0KSk7Uj1OPjAmJno+MD9BLWI6Tj4wJiYwPj16P3QuZG90KHUucG9zaXRpb24sXyk+MD8tYi1BOmIrQTpiLUEsdS5yb3RhdGVSaWdodChPKSx1LnJvdGF0ZVVwKFIpfWVsc2V7dC5ub3JtYWxpemUodix2KSx0Lm5vcm1hbGl6ZShnLGcpO3ZhciBCPXQuZG90KHYsZyksRj10LmNyb3NzKHYsZyxGdCk7aWYoMT5CJiYhdC5lcXVhbHNFcHNpbG9uKEYsdC5aRVJPLGguRVBTSUxPTjE0KSl7dmFyIFY9TWF0aC5hY29zKEIpO3Uucm90YXRlKEYsVil9fX1mdW5jdGlvbiBXKGUsaSxuKXtvKG4uZGlzdGFuY2UpJiYobj1uLmRpc3RhbmNlKTt2YXIgcj1lLl9lbGxpcHNvaWQsYT1lLl9zY2VuZSxzPWEuY2FtZXJhLGw9YS5jYW52YXMsdT14dDt1Lng9bC5jbGllbnRXaWR0aC8yLHUueT1sLmNsaWVudEhlaWdodC8yO3ZhciBjLGQ9cy5nZXRQaWNrUmF5KHUsQXQpLGg9ci5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhzLnBvc2l0aW9uKS5oZWlnaHQ7byhlLl9nbG9iZSkmJmg8ZS5taW5pbXVtUGlja2luZ1RlcnJhaW5IZWlnaHQmJihjPWUuX2dsb2JlLnBpY2soZCxhLFB0KSk7dmFyIG07bT1vKGMpP3QuZGlzdGFuY2UoZC5vcmlnaW4sYyk6aDt2YXIgZj10Lm5vcm1hbGl6ZShzLnBvc2l0aW9uLEh0KTtBKGUsaSxuLGUuX3pvb21GYWN0b3IsbSx0LmRvdChmLHMuZGlyZWN0aW9uKSl9ZnVuY3Rpb24gRyh0LGksbil7dmFyIHI9dC5fc2NlbmUsYT1yLmNhbWVyYTtpZihmLmVxdWFscyhhLnRyYW5zZm9ybSxmLklERU5USVRZKSl7aWYobyhuLmFuZ2xlQW5kSGVpZ2h0KSYmKG49bi5hbmdsZUFuZEhlaWdodCksZS5lcXVhbHMoaSx0Ll90aWx0Q2VudGVyTW91c2VQb3NpdGlvbil8fCh0Ll90aWx0T25FbGxpcHNvaWQ9ITEsdC5fbG9va2luZz0hMSksdC5fbG9va2luZyl7dmFyIHM9dC5fZWxsaXBzb2lkLmdlb2RldGljU3VyZmFjZU5vcm1hbChhLnBvc2l0aW9uLGlpKTtyZXR1cm4gaih0LGksbixzKSx2b2lkIDB9dmFyIGw9dC5fZWxsaXBzb2lkLHU9bC5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhhLnBvc2l0aW9uLHRpKTt0Ll90aWx0T25FbGxpcHNvaWR8fHUuaGVpZ2h0PnQubWluaW11bUNvbGxpc2lvblRlcnJhaW5IZWlnaHQ/KHQuX3RpbHRPbkVsbGlwc29pZD0hMCxIKHQsaSxuKSk6cSh0LGksbil9fWZ1bmN0aW9uIEgoaSxuLHIpe3ZhciBhPWkuX2VsbGlwc29pZCxzPWkuX3NjZW5lLGM9cy5jYW1lcmEsZD0uMjUqaS5taW5pbXVtWm9vbURpc3RhbmNlLG09YS5jYXJ0ZXNpYW5Ub0NhcnRvZ3JhcGhpYyhjLnBvc2l0aW9uV0MpLmhlaWdodDtpZighKG0tZC0xPGguRVBTSUxPTjMmJnIuZW5kUG9zaXRpb24ueS1yLnN0YXJ0UG9zaXRpb24ueTwwKSl7dmFyIHA9cy5jYW52YXMsdj1xdDt2Lng9cC5jbGllbnRXaWR0aC8yLHYueT1wLmNsaWVudEhlaWdodC8yO3ZhciB5LEM9Yy5nZXRQaWNrUmF5KHYsanQpLHc9dS5yYXlFbGxpcHNvaWQoQyxhKTtpZihvKHcpKXk9Zy5nZXRQb2ludChDLHcuc3RhcnQsWXQpO2Vsc2V7aWYoIShtPmkubWluaW11bVRyYWNrQmFsbEhlaWdodCkpe2kuX2xvb2tpbmc9ITA7dmFyIEU9aS5fZWxsaXBzb2lkLmdlb2RldGljU3VyZmFjZU5vcm1hbChjLnBvc2l0aW9uLGlpKTtyZXR1cm4gaihpLG4scixFKSxlLmNsb25lKG4saS5fdGlsdENlbnRlck1vdXNlUG9zaXRpb24pLHZvaWQgMH12YXIgYj11LmdyYXppbmdBbHRpdHVkZUxvY2F0aW9uKEMsYSk7aWYoIW8oYikpcmV0dXJuO3ZhciBTPWEuY2FydGVzaWFuVG9DYXJ0b2dyYXBoaWMoYix0aSk7Uy5oZWlnaHQ9MCx5PWEuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4oUyxZdCl9dmFyIFQ9Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZSh5LGEsWnQpLHg9aS5fZ2xvYmUsQT1pLl9lbGxpcHNvaWQ7aS5fZ2xvYmU9dm9pZCAwLGkuX2VsbGlwc29pZD1sLlVOSVRfU1BIRVJFLGkuX3JvdGF0ZUZhY3Rvcj0xLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9MTt2YXIgUD1mLmNsb25lKGMudHJhbnNmb3JtLFF0KTtjLnNldFRyYW5zZm9ybShUKSxrKGksbixyLHQuVU5JVF9aKSxjLnNldFRyYW5zZm9ybShQKSxpLl9nbG9iZT14LGkuX2VsbGlwc29pZD1BO3ZhciBNPUEubWF4aW11bVJhZGl1cztpLl9yb3RhdGVGYWN0b3I9MS9NLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9TX19ZnVuY3Rpb24gcShpLG4scil7dmFyIGEscyxjLGQ9aS5fZWxsaXBzb2lkLHA9aS5fc2NlbmUseT1wLmNhbWVyYTtpZihlLmVxdWFscyhuLGkuX3RpbHRDZW50ZXJNb3VzZVBvc2l0aW9uKSlhPXQuY2xvbmUoaS5fdGlsdENlbnRlcixZdCk7ZWxzZXtpZihzPXkuZ2V0UGlja1JheShuLGp0KSxvKGkuX2dsb2JlKSYmKGE9aS5fZ2xvYmUucGljayhzLHAsWXQpKSwhbyhhKSl7aWYoYz11LnJheUVsbGlwc29pZChzLGQpLCFvKGMpKXt2YXIgQz1kLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHkucG9zaXRpb24sdGkpO2lmKEMuaGVpZ2h0PD1pLm1pbmltdW1UcmFja0JhbGxIZWlnaHQpe2kuX2xvb2tpbmc9ITA7dmFyIHc9aS5fZWxsaXBzb2lkLmdlb2RldGljU3VyZmFjZU5vcm1hbCh5LnBvc2l0aW9uLGlpKTtqKGksbixyLHcpLGUuY2xvbmUobixpLl90aWx0Q2VudGVyTW91c2VQb3NpdGlvbil9cmV0dXJufWE9Zy5nZXRQb2ludChzLGMuc3RhcnQsWXQpfWUuY2xvbmUobixpLl90aWx0Q2VudGVyTW91c2VQb3NpdGlvbiksdC5jbG9uZShhLGkuX3RpbHRDZW50ZXIpfXZhciBFPXAuY2FudmFzLGI9cXQ7Yi54PUUuY2xpZW50V2lkdGgvMixiLnk9aS5fdGlsdENlbnRlck1vdXNlUG9zaXRpb24ueSxzPXkuZ2V0UGlja1JheShiLGp0KTt2YXIgUz10Lm1hZ25pdHVkZShhKSxUPXQuZnJvbUVsZW1lbnRzKFMsUyxTLFJ0KSx4PWwuZnJvbUNhcnRlc2lhbjMoVCxMdCk7aWYoYz11LnJheUVsbGlwc29pZChzLHgpLG8oYykpe3ZhciBBPXQubWFnbml0dWRlKHMub3JpZ2luKT5TP2Muc3RhcnQ6Yy5zdG9wLFA9Zy5nZXRQb2ludChzLEEsWHQpLE09Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShhLGQsWnQpLEk9Xy5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShQLHgsSnQpLEQ9aS5fZ2xvYmUsTz1pLl9lbGxpcHNvaWQ7aS5fZ2xvYmU9dm9pZCAwLGkuX2VsbGlwc29pZD1sLlVOSVRfU1BIRVJFLGkuX3JvdGF0ZUZhY3Rvcj0xLGkuX3JvdGF0ZVJhdGVSYW5nZUFkanVzdG1lbnQ9MTt2YXIgUj10LlVOSVRfWixMPWYuY2xvbmUoeS50cmFuc2Zvcm0sUXQpO3kuc2V0VHJhbnNmb3JtKE0pO3ZhciBOPXQuY3Jvc3MoUCx5LnBvc2l0aW9uV0MsS3QpLHo9dC5kb3QoeS5yaWdodFdDLE4pO2lmKGsoaSxuLHIsUiwhMSwhMCkseS5zZXRUcmFuc2Zvcm0oSSksMD56KXtyLnN0YXJ0UG9zaXRpb24ueT5yLmVuZFBvc2l0aW9uLnkmJihSPXZvaWQgMCk7dmFyIEI9eS5jb25zdHJhaW5lZEF4aXM7eS5jb25zdHJhaW5lZEF4aXM9dm9pZCAwLGsoaSxuLHIsUiwhMCwhMSkseS5jb25zdHJhaW5lZEF4aXM9Qn1lbHNlIGsoaSxuLHIsUiwhMCwhMSk7aWYobyh5LmNvbnN0cmFpbmVkQXhpcykpe3ZhciBGPXQuY3Jvc3MoeS5kaXJlY3Rpb24seS5jb25zdHJhaW5lZEF4aXMsS3QpO3QuZXF1YWxzRXBzaWxvbihGLHQuWkVSTyxoLkVQU0lMT042KXx8KHQuZG90KEYseS5yaWdodCk8MCYmdC5uZWdhdGUoRixGKSx0LmNyb3NzKEYseS5kaXJlY3Rpb24seS51cCksdC5jcm9zcyh5LmRpcmVjdGlvbix5LnVwLHkucmlnaHQpLHQubm9ybWFsaXplKHkudXAseS51cCksdC5ub3JtYWxpemUoeS5yaWdodCx5LnJpZ2h0KSl9eS5zZXRUcmFuc2Zvcm0oTCksaS5fZ2xvYmU9RCxpLl9lbGxpcHNvaWQ9Tzt2YXIgVj1PLm1heGltdW1SYWRpdXM7aS5fcm90YXRlRmFjdG9yPTEvVixpLl9yb3RhdGVSYXRlUmFuZ2VBZGp1c3RtZW50PVY7dmFyIFU9dC5jbG9uZSh5LnBvc2l0aW9uV0MsS3QpO2lmKFgoaSksIXQuZXF1YWxzKHkucG9zaXRpb25XQyxVKSl7eS5zZXRUcmFuc2Zvcm0oSSkseS53b3JsZFRvQ2FtZXJhQ29vcmRpbmF0ZXNQb2ludChVLFUpO3ZhciBXPXQubWFnbml0dWRlU3F1YXJlZChVKTt0Lm1hZ25pdHVkZVNxdWFyZWQoeS5wb3NpdGlvbik+VyYmKHQubm9ybWFsaXplKHkucG9zaXRpb24seS5wb3NpdGlvbiksdC5tdWx0aXBseUJ5U2NhbGFyKHkucG9zaXRpb24sTWF0aC5zcXJ0KFcpLHkucG9zaXRpb24pKTt2YXIgRz10LmFuZ2xlQmV0d2VlbihVLHkucG9zaXRpb24pLEg9dC5jcm9zcyhVLHkucG9zaXRpb24sVSk7dC5ub3JtYWxpemUoSCxIKTt2YXIgcT12LmZyb21BeGlzQW5nbGUoSCxHLCR0KSxZPW0uZnJvbVF1YXRlcm5pb24ocSxlaSk7bS5tdWx0aXBseUJ5VmVjdG9yKFkseS5kaXJlY3Rpb24seS5kaXJlY3Rpb24pLG0ubXVsdGlwbHlCeVZlY3RvcihZLHkudXAseS51cCksdC5jcm9zcyh5LmRpcmVjdGlvbix5LnVwLHkucmlnaHQpLHQuY3Jvc3MoeS5yaWdodCx5LmRpcmVjdGlvbix5LnVwKSx5LnNldFRyYW5zZm9ybShMKX19fWZ1bmN0aW9uIGooZSxpLG4sYSl7dmFyIHM9ZS5fc2NlbmUsbD1zLmNhbWVyYSx1PW5pO3UueD1uLnN0YXJ0UG9zaXRpb24ueCx1Lnk9MDt2YXIgYz1yaTtjLng9bi5lbmRQb3NpdGlvbi54LGMueT0wO3ZhciBkPWwuZ2V0UGlja1JheSh1LG9pKS5kaXJlY3Rpb24sbT1sLmdldFBpY2tSYXkoYyxhaSkuZGlyZWN0aW9uLGY9MCxwPXQuZG90KGQsbSk7MT5wJiYoZj1NYXRoLmFjb3MocCkpLGY9bi5zdGFydFBvc2l0aW9uLng+bi5lbmRQb3NpdGlvbi54Py1mOmY7dmFyIHY9ZS5faG9yaXpvbnRhbFJvdGF0aW9uQXhpcztpZihvKGEpP2wubG9vayhhLC1mKTpvKHYpP2wubG9vayh2LC1mKTpsLmxvb2tMZWZ0KGYpLHUueD0wLHUueT1uLnN0YXJ0UG9zaXRpb24ueSxjLng9MCxjLnk9bi5lbmRQb3NpdGlvbi55LGQ9bC5nZXRQaWNrUmF5KHUsb2kpLmRpcmVjdGlvbixtPWwuZ2V0UGlja1JheShjLGFpKS5kaXJlY3Rpb24sZj0wLHA9dC5kb3QoZCxtKSwxPnAmJihmPU1hdGguYWNvcyhwKSksZj1uLnN0YXJ0UG9zaXRpb24ueT5uLmVuZFBvc2l0aW9uLnk/LWY6ZixhPXIoYSx2KSxvKGEpKXt2YXIgZz1sLmRpcmVjdGlvbixfPXQubmVnYXRlKGEsc2kpLHk9dC5lcXVhbHNFcHNpbG9uKGcsYSxoLkVQU0lMT04yKSxDPXQuZXF1YWxzRXBzaWxvbihnLF8saC5FUFNJTE9OMik7aWYoeXx8QykoeSYmMD5mfHxDJiZmPjApJiZsLmxvb2sobC5yaWdodCwtZik7ZWxzZXtwPXQuZG90KGcsYSk7dmFyIHc9aC5hY29zQ2xhbXBlZChwKTtmPjAmJmY+dyYmKGY9dy1oLkVQU0lMT040KSxwPXQuZG90KGcsXyksdz1oLmFjb3NDbGFtcGVkKHApLDA+ZiYmLWY+dyYmKGY9LXcraC5FUFNJTE9ONCk7dmFyIEU9dC5jcm9zcyhhLGcsbGkpO2wubG9vayhFLGYpfX1lbHNlIGwubG9va1VwKGYpfWZ1bmN0aW9uIFkoZSl7eChlLGUuZW5hYmxlUm90YXRlLGUucm90YXRlRXZlbnRUeXBlcyxWLGUuaW5lcnRpYVNwaW4sIl9sYXN0SW5lcnRpYVNwaW5Nb3ZlbWVudCIpLHgoZSxlLmVuYWJsZVpvb20sZS56b29tRXZlbnRUeXBlcyxXLGUuaW5lcnRpYVpvb20sIl9sYXN0SW5lcnRpYVpvb21Nb3ZlbWVudCIpLHgoZSxlLmVuYWJsZVRpbHQsZS50aWx0RXZlbnRUeXBlcyxHLGUuaW5lcnRpYVNwaW4sIl9sYXN0SW5lcnRpYVRpbHRNb3ZlbWVudCIpLHgoZSxlLmVuYWJsZUxvb2ssZS5sb29rRXZlbnRUeXBlcyxqKX1mdW5jdGlvbiBYKGUpe3ZhciB0PWUuX3NjZW5lLGk9dC5tb2RlLG49ZS5fZ2xvYmU7aWYobyhuKSYmaSE9PXcuU0NFTkUyRCYmaSE9PXcuTU9SUEhJTkcpe3ZhciByPXQuY2FtZXJhLGE9ZS5fZWxsaXBzb2lkLHM9dC5tYXBQcm9qZWN0aW9uLGw9dWk7aWYoaT09PXcuU0NFTkUzRD9hLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKHIucG9zaXRpb24sbCk6cy51bnByb2plY3Qoci5wb3NpdGlvbixsKSwhKGwuaGVpZ2h0PmUubWluaW11bUNvbGxpc2lvblRlcnJhaW5IZWlnaHQpKXt2YXIgdT1uLmdldEhlaWdodChsKTtvKHUpJiYodSs9ZS5taW5pbXVtWm9vbURpc3RhbmNlLGwuaGVpZ2h0Pj11fHwobC5oZWlnaHQ9dSxpPT09dy5TQ0VORTNEP2EuY2FydG9ncmFwaGljVG9DYXJ0ZXNpYW4obCxyLnBvc2l0aW9uKTpzLnByb2plY3QobCxyLnBvc2l0aW9uKSkpfX19dmFyIFo9ZnVuY3Rpb24oaSl7dGhpcy5lbmFibGVJbnB1dHM9ITAsdGhpcy5lbmFibGVUcmFuc2xhdGU9ITAsdGhpcy5lbmFibGVab29tPSEwLHRoaXMuZW5hYmxlUm90YXRlPSEwLHRoaXMuZW5hYmxlVGlsdD0hMCx0aGlzLmVuYWJsZUxvb2s9ITAsdGhpcy5pbmVydGlhU3Bpbj0uOSx0aGlzLmluZXJ0aWFUcmFuc2xhdGU9LjksdGhpcy5pbmVydGlhWm9vbT0uOCx0aGlzLm1heGltdW1Nb3ZlbWVudFJhdGlvPS4xLHRoaXMuYm91bmNlQW5pbWF0aW9uVGltZT0zLHRoaXMubWluaW11bVpvb21EaXN0YW5jZT0yMCx0aGlzLm1heGltdW1ab29tRGlzdGFuY2U9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLHRoaXMudHJhbnNsYXRlRXZlbnRUeXBlcz1DLkxFRlRfRFJBRyx0aGlzLnpvb21FdmVudFR5cGVzPVtDLlJJR0hUX0RSQUcsQy5XSEVFTCxDLlBJTkNIXSx0aGlzLnJvdGF0ZUV2ZW50VHlwZXM9Qy5MRUZUX0RSQUcsdGhpcy50aWx0RXZlbnRUeXBlcz1bQy5NSURETEVfRFJBRyxDLlBJTkNILHtldmVudFR5cGU6Qy5MRUZUX0RSQUcsbW9kaWZpZXI6ZC5DVFJMfV0sdGhpcy5sb29rRXZlbnRUeXBlcz17ZXZlbnRUeXBlOkMuTEVGVF9EUkFHLG1vZGlmaWVyOmQuU0hJRlR9LHRoaXMubWluaW11bVBpY2tpbmdUZXJyYWluSGVpZ2h0PTE1ZTQsdGhpcy5taW5pbXVtQ29sbGlzaW9uVGVycmFpbkhlaWdodD0xZTQsdGhpcy5taW5pbXVtVHJhY2tCYWxsSGVpZ2h0PTc1ZTUsdGhpcy5fc2NlbmU9aSx0aGlzLl9nbG9iZT12b2lkIDAsdGhpcy5fZWxsaXBzb2lkPXZvaWQgMCx0aGlzLl9hZ2dyZWdhdG9yPW5ldyB5KGkuY2FudmFzKSx0aGlzLl9sYXN0SW5lcnRpYVNwaW5Nb3ZlbWVudD12b2lkIDAsdGhpcy5fbGFzdEluZXJ0aWFab29tTW92ZW1lbnQ9dm9pZCAwLHRoaXMuX2xhc3RJbmVydGlhVHJhbnNsYXRlTW92ZW1lbnQ9dm9pZCAwLHRoaXMuX2xhc3RJbmVydGlhV2hlZWxab29tTW92ZW1lbnQ9dm9pZCAwLHRoaXMuX2xhc3RJbmVydGlhVGlsdE1vdmVtZW50PXZvaWQgMCx0aGlzLl90d2VlbnM9bmV3IEUsdGhpcy5fdHdlZW49dm9pZCAwLHRoaXMuX2hvcml6b250YWxSb3RhdGlvbkF4aXM9dm9pZCAwLHRoaXMuX3RpbHRDZW50ZXJNb3VzZVBvc2l0aW9uPW5ldyBlKC0xLC0xKSx0aGlzLl90aWx0Q2VudGVyPW5ldyB0LHRoaXMuX3JvdGF0ZU1vdXNlUG9zaXRpb249bmV3IGUoLTEsLTEpLHRoaXMuX3JvdGF0ZVN0YXJ0UG9zaXRpb249bmV3IHQsdGhpcy5fdGlsdENWT2ZmTWFwPSExLHRoaXMuX2xvb2tpbmc9ITEsdGhpcy5fcm90YXRpbmc9ITE7dmFyIHI9aS5tYXBQcm9qZWN0aW9uO3RoaXMuX21heENvb3JkPXIucHJvamVjdChuZXcgbihNYXRoLlBJLGguUElfT1ZFUl9UV08pKSx0aGlzLl96b29tRmFjdG9yPTUsdGhpcy5fcm90YXRlRmFjdG9yPXZvaWQgMCx0aGlzLl9yb3RhdGVSYXRlUmFuZ2VBZGp1c3RtZW50PXZvaWQgMCx0aGlzLl9tYXhpbXVtUm90YXRlUmF0ZT0xLjc3LHRoaXMuX21pbmltdW1Sb3RhdGVSYXRlPTJlLTQsdGhpcy5fdHJhbnNsYXRlRmFjdG9yPTEsdGhpcy5fbWluaW11bVpvb21SYXRlPTIwLHRoaXMuX21heGltdW1ab29tUmF0ZT01OTA2Mzc2MjcyZTN9LEo9LjQsSz1bXSxRPW5ldyBnLCQ9bmV3IGcsZXQ9bmV3IHQsdHQ9bmV3IHQsaXQ9bmV3IGUsbnQ9bmV3IGUscnQ9bmV3IGcsb3Q9bmV3IGcsYXQ9bmV3IHQsc3Q9bmV3IHQsbHQ9bmV3IHQsdXQ9bmV3IHQsY3Q9bmV3IHAodC5aRVJPLDApLGR0PW5ldyBlLGh0PW5ldyBlLG10PW5ldyBlLGZ0PW5ldyBnLHB0PW5ldyB0LHZ0PW5ldyB0LGd0PW5ldyBmLF90PW5ldyBmLHl0PW5ldyB0LEN0PW5ldyBwKHQuWkVSTywwKSx3dD1uZXcgdCxFdD1uZXcgbixidD1uZXcgZixTdD1uZXcgdixUdD1uZXcgbSx4dD1uZXcgZSxBdD1uZXcgZyxQdD1uZXcgdCxNdD1uZXcgdCxJdD1uZXcgZyxEdD1uZXcgbixPdD1uZXcgdCxSdD1uZXcgdCxMdD1uZXcgbCxOdD1uZXcgdCx6dD1pLmNsb25lKGkuVU5JVF9XKSxCdD1pLmNsb25lKGkuVU5JVF9XKSxGdD1uZXcgdCxWdD1uZXcgdCxrdD1uZXcgdCxVdD1uZXcgdCxXdD1uZXcgZSxHdD1uZXcgZSxIdD1uZXcgdCxxdD1uZXcgZSxqdD1uZXcgZyxZdD1uZXcgdCxYdD1uZXcgdCxadD1uZXcgZixKdD1uZXcgZixLdD1uZXcgdCxRdD1uZXcgZiwkdD1uZXcgdixlaT1uZXcgbSx0aT1uZXcgbixpaT1uZXcgdCxuaT1uZXcgZSxyaT1uZXcgZSxvaT1uZXcgZyxhaT1uZXcgZyxzaT1uZXcgdCxsaT1uZXcgdCx1aT1uZXcgbjtyZXR1cm4gWi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7Zi5lcXVhbHModGhpcy5fc2NlbmUuY2FtZXJhLnRyYW5zZm9ybSxmLklERU5USVRZKT8odGhpcy5fZ2xvYmU9dGhpcy5fc2NlbmUuZ2xvYmUsdGhpcy5fZWxsaXBzb2lkPW8odGhpcy5fZ2xvYmUpP3RoaXMuX2dsb2JlLmVsbGlwc29pZDp0aGlzLl9zY2VuZS5tYXBQcm9qZWN0aW9uLmVsbGlwc29pZCk6KHRoaXMuX2dsb2JlPXZvaWQgMCx0aGlzLl9lbGxpcHNvaWQ9bC5VTklUX1NQSEVSRSk7dmFyIGU9dGhpcy5fZWxsaXBzb2lkLm1heGltdW1SYWRpdXM7dGhpcy5fcm90YXRlRmFjdG9yPTEvZSx0aGlzLl9yb3RhdGVSYXRlUmFuZ2VBZGp1c3RtZW50PWU7dmFyIGk9dGhpcy5fc2NlbmUsbj1pLm1vZGU7bj09PXcuU0NFTkUyRD9PKHRoaXMpOm49PT13LkNPTFVNQlVTX1ZJRVc/KHRoaXMuX2hvcml6b250YWxSb3RhdGlvbkF4aXM9dC5VTklUX1osRih0aGlzKSk6bj09PXcuU0NFTkUzRCYmKHRoaXMuX2hvcml6b250YWxSb3RhdGlvbkF4aXM9dm9pZCAwLFkodGhpcykpLFgodGhpcyksdGhpcy5fYWdncmVnYXRvci5yZXNldCgpfSxaLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxaLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R3ZWVucy5yZW1vdmVBbGwoKSx0aGlzLl9zcGluSGFuZGxlcj10aGlzLl9zcGluSGFuZGxlciYmdGhpcy5fc3BpbkhhbmRsZXIuZGVzdHJveSgpLHRoaXMuX3RyYW5zbGF0ZUhhbmRsZXI9dGhpcy5fdHJhbnNsYXRlSGFuZGxlciYmdGhpcy5fdHJhbnNsYXRlSGFuZGxlci5kZXN0cm95KCksdGhpcy5fbG9va0hhbmRsZXI9dGhpcy5fbG9va0hhbmRsZXImJnRoaXMuX2xvb2tIYW5kbGVyLmRlc3Ryb3koKSx0aGlzLl9yb3RhdGVIYW5kbGVyPXRoaXMuX3JvdGF0ZUhhbmRsZXImJnRoaXMuX3JvdGF0ZUhhbmRsZXIuZGVzdHJveSgpLHRoaXMuX3pvb21IYW5kbGVyPXRoaXMuX3pvb21IYW5kbGVyJiZ0aGlzLl96b29tSGFuZGxlci5kZXN0cm95KCksdGhpcy5fem9vbVdoZWVsSGFuZGxlcj10aGlzLl96b29tV2hlZWxIYW5kbGVyJiZ0aGlzLl96b29tV2hlZWxIYW5kbGVyLmRlc3Ryb3koKSx0aGlzLl9waW5jaEhhbmRsZXI9dGhpcy5fcGluY2hIYW5kbGVyJiZ0aGlzLl9waW5jaEhhbmRsZXIuZGVzdHJveSgpLGEodGhpcyl9LFp9KSxkZWZpbmUoIlNoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL0FkZGl0aXZlQmxlbmQiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ1bmlmb3JtIHNhbXBsZXIyRCB1X3RleHR1cmUwO1xudW5pZm9ybSBzYW1wbGVyMkQgdV90ZXh0dXJlMTtcblxudW5pZm9ybSB2ZWMyIHVfY2VudGVyO1xudW5pZm9ybSBmbG9hdCB1X3JhZGl1cztcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG52b2lkIG1haW4oKVxue1xuICAgIHZlYzQgY29sb3IwID0gdGV4dHVyZTJEKHVfdGV4dHVyZTAsIHZfdGV4dHVyZUNvb3JkaW5hdGVzKTtcbiAgICB2ZWM0IGNvbG9yMSA9IHRleHR1cmUyRCh1X3RleHR1cmUxLCB2X3RleHR1cmVDb29yZGluYXRlcyk7XG4gICAgXG4gICAgZmxvYXQgeCA9IGxlbmd0aChnbF9GcmFnQ29vcmQueHkgLSB1X2NlbnRlcikgLyB1X3JhZGl1cztcbiAgICBmbG9hdCB0ID0gc21vb3Roc3RlcCgwLjUsIDAuOCwgeCk7XG4gICAgZ2xfRnJhZ0NvbG9yID0gbWl4KGNvbG9yMCArIGNvbG9yMSwgY29sb3IwLCB0KTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL0JyaWdodFBhc3MiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybid1bmlmb3JtIHNhbXBsZXIyRCB1X3RleHR1cmU7XG5cbnVuaWZvcm0gZmxvYXQgdV9hdmdMdW1pbmFuY2U7XG51bmlmb3JtIGZsb2F0IHVfdGhyZXNob2xkO1xudW5pZm9ybSBmbG9hdCB1X29mZnNldDtcblxudmFyeWluZyB2ZWMyIHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuXG5mbG9hdCBrZXkoZmxvYXQgYXZnKVxue1xuICAgIGZsb2F0IGd1ZXNzID0gMS41IC0gKDEuNSAvIChhdmcgKiAwLjEgKyAxLjApKTtcbiAgICByZXR1cm4gbWF4KDAuMCwgZ3Vlc3MpICsgMC4xO1xufVxuXG4vLyBTZWUgc2VjdGlvbiA5LiAiVGhlIGJyaWdodC1wYXNzIGZpbHRlciIgb2YgUmVhbHRpbWUgSERSIFJlbmRlcmluZ1xuLy8gaHR0cDovL3d3dy5jZy50dXdpZW4uYWMuYXQvcmVzZWFyY2gvcHVibGljYXRpb25zLzIwMDcvTHVrc2NoXzIwMDdfUkhSL0x1a3NjaF8yMDA3X1JIUi1SZWFsdGltZUhEUiUyMC5wZGZcblxudm9pZCBtYWluKClcbntcbiAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJEKHVfdGV4dHVyZSwgdl90ZXh0dXJlQ29vcmRpbmF0ZXMpO1xuICAgIHZlYzMgeHl6ID0gY3ptX1JHQlRvWFlaKGNvbG9yLnJnYik7XG4gICAgZmxvYXQgbHVtaW5hbmNlID0geHl6LnI7XG4gICAgXG4gICAgZmxvYXQgc2NhbGVkTHVtID0ga2V5KHVfYXZnTHVtaW5hbmNlKSAqIGx1bWluYW5jZSAvIHVfYXZnTHVtaW5hbmNlO1xuICAgIGZsb2F0IGJyaWdodEx1bSA9IG1heChzY2FsZWRMdW0gLSB1X3RocmVzaG9sZCwgMC4wKTtcbiAgICBmbG9hdCBicmlnaHRuZXNzID0gYnJpZ2h0THVtIC8gKHVfb2Zmc2V0ICsgYnJpZ2h0THVtKTtcbiAgICBcbiAgICB4eXouciA9IGJyaWdodG5lc3M7XG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjem1fWFlaVG9SR0IoeHl6KSwgMS4wKTtcbn1cbid9KSxkZWZpbmUoIlNoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL0dhdXNzaWFuQmx1cjFEIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iI2RlZmluZSBTQU1QTEVTIDhcblxudW5pZm9ybSBmbG9hdCBkZWx0YTtcbnVuaWZvcm0gZmxvYXQgc2lnbWE7XG51bmlmb3JtIGZsb2F0IGRpcmVjdGlvbjsgLy8gMC4wIGZvciB4IGRpcmVjdGlvbiwgMS4wIGZvciB5IGRpcmVjdGlvblxuXG51bmlmb3JtIHNhbXBsZXIyRCB1X3RleHR1cmU7XG51bmlmb3JtIHZlYzIgdV9zdGVwO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbi8vICBJbmNyZW1lbnRhbCBDb21wdXRhdGlvbiBvZiB0aGUgR2F1c3NpYW46XG4vLyAgaHR0cDovL2h0dHAuZGV2ZWxvcGVyLm52aWRpYS5jb20vR1BVR2VtczMvZ3B1Z2VtczNfY2g0MC5odG1sXG5cbnZvaWQgbWFpbigpXG57XG4gICAgdmVjMiBzdCA9IHZfdGV4dHVyZUNvb3JkaW5hdGVzO1xuICAgIFxuICAgIHZlYzIgZGlyID0gdmVjMigxLjAgLSBkaXJlY3Rpb24sIGRpcmVjdGlvbik7XG4gICAgXG4gICAgdmVjMyBnO1xuICAgIGcueCA9IDEuMCAvIChzcXJ0KGN6bV90d29QaSkgKiBzaWdtYSk7XG4gICAgZy55ID0gZXhwKCgtMC41ICogZGVsdGEgKiBkZWx0YSkgLyAoc2lnbWEgKiBzaWdtYSkpO1xuICAgIGcueiA9IGcueSAqIGcueTtcbiAgICBcbiAgICB2ZWM0IHJlc3VsdCA9IHRleHR1cmUyRCh1X3RleHR1cmUsIHN0KSAqIGcueDtcbiAgICBmb3IgKGludCBpID0gMTsgaSA8IFNBTVBMRVM7ICsraSlcbiAgICB7XG4gICAgICAgIGcueHkgKj0gZy55ejtcbiAgICAgICAgXG4gICAgICAgIHZlYzIgb2Zmc2V0ID0gZmxvYXQoaSkgKiBkaXIgKiB1X3N0ZXA7XG4gICAgICAgIHJlc3VsdCArPSB0ZXh0dXJlMkQodV90ZXh0dXJlLCBzdCAtIG9mZnNldCkgKiBnLng7XG4gICAgICAgIHJlc3VsdCArPSB0ZXh0dXJlMkQodV90ZXh0dXJlLCBzdCArIG9mZnNldCkgKiBnLng7XG4gICAgfVxuICAgIFxuICAgIGdsX0ZyYWdDb2xvciA9IHJlc3VsdDtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL1Bhc3NUaHJvdWdoIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4idW5pZm9ybSBzYW1wbGVyMkQgdV90ZXh0dXJlO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIGdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCh1X3RleHR1cmUsIHZfdGV4dHVyZUNvb3JkaW5hdGVzKTtcbn1cbiJ9KSxkZWZpbmUoIlNjZW5lL1N1blBvc3RQcm9jZXNzIixbIi4uL0NvcmUvQm91bmRpbmdSZWN0YW5nbGUiLCIuLi9Db3JlL0NhcnRlc2lhbjIiLCIuLi9Db3JlL0NhcnRlc2lhbjQiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL01hdGgiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1BpeGVsRm9ybWF0IiwiLi4vQ29yZS9UcmFuc2Zvcm1zIiwiLi4vUmVuZGVyZXIvQ2xlYXJDb21tYW5kIiwiLi4vUmVuZGVyZXIvUGFzc1N0YXRlIiwiLi4vUmVuZGVyZXIvUGl4ZWxEYXRhdHlwZSIsIi4uL1JlbmRlcmVyL1JlbmRlcmJ1ZmZlckZvcm1hdCIsIi4uL1NoYWRlcnMvUG9zdFByb2Nlc3NGaWx0ZXJzL0FkZGl0aXZlQmxlbmQiLCIuLi9TaGFkZXJzL1Bvc3RQcm9jZXNzRmlsdGVycy9CcmlnaHRQYXNzIiwiLi4vU2hhZGVycy9Qb3N0UHJvY2Vzc0ZpbHRlcnMvR2F1c3NpYW5CbHVyMUQiLCIuLi9TaGFkZXJzL1Bvc3RQcm9jZXNzRmlsdGVycy9QYXNzVGhyb3VnaCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8peyJ1c2Ugc3RyaWN0Ijt2YXIgeT1mdW5jdGlvbigpe3RoaXMuX2Zibz12b2lkIDAsdGhpcy5fZG93blNhbXBsZUZCTzE9dm9pZCAwLHRoaXMuX2Rvd25TYW1wbGVGQk8yPXZvaWQgMCx0aGlzLl9jbGVhckZCTzFDb21tYW5kPXZvaWQgMCx0aGlzLl9jbGVhckZCTzJDb21tYW5kPXZvaWQgMCx0aGlzLl9kb3duU2FtcGxlQ29tbWFuZD12b2lkIDAsdGhpcy5fYnJpZ2h0UGFzc0NvbW1hbmQ9dm9pZCAwLHRoaXMuX2JsdXJYQ29tbWFuZD12b2lkIDAsdGhpcy5fYmx1cllDb21tYW5kPXZvaWQgMCx0aGlzLl9ibGVuZENvbW1hbmQ9dm9pZCAwLHRoaXMuX2Z1bGxTY3JlZW5Db21tYW5kPXZvaWQgMCx0aGlzLl9kb3duU2FtcGxlUGFzc1N0YXRlPW5ldyBoLHRoaXMuX2Rvd25TYW1wbGVQYXNzU3RhdGUuc2Npc3NvclRlc3Q9e2VuYWJsZTohMCxyZWN0YW5nbGU6bmV3IGV9LHRoaXMuX3VwU2FtcGxlUGFzc1N0YXRlPW5ldyBoLHRoaXMuX3VwU2FtcGxlUGFzc1N0YXRlLnNjaXNzb3JUZXN0PXtlbmFibGVkOiEwLHJlY3RhbmdsZTpuZXcgZX0sdGhpcy5fdUNlbnRlcj1uZXcgdCx0aGlzLl91UmFkaXVzPXZvaWQgMCx0aGlzLl9ibHVyU3RlcD1uZXcgdH07eS5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9jbGVhckZCTzFDb21tYW5kO24uY2xvbmUocih0LG4uQkxBQ0spLGkuY29sb3IpLGkuZXhlY3V0ZShlKSxpPXRoaXMuX2NsZWFyRkJPMkNvbW1hbmQsbi5jbG9uZShyKHQsbi5CTEFDSyksaS5jb2xvciksaS5leGVjdXRlKGUpfSx5LnByb3RvdHlwZS5leGVjdXRlPWZ1bmN0aW9uKGUsdCl7dGhpcy5fZG93blNhbXBsZUNvbW1hbmQuZXhlY3V0ZShlLHRoaXMuX2Rvd25TYW1wbGVQYXNzU3RhdGUpLHRoaXMuX2JyaWdodFBhc3NDb21tYW5kLmV4ZWN1dGUoZSx0aGlzLl9kb3duU2FtcGxlUGFzc1N0YXRlKSx0aGlzLl9ibHVyWENvbW1hbmQuZXhlY3V0ZShlLHRoaXMuX2Rvd25TYW1wbGVQYXNzU3RhdGUpLHRoaXMuX2JsdXJZQ29tbWFuZC5leGVjdXRlKGUsdGhpcy5fZG93blNhbXBsZVBhc3NTdGF0ZSksdGhpcy5fZnVsbFNjcmVlbkNvbW1hbmQuZnJhbWVidWZmZXI9dCx0aGlzLl9ibGVuZENvbW1hbmQuZnJhbWVidWZmZXI9dCx0aGlzLl9mdWxsU2NyZWVuQ29tbWFuZC5leGVjdXRlKGUpLHRoaXMuX2JsZW5kQ29tbWFuZC5leGVjdXRlKGUsdGhpcy5fdXBTYW1wbGVQYXNzU3RhdGUpfTt2YXIgQz1uZXcgZSx3PW5ldyBlLEU9bmV3IGksYj1uZXcgdCxTPW5ldyB0LFQ9bmV3IGw7cmV0dXJuIHkucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlKXt2YXIgaT1lLmRyYXdpbmdCdWZmZXJXaWR0aCxyPWUuZHJhd2luZ0J1ZmZlckhlaWdodCxhPXRoaXM7aWYoIW8odGhpcy5fZG93blNhbXBsZUNvbW1hbmQpKXt0aGlzLl9jbGVhckZCTzFDb21tYW5kPW5ldyBkKHtjb2xvcjpuZXcgbn0pLHRoaXMuX2NsZWFyRkJPMkNvbW1hbmQ9bmV3IGQoe2NvbG9yOm5ldyBufSk7dmFyIGgseT17fTt0aGlzLl9kb3duU2FtcGxlQ29tbWFuZD1lLmNyZWF0ZVZpZXdwb3J0UXVhZENvbW1hbmQoXyx7cmVuZGVyU3RhdGU6aCx1bmlmb3JtTWFwOnksb3duZXI6dGhpc30pLHk9e3VfYXZnTHVtaW5hbmNlOmZ1bmN0aW9uKCl7cmV0dXJuLjV9LHVfdGhyZXNob2xkOmZ1bmN0aW9uKCl7cmV0dXJuLjI1fSx1X29mZnNldDpmdW5jdGlvbigpe3JldHVybi4xfX0sdGhpcy5fYnJpZ2h0UGFzc0NvbW1hbmQ9ZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKHYse3JlbmRlclN0YXRlOmgsdW5pZm9ybU1hcDp5LG93bmVyOnRoaXN9KTt2YXIgeD0xLEE9Mjt5PXtkZWx0YTpmdW5jdGlvbigpe3JldHVybiB4fSxzaWdtYTpmdW5jdGlvbigpe3JldHVybiBBfSxkaXJlY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gMH19LHRoaXMuX2JsdXJYQ29tbWFuZD1lLmNyZWF0ZVZpZXdwb3J0UXVhZENvbW1hbmQoZyx7cmVuZGVyU3RhdGU6aCx1bmlmb3JtTWFwOnksb3duZXI6dGhpc30pLHk9e2RlbHRhOmZ1bmN0aW9uKCl7cmV0dXJuIHh9LHNpZ21hOmZ1bmN0aW9uKCl7cmV0dXJuIEF9LGRpcmVjdGlvbjpmdW5jdGlvbigpe3JldHVybiAxfX0sdGhpcy5fYmx1cllDb21tYW5kPWUuY3JlYXRlVmlld3BvcnRRdWFkQ29tbWFuZChnLHtyZW5kZXJTdGF0ZTpoLHVuaWZvcm1NYXA6eSxvd25lcjp0aGlzfSkseT17dV9jZW50ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gYS5fdUNlbnRlcn0sdV9yYWRpdXM6ZnVuY3Rpb24oKXtyZXR1cm4gYS5fdVJhZGl1c319LHRoaXMuX2JsZW5kQ29tbWFuZD1lLmNyZWF0ZVZpZXdwb3J0UXVhZENvbW1hbmQocCx7cmVuZGVyU3RhdGU6aCx1bmlmb3JtTWFwOnksb3duZXI6dGhpc30pLHk9e30sdGhpcy5fZnVsbFNjcmVlbkNvbW1hbmQ9ZS5jcmVhdGVWaWV3cG9ydFF1YWRDb21tYW5kKF8se3JlbmRlclN0YXRlOmgsdW5pZm9ybU1hcDp5LG93bmVyOnRoaXN9KX12YXIgUD1NYXRoLnBvdygyLE1hdGguY2VpbChNYXRoLmxvZyhpKS9NYXRoLmxvZygyKSktMiksTT1NYXRoLnBvdygyLE1hdGguY2VpbChNYXRoLmxvZyhyKS9NYXRoLmxvZygyKSktMiksST1NYXRoLm1heChQLE0pLEQ9QztELndpZHRoPWksRC5oZWlnaHQ9cjt2YXIgTz13O08ud2lkdGg9SSxPLmhlaWdodD1JO3ZhciBSPXRoaXMuX2ZibyxMPW8oUikmJlIuZ2V0Q29sb3JUZXh0dXJlKDApfHx2b2lkIDA7aWYoIW8oTCl8fEwud2lkdGghPT1pfHxMLmhlaWdodCE9PXIpe1I9UiYmUi5kZXN0cm95KCksdGhpcy5fZG93blNhbXBsZUZCTzE9dGhpcy5fZG93blNhbXBsZUZCTzEmJnRoaXMuX2Rvd25TYW1wbGVGQk8xLmRlc3Ryb3koKSx0aGlzLl9kb3duU2FtcGxlRkJPMj10aGlzLl9kb3duU2FtcGxlRkJPMiYmdGhpcy5fZG93blNhbXBsZUZCTzIuZGVzdHJveSgpLHRoaXMuX2JsdXJTdGVwLng9dGhpcy5fYmx1clN0ZXAueT0xL0k7dmFyIE49W2UuY3JlYXRlVGV4dHVyZTJEKHt3aWR0aDppLGhlaWdodDpyfSldO1I9dGhpcy5fZmJvPWUuZGVwdGhUZXh0dXJlP2UuY3JlYXRlRnJhbWVidWZmZXIoe2NvbG9yVGV4dHVyZXM6TixkZXB0aFRleHR1cmU6ZS5jcmVhdGVUZXh0dXJlMkQoe3dpZHRoOmksaGVpZ2h0OnIscGl4ZWxGb3JtYXQ6dS5ERVBUSF9DT01QT05FTlQscGl4ZWxEYXRhdHlwZTptLlVOU0lHTkVEX1NIT1JUfSl9KTplLmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOk4sZGVwdGhSZW5kZXJidWZmZXI6ZS5jcmVhdGVSZW5kZXJidWZmZXIoe2Zvcm1hdDpmLkRFUFRIX0NPTVBPTkVOVDE2fSl9KSx0aGlzLl9kb3duU2FtcGxlRkJPMT1lLmNyZWF0ZUZyYW1lYnVmZmVyKHtjb2xvclRleHR1cmVzOltlLmNyZWF0ZVRleHR1cmUyRCh7d2lkdGg6SSxoZWlnaHQ6SX0pXX0pLHRoaXMuX2Rvd25TYW1wbGVGQk8yPWUuY3JlYXRlRnJhbWVidWZmZXIoe2NvbG9yVGV4dHVyZXM6W2UuY3JlYXRlVGV4dHVyZTJEKHt3aWR0aDpJLGhlaWdodDpJfSldfSksdGhpcy5fY2xlYXJGQk8xQ29tbWFuZC5mcmFtZWJ1ZmZlcj10aGlzLl9kb3duU2FtcGxlRkJPMSx0aGlzLl9jbGVhckZCTzJDb21tYW5kLmZyYW1lYnVmZmVyPXRoaXMuX2Rvd25TYW1wbGVGQk8yLHRoaXMuX2Rvd25TYW1wbGVDb21tYW5kLmZyYW1lYnVmZmVyPXRoaXMuX2Rvd25TYW1wbGVGQk8xLHRoaXMuX2JyaWdodFBhc3NDb21tYW5kLmZyYW1lYnVmZmVyPXRoaXMuX2Rvd25TYW1wbGVGQk8yLHRoaXMuX2JsdXJYQ29tbWFuZC5mcmFtZWJ1ZmZlcj10aGlzLl9kb3duU2FtcGxlRkJPMSx0aGlzLl9ibHVyWUNvbW1hbmQuZnJhbWVidWZmZXI9dGhpcy5fZG93blNhbXBsZUZCTzI7dmFyIHo9ZS5jcmVhdGVSZW5kZXJTdGF0ZSh7dmlld3BvcnQ6T30pLEI9ZS5jcmVhdGVSZW5kZXJTdGF0ZSgpO3RoaXMuX2Rvd25TYW1wbGVDb21tYW5kLnVuaWZvcm1NYXAudV90ZXh0dXJlPWZ1bmN0aW9uKCl7cmV0dXJuIFIuZ2V0Q29sb3JUZXh0dXJlKDApfSx0aGlzLl9kb3duU2FtcGxlQ29tbWFuZC5yZW5kZXJTdGF0ZT16LHRoaXMuX2JyaWdodFBhc3NDb21tYW5kLnVuaWZvcm1NYXAudV90ZXh0dXJlPWZ1bmN0aW9uKCl7cmV0dXJuIGEuX2Rvd25TYW1wbGVGQk8xLmdldENvbG9yVGV4dHVyZSgwKX0sdGhpcy5fYnJpZ2h0UGFzc0NvbW1hbmQucmVuZGVyU3RhdGU9eix0aGlzLl9ibHVyWENvbW1hbmQudW5pZm9ybU1hcC51X3RleHR1cmU9ZnVuY3Rpb24oKXtyZXR1cm4gYS5fZG93blNhbXBsZUZCTzIuZ2V0Q29sb3JUZXh0dXJlKDApfSx0aGlzLl9ibHVyWENvbW1hbmQudW5pZm9ybU1hcC51X3N0ZXA9ZnVuY3Rpb24oKXtyZXR1cm4gYS5fYmx1clN0ZXB9LHRoaXMuX2JsdXJYQ29tbWFuZC5yZW5kZXJTdGF0ZT16LHRoaXMuX2JsdXJZQ29tbWFuZC51bmlmb3JtTWFwLnVfdGV4dHVyZT1mdW5jdGlvbigpe3JldHVybiBhLl9kb3duU2FtcGxlRkJPMS5nZXRDb2xvclRleHR1cmUoMCl9LHRoaXMuX2JsdXJZQ29tbWFuZC51bmlmb3JtTWFwLnVfc3RlcD1mdW5jdGlvbigpe3JldHVybiBhLl9ibHVyU3RlcH0sdGhpcy5fYmx1cllDb21tYW5kLnJlbmRlclN0YXRlPXosdGhpcy5fYmxlbmRDb21tYW5kLnVuaWZvcm1NYXAudV90ZXh0dXJlMD1mdW5jdGlvbigpe3JldHVybiBSLmdldENvbG9yVGV4dHVyZSgwKX0sdGhpcy5fYmxlbmRDb21tYW5kLnVuaWZvcm1NYXAudV90ZXh0dXJlMT1mdW5jdGlvbigpe3JldHVybiBhLl9kb3duU2FtcGxlRkJPMi5nZXRDb2xvclRleHR1cmUoMCl9LHRoaXMuX2JsZW5kQ29tbWFuZC5yZW5kZXJTdGF0ZT1CLHRoaXMuX2Z1bGxTY3JlZW5Db21tYW5kLnVuaWZvcm1NYXAudV90ZXh0dXJlPWZ1bmN0aW9uKCl7cmV0dXJuIFIuZ2V0Q29sb3JUZXh0dXJlKDApfSx0aGlzLl9mdWxsU2NyZWVuQ29tbWFuZC5yZW5kZXJTdGF0ZT1CfXZhciBGPWUudW5pZm9ybVN0YXRlLFY9Ri5zdW5Qb3NpdGlvbldDLGs9Ri52aWV3LFU9Ri52aWV3UHJvamVjdGlvbixXPUYucHJvamVjdGlvbixHPWwuY29tcHV0ZVZpZXdwb3J0VHJhbnNmb3JtYXRpb24oRCwwLDEsVCksSD1sLm11bHRpcGx5QnlQb2ludChrLFYsRSkscT1jLnBvaW50VG9HTFdpbmRvd0Nvb3JkaW5hdGVzKFUsRyxWLGIpO0gueCs9cy5TT0xBUl9SQURJVVM7dmFyIGo9Yy5wb2ludFRvR0xXaW5kb3dDb29yZGluYXRlcyhXLEcsSCxIKSxZPTIqMzAqdC5tYWduaXR1ZGUodC5zdWJ0cmFjdChqLHEsaikpLFg9UztYLng9WSxYLnk9WTt2YXIgWj10aGlzLl91cFNhbXBsZVBhc3NTdGF0ZS5zY2lzc29yVGVzdC5yZWN0YW5nbGU7cmV0dXJuIFoueD1NYXRoLm1heChxLngtLjUqWC54LDApLFoueT1NYXRoLm1heChxLnktLjUqWC55LDApLFoud2lkdGg9TWF0aC5taW4oWC54LGkpLFouaGVpZ2h0PU1hdGgubWluKFgueSxyKSx0aGlzLl91Q2VudGVyPXQuY2xvbmUocSx0aGlzLl91Q2VudGVyKSx0aGlzLl91UmFkaXVzPS41Kk1hdGgubWF4KFgueCxYLnkpLEc9bC5jb21wdXRlVmlld3BvcnRUcmFuc2Zvcm1hdGlvbihPLDAsMSxUKSxxPWMucG9pbnRUb0dMV2luZG93Q29vcmRpbmF0ZXMoVSxHLFYsYiksWC54Kj1QL2ksWC55Kj1NL3IsWj10aGlzLl9kb3duU2FtcGxlUGFzc1N0YXRlLnNjaXNzb3JUZXN0LnJlY3RhbmdsZSxaLng9TWF0aC5tYXgocS54LS41KlgueCwwKSxaLnk9TWF0aC5tYXgocS55LS41KlgueSwwKSxaLndpZHRoPU1hdGgubWluKFgueCxpKSxaLmhlaWdodD1NYXRoLm1pbihYLnksciksdGhpcy5fZG93blNhbXBsZVBhc3NTdGF0ZS5jb250ZXh0PWUsdGhpcy5fdXBTYW1wbGVQYXNzU3RhdGUuY29udGV4dD1lLHRoaXMuX2Zib30seS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0seS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9mYm89dGhpcy5fZmJvJiZ0aGlzLl9mYm8uZGVzdHJveSgpLHRoaXMuX2Rvd25TYW1wbGVGQk8xPXRoaXMuX2Rvd25TYW1wbGVGQk8xJiZ0aGlzLl9kb3duU2FtcGxlRkJPMS5kZXN0cm95KCksdGhpcy5fZG93blNhbXBsZUZCTzI9dGhpcy5fZG93blNhbXBsZUZCTzImJnRoaXMuX2Rvd25TYW1wbGVGQk8yLmRlc3Ryb3koKSx0aGlzLl9kb3duU2FtcGxlQ29tbWFuZD10aGlzLl9kb3duU2FtcGxlQ29tbWFuZCYmdGhpcy5fZG93blNhbXBsZUNvbW1hbmQuc2hhZGVyUHJvZ3JhbSYmdGhpcy5fZG93blNhbXBsZUNvbW1hbmQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksdGhpcy5fYnJpZ2h0UGFzc0NvbW1hbmQ9dGhpcy5fYnJpZ2h0UGFzc0NvbW1hbmQmJnRoaXMuX2JyaWdodFBhc3NDb21tYW5kLnNoYWRlclByb2dyYW0mJnRoaXMuX2JyaWdodFBhc3NDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpLHRoaXMuX2JsdXJYQ29tbWFuZD10aGlzLl9ibHVyWENvbW1hbmQmJnRoaXMuX2JsdXJYQ29tbWFuZC5zaGFkZXJQcm9ncmFtJiZ0aGlzLl9ibHVyWENvbW1hbmQuc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksdGhpcy5fYmx1cllDb21tYW5kPXRoaXMuX2JsdXJZQ29tbWFuZCYmdGhpcy5fYmx1cllDb21tYW5kLnNoYWRlclByb2dyYW0mJnRoaXMuX2JsdXJZQ29tbWFuZC5zaGFkZXJQcm9ncmFtLmRlc3Ryb3koKSx0aGlzLl9ibGVuZENvbW1hbmQ9dGhpcy5fYmxlbmRDb21tYW5kJiZ0aGlzLl9ibGVuZENvbW1hbmQuc2hhZGVyUHJvZ3JhbSYmdGhpcy5fYmxlbmRDb21tYW5kLnNoYWRlclByb2dyYW0uZGVzdHJveSgpLHRoaXMuX2Z1bGxTY3JlZW5Db21tYW5kPXRoaXMuX2Z1bGxTY3JlZW5Db21tYW5kJiZ0aGlzLl9mdWxsU2NyZWVuQ29tbWFuZC5zaGFkZXJQcm9ncmFtJiZ0aGlzLl9mdWxsU2NyZWVuQ29tbWFuZC5zaGFkZXJQcm9ncmFtLmRlc3Ryb3koKSxhKHRoaXMpfSx5fSksZGVmaW5lKCJTY2VuZS9TY2VuZSIsWyIuLi9Db3JlL0JvdW5kaW5nUmVjdGFuZ2xlIiwiLi4vQ29yZS9Cb3VuZGluZ1NwaGVyZSIsIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL0NvbG9yR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSIsIi4uL0NvcmUvY3JlYXRlR3VpZCIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uL0NvcmUvRWxsaXBzb2lkR2VvbWV0cnkiLCIuLi9Db3JlL0V2ZW50IiwiLi4vQ29yZS9HZW9ncmFwaGljUHJvamVjdGlvbiIsIi4uL0NvcmUvR2VvbWV0cnlJbnN0YW5jZSIsIi4uL0NvcmUvR2VvbWV0cnlQaXBlbGluZSIsIi4uL0NvcmUvSW50ZXJzZWN0IiwiLi4vQ29yZS9JbnRlcnZhbCIsIi4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4NCIsIi4uL0NvcmUvbWVyZ2VTb3J0IiwiLi4vQ29yZS9PY2NsdWRlciIsIi4uL0NvcmUvU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiLCIuLi9SZW5kZXJlci9DbGVhckNvbW1hbmQiLCIuLi9SZW5kZXJlci9Db250ZXh0IiwiLi4vUmVuZGVyZXIvUGFzc1N0YXRlIiwiLi9DYW1lcmEiLCIuL0NyZWRpdERpc3BsYXkiLCIuL0N1bGxpbmdWb2x1bWUiLCIuL0ZyYW1lU3RhdGUiLCIuL0ZydXN0dW1Db21tYW5kcyIsIi4vRlhBQSIsIi4vT0lUIiwiLi9PcnRob2dyYXBoaWNGcnVzdHVtIiwiLi9QYXNzIiwiLi9QZXJmb3JtYW5jZURpc3BsYXkiLCIuL1Blckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlIiwiLi9QZXJzcGVjdGl2ZUZydXN0dW0iLCIuL1BlcnNwZWN0aXZlT2ZmQ2VudGVyRnJ1c3R1bSIsIi4vUHJpbWl0aXZlIiwiLi9QcmltaXRpdmVDb2xsZWN0aW9uIiwiLi9TY2VuZU1vZGUiLCIuL1NjZW5lVHJhbnNmb3JtcyIsIi4vU2NlbmVUcmFuc2l0aW9uZXIiLCIuL1NjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlciIsIi4vU3VuUG9zdFByb2Nlc3MiLCIuL1R3ZWVuQ29sbGVjdGlvbiJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSxiLFMsVCx4LEEsUCxNLEksRCxPLFIsTCxOLHosQixGLFYsayxVLFcsRyxILHEsaixZLFgpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBaKGUpe3ZhciB0PWUuZ2xvYmU7aWYoZS5fbW9kZT09PUcuU0NFTkUzRCYmbCh0KSl7dmFyIGk9dC5lbGxpcHNvaWQ7cmV0dXJuIF90LnJhZGl1cz1pLm1pbmltdW1SYWRpdXMsZ3Q9Yi5mcm9tQm91bmRpbmdTcGhlcmUoX3QsZS5fY2FtZXJhLnBvc2l0aW9uV0MsZ3QpfXJldHVybiB2b2lkIDB9ZnVuY3Rpb24gSihlKXtlLnJlbmRlcj0hMSxlLnBpY2s9ITF9ZnVuY3Rpb24gSyhlLHQsaSl7dmFyIG49ZS5fY2FtZXJhLHI9ZS5fZnJhbWVTdGF0ZTtyLm1vZGU9ZS5fbW9kZSxyLm1vcnBoVGltZT1lLm1vcnBoVGltZSxyLm1hcFByb2plY3Rpb249ZS5tYXBQcm9qZWN0aW9uLHIuZnJhbWVOdW1iZXI9dCxyLnRpbWU9eS5jbG9uZShpLHIudGltZSksci5jYW1lcmE9bixyLmN1bGxpbmdWb2x1bWU9bi5mcnVzdHVtLmNvbXB1dGVDdWxsaW5nVm9sdW1lKG4ucG9zaXRpb25XQyxuLmRpcmVjdGlvbldDLG4udXBXQyksci5vY2NsdWRlcj1aKGUpLHIuYWZ0ZXJSZW5kZXIubGVuZ3RoPTAsSihyLnBhc3Nlcyl9ZnVuY3Rpb24gUShlLHQsaSxuLHIpe3IubGVuZ3RoPW47Zm9yKHZhciBvPTA7bj5vOysrbyl7dmFyIGE9TWF0aC5tYXgoZSxNYXRoLnBvdyhpLG8pKmUpLHM9TWF0aC5taW4odCxpKmEpLHU9cltvXTtsKHUpPyh1Lm5lYXI9YSx1LmZhcj1zKTp1PXJbb109bmV3IE8oYSxzKX19ZnVuY3Rpb24gJChlLHQsaSl7ZS5kZWJ1Z1Nob3dGcnVzdHVtcyYmKHQuZGVidWdPdmVybGFwcGluZ0ZydXN0dW1zPTApO2Zvcih2YXIgbj1lLl9mcnVzdHVtQ29tbWFuZHNMaXN0LHI9bi5sZW5ndGgsbz0wO3I+bzsrK28pe3ZhciBhPW5bb10scz1hLm5lYXIsdT1hLmZhcjtpZighKGkuc3RhcnQ+dSkpe2lmKGkuc3RvcDxzKWJyZWFrO2lmKHQucGFzcz09PXouT1BBUVVFfHx0IGluc3RhbmNlb2YgVD9hLm9wYXF1ZUNvbW1hbmRzW2Eub3BhcXVlSW5kZXgrK109dDp0LnBhc3M9PT16LlRSQU5TTFVDRU5UJiYoYS50cmFuc2x1Y2VudENvbW1hbmRzW2EudHJhbnNsdWNlbnRJbmRleCsrXT10KSxlLmRlYnVnU2hvd0ZydXN0dW1zJiYodC5kZWJ1Z092ZXJsYXBwaW5nRnJ1c3R1bXN8PTE8PG8pLHQuZXhlY3V0ZUluQ2xvc2VzdEZydXN0dW0pYnJlYWt9fWlmKGUuZGVidWdTaG93RnJ1c3R1bXMpe3ZhciBjPWUuX2RlYnVnRnJ1c3R1bVN0YXRpc3RpY3MuY29tbWFuZHNJbkZydXN0dW1zO2NbdC5kZWJ1Z092ZXJsYXBwaW5nRnJ1c3R1bXNdPWwoY1t0LmRlYnVnT3ZlcmxhcHBpbmdGcnVzdHVtc10pP2NbdC5kZWJ1Z092ZXJsYXBwaW5nRnJ1c3R1bXNdKzE6MSwrK2UuX2RlYnVnRnJ1c3R1bVN0YXRpc3RpY3MudG90YWxDb21tYW5kc319ZnVuY3Rpb24gZXQoZSl7dmFyIGk9ZS5fY29tbWFuZExpc3Qsbj1lLl9vdmVybGF5Q29tbWFuZExpc3Qscj1lLl9mcmFtZVN0YXRlLmN1bGxpbmdWb2x1bWUsbz1lLl9jYW1lcmEsYT1vLmRpcmVjdGlvbldDLHM9by5wb3NpdGlvbldDO2UuZGVidWdTaG93RnJ1c3R1bXMmJihlLl9kZWJ1Z0ZydXN0dW1TdGF0aXN0aWNzPXt0b3RhbENvbW1hbmRzOjAsY29tbWFuZHNJbkZydXN0dW1zOnt9fSk7Zm9yKHZhciB1PWUuX2ZydXN0dW1Db21tYW5kc0xpc3QsYz11Lmxlbmd0aCxkPTA7Yz5kOysrZCl1W2RdLm9wYXF1ZUluZGV4PTAsdVtkXS50cmFuc2x1Y2VudEluZGV4PTA7dmFyIGgsbT1OdW1iZXIuTUFYX1ZBTFVFLGY9TnVtYmVyLk1JTl9WQUxVRSxwPSExO2UuX2ZyYW1lU3RhdGUubW9kZT09PUcuU0NFTkUzRCYmKGg9ZS5fZnJhbWVTdGF0ZS5vY2NsdWRlcik7Zm9yKHZhciB2PXl0LnBsYW5lcyxfPTA7NT5fOysrXyl2W19dPXIucGxhbmVzW19dO3I9eXQ7Zm9yKHZhciB5PWkubGVuZ3RoLEM9MDt5PkM7KytDKXt2YXIgdz1pW0NdLEU9dy5wYXNzO2lmKEU9PT16Lk9WRVJMQVkpbi5wdXNoKHcpO2Vsc2V7dmFyIGI9dy5ib3VuZGluZ1ZvbHVtZTtpZihsKGIpKXtpZih3LmN1bGwmJihyLmNvbXB1dGVWaXNpYmlsaXR5KGIpPT09Zy5PVVRTSURFfHxsKGgpJiYhaC5pc0JvdW5kaW5nU3BoZXJlVmlzaWJsZShiKSkpY29udGludWU7Q3Q9dC5jb21wdXRlUGxhbmVEaXN0YW5jZXMoYixzLGEsQ3QpLG09TWF0aC5taW4obSxDdC5zdGFydCksZj1NYXRoLm1heChmLEN0LnN0b3ApfWVsc2UgQ3Quc3RhcnQ9by5mcnVzdHVtLm5lYXIsQ3Quc3RvcD1vLmZydXN0dW0uZmFyLHA9ISh3IGluc3RhbmNlb2YgVCk7JChlLHcsQ3QpfX1wPyhtPW8uZnJ1c3R1bS5uZWFyLGY9by5mcnVzdHVtLmZhcik6KG09TWF0aC5taW4oTWF0aC5tYXgobSxvLmZydXN0dW0ubmVhciksby5mcnVzdHVtLmZhciksZj1NYXRoLm1heChNYXRoLm1pbihmLG8uZnJ1c3R1bS5mYXIpLG0pKTt2YXIgUz1lLmZhclRvTmVhclJhdGlvLHg9TWF0aC5jZWlsKE1hdGgubG9nKGYvbSkvTWF0aC5sb2coUykpO20hPT1OdW1iZXIuTUFYX1ZBTFVFJiYoeCE9PWN8fDAhPT11Lmxlbmd0aCYmKG08dVswXS5uZWFyfHxmPnVbYy0xXS5mYXIpKSYmKFEobSxmLFMseCx1KSxldChlKSl9ZnVuY3Rpb24gdHQoZSl7dmFyIHQ9e30saT1lLnZlcnRleEF0dHJpYnV0ZXM7Zm9yKHZhciBuIGluIGkpaS5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09aVtuXS5pbmRleCk7cmV0dXJuIHR9ZnVuY3Rpb24gaXQoZSx0LGkpe3ZhciBuPXQuY29udGV4dCxvPXMoaSxlLnNoYWRlclByb2dyYW0pLGE9by5mcmFnbWVudFNoYWRlclNvdXJjZSx1PWEucmVwbGFjZSgvdm9pZFxzK21haW5ccypcKFxzKig/OnZvaWQpP1xzKlwpL2csInZvaWQgY3ptX0RlYnVnX21haW4oKSIpLGM9InZvaWQgbWFpbigpIFxueyBcbiAgICBjem1fRGVidWdfbWFpbigpOyBcbiI7aWYodC5kZWJ1Z1Nob3dDb21tYW5kcyl7bChlLl9kZWJ1Z0NvbG9yKXx8KGUuX2RlYnVnQ29sb3I9ci5mcm9tUmFuZG9tKCkpO3ZhciBkPWUuX2RlYnVnQ29sb3I7Yys9IiAgICBnbF9GcmFnQ29sb3IucmdiICo9IHZlYzMoIitkLnJlZCsiLCAiK2QuZ3JlZW4rIiwgIitkLmJsdWUrIik7IFxuIn1pZih0LmRlYnVnU2hvd0ZydXN0dW1zKXt2YXIgaD0xJmUuZGVidWdPdmVybGFwcGluZ0ZydXN0dW1zPyIxLjAiOiIwLjAiLG09MiZlLmRlYnVnT3ZlcmxhcHBpbmdGcnVzdHVtcz8iMS4wIjoiMC4wIixmPTQmZS5kZWJ1Z092ZXJsYXBwaW5nRnJ1c3R1bXM/IjEuMCI6IjAuMCI7CmMrPSIgICAgZ2xfRnJhZ0NvbG9yLnJnYiAqPSB2ZWMzKCIraCsiLCAiK20rIiwgIitmKyIpOyBcbiJ9Yys9In0iO3ZhciBwPXUrIlxuIitjLHY9dHQobyk7cmV0dXJuIG4uY3JlYXRlU2hhZGVyUHJvZ3JhbShvLnZlcnRleFNoYWRlclNvdXJjZSxwLHYpfWZ1bmN0aW9uIG50KGUsdCxpLG4scil7aWYobChlLnNoYWRlclByb2dyYW0pfHxsKHIpKXt2YXIgbz1pdChlLHQscik7ZS5leGVjdXRlKHQuY29udGV4dCxpLG4sbyksby5kZXN0cm95KCl9fWZ1bmN0aW9uIHJ0KGUsdCxpLHIsYSxzLHUpe2lmKCghbCh0LmRlYnVnQ29tbWFuZEZpbHRlcil8fHQuZGVidWdDb21tYW5kRmlsdGVyKGUpKSYmKHQuZGVidWdTaG93Q29tbWFuZHN8fHQuZGVidWdTaG93RnJ1c3R1bXM/bnQoZSx0LHIsYSxzKTplLmV4ZWN1dGUoaSxyLGEscyksZS5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZSYmbChlLmJvdW5kaW5nVm9sdW1lKSkpe2wodC5fZGVidWdTcGhlcmUpJiZ0Ll9kZWJ1Z1NwaGVyZS5kZXN0cm95KCk7dmFyIGM9dC5fZnJhbWVTdGF0ZSxkPWUuYm91bmRpbmdWb2x1bWUsbT1kLnJhZGl1cyxmPWQuY2VudGVyLGc9di50b1dpcmVmcmFtZShoLmNyZWF0ZUdlb21ldHJ5KG5ldyBoKHtyYWRpaTpuZXcgbihtLG0sbSksdmVydGV4Rm9ybWF0OkYuRkxBVF9WRVJURVhfRk9STUFUfSkpKTtpZihjLm1vZGUhPT1HLlNDRU5FM0Qpe2Y9dy5tdWx0aXBseUJ5UG9pbnQod3QsZixmKTt2YXIgXz1jLm1hcFByb2plY3Rpb24seT1fLnVucHJvamVjdChmKTtmPV8uZWxsaXBzb2lkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKHkpfXQuX2RlYnVnU3BoZXJlPW5ldyBVKHtnZW9tZXRyeUluc3RhbmNlczpuZXcgcCh7Z2VvbWV0cnk6Zyxtb2RlbE1hdHJpeDp3Lm11bHRpcGx5QnlUcmFuc2xhdGlvbih3LklERU5USVRZLGYsbmV3IHcpLGF0dHJpYnV0ZXM6e2NvbG9yOm5ldyBvKDEsMCwwLDEpfX0pLGFwcGVhcmFuY2U6bmV3IEYoe2ZsYXQ6ITAsdHJhbnNsdWNlbnQ6ITF9KSxhc3luY2hyb25vdXM6ITF9KTt2YXIgQz1bXTt0Ll9kZWJ1Z1NwaGVyZS51cGRhdGUoaSxjLEMpO3ZhciBFO2wodSkmJihFPXIuZnJhbWVidWZmZXIsci5mcmFtZWJ1ZmZlcj11KSxDWzBdLmV4ZWN1dGUoaSxyKSxsKEUpJiYoci5mcmFtZWJ1ZmZlcj1FKX19ZnVuY3Rpb24gb3QoZSx0KXtpZihsKGUpKXtmb3IodmFyIGk9dC5tb2RlPT09Ry5TQ0VORTNEP3Qub2NjbHVkZXI6dm9pZCAwLG49dC5jdWxsaW5nVm9sdW1lLHI9eXQucGxhbmVzLG89MDs1Pm87KytvKXJbb109bi5wbGFuZXNbb107bj15dDt2YXIgYT1lLmJvdW5kaW5nVm9sdW1lO3JldHVybiBsKGUpJiYoIWwoZS5ib3VuZGluZ1ZvbHVtZSl8fCFlLmN1bGx8fG4uY29tcHV0ZVZpc2liaWxpdHkoYSkhPT1nLk9VVFNJREUmJighbChpKXx8aS5pc0JvdW5kaW5nU3BoZXJlVmlzaWJsZShhKSkpfX1mdW5jdGlvbiBhdChlLGksbil7cmV0dXJuIHQuZGlzdGFuY2VTcXVhcmVkVG8oaS5ib3VuZGluZ1ZvbHVtZSxuKS10LmRpc3RhbmNlU3F1YXJlZFRvKGUuYm91bmRpbmdWb2x1bWUsbil9ZnVuY3Rpb24gc3QoZSx0LGksbil7dmFyIHI9ZS5jb250ZXh0O0UobixhdCxlLl9jYW1lcmEucG9zaXRpb25XQyk7Zm9yKHZhciBvPW4ubGVuZ3RoLGE9MDtvPmE7KythKXQoblthXSxlLHIsaSl9ZnVuY3Rpb24gbHQoZSx0LGksbil7dmFyIG8sYT1lLl9mcmFtZVN0YXRlLHM9ZS5fY2FtZXJhLHU9ZS5jb250ZXh0LGM9dS51bmlmb3JtU3RhdGU7bz1sKHMuZnJ1c3R1bS5mb3YpP3MuZnJ1c3R1bS5jbG9uZShFdCk6bChzLmZydXN0dW0uaW5maW5pdGVQcm9qZWN0aW9uTWF0cml4KT9zLmZydXN0dW0uY2xvbmUoYnQpOnMuZnJ1c3R1bS5jbG9uZShTdCksbChlLnN1bikmJmUuc3VuQmxvb20hPT1lLl9zdW5CbG9vbT8oZS5zdW5CbG9vbT9lLl9zdW5Qb3N0UHJvY2Vzcz1uZXcgWTpsKGUuX3N1blBvc3RQcm9jZXNzKSYmKGUuX3N1blBvc3RQcm9jZXNzPWUuX3N1blBvc3RQcm9jZXNzLmRlc3Ryb3koKSksZS5fc3VuQmxvb209ZS5zdW5CbG9vbSk6IWwoZS5zdW4pJiZsKGUuX3N1blBvc3RQcm9jZXNzKSYmKGUuX3N1blBvc3RQcm9jZXNzPWUuX3N1blBvc3RQcm9jZXNzLmRlc3Ryb3koKSxlLl9zdW5CbG9vbT0hMSk7dmFyIGQ9YS5wYXNzZXMucmVuZGVyJiZsKGUuc2t5Qm94KT9lLnNreUJveC51cGRhdGUodSxhKTp2b2lkIDAsaD1hLnBhc3Nlcy5yZW5kZXImJmwoZS5za3lBdG1vc3BoZXJlKT9lLnNreUF0bW9zcGhlcmUudXBkYXRlKHUsYSk6dm9pZCAwLG09YS5wYXNzZXMucmVuZGVyJiZsKGUuc3VuKT9lLnN1bi51cGRhdGUoZSk6dm9pZCAwLGY9b3QobSxhKSxwPWUuX2NsZWFyQ29sb3JDb21tYW5kO3IuY2xvbmUoaSxwLmNvbG9yKSxwLmV4ZWN1dGUodSx0KTt2YXIgdixnPSExLF89ZS5fZnJ1c3R1bUNvbW1hbmRzTGlzdCx5PV8ubGVuZ3RoO2Zvcih2PTA7eT52OysrdilpZihfW3ZdLnRyYW5zbHVjZW50SW5kZXg+MCl7Zz0hMDticmVha312YXIgQz0hbiYmZyYmbChlLl9vaXQpJiZlLl9vaXQuaXNTdXBwb3J0ZWQoKTtDJiYoZS5fb2l0LnVwZGF0ZSh1KSxlLl9vaXQuY2xlYXIodSx0LGkpLEM9QyYmZS5fb2l0LmlzU3VwcG9ydGVkKCkpO3ZhciB3PSFuJiYoZS5meGFhfHxDJiZlLmZ4YWFPcmRlckluZGVwZW5kZW50VHJhbnNsdWNlbmN5KTt3JiYoZS5fZnhhYS51cGRhdGUodSksZS5fZnhhYS5jbGVhcih1LHQsaSkpO3ZhciBFPXQuZnJhbWVidWZmZXI7Qz9FPWUuX29pdC5nZXRDb2xvckZyYW1lYnVmZmVyKCk6dyYmKEU9ZS5fZnhhYS5nZXRDb2xvckZyYW1lYnVmZmVyKCkpLHQuZnJhbWVidWZmZXI9ZiYmZS5zdW5CbG9vbT9lLl9zdW5Qb3N0UHJvY2Vzcy51cGRhdGUodSk6RSxvLm5lYXI9cy5mcnVzdHVtLm5lYXIsby5mYXI9cy5mcnVzdHVtLmZhcixjLnVwZGF0ZUZydXN0dW0obyksbChkKSYmcnQoZCxlLHUsdCksbChoKSYmcnQoaCxlLHUsdCksbChtKSYmZiYmKG0uZXhlY3V0ZSh1LHQpLGUuc3VuQmxvb20mJihlLl9zdW5Qb3N0UHJvY2Vzcy5leGVjdXRlKHUsRSksdC5mcmFtZWJ1ZmZlcj1FKSk7dmFyIGIsUz1lLl9kZXB0aENsZWFyQ29tbWFuZDtmb3IoQz8obChlLl9leGVjdXRlT0lURnVuY3Rpb24pfHwoZS5fZXhlY3V0ZU9JVEZ1bmN0aW9uPWZ1bmN0aW9uKGUsdCxpLG4pe2UuX29pdC5leGVjdXRlQ29tbWFuZHMoZSx0LGksbil9KSxiPWUuX2V4ZWN1dGVPSVRGdW5jdGlvbik6Yj1zdCx2PTA7eT52Oysrdil7dmFyIFQ9eS12LTEseD1fW1RdO28ubmVhcj14Lm5lYXIsby5mYXI9eC5mYXIsMCE9PVQmJihvLm5lYXIqPS45OSksYy51cGRhdGVGcnVzdHVtKG8pLFMuZXhlY3V0ZSh1LHQpO2Zvcih2YXIgQT14Lm9wYXF1ZUNvbW1hbmRzLFA9eC5vcGFxdWVJbmRleCxNPTA7UD5NOysrTSlydChBW01dLGUsdSx0KTtvLm5lYXI9eC5uZWFyLGMudXBkYXRlRnJ1c3R1bShvKSxBPXgudHJhbnNsdWNlbnRDb21tYW5kcyxBLmxlbmd0aD14LnRyYW5zbHVjZW50SW5kZXgsYihlLHJ0LHQsQSl9QyYmKHQuZnJhbWVidWZmZXI9dz9lLl9meGFhLmdldENvbG9yRnJhbWVidWZmZXIoKTp2b2lkIDAsZS5fb2l0LmV4ZWN1dGUodSx0KSksdyYmKHQuZnJhbWVidWZmZXI9dm9pZCAwLGUuX2Z4YWEuZXhlY3V0ZSh1LHQpKX1mdW5jdGlvbiB1dChlLHQpe2Zvcih2YXIgaT1lLmNvbnRleHQsbj1lLl9vdmVybGF5Q29tbWFuZExpc3Qscj1uLmxlbmd0aCxvPTA7cj5vOysrbyluW29dLmV4ZWN1dGUoaSx0KX1mdW5jdGlvbiBjdChlKXt2YXIgdD1lLmNvbnRleHQsaT1lLl9mcmFtZVN0YXRlLG49ZS5fY29tbWFuZExpc3Q7ZS5fZ2xvYmUmJmUuX2dsb2JlLnVwZGF0ZSh0LGksbiksZS5fcHJpbWl0aXZlcy51cGRhdGUodCxpLG4pLGwoZS5tb29uKSYmZS5tb29uLnVwZGF0ZSh0LGksbil9ZnVuY3Rpb24gZHQoZSl7Zm9yKHZhciB0PWUuYWZ0ZXJSZW5kZXIsaT0wLG49dC5sZW5ndGg7bj5pOysraSl0W2ldKCk7dC5sZW5ndGg9MH1mdW5jdGlvbiBodChlLHQpe2wodCl8fCh0PXkubm93KCkpLGUuX3ByZVJlbmRlci5yYWlzZUV2ZW50KGUsdCk7dmFyIGk9ZS5jb250ZXh0LnVuaWZvcm1TdGF0ZSxuPWUuX2ZyYW1lU3RhdGUsbz1DLmluY3JlbWVudFdyYXAobi5mcmFtZU51bWJlciwxNWU2LDEpO0soZSxvLHQpLG4ucGFzc2VzLnJlbmRlcj0hMCxuLmNyZWRpdERpc3BsYXkuYmVnaW5GcmFtZSgpO3ZhciBhPWUuY29udGV4dDtpLnVwZGF0ZShhLG4pLGUuX2NvbW1hbmRMaXN0Lmxlbmd0aD0wLGUuX292ZXJsYXlDb21tYW5kTGlzdC5sZW5ndGg9MCxjdChlKSxldChlKTt2YXIgdT1lLl9wYXNzU3RhdGU7aWYobHQoZSx1LHMoZS5iYWNrZ3JvdW5kQ29sb3Isci5CTEFDSykpLHV0KGUsdSksbi5jcmVkaXREaXNwbGF5LmVuZEZyYW1lKCksZS5kZWJ1Z1Nob3dGcmFtZXNQZXJTZWNvbmQpe2lmKCFsKGUuX3BlcmZvcm1hbmNlRGlzcGxheSkpe3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2Muc3R5bGUucG9zaXRpb249ImFic29sdXRlIixjLnN0eWxlLnRvcD0iMTBweCIsYy5zdHlsZS5sZWZ0PSIxMHB4Ijt2YXIgZD1lLl9jYW52YXMucGFyZW50Tm9kZTtkLmFwcGVuZENoaWxkKGMpO3ZhciBoPW5ldyBCKHtjb250YWluZXI6Y30pO2UuX3BlcmZvcm1hbmNlRGlzcGxheT1oLGUuX3BlcmZvcm1hbmNlQ29udGFpbmVyPWN9ZS5fcGVyZm9ybWFuY2VEaXNwbGF5LnVwZGF0ZSgpfWVsc2UgbChlLl9wZXJmb3JtYW5jZURpc3BsYXkpJiYoZS5fcGVyZm9ybWFuY2VEaXNwbGF5PWUuX3BlcmZvcm1hbmNlRGlzcGxheSYmZS5fcGVyZm9ybWFuY2VEaXNwbGF5LmRlc3Ryb3koKSxlLl9wZXJmb3JtYW5jZUNvbnRhaW5lci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUuX3BlcmZvcm1hbmNlQ29udGFpbmVyKSk7YS5lbmRGcmFtZSgpLGR0KG4pLGUuX3Bvc3RSZW5kZXIucmFpc2VFdmVudChlLHQpfWZ1bmN0aW9uIG10KGUsdCl7dmFyIGk9ZS5fY2FtZXJhLHI9aS5mcnVzdHVtLG89ZS5kcmF3aW5nQnVmZmVyV2lkdGgsYT1lLmRyYXdpbmdCdWZmZXJIZWlnaHQscz0yL28qdC54LTE7cyo9LjUqKHIucmlnaHQtci5sZWZ0KTt2YXIgbD0yL2EqKGEtdC55KS0xO2wqPS41KihyLnRvcC1yLmJvdHRvbSk7dmFyIHU9bi5jbG9uZShpLnBvc2l0aW9uLHh0KTtuLm11bHRpcGx5QnlTY2FsYXIoaS5yaWdodCxzLEF0KSxuLmFkZChBdCx1LHUpLG4ubXVsdGlwbHlCeVNjYWxhcihpLnVwLGwsQXQpLG4uYWRkKEF0LHUsdSksbi5mcm9tRWxlbWVudHModS56LHUueCx1LnksdSksUHQueD1vLFB0Lnk9YTt2YXIgYz1yLmdldFBpeGVsU2l6ZShQdCx2b2lkIDAsTXQpLGQ9VHQ7cmV0dXJuIGQucmlnaHQ9LjUqYy54LGQubGVmdD0tZC5yaWdodCxkLnRvcD0uNSpjLnksZC5ib3R0b209LWQudG9wLGQubmVhcj1yLm5lYXIsZC5mYXI9ci5mYXIsZC5jb21wdXRlQ3VsbGluZ1ZvbHVtZSh1LGkuZGlyZWN0aW9uV0MsaS51cFdDKX1mdW5jdGlvbiBmdChlLHQsaSxuKXt2YXIgcj1lLl9jYW1lcmEsbz1yLmZydXN0dW0sYT1vLm5lYXIscz1lLmRyYXdpbmdCdWZmZXJXaWR0aCxsPWUuZHJhd2luZ0J1ZmZlckhlaWdodCx1PU1hdGgudGFuKC41Km8uZm92eSksYz1vLmFzcGVjdFJhdGlvKnUsZD0yL3MqdC54LTEsaD0yL2wqKGwtdC55KS0xLG09ZCphKmMsZj1oKmEqdTtQdC54PXMsUHQueT1sO3ZhciBwPW8uZ2V0UGl4ZWxTaXplKFB0LHZvaWQgMCxNdCksdj0uNSpwLngqaSxnPS41KnAueSpuLF89SXQ7cmV0dXJuIF8udG9wPWYrZyxfLmJvdHRvbT1mLWcsXy5yaWdodD1tK3YsXy5sZWZ0PW0tdixfLm5lYXI9YSxfLmZhcj1vLmZhcixfLmNvbXB1dGVDdWxsaW5nVm9sdW1lKHIucG9zaXRpb25XQyxyLmRpcmVjdGlvbldDLHIudXBXQyl9ZnVuY3Rpb24gcHQoZSx0LGksbil7cmV0dXJuIGUuX21vZGU9PT1HLlNDRU5FMkQ/bXQoZSx0LGksbik6ZnQoZSx0LGksbil9dmFyIHZ0PWZ1bmN0aW9uKGUpe2U9cyhlLHMuRU1QVFlfT0JKRUNUKTt2YXIgdD1lLmNhbnZhcyxpPWUuY29udGV4dE9wdGlvbnMsbj1lLmNyZWRpdENvbnRhaW5lcixvPW5ldyB4KHQsaSk7bChuKXx8KG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iiksbi5zdHlsZS5wb3NpdGlvbj0iYWJzb2x1dGUiLG4uc3R5bGUuYm90dG9tPSIwIixuLnN0eWxlWyJ0ZXh0LXNoYWRvdyJdPSIwcHggMHB4IDJweCAjMDAwMDAwIixuLnN0eWxlLmNvbG9yPSIjZmZmZmZmIixuLnN0eWxlWyJmb250LXNpemUiXT0iMTBweCIsbi5zdHlsZVsicGFkZGluZy1yaWdodCJdPSI1cHgiLHQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChuKSksdGhpcy5faWQ9YSgpLHRoaXMuX2ZyYW1lU3RhdGU9bmV3IEQobmV3IE0obikpLHRoaXMuX2ZyYW1lU3RhdGUuc2NlbmUzRE9ubHk9cyhlLnNjZW5lM0RPbmx5LCExKSx0aGlzLl9wYXNzU3RhdGU9bmV3IEEobyksdGhpcy5fY2FudmFzPXQsdGhpcy5fY29udGV4dD1vLHRoaXMuX2dsb2JlPXZvaWQgMCx0aGlzLl9wcmltaXRpdmVzPW5ldyBXLHRoaXMuX3BpY2tGcmFtZWJ1ZmZlcj12b2lkIDAsdGhpcy5fdHdlZW5zPW5ldyBYLHRoaXMuX3NoYWRlckZyYW1lQ291bnQ9MCx0aGlzLl9zdW5Qb3N0UHJvY2Vzcz12b2lkIDAsdGhpcy5fY29tbWFuZExpc3Q9W10sdGhpcy5fZnJ1c3R1bUNvbW1hbmRzTGlzdD1bXSx0aGlzLl9vdmVybGF5Q29tbWFuZExpc3Q9W10sdGhpcy5fb2l0PXMoZS5vcmRlckluZGVwZW5kZW50VHJhbnNsdWNlbmN5LCEwKT9uZXcgTChvKTp2b2lkIDAsdGhpcy5fZXhlY3V0ZU9JVEZ1bmN0aW9uPXZvaWQgMCx0aGlzLl9meGFhPW5ldyBSLHRoaXMuX2NsZWFyQ29sb3JDb21tYW5kPW5ldyBUKHtjb2xvcjpuZXcgcixvd25lcjp0aGlzfSksdGhpcy5fZGVwdGhDbGVhckNvbW1hbmQ9bmV3IFQoe2RlcHRoOjEsb3duZXI6dGhpc30pLHRoaXMuX3RyYW5zaXRpb25lcj1uZXcgcSh0aGlzKSx0aGlzLl9yZW5kZXJFcnJvcj1uZXcgbSx0aGlzLl9wcmVSZW5kZXI9bmV3IG0sdGhpcy5fcG9zdFJlbmRlcj1uZXcgbSx0aGlzLnJldGhyb3dSZW5kZXJFcnJvcnM9ITEsdGhpcy5jb21wbGV0ZU1vcnBoT25Vc2VySW5wdXQ9ITAsdGhpcy5tb3JwaFN0YXJ0PW5ldyBtLHRoaXMubW9ycGhDb21wbGV0ZT1uZXcgbSx0aGlzLnNreUJveD12b2lkIDAsdGhpcy5za3lBdG1vc3BoZXJlPXZvaWQgMCx0aGlzLnN1bj12b2lkIDAsdGhpcy5zdW5CbG9vbT0hMCx0aGlzLl9zdW5CbG9vbT12b2lkIDAsdGhpcy5tb29uPXZvaWQgMCx0aGlzLmJhY2tncm91bmRDb2xvcj1yLmNsb25lKHIuQkxBQ0spLHRoaXMuX21vZGU9Ry5TQ0VORTNELHRoaXMuX21hcFByb2plY3Rpb249cyhlLm1hcFByb2plY3Rpb24sbmV3IGYpLHRoaXMubW9ycGhUaW1lPTEsdGhpcy5mYXJUb05lYXJSYXRpbz0xZTMsdGhpcy5kZWJ1Z0NvbW1hbmRGaWx0ZXI9dm9pZCAwLHRoaXMuZGVidWdTaG93Q29tbWFuZHM9ITEsdGhpcy5kZWJ1Z1Nob3dGcnVzdHVtcz0hMSx0aGlzLl9kZWJ1Z0ZydXN0dW1TdGF0aXN0aWNzPXZvaWQgMCx0aGlzLmRlYnVnU2hvd0ZyYW1lc1BlclNlY29uZD0hMSx0aGlzLmZ4YWFPcmRlckluZGVwZW5kZW50VHJhbnNsdWNlbmN5PSEwLHRoaXMuZnhhYT0hMSx0aGlzLl9wZXJmb3JtYW5jZURpc3BsYXk9dm9pZCAwLHRoaXMuX2RlYnVnU3BoZXJlPXZvaWQgMDt2YXIgdT1uZXcgUCh0aGlzKTt0aGlzLl9jYW1lcmE9dSx0aGlzLl9zY3JlZW5TcGFjZUNhbWVyYUNvbnRyb2xsZXI9bmV3IGoodGhpcyk7dmFyIGM9dS5mcnVzdHVtLm5lYXIsZD11LmZydXN0dW0uZmFyLGg9TWF0aC5jZWlsKE1hdGgubG9nKGQvYykvTWF0aC5sb2codGhpcy5mYXJUb05lYXJSYXRpbykpO1EoYyxkLHRoaXMuZmFyVG9OZWFyUmF0aW8saCx0aGlzLl9mcnVzdHVtQ29tbWFuZHNMaXN0KSxLKHRoaXMsMCx5Lm5vdygpKSx0aGlzLmluaXRpYWxpemVGcmFtZSgpfTt1KHZ0LnByb3RvdHlwZSx7Y2FudmFzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FudmFzfX0sZHJhd2luZ0J1ZmZlckhlaWdodDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuZHJhd2luZ0J1ZmZlckhlaWdodH19LGRyYXdpbmdCdWZmZXJXaWR0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRleHQuZHJhd2luZ0J1ZmZlcldpZHRofX0sbWF4aW11bUFsaWFzZWRMaW5lV2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250ZXh0Lm1heGltdW1BbGlhc2VkTGluZVdpZHRofX0sZ2xvYmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9nbG9iZX0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2dsb2JlPXRoaXMuX2dsb2JlJiZ0aGlzLl9nbG9iZS5kZXN0cm95KCksdGhpcy5fZ2xvYmU9ZX19LHByaW1pdGl2ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcmltaXRpdmVzfX0sY2FtZXJhOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FtZXJhfX0sc2NyZWVuU3BhY2VDYW1lcmFDb250cm9sbGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NyZWVuU3BhY2VDYW1lcmFDb250cm9sbGVyfX0sbWFwUHJvamVjdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21hcFByb2plY3Rpb259fSxmcmFtZVN0YXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZnJhbWVTdGF0ZX19LHR3ZWVuczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R3ZWVuc319LGltYWdlcnlMYXllcnM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdsb2JlLmltYWdlcnlMYXllcnN9fSx0ZXJyYWluUHJvdmlkZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdsb2JlLnRlcnJhaW5Qcm92aWRlcn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuZ2xvYmUudGVycmFpblByb3ZpZGVyPWV9fSxyZW5kZXJFcnJvcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlbmRlckVycm9yfX0scHJlUmVuZGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJlUmVuZGVyfX0scG9zdFJlbmRlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Bvc3RSZW5kZXJ9fSxjb250ZXh0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGV4dH19LGRlYnVnRnJ1c3R1bVN0YXRpc3RpY3M6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWJ1Z0ZydXN0dW1TdGF0aXN0aWNzfX0sc2NlbmUzRE9ubHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mcmFtZVN0YXRlLnNjZW5lM0RPbmx5fX0sb3JkZXJJbmRlcGVuZGVudFRyYW5zbHVjZW5jeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGwodGhpcy5fb2l0KX19LGlkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faWR9fSxtb2RlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9kZX0sc2V0OmZ1bmN0aW9uKGUpe2lmKHRoaXMuc2NlbmUzRE9ubHkmJmUhPT1HLlNDRU5FM0QpdGhyb3cgbmV3IGQoIk9ubHkgU2NlbmVNb2RlLlNDRU5FM0QgaXMgdmFsaWQgd2hlbiBzY2VuZTNET25seSBpcyB0cnVlLiIpO3RoaXMuX21vZGU9ZX19fSk7dmFyIGd0LF90PW5ldyB0LHl0PW5ldyBJLEN0PW5ldyBfLHd0PW5ldyB3KDAsMCwxLDAsMSwwLDAsMCwwLDEsMCwwLDAsMCwwLDEpO3d0PXcuaW52ZXJzZVRyYW5zZm9ybWF0aW9uKHd0LHd0KTt2YXIgRXQ9bmV3IFYsYnQ9bmV3IGssU3Q9bmV3IE47dnQucHJvdG90eXBlLmluaXRpYWxpemVGcmFtZT1mdW5jdGlvbigpezEyMD09PXRoaXMuX3NoYWRlckZyYW1lQ291bnQrKyYmKHRoaXMuX3NoYWRlckZyYW1lQ291bnQ9MCx0aGlzLl9jb250ZXh0LnNoYWRlckNhY2hlLmRlc3Ryb3lSZWxlYXNlZFNoYWRlclByb2dyYW1zKCkpLHRoaXMuX3R3ZWVucy51cGRhdGUoKSx0aGlzLl9jYW1lcmEudXBkYXRlKHRoaXMuX21vZGUpLHRoaXMuX3NjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlci51cGRhdGUoKX0sdnQucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihlKXt0cnl7aHQodGhpcyxlKX1jYXRjaCh0KXtpZih0aGlzLl9yZW5kZXJFcnJvci5yYWlzZUV2ZW50KHRoaXMsdCksdGhpcy5yZXRocm93UmVuZGVyRXJyb3JzKXRocm93IHR9fTt2YXIgVHQ9bmV3IE4seHQ9bmV3IG4sQXQ9bmV3IG4sUHQ9bmV3IGksTXQ9bmV3IGksSXQ9bmV3IGssRHQ9MyxPdD0zLFJ0PW5ldyBlKDAsMCxEdCxPdCksTHQ9bmV3IHIoMCwwLDAsMCksTnQ9bmV3IGk7cmV0dXJuIHZ0LnByb3RvdHlwZS5waWNrPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2NvbnRleHQsaT10LnVuaWZvcm1TdGF0ZSxuPXRoaXMuX2ZyYW1lU3RhdGUscj1ILnRyYW5zZm9ybVdpbmRvd1RvRHJhd2luZ0J1ZmZlcih0aGlzLGUsTnQpO2wodGhpcy5fcGlja0ZyYW1lYnVmZmVyKXx8KHRoaXMuX3BpY2tGcmFtZWJ1ZmZlcj10LmNyZWF0ZVBpY2tGcmFtZWJ1ZmZlcigpKSxLKHRoaXMsbi5mcmFtZU51bWJlcixuLnRpbWUpLG4uY3VsbGluZ1ZvbHVtZT1wdCh0aGlzLHIsRHQsT3QpLG4ucGFzc2VzLnBpY2s9ITAsaS51cGRhdGUodCxuKSx0aGlzLl9jb21tYW5kTGlzdC5sZW5ndGg9MCxjdCh0aGlzKSxldCh0aGlzKSxSdC54PXIueC0uNSooRHQtMSksUnQueT10aGlzLmRyYXdpbmdCdWZmZXJIZWlnaHQtci55LS41KihPdC0xKSxsdCh0aGlzLHRoaXMuX3BpY2tGcmFtZWJ1ZmZlci5iZWdpbihSdCksTHQsITApO3ZhciBvPXRoaXMuX3BpY2tGcmFtZWJ1ZmZlci5lbmQoUnQpO3JldHVybiB0LmVuZEZyYW1lKCksZHQobiksb30sdnQucHJvdG90eXBlLmRyaWxsUGljaz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10saT10aGlzLnBpY2soZSk7bChpKSYmbChpLnByaW1pdGl2ZSk7KXt2YXIgbj1pLnByaW1pdGl2ZTtpZih0LnB1c2goaSksbChuLnNob3cpKW4uc2hvdz0hMTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBuLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKXt2YXIgcj1uLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKGkuaWQpO2wocikmJmwoci5zaG93KSYmKHIuc2hvdz1TLnRvVmFsdWUoITEpKX1pPXRoaXMucGljayhlKX1mb3IodmFyIG89MDtvPHQubGVuZ3RoOysrbyl7dmFyIGE9dFtvXS5wcmltaXRpdmU7aWYobChhLnNob3cpKWEuc2hvdz0hMDtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBhLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKXt2YXIgcz1hLmdldEdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGVzKHRbb10uaWQpO2wocykmJmwocy5zaG93KSYmKHMuc2hvdz1TLnRvVmFsdWUoITApKX19cmV0dXJuIHR9LHZ0LnByb3RvdHlwZS5jb21wbGV0ZU1vcnBoPWZ1bmN0aW9uKCl7dGhpcy5fdHJhbnNpdGlvbmVyLmNvbXBsZXRlTW9ycGgoKX0sdnQucHJvdG90eXBlLm1vcnBoVG8yRD1mdW5jdGlvbihlKXt2YXIgdCxpPXRoaXMuZ2xvYmU7dD1sKGkpP2kuZWxsaXBzb2lkOnRoaXMubWFwUHJvamVjdGlvbi5lbGxpcHNvaWQsZT1zKGUsMiksdGhpcy5fdHJhbnNpdGlvbmVyLm1vcnBoVG8yRChlLHQpfSx2dC5wcm90b3R5cGUubW9ycGhUb0NvbHVtYnVzVmlldz1mdW5jdGlvbihlKXt2YXIgdCxpPXRoaXMuZ2xvYmU7dD1sKGkpP2kuZWxsaXBzb2lkOnRoaXMubWFwUHJvamVjdGlvbi5lbGxpcHNvaWQsZT1zKGUsMiksdGhpcy5fdHJhbnNpdGlvbmVyLm1vcnBoVG9Db2x1bWJ1c1ZpZXcoZSx0KX0sdnQucHJvdG90eXBlLm1vcnBoVG8zRD1mdW5jdGlvbihlKXt2YXIgdCxpPXRoaXMuZ2xvYmU7dD1sKGkpP2kuZWxsaXBzb2lkOnRoaXMubWFwUHJvamVjdGlvbi5lbGxpcHNvaWQsZT1zKGUsMiksdGhpcy5fdHJhbnNpdGlvbmVyLm1vcnBoVG8zRChlLHQpfSx2dC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdnQucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHdlZW5zLnJlbW92ZUFsbCgpLHRoaXMuX3NjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlcj10aGlzLl9zY3JlZW5TcGFjZUNhbWVyYUNvbnRyb2xsZXImJnRoaXMuX3NjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlci5kZXN0cm95KCksdGhpcy5fcGlja0ZyYW1lYnVmZmVyPXRoaXMuX3BpY2tGcmFtZWJ1ZmZlciYmdGhpcy5fcGlja0ZyYW1lYnVmZmVyLmRlc3Ryb3koKSx0aGlzLl9wcmltaXRpdmVzPXRoaXMuX3ByaW1pdGl2ZXMmJnRoaXMuX3ByaW1pdGl2ZXMuZGVzdHJveSgpLHRoaXMuX2dsb2JlPXRoaXMuX2dsb2JlJiZ0aGlzLl9nbG9iZS5kZXN0cm95KCksdGhpcy5za3lCb3g9dGhpcy5za3lCb3gmJnRoaXMuc2t5Qm94LmRlc3Ryb3koKSx0aGlzLnNreUF0bW9zcGhlcmU9dGhpcy5za3lBdG1vc3BoZXJlJiZ0aGlzLnNreUF0bW9zcGhlcmUuZGVzdHJveSgpLHRoaXMuX2RlYnVnU3BoZXJlPXRoaXMuX2RlYnVnU3BoZXJlJiZ0aGlzLl9kZWJ1Z1NwaGVyZS5kZXN0cm95KCksdGhpcy5zdW49dGhpcy5zdW4mJnRoaXMuc3VuLmRlc3Ryb3koKSx0aGlzLl9zdW5Qb3N0UHJvY2Vzcz10aGlzLl9zdW5Qb3N0UHJvY2VzcyYmdGhpcy5fc3VuUG9zdFByb2Nlc3MuZGVzdHJveSgpLHRoaXMuX3RyYW5zaXRpb25lci5kZXN0cm95KCksbCh0aGlzLl9vaXQpJiZ0aGlzLl9vaXQuZGVzdHJveSgpLHRoaXMuX2Z4YWEuZGVzdHJveSgpLHRoaXMuX2NvbnRleHQ9dGhpcy5fY29udGV4dCYmdGhpcy5fY29udGV4dC5kZXN0cm95KCksdGhpcy5fZnJhbWVTdGF0ZS5jcmVkaXREaXNwbGF5LmRlc3Ryb3koKSxsKHRoaXMuX3BlcmZvcm1hbmNlRGlzcGxheSkmJih0aGlzLl9wZXJmb3JtYW5jZURpc3BsYXk9dGhpcy5fcGVyZm9ybWFuY2VEaXNwbGF5JiZ0aGlzLl9wZXJmb3JtYW5jZURpc3BsYXkuZGVzdHJveSgpLHRoaXMuX3BlcmZvcm1hbmNlQ29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5fcGVyZm9ybWFuY2VDb250YWluZXIpKSxjKHRoaXMpfSx2dH0pLGRlZmluZSgiU2hhZGVycy9Ta3lBdG1vc3BoZXJlRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybicvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMDAtMjAwNSwgU2VhbiBPXCdOZWlsIChzX3Bfb25laWxAaG90bWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogXG4gKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXRcbiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uc1xuICogYXJlIG1ldDpcbiAqIFxuICogKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsXG4gKiAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4gKiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAqICAgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvblxuICogICBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi5cbiAqICogTmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgcHJvamVjdCBub3IgdGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMgbWF5IGJlXG4gKiAgIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXRcbiAqICAgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLlxuICogXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyJcbiAqIEFORCBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEVcbiAqIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRVxuICogRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBPV05FUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFXG4gKiBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTFxuICogREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1JcbiAqIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSXG4gKiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLFxuICogT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0VcbiAqIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKlxuICogTW9kaWZpY2F0aW9ucyBtYWRlIGJ5IEFuYWx5dGljYWwgR3JhcGhpY3MsIEluYy5cbiAqL1xuIFxuIC8vIENvZGU6ICBodHRwOi8vc3BvbmVpbC5uZXQvXG4gLy8gR1BVIEdlbXMgMiBBcnRpY2xlOiAgaHR0cDovL2h0dHAuZGV2ZWxvcGVyLm52aWRpYS5jb20vR1BVR2VtczIvZ3B1Z2VtczJfY2hhcHRlcjE2Lmh0bWxcbiBcbmNvbnN0IGZsb2F0IGcgPSAtMC45NTtcbmNvbnN0IGZsb2F0IGcyID0gZyAqIGc7XG5cbnZhcnlpbmcgdmVjMyB2X3JheWxlaWdoQ29sb3I7XG52YXJ5aW5nIHZlYzMgdl9taWVDb2xvcjtcbnZhcnlpbmcgdmVjMyB2X3RvQ2FtZXJhO1xudmFyeWluZyB2ZWMzIHZfcG9zaXRpb25FQztcblxudm9pZCBtYWluICh2b2lkKVxue1xuICAgIC8vIFRPRE86IG1ha2UgYXJiaXRyYXJ5IGVsbGlwc29pZFxuICAgIGN6bV9lbGxpcHNvaWQgZWxsaXBzb2lkID0gY3ptX2dldFdnczg0RWxsaXBzb2lkRUMoKTtcbiAgICBcbiAgICB2ZWMzIGRpcmVjdGlvbiA9IG5vcm1hbGl6ZSh2X3Bvc2l0aW9uRUMpO1xuICAgIGN6bV9yYXkgcmF5ID0gY3ptX3JheSh2ZWMzKDAuMCksIGRpcmVjdGlvbik7XG4gICAgXG4gICAgY3ptX3JheVNlZ21lbnQgaW50ZXJzZWN0aW9uID0gY3ptX3JheUVsbGlwc29pZEludGVyc2VjdGlvbkludGVydmFsKHJheSwgZWxsaXBzb2lkKTtcbiAgICBpZiAoIWN6bV9pc0VtcHR5KGludGVyc2VjdGlvbikpIHtcbiAgICAgICAgZGlzY2FyZDtcbiAgICB9XG4gICAgXG4gICAgLy8gRXh0cmEgbm9ybWFsaXplIGFkZGVkIGZvciBBbmRyb2lkXG4gICAgZmxvYXQgZkNvcyA9IGRvdChjem1fc3VuRGlyZWN0aW9uV0MsIG5vcm1hbGl6ZSh2X3RvQ2FtZXJhKSkgLyBsZW5ndGgodl90b0NhbWVyYSk7XG4gICAgZmxvYXQgZlJheWxlaWdoUGhhc2UgPSAwLjc1ICogKDEuMCArIGZDb3MqZkNvcyk7XG4gICAgZmxvYXQgZk1pZVBoYXNlID0gMS41ICogKCgxLjAgLSBnMikgLyAoMi4wICsgZzIpKSAqICgxLjAgKyBmQ29zKmZDb3MpIC8gcG93KDEuMCArIGcyIC0gMi4wKmcqZkNvcywgMS41KTtcbiAgICBcbiAgICBjb25zdCBmbG9hdCBmRXhwb3N1cmUgPSAyLjA7XG4gICAgXG4gICAgdmVjMyByZ2IgPSBmUmF5bGVpZ2hQaGFzZSAqIHZfcmF5bGVpZ2hDb2xvciArIGZNaWVQaGFzZSAqIHZfbWllQ29sb3I7XG4gICAgcmdiID0gdmVjMygxLjApIC0gZXhwKC1mRXhwb3N1cmUgKiByZ2IpO1xuICAgIGZsb2F0IGwgPSBjem1fbHVtaW5hbmNlKHJnYik7XG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChyZ2IsIG1pbihzbW9vdGhzdGVwKDAuMCwgMC4xLCBsKSwgMS4wKSAqIHNtb290aHN0ZXAoMC4wLCAxLjAsIGN6bV9tb3JwaFRpbWUpKTtcbn1cbid9KSxkZWZpbmUoIlNoYWRlcnMvU2t5QXRtb3NwaGVyZVZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDAwLTIwMDUsIFNlYW4gTydOZWlsIChzX3Bfb25laWxAaG90bWFpbC5jb20pXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogXG4gKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXRcbiAqIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uc1xuICogYXJlIG1ldDpcbiAqIFxuICogKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsXG4gKiAgIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4gKiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSxcbiAqICAgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvblxuICogICBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi5cbiAqICogTmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgcHJvamVjdCBub3IgdGhlIG5hbWVzIG9mIGl0cyBjb250cmlidXRvcnMgbWF5IGJlXG4gKiAgIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXRcbiAqICAgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLlxuICogXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIlxuICogQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRVxuICogSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFXG4gKiBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIE9XTkVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEVcbiAqIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMXG4gKiBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUlxuICogU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVJcbiAqIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksXG4gKiBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRVxuICogT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbiAqXG4gKiBNb2RpZmljYXRpb25zIG1hZGUgYnkgQW5hbHl0aWNhbCBHcmFwaGljcywgSW5jLlxuICovXG4gXG4gLy8gQ29kZTogIGh0dHA6Ly9zcG9uZWlsLm5ldC9cbiAvLyBHUFUgR2VtcyAyIEFydGljbGU6ICBodHRwOi8vaHR0cC5kZXZlbG9wZXIubnZpZGlhLmNvbS9HUFVHZW1zMi9ncHVnZW1zMl9jaGFwdGVyMTYuaHRtbFxuICBcbmF0dHJpYnV0ZSB2ZWM0IHBvc2l0aW9uO1xuXG51bmlmb3JtIGZsb2F0IGZDYW1lcmFIZWlnaHQ7XG51bmlmb3JtIGZsb2F0IGZDYW1lcmFIZWlnaHQyO1xudW5pZm9ybSBmbG9hdCBmT3V0ZXJSYWRpdXM7ICAgICAvLyBUaGUgb3V0ZXIgKGF0bW9zcGhlcmUpIHJhZGl1c1xudW5pZm9ybSBmbG9hdCBmT3V0ZXJSYWRpdXMyOyAgICAvLyBmT3V0ZXJSYWRpdXNeMlxudW5pZm9ybSBmbG9hdCBmSW5uZXJSYWRpdXM7ICAgICAvLyBUaGUgaW5uZXIgKHBsYW5ldGFyeSkgcmFkaXVzXG51bmlmb3JtIGZsb2F0IGZTY2FsZTsgICAgICAgICAgIC8vIDEgLyAoZk91dGVyUmFkaXVzIC0gZklubmVyUmFkaXVzKVxudW5pZm9ybSBmbG9hdCBmU2NhbGVEZXB0aDsgICAgICAvLyBUaGUgc2NhbGUgZGVwdGggKGkuZS4gdGhlIGFsdGl0dWRlIGF0IHdoaWNoIHRoZSBhdG1vc3BoZXJlJ3MgYXZlcmFnZSBkZW5zaXR5IGlzIGZvdW5kKVxudW5pZm9ybSBmbG9hdCBmU2NhbGVPdmVyU2NhbGVEZXB0aDsgLy8gZlNjYWxlIC8gZlNjYWxlRGVwdGhcblxuY29uc3QgZmxvYXQgS3IgPSAwLjAwMjU7XG5jb25zdCBmbG9hdCBmS3I0UEkgPSBLciAqIDQuMCAqIGN6bV9waTtcbmNvbnN0IGZsb2F0IEttID0gMC4wMDE1O1xuY29uc3QgZmxvYXQgZkttNFBJID0gS20gKiA0LjAgKiBjem1fcGk7XG5jb25zdCBmbG9hdCBFU3VuID0gMTUuMDtcbmNvbnN0IGZsb2F0IGZLbUVTdW4gPSBLbSAqIEVTdW47XG5jb25zdCBmbG9hdCBmS3JFU3VuID0gS3IgKiBFU3VuO1xuY29uc3QgdmVjMyB2M0ludldhdmVsZW5ndGggPSB2ZWMzKFxuICAgIDUuNjAyMDQ0NzQ2MzMyNDEsICAvLyBSZWQgPSAxLjAgLyBNYXRoLnBvdygwLjY1MCwgNC4wKVxuICAgIDkuNDczMjg0NDM3OTIzMDM4LCAvLyBHcmVlbiA9IDEuMCAvIE1hdGgucG93KDAuNTcwLCA0LjApXG4gICAgMTkuNjQzODAyNjEwNDc3MjA2KTsgLy8gQmx1ZSA9IDEuMCAvIE1hdGgucG93KDAuNDc1LCA0LjApXG5jb25zdCBmbG9hdCByYXlsZWlnaFNjYWxlRGVwdGggPSAwLjI1O1xuICAgICAgICAgIFxuY29uc3QgaW50IG5TYW1wbGVzID0gMjtcbmNvbnN0IGZsb2F0IGZTYW1wbGVzID0gMi4wO1xuXG52YXJ5aW5nIHZlYzMgdl9yYXlsZWlnaENvbG9yO1xudmFyeWluZyB2ZWMzIHZfbWllQ29sb3I7XG52YXJ5aW5nIHZlYzMgdl90b0NhbWVyYTtcbnZhcnlpbmcgdmVjMyB2X3Bvc2l0aW9uRUM7XG5cbmZsb2F0IHNjYWxlKGZsb2F0IGZDb3MpXG57XG4gICAgZmxvYXQgeCA9IDEuMCAtIGZDb3M7XG4gICAgcmV0dXJuIGZTY2FsZURlcHRoICogZXhwKC0wLjAwMjg3ICsgeCooMC40NTkgKyB4KigzLjgzICsgeCooLTYuODAgKyB4KjUuMjUpKSkpO1xufVxuXG52b2lkIG1haW4odm9pZClcbntcbiAgICAvLyBHZXQgdGhlIHJheSBmcm9tIHRoZSBjYW1lcmEgdG8gdGhlIHZlcnRleCBhbmQgaXRzIGxlbmd0aCAod2hpY2ggaXMgdGhlIGZhciBwb2ludCBvZiB0aGUgcmF5IHBhc3NpbmcgdGhyb3VnaCB0aGUgYXRtb3NwaGVyZSlcbiAgICB2ZWMzIHYzUG9zID0gcG9zaXRpb24ueHl6O1xuICAgIHZlYzMgdjNSYXkgPSB2M1BvcyAtIGN6bV92aWV3ZXJQb3NpdGlvbldDO1xuICAgIGZsb2F0IGZGYXIgPSBsZW5ndGgodjNSYXkpO1xuICAgIHYzUmF5IC89IGZGYXI7XG5cbiNpZmRlZiBTS1lfRlJPTV9TUEFDRVxuICAgIC8vIENhbGN1bGF0ZSB0aGUgY2xvc2VzdCBpbnRlcnNlY3Rpb24gb2YgdGhlIHJheSB3aXRoIHRoZSBvdXRlciBhdG1vc3BoZXJlICh3aGljaCBpcyB0aGUgbmVhciBwb2ludCBvZiB0aGUgcmF5IHBhc3NpbmcgdGhyb3VnaCB0aGUgYXRtb3NwaGVyZSlcbiAgICBmbG9hdCBCID0gMi4wICogZG90KGN6bV92aWV3ZXJQb3NpdGlvbldDLCB2M1JheSk7XG4gICAgZmxvYXQgQyA9IGZDYW1lcmFIZWlnaHQyIC0gZk91dGVyUmFkaXVzMjtcbiAgICBmbG9hdCBmRGV0ID0gbWF4KDAuMCwgQipCIC0gNC4wICogQyk7XG4gICAgZmxvYXQgZk5lYXIgPSAwLjUgKiAoLUIgLSBzcXJ0KGZEZXQpKTtcblxuICAgIC8vIENhbGN1bGF0ZSB0aGUgcmF5J3Mgc3RhcnRpbmcgcG9zaXRpb24sIHRoZW4gY2FsY3VsYXRlIGl0cyBzY2F0dGVyaW5nIG9mZnNldFxuICAgIHZlYzMgdjNTdGFydCA9IGN6bV92aWV3ZXJQb3NpdGlvbldDICsgdjNSYXkgKiBmTmVhcjtcbiAgICBmRmFyIC09IGZOZWFyO1xuICAgIGZsb2F0IGZTdGFydEFuZ2xlID0gZG90KHYzUmF5LCB2M1N0YXJ0KSAvIGZPdXRlclJhZGl1cztcbiAgICBmbG9hdCBmU3RhcnREZXB0aCA9IGV4cCgtMS4wIC8gZlNjYWxlRGVwdGgpO1xuICAgIGZsb2F0IGZTdGFydE9mZnNldCA9IGZTdGFydERlcHRoKnNjYWxlKGZTdGFydEFuZ2xlKTtcbiNlbHNlIC8vIFNLWV9GUk9NX0FUTU9TUEhFUkVcbiAgICAvLyBDYWxjdWxhdGUgdGhlIHJheSdzIHN0YXJ0aW5nIHBvc2l0aW9uLCB0aGVuIGNhbGN1bGF0ZSBpdHMgc2NhdHRlcmluZyBvZmZzZXRcbiAgICB2ZWMzIHYzU3RhcnQgPSBjem1fdmlld2VyUG9zaXRpb25XQztcbiAgICBmbG9hdCBmSGVpZ2h0ID0gbGVuZ3RoKHYzU3RhcnQpO1xuICAgIGZsb2F0IGZEZXB0aCA9IGV4cChmU2NhbGVPdmVyU2NhbGVEZXB0aCAqIChmSW5uZXJSYWRpdXMgLSBmQ2FtZXJhSGVpZ2h0KSk7XG4gICAgZmxvYXQgZlN0YXJ0QW5nbGUgPSBkb3QodjNSYXksIHYzU3RhcnQpIC8gZkhlaWdodDtcbiAgICBmbG9hdCBmU3RhcnRPZmZzZXQgPSBmRGVwdGgqc2NhbGUoZlN0YXJ0QW5nbGUpO1xuI2VuZGlmXG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSBzY2F0dGVyaW5nIGxvb3AgdmFyaWFibGVzXG4gICAgZmxvYXQgZlNhbXBsZUxlbmd0aCA9IGZGYXIgLyBmU2FtcGxlcztcbiAgICBmbG9hdCBmU2NhbGVkTGVuZ3RoID0gZlNhbXBsZUxlbmd0aCAqIGZTY2FsZTtcbiAgICB2ZWMzIHYzU2FtcGxlUmF5ID0gdjNSYXkgKiBmU2FtcGxlTGVuZ3RoO1xuICAgIHZlYzMgdjNTYW1wbGVQb2ludCA9IHYzU3RhcnQgKyB2M1NhbXBsZVJheSAqIDAuNTtcblxuICAgIC8vIE5vdyBsb29wIHRocm91Z2ggdGhlIHNhbXBsZSByYXlzXG4gICAgdmVjMyB2M0Zyb250Q29sb3IgPSB2ZWMzKDAuMCwgMC4wLCAwLjApO1xuICAgIGZvcihpbnQgaT0wOyBpPG5TYW1wbGVzOyBpKyspXG4gICAge1xuICAgICAgICBmbG9hdCBmSGVpZ2h0ID0gbGVuZ3RoKHYzU2FtcGxlUG9pbnQpO1xuICAgICAgICBmbG9hdCBmRGVwdGggPSBleHAoZlNjYWxlT3ZlclNjYWxlRGVwdGggKiAoZklubmVyUmFkaXVzIC0gZkhlaWdodCkpO1xuICAgICAgICB2ZWMzIGxpZ2h0UG9zaXRpb24gPSBub3JtYWxpemUoY3ptX3ZpZXdlclBvc2l0aW9uV0MpOyAvLyBjem1fc3VuRGlyZWN0aW9uV0NcbiAgICAgICAgZmxvYXQgZkxpZ2h0QW5nbGUgPSBkb3QobGlnaHRQb3NpdGlvbiwgdjNTYW1wbGVQb2ludCkgLyBmSGVpZ2h0O1xuICAgICAgICBmbG9hdCBmQ2FtZXJhQW5nbGUgPSBkb3QodjNSYXksIHYzU2FtcGxlUG9pbnQpIC8gZkhlaWdodDtcbiAgICAgICAgZmxvYXQgZlNjYXR0ZXIgPSAoZlN0YXJ0T2Zmc2V0ICsgZkRlcHRoKihzY2FsZShmTGlnaHRBbmdsZSkgLSBzY2FsZShmQ2FtZXJhQW5nbGUpKSk7XG4gICAgICAgIHZlYzMgdjNBdHRlbnVhdGUgPSBleHAoLWZTY2F0dGVyICogKHYzSW52V2F2ZWxlbmd0aCAqIGZLcjRQSSArIGZLbTRQSSkpO1xuICAgICAgICB2M0Zyb250Q29sb3IgKz0gdjNBdHRlbnVhdGUgKiAoZkRlcHRoICogZlNjYWxlZExlbmd0aCk7XG4gICAgICAgIHYzU2FtcGxlUG9pbnQgKz0gdjNTYW1wbGVSYXk7XG4gICAgfVxuXG4gICAgLy8gRmluYWxseSwgc2NhbGUgdGhlIE1pZSBhbmQgUmF5bGVpZ2ggY29sb3JzIGFuZCBzZXQgdXAgdGhlIHZhcnlpbmcgdmFyaWFibGVzIGZvciB0aGUgcGl4ZWwgc2hhZGVyXG4gICAgdl9taWVDb2xvciA9IHYzRnJvbnRDb2xvciAqIGZLbUVTdW47XG4gICAgdl9yYXlsZWlnaENvbG9yID0gdjNGcm9udENvbG9yICogKHYzSW52V2F2ZWxlbmd0aCAqIGZLckVTdW4pO1xuICAgIHZfdG9DYW1lcmEgPSBjem1fdmlld2VyUG9zaXRpb25XQyAtIHYzUG9zO1xuICAgIHZfcG9zaXRpb25FQyA9IChjem1fbW9kZWxWaWV3ICogcG9zaXRpb24pLnh5ejtcbiAgICBnbF9Qb3NpdGlvbiA9IGN6bV9tb2RlbFZpZXdQcm9qZWN0aW9uICogcG9zaXRpb247XG59XG4ifSksZGVmaW5lKCJTY2VuZS9Ta3lBdG1vc3BoZXJlIixbIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9FbGxpcHNvaWQiLCIuLi9Db3JlL0VsbGlwc29pZEdlb21ldHJ5IiwiLi4vQ29yZS9HZW9tZXRyeVBpcGVsaW5lIiwiLi4vQ29yZS9WZXJ0ZXhGb3JtYXQiLCIuLi9SZW5kZXJlci9CdWZmZXJVc2FnZSIsIi4uL1JlbmRlcmVyL2NyZWF0ZVNoYWRlclNvdXJjZSIsIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kIiwiLi4vU2hhZGVycy9Ta3lBdG1vc3BoZXJlRlMiLCIuLi9TaGFkZXJzL1NreUF0bW9zcGhlcmVWUyIsIi4vQmxlbmRpbmdTdGF0ZSIsIi4vQ3VsbEZhY2UiLCIuL1NjZW5lTW9kZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdil7InVzZSBzdHJpY3QiO3ZhciBnPWZ1bmN0aW9uKGkpe2k9dChpLG8uV0dTODQpLHRoaXMuc2hvdz0hMCx0aGlzLl9lbGxpcHNvaWQ9aSx0aGlzLl9jb21tYW5kPW5ldyBkKHtvd25lcjp0aGlzfSksdGhpcy5fc3BTa3lGcm9tU3BhY2U9dm9pZCAwLHRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmU9dm9pZCAwLHRoaXMuX2ZDYW1lcmFIZWlnaHQ9dm9pZCAwLHRoaXMuX2ZDYW1lcmFIZWlnaHQyPXZvaWQgMCx0aGlzLl9vdXRlclJhZGl1cz1lLm1heGltdW1Db21wb25lbnQoZS5tdWx0aXBseUJ5U2NhbGFyKGkucmFkaWksMS4wMjUsbmV3IGUpKTt2YXIgbj1pLm1heGltdW1SYWRpdXMscj0uMjUsYT10aGlzO3RoaXMuX2NvbW1hbmQudW5pZm9ybU1hcD17ZkNhbWVyYUhlaWdodDpmdW5jdGlvbigpe3JldHVybiBhLl9mQ2FtZXJhSGVpZ2h0fSxmQ2FtZXJhSGVpZ2h0MjpmdW5jdGlvbigpe3JldHVybiBhLl9mQ2FtZXJhSGVpZ2h0Mn0sZk91dGVyUmFkaXVzOmZ1bmN0aW9uKCl7cmV0dXJuIGEuX291dGVyUmFkaXVzfSxmT3V0ZXJSYWRpdXMyOmZ1bmN0aW9uKCl7cmV0dXJuIGEuX291dGVyUmFkaXVzKmEuX291dGVyUmFkaXVzfSxmSW5uZXJSYWRpdXM6ZnVuY3Rpb24oKXtyZXR1cm4gbn0sZlNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIDEvKGEuX291dGVyUmFkaXVzLW4pfSxmU2NhbGVEZXB0aDpmdW5jdGlvbigpe3JldHVybiByfSxmU2NhbGVPdmVyU2NhbGVEZXB0aDpmdW5jdGlvbigpe3JldHVybiAxLyhhLl9vdXRlclJhZGl1cy1uKS9yfX19O3JldHVybiBuKGcucHJvdG90eXBlLHtlbGxpcHNvaWQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbGxpcHNvaWR9fX0pLGcucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LG4pe2lmKCF0aGlzLnNob3cpcmV0dXJuIHZvaWQgMDtpZihuLm1vZGUhPT12LlNDRU5FM0QmJm4ubW9kZSE9PXYuTU9SUEhJTkcpcmV0dXJuIHZvaWQgMDtpZighbi5wYXNzZXMucmVuZGVyKXJldHVybiB2b2lkIDA7dmFyIHI9dGhpcy5fY29tbWFuZDtpZighaShyLnZlcnRleEFycmF5KSl7dmFyIG89YS5jcmVhdGVHZW9tZXRyeShuZXcgYSh7cmFkaWk6ZS5tdWx0aXBseUJ5U2NhbGFyKHRoaXMuX2VsbGlwc29pZC5yYWRpaSwxLjAyNSxuZXcgZSksc2xpY2VQYXJ0aXRpb25zOjI1NixzdGFja1BhcnRpdGlvbnM6MjU2LHZlcnRleEZvcm1hdDpsLlBPU0lUSU9OX09OTFl9KSk7ci52ZXJ0ZXhBcnJheT10LmNyZWF0ZVZlcnRleEFycmF5RnJvbUdlb21ldHJ5KHtnZW9tZXRyeTpvLGF0dHJpYnV0ZUxvY2F0aW9uczpzLmNyZWF0ZUF0dHJpYnV0ZUxvY2F0aW9ucyhvKSxidWZmZXJVc2FnZTp1LlNUQVRJQ19EUkFXfSksci5yZW5kZXJTdGF0ZT10LmNyZWF0ZVJlbmRlclN0YXRlKHtjdWxsOntlbmFibGVkOiEwLGZhY2U6cC5GUk9OVH0sYmxlbmRpbmc6Zi5BTFBIQV9CTEVORH0pO3ZhciBkPWMoe2RlZmluZXM6WyJTS1lfRlJPTV9TUEFDRSJdLHNvdXJjZXM6W21dfSk7dGhpcy5fc3BTa3lGcm9tU3BhY2U9dC5jcmVhdGVTaGFkZXJQcm9ncmFtKGQsaCksZD1jKHtkZWZpbmVzOlsiU0tZX0ZST01fQVRNT1NQSEVSRSJdLHNvdXJjZXM6W21dfSksdGhpcy5fc3BTa3lGcm9tQXRtb3NwaGVyZT10LmNyZWF0ZVNoYWRlclByb2dyYW0oZCxoKX12YXIgZz1uLmNhbWVyYS5wb3NpdGlvbldDO3JldHVybiB0aGlzLl9mQ2FtZXJhSGVpZ2h0Mj1lLm1hZ25pdHVkZVNxdWFyZWQoZyksdGhpcy5fZkNhbWVyYUhlaWdodD1NYXRoLnNxcnQodGhpcy5fZkNhbWVyYUhlaWdodDIpLHIuc2hhZGVyUHJvZ3JhbT10aGlzLl9mQ2FtZXJhSGVpZ2h0PnRoaXMuX291dGVyUmFkaXVzP3RoaXMuX3NwU2t5RnJvbVNwYWNlOnRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmUscn0sZy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2NvbW1hbmQ7cmV0dXJuIGUudmVydGV4QXJyYXk9ZS52ZXJ0ZXhBcnJheSYmZS52ZXJ0ZXhBcnJheS5kZXN0cm95KCksdGhpcy5fc3BTa3lGcm9tU3BhY2U9dGhpcy5fc3BTa3lGcm9tU3BhY2UmJnRoaXMuX3NwU2t5RnJvbVNwYWNlLmRlc3Ryb3koKSx0aGlzLl9zcFNreUZyb21BdG1vc3BoZXJlPXRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmUmJnRoaXMuX3NwU2t5RnJvbUF0bW9zcGhlcmUuZGVzdHJveSgpLHIodGhpcyl9LGd9KSxkZWZpbmUoIlJlbmRlcmVyL2xvYWRDdWJlTWFwIixbIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL2xvYWRJbWFnZSIsIi4uL1RoaXJkUGFydHkvd2hlbiJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1mdW5jdGlvbihlLHQscil7dmFyIG89W2kodC5wb3NpdGl2ZVgsciksaSh0Lm5lZ2F0aXZlWCxyKSxpKHQucG9zaXRpdmVZLHIpLGkodC5uZWdhdGl2ZVksciksaSh0LnBvc2l0aXZlWixyKSxpKHQubmVnYXRpdmVaLHIpXTtyZXR1cm4gbi5hbGwobyxmdW5jdGlvbih0KXtyZXR1cm4gZS5jcmVhdGVDdWJlTWFwKHtzb3VyY2U6e3Bvc2l0aXZlWDp0WzBdLG5lZ2F0aXZlWDp0WzFdLHBvc2l0aXZlWTp0WzJdLG5lZ2F0aXZlWTp0WzNdLHBvc2l0aXZlWjp0WzRdLG5lZ2F0aXZlWjp0WzVdfX0pfSl9O3JldHVybiByfSksZGVmaW5lKCJTaGFkZXJzL1NreUJveEZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4idW5pZm9ybSBzYW1wbGVyQ3ViZSB1X2N1YmVNYXA7XG5cbnZhcnlpbmcgdmVjMyB2X3RleENvb3JkO1xuXG52b2lkIG1haW4oKVxue1xuICAgIHZlYzMgcmdiID0gdGV4dHVyZUN1YmUodV9jdWJlTWFwLCBub3JtYWxpemUodl90ZXhDb29yZCkpLnJnYjtcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHJnYiwgY3ptX21vcnBoVGltZSk7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL1NreUJveFZTIixbXSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtyZXR1cm4iYXR0cmlidXRlIHZlYzMgcG9zaXRpb247XG5cbnZhcnlpbmcgdmVjMyB2X3RleENvb3JkO1xuXG52b2lkIG1haW4oKVxue1xuICAgIHZlYzMgcCA9IGN6bV92aWV3Um90YXRpb24gKiAoY3ptX3RlbWVUb1BzZXVkb0ZpeGVkICogKGN6bV9lbnRpcmVGcnVzdHVtLnkgKiBwb3NpdGlvbikpO1xuICAgIGdsX1Bvc2l0aW9uID0gY3ptX3Byb2plY3Rpb24gKiB2ZWM0KHAsIDEuMCk7XG4gICAgdl90ZXhDb29yZCA9IHBvc2l0aW9uLnh5ejtcbn1cbiJ9KSxkZWZpbmUoIlNjZW5lL1NreUJveCIsWyIuLi9Db3JlL0JveEdlb21ldHJ5IiwiLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ29yZS9HZW9tZXRyeVBpcGVsaW5lIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9WZXJ0ZXhGb3JtYXQiLCIuLi9SZW5kZXJlci9CdWZmZXJVc2FnZSIsIi4uL1JlbmRlcmVyL0RyYXdDb21tYW5kIiwiLi4vUmVuZGVyZXIvbG9hZEN1YmVNYXAiLCIuLi9TaGFkZXJzL1NreUJveEZTIiwiLi4vU2hhZGVycy9Ta3lCb3hWUyIsIi4vQmxlbmRpbmdTdGF0ZSIsIi4vU2NlbmVNb2RlIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCl7InVzZSBzdHJpY3QiO3ZhciB2PWZ1bmN0aW9uKGUpe3RoaXMuc291cmNlcz1lLnNvdXJjZXMsdGhpcy5fc291cmNlcz12b2lkIDAsdGhpcy5zaG93PWkoZS5zaG93LCEwKSx0aGlzLl9jb21tYW5kPW5ldyBjKHttb2RlbE1hdHJpeDpzLmNsb25lKHMuSURFTlRJVFkpLG93bmVyOnRoaXN9KSx0aGlzLl9jdWJlTWFwPXZvaWQgMH07cmV0dXJuIHYucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihpLHIpe2lmKCF0aGlzLnNob3cpcmV0dXJuIHZvaWQgMDtpZihyLm1vZGUhPT1wLlNDRU5FM0QmJnIubW9kZSE9PXAuTU9SUEhJTkcpcmV0dXJuIHZvaWQgMDtpZighci5wYXNzZXMucmVuZGVyKXJldHVybiB2b2lkIDA7aWYodGhpcy5fc291cmNlcyE9PXRoaXMuc291cmNlcyl7dGhpcy5fc291cmNlcz10aGlzLnNvdXJjZXM7dmFyIG89dGhpcy5zb3VyY2VzOyJzdHJpbmciPT10eXBlb2Ygby5wb3NpdGl2ZVg/ZChpLHRoaXMuX3NvdXJjZXMpLnRoZW4oZnVuY3Rpb24oZSl7Yy5fY3ViZU1hcD1jLl9jdWJlTWFwJiZjLl9jdWJlTWFwLmRlc3Ryb3koKSxjLl9jdWJlTWFwPWV9KToodGhpcy5fY3ViZU1hcD10aGlzLl9jdWJlTWFwJiZ0aGlzLl9jdWJlTWFwLmRlc3Ryb3koKSx0aGlzLl9jdWJlTWFwPWkuY3JlYXRlQ3ViZU1hcCh7c291cmNlOm99KSl9dmFyIHM9dGhpcy5fY29tbWFuZDtpZighbihzLnZlcnRleEFycmF5KSl7dmFyIGM9dGhpcztzLnVuaWZvcm1NYXA9e3VfY3ViZU1hcDpmdW5jdGlvbigpe3JldHVybiBjLl9jdWJlTWFwfX07dmFyIHY9ZS5jcmVhdGVHZW9tZXRyeShlLmZyb21EaW1lbnNpb25zKHtkaW1lbnNpb25zOm5ldyB0KDIsMiwyKSx2ZXJ0ZXhGb3JtYXQ6bC5QT1NJVElPTl9PTkxZfSkpLGc9YS5jcmVhdGVBdHRyaWJ1dGVMb2NhdGlvbnModik7cy52ZXJ0ZXhBcnJheT1pLmNyZWF0ZVZlcnRleEFycmF5RnJvbUdlb21ldHJ5KHtnZW9tZXRyeTp2LGF0dHJpYnV0ZUxvY2F0aW9uczpnLGJ1ZmZlclVzYWdlOnUuU1RBVElDX0RSQVd9KSxzLnNoYWRlclByb2dyYW09aS5jcmVhdGVTaGFkZXJQcm9ncmFtKG0saCxnKSxzLnJlbmRlclN0YXRlPWkuY3JlYXRlUmVuZGVyU3RhdGUoe2JsZW5kaW5nOmYuQUxQSEFfQkxFTkR9KX1yZXR1cm4gbih0aGlzLl9jdWJlTWFwKT9zOnZvaWQgMH0sdi5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2NvbW1hbmQ7cmV0dXJuIGUudmVydGV4QXJyYXk9ZS52ZXJ0ZXhBcnJheSYmZS52ZXJ0ZXhBcnJheS5kZXN0cm95KCksZS5zaGFkZXJQcm9ncmFtPWUuc2hhZGVyUHJvZ3JhbSYmZS5zaGFkZXJQcm9ncmFtLmRlc3Ryb3koKSx0aGlzLl9jdWJlTWFwPXRoaXMuX2N1YmVNYXAmJnRoaXMuX2N1YmVNYXAuZGVzdHJveSgpLHIodGhpcyl9LHZ9KSxkZWZpbmUoIlNoYWRlcnMvU3VuRlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJ1bmlmb3JtIHNhbXBsZXIyRCB1X3RleHR1cmU7XG5cbnZhcnlpbmcgdmVjMiB2X3RleHR1cmVDb29yZGluYXRlcztcblxudm9pZCBtYWluKClcbntcbiAgICBnbF9GcmFnQ29sb3IgPSB0ZXh0dXJlMkQodV90ZXh0dXJlLCB2X3RleHR1cmVDb29yZGluYXRlcyk7XG59XG4ifSksZGVmaW5lKCJTaGFkZXJzL1N1blRleHR1cmVGUyIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7cmV0dXJuInVuaWZvcm0gZmxvYXQgdV9nbG93TGVuZ3RoVFM7XG51bmlmb3JtIGZsb2F0IHVfcmFkaXVzVFM7XG5cbnZhcnlpbmcgdmVjMiB2X3RleHR1cmVDb29yZGluYXRlcztcblxudmVjMiByb3RhdGUodmVjMiBwLCB2ZWMyIGRpcmVjdGlvbilcbntcbiAgICByZXR1cm4gdmVjMihwLnggKiBkaXJlY3Rpb24ueCAtIHAueSAqIGRpcmVjdGlvbi55LCBwLnggKiBkaXJlY3Rpb24ueSArIHAueSAqIGRpcmVjdGlvbi54KTtcbn1cblxudmVjNCBhZGRCdXJzdCh2ZWMyIHBvc2l0aW9uLCB2ZWMyIGRpcmVjdGlvbilcbntcbiAgICB2ZWMyIHJvdGF0ZWRQb3NpdGlvbiA9IHJvdGF0ZShwb3NpdGlvbiwgZGlyZWN0aW9uKSAqIHZlYzIoMjUuMCwgMC43NSk7XG4gICAgZmxvYXQgcmFkaXVzID0gbGVuZ3RoKHJvdGF0ZWRQb3NpdGlvbik7XG4gICAgZmxvYXQgYnVyc3QgPSAxLjAgLSBzbW9vdGhzdGVwKDAuMCwgMC41NSwgcmFkaXVzKTtcblxuICAgIHJldHVybiB2ZWM0KGJ1cnN0KTtcbn1cblxudm9pZCBtYWluKClcbntcbiAgICB2ZWMyIHBvc2l0aW9uID0gdl90ZXh0dXJlQ29vcmRpbmF0ZXMgLSB2ZWMyKDAuNSk7XG4gICAgZmxvYXQgcmFkaXVzID0gbGVuZ3RoKHBvc2l0aW9uKTtcbiAgICBmbG9hdCBzdXJmYWNlID0gc3RlcChyYWRpdXMsIHVfcmFkaXVzVFMpO1xuICAgIHZlYzQgY29sb3IgPSB2ZWM0KDEuMCwgMS4wLCBzdXJmYWNlICsgMC4yLCBzdXJmYWNlKTtcblxuICAgIGZsb2F0IGdsb3cgPSAxLjAgLSBzbW9vdGhzdGVwKDAuMCwgMC41NSwgcmFkaXVzKTtcbiAgICBjb2xvci5iYSArPSBtaXgodmVjMigwLjApLCB2ZWMyKDEuMCksIGdsb3cpICogMC43NTtcblxuICAgIHZlYzQgYnVyc3QgPSB2ZWM0KDAuMCk7XG5cbiAgICAvLyBUaGUgZm9sbG93aW5nIGxvb3AgaGFzIGJlZW4gbWFudWFsbHkgdW5yb2xsZWQgZm9yIHNwZWVkLCB0b1xuICAgIC8vIGF2b2lkIHNpbigpIGFuZCBjb3MoKS5cbiAgICAvL1xuICAgIC8vZm9yIChmbG9hdCBpID0gMC40OyBpIDwgMy4yOyBpICs9IDEuMDQ3KSB7XG4gICAgLy8gICAgdmVjMiBkaXJlY3Rpb24gPSB2ZWMyKHNpbihpKSwgY29zKGkpKTtcbiAgICAvLyAgICBidXJzdCArPSAwLjQgKiBhZGRCdXJzdChwb3NpdGlvbiwgZGlyZWN0aW9uKTtcbiAgICAvL1xuICAgIC8vICAgIGRpcmVjdGlvbiA9IHZlYzIoc2luKGkgLSAwLjA4KSwgY29zKGkgLSAwLjA4KSk7XG4gICAgLy8gICAgYnVyc3QgKz0gMC4zICogYWRkQnVyc3QocG9zaXRpb24sIGRpcmVjdGlvbik7XG4gICAgLy99XG5cbiAgICBidXJzdCArPSAwLjQgKiBhZGRCdXJzdChwb3NpdGlvbiwgdmVjMigwLjM4OTQyLCAgMC45MjEwNikpOyAgLy8gYW5nbGUgPT0gMC40XG4gICAgYnVyc3QgKz0gMC40ICogYWRkQnVyc3QocG9zaXRpb24sIHZlYzIoMC45OTIzNSwgIDAuMTIzNDgpKTsgIC8vIGFuZ2xlID09IDAuNCArIDEuMDQ3XG4gICAgYnVyc3QgKz0gMC40ICogYWRkQnVyc3QocG9zaXRpb24sIHZlYzIoMC42MDMyNywgLTAuNzk3NTQpKTsgIC8vIGFuZ2xlID09IDAuNCArIDEuMDQ3ICogMi4wXG5cbiAgICBidXJzdCArPSAwLjMgKiBhZGRCdXJzdChwb3NpdGlvbiwgdmVjMigwLjMxNDU3LCAgMC45NDkyNCkpOyAgLy8gYW5nbGUgPT0gMC40IC0gMC4wOFxuICAgIGJ1cnN0ICs9IDAuMyAqIGFkZEJ1cnN0KHBvc2l0aW9uLCB2ZWMyKDAuOTc5MzEsICAwLjIwMjM5KSk7ICAvLyBhbmdsZSA9PSAwLjQgKyAxLjA0NyAtIDAuMDhcbiAgICBidXJzdCArPSAwLjMgKiBhZGRCdXJzdChwb3NpdGlvbiwgdmVjMigwLjY2NTA3LCAtMC43NDY3OCkpOyAgLy8gYW5nbGUgPT0gMC40ICsgMS4wNDcgKiAyLjAgLSAwLjA4XG5cbiAgICAvLyBFbmQgb2YgbWFudWFsIGxvb3AgdW5yb2xsaW5nLlxuXG4gICAgY29sb3IgKz0gY2xhbXAoYnVyc3QsIHZlYzQoMC4wKSwgdmVjNCgxLjApKSAqIDAuMTU7XG4gICAgXG4gICAgZ2xfRnJhZ0NvbG9yID0gY2xhbXAoY29sb3IsIHZlYzQoMC4wKSwgdmVjNCgxLjApKTtcbn1cbiJ9KSxkZWZpbmUoIlNoYWRlcnMvU3VuVlMiLFtdLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3JldHVybiJhdHRyaWJ1dGUgdmVjMiBkaXJlY3Rpb247XG5cbnVuaWZvcm0gZmxvYXQgdV9zaXplO1xuXG52YXJ5aW5nIHZlYzIgdl90ZXh0dXJlQ29vcmRpbmF0ZXM7XG5cbnZvaWQgbWFpbigpIFxue1xuICAgIHZlYzQgcG9zaXRpb247XG4gICAgaWYgKGN6bV9tb3JwaFRpbWUgPT0gMS4wKVxuICAgIHtcbiAgICAgICAgcG9zaXRpb24gPSB2ZWM0KGN6bV9zdW5Qb3NpdGlvbldDLCAxLjApO1xuICAgIH1cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBwb3NpdGlvbiA9IHZlYzQoY3ptX3N1blBvc2l0aW9uQ29sdW1idXNWaWV3Lnp4eSwgMS4wKTtcbiAgICB9XG4gICAgXG4gICAgdmVjNCBwb3NpdGlvbkVDID0gY3ptX3ZpZXcgKiBwb3NpdGlvbjtcbiAgICB2ZWM0IHBvc2l0aW9uV0MgPSBjem1fZXllVG9XaW5kb3dDb29yZGluYXRlcyhwb3NpdGlvbkVDKTtcbiAgICBcbiAgICB2ZWMyIGhhbGZTaXplID0gdmVjMih1X3NpemUgKiAwLjUpO1xuICAgIGhhbGZTaXplICo9ICgoZGlyZWN0aW9uICogMi4wKSAtIDEuMCk7XG4gICAgXG4gICAgZ2xfUG9zaXRpb24gPSBjem1fdmlld3BvcnRPcnRob2dyYXBoaWMgKiB2ZWM0KHBvc2l0aW9uV0MueHkgKyBoYWxmU2l6ZSwgLXBvc2l0aW9uV0MueiwgMS4wKTtcbiAgICBcbiAgICB2X3RleHR1cmVDb29yZGluYXRlcyA9IGRpcmVjdGlvbjtcbn1cbiJ9KSxkZWZpbmUoIlNjZW5lL1N1biIsWyIuLi9Db3JlL0JvdW5kaW5nUmVjdGFuZ2xlIiwiLi4vQ29yZS9Cb3VuZGluZ1NwaGVyZSIsIi4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uL0NvcmUvQ2FydGVzaWFuMyIsIi4uL0NvcmUvQ2FydGVzaWFuNCIsIi4uL0NvcmUvQ29sb3IiLCIuLi9Db3JlL0NvbXBvbmVudERhdGF0eXBlIiwiLi4vQ29yZS9kZWZpbmVkIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vQ29yZS9JbmRleERhdGF0eXBlIiwiLi4vQ29yZS9NYXRoIiwiLi4vQ29yZS9NYXRyaXg0IiwiLi4vQ29yZS9QaXhlbEZvcm1hdCIsIi4uL0NvcmUvUHJpbWl0aXZlVHlwZSIsIi4uL1JlbmRlcmVyL0J1ZmZlclVzYWdlIiwiLi4vUmVuZGVyZXIvQ2xlYXJDb21tYW5kIiwiLi4vUmVuZGVyZXIvRHJhd0NvbW1hbmQiLCIuLi9TaGFkZXJzL1N1bkZTIiwiLi4vU2hhZGVycy9TdW5UZXh0dXJlRlMiLCIuLi9TaGFkZXJzL1N1blZTIiwiLi9CbGVuZGluZ1N0YXRlIiwiLi9TY2VuZU1vZGUiLCIuL1NjZW5lVHJhbnNmb3JtcyJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSxiKXsidXNlIHN0cmljdCI7dmFyIFM9ZnVuY3Rpb24oKXt0aGlzLnNob3c9ITAsdGhpcy5fY29tbWFuZD1uZXcgZyh7cHJpbWl0aXZlVHlwZTpmLlRSSUFOR0xFUyxib3VuZGluZ1ZvbHVtZTpuZXcgdCxvd25lcjp0aGlzfSksdGhpcy5fYm91bmRpbmdWb2x1bWU9bmV3IHQsdGhpcy5fYm91bmRpbmdWb2x1bWUyRD1uZXcgdCx0aGlzLl90ZXh0dXJlPXZvaWQgMCx0aGlzLl9kcmF3aW5nQnVmZmVyV2lkdGg9dm9pZCAwLHRoaXMuX2RyYXdpbmdCdWZmZXJIZWlnaHQ9dm9pZCAwLHRoaXMuX3JhZGl1c1RTPXZvaWQgMCx0aGlzLl9zaXplPXZvaWQgMCx0aGlzLmdsb3dGYWN0b3I9MSx0aGlzLl9nbG93RmFjdG9yRGlydHk9ITE7dmFyIGU9dGhpczt0aGlzLl91bmlmb3JtTWFwPXt1X3RleHR1cmU6ZnVuY3Rpb24oKXtyZXR1cm4gZS5fdGV4dHVyZX0sdV9zaXplOmZ1bmN0aW9uKCl7cmV0dXJuIGUuX3NpemV9fX07bChTLnByb3RvdHlwZSx7Z2xvd0ZhY3Rvcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dsb3dGYWN0b3J9LHNldDpmdW5jdGlvbihlKXtlPU1hdGgubWF4KGUsMCksdGhpcy5fZ2xvd0ZhY3Rvcj1lLHRoaXMuX2dsb3dGYWN0b3JEaXJ0eT0hMH19fSk7dmFyIFQ9bmV3IGkseD1uZXcgaSxBPW5ldyByLFA9bmV3IHI7cmV0dXJuIFMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihyKXt2YXIgbD1yLmZyYW1lU3RhdGUsdT1yLmNvbnRleHQ7aWYoIXRoaXMuc2hvdylyZXR1cm4gdm9pZCAwO3ZhciBmPWwubW9kZTtpZihmPT09RS5TQ0VORTJEfHxmPT09RS5NT1JQSElORylyZXR1cm4gdm9pZCAwO2lmKCFsLnBhc3Nlcy5yZW5kZXIpcmV0dXJuIHZvaWQgMDt2YXIgZz1yLmRyYXdpbmdCdWZmZXJXaWR0aCxTPXIuZHJhd2luZ0J1ZmZlckhlaWdodDtpZighcyh0aGlzLl90ZXh0dXJlKXx8ZyE9PXRoaXMuX2RyYXdpbmdCdWZmZXJXaWR0aHx8UyE9PXRoaXMuX2RyYXdpbmdCdWZmZXJIZWlnaHR8fHRoaXMuX2dsb3dGYWN0b3JEaXJ0eSl7dGhpcy5fdGV4dHVyZT10aGlzLl90ZXh0dXJlJiZ0aGlzLl90ZXh0dXJlLmRlc3Ryb3koKSx0aGlzLl9kcmF3aW5nQnVmZmVyV2lkdGg9Zyx0aGlzLl9kcmF3aW5nQnVmZmVySGVpZ2h0PVMsdGhpcy5fZ2xvd0ZhY3RvckRpcnR5PSExO3ZhciBNPU1hdGgubWF4KGcsUyk7TT1NYXRoLnBvdygyLE1hdGguY2VpbChNYXRoLmxvZyhNKS9NYXRoLmxvZygyKSktMiksdGhpcy5fdGV4dHVyZT11LmNyZWF0ZVRleHR1cmUyRCh7d2lkdGg6TSxoZWlnaHQ6TSxwaXhlbEZvcm1hdDptLlJHQkF9KTsKdmFyIEk9dS5jcmVhdGVGcmFtZWJ1ZmZlcih7Y29sb3JUZXh0dXJlczpbdGhpcy5fdGV4dHVyZV19KTtJLmRlc3Ryb3lBdHRhY2htZW50cz0hMTt2YXIgRD1uZXcgdih7Y29sb3I6bmV3IG8oMCwwLDAsMCksZnJhbWVidWZmZXI6SX0pLE89dS5jcmVhdGVSZW5kZXJTdGF0ZSh7dmlld3BvcnQ6bmV3IGUoMCwwLE0sTSl9KTt0aGlzLl9nbG93TGVuZ3RoVFM9NSp0aGlzLl9nbG93RmFjdG9yLHRoaXMuX3JhZGl1c1RTPS41KigxLygxKzIqdGhpcy5fZ2xvd0xlbmd0aFRTKSk7dmFyIFI9dGhpcyxMPXt1X2dsb3dMZW5ndGhUUzpmdW5jdGlvbigpe3JldHVybiBSLl9nbG93TGVuZ3RoVFN9LHVfcmFkaXVzVFM6ZnVuY3Rpb24oKXtyZXR1cm4gUi5fcmFkaXVzVFN9fSxOPXUuY3JlYXRlVmlld3BvcnRRdWFkQ29tbWFuZCh5LHtyZW5kZXJTdGF0ZTpPLHVuaWZvcm1NYXA6TCxmcmFtZWJ1ZmZlcjpJLG93bmVyOnRoaXN9KTtELmV4ZWN1dGUodSksTi5leGVjdXRlKHUpLE4uc2hhZGVyUHJvZ3JhbS5kZXN0cm95KCksSS5kZXN0cm95KCl9dmFyIHo9dGhpcy5fY29tbWFuZDtpZighcyh6LnZlcnRleEFycmF5KSl7dmFyIEI9e2RpcmVjdGlvbjowfSxGPW5ldyBVaW50OEFycmF5KDgpO0ZbMF09MCxGWzFdPTAsRlsyXT0yNTUsRlszXT0wLEZbNF09MjU1LEZbNV09MjU1LEZbNl09MCxGWzddPTI1NTt2YXIgVj11LmNyZWF0ZVZlcnRleEJ1ZmZlcihGLHAuU1RBVElDX0RSQVcpLGs9W3tpbmRleDpCLmRpcmVjdGlvbix2ZXJ0ZXhCdWZmZXI6Vixjb21wb25lbnRzUGVyQXR0cmlidXRlOjIsbm9ybWFsaXplOiEwLGNvbXBvbmVudERhdGF0eXBlOmEuVU5TSUdORURfQllURX1dLFU9dS5jcmVhdGVJbmRleEJ1ZmZlcihuZXcgVWludDE2QXJyYXkoWzAsMSwyLDAsMiwzXSkscC5TVEFUSUNfRFJBVyxjLlVOU0lHTkVEX1NIT1JUKTt6LnZlcnRleEFycmF5PXUuY3JlYXRlVmVydGV4QXJyYXkoayxVKSx6LnNoYWRlclByb2dyYW09dS5jcmVhdGVTaGFkZXJQcm9ncmFtKEMsXyxCKSx6LnJlbmRlclN0YXRlPXUuY3JlYXRlUmVuZGVyU3RhdGUoe2JsZW5kaW5nOncuQUxQSEFfQkxFTkR9KSx6LnVuaWZvcm1NYXA9dGhpcy5fdW5pZm9ybU1hcH12YXIgVz11LnVuaWZvcm1TdGF0ZS5zdW5Qb3NpdGlvbldDLEc9dS51bmlmb3JtU3RhdGUuc3VuUG9zaXRpb25Db2x1bWJ1c1ZpZXcsSD10aGlzLl9ib3VuZGluZ1ZvbHVtZSxxPXRoaXMuX2JvdW5kaW5nVm9sdW1lMkQ7bi5jbG9uZShXLEguY2VudGVyKSxxLmNlbnRlci54PUcueixxLmNlbnRlci55PUcueCxxLmNlbnRlci56PUcueSxILnJhZGl1cz1kLlNPTEFSX1JBRElVUytkLlNPTEFSX1JBRElVUyp0aGlzLl9nbG93TGVuZ3RoVFMscS5yYWRpdXM9SC5yYWRpdXMsZj09PUUuU0NFTkUzRD90LmNsb25lKEgsei5ib3VuZGluZ1ZvbHVtZSk6Zj09PUUuQ09MVU1CVVNfVklFVyYmdC5jbG9uZShxLHouYm91bmRpbmdWb2x1bWUpO3ZhciBqPWIuY29tcHV0ZUFjdHVhbFdnczg0UG9zaXRpb24obCxXLFApLFk9bi5tYWduaXR1ZGUobi5zdWJ0cmFjdChqLHIuY2FtZXJhLnBvc2l0aW9uLFApKSxYPXUudW5pZm9ybVN0YXRlLnByb2plY3Rpb24sWj1BO1oueD0wLFoueT0wLFouej0tWSxaLnc9MTt2YXIgSj1oLm11bHRpcGx5QnlWZWN0b3IoWCxaLFApLEs9Yi5jbGlwVG9EcmF3aW5nQnVmZmVyQ29vcmRpbmF0ZXMocixKLFQpO1oueD1kLlNPTEFSX1JBRElVUzt2YXIgUT1oLm11bHRpcGx5QnlWZWN0b3IoWCxaLFApLCQ9Yi5jbGlwVG9EcmF3aW5nQnVmZmVyQ29vcmRpbmF0ZXMocixRLHgpO3JldHVybiB0aGlzLl9zaXplPU1hdGguY2VpbChpLm1hZ25pdHVkZShpLnN1YnRyYWN0KCQsSyxQKSkpLHRoaXMuX3NpemU9Mip0aGlzLl9zaXplKigxKzIqdGhpcy5fZ2xvd0xlbmd0aFRTKSx6fSxTLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxTLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fY29tbWFuZDtyZXR1cm4gZS52ZXJ0ZXhBcnJheT1lLnZlcnRleEFycmF5JiZlLnZlcnRleEFycmF5LmRlc3Ryb3koKSxlLnNoYWRlclByb2dyYW09ZS5zaGFkZXJQcm9ncmFtJiZlLnNoYWRlclByb2dyYW0uZGVzdHJveSgpLHRoaXMuX3RleHR1cmU9dGhpcy5fdGV4dHVyZSYmdGhpcy5fdGV4dHVyZS5kZXN0cm95KCksdSh0aGlzKX0sU30pLGRlZmluZSgiV2lkZ2V0cy9DZXNpdW1XaWRnZXQvQ2VzaXVtV2lkZ2V0IixbIi4uLy4uL0NvcmUvYnVpbGRNb2R1bGVVcmwiLCIuLi8uLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi8uLi9Db3JlL0Nsb2NrIiwiLi4vLi4vQ29yZS9DcmVkaXQiLCIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9Db3JlL0VsbGlwc29pZCIsIi4uLy4uL0NvcmUvZm9ybWF0RXJyb3IiLCIuLi8uLi9Db3JlL2dldFRpbWVzdGFtcCIsIi4uLy4uL0NvcmUvcmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiLi4vLi4vQ29yZS9TY3JlZW5TcGFjZUV2ZW50SGFuZGxlciIsIi4uLy4uL1NjZW5lL0JpbmdNYXBzSW1hZ2VyeVByb3ZpZGVyIiwiLi4vLi4vU2NlbmUvR2xvYmUiLCIuLi8uLi9TY2VuZS9Nb29uIiwiLi4vLi4vU2NlbmUvU2NlbmUiLCIuLi8uLi9TY2VuZS9TY2VuZU1vZGUiLCIuLi8uLi9TY2VuZS9Ta3lBdG1vc3BoZXJlIiwiLi4vLi4vU2NlbmUvU2t5Qm94IiwiLi4vLi4vU2NlbmUvU3VuIiwiLi4vZ2V0RWxlbWVudCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSxmLHAsdixnLF8seSxDLHcsRSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIodCl7cmV0dXJuIGUoIkFzc2V0cy9UZXh0dXJlcy9Ta3lCb3gvdHljaG8ydDNfODBfIit0KyIuanBnIil9ZnVuY3Rpb24gUyhlKXtmdW5jdGlvbiB0KCl7aWYoIWUuaXNEZXN0cm95ZWQoKSlpZihlLl91c2VEZWZhdWx0UmVuZGVyTG9vcCl0cnl7dmFyIGk9ZS5fdGFyZ2V0RnJhbWVSYXRlO2lmKG8oaSkpe3ZhciBuPWUuX2xhc3RGcmFtZVRpbWUscj0xZTMvaSxhPWQoKSxzPWEtbjtzPnImJihlLnJlc2l6ZSgpLGUucmVuZGVyKCksZS5fbGFzdEZyYW1lVGltZT1hLXMlciksaCh0KX1lbHNlIGUucmVzaXplKCksZS5yZW5kZXIoKSxoKHQpfWNhdGNoKGwpe2lmKGUuX3VzZURlZmF1bHRSZW5kZXJMb29wPSExLGUuX3JlbmRlckxvb3BSdW5uaW5nPSExLGUuX3Nob3dSZW5kZXJMb29wRXJyb3JzKXt2YXIgdT0iQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcmVuZGVyaW5nLiAgUmVuZGVyaW5nIGhhcyBzdG9wcGVkLiI7ZS5zaG93RXJyb3JQYW5lbCh1LHZvaWQgMCxsKX19ZWxzZSBlLl9yZW5kZXJMb29wUnVubmluZz0hMX1lLl9yZW5kZXJMb29wUnVubmluZz0hMCxlLl9sYXN0RnJhbWVUaW1lPWQoKSxoKHQpfWZ1bmN0aW9uIFQoZSl7dmFyIHQ9ZS5fY2FudmFzLGk9dC5jbGllbnRXaWR0aCxuPXQuY2xpZW50SGVpZ2h0LG89cih3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbywxKSplLl9yZXNvbHV0aW9uU2NhbGU7ZS5fY2FudmFzV2lkdGg9aSxlLl9jYW52YXNIZWlnaHQ9bixpKj1vLG4qPW8sdC53aWR0aD1pLHQuaGVpZ2h0PW4sZS5fY2FuUmVuZGVyPTAhPT1pJiYwIT09bn1mdW5jdGlvbiB4KGUpe3ZhciB0PWUuX2NhbnZhcyxpPXQud2lkdGgsbj10LmhlaWdodDtpZigwIT09aSYmMCE9PW4pe3ZhciByPWUuX3NjZW5lLmNhbWVyYS5mcnVzdHVtO28oci5hc3BlY3RSYXRpbyk/ci5hc3BlY3RSYXRpbz1pL246KHIudG9wPXIucmlnaHQqKG4vaSksci5ib3R0b209LXIudG9wKX19dmFyIEE9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBSFlBQUFBYUNBWUFBQUJpa2Fnd0FBQUFBWE5TUjBJQXJzNGM2UUFBQUFsd1NGbHpBQUFOMXdBQURkY0JRaWliZUFBQUFBZDBTVTFGQjl3R0dSUXlGMzcxUVZzQUFCT0hTVVJCVkdqZTdWcDVjRlRIbWY5MXYyTm0zb3dHbllNdUVFSkNPQmlFakRsc0RNWVFqR01PT3dtWGNXeGlMeXdwSjlpdVRYWmQ2MTJjb3JKc3NGT3hpOExlclhpenhFR1V2V3Npdk54eEhIQ1E4V1lCWVNGem1VTUNDWFFqYVVhak9kL1YrNGY2S2MxNGtJL0tadi94cStwNk0vUG1PMTUvOS9jMXdhMHZ3cGNNUUFIZ0J1QUZvUEc3bXo4akFHd0FTUUJ4QURGaEpRR1lBQ3dBaksrdnJyL0FKUThqVk1xZnV3SDRBR1FCeUFhUW5UTnFYR0hXcUhHRmJxOC9nMUJKc2d3OUdRMTJCZHMvcVdzeEV2RWVBRUVBZlFEQ0FLS0NnUEdWY1AvL0JPc0lWUUhnQVpBSklBQ2dzSFRxdkR2SzcxNTBUMmJSMkRGYVptNlc0c2x3VXlwUjIweWFpVWc0T3REYmNhUDM2cmxQUHQ2LzdmMkIzcTVtQUIwQWVyaUFFMThKOXk5M2tWdTRYNFc3M0J3QWhRQks1di9nWjk4WlZYWHZERzkySUpNeDU2OU1RREVvSzB0UG1PSHUxczRMNzc5OXNIN3Z0dmNBWEFQUUNhQ2Z1MnFMdSs3aCtFaDNzUzhCY3l0NDhpVmdQb3MyKzRKN2pTK0JJeDJldERCU3luZkgvWHE0NnkwQ1VMNzBuMy96WE1tVXVYZXBXb1pIRkNRaEZJUUFSQ0JGSllWNi9ObitRSG5WQkg5T3ZxLzUxSkZXQURwZkpoY3FFenlEY3g5dWtUVHIveHIyVm5EcG5nMG51SFIwaDF1M3d2V0Y2RXNwZ0JJQUZZQWZRQUdBc3VVL3JmbTdrZVB2dkowUWlUajZRU2dCSVNTOXVqRUdTaWtreGFYa2xJd2ZLOHVLMlhydTJIVnVyV0tzcFp5ZXpHbW1Xd3AvTHFWc3VwUFF1YjRnclBRNVlJZWpLUXZQSkFHZmxMTEpTQkdteFBFcUtYaFU0WGRKRUJxN0JSNVorTCtES3gzTVRUSFdFYXlieDlXQ3VkL2J0Q0pRTWVYMlFldmsrTlBva3MwWVBBckYvUlVqME55WHhPbU8yQ0F5MWExT21MOXlVVmZUbWF0WFR4NTJFaWxkWUZRVk5sZ1JtQlIxeFFKZ0NCYlBCQVZVaGN3OGxUT2JMejBGVms0UklFbUpKeUpOWnpGQmlDVEZCUkwrZjUwcnJpRlVBVFJGaVpTVS9YWUVBdzZYNUxsSVVnaFpxWHZsNXA4cGZ5Y1Jac2dqeW1sS0d3MUFkbTdKYlJVVnM3ODVud0dnaFA1cHA5bWZGTU94V3N0bXVDM2d3ZGNyUnFBL2J1SlVXd3lLUk1BWWd5ZHJaTlp0OTMzNzYyM25qbitpeHlOOW5BbWRNNW5CdllPUGZ4YzNtbkVtVFE0VDVWWnY4aGZ6OGFVS25vY0pkNXR2Vmh4QWhPTUFEek5lZmxlRmpSVUZhL0QveHppOExRaElFcFRHNFZYbk5CemxaWUlTdWZrN2p1Q2ZxYUFvTGtIWWNaNkhCQUVNOE8rT2JKejNIY0ZEcEpmREp3V1lmaUhNTVRrbHZpb2NLSHY2STMrelJGTGRLaEVFYXRtQUxCRklCSWliTmhRNktGeUpFalQySkhEb1VqL2ErblZJVklCaEJHT256cHRXWHpobVRGZlQyVFpCT0g0QWdTZWVlR0pxUlVWRnFkZnI5YnRjTG5WUVh3YXBtcVpwSlpQSlJDZ1VDaDQ3ZHV6aWUrKzlkd1dBWGw1ZW5ybHAwNmJGMFdoVU0wMVRZWXdScm1nMnZ6TktxUzNMc3VueitZeTZ1cnBUUC8vNXowOWJsa1ZMU2tyeVZxOWVQVDAzTnplZ3FxcWJVbnFUR3lPRU1OTTBrMzE5ZlgyLy8vM3Z6OWJXMWw0RFlENzAwRVBGeTVZdG02NXBtdmJCQng5YzJycDE2Nldubm5xcTdNRUhINXpBR0l1OC92cnIrdzhlUFBnSlZ3clJPMmdBY2c4Y09MQTJtVXg2MnR2YkI5YXZYMzlzK2ZMbG8rKy8vLzVKWE5pd2JYdWdwcWFtOXRDaFEyY0VqNk56dVF3bHNpKy8vUEtTek16TVF0dTJxY2ZqTVpxYm0wOXYyTERodDRKM3NRRVFPVTJKbzhtS0t6dDdWRVU1bFNnRkJpM1Baa0Jacmd2M2xHYkNvMUpjN0k3aVNHTjQwSmNRZ29Ha2hYZE85NEVTUUpFb0dJKzFrL005bURLcVFIRXYrK2FrbDE4NmU0NXJOQUFFM25qampjY1dMRmh3ZnlBUXlKRWtpYWJHYmNjN0pKTkp2YTJ0clgzTGxpM3Z2UGJhYStlS2k0dUxWNnhZOGQxMGNmNVRjWjh4NU9YbDViMzY2cXM5bEZMdHJiZmVXbGRWVlhXN3Bta3V4aGpTMFNTRUlKbE1HaXRYcnJ6Mi9QUFB2MWxUVTNOdHlwUXAweDk1NUpHL2ttVlpkcmxjUjdkdTNXck9uVHQzM3BJbFMrWUR3TkdqUjY4ZVBIaXdqVnR1a20rd0k5aWNoUXNYUGdVQUhSMGQzZXZYcjc4eGMrYk11OWFzV2JPUVVqcEVOejgvdi9qUW9VUC9JaWlINDBVekFlUXZXN1pzMXJwMTYvN2E1L05wRHIvMTlmV2xHelpzT000dE5zcGhrYzVpUGFYVHZsNnV1RFV2WTRNWkx3TlE0RmZ3K0xSOCtLUVFUQ3VKU1FVRmNNc0VlODhGb1NrU0tDRnd5V1NJU1FiZzlwRWVmSGRHQUpISWRVeWRWakZlY0wzSzQ0OC9QbTNod29VUEJBS0JIRkdJbG1VNXBSQ1JwTUdFemUxMnEyUEhqaDJ6YXRXcWVUdDM3Z3dPREF4a09RSUpoVUo2WTJOam42SW9qRkpxRTBLWXNHeVB4MFBPblR2WG5VZ2tmR3ZYcnIxajVzeVpVN2lGc0thbXB2NVlMQlozNEd6YkpnQXdhdFNvN016TVRFOTVlWG5aVDM3eWswZHJhbXIrUFJRS1pTUVNDZFBuODhuQllOQURJRDhVQ21rQVlCaUdHUTZIbmE2Y2tzYmRabGlXWlV1U1JLUFJLQUFVQklOQmZ5d1dNMzArbit5RXRlblRwOSs1WXNXS0dUdDM3b3h3eithNDRSd0FSYzgrKyt4U3I5ZXJpUXJZMzk4djgzMTFDVW5jVFRITjBRN1ZsMU9RSnltcTRpQnd5eFFQVDhxRFZ3cmkxZDEvaTh0dHAvQVAzOW1PQmVNbjQxcFF4OW1PR0ZTWjNxVDUyWnFNUjZhTVJHdlhLZnpiZ1g5RWEzUG5TTEVkT1dYS2xLLzUvWDQvQUZ5OGVQSEc2dFdyOTBRaWtTNVZWYU9FRUlzeFJobGpuZ2NmZkxCaTgrYk5qeEJDVUZKU01yS2twTVJ2R0liYm9YUDI3Tm4rMmJObi8zY2dFSWdTUW1LRUVBT0FSUWl4S0tWeFJWRWlvVkFvWXR1MmRNY2RkNHgyNEhidjN0MytveC85Nk9Ob05CcWtsTWE0cHBOa01pbk5uejgvLy9ubm42L3krWHcwbVV4YUFOeTZycnNkbDI4WWhndUFYOWQxRjk4anduOVRVakprSjVOMURXVjB0aTBCeURBTXcrUHNielFhdFgwK0h5MG9LTWhjdm56NW5QMzc5MStJeFdKUklVYVBmTzY1NStaVlZsYU9BNEJvTkdwcm1rWjV1SkpUaFpvdUt5WUFxT3JXVkVLb0U3Y3dzelFEbFFVSzNqcjhTNXkrK2lFSUlYaDU1L2Z3eWxPSDhlM0tISFNFZGZRbkxGQnVSYkpFc0xReUYyN1NoM2VPL2l1dWRWK0VhU3Vxa0pGNk1qTXpzOXh1dHdJQXYvclZyMDZlT0hIaUV3Q3RQQkhRT2FQYXhZc1hMeGNYRjhjS0N3dHpPem82K2x0Ylc0T0ZoWVUraDJuRE1BZ0FxYnU3Vzh4a0xTRUJjc29zMWJidG9jWklJQkJRczdLeTVQYjJka3ZYZFYxd2ZhaXBxZW1zcWFrNXlGMWJGQUJsak5FVTRTajg3bmlhMUxLSENKV0dMTGg2QWtEaGlrc0FvTHE2dW0vVnFsV1pXVmxaOGdNUFBIREh3b1VMSzJ0cWFzSmNZSjd5OHZLeWIzM3JXL2Y0L1g0M1l3eWJObTI2dm5uejVwSVViMHR2VmU0NG1hU1ZqRWZpekRKdG13RmxPUzRzcmN6R2lRdnY0bmNuZDRBU0FrSW8rbU45MkxMckIvajdWYi9HUXhPejhaLzFQVERzUVhjNnAzUUVxb3BVN0RyNlM1eThmQWlLcENLaHM2U1FTVXF5TEtzTzRkN2UzajRBdmJ4RDFjc0ZRUUY0RW9sRWFQMzY5VFZDRmp1aXFLaW9nRzh3NXM2ZG04c1krK1p3Y2ZiWlo1L2R2SFhyMWlzblQ1NXNjVnorckZtejh1cnI2eGM0THMyMmJaWklKRXhkMTgxb05HcjA5UFJFRHgwNmRQbUZGMTQ0SG8vSFRWR0lqaUU0Z3VFQ295bDFMWVRQY3BwR0VBZ2hEQUFpa1VqaXhSZGZiSG5wcFpmS2ZENmZhODJhTmZNT0h6N2NIZ3dHYndCd3IxaXg0dTY3N3JxcmdzZlU0STRkTzY2bENQWlRYU2txcE9hTWE2MGU3bWp1b3N3MFJtWW9XSGYzU0xUM05PS3Q5MStDYnNaQmVPbERDY1g1bHVQNHJ3OWZ3NHdTSCs0cDljTWxVM3h0cEFmTEptZWovdklSN1Buakx5RFJ3WGVLaG94dWJva1dBT1lrRFh4VExFNWJyQjExb1RaTUNyV29OUWd5bUp3WmhzSEM0YkFaalVhTmFEUnF4R0l4M1ZueGVEekpreThUUUdMSGpoM245dTNiZDZ5dHJTM1UyZGtaNmUzdGpmWDM5OGNIQmdZUzhYamNJSVFRcjlmcktpb3E4bGRXVmhiODhJYy92SGZidG0zekFYaHMyNWFIVXg3dUV0MUNPZVhFWE0zSmZBV0x2V25TeFJoTGJOdTJyYW1wcVNsTUNNRTN2dkdOeVhQbXpLa0NVRlplWG43NzZ0V3I3MldNd2JadHZQRENDeCs1WEs2d282QmNPZGh3UTRDaHV1L0tSMzlvbkRHUzlUODB1OWl2a2dpcUQvMFViVDJOY0t2ZWxNYUVoWGZycWxHYVB3RVBUNXFIMGx3dnFvcGNhT3RweFBiMy9nbUdtWUJFRlJCQzBIVWxmcDY3dFFRQUx4TUtZc2FZVSt0bGNTYWROTjhOSU9PKysrNGJuWjJkN1ErSHcreklrU05KeHRpUTlUUTFOVVczYk5uU21KV1ZsWkJsV2FlVVdzNVNWVFV4WXNTSVJGMWRYU2NBd3pUTjJNTVBQN3czUHovL1pGVlZWVUZ1YnE3TDYvVkttcVpSbDh1bEtJcmlWbFZWbXo1OWV2NmNPWE1DTHBlTExsaXdZRHlBT3BHbTA4U2dsQTY1OW1ReTZlSFRyd2lQdFJZWGJpNnZQMi95akk2MUFvREw1VXIwOXZaMmJ0KysvZXpHalJ2dnBwU1NqUnMzTHRpOWUvZnZubnp5eWZIang0OGZ5UmpEd1lNSEw5VFcxallXRmhaNnhmSXMzVWhVVGxQUVJ3R0U5R3YvYy9iYTlZR2kyclB2MEZPTmYvaVVVQjNMajhTRHFENjBHWXRtZEdCY1lTVk9uTCtLMzliOUdwMTl6VkRrd1p6QlNwTFk5UXY5WjNsS0hnT2dtYVlaZDl6ZzFLbFRTOTk0NDQxTDNHM2xjRDZvby8xYnRteFpGd2dFY3RyYjI3dldyRmx6d0xJczJjbUtXMXBhNHErLy92cDFBYmNoZElLaVBHWkhBSkRGaXhjSHBrK2ZmbnNvRk5MZWZ2dnQzcmEyTmwwWVNEaGR0NHp5OHZMd3NXUEhzbDB1bDZvb2lnU0FDdUVaWEtCSnd6QU14aGhVVlpXOFhtOHVINWhRM21Dd09mOTVWVlZWWXgwM3lRVmhVRXBOUWJCeEFEZmVmUFBONk5LbFM4ZFVWbFlXVmxaVzVyMzQ0b3N6MXExYlY4SVlRekFZakZWWFY1K0l4V0lka2lUbHBmRENVZ2NDNlN3MkNxQnZ3NFpOKzcvOWQrV3pvMWF2VDVIVTlOMXRNcGo0ZGZVMTR6L2VmeGxldHg5eFBZcElQQWhWY2NPMmJWQktjZjE4OUkvaDNtU0xrQmk1Yjl5NDBSV0x4WkplcjlmMTJHT1BUYTZvcU1qcTZlbnBKWVFZbEZMR3l4MjF0TFEwTUduU3BER0VFQ1FTQ1pNUUlqdU5DRjZhcUk4KyttaGVWbFpXSnJkWWt6Y29MRVZSRWo2ZkwxRmZYMzl4MTY1ZHpmUG56eS83L3ZlL3YxTFhkV3ZseXBWZGUvYnN1UktMeFF5bjFMRXNTMmFNZWViTm0xZnM4L2xreGhnc3k3SUFKQlJGMFljMlRaWjFBQU5OVFUwZGpvSnQyclJwenF4WnMvSzZ1cnE2SlVuU0NTSE1NQXhaMDdTc3hZc1hWMUpLQ1dNTUF3TURNUUJoVlZXVGp0VTZncjF5NVlxMWQrL2VqOGFORzVlcmFacjZ6RFBQalBWNFBCSmpETFcxdGVkMjdkcjFNWUNZcXFwRGNwTWt5UklhRXl5ZHhUb3hOZ2FncjdlM3QrWEVlMHJOeFBram52aFR6bk5yNFNiMEtCTDZZTzlCb3ZKUW5SWHB0VHFhUGdyOXdUTHNEZ0FoVGtPdXJxNCt1bno1OHZzMVRSdmw5L3ZWdVhQbmxqSEd4Z3F4dzJHY0VqTFlKTGx3NGNLVjA2ZFBkMDZiTm8wNCtNZVBIKy9mdG0zYk5ORzFpVzVLVlZWbC8vNzlldzRjT05DOGQrL2V5ODg4ODR5c0tJcDg1NTEzanBvOGVYSmgycEhYNEVVSUlUaDU4dVJGQU4xdXR6dkhjYjBlanljR29LdXVyazV2YlcyOXU3aTRPREI2OU9pc0o1OTg4aTR4eERoc0tJb2lFVUpnbXFaOTRNQ0JPZ0JkbXFhVk9EeHJtaGJoaWFQKzR4Ly8rTjJsUzVkT21qQmh3aGlQeHlNQlFGZFhWMTkxZGZYN3RtMjNBZEJkTHRkUXpGWVV4V21iM2lSY21xYmg3dlFmT3o5K3YvUGRqdlA2a2NIdUUyODhNSlpXdU00U213MW1na1F2SHcvdjZXZ2ErQmpBRFk1M0FFRGZtVE5uTHE5ZHUvWm5wMDZkYXRCMTNSQTNST3dHbWFacGhjUGhnWDM3OXYzMjZhZWZmdE8yN1RhZno5ZkpHR09tYWRxTU1TYkxNcEVraWFaYmpERm9tbVlRUXNLMXRiV05yN3p5eW12aGNMaWZFSUpid1JCQ21HVloxdkhqeHo5YXRHalJMd0EwWjJkbmR6cGRIYi9mSHdUUWN1TEVpWWFubjM3NjFmUG56MytpNjdwQkNDR1VVa29Jb2Z3anBaUVMyN1paZDNmM2phMWJ0MVp2M0xoeEw0Q3JtWm1aUFlRUWt4Q0NqSXlNRUlCMkFHMEFtcmR2My82YmVEd2VOd3pEMW5YZFBIWHExSW5kdTNjZjQ4KzdNakl5dXB3OThuZzhFVzR3Q1dINGtIYlFMZ3NuSjRvQWxOMzMySmkxaGJlcHM2bEVhTG9oUUxyaFFDSmk5emNlaTc3VGNMaDlINENyQUxwNHJMTjVMQnZCRTRzY0FQNkpFeWZtQlFJQkw2VlVvcFNDTWNZR0JnWVNseTVkQ3ZYMTlZVzVRa1FBbUQ2ZnozUHZ2ZmVXeG1JeHIyRVlIcUZYUEJScktLV1dKRW1HMSt1TnRiVzFkVFUwTk56Z3o3d0EvT1hsNWJrRkJRVitYc1lRd1ZwWk1wazBqaDgvM3NucFJRQ1lvMGFOOGs2WU1DSFg1WExSYTlldUJSc2FHbnI0Sm5wNDU4YzdjZUxFYksvWDZ4TDVNUXpEYkdob0NOcTJIZU80WWdCWVdWbVp2NktpSWtkVlZiUzB0SFEzTkRSMENzT1JyRGx6NW95bGxIb1lZM3A5ZmYzMWNEamN6ZUdoYVZyR2tpVkxTZzNEa0x1N3UvcysvUERERm40VUtlSllMaG5tQUp2R3M5UUNBS09uTE1oZk5IcVNObC9MbEhPcFRPUmJXYTRldDJPUlhxdjF3Z2Y5TlZmTzlCN25UWWN1UHZsSUNxMDJ0OUNKOGdnak9Kb21vZE9GMFpRdEhOdnhDQzA4cEJuYm1jSWhPNTNqZEE3bXBYYUtVa09TV0dveFlhYUtsSWE3SW96VDB1RVQrWERHZWhER2hoQkdiNmJUbUJIZXplYjhPeU5QQ1BRay9wdHplSENvbkNTZmNaRE5JMWhXUVhhQlZsNTI1NGhabVNQVmNlNE1LVWR4RVErVkpNblViY05JV0pGb3lPem9hMDJlT1gyayt5Zy83OVRGTldrZ1pjaE9Vb2JlNHZBNjNXelVFbXBZc2ErZENvTTBJemd6NWFRa1RVT1BwR3ZVcEtGSkJhVVI4UTAzY0xkVDhOa3BweUVnUEdPQ1ljbkNpTkFTc24yU3dyc3REQTJHeG5ia2M1eFNkSEdyY21hQldZb3FaK1lVZTRwY1h1cVhKQ29idXBXSWhhemUzdlpvaHpBZmRPYUtOMm1Td1B4d1IwWlNaNnVwdFpvSU45eXhGQ1lJaXFWNXYzVEhTdGd3Tk5QaHZ0WHhGZ3pEUDlLOHE1MkNqNlpSTm5hTGZmb1VEZkk1emhWTGdydnhDTjBVeDVVUllYWVlGODRXZjJxcWY0dURWNTkxWnVpTEhpcjdjOEYrbVpPVTVNK0lhemc4bjNtWWpueE9Sa1YzSTZkeGc2S3JNUVczWWFleGxxK3V2OEQxdjJJTCt0NHozQi9OQUFBQUFFbEZUa1N1UW1DQyIsUD1mdW5jdGlvbihlLGEpe2U9RShlKSxhPXIoYSx7fSk7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7cy5jbGFzc05hbWU9ImNlc2l1bS13aWRnZXQiLGUuYXBwZW5kQ2hpbGQocyk7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7bC5vbmNvbnRleHRtZW51PWZ1bmN0aW9uKCl7cmV0dXJuITF9LGwub25zZWxlY3RzdGFydD1mdW5jdGlvbigpe3JldHVybiExfSxzLmFwcGVuZENoaWxkKGwpO3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2MuY2xhc3NOYW1lPSJjZXNpdW0td2lkZ2V0LWNyZWRpdHMiO3ZhciBkPW8oYS5jcmVkaXRDb250YWluZXIpP0UoYS5jcmVkaXRDb250YWluZXIpOnM7ZC5hcHBlbmRDaGlsZChjKSx0aGlzLl9lbGVtZW50PXMsdGhpcy5fY29udGFpbmVyPWUsdGhpcy5fY2FudmFzPWwsdGhpcy5fY2FudmFzV2lkdGg9MCx0aGlzLl9jYW52YXNIZWlnaHQ9MCx0aGlzLl9jcmVkaXRDb250YWluZXI9Yyx0aGlzLl9jYW5SZW5kZXI9ITEsdGhpcy5fcmVuZGVyTG9vcFJ1bm5pbmc9ITEsdGhpcy5fc2hvd1JlbmRlckxvb3BFcnJvcnM9cihhLnNob3dSZW5kZXJMb29wRXJyb3JzLCEwKSx0aGlzLl9yZXNvbHV0aW9uU2NhbGU9MSx0aGlzLl9mb3JjZVJlc2l6ZT0hMSx0aGlzLl9jbG9jaz1yKGEuY2xvY2ssbmV3IGkpLHRoaXMuX2xhc3RGcmFtZVRpbWU9dm9pZCAwLFQodGhpcyk7dHJ5e3ZhciBoPW5ldyBnKHtjYW52YXM6bCxjb250ZXh0T3B0aW9uczphLmNvbnRleHRPcHRpb25zLGNyZWRpdENvbnRhaW5lcjpjLG1hcFByb2plY3Rpb246YS5tYXBQcm9qZWN0aW9uLG9yZGVySW5kZXBlbmRlbnRUcmFuc2x1Y2VuY3k6YS5vcmRlckluZGVwZW5kZW50VHJhbnNsdWNlbmN5LHNjZW5lM0RPbmx5OnIoYS5zY2VuZTNET25seSwhMSl9KTt0aGlzLl9zY2VuZT1oLGguY2FtZXJhLmNvbnN0cmFpbmVkQXhpcz10LlVOSVRfWix4KHRoaXMpO3ZhciBTPXUuV0dTODQsUD1oLmZyYW1lU3RhdGUuY3JlZGl0RGlzcGxheSxNPW5ldyBuKCJDZXNpdW0iLEEsImh0dHA6Ly9jZXNpdW1qcy5vcmcvIik7UC5hZGREZWZhdWx0Q3JlZGl0KE0pO3ZhciBJPW5ldyBwKFMpO3RoaXMuX2dsb2JlPUksaC5nbG9iZT1JO3ZhciBEPWEuc2t5Qm94O28oRCl8fChEPW5ldyBDKHtzb3VyY2VzOntwb3NpdGl2ZVg6YigicHgiKSxuZWdhdGl2ZVg6YigibXgiKSxwb3NpdGl2ZVk6YigicHkiKSxuZWdhdGl2ZVk6YigibXkiKSxwb3NpdGl2ZVo6YigicHoiKSxuZWdhdGl2ZVo6YigibXoiKX19KSksaC5za3lCb3g9RCxoLnNreUF0bW9zcGhlcmU9bmV3IHkoUyksaC5zdW49bmV3IHcsaC5tb29uPW5ldyB2O3ZhciBPPWEuaW1hZ2VyeVByb3ZpZGVyO28oTyl8fChPPW5ldyBmKHt1cmw6Ii8vZGV2LnZpcnR1YWxlYXJ0aC5uZXQifSkpLE8hPT0hMSYmaC5pbWFnZXJ5TGF5ZXJzLmFkZEltYWdlcnlQcm92aWRlcihPKSxvKGEudGVycmFpblByb3ZpZGVyKSYmKGgudGVycmFpblByb3ZpZGVyPWEudGVycmFpblByb3ZpZGVyKSx0aGlzLl9zY3JlZW5TcGFjZUV2ZW50SGFuZGxlcj1uZXcgbShsKSxvKGEuc2NlbmVNb2RlKSYmKGEuc2NlbmVNb2RlPT09Xy5TQ0VORTJEJiZ0aGlzLl9zY2VuZS5tb3JwaFRvMkQoMCksYS5zY2VuZU1vZGU9PT1fLkNPTFVNQlVTX1ZJRVcmJnRoaXMuX3NjZW5lLm1vcnBoVG9Db2x1bWJ1c1ZpZXcoMCkpLHRoaXMuX3VzZURlZmF1bHRSZW5kZXJMb29wPXZvaWQgMCx0aGlzLnVzZURlZmF1bHRSZW5kZXJMb29wPXIoYS51c2VEZWZhdWx0UmVuZGVyTG9vcCwhMCksdGhpcy5fdGFyZ2V0RnJhbWVSYXRlPXZvaWQgMCx0aGlzLnRhcmdldEZyYW1lUmF0ZT1hLnRhcmdldEZyYW1lUmF0ZTt2YXIgUj10aGlzO2gucmVuZGVyRXJyb3IuYWRkRXZlbnRMaXN0ZW5lcihmdW5jdGlvbihlLHQpe2lmKFIuX3VzZURlZmF1bHRSZW5kZXJMb29wPSExLFIuX3JlbmRlckxvb3BSdW5uaW5nPSExLFIuX3Nob3dSZW5kZXJMb29wRXJyb3JzKXt2YXIgaT0iQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcmVuZGVyaW5nLiAgUmVuZGVyaW5nIGhhcyBzdG9wcGVkLiI7Ui5zaG93RXJyb3JQYW5lbChpLHZvaWQgMCx0KX19KX1jYXRjaChMKXt2YXIgTj0iRXJyb3IgY29uc3RydWN0aW5nIENlc2l1bVdpZGdldC4iLHo9J1Zpc2l0IDxhIGhyZWY9Imh0dHA6Ly9nZXQud2ViZ2wub3JnIj5odHRwOi8vZ2V0LndlYmdsLm9yZzwvYT4gdG8gdmVyaWZ5IHRoYXQgeW91ciB3ZWIgYnJvd3NlciBhbmQgaGFyZHdhcmUgc3VwcG9ydCBXZWJHTC4gIENvbnNpZGVyIHRyeWluZyBhIGRpZmZlcmVudCB3ZWIgYnJvd3NlciBvciB1cGRhdGluZyB5b3VyIHZpZGVvIGRyaXZlcnMuICBEZXRhaWxlZCBlcnJvciBpbmZvcm1hdGlvbiBpcyBiZWxvdzonO3Rocm93IHRoaXMuc2hvd0Vycm9yUGFuZWwoTix6LEwpLEx9fTtyZXR1cm4gYShQLnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sY2FudmFzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FudmFzfX0sY3JlZGl0Q29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlZGl0Q29udGFpbmVyfX0sc2NlbmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2VuZX19LGNsb2NrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xvY2t9fSxzY3JlZW5TcGFjZUV2ZW50SGFuZGxlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjcmVlblNwYWNlRXZlbnRIYW5kbGVyfX0sdGFyZ2V0RnJhbWVSYXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGFyZ2V0RnJhbWVSYXRlfSxzZXQ6ZnVuY3Rpb24oZSl7aWYoMD49ZSl0aHJvdyBuZXcgbCgidGFyZ2V0RnJhbWVSYXRlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAuIik7dGhpcy5fdGFyZ2V0RnJhbWVSYXRlPWV9fSx1c2VEZWZhdWx0UmVuZGVyTG9vcDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VzZURlZmF1bHRSZW5kZXJMb29wfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fdXNlRGVmYXVsdFJlbmRlckxvb3AhPT1lJiYodGhpcy5fdXNlRGVmYXVsdFJlbmRlckxvb3A9ZSxlJiYhdGhpcy5fcmVuZGVyTG9vcFJ1bm5pbmcmJlModGhpcykpfX0scmVzb2x1dGlvblNjYWxlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVzb2x1dGlvblNjYWxlfSxzZXQ6ZnVuY3Rpb24oZSl7aWYoMD49ZSl0aHJvdyBuZXcgbCgicmVzb2x1dGlvblNjYWxlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAuIik7dGhpcy5fcmVzb2x1dGlvblNjYWxlPWUsdGhpcy5fZm9yY2VSZXNpemU9ITB9fX0pLFAucHJvdG90eXBlLnNob3dFcnJvclBhbmVsPWZ1bmN0aW9uKGUsdCxpKXt2YXIgbj10aGlzLl9lbGVtZW50LHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ci5jbGFzc05hbWU9ImNlc2l1bS13aWRnZXQtZXJyb3JQYW5lbCI7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7YS5jbGFzc05hbWU9ImNlc2l1bS13aWRnZXQtZXJyb3JQYW5lbC1jb250ZW50IixyLmFwcGVuZENoaWxkKGEpO3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3MuY2xhc3NOYW1lPSJjZXNpdW0td2lkZ2V0LWVycm9yUGFuZWwtaGVhZGVyIixzLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGUpKSxhLmFwcGVuZENoaWxkKHMpO3ZhciBsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2wuY2xhc3NOYW1lPSJjZXNpdW0td2lkZ2V0LWVycm9yUGFuZWwtc2Nyb2xsIixhLmFwcGVuZENoaWxkKGwpO3ZhciB1PWZ1bmN0aW9uKCl7bC5zdHlsZS5tYXhIZWlnaHQ9TWF0aC5tYXgoTWF0aC5yb3VuZCguOSpuLmNsaWVudEhlaWdodC0xMDApLDMwKSsicHgifTtpZih1KCksbyh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikmJndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLHUsITEpLG8odCkpe3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2QuY2xhc3NOYW1lPSJjZXNpdW0td2lkZ2V0LWVycm9yUGFuZWwtbWVzc2FnZSIsZC5pbm5lckhUTUw9IjxwPiIrdCsiPC9wPiIsbC5hcHBlbmRDaGlsZChkKX12YXIgaD0iKG5vIGVycm9yIGRldGFpbHMgYXZhaWxhYmxlKSI7byhpKSYmKGg9YyhpKSk7dmFyIG09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bS5jbGFzc05hbWU9ImNlc2l1bS13aWRnZXQtZXJyb3JQYW5lbC1tZXNzYWdlIixtLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGgpKSxsLmFwcGVuZENoaWxkKG0pO3ZhciBmPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2YuY2xhc3NOYW1lPSJjZXNpdW0td2lkZ2V0LWVycm9yUGFuZWwtYnV0dG9uUGFuZWwiLGEuYXBwZW5kQ2hpbGQoZik7dmFyIHA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7cC5zZXRBdHRyaWJ1dGUoInR5cGUiLCJidXR0b24iKSxwLmNsYXNzTmFtZT0iY2VzaXVtLWJ1dHRvbiIscC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiT0siKSkscC5vbmNsaWNrPWZ1bmN0aW9uKCl7byh1KSYmbyh3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcikmJndpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJyZXNpemUiLHUsITEpLG4ucmVtb3ZlQ2hpbGQocil9LGYuYXBwZW5kQ2hpbGQocCksbi5hcHBlbmRDaGlsZChyKSxjb25zb2xlLmVycm9yKGUrIlxuIit0KyJcbiIraCl9LFAucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LFAucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9zY2VuZT10aGlzLl9zY2VuZSYmdGhpcy5fc2NlbmUuZGVzdHJveSgpLHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl9lbGVtZW50KSxzKHRoaXMpfSxQLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jYW52YXMsdD1lLmNsaWVudFdpZHRoLGk9ZS5jbGllbnRIZWlnaHQ7KHRoaXMuX2ZvcmNlUmVzaXplfHx0aGlzLl9jYW52YXNXaWR0aCE9PXR8fHRoaXMuX2NhbnZhc0hlaWdodCE9PWkpJiYodGhpcy5fZm9yY2VSZXNpemU9ITEsVCh0aGlzKSx4KHRoaXMpKX0sUC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7dGhpcy5fc2NlbmUuaW5pdGlhbGl6ZUZyYW1lKCk7dmFyIGU9dGhpcy5fY2xvY2sudGljaygpO3RoaXMuX2NhblJlbmRlciYmdGhpcy5fc2NlbmUucmVuZGVyKGUpfSxQfSksZGVmaW5lKCJXaWRnZXRzL0Nsb2NrVmlld01vZGVsIixbIi4uL0NvcmUvQ2xvY2siLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0V2ZW50SGVscGVyIiwiLi4vQ29yZS9KdWxpYW5EYXRlIiwiLi4vVGhpcmRQYXJ0eS9rbm9ja291dCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbihpKXt0KGkpfHwoaT1uZXcgZSksdGhpcy5fY2xvY2s9aSx0aGlzLl9ldmVudEhlbHBlcj1uZXcgcix0aGlzLl9ldmVudEhlbHBlci5hZGQoaS5vblRpY2ssdGhpcy5zeW5jaHJvbml6ZSx0aGlzKTt2YXIgbj1hLm9ic2VydmFibGUoaS5zdGFydFRpbWUpO24uZXF1YWxpdHlDb21wYXJlcj1vLmVxdWFscyx0aGlzLnN5c3RlbVRpbWU9YS5vYnNlcnZhYmxlKG8ubm93KCkpLHRoaXMuc3lzdGVtVGltZS5lcXVhbGl0eUNvbXBhcmVyPW8uZXF1YWxzLGEudHJhY2sodGhpcyxbInN5c3RlbVRpbWUiXSksdGhpcy5zdGFydFRpbWU9dm9pZCAwLGEuZGVmaW5lUHJvcGVydHkodGhpcywic3RhcnRUaW1lIix7Z2V0Om4sc2V0OmZ1bmN0aW9uKGUpe24oZSksaS5zdGFydFRpbWU9ZX19KTt2YXIgcz1hLm9ic2VydmFibGUoaS5zdG9wVGltZSk7cy5lcXVhbGl0eUNvbXBhcmVyPW8uZXF1YWxzLHRoaXMuc3RvcFRpbWU9dm9pZCAwLGEuZGVmaW5lUHJvcGVydHkodGhpcywic3RvcFRpbWUiLHtnZXQ6cyxzZXQ6ZnVuY3Rpb24oZSl7aS5zdG9wVGltZT1lLHMoZSl9fSk7dmFyIGw9YS5vYnNlcnZhYmxlKGkuY3VycmVudFRpbWUpO2wuZXF1YWxpdHlDb21wYXJlcj1vLmVxdWFscyx0aGlzLmN1cnJlbnRUaW1lPXZvaWQgMCxhLmRlZmluZVByb3BlcnR5KHRoaXMsImN1cnJlbnRUaW1lIix7Z2V0Omwsc2V0OmZ1bmN0aW9uKGUpe2kuY3VycmVudFRpbWU9ZSxsKGUpfX0pO3ZhciB1PWEub2JzZXJ2YWJsZShpLm11bHRpcGxpZXIpO3RoaXMubXVsdGlwbGllcj12b2lkIDAsYS5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJtdWx0aXBsaWVyIix7Z2V0OnUsc2V0OmZ1bmN0aW9uKGUpe2kubXVsdGlwbGllcj1lLHUoZSl9fSk7dmFyIGM9YS5vYnNlcnZhYmxlKGkuY2xvY2tTdGVwKTtjLmVxdWFsaXR5Q29tcGFyZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT09PXR9LHRoaXMuY2xvY2tTdGVwPXZvaWQgMCxhLmRlZmluZVByb3BlcnR5KHRoaXMsImNsb2NrU3RlcCIse2dldDpjLHNldDpmdW5jdGlvbihlKXtjKGUpLGkuY2xvY2tTdGVwPWV9fSk7dmFyIGQ9YS5vYnNlcnZhYmxlKGkuY2xvY2tSYW5nZSk7ZC5lcXVhbGl0eUNvbXBhcmVyPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9PT10fSx0aGlzLmNsb2NrUmFuZ2U9dm9pZCAwLGEuZGVmaW5lUHJvcGVydHkodGhpcywiY2xvY2tSYW5nZSIse2dldDpkLHNldDpmdW5jdGlvbihlKXtkKGUpLGkuY2xvY2tSYW5nZT1lfX0pO3ZhciBoPWEub2JzZXJ2YWJsZShpLmNhbkFuaW1hdGUpO3RoaXMuY2FuQW5pbWF0ZT12b2lkIDAsYS5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJjYW5BbmltYXRlIix7Z2V0Omgsc2V0OmZ1bmN0aW9uKGUpe2goZSksaS5jYW5BbmltYXRlPWV9fSk7dmFyIG09YS5vYnNlcnZhYmxlKGkuc2hvdWxkQW5pbWF0ZSk7dGhpcy5zaG91bGRBbmltYXRlPXZvaWQgMCxhLmRlZmluZVByb3BlcnR5KHRoaXMsInNob3VsZEFuaW1hdGUiLHtnZXQ6bSxzZXQ6ZnVuY3Rpb24oZSl7bShlKSxpLnNob3VsZEFuaW1hdGU9ZX19KX07cmV0dXJuIGkocy5wcm90b3R5cGUse2Nsb2NrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xvY2t9fX0pLHMucHJvdG90eXBlLnN5bmNocm9uaXplPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fY2xvY2ssdD1lLnN0YXJ0VGltZSxpPWUuc3RvcFRpbWUsbj1lLmN1cnJlbnRUaW1lLHI9ZS5tdWx0aXBsaWVyLGE9ZS5jbG9ja1N0ZXAscz1lLmNsb2NrUmFuZ2UsbD1lLmNhbkFuaW1hdGUsdT1lLnNob3VsZEFuaW1hdGU7dGhpcy5zeXN0ZW1UaW1lPW8ubm93KCksdGhpcy5zdGFydFRpbWU9dCx0aGlzLnN0b3BUaW1lPWksdGhpcy5jdXJyZW50VGltZT1uLHRoaXMubXVsdGlwbGllcj1yLHRoaXMuY2xvY2tTdGVwPWEsdGhpcy5jbG9ja1JhbmdlPXMsdGhpcy5jYW5BbmltYXRlPWwsdGhpcy5zaG91bGRBbmltYXRlPXV9LHMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLl9ldmVudEhlbHBlci5yZW1vdmVBbGwoKSxuKHRoaXMpfSxzfSksZGVmaW5lKCJXaWRnZXRzL0Z1bGxzY3JlZW5CdXR0b24vRnVsbHNjcmVlbkJ1dHRvblZpZXdNb2RlbCIsWyIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9Db3JlL0Z1bGxzY3JlZW4iLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vY3JlYXRlQ29tbWFuZCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbih0KXt2YXIgaT10aGlzLG49by5vYnNlcnZhYmxlKHIuZnVsbHNjcmVlbikscz1vLm9ic2VydmFibGUoci5lbmFibGVkKTt0aGlzLmlzRnVsbHNjcmVlbj12b2lkIDAsby5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJpc0Z1bGxzY3JlZW4iLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbigpfX0pLHRoaXMuaXNGdWxsc2NyZWVuRW5hYmxlZD12b2lkIDAsby5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJpc0Z1bGxzY3JlZW5FbmFibGVkIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHMoKX0sc2V0OmZ1bmN0aW9uKGUpe3MoZSYmci5lbmFibGVkKX19KSx0aGlzLnRvb2x0aXA9dm9pZCAwLG8uZGVmaW5lUHJvcGVydHkodGhpcywidG9vbHRpcCIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc0Z1bGxzY3JlZW5FbmFibGVkP24oKT8iRXhpdCBmdWxsIHNjcmVlbiI6IkZ1bGwgc2NyZWVuIjoiRnVsbCBzY3JlZW4gdW5hdmFpbGFibGUifSksdGhpcy5fY29tbWFuZD1hKGZ1bmN0aW9uKCl7ci5mdWxsc2NyZWVuP3IuZXhpdEZ1bGxzY3JlZW4oKTpyLnJlcXVlc3RGdWxsc2NyZWVuKGkuX2Z1bGxzY3JlZW5FbGVtZW50KX0sby5nZXRPYnNlcnZhYmxlKHRoaXMsImlzRnVsbHNjcmVlbkVuYWJsZWQiKSksdGhpcy5fZnVsbHNjcmVlbkVsZW1lbnQ9ZSh0LGRvY3VtZW50LmJvZHkpLHRoaXMuX2NhbGxiYWNrPWZ1bmN0aW9uKCl7bihyLmZ1bGxzY3JlZW4pfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKHIuY2hhbmdlRXZlbnROYW1lLHRoaXMuX2NhbGxiYWNrKX07cmV0dXJuIHQocy5wcm90b3R5cGUse2Z1bGxzY3JlZW5FbGVtZW50OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZnVsbHNjcmVlbkVsZW1lbnR9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9mdWxsc2NyZWVuRWxlbWVudD1lfX0sY29tbWFuZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbW1hbmR9fX0pLHMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHIuY2hhbmdlRXZlbnROYW1lLHRoaXMuX2NhbGxiYWNrKSxpKHRoaXMpfSxzfSksZGVmaW5lKCJXaWRnZXRzL0Z1bGxzY3JlZW5CdXR0b24vRnVsbHNjcmVlbkJ1dHRvbiIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL2dldEVsZW1lbnQiLCIuL0Z1bGxzY3JlZW5CdXR0b25WaWV3TW9kZWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9Ik0gODMuOTY4NzUgMTcuNTYyNSBMIDgzLjk2ODc1IDE3LjU5Mzc1IEwgNzYuNjU2MjUgMjQuODc1IEwgOTcuMDkzNzUgMjQuOTY4NzUgTCA3Ni4wOTM3NSA0NS45Njg3NSBMIDgxLjkzNzUgNTEuODEyNSBMIDEwMi43ODEyNSAzMC45Mzc1IEwgMTAyLjg3NSA1MS4xNTYyNSBMIDExMC4xNTYyNSA0My44NzUgTCAxMTAuMTg3NSAxNy41OTM3NSBMIDgzLjk2ODc1IDE3LjU2MjUgeiBNIDQ0LjEyNSAxNy41OTM3NSBMIDE3LjkwNjI1IDE3LjYyNSBMIDE3LjkzNzUgNDMuOTA2MjUgTCAyNS4yMTg3NSA1MS4xODc1IEwgMjUuMzEyNSAzMC45Njg3NSBMIDQ2LjE1NjI1IDUxLjgxMjUgTCA1MiA0NS45Njg3NSBMIDMxIDI1IEwgNTEuNDM3NSAyNC45MDYyNSBMIDQ0LjEyNSAxNy41OTM3NSB6IE0gNDYuMDYyNSA3Ni4wMzEyNSBMIDI1LjE4NzUgOTYuODc1IEwgMjUuMDkzNzUgNzYuNjU2MjUgTCAxNy44MTI1IDgzLjkzNzUgTCAxNy44MTI1IDExMC4yMTg3NSBMIDQ0IDExMC4yNSBMIDUxLjMxMjUgMTAyLjkzNzUgTCAzMC45MDYyNSAxMDIuODQzNzUgTCA1MS44NzUgODEuODc1IEwgNDYuMDYyNSA3Ni4wMzEyNSB6IE0gODIgNzYuMTU2MjUgTCA3Ni4xNTYyNSA4MiBMIDk3LjE1NjI1IDEwMyBMIDc2LjcxODc1IDEwMy4wNjI1IEwgODQuMDMxMjUgMTEwLjM3NSBMIDExMC4yNSAxMTAuMzQzNzUgTCAxMTAuMjE4NzUgODQuMDYyNSBMIDEwMi45Mzc1IDc2LjgxMjUgTCAxMDIuODQzNzUgOTcgTCA4MiA3Ni4xNTYyNSB6IixsPSJNIDEwNC4zNDM3NSAxNy41NjI1IEwgODMuNSAzOC40Mzc1IEwgODMuNDA2MjUgMTguMjE4NzUgTCA3Ni4xMjUgMjUuNSBMIDc2LjA5Mzc1IDUxLjc4MTI1IEwgMTAyLjMxMjUgNTEuODEyNSBMIDEwMi4zMTI1IDUxLjc4MTI1IEwgMTA5LjYyNSA0NC41IEwgODkuMTg3NSA0NC40MDYyNSBMIDExMC4xODc1IDIzLjQwNjI1IEwgMTA0LjM0Mzc1IDE3LjU2MjUgeiBNIDIzLjc1IDE3LjU5Mzc1IEwgMTcuOTA2MjUgMjMuNDM3NSBMIDM4LjkwNjI1IDQ0LjQzNzUgTCAxOC41IDQ0LjUzMTI1IEwgMjUuNzgxMjUgNTEuODEyNSBMIDUyIDUxLjc4MTI1IEwgNTEuOTY4NzUgMjUuNTMxMjUgTCA0NC42ODc1IDE4LjI1IEwgNDQuNjI1IDM4LjQ2ODc1IEwgMjMuNzUgMTcuNTkzNzUgeiBNIDI1LjY4NzUgNzYuMDMxMjUgTCAxOC4zNzUgODMuMzEyNSBMIDM4Ljc4MTI1IDgzLjQwNjI1IEwgMTcuODEyNSAxMDQuNDA2MjUgTCAyMy42MjUgMTEwLjI1IEwgNDQuNSA4OS4zNzUgTCA0NC41OTM3NSAxMDkuNTkzNzUgTCA1MS44NzUgMTAyLjMxMjUgTCA1MS44NzUgNzYuMDYyNSBMIDI1LjY4NzUgNzYuMDMxMjUgeiBNIDEwMi4zNzUgNzYuMTU2MjUgTCA3Ni4xNTYyNSA3Ni4xODc1IEwgNzYuMTg3NSAxMDIuNDM3NSBMIDgzLjQ2ODc1IDEwOS43MTg3NSBMIDgzLjU2MjUgODkuNTMxMjUgTCAxMDQuNDA2MjUgMTEwLjM3NSBMIDExMC4yNSAxMDQuNTMxMjUgTCA4OS4yNSA4My41MzEyNSBMIDEwOS42ODc1IDgzLjQ2ODc1IEwgMTAyLjM3NSA3Ni4xNTYyNSB6Iix1PWZ1bmN0aW9uKGUsdCl7ZT1vKGUpO3ZhciBpPW5ldyBhKHQpO2kuX2V4aXRGdWxsU2NyZWVuUGF0aD1sLGkuX2VudGVyRnVsbFNjcmVlblBhdGg9czt2YXIgbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTtuLnR5cGU9ImJ1dHRvbiIsbi5jbGFzc05hbWU9ImNlc2l1bS1idXR0b24gY2VzaXVtLWZ1bGxzY3JlZW5CdXR0b24iLG4uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJhdHRyOiB7IHRpdGxlOiB0b29sdGlwIH0sY2xpY2s6IGNvbW1hbmQsZW5hYmxlOiBpc0Z1bGxzY3JlZW5FbmFibGVkLGNlc2l1bVN2Z1BhdGg6IHsgcGF0aDogaXNGdWxsc2NyZWVuID8gX2V4aXRGdWxsU2NyZWVuUGF0aCA6IF9lbnRlckZ1bGxTY3JlZW5QYXRoLCB3aWR0aDogMTI4LCBoZWlnaHQ6IDEyOCB9IiksZS5hcHBlbmRDaGlsZChuKSxyLmFwcGx5QmluZGluZ3MoaSxuKSx0aGlzLl9jb250YWluZXI9ZSx0aGlzLl92aWV3TW9kZWw9aSx0aGlzLl9lbGVtZW50PW59O3JldHVybiB0KHUucHJvdG90eXBlLHtjb250YWluZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250YWluZXJ9fSx2aWV3TW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3TW9kZWx9fX0pLHUucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld01vZGVsLmRlc3Ryb3koKSxyLmNsZWFuTm9kZSh0aGlzLl9lbGVtZW50KSx0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fZWxlbWVudCksaSh0aGlzKX0sdX0pLGRlZmluZSgiV2lkZ2V0cy9HZW9jb2Rlci9HZW9jb2RlclZpZXdNb2RlbCIsWyIuLi8uLi9Db3JlL0JpbmdNYXBzQXBpIiwiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vQ29yZS9qc29ucCIsIi4uLy4uL0NvcmUvTWF0cml4NCIsIi4uLy4uL0NvcmUvUmVjdGFuZ2xlIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uLy4uL1RoaXJkUGFydHkvd2hlbiIsIi4uL2NyZWF0ZUNvbW1hbmQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1LGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGUpe3ZhciB0PWUuc2VhcmNoVGV4dDtpZighL15ccyokLy50ZXN0KHQpKXtlLl9pc1NlYXJjaEluUHJvZ3Jlc3M9ITA7dmFyIG49byhlLl91cmwrIlJFU1QvdjEvTG9jYXRpb25zIix7cGFyYW1ldGVyczp7cXVlcnk6dCxrZXk6ZS5fa2V5fSxjYWxsYmFja1BhcmFtZXRlck5hbWU6Impzb25wIn0pLHI9ZS5fZ2VvY29kZUluUHJvZ3Jlc3M9dShuLGZ1bmN0aW9uKHQpe2lmKCFyLmNhbmNlbCl7aWYoZS5faXNTZWFyY2hJblByb2dyZXNzPSExLDA9PT10LnJlc291cmNlU2V0cy5sZW5ndGgpcmV0dXJuIGUuc2VhcmNoVGV4dD1lLl9zZWFyY2hUZXh0KyIgKG5vdCBmb3VuZCkiLHZvaWQgMDt2YXIgbj10LnJlc291cmNlU2V0c1swXTtpZigwPT09bi5yZXNvdXJjZXMubGVuZ3RoKXJldHVybiBlLnNlYXJjaFRleHQ9ZS5fc2VhcmNoVGV4dCsiIChub3QgZm91bmQpIix2b2lkIDA7dmFyIG89bi5yZXNvdXJjZXNbMF07ZS5fc2VhcmNoVGV4dD1vLm5hbWU7dmFyIGw9by5iYm94LHU9bFswXSxjPWxbMV0sZD1sWzJdLGg9bFszXSxtPXMuZnJvbURlZ3JlZXMoYyx1LGgsZCksZj1lLl9zY2VuZS5jYW1lcmEscD1mLmdldFJlY3RhbmdsZUNhbWVyYUNvb3JkaW5hdGVzKG0pO2kocCkmJmUuX3NjZW5lLmNhbWVyYS5mbHlUbyh7ZGVzdGluYXRpb246cCxkdXJhdGlvbjplLl9mbGlnaHREdXJhdGlvbixlbmRUcmFuc2Zvcm06YS5JREVOVElUWSxjb252ZXJ0OiExfSl9fSxmdW5jdGlvbigpe3IuY2FuY2VsfHwoZS5faXNTZWFyY2hJblByb2dyZXNzPSExLGUuc2VhcmNoVGV4dD1lLl9zZWFyY2hUZXh0KyIgKGVycm9yKSIpfSl9fWZ1bmN0aW9uIGgoZSl7ZS5faXNTZWFyY2hJblByb2dyZXNzPSExLGkoZS5fZ2VvY29kZUluUHJvZ3Jlc3MpJiYoZS5fZ2VvY29kZUluUHJvZ3Jlc3MuY2FuY2VsPSEwLGUuX2dlb2NvZGVJblByb2dyZXNzPXZvaWQgMCl9dmFyIG09ZnVuY3Rpb24oaSl7dGhpcy5fdXJsPXQoaS51cmwsIi8vZGV2LnZpcnR1YWxlYXJ0aC5uZXQvIiksdGhpcy5fdXJsLmxlbmd0aD4wJiYiLyIhPT10aGlzLl91cmxbdGhpcy5fdXJsLmxlbmd0aC0xXSYmKHRoaXMuX3VybCs9Ii8iKSx0aGlzLl9rZXk9ZS5nZXRLZXkoaS5rZXkpLHRoaXMuX3NjZW5lPWkuc2NlbmUsdGhpcy5fZmxpZ2h0RHVyYXRpb249dChpLmZsaWdodER1cmF0aW9uLDEuNSksdGhpcy5fc2VhcmNoVGV4dD0iIix0aGlzLl9pc1NlYXJjaEluUHJvZ3Jlc3M9ITEsdGhpcy5fZ2VvY29kZUluUHJvZ3Jlc3M9dm9pZCAwO3ZhciBuPXRoaXM7dGhpcy5fc2VhcmNoQ29tbWFuZD1jKGZ1bmN0aW9uKCl7bi5pc1NlYXJjaEluUHJvZ3Jlc3M/aChuKTpkKG4pfSksbC50cmFjayh0aGlzLFsiX3NlYXJjaFRleHQiLCJfaXNTZWFyY2hJblByb2dyZXNzIl0pLHRoaXMuaXNTZWFyY2hJblByb2dyZXNzPXZvaWQgMCxsLmRlZmluZVByb3BlcnR5KHRoaXMsImlzU2VhcmNoSW5Qcm9ncmVzcyIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc1NlYXJjaEluUHJvZ3Jlc3N9fSksdGhpcy5zZWFyY2hUZXh0PXZvaWQgMCxsLmRlZmluZVByb3BlcnR5KHRoaXMsInNlYXJjaFRleHQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1NlYXJjaEluUHJvZ3Jlc3M/IlNlYXJjaGluZy4uLiI6dGhpcy5fc2VhcmNoVGV4dH0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3NlYXJjaFRleHQ9ZX19KSx0aGlzLmZsaWdodER1cmF0aW9uPXZvaWQgMCxsLmRlZmluZVByb3BlcnR5KHRoaXMsImZsaWdodER1cmF0aW9uIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZsaWdodER1cmF0aW9ufSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fZmxpZ2h0RHVyYXRpb249ZX19KX07cmV0dXJuIG4obS5wcm90b3R5cGUse3VybDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VybH19LGtleTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleX19LHNjZW5lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NlbmV9fSxzZWFyY2g6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZWFyY2hDb21tYW5kfX19KSxtfSksZGVmaW5lKCJXaWRnZXRzL0dlb2NvZGVyL0dlb2NvZGVyIixbIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vZ2V0RWxlbWVudCIsIi4vR2VvY29kZXJWaWV3TW9kZWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhKXsidXNlIHN0cmljdCI7dmFyIHM9Ik0yOS43NzIsMjYuNDMzbC03LjEyNi03LjEyNmMwLjk2LTEuNTgzLDEuNTIzLTMuNDM1LDEuNTI0LTUuNDIxQzI0LjE2OSw4LjA5MywxOS40NzgsMy40MDEsMTMuNjg4LDMuMzk5QzcuODk3LDMuNDAxLDMuMjA0LDguMDkzLDMuMjA0LDEzLjg4NWMwLDUuNzg5LDQuNjkzLDEwLjQ4MSwxMC40ODQsMTAuNDgxYzEuOTg3LDAsMy44MzktMC41NjMsNS40MjItMS41MjNsNy4xMjgsNy4xMjdMMjkuNzcyLDI2LjQzM3pNNy4yMDMsMTMuODg1YzAuMDA2LTMuNTgyLDIuOTAzLTYuNDc4LDYuNDg0LTYuNDg2YzMuNTc5LDAuMDA4LDYuNDc4LDIuOTA0LDYuNDg0LDYuNDg2Yy0wLjAwNywzLjU4LTIuOTA1LDYuNDc2LTYuNDg0LDYuNDg0QzEwLjEwNiwyMC4zNjEsNy4yMDksMTcuNDY1LDcuMjAzLDEzLjg4NXoiLGw9Ik0yNC43NzgsMjEuNDE5IDE5LjI3NiwxNS45MTcgMjQuNzc3LDEwLjQxNSAyMS45NDksNy41ODUgMTYuNDQ3LDEzLjA4NyAxMC45NDUsNy41ODUgOC4xMTcsMTAuNDE1IDEzLjYxOCwxNS45MTcgOC4xMTYsMjEuNDE5IDEwLjk0NiwyNC4yNDggMTYuNDQ3LDE4Ljc0NiAyMS45NDgsMjQuMjQ4eiIsdT1mdW5jdGlvbihlKXt2YXIgdD1vKGUuY29udGFpbmVyKSxpPW5ldyBhKGUpO2kuX3N0YXJ0U2VhcmNoUGF0aD1zLGkuX3N0b3BTZWFyY2hQYXRoPWw7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZm9ybSIpO24uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJzdWJtaXQ6IHNlYXJjaCIpO3ZhciB1PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7dS50eXBlPSJzZWFyY2giLHUuY2xhc3NOYW1lPSJjZXNpdW0tZ2VvY29kZXItaW5wdXQiLHUuc2V0QXR0cmlidXRlKCJwbGFjZWhvbGRlciIsIkVudGVyIGFuIGFkZHJlc3Mgb3IgbGFuZG1hcmsuLi4iKSx1LnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwndmFsdWU6IHNlYXJjaFRleHQsdmFsdWVVcGRhdGU6ICJhZnRlcmtleWRvd24iLGRpc2FibGU6IGlzU2VhcmNoSW5Qcm9ncmVzcyxjc3M6IHsgImNlc2l1bS1nZW9jb2Rlci1pbnB1dC13aWRlIiA6IHNlYXJjaFRleHQubGVuZ3RoID4gMCB9Jyksbi5hcHBlbmRDaGlsZCh1KTt2YXIgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7Yy5jbGFzc05hbWU9ImNlc2l1bS1nZW9jb2Rlci1zZWFyY2hCdXR0b24iLGMuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjbGljazogc2VhcmNoLGNlc2l1bVN2Z1BhdGg6IHsgcGF0aDogaXNTZWFyY2hJblByb2dyZXNzID8gX3N0b3BTZWFyY2hQYXRoIDogX3N0YXJ0U2VhcmNoUGF0aCwgd2lkdGg6IDMyLCBoZWlnaHQ6IDMyIH0iKSxuLmFwcGVuZENoaWxkKGMpLHQuYXBwZW5kQ2hpbGQobiksci5hcHBseUJpbmRpbmdzKGksbiksdGhpcy5fY29udGFpbmVyPXQsdGhpcy5fdmlld01vZGVsPWksdGhpcy5fZm9ybT1uLHRoaXMuX29uSW5wdXRCZWdpbj1mdW5jdGlvbihlKXt0LmNvbnRhaW5zKGUudGFyZ2V0KXx8dS5ibHVyKCl9LHRoaXMuX29uSW5wdXRFbmQ9ZnVuY3Rpb24oZSl7dC5jb250YWlucyhlLnRhcmdldCkmJnUuZm9jdXMoKX0sZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9vbklucHV0QmVnaW4sITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLHRoaXMuX29uSW5wdXRFbmQsITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLHRoaXMuX29uSW5wdXRCZWdpbiwhMCksZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hlbmQiLHRoaXMuX29uSW5wdXRFbmQsITApfTtyZXR1cm4gdCh1LnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sdmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld01vZGVsfX19KSx1LnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSx1LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsdGhpcy5fb25JbnB1dEJlZ2luLCEwKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZXVwIix0aGlzLl9vbklucHV0RW5kLCEwKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0Iix0aGlzLl9vbklucHV0QmVnaW4sITApLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNoZW5kIix0aGlzLl9vbklucHV0RW5kLCEwKSxyLmNsZWFuTm9kZSh0aGlzLl9mb3JtKSx0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fZm9ybSksaSh0aGlzKX0sdX0pLGRlZmluZSgiV2lkZ2V0cy9Ib21lQnV0dG9uL0hvbWVCdXR0b25WaWV3TW9kZWwiLFsiLi4vLi4vQ29yZS9DYXJ0ZXNpYW4zIiwiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vQ29yZS9NYXRyaXg0IiwiLi4vLi4vQ29yZS9SZWN0YW5nbGUiLCIuLi8uLi9TY2VuZS9DYW1lcmEiLCIuLi8uLi9TY2VuZS9TY2VuZU1vZGUiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vY3JlYXRlQ29tbWFuZCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQodCxuKXt2YXIgcj10Lm1vZGU7aSh0KSYmcj09PWwuTU9SUEhJTkcmJnQuY29tcGxldGVNb3JwaCgpO3ZhciB1LGMsZDtpZihyPT09bC5TQ0VORTJEKXQuY2FtZXJhLmZseVRvUmVjdGFuZ2xlKHtkZXN0aW5hdGlvbjphLk1BWF9WQUxVRSxkdXJhdGlvbjpuLGVuZFRyYW5zZm9ybTpvLklERU5USVRZfSk7ZWxzZSBpZihyPT09bC5TQ0VORTNEKXt2YXIgaD10LmNhbWVyYS5nZXRSZWN0YW5nbGVDYW1lcmFDb29yZGluYXRlcyhzLkRFRkFVTFRfVklFV19SRUNUQU5HTEUpLG09ZS5tYWduaXR1ZGUoaCk7bSs9bSpzLkRFRkFVTFRfVklFV19GQUNUT1IsZS5ub3JtYWxpemUoaCxoKSxlLm11bHRpcGx5QnlTY2FsYXIoaCxtLGgpLHU9ZS5ub3JtYWxpemUoaCxuZXcgZSksZS5uZWdhdGUodSx1KSxjPWUuY3Jvc3ModSxlLlVOSVRfWixuZXcgZSksZD1lLmNyb3NzKGMsdSxuZXcgZSksdC5jYW1lcmEuZmx5VG8oe2Rlc3RpbmF0aW9uOmgsZGlyZWN0aW9uOnUsdXA6ZCxkdXJhdGlvbjpuLGVuZFRyYW5zZm9ybTpvLklERU5USVRZfSl9ZWxzZSBpZihyPT09bC5DT0xVTUJVU19WSUVXKXt2YXIgZj10Lmdsb2JlLmVsbGlwc29pZC5tYXhpbXVtUmFkaXVzLHA9bmV3IGUoMCwtMSwxKTtwPWUubXVsdGlwbHlCeVNjYWxhcihlLm5vcm1hbGl6ZShwLHApLDUqZixwKSx1PW5ldyBlLHU9ZS5ub3JtYWxpemUoZS5zdWJ0cmFjdChlLlpFUk8scCx1KSx1KSxjPWUuY3Jvc3ModSxlLlVOSVRfWixuZXcgZSksZD1lLmNyb3NzKGMsdSxuZXcgZSksdC5jYW1lcmEuZmx5VG8oe2Rlc3RpbmF0aW9uOnAsZHVyYXRpb246bix1cDpkLGRpcmVjdGlvbjp1LGVuZFRyYW5zZm9ybTpvLklERU5USVRZLGNvbnZlcnQ6ITF9KX19dmFyIGg9ZnVuY3Rpb24oZSxpKXtpPXQoaSwxLjUpLHRoaXMuX3NjZW5lPWUsdGhpcy5fZHVyYXRpb249aTt2YXIgbj10aGlzO3RoaXMuX2NvbW1hbmQ9YyhmdW5jdGlvbigpe2Qobi5fc2NlbmUsbi5fZHVyYXRpb24pfSksdGhpcy50b29sdGlwPSJWaWV3IEhvbWUiLHUudHJhY2sodGhpcyxbInRvb2x0aXAiXSl9O3JldHVybiBuKGgucHJvdG90eXBlLHtzY2VuZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjZW5lfX0sY29tbWFuZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbW1hbmR9fSxkdXJhdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2R1cmF0aW9ufSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fZHVyYXRpb249ZX19fSksaH0pLGRlZmluZSgiV2lkZ2V0cy9Ib21lQnV0dG9uL0hvbWVCdXR0b24iLFsiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi9nZXRFbGVtZW50IiwiLi9Ib21lQnV0dG9uVmlld01vZGVsIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKGUsdCxpKXtlPW8oZSk7dmFyIG49bmV3IGEodCxpKTtuLl9zdmdQYXRoPSJNMTQsNGwtMTAsOC43NWgyMGwtNC4yNS0zLjcxODh2LTQuNjU2MmgtMi44MTJ2Mi4xODc1bC0yLjkzOC0yLjU2MjV6bS03LjA5MzgsOS45MDZ2MTAuMDk0aDE0LjA5NHYtMTAuMDk0aC0xNC4wOTR6bTIuMTg3NiwyLjMxM2gzLjMxMjJ2NC4yNWgtMy4zMTIydi00LjI1em01Ljg0NDIsMS4yODFoMy40MDZ2Ni40MzhoLTMuNDA2di02LjQzOHoiO3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpO3MudHlwZT0iYnV0dG9uIixzLmNsYXNzTmFtZT0iY2VzaXVtLWJ1dHRvbiBjZXNpdW0tdG9vbGJhci1idXR0b24gY2VzaXVtLWhvbWUtYnV0dG9uIixzLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiYXR0cjogeyB0aXRsZTogdG9vbHRpcCB9LGNsaWNrOiBjb21tYW5kLGNlc2l1bVN2Z1BhdGg6IHsgcGF0aDogX3N2Z1BhdGgsIHdpZHRoOiAyOCwgaGVpZ2h0OiAyOCB9IiksZS5hcHBlbmRDaGlsZChzKSxyLmFwcGx5QmluZGluZ3MobixzKSx0aGlzLl9jb250YWluZXI9ZSx0aGlzLl92aWV3TW9kZWw9bix0aGlzLl9lbGVtZW50PXN9O3JldHVybiB0KHMucHJvdG90eXBlLHtjb250YWluZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250YWluZXJ9fSx2aWV3TW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3TW9kZWx9fX0pLHMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gci5jbGVhbk5vZGUodGhpcy5fZWxlbWVudCksdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX2VsZW1lbnQpLGkodGhpcyl9LHN9KSxkZWZpbmUoIldpZGdldHMvSW5mb0JveC9JbmZvQm94Vmlld01vZGVsIixbIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9FdmVudCIsIi4uLy4uL0NvcmUvZm9ybWF0RXJyb3IiLCIuLi8uLi9Db3JlL1Rhc2tQcm9jZXNzb3IiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vLi4vVGhpcmRQYXJ0eS93aGVuIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbChlKXtyZXR1cm4gdChoKXx8KGg9bmV3IG8oInNhbml0aXplSHRtbCIsMS8wKSksaC5zY2hlZHVsZVRhc2soZSl9dmFyIHU9Ik0gMTMuODQzNzUgNy4wMzEyNSBDIDExLjQxMjc5OCA3LjAzMTI1IDkuNDY4NzUgOC45NzUyOTggOS40Njg3NSAxMS40MDYyNSBMIDkuNDY4NzUgMTEuNTkzNzUgTCAyLjUzMTI1IDcuMjE4NzUgTCAyLjUzMTI1IDI0LjA2MjUgTCA5LjQ2ODc1IDE5LjY4NzUgQyA5LjQ4NTM0NDQgMjIuMTA0MDMzIDExLjQyMzE2NSAyNC4wNjI1IDEzLjg0Mzc1IDI0LjA2MjUgTCAyNS44NzUgMjQuMDYyNSBDIDI4LjMwNTk1MiAyNC4wNjI1IDMwLjI4MTI1IDIyLjA4NzIwMiAzMC4yODEyNSAxOS42NTYyNSBMIDMwLjI4MTI1IDExLjQwNjI1IEMgMzAuMjgxMjUgOC45NzUyOTggMjguMzA1OTUyIDcuMDMxMjUgMjUuODc1IDcuMDMxMjUgTCAxMy44NDM3NSA3LjAzMTI1IHoiLGM9Ik0gMjcuMzQzNzUgMS42NTYyNSBMIDUuMjgxMjUgMjcuOTM3NSBMIDguMDkzNzUgMzAuMzEyNSBMIDMwLjE1NjI1IDQuMDMxMjUgTCAyNy4zNDM3NSAxLjY1NjI1IHogTSAxMy44NDM3NSA3LjAzMTI1IEMgMTEuNDEyNzk4IDcuMDMxMjUgOS40Njg3NSA4Ljk3NTI5OCA5LjQ2ODc1IDExLjQwNjI1IEwgOS40Njg3NSAxMS41OTM3NSBMIDIuNTMxMjUgNy4yMTg3NSBMIDIuNTMxMjUgMjQuMDYyNSBMIDkuNDY4NzUgMTkuNjg3NSBDIDkuNDcyNDg5MyAyMC4yMzIwMzYgOS41Njc2MTA4IDIwLjczNzkgOS43NSAyMS4yMTg3NSBMIDIxLjY1NjI1IDcuMDMxMjUgTCAxMy44NDM3NSA3LjAzMTI1IHogTSAyOC4yMTg3NSA3LjcxODc1IEwgMTQuNTMxMjUgMjQuMDYyNSBMIDI1Ljg3NSAyNC4wNjI1IEMgMjguMzA1OTUyIDI0LjA2MjUgMzAuMjgxMjUgMjIuMDg3MjAyIDMwLjI4MTI1IDE5LjY1NjI1IEwgMzAuMjgxMjUgMTEuNDA2MjUgQyAzMC4yODEyNSA5LjgzNzE0MzkgMjkuNDU2MDI1IDguNDkwMjc3OSAyOC4yMTg3NSA3LjcxODc1IHoiLGQ9ZnVuY3Rpb24oKXt0aGlzLl9zYW5pdGl6ZXI9dm9pZCAwLHRoaXMuX2Rlc2NyaXB0aW9uUmF3SHRtbD0iIix0aGlzLl9kZXNjcmlwdGlvblNhbml0aXplZEh0bWw9IiIsdGhpcy5fY2FtZXJhQ2xpY2tlZD1uZXcgbix0aGlzLl9jbG9zZUNsaWNrZWQ9bmV3IG4sdGhpcy5tYXhIZWlnaHQ9NTAwLHRoaXMuZW5hYmxlQ2FtZXJhPSExLHRoaXMuaXNDYW1lcmFUcmFja2luZz0hMSx0aGlzLnNob3dJbmZvPSExLHRoaXMudGl0bGVUZXh0PSIiLHRoaXMubG9hZGluZ0luZGljYXRvckh0bWw9JzxkaXYgY2xhc3M9ImNlc2l1bS1pbmZvQm94LWxvYWRpbmdDb250YWluZXIiPjxzcGFuIGNsYXNzPSJjZXNpdW0taW5mb0JveC1sb2FkaW5nIj48L3NwYW4+PC9kaXY+JyxhLnRyYWNrKHRoaXMsWyJzaG93SW5mbyIsInRpdGxlVGV4dCIsIl9kZXNjcmlwdGlvblJhd0h0bWwiLCJfZGVzY3JpcHRpb25TYW5pdGl6ZWRIdG1sIiwibWF4SGVpZ2h0IiwiZW5hYmxlQ2FtZXJhIiwiaXNDYW1lcmFUcmFja2luZyJdKSx0aGlzLmRlc2NyaXB0aW9uUmF3SHRtbD12b2lkIDAsYS5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJkZXNjcmlwdGlvblJhd0h0bWwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVzY3JpcHRpb25SYXdIdG1sfSxzZXQ6ZnVuY3Rpb24oZSl7aWYodGhpcy5fZGVzY3JpcHRpb25SYXdIdG1sIT09ZSl7dGhpcy5fZGVzY3JpcHRpb25SYXdIdG1sPWUsdGhpcy5fZGVzY3JpcHRpb25TYW5pdGl6ZWRIdG1sPXRoaXMubG9hZGluZ0luZGljYXRvckh0bWw7dmFyIHQ9dGhpcztzKHRoaXMuc2FuaXRpemVyKGUpLGZ1bmN0aW9uKGkpe3QuX2Rlc2NyaXB0aW9uUmF3SHRtbD09PWUmJih0Ll9kZXNjcmlwdGlvblNhbml0aXplZEh0bWw9aSl9KS5vdGhlcndpc2UoZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIHNhbml0aXppbmcgSFRNTDogIityKGUpKX0pfX19KSx0aGlzLmRlc2NyaXB0aW9uU2FuaXRpemVkSHRtbD12b2lkIDAsYS5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJkZXNjcmlwdGlvblNhbml0aXplZEh0bWwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVzY3JpcHRpb25TYW5pdGl6ZWRIdG1sCn19KSx0aGlzLmNhbWVyYUljb25QYXRoPXZvaWQgMCxhLmRlZmluZVByb3BlcnR5KHRoaXMsImNhbWVyYUljb25QYXRoIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5hYmxlQ2FtZXJhfHx0aGlzLmlzQ2FtZXJhVHJhY2tpbmc/dTpjfX0pLGEuZGVmaW5lUHJvcGVydHkodGhpcywiX2JvZHlsZXNzIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX2Rlc2NyaXB0aW9uU2FuaXRpemVkSHRtbH19KX07ZC5wcm90b3R5cGUubWF4SGVpZ2h0T2Zmc2V0PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm1heEhlaWdodC1lKyJweCJ9O3ZhciBoO3JldHVybiBkLmRlZmF1bHRTYW5pdGl6ZXI9bCxpKGQucHJvdG90eXBlLHtjYW1lcmFDbGlja2VkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2FtZXJhQ2xpY2tlZH19LGNsb3NlQ2xpY2tlZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nsb3NlQ2xpY2tlZH19LHNhbml0aXplcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcy5fc2FuaXRpemVyLGQuZGVmYXVsdFNhbml0aXplcil9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9zYW5pdGl6ZXI9ZTt2YXIgdD10aGlzLl9kZXNjcmlwdGlvblJhd0h0bWw7dGhpcy5fZGVzY3JpcHRpb25SYXdIdG1sPSIiLHRoaXMuZGVzY3JpcHRpb25SYXdIdG1sPXR9fX0pLGR9KSxkZWZpbmUoIldpZGdldHMvSW5mb0JveC9JbmZvQm94IixbIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vZ2V0RWxlbWVudCIsIi4vSW5mb0JveFZpZXdNb2RlbCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1mdW5jdGlvbihlKXtlPW8oZSksdGhpcy5fY29udGFpbmVyPWU7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dC5jbGFzc05hbWU9ImNlc2l1bS1pbmZvQm94Iix0LnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ICJjZXNpdW0taW5mb0JveC12aXNpYmxlIiA6IHNob3dJbmZvLCAiY2VzaXVtLWluZm9Cb3gtYm9keWxlc3MiIDogX2JvZHlsZXNzIH0nKSxlLmFwcGVuZENoaWxkKHQpLHRoaXMuX2VsZW1lbnQ9dDt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtpLmNsYXNzTmFtZT0iY2VzaXVtLWluZm9Cb3gtdGl0bGUiLGkuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJ0ZXh0OiB0aXRsZVRleHQiKSx0LmFwcGVuZENoaWxkKGkpO3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpO24udHlwZT0iYnV0dG9uIixuLmNsYXNzTmFtZT0iY2VzaXVtLWJ1dHRvbiBjZXNpdW0taW5mb0JveC1jYW1lcmEiLG4uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdhdHRyOiB7IHRpdGxlOiAiRm9jdXMgY2FtZXJhIG9uIG9iamVjdCIgfSxjbGljazogZnVuY3Rpb24gKCkgeyBjYW1lcmFDbGlja2VkLnJhaXNlRXZlbnQoKTsgfSxlbmFibGU6IGVuYWJsZUNhbWVyYSxjZXNpdW1TdmdQYXRoOiB7IHBhdGg6IGNhbWVyYUljb25QYXRoLCB3aWR0aDogMzIsIGhlaWdodDogMzIgfScpLHQuYXBwZW5kQ2hpbGQobik7dmFyIHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7cy50eXBlPSJidXR0b24iLHMuY2xhc3NOYW1lPSJjZXNpdW0taW5mb0JveC1jbG9zZSIscy5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNsaWNrOiBmdW5jdGlvbiAoKSB7IGNsb3NlQ2xpY2tlZC5yYWlzZUV2ZW50KCk7IH0iKSxzLmlubmVySFRNTD0iJnRpbWVzOyIsdC5hcHBlbmRDaGlsZChzKTt2YXIgbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtsLmNsYXNzTmFtZT0iY2VzaXVtLWluZm9Cb3gtYm9keSIsdC5hcHBlbmRDaGlsZChsKTt2YXIgdT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt1LmNsYXNzTmFtZT0iY2VzaXVtLWluZm9Cb3gtZGVzY3JpcHRpb24iLHUuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJodG1sOiBkZXNjcmlwdGlvblNhbml0aXplZEh0bWwsc3R5bGUgOiB7IG1heEhlaWdodCA6IG1heEhlaWdodE9mZnNldCg0MCkgfSIpLGwuYXBwZW5kQ2hpbGQodSk7dmFyIGM9bmV3IGE7dGhpcy5fdmlld01vZGVsPWMsci5hcHBseUJpbmRpbmdzKHRoaXMuX3ZpZXdNb2RlbCx0KX07cmV0dXJuIHQocy5wcm90b3R5cGUse2NvbnRhaW5lcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRhaW5lcn19LHZpZXdNb2RlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZpZXdNb2RlbH19fSkscy5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0scy5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2NvbnRhaW5lcjtyZXR1cm4gci5jbGVhbk5vZGUodGhpcy5fZWxlbWVudCksZS5yZW1vdmVDaGlsZCh0aGlzLl9lbGVtZW50KSxpKHRoaXMpfSxzfSksZGVmaW5lKCJXaWRnZXRzL05hdmlnYXRpb25IZWxwQnV0dG9uL05hdmlnYXRpb25IZWxwQnV0dG9uVmlld01vZGVsIixbIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi9jcmVhdGVDb21tYW5kIl0sZnVuY3Rpb24oZSx0LGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1mdW5jdGlvbigpe3RoaXMuc2hvd0luc3RydWN0aW9ucz0hMTt2YXIgZT10aGlzO3RoaXMuX2NvbW1hbmQ9aShmdW5jdGlvbigpe2Uuc2hvd0luc3RydWN0aW9ucz0hZS5zaG93SW5zdHJ1Y3Rpb25zfSksdGhpcy5fc2hvd0NsaWNrPWkoZnVuY3Rpb24oKXtlLl90b3VjaD0hMX0pLHRoaXMuX3Nob3dUb3VjaD1pKGZ1bmN0aW9uKCl7ZS5fdG91Y2g9ITB9KSx0aGlzLl90b3VjaD0hMSx0aGlzLnRvb2x0aXA9Ik5hdmlnYXRpb24gSW5zdHJ1Y3Rpb25zIix0LnRyYWNrKHRoaXMsWyJ0b29sdGlwIiwic2hvd0luc3RydWN0aW9ucyIsIl90b3VjaCJdKX07cmV0dXJuIGUobi5wcm90b3R5cGUse2NvbW1hbmQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb21tYW5kfX0sc2hvd0NsaWNrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd0NsaWNrfX0sc2hvd1RvdWNoOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd1RvdWNofX19KSxufSksZGVmaW5lKCJXaWRnZXRzL05hdmlnYXRpb25IZWxwQnV0dG9uL05hdmlnYXRpb25IZWxwQnV0dG9uIixbIi4uLy4uL0NvcmUvYnVpbGRNb2R1bGVVcmwiLCIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vZ2V0RWxlbWVudCIsIi4vTmF2aWdhdGlvbkhlbHBCdXR0b25WaWV3TW9kZWwiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCl7InVzZSBzdHJpY3QiO3ZhciB1PWZ1bmN0aW9uKGkpe3ZhciBuPXMoaS5jb250YWluZXIpLHI9bmV3IGwsbz10KGkuaW5zdHJ1Y3Rpb25zSW5pdGlhbGx5VmlzaWJsZSwhMSk7ci5zaG93SW5zdHJ1Y3Rpb25zPW8sci5fc3ZnUGF0aD0iTTE2LDEuNDY2QzcuOTczLDEuNDY2LDEuNDY2LDcuOTczLDEuNDY2LDE2YzAsOC4wMjcsNi41MDcsMTQuNTM0LDE0LjUzNCwxNC41MzRjOC4wMjcsMCwxNC41MzQtNi41MDcsMTQuNTM0LTE0LjUzNEMzMC41MzQsNy45NzMsMjQuMDI3LDEuNDY2LDE2LDEuNDY2eiBNMTcuMzI4LDI0LjM3MWgtMi43MDd2LTIuNTk2aDIuNzA3VjI0LjM3MXpNMTcuMzI4LDE5LjAwM3YwLjg1OGgtMi43MDd2LTEuMDU3YzAtMy4xOSwzLjYzLTMuNjk2LDMuNjMtNS45NjNjMC0xLjAzNC0wLjkyNC0xLjgyNi0yLjEzNC0xLjgyNmMtMS4yNTQsMC0yLjM1NCwwLjkyNC0yLjM1NCwwLjkyNGwtMS41NDEtMS45MTVjMCwwLDEuNTE5LTEuNTg0LDQuMTM3LTEuNTg0YzIuNDg3LDAsNC43OTYsMS41NCw0Ljc5Niw0LjEzNkMyMS4xNTYsMTYuMjA4LDE3LjMyOCwxNi42MjcsMTcuMzI4LDE5LjAwM3oiO3ZhciB1PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTt1LmNsYXNzTmFtZT0iY2VzaXVtLW5hdmlnYXRpb25IZWxwQnV0dG9uLXdyYXBwZXIiLG4uYXBwZW5kQ2hpbGQodSk7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7Yy50eXBlPSJidXR0b24iLGMuY2xhc3NOYW1lPSJjZXNpdW0tYnV0dG9uIGNlc2l1bS10b29sYmFyLWJ1dHRvbiBjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWJ1dHRvbiIsYy5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImF0dHI6IHsgdGl0bGU6IHRvb2x0aXAgfSxjbGljazogY29tbWFuZCxjZXNpdW1TdmdQYXRoOiB7IHBhdGg6IF9zdmdQYXRoLCB3aWR0aDogMzIsIGhlaWdodDogMzIgfSIpLHUuYXBwZW5kQ2hpbGQoYyk7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZC5jbGFzc05hbWU9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAiLGQuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtdmlzaWJsZSIgOiBzaG93SW5zdHJ1Y3Rpb25zfScpLHUuYXBwZW5kQ2hpbGQoZCk7dmFyIGg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7aC5jbGFzc05hbWU9ImNlc2l1bS1uYXZpZ2F0aW9uLWJ1dHRvbiBjZXNpdW0tbmF2aWdhdGlvbi1idXR0b24tbGVmdCIsaC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NsaWNrOiBzaG93Q2xpY2ssIGNzczogeyJjZXNpdW0tbmF2aWdhdGlvbi1idXR0b24tc2VsZWN0ZWQiOiAhX3RvdWNoLCAiY2VzaXVtLW5hdmlnYXRpb24tYnV0dG9uLXVuc2VsZWN0ZWQiOiBfdG91Y2h9Jyk7dmFyIG09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7bS5zcmM9ZSgiV2lkZ2V0cy9JbWFnZXMvTmF2aWdhdGlvbkhlbHAvTW91c2Uuc3ZnIiksbS5jbGFzc05hbWU9ImNlc2l1bS1uYXZpZ2F0aW9uLWJ1dHRvbi1pY29uIixtLnN0eWxlLndpZHRoPSIyNXB4IixtLnN0eWxlLmhlaWdodD0iMjVweCIsaC5hcHBlbmRDaGlsZChtKSxoLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJNb3VzZSIpKTt2YXIgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTtmLmNsYXNzTmFtZT0iY2VzaXVtLW5hdmlnYXRpb24tYnV0dG9uIGNlc2l1bS1uYXZpZ2F0aW9uLWJ1dHRvbi1yaWdodCIsZi5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NsaWNrOiBzaG93VG91Y2gsIGNzczogeyJjZXNpdW0tbmF2aWdhdGlvbi1idXR0b24tc2VsZWN0ZWQiOiBfdG91Y2gsICJjZXNpdW0tbmF2aWdhdGlvbi1idXR0b24tdW5zZWxlY3RlZCI6ICFfdG91Y2h9Jyk7dmFyIHA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7cC5zcmM9ZSgiV2lkZ2V0cy9JbWFnZXMvTmF2aWdhdGlvbkhlbHAvVG91Y2guc3ZnIikscC5jbGFzc05hbWU9ImNlc2l1bS1uYXZpZ2F0aW9uLWJ1dHRvbi1pY29uIixwLnN0eWxlLndpZHRoPSIyNXB4IixwLnN0eWxlLmhlaWdodD0iMjVweCIsZi5hcHBlbmRDaGlsZChwKSxmLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJUb3VjaCIpKSxkLmFwcGVuZENoaWxkKGgpLGQuYXBwZW5kQ2hpbGQoZik7dmFyIHY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7di5jbGFzc05hbWU9ImNlc2l1bS1jbGljay1uYXZpZ2F0aW9uLWhlbHAgY2VzaXVtLW5hdmlnYXRpb24taGVscC1pbnN0cnVjdGlvbnMiLHYuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1jbGljay1uYXZpZ2F0aW9uLWhlbHAtdmlzaWJsZSIgOiAhX3RvdWNofScpLHYuaW5uZXJIVE1MPScgICAgICAgICAgICA8dGFibGU+ICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgICAgIDx0ZD48aW1nIHNyYz0iJytlKCJXaWRnZXRzL0ltYWdlcy9OYXZpZ2F0aW9uSGVscC9Nb3VzZUxlZnQuc3ZnIikrJyIgd2lkdGg9IjQ4IiBoZWlnaHQ9IjQ4IiAvPjwvdGQ+ICAgICAgICAgICAgICAgICAgICA8dGQ+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VzaXVtLW5hdmlnYXRpb24taGVscC1wYW4iPlBhbiB2aWV3PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VzaXVtLW5hdmlnYXRpb24taGVscC1kZXRhaWxzIj5MZWZ0IGNsaWNrICsgZHJhZzwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICAgICAgPHRkPjxpbWcgc3JjPSInK2UoIldpZGdldHMvSW1hZ2VzL05hdmlnYXRpb25IZWxwL01vdXNlUmlnaHQuc3ZnIikrJyIgd2lkdGg9IjQ4IiBoZWlnaHQ9IjQ4IiAvPjwvdGQ+ICAgICAgICAgICAgICAgICAgICA8dGQ+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VzaXVtLW5hdmlnYXRpb24taGVscC16b29tIj5ab29tIHZpZXc8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWRldGFpbHMiPlJpZ2h0IGNsaWNrICsgZHJhZywgb3I8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWRldGFpbHMiPk1vdXNlIHdoZWVsIHNjcm9sbDwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICAgICAgPHRkPjxpbWcgc3JjPSInK2UoIldpZGdldHMvSW1hZ2VzL05hdmlnYXRpb25IZWxwL01vdXNlTWlkZGxlLnN2ZyIpKyciIHdpZHRoPSI0OCIgaGVpZ2h0PSI0OCIgLz48L3RkPiAgICAgICAgICAgICAgICAgICAgPHRkPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtcm90YXRlIj5Sb3RhdGUgdmlldzwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtZGV0YWlscyI+TWlkZGxlIGNsaWNrICsgZHJhZywgb3I8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWRldGFpbHMiPkNUUkwgKyBMZWZ0IGNsaWNrICsgZHJhZzwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICA8L3RhYmxlPicsZC5hcHBlbmRDaGlsZCh2KTt2YXIgZz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtnLmNsYXNzTmFtZT0iY2VzaXVtLXRvdWNoLW5hdmlnYXRpb24taGVscCBjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWluc3RydWN0aW9ucyIsZy5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NzczogeyAiY2VzaXVtLXRvdWNoLW5hdmlnYXRpb24taGVscC12aXNpYmxlIiA6IF90b3VjaH0nKSxnLmlubmVySFRNTD0nICAgICAgICAgICAgPHRhYmxlPiAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgICAgICA8dGQ+PGltZyBzcmM9IicrZSgiV2lkZ2V0cy9JbWFnZXMvTmF2aWdhdGlvbkhlbHAvVG91Y2hEcmFnLnN2ZyIpKyciIHdpZHRoPSI3MCIgaGVpZ2h0PSI0OCIgLz48L3RkPiAgICAgICAgICAgICAgICAgICAgPHRkPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtcGFuIj5QYW4gdmlldzwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtZGV0YWlscyI+T25lIGZpbmdlciBkcmFnPC9kaXY+ICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgICAgICA8dGQ+PGltZyBzcmM9IicrZSgiV2lkZ2V0cy9JbWFnZXMvTmF2aWdhdGlvbkhlbHAvVG91Y2hab29tLnN2ZyIpKyciIHdpZHRoPSI3MCIgaGVpZ2h0PSI0OCIgLz48L3RkPiAgICAgICAgICAgICAgICAgICAgPHRkPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtem9vbSI+Wm9vbSB2aWV3PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VzaXVtLW5hdmlnYXRpb24taGVscC1kZXRhaWxzIj5Ud28gZmluZ2VyIHBpbmNoPC9kaXY+ICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgICAgICA8dGQ+PGltZyBzcmM9IicrZSgiV2lkZ2V0cy9JbWFnZXMvTmF2aWdhdGlvbkhlbHAvVG91Y2hUaWx0LnN2ZyIpKyciIHdpZHRoPSI3MCIgaGVpZ2h0PSI0OCIgLz48L3RkPiAgICAgICAgICAgICAgICAgICAgPHRkPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlc2l1bS1uYXZpZ2F0aW9uLWhlbHAtcm90YXRlIj5UaWx0IHZpZXc8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLWRldGFpbHMiPlR3byBmaW5nZXIgZHJhZywgc2FtZSBkaXJlY3Rpb248L2Rpdj4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgICAgIDx0ZD48aW1nIHNyYz0iJytlKCJXaWRnZXRzL0ltYWdlcy9OYXZpZ2F0aW9uSGVscC9Ub3VjaFJvdGF0ZS5zdmciKSsnIiB3aWR0aD0iNzAiIGhlaWdodD0iNDgiIC8+PC90ZD4gICAgICAgICAgICAgICAgICAgIDx0ZD4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZXNpdW0tbmF2aWdhdGlvbi1oZWxwLXRpbHQiPlJvdGF0ZSB2aWV3PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VzaXVtLW5hdmlnYXRpb24taGVscC1kZXRhaWxzIj5Ud28gZmluZ2VyIGRyYWcsIG9wcG9zaXRlIGRpcmVjdGlvbjwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICA8L3RhYmxlPicsZC5hcHBlbmRDaGlsZChnKSxhLmFwcGx5QmluZGluZ3Mocix1KSx0aGlzLl9jb250YWluZXI9bix0aGlzLl92aWV3TW9kZWw9cix0aGlzLl93cmFwcGVyPXUsdGhpcy5fY2xvc2VJbnN0cnVjdGlvbnM9ZnVuY3Rpb24oZSl7dS5jb250YWlucyhlLnRhcmdldCl8fChyLnNob3dJbnN0cnVjdGlvbnM9ITEpfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMuX2Nsb3NlSW5zdHJ1Y3Rpb25zLCEwKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0Iix0aGlzLl9jbG9zZUluc3RydWN0aW9ucywhMCl9O3JldHVybiBuKHUucHJvdG90eXBlLHtjb250YWluZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250YWluZXJ9fSx2aWV3TW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3TW9kZWx9fX0pLHUucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9jbG9zZUluc3RydWN0aW9ucywhMCksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsdGhpcy5fY2xvc2VJbnN0cnVjdGlvbnMsITApLGEuY2xlYW5Ob2RlKHRoaXMuX3dyYXBwZXIpLHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl93cmFwcGVyKSxyKHRoaXMpfSx1fSksZGVmaW5lKCJXaWRnZXRzL1NjZW5lTW9kZVBpY2tlci9TY2VuZU1vZGVQaWNrZXJWaWV3TW9kZWwiLFsiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vQ29yZS9FdmVudEhlbHBlciIsIi4uLy4uL1NjZW5lL1NjZW5lTW9kZSIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi9jcmVhdGVDb21tYW5kIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwpeyJ1c2Ugc3RyaWN0Ijt2YXIgdT1mdW5jdGlvbih0LGkpe3RoaXMuX3NjZW5lPXQ7dmFyIG49dGhpcyxyPWZ1bmN0aW9uKGUsdCxpKXtuLnNjZW5lTW9kZT1pLG4uZHJvcERvd25WaXNpYmxlPSExfTt0aGlzLl9ldmVudEhlbHBlcj1uZXcgbyx0aGlzLl9ldmVudEhlbHBlci5hZGQodC5tb3JwaFN0YXJ0LHIpLHRoaXMuX2R1cmF0aW9uPWUoaSwyKSx0aGlzLnNjZW5lTW9kZT10Lm1vZGUsdGhpcy5kcm9wRG93blZpc2libGU9ITEsdGhpcy50b29sdGlwMkQ9IjJEIix0aGlzLnRvb2x0aXAzRD0iM0QiLHRoaXMudG9vbHRpcENvbHVtYnVzVmlldz0iQ29sdW1idXMgVmlldyIscy50cmFjayh0aGlzLFsic2NlbmVNb2RlIiwiZHJvcERvd25WaXNpYmxlIiwidG9vbHRpcDJEIiwidG9vbHRpcDNEIiwidG9vbHRpcENvbHVtYnVzVmlldyJdKSx0aGlzLnNlbGVjdGVkVG9vbHRpcD12b2lkIDAscy5kZWZpbmVQcm9wZXJ0eSh0aGlzLCJzZWxlY3RlZFRvb2x0aXAiLGZ1bmN0aW9uKCl7dmFyIGU9bi5zY2VuZU1vZGU7cmV0dXJuIGU9PT1hLlNDRU5FMkQ/bi50b29sdGlwMkQ6ZT09PWEuU0NFTkUzRD9uLnRvb2x0aXAzRDpuLnRvb2x0aXBDb2x1bWJ1c1ZpZXd9KSx0aGlzLl90b2dnbGVEcm9wRG93bj1sKGZ1bmN0aW9uKCl7bi5kcm9wRG93blZpc2libGU9IW4uZHJvcERvd25WaXNpYmxlfSksdGhpcy5fbW9ycGhUbzJEPWwoZnVuY3Rpb24oKXt0Lm1vcnBoVG8yRChuLl9kdXJhdGlvbil9KSx0aGlzLl9tb3JwaFRvM0Q9bChmdW5jdGlvbigpe3QubW9ycGhUbzNEKG4uX2R1cmF0aW9uKX0pLHRoaXMuX21vcnBoVG9Db2x1bWJ1c1ZpZXc9bChmdW5jdGlvbigpe3QubW9ycGhUb0NvbHVtYnVzVmlldyhuLl9kdXJhdGlvbil9KSx0aGlzLl9zY2VuZU1vZGU9YX07cmV0dXJuIGkodS5wcm90b3R5cGUse3NjZW5lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NlbmV9fSxkdXJhdGlvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2R1cmF0aW9ufSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fZHVyYXRpb249ZX19LHRvZ2dsZURyb3BEb3duOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdG9nZ2xlRHJvcERvd259fSxtb3JwaFRvMkQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb3JwaFRvMkR9fSxtb3JwaFRvM0Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb3JwaFRvM0R9fSxtb3JwaFRvQ29sdW1idXNWaWV3OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbW9ycGhUb0NvbHVtYnVzVmlld319fSksdS5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuX2V2ZW50SGVscGVyLnJlbW92ZUFsbCgpLG4odGhpcyl9LHV9KSxkZWZpbmUoIldpZGdldHMvU2NlbmVNb2RlUGlja2VyL1NjZW5lTW9kZVBpY2tlciIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL2dldEVsZW1lbnQiLCIuL1NjZW5lTW9kZVBpY2tlclZpZXdNb2RlbCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz0ibSAzMi40MDEzOTIsNC45MzMwNDM3IGMgLTcuMDg3NjAzLDAgLTE0LjA5NjA5NSwyLjg4NDYwMiAtMTkuMTA3OTMsNy44OTQ2ODQzIC01LjAxMTgzNTIsNS4wMTAwODMgLTcuOTI5NjE2NywxMS45ODc0NjggLTcuOTI5NjE2NywxOS4wNzI5OTkgMCw3LjA4NTUzMSAyLjkxNzc4MTUsMTQuMDk3ODQ4IDcuOTI5NjE2NywxOS4xMDc5MzEgNC44Mzc2NTMsNC44MzU5NjEgMTEuNTQxNDA4LDcuNjMxMzcyIDE4LjM3NDM1NCw3LjgyNDgyIDAuMDU3MTIsMC4wMTIzMSAwLjQ1NDExOSwwLjEzOTcyOSAwLjQ1NDExOSwwLjEzOTcyOSBsIDAuMDM0OTMsLTAuMTA0Nzk3IGMgMC4wODI0Niw3Ljg0ZS00IDAuMTYyMDMzLDAuMDM0OTMgMC4yNDQ1MjUsMC4wMzQ5MyAwLjA4MzA0LDAgMC4xNjE1MTUsLTAuMDM0MTQgMC4yNDQ1MjYsLTAuMDM0OTMgbCAwLjAzNDkzLDAuMTA0Nzk3IGMgMCwwIDAuMzA5NDc0LC0wLjEyOTQ4NyAwLjM0OTMyMywtMC4xMzk3MjkgNi44Njc3NjUsLTAuMTY4MDk0IDEzLjU4MjkwMywtMi45NjUyMDYgMTguNDQ0MjE4LC03LjgyNDgyIDIuNTU4MTk1LC0yLjU1NzMgNC41NTEwODEsLTUuNjM4MTM0IDUuOTAzNTQ3LC04Ljk3NzU4NCAxLjI5NzE5MSwtMy4yMDI5NjYgMi4wMjYwNywtNi42NjE0ODkgMi4wMjYwNywtMTAuMTMwMzQ3IDAsLTYuMjM3MzA5IC0yLjM2NjI2MSwtMTIuMzEyMTkgLTYuMzIyNzM0LC0xNy4xMTY3OTQgLTAuMDAzNCwtMC4wMjMxNiAwLjAwNDksLTAuMDQ0ODggMCwtMC4wNjk4NiAtMC4wMTczMywtMC4wODc0NSAtMC4xMDQ1MjksLTAuMjc4ODU1IC0wLjEwNDc5NywtMC4yNzk0NTggLTUuMzFlLTQsLTAuMDAxMiAtMC41MjI5ODgsLTAuNjI4MTQ3IC0wLjUyMzk4NCwtMC42Mjg3OCAgICAgICAgIC0zLjQ3ZS00LC0yLjJlLTQgLTAuMTMzNDQ0LC0wLjAzNTMyIC0wLjI0NDUyNSwtMC4wNjk4NyBDIDUxLjk0NDI5OSwxMy40NDc2MDMgNTEuNzUxMDc2LDEzLjEwNDMxNyA1MS40NzQzOTEsMTIuODI3NzI4IDQ2LjQ2MjU1Niw3LjgxNzY0NTcgMzkuNDg4OTk2LDQuOTMzMDQzNyAzMi40MDEzOTIsNC45MzMwNDM3IHogbSAtMi4xMzA4NjYsMy41MjgxNTU0IDAuMTA0Nzk3LDkuNjc2MjI4OSBjIC00LjExMTY5NSwtMC4wODM2MSAtNy4xMDk4MjksLTAuNDIzNjY0IC05LjI1NzA0MSwtMC45NDMxNzEgMS4xOTgwOTMsLTIuMjY5MjcxIDIuNTI0NTMxLC00LjEyNDQwNCAzLjkxMjQxLC01LjQxNDQ5NiAyLjE2NzQ5OCwtMi4wMTQ3ODExIDMuOTUwMTQ1LC0yLjg1NDAxNjkgNS4yMzk4MzQsLTMuMzE4NTYxOSB6IG0gMi43OTQ1NzksMCBjIDEuMjgwMzAyLDAuNDc1NDk1MyAzLjAyMjE4NiwxLjMyODU5NDggNS4wNjUxNzMsMy4yNDg2OTc5IDEuNDI0NjY3LDEuMzM4OTczIDIuNzg4ODYyLDMuMzAzNjQ1IDMuOTgyMjc1LDUuNzI4ODg2IC0yLjI5MDgyLDAuNDAzMzY3IC01LjM4MTI1OCwwLjYyMTA0OSAtOC45NDI2NTEsMC42OTg2NDUgTCAzMy4wNjUxMDUsOC40NjExOTkxIHogbSA1LjcyODg4NiwwLjI0NDUyNTYgYyA0LjAwNDA3MiwxLjEyMzA4MjIgNy43OTMwOTgsMy4xNDgxMzYzIDEwLjcyNDE5NSw2LjA3ODIwODMgMC4wMzQ2OCwwLjAzNDY2IDAuMDcwMzMsMC4wNjk5MSAwLjEwNDc5NywwLjEwNDc5NyAtMC40NTM3NSwwLjMxMzg5MSAtMC45MjMwNTQsMC42NjMwMDIgLTEuOTU2MjA1LDEuMDgyODk5IC0wLjY0NzM4OCwwLjI2MzExNCAtMS45MDYyNDIsMC40NzczOTYgLTIuODI5NTExLDAuNzMzNTc3IC0xLjM4MjI5NiwtMi45ODgxMzIgICAgICAgICAtMy4wMjcxNDYsLTUuMzY4NTg1IC00Ljc4NTcxNiwtNy4wMjEzNzgxIC0wLjQyMjg2NiwtMC4zOTc0MzIgLTAuODM1ODE4LC0wLjY0NTMyNDcgLTEuMjU3NTYsLTAuOTc4MTAzMiB6IG0gLTE1LjMzNTI1LDAuNzY4NTA5MiBjIC0wLjEwNjc1MywwLjA5NTAzIC0wLjIwNzc1MywwLjE0NTQwMiAtMC4zMTQzOSwwLjI0NDUyNiAtMS42ODQ5NzMsMS41NjYyNTQxIC0zLjI5ODA2OCwzLjgyMzIyMTEgLTQuNjgwOTE5LDYuNTY3MjU5MSAtMC4zNDM3OTcsLTAuMTQ5NDIgLTEuMDM1MDUyLC0wLjI3MzE5OCAtMS4yOTI0OTMsLTAuNDE5MTg2IC0wLjk1NjUyOCwtMC41NDI0MjcgLTEuMzYyOTY0LC0xLjAyMjAyNCAtMS41MzcwMTgsLTEuMjkyNDkzIC0wLjAyNDEsLTAuMDM3NDUgLTAuMDE4NjgsLTAuMDQwMSAtMC4wMzQ5MywtMC4wNjk4NiAyLjI1MDA5NSwtMi4xNjMzNDIgNC45NDg4MjQsLTMuODY5OTg0IDcuODU5NzUyLC01LjAzMDI0MjEgeiBtIC05LjY0MTI5Niw3LjA5MTI0MzEgYyAwLjQ2NDk3MywwLjU3MTYxOCAwLjkzNzcyOSwxLjE2OTA1NiAxLjk1NjIwNSwxLjc0NjYxMiAwLjM0OTkwNywwLjE5ODQyNSAxLjEwNzE0MywwLjMzNTQwNCAxLjUzNzAxOCwwLjUyMzk4MyAtMS4yMDE2NiwzLjE3Mjk4NCAtMS45OTgwMzcsNy4wNTE5MDEgLTIuMTY1Nzk4LDExLjc3MjE2MiBDIDE0LjI1NjU1NywzMC4zNjEzODQgMTIuOTM0ODIzLDMwLjE2MTQ4MyAxMi4yODA0MjcsMjkuOTA5NTkgMTAuNjQ0NDM3LDI5LjI3OTg1NSA5LjY4ODg4ODIsMjguNjc0ODkxIDkuMTcxNDU4NiwyOC4yNjc3NzUgOC42NTQwMjg5LDI3Ljg2MDY1OCA4LjY0NzQ3NTEsMjcuNzc4NzI0IDguNjQ3NDc1MSwyNy43Nzg3MjQgbCAtMC4wNjk4NjQsMC4wMzQ5MyBDIDkuMzEwMDI5NCwyMy42OTEyODUgICAgICAgICAxMS4xNjMyNDgsMTkuNzk4NTI3IDEzLjgxNzQ0NSwxNi41NjU0NzcgeiBtIDM3LjU1MjE0OSwwLjUyMzk4NCBjIDIuNTQ4OTI0LDMuMjg5OTgzIDQuMjY1MDU3LDcuMjAyNTk0IDQuODkwNTEzLDExLjMxODA0MyAtMC42NTA0MjgsMC40MTA4OTYgLTEuNzU2ODc2LDEuMDAxOTM2IC0zLjU2MzA4OCwxLjYwNjg4MiAtMS4xNzE1NTIsMC4zOTIzODMgLTMuMTYzODU5LDAuNzU5MTUzIC00Ljk2MDM3NywxLjExNzgzMiAtMC4wNDM2NywtNC43NTI3MDMgLTAuNzg0ODA5LC04LjU5MTQyMyAtMS44ODYzNCwtMTEuODA3MDk0IDAuOTE3NTc0LC0wLjI2MzY3OCAyLjE3MDU1MiwtMC40ODY0OTUgMi44NjQ0NDMsLTAuNzY4NTEgMS4yNzQ2OTMsLTAuNTE4MDY2IDIuMDAzOTQyLC0xLjAwMTU1OCAyLjY1NDg0OSwtMS40NjcxNTMgeiBtIC0zMS40MzkwMDgsMi42MTk5MTcgYyAyLjQ4NzM0MSwwLjY3Mjc2NiA1Ljc3NTgxMywxLjEzNzc3NSAxMC40Nzk2NjksMS4yMjI2MjggbCAwLjEwNDc5NywxMC42ODkyNjMgMCwwLjAzNDkzIDAsMC43MzM1NzcgYyAtNS40MzUwMDUsLTAuMDkwNTkgLTkuNTEyMjE5LC0wLjUxOTA0NCAtMTIuNjEwNTM2LC0xLjExNzgzMSAwLjEwNjEyNywtNC43NzY2ODMgMC44NzkzMzQsLTguNTU3OTEgMi4wMjYwNywtMTEuNTYyNTY5IHogbSAyMy4yNjQ4NjYsMC4zMTQzOSBjIDEuMDczNDU5LDMuMDY3NTQxIDEuODMzNzk1LDYuODIxMzE0IDEuODE2NDc2LDExLjcwMjI5OCAtMy4wNTQ0NzQsMC40MjMyNDUgLTcuMDYyMDE4LDAuNjQ4NTU5IC0xMS43MDIyOTgsMC42OTg2NDQgbCAwLC0wLjgzODM3MyAtMC4xMDQ3OTYsLTEwLjY1NDMzMSBjIDQuMDgyNDE2LC0wLjA4NjQgNy40MDQ0NjgsLTAuNDAzODg2IDkuOTkwNjE4LC0wLjkwODIzOCB6ICAgICAgICAgTSA4LjI2MzIyMDUsMzAuOTIyNjI1IGMgMC43NTU4Njc2LDAuNTEwNTQ4IDEuNTUyOTU2MywxLjAxMzMzOSAzLjAwNDE3MTUsMS41NzE5NSAwLjkzNzUxOCwwLjM2MDg3NSAyLjYxMjIwMiwwLjY0NzY0MiAzLjkxMjQxLDAuOTc4MTAyIDAuMTEyODE0LDMuODU1NjYgMC43MDM5ODksNy4xMDc3NTYgMS42MDY4ODMsOS45MjA3NTQgLTEuMTQ3MTcyLC0wLjMyNDI2MiAtMi42NDQ1NTMsLTAuNjQwNjQ4IC0zLjQyMzM1OSwtMC45NzgxMDIgLTEuNTE2Njg4LC0wLjY1NzE3NyAtMi4zODY2MjcsLTEuMjg3MzMyIC0yLjg2NDQ0MywtMS43MTE2OCAtMC40Nzc4MTYsLTAuNDI0MzQ3IC0wLjQ4OTA1MSwtMC40ODkwNTEgLTAuNDg5MDUxLC0wLjQ4OTA1MSBMIDkuODAwMjM4Nyw0MC4zMTkzOTUgQyA4Ljc5MTY5MSwzNy42MjE3NjcgOC4xNTg0MjM4LDM0Ljc2OTU4MyA4LjE1ODQyMzgsMzEuOTAwNzI3IGMgMCwtMC4zMzAxNTMgMC4wOTA1ODksLTAuNjQ4MTY5IDAuMTA0Nzk2NywtMC45NzgxMDIgeiBtIDQ4LjI3NjM0NDUsMC40MTkxODYgYyAwLjAwNDcsMC4xODg5NzMgMC4wNjk4NiwwLjM2OTkxIDAuMDY5ODYsMC41NTg5MTYgMCwyLjkzODg2OSAtMC42MjAyMjgsNS44NzM1NTggLTEuNjc2NzQ3LDguNjI4MjYxIC0wLjA3NDM1LDAuMDc1ODMgLTAuMDY1NTIsMC4wNzQxMSAtMC40NTQxMTksMC4zNDkzMjMgLTAuNjA2OTY1LDAuNDI5ODU3IC0xLjYzMTY2NSwxLjA0MjA0NCAtMy4zMTg1NjIsMS42NzY3NDcgLTEuMjA4NTI4LDAuNDU0NzEzIC0zLjIwNDk2NCwwLjg1MDg5NCAtNS4xMzUwMzgsMS4yNTc1NiAwLjg0NTkzLC0yLjc2NTcyNiAxLjQxODA4LC02LjAwNTM1NyAxLjYwNjg4MywtOS44MTU5NTcgMi4yMzIzNjksLTAuNDEzMzcxIDQuNDgzNzU4LC0wLjg0MDIwMSAgICAgICAgIDUuOTM4NDc5LC0xLjMyNzQyNSAxLjQxMDYzMiwtMC40NzI0NTcgMi4xNTMxMDgsLTAuODk0NjkgMi45NjkyNCwtMS4zMjc0MjUgeiBtIC0zOC41MzAyNTIsMi44NjQ0NDMgYyAzLjIwODE0MSwwLjU2Njk3IDcuMzcyMjc5LDAuODk4NTg4IDEyLjU3NTYwMywwLjk3ODEwMyBsIDAuMTc0NjYyLDkuODg1ODIxIGMgLTQuMzkyNTE3LC0wLjA2MTM5IC04LjEwNjcyMiwtMC4zMjA1NjYgLTEwLjg2MzkyNSwtMC44MDM0NDEgLTEuMDUxOTU0LC0yLjY2NDY5NSAtMS42OTI5MDksLTYuMDQzNzk0IC0xLjg4NjM0LC0xMC4wNjA0ODMgeiBtIDI2Ljc5MzAyMiwwLjMxNDM5IGMgLTAuMjQ2Mjk4LDMuOTIzNTUxIC0wLjg3Nzc2Miw3LjI2MzY3OSAtMS44MTY0NzYsOS44ODU4MjIgLTIuNTYxOTU3LDAuMzYxOTU0IC01Ljc2NjI0OSwwLjU2MDcwOCAtOS40MzE3MDMsMC42Mjg3OCBsIC0wLjE3NDY2MSwtOS44MTU5NTcgYyA0LjQ5MTczNCwtMC4wNDk2OSA4LjMzNDc2OSwtMC4yOTMwMzIgMTEuNDIyODQsLTAuNjk4NjQ1IHogTSAxMi4wMzU5MDEsNDQuODYwNTg1IGMgMC4wOTk3NywwLjA0NTIzIDAuMTA1NTM1LDAuMDk0NjUgMC4yMDk1OTQsMC4xMzk3MjkgMS4zMzc2NTYsMC41Nzk2MDIgMy40NDEwOTksMS4wNTgwNzIgNS41ODkxNTcsMS41MzcwMTggMS41NDUwNDIsMy4zOTkyMDggMy41NDg1MjQsNS45Njk0MDIgNS41ODkxNTcsNy43ODk4ODggLTMuMDM0NDExLC0xLjIxNTUzNyAtNS44NzE2MTUsLTMuMDA3OTc4IC04LjE3NDE0MiwtNS4zMDk2OTkgLTEuMjQ1OTExLC0xLjI0NTQ3NSAtMi4yNzE3OTQsLTIuNjYyOTYxIC0zLjIxMzc2NiwtNC4xNTY5MzYgeiBtIDQwLjY5NjA1LDAgYyAtMC45NDE5NzIsMS40OTM5NzUgLTEuOTY3ODU1LDIuOTExNDYxICAgICAgICAgLTMuMjEzNzY1LDQuMTU2OTM2IC0yLjc0MjUzLDIuNzQxNTcxIC02LjI0NDEwNiw0LjY5NjcxNyAtOS45NTU2ODYsNS44Njg2MTUgMC4yNjEzNDcsLTAuMjQxMDc5IDAuNTA3NDk1LC0wLjM5NDQ5MSAwLjc2ODUwOSwtMC42NjM3MTMgMS42NzQ4NDEsLTEuNzI3NTE2IDMuMzIwNzkyLC00LjE4MTA1NiA0LjY0NTk4NywtNy4yNjU5MDQgMi45NjI0NDcsLTAuNTAzMDIxIDUuNDA4OTY1LC0xLjEyMjI5MyA3LjE2MTEwNywtMS43ODE1NDQgMC4yODQwMzQsLTAuMTA2ODY1IDAuMzM3Mjk3LC0wLjIwNzMyMyAwLjU5Mzg0OCwtMC4zMTQzOSB6IG0gLTMxLjQwNDA3NiwyLjMwNTUyNyBjIDIuNjQ1ODA3LDAuMzc2NDQ4IDUuNzAxMTc4LDAuNjQ5OTk1IDkuNDY2NjM1LDAuNjk4NjQ1IGwgMC4xMzk3MjksNy43ODk4ODggYyAtMS4zODczOSwtMC40ODA4NDQgLTMuMzE2MjE4LC0xLjI5ODM3IC01LjY1OTAyMiwtMy4zODg0MjcgLTEuMzg4ODIyLC0xLjIzODk5MyAtMi43NDM2NjgsLTMuMDExMyAtMy45NDczNDIsLTUuMTAwMTA2IHogbSAyMC4zNjU0OTEsMC4xMDQ3OTcgYyAtMS4wNDg3MiwyLjA0MTkzNyAtMi4xNzQzMzcsMy43NzkwNjggLTMuMzUzNDk0LDQuOTk1MzA5IC0xLjg1MzE3NywxLjkxMTQ1OSAtMy40MjU1MTUsMi44MjY3OSAtNC42MTEwNTUsMy4zNTM0OTQgbCAtMC4xMzk3MjksLTcuNzg5ODg3IGMgMy4xMzA5MSwtMC4wNTcxNCA1LjcyODIzOCwtMC4yNzg3MjUgOC4xMDQyNzgsLTAuNTU4OTE2IHoiLGw9Im0gMi45ODI1MDUzLDE3LjU1MDU5OCAwLDEuMzY4MTEzIDAsMjYuMjY3NzY2IDAsMS4zNjgxMTMgMS4zNjgxMSwwIDU0Ljk5ODEzOTcsMCAxLjM2ODExLDAgMCwtMS4zNjgxMTMgMCwtMjYuMjY3NzY2IDAsLTEuMzY4MTEzIC0xLjM2ODExLDAgLTU0Ljk5ODEzOTcsMCAtMS4zNjgxMSwwIHogbSAyLjczNjIzLDIuNzM2MjI2IDEwLjMyOTI0OTcsMCAwLDEwLjQ2NjA2MyAtMTAuMzI5MjQ5NywwIDAsLTEwLjQ2NjA2MyB6IG0gMTMuMDY1NDY5NywwIDExLjY5NzM3LDAgMCwxMC40NjYwNjMgLTExLjY5NzM3LDAgMCwtMTAuNDY2MDYzIHogbSAxNC40MzM1OSwwIDExLjY5NzM3LDAgMCwxMC40NjYwNjMgLTExLjY5NzM3LDAgMCwtMTAuNDY2MDYzIHogbSAxNC40MzM1OSwwIDEwLjMyOTI2LDAgMCwxMC40NjYwNjMgLTEwLjMyOTI2LDAgMCwtMTAuNDY2MDYzIHogbSAtNDEuOTMyNjQ5NywxMy4yMDIyODggMTAuMzI5MjQ5NywwIDAsMTAuMzI5MjUyIC0xMC4zMjkyNDk3LDAgMCwtMTAuMzI5MjUyIHogbSAxMy4wNjU0Njk3LDAgMTEuNjk3MzcsMCAwLDEwLjMyOTI1MiAtMTEuNjk3MzcsMCAwLC0xMC4zMjkyNTIgeiBtIDE0LjQzMzU5LDAgMTEuNjk3MzcsMCAwLDEwLjMyOTI1MiAtMTEuNjk3MzcsMCAwLC0xMC4zMjkyNTIgeiBtIDE0LjQzMzU5LDAgMTAuMzI5MjYsMCAwLDEwLjMyOTI1MiAtMTAuMzI5MjYsMCAwLC0xMC4zMjkyNTIgeiIsdT0ibSAxNC43MjM5NjksMTcuNjc1NTk4IC0wLjM0MDQ4OSwwLjgxNzE3NSAtMTEuMTY4MDUzNiwyNi4xODM2MzggLTAuODE3MTc1LDEuODcyNjkyIDIuMDc2OTg2LDAgNTQuNzUwNjk5NiwwIDIuMDc2OTgsMCAtMC44MTcxNywtMS44NzI2OTIgLTExLjE2ODA1LC0yNi4xODM2MzggLTAuMzQwNDksLTAuODE3MTc1IC0wLjkxOTMzLDAgLTMyLjQxNDU4NiwwIC0wLjkxOTMyMiwwIHogbSAxLjgzODY0MywyLjcyMzkxNiA2LjE5NjkwOCwwIC0yLjkyODIwOSwxMC40MTg5NzcgLTcuNzI5MTExLDAgNC40NjA0MTIsLTEwLjQxODk3NyB6IG0gOS4wMjI5NywwIDQuOTAzMDQ5LDAgMCwxMC40MTg5NzcgLTcuODMxMjU4LDAgMi45MjgyMDksLTEwLjQxODk3NyB6IG0gNy42MjY5NjQsMCA1LjU4NDAzMSwwIDIuNjIxNzYsMTAuNDE4OTc3IC04LjIwNTc5MSwwIDAsLTEwLjQxODk3NyB6IG0gOC40MTAwODEsMCA1LjUxNTkzLDAgNC40NjA0MiwxMC40MTg5NzcgLTcuMzg4NjMsMCAtMi41ODc3MiwtMTAuNDE4OTc3IHogbSAtMzAuNjc4MDkxLDEzLjE0Mjg5MiA4LjEwMzY0OSwwIC0yLjg5NDE2LDEwLjI4Mjc4MiAtOS42MDE4MDI2LDAgNC4zOTIzMTM2LC0xMC4yODI3ODIgeiBtIDEwLjkyOTcxMSwwIDguNjE0Mzg0LDAgMCwxMC4yODI3ODIgLTExLjUwODU0NCwwIDIuODk0MTYsLTEwLjI4Mjc4MiB6IG0gMTEuMzM4Mjk5LDAgOC44NTI3MjEsMCAyLjU4NzcyLDEwLjI4Mjc4MiAtMTEuNDQwNDQxLDAgMCwtMTAuMjgyNzgyIHogbSAxMS42Nzg3ODEsMCA3Ljg2NTMxLDAgNC4zOTIzMSwxMC4yODI3ODIgLTkuNjY5OSwwIC0yLjU4NzcyLC0xMC4yODI3ODIgeiIsYz1mdW5jdGlvbihlLHQsaSl7ZT1vKGUpO3ZhciBuPW5ldyBhKHQsaSk7bi5fZ2xvYmVQYXRoPXMsbi5fZmxhdE1hcFBhdGg9bCxuLl9jb2x1bWJ1c1ZpZXdQYXRoPXU7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO2MuY2xhc3NOYW1lPSJjZXNpdW0tc2NlbmVNb2RlUGlja2VyLXdyYXBwZXIgY2VzaXVtLXRvb2xiYXItYnV0dG9uIixlLmFwcGVuZENoaWxkKGMpO3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpO2QudHlwZT0iYnV0dG9uIixkLmNsYXNzTmFtZT0iY2VzaXVtLWJ1dHRvbiBjZXNpdW0tdG9vbGJhci1idXR0b24iLGQuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItYnV0dG9uMkQiOiBzY2VuZU1vZGUgPT09IF9zY2VuZU1vZGUuU0NFTkUyRCwgICAgICAgImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItYnV0dG9uM0QiOiBzY2VuZU1vZGUgPT09IF9zY2VuZU1vZGUuU0NFTkUzRCwgICAgICAgImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItYnV0dG9uQ29sdW1idXNWaWV3Ijogc2NlbmVNb2RlID09PSBfc2NlbmVNb2RlLkNPTFVNQlVTX1ZJRVcsICAgICAgICJjZXNpdW0tc2NlbmVNb2RlUGlja2VyLXNlbGVjdGVkIjogZHJvcERvd25WaXNpYmxlIH0sYXR0cjogeyB0aXRsZTogc2VsZWN0ZWRUb29sdGlwIH0sY2xpY2s6IHRvZ2dsZURyb3BEb3duJyksZC5pbm5lckhUTUw9JzwhLS0ga28gY2VzaXVtU3ZnUGF0aDogeyBwYXRoOiBfZ2xvYmVQYXRoLCB3aWR0aDogNjQsIGhlaWdodDogNjQsIGNzczogImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItc2xpZGUtc3ZnIGNlc2l1bS1zY2VuZU1vZGVQaWNrZXItaWNvbjNEIiB9IC0tPjwhLS0gL2tvIC0tPjwhLS0ga28gY2VzaXVtU3ZnUGF0aDogeyBwYXRoOiBfZmxhdE1hcFBhdGgsIHdpZHRoOiA2NCwgaGVpZ2h0OiA2NCwgY3NzOiAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1zbGlkZS1zdmcgY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1pY29uMkQiIH0gLS0+PCEtLSAva28gLS0+PCEtLSBrbyBjZXNpdW1TdmdQYXRoOiB7IHBhdGg6IF9jb2x1bWJ1c1ZpZXdQYXRoLCB3aWR0aDogNjQsIGhlaWdodDogNjQsIGNzczogImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItc2xpZGUtc3ZnIGNlc2l1bS1zY2VuZU1vZGVQaWNrZXItaWNvbkNvbHVtYnVzVmlldyIgfSAtLT48IS0tIC9rbyAtLT4nLGMuYXBwZW5kQ2hpbGQoZCk7dmFyIGg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7aC50eXBlPSJidXR0b24iLGguY2xhc3NOYW1lPSJjZXNpdW0tYnV0dG9uIGNlc2l1bS10b29sYmFyLWJ1dHRvbiBjZXNpdW0tc2NlbmVNb2RlUGlja2VyLWRyb3BEb3duLWljb24iLGguc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItdmlzaWJsZSIgOiAoZHJvcERvd25WaXNpYmxlICYmIChzY2VuZU1vZGUgIT09IF9zY2VuZU1vZGUuU0NFTkUzRCkpIHx8ICghZHJvcERvd25WaXNpYmxlICYmIChzY2VuZU1vZGUgPT09IF9zY2VuZU1vZGUuU0NFTkUzRCkpLCAgICAgICAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1ub25lIiA6IHNjZW5lTW9kZSA9PT0gX3NjZW5lTW9kZS5TQ0VORTNELCAgICAgICAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1oaWRkZW4iIDogIWRyb3BEb3duVmlzaWJsZSB9LGF0dHI6IHsgdGl0bGU6IHRvb2x0aXAzRCB9LGNsaWNrOiBtb3JwaFRvM0QsY2VzaXVtU3ZnUGF0aDogeyBwYXRoOiBfZ2xvYmVQYXRoLCB3aWR0aDogNjQsIGhlaWdodDogNjQgfScpLGMuYXBwZW5kQ2hpbGQoaCk7dmFyIG09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7bS50eXBlPSJidXR0b24iLG0uY2xhc3NOYW1lPSJjZXNpdW0tYnV0dG9uIGNlc2l1bS10b29sYmFyLWJ1dHRvbiBjZXNpdW0tc2NlbmVNb2RlUGlja2VyLWRyb3BEb3duLWljb24iLG0uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1zY2VuZU1vZGVQaWNrZXItdmlzaWJsZSIgOiAoZHJvcERvd25WaXNpYmxlICYmIChzY2VuZU1vZGUgIT09IF9zY2VuZU1vZGUuU0NFTkUyRCkpLCAgICAgICAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1ub25lIiA6IHNjZW5lTW9kZSA9PT0gX3NjZW5lTW9kZS5TQ0VORTJELCAgICAgICAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci1oaWRkZW4iIDogIWRyb3BEb3duVmlzaWJsZSB9LGF0dHI6IHsgdGl0bGU6IHRvb2x0aXAyRCB9LGNsaWNrOiBtb3JwaFRvMkQsY2VzaXVtU3ZnUGF0aDogeyBwYXRoOiBfZmxhdE1hcFBhdGgsIHdpZHRoOiA2NCwgaGVpZ2h0OiA2NCB9JyksYy5hcHBlbmRDaGlsZChtKTt2YXIgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTtmLnR5cGU9ImJ1dHRvbiIsZi5jbGFzc05hbWU9ImNlc2l1bS1idXR0b24gY2VzaXVtLXRvb2xiYXItYnV0dG9uIGNlc2l1bS1zY2VuZU1vZGVQaWNrZXItZHJvcERvd24taWNvbiIsZi5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsJ2NzczogeyAiY2VzaXVtLXNjZW5lTW9kZVBpY2tlci12aXNpYmxlIiA6IChkcm9wRG93blZpc2libGUgJiYgKHNjZW5lTW9kZSAhPT0gX3NjZW5lTW9kZS5DT0xVTUJVU19WSUVXKSkgfHwgKCFkcm9wRG93blZpc2libGUgJiYgKHNjZW5lTW9kZSA9PT0gX3NjZW5lTW9kZS5DT0xVTUJVU19WSUVXKSksICAgICAgICJjZXNpdW0tc2NlbmVNb2RlUGlja2VyLW5vbmUiIDogc2NlbmVNb2RlID09PSBfc2NlbmVNb2RlLkNPTFVNQlVTX1ZJRVcsICAgICAgICJjZXNpdW0tc2NlbmVNb2RlUGlja2VyLWhpZGRlbiIgOiAhZHJvcERvd25WaXNpYmxlfSxhdHRyOiB7IHRpdGxlOiB0b29sdGlwQ29sdW1idXNWaWV3IH0sY2xpY2s6IG1vcnBoVG9Db2x1bWJ1c1ZpZXcsY2VzaXVtU3ZnUGF0aDogeyBwYXRoOiBfY29sdW1idXNWaWV3UGF0aCwgd2lkdGg6IDY0LCBoZWlnaHQ6IDY0IH0nKSxjLmFwcGVuZENoaWxkKGYpLHIuYXBwbHlCaW5kaW5ncyhuLGMpLHRoaXMuX3ZpZXdNb2RlbD1uLHRoaXMuX2NvbnRhaW5lcj1lLHRoaXMuX3dyYXBwZXI9Yyx0aGlzLl9jbG9zZURyb3BEb3duPWZ1bmN0aW9uKGUpe2MuY29udGFpbnMoZS50YXJnZXQpfHwobi5kcm9wRG93blZpc2libGU9ITEpfSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMuX2Nsb3NlRHJvcERvd24sITApLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoc3RhcnQiLHRoaXMuX2Nsb3NlRHJvcERvd24sITApfTtyZXR1cm4gdChjLnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sdmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld01vZGVsfX19KSxjLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxjLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZpZXdNb2RlbC5kZXN0cm95KCksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9jbG9zZURyb3BEb3duLCEwKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0Iix0aGlzLl9jbG9zZURyb3BEb3duLCEwKSxyLmNsZWFuTm9kZSh0aGlzLl93cmFwcGVyKSx0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fd3JhcHBlciksaSh0aGlzKX0sY30pLGRlZmluZSgiV2lkZ2V0cy9TZWxlY3Rpb25JbmRpY2F0b3IvU2VsZWN0aW9uSW5kaWNhdG9yVmlld01vZGVsIixbIi4uLy4uL0NvcmUvQ2FydGVzaWFuMiIsIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uLy4uL0NvcmUvRWFzaW5nRnVuY3Rpb24iLCIuLi8uLi9TY2VuZS9TY2VuZVRyYW5zZm9ybXMiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0Il0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7dmFyIGw9bmV3IGUsdT0iLTEwMDBweCIsYz1mdW5jdGlvbihlLG4scil7dGhpcy5fc2NlbmU9ZSx0aGlzLl9zY3JlZW5Qb3NpdGlvblg9dSx0aGlzLl9zY3JlZW5Qb3NpdGlvblk9dSx0aGlzLl90d2VlbnM9ZS50d2VlbnMsdGhpcy5fY29udGFpbmVyPXQocixkb2N1bWVudC5ib2R5KSx0aGlzLl9zZWxlY3Rpb25JbmRpY2F0b3JFbGVtZW50PW4sdGhpcy5fc2NhbGU9MSx0aGlzLnBvc2l0aW9uPXZvaWQgMCx0aGlzLnNob3dTZWxlY3Rpb249ITEscy50cmFjayh0aGlzLFsicG9zaXRpb24iLCJfc2NyZWVuUG9zaXRpb25YIiwiX3NjcmVlblBvc2l0aW9uWSIsIl9zY2FsZSIsInNob3dTZWxlY3Rpb24iXSksdGhpcy5pc1Zpc2libGU9dm9pZCAwLHMuZGVmaW5lUHJvcGVydHkodGhpcywiaXNWaXNpYmxlIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hvd1NlbGVjdGlvbiYmaSh0aGlzLnBvc2l0aW9uKX19KSxzLmRlZmluZVByb3BlcnR5KHRoaXMsIl90cmFuc2Zvcm0iLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4ic2NhbGUoIit0aGlzLl9zY2FsZSsiKSJ9fSksdGhpcy5jb21wdXRlU2NyZWVuU3BhY2VQb3NpdGlvbj1mdW5jdGlvbih0LGkpe3JldHVybiBhLndnczg0VG9XaW5kb3dDb29yZGluYXRlcyhlLHQsaSl9fTtyZXR1cm4gYy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5zaG93U2VsZWN0aW9uJiZpKHRoaXMucG9zaXRpb24pKXt2YXIgZT10aGlzLmNvbXB1dGVTY3JlZW5TcGFjZVBvc2l0aW9uKHRoaXMucG9zaXRpb24sbCk7aWYoaShlKSl7dmFyIHQ9dGhpcy5fY29udGFpbmVyLG49dC5wYXJlbnROb2RlLmNsaWVudFdpZHRoLHI9dC5wYXJlbnROb2RlLmNsaWVudEhlaWdodCxvPXRoaXMuX3NlbGVjdGlvbkluZGljYXRvckVsZW1lbnQuY2xpZW50V2lkdGgsYT0uNSpvO2UueD1NYXRoLm1pbihNYXRoLm1heChlLngsLW8pLG4rbyktYSxlLnk9TWF0aC5taW4oTWF0aC5tYXgoZS55LC1vKSxyK28pLWEsdGhpcy5fc2NyZWVuUG9zaXRpb25YPU1hdGguZmxvb3IoZS54Ky4yNSkrInB4Iix0aGlzLl9zY3JlZW5Qb3NpdGlvblk9TWF0aC5mbG9vcihlLnkrLjI1KSsicHgifWVsc2UgdGhpcy5fc2NyZWVuUG9zaXRpb25YPXUsdGhpcy5fc2NyZWVuUG9zaXRpb25ZPXV9fSxjLnByb3RvdHlwZS5hbmltYXRlQXBwZWFyPWZ1bmN0aW9uKCl7dGhpcy5fdHdlZW5zLmFkZFByb3BlcnR5KHtvYmplY3Q6dGhpcyxwcm9wZXJ0eToiX3NjYWxlIixzdGFydFZhbHVlOjIsc3RvcFZhbHVlOjEsZHVyYXRpb246LjgsZWFzaW5nRnVuY3Rpb246by5FWFBPTkVOVElBTF9PVVR9KX0sYy5wcm90b3R5cGUuYW5pbWF0ZURlcGFydD1mdW5jdGlvbigpe3RoaXMuX3R3ZWVucy5hZGRQcm9wZXJ0eSh7b2JqZWN0OnRoaXMscHJvcGVydHk6Il9zY2FsZSIsc3RhcnRWYWx1ZTp0aGlzLl9zY2FsZSxzdG9wVmFsdWU6MS41LGR1cmF0aW9uOi44LGVhc2luZ0Z1bmN0aW9uOm8uRVhQT05FTlRJQUxfT1VUfSl9LG4oYy5wcm90b3R5cGUse2NvbnRhaW5lcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRhaW5lcn19LHNlbGVjdGlvbkluZGljYXRvckVsZW1lbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZWxlY3Rpb25JbmRpY2F0b3JFbGVtZW50fX0sc2NlbmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2VuZX19fSksY30pLGRlZmluZSgiV2lkZ2V0cy9TZWxlY3Rpb25JbmRpY2F0b3IvU2VsZWN0aW9uSW5kaWNhdG9yIixbIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9UaGlyZFBhcnR5L2tub2Nrb3V0IiwiLi4vZ2V0RWxlbWVudCIsIi4vU2VsZWN0aW9uSW5kaWNhdG9yVmlld01vZGVsIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSl7InVzZSBzdHJpY3QiO3ZhciBzPWZ1bmN0aW9uKGUsdCl7ZT1vKGUpLHRoaXMuX2NvbnRhaW5lcj1lO3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2kuY2xhc3NOYW1lPSJjZXNpdW0tc2VsZWN0aW9uLXdyYXBwZXIiLGkuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdzdHlsZTogeyAidG9wIiA6IF9zY3JlZW5Qb3NpdGlvblksICJsZWZ0IiA6IF9zY3JlZW5Qb3NpdGlvblggfSxjc3M6IHsgImNlc2l1bS1zZWxlY3Rpb24td3JhcHBlci12aXNpYmxlIiA6IGlzVmlzaWJsZSB9JyksZS5hcHBlbmRDaGlsZChpKSx0aGlzLl9lbGVtZW50PWk7dmFyIG49Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixzPSJNIC0zNCAtMzQgTCAtMzQgLTExLjI1IEwgLTMwIC0xNS4yNSBMIC0zMCAtMzAgTCAtMTUuMjUgLTMwIEwgLTExLjI1IC0zNCBMIC0zNCAtMzQgeiBNIDExLjI1IC0zNCBMIDE1LjI1IC0zMCBMIDMwIC0zMCBMIDMwIC0xNS4yNSBMIDM0IC0xMS4yNSBMIDM0IC0zNCBMIDExLjI1IC0zNCB6IE0gLTM0IDExLjI1IEwgLTM0IDM0IEwgLTExLjI1IDM0IEwgLTE1LjI1IDMwIEwgLTMwIDMwIEwgLTMwIDE1LjI1IEwgLTM0IDExLjI1IHogTSAzNCAxMS4yNSBMIDMwIDE1LjI1IEwgMzAgMzAgTCAxNS4yNSAzMCBMIDExLjI1IDM0IEwgMzQgMzQgTCAzNCAxMS4yNSB6IixsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuLCJzdmc6c3ZnIik7bC5zZXRBdHRyaWJ1dGUoIndpZHRoIiwxNjApLGwuc2V0QXR0cmlidXRlKCJoZWlnaHQiLDE2MCksbC5zZXRBdHRyaWJ1dGUoInZpZXdCb3giLCIwIDAgMTYwIDE2MCIpO3ZhciB1PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuLCJnIik7dS5zZXRBdHRyaWJ1dGUoInRyYW5zZm9ybSIsInRyYW5zbGF0ZSg4MCw4MCkiKSxsLmFwcGVuZENoaWxkKHUpO3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhuLCJwYXRoIik7Yy5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImF0dHI6IHsgdHJhbnNmb3JtOiBfdHJhbnNmb3JtIH0iKSxjLnNldEF0dHJpYnV0ZSgiZCIscyksdS5hcHBlbmRDaGlsZChjKSxpLmFwcGVuZENoaWxkKGwpO3ZhciBkPW5ldyBhKHQsdGhpcy5fZWxlbWVudCx0aGlzLl9jb250YWluZXIpO3RoaXMuX3ZpZXdNb2RlbD1kLHIuYXBwbHlCaW5kaW5ncyh0aGlzLl92aWV3TW9kZWwsdGhpcy5fZWxlbWVudCl9O3JldHVybiB0KHMucHJvdG90eXBlLHtjb250YWluZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250YWluZXJ9fSx2aWV3TW9kZWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl92aWV3TW9kZWx9fX0pLHMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jb250YWluZXI7cmV0dXJuIHIuY2xlYW5Ob2RlKHRoaXMuX2VsZW1lbnQpLGUucmVtb3ZlQ2hpbGQodGhpcy5fZWxlbWVudCksaSh0aGlzKX0sc30pLGRlZmluZSgiV2lkZ2V0cy9UaW1lbGluZS9UaW1lbGluZUhpZ2hsaWdodFJhbmdlIixbIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vLi4vQ29yZS9KdWxpYW5EYXRlIl0sZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSh0LGksbil7dGhpcy5fY29sb3I9dCx0aGlzLl9oZWlnaHQ9aSx0aGlzLl9iYXNlPWUobiwwKX1yZXR1cm4gaS5wcm90b3R5cGUuZ2V0SGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlaWdodH0saS5wcm90b3R5cGUuZ2V0QmFzZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9iYXNlfSxpLnByb3RvdHlwZS5nZXRTdGFydFRpbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhcnR9LGkucHJvdG90eXBlLmdldFN0b3BUaW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0b3B9LGkucHJvdG90eXBlLnNldFJhbmdlPWZ1bmN0aW9uKGUsdCl7dGhpcy5fc3RhcnQ9ZSx0aGlzLl9zdG9wPXR9LGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihlKXt2YXIgaT0iIjtpZih0aGlzLl9zdGFydCYmdGhpcy5fc3RvcCYmdGhpcy5fY29sb3Ipe3ZhciBuPXQuc2Vjb25kc0RpZmZlcmVuY2UodGhpcy5fc3RhcnQsZS5lcG9jaEp1bGlhbikscj1NYXRoLnJvdW5kKGUudGltZUJhcldpZHRoKmUuZ2V0QWxwaGEobikpLG89dC5zZWNvbmRzRGlmZmVyZW5jZSh0aGlzLl9zdG9wLGUuZXBvY2hKdWxpYW4pLGE9TWF0aC5yb3VuZChlLnRpbWVCYXJXaWR0aCplLmdldEFscGhhKG8pKS1yOzA+ciYmKGErPXIscj0wKSxyK2E+ZS50aW1lQmFyV2lkdGgmJihhPWUudGltZUJhcldpZHRoLXIpLGE+MCYmKGk9JzxzcGFuIGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtaGlnaGxpZ2h0IiBzdHlsZT0ibGVmdDogJytyLnRvU3RyaW5nKCkrInB4OyB3aWR0aDogIithLnRvU3RyaW5nKCkrInB4OyBib3R0b206ICIrdGhpcy5fYmFzZS50b1N0cmluZygpKyJweDsgaGVpZ2h0OiAiK3RoaXMuX2hlaWdodCsicHg7IGJhY2tncm91bmQtY29sb3I6ICIrdGhpcy5fY29sb3IrJzsiPjwvc3Bhbj4nKX1yZXR1cm4gaX0saX0pLGRlZmluZSgiV2lkZ2V0cy9UaW1lbGluZS9UaW1lbGluZVRyYWNrIixbIi4uLy4uL0NvcmUvQ29sb3IiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL0p1bGlhbkRhdGUiXSxmdW5jdGlvbihlLHQsaSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCxpLG4scil7dGhpcy5pbnRlcnZhbD10LHRoaXMuaGVpZ2h0PWksdGhpcy5jb2xvcj1ufHxuZXcgZSguNSwuNSwuNSwxKSx0aGlzLmJhY2tncm91bmRDb2xvcj1yfHxuZXcgZSgwLDAsMCwwKX1yZXR1cm4gbi5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGUsbil7dmFyIHI9dGhpcy5pbnRlcnZhbC5zdGFydCxvPXRoaXMuaW50ZXJ2YWwuc3RvcCxhPW4uc3RhcnRKdWxpYW4scz1pLmFkZFNlY29uZHMobi5zdGFydEp1bGlhbixuLmR1cmF0aW9uLG5ldyBpKTtpZihpLmxlc3NUaGFuKHIsYSkmJmkuZ3JlYXRlclRoYW4obyxzKSllLmZpbGxTdHlsZT10aGlzLmNvbG9yLnRvQ3NzQ29sb3JTdHJpbmcoKSxlLmZpbGxSZWN0KDAsbi55LG4udGltZUJhcldpZHRoLHRoaXMuaGVpZ2h0KTtlbHNlIGlmKGkubGVzc1RoYW5PckVxdWFscyhyLHMpJiZpLmdyZWF0ZXJUaGFuT3JFcXVhbHMobyxhKSl7dmFyIGwsdSxjO2ZvcihsPTA7bDxuLnRpbWVCYXJXaWR0aDsrK2wpe3ZhciBkPWkuYWRkU2Vjb25kcyhuLnN0YXJ0SnVsaWFuLGwvbi50aW1lQmFyV2lkdGgqbi5kdXJhdGlvbixuZXcgaSk7IXQodSkmJmkuZ3JlYXRlclRoYW5PckVxdWFscyhkLHIpP3U9bDohdChjKSYmaS5ncmVhdGVyVGhhbk9yRXF1YWxzKGQsbykmJihjPWwpfWUuZmlsbFN0eWxlPXRoaXMuYmFja2dyb3VuZENvbG9yLnRvQ3NzQ29sb3JTdHJpbmcoKSxlLmZpbGxSZWN0KDAsbi55LG4udGltZUJhcldpZHRoLHRoaXMuaGVpZ2h0KSx0KHUpJiYodChjKXx8KGM9bi50aW1lQmFyV2lkdGgpLGUuZmlsbFN0eWxlPXRoaXMuY29sb3IudG9Dc3NDb2xvclN0cmluZygpLGUuZmlsbFJlY3QodSxuLnksTWF0aC5tYXgoYy11LDEpLHRoaXMuaGVpZ2h0KSl9fSxufSksZGVmaW5lKCJXaWRnZXRzL1RpbWVsaW5lL1RpbWVsaW5lIixbIi4uLy4uL0NvcmUvQ2xvY2tSYW5nZSIsIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvZGVzdHJveU9iamVjdCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9Db3JlL0p1bGlhbkRhdGUiLCIuLi9nZXRFbGVtZW50IiwiLi9UaW1lbGluZUhpZ2hsaWdodFJhbmdlIiwiLi9UaW1lbGluZVRyYWNrIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbChlKXtyZXR1cm4gMTA+ZT8iMCIrZS50b1N0cmluZygpOmUudG9TdHJpbmcoKX1mdW5jdGlvbiB1KGUpe3JldHVybiBmdW5jdGlvbih0KXtlLl9tb3VzZU1vZGUhPT1nLnRvdWNoT25seSYmKDA9PT10LmJ1dHRvbj8oZS5fbW91c2VNb2RlPWcuc2NydWIsZS5fc2NydWJFbGVtZW50JiYoZS5fc2NydWJFbGVtZW50LnN0eWxlLmJhY2tncm91bmRQb3NpdGlvbj0iLTE2cHggMCIpLGUuX29uTW91c2VNb3ZlKHQpKTooZS5fbW91c2VYPXQuY2xpZW50WCxlLl9tb3VzZU1vZGU9Mj09PXQuYnV0dG9uP2cuem9vbTpnLnNsaWRlKSksdC5wcmV2ZW50RGVmYXVsdCgpfX1mdW5jdGlvbiBjKGUpe3JldHVybiBmdW5jdGlvbigpe2UuX21vdXNlTW9kZT1nLm5vbmUsZS5fc2NydWJFbGVtZW50JiYoZS5fc2NydWJFbGVtZW50LnN0eWxlLmJhY2tncm91bmRQb3NpdGlvbj0iMHB4IDBweCIpLGUuX3RpbWVsaW5lRHJhZz0wLGUuX3RpbWVsaW5lRHJhZ0xvY2F0aW9uPXZvaWQgMH19ZnVuY3Rpb24gZChlKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGk7aWYoZS5fbW91c2VNb2RlPT09Zy5zY3J1Yil7dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBuPXQuY2xpZW50WC1lLl90b3BEaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDswPm4/KGUuX3RpbWVsaW5lRHJhZ0xvY2F0aW9uPTAsZS5fdGltZWxpbmVEcmFnPS0uMDEqZS5fdGltZUJhclNlY29uZHNTcGFuKTpuPmUuX3RvcERpdi5jbGllbnRXaWR0aD8oZS5fdGltZWxpbmVEcmFnTG9jYXRpb249ZS5fdG9wRGl2LmNsaWVudFdpZHRoLGUuX3RpbWVsaW5lRHJhZz0uMDEqZS5fdGltZUJhclNlY29uZHNTcGFuKTooZS5fdGltZWxpbmVEcmFnTG9jYXRpb249dm9pZCAwLGUuX3NldFRpbWVCYXJUaW1lKG4sbiplLl90aW1lQmFyU2Vjb25kc1NwYW4vZS5fdG9wRGl2LmNsaWVudFdpZHRoKSl9ZWxzZSBpZihlLl9tb3VzZU1vZGU9PT1nLnNsaWRlKXtpZihpPWUuX21vdXNlWC10LmNsaWVudFgsZS5fbW91c2VYPXQuY2xpZW50WCwwIT09aSl7dmFyIG89aSplLl90aW1lQmFyU2Vjb25kc1NwYW4vZS5fdG9wRGl2LmNsaWVudFdpZHRoO2Uuem9vbVRvKHIuYWRkU2Vjb25kcyhlLl9zdGFydEp1bGlhbixvLG5ldyByKSxyLmFkZFNlY29uZHMoZS5fZW5kSnVsaWFuLG8sbmV3IHIpKX19ZWxzZSBlLl9tb3VzZU1vZGU9PT1nLnpvb20mJihpPWUuX21vdXNlWC10LmNsaWVudFgsZS5fbW91c2VYPXQuY2xpZW50WCwwIT09aSYmZS56b29tRnJvbShNYXRoLnBvdygxLjAxLGkpKSl9fWZ1bmN0aW9uIGgoZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBpPXQud2hlZWxEZWx0YVl8fHQud2hlZWxEZWx0YXx8LXQuZGV0YWlsO3Y9TWF0aC5tYXgoTWF0aC5taW4oTWF0aC5hYnMoaSksdiksMSksaS89dixlLnpvb21Gcm9tKE1hdGgucG93KDEuMDUsLWkpKX19ZnVuY3Rpb24gbShlKXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGksbixvPXQudG91Y2hlcy5sZW5ndGgsYT1lLl90b3BEaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDt0LnByZXZlbnREZWZhdWx0KCksZS5fbW91c2VNb2RlPWcudG91Y2hPbmx5LDE9PT1vPyhpPXIuc2Vjb25kc0RpZmZlcmVuY2UoZS5fc2NydWJKdWxpYW4sZS5fc3RhcnRKdWxpYW4pLG49TWF0aC5yb3VuZChpKmUuX3RvcERpdi5jbGllbnRXaWR0aC9lLl90aW1lQmFyU2Vjb25kc1NwYW4rYSksTWF0aC5hYnModC50b3VjaGVzWzBdLmNsaWVudFgtbik8NTA/KGUuX3RvdWNoTW9kZT1fLnNjcnViLGUuX3NjcnViRWxlbWVudCYmKGUuX3NjcnViRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kUG9zaXRpb249MT09PW8/Ii0xNnB4IDAiOiIwIDAiKSk6KGUuX3RvdWNoTW9kZT1fLnNpbmdsZVRhcCxlLl90b3VjaFN0YXRlLmNlbnRlclg9dC50b3VjaGVzWzBdLmNsaWVudFgtYSkpOjI9PT1vPyhlLl90b3VjaE1vZGU9Xy5zbGlkZVpvb20sZS5fdG91Y2hTdGF0ZS5jZW50ZXJYPS41Kih0LnRvdWNoZXNbMF0uY2xpZW50WCt0LnRvdWNoZXNbMV0uY2xpZW50WCktYSxlLl90b3VjaFN0YXRlLnNwYW5YPU1hdGguYWJzKHQudG91Y2hlc1swXS5jbGllbnRYLXQudG91Y2hlc1sxXS5jbGllbnRYKSk6ZS5fdG91Y2hNb2RlPV8uaWdub3JlfX1mdW5jdGlvbiBmKGUpe3JldHVybiBmdW5jdGlvbih0KXt2YXIgaT10LnRvdWNoZXMubGVuZ3RoLG49ZS5fdG9wRGl2LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7ZS5fdG91Y2hNb2RlPT09Xy5zaW5nbGVUYXA/KGUuX3RvdWNoTW9kZT1fLnNjcnViLGUuX2hhbmRsZVRvdWNoTW92ZSh0KSk6ZS5fdG91Y2hNb2RlPT09Xy5zY3J1YiYmZS5faGFuZGxlVG91Y2hNb3ZlKHQpLGUuX21vdXNlTW9kZT1nLnRvdWNoT25seSwxIT09aT9lLl90b3VjaE1vZGU9aT4wP18uaWdub3JlOl8ubm9uZTplLl90b3VjaE1vZGU9PT1fLnNsaWRlWm9vbSYmKGUuX3RvdWNoU3RhdGUuY2VudGVyWD10LnRvdWNoZXNbMF0uY2xpZW50WC1uKSxlLl9zY3J1YkVsZW1lbnQmJihlLl9zY3J1YkVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uPSIwIDAiKX19ZnVuY3Rpb24gcChlKXtyZXR1cm4gZnVuY3Rpb24oaSl7dmFyIG4sbyxhLHMsbCx1LGM9MSxkPWUuX3RvcERpdi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O2UuX3RvdWNoTW9kZT09PV8uc2luZ2xlVGFwJiYoZS5fdG91Y2hNb2RlPV8uc2xpZGVab29tKSxlLl9tb3VzZU1vZGU9Zy50b3VjaE9ubHksZS5fdG91Y2hNb2RlPT09Xy5zY3J1Yj8oaS5wcmV2ZW50RGVmYXVsdCgpLDE9PT1pLmNoYW5nZWRUb3VjaGVzLmxlbmd0aCYmKG89aS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYLWQsbz49MCYmbzw9ZS5fdG9wRGl2LmNsaWVudFdpZHRoJiZlLl9zZXRUaW1lQmFyVGltZShvLG8qZS5fdGltZUJhclNlY29uZHNTcGFuL2UuX3RvcERpdi5jbGllbnRXaWR0aCkpKTplLl90b3VjaE1vZGU9PT1fLnNsaWRlWm9vbSYmKGE9aS50b3VjaGVzLmxlbmd0aCwyPT09YT8ocz0uNSooaS50b3VjaGVzWzBdLmNsaWVudFgraS50b3VjaGVzWzFdLmNsaWVudFgpLWQsbD1NYXRoLmFicyhpLnRvdWNoZXNbMF0uY2xpZW50WC1pLnRvdWNoZXNbMV0uY2xpZW50WCkpOjE9PT1hJiYocz1pLnRvdWNoZXNbMF0uY2xpZW50WC1kLGw9MCksdChzKSYmKGw+MCYmZS5fdG91Y2hTdGF0ZS5zcGFuWD4wPyhjPWUuX3RvdWNoU3RhdGUuc3BhblgvbCx1PXIuYWRkU2Vjb25kcyhlLl9zdGFydEp1bGlhbiwoZS5fdG91Y2hTdGF0ZS5jZW50ZXJYKmUuX3RpbWVCYXJTZWNvbmRzU3Bhbi1zKmUuX3RpbWVCYXJTZWNvbmRzU3BhbipjKS9lLl90b3BEaXYuY2xpZW50V2lkdGgsbmV3IHIpKToobj1lLl90b3VjaFN0YXRlLmNlbnRlclgtcyx1PXIuYWRkU2Vjb25kcyhlLl9zdGFydEp1bGlhbixuKmUuX3RpbWVCYXJTZWNvbmRzU3Bhbi9lLl90b3BEaXYuY2xpZW50V2lkdGgsbmV3IHIpKSxlLnpvb21Ubyh1LHIuYWRkU2Vjb25kcyh1LGUuX3RpbWVCYXJTZWNvbmRzU3BhbipjLG5ldyByKSksZS5fdG91Y2hTdGF0ZS5jZW50ZXJYPXMsZS5fdG91Y2hTdGF0ZS5zcGFuWD1sKSkKfX12YXIgdj0xZTEyLGc9e25vbmU6MCxzY3J1YjoxLHNsaWRlOjIsem9vbTozLHRvdWNoT25seTo0fSxfPXtub25lOjAsc2NydWI6MSxzbGlkZVpvb206MixzaW5nbGVUYXA6MyxpZ25vcmU6NH0seT1bLjAwMSwuMDAyLC4wMDUsLjAxLC4wMiwuMDUsLjEsLjI1LC41LDEsMiw1LDEwLDE1LDMwLDYwLDEyMCwzMDAsNjAwLDkwMCwxODAwLDM2MDAsNzIwMCwxNDQwMCwyMTYwMCw0MzIwMCw4NjQwMCwxNzI4MDAsMzQ1NjAwLDYwNDgwMCwxMjk2ZTMsMjU5MmUzLDUxODRlMyw3Nzc2ZTMsMTU1NTJlMywzMTUzNmUzLDYzMDcyZTMsMTI2MTQ0ZTMsMTU3NjhlNCwzMTUzNmU0LDYzMDcyZTQsMTI2MTQ0ZTQsMTU3NjhlNSwzMTUzNmU1LDYzMDcyZTUsMTI2MTQ0ZTUsMTU3NjhlNiwzMTUzNmU2XSxDPVsiSmFuIiwiRmViIiwiTWFyIiwiQXByIiwiTWF5IiwiSnVuIiwiSnVsIiwiQXVnIiwiU2VwIiwiT2N0IiwiTm92IiwiRGVjIl0sdz1mdW5jdGlvbihlLHQpe2U9byhlKSx0aGlzLmNvbnRhaW5lcj1lO3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2kuY2xhc3NOYW1lPSJjZXNpdW0tdGltZWxpbmUtbWFpbiIsZS5hcHBlbmRDaGlsZChpKSx0aGlzLl90b3BEaXY9aSx0aGlzLl9lbmRKdWxpYW49dm9pZCAwLHRoaXMuX2Vwb2NoSnVsaWFuPXZvaWQgMCx0aGlzLl9sYXN0WFBvcz12b2lkIDAsdGhpcy5fc2NydWJFbGVtZW50PXZvaWQgMCx0aGlzLl9zdGFydEp1bGlhbj12b2lkIDAsdGhpcy5fdGltZUJhclNlY29uZHNTcGFuPXZvaWQgMCx0aGlzLl9jbG9jaz10LHRoaXMuX3NjcnViSnVsaWFuPXQuY3VycmVudFRpbWUsdGhpcy5fbWFpblRpY1NwYW49LTEsdGhpcy5fbW91c2VNb2RlPWcubm9uZSx0aGlzLl90b3VjaE1vZGU9Xy5ub25lLHRoaXMuX3RvdWNoU3RhdGU9e2NlbnRlclg6MCxzcGFuWDowfSx0aGlzLl9tb3VzZVg9MCx0aGlzLl90aW1lbGluZURyYWc9MCx0aGlzLl90aW1lbGluZURyYWdMb2NhdGlvbj12b2lkIDAsdGhpcy5fbGFzdEhlaWdodD12b2lkIDAsdGhpcy5fbGFzdFdpZHRoPXZvaWQgMCx0aGlzLl90b3BEaXYuaW5uZXJIVE1MPSc8ZGl2IGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtYmFyIj48L2Rpdj48ZGl2IGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtdHJhY2tDb250YWluZXIiPjxjYW52YXMgY2xhc3M9ImNlc2l1bS10aW1lbGluZS10cmFja3MiIHdpZHRoPSIxMCIgaGVpZ2h0PSIxIj48L2NhbnZhcz48L2Rpdj48ZGl2IGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtbmVlZGxlIj48L2Rpdj48c3BhbiBjbGFzcz0iY2VzaXVtLXRpbWVsaW5lLXJ1bGVyIj48L3NwYW4+Jyx0aGlzLl90aW1lQmFyRWxlPXRoaXMuX3RvcERpdi5jaGlsZE5vZGVzWzBdLHRoaXMuX3RyYWNrQ29udGFpbmVyPXRoaXMuX3RvcERpdi5jaGlsZE5vZGVzWzFdLHRoaXMuX3RyYWNrTGlzdEVsZT10aGlzLl90b3BEaXYuY2hpbGROb2Rlc1sxXS5jaGlsZE5vZGVzWzBdLHRoaXMuX25lZWRsZUVsZT10aGlzLl90b3BEaXYuY2hpbGROb2Rlc1syXSx0aGlzLl9ydWxlckVsZT10aGlzLl90b3BEaXYuY2hpbGROb2Rlc1szXSx0aGlzLl9jb250ZXh0PXRoaXMuX3RyYWNrTGlzdEVsZS5nZXRDb250ZXh0KCIyZCIpLHRoaXMuX3RyYWNrTGlzdD1bXSx0aGlzLl9oaWdobGlnaHRSYW5nZXM9W10sdGhpcy56b29tVG8odC5zdGFydFRpbWUsdC5zdG9wVGltZSksdGhpcy5fb25Nb3VzZURvd249dSh0aGlzKSx0aGlzLl9vbk1vdXNlVXA9Yyh0aGlzKSx0aGlzLl9vbk1vdXNlTW92ZT1kKHRoaXMpLHRoaXMuX29uTW91c2VXaGVlbD1oKHRoaXMpLHRoaXMuX29uVG91Y2hTdGFydD1tKHRoaXMpLHRoaXMuX29uVG91Y2hNb3ZlPXAodGhpcyksdGhpcy5fb25Ub3VjaEVuZD1mKHRoaXMpO3ZhciBuPXRoaXMuX3RpbWVCYXJFbGU7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2V1cCIsdGhpcy5fb25Nb3VzZVVwLCExKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLHRoaXMuX29uTW91c2VNb3ZlLCExKSxuLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsdGhpcy5fb25Nb3VzZURvd24sITEpLG4uYWRkRXZlbnRMaXN0ZW5lcigiRE9NTW91c2VTY3JvbGwiLHRoaXMuX29uTW91c2VXaGVlbCwhMSksbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZXdoZWVsIix0aGlzLl9vbk1vdXNlV2hlZWwsITEpLG4uYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsdGhpcy5fb25Ub3VjaFN0YXJ0LCExKSxuLmFkZEV2ZW50TGlzdGVuZXIoInRvdWNobW92ZSIsdGhpcy5fb25Ub3VjaE1vdmUsITEpLG4uYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hlbmQiLHRoaXMuX29uVG91Y2hFbmQsITEpLHRoaXMuX3RvcERpdi5vbmNvbnRleHRtZW51PWZ1bmN0aW9uKCl7cmV0dXJuITF9LHQub25UaWNrLmFkZEV2ZW50TGlzdGVuZXIodGhpcy51cGRhdGVGcm9tQ2xvY2ssdGhpcyksdGhpcy51cGRhdGVGcm9tQ2xvY2soKX07cmV0dXJuIHcucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX3RvcERpdi5hZGRFdmVudExpc3RlbmVyKGUsdCxpKX0sdy5wcm90b3R5cGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbihlLHQsaSl7dGhpcy5fdG9wRGl2LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSx0LGkpfSx3LnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSx3LnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fY2xvY2sub25UaWNrLnJlbW92ZUV2ZW50TGlzdGVuZXIodGhpcy51cGRhdGVGcm9tQ2xvY2ssdGhpcyksZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2V1cCIsdGhpcy5fb25Nb3VzZVVwLCExKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZW1vdmUiLHRoaXMuX29uTW91c2VNb3ZlLCExKTt2YXIgZT10aGlzLl90aW1lQmFyRWxlO2UucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9vbk1vdXNlRG93biwhMSksZS5yZW1vdmVFdmVudExpc3RlbmVyKCJET01Nb3VzZVNjcm9sbCIsdGhpcy5fb25Nb3VzZVdoZWVsLCExKSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNld2hlZWwiLHRoaXMuX29uTW91c2VXaGVlbCwhMSksZS5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaHN0YXJ0Iix0aGlzLl9vblRvdWNoU3RhcnQsITEpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2htb3ZlIix0aGlzLl9vblRvdWNoTW92ZSwhMSksZS5yZW1vdmVFdmVudExpc3RlbmVyKCJ0b3VjaGVuZCIsdGhpcy5fb25Ub3VjaEVuZCwhMSksdGhpcy5jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5fdG9wRGl2KSxpKHRoaXMpfSx3LnByb3RvdHlwZS5hZGRIaWdobGlnaHRSYW5nZT1mdW5jdGlvbihlLHQsaSl7dmFyIG49bmV3IGEoZSx0LGkpO3JldHVybiB0aGlzLl9oaWdobGlnaHRSYW5nZXMucHVzaChuKSx0aGlzLnJlc2l6ZSgpLG59LHcucHJvdG90eXBlLmFkZFRyYWNrPWZ1bmN0aW9uKGUsdCxpLG4pe3ZhciByPW5ldyBzKGUsdCxpLG4pO3JldHVybiB0aGlzLl90cmFja0xpc3QucHVzaChyKSx0aGlzLl9sYXN0SGVpZ2h0PXZvaWQgMCx0aGlzLnJlc2l6ZSgpLHJ9LHcucHJvdG90eXBlLnpvb21Ubz1mdW5jdGlvbih0LGkpe2lmKHRoaXMuX3N0YXJ0SnVsaWFuPXQsdGhpcy5fZW5kSnVsaWFuPWksdGhpcy5fdGltZUJhclNlY29uZHNTcGFuPXIuc2Vjb25kc0RpZmZlcmVuY2UoaSx0KSx0aGlzLl9jbG9jayYmdGhpcy5fY2xvY2suY2xvY2tSYW5nZSE9PWUuVU5CT1VOREVEKXt2YXIgbj10aGlzLl9jbG9jay5zdGFydFRpbWUsbz10aGlzLl9jbG9jay5zdG9wVGltZSxhPXIuc2Vjb25kc0RpZmZlcmVuY2UobyxuKSxzPXIuc2Vjb25kc0RpZmZlcmVuY2Uobix0aGlzLl9zdGFydEp1bGlhbiksbD1yLnNlY29uZHNEaWZmZXJlbmNlKG8sdGhpcy5fZW5kSnVsaWFuKTt0aGlzLl90aW1lQmFyU2Vjb25kc1NwYW4+PWE/KHRoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbj1hLHRoaXMuX3N0YXJ0SnVsaWFuPXRoaXMuX2Nsb2NrLnN0YXJ0VGltZSx0aGlzLl9lbmRKdWxpYW49dGhpcy5fY2xvY2suc3RvcFRpbWUpOnM+MD8odGhpcy5fZW5kSnVsaWFuPXIuYWRkU2Vjb25kcyh0aGlzLl9lbmRKdWxpYW4scyxuZXcgciksdGhpcy5fc3RhcnRKdWxpYW49bix0aGlzLl90aW1lQmFyU2Vjb25kc1NwYW49ci5zZWNvbmRzRGlmZmVyZW5jZSh0aGlzLl9lbmRKdWxpYW4sdGhpcy5fc3RhcnRKdWxpYW4pKTowPmwmJih0aGlzLl9zdGFydEp1bGlhbj1yLmFkZFNlY29uZHModGhpcy5fc3RhcnRKdWxpYW4sbCxuZXcgciksdGhpcy5fZW5kSnVsaWFuPW8sdGhpcy5fdGltZUJhclNlY29uZHNTcGFuPXIuc2Vjb25kc0RpZmZlcmVuY2UodGhpcy5fZW5kSnVsaWFuLHRoaXMuX3N0YXJ0SnVsaWFuKSl9dGhpcy5fbWFrZVRpY3MoKTt2YXIgdT1kb2N1bWVudC5jcmVhdGVFdmVudCgiRXZlbnQiKTt1LmluaXRFdmVudCgic2V0em9vbSIsITAsITApLHUuc3RhcnRKdWxpYW49dGhpcy5fc3RhcnRKdWxpYW4sdS5lbmRKdWxpYW49dGhpcy5fZW5kSnVsaWFuLHUuZXBvY2hKdWxpYW49dGhpcy5fZXBvY2hKdWxpYW4sdS50b3RhbFNwYW49dGhpcy5fdGltZUJhclNlY29uZHNTcGFuLHUubWFpblRpY1NwYW49dGhpcy5fbWFpblRpY1NwYW4sdGhpcy5fdG9wRGl2LmRpc3BhdGNoRXZlbnQodSl9LHcucHJvdG90eXBlLnpvb21Gcm9tPWZ1bmN0aW9uKGUpe3ZhciB0PXIuc2Vjb25kc0RpZmZlcmVuY2UodGhpcy5fc2NydWJKdWxpYW4sdGhpcy5fc3RhcnRKdWxpYW4pO2U+MXx8MD50fHx0PnRoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbj90PS41KnRoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbjp0Kz10LS41KnRoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbjt2YXIgaT10aGlzLl90aW1lQmFyU2Vjb25kc1NwYW4tdDt0aGlzLnpvb21UbyhyLmFkZFNlY29uZHModGhpcy5fc3RhcnRKdWxpYW4sdC10KmUsbmV3IHIpLHIuYWRkU2Vjb25kcyh0aGlzLl9lbmRKdWxpYW4saSplLWksbmV3IHIpKX0sdy5wcm90b3R5cGUubWFrZUxhYmVsPWZ1bmN0aW9uKGUpe3ZhciB0PXIudG9HcmVnb3JpYW5EYXRlKGUpLGk9dC5taWxsaXNlY29uZCxuPSIgVVRDIjtpZihpPjAmJnRoaXMuX3RpbWVCYXJTZWNvbmRzU3BhbjwzNjAwKXtmb3Iobj1NYXRoLmZsb29yKGkpLnRvU3RyaW5nKCk7bi5sZW5ndGg8Mzspbj0iMCIrbjtuPSIuIitufXJldHVybiBDW3QubW9udGgtMV0rIiAiK3QuZGF5KyIgIit0LnllYXIrIiAiK2wodC5ob3VyKSsiOiIrbCh0Lm1pbnV0ZSkrIjoiK2wodC5zZWNvbmQpK259LHcucHJvdG90eXBlLnNtYWxsZXN0VGljSW5QaXhlbHM9Nyx3LnByb3RvdHlwZS5fbWFrZVRpY3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3JldHVybiBNYXRoLmZsb29yKEUvZSkqZX1mdW5jdGlvbiB0KGUsdCl7cmV0dXJuIE1hdGguY2VpbChlL3QrLjUpKnR9ZnVuY3Rpb24gaShlKXtyZXR1cm4oZS1FKS92fWZ1bmN0aW9uIG4oZSx0KXtyZXR1cm4gZS10Kk1hdGgucm91bmQoZS90KX12YXIgbyxhPXRoaXMuX3RpbWVCYXJFbGUscz1yLnNlY29uZHNEaWZmZXJlbmNlKHRoaXMuX3NjcnViSnVsaWFuLHRoaXMuX3N0YXJ0SnVsaWFuKSxsPU1hdGgucm91bmQocyp0aGlzLl90b3BEaXYuY2xpZW50V2lkdGgvdGhpcy5fdGltZUJhclNlY29uZHNTcGFuKSx1PWwtOCxjPXRoaXM7dGhpcy5fbmVlZGxlRWxlLnN0eWxlLmxlZnQ9bC50b1N0cmluZygpKyJweCI7dmFyIGQ9IiIsaD0uMDEsbT0zMTUzNmU2LGY9MWUtMTAscD0wLHY9dGhpcy5fdGltZUJhclNlY29uZHNTcGFuO2g+dj8odj1oLHRoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbj1oLHRoaXMuX2VuZEp1bGlhbj1yLmFkZFNlY29uZHModGhpcy5fc3RhcnRKdWxpYW4saCxuZXcgcikpOnY+bSYmKHY9bSx0aGlzLl90aW1lQmFyU2Vjb25kc1NwYW49bSx0aGlzLl9lbmRKdWxpYW49ci5hZGRTZWNvbmRzKHRoaXMuX3N0YXJ0SnVsaWFuLG0sbmV3IHIpKTt2YXIgZz10aGlzLl90aW1lQmFyRWxlLmNsaWVudFdpZHRoOzEwPmcmJihnPTEwKTt2YXIgXyxDPXRoaXMuX3N0YXJ0SnVsaWFuLHc9TWF0aC5taW4oMWUtNSoodi9nKSwuNCk7Xz12PjMxNTM2ZTQ/ci5mcm9tSXNvODYwMShyLnRvRGF0ZShDKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLDIpKyIwMC0wMS0wMVQwMDowMDowMFoiKTp2PjMxNTM2ZTM/ci5mcm9tSXNvODYwMShyLnRvRGF0ZShDKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLDMpKyIwLTAxLTAxVDAwOjAwOjAwWiIpOnY+ODY0MDA/ci5mcm9tSXNvODYwMShyLnRvRGF0ZShDKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLDQpKyItMDEtMDFUMDA6MDA6MDBaIik6ci5mcm9tSXNvODYwMShyLnRvRGF0ZShDKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLDEwKSsiVDAwOjAwOjAwWiIpO3ZhciBFPXIuc2Vjb25kc0RpZmZlcmVuY2UodGhpcy5fc3RhcnRKdWxpYW4sci5hZGRTZWNvbmRzKF8sdyxuZXcgcikpLGI9RSt2O3RoaXMuX2Vwb2NoSnVsaWFuPV8sdGhpcy5fcnVsZXJFbGUuaW5uZXJIVE1MPXRoaXMubWFrZUxhYmVsKHIuYWRkU2Vjb25kcyh0aGlzLl9lbmRKdWxpYW4sLWgsbmV3IHIpKTt2YXIgUz10aGlzLl9ydWxlckVsZS5vZmZzZXRXaWR0aCsyMDszMD5TJiYoUz0xODApO3ZhciBUPXA7cC09Zjt2YXIgeD17c3RhcnRUaW1lOkUsc3RhcnRKdWxpYW46QyxlcG9jaEp1bGlhbjpfLGR1cmF0aW9uOnYsdGltZUJhcldpZHRoOmcsZ2V0QWxwaGE6aX07dGhpcy5faGlnaGxpZ2h0UmFuZ2VzLmZvckVhY2goZnVuY3Rpb24oZSl7ZCs9ZS5yZW5kZXIoeCl9KTt2YXIgQT0wLFA9MCxNPTAsST1TL2c7ST4xJiYoST0xKSxJKj10aGlzLl90aW1lQmFyU2Vjb25kc1NwYW47dmFyIEQsTz0tMSxSPS0xLEw9eS5sZW5ndGg7Zm9yKEQ9MDtMPkQ7KytEKXt2YXIgTj15W0RdO2lmKCsrTyxBPU4sTj5JJiZOPnApYnJlYWs7MD5SJiZnKihOL3RoaXMuX3RpbWVCYXJTZWNvbmRzU3Bhbik+PXRoaXMuc21hbGxlc3RUaWNJblBpeGVscyYmKFI9Tyl9aWYoTz4wKXtmb3IoO08+MDspaWYoLS1PLE1hdGguYWJzKG4oQSx5W09dKSk8MWUtNSl7eVtPXT49cCYmKFA9eVtPXSk7YnJlYWt9aWYoUj49MClmb3IoO08+Ujspe2lmKE1hdGguYWJzKG4oUCx5W1JdKSk8MWUtNSYmeVtSXT49cCl7TT15W1JdO2JyZWFrfSsrUn19cD1ULHA+ZiYmMWUtNT5NJiZNYXRoLmFicyhwLUEpPmYmJihNPXAsQStmPj1wJiYoUD0wKSk7dmFyIHosQj0tOTk5OTk5O2lmKGcqKE0vdGhpcy5fdGltZUJhclNlY29uZHNTcGFuKT49Mylmb3Iobz1lKE0pO2I+PW87bz10KG8sTSkpZCs9JzxzcGFuIGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtdGljVGlueSIgc3R5bGU9ImxlZnQ6ICcrTWF0aC5yb3VuZChnKmkobykpLnRvU3RyaW5nKCkrJ3B4OyI+PC9zcGFuPic7aWYoZyooUC90aGlzLl90aW1lQmFyU2Vjb25kc1NwYW4pPj0zKWZvcihvPWUoUCk7Yj49bztvPXQobyxQKSlkKz0nPHNwYW4gY2xhc3M9ImNlc2l1bS10aW1lbGluZS10aWNTdWIiIHN0eWxlPSJsZWZ0OiAnK01hdGgucm91bmQoZyppKG8pKS50b1N0cmluZygpKydweDsiPjwvc3Bhbj4nO2lmKGcqKEEvdGhpcy5fdGltZUJhclNlY29uZHNTcGFuKT49Mil7dGhpcy5fbWFpblRpY1NwYW49QSxiKz1BLG89ZShBKTtmb3IodmFyIEY9ci5jb21wdXRlVGFpTWludXNVdGMoXyk7Yj49bzspe3ZhciBWPXIuYWRkU2Vjb25kcyhDLG8tRSxuZXcgcik7aWYoQT4yLjEpe3ZhciBrPXIuY29tcHV0ZVRhaU1pbnVzVXRjKFYpO01hdGguYWJzKGstRik+LjEmJihvKz1rLUYsVj1yLmFkZFNlY29uZHMoQyxvLUUsbmV3IHIpKX12YXIgVT1NYXRoLnJvdW5kKGcqaShvKSksVz10aGlzLm1ha2VMYWJlbChWKTt0aGlzLl9ydWxlckVsZS5pbm5lckhUTUw9Vyx6PXRoaXMuX3J1bGVyRWxlLm9mZnNldFdpZHRoLDEwPnomJih6PVMpO3ZhciBHPVUtKHovMi0xKTtHPkI/KEI9Ryt6KzUsZCs9JzxzcGFuIGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtdGljTWFpbiIgc3R5bGU9ImxlZnQ6ICcrVS50b1N0cmluZygpKydweDsiPjwvc3Bhbj4nKyc8c3BhbiBjbGFzcz0iY2VzaXVtLXRpbWVsaW5lLXRpY0xhYmVsIiBzdHlsZT0ibGVmdDogJytHLnRvU3RyaW5nKCkrJ3B4OyI+JytXKyI8L3NwYW4+Iik6ZCs9JzxzcGFuIGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtdGljU3ViIiBzdHlsZT0ibGVmdDogJytVLnRvU3RyaW5nKCkrJ3B4OyI+PC9zcGFuPicsbz10KG8sQSl9fWVsc2UgdGhpcy5fbWFpblRpY1NwYW49LTE7ZCs9JzxzcGFuIGNsYXNzPSJjZXNpdW0tdGltZWxpbmUtaWNvbjE2IiBzdHlsZT0ibGVmdDonK3UrJ3B4O2JvdHRvbTowO2JhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7Ij48L3NwYW4+JyxhLmlubmVySFRNTD1kLHRoaXMuX3NjcnViRWxlbWVudD1hLmxhc3RDaGlsZCx0aGlzLl9jb250ZXh0LmNsZWFyUmVjdCgwLDAsdGhpcy5fdHJhY2tMaXN0RWxlLndpZHRoLHRoaXMuX3RyYWNrTGlzdEVsZS5oZWlnaHQpLHgueT0wLHRoaXMuX3RyYWNrTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UucmVuZGVyKGMuX2NvbnRleHQseCkseC55Kz1lLmhlaWdodH0pfSx3LnByb3RvdHlwZS51cGRhdGVGcm9tQ2xvY2s9ZnVuY3Rpb24oKXt0aGlzLl9zY3J1Ykp1bGlhbj10aGlzLl9jbG9jay5jdXJyZW50VGltZTt2YXIgZT10aGlzLl9zY3J1YkVsZW1lbnQ7aWYodCh0aGlzLl9zY3J1YkVsZW1lbnQpKXt2YXIgaT1yLnNlY29uZHNEaWZmZXJlbmNlKHRoaXMuX3NjcnViSnVsaWFuLHRoaXMuX3N0YXJ0SnVsaWFuKSxuPU1hdGgucm91bmQoaSp0aGlzLl90b3BEaXYuY2xpZW50V2lkdGgvdGhpcy5fdGltZUJhclNlY29uZHNTcGFuKTt0aGlzLl9sYXN0WFBvcyE9PW4mJih0aGlzLl9sYXN0WFBvcz1uLGUuc3R5bGUubGVmdD1uLTgrInB4Iix0aGlzLl9uZWVkbGVFbGUuc3R5bGUubGVmdD1uKyJweCIpfXQodGhpcy5fdGltZWxpbmVEcmFnTG9jYXRpb24pJiYodGhpcy5fc2V0VGltZUJhclRpbWUodGhpcy5fdGltZWxpbmVEcmFnTG9jYXRpb24sdGhpcy5fdGltZWxpbmVEcmFnTG9jYXRpb24qdGhpcy5fdGltZUJhclNlY29uZHNTcGFuL3RoaXMuX3RvcERpdi5jbGllbnRXaWR0aCksdGhpcy56b29tVG8oci5hZGRTZWNvbmRzKHRoaXMuX3N0YXJ0SnVsaWFuLHRoaXMuX3RpbWVsaW5lRHJhZyxuZXcgciksci5hZGRTZWNvbmRzKHRoaXMuX2VuZEp1bGlhbix0aGlzLl90aW1lbGluZURyYWcsbmV3IHIpKSl9LHcucHJvdG90eXBlLl9zZXRUaW1lQmFyVGltZT1mdW5jdGlvbihlLHQpe2lmKGU9TWF0aC5yb3VuZChlKSx0aGlzLl9zY3J1Ykp1bGlhbj1yLmFkZFNlY29uZHModGhpcy5fc3RhcnRKdWxpYW4sdCxuZXcgciksdGhpcy5fc2NydWJFbGVtZW50KXt2YXIgaT1lLTg7dGhpcy5fc2NydWJFbGVtZW50LnN0eWxlLmxlZnQ9aS50b1N0cmluZygpKyJweCIsdGhpcy5fbmVlZGxlRWxlLnN0eWxlLmxlZnQ9ZS50b1N0cmluZygpKyJweCJ9dmFyIG49ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50Iik7bi5pbml0RXZlbnQoInNldHRpbWUiLCEwLCEwKSxuLmNsaWVudFg9ZSxuLnRpbWVTZWNvbmRzPXQsbi50aW1lSnVsaWFuPXRoaXMuX3NjcnViSnVsaWFuLG4uY2xvY2s9dGhpcy5fY2xvY2ssdGhpcy5fdG9wRGl2LmRpc3BhdGNoRXZlbnQobil9LHcucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuY29udGFpbmVyLmNsaWVudFdpZHRoLHQ9dGhpcy5jb250YWluZXIuY2xpZW50SGVpZ2h0O2lmKGUhPT10aGlzLl9sYXN0V2lkdGh8fHQhPT10aGlzLl9sYXN0SGVpZ2h0KXt0aGlzLl90cmFja0NvbnRhaW5lci5zdHlsZS5oZWlnaHQ9dCsicHgiO3ZhciBpPTE7dGhpcy5fdHJhY2tMaXN0LmZvckVhY2goZnVuY3Rpb24oZSl7aSs9ZS5oZWlnaHR9KSx0aGlzLl90cmFja0xpc3RFbGUuc3R5bGUuaGVpZ2h0PWkudG9TdHJpbmcoKSsicHgiLHRoaXMuX3RyYWNrTGlzdEVsZS53aWR0aD10aGlzLl90cmFja0xpc3RFbGUuY2xpZW50V2lkdGgsdGhpcy5fdHJhY2tMaXN0RWxlLmhlaWdodD1pLHRoaXMuX21ha2VUaWNzKCksdGhpcy5fbGFzdFdpZHRoPWUsdGhpcy5fbGFzdEhlaWdodD10fX0sd30pLGRlZmluZSgiV2lkZ2V0cy9WaWV3ZXIvVmlld2VyIixbIi4uLy4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9kZXN0cm95T2JqZWN0IiwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uLy4uL0NvcmUvRXZlbnRIZWxwZXIiLCIuLi8uLi9EYXRhU291cmNlcy9EYXRhU291cmNlQ29sbGVjdGlvbiIsIi4uLy4uL0RhdGFTb3VyY2VzL0RhdGFTb3VyY2VEaXNwbGF5IiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL0FuaW1hdGlvbi9BbmltYXRpb24iLCIuLi9BbmltYXRpb24vQW5pbWF0aW9uVmlld01vZGVsIiwiLi4vQmFzZUxheWVyUGlja2VyL0Jhc2VMYXllclBpY2tlciIsIi4uL0Jhc2VMYXllclBpY2tlci9jcmVhdGVEZWZhdWx0SW1hZ2VyeVByb3ZpZGVyVmlld01vZGVscyIsIi4uL0Jhc2VMYXllclBpY2tlci9jcmVhdGVEZWZhdWx0VGVycmFpblByb3ZpZGVyVmlld01vZGVscyIsIi4uL0Nlc2l1bVdpZGdldC9DZXNpdW1XaWRnZXQiLCIuLi9DbG9ja1ZpZXdNb2RlbCIsIi4uL0Z1bGxzY3JlZW5CdXR0b24vRnVsbHNjcmVlbkJ1dHRvbiIsIi4uL0dlb2NvZGVyL0dlb2NvZGVyIiwiLi4vZ2V0RWxlbWVudCIsIi4uL0hvbWVCdXR0b24vSG9tZUJ1dHRvbiIsIi4uL0luZm9Cb3gvSW5mb0JveCIsIi4uL05hdmlnYXRpb25IZWxwQnV0dG9uL05hdmlnYXRpb25IZWxwQnV0dG9uIiwiLi4vU2NlbmVNb2RlUGlja2VyL1NjZW5lTW9kZVBpY2tlciIsIi4uL1NlbGVjdGlvbkluZGljYXRvci9TZWxlY3Rpb25JbmRpY2F0b3IiLCIuLi9zdWJzY3JpYmVBbmRFdmFsdWF0ZSIsIi4uL1RpbWVsaW5lL1RpbWVsaW5lIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSxjLGQsaCxtLGYscCx2LGcsXyx5LEMsdyxFLGIsUyxUKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24geChlKXt2YXIgdD1lLmNsb2NrO3QuY3VycmVudFRpbWU9ZS50aW1lSnVsaWFuLHQuc2hvdWxkQW5pbWF0ZT0hMX1mdW5jdGlvbiBBKGUpe3ZhciBpPWUuX2NvbnRhaW5lcixuPWkuY2xpZW50V2lkdGgscj1pLmNsaWVudEhlaWdodCxvPXQoZS5fYW5pbWF0aW9uKSxhPXQoZS5fdGltZWxpbmUpO2lmKG4hPT1lLl9sYXN0V2lkdGh8fHIhPT1lLl9sYXN0SGVpZ2h0KXt2YXIgcz1yLTEyNSxsPWUuX2Jhc2VMYXllclBpY2tlckRyb3BEb3duO3QobCkmJihsLnN0eWxlLm1heEhlaWdodD1zKyJweCIpLHQoZS5faW5mb0JveCkmJihlLl9pbmZvQm94LnZpZXdNb2RlbC5tYXhIZWlnaHQ9cyk7dmFyIHUsYz1lLl90aW1lbGluZSxkPTAsaD0wLG09MDtpZihvJiYiaGlkZGVuIiE9PXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUuX2FuaW1hdGlvbi5jb250YWluZXIpLnZpc2liaWxpdHkpe3ZhciBmPWUuX2xhc3RXaWR0aDt1PWUuX2FuaW1hdGlvbi5jb250YWluZXIsbj45MDA/KGQ9MTY5LDkwMD49ZiYmKHUuc3R5bGUud2lkdGg9IjE2OXB4Iix1LnN0eWxlLmhlaWdodD0iMTEycHgiLGUuX2FuaW1hdGlvbi5yZXNpemUoKSkpOm4+PTYwMD8oZD0xMzYsKDYwMD5mfHxmPjkwMCkmJih1LnN0eWxlLndpZHRoPSIxMzZweCIsdS5zdHlsZS5oZWlnaHQ9IjkwcHgiLGUuX2FuaW1hdGlvbi5yZXNpemUoKSkpOihkPTEwNiwoZj42MDB8fDA9PT1mKSYmKHUuc3R5bGUud2lkdGg9IjEwNnB4Iix1LnN0eWxlLmhlaWdodD0iNzBweCIsZS5fYW5pbWF0aW9uLnJlc2l6ZSgpKSksaD1kKzV9aWYoYSYmImhpZGRlbiIhPT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlLl90aW1lbGluZS5jb250YWluZXIpLnZpc2liaWxpdHkpe3ZhciBwPWUuX2Z1bGxzY3JlZW5CdXR0b24sdj1jLmNvbnRhaW5lcixnPXYuc3R5bGU7bT12LmNsaWVudEhlaWdodCszLGcubGVmdD1kKyJweCIsdChwKSYmKGcucmlnaHQ9cC5jb250YWluZXIuY2xpZW50V2lkdGgrInB4IiksYy5yZXNpemUoKX1lLl9ib3R0b21Db250YWluZXIuc3R5bGUubGVmdD1oKyJweCIsZS5fYm90dG9tQ29udGFpbmVyLnN0eWxlLmJvdHRvbT1tKyJweCIsZS5fbGFzdFdpZHRoPW4sZS5fbGFzdEhlaWdodD1yfX12YXIgUD1mdW5jdGlvbihpLG4pe2Z1bmN0aW9uIFAoZSl7aWYodChlKSl7dmFyIGk9ZS5jbG9jazt0KGkpJiYoaS5nZXRWYWx1ZShGKSx0KGF0KSYmKGF0LnVwZGF0ZUZyb21DbG9jaygpLGF0Lnpvb21UbyhpLnN0YXJ0VGltZSxpLnN0b3BUaW1lKSkpfX1pPV8oaSksbj1lKG4sZS5FTVBUWV9PQkpFQ1QpO3ZhciBNPSF0KG4uYmFzZUxheWVyUGlja2VyKXx8bi5iYXNlTGF5ZXJQaWNrZXIhPT0hMSxJPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0kuY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyIixpLmFwcGVuZENoaWxkKEkpO3ZhciBEPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0QuY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyLWNlc2l1bVdpZGdldENvbnRhaW5lciIsSS5hcHBlbmRDaGlsZChEKTt2YXIgTz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtPLmNsYXNzTmFtZT0iY2VzaXVtLXZpZXdlci1ib3R0b20iLEkuYXBwZW5kQ2hpbGQoTyk7dmFyIFI9ZShuLnNjZW5lM0RPbmx5LCExKSxMPW5ldyBmKEQse3RlcnJhaW5Qcm92aWRlcjpuLnRlcnJhaW5Qcm92aWRlcixpbWFnZXJ5UHJvdmlkZXI6TT8hMTpuLmltYWdlcnlQcm92aWRlcixza3lCb3g6bi5za3lCb3gsc2NlbmVNb2RlOm4uc2NlbmVNb2RlLG1hcFByb2plY3Rpb246bi5tYXBQcm9qZWN0aW9uLG9yZGVySW5kZXBlbmRlbnRUcmFuc2x1Y2VuY3k6bi5vcmRlckluZGVwZW5kZW50VHJhbnNsdWNlbmN5LGNvbnRleHRPcHRpb25zOm4uY29udGV4dE9wdGlvbnMsdXNlRGVmYXVsdFJlbmRlckxvb3A6bi51c2VEZWZhdWx0UmVuZGVyTG9vcCx0YXJnZXRGcmFtZVJhdGU6bi50YXJnZXRGcmFtZVJhdGUsc2hvd1JlbmRlckxvb3BFcnJvcnM6bi5zaG93UmVuZGVyTG9vcEVycm9ycyxjcmVkaXRDb250YWluZXI6dChuLmNyZWRpdENvbnRhaW5lcik/bi5jcmVkaXRDb250YWluZXI6TyxzY2VuZTNET25seTpSfSksTj1uLmRhdGFTb3VyY2VzLHo9ITE7dChOKXx8KE49bmV3IGEsej0hMCk7dmFyIEI9bmV3IHMoe3NjZW5lOkwuc2NlbmUsZGF0YVNvdXJjZUNvbGxlY3Rpb246Tn0pLEY9TC5jbG9jayxWPW5ldyBwKEYpLGs9bmV3IG8sVT10aGlzO2suYWRkKEYub25UaWNrLGZ1bmN0aW9uKGUpe3ZhciB0PUIudXBkYXRlKGUuY3VycmVudFRpbWUpO1UuX2FsbG93RGF0YVNvdXJjZXNUb1N1c3BlbmRBbmltYXRpb24mJihWLmNhbkFuaW1hdGU9dCl9KTt2YXIgVztpZighdChuLnNlbGVjdGlvbkluZGljYXRvcil8fG4uc2VsZWN0aW9uSW5kaWNhdG9yIT09ITEpe3ZhciBHPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0cuY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyLXNlbGVjdGlvbkluZGljYXRvckNvbnRhaW5lciIsSS5hcHBlbmRDaGlsZChHKSxXPW5ldyBiKEcsTC5zY2VuZSl9dmFyIEg7aWYoIXQobi5pbmZvQm94KXx8bi5pbmZvQm94IT09ITEpe3ZhciBxPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3EuY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyLWluZm9Cb3hDb250YWluZXIiLEkuYXBwZW5kQ2hpbGQocSksSD1uZXcgQyhxKX12YXIgaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtqLmNsYXNzTmFtZT0iY2VzaXVtLXZpZXdlci10b29sYmFyIixJLmFwcGVuZENoaWxkKGopO3ZhciBZO2lmKCF0KG4uZ2VvY29kZXIpfHxuLmdlb2NvZGVyIT09ITEpe3ZhciBYPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO1guY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyLWdlb2NvZGVyQ29udGFpbmVyIixqLmFwcGVuZENoaWxkKFgpLFk9bmV3IGcoe2NvbnRhaW5lcjpYLHNjZW5lOkwuc2NlbmV9KX12YXIgWjtpZih0KG4uaG9tZUJ1dHRvbikmJm4uaG9tZUJ1dHRvbj09PSExfHwoWj1uZXcgeShqLEwuc2NlbmUpLHQoWSkmJmsuYWRkKFoudmlld01vZGVsLmNvbW1hbmQuYWZ0ZXJFeGVjdXRlLGZ1bmN0aW9uKCl7dmFyIGU9WS52aWV3TW9kZWw7ZS5zZWFyY2hUZXh0PSIiLGUuaXNTZWFyY2hJblByb2dyZXNzJiZlLnNlYXJjaCgpfSkpLG4uc2NlbmVNb2RlUGlja2VyPT09ITAmJlIpdGhyb3cgbmV3IHIoIm9wdGlvbnMuc2NlbmVNb2RlUGlja2VyIGlzIG5vdCBhdmFpbGFibGUgd2hlbiBvcHRpb25zLnNjZW5lM0RPbmx5IGlzIHNldCB0byB0cnVlLiIpO3ZhciBKO1J8fHQobi5zY2VuZU1vZGVQaWNrZXIpJiZuLnNjZW5lTW9kZVBpY2tlcj09PSExfHwoSj1uZXcgRShqLEwuc2NlbmUpKTt2YXIgSztpZihNKXt2YXIgUT1lKG4uaW1hZ2VyeVByb3ZpZGVyVmlld01vZGVscyxoKCkpLCQ9ZShuLnRlcnJhaW5Qcm92aWRlclZpZXdNb2RlbHMsbSgpKTtLPW5ldyBkKGose2dsb2JlOkwuc2NlbmUuZ2xvYmUsaW1hZ2VyeVByb3ZpZGVyVmlld01vZGVsczpRLHNlbGVjdGVkSW1hZ2VyeVByb3ZpZGVyVmlld01vZGVsOm4uc2VsZWN0ZWRJbWFnZXJ5UHJvdmlkZXJWaWV3TW9kZWwsdGVycmFpblByb3ZpZGVyVmlld01vZGVsczokLHNlbGVjdGVkVGVycmFpblByb3ZpZGVyVmlld01vZGVsOm4uc2VsZWN0ZWRUZXJyYWluUHJvdmlkZXJWaWV3TW9kZWx9KTt2YXIgZXQ9ai5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjZXNpdW0tYmFzZUxheWVyUGlja2VyLWRyb3BEb3duIik7dGhpcy5fYmFzZUxheWVyUGlja2VyRHJvcERvd249ZXRbMF19dmFyIHR0O2lmKCF0KG4ubmF2aWdhdGlvbkhlbHBCdXR0b24pfHxuLm5hdmlnYXRpb25IZWxwQnV0dG9uIT09ITEpe3ZhciBpdD0hMDtpZih0KHdpbmRvdy5sb2NhbFN0b3JhZ2UpKXt2YXIgbnQ9d2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCJjZXNpdW0taGFzU2Vlbk5hdkhlbHAiKTt0KG50KSYmQm9vbGVhbihudCk/aXQ9ITE6d2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCJjZXNpdW0taGFzU2Vlbk5hdkhlbHAiLCJ0cnVlIil9dHQ9bmV3IHcoe2NvbnRhaW5lcjpqLGluc3RydWN0aW9uc0luaXRpYWxseVZpc2libGU6ZShuLm5hdmlnYXRpb25JbnN0cnVjdGlvbnNJbml0aWFsbHlWaXNpYmxlLGl0KX0pfXZhciBydDtpZighdChuLmFuaW1hdGlvbil8fG4uYW5pbWF0aW9uIT09ITEpe3ZhciBvdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtvdC5jbGFzc05hbWU9ImNlc2l1bS12aWV3ZXItYW5pbWF0aW9uQ29udGFpbmVyIixJLmFwcGVuZENoaWxkKG90KSxydD1uZXcgdShvdCxuZXcgYyhWKSl9dmFyIGF0O2lmKCF0KG4udGltZWxpbmUpfHxuLnRpbWVsaW5lIT09ITEpe3ZhciBzdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtzdC5jbGFzc05hbWU9ImNlc2l1bS12aWV3ZXItdGltZWxpbmVDb250YWluZXIiLEkuYXBwZW5kQ2hpbGQoc3QpLGF0PW5ldyBUKHN0LEYpLGF0LmFkZEV2ZW50TGlzdGVuZXIoInNldHRpbWUiLHgsITEpLGF0Lnpvb21UbyhGLnN0YXJ0VGltZSxGLnN0b3BUaW1lKX12YXIgbHQ7aWYodChuLmZ1bGxzY3JlZW5CdXR0b24pJiZuLmZ1bGxzY3JlZW5CdXR0b249PT0hMSl0KGF0KSYmKGF0LmNvbnRhaW5lci5zdHlsZS5yaWdodD0wKTtlbHNle3ZhciB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt1dC5jbGFzc05hbWU9ImNlc2l1bS12aWV3ZXItZnVsbHNjcmVlbkNvbnRhaW5lciIsSS5hcHBlbmRDaGlsZCh1dCksbHQ9bmV3IHYodXQsbi5mdWxsc2NyZWVuRWxlbWVudCksdGhpcy5fZnVsbHNjcmVlblN1YnNjcmlwdGlvbj1TKGx0LnZpZXdNb2RlbCwiaXNGdWxsc2NyZWVuRW5hYmxlZCIsZnVuY3Rpb24oZSl7dXQuc3R5bGUuZGlzcGxheT1lPyJibG9jayI6Im5vbmUiLHQoYXQpJiYoYXQuY29udGFpbmVyLnN0eWxlLnJpZ2h0PXV0LmNsaWVudFdpZHRoKyJweCIsYXQucmVzaXplKCkpfSl9dGhpcy5jbG9ja1RyYWNrZWREYXRhU291cmNlPXZvaWQgMCxsLnRyYWNrKHRoaXMsWyJjbG9ja1RyYWNrZWREYXRhU291cmNlIl0pLHRoaXMuX2RhdGFTb3VyY2VDaGFuZ2VkTGlzdGVuZXJzPXt9LHRoaXMuX2tub2Nrb3V0U3Vic2NyaXB0aW9ucz1bXTt2YXIgY3Q9ZShuLmF1dG9tYXRpY2FsbHlUcmFja0RhdGFTb3VyY2VDbG9ja3MsITApO3RoaXMuX2tub2Nrb3V0U3Vic2NyaXB0aW9ucy5wdXNoKFModGhpcywiY2xvY2tUcmFja2VkRGF0YVNvdXJjZSIsZnVuY3Rpb24oZSl7UChlKX0pKTt2YXIgZHQ9ZnVuY3Rpb24oZSl7VS5jbG9ja1RyYWNrZWREYXRhU291cmNlPT09ZSYmUChlKX0saHQ9ZnVuY3Rpb24oZSx0KXtjdCYmKFUuY2xvY2tUcmFja2VkRGF0YVNvdXJjZT10KTt2YXIgaT10LmVudGl0aWVzLmlkLG49ay5hZGQodC5jaGFuZ2VkRXZlbnQsZHQpO1UuX2RhdGFTb3VyY2VDaGFuZ2VkTGlzdGVuZXJzW2ldPW59LG10PWZ1bmN0aW9uKGUsdCl7dmFyIGk9VS5jbG9ja1RyYWNrZWREYXRhU291cmNlPT09dCxuPXQuZW50aXRpZXMuaWQ7aWYoVS5fZGF0YVNvdXJjZUNoYW5nZWRMaXN0ZW5lcnNbbl0oKSxVLl9kYXRhU291cmNlQ2hhbmdlZExpc3RlbmVyc1tuXT12b2lkIDAsaSl7dmFyIHI9ZS5sZW5ndGg7VS5jbG9ja1RyYWNrZWREYXRhU291cmNlPWN0JiZyPjA/ZS5nZXQoci0xKTp2b2lkIDB9fTtrLmFkZChOLmRhdGFTb3VyY2VBZGRlZCxodCksay5hZGQoTi5kYXRhU291cmNlUmVtb3ZlZCxtdCksdGhpcy5fY29udGFpbmVyPWksdGhpcy5fYm90dG9tQ29udGFpbmVyPU8sdGhpcy5fZWxlbWVudD1JLHRoaXMuX2Nlc2l1bVdpZGdldD1MLHRoaXMuX3NlbGVjdGlvbkluZGljYXRvcj1XLHRoaXMuX2luZm9Cb3g9SCx0aGlzLl9kYXRhU291cmNlQ29sbGVjdGlvbj1OLHRoaXMuX2Rlc3Ryb3lEYXRhU291cmNlQ29sbGVjdGlvbj16LHRoaXMuX2RhdGFTb3VyY2VEaXNwbGF5PUIsdGhpcy5fY2xvY2tWaWV3TW9kZWw9Vix0aGlzLl90b29sYmFyPWosdGhpcy5faG9tZUJ1dHRvbj1aLHRoaXMuX3NjZW5lTW9kZVBpY2tlcj1KLHRoaXMuX2Jhc2VMYXllclBpY2tlcj1LLHRoaXMuX2FuaW1hdGlvbj1ydCx0aGlzLl90aW1lbGluZT1hdCx0aGlzLl9mdWxsc2NyZWVuQnV0dG9uPWx0LHRoaXMuX2dlb2NvZGVyPVksdGhpcy5fZXZlbnRIZWxwZXI9ayx0aGlzLl9sYXN0V2lkdGg9MCx0aGlzLl9sYXN0SGVpZ2h0PTAsdGhpcy5fYWxsb3dEYXRhU291cmNlc1RvU3VzcGVuZEFuaW1hdGlvbj0hMCxMLnNjZW5lLnByZVJlbmRlci5hZGRFdmVudExpc3RlbmVyKGZ1bmN0aW9uKCl7QShVKX0pfTtyZXR1cm4gaShQLnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sYm90dG9tQ29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYm90dG9tQ29udGFpbmVyfX0sY2VzaXVtV2lkZ2V0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2VzaXVtV2lkZ2V0fX0sc2VsZWN0aW9uSW5kaWNhdG9yOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2VsZWN0aW9uSW5kaWNhdG9yfX0saW5mb0JveDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2luZm9Cb3h9fSxnZW9jb2Rlcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2dlb2NvZGVyfX0saG9tZUJ1dHRvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hvbWVCdXR0b259fSxzY2VuZU1vZGVQaWNrZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2VuZU1vZGVQaWNrZXJ9fSxiYXNlTGF5ZXJQaWNrZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9iYXNlTGF5ZXJQaWNrZXJ9fSxhbmltYXRpb246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hbmltYXRpb259fSx0aW1lbGluZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbWVsaW5lfX0sZnVsbHNjcmVlbkJ1dHRvbjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Z1bGxzY3JlZW5CdXR0b259fSxkYXRhU291cmNlRGlzcGxheTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGFTb3VyY2VEaXNwbGF5fX0sZGF0YVNvdXJjZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhU291cmNlQ29sbGVjdGlvbn19LGNhbnZhczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nlc2l1bVdpZGdldC5jYW52YXN9fSxjZXNpdW1Mb2dvOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2VzaXVtV2lkZ2V0LmNlc2l1bUxvZ299fSxzY2VuZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nlc2l1bVdpZGdldC5zY2VuZX19LGNsb2NrOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2VzaXVtV2lkZ2V0LmNsb2NrfX0sc2NyZWVuU3BhY2VFdmVudEhhbmRsZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jZXNpdW1XaWRnZXQuc2NyZWVuU3BhY2VFdmVudEhhbmRsZXJ9fSx0YXJnZXRGcmFtZVJhdGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jZXNpdW1XaWRnZXQudGFyZ2V0RnJhbWVSYXRlfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fY2VzaXVtV2lkZ2V0LnRhcmdldEZyYW1lUmF0ZT1lfX0sdXNlRGVmYXVsdFJlbmRlckxvb3A6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jZXNpdW1XaWRnZXQudXNlRGVmYXVsdFJlbmRlckxvb3B9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9jZXNpdW1XaWRnZXQudXNlRGVmYXVsdFJlbmRlckxvb3A9ZX19LHJlc29sdXRpb25TY2FsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Nlc2l1bVdpZGdldC5yZXNvbHV0aW9uU2NhbGV9LHNldDpmdW5jdGlvbihlKXt0aGlzLl9jZXNpdW1XaWRnZXQucmVzb2x1dGlvblNjYWxlPWV9fSxhbGxvd0RhdGFTb3VyY2VzVG9TdXNwZW5kQW5pbWF0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWxsb3dEYXRhU291cmNlc1RvU3VzcGVuZEFuaW1hdGlvbn0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2FsbG93RGF0YVNvdXJjZXNUb1N1c3BlbmRBbmltYXRpb249ZX19fSksUC5wcm90b3R5cGUuZXh0ZW5kPWZ1bmN0aW9uKGUsdCl7ZSh0aGlzLHQpfSxQLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jZXNpdW1XaWRnZXQ7ZS5yZXNpemUoKSxBKHRoaXMpfSxQLnByb3RvdHlwZS5mb3JjZVJlc2l6ZT1mdW5jdGlvbigpe3RoaXMuX2xhc3RXaWR0aD0wLHRoaXMucmVzaXplKCl9LFAucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbigpe3RoaXMuX2Nlc2l1bVdpZGdldC5yZW5kZXIoKX0sUC5wcm90b3R5cGUuaXNEZXN0cm95ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sUC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBlLGk9dGhpcy5fa25vY2tvdXRTdWJzY3JpcHRpb25zLmxlbmd0aDtmb3IoZT0wO2k+ZTtlKyspdGhpcy5fa25vY2tvdXRTdWJzY3JpcHRpb25zW2VdLmRpc3Bvc2UoKTtyZXR1cm4gdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX2VsZW1lbnQpLHRoaXMuX2VsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5fdG9vbGJhciksdGhpcy5fZXZlbnRIZWxwZXIucmVtb3ZlQWxsKCksdCh0aGlzLl9nZW9jb2RlcikmJih0aGlzLl9nZW9jb2Rlcj10aGlzLl9nZW9jb2Rlci5kZXN0cm95KCkpLHQodGhpcy5faG9tZUJ1dHRvbikmJih0aGlzLl9ob21lQnV0dG9uPXRoaXMuX2hvbWVCdXR0b24uZGVzdHJveSgpKSx0KHRoaXMuX3NjZW5lTW9kZVBpY2tlcikmJih0aGlzLl9zY2VuZU1vZGVQaWNrZXI9dGhpcy5fc2NlbmVNb2RlUGlja2VyLmRlc3Ryb3koKSksdCh0aGlzLl9iYXNlTGF5ZXJQaWNrZXIpJiYodGhpcy5fYmFzZUxheWVyUGlja2VyPXRoaXMuX2Jhc2VMYXllclBpY2tlci5kZXN0cm95KCkpLHQodGhpcy5fYW5pbWF0aW9uKSYmKHRoaXMuX2VsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5fYW5pbWF0aW9uLmNvbnRhaW5lciksdGhpcy5fYW5pbWF0aW9uPXRoaXMuX2FuaW1hdGlvbi5kZXN0cm95KCkpLHQodGhpcy5fdGltZWxpbmUpJiYodGhpcy5fdGltZWxpbmUucmVtb3ZlRXZlbnRMaXN0ZW5lcigic2V0dGltZSIseCwhMSksdGhpcy5fZWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzLl90aW1lbGluZS5jb250YWluZXIpLHRoaXMuX3RpbWVsaW5lPXRoaXMuX3RpbWVsaW5lLmRlc3Ryb3koKSksdCh0aGlzLl9mdWxsc2NyZWVuQnV0dG9uKSYmKHRoaXMuX2Z1bGxzY3JlZW5TdWJzY3JpcHRpb24uZGlzcG9zZSgpLHRoaXMuX2VsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5fZnVsbHNjcmVlbkJ1dHRvbi5jb250YWluZXIpLHRoaXMuX2Z1bGxzY3JlZW5CdXR0b249dGhpcy5fZnVsbHNjcmVlbkJ1dHRvbi5kZXN0cm95KCkpLHQodGhpcy5faW5mb0JveCkmJih0aGlzLl9lbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMuX2luZm9Cb3guY29udGFpbmVyKSx0aGlzLl9pbmZvQm94PXRoaXMuX2luZm9Cb3guZGVzdHJveSgpKSx0KHRoaXMuX3NlbGVjdGlvbkluZGljYXRvcikmJih0aGlzLl9lbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMuX3NlbGVjdGlvbkluZGljYXRvci5jb250YWluZXIpLHRoaXMuX3NlbGVjdGlvbkluZGljYXRvcj10aGlzLl9zZWxlY3Rpb25JbmRpY2F0b3IuZGVzdHJveSgpKSx0aGlzLl9jbG9ja1ZpZXdNb2RlbD10aGlzLl9jbG9ja1ZpZXdNb2RlbC5kZXN0cm95KCksdGhpcy5fZGF0YVNvdXJjZURpc3BsYXk9dGhpcy5fZGF0YVNvdXJjZURpc3BsYXkuZGVzdHJveSgpLHRoaXMuX2Nlc2l1bVdpZGdldD10aGlzLl9jZXNpdW1XaWRnZXQuZGVzdHJveSgpLHRoaXMuX2Rlc3Ryb3lEYXRhU291cmNlQ29sbGVjdGlvbiYmKHRoaXMuX2RhdGFTb3VyY2VDb2xsZWN0aW9uPXRoaXMuX2RhdGFTb3VyY2VDb2xsZWN0aW9uLmRlc3Ryb3koKSksbih0aGlzKX0sUH0pLGRlZmluZSgiU2NlbmUvRGVidWdNb2RlbE1hdHJpeFByaW1pdGl2ZSIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL0NvbG9yIiwiLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi9Db3JlL2RlZmluZWQiLCIuLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi9Db3JlL0dlb21ldHJ5SW5zdGFuY2UiLCIuLi9Db3JlL01hdHJpeDQiLCIuLi9Db3JlL1BvbHlsaW5lR2VvbWV0cnkiLCIuL1BvbHlsaW5lQ29sb3JBcHBlYXJhbmNlIiwiLi9QcmltaXRpdmUiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCx1KXsidXNlIHN0cmljdCI7dmFyIGM9ZnVuY3Rpb24oZSl7ZT1pKGUsaS5FTVBUWV9PQkpFQ1QpLHRoaXMubGVuZ3RoPWkoZS5sZW5ndGgsMWU3KSx0aGlzLl9sZW5ndGg9dm9pZCAwLHRoaXMud2lkdGg9aShlLndpZHRoLDIpLHRoaXMuX3dpZHRoPXZvaWQgMCx0aGlzLnNob3c9aShlLnNob3csITApLHRoaXMubW9kZWxNYXRyaXg9YS5jbG9uZShpKGUubW9kZWxNYXRyaXgsYS5JREVOVElUWSkpLHRoaXMuX21vZGVsTWF0cml4PW5ldyBhLHRoaXMuaWQ9ZS5pZCx0aGlzLl9pZD12b2lkIDAsdGhpcy5fcHJpbWl0aXZlPXZvaWQgMH07cmV0dXJuIGMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihpLHIsYyl7dGhpcy5zaG93JiYobih0aGlzLl9wcmltaXRpdmUpJiZhLmVxdWFscyh0aGlzLl9tb2RlbE1hdHJpeCx0aGlzLm1vZGVsTWF0cml4KSYmdGhpcy5fbGVuZ3RoPT09dGhpcy5sZW5ndGgmJnRoaXMuX3dpZHRoPT09dGhpcy53aWR0aCYmdGhpcy5faWQ9PT10aGlzLmlkfHwodGhpcy5fbW9kZWxNYXRyaXg9YS5jbG9uZSh0aGlzLm1vZGVsTWF0cml4LHRoaXMuX21vZGVsTWF0cml4KSx0aGlzLl9sZW5ndGg9dGhpcy5sZW5ndGgsdGhpcy5fd2lkdGg9dGhpcy53aWR0aCx0aGlzLl9pZD10aGlzLmlkLG4odGhpcy5fcHJpbWl0aXZlKSYmdGhpcy5fcHJpbWl0aXZlLmRlc3Ryb3koKSwwPT09dGhpcy5tb2RlbE1hdHJpeFsxMl0mJjA9PT10aGlzLm1vZGVsTWF0cml4WzEzXSYmMD09PXRoaXMubW9kZWxNYXRyaXhbMTRdJiYodGhpcy5tb2RlbE1hdHJpeFsxNF09LjAxKSx0aGlzLl9wcmltaXRpdmU9bmV3IHUoe2dlb21ldHJ5SW5zdGFuY2VzOm5ldyBvKHtnZW9tZXRyeTpzLmNyZWF0ZUdlb21ldHJ5KG5ldyBzKHtwb3NpdGlvbnM6W2UuWkVSTyxlLlVOSVRfWCxlLlpFUk8sZS5VTklUX1ksZS5aRVJPLGUuVU5JVF9aXSx3aWR0aDp0aGlzLndpZHRoLHZlcnRleEZvcm1hdDpsLlZFUlRFWF9GT1JNQVQsY29sb3JzOlt0LlJFRCx0LlJFRCx0LkdSRUVOLHQuR1JFRU4sdC5CTFVFLHQuQkxVRV0sZm9sbG93U3VyZmFjZTohMX0pKSxtb2RlbE1hdHJpeDphLm11bHRpcGx5QnlVbmlmb3JtU2NhbGUodGhpcy5tb2RlbE1hdHJpeCx0aGlzLmxlbmd0aCxuZXcgYSksaWQ6dGhpcy5pZCxwaWNrUHJpbWl0aXZlOnRoaXN9KSxhcHBlYXJhbmNlOm5ldyBsLGFzeW5jaHJvbm91czohMX0pKSx0aGlzLl9wcmltaXRpdmUudXBkYXRlKGkscixjKSl9LGMucHJvdG90eXBlLmlzRGVzdHJveWVkPWZ1bmN0aW9uKCl7cmV0dXJuITF9LGMucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJpbWl0aXZlPXRoaXMuX3ByaW1pdGl2ZSYmdGhpcy5fcHJpbWl0aXZlLmRlc3Ryb3koKSxyKHRoaXMpfSxjfSksZGVmaW5lKCJTY2VuZS9UaWxlQ29vcmRpbmF0ZXNJbWFnZXJ5UHJvdmlkZXIiLFsiLi4vQ29yZS9Db2xvciIsIi4uL0NvcmUvZGVmYXVsdFZhbHVlIiwiLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vQ29yZS9FdmVudCIsIi4uL0NvcmUvR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZSJdLGZ1bmN0aW9uKGUsdCxpLG4scil7InVzZSBzdHJpY3QiO3ZhciBvPWZ1bmN0aW9uKGkpe2k9dChpLHt9KSx0aGlzLl90aWxpbmdTY2hlbWU9dChpLnRpbGluZ1NjaGVtZSxuZXcgciksdGhpcy5fY29sb3I9dChpLmNvbG9yLGUuWUVMTE9XKSx0aGlzLl9lcnJvckV2ZW50PW5ldyBuLHRoaXMuX3RpbGVXaWR0aD10KGkudGlsZVdpZHRoLDI1NiksdGhpcy5fdGlsZUhlaWdodD10KGkudGlsZUhlaWdodCwyNTYpfTtyZXR1cm4gaShvLnByb3RvdHlwZSx7cHJveHk6e2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDB9fSx0aWxlV2lkdGg6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlV2lkdGh9fSx0aWxlSGVpZ2h0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGlsZUhlaWdodH19LG1heGltdW1MZXZlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH19LG1pbmltdW1MZXZlbDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH19LHRpbGluZ1NjaGVtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGluZ1NjaGVtZX19LHJlY3RhbmdsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbGluZ1NjaGVtZS5yZWN0YW5nbGV9fSx0aWxlRGlzY2FyZFBvbGljeTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH19LGVycm9yRXZlbnQ6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9lcnJvckV2ZW50fX0scmVhZHk6e2dldDpmdW5jdGlvbigpe3JldHVybiEwfX0sY3JlZGl0OntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfX0saGFzQWxwaGFDaGFubmVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH19fSksby5wcm90b3R5cGUuZ2V0VGlsZUNyZWRpdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwfSxvLnByb3RvdHlwZS5yZXF1ZXN0SW1hZ2U9ZnVuY3Rpb24oZSx0LGkpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpO24ud2lkdGg9MjU2LG4uaGVpZ2h0PTI1Njt2YXIgcj1uLmdldENvbnRleHQoIjJkIiksbz10aGlzLl9jb2xvci50b0Nzc0NvbG9yU3RyaW5nKCk7ci5zdHJva2VTdHlsZT1vLHIubGluZVdpZHRoPTIsci5zdHJva2VSZWN0KDEsMSwyNTUsMjU1KTt2YXIgYT0iTCIraSsiWCIrZSsiWSIrdDtyZXR1cm4gci5mb250PSJib2xkIDI1cHggQXJpYWwiLHIudGV4dEFsaWduPSJjZW50ZXIiLHIuZmlsbFN0eWxlPSJibGFjayIsci5maWxsVGV4dChhLDEyNywxMjcpLHIuZmlsbFN0eWxlPW8sci5maWxsVGV4dChhLDEyNCwxMjQpLG59LG8ucHJvdG90eXBlLnBpY2tGZWF0dXJlcz1mdW5jdGlvbigpe3JldHVybiB2b2lkIDB9LG99KSxkZWZpbmUoIldpZGdldHMvQ2VzaXVtSW5zcGVjdG9yL0Nlc2l1bUluc3BlY3RvclZpZXdNb2RlbCIsWyIuLi8uLi9Db3JlL0NvbG9yIiwiLi4vLi4vQ29yZS9kZWZpbmVkIiwiLi4vLi4vQ29yZS9kZWZpbmVQcm9wZXJ0aWVzIiwiLi4vLi4vQ29yZS9EZXZlbG9wZXJFcnJvciIsIi4uLy4uL0NvcmUvUmVjdGFuZ2xlIiwiLi4vLi4vU2NlbmUvRGVidWdNb2RlbE1hdHJpeFByaW1pdGl2ZSIsIi4uLy4uL1NjZW5lL1BlcmZvcm1hbmNlRGlzcGxheSIsIi4uLy4uL1NjZW5lL1RpbGVDb29yZGluYXRlc0ltYWdlcnlQcm92aWRlciIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi9jcmVhdGVDb21tYW5kIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGMoZSl7dmFyIGk7aWYodChlKSl7aT0iQ29tbWFuZCBTdGF0aXN0aWNzIjt2YXIgbj1lLmNvbW1hbmRzSW5GcnVzdHVtcztmb3IodmFyIHIgaW4gbilpZihuLmhhc093blByb3BlcnR5KHIpKXt2YXIgbyxhPXBhcnNlSW50KHIsMTApO2lmKDc9PT1hKW89IjEsIDIgYW5kIDMiO2Vsc2V7Zm9yKHZhciBzPVtdLGw9MjtsPj0wO2wtLSl7dmFyIHU9TWF0aC5wb3coMixsKTthPj11JiYocy5wdXNoKGwrMSksYS09dSl9bz1zLnJldmVyc2UoKS5qb2luKCIgYW5kICIpfWkrPSI8YnI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7IituW3JdKyIgaW4gZnJ1c3R1bSAiK299aSs9Ijxicj5Ub3RhbDogIitlLnRvdGFsQ29tbWFuZHN9cmV0dXJuIGl9dmFyIGQ9bmV3IGUoLjE1LC4xNSwuMTUsLjc1KSxoPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2guY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXBlcmZvcm1hbmNlRGlzcGxheSI7dmFyIG09ZnVuY3Rpb24oZSl7aWYoIXQoZSkpdGhyb3cgbmV3IG4oInNjZW5lIGlzIHJlcXVpcmVkIik7dmFyIGk9dGhpcyxjPWUuY2FudmFzO2MucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChoKSx0aGlzLl9zY2VuZT1lLHRoaXMuX2NhbnZhcz1jLHRoaXMuX3ByaW1pdGl2ZT12b2lkIDAsdGhpcy5fdGlsZT12b2lkIDAsdGhpcy5fbW9kZWxNYXRyaXhQcmltaXRpdmU9dm9pZCAwLHRoaXMuX3BlcmZvcm1hbmNlRGlzcGxheT12b2lkIDA7dmFyIG09dGhpcy5fc2NlbmUuZ2xvYmU7bS5kZXB0aFRlc3RBZ2FpbnN0VGVycmFpbj0hMCx0aGlzLmZydXN0dW1zPSExLHRoaXMucGVyZm9ybWFuY2U9ITEsdGhpcy5wcmltaXRpdmVCb3VuZGluZ1NwaGVyZT0hMSx0aGlzLnByaW1pdGl2ZVJlZmVyZW5jZUZyYW1lPSExLHRoaXMuZmlsdGVyUHJpbWl0aXZlPSExLHRoaXMudGlsZUJvdW5kaW5nU3BoZXJlPSExLHRoaXMuZmlsdGVyVGlsZT0hMSx0aGlzLndpcmVmcmFtZT0hMSx0aGlzLnN1c3BlbmRVcGRhdGVzPSExLHRoaXMudGlsZUNvb3JkaW5hdGVzPSExLHRoaXMuZnJ1c3R1bVN0YXRpc3RpY1RleHQ9IiIsdGhpcy50aWxlVGV4dD0iIix0aGlzLmhhc1BpY2tlZFByaW1pdGl2ZT0hMSx0aGlzLmhhc1BpY2tlZFRpbGU9ITEsdGhpcy5waWNrUGltaXRpdmVBY3RpdmU9ITEsdGhpcy5waWNrVGlsZUFjdGl2ZT0hMSx0aGlzLmRyb3BEb3duVmlzaWJsZT0hMCx0aGlzLmdlbmVyYWxWaXNpYmxlPSEwLHRoaXMucHJpbWl0aXZlc1Zpc2libGU9ITEsdGhpcy50ZXJyYWluVmlzaWJsZT0hMSx0aGlzLmdlbmVyYWxTd2l0Y2hUZXh0PSItIix0aGlzLnByaW1pdGl2ZXNTd2l0Y2hUZXh0PSIrIix0aGlzLnRlcnJhaW5Td2l0Y2hUZXh0PSIrIixsLnRyYWNrKHRoaXMsWyJmaWx0ZXJUaWxlIiwic3VzcGVuZFVwZGF0ZXMiLCJkcm9wRG93blZpc2libGUiLCJmcnVzdHVtcyIsImZydXN0dW1TdGF0aXN0aWNUZXh0IiwicGlja1RpbGVBY3RpdmUiLCJwaWNrUHJpbWl0aXZlQWN0aXZlIiwiaGFzUGlja2VkUHJpbWl0aXZlIiwiaGFzUGlja2VkVGlsZSIsInRpbGVUZXh0IiwiZ2VuZXJhbFZpc2libGUiLCJnZW5lcmFsU3dpdGNoVGV4dCIsInByaW1pdGl2ZXNWaXNpYmxlIiwicHJpbWl0aXZlc1N3aXRjaFRleHQiLCJ0ZXJyYWluVmlzaWJsZSIsInRlcnJhaW5Td2l0Y2hUZXh0Il0pLHRoaXMuX3RvZ2dsZURyb3BEb3duPXUoZnVuY3Rpb24oKXtpLmRyb3BEb3duVmlzaWJsZT0haS5kcm9wRG93blZpc2libGV9KSx0aGlzLl90b2dnbGVHZW5lcmFsPXUoZnVuY3Rpb24oKXtpLmdlbmVyYWxWaXNpYmxlPSFpLmdlbmVyYWxWaXNpYmxlLGkuZ2VuZXJhbFN3aXRjaFRleHQ9aS5nZW5lcmFsVmlzaWJsZT8iLSI6IisifSksdGhpcy5fdG9nZ2xlUHJpbWl0aXZlcz11KGZ1bmN0aW9uKCl7aS5wcmltaXRpdmVzVmlzaWJsZT0haS5wcmltaXRpdmVzVmlzaWJsZSxpLnByaW1pdGl2ZXNTd2l0Y2hUZXh0PWkucHJpbWl0aXZlc1Zpc2libGU/Ii0iOiIrIn0pLHRoaXMuX3RvZ2dsZVRlcnJhaW49dShmdW5jdGlvbigpe2kudGVycmFpblZpc2libGU9IWkudGVycmFpblZpc2libGUsaS50ZXJyYWluU3dpdGNoVGV4dD1pLnRlcnJhaW5WaXNpYmxlPyItIjoiKyJ9KSx0aGlzLl9zaG93RnJ1c3R1bXM9dShmdW5jdGlvbigpe3JldHVybiBpLl9zY2VuZS5kZWJ1Z1Nob3dGcnVzdHVtcz1pLmZydXN0dW1zPyEwOiExLCEwfSksdGhpcy5fc2hvd1BlcmZvcm1hbmNlPXUoZnVuY3Rpb24oKXtyZXR1cm4gaS5wZXJmb3JtYW5jZT9pLl9wZXJmb3JtYW5jZURpc3BsYXk9bmV3IGEoe2NvbnRhaW5lcjpoLGJhY2tncm91bmRDb2xvcjpkLGZvbnQ6IjEycHggYXJpYWwsc2Fucy1zZXJpZiJ9KTpoLmlubmVySFRNTD0iIiwhMH0pLHRoaXMuX3Nob3dQcmltaXRpdmVCb3VuZGluZ1NwaGVyZT11KGZ1bmN0aW9uKCl7cmV0dXJuIGkuX3ByaW1pdGl2ZS5kZWJ1Z1Nob3dCb3VuZGluZ1ZvbHVtZT1pLnByaW1pdGl2ZUJvdW5kaW5nU3BoZXJlLCEwfSksdGhpcy5fc2hvd1ByaW1pdGl2ZVJlZmVyZW5jZUZyYW1lPXUoZnVuY3Rpb24oKXtpZihpLnByaW1pdGl2ZVJlZmVyZW5jZUZyYW1lKXt2YXIgZT1pLl9wcmltaXRpdmUubW9kZWxNYXRyaXg7aS5fbW9kZWxNYXRyaXhQcmltaXRpdmU9bmV3IG8oe21vZGVsTWF0cml4OmV9KSxpLl9zY2VuZS5wcmltaXRpdmVzLmFkZChpLl9tb2RlbE1hdHJpeFByaW1pdGl2ZSl9ZWxzZSB0KGkuX21vZGVsTWF0cml4UHJpbWl0aXZlKSYmKGkuX3NjZW5lLnByaW1pdGl2ZXMucmVtb3ZlKGkuX21vZGVsTWF0cml4UHJpbWl0aXZlKSxpLl9tb2RlbE1hdHJpeFByaW1pdGl2ZT12b2lkIDApO3JldHVybiEwfSksdGhpcy5fZG9GaWx0ZXJQcmltaXRpdmU9dShmdW5jdGlvbigpe3JldHVybiBpLl9zY2VuZS5kZWJ1Z0NvbW1hbmRGaWx0ZXI9aS5maWx0ZXJQcmltaXRpdmU/ZnVuY3Rpb24oZSl7cmV0dXJuIHQoaS5fbW9kZWxNYXRyaXhQcmltaXRpdmUpJiZlLm93bmVyPT09aS5fbW9kZWxNYXRyaXhQcmltaXRpdmUuX3ByaW1pdGl2ZT8hMDp0KGkuX3ByaW1pdGl2ZSk/ZS5vd25lcj09PWkuX3ByaW1pdGl2ZXx8ZS5vd25lcj09PWkuX3ByaW1pdGl2ZS5fYmlsbGJvYXJkQ29sbGVjdGlvbjohMX06dm9pZCAwLCEwfSksdGhpcy5fc2hvd1dpcmVmcmFtZT11KGZ1bmN0aW9uKCl7cmV0dXJuIG0uX3N1cmZhY2UudGlsZVByb3ZpZGVyLl9kZWJ1Zy53aXJlZnJhbWU9aS53aXJlZnJhbWUsITB9KSx0aGlzLl9kb1N1c3BlbmRVcGRhdGVzPXUoZnVuY3Rpb24oKXtyZXR1cm4gbS5fc3VyZmFjZS5fZGVidWcuc3VzcGVuZExvZFVwZGF0ZT1pLnN1c3BlbmRVcGRhdGVzLGkuc3VzcGVuZFVwZGF0ZXN8fChpLmZpbHRlclRpbGU9ITEpLCEwfSk7dmFyIGY7dGhpcy5fc2hvd1RpbGVDb29yZGluYXRlcz11KGZ1bmN0aW9uKCl7cmV0dXJuIGkudGlsZUNvb3JkaW5hdGVzJiYhdChmKT9mPWUuaW1hZ2VyeUxheWVycy5hZGRJbWFnZXJ5UHJvdmlkZXIobmV3IHMoe3RpbGluZ1NjaGVtZTplLnRlcnJhaW5Qcm92aWRlci50aWxpbmdTY2hlbWV9KSk6IWkudGlsZUNvb3JkaW5hdGVzJiZ0KGYpJiYoZS5pbWFnZXJ5TGF5ZXJzLnJlbW92ZShmKSxmPXZvaWQgMCksITB9KSx0aGlzLl9zaG93VGlsZUJvdW5kaW5nU3BoZXJlPXUoZnVuY3Rpb24oKXtyZXR1cm4gbS5fc3VyZmFjZS50aWxlUHJvdmlkZXIuX2RlYnVnLmJvdW5kaW5nU3BoZXJlVGlsZT1pLnRpbGVCb3VuZGluZ1NwaGVyZT9pLl90aWxlOnZvaWQgMCwhMH0pLHRoaXMuX2RvRmlsdGVyVGlsZT11KGZ1bmN0aW9uKCl7cmV0dXJuIGkuZmlsdGVyVGlsZT8oaS5zdXNwZW5kVXBkYXRlcz0hMCxpLmRvU3VzcGVuZFVwZGF0ZXMoKSxtLl9zdXJmYWNlLl90aWxlc1RvUmVuZGVyPVtdLHQoaS5fdGlsZSkmJm0uX3N1cmZhY2UuX3RpbGVzVG9SZW5kZXIucHVzaChpLl90aWxlKSk6KGkuc3VzcGVuZFVwZGF0ZXM9ITEsaS5kb1N1c3BlbmRVcGRhdGVzKCkpLCEwfSk7dmFyIHA9ZnVuY3Rpb24oZSl7aS5fY2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIscCwhMSksaS5waWNrUHJpbWl0aXZlQWN0aXZlPSExO3ZhciBuPWkuX3NjZW5lLnBpY2soe3g6ZS5jbGllbnRYLHk6ZS5jbGllbnRZfSk7dChuKSYmKGkucHJpbWl0aXZlPXQobi5jb2xsZWN0aW9uKT9uLmNvbGxlY3Rpb246bi5wcmltaXRpdmUpfTt0aGlzLl9waWNrUHJpbWl0aXZlPXUoZnVuY3Rpb24oKXtpLnBpY2tQcmltaXRpdmVBY3RpdmU9IWkucGlja1ByaW1pdGl2ZUFjdGl2ZSxpLnBpY2tQcmltaXRpdmVBY3RpdmU/aS5fY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIscCwhMSk6aS5fY2FudmFzLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIscCwhMSl9KTt2YXIgdj1mdW5jdGlvbihlKXt2YXIgbixvPW0uZWxsaXBzb2lkLGE9aS5fc2NlbmUuY2FtZXJhLnBpY2tFbGxpcHNvaWQoe3g6ZS5jbGllbnRYLHk6ZS5jbGllbnRZfSxvKTtpZih0KGEpKWZvcih2YXIgcz1vLmNhcnRlc2lhblRvQ2FydG9ncmFwaGljKGEpLGw9bS5fc3VyZmFjZS50aWxlUHJvdmlkZXIuX3RpbGVzVG9SZW5kZXJCeVRleHR1cmVDb3VudCx1PTA7IW4mJnU8bC5sZW5ndGg7Kyt1KXt2YXIgYz1sW3VdO2lmKHQoYykpZm9yKHZhciBkPTA7IW4mJmQ8Yy5sZW5ndGg7KytkKXt2YXIgaD1jW2RdO3IuY29udGFpbnMoaC5yZWN0YW5nbGUscykmJihuPWgpfX1pLnRpbGU9bixpLl9jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix2LCExKSxpLnBpY2tUaWxlQWN0aXZlPSExfTt0aGlzLl9waWNrVGlsZT11KGZ1bmN0aW9uKCl7aS5waWNrVGlsZUFjdGl2ZT0haS5waWNrVGlsZUFjdGl2ZSxpLnBpY2tUaWxlQWN0aXZlP2kuX2NhbnZhcy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHYsITEpOmkuX2NhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHYsITEpfSl9O3JldHVybiBpKG0ucHJvdG90eXBlLHtzY2VuZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjZW5lfX0sdG9nZ2xlRHJvcERvd246e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90b2dnbGVEcm9wRG93bn19LHNob3dGcnVzdHVtczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3dGcnVzdHVtc319LHNob3dQZXJmb3JtYW5jZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3dQZXJmb3JtYW5jZX19LHNob3dQcmltaXRpdmVCb3VuZGluZ1NwaGVyZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3dQcmltaXRpdmVCb3VuZGluZ1NwaGVyZX19LHNob3dQcmltaXRpdmVSZWZlcmVuY2VGcmFtZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3dQcmltaXRpdmVSZWZlcmVuY2VGcmFtZX19LGRvRmlsdGVyUHJpbWl0aXZlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZG9GaWx0ZXJQcmltaXRpdmV9fSxzaG93V2lyZWZyYW1lOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd1dpcmVmcmFtZX19LGRvU3VzcGVuZFVwZGF0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kb1N1c3BlbmRVcGRhdGVzfX0sc2hvd1RpbGVDb29yZGluYXRlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nob3dUaWxlQ29vcmRpbmF0ZXN9fSxzaG93VGlsZUJvdW5kaW5nU3BoZXJlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hvd1RpbGVCb3VuZGluZ1NwaGVyZX19LGRvRmlsdGVyVGlsZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RvRmlsdGVyVGlsZX19LHRvZ2dsZUdlbmVyYWw6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90b2dnbGVHZW5lcmFsfX0sdG9nZ2xlUHJpbWl0aXZlczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RvZ2dsZVByaW1pdGl2ZXN9fSx0b2dnbGVUZXJyYWluOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdG9nZ2xlVGVycmFpbn19LHBpY2tQcmltaXRpdmU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waWNrUHJpbWl0aXZlfX0scGlja1RpbGU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9waWNrVGlsZX19LHNlbGVjdFBhcmVudDp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdShmdW5jdGlvbigpe2UudGlsZT1lLnRpbGUucGFyZW50fSl9fSxzZWxlY3ROVzp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdShmdW5jdGlvbigpe2UudGlsZT1lLnRpbGUuY2hpbGRyZW5bMF19KX19LHNlbGVjdE5FOntnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiB1KGZ1bmN0aW9uKCl7ZS50aWxlPWUudGlsZS5jaGlsZHJlblsxXX0pfX0sc2VsZWN0U1c6e2dldDpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIHUoZnVuY3Rpb24oKXtlLnRpbGU9ZS50aWxlLmNoaWxkcmVuWzJdfSl9fSxzZWxlY3RTRTp7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdShmdW5jdGlvbigpe2UudGlsZT1lLnRpbGUuY2hpbGRyZW5bM119KX19LHByaW1pdGl2ZTp7c2V0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX3ByaW1pdGl2ZTtlIT09aSYmKHRoaXMuaGFzUGlja2VkUHJpbWl0aXZlPSEwLHQoaSkmJihpLmRlYnVnU2hvd0JvdW5kaW5nVm9sdW1lPSExKSx0aGlzLl9zY2VuZS5kZWJ1Z0NvbW1hbmRGaWx0ZXI9dm9pZCAwLHQodGhpcy5fbW9kZWxNYXRyaXhQcmltaXRpdmUpJiYodGhpcy5fc2NlbmUucHJpbWl0aXZlcy5yZW1vdmUodGhpcy5fbW9kZWxNYXRyaXhQcmltaXRpdmUpLHRoaXMuX21vZGVsTWF0cml4UHJpbWl0aXZlPXZvaWQgMCksdGhpcy5fcHJpbWl0aXZlPWUsZS5zaG93PSExLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLnNob3c9ITB9LDUwKSx0aGlzLnNob3dQcmltaXRpdmVCb3VuZGluZ1NwaGVyZSgpLHRoaXMuc2hvd1ByaW1pdGl2ZVJlZmVyZW5jZUZyYW1lKCksdGhpcy5kb0ZpbHRlclByaW1pdGl2ZSgpKX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ByaW1pdGl2ZX19LHRpbGU6e3NldDpmdW5jdGlvbihlKXtpZih0KGUpKXt0aGlzLmhhc1BpY2tlZFRpbGU9ITA7dmFyIGk9dGhpcy5fdGlsZTtlIT09aSYmKHRoaXMudGlsZVRleHQ9Ikw6ICIrZS5sZXZlbCsiIFg6ICIrZS54KyIgWTogIitlLnksdGhpcy50aWxlVGV4dCs9Ijxicj5TVyBjb3JuZXI6ICIrZS5yZWN0YW5nbGUud2VzdCsiLCAiK2UucmVjdGFuZ2xlLnNvdXRoLHRoaXMudGlsZVRleHQrPSI8YnI+TkUgY29ybmVyOiAiK2UucmVjdGFuZ2xlLmVhc3QrIiwgIitlLnJlY3RhbmdsZS5ub3J0aCx0aGlzLnRpbGVUZXh0Kz0iPGJyPk1pbjogIitlLmRhdGEubWluaW11bUhlaWdodCsiIE1heDogIitlLmRhdGEubWF4aW11bUhlaWdodCksdGhpcy5fdGlsZT1lLHRoaXMuc2hvd1RpbGVCb3VuZGluZ1NwaGVyZSgpLHRoaXMuZG9GaWx0ZXJUaWxlKCl9ZWxzZSB0aGlzLmhhc1BpY2tlZFRpbGU9ITEsdGhpcy5fdGlsZT12b2lkIDB9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWxlfX0sdXBkYXRlOntnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBmdW5jdGlvbigpe2UuZnJ1c3R1bXMmJihlLmZydXN0dW1TdGF0aXN0aWNUZXh0PWMoZS5fc2NlbmUuZGVidWdGcnVzdHVtU3RhdGlzdGljcykpLGUucGVyZm9ybWFuY2UmJmUuX3BlcmZvcm1hbmNlRGlzcGxheS51cGRhdGUoKSxlLnByaW1pdGl2ZVJlZmVyZW5jZUZyYW1lJiYoZS5fbW9kZWxNYXRyaXhQcmltaXRpdmUubW9kZWxNYXRyaXg9ZS5fcHJpbWl0aXZlLm1vZGVsTWF0cml4KX19fX0pLG19KSxkZWZpbmUoIldpZGdldHMvQ2VzaXVtSW5zcGVjdG9yL0Nlc2l1bUluc3BlY3RvciIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL2Rlc3Ryb3lPYmplY3QiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vVGhpcmRQYXJ0eS9rbm9ja291dCIsIi4uL2dldEVsZW1lbnQiLCIuL0Nlc2l1bUluc3BlY3RvclZpZXdNb2RlbCJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEpeyJ1c2Ugc3RyaWN0IjsKdmFyIHM9ZnVuY3Rpb24odCxpKXtpZighZSh0KSl0aHJvdyBuZXcgbigiY29udGFpbmVyIGlzIHJlcXVpcmVkLiIpO2lmKCFlKGkpKXRocm93IG5ldyBuKCJzY2VuZSBpcyByZXF1aXJlZC4iKTt0PW8odCk7dmFyIHM9bmV3IGEoaSk7dGhpcy5fdmlld01vZGVsPXMsdGhpcy5fY29udGFpbmVyPXQ7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dGhpcy5fZWxlbWVudD1sO3ZhciB1PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3UudGV4dENvbnRlbnQ9IkNlc2l1bSBJbnNwZWN0b3IiLHUuY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLWJ1dHRvbiIsdS5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNsaWNrOiB0b2dnbGVEcm9wRG93biIpLGwuYXBwZW5kQ2hpbGQodSksbC5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3IiLGwuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsgImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItdmlzaWJsZSIgOiBkcm9wRG93blZpc2libGUsICJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLWhpZGRlbiIgOiAhZHJvcERvd25WaXNpYmxlIH0nKSx0LmFwcGVuZENoaWxkKHRoaXMuX2VsZW1lbnQpO3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RoaXMuX3BhbmVsPWMsYy5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItZHJvcERvd24iLGwuYXBwZW5kQ2hpbGQoYyk7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7ZC5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3Itc2VjdGlvbkhlYWRlciI7dmFyIGg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpO2guY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXRvZ2dsZVN3aXRjaCIsaC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNsaWNrOiB0b2dnbGVHZW5lcmFsLCB0ZXh0OiBnZW5lcmFsU3dpdGNoVGV4dCIpLGQuYXBwZW5kQ2hpbGQoaCksZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiR2VuZXJhbCIpKSxjLmFwcGVuZENoaWxkKGQpO3ZhciBtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO20uY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXNlY3Rpb24iLG0uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsiY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1zaG93IiA6IGdlbmVyYWxWaXNpYmxlLCAiY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1oaWRlIiA6ICFnZW5lcmFsVmlzaWJsZX0nKSxjLmFwcGVuZENoaWxkKG0pO3ZhciBmPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO20uYXBwZW5kQ2hpbGQoZik7dmFyIHA9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7cC5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItZnJ1c3R1bVN0YXRzIixwLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3Itc2hvdyIgOiBmcnVzdHVtcywgImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItaGlkZSIgOiAhZnJ1c3R1bXN9LCBodG1sOiBmcnVzdHVtU3RhdGlzdGljVGV4dCcpO3ZhciB2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7di50eXBlPSJjaGVja2JveCIsdi5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNoZWNrZWQ6IGZydXN0dW1zLCBjbGljazogc2hvd0ZydXN0dW1zIiksZi5hcHBlbmRDaGlsZCh2KSxmLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJTaG93IEZydXN0dW1zIikpLGYuYXBwZW5kQ2hpbGQocCk7dmFyIGc9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7bS5hcHBlbmRDaGlsZChnKTt2YXIgXz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO18udHlwZT0iY2hlY2tib3giLF8uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjaGVja2VkOiBwZXJmb3JtYW5jZSwgY2xpY2s6IHNob3dQZXJmb3JtYW5jZSIpLGcuYXBwZW5kQ2hpbGQoXyksZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiUGVyZm9ybWFuY2UgRGlzcGxheSIpKTt2YXIgeT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt5LmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1zZWN0aW9uSGVhZGVyIixoPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKSxoLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci10b2dnbGVTd2l0Y2giLGguc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjbGljazogdG9nZ2xlUHJpbWl0aXZlcywgdGV4dDogcHJpbWl0aXZlc1N3aXRjaFRleHQiKSx5LmFwcGVuZENoaWxkKGgpLHkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlByaW1pdGl2ZXMiKSksYy5hcHBlbmRDaGlsZCh5KTt2YXIgQz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtDLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1zZWN0aW9uIixDLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3Itc2hvdyIgOiBwcmltaXRpdmVzVmlzaWJsZSwgImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItaGlkZSIgOiAhcHJpbWl0aXZlc1Zpc2libGV9JyksYy5hcHBlbmRDaGlsZChDKTt2YXIgdz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt3LmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1waWNrU2VjdGlvbiIsQy5hcHBlbmRDaGlsZCh3KTt2YXIgRT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO0UudHlwZT0iYnV0dG9uIixFLnZhbHVlPSJQaWNrIGEgcHJpbWl0aXZlIixFLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1waWNrQnV0dG9uIixFLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItcGlja0J1dHRvbkhpZ2hsaWdodCIgOiBwaWNrUHJpbWl0aXZlQWN0aXZlfSwgY2xpY2s6IHBpY2tQcmltaXRpdmUnKTt2YXIgYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtiLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1jZW50ZXIiLGIuYXBwZW5kQ2hpbGQoRSksdy5hcHBlbmRDaGlsZChiKTt2YXIgUz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTt3LmFwcGVuZENoaWxkKFMpO3ZhciBUPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7VC50eXBlPSJjaGVja2JveCIsVC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNoZWNrZWQ6IHByaW1pdGl2ZUJvdW5kaW5nU3BoZXJlLCBjbGljazogc2hvd1ByaW1pdGl2ZUJvdW5kaW5nU3BoZXJlLCBlbmFibGU6IGhhc1BpY2tlZFByaW1pdGl2ZSIpLFMuYXBwZW5kQ2hpbGQoVCksUy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiU2hvdyBib3VuZGluZyBzcGhlcmUiKSk7dmFyIHg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dy5hcHBlbmRDaGlsZCh4KTt2YXIgQT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO0EudHlwZT0iY2hlY2tib3giLEEuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjaGVja2VkOiBwcmltaXRpdmVSZWZlcmVuY2VGcmFtZSwgY2xpY2s6IHNob3dQcmltaXRpdmVSZWZlcmVuY2VGcmFtZSwgZW5hYmxlOiBoYXNQaWNrZWRQcmltaXRpdmUiKSx4LmFwcGVuZENoaWxkKEEpLHguYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlNob3cgcmVmZXJlbmNlIGZyYW1lIikpO3ZhciBQPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3RoaXMuX3ByaW1pdGl2ZU9ubHk9UCx3LmFwcGVuZENoaWxkKFApO3ZhciBNPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7TS50eXBlPSJjaGVja2JveCIsTS5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNoZWNrZWQ6IGZpbHRlclByaW1pdGl2ZSwgY2xpY2s6IGRvRmlsdGVyUHJpbWl0aXZlLCBlbmFibGU6IGhhc1BpY2tlZFByaW1pdGl2ZSIpLFAuYXBwZW5kQ2hpbGQoTSksUC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiU2hvdyBvbmx5IHNlbGVjdGVkIikpO3ZhciBJPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0kuY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXNlY3Rpb25IZWFkZXIiLGg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpLGguY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXRvZ2dsZVN3aXRjaCIsaC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNsaWNrOiB0b2dnbGVUZXJyYWluLCB0ZXh0OiB0ZXJyYWluU3dpdGNoVGV4dCIpLEkuYXBwZW5kQ2hpbGQoaCksSS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiVGVycmFpbiIpKSxjLmFwcGVuZENoaWxkKEkpO3ZhciBEPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0QuY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXNlY3Rpb24iLEQuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsiY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1zaG93IiA6IHRlcnJhaW5WaXNpYmxlLCAiY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1oaWRlIiA6ICF0ZXJyYWluVmlzaWJsZX0nKSxjLmFwcGVuZENoaWxkKEQpO3ZhciBPPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO08uY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXBpY2tTZWN0aW9uIixELmFwcGVuZENoaWxkKE8pO3ZhciBSPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7Ui50eXBlPSJidXR0b24iLFIudmFsdWU9IlBpY2sgYSB0aWxlIixSLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1waWNrQnV0dG9uIixSLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwnY3NzOiB7ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItcGlja0J1dHRvbkhpZ2hsaWdodCIgOiBwaWNrVGlsZUFjdGl2ZX0sIGNsaWNrOiBwaWNrVGlsZScpLGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksYi5hcHBlbmRDaGlsZChSKSxiLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1jZW50ZXIiLE8uYXBwZW5kQ2hpbGQoYik7dmFyIEw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7Ty5hcHBlbmRDaGlsZChMKTt2YXIgTj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO04udHlwZT0iYnV0dG9uIixOLnZhbHVlPSJQYXJlbnQiLE4uY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXBpY2tCdXR0b24iLE4uc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjbGljazogc2VsZWN0UGFyZW50Iik7dmFyIHo9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTt6LnR5cGU9ImJ1dHRvbiIsei52YWx1ZT0iTlciLHouY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXBpY2tCdXR0b24iLHouc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjbGljazogc2VsZWN0TlciKTt2YXIgQj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO0IudHlwZT0iYnV0dG9uIixCLnZhbHVlPSJORSIsQi5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItcGlja0J1dHRvbiIsQi5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNsaWNrOiBzZWxlY3RORSIpO3ZhciBGPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7Ri50eXBlPSJidXR0b24iLEYudmFsdWU9IlNXIixGLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1waWNrQnV0dG9uIixGLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiY2xpY2s6IHNlbGVjdFNXIik7dmFyIFY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtWLnR5cGU9ImJ1dHRvbiIsVi52YWx1ZT0iU0UiLFYuY2xhc3NOYW1lPSJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLXBpY2tCdXR0b24iLFYuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjbGljazogc2VsZWN0U0UiKTt2YXIgaz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtrLmNsYXNzTmFtZT0iY2VzaXVtLWNlc2l1bUluc3BlY3Rvci10aWxlVGV4dCIsTC5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItZnJ1c3R1bVN0YXRzIixMLmFwcGVuZENoaWxkKGspLEwuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCdjc3M6IHsiY2VzaXVtLWNlc2l1bUluc3BlY3Rvci1zaG93IiA6IGhhc1BpY2tlZFRpbGUsICJjZXNpdW0tY2VzaXVtSW5zcGVjdG9yLWhpZGUiIDogIWhhc1BpY2tlZFRpbGV9Jyksay5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImh0bWw6IHRpbGVUZXh0Iik7dmFyIFU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7VS5jbGFzc05hbWU9ImNlc2l1bS1jZXNpdW1JbnNwZWN0b3ItcmVsYXRpdmVUZXh0IixVLnRleHRDb250ZW50PSJTZWxlY3QgcmVsYXRpdmU6IixMLmFwcGVuZENoaWxkKFUpO3ZhciBXPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRhYmxlIiksRz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ciIpLEg9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidHIiKSxxPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRkIik7cS5hcHBlbmRDaGlsZChOKTt2YXIgaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZCIpO2ouYXBwZW5kQ2hpbGQoeik7dmFyIFk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGQiKTtZLmFwcGVuZENoaWxkKEIpLEcuYXBwZW5kQ2hpbGQocSksRy5hcHBlbmRDaGlsZChqKSxHLmFwcGVuZENoaWxkKFkpO3ZhciBYPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRkIiksWj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZCIpO1ouYXBwZW5kQ2hpbGQoRik7dmFyIEo9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGQiKTtKLmFwcGVuZENoaWxkKFYpLEguYXBwZW5kQ2hpbGQoWCksSC5hcHBlbmRDaGlsZChaKSxILmFwcGVuZENoaWxkKEopLFcuYXBwZW5kQ2hpbGQoRyksVy5hcHBlbmRDaGlsZChIKSxMLmFwcGVuZENoaWxkKFcpO3ZhciBLPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO08uYXBwZW5kQ2hpbGQoSyk7dmFyIFE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtRLnR5cGU9ImNoZWNrYm94IixRLnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiY2hlY2tlZDogdGlsZUJvdW5kaW5nU3BoZXJlLCBlbmFibGU6IGhhc1BpY2tlZFRpbGUsIGNsaWNrOiBzaG93VGlsZUJvdW5kaW5nU3BoZXJlIiksSy5hcHBlbmRDaGlsZChRKSxLLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJTaG93IGJvdW5kaW5nIHNwaGVyZSIpKTt2YXIgJD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtPLmFwcGVuZENoaWxkKCQpO3ZhciBldD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpO2V0LnR5cGU9ImNoZWNrYm94IixldC5zZXRBdHRyaWJ1dGUoImRhdGEtYmluZCIsImNoZWNrZWQ6IGZpbHRlclRpbGUsIGVuYWJsZTogaGFzUGlja2VkVGlsZSwgY2xpY2s6IGRvRmlsdGVyVGlsZSIpLCQuYXBwZW5kQ2hpbGQoZXQpLCQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlNob3cgb25seSBzZWxlY3RlZCIpKTt2YXIgdHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7RC5hcHBlbmRDaGlsZCh0dCk7dmFyIGl0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7aXQudHlwZT0iY2hlY2tib3giLGl0LnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiY2hlY2tlZDogd2lyZWZyYW1lLCBjbGljazogc2hvd1dpcmVmcmFtZSIpLHR0LmFwcGVuZENoaWxkKGl0KSx0dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiV2lyZWZyYW1lIikpO3ZhciBudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtELmFwcGVuZENoaWxkKG50KTt2YXIgcnQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtydC50eXBlPSJjaGVja2JveCIscnQuc2V0QXR0cmlidXRlKCJkYXRhLWJpbmQiLCJjaGVja2VkOiBzdXNwZW5kVXBkYXRlcywgY2xpY2s6IGRvU3VzcGVuZFVwZGF0ZXMiKSxudC5hcHBlbmRDaGlsZChydCksbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlN1c3BlbmQgTE9EIHVwZGF0ZSIpKTt2YXIgb3Q9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7RC5hcHBlbmRDaGlsZChvdCk7dmFyIGF0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7YXQudHlwZT0iY2hlY2tib3giLGF0LnNldEF0dHJpYnV0ZSgiZGF0YS1iaW5kIiwiY2hlY2tlZDogdGlsZUNvb3JkaW5hdGVzLCBjbGljazogc2hvd1RpbGVDb29yZGluYXRlcyIpLG90LmFwcGVuZENoaWxkKGF0KSxvdC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiU2hvdyB0aWxlIGNvb3JkaW5hdGVzIikpLHIuYXBwbHlCaW5kaW5ncyhzLHRoaXMuX2VsZW1lbnQpfTtyZXR1cm4gdChzLnByb3RvdHlwZSx7Y29udGFpbmVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGFpbmVyfX0sdmlld01vZGVsOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmlld01vZGVsfX19KSxzLnByb3RvdHlwZS5pc0Rlc3Ryb3llZD1mdW5jdGlvbigpe3JldHVybiExfSxzLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIHIuY2xlYW5Ob2RlKHRoaXMuX2VsZW1lbnQpLHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLl9lbGVtZW50KSxpKHRoaXMpfSxzfSksZGVmaW5lKCJXaWRnZXRzL1ZpZXdlci92aWV3ZXJDZXNpdW1JbnNwZWN0b3JNaXhpbiIsWyIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vQ2VzaXVtSW5zcGVjdG9yL0Nlc2l1bUluc3BlY3RvciJdLGZ1bmN0aW9uKGUsdCxpLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgcj1mdW5jdGlvbihyKXtpZighZShyKSl0aHJvdyBuZXcgaSgidmlld2VyIGlzIHJlcXVpcmVkLiIpO3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO28uY2xhc3NOYW1lPSJjZXNpdW0tdmlld2VyLWNlc2l1bUluc3BlY3RvckNvbnRhaW5lciIsci5jb250YWluZXIuYXBwZW5kQ2hpbGQobyk7dmFyIGE9bmV3IG4obyxyLnNjZW5lKTt0KHIse2Nlc2l1bUluc3BlY3Rvcjp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGF9fX0pLHIuc2NlbmUucG9zdFJlbmRlci5hZGRFdmVudExpc3RlbmVyKGZ1bmN0aW9uKCl7ci5jZXNpdW1JbnNwZWN0b3Iudmlld01vZGVsLnVwZGF0ZSgpfSl9O3JldHVybiByfSksZGVmaW5lKCJDb3JlL3dyYXBGdW5jdGlvbiIsWyIuL0RldmVsb3BlckVycm9yIl0sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIGU9ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBmdW5jdGlvbigpe2kuYXBwbHkoZSxhcmd1bWVudHMpLHQuYXBwbHkoZSxhcmd1bWVudHMpfX07cmV0dXJuIGV9KSxkZWZpbmUoIldpZGdldHMvVmlld2VyL3ZpZXdlckRyYWdEcm9wTWl4aW4iLFsiLi4vLi4vQ29yZS9kZWZhdWx0VmFsdWUiLCIuLi8uLi9Db3JlL2RlZmluZWQiLCIuLi8uLi9Db3JlL2RlZmluZVByb3BlcnRpZXMiLCIuLi8uLi9Db3JlL0RldmVsb3BlckVycm9yIiwiLi4vLi4vQ29yZS9FdmVudCIsIi4uLy4uL0NvcmUvd3JhcEZ1bmN0aW9uIiwiLi4vLi4vRGF0YVNvdXJjZXMvQ3ptbERhdGFTb3VyY2UiLCIuLi8uLi9EYXRhU291cmNlcy9HZW9Kc29uRGF0YVNvdXJjZSIsIi4uL2dldEVsZW1lbnQiXSxmdW5jdGlvbihlLHQsaSxuLHIsbyxhLHMsbCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHUoZSl7ZS5zdG9wUHJvcGFnYXRpb24oKSxlLnByZXZlbnREZWZhdWx0KCl9ZnVuY3Rpb24gYyhlLGkpe3ZhciBuPWU7dChuKSYmKG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZHJvcCIsaSwhMSksbi5yZW1vdmVFdmVudExpc3RlbmVyKCJkcmFnZW50ZXIiLHUsITEpLG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZHJhZ292ZXIiLHUsITEpLG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZHJhZ2V4aXQiLHUsITEpKX1mdW5jdGlvbiBkKGUsdCl7ZS5hZGRFdmVudExpc3RlbmVyKCJkcm9wIix0LCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoImRyYWdlbnRlciIsdSwhMSksZS5hZGRFdmVudExpc3RlbmVyKCJkcmFnb3ZlciIsdSwhMSksZS5hZGRFdmVudExpc3RlbmVyKCJkcmFnZXhpdCIsdSwhMSl9ZnVuY3Rpb24gaChlLGkpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgcj1pLm5hbWU7dHJ5e3ZhciBvLGw7aWYoL1wuY3ptbCQvaS50ZXN0KHIpKW89bmV3IGEociksby5sb2FkKEpTT04ucGFyc2Uobi50YXJnZXQucmVzdWx0KSxyKTtlbHNle2lmKCEoL1wuZ2VvanNvbiQvaS50ZXN0KHIpfHwvXC5qc29uJC9pLnRlc3Qocil8fC9cLnRvcG9qc29uJC9pLnRlc3QocikpKXJldHVybiBlLmRyb3BFcnJvci5yYWlzZUV2ZW50KGUsciwiVW5yZWNvZ25pemVkIGZpbGU6ICIrciksdm9pZCAwO289bmV3IHMociksbD1vLmxvYWQoSlNPTi5wYXJzZShuLnRhcmdldC5yZXN1bHQpLHIpfWUuZGF0YVNvdXJjZXMuYWRkKG8pLHQobCkmJmwub3RoZXJ3aXNlKGZ1bmN0aW9uKHQpe2UuZHJvcEVycm9yLnJhaXNlRXZlbnQoZSxyLHQpfSl9Y2F0Y2godSl7ZS5kcm9wRXJyb3IucmFpc2VFdmVudChlLHIsdSl9fX1mdW5jdGlvbiBtKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGkpe2UuZHJvcEVycm9yLnJhaXNlRXZlbnQoZSx0Lm5hbWUsaS50YXJnZXQuZXJyb3IpfX12YXIgZj1mdW5jdGlvbih0LG4pe2Z1bmN0aW9uIGEoZSl7dShlKSxwJiZ0LmRhdGFTb3VyY2VzLnJlbW92ZUFsbCgpO2Zvcih2YXIgaT1lLmRhdGFUcmFuc2Zlci5maWxlcyxuPWkubGVuZ3RoLHI9MDtuPnI7cisrKXt2YXIgbz1pW3JdLGE9bmV3IEZpbGVSZWFkZXI7YS5vbmxvYWQ9aCh0LG8pLGEub25lcnJvcj1tKHQsbyksYS5yZWFkQXNUZXh0KG8pfX1uPWUobixlLkVNUFRZX09CSkVDVCk7dmFyIHM9ITAsZj1uZXcgcixwPWUobi5jbGVhck9uRHJvcCwhMCksdj1lKG4uZHJvcFRhcmdldCx0LmNvbnRhaW5lcik7dj1sKHYpLGkodCx7ZHJvcFRhcmdldDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZ9LHNldDpmdW5jdGlvbihlKXtjKHYsYSksdj1lLGQodixhKX19LGRyb3BFbmFibGVkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gc30sc2V0OmZ1bmN0aW9uKGUpe2UhPT1zJiYoZT9kKHYsYSk6Yyh2LGEpLHM9ZSl9fSxkcm9wRXJyb3I6e2dldDpmdW5jdGlvbigpe3JldHVybiBmfX0sY2xlYXJPbkRyb3A6e2dldDpmdW5jdGlvbigpe3JldHVybiBwfSxzZXQ6ZnVuY3Rpb24oZSl7cD1lfX19KSxkKHYsYSksdC5kZXN0cm95PW8odCx0LmRlc3Ryb3ksZnVuY3Rpb24oKXt0LmRyb3BFbmFibGVkPSExfSksdC5faGFuZGxlRHJvcD1hfTtyZXR1cm4gZn0pLGRlZmluZSgiRGF0YVNvdXJjZXMvRW50aXR5VmlldyIsWyIuLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uL0NvcmUvZGVmaW5lZCIsIi4uL0NvcmUvZGVmaW5lUHJvcGVydGllcyIsIi4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi9Db3JlL0VsbGlwc29pZCIsIi4uL0NvcmUvSnVsaWFuRGF0ZSIsIi4uL0NvcmUvTWF0aCIsIi4uL0NvcmUvTWF0cml4MyIsIi4uL0NvcmUvVHJhbnNmb3JtcyIsIi4uL1NjZW5lL1NjZW5lTW9kZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQodCxuLHIsbyxkLGIpe3ZhciBTPW8uZ2V0VmFsdWUoZCx0Ll9sYXN0Q2FydGVzaWFuKTtpZihpKFMpKXt2YXIgVCx4LEEsUD0hMTt3PWEuYWRkU2Vjb25kcyhkLC4wMDEsdyk7dmFyIE09by5nZXRWYWx1ZSh3LHApO2lmKGkoTSkpe3ZhciBJLEQ9dS5jb21wdXRlRml4ZWRUb0ljcmZNYXRyaXgoZCxoKSxPPXUuY29tcHV0ZUZpeGVkVG9JY3JmTWF0cml4KHcsbSk7aShEKSYmaShPKT9JPWwudHJhbnNwb3NlKEQsZik6KEk9dS5jb21wdXRlVGVtZVRvUHNldWRvRml4ZWRNYXRyaXgoZCxmKSxEPWwudHJhbnNwb3NlKEksaCksTz11LmNvbXB1dGVUZW1lVG9Qc2V1ZG9GaXhlZE1hdHJpeCh3LG0pLGwudHJhbnNwb3NlKE8sTykpO3ZhciBSPWwubXVsdGlwbHlCeVZlY3RvcihELFMseSksTD1sLm11bHRpcGx5QnlWZWN0b3IoTyxNLEMpO2Uuc3VidHJhY3QoUixMLF8pO3ZhciBOPTFlMyplLm1hZ25pdHVkZShfKSx6PTM5ODYwMDQ0MThlNSxCPS16LyhOKk4tMip6L2UubWFnbml0dWRlKFIpKTswPkJ8fEI+RSpiLm1heGltdW1SYWRpdXM/KFQ9dixlLm5vcm1hbGl6ZShTLFQpLGUubmVnYXRlKFQsVCksQT1lLmNsb25lKGUuVU5JVF9aLGcpLHg9ZS5jcm9zcyhBLFQscCksZS5tYWduaXR1ZGUoeCk+cy5FUFNJTE9ONyYmKGUubm9ybWFsaXplKFQsVCksZS5ub3JtYWxpemUoeCx4KSxBPWUuY3Jvc3MoVCx4LGcpLGUubm9ybWFsaXplKEEsQSksUD0hMCkpOmUuZXF1YWxzRXBzaWxvbihTLE0scy5FUFNJTE9ONyl8fChBPXYsZS5ub3JtYWxpemUoUixBKSxlLm5vcm1hbGl6ZShMLEwpLHg9ZS5jcm9zcyhBLEwsZyksZS5lcXVhbHNFcHNpbG9uKHgsZS5aRVJPLHMuRVBTSUxPTjcpfHwoVD1lLmNyb3NzKHgsQSxwKSxsLm11bHRpcGx5QnlWZWN0b3IoSSxULFQpLGwubXVsdGlwbHlCeVZlY3RvcihJLHgseCksbC5tdWx0aXBseUJ5VmVjdG9yKEksQSxBKSxlLm5vcm1hbGl6ZShULFQpLGUubm9ybWFsaXplKHgseCksZS5ub3JtYWxpemUoQSxBKSxQPSEwKSl9aWYoUCl7dmFyIEY9bi50cmFuc2Zvcm07RlswXT1ULngsRlsxXT1ULnksRlsyXT1ULnosRlszXT0wLEZbNF09eC54LEZbNV09eC55LEZbNl09eC56LEZbN109MCxGWzhdPUEueCxGWzldPUEueSxGWzEwXT1BLnosRlsxMV09MCxGWzEyXT1TLngsRlsxM109Uy55LEZbMTRdPVMueixGWzE1XT0wfWVsc2UgdS5lYXN0Tm9ydGhVcFRvRml4ZWRGcmFtZShTLGIsbi50cmFuc2Zvcm0pfXImJih0LnNjZW5lLm1vZGU9PT1jLlNDRU5FMkQ/bi5sb29rQXQodC5fb2Zmc2V0MkQsZS5aRVJPLHQuX3VwMkQpOm4ubG9va0F0KHQuX29mZnNldDNELGUuWkVSTyx0Ll91cDNEKSl9dmFyIGg9bmV3IGwsbT1uZXcgbCxmPW5ldyBsLHA9bmV3IGUsdj1uZXcgZSxnPW5ldyBlLF89bmV3IGUseT1uZXcgZSxDPW5ldyBlLHc9bmV3IGEsRT0xLjI1LGI9bmV3IGUsUz1mdW5jdGlvbihpLG4scil7dGhpcy5lbnRpdHk9aSx0aGlzLnNjZW5lPW4sdGhpcy5lbGxpcHNvaWQ9dChyLG8uV0dTODQpLHRoaXMuX2xhc3RFbnRpdHk9dm9pZCAwLHRoaXMuX21vZGU9dm9pZCAwLHRoaXMuX2xhc3RDYXJ0ZXNpYW49bmV3IGUsdGhpcy5fb2Zmc2V0M0Q9bmV3IGUsdGhpcy5fdXAzRD1uZXcgZSx0aGlzLl9vZmZzZXQyRD1uZXcgZSx0aGlzLl91cDJEPW5ldyBlfTtyZXR1cm4gbihTLHtkZWZhdWx0T2Zmc2V0M0Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWZhdWx0T2Zmc2V0M0R9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9kZWZhdWx0T2Zmc2V0M0Q9ZS5jbG9uZSh0LG5ldyBlKSx0aGlzLl9kZWZhdWx0VXAzRD1lLmNyb3NzKHRoaXMuX2RlZmF1bHRPZmZzZXQzRCxlLmNyb3NzKGUuVU5JVF9aLHRoaXMuX2RlZmF1bHRPZmZzZXQzRCxiKSxuZXcgZSksZS5ub3JtYWxpemUodGhpcy5fZGVmYXVsdFVwM0QsdGhpcy5fZGVmYXVsdFVwM0QpLHRoaXMuX2RlZmF1bHRPZmZzZXQyRD1uZXcgZSgwLDAsZS5tYWduaXR1ZGUodGhpcy5fZGVmYXVsdE9mZnNldDNEKSksdGhpcy5fZGVmYXVsdFVwMkQ9ZS5jbG9uZShlLlVOSVRfWSl9fX0pLFMuZGVmYXVsdE9mZnNldDNEPW5ldyBlKC0xNGUzLDM1MDAsMzUwMCksUy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuc2NlbmUscj10aGlzLmVudGl0eSxvPXRoaXMuZWxsaXBzb2lkLGE9ci5wb3NpdGlvbixzPXIhPT10aGlzLl9sYXN0RW50aXR5LGw9bi5tb2RlIT09dGhpcy5fbW9kZSYmbi5tb2RlIT09Yy5NT1JQSElORyx1PXRoaXMuX29mZnNldDNELGg9dGhpcy5fdXAzRCxtPXRoaXMuX29mZnNldDJELGY9dGhpcy5fdXAyRCxwPW4uY2FtZXJhO2lmKHMpe3ZhciB2PXIudmlld0Zyb207aWYoaSh2KSYmaSh2LmdldFZhbHVlKHQsdSkpKXtlLmNyb3NzKGUuVU5JVF9aLHUsaCksZS5jcm9zcyh1LGgsaCksZS5ub3JtYWxpemUoaCxoKTt2YXIgZz1lLm1hZ25pdHVkZSh1KTtlLmZyb21FbGVtZW50cygwLDAsZyxtKSxlLmNsb25lKHRoaXMuX2RlZmF1bHRVcDJELGYpfWVsc2UgZS5jbG9uZShTLl9kZWZhdWx0T2Zmc2V0MkQsbSksZS5jbG9uZShTLl9kZWZhdWx0VXAyRCxmKSxlLmNsb25lKFMuX2RlZmF1bHRPZmZzZXQzRCx1KSxlLmNsb25lKFMuX2RlZmF1bHRVcDNELGgpfWVsc2UgaWYoIWwmJm4ubW9kZSE9PWMuTU9SUEhJTkcpaWYodGhpcy5fbW9kZT09PWMuU0NFTkUyRCl7dmFyIF89TWF0aC5tYXgocC5mcnVzdHVtLnJpZ2h0LXAuZnJ1c3R1bS5sZWZ0LHAuZnJ1c3R1bS50b3AtcC5mcnVzdHVtLmJvdHRvbSk7ZS5mcm9tRWxlbWVudHMoMCwwLF8sbSksZS5jbG9uZShwLnVwLGYpfWVsc2UodGhpcy5fbW9kZT09PWMuU0NFTkUzRHx8dGhpcy5fbW9kZT09PWMuQ09MVU1CVVNfVklFVykmJihlLmNsb25lKHAucG9zaXRpb24sdSksZS5jbG9uZShwLnVwLGgpKTt2YXIgeT1zfHxsO3RoaXMuX2xhc3RFbnRpdHk9cix0aGlzLl9tb2RlPW4ubW9kZSE9PWMuTU9SUEhJTkc/bi5tb2RlOnRoaXMuX21vZGUsbi5tb2RlIT09Yy5NT1JQSElORyYmZCh0aGlzLG4uY2FtZXJhLHksYSx0LG8pfSxTfSksZGVmaW5lKCJXaWRnZXRzL1ZpZXdlci92aWV3ZXJFbnRpdHlNaXhpbiIsWyIuLi8uLi9Db3JlL0NhcnRlc2lhbjMiLCIuLi8uLi9Db3JlL2RlZmF1bHRWYWx1ZSIsIi4uLy4uL0NvcmUvZGVmaW5lZCIsIi4uLy4uL0NvcmUvRGV2ZWxvcGVyRXJyb3IiLCIuLi8uLi9Db3JlL0V2ZW50SGVscGVyIiwiLi4vLi4vQ29yZS9TY3JlZW5TcGFjZUV2ZW50VHlwZSIsIi4uLy4uL0NvcmUvd3JhcEZ1bmN0aW9uIiwiLi4vLi4vRGF0YVNvdXJjZXMvQ29uc3RhbnRQb3NpdGlvblByb3BlcnR5IiwiLi4vLi4vRGF0YVNvdXJjZXMvRW50aXR5IiwiLi4vLi4vRGF0YVNvdXJjZXMvRW50aXR5VmlldyIsIi4uLy4uL1NjZW5lL1NjZW5lTW9kZSIsIi4uLy4uL1RoaXJkUGFydHkva25vY2tvdXQiLCIuLi8uLi9UaGlyZFBhcnR5L3doZW4iLCIuLi9zdWJzY3JpYmVBbmRFdmFsdWF0ZSJdLGZ1bmN0aW9uKGUsdCxpLG4scixvLGEscyxsLHUsYyxkLGgsbSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGYoZSx0KXt2YXIgbj1lLnNjZW5lLHI9bi5jYW1lcmEuZ2V0UGlja1JheSh0KSxvPW4uaW1hZ2VyeUxheWVycy5waWNrSW1hZ2VyeUxheWVyRmVhdHVyZXMocixuKTtpZihpKG8pKXt2YXIgYT1uZXcgbCgiTG9hZGluZy4uLiIpO3JldHVybiBhLmRlc2NyaXB0aW9uPXtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiJMb2FkaW5nIGZlYXR1cmUgaW5mb3JtYXRpb24uLi4ifX0saChvLGZ1bmN0aW9uKHQpe2lmKGUuc2VsZWN0ZWRFbnRpdHk9PT1hKXtpZighaSh0KXx8MD09PXQubGVuZ3RoKXJldHVybiBlLnNlbGVjdGVkRW50aXR5PXAoKSx2b2lkIDA7dmFyIG49dFswXSxyPW5ldyBsKG4ubmFtZSk7aWYoci5kZXNjcmlwdGlvbj17Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gbi5kZXNjcmlwdGlvbn19LGkobi5wb3NpdGlvbikpe3ZhciBvPWUuc2NlbmUuZ2xvYmUuZWxsaXBzb2lkLmNhcnRvZ3JhcGhpY1RvQ2FydGVzaWFuKG4ucG9zaXRpb24sZyk7ci5wb3NpdGlvbj1uZXcgcyhvKX1lLnNlbGVjdGVkRW50aXR5PXJ9fSxmdW5jdGlvbigpe2lmKGUuc2VsZWN0ZWRFbnRpdHk9PT1hKXt2YXIgdD1uZXcgbCgiTm9uZSIpO3QuZGVzY3JpcHRpb249e2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIk5vIGZlYXR1cmVzIGZvdW5kLiJ9fSxlLnNlbGVjdGVkRW50aXR5PXAoKX19KSxhfX1mdW5jdGlvbiBwKCl7dmFyIGU9bmV3IGwoIk5vbmUiKTtyZXR1cm4gZS5kZXNjcmlwdGlvbj17Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4iTm8gZmVhdHVyZXMgZm91bmQuIn19LGV9dmFyIHY9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gbigpe2UudHJhY2tlZEVudGl0eT1lLnNlbGVjdGVkRW50aXR5fWZ1bmN0aW9uIHMoKXtlLnRyYWNrZWRFbnRpdHk9dm9pZCAwfWZ1bmN0aW9uIGgoKXtlLnNlbGVjdGVkRW50aXR5PXZvaWQgMH1mdW5jdGlvbiBwKCl7ZS50cmFja2VkRW50aXR5PXZvaWQgMCxlLnNlbGVjdGVkRW50aXR5PXZvaWQgMH1mdW5jdGlvbiB2KG4pe3ZhciByPW4uY3VycmVudFRpbWU7aShTKSYmUy51cGRhdGUocik7dmFyIG89ZS5zZWxlY3RlZEVudGl0eSxhPWkobykmJk07aWYoYSl7dmFyIHMsbD1pKFApP1AucG9zaXRpb246dm9pZCAwLHU9ITE7by5pc0F2YWlsYWJsZShyKSYmaShvLnBvc2l0aW9uKSYmKHM9by5wb3NpdGlvbi5nZXRWYWx1ZShyLGwpLHU9aShzKSYmZS50cmFja2VkRW50aXR5IT09ZS5zZWxlY3RlZEVudGl0eSksaShQKSYmKFAucG9zaXRpb249cyksaSh4KSYmKHguZW5hYmxlQ2FtZXJhPXUseC5pc0NhbWVyYVRyYWNraW5nPWUudHJhY2tlZEVudGl0eT09PWUuc2VsZWN0ZWRFbnRpdHkseC5kZXNjcmlwdGlvblJhd0h0bWw9aShvLmRlc2NyaXB0aW9uKT90KG8uZGVzY3JpcHRpb24uZ2V0VmFsdWUociksIiIpOiIiKX1pKFApJiYoUC5zaG93U2VsZWN0aW9uPWEsUC51cGRhdGUoKSksaSh4KSYmKHguc2hvd0luZm89YSl9ZnVuY3Rpb24gZyhuKXt2YXIgcj1lLnNjZW5lLnBpY2sobi5wb3NpdGlvbik7aWYoaShyKSl7dmFyIG89dChyLmlkLHIucHJpbWl0aXZlLmlkKTtpZihvIGluc3RhbmNlb2YgbClyZXR1cm4gb31yZXR1cm4gZihlLG4ucG9zaXRpb24pfWZ1bmN0aW9uIF8odCl7aSh0KSYmaSh0LnBvc2l0aW9uKSYmKGUudHJhY2tlZEVudGl0eT10KX1mdW5jdGlvbiB5KGUpe3ZhciB0PWcoZSk7aSh0KSYmXyh0KX1mdW5jdGlvbiBDKHQpe2Uuc2VsZWN0ZWRFbnRpdHk9Zyh0KX1mdW5jdGlvbiB3KHQsaSxuKXtmb3IodmFyIHI9bi5sZW5ndGgsbz0wO3I+bztvKyspe3ZhciBhPW5bb107ZS50cmFja2VkRW50aXR5PT09YSYmZS5ob21lQnV0dG9uLnZpZXdNb2RlbC5jb21tYW5kKCksZS5zZWxlY3RlZEVudGl0eT09PWEmJihlLnNlbGVjdGVkRW50aXR5PXZvaWQgMCl9fWZ1bmN0aW9uIEUoZSx0KXt2YXIgaT10LmVudGl0aWVzO2kuY29sbGVjdGlvbkNoYW5nZWQuYWRkRXZlbnRMaXN0ZW5lcih3KX1mdW5jdGlvbiBiKHQsbil7dmFyIHI9bi5lbnRpdGllcztyLmNvbGxlY3Rpb25DaGFuZ2VkLnJlbW92ZUV2ZW50TGlzdGVuZXIodyksaShlLnRyYWNrZWRFbnRpdHkpJiZyLmdldEJ5SWQoZS50cmFja2VkRW50aXR5LmlkKT09PWUudHJhY2tlZEVudGl0eSYmZS5ob21lQnV0dG9uLnZpZXdNb2RlbC5jb21tYW5kKCksaShlLnNlbGVjdGVkRW50aXR5KSYmci5nZXRCeUlkKGUuc2VsZWN0ZWRFbnRpdHkuaWQpPT09ZS5zZWxlY3RlZEVudGl0eSYmKGUuc2VsZWN0ZWRFbnRpdHk9dm9pZCAwKX12YXIgUyxUPWUuaW5mb0JveCx4PWkoVCk/VC52aWV3TW9kZWw6dm9pZCAwLEE9ZS5zZWxlY3Rpb25JbmRpY2F0b3IsUD1pKEEpP0Eudmlld01vZGVsOnZvaWQgMCxNPWkoVCl8fGkoQSksST1uZXcgcjtpKHgpJiYoSS5hZGQoeC5jYW1lcmFDbGlja2VkLG4pLEkuYWRkKHguY2xvc2VDbGlja2VkLGgpKSxJLmFkZChlLmNsb2NrLm9uVGljayx2KSxpKGUuaG9tZUJ1dHRvbikmJkkuYWRkKGUuaG9tZUJ1dHRvbi52aWV3TW9kZWwuY29tbWFuZC5iZWZvcmVFeGVjdXRlLHMpLGkoZS5nZW9jb2RlcikmJkkuYWRkKGUuZ2VvY29kZXIudmlld01vZGVsLnNlYXJjaC5iZWZvcmVFeGVjdXRlLHApO2Zvcih2YXIgRD1lLmRhdGFTb3VyY2VzLE89RC5sZW5ndGgsUj0wO08+UjtSKyspRShELEQuZ2V0KFIpKTtJLmFkZChlLmRhdGFTb3VyY2VzLmRhdGFTb3VyY2VBZGRlZCxFKSxJLmFkZChlLmRhdGFTb3VyY2VzLmRhdGFTb3VyY2VSZW1vdmVkLGIpLGUuc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuc2V0SW5wdXRBY3Rpb24oQyxvLkxFRlRfQ0xJQ0spLGUuc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIuc2V0SW5wdXRBY3Rpb24oeSxvLkxFRlRfRE9VQkxFX0NMSUNLKSxlLnRyYWNrZWRFbnRpdHk9dm9pZCAwLGUuc2VsZWN0ZWRFbnRpdHk9dm9pZCAwLGQudHJhY2soZSxbInRyYWNrZWRFbnRpdHkiLCJzZWxlY3RlZEVudGl0eSJdKTt2YXIgTD1bXTtMLnB1c2gobShlLCJ0cmFja2VkRW50aXR5IixmdW5jdGlvbih0KXt2YXIgbj1lLnNjZW5lLHI9bi5tb2RlLG89aSh0KTsocj09PWMuQ09MVU1CVVNfVklFV3x8cj09PWMuU0NFTkUyRCkmJihuLnNjcmVlblNwYWNlQ2FtZXJhQ29udHJvbGxlci5lbmFibGVUcmFuc2xhdGU9IW8pLChyPT09Yy5DT0xVTUJVU19WSUVXfHxyPT09Yy5TQ0VORTNEKSYmKG4uc2NyZWVuU3BhY2VDYW1lcmFDb250cm9sbGVyLmVuYWJsZVRpbHQ9IW8pLFM9byYmaSh0LnBvc2l0aW9uKT9uZXcgdSh0LG4sZS5zY2VuZS5nbG9iZS5lbGxpcHNvaWQpOnZvaWQgMH0pKSxMLnB1c2gobShlLCJzZWxlY3RlZEVudGl0eSIsZnVuY3Rpb24oZSl7aShlKT8oaSh4KSYmKHgudGl0bGVUZXh0PWkoZS5uYW1lKT9lLm5hbWU6ZS5pZCksaShQKSYmUC5hbmltYXRlQXBwZWFyKCkpOmkoUCkmJlAuYW5pbWF0ZURlcGFydCgpfSkpLGUuZGVzdHJveT1hKGUsZS5kZXN0cm95LGZ1bmN0aW9uKCl7SS5yZW1vdmVBbGwoKTt2YXIgdDtmb3IodD0wO3Q8TC5sZW5ndGg7dCsrKUxbdF0uZGlzcG9zZSgpO2Uuc2NyZWVuU3BhY2VFdmVudEhhbmRsZXIucmVtb3ZlSW5wdXRBY3Rpb24oby5MRUZUX0NMSUNLKSxlLnNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLnJlbW92ZUlucHV0QWN0aW9uKG8uTEVGVF9ET1VCTEVfQ0xJQ0spO3ZhciBpPWUuZGF0YVNvdXJjZXMsbj1pLmxlbmd0aDtmb3IodD0wO24+dDt0KyspYihpLGkuZ2V0KHQpKX0pfSxnPW5ldyBlO3JldHVybiB2fSksZGVmaW5lKCJkb21SZWFkeSIsW10sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZShlKXt2YXIgdDtmb3IodD0wO3Q8ZS5sZW5ndGg7dCs9MSllW3RdKHUpfWZ1bmN0aW9uIHQoKXt2YXIgdD1jO2wmJnQubGVuZ3RoJiYoYz1bXSxlKHQpKX1mdW5jdGlvbiBpKCl7bHx8KGw9ITAsYSYmY2xlYXJJbnRlcnZhbChhKSx0KCkpfWZ1bmN0aW9uIG4oZSl7cmV0dXJuIGw/ZSh1KTpjLnB1c2goZSksbn12YXIgcixvLGEscz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LmRvY3VtZW50LGw9IXMsdT1zP2RvY3VtZW50Om51bGwsYz1bXTtpZihzKXtpZihkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixpLCExKTtlbHNlIGlmKHdpbmRvdy5hdHRhY2hFdmVudCl7d2luZG93LmF0dGFjaEV2ZW50KCJvbmxvYWQiLGkpLG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7dHJ5e3I9bnVsbD09PXdpbmRvdy5mcmFtZUVsZW1lbnR9Y2F0Y2goZCl7fW8uZG9TY3JvbGwmJnImJndpbmRvdy5leHRlcm5hbCYmKGE9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXt0cnl7by5kb1Njcm9sbCgpLGkoKX1jYXRjaChlKXt9fSwzMCkpfSJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlJiZpKCl9cmV0dXJuIG4udmVyc2lvbj0iMi4wLjEiLG4ubG9hZD1mdW5jdGlvbihlLHQsaSxyKXtyLmlzQnVpbGQ/aShudWxsKTpuKGkpfSxufSksZGVmaW5lKCJDZXNpdW1WaWV3ZXIvQ2VzaXVtVmlld2VyIixbIkNvcmUvZGVmaW5lZCIsIkNvcmUvZm9ybWF0RXJyb3IiLCJDb3JlL2dldEZpbGVuYW1lRnJvbVVyaSIsIkRhdGFTb3VyY2VzL0N6bWxEYXRhU291cmNlIiwiRGF0YVNvdXJjZXMvR2VvSnNvbkRhdGFTb3VyY2UiLCJTY2VuZS9UaWxlTWFwU2VydmljZUltYWdlcnlQcm92aWRlciIsIldpZGdldHMvVmlld2VyL1ZpZXdlciIsIldpZGdldHMvVmlld2VyL3ZpZXdlckNlc2l1bUluc3BlY3Rvck1peGluIiwiV2lkZ2V0cy9WaWV3ZXIvdmlld2VyRHJhZ0Ryb3BNaXhpbiIsIldpZGdldHMvVmlld2VyL3ZpZXdlckVudGl0eU1peGluIiwiZG9tUmVhZHkhIl0sZnVuY3Rpb24oZSx0LGksbixyLG8sYSxzLGwsdSl7InVzZSBzdHJpY3QiO3ZhciBjPXt9LGQ9d2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHJpbmcoMSk7aWYoIiIhPT1kKWZvcih2YXIgaD1kLnNwbGl0KCImIiksbT0wLGY9aC5sZW5ndGg7Zj5tOysrbSl7dmFyIHA9aFttXSx2PXAuc3BsaXQoIj0iKTt2Lmxlbmd0aD4xJiYoY1t2WzBdXT1kZWNvZGVVUklDb21wb25lbnQodlsxXS5yZXBsYWNlKC9cKy9nLCIgIikpKX12YXIgZyxfPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsb2FkaW5nSW5kaWNhdG9yIik7Yy50bXNJbWFnZXJ5VXJsJiYoZz1uZXcgbyh7dXJsOmMudG1zSW1hZ2VyeVVybH0pKTt2YXIgeTt0cnl7eT1uZXcgYSgiY2VzaXVtQ29udGFpbmVyIix7aW1hZ2VyeVByb3ZpZGVyOmcsYmFzZUxheWVyUGlja2VyOiFlKGcpLHNjZW5lM0RPbmx5OmMuc2NlbmUzRE9ubHl9KX1jYXRjaChDKXtfLnN0eWxlLmRpc3BsYXk9Im5vbmUiO3ZhciB3PXQoQyk7cmV0dXJuIGNvbnNvbGUuZXJyb3IodyksZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmNlc2l1bS13aWRnZXQtZXJyb3JQYW5lbCIpfHx3aW5kb3cuYWxlcnQodyksdm9pZCAwfXkuZXh0ZW5kKGwpLHkuZXh0ZW5kKHUpLGMuaW5zcGVjdG9yJiZ5LmV4dGVuZChzKTt2YXIgRT1mdW5jdGlvbihlLHQpe3ZhciBpPSJBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBsb2FkaW5nIHRoZSBmaWxlOiAiK2Usbj0iQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgbG9hZGluZyB0aGUgZmlsZSwgd2hpY2ggbWF5IGluZGljYXRlIHRoYXQgaXQgaXMgaW52YWxpZC4gIEEgZGV0YWlsZWQgZXJyb3IgcmVwb3J0IGlzIGJlbG93OiI7eS5jZXNpdW1XaWRnZXQuc2hvd0Vycm9yUGFuZWwoaSxuLHQpfTt5LmRyb3BFcnJvci5hZGRFdmVudExpc3RlbmVyKGZ1bmN0aW9uKGUsdCxpKXtFKHQsaSl9KTt2YXIgYj15LnNjZW5lLFM9Yi5jb250ZXh0O2MuZGVidWcmJihTLnZhbGlkYXRlU2hhZGVyUHJvZ3JhbT0hMCxTLnZhbGlkYXRlRnJhbWVidWZmZXI9ITAsUy5sb2dTaGFkZXJDb21waWxhdGlvbj0hMCxTLnRocm93T25XZWJHTEVycm9yPSEwKTt2YXIgVD1jLnNvdXJjZTtpZihlKFQpKXt2YXIgeCxBOy9cLmN6bWwkL2kudGVzdChUKT8oeD1uZXcgbihpKFQpKSxBPXgubG9hZFVybChUKSk6L1wuZ2VvanNvbiQvaS50ZXN0KFQpfHwvXC5qc29uJC9pLnRlc3QoVCl8fC9cLnRvcG9qc29uJC9pLnRlc3QoVCk/KHg9bmV3IHIoaShUKSksQT14LmxvYWRVcmwoVCkpOkUoVCwiVW5rbm93biBmb3JtYXQuIiksZSh4KSYmKHkuZGF0YVNvdXJjZXMuYWRkKHgpLEEudGhlbihmdW5jdGlvbigpe3ZhciB0PWMubG9va0F0O2lmKGUodCkpe3ZhciBpPXguZW50aXRpZXMuZ2V0QnlJZCh0KTtpZihlKGkpKXkudHJhY2tlZEVudGl0eT1pO2Vsc2V7dmFyIG49J05vIGVudGl0eSB3aXRoIGlkICInK3QrJyIgZXhpc3RzIGluIHRoZSBwcm92aWRlZCBkYXRhIHNvdXJjZS4nO0UoVCxuKX19fSkub3RoZXJ3aXNlKGZ1bmN0aW9uKGUpe0UoVCxlKX0pKX1jLnN0YXRzJiYoYi5kZWJ1Z1Nob3dGcmFtZXNQZXJTZWNvbmQ9ITApO3ZhciBQPWMudGhlbWU7aWYoZShQKSlpZigibGlnaHRlciI9PT1jLnRoZW1lKWRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgiY2VzaXVtLWxpZ2h0ZXIiKSx5LmFuaW1hdGlvbi5hcHBseVRoZW1lQ2hhbmdlcygpO2Vsc2V7dmFyIE09IlVua25vd24gdGhlbWU6ICIrUDt5LmNlc2l1bVdpZGdldC5zaG93RXJyb3JQYW5lbChNLCIiKX1fLnN0eWxlLmRpc3BsYXk9Im5vbmUifSkscmVxdWlyZSh7YmFzZVVybDoiLiIscGF0aHM6e0Nlc2l1bVZpZXdlcjoiLiIsZG9tUmVhZHk6Ii4vZG9tUmVhZHkifX0sWyJDZXNpdW1WaWV3ZXIvQ2VzaXVtVmlld2VyIl0sZnVuY3Rpb24oKXt9KSxkZWZpbmUoIkNlc2l1bVZpZXdlci9DZXNpdW1WaWV3ZXJTdGFydHVwIixmdW5jdGlvbigpe30pfSgpOw==",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 14:54:24 GMT",
                    "Content-Length": "1328080",
                    "Date": "Thu, 06 Nov 2014 14:54:34 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}