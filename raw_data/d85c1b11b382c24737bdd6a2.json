{
    "url": "http://localhost:9999/harsha-mudi/dagre-d3/demo/interactive-demo.html",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "DOM data manipulation (DOM-based)",
    "issueType": 5247488,
    "severity": "Information",
    "confidence": "Firm",
    "issueBackground": "DOM-based DOM data manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a data field within the DOM that is used within the visible UI or client-side application logic. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the appearance or behavior of the client-side UI. An attacker may be able to leverage this to perform virtual defacement of the application, or possibly to induce the user to perform unintended actions.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based DOM data manipulation vulnerabilities is not to dynamically write to DOM data fields any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored. In general, this is best achieved by using a whitelist of permitted values.",
    "issueDetail": "The application may be vulnerable to DOM-based DOM data manipulation. Data is read from <b>window.location.search</b> and written to <b>the 'value' property of a DOM element</b> via the following statements:<ul><li>var graphMatch = window.location.search.match(graphRE);</li><li>inputGraph.value = decodeURIComponent(graphMatch[1]);</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/harsha-mudi/dagre-d3/demo/interactive-demo.html",
                "path": "/harsha-mudi/dagre-d3/demo/interactive-demo.html",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9oYXJzaGEtbXVkaS9kYWdyZS1kMy9kZW1vL2ludGVyYWN0aXZlLWRlbW8uaHRtbCBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNDMwNw0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04DQpEYXRlOiBTdW4sIDA5IE5vdiAyMDE0IDAzOjI3OjM2IEdNVA0KTGFzdC1Nb2RpZmllZDogU3VuLCAwOSBOb3YgMjAxNCAwMzoyNzozNiBHTVQNCg0KPCFkb2N0eXBlIGh0bWw+Cgo8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+Cjx0aXRsZT5EYWdyZSBJbnRlcmFjdGl2ZSBEZW1vPC90aXRsZT4KCjxzY3JpcHQgc3JjPSJodHRwOi8vZDNqcy5vcmcvZDMudjMuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iLi4vYnVpbGQvZGFncmUtZDMuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cDovL2NwZXR0aXR0LmdpdGh1Yi5pby9wcm9qZWN0L2dyYXBobGliLWRvdC9sYXRlc3QvZ3JhcGhsaWItZG90Lm1pbi5qcyI+PC9zY3JpcHQ+Cgo8c3R5bGU+CnN2ZyB7CiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cgp0ZXh0IHsKICBmb250LXdlaWdodDogMzAwOwogIGZvbnQtZmFtaWx5OiAiSGVsdmV0aWNhIE5ldWUiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmY7CiAgZm9udC1zaXplOiAxNHB4Owp9Cgoubm9kZSByZWN0IHsKICBzdHJva2U6ICMzMzM7CiAgc3Ryb2tlLXdpZHRoOiAycHg7CiAgZmlsbDogI2ZmZjsKfQoKLmVkZ2VMYWJlbCByZWN0IHsKICBmaWxsOiAjZmZmOwp9CgouZWRnZVBhdGggcGF0aCB7CiAgc3Ryb2tlOiAjMzMzOwogIHN0cm9rZS13aWR0aDogMS41cHg7CiAgZmlsbDogbm9uZTsKfQo8L3N0eWxlPgoKPHN0eWxlPgpoMSwgaDIgewogIGNvbG9yOiAjMzMzOwp9Cgp0ZXh0YXJlYSB7CiAgd2lkdGg6IDgwMHB4Owp9CgpsYWJlbCB7CiAgbWFyZ2luLXRvcDogMWVtOwogIGRpc3BsYXk6IGJsb2NrOwp9CgouZXJyb3IgewogIGNvbG9yOiByZWQ7Cn0KPC9zdHlsZT4KCjxib2R5IG9uTG9hZD0idHJ5RHJhdygpOyI+Cgo8aDE+RGFncmUgSW50ZXJhY3RpdmUgRGVtbzwvaDE+Cgo8aDI+SW5wdXQ8L2gyPgoKPGZvcm0+CiAgPGxhYmVsIGZvcj0iaW5wdXRHcmFwaCI+R3JhcGh2aXogRGVmaW5pdGlvbjwvbGFiZWw+CiAgPHRleHRhcmVhIGlkPSJpbnB1dEdyYXBoIiByb3dzPSI1IiBzdHlsZT0iZGlzcGxheTogYmxvY2siIG9uS2V5VXA9InRyeURyYXcoKTsiPgovKiBFeGFtcGxlICovCmRpZ3JhcGggewogICAgLyogTm90ZTogSFRNTCBsYWJlbHMgZG8gbm90IHdvcmsgaW4gSUUsIHdoaWNoIGxhY2tzIHN1cHBvcnQgZm9yICZsdDtmb3JlaWduT2JqZWN0Jmd0OyB0YWdzLiAqLwogICAgQSBbbGFiZWw9IjxkaXYgc3R5bGU9J3BhZGRpbmc6IDEwcHg7Jz5BIDxzcGFuIHN0eWxlPSdmb250LXNpemU6MzJweCc+QmlnPC9zcGFuPiA8c3BhbiBzdHlsZT0nY29sb3I6cmVkOyc+SFRNTDwvc3Bhbj4gU291cmNlITwvZGl2PiJdOwogICAgQzsKICAgIEUgW2xhYmVsPSJBIHNpbmsiXTsKICAgIEEgLSZndDsgQiAtJmd0OyBDOwogICAgQiAtJmd0OyBEIC0mZ3Q7IEU7CiAgICBDIC0mZ3Q7IEU7CiAgICBBIC0mZ3Q7IEQgW2xhYmVsPSI8ZGl2PkEgbXVsdGktcmFuayA8c3BhbiBzdHlsZT0nY29sb3I6Ymx1ZTsnPkhUTUw8L3NwYW4+IGVkZ2UhPC9kaXY+Il07Cn0KICA8L3RleHRhcmVhPgoKICA8YSBpZD0iZ3JhcGhMaW5rIj5MaW5rIGZvciB0aGlzIGdyYXBoPC9hPgo8L2Zvcm0+Cgo8aDI+R3JhcGggVmlzdWFsaXphdGlvbjwvaDI+Cgo8c3ZnIHdpZHRoPTgwMCBoZWlnaHQ9NjAwPgogIDxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKDIwLCAyMCkiLz4KPC9zdmc+Cgo8c2NyaXB0PgovLyBJbnB1dCByZWxhdGVkIGNvZGUgZ29lcyBoZXJlCgpmdW5jdGlvbiBncmFwaFRvVVJMKCkgewogIHZhciBlbGVtcyA9IFt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsICcvLycsCiAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0LAogICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsCiAgICAgICAgICAgICAgICc/J107CgogIHZhciBxdWVyeVBhcmFtcyA9IFtdOwogIGlmIChkZWJ1Z0FsaWdubWVudCkgewogICAgcXVlcnlQYXJhbXMucHVzaCgnYWxpZ25tZW50PScgKyBkZWJ1Z0FsaWdubWVudCk7CiAgfQogIHF1ZXJ5UGFyYW1zLnB1c2goJ2dyYXBoPScgKyBlbmNvZGVVUklDb21wb25lbnQoaW5wdXRHcmFwaC52YWx1ZSkpOwogIGVsZW1zLnB1c2gocXVlcnlQYXJhbXMuam9pbignJicpKTsKCiAgcmV0dXJuIGVsZW1zLmpvaW4oJycpOwp9Cgp2YXIgaW5wdXRHcmFwaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNpbnB1dEdyYXBoIik7Cgp2YXIgZ3JhcGhMaW5rID0gZDMuc2VsZWN0KCIjZ3JhcGhMaW5rIik7Cgp2YXIgb2xkSW5wdXRHcmFwaFZhbHVlOwoKdmFyIGdyYXBoUkUgPSAvWz8mXWdyYXBoPShbXiZdKykvOwp2YXIgZ3JhcGhNYXRjaCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gubWF0Y2goZ3JhcGhSRSk7CmlmIChncmFwaE1hdGNoKSB7CiAgaW5wdXRHcmFwaC52YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChncmFwaE1hdGNoWzFdKTsKfQp2YXIgZGVidWdBbGlnbm1lbnRSRSA9IC9bPyZdYWxpZ25tZW50PShbXiZdKykvOwp2YXIgZGVidWdBbGlnbm1lbnRNYXRjaCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gubWF0Y2goZGVidWdBbGlnbm1lbnRSRSk7CnZhciBkZWJ1Z0FsaWdubWVudDsKaWYgKGRlYnVnQWxpZ25tZW50TWF0Y2gpIGRlYnVnQWxpZ25tZW50ID0gZGVidWdBbGlnbm1lbnRNYXRjaFsxXTsKCmZ1bmN0aW9uIHRyeURyYXcoKSB7CiAgdmFyIHJlc3VsdDsKICBpZiAob2xkSW5wdXRHcmFwaFZhbHVlICE9PSBpbnB1dEdyYXBoLnZhbHVlKSB7CiAgICBpbnB1dEdyYXBoLnNldEF0dHJpYnV0ZSgiY2xhc3MiLCAiIik7CiAgICBvbGRJbnB1dEdyYXBoVmFsdWUgPSBpbnB1dEdyYXBoLnZhbHVlOwogICAgdHJ5IHsKICAgICAgcmVzdWx0ID0gZ3JhcGhsaWJEb3QucGFyc2UoaW5wdXRHcmFwaC52YWx1ZSk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGlucHV0R3JhcGguc2V0QXR0cmlidXRlKCJjbGFzcyIsICJlcnJvciIpOwogICAgICB0aHJvdyBlOwogICAgfQoKICAgIGlmIChyZXN1bHQpIHsKICAgICAgLy8gU2F2ZSBsaW5rIHRvIG5ldyBncmFwaAogICAgICBncmFwaExpbmsuYXR0cigiaHJlZiIsIGdyYXBoVG9VUkwoKSk7CgogICAgICAvLyBDbGVhbnVwIG9sZCBncmFwaAogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCJzdmciKTsKCiAgICAgIHZhciByZW5kZXJlciA9IG5ldyBkYWdyZUQzLlJlbmRlcmVyKCk7CgogICAgICAvLyBIYW5kbGUgZGVidWdBbGlnbm1lbnQKICAgICAgcmVuZGVyZXIucG9zdExheW91dChmdW5jdGlvbihncmFwaCkgewogICAgICAgIGlmIChkZWJ1Z0FsaWdubWVudCkgewogICAgICAgICAgLy8gRmlyc3QgZmluZCBuZWNlc3NhcnkgZGVsdGEuLi4KICAgICAgICAgIHZhciBtaW5YID0gTWF0aC5taW4uYXBwbHkobnVsbCwgZ3JhcGgubm9kZXMoKS5tYXAoZnVuY3Rpb24odSkgewogICAgICAgICAgICB2YXIgdmFsdWUgPSBncmFwaC5ub2RlKHUpOwogICAgICAgICAgICByZXR1cm4gdmFsdWVbZGVidWdBbGlnbm1lbnRdIC0gdmFsdWUud2lkdGggLyAyOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIC8vIFVwZGF0ZSBub2RlIHBvc2l0aW9ucwogICAgICAgICAgZ3JhcGguZWFjaE5vZGUoZnVuY3Rpb24odSwgdmFsdWUpIHsKICAgICAgICAgICAgdmFsdWUueCA9IHZhbHVlW2RlYnVnQWxpZ25tZW50XSAtIG1pblg7CiAgICAgICAgICB9KTsKCiAgICAgICAgICAvLyBVcGRhdGUgZWRnZSBwb3NpdGlvbnMKICAgICAgICAgIGdyYXBoLmVhY2hFZGdlKGZ1bmN0aW9uKGUsIHUsIHYsIHZhbHVlKSB7CiAgICAgICAgICAgIHZhbHVlLnBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uKHApIHsKICAgICAgICAgICAgICBwLnggPSBwW2RlYnVnQWxpZ25tZW50XSAtIG1pblg7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIC8vIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIGxpbmUgdG8gZ2V0IHN0cmFpZ2h0IGVkZ2VzCiAgICAgIC8vcmVuZGVyZXIuZWRnZUludGVycG9sYXRlKCdsaW5lYXInKTsKCiAgICAgIC8vIEN1c3RvbSB0cmFuc2l0aW9uIGZ1bmN0aW9uCiAgICAgIGZ1bmN0aW9uIHRyYW5zaXRpb24oc2VsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIHNlbGVjdGlvbi50cmFuc2l0aW9uKCkuZHVyYXRpb24oNTAwKTsKICAgICAgfQoKICAgICAgcmVuZGVyZXIudHJhbnNpdGlvbih0cmFuc2l0aW9uKTsKCiAgICAgIHZhciBsYXlvdXQgPSByZW5kZXJlci5ydW4ocmVzdWx0LCBzdmcuc2VsZWN0KCJnIikpOwogICAgICB0cmFuc2l0aW9uKGQzLnNlbGVjdCgic3ZnIikpCiAgICAgICAgLmF0dHIoIndpZHRoIiwgbGF5b3V0LmdyYXBoKCkud2lkdGggKyA0MCkKICAgICAgICAuYXR0cigiaGVpZ2h0IiwgbGF5b3V0LmdyYXBoKCkuaGVpZ2h0ICsgNDApCiAgICB9CiAgfQp9Cjwvc2NyaXB0Pgo=",
                "body": "PCFkb2N0eXBlIGh0bWw+Cgo8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+Cjx0aXRsZT5EYWdyZSBJbnRlcmFjdGl2ZSBEZW1vPC90aXRsZT4KCjxzY3JpcHQgc3JjPSJodHRwOi8vZDNqcy5vcmcvZDMudjMuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iLi4vYnVpbGQvZGFncmUtZDMuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cDovL2NwZXR0aXR0LmdpdGh1Yi5pby9wcm9qZWN0L2dyYXBobGliLWRvdC9sYXRlc3QvZ3JhcGhsaWItZG90Lm1pbi5qcyI+PC9zY3JpcHQ+Cgo8c3R5bGU+CnN2ZyB7CiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cgp0ZXh0IHsKICBmb250LXdlaWdodDogMzAwOwogIGZvbnQtZmFtaWx5OiAiSGVsdmV0aWNhIE5ldWUiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmY7CiAgZm9udC1zaXplOiAxNHB4Owp9Cgoubm9kZSByZWN0IHsKICBzdHJva2U6ICMzMzM7CiAgc3Ryb2tlLXdpZHRoOiAycHg7CiAgZmlsbDogI2ZmZjsKfQoKLmVkZ2VMYWJlbCByZWN0IHsKICBmaWxsOiAjZmZmOwp9CgouZWRnZVBhdGggcGF0aCB7CiAgc3Ryb2tlOiAjMzMzOwogIHN0cm9rZS13aWR0aDogMS41cHg7CiAgZmlsbDogbm9uZTsKfQo8L3N0eWxlPgoKPHN0eWxlPgpoMSwgaDIgewogIGNvbG9yOiAjMzMzOwp9Cgp0ZXh0YXJlYSB7CiAgd2lkdGg6IDgwMHB4Owp9CgpsYWJlbCB7CiAgbWFyZ2luLXRvcDogMWVtOwogIGRpc3BsYXk6IGJsb2NrOwp9CgouZXJyb3IgewogIGNvbG9yOiByZWQ7Cn0KPC9zdHlsZT4KCjxib2R5IG9uTG9hZD0idHJ5RHJhdygpOyI+Cgo8aDE+RGFncmUgSW50ZXJhY3RpdmUgRGVtbzwvaDE+Cgo8aDI+SW5wdXQ8L2gyPgoKPGZvcm0+CiAgPGxhYmVsIGZvcj0iaW5wdXRHcmFwaCI+R3JhcGh2aXogRGVmaW5pdGlvbjwvbGFiZWw+CiAgPHRleHRhcmVhIGlkPSJpbnB1dEdyYXBoIiByb3dzPSI1IiBzdHlsZT0iZGlzcGxheTogYmxvY2siIG9uS2V5VXA9InRyeURyYXcoKTsiPgovKiBFeGFtcGxlICovCmRpZ3JhcGggewogICAgLyogTm90ZTogSFRNTCBsYWJlbHMgZG8gbm90IHdvcmsgaW4gSUUsIHdoaWNoIGxhY2tzIHN1cHBvcnQgZm9yICZsdDtmb3JlaWduT2JqZWN0Jmd0OyB0YWdzLiAqLwogICAgQSBbbGFiZWw9IjxkaXYgc3R5bGU9J3BhZGRpbmc6IDEwcHg7Jz5BIDxzcGFuIHN0eWxlPSdmb250LXNpemU6MzJweCc+QmlnPC9zcGFuPiA8c3BhbiBzdHlsZT0nY29sb3I6cmVkOyc+SFRNTDwvc3Bhbj4gU291cmNlITwvZGl2PiJdOwogICAgQzsKICAgIEUgW2xhYmVsPSJBIHNpbmsiXTsKICAgIEEgLSZndDsgQiAtJmd0OyBDOwogICAgQiAtJmd0OyBEIC0mZ3Q7IEU7CiAgICBDIC0mZ3Q7IEU7CiAgICBBIC0mZ3Q7IEQgW2xhYmVsPSI8ZGl2PkEgbXVsdGktcmFuayA8c3BhbiBzdHlsZT0nY29sb3I6Ymx1ZTsnPkhUTUw8L3NwYW4+IGVkZ2UhPC9kaXY+Il07Cn0KICA8L3RleHRhcmVhPgoKICA8YSBpZD0iZ3JhcGhMaW5rIj5MaW5rIGZvciB0aGlzIGdyYXBoPC9hPgo8L2Zvcm0+Cgo8aDI+R3JhcGggVmlzdWFsaXphdGlvbjwvaDI+Cgo8c3ZnIHdpZHRoPTgwMCBoZWlnaHQ9NjAwPgogIDxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKDIwLCAyMCkiLz4KPC9zdmc+Cgo8c2NyaXB0PgovLyBJbnB1dCByZWxhdGVkIGNvZGUgZ29lcyBoZXJlCgpmdW5jdGlvbiBncmFwaFRvVVJMKCkgewogIHZhciBlbGVtcyA9IFt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsICcvLycsCiAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0LAogICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsCiAgICAgICAgICAgICAgICc/J107CgogIHZhciBxdWVyeVBhcmFtcyA9IFtdOwogIGlmIChkZWJ1Z0FsaWdubWVudCkgewogICAgcXVlcnlQYXJhbXMucHVzaCgnYWxpZ25tZW50PScgKyBkZWJ1Z0FsaWdubWVudCk7CiAgfQogIHF1ZXJ5UGFyYW1zLnB1c2goJ2dyYXBoPScgKyBlbmNvZGVVUklDb21wb25lbnQoaW5wdXRHcmFwaC52YWx1ZSkpOwogIGVsZW1zLnB1c2gocXVlcnlQYXJhbXMuam9pbignJicpKTsKCiAgcmV0dXJuIGVsZW1zLmpvaW4oJycpOwp9Cgp2YXIgaW5wdXRHcmFwaCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNpbnB1dEdyYXBoIik7Cgp2YXIgZ3JhcGhMaW5rID0gZDMuc2VsZWN0KCIjZ3JhcGhMaW5rIik7Cgp2YXIgb2xkSW5wdXRHcmFwaFZhbHVlOwoKdmFyIGdyYXBoUkUgPSAvWz8mXWdyYXBoPShbXiZdKykvOwp2YXIgZ3JhcGhNYXRjaCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gubWF0Y2goZ3JhcGhSRSk7CmlmIChncmFwaE1hdGNoKSB7CiAgaW5wdXRHcmFwaC52YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChncmFwaE1hdGNoWzFdKTsKfQp2YXIgZGVidWdBbGlnbm1lbnRSRSA9IC9bPyZdYWxpZ25tZW50PShbXiZdKykvOwp2YXIgZGVidWdBbGlnbm1lbnRNYXRjaCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gubWF0Y2goZGVidWdBbGlnbm1lbnRSRSk7CnZhciBkZWJ1Z0FsaWdubWVudDsKaWYgKGRlYnVnQWxpZ25tZW50TWF0Y2gpIGRlYnVnQWxpZ25tZW50ID0gZGVidWdBbGlnbm1lbnRNYXRjaFsxXTsKCmZ1bmN0aW9uIHRyeURyYXcoKSB7CiAgdmFyIHJlc3VsdDsKICBpZiAob2xkSW5wdXRHcmFwaFZhbHVlICE9PSBpbnB1dEdyYXBoLnZhbHVlKSB7CiAgICBpbnB1dEdyYXBoLnNldEF0dHJpYnV0ZSgiY2xhc3MiLCAiIik7CiAgICBvbGRJbnB1dEdyYXBoVmFsdWUgPSBpbnB1dEdyYXBoLnZhbHVlOwogICAgdHJ5IHsKICAgICAgcmVzdWx0ID0gZ3JhcGhsaWJEb3QucGFyc2UoaW5wdXRHcmFwaC52YWx1ZSk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGlucHV0R3JhcGguc2V0QXR0cmlidXRlKCJjbGFzcyIsICJlcnJvciIpOwogICAgICB0aHJvdyBlOwogICAgfQoKICAgIGlmIChyZXN1bHQpIHsKICAgICAgLy8gU2F2ZSBsaW5rIHRvIG5ldyBncmFwaAogICAgICBncmFwaExpbmsuYXR0cigiaHJlZiIsIGdyYXBoVG9VUkwoKSk7CgogICAgICAvLyBDbGVhbnVwIG9sZCBncmFwaAogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCJzdmciKTsKCiAgICAgIHZhciByZW5kZXJlciA9IG5ldyBkYWdyZUQzLlJlbmRlcmVyKCk7CgogICAgICAvLyBIYW5kbGUgZGVidWdBbGlnbm1lbnQKICAgICAgcmVuZGVyZXIucG9zdExheW91dChmdW5jdGlvbihncmFwaCkgewogICAgICAgIGlmIChkZWJ1Z0FsaWdubWVudCkgewogICAgICAgICAgLy8gRmlyc3QgZmluZCBuZWNlc3NhcnkgZGVsdGEuLi4KICAgICAgICAgIHZhciBtaW5YID0gTWF0aC5taW4uYXBwbHkobnVsbCwgZ3JhcGgubm9kZXMoKS5tYXAoZnVuY3Rpb24odSkgewogICAgICAgICAgICB2YXIgdmFsdWUgPSBncmFwaC5ub2RlKHUpOwogICAgICAgICAgICByZXR1cm4gdmFsdWVbZGVidWdBbGlnbm1lbnRdIC0gdmFsdWUud2lkdGggLyAyOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIC8vIFVwZGF0ZSBub2RlIHBvc2l0aW9ucwogICAgICAgICAgZ3JhcGguZWFjaE5vZGUoZnVuY3Rpb24odSwgdmFsdWUpIHsKICAgICAgICAgICAgdmFsdWUueCA9IHZhbHVlW2RlYnVnQWxpZ25tZW50XSAtIG1pblg7CiAgICAgICAgICB9KTsKCiAgICAgICAgICAvLyBVcGRhdGUgZWRnZSBwb3NpdGlvbnMKICAgICAgICAgIGdyYXBoLmVhY2hFZGdlKGZ1bmN0aW9uKGUsIHUsIHYsIHZhbHVlKSB7CiAgICAgICAgICAgIHZhbHVlLnBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uKHApIHsKICAgICAgICAgICAgICBwLnggPSBwW2RlYnVnQWxpZ25tZW50XSAtIG1pblg7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIC8vIFVuY29tbWVudCB0aGUgZm9sbG93aW5nIGxpbmUgdG8gZ2V0IHN0cmFpZ2h0IGVkZ2VzCiAgICAgIC8vcmVuZGVyZXIuZWRnZUludGVycG9sYXRlKCdsaW5lYXInKTsKCiAgICAgIC8vIEN1c3RvbSB0cmFuc2l0aW9uIGZ1bmN0aW9uCiAgICAgIGZ1bmN0aW9uIHRyYW5zaXRpb24oc2VsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIHNlbGVjdGlvbi50cmFuc2l0aW9uKCkuZHVyYXRpb24oNTAwKTsKICAgICAgfQoKICAgICAgcmVuZGVyZXIudHJhbnNpdGlvbih0cmFuc2l0aW9uKTsKCiAgICAgIHZhciBsYXlvdXQgPSByZW5kZXJlci5ydW4ocmVzdWx0LCBzdmcuc2VsZWN0KCJnIikpOwogICAgICB0cmFuc2l0aW9uKGQzLnNlbGVjdCgic3ZnIikpCiAgICAgICAgLmF0dHIoIndpZHRoIiwgbGF5b3V0LmdyYXBoKCkud2lkdGggKyA0MCkKICAgICAgICAuYXR0cigiaGVpZ2h0IiwgbGF5b3V0LmdyYXBoKCkuaGVpZ2h0ICsgNDApCiAgICB9CiAgfQp9Cjwvc2NyaXB0Pgo=",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sun, 09 Nov 2014 03:27:36 GMT",
                    "Content-Length": "4307",
                    "Date": "Sun, 09 Nov 2014 03:27:36 GMT",
                    "Content-Type": "text/html; charset=utf-8"
                },
                "cookies": [],
                "mimeType": "HTML",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}