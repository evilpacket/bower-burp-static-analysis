{
    "url": "http://localhost:9999/moimikey/jwplayer/jwplayer.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cross-site scripting (DOM-based)",
    "issueType": 2097936,
    "severity": "High",
    "confidence": "Firm",
    "issueBackground": "DOM-based cross-site scripting vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the HTML document in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.<br><br>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.<br><br>Users can be induced to visit the attacker's crafted URL in various ways, similar to the usual attack delivery vectors for reflected cross-site scripting vulnerabilities. ",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cross-site scripting vulnerabilities is not to dynamically write data into the HTML document that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing script code into the document. In many cases, the relevant data can be validated on a whitelist basis, to allow only content that is known to be safe. In other cases, it will be necessary to sanitize or encode the data. This can be a complex task, and depending on the context that the data is to be inserted may need to involve a combination of JavaScript escaping, HTML encoding, and URL encoding, in the appropriate sequence.",
    "issueDetail": "The application may be vulnerable to DOM-based cross-site scripting. Data is read from <b>window.location.href</b> and written to <b>the 'outerHTML' property of a DOM element</b> via the following statements:<ul><li>h=window.location.href.split(\"/\");</li><li>h=h.join(\"/\");</li><li>e.outerHTML= h</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/moimikey/jwplayer/jwplayer.js",
                "path": "/moimikey/jwplayer/jwplayer.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9tb2ltaWtleS9qd3BsYXllci9qd3BsYXllci5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNDk3NzcNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkRhdGU6IEZyaSwgMDcgTm92IDIwMTQgMDc6NTU6NTYgR01UDQpMYXN0LU1vZGlmaWVkOiBGcmksIDA3IE5vdiAyMDE0IDA3OjU1OjU2IEdNVA0KDQoidW5kZWZpbmVkIj09dHlwZW9mIGp3cGxheWVyJiYoandwbGF5ZXI9ZnVuY3Rpb24oZCl7aWYoandwbGF5ZXIuYXBpKXJldHVybiBqd3BsYXllci5hcGkuc2VsZWN0UGxheWVyKGQpfSxqd3BsYXllci52ZXJzaW9uPSI2LjYuMzg2NyIsandwbGF5ZXIudmlkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInZpZGVvIiksandwbGF5ZXIuYXVkaW89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXVkaW8iKSxqd3BsYXllci5zb3VyY2U9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic291cmNlIiksZnVuY3Rpb24oZCl7ZnVuY3Rpb24gYShiKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gYyhiKX19ZnVuY3Rpb24gayhiKXtyZXR1cm4gZnVuY3Rpb24oKXtiKCJFcnJvciBsb2FkaW5nIGZpbGUiKX19ZnVuY3Rpb24gZihtLGEsZSxnKXtyZXR1cm4gZnVuY3Rpb24oKXt0cnl7dmFyIGM9bS5yZXNwb25zZVhNTDtpZihjJiZjLmZpcnN0Q2hpbGQpcmV0dXJuIGUobSl9Y2F0Y2goail7fShjPWIucGFyc2VYTUwobS5yZXNwb25zZVRleHQpKSYmCmMuZmlyc3RDaGlsZD8obT1iLmV4dGVuZCh7fSxtLHtyZXNwb25zZVhNTDpjfSksZShtKSk6ZyYmZyhtLnJlc3BvbnNlVGV4dD8iSW52YWxpZCBYTUwiOmEpfX12YXIgaD1kb2N1bWVudCxlPXdpbmRvdyxqPW5hdmlnYXRvcixiPWQudXRpbHM9ZnVuY3Rpb24oKXt9O2IuZXhpc3RzPWZ1bmN0aW9uKGIpe3N3aXRjaCh0eXBlb2YgYil7Y2FzZSAic3RyaW5nIjpyZXR1cm4gMDxiLmxlbmd0aDtjYXNlICJvYmplY3QiOnJldHVybiBudWxsIT09YjtjYXNlICJ1bmRlZmluZWQiOnJldHVybiExfXJldHVybiEwfTtiLnN0eWxlRGltZW5zaW9uPWZ1bmN0aW9uKGIpe3JldHVybiBiKygwPGIudG9TdHJpbmcoKS5pbmRleE9mKCIlIik/IiI6InB4Iil9O2IuZ2V0QWJzb2x1dGVQYXRoPWZ1bmN0aW9uKGEsZSl7Yi5leGlzdHMoZSl8fChlPWgubG9jYXRpb24uaHJlZik7aWYoYi5leGlzdHMoYSkpe3ZhciBjO2lmKGIuZXhpc3RzKGEpKXtjPWEuaW5kZXhPZigiOi8vIik7dmFyIGc9YS5pbmRleE9mKCI/Iik7CmM9MDxjJiYoMD5nfHxnPmMpfWVsc2UgYz12b2lkIDA7aWYoYylyZXR1cm4gYTtjPWUuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCI6Ly8iKSszKTt2YXIgZz1lLnN1YnN0cmluZyhjLmxlbmd0aCxlLmluZGV4T2YoIi8iLGMubGVuZ3RoKzEpKSxqOzA9PT1hLmluZGV4T2YoIi8iKT9qPWEuc3BsaXQoIi8iKTooaj1lLnNwbGl0KCI/IilbMF0saj1qLnN1YnN0cmluZyhjLmxlbmd0aCtnLmxlbmd0aCsxLGoubGFzdEluZGV4T2YoIi8iKSksaj1qLnNwbGl0KCIvIikuY29uY2F0KGEuc3BsaXQoIi8iKSkpO2Zvcih2YXIgZj1bXSx0PTA7dDxqLmxlbmd0aDt0Kyspalt0XSYmKGIuZXhpc3RzKGpbdF0pJiYiLiIhPWpbdF0pJiYoIi4uIj09alt0XT9mLnBvcCgpOmYucHVzaChqW3RdKSk7cmV0dXJuIGMrZysiLyIrZi5qb2luKCIvIil9fTtiLmV4dGVuZD1mdW5jdGlvbigpe3ZhciBhPWIuZXh0ZW5kLmFyZ3VtZW50cztpZigxPGEubGVuZ3RoKXtmb3IodmFyIGU9MTtlPGEubGVuZ3RoO2UrKyliLmZvcmVhY2goYVtlXSwKZnVuY3Rpb24oZSxnKXt0cnl7Yi5leGlzdHMoZykmJihhWzBdW2VdPWcpfWNhdGNoKGMpe319KTtyZXR1cm4gYVswXX1yZXR1cm4gbnVsbH07Yi5sb2c9ZnVuY3Rpb24oYixhKXsidW5kZWZpbmVkIiE9dHlwZW9mIGNvbnNvbGUmJiJ1bmRlZmluZWQiIT10eXBlb2YgY29uc29sZS5sb2cmJihhP2NvbnNvbGUubG9nKGIsYSk6Y29uc29sZS5sb2coYikpfTt2YXIgYz1iLnVzZXJBZ2VudE1hdGNoPWZ1bmN0aW9uKGIpe3JldHVybiBudWxsIT09ai51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaChiKX07Yi5pc0lFPWEoL21zaWUvaSk7Yi5pc0ZGPWEoL2ZpcmVmb3gvaSk7Yi5pc0Nocm9tZT1hKC9jaHJvbWUvaSk7Yi5pc0lPUz1hKC9pUChob25lfGFkfG9kKS9pKTtiLmlzSVBvZD1hKC9pUChob25lfG9kKS9pKTtiLmlzSVBhZD1hKC9pUGFkL2kpO2IuaXNTYWZhcmk2MDI9YSgvTWFjaW50b3NoLipNYWMgT1MgWCAxMF84Lio2XC4wXC5cZCogU2FmYXJpL2kpO2IuaXNTYWZhcmk9ZnVuY3Rpb24oKXtyZXR1cm4gYygvc2FmYXJpL2kpJiYKIWMoL2Nocm9tZS9pKSYmIWMoL2Nocm9taXVtL2kpJiYhYygvYW5kcm9pZC9pKX07Yi5pc0FuZHJvaWQ9ZnVuY3Rpb24oYil7cmV0dXJuIGI/YyhSZWdFeHAoImFuZHJvaWQuKiIrYiwiaSIpKTpjKC9hbmRyb2lkL2kpfTtiLmlzTW9iaWxlPWZ1bmN0aW9uKCl7cmV0dXJuIGIuaXNJT1MoKXx8Yi5pc0FuZHJvaWQoKX07Yi5zYXZlQ29va2llPWZ1bmN0aW9uKGIsYSl7aC5jb29raWU9Imp3cGxheWVyLiIrYisiXHgzZCIrYSsiOyBwYXRoXHgzZC8ifTtiLmdldENvb2tpZXM9ZnVuY3Rpb24oKXtmb3IodmFyIGI9e30sYT1oLmNvb2tpZS5zcGxpdCgiOyAiKSxlPTA7ZTxhLmxlbmd0aDtlKyspe3ZhciBnPWFbZV0uc3BsaXQoIlx4M2QiKTswPT1nWzBdLmluZGV4T2YoImp3cGxheWVyLiIpJiYoYltnWzBdLnN1YnN0cmluZyg5LGdbMF0ubGVuZ3RoKV09Z1sxXSl9cmV0dXJuIGJ9O2IudHlwZU9mPWZ1bmN0aW9uKGIpe3ZhciBhPXR5cGVvZiBiO3JldHVybiJvYmplY3QiPT09YT8hYj8ibnVsbCI6CmIgaW5zdGFuY2VvZiBBcnJheT8iYXJyYXkiOmE6YX07Yi50cmFuc2xhdGVFdmVudFJlc3BvbnNlPWZ1bmN0aW9uKGEsZSl7dmFyIGM9Yi5leHRlbmQoe30sZSk7YT09ZC5ldmVudHMuSldQTEFZRVJfRlVMTFNDUkVFTiYmIWMuZnVsbHNjcmVlbj8oYy5mdWxsc2NyZWVuPSJ0cnVlIj09Yy5tZXNzYWdlPyEwOiExLGRlbGV0ZSBjLm1lc3NhZ2UpOiJvYmplY3QiPT10eXBlb2YgYy5kYXRhPyhjPWIuZXh0ZW5kKGMsYy5kYXRhKSxkZWxldGUgYy5kYXRhKToib2JqZWN0Ij09dHlwZW9mIGMubWV0YWRhdGEmJmIuZGVlcFJlcGxhY2VLZXlOYW1lKGMubWV0YWRhdGEsWyJfX2RvdF9fIiwiX19zcGNfXyIsIl9fZHNoX18iLCJfX2RlZmF1bHRfXyJdLFsiLiIsIiAiLCItIiwiZGVmYXVsdCJdKTtiLmZvcmVhY2goWyJwb3NpdGlvbiIsImR1cmF0aW9uIiwib2Zmc2V0Il0sZnVuY3Rpb24oYixhKXtjW2FdJiYoY1thXT1NYXRoLnJvdW5kKDFFMypjW2FdKS8xRTMpfSk7cmV0dXJuIGN9O2IuZmxhc2hWZXJzaW9uPQpmdW5jdGlvbigpe2lmKGIuaXNBbmRyb2lkKCkpcmV0dXJuIDA7dmFyIGE9ai5wbHVnaW5zLGM7dHJ5e2lmKCJ1bmRlZmluZWQiIT09YSYmKGM9YVsiU2hvY2t3YXZlIEZsYXNoIl0pKXJldHVybiBwYXJzZUludChjLmRlc2NyaXB0aW9uLnJlcGxhY2UoL1xEKyhcZCspXC4uKi8sIiQxIikpfWNhdGNoKGYpe31pZigidW5kZWZpbmVkIiE9dHlwZW9mIGUuQWN0aXZlWE9iamVjdCl0cnl7aWYoYz1uZXcgQWN0aXZlWE9iamVjdCgiU2hvY2t3YXZlRmxhc2guU2hvY2t3YXZlRmxhc2giKSlyZXR1cm4gcGFyc2VJbnQoYy5HZXRWYXJpYWJsZSgiJHZlcnNpb24iKS5zcGxpdCgiICIpWzFdLnNwbGl0KCIsIilbMF0pfWNhdGNoKGcpe31yZXR1cm4gMH07Yi5nZXRTY3JpcHRQYXRoPWZ1bmN0aW9uKGIpe2Zvcih2YXIgYT1oLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKSxjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBnPWFbY10uc3JjO2lmKGcmJjA8PWcuaW5kZXhPZihiKSlyZXR1cm4gZy5zdWJzdHIoMCwKZy5pbmRleE9mKGIpKX1yZXR1cm4iIn07Yi5kZWVwUmVwbGFjZUtleU5hbWU9ZnVuY3Rpb24oYSxjLGUpe3N3aXRjaChkLnV0aWxzLnR5cGVPZihhKSl7Y2FzZSAiYXJyYXkiOmZvcih2YXIgZz0wO2c8YS5sZW5ndGg7ZysrKWFbZ109ZC51dGlscy5kZWVwUmVwbGFjZUtleU5hbWUoYVtnXSxjLGUpO2JyZWFrO2Nhc2UgIm9iamVjdCI6Yi5mb3JlYWNoKGEsZnVuY3Rpb24oYixnKXt2YXIgajtpZihjIGluc3RhbmNlb2YgQXJyYXkmJmUgaW5zdGFuY2VvZiBBcnJheSl7aWYoYy5sZW5ndGghPWUubGVuZ3RoKXJldHVybjtqPWN9ZWxzZSBqPVtjXTtmb3IodmFyIGY9YixoPTA7aDxqLmxlbmd0aDtoKyspZj1mLnJlcGxhY2UoUmVnRXhwKGNbaF0sImciKSxlW2hdKTthW2ZdPWQudXRpbHMuZGVlcFJlcGxhY2VLZXlOYW1lKGcsYyxlKTtiIT1mJiZkZWxldGUgYVtiXX0pfXJldHVybiBhfTt2YXIgbj1iLnBsdWdpblBhdGhUeXBlPXtBQlNPTFVURTowLFJFTEFUSVZFOjEsQ0ROOjJ9O2IuZ2V0UGx1Z2luUGF0aFR5cGU9CmZ1bmN0aW9uKGEpe2lmKCJzdHJpbmciPT10eXBlb2YgYSl7YT1hLnNwbGl0KCI/IilbMF07dmFyIGM9YS5pbmRleE9mKCI6Ly8iKTtpZigwPGMpcmV0dXJuIG4uQUJTT0xVVEU7dmFyIGU9YS5pbmRleE9mKCIvIik7YT1iLmV4dGVuc2lvbihhKTtyZXR1cm4gMD5jJiYwPmUmJighYXx8IWlzTmFOKGEpKT9uLkNETjpuLlJFTEFUSVZFfX07Yi5nZXRQbHVnaW5OYW1lPWZ1bmN0aW9uKGIpe3JldHVybiBiLnJlcGxhY2UoL14oLipcLyk/KFteLV0qKS0/LipcLihzd2Z8anMpJC8sIiQyIil9O2IuZ2V0UGx1Z2luVmVyc2lvbj1mdW5jdGlvbihiKXtyZXR1cm4gYi5yZXBsYWNlKC9bXi1dKi0/KFteXC5dKikuKiQvLCIkMSIpfTtiLmlzWW91VHViZT1mdW5jdGlvbihiKXtyZXR1cm4vXihodHRwfFwvXC8pLiooeW91dHViZVwuY29tfHlvdXR1XC5iZSlcLy4rLy50ZXN0KGIpfTtiLmlzUnRtcD1mdW5jdGlvbihiLGEpe3JldHVybiAwPT1iLmluZGV4T2YoInJ0bXAiKXx8InJ0bXAiPT1hfTtiLmZvcmVhY2g9CmZ1bmN0aW9uKGEsYyl7dmFyIGUsZztmb3IoZSBpbiBhKSJmdW5jdGlvbiI9PWIudHlwZU9mKGEuaGFzT3duUHJvcGVydHkpP2EuaGFzT3duUHJvcGVydHkoZSkmJihnPWFbZV0sYyhlLGcpKTooZz1hW2VdLGMoZSxnKSl9O2IuaXNIVFRQUz1mdW5jdGlvbigpe3JldHVybiAwPT1lLmxvY2F0aW9uLmhyZWYuaW5kZXhPZigiaHR0cHMiKX07Yi5yZXBvPWZ1bmN0aW9uKCl7dmFyIGE9Imh0dHA6Ly9wLmp3cGNkbi5jb20vIitkLnZlcnNpb24uc3BsaXQoL1xXLykuc3BsaWNlKDAsMikuam9pbigiLyIpKyIvIjt0cnl7Yi5pc0hUVFBTKCkmJihhPWEucmVwbGFjZSgiaHR0cDovLyIsImh0dHBzOi8vc3NsLiIpKX1jYXRjaChjKXt9cmV0dXJuIGF9O2IuYWpheD1mdW5jdGlvbihhLGMsail7dmFyIGc7MDxhLmluZGV4T2YoIiMiKSYmKGE9YS5yZXBsYWNlKC8jLiokLywiIikpO3ZhciBoO2g9KGg9YSkmJjA8PWguaW5kZXhPZigiOi8vIikmJmguc3BsaXQoIi8iKVsyXSE9ZS5sb2NhdGlvbi5ocmVmLnNwbGl0KCIvIilbMl0/CiEwOiExO2lmKGgmJmIuZXhpc3RzKGUuWERvbWFpblJlcXVlc3QpKWc9bmV3IFhEb21haW5SZXF1ZXN0LGcub25sb2FkPWYoZyxhLGMsaiksZy5vbmVycm9yPWsoaixhLGcpO2Vsc2UgaWYoYi5leGlzdHMoZS5YTUxIdHRwUmVxdWVzdCkpe3ZhciBkPWc9bmV3IFhNTEh0dHBSZXF1ZXN0LHQ9YTtnLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKDQ9PT1kLnJlYWR5U3RhdGUpc3dpdGNoKGQuc3RhdHVzKXtjYXNlIDIwMDpmKGQsdCxjLGopKCk7YnJlYWs7Y2FzZSA0MDQ6aigiRmlsZSBub3QgZm91bmQiKX19O2cub25lcnJvcj1rKGosYSl9ZWxzZSBqJiZqKCk7dHJ5e2cub3BlbigiR0VUIixhLCEwKSxnLnNlbmQobnVsbCl9Y2F0Y2gobil7aiYmaihhKX1yZXR1cm4gZ307Yi5wYXJzZVhNTD1mdW5jdGlvbihiKXt0cnl7dmFyIGE7aWYoZS5ET01QYXJzZXIpe2E9KG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhiLCJ0ZXh0L3htbCIpO3RyeXtpZigicGFyc2VyZXJyb3IiPT0KYS5jaGlsZE5vZGVzWzBdLmZpcnN0Q2hpbGQubm9kZU5hbWUpcmV0dXJufWNhdGNoKGMpe319ZWxzZSBhPW5ldyBBY3RpdmVYT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIiksYS5hc3luYz0iZmFsc2UiLGEubG9hZFhNTChiKTtyZXR1cm4gYX1jYXRjaChnKXt9fTtiLmZpbHRlclBsYXlsaXN0PWZ1bmN0aW9uKGEsYyl7Zm9yKHZhciBlPVtdLGc9MDtnPGEubGVuZ3RoO2crKyl7dmFyIGo9Yi5leHRlbmQoe30sYVtnXSk7ai5zb3VyY2VzPWIuZmlsdGVyU291cmNlcyhqLnNvdXJjZXMpO2lmKDA8ai5zb3VyY2VzLmxlbmd0aCl7Zm9yKHZhciBmPTA7ZjxqLnNvdXJjZXMubGVuZ3RoO2YrKyl7dmFyIGg9ai5zb3VyY2VzW2ZdO2gubGFiZWx8fChoLmxhYmVsPWYudG9TdHJpbmcoKSl9ZS5wdXNoKGopfX1pZihjJiYwPT1lLmxlbmd0aClmb3IoZz0wO2c8YS5sZW5ndGg7ZysrKWlmKGo9Yi5leHRlbmQoe30sYVtnXSksai5zb3VyY2VzPWIuZmlsdGVyU291cmNlcyhqLnNvdXJjZXMsITApLDA8Cmouc291cmNlcy5sZW5ndGgpe2ZvcihmPTA7ZjxqLnNvdXJjZXMubGVuZ3RoO2YrKyloPWouc291cmNlc1tmXSxoLmxhYmVsfHwoaC5sYWJlbD1mLnRvU3RyaW5nKCkpO2UucHVzaChqKX1yZXR1cm4gZX07Yi5maWx0ZXJTb3VyY2VzPWZ1bmN0aW9uKGEsYyl7dmFyIGUsZyxqPWIuZXh0ZW5zaW9ubWFwO2lmKGEpe2c9W107Zm9yKHZhciBmPTA7ZjxhLmxlbmd0aDtmKyspe3ZhciBoPWFbZl0udHlwZSxuPWFbZl0uZmlsZTtuJiZuLnRyaW0mJihuPW4udHJpbSgpKTtofHwoaD1qLmV4dFR5cGUoYi5leHRlbnNpb24obikpLGFbZl0udHlwZT1oKTtjP2QuZW1iZWQuZmxhc2hDYW5QbGF5KG4saCkmJihlfHwoZT1oKSxoPT1lJiZnLnB1c2goYi5leHRlbmQoe30sYVtmXSkpKTpiLmNhblBsYXlIVE1MNShoKSYmKGV8fChlPWgpLGg9PWUmJmcucHVzaChiLmV4dGVuZCh7fSxhW2ZdKSkpfX1yZXR1cm4gZ307Yi5jYW5QbGF5SFRNTDU9ZnVuY3Rpb24oYSl7aWYoYi5pc0FuZHJvaWQoKSYmKCJobHMiPT0KYXx8Im0zdSI9PWF8fCJtM3U4Ij09YSkpcmV0dXJuITE7YT1iLmV4dGVuc2lvbm1hcC50eXBlc1thXTtyZXR1cm4hIWEmJiEhZC52aWQuY2FuUGxheVR5cGUmJmQudmlkLmNhblBsYXlUeXBlKGEpfTtiLnNlY29uZHM9ZnVuY3Rpb24oYSl7YT1hLnJlcGxhY2UoIiwiLCIuIik7dmFyIGI9YS5zcGxpdCgiOiIpLGM9MDsicyI9PWEuc3Vic3RyKC0xKT9jPU51bWJlcihhLnN1YnN0cigwLGEubGVuZ3RoLTEpKToibSI9PWEuc3Vic3RyKC0xKT9jPTYwKk51bWJlcihhLnN1YnN0cigwLGEubGVuZ3RoLTEpKToiaCI9PWEuc3Vic3RyKC0xKT9jPTM2MDAqTnVtYmVyKGEuc3Vic3RyKDAsYS5sZW5ndGgtMSkpOjE8Yi5sZW5ndGg/KGM9TnVtYmVyKGJbYi5sZW5ndGgtMV0pLGMrPTYwKk51bWJlcihiW2IubGVuZ3RoLTJdKSwzPT1iLmxlbmd0aCYmKGMrPTM2MDAqTnVtYmVyKGJbYi5sZW5ndGgtM10pKSk6Yz1OdW1iZXIoYSk7cmV0dXJuIGN9O2Iuc2VyaWFsaXplPWZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT0KYT9udWxsOiJ0cnVlIj09YS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk/ITA6ImZhbHNlIj09YS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk/ITE6aXNOYU4oTnVtYmVyKGEpKXx8NTxhLmxlbmd0aHx8MD09YS5sZW5ndGg/YTpOdW1iZXIoYSl9fShqd3BsYXllciksZnVuY3Rpb24oZCl7dmFyIGE9InZpZGVvLyIsaz1kLmZvcmVhY2gsZj17bXA0OmErIm1wNCIsdm9yYmlzOiJhdWRpby9vZ2ciLG9nZzphKyJvZ2ciLHdlYm06YSsid2VibSIsYWFjOiJhdWRpby9tcDQiLG1wMzoiYXVkaW8vbXBlZyIsaGxzOiJhcHBsaWNhdGlvbi92bmQuYXBwbGUubXBlZ3VybCJ9LGg9e21wNDpmLm1wNCxmNHY6Zi5tcDQsbTR2OmYubXA0LG1vdjpmLm1wNCxtNGE6Zi5hYWMsZjRhOmYuYWFjLGFhYzpmLmFhYyxtcDM6Zi5tcDMsb2d2OmYub2dnLG9nZzpmLnZvcmJpcyxvZ2E6Zi52b3JiaXMsd2VibTpmLndlYm0sbTN1ODpmLmhscyxobHM6Zi5obHN9LGE9InZpZGVvIixhPXtmbHY6YSxmNHY6YSxtb3Y6YSwKbTRhOmEsbTR2OmEsbXA0OmEsYWFjOmEsZjRhOmEsbXAzOiJzb3VuZCIsc21pbDoicnRtcCIsbTN1ODoiaGxzIixobHM6ImhscyJ9LGU9ZC5leHRlbnNpb25tYXA9e307ayhoLGZ1bmN0aW9uKGEsYil7ZVthXT17aHRtbDU6Yn19KTtrKGEsZnVuY3Rpb24oYSxiKXtlW2FdfHwoZVthXT17fSk7ZVthXS5mbGFzaD1ifSk7ZS50eXBlcz1mO2UubWltZVR5cGU9ZnVuY3Rpb24oYSl7dmFyIGI7ayhmLGZ1bmN0aW9uKGMsZSl7IWImJmU9PWEmJihiPWMpfSk7cmV0dXJuIGJ9O2UuZXh0VHlwZT1mdW5jdGlvbihhKXtyZXR1cm4gZS5taW1lVHlwZShoW2FdKX19KGp3cGxheWVyLnV0aWxzKSxmdW5jdGlvbihkKXt2YXIgYT1kLmxvYWRlcnN0YXR1cz17TkVXOjAsTE9BRElORzoxLEVSUk9SOjIsQ09NUExFVEU6M30saz1kb2N1bWVudDtkLnNjcmlwdGxvYWRlcj1mdW5jdGlvbihmKXtmdW5jdGlvbiBoKCl7aj1hLkVSUk9SO2Muc2VuZEV2ZW50KGIuRVJST1IpfWZ1bmN0aW9uIGUoKXtqPWEuQ09NUExFVEU7CmMuc2VuZEV2ZW50KGIuQ09NUExFVEUpfXZhciBqPWEuTkVXLGI9andwbGF5ZXIuZXZlbnRzLGM9bmV3IGIuZXZlbnRkaXNwYXRjaGVyO2QuZXh0ZW5kKHRoaXMsYyk7dGhpcy5sb2FkPWZ1bmN0aW9uKCl7dmFyIGM9ZC5zY3JpcHRsb2FkZXIubG9hZGVyc1tmXTtpZihjJiYoYy5nZXRTdGF0dXMoKT09YS5ORVd8fGMuZ2V0U3RhdHVzKCk9PWEuTE9BRElORykpYy5hZGRFdmVudExpc3RlbmVyKGIuRVJST1IsaCksYy5hZGRFdmVudExpc3RlbmVyKGIuQ09NUExFVEUsZSk7ZWxzZSBpZihkLnNjcmlwdGxvYWRlci5sb2FkZXJzW2ZdPXRoaXMsaj09YS5ORVcpe2o9YS5MT0FESU5HO3ZhciBtPWsuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7bS5hZGRFdmVudExpc3RlbmVyPyhtLm9ubG9hZD1lLG0ub25lcnJvcj1oKTptLnJlYWR5U3RhdGUmJihtLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpeygibG9hZGVkIj09bS5yZWFkeVN0YXRlfHwiY29tcGxldGUiPT1tLnJlYWR5U3RhdGUpJiYKZSgpfSk7ay5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENoaWxkKG0pO20uc3JjPWZ9fTt0aGlzLmdldFN0YXR1cz1mdW5jdGlvbigpe3JldHVybiBqfX07ZC5zY3JpcHRsb2FkZXIubG9hZGVycz17fX0oandwbGF5ZXIudXRpbHMpLGZ1bmN0aW9uKGQpe2QudHJpbT1mdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKC9eXHMqLywiIikucmVwbGFjZSgvXHMqJC8sIiIpfTtkLnBhZD1mdW5jdGlvbihhLGQsZil7Zm9yKGZ8fChmPSIwIik7YS5sZW5ndGg8ZDspYT1mK2E7cmV0dXJuIGF9O2QueG1sQXR0cmlidXRlPWZ1bmN0aW9uKGEsZCl7Zm9yKHZhciBmPTA7ZjxhLmF0dHJpYnV0ZXMubGVuZ3RoO2YrKylpZihhLmF0dHJpYnV0ZXNbZl0ubmFtZSYmYS5hdHRyaWJ1dGVzW2ZdLm5hbWUudG9Mb3dlckNhc2UoKT09ZC50b0xvd2VyQ2FzZSgpKXJldHVybiBhLmF0dHJpYnV0ZXNbZl0udmFsdWUudG9TdHJpbmcoKTtyZXR1cm4iIn07ZC5leHRlbnNpb249ZnVuY3Rpb24oYSl7aWYoIWF8fAoicnRtcCI9PWEuc3Vic3RyKDAsNCkpcmV0dXJuIiI7YT1hLnN1YnN0cmluZyhhLmxhc3RJbmRleE9mKCIvIikrMSxhLmxlbmd0aCkuc3BsaXQoIj8iKVswXS5zcGxpdCgiIyIpWzBdO2lmKC0xPGEubGFzdEluZGV4T2YoIi4iKSlyZXR1cm4gYS5zdWJzdHIoYS5sYXN0SW5kZXhPZigiLiIpKzEsYS5sZW5ndGgpLnRvTG93ZXJDYXNlKCl9O2Quc3RyaW5nVG9Db2xvcj1mdW5jdGlvbihhKXthPWEucmVwbGFjZSgvKCN8MHgpPyhbMC05QS1GXXszLDZ9KSQvZ2ksIiQyIik7Mz09YS5sZW5ndGgmJihhPWEuY2hhckF0KDApK2EuY2hhckF0KDApK2EuY2hhckF0KDEpK2EuY2hhckF0KDEpK2EuY2hhckF0KDIpK2EuY2hhckF0KDIpKTtyZXR1cm4gcGFyc2VJbnQoYSwxNil9fShqd3BsYXllci51dGlscyksZnVuY3Rpb24oZCl7dmFyIGE9InRvdWNobW92ZSIsaz0idG91Y2hzdGFydCI7ZC50b3VjaD1mdW5jdGlvbihmKXtmdW5jdGlvbiBoKGIpe2IudHlwZT09az8oYz0hMCxtPWoobC5EUkFHX1NUQVJULApiKSk6Yi50eXBlPT1hP2MmJihwfHwoZShsLkRSQUdfU1RBUlQsYixtKSxwPSEwKSxlKGwuRFJBRyxiKSk6KGMmJihwP2UobC5EUkFHX0VORCxiKTooYi5jYW5jZWxCdWJibGU9ITAsZShsLlRBUCxiKSkpLGM9cD0hMSxtPW51bGwpfWZ1bmN0aW9uIGUoYSxiLGMpe2lmKG5bYV0mJihiLnByZXZlbnRNYW5pcHVsYXRpb24mJmIucHJldmVudE1hbmlwdWxhdGlvbigpLGIucHJldmVudERlZmF1bHQmJmIucHJldmVudERlZmF1bHQoKSxiPWM/YzpqKGEsYikpKW5bYV0oYil9ZnVuY3Rpb24gaihhLGMpe3ZhciBlPW51bGw7Yy50b3VjaGVzJiZjLnRvdWNoZXMubGVuZ3RoP2U9Yy50b3VjaGVzWzBdOmMuY2hhbmdlZFRvdWNoZXMmJmMuY2hhbmdlZFRvdWNoZXMubGVuZ3RoJiYoZT1jLmNoYW5nZWRUb3VjaGVzWzBdKTtpZighZSlyZXR1cm4gbnVsbDt2YXIgaj1iLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGU9e3R5cGU6YSx0YXJnZXQ6Yix4OmUucGFnZVgtd2luZG93LnBhZ2VYT2Zmc2V0LWoubGVmdCwKeTplLnBhZ2VZLGRlbHRhWDowLGRlbHRhWTowfTthIT1sLlRBUCYmbSYmKGUuZGVsdGFYPWUueC1tLngsZS5kZWx0YVk9ZS55LW0ueSk7cmV0dXJuIGV9dmFyIGI9ZixjPSExLG49e30sbT1udWxsLHA9ITEsbD1kLnRvdWNoRXZlbnRzO2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoYSxoKTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaGVuZCIsZnVuY3Rpb24oYSl7YyYmcCYmZShsLkRSQUdfRU5ELGEpO2M9cD0hMTttPW51bGx9KTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaGNhbmNlbCIsaCk7Zi5hZGRFdmVudExpc3RlbmVyKGssaCk7Zi5hZGRFdmVudExpc3RlbmVyKCJ0b3VjaGVuZCIsaCk7dGhpcy5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGEsYil7blthXT1ifTt0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oYSl7ZGVsZXRlIG5bYV19O3JldHVybiB0aGlzfX0oandwbGF5ZXIudXRpbHMpLGZ1bmN0aW9uKGQpe2QudG91Y2hFdmVudHM9CntEUkFHOiJqd3BsYXllckRyYWciLERSQUdfU1RBUlQ6Imp3cGxheWVyRHJhZ1N0YXJ0IixEUkFHX0VORDoiandwbGF5ZXJEcmFnRW5kIixUQVA6Imp3cGxheWVyVGFwIn19KGp3cGxheWVyLnV0aWxzKSxmdW5jdGlvbihkKXtkLmtleT1mdW5jdGlvbihhKXt2YXIgayxmLGg7dGhpcy5lZGl0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIGgmJmguZ2V0VGltZSgpPChuZXcgRGF0ZSkuZ2V0VGltZSgpPyJpbnZhbGlkIjprfTt0aGlzLnRva2VuPWZ1bmN0aW9uKCl7cmV0dXJuIGZ9O2QuZXhpc3RzKGEpfHwoYT0iIik7dHJ5e2E9ZC50ZWEuZGVjcnlwdChhLCIzNlFYcTRXQEdTQlZedGVSIik7dmFyIGU9YS5zcGxpdCgiLyIpOyhrPWVbMF0pPy9eKGZyZWV8cHJvfHByZW1pdW18YWRzKSQvaS50ZXN0KGspPyhmPWVbMV0sZVsyXSYmMDxwYXJzZUludChlWzJdKSYmKGg9bmV3IERhdGUsaC5zZXRUaW1lKFN0cmluZyhlWzJdKSkpKTprPSJpbnZhbGlkIjprPSJmcmVlIn1jYXRjaChqKXtrPSJpbnZhbGlkIn19fShqd3BsYXllci51dGlscyksCmZ1bmN0aW9uKGQpe3ZhciBhPWQudGVhPXt9O2EuZW5jcnlwdD1mdW5jdGlvbihoLGUpe2lmKDA9PWgubGVuZ3RoKXJldHVybiIiO3ZhciBqPWEuc3RyVG9Mb25ncyhmLmVuY29kZShoKSk7MT49ai5sZW5ndGgmJihqWzFdPTApO2Zvcih2YXIgYj1hLnN0clRvTG9uZ3MoZi5lbmNvZGUoZSkuc2xpY2UoMCwxNikpLGM9ai5sZW5ndGgsZD1qW2MtMV0sbT1qWzBdLHAsbD1NYXRoLmZsb29yKDYrNTIvYyksZz0wOzA8bC0tOyl7Zys9MjY1NDQzNTc2OTtwPWc+Pj4yJjM7Zm9yKHZhciBxPTA7cTxjO3ErKyltPWpbKHErMSklY10sZD0oZD4+PjVebTw8MikrKG0+Pj4zXmQ8PDQpXihnXm0pKyhiW3EmM15wXV5kKSxkPWpbcV0rPWR9aj1hLmxvbmdzVG9TdHIoaik7cmV0dXJuIGsuZW5jb2RlKGopfTthLmRlY3J5cHQ9ZnVuY3Rpb24oaCxlKXtpZigwPT1oLmxlbmd0aClyZXR1cm4iIjtmb3IodmFyIGo9YS5zdHJUb0xvbmdzKGsuZGVjb2RlKGgpKSxiPWEuc3RyVG9Mb25ncyhmLmVuY29kZShlKS5zbGljZSgwLAoxNikpLGM9ai5sZW5ndGgsZD1qW2MtMV0sbT1qWzBdLHAsbD0yNjU0NDM1NzY5Kk1hdGguZmxvb3IoNis1Mi9jKTswIT1sOyl7cD1sPj4+MiYzO2Zvcih2YXIgZz1jLTE7MDw9ZztnLS0pZD1qWzA8Zz9nLTE6Yy0xXSxkPShkPj4+NV5tPDwyKSsobT4+PjNeZDw8NCleKGxebSkrKGJbZyYzXnBdXmQpLG09altnXS09ZDtsLT0yNjU0NDM1NzY5fWo9YS5sb25nc1RvU3RyKGopO2o9ai5yZXBsYWNlKC9cMCskLywiIik7cmV0dXJuIGYuZGVjb2RlKGopfTthLnN0clRvTG9uZ3M9ZnVuY3Rpb24oYSl7Zm9yKHZhciBlPUFycmF5KE1hdGguY2VpbChhLmxlbmd0aC80KSksaj0wO2o8ZS5sZW5ndGg7aisrKWVbal09YS5jaGFyQ29kZUF0KDQqaikrKGEuY2hhckNvZGVBdCg0KmorMSk8PDgpKyhhLmNoYXJDb2RlQXQoNCpqKzIpPDwxNikrKGEuY2hhckNvZGVBdCg0KmorMyk8PDI0KTtyZXR1cm4gZX07YS5sb25nc1RvU3RyPWZ1bmN0aW9uKGEpe2Zvcih2YXIgZT1BcnJheShhLmxlbmd0aCksaj0KMDtqPGEubGVuZ3RoO2orKyllW2pdPVN0cmluZy5mcm9tQ2hhckNvZGUoYVtqXSYyNTUsYVtqXT4+PjgmMjU1LGFbal0+Pj4xNiYyNTUsYVtqXT4+PjI0JjI1NSk7cmV0dXJuIGUuam9pbigiIil9O3ZhciBrPXtjb2RlOiJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXHgzZCIsZW5jb2RlOmZ1bmN0aW9uKGEsZSl7dmFyIGosYixjLGQsbT1bXSxwPSIiLGwsZyxxPWsuY29kZTtnPSgidW5kZWZpbmVkIj09dHlwZW9mIGU/MDplKT9mLmVuY29kZShhKTphO2w9Zy5sZW5ndGglMztpZigwPGwpZm9yKDszPmwrKzspcCs9Ilx4M2QiLGcrPSJceDAwIjtmb3IobD0wO2w8Zy5sZW5ndGg7bCs9MylqPWcuY2hhckNvZGVBdChsKSxiPWcuY2hhckNvZGVBdChsKzEpLGM9Zy5jaGFyQ29kZUF0KGwrMiksZD1qPDwxNnxiPDw4fGMsaj1kPj4xOCY2MyxiPWQ+PjEyJjYzLGM9ZD4+NiY2MyxkJj02MyxtW2wvM109cS5jaGFyQXQoaikrCnEuY2hhckF0KGIpK3EuY2hhckF0KGMpK3EuY2hhckF0KGQpO209bS5qb2luKCIiKTtyZXR1cm4gbT1tLnNsaWNlKDAsbS5sZW5ndGgtcC5sZW5ndGgpK3B9LGRlY29kZTpmdW5jdGlvbihhLGUpe2U9InVuZGVmaW5lZCI9PXR5cGVvZiBlPyExOmU7dmFyIGosYixjLGQsbSxwPVtdLGwsZz1rLmNvZGU7bD1lP2YuZGVjb2RlKGEpOmE7Zm9yKHZhciBxPTA7cTxsLmxlbmd0aDtxKz00KWo9Zy5pbmRleE9mKGwuY2hhckF0KHEpKSxiPWcuaW5kZXhPZihsLmNoYXJBdChxKzEpKSxkPWcuaW5kZXhPZihsLmNoYXJBdChxKzIpKSxtPWcuaW5kZXhPZihsLmNoYXJBdChxKzMpKSxjPWo8PDE4fGI8PDEyfGQ8PDZ8bSxqPWM+Pj4xNiYyNTUsYj1jPj4+OCYyNTUsYyY9MjU1LHBbcS80XT1TdHJpbmcuZnJvbUNoYXJDb2RlKGosYixjKSw2ND09bSYmKHBbcS80XT1TdHJpbmcuZnJvbUNoYXJDb2RlKGosYikpLDY0PT1kJiYocFtxLzRdPVN0cmluZy5mcm9tQ2hhckNvZGUoaikpO2Q9cC5qb2luKCIiKTsKcmV0dXJuIGU/Zi5kZWNvZGUoZCk6ZH19LGY9e2VuY29kZTpmdW5jdGlvbihhKXthPWEucmVwbGFjZSgvW1x1MDA4MC1cdTA3ZmZdL2csZnVuY3Rpb24oYSl7YT1hLmNoYXJDb2RlQXQoMCk7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoMTkyfGE+PjYsMTI4fGEmNjMpfSk7cmV0dXJuIGE9YS5yZXBsYWNlKC9bXHUwODAwLVx1ZmZmZl0vZyxmdW5jdGlvbihhKXthPWEuY2hhckNvZGVBdCgwKTtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSgyMjR8YT4+MTIsMTI4fGE+PjYmNjMsMTI4fGEmNjMpfSl9LGRlY29kZTpmdW5jdGlvbihhKXthPWEucmVwbGFjZSgvW1x1MDBlMC1cdTAwZWZdW1x1MDA4MC1cdTAwYmZdW1x1MDA4MC1cdTAwYmZdL2csZnVuY3Rpb24oYSl7YT0oYS5jaGFyQ29kZUF0KDApJjE1KTw8MTJ8KGEuY2hhckNvZGVBdCgxKSY2Myk8PDZ8YS5jaGFyQ29kZUF0KDIpJjYzO3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGEpfSk7cmV0dXJuIGE9YS5yZXBsYWNlKC9bXHUwMGMwLVx1MDBkZl1bXHUwMDgwLVx1MDBiZl0vZywKZnVuY3Rpb24oYSl7YT0oYS5jaGFyQ29kZUF0KDApJjMxKTw8NnxhLmNoYXJDb2RlQXQoMSkmNjM7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYSl9KX19fShqd3BsYXllci51dGlscyksZnVuY3Rpb24oZCl7ZC5ldmVudHM9e0NPTVBMRVRFOiJDT01QTEVURSIsRVJST1I6IkVSUk9SIixBUElfUkVBRFk6Imp3cGxheWVyQVBJUmVhZHkiLEpXUExBWUVSX1JFQURZOiJqd3BsYXllclJlYWR5IixKV1BMQVlFUl9GVUxMU0NSRUVOOiJqd3BsYXllckZ1bGxzY3JlZW4iLEpXUExBWUVSX1JFU0laRToiandwbGF5ZXJSZXNpemUiLEpXUExBWUVSX0VSUk9SOiJqd3BsYXllckVycm9yIixKV1BMQVlFUl9TRVRVUF9FUlJPUjoiandwbGF5ZXJTZXR1cEVycm9yIixKV1BMQVlFUl9NRURJQV9CRUZPUkVQTEFZOiJqd3BsYXllck1lZGlhQmVmb3JlUGxheSIsSldQTEFZRVJfTUVESUFfQkVGT1JFQ09NUExFVEU6Imp3cGxheWVyTWVkaWFCZWZvcmVDb21wbGV0ZSIsSldQTEFZRVJfQ09NUE9ORU5UX1NIT1c6Imp3cGxheWVyQ29tcG9uZW50U2hvdyIsCkpXUExBWUVSX0NPTVBPTkVOVF9ISURFOiJqd3BsYXllckNvbXBvbmVudEhpZGUiLEpXUExBWUVSX01FRElBX0JVRkZFUjoiandwbGF5ZXJNZWRpYUJ1ZmZlciIsSldQTEFZRVJfTUVESUFfQlVGRkVSX0ZVTEw6Imp3cGxheWVyTWVkaWFCdWZmZXJGdWxsIixKV1BMQVlFUl9NRURJQV9FUlJPUjoiandwbGF5ZXJNZWRpYUVycm9yIixKV1BMQVlFUl9NRURJQV9MT0FERUQ6Imp3cGxheWVyTWVkaWFMb2FkZWQiLEpXUExBWUVSX01FRElBX0NPTVBMRVRFOiJqd3BsYXllck1lZGlhQ29tcGxldGUiLEpXUExBWUVSX01FRElBX1NFRUs6Imp3cGxheWVyTWVkaWFTZWVrIixKV1BMQVlFUl9NRURJQV9USU1FOiJqd3BsYXllck1lZGlhVGltZSIsSldQTEFZRVJfTUVESUFfVk9MVU1FOiJqd3BsYXllck1lZGlhVm9sdW1lIixKV1BMQVlFUl9NRURJQV9NRVRBOiJqd3BsYXllck1lZGlhTWV0YSIsSldQTEFZRVJfTUVESUFfTVVURToiandwbGF5ZXJNZWRpYU11dGUiLEpXUExBWUVSX01FRElBX0xFVkVMUzoiandwbGF5ZXJNZWRpYUxldmVscyIsCkpXUExBWUVSX01FRElBX0xFVkVMX0NIQU5HRUQ6Imp3cGxheWVyTWVkaWFMZXZlbENoYW5nZWQiLEpXUExBWUVSX0NBUFRJT05TX0NIQU5HRUQ6Imp3cGxheWVyQ2FwdGlvbnNDaGFuZ2VkIixKV1BMQVlFUl9DQVBUSU9OU19MSVNUOiJqd3BsYXllckNhcHRpb25zTGlzdCIsSldQTEFZRVJfUExBWUVSX1NUQVRFOiJqd3BsYXllclBsYXllclN0YXRlIixzdGF0ZTp7QlVGRkVSSU5HOiJCVUZGRVJJTkciLElETEU6IklETEUiLFBBVVNFRDoiUEFVU0VEIixQTEFZSU5HOiJQTEFZSU5HIn0sSldQTEFZRVJfUExBWUxJU1RfTE9BREVEOiJqd3BsYXllclBsYXlsaXN0TG9hZGVkIixKV1BMQVlFUl9QTEFZTElTVF9JVEVNOiJqd3BsYXllclBsYXlsaXN0SXRlbSIsSldQTEFZRVJfUExBWUxJU1RfQ09NUExFVEU6Imp3cGxheWVyUGxheWxpc3RDb21wbGV0ZSIsSldQTEFZRVJfRElTUExBWV9DTElDSzoiandwbGF5ZXJWaWV3Q2xpY2siLEpXUExBWUVSX0NPTlRST0xTOiJqd3BsYXllclZpZXdDb250cm9scyIsCkpXUExBWUVSX1VTRVJfQUNUSU9OOiJqd3BsYXllclVzZXJBY3Rpb24iLEpXUExBWUVSX0lOU1RSRUFNX0NMSUNLOiJqd3BsYXllckluc3RyZWFtQ2xpY2tlZCIsSldQTEFZRVJfSU5TVFJFQU1fREVTVFJPWUVEOiJqd3BsYXllckluc3RyZWFtRGVzdHJveWVkIixKV1BMQVlFUl9BRF9USU1FOiJqd3BsYXllckFkVGltZSIsSldQTEFZRVJfQURfRVJST1I6Imp3cGxheWVyQWRFcnJvciIsSldQTEFZRVJfQURfQ0xJQ0s6Imp3cGxheWVyQWRDbGlja2VkIixKV1BMQVlFUl9BRF9DT01QTEVURToiandwbGF5ZXJBZENvbXBsZXRlIixKV1BMQVlFUl9BRF9JTVBSRVNTSU9OOiJqd3BsYXllckFkSW1wcmVzc2lvbiIsSldQTEFZRVJfQURfQ09NUEFOSU9OUzoiandwbGF5ZXJBZENvbXBhbmlvbnMifX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWp3cGxheWVyLnV0aWxzO2QuZXZlbnRkaXNwYXRjaGVyPWZ1bmN0aW9uKGQsZil7dmFyIGgsZTt0aGlzLnJlc2V0RXZlbnRMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtoPQp7fTtlPVtdfTt0aGlzLnJlc2V0RXZlbnRMaXN0ZW5lcnMoKTt0aGlzLmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24oZSxiLGMpe3RyeXthLmV4aXN0cyhoW2VdKXx8KGhbZV09W10pLCJzdHJpbmciPT1hLnR5cGVPZihiKSYmKGI9KG5ldyBGdW5jdGlvbigicmV0dXJuICIrYikpKCkpLGhbZV0ucHVzaCh7bGlzdGVuZXI6Yixjb3VudDpjfSl9Y2F0Y2goZil7YS5sb2coImVycm9yIixmKX1yZXR1cm4hMX07dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyPWZ1bmN0aW9uKGUsYil7aWYoaFtlXSl7dHJ5e2Zvcih2YXIgYz0wO2M8aFtlXS5sZW5ndGg7YysrKWlmKGhbZV1bY10ubGlzdGVuZXIudG9TdHJpbmcoKT09Yi50b1N0cmluZygpKXtoW2VdLnNwbGljZShjLDEpO2JyZWFrfX1jYXRjaChmKXthLmxvZygiZXJyb3IiLGYpfXJldHVybiExfX07dGhpcy5hZGRHbG9iYWxMaXN0ZW5lcj1mdW5jdGlvbihmLGIpe3RyeXsic3RyaW5nIj09YS50eXBlT2YoZikmJihmPShuZXcgRnVuY3Rpb24oInJldHVybiAiKwpmKSkoKSksZS5wdXNoKHtsaXN0ZW5lcjpmLGNvdW50OmJ9KX1jYXRjaChjKXthLmxvZygiZXJyb3IiLGMpfXJldHVybiExfTt0aGlzLnJlbW92ZUdsb2JhbExpc3RlbmVyPWZ1bmN0aW9uKGYpe2lmKGYpe3RyeXtmb3IodmFyIGI9MDtiPGUubGVuZ3RoO2IrKylpZihlW2JdLmxpc3RlbmVyLnRvU3RyaW5nKCk9PWYudG9TdHJpbmcoKSl7ZS5zcGxpY2UoYiwxKTticmVha319Y2F0Y2goYyl7YS5sb2coImVycm9yIixjKX1yZXR1cm4hMX19O3RoaXMuc2VuZEV2ZW50PWZ1bmN0aW9uKGosYil7YS5leGlzdHMoYil8fChiPXt9KTthLmV4dGVuZChiLHtpZDpkLHZlcnNpb246andwbGF5ZXIudmVyc2lvbix0eXBlOmp9KTtmJiZhLmxvZyhqLGIpO2lmKCJ1bmRlZmluZWQiIT1hLnR5cGVPZihoW2pdKSlmb3IodmFyIGM9MDtjPGhbal0ubGVuZ3RoO2MrKyl7dHJ5e2hbal1bY10ubGlzdGVuZXIoYil9Y2F0Y2gobil7YS5sb2coIlRoZXJlIHdhcyBhbiBlcnJvciB3aGlsZSBoYW5kbGluZyBhIGxpc3RlbmVyOiAiKwpuLnRvU3RyaW5nKCksaFtqXVtjXS5saXN0ZW5lcil9aFtqXVtjXSYmKDE9PT1oW2pdW2NdLmNvdW50P2RlbGV0ZSBoW2pdW2NdOjA8aFtqXVtjXS5jb3VudCYmKGhbal1bY10uY291bnQtPTEpKX1mb3IoYz0wO2M8ZS5sZW5ndGg7YysrKXt0cnl7ZVtjXS5saXN0ZW5lcihiKX1jYXRjaChtKXthLmxvZygiVGhlcmUgd2FzIGFuIGVycm9yIHdoaWxlIGhhbmRsaW5nIGEgbGlzdGVuZXI6ICIrbS50b1N0cmluZygpLGVbY10ubGlzdGVuZXIpfWVbY10mJigxPT09ZVtjXS5jb3VudD9kZWxldGUgZVtjXTowPGVbY10uY291bnQmJihlW2NdLmNvdW50LT0xKSl9fX19KGp3cGxheWVyLmV2ZW50cyksZnVuY3Rpb24oZCl7dmFyIGE9e30saz17fTtkLnBsdWdpbnM9ZnVuY3Rpb24oKXt9O2QucGx1Z2lucy5sb2FkUGx1Z2lucz1mdW5jdGlvbihmLGgpe2tbZl09bmV3IGQucGx1Z2lucy5wbHVnaW5sb2FkZXIobmV3IGQucGx1Z2lucy5tb2RlbChhKSxoKTtyZXR1cm4ga1tmXX07ZC5wbHVnaW5zLnJlZ2lzdGVyUGx1Z2luPQpmdW5jdGlvbihmLGgsZSxqKXt2YXIgYj1kLnV0aWxzLmdldFBsdWdpbk5hbWUoZik7YVtiXXx8KGFbYl09bmV3IGQucGx1Z2lucy5wbHVnaW4oZikpO2FbYl0ucmVnaXN0ZXJQbHVnaW4oZixoLGUsail9fShqd3BsYXllciksZnVuY3Rpb24oZCl7ZC5wbHVnaW5zLm1vZGVsPWZ1bmN0aW9uKGEpe3RoaXMuYWRkUGx1Z2luPWZ1bmN0aW9uKGspe3ZhciBmPWQudXRpbHMuZ2V0UGx1Z2luTmFtZShrKTthW2ZdfHwoYVtmXT1uZXcgZC5wbHVnaW5zLnBsdWdpbihrKSk7cmV0dXJuIGFbZl19O3RoaXMuZ2V0UGx1Z2lucz1mdW5jdGlvbigpe3JldHVybiBhfX19KGp3cGxheWVyKSxmdW5jdGlvbihkKXt2YXIgYT1qd3BsYXllci51dGlscyxrPWp3cGxheWVyLmV2ZW50cztkLnBsdWdpbm1vZGVzPXtGTEFTSDowLEpBVkFTQ1JJUFQ6MSxIWUJSSUQ6Mn07ZC5wbHVnaW49ZnVuY3Rpb24oZil7ZnVuY3Rpb24gaCgpe3N3aXRjaChhLmdldFBsdWdpblBhdGhUeXBlKGYpKXtjYXNlIGEucGx1Z2luUGF0aFR5cGUuQUJTT0xVVEU6cmV0dXJuIGY7CmNhc2UgYS5wbHVnaW5QYXRoVHlwZS5SRUxBVElWRTpyZXR1cm4gYS5nZXRBYnNvbHV0ZVBhdGgoZix3aW5kb3cubG9jYXRpb24uaHJlZil9fWZ1bmN0aW9uIGUoKXtwPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtiPWEubG9hZGVyc3RhdHVzLkNPTVBMRVRFO2wuc2VuZEV2ZW50KGsuQ09NUExFVEUpfSwxRTMpfWZ1bmN0aW9uIGooKXtiPWEubG9hZGVyc3RhdHVzLkVSUk9SO2wuc2VuZEV2ZW50KGsuRVJST1IpfXZhciBiPWEubG9hZGVyc3RhdHVzLk5FVyxjLG4sbSxwLGw9bmV3IGsuZXZlbnRkaXNwYXRjaGVyO2EuZXh0ZW5kKHRoaXMsbCk7dGhpcy5sb2FkPWZ1bmN0aW9uKCl7aWYoYj09YS5sb2FkZXJzdGF0dXMuTkVXKWlmKDA8Zi5sYXN0SW5kZXhPZigiLnN3ZiIpKWM9ZixiPWEubG9hZGVyc3RhdHVzLkNPTVBMRVRFLGwuc2VuZEV2ZW50KGsuQ09NUExFVEUpO2Vsc2UgaWYoYS5nZXRQbHVnaW5QYXRoVHlwZShmKT09YS5wbHVnaW5QYXRoVHlwZS5DRE4pYj1hLmxvYWRlcnN0YXR1cy5DT01QTEVURSwKbC5zZW5kRXZlbnQoay5DT01QTEVURSk7ZWxzZXtiPWEubG9hZGVyc3RhdHVzLkxPQURJTkc7dmFyIGc9bmV3IGEuc2NyaXB0bG9hZGVyKGgoKSk7Zy5hZGRFdmVudExpc3RlbmVyKGsuQ09NUExFVEUsZSk7Zy5hZGRFdmVudExpc3RlbmVyKGsuRVJST1Isaik7Zy5sb2FkKCl9fTt0aGlzLnJlZ2lzdGVyUGx1Z2luPWZ1bmN0aW9uKGUsZixqLGQpe3AmJihjbGVhclRpbWVvdXQocCkscD12b2lkIDApO209ZjtqJiZkPyhjPWQsbj1qKToic3RyaW5nIj09dHlwZW9mIGo/Yz1qOiJmdW5jdGlvbiI9PXR5cGVvZiBqP249ajohaiYmIWQmJihjPWUpO2I9YS5sb2FkZXJzdGF0dXMuQ09NUExFVEU7bC5zZW5kRXZlbnQoay5DT01QTEVURSl9O3RoaXMuZ2V0U3RhdHVzPWZ1bmN0aW9uKCl7cmV0dXJuIGJ9O3RoaXMuZ2V0UGx1Z2luTmFtZT1mdW5jdGlvbigpe3JldHVybiBhLmdldFBsdWdpbk5hbWUoZil9O3RoaXMuZ2V0Rmxhc2hQYXRoPWZ1bmN0aW9uKCl7aWYoYylzd2l0Y2goYS5nZXRQbHVnaW5QYXRoVHlwZShjKSl7Y2FzZSBhLnBsdWdpblBhdGhUeXBlLkFCU09MVVRFOnJldHVybiBjOwpjYXNlIGEucGx1Z2luUGF0aFR5cGUuUkVMQVRJVkU6cmV0dXJuIDA8Zi5sYXN0SW5kZXhPZigiLnN3ZiIpP2EuZ2V0QWJzb2x1dGVQYXRoKGMsd2luZG93LmxvY2F0aW9uLmhyZWYpOmEuZ2V0QWJzb2x1dGVQYXRoKGMsaCgpKX1yZXR1cm4gbnVsbH07dGhpcy5nZXRKUz1mdW5jdGlvbigpe3JldHVybiBufTt0aGlzLmdldFRhcmdldD1mdW5jdGlvbigpe3JldHVybiBtfTt0aGlzLmdldFBsdWdpbm1vZGU9ZnVuY3Rpb24oKXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIGMmJiJ1bmRlZmluZWQiIT10eXBlb2YgbilyZXR1cm4gZC5wbHVnaW5tb2Rlcy5IWUJSSUQ7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjKXJldHVybiBkLnBsdWdpbm1vZGVzLkZMQVNIO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgbilyZXR1cm4gZC5wbHVnaW5tb2Rlcy5KQVZBU0NSSVBUfTt0aGlzLmdldE5ld0luc3RhbmNlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gbmV3IG4oYSxiLGMpfTt0aGlzLmdldFVSTD1mdW5jdGlvbigpe3JldHVybiBmfX19KGp3cGxheWVyLnBsdWdpbnMpLApmdW5jdGlvbihkKXt2YXIgYT1kLnV0aWxzLGs9ZC5ldmVudHMsZj1hLmZvcmVhY2g7ZC5wbHVnaW5zLnBsdWdpbmxvYWRlcj1mdW5jdGlvbihoLGUpe2Z1bmN0aW9uIGooKXttP2cuc2VuZEV2ZW50KGsuRVJST1Ise21lc3NhZ2U6cH0pOm58fChuPSEwLGM9YS5sb2FkZXJzdGF0dXMuQ09NUExFVEUsZy5zZW5kRXZlbnQoay5DT01QTEVURSkpfWZ1bmN0aW9uIGIoKXtsfHxqKCk7aWYoIW4mJiFtKXt2YXIgYj0wLGM9aC5nZXRQbHVnaW5zKCk7YS5mb3JlYWNoKGwsZnVuY3Rpb24oZSl7ZT1hLmdldFBsdWdpbk5hbWUoZSk7dmFyIGY9Y1tlXTtlPWYuZ2V0SlMoKTt2YXIgZz1mLmdldFRhcmdldCgpLGY9Zi5nZXRTdGF0dXMoKTtpZihmPT1hLmxvYWRlcnN0YXR1cy5MT0FESU5HfHxmPT1hLmxvYWRlcnN0YXR1cy5ORVcpYisrO2Vsc2UgaWYoZSYmKCFnfHxwYXJzZUZsb2F0KGcpPnBhcnNlRmxvYXQoZC52ZXJzaW9uKSkpbT0hMCxwPSJJbmNvbXBhdGlibGUgcGxheWVyIHZlcnNpb24iLGooKX0pOwowPT1iJiZqKCl9fXZhciBjPWEubG9hZGVyc3RhdHVzLk5FVyxuPSExLG09ITEscCxsPWUsZz1uZXcgay5ldmVudGRpc3BhdGNoZXI7YS5leHRlbmQodGhpcyxnKTt0aGlzLnNldHVwUGx1Z2lucz1mdW5jdGlvbihiLGMsZSl7dmFyIGc9e2xlbmd0aDowLHBsdWdpbnM6e319LGo9MCxkPXt9LG49aC5nZXRQbHVnaW5zKCk7ZihjLnBsdWdpbnMsZnVuY3Rpb24oZixoKXt2YXIgaz1hLmdldFBsdWdpbk5hbWUoZiksbD1uW2tdLG09bC5nZXRGbGFzaFBhdGgoKSxxPWwuZ2V0SlMoKSxwPWwuZ2V0VVJMKCk7bSYmKGcucGx1Z2luc1ttXT1hLmV4dGVuZCh7fSxoKSxnLnBsdWdpbnNbbV0ucGx1Z2lubW9kZT1sLmdldFBsdWdpbm1vZGUoKSxnLmxlbmd0aCsrKTt0cnl7aWYocSYmYy5wbHVnaW5zJiZjLnBsdWdpbnNbcF0pe3ZhciBBPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO0EuaWQ9Yi5pZCsiXyIraztBLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSI7QS5zdHlsZS50b3A9MDtBLnN0eWxlLnpJbmRleD0KaisxMDtkW2tdPWwuZ2V0TmV3SW5zdGFuY2UoYixhLmV4dGVuZCh7fSxjLnBsdWdpbnNbcF0pLEEpO2orKztiLm9uUmVhZHkoZShkW2tdLEEsITApKTtiLm9uUmVzaXplKGUoZFtrXSxBKSl9fWNhdGNoKEQpe2EubG9nKCJFUlJPUjogRmFpbGVkIHRvIGxvYWQgIitrKyIuIil9fSk7Yi5wbHVnaW5zPWQ7cmV0dXJuIGd9O3RoaXMubG9hZD1mdW5jdGlvbigpe2lmKCEoYS5leGlzdHMoZSkmJiJvYmplY3QiIT1hLnR5cGVPZihlKSkpe2M9YS5sb2FkZXJzdGF0dXMuTE9BRElORztmKGUsZnVuY3Rpb24oYyl7YS5leGlzdHMoYykmJihjPWguYWRkUGx1Z2luKGMpLGMuYWRkRXZlbnRMaXN0ZW5lcihrLkNPTVBMRVRFLGIpLGMuYWRkRXZlbnRMaXN0ZW5lcihrLkVSUk9SLHEpKX0pO3ZhciBnPWguZ2V0UGx1Z2lucygpO2YoZyxmdW5jdGlvbihhLGIpe2IubG9hZCgpfSl9YigpfTt2YXIgcT10aGlzLnBsdWdpbkZhaWxlZD1mdW5jdGlvbigpe218fChtPSEwLHA9IkZpbGUgbm90IGZvdW5kIixqKCkpfTsKdGhpcy5nZXRTdGF0dXM9ZnVuY3Rpb24oKXtyZXR1cm4gY319fShqd3BsYXllciksZnVuY3Rpb24oKXtqd3BsYXllci5wYXJzZXJzPXtsb2NhbE5hbWU6ZnVuY3Rpb24oZCl7cmV0dXJuIGQ/ZC5sb2NhbE5hbWU/ZC5sb2NhbE5hbWU6ZC5iYXNlTmFtZT9kLmJhc2VOYW1lOiIiOiIifSx0ZXh0Q29udGVudDpmdW5jdGlvbihkKXtyZXR1cm4gZD9kLnRleHRDb250ZW50P2QudGV4dENvbnRlbnQ6ZC50ZXh0P2QudGV4dDoiIjoiIn0sZ2V0Q2hpbGROb2RlOmZ1bmN0aW9uKGQsYSl7cmV0dXJuIGQuY2hpbGROb2Rlc1thXX0sbnVtQ2hpbGRyZW46ZnVuY3Rpb24oZCl7cmV0dXJuIGQuY2hpbGROb2Rlcz9kLmNoaWxkTm9kZXMubGVuZ3RoOjB9fX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWQucGFyc2VyczsoYS5qd3BhcnNlcj1mdW5jdGlvbigpe30pLnBhcnNlRW50cnk9ZnVuY3Rpb24oayxmKXtmb3IodmFyIGg9W10sZT1bXSxqPWQudXRpbHMueG1sQXR0cmlidXRlLGI9MDtiPGsuY2hpbGROb2Rlcy5sZW5ndGg7YisrKXt2YXIgYz0Kay5jaGlsZE5vZGVzW2JdO2lmKCJqd3BsYXllciI9PWMucHJlZml4KXt2YXIgbj1hLmxvY2FsTmFtZShjKTsic291cmNlIj09bj8oZGVsZXRlIGYuc291cmNlcyxoLnB1c2goe2ZpbGU6aihjLCJmaWxlIiksImRlZmF1bHQiOmooYywiZGVmYXVsdCIpLGxhYmVsOmooYywibGFiZWwiKSx0eXBlOmooYywidHlwZSIpfSkpOiJ0cmFjayI9PW4/KGRlbGV0ZSBmLnRyYWNrcyxlLnB1c2goe2ZpbGU6aihjLCJmaWxlIiksImRlZmF1bHQiOmooYywiZGVmYXVsdCIpLGtpbmQ6aihjLCJraW5kIiksbGFiZWw6aihjLCJsYWJlbCIpfSkpOihmW25dPWQudXRpbHMuc2VyaWFsaXplKGEudGV4dENvbnRlbnQoYykpLCJmaWxlIj09biYmZi5zb3VyY2VzJiZkZWxldGUgZi5zb3VyY2VzKX1mLmZpbGV8fChmLmZpbGU9Zi5saW5rKX1pZihoLmxlbmd0aCl7Zi5zb3VyY2VzPVtdO2ZvcihiPTA7YjxoLmxlbmd0aDtiKyspMDxoW2JdLmZpbGUubGVuZ3RoJiYoaFtiXVsiZGVmYXVsdCJdPSJ0cnVlIj09aFtiXVsiZGVmYXVsdCJdPwohMDohMSxoW2JdLmxhYmVsLmxlbmd0aHx8ZGVsZXRlIGhbYl0ubGFiZWwsZi5zb3VyY2VzLnB1c2goaFtiXSkpfWlmKGUubGVuZ3RoKXtmLnRyYWNrcz1bXTtmb3IoYj0wO2I8ZS5sZW5ndGg7YisrKTA8ZVtiXS5maWxlLmxlbmd0aCYmKGVbYl1bImRlZmF1bHQiXT0idHJ1ZSI9PWVbYl1bImRlZmF1bHQiXT8hMDohMSxlW2JdLmtpbmQ9IWVbYl0ua2luZC5sZW5ndGg/ImNhcHRpb25zIjplW2JdLmtpbmQsZVtiXS5sYWJlbC5sZW5ndGh8fGRlbGV0ZSBlW2JdLmxhYmVsLGYudHJhY2tzLnB1c2goZVtiXSkpfXJldHVybiBmfX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWp3cGxheWVyLnV0aWxzLGs9YS54bWxBdHRyaWJ1dGUsZj1kLmxvY2FsTmFtZSxoPWQudGV4dENvbnRlbnQsZT1kLm51bUNoaWxkcmVuLGo9ZC5tZWRpYXBhcnNlcj1mdW5jdGlvbigpe307ai5wYXJzZUdyb3VwPWZ1bmN0aW9uKGIsYyl7dmFyIGQsbSxwPVtdO2ZvcihtPTA7bTxlKGIpO20rKylpZihkPWIuY2hpbGROb2Rlc1ttXSwKIm1lZGlhIj09ZC5wcmVmaXgmJmYoZCkpc3dpdGNoKGYoZCkudG9Mb3dlckNhc2UoKSl7Y2FzZSAiY29udGVudCI6ayhkLCJkdXJhdGlvbiIpJiYoYy5kdXJhdGlvbj1hLnNlY29uZHMoayhkLCJkdXJhdGlvbiIpKSk7MDxlKGQpJiYoYz1qLnBhcnNlR3JvdXAoZCxjKSk7ayhkLCJ1cmwiKSYmKGMuc291cmNlc3x8KGMuc291cmNlcz1bXSksYy5zb3VyY2VzLnB1c2goe2ZpbGU6ayhkLCJ1cmwiKSx0eXBlOmsoZCwidHlwZSIpLHdpZHRoOmsoZCwid2lkdGgiKSxsYWJlbDprKGQsImxhYmVsIil9KSk7YnJlYWs7Y2FzZSAidGl0bGUiOmMudGl0bGU9aChkKTticmVhaztjYXNlICJkZXNjcmlwdGlvbiI6Yy5kZXNjcmlwdGlvbj1oKGQpO2JyZWFrO2Nhc2UgImd1aWQiOmMubWVkaWFpZD1oKGQpO2JyZWFrO2Nhc2UgInRodW1ibmFpbCI6Yy5pbWFnZXx8KGMuaW1hZ2U9ayhkLCJ1cmwiKSk7YnJlYWs7Y2FzZSAiZ3JvdXAiOmoucGFyc2VHcm91cChkLGMpO2JyZWFrO2Nhc2UgInN1YnRpdGxlIjp2YXIgbD0Ke307bC5maWxlPWsoZCwidXJsIik7bC5raW5kPSJjYXB0aW9ucyI7aWYoMDxrKGQsImxhbmciKS5sZW5ndGgpe3ZhciBnPWw7ZD1rKGQsImxhbmciKTt2YXIgcT17emg6IkNoaW5lc2UiLG5sOiJEdXRjaCIsZW46IkVuZ2xpc2giLGZyOiJGcmVuY2giLGRlOiJHZXJtYW4iLGl0OiJJdGFsaWFuIixqYToiSmFwYW5lc2UiLHB0OiJQb3J0dWd1ZXNlIixydToiUnVzc2lhbiIsZXM6IlNwYW5pc2gifTtkPXFbZF0/cVtkXTpkO2cubGFiZWw9ZH1wLnB1c2gobCl9Yy5oYXNPd25Qcm9wZXJ0eSgidHJhY2tzIil8fChjLnRyYWNrcz1bXSk7Zm9yKG09MDttPHAubGVuZ3RoO20rKyljLnRyYWNrcy5wdXNoKHBbbV0pO3JldHVybiBjfX0oandwbGF5ZXIucGFyc2VycyksZnVuY3Rpb24oZCl7ZnVuY3Rpb24gYShhKXtmb3IodmFyIGM9e30sZT0wO2U8YS5jaGlsZE5vZGVzLmxlbmd0aDtlKyspe3ZhciBoPWEuY2hpbGROb2Rlc1tlXSxwPWooaCk7aWYocClzd2l0Y2gocC50b0xvd2VyQ2FzZSgpKXtjYXNlICJlbmNsb3N1cmUiOmMuZmlsZT0Kay54bWxBdHRyaWJ1dGUoaCwidXJsIik7YnJlYWs7Y2FzZSAidGl0bGUiOmMudGl0bGU9ZihoKTticmVhaztjYXNlICJndWlkIjpjLm1lZGlhaWQ9ZihoKTticmVhaztjYXNlICJwdWJkYXRlIjpjLmRhdGU9ZihoKTticmVhaztjYXNlICJkZXNjcmlwdGlvbiI6Yy5kZXNjcmlwdGlvbj1mKGgpO2JyZWFrO2Nhc2UgImxpbmsiOmMubGluaz1mKGgpO2JyZWFrO2Nhc2UgImNhdGVnb3J5IjpjLnRhZ3M9Yy50YWdzP2MudGFncytmKGgpOmYoaCl9fWM9ZC5tZWRpYXBhcnNlci5wYXJzZUdyb3VwKGEsYyk7Yz1kLmp3cGFyc2VyLnBhcnNlRW50cnkoYSxjKTtyZXR1cm4gbmV3IGp3cGxheWVyLnBsYXlsaXN0Lml0ZW0oYyl9dmFyIGs9andwbGF5ZXIudXRpbHMsZj1kLnRleHRDb250ZW50LGg9ZC5nZXRDaGlsZE5vZGUsZT1kLm51bUNoaWxkcmVuLGo9ZC5sb2NhbE5hbWU7ZC5yc3NwYXJzZXI9e307ZC5yc3NwYXJzZXIucGFyc2U9ZnVuY3Rpb24oYil7Zm9yKHZhciBjPVtdLGY9MDtmPGUoYik7ZisrKXt2YXIgZD0KaChiLGYpO2lmKCJjaGFubmVsIj09aihkKS50b0xvd2VyQ2FzZSgpKWZvcih2YXIgaz0wO2s8ZShkKTtrKyspe3ZhciBsPWgoZCxrKTsiaXRlbSI9PWoobCkudG9Mb3dlckNhc2UoKSYmYy5wdXNoKGEobCkpfX1yZXR1cm4gY319KGp3cGxheWVyLnBhcnNlcnMpLGZ1bmN0aW9uKGQpe2QucGxheWxpc3Q9ZnVuY3Rpb24oYSl7dmFyIGs9W107aWYoImFycmF5Ij09ZC51dGlscy50eXBlT2YoYSkpZm9yKHZhciBmPTA7ZjxhLmxlbmd0aDtmKyspay5wdXNoKG5ldyBkLnBsYXlsaXN0Lml0ZW0oYVtmXSkpO2Vsc2Ugay5wdXNoKG5ldyBkLnBsYXlsaXN0Lml0ZW0oYSkpO3JldHVybiBrfX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWQuaXRlbT1mdW5jdGlvbihrKXt2YXIgZj1qd3BsYXllci51dGlscyxoPWYuZXh0ZW5kKHt9LGEuZGVmYXVsdHMsayk7aC50cmFja3M9ayYmZi5leGlzdHMoay50cmFja3MpP2sudHJhY2tzOltdOzA9PWguc291cmNlcy5sZW5ndGgmJihoLnNvdXJjZXM9CltuZXcgZC5zb3VyY2UoaCldKTtmb3IodmFyIGU9MDtlPGguc291cmNlcy5sZW5ndGg7ZSsrKXt2YXIgaj1oLnNvdXJjZXNbZV1bImRlZmF1bHQiXTtoLnNvdXJjZXNbZV1bImRlZmF1bHQiXT1qPyJ0cnVlIj09ai50b1N0cmluZygpOiExO2guc291cmNlc1tlXT1uZXcgZC5zb3VyY2UoaC5zb3VyY2VzW2VdKX1pZihoLmNhcHRpb25zJiYhZi5leGlzdHMoay50cmFja3MpKXtmb3Ioaz0wO2s8aC5jYXB0aW9ucy5sZW5ndGg7aysrKWgudHJhY2tzLnB1c2goaC5jYXB0aW9uc1trXSk7ZGVsZXRlIGguY2FwdGlvbnN9Zm9yKGU9MDtlPGgudHJhY2tzLmxlbmd0aDtlKyspaC50cmFja3NbZV09bmV3IGQudHJhY2soaC50cmFja3NbZV0pO3JldHVybiBofTthLmRlZmF1bHRzPXtkZXNjcmlwdGlvbjoiIixpbWFnZToiIixtZWRpYWlkOiIiLHRpdGxlOiIiLHNvdXJjZXM6W10sdHJhY2tzOltdfX0oandwbGF5ZXIucGxheWxpc3QpLGZ1bmN0aW9uKGQpe3ZhciBhPWp3cGxheWVyLGs9YS51dGlscywKZj1hLmV2ZW50cyxoPWEucGFyc2VycztkLmxvYWRlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoZSl7dHJ5e3ZhciBqPWUucmVzcG9uc2VYTUwuY2hpbGROb2RlcztlPSIiO2Zvcih2YXIgaz0wO2s8ai5sZW5ndGgmJiEoZT1qW2tdLDghPWUubm9kZVR5cGUpO2srKyk7InhtbCI9PWgubG9jYWxOYW1lKGUpJiYoZT1lLm5leHRTaWJsaW5nKTtpZigicnNzIiE9aC5sb2NhbE5hbWUoZSkpYigiTm90IGEgdmFsaWQgUlNTIGZlZWQiKTtlbHNle3ZhciBsPW5ldyBkKGgucnNzcGFyc2VyLnBhcnNlKGUpKTtjLnNlbmRFdmVudChmLkpXUExBWUVSX1BMQVlMSVNUX0xPQURFRCx7cGxheWxpc3Q6bH0pfX1jYXRjaChnKXtiKCl9fWZ1bmN0aW9uIGooYSl7YihhLm1hdGNoKC9pbnZhbGlkL2kpPyJOb3QgYSB2YWxpZCBSU1MgZmVlZCI6IiIpfWZ1bmN0aW9uIGIoYSl7Yy5zZW5kRXZlbnQoZi5KV1BMQVlFUl9FUlJPUix7bWVzc2FnZTphP2E6IkVycm9yIGxvYWRpbmcgZmlsZSJ9KX12YXIgYz1uZXcgZi5ldmVudGRpc3BhdGNoZXI7CmsuZXh0ZW5kKHRoaXMsYyk7dGhpcy5sb2FkPWZ1bmN0aW9uKGIpe2suYWpheChiLGEsail9fX0oandwbGF5ZXIucGxheWxpc3QpLGZ1bmN0aW9uKGQpe3ZhciBhPWp3cGxheWVyLnV0aWxzLGs9e2ZpbGU6dm9pZCAwLGxhYmVsOnZvaWQgMCx0eXBlOnZvaWQgMCwiZGVmYXVsdCI6dm9pZCAwfTtkLnNvdXJjZT1mdW5jdGlvbihmKXt2YXIgZD1hLmV4dGVuZCh7fSxrKTthLmZvcmVhY2goayxmdW5jdGlvbihlKXthLmV4aXN0cyhmW2VdKSYmKGRbZV09ZltlXSxkZWxldGUgZltlXSl9KTtkLnR5cGUmJjA8ZC50eXBlLmluZGV4T2YoIi8iKSYmKGQudHlwZT1hLmV4dGVuc2lvbm1hcC5taW1lVHlwZShkLnR5cGUpKTsibTN1OCI9PWQudHlwZSYmKGQudHlwZT0iaGxzIik7InNtaWwiPT1kLnR5cGUmJihkLnR5cGU9InJ0bXAiKTtyZXR1cm4gZH19KGp3cGxheWVyLnBsYXlsaXN0KSxmdW5jdGlvbihkKXt2YXIgYT1qd3BsYXllci51dGlscyxrPXtmaWxlOnZvaWQgMCxsYWJlbDp2b2lkIDAsa2luZDoiY2FwdGlvbnMiLAoiZGVmYXVsdCI6ITF9O2QudHJhY2s9ZnVuY3Rpb24oZCl7dmFyIGg9YS5leHRlbmQoe30sayk7ZHx8KGQ9e30pO2EuZm9yZWFjaChrLGZ1bmN0aW9uKGUpe2EuZXhpc3RzKGRbZV0pJiYoaFtlXT1kW2VdLGRlbGV0ZSBkW2VdKX0pO3JldHVybiBofX0oandwbGF5ZXIucGxheWxpc3QpLGZ1bmN0aW9uKGQpe3ZhciBhPWQudXRpbHMsaz1kLmV2ZW50cyxmPSEwLGg9ITEsZT1kb2N1bWVudCxqPWQuZW1iZWQ9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYyhiLGMpe2EuZm9yZWFjaChjLGZ1bmN0aW9uKGEsYyl7ImZ1bmN0aW9uIj09dHlwZW9mIGJbYV0mJmJbYV0uY2FsbChiLGMpfSl9ZnVuY3Rpb24gbigpe2lmKHIuc2l0ZWNhdGFseXN0KXRyeXtudWxsIT1zJiZzLmhhc093blByb3BlcnR5KCJNZWRpYSIpfHxsKCl9Y2F0Y2goZSl7bCgpO3JldHVybn1pZigiYXJyYXkiPT1hLnR5cGVPZihyLnBsYXlsaXN0KSYmMj5yLnBsYXlsaXN0Lmxlbmd0aCYmKDA9PXIucGxheWxpc3QubGVuZ3RofHwhci5wbGF5bGlzdFswXS5zb3VyY2VzfHwKMD09ci5wbGF5bGlzdFswXS5zb3VyY2VzLmxlbmd0aCkpcCgpO2Vsc2UgaWYoIXopaWYoInN0cmluZyI9PWEudHlwZU9mKHIucGxheWxpc3QpKXt2YXIgZz1uZXcgZC5wbGF5bGlzdC5sb2FkZXI7Zy5hZGRFdmVudExpc3RlbmVyKGsuSldQTEFZRVJfUExBWUxJU1RfTE9BREVELGZ1bmN0aW9uKGEpe3IucGxheWxpc3Q9YS5wbGF5bGlzdDt6PWg7bigpfSk7Zy5hZGRFdmVudExpc3RlbmVyKGsuSldQTEFZRVJfRVJST1IsZnVuY3Rpb24oYSl7ej1oO3AoYSl9KTt6PWY7Zy5sb2FkKHIucGxheWxpc3QpfWVsc2UgaWYoeS5nZXRTdGF0dXMoKT09YS5sb2FkZXJzdGF0dXMuQ09NUExFVEUpe2ZvcihnPTA7ZzxyLm1vZGVzLmxlbmd0aDtnKyspaWYoci5tb2Rlc1tnXS50eXBlJiZqW3IubW9kZXNbZ10udHlwZV0pe3ZhciB1PWEuZXh0ZW5kKHt9LHIpLHc9bmV3IGpbci5tb2Rlc1tnXS50eXBlXSh0LHIubW9kZXNbZ10sdSx5LGIpO2lmKHcuc3VwcG9ydHNDb25maWcoKSlyZXR1cm4gdy5hZGRFdmVudExpc3RlbmVyKGsuRVJST1IsCm0pLHcuZW1iZWQoKSxjKGIsdS5ldmVudHMpLGJ9aWYoci5mYWxsYmFjayl7dmFyIHg9Ik5vIHN1aXRhYmxlIHBsYXllcnMgZm91bmQgYW5kIGZhbGxiYWNrIGVuYWJsZWQiO0M9c2V0VGltZW91dChmdW5jdGlvbigpe3EoeCxmKX0sMTApO2EubG9nKHgpO25ldyBqLmRvd25sb2FkKHQscixwKX1lbHNlIHg9Ik5vIHN1aXRhYmxlIHBsYXllcnMgZm91bmQgYW5kIGZhbGxiYWNrIGRpc2FibGVkIixxKHgsaCksYS5sb2coeCksdC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCh2LHQpfX1mdW5jdGlvbiBtKGEpe2codCxCK2EubWVzc2FnZSl9ZnVuY3Rpb24gcChhKXthJiZhLm1lc3NhZ2U/Zyh0LCJFcnJvciBsb2FkaW5nIHBsYXlsaXN0OiAiK2EubWVzc2FnZSk6Zyh0LEIrIk5vIHBsYXlhYmxlIHNvdXJjZXMgZm91bmQiKX1mdW5jdGlvbiBsKCl7Zyh0LCJBZG9iZSBTaXRlQ2F0YWx5c3QgRXJyb3I6IENvdWxkIG5vdCBmaW5kIE1lZGlhIE1vZHVsZSIpfWZ1bmN0aW9uIGcoYixjKXtpZihyLmZhbGxiYWNrKXt2YXIgZT0KYi5zdHlsZTtlLmJhY2tncm91bmRDb2xvcj0iIzAwMCI7ZS5jb2xvcj0iI0ZGRiI7ZS53aWR0aD1hLnN0eWxlRGltZW5zaW9uKHIud2lkdGgpO2UuaGVpZ2h0PWEuc3R5bGVEaW1lbnNpb24oci5oZWlnaHQpO2UuZGlzcGxheT0idGFibGUiO2Uub3BhY2l0eT0xO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInAiKSxkPWUuc3R5bGU7ZC52ZXJ0aWNhbEFsaWduPSJtaWRkbGUiO2QudGV4dEFsaWduPSJjZW50ZXIiO2QuZGlzcGxheT0idGFibGUtY2VsbCI7ZC5mb250PSIxNXB4LzIwcHggQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZiI7ZS5pbm5lckhUTUw9Yy5yZXBsYWNlKCI6IiwiOlx4M2Niclx4M2UiKTtiLmlubmVySFRNTD0iIjtiLmFwcGVuZENoaWxkKGUpO3EoYyxmKX1lbHNlIHEoYyxoKX1mdW5jdGlvbiBxKGEsYyl7QyYmKGNsZWFyVGltZW91dChDKSxDPW51bGwpO2IuZGlzcGF0Y2hFdmVudChrLkpXUExBWUVSX1NFVFVQX0VSUk9SLHttZXNzYWdlOmEsZmFsbGJhY2s6Y30pfQp2YXIgcj1uZXcgai5jb25maWcoYi5jb25maWcpLHQsdSx2LHc9ci53aWR0aCx4PXIuaGVpZ2h0LEI9IkVycm9yIGxvYWRpbmcgcGxheWVyOiAiLHk9ZC5wbHVnaW5zLmxvYWRQbHVnaW5zKGIuaWQsci5wbHVnaW5zKSx6PWgsQz1udWxsO3IuZmFsbGJhY2tEaXYmJih2PXIuZmFsbGJhY2tEaXYsZGVsZXRlIHIuZmFsbGJhY2tEaXYpO3IuaWQ9Yi5pZDt1PWUuZ2V0RWxlbWVudEJ5SWQoYi5pZCk7ci5hc3BlY3RyYXRpbz9iLmNvbmZpZy5hc3BlY3RyYXRpbz1yLmFzcGVjdHJhdGlvOmRlbGV0ZSBiLmNvbmZpZy5hc3BlY3RyYXRpbzt0PWUuY3JlYXRlRWxlbWVudCgiZGl2Iik7dC5pZD11LmlkO3Quc3R5bGUud2lkdGg9MDx3LnRvU3RyaW5nKCkuaW5kZXhPZigiJSIpP3c6dysicHgiO3Quc3R5bGUuaGVpZ2h0PTA8eC50b1N0cmluZygpLmluZGV4T2YoIiUiKT94OngrInB4Ijt1LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHQsdSk7ZC5lbWJlZC5lcnJvclNjcmVlbj1nO3kuYWRkRXZlbnRMaXN0ZW5lcihrLkNPTVBMRVRFLApuKTt5LmFkZEV2ZW50TGlzdGVuZXIoay5FUlJPUixmdW5jdGlvbihhKXtnKHQsIkNvdWxkIG5vdCBsb2FkIHBsdWdpbnM6ICIrYS5tZXNzYWdlKX0pO3kubG9hZCgpO3JldHVybiBifX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe2Z1bmN0aW9uIGEoYSl7aWYoYS5wbGF5bGlzdClmb3IodmFyIGQ9MDtkPGEucGxheWxpc3QubGVuZ3RoO2QrKylhLnBsYXlsaXN0W2RdPW5ldyBoKGEucGxheWxpc3RbZF0pO2Vsc2V7dmFyIGI9e307Zi5mb3JlYWNoKGguZGVmYXVsdHMsZnVuY3Rpb24oYyl7ayhhLGIsYyl9KTtiLnNvdXJjZXN8fChhLmxldmVscz8oYi5zb3VyY2VzPWEubGV2ZWxzLGRlbGV0ZSBhLmxldmVscyk6KGQ9e30sayhhLGQsImZpbGUiKSxrKGEsZCwidHlwZSIpLGIuc291cmNlcz1kLmZpbGU/W2RdOltdKSk7YS5wbGF5bGlzdD1bbmV3IGgoYildfX1mdW5jdGlvbiBrKGEsZCxiKXtmLmV4aXN0cyhhW2JdKSYmKGRbYl09YVtiXSxkZWxldGUgYVtiXSl9dmFyIGY9ZC51dGlscyxoPWQucGxheWxpc3QuaXRlbTsKKGQuZW1iZWQuY29uZmlnPWZ1bmN0aW9uKGUpe3ZhciBqPXtmYWxsYmFjazohMCxoZWlnaHQ6MjcwLHByaW1hcnk6Imh0bWw1Iix3aWR0aDo0ODAsYmFzZTplLmJhc2U/ZS5iYXNlOmYuZ2V0U2NyaXB0UGF0aCgiandwbGF5ZXIuanMiKSxhc3BlY3RyYXRpbzoiIn07ZT1mLmV4dGVuZChqLGQuZGVmYXVsdHMsZSk7dmFyIGo9e3R5cGU6Imh0bWw1IixzcmM6ZS5iYXNlKyJqd3BsYXllci5odG1sNS5qcyJ9LGI9e3R5cGU6ImZsYXNoIixzcmM6ZS5iYXNlKyJqd3BsYXllci5mbGFzaC5zd2YifTtlLm1vZGVzPSJmbGFzaCI9PWUucHJpbWFyeT9bYixqXTpbaixiXTtlLmxpc3RiYXImJihlLnBsYXlsaXN0c2l6ZT1lLmxpc3RiYXIuc2l6ZSxlLnBsYXlsaXN0cG9zaXRpb249ZS5saXN0YmFyLnBvc2l0aW9uLGUucGxheWxpc3RsYXlvdXQ9ZS5saXN0YmFyLmxheW91dCk7ZS5mbGFzaHBsYXllciYmKGIuc3JjPWUuZmxhc2hwbGF5ZXIpO2UuaHRtbDVwbGF5ZXImJihqLnNyYz1lLmh0bWw1cGxheWVyKTsKYShlKTtiPWUuYXNwZWN0cmF0aW87aWYoInN0cmluZyIhPXR5cGVvZiBifHwhZi5leGlzdHMoYikpaj0wO2Vsc2V7dmFyIGM9Yi5pbmRleE9mKCI6Iik7LTE9PWM/aj0wOihqPXBhcnNlRmxvYXQoYi5zdWJzdHIoMCxjKSksYj1wYXJzZUZsb2F0KGIuc3Vic3RyKGMrMSkpLGo9MD49anx8MD49Yj8wOjEwMCooYi9qKSsiJSIpfS0xPT1lLndpZHRoLnRvU3RyaW5nKCkuaW5kZXhPZigiJSIpP2RlbGV0ZSBlLmFzcGVjdHJhdGlvOmo/ZS5hc3BlY3RyYXRpbz1qOmRlbGV0ZSBlLmFzcGVjdHJhdGlvO3JldHVybiBlfSkuYWRkQ29uZmlnPWZ1bmN0aW9uKGUsZCl7YShkKTtyZXR1cm4gZi5leHRlbmQoZSxkKX19KGp3cGxheWVyKSxmdW5jdGlvbihkKXt2YXIgYT1kLnV0aWxzLGs9ZG9jdW1lbnQ7ZC5lbWJlZC5kb3dubG9hZD1mdW5jdGlvbihkLGgsZSl7ZnVuY3Rpb24gaihiLGMpe2Zvcih2YXIgZT1rLnF1ZXJ5U2VsZWN0b3JBbGwoYiksZD0wO2Q8ZS5sZW5ndGg7ZCsrKWEuZm9yZWFjaChjLApmdW5jdGlvbihhLGIpe2VbZF0uc3R5bGVbYV09Yn0pfWZ1bmN0aW9uIGIoYSxiLGMpe2E9ay5jcmVhdGVFbGVtZW50KGEpO2ImJihhLmNsYXNzTmFtZT0iandkb3dubG9hZCIrYik7YyYmYy5hcHBlbmRDaGlsZChhKTtyZXR1cm4gYX12YXIgYz1hLmV4dGVuZCh7fSxoKSxuPWMud2lkdGg/Yy53aWR0aDo0ODAsbT1jLmhlaWdodD9jLmhlaWdodDozMjAscDtoPWgubG9nbz9oLmxvZ286e3ByZWZpeDphLnJlcG8oKSxmaWxlOiJsb2dvLnBuZyIsbWFyZ2luOjEwfTt2YXIgbCxnLHEsYz1jLnBsYXlsaXN0LHIsdD1bIm1wNCIsImFhYyIsIm1wMyJdO2lmKGMmJmMubGVuZ3RoKXtyPWNbMF07cD1yLnNvdXJjZXM7Zm9yKGM9MDtjPHAubGVuZ3RoO2MrKyl7dmFyIHU9cFtjXSx2PXUudHlwZT91LnR5cGU6YS5leHRlbnNpb25tYXAuZXh0VHlwZShhLmV4dGVuc2lvbih1LmZpbGUpKTt1LmZpbGUmJmEuZm9yZWFjaCh0LGZ1bmN0aW9uKGIpe3Y9PXRbYl0/KGw9dS5maWxlLGc9ci5pbWFnZSk6YS5pc1lvdVR1YmUodS5maWxlKSYmCihxPXUuZmlsZSl9KX1sPyhwPWwsZT1nLGQmJihjPWIoImEiLCJkaXNwbGF5IixkKSxiKCJkaXYiLCJpY29uIixjKSxiKCJkaXYiLCJsb2dvIixjKSxwJiZjLnNldEF0dHJpYnV0ZSgiaHJlZiIsYS5nZXRBYnNvbHV0ZVBhdGgocCkpKSxjPSIjIitkLmlkKyIgLmp3ZG93bmxvYWQiLGQuc3R5bGUud2lkdGg9IiIsZC5zdHlsZS5oZWlnaHQ9IiIsaihjKyJkaXNwbGF5Iix7d2lkdGg6YS5zdHlsZURpbWVuc2lvbihNYXRoLm1heCgzMjAsbikpLGhlaWdodDphLnN0eWxlRGltZW5zaW9uKE1hdGgubWF4KDE4MCxtKSksYmFja2dyb3VuZDoiYmxhY2sgY2VudGVyIG5vLXJlcGVhdCAiKyhlPyJ1cmwoIitlKyIpIjoiIiksYmFja2dyb3VuZFNpemU6ImNvbnRhaW4iLHBvc2l0aW9uOiJyZWxhdGl2ZSIsYm9yZGVyOiJub25lIixkaXNwbGF5OiJibG9jayJ9KSxqKGMrImRpc3BsYXkgZGl2Iix7cG9zaXRpb246ImFic29sdXRlIix3aWR0aDoiMTAwJSIsaGVpZ2h0OiIxMDAlIn0pLGooYysibG9nbyIsCnt0b3A6aC5tYXJnaW4rInB4IixyaWdodDpoLm1hcmdpbisicHgiLGJhY2tncm91bmQ6InRvcCByaWdodCBuby1yZXBlYXQgdXJsKCIraC5wcmVmaXgraC5maWxlKyIpIn0pLGooYysiaWNvbiIse2JhY2tncm91bmQ6ImNlbnRlciBuby1yZXBlYXQgdXJsKGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBRHdBQUFBOENBWUFBQUE2L05seUFBQUFHWFJGV0hSVGIyWjBkMkZ5WlFCQlpHOWlaU0JKYldGblpWSmxZV1I1Y2NsbFBBQUFBZ05KUkVGVWVOcnMyOGxxd2tBWUIvQ1pxTlZERGoycjZGTjQxUWVJeThGZStnajZCTDI3NVEwOHU5RmJUOFpkd1Zmb3RTQllFUFVreEZPb2tzNEVLaUpkYUR1VGpNbjN3V0JPMFYvK3N5U1I4U05TcVZSS0lSOHFhWEhremxxUzlqQ2Z6eldjVENZcDloRjVvKzU5c1Zqc2lSemNlZ1Nja0Z6Y2pUK3J1TjgwVGVTbEFqQ0FBWHpkSlNHUEZYUnBBQU1Zd0FDR1pRa1NkaEc0V0N6ZWhNTmhxVjZ2RzZ2VlNyaXJLVkV3NjZZb1NxRGI3Y3FsVWlsRThKakhkL3kxTVFlZlZ6cWREbWlhSnBmTFpXSGdYTUhuOEY2dkoxY3FsVkFrRXNHdUFuODNKNGdBZDJSWnltUXlnWDYvTDFlclZRdCs5WlBXYitDRHdjQ0MyelhHSmFld2wvRGhjSGhLM0RWaitLZktack1XdkZhcmNZTkxvbUF2NGFQUlNGWlZsVGxjU1BBNWZEd2VXL0JvTklxRm5LVjUzSnZuY2prTG5zL24vY0xkUys5Mk83UllMTGdzS2Z2OS90OFhsRG40ZUR5aXcrSEE5Snl6MmV5dDAra1kyKzNXRkM1aGx1ZWowSGE3elFRcTlQUHdkRHExRXQxc05zeC9uRkJnQ3FXSjhvQUsxYVVwdE5WcWNZV2V3RTRuYWhmVTBZUW5rNG50VUVmR01JVTJtMDFIb0xhQ0tiVFJhRGdLdGFWTGs5dEJZYUJjRS82QXJ0ZHI0Ulo1VEI2L2RDKzlpSWUvV2dBTVlBRERwQVVKQXhqQUFBWXdnR0ZaZ29TL0F0Tk5URjdaMmJMMEJZUEJWM0p3NXhGd3dXY1l4Z3RCUDVPa0U4aTlHN2FXR09PQ3J1dmF1d0FEQUxNTE1FYktmNFNkQUFBQUFFbEZUa1N1UW1DQykifSkpOgpxPyhoPXEsZD1iKCJlbWJlZCIsIiIsZCksZC5zcmM9Imh0dHA6Ly93d3cueW91dHViZS5jb20vdi8iKy92PShbXiZdKyl8XC8oW1x3LV0rKSgkfFw/KXxeKFtcdy1dKykkL2kuZXhlYyhoKS5zbGljZSgxKS5qb2luKCIiKS5yZXBsYWNlKCI/IiwiIiksZC50eXBlPSJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCIsZC53aWR0aD1uLGQuaGVpZ2h0PW0pOmUoKX19fShqd3BsYXllciksZnVuY3Rpb24oZCl7dmFyIGE9ZC51dGlscyxrPWQuZXZlbnRzLGY9e307KGQuZW1iZWQuZmxhc2g9ZnVuY3Rpb24oZSxqLGIsYyxuKXtmdW5jdGlvbiBtKGEsYixjKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJwYXJhbSIpO2Uuc2V0QXR0cmlidXRlKCJuYW1lIixiKTtlLnNldEF0dHJpYnV0ZSgidmFsdWUiLGMpO2EuYXBwZW5kQ2hpbGQoZSl9ZnVuY3Rpb24gcChhLGIsYyl7cmV0dXJuIGZ1bmN0aW9uKCl7dHJ5e2MmJmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG4uaWQrIl93cmFwcGVyIikuYXBwZW5kQ2hpbGQoYik7CnZhciBlPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG4uaWQpLmdldFBsdWdpbkNvbmZpZygiZGlzcGxheSIpOyJmdW5jdGlvbiI9PXR5cGVvZiBhLnJlc2l6ZSYmYS5yZXNpemUoZS53aWR0aCxlLmhlaWdodCk7Yi5zdHlsZS5sZWZ0PWUueDtiLnN0eWxlLnRvcD1lLmh9Y2F0Y2goZCl7fX19ZnVuY3Rpb24gbChiKXtpZighYilyZXR1cm57fTt2YXIgYz17fSxlPVtdO2EuZm9yZWFjaChiLGZ1bmN0aW9uKGIsZCl7dmFyIGc9YS5nZXRQbHVnaW5OYW1lKGIpO2UucHVzaChiKTthLmZvcmVhY2goZCxmdW5jdGlvbihhLGIpe2NbZysiLiIrYV09Yn0pfSk7Yy5wbHVnaW5zPWUuam9pbigiLCIpO3JldHVybiBjfXZhciBnPW5ldyBkLmV2ZW50cy5ldmVudGRpc3BhdGNoZXIscT1hLmZsYXNoVmVyc2lvbigpO2EuZXh0ZW5kKHRoaXMsZyk7dGhpcy5lbWJlZD1mdW5jdGlvbigpe2IuaWQ9bi5pZDtpZigxMD5xKXJldHVybiBnLnNlbmRFdmVudChrLkVSUk9SLHttZXNzYWdlOiJGbGFzaCB2ZXJzaW9uIG11c3QgYmUgMTAuMCBvciBncmVhdGVyIn0pLAohMTt2YXIgZCxoLHU9bi5jb25maWcubGlzdGJhcix2PWEuZXh0ZW5kKHt9LGIpO2lmKGUuaWQrIl93cmFwcGVyIj09ZS5wYXJlbnROb2RlLmlkKWQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZS5pZCsiX3dyYXBwZXIiKTtlbHNle2Q9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7aD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTtoLnN0eWxlLmRpc3BsYXk9Im5vbmUiO2guaWQ9ZS5pZCsiX2FzcGVjdCI7ZC5pZD1lLmlkKyJfd3JhcHBlciI7ZC5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiO2Quc3R5bGUuZGlzcGxheT0iYmxvY2siO2Quc3R5bGUud2lkdGg9YS5zdHlsZURpbWVuc2lvbih2LndpZHRoKTtkLnN0eWxlLmhlaWdodD1hLnN0eWxlRGltZW5zaW9uKHYuaGVpZ2h0KTtpZihuLmNvbmZpZy5hc3BlY3RyYXRpbyl7dmFyIHc9cGFyc2VGbG9hdChuLmNvbmZpZy5hc3BlY3RyYXRpbyk7aC5zdHlsZS5kaXNwbGF5PSJibG9jayI7aC5zdHlsZS5tYXJnaW5Ub3A9bi5jb25maWcuYXNwZWN0cmF0aW87CmQuc3R5bGUuaGVpZ2h0PSJhdXRvIjtkLnN0eWxlLmRpc3BsYXk9ImlubGluZS1ibG9jayI7dSYmKCJib3R0b20iPT11LnBvc2l0aW9uP2guc3R5bGUucGFkZGluZ0JvdHRvbT11LnNpemUrInB4IjoicmlnaHQiPT11LnBvc2l0aW9uJiYoaC5zdHlsZS5tYXJnaW5Cb3R0b209LTEqdS5zaXplKih3LzEwMCkrInB4IikpfWUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZCxlKTtkLmFwcGVuZENoaWxkKGUpO2QuYXBwZW5kQ2hpbGQoaCl9ZD1jLnNldHVwUGx1Z2lucyhuLHYscCk7MDxkLmxlbmd0aD9hLmV4dGVuZCh2LGwoZC5wbHVnaW5zKSk6ZGVsZXRlIHYucGx1Z2luczsidW5kZWZpbmVkIiE9dHlwZW9mIHZbImRvY2sucG9zaXRpb24iXSYmImZhbHNlIj09dlsiZG9jay5wb3NpdGlvbiJdLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSYmKHYuZG9jaz12WyJkb2NrLnBvc2l0aW9uIl0sZGVsZXRlIHZbImRvY2sucG9zaXRpb24iXSk7ZD12Lndtb2RlP3Yud21vZGU6di5oZWlnaHQmJjQwPj0Kdi5oZWlnaHQ/InRyYW5zcGFyZW50Ijoib3BhcXVlIjtoPSJoZWlnaHQgd2lkdGggbW9kZXMgZXZlbnRzIHByaW1hcnkgYmFzZSBmYWxsYmFjayB2b2x1bWUiLnNwbGl0KCIgIik7Zm9yKHU9MDt1PGgubGVuZ3RoO3UrKylkZWxldGUgdltoW3VdXTtoPWEuZ2V0Q29va2llcygpO2EuZm9yZWFjaChoLGZ1bmN0aW9uKGEsYil7InVuZGVmaW5lZCI9PXR5cGVvZiB2W2FdJiYodlthXT1iKX0pO2g9d2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoIi8iKTtoLnNwbGljZShoLmxlbmd0aC0xLDEpO2g9aC5qb2luKCIvIik7di5iYXNlPWgrIi8iO2ZbZS5pZF09djthLmlzSUUoKT8oaD0nXHgzY29iamVjdCBjbGFzc2lkXHgzZCJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAiICIgd2lkdGhceDNkIjEwMCUiIGhlaWdodFx4M2QiMTAwJSJpZFx4M2QiJytlLmlkKyciIG5hbWVceDNkIicrZS5pZCsnIiB0YWJpbmRleFx4M2QwIiJceDNlJyxoKz0nXHgzY3BhcmFtIG5hbWVceDNkIm1vdmllIiB2YWx1ZVx4M2QiJysKai5zcmMrJyJceDNlJyxoKz0nXHgzY3BhcmFtIG5hbWVceDNkImFsbG93ZnVsbHNjcmVlbiIgdmFsdWVceDNkInRydWUiXHgzZVx4M2NwYXJhbSBuYW1lXHgzZCJhbGxvd3NjcmlwdGFjY2VzcyIgdmFsdWVceDNkImFsd2F5cyJceDNlJyxoKz0nXHgzY3BhcmFtIG5hbWVceDNkInNlYW1sZXNzdGFiYmluZyIgdmFsdWVceDNkInRydWUiXHgzZScsaCs9J1x4M2NwYXJhbSBuYW1lXHgzZCJ3bW9kZSIgdmFsdWVceDNkIicrZCsnIlx4M2UnLGgrPSdceDNjcGFyYW0gbmFtZVx4M2QiYmdjb2xvciIgdmFsdWVceDNkIiMwMDAwMDAiXHgzZScsaCs9Ilx4M2Mvb2JqZWN0XHgzZSIsZS5vdXRlckhUTUw9aCxkPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUuaWQpKTooaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvYmplY3QiKSxoLnNldEF0dHJpYnV0ZSgidHlwZSIsImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoIiksaC5zZXRBdHRyaWJ1dGUoImRhdGEiLGouc3JjKSxoLnNldEF0dHJpYnV0ZSgid2lkdGgiLAoiMTAwJSIpLGguc2V0QXR0cmlidXRlKCJoZWlnaHQiLCIxMDAlIiksaC5zZXRBdHRyaWJ1dGUoImJnY29sb3IiLCIjMDAwMDAwIiksaC5zZXRBdHRyaWJ1dGUoImlkIixlLmlkKSxoLnNldEF0dHJpYnV0ZSgibmFtZSIsZS5pZCksaC5zZXRBdHRyaWJ1dGUoInRhYmluZGV4IiwwKSxtKGgsImFsbG93ZnVsbHNjcmVlbiIsInRydWUiKSxtKGgsImFsbG93c2NyaXB0YWNjZXNzIiwiYWx3YXlzIiksbShoLCJzZWFtbGVzc3RhYmJpbmciLCJ0cnVlIiksbShoLCJ3bW9kZSIsZCksZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChoLGUpLGQ9aCk7bi5jb25maWcuYXNwZWN0cmF0aW8mJihkLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIpO24uY29udGFpbmVyPWQ7bi5zZXRQbGF5ZXIoZCwiZmxhc2giKX07dGhpcy5zdXBwb3J0c0NvbmZpZz1mdW5jdGlvbigpe2lmKHEpaWYoYil7aWYoInN0cmluZyI9PWEudHlwZU9mKGIucGxheWxpc3QpKXJldHVybiEwO3RyeXt2YXIgYz1iLnBsYXlsaXN0WzBdLnNvdXJjZXM7CmlmKCJ1bmRlZmluZWQiPT10eXBlb2YgYylyZXR1cm4hMDtmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKylpZihjW2RdLmZpbGUmJmgoY1tkXS5maWxlLGNbZF0udHlwZSkpcmV0dXJuITB9Y2F0Y2goZSl7fX1lbHNlIHJldHVybiEwO3JldHVybiExfX0pLmdldFZhcnM9ZnVuY3Rpb24oYSl7cmV0dXJuIGZbYV19O3ZhciBoPWQuZW1iZWQuZmxhc2hDYW5QbGF5PWZ1bmN0aW9uKGQsZil7aWYoYS5pc1lvdVR1YmUoZCl8fGEuaXNSdG1wKGQsZil8fCJobHMiPT1mKXJldHVybiEwO3ZhciBiPWEuZXh0ZW5zaW9ubWFwW2Y/ZjphLmV4dGVuc2lvbihkKV07cmV0dXJuIWI/ITE6ISFiLmZsYXNofX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWQudXRpbHMsaz1hLmV4dGVuc2lvbm1hcCxmPWQuZXZlbnRzO2QuZW1iZWQuaHRtbDU9ZnVuY3Rpb24oaCxlLGosYixjKXtmdW5jdGlvbiBuKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oKXt0cnl7dmFyIGQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiIyIrCmguaWQrIiAuandtYWluIik7YyYmZC5hcHBlbmRDaGlsZChiKTsiZnVuY3Rpb24iPT10eXBlb2YgYS5yZXNpemUmJihhLnJlc2l6ZShkLmNsaWVudFdpZHRoLGQuY2xpZW50SGVpZ2h0KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5yZXNpemUoZC5jbGllbnRXaWR0aCxkLmNsaWVudEhlaWdodCl9LDQwMCkpO2IubGVmdD1kLnN0eWxlLmxlZnQ7Yi50b3A9ZC5zdHlsZS50b3B9Y2F0Y2goZSl7fX19ZnVuY3Rpb24gbShhKXtwLnNlbmRFdmVudChhLnR5cGUse21lc3NhZ2U6IkhUTUw1IHBsYXllciBub3QgZm91bmQifSl9dmFyIHA9dGhpcyxsPW5ldyBmLmV2ZW50ZGlzcGF0Y2hlcjthLmV4dGVuZChwLGwpO3AuZW1iZWQ9ZnVuY3Rpb24oKXtpZihkLmh0bWw1KXtiLnNldHVwUGx1Z2lucyhjLGosbik7aC5pbm5lckhUTUw9IiI7dmFyIGc9ZC51dGlscy5leHRlbmQoe30saik7ZGVsZXRlIGcudm9sdW1lO2c9bmV3IGQuaHRtbDUucGxheWVyKGcpO2MuY29udGFpbmVyPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGMuaWQpOwpjLnNldFBsYXllcihnLCJodG1sNSIpfWVsc2UgZz1uZXcgYS5zY3JpcHRsb2FkZXIoZS5zcmMpLGcuYWRkRXZlbnRMaXN0ZW5lcihmLkVSUk9SLG0pLGcuYWRkRXZlbnRMaXN0ZW5lcihmLkNPTVBMRVRFLHAuZW1iZWQpLGcubG9hZCgpfTtwLnN1cHBvcnRzQ29uZmlnPWZ1bmN0aW9uKCl7aWYoZC52aWQuY2FuUGxheVR5cGUpdHJ5e2lmKCJzdHJpbmciPT1hLnR5cGVPZihqLnBsYXlsaXN0KSlyZXR1cm4hMDtmb3IodmFyIGI9ai5wbGF5bGlzdFswXS5zb3VyY2VzLGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGU7dmFyIGY9YltjXS5maWxlLGg9YltjXS50eXBlO2lmKG51bGwhPT1uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9CbGFja0JlcnJ5L2kpfHxhLmlzQW5kcm9pZCgpJiYoIm0zdSI9PWEuZXh0ZW5zaW9uKGYpfHwibTN1OCI9PWEuZXh0ZW5zaW9uKGYpKXx8YS5pc1J0bXAoZixoKSllPSExO2Vsc2V7dmFyIGw9a1toP2g6YS5leHRlbnNpb24oZildLG07aWYoIWx8fGwuZmxhc2gmJgohbC5odG1sNSltPSExO2Vsc2V7dmFyIG49bC5odG1sNSxwPWQudmlkO2lmKG4pdHJ5e209cC5jYW5QbGF5VHlwZShuKT8hMDohMX1jYXRjaCh5KXttPSExfWVsc2UgbT0hMH1lPW19aWYoZSlyZXR1cm4hMH19Y2F0Y2goeil7fXJldHVybiExfX19KGp3cGxheWVyKSxmdW5jdGlvbihkKXt2YXIgYT1kLmVtYmVkLGs9ZC51dGlscyxmPWsuZXh0ZW5kKGZ1bmN0aW9uKGYpe3ZhciBlPWsucmVwbygpLGo9ay5leHRlbmQoe30sZC5kZWZhdWx0cyksYj1rLmV4dGVuZCh7fSxqLGYuY29uZmlnKSxjPWYuY29uZmlnLG49Yi5wbHVnaW5zLG09Yi5hbmFseXRpY3MscD1lKyJqd3BzcnYuanMiLGw9ZSsic2hhcmluZy5qcyIsZz1lKyJyZWxhdGVkLmpzIixxPWUrImdhcHJvLmpzIixqPWQua2V5P2Qua2V5Omoua2V5LHI9KG5ldyBkLnV0aWxzLmtleShqKSkuZWRpdGlvbigpLG49bj9uOnt9OyJhZHMiPT1yJiZiLmFkdmVydGlzaW5nJiYoYi5hZHZlcnRpc2luZy5jbGllbnQubWF0Y2goIi5qcyR8LnN3ZiQiKT8KbltiLmFkdmVydGlzaW5nLmNsaWVudF09Yi5hZHZlcnRpc2luZzpuW2UrYi5hZHZlcnRpc2luZy5jbGllbnQrIi5qcyJdPWIuYWR2ZXJ0aXNpbmcpO2RlbGV0ZSBjLmFkdmVydGlzaW5nO2Mua2V5PWo7Yi5hbmFseXRpY3MmJihiLmFuYWx5dGljcy5jbGllbnQmJmIuYW5hbHl0aWNzLmNsaWVudC5tYXRjaCgiLmpzJHwuc3dmJCIpKSYmKHA9Yi5hbmFseXRpY3MuY2xpZW50KTtkZWxldGUgYy5hbmFseXRpY3M7aWYoImZyZWUiPT1yfHwhbXx8ITEhPT1tLmVuYWJsZWQpbltwXT1tP206e307ZGVsZXRlIG4uc2hhcmluZztkZWxldGUgbi5yZWxhdGVkO3N3aXRjaChyKXtjYXNlICJwcmVtaXVtIjpjYXNlICJhZHMiOmIucmVsYXRlZCYmKGIucmVsYXRlZC5jbGllbnQmJmIucmVsYXRlZC5jbGllbnQubWF0Y2goIi5qcyR8LnN3ZiQiKSYmKGc9Yi5yZWxhdGVkLmNsaWVudCksbltnXT1iLnJlbGF0ZWQpLGIuZ2EmJihiLmdhLmNsaWVudCYmYi5nYS5jbGllbnQubWF0Y2goIi5qcyR8LnN3ZiQiKSYmCihxPWIuZ2EuY2xpZW50KSxuW3FdPWIuZ2EpLGMuc2l0ZWNhdGFseXN0JiZuZXcgZC5lbWJlZC5zaXRlY2F0YWx5c3QoZik7Y2FzZSAicHJvIjpiLnNoYXJpbmcmJihiLnNoYXJpbmcuY2xpZW50JiZiLnNoYXJpbmcuY2xpZW50Lm1hdGNoKCIuanMkfC5zd2YkIikmJihsPWIuc2hhcmluZy5jbGllbnQpLG5bbF09Yi5zaGFyaW5nKSxiLnNraW4mJihjLnNraW49Yi5za2luLnJlcGxhY2UoL14oYmVlbGRlbnxiZWtsZXxmaXZlfGdsb3d8bW9kaWV1c3xyb3VuZHN0ZXJ8c3Rvcm10cm9vcGVyfHZhcG9yKSQvaSxrLnJlcG8oKSsic2tpbnMvJDEueG1sIikpfWMucGx1Z2lucz1uO3JldHVybiBuZXcgYShmKX0sYSk7ZC5lbWJlZD1mfShqd3BsYXllciksZnVuY3Rpb24oZCl7dmFyIGE9andwbGF5ZXIudXRpbHM7ZC5zaXRlY2F0YWx5c3Q9ZnVuY3Rpb24oZCl7ZnVuY3Rpb24gZihiKXtjLmRlYnVnJiZhLmxvZyhiKX1mdW5jdGlvbiBoKGEpe2E9YS5zcGxpdCgiLyIpO2E9YVthLmxlbmd0aC0xXTsKYT1hLnNwbGl0KCI/Iik7cmV0dXJuIGFbMF19ZnVuY3Rpb24gZSgpe2lmKCFnKXtnPSEwO3ZhciBhPWIuZ2V0UG9zaXRpb24oKTtmKCJzdG9wOiAiK20rIiA6ICIrYSk7cy5NZWRpYS5zdG9wKG0sYSl9fWZ1bmN0aW9uIGooKXtxfHwoZSgpLHE9ITAsZigiY2xvc2U6ICIrbSkscy5NZWRpYS5jbG9zZShtKSxyPSEwLGw9MCl9dmFyIGI9ZCxjPWEuZXh0ZW5kKHt9LGIuY29uZmlnLnNpdGVjYXRhbHlzdCksbj17b25QbGF5OmZ1bmN0aW9uKCl7aWYoIXIpe3ZhciBhPWIuZ2V0UG9zaXRpb24oKTtnPSExO2YoInBsYXk6ICIrbSsiIDogIithKTtzLk1lZGlhLnBsYXkobSxhKX19LG9uUGF1c2U6ZSxvbkJ1ZmZlcjplLG9uSWRsZTpqLG9uUGxheWxpc3RJdGVtOmZ1bmN0aW9uKGQpe3RyeXtyPSEwO2ooKTtsPTA7dmFyIGU7aWYoYy5tZWRpYU5hbWUpZT1jLm1lZGlhTmFtZTtlbHNle3ZhciBnPWIuZ2V0UGxheWxpc3RJdGVtKGQuaW5kZXgpO2U9Zy50aXRsZT9nLnRpdGxlOmcuZmlsZT9oKGcuZmlsZSk6Cmcuc291cmNlcyYmZy5zb3VyY2VzLmxlbmd0aD9oKGcuc291cmNlc1swXS5maWxlKToiIn1tPWU7cD1jLnBsYXllck5hbWU/Yy5wbGF5ZXJOYW1lOmIuaWR9Y2F0Y2goZil7YS5sb2coZil9fSxvblRpbWU6ZnVuY3Rpb24oKXtpZihyKXt2YXIgYT1iLmdldER1cmF0aW9uKCk7aWYoLTE9PWEpcmV0dXJuO3E9Zz1yPSExO2YoIm9wZW46ICIrbSsiIDogIithKyIgOiAiK3ApO3MuTWVkaWEub3BlbihtLGEscCk7ZigicGxheTogIittKyIgOiAwIik7cy5NZWRpYS5wbGF5KG0sMCl9YT1iLmdldFBvc2l0aW9uKCk7aWYoMzw9TWF0aC5hYnMoYS1sKSl7dmFyIGM9bDtmKCJzZWVrOiAiK2MrIiB0byAiK2EpO2YoInN0b3A6ICIrbSsiIDogIitjKTtzLk1lZGlhLnN0b3AobSxjKTtmKCJwbGF5OiAiK20rIiA6ICIrYSk7cy5NZWRpYS5wbGF5KG0sYSl9bD1hfSxvbkNvbXBsZXRlOmp9LG0scCxsLGc9ITAscT0hMCxyO2EuZm9yZWFjaChuLGZ1bmN0aW9uKGEpe2JbYV0oblthXSl9KX19KGp3cGxheWVyLmVtYmVkKSwKZnVuY3Rpb24oZCl7dmFyIGE9W10saz1kLnV0aWxzLGY9ZC5ldmVudHMsaD1mLnN0YXRlLGU9ZG9jdW1lbnQsaj1kLmFwaT1mdW5jdGlvbihhKXtmdW5jdGlvbiBjKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMpe3JldHVybiBiKGEsYyl9fWZ1bmN0aW9uIG4oYSxiKXtyW2FdfHwoclthXT1bXSxwKGYuSldQTEFZRVJfUExBWUVSX1NUQVRFLGZ1bmN0aW9uKGIpe3ZhciBjPWIubmV3c3RhdGU7Yj1iLm9sZHN0YXRlO2lmKGM9PWEpe3ZhciBkPXJbY107aWYoZClmb3IodmFyIGU9MDtlPGQubGVuZ3RoO2UrKykiZnVuY3Rpb24iPT10eXBlb2YgZFtlXSYmZFtlXS5jYWxsKHRoaXMse29sZHN0YXRlOmIsbmV3c3RhdGU6Y30pfX0pKTtyW2FdLnB1c2goYik7cmV0dXJuIGd9ZnVuY3Rpb24gbShhLGIpe3RyeXthLmp3QWRkRXZlbnRMaXN0ZW5lcihiLCdmdW5jdGlvbihkYXQpIHsgandwbGF5ZXIoIicrZy5pZCsnIikuZGlzcGF0Y2hFdmVudCgiJytiKyciLCBkYXQpOyB9Jyl9Y2F0Y2goYyl7ay5sb2coIkNvdWxkIG5vdCBhZGQgaW50ZXJuYWwgbGlzdGVuZXIiKX19CmZ1bmN0aW9uIHAoYSxiKXtxW2FdfHwocVthXT1bXSx0JiZ1JiZtKHQsYSkpO3FbYV0ucHVzaChiKTtyZXR1cm4gZ31mdW5jdGlvbiBsKCl7aWYodSl7Zm9yKHZhciBhPWFyZ3VtZW50c1swXSxiPVtdLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIucHVzaChhcmd1bWVudHNbY10pO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgdCYmImZ1bmN0aW9uIj09dHlwZW9mIHRbYV0pc3dpdGNoKGIubGVuZ3RoKXtjYXNlIDQ6cmV0dXJuIHRbYV0oYlswXSxiWzFdLGJbMl0sYlszXSk7Y2FzZSAzOnJldHVybiB0W2FdKGJbMF0sYlsxXSxiWzJdKTtjYXNlIDI6cmV0dXJuIHRbYV0oYlswXSxiWzFdKTtjYXNlIDE6cmV0dXJuIHRbYV0oYlswXSk7ZGVmYXVsdDpyZXR1cm4gdFthXSgpfXJldHVybiBudWxsfXYucHVzaChhcmd1bWVudHMpfXZhciBnPXRoaXMscT17fSxyPXt9LHQ9dm9pZCAwLHU9ITEsdj1bXSx3PXZvaWQgMCx4PXt9LEI9e307Zy5jb250YWluZXI9YTtnLmlkPWEuaWQ7Zy5nZXRCdWZmZXI9CmZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0QnVmZmVyIil9O2cuZ2V0Q29udGFpbmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGcuY29udGFpbmVyfTtnLmFkZEJ1dHRvbj1mdW5jdGlvbihhLGIsYyxkKXt0cnl7QltkXT1jLGwoImp3RG9ja0FkZEJ1dHRvbiIsYSxiLCJqd3BsYXllcignIitnLmlkKyInKS5jYWxsYmFjaygnIitkKyInKSIsZCl9Y2F0Y2goZSl7ay5sb2coIkNvdWxkIG5vdCBhZGQgZG9jayBidXR0b24iK2UubWVzc2FnZSl9fTtnLnJlbW92ZUJ1dHRvbj1mdW5jdGlvbihhKXtsKCJqd0RvY2tSZW1vdmVCdXR0b24iLGEpfTtnLmNhbGxiYWNrPWZ1bmN0aW9uKGEpe2lmKEJbYV0pQlthXSgpfTtnLmZvcmNlU3RhdGU9ZnVuY3Rpb24oYSl7bCgiandGb3JjZVN0YXRlIixhKTtyZXR1cm4gZ307Zy5yZWxlYXNlU3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbCgiandSZWxlYXNlU3RhdGUiKX07Zy5nZXREdXJhdGlvbj1mdW5jdGlvbigpe3JldHVybiBsKCJqd0dldER1cmF0aW9uIil9OwpnLmdldEZ1bGxzY3JlZW49ZnVuY3Rpb24oKXtyZXR1cm4gbCgiandHZXRGdWxsc2NyZWVuIil9O2cuZ2V0SGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0SGVpZ2h0Iil9O2cuZ2V0TG9ja1N0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0TG9ja1N0YXRlIil9O2cuZ2V0TWV0YT1mdW5jdGlvbigpe3JldHVybiBnLmdldEl0ZW1NZXRhKCl9O2cuZ2V0TXV0ZT1mdW5jdGlvbigpe3JldHVybiBsKCJqd0dldE11dGUiKX07Zy5nZXRQbGF5bGlzdD1mdW5jdGlvbigpe3ZhciBhPWwoImp3R2V0UGxheWxpc3QiKTsiZmxhc2giPT1nLnJlbmRlcmluZ01vZGUmJmsuZGVlcFJlcGxhY2VLZXlOYW1lKGEsWyJfX2RvdF9fIiwiX19zcGNfXyIsIl9fZHNoX18iLCJfX2RlZmF1bHRfXyJdLFsiLiIsIiAiLCItIiwiZGVmYXVsdCJdKTtyZXR1cm4gYX07Zy5nZXRQbGF5bGlzdEl0ZW09ZnVuY3Rpb24oYSl7ay5leGlzdHMoYSl8fChhPWcuZ2V0UGxheWxpc3RJbmRleCgpKTtyZXR1cm4gZy5nZXRQbGF5bGlzdCgpW2FdfTsKZy5nZXRQbGF5bGlzdEluZGV4PWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0UGxheWxpc3RJbmRleCIpfTtnLmdldFBvc2l0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0UG9zaXRpb24iKX07Zy5nZXRSZW5kZXJpbmdNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGcucmVuZGVyaW5nTW9kZX07Zy5nZXRTdGF0ZT1mdW5jdGlvbigpe3JldHVybiBsKCJqd0dldFN0YXRlIil9O2cuZ2V0Vm9sdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0Vm9sdW1lIil9O2cuZ2V0V2lkdGg9ZnVuY3Rpb24oKXtyZXR1cm4gbCgiandHZXRXaWR0aCIpfTtnLnNldEZ1bGxzY3JlZW49ZnVuY3Rpb24oYSl7ay5leGlzdHMoYSk/bCgiandTZXRGdWxsc2NyZWVuIixhKTpsKCJqd1NldEZ1bGxzY3JlZW4iLCFsKCJqd0dldEZ1bGxzY3JlZW4iKSk7cmV0dXJuIGd9O2cuc2V0TXV0ZT1mdW5jdGlvbihhKXtrLmV4aXN0cyhhKT9sKCJqd1NldE11dGUiLGEpOmwoImp3U2V0TXV0ZSIsIWwoImp3R2V0TXV0ZSIpKTsKcmV0dXJuIGd9O2cubG9jaz1mdW5jdGlvbigpe3JldHVybiBnfTtnLnVubG9jaz1mdW5jdGlvbigpe3JldHVybiBnfTtnLmxvYWQ9ZnVuY3Rpb24oYSl7bCgiandMb2FkIixhKTtyZXR1cm4gZ307Zy5wbGF5bGlzdEl0ZW09ZnVuY3Rpb24oYSl7bCgiandQbGF5bGlzdEl0ZW0iLHBhcnNlSW50KGEpKTtyZXR1cm4gZ307Zy5wbGF5bGlzdFByZXY9ZnVuY3Rpb24oKXtsKCJqd1BsYXlsaXN0UHJldiIpO3JldHVybiBnfTtnLnBsYXlsaXN0TmV4dD1mdW5jdGlvbigpe2woImp3UGxheWxpc3ROZXh0Iik7cmV0dXJuIGd9O2cucmVzaXplPWZ1bmN0aW9uKGEsYil7aWYoImZsYXNoIiE9Zy5yZW5kZXJpbmdNb2RlKXt2YXIgYz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChnLmlkKTtjLmNsYXNzTmFtZT1jLmNsYXNzTmFtZS5yZXBsYWNlKC9ccythc3BlY3RNb2RlLywiIik7Yy5zdHlsZS5kaXNwbGF5PSJibG9jayI7bCgiandSZXNpemUiLGEsYil9ZWxzZXt2YXIgYz1lLmdldEVsZW1lbnRCeUlkKGcuaWQrCiJfd3JhcHBlciIpLGQ9ZS5nZXRFbGVtZW50QnlJZChnLmlkKyJfYXNwZWN0Iik7ZCYmKGQuc3R5bGUuZGlzcGxheT0ibm9uZSIpO2MmJihjLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixjLnN0eWxlLndpZHRoPWsuc3R5bGVEaW1lbnNpb24oYSksYy5zdHlsZS5oZWlnaHQ9ay5zdHlsZURpbWVuc2lvbihiKSl9cmV0dXJuIGd9O2cucGxheT1mdW5jdGlvbihhKXsidW5kZWZpbmVkIj09dHlwZW9mIGE/KGE9Zy5nZXRTdGF0ZSgpLGE9PWguUExBWUlOR3x8YT09aC5CVUZGRVJJTkc/bCgiandQYXVzZSIpOmwoImp3UGxheSIpKTpsKCJqd1BsYXkiLGEpO3JldHVybiBnfTtnLnBhdXNlPWZ1bmN0aW9uKGEpeyJ1bmRlZmluZWQiPT10eXBlb2YgYT8oYT1nLmdldFN0YXRlKCksYT09aC5QTEFZSU5HfHxhPT1oLkJVRkZFUklORz9sKCJqd1BhdXNlIik6bCgiandQbGF5IikpOmwoImp3UGF1c2UiLGEpO3JldHVybiBnfTtnLnN0b3A9ZnVuY3Rpb24oKXtsKCJqd1N0b3AiKTtyZXR1cm4gZ307Zy5zZWVrPQpmdW5jdGlvbihhKXtsKCJqd1NlZWsiLGEpO3JldHVybiBnfTtnLnNldFZvbHVtZT1mdW5jdGlvbihhKXtsKCJqd1NldFZvbHVtZSIsYSk7cmV0dXJuIGd9O2cubG9hZEluc3RyZWFtPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHc9bmV3IGouaW5zdHJlYW0odGhpcyx0LGEsYil9O2cuZ2V0UXVhbGl0eUxldmVscz1mdW5jdGlvbigpe3JldHVybiBsKCJqd0dldFF1YWxpdHlMZXZlbHMiKX07Zy5nZXRDdXJyZW50UXVhbGl0eT1mdW5jdGlvbigpe3JldHVybiBsKCJqd0dldEN1cnJlbnRRdWFsaXR5Iil9O2cuc2V0Q3VycmVudFF1YWxpdHk9ZnVuY3Rpb24oYSl7bCgiandTZXRDdXJyZW50UXVhbGl0eSIsYSl9O2cuZ2V0Q2FwdGlvbnNMaXN0PWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0Q2FwdGlvbnNMaXN0Iil9O2cuZ2V0Q3VycmVudENhcHRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIGwoImp3R2V0Q3VycmVudENhcHRpb25zIil9O2cuc2V0Q3VycmVudENhcHRpb25zPWZ1bmN0aW9uKGEpe2woImp3U2V0Q3VycmVudENhcHRpb25zIiwKYSl9O2cuZ2V0Q29udHJvbHM9ZnVuY3Rpb24oKXtyZXR1cm4gbCgiandHZXRDb250cm9scyIpfTtnLmdldFNhZmVSZWdpb249ZnVuY3Rpb24oKXtyZXR1cm4gbCgiandHZXRTYWZlUmVnaW9uIil9O2cuc2V0Q29udHJvbHM9ZnVuY3Rpb24oYSl7bCgiandTZXRDb250cm9scyIsYSl9O2cuZGVzdHJveVBsYXllcj1mdW5jdGlvbigpe2woImp3UGxheWVyRGVzdHJveSIpfTtnLnBsYXlBZD1mdW5jdGlvbihhKXtsKCJqd1BsYXlBZCIsYSl9O3ZhciB5PXtvbkJ1ZmZlckNoYW5nZTpmLkpXUExBWUVSX01FRElBX0JVRkZFUixvbkJ1ZmZlckZ1bGw6Zi5KV1BMQVlFUl9NRURJQV9CVUZGRVJfRlVMTCxvbkVycm9yOmYuSldQTEFZRVJfRVJST1Isb25TZXR1cEVycm9yOmYuSldQTEFZRVJfU0VUVVBfRVJST1Isb25GdWxsc2NyZWVuOmYuSldQTEFZRVJfRlVMTFNDUkVFTixvbk1ldGE6Zi5KV1BMQVlFUl9NRURJQV9NRVRBLG9uTXV0ZTpmLkpXUExBWUVSX01FRElBX01VVEUsb25QbGF5bGlzdDpmLkpXUExBWUVSX1BMQVlMSVNUX0xPQURFRCwKb25QbGF5bGlzdEl0ZW06Zi5KV1BMQVlFUl9QTEFZTElTVF9JVEVNLG9uUGxheWxpc3RDb21wbGV0ZTpmLkpXUExBWUVSX1BMQVlMSVNUX0NPTVBMRVRFLG9uUmVhZHk6Zi5BUElfUkVBRFksb25SZXNpemU6Zi5KV1BMQVlFUl9SRVNJWkUsb25Db21wbGV0ZTpmLkpXUExBWUVSX01FRElBX0NPTVBMRVRFLG9uU2VlazpmLkpXUExBWUVSX01FRElBX1NFRUssb25UaW1lOmYuSldQTEFZRVJfTUVESUFfVElNRSxvblZvbHVtZTpmLkpXUExBWUVSX01FRElBX1ZPTFVNRSxvbkJlZm9yZVBsYXk6Zi5KV1BMQVlFUl9NRURJQV9CRUZPUkVQTEFZLG9uQmVmb3JlQ29tcGxldGU6Zi5KV1BMQVlFUl9NRURJQV9CRUZPUkVDT01QTEVURSxvbkRpc3BsYXlDbGljazpmLkpXUExBWUVSX0RJU1BMQVlfQ0xJQ0ssb25Db250cm9sczpmLkpXUExBWUVSX0NPTlRST0xTLG9uUXVhbGl0eUxldmVsczpmLkpXUExBWUVSX01FRElBX0xFVkVMUyxvblF1YWxpdHlDaGFuZ2U6Zi5KV1BMQVlFUl9NRURJQV9MRVZFTF9DSEFOR0VELApvbkNhcHRpb25zTGlzdDpmLkpXUExBWUVSX0NBUFRJT05TX0xJU1Qsb25DYXB0aW9uc0NoYW5nZTpmLkpXUExBWUVSX0NBUFRJT05TX0NIQU5HRUQsb25BZEVycm9yOmYuSldQTEFZRVJfQURfRVJST1Isb25BZENsaWNrOmYuSldQTEFZRVJfQURfQ0xJQ0ssb25BZEltcHJlc3Npb246Zi5KV1BMQVlFUl9BRF9JTVBSRVNTSU9OLG9uQWRUaW1lOmYuSldQTEFZRVJfQURfVElNRSxvbkFkQ29tcGxldGU6Zi5KV1BMQVlFUl9BRF9DT01QTEVURSxvbkFkQ29tcGFuaW9uczpmLkpXUExBWUVSX0FEX0NPTVBBTklPTlN9O2suZm9yZWFjaCh5LGZ1bmN0aW9uKGEpe2dbYV09Yyh5W2FdLHApfSk7dmFyIHo9e29uQnVmZmVyOmguQlVGRkVSSU5HLG9uUGF1c2U6aC5QQVVTRUQsb25QbGF5OmguUExBWUlORyxvbklkbGU6aC5JRExFfTtrLmZvcmVhY2goeixmdW5jdGlvbihhKXtnW2FdPWMoelthXSxuKX0pO2cucmVtb3ZlPWZ1bmN0aW9uKCl7aWYoIXUpdGhyb3ciQ2Fubm90IGNhbGwgcmVtb3ZlKCkgYmVmb3JlIHBsYXllciBpcyByZWFkeSI7CnY9W107ai5kZXN0cm95UGxheWVyKHRoaXMuaWQpfTtnLnNldHVwPWZ1bmN0aW9uKGEpe2lmKGQuZW1iZWQpe3ZhciBiPWUuZ2V0RWxlbWVudEJ5SWQoZy5pZCk7YiYmKGEuZmFsbGJhY2tEaXY9Yik7Yj1nO3Y9W107ai5kZXN0cm95UGxheWVyKGIuaWQpO2I9ZChnLmlkKTtiLmNvbmZpZz1hO3JldHVybiBuZXcgZC5lbWJlZChiKX1yZXR1cm4gZ307Zy5yZWdpc3RlclBsdWdpbj1mdW5jdGlvbihhLGIsYyxlKXtkLnBsdWdpbnMucmVnaXN0ZXJQbHVnaW4oYSxiLGMsZSl9O2cuc2V0UGxheWVyPWZ1bmN0aW9uKGEsYil7dD1hO2cucmVuZGVyaW5nTW9kZT1ifTtnLmRldGFjaE1lZGlhPWZ1bmN0aW9uKCl7aWYoImh0bWw1Ij09Zy5yZW5kZXJpbmdNb2RlKXJldHVybiBsKCJqd0RldGFjaE1lZGlhIil9O2cuYXR0YWNoTWVkaWE9ZnVuY3Rpb24oYSl7aWYoImh0bWw1Ij09Zy5yZW5kZXJpbmdNb2RlKXJldHVybiBsKCJqd0F0dGFjaE1lZGlhIixhKX07Zy5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKGEsCmIpe2lmKHFbYV0pZm9yKHZhciBjPWsudHJhbnNsYXRlRXZlbnRSZXNwb25zZShhLGIpLGQ9MDtkPHFbYV0ubGVuZ3RoO2QrKylpZigiZnVuY3Rpb24iPT10eXBlb2YgcVthXVtkXSl0cnl7YT09Zi5KV1BMQVlFUl9QTEFZTElTVF9MT0FERUQmJmsuZGVlcFJlcGxhY2VLZXlOYW1lKGMucGxheWxpc3QsWyJfX2RvdF9fIiwiX19zcGNfXyIsIl9fZHNoX18iLCJfX2RlZmF1bHRfXyJdLFsiLiIsIiAiLCItIiwiZGVmYXVsdCJdKSxxW2FdW2RdLmNhbGwodGhpcyxjKX1jYXRjaChlKXtrLmxvZygiVGhlcmUgd2FzIGFuIGVycm9yIGNhbGxpbmcgYmFjayBhbiBldmVudCBoYW5kbGVyIil9fTtnLmRpc3BhdGNoSW5zdHJlYW1FdmVudD1mdW5jdGlvbihhKXt3JiZ3LmRpc3BhdGNoRXZlbnQoYSxhcmd1bWVudHMpfTtnLmNhbGxJbnRlcm5hbD1sO2cucGxheWVyUmVhZHk9ZnVuY3Rpb24oYSl7dT0hMDt0fHxnLnNldFBsYXllcihlLmdldEVsZW1lbnRCeUlkKGEuaWQpKTtnLmNvbnRhaW5lcj1lLmdldEVsZW1lbnRCeUlkKGcuaWQpOwprLmZvcmVhY2gocSxmdW5jdGlvbihhKXttKHQsYSl9KTtwKGYuSldQTEFZRVJfUExBWUxJU1RfSVRFTSxmdW5jdGlvbigpe3g9e319KTtwKGYuSldQTEFZRVJfTUVESUFfTUVUQSxmdW5jdGlvbihhKXtrLmV4dGVuZCh4LGEubWV0YWRhdGEpfSk7Zm9yKGcuZGlzcGF0Y2hFdmVudChmLkFQSV9SRUFEWSk7MDx2Lmxlbmd0aDspbC5hcHBseSh0aGlzLHYuc2hpZnQoKSl9O2cuZ2V0SXRlbU1ldGE9ZnVuY3Rpb24oKXtyZXR1cm4geH07Zy5pc0JlZm9yZVBsYXk9ZnVuY3Rpb24oKXtyZXR1cm4gdC5qd0lzQmVmb3JlUGxheSgpfTtnLmlzQmVmb3JlQ29tcGxldGU9ZnVuY3Rpb24oKXtyZXR1cm4gdC5qd0lzQmVmb3JlQ29tcGxldGUoKX07cmV0dXJuIGd9O2ouc2VsZWN0UGxheWVyPWZ1bmN0aW9uKGIpe3ZhciBjO2suZXhpc3RzKGIpfHwoYj0wKTtiLm5vZGVUeXBlP2M9Yjoic3RyaW5nIj09dHlwZW9mIGImJihjPWUuZ2V0RWxlbWVudEJ5SWQoYikpO3JldHVybiBjPyhiPWoucGxheWVyQnlJZChjLmlkKSk/CmI6ai5hZGRQbGF5ZXIobmV3IGooYykpOiJudW1iZXIiPT10eXBlb2YgYj9hW2JdOm51bGx9O2oucGxheWVyQnlJZD1mdW5jdGlvbihiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZihhW2NdLmlkPT1iKXJldHVybiBhW2NdO3JldHVybiBudWxsfTtqLmFkZFBsYXllcj1mdW5jdGlvbihiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKylpZihhW2NdPT1iKXJldHVybiBiO2EucHVzaChiKTtyZXR1cm4gYn07ai5kZXN0cm95UGxheWVyPWZ1bmN0aW9uKGIpe2Zvcih2YXIgYz0tMSxkLGY9MDtmPGEubGVuZ3RoO2YrKylhW2ZdLmlkPT1iJiYoYz1mLGQ9YVtmXSk7MDw9YyYmKGI9ZC5pZCxmPWUuZ2V0RWxlbWVudEJ5SWQoYisoImZsYXNoIj09ZC5yZW5kZXJpbmdNb2RlPyJfd3JhcHBlciI6IiIpKSxrLmNsZWFyQ3NzJiZrLmNsZWFyQ3NzKCIjIitiKSxmJiYoImh0bWw1Ij09ZC5yZW5kZXJpbmdNb2RlJiZkLmRlc3Ryb3lQbGF5ZXIoKSxkPWUuY3JlYXRlRWxlbWVudCgiZGl2IiksCmQuaWQ9YixmLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGQsZikpLGEuc3BsaWNlKGMsMSkpO3JldHVybiBudWxsfTtkLnBsYXllclJlYWR5PWZ1bmN0aW9uKGEpe3ZhciBjPWQuYXBpLnBsYXllckJ5SWQoYS5pZCk7Yz9jLnBsYXllclJlYWR5KGEpOmQuYXBpLnNlbGVjdFBsYXllcihhLmlkKS5wbGF5ZXJSZWFkeShhKX19KGp3cGxheWVyKSxmdW5jdGlvbihkKXt2YXIgYT1kLmV2ZW50cyxrPWQudXRpbHMsZj1hLnN0YXRlO2QuYXBpLmluc3RyZWFtPWZ1bmN0aW9uKGQsZSxqLGIpe2Z1bmN0aW9uIGMoYSxiKXtsW2FdfHwobFthXT1bXSxwLmp3SW5zdHJlYW1BZGRFdmVudExpc3RlbmVyKGEsJ2Z1bmN0aW9uKGRhdCkgeyBqd3BsYXllcigiJyttLmlkKyciKS5kaXNwYXRjaEluc3RyZWFtRXZlbnQoIicrYSsnIiwgZGF0KTsgfScpKTtsW2FdLnB1c2goYik7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gbihiLGQpe2dbYl18fChnW2JdPVtdLGMoYS5KV1BMQVlFUl9QTEFZRVJfU1RBVEUsZnVuY3Rpb24oYSl7dmFyIGM9CmEubmV3c3RhdGUsZD1hLm9sZHN0YXRlO2lmKGM9PWIpe3ZhciBlPWdbY107aWYoZSlmb3IodmFyIGY9MDtmPGUubGVuZ3RoO2YrKykiZnVuY3Rpb24iPT10eXBlb2YgZVtmXSYmZVtmXS5jYWxsKHRoaXMse29sZHN0YXRlOmQsbmV3c3RhdGU6Yyx0eXBlOmEudHlwZX0pfX0pKTtnW2JdLnB1c2goZCk7cmV0dXJuIHRoaXN9dmFyIG09ZCxwPWUsbD17fSxnPXt9O3RoaXMuZGlzcGF0Y2hFdmVudD1mdW5jdGlvbihhLGIpe2lmKGxbYV0pZm9yKHZhciBjPWsudHJhbnNsYXRlRXZlbnRSZXNwb25zZShhLGJbMV0pLGQ9MDtkPGxbYV0ubGVuZ3RoO2QrKykiZnVuY3Rpb24iPT10eXBlb2YgbFthXVtkXSYmbFthXVtkXS5jYWxsKHRoaXMsYyl9O3RoaXMub25FcnJvcj1mdW5jdGlvbihiKXtyZXR1cm4gYyhhLkpXUExBWUVSX0VSUk9SLGIpfTt0aGlzLm9uRnVsbHNjcmVlbj1mdW5jdGlvbihiKXtyZXR1cm4gYyhhLkpXUExBWUVSX0ZVTExTQ1JFRU4sYil9O3RoaXMub25NZXRhPWZ1bmN0aW9uKGIpe3JldHVybiBjKGEuSldQTEFZRVJfTUVESUFfTUVUQSwKYil9O3RoaXMub25NdXRlPWZ1bmN0aW9uKGIpe3JldHVybiBjKGEuSldQTEFZRVJfTUVESUFfTVVURSxiKX07dGhpcy5vbkNvbXBsZXRlPWZ1bmN0aW9uKGIpe3JldHVybiBjKGEuSldQTEFZRVJfTUVESUFfQ09NUExFVEUsYil9O3RoaXMub25UaW1lPWZ1bmN0aW9uKGIpe3JldHVybiBjKGEuSldQTEFZRVJfTUVESUFfVElNRSxiKX07dGhpcy5vbkJ1ZmZlcj1mdW5jdGlvbihhKXtyZXR1cm4gbihmLkJVRkZFUklORyxhKX07dGhpcy5vblBhdXNlPWZ1bmN0aW9uKGEpe3JldHVybiBuKGYuUEFVU0VELGEpfTt0aGlzLm9uUGxheT1mdW5jdGlvbihhKXtyZXR1cm4gbihmLlBMQVlJTkcsYSl9O3RoaXMub25JZGxlPWZ1bmN0aW9uKGEpe3JldHVybiBuKGYuSURMRSxhKX07dGhpcy5vbkNsaWNrPWZ1bmN0aW9uKGIpe3JldHVybiBjKGEuSldQTEFZRVJfSU5TVFJFQU1fQ0xJQ0ssYil9O3RoaXMub25JbnN0cmVhbURlc3Ryb3llZD1mdW5jdGlvbihiKXtyZXR1cm4gYyhhLkpXUExBWUVSX0lOU1RSRUFNX0RFU1RST1lFRCwKYil9O3RoaXMucGxheT1mdW5jdGlvbihhKXtwLmp3SW5zdHJlYW1QbGF5KGEpfTt0aGlzLnBhdXNlPWZ1bmN0aW9uKGEpe3AuandJbnN0cmVhbVBhdXNlKGEpfTt0aGlzLmRlc3Ryb3k9ZnVuY3Rpb24oKXtwLmp3SW5zdHJlYW1EZXN0cm95KCl9O3RoaXMuc2V0VGV4dD1mdW5jdGlvbihhKXtwLmp3SW5zdHJlYW1TZXRUZXh0KGE/YToiIil9O20uY2FsbEludGVybmFsKCJqd0xvYWRJbnN0cmVhbSIsaixiP2I6e30pfX0oandwbGF5ZXIpLGZ1bmN0aW9uKGQpe3ZhciBhPWQuYXBpLGs9YS5zZWxlY3RQbGF5ZXI7YS5zZWxlY3RQbGF5ZXI9ZnVuY3Rpb24oYSl7cmV0dXJuKGE9ayhhKSk/YTp7cmVnaXN0ZXJQbHVnaW46ZnVuY3Rpb24oYSxlLGYpe2QucGx1Z2lucy5yZWdpc3RlclBsdWdpbihhLGUsZil9fX19KGp3cGxheWVyKSk7",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 07:55:56 GMT",
                    "Content-Length": "49777",
                    "Date": "Fri, 07 Nov 2014 07:55:56 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}