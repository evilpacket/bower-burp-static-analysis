{
    "url": "http://localhost:9999/woothemes/woocommerce/apigen/templates/woodocs/resources/combined.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cross-site scripting (DOM-based)",
    "issueType": 2097936,
    "severity": "High",
    "confidence": "Firm",
    "issueBackground": "DOM-based cross-site scripting vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the HTML document in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.<br><br>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.<br><br>Users can be induced to visit the attacker's crafted URL in various ways, similar to the usual attack delivery vectors for reflected cross-site scripting vulnerabilities. ",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cross-site scripting vulnerabilities is not to dynamically write data into the HTML document that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing script code into the document. In many cases, the relevant data can be validated on a whitelist basis, to allow only content that is known to be safe. In other cases, it will be necessary to sanitize or encode the data. This can be a complex task, and depending on the context that the data is to be inserted may need to involve a combination of JavaScript escaping, HTML encoding, and URL encoding, in the appropriate sequence.",
    "issueDetail": "The application may be vulnerable to DOM-based cross-site scripting. Data is read from <b>window.location.hash</b> and written to <b>$()</b> via the following statements:<ul><li>var matches = window.location.hash.substr(1).match(/^\\d+(?:-\\d+)?(?:,\\d+(?:-\\d+)?)*$/);</li><li>var lists = matches[0].split(',');</li><li>var lines = lists[i].split('-');</li><li>var j = lines[0]</li><li>$('#' + j).addClass('selected');</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/woothemes/woocommerce/apigen/templates/woodocs/resources/combined.js",
                "path": "/woothemes/woocommerce/apigen/templates/woodocs/resources/combined.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC93b290aGVtZXMvd29vY29tbWVyY2UvYXBpZ2VuL3RlbXBsYXRlcy93b29kb2NzL3Jlc291cmNlcy9jb21iaW5lZC5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogMTMxNTc1DQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBTdW4sIDA5IE5vdiAyMDE0IDAzOjA4OjIyIEdNVA0KTGFzdC1Nb2RpZmllZDogU3VuLCAwOSBOb3YgMjAxNCAwMzowODoyMSBHTVQNCg0KCnZhciBBcGlHZW4gPSBBcGlHZW4gfHwge307CkFwaUdlbi5jb25maWcgPSB7InJlcXVpcmUiOnsibWluIjoiMi44LjAifSwicmVzb3VyY2VzIjp7InJlc291cmNlcyI6InJlc291cmNlcyJ9LCJ0ZW1wbGF0ZXMiOnsiY29tbW9uIjp7Im92ZXJ2aWV3LmxhdHRlIjoiaW5kZXguaHRtbCIsImNvbWJpbmVkLmpzLmxhdHRlIjoicmVzb3VyY2VzXC9jb21iaW5lZC5qcyIsImVsZW1lbnRsaXN0LmpzLmxhdHRlIjoiZWxlbWVudGxpc3QuanMiLCI0MDQubGF0dGUiOiI0MDQuaHRtbCJ9LCJvcHRpb25hbCI6eyJzaXRlbWFwIjp7ImZpbGVuYW1lIjoic2l0ZW1hcC54bWwiLCJ0ZW1wbGF0ZSI6InNpdGVtYXAueG1sLmxhdHRlIn0sIm9wZW5zZWFyY2giOnsiZmlsZW5hbWUiOiJvcGVuc2VhcmNoLnhtbCIsInRlbXBsYXRlIjoib3BlbnNlYXJjaC54bWwubGF0dGUifSwicm9ib3RzIjp7ImZpbGVuYW1lIjoicm9ib3RzLnR4dCIsInRlbXBsYXRlIjoicm9ib3RzLnR4dC5sYXR0ZSJ9fSwibWFpbiI6eyJwYWNrYWdlIjp7ImZpbGVuYW1lIjoicGFja2FnZS0lcy5odG1sIiwidGVtcGxhdGUiOiJwYWNrYWdlLmxhdHRlIn0sIm5hbWVzcGFjZSI6eyJmaWxlbmFtZSI6Im5hbWVzcGFjZS0lcy5odG1sIiwidGVtcGxhdGUiOiJuYW1lc3BhY2UubGF0dGUifSwiY2xhc3MiOnsiZmlsZW5hbWUiOiJjbGFzcy0lcy5odG1sIiwidGVtcGxhdGUiOiJjbGFzcy5sYXR0ZSJ9LCJjb25zdGFudCI6eyJmaWxlbmFtZSI6ImNvbnN0YW50LSVzLmh0bWwiLCJ0ZW1wbGF0ZSI6ImNvbnN0YW50LmxhdHRlIn0sImZ1bmN0aW9uIjp7ImZpbGVuYW1lIjoiZnVuY3Rpb24tJXMuaHRtbCIsInRlbXBsYXRlIjoiZnVuY3Rpb24ubGF0dGUifSwic291cmNlIjp7ImZpbGVuYW1lIjoic291cmNlLSVzLmh0bWwiLCJ0ZW1wbGF0ZSI6InNvdXJjZS5sYXR0ZSJ9LCJ0cmVlIjp7ImZpbGVuYW1lIjoidHJlZS5odG1sIiwidGVtcGxhdGUiOiJ0cmVlLmxhdHRlIn0sImRlcHJlY2F0ZWQiOnsiZmlsZW5hbWUiOiJkZXByZWNhdGVkLmh0bWwiLCJ0ZW1wbGF0ZSI6ImRlcHJlY2F0ZWQubGF0dGUifSwidG9kbyI6eyJmaWxlbmFtZSI6InRvZG8uaHRtbCIsInRlbXBsYXRlIjoidG9kby5sYXR0ZSJ9fX0sIm9wdGlvbnMiOnsiZWxlbWVudERldGFpbHNDb2xsYXBzZWQiOnRydWUsImVsZW1lbnRzT3JkZXIiOiJuYXR1cmFsIn0sImNvbmZpZyI6IlwvdXNyXC9sb2NhbFwvc2hhcmVcL3BlYXJcL3RlbXBsYXRlc1wvd29vXC9jb25maWcubmVvbiJ9OwoKCi8qISBqUXVlcnkgdjEuNyBqcXVlcnkuY29tIHwganF1ZXJ5Lm9yZy9saWNlbnNlICovCihmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGNBKGEpe3JldHVybiBmLmlzV2luZG93KGEpP2E6YS5ub2RlVHlwZT09PTk/YS5kZWZhdWx0Vmlld3x8YS5wYXJlbnRXaW5kb3c6ITF9ZnVuY3Rpb24gY3goYSl7aWYoIWNtW2FdKXt2YXIgYj1jLmJvZHksZD1mKCI8IithKyI+IikuYXBwZW5kVG8oYiksZT1kLmNzcygiZGlzcGxheSIpO2QucmVtb3ZlKCk7aWYoZT09PSJub25lInx8ZT09PSIiKXtjbnx8KGNuPWMuY3JlYXRlRWxlbWVudCgiaWZyYW1lIiksY24uZnJhbWVCb3JkZXI9Y24ud2lkdGg9Y24uaGVpZ2h0PTApLGIuYXBwZW5kQ2hpbGQoY24pO2lmKCFjb3x8IWNuLmNyZWF0ZUVsZW1lbnQpY289KGNuLmNvbnRlbnRXaW5kb3d8fGNuLmNvbnRlbnREb2N1bWVudCkuZG9jdW1lbnQsY28ud3JpdGUoKGMuY29tcGF0TW9kZT09PSJDU1MxQ29tcGF0Ij8iPCFkb2N0eXBlIGh0bWw+IjoiIikrIjxodG1sPjxib2R5PiIpLGNvLmNsb3NlKCk7ZD1jby5jcmVhdGVFbGVtZW50KGEpLGNvLmJvZHkuYXBwZW5kQ2hpbGQoZCksZT1mLmNzcyhkLCJkaXNwbGF5IiksYi5yZW1vdmVDaGlsZChjbil9Y21bYV09ZX1yZXR1cm4gY21bYV19ZnVuY3Rpb24gY3coYSxiKXt2YXIgYz17fTtmLmVhY2goY3MuY29uY2F0LmFwcGx5KFtdLGNzLnNsaWNlKDAsYikpLGZ1bmN0aW9uKCl7Y1t0aGlzXT1hfSk7cmV0dXJuIGN9ZnVuY3Rpb24gY3YoKXtjdD1ifWZ1bmN0aW9uIGN1KCl7c2V0VGltZW91dChjdiwwKTtyZXR1cm4gY3Q9Zi5ub3coKX1mdW5jdGlvbiBjbCgpe3RyeXtyZXR1cm4gbmV3IGEuQWN0aXZlWE9iamVjdCgiTWljcm9zb2Z0LlhNTEhUVFAiKX1jYXRjaChiKXt9fWZ1bmN0aW9uIGNrKCl7dHJ5e3JldHVybiBuZXcgYS5YTUxIdHRwUmVxdWVzdH1jYXRjaChiKXt9fWZ1bmN0aW9uIGNlKGEsYyl7YS5kYXRhRmlsdGVyJiYoYz1hLmRhdGFGaWx0ZXIoYyxhLmRhdGFUeXBlKSk7dmFyIGQ9YS5kYXRhVHlwZXMsZT17fSxnLGgsaT1kLmxlbmd0aCxqLGs9ZFswXSxsLG0sbixvLHA7Zm9yKGc9MTtnPGk7ZysrKXtpZihnPT09MSlmb3IoaCBpbiBhLmNvbnZlcnRlcnMpdHlwZW9mIGg9PSJzdHJpbmciJiYoZVtoLnRvTG93ZXJDYXNlKCldPWEuY29udmVydGVyc1toXSk7bD1rLGs9ZFtnXTtpZihrPT09IioiKWs9bDtlbHNlIGlmKGwhPT0iKiImJmwhPT1rKXttPWwrIiAiK2ssbj1lW21dfHxlWyIqICIra107aWYoIW4pe3A9Yjtmb3IobyBpbiBlKXtqPW8uc3BsaXQoIiAiKTtpZihqWzBdPT09bHx8alswXT09PSIqIil7cD1lW2pbMV0rIiAiK2tdO2lmKHApe289ZVtvXSxvPT09ITA/bj1wOnA9PT0hMCYmKG49byk7YnJlYWt9fX19IW4mJiFwJiZmLmVycm9yKCJObyBjb252ZXJzaW9uIGZyb20gIittLnJlcGxhY2UoIiAiLCIgdG8gIikpLG4hPT0hMCYmKGM9bj9uKGMpOnAobyhjKSkpfX1yZXR1cm4gY31mdW5jdGlvbiBjZChhLGMsZCl7dmFyIGU9YS5jb250ZW50cyxmPWEuZGF0YVR5cGVzLGc9YS5yZXNwb25zZUZpZWxkcyxoLGksaixrO2ZvcihpIGluIGcpaSBpbiBkJiYoY1tnW2ldXT1kW2ldKTt3aGlsZShmWzBdPT09IioiKWYuc2hpZnQoKSxoPT09YiYmKGg9YS5taW1lVHlwZXx8Yy5nZXRSZXNwb25zZUhlYWRlcigiY29udGVudC10eXBlIikpO2lmKGgpZm9yKGkgaW4gZSlpZihlW2ldJiZlW2ldLnRlc3QoaCkpe2YudW5zaGlmdChpKTticmVha31pZihmWzBdaW4gZClqPWZbMF07ZWxzZXtmb3IoaSBpbiBkKXtpZighZlswXXx8YS5jb252ZXJ0ZXJzW2krIiAiK2ZbMF1dKXtqPWk7YnJlYWt9a3x8KGs9aSl9aj1qfHxrfWlmKGope2ohPT1mWzBdJiZmLnVuc2hpZnQoaik7cmV0dXJuIGRbal19fWZ1bmN0aW9uIGNjKGEsYixjLGQpe2lmKGYuaXNBcnJheShiKSlmLmVhY2goYixmdW5jdGlvbihiLGUpe2N8fGJHLnRlc3QoYSk/ZChhLGUpOmNjKGErIlsiKyh0eXBlb2YgZT09Im9iamVjdCJ8fGYuaXNBcnJheShlKT9iOiIiKSsiXSIsZSxjLGQpfSk7ZWxzZSBpZighYyYmYiE9bnVsbCYmdHlwZW9mIGI9PSJvYmplY3QiKWZvcih2YXIgZSBpbiBiKWNjKGErIlsiK2UrIl0iLGJbZV0sYyxkKTtlbHNlIGQoYSxiKX1mdW5jdGlvbiBjYihhLGMpe3ZhciBkLGUsZz1mLmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9uc3x8e307Zm9yKGQgaW4gYyljW2RdIT09YiYmKChnW2RdP2E6ZXx8KGU9e30pKVtkXT1jW2RdKTtlJiZmLmV4dGVuZCghMCxhLGUpfWZ1bmN0aW9uIGNhKGEsYyxkLGUsZixnKXtmPWZ8fGMuZGF0YVR5cGVzWzBdLGc9Z3x8e30sZ1tmXT0hMDt2YXIgaD1hW2ZdLGk9MCxqPWg/aC5sZW5ndGg6MCxrPWE9PT1iVixsO2Zvcig7aTxqJiYoa3x8IWwpO2krKylsPWhbaV0oYyxkLGUpLHR5cGVvZiBsPT0ic3RyaW5nIiYmKCFrfHxnW2xdP2w9YjooYy5kYXRhVHlwZXMudW5zaGlmdChsKSxsPWNhKGEsYyxkLGUsbCxnKSkpOyhrfHwhbCkmJiFnWyIqIl0mJihsPWNhKGEsYyxkLGUsIioiLGcpKTtyZXR1cm4gbH1mdW5jdGlvbiBiXyhhKXtyZXR1cm4gZnVuY3Rpb24oYixjKXt0eXBlb2YgYiE9InN0cmluZyImJihjPWIsYj0iKiIpO2lmKGYuaXNGdW5jdGlvbihjKSl7dmFyIGQ9Yi50b0xvd2VyQ2FzZSgpLnNwbGl0KGJSKSxlPTAsZz1kLmxlbmd0aCxoLGksajtmb3IoO2U8ZztlKyspaD1kW2VdLGo9L15cKy8udGVzdChoKSxqJiYoaD1oLnN1YnN0cigxKXx8IioiKSxpPWFbaF09YVtoXXx8W10saVtqPyJ1bnNoaWZ0IjoicHVzaCJdKGMpfX19ZnVuY3Rpb24gYkUoYSxiLGMpe3ZhciBkPWI9PT0id2lkdGgiP2Eub2Zmc2V0V2lkdGg6YS5vZmZzZXRIZWlnaHQsZT1iPT09IndpZHRoIj9iejpiQTtpZihkPjApe2MhPT0iYm9yZGVyIiYmZi5lYWNoKGUsZnVuY3Rpb24oKXtjfHwoZC09cGFyc2VGbG9hdChmLmNzcyhhLCJwYWRkaW5nIit0aGlzKSl8fDApLGM9PT0ibWFyZ2luIj9kKz1wYXJzZUZsb2F0KGYuY3NzKGEsYyt0aGlzKSl8fDA6ZC09cGFyc2VGbG9hdChmLmNzcyhhLCJib3JkZXIiK3RoaXMrIldpZHRoIikpfHwwfSk7cmV0dXJuIGQrInB4In1kPWJCKGEsYixiKTtpZihkPDB8fGQ9PW51bGwpZD1hLnN0eWxlW2JdfHwwO2Q9cGFyc2VGbG9hdChkKXx8MCxjJiZmLmVhY2goZSxmdW5jdGlvbigpe2QrPXBhcnNlRmxvYXQoZi5jc3MoYSwicGFkZGluZyIrdGhpcykpfHwwLGMhPT0icGFkZGluZyImJihkKz1wYXJzZUZsb2F0KGYuY3NzKGEsImJvcmRlciIrdGhpcysiV2lkdGgiKSl8fDApLGM9PT0ibWFyZ2luIiYmKGQrPXBhcnNlRmxvYXQoZi5jc3MoYSxjK3RoaXMpKXx8MCl9KTtyZXR1cm4gZCsicHgifWZ1bmN0aW9uIGJyKGEsYil7Yi5zcmM/Zi5hamF4KHt1cmw6Yi5zcmMsYXN5bmM6ITEsZGF0YVR5cGU6InNjcmlwdCJ9KTpmLmdsb2JhbEV2YWwoKGIudGV4dHx8Yi50ZXh0Q29udGVudHx8Yi5pbm5lckhUTUx8fCIiKS5yZXBsYWNlKGJpLCIvKiQwKi8iKSksYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYil9ZnVuY3Rpb24gYnEoYSl7dmFyIGI9KGEubm9kZU5hbWV8fCIiKS50b0xvd2VyQ2FzZSgpO2I9PT0iaW5wdXQiP2JwKGEpOmIhPT0ic2NyaXB0IiYmdHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPSJ1bmRlZmluZWQiJiZmLmdyZXAoYS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaW5wdXQiKSxicCl9ZnVuY3Rpb24gYnAoYSl7aWYoYS50eXBlPT09ImNoZWNrYm94Inx8YS50eXBlPT09InJhZGlvIilhLmRlZmF1bHRDaGVja2VkPWEuY2hlY2tlZH1mdW5jdGlvbiBibyhhKXtyZXR1cm4gdHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPSJ1bmRlZmluZWQiP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKTp0eXBlb2YgYS5xdWVyeVNlbGVjdG9yQWxsIT0idW5kZWZpbmVkIj9hLnF1ZXJ5U2VsZWN0b3JBbGwoIioiKTpbXX1mdW5jdGlvbiBibihhLGIpe3ZhciBjO2lmKGIubm9kZVR5cGU9PT0xKXtiLmNsZWFyQXR0cmlidXRlcyYmYi5jbGVhckF0dHJpYnV0ZXMoKSxiLm1lcmdlQXR0cmlidXRlcyYmYi5tZXJnZUF0dHJpYnV0ZXMoYSksYz1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoYz09PSJvYmplY3QiKWIub3V0ZXJIVE1MPWEub3V0ZXJIVE1MO2Vsc2UgaWYoYyE9PSJpbnB1dCJ8fGEudHlwZSE9PSJjaGVja2JveCImJmEudHlwZSE9PSJyYWRpbyIpe2lmKGM9PT0ib3B0aW9uIiliLnNlbGVjdGVkPWEuZGVmYXVsdFNlbGVjdGVkO2Vsc2UgaWYoYz09PSJpbnB1dCJ8fGM9PT0idGV4dGFyZWEiKWIuZGVmYXVsdFZhbHVlPWEuZGVmYXVsdFZhbHVlfWVsc2UgYS5jaGVja2VkJiYoYi5kZWZhdWx0Q2hlY2tlZD1iLmNoZWNrZWQ9YS5jaGVja2VkKSxiLnZhbHVlIT09YS52YWx1ZSYmKGIudmFsdWU9YS52YWx1ZSk7Yi5yZW1vdmVBdHRyaWJ1dGUoZi5leHBhbmRvKX19ZnVuY3Rpb24gYm0oYSxiKXtpZihiLm5vZGVUeXBlPT09MSYmISFmLmhhc0RhdGEoYSkpe3ZhciBjLGQsZSxnPWYuX2RhdGEoYSksaD1mLl9kYXRhKGIsZyksaT1nLmV2ZW50cztpZihpKXtkZWxldGUgaC5oYW5kbGUsaC5ldmVudHM9e307Zm9yKGMgaW4gaSlmb3IoZD0wLGU9aVtjXS5sZW5ndGg7ZDxlO2QrKylmLmV2ZW50LmFkZChiLGMrKGlbY11bZF0ubmFtZXNwYWNlPyIuIjoiIikraVtjXVtkXS5uYW1lc3BhY2UsaVtjXVtkXSxpW2NdW2RdLmRhdGEpfWguZGF0YSYmKGguZGF0YT1mLmV4dGVuZCh7fSxoLmRhdGEpKX19ZnVuY3Rpb24gYmwoYSxiKXtyZXR1cm4gZi5ub2RlTmFtZShhLCJ0YWJsZSIpP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRib2R5IilbMF18fGEuYXBwZW5kQ2hpbGQoYS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRib2R5IikpOmF9ZnVuY3Rpb24gWChhKXt2YXIgYj1ZLnNwbGl0KCIgIiksYz1hLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihjLmNyZWF0ZUVsZW1lbnQpd2hpbGUoYi5sZW5ndGgpYy5jcmVhdGVFbGVtZW50KGIucG9wKCkpO3JldHVybiBjfWZ1bmN0aW9uIFcoYSxiLGMpe2I9Ynx8MDtpZihmLmlzRnVuY3Rpb24oYikpcmV0dXJuIGYuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7dmFyIGU9ISFiLmNhbGwoYSxkLGEpO3JldHVybiBlPT09Y30pO2lmKGIubm9kZVR5cGUpcmV0dXJuIGYuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7cmV0dXJuIGE9PT1iPT09Y30pO2lmKHR5cGVvZiBiPT0ic3RyaW5nIil7dmFyIGQ9Zi5ncmVwKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZVR5cGU9PT0xfSk7aWYoUi50ZXN0KGIpKXJldHVybiBmLmZpbHRlcihiLGQsIWMpO2I9Zi5maWx0ZXIoYixkKX1yZXR1cm4gZi5ncmVwKGEsZnVuY3Rpb24oYSxkKXtyZXR1cm4gZi5pbkFycmF5KGEsYik+PTA9PT1jfSl9ZnVuY3Rpb24gVihhKXtyZXR1cm4hYXx8IWEucGFyZW50Tm9kZXx8YS5wYXJlbnROb2RlLm5vZGVUeXBlPT09MTF9ZnVuY3Rpb24gTigpe3JldHVybiEwfWZ1bmN0aW9uIE0oKXtyZXR1cm4hMX1mdW5jdGlvbiBuKGEsYixjKXt2YXIgZD1iKyJkZWZlciIsZT1iKyJxdWV1ZSIsZz1iKyJtYXJrIixoPWYuX2RhdGEoYSxkKTtoJiYoYz09PSJxdWV1ZSJ8fCFmLl9kYXRhKGEsZSkpJiYoYz09PSJtYXJrInx8IWYuX2RhdGEoYSxnKSkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXshZi5fZGF0YShhLGUpJiYhZi5fZGF0YShhLGcpJiYoZi5yZW1vdmVEYXRhKGEsZCwhMCksaC5maXJlKCkpfSwwKX1mdW5jdGlvbiBtKGEpe2Zvcih2YXIgYiBpbiBhKXtpZihiPT09ImRhdGEiJiZmLmlzRW1wdHlPYmplY3QoYVtiXSkpY29udGludWU7aWYoYiE9PSJ0b0pTT04iKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIGwoYSxjLGQpe2lmKGQ9PT1iJiZhLm5vZGVUeXBlPT09MSl7dmFyIGU9ImRhdGEtIitjLnJlcGxhY2UoaywiLSQxIikudG9Mb3dlckNhc2UoKTtkPWEuZ2V0QXR0cmlidXRlKGUpO2lmKHR5cGVvZiBkPT0ic3RyaW5nIil7dHJ5e2Q9ZD09PSJ0cnVlIj8hMDpkPT09ImZhbHNlIj8hMTpkPT09Im51bGwiP251bGw6Zi5pc051bWVyaWMoZCk/cGFyc2VGbG9hdChkKTpqLnRlc3QoZCk/Zi5wYXJzZUpTT04oZCk6ZH1jYXRjaChnKXt9Zi5kYXRhKGEsYyxkKX1lbHNlIGQ9Yn1yZXR1cm4gZH1mdW5jdGlvbiBoKGEpe3ZhciBiPWdbYV09e30sYyxkO2E9YS5zcGxpdCgvXHMrLyk7Zm9yKGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspYlthW2NdXT0hMDtyZXR1cm4gYn12YXIgYz1hLmRvY3VtZW50LGQ9YS5uYXZpZ2F0b3IsZT1hLmxvY2F0aW9uLGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBLKCl7aWYoIWUuaXNSZWFkeSl7dHJ5e2MuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsKCJsZWZ0Iil9Y2F0Y2goYSl7c2V0VGltZW91dChLLDEpO3JldHVybn1lLnJlYWR5KCl9fXZhciBlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBlLmZuLmluaXQoYSxiLGgpfSxmPWEualF1ZXJ5LGc9YS4kLGgsaT0vXig/OlteIzxdKig8W1x3XFddKz4pW14+XSokfCMoW1x3XC1dKikkKS8saj0vXFMvLGs9L15ccysvLGw9L1xzKyQvLG09L1xkLyxuPS9ePChcdyspXHMqXC8/Pig/OjxcL1wxPik/JC8sbz0vXltcXSw6e31cc10qJC8scD0vXFwoPzpbIlxcXC9iZm5ydF18dVswLTlhLWZBLUZdezR9KS9nLHE9LyJbXiJcXFxuXHJdKiJ8dHJ1ZXxmYWxzZXxudWxsfC0/XGQrKD86XC5cZCopPyg/OltlRV1bK1wtXT9cZCspPy9nLHI9Lyg/Ol58OnwsKSg/OlxzKlxbKSsvZyxzPS8od2Via2l0KVsgXC9dKFtcdy5dKykvLHQ9LyhvcGVyYSkoPzouKnZlcnNpb24pP1sgXC9dKFtcdy5dKykvLHU9Lyhtc2llKSAoW1x3Ll0rKS8sdj0vKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vLHc9Ly0oW2Etel18WzAtOV0pL2lnLHg9L14tbXMtLyx5PWZ1bmN0aW9uKGEsYil7cmV0dXJuKGIrIiIpLnRvVXBwZXJDYXNlKCl9LHo9ZC51c2VyQWdlbnQsQSxCLEMsRD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLEU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxGPUFycmF5LnByb3RvdHlwZS5wdXNoLEc9QXJyYXkucHJvdG90eXBlLnNsaWNlLEg9U3RyaW5nLnByb3RvdHlwZS50cmltLEk9QXJyYXkucHJvdG90eXBlLmluZGV4T2YsSj17fTtlLmZuPWUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjplLGluaXQ6ZnVuY3Rpb24oYSxkLGYpe3ZhciBnLGgsaixrO2lmKCFhKXJldHVybiB0aGlzO2lmKGEubm9kZVR5cGUpe3RoaXMuY29udGV4dD10aGlzWzBdPWEsdGhpcy5sZW5ndGg9MTtyZXR1cm4gdGhpc31pZihhPT09ImJvZHkiJiYhZCYmYy5ib2R5KXt0aGlzLmNvbnRleHQ9Yyx0aGlzWzBdPWMuYm9keSx0aGlzLnNlbGVjdG9yPWEsdGhpcy5sZW5ndGg9MTtyZXR1cm4gdGhpc31pZih0eXBlb2YgYT09InN0cmluZyIpe2EuY2hhckF0KDApIT09IjwifHxhLmNoYXJBdChhLmxlbmd0aC0xKSE9PSI+Inx8YS5sZW5ndGg8Mz9nPWkuZXhlYyhhKTpnPVtudWxsLGEsbnVsbF07aWYoZyYmKGdbMV18fCFkKSl7aWYoZ1sxXSl7ZD1kIGluc3RhbmNlb2YgZT9kWzBdOmQsaz1kP2Qub3duZXJEb2N1bWVudHx8ZDpjLGo9bi5leGVjKGEpLGo/ZS5pc1BsYWluT2JqZWN0KGQpPyhhPVtjLmNyZWF0ZUVsZW1lbnQoalsxXSldLGUuZm4uYXR0ci5jYWxsKGEsZCwhMCkpOmE9W2suY3JlYXRlRWxlbWVudChqWzFdKV06KGo9ZS5idWlsZEZyYWdtZW50KFtnWzFdXSxba10pLGE9KGouY2FjaGVhYmxlP2UuY2xvbmUoai5mcmFnbWVudCk6ai5mcmFnbWVudCkuY2hpbGROb2Rlcyk7cmV0dXJuIGUubWVyZ2UodGhpcyxhKX1oPWMuZ2V0RWxlbWVudEJ5SWQoZ1syXSk7aWYoaCYmaC5wYXJlbnROb2RlKXtpZihoLmlkIT09Z1syXSlyZXR1cm4gZi5maW5kKGEpO3RoaXMubGVuZ3RoPTEsdGhpc1swXT1ofXRoaXMuY29udGV4dD1jLHRoaXMuc2VsZWN0b3I9YTtyZXR1cm4gdGhpc31yZXR1cm4hZHx8ZC5qcXVlcnk/KGR8fGYpLmZpbmQoYSk6dGhpcy5jb25zdHJ1Y3RvcihkKS5maW5kKGEpfWlmKGUuaXNGdW5jdGlvbihhKSlyZXR1cm4gZi5yZWFkeShhKTthLnNlbGVjdG9yIT09YiYmKHRoaXMuc2VsZWN0b3I9YS5zZWxlY3Rvcix0aGlzLmNvbnRleHQ9YS5jb250ZXh0KTtyZXR1cm4gZS5tYWtlQXJyYXkoYSx0aGlzKX0sc2VsZWN0b3I6IiIsanF1ZXJ5OiIxLjciLGxlbmd0aDowLHNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sZW5ndGh9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gRy5jYWxsKHRoaXMsMCl9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gYT09bnVsbD90aGlzLnRvQXJyYXkoKTphPDA/dGhpc1t0aGlzLmxlbmd0aCthXTp0aGlzW2FdfSxwdXNoU3RhY2s6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuY29uc3RydWN0b3IoKTtlLmlzQXJyYXkoYSk/Ri5hcHBseShkLGEpOmUubWVyZ2UoZCxhKSxkLnByZXZPYmplY3Q9dGhpcyxkLmNvbnRleHQ9dGhpcy5jb250ZXh0LGI9PT0iZmluZCI/ZC5zZWxlY3Rvcj10aGlzLnNlbGVjdG9yKyh0aGlzLnNlbGVjdG9yPyIgIjoiIikrYzpiJiYoZC5zZWxlY3Rvcj10aGlzLnNlbGVjdG9yKyIuIitiKyIoIitjKyIpIik7cmV0dXJuIGR9LGVhY2g6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZS5lYWNoKHRoaXMsYSxiKX0scmVhZHk6ZnVuY3Rpb24oYSl7ZS5iaW5kUmVhZHkoKSxCLmFkZChhKTtyZXR1cm4gdGhpc30sZXE6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT0tMT90aGlzLnNsaWNlKGEpOnRoaXMuc2xpY2UoYSwrYSsxKX0sZmlyc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgwKX0sbGFzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKC0xKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soRy5hcHBseSh0aGlzLGFyZ3VtZW50cyksInNsaWNlIixHLmNhbGwoYXJndW1lbnRzKS5qb2luKCIsIikpfSxtYXA6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGUubWFwKHRoaXMsZnVuY3Rpb24oYixjKXtyZXR1cm4gYS5jYWxsKGIsYyxiKX0pKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcihudWxsKX0scHVzaDpGLHNvcnQ6W10uc29ydCxzcGxpY2U6W10uc3BsaWNlfSxlLmZuLmluaXQucHJvdG90eXBlPWUuZm4sZS5leHRlbmQ9ZS5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgYSxjLGQsZixnLGgsaT1hcmd1bWVudHNbMF18fHt9LGo9MSxrPWFyZ3VtZW50cy5sZW5ndGgsbD0hMTt0eXBlb2YgaT09ImJvb2xlYW4iJiYobD1pLGk9YXJndW1lbnRzWzFdfHx7fSxqPTIpLHR5cGVvZiBpIT0ib2JqZWN0IiYmIWUuaXNGdW5jdGlvbihpKSYmKGk9e30pLGs9PT1qJiYoaT10aGlzLC0taik7Zm9yKDtqPGs7aisrKWlmKChhPWFyZ3VtZW50c1tqXSkhPW51bGwpZm9yKGMgaW4gYSl7ZD1pW2NdLGY9YVtjXTtpZihpPT09Ziljb250aW51ZTtsJiZmJiYoZS5pc1BsYWluT2JqZWN0KGYpfHwoZz1lLmlzQXJyYXkoZikpKT8oZz8oZz0hMSxoPWQmJmUuaXNBcnJheShkKT9kOltdKTpoPWQmJmUuaXNQbGFpbk9iamVjdChkKT9kOnt9LGlbY109ZS5leHRlbmQobCxoLGYpKTpmIT09YiYmKGlbY109Zil9cmV0dXJuIGl9LGUuZXh0ZW5kKHtub0NvbmZsaWN0OmZ1bmN0aW9uKGIpe2EuJD09PWUmJihhLiQ9ZyksYiYmYS5qUXVlcnk9PT1lJiYoYS5qUXVlcnk9Zik7cmV0dXJuIGV9LGlzUmVhZHk6ITEscmVhZHlXYWl0OjEsaG9sZFJlYWR5OmZ1bmN0aW9uKGEpe2E/ZS5yZWFkeVdhaXQrKzplLnJlYWR5KCEwKX0scmVhZHk6ZnVuY3Rpb24oYSl7aWYoYT09PSEwJiYhLS1lLnJlYWR5V2FpdHx8YSE9PSEwJiYhZS5pc1JlYWR5KXtpZighYy5ib2R5KXJldHVybiBzZXRUaW1lb3V0KGUucmVhZHksMSk7ZS5pc1JlYWR5PSEwO2lmKGEhPT0hMCYmLS1lLnJlYWR5V2FpdD4wKXJldHVybjtCLmZpcmVXaXRoKGMsW2VdKSxlLmZuLnRyaWdnZXImJmUoYykudHJpZ2dlcigicmVhZHkiKS51bmJpbmQoInJlYWR5Iil9fSxiaW5kUmVhZHk6ZnVuY3Rpb24oKXtpZighQil7Qj1lLkNhbGxiYWNrcygib25jZSBtZW1vcnkiKTtpZihjLnJlYWR5U3RhdGU9PT0iY29tcGxldGUiKXJldHVybiBzZXRUaW1lb3V0KGUucmVhZHksMSk7aWYoYy5hZGRFdmVudExpc3RlbmVyKWMuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsQywhMSksYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixlLnJlYWR5LCExKTtlbHNlIGlmKGMuYXR0YWNoRXZlbnQpe2MuYXR0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsQyksYS5hdHRhY2hFdmVudCgib25sb2FkIixlLnJlYWR5KTt2YXIgYj0hMTt0cnl7Yj1hLmZyYW1lRWxlbWVudD09bnVsbH1jYXRjaChkKXt9Yy5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwmJmImJksoKX19fSxpc0Z1bmN0aW9uOmZ1bmN0aW9uKGEpe3JldHVybiBlLnR5cGUoYSk9PT0iZnVuY3Rpb24ifSxpc0FycmF5OkFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGEpe3JldHVybiBlLnR5cGUoYSk9PT0iYXJyYXkifSxpc1dpbmRvdzpmdW5jdGlvbihhKXtyZXR1cm4gYSYmdHlwZW9mIGE9PSJvYmplY3QiJiYic2V0SW50ZXJ2YWwiaW4gYX0saXNOdW1lcmljOmZ1bmN0aW9uKGEpe3JldHVybiBhIT1udWxsJiZtLnRlc3QoYSkmJiFpc05hTihhKX0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gYT09bnVsbD9TdHJpbmcoYSk6SltELmNhbGwoYSldfHwib2JqZWN0In0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihhKXtpZighYXx8ZS50eXBlKGEpIT09Im9iamVjdCJ8fGEubm9kZVR5cGV8fGUuaXNXaW5kb3coYSkpcmV0dXJuITE7dHJ5e2lmKGEuY29uc3RydWN0b3ImJiFFLmNhbGwoYSwiY29uc3RydWN0b3IiKSYmIUUuY2FsbChhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwiaXNQcm90b3R5cGVPZiIpKXJldHVybiExfWNhdGNoKGMpe3JldHVybiExfXZhciBkO2ZvcihkIGluIGEpO3JldHVybiBkPT09Ynx8RS5jYWxsKGEsZCl9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiIGluIGEpcmV0dXJuITE7cmV0dXJuITB9LGVycm9yOmZ1bmN0aW9uKGEpe3Rocm93IGF9LHBhcnNlSlNPTjpmdW5jdGlvbihiKXtpZih0eXBlb2YgYiE9InN0cmluZyJ8fCFiKXJldHVybiBudWxsO2I9ZS50cmltKGIpO2lmKGEuSlNPTiYmYS5KU09OLnBhcnNlKXJldHVybiBhLkpTT04ucGFyc2UoYik7aWYoby50ZXN0KGIucmVwbGFjZShwLCJAIikucmVwbGFjZShxLCJdIikucmVwbGFjZShyLCIiKSkpcmV0dXJuKG5ldyBGdW5jdGlvbigicmV0dXJuICIrYikpKCk7ZS5lcnJvcigiSW52YWxpZCBKU09OOiAiK2IpfSxwYXJzZVhNTDpmdW5jdGlvbihjKXt2YXIgZCxmO3RyeXthLkRPTVBhcnNlcj8oZj1uZXcgRE9NUGFyc2VyLGQ9Zi5wYXJzZUZyb21TdHJpbmcoYywidGV4dC94bWwiKSk6KGQ9bmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKSxkLmFzeW5jPSJmYWxzZSIsZC5sb2FkWE1MKGMpKX1jYXRjaChnKXtkPWJ9KCFkfHwhZC5kb2N1bWVudEVsZW1lbnR8fGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInBhcnNlcmVycm9yIikubGVuZ3RoKSYmZS5lcnJvcigiSW52YWxpZCBYTUw6ICIrYyk7cmV0dXJuIGR9LG5vb3A6ZnVuY3Rpb24oKXt9LGdsb2JhbEV2YWw6ZnVuY3Rpb24oYil7YiYmai50ZXN0KGIpJiYoYS5leGVjU2NyaXB0fHxmdW5jdGlvbihiKXthLmV2YWwuY2FsbChhLGIpfSkoYil9LGNhbWVsQ2FzZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKHgsIm1zLSIpLnJlcGxhY2Uodyx5KX0sbm9kZU5hbWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpPT09Yi50b1VwcGVyQ2FzZSgpfSxlYWNoOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZixnPTAsaD1hLmxlbmd0aCxpPWg9PT1ifHxlLmlzRnVuY3Rpb24oYSk7aWYoZCl7aWYoaSl7Zm9yKGYgaW4gYSlpZihjLmFwcGx5KGFbZl0sZCk9PT0hMSlicmVha31lbHNlIGZvcig7ZzxoOylpZihjLmFwcGx5KGFbZysrXSxkKT09PSExKWJyZWFrfWVsc2UgaWYoaSl7Zm9yKGYgaW4gYSlpZihjLmNhbGwoYVtmXSxmLGFbZl0pPT09ITEpYnJlYWt9ZWxzZSBmb3IoO2c8aDspaWYoYy5jYWxsKGFbZ10sZyxhW2crK10pPT09ITEpYnJlYWs7cmV0dXJuIGF9LHRyaW06SD9mdW5jdGlvbihhKXtyZXR1cm4gYT09bnVsbD8iIjpILmNhbGwoYSl9OmZ1bmN0aW9uKGEpe3JldHVybiBhPT1udWxsPyIiOihhKyIiKS5yZXBsYWNlKGssIiIpLnJlcGxhY2UobCwiIil9LG1ha2VBcnJheTpmdW5jdGlvbihhLGIpe3ZhciBjPWJ8fFtdO2lmKGEhPW51bGwpe3ZhciBkPWUudHlwZShhKTthLmxlbmd0aD09bnVsbHx8ZD09PSJzdHJpbmcifHxkPT09ImZ1bmN0aW9uInx8ZD09PSJyZWdleHAifHxlLmlzV2luZG93KGEpP0YuY2FsbChjLGEpOmUubWVyZ2UoYyxhKX1yZXR1cm4gY30saW5BcnJheTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoYil7aWYoSSlyZXR1cm4gSS5jYWxsKGIsYSxjKTtkPWIubGVuZ3RoLGM9Yz9jPDA/TWF0aC5tYXgoMCxkK2MpOmM6MDtmb3IoO2M8ZDtjKyspaWYoYyBpbiBiJiZiW2NdPT09YSlyZXR1cm4gY31yZXR1cm4tMX0sbWVyZ2U6ZnVuY3Rpb24oYSxjKXt2YXIgZD1hLmxlbmd0aCxlPTA7aWYodHlwZW9mIGMubGVuZ3RoPT0ibnVtYmVyIilmb3IodmFyIGY9Yy5sZW5ndGg7ZTxmO2UrKylhW2QrK109Y1tlXTtlbHNlIHdoaWxlKGNbZV0hPT1iKWFbZCsrXT1jW2UrK107YS5sZW5ndGg9ZDtyZXR1cm4gYX0sZ3JlcDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9W10sZTtjPSEhYztmb3IodmFyIGY9MCxnPWEubGVuZ3RoO2Y8ZztmKyspZT0hIWIoYVtmXSxmKSxjIT09ZSYmZC5wdXNoKGFbZl0pO3JldHVybiBkfSxtYXA6ZnVuY3Rpb24oYSxjLGQpe3ZhciBmLGcsaD1bXSxpPTAsaj1hLmxlbmd0aCxrPWEgaW5zdGFuY2VvZiBlfHxqIT09YiYmdHlwZW9mIGo9PSJudW1iZXIiJiYoaj4wJiZhWzBdJiZhW2otMV18fGo9PT0wfHxlLmlzQXJyYXkoYSkpO2lmKGspZm9yKDtpPGo7aSsrKWY9YyhhW2ldLGksZCksZiE9bnVsbCYmKGhbaC5sZW5ndGhdPWYpO2Vsc2UgZm9yKGcgaW4gYSlmPWMoYVtnXSxnLGQpLGYhPW51bGwmJihoW2gubGVuZ3RoXT1mKTtyZXR1cm4gaC5jb25jYXQuYXBwbHkoW10saCl9LGd1aWQ6MSxwcm94eTpmdW5jdGlvbihhLGMpe2lmKHR5cGVvZiBjPT0ic3RyaW5nIil7dmFyIGQ9YVtjXTtjPWEsYT1kfWlmKCFlLmlzRnVuY3Rpb24oYSkpcmV0dXJuIGI7dmFyIGY9Ry5jYWxsKGFyZ3VtZW50cywyKSxnPWZ1bmN0aW9uKCl7cmV0dXJuIGEuYXBwbHkoYyxmLmNvbmNhdChHLmNhbGwoYXJndW1lbnRzKSkpfTtnLmd1aWQ9YS5ndWlkPWEuZ3VpZHx8Zy5ndWlkfHxlLmd1aWQrKztyZXR1cm4gZ30sYWNjZXNzOmZ1bmN0aW9uKGEsYyxkLGYsZyxoKXt2YXIgaT1hLmxlbmd0aDtpZih0eXBlb2YgYz09Im9iamVjdCIpe2Zvcih2YXIgaiBpbiBjKWUuYWNjZXNzKGEsaixjW2pdLGYsZyxkKTtyZXR1cm4gYX1pZihkIT09Yil7Zj0haCYmZiYmZS5pc0Z1bmN0aW9uKGQpO2Zvcih2YXIgaz0wO2s8aTtrKyspZyhhW2tdLGMsZj9kLmNhbGwoYVtrXSxrLGcoYVtrXSxjKSk6ZCxoKTtyZXR1cm4gYX1yZXR1cm4gaT9nKGFbMF0sYyk6Yn0sbm93OmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9LHVhTWF0Y2g6ZnVuY3Rpb24oYSl7YT1hLnRvTG93ZXJDYXNlKCk7dmFyIGI9cy5leGVjKGEpfHx0LmV4ZWMoYSl8fHUuZXhlYyhhKXx8YS5pbmRleE9mKCJjb21wYXRpYmxlIik8MCYmdi5leGVjKGEpfHxbXTtyZXR1cm57YnJvd3NlcjpiWzFdfHwiIix2ZXJzaW9uOmJbMl18fCIwIn19LHN1YjpmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYixjKXtyZXR1cm4gbmV3IGEuZm4uaW5pdChiLGMpfWUuZXh0ZW5kKCEwLGEsdGhpcyksYS5zdXBlcmNsYXNzPXRoaXMsYS5mbj1hLnByb3RvdHlwZT10aGlzKCksYS5mbi5jb25zdHJ1Y3Rvcj1hLGEuc3ViPXRoaXMuc3ViLGEuZm4uaW5pdD1mdW5jdGlvbihkLGYpe2YmJmYgaW5zdGFuY2VvZiBlJiYhKGYgaW5zdGFuY2VvZiBhKSYmKGY9YShmKSk7cmV0dXJuIGUuZm4uaW5pdC5jYWxsKHRoaXMsZCxmLGIpfSxhLmZuLmluaXQucHJvdG90eXBlPWEuZm47dmFyIGI9YShjKTtyZXR1cm4gYX0sYnJvd3Nlcjp7fX0pLGUuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCIuc3BsaXQoIiAiKSxmdW5jdGlvbihhLGIpe0pbIltvYmplY3QgIitiKyJdIl09Yi50b0xvd2VyQ2FzZSgpfSksQT1lLnVhTWF0Y2goeiksQS5icm93c2VyJiYoZS5icm93c2VyW0EuYnJvd3Nlcl09ITAsZS5icm93c2VyLnZlcnNpb249QS52ZXJzaW9uKSxlLmJyb3dzZXIud2Via2l0JiYoZS5icm93c2VyLnNhZmFyaT0hMCksai50ZXN0KCLCoCIpJiYoaz0vXltcc1x4QTBdKy8sbD0vW1xzXHhBMF0rJC8pLGg9ZShjKSxjLmFkZEV2ZW50TGlzdGVuZXI/Qz1mdW5jdGlvbigpe2MucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsQywhMSksZS5yZWFkeSgpfTpjLmF0dGFjaEV2ZW50JiYoQz1mdW5jdGlvbigpe2MucmVhZHlTdGF0ZT09PSJjb21wbGV0ZSImJihjLmRldGFjaEV2ZW50KCJvbnJlYWR5c3RhdGVjaGFuZ2UiLEMpLGUucmVhZHkoKSl9KSx0eXBlb2YgZGVmaW5lPT0iZnVuY3Rpb24iJiZkZWZpbmUuYW1kJiZkZWZpbmUuYW1kLmpRdWVyeSYmZGVmaW5lKCJqcXVlcnkiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGV9KTtyZXR1cm4gZX0oKSxnPXt9O2YuQ2FsbGJhY2tzPWZ1bmN0aW9uKGEpe2E9YT9nW2FdfHxoKGEpOnt9O3ZhciBjPVtdLGQ9W10sZSxpLGosayxsLG09ZnVuY3Rpb24oYil7dmFyIGQsZSxnLGgsaTtmb3IoZD0wLGU9Yi5sZW5ndGg7ZDxlO2QrKylnPWJbZF0saD1mLnR5cGUoZyksaD09PSJhcnJheSI/bShnKTpoPT09ImZ1bmN0aW9uIiYmKCFhLnVuaXF1ZXx8IW8uaGFzKGcpKSYmYy5wdXNoKGcpfSxuPWZ1bmN0aW9uKGIsZil7Zj1mfHxbXSxlPSFhLm1lbW9yeXx8W2IsZl0saT0hMCxsPWp8fDAsaj0wLGs9Yy5sZW5ndGg7Zm9yKDtjJiZsPGs7bCsrKWlmKGNbbF0uYXBwbHkoYixmKT09PSExJiZhLnN0b3BPbkZhbHNlKXtlPSEwO2JyZWFrfWk9ITEsYyYmKGEub25jZT9lPT09ITA/by5kaXNhYmxlKCk6Yz1bXTpkJiZkLmxlbmd0aCYmKGU9ZC5zaGlmdCgpLG8uZmlyZVdpdGgoZVswXSxlWzFdKSkpfSxvPXthZGQ6ZnVuY3Rpb24oKXtpZihjKXt2YXIgYT1jLmxlbmd0aDttKGFyZ3VtZW50cyksaT9rPWMubGVuZ3RoOmUmJmUhPT0hMCYmKGo9YSxuKGVbMF0sZVsxXSkpfXJldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtpZihjKXt2YXIgYj1hcmd1bWVudHMsZD0wLGU9Yi5sZW5ndGg7Zm9yKDtkPGU7ZCsrKWZvcih2YXIgZj0wO2Y8Yy5sZW5ndGg7ZisrKWlmKGJbZF09PT1jW2ZdKXtpJiZmPD1rJiYoay0tLGY8PWwmJmwtLSksYy5zcGxpY2UoZi0tLDEpO2lmKGEudW5pcXVlKWJyZWFrfX1yZXR1cm4gdGhpc30saGFzOmZ1bmN0aW9uKGEpe2lmKGMpe3ZhciBiPTAsZD1jLmxlbmd0aDtmb3IoO2I8ZDtiKyspaWYoYT09PWNbYl0pcmV0dXJuITB9cmV0dXJuITF9LGVtcHR5OmZ1bmN0aW9uKCl7Yz1bXTtyZXR1cm4gdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe2M9ZD1lPWI7cmV0dXJuIHRoaXN9LGRpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIWN9LGxvY2s6ZnVuY3Rpb24oKXtkPWIsKCFlfHxlPT09ITApJiZvLmRpc2FibGUoKTtyZXR1cm4gdGhpc30sbG9ja2VkOmZ1bmN0aW9uKCl7cmV0dXJuIWR9LGZpcmVXaXRoOmZ1bmN0aW9uKGIsYyl7ZCYmKGk/YS5vbmNlfHxkLnB1c2goW2IsY10pOighYS5vbmNlfHwhZSkmJm4oYixjKSk7cmV0dXJuIHRoaXN9LGZpcmU6ZnVuY3Rpb24oKXtvLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gdGhpc30sZmlyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWV9fTtyZXR1cm4gb307dmFyIGk9W10uc2xpY2U7Zi5leHRlbmQoe0RlZmVycmVkOmZ1bmN0aW9uKGEpe3ZhciBiPWYuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLGM9Zi5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksZD1mLkNhbGxiYWNrcygibWVtb3J5IiksZT0icGVuZGluZyIsZz17cmVzb2x2ZTpiLHJlamVjdDpjLG5vdGlmeTpkfSxoPXtkb25lOmIuYWRkLGZhaWw6Yy5hZGQscHJvZ3Jlc3M6ZC5hZGQsc3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZX0saXNSZXNvbHZlZDpiLmZpcmVkLGlzUmVqZWN0ZWQ6Yy5maXJlZCx0aGVuOmZ1bmN0aW9uKGEsYixjKXtpLmRvbmUoYSkuZmFpbChiKS5wcm9ncmVzcyhjKTtyZXR1cm4gdGhpc30sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGkuZG9uZS5hcHBseShpLGFyZ3VtZW50cykuZmFpbC5hcHBseShpLGFyZ3VtZW50cyl9LHBpcGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmLkRlZmVycmVkKGZ1bmN0aW9uKGQpe2YuZWFjaCh7ZG9uZTpbYSwicmVzb2x2ZSJdLGZhaWw6W2IsInJlamVjdCJdLHByb2dyZXNzOltjLCJub3RpZnkiXX0sZnVuY3Rpb24oYSxiKXt2YXIgYz1iWzBdLGU9YlsxXSxnO2YuaXNGdW5jdGlvbihjKT9pW2FdKGZ1bmN0aW9uKCl7Zz1jLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxnJiZmLmlzRnVuY3Rpb24oZy5wcm9taXNlKT9nLnByb21pc2UoKS50aGVuKGQucmVzb2x2ZSxkLnJlamVjdCxkLm5vdGlmeSk6ZFtlKyJXaXRoIl0odGhpcz09PWk/ZDp0aGlzLFtnXSl9KTppW2FdKGRbZV0pfSl9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24oYSl7aWYoYT09bnVsbClhPWg7ZWxzZSBmb3IodmFyIGIgaW4gaClhW2JdPWhbYl07cmV0dXJuIGF9fSxpPWgucHJvbWlzZSh7fSksajtmb3IoaiBpbiBnKWlbal09Z1tqXS5maXJlLGlbaisiV2l0aCJdPWdbal0uZmlyZVdpdGg7aS5kb25lKGZ1bmN0aW9uKCl7ZT0icmVzb2x2ZWQifSxjLmRpc2FibGUsZC5sb2NrKS5mYWlsKGZ1bmN0aW9uKCl7ZT0icmVqZWN0ZWQifSxiLmRpc2FibGUsZC5sb2NrKSxhJiZhLmNhbGwoaSxpKTtyZXR1cm4gaX0sd2hlbjpmdW5jdGlvbihhKXtmdW5jdGlvbiBtKGEpe3JldHVybiBmdW5jdGlvbihiKXtlW2FdPWFyZ3VtZW50cy5sZW5ndGg+MT9pLmNhbGwoYXJndW1lbnRzLDApOmIsai5ub3RpZnlXaXRoKGssZSl9fWZ1bmN0aW9uIGwoYSl7cmV0dXJuIGZ1bmN0aW9uKGMpe2JbYV09YXJndW1lbnRzLmxlbmd0aD4xP2kuY2FsbChhcmd1bWVudHMsMCk6YywtLWd8fGoucmVzb2x2ZVdpdGgoaixiKX19dmFyIGI9aS5jYWxsKGFyZ3VtZW50cywwKSxjPTAsZD1iLmxlbmd0aCxlPUFycmF5KGQpLGc9ZCxoPWQsaj1kPD0xJiZhJiZmLmlzRnVuY3Rpb24oYS5wcm9taXNlKT9hOmYuRGVmZXJyZWQoKSxrPWoucHJvbWlzZSgpO2lmKGQ+MSl7Zm9yKDtjPGQ7YysrKWJbY10mJmJbY10ucHJvbWlzZSYmZi5pc0Z1bmN0aW9uKGJbY10ucHJvbWlzZSk/YltjXS5wcm9taXNlKCkudGhlbihsKGMpLGoucmVqZWN0LG0oYykpOi0tZztnfHxqLnJlc29sdmVXaXRoKGosYil9ZWxzZSBqIT09YSYmai5yZXNvbHZlV2l0aChqLGQ/W2FdOltdKTtyZXR1cm4ga319KSxmLnN1cHBvcnQ9ZnVuY3Rpb24oKXt2YXIgYT1jLmNyZWF0ZUVsZW1lbnQoImRpdiIpLGI9Yy5kb2N1bWVudEVsZW1lbnQsZCxlLGcsaCxpLGosayxsLG0sbixvLHAscSxyLHMsdCx1O2Euc2V0QXR0cmlidXRlKCJjbGFzc05hbWUiLCJ0IiksYS5pbm5lckhUTUw9IiAgIDxsaW5rLz48dGFibGU+PC90YWJsZT48YSBocmVmPScvYScgc3R5bGU9J3RvcDoxcHg7ZmxvYXQ6bGVmdDtvcGFjaXR5Oi41NTsnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+PG5hdj48L25hdj4iLGQ9YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpLGU9YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdO2lmKCFkfHwhZC5sZW5ndGh8fCFlKXJldHVybnt9O2c9Yy5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKSxoPWcuYXBwZW5kQ2hpbGQoYy5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSksaT1hLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpWzBdLGs9e2xlYWRpbmdXaGl0ZXNwYWNlOmEuZmlyc3RDaGlsZC5ub2RlVHlwZT09PTMsdGJvZHk6IWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRib2R5IikubGVuZ3RoLGh0bWxTZXJpYWxpemU6ISFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJsaW5rIikubGVuZ3RoLHN0eWxlOi90b3AvLnRlc3QoZS5nZXRBdHRyaWJ1dGUoInN0eWxlIikpLGhyZWZOb3JtYWxpemVkOmUuZ2V0QXR0cmlidXRlKCJocmVmIik9PT0iL2EiLG9wYWNpdHk6L14wLjU1Ly50ZXN0KGUuc3R5bGUub3BhY2l0eSksY3NzRmxvYXQ6ISFlLnN0eWxlLmNzc0Zsb2F0LHVua25vd25FbGVtczohIWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIm5hdiIpLmxlbmd0aCxjaGVja09uOmkudmFsdWU9PT0ib24iLG9wdFNlbGVjdGVkOmguc2VsZWN0ZWQsZ2V0U2V0QXR0cmlidXRlOmEuY2xhc3NOYW1lIT09InQiLGVuY3R5cGU6ISFjLmNyZWF0ZUVsZW1lbnQoImZvcm0iKS5lbmN0eXBlLHN1Ym1pdEJ1YmJsZXM6ITAsY2hhbmdlQnViYmxlczohMCxmb2N1c2luQnViYmxlczohMSxkZWxldGVFeHBhbmRvOiEwLG5vQ2xvbmVFdmVudDohMCxpbmxpbmVCbG9ja05lZWRzTGF5b3V0OiExLHNocmlua1dyYXBCbG9ja3M6ITEscmVsaWFibGVNYXJnaW5SaWdodDohMH0saS5jaGVja2VkPSEwLGsubm9DbG9uZUNoZWNrZWQ9aS5jbG9uZU5vZGUoITApLmNoZWNrZWQsZy5kaXNhYmxlZD0hMCxrLm9wdERpc2FibGVkPSFoLmRpc2FibGVkO3RyeXtkZWxldGUgYS50ZXN0fWNhdGNoKHYpe2suZGVsZXRlRXhwYW5kbz0hMX0hYS5hZGRFdmVudExpc3RlbmVyJiZhLmF0dGFjaEV2ZW50JiZhLmZpcmVFdmVudCYmKGEuYXR0YWNoRXZlbnQoIm9uY2xpY2siLGZ1bmN0aW9uKCl7ay5ub0Nsb25lRXZlbnQ9ITF9KSxhLmNsb25lTm9kZSghMCkuZmlyZUV2ZW50KCJvbmNsaWNrIikpLGk9Yy5jcmVhdGVFbGVtZW50KCJpbnB1dCIpLGkudmFsdWU9InQiLGkuc2V0QXR0cmlidXRlKCJ0eXBlIiwicmFkaW8iKSxrLnJhZGlvVmFsdWU9aS52YWx1ZT09PSJ0IixpLnNldEF0dHJpYnV0ZSgiY2hlY2tlZCIsImNoZWNrZWQiKSxhLmFwcGVuZENoaWxkKGkpLGw9Yy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbC5hcHBlbmRDaGlsZChhLmxhc3RDaGlsZCksay5jaGVja0Nsb25lPWwuY2xvbmVOb2RlKCEwKS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5jaGVja2VkLGEuaW5uZXJIVE1MPSIiLGEuc3R5bGUud2lkdGg9YS5zdHlsZS5wYWRkaW5nTGVmdD0iMXB4IixtPWMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXSxvPWMuY3JlYXRlRWxlbWVudChtPyJkaXYiOiJib2R5IikscD17dmlzaWJpbGl0eToiaGlkZGVuIix3aWR0aDowLGhlaWdodDowLGJvcmRlcjowLG1hcmdpbjowLGJhY2tncm91bmQ6Im5vbmUifSxtJiZmLmV4dGVuZChwLHtwb3NpdGlvbjoiYWJzb2x1dGUiLGxlZnQ6Ii05OTlweCIsdG9wOiItOTk5cHgifSk7Zm9yKHQgaW4gcClvLnN0eWxlW3RdPXBbdF07by5hcHBlbmRDaGlsZChhKSxuPW18fGIsbi5pbnNlcnRCZWZvcmUobyxuLmZpcnN0Q2hpbGQpLGsuYXBwZW5kQ2hlY2tlZD1pLmNoZWNrZWQsay5ib3hNb2RlbD1hLm9mZnNldFdpZHRoPT09Miwiem9vbSJpbiBhLnN0eWxlJiYoYS5zdHlsZS5kaXNwbGF5PSJpbmxpbmUiLGEuc3R5bGUuem9vbT0xLGsuaW5saW5lQmxvY2tOZWVkc0xheW91dD1hLm9mZnNldFdpZHRoPT09MixhLnN0eWxlLmRpc3BsYXk9IiIsYS5pbm5lckhUTUw9IjxkaXYgc3R5bGU9J3dpZHRoOjRweDsnPjwvZGl2PiIsay5zaHJpbmtXcmFwQmxvY2tzPWEub2Zmc2V0V2lkdGghPT0yKSxhLmlubmVySFRNTD0iPHRhYmxlPjx0cj48dGQgc3R5bGU9J3BhZGRpbmc6MDtib3JkZXI6MDtkaXNwbGF5Om5vbmUnPjwvdGQ+PHRkPnQ8L3RkPjwvdHI+PC90YWJsZT4iLHE9YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGQiKSx1PXFbMF0ub2Zmc2V0SGVpZ2h0PT09MCxxWzBdLnN0eWxlLmRpc3BsYXk9IiIscVsxXS5zdHlsZS5kaXNwbGF5PSJub25lIixrLnJlbGlhYmxlSGlkZGVuT2Zmc2V0cz11JiZxWzBdLm9mZnNldEhlaWdodD09PTAsYS5pbm5lckhUTUw9IiIsYy5kZWZhdWx0VmlldyYmYy5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlJiYoaj1jLmNyZWF0ZUVsZW1lbnQoImRpdiIpLGouc3R5bGUud2lkdGg9IjAiLGouc3R5bGUubWFyZ2luUmlnaHQ9IjAiLGEuYXBwZW5kQ2hpbGQoaiksay5yZWxpYWJsZU1hcmdpblJpZ2h0PShwYXJzZUludCgoYy5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGosbnVsbCl8fHttYXJnaW5SaWdodDowfSkubWFyZ2luUmlnaHQsMTApfHwwKT09PTApO2lmKGEuYXR0YWNoRXZlbnQpZm9yKHQgaW57c3VibWl0OjEsY2hhbmdlOjEsZm9jdXNpbjoxfSlzPSJvbiIrdCx1PXMgaW4gYSx1fHwoYS5zZXRBdHRyaWJ1dGUocywicmV0dXJuOyIpLHU9dHlwZW9mIGFbc109PSJmdW5jdGlvbiIpLGtbdCsiQnViYmxlcyJdPXU7ZihmdW5jdGlvbigpe3ZhciBhLGIsZCxlLGcsaCxpPTEsaj0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjFweDtoZWlnaHQ6MXB4O21hcmdpbjowOyIsbD0idmlzaWJpbGl0eTpoaWRkZW47Ym9yZGVyOjA7IixuPSJzdHlsZT0nIitqKyJib3JkZXI6NXB4IHNvbGlkICMwMDA7cGFkZGluZzowOyciLHA9IjxkaXYgIituKyI+PGRpdj48L2Rpdj48L2Rpdj4iKyI8dGFibGUgIituKyIgY2VsbHBhZGRpbmc9JzAnIGNlbGxzcGFjaW5nPScwJz4iKyI8dHI+PHRkPjwvdGQ+PC90cj48L3RhYmxlPiI7bT1jLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF07IW18fChhPWMuY3JlYXRlRWxlbWVudCgiZGl2IiksYS5zdHlsZS5jc3NUZXh0PWwrIndpZHRoOjA7aGVpZ2h0OjA7cG9zaXRpb246c3RhdGljO3RvcDowO21hcmdpbi10b3A6IitpKyJweCIsbS5pbnNlcnRCZWZvcmUoYSxtLmZpcnN0Q2hpbGQpLG89Yy5jcmVhdGVFbGVtZW50KCJkaXYiKSxvLnN0eWxlLmNzc1RleHQ9aitsLG8uaW5uZXJIVE1MPXAsYS5hcHBlbmRDaGlsZChvKSxiPW8uZmlyc3RDaGlsZCxkPWIuZmlyc3RDaGlsZCxnPWIubmV4dFNpYmxpbmcuZmlyc3RDaGlsZC5maXJzdENoaWxkLGg9e2RvZXNOb3RBZGRCb3JkZXI6ZC5vZmZzZXRUb3AhPT01LGRvZXNBZGRCb3JkZXJGb3JUYWJsZUFuZENlbGxzOmcub2Zmc2V0VG9wPT09NX0sZC5zdHlsZS5wb3NpdGlvbj0iZml4ZWQiLGQuc3R5bGUudG9wPSIyMHB4IixoLmZpeGVkUG9zaXRpb249ZC5vZmZzZXRUb3A9PT0yMHx8ZC5vZmZzZXRUb3A9PT0xNSxkLnN0eWxlLnBvc2l0aW9uPWQuc3R5bGUudG9wPSIiLGIuc3R5bGUub3ZlcmZsb3c9ImhpZGRlbiIsYi5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiLGguc3VidHJhY3RzQm9yZGVyRm9yT3ZlcmZsb3dOb3RWaXNpYmxlPWQub2Zmc2V0VG9wPT09LTUsaC5kb2VzTm90SW5jbHVkZU1hcmdpbkluQm9keU9mZnNldD1tLm9mZnNldFRvcCE9PWksbS5yZW1vdmVDaGlsZChhKSxvPWE9bnVsbCxmLmV4dGVuZChrLGgpKX0pLG8uaW5uZXJIVE1MPSIiLG4ucmVtb3ZlQ2hpbGQobyksbz1sPWc9aD1tPWo9YT1pPW51bGw7cmV0dXJuIGt9KCksZi5ib3hNb2RlbD1mLnN1cHBvcnQuYm94TW9kZWw7dmFyIGo9L14oPzpcey4qXH18XFsuKlxdKSQvLGs9LyhbQS1aXSkvZztmLmV4dGVuZCh7Y2FjaGU6e30sdXVpZDowLGV4cGFuZG86ImpRdWVyeSIrKGYuZm4uanF1ZXJ5K01hdGgucmFuZG9tKCkpLnJlcGxhY2UoL1xEL2csIiIpLG5vRGF0YTp7ZW1iZWQ6ITAsb2JqZWN0OiJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAiLGFwcGxldDohMH0saGFzRGF0YTpmdW5jdGlvbihhKXthPWEubm9kZVR5cGU/Zi5jYWNoZVthW2YuZXhwYW5kb11dOmFbZi5leHBhbmRvXTtyZXR1cm4hIWEmJiFtKGEpfSxkYXRhOmZ1bmN0aW9uKGEsYyxkLGUpe2lmKCEhZi5hY2NlcHREYXRhKGEpKXt2YXIgZyxoLGksaj1mLmV4cGFuZG8saz10eXBlb2YgYz09InN0cmluZyIsbD1hLm5vZGVUeXBlLG09bD9mLmNhY2hlOmEsbj1sP2FbZi5leHBhbmRvXTphW2YuZXhwYW5kb10mJmYuZXhwYW5kbyxvPWM9PT0iZXZlbnRzIjtpZigoIW58fCFtW25dfHwhbyYmIWUmJiFtW25dLmRhdGEpJiZrJiZkPT09YilyZXR1cm47bnx8KGw/YVtmLmV4cGFuZG9dPW49KytmLnV1aWQ6bj1mLmV4cGFuZG8pLG1bbl18fChtW25dPXt9LGx8fChtW25dLnRvSlNPTj1mLm5vb3ApKTtpZih0eXBlb2YgYz09Im9iamVjdCJ8fHR5cGVvZiBjPT0iZnVuY3Rpb24iKWU/bVtuXT1mLmV4dGVuZChtW25dLGMpOm1bbl0uZGF0YT1mLmV4dGVuZChtW25dLmRhdGEsYyk7Zz1oPW1bbl0sZXx8KGguZGF0YXx8KGguZGF0YT17fSksaD1oLmRhdGEpLGQhPT1iJiYoaFtmLmNhbWVsQ2FzZShjKV09ZCk7aWYobyYmIWhbY10pcmV0dXJuIGcuZXZlbnRzO2s/KGk9aFtjXSxpPT1udWxsJiYoaT1oW2YuY2FtZWxDYXNlKGMpXSkpOmk9aDtyZXR1cm4gaX19LHJlbW92ZURhdGE6ZnVuY3Rpb24oYSxiLGMpe2lmKCEhZi5hY2NlcHREYXRhKGEpKXt2YXIgZCxlLGcsaD1mLmV4cGFuZG8saT1hLm5vZGVUeXBlLGo9aT9mLmNhY2hlOmEsaz1pP2FbZi5leHBhbmRvXTpmLmV4cGFuZG87aWYoIWpba10pcmV0dXJuO2lmKGIpe2Q9Yz9qW2tdOmpba10uZGF0YTtpZihkKXtmLmlzQXJyYXkoYik/Yj1iOmIgaW4gZD9iPVtiXTooYj1mLmNhbWVsQ2FzZShiKSxiIGluIGQ/Yj1bYl06Yj1iLnNwbGl0KCIgIikpO2ZvcihlPTAsZz1iLmxlbmd0aDtlPGc7ZSsrKWRlbGV0ZSBkW2JbZV1dO2lmKCEoYz9tOmYuaXNFbXB0eU9iamVjdCkoZCkpcmV0dXJufX1pZighYyl7ZGVsZXRlIGpba10uZGF0YTtpZighbShqW2tdKSlyZXR1cm59Zi5zdXBwb3J0LmRlbGV0ZUV4cGFuZG98fCFqLnNldEludGVydmFsP2RlbGV0ZSBqW2tdOmpba109bnVsbCxpJiYoZi5zdXBwb3J0LmRlbGV0ZUV4cGFuZG8/ZGVsZXRlIGFbZi5leHBhbmRvXTphLnJlbW92ZUF0dHJpYnV0ZT9hLnJlbW92ZUF0dHJpYnV0ZShmLmV4cGFuZG8pOmFbZi5leHBhbmRvXT1udWxsKX19LF9kYXRhOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZi5kYXRhKGEsYixjLCEwKX0sYWNjZXB0RGF0YTpmdW5jdGlvbihhKXtpZihhLm5vZGVOYW1lKXt2YXIgYj1mLm5vRGF0YVthLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldO2lmKGIpcmV0dXJuIGIhPT0hMCYmYS5nZXRBdHRyaWJ1dGUoImNsYXNzaWQiKT09PWJ9cmV0dXJuITB9fSksZi5mbi5leHRlbmQoe2RhdGE6ZnVuY3Rpb24oYSxjKXt2YXIgZCxlLGcsaD1udWxsO2lmKHR5cGVvZiBhPT0idW5kZWZpbmVkIil7aWYodGhpcy5sZW5ndGgpe2g9Zi5kYXRhKHRoaXNbMF0pO2lmKHRoaXNbMF0ubm9kZVR5cGU9PT0xJiYhZi5fZGF0YSh0aGlzWzBdLCJwYXJzZWRBdHRycyIpKXtlPXRoaXNbMF0uYXR0cmlidXRlcztmb3IodmFyIGk9MCxqPWUubGVuZ3RoO2k8ajtpKyspZz1lW2ldLm5hbWUsZy5pbmRleE9mKCJkYXRhLSIpPT09MCYmKGc9Zi5jYW1lbENhc2UoZy5zdWJzdHJpbmcoNSkpLGwodGhpc1swXSxnLGhbZ10pKTtmLl9kYXRhKHRoaXNbMF0sInBhcnNlZEF0dHJzIiwhMCl9fXJldHVybiBofWlmKHR5cGVvZiBhPT0ib2JqZWN0IilyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Zi5kYXRhKHRoaXMsYSl9KTtkPWEuc3BsaXQoIi4iKSxkWzFdPWRbMV0/Ii4iK2RbMV06IiI7aWYoYz09PWIpe2g9dGhpcy50cmlnZ2VySGFuZGxlcigiZ2V0RGF0YSIrZFsxXSsiISIsW2RbMF1dKSxoPT09YiYmdGhpcy5sZW5ndGgmJihoPWYuZGF0YSh0aGlzWzBdLGEpLGg9bCh0aGlzWzBdLGEsaCkpO3JldHVybiBoPT09YiYmZFsxXT90aGlzLmRhdGEoZFswXSk6aH1yZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9Zih0aGlzKSxlPVtkWzBdLGNdO2IudHJpZ2dlckhhbmRsZXIoInNldERhdGEiK2RbMV0rIiEiLGUpLGYuZGF0YSh0aGlzLGEsYyksYi50cmlnZ2VySGFuZGxlcigiY2hhbmdlRGF0YSIrZFsxXSsiISIsZSl9KX0scmVtb3ZlRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Zi5yZW1vdmVEYXRhKHRoaXMsYSl9KX19KSxmLmV4dGVuZCh7X21hcms6ZnVuY3Rpb24oYSxiKXthJiYoYj0oYnx8ImZ4IikrIm1hcmsiLGYuX2RhdGEoYSxiLChmLl9kYXRhKGEsYil8fDApKzEpKX0sX3VubWFyazpmdW5jdGlvbihhLGIsYyl7YSE9PSEwJiYoYz1iLGI9YSxhPSExKTtpZihiKXtjPWN8fCJmeCI7dmFyIGQ9YysibWFyayIsZT1hPzA6KGYuX2RhdGEoYixkKXx8MSktMTtlP2YuX2RhdGEoYixkLGUpOihmLnJlbW92ZURhdGEoYixkLCEwKSxuKGIsYywibWFyayIpKX19LHF1ZXVlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZDtpZihhKXtiPShifHwiZngiKSsicXVldWUiLGQ9Zi5fZGF0YShhLGIpLGMmJighZHx8Zi5pc0FycmF5KGMpP2Q9Zi5fZGF0YShhLGIsZi5tYWtlQXJyYXkoYykpOmQucHVzaChjKSk7cmV0dXJuIGR8fFtdfX0sZGVxdWV1ZTpmdW5jdGlvbihhLGIpe2I9Ynx8ImZ4Ijt2YXIgYz1mLnF1ZXVlKGEsYiksZD1jLnNoaWZ0KCksZT17fTtkPT09ImlucHJvZ3Jlc3MiJiYoZD1jLnNoaWZ0KCkpLGQmJihiPT09ImZ4IiYmYy51bnNoaWZ0KCJpbnByb2dyZXNzIiksZi5fZGF0YShhLGIrIi5ydW4iLGUpLGQuY2FsbChhLGZ1bmN0aW9uKCl7Zi5kZXF1ZXVlKGEsYil9LGUpKSxjLmxlbmd0aHx8KGYucmVtb3ZlRGF0YShhLGIrInF1ZXVlICIrYisiLnJ1biIsITApLG4oYSxiLCJxdWV1ZSIpKX19KSxmLmZuLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxjKXt0eXBlb2YgYSE9InN0cmluZyImJihjPWEsYT0iZngiKTtpZihjPT09YilyZXR1cm4gZi5xdWV1ZSh0aGlzWzBdLGEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1mLnF1ZXVlKHRoaXMsYSxjKTthPT09ImZ4IiYmYlswXSE9PSJpbnByb2dyZXNzIiYmZi5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVxdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Zi5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVsYXk6ZnVuY3Rpb24oYSxiKXthPWYuZng/Zi5meC5zcGVlZHNbYV18fGE6YSxiPWJ8fCJmeCI7cmV0dXJuIHRoaXMucXVldWUoYixmdW5jdGlvbihiLGMpe3ZhciBkPXNldFRpbWVvdXQoYixhKTtjLnN0b3A9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZCl9fSl9LGNsZWFyUXVldWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucXVldWUoYXx8ImZ4IixbXSl9LHByb21pc2U6ZnVuY3Rpb24oYSxjKXtmdW5jdGlvbiBtKCl7LS1ofHxkLnJlc29sdmVXaXRoKGUsW2VdKX10eXBlb2YgYSE9InN0cmluZyImJihjPWEsYT1iKSxhPWF8fCJmeCI7dmFyIGQ9Zi5EZWZlcnJlZCgpLGU9dGhpcyxnPWUubGVuZ3RoLGg9MSxpPWErImRlZmVyIixqPWErInF1ZXVlIixrPWErIm1hcmsiLGw7d2hpbGUoZy0tKWlmKGw9Zi5kYXRhKGVbZ10saSxiLCEwKXx8KGYuZGF0YShlW2ddLGosYiwhMCl8fGYuZGF0YShlW2ddLGssYiwhMCkpJiZmLmRhdGEoZVtnXSxpLGYuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLCEwKSloKyssbC5hZGQobSk7bSgpO3JldHVybiBkLnByb21pc2UoKX19KTt2YXIgbz0vW1xuXHRccl0vZyxwPS9ccysvLHE9L1xyL2cscj0vXig/OmJ1dHRvbnxpbnB1dCkkL2kscz0vXig/OmJ1dHRvbnxpbnB1dHxvYmplY3R8c2VsZWN0fHRleHRhcmVhKSQvaSx0PS9eYSg/OnJlYSk/JC9pLHU9L14oPzphdXRvZm9jdXN8YXV0b3BsYXl8YXN5bmN8Y2hlY2tlZHxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZHxzZWxlY3RlZCkkL2ksdj1mLnN1cHBvcnQuZ2V0U2V0QXR0cmlidXRlLHcseCx5O2YuZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGYuYWNjZXNzKHRoaXMsYSxiLCEwLGYuYXR0cil9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2YucmVtb3ZlQXR0cih0aGlzLGEpfSl9LHByb3A6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZi5hY2Nlc3ModGhpcyxhLGIsITAsZi5wcm9wKX0scmVtb3ZlUHJvcDpmdW5jdGlvbihhKXthPWYucHJvcEZpeFthXXx8YTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dHJ5e3RoaXNbYV09YixkZWxldGUgdGhpc1thXX1jYXRjaChjKXt9fSl9LGFkZENsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGcsaCxpO2lmKGYuaXNGdW5jdGlvbihhKSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGIpe2YodGhpcykuYWRkQ2xhc3MoYS5jYWxsKHRoaXMsYix0aGlzLmNsYXNzTmFtZSkpfSk7aWYoYSYmdHlwZW9mIGE9PSJzdHJpbmciKXtiPWEuc3BsaXQocCk7Zm9yKGM9MCxkPXRoaXMubGVuZ3RoO2M8ZDtjKyspe2U9dGhpc1tjXTtpZihlLm5vZGVUeXBlPT09MSlpZighZS5jbGFzc05hbWUmJmIubGVuZ3RoPT09MSllLmNsYXNzTmFtZT1hO2Vsc2V7Zz0iICIrZS5jbGFzc05hbWUrIiAiO2ZvcihoPTAsaT1iLmxlbmd0aDtoPGk7aCsrKX5nLmluZGV4T2YoIiAiK2JbaF0rIiAiKXx8KGcrPWJbaF0rIiAiKTtlLmNsYXNzTmFtZT1mLnRyaW0oZyl9fX1yZXR1cm4gdGhpc30scmVtb3ZlQ2xhc3M6ZnVuY3Rpb24oYSl7dmFyIGMsZCxlLGcsaCxpLGo7aWYoZi5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7Zih0aGlzKS5yZW1vdmVDbGFzcyhhLmNhbGwodGhpcyxiLHRoaXMuY2xhc3NOYW1lKSl9KTtpZihhJiZ0eXBlb2YgYT09InN0cmluZyJ8fGE9PT1iKXtjPShhfHwiIikuc3BsaXQocCk7Zm9yKGQ9MCxlPXRoaXMubGVuZ3RoO2Q8ZTtkKyspe2c9dGhpc1tkXTtpZihnLm5vZGVUeXBlPT09MSYmZy5jbGFzc05hbWUpaWYoYSl7aD0oIiAiK2cuY2xhc3NOYW1lKyIgIikucmVwbGFjZShvLCIgIik7Zm9yKGk9MCxqPWMubGVuZ3RoO2k8ajtpKyspaD1oLnJlcGxhY2UoIiAiK2NbaV0rIiAiLCIgIik7Zy5jbGFzc05hbWU9Zi50cmltKGgpfWVsc2UgZy5jbGFzc05hbWU9IiJ9fXJldHVybiB0aGlzfSx0b2dnbGVDbGFzczpmdW5jdGlvbihhLGIpe3ZhciBjPXR5cGVvZiBhLGQ9dHlwZW9mIGI9PSJib29sZWFuIjtpZihmLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihjKXtmKHRoaXMpLnRvZ2dsZUNsYXNzKGEuY2FsbCh0aGlzLGMsdGhpcy5jbGFzc05hbWUsYiksYil9KTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7aWYoYz09PSJzdHJpbmciKXt2YXIgZSxnPTAsaD1mKHRoaXMpLGk9YixqPWEuc3BsaXQocCk7d2hpbGUoZT1qW2crK10paT1kP2k6IWguaGFzQ2xhc3MoZSksaFtpPyJhZGRDbGFzcyI6InJlbW92ZUNsYXNzIl0oZSl9ZWxzZSBpZihjPT09InVuZGVmaW5lZCJ8fGM9PT0iYm9vbGVhbiIpdGhpcy5jbGFzc05hbWUmJmYuX2RhdGEodGhpcywiX19jbGFzc05hbWVfXyIsdGhpcy5jbGFzc05hbWUpLHRoaXMuY2xhc3NOYW1lPXRoaXMuY2xhc3NOYW1lfHxhPT09ITE/IiI6Zi5fZGF0YSh0aGlzLCJfX2NsYXNzTmFtZV9fIil8fCIifSl9LGhhc0NsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiPSIgIithKyIgIixjPTAsZD10aGlzLmxlbmd0aDtmb3IoO2M8ZDtjKyspaWYodGhpc1tjXS5ub2RlVHlwZT09PTEmJigiICIrdGhpc1tjXS5jbGFzc05hbWUrIiAiKS5yZXBsYWNlKG8sIiAiKS5pbmRleE9mKGIpPi0xKXJldHVybiEwO3JldHVybiExfSx2YWw6ZnVuY3Rpb24oYSl7dmFyIGMsZCxlLGc9dGhpc1swXTtpZighYXJndW1lbnRzLmxlbmd0aCl7aWYoZyl7Yz1mLnZhbEhvb2tzW2cubm9kZU5hbWUudG9Mb3dlckNhc2UoKV18fGYudmFsSG9va3NbZy50eXBlXTtpZihjJiYiZ2V0ImluIGMmJihkPWMuZ2V0KGcsInZhbHVlIikpIT09YilyZXR1cm4gZDtkPWcudmFsdWU7cmV0dXJuIHR5cGVvZiBkPT0ic3RyaW5nIj9kLnJlcGxhY2UocSwiIik6ZD09bnVsbD8iIjpkfXJldHVybiBifWU9Zi5pc0Z1bmN0aW9uKGEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oZCl7dmFyIGc9Zih0aGlzKSxoO2lmKHRoaXMubm9kZVR5cGU9PT0xKXtlP2g9YS5jYWxsKHRoaXMsZCxnLnZhbCgpKTpoPWEsaD09bnVsbD9oPSIiOnR5cGVvZiBoPT0ibnVtYmVyIj9oKz0iIjpmLmlzQXJyYXkoaCkmJihoPWYubWFwKGgsZnVuY3Rpb24oYSl7cmV0dXJuIGE9PW51bGw/IiI6YSsiIn0pKSxjPWYudmFsSG9va3NbdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXXx8Zi52YWxIb29rc1t0aGlzLnR5cGVdO2lmKCFjfHwhKCJzZXQiaW4gYyl8fGMuc2V0KHRoaXMsaCwidmFsdWUiKT09PWIpdGhpcy52YWx1ZT1ofX0pfX0pLGYuZXh0ZW5kKHt2YWxIb29rczp7b3B0aW9uOntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5hdHRyaWJ1dGVzLnZhbHVlO3JldHVybiFifHxiLnNwZWNpZmllZD9hLnZhbHVlOmEudGV4dH19LHNlbGVjdDp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGc9YS5zZWxlY3RlZEluZGV4LGg9W10saT1hLm9wdGlvbnMsaj1hLnR5cGU9PT0ic2VsZWN0LW9uZSI7aWYoZzwwKXJldHVybiBudWxsO2M9aj9nOjAsZD1qP2crMTppLmxlbmd0aDtmb3IoO2M8ZDtjKyspe2U9aVtjXTtpZihlLnNlbGVjdGVkJiYoZi5zdXBwb3J0Lm9wdERpc2FibGVkPyFlLmRpc2FibGVkOmUuZ2V0QXR0cmlidXRlKCJkaXNhYmxlZCIpPT09bnVsbCkmJighZS5wYXJlbnROb2RlLmRpc2FibGVkfHwhZi5ub2RlTmFtZShlLnBhcmVudE5vZGUsIm9wdGdyb3VwIikpKXtiPWYoZSkudmFsKCk7aWYoailyZXR1cm4gYjtoLnB1c2goYil9fWlmKGomJiFoLmxlbmd0aCYmaS5sZW5ndGgpcmV0dXJuIGYoaVtnXSkudmFsKCk7cmV0dXJuIGh9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjPWYubWFrZUFycmF5KGIpO2YoYSkuZmluZCgib3B0aW9uIikuZWFjaChmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWQ9Zi5pbkFycmF5KGYodGhpcykudmFsKCksYyk+PTB9KSxjLmxlbmd0aHx8KGEuc2VsZWN0ZWRJbmRleD0tMSk7cmV0dXJuIGN9fX0sYXR0ckZuOnt2YWw6ITAsY3NzOiEwLGh0bWw6ITAsdGV4dDohMCxkYXRhOiEwLHdpZHRoOiEwLGhlaWdodDohMCxvZmZzZXQ6ITB9LGF0dHI6ZnVuY3Rpb24oYSxjLGQsZSl7dmFyIGcsaCxpLGo9YS5ub2RlVHlwZTtpZighYXx8aj09PTN8fGo9PT04fHxqPT09MilyZXR1cm4gYjtpZihlJiZjIGluIGYuYXR0ckZuKXJldHVybiBmKGEpW2NdKGQpO2lmKCEoImdldEF0dHJpYnV0ZSJpbiBhKSlyZXR1cm4gZi5wcm9wKGEsYyxkKTtpPWohPT0xfHwhZi5pc1hNTERvYyhhKSxpJiYoYz1jLnRvTG93ZXJDYXNlKCksaD1mLmF0dHJIb29rc1tjXXx8KHUudGVzdChjKT94OncpKTtpZihkIT09Yil7aWYoZD09PW51bGwpe2YucmVtb3ZlQXR0cihhLGMpO3JldHVybiBifWlmKGgmJiJzZXQiaW4gaCYmaSYmKGc9aC5zZXQoYSxkLGMpKSE9PWIpcmV0dXJuIGc7YS5zZXRBdHRyaWJ1dGUoYywiIitkKTtyZXR1cm4gZH1pZihoJiYiZ2V0ImluIGgmJmkmJihnPWguZ2V0KGEsYykpIT09bnVsbClyZXR1cm4gZztnPWEuZ2V0QXR0cmlidXRlKGMpO3JldHVybiBnPT09bnVsbD9iOmd9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZyxoPTA7aWYoYS5ub2RlVHlwZT09PTEpe2Q9KGJ8fCIiKS5zcGxpdChwKSxnPWQubGVuZ3RoO2Zvcig7aDxnO2grKyllPWRbaF0udG9Mb3dlckNhc2UoKSxjPWYucHJvcEZpeFtlXXx8ZSxmLmF0dHIoYSxlLCIiKSxhLnJlbW92ZUF0dHJpYnV0ZSh2P2U6YyksdS50ZXN0KGUpJiZjIGluIGEmJihhW2NdPSExKX19LGF0dHJIb29rczp7dHlwZTp7c2V0OmZ1bmN0aW9uKGEsYil7aWYoci50ZXN0KGEubm9kZU5hbWUpJiZhLnBhcmVudE5vZGUpZi5lcnJvcigidHlwZSBwcm9wZXJ0eSBjYW4ndCBiZSBjaGFuZ2VkIik7ZWxzZSBpZighZi5zdXBwb3J0LnJhZGlvVmFsdWUmJmI9PT0icmFkaW8iJiZmLm5vZGVOYW1lKGEsImlucHV0Iikpe3ZhciBjPWEudmFsdWU7YS5zZXRBdHRyaWJ1dGUoInR5cGUiLGIpLGMmJihhLnZhbHVlPWMpO3JldHVybiBifX19LHZhbHVlOntnZXQ6ZnVuY3Rpb24oYSxiKXtpZih3JiZmLm5vZGVOYW1lKGEsImJ1dHRvbiIpKXJldHVybiB3LmdldChhLGIpO3JldHVybiBiIGluIGE/YS52YWx1ZTpudWxsfSxzZXQ6ZnVuY3Rpb24oYSxiLGMpe2lmKHcmJmYubm9kZU5hbWUoYSwiYnV0dG9uIikpcmV0dXJuIHcuc2V0KGEsYixjKTthLnZhbHVlPWJ9fX0scHJvcEZpeDp7dGFiaW5kZXg6InRhYkluZGV4IixyZWFkb25seToicmVhZE9ubHkiLCJmb3IiOiJodG1sRm9yIiwiY2xhc3MiOiJjbGFzc05hbWUiLG1heGxlbmd0aDoibWF4TGVuZ3RoIixjZWxsc3BhY2luZzoiY2VsbFNwYWNpbmciLGNlbGxwYWRkaW5nOiJjZWxsUGFkZGluZyIscm93c3Bhbjoicm93U3BhbiIsY29sc3BhbjoiY29sU3BhbiIsdXNlbWFwOiJ1c2VNYXAiLGZyYW1lYm9yZGVyOiJmcmFtZUJvcmRlciIsY29udGVudGVkaXRhYmxlOiJjb250ZW50RWRpdGFibGUifSxwcm9wOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZSxnLGgsaT1hLm5vZGVUeXBlO2lmKCFhfHxpPT09M3x8aT09PTh8fGk9PT0yKXJldHVybiBiO2g9aSE9PTF8fCFmLmlzWE1MRG9jKGEpLGgmJihjPWYucHJvcEZpeFtjXXx8YyxnPWYucHJvcEhvb2tzW2NdKTtyZXR1cm4gZCE9PWI/ZyYmInNldCJpbiBnJiYoZT1nLnNldChhLGQsYykpIT09Yj9lOmFbY109ZDpnJiYiZ2V0ImluIGcmJihlPWcuZ2V0KGEsYykpIT09bnVsbD9lOmFbY119LHByb3BIb29rczp7dGFiSW5kZXg6e2dldDpmdW5jdGlvbihhKXt2YXIgYz1hLmdldEF0dHJpYnV0ZU5vZGUoInRhYmluZGV4Iik7cmV0dXJuIGMmJmMuc3BlY2lmaWVkP3BhcnNlSW50KGMudmFsdWUsMTApOnMudGVzdChhLm5vZGVOYW1lKXx8dC50ZXN0KGEubm9kZU5hbWUpJiZhLmhyZWY/MDpifX19fSksZi5hdHRySG9va3MudGFiaW5kZXg9Zi5wcm9wSG9va3MudGFiSW5kZXgseD17Z2V0OmZ1bmN0aW9uKGEsYyl7dmFyIGQsZT1mLnByb3AoYSxjKTtyZXR1cm4gZT09PSEwfHx0eXBlb2YgZSE9ImJvb2xlYW4iJiYoZD1hLmdldEF0dHJpYnV0ZU5vZGUoYykpJiZkLm5vZGVWYWx1ZSE9PSExP2MudG9Mb3dlckNhc2UoKTpifSxzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2I9PT0hMT9mLnJlbW92ZUF0dHIoYSxjKTooZD1mLnByb3BGaXhbY118fGMsZCBpbiBhJiYoYVtkXT0hMCksYS5zZXRBdHRyaWJ1dGUoYyxjLnRvTG93ZXJDYXNlKCkpKTtyZXR1cm4gY319LHZ8fCh5PXtuYW1lOiEwLGlkOiEwfSx3PWYudmFsSG9va3MuYnV0dG9uPXtnZXQ6ZnVuY3Rpb24oYSxjKXt2YXIgZDtkPWEuZ2V0QXR0cmlidXRlTm9kZShjKTtyZXR1cm4gZCYmKHlbY10/ZC5ub2RlVmFsdWUhPT0iIjpkLnNwZWNpZmllZCk/ZC5ub2RlVmFsdWU6Yn0sc2V0OmZ1bmN0aW9uKGEsYixkKXt2YXIgZT1hLmdldEF0dHJpYnV0ZU5vZGUoZCk7ZXx8KGU9Yy5jcmVhdGVBdHRyaWJ1dGUoZCksYS5zZXRBdHRyaWJ1dGVOb2RlKGUpKTtyZXR1cm4gZS5ub2RlVmFsdWU9YisiIn19LGYuYXR0ckhvb2tzLnRhYmluZGV4LnNldD13LnNldCxmLmVhY2goWyJ3aWR0aCIsImhlaWdodCJdLGZ1bmN0aW9uKGEsYil7Zi5hdHRySG9va3NbYl09Zi5leHRlbmQoZi5hdHRySG9va3NbYl0se3NldDpmdW5jdGlvbihhLGMpe2lmKGM9PT0iIil7YS5zZXRBdHRyaWJ1dGUoYiwiYXV0byIpO3JldHVybiBjfX19KX0pLGYuYXR0ckhvb2tzLmNvbnRlbnRlZGl0YWJsZT17Z2V0OncuZ2V0LHNldDpmdW5jdGlvbihhLGIsYyl7Yj09PSIiJiYoYj0iZmFsc2UiKSx3LnNldChhLGIsYyl9fSksZi5zdXBwb3J0LmhyZWZOb3JtYWxpemVkfHxmLmVhY2goWyJocmVmIiwic3JjIiwid2lkdGgiLCJoZWlnaHQiXSxmdW5jdGlvbihhLGMpe2YuYXR0ckhvb2tzW2NdPWYuZXh0ZW5kKGYuYXR0ckhvb2tzW2NdLHtnZXQ6ZnVuY3Rpb24oYSl7dmFyIGQ9YS5nZXRBdHRyaWJ1dGUoYywyKTtyZXR1cm4gZD09PW51bGw/YjpkfX0pfSksZi5zdXBwb3J0LnN0eWxlfHwoZi5hdHRySG9va3Muc3R5bGU9e2dldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5zdHlsZS5jc3NUZXh0LnRvTG93ZXJDYXNlKCl8fGJ9LHNldDpmdW5jdGlvbihhLGIpe3JldHVybiBhLnN0eWxlLmNzc1RleHQ9IiIrYn19KSxmLnN1cHBvcnQub3B0U2VsZWN0ZWR8fChmLnByb3BIb29rcy5zZWxlY3RlZD1mLmV4dGVuZChmLnByb3BIb29rcy5zZWxlY3RlZCx7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtiJiYoYi5zZWxlY3RlZEluZGV4LGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpO3JldHVybiBudWxsfX0pKSxmLnN1cHBvcnQuZW5jdHlwZXx8KGYucHJvcEZpeC5lbmN0eXBlPSJlbmNvZGluZyIpLGYuc3VwcG9ydC5jaGVja09ufHxmLmVhY2goWyJyYWRpbyIsImNoZWNrYm94Il0sZnVuY3Rpb24oKXtmLnZhbEhvb2tzW3RoaXNdPXtnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKCJ2YWx1ZSIpPT09bnVsbD8ib24iOmEudmFsdWV9fX0pLGYuZWFjaChbInJhZGlvIiwiY2hlY2tib3giXSxmdW5jdGlvbigpe2YudmFsSG9va3NbdGhpc109Zi5leHRlbmQoZi52YWxIb29rc1t0aGlzXSx7c2V0OmZ1bmN0aW9uKGEsYil7aWYoZi5pc0FycmF5KGIpKXJldHVybiBhLmNoZWNrZWQ9Zi5pbkFycmF5KGYoYSkudmFsKCksYik+PTB9fSl9KTt2YXIgej0vXC4oLiopJC8sQT0vXig/OnRleHRhcmVhfGlucHV0fHNlbGVjdCkkL2ksQj0vXC4vZyxDPS8gL2csRD0vW15cd1xzLnxgXS9nLEU9L14oW15cLl0qKT8oPzpcLiguKykpPyQvLEY9L1xiaG92ZXIoXC5cUyspPy8sRz0vXmtleS8sSD0vXig/Om1vdXNlfGNvbnRleHRtZW51KXxjbGljay8sST0vXihcdyopKD86IyhbXHdcLV0rKSk/KD86XC4oW1x3XC1dKykpPyQvLEo9ZnVuY3Rpb24oYSl7dmFyIGI9SS5leGVjKGEpO2ImJgooYlsxXT0oYlsxXXx8IiIpLnRvTG93ZXJDYXNlKCksYlszXT1iWzNdJiZuZXcgUmVnRXhwKCIoPzpefFxccykiK2JbM10rIig/Olxcc3wkKSIpKTtyZXR1cm4gYn0sSz1mdW5jdGlvbihhLGIpe3JldHVybighYlsxXXx8YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09YlsxXSkmJighYlsyXXx8YS5pZD09PWJbMl0pJiYoIWJbM118fGJbM10udGVzdChhLmNsYXNzTmFtZSkpfSxMPWZ1bmN0aW9uKGEpe3JldHVybiBmLmV2ZW50LnNwZWNpYWwuaG92ZXI/YTphLnJlcGxhY2UoRiwibW91c2VlbnRlciQxIG1vdXNlbGVhdmUkMSIpfTtmLmV2ZW50PXthZGQ6ZnVuY3Rpb24oYSxjLGQsZSxnKXt2YXIgaCxpLGosayxsLG0sbixvLHAscSxyLHM7aWYoIShhLm5vZGVUeXBlPT09M3x8YS5ub2RlVHlwZT09PTh8fCFjfHwhZHx8IShoPWYuX2RhdGEoYSkpKSl7ZC5oYW5kbGVyJiYocD1kLGQ9cC5oYW5kbGVyKSxkLmd1aWR8fChkLmd1aWQ9Zi5ndWlkKyspLGo9aC5ldmVudHMsanx8KGguZXZlbnRzPWo9e30pLGk9aC5oYW5kbGUsaXx8KGguaGFuZGxlPWk9ZnVuY3Rpb24oYSl7cmV0dXJuIHR5cGVvZiBmIT0idW5kZWZpbmVkIiYmKCFhfHxmLmV2ZW50LnRyaWdnZXJlZCE9PWEudHlwZSk/Zi5ldmVudC5kaXNwYXRjaC5hcHBseShpLmVsZW0sYXJndW1lbnRzKTpifSxpLmVsZW09YSksYz1MKGMpLnNwbGl0KCIgIik7Zm9yKGs9MDtrPGMubGVuZ3RoO2srKyl7bD1FLmV4ZWMoY1trXSl8fFtdLG09bFsxXSxuPShsWzJdfHwiIikuc3BsaXQoIi4iKS5zb3J0KCkscz1mLmV2ZW50LnNwZWNpYWxbbV18fHt9LG09KGc/cy5kZWxlZ2F0ZVR5cGU6cy5iaW5kVHlwZSl8fG0scz1mLmV2ZW50LnNwZWNpYWxbbV18fHt9LG89Zi5leHRlbmQoe3R5cGU6bSxvcmlnVHlwZTpsWzFdLGRhdGE6ZSxoYW5kbGVyOmQsZ3VpZDpkLmd1aWQsc2VsZWN0b3I6ZyxuYW1lc3BhY2U6bi5qb2luKCIuIil9LHApLGcmJihvLnF1aWNrPUooZyksIW8ucXVpY2smJmYuZXhwci5tYXRjaC5QT1MudGVzdChnKSYmKG8uaXNQb3NpdGlvbmFsPSEwKSkscj1qW21dO2lmKCFyKXtyPWpbbV09W10sci5kZWxlZ2F0ZUNvdW50PTA7aWYoIXMuc2V0dXB8fHMuc2V0dXAuY2FsbChhLGUsbixpKT09PSExKWEuYWRkRXZlbnRMaXN0ZW5lcj9hLmFkZEV2ZW50TGlzdGVuZXIobSxpLCExKTphLmF0dGFjaEV2ZW50JiZhLmF0dGFjaEV2ZW50KCJvbiIrbSxpKX1zLmFkZCYmKHMuYWRkLmNhbGwoYSxvKSxvLmhhbmRsZXIuZ3VpZHx8KG8uaGFuZGxlci5ndWlkPWQuZ3VpZCkpLGc/ci5zcGxpY2Uoci5kZWxlZ2F0ZUNvdW50KyssMCxvKTpyLnB1c2gobyksZi5ldmVudC5nbG9iYWxbbV09ITB9YT1udWxsfX0sZ2xvYmFsOnt9LHJlbW92ZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mLmhhc0RhdGEoYSkmJmYuX2RhdGEoYSksZyxoLGksaixrLGwsbSxuLG8scCxxO2lmKCEhZSYmISEobT1lLmV2ZW50cykpe2I9TChifHwiIikuc3BsaXQoIiAiKTtmb3IoZz0wO2c8Yi5sZW5ndGg7ZysrKXtoPUUuZXhlYyhiW2ddKXx8W10saT1oWzFdLGo9aFsyXTtpZighaSl7aj1qPyIuIitqOiIiO2ZvcihsIGluIG0pZi5ldmVudC5yZW1vdmUoYSxsK2osYyxkKTtyZXR1cm59bj1mLmV2ZW50LnNwZWNpYWxbaV18fHt9LGk9KGQ/bi5kZWxlZ2F0ZVR5cGU6bi5iaW5kVHlwZSl8fGkscD1tW2ldfHxbXSxrPXAubGVuZ3RoLGo9aj9uZXcgUmVnRXhwKCIoXnxcXC4pIitqLnNwbGl0KCIuIikuc29ydCgpLmpvaW4oIlxcLig/Oi4qXFwuKT8iKSsiKFxcLnwkKSIpOm51bGw7aWYoY3x8anx8ZHx8bi5yZW1vdmUpZm9yKGw9MDtsPHAubGVuZ3RoO2wrKyl7cT1wW2xdO2lmKCFjfHxjLmd1aWQ9PT1xLmd1aWQpaWYoIWp8fGoudGVzdChxLm5hbWVzcGFjZSkpaWYoIWR8fGQ9PT1xLnNlbGVjdG9yfHxkPT09IioqIiYmcS5zZWxlY3RvcilwLnNwbGljZShsLS0sMSkscS5zZWxlY3RvciYmcC5kZWxlZ2F0ZUNvdW50LS0sbi5yZW1vdmUmJm4ucmVtb3ZlLmNhbGwoYSxxKX1lbHNlIHAubGVuZ3RoPTA7cC5sZW5ndGg9PT0wJiZrIT09cC5sZW5ndGgmJigoIW4udGVhcmRvd258fG4udGVhcmRvd24uY2FsbChhLGopPT09ITEpJiZmLnJlbW92ZUV2ZW50KGEsaSxlLmhhbmRsZSksZGVsZXRlIG1baV0pfWYuaXNFbXB0eU9iamVjdChtKSYmKG89ZS5oYW5kbGUsbyYmKG8uZWxlbT1udWxsKSxmLnJlbW92ZURhdGEoYSxbImV2ZW50cyIsImhhbmRsZSJdLCEwKSl9fSxjdXN0b21FdmVudDp7Z2V0RGF0YTohMCxzZXREYXRhOiEwLGNoYW5nZURhdGE6ITB9LHRyaWdnZXI6ZnVuY3Rpb24oYyxkLGUsZyl7aWYoIWV8fGUubm9kZVR5cGUhPT0zJiZlLm5vZGVUeXBlIT09OCl7dmFyIGg9Yy50eXBlfHxjLGk9W10saixrLGwsbSxuLG8scCxxLHIscztoLmluZGV4T2YoIiEiKT49MCYmKGg9aC5zbGljZSgwLC0xKSxrPSEwKSxoLmluZGV4T2YoIi4iKT49MCYmKGk9aC5zcGxpdCgiLiIpLGg9aS5zaGlmdCgpLGkuc29ydCgpKTtpZigoIWV8fGYuZXZlbnQuY3VzdG9tRXZlbnRbaF0pJiYhZi5ldmVudC5nbG9iYWxbaF0pcmV0dXJuO2M9dHlwZW9mIGM9PSJvYmplY3QiP2NbZi5leHBhbmRvXT9jOm5ldyBmLkV2ZW50KGgsYyk6bmV3IGYuRXZlbnQoaCksYy50eXBlPWgsYy5pc1RyaWdnZXI9ITAsYy5leGNsdXNpdmU9ayxjLm5hbWVzcGFjZT1pLmpvaW4oIi4iKSxjLm5hbWVzcGFjZV9yZT1jLm5hbWVzcGFjZT9uZXcgUmVnRXhwKCIoXnxcXC4pIitpLmpvaW4oIlxcLig/Oi4qXFwuKT8iKSsiKFxcLnwkKSIpOm51bGwsbz1oLmluZGV4T2YoIjoiKTwwPyJvbiIraDoiIiwoZ3x8IWUpJiZjLnByZXZlbnREZWZhdWx0KCk7aWYoIWUpe2o9Zi5jYWNoZTtmb3IobCBpbiBqKWpbbF0uZXZlbnRzJiZqW2xdLmV2ZW50c1toXSYmZi5ldmVudC50cmlnZ2VyKGMsZCxqW2xdLmhhbmRsZS5lbGVtLCEwKTtyZXR1cm59Yy5yZXN1bHQ9YixjLnRhcmdldHx8KGMudGFyZ2V0PWUpLGQ9ZCE9bnVsbD9mLm1ha2VBcnJheShkKTpbXSxkLnVuc2hpZnQoYykscD1mLmV2ZW50LnNwZWNpYWxbaF18fHt9O2lmKHAudHJpZ2dlciYmcC50cmlnZ2VyLmFwcGx5KGUsZCk9PT0hMSlyZXR1cm47cj1bW2UscC5iaW5kVHlwZXx8aF1dO2lmKCFnJiYhcC5ub0J1YmJsZSYmIWYuaXNXaW5kb3coZSkpe3M9cC5kZWxlZ2F0ZVR5cGV8fGgsbj1udWxsO2ZvcihtPWUucGFyZW50Tm9kZTttO209bS5wYXJlbnROb2RlKXIucHVzaChbbSxzXSksbj1tO24mJm49PT1lLm93bmVyRG9jdW1lbnQmJnIucHVzaChbbi5kZWZhdWx0Vmlld3x8bi5wYXJlbnRXaW5kb3d8fGEsc10pfWZvcihsPTA7bDxyLmxlbmd0aDtsKyspe209cltsXVswXSxjLnR5cGU9cltsXVsxXSxxPShmLl9kYXRhKG0sImV2ZW50cyIpfHx7fSlbYy50eXBlXSYmZi5fZGF0YShtLCJoYW5kbGUiKSxxJiZxLmFwcGx5KG0sZCkscT1vJiZtW29dLHEmJmYuYWNjZXB0RGF0YShtKSYmcS5hcHBseShtLGQpO2lmKGMuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVha31jLnR5cGU9aCxjLmlzRGVmYXVsdFByZXZlbnRlZCgpfHwoIXAuX2RlZmF1bHR8fHAuX2RlZmF1bHQuYXBwbHkoZS5vd25lckRvY3VtZW50LGQpPT09ITEpJiYoaCE9PSJjbGljayJ8fCFmLm5vZGVOYW1lKGUsImEiKSkmJmYuYWNjZXB0RGF0YShlKSYmbyYmZVtoXSYmKGghPT0iZm9jdXMiJiZoIT09ImJsdXIifHxjLnRhcmdldC5vZmZzZXRXaWR0aCE9PTApJiYhZi5pc1dpbmRvdyhlKSYmKG49ZVtvXSxuJiYoZVtvXT1udWxsKSxmLmV2ZW50LnRyaWdnZXJlZD1oLGVbaF0oKSxmLmV2ZW50LnRyaWdnZXJlZD1iLG4mJihlW29dPW4pKTtyZXR1cm4gYy5yZXN1bHR9fSxkaXNwYXRjaDpmdW5jdGlvbihjKXtjPWYuZXZlbnQuZml4KGN8fGEuZXZlbnQpO3ZhciBkPShmLl9kYXRhKHRoaXMsImV2ZW50cyIpfHx7fSlbYy50eXBlXXx8W10sZT1kLmRlbGVnYXRlQ291bnQsZz1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSxoPSFjLmV4Y2x1c2l2ZSYmIWMubmFtZXNwYWNlLGk9KGYuZXZlbnQuc3BlY2lhbFtjLnR5cGVdfHx7fSkuaGFuZGxlLGo9W10sayxsLG0sbixvLHAscSxyLHMsdCx1O2dbMF09YyxjLmRlbGVnYXRlVGFyZ2V0PXRoaXM7aWYoZSYmIWMudGFyZ2V0LmRpc2FibGVkJiYoIWMuYnV0dG9ufHxjLnR5cGUhPT0iY2xpY2siKSlmb3IobT1jLnRhcmdldDttIT10aGlzO209bS5wYXJlbnROb2RlfHx0aGlzKXtvPXt9LHE9W107Zm9yKGs9MDtrPGU7aysrKXI9ZFtrXSxzPXIuc2VsZWN0b3IsdD1vW3NdLHIuaXNQb3NpdGlvbmFsP3Q9KHR8fChvW3NdPWYocykpKS5pbmRleChtKT49MDp0PT09YiYmKHQ9b1tzXT1yLnF1aWNrP0sobSxyLnF1aWNrKTpmKG0pLmlzKHMpKSx0JiZxLnB1c2gocik7cS5sZW5ndGgmJmoucHVzaCh7ZWxlbTptLG1hdGNoZXM6cX0pfWQubGVuZ3RoPmUmJmoucHVzaCh7ZWxlbTp0aGlzLG1hdGNoZXM6ZC5zbGljZShlKX0pO2ZvcihrPTA7azxqLmxlbmd0aCYmIWMuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtrKyspe3A9altrXSxjLmN1cnJlbnRUYXJnZXQ9cC5lbGVtO2ZvcihsPTA7bDxwLm1hdGNoZXMubGVuZ3RoJiYhYy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpO2wrKyl7cj1wLm1hdGNoZXNbbF07aWYoaHx8IWMubmFtZXNwYWNlJiYhci5uYW1lc3BhY2V8fGMubmFtZXNwYWNlX3JlJiZjLm5hbWVzcGFjZV9yZS50ZXN0KHIubmFtZXNwYWNlKSljLmRhdGE9ci5kYXRhLGMuaGFuZGxlT2JqPXIsbj0oaXx8ci5oYW5kbGVyKS5hcHBseShwLmVsZW0sZyksbiE9PWImJihjLnJlc3VsdD1uLG49PT0hMSYmKGMucHJldmVudERlZmF1bHQoKSxjLnN0b3BQcm9wYWdhdGlvbigpKSl9fXJldHVybiBjLnJlc3VsdH0scHJvcHM6ImF0dHJDaGFuZ2UgYXR0ck5hbWUgcmVsYXRlZE5vZGUgc3JjRWxlbWVudCBhbHRLZXkgYnViYmxlcyBjYW5jZWxhYmxlIGN0cmxLZXkgY3VycmVudFRhcmdldCBldmVudFBoYXNlIG1ldGFLZXkgcmVsYXRlZFRhcmdldCBzaGlmdEtleSB0YXJnZXQgdGltZVN0YW1wIHZpZXcgd2hpY2giLnNwbGl0KCIgIiksZml4SG9va3M6e30sa2V5SG9va3M6e3Byb3BzOiJjaGFyIGNoYXJDb2RlIGtleSBrZXlDb2RlIi5zcGxpdCgiICIpLGZpbHRlcjpmdW5jdGlvbihhLGIpe2Eud2hpY2g9PW51bGwmJihhLndoaWNoPWIuY2hhckNvZGUhPW51bGw/Yi5jaGFyQ29kZTpiLmtleUNvZGUpO3JldHVybiBhfX0sbW91c2VIb29rczp7cHJvcHM6ImJ1dHRvbiBidXR0b25zIGNsaWVudFggY2xpZW50WSBmcm9tRWxlbWVudCBvZmZzZXRYIG9mZnNldFkgcGFnZVggcGFnZVkgc2NyZWVuWCBzY3JlZW5ZIHRvRWxlbWVudCB3aGVlbERlbHRhIi5zcGxpdCgiICIpLGZpbHRlcjpmdW5jdGlvbihhLGQpe3ZhciBlLGYsZyxoPWQuYnV0dG9uLGk9ZC5mcm9tRWxlbWVudDthLnBhZ2VYPT1udWxsJiZkLmNsaWVudFghPW51bGwmJihlPWEudGFyZ2V0Lm93bmVyRG9jdW1lbnR8fGMsZj1lLmRvY3VtZW50RWxlbWVudCxnPWUuYm9keSxhLnBhZ2VYPWQuY2xpZW50WCsoZiYmZi5zY3JvbGxMZWZ0fHxnJiZnLnNjcm9sbExlZnR8fDApLShmJiZmLmNsaWVudExlZnR8fGcmJmcuY2xpZW50TGVmdHx8MCksYS5wYWdlWT1kLmNsaWVudFkrKGYmJmYuc2Nyb2xsVG9wfHxnJiZnLnNjcm9sbFRvcHx8MCktKGYmJmYuY2xpZW50VG9wfHxnJiZnLmNsaWVudFRvcHx8MCkpLCFhLnJlbGF0ZWRUYXJnZXQmJmkmJihhLnJlbGF0ZWRUYXJnZXQ9aT09PWEudGFyZ2V0P2QudG9FbGVtZW50OmkpLCFhLndoaWNoJiZoIT09YiYmKGEud2hpY2g9aCYxPzE6aCYyPzM6aCY0PzI6MCk7cmV0dXJuIGF9fSxmaXg6ZnVuY3Rpb24oYSl7aWYoYVtmLmV4cGFuZG9dKXJldHVybiBhO3ZhciBkLGUsZz1hLGg9Zi5ldmVudC5maXhIb29rc1thLnR5cGVdfHx7fSxpPWgucHJvcHM/dGhpcy5wcm9wcy5jb25jYXQoaC5wcm9wcyk6dGhpcy5wcm9wczthPWYuRXZlbnQoZyk7Zm9yKGQ9aS5sZW5ndGg7ZDspZT1pWy0tZF0sYVtlXT1nW2VdO2EudGFyZ2V0fHwoYS50YXJnZXQ9Zy5zcmNFbGVtZW50fHxjKSxhLnRhcmdldC5ub2RlVHlwZT09PTMmJihhLnRhcmdldD1hLnRhcmdldC5wYXJlbnROb2RlKSxhLm1ldGFLZXk9PT1iJiYoYS5tZXRhS2V5PWEuY3RybEtleSk7cmV0dXJuIGguZmlsdGVyP2guZmlsdGVyKGEsZyk6YX0sc3BlY2lhbDp7cmVhZHk6e3NldHVwOmYuYmluZFJlYWR5fSxmb2N1czp7ZGVsZWdhdGVUeXBlOiJmb2N1c2luIixub0J1YmJsZTohMH0sYmx1cjp7ZGVsZWdhdGVUeXBlOiJmb2N1c291dCIsbm9CdWJibGU6ITB9LGJlZm9yZXVubG9hZDp7c2V0dXA6ZnVuY3Rpb24oYSxiLGMpe2YuaXNXaW5kb3codGhpcykmJih0aGlzLm9uYmVmb3JldW5sb2FkPWMpfSx0ZWFyZG93bjpmdW5jdGlvbihhLGIpe3RoaXMub25iZWZvcmV1bmxvYWQ9PT1iJiYodGhpcy5vbmJlZm9yZXVubG9hZD1udWxsKX19fSxzaW11bGF0ZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mLmV4dGVuZChuZXcgZi5FdmVudCxjLHt0eXBlOmEsaXNTaW11bGF0ZWQ6ITAsb3JpZ2luYWxFdmVudDp7fX0pO2Q/Zi5ldmVudC50cmlnZ2VyKGUsbnVsbCxiKTpmLmV2ZW50LmRpc3BhdGNoLmNhbGwoYixlKSxlLmlzRGVmYXVsdFByZXZlbnRlZCgpJiZjLnByZXZlbnREZWZhdWx0KCl9fSxmLmV2ZW50LmhhbmRsZT1mLmV2ZW50LmRpc3BhdGNoLGYucmVtb3ZlRXZlbnQ9Yy5yZW1vdmVFdmVudExpc3RlbmVyP2Z1bmN0aW9uKGEsYixjKXthLnJlbW92ZUV2ZW50TGlzdGVuZXImJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGMsITEpfTpmdW5jdGlvbihhLGIsYyl7YS5kZXRhY2hFdmVudCYmYS5kZXRhY2hFdmVudCgib24iK2IsYyl9LGYuRXZlbnQ9ZnVuY3Rpb24oYSxiKXtpZighKHRoaXMgaW5zdGFuY2VvZiBmLkV2ZW50KSlyZXR1cm4gbmV3IGYuRXZlbnQoYSxiKTthJiZhLnR5cGU/KHRoaXMub3JpZ2luYWxFdmVudD1hLHRoaXMudHlwZT1hLnR5cGUsdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YS5kZWZhdWx0UHJldmVudGVkfHxhLnJldHVyblZhbHVlPT09ITF8fGEuZ2V0UHJldmVudERlZmF1bHQmJmEuZ2V0UHJldmVudERlZmF1bHQoKT9OOk0pOnRoaXMudHlwZT1hLGImJmYuZXh0ZW5kKHRoaXMsYiksdGhpcy50aW1lU3RhbXA9YSYmYS50aW1lU3RhbXB8fGYubm93KCksdGhpc1tmLmV4cGFuZG9dPSEwfSxmLkV2ZW50LnByb3RvdHlwZT17cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1OO3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDshYXx8KGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOmEucmV0dXJuVmFsdWU9ITEpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPU47dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50OyFhfHwoYS5zdG9wUHJvcGFnYXRpb24mJmEuc3RvcFByb3BhZ2F0aW9uKCksYS5jYW5jZWxCdWJibGU9ITApfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPU4sdGhpcy5zdG9wUHJvcGFnYXRpb24oKX0saXNEZWZhdWx0UHJldmVudGVkOk0saXNQcm9wYWdhdGlvblN0b3BwZWQ6TSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDpNfSxmLmVhY2goe21vdXNlZW50ZXI6Im1vdXNlb3ZlciIsbW91c2VsZWF2ZToibW91c2VvdXQifSxmdW5jdGlvbihhLGIpe2YuZXZlbnQuc3BlY2lhbFthXT1mLmV2ZW50LnNwZWNpYWxbYl09e2RlbGVnYXRlVHlwZTpiLGJpbmRUeXBlOmIsaGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1hLnJlbGF0ZWRUYXJnZXQsZD1hLmhhbmRsZU9iaixlPWQuc2VsZWN0b3IsZyxoO2lmKCFjfHxkLm9yaWdUeXBlPT09YS50eXBlfHxjIT09YiYmIWYuY29udGFpbnMoYixjKSlnPWEudHlwZSxhLnR5cGU9ZC5vcmlnVHlwZSxoPWQuaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksYS50eXBlPWc7cmV0dXJuIGh9fX0pLGYuc3VwcG9ydC5zdWJtaXRCdWJibGVzfHwoZi5ldmVudC5zcGVjaWFsLnN1Ym1pdD17c2V0dXA6ZnVuY3Rpb24oKXtpZihmLm5vZGVOYW1lKHRoaXMsImZvcm0iKSlyZXR1cm4hMTtmLmV2ZW50LmFkZCh0aGlzLCJjbGljay5fc3VibWl0IGtleXByZXNzLl9zdWJtaXQiLGZ1bmN0aW9uKGEpe3ZhciBjPWEudGFyZ2V0LGQ9Zi5ub2RlTmFtZShjLCJpbnB1dCIpfHxmLm5vZGVOYW1lKGMsImJ1dHRvbiIpP2MuZm9ybTpiO2QmJiFkLl9zdWJtaXRfYXR0YWNoZWQmJihmLmV2ZW50LmFkZChkLCJzdWJtaXQuX3N1Ym1pdCIsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiZmLmV2ZW50LnNpbXVsYXRlKCJzdWJtaXQiLHRoaXMucGFyZW50Tm9kZSxhLCEwKX0pLGQuX3N1Ym1pdF9hdHRhY2hlZD0hMCl9KX0sdGVhcmRvd246ZnVuY3Rpb24oKXtpZihmLm5vZGVOYW1lKHRoaXMsImZvcm0iKSlyZXR1cm4hMTtmLmV2ZW50LnJlbW92ZSh0aGlzLCIuX3N1Ym1pdCIpfX0pLGYuc3VwcG9ydC5jaGFuZ2VCdWJibGVzfHwoZi5ldmVudC5zcGVjaWFsLmNoYW5nZT17c2V0dXA6ZnVuY3Rpb24oKXtpZihBLnRlc3QodGhpcy5ub2RlTmFtZSkpe2lmKHRoaXMudHlwZT09PSJjaGVja2JveCJ8fHRoaXMudHlwZT09PSJyYWRpbyIpZi5ldmVudC5hZGQodGhpcywicHJvcGVydHljaGFuZ2UuX2NoYW5nZSIsZnVuY3Rpb24oYSl7YS5vcmlnaW5hbEV2ZW50LnByb3BlcnR5TmFtZT09PSJjaGVja2VkIiYmKHRoaXMuX2p1c3RfY2hhbmdlZD0hMCl9KSxmLmV2ZW50LmFkZCh0aGlzLCJjbGljay5fY2hhbmdlIixmdW5jdGlvbihhKXt0aGlzLl9qdXN0X2NoYW5nZWQmJih0aGlzLl9qdXN0X2NoYW5nZWQ9ITEsZi5ldmVudC5zaW11bGF0ZSgiY2hhbmdlIix0aGlzLGEsITApKX0pO3JldHVybiExfWYuZXZlbnQuYWRkKHRoaXMsImJlZm9yZWFjdGl2YXRlLl9jaGFuZ2UiLGZ1bmN0aW9uKGEpe3ZhciBiPWEudGFyZ2V0O0EudGVzdChiLm5vZGVOYW1lKSYmIWIuX2NoYW5nZV9hdHRhY2hlZCYmKGYuZXZlbnQuYWRkKGIsImNoYW5nZS5fY2hhbmdlIixmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUmJiFhLmlzU2ltdWxhdGVkJiZmLmV2ZW50LnNpbXVsYXRlKCJjaGFuZ2UiLHRoaXMucGFyZW50Tm9kZSxhLCEwKX0pLGIuX2NoYW5nZV9hdHRhY2hlZD0hMCl9KX0saGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEudGFyZ2V0O2lmKHRoaXMhPT1ifHxhLmlzU2ltdWxhdGVkfHxhLmlzVHJpZ2dlcnx8Yi50eXBlIT09InJhZGlvIiYmYi50eXBlIT09ImNoZWNrYm94IilyZXR1cm4gYS5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7Zi5ldmVudC5yZW1vdmUodGhpcywiLl9jaGFuZ2UiKTtyZXR1cm4gQS50ZXN0KHRoaXMubm9kZU5hbWUpfX0pLGYuc3VwcG9ydC5mb2N1c2luQnViYmxlc3x8Zi5lYWNoKHtmb2N1czoiZm9jdXNpbiIsYmx1cjoiZm9jdXNvdXQifSxmdW5jdGlvbihhLGIpe3ZhciBkPTAsZT1mdW5jdGlvbihhKXtmLmV2ZW50LnNpbXVsYXRlKGIsYS50YXJnZXQsZi5ldmVudC5maXgoYSksITApfTtmLmV2ZW50LnNwZWNpYWxbYl09e3NldHVwOmZ1bmN0aW9uKCl7ZCsrPT09MCYmYy5hZGRFdmVudExpc3RlbmVyKGEsZSwhMCl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7LS1kPT09MCYmYy5yZW1vdmVFdmVudExpc3RlbmVyKGEsZSwhMCl9fX0pLGYuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbihhLGMsZCxlLGcpe3ZhciBoLGk7aWYodHlwZW9mIGE9PSJvYmplY3QiKXt0eXBlb2YgYyE9InN0cmluZyImJihkPWMsYz1iKTtmb3IoaSBpbiBhKXRoaXMub24oaSxjLGQsYVtpXSxnKTtyZXR1cm4gdGhpc31kPT1udWxsJiZlPT1udWxsPyhlPWMsZD1jPWIpOmU9PW51bGwmJih0eXBlb2YgYz09InN0cmluZyI/KGU9ZCxkPWIpOihlPWQsZD1jLGM9YikpO2lmKGU9PT0hMSllPU07ZWxzZSBpZighZSlyZXR1cm4gdGhpcztnPT09MSYmKGg9ZSxlPWZ1bmN0aW9uKGEpe2YoKS5vZmYoYSk7cmV0dXJuIGguYXBwbHkodGhpcyxhcmd1bWVudHMpfSxlLmd1aWQ9aC5ndWlkfHwoaC5ndWlkPWYuZ3VpZCsrKSk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2YuZXZlbnQuYWRkKHRoaXMsYSxlLGQsYyl9KX0sb25lOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB0aGlzLm9uLmNhbGwodGhpcyxhLGIsYyxkLDEpfSxvZmY6ZnVuY3Rpb24oYSxjLGQpe2lmKGEmJmEucHJldmVudERlZmF1bHQmJmEuaGFuZGxlT2JqKXt2YXIgZT1hLmhhbmRsZU9iajtmKGEuZGVsZWdhdGVUYXJnZXQpLm9mZihlLm5hbWVzcGFjZT9lLnR5cGUrIi4iK2UubmFtZXNwYWNlOmUudHlwZSxlLnNlbGVjdG9yLGUuaGFuZGxlcik7cmV0dXJuIHRoaXN9aWYodHlwZW9mIGE9PSJvYmplY3QiKXtmb3IodmFyIGcgaW4gYSl0aGlzLm9mZihnLGMsYVtnXSk7cmV0dXJuIHRoaXN9aWYoYz09PSExfHx0eXBlb2YgYz09ImZ1bmN0aW9uIilkPWMsYz1iO2Q9PT0hMSYmKGQ9TSk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2YuZXZlbnQucmVtb3ZlKHRoaXMsYSxkLGMpfSl9LGJpbmQ6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aGlzLm9uKGEsbnVsbCxiLGMpfSx1bmJpbmQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vZmYoYSxudWxsLGIpfSxsaXZlOmZ1bmN0aW9uKGEsYixjKXtmKHRoaXMuY29udGV4dCkub24oYSx0aGlzLnNlbGVjdG9yLGIsYyk7cmV0dXJuIHRoaXN9LGRpZTpmdW5jdGlvbihhLGIpe2YodGhpcy5jb250ZXh0KS5vZmYoYSx0aGlzLnNlbGVjdG9yfHwiKioiLGIpO3JldHVybiB0aGlzfSxkZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihiLGEsYyxkKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg9PTE/dGhpcy5vZmYoYSwiKioiKTp0aGlzLm9mZihiLGEsYyl9LHRyaWdnZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Zi5ldmVudC50cmlnZ2VyKGEsYix0aGlzKX0pfSx0cmlnZ2VySGFuZGxlcjpmdW5jdGlvbihhLGIpe2lmKHRoaXNbMF0pcmV0dXJuIGYuZXZlbnQudHJpZ2dlcihhLGIsdGhpc1swXSwhMCl9LHRvZ2dsZTpmdW5jdGlvbihhKXt2YXIgYj1hcmd1bWVudHMsYz1hLmd1aWR8fGYuZ3VpZCsrLGQ9MCxlPWZ1bmN0aW9uKGMpe3ZhciBlPShmLl9kYXRhKHRoaXMsImxhc3RUb2dnbGUiK2EuZ3VpZCl8fDApJWQ7Zi5fZGF0YSh0aGlzLCJsYXN0VG9nZ2xlIithLmd1aWQsZSsxKSxjLnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIGJbZV0uYXBwbHkodGhpcyxhcmd1bWVudHMpfHwhMX07ZS5ndWlkPWM7d2hpbGUoZDxiLmxlbmd0aCliW2QrK10uZ3VpZD1jO3JldHVybiB0aGlzLmNsaWNrKGUpfSxob3ZlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLm1vdXNlZW50ZXIoYSkubW91c2VsZWF2ZShifHxhKX19KSxmLmVhY2goImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCBsb2FkIHJlc2l6ZSBzY3JvbGwgdW5sb2FkIGNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIGNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IgY29udGV4dG1lbnUiLnNwbGl0KCIgIiksZnVuY3Rpb24oYSxiKXtmLmZuW2JdPWZ1bmN0aW9uKGEsYyl7Yz09bnVsbCYmKGM9YSxhPW51bGwpO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPjA/dGhpcy5iaW5kKGIsYSxjKTp0aGlzLnRyaWdnZXIoYil9LGYuYXR0ckZuJiYoZi5hdHRyRm5bYl09ITApLEcudGVzdChiKSYmKGYuZXZlbnQuZml4SG9va3NbYl09Zi5ldmVudC5rZXlIb29rcyksSC50ZXN0KGIpJiYoZi5ldmVudC5maXhIb29rc1tiXT1mLmV2ZW50Lm1vdXNlSG9va3MpfSksZnVuY3Rpb24oKXtmdW5jdGlvbiB4KGEsYixjLGUsZixnKXtmb3IodmFyIGg9MCxpPWUubGVuZ3RoO2g8aTtoKyspe3ZhciBqPWVbaF07aWYoail7dmFyIGs9ITE7aj1qW2FdO3doaWxlKGope2lmKGpbZF09PT1jKXtrPWVbai5zaXpzZXRdO2JyZWFrfWlmKGoubm9kZVR5cGU9PT0xKXtnfHwoaltkXT1jLGouc2l6c2V0PWgpO2lmKHR5cGVvZiBiIT0ic3RyaW5nIil7aWYoaj09PWIpe2s9ITA7YnJlYWt9fWVsc2UgaWYobS5maWx0ZXIoYixbal0pLmxlbmd0aD4wKXtrPWo7YnJlYWt9fWo9althXX1lW2hdPWt9fX1mdW5jdGlvbiB3KGEsYixjLGUsZixnKXtmb3IodmFyIGg9MCxpPWUubGVuZ3RoO2g8aTtoKyspe3ZhciBqPWVbaF07aWYoail7dmFyIGs9ITE7aj1qW2FdO3doaWxlKGope2lmKGpbZF09PT1jKXtrPWVbai5zaXpzZXRdO2JyZWFrfWoubm9kZVR5cGU9PT0xJiYhZyYmKGpbZF09YyxqLnNpenNldD1oKTtpZihqLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1iKXtrPWo7YnJlYWt9aj1qW2FdfWVbaF09a319fXZhciBhPS8oKD86XCgoPzpcKFteKCldK1wpfFteKCldKykrXCl8XFsoPzpcW1teXFtcXV0qXF18WyciXVteJyJdKlsnIl18W15cW1xdJyJdKykrXF18XFwufFteID4rfiwoXFtcXF0rKSt8Wz4rfl0pKFxzKixccyopPygoPzoufFxyfFxuKSopL2csZD0ic2l6Y2FjaGUiKyhNYXRoLnJhbmRvbSgpKyIiKS5yZXBsYWNlKCIuIiwiIiksZT0wLGc9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxoPSExLGk9ITAsaj0vXFwvZyxrPS9cclxuL2csbD0vXFcvO1swLDBdLnNvcnQoZnVuY3Rpb24oKXtpPSExO3JldHVybiAwfSk7dmFyIG09ZnVuY3Rpb24oYixkLGUsZil7ZT1lfHxbXSxkPWR8fGM7dmFyIGg9ZDtpZihkLm5vZGVUeXBlIT09MSYmZC5ub2RlVHlwZSE9PTkpcmV0dXJuW107aWYoIWJ8fHR5cGVvZiBiIT0ic3RyaW5nIilyZXR1cm4gZTt2YXIgaSxqLGssbCxuLHEscix0LHU9ITAsdj1tLmlzWE1MKGQpLHc9W10seD1iO2Rve2EuZXhlYygiIiksaT1hLmV4ZWMoeCk7aWYoaSl7eD1pWzNdLHcucHVzaChpWzFdKTtpZihpWzJdKXtsPWlbM107YnJlYWt9fX13aGlsZShpKTtpZih3Lmxlbmd0aD4xJiZwLmV4ZWMoYikpaWYody5sZW5ndGg9PT0yJiZvLnJlbGF0aXZlW3dbMF1dKWo9eSh3WzBdK3dbMV0sZCxmKTtlbHNle2o9by5yZWxhdGl2ZVt3WzBdXT9bZF06bSh3LnNoaWZ0KCksZCk7d2hpbGUody5sZW5ndGgpYj13LnNoaWZ0KCksby5yZWxhdGl2ZVtiXSYmKGIrPXcuc2hpZnQoKSksaj15KGIsaixmKX1lbHNleyFmJiZ3Lmxlbmd0aD4xJiZkLm5vZGVUeXBlPT09OSYmIXYmJm8ubWF0Y2guSUQudGVzdCh3WzBdKSYmIW8ubWF0Y2guSUQudGVzdCh3W3cubGVuZ3RoLTFdKSYmKG49bS5maW5kKHcuc2hpZnQoKSxkLHYpLGQ9bi5leHByP20uZmlsdGVyKG4uZXhwcixuLnNldClbMF06bi5zZXRbMF0pO2lmKGQpe249Zj97ZXhwcjp3LnBvcCgpLHNldDpzKGYpfTptLmZpbmQody5wb3AoKSx3Lmxlbmd0aD09PTEmJih3WzBdPT09In4ifHx3WzBdPT09IisiKSYmZC5wYXJlbnROb2RlP2QucGFyZW50Tm9kZTpkLHYpLGo9bi5leHByP20uZmlsdGVyKG4uZXhwcixuLnNldCk6bi5zZXQsdy5sZW5ndGg+MD9rPXMoaik6dT0hMTt3aGlsZSh3Lmxlbmd0aClxPXcucG9wKCkscj1xLG8ucmVsYXRpdmVbcV0/cj13LnBvcCgpOnE9IiIscj09bnVsbCYmKHI9ZCksby5yZWxhdGl2ZVtxXShrLHIsdil9ZWxzZSBrPXc9W119a3x8KGs9aiksa3x8bS5lcnJvcihxfHxiKTtpZihnLmNhbGwoayk9PT0iW29iamVjdCBBcnJheV0iKWlmKCF1KWUucHVzaC5hcHBseShlLGspO2Vsc2UgaWYoZCYmZC5ub2RlVHlwZT09PTEpZm9yKHQ9MDtrW3RdIT1udWxsO3QrKylrW3RdJiYoa1t0XT09PSEwfHxrW3RdLm5vZGVUeXBlPT09MSYmbS5jb250YWlucyhkLGtbdF0pKSYmZS5wdXNoKGpbdF0pO2Vsc2UgZm9yKHQ9MDtrW3RdIT1udWxsO3QrKylrW3RdJiZrW3RdLm5vZGVUeXBlPT09MSYmZS5wdXNoKGpbdF0pO2Vsc2UgcyhrLGUpO2wmJihtKGwsaCxlLGYpLG0udW5pcXVlU29ydChlKSk7cmV0dXJuIGV9O20udW5pcXVlU29ydD1mdW5jdGlvbihhKXtpZih1KXtoPWksYS5zb3J0KHUpO2lmKGgpZm9yKHZhciBiPTE7YjxhLmxlbmd0aDtiKyspYVtiXT09PWFbYi0xXSYmYS5zcGxpY2UoYi0tLDEpfXJldHVybiBhfSxtLm1hdGNoZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbShhLG51bGwsbnVsbCxiKX0sbS5tYXRjaGVzU2VsZWN0b3I9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbShiLG51bGwsbnVsbCxbYV0pLmxlbmd0aD4wfSxtLmZpbmQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGgsaTtpZighYSlyZXR1cm5bXTtmb3IoZT0wLGY9by5vcmRlci5sZW5ndGg7ZTxmO2UrKyl7aD1vLm9yZGVyW2VdO2lmKGc9by5sZWZ0TWF0Y2hbaF0uZXhlYyhhKSl7aT1nWzFdLGcuc3BsaWNlKDEsMSk7aWYoaS5zdWJzdHIoaS5sZW5ndGgtMSkhPT0iXFwiKXtnWzFdPShnWzFdfHwiIikucmVwbGFjZShqLCIiKSxkPW8uZmluZFtoXShnLGIsYyk7aWYoZCE9bnVsbCl7YT1hLnJlcGxhY2Uoby5tYXRjaFtoXSwiIik7YnJlYWt9fX19ZHx8KGQ9dHlwZW9mIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPSJ1bmRlZmluZWQiP2IuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKTpbXSk7cmV0dXJue3NldDpkLGV4cHI6YX19LG0uZmlsdGVyPWZ1bmN0aW9uKGEsYyxkLGUpe3ZhciBmLGcsaCxpLGosayxsLG4scCxxPWEscj1bXSxzPWMsdD1jJiZjWzBdJiZtLmlzWE1MKGNbMF0pO3doaWxlKGEmJmMubGVuZ3RoKXtmb3IoaCBpbiBvLmZpbHRlcilpZigoZj1vLmxlZnRNYXRjaFtoXS5leGVjKGEpKSE9bnVsbCYmZlsyXSl7az1vLmZpbHRlcltoXSxsPWZbMV0sZz0hMSxmLnNwbGljZSgxLDEpO2lmKGwuc3Vic3RyKGwubGVuZ3RoLTEpPT09IlxcIiljb250aW51ZTtzPT09ciYmKHI9W10pO2lmKG8ucHJlRmlsdGVyW2hdKXtmPW8ucHJlRmlsdGVyW2hdKGYscyxkLHIsZSx0KTtpZighZilnPWk9ITA7ZWxzZSBpZihmPT09ITApY29udGludWV9aWYoZilmb3Iobj0wOyhqPXNbbl0pIT1udWxsO24rKylqJiYoaT1rKGosZixuLHMpLHA9ZV5pLGQmJmkhPW51bGw/cD9nPSEwOnNbbl09ITE6cCYmKHIucHVzaChqKSxnPSEwKSk7aWYoaSE9PWIpe2R8fChzPXIpLGE9YS5yZXBsYWNlKG8ubWF0Y2hbaF0sIiIpO2lmKCFnKXJldHVybltdO2JyZWFrfX1pZihhPT09cSlpZihnPT1udWxsKW0uZXJyb3IoYSk7ZWxzZSBicmVhaztxPWF9cmV0dXJuIHN9LG0uZXJyb3I9ZnVuY3Rpb24oYSl7dGhyb3ciU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogIithfTt2YXIgbj1tLmdldFRleHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPWEubm9kZVR5cGUsZT0iIjtpZihkKXtpZihkPT09MSl7aWYodHlwZW9mIGEudGV4dENvbnRlbnQ9PSJzdHJpbmciKXJldHVybiBhLnRleHRDb250ZW50O2lmKHR5cGVvZiBhLmlubmVyVGV4dD09InN0cmluZyIpcmV0dXJuIGEuaW5uZXJUZXh0LnJlcGxhY2UoaywiIik7Zm9yKGE9YS5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWUrPW4oYSl9ZWxzZSBpZihkPT09M3x8ZD09PTQpcmV0dXJuIGEubm9kZVZhbHVlfWVsc2UgZm9yKGI9MDtjPWFbYl07YisrKWMubm9kZVR5cGUhPT04JiYoZSs9bihjKSk7cmV0dXJuIGV9LG89bS5zZWxlY3RvcnM9e29yZGVyOlsiSUQiLCJOQU1FIiwiVEFHIl0sbWF0Y2g6e0lEOi8jKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspLyxDTEFTUzovXC4oKD86W1x3XHUwMGMwLVx1RkZGRlwtXXxcXC4pKykvLE5BTUU6L1xbbmFtZT1bJyJdKigoPzpbXHdcdTAwYzAtXHVGRkZGXC1dfFxcLikrKVsnIl0qXF0vLEFUVFI6L1xbXHMqKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspXHMqKD86KFxTPz0pXHMqKD86KFsnIl0pKC4qPylcM3woIz8oPzpbXHdcdTAwYzAtXHVGRkZGXC1dfFxcLikqKXwpfClccypcXS8sVEFHOi9eKCg/Oltcd1x1MDBjMC1cdUZGRkZcKlwtXXxcXC4pKykvLENISUxEOi86KG9ubHl8bnRofGxhc3R8Zmlyc3QpLWNoaWxkKD86XChccyooZXZlbnxvZGR8KD86WytcLV0/XGQrfCg/OlsrXC1dP1xkKik/blxzKig/OlsrXC1dXHMqXGQrKT8pKVxzKlwpKT8vLFBPUzovOihudGh8ZXF8Z3R8bHR8Zmlyc3R8bGFzdHxldmVufG9kZCkoPzpcKChcZCopXCkpPyg/PVteXC1dfCQpLyxQU0VVRE86LzooKD86W1x3XHUwMGMwLVx1RkZGRlwtXXxcXC4pKykoPzpcKChbJyJdPykoKD86XChbXlwpXStcKXxbXlwoXCldKikrKVwyXCkpPy99LGxlZnRNYXRjaDp7fSxhdHRyTWFwOnsiY2xhc3MiOiJjbGFzc05hbWUiLCJmb3IiOiJodG1sRm9yIn0sYXR0ckhhbmRsZTp7aHJlZjpmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoImhyZWYiKX0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoInR5cGUiKX19LHJlbGF0aXZlOnsiKyI6ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYj09InN0cmluZyIsZD1jJiYhbC50ZXN0KGIpLGU9YyYmIWQ7ZCYmKGI9Yi50b0xvd2VyQ2FzZSgpKTtmb3IodmFyIGY9MCxnPWEubGVuZ3RoLGg7ZjxnO2YrKylpZihoPWFbZl0pe3doaWxlKChoPWgucHJldmlvdXNTaWJsaW5nKSYmaC5ub2RlVHlwZSE9PTEpO2FbZl09ZXx8aCYmaC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09Yj9ofHwhMTpoPT09Yn1lJiZtLmZpbHRlcihiLGEsITApfSwiPiI6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPXR5cGVvZiBiPT0ic3RyaW5nIixlPTAsZj1hLmxlbmd0aDtpZihkJiYhbC50ZXN0KGIpKXtiPWIudG9Mb3dlckNhc2UoKTtmb3IoO2U8ZjtlKyspe2M9YVtlXTtpZihjKXt2YXIgZz1jLnBhcmVudE5vZGU7YVtlXT1nLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1iP2c6ITF9fX1lbHNle2Zvcig7ZTxmO2UrKyljPWFbZV0sYyYmKGFbZV09ZD9jLnBhcmVudE5vZGU6Yy5wYXJlbnROb2RlPT09Yik7ZCYmbS5maWx0ZXIoYixhLCEwKX19LCIiOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxmPWUrKyxnPXg7dHlwZW9mIGI9PSJzdHJpbmciJiYhbC50ZXN0KGIpJiYoYj1iLnRvTG93ZXJDYXNlKCksZD1iLGc9dyksZygicGFyZW50Tm9kZSIsYixmLGEsZCxjKX0sIn4iOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxmPWUrKyxnPXg7dHlwZW9mIGI9PSJzdHJpbmciJiYhbC50ZXN0KGIpJiYoYj1iLnRvTG93ZXJDYXNlKCksZD1iLGc9dyksZygicHJldmlvdXNTaWJsaW5nIixiLGYsYSxkLGMpfX0sZmluZDp7SUQ6ZnVuY3Rpb24oYSxiLGMpe2lmKHR5cGVvZiBiLmdldEVsZW1lbnRCeUlkIT0idW5kZWZpbmVkIiYmIWMpe3ZhciBkPWIuZ2V0RWxlbWVudEJ5SWQoYVsxXSk7cmV0dXJuIGQmJmQucGFyZW50Tm9kZT9bZF06W119fSxOQU1FOmZ1bmN0aW9uKGEsYil7aWYodHlwZW9mIGIuZ2V0RWxlbWVudHNCeU5hbWUhPSJ1bmRlZmluZWQiKXt2YXIgYz1bXSxkPWIuZ2V0RWxlbWVudHNCeU5hbWUoYVsxXSk7Zm9yKHZhciBlPTAsZj1kLmxlbmd0aDtlPGY7ZSsrKWRbZV0uZ2V0QXR0cmlidXRlKCJuYW1lIik9PT1hWzFdJiZjLnB1c2goZFtlXSk7cmV0dXJuIGMubGVuZ3RoPT09MD9udWxsOmN9fSxUQUc6ZnVuY3Rpb24oYSxiKXtpZih0eXBlb2YgYi5nZXRFbGVtZW50c0J5VGFnTmFtZSE9InVuZGVmaW5lZCIpcmV0dXJuIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYVsxXSl9fSxwcmVGaWx0ZXI6e0NMQVNTOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXthPSIgIithWzFdLnJlcGxhY2UoaiwiIikrIiAiO2lmKGYpcmV0dXJuIGE7Zm9yKHZhciBnPTAsaDsoaD1iW2ddKSE9bnVsbDtnKyspaCYmKGVeKGguY2xhc3NOYW1lJiYoIiAiK2guY2xhc3NOYW1lKyIgIikucmVwbGFjZSgvW1x0XG5ccl0vZywiICIpLmluZGV4T2YoYSk+PTApP2N8fGQucHVzaChoKTpjJiYoYltnXT0hMSkpO3JldHVybiExfSxJRDpmdW5jdGlvbihhKXtyZXR1cm4gYVsxXS5yZXBsYWNlKGosIiIpfSxUQUc6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYVsxXS5yZXBsYWNlKGosIiIpLnRvTG93ZXJDYXNlKCl9LENISUxEOmZ1bmN0aW9uKGEpe2lmKGFbMV09PT0ibnRoIil7YVsyXXx8bS5lcnJvcihhWzBdKSxhWzJdPWFbMl0ucmVwbGFjZSgvXlwrfFxzKi9nLCIiKTt2YXIgYj0vKC0/KShcZCopKD86bihbK1wtXT9cZCopKT8vLmV4ZWMoYVsyXT09PSJldmVuIiYmIjJuInx8YVsyXT09PSJvZGQiJiYiMm4rMSJ8fCEvXEQvLnRlc3QoYVsyXSkmJiIwbisiK2FbMl18fGFbMl0pO2FbMl09YlsxXSsoYlsyXXx8MSktMCxhWzNdPWJbM10tMH1lbHNlIGFbMl0mJm0uZXJyb3IoYVswXSk7YVswXT1lKys7cmV0dXJuIGF9LEFUVFI6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPWFbMV09YVsxXS5yZXBsYWNlKGosIiIpOyFmJiZvLmF0dHJNYXBbZ10mJihhWzFdPW8uYXR0ck1hcFtnXSksYVs0XT0oYVs0XXx8YVs1XXx8IiIpLnJlcGxhY2UoaiwiIiksYVsyXT09PSJ+PSImJihhWzRdPSIgIithWzRdKyIgIik7cmV0dXJuIGF9LFBTRVVETzpmdW5jdGlvbihiLGMsZCxlLGYpe2lmKGJbMV09PT0ibm90IilpZigoYS5leGVjKGJbM10pfHwiIikubGVuZ3RoPjF8fC9eXHcvLnRlc3QoYlszXSkpYlszXT1tKGJbM10sbnVsbCxudWxsLGMpO2Vsc2V7dmFyIGc9bS5maWx0ZXIoYlszXSxjLGQsITBeZik7ZHx8ZS5wdXNoLmFwcGx5KGUsZyk7cmV0dXJuITF9ZWxzZSBpZihvLm1hdGNoLlBPUy50ZXN0KGJbMF0pfHxvLm1hdGNoLkNISUxELnRlc3QoYlswXSkpcmV0dXJuITA7cmV0dXJuIGJ9LFBPUzpmdW5jdGlvbihhKXthLnVuc2hpZnQoITApO3JldHVybiBhfX0sZmlsdGVyczp7ZW5hYmxlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kaXNhYmxlZD09PSExJiZhLnR5cGUhPT0iaGlkZGVuIn0sZGlzYWJsZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZGlzYWJsZWQ9PT0hMH0sY2hlY2tlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5jaGVja2VkPT09ITB9LHNlbGVjdGVkOmZ1bmN0aW9uKGEpe2EucGFyZW50Tm9kZSYmYS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7cmV0dXJuIGEuc2VsZWN0ZWQ9PT0hMH0scGFyZW50OmZ1bmN0aW9uKGEpe3JldHVybiEhYS5maXJzdENoaWxkfSxlbXB0eTpmdW5jdGlvbihhKXtyZXR1cm4hYS5maXJzdENoaWxkfSxoYXM6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiEhbShjWzNdLGEpLmxlbmd0aH0saGVhZGVyOmZ1bmN0aW9uKGEpe3JldHVybi9oXGQvaS50ZXN0KGEubm9kZU5hbWUpfSx0ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKCJ0eXBlIiksYz1hLnR5cGU7cmV0dXJuIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PSJpbnB1dCImJiJ0ZXh0Ij09PWMmJihiPT09Y3x8Yj09PW51bGwpfSxyYWRpbzpmdW5jdGlvbihhKXtyZXR1cm4gYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09ImlucHV0IiYmInJhZGlvIj09PWEudHlwZX0sY2hlY2tib3g6ZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PSJpbnB1dCImJiJjaGVja2JveCI9PT1hLnR5cGV9LGZpbGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PSJpbnB1dCImJiJmaWxlIj09PWEudHlwZX0scGFzc3dvcmQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PSJpbnB1dCImJiJwYXNzd29yZCI9PT1hLnR5cGV9LHN1Ym1pdDpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuKGI9PT0iaW5wdXQifHxiPT09ImJ1dHRvbiIpJiYic3VibWl0Ij09PWEudHlwZX0saW1hZ2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PSJpbnB1dCImJiJpbWFnZSI9PT1hLnR5cGV9LHJlc2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oYj09PSJpbnB1dCJ8fGI9PT0iYnV0dG9uIikmJiJyZXNldCI9PT1hLnR5cGV9LGJ1dHRvbjpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGI9PT0iaW5wdXQiJiYiYnV0dG9uIj09PWEudHlwZXx8Yj09PSJidXR0b24ifSxpbnB1dDpmdW5jdGlvbihhKXtyZXR1cm4vaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbi9pLnRlc3QoYS5ub2RlTmFtZSl9LGZvY3VzOmZ1bmN0aW9uKGEpe3JldHVybiBhPT09YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnR9fSxzZXRGaWx0ZXJzOntmaXJzdDpmdW5jdGlvbihhLGIpe3JldHVybiBiPT09MH0sbGFzdDpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gYj09PWQubGVuZ3RoLTF9LGV2ZW46ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYiUyPT09MH0sb2RkOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGIlMj09PTF9LGx0OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYjxjWzNdLTB9LGd0OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYj5jWzNdLTB9LG50aDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGNbM10tMD09PWJ9LGVxOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gY1szXS0wPT09Yn19LGZpbHRlcjp7UFNFVURPOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWJbMV0sZj1vLmZpbHRlcnNbZV07aWYoZilyZXR1cm4gZihhLGMsYixkKTtpZihlPT09ImNvbnRhaW5zIilyZXR1cm4oYS50ZXh0Q29udGVudHx8YS5pbm5lclRleHR8fG4oW2FdKXx8IiIpLmluZGV4T2YoYlszXSk+PTA7aWYoZT09PSJub3QiKXt2YXIgZz1iWzNdO2Zvcih2YXIgaD0wLGk9Zy5sZW5ndGg7aDxpO2grKylpZihnW2hdPT09YSlyZXR1cm4hMTtyZXR1cm4hMH1tLmVycm9yKGUpfSxDSElMRDpmdW5jdGlvbihhLGIpe3ZhciBjLGUsZixnLGgsaSxqLGs9YlsxXSxsPWE7c3dpdGNoKGspe2Nhc2Uib25seSI6Y2FzZSJmaXJzdCI6d2hpbGUobD1sLnByZXZpb3VzU2libGluZylpZihsLm5vZGVUeXBlPT09MSlyZXR1cm4hMTtpZihrPT09ImZpcnN0IilyZXR1cm4hMDtsPWE7Y2FzZSJsYXN0Ijp3aGlsZShsPWwubmV4dFNpYmxpbmcpaWYobC5ub2RlVHlwZT09PTEpcmV0dXJuITE7cmV0dXJuITA7Y2FzZSJudGgiOmM9YlsyXSxlPWJbM107aWYoYz09PTEmJmU9PT0wKXJldHVybiEwO2Y9YlswXSxnPWEucGFyZW50Tm9kZTtpZihnJiYoZ1tkXSE9PWZ8fCFhLm5vZGVJbmRleCkpe2k9MDtmb3IobD1nLmZpcnN0Q2hpbGQ7bDtsPWwubmV4dFNpYmxpbmcpbC5ub2RlVHlwZT09PTEmJihsLm5vZGVJbmRleD0rK2kpO2dbZF09Zn1qPWEubm9kZUluZGV4LWU7cmV0dXJuIGM9PT0wP2o9PT0wOmolYz09PTAmJmovYz49MH19LElEOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEubm9kZVR5cGU9PT0xJiZhLmdldEF0dHJpYnV0ZSgiaWQiKT09PWJ9LFRBRzpmdW5jdGlvbihhLGIpe3JldHVybiBiPT09IioiJiZhLm5vZGVUeXBlPT09MXx8ISFhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1ifSxDTEFTUzpmdW5jdGlvbihhLGIpe3JldHVybigiICIrKGEuY2xhc3NOYW1lfHxhLmdldEF0dHJpYnV0ZSgiY2xhc3MiKSkrIiAiKS5pbmRleE9mKGIpPi0xfSxBVFRSOmZ1bmN0aW9uKGEsYil7dmFyIGM9YlsxXSxkPW0uYXR0cj9tLmF0dHIoYSxjKTpvLmF0dHJIYW5kbGVbY10/by5hdHRySGFuZGxlW2NdKGEpOmFbY10hPW51bGw/YVtjXTphLmdldEF0dHJpYnV0ZShjKSxlPWQrIiIsZj1iWzJdLGc9Yls0XTtyZXR1cm4gZD09bnVsbD9mPT09IiE9IjohZiYmbS5hdHRyP2QhPW51bGw6Zj09PSI9Ij9lPT09ZzpmPT09Iio9Ij9lLmluZGV4T2YoZyk+PTA6Zj09PSJ+PSI/KCIgIitlKyIgIikuaW5kZXhPZihnKT49MDpnP2Y9PT0iIT0iP2UhPT1nOmY9PT0iXj0iP2UuaW5kZXhPZihnKT09PTA6Zj09PSIkPSI/ZS5zdWJzdHIoZS5sZW5ndGgtZy5sZW5ndGgpPT09ZzpmPT09Inw9Ij9lPT09Z3x8ZS5zdWJzdHIoMCxnLmxlbmd0aCsxKT09PWcrIi0iOiExOmUmJmQhPT0hMX0sUE9TOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWJbMl0sZj1vLnNldEZpbHRlcnNbZV07aWYoZilyZXR1cm4gZihhLGMsYixkKX19fSxwPW8ubWF0Y2guUE9TLHE9ZnVuY3Rpb24oYSxiKXtyZXR1cm4iXFwiKyhiLTArMSl9O2Zvcih2YXIgciBpbiBvLm1hdGNoKW8ubWF0Y2hbcl09bmV3IFJlZ0V4cChvLm1hdGNoW3JdLnNvdXJjZSsvKD8hW15cW10qXF0pKD8hW15cKF0qXCkpLy5zb3VyY2UpLG8ubGVmdE1hdGNoW3JdPW5ldyBSZWdFeHAoLyheKD86LnxccnxcbikqPykvLnNvdXJjZStvLm1hdGNoW3JdLnNvdXJjZS5yZXBsYWNlKC9cXChcZCspL2cscSkpO3ZhciBzPWZ1bmN0aW9uKGEsYil7YT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhLDApO2lmKGIpe2IucHVzaC5hcHBseShiLGEpO3JldHVybiBifXJldHVybiBhfTt0cnl7QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYy5kb2N1bWVudEVsZW1lbnQuY2hpbGROb2RlcywwKVswXS5ub2RlVHlwZX1jYXRjaCh0KXtzPWZ1bmN0aW9uKGEsYil7dmFyIGM9MCxkPWJ8fFtdO2lmKGcuY2FsbChhKT09PSJbb2JqZWN0IEFycmF5XSIpQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoZCxhKTtlbHNlIGlmKHR5cGVvZiBhLmxlbmd0aD09Im51bWJlciIpZm9yKHZhciBlPWEubGVuZ3RoO2M8ZTtjKyspZC5wdXNoKGFbY10pO2Vsc2UgZm9yKDthW2NdO2MrKylkLnB1c2goYVtjXSk7cmV0dXJuIGR9fXZhciB1LHY7Yy5kb2N1bWVudEVsZW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24/dT1mdW5jdGlvbihhLGIpe2lmKGE9PT1iKXtoPSEwO3JldHVybiAwfWlmKCFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9ufHwhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbilyZXR1cm4gYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8tMToxO3JldHVybiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjQ/LTE6MX06KHU9ZnVuY3Rpb24oYSxiKXtpZihhPT09Yil7aD0hMDtyZXR1cm4gMH1pZihhLnNvdXJjZUluZGV4JiZiLnNvdXJjZUluZGV4KXJldHVybiBhLnNvdXJjZUluZGV4LWIuc291cmNlSW5kZXg7dmFyIGMsZCxlPVtdLGY9W10sZz1hLnBhcmVudE5vZGUsaT1iLnBhcmVudE5vZGUsaj1nO2lmKGc9PT1pKXJldHVybiB2KGEsYik7aWYoIWcpcmV0dXJuLTE7aWYoIWkpcmV0dXJuIDE7d2hpbGUoaillLnVuc2hpZnQoaiksaj1qLnBhcmVudE5vZGU7aj1pO3doaWxlKGopZi51bnNoaWZ0KGopLGo9ai5wYXJlbnROb2RlO2M9ZS5sZW5ndGgsZD1mLmxlbmd0aDtmb3IodmFyIGs9MDtrPGMmJms8ZDtrKyspaWYoZVtrXSE9PWZba10pcmV0dXJuIHYoZVtrXSxmW2tdKTtyZXR1cm4gaz09PWM/dihhLGZba10sLTEpOnYoZVtrXSxiLDEpfSx2PWZ1bmN0aW9uKGEsYixjKXtpZihhPT09YilyZXR1cm4gYzt2YXIgZD1hLm5leHRTaWJsaW5nO3doaWxlKGQpe2lmKGQ9PT1iKXJldHVybi0xO2Q9ZC5uZXh0U2libGluZ31yZXR1cm4gMX0pLGZ1bmN0aW9uKCl7dmFyIGE9Yy5jcmVhdGVFbGVtZW50KCJkaXYiKSxkPSJzY3JpcHQiKyhuZXcgRGF0ZSkuZ2V0VGltZSgpLGU9Yy5kb2N1bWVudEVsZW1lbnQ7YS5pbm5lckhUTUw9IjxhIG5hbWU9JyIrZCsiJy8+IixlLmluc2VydEJlZm9yZShhLGUuZmlyc3RDaGlsZCksYy5nZXRFbGVtZW50QnlJZChkKSYmKG8uZmluZC5JRD1mdW5jdGlvbihhLGMsZCl7aWYodHlwZW9mIGMuZ2V0RWxlbWVudEJ5SWQhPSJ1bmRlZmluZWQiJiYhZCl7dmFyIGU9Yy5nZXRFbGVtZW50QnlJZChhWzFdKTtyZXR1cm4gZT9lLmlkPT09YVsxXXx8dHlwZW9mIGUuZ2V0QXR0cmlidXRlTm9kZSE9InVuZGVmaW5lZCImJmUuZ2V0QXR0cmlidXRlTm9kZSgiaWQiKS5ub2RlVmFsdWU9PT1hWzFdP1tlXTpiOltdfX0sby5maWx0ZXIuSUQ9ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYS5nZXRBdHRyaWJ1dGVOb2RlIT0idW5kZWZpbmVkIiYmYS5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpO3JldHVybiBhLm5vZGVUeXBlPT09MSYmYyYmYy5ub2RlVmFsdWU9PT1ifSksZS5yZW1vdmVDaGlsZChhKSxlPWE9bnVsbH0oKSxmdW5jdGlvbigpe3ZhciBhPWMuY3JlYXRlRWxlbWVudCgiZGl2Iik7YS5hcHBlbmRDaGlsZChjLmNyZWF0ZUNvbW1lbnQoIiIpKSxhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RoPjAmJihvLmZpbmQuVEFHPWZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5nZXRFbGVtZW50c0J5VGFnTmFtZShhWzFdKTtpZihhWzFdPT09IioiKXt2YXIgZD1bXTtmb3IodmFyIGU9MDtjW2VdO2UrKyljW2VdLm5vZGVUeXBlPT09MSYmZC5wdXNoKGNbZV0pO2M9ZH1yZXR1cm4gY30pLGEuaW5uZXJIVE1MPSI8YSBocmVmPScjJz48L2E+IixhLmZpcnN0Q2hpbGQmJnR5cGVvZiBhLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlIT0idW5kZWZpbmVkIiYmYS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgiaHJlZiIpIT09IiMiJiYoby5hdHRySGFuZGxlLmhyZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKCJocmVmIiwyKX0pLGE9bnVsbH0oKSxjLnF1ZXJ5U2VsZWN0b3JBbGwmJmZ1bmN0aW9uKCl7dmFyIGE9bSxiPWMuY3JlYXRlRWxlbWVudCgiZGl2IiksZD0iX19zaXp6bGVfXyI7Yi5pbm5lckhUTUw9IjxwIGNsYXNzPSdURVNUJz48L3A+IjtpZighYi5xdWVyeVNlbGVjdG9yQWxsfHxiLnF1ZXJ5U2VsZWN0b3JBbGwoIi5URVNUIikubGVuZ3RoIT09MCl7bT1mdW5jdGlvbihiLGUsZixnKXtlPWV8fGM7aWYoIWcmJiFtLmlzWE1MKGUpKXt2YXIgaD0vXihcdyskKXxeXC4oW1x3XC1dKyQpfF4jKFtcd1wtXSskKS8uZXhlYyhiKTtpZihoJiYoZS5ub2RlVHlwZT09PTF8fGUubm9kZVR5cGU9PT05KSl7aWYoaFsxXSlyZXR1cm4gcyhlLmdldEVsZW1lbnRzQnlUYWdOYW1lKGIpLGYpO2lmKGhbMl0mJm8uZmluZC5DTEFTUyYmZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXJldHVybiBzKGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShoWzJdKSxmKX1pZihlLm5vZGVUeXBlPT09OSl7aWYoYj09PSJib2R5IiYmZS5ib2R5KXJldHVybiBzKFtlLmJvZHldLGYpO2lmKGgmJmhbM10pe3ZhciBpPWUuZ2V0RWxlbWVudEJ5SWQoaFszXSk7aWYoIWl8fCFpLnBhcmVudE5vZGUpcmV0dXJuIHMoW10sZik7aWYoaS5pZD09PWhbM10pcmV0dXJuIHMoW2ldLGYpfXRyeXtyZXR1cm4gcyhlLnF1ZXJ5U2VsZWN0b3JBbGwoYiksZil9Y2F0Y2goail7fX1lbHNlIGlmKGUubm9kZVR5cGU9PT0xJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPT0ib2JqZWN0Iil7dmFyIGs9ZSxsPWUuZ2V0QXR0cmlidXRlKCJpZCIpLG49bHx8ZCxwPWUucGFyZW50Tm9kZSxxPS9eXHMqWyt+XS8udGVzdChiKTtsP249bi5yZXBsYWNlKC8nL2csIlxcJCYiKTplLnNldEF0dHJpYnV0ZSgiaWQiLG4pLHEmJnAmJihlPWUucGFyZW50Tm9kZSk7dHJ5e2lmKCFxfHxwKXJldHVybiBzKGUucXVlcnlTZWxlY3RvckFsbCgiW2lkPSciK24rIiddICIrYiksZil9Y2F0Y2gocil7fWZpbmFsbHl7bHx8ay5yZW1vdmVBdHRyaWJ1dGUoImlkIil9fX1yZXR1cm4gYShiLGUsZixnKX07Zm9yKHZhciBlIGluIGEpbVtlXT1hW2VdO2I9bnVsbH19KCksZnVuY3Rpb24oKXt2YXIgYT1jLmRvY3VtZW50RWxlbWVudCxiPWEubWF0Y2hlc1NlbGVjdG9yfHxhLm1vek1hdGNoZXNTZWxlY3Rvcnx8YS53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fGEubXNNYXRjaGVzU2VsZWN0b3I7aWYoYil7dmFyIGQ9IWIuY2FsbChjLmNyZWF0ZUVsZW1lbnQoImRpdiIpLCJkaXYiKSxlPSExO3RyeXtiLmNhbGwoYy5kb2N1bWVudEVsZW1lbnQsIlt0ZXN0IT0nJ106c2l6emxlIil9Y2F0Y2goZil7ZT0hMH1tLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihhLGMpe2M9Yy5yZXBsYWNlKC9cPVxzKihbXiciXF1dKilccypcXS9nLCI9JyQxJ10iKTtpZighbS5pc1hNTChhKSl0cnl7aWYoZXx8IW8ubWF0Y2guUFNFVURPLnRlc3QoYykmJiEvIT0vLnRlc3QoYykpe3ZhciBmPWIuY2FsbChhLGMpO2lmKGZ8fCFkfHxhLmRvY3VtZW50JiZhLmRvY3VtZW50Lm5vZGVUeXBlIT09MTEpcmV0dXJuIGZ9fWNhdGNoKGcpe31yZXR1cm4gbShjLG51bGwsbnVsbCxbYV0pLmxlbmd0aD4wfX19KCksZnVuY3Rpb24oKXt2YXIgYT1jLmNyZWF0ZUVsZW1lbnQoImRpdiIpO2EuaW5uZXJIVE1MPSI8ZGl2IGNsYXNzPSd0ZXN0IGUnPjwvZGl2PjxkaXYgY2xhc3M9J3Rlc3QnPjwvZGl2PiI7aWYoISFhLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmEuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZSIpLmxlbmd0aCE9PTApe2EubGFzdENoaWxkLmNsYXNzTmFtZT0iZSI7aWYoYS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJlIikubGVuZ3RoPT09MSlyZXR1cm47by5vcmRlci5zcGxpY2UoMSwwLCJDTEFTUyIpLG8uZmluZC5DTEFTUz1mdW5jdGlvbihhLGIsYyl7aWYodHlwZW9mIGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSE9InVuZGVmaW5lZCImJiFjKXJldHVybiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYVsxXSl9LGE9bnVsbH19KCksYy5kb2N1bWVudEVsZW1lbnQuY29udGFpbnM/bS5jb250YWlucz1mdW5jdGlvbihhLGIpe3JldHVybiBhIT09YiYmKGEuY29udGFpbnM/YS5jb250YWlucyhiKTohMCl9OmMuZG9jdW1lbnRFbGVtZW50LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uP20uY29udGFpbnM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KX06bS5jb250YWlucz1mdW5jdGlvbigpe3JldHVybiExfSxtLmlzWE1MPWZ1bmN0aW9uKGEpe3ZhciBiPShhP2Eub3duZXJEb2N1bWVudHx8YTowKS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGI/Yi5ub2RlTmFtZSE9PSJIVE1MIjohMX07dmFyIHk9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGU9W10sZj0iIixnPWIubm9kZVR5cGU/W2JdOmI7d2hpbGUoZD1vLm1hdGNoLlBTRVVETy5leGVjKGEpKWYrPWRbMF0sYT1hLnJlcGxhY2Uoby5tYXRjaC5QU0VVRE8sIiIpO2E9by5yZWxhdGl2ZVthXT9hKyIqIjphO2Zvcih2YXIgaD0wLGk9Zy5sZW5ndGg7aDxpO2grKyltKGEsZ1toXSxlLGMpO3JldHVybiBtLmZpbHRlcihmLGUpfTttLmF0dHI9Zi5hdHRyLG0uc2VsZWN0b3JzLmF0dHJNYXA9e30sZi5maW5kPW0sZi5leHByPW0uc2VsZWN0b3JzLGYuZXhwclsiOiJdPWYuZXhwci5maWx0ZXJzLGYudW5pcXVlPW0udW5pcXVlU29ydCxmLnRleHQ9bS5nZXRUZXh0LGYuaXNYTUxEb2M9bS5pc1hNTCxmLmNvbnRhaW5zPW0uY29udGFpbnN9KCk7dmFyIE89L1VudGlsJC8sUD0vXig/OnBhcmVudHN8cHJldlVudGlsfHByZXZBbGwpLyxRPS8sLyxSPS9eLlteOiNcW1wuLF0qJC8sUz1BcnJheS5wcm90b3R5cGUuc2xpY2UsVD1mLmV4cHIubWF0Y2guUE9TLFU9e2NoaWxkcmVuOiEwLGNvbnRlbnRzOiEwLG5leHQ6ITAscHJldjohMH07Zi5mbi5leHRlbmQoe2ZpbmQ6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjLGQ7aWYodHlwZW9mIGEhPSJzdHJpbmciKXJldHVybiBmKGEpLmZpbHRlcihmdW5jdGlvbigpe2ZvcihjPTAsZD1iLmxlbmd0aDtjPGQ7YysrKWlmKGYuY29udGFpbnMoYltjXSx0aGlzKSlyZXR1cm4hMH0pO3ZhciBlPXRoaXMucHVzaFN0YWNrKCIiLCJmaW5kIixhKSxnLGgsaTtmb3IoYz0wLGQ9dGhpcy5sZW5ndGg7YzxkO2MrKyl7Zz1lLmxlbmd0aCxmLmZpbmQoYSx0aGlzW2NdLGUpO2lmKGM+MClmb3IoaD1nO2g8ZS5sZW5ndGg7aCsrKWZvcihpPTA7aTxnO2krKylpZihlW2ldPT09ZVtoXSl7ZS5zcGxpY2UoaC0tLDEpO2JyZWFrfX1yZXR1cm4gZX0saGFzOmZ1bmN0aW9uKGEpe3ZhciBiPWYoYSk7cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKHZhciBhPTAsYz1iLmxlbmd0aDthPGM7YSsrKWlmKGYuY29udGFpbnModGhpcyxiW2FdKSlyZXR1cm4hMH0pfSxub3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFcodGhpcyxhLCExKSwibm90IixhKX0sZmlsdGVyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhXKHRoaXMsYSwhMCksImZpbHRlciIsYSl9LGlzOmZ1bmN0aW9uKGEpe3JldHVybiEhYSYmKHR5cGVvZiBhPT0ic3RyaW5nIj9ULnRlc3QoYSk/ZihhLHRoaXMuY29udGV4dCkuaW5kZXgodGhpc1swXSk+PTA6Zi5maWx0ZXIoYSx0aGlzKS5sZW5ndGg+MDp0aGlzLmZpbHRlcihhKS5sZW5ndGg+MCl9LGNsb3Nlc3Q6ZnVuY3Rpb24oYSxiKXt2YXIgYz1bXSxkLGUsZz10aGlzWzBdO2lmKGYuaXNBcnJheShhKSl7dmFyIGg9MTt3aGlsZShnJiZnLm93bmVyRG9jdW1lbnQmJmchPT1iKXtmb3IoZD0wO2Q8YS5sZW5ndGg7ZCsrKWYoZykuaXMoYVtkXSkmJmMucHVzaCh7c2VsZWN0b3I6YVtkXSxlbGVtOmcsbGV2ZWw6aH0pO2c9Zy5wYXJlbnROb2RlLGgrK31yZXR1cm4gY312YXIgaT1ULnRlc3QoYSl8fHR5cGVvZiBhIT0ic3RyaW5nIj9mKGEsYnx8dGhpcy5jb250ZXh0KTowO2ZvcihkPTAsZT10aGlzLmxlbmd0aDtkPGU7ZCsrKXtnPXRoaXNbZF07d2hpbGUoZyl7aWYoaT9pLmluZGV4KGcpPi0xOmYuZmluZC5tYXRjaGVzU2VsZWN0b3IoZyxhKSl7Yy5wdXNoKGcpO2JyZWFrfWc9Zy5wYXJlbnROb2RlO2lmKCFnfHwhZy5vd25lckRvY3VtZW50fHxnPT09Ynx8Zy5ub2RlVHlwZT09PTExKWJyZWFrfX1jPWMubGVuZ3RoPjE/Zi51bmlxdWUoYyk6YztyZXR1cm4gdGhpcy5wdXNoU3RhY2soYywiY2xvc2VzdCIsYSl9LGluZGV4OmZ1bmN0aW9uKGEpe2lmKCFhKXJldHVybiB0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGU/dGhpcy5wcmV2QWxsKCkubGVuZ3RoOi0xO2lmKHR5cGVvZiBhPT0ic3RyaW5nIilyZXR1cm4gZi5pbkFycmF5KHRoaXNbMF0sZihhKSk7cmV0dXJuIGYuaW5BcnJheShhLmpxdWVyeT9hWzBdOmEsdGhpcyl9LGFkZDpmdW5jdGlvbihhLGIpe3ZhciBjPXR5cGVvZiBhPT0ic3RyaW5nIj9mKGEsYik6Zi5tYWtlQXJyYXkoYSYmYS5ub2RlVHlwZT9bYV06YSksZD1mLm1lcmdlKHRoaXMuZ2V0KCksYyk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFYoY1swXSl8fFYoZFswXSk/ZDpmLnVuaXF1ZShkKSl9LGFuZFNlbGY6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hZGQodGhpcy5wcmV2T2JqZWN0KX19KSxmLmVhY2goe3BhcmVudDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJmIubm9kZVR5cGUhPT0xMT9iOm51bGx9LHBhcmVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGYuZGlyKGEsInBhcmVudE5vZGUiKX0scGFyZW50c1VudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZi5kaXIoYSwicGFyZW50Tm9kZSIsYyl9LG5leHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGYubnRoKGEsMiwibmV4dFNpYmxpbmciKX0scHJldjpmdW5jdGlvbihhKXtyZXR1cm4gZi5udGgoYSwyLCJwcmV2aW91c1NpYmxpbmciKX0sbmV4dEFsbDpmdW5jdGlvbihhKXtyZXR1cm4gZi5kaXIoYSwibmV4dFNpYmxpbmciKX0scHJldkFsbDpmdW5jdGlvbihhKXtyZXR1cm4gZi5kaXIoYSwicHJldmlvdXNTaWJsaW5nIil9LG5leHRVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGYuZGlyKGEsIm5leHRTaWJsaW5nIixjKX0scHJldlVudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZi5kaXIoYSwicHJldmlvdXNTaWJsaW5nIixjKX0sc2libGluZ3M6ZnVuY3Rpb24oYSl7cmV0dXJuIGYuc2libGluZyhhLnBhcmVudE5vZGUuZmlyc3RDaGlsZCxhKX0sY2hpbGRyZW46ZnVuY3Rpb24oYSl7cmV0dXJuIGYuc2libGluZyhhLmZpcnN0Q2hpbGQpfSxjb250ZW50czpmdW5jdGlvbihhKXtyZXR1cm4gZi5ub2RlTmFtZShhLCJpZnJhbWUiKT9hLmNvbnRlbnREb2N1bWVudHx8YS5jb250ZW50V2luZG93LmRvY3VtZW50OmYubWFrZUFycmF5KGEuY2hpbGROb2Rlcyl9fSxmdW5jdGlvbihhLGIpe2YuZm5bYV09ZnVuY3Rpb24oYyxkKXt2YXIgZT1mLm1hcCh0aGlzLGIsYyksZz1TLmNhbGwoYXJndW1lbnRzKTtPLnRlc3QoYSl8fChkPWMpLGQmJnR5cGVvZiBkPT0ic3RyaW5nIiYmKGU9Zi5maWx0ZXIoZCxlKSksZT10aGlzLmxlbmd0aD4xJiYhVVthXT9mLnVuaXF1ZShlKTplLCh0aGlzLmxlbmd0aD4xfHxRLnRlc3QoZCkpJiZQLnRlc3QoYSkmJihlPWUucmV2ZXJzZSgpKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soZSxhLGcuam9pbigiLCIpKX19KSxmLmV4dGVuZCh7ZmlsdGVyOmZ1bmN0aW9uKGEsYixjKXtjJiYoYT0iOm5vdCgiK2ErIikiKTtyZXR1cm4gYi5sZW5ndGg9PT0xP2YuZmluZC5tYXRjaGVzU2VsZWN0b3IoYlswXSxhKT9bYlswXV06W106Zi5maW5kLm1hdGNoZXMoYSxiKX0sZGlyOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZT1bXSxnPWFbY107d2hpbGUoZyYmZy5ub2RlVHlwZSE9PTkmJihkPT09Ynx8Zy5ub2RlVHlwZSE9PTF8fCFmKGcpLmlzKGQpKSlnLm5vZGVUeXBlPT09MSYmZS5wdXNoKGcpLGc9Z1tjXTtyZXR1cm4gZX0sbnRoOmZ1bmN0aW9uKGEsYixjLGQpe2I9Ynx8MTt2YXIgZT0wO2Zvcig7YTthPWFbY10paWYoYS5ub2RlVHlwZT09PTEmJisrZT09PWIpYnJlYWs7cmV0dXJuIGF9LHNpYmxpbmc6ZnVuY3Rpb24oYSxiKXt2YXIgYz1bXTtmb3IoO2E7YT1hLm5leHRTaWJsaW5nKWEubm9kZVR5cGU9PT0xJiZhIT09YiYmYy5wdXNoKGEpO3JldHVybiBjfX0pO3ZhciBZPSJhYmJyIGFydGljbGUgYXNpZGUgYXVkaW8gY2FudmFzIGRhdGFsaXN0IGRldGFpbHMgZmlnY2FwdGlvbiBmaWd1cmUgZm9vdGVyIGhlYWRlciBoZ3JvdXAgbWFyayBtZXRlciBuYXYgb3V0cHV0IHByb2dyZXNzIHNlY3Rpb24gc3VtbWFyeSB0aW1lIHZpZGVvIixaPS8galF1ZXJ5XGQrPSIoPzpcZCt8bnVsbCkiL2csJD0vXlxzKy8sXz0vPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXHc6XSspW14+XSopXC8+L2lnLGJhPS88KFtcdzpdKykvLGJiPS88dGJvZHkvaSxiYz0vPHwmIz9cdys7LyxiZD0vPCg/OnNjcmlwdHxzdHlsZSkvaSxiZT0vPCg/OnNjcmlwdHxvYmplY3R8ZW1iZWR8b3B0aW9ufHN0eWxlKS9pLGJmPW5ldyBSZWdFeHAoIjwoPzoiK1kucmVwbGFjZSgiICIsInwiKSsiKSIsImkiKSxiZz0vY2hlY2tlZFxzKig/OltePV18PVxzKi5jaGVja2VkLikvaSxiaD0vXC8oamF2YXxlY21hKXNjcmlwdC9pLGJpPS9eXHMqPCEoPzpcW0NEQVRBXFt8XC1cLSkvLGJqPXtvcHRpb246WzEsIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz4iLCI8L3NlbGVjdD4iXSxsZWdlbmQ6WzEsIjxmaWVsZHNldD4iLCI8L2ZpZWxkc2V0PiJdLHRoZWFkOlsxLCI8dGFibGU+IiwiPC90YWJsZT4iXSx0cjpbMiwiPHRhYmxlPjx0Ym9keT4iLCI8L3Rib2R5PjwvdGFibGU+Il0sdGQ6WzMsIjx0YWJsZT48dGJvZHk+PHRyPiIsIjwvdHI+PC90Ym9keT48L3RhYmxlPiJdLGNvbDpbMiwiPHRhYmxlPjx0Ym9keT48L3Rib2R5Pjxjb2xncm91cD4iLCI8L2NvbGdyb3VwPjwvdGFibGU+Il0sYXJlYTpbMSwiPG1hcD4iLCI8L21hcD4iXSxfZGVmYXVsdDpbMCwiIiwiIl19LGJrPVgoYyk7Ymoub3B0Z3JvdXA9Ymoub3B0aW9uLGJqLnRib2R5PWJqLnRmb290PWJqLmNvbGdyb3VwPWJqLmNhcHRpb249YmoudGhlYWQsYmoudGg9YmoudGQsZi5zdXBwb3J0Lmh0bWxTZXJpYWxpemV8fChiai5fZGVmYXVsdD1bMSwiZGl2PGRpdj4iLCI8L2Rpdj4iXSksZi5mbi5leHRlbmQoe3RleHQ6ZnVuY3Rpb24oYSl7aWYoZi5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7dmFyIGM9Zih0aGlzKTtjLnRleHQoYS5jYWxsKHRoaXMsYixjLnRleHQoKSkpfSk7aWYodHlwZW9mIGEhPSJvYmplY3QiJiZhIT09YilyZXR1cm4gdGhpcy5lbXB0eSgpLmFwcGVuZCgodGhpc1swXSYmdGhpc1swXS5vd25lckRvY3VtZW50fHxjKS5jcmVhdGVUZXh0Tm9kZShhKSk7cmV0dXJuIGYudGV4dCh0aGlzKX0sd3JhcEFsbDpmdW5jdGlvbihhKXtpZihmLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtmKHRoaXMpLndyYXBBbGwoYS5jYWxsKHRoaXMsYikpfSk7aWYodGhpc1swXSl7dmFyIGI9ZihhLHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCkuY2xvbmUoITApO3RoaXNbMF0ucGFyZW50Tm9kZSYmYi5pbnNlcnRCZWZvcmUodGhpc1swXSksYi5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzO3doaWxlKGEuZmlyc3RDaGlsZCYmYS5maXJzdENoaWxkLm5vZGVUeXBlPT09MSlhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX0pLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKGEpe2lmKGYuaXNGdW5jdGlvbihhKSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGIpe2YodGhpcykud3JhcElubmVyKGEuY2FsbCh0aGlzLGIpKX0pO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1mKHRoaXMpLGM9Yi5jb250ZW50cygpO2MubGVuZ3RoP2Mud3JhcEFsbChhKTpiLmFwcGVuZChhKX0pfSx3cmFwOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtmKHRoaXMpLndyYXBBbGwoYSl9KX0sdW53cmFwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChmdW5jdGlvbigpe2Yubm9kZU5hbWUodGhpcywiYm9keSIpfHxmKHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KS5lbmQoKX0sYXBwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCEwLGZ1bmN0aW9uKGEpe3RoaXMubm9kZVR5cGU9PT0xJiZ0aGlzLmFwcGVuZENoaWxkKGEpfSl9LHByZXBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsITAsZnVuY3Rpb24oYSl7dGhpcy5ub2RlVHlwZT09PTEmJnRoaXMuaW5zZXJ0QmVmb3JlKGEsdGhpcy5maXJzdENoaWxkKX0pfSxiZWZvcmU6ZnVuY3Rpb24oKXtpZih0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGUpcmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCExLGZ1bmN0aW9uKGEpe3RoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzKX0pO2lmKGFyZ3VtZW50cy5sZW5ndGgpe3ZhciBhPWYoYXJndW1lbnRzWzBdKTthLnB1c2guYXBwbHkoYSx0aGlzLnRvQXJyYXkoKSk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGEsImJlZm9yZSIsYXJndW1lbnRzKX19LGFmdGVyOmZ1bmN0aW9uKCl7aWYodGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlKXJldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cywhMSxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcy5uZXh0U2libGluZyl9KTtpZihhcmd1bWVudHMubGVuZ3RoKXt2YXIgYT10aGlzLnB1c2hTdGFjayh0aGlzLCJhZnRlciIKLGFyZ3VtZW50cyk7YS5wdXNoLmFwcGx5KGEsZihhcmd1bWVudHNbMF0pLnRvQXJyYXkoKSk7cmV0dXJuIGF9fSxyZW1vdmU6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkOyhkPXRoaXNbY10pIT1udWxsO2MrKylpZighYXx8Zi5maWx0ZXIoYSxbZF0pLmxlbmd0aCkhYiYmZC5ub2RlVHlwZT09PTEmJihmLmNsZWFuRGF0YShkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikpLGYuY2xlYW5EYXRhKFtkXSkpLGQucGFyZW50Tm9kZSYmZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpO3JldHVybiB0aGlzfSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgYT0wLGI7KGI9dGhpc1thXSkhPW51bGw7YSsrKXtiLm5vZGVUeXBlPT09MSYmZi5jbGVhbkRhdGEoYi5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpKTt3aGlsZShiLmZpcnN0Q2hpbGQpYi5yZW1vdmVDaGlsZChiLmZpcnN0Q2hpbGQpfXJldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbihhLGIpe2E9YT09bnVsbD8hMTphLGI9Yj09bnVsbD9hOmI7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGYuY2xvbmUodGhpcyxhLGIpfSl9LGh0bWw6ZnVuY3Rpb24oYSl7aWYoYT09PWIpcmV0dXJuIHRoaXNbMF0mJnRoaXNbMF0ubm9kZVR5cGU9PT0xP3RoaXNbMF0uaW5uZXJIVE1MLnJlcGxhY2UoWiwiIik6bnVsbDtpZih0eXBlb2YgYT09InN0cmluZyImJiFiZC50ZXN0KGEpJiYoZi5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlfHwhJC50ZXN0KGEpKSYmIWJqWyhiYS5leGVjKGEpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7YT1hLnJlcGxhY2UoXywiPCQxPjwvJDI+Iik7dHJ5e2Zvcih2YXIgYz0wLGQ9dGhpcy5sZW5ndGg7YzxkO2MrKyl0aGlzW2NdLm5vZGVUeXBlPT09MSYmKGYuY2xlYW5EYXRhKHRoaXNbY10uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSksdGhpc1tjXS5pbm5lckhUTUw9YSl9Y2F0Y2goZSl7dGhpcy5lbXB0eSgpLmFwcGVuZChhKX19ZWxzZSBmLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGIpe3ZhciBjPWYodGhpcyk7Yy5odG1sKGEuY2FsbCh0aGlzLGIsYy5odG1sKCkpKX0pOnRoaXMuZW1wdHkoKS5hcHBlbmQoYSk7cmV0dXJuIHRoaXN9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKGEpe2lmKHRoaXNbMF0mJnRoaXNbMF0ucGFyZW50Tm9kZSl7aWYoZi5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7dmFyIGM9Zih0aGlzKSxkPWMuaHRtbCgpO2MucmVwbGFjZVdpdGgoYS5jYWxsKHRoaXMsYixkKSl9KTt0eXBlb2YgYSE9InN0cmluZyImJihhPWYoYSkuZGV0YWNoKCkpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj10aGlzLm5leHRTaWJsaW5nLGM9dGhpcy5wYXJlbnROb2RlO2YodGhpcykucmVtb3ZlKCksYj9mKGIpLmJlZm9yZShhKTpmKGMpLmFwcGVuZChhKX0pfXJldHVybiB0aGlzLmxlbmd0aD90aGlzLnB1c2hTdGFjayhmKGYuaXNGdW5jdGlvbihhKT9hKCk6YSksInJlcGxhY2VXaXRoIixhKTp0aGlzfSxkZXRhY2g6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucmVtb3ZlKGEsITApfSxkb21NYW5pcDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZyxoLGksaj1hWzBdLGs9W107aWYoIWYuc3VwcG9ydC5jaGVja0Nsb25lJiZhcmd1bWVudHMubGVuZ3RoPT09MyYmdHlwZW9mIGo9PSJzdHJpbmciJiZiZy50ZXN0KGopKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtmKHRoaXMpLmRvbU1hbmlwKGEsYyxkLCEwKX0pO2lmKGYuaXNGdW5jdGlvbihqKSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBnPWYodGhpcyk7YVswXT1qLmNhbGwodGhpcyxlLGM/Zy5odG1sKCk6YiksZy5kb21NYW5pcChhLGMsZCl9KTtpZih0aGlzWzBdKXtpPWomJmoucGFyZW50Tm9kZSxmLnN1cHBvcnQucGFyZW50Tm9kZSYmaSYmaS5ub2RlVHlwZT09PTExJiZpLmNoaWxkTm9kZXMubGVuZ3RoPT09dGhpcy5sZW5ndGg/ZT17ZnJhZ21lbnQ6aX06ZT1mLmJ1aWxkRnJhZ21lbnQoYSx0aGlzLGspLGg9ZS5mcmFnbWVudCxoLmNoaWxkTm9kZXMubGVuZ3RoPT09MT9nPWg9aC5maXJzdENoaWxkOmc9aC5maXJzdENoaWxkO2lmKGcpe2M9YyYmZi5ub2RlTmFtZShnLCJ0ciIpO2Zvcih2YXIgbD0wLG09dGhpcy5sZW5ndGgsbj1tLTE7bDxtO2wrKylkLmNhbGwoYz9ibCh0aGlzW2xdLGcpOnRoaXNbbF0sZS5jYWNoZWFibGV8fG0+MSYmbDxuP2YuY2xvbmUoaCwhMCwhMCk6aCl9ay5sZW5ndGgmJmYuZWFjaChrLGJyKX1yZXR1cm4gdGhpc319KSxmLmJ1aWxkRnJhZ21lbnQ9ZnVuY3Rpb24oYSxiLGQpe3ZhciBlLGcsaCxpLGo9YVswXTtiJiZiWzBdJiYoaT1iWzBdLm93bmVyRG9jdW1lbnR8fGJbMF0pLGkuY3JlYXRlRG9jdW1lbnRGcmFnbWVudHx8KGk9YyksYS5sZW5ndGg9PT0xJiZ0eXBlb2Ygaj09InN0cmluZyImJmoubGVuZ3RoPDUxMiYmaT09PWMmJmouY2hhckF0KDApPT09IjwiJiYhYmUudGVzdChqKSYmKGYuc3VwcG9ydC5jaGVja0Nsb25lfHwhYmcudGVzdChqKSkmJiFmLnN1cHBvcnQudW5rbm93bkVsZW1zJiZiZi50ZXN0KGopJiYoZz0hMCxoPWYuZnJhZ21lbnRzW2pdLGgmJmghPT0xJiYoZT1oKSksZXx8KGU9aS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksZi5jbGVhbihhLGksZSxkKSksZyYmKGYuZnJhZ21lbnRzW2pdPWg/ZToxKTtyZXR1cm57ZnJhZ21lbnQ6ZSxjYWNoZWFibGU6Z319LGYuZnJhZ21lbnRzPXt9LGYuZWFjaCh7YXBwZW5kVG86ImFwcGVuZCIscHJlcGVuZFRvOiJwcmVwZW5kIixpbnNlcnRCZWZvcmU6ImJlZm9yZSIsaW5zZXJ0QWZ0ZXI6ImFmdGVyIixyZXBsYWNlQWxsOiJyZXBsYWNlV2l0aCJ9LGZ1bmN0aW9uKGEsYil7Zi5mblthXT1mdW5jdGlvbihjKXt2YXIgZD1bXSxlPWYoYyksZz10aGlzLmxlbmd0aD09PTEmJnRoaXNbMF0ucGFyZW50Tm9kZTtpZihnJiZnLm5vZGVUeXBlPT09MTEmJmcuY2hpbGROb2Rlcy5sZW5ndGg9PT0xJiZlLmxlbmd0aD09PTEpe2VbYl0odGhpc1swXSk7cmV0dXJuIHRoaXN9Zm9yKHZhciBoPTAsaT1lLmxlbmd0aDtoPGk7aCsrKXt2YXIgaj0oaD4wP3RoaXMuY2xvbmUoITApOnRoaXMpLmdldCgpO2YoZVtoXSlbYl0oaiksZD1kLmNvbmNhdChqKX1yZXR1cm4gdGhpcy5wdXNoU3RhY2soZCxhLGUuc2VsZWN0b3IpfX0pLGYuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9YS5jbG9uZU5vZGUoITApLGUsZyxoO2lmKCghZi5zdXBwb3J0Lm5vQ2xvbmVFdmVudHx8IWYuc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCkmJihhLm5vZGVUeXBlPT09MXx8YS5ub2RlVHlwZT09PTExKSYmIWYuaXNYTUxEb2MoYSkpe2JuKGEsZCksZT1ibyhhKSxnPWJvKGQpO2ZvcihoPTA7ZVtoXTsrK2gpZ1toXSYmYm4oZVtoXSxnW2hdKX1pZihiKXtibShhLGQpO2lmKGMpe2U9Ym8oYSksZz1ibyhkKTtmb3IoaD0wO2VbaF07KytoKWJtKGVbaF0sZ1toXSl9fWU9Zz1udWxsO3JldHVybiBkfSxjbGVhbjpmdW5jdGlvbihhLGIsZCxlKXt2YXIgZztiPWJ8fGMsdHlwZW9mIGIuY3JlYXRlRWxlbWVudD09InVuZGVmaW5lZCImJihiPWIub3duZXJEb2N1bWVudHx8YlswXSYmYlswXS5vd25lckRvY3VtZW50fHxjKTt2YXIgaD1bXSxpO2Zvcih2YXIgaj0wLGs7KGs9YVtqXSkhPW51bGw7aisrKXt0eXBlb2Ygaz09Im51bWJlciImJihrKz0iIik7aWYoIWspY29udGludWU7aWYodHlwZW9mIGs9PSJzdHJpbmciKWlmKCFiYy50ZXN0KGspKWs9Yi5jcmVhdGVUZXh0Tm9kZShrKTtlbHNle2s9ay5yZXBsYWNlKF8sIjwkMT48LyQyPiIpO3ZhciBsPShiYS5leGVjKGspfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpLG09YmpbbF18fGJqLl9kZWZhdWx0LG49bVswXSxvPWIuY3JlYXRlRWxlbWVudCgiZGl2Iik7Yj09PWM/YmsuYXBwZW5kQ2hpbGQobyk6WChiKS5hcHBlbmRDaGlsZChvKSxvLmlubmVySFRNTD1tWzFdK2srbVsyXTt3aGlsZShuLS0pbz1vLmxhc3RDaGlsZDtpZighZi5zdXBwb3J0LnRib2R5KXt2YXIgcD1iYi50ZXN0KGspLHE9bD09PSJ0YWJsZSImJiFwP28uZmlyc3RDaGlsZCYmby5maXJzdENoaWxkLmNoaWxkTm9kZXM6bVsxXT09PSI8dGFibGU+IiYmIXA/by5jaGlsZE5vZGVzOltdO2ZvcihpPXEubGVuZ3RoLTE7aT49MDstLWkpZi5ub2RlTmFtZShxW2ldLCJ0Ym9keSIpJiYhcVtpXS5jaGlsZE5vZGVzLmxlbmd0aCYmcVtpXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHFbaV0pfSFmLnN1cHBvcnQubGVhZGluZ1doaXRlc3BhY2UmJiQudGVzdChrKSYmby5pbnNlcnRCZWZvcmUoYi5jcmVhdGVUZXh0Tm9kZSgkLmV4ZWMoaylbMF0pLG8uZmlyc3RDaGlsZCksaz1vLmNoaWxkTm9kZXN9dmFyIHI7aWYoIWYuc3VwcG9ydC5hcHBlbmRDaGVja2VkKWlmKGtbMF0mJnR5cGVvZiAocj1rLmxlbmd0aCk9PSJudW1iZXIiKWZvcihpPTA7aTxyO2krKylicShrW2ldKTtlbHNlIGJxKGspO2subm9kZVR5cGU/aC5wdXNoKGspOmg9Zi5tZXJnZShoLGspfWlmKGQpe2c9ZnVuY3Rpb24oYSl7cmV0dXJuIWEudHlwZXx8YmgudGVzdChhLnR5cGUpfTtmb3Ioaj0wO2hbal07aisrKWlmKGUmJmYubm9kZU5hbWUoaFtqXSwic2NyaXB0IikmJighaFtqXS50eXBlfHxoW2pdLnR5cGUudG9Mb3dlckNhc2UoKT09PSJ0ZXh0L2phdmFzY3JpcHQiKSllLnB1c2goaFtqXS5wYXJlbnROb2RlP2hbal0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoW2pdKTpoW2pdKTtlbHNle2lmKGhbal0ubm9kZVR5cGU9PT0xKXt2YXIgcz1mLmdyZXAoaFtqXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IiksZyk7aC5zcGxpY2UuYXBwbHkoaCxbaisxLDBdLmNvbmNhdChzKSl9ZC5hcHBlbmRDaGlsZChoW2pdKX19cmV0dXJuIGh9LGNsZWFuRGF0YTpmdW5jdGlvbihhKXt2YXIgYixjLGQ9Zi5jYWNoZSxlPWYuZXZlbnQuc3BlY2lhbCxnPWYuc3VwcG9ydC5kZWxldGVFeHBhbmRvO2Zvcih2YXIgaD0wLGk7KGk9YVtoXSkhPW51bGw7aCsrKXtpZihpLm5vZGVOYW1lJiZmLm5vRGF0YVtpLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldKWNvbnRpbnVlO2M9aVtmLmV4cGFuZG9dO2lmKGMpe2I9ZFtjXTtpZihiJiZiLmV2ZW50cyl7Zm9yKHZhciBqIGluIGIuZXZlbnRzKWVbal0/Zi5ldmVudC5yZW1vdmUoaSxqKTpmLnJlbW92ZUV2ZW50KGksaixiLmhhbmRsZSk7Yi5oYW5kbGUmJihiLmhhbmRsZS5lbGVtPW51bGwpfWc/ZGVsZXRlIGlbZi5leHBhbmRvXTppLnJlbW92ZUF0dHJpYnV0ZSYmaS5yZW1vdmVBdHRyaWJ1dGUoZi5leHBhbmRvKSxkZWxldGUgZFtjXX19fX0pO3ZhciBicz0vYWxwaGFcKFteKV0qXCkvaSxidD0vb3BhY2l0eT0oW14pXSopLyxidT0vKFtBLVpdfF5tcykvZyxidj0vXi0/XGQrKD86cHgpPyQvaSxidz0vXi0/XGQvLGJ4PS9eKFtcLStdKT0oW1wtKy5cZGVdKykvLGJ5PXtwb3NpdGlvbjoiYWJzb2x1dGUiLHZpc2liaWxpdHk6ImhpZGRlbiIsZGlzcGxheToiYmxvY2sifSxiej1bIkxlZnQiLCJSaWdodCJdLGJBPVsiVG9wIiwiQm90dG9tIl0sYkIsYkMsYkQ7Zi5mbi5jc3M9ZnVuY3Rpb24oYSxjKXtpZihhcmd1bWVudHMubGVuZ3RoPT09MiYmYz09PWIpcmV0dXJuIHRoaXM7cmV0dXJuIGYuYWNjZXNzKHRoaXMsYSxjLCEwLGZ1bmN0aW9uKGEsYyxkKXtyZXR1cm4gZCE9PWI/Zi5zdHlsZShhLGMsZCk6Zi5jc3MoYSxjKX0pfSxmLmV4dGVuZCh7Y3NzSG9va3M6e29wYWNpdHk6e2dldDpmdW5jdGlvbihhLGIpe2lmKGIpe3ZhciBjPWJCKGEsIm9wYWNpdHkiLCJvcGFjaXR5Iik7cmV0dXJuIGM9PT0iIj8iMSI6Y31yZXR1cm4gYS5zdHlsZS5vcGFjaXR5fX19LGNzc051bWJlcjp7ZmlsbE9wYWNpdHk6ITAsZm9udFdlaWdodDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOnsiZmxvYXQiOmYuc3VwcG9ydC5jc3NGbG9hdD8iY3NzRmxvYXQiOiJzdHlsZUZsb2F0In0sc3R5bGU6ZnVuY3Rpb24oYSxjLGQsZSl7aWYoISFhJiZhLm5vZGVUeXBlIT09MyYmYS5ub2RlVHlwZSE9PTgmJiEhYS5zdHlsZSl7dmFyIGcsaCxpPWYuY2FtZWxDYXNlKGMpLGo9YS5zdHlsZSxrPWYuY3NzSG9va3NbaV07Yz1mLmNzc1Byb3BzW2ldfHxpO2lmKGQ9PT1iKXtpZihrJiYiZ2V0ImluIGsmJihnPWsuZ2V0KGEsITEsZSkpIT09YilyZXR1cm4gZztyZXR1cm4galtjXX1oPXR5cGVvZiBkLGg9PT0ic3RyaW5nIiYmKGc9YnguZXhlYyhkKSkmJihkPSsoZ1sxXSsxKSorZ1syXStwYXJzZUZsb2F0KGYuY3NzKGEsYykpLGg9Im51bWJlciIpO2lmKGQ9PW51bGx8fGg9PT0ibnVtYmVyIiYmaXNOYU4oZCkpcmV0dXJuO2g9PT0ibnVtYmVyIiYmIWYuY3NzTnVtYmVyW2ldJiYoZCs9InB4Iik7aWYoIWt8fCEoInNldCJpbiBrKXx8KGQ9ay5zZXQoYSxkKSkhPT1iKXRyeXtqW2NdPWR9Y2F0Y2gobCl7fX19LGNzczpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZztjPWYuY2FtZWxDYXNlKGMpLGc9Zi5jc3NIb29rc1tjXSxjPWYuY3NzUHJvcHNbY118fGMsYz09PSJjc3NGbG9hdCImJihjPSJmbG9hdCIpO2lmKGcmJiJnZXQiaW4gZyYmKGU9Zy5nZXQoYSwhMCxkKSkhPT1iKXJldHVybiBlO2lmKGJCKXJldHVybiBiQihhLGMpfSxzd2FwOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD17fTtmb3IodmFyIGUgaW4gYilkW2VdPWEuc3R5bGVbZV0sYS5zdHlsZVtlXT1iW2VdO2MuY2FsbChhKTtmb3IoZSBpbiBiKWEuc3R5bGVbZV09ZFtlXX19KSxmLmN1ckNTUz1mLmNzcyxmLmVhY2goWyJoZWlnaHQiLCJ3aWR0aCJdLGZ1bmN0aW9uKGEsYil7Zi5jc3NIb29rc1tiXT17Z2V0OmZ1bmN0aW9uKGEsYyxkKXt2YXIgZTtpZihjKXtpZihhLm9mZnNldFdpZHRoIT09MClyZXR1cm4gYkUoYSxiLGQpO2Yuc3dhcChhLGJ5LGZ1bmN0aW9uKCl7ZT1iRShhLGIsZCl9KTtyZXR1cm4gZX19LHNldDpmdW5jdGlvbihhLGIpe2lmKCFidi50ZXN0KGIpKXJldHVybiBiO2I9cGFyc2VGbG9hdChiKTtpZihiPj0wKXJldHVybiBiKyJweCJ9fX0pLGYuc3VwcG9ydC5vcGFjaXR5fHwoZi5jc3NIb29rcy5vcGFjaXR5PXtnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYnQudGVzdCgoYiYmYS5jdXJyZW50U3R5bGU/YS5jdXJyZW50U3R5bGUuZmlsdGVyOmEuc3R5bGUuZmlsdGVyKXx8IiIpP3BhcnNlRmxvYXQoUmVnRXhwLiQxKS8xMDArIiI6Yj8iMSI6IiJ9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjPWEuc3R5bGUsZD1hLmN1cnJlbnRTdHlsZSxlPWYuaXNOdW1lcmljKGIpPyJhbHBoYShvcGFjaXR5PSIrYioxMDArIikiOiIiLGc9ZCYmZC5maWx0ZXJ8fGMuZmlsdGVyfHwiIjtjLnpvb209MTtpZihiPj0xJiZmLnRyaW0oZy5yZXBsYWNlKGJzLCIiKSk9PT0iIil7Yy5yZW1vdmVBdHRyaWJ1dGUoImZpbHRlciIpO2lmKGQmJiFkLmZpbHRlcilyZXR1cm59Yy5maWx0ZXI9YnMudGVzdChnKT9nLnJlcGxhY2UoYnMsZSk6ZysiICIrZX19KSxmKGZ1bmN0aW9uKCl7Zi5zdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHR8fChmLmNzc0hvb2tzLm1hcmdpblJpZ2h0PXtnZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYztmLnN3YXAoYSx7ZGlzcGxheToiaW5saW5lLWJsb2NrIn0sZnVuY3Rpb24oKXtiP2M9YkIoYSwibWFyZ2luLXJpZ2h0IiwibWFyZ2luUmlnaHQiKTpjPWEuc3R5bGUubWFyZ2luUmlnaHR9KTtyZXR1cm4gY319KX0pLGMuZGVmYXVsdFZpZXcmJmMuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSYmKGJDPWZ1bmN0aW9uKGEsYyl7dmFyIGQsZSxnO2M9Yy5yZXBsYWNlKGJ1LCItJDEiKS50b0xvd2VyQ2FzZSgpO2lmKCEoZT1hLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpKXJldHVybiBiO2lmKGc9ZS5nZXRDb21wdXRlZFN0eWxlKGEsbnVsbCkpZD1nLmdldFByb3BlcnR5VmFsdWUoYyksZD09PSIiJiYhZi5jb250YWlucyhhLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGEpJiYoZD1mLnN0eWxlKGEsYykpO3JldHVybiBkfSksYy5kb2N1bWVudEVsZW1lbnQuY3VycmVudFN0eWxlJiYoYkQ9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZj1hLmN1cnJlbnRTdHlsZSYmYS5jdXJyZW50U3R5bGVbYl0sZz1hLnN0eWxlO2Y9PT1udWxsJiZnJiYoZT1nW2JdKSYmKGY9ZSksIWJ2LnRlc3QoZikmJmJ3LnRlc3QoZikmJihjPWcubGVmdCxkPWEucnVudGltZVN0eWxlJiZhLnJ1bnRpbWVTdHlsZS5sZWZ0LGQmJihhLnJ1bnRpbWVTdHlsZS5sZWZ0PWEuY3VycmVudFN0eWxlLmxlZnQpLGcubGVmdD1iPT09ImZvbnRTaXplIj8iMWVtIjpmfHwwLGY9Zy5waXhlbExlZnQrInB4IixnLmxlZnQ9YyxkJiYoYS5ydW50aW1lU3R5bGUubGVmdD1kKSk7cmV0dXJuIGY9PT0iIj8iYXV0byI6Zn0pLGJCPWJDfHxiRCxmLmV4cHImJmYuZXhwci5maWx0ZXJzJiYoZi5leHByLmZpbHRlcnMuaGlkZGVuPWZ1bmN0aW9uKGEpe3ZhciBiPWEub2Zmc2V0V2lkdGgsYz1hLm9mZnNldEhlaWdodDtyZXR1cm4gYj09PTAmJmM9PT0wfHwhZi5zdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyYmKGEuc3R5bGUmJmEuc3R5bGUuZGlzcGxheXx8Zi5jc3MoYSwiZGlzcGxheSIpKT09PSJub25lIn0sZi5leHByLmZpbHRlcnMudmlzaWJsZT1mdW5jdGlvbihhKXtyZXR1cm4hZi5leHByLmZpbHRlcnMuaGlkZGVuKGEpfSk7dmFyIGJGPS8lMjAvZyxiRz0vXFtcXSQvLGJIPS9ccj9cbi9nLGJJPS8jLiokLyxiSj0vXiguKj8pOlsgXHRdKihbXlxyXG5dKilccj8kL21nLGJLPS9eKD86Y29sb3J8ZGF0ZXxkYXRldGltZXxkYXRldGltZS1sb2NhbHxlbWFpbHxoaWRkZW58bW9udGh8bnVtYmVyfHBhc3N3b3JkfHJhbmdlfHNlYXJjaHx0ZWx8dGV4dHx0aW1lfHVybHx3ZWVrKSQvaSxiTD0vXig/OmFib3V0fGFwcHxhcHBcLXN0b3JhZ2V8LitcLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLGJNPS9eKD86R0VUfEhFQUQpJC8sYk49L15cL1wvLyxiTz0vXD8vLGJQPS88c2NyaXB0XGJbXjxdKig/Oig/ITxcL3NjcmlwdD4pPFtePF0qKSo8XC9zY3JpcHQ+L2dpLGJRPS9eKD86c2VsZWN0fHRleHRhcmVhKS9pLGJSPS9ccysvLGJTPS8oWz8mXSlfPVteJl0qLyxiVD0vXihbXHdcK1wuXC1dKzopKD86XC9cLyhbXlwvPyM6XSopKD86OihcZCspKT8pPy8sYlU9Zi5mbi5sb2FkLGJWPXt9LGJXPXt9LGJYLGJZLGJaPVsiKi8iXStbIioiXTt0cnl7Ylg9ZS5ocmVmfWNhdGNoKGIkKXtiWD1jLmNyZWF0ZUVsZW1lbnQoImEiKSxiWC5ocmVmPSIiLGJYPWJYLmhyZWZ9Ylk9YlQuZXhlYyhiWC50b0xvd2VyQ2FzZSgpKXx8W10sZi5mbi5leHRlbmQoe2xvYWQ6ZnVuY3Rpb24oYSxjLGQpe2lmKHR5cGVvZiBhIT0ic3RyaW5nIiYmYlUpcmV0dXJuIGJVLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZighdGhpcy5sZW5ndGgpcmV0dXJuIHRoaXM7dmFyIGU9YS5pbmRleE9mKCIgIik7aWYoZT49MCl7dmFyIGc9YS5zbGljZShlLGEubGVuZ3RoKTthPWEuc2xpY2UoMCxlKX12YXIgaD0iR0VUIjtjJiYoZi5pc0Z1bmN0aW9uKGMpPyhkPWMsYz1iKTp0eXBlb2YgYz09Im9iamVjdCImJihjPWYucGFyYW0oYyxmLmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbCksaD0iUE9TVCIpKTt2YXIgaT10aGlzO2YuYWpheCh7dXJsOmEsdHlwZTpoLGRhdGFUeXBlOiJodG1sIixkYXRhOmMsY29tcGxldGU6ZnVuY3Rpb24oYSxiLGMpe2M9YS5yZXNwb25zZVRleHQsYS5pc1Jlc29sdmVkKCkmJihhLmRvbmUoZnVuY3Rpb24oYSl7Yz1hfSksaS5odG1sKGc/ZigiPGRpdj4iKS5hcHBlbmQoYy5yZXBsYWNlKGJQLCIiKSkuZmluZChnKTpjKSksZCYmaS5lYWNoKGQsW2MsYixhXSl9fSk7cmV0dXJuIHRoaXN9LHNlcmlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiBmLnBhcmFtKHRoaXMuc2VyaWFsaXplQXJyYXkoKSl9LHNlcmlhbGl6ZUFycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudHM/Zi5tYWtlQXJyYXkodGhpcy5lbGVtZW50cyk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWUmJiF0aGlzLmRpc2FibGVkJiYodGhpcy5jaGVja2VkfHxiUS50ZXN0KHRoaXMubm9kZU5hbWUpfHxiSy50ZXN0KHRoaXMudHlwZSkpfSkubWFwKGZ1bmN0aW9uKGEsYil7dmFyIGM9Zih0aGlzKS52YWwoKTtyZXR1cm4gYz09bnVsbD9udWxsOmYuaXNBcnJheShjKT9mLm1hcChjLGZ1bmN0aW9uKGEsYyl7cmV0dXJue25hbWU6Yi5uYW1lLHZhbHVlOmEucmVwbGFjZShiSCwiXHJcbiIpfX0pOntuYW1lOmIubmFtZSx2YWx1ZTpjLnJlcGxhY2UoYkgsIlxyXG4iKX19KS5nZXQoKX19KSxmLmVhY2goImFqYXhTdGFydCBhamF4U3RvcCBhamF4Q29tcGxldGUgYWpheEVycm9yIGFqYXhTdWNjZXNzIGFqYXhTZW5kIi5zcGxpdCgiICIpLGZ1bmN0aW9uKGEsYil7Zi5mbltiXT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5iaW5kKGIsYSl9fSksZi5lYWNoKFsiZ2V0IiwicG9zdCJdLGZ1bmN0aW9uKGEsYyl7ZltjXT1mdW5jdGlvbihhLGQsZSxnKXtmLmlzRnVuY3Rpb24oZCkmJihnPWd8fGUsZT1kLGQ9Yik7cmV0dXJuIGYuYWpheCh7dHlwZTpjLHVybDphLGRhdGE6ZCxzdWNjZXNzOmUsZGF0YVR5cGU6Z30pfX0pLGYuZXh0ZW5kKHtnZXRTY3JpcHQ6ZnVuY3Rpb24oYSxjKXtyZXR1cm4gZi5nZXQoYSxiLGMsInNjcmlwdCIpfSxnZXRKU09OOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZi5nZXQoYSxiLGMsImpzb24iKX0sYWpheFNldHVwOmZ1bmN0aW9uKGEsYil7Yj9jYihhLGYuYWpheFNldHRpbmdzKTooYj1hLGE9Zi5hamF4U2V0dGluZ3MpLGNiKGEsYik7cmV0dXJuIGF9LGFqYXhTZXR0aW5nczp7dXJsOmJYLGlzTG9jYWw6YkwudGVzdChiWVsxXSksZ2xvYmFsOiEwLHR5cGU6IkdFVCIsY29udGVudFR5cGU6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIscHJvY2Vzc0RhdGE6ITAsYXN5bmM6ITAsYWNjZXB0czp7eG1sOiJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sIixodG1sOiJ0ZXh0L2h0bWwiLHRleHQ6InRleHQvcGxhaW4iLGpzb246ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCIsIioiOmJafSxjb250ZW50czp7eG1sOi94bWwvLGh0bWw6L2h0bWwvLGpzb246L2pzb24vfSxyZXNwb25zZUZpZWxkczp7eG1sOiJyZXNwb25zZVhNTCIsdGV4dDoicmVzcG9uc2VUZXh0In0sY29udmVydGVyczp7IiogdGV4dCI6YS5TdHJpbmcsInRleHQgaHRtbCI6ITAsInRleHQganNvbiI6Zi5wYXJzZUpTT04sInRleHQgeG1sIjpmLnBhcnNlWE1MfSxmbGF0T3B0aW9uczp7Y29udGV4dDohMCx1cmw6ITB9fSxhamF4UHJlZmlsdGVyOmJfKGJWKSxhamF4VHJhbnNwb3J0OmJfKGJXKSxhamF4OmZ1bmN0aW9uKGEsYyl7ZnVuY3Rpb24gdyhhLGMsbCxtKXtpZihzIT09Mil7cz0yLHEmJmNsZWFyVGltZW91dChxKSxwPWIsbj1tfHwiIix2LnJlYWR5U3RhdGU9YT4wPzQ6MDt2YXIgbyxyLHUsdz1jLHg9bD9jZChkLHYsbCk6Yix5LHo7aWYoYT49MjAwJiZhPDMwMHx8YT09PTMwNCl7aWYoZC5pZk1vZGlmaWVkKXtpZih5PXYuZ2V0UmVzcG9uc2VIZWFkZXIoIkxhc3QtTW9kaWZpZWQiKSlmLmxhc3RNb2RpZmllZFtrXT15O2lmKHo9di5nZXRSZXNwb25zZUhlYWRlcigiRXRhZyIpKWYuZXRhZ1trXT16fWlmKGE9PT0zMDQpdz0ibm90bW9kaWZpZWQiLG89ITA7ZWxzZSB0cnl7cj1jZShkLHgpLHc9InN1Y2Nlc3MiLG89ITB9Y2F0Y2goQSl7dz0icGFyc2VyZXJyb3IiLHU9QX19ZWxzZXt1PXc7aWYoIXd8fGEpdz0iZXJyb3IiLGE8MCYmKGE9MCl9di5zdGF0dXM9YSx2LnN0YXR1c1RleHQ9IiIrKGN8fHcpLG8/aC5yZXNvbHZlV2l0aChlLFtyLHcsdl0pOmgucmVqZWN0V2l0aChlLFt2LHcsdV0pLHYuc3RhdHVzQ29kZShqKSxqPWIsdCYmZy50cmlnZ2VyKCJhamF4Iisobz8iU3VjY2VzcyI6IkVycm9yIiksW3YsZCxvP3I6dV0pLGkuZmlyZVdpdGgoZSxbdix3XSksdCYmKGcudHJpZ2dlcigiYWpheENvbXBsZXRlIixbdixkXSksLS1mLmFjdGl2ZXx8Zi5ldmVudC50cmlnZ2VyKCJhamF4U3RvcCIpKX19dHlwZW9mIGE9PSJvYmplY3QiJiYoYz1hLGE9YiksYz1jfHx7fTt2YXIgZD1mLmFqYXhTZXR1cCh7fSxjKSxlPWQuY29udGV4dHx8ZCxnPWUhPT1kJiYoZS5ub2RlVHlwZXx8ZSBpbnN0YW5jZW9mIGYpP2YoZSk6Zi5ldmVudCxoPWYuRGVmZXJyZWQoKSxpPWYuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLGo9ZC5zdGF0dXNDb2RlfHx7fSxrLGw9e30sbT17fSxuLG8scCxxLHIscz0wLHQsdSx2PXtyZWFkeVN0YXRlOjAsc2V0UmVxdWVzdEhlYWRlcjpmdW5jdGlvbihhLGIpe2lmKCFzKXt2YXIgYz1hLnRvTG93ZXJDYXNlKCk7YT1tW2NdPW1bY118fGEsbFthXT1ifXJldHVybiB0aGlzfSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gcz09PTI/bjpudWxsfSxnZXRSZXNwb25zZUhlYWRlcjpmdW5jdGlvbihhKXt2YXIgYztpZihzPT09Mil7aWYoIW8pe289e307d2hpbGUoYz1iSi5leGVjKG4pKW9bY1sxXS50b0xvd2VyQ2FzZSgpXT1jWzJdfWM9b1thLnRvTG93ZXJDYXNlKCldfXJldHVybiBjPT09Yj9udWxsOmN9LG92ZXJyaWRlTWltZVR5cGU6ZnVuY3Rpb24oYSl7c3x8KGQubWltZVR5cGU9YSk7cmV0dXJuIHRoaXN9LGFib3J0OmZ1bmN0aW9uKGEpe2E9YXx8ImFib3J0IixwJiZwLmFib3J0KGEpLHcoMCxhKTtyZXR1cm4gdGhpc319O2gucHJvbWlzZSh2KSx2LnN1Y2Nlc3M9di5kb25lLHYuZXJyb3I9di5mYWlsLHYuY29tcGxldGU9aS5hZGQsdi5zdGF0dXNDb2RlPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiO2lmKHM8Milmb3IoYiBpbiBhKWpbYl09W2pbYl0sYVtiXV07ZWxzZSBiPWFbdi5zdGF0dXNdLHYudGhlbihiLGIpfXJldHVybiB0aGlzfSxkLnVybD0oKGF8fGQudXJsKSsiIikucmVwbGFjZShiSSwiIikucmVwbGFjZShiTixiWVsxXSsiLy8iKSxkLmRhdGFUeXBlcz1mLnRyaW0oZC5kYXRhVHlwZXx8IioiKS50b0xvd2VyQ2FzZSgpLnNwbGl0KGJSKSxkLmNyb3NzRG9tYWluPT1udWxsJiYocj1iVC5leGVjKGQudXJsLnRvTG93ZXJDYXNlKCkpLGQuY3Jvc3NEb21haW49ISghcnx8clsxXT09YllbMV0mJnJbMl09PWJZWzJdJiYoclszXXx8KHJbMV09PT0iaHR0cDoiPzgwOjQ0MykpPT0oYllbM118fChiWVsxXT09PSJodHRwOiI/ODA6NDQzKSkpKSxkLmRhdGEmJmQucHJvY2Vzc0RhdGEmJnR5cGVvZiBkLmRhdGEhPSJzdHJpbmciJiYoZC5kYXRhPWYucGFyYW0oZC5kYXRhLGQudHJhZGl0aW9uYWwpKSxjYShiVixkLGMsdik7aWYocz09PTIpcmV0dXJuITE7dD1kLmdsb2JhbCxkLnR5cGU9ZC50eXBlLnRvVXBwZXJDYXNlKCksZC5oYXNDb250ZW50PSFiTS50ZXN0KGQudHlwZSksdCYmZi5hY3RpdmUrKz09PTAmJmYuZXZlbnQudHJpZ2dlcigiYWpheFN0YXJ0Iik7aWYoIWQuaGFzQ29udGVudCl7ZC5kYXRhJiYoZC51cmwrPShiTy50ZXN0KGQudXJsKT8iJiI6Ij8iKStkLmRhdGEsZGVsZXRlIGQuZGF0YSksaz1kLnVybDtpZihkLmNhY2hlPT09ITEpe3ZhciB4PWYubm93KCkseT1kLnVybC5yZXBsYWNlKGJTLCIkMV89Iit4KTtkLnVybD15Kyh5PT09ZC51cmw/KGJPLnRlc3QoZC51cmwpPyImIjoiPyIpKyJfPSIreDoiIil9fShkLmRhdGEmJmQuaGFzQ29udGVudCYmZC5jb250ZW50VHlwZSE9PSExfHxjLmNvbnRlbnRUeXBlKSYmdi5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLGQuY29udGVudFR5cGUpLGQuaWZNb2RpZmllZCYmKGs9a3x8ZC51cmwsZi5sYXN0TW9kaWZpZWRba10mJnYuc2V0UmVxdWVzdEhlYWRlcigiSWYtTW9kaWZpZWQtU2luY2UiLGYubGFzdE1vZGlmaWVkW2tdKSxmLmV0YWdba10mJnYuc2V0UmVxdWVzdEhlYWRlcigiSWYtTm9uZS1NYXRjaCIsZi5ldGFnW2tdKSksdi5zZXRSZXF1ZXN0SGVhZGVyKCJBY2NlcHQiLGQuZGF0YVR5cGVzWzBdJiZkLmFjY2VwdHNbZC5kYXRhVHlwZXNbMF1dP2QuYWNjZXB0c1tkLmRhdGFUeXBlc1swXV0rKGQuZGF0YVR5cGVzWzBdIT09IioiPyIsICIrYlorIjsgcT0wLjAxIjoiIik6ZC5hY2NlcHRzWyIqIl0pO2Zvcih1IGluIGQuaGVhZGVycyl2LnNldFJlcXVlc3RIZWFkZXIodSxkLmhlYWRlcnNbdV0pO2lmKGQuYmVmb3JlU2VuZCYmKGQuYmVmb3JlU2VuZC5jYWxsKGUsdixkKT09PSExfHxzPT09Mikpe3YuYWJvcnQoKTtyZXR1cm4hMX1mb3IodSBpbntzdWNjZXNzOjEsZXJyb3I6MSxjb21wbGV0ZToxfSl2W3VdKGRbdV0pO3A9Y2EoYlcsZCxjLHYpO2lmKCFwKXcoLTEsIk5vIFRyYW5zcG9ydCIpO2Vsc2V7di5yZWFkeVN0YXRlPTEsdCYmZy50cmlnZ2VyKCJhamF4U2VuZCIsW3YsZF0pLGQuYXN5bmMmJmQudGltZW91dD4wJiYocT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7di5hYm9ydCgidGltZW91dCIpfSxkLnRpbWVvdXQpKTt0cnl7cz0xLHAuc2VuZChsLHcpfWNhdGNoKHope3M8Mj93KC0xLHopOmYuZXJyb3Ioeil9fXJldHVybiB2fSxwYXJhbTpmdW5jdGlvbihhLGMpe3ZhciBkPVtdLGU9ZnVuY3Rpb24oYSxiKXtiPWYuaXNGdW5jdGlvbihiKT9iKCk6YixkW2QubGVuZ3RoXT1lbmNvZGVVUklDb21wb25lbnQoYSkrIj0iK2VuY29kZVVSSUNvbXBvbmVudChiKX07Yz09PWImJihjPWYuYWpheFNldHRpbmdzLnRyYWRpdGlvbmFsKTtpZihmLmlzQXJyYXkoYSl8fGEuanF1ZXJ5JiYhZi5pc1BsYWluT2JqZWN0KGEpKWYuZWFjaChhLGZ1bmN0aW9uKCl7ZSh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcih2YXIgZyBpbiBhKWNjKGcsYVtnXSxjLGUpO3JldHVybiBkLmpvaW4oIiYiKS5yZXBsYWNlKGJGLCIrIil9fSksZi5leHRlbmQoe2FjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9fSk7dmFyIGNmPWYubm93KCksY2c9LyhcPSlcPygmfCQpfFw/XD8vaTtmLmFqYXhTZXR1cCh7anNvbnA6ImNhbGxiYWNrIixqc29ucENhbGxiYWNrOmZ1bmN0aW9uKCl7cmV0dXJuIGYuZXhwYW5kbysiXyIrY2YrK319KSxmLmFqYXhQcmVmaWx0ZXIoImpzb24ganNvbnAiLGZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1iLmNvbnRlbnRUeXBlPT09ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCImJnR5cGVvZiBiLmRhdGE9PSJzdHJpbmciO2lmKGIuZGF0YVR5cGVzWzBdPT09Impzb25wInx8Yi5qc29ucCE9PSExJiYoY2cudGVzdChiLnVybCl8fGUmJmNnLnRlc3QoYi5kYXRhKSkpe3ZhciBnLGg9Yi5qc29ucENhbGxiYWNrPWYuaXNGdW5jdGlvbihiLmpzb25wQ2FsbGJhY2spP2IuanNvbnBDYWxsYmFjaygpOmIuanNvbnBDYWxsYmFjayxpPWFbaF0saj1iLnVybCxrPWIuZGF0YSxsPSIkMSIraCsiJDIiO2IuanNvbnAhPT0hMSYmKGo9ai5yZXBsYWNlKGNnLGwpLGIudXJsPT09aiYmKGUmJihrPWsucmVwbGFjZShjZyxsKSksYi5kYXRhPT09ayYmKGorPSgvXD8vLnRlc3Qoaik/IiYiOiI/IikrYi5qc29ucCsiPSIraCkpKSxiLnVybD1qLGIuZGF0YT1rLGFbaF09ZnVuY3Rpb24oYSl7Zz1bYV19LGQuYWx3YXlzKGZ1bmN0aW9uKCl7YVtoXT1pLGcmJmYuaXNGdW5jdGlvbihpKSYmYVtoXShnWzBdKX0pLGIuY29udmVydGVyc1sic2NyaXB0IGpzb24iXT1mdW5jdGlvbigpe2d8fGYuZXJyb3IoaCsiIHdhcyBub3QgY2FsbGVkIik7cmV0dXJuIGdbMF19LGIuZGF0YVR5cGVzWzBdPSJqc29uIjtyZXR1cm4ic2NyaXB0In19KSxmLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OiJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdCJ9LGNvbnRlbnRzOntzY3JpcHQ6L2phdmFzY3JpcHR8ZWNtYXNjcmlwdC99LGNvbnZlcnRlcnM6eyJ0ZXh0IHNjcmlwdCI6ZnVuY3Rpb24oYSl7Zi5nbG9iYWxFdmFsKGEpO3JldHVybiBhfX19KSxmLmFqYXhQcmVmaWx0ZXIoInNjcmlwdCIsZnVuY3Rpb24oYSl7YS5jYWNoZT09PWImJihhLmNhY2hlPSExKSxhLmNyb3NzRG9tYWluJiYoYS50eXBlPSJHRVQiLGEuZ2xvYmFsPSExKX0pLGYuYWpheFRyYW5zcG9ydCgic2NyaXB0IixmdW5jdGlvbihhKXtpZihhLmNyb3NzRG9tYWluKXt2YXIgZCxlPWMuaGVhZHx8Yy5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdfHxjLmRvY3VtZW50RWxlbWVudDtyZXR1cm57c2VuZDpmdW5jdGlvbihmLGcpe2Q9Yy5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKSxkLmFzeW5jPSJhc3luYyIsYS5zY3JpcHRDaGFyc2V0JiYoZC5jaGFyc2V0PWEuc2NyaXB0Q2hhcnNldCksZC5zcmM9YS51cmwsZC5vbmxvYWQ9ZC5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oYSxjKXtpZihjfHwhZC5yZWFkeVN0YXRlfHwvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KGQucmVhZHlTdGF0ZSkpZC5vbmxvYWQ9ZC5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxlJiZkLnBhcmVudE5vZGUmJmUucmVtb3ZlQ2hpbGQoZCksZD1iLGN8fGcoMjAwLCJzdWNjZXNzIil9LGUuaW5zZXJ0QmVmb3JlKGQsZS5maXJzdENoaWxkKX0sYWJvcnQ6ZnVuY3Rpb24oKXtkJiZkLm9ubG9hZCgwLDEpfX19fSk7dmFyIGNoPWEuQWN0aXZlWE9iamVjdD9mdW5jdGlvbigpe2Zvcih2YXIgYSBpbiBjailjalthXSgwLDEpfTohMSxjaT0wLGNqO2YuYWpheFNldHRpbmdzLnhocj1hLkFjdGl2ZVhPYmplY3Q/ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5pc0xvY2FsJiZjaygpfHxjbCgpfTpjayxmdW5jdGlvbihhKXtmLmV4dGVuZChmLnN1cHBvcnQse2FqYXg6ISFhLGNvcnM6ISFhJiYid2l0aENyZWRlbnRpYWxzImluIGF9KX0oZi5hamF4U2V0dGluZ3MueGhyKCkpLGYuc3VwcG9ydC5hamF4JiZmLmFqYXhUcmFuc3BvcnQoZnVuY3Rpb24oYyl7aWYoIWMuY3Jvc3NEb21haW58fGYuc3VwcG9ydC5jb3JzKXt2YXIgZDtyZXR1cm57c2VuZDpmdW5jdGlvbihlLGcpe3ZhciBoPWMueGhyKCksaSxqO2MudXNlcm5hbWU/aC5vcGVuKGMudHlwZSxjLnVybCxjLmFzeW5jLGMudXNlcm5hbWUsYy5wYXNzd29yZCk6aC5vcGVuKGMudHlwZSxjLnVybCxjLmFzeW5jKTtpZihjLnhockZpZWxkcylmb3IoaiBpbiBjLnhockZpZWxkcyloW2pdPWMueGhyRmllbGRzW2pdO2MubWltZVR5cGUmJmgub3ZlcnJpZGVNaW1lVHlwZSYmaC5vdmVycmlkZU1pbWVUeXBlKGMubWltZVR5cGUpLCFjLmNyb3NzRG9tYWluJiYhZVsiWC1SZXF1ZXN0ZWQtV2l0aCJdJiYoZVsiWC1SZXF1ZXN0ZWQtV2l0aCJdPSJYTUxIdHRwUmVxdWVzdCIpO3RyeXtmb3IoaiBpbiBlKWguc2V0UmVxdWVzdEhlYWRlcihqLGVbal0pfWNhdGNoKGspe31oLnNlbmQoYy5oYXNDb250ZW50JiZjLmRhdGF8fG51bGwpLGQ9ZnVuY3Rpb24oYSxlKXt2YXIgaixrLGwsbSxuO3RyeXtpZihkJiYoZXx8aC5yZWFkeVN0YXRlPT09NCkpe2Q9YixpJiYoaC5vbnJlYWR5c3RhdGVjaGFuZ2U9Zi5ub29wLGNoJiZkZWxldGUgY2pbaV0pO2lmKGUpaC5yZWFkeVN0YXRlIT09NCYmaC5hYm9ydCgpO2Vsc2V7aj1oLnN0YXR1cyxsPWguZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCksbT17fSxuPWgucmVzcG9uc2VYTUwsbiYmbi5kb2N1bWVudEVsZW1lbnQmJihtLnhtbD1uKSxtLnRleHQ9aC5yZXNwb25zZVRleHQ7dHJ5e2s9aC5zdGF0dXNUZXh0fWNhdGNoKG8pe2s9IiJ9IWomJmMuaXNMb2NhbCYmIWMuY3Jvc3NEb21haW4/aj1tLnRleHQ/MjAwOjQwNDpqPT09MTIyMyYmKGo9MjA0KX19fWNhdGNoKHApe2V8fGcoLTEscCl9bSYmZyhqLGssbSxsKX0sIWMuYXN5bmN8fGgucmVhZHlTdGF0ZT09PTQ/ZCgpOihpPSsrY2ksY2gmJihjanx8KGNqPXt9LGYoYSkudW5sb2FkKGNoKSksY2pbaV09ZCksaC5vbnJlYWR5c3RhdGVjaGFuZ2U9ZCl9LGFib3J0OmZ1bmN0aW9uKCl7ZCYmZCgwLDEpfX19fSk7dmFyIGNtPXt9LGNuLGNvLGNwPS9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxjcT0vXihbK1wtXT0pPyhbXGQrLlwtXSspKFthLXolXSopJC9pLGNyLGNzPVtbImhlaWdodCIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIl0sWyJ3aWR0aCIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0Il0sWyJvcGFjaXR5Il1dLGN0O2YuZm4uZXh0ZW5kKHtzaG93OmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlO2lmKGF8fGE9PT0wKXJldHVybiB0aGlzLmFuaW1hdGUoY3coInNob3ciLDMpLGEsYixjKTtmb3IodmFyIGc9MCxoPXRoaXMubGVuZ3RoO2c8aDtnKyspZD10aGlzW2ddLGQuc3R5bGUmJihlPWQuc3R5bGUuZGlzcGxheSwhZi5fZGF0YShkLCJvbGRkaXNwbGF5IikmJmU9PT0ibm9uZSImJihlPWQuc3R5bGUuZGlzcGxheT0iIiksZT09PSIiJiZmLmNzcyhkLCJkaXNwbGF5Iik9PT0ibm9uZSImJmYuX2RhdGEoZCwib2xkZGlzcGxheSIsY3goZC5ub2RlTmFtZSkpKTtmb3IoZz0wO2c8aDtnKyspe2Q9dGhpc1tnXTtpZihkLnN0eWxlKXtlPWQuc3R5bGUuZGlzcGxheTtpZihlPT09IiJ8fGU9PT0ibm9uZSIpZC5zdHlsZS5kaXNwbGF5PWYuX2RhdGEoZCwib2xkZGlzcGxheSIpfHwiIn19cmV0dXJuIHRoaXN9LGhpZGU6ZnVuY3Rpb24oYSxiLGMpe2lmKGF8fGE9PT0wKXJldHVybiB0aGlzLmFuaW1hdGUoY3coImhpZGUiLDMpLGEsYixjKTt2YXIgZCxlLGc9MCxoPXRoaXMubGVuZ3RoO2Zvcig7ZzxoO2crKylkPXRoaXNbZ10sZC5zdHlsZSYmKGU9Zi5jc3MoZCwiZGlzcGxheSIpLGUhPT0ibm9uZSImJiFmLl9kYXRhKGQsIm9sZGRpc3BsYXkiKSYmZi5fZGF0YShkLCJvbGRkaXNwbGF5IixlKSk7Zm9yKGc9MDtnPGg7ZysrKXRoaXNbZ10uc3R5bGUmJih0aGlzW2ddLnN0eWxlLmRpc3BsYXk9Im5vbmUiKTtyZXR1cm4gdGhpc30sX3RvZ2dsZTpmLmZuLnRvZ2dsZSx0b2dnbGU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXR5cGVvZiBhPT0iYm9vbGVhbiI7Zi5pc0Z1bmN0aW9uKGEpJiZmLmlzRnVuY3Rpb24oYik/dGhpcy5fdG9nZ2xlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTphPT1udWxsfHxkP3RoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPWQ/YTpmKHRoaXMpLmlzKCI6aGlkZGVuIik7Zih0aGlzKVtiPyJzaG93IjoiaGlkZSJdKCl9KTp0aGlzLmFuaW1hdGUoY3coInRvZ2dsZSIsMyksYSxiLGMpO3JldHVybiB0aGlzfSxmYWRlVG86ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuZmlsdGVyKCI6aGlkZGVuIikuY3NzKCJvcGFjaXR5IiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0ZSh7b3BhY2l0eTpifSxhLGMsZCl9LGFuaW1hdGU6ZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZygpe2UucXVldWU9PT0hMSYmZi5fbWFyayh0aGlzKTt2YXIgYj1mLmV4dGVuZCh7fSxlKSxjPXRoaXMubm9kZVR5cGU9PT0xLGQ9YyYmZih0aGlzKS5pcygiOmhpZGRlbiIpLGcsaCxpLGosayxsLG0sbixvO2IuYW5pbWF0ZWRQcm9wZXJ0aWVzPXt9O2ZvcihpIGluIGEpe2c9Zi5jYW1lbENhc2UoaSksaSE9PWcmJihhW2ddPWFbaV0sZGVsZXRlIGFbaV0pLGg9YVtnXSxmLmlzQXJyYXkoaCk/KGIuYW5pbWF0ZWRQcm9wZXJ0aWVzW2ddPWhbMV0saD1hW2ddPWhbMF0pOmIuYW5pbWF0ZWRQcm9wZXJ0aWVzW2ddPWIuc3BlY2lhbEVhc2luZyYmYi5zcGVjaWFsRWFzaW5nW2ddfHxiLmVhc2luZ3x8InN3aW5nIjtpZihoPT09ImhpZGUiJiZkfHxoPT09InNob3ciJiYhZClyZXR1cm4gYi5jb21wbGV0ZS5jYWxsKHRoaXMpO2MmJihnPT09ImhlaWdodCJ8fGc9PT0id2lkdGgiKSYmKGIub3ZlcmZsb3c9W3RoaXMuc3R5bGUub3ZlcmZsb3csdGhpcy5zdHlsZS5vdmVyZmxvd1gsdGhpcy5zdHlsZS5vdmVyZmxvd1ldLGYuY3NzKHRoaXMsImRpc3BsYXkiKT09PSJpbmxpbmUiJiZmLmNzcyh0aGlzLCJmbG9hdCIpPT09Im5vbmUiJiYoIWYuc3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0fHxjeCh0aGlzLm5vZGVOYW1lKT09PSJpbmxpbmUiP3RoaXMuc3R5bGUuZGlzcGxheT0iaW5saW5lLWJsb2NrIjp0aGlzLnN0eWxlLnpvb209MSkpfWIub3ZlcmZsb3chPW51bGwmJih0aGlzLnN0eWxlLm92ZXJmbG93PSJoaWRkZW4iKTtmb3IoaSBpbiBhKWo9bmV3IGYuZngodGhpcyxiLGkpLGg9YVtpXSxjcC50ZXN0KGgpPyhvPWYuX2RhdGEodGhpcywidG9nZ2xlIitpKXx8KGg9PT0idG9nZ2xlIj9kPyJzaG93IjoiaGlkZSI6MCksbz8oZi5fZGF0YSh0aGlzLCJ0b2dnbGUiK2ksbz09PSJzaG93Ij8iaGlkZSI6InNob3ciKSxqW29dKCkpOmpbaF0oKSk6KGs9Y3EuZXhlYyhoKSxsPWouY3VyKCksaz8obT1wYXJzZUZsb2F0KGtbMl0pLG49a1szXXx8KGYuY3NzTnVtYmVyW2ldPyIiOiJweCIpLG4hPT0icHgiJiYoZi5zdHlsZSh0aGlzLGksKG18fDEpK24pLGw9KG18fDEpL2ouY3VyKCkqbCxmLnN0eWxlKHRoaXMsaSxsK24pKSxrWzFdJiYobT0oa1sxXT09PSItPSI/LTE6MSkqbStsKSxqLmN1c3RvbShsLG0sbikpOmouY3VzdG9tKGwsaCwiIikpO3JldHVybiEwfXZhciBlPWYuc3BlZWQoYixjLGQpO2lmKGYuaXNFbXB0eU9iamVjdChhKSlyZXR1cm4gdGhpcy5lYWNoKGUuY29tcGxldGUsWyExXSk7YT1mLmV4dGVuZCh7fSxhKTtyZXR1cm4gZS5xdWV1ZT09PSExP3RoaXMuZWFjaChnKTp0aGlzLnF1ZXVlKGUucXVldWUsZyl9LHN0b3A6ZnVuY3Rpb24oYSxjLGQpe3R5cGVvZiBhIT0ic3RyaW5nIiYmKGQ9YyxjPWEsYT1iKSxjJiZhIT09ITEmJnRoaXMucXVldWUoYXx8ImZ4IixbXSk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2Z1bmN0aW9uIGgoYSxiLGMpe3ZhciBlPWJbY107Zi5yZW1vdmVEYXRhKGEsYywhMCksZS5zdG9wKGQpfXZhciBiLGM9ITEsZT1mLnRpbWVycyxnPWYuX2RhdGEodGhpcyk7ZHx8Zi5fdW5tYXJrKCEwLHRoaXMpO2lmKGE9PW51bGwpZm9yKGIgaW4gZylnW2JdLnN0b3AmJmIuaW5kZXhPZigiLnJ1biIpPT09Yi5sZW5ndGgtNCYmaCh0aGlzLGcsYik7ZWxzZSBnW2I9YSsiLnJ1biJdJiZnW2JdLnN0b3AmJmgodGhpcyxnLGIpO2ZvcihiPWUubGVuZ3RoO2ItLTspZVtiXS5lbGVtPT09dGhpcyYmKGE9PW51bGx8fGVbYl0ucXVldWU9PT1hKSYmKGQ/ZVtiXSghMCk6ZVtiXS5zYXZlU3RhdGUoKSxjPSEwLGUuc3BsaWNlKGIsMSkpOyghZHx8IWMpJiZmLmRlcXVldWUodGhpcyxhKX0pfX0pLGYuZWFjaCh7c2xpZGVEb3duOmN3KCJzaG93IiwxKSxzbGlkZVVwOmN3KCJoaWRlIiwxKSxzbGlkZVRvZ2dsZTpjdygidG9nZ2xlIiwxKSxmYWRlSW46e29wYWNpdHk6InNob3cifSxmYWRlT3V0OntvcGFjaXR5OiJoaWRlIn0sZmFkZVRvZ2dsZTp7b3BhY2l0eToidG9nZ2xlIn19LGZ1bmN0aW9uKGEsYil7Zi5mblthXT1mdW5jdGlvbihhLGMsZCl7cmV0dXJuIHRoaXMuYW5pbWF0ZShiLGEsYyxkKX19KSxmLmV4dGVuZCh7c3BlZWQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEmJnR5cGVvZiBhPT0ib2JqZWN0Ij9mLmV4dGVuZCh7fSxhKTp7Y29tcGxldGU6Y3x8IWMmJmJ8fGYuaXNGdW5jdGlvbihhKSYmYSxkdXJhdGlvbjphLGVhc2luZzpjJiZifHxiJiYhZi5pc0Z1bmN0aW9uKGIpJiZifTtkLmR1cmF0aW9uPWYuZngub2ZmPzA6dHlwZW9mIGQuZHVyYXRpb249PSJudW1iZXIiP2QuZHVyYXRpb246ZC5kdXJhdGlvbiBpbiBmLmZ4LnNwZWVkcz9mLmZ4LnNwZWVkc1tkLmR1cmF0aW9uXTpmLmZ4LnNwZWVkcy5fZGVmYXVsdDtpZihkLnF1ZXVlPT1udWxsfHxkLnF1ZXVlPT09ITApZC5xdWV1ZT0iZngiO2Qub2xkPWQuY29tcGxldGUsZC5jb21wbGV0ZT1mdW5jdGlvbihhKXtmLmlzRnVuY3Rpb24oZC5vbGQpJiZkLm9sZC5jYWxsKHRoaXMpLGQucXVldWU/Zi5kZXF1ZXVlKHRoaXMsZC5xdWV1ZSk6YSE9PSExJiZmLl91bm1hcmsodGhpcyl9O3JldHVybiBkfSxlYXNpbmc6e2xpbmVhcjpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gYytkKmF9LHN3aW5nOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybigtTWF0aC5jb3MoYSpNYXRoLlBJKS8yKy41KSpkK2N9fSx0aW1lcnM6W10sZng6ZnVuY3Rpb24oYSxiLGMpe3RoaXMub3B0aW9ucz1iLHRoaXMuZWxlbT1hLHRoaXMucHJvcD1jLGIub3JpZz1iLm9yaWd8fHt9fX0pLGYuZngucHJvdG90eXBlPXt1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMuc3RlcCYmdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCh0aGlzLmVsZW0sdGhpcy5ub3csdGhpcyksKGYuZnguc3RlcFt0aGlzLnByb3BdfHxmLmZ4LnN0ZXAuX2RlZmF1bHQpKHRoaXMpfSxjdXI6ZnVuY3Rpb24oKXtpZih0aGlzLmVsZW1bdGhpcy5wcm9wXSE9bnVsbCYmKCF0aGlzLmVsZW0uc3R5bGV8fHRoaXMuZWxlbS5zdHlsZVt0aGlzLnByb3BdPT1udWxsKSlyZXR1cm4gdGhpcy5lbGVtW3RoaXMucHJvcF07dmFyIGEsYj1mLmNzcyh0aGlzLmVsZW0sdGhpcy5wcm9wKTtyZXR1cm4gaXNOYU4oYT1wYXJzZUZsb2F0KGIpKT8hYnx8Yj09PSJhdXRvIj8wOmI6YX0sY3VzdG9tOmZ1bmN0aW9uKGEsYyxkKXtmdW5jdGlvbiBoKGEpe3JldHVybiBlLnN0ZXAoYSl9dmFyIGU9dGhpcyxnPWYuZng7dGhpcy5zdGFydFRpbWU9Y3R8fGN1KCksdGhpcy5lbmQ9Yyx0aGlzLm5vdz10aGlzLnN0YXJ0PWEsdGhpcy5wb3M9dGhpcy5zdGF0ZT0wLHRoaXMudW5pdD1kfHx0aGlzLnVuaXR8fChmLmNzc051bWJlclt0aGlzLnByb3BdPyIiOiJweCIpLGgucXVldWU9dGhpcy5vcHRpb25zLnF1ZXVlLGguZWxlbT10aGlzLmVsZW0saC5zYXZlU3RhdGU9ZnVuY3Rpb24oKXtlLm9wdGlvbnMuaGlkZSYmZi5fZGF0YShlLmVsZW0sImZ4c2hvdyIrZS5wcm9wKT09PWImJmYuX2RhdGEoZS5lbGVtLCJmeHNob3ciK2UucHJvcCxlLnN0YXJ0KX0saCgpJiZmLnRpbWVycy5wdXNoKGgpJiYhY3ImJihjcj1zZXRJbnRlcnZhbChnLnRpY2ssZy5pbnRlcnZhbCkpfSxzaG93OmZ1bmN0aW9uKCl7dmFyIGE9Zi5fZGF0YSh0aGlzLmVsZW0sImZ4c2hvdyIrdGhpcy5wcm9wKTt0aGlzLm9wdGlvbnMub3JpZ1t0aGlzLnByb3BdPWF8fGYuc3R5bGUodGhpcy5lbGVtLHRoaXMucHJvcCksdGhpcy5vcHRpb25zLnNob3c9ITAsYSE9PWI/dGhpcy5jdXN0b20odGhpcy5jdXIoKSxhKTp0aGlzLmN1c3RvbSh0aGlzLnByb3A9PT0id2lkdGgifHx0aGlzLnByb3A9PT0iaGVpZ2h0Ij8xOjAsdGhpcy5jdXIoKSksZih0aGlzLmVsZW0pLnNob3coKX0saGlkZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5vcmlnW3RoaXMucHJvcF09Zi5fZGF0YSh0aGlzLmVsZW0sImZ4c2hvdyIrdGhpcy5wcm9wKXx8Zi5zdHlsZSh0aGlzLmVsZW0sdGhpcy5wcm9wKSx0aGlzLm9wdGlvbnMuaGlkZT0hMCx0aGlzLmN1c3RvbSh0aGlzLmN1cigpLDApfSxzdGVwOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlPWN0fHxjdSgpLGc9ITAsaD10aGlzLmVsZW0saT10aGlzLm9wdGlvbnM7aWYoYXx8ZT49aS5kdXJhdGlvbit0aGlzLnN0YXJ0VGltZSl7dGhpcy5ub3c9dGhpcy5lbmQsdGhpcy5wb3M9dGhpcy5zdGF0ZT0xLHRoaXMudXBkYXRlKCksaS5hbmltYXRlZFByb3BlcnRpZXNbdGhpcy5wcm9wXT0hMDtmb3IoYiBpbiBpLmFuaW1hdGVkUHJvcGVydGllcylpLmFuaW1hdGVkUHJvcGVydGllc1tiXSE9PSEwJiYoZz0hMSk7aWYoZyl7aS5vdmVyZmxvdyE9bnVsbCYmIWYuc3VwcG9ydC5zaHJpbmtXcmFwQmxvY2tzJiZmLmVhY2goWyIiLCJYIiwiWSJdLGZ1bmN0aW9uKGEsYil7aC5zdHlsZVsib3ZlcmZsb3ciK2JdPWkub3ZlcmZsb3dbYV19KSxpLmhpZGUmJmYoaCkuaGlkZSgpO2lmKGkuaGlkZXx8aS5zaG93KWZvcihiIGluIGkuYW5pbWF0ZWRQcm9wZXJ0aWVzKWYuc3R5bGUoaCxiLGkub3JpZ1tiXSksZi5yZW1vdmVEYXRhKGgsImZ4c2hvdyIrYiwhMCksZi5yZW1vdmVEYXRhKGgsInRvZ2dsZSIrYiwhMCk7ZD1pLmNvbXBsZXRlLGQmJihpLmNvbXBsZXRlPSExLGQuY2FsbChoKSl9cmV0dXJuITF9aS5kdXJhdGlvbj09SW5maW5pdHk/dGhpcy5ub3c9ZTooYz1lLXRoaXMuc3RhcnRUaW1lLHRoaXMuc3RhdGU9Yy9pLmR1cmF0aW9uLHRoaXMucG9zPWYuZWFzaW5nW2kuYW5pbWF0ZWRQcm9wZXJ0aWVzW3RoaXMucHJvcF1dKHRoaXMuc3RhdGUsYywwLDEsaS5kdXJhdGlvbiksdGhpcy5ub3c9dGhpcy5zdGFydCsodGhpcy5lbmQtdGhpcy5zdGFydCkqdGhpcy5wb3MpLHRoaXMudXBkYXRlKCk7cmV0dXJuITB9fSxmLmV4dGVuZChmLmZ4LHt0aWNrOmZ1bmN0aW9uKCl7dmFyIGEsYj1mLnRpbWVycyxjPTA7Zm9yKDtjPGIubGVuZ3RoO2MrKylhPWJbY10sIWEoKSYmYltjXT09PWEmJmIuc3BsaWNlKGMtLSwxKTtiLmxlbmd0aHx8Zi5meC5zdG9wKCl9LGludGVydmFsOjEzLHN0b3A6ZnVuY3Rpb24oKXtjbGVhckludGVydmFsKGNyKSxjcj1udWxsfSxzcGVlZHM6e3Nsb3c6NjAwLGZhc3Q6MjAwLF9kZWZhdWx0OjQwMH0sc3RlcDp7b3BhY2l0eTpmdW5jdGlvbihhKXtmLnN0eWxlKGEuZWxlbSwib3BhY2l0eSIsYS5ub3cpfSxfZGVmYXVsdDpmdW5jdGlvbihhKXthLmVsZW0uc3R5bGUmJmEuZWxlbS5zdHlsZVthLnByb3BdIT1udWxsP2EuZWxlbS5zdHlsZVthLnByb3BdPWEubm93K2EudW5pdDphLmVsZW1bYS5wcm9wXT1hLm5vd319fSksZi5lYWNoKFsid2lkdGgiLCJoZWlnaHQiXSxmdW5jdGlvbihhLGIpe2YuZnguc3RlcFtiXT1mdW5jdGlvbihhKXtmLnN0eWxlKGEuZWxlbSxiLE1hdGgubWF4KDAsYS5ub3cpKX19KSxmLmV4cHImJmYuZXhwci5maWx0ZXJzJiYoZi5leHByLmZpbHRlcnMuYW5pbWF0ZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGYuZ3JlcChmLnRpbWVycyxmdW5jdGlvbihiKXtyZXR1cm4gYT09PWIuZWxlbX0pLmxlbmd0aH0pO3ZhciBjeT0vXnQoPzphYmxlfGR8aCkkL2ksY3o9L14oPzpib2R5fGh0bWwpJC9pOyJnZXRCb3VuZGluZ0NsaWVudFJlY3QiaW4gYy5kb2N1bWVudEVsZW1lbnQ/Zi5mbi5vZmZzZXQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpc1swXSxjO2lmKGEpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtmLm9mZnNldC5zZXRPZmZzZXQodGhpcyxhLGIpfSk7aWYoIWJ8fCFiLm93bmVyRG9jdW1lbnQpcmV0dXJuIG51bGw7aWYoYj09PWIub3duZXJEb2N1bWVudC5ib2R5KXJldHVybiBmLm9mZnNldC5ib2R5T2Zmc2V0KGIpO3RyeXtjPWIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCl9Y2F0Y2goZCl7fXZhciBlPWIub3duZXJEb2N1bWVudCxnPWUuZG9jdW1lbnRFbGVtZW50O2lmKCFjfHwhZi5jb250YWlucyhnLGIpKXJldHVybiBjP3t0b3A6Yy50b3AsbGVmdDpjLmxlZnR9Ont0b3A6MCxsZWZ0OjB9O3ZhciBoPWUuYm9keSxpPWNBKGUpLGo9Zy5jbGllbnRUb3B8fGguY2xpZW50VG9wfHwwLGs9Zy5jbGllbnRMZWZ0fHxoLmNsaWVudExlZnR8fDAsbD1pLnBhZ2VZT2Zmc2V0fHxmLnN1cHBvcnQuYm94TW9kZWwmJmcuc2Nyb2xsVG9wfHxoLnNjcm9sbFRvcCxtPWkucGFnZVhPZmZzZXR8fGYuc3VwcG9ydC5ib3hNb2RlbCYmZy5zY3JvbGxMZWZ0fHxoLnNjcm9sbExlZnQsbj1jLnRvcCtsLWosbz1jLmxlZnQrbS1rO3JldHVybnt0b3A6bixsZWZ0Om99fTpmLmZuLm9mZnNldD1mdW5jdGlvbihhKXt2YXIgYj10aGlzWzBdO2lmKGEpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtmLm9mZnNldC5zZXRPZmZzZXQodGhpcyxhLGIpfSk7aWYoIWJ8fCFiLm93bmVyRG9jdW1lbnQpcmV0dXJuIG51bGw7aWYoYj09PWIub3duZXJEb2N1bWVudC5ib2R5KXJldHVybiBmLm9mZnNldC5ib2R5T2Zmc2V0KGIpO3ZhciBjLGQ9Yi5vZmZzZXRQYXJlbnQsZT1iLGc9Yi5vd25lckRvY3VtZW50LGg9Zy5kb2N1bWVudEVsZW1lbnQsaT1nLmJvZHksaj1nLmRlZmF1bHRWaWV3LGs9aj9qLmdldENvbXB1dGVkU3R5bGUoYixudWxsKTpiLmN1cnJlbnRTdHlsZSxsPWIub2Zmc2V0VG9wLG09Yi5vZmZzZXRMZWZ0O3doaWxlKChiPWIucGFyZW50Tm9kZSkmJmIhPT1pJiZiIT09aCl7aWYoZi5zdXBwb3J0LmZpeGVkUG9zaXRpb24mJmsucG9zaXRpb249PT0iZml4ZWQiKWJyZWFrO2M9aj9qLmdldENvbXB1dGVkU3R5bGUoYixudWxsKTpiLmN1cnJlbnRTdHlsZSxsLT1iLnNjcm9sbFRvcCxtLT1iLnNjcm9sbExlZnQsYj09PWQmJihsKz1iLm9mZnNldFRvcCxtKz1iLm9mZnNldExlZnQsZi5zdXBwb3J0LmRvZXNOb3RBZGRCb3JkZXImJighZi5zdXBwb3J0LmRvZXNBZGRCb3JkZXJGb3JUYWJsZUFuZENlbGxzfHwhY3kudGVzdChiLm5vZGVOYW1lKSkmJihsKz1wYXJzZUZsb2F0KGMuYm9yZGVyVG9wV2lkdGgpfHwwLG0rPXBhcnNlRmxvYXQoYy5ib3JkZXJMZWZ0V2lkdGgpfHwwKSxlPWQsZD1iLm9mZnNldFBhcmVudCksZi5zdXBwb3J0LnN1YnRyYWN0c0JvcmRlckZvck92ZXJmbG93Tm90VmlzaWJsZSYmYy5vdmVyZmxvdyE9PSJ2aXNpYmxlIiYmKGwrPXBhcnNlRmxvYXQoYy5ib3JkZXJUb3BXaWR0aCl8fDAsbSs9cGFyc2VGbG9hdChjLmJvcmRlckxlZnRXaWR0aCl8fDApLGs9Y31pZihrLnBvc2l0aW9uPT09InJlbGF0aXZlInx8ay5wb3NpdGlvbj09PSJzdGF0aWMiKWwrPWkub2Zmc2V0VG9wLG0rPWkub2Zmc2V0TGVmdDtmLnN1cHBvcnQuZml4ZWRQb3NpdGlvbiYmay5wb3NpdGlvbj09PSJmaXhlZCImJihsKz1NYXRoLm1heChoLnNjcm9sbFRvcCxpLnNjcm9sbFRvcCksbSs9TWF0aC5tYXgoaC5zY3JvbGxMZWZ0LGkuc2Nyb2xsTGVmdCkpO3JldHVybnt0b3A6bCxsZWZ0Om19fSxmLm9mZnNldD17Ym9keU9mZnNldDpmdW5jdGlvbihhKXt2YXIgYj1hLm9mZnNldFRvcCxjPWEub2Zmc2V0TGVmdDtmLnN1cHBvcnQuZG9lc05vdEluY2x1ZGVNYXJnaW5JbkJvZHlPZmZzZXQmJihiKz1wYXJzZUZsb2F0KGYuY3NzKGEsIm1hcmdpblRvcCIpKXx8MCxjKz1wYXJzZUZsb2F0KGYuY3NzKGEsIm1hcmdpbkxlZnQiKSl8fDApO3JldHVybnt0b3A6YixsZWZ0OmN9fSxzZXRPZmZzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWYuY3NzKGEsInBvc2l0aW9uIik7ZD09PSJzdGF0aWMiJiYoYS5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiKTt2YXIgZT1mKGEpLGc9ZS5vZmZzZXQoKSxoPWYuY3NzKGEsInRvcCIpLGk9Zi5jc3MoYSwibGVmdCIpLGo9KGQ9PT0iYWJzb2x1dGUifHxkPT09ImZpeGVkIikmJmYuaW5BcnJheSgiYXV0byIsW2gsaV0pPi0xLGs9e30sbD17fSxtLG47aj8obD1lLnBvc2l0aW9uKCksbT1sLnRvcCxuPWwubGVmdCk6KG09cGFyc2VGbG9hdChoKXx8MCxuPXBhcnNlRmxvYXQoaSl8fDApLGYuaXNGdW5jdGlvbihiKSYmKGI9Yi5jYWxsKGEsYyxnKSksYi50b3AhPW51bGwmJihrLnRvcD1iLnRvcC1nLnRvcCttKSxiLmxlZnQhPW51bGwmJihrLmxlZnQ9Yi5sZWZ0LWcubGVmdCtuKSwidXNpbmciaW4gYj9iLnVzaW5nLmNhbGwoYSxrKTplLmNzcyhrKX19LGYuZm4uZXh0ZW5kKHtwb3NpdGlvbjpmdW5jdGlvbigpe2lmKCF0aGlzWzBdKXJldHVybiBudWxsO3ZhciBhPXRoaXNbMF0sYj10aGlzLm9mZnNldFBhcmVudCgpLGM9dGhpcy5vZmZzZXQoKSxkPWN6LnRlc3QoYlswXS5ub2RlTmFtZSk/e3RvcDowLGxlZnQ6MH06Yi5vZmZzZXQoKTtjLnRvcC09cGFyc2VGbG9hdChmLmNzcyhhLCJtYXJnaW5Ub3AiKSl8fDAsYy5sZWZ0LT1wYXJzZUZsb2F0KGYuY3NzKGEsIm1hcmdpbkxlZnQiKSl8fDAsZC50b3ArPXBhcnNlRmxvYXQoZi5jc3MoYlswXSwiYm9yZGVyVG9wV2lkdGgiKSl8fDAsZC5sZWZ0Kz1wYXJzZUZsb2F0KGYuY3NzKGJbMF0sImJvcmRlckxlZnRXaWR0aCIpKXx8MDtyZXR1cm57dG9wOmMudG9wLWQudG9wLGxlZnQ6Yy5sZWZ0LWQubGVmdH19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXMub2Zmc2V0UGFyZW50fHxjLmJvZHk7d2hpbGUoYSYmIWN6LnRlc3QoYS5ub2RlTmFtZSkmJmYuY3NzKGEsInBvc2l0aW9uIik9PT0ic3RhdGljIilhPWEub2Zmc2V0UGFyZW50O3JldHVybiBhfSl9fSksZi5lYWNoKFsiTGVmdCIsIlRvcCJdLGZ1bmN0aW9uKGEsYyl7dmFyIGQ9InNjcm9sbCIrYztmLmZuW2RdPWZ1bmN0aW9uKGMpe3ZhciBlLGc7aWYoYz09PWIpe2U9dGhpc1swXTtpZighZSlyZXR1cm4gbnVsbDtnPWNBKGUpO3JldHVybiBnPyJwYWdlWE9mZnNldCJpbiBnP2dbYT8icGFnZVlPZmZzZXQiOiJwYWdlWE9mZnNldCJdOmYuc3VwcG9ydC5ib3hNb2RlbCYmZy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbZF18fGcuZG9jdW1lbnQuYm9keVtkXTplW2RdfXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtnPWNBKHRoaXMpLGc/Zy5zY3JvbGxUbyhhP2YoZykuc2Nyb2xsTGVmdCgpOmMsYT9jOmYoZykuc2Nyb2xsVG9wKCkpOnRoaXNbZF09Y30pfX0pLGYuZWFjaChbIkhlaWdodCIsIldpZHRoIl0sZnVuY3Rpb24oYSxjKXt2YXIgZD1jLnRvTG93ZXJDYXNlKCk7Zi5mblsiaW5uZXIiK2NdPWZ1bmN0aW9uKCl7dmFyIGE9dGhpc1swXTtyZXR1cm4gYT9hLnN0eWxlP3BhcnNlRmxvYXQoZi5jc3MoYSxkLCJwYWRkaW5nIikpOnRoaXNbZF0oKTpudWxsfSxmLmZuWyJvdXRlciIrY109ZnVuY3Rpb24oYSl7dmFyIGI9dGhpc1swXTtyZXR1cm4gYj9iLnN0eWxlP3BhcnNlRmxvYXQoZi5jc3MoYixkLGE/Im1hcmdpbiI6ImJvcmRlciIpKTp0aGlzW2RdKCk6bnVsbH0sZi5mbltkXT1mdW5jdGlvbihhKXt2YXIgZT10aGlzWzBdO2lmKCFlKXJldHVybiBhPT1udWxsP251bGw6dGhpcztpZihmLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXt2YXIgYz1mKHRoaXMpO2NbZF0oYS5jYWxsKHRoaXMsYixjW2RdKCkpKX0pO2lmKGYuaXNXaW5kb3coZSkpe3ZhciBnPWUuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyJjbGllbnQiK2NdLGg9ZS5kb2N1bWVudC5ib2R5O3JldHVybiBlLmRvY3VtZW50LmNvbXBhdE1vZGU9PT0iQ1NTMUNvbXBhdCImJmd8fGgmJmhbImNsaWVudCIrY118fGd9aWYoZS5ub2RlVHlwZT09PTkpcmV0dXJuIE1hdGgubWF4KGUuZG9jdW1lbnRFbGVtZW50WyJjbGllbnQiK2NdLGUuYm9keVsic2Nyb2xsIitjXSxlLmRvY3VtZW50RWxlbWVudFsic2Nyb2xsIitjXSxlLmJvZHlbIm9mZnNldCIrY10sZS5kb2N1bWVudEVsZW1lbnRbIm9mZnNldCIrY10pO2lmKGE9PT1iKXt2YXIgaT1mLmNzcyhlLGQpLGo9cGFyc2VGbG9hdChpKTtyZXR1cm4gZi5pc051bWVyaWMoaik/ajppfXJldHVybiB0aGlzLmNzcyhkLHR5cGVvZiBhPT0ic3RyaW5nIj9hOmErInB4Iil9fSksYS5qUXVlcnk9YS4kPWZ9KSh3aW5kb3cpOwovKioKICogQ29va2llIHBsdWdpbgogKgogKiBDb3B5cmlnaHQgKGMpIDIwMDYgS2xhdXMgSGFydGwgKHN0aWxidWVyby5kZSkKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGFuZCBHUEwgbGljZW5zZXM6CiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiAqIGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwuaHRtbAogKgogKi8KCi8qKgogKiBDcmVhdGUgYSBjb29raWUgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBhbmQgdmFsdWUgYW5kIG90aGVyIG9wdGlvbmFsIHBhcmFtZXRlcnMuCiAqCiAqIEBleGFtcGxlICQuY29va2llKCd0aGVfY29va2llJywgJ3RoZV92YWx1ZScpOwogKiBAZGVzYyBTZXQgdGhlIHZhbHVlIG9mIGEgY29va2llLgogKiBAZXhhbXBsZSAkLmNvb2tpZSgndGhlX2Nvb2tpZScsICd0aGVfdmFsdWUnLCB7IGV4cGlyZXM6IDcsIHBhdGg6ICcvJywgZG9tYWluOiAnanF1ZXJ5LmNvbScsIHNlY3VyZTogdHJ1ZSB9KTsKICogQGRlc2MgQ3JlYXRlIGEgY29va2llIHdpdGggYWxsIGF2YWlsYWJsZSBvcHRpb25zLgogKiBAZXhhbXBsZSAkLmNvb2tpZSgndGhlX2Nvb2tpZScsICd0aGVfdmFsdWUnKTsKICogQGRlc2MgQ3JlYXRlIGEgc2Vzc2lvbiBjb29raWUuCiAqIEBleGFtcGxlICQuY29va2llKCd0aGVfY29va2llJywgbnVsbCk7CiAqIEBkZXNjIERlbGV0ZSBhIGNvb2tpZSBieSBwYXNzaW5nIG51bGwgYXMgdmFsdWUuIEtlZXAgaW4gbWluZCB0aGF0IHlvdSBoYXZlIHRvIHVzZSB0aGUgc2FtZSBwYXRoIGFuZCBkb21haW4KICogICAgICAgdXNlZCB3aGVuIHRoZSBjb29raWUgd2FzIHNldC4KICoKICogQHBhcmFtIFN0cmluZyBuYW1lIFRoZSBuYW1lIG9mIHRoZSBjb29raWUuCiAqIEBwYXJhbSBTdHJpbmcgdmFsdWUgVGhlIHZhbHVlIG9mIHRoZSBjb29raWUuCiAqIEBwYXJhbSBPYmplY3Qgb3B0aW9ucyBBbiBvYmplY3QgbGl0ZXJhbCBjb250YWluaW5nIGtleS92YWx1ZSBwYWlycyB0byBwcm92aWRlIG9wdGlvbmFsIGNvb2tpZSBhdHRyaWJ1dGVzLgogKiBAb3B0aW9uIE51bWJlcnxEYXRlIGV4cGlyZXMgRWl0aGVyIGFuIGludGVnZXIgc3BlY2lmeWluZyB0aGUgZXhwaXJhdGlvbiBkYXRlIGZyb20gbm93IG9uIGluIGRheXMgb3IgYSBEYXRlIG9iamVjdC4KICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIGEgbmVnYXRpdmUgdmFsdWUgaXMgc3BlY2lmaWVkIChlLmcuIGEgZGF0ZSBpbiB0aGUgcGFzdCksIHRoZSBjb29raWUgd2lsbCBiZSBkZWxldGVkLgogKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgc2V0IHRvIG51bGwgb3Igb21pdHRlZCwgdGhlIGNvb2tpZSB3aWxsIGJlIGEgc2Vzc2lvbiBjb29raWUgYW5kIHdpbGwgbm90IGJlIHJldGFpbmVkCiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHRoZSB0aGUgYnJvd3NlciBleGl0cy4KICogQG9wdGlvbiBTdHJpbmcgcGF0aCBUaGUgdmFsdWUgb2YgdGhlIHBhdGggYXRyaWJ1dGUgb2YgdGhlIGNvb2tpZSAoZGVmYXVsdDogcGF0aCBvZiBwYWdlIHRoYXQgY3JlYXRlZCB0aGUgY29va2llKS4KICogQG9wdGlvbiBTdHJpbmcgZG9tYWluIFRoZSB2YWx1ZSBvZiB0aGUgZG9tYWluIGF0dHJpYnV0ZSBvZiB0aGUgY29va2llIChkZWZhdWx0OiBkb21haW4gb2YgcGFnZSB0aGF0IGNyZWF0ZWQgdGhlIGNvb2tpZSkuCiAqIEBvcHRpb24gQm9vbGVhbiBzZWN1cmUgSWYgdHJ1ZSwgdGhlIHNlY3VyZSBhdHRyaWJ1dGUgb2YgdGhlIGNvb2tpZSB3aWxsIGJlIHNldCBhbmQgdGhlIGNvb2tpZSB0cmFuc21pc3Npb24gd2lsbAogKiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmUgYSBzZWN1cmUgcHJvdG9jb2wgKGxpa2UgSFRUUFMpLgogKiBAdHlwZSB1bmRlZmluZWQKICoKICogQG5hbWUgJC5jb29raWUKICogQGNhdCBQbHVnaW5zL0Nvb2tpZQogKiBAYXV0aG9yIEtsYXVzIEhhcnRsL2tsYXVzLmhhcnRsQHN0aWxidWVyby5kZQogKi8KCi8qKgogKiBHZXQgdGhlIHZhbHVlIG9mIGEgY29va2llIHdpdGggdGhlIGdpdmVuIG5hbWUuCiAqCiAqIEBleGFtcGxlICQuY29va2llKCd0aGVfY29va2llJyk7CiAqIEBkZXNjIEdldCB0aGUgdmFsdWUgb2YgYSBjb29raWUuCiAqCiAqIEBwYXJhbSBTdHJpbmcgbmFtZSBUaGUgbmFtZSBvZiB0aGUgY29va2llLgogKiBAcmV0dXJuIFRoZSB2YWx1ZSBvZiB0aGUgY29va2llLgogKiBAdHlwZSBTdHJpbmcKICoKICogQG5hbWUgJC5jb29raWUKICogQGNhdCBQbHVnaW5zL0Nvb2tpZQogKiBAYXV0aG9yIEtsYXVzIEhhcnRsL2tsYXVzLmhhcnRsQHN0aWxidWVyby5kZQogKi8KalF1ZXJ5LmNvb2tpZSA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBvcHRpb25zKSB7CiAgICBpZiAodHlwZW9mIHZhbHVlICE9ICd1bmRlZmluZWQnKSB7IC8vIG5hbWUgYW5kIHZhbHVlIGdpdmVuLCBzZXQgY29va2llCiAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307CiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7CiAgICAgICAgICAgIHZhbHVlID0gJyc7CiAgICAgICAgICAgIG9wdGlvbnMuZXhwaXJlcyA9IC0xOwogICAgICAgIH0KICAgICAgICB2YXIgZXhwaXJlcyA9ICcnOwogICAgICAgIGlmIChvcHRpb25zLmV4cGlyZXMgJiYgKHR5cGVvZiBvcHRpb25zLmV4cGlyZXMgPT0gJ251bWJlcicgfHwgb3B0aW9ucy5leHBpcmVzLnRvVVRDU3RyaW5nKSkgewogICAgICAgICAgICB2YXIgZGF0ZTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmV4cGlyZXMgPT0gJ251bWJlcicpIHsKICAgICAgICAgICAgICAgIGRhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgKG9wdGlvbnMuZXhwaXJlcyAqIDI0ICogNjAgKiA2MCAqIDEwMDApKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGRhdGUgPSBvcHRpb25zLmV4cGlyZXM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZXhwaXJlcyA9ICc7IGV4cGlyZXM9JyArIGRhdGUudG9VVENTdHJpbmcoKTsgLy8gdXNlIGV4cGlyZXMgYXR0cmlidXRlLCBtYXgtYWdlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUUKICAgICAgICB9CiAgICAgICAgLy8gQ0FVVElPTjogTmVlZGVkIHRvIHBhcmVudGhlc2l6ZSBvcHRpb25zLnBhdGggYW5kIG9wdGlvbnMuZG9tYWluCiAgICAgICAgLy8gaW4gdGhlIGZvbGxvd2luZyBleHByZXNzaW9ucywgb3RoZXJ3aXNlIHRoZXkgZXZhbHVhdGUgdG8gdW5kZWZpbmVkCiAgICAgICAgLy8gaW4gdGhlIHBhY2tlZCB2ZXJzaW9uIGZvciBzb21lIHJlYXNvbi4uLgogICAgICAgIHZhciBwYXRoID0gb3B0aW9ucy5wYXRoID8gJzsgcGF0aD0nICsgKG9wdGlvbnMucGF0aCkgOiAnJzsKICAgICAgICB2YXIgZG9tYWluID0gb3B0aW9ucy5kb21haW4gPyAnOyBkb21haW49JyArIChvcHRpb25zLmRvbWFpbikgOiAnJzsKICAgICAgICB2YXIgc2VjdXJlID0gb3B0aW9ucy5zZWN1cmUgPyAnOyBzZWN1cmUnIDogJyc7CiAgICAgICAgZG9jdW1lbnQuY29va2llID0gW25hbWUsICc9JywgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmVdLmpvaW4oJycpOwogICAgfSBlbHNlIHsgLy8gb25seSBuYW1lIGdpdmVuLCBnZXQgY29va2llCiAgICAgICAgdmFyIGNvb2tpZVZhbHVlID0gbnVsbDsKICAgICAgICBpZiAoZG9jdW1lbnQuY29va2llICYmIGRvY3VtZW50LmNvb2tpZSAhPSAnJykgewogICAgICAgICAgICB2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpOwogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb2tpZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBjb29raWUgPSBqUXVlcnkudHJpbShjb29raWVzW2ldKTsKICAgICAgICAgICAgICAgIC8vIERvZXMgdGhpcyBjb29raWUgc3RyaW5nIGJlZ2luIHdpdGggdGhlIG5hbWUgd2Ugd2FudD8KICAgICAgICAgICAgICAgIGlmIChjb29raWUuc3Vic3RyaW5nKDAsIG5hbWUubGVuZ3RoICsgMSkgPT0gKG5hbWUgKyAnPScpKSB7CiAgICAgICAgICAgICAgICAgICAgY29va2llVmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQoY29va2llLnN1YnN0cmluZyhuYW1lLmxlbmd0aCArIDEpKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gY29va2llVmFsdWU7CiAgICB9Cn07Ci8qIQogKiBzcHJpbnRmIGFuZCB2c3ByaW50ZiBmb3IgalF1ZXJ5CiAqIHNvbWV3aGF0IGJhc2VkIG9uIGh0dHA6Ly9qYW4ubW9lc2VuLm51L2NvZGUvamF2YXNjcmlwdC9zcHJpbnRmLWFuZC1wcmludGYtaW4tamF2YXNjcmlwdC8KICogQ29weXJpZ2h0IChjKSAyMDA4IFNhYmluIElhY29iIChtMG41dDNyKSA8aWFjb2JzQG0wbjV0M3IuaW5mbz4KICogQGxpY2Vuc2UgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC5odG1sCiAqIEBwcm9qZWN0IGpxdWVyeS5zcHJpbnRmCiAqLwooZnVuY3Rpb24oZCl7dmFyIGE9e2I6ZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUsMTApLnRvU3RyaW5nKDIpfSxjOmZ1bmN0aW9uKGUpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGUsMTApKX0sZDpmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZSwxMCl9LHU6ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGguYWJzKGUpfSxmOmZ1bmN0aW9uKGYsZSl7ZT1wYXJzZUludChlLDEwKTtmPXBhcnNlRmxvYXQoZik7aWYoaXNOYU4oZSYmZikpe3JldHVybiBOYU59cmV0dXJuIGUmJmYudG9GaXhlZChlKXx8Zn0sbzpmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZSwxMCkudG9TdHJpbmcoOCl9LHM6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LHg6ZnVuY3Rpb24oZSl7cmV0dXJuKCIiK3BhcnNlSW50KGUsMTApLnRvU3RyaW5nKDE2KSkudG9Mb3dlckNhc2UoKX0sWDpmdW5jdGlvbihlKXtyZXR1cm4oIiIrcGFyc2VJbnQoZSwxMCkudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpfX07dmFyIGM9LyUoPzooXGQrKT8oPzpcLihcZCspKT98XCgoW14pXSspXCkpKFslYmNkdWZvc3hYXSkvZzt2YXIgYj1mdW5jdGlvbihmKXtpZihmLmxlbmd0aD09MSYmdHlwZW9mIGZbMF09PSJvYmplY3QiKXtmPWZbMF07cmV0dXJuIGZ1bmN0aW9uKGksaCxrLGosZyxtLGwpe3JldHVybiBhW2ddKGZbal0pfX1lbHNle3ZhciBlPTA7cmV0dXJuIGZ1bmN0aW9uKGksaCxrLGosZyxtLGwpe2lmKGc9PSIlIil7cmV0dXJuIiUifXJldHVybiBhW2ddKGZbZSsrXSxrKX19fTtkLmV4dGVuZCh7c3ByaW50ZjpmdW5jdGlvbihmKXt2YXIgZT1BcnJheS5hcHBseShudWxsLGFyZ3VtZW50cykuc2xpY2UoMSk7cmV0dXJuIGYucmVwbGFjZShjLGIoZSkpfSx2c3ByaW50ZjpmdW5jdGlvbihmLGUpe3JldHVybiBmLnJlcGxhY2UoYyxiKGUpKX19KX0pKGpRdWVyeSk7CgovKiEKICogalF1ZXJ5IEF1dG9jb21wbGV0ZSBwbHVnaW4gMS4xCiAqCiAqIENvcHlyaWdodCAoYykgMjAwOSBKw7ZybiBaYWVmZmVyZXIKICoKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGFuZCBHUEwgbGljZW5zZXM6CiAqICAgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHAKICogICBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvZ3BsLmh0bWwKICoKICogUmV2aXNpb246ICRJZDoganF1ZXJ5LmF1dG9jb21wbGV0ZS5qcyAxNSAyMDA5LTA4LTIyIDEwOjMwOjI3WiBqb2Vybi56YWVmZmVyZXIgJAogKi8KCjsoZnVuY3Rpb24oJCkgewoKJC5mbi5leHRlbmQoewoJYXV0b2NvbXBsZXRlOiBmdW5jdGlvbih1cmxPckRhdGEsIG9wdGlvbnMpIHsKCQl2YXIgaXNVcmwgPSB0eXBlb2YgdXJsT3JEYXRhID09ICJzdHJpbmciOwoJCW9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5BdXRvY29tcGxldGVyLmRlZmF1bHRzLCB7CgkJCXVybDogaXNVcmwgPyB1cmxPckRhdGEgOiBudWxsLAoJCQlkYXRhOiBpc1VybCA/IG51bGwgOiB1cmxPckRhdGEsCgkJCWRlbGF5OiBpc1VybCA/ICQuQXV0b2NvbXBsZXRlci5kZWZhdWx0cy5kZWxheSA6IDEwLAoJCQltYXg6IG9wdGlvbnMgJiYgIW9wdGlvbnMuc2Nyb2xsID8gMTAgOiAxNTAKCQl9LCBvcHRpb25zKTsKCgkJLy8gaWYgaGlnaGxpZ2h0IGlzIHNldCB0byBmYWxzZSwgcmVwbGFjZSBpdCB3aXRoIGEgZG8tbm90aGluZyBmdW5jdGlvbgoJCW9wdGlvbnMuaGlnaGxpZ2h0ID0gb3B0aW9ucy5oaWdobGlnaHQgfHwgZnVuY3Rpb24odmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9OwoKCQkvLyBpZiB0aGUgZm9ybWF0TWF0Y2ggb3B0aW9uIGlzIG5vdCBzcGVjaWZpZWQsIHRoZW4gdXNlIGZvcm1hdEl0ZW0gZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5CgkJb3B0aW9ucy5mb3JtYXRNYXRjaCA9IG9wdGlvbnMuZm9ybWF0TWF0Y2ggfHwgb3B0aW9ucy5mb3JtYXRJdGVtOwoKCQlvcHRpb25zLnNob3cgPSBvcHRpb25zLnNob3cgfHwgZnVuY3Rpb24obGlzdCkge307CgoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCW5ldyAkLkF1dG9jb21wbGV0ZXIodGhpcywgb3B0aW9ucyk7CgkJfSk7Cgl9LAoJcmVzdWx0OiBmdW5jdGlvbihoYW5kbGVyKSB7CgkJcmV0dXJuIHRoaXMuYmluZCgicmVzdWx0IiwgaGFuZGxlcik7Cgl9LAoJc2VhcmNoOiBmdW5jdGlvbihoYW5kbGVyKSB7CgkJcmV0dXJuIHRoaXMudHJpZ2dlcigic2VhcmNoIiwgW2hhbmRsZXJdKTsKCX0sCglmbHVzaENhY2hlOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy50cmlnZ2VyKCJmbHVzaENhY2hlIik7Cgl9LAoJc2V0T3B0aW9uczogZnVuY3Rpb24ob3B0aW9ucyl7CgkJcmV0dXJuIHRoaXMudHJpZ2dlcigic2V0T3B0aW9ucyIsIFtvcHRpb25zXSk7Cgl9LAoJdW5hdXRvY29tcGxldGU6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLnRyaWdnZXIoInVuYXV0b2NvbXBsZXRlIik7Cgl9Cn0pOwoKJC5BdXRvY29tcGxldGVyID0gZnVuY3Rpb24oaW5wdXQsIG9wdGlvbnMpIHsKCgl2YXIgS0VZID0gewoJCVVQOiAzOCwKCQlET1dOOiA0MCwKCQlERUw6IDQ2LAoJCVRBQjogOSwKCQlSRVRVUk46IDEzLAoJCUVTQzogMjcsCgkJQ09NTUE6IDE4OCwKCQlQQUdFVVA6IDMzLAoJCVBBR0VET1dOOiAzNCwKCQlCQUNLU1BBQ0U6IDgKCX07CgoJLy8gQ3JlYXRlICQgb2JqZWN0IGZvciBpbnB1dCBlbGVtZW50Cgl2YXIgJGlucHV0ID0gJChpbnB1dCkuYXR0cigiYXV0b2NvbXBsZXRlIiwgIm9mZiIpLmFkZENsYXNzKG9wdGlvbnMuaW5wdXRDbGFzcyk7CgoJdmFyIHRpbWVvdXQ7Cgl2YXIgcHJldmlvdXNWYWx1ZSA9ICIiOwoJdmFyIGNhY2hlID0gJC5BdXRvY29tcGxldGVyLkNhY2hlKG9wdGlvbnMpOwoJdmFyIGhhc0ZvY3VzID0gMDsKCXZhciBsYXN0S2V5UHJlc3NDb2RlOwoJdmFyIGNvbmZpZyA9IHsKCQltb3VzZURvd25PblNlbGVjdDogZmFsc2UKCX07Cgl2YXIgc2VsZWN0ID0gJC5BdXRvY29tcGxldGVyLlNlbGVjdChvcHRpb25zLCBpbnB1dCwgc2VsZWN0Q3VycmVudCwgY29uZmlnKTsKCgkvLyBvbmx5IG9wZXJhIGRvZXNuJ3QgdHJpZ2dlciBrZXlkb3duIG11bHRpcGxlIHRpbWVzIHdoaWxlIHByZXNzZWQsIG90aGVycyBkb24ndCB3b3JrIHdpdGgga2V5cHJlc3MgYXQgYWxsCgkkaW5wdXQuYmluZCgoJC5icm93c2VyLm9wZXJhID8gImtleXByZXNzIiA6ICJrZXlkb3duIikgKyAiLmF1dG9jb21wbGV0ZSIsIGZ1bmN0aW9uKGV2ZW50KSB7CgkJLy8gYSBrZXlwcmVzcyBtZWFucyB0aGUgaW5wdXQgaGFzIGZvY3VzCgkJLy8gYXZvaWRzIGlzc3VlIHdoZXJlIGlucHV0IGhhZCBmb2N1cyBiZWZvcmUgdGhlIGF1dG9jb21wbGV0ZSB3YXMgYXBwbGllZAoJCWhhc0ZvY3VzID0gMTsKCQkvLyB0cmFjayBsYXN0IGtleSBwcmVzc2VkCgkJbGFzdEtleVByZXNzQ29kZSA9IGV2ZW50LmtleUNvZGU7CgkJc3dpdGNoKGV2ZW50LmtleUNvZGUpIHsKCgkJCWNhc2UgS0VZLlVQOgoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCWlmICggc2VsZWN0LnZpc2libGUoKSApIHsKCQkJCQlzZWxlY3QucHJldigpOwoJCQkJfSBlbHNlIHsKCQkJCQlvbkNoYW5nZSgwLCB0cnVlKTsKCQkJCX0KCQkJCWJyZWFrOwoKCQkJY2FzZSBLRVkuRE9XTjoKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQlpZiAoIHNlbGVjdC52aXNpYmxlKCkgKSB7CgkJCQkJc2VsZWN0Lm5leHQoKTsKCQkJCX0gZWxzZSB7CgkJCQkJb25DaGFuZ2UoMCwgdHJ1ZSk7CgkJCQl9CgkJCQlicmVhazsKCgkJCWNhc2UgS0VZLlBBR0VVUDoKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQlpZiAoIHNlbGVjdC52aXNpYmxlKCkgKSB7CgkJCQkJc2VsZWN0LnBhZ2VVcCgpOwoJCQkJfSBlbHNlIHsKCQkJCQlvbkNoYW5nZSgwLCB0cnVlKTsKCQkJCX0KCQkJCWJyZWFrOwoKCQkJY2FzZSBLRVkuUEFHRURPV046CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJaWYgKCBzZWxlY3QudmlzaWJsZSgpICkgewoJCQkJCXNlbGVjdC5wYWdlRG93bigpOwoJCQkJfSBlbHNlIHsKCQkJCQlvbkNoYW5nZSgwLCB0cnVlKTsKCQkJCX0KCQkJCWJyZWFrOwoKCQkJLy8gbWF0Y2hlcyBhbHNvIHNlbWljb2xvbgoJCQljYXNlIG9wdGlvbnMubXVsdGlwbGUgJiYgJC50cmltKG9wdGlvbnMubXVsdGlwbGVTZXBhcmF0b3IpID09ICIsIiAmJiBLRVkuQ09NTUE6CgkJCWNhc2UgS0VZLlRBQjoKCQkJY2FzZSBLRVkuUkVUVVJOOgoJCQkJaWYoIHNlbGVjdEN1cnJlbnQoKSApIHsKCQkJCQkvL2V2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJLy9yZXR1cm4gZmFsc2U7CgkJCQl9CgkJCQlicmVhazsKCgkJCWNhc2UgS0VZLkVTQzoKCQkJCXNlbGVjdC5oaWRlKCk7CgkJCQlicmVhazsKCgkJCWRlZmF1bHQ6CgkJCQljbGVhclRpbWVvdXQodGltZW91dCk7CgkJCQl0aW1lb3V0ID0gc2V0VGltZW91dChvbkNoYW5nZSwgb3B0aW9ucy5kZWxheSk7CgkJCQlicmVhazsKCQl9Cgl9KS5mb2N1cyhmdW5jdGlvbigpewoJCS8vIHRyYWNrIHdoZXRoZXIgdGhlIGZpZWxkIGhhcyBmb2N1cywgd2Ugc2hvdWxkbid0IHByb2Nlc3MgYW55CgkJLy8gcmVzdWx0cyBpZiB0aGUgZmllbGQgbm8gbG9uZ2VyIGhhcyBmb2N1cwoJCWhhc0ZvY3VzKys7Cgl9KS5ibHVyKGZ1bmN0aW9uKCkgewoJCWhhc0ZvY3VzID0gMDsKCQlpZiAoIWNvbmZpZy5tb3VzZURvd25PblNlbGVjdCkgewoJCQloaWRlUmVzdWx0cygpOwoJCX0KCX0pLmNsaWNrKGZ1bmN0aW9uKCkgewoJCS8vIHNob3cgc2VsZWN0IHdoZW4gY2xpY2tpbmcgaW4gYSBmb2N1c2VkIGZpZWxkCgkJaWYgKCBoYXNGb2N1cysrID4gMSAmJiAhc2VsZWN0LnZpc2libGUoKSApIHsKCQkJb25DaGFuZ2UoMCwgdHJ1ZSk7CgkJfQoJfSkuYmluZCgic2VhcmNoIiwgZnVuY3Rpb24oKSB7CgkJLy8gVE9ETyB3aHkgbm90IGp1c3Qgc3BlY2lmeWluZyBib3RoIGFyZ3VtZW50cz8KCQl2YXIgZm4gPSAoYXJndW1lbnRzLmxlbmd0aCA+IDEpID8gYXJndW1lbnRzWzFdIDogbnVsbDsKCQlmdW5jdGlvbiBmaW5kVmFsdWVDYWxsYmFjayhxLCBkYXRhKSB7CgkJCXZhciByZXN1bHQ7CgkJCWlmKCBkYXRhICYmIGRhdGEubGVuZ3RoICkgewoJCQkJZm9yICh2YXIgaT0wOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewoJCQkJCWlmKCBkYXRhW2ldLnJlc3VsdC50b0xvd2VyQ2FzZSgpID09IHEudG9Mb3dlckNhc2UoKSApIHsKCQkJCQkJcmVzdWx0ID0gZGF0YVtpXTsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQkJfQoJCQl9CgkJCWlmKCB0eXBlb2YgZm4gPT0gImZ1bmN0aW9uIiApIGZuKHJlc3VsdCk7CgkJCWVsc2UgJGlucHV0LnRyaWdnZXIoInJlc3VsdCIsIHJlc3VsdCAmJiBbcmVzdWx0LmRhdGEsIHJlc3VsdC52YWx1ZV0pOwoJCX0KCQkkLmVhY2godHJpbVdvcmRzKCRpbnB1dC52YWwoKSksIGZ1bmN0aW9uKGksIHZhbHVlKSB7CgkJCXJlcXVlc3QodmFsdWUsIGZpbmRWYWx1ZUNhbGxiYWNrLCBmaW5kVmFsdWVDYWxsYmFjayk7CgkJfSk7Cgl9KS5iaW5kKCJmbHVzaENhY2hlIiwgZnVuY3Rpb24oKSB7CgkJY2FjaGUuZmx1c2goKTsKCX0pLmJpbmQoInNldE9wdGlvbnMiLCBmdW5jdGlvbigpIHsKCQkkLmV4dGVuZChvcHRpb25zLCBhcmd1bWVudHNbMV0pOwoJCS8vIGlmIHdlJ3ZlIHVwZGF0ZWQgdGhlIGRhdGEsIHJlcG9wdWxhdGUKCQlpZiAoICJkYXRhIiBpbiBhcmd1bWVudHNbMV0gKQoJCQljYWNoZS5wb3B1bGF0ZSgpOwoJfSkuYmluZCgidW5hdXRvY29tcGxldGUiLCBmdW5jdGlvbigpIHsKCQlzZWxlY3QudW5iaW5kKCk7CgkJJGlucHV0LnVuYmluZCgpOwoJCSQoaW5wdXQuZm9ybSkudW5iaW5kKCIuYXV0b2NvbXBsZXRlIik7Cgl9KTsKCgoJZnVuY3Rpb24gc2VsZWN0Q3VycmVudCgpIHsKCQl2YXIgc2VsZWN0ZWQgPSBzZWxlY3Quc2VsZWN0ZWQoKTsKCQlpZiggIXNlbGVjdGVkICkKCQkJcmV0dXJuIGZhbHNlOwoKCQl2YXIgdiA9IHNlbGVjdGVkLnJlc3VsdDsKCQlwcmV2aW91c1ZhbHVlID0gdjsKCgkJaWYgKCBvcHRpb25zLm11bHRpcGxlICkgewoJCQl2YXIgd29yZHMgPSB0cmltV29yZHMoJGlucHV0LnZhbCgpKTsKCQkJaWYgKCB3b3Jkcy5sZW5ndGggPiAxICkgewoJCQkJdmFyIHNlcGVyYXRvciA9IG9wdGlvbnMubXVsdGlwbGVTZXBhcmF0b3IubGVuZ3RoOwoJCQkJdmFyIGN1cnNvckF0ID0gJChpbnB1dCkuc2VsZWN0aW9uKCkuc3RhcnQ7CgkJCQl2YXIgd29yZEF0LCBwcm9ncmVzcyA9IDA7CgkJCQkkLmVhY2god29yZHMsIGZ1bmN0aW9uKGksIHdvcmQpIHsKCQkJCQlwcm9ncmVzcyArPSB3b3JkLmxlbmd0aDsKCQkJCQlpZiAoY3Vyc29yQXQgPD0gcHJvZ3Jlc3MpIHsKCQkJCQkJd29yZEF0ID0gaTsKCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCX0KCQkJCQlwcm9ncmVzcyArPSBzZXBlcmF0b3I7CgkJCQl9KTsKCQkJCXdvcmRzW3dvcmRBdF0gPSB2OwoJCQkJLy8gVE9ETyB0aGlzIHNob3VsZCBzZXQgdGhlIGN1cnNvciB0byB0aGUgcmlnaHQgcG9zaXRpb24sIGJ1dCBpdCBnZXRzIG92ZXJyaWRlbiBzb21ld2hlcmUKCQkJCS8vJC5BdXRvY29tcGxldGVyLlNlbGVjdGlvbihpbnB1dCwgcHJvZ3Jlc3MgKyBzZXBlcmF0b3IsIHByb2dyZXNzICsgc2VwZXJhdG9yKTsKCQkJCXYgPSB3b3Jkcy5qb2luKCBvcHRpb25zLm11bHRpcGxlU2VwYXJhdG9yICk7CgkJCX0KCQkJdiArPSBvcHRpb25zLm11bHRpcGxlU2VwYXJhdG9yOwoJCX0KCgkJJGlucHV0LnZhbCh2KTsKCQloaWRlUmVzdWx0c05vdygpOwoJCSRpbnB1dC50cmlnZ2VyKCJyZXN1bHQiLCBbc2VsZWN0ZWQuZGF0YSwgc2VsZWN0ZWQudmFsdWVdKTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCglmdW5jdGlvbiBvbkNoYW5nZShjcmFwLCBza2lwUHJldkNoZWNrKSB7CgkJaWYoIGxhc3RLZXlQcmVzc0NvZGUgPT0gS0VZLkRFTCApIHsKCQkJc2VsZWN0LmhpZGUoKTsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIGN1cnJlbnRWYWx1ZSA9ICRpbnB1dC52YWwoKTsKCgkJaWYgKCAhc2tpcFByZXZDaGVjayAmJiBjdXJyZW50VmFsdWUgPT0gcHJldmlvdXNWYWx1ZSApCgkJCXJldHVybjsKCgkJcHJldmlvdXNWYWx1ZSA9IGN1cnJlbnRWYWx1ZTsKCgkJY3VycmVudFZhbHVlID0gbGFzdFdvcmQoY3VycmVudFZhbHVlKTsKCQlpZiAoIGN1cnJlbnRWYWx1ZS5sZW5ndGggPj0gb3B0aW9ucy5taW5DaGFycykgewoJCQkkaW5wdXQuYWRkQ2xhc3Mob3B0aW9ucy5sb2FkaW5nQ2xhc3MpOwoJCQlpZiAoIW9wdGlvbnMubWF0Y2hDYXNlKQoJCQkJY3VycmVudFZhbHVlID0gY3VycmVudFZhbHVlLnRvTG93ZXJDYXNlKCk7CgkJCXJlcXVlc3QoY3VycmVudFZhbHVlLCByZWNlaXZlRGF0YSwgaGlkZVJlc3VsdHNOb3cpOwoJCX0gZWxzZSB7CgkJCXN0b3BMb2FkaW5nKCk7CgkJCXNlbGVjdC5oaWRlKCk7CgkJfQoJfTsKCglmdW5jdGlvbiB0cmltV29yZHModmFsdWUpIHsKCQlpZiAoIXZhbHVlKQoJCQlyZXR1cm4gWyIiXTsKCQlpZiAoIW9wdGlvbnMubXVsdGlwbGUpCgkJCXJldHVybiBbJC50cmltKHZhbHVlKV07CgkJcmV0dXJuICQubWFwKHZhbHVlLnNwbGl0KG9wdGlvbnMubXVsdGlwbGVTZXBhcmF0b3IpLCBmdW5jdGlvbih3b3JkKSB7CgkJCXJldHVybiAkLnRyaW0odmFsdWUpLmxlbmd0aCA/ICQudHJpbSh3b3JkKSA6IG51bGw7CgkJfSk7Cgl9CgoJZnVuY3Rpb24gbGFzdFdvcmQodmFsdWUpIHsKCQlpZiAoICFvcHRpb25zLm11bHRpcGxlICkKCQkJcmV0dXJuIHZhbHVlOwoJCXZhciB3b3JkcyA9IHRyaW1Xb3Jkcyh2YWx1ZSk7CgkJaWYgKHdvcmRzLmxlbmd0aCA9PSAxKQoJCQlyZXR1cm4gd29yZHNbMF07CgkJdmFyIGN1cnNvckF0ID0gJChpbnB1dCkuc2VsZWN0aW9uKCkuc3RhcnQ7CgkJaWYgKGN1cnNvckF0ID09IHZhbHVlLmxlbmd0aCkgewoJCQl3b3JkcyA9IHRyaW1Xb3Jkcyh2YWx1ZSkKCQl9IGVsc2UgewoJCQl3b3JkcyA9IHRyaW1Xb3Jkcyh2YWx1ZS5yZXBsYWNlKHZhbHVlLnN1YnN0cmluZyhjdXJzb3JBdCksICIiKSk7CgkJfQoJCXJldHVybiB3b3Jkc1t3b3Jkcy5sZW5ndGggLSAxXTsKCX0KCgkvLyBmaWxscyBpbiB0aGUgaW5wdXQgYm94IHcvdGhlIGZpcnN0IG1hdGNoIChhc3N1bWVkIHRvIGJlIHRoZSBiZXN0IG1hdGNoKQoJLy8gcTogdGhlIHRlcm0gZW50ZXJlZAoJLy8gc1ZhbHVlOiB0aGUgZmlyc3QgbWF0Y2hpbmcgcmVzdWx0CglmdW5jdGlvbiBhdXRvRmlsbChxLCBzVmFsdWUpewoJCS8vIGF1dG9maWxsIGluIHRoZSBjb21wbGV0ZSBib3ggdy90aGUgZmlyc3QgbWF0Y2ggYXMgbG9uZyBhcyB0aGUgdXNlciBoYXNuJ3QgZW50ZXJlZCBpbiBtb3JlIGRhdGEKCQkvLyBpZiB0aGUgbGFzdCB1c2VyIGtleSBwcmVzc2VkIHdhcyBiYWNrc3BhY2UsIGRvbid0IGF1dG9maWxsCgkJaWYoIG9wdGlvbnMuYXV0b0ZpbGwgJiYgKGxhc3RXb3JkKCRpbnB1dC52YWwoKSkudG9Mb3dlckNhc2UoKSA9PSBxLnRvTG93ZXJDYXNlKCkpICYmIGxhc3RLZXlQcmVzc0NvZGUgIT0gS0VZLkJBQ0tTUEFDRSApIHsKCQkJLy8gZmlsbCBpbiB0aGUgdmFsdWUgKGtlZXAgdGhlIGNhc2UgdGhlIHVzZXIgaGFzIHR5cGVkKQoJCQkkaW5wdXQudmFsKCRpbnB1dC52YWwoKSArIHNWYWx1ZS5zdWJzdHJpbmcobGFzdFdvcmQocHJldmlvdXNWYWx1ZSkubGVuZ3RoKSk7CgkJCS8vIHNlbGVjdCB0aGUgcG9ydGlvbiBvZiB0aGUgdmFsdWUgbm90IHR5cGVkIGJ5IHRoZSB1c2VyIChzbyB0aGUgbmV4dCBjaGFyYWN0ZXIgd2lsbCBlcmFzZSkKCQkJJChpbnB1dCkuc2VsZWN0aW9uKHByZXZpb3VzVmFsdWUubGVuZ3RoLCBwcmV2aW91c1ZhbHVlLmxlbmd0aCArIHNWYWx1ZS5sZW5ndGgpOwoJCX0KCX07CgoJZnVuY3Rpb24gaGlkZVJlc3VsdHMoKSB7CgkJY2xlYXJUaW1lb3V0KHRpbWVvdXQpOwoJCXRpbWVvdXQgPSBzZXRUaW1lb3V0KGhpZGVSZXN1bHRzTm93LCAyMDApOwoJfTsKCglmdW5jdGlvbiBoaWRlUmVzdWx0c05vdygpIHsKCQl2YXIgd2FzVmlzaWJsZSA9IHNlbGVjdC52aXNpYmxlKCk7CgkJc2VsZWN0LmhpZGUoKTsKCQljbGVhclRpbWVvdXQodGltZW91dCk7CgkJc3RvcExvYWRpbmcoKTsKCQlpZiAob3B0aW9ucy5tdXN0TWF0Y2gpIHsKCQkJLy8gY2FsbCBzZWFyY2ggYW5kIHJ1biBjYWxsYmFjawoJCQkkaW5wdXQuc2VhcmNoKAoJCQkJZnVuY3Rpb24gKHJlc3VsdCl7CgkJCQkJLy8gaWYgbm8gdmFsdWUgZm91bmQsIGNsZWFyIHRoZSBpbnB1dCBib3gKCQkJCQlpZiggIXJlc3VsdCApIHsKCQkJCQkJaWYgKG9wdGlvbnMubXVsdGlwbGUpIHsKCQkJCQkJCXZhciB3b3JkcyA9IHRyaW1Xb3JkcygkaW5wdXQudmFsKCkpLnNsaWNlKDAsIC0xKTsKCQkJCQkJCSRpbnB1dC52YWwoIHdvcmRzLmpvaW4ob3B0aW9ucy5tdWx0aXBsZVNlcGFyYXRvcikgKyAod29yZHMubGVuZ3RoID8gb3B0aW9ucy5tdWx0aXBsZVNlcGFyYXRvciA6ICIiKSApOwoJCQkJCQl9CgkJCQkJCWVsc2UgewoJCQkJCQkJJGlucHV0LnZhbCggIiIgKTsKCQkJCQkJCSRpbnB1dC50cmlnZ2VyKCJyZXN1bHQiLCBudWxsKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJKTsKCQl9Cgl9OwoKCWZ1bmN0aW9uIHJlY2VpdmVEYXRhKHEsIGRhdGEpIHsKCQlpZiAoIGRhdGEgJiYgZGF0YS5sZW5ndGggJiYgaGFzRm9jdXMgKSB7CgkJCXN0b3BMb2FkaW5nKCk7CgkJCXNlbGVjdC5kaXNwbGF5KGRhdGEsIHEpOwoJCQlhdXRvRmlsbChxLCBkYXRhWzBdLnZhbHVlKTsKCQkJc2VsZWN0LnNob3coKTsKCQl9IGVsc2UgewoJCQloaWRlUmVzdWx0c05vdygpOwoJCX0KCX07CgoJZnVuY3Rpb24gcmVxdWVzdCh0ZXJtLCBzdWNjZXNzLCBmYWlsdXJlKSB7CgkJaWYgKCFvcHRpb25zLm1hdGNoQ2FzZSkKCQkJdGVybSA9IHRlcm0udG9Mb3dlckNhc2UoKTsKCQl2YXIgZGF0YSA9IGNhY2hlLmxvYWQodGVybSk7CgkJLy8gcmVjaWV2ZSB0aGUgY2FjaGVkIGRhdGEKCQlpZiAoZGF0YSAmJiBkYXRhLmxlbmd0aCkgewoJCQlzdWNjZXNzKHRlcm0sIGRhdGEpOwoJCS8vIGlmIGFuIEFKQVggdXJsIGhhcyBiZWVuIHN1cHBsaWVkLCB0cnkgbG9hZGluZyB0aGUgZGF0YSBub3cKCQl9IGVsc2UgaWYoICh0eXBlb2Ygb3B0aW9ucy51cmwgPT0gInN0cmluZyIpICYmIChvcHRpb25zLnVybC5sZW5ndGggPiAwKSApewoKCQkJdmFyIGV4dHJhUGFyYW1zID0gewoJCQkJdGltZXN0YW1wOiArbmV3IERhdGUoKQoJCQl9OwoJCQkkLmVhY2gob3B0aW9ucy5leHRyYVBhcmFtcywgZnVuY3Rpb24oa2V5LCBwYXJhbSkgewoJCQkJZXh0cmFQYXJhbXNba2V5XSA9IHR5cGVvZiBwYXJhbSA9PSAiZnVuY3Rpb24iID8gcGFyYW0oKSA6IHBhcmFtOwoJCQl9KTsKCgkJCSQuYWpheCh7CgkJCQkvLyB0cnkgdG8gbGV2ZXJhZ2UgYWpheFF1ZXVlIHBsdWdpbiB0byBhYm9ydCBwcmV2aW91cyByZXF1ZXN0cwoJCQkJbW9kZTogImFib3J0IiwKCQkJCS8vIGxpbWl0IGFib3J0aW9uIHRvIHRoaXMgaW5wdXQKCQkJCXBvcnQ6ICJhdXRvY29tcGxldGUiICsgaW5wdXQubmFtZSwKCQkJCWRhdGFUeXBlOiBvcHRpb25zLmRhdGFUeXBlLAoJCQkJdXJsOiBvcHRpb25zLnVybCwKCQkJCWRhdGE6ICQuZXh0ZW5kKHsKCQkJCQlxOiBsYXN0V29yZCh0ZXJtKSwKCQkJCQlsaW1pdDogb3B0aW9ucy5tYXgKCQkJCX0sIGV4dHJhUGFyYW1zKSwKCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCQl2YXIgcGFyc2VkID0gb3B0aW9ucy5wYXJzZSAmJiBvcHRpb25zLnBhcnNlKGRhdGEpIHx8IHBhcnNlKGRhdGEpOwoJCQkJCWNhY2hlLmFkZCh0ZXJtLCBwYXJzZWQpOwoJCQkJCXN1Y2Nlc3ModGVybSwgcGFyc2VkKTsKCQkJCX0KCQkJfSk7CgkJfSBlbHNlIHsKCQkJLy8gaWYgd2UgaGF2ZSBhIGZhaWx1cmUsIHdlIG5lZWQgdG8gZW1wdHkgdGhlIGxpc3QgLS0gdGhpcyBwcmV2ZW50cyB0aGUgdGhlIFtUQUJdIGtleSBmcm9tIHNlbGVjdGluZyB0aGUgbGFzdCBzdWNjZXNzZnVsIG1hdGNoCgkJCXNlbGVjdC5lbXB0eUxpc3QoKTsKCQkJZmFpbHVyZSh0ZXJtKTsKCQl9Cgl9OwoKCWZ1bmN0aW9uIHBhcnNlKGRhdGEpIHsKCQl2YXIgcGFyc2VkID0gW107CgkJdmFyIHJvd3MgPSBkYXRhLnNwbGl0KCJcbiIpOwoJCWZvciAodmFyIGk9MDsgaSA8IHJvd3MubGVuZ3RoOyBpKyspIHsKCQkJdmFyIHJvdyA9ICQudHJpbShyb3dzW2ldKTsKCQkJaWYgKHJvdykgewoJCQkJcm93ID0gcm93LnNwbGl0KCJ8Iik7CgkJCQlwYXJzZWRbcGFyc2VkLmxlbmd0aF0gPSB7CgkJCQkJZGF0YTogcm93LAoJCQkJCXZhbHVlOiByb3dbMF0sCgkJCQkJcmVzdWx0OiBvcHRpb25zLmZvcm1hdFJlc3VsdCAmJiBvcHRpb25zLmZvcm1hdFJlc3VsdChyb3csIHJvd1swXSkgfHwgcm93WzBdCgkJCQl9OwoJCQl9CgkJfQoJCXJldHVybiBwYXJzZWQ7Cgl9OwoKCWZ1bmN0aW9uIHN0b3BMb2FkaW5nKCkgewoJCSRpbnB1dC5yZW1vdmVDbGFzcyhvcHRpb25zLmxvYWRpbmdDbGFzcyk7Cgl9OwoKfTsKCiQuQXV0b2NvbXBsZXRlci5kZWZhdWx0cyA9IHsKCWlucHV0Q2xhc3M6ICJhY19pbnB1dCIsCglyZXN1bHRzQ2xhc3M6ICJhY19yZXN1bHRzIiwKCWxvYWRpbmdDbGFzczogImFjX2xvYWRpbmciLAoJbWluQ2hhcnM6IDEsCglkZWxheTogNDAwLAoJbWF0Y2hDYXNlOiBmYWxzZSwKCW1hdGNoU3Vic2V0OiB0cnVlLAoJbWF0Y2hDb250YWluczogZmFsc2UsCgljYWNoZUxlbmd0aDogMTAsCgltYXg6IDEwMCwKCW11c3RNYXRjaDogZmFsc2UsCglleHRyYVBhcmFtczoge30sCglzZWxlY3RGaXJzdDogdHJ1ZSwKCWZvcm1hdEl0ZW06IGZ1bmN0aW9uKHJvdykgeyByZXR1cm4gcm93WzBdOyB9LAoJZm9ybWF0TWF0Y2g6IG51bGwsCglhdXRvRmlsbDogZmFsc2UsCgl3aWR0aDogMCwKCW11bHRpcGxlOiBmYWxzZSwKCW11bHRpcGxlU2VwYXJhdG9yOiAiLCAiLAoJaGlnaGxpZ2h0OiBmdW5jdGlvbih2YWx1ZSwgdGVybSkgewoJCXJldHVybiB2YWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoIig/IVteJjtdKzspKD8hPFtePD5dKikoIiArIHRlcm0ucmVwbGFjZSgvKFtcXlwkXChcKVxbXF1ce1x9XCpcLlwrXD9cfFxcXSkvZ2ksICJcXCQxIikgKyAiKSg/IVtePD5dKj4pKD8hW14mO10rOykiLCAiZ2kiKSwgIjxzdHJvbmc+JDE8L3N0cm9uZz4iKTsKCX0sCglzY3JvbGw6IHRydWUsCglzY3JvbGxIZWlnaHQ6IDE4MAp9OwoKJC5BdXRvY29tcGxldGVyLkNhY2hlID0gZnVuY3Rpb24ob3B0aW9ucykgewoKCXZhciBkYXRhID0ge307Cgl2YXIgbGVuZ3RoID0gMDsKCglmdW5jdGlvbiBtYXRjaFN1YnNldChzLCBzdWIpIHsKCQlpZiAoIW9wdGlvbnMubWF0Y2hDYXNlKQoJCQlzID0gcy50b0xvd2VyQ2FzZSgpOwoJCXZhciBpID0gcy5pbmRleE9mKHN1Yik7CgkJaWYgKG9wdGlvbnMubWF0Y2hDb250YWlucyA9PSAid29yZCIpewoJCQlpID0gcy50b0xvd2VyQ2FzZSgpLnNlYXJjaCgiXFxiIiArIHN1Yi50b0xvd2VyQ2FzZSgpKTsKCQl9CgkJaWYgKGkgPT0gLTEpIHJldHVybiBmYWxzZTsKCQlyZXR1cm4gaSA9PSAwIHx8IG9wdGlvbnMubWF0Y2hDb250YWluczsKCX07CgoJZnVuY3Rpb24gYWRkKHEsIHZhbHVlKSB7CgkJaWYgKGxlbmd0aCA+IG9wdGlvbnMuY2FjaGVMZW5ndGgpewoJCQlmbHVzaCgpOwoJCX0KCQlpZiAoIWRhdGFbcV0pewoJCQlsZW5ndGgrKzsKCQl9CgkJZGF0YVtxXSA9IHZhbHVlOwoJfQoKCWZ1bmN0aW9uIHBvcHVsYXRlKCl7CgkJaWYoICFvcHRpb25zLmRhdGEgKSByZXR1cm4gZmFsc2U7CgkJLy8gdHJhY2sgdGhlIG1hdGNoZXMKCQl2YXIgc3RNYXRjaFNldHMgPSB7fSwKCQkJbnVsbERhdGEgPSAwOwoKCQkvLyBubyB1cmwgd2FzIHNwZWNpZmllZCwgd2UgbmVlZCB0byBhZGp1c3QgdGhlIGNhY2hlIGxlbmd0aCB0byBtYWtlIHN1cmUgaXQgZml0cyB0aGUgbG9jYWwgZGF0YSBzdG9yZQoJCWlmKCAhb3B0aW9ucy51cmwgKSBvcHRpb25zLmNhY2hlTGVuZ3RoID0gMTsKCgkJLy8gdHJhY2sgYWxsIG9wdGlvbnMgZm9yIG1pbkNoYXJzID0gMAoJCXN0TWF0Y2hTZXRzWyIiXSA9IFtdOwoKCQkvLyBsb29wIHRocm91Z2ggdGhlIGFycmF5IGFuZCBjcmVhdGUgYSBsb29rdXAgc3RydWN0dXJlCgkJZm9yICggdmFyIGkgPSAwLCBvbCA9IG9wdGlvbnMuZGF0YS5sZW5ndGg7IGkgPCBvbDsgaSsrICkgewoJCQl2YXIgcmF3VmFsdWUgPSBvcHRpb25zLmRhdGFbaV07CgkJCS8vIGlmIHJhd1ZhbHVlIGlzIGEgc3RyaW5nLCBtYWtlIGFuIGFycmF5IG90aGVyd2lzZSBqdXN0IHJlZmVyZW5jZSB0aGUgYXJyYXkKCQkJcmF3VmFsdWUgPSAodHlwZW9mIHJhd1ZhbHVlID09ICJzdHJpbmciKSA/IFtyYXdWYWx1ZV0gOiByYXdWYWx1ZTsKCgkJCXZhciB2YWx1ZSA9IG9wdGlvbnMuZm9ybWF0TWF0Y2gocmF3VmFsdWUsIGkrMSwgb3B0aW9ucy5kYXRhLmxlbmd0aCk7CgkJCWlmICggdmFsdWUgPT09IGZhbHNlICkKCQkJCWNvbnRpbnVlOwoKCQkJdmFyIGZpcnN0Q2hhciA9IHZhbHVlLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpOwoJCQkvLyBpZiBubyBsb29rdXAgYXJyYXkgZm9yIHRoaXMgY2hhcmFjdGVyIGV4aXN0cywgbG9vayBpdCB1cCBub3cKCQkJaWYoICFzdE1hdGNoU2V0c1tmaXJzdENoYXJdICkKCQkJCXN0TWF0Y2hTZXRzW2ZpcnN0Q2hhcl0gPSBbXTsKCgkJCS8vIGlmIHRoZSBtYXRjaCBpcyBhIHN0cmluZwoJCQl2YXIgcm93ID0gewoJCQkJdmFsdWU6IHZhbHVlLAoJCQkJZGF0YTogcmF3VmFsdWUsCgkJCQlyZXN1bHQ6IG9wdGlvbnMuZm9ybWF0UmVzdWx0ICYmIG9wdGlvbnMuZm9ybWF0UmVzdWx0KHJhd1ZhbHVlKSB8fCB2YWx1ZQoJCQl9OwoKCQkJLy8gcHVzaCB0aGUgY3VycmVudCBtYXRjaCBpbnRvIHRoZSBzZXQgbGlzdAoJCQlzdE1hdGNoU2V0c1tmaXJzdENoYXJdLnB1c2gocm93KTsKCgkJCS8vIGtlZXAgdHJhY2sgb2YgbWluQ2hhcnMgemVybyBpdGVtcwoJCQlpZiAoIG51bGxEYXRhKysgPCBvcHRpb25zLm1heCApIHsKCQkJCXN0TWF0Y2hTZXRzWyIiXS5wdXNoKHJvdyk7CgkJCX0KCQl9OwoKCQkvLyBhZGQgdGhlIGRhdGEgaXRlbXMgdG8gdGhlIGNhY2hlCgkJJC5lYWNoKHN0TWF0Y2hTZXRzLCBmdW5jdGlvbihpLCB2YWx1ZSkgewoJCQkvLyBpbmNyZWFzZSB0aGUgY2FjaGUgc2l6ZQoJCQlvcHRpb25zLmNhY2hlTGVuZ3RoKys7CgkJCS8vIGFkZCB0byB0aGUgY2FjaGUKCQkJYWRkKGksIHZhbHVlKTsKCQl9KTsKCX0KCgkvLyBwb3B1bGF0ZSBhbnkgZXhpc3RpbmcgZGF0YQoJc2V0VGltZW91dChwb3B1bGF0ZSwgMjUpOwoKCWZ1bmN0aW9uIGZsdXNoKCl7CgkJZGF0YSA9IHt9OwoJCWxlbmd0aCA9IDA7Cgl9CgoJcmV0dXJuIHsKCQlmbHVzaDogZmx1c2gsCgkJYWRkOiBhZGQsCgkJcG9wdWxhdGU6IHBvcHVsYXRlLAoJCWxvYWQ6IGZ1bmN0aW9uKHEpIHsKCQkJaWYgKCFvcHRpb25zLmNhY2hlTGVuZ3RoIHx8ICFsZW5ndGgpCgkJCQlyZXR1cm4gbnVsbDsKCQkJLyoKCQkJICogaWYgZGVhbGluZyB3L2xvY2FsIGRhdGEgYW5kIG1hdGNoQ29udGFpbnMgdGhhbiB3ZSBtdXN0IG1ha2Ugc3VyZQoJCQkgKiB0byBsb29wIHRocm91Z2ggYWxsIHRoZSBkYXRhIGNvbGxlY3Rpb25zIGxvb2tpbmcgZm9yIG1hdGNoZXMKCQkJICovCgkJCWlmKCAhb3B0aW9ucy51cmwgJiYgb3B0aW9ucy5tYXRjaENvbnRhaW5zICl7CgkJCQkvLyB0cmFjayBhbGwgbWF0Y2hlcwoJCQkJdmFyIGNzdWIgPSBbXTsKCQkJCS8vIGxvb3AgdGhyb3VnaCBhbGwgdGhlIGRhdGEgZ3JpZHMgZm9yIG1hdGNoZXMKCQkJCWZvciggdmFyIGsgaW4gZGF0YSApewoJCQkJCS8vIGRvbid0IHNlYXJjaCB0aHJvdWdoIHRoZSBzdE1hdGNoU2V0c1siIl0gKG1pbkNoYXJzOiAwKSBjYWNoZQoJCQkJCS8vIHRoaXMgcHJldmVudHMgZHVwbGljYXRlcwoJCQkJCWlmKCBrLmxlbmd0aCA+IDAgKXsKCQkJCQkJdmFyIGMgPSBkYXRhW2tdOwoJCQkJCQkkLmVhY2goYywgZnVuY3Rpb24oaSwgeCkgewoJCQkJCQkJLy8gaWYgd2UndmUgZ290IGEgbWF0Y2gsIGFkZCBpdCB0byB0aGUgYXJyYXkKCQkJCQkJCWlmIChtYXRjaFN1YnNldCh4LnZhbHVlLCBxKSkgewoJCQkJCQkJCWNzdWIucHVzaCh4KTsKCQkJCQkJCX0KCQkJCQkJfSk7CgkJCQkJfQoJCQkJfQoJCQkJcmV0dXJuIGNzdWI7CgkJCX0gZWxzZQoJCQkvLyBpZiB0aGUgZXhhY3QgaXRlbSBleGlzdHMsIHVzZSBpdAoJCQlpZiAoZGF0YVtxXSl7CgkJCQlyZXR1cm4gZGF0YVtxXTsKCQkJfSBlbHNlCgkJCWlmIChvcHRpb25zLm1hdGNoU3Vic2V0KSB7CgkJCQlmb3IgKHZhciBpID0gcS5sZW5ndGggLSAxOyBpID49IG9wdGlvbnMubWluQ2hhcnM7IGktLSkgewoJCQkJCXZhciBjID0gZGF0YVtxLnN1YnN0cigwLCBpKV07CgkJCQkJaWYgKGMpIHsKCQkJCQkJdmFyIGNzdWIgPSBbXTsKCQkJCQkJJC5lYWNoKGMsIGZ1bmN0aW9uKGksIHgpIHsKCQkJCQkJCWlmIChtYXRjaFN1YnNldCh4LnZhbHVlLCBxKSkgewoJCQkJCQkJCWNzdWJbY3N1Yi5sZW5ndGhdID0geDsKCQkJCQkJCX0KCQkJCQkJfSk7CgkJCQkJCXJldHVybiBjc3ViOwoJCQkJCX0KCQkJCX0KCQkJfQoJCQlyZXR1cm4gbnVsbDsKCQl9Cgl9Owp9OwoKJC5BdXRvY29tcGxldGVyLlNlbGVjdCA9IGZ1bmN0aW9uIChvcHRpb25zLCBpbnB1dCwgc2VsZWN0LCBjb25maWcpIHsKCXZhciBDTEFTU0VTID0gewoJCUFDVElWRTogImFjX292ZXIiCgl9OwoKCXZhciBsaXN0SXRlbXMsCgkJYWN0aXZlID0gLTEsCgkJZGF0YSwKCQl0ZXJtID0gIiIsCgkJbmVlZHNJbml0ID0gdHJ1ZSwKCQllbGVtZW50LAoJCWxpc3Q7CgoJLy8gQ3JlYXRlIHJlc3VsdHMKCWZ1bmN0aW9uIGluaXQoKSB7CgkJaWYgKCFuZWVkc0luaXQpCgkJCXJldHVybjsKCQllbGVtZW50ID0gJCgiPGRpdi8+IikKCQkuaGlkZSgpCgkJLmFkZENsYXNzKG9wdGlvbnMucmVzdWx0c0NsYXNzKQoJCS5jc3MoInBvc2l0aW9uIiwgImFic29sdXRlIikKCQkuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSk7CgoJCWxpc3QgPSAkKCI8dWwvPiIpLmFwcGVuZFRvKGVsZW1lbnQpLm1vdXNlb3ZlciggZnVuY3Rpb24oZXZlbnQpIHsKCQkJaWYodGFyZ2V0KGV2ZW50KS5ub2RlTmFtZSAmJiB0YXJnZXQoZXZlbnQpLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT0gJ0xJJykgewoJCQkJYWN0aXZlID0gJCgibGkiLCBsaXN0KS5yZW1vdmVDbGFzcyhDTEFTU0VTLkFDVElWRSkuaW5kZXgodGFyZ2V0KGV2ZW50KSk7CgkJCQkkKHRhcmdldChldmVudCkpLmFkZENsYXNzKENMQVNTRVMuQUNUSVZFKTsKCQkJfQoJCX0pLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7CgkJCSQodGFyZ2V0KGV2ZW50KSkuYWRkQ2xhc3MoQ0xBU1NFUy5BQ1RJVkUpOwoJCQlzZWxlY3QoKTsKCQkJLy8gVE9ETyBwcm92aWRlIG9wdGlvbiB0byBhdm9pZCBzZXR0aW5nIGZvY3VzIGFnYWluIGFmdGVyIHNlbGVjdGlvbj8gdXNlZnVsIGZvciBjbGVhbnVwLW9uLWZvY3VzCgkJCWlucHV0LmZvY3VzKCk7CgkJCXJldHVybiBmYWxzZTsKCQl9KS5tb3VzZWRvd24oZnVuY3Rpb24oKSB7CgkJCWNvbmZpZy5tb3VzZURvd25PblNlbGVjdCA9IHRydWU7CgkJfSkubW91c2V1cChmdW5jdGlvbigpIHsKCQkJY29uZmlnLm1vdXNlRG93bk9uU2VsZWN0ID0gZmFsc2U7CgkJfSk7CgoJCWlmKCBvcHRpb25zLndpZHRoID4gMCApCgkJCWVsZW1lbnQuY3NzKCJ3aWR0aCIsIG9wdGlvbnMud2lkdGgpOwoKCQluZWVkc0luaXQgPSBmYWxzZTsKCX0KCglmdW5jdGlvbiB0YXJnZXQoZXZlbnQpIHsKCQl2YXIgZWxlbWVudCA9IGV2ZW50LnRhcmdldDsKCQl3aGlsZShlbGVtZW50ICYmIGVsZW1lbnQudGFnTmFtZSAhPSAiTEkiKQoJCQllbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlOwoJCS8vIG1vcmUgZnVuIHdpdGggSUUsIHNvbWV0aW1lcyBldmVudC50YXJnZXQgaXMgZW1wdHksIGp1c3QgaWdub3JlIGl0IHRoZW4KCQlpZighZWxlbWVudCkKCQkJcmV0dXJuIFtdOwoJCXJldHVybiBlbGVtZW50OwoJfQoKCWZ1bmN0aW9uIG1vdmVTZWxlY3Qoc3RlcCkgewoJCWxpc3RJdGVtcy5zbGljZShhY3RpdmUsIGFjdGl2ZSArIDEpLnJlbW92ZUNsYXNzKENMQVNTRVMuQUNUSVZFKTsKCQltb3ZlUG9zaXRpb24oc3RlcCk7CgkJdmFyIGFjdGl2ZUl0ZW0gPSBsaXN0SXRlbXMuc2xpY2UoYWN0aXZlLCBhY3RpdmUgKyAxKS5hZGRDbGFzcyhDTEFTU0VTLkFDVElWRSk7CgkJaWYob3B0aW9ucy5zY3JvbGwpIHsKCQkJdmFyIG9mZnNldCA9IDA7CgkJCWxpc3RJdGVtcy5zbGljZSgwLCBhY3RpdmUpLmVhY2goZnVuY3Rpb24oKSB7CgkJCQlvZmZzZXQgKz0gdGhpcy5vZmZzZXRIZWlnaHQ7CgkJCX0pOwoJCQlpZigob2Zmc2V0ICsgYWN0aXZlSXRlbVswXS5vZmZzZXRIZWlnaHQgLSBsaXN0LnNjcm9sbFRvcCgpKSA+IGxpc3RbMF0uY2xpZW50SGVpZ2h0KSB7CgkJCQlsaXN0LnNjcm9sbFRvcChvZmZzZXQgKyBhY3RpdmVJdGVtWzBdLm9mZnNldEhlaWdodCAtIGxpc3QuaW5uZXJIZWlnaHQoKSk7CgkJCX0gZWxzZSBpZihvZmZzZXQgPCBsaXN0LnNjcm9sbFRvcCgpKSB7CgkJCQlsaXN0LnNjcm9sbFRvcChvZmZzZXQpOwoJCQl9CgkJfQoJfTsKCglmdW5jdGlvbiBtb3ZlUG9zaXRpb24oc3RlcCkgewoJCWFjdGl2ZSArPSBzdGVwOwoJCWlmIChhY3RpdmUgPCAwKSB7CgkJCWFjdGl2ZSA9IGxpc3RJdGVtcy5zaXplKCkgLSAxOwoJCX0gZWxzZSBpZiAoYWN0aXZlID49IGxpc3RJdGVtcy5zaXplKCkpIHsKCQkJYWN0aXZlID0gMDsKCQl9Cgl9CgoJZnVuY3Rpb24gbGltaXROdW1iZXJPZkl0ZW1zKGF2YWlsYWJsZSkgewoJCXJldHVybiBvcHRpb25zLm1heCAmJiBvcHRpb25zLm1heCA8IGF2YWlsYWJsZQoJCQk/IG9wdGlvbnMubWF4CgkJCTogYXZhaWxhYmxlOwoJfQoKCWZ1bmN0aW9uIGZpbGxMaXN0KCkgewoJCWxpc3QuZW1wdHkoKTsKCQl2YXIgbWF4ID0gbGltaXROdW1iZXJPZkl0ZW1zKGRhdGEubGVuZ3RoKTsKCQlmb3IgKHZhciBpPTA7IGkgPCBtYXg7IGkrKykgewoJCQlpZiAoIWRhdGFbaV0pCgkJCQljb250aW51ZTsKCQkJdmFyIGZvcm1hdHRlZCA9IG9wdGlvbnMuZm9ybWF0SXRlbShkYXRhW2ldLmRhdGEsIGkrMSwgbWF4LCBkYXRhW2ldLnZhbHVlLCB0ZXJtKTsKCQkJaWYgKCBmb3JtYXR0ZWQgPT09IGZhbHNlICkKCQkJCWNvbnRpbnVlOwoJCQl2YXIgbGkgPSAkKCI8bGkvPiIpLmh0bWwoIG9wdGlvbnMuaGlnaGxpZ2h0KGZvcm1hdHRlZCwgdGVybSkgKS5hZGRDbGFzcyhpJTIgPT0gMCA/ICJhY19ldmVuIiA6ICJhY19vZGQiKS5hcHBlbmRUbyhsaXN0KVswXTsKCQkJJC5kYXRhKGxpLCAiYWNfZGF0YSIsIGRhdGFbaV0pOwoJCX0KCQlsaXN0SXRlbXMgPSBsaXN0LmZpbmQoImxpIik7CgkJaWYgKCBvcHRpb25zLnNlbGVjdEZpcnN0ICkgewoJCQlsaXN0SXRlbXMuc2xpY2UoMCwgMSkuYWRkQ2xhc3MoQ0xBU1NFUy5BQ1RJVkUpOwoJCQlhY3RpdmUgPSAwOwoJCX0KCQkvLyBhcHBseSBiZ2lmcmFtZSBpZiBhdmFpbGFibGUKCQlpZiAoICQuZm4uYmdpZnJhbWUgKQoJCQlsaXN0LmJnaWZyYW1lKCk7Cgl9CgoJcmV0dXJuIHsKCQlkaXNwbGF5OiBmdW5jdGlvbihkLCBxKSB7CgkJCWluaXQoKTsKCQkJZGF0YSA9IGQ7CgkJCXRlcm0gPSBxOwoJCQlmaWxsTGlzdCgpOwoJCX0sCgkJbmV4dDogZnVuY3Rpb24oKSB7CgkJCW1vdmVTZWxlY3QoMSk7CgkJfSwKCQlwcmV2OiBmdW5jdGlvbigpIHsKCQkJbW92ZVNlbGVjdCgtMSk7CgkJfSwKCQlwYWdlVXA6IGZ1bmN0aW9uKCkgewoJCQlpZiAoYWN0aXZlICE9IDAgJiYgYWN0aXZlIC0gOCA8IDApIHsKCQkJCW1vdmVTZWxlY3QoIC1hY3RpdmUgKTsKCQkJfSBlbHNlIHsKCQkJCW1vdmVTZWxlY3QoLTgpOwoJCQl9CgkJfSwKCQlwYWdlRG93bjogZnVuY3Rpb24oKSB7CgkJCWlmIChhY3RpdmUgIT0gbGlzdEl0ZW1zLnNpemUoKSAtIDEgJiYgYWN0aXZlICsgOCA+IGxpc3RJdGVtcy5zaXplKCkpIHsKCQkJCW1vdmVTZWxlY3QoIGxpc3RJdGVtcy5zaXplKCkgLSAxIC0gYWN0aXZlICk7CgkJCX0gZWxzZSB7CgkJCQltb3ZlU2VsZWN0KDgpOwoJCQl9CgkJfSwKCQloaWRlOiBmdW5jdGlvbigpIHsKCQkJZWxlbWVudCAmJiBlbGVtZW50LmhpZGUoKTsKCQkJbGlzdEl0ZW1zICYmIGxpc3RJdGVtcy5yZW1vdmVDbGFzcyhDTEFTU0VTLkFDVElWRSk7CgkJCWFjdGl2ZSA9IC0xOwoJCX0sCgkJdmlzaWJsZSA6IGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gZWxlbWVudCAmJiBlbGVtZW50LmlzKCI6dmlzaWJsZSIpOwoJCX0sCgkJY3VycmVudDogZnVuY3Rpb24oKSB7CgkJCXJldHVybiB0aGlzLnZpc2libGUoKSAmJiAobGlzdEl0ZW1zLmZpbHRlcigiLiIgKyBDTEFTU0VTLkFDVElWRSlbMF0gfHwgb3B0aW9ucy5zZWxlY3RGaXJzdCAmJiBsaXN0SXRlbXNbMF0pOwoJCX0sCgkJc2hvdzogZnVuY3Rpb24oKSB7CgkJCXZhciBvZmZzZXQgPSAkKGlucHV0KS5vZmZzZXQoKTsKCQkJZWxlbWVudC5jc3MoewoJCQkJd2lkdGg6IHR5cGVvZiBvcHRpb25zLndpZHRoID09ICJzdHJpbmciIHx8IG9wdGlvbnMud2lkdGggPiAwID8gb3B0aW9ucy53aWR0aCA6ICQoaW5wdXQpLmlubmVyV2lkdGgoKSwKCQkJCXRvcDogb2Zmc2V0LnRvcCArIGlucHV0Lm9mZnNldEhlaWdodCwKCQkJCWxlZnQ6IG9mZnNldC5sZWZ0CgkJCX0pLnNob3coKTsKCQkJb3B0aW9ucy5zaG93KGVsZW1lbnQpOwoJCQlpZihvcHRpb25zLnNjcm9sbCkgewoJCQkJbGlzdC5zY3JvbGxUb3AoMCk7CgkJCQlsaXN0LmNzcyh7CgkJCQkJbWF4SGVpZ2h0OiBvcHRpb25zLnNjcm9sbEhlaWdodCwKCQkJCQlvdmVyZmxvdzogJ2F1dG8nCgkJCQl9KTsKCgkJCQlpZigkLmJyb3dzZXIubXNpZSAmJiB0eXBlb2YgZG9jdW1lbnQuYm9keS5zdHlsZS5tYXhIZWlnaHQgPT09ICJ1bmRlZmluZWQiKSB7CgkJCQkJdmFyIGxpc3RIZWlnaHQgPSAwOwoJCQkJCWxpc3RJdGVtcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJCQlsaXN0SGVpZ2h0ICs9IHRoaXMub2Zmc2V0SGVpZ2h0OwoJCQkJCX0pOwoJCQkJCXZhciBzY3JvbGxiYXJzVmlzaWJsZSA9IGxpc3RIZWlnaHQgPiBvcHRpb25zLnNjcm9sbEhlaWdodDsKCQkJCQlsaXN0LmNzcygnaGVpZ2h0Jywgc2Nyb2xsYmFyc1Zpc2libGUgPyBvcHRpb25zLnNjcm9sbEhlaWdodCA6IGxpc3RIZWlnaHQgKTsKCQkJCQlpZiAoIXNjcm9sbGJhcnNWaXNpYmxlKSB7CgkJCQkJCS8vIElFIGRvZXNuJ3QgcmVjYWxjdWxhdGUgd2lkdGggd2hlbiBzY3JvbGxiYXIgZGlzYXBwZWFycwoJCQkJCQlsaXN0SXRlbXMud2lkdGgoIGxpc3Qud2lkdGgoKSAtIHBhcnNlSW50KGxpc3RJdGVtcy5jc3MoInBhZGRpbmctbGVmdCIpKSAtIHBhcnNlSW50KGxpc3RJdGVtcy5jc3MoInBhZGRpbmctcmlnaHQiKSkgKTsKCQkJCQl9CgkJCQl9CgoJCQl9CgkJfSwKCQlzZWxlY3RlZDogZnVuY3Rpb24oKSB7CgkJCXZhciBzZWxlY3RlZCA9IGxpc3RJdGVtcyAmJiBsaXN0SXRlbXMuZmlsdGVyKCIuIiArIENMQVNTRVMuQUNUSVZFKS5yZW1vdmVDbGFzcyhDTEFTU0VTLkFDVElWRSk7CgkJCXJldHVybiBzZWxlY3RlZCAmJiBzZWxlY3RlZC5sZW5ndGggJiYgJC5kYXRhKHNlbGVjdGVkWzBdLCAiYWNfZGF0YSIpOwoJCX0sCgkJZW1wdHlMaXN0OiBmdW5jdGlvbiAoKXsKCQkJbGlzdCAmJiBsaXN0LmVtcHR5KCk7CgkJfSwKCQl1bmJpbmQ6IGZ1bmN0aW9uKCkgewoJCQllbGVtZW50ICYmIGVsZW1lbnQucmVtb3ZlKCk7CgkJfQoJfTsKfTsKCiQuZm4uc2VsZWN0aW9uID0gZnVuY3Rpb24oc3RhcnQsIGVuZCkgewoJaWYgKHN0YXJ0ICE9PSB1bmRlZmluZWQpIHsKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlpZiggdGhpcy5jcmVhdGVUZXh0UmFuZ2UgKXsKCQkJCXZhciBzZWxSYW5nZSA9IHRoaXMuY3JlYXRlVGV4dFJhbmdlKCk7CgkJCQlpZiAoZW5kID09PSB1bmRlZmluZWQgfHwgc3RhcnQgPT0gZW5kKSB7CgkJCQkJc2VsUmFuZ2UubW92ZSgiY2hhcmFjdGVyIiwgc3RhcnQpOwoJCQkJCXNlbFJhbmdlLnNlbGVjdCgpOwoJCQkJfSBlbHNlIHsKCQkJCQlzZWxSYW5nZS5jb2xsYXBzZSh0cnVlKTsKCQkJCQlzZWxSYW5nZS5tb3ZlU3RhcnQoImNoYXJhY3RlciIsIHN0YXJ0KTsKCQkJCQlzZWxSYW5nZS5tb3ZlRW5kKCJjaGFyYWN0ZXIiLCBlbmQpOwoJCQkJCXNlbFJhbmdlLnNlbGVjdCgpOwoJCQkJfQoJCQl9IGVsc2UgaWYoIHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UgKXsKCQkJCXRoaXMuc2V0U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsIGVuZCk7CgkJCX0gZWxzZSBpZiggdGhpcy5zZWxlY3Rpb25TdGFydCApewoJCQkJdGhpcy5zZWxlY3Rpb25TdGFydCA9IHN0YXJ0OwoJCQkJdGhpcy5zZWxlY3Rpb25FbmQgPSBlbmQ7CgkJCX0KCQl9KTsKCX0KCXZhciBmaWVsZCA9IHRoaXNbMF07CglpZiAoIGZpZWxkLmNyZWF0ZVRleHRSYW5nZSApIHsKCQl2YXIgcmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKSwKCQkJb3JpZyA9IGZpZWxkLnZhbHVlLAoJCQl0ZXN0c3RyaW5nID0gIjwtPiIsCgkJCXRleHRMZW5ndGggPSByYW5nZS50ZXh0Lmxlbmd0aDsKCQlyYW5nZS50ZXh0ID0gdGVzdHN0cmluZzsKCQl2YXIgY2FyZXRBdCA9IGZpZWxkLnZhbHVlLmluZGV4T2YodGVzdHN0cmluZyk7CgkJZmllbGQudmFsdWUgPSBvcmlnOwoJCXRoaXMuc2VsZWN0aW9uKGNhcmV0QXQsIGNhcmV0QXQgKyB0ZXh0TGVuZ3RoKTsKCQlyZXR1cm4gewoJCQlzdGFydDogY2FyZXRBdCwKCQkJZW5kOiBjYXJldEF0ICsgdGV4dExlbmd0aAoJCX0KCX0gZWxzZSBpZiggZmllbGQuc2VsZWN0aW9uU3RhcnQgIT09IHVuZGVmaW5lZCApewoJCXJldHVybiB7CgkJCXN0YXJ0OiBmaWVsZC5zZWxlY3Rpb25TdGFydCwKCQkJZW5kOiBmaWVsZC5zZWxlY3Rpb25FbmQKCQl9Cgl9Cn07Cgp9KShqUXVlcnkpOwovKioKICogalF1ZXJ5LmZuLnNvcnRFbGVtZW50cwogKiAtLS0tLS0tLS0tLS0tLQogKiBAYXV0aG9yIEphbWVzIFBhZG9sc2V5IChodHRwOi8vamFtZXMucGFkb2xzZXkuY29tKQogKiBAdmVyc2lvbiAwLjExCiAqIEB1cGRhdGVkIDE4LU1BUi0yMDEwCiAqIC0tLS0tLS0tLS0tLS0tCiAqIEBwYXJhbSBGdW5jdGlvbiBjb21wYXJhdG9yOgogKiAgIEV4YWN0bHkgdGhlIHNhbWUgYmVoYXZpb3VyIGFzIFsxLDIsM10uc29ydChjb21wYXJhdG9yKQogKgogKiBAcGFyYW0gRnVuY3Rpb24gZ2V0U29ydGFibGUKICogICBBIGZ1bmN0aW9uIHRoYXQgc2hvdWxkIHJldHVybiB0aGUgZWxlbWVudCB0aGF0IGlzCiAqICAgdG8gYmUgc29ydGVkLiBUaGUgY29tcGFyYXRvciB3aWxsIHJ1biBvbiB0aGUKICogICBjdXJyZW50IGNvbGxlY3Rpb24sIGJ1dCB5b3UgbWF5IHdhbnQgdGhlIGFjdHVhbAogKiAgIHJlc3VsdGluZyBzb3J0IHRvIG9jY3VyIG9uIGEgcGFyZW50IG9yIGFub3RoZXIKICogICBhc3NvY2lhdGVkIGVsZW1lbnQuCiAqCiAqICAgRS5nLiAkKCd0ZCcpLnNvcnRFbGVtZW50cyhjb21wYXJhdG9yLCBmdW5jdGlvbigpewogKiAgICAgIHJldHVybiB0aGlzLnBhcmVudE5vZGU7CiAqICAgfSkKICoKICogICBUaGUgPHRkPidzIHBhcmVudCAoPHRyPikgd2lsbCBiZSBzb3J0ZWQgaW5zdGVhZAogKiAgIG9mIHRoZSA8dGQ+IGl0c2VsZi4KICovCmpRdWVyeS5mbi5zb3J0RWxlbWVudHMgPSAoZnVuY3Rpb24oKXsKCiAgICB2YXIgc29ydCA9IFtdLnNvcnQ7CgogICAgcmV0dXJuIGZ1bmN0aW9uKGNvbXBhcmF0b3IsIGdldFNvcnRhYmxlKSB7CgogICAgICAgIGdldFNvcnRhYmxlID0gZ2V0U29ydGFibGUgfHwgZnVuY3Rpb24oKXtyZXR1cm4gdGhpczt9OwoKICAgICAgICB2YXIgcGxhY2VtZW50cyA9IHRoaXMubWFwKGZ1bmN0aW9uKCl7CgogICAgICAgICAgICB2YXIgc29ydEVsZW1lbnQgPSBnZXRTb3J0YWJsZS5jYWxsKHRoaXMpLAogICAgICAgICAgICAgICAgcGFyZW50Tm9kZSA9IHNvcnRFbGVtZW50LnBhcmVudE5vZGUsCgogICAgICAgICAgICAgICAgLy8gU2luY2UgdGhlIGVsZW1lbnQgaXRzZWxmIHdpbGwgY2hhbmdlIHBvc2l0aW9uLCB3ZSBoYXZlCiAgICAgICAgICAgICAgICAvLyB0byBoYXZlIHNvbWUgd2F5IG9mIHN0b3JpbmcgaXQncyBvcmlnaW5hbCBwb3NpdGlvbiBpbgogICAgICAgICAgICAgICAgLy8gdGhlIERPTS4gVGhlIGVhc2llc3Qgd2F5IGlzIHRvIGhhdmUgYSAnZmxhZycgbm9kZToKICAgICAgICAgICAgICAgIG5leHRTaWJsaW5nID0gcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoCiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpLAogICAgICAgICAgICAgICAgICAgIHNvcnRFbGVtZW50Lm5leHRTaWJsaW5nCiAgICAgICAgICAgICAgICApOwoKICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkgewoKICAgICAgICAgICAgICAgIGlmIChwYXJlbnROb2RlID09PSB0aGlzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKAogICAgICAgICAgICAgICAgICAgICAgICAiWW91IGNhbid0IHNvcnQgZWxlbWVudHMgaWYgYW55IG9uZSBpcyBhIGRlc2NlbmRhbnQgb2YgYW5vdGhlci4iCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBJbnNlcnQgYmVmb3JlIGZsYWc6CiAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLCBuZXh0U2libGluZyk7CiAgICAgICAgICAgICAgICAvLyBSZW1vdmUgZmxhZzoKICAgICAgICAgICAgICAgIHBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobmV4dFNpYmxpbmcpOwoKICAgICAgICAgICAgfTsKCiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiBzb3J0LmNhbGwodGhpcywgY29tcGFyYXRvcikuZWFjaChmdW5jdGlvbihpKXsKICAgICAgICAgICAgcGxhY2VtZW50c1tpXS5jYWxsKGdldFNvcnRhYmxlLmNhbGwodGhpcykpOwogICAgICAgIH0pOwoKICAgIH07Cgp9KSgpOwovKiEKICogQXBpR2VuIDIuOC4wIC0gQVBJIGRvY3VtZW50YXRpb24gZ2VuZXJhdG9yIGZvciBQSFAgNS4zKwogKgogKiBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxMSBEYXZpZCBHcnVkbCAoaHR0cDovL2RhdmlkZ3J1ZGwuY29tKQogKiBDb3B5cmlnaHQgKGMpIDIwMTEtMjAxMiBKYXJvc2xhdiBIYW5zbMOtayAoaHR0cHM6Ly9naXRodWIuY29tL2t1a3VsaWNoKQogKiBDb3B5cmlnaHQgKGMpIDIwMTEtMjAxMiBPbmTFmWVqIE5lxaFwb3IgKGh0dHBzOi8vZ2l0aHViLmNvbS9BbmRyZXdzdmlsbGUpCiAqIENvcHlyaWdodCAoYykgMjAxMiBPbGl2aWVyIExhdmlhbGUgKGh0dHBzOi8vZ2l0aHViLmNvbS9vbHZsdmwpCiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3CiAqIHRoZSBmaWxlIExJQ0VOU0UubWQgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCiQoZnVuY3Rpb24oKSB7Cgl2YXIgJGRvY3VtZW50ID0gJChkb2N1bWVudCk7Cgl2YXIgJG5hdmlnYXRpb24gPSAkKCcjbmF2aWdhdGlvbicpOwoJdmFyIG5hdmlnYXRpb25IZWlnaHQgPSAkKCcjbmF2aWdhdGlvbicpLmhlaWdodCgpOwoJdmFyICRsZWZ0ID0gJCgnI2xlZnQnKTsKCXZhciAkcmlnaHQgPSAkKCcjcmlnaHQnKTsKCXZhciAkcmlnaHRJbm5lciA9ICQoJyNyaWdodElubmVyJyk7Cgl2YXIgJHNwbGl0dGVyID0gJCgnI3NwbGl0dGVyJyk7Cgl2YXIgJGdyb3VwcyA9ICQoJyNncm91cHMnKTsKCXZhciAkY29udGVudCA9ICQoJyNjb250ZW50Jyk7CgoJLy8gTWVudQoKCS8vIEhpZGUgZGVlcCBwYWNrYWdlcyBhbmQgbmFtZXNwYWNlcwoJJCgndWwgc3BhbicsICRncm91cHMpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7CgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQlldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCQkkKHRoaXMpCgkJCS50b2dnbGVDbGFzcygnY29sbGFwc2VkJykKCQkJLnBhcmVudCgpCgkJCQkubmV4dCgndWwnKQoJCQkJCS50b2dnbGVDbGFzcygnY29sbGFwc2VkJyk7Cgl9KS5jbGljaygpOwoKCSRhY3RpdmUgPSAkKCd1bCBsaS5hY3RpdmUnLCAkZ3JvdXBzKTsKCWlmICgkYWN0aXZlLmxlbmd0aCA+IDApIHsKCQkvLyBPcGVuIGFjdGl2ZQoJCSQoJz4gYSA+IHNwYW4nLCAkYWN0aXZlKS5jbGljaygpOwoJfSBlbHNlIHsKCQkkbWFpbiA9ICQoJz4gdWwgPiBsaS5tYWluJywgJGdyb3Vwcyk7CgkJaWYgKCRtYWluLmxlbmd0aCA+IDApIHsKCQkJLy8gT3BlbiBmaXJzdCBsZXZlbCBvZiB0aGUgbWFpbiBwcm9qZWN0CgkJCSQoJz4gYSA+IHNwYW4nLCAkbWFpbikuY2xpY2soKTsKCQl9IGVsc2UgewoJCQkvLyBPcGVuIGZpcnN0IGxldmVsIG9mIGFsbAoJCQkkKCc+IHVsID4gbGkgPiBhID4gc3BhbicsICRncm91cHMpLmNsaWNrKCk7CgkJfQoJfQoKCS8vIENvbnRlbnQKCgkvLyBTZWFyY2ggYXV0b2NvbXBsZXRpb24KCXZhciBhdXRvY29tcGxldGVGb3VuZCA9IGZhbHNlOwoJdmFyIGF1dG9jb21wbGV0ZUZpbGVzID0geydjJzogJ2NsYXNzJywgJ2NvJzogJ2NvbnN0YW50JywgJ2YnOiAnZnVuY3Rpb24nLCAnbSc6ICdjbGFzcycsICdtbSc6ICdjbGFzcycsICdwJzogJ2NsYXNzJywgJ21wJzogJ2NsYXNzJywgJ2NjJzogJ2NsYXNzJ307Cgl2YXIgJHNlYXJjaCA9ICQoJyNzZWFyY2ggaW5wdXRbbmFtZT1xXScpOwoJJHNlYXJjaAoJCS5hdXRvY29tcGxldGUoQXBpR2VuLmVsZW1lbnRzLCB7CgkJCW1hdGNoQ29udGFpbnM6IHRydWUsCgkJCXNjcm9sbEhlaWdodDogMjAwLAoJCQltYXg6IDIwLAoJCQlmb3JtYXRJdGVtOiBmdW5jdGlvbihkYXRhKSB7CgkJCQlyZXR1cm4gZGF0YVsxXS5yZXBsYWNlKC9eKC4rXFwpKC4rKSQvLCAnPHNwYW4+PHNtYWxsPiQxPC9zbWFsbD4kMjwvc3Bhbj4nKTsKCQkJfSwKCQkJZm9ybWF0TWF0Y2g6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXJldHVybiBkYXRhWzFdOwoJCQl9LAoJCQlmb3JtYXRSZXN1bHQ6IGZ1bmN0aW9uKGRhdGEpIHsKCQkJCXJldHVybiBkYXRhWzFdOwoJCQl9LAoJCQlzaG93OiBmdW5jdGlvbigkbGlzdCkgewoJCQkJdmFyICRpdGVtcyA9ICQoJ2xpIHNwYW4nLCAkbGlzdCk7CgkJCQl2YXIgbWF4V2lkdGggPSBNYXRoLm1heC5hcHBseShudWxsLCAkaXRlbXMubWFwKGZ1bmN0aW9uKCkgewoJCQkJCXJldHVybiAkKHRoaXMpLndpZHRoKCk7CgkJCQl9KSk7CgkJCQkvLyAxMHB4IHBhZGRpbmcKCQkJCSRsaXN0LndpZHRoKE1hdGgubWF4KG1heFdpZHRoICsgMTAsICRzZWFyY2guaW5uZXJXaWR0aCgpKSk7CgkJCX0KCQl9KS5yZXN1bHQoZnVuY3Rpb24oZXZlbnQsIGRhdGEpIHsKCQkJYXV0b2NvbXBsZXRlRm91bmQgPSB0cnVlOwoJCQl2YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnLycpOwoJCQlsb2NhdGlvbi5wb3AoKTsKCQkJdmFyIHBhcnRzID0gZGF0YVsxXS5zcGxpdCgvOjp8JC8pOwoJCQl2YXIgZmlsZSA9ICQuc3ByaW50ZihBcGlHZW4uY29uZmlnLnRlbXBsYXRlcy5tYWluW2F1dG9jb21wbGV0ZUZpbGVzW2RhdGFbMF1dXS5maWxlbmFtZSwgcGFydHNbMF0ucmVwbGFjZSgvW15cd10vZywgJy4nKSk7CgkJCWlmIChwYXJ0c1sxXSkgewoJCQkJZmlsZSArPSAnIycgKyAoJ21tJyA9PT0gZGF0YVswXSB8fCAnbXAnID09PSBkYXRhWzBdID8gJ20nIDogJycpICsgcGFydHNbMV0ucmVwbGFjZSgvKFtcd10rKVwoXCkvLCAnXyQxJyk7CgkJCX0KCQkJbG9jYXRpb24ucHVzaChmaWxlKTsKCQkJd2luZG93LmxvY2F0aW9uID0gbG9jYXRpb24uam9pbignLycpOwoKCQkJLy8gV29ya2Fyb3VuZCBmb3IgT3BlcmEgYnVnCgkJCSQodGhpcykuY2xvc2VzdCgnZm9ybScpLmF0dHIoJ2FjdGlvbicsIGxvY2F0aW9uLmpvaW4oJy8nKSk7CgkJfSkuY2xvc2VzdCgnZm9ybScpCgkJCS5zdWJtaXQoZnVuY3Rpb24oKSB7CgkJCQl2YXIgcXVlcnkgPSAkc2VhcmNoLnZhbCgpOwoJCQkJaWYgKCcnID09PSBxdWVyeSkgewoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCgkJCQl2YXIgbGFiZWwgPSAkKCcjc2VhcmNoIGlucHV0W25hbWU9bW9yZV0nKS52YWwoKTsKCQkJCWlmICghYXV0b2NvbXBsZXRlRm91bmQgJiYgbGFiZWwgJiYgLTEgPT09IHF1ZXJ5LmluZGV4T2YoJ21vcmU6JykpIHsKCQkJCQkkc2VhcmNoLnZhbChxdWVyeSArICcgbW9yZTonICsgbGFiZWwpOwoJCQkJfQoKCQkJCXJldHVybiAhYXV0b2NvbXBsZXRlRm91bmQgJiYgJycgIT09ICQoJyNzZWFyY2ggaW5wdXRbbmFtZT1jeF0nKS52YWwoKTsKCQkJfSk7CgoJLy8gU2F2ZSBuYXR1cmFsIG9yZGVyCgkkKCd0YWJsZS5zdW1tYXJ5IHRyW2RhdGEtb3JkZXJdJywgJGNvbnRlbnQpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCQlkbyB7CgkJCWluZGV4ID0gJzAnICsgaW5kZXg7CgkJfSB3aGlsZSAoaW5kZXgubGVuZ3RoIDwgMyk7CgkJJCh0aGlzKS5hdHRyKCdkYXRhLW9yZGVyLW5hdHVyYWwnLCBpbmRleCk7Cgl9KTsKCgkvLyBTd2l0Y2ggYmV0d2VlbiBuYXR1cmFsIGFuZCBhbHBoYWJldGljYWwgb3JkZXIKCXZhciAkY2FwdGlvbiA9ICQoJ3RhYmxlLnN1bW1hcnknLCAkY29udGVudCkKCQkuZmlsdGVyKCc6aGFzKHRyW2RhdGEtb3JkZXJdKScpCgkJCS5wcmV2KCdoMicpOwoJJGNhcHRpb24KCQkuY2xpY2soZnVuY3Rpb24oKSB7CgkJCXZhciAkdGhpcyA9ICQodGhpcyk7CgkJCXZhciBvcmRlciA9ICR0aGlzLmRhdGEoJ29yZGVyJykgfHwgJ25hdHVyYWwnOwoJCQlvcmRlciA9ICduYXR1cmFsJyA9PT0gb3JkZXIgPyAnYWxwaGFiZXRpY2FsJyA6ICduYXR1cmFsJzsKCQkJJHRoaXMuZGF0YSgnb3JkZXInLCBvcmRlcik7CgkJCSQuY29va2llKCdvcmRlcicsIG9yZGVyLCB7ZXhwaXJlczogMzY1fSk7CgkJCXZhciBhdHRyID0gJ2FscGhhYmV0aWNhbCcgPT09IG9yZGVyID8gJ2RhdGEtb3JkZXInIDogJ2RhdGEtb3JkZXItbmF0dXJhbCc7CgkJCSR0aGlzCgkJCQkubmV4dCgndGFibGUnKQoJCQkJCS5maW5kKCd0cicpLnNvcnRFbGVtZW50cyhmdW5jdGlvbihhLCBiKSB7CgkJCQkJCXJldHVybiAkKGEpLmF0dHIoYXR0cikgPiAkKGIpLmF0dHIoYXR0cikgPyAxIDogLTE7CgkJCQkJfSk7CgkJCXJldHVybiBmYWxzZTsKCQl9KQoJCS5hZGRDbGFzcygnc3dpdGNoYWJsZScpCgkJLmF0dHIoJ3RpdGxlJywgJ1N3aXRjaCBiZXR3ZWVuIG5hdHVyYWwgYW5kIGFscGhhYmV0aWNhbCBvcmRlcicpOwoJaWYgKChudWxsID09PSAkLmNvb2tpZSgnb3JkZXInKSAmJiAnYWxwaGFiZXRpY2FsJyA9PT0gQXBpR2VuLmNvbmZpZy5vcHRpb25zLmVsZW1lbnRzT3JkZXIpIHx8ICdhbHBoYWJldGljYWwnID09PSAkLmNvb2tpZSgnb3JkZXInKSkgewoJCSRjYXB0aW9uLmNsaWNrKCk7Cgl9CgoJLy8gT3BlbiBkZXRhaWxzCglpZiAoQXBpR2VuLmNvbmZpZy5vcHRpb25zLmVsZW1lbnREZXRhaWxzQ29sbGFwc2VkKSB7CgkJJCgndHInLCAkY29udGVudCkuZmlsdGVyKCc6aGFzKC5kZXRhaWxlZCknKQoJCQkuY2xpY2soZnVuY3Rpb24oKSB7CgkJCQl2YXIgJHRoaXMgPSAkKHRoaXMpOwoJCQkJJCgnLnNob3J0JywgJHRoaXMpLmhpZGUoKTsKCQkJCSQoJy5kZXRhaWxlZCcsICR0aGlzKS5zaG93KCk7CgkJCX0pOwoJfQoKCS8vIFNwbGl0dGVyCgl2YXIgc3BsaXR0ZXJXaWR0aCA9ICRzcGxpdHRlci53aWR0aCgpOwoJZnVuY3Rpb24gc2V0U3BsaXR0ZXJQb3NpdGlvbihwb3NpdGlvbikKCXsKCQkkbGVmdC53aWR0aChwb3NpdGlvbik7CgkJJHJpZ2h0LmNzcygnbWFyZ2luLWxlZnQnLCBwb3NpdGlvbiArIHNwbGl0dGVyV2lkdGgpOwoJCSRzcGxpdHRlci5jc3MoJ2xlZnQnLCBwb3NpdGlvbik7Cgl9CglmdW5jdGlvbiBzZXROYXZpZ2F0aW9uUG9zaXRpb24oKQoJewoJCXZhciBoZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCkgLSBuYXZpZ2F0aW9uSGVpZ2h0OwoJCSRsZWZ0LmhlaWdodChoZWlnaHQpOwoJCSRzcGxpdHRlci5oZWlnaHQoaGVpZ2h0KTsKCQkkcmlnaHQuaGVpZ2h0KGhlaWdodCk7Cgl9CglmdW5jdGlvbiBzZXRDb250ZW50V2lkdGgoKQoJewoJCXZhciB3aWR0aCA9ICRyaWdodElubmVyLndpZHRoKCk7CgkJJHJpZ2h0SW5uZXIKCQkJLnRvZ2dsZUNsYXNzKCdtZWRpdW0nLCB3aWR0aCA8PSA5NjApCgkJCS50b2dnbGVDbGFzcygnc21hbGwnLCB3aWR0aCA8PSA2NTApOwoJfQoJJHNwbGl0dGVyLm1vdXNlZG93bihmdW5jdGlvbigpIHsKCQkJJHNwbGl0dGVyLmFkZENsYXNzKCdhY3RpdmUnKTsKCgkJCSRkb2N1bWVudC5tb3VzZW1vdmUoZnVuY3Rpb24oZXZlbnQpIHsKCQkJCWlmIChldmVudC5wYWdlWCA+PSAyMzAgJiYgJGRvY3VtZW50LndpZHRoKCkgLSBldmVudC5wYWdlWCA+PSA2MDAgKyBzcGxpdHRlcldpZHRoKSB7CgkJCQkJc2V0U3BsaXR0ZXJQb3NpdGlvbihldmVudC5wYWdlWCk7CgkJCQkJc2V0Q29udGVudFdpZHRoKCk7CgkJCQl9CgkJCX0pOwoKCQkJJCgpCgkJCQkuYWRkKCRzcGxpdHRlcikKCQkJCS5hZGQoJGRvY3VtZW50KQoJCQkJCS5tb3VzZXVwKGZ1bmN0aW9uKCkgewoJCQkJCQkkc3BsaXR0ZXIKCQkJCQkJCS5yZW1vdmVDbGFzcygnYWN0aXZlJykKCQkJCQkJCS51bmJpbmQoJ21vdXNldXAnKTsKCQkJCQkJJGRvY3VtZW50CgkJCQkJCQkudW5iaW5kKCdtb3VzZW1vdmUnKQoJCQkJCQkJLnVuYmluZCgnbW91c2V1cCcpOwoKCQkJCQkJJC5jb29raWUoJ3NwbGl0dGVyJywgcGFyc2VJbnQoJHNwbGl0dGVyLmNzcygnbGVmdCcpKSwge2V4cGlyZXM6IDM2NX0pOwoJCQkJCX0pOwoKCQkJcmV0dXJuIGZhbHNlOwoJCX0pOwoJdmFyIHNwbGl0dGVyUG9zaXRpb24gPSAkLmNvb2tpZSgnc3BsaXR0ZXInKTsKCWlmIChudWxsICE9PSBzcGxpdHRlclBvc2l0aW9uKSB7CgkJc2V0U3BsaXR0ZXJQb3NpdGlvbihwYXJzZUludChzcGxpdHRlclBvc2l0aW9uKSk7Cgl9CglzZXROYXZpZ2F0aW9uUG9zaXRpb24oKTsKCXNldENvbnRlbnRXaWR0aCgpOwoJJCh3aW5kb3cpCgkJLnJlc2l6ZShzZXROYXZpZ2F0aW9uUG9zaXRpb24pCgkJLnJlc2l6ZShzZXRDb250ZW50V2lkdGgpOwoKCS8vIFNlbGVjdCBzZWxlY3RlZCBsaW5lcwoJdmFyIG1hdGNoZXMgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkubWF0Y2goL15cZCsoPzotXGQrKT8oPzosXGQrKD86LVxkKyk/KSokLyk7CglpZiAobnVsbCAhPT0gbWF0Y2hlcykgewoJCXZhciBsaXN0cyA9IG1hdGNoZXNbMF0uc3BsaXQoJywnKTsKCQlmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RzLmxlbmd0aDsgaSsrKSB7CgkJCXZhciBsaW5lcyA9IGxpc3RzW2ldLnNwbGl0KCctJyk7CgkJCWxpbmVzWzFdID0gbGluZXNbMV0gfHwgbGluZXNbMF07CgkJCWZvciAodmFyIGogPSBsaW5lc1swXTsgaiA8PSBsaW5lc1sxXTsgaisrKSB7CgkJCQkkKCcjJyArIGopLmFkZENsYXNzKCdzZWxlY3RlZCcpOwoJCQl9CgkJfQoKCQl2YXIgJGZpcnN0TGluZSA9ICQoJyMnICsgcGFyc2VJbnQobWF0Y2hlc1swXSkpOwoJCWlmICgkZmlyc3RMaW5lLmxlbmd0aCA+IDApIHsKCQkJJHJpZ2h0LnNjcm9sbFRvcCgkZmlyc3RMaW5lLm9mZnNldCgpLnRvcCk7CgkJfQoJfQoKCS8vIFNhdmUgc2VsZWN0ZWQgbGluZXMKCXZhciBsYXN0TGluZTsKCSQoJ2EubCcpLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7CgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCgkJdmFyICRzZWxlY3RlZExpbmUgPSAkKHRoaXMpLnBhcmVudCgpOwoJCXZhciBzZWxlY3RlZExpbmUgPSBwYXJzZUludCgkc2VsZWN0ZWRMaW5lLmF0dHIoJ2lkJykpOwoKCQlpZiAoZXZlbnQuc2hpZnRLZXkpIHsKCQkJaWYgKGxhc3RMaW5lKSB7CgkJCQlmb3IgKHZhciBpID0gTWF0aC5taW4oc2VsZWN0ZWRMaW5lLCBsYXN0TGluZSk7IGkgPD0gTWF0aC5tYXgoc2VsZWN0ZWRMaW5lLCBsYXN0TGluZSk7IGkrKykgewoJCQkJCSQoJyMnICsgaSkuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQkkc2VsZWN0ZWRMaW5lLmFkZENsYXNzKCdzZWxlY3RlZCcpOwoJCQl9CgkJfSBlbHNlIGlmIChldmVudC5jdHJsS2V5KSB7CgkJCSRzZWxlY3RlZExpbmUudG9nZ2xlQ2xhc3MoJ3NlbGVjdGVkJyk7CgkJfSBlbHNlIHsKCQkJdmFyICRzZWxlY3RlZCA9ICQoJy5sLnNlbGVjdGVkJykKCQkJCS5ub3QoJHNlbGVjdGVkTGluZSkKCQkJCS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTsKCQkJaWYgKCRzZWxlY3RlZC5sZW5ndGggPiAwKSB7CgkJCQkkc2VsZWN0ZWRMaW5lLmFkZENsYXNzKCdzZWxlY3RlZCcpOwoJCQl9IGVsc2UgewoJCQkJJHNlbGVjdGVkTGluZS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnKTsKCQkJfQoJCX0KCgkJbGFzdExpbmUgPSAkc2VsZWN0ZWRMaW5lLmhhc0NsYXNzKCdzZWxlY3RlZCcpID8gc2VsZWN0ZWRMaW5lIDogbnVsbDsKCgkJLy8gVXBkYXRlIGhhc2gKCQl2YXIgbGluZXMgPSAkKCcubC5zZWxlY3RlZCcpCgkJCS5tYXAoZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gcGFyc2VJbnQoJCh0aGlzKS5hdHRyKCdpZCcpKTsKCQkJfSkKCQkJLmdldCgpCgkJCS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHsKCQkJCXJldHVybiBhIC0gYjsKCQkJfSk7CgoJCXZhciBoYXNoID0gW107CgkJdmFyIGxpc3QgPSBbXTsKCQlmb3IgKHZhciBqID0gMDsgaiA8IGxpbmVzLmxlbmd0aDsgaisrKSB7CgkJCWlmICgwID09PSBqICYmIGogKyAxID09PSBsaW5lcy5sZW5ndGgpIHsKCQkJCWhhc2gucHVzaChsaW5lc1tqXSk7CgkJCX0gZWxzZSBpZiAoMCA9PT0gaikgewoJCQkJbGlzdFswXSA9IGxpbmVzW2pdOwoJCQl9IGVsc2UgaWYgKGxpbmVzW2ogLSAxXSArIDEgIT09IGxpbmVzW2pdICYmIGogKyAxID09PSBsaW5lcy5sZW5ndGgpIHsKCQkJCWhhc2gucHVzaChsaXN0LmpvaW4oJy0nKSk7CgkJCQloYXNoLnB1c2gobGluZXNbal0pOwoJCQl9IGVsc2UgaWYgKGxpbmVzW2ogLSAxXSArIDEgIT09IGxpbmVzW2pdKSB7CgkJCQloYXNoLnB1c2gobGlzdC5qb2luKCctJykpOwoJCQkJbGlzdCA9IFtsaW5lc1tqXV07CgkJCX0gZWxzZSBpZiAoaiArIDEgPT09IGxpbmVzLmxlbmd0aCkgewoJCQkJbGlzdFsxXSA9IGxpbmVzW2pdOwoJCQkJaGFzaC5wdXNoKGxpc3Quam9pbignLScpKTsKCQkJfSBlbHNlIHsKCQkJCWxpc3RbMV0gPSBsaW5lc1tqXTsKCQkJfQoJCX0KCgkJd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoLmpvaW4oJywnKTsKCX0pOwp9KTsKCg==",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sun, 09 Nov 2014 03:08:21 GMT",
                    "Content-Length": "131575",
                    "Date": "Sun, 09 Nov 2014 03:08:22 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}