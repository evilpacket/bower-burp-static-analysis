{
    "url": "http://localhost:9999/basisjs/basis-library/basis.min.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cross-site scripting (DOM-based)",
    "issueType": 2097936,
    "severity": "High",
    "confidence": "Firm",
    "issueBackground": "DOM-based cross-site scripting vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the HTML document in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.<br><br>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.<br><br>Users can be induced to visit the attacker's crafted URL in various ways, similar to the usual attack delivery vectors for reflected cross-site scripting vulnerabilities. ",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cross-site scripting vulnerabilities is not to dynamically write data into the HTML document that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing script code into the document. In many cases, the relevant data can be validated on a whitelist basis, to allow only content that is known to be safe. In other cases, it will be necessary to sanitize or encode the data. This can be a complex task, and depending on the context that the data is to be inserted may need to involve a combination of JavaScript escaping, HTML encoding, and URL encoding, in the appropriate sequence.",
    "issueDetail": "The application may be vulnerable to DOM-based cross-site scripting. Data is read from <b>location.href</b> and written to <b>the 'setAttribute()' function of a DOM element</b> via the following statement:<ul><li>t.setAttribute(\"href\",location.href),kt.remove(t)</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/basisjs/basis-library/basis.min.js",
                "path": "/basisjs/basis-library/basis.min.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9iYXNpc2pzL2Jhc2lzLWxpYnJhcnkvYmFzaXMubWluLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "HTTP/1.1 200 OK
Content-Length: 204042
Accept-Ranges: bytes
Content-Type: application/javascript
Date: Thu, 06 Nov 2014 12:11:10 GMT
Last-Modified: Thu, 06 Nov 2014 12:11:08 GMT

(function(){"use strict";var e={"0.js":"library","1.js":"basis.ui","2.js":"basis.l10n","3.js":"basis.event","4.js":"basis.data","5.js":"basis.dom.wrapper","6.js":"basis.template","7.js":"basis.template.html","8.js":"basis.dom.event","9.js":"basis.template.htmlfgen","a.js":"basis.dragdrop","b.js":"basis.dom.computedStyle","c.js":"basis.layout","d.js":"basis.data.dataset","e.js":"basis.data.value","f.js":"basis.data.index","g.js":"basis.data.object","h.js":"basis.entity","i.js":"basis.net.jsonp","j.js":"basis.net","k.js":"basis.net.service","l.js":"basis.net.ajax","m.js":"basis.ua","n.js":"basis.net.action","o.js":"basis.router","p.js":"basis.app"},t,n={"d.js":function(e,t,n,r,i,s,o,u){function k(e,t){var n={},r;e&&e.length&&(r=n.inserted=e),t&&t.length&&(r=n.deleted=t);if(r)return n}function L(e,t){return function r(t){return t?t.__extend__?t:(typeof t!="string"&&!Array.isArray(t)&&(t=null),c(n.event.createHandler(t,e),{__extend__:r})):null}(t)}function A(e,t,n,r){return new S(c({keyGetter:t,itemClass:n,create:function(e,t){var n=S.prototype.create.call(this,e,t);return n.ruleValue=e,n.setDataset(new r({ruleValue:e})),n}},e))}function U(e,t){if(!e.length)return 0;var n=t.value,r=t.object.basisObjectId,i,s,o,u,a=0,f=e.length-1;do{o=a+f>>1,u=e[o],i=u.value;if(n<i)f=o-1;else if(n>i)a=o+1;else{s=u.object.basisObjectId;if(r<s)f=o-1;else{if(!(r>s))return o;a=o+1}}}while(a<=f);return o+(i==n?s<r:i<n)}function W(e,t){return+(e.value>t.value)||-(e.value<t.value)||e.object.basisObjectId-t.object.basisObjectId}function Z(e,t,n){var r=e.sourceMap_[t.basisObjectId];if(r&&r.visited!==n){for(var i=r;i=i.ref;)if(i.object===e.source)return!0;r.visited=n;for(var i=r;i=i.ref;)if(Z(e,i.object,n||{}))return!0}}function et(e,t,n){var r=e.sourceMap_,i=e.members_,s=y(t),o=[];for(var u=0;u<s.length;u++){var a=s[u],f=a.basisObjectId;f||(n=a.ref,a=a.object,f=a.basisObjectId);var l=r[f];if(l)l.ref={object:n,ref:l.ref};else{l=r[f]={source:a,ref:{object:n,ref:null},visited:null,value:null};if(a instanceof E){var c=e.rule(a)||null;if(c instanceof E||c instanceof x)l.value=c,s.push({object:c,ref:a});i[f]=l,o.push(a),e.ruleEvents&&a.addHandler(e.ruleEvents,e)}else{a.addHandler(Y,e);for(var h=0,p=a.getItems();h<p.length;h++)s.push({object:p[h],ref:a})}}}return o}function tt(e,t,n){var r=e.sourceMap_,i=e.members_,s=y(t),o=[];for(var u=0;u<s.length;u++){var a=s[u],f=a.basisObjectId;f||(n=a.ref,a=a.object,f=a.basisObjectId);var l=r[f],c=l.value;for(var h=l,p=l;h=h.ref;){if(h.object===n){p.ref=h.ref;break}p=h}if(!l.ref){if(a instanceof E)delete i[f],o.push(a),e.ruleEvents&&a.removeHandler(e.ruleEvents,e),c&&s.push({object:c,ref:a});else{a.removeHandler(Y,e);for(var d=0,v=a.getItems();d<v.length;d++)s.push({object:v[d],ref:a})}delete r[f]}else c&&!Z(e,a)&&(l.value=null,s.push({object:c,ref:a}))}return o}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.Class,l=f.oneFunctionProperty,c=n.object.extend,h=n.object.values,p=n.getter,d=n.fn.$self,v=n.fn.$true,m=n.fn.$false,g=n.fn.$undef,y=n.array.from,b=n.event.create,w=n.data.SUBSCRIPTION,E=n.data.Object,S=n.data.KeyObjectMap,x=n.data.ReadOnlyDataset,T=n.data.Dataset,N=n.data.DatasetWrapper,C=T.setAccumulateState;w.add("SOURCE",{sourceChanged:function(e,t){t&&w.unlink("source",e,t),e.source&&w.link("source",e,e.source)},sourcesChanged:function(e,t){var n;if(n=t.inserted)for(var r=0,i;i=n[r];r++)w.link("source",e,n[r]);if(n=t.deleted)for(var r=0,i;i=n[r];r++)w.unlink("source",e,n[r])}},function(e,t){var n=t.sources||(t.source?[t.source]:[]);for(var r=0,i;i=n[r++];)e("source",t,i)}),w.addProperty("minuend"),w.addProperty("subtrahend");var O={itemsChanged:function(e,t){var n=this.members_,r={},i,s;if(t.inserted)for(var o=0;i=t.inserted[o];o++)s=i.basisObjectId,n[s]?n[s].count++:n[s]={count:1,object:i},r[s]=n[s];if(t.deleted)for(var o=0;i=t.deleted[o];o++)s=i.basisObjectId,r[s]=n[s],n[s].count--;this.applyRule(r)}},M=f(x,{className:a+".Merge",subscribeTo:w.SOURCE,emit_sourcesChanged:b("sourcesChanged","delta"),sources:null,sourceValues_:null,sourcesMap_:null,sourceDelta_:null,rule:function(e,t){return e>0},emit_ruleChanged:b("ruleChanged","oldRule"),listen:{source:O,sourceValue:{destroy:function(e){this.removeSource(e)}}},init:function(){x.prototype.init.call(this);var e=this.sources;this.sources=[],this.sourcesMap_={},this.sourceValues_=[],e&&this.setSources(e)},setRule:function(e){e=p(e||M.UNION);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(e){var t=this.members_,n=this.rule,r=this.sources.length,i=[],s=[],o,u,a;e||(e=t);for(var f in e)o=t[f],u=r&&o.count&&n(o.count,r),u!=f in this.items_&&(u?i.push(o.object):s.push(o.object)),o.count==0&&delete t[f];return(a=k(i,s))&&this.emit_itemsChanged(a),a},addDataset_:function(e){this.sources.push(e),this.listen.source&&e.addHandler(this.listen.source,this);var t=this.members_;for(var n in e.items_)t[n]?t[n].count++:t[n]={count:1,object:e.items_[n]};return!0},removeDataset_:function(e){n.array.remove(this.sources,e),this.listen.source&&e.removeHandler(this.listen.source,this);var t=this.members_;for(var r in e.items_)t[r].count--},updateDataset_:function(e){var t=this.owner,r=t.sourcesMap_,i=n.data.resolveDataset(this,t.updateDataset_,e,"adapter"),s,o,u;if(this.dataset===i)return;if(i){var a=(r[i.basisObjectId]||0)+1;r[i.basisObjectId]=a,a==1&&(t.addDataset_(i),s=[i])}if(this.dataset){var a=(r[this.dataset.basisObjectId]||0)-1;r[this.dataset.basisObjectId]=a,a==0&&(t.removeDataset_(this.dataset),o=[this.dataset])}this.dataset=i,t.applyRule();if(u=k(s,o)){var f=t.sourceDelta_;f?(u.inserted&&u.inserted.forEach(function(e){n.array.remove(this.deleted,e)||n.array.add(this.inserted,e)},f),u.deleted&&u.deleted.forEach(function(e){n.array.remove(this.inserted,e)||n.array.add(this.deleted,e)},f)):t.emit_sourcesChanged(u)}return u},getSourceValues:function(){return this.sourceValues_.map(function(e){return e.source})},addSource:function(e){if(!e||typeof e!="object"&&typeof e!="function")return;if(this.hasSource(e))return;var t={owner:this,source:e,adapter:null,dataset:null};this.sourceValues_.push(t),this.updateDataset_.call(t,e),this.listen.sourceValue&&e instanceof n.event.Emitter&&e.addHandler(this.listen.sourceValue,this)},removeSource:function(e){for(var t=0,r;r=this.sourceValues_[t];t++)if(r.source===e){this.listen.sourceValue&&e instanceof n.event.Emitter&&e.removeHandler(this.listen.sourceValue,this),this.updateDataset_.call(r,null),this.sourceValues_.splice(t,1);return}},hasSource:function(e){for(var t=0,n;n=this.sourceValues_[t];t++)if(n.source===e)return!0;return!1},setSources:function(e){var t=this.sourceValues_.map(function(e){return e.source}),r=[],i=[],s;e||(e=[]),this.sourceDelta_={inserted:r,deleted:i};for(var o=0;o<e.length;o++){var u=e[o];n.array.remove(t,u)||this.addSource(u)}return t.forEach(this.removeSource,this),this.sourceDelta_=null,(s=k(r,i))&&this.emit_sourcesChanged(s),s},destroy:function(){this.setSources(),x.prototype.destroy.call(this),this.sourceValues_=null,this.sourcesMap_=null,this.sourceDelta_=null,this.sources=null}});M.UNION=M.prototype.rule,M.INTERSECTION=function(e,t){return e==t},M.DIFFERENCE=function(e,t){return e==1},M.MORE_THAN_ONE_INCLUDE=function(e,t){return t==1||e>1},M.AT_LEAST_ONE_EXCLUDE=function(e,t){return t==1||e<t};var _=function(e){return!this.has(e)},D={itemsChanged:function(e,t){if(!this.subtrahend)return;var n=k(t.inserted&&t.inserted.filter(_,this.subtrahend),t.deleted&&t.deleted.filter(this.has,this));n&&this.emit_itemsChanged(n)},destroy:function(){this.minuendAdapter_||this.setMinuend(null)}},P={itemsChanged:function(e,t){if(!this.minuend)return;var n=k(t.deleted&&t.deleted.filter(this.minuend.has,this.minuend),t.inserted&&t.inserted.filter(this.has,this));n&&this.emit_itemsChanged(n)},destroy:function(){this.subtrahendAdapter_||this.setSubtrahend(null)}},H=f(x,{className:a+".Subtract",subscribeTo:w.MINUEND+w.SUBTRAHEND,minuend:null,minuendAdapter_:null,emit_minuendChanged:b("minuendChanged","oldMinuend"),subtrahend:null,subtrahendAdapter_:null,emit_subtrahendChanged:b("subtrahendChanged","oldSubtrahend"),listen:{minuend:D,subtrahend:P},init:function(){x.prototype.init.call(this);var e=this.minuend,t=this.subtrahend;this.minuend=null,this.subtrahend=null,(e||t)&&this.setOperands(e,t)},setOperands:function(e,t){var r,i=!1;e=n.data.resolveDataset(this,this.setMinuend,e,"minuendAdapter_"),t=n.data.resolveDataset(this,this.setSubtrahend,t,"subtrahendAdapter_");var s=this.minuend,o=this.subtrahend;if(s!==e){i=!0,this.minuend=e;var u=this.listen.minuend;u&&(s&&s.removeHandler(u,this),e&&e.addHandler(u,this)),this.emit_minuendChanged(s)}if(o!==t){i=!0,this.subtrahend=t;var u=this.listen.subtrahend;u&&(o&&o.removeHandler(u,this),t&&t.addHandler(u,this)),this.emit_subtrahendChanged(o)}if(!i)return!1;if(!e||!t)this.itemCount&&this.emit_itemsChanged(r={deleted:this.getItems()});else{var a=[],f=[];for(var l in this.items_)(!e.items_[l]||t.items_[l])&&a.push(this.items_[l]);for(var l in e.items_)!this.items_[l]&&!t.items_[l]&&f.push(e.items_[l]);(r=k(f,a))&&this.emit_itemsChanged(r)}return r},setMinuend:function(e){return this.setOperands(e,this.subtrahendAdapter_?this.subtrahendAdapter_.source:this.subtrahend)},setSubtrahend:function(e){return this.setOperands(this.minuendAdapter_?this.minuendAdapter_.source:this.minuend,e)},destroy:function(){this.setOperands(),x.prototype.destroy.call(this)}}),B=f(x,{className:a+".SourceDataset",subscribeTo:w.SOURCE,source:null,emit_sourceChanged:b("sourceChanged","oldSource"),sourceAdapter_:null,sourceMap_:null,listen:{source:{destroy:function(){this.sourceAdapter_||this.setSource()}}},init:function(){this.sourceMap_={},x.prototype.init.call(this);var e=this.source;e&&(this.source=null,this.setSource(e))},setSource:function(e){e=n.data.resolveDataset(this,this.setSource,e,"sourceAdapter_");if(this.source!==e){var t=this.source,r=this.listen.source;this.source=e;if(r){var i=r.itemsChanged;C(!0),t&&(t.removeHandler(r,this),i&&i.call(this,t,{deleted:t.getItems()})),e&&(e.addHandler(r,this),i&&i.call(this,e,{inserted:e.getItems()})),C(!1)}this.emit_sourceChanged(t)}},destroy:function(){this.setSource(),x.prototype.destroy.call(this),this.sourceMap_=null}}),j=function(e){var t=this.map?this.map(e):object;if(t instanceof E==0||this.filter(t))t=null;var n=this.sourceMap_[e.basisObjectId],r=n.member;if(r!==t){var i=this.members_,s,o,u;n.member=t;if(r){var a=r.basisObjectId;this.removeMemberRef&&this.removeMemberRef(r,e),--i[a]==0&&(delete i[a],u=[r])}if(t){var f=t.basisObjectId;this.addMemberRef&&this.addMemberRef(t,e),i[f]?i[f]++:(i[f]=1,o=[t])}(s=k(o,u))&&this.emit_itemsChanged(s)}},F={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.members_,i=[],s=[],o,u,a,f=this.ruleEvents;C(!0);if(t.inserted)for(var l=0;o=t.inserted[l];l++){a=this.map?this.map(o):o;if(a instanceof E==0||this.filter(a))a=null;f&&o.addHandler(f,this),n[o.basisObjectId]={sourceObject:o,member:a};if(a){var c=a.basisObjectId;r[c]?r[c]++:(r[c]=1,i.push(a)),this.addMemberRef&&this.addMemberRef(a,o)}}if(t.deleted)for(var l=0;o=t.deleted[l];l++){u=o.basisObjectId,a=n[u].member,f&&o.removeHandler(f,this),delete n[u];if(a){var c=a.basisObjectId;--r[c]==0&&(delete r[c],s.push(a)),this.removeMemberRef&&this.removeMemberRef(a,o)}}C(!1),(t=k(i,s))&&this.emit_itemsChanged(t)}},I=f(B,{className:a+".MapFilter",map:d,filter:m,rule:p(v),emit_ruleChanged:b("ruleChanged","oldRule"),ruleEvents:L(j,"update"),addMemberRef:null,removeMemberRef:null,listen:{source:F},setMap:function(e){typeof e!="function"&&(e=d);if(this.map!==e)return this.map=e,this.applyRule()},setFilter:function(e){typeof e!="function"&&(e=m);if(this.filter!==e)return this.filter=e,this.applyRule()},setRule:function(e){e=p(e||v);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(){var e=this.sourceMap_,t=this.members_,n,r,i,s,o,u,a=[],f=[],l;for(var c in e){u=e[c],o=u.sourceObject,n=u.member,r=this.map?this.map(o):o;if(r instanceof E==0||this.filter(r))r=null;n!=r&&(u.member=r,n&&(i=n.basisObjectId,this.removeMemberRef&&this.removeMemberRef(n,o),t[i]--),r&&(s=r.basisObjectId,this.addMemberRef&&this.addMemberRef(r,o),s in t?t[s]++:(t[s]=1,a.push(r))))}for(i in this.items_)t[i]==0&&(delete t[i],f.push(this.items_[i]));return(l=k(a,f))&&this.emit_itemsChanged(l),l}}),q=f(I,{className:a+".Filter",filter:function(e){return!this.rule(e)}}),R=f(I,{className:a+".Split",subsetClass:x,subsetWrapperClass:N,keyMap:null,map:function(e){return this.keyMap.resolve(e)},rule:p(g),setRule:function(e){e=p(e||g);if(this.rule!==e){var t=this.rule;return this.rule=e,this.keyMap.keyGetter=e,this.emit_ruleChanged(t),this.applyRule()}},addMemberRef:function(e,t){e.dataset.emit_itemsChanged({inserted:[t]})},removeMemberRef:function(e,t){e.dataset.emit_itemsChanged({deleted:[t]})},init:function(){if(!this.keyMap||this.keyMap instanceof S==0)this.keyMap=A(this.keyMap,this.rule,this.subsetWrapperClass,this.subsetClass);I.prototype.init.call(this)},getSubset:function(e,t){return this.keyMap.get(e,t)},destroy:function(){I.prototype.destroy.call(this),this.keyMap.destroy(),this.keyMap=null}}),z=function(e){var t=this.sourceMap_[e.basisObjectId],n=this.rule(e),r=this.index_;if(n!==t.value){var i=U(r,t),s=r[i-1],o=r[i+1];t.value=n;if(s&&(s.value>n||s.value==n&&s.object.basisObjectId>t.object.basisObjectId)||o&&(o.value<n||o.value==n&&o.object.basisObjectId<t.object.basisObjectId))r.splice(i,1),r.splice(U(r,t),0,t),this.applyRule()}},X={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.index_,i=this.ruleEvents,s=!1,o=!1,u,a=t.inserted,f=t.deleted;if(f){f.length>r.length-f.length&&(s=!0,o=f.length!=r.length,r.length=0);for(var l=0,c;c=f[l];l++)s||(u=n[c.basisObjectId],r.splice(U(r,u),1)),delete n[c.basisObjectId],i&&c.removeHandler(i,this);if(o)for(var h in n)u=n[h],r.splice(U(r,u),0,u)}if(a){o=!r.length;for(var l=0,c;c=a[l];l++)u={object:c,value:this.rule(c)},n[c.basisObjectId]=u,o?r.push(u):r.splice(U(r,u),0,u),i&&c.addHandler(i,this);o&&r.sort(W)}this.applyRule()}},V=f(B,{className:a+".Slice",rule:p(v),emit_ruleChanged:b("ruleChanged","oldRule","oldOrderDesc"),ruleEvents:L(z,"update"),index_:null,orderDesc:!1,offset:0,limit:10,listen:{source:X},emit_rangeChanged:b("rangeChanged","oldOffset","oldLimit"),init:function(){this.index_=[],B.prototype.init.call(this)},setRange:function(e,t){var n=this.offset,r=this.limit,i=!1;if(n!=e||r!=t)this.offset=e,this.limit=t,i=this.applyRule(),this.emit_rangeChanged(n,r);return i},setOffset:function(e){return this.setRange(e,this.limit)},setLimit:function(e){return this.setRange(this.offset,e)},setRule:function(e,t){e=p(e||v),t=!!t;if(this.rule!=e||this.orderDesc!=t){var n=this.rule,r=this.orderDesc;if(this.rule!=e){var i=this.index_;for(var s=0;s<i.length;s++)i[s].value=e(i[s].object);i.sort(W),this.rule=e}return this.orderDesc=t,this.rule=e,this.emit_ruleChanged(n,r),this.applyRule()}},applyRule:function(){var e=this.offset,t=e+this.limit;this.orderDesc&&(e=this.index_.length-t,t=e+this.limit);var r=n.object.slice(this.members_),i=this.index_.slice(Math.max(0,e),Math.max(0,t)),s=[],o;for(var u=0,a;a=i[u];u++){var f=a.object.basisObjectId;r[f]?delete r[f]:(s.push(a.object),this.members_[f]=a.object)}for(var f in r)delete this.members_[f];return(o=k(s,h(r)))&&this.emit_itemsChanged(o),o},destroy:function(){B.prototype.destroy.call(this),this.index_=null}}),$=function(e){var t=this.sourceMap_,n=this.members_,r=e.basisObjectId,i=t[r].list,s=t[r].list={},o=this.rule(e),u,a=[],f=[],l;if(Array.isArray(o))for(var c=0;c<o.length;c++)l=this.keyMap.get(o[c],!0),l&&!l.has(e)&&(h=l.basisObjectId,s[h]=l,i[h]||(l.dataset.emit_itemsChanged({inserted:[e]}),n[h]?n[h]++:(a.push(l),n[h]=1)));for(var h in i)if(!s[h]){var l=i[h];l.dataset.emit_itemsChanged({deleted:[e]}),--n[h]||(delete n[h],f.push(l))}(u=k(a,f))&&this.emit_itemsChanged(u)},J={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.members_,i=this.ruleEvents,s,o,u,a=[],f=[];C(!0);if(s=t.inserted)for(var l=0,c;c=s[l];l++){var h=this.rule(c),p={object:c,list:{}};n[c.basisObjectId]=p;if(Array.isArray(h))for(var d=0,v={};d<h.length;d++)o=this.keyMap.get(h[d],!0),o&&!v[o.basisObjectId]&&(u=o.basisObjectId,v[u]=!0,p.list[u]=o,o.dataset.emit_itemsChanged({inserted:[c]}),r[u]?r[u]++:(a.push(o),r[u]=1));i&&c.addHandler(i,this)}if(s=t.deleted)for(var l=0,c;c=s[l];l++){var m=c.basisObjectId,h=n[m].list;delete n[m];for(var u in h)o=h[u],o.dataset.emit_itemsChanged({deleted:[c]}),--r[u]||(delete r[u],f.push(o));i&&c.removeHandler(i,this)}C(!1),(t=k(a,f))&&this.emit_itemsChanged(t)}},K=f(B,{className:a+".Cloud",subsetClass:x,subsetWrapperClass:N,rule:p(g),ruleEvents:L($,"update"),keyMap:null,map:d,listen:{source:J},init:function(){if(!this.keyMap||this.keyMap instanceof S==0)this.keyMap=A(this.keyMap,this.rule,this.subsetWrapperClass,this.subsetClass);B.prototype.init.call(this)},getSubset:function(e,t){return this.keyMap.get(e,t)},destroy:function(){B.prototype.destroy.call(this),this.keyMap.destroy(),this.keyMap=null}}),Q=function(e){var t=this.sourceMap_[e.basisObjectId],n=this.rule(e)||null,r=t.value,i,s,o;if(n===r)return;if(n instanceof E||n instanceof x)i=et(this,n,e);r&&(s=tt(this,r,e)),t.value=n,(o=k(i,s))&&this.emit_itemsChanged(o)},G=function(e,t){var n=t.inserted,r=t.deleted,t;n&&(n=et(this,n,e)),r&&(r=tt(this,r,e)),(t=k(n,r))&&this.emit_itemsChanged(t)},Y={itemsChanged:G,destroy:function(e){var t=this.sourceMap_;for(var n=t[e.basisObjectId];n=n.ref;)t[n.object.basisObjectId].value=null;delete t[e.basisObjectId]}},nt=B.subclass({className:a+".Extract",rule:p(g),emit_ruleChanged:b("ruleChanged","oldRule"),ruleEvents:L(Q,"update"),listen:{source:{itemsChanged:G}},setRule:function(e){e=p(e||g);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(){var e={},t={},n,r;for(var i in this.sourceMap_){var s=this.sourceMap_[i],o=s.source;if(o instanceof E){var u=this.rule(o)||null,a=s.value;if(u===a)continue;if(u instanceof E||u instanceof x){var f=et(this,u,o);for(var l=0;l<f.length;l++){var c=f[l],p=c.basisObjectId;t[p]?delete t[p]:e[p]=c}}if(a){var d=tt(this,a,o);for(var l=0;l<d.length;l++){var c=d[l],p=c.basisObjectId;e[p]?delete e[p]:t[p]=c}}s.value=u}}return(r=k(h(e),h(t)))&&this.emit_itemsChanged(r),r}});t.exports={getDelta:k,createRuleEvents:L,Merge:M,Subtract:H,SourceDataset:B,MapFilter:I,Filter:q,Split:R,Extract:nt,Slice:V,Cloud:K}},"0.js":function(e,t,n,r,i,s,o,u){n.require("./1.js"),n.require("./a.js"),n.require("./d.js"),n.require("./e.js"),n.require("./f.js"),n.require("./g.js"),n.require("./h.js"),n.require("./i.js"),n.require("./k.js"),n.require("./n.js"),n.require("./o.js"),n.require("./p.js"),r.basis=n},"2.js":function(e,t,n,r,i,s,o,u){function h(e){var t=[];for(var n in e)c.call(e,n)&&t.push(n);return t}function b(e){if(e.charAt(0)=="#")return p[parseInt(e.substr(1),36)];var t=e.match(/^(.+?)@(.+)$/);if(t)return N(n.path.resolve(t[2])).token(t[1])}function x(e,t,n,r){var i=e.cultureValues[t];r=r?r+".":"";for(var s in n)if(c.call(n,s)){var o=r+s,u=n[s];i[o]=u,u&&(typeof u=="object"||Array.isArray(u))&&x(e,t,u,o)}}function N(e){var t;if(typeof e=="string"){var r=e,i=n.path.extname(r);i!=".l10n"&&(r=n.path.dirname(r)+"/"+n.path.basename(r,i)+".l10n"),e=n.resource(r)}return n.resource.isResource(e)&&(t=E[e.url]),t||new T(e)}function C(){return w.slice(0)}function P(e,t){return e&&!A[e]&&(A[e]=new D(e,t)),A[e||L]}function H(){return L}function B(e){if(!e)return;if(L!=e){if(k.indexOf(e)==-1)return;L=e;for(var t=0,r;r=w[t];t++)r.syncValues();n.Token.prototype.set.call(P,e)}}function j(){return k.slice(0)}function F(e){typeof e=="string"&&(e=e.trim().split(" "));if(!e.length)return;var t={},r,i;O={};for(var s=0,o,u;o=e[s];s++)r=o.split("/"),r.length>2&&(r=r.slice(0,2)),u=r[0],i||(i=u),t[u]=P(u),O[u]=r;for(var u in O)O[u]=n.array.flatten(O[u].map(function(e){return O[e]})).concat(i).filter(function(e,t,n){return!t||n.lastIndexOf(e,t-1)==-1});k=n.object.keys(t),L in t==0&&B(i)}function I(e,t,n){P.attach(e,t),n&&e.call(t,L)}n.require("./3.js");var a=this.path,f=n.Class,l=n.event.Emitter,c=Object.prototype.hasOwnProperty;n.resource.extensions[".l10n"]=function(e,t){return N(t).update(n.resource.extensions[".json"](e,t))};var p=[],d={},v={},m=n.Token.prototype.set,g=f(n.Token,{className:a+".ComputeToken",init:function(e,t){t.computeTokens[this.basisObjectId]=this,this.token=t,n.Token.prototype.init.call(this,e)},get:function(){var e=this.token.type=="plural"?A[L].plural(this.value):this.value;return this.token.dictionary.getValue(this.token.name+"."+e)},toString:function(){return this.get()},destroy:function(){delete this.token.computeTokens[this.basisObjectId],this.token=null,n.Token.prototype.destroy.call(this)}}),y=f(n.Token,{className:a+".Token",index:NaN,dictionary:null,name:"",type:"default",computeTokens:null,init:function(e,t,r,i){n.Token.prototype.init.call(this,i),this.index=p.push(this)-1,this.name=t,this.dictionary=e,this.computeTokens={},r?this.setType(r):this.apply()},toString:function(){return this.get()},apply:function(){for(var e in this.computeTokens)this.computeTokens[e].apply();n.Token.prototype.apply.call(this)},set:function(){},setType:function(e){e!="plural"&&(!n.l10n.enableMarkup||e!="markup")&&(e="default"),this.type!=e&&(this.type=e,this.apply())},compute:function(e,t){arguments.length==1&&(t=e,e=""),t=n.getter(t),e=String(e).trim().split(/\s+|\s*,\s*/).sort();var r=this.basisObjectId,i=e.concat(r,t[n.getter.ID]).join("_");if(d[i])return d[i];var s=this,o={},u=function(e){m.call(this,t(e))},a={destroy:function(e){delete o[e.basisObjectId],this.destroy()}};for(var f=0,c;c=e[f];f++)c!="destroy"&&(a[c]=u);return d[i]=function(e){if(e instanceof l==0)throw 3;var n=e.basisObjectId,r=o[n];return r||(r=o[n]=new g(t(e),s),e.addHandler(a,r)),r}},computeToken:function(e){return new g(e,this)},token:function(e){this.type=="plural"&&(e=A[L].plural(e));if(this.dictionary)return this.dictionary.token(this.name+"."+e)},destroy:function(){for(var e in this.computeTokens)this.computeTokens[e].destroy();this.computeTokens=null,this.value=null,n.Token.prototype.destroy.call(this)}}),w=[],E={},S=new n.Token,T=f(null,{className:a+".Dictionary",tokens:null,types:null,cultureValues:null,index:NaN,resource:null,init:function(e){this.tokens={},this.types={},this.cultureValues={},this.index=w.push(this)-1;if(n.resource.isResource(e)){var t=e;this.resource=t,E[t.url]||(E[t.url]=this,S.set(t.url)),t.fetch()}else this.update(e||{})},update:function(e){e||(e={}),this.cultureValues={};for(var t in e)/^_|_$/.test(t)||(this.cultureValues[t]={},x(this,t,e[t]));this.types=e._meta&&e._meta.type||{};for(var n in this.tokens)this.tokens[n].setType(this.types[n]);return this.syncValues(),this},syncValues:function(){for(var e in this.tokens)m.call(this.tokens[e],this.getValue(e))},getValue:function(e){var t=O[L]||[];for(var n=0,r;r=t[n];n++){var i=this.cultureValues[r];if(i&&e in i)return i[e]}},getCultureValue:function(e,t){return this.cultureValues[e]&&this.cultureValues[e][t]},token:function(e){var t=this.tokens[e];return t||(t=this.tokens[e]=new y(this,e,this.types[e],this.getValue(e))),t},destroy:function(){this.tokens=null,this.cultureValues=null,n.array.remove(w,this),this.resource&&(delete E[this.resource.url],this.resource=null)}}),k=[],L=null,A={},O={},M={},_=[[1,function(e){return 0}],[2,function(e){return e==1||e%10==1?0:1}],[2,function(e){return e==0?0:1}],[2,function(e){return e==1?0:1}],[2,function(e){return e==0||e==1?0:1}],[2,function(e){return e%10!=1||e%100==11?1:0}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e!=0?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==0?0:e==1?1:2}],[3,function(e){return e==1?0:e==0||e%100>0&&e%100<20?1:2}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==1?0:e>=2&&e<=4?1:2}],[4,function(e){return e==1?0:e==2?1:e!=8&&e!=11?2:3}],[4,function(e){return e==1?0:e==2?1:e==3?2:3}],[4,function(e){return e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0}],[4,function(e){return e==1?0:e==0||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3}],[4,function(e){return e==1||e==11?0:e==2||e==12?1:e>2&&e<20?2:3}],[5,function(e){return e==1?0:e==2?1:e<7?2:e<11?3:4}],[6,function(e){return e==0?0:e==1?1:e==2?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5}]];["ay bo cgg dz fa id ja jbo ka kk km ko ky lo ms my sah su th tt ug vi wo zh","mk","jv","af an ast az bg bn brx ca da de doi el en eo es es-AR et eu ff fi fo fur fy gl gu ha he hi hne hu hy ia it kn ku lb mai ml mn mni mr nah nap nb ne nl nn no nso or pa pap pms ps pt rm rw sat sco sd se si so son sq sv sw ta te tk ur yo","ach ak am arn br fil fr gun ln mfe mg mi oc pt-BR tg ti tr uz wa zh","is","csb","lv","lt","be bs hr ru sr uk","mnk","ro","pl","cs sk","cy","kw","sl","mt","gd","ga","ar"].forEach(function(e,t){e.split(" ").forEach(function(e){M[e]=this},_[t])});var D=n.Class(null,{className:a+".Culture",name:"",pluralForm:null,init:function(e,t){this.name=e,A[e]||(A[e]=this),this.pluralForm=t||M[e]||M[e.split("-")[0]]||_[0]},plural:function(e){return Number(this.pluralForm[1](Math.abs(parseInt(e,10))))}});n.object.extend(P,new n.Token),P.set=B,F("en-US"),B("en-US"),t.exports={ComputeToken:g,Token:y,token:b,Dictionary:T,dictionary:N,getDictionaries:C,addCreateDictionaryHandler:S.attach.bind(S),removeCreateDictionaryHandler:S.detach.bind(S),Culture:D,culture:P,getCulture:H,setCulture:B,getCultureList:j,setCultureList:F,pluralForms:_,onCultureChange:I}},"3.js":function(e,t,n,r,i,s,o,u){function v(e){var t=p[e];return t||(t=function(){var t=this,n,r;while(t=t.handler){r=t.callbacks[e];if(typeof r=="function"){if(!n){n=[this];for(var i=0;i<arguments.length;i++)n.push(arguments[i])}r.apply(t.context||this,n)}r=t.callbacks["*"];if(typeof r=="function"){if(!n){n=[this];for(var i=0;i<arguments.length;i++)n.push(arguments[i])}r.call(t.context||this,{sender:this,type:e,args:n})}}},p[e]=t),t}function m(e,t){var n={events:[]};if(e){e=String(e).trim().split(/\s+|\s*,\s*/).sort(),n={events:e};for(var r=0,i;i=e[r];r++)i!="destroy"&&(n[i]=t)}return n}var a=this.path,f=n.Class,l=n.object.extend,c=Array.prototype.slice,h={},p={},d=function(){},g=f(null,{className:a+".Emitter",extendConstructor_:!0,handler:null,emit_destroy:v("destroy"),listen:f.nestedExtendProperty(),init:function(){this.handler&&!this.handler.callbacks&&(this.handler={callbacks:this.handler,context:this,handler:null})},addHandler:function(e,t){t=t||this,this.handler={callbacks:e,context:t,handler:this.handler}},removeHandler:function(e,t){var n=this,r;t=t||this;while(r=n,n=n.handler)if(n.callbacks===e&&n.context===t){n.callbacks=h,r.handler=n.handler;return}},destroy:function(){this.destroy=d,this.emit_destroy(),this.handler=null}});t.exports={create:v,createHandler:m,events:p,Emitter:g}},"4.js":function(e,t,n,r,i,s,o,u){function T(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function N(e){var t=x[e];if(!t){var n=[],r={},i=1;t=x[e]={actions:n,handler:r};while(e){if(e&1){var s=w[i];n.push(s.action);for(var o in s.handler)r[o]=r[o]?T(r[o],s.handler[o]):s.handler[o]}i<<=1,e>>=1}}return t}function C(e,t){var n=N(t);for(var r=0,i;i=n.actions[r];r++)i(S.link,e);e.addHandler(n.handler)}function k(e,t){var n=N(t);for(var r=0,i;i=n.actions[r++];)i(S.unlink,e);e.removeHandler(n.handler)}function I(e,t){while(t&&t!==e&&t!==t.delegate)t=t.delegate;return t===e}function q(e,t,n){var r=e.delegate;r&&(e.root=r.root,e.target=r.target,e.data=r.data,e.state=r.state);if(e.root!==t){var i=e.listen.root;i&&(t&&t!==e&&t.removeHandler(i,e),e.root&&e.root!==e&&e.root.addHandler(i,e)),e.emit_rootChanged(t)}if(e.target!==n){var s=e.listen.target;s&&(n&&n!==e&&n.removeHandler(s,e),e.target&&e.target!==e&&e.target.addHandler(s,e)),e.emit_targetChanged(n)}var o=e.delegates_;while(o)o.delegate&&q(o.delegate,t,n),o=o.next}function X(e,t){var n={},r;e&&e.length&&(r=n.inserted=e),t&&t.length&&(r=n.deleted=t);if(r)return n}function V(e,t){if(!e||!e.itemCount){if(t&&t.itemCount)return{inserted:t.getItems()}}else{if(!!t&&!!t.itemCount){var n=[],r=[];for(var i in e.items_){var s=e.items_[i];s.basisObjectId in t.items_==0&&r.push(s)}for(var i in t.items_){var s=t.items_[i];s.basisObjectId in e.items_==0&&n.push(s)}return X(n,r)}if(e.itemCount)return{deleted:e.getItems()}}}function tt(e,t,n,r){var i=e[r]||null,s=null;return typeof n=="function"&&(n=n.call(e,e)),n&&(n instanceof $?(s=new Q(e,t,n,Z),n=n.dataset):n instanceof H?(s=new Q(e,t,n,et),n=tt(s,s.proxy,n.value,"next")):n.bindingBridge&&(s=new G(e,t,n,Y),n=tt(s,s.proxy,n.value,"next"))),n instanceof J==0&&(n=null),r&&i!==s&&(i&&(i.detach(),i.next&&tt(i,null,null,"next")),s&&s.attach(),e[r]=s),n}function nt(e,t,n,r){var i=e[r]||null,s=null;return typeof n=="function"&&(n=n.call(e,e)),n&&(n instanceof H?(s=new Q(e,t,n,et),n=nt(s,s.proxy,n.value,"next")):n.bindingBridge&&(s=new G(e,t,n,Y),n=nt(s,s.proxy,n.value,"next"))),n instanceof R==0&&(n=null),r&&i!==s&&(i&&(i.detach(),i.next&&nt(i,null,null,"next")),s&&s.attach(),e[r]=s),n}function rt(e){return Array.isArray(e)?e.map(function(e){return{data:e}}):{data:e}}function it(e){if(!e||e.constructor!==Object)e={value:e};return new R({data:e})}function st(e,t){var n=t?it:rt;return Array.isArray(e)?e.map(n):n(e)}n.require("./3.js");var a=this.path,f=n.Class,l=Array.prototype.slice,c=n.object.values,h=n.fn.$self,p=n.event.Emitter,d=n.event.create,v=n.event.events,m={},g=[],y={},b={priority:[],values:{},add:function(e,t){var n=e,r=e.toLowerCase();b[n]=r,y[r]=n,this.values[r]=n,t?t=this.priority.indexOf(t):t=-1,t==-1?this.priority.push(r):this.priority.splice(t,0,r)},getList:function(){return c(y)}};b.add("READY"),b.add("DEPRECATED"),b.add("UNDEFINED"),b.add("ERROR"),b.add("PROCESSING");var w={},E=1,S={NONE:0,ALL:0,link:function(e,t,n){var r=e+t.basisObjectId,i=n.subscribers_;i||(i=n.subscribers_={});if(!i[r]){i[r]=t;var s=n.subscriberCount+=1;s==1&&n.emit_subscribersChanged(1)}},unlink:function(e,t,n){var r=e+t.basisObjectId,i=n.subscribers_;if(i&&i[r]){delete i[r];var s=n.subscriberCount-=1;s==0&&(n.emit_subscribersChanged(-1),n.subscribers_=null)}},add:function(e,t,n){w[E]={handler:t,action:n},S[e]=E,S.ALL|=E,E<<=1},addProperty:function(e,t){var n={};n[t||e+"Changed"]=function(t,n){n instanceof L&&S.unlink(e,t,n),t[e]instanceof L&&S.link(e,t,t[e])},this.add(e.toUpperCase(),n,function(t,n){n[e]&&t(e,n,n[e])})}},x={};S.addProperty("delegate"),S.addProperty("target"),S.addProperty("dataset"),S.addProperty("value","change");var L=f(p,{className:a+".AbstractData",state:b.UNDEFINED,emit_stateChanged:d("stateChanged","oldState"),active:!1,emit_activeChanged:d("activeChanged"),subscribeTo:S.NONE,subscriberCount:0,subscribers_:null,emit_subscribersChanged:d("subscribersChanged","delta"),syncEvents:f.oneFunctionProperty(function(){this.isSyncRequired()&&this.syncAction()},{stateChanged:!0,subscribersChanged:!0}),syncAction:null,init:function(){p.prototype.init.call(this),this.active&&this.addHandler(N(this.subscribeTo).handler);var e=this.syncAction;e&&(this.syncAction=null,this.setSyncAction(e))},setState:function(e,t){var n=String(e);if(!y[n])throw 4;if(this.state!=n||this.state.data!=t){var r=this.state;return this.state=Object(n),this.state.data=t,this.emit_stateChanged(r),!0}return!1},deprecate:function(){this.state!=b.PROCESSING&&this.setState(b.DEPRECATED)},setActive:function(e){return e=!!e,this.active!=e?(this.active=e,this.emit_activeChanged(),e?C(this,this.subscribeTo):k(this,this.subscribeTo),!0):!1},setSubscription:function(e){var t=this.subscribeTo,n=e&S.ALL,r=t^n;if(r){this.subscribeTo=n;if(this.active){var i=N(t),s=N(n);this.removeHandler(i.handler),this.addHandler(s.handler);var o=1;while(r){if(r&1){var u=w[o];t&o?u.action(S.unlink,this):u.action(S.link,this)}o<<=1,r>>=1}}return!0}return!1},isSyncRequired:function(){return this.subscriberCount>0&&(this.state==b.UNDEFINED||this.state==b.DEPRECATED)},setSyncAction:function(e){var t=this.syncAction;typeof e!="function"&&(e=null),this.syncAction=e,e?(t||this.addHandler(this.syncEvents),this.isSyncRequired()&&this.syncAction()):t&&this.removeHandler(this.syncEvents)},destroy:function(){p.prototype.destroy.call(this);if(this.active){var e=N(this.subscribeTo);for(var t=0,n;n=e.actions[t];t++)n(S.unlink,this)}this.state=b.UNDEFINED}}),A=n.getter.ID,O={destroy:function(e){this.value.unlink(e,this.fn)}},M={destroy:function(e){this.set(null)}},_={},D={},P=function(e){this.set(this.fn(e))},H=f(L,{className:a+".Value",subscribeTo:S.VALUE,emit_change:d("change","oldValue")&&function(e){v.change.call(this,e);var t=this;while(t=t.links_)t.fn.call(t.context,this.value,e)},value:null,initValue:null,proxy:null,locked:0,lockedValue_:null,links_:null,setNullOnEmitterDestroy:!0,bindingBridge:{attach:function(e,t,n){e.link(n,t,!0)},detach:function(e,t,n){e.unlink(n,t)},get:function(e){return e.value}},init:function(){L.prototype.init.call(this),this.proxy&&(this.value=this.proxy(this.value)),this.setNullOnEmitterDestroy&&this.value instanceof p&&this.value.addHandler(M,this),this.initValue=this.value},set:function(e){var t=this.value,n=this.proxy?this.proxy(e):e,r=n!==t;return r&&(this.setNullOnEmitterDestroy&&(t instanceof p&&t.removeHandler(M,this),n instanceof p&&n.addHandler(M,this)),this.value=n,this.locked||this.emit_change(t)),r},reset:function(){this.set(this.initValue)},isLocked:function(){return this.locked>0},lock:function(){this.locked++,this.locked==1&&(this.lockedValue_=this.value)},unlock:function(){if(this.locked){this.locked--;if(!this.locked){var e=this.lockedValue_;this.lockedValue_=null,this.value!==e&&this.emit_change(e)}}},compute:function(e,t){t||(t=e,e=null),t||(t=h);var r=this,i=n.event.createHandler(e,function(e){this.set(t(e,r.value))}),s=t[A]||String(t),o=i.events.concat(s,this.basisObjectId).join("_"),u=_[o];if(!u){var a={};i.destroy=function(e){delete a[e.basisObjectId],this.destroy()},this.addHandler({change:function(){for(var e in a){var n=a[e];n.token.set(t(n.object,this.value))}},destroy:function(){for(var e in a){var t=a[e];t.object.removeHandler(i,t.token),t.token.destroy()}a=null,r=null}}),u=_[o]=function(e){var s=e.basisObjectId,o=a[s],u=t(e,r.value);if(!o){var f=new n.Token(u);e.addHandler(i,f),o=a[s]={token:f,object:e}}else o.token.set(u);return o.token},u.deferred=function(){return function(e){return u(e).deferred()}}}return u},as:function(e,t){e||(e=h);if(this.links_){var r=this,i=e[A]||String(e);while(r=r.links_){var s=r.context;if(s instanceof n.Token&&(s.fn[A]||String(s.fn))==i)return t?s.deferred():s}}var o=new n.Token;return o.fn=e,this.link(o,P),t?o.deferred():o},deferred:function(e){return this.as(e,!0)},link:function(e,t,n){if(typeof t!="function"){var r=String(t);t=D[r],t||(t=D[r]=function(e){this[r]=e})}return this.links_={value:this,context:e,fn:t,links_:this.links_},e instanceof p&&e.addHandler(O,this.links_),n||t.call(e,this.value),e},unlink:function(e,t){var r=this,i;while(i=r,r=r.links_)r.context===e&&(!t||r.fn===t)&&(r.fn=n.fn.$undef,i.links_=r.links_,r.context instanceof p&&r.context.removeHandler(O,r))},destroy:function(){L.prototype.destroy.call(this),this.setNullOnEmitterDestroy&&this.value instanceof p&&this.value.removeHandler(M,this);var e=this;while(e=e.links_)e.context instanceof p&&e.context.removeHandler(O,e);this.proxy=null,this.initValue=null,this.value=null,this.lockedValue_=null,this.links_=null}}),B={},j=function(e){H.prototype.set.call(this,e)};H.from=function(e,t,r){var i;if(!e)return null;if(e instanceof p){r||(r=t,t=null),r||(r=h);var s=n.event.createHandler(t,j),o=r[A]||String(r),u=s.events.concat(o,e.basisObjectId).join("_");i=B[u],i||(i=B[u]=new H({value:e,proxy:n.getter(r),set:n.fn.$undef,handler:{destroy:function(){B[u]=null,e.removeHandler(s,this)}}}),s.destroy=function(e){B[u]=null,this.destroy()},e.addHandler(s,i))}if(!i){var u=e.basisObjectId,a=e.bindingBridge;u&&a&&(i=B[u],i||(i=B[u]=new H({value:a.get(e)}),a.attach(e,i.set,i)))}if(!i)throw 5;return i},H.factory=function(e,t){return function(n){return H.from(n,e,t)}};var F={},R=f(L,{className:a+".Object",subscribeTo:S.DELEGATE+S.TARGET,data:null,emit_update:d("update","delta")&&function(e){var t=this.delegates_;v.update.call(this,e);while(t)t.delegate&&t.delegate.emit_update(e),t=t.next},emit_stateChanged:function(e){var t=this.delegates_;L.prototype.emit_stateChanged.call(this,e);while(t)t.delegate&&(t.delegate.state=this.state,t.delegate.emit_stateChanged(e)),t=t.next},delegate:null,delegateAdapter_:null,delegates_:null,emit_delegateChanged:d("delegateChanged","oldDelegate"),target:null,emit_targetChanged:d("targetChanged","oldTarget"),root:null,emit_rootChanged:d("rootChanged","oldRoot"),init:function(){this.root=this,L.prototype.init.call(this);var e=this.delegate,t=this.data;e?(this.delegate=null,this.target=null,this.data=F,this.setDelegate(e),this.data===F&&(this.data=t||{})):(t||(this.data={}),this.target!==null&&(this.target=this))},setDelegate:function(e){e=nt(this,this.setDelegate,e,"delegateAdapter_");if(e&&e instanceof R){if(e.delegate&&I(this,e))return!1}else e=null;if(this.delegate!==e){var t=this.state,n=this.data,r=this.delegate,i=this.target,s=this.root,o=this.listen.delegate,u=!1,a;if(r){o&&r.removeHandler(o,this);var f=r.delegates_,l=r;while(f){if(f.delegate===this){f.delegate=null,l===r?r.delegates_=f.next:l.next=f.next;break}l=f,f=f.next}}if(e){this.delegate=e,o&&e.addHandler(o,this),e.delegates_={delegate:this,next:e.delegates_};if(this.data!==F){a={};for(var c in e.data)c in n==0&&(u=!0,a[c]=undefined);for(var c in n)n[c]!==e.data[c]&&(u=!0,a[c]=n[c])}}else{this.delegate=null,this.target=null,this.root=this,this.data={};for(var c in n)this.data[c]=n[c]}return q(this,s,i),u&&this.emit_update(a),a&&t!==this.state&&(String(t)!=this.state||t.data!==this.state.data)&&this.emit_stateChanged(t),this.emit_delegateChanged(r),!0}return!1},setState:function(e,t){return this.delegate?this.root.setState(e,t):L.prototype.setState.call(this,e,t)},update:function(e){if(this.delegate)return this.root.update(e);if(e){var t={},n=!1;for(var r in e)this.data[r]!==e[r]&&(n=!0,t[r]=this.data[r],this.data[r]=e[r]);if(n)return this.emit_update(t),t}return!1},destroy:function(){L.prototype.destroy.call(this);var e=this.delegates_;this.delegates_=null;while(e)e.delegate.setDelegate(),e=e.next;this.delegate&&this.setDelegate(),this.data=m,this.root=null,this.target=null}}),U=f(R,{className:a+".Slot"}),z={destroy:function(){delete this.map[this.id]}},W=f(L,{className:a+".KeyObjectMap",itemClass:R,keyGetter:h,autoDestroyMembers:!0,map_:null,extendConstructor_:!0,init:function(){this.map_={},L.prototype.init.call(this)},resolve:function(e){return this.get(this.keyGetter(e),e)},create:function(e,t){var n;return e instanceof R?n={delegate:e}:n={data:{id:e,title:e}},new this.itemClass(n)},get:function(e,t){var n=e instanceof R?e.basisObjectId:e,r=this.map_[n];!r&&t&&(r=this.map_[n]={map:this.map_,id:n,item:this.create(e,t)},r.item.addHandler(z,r));if(r)return r.item},destroy:function(){L.prototype.destroy.call(this);var e=this.map_;this.map_=null;for(var t in e){var n=e[t];this.autoDestroyMembers?n.item.destroy():n.item.removeHandler(z,n)}}}),$=f(R,{className:a+".DatasetWrapper",subscribeTo:R.prototype.subscribeTo+S.DATASET,listen:{dataset:{itemsChanged:function(e,t){this.itemCount=e.itemCount,this.emit_itemsChanged(t)},destroy:function(){this.setDataset()}}},dataset:null,datasetAdapter_:null,emit_datasetChanged:d("datasetChanged","oldDataset"),emit_itemsChanged:d("itemsChanged","delta"),init:function(){R.prototype.init.call(this);var e=this.dataset;e&&(this.dataset=null,this.setDataset(e))},setDataset:function(e){e=tt(this,this.setDataset,e,"datasetAdapter_");if(this.dataset!==e){var t=this.listen.dataset,n=this.dataset,r;t&&(n&&n.removeHandler(t,this),e&&e.addHandler(t,this)),this.itemCount=e?e.itemCount:0,(r=V(n,e))&&this.emit_itemsChanged(r),this.dataset=e,this.emit_datasetChanged(n)}},has:function(e){return this.dataset?this.dataset.has(e):null},getItems:function(){return this.dataset?this.dataset.getItems():[]},pick:function(){return this.dataset?this.dataset.pick():null},top:function(e){return this.dataset?this.dataset.top(e):[]},forEach:function(e){if(this.dataset)return this.dataset.forEach(e)},destroy:function(){(this.dataset||this.datasetAdapter_)&&this.setDataset(),R.prototype.destroy.call(this)}}),J=f(L,{className:a+".ReadOnlyDataset",itemCount:0,items_:null,members_:null,cache_:null,emit_itemsChanged:d("itemsChanged","delta")&&function(e){var t,n=0,r=0,i;if(t=e.inserted)while(i=t[n])this.items_[i.basisObjectId]=i,n++;if(t=e.deleted)while(i=t[r])delete this.items_[i.basisObjectId],r++;this.itemCount+=n-r,this.cache_=n==this.itemCount?e.inserted:null,v.itemsChanged.call(this,e)},init:function(){L.prototype.init.call(this),this.members_={},this.items_={}},has:function(e){return!!e&&!!this.items_[e.basisObjectId]},getItems:function(){return this.cache_||(this.cache_=c(this.items_)),this.cache_},getValues:function(e){return this.getItems().map(n.getter(e||h))},pick:function(){for(var e in this.items_)return this.items_[e];return null},top:function(e){var t=[];if(e)for(var n in this.items_)if(t.push(this.items_[n])>=e)break;return t},forEach:function(e){var t=this.getItems();for(var n=0;n<t.length;n++)e(t[n])},destroy:function(){L.prototype.destroy.call(this),this.cache_=g,this.itemCount=0,this.members_=null,this.items_=null}}),K=f(J,{className:a+".Dataset",listen:{item:{destroy:function(e){this.remove([e])}}},init:function(){J.prototype.init.call(this);var e=this.items;e&&(this.items=null,this.set(e))},add:function(e){var t=this.members_,n=this.listen.item,r=[],i;e&&!Array.isArray(e)&&(e=[e]);for(var s=0;s<e.length;s++){var o=e[s];if(o instanceof R){var u=o.basisObjectId;t[u]||(t[u]=o,n&&o.addHandler(n,this),r.push(o))}}return r.length&&this.emit_itemsChanged(i={inserted:r}),i},remove:function(e){var t=this.members_,n=this.listen.item,r=[],i;e&&!Array.isArray(e)&&(e=[e]);for(var s=0;s<e.length;s++){var o=e[s];if(o instanceof R){var u=o.basisObjectId;t[u]&&(n&&o.removeHandler(n,this),delete t[u],r.push(o))}}return r.length&&this.emit_itemsChanged(i={deleted:r}),i},set:function(e){if(!this.itemCount)return this.add(e);if(!e||!e.length)return this.clear();var t=this.members_,n=this.listen.item,r={},i=[],s=[],o,u,a;for(var f=0;f<e.length;f++)o=e[f],o instanceof R&&(u=o.basisObjectId,r[u]=o,t[u]||(t[u]=o,n&&o.addHandler(n,this),s.push(o)));for(var u in t)r[u]||(o=t[u],n&&o.removeHandler(n,this),delete t[u],i.push(o));return(a=X(s,i))&&this.emit_itemsChanged(a),a},sync:function(e){var t=this.set(e)||{},n=t.deleted;K.setAccumulateState(!0);if(n)for(var r=0,i;i=n[r];r++)i.destroy();return K.setAccumulateState(!1),t.inserted},clear:function(){var e=this.getItems(),t=this.listen.item,n;if(e.length){if(t)for(var r=0;r<e.length;r++)e[r].removeHandler(t,this);this.emit_itemsChanged(n={deleted:e}),this.members_={}}return n},destroy:function(){this.clear(),J.prototype.destroy.call(this)}}),Q=function(e,t,n,r){this.context=e,this.fn=t,this.source=n,this.handler=r};Q.prototype={context:null,fn:null,source:null,handler:null,next:null,attach:function(){this.source.addHandler(this.handler,this)},detach:function(){this.source.removeHandler(this.handler,this)},proxy:function(){this.fn.call(this.context,this.source)}};var G=function(){Q.apply(this,arguments)};G.prototype=new Q,G.prototype.attach=function(){this.source.bindingBridge.attach(this.source,this.handler,this)},G.prototype.detach=function(){this.source.bindingBridge.detach(this.source,this.handler,this)};var Y=function(){this.fn.call(this.context,this.source)},Z={datasetChanged:function(){this.fn.call(this.context,this.source)},destroy:function(){this.fn.call(this.context,null)}},et={change:function(){this.fn.call(this.context,this.source)},destroy:function(){this.fn.call(this.context,null)}};K.setAccumulateState=function(){function o(e){var t=e.dataset;s.call(t,e)}function u(){var e=t;t={};for(var n in e){var r=e[n];r&&o(r)}}function a(e){var n=this,r=n.basisObjectId,i=e.inserted,u=e.deleted,a=t[r];if(i&&u||a&&a.mixed){a&&(t[r]=null,o(a)),s.call(n,e);return}if(a){var f=i?"inserted":"deleted",c=a[f];if(!c){var h=i?"deleted":"inserted",p=a[h],d={},v=i||u,m=[],g=0;for(var y=0;y<p.length;y++)d[p[y].basisObjectId]=y;for(var y=0;y<v.length;y++){var b=v[y].basisObjectId;b in d==0?m.push(v[y]):(g||(p=l.call(p)),g++,p[d[b]]=null)}g&&(g<p.length?p=p.filter(Boolean):p=null,a[h]=p),m.length?(a[f]=m,p&&(a.mixed=!0)):(m=null,p||(t[r]=null))}else c.push.apply(c,i||u);return}t[r]={inserted:i,deleted:u,dataset:n,mixed:!1}}function f(){i=null,r&&(r=0,c())}function c(){e.emit_itemsChanged=s,u()}var e=J.prototype,t={},r=0,i,s;return function(t){t?(r==0&&(s=e.emit_itemsChanged,e.emit_itemsChanged=a,i||(i=n.setImmediate(f))),r++):(r-=r>0,r==0&&c())}}(),t.exports={STATE:b,SUBSCRIPTION:S,AbstractData:L,Value:H,Object:R,Slot:U,KeyObjectMap:W,ReadOnlyDataset:J,Dataset:K,DatasetWrapper:$,isConnected:I,getDatasetDelta:V,ResolveAdapter:Q,resolveDataset:tt,resolveObject:nt,wrapData:rt,wrapObject:it,wrap:st}},"5.js":function(e,t,n,r,i,s,o,u){function B(){}function j(){}function F(){}function I(e){e.setDelegate=n.fn.$undef,e.destroy=B}function q(e){var t=e.constructor.prototype;e.setDelegate=t.setDelegate,e.destroy=t.destroy}function R(e){return e.sortingValue||0}function U(e,t){return e=e.sortingValue||0,t=t.sortingValue||0,+(e>t)||-(e<t)}function z(e,t){return e=e.sortingValue||0,t=t.sortingValue||0,-(e>t)||+(e<t)}function W(e){return e.childNodes.sort(e.sortingDesc?z:U)}function X(e,t,n,r){if(!e.length)return 0;r=!!r;var i,s,o=0,u=e.length-1;do{i=o+u>>1,s=n(e[i]);if(r?t>s:t<s)u=i-1;else{if(!(r?t<s:t>s))return t==s?i:0;o=i+1}}while(o<=u);return i+(s<t^r)}function V(e,t,n,r,i){if(t===n)return;var s,o=e,u=[];r&&(e.contextSelection=n,e.selected&&u.push(e));while(o){s=!o.selection||i&&o===e?o.firstChild:null;if(s&&s.contextSelection!==t)throw 6;while(!s){if(o===e){u.length&&(t&&t.remove(u),n&&n.add(u));return}s=o.nextSibling,s||(o=o.parentNode)}o=s,o.selected&&u.push(o),o.contextSelection=n}}function $(e,t){if(e.contextDisabled!=t){e.contextDisabled=t;if(e.disabled)return;t?e.emit_disable():e.emit_enable()}}function J(e){if(!e)return null;if(e.isSatelliteConfig)return e;if(e instanceof Z)return e;f.isClass(e)&&(e={instanceOf:e});if(e&&e.constructor===Object){var t=!1,n={isSatelliteConfig:!0},r;for(var i in e)switch(i){case"instance":e[i]instanceof Z&&(n[i]=e[i]);break;case"instanceOf":f.isClass(e[i])&&e[i].isSubclassOf(Z)&&(r=e[i]);break;case"existsIf":case"delegate":case"dataSource":t=!0,n[i]=d(e[i]);break;case"config":n[i]=e[i]}n.instance||(n.instanceOf=r||Z);if(t){var s="events"in e?e.events:"update";Array.isArray(s)&&(s=s.join(" "));if(typeof s=="string"){var o={};s=s.split(/\s+/);for(var u=0,a;a=s[u];u++)o[a]=G,n.handler=o}}return n}return null}function K(e,t){for(var n in t)t[n]&&typeof t[n]=="object"&&e.setSatellite(n,t[n])}function rt(e,t){var n=t.length-1;e.childNodes=t,e.firstChild=t[0]||null,e.lastChild=t[n]||null;for(var r,i=n;r=t[i];i--)r.nextSibling=t[i+1]||null,r.previousSibling=t[i-1]||null,e.insertBefore(r,r.nextSibling)}function it(e,t){for(var n=0,r;r=t[n];n++)r.groupNode.nodes.push(r);t.length=0;for(var i=e.grouping.nullGroup;i;i=i.nextSibling){var s=i.nodes;i.first=s[0]||null,i.last=s[s.length-1]||null,t.push.apply(t,s),i.emit_childNodesModified({inserted:s})}return t}function st(e,t){var n;if(typeof e.childFactory=="function"){n=e.childFactory(t);if(n instanceof e.childClass)return n}throw n?10:9}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.Class,l=n.object.complete,c=n.array,h=n.array.remove,p=n.fn.$undef,d=n.getter,v=n.fn.nullGetter,m=f.oneFunctionProperty,g=n.event.create,y=n.event.events,b=n.data.SUBSCRIPTION,w=n.data.STATE,E=n.data.AbstractData,S=n.data.Object,x=n.data.ReadOnlyDataset,T=n.data.Dataset,N=n.data.DatasetWrapper,C=a+": Node can't be inserted at specified point in hierarchy",k=a+": Node was not found",L=a+": Child node has wrong class",A=a+": Child node is null",O=a+": Operation is not allowed because node is under dataSource control",M=a+": Operation is not allowed because node is under dataSource adapter control",_=a+": Node can't has owner and parentNode",D=a+": Node can't has children and dataSource as childClass isn't specified",P={ANY:!0,NONE:!1,PARENT:"parent",OWNER:"owner"},H={};b.addProperty("owner"),b.addProperty("dataSource");var Q=f.customExtendProperty({},function(e,t){for(var n in t)e[n]=J(t[n])}),G=function(e){var t=this.name,n=this.config,r=!n.existsIf||n.existsIf(e),i=e.satellite[t];if(r)if(i)n.delegate&&i.setDelegate(n.delegate(e)),n.dataSource&&i.setDataSource(n.dataSource(e));else{i=n.instance;if(!i){var s,o=(typeof n.config=="function"?n.config(e):n.config)||{};o.owner=e,n.delegate&&(o.autoDelegate=!1,o.delegate=n.delegate(e)),n.dataSource&&(o.dataSource=n.dataSource(e)),i=new n.instanceOf(o),i.destroy=F,(s=e.listen.satellite)&&i.addHandler(s,e),(s=e.listen["satellite:"+t])&&i.addHandler(s,e)}else n.delegate&&i.setDelegate(n.delegate(e)),n.dataSource&&i.setDataSource(n.dataSource(e));e.satellite.__auto__[t].instance=i,e.setSatellite(t,i,!0)}else i&&(n.instance&&(n.delegate&&i.setDelegate(),n.dataSource&&i.setDataSource()),e.satellite.__auto__[t].instance=null,e.setSatellite(t,null,!0))},Y={destroy:function(){this.owner.setSatellite(this.name,null)}},Z=f(S,{className:a+".AbstractNode",subscribeTo:S.prototype.subscribeTo+b.DATASOURCE,isSyncRequired:function(){return this.state==w.UNDEFINED||this.state==w.DEPRECATED},syncEvents:{activeChanged:!1},emit_update:function(e){S.prototype.emit_update.call(this,e);var t=this.parentNode;t&&(t.matchFunction&&this.match(t.matchFunction),t.insertBefore(this,this.nextSibling))},listen:{owner:{destroy:function(){this.ownerSatelliteName||this.setOwner()}}},autoDelegate:P.NONE,name:null,childNodes:null,emit_childNodesModified:g("childNodesModified","delta")&&function(e){y.childNodesModified.call(this,e);var t=this.listen.childNode,n;if(t){if(n=e.inserted)for(var r=0,i;i=n[r];r++)i.addHandler(t,this);if(n=e.deleted)for(var r=0,i;i=n[r];r++)i.removeHandler(t,this)}},childNodesState:w.UNDEFINED,emit_childNodesStateChanged:g("childNodesStateChanged","oldState"),childClass:Z,dataSource:null,emit_dataSourceChanged:g("dataSourceChanged","oldDataSource"),dataSourceAdapter_:null,dataSourceMap_:null,destroyDataSourceMember:!0,parentNode:null,nextSibling:null,previousSibling:null,firstChild:null,lastChild:null,sorting:v,sortingDesc:!1,emit_sortingChanged:g("sortingChanged","oldSorting","oldSortingDesc"),groupingClass:null,grouping:null,emit_groupingChanged:g("groupingChanged","oldGrouping"),groupNode:null,groupId:NaN,satellite:Q,ownerSatelliteName:null,emit_satelliteChanged:g("satelliteChanged","name","oldSatellite"),owner:null,emit_ownerChanged:g("ownerChanged","oldOwner"),init:function(){S.prototype.init.call(this);var e=this.childNodes,t=this.dataSource;e&&(this.childNodes=null),t&&(this.dataSource=null);var n=this.grouping;n&&(this.grouping=null,this.setGrouping(n)),this.childClass&&(this.childNodes=[],t?this.setDataSource(t):e&&this.setChildNodes(e));var r=this.satellite;r!==Q&&(this.satellite=Q,K(this,r));var i=this.owner;i&&(this.owner=null,this.setOwner(i))},setChildNodesState:function(e,t){var n=String(e),r=this.childNodesState;if(!w.values[n])throw 7;if(r!=n||r.data!=t)this.childNodesState=Object(n),this.childNodesState.data=t,this.emit_childNodesStateChanged(r)},appendChild:function(e){},insertBefore:function(e,t){},removeChild:function(e){},replaceChild:function(e,t){},clear:function(e){},setChildNodes:function(e){},setGrouping:function(e,t){},setSorting:function(e,t){},setDataSource:function(e){},setOwner:function(e){if(!e||e instanceof Z==0)e=null;if(e&&this.parentNode)throw 8;var t=this.owner;if(t!==e){var n=this.listen.owner;if(t){if(this.ownerSatelliteName&&t.satellite.__auto__&&this.ownerSatelliteName in t.satellite.__auto__)return;n&&t.removeHandler(n,this),this.ownerSatelliteName&&(this.owner=null,t.setSatellite(this.ownerSatelliteName,null))}e&&n&&e.addHandler(n,this),this.owner=e,this.emit_ownerChanged(t),(this.autoDelegate==P.OWNER||this.autoDelegate===P.ANY)&&this.setDelegate(e)}},setSatellite:function(e,t,n){var r=this.satellite[e]||null,i=this.satellite.__auto__,s=i&&i[e],o=n&&s;if(o)t=s.instance,s.config.instance&&t&&delete s.config.instance.setOwner;else{t=J(t);if(t&&t.owner&&i&&t.ownerSatelliteName&&i[t.ownerSatelliteName])return;s&&(delete i[e],s.config.instance&&s.config.instance.removeHandler(Y,s),s.config.handler&&this.removeHandler(s.config.handler,s))}if(r!==t){var u=this.listen.satellite,a=this.listen["satellite:"+e],f;r&&(delete this.satellite[e],r.ownerSatelliteName=null,s&&r.destroy===F?f=r:(u&&r.removeHandler(u,this),a&&r.removeHandler(a,this),r.setOwner(null)),o&&!t&&s.config.instance&&(s.config.instance.setOwner=j));if(t){if(t instanceof Z==0){var s={owner:this,name:e,config:t,instance:null};t.handler&&this.addHandler(t.handler,s),t.instance&&(t.instance.addHandler(Y,s),t.instance.setOwner=j),i||(this.satellite===Q&&(this.satellite={}),i=this.satellite.__auto__={}),i[e]=s,G.call(s,this),!s.instance&&r&&this.emit_satelliteChanged(e,r),f&&(delete f.destroy,f.destroy());return}if(t.owner!==this){if(s&&s.config.delegate){var l=t.autoDelegate;t.autoDelegate=!1,t.setOwner(this),t.autoDelegate=l}else t.setOwner(this);if(t.owner!==this)return;u&&t.addHandler(u,this),a&&t.addHandler(a,this)}else t.ownerSatelliteName&&(delete this.satellite[t.ownerSatelliteName],this.emit_satelliteChanged(t.ownerSatelliteName,t));this.satellite==Q&&(this.satellite={}),this.satellite[e]=t,t.ownerSatelliteName=e}this.emit_satelliteChanged(e,r),f&&(delete f.destroy,f.destroy())}},getChildNodesDataset:function(){return H[this.basisObjectId]||new lt({sourceNode:this})},destroy:function(){S.prototype.destroy.call(this),this.dataSource||this.dataSourceAdapter_?this.setDataSource():this.firstChild&&this.clear(),this.parentNode&&this.parentNode.removeChild(this),this.grouping&&(this.grouping.setOwner(),this.grouping=null),this.owner&&this.setOwner();var e=this.satellite;if(e!==Q){var t=e.__auto__;delete e.__auto__;for(var n in t)t[n].config.instance&&!t[n].instance&&t[n].config.instance.destroy();for(var n in e){var r=e[n];r.owner=null,r.ownerSatelliteName=null,r.destroy===F&&delete r.destroy,r.destroy()}this.satellite=null}this.childNodes=null,this.parentNode=null,this.previousSibling=null,this.nextSibling=null,this.firstChild=null,this.lastChild=null}}),et=f(Z,{className:a+".PartitionNode",autoDestroyIfEmpty:!1,nodes:null,first:null,last:null,init:function(){this.nodes=[],Z.prototype.init.call(this)},insert:function(e,t){var n=this.nodes,r=t?n.indexOf(t):-1;r==-1?(n.push(e),this.last=e):n.splice(r,0,e),this.first=n[0],e.groupNode=this,this.emit_childNodesModified({inserted:[e]})},remove:function(e){var t=this.nodes;h(t,e)&&(this.first=t[0]||null,this.last=t[t.length-1]||null,e.groupNode=null,this.emit_childNodesModified({deleted:[e]})),!this.first&&this.autoDestroyIfEmpty&&this.destroy()},clear:function(){if(!this.first)return;var e=this.nodes;for(var t=e.length;t-->0;)e[t].groupNode=null;this.nodes=[],this.first=null,this.last=null,this.emit_childNodesModified({deleted:e}),this.autoDestroyIfEmpty&&this.destroy()},destroy:function(){Z.prototype.destroy.call(this),this.nodes=null,this.first=null,this.last=null}}),tt={itemsChanged:function(e,t){var n={},r=[];if(t.deleted){n.deleted=r;if(this.childNodes.length==t.deleted.length){r=c(this.childNodes);for(var i=0,s;s=r[i];i++)q(s);var o=this.dataSource;this.dataSource=null,this.clear(!0),this.dataSource=o,this.dataSourceMap_={}}else for(var i=0,u;u=t.deleted[i];i++){var a=u.basisObjectId,f=this.dataSourceMap_[a];q(f),delete this.dataSourceMap_[a],this.removeChild(f),r.push(f)}}if(t.inserted){n.inserted=[];for(var i=0,u;u=t.inserted[i];i++){var l=st(this,{delegate:u});I(l),this.dataSourceMap_[u.basisObjectId]=l,n.inserted.push(l),this.firstChild&&this.insertBefore(l)}}this.firstChild?this.emit_childNodesModified(n):this.setChildNodes(n.inserted);if(this.destroyDataSourceMember&&r.length)for(var i=0,u;u=r[i];i++)u.destroy()},stateChanged:function(e){this.setChildNodesState(e.state,e.state.data)},destroy:function(e){this.dataSourceAdapter_||this.setDataSource()}},nt={datasetChanged:function(e){this.setDataSource(e)},destroy:function(){this.setDataSource()}},ot={childClass:Z,childFactory:null,listen:{dataSource:tt},getChild:function(e,t){return n.array.search(this.childNodes,e,t)},getChildByName:function(e){return this.getChild(e,"name")},appendChild:function(e){return this.insertBefore(e)},insertBefore:function(e,t){if(!this.childClass)throw 11;if(e.firstChild){var n=this;while(n=n.parentNode)if(n===e)throw 12}var r=e&&e instanceof this.childClass;if(this.dataSource){if(!r||!e.delegate||this.dataSourceMap_[e.delegate.basisObjectId]!==e)throw 13}else if(this.dataSourceAdapter_)throw 14;r||(e=st(this,e instanceof S?{delegate:e}:e));if(e.owner)throw 15;var i=e.parentNode===this,s=this.childNodes,o=this.grouping,u,a=e.groupNode,f=null,l=this.sorting,c,p=!1,d,m=-1,g,y;i&&(g=e.nextSibling,y=e.previousSibling),l!==v&&(t=null,c=this.sortingDesc,d=l(e)||0,i&&(d===e.sortingValue?p=!0:(!g||(c?g.sortingValue<=d:g.sortingValue>=d))&&(!y||(c?y.sortingValue>=d:y.sortingValue<=d))&&(e.sortingValue=d,p=!0)));if(o){var n;f=o.getGroupNode(e,!0),u=f.nodes;if(a===f)if(p||l===v&&g===t)return e;l!==v?a===f&&p?g&&g.groupNode===f?m=u.indexOf(g):m=u.length:(m=X(u,d,R,c),e.sortingValue=d):t&&t.groupNode===f?m=u.indexOf(t):m=u.length;if(m<u.length)t=u[m];else if(f.last)t=f.last.nextSibling;else{n=f,t=null;while(n=n.nextSibling)if(t=n.first)break}if(e===t||i&&g===t)return a!==f&&(a&&a.remove(e),f.insert(e,t)),e;m=-1}else if(l!==v){if(p)return e;m=X(s,d,R,c),t=s[m],e.sortingValue=d;if(e===t||i&&g===t)return e}else{if(t&&t.parentNode!==this)throw 16;if(i){if(g===t)return e;if(e===t)throw 17}}if(i){g?(g.previousSibling=y,e.nextSibling=null):this.lastChild=y,y?(y.nextSibling=g,e.previousSibling=null):this.firstChild=g;if(m==-1)h(s,e);else{var b=s.indexOf(e);s.splice(b,1),m-=b<m}a&&(a.remove(e),a=null)}else e.parentNode&&e.parentNode.removeChild(e);a!=f&&f.insert(e,t);if(t){m==-1&&(m=s.indexOf(t));if(m==-1)throw 18;e.nextSibling=t,s.splice(m,0,e)}else m=s.length,s.push(e),t={previousSibling:this.lastChild},this.lastChild=e;return e.parentNode=this,e.previousSibling=t.previousSibling,m==0?this.firstChild=e:t.previousSibling.nextSibling=e,t.previousSibling=e,i||(V(e,e.contextSelection,this.selection||this.contextSelection,!0),$(e,this.disabled||this.contextDisabled),(e.underMatch_||this.matchFunction)&&e.match&&e.match(this.matchFunction),(e.autoDelegate==P.PARENT||e.autoDelegate===P.ANY)&&e.setDelegate(this),this.dataSource||this.emit_childNodesModified({inserted:[e]}),e.listen.parentNode&&this.addHandler(e.listen.parentNode,e)),e},removeChild:function(e){if(!e||e.parentNode!==this)throw 19;if(e instanceof this.childClass==0)throw 20;if(this.dataSource){if(this.dataSource.has(e.delegate))throw 21}else if(this.dataSourceAdapter_)throw 22;var t=this.childNodes.indexOf(e);if(t==-1)throw 23;return this.childNodes.splice(t,1),e.parentNode=null,e.nextSibling?e.nextSibling.previousSibling=e.previousSibling:this.lastChild=e.previousSibling,e.previousSibling?e.previousSibling.nextSibling=e.nextSibling:this.firstChild=e.nextSibling,e.nextSibling=null,e.previousSibling=null,e.listen.parentNode&&this.removeHandler(e.listen.parentNode,e),V(e,e.contextSelection,null,!0),e.groupNode&&e.groupNode.remove(e),this.dataSource||this.emit_childNodesModified({deleted:[e]}),(e.autoDelegate==P.PARENT||e.autoDelegate===P.ANY)&&e.setDelegate(),e},replaceChild:function(e,t){if(this.dataSource)throw 24;if(this.dataSourceAdapter_)throw 25;if(t==null||t.parentNode!==this)throw 26;return this.insertBefore(e,t),this.removeChild(t)},clear:function(e){if(this.dataSource&&this.dataSource.itemCount)throw 27;if(!this.firstChild)return;e&&V(this,this.selection||this.contextSelection,null,!1,!0);var t=this.childNodes;this.firstChild=null,this.lastChild=null,this.childNodes=[],this.emit_childNodesModified({deleted:t});for(var n=t.length;n-->0;){var r=t[n];r.listen.parentNode&&r.parentNode.removeHandler(r.listen.parentNode,r),r.parentNode=null,r.groupNode=null,e?(r.nextSibling=null,r.previousSibling=null,(r.autoDelegate==P.PARENT||r.autoDelegate===P.ANY)&&r.setDelegate()):r.destroy()}if(this.grouping)for(var t=this.grouping.childNodes,n=t.length-1,i;i=t[n];n--)i.clear()},setChildNodes:function(e,t){!this.dataSource&&!this.dataSourceAdapter_&&this.clear(t);if(e){"length"in e==0&&(e=[e]);if(e.length){var n=this.emit_childNodesModified;this.emit_childNodesModified=p;for(var r=0,i=e.length;r<i;r++)this.insertBefore(e[r]);this.emit_childNodesModified=n,this.emit_childNodesModified({inserted:this.childNodes})}}},setDataSource:function(e){if(!this.childClass)throw 28;e=n.data.resolveDataset(this,this.setDataSource,e,"dataSourceAdapter_");if(this.dataSource!==e){var t=this.dataSource,r=this.listen.dataSource;t&&(this.dataSourceMap_=null,this.dataSource=null,r&&t.removeHandler(r,this));if(this.firstChild){if(t)for(var i=0,s;s=this.childNodes[i];i++)q(s);this.clear()}this.dataSource=e,e?(this.dataSourceMap_={},this.setChildNodesState(e.state,e.state.data),r&&(e.addHandler(r,this),e.itemCount&&r.itemsChanged&&r.itemsChanged.call(this,e,{inserted:e.getItems()}))):this.setChildNodesState(w.UNDEFINED),this.emit_dataSourceChanged(t)}},setGrouping:function(e,t){if(typeof e=="function"||typeof e=="string")e={rule:e};e instanceof at==0&&(e=e&&typeof e=="object"?new this.groupingClass(e):null);if(this.grouping!==e){var n=this.grouping,r;if(n){this.grouping=null;if(!e&&this.firstChild){this.sorting!==v?r=W(this):r=this.childNodes,n.nullGroup.clear();var i=n.childNodes.slice(0);for(var s=0;s<i.length;s++)i[s].clear();rt(this,r)}n.setOwner()}if(e){this.grouping=e,e.setOwner(this);if(this.firstChild){this.sorting!==v?r=W(this):r=this.childNodes;for(var s=0,o;o=r[s];s++)o.groupNode=this.grouping.getGroupNode(o,!0);r=it(this,r),rt(this,r)}}this.emit_groupingChanged(n)}},setSorting:function(e,t){e=d(e),t=!!t;if(this.sorting!==e||this.sortingDesc!=!!t){var n=this.sorting,r=this.sortingDesc;this.sorting=e,this.sortingDesc=!!t;if(e!==v&&this.firstChild){var i=[],s;for(var o=this.firstChild;o;o=o.nextSibling)o.sortingValue=e(o)||0;if(this.grouping)for(var u=this.grouping.nullGroup;u;u=u.nextSibling)s=u.nodes=W({childNodes:u.nodes,sortingDesc:this.sortingDesc}),u.first=s[0]||null,u.last=s[s.length-1]||null,i.push.apply(i,s);else i=W(this);rt(this,i)}this.emit_sortingChanged(n,r)}},setMatchFunction:function(e){if(this.matchFunction!=e){var t=this.matchFunction;this.matchFunction=e;for(var n=this.lastChild;n;n=n.previousSibling)n.match(e);this.emit_matchFunctionChanged(t)}}},ut=f(Z,ot,{className:a+".Node",emit_enable:g("enable")&&function(){for(var e=this.firstChild;e;e=e.nextSibling)$(e,!1);y.enable.call(this)},emit_disable:g("disable")&&function(){for(var e=this.firstChild;e;e=e.nextSibling)$(e,!0);y.disable.call(this)},emit_satelliteChanged:function(e,t){Z.prototype.emit_satelliteChanged.call(this,e,t),this.satellite[e]instanceof ut&&$(this.satellite[e],this.disabled||this.contextDisabled)},emit_select:g("select"),emit_unselect:g("unselect"),emit_match:g("match"),emit_unmatch:g("unmatch"),emit_matchFunctionChanged:g("matchFunctionChanged","oldMatchFunction"),selectable:!0,selected:!1,selection:null,contextSelection:null,matchFunction:null,matched:!0,disabled:!1,contextDisabled:!1,listen:{owner:{enable:function(){$(this,!1)},disable:function(){$(this,!0)}}},init:function(){this.selection&&(this.selection instanceof x==0&&(this.selection=new ct(this.selection)),this.listen.selection&&this.selection.addHandler(this.listen.selection,this)),Z.prototype.init.call(this),this.disabled&&this.emit_disable(),this.selected&&(this.selected=!1,this.select(!0))},setSelection:function(e){if(this.selection!==e)return V(this,this.selection||this.contextSelection,e||this.contextSelection,!1,!0),this.selection&&this.listen.selection&&this.selection.removeHandler(this.listen.selection,this),this.selection=e,e&&this.listen.selection&&e.addHandler(this.listen.selection,this),!0},select:function(e){var t=this.selected,n=this.contextSelection;return n?e?t?n.remove([this]):n.add([this]):this.selectable&&n.set([this]):!t&&this.selectable&&(this.selected=!0,this.emit_select()),this.selected!=t},unselect:function(){var e=this.selected;if(e){var t=this.contextSelection;t?t.remove([this]):(this.selected=!1,this.emit_unselect())}return this.selected!=e},setSelected:function(e,t){return e?this.select(t):this.unselect()},enable:function(){var e=this.disabled;return e&&(this.disabled=!1,this.contextDisabled||this.emit_enable()),this.disabled!=e},disable:function(){var e=this.disabled;return e||(this.disabled=!0,this.contextDisabled||this.emit_disable()),this.disabled!=e},setDisabled:function(e){return e?this.disable():this.enable()},isDisabled:function(){return this.disabled||this.contextDisabled},match:function(e){typeof e!="function"&&(e=null),this.underMatch_&&!e&&this.underMatch_(this,!0),this.underMatch_=e;var t=!e||e(this);this.matched!=t&&(this.matched=t,t?this.emit_match():this.emit_unmatch())},destroy:function(){this.unselect(),this.contextSelection=null,this.selection&&this.setSelection(),Z.prototype.destroy.call(this)}}),at=f(Z,ot,{className:a+".GroupingNode",emit_childNodesModified:function(e){y.childNodesModified.call(this,e),this.nullGroup.nextSibling=this.firstChild;var t;if(t=e.inserted){for(var n=0,r;r=t[n++];)r.groupId_=r.delegate?r.delegate.basisObjectId:r.data.id,this.map_[r.groupId_]=r;if(this.dataSource&&this.nullGroup.first){var i=this.owner,s=c(this.nullGroup.nodes);for(var n=s.length;n-->0;)i.insertBefore(s[n],s[n].nextSibling)}}},emit_ownerChanged:function(e){e&&e.grouping===this&&e.setGrouping(null,!0),this.owner&&this.owner.grouping!==this&&this.owner.setGrouping(this),y.ownerChanged.call(this,e),!this.owner&&this.autoDestroyWithNoOwner&&this.destroy()},map_:null,nullGroup:null,autoDestroyWithNoOwner:!0,autoDestroyEmptyGroups:!0,rule:v,childClass:et,childFactory:function(e){return new this.childClass(l({autoDestroyIfEmpty:this.dataSource?!1:this.autoDestroyEmptyGroups},e))},init:function(){this.map_={},this.nullGroup=new et,Z.prototype.init.call(this)},getGroupNode:function(e,t){var n=this.rule(e),r=n instanceof S,i=this.map_[r?n.basisObjectId:n];return this.dataSource&&(t=!1),!i&&t&&(i=this.appendChild(r?n:{data:{id:n,title:n}})),i||this.nullGroup},setDataSource:function(e){var t=this.dataSource;ot.setDataSource.call(this,e);var n=this.owner;if(n&&this.dataSource!==t){var r=c(n.childNodes);for(var i=r.length-1;i>=0;i--)n.insertBefore(r[i],r[i+1])}},insertBefore:function(e,t){e=ot.insertBefore.call(this,e,t);var n=e.first;if(n){var r=n.parentNode,i=e.last,s,o,u,a=null,f=e;while(f=f.nextSibling)if(a=f.first)break;u=a?a.previousSibling:r.lastChild,s=n.previousSibling,o=i.nextSibling;if(o!==a){var l=r.childNodes,c=e.nodes,h=c.length;s&&(s.nextSibling=o),o&&(o.previousSibling=s),u&&(u.nextSibling=n),a&&(a.previousSibling=i),n.previousSibling=u,i.nextSibling=a;var p=l.indexOf(n),d=a?l.indexOf(a):l.length;d>p&&(d-=h),l.splice(p,h),l.splice.apply(l,[d,0].concat(c));if(!u||!s)r.firstChild=l[0];if(!a||!o)r.lastChild=l[l.length-1];if(n instanceof et)for(var v=h,m=a;v-->0;)r.insertBefore(c[v],m),m=c[v]}}return e},removeChild:function(e){if(e=ot.removeChild.call(this,e)){delete this.map_[e.groupId_];for(var t=0,n;n=e.nodes[t];t++)n.parentNode.insertBefore(n)}return e},clear:function(e){var t=[],n=this.getGroupNode,r=this.nullGroup;this.getGroupNode=function(){return r};for(var i=this.firstChild;i;i=i.nextSibling)t.push.apply(t,i.nodes);for(var s=0,o;o=t[s];s++)o.parentNode.insertBefore(o);this.getGroupNode=n,ot.clear.call(this,e),this.map_={}},destroy:function(){this.autoDestroyWithNoOwner=!1,Z.prototype.destroy.call(this),this.nullGroup.destroy(),this.nullGroup=null,this.map_=null}});Z.prototype.groupingClass=at;var ft={childNodesModified:function(e,t){var n=this.members_,r={},i,s=0,o=0,u=t.inserted,a=t.deleted;if(u&&u.length){r.inserted=u;while(i=u[s])n[i.basisObjectId]=i,s++}if(a&&a.length){r.deleted=a;while(i=a[o])delete n[i.basisObjectId],o++}(s||o)&&this.emit_itemsChanged(r)},destroy:function(){this.destroy()}},lt=f(x,{className:a+".ChildNodesDataset",sourceNode:null,init:function(){x.prototype.init.call(this);var e=this.sourceNode;H[e.basisObjectId]=this,e.firstChild&&ft.childNodesModified.call(this,e,{inserted:e.childNodes}),e.addHandler(ft,this)},destroy:function(){this.sourceNode.removeHandler(ft,this),delete H[this.sourceNode.basisObjectId],x.prototype.destroy.call(this)}}),ct=f(T,{className:a+".Selection",multiple:!1,emit_itemsChanged:function(e){T.prototype.emit_itemsChanged.call(this,e);if(e.inserted)for(var t=0,n;n=e.inserted[t];t++)n.selected||(n.selected=!0,n.emit_select());if(e.deleted)for(var t=0,n;n=e.deleted[t];t++)n.selected&&(n.selected=!1,n.emit_unselect())},add:function(e){if(!this.multiple){if(this.itemCount)return this.set(e);e=[e[0]]}var t=[];for(var n=0,r;r=e[n];n++)r.contextSelection==this&&r.selectable&&t.push(r);return T.prototype.add.call(this,t)},set:function(e){var t=[];for(var n=0,r;r=e[n];n++)r.contextSelection==this&&r.selectable&&t.push(r);return this.multiple||t.splice(1),T.prototype.set.call(this,t)}});t.exports={DELEGATE:P,AbstractNode:Z,Node:ut,GroupingNode:at,PartitionNode:et,ChildNodesDataset:lt,Selection:ct,nullSelection:new x}},"6.js":function(e,t,n,r,i,s,o,u){function et(e,t){return'<span class="basisjs-markup" data-basisjs-l10n="'+t+'">'+String(e)+"</span>"}function tt(e){typeof e=="string"&&(e=n.l10n.token(e));if(!e)return null;var t=e.basisObjectId,r=Y[t];return r||(r=Y[t]=new dt(new Z(e))),r}function nt(){return"i"+n.genUID()+"__"}function rt(e,t){function n(t){f>o&&(r.push((t||"")+e.substring(o,f)),o=f)}var r=[],i=e.split(""),s=i.length,o=0,u=!1,a;t||(t=nt());for(var f=0;f<s;f++)switch(i[f]){case"'":case'"':a=i[f];while(++f<s)if(i[f]=="\\")f++;else if(i[f]==a){f++;break}break;case"/":if(i[f+1]=="*"){f++;while(++f<s)if(i[f]=="*"&&i[f+1]=="/"){f+=2;break}}break;case"{":u=!0;break;case"}":u=!1;break;case".":if(!u){f++,n();while(++f<s)if(!/[a-z0-9\-\_]/.test(i[f])){n(t),f-=1;break}}}return n(),r.join("")}function st(e){var t=n.resource(e).fetch();typeof t.startUse=="function"&&t.startUse()}function ot(e){var t=n.resource(e).fetch();typeof t.stopUse=="function"&&t.stopUse()}function ut(){this.destroyBuilder&&lt.call(this);for(var e=0,t;t=this.attaches_[e];e++)t.handler.call(t.context)}function at(e){var t=[];for(var n=0;n<e.length;n++)t.push(Array.isArray(e[n])?at(e[n]):e[n]);return t}function ft(e,t,r,i){var s=e,o;typeof s=="function"&&(t="baseURI"in e?e.baseURI:t,o="url"in e?e.url:o,s=s()),s instanceof n.Token&&(t="baseURI"in e?e.baseURI:t,o="url"in e?e.url:o,s=s.get());if(Array.isArray(s))r&&(s=at(s)),s={tokens:s};else if(typeof s!="object"||!Array.isArray(s.tokens))s=String(s);return typeof s=="string"&&(s=it(s,t,i,o,e)),s}function lt(){var e=ft(this.source,this.baseURI,!1,{isolate:this.getIsolatePrefix()}),t=this.destroyBuilder,n=this.builder(e.tokens,this),r=this.deps_;if(r){this.deps_=null;for(var i=0,s;s=r[i];i++)s.bindingBridge.detach(s,lt,this)}if(e.deps&&e.deps.length){r=e.deps,this.deps_=r;for(var i=0,s;s=r[i];i++)s.bindingBridge.attach(s,lt,this)}this.createInstance=n.createInstance,this.clearInstance=n.destroyInstance,this.getBinding=function(){return{names:n.keys}},this.destroyBuilder=n.destroy;var o=e.resources&&e.resources.length>0?e.resources:null;if(o)for(var i=0,u;u=o[i];i++)st(u);if(this.resources)for(var i=0,u;u=this.resources[i];i++)ot(u);this.resources=o,t&&t(!0)}function ht(e){var t=pt(e);if(t.template)return t.template;var n=document.getElementById(e),r="";return n&&n.tagName=="SCRIPT"&&n.type=="text/basis-template"&&(r=n.textContent||n.text),t.template=new dt(r)}function pt(e){var t=ct[e];return t||(t=ct[e]=function(){return ht(e).source}),t}function gt(e,t){var r=n.array(arguments),t=r.pop();return new vt({rule:t,events:r.join(" ").trim().split(/\s+/)})}function wt(){var e=n.array(arguments).join("."),t=At[e];return t||(t=new bt("",e),At[e]=t),t}function Et(e){var t={},n=[];for(var r=0;r<e.length;r++)t[e[r]]||(t[e[r]]=!0,n.push(e[r]));return n}function St(e,t){var n=[];n.source=Et(t).join("/");var r={base:!0};for(var i=0;i<t.length;i++){var s=t[i]||"base";if(s==e||r[s])continue;var o=kt(s);r[s]=!0,n.push(s),t.splice.apply(t,[i+1,0].concat(Lt[s].fallback))}return n.unshift(e),e!="base"&&n.push("base"),n.value=n.join("/"),n}function xt(e,t){var n=Lt[e].sourcesList;for(var r=0,i;i=n[r];r++)if(i.hasOwnProperty(t))return i[t];return""}function Tt(e){return Lt[Mt].fallback.indexOf(e)!=-1}function Nt(e){wt(e).set()}function Ct(e){for(var t in At)Nt(t)}function kt(e){e||(e="base");if(Lt[e])return Lt[e].theme;if(!/^([a-z0-9\_\-]+)$/.test(e))throw 31;var t={},r=[t],i=new yt;Lt[e]={theme:i,sources:t,sourcesList:r,fallback:[]};var s=function(n,r){return n in t==0&&(t[n]=r,Tt(e)&&Nt(n)),wt(n)};return n.object.extend(i,{name:e,fallback:function(t){if(i!==Ot&&arguments.length>0){var n=typeof t=="string"?t.split("/"):[],r={};n=St(e,n);if(Lt[e].fallback.source!=n.source){Lt[e].fallback.source=n.source;for(var s in Lt){var o=Lt[s].fallback,n=St(s,(o.source||"").split("/"));if(n.value!=o.value){r[s]=!0,Lt[s].fallback=n;var u=Lt[s].sourcesList;u.length=n.length;for(var a=0;a<u.length;a++)u[a]=Lt[n[a]].sources}}}var f=Lt[Mt].fallback;for(var s in r)if(Tt(s)){Ct();break}}var l=Lt[e].fallback.slice(1);return l.source=Lt[e].fallback.source,l},define:function(e,t){typeof e=="function"&&(e=e());if(typeof e=="string"){if(typeof t=="object"){var n=e,r=t,o={};for(var u in r)r.hasOwnProperty(u)&&(o[u]=s(n+"."+u,r[u]));return o}return arguments.length==1?wt(e):s(e,t)}if(typeof e=="object"){var r=e;for(var a in r)r.hasOwnProperty(a)&&s(a,r[a]);return i}},apply:function(){if(e!=Mt){Mt=e,Ct();for(var t=0,n;n=_t[t];t++)n.fn.call(n.context,e)}return i},getSource:function(n,r){return r?xt(e,n):t[n]},drop:function(n){t.hasOwnProperty(n)&&(delete t[n],Tt(e)&&Nt(n))}}),Lt[e].fallback=St(e,[]),r.push(Lt.base.sources),i}function Dt(e,t,n){_t.push({fn:e,context:t}),n&&e.call(t,Mt)}n.require("./2.js");var a=this.path,f=n.Class,l=n.cleaner,c=n.path,h=n.array.search,p=n.array.add,d=n.array.remove,v=[],m={},g=2,y=1,b=2,w=4,E=5,S=6,x=3,T=8,N=0,C=1,k=2,L=3,A=4,O=/^event-(.+)$/,M={4:"class",5:"style"},_={"class":w,style:E},D={2:A,4:A-1,5:A-1,6:2},P=3,H=4,B=5,j=3,F=3,I="Invalid or unsupported syntax",q=/((?:.|[\r\n])*?)(\{(?:l10n:([a-zA-Z_][a-zA-Z0-9_\-]*(?:\.[a-zA-Z_][a-zA-Z0-9_\-]*)*(?:\.\{[a-zA-Z_][a-zA-Z0-9_\-]*\})?)\})?|<(\/|!--(\s*\{)?)?|$)/g,R=/([a-z_][a-z0-9\-_]*)(:|\{|\s*(\/?>)?)/ig,U=/([a-z_][a-z0-9_\-]*)(:|\{|=|\s*)|(\/?>)/ig,z=/(.|[\r\n])*?-->/g,W=/([a-z_][a-z0-9_\-]*(?::[a-z_][a-z0-9_\-]*)?)>/ig,X=/([a-z_][a-z0-9_]*)(\||\}\s*)/ig,V=/"((?:(\\")|[^"])*?)"\s*/g,$=/^/g,J=/^(area|base|br|col|command|embed|hr|img|input|link|meta|param|source)$/i,K={text:/((?:.|[\r\n])*?)(?:<\/b:text>|$)/g,style:/((?:.|[\r\n])*?)(?:<\/b:style>|$)/g},Q=/\\"/g,G=function(e){var t=[],n=[],r={childs:t},i,s,o,u,a=!1,f=0,l,c=q,h=0,p;e=e.trim();while(h<e.length||c!=q){c.lastIndex=h,u=h,p=c.exec(e);if(!p||p.index!==h){if(c==X&&s&&s.type==T){c=z;continue}a&&(r=n.pop()),s&&r.childs.pop();if(s=r.childs.pop())s.type==x&&!s.refs?f-="len"in s?s.len:s.value.length:r.childs.push(s);a=!1,c=q;continue}h=c.lastIndex;switch(c){case q:l=u+p[1].length,f!=l&&(i=f==u?p[1]:e.substring(f,l),s=i.replace(/\s*(\r\n?|\n\r?)\s*/g,""),s&&r.childs.push({type:x,len:i.length,value:s})),f=l,p[3]?r.childs.push({type:x,refs:["l10n:"+p[3]],value:"{l10n:"+p[3]+"}"}):p[2]=="{"?(o=h-1,r.childs.push(s={type:x}),c=X):p[4]?p[4]=="/"?(s=null,c=W):(r.childs.push(s={type:T}),p[5]?(o=h-p[5].length,c=X):(o=h,c=z)):p[2]&&(a=!0,n.push(r),r.childs.push(s={type:y,attrs:[],childs:[]}),r=s,c=R);break;case W:p[1]!==(r.prefix?r.prefix+":":"")+r.name?r.childs.push({type:x,value:"</"+p[0]}):r=n.pop(),c=q;break;case R:case U:if(p[2]==":"){s.prefix?c=$:s.prefix=p[1];break}p[1]&&(s.name=p[1],s.type==b&&r.attrs.push(s));if(p[2]=="{"){s.type==y?c=X:c=$;break}if(p[3]){a=!1;if(p[3]=="/>"||!r.prefix&&J.test(r.name))r=n.pop();else if(r.prefix=="b"&&r.name in K){c=K[r.name];break}c=q;break}if(p[2]=="="){c=V;break}s={type:b},c=U;break;case z:s.value=e.substring(o,h-3),c=q;break;case X:s.refs?s.refs.push(p[1]):s.refs=[p[1]],p[2]!="|"&&(s.type==x?(h-=p[2].length-1,s.value=e.substring(o,h),c=q):s.type==T?c=z:s.type==b&&e[h]=="="?(h++,c=V):(s={type:b},c=U));break;case V:s.value=p[1].replace(Q,'"'),s={type:b},c=U;break;case K.text:case K.style:r.childs.push({type:x,value:p[1]}),r=n.pop(),c=q;break;default:throw 29}c==q&&(f=h)}return f!=h&&r.childs.push({type:x,value:e.substring(f,h)}),t.templateTokens=!0,t},Y={},Z=n.Token.subclass({className:a+".L10nProxyToken",token:null,url:"",init:function(e){this.url=e.dictionary.resource.url+":"+e.name,this.token=e,this.set(),e.attach(this.set,this)},set:function(){return n.Token.prototype.set.call(this,this.token.type=="markup"?et(this.token.value,this.token.name+"@"+this.token.dictionary.resource.url):"")},destroy:function(){n.Token.prototype.destroy.call(this),this.token=null}}),it=function(){function P(e){return(e.prefix?e.prefix+":":"")+e.name}function B(e,t){return f[t]||(t.charAt(0)=="#"?f[t]=String.fromCharCode(t.charAt(1)=="x"||t.charAt(1)=="X"?parseInt(t.substr(2),16):t.substr(1)):l&&(l.innerHTML=e,f[t]=l.firstChild?l.firstChild.nodeValue:e)),f[t]||e}function j(e){return e.replace(a,B)}function F(e){var t=e.refs;return!t||!t.length?0:t}function I(e){var t,n=[],r=[],i={};for(var s=0;s<e.length;s++)s%2?(t=e[s],i[t]||(i[t]=n.length,n.push(t)),r.push(i[t])):e[s]&&r.push(j(e[s]));return[n,r]}function q(e,n){var a=0,f,l;if(n)switch(e){case"class":if(f=n.match(t)){var c=[];a=[];for(var h=0,p;p=f[h];h++)(l=p.match(r))?a.push([l[1]||"",l[2]]):c.push(p);n=c.join(" ")}break;case"style":var d=[];a=[];if(f=n.match(i))for(var h=0,p;p=f[h];h++){var l=p.match(s),v=l[1],n=l[2].trim(),m=n.split(o);if(m.length>1){var g=I(m);g.push(v),a.push(g)}else d.push(v+": "+j(n))}n=d.join("; "),n&&(n+=";");break;default:f=n.split(u),f.length>1?a=I(f):n=j(n)}return a&&!a.length&&(a=0),{binding:a,value:n,type:_[e]||2}}function R(e,t,n){var r=e.attrs,i=[],s,o,a;for(var f=0,l;l=r[f];f++){if(l.prefix=="b"){switch(l.name){case"ref":var c=(l.value||"").trim().split(/\s+/);for(var h=0;h<c.length;h++)U(t,c[h]);break;case"show":case"hide":o=l}continue}if(a=l.name.match(O)){i.push(a[1]==l.value?[S,a[1]]:[S,a[1],l.value]);continue}var p=q(l.name,l.value),d=[p.type,p.binding,F(l)];p.type==2&&d.push(P(l)),p.value&&(!n||!p.binding||p.type!=2)&&d.push(p.value),p.type==E&&(s=d),i.push(d)}if(o){s||(s=[E,0,0],i.push(s)),s[1]||(s[1]=[]);var v=I((o.value||o.name).split(u));v[0].length-v[1].length?s[3]=(s[3]?s[3]+"; ":"")+(o.name=="show"^o.value===""?"":"display: none"):(o.name=="show"&&(s[3]=(s[3]?s[3]+"; ":"")+"display: none"),s[1].push(v.concat("display",o.name)))}return i.length?i:0}function U(e,t){e[k]||(e[k]=[]),p(e[k],t),t!="element"&&(e[C]=e[k].length==1?t:0)}function z(e,t){var n=e[k].indexOf(t);if(n!=-1){var r=e[C]&&typeof e[C]=="number";e[k].splice(n,1),r&&n==e[C]-1&&(e[C]=t),e[k].length?r&&(e[C]-=n<e[C]-1):e[k]=0}}function W(e){var t={};if(e.attrs)for(var n=0,r;r=e.attrs[n];n++)t[P(r)]=r.value;return t}function X(e,t){for(var n=0;n<t.length;n++)p(e,t[n])}function V(e,t,n){for(var r=0,i;i=t[r];r++)i[1]!==g&&(i[1]=n+i[1]);e.unshift.apply(e,t)}function $(e,t,r,i){var s;if(r)s=c.resolve(e.baseURI+r);else{var o=t.childs[0];s=n.resource.virtual("css",o?o.value:"",e.sourceUrl).url}return e.resources.push([s,i]),s}function J(t,r,i,s){function o(t,n,r){var s=W(t);n&&(s.name=n);if(!s.name)return;if(!e.test(s.name))return;var o=ht[s.ref||"element"];if(o&&o.token[N]==y){var u=o.token,a=s.name.match(O),f=a?S:_[s.name]||b,l=D[f]||A,c=u&&h(u,s.name,function(e){return e[N]==S?"event-"+e[1]:M[e[N]]||e[L]},H);!c&&r!="remove"&&(a?c=[f,a[1]]:(c=[f,0,0,f==b?s.name:""],f==b&&c.push("")),u||(u=[],o.token.push(u)),u.push(c));var v=s.name=="class"||s.name=="style";switch(r){case"set":if(c[N]==S){s.value==a[1]?c.length=2:c[l]=s.value;return}var m=q(s.name,s.value);c[C]=m.binding,!i.optimizeSize||!c[C]||v?c[l]=m.value||"":c.length=l;if(v&&!c[C]&&!c[l]){d(u,c);return}break;case"append":var m=q(s.name,s.value);if(!a)if(m.binding){var g=c[C];if(g)switch(s.name){case"style":var w={};for(var E=0,x;x=g[E];E++)w[x[2]]=E;for(var E=0,T;T=m.binding[E];E++)T[2]in w?g[w[T[2]]]=T:g.push(T);break;case"class":g.push.apply(g,m.binding);break;default:m.binding[0].forEach(function(e){p(this,e)},g[0]);for(var E=0;E<m.binding[1].length;E++){var k=m.binding[1][E];typeof k=="number"&&(k=g[0].indexOf(m.binding[0][k])),g[1].push(k)}}else c[C]=m.binding,v||c[C][1].unshift(c[l])}else!v&&c[C]&&c[C][1].push(s.value);m.value&&(c[l]=(c[l]||"")+(c[l]&&(a||v)?" ":"")+m.value);if(v&&!c[C]&&!c[l]){d(u,c);return}break;case"remove":c&&d(u,c)}}}var u=[];for(var a=0,f,l;f=t[a];a++){var w=F(f),E=w&&w.length==1?w[0]:0;switch(f.type){case y:if(f.prefix=="b"){var k=W(f);switch(f.name){case"style":var B=k.namespace||k.ns,I=B?g:s&&s.isolate||"",Y=$(r,f,k.src,I);B&&(Y in g==0&&(g[Y]=nt()),r.styleNSPrefix[B]=g[Y]);break;case"isolate":r.isolate||(r.isolate=k.prefix||i.isolate||nt());break;case"l10n":k.src&&(r.dictURI=c.resolve(r.baseURI,k.src));break;case"define":if("name"in k&&!r.defines[k.name])switch(k.type){case"bool":r.defines[k.name]=[k["default"]=="true"?1:0];break;case"enum":var et=k.values?k.values.trim().split(" "):[];r.defines[k.name]=[et.indexOf(k["default"])+1,et]}break;case"text":var rt=f.childs[0];t[a--]=n.object.extend(rt,{refs:(k.ref||"").trim().split(/\s+/),value:"notrim"in k?rt.value:rt.value.replace(/^\s*[\r\n]+|[\r\n]\s*$/g,"")});break;case"include":var it=k.src;if(it){var st=/^#\d+$/.test(it),ot=/^id:/.test(it),ut=st?it.substr(1):it,at;st?at=v[ut]:ot?at=pt(ut.substr(3)):/^[a-z0-9\.]+$/i.test(ut)&&!/\.tmpl$/.test(ut)?at=wt(ut):at=n.resource(c.resolve(r.baseURI+ut));if(!at)continue;if(m.indexOf(at)==-1){var lt="isolate"in k?k.isolate||nt():"",ct;ot||p(r.deps,at),st?(at.source.bindingBridge&&p(r.deps,at.source),ct=ft(at.source,at.baseURI,!0,i)):ct=ft(at,at.url?c.dirname(at.url)+"/":"",!0,i),ct.resources&&"no-style"in k==0&&V(r.resources,ct.resources,lt),ct.deps&&X(r.deps,ct.deps);var ht=Q(ct.tokens),dt=(f.childs||[]).slice(),vt=n.object.slice(ct.styleNSPrefix);k["class"]&&dt.push({type:y,prefix:"b",name:"append-class",attrs:[{type:b,name:"value",value:k["class"]}]}),k.id&&dt.push({type:y,prefix:"b",name:"set-attr",attrs:[{type:b,name:"name",value:"id"},{type:b,name:"value",value:k.id}]}),k.ref&&ht.element&&k.ref.trim().split(/\s+/).map(function(e){U(ht.element.token,e)});for(var mt=0,gt;gt=dt[mt];mt++)if(gt.type==y&&gt.prefix=="b")switch(gt.name){case"style":var yt=W(gt),B=yt.namespace||yt.ns,I=B?g:lt,Y=$(r,gt,yt.src,I);B&&(Y in g==0&&(g[Y]=nt()),vt[B]=g[Y]);break;case"replace":case"remove":case"before":case"after":var bt=gt.name=="replace"||gt.name=="remove",yt=W(gt),Et="ref"in yt||!bt?yt.ref:"element",St=Et&&ht[Et];if(St){var xt=St.owner.indexOf(St.token);if(xt!=-1){var Tt=[xt+(gt.name=="after"),bt];gt.name!="remove"&&(Tt=Tt.concat(J(gt.childs,r,i)||[])),St.owner.splice.apply(St.owner,Tt)}}break;case"prepend":case"append":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;if(f&&f[N]==y){var Nt=J(gt.childs,r,i)||[];gt.name=="prepend"?f.splice.apply(f,[H,0].concat(Nt)):f.push.apply(f,Nt)}break;case"attr":case"set-attr":o(gt,!1,"set");break;case"append-attr":o(gt,!1,"append");break;case"remove-attr":o(gt,!1,"remove");break;case"class":case"append-class":o(gt,"class","append");break;case"set-class":o(gt,"class","set");break;case"remove-class":o(gt,"class","remove");break;case"add-ref":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;f&&yt.name&&U(f,yt.name);break;case"remove-ref":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;f&&z(f,yt.name||yt.ref);break;default:}else ct.tokens.push.apply(ct.tokens,J([gt],r,i)||[]);ht.element&&z(ht.element.token,"element"),n.object.complete(r.styleNSPrefix,vt),lt?Z(ct.tokens,lt):ct.isolate&&!r.isolate&&(r.isolate=i.isolate||nt()),u.push.apply(u,ct.tokens)}}}continue}l=[1,E,w,P(f)],l.push.apply(l,R(f,l,i.optimizeSize)||[]),l.push.apply(l,J(f.childs,r,i)||[]);break;case x:w&&w.length==2&&h(w,"element")&&(E=w[+!w.lastSearchIndex]);if(E){var Ct=K(E,r.dictURI),kt=Ct.split(/[:@\{]/);if(kt[0]=="l10n"&&kt.length==3)if(!kt[2])d(w,E),w.length==0&&(w=null),E=0,f.value=f.value.replace(/\}$/,"@undefined}");else{var Lt=kt.slice(1).join("@"),At=n.l10n.token(Lt),Ot=tt(At);r.l10nResolved=!0;if(Ot&&At.type=="markup"){t[a--]=G('<b:include src="#'+Ot.templateId+'"/>')[0];continue}}}l=[3,E,w],(!w||f.value!="{"+w.join("|")+"}")&&l.push(j(f.value));break;case T:if(i.optimizeSize&&!E&&!w)continue;l=[8,E,w],i.optimizeSize||(!w||f.value!="{"+w.join("|")+"}")&&l.push(j(f.value))}while(l[l.length-1]===0)l.pop();u.push(l)}return u.length?u:0}function K(e,t){if(typeof e!="string")return e;var n=e.split(":");return n.length==2&&n[0]=="l10n"&&n[1].indexOf("@")==-1&&(n[1]=n[1]+"@"+t),n.join(":")}function Q(e,t,n,r){n||(n={});for(var i=r||0,s;s=e[i];i++){if(s[N]==S)continue;var o=s[k];if(o)for(var u=o.length-1,a;a=o[u];u--){if(a.indexOf(":")!=-1){z(s,a);continue}n[a]&&z(n[a].token,a),s[C]==a&&(s[C]=u+1),n[a]={owner:e,token:s}}switch(s[N]){case x:s[C]=K(s[C],t);break;case b:if(s[C]){var f=s[C][0];for(var u=0;u<f.length;u++)f[u]=K(f[u],t)}break;case y:Q(s,t,n,H)}}return n}function Y(e,t,n,r){var i=0;for(var s=r||0,o;o=e[s];s++){var u=o[N];u==y&&(i+=Y(o,t,n,H));if(u==w||u==b&&o[L]=="class"){var a=o[C],f=D[u];if(a){var l=(o[f]||"").trim().split(" ");for(var c=0,h;h=a[c];c++){if(h.length>2)continue;var d=h[1].split(":").pop(),v=t.defines[d];v?(h.push.apply(h,v),v.used=!0,v[0]&&(v.length==1?p(l,h[0]+d):p(l,h[0]+v[1][v[0]-1]))):i++}o[f]=l.join(" "),n.optimizeSize&&!o[f]&&(o.length=f)}}}return i}function Z(e,t,n,r){function i(e){var r=e.split(":");return r.length==1?t+r[0]:n?r[0]?r[0]in n.styleNSPrefix==0?e:n.styleNSPrefix[r[0]]+r[1]:r[1]:e}for(var s=r||0,o;o=e[s];s++){var u=o[N];u==y&&Z(o,t,n,H);if(u==w||u==b&&o[L]=="class"){var a=o[C],f=D[u];o[f]&&(o[f]=o[f].split(/\s+/).map(i).join(" "));if(a)for(var l=0,c;c=a[l];l++)c[0]=i(c[0])}}}var e=/^[a-z_][a-z0-9_\-]*$/i,t=/(\S+)/g,r=/^((?:[a-z_][a-z0-9_\-]*)?(?::(?:[a-z_][a-z0-9_\-]*)?)?)\{((anim:)?[a-z_][a-z0-9_\-]*)\}$/i,i=/\s*[^:]+?\s*:(?:\(.*?\)|".*?"|'.*?'|[^;]+?)+(?:;|$)/gi,s=/\s*([^:]+?)\s*:((?:\(.*?\)|".*?"|'.*?'|[^;]+?)+);?$/i,o=/\{([a-z_][a-z0-9_]*)\}/i,u=/\{([a-z_][a-z0-9_]*|l10n:[a-z_][a-z0-9_]*(?:\.[a-z_][a-z0-9_]*)*(?:\.\{[a-z_][a-z0-9_]*\})?)\}/i,a=/&([a-z]+|#[0-9]+|#x[0-9a-f]{1,4});?/gi,f=n.NODE_ENV?__nodejsRequire("./template/htmlentity.json"):{},l=n.NODE_ENV?null:document.createElement("div"),m=[],g={};return function(t,r,i,s,o){i=i||{};var u=[],a={sourceUrl:s,baseURI:r||"",tokens:null,resources:[],styleNSPrefix:{},deps:[],defines:{},unpredictable:!0,warns:u,isolate:!1};a.dictURI=s?n.path.resolve(s):r||"";if(a.dictURI){var f=n.path.extname(a.dictURI);f&&f!=".l10n"&&(a.dictURI=a.dictURI.substr(0,a.dictURI.length-f.length)+".l10n")}t.templateTokens||(t=G(String(t))),t.warns&&u.push.apply(u,t.warns),m.push(o!==!0&&o||{}),a.tokens=J(t,a,i),m.pop(),a.tokens||(a.tokens=[[3,0,0,""]]),U(a.tokens[0],"element"),Q(a.tokens,a.dictURI),a.unpredictable=!!Y(a.tokens,a,i);if(m.length==0){Z(a.tokens,a.isolate||"",a);if(a.isolate)for(var l=0,c;c=a.resources[l];l++)c[1]!==g&&(c[1]=a.isolate+c[1]);a.resources=a.resources.filter(function(e,t,r){return!n.array.search(r,String(e),String,t+1)}).map(function(e){var t=e[0],r=e[1];r===g&&(r=g[t]);if(!r)return t;var i=n.resource.virtual("css","").ready(function(e){s(),n.object.extend(e,{url:t+"?isolate-prefix="+r,baseURI:n.path.dirname(t)+"/"})}),s=n.resource(t).ready(function(e){var t=rt(e.cssText||"",r);i.update(t)});return i.url})}return delete a.defines,delete a.l10nResolved,u.length||(a.warns=!1),a}}(),ct={},dt=f(null,{className:a+".Template",__extend__:function(e){return e instanceof dt?e:e instanceof vt?new mt(e):new dt(e)},source:"",baseURI:"",init:function(e){if(v.length==4096)throw 30;this.attaches_=[],this.setSource(e||""),this.templateId=v.push(this)-1},bindingBridge:{attach:function(e,t,n){for(var r=0,i;i=e.attaches_[r];r++)if(i.handler==t&&i.context==n)return;e.attaches_.push({handler:t,context:n})},detach:function(e,t,n){for(var r=0,i;i=e.attaches_[r];r++)if(i.handler==t&&i.context==n){e.attaches_.splice(r,1);return}},get:function(){}},createInstance:function(e,t,n,r,i){return lt.call(this),this.createInstance(e,t,n,r,i)},clearInstance:function(e){},getIsolatePrefix:function(){return"i"+this.templateId+"__"},getBinding:function(e){return lt.call(this),this.getBinding(e)},setSource:function(e){var t=this.source;if(t!=e){if(typeof e=="string"){var r=e.match(/^([a-z]+):/);if(r){var i=r[1];e=e.substr(r[0].length);switch(i){case"file":e=n.resource(e);break;case"id":e=pt(e);break;case"tokens":e=n.string.toObject(e),e.isDecl=!0;break;case"raw":break;case"path":e=wt(e);break;default:}}}if(t&&t.bindingBridge){var s=t.url&&m[t.url];s&&(d(s,this),s.length||delete m[t.url]),this.baseURI="",this.source.bindingBridge.detach(t,ut,this)}e&&e.bindingBridge&&(e.url&&(this.baseURI=c.dirname(e.url)+"/",m[e.url]||(m[e.url]=[]),p(m[e.url],this)),e.bindingBridge.attach(e,ut,this)),this.source=e,ut.call(this)}},destroy:function(){this.destroyBuilder&&this.destroyBuilder(),this.attaches_=null,this.createInstance=null,this.getBinding=null,this.resources=null,this.source=null}}),vt=function(e){n.object.extend(this,e)},mt=n.Class(null,{className:a+".TemplateSwitcher",ruleRet_:null,templates_:null,templateClass:dt,ruleEvents:null,rule:String,init:function(e){this.ruleRet_=[],this.templates_=[],this.rule=e.rule;var t=e.events;if(t&&t.length){this.ruleEvents={};for(var n=0,r;r=t[n];n++)this.ruleEvents[r]=!0}l.add(this)},resolve:function(e){var t=this.rule(e),n=this.ruleRet_.indexOf(t);return n==-1&&(this.ruleRet_.push(t),n=this.templates_.push(new this.templateClass(t))-1),this.templates_[n]},destroy:function(){this.rule=null,this.templates_=null,this.ruleRet_=null}}),yt=f(null,{className:a+".Theme",get:wt}),bt=f(n.Token,{className:a+".SourceWrapper",path:"",url:"",baseURI:"",init:function(e,t){this.path=t,n.Token.prototype.init.call(this,"")},get:function(){return this.value&&this.value.bindingBridge?this.value.bindingBridge.get(this.value):this.value},set:function(){var e=xt(Mt,this.path);this.value!=e&&(this.value&&this.value.bindingBridge&&this.value.bindingBridge.detach(this.value,bt.prototype.apply,this),this.value=e,this.url=e&&e.url||"",this.baseURI=(typeof e=="object"||typeof e=="function")&&"baseURI"in e?e.baseURI:c.dirname(this.url)+"/",this.value&&this.value.bindingBridge&&this.value.bindingBridge.attach(this.value,bt.prototype.apply,this),this.apply())},destroy:function(){this.url=null,this.baseURI=null,this.value&&this.value.bindingBridge&&this.value.bindingBridge.detach(this.value,this.apply,this),n.Token.prototype.destroy.call(this)}}),Lt={},At={},Ot=kt(),Mt="base",_t=[];l.add({destroy:function(){for(var e in At)At[e].destroy();Lt=null,At=null;for(var t=0,n;n=v[t];t++)n.destroy();v=null}}),t.exports={DECLARATION_VERSION:g,TYPE_ELEMENT:y,TYPE_ATTRIBUTE:b,TYPE_ATTRIBUTE_CLASS:w,TYPE_ATTRIBUTE_STYLE:E,TYPE_ATTRIBUTE_EVENT:S,TYPE_TEXT:x,TYPE_COMMENT:T,TOKEN_TYPE:N,TOKEN_BINDINGS:C,TOKEN_REFS:k,ATTR_NAME:L,ATTR_VALUE:A,ATTR_NAME_BY_TYPE:M,ELEMENT_NAME:P,ELEMENT_ATTRS:H,ELEMENT_CHILDS:B,TEXT_VALUE:j,COMMENT_VALUE:F,L10nProxyToken:Z,TemplateSwitchConfig:vt,TemplateSwitcher:mt,Template:dt,SourceWrapper:bt,switcher:gt,tokenize:G,isolateCss:rt,getDeclFromSource:ft,makeDeclaration:it,getL10nTemplate:tt,Theme:yt,theme:kt,getThemeList:function(){return n.object.keys(Lt)},currentTheme:function(){return Lt[Mt].theme},setTheme:function(e){return kt(e).apply()},onThemeChange:Dt,define:Ot.define,get:wt,getPathList:function(){return n.object.keys(At)}}},"7.js":function(e,t,n,r,i,s,o,u){function X(e){var t=n.template.getL10nTemplate(e),r=t.templateId,i=W[r];return i||(i=W[r]=new et(t.source)),i}function V(e){return function(t){if(t.type=="click"&&t.which==3)return;var n=j[t.type]||t.type!="mouseenter"&&t.type!="mouseleave",r=t.sender,i;while(r){i=r.getAttribute&&r.getAttribute(e);if(!n||typeof i=="string")break;r=r.parentNode}if(typeof i=="string"){var s=r,o=s,u,a;if(j[t.type]){var f=t.relatedTarget;f&&(s===f||s.contains(f))&&(s=null)}while(s){u=s[_];if(typeof u=="number")if(a=K(u))break;s=s.parentNode}if(a&&a.action){var l=i.trim().split(/\s+/);t.actionTarget=o;for(var c=0,h;h=l[c++];)switch(h){case"prevent-default":t.preventDefault();break;case"stop-propagation":t.stopPropagation();break;default:a.action.call(a.context,h,t)}}}t.type in B&&B[t.type](t,r)}}function J(e){var t=e&4095,n=P[t];return n&&n.template}function K(e){var t=e&4095,n=e>>12,r=P[t];return r&&r.instances[n]}function Q(e){var t=K(e);return t&&t.context}function G(e){var t=K(e);return t&&t.tmpl}function Y(e){var t=K(e);return t&&t.debug&&t.debug()}n.require("./8.js"),n.require("./2.js"),n.require("./6.js"),n.require("./9.js");var a=this.path,f=r.document,l=n.dom.event,c=n.array.from,h=n.string.camelize,p=n.l10n.token,d=n.template.htmlfgen.getFunctions,v=n.template.TemplateSwitchConfig,m=n.template.TemplateSwitcher,g=n.template.Template,y=n.template.TYPE_ELEMENT,b=n.template.TYPE_ATTRIBUTE,w=n.template.TYPE_TEXT,E=n.template.TYPE_COMMENT,S=n.template.TOKEN_TYPE,x=n.template.TOKEN_BINDINGS,T=n.template.TOKEN_REFS,N=n.template.ATTR_NAME,C=n.template.ATTR_VALUE,k=n.template.ATTR_NAME_BY_TYPE,L=n.template.ELEMENT_NAME,A=n.template.TEXT_VALUE,O=n.template.COMMENT_VALUE,M=/^event-(.+)+/,_="basisTemplateId_"+n.genUID(),D={},P={},H={svg:"http://www.w3.org/2000/svg"},B={},j={},F="onmouseenter"in f.documentElement,I=!f.addEventListener&&"__basisTemplate"+parseInt(1e9*Math.random());I&&(r[I]=function(e,t){l.fireEvent(f,e),t.returnValue=!0;var n=D[e];n&&n(new l.Event(t))});var q=function(){var e=f.createElement("div");return e.appendChild(f.createTextNode("a")),e.appendChild(f.createTextNode("a")),e.cloneNode(true).childNodes.length==1}(),R=function(){var e=f.createElement("div");return e.setAttribute("class","a"),!e.className}(),U=function(){var e=f.createElement("div");return e.setAttribute("style","position:absolute"),e.style.position!="absolute"}(),z=!!function(){try{return f.documentElement.style.color="x"}catch(e){}}();typeof Node!="undefined"&&!Node.prototype.contains&&(Node.prototype.contains=function(e){return!!(this.compareDocumentPosition(e)&16)});var W={},$=function(e,t){function n(e,t){r(t),j[e]=!0,B[t]=function(t){t=new l.Event(t),t.type=e,D[e](t)},B[e]=function(t,n){n=n&&n.parentNode,n&&(t=new l.Event(t),t.type=e,t.sender=n,D[e](t))}}function r(e){if(!D[e]){D[e]=V("event-"+e);if(!I){if(!F&&e=="mouseenter")return n(e,"mouseover");if(!F&&e=="mouseleave")return n(e,"mouseout");for(var t=0,r=l.browserEvents(e),i;i=r[t];t++)l.addGlobalHandler(i,D[e])}}}function i(e,t){r(e),I&&o.setAttribute("on"+e,I+'("'+e+'",event)'),o.setAttribute("event-"+e,t)}function s(e,t){R&&e=="class"&&(e="className");if(U&&e=="style")return o.style.cssText=t;o.setAttribute(e,t)}var o=t||f.createDocumentFragment();for(var u=t?4:0,a;a=e[u];u++)switch(a[S]){case y:var c=a[L],h=c.split(/:/),p=h.length>1?f.createElementNS(H[h[0]],c):f.createElement(c);$(a,p),o.appendChild(p);break;case b:var d=a[N],v=a[C],m=d.replace(/^event-/,"");m!=d?i(m,v):(d!="class"&&d!="style"?!a[x]:v)&&s(d,v||"");break;case 4:case 5:var v=a[C-1];v&&s(k[a[S]],v);break;case 6:i(a[1],a[2]||a[1]);break;case E:o.appendChild(f.createComment(a[O]||(a[T]?"{"+a[T].join("|")+"}":"")));break;case w:q&&u&&e[u-1][S]==w&&o.appendChild(f.createComment("")),o.appendChild(f.createTextNode(a[A]||(a[T]?"{"+a[T].join("|")+"}":"")||(a[x]?"{"+a[x]+"}":"")))}return!t&&e.length==1&&(o=o.firstChild),o},Z=function(){function m(){this.set(this.name,this.value)}function g(e,t,r){var i=t&&t.bindingBridge,s=this.attaches&&this.attaches[e],o=null;if(i||s)if(i){if(!s||t!==s.value){s&&(s.tmpl&&(s.tmpl.element.toString=null,X(s.value).clearInstance(s.tmpl)),s.value.bindingBridge.detach(s.value,m,s));if(t.type=="markup"&&t instanceof n.l10n.Token){var u=X(t),a=this.context,f=this.bindings,l=this.bindingInterface;o=u.createInstance(a,null,function h(){o=c.tmpl=u.createInstance(a,null,h,f,l),o.element.toString=function(){return t.value},m.call(c)},f,l),o.element.toString=function(){return t.value}}this.attaches||(this.attaches=new r);var c=this.attaches[e]={name:e,value:t,tmpl:o,set:this.tmpl.set};i.attach(t,m,c)}else o=t&&t.type=="markup"?s.tmpl:null;if(o)return o.element;t=i.get(t)}else s&&(s.tmpl&&(s.tmpl.element.toString=null,X(s.value).clearInstance(s.tmpl)),s.value.bindingBridge.detach(s.value,m,s),this.attaches[e]=null);return t}function y(e,t){var n=e[0],r=e[1],i=t[n],s=t[r];switch(e.length){case 1:return function(t){this(n,i(t))};case 2:return function(t){this(n,i(t)),this(r,s(t))};default:var o=e.map(function(e){return t[e]});return function(n){for(var r=0;r<e.length;r++)this(e[r],o[r](n))}}}function b(e,t){for(var n in e)e[n]=y(e[n],t);return n?e:null}function w(e){var t={};return function(r,i,s,o){if(!r)return{};var u="bindingId"in r?r.bindingId:null,a=t[u];if(!a){var f=[],l={},c={};for(var h=0,p;p=e[h];h++){var d=r[p],v=d&&d.getter;if(v){l[p]=v,f.push(p);if(d.events){var m=String(d.events).trim().split(/\s+|\s*,\s*/);for(var g=0,w;w=m[g];g++)c[w]?c[w].push(p):c[w]=[p]}}}a={names:f,sync:y(f,l),handler:b(c,l)},u&&(t[u]=a)}i&&s&&a.sync.call(s,i);if(!o)return;return a.handler&&o.attach(i,a.handler,s),a.handler}}var e=/\s+/,t=typeof Node=="function"&&f instanceof Node,i=r.DOMTokenList&&f&&f.documentElement.classList instanceof r.DOMTokenList,s=t?function(e,t,n){var r=n&&n instanceof Node?n:e;return r!==t&&t.parentNode.replaceChild(r,t),r}:function(e,t,n){var r=n&&typeof n=="object"?n:e;if(r!==t)try{t.parentNode.replaceChild(r,t)}catch(i){r=e,t!==r&&t.parentNode.replaceChild(r,t)}return r},o=function(e,t,n){var r=s(e,t,n);return r===e&&typeof n=="string"&&(e.innerHTML=n),r},u=s,a=function(e,t,n){var r=s(e,t,n);return r===e&&(e.nodeValue=n),r},l=i?function(e,t,r,i,s){var o=r?i+r:"";return o!=t&&(t&&e.classList.remove(t),o&&(e.classList.add(o),s&&(e.classList.add(o+"-anim"),n.nextTick(function(){e.classList.remove(o+"-anim")})))),o}:function(t,r,i,s,o){var u=i?s+i:"";if(u!=r){var a=t.className,f=typeof a!="string",l;f&&(a=a.baseVal),l=a.split(e),r&&n.array.remove(l,r),u&&(l.push(u),o&&(n.array.add(l,u+"-anim"),n.nextTick(function(){var r=(f?t.className.baseVal:t.className).split(e);n.array.remove(r,u+"-anim"),f?t.className.baseVal=r.join(" "):t.className=r.join(" ")}))),f?t.className.baseVal=l.join(" "):t.className=l.join(" ")}return u},c=z?function(e,t,n,r){return n!==r&&(e.style[h(t)]=r),r}:function(e,t,n,r){if(n!==r)try{e.style[h(t)]=r}catch(i){}return r},v=function(e,t,n,r){return n!==r&&(r?e.setAttribute(t,r):e.removeAttribute(t)),r},E={bind_textNode:a,bind_node:s,bind_element:o,bind_comment:u,bind_attr:v,bind_attrClass:l,bind_attrStyle:c,resolve:g,l10nToken:p,createBindingFunction:w};return function(e){var t=d(e,!0,this.source.url,e.source_,!q,_),n,r={},i={},s=[],o=0,u=$(e),a=this.templateId;P[a]={template:this,instances:r};if(t.createL10nSync){var f=t.createL10nSync(u,i,v,q);for(var l=0,c;c=t.l10nKeys[l];l++)f(c,p(c).value);if(t.l10nKeys)for(var l=0,c;c=t.l10nKeys[l];l++){var h={path:c,token:p(c),handler:function(e){f(this.path,e);for(var t in r)r[t].tmpl.set(this.path,e)}};h.token.attach(h.handler,h),s.push(h),h=null}}return n=t.createInstance(a,r,u,E,i,q),{createInstance:function(e,t,i,s,u){var a=o++,f=n(a,e,t,i,s,u);return r[a]=f,f.tmpl},destroyInstance:function(e){var t=e.templateId_,n=r[t];if(n){n.handler&&n.bindingInterface.detach(n.context,n.handler,n.tmpl.set);for(var i in n.attaches)g.call(n,i,null);delete r[t]}},keys:t.keys,destroy:function(e){for(var n=0,o;o=s[n];n++)o.token.detach(o.handler,o);for(var l in r){var c=r[l];e&&c.rebuild&&c.rebuild.call(c.context);if(!e||l in r){c.handler&&c.bindingInterface.detach(c.context,c.handler,c.tmpl.set);for(var l in c.attaches)g.call(l,null)}}P[a]&&P[a].instances===r&&delete P[a],t=null,u=null,i=null,s=null,f=null,r=null}}}}(),et=g.subclass({className:a+".Template",__extend__:function(e){return e instanceof et?e:e instanceof v?new tt(e):new et(e)},builder:Z}),tt=m.subclass({className:a+".TemplateSwitcher",templateClass:et});t.exports={marker:_,Template:et,TemplateSwitcher:tt},n.template.extend({buildHtml:$,resolveTemplateById:J,resolveObjectById:Q,resolveTmplById:G})},"8.js":function(e,t,n,r,i,s,o,u){function b(e){return y[e]||[e]}function E(e){return e instanceof w?e.event_:e||r.event}function S(e){return typeof e=="string"?f.getElementById(e):e}function x(e){var t=e.target||e.srcElement||f;return t.nodeType==3?t.parentNode:t}function T(e){e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}function N(e){e.preventDefault?e.preventDefault():e.returnValue=!1}function C(e,t){t=S(t),t?R(t,e,C):(N(e),T(e))}function k(e){return e.keyCode||e.which||0}function L(e){return e.charCode||e.keyCode||0}function A(e,t){return typeof e.which=="number"?e.which==t.VALUE:!!(e.button&t.BIT)}function O(e){return e.changedTouches?e.changedTouches[0].pageX:"pageX"in e?e.pageX:"clientX"in e?e.clientX+(f.compatMode=="CSS1Compat"?f.documentElement.scrollLeft:f.body.scrollLeft):0}function M(e){return e.changedTouches?e.changedTouches[0].pageY:"pageY"in e?e.pageY:"clientY"in e?e.clientY+(f.compatMode=="CSS1Compat"?f.documentElement.scrollTop:f.body.scrollTop):0}function _(e){var t=0;return"wheelDelta"in e?t=e.wheelDelta:e.type=="DOMMouseScroll"&&(t=-e.detail),t&&t/Math.abs(t)}function B(e){var t=c(D[e.type]),n=P[e.type],r=new w(e);if(n){n.handler.call(n.thisObject,r),C(e);return}if(t)for(var i=t.length;i-->0;){var s=t[i];s.handler.call(s.thisObject,r)}}function j(e,t,n){P[e]&&F(e),I(e,t,n),P[e]={handler:t,thisObject:n}}function F(e){var t=P[e];t&&(q(e,t.handler,t.thisObject),delete P[e])}function I(e,t,n){var r=D[e];if(r){for(var i=0,s;s=r[i];i++)if(s.handler===t&&s.thisObject===n)return}else H?R(f,e,l):f.addEventListener(e,B,!0),r=D[e]=[];r.push({handler:t,thisObject:n})}function q(e,t,n){var r=D[e];if(r)for(var i=0,s;s=r[i];i++)if(s.handler===t&&s.thisObject===n){r.splice(i,1),r.length||(delete D[e],H?z(f,e,l):f.removeEventListener(e,B,!0));return}}function R(e,t,n,r){e=S(e);if(!e)throw 32;if(typeof n!="function")throw 33;e[p]||(e[p]={});var i={handler:n,thisObject:r},s=e[p],o=s[t];if(!o)o=s[t]=[i],o.fireEvent=function(e){e=E(e);if(H&&e&&D[t]&&typeof e.returnValue=="undefined"){B(e);if(e.cancelBubble===!0)return;typeof e.returnValue=="undefined"&&(e.returnValue=!0)}for(var n=0,r=new w(e),i;i=o[n++];)i.handler.call(i.thisObject,r)},h?e.addEventListener(t,o.fireEvent,!1):e.attachEvent("on"+t,o.fireEvent);else{for(var u=0,a;a=o[u];u++)if(a.handler===n&&a.thisObject===r)return;o.push(i)}}function U(e,t,n){e=S(e);for(var r in t)R(e,r,t[r],n)}function z(e,t,n,r){e=S(e);var i=e[p];if(i){var s=i[t];if(s)for(var o=0,u;u=s[o];o++)if(u.handler===n&&u.thisObject===r){s.splice(o,1),s.length||W(e,t);return}}}function W(e,t){e=S(e);var n=e[p];if(n)if(typeof t!="string")for(t in n)W(e,t);else{var r=n[t];r&&(e.removeEventListener?e.removeEventListener(t,r.fireEvent,!1):e.detachEvent("on"+t,r.fireEvent),delete n[t])}}function X(e,t,n){e=S(e);var r=e[p];r&&r[t]&&r[t].fireEvent(n)}function V(e,t){R(r,"unload",e,t)}function J(e,t){t||(t="div");var n=t+"-"+e;if($[n])return $[n];var r=!1,i=!1;if(!h){var s="on"+e,o=f.createElement("div"),u=o.appendChild(f.createElement(t));o[s]=function(){i=!0};try{u.fireEvent(s),r=!0}catch(a){}}return $[n]={supported:r,bubble:i}}function K(e){return function(t,n){return e(E(t),n)}}var a=this.path,f=r.document,l=n.fn.$null,c=n.array.from,h=!!f.addEventListener,p="__basisEvents",d={BACKSPACE:8,TAB:9,CTRL_ENTER:10,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,ESCAPE:27,SPACE:32,PAGEUP:33,PAGEDOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,INSERT:45,DELETE:46,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123},v={VALUE:1,BIT:1},m={VALUE:2,BIT:4},g={VALUE:3,BIT:2},y={mousewheel:["mousewheel","DOMMouseScroll"]},w=n.Class(null,{className:a+".Event",KEY:d,init:function(e){e=E(e);for(var t in e)typeof e[t]!="function"&&t in this==0&&(this[t]=e[t]);var r=x(e);n.object.extend(this,{event_:e,sender:r,target:r,key:k(e),charCode:L(e),mouseLeft:A(e,v),mouseMiddle:A(e,m),mouseRight:A(e,g),mouseX:O(e),mouseY:M(e),wheelDelta:_(e)})},stopBubble:function(){T(this.event_)},stopPropagation:function(){T(this.event_)},preventDefault:function(){N(this.event_)},die:function(){this.stopBubble(),this.preventDefault()}}),D={},P={},H=!h,$={};t.exports={W3CSUPPORT:h,browserEvents:b,getEventInfo:J,KEY:d,MOUSE_LEFT:v,MOUSE_RIGHT:g,MOUSE_MIDDLE:m,Event:w,sender:K(x),cancelBubble:K(T),cancelDefault:K(N),kill:K(C),key:K(k),charCode:K(L),mouseButton:K(A),mouseX:K(O),mouseY:K(M),wheelDelta:K(_),addGlobalHandler:I,removeGlobalHandler:q,captureEvent:j,releaseEvent:F,addHandler:R,addHandlers:U,removeHandler:z,clearHandlers:W,fireEvent:X,onUnload:V,wrap:E}},"9.js":function(e,t,n,r,i,s,o,u){function C(e,t){return new Function(e,t)}n.require("./6.js");var a=n.template.TYPE_ELEMENT,f=n.template.TYPE_ATTRIBUTE,l=n.template.TYPE_TEXT,c=n.template.TYPE_COMMENT,h=n.template.TOKEN_TYPE,p=n.template.TOKEN_BINDINGS,d=n.template.TOKEN_REFS,v=n.template.ATTR_NAME,m=n.template.ATTR_NAME_BY_TYPE,g=n.template.ELEMENT_NAME,y=n.template.ELEMENT_ATTRS,b=n.template.ELEMENT_CHILDS,w=n.template.TEXT_VALUE,E=n.template.COMMENT_VALUE,S={},x=1,T=function(){function u(e,t){for(var r=0,i;i=e[r];r++)i.indexOf(":")==-1&&n.push(i+":"+t)}function f(n){var r=t.length,i=e[r]||"r"+r;return t.push(i+"="+n),i}function b(e){r.push(e)}function w(e,n,r,E){var S,x,T,N,C;for(var k=0,L=0,A=0,O;O=e[k];k++,L++,N=!1){k?e[k+1]?(O[h]==e[k-1][h]&&O[h]==l&&A++,S=n+".childNodes["+(r?L:L+(A?" + "+A+" * TEXT_BUG":""))+"]"):S=n+".lastChild":S=n+".firstChild";if(x=O[d])N=!0,S=f(S),u(x,S);O[p]&&(O[p]&&typeof O[p]=="number"&&(O[p]=O[d][O[p]-1]),N||(N=!0,S=f(S)),b([O[h],S,O[p]]));if(O[h]==a){T=-1,n==s&&i.push(S+"."+E),N||(S=f(S),T=t.length);var M=[],_=[];for(var D=y,P;P=O[D];D++)P[h]==a||P[h]==l||P[h]==c?_.push(P):M.push(P);for(var D=0,H;H=M[D];D++){if(H[h]==6)continue;var B=m[H[h]]||H[v];if(x=H[d])N=!0,u(x,f(S+'.getAttributeNode("'+B+'")'));if(C=H[p]){N=!0;switch(B){case"class":for(var j=0,F;F=C[j];j++)b([2,S,F[1],B,F[0]].concat(F.slice(2)));break;case"style":for(var j=0,I;I=C[j];j++){o++;for(var q=0,R;R=I[0][q];q++)b([2,S,R,B,I[0],I[1],I[2],I[3],o])}break;default:o++;for(var j=0,R;R=C[0][j];j++)b([2,S,R,B,C[0],C[1],O[g],o])}}}_.length&&w(_,S,r),!N&&T==t.length&&t.pop()}}}var e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),t,n,r,i,s,o;return function(e,u,a,f){return t=[],n=[],r=[],i=[],s=u||"_",o=0,w(e,s,a,f),{path:t,ref:n,binding:r,markedElementList:i}}}(),N=function(){function s(t,n,r){var i=[],s=t[5],o=t[4],u,a;for(var f=0;f<s.length;f++)if(typeof s[f]=="string")i.push('"'+s[f].replace(/"/g,'\\"')+'"');else{u=o[s[f]],a=u.indexOf(":");if(a==-1)i.push(n=="l10n"?'"{'+u+'}"':n=="bool"?"(__"+u+'||"")':"__"+u);else{var l=null,c=u.substr(a+1).replace(e,function(e,t){return l=t,""});l?i.push(r[u.substr(a+1)]):i.push('__l10n["'+c+'"]')}}return i.length==1&&i.push('""'),i.join("+")}var e=/\.\{([a-zA-Z_][a-zA-Z0-9_\-]*)\}/,t={disabled:"*",checked:["input"],indeterminate:["input"],value:["input","textarea","select"],minlength:["input"],maxlength:["input"],readonly:["input"],selected:["option"],multiple:["select"]},r={disabled:!0,checked:!0,selected:!0,readonly:!0,multiple:!0,indeterminate:!0},i={1:"bind_element",3:"bind_textNode",8:"bind_comment"};return function(o){function u(e){N[e]=!0,h.push(p+"="+e+"("+n.array(arguments,1)+");")}var c={},h,p,d=[],m=[],g,y,b=[],w={},E=1,S,x,T={},N={resolve:!0};for(var C=0,k;k=o[C];C++){var L=k[0],A=k[1],O=k[2];if(["get","set","templateId_"].indexOf(O)!=-1)continue;var M=O.split(":"),_=M[0]=="anim";_&&(O=M[1]),h=c[O],p="_"+C,g="__"+O;if(M[0]=="l10n"&&M[1]){var D=M[1],P=null,H=D.replace(e,function(e,t){return P=t,""});if(P){D in w==0&&(g="$l10n_"+E++,w[D]=g,b.push('set("'+g+'",'+g+")"),d.push(g+'=tools.l10nToken("'+H+'").computeToken()'),h=c[P],h||(h=c[P]=[],d.push("__"+P)),h.push(g+".set(__"+P+");")),O=w[D],p="_"+C,g="__"+O,h=c[O],h||(h=c[O]=[],d.push(g)),L==l?(d.push(p+"="+A),u(i[L],A,p,"value")):(B='"'+k[v]+'"',d.push(p),u("bind_attr",A,B,p,s(k,!1,w)));continue}y||(y={}),c[H]||(c[H]=[],y[H]=[]),h=c[H],h.l10n=!0;if(L==l){y[H].push(A+".nodeValue=value;"),h.push(A+'.nodeValue=__l10n["'+H+'"]'+(P?"[__"+P+"]":"")+";");continue}y[H].push("bind_attr("+[A,'"'+k[v]+'"',"NaN",s(k,"l10n",w)]+");")}h||(h=c[O]=[],d.push(g));if(L!=f)if(!h.nodeBind)d.push(p+"="+A),u(i[L],A,p,"value"),h.nodeBind=p;else switch(L){case a:u(i[L],A,A,"value!==null?String(value):null");break;case l:h.push(A+".nodeValue=value;")}else{var B=k[v];switch(B){case"class":var j="",F="value",I=k[4],q=k.length;if(q>=6)if(q==6||typeof k[6]=="string")q==6?(F='value?"'+O+'":""',k[5]&&(j=I+O)):(I="",F='value?"'+k[6]+'":""',k[5]&&(j=k[6]));else{if(!k[6].length)continue;q==7?(F=k[6].map(function(e){return'value=="'+e+'"'}).join("||")+'?value:""',k[5]&&(j=I+k[6][k[5]-1])):(I="",F=k[6].map(function(e,t){return'value=="'+e+'"?"'+this[t]+'"'},k[7]).join(":")+':""',k[5]&&(j=k[7][k[5]-1]))}else F='typeof value=="string"||typeof value=="number"?value:(value?"'+O+'":"")';d.push(p+'="'+j+'"'),u("bind_attrClass",A,p,F,'"'+I+'"',_);break;case"style":var R=s(k,!1,w);x=k[8],T[x]||(T[x]=p,d.push(p+"="+(k[7]=="hide"?'""':'"none"'))),k[7]&&(R=R.replace(/\+""$/,"")+(k[7]=="hide"?'?"none":""':'?"":"none"')),p=T[x],u("bind_attrStyle",A,'"'+k[6]+'"',p,R);break;default:S=t[B],x=k[7],T[x]||(d.push(p+"="+s(k,"l10n",w)),T[x]=p),p=T[x],u("bind_attr",A,'"'+B+'"',p,S&&r[B]?s(k,"bool",w)+'?"'+B+'":""':s(k,!1,w)),S&&(S=="*"||S.indexOf(k[6].toLowerCase())!=-1)&&h.push("if("+A+"."+B+"!="+p+")"+A+"."+B+"="+(r[B]?"!!"+p:p)+";")}}}m.push(';function set(bindName,value){if(typeof bindName!="string")');for(var O in c)c[O].nodeBind&&m.push("if(bindName==="+c[O].nodeBind+")"+'bindName="'+O+'";'+"else ");m.push("return;"),m.push("value=resolve.call(instance,bindName,value,Attaches);switch(bindName){");for(var O in c)m.push('case"'+O+'":'+(c[O].l10n?c[O].join(""):"if(__"+O+"!==value)"+"{"+"__"+O+"=value;"+c[O].join("")+"}")+"break;");m.push("}}");var U=[];for(var z in N)U.push(z+"=tools."+z);return{keys:n.object.keys(c).filter(function(e){return e.indexOf("@")==-1}),tools:U,vars:d,set:m.join(""),l10n:y,l10nCompute:b}}}(),k=function(e,t,r,i,s,o){var u=S[r&&n.path.relative(r)];if(u)return u;var a=T(e,"_",s,o),f=N(a.binding),l=a.markedElementList.join("="),c,h,p={keys:f.keys,l10nKeys:n.object.keys(f.l10n)};e.length==1&&(a.path[0]="a=_");if(f.l10n){var d=[];for(var v in f.l10n)d.push('case"'+v+'":'+'if(value==null)value="{'+v+'}";'+"__l10n[token]=value;"+f.l10n[v].join("")+"break;");p.createL10nSync=C(["_","__l10n","bind_attr","TEXT_BUG"],"var "+a.path+";"+"return function(token, value){"+"switch(token){"+d.join("")+"}"+"}")}return p.createInstance=C(["tid","map","proto","tools","__l10n","TEXT_BUG"],"var getBindings=tools.createBindingFunction(["+f.keys.map(function(e){return'"'+e+'"'})+"]),"+(f.tools.length?f.tools+",":"")+"Attaches=function(){};"+"Attaches.prototype={"+f.keys.map(function(e){return e+":null"})+"};"+"return function createInstance_(id,obj,onAction,onRebuild,bindings,bindingInterface){"+"var _=proto.cloneNode(true),"+a.path.concat(f.vars)+","+"instance={"+"context:obj,"+"action:onAction,"+"rebuild:onRebuild,"+"handler:null,"+"bindings:bindings,"+"bindingInterface:bindingInterface,"+"attaches:null,"+"tmpl:{"+[a.ref,"templateId_:id","set:set"]+"}"+"}"+(l?";if(obj||onAction)"+l+"=(id<<12)|tid":"")+f.set+";if(bindings)instance.handler=getBindings(bindings,obj,set,bindingInterface)"+";"+f.l10nCompute+";return instance"+"}"),p};t.exports={getFunctions:k}},"a.js":function(e,t,n,r,i,s,o,u){function T(e){return typeof e=="string"?f.getElementById(e):e}function N(e){if(S||this.ignoreTarget(e.sender,e))return;var t=b(e.sender);if(e.mouseX<t.left||e.mouseX>t.right||e.mouseY<t.top||e.mouseY>t.bottom)return;S=this,x={initX:e.mouseX,initY:e.mouseY,deltaX:0,minDeltaX:-Infinity,maxDeltaX:Infinity,deltaY:0,minDeltaY:-Infinity,maxDeltaY:Infinity},h("mousemove",C),h("mouseup",k),h("mousedown",k),w&&h("selectstart",c.kill),e.preventDefault(),this.prepareDrag(x,e)}function C(e){var t=e.mouseX-x.initX,r=e.mouseY-x.initY;if(!E){if(!S.startRule(t,r))return;E=!0,S.emit_start(x,e)}S.axisX&&(x.deltaX=S.axisXproxy(n.number.fit(t,x.minDeltaX,x.maxDeltaX))),S.axisY&&(x.deltaY=S.axisYproxy(n.number.fit(r,x.minDeltaY,x.maxDeltaY))),S.emit_drag(x,e)}function k(e){p("mousemove",C),p("mouseup",k),p("mousedown",k),w&&p("selectstart",c.kill);var t=S,n=x;S=null,x=null,E&&(E=!1,t.emit_over(n,e)),e.die()}n.require("./3.js"),n.require("./8.js"),n.require("./b.js"),n.require("./c.js");var a=this.path,f=r.document,l=n.cleaner,c=n.dom.event,h=c.addGlobalHandler,p=c.removeGlobalHandler,d=n.event.Emitter,v=n.event.create,m=n.dom.computedStyle.get,g=n.layout.getOffsetParent,y=n.layout.getBoundingRect,b=n.layout.getViewportRect,w=c.getEventInfo("selectstart").supported,E,S,x,L=d.subclass({className:a+".DragDropElement",element:null,trigger:null,baseElement:null,axisX:!0,axisY:!0,axisXproxy:n.fn.$self,axisYproxy:n.fn.$self,prepareDrag:n.fn.$undef,startRule:n.fn.$true,ignoreTarget:function(e,t){return/^(INPUT|TEXTAREA|SELECT|BUTTON)$/.test(e.tagName)},emit_start:v("start"),emit_drag:v("drag"),emit_over:v("over"),init:function(){d.prototype.init.call(this);var e=this.element,t=this.trigger;this.element=null,this.trigger=null,this.setElement(e,t),this.setBase(this.baseElement),l.add(this)},setElement:function(e,t){this.element=T(e),t=T(t)||this.element,this.trigger!==t&&(this.trigger&&c.removeHandler(this.trigger,"mousedown",N,this),this.trigger=t,this.trigger&&c.addHandler(this.trigger,"mousedown",N,this))},setBase:function(e){this.baseElement=T(e)},getBase:function(){return this.baseElement||(f.compatMode=="CSS1Compat"?f.documentElement:f.body)},isDragging:function(){return S===this},start:function(e){this.isDragging()||N.call(this,e)},stop:function(){this.isDragging()&&k()},destroy:function(){this.stop(),l.remove(this),d.prototype.destroy.call(this),this.setElement(),this.setBase()}}),A=n.Class(null,{className:a+".DeltaWriter",property:null,invert:!1,format:n.fn.$self,init:function(e){typeof this.property=="function"&&(this.property=this.property(e)),typeof this.invert=="function"&&(this.invert=this.invert(this.property)),this.value=this.read(e)},read:function(){return element[this.property]},write:function(e,t){e[this.property]=t},applyDelta:function(e,t){this.invert&&(t=-t),this.write(e,this.format(this.value+t,t))}}),O=A.subclass({className:a+".StyleDeltaWriter",format:function(e,t){return e+"px"},read:function(e){return parseFloat(m(e,this.property))||0},write:function(e,t){e.style[this.property]=t}}),M=O.subclass({property:function(e){return m(e,"left")=="auto"&&m(e,"right")!="auto"?"right":"left"},invert:function(e){return e=="right"}}),_=O.subclass({property:function(e){return m(e,"top")=="auto"&&m(e,"bottom")!="auto"?"bottom":"top"},invert:function(e){return e=="bottom"}}),D=L.subclass({className:a+".MoveableElement",fixTop:!0,fixRight:!0,fixBottom:!0,fixLeft:!0,axisX:M,axisY:_,emit_start:function(e,t){var n=this.element;if(n){var r=b(this.getBase()),i=y(n);e.element=n,this.axisX&&(e.axisX=new this.axisX(n),this.fixLeft&&(e.minDeltaX=r.left-i.left),this.fixRight&&(e.maxDeltaX=r.right-i.right)),this.axisY&&(e.axisY=new this.axisY(n),this.fixTop&&(e.minDeltaY=r.top-i.top),this.fixBottom&&(e.maxDeltaY=r.bottom-i.bottom))}L.prototype.emit_start.call(this,e,t)},emit_drag:function(e,t){if(!e.element)return;e.axisX&&e.axisX.applyDelta(e.element,e.deltaX),e.axisY&&e.axisY.applyDelta(e.element,e.deltaY),L.prototype.emit_drag.call(this,e,t)}});t.exports={DragDropElement:L,MoveableElement:D,DeltaWriter:A,StyleDeltaWriter:O}},"b.js":function(e,t,n,r,i,s,o,u){var a=r.document,f;if("getComputedStyle"in r){var l={top:!0,bottom:!0,left:!0,right:!0,height:!0,width:!0},c=n.fn.runOnce(function(){var e=a.createElement("div");e.setAttribute("style","position:absolute;top:auto!important"),n.doc.body.add(e),r.getComputedStyle(e).top=="auto"&&(l={}),n.doc.remove(e)});f=function(e,t){var n=r.getComputedStyle(e),i;if(n){t in l&&c();if(l[t]&&n.position!="static"){var s=e.style.display;e.style.display="none",i=n.getPropertyValue(t),e.style.display=s}else i=n.getPropertyValue(t);return i}}}else{var h=/^-?(\d*\.)?\d+([a-z]+|%)?$/i,p=/\dpx$/i,d=function(e,t){if(p.test(t))return parseInt(t,10)+"px";var n=e.style,r=e.runtimeStyle,i=n.left,s=r.left;return r.left=e.currentStyle.left,n.left=t||0,t=n.pixelLeft,n.left=i,r.left=s,t+"px"};f=function(e,t){var r=e.currentStyle;if(r){var i=r[t=="float"?"styleFloat":n.string.camelize(t)],s=(i||"").match(h);return s&&s[2]&&s[2]!="px"&&(i=d(e,i)),i}}}t.exports={get:f}},"c.js":function(e,t,n,r,i,s,o,u){function h(e){var t=e.offsetParent||l;while(t&&t!==l&&c(t,"position")=="static")t=t.offsetParent;return t||l}function p(e){var t=0,n=0;if(e&&e.getBoundingClientRect){var i=e.getBoundingClientRect();n=-i.left,t=-i.top}else if(f.compatMode=="CSS1Compat")t=r.pageYOffset||l.scrollTop,n=r.pageXOffset||l.scrollLeft;else{var s=f.body;e!==s&&(t=s.scrollTop-s.clientTop,n=s.scrollLeft-s.clientLeft)}return{x:n,y:t}}function d(e,t){var n=0,r=0;if(e&&e.getBoundingClientRect){var i=e.getBoundingClientRect(),s=p(t);r=i.top+s.y,n=i.left+s.x}return{top:r,left:n}}function v(e,t){var n=0,r=0,i=0,s=0;if(e&&e.getBoundingClientRect){var o=e.getBoundingClientRect(),u=p(t);n=o.top+u.y,r=o.left+u.x,i=o.right+u.x,s=o.bottom+u.y}return{top:n,left:r,right:i,bottom:s,width:i-r,height:s-n}}function m(e,t){var n=d(e,t),r=n.top+e.clientTop,i=n.left+e.clientLeft,s=e.clientWidth,o=e.clientHeight;return{top:r,left:i,bottom:r+o,right:i+s,width:s,height:o}}n.require("./b.js");var a=this.path,f=r.document,l=f.documentElement,c=n.dom.computedStyle.get;t.exports={getOffsetParent:h,getTopLeftPoint:d,getBoundingRect:v,getViewportRect:m}},"1.js":function(e,t,n,r,i,s,o,u){function b(e,t){e.bindingId=y++;for(var r in t){var i=null,s=t[r];P&&s instanceof P||n.resource.isResource(s)?i={events:"satelliteChanged",getter:function(e,t){var n=typeof t=="function"?t:null,r=function(i){r=!1;if(n){t=n();if(t instanceof P==0)return;n=null}i.setSatellite(e,t)};return function(t){return r&&r(t),n||(t.satellite[e]?t.satellite[e].element:null)}}(r,s)}:s&&(typeof s=="string"?s=w.process(r,s):s.bindingBridge&&(s=n.fn.$const(s)),typeof s!="object"?i={getter:typeof s=="function"?s:n.getter(s)}:Array.isArray(s)?i={events:s[0],getter:n.getter(s[1])}:i={events:s.events,getter:n.getter(s.getter)}),e[r]=i}}function k(){return C.pop()||f.createDocumentFragment()}function L(e){var t=e.nodes;if(t)for(var n=t.length-1,r;r=t[n];n--)r.parentNode.insertBefore(r,r.nextSibling)}n.require("./2.js"),n.require("./4.js"),n.require("./5.js"),n.require("./6.js"),n.require("./7.js");var a=this.path,f=r.document,l=n.Class,c=n.event.create,h=n.template.html.Template,p=n.template.html.marker,d=n.template.TemplateSwitcher,v=n.dom.wrapper.Node,m=n.dom.wrapper.PartitionNode,g=n.dom.wrapper.GroupingNode,y=1,w=function(){var e={},t=/^([a-z_][a-z0-9_]*):(.*)/i;return{add:function(t,n){e[t]||(e[t]=n)},process:function(n,r){var i,s=r.match(t);return s&&(i=e[s[1]],r=s[2]||n),i?i(r):r}}}();w.add("data",function(e){return{events:"update",getter:"data."+e}}),w.add("satellite",function(e){return{events:"satelliteChanged",getter:function(t){return t.satellite[e]?t.satellite[e].element:null}}});var E=l.customExtendProperty({state:{events:"stateChanged",getter:function(e){return String(e.state)}},childNodesState:{events:"childNodesStateChanged",getter:function(e){return String(e.childNodesState)}},childCount:{events:"childNodesModified",getter:function(e){return e.childNodes?e.childNodes.length:0}},hasChildren:{events:"childNodesModified",getter:function(e){return!!e.firstChild}},empty:{events:"childNodesModified",getter:function(e){return!e.firstChild}}},b),S={attach:function(e,t,n){e.addHandler(t,n)},detach:function(e,t,n){e.removeHandler(t,n)}},x=l.extensibleProperty({select:function(e){if(this.isDisabled())return;this.contextSelection&&this.contextSelection.multiple?this.select(e.ctrlKey||e.metaKey):this.select()}}),T={"*":function(e){var t=this.templateSwitcher_;t&&t.ruleEvents&&t.ruleEvents[e.type]&&this.setTemplate(t.resolve(this))}},N=new h("<div/>"),C=[],A,O=function(e){return{template:N,emit_templateChanged:c("templateChanged"),templateSwitcher_:null,binding:E,action:x,tmpl:null,element:null,childNodesElement:null,init:function(){this.element=this.childNodesElement=k(),e.init.call(this)},postInit:function(){e.postInit.call(this);var t=this.template;if(t){var n=this.element;this.template=null,this.setTemplate(t),C.push(n),this.container&&(this.container.appendChild(this.element),this.container=null)}},templateSync:function(){var e=this.element,t=this.tmpl,n=this.template.createInstance(this,this.templateAction,this.templateSync,this.binding,S),r;n.childNodesHere&&(n.childNodesElement=n.childNodesHere.parentNode,n.childNodesElement.insertPoint=n.childNodesHere),this.tmpl=n,this.element=n.element,this.childNodesElement=n.childNodesElement||n.element,r=this.childNodesElement.nodeType!=1,r&&(this.childNodesElement=f.createDocumentFragment());if(this.grouping){this.grouping.syncDomRefs();var i=this;while(i.grouping)i=i.grouping;var s=i;for(var o=s.lastChild;o;o=o.previousSibling)o instanceof _?s.insertBefore(o,o.nextSibling):L(o);L(s.nullGroup)}else for(var u=this.lastChild;u;u=u.previousSibling)this.insertBefore(u,u.nextSibling);this instanceof _&&L(this);if(e&&e!==this.element&&e.nodeType!=11){var a=e&&e.parentNode;a&&(this.owner&&this.owner.tmpl&&this.owner.tmpl.set(e,this.element),this.element.parentNode!==a&&a.replaceChild(this.element,e))}t&&this.emit_templateChanged()},setTemplate:function(e){var t=this.templateSwitcher_,n;e instanceof d&&(n=e,e=n.resolve(this)),e instanceof h==0&&(e=null);if(!e)return;n&&(this.templateSwitcher_=n,t||this.addHandler(T,this)),t&&t.resolve(this)!==e&&(this.templateSwitcher_=null,this.removeHandler(T,this));var r=this.tmpl,i=this.template;i!==e&&(this.template=e,this.templateSync(),i&&i.clearInstance(r))},updateBind:function(e){var t=this.binding[e],n=t&&t.getter;n&&this.tmpl&&this.tmpl.set(e,n(this))},templateAction:function(e,t){var n=this.action[e];n&&n.call(this,t)},focus:function(e){var t=this.tmpl?this.tmpl.focus||this.element:null;t&&(A&&(A=n.clearImmediate(A)),A=n.setImmediate(function(){try{t.focus(),e&&t.select()}catch(n){}}))},blur:function(){var e=this.tmpl?this.tmpl.focus||this.element:null;if(e)try{e.blur()}catch(t){}},destroy:function(){var t=this.template,n=this.element;this.templateSwitcher_&&(this.templateSwitcher_=null,this.removeHandler(T,this)),t.clearInstance(this.tmpl),e.destroy.call(this),this.tmpl=null,this.element=null,this.childNodesElement=null;var r=n&&n.parentNode;r&&r.nodeType==1&&r.removeChild(n)}}},M=function(e){return{insertBefore:function(t,n){t=e.insertBefore.call(this,t,n);var r=t.groupNode||this,i=r.childNodesElement||this.childNodesElement,s=t.nextSibling,o=s&&s.element.parentNode==i?s.element:null,u=t.element,a=o||i.insertPoint||null;return(u.parentNode!==i||u.nextSibling!==a)&&i.insertBefore(u,a),t},removeChild:function(t){e.removeChild.call(this,t);var n=t.element,r=n.parentNode;return r&&r.removeChild(n),t},clear:function(t){if(t){var n=this.firstChild;while(n){var r=n.element,i=r.parentNode;i&&i.removeChild(r),n=n.nextSibling}}e.clear.call(this,t)},setChildNodes:function(t,n){var r=f.createDocumentFragment(),i=this.grouping||this,s=i.childNodesElement;i.childNodesElement=r,e.setChildNodes.call(this,t,n),s.insertBefore(r,s.insertPoint||null),i.childNodesElement=s}}},_=l(m,O,{className:a+".PartitionNode",binding:{title:"data:"}}),D=l(g,M,{className:a+".GroupingNode",childClass:_,groupingClass:l.SELF,element:null,childNodesElement:null,emit_ownerChanged:function(e){this.syncDomRefs(),g.prototype.emit_ownerChanged.call(this,e)},init:function(){this.element=this.childNodesElement=f.createDocumentFragment(),g.prototype.init.call(this)},syncDomRefs:function(){var e=this,t=this.owner,n=null;t&&(n=t.tmpl&&t.tmpl.groupsElement||t.childNodesElement);do e.element=e.childNodesElement=n;while(e=e.grouping)},destroy:function(){g.prototype.destroy.call(this),this.element=null,this.childNodesElement=null}}),P=l(v,O,M,{className:a+".Node",binding:{selected:{events:"select unselect",getter:function(e){return e.selected}},unselected:{events:"select unselect",getter:function(e){return!e.selected}},disabled:{events:"disable enable",getter:function(e){return e.isDisabled()}},enabled:{events:"disable enable",getter:function(e){return!e.isDisabled()}}},childClass:l.SELF,childFactory:function(e){return new this.childClass(e)},groupingClass:D}),H=P.subclass({className:a+".ShadowNodeList",emit_ownerChanged:function(e){P.prototype.emit_ownerChanged.call(this,e),this.setDataSource(this.owner&&this.owner.getChildNodesDataset())},getChildNodesElement:function(e){return e.childNodesElement},listen:{owner:{templateChanged:function(){this.childNodes.forEach(function(e){this.appendChild(e.element)},this.getChildNodesElement(this.owner)||this.owner.element)}}},childClass:{className:a+".ShadowNode",getElement:function(e){return e.element},templateSync:function(){P.prototype.templateSync.call(this);var e=this.getElement(this.delegate);e&&(e[p]=this.delegate.element[p],this.element=e)},listen:{delegate:{templateChanged:function(){var e=this.element,t=e.parentNode,n=this.getElement(this.delegate);n&&(n[p]=this.delegate.element[p]),this.element=n||this.tmpl.element,t&&t.replaceChild(this.element,e)}}}}});t.exports={BINDING_PRESET:w,Node:P,PartitionNode:_,GroupingNode:D,ShadowNodeList:H,ShadowNode:H.prototype.childClass}},"e.js":function(e,t,n,r,i,s,o,u){n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.getter,l=n.cleaner,c=n.event.Emitter,h=n.data.AbstractData,p=n.data.Value,d=n.data.STATE,v=p.subclass({className:a+".Property",extendConstructor_:!1,init:function(e,t,n){this.value=e,this.handler=t,this.proxy=n,p.prototype.init.call(this)}}),m=d.priority,g={stateChanged:function(){this.fire(!1,!0)},update:function(){this.fire(!0)},change:function(){this.fire(!0)},destroy:function(e){this.remove(e)}},y=p.subclass({className:a+".ObjectSet",objects:null,value:0,valueChanged_:!1,calculateValue:function(){return this.value+1},calculateOnInit:!1,statePriority:m,stateChanged_:!0,timer_:!1,init:function(){p.prototype.init.call(this);var e=this.objects;this.objects=[],e&&Array.isArray(e)&&(this.lock(),this.add.apply(this,e),this.unlock()),this.valueChanged_=this.stateChanged_=!!this.calculateOnInit,this.update()},add:function(){for(var e=0,t=arguments.length;e<t;e++){var r=arguments[e];if(!(r instanceof h))throw 34;n.array.add(this.objects,r)&&r.addHandler(g,this)}this.fire(!0,!0)},remove:function(e){n.array.remove(this.objects,e)&&e.removeHandler(g,this),this.fire(!0,!0)},clear:function(){for(var e=0,t;t=this.objects[e];e++)t.removeHandler(g,this);this.objects.length=0,this.fire(!0,!0)},fire:function(e,t){this.locked||(this.valueChanged_=this.valueChanged_||!!e,this.stateChanged_=this.stateChanged_||!!t,!this.timer_&&(this.valueChanged_||this.stateChanged_)&&(this.timer_=n.setImmediate(this.update.bind(this))))},lock:function(){this.locked=!0},unlock:function(){this.locked=!1},update:function(){var e=this.valueChanged_,t=this.stateChanged_;this.valueChanged_=!1,this.stateChanged_=!1,this.timer_=n.clearImmediate(this.timer_);if(!l.globalDestroy){e&&this.set(this.calculateValue());if(t){var r=this.objects.length;if(!r)this.setState(d.UNDEFINED);else{var i=-2,s;for(var o=0;o<r;o++){var u=this.objects[o],a=this.statePriority.indexOf(String(u.state));a>i&&(s=u,i=a)}s&&this.setState(s.state,s.state.data)}}}},destroy:function(){this.lock(),this.clear(),this.timer_&&n.clearImmediate(this.timer_),p.prototype.destroy.call(this)}}),b=v.subclass({className:a+".Expression",init:function(e,t){p.prototype.init.call(this);var e=n.array(arguments),t=e.pop();typeof t!="function"&&(t=n.fn.$undef),e.length==1&&e[0].link(this,function(e){this.set(t.call(this,e))});if(e.length>1){var r=new y({objects:e,calculateOnInit:!0,calculateValue:function(){return t.apply(this,e.map(function(e){return e.value}))}});r.link(this,this.set),this.addHandler({destroy:function(){l.globalDestroy||r.destroy()}})}}});t.exports={Property:v,ObjectSet:y,Expression:b}},"f.js":function(e,t,n,r,i,s,o,u){function m(e,t){if(!e.length)return 0;var n,r,i=0,s=e.length-1;do{n=i+s>>1,r=e[n]||0;if(t<r)s=n-1;else{if(!(t>r))return t==r?n:0;i=n+1}}while(i<=s);return n+(r<t)}function k(){}function L(e,t,r){if(!f.isClass(e)||!e.isSubclassOf(g))throw 35;t=n.getter(t),r=r||"update";if(typeof r!="string")throw 36;r=r.trim().split(" ").sort();var i=[e.basisClassId_,t[n.getter.ID],r].join("_"),s=N[i];if(s)return s.owner;var o={};for(var u=0;u<r.length;u++)o[r[u]]=!0;return s=new k,N[i]={owner:s,indexClass:e.subclass({indexId:i,updateEvents:o,valueGetter:t})},s.indexId=i,s}function B(e,t,n){var r=e.indexCache_,i;e.lock();if(t)for(var s=0,o;o=t[s++];){var u=e.normalize(e.valueGetter(o));r[o.basisObjectId]=u,e.add_(u)}if(n)for(var s=0,o;o=n[s++];)i=o.basisObjectId,e.remove_(r[i]),delete r[i];e.unlock()}function q(e,t){if(t instanceof k==0)throw 37;var n=e.basisObjectId,r=I[n];r||(r=I[n]={},e.addHandler(F),F.itemsChanged.call(e,e,{inserted:e.getItems()}));var i=t.indexId,s=r[i];if(!s){t=N[i];if(!t)throw 38;s=new t.indexClass,s.addHandler(C,e),r[i]=s,B(s,e.getItems())}return s}function R(e,t){var n=I[e.basisObjectId];if(n&&n[t.indexId]){delete n[t.indexId],t.removeHandler(C,e);for(var r in n)return;e.removeHandler(F),F.itemsChanged.call(e,e,{deleted:e.getItems()}),delete I[e.basisObjectId]}}function W(){return"calc-index-preset-"+n.number.lead(z++,8)}function X(e,t){var r="min_"+W(),i="max_"+W(),s={};s[r]=D(e,t),s[i]=P(e,t),t=n.getter(t||e);var o=function(e,n,s){return(t(s)-n[r])/(n[i]-n[r])};return o.preset=new U({indexes:s,calc:o})}function V(e,t){var r="max_"+W(),i={};i[r]=P(e,t),t=n.getter(t||e);var s=function(e,n,i){return t(i)/n[r]};return s.preset=new U({indexes:i,calc:s})}function $(e,t){var r="sum_"+W(),i={};i[r]=M(t,e),e=n.getter(e||t);var s=function(t,n,i){return e(i)/n[r]};return s.preset=new U({indexes:i,calc:s})}n.require("./4.js"),n.require("./d.js"),n.require("./e.js");var a=this.path,f=n.Class,l=n.data.Object,c=n.data.KeyObjectMap,h=n.data.ReadOnlyDataset,p=n.data.DatasetWrapper,d=n.data.Value,v=n.data.dataset.MapFilter,g=f(d,{className:a+".Index",autoDestroy:!0,indexCache_:null,valueGetter:n.fn.$null,updateEvents:{},value:0,setNullOnEmitterDestroy:!1,init:function(){this.indexCache_={},d.prototype.init.call(this)},add_:function(e){},remove_:function(e){},update_:function(e,t){},normalize:function(e){return Number(e)||0},destroy:function(){d.prototype.destroy.call(this),this.indexCache_=null}}),y=f(g,{className:a+".Sum",add_:function(e){this.value+=e},remove_:function(e){this.value-=e},update_:function(e,t){this.set(this.value-t+e)}}),b=f(g,{className:a+".Count",valueGetter:n.fn.$true,add_:function(e){this.value+=e},remove_:function(e){this.value-=e},normalize:function(e){return!!e},update_:function(e,t){this.set(this.value-!!t+!!e)}}),w=f(g,{className:a+".Avg",sum_:0,count_:0,add_:function(e){this.sum_+=e,this.count_+=1,this.value=this.sum_/this.count_},remove_:function(e){this.sum_-=e,this.count_-=1,this.value=this.count_?this.sum_/this.count_:0},update_:function(e,t){this.sum_+=e-t,this.set(this.sum_/this.count_)}}),E=f(g,{className:a+".VectorIndex",vectorGetter:n.fn.$null,vector_:null,value:undefined,init:function(){this.vector_=[],g.prototype.init.call(this)},add_:function(e){e!==null&&(this.vector_.splice(m(this.vector_,e),0,e),this.value=this.vectorGetter(this.vector_))},remove_:function(e){e!==null&&(this.vector_.splice(m(this.vector_,e),1),this.value=this.vectorGetter(this.vector_))},update_:function(e,t){t!==null&&this.vector_.splice(m(this.vector_,t),1),e!==null&&this.vector_.splice(m(this.vector_,e),0,e),this.set(this.vectorGetter(this.vector_))},normalize:function(e){return typeof e=="string"||typeof e=="number"?e:null},destroy:function(){g.prototype.destroy.call(this),this.vector_=null}}),S=f(E,{className:a+".Min",vectorGetter:function(e){return e[0]}}),x=f(E,{className:a+".Max",vectorGetter:function(e){return e[e.length-1]}}),T=f(g,{className:a+".Distinct",map_:null,init:function(){this.map_={},g.prototype.init.call(this)},add_:function(e){this.map_.hasOwnProperty(e)||(this.map_[e]=0),++this.map_[e]==1&&(this.value+=1)},remove_:function(e){--this.map_[e]==0&&(this.value-=1)},update_:function(e,t){var n=0;this.map_.hasOwnProperty(e)||(this.map_[e]=0),++this.map_[e]==1&&(n+=1),--this.map_[t]==0&&(n-=1),n&&this.set(this.value+n)},normalize:String,destroy:function(){g.prototype.destroy.call(this),this.map_=null}}),N={},C={destroy:function(e){R(this,e)}},A=function(e,t){return function(n,r){var i;if(n instanceof h||n instanceof p)i=n,n=r,r=arguments[2];r||(r=n,n="");var s=L(e,r||t,n);return i?q(i,s):s}},O=A(b,n.fn.$true),M=A(y),_=A(w),D=A(S),P=A(x),H=A(T),j={"*":function(e){var t,n,r,i=e.type,s=e.sender,o=s.basisObjectId,u=I[this.basisObjectId];for(var a in u)r=u[a],r.updateEvents[i]&&(t=r.indexCache_[o],n=r.normalize(r.valueGetter(s)),n!==t&&(r.update_(n,t),r.indexCache_[o]=n))}},F={itemsChanged:function(e,t){var n;if(n=t.inserted)for(var r=n.length;r-->0;)n[r].addHandler(j,this);if(n=t.deleted)for(var r=n.length;r-->0;)n[r].removeHandler(j,this);var i=I[this.basisObjectId];for(var s in i)B(i[s],t.inserted,t.deleted)},destroy:function(){var e=I[this.basisObjectId];for(var t in e)R(this,e[t])}},I={},U=f(null,{className:a+".CalcIndexPreset",extendConstructor_:!0,indexes:{},calc:n.fn.$null}),z=1,J=f(v,{className:a+".IndexMap",calcs:null,indexes:null,indexes_:null,indexesBind_:null,timer_:undefined,indexUpdated:null,indexValues:null,memberSourceMap:null,keyMap:null,map:function(e){return this.keyMap.get(e,!0)},addMemberRef:function(e,t){this.memberSourceMap[e.basisObjectId]=t.basisObjectId,this.listen.member&&e.addHandler(this.listen.member,this),this.sourceMap_[t.basisObjectId].updated=!0,e.subscriberCount>0&&this.calcMember(e)},removeMemberRef:function(e,t){delete this.memberSourceMap[e.basisObjectId],this.listen.member&&e.removeHandler(this.listen.member,this)},emit_sourceChanged:function(e){v.prototype.emit_sourceChanged.call(this,e);for(var t in this.indexes_){var n=this.indexes_[t];e&&(this.removeIndex(t),R(e,this.indexes[t])),this.source&&this.addIndex(t,q(this.source,n))}},listen:{index:{change:function(e){var t=this.indexMap;t.indexValues[this.key]=e.value,t.indexUpdated=!0,t.recalcRequest()}},member:{subscribersChanged:function(e,t){e.subscriberCount>0&&this.calcMember(e)}}},ruleEvents:n.data.dataset.createRuleEvents(function(e,t){v.prototype.ruleEvents.update.call(this,e,t),this.sourceMap_[e.basisObjectId].updated=!0,this.recalcRequest()},"update"),init:function(){this.recalc=this.recalc.bind(this),this.indexUpdated=!1,this.indexesBind_={},this.memberSourceMap={};var e=this.indexes;this.indexes={},this.indexes_={},this.indexValues={};var t=this.calcs;this.calcs={};if(!this.keyMap||this.keyMap instanceof c==0)this.keyMap=new c(n.object.complete({create:function(e,t){return new this.itemClass(t)}},this.keyMap));v.prototype.init.call(this),n.object.iterate(e,this.addIndex,this),n.object.iterate(t,this.addCalc,this)},addIndex:function(e,t){if(!this.indexes[e]){if(t instanceof k){if(!!this.indexes_[e])return;this.indexes_[e]=t,t=this.source?q(this.source,t):null}if(t instanceof g){this.indexValues[e]=t.value,this.indexes[e]=t,this.indexesBind_[e]={key:e,indexMap:this};var n=this.listen.index;n&&(t.addHandler(n,this.indexesBind_[e]),n.change&&n.change.call(this.indexesBind_[e],t,t.value))}}},removeIndex:function(e){if(this.indexes_[e]||this.indexes[e])this.indexes[e]&&this.listen.index&&this.indexes[e].removeHandler(this.listen.index,this.indexesBind_[e]),delete this.indexValues[e],delete this.indexesBind_[e],delete this.indexes[e],delete this.indexes_[e]},addCalc:function(e,t){if(t instanceof U){this.calcs[e]=t.calc;for(var n in t.indexes)this.addIndex(n,t.indexes[n])}else this.calcs[e]=t;this.recalcRequest()},removeCalc:function(e){var t=this.calcs[e];if(t&&t.preset instanceof U){var n=t.preset.indexes;for(var r in n)this.removeIndex(r,n[r])}delete this.calcs[e]},lock:function(){for(var e in this.indexes)this.indexes[e].lock()},unlock:function(){for(var e in this.indexes)this.indexes[e].unlock()},recalcRequest:function(){this.timer_||(this.timer_=n.setImmediate(this.recalc))},recalc:function(){for(var e in this.items_)this.calcMember(this.items_[e]);this.indexUpdated=!1,this.timer_=n.clearImmediate(this.timer_)},calcMember:function(e){var t=this.sourceMap_[this.memberSourceMap[e.basisObjectId]];if(e.subscriberCount&&(t.updated||this.indexUpdated)){t.updated=!1;var n={},r,i,s;for(var o in this.calcs)r=this.calcs[o](t.sourceObject.data,this.indexValues,t.sourceObject),i=e.data[o],e.data[o]!==r&&(typeof r!="number"||typeof i!="number"||!isNaN(r)||!isNaN(i))&&(n[o]=r,s=!0);s&&e.update(n)}},getMember:function(e){return this.keyMap.get(e,!0)},destroy:function(){this.keyMap.destroy(),this.keyMap=null;for(var e in this.indexes)this.removeIndex(e);v.prototype.destroy.call(this),this.timer_=n.clearImmediate(this.timer_),this.calcs=null,this.indexes=null,this.indexes_=null,this.indexValues=null,this.memberSourceMap=null,this.indexesBind_=null}});t.exports={IndexConstructor:k,createIndexConstructor:A,getDatasetIndex:q,removeDatasetIndex:R,Index:g,Count:b,Sum:y,Avg:w,VectorIndex:E,Min:S,Max:x,Distinct:T,count:O,sum:M,avg:_,max:P,min:D,distinct:H,CalcIndexPreset:U,percentOfRange:X,percentOfMax:V,percentOfSum:$,IndexMap:J}},"g.js":function(e,t,n,r,i,s,o,u){function l(e){return new Function("data","return {"+n.object.iterate(e,function(e,t){return e=e.replace(/"/g,'\\"'),t=t.replace(/"/g,'\\"'),'"'+e+'": data["'+t+'"]'})+"}")}n.require("./4.js");var a=this.path,f=n.data.Object,c={update:function(e,t){var n=this.host.fields,r={};if(this.name==n.defaultSource)for(var i in t)i in n.fieldSource==0&&(r[i]=e.data[i]);else for(var i in t){var s=n.fromNames[this.name][i];s&&this.host.fields.fieldSource[s]==this.name&&(r[s]=e.data[i])}for(var i in r)return this.host.update(r)},destroy:function(){this.host.setSource(this.name,null)}},h=function(e){var t={},n={},r={},i={defaultSource:!1,fieldSource:{},toNames:n,fromNames:r,sources:t,__extend__:h};e["*"]&&(i.defaultSource=e["*"]);for(var s in e){var o=e[s].split(":"),u=o.shift(),a=o.length?o.join(":"):s;if(u==i.defaultSource)continue;if(u=="-"&&a!=s)continue;n[u]||(n[u]={},r[u]={}),n[u][s]=a,r[u][a]=s,i.fieldSource[s]=u}for(var u in n)t[u]=l(n[u]);return i.defaultSource&&(t[i.defaultSource]=function(e){var t={};for(var n in e)n in i.fieldSource==0&&(t[n]=e[n]);return t}),i},p=f.subclass({className:a+".Merge",emit_sourceChanged:n.event.create("sourceChanged","name","oldSource"),fields:h({"*":"-"}),sources:null,sourcesContext_:null,delta_:null,init:function(){var e=this.data,t=this.sources;this.data={},this.delegate=null,f.prototype.init.call(this);for(var n in e){var r=this.fields.fieldSource[n]||this.fields.defaultSource;r=="-"&&(this.data[n]=e[n])}this.sources={},this.sourcesContext_={},t&&this.setSources(t)},update:function(e){if(this.delta_){for(var t in e){var n=this.fields.fieldSource[t]||this.fields.defaultSource;if(!n)continue;var r=n!=this.fields.defaultSource?this.fields.toNames[n][t]:t,i=this.sources[n].data[r];i!==this.data[t]&&(t in this.delta_==0?this.delta_[t]=this.data[t]:this.delta_[t]===i&&delete this.delta_[t],this.data[t]=i)}return}var s,o={};this.delta_=o;for(var t in e){var n=this.fields.fieldSource[t]||this.fields.defaultSource;if(!n)continue;if(n=="-"){o[t]=this.data[t],this.data[t]=e[t];continue}if(this.sources[n]){var r=n!=this.fields.defaultSource?this.fields.toNames[n][t]:t;this.sources[n].data[r]!==e[t]?(s||(s={}),n in s==0&&(s[n]={}),s[n][r]=e[t]):this.data[t]!==e[t]&&(o[t]=this.data[t],this.data[t]=e[t])}}if(s)for(var n in s)this.sources[n].update(s[n]);this.delta_=null;for(var t in o)return this.emit_update(o),o;return!1},setDelegate:function(){},setSource:function(e,t){var n=this.sources[e];if(e in this.fields.sources==0)return;if(e=="-")return;t instanceof f==0&&(t=null);if(n!==t){var r=this.listen["source:"+e];n&&(r&&n.removeHandler(r,this),n.removeHandler(c,this.sourcesContext_[e])),this.sources[e]=t,t&&(e in this.sourcesContext_==0&&(this.sourcesContext_[e]={host:this,name:e}),t.addHandler(c,this.sourcesContext_[e]),r&&t.addHandler(r,this),this.update(this.fields.sources[e](t.data))),this.emit_sourceChanged(e,n)}},setSources:function(e){e||(e={});for(var t in this.fields.sources)this.setSource(t,e[t])},destroy:function(){this.setSources(),this.sources=null,this.sourcesContext_=null,f.prototype.destroy.call(this)}});t.exports={Merge:p}},"h.js":function(e,t,n,r,i,s,o,u){function _(e){return M[e]=M[e]||0,e+M[e]++}function j(e,t){var n=H[e];if(n){for(var r=0,i;i=n[r];r++){var s=i[0],o=i[1];s[o]=t}delete H[e]}D[e]=t}function F(e,t,n){if(D[e])return D[e];var r=H[e];return r||(r=H[e]=[]),r.push([t,n]),function(t,n){var r=D[e];if(r)return r(t,n)}}function I(){for(var e in H)n.dev.warn(a+": type `"+e+"` is not defined, but used by "+H[e].length+" type(s)")}function R(){var e=m(arguments),t=e.pop(),n=e[0],r=e[1],i=e[2],s;if(typeof t!="function")throw 40;switch(e.length){case 0:s=function(){return t()};break;case 1:s=function(e,r,i){return n in e?t(r[n]):i};break;case 2:s=function(e,i,s){return n in e||r in e?t(i[n],i[r]):s};break;case 3:s=function(e,s,o){return n in e||r in e||i in e?t(s[n],s[r],s[i]):o};break;default:s=function(n,r,i){var s=!1,o=[];for(var u=0,a;a=e[u];u++)s=s||a in n,o.push(r[a]);return s?t.apply(null,o):i}}return s.args=e,s.calc=s,s}function U(e){return arguments.length==1?function(t,n,r){return e in t?n[e]!=null?String(n[e]):null:r}:R.apply(null,m(arguments).concat(function(){for(var e=arguments.length-1;e>=0;e--)if(arguments[e]==null)return null;return Array.prototype.join.call(arguments,"-")}))}function nt(e,t){var n=["has"],r=[l],i=[];for(var s in e)if(l.call(e,s)){var o="v"+i.length,u="f"+i.length,a=e[s];n.push(o,u),r.push(a,t[s]),i.push('"'+s+'":'+'has.call(data,"'+s+'")'+"?"+u+'(data["'+s+'"],'+o+")"+":"+o+(typeof a=="function"?"(data)":""))}var f=i.sort().join(","),c=et[f];return c||(c=et[f]=new Function(n,"return function(data){return {"+f+"};"+"};")),c.apply(null,r)}function rt(e,t){if(!Array.isArray(e))return null;if(!Array.isArray(t)||e.length!=t.length)return e||null;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return e;return t}function st(e,t){return typeof e=="string"?it(e):typeof e=="number"?new Date(e):e==null?null:e&&e.constructor===Date?e:t}function ot(e,t,r){e.aliases[t]=t,typeof r=="string"||Array.isArray(r)||typeof r=="function"&&r.calc!==r?r={type:r}:r=r?n.object.slice(r):{};if("type"in r){typeof r.type=="string"&&(r.type=F(r.type,e.fields,t));if(Array.isArray(r.type)){var i=r.type.slice();i.length==1?(r.type=n.fn.$const(i[0]),r.defValue=i[0]):(r.type=function(e,t){var n=i.indexOf(e)!=-1;return n?e:t},r.defValue=i.indexOf(r.defValue)!=-1?r.defValue:i[0])}r.type===Array&&(r.type=rt),r.type===Date&&(r.type=st),typeof r.type!="function"&&(r.type=null)}var s=r.type||d;if(r.id||r.index||[k,L,A,O].indexOf(s)!=-1)e.idFields[t]=r;r.calc?(at(e,t,r.calc),e.fields[t]=tt):e.fields[t]=s,e.defaults[t]="defValue"in r?r.defValue:s(),Z[t]||(Z[t]={destroy:function(){this.set(t,null)}})}function ut(e,t,n){if(n in e.fields==0)return;if(t in e.aliases)return;e.aliases[t]=n}function at(e,t,r){e.calcs||(e.calcs=[]);var i=e.calcs,s=e.deps,o=r.args||[],u={args:o,wrapper:r},a=e.calcs.length,f=0;if(o)for(var l=0,c;c=i[l];l++)o.indexOf(c.key)!=-1&&(f=l+1);if(t){u.key=t;for(var l=0,c;c=i[l];l++)if(c.args.indexOf(t)!=-1){a=l;break}if(f>a)return;s[t]=o.reduce(function(e,t){var r=s[t]||[t];for(var i=0;i<r.length;i++)n.array.add(e,r[i]);return e},[]);for(var h in s){var p=s[h].indexOf(t);p!=-1&&Array.prototype.splice.apply(s[h],[p,1].concat(s[t]))}}else a=f;i.splice(Math.min(a,f),0,u)}function ft(e){return function(t){return t&&this.modified&&e in this.modified?this.modified[e]:this.data[e]}}function lt(e){return function(t,n){return this.set(e,t,n)}}function ht(e,t){n.dev.warn("[basis.entity "+e.entityType.name+"#"+e.basisObjectId+"] "+t,e)}function vt(e){return e&&e instanceof pt}function mt(e,t){var r=e||{};return typeof e=="string"?r={name:r,fields:t||{}}:t&&(r=n.object.merge(r,{fields:t})),new Y(r)}function gt(e,t){return arguments.length>1?new Q(t,e):new Q(e)}n.require("./3.js"),n.require("./4.js"),n.require("./d.js");var a=this.path,f=n.Class,l=Object.prototype.hasOwnProperty,c=n.object.keys,h=n.object.extend,p=n.object.complete,d=n.fn.$self,v=n.getter,m=n.array.from,g=n.event.Emitter,y=n.event.create,b=n.data.Object,w=n.data.Slot,E=n.data.Dataset,S=n.data.dataset.Filter,x=n.data.dataset.Split,T={},N=[],C={string:!0,number:!0},k=function(e){return isNaN(e)?null:Number(e)},L=function(e){return isNaN(e)?null:Number(e)},A=function(e){return isNaN(e)?null:parseInt(e,10)},O=function(e){return e==null?null:String(e)},M={},D={},P={},H={},B=function(){},q=f(null,{className:a+".Index",items:null,init:function(e){this.items={}},get:function(e,t){var n=l.call(this.items,e)&&this.items[e];if(n&&(!t||n.entityType===t))return n},add:function(e,t){if(t){var n=this.get(e);if(!n)return this.items[e]=t,!0;if(n!==t)throw 39}},remove:function(e,t){if(this.items[e]===t)return delete this.items[e],!0},destroy:function(){this.items=null}}),z=function(e,t){return function(n){return e.prototype[t].call(this,n&&n.map(this.wrapper))}},W=function(e,t){return function(){this.name||(this.name=_(t)),e.prototype.init.call(this)}},X=function(e){return function(e){var t=n.object.slice(this.items_),r=[],i=[];if(e){E.setAccumulateState(!0);for(var s=0;s<e.length;s++){var o=this.wrapper(e[s]);o&&(t[o.basisObjectId]=!1)}E.setAccumulateState(!1)}for(var u in this.items_)u in t==0&&r.push(this.items_[u]);for(var u in t)t[u]&&i.push(t[u]);i.length&&this.wrapper.all&&this.wrapper.all.emit_itemsChanged({deleted:i}),E.setAccumulateState(!0);for(var s=0;s<i.length;s++)i[s].destroy();return E.setAccumulateState(!1),r.length?r:null}},V=f(E,{className:a+".EntitySet",name:null,wrapper:d,init:W(E,"EntitySet"),sync:X(E),set:z(E,"set"),add:z(E,"add"),remove:z(E,"remove"),destroy:function(){E.prototype.destroy.call(this),this.wrapper=null}}),$=f(V,{className:a+".ReadOnlyEntitySet",set:n.fn.$false,add:n.fn.$false,remove:n.fn.$false,clear:n.fn.$false}),J=f(S,{className:a+".EntityCollection",name:null,init:W(S,"EntityCollection"),sync:X(S)}),K=f(x,{className:a+".EntityGrouping",name:null,subsetClass:$,init:W(x,"EntityGrouping"),sync:X(x),getSubset:function(e,t){var n=x.prototype.getSubset.call(this,e,t);return n&&n.dataset&&(n.dataset.wrapper=this.wrapper),n}}),Q=function(e,t){if(this instanceof Q){e||(e=d);if(!t||D[t])t=_("UntitledEntitySetType");var n=new G({entitySetClass:{wrapper:e}}),r=n.entitySetClass,i=function(e,t){return e!=null?(t instanceof V==0&&(t=n.createEntitySet()),t.set(e instanceof E?e.getItems():m(e)),t):null};return typeof e=="string"&&(r.prototype.wrapper=F(e,r.prototype,"wrapper")),j(t,i),h(i,{type:n,typeName:t,toString:function(){return t+"()"},reader:function(e){if(Array.isArray(e)){var t=r.prototype.wrapper;return e.map(t.reader||t)}return e},extendClass:function(e){return r.extend.call(r,e),i},extendReader:function(e){var t=i.reader;return i.reader=function(n){return Array.isArray(n)&&e(n),t(n)},i},entitySetType:n,extend:function(){return r.extend.apply(r,arguments)}}),i}},G=f(null,{className:a+".EntitySetConstructor",entitySetClass:V,extendConstructor_:!0,createEntitySet:function(){return new this.entitySetClass}}),Y=function(e){if(this instanceof Y){var t;e.singleton?t=function(e){var t=n.get();return t?e&&t.update(e):t=new r(e||{}),t}:t=function(e,t){if(e!=null){if(!t||t.entityType!==n)t=null;if(e===t||e.entityType===n)return e;var i,s=n.idField;if(C[typeof e]){if(!s)return;if(t=n.index.get(e,n))return t;i=e,e={},e[s]=i}else n.compositeKey&&(i=n.compositeKey(e,e)),i!=null&&(t=n.index.get(i,n));return t&&t.entityType===n?t.update(e):t=new r(e),t}};var n=new ct(e||{},t),r=n.entityClass,i=n.name;return j(i,t),h(t,{all:n.all,type:n,typeName:i,toString:function(){return i+"()"},get:function(e){return n.get(e)},getSlot:function(e,t){return n.getSlot(e,t)},reader:function(e){return n.reader(e)},extendClass:function(e){return r.extend.call(r,e),t},extendReader:function(e){var n=t.reader;return t.reader=function(t){return t&&typeof t=="object"&&e(t),n(t)},t},entityType:n,extend:function(){return r.extend.apply(r,arguments)}}),t}},Z={},et={},tt=function(e,t){return t},it=function(){function e(e,n,r,i,s,o,u){var a=new Date(e,n-1,r,i||0,0,o||0,u?u.substr(0,3):0);return a.setMinutes((s||0)-t-a.getTimezoneOffset()),a}var t;return function(n){return t=0,e.apply(null,String(n||"").replace(reIsoTimezoneDesignator,function(e,n,r,i){return t=i?r*60+i*1:r*1,n}).split(reIsoStringSplit))}}(),ct=f(null,{className:a+".EntityType",wrapper:null,all:null,fields:null,idField:null,idFields:null,defaults:null,aliases:null,slots:null,singleton:!1,index:null,indexes:null,entityClass:null,init:function(e,t){this.name=e.name;if(!this.name||D[this.name])this.name=_("UntitledEntityType");this.fields={},this.deps={},this.idFields={},this.defaults={},this.aliases={},this.slots={};var r=e.index;r&&r instanceof q&&(this.index=r),this.wrapper=t;if("all"in e==0||e.all||e.singleton)this.all=new $(n.object.complete({wrapper:t},e.all));this.singleton=!!e.singleton;if(this.singleton){var i;this.get=function(){return i},this.all.addHandler({itemsChanged:function(e,t){i=t.inserted?t.inserted[0]:null}},this)}for(var s in e.fields)ot(this,s,e.fields[s]);for(var s in e.aliases)ut(this,s,e.aliases[s]);e.constrains&&e.constrains.forEach(function(e){at(this,null,e)},this);var o=c(this.idFields),u={};if(o.length){for(var a in this.idFields){var f=this.idFields[a],r=f.index,l;if(!r||r instanceof q==0)typeof r=="string"?(r in P==0&&(P[r]=new q),r=P[r]):(this.index||(this.index=new q),r=this.index);l=u[r.basisObjectId],l||(l=u[r.basisObjectId]={index:r,fields:[]}),l.fields.push(a),this.idFields[a]=l}this.index&&this.index.basisObjectId in u==0&&(this.index=null);for(var h in u){var l=u[h];l.property="__id__"+h,l.compositeKey=U.apply(null,l.fields),l.fields.length==1&&(l.idField=l.fields[0])}var p=c(u),d=u[this.index?this.index.basisObjectId:p[0]];this.index=d.index,this.idField=d.idField,this.compositeKey=d.compositeKey,this.idProperty=d.property,this.indexes=u}else this.index&&(this.index=null);var v={};for(var s in this.defaults)v[s]=undefined;this.entityClass=dt(this,this.all,this.fields,this.slots),this.entityClass.extend({entityType:this,type:t,typeName:this.name,state:e.state||this.entityClass.prototype.state,generateData:nt(this.defaults,this.fields),initDelta:v});for(var m in this.fields)this.entityClass.prototype["get_"+m]=ft(m),this.fields[m]!==tt&&(this.entityClass.prototype["set_"+m]=lt(m));N.push(this)},reader:function(e){var t={};if(C[typeof e])return this.idField?e:null;if(!e||e==null)return null;for(var n in e){var r=this.aliases[n];if(r){var i=this.fields[r].reader;t[r]=i?i(e[n]):e[n]}}return t},get:function(e){var t=this.getId(e);if(this.index&&t!=null)return this.index.get(t,this)},getId:function(e){if(this.compositeKey&&e!=null){if(C[typeof e])return e;if(e&&e.entityType===this)return e[this.idProperty];e instanceof b&&(e=e.data);if(this.compositeKey)return this.compositeKey(e,e)}},getSlot:function(e){var t=this.getId(e);if(t!=null){var n=l.call(this.slots,t)&&this.slots[t];if(!n){if(C[typeof e]){var r={};this.idField&&(r[this.idField]=e),e=r}n=this.slots[t]=new w({delegate:this.get(t)||null,data:e})}return n}}}),pt=f(b,{className:a+".BaseEntity",target:!0,setDelegate:function(){},extendConstructor_:!1,fieldHandlers_:null,modified:null,emit_rollbackUpdate:y("rollbackUpdate")}),dt=function(e,t,r,i){function s(t,n,r){var i=e.calcs,s=t.data,u=!1;try{if(i)for(var a=0,f;f=i[a];a++){var l=f.key,c=s[l],h=f.wrapper(n,s,c);l&&h!==c&&(n[l]=c,s[l]=h,u=!0)}for(var p in e.indexes){var d=e.indexes[p],v=t[d.property],m=v;d.compositeKey&&(m=d.compositeKey(n,s,v)),m!==v&&(o(d.index,t,v,m),t[d.property]=m)}return u}catch(g){for(var l in n)t.data[l]=n[l];r&&!t.modified&&(t.modified=r)}}function o(e,t,n,r){r!=null&&(e.add(r,t),l.call(i,r)&&i[r].setDelegate(t)),n!=null&&(e.remove(n,t),l.call(i,n)&&i[n].setDelegate())}return f(pt,{className:e.name,init:function(e){this.delegate=null,this.data=this.generateData(e),pt.prototype.init.call(this);var n;for(var r in this.data)n=this.data[r],n&&n!==this&&n instanceof g&&(n.addHandler(Z[r],this),this.fieldHandlers_||(this.fieldHandlers_={}),this.fieldHandlers_[r]=!0);s(this,this.initDelta),t&&t.emit_itemsChanged({inserted:[this]})},toString:function(){return"[object "+this.constructor.className+"("+this.entityType.name+")]"},getId:function(){return this[e.idProperty]},get:function(e,t){return t&&this.modified&&e in this.modified?this.modified[e]:this.data[e]},set:function(t,n,i,o){var u=r[t];if(!u)return!1;var a,f=this.modified;u===rt&&f&&t in f&&(n=rt(n,f[t]));var l=u(n,this.data[t]),h=this.data[t],p=l!==h&&(!l||!h||l.constructor!==Date||h.constructor!==Date||+l!==+h);if(p)e:{a={};if(!e.idFields[t])if(i)f||(this.modified=f={}),t in f==0?(a.rollback={key:t,value:undefined},f[t]=h):f[t]===l&&(a.rollback={key:t,value:l},delete f[t],c(f).length||(this.modified=null));else if(f&&t in f){if(f[t]!==l){a.rollback={key:t,value:f[t]},f[t]=l;break e}return!1}this.data[t]=l,this.fieldHandlers_&&this.fieldHandlers_[t]&&(h.removeHandler(Z[t],this),this.fieldHandlers_[t]=!1),l&&l!==this&&l instanceof g&&(l.addHandler(Z[t],this),this.fieldHandlers_||(this.fieldHandlers_={}),this.fieldHandlers_[t]=!0),a.key=t,a.value=h,a.delta={},a.delta[t]=h}else!i&&f&&t in f&&(a={rollback:{key:t,value:f[t]}},delete f[t],c(f).length||(this.modified=null));if(!o&&a){var d=a.key,v=a.delta||{},m;a.rollback&&(m={},m[a.rollback.key]=a.rollback.value),s(this,v,m)&&(d=!0),d&&(this.emit_update(v),a.delta=v),m&&this.emit_rollbackUpdate(m)}return a||!1},update:function(e,t){var n=!1,r={};if(e){var i,o;for(var u in e)if(o=this.set(u,e[u],t,!0))o.key&&(n=!0,r[o.key]=o.value),o.rollback&&(i||(i={}),i[o.rollback.key]=o.rollback.value);s(this,r,i)&&(n=!0),n&&this.emit_update(r),i&&this.emit_rollbackUpdate(i)}return n?r:!1},generateData:function(){return{}},reset:function(){this.update(this.generateData({}))},clear:function(){var e={};for(var t in this.data)e[t]=undefined;return this.update(e)},commit:function(e){var t=this.modified;this.modified=null,e&&this.update(e),t&&this.emit_rollbackUpdate(t)},rollback:function(t){var r=this.modified;r&&t&&(Array.isArray(t)||(t=[t]),r=n.object.slice(r,t.reduce(function(t,n){return t.concat(e.deps[n]||n)},[]))),this.update(r,!0)},destroy:function(){if(this.fieldHandlers_){for(var n in this.fieldHandlers_)this.fieldHandlers_[n]&&this.data[n].removeHandler(Z[n],this);this.fieldHandlers_=null}for(var n in e.indexes){var r=e.indexes[n],i=this[r.property];i!=null&&o(r.index,this,i,null)}t&&t.has(this)&&t.emit_itemsChanged({deleted:[this]}),b.prototype.destroy.call(this),this.data=T,this.modified=null}})};t.exports={isEntity:vt,createType:mt,createSetType:gt,validate:I,getTypeByName:function(e){return D[e]},getIndexByName:function(e){return P[e]},get:function(e,t){var n=D[e];if(n)return n.get(t)},resolve:function(e,t){var n=D[e];if(n)return n(t)},getByIndex:function(e,t){if(e in P)return P[e].get(t)},NumericId:k,NumberId:L,IntId:A,StringId:O,Index:q,CalculateField:R,ConcatStringField:U,calc:R,EntityType:Y,Entity:dt,BaseEntity:pt,EntitySetType:Q,EntitySet:V,ReadOnlyEntitySet:$,Collection:J,Grouping:K}},"i.js":function(e,t,n,r,i,s,o,u){function T(){var e="basisjsJsonpCallback"+parseInt(Math.random()*1e11);return r[e]=function(t){x[e]=t},e}function N(e){var t=x[e];return delete x[e],t}function C(e){delete x[e],delete r[e]}function k(e,t){var n,i,s=!1;if(typeof e!="number"){if(!e||this.script!==e.target)return;s=e&&e.type=="error",e=s||!this.script.readyState||/loaded|complete/.test(this.script.readyState)?S:E}if(e==this.prevReadyState_)return;this.prevReadyState_=e,this.emit_readyStateChanged(e);if(e==S){this.clearTimeout(),this.script.onload=this.script.onerror=this.script.onreadystatechange=null,this.script.parentNode&&this.script.parentNode.removeChild(this.script),this.script=null,t?(this.emit_abort(),n=this.stateOnAbort):(this.processResponse(),this.isSuccessful()&&!s?(n=y.READY,this.emit_success(this.getResponseData())):(n=y.ERROR,i=this.getResponseError(),this.emit_failure(i))),this.emit_complete(this);var o=this.callback;t?setTimeout(r[o]=function(){C(o)},3e5):C(o)}else n=y.PROCESSING;this.setState(n,i)}n.require("./j.js"),n.require("./4.js");var a=this.path,f=r.document,l=r.encodeURIComponent,c=n.object.extend,h=n.object.slice,p=n.object.merge,d=n.net.createTransportEvent,v=n.net.createRequestEvent,m=n.net.AbstractRequest,g=n.net.AbstractTransport,y=n.data.STATE,b=0,w=1,E=3,S=4,x={},L=m.subclass({className:a+".Request",timeout:3e4,timer_:null,emit_readyStateChanged:v("readyStateChanged"),isIdle:function(){return!this.script},isSuccessful:function(){return this.data.status==200},processResponse:function(){this.callback in x&&this.update({contentType:"application/javascript",data:N(this.callback),status:200})},getResponseData:function(){return this.data.data},getResponseError:function(){return{code:"ERROR",msg:"ERROR"}},prepare:n.fn.$true,prepareRequestData:function(e){var t=[],n=e.url;e=h(e),this.callback=T();for(var r in e.params){var i=e.params[r];if(i==null||i.toString()==null)continue;t.push(l(r)+"="+l(i.toString()))}return t.push(l(e.callbackParam)+"="+l(this.callback)),t=t.join("&"),e.routerParams&&(n=n.replace(/:([a-z\_\-][a-z0-9\_\-]+)/gi,function(t,n){return n in e.routerParams?e.routerParams[n]:t})),t&&(n+=(n.indexOf("?")==-1?"?":"&")+t),e.requestUrl=n,e},doRequest:function(){this.send(this.prepareRequestData(this.requestData))},send:function(e){if(!f)throw 41;var t=f.head||f.getElementByName("head")[0]||f.documentElement,n=f.createElement("script");this.update({data:undefined,status:"",error:""}),this.script=n,n.async=!0,n.src=e.requestUrl,n.charset=e.encoding,n.onload=n.onerror=n.onreadystatechange=k.bind(this),this.prevReadyState_=-1,this.emit_start(),k.call(this,b),this.setTimeout(this.timeout),t.appendChild(this.script)},repeat:function(){this.requestData&&(this.abort(),this.doRequest())},abort:function(){this.isIdle()||(this.clearTimeout(),k.call(this,S,!0))},setTimeout:function(e){this.timer_=setTimeout(this.timeoutAbort.bind(this),e)},clearTimeout:function(){this.timer_&&(this.timer_=clearTimeout(this.timer_))},timeoutAbort:function(){this.update({error:{code:"TIMEOUT_ERROR",message:"Timeout error"}}),this.emit_timeout(this),this.abort()},destroy:function(){this.abort(),m.prototype.destroy.call(this)}}),A=g.subclass({className:a+".Transport",requestClass:L,emit_readyStateChanged:v("readyStateChanged"),encoding:null,params:null,callbackParam:"callback",init:function(){g.prototype.init.call(this),this.params=h(this.params)},setParam:function(e,t){this.params[e]=t},setParams:function(e){this.clearParams();for(var t in e)this.setParam(t,e[t])},removeParam:function(e){delete this.params[e]},clearParams:function(){for(var e in this.params)delete this.params[e]},prepareRequestData:function(e){var t=e.url||this.url;if(!t)throw 42;return c(e,{url:t,encoding:e.encoding||this.encoding,params:p(this.params,e.params),routerParams:e.routerParams,callbackParam:e.callbackParam||this.callbackParam,influence:e.influence}),e}});t.exports={Request:L,Transport:A,request:function(e,t,r){typeof e=="string"&&(e={url:e});var i=new A(e);i.addHandler({success:t&&function(e,n,r){t(r)},failure:r&&function(e,t,n){r(n)},complete:function(){n.nextTick(function(){i.destroy()})}}),i.request()}}},"j.js":function(e,t,n,r,i,s,o,u){function g(e){var t=p(e);return function(){t.apply(w,arguments),this.service&&t.apply(this.service,arguments),t.apply(this,arguments)}}function y(e){var t=p(e);return function(){var r=[this].concat(l(arguments));t.apply(w,r),this.transport&&this.transport["emit_"+e].apply(this.transport,r),t.apply(this,arguments)}}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.object.extend,l=n.array.from,c=n.object.slice,h=n.object.merge,p=n.event.create,d=n.data.STATE,v=n.data.Object,m=n.event.Emitter,b=[],w=new m({abort:function(){var e=l(b);for(var t=0;t<e.length;t++)e[t].abort();return e},handler:{start:function(e){n.array.add(b,e.transport)},complete:function(e){n.array.remove(b,e.transport)}}}),E=v.subclass({className:a+".AbstractRequest",influence:null,initData:null,requestData:null,transport:null,stateOnAbort:d.UNDEFINED,emit_start:y("start"),emit_timeout:y("timeout"),emit_abort:y("abort"),emit_success:y("success"),emit_failure:y("failure"),emit_complete:y("complete"),emit_stateChanged:function(e){v.prototype.emit_stateChanged.call(this,e);if(this.influence)for(var t=0;t<this.influence.length;t++)this.influence[t].setState(this.state,this.state.data)},init:function(){v.prototype.init.call(this),this.influence=[]},setInfluence:function(e){this.influence=l(e)},clearInfluence:function(){this.influence=null},doRequest:n.fn.$undef,getResponseData:n.fn.$undef,destroy:function(){v.prototype.destroy.call(this),this.initData=null,this.requestData=null,this.clearInfluence()}}),S={start:function(e,t){n.array.add(this.inprogressRequests,t)},complete:function(e,t){n.array.remove(this.inprogressRequests,t)}},x={complete:function(){var e=this.requestQueue.shift();e&&n.nextTick(function(){e.doRequest()})}},T=m.subclass({className:a+".AbstractTransport",requestClass:E,requests:null,poolLimit:null,poolHashGetter:n.fn.$true,emit_start:g("start"),emit_timeout:g("timeout"),emit_abort:g("abort"),emit_success:g("success"),emit_failure:g("failure"),emit_complete:g("complete"),init:function(){this.requests={},this.requestQueue=[],this.inprogressRequests=[],m.prototype.init.call(this),this.addHandler(S,this),this.poolLimit&&this.addHandler(x,this)},getRequestByHash:function(e){var t=this.requests[e];if(!t){for(var n in this.requests)if(this.requests[n].isIdle()&&this.requestQueue.indexOf(this.requests[n])==-1){t=this.requests[n],delete this.requests[n];break}t||(t=new this.requestClass({transport:this})),this.requests[e]=t}return t},prepare:n.fn.$true,prepareRequestData:n.fn.$self,request:function(e){if(!this.prepare())return;var t=c(e),n=this.poolHashGetter(this.prepareRequestData(t)),r=this.getRequestByHash(n,!0);return r.initData&&r.abort(),r.initData=t,r.requestData=t,r.setInfluence(t.influence||this.influence),this.poolLimit&&this.inprogressRequests.length>=this.poolLimit?(this.requestQueue.push(r),r.setState(d.PROCESSING)):r.doRequest(),r},abort:function(){for(var e=0,t;t=this.inprogressRequests[e];e++)t.abort();for(var e=0,t;t=this.requestQueue[e];e++)t.setState(d.ERROR);this.inprogressRequests=[],this.requestQueue=[]},stop:function(){this.stopped||(this.stoppedRequests=this.inprogressRequests.concat(this.requestQueue),this.abort(),this.stopped=!0)},resume:function(){if(this.stoppedRequests){for(var e=0,t;t=this.stoppedRequests[e];e++)t.transport.request(t.initData);this.stoppedRequests=null}this.stopped=!1},destroy:function(){for(var e in this.requests)this.requests[e].destroy();this.requests={},this.inprogressRequests=null,this.requestQueue=null,this.stoppedRequests=null,m.prototype.destroy.call(this)}});t.exports={createTransportEvent:g,createRequestEvent:y,transportDispatcher:w,AbstractRequest:E,AbstractTransport:T}},"k.js":function(e,t,n,r,i,s,o,u){n.require("./3.js"),n.require("./l.js"),n.require("./n.js");var a=this.path,f=n.event.create,l=n.net.action.create,c=n.event.Emitter,h=n.net.ajax.Transport,p={start:function(e,t){n.array.add(this.inprogressTransports,t.transport)},complete:function(e,t){n.array.remove(this.inprogressTransports,t.transport)}},d=c.subclass({className:a+".Service",inprogressTransports:null,transportClass:h,emit_sessionOpen:f("sessionOpen"),emit_sessionClose:f("sessionClose"),emit_sessionFreeze:f("sessionFreeze"),emit_sessionUnfreeze:f("sessionUnfreeze"),isSecure:!1,prepare:n.fn.$true,signature:n.fn.$undef,isSessionExpiredError:n.fn.$false,init:function(){c.prototype.init.call(this),this.inprogressTransports=[];var e=this.transportClass;this.transportClass=e.subclass({service:this,needSignature:this.isSecure,emit_failure:function(t,n){e.prototype.emit_failure.call(this,t,n),this.needSignature&&this.service.isSessionExpiredError(t)&&(this.service.freeze(),this.service.stoppedTransports.push(this),this.stop())},request:function(t){if(!this.service.prepare(this,t))return;if(this.needSignature&&!this.service.sign(this))return;return e.prototype.request.call(this,t)}}),this.addHandler(p)},sign:function(e){if(this.sessionKey)return this.signature(e,this.sessionData),!0},openSession:function(e,t){this.sessionKey=e,this.sessionData=t,this.unfreeze(),this.emit_sessionOpen()},closeSession:function(){this.freeze(),this.emit_sessionClose()},freeze:function(){if(!this.sessionKey)return;this.sessionKey=null,this.sessionData=null,this.stoppedTransports=this.inprogressTransports.filter(function(e){return e.needSignature});for(var e=0,t;t=this.inprogressTransports[e];e++)t.stop();this.emit_sessionFreeze()},unfreeze:function(){if(this.stoppedTransports)for(var e=0,t;t=this.stoppedTransports[e];e++)t.resume();this.emit_sessionUnfreeze()},createTransport:function(e){return new this.transportClass(e)},createAction:function(e){return l(n.object.complete({service:this},e))},destroy:function(){this.inprogressTransports=null,this.stoppedTransports=null,this.sessionKey=null,this.sessionData=null,c.prototype.destroy.call(this)}});t.exports={Service:d}},"l.js":function(e,t,n,r,i,s,o,u){function O(e,t){var r={};if(k.test(t.method)){if(!c||t.postBody instanceof c==0)r["Content-Type"]=t.contentType+(t.encoding?";charset="+t.encoding:"")}else f.test("ie")&&(r["If-Modified-Since"]="Thu, 01 Jan 1970 00:00:00 GMT");n.object.iterate(h(r,t.headers),function(e,t){t!=null&&typeof t!="function"&&this.setRequestHeader(e,t)},e)}function M(e,t){if(t.responseType&&t.asynchronous&&"responseType"in e)try{e.responseType=t.responseType}catch(n){}}function _(e,t){try{return n.json.parse(e)}catch(r){}}function D(e){var t=this.xhr,r,i,s;this.sendDelayTimer_=clearTimeout(this.sendDelayTimer_);if(!t)return;typeof e!="number"&&(e=t.readyState);if(e==this.prevReadyState_)return;this.prevReadyState_=e,this.emit_readyStateChanged(e),e==x?(this.clearTimeout(),t.onreadystatechange=n.fn.$undef,s=t.status==0,!s&&!t.responseType&&(s=typeof t.responseText=="unknown"||!t.responseText&&!t.getAllResponseHeaders()),s?(this.emit_abort(),r=this.stateOnAbort):(this.processResponse(),this.isSuccessful()?(r=T.READY,this.emit_success(this.getResponseData())):(r=T.ERROR,i=this.getResponseError(),!i&&this.data.error&&(i=this.data.error),this.emit_failure(i))),this.emit_complete(this)):r=T.PROCESSING,this.setState(r,i)}n.require("./m.js"),n.require("./j.js"),n.require("./4.js");var a=this.path,f=n.ua,l=r.encodeURIComponent,c=r.FormData,h=n.object.extend,p=n.object.slice,d=n.object.merge,v=n.net.createTransportEvent,m=n.net.createRequestEvent,g=n.net.AbstractRequest,y=n.net.AbstractTransport,b=0,w=1,E=2,S=3,x=4,T=n.data.STATE,N="HEAD GET POST PUT PATCH DELETE TRACE LINK UNLINK CONNECT".split(" "),C=/POST/i,k=/^(POST|PUT|PATCH|LINK|UNLINK)$/i,L="native",A=function(){if("XMLHttpRequest"in r)return function(){return new XMLHttpRequest};var e=r.ActiveXObject;if(e){var t=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"];for(var n=0;L=t[n];n++)try{if(new e(L))return function(){return new e(L)}}catch(i){}}throw 43}(),P=g.subclass({className:a+".Request",requestStartTime:0,timeout:3e4,timer_:null,sendDelay:null,sendDelayTimer_:null,lastRequestUrl_:null,debug:!1,emit_readyStateChanged:m("readyStateChanged"),init:function(){g.prototype.init.call(this),this.xhr=A()},isIdle:function(){return this.xhr.readyState==x||this.xhr.readyState==b},isSuccessful:function(){var e=this.xhr.status;return e>=200&&e<300||e==304},processResponse:function(){this.update({contentType:this.xhr.getResponseHeader("content-type"),status:this.xhr.status})},getResponseData:function(){var e=this.xhr;if(!e.responseType)if(this.responseType=="json"||/^application\/json/i.test(this.data.contentType))return _(e.responseText,this.lastRequestUrl_);return"response"in e?e.response:e.responseText},processErrorResponse:function(){return this.getResponseError()},getResponseError:function(){return{code:"SERVER_ERROR",msg:this.responseType?this.xhr.response||this.xhr.statusText||"Error":this.xhr.responseText}},prepare:n.fn.$true,prepareRequestData:function(e){var t=[],n=e.url;e=p(e);for(var r in e.params){var i=e.params[r];if(i==null||i.toString()==null)continue;t.push(l(r)+"="+l(i.toString()))}return t=t.join("&"),!e.postBody&&k.test(e.method)&&(e.postBody=t||"",t=""),e.routerParams&&(n=n.replace(/:([a-z\_\-][a-z0-9\_\-]+)/gi,function(t,n){return n in e.routerParams?e.routerParams[n]:t})),t&&(n+=(n.indexOf("?")==-1?"?":"&")+t),e.requestUrl=n,e},doRequest:function(){this.send(this.prepareRequestData(this.requestData))},send:function(e){this.update({contentType:"",status:""}),f.test("gecko1.8.1-")&&e.asynchronous&&(this.xhr=A()),this.emit_start();var t=this.xhr;this.prevReadyState_=-1,t.onreadystatechange=D.bind(this),e.asynchronous||D.call(this,b),t.open(e.method,e.requestUrl,e.asynchronous),this.lastRequestUrl_=e.requestUrl,M(t,e),this.responseType=e.responseType||"",O(t,e),this.setTimeout(this.timeout);var n=e.postBody;if(k.test(e.method)&&f.test("ie9-"))if(typeof n=="object"&&typeof n.documentElement!="undefined"&&typeof n.xml=="string")n=n.xml;else if(typeof n=="string")n=n.replace(/\r/g,"");else if(n==null||n=="")n="[No data]";return this.sendDelay?(this.sendDelayTimer_&&(this.sendDelayTimer_=clearTimeout(this.sendDelayTimer_)),this.sendDelayTimer_=setTimeout(function(){this.sendDelayTimer_=null,this.xhr===t&&t.readyState==w&&t.send(n)}.bind(this),this.sendDelay)):t.send(n),!0},repeat:function(){this.requestData&&(this.abort(),this.doRequest())},abort:function(){this.isIdle()||(this.clearTimeout(),this.xhr.abort(),this.xhr.readyState!=x&&this.xhr.readyState!=b&&D.call(this,x))},setTimeout:function(e){if(!this.xhr.asynchronous)return;"ontimeout"in this.xhr?(this.xhr.timeout=e,this.xhr.ontimeout=this.timeoutAbort.bind(this)):this.timer_=setTimeout(this.timeoutAbort.bind(this),e)},clearTimeout:function(){this.timer_&&(this.timer_=clearTimeout(this.timer_))},timeoutAbort:function(){this.update({error:{code:"TIMEOUT_ERROR",message:"Timeout error"}}),this.emit_timeout(this),this.abort()},destroy:function(){this.abort(),this.xhr=null,g.prototype.destroy.call(this)}}),H=y.subclass({className:a+".Transport",requestClass:P,emit_readyStateChanged:v("readyStateChanged"),asynchronous:!0,method:"GET",contentType:"application/x-www-form-urlencoded",encoding:null,requestHeaders:n.Class.extensibleProperty(),responseType:"",params:null,routerParams:null,url:"",postBody:null,init:function(){y.prototype.init.call(this),this.params=p(this.params),this.routerParams=p(this.routerParams)},setParam:function(e,t){this.params[e]=t},setParams:function(e){this.clearParams();for(var t in e)this.setParam(t,e[t])},removeParam:function(e){delete this.params[e]},clearParams:function(){for(var e in this.params)delete this.params[e]},prepareRequestData:function(e){if(!e.url&&!this.url)throw 44;return h(e,{headers:d(this.requestHeaders,e.headers),params:d(this.params,e.params),routerParams:d(this.routerParams,e.routerParams)}),n.object.complete(e,{asynchronous:this.asynchronous,url:this.url,method:this.method,contentType:this.contentType,encoding:this.encoding,postBody:this.postBody,responseType:this.responseType}),e}});t.exports={Request:P,Transport:H,request:function(e,t,r){typeof e=="string"&&(e={url:e,asynchronous:!!t||!!r});var i=new H(e);i.addHandler({success:t&&function(e,n,r){t(r)},failure:r&&function(e,t,n){r(n)},complete:function(){n.nextTick(function(){i.destroy()})}});var s=i.request();if(!s.requestData.asynchronous)return s.getResponseData()}}},"m.js":function(e,t,n,r,i,s,o,u){function S(e){var t=1e6,n=String(e).split(".");for(var r=0,i=0;r<4&&r<n.length;r++,t/=100)i+=n[r]*t;return i}function x(e){var t=e.toLowerCase();if(t in p)return p[t];var n=t.match(/^([a-z]+)(([\d\.]+)([+-=]?))?$/i);if(n){p[t]=!1;var r=n[1].toLowerCase(),i=S(n[3]),s=n[4]||"=",o=h[r];if(o)return p[t]=!i||s=="="&&o==i||s=="+"&&o>=i||s=="-"&&o<i}return!1}var a=this.path,f=r.document,l=r.navigator&&r.navigator.userAgent||"",c=r.opera,h={},p={},d="unknown",v="unknown",m={MSIE:["Internet Explorer","msie","ie"],Gecko:["Gecko","gecko"],Safari:["Safari","safari"],"iPhone OS":["iPhone","iphone"],AdobeAir:["AdobeAir","air"],AppleWebKit:["WebKit"],Chrome:["Chrome","chrome"],FireFox:["FireFox","firefox","ff"],Iceweasel:["FireFox","firefox","ff"],Shiretoko:["FireFox","firefox","ff"],Opera:["Opera","opera"]};for(var g in m){if(g=="MSIE"&&c)continue;if(g=="Safari"&&/chrome/i.test(l))continue;if(g=="AppleWebKit"&&/iphone/i.test(l))continue;if(l.match(new RegExp(g+"."+"(\\d+(\\.\\d+)*)","i"))){var y=m[g],b=c&&typeof c.version=="function"?c.version():RegExp.$1,w=S(b);d=y[0]+w,v=y[0]+" "+b;for(var E=0;E<y.length;E++)h[y[E].toLowerCase()]=w}}var T={set:function(e,t,n,r,i){f.cookie=e+"="+(t==null?"":escape(t))+";path="+(r||(location.pathname.indexOf("/")==0?"":"/")+location.pathname)+(n?";expires="+(new Date(Date.now()+n*1e3)).toGMTString():"")+(i?";domain="+i:"")},get:function(e){var t=f.cookie.match(new RegExp("(^|;)\\s*"+e+"\\s*=\\s*(.*?)\\s*(;|$)"));return t&&unescape(t[2])},remove:function(e,t,n){f.cookie=e+"=;expires="+(new Date(0)).toGMTString()+";path="+(t||(location.pathname.indexOf("/")==0?"":"/")+location.pathname)+(n?";domain="+n:"")}};t.exports={prettyName:v,is:x,test:function(){return n.array(arguments).some(x)},cookies:T}},"n.js":function(e,t,n,r,i,s,o,u){function v(e){return e.transport?e.transport:e.service?e.service.createTransport(e):e.createTransport?e.createTransport(e):new n.net.ajax.Transport(e)}function m(e){e=n.object.extend({prepare:h,request:h},e);var t=n.object.splice(e,["prepare","request"]),r=n.object.merge(d,n.object.splice(e,["start","success","failure","abort","complete"])),i=n.fn.lazyInit(function(){var t=v(e);return t.addHandler(p,r),t});return function(){this.state!=l&&(t.prepare.apply(this,arguments),this.request=i().request(n.object.complete({origin:this},t.request.apply(this,arguments))))}}n.require("./4.js"),n.require("./l.js");var a=n.data.STATE.UNDEFINED,f=n.data.STATE.READY,l=n.data.STATE.PROCESSING,c=n.data.STATE.ERROR,h=function(){},p={start:function(e,t){var n=t.requestData.origin;this.start.call(t.requestData.origin),n.state!=l&&n.setState(l)},success:function(e,t,n){var r=t.requestData.origin;this.success.call(r,n),r.state==l&&r.setState(f)},failure:function(e,t,n){var r=t.requestData.origin;this.failure.call(r,n),r.state==l&&r.setState(c,n)},abort:function(e,t){var n=t.requestData.origin;this.abort.call(n),n.state==l&&n.setState(a)},complete:function(e,t){this.complete.call(t.requestData.origin)}},d={start:h,success:h,failure:h,abort:h,complete:h};t.exports={create:m}},"o.js":function(e,t,n,r,i,s,o,u){function E(e){function r(e){return t.substr(e).match(/^\w+/)}function i(e,s){var o="",u;for(var a=e;a<t.length;a++){var f=t.charAt(a);switch(f){case s:return{result:o,offset:a};case"\\":o+="\\"+t.charAt(++a);break;case"|":o+=s!=")"?"\\|":"|";break;case"(":(u=i(a+1,")"))?(a=u.offset,o+="(?:"+u.result+")?"):o+="\\(";break;case":":(u=r(a+1))?(a+=u[0].length,o+="([^/]+)"):o+=":";break;case"*":(u=r(a+1))?(a+=u[0].length,o+="(.*?)"):o+="\\*";break;default:o+=n.string.forRegExp(f)}}return s?null:o}var t=String(e||"");return new RegExp("^"+i(0)+"$","i")}function S(){p?n.dom.event.addHandler(r,"hashchange",C):w=setInterval(C,d)}function x(){p?n.dom.event.removeHandler(r,"hashchange",C):clearInterval(w)}function T(){y||(S(),y=!0,C())}function N(){y&&(x(),y=!1)}function C(){var e=l.hash.substr(1)||"";if(e!=b){var t=[],n=[];b=e;for(var r in m){var i=m[r],s=e.match(i.regexp);s?(g[r]||t.push(i),g[r]=s):g[r]&&(n.push(i),delete g[r])}for(var o=0,i;i=n[o];o++){var u=v(i.callbacks);for(var a=0,f;f=u[a];a++)f.callback.leave&&f.callback.leave.call(f.context)}for(var o=0,i;i=t[o];o++){var u=v(i.callbacks);for(var a=0,f;f=u[a];a++)f.callback.enter&&f.callback.enter.call(f.context)}for(var r in g){var i=m[r],c=v(g[r],1),u=v(i.callbacks);for(var o=0,f;f=u[o];o++)f.callback.match&&f.callback.match.apply(f.context,c)}}}function k(e,t,n){var r=m[e],i;if(!r){r=m[e]={source:e,callbacks:[],regexp:Object.prototype.toString.call(e)!="[object RegExp]"?E(e):e};if(typeof b=="string"){var s=b.match(r.regexp);s&&(g[e]=s)}}i={cb_:t,context:n,callback:typeof t!="function"?t||{}:{match:t}},r.callbacks.push(i),e in g&&(i.callback.enter&&i.callback.enter.call(n),i.callback.match&&i.callback.match.apply(n,v(g[e],1)))}function L(e,t,n){var r=m[e];if(r){var i=-1;for(var s=0,o;o=r.callbacks[s];s++)if(o.cb_===t&&o.context===n){r.callbacks.splice(s,1),r.callbacks.length||(delete m[e],delete g[e]);break}}}function A(e,t){t?l.replace(l.pathname+"#"+e):l.hash=e,y&&C()}n.require("./8.js");var a=this.path,f=n.namespace(String(a)),l=r.location,c=r.document,h=c.documentMode,p="onhashchange"in r&&(h===undefined||h>7),d=50,v=n.array.from,m={},g={},y=!1,b,w;t.exports={debug:!1,add:k,remove:L,stop:N,start:T,checkUrl:C,navigate:A}},"p.js":function(e,t,n,r,i,s,o,u){function p(e){a.title=e}function d(e){return typeof e=="string"?a.getElementById(e):e}function v(e,t){e.parentNode.replaceChild(t,e)}var a=r.document||{title:"unknown"},f=a.title,l=n.fn.$undef,c,h,m=n.fn.lazyInit(function(e){var t=[],r=!1,i={inited:!1,setTitle:function(e){e!=f&&(f instanceof n.Token&&f.detach(p),e instanceof n.Token?(e.attach(p),p(e.get())):p(e),f=e)},setElement:function(e){var t=d(e);if(h==t)return;if(h){v(h,t);return}h=t,c||(c={type:"append",node:a.body});var n=d(c.node);if(!n)return;c.type=="append"?n.appendChild(h):v(n,h)},ready:function(e,n){r?e.call(n,i):t.push({fn:e,context:n})}};for(var s in e){var o=e[s];switch(s){case"title":i.setTitle(o);break;case"container":c={type:"append",node:o};break;case"replace":c={type:"replace",node:o};break;case"element":h=o;break;case"init":l=typeof o=="function"?o:l;break;default:}}return n.ready(function(){var e=h,n=l.call(i);n&&(n.element?e=n.element:e=n),h=null,i.setElement(e),r=!0,i.inited=!0;var s;while(s=t.shift())s.fn.call(s.context,i)}),i});t.exports={create:m}}};(function r(i,s,o){function l(e){function t(e){return Math.round(e).toString(36)}var n=t(10+25*Math.random());e||(e=16);while(n.length<e)n+=t(new Date*Math.random());return n.substr(0,e)}function c(e,t){for(var n in t)e[n]=t[n];return e}function h(e,t){for(var n in t)n in e==0&&(e[n]=t[n]);return e}function p(e){var t=[];for(var n in e)t.push(n);return t}function d(e){var t=[];for(var n in e)t.push(e[n]);return t}function v(e,t){var n={};if(!t)return c(n,e);for(var r=0,i;i=t[r++];)i in e&&(n[i]=e[i]);return n}function m(e,t){var n={};if(!t)return c(n,e);for(var r=0,i;i=t[r++];)i in e&&(n[i]=e[i],delete e[i]);return n}function g(){var e={};for(var t=0;t<arguments.length;t++)c(e,arguments[t]);return e}function y(e,t,n){var r=[];for(var i in e)r.push(t.call(n,i,e[i]));return r}function b(e){return e==undefined}function w(e){return e!=undefined}function E(e){return e==null||e==undefined}function S(e){return e!=null&&e!=undefined}function x(e){return e===this}function T(e){return e!==this}function N(e){return e}function C(e){return function(){return e}}function k(){return!1}function L(){return!0}function A(){return null}function O(){}function D(e){return function(t){var n={};return n[e]=t,n}}function P(e,t){var n=0,r,i;return r=function(){return n++||(r.inited=!0,r.data=i=e.apply(t||this,arguments)),i}}function H(e,t,n){var r=0,i,s;return i=function(){return r++||(i.inited=!0,i.data=s=e.call(n||this)),t.apply(s,arguments),s}}function B(e,t){var n=0;return function(){if(!(n++))return e.apply(t||this,arguments)}}function W(){var e=o;if(!e)if(q)U=__filename.replace(/\\/g,"/");else{var t=a.scripts;for(var n=0,r;r=t[n];n++){var i=r.hasAttribute("basis-config")?r.getAttribute("basis-config"):r.getAttribute("data-basis-config");r.removeAttribute("basis-config"),r.removeAttribute("data-basis-config");if(i!==null){U=R.normalize(r.src);try{e=Function("return{"+i+"}")()}catch(s){}break}}}return X(e)}function X(e,t){e=v(e);var n=[],r=g(e.path,e.modules,{basis:U});e.modules={};if(e.autoload){var i=String(e.autoload).match(/^((?:[^\/]*\/)*)([a-z$_][a-z0-9$_]*)((?:\.[a-z$_][a-z0-9$_]*)*)$/i);i&&(r[i[2]]={autoload:!0,filename:i[1]+i[2]+(i[3]||".js")}),delete e.autoload}for(var s in r){var o=r[s];typeof o=="string"&&(o={filename:o.replace(/\/$/,"/"+s+".js")});var u=o.filename,a=o.path;u&&!a&&(u=R.resolve(u),a=u.substr(0,u.length-R.extname(u).length),u="../"+R.basename(u)),a=R.resolve(a),!u&&a&&(u=R.basename(a),a=R.dirname(a)),R.extname(u)||(u+=".js"),u=R.resolve(a,u),e.modules[s]={path:a,filename:u},o.autoload&&(e.autoload=n,n.push(s))}return e}function et(e){var t=Y[e.url];if(t)for(var n=0;n<t.length;n++)t[n](e.get(),e.url)}function it(e,t,n){try{return new Function(t,n)}catch(r){j.error("Compilation error at "+e+("line"in r?":"+(r.line-1):"")+": "+r)}}function ct(e){if(e in ut==0){var t=e.split("."),n=t.shift(),r=t.join("/")+".js";n in ft==0&&(ft[n]=R.baseURI+n+"/"),n==e?r=ft[n].replace(/\/$/,"")+".js":r=ft[n]+r,ut[e]=r,at[r]=e}return ut[e]}function ht(e){var n=ot[e];return n||(n=ot[e]=new lt(e),n.namespaces_={},n.namespaces_[e]=n,z.noConflict||(i[e]=n)),e=="library"&&!t&&(t=ot[e]),n}function pt(e){e=e.split(".");var t=ht(e[0]),n=t;for(var r=1,i;i=e[r];r++){if(!n[i]){var s=e.slice(0,r+1).join(".");n[i]=new lt(s),t.namespaces_[s]=n[i]}n=n[i]}return ot[e.join(".")]=n,n}function vt(e,t){!/[^a-z0-9_\.]/i.test(e)&&R.extname(e)!=".js"?e=ct(e):e=R.resolve(e),Y[e]?Y[e].push(t):Y[e]=[t];var n=rt.get(e);n&&n.isResolved()&&t(n.get(),n.url)}function mt(e,t){if(e!=null){var n=e.length;if(typeof n=="undefined"||f.call(e)=="[object Function]")return[e];t||(t=0);if(n-t>0){for(var r=[],i=0,s=t;s<n;)r[i++]=e[s++];return r}}return[]}function gt(e,t,n){var r=[],i=typeof t=="function";for(var s=0;s<e;s++)r[s]=i?t.call(n,s,r):t;return r}var u="1.3.3",a=i.document,f=Object.prototype.toString,M=function(){function o(e){if(n.test(e)){var t=e.split("."),r=t[0],i=t[1],s=t[2],o;switch(t.length){case 1:o=function(e){return e!=null?e[r]:e};break;case 2:o=function(e){return e!=null?e[r][i]:e};break;case 3:o=function(e){return e!=null?e[r][i][s]:e};break;default:o=function(e){if(e!=null){e=e[r][i][s];for(var n=3,o;o=t[n];n++)e=e[o]}return e}}return o}return new Function("object","return object != null ? object."+e+" : object")}var e="basisGetterId"+l()+"_",t=1,n=/^[a-z$_][a-z$_0-9]*(\.[a-z$_][a-z$_0-9]*)*$/i,r=[],i={},s={},u=function(n,u){var a,f,l;if(!n||n===_)return _;typeof n=="function"?(l=n[e],l?a=r[Math.abs(l)-1]:(a=function(e){return n(e)},a.base=n,a.__extend__=M,l=r.push(a),n[e]=-l,a[e]=l)):(a=i[n],a?l=a[e]:(a=o(n),a.base=n,a.__extend__=M,l=r.push(a),a[e]=l,i[n]=a));var c=u!=null&&typeof u;if(!c)return a;var h=s[l],p;if(c=="string")p=c+u;else if(c=="function")p=u.basisModId_;else if(c!="object")return a;if(p&&h&&h[p])return h[p];typeof a.base=="function"&&(a=a.base);switch(c){case"string":f=function(e){return St.format(u,a(e))};break;case"function":p||(p=c+t++,u.basisModId_=p),f=function(e){return u(a(e))};break;default:f=function(e){return u[a(e)]}}return f.base=a.base||a,f.__extend__=M,p&&(h||(h={},s[l]=h),h[p]=f,f.mod=u,f[e]=r.push(f)),f};return u.ID=e,u}(),_=c(function(){},{__extend__:M}),j=function(){var e={log:O,info:O,warn:O,error:O};return typeof console!="undefined"&&y(e,function(t){e[t]="bind"in Function.prototype&&typeof console[t]=="function"?Function.prototype.bind.call(console[t],console):function(){Function.prototype.apply.call(console[t],console,arguments)}}),e}(),F=i.setImmediate||i.msSetImmediate,I=i.clearImmediate||i.msSetImmediate;F&&(F=F.bind(i)),I&&(I=I.bind(i)),F||function(){var e="basisjs.setImmediate",t=function(){var e={},t=1;return F=function(r){if(typeof r!="function")return;return e[++t]={fn:r,args:mt(arguments,1)},n(t),t},I=function(t){delete e[t]},function(t){var n=e[t];if(n)return delete e[t],n.fn.apply(undefined,n.args)}}(),n=function(e){setTimeout(function(){t(e)},0)};if(i.process&&typeof process.nextTick=="function")n=function(e){process.nextTick(function(){t(e)})};else if(i.MessageChannel){var r=new i.MessageChannel;r.port1.onmessage=function(e){var n=e.data;t(n)},n=function(e){r.port2.postMessage(e)}}else{var s=i.postMessage&&!i.importScripts;if(s){var o=i.onmessage;i.onmessage=function(){s=!1},i.postMessage("","*"),i.onmessage=o}if(s){var u=function(n){if(n&&n.source==i){var r=String(n.data).split(e)[1];r&&t(r)}};i.addEventListener?i.addEventListener("message",u,!0):i.attachEvent("onmessage",u),n=function(t){i.postMessage(e+t,"*")}}else{var f=function(){return a.createElement("script")};if(a&&"onreadystatechange"in f()){var l=n;n=function c(e){typeof kt!="undefined"&&(n=l,kt.head.ready(function(){n=function(e){var n=f();n.onreadystatechange=function(){n.onreadystatechange=null,kt.remove(n),n=null,t(e)},kt.head.add(n)}})),n===c?l(e):n(e)}}}}}();var q=typeof process=="object"&&f.call(process)=="[object process]",R=function(){var e=/^([^\/]+:|\/)/,t=/^[a-zA-Z0-9\-]+:\/?/,n=/^(?:[a-zA-Z0-9\-]+:)?\/\/[^\/]+\/?/,r=/[\?#].*$/,i,s,o;if(q){var u=(process.basisjsBaseURI||require("path").resolve(".")).replace(/\\/g,"/");i=u.replace(/^[^\/]*/,""),s=u.replace(/\/.*/,"")}else i=location.pathname.replace(/[^\/]+$/,""),s=location.protocol+"//"+location.host;return o={baseURI:i,origin:s,normalize:function(e){e=(e||"").replace(t,"/").replace(n,"/").replace(r,"");var i=[],s=e.split("/");for(var o=0;o<s.length;o++)s[o]==".."?(i.length>1||i[0])&&i.pop():(s[o]||!o)&&s[o]!="."&&i.push(s[o]);return i.join("/")||(e[0]==="/"?"/":"")},dirname:function(e){var t=o.normalize(e);return t.replace(/\/([^\/]*)$|^[^\/]+$/,"")||(t[0]=="/"?"/":".")},extname:function(e){var t=o.normalize(e).match(/[^\/](\.[^\/\.]*)$/);return t?t[1]:""},basename:function(e,t){var n=o.normalize(e).match(/[^\\\/]*$/);return n=n?n[0]:"",t==o.extname(n)&&(n=n.substring(0,n.length-t.length)),n},resolve:function(t,n){var r=mt(arguments).reverse(),s=[],u=!1;for(var a=0;!u&&a<r.length;a++)typeof r[a]=="string"&&(s.unshift(r[a]),u=e.test(r[a]));return u||s.unshift(i=="/"?"":i),o.normalize(s.join("/"))},relative:function(e,t){typeof t!="string"&&(t=e,e=i),e=o.normalize(e),t=o.normalize(t);if(e[0]=="/"&&t[0]!="/")return e;if(t[0]=="/"&&e[0]!="/")return t;var n=e.replace(/^\/$/,"").split(/\//),r=t.replace(/^\/$/,"").split(/\//),s=[],u=0;while(r[u]==n[u]&&typeof n[u]=="string")u++;for(var a=n.length-u;a>0;a--)s.push("..");return s.concat(r.slice(u).filter(Boolean)).join("/")}},o}(),U=s||"",z=o||{noConflict:!0,modules:{},autoload:["./0.js"]},V=function(){function r(e){return typeof e=="function"&&!!e.basisClassId_}function i(e){var t=this;while(t&&t!==e)t=t.superClass_;return t===e}function s(e,t,n){return(new Function(p(t),'return {"'+e+'": '+n+'\n}["'+e+'"]')).apply(null,d(t))}function u(s,o){var f=t++;typeof s!="function"&&(s=l);var h=function(){};h.prototype=s.prototype;var p=new h,d={basisClassId_:f,superClass_:s,extendConstructor_:!!s.extendConstructor_,isSubclassOf:i,subclass:function(){return u.apply(null,[g].concat(mt(arguments)))},extend:a,__extend__:function(e){return e&&e!==n&&(typeof e=="object"||typeof e=="function"&&!r(e))?l.create.call(null,g,e):e},prototype:p};for(var v=1,m;m=arguments[v];v++)d.extend(m);var g=d.extendConstructor_?function(t){this.basisObjectId=e.id++;var n;for(var r in t)n=this[r],this[r]=n&&n.__extend__?n.__extend__(t[r]):t[r];this.init(),this.postInit()}:function(){this.basisObjectId=e.id++,this.init.apply(this,arguments),this.postInit()};p.constructor=g;for(var y in p)p[y]===n&&(p[y]=g);return c(g,d),g}function a(e){var t=this.prototype;typeof e=="function"&&!r(e)&&(e=e(this.superClass_.prototype,v(t))),e.prototype&&(e=e.prototype);for(var n in e){var i=e[n],s=t[n];n=="className"||n=="extendConstructor_"?this[n]=i:s&&s.__extend__?t[n]=s.__extend__(i):t[n]=i}return o&&e[n="toString"]!==f&&(t[n]=e[n]),this}var e={id:1},t=1,n={},o=function(){for(var e in{toString:1})return!1;return!0}(),l=c(u,{className:"basis.Class",extendConstructor_:!1,prototype:{basisObjectId:0,constructor:null,init:function(){},postInit:function(){},destroy:function(){for(var e in this)hasOwnProperty.call(this,e)&&(this[e]=null);this.destroy=O}}}),h=function(e,t,n){return{__extend__:function(e){if(!e)return e;if(e&&e.__extend__)return e;var n=function(){};n.prototype=this;var r=new n;return t(r,e),r}}.__extend__(e||{})},m=function(e){return h(e,c,"extensibleProperty")},g=function(e){return h(e,function(e,t){for(var n in t){var r=e[n];e[n]=r&&r.__extend__?r.__extend__(t[n]):m(t[n])}},"nestedExtendProperty")},y=function(e,t){var n=function(t){var r={__extend__:n};if(t){if(t.__extend__)return t;for(var i in t)t[i]&&(r[i]=e)}return r};return n(t||{})};return c(l,{SELF:n,create:u,isClass:r,customExtendProperty:h,extensibleProperty:m,nestedExtendProperty:g,oneFunctionProperty:y})}(),$=V(null,{className:"basis.Token",value:null,handler:null,deferredToken:null,bindingBridge:{attach:function(e,t,n){e.attach(t,n)},detach:function(e,t,n){e.detach(t,n)},get:function(e){return e.get()}},init:function(e){this.value=e},get:function(){return this.value},set:function(e){this.value!==e&&(this.value=e,this.apply())},attach:function(e,t){this.handler={fn:e,context:t,handler:this.handler}},detach:function(e,t){var n=this,r;while(r=n,n=n.handler)if(n.fn===e&&n.context===t){n.fn=O,r.handler=n.handler;return}},apply:function(){var e=this.get(),t=this;while(t=t.handler)t.fn.call(t.context,e)},deferred:function(){var e=this.deferredToken;return e||(e=this.deferredToken=new K(this.value),this.attach(e.set,e)),e},destroy:function(){this.deferredToken&&(this.deferredToken.destroy(),this.deferredToken=null),this.handler=null,this.value=null,this.attach=O,this.detach=O}}),J=function(){function n(){var n=e;e={},t=null;for(var r in n)n[r].apply()}var e={},t;return function(r){if(r.basisObjectId in e)return;e[r.basisObjectId]=r,t||F(n)}}(),K=$.subclass({className:"basis.DeferredToken",set:function(e){this.value!==e&&(this.value=e,J(this))},deferred:function(){return this}}),Q={},G={},Y={},Z=1;(function(){var e=typeof n!="undefined"?n:null;if(e)for(var t in e)G[R.resolve(t)]=e[t]})();var tt=function(e,t){if(t||!G.hasOwnProperty(e)){var n="";if(!q){var r=new XMLHttpRequest;r.open("GET",e,!1),r.setRequestHeader("If-Modified-Since",(new Date(0)).toGMTString()),r.setRequestHeader("X-Basis-Resource",1),r.send(""),r.status>=200&&r.status<400&&(n=r.responseText)}else try{n=process.basisjsReadFile?process.basisjsReadFile(e):require("fs").readFileSync(e,"utf-8")}catch(i){}G[e]=n}return G[e]},nt=function(e,t){var n=R.extname(e),r=rt.extensions[n],i=arguments.length>1,s=!1,o=!1;i&&(e+="#virtual");var u=function(){if(s)return t;var n=i?t:tt(e);return r?o||(o=!0,t=r(n,e)):t=n,s=!0,et(u),u.apply(),t};return c(u,c(new $,{url:e,type:n,virtual:i,fetch:function(){return u()},toString:function(){return"[basis.resource "+e+"]"},isResolved:function(){return s},update:function(n){if(!s||i||n!=G[e])i||(G[e]=n),r?(!o&&i&&(t=n),o&&!r.permanent&&(t=r(n,e,t),et(u),u.apply())):(t=n,s=!0,et(u),u.apply())},reload:function(){if(i)return;var t=G[e],n=tt(e,!0);n!=t&&(s=!1,u.update(n))},get:function(n){return i&&n?r?wrappedContent:t:n?tt(e):u()},ready:function(e,t){if(s){e.call(t,u());if(r&&r.permanent)return}return u.attach(e,t),u}})),Q[e]=u,u},rt=function(e){var t=Q[e];return t?t:(e=R.resolve(e),t=Q[e],t||nt(e))};c(rt,{isResource:function(e){return e?Q[e.url]===e:!1},isResolved:function(e){var t=rt.get(e);return t?t.isResolved():!1},exists:function(e){return Q.hasOwnProperty(R.resolve(e))},get:function(e){return e=R.resolve(e),rt.exists(e)?rt(e):null},getFiles:function(e){return p(e?G:Q).map(R.relative)},virtual:function(e,t,n){return nt((n?n+":":R.normalize(R.baseURI=="/"?"":R.baseURI)+"/")+"virtual-resource"+Z++ +"."+e,t)},extensions:{".js":c(function(e,t){var n=at[t];if(!n){var r=!0,i=R.dirname(t)+"/"+R.basename(t,R.extname(t));for(var s in ft){var o=ft[s]+s+"/";if(i.substr(0,o.length)==o){r=!1,i=i.substr(ft[s].length);break}}n=i.replace(/\./g,"_").replace(/^\//g,"").replace(/\//g,"."),r&&(n="implicit."+n)}if(!ot[n]){var s=pt(n);s.exports=st({path:s.path,exports:s.exports},t,e).exports,s.exports&&s.exports.constructor===Object&&h(s,s.exports)}return ot[n].exports},{permanent:!0}),".css":function(e,t,n){return n||(n=new At(t)),n.updateCssText(e),n},".json":function(e,t){if(typeof e=="object")return e;var n;try{e=String(e),n=Ot.json.parse(e)}catch(r){}return n||null}}});var st=function(e,t,n){var r=R.dirname(t)+"/",s=n;return e.exports||(e.exports={}),typeof s!="function"&&(s=it(t,["exports","module","basis","global","__filename","__dirname","resource","require"],'"use strict";\n'+n)),typeof s=="function"&&s.call(e.exports,e.exports,e,Ot,i,t,r,function(e){return rt(R.resolve(r,e))},function(e,t){return dt(e,t||r)}),e},ot={},ut={},at={},ft={};y(z.modules,function(e,t){ft[e]=t.path+"/",ut[e]=t.filename,at[t.filename]=e}),function(t){var t=typeof e!="undefined"?e:null;if(t)for(var n in t){var r=R.resolve(n),i=t[n];at[r]=i,ut[i]=r}}();var lt=V(null,{className:"basis.Namespace",init:function(e){this.name=e,this.exports={path:this.name}},toString:function(){return"[basis.namespace "+this.path+"]"},extend:function(e){return c(this.exports,e),h(this,e)}}),dt=function(){if(q){var e=module.constructor.prototype;return function(t,n){if(!/[^a-z0-9_\.]/i.test(t)||R.extname(t)==".js"){var r=e._compile,i=pt(t);e._compile=function(e,t){this.basis=Ot,e='var __nodejsRequire = require;\nvar basis = module.basis;\nvar resource = function(filename){ return basis.resource(__dirname + "/" + filename) };\nvar require = function(filename, baseURI){ return basis.require(filename, baseURI || __dirname) };\n'+e,r.call(c(this,i),e,t)};var s=require(__dirname+"/"+t.replace(/\./g,"/"));return i.exports=s,s&&s.constructor===Object&&h(i,s),e._compile=r,s}return t=R.resolve(n,t),require(t)}}return function(e,t){return!/[^a-z0-9_\.]/i.test(e)&&R.extname(e)!=".js"?e=ct(e):e=R.resolve(t,e),rt(e).fetch()}}();h(Function.prototype,{bind:function(e){var t=this,n=mt(arguments,1);return n.length?function(){return t.apply(e,n.concat.apply(n,arguments))}:function(){return t.apply(e,arguments)}}}),h(Array,{isArray:function(e){return f.call(e)==="[object Array]"}}),h(Array.prototype,{indexOf:function(e,t){t=parseInt(t,10)||0;if(t<0)return-1;for(;t<this.length;t++)if(this[t]===e)return t;return-1},lastIndexOf:function(e,t){var n=this.length;t=parseInt(t,10),isNaN(t)||t>=n?t=n-1:t=(t+n)%n;for(;t>=0;t--)if(this[t]===e)return t;return-1},forEach:function(e,t){for(var n=0,r=this.length;n<r;n++)n in this&&e.call(t,this[n],n,this)},every:function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&!e.call(t,this[n],n,this))return!1;return!0},some:function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&e.call(t,this[n],n,this))return!0;return!1},filter:function(e,t){var n=[];for(var r=0,i=this.length;r<i;r++)r in this&&e.call(t,this[r],r,this)&&n.push(this[r]);return n},map:function(e,t){var n=[];for(var r=0,i=this.length;r<i;r++)r in this&&(n[r]=e.call(t,this[r],r,this));return n},reduce:function(e,t){var n=this.length,r=arguments.length;if(n==0&&r==1)throw 1;var i,s=0;r>1&&(i=t,s=1);for(var o=0;o<n;o++)o in this&&(s++?i=e.call(null,i,this[o],o,this):i=this[o]);return i}});var yt={from:mt,create:gt,flatten:function(e){return e.concat.apply([],e)},repeat:function(e,t){return yt.flatten(gt(parseInt(t,10)||0,e))},search:function(e,t,n,r){e.lastSearchIndex=-1,n=M(n||N);for(var i=parseInt(r,10)||0,s=e.length;i<s;i++)if(n(e[i])===t)return e[e.lastSearchIndex=i]},lastSearch:function(e,t,n,r){e.lastSearchIndex=-1,n=M(n||N);var i=e.length,s=isNaN(r)||r==null?i:parseInt(r,10);for(var o=s>i?i:s;o-->0;)if(n(e[o])===t)return e[e.lastSearchIndex=o]},add:function(e,t){return e.indexOf(t)==-1&&!!e.push(t)},remove:function(e,t){var n=e.indexOf(t);return n!=-1&&!!e.splice(n,1)},has:function(e,t){return e.indexOf(t)!=-1},sortAsObject:function(){return yt.sort.apply(this,arguments)},sort:function(e,t,n,r){return t=M(t),r=r?-1:1,e.map(function(e,n){return{i:n,v:t(e)}}).sort(n||function(e,t){return r*(e.v>t.v||-(e.v<t.v)||(e.i>t.i?1:-1))}).map(function(e){return this[e.i]},e)}};if(![1,2].splice(1).length){var bt=Array.prototype.splice;Array.prototype.splice=function(){var e=mt(arguments);return e.length<2&&(e[1]=this.length),bt.apply(this,e)}}var wt=/([\/\\\(\)\[\]\?\{\}\|\*\+\-\.\^\$])/g,Et=/\{([a-z\d_]+)(?::([\.0])(\d+)|:(\?))?\}/gi;h(String,{toLowerCase:function(e){return String(e).toLowerCase()},toUpperCase:function(e){return String(e).toUpperCase()},trim:function(e){return String(e).trim()},trimLeft:function(e){return String(e).trimLeft()},trimRight:function(e){return String(e).trimRight()}}),h(String.prototype,{trimLeft:function(){return this.replace(/^\s+/,"")},trimRight:function(){return this.replace(/\s+$/,"")},trim:function(){return this.trimLeft().trimRight()}});var St={toObject:function(e,t){try{return(new Function("return 0,"+e))()}catch(n){if(t)throw 2}},repeat:function(e,t){return(new Array(parseInt(t,10)+1||0)).join(e)},qw:function(e){var t=e.trim();return t?t.split(/\s+/):[]},forRegExp:function(e){return e.replace(wt,"\\$1")},format:function(e,t){var n=mt(arguments,1);return typeof t=="object"&&c(n,t),e.replace(Et,function(e,t,r,i,s){var o=t in n?n[t]:s?"":e;return r&&!isNaN(o)?(o=Number(o),r=="."?o.toFixed(i):Nt.lead(o,i)):o})},capitalize:function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()},camelize:function(e){return e.replace(/-(.)/g,function(e,t){return t.toUpperCase()})},dasherize:function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})},isEmpty:function(e){return e==null||String(e)==""},isNotEmpty:function(e){return e!=null&&String(e)!=""}};if("|||".split(/\|/).length+"|||".split(/(\|)/).length!=11){var xt=String.prototype.split;String.prototype.split=function(e,t){if(!e||e instanceof RegExp==0||e.source=="")return xt.apply(this,arguments);var n=[],r=0,i;e.global||(e=new RegExp(e.source,/\/([mi]*)$/.exec(e)[1]+"g"));while(i=e.exec(this))i[0]=this.substring(r,i.index),n.push.apply(n,i),r=e.lastIndex;return n.push(this.substr(r)),n}}if("12".substr(-1)!="2"){var Tt=String.prototype.substr;String.prototype.substr=function(e,t){return Tt.call(this,e<0?Math.max(0,this.length+e):e,t)}}var Nt={fit:function(e,t,n){return!isNaN(t)&&e<t?Number(t):!isNaN(n)&&e>n?Number(n):e},lead:function(e,t,n){return String(e).replace(/\d+/,function(e){return(t-=e.length-1)>1?(new Array(t)).join(n||0)+e:e})},group:function(e,t,n){return String(e).replace(/\d+/,function(e){return e.replace(/\d/g,function(r,i){return!i+(e.length-i)%(t||3)?r:(n||" ")+r})})},format:function(e,t,n,r,i,s){var o=e.toFixed(t);if(n||s)o=o.replace(/(\d+)(\.?)/,function(e,t,r){return(n?Ot.number.group(Number(t),3,n):t)+(r?s||r:"")});return r&&(o=o.replace(/^-?/,"$&"+(r||""))),o+(i||"")}};h(Date,{now:function(){return Number(new Date)}});var Ct=function(){function e(){return a.readyState=="complete"&&!!a.body}function r(e){e.callback.call(e.context)}function s(){if(e()&&!(t++))while(n)r(n),n=n.next}function o(){try{a.documentElement.doScroll("left"),s()}catch(e){setTimeout(o,1)}}var t=!a||e(),n;if(!t)if(a.addEventListener)a.addEventListener("DOMContentLoaded",s,!1),i.addEventListener("load",s,!1);else{a.attachEvent("onreadystatechange",s),i.attachEvent("onload",s);try{!i.frameElement&&a.documentElement.doScroll&&o()}catch(u){}}return function(e,i){t?r({callback:e,context:i}):n={callback:e,context:i,next:n}}}(),kt=function(){function r(e){if(a&&!t[e]){t[e]=a[e]||a.getElementsByTagName(e)[0];if(t[e]){var r=n[e];delete n[e];for(var i=0,s;s=r[i];i++)s[0].call(s[1],t[e])}}return t[e]}function i(){var e=this[0],t=this[1],s=this[2];o(t);var u=r(e);if(u){s===!0&&(s=u.firstChild);if(!s||s.parentNode!==u)s=null;u.insertBefore(t,s)}else n[e].push([i,[e,t,s]])}function s(e,r,i){n[e]?n[e].push([r,i]):r.call(i,t[e])}function o(e){for(var t in n){var r=yt.search(n[t],e,function(e){return e[1]&&e[1][1]});r&&yt.remove(n[t],r)}e&&e.parentNode&&e.parentNode.nodeType==1&&e.parentNode.removeChild(e)}function u(){e&&r("head")&&r("body")&&(e=clearInterval(e))}var e,t={},n={head:[],body:[]};return a&&(!r("head")||!r("body"))&&(e=setInterval(u,5),Ct(u)),{head:{ready:function(e,t){s("head",e,t)},add:function(e,t){i.call(["head",e,t])}},body:{ready:function(e,t){s("body",e,t)},add:function(e,t){i.call(["body",e,t])}},remove:o}}(),Lt=function(){function t(t){n.globalDestroy=!0,n.add=O,n.remove=O;var r;while(r=e.pop())if(typeof r.destroy=="function")try{r.destroy()}catch(i){}else for(var s in r)r[s]=null;e.length=0}var e=[];if("attachEvent"in i)i.attachEvent("onunload",t);else{if(!("addEventListener"in i))return{add:O,remove:O};i.addEventListener("unload",t,!1)}var n={add:function(t){t!=null&&e.push(t)},remove:function(t){yt.remove(e,t)}};return n}(),At=function(){function n(e){t.setAttribute("href",e),kt.head.add(t,!0)}function r(){t.setAttribute("href",location.href),kt.remove(t)}function i(){n(this.baseURI),this.element||(this.element=a.createElement("style"),e||this.element.appendChild(a.createTextNode(""))),kt.head.add(this.element),this.syncCssText(),r()}var e=function(){try{return!a.createElement("style").appendChild(a.createTextNode(""))}catch(e){return!0}}(),t=a&&a.createElement("base");return V(null,{className:"basis.CssResource",inUse:0,url:"",baseURI:"",cssText:undefined,element:null,init:function(e){this.url=e,this.baseURI=R.dirname(e)+"/"},updateCssText:function(e){this.cssText!=e&&(this.cssText=e,this.inUse&&this.element&&(n(this.baseURI),this.syncCssText(),r()))},syncCssText:e?function(){this.element.styleSheet.cssText=this.cssText}:function(){var e=this.cssText;this.element.firstChild.nodeValue=e},startUse:function(){this.inUse||kt.head.ready(i,this),this.inUse+=1},stopUse:function(){this.inUse&&(this.inUse-=1,!this.inUse&&this.element&&kt.remove(this.element))},destroy:function(){this.element&&kt.remove(this.element),this.element=null,this.cssText=null}})}(),Ot=pt("basis").extend({version:u,NODE_ENV:q,config:z,createSandbox:function(e){return r(i,U,h({noConflict:!0},e))},resolveNSFilename:ct,patch:vt,namespace:pt,require:dt,resource:rt,asset:function(e){return e},setImmediate:F,clearImmediate:I,nextTick:function(){F.apply(null,arguments)},Class:V,Token:$,DeferredToken:K,genUID:l,getter:M,ready:Ct,cleaner:Lt,console:j,path:R,doc:kt,object:{extend:c,complete:h,keys:p,values:d,slice:v,splice:m,merge:g,iterate:y},fn:{$undefined:b,$defined:w,$isNull:E,$isNotNull:S,$isSame:x,$isNotSame:T,$self:N,$const:C,$false:k,$true:L,$null:A,$undef:O,getter:M,nullGetter:_,wrapper:D,lazyInit:P,lazyInitAndRun:H,runOnce:B},array:c(mt,yt),string:St,number:Nt,bool:{invert:function(e){return!e}},json:{parse:typeof JSON!="undefined"?JSON.parse:function(e){return St.toObject(e,!0)}}});return pt("basis.dev").extend(j),z.autoload&&z.autoload.forEach(function(e){dt(e)}),Ot})(this)}).call(this)",
                "body": "(function(){"use strict";var e={"0.js":"library","1.js":"basis.ui","2.js":"basis.l10n","3.js":"basis.event","4.js":"basis.data","5.js":"basis.dom.wrapper","6.js":"basis.template","7.js":"basis.template.html","8.js":"basis.dom.event","9.js":"basis.template.htmlfgen","a.js":"basis.dragdrop","b.js":"basis.dom.computedStyle","c.js":"basis.layout","d.js":"basis.data.dataset","e.js":"basis.data.value","f.js":"basis.data.index","g.js":"basis.data.object","h.js":"basis.entity","i.js":"basis.net.jsonp","j.js":"basis.net","k.js":"basis.net.service","l.js":"basis.net.ajax","m.js":"basis.ua","n.js":"basis.net.action","o.js":"basis.router","p.js":"basis.app"},t,n={"d.js":function(e,t,n,r,i,s,o,u){function k(e,t){var n={},r;e&&e.length&&(r=n.inserted=e),t&&t.length&&(r=n.deleted=t);if(r)return n}function L(e,t){return function r(t){return t?t.__extend__?t:(typeof t!="string"&&!Array.isArray(t)&&(t=null),c(n.event.createHandler(t,e),{__extend__:r})):null}(t)}function A(e,t,n,r){return new S(c({keyGetter:t,itemClass:n,create:function(e,t){var n=S.prototype.create.call(this,e,t);return n.ruleValue=e,n.setDataset(new r({ruleValue:e})),n}},e))}function U(e,t){if(!e.length)return 0;var n=t.value,r=t.object.basisObjectId,i,s,o,u,a=0,f=e.length-1;do{o=a+f>>1,u=e[o],i=u.value;if(n<i)f=o-1;else if(n>i)a=o+1;else{s=u.object.basisObjectId;if(r<s)f=o-1;else{if(!(r>s))return o;a=o+1}}}while(a<=f);return o+(i==n?s<r:i<n)}function W(e,t){return+(e.value>t.value)||-(e.value<t.value)||e.object.basisObjectId-t.object.basisObjectId}function Z(e,t,n){var r=e.sourceMap_[t.basisObjectId];if(r&&r.visited!==n){for(var i=r;i=i.ref;)if(i.object===e.source)return!0;r.visited=n;for(var i=r;i=i.ref;)if(Z(e,i.object,n||{}))return!0}}function et(e,t,n){var r=e.sourceMap_,i=e.members_,s=y(t),o=[];for(var u=0;u<s.length;u++){var a=s[u],f=a.basisObjectId;f||(n=a.ref,a=a.object,f=a.basisObjectId);var l=r[f];if(l)l.ref={object:n,ref:l.ref};else{l=r[f]={source:a,ref:{object:n,ref:null},visited:null,value:null};if(a instanceof E){var c=e.rule(a)||null;if(c instanceof E||c instanceof x)l.value=c,s.push({object:c,ref:a});i[f]=l,o.push(a),e.ruleEvents&&a.addHandler(e.ruleEvents,e)}else{a.addHandler(Y,e);for(var h=0,p=a.getItems();h<p.length;h++)s.push({object:p[h],ref:a})}}}return o}function tt(e,t,n){var r=e.sourceMap_,i=e.members_,s=y(t),o=[];for(var u=0;u<s.length;u++){var a=s[u],f=a.basisObjectId;f||(n=a.ref,a=a.object,f=a.basisObjectId);var l=r[f],c=l.value;for(var h=l,p=l;h=h.ref;){if(h.object===n){p.ref=h.ref;break}p=h}if(!l.ref){if(a instanceof E)delete i[f],o.push(a),e.ruleEvents&&a.removeHandler(e.ruleEvents,e),c&&s.push({object:c,ref:a});else{a.removeHandler(Y,e);for(var d=0,v=a.getItems();d<v.length;d++)s.push({object:v[d],ref:a})}delete r[f]}else c&&!Z(e,a)&&(l.value=null,s.push({object:c,ref:a}))}return o}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.Class,l=f.oneFunctionProperty,c=n.object.extend,h=n.object.values,p=n.getter,d=n.fn.$self,v=n.fn.$true,m=n.fn.$false,g=n.fn.$undef,y=n.array.from,b=n.event.create,w=n.data.SUBSCRIPTION,E=n.data.Object,S=n.data.KeyObjectMap,x=n.data.ReadOnlyDataset,T=n.data.Dataset,N=n.data.DatasetWrapper,C=T.setAccumulateState;w.add("SOURCE",{sourceChanged:function(e,t){t&&w.unlink("source",e,t),e.source&&w.link("source",e,e.source)},sourcesChanged:function(e,t){var n;if(n=t.inserted)for(var r=0,i;i=n[r];r++)w.link("source",e,n[r]);if(n=t.deleted)for(var r=0,i;i=n[r];r++)w.unlink("source",e,n[r])}},function(e,t){var n=t.sources||(t.source?[t.source]:[]);for(var r=0,i;i=n[r++];)e("source",t,i)}),w.addProperty("minuend"),w.addProperty("subtrahend");var O={itemsChanged:function(e,t){var n=this.members_,r={},i,s;if(t.inserted)for(var o=0;i=t.inserted[o];o++)s=i.basisObjectId,n[s]?n[s].count++:n[s]={count:1,object:i},r[s]=n[s];if(t.deleted)for(var o=0;i=t.deleted[o];o++)s=i.basisObjectId,r[s]=n[s],n[s].count--;this.applyRule(r)}},M=f(x,{className:a+".Merge",subscribeTo:w.SOURCE,emit_sourcesChanged:b("sourcesChanged","delta"),sources:null,sourceValues_:null,sourcesMap_:null,sourceDelta_:null,rule:function(e,t){return e>0},emit_ruleChanged:b("ruleChanged","oldRule"),listen:{source:O,sourceValue:{destroy:function(e){this.removeSource(e)}}},init:function(){x.prototype.init.call(this);var e=this.sources;this.sources=[],this.sourcesMap_={},this.sourceValues_=[],e&&this.setSources(e)},setRule:function(e){e=p(e||M.UNION);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(e){var t=this.members_,n=this.rule,r=this.sources.length,i=[],s=[],o,u,a;e||(e=t);for(var f in e)o=t[f],u=r&&o.count&&n(o.count,r),u!=f in this.items_&&(u?i.push(o.object):s.push(o.object)),o.count==0&&delete t[f];return(a=k(i,s))&&this.emit_itemsChanged(a),a},addDataset_:function(e){this.sources.push(e),this.listen.source&&e.addHandler(this.listen.source,this);var t=this.members_;for(var n in e.items_)t[n]?t[n].count++:t[n]={count:1,object:e.items_[n]};return!0},removeDataset_:function(e){n.array.remove(this.sources,e),this.listen.source&&e.removeHandler(this.listen.source,this);var t=this.members_;for(var r in e.items_)t[r].count--},updateDataset_:function(e){var t=this.owner,r=t.sourcesMap_,i=n.data.resolveDataset(this,t.updateDataset_,e,"adapter"),s,o,u;if(this.dataset===i)return;if(i){var a=(r[i.basisObjectId]||0)+1;r[i.basisObjectId]=a,a==1&&(t.addDataset_(i),s=[i])}if(this.dataset){var a=(r[this.dataset.basisObjectId]||0)-1;r[this.dataset.basisObjectId]=a,a==0&&(t.removeDataset_(this.dataset),o=[this.dataset])}this.dataset=i,t.applyRule();if(u=k(s,o)){var f=t.sourceDelta_;f?(u.inserted&&u.inserted.forEach(function(e){n.array.remove(this.deleted,e)||n.array.add(this.inserted,e)},f),u.deleted&&u.deleted.forEach(function(e){n.array.remove(this.inserted,e)||n.array.add(this.deleted,e)},f)):t.emit_sourcesChanged(u)}return u},getSourceValues:function(){return this.sourceValues_.map(function(e){return e.source})},addSource:function(e){if(!e||typeof e!="object"&&typeof e!="function")return;if(this.hasSource(e))return;var t={owner:this,source:e,adapter:null,dataset:null};this.sourceValues_.push(t),this.updateDataset_.call(t,e),this.listen.sourceValue&&e instanceof n.event.Emitter&&e.addHandler(this.listen.sourceValue,this)},removeSource:function(e){for(var t=0,r;r=this.sourceValues_[t];t++)if(r.source===e){this.listen.sourceValue&&e instanceof n.event.Emitter&&e.removeHandler(this.listen.sourceValue,this),this.updateDataset_.call(r,null),this.sourceValues_.splice(t,1);return}},hasSource:function(e){for(var t=0,n;n=this.sourceValues_[t];t++)if(n.source===e)return!0;return!1},setSources:function(e){var t=this.sourceValues_.map(function(e){return e.source}),r=[],i=[],s;e||(e=[]),this.sourceDelta_={inserted:r,deleted:i};for(var o=0;o<e.length;o++){var u=e[o];n.array.remove(t,u)||this.addSource(u)}return t.forEach(this.removeSource,this),this.sourceDelta_=null,(s=k(r,i))&&this.emit_sourcesChanged(s),s},destroy:function(){this.setSources(),x.prototype.destroy.call(this),this.sourceValues_=null,this.sourcesMap_=null,this.sourceDelta_=null,this.sources=null}});M.UNION=M.prototype.rule,M.INTERSECTION=function(e,t){return e==t},M.DIFFERENCE=function(e,t){return e==1},M.MORE_THAN_ONE_INCLUDE=function(e,t){return t==1||e>1},M.AT_LEAST_ONE_EXCLUDE=function(e,t){return t==1||e<t};var _=function(e){return!this.has(e)},D={itemsChanged:function(e,t){if(!this.subtrahend)return;var n=k(t.inserted&&t.inserted.filter(_,this.subtrahend),t.deleted&&t.deleted.filter(this.has,this));n&&this.emit_itemsChanged(n)},destroy:function(){this.minuendAdapter_||this.setMinuend(null)}},P={itemsChanged:function(e,t){if(!this.minuend)return;var n=k(t.deleted&&t.deleted.filter(this.minuend.has,this.minuend),t.inserted&&t.inserted.filter(this.has,this));n&&this.emit_itemsChanged(n)},destroy:function(){this.subtrahendAdapter_||this.setSubtrahend(null)}},H=f(x,{className:a+".Subtract",subscribeTo:w.MINUEND+w.SUBTRAHEND,minuend:null,minuendAdapter_:null,emit_minuendChanged:b("minuendChanged","oldMinuend"),subtrahend:null,subtrahendAdapter_:null,emit_subtrahendChanged:b("subtrahendChanged","oldSubtrahend"),listen:{minuend:D,subtrahend:P},init:function(){x.prototype.init.call(this);var e=this.minuend,t=this.subtrahend;this.minuend=null,this.subtrahend=null,(e||t)&&this.setOperands(e,t)},setOperands:function(e,t){var r,i=!1;e=n.data.resolveDataset(this,this.setMinuend,e,"minuendAdapter_"),t=n.data.resolveDataset(this,this.setSubtrahend,t,"subtrahendAdapter_");var s=this.minuend,o=this.subtrahend;if(s!==e){i=!0,this.minuend=e;var u=this.listen.minuend;u&&(s&&s.removeHandler(u,this),e&&e.addHandler(u,this)),this.emit_minuendChanged(s)}if(o!==t){i=!0,this.subtrahend=t;var u=this.listen.subtrahend;u&&(o&&o.removeHandler(u,this),t&&t.addHandler(u,this)),this.emit_subtrahendChanged(o)}if(!i)return!1;if(!e||!t)this.itemCount&&this.emit_itemsChanged(r={deleted:this.getItems()});else{var a=[],f=[];for(var l in this.items_)(!e.items_[l]||t.items_[l])&&a.push(this.items_[l]);for(var l in e.items_)!this.items_[l]&&!t.items_[l]&&f.push(e.items_[l]);(r=k(f,a))&&this.emit_itemsChanged(r)}return r},setMinuend:function(e){return this.setOperands(e,this.subtrahendAdapter_?this.subtrahendAdapter_.source:this.subtrahend)},setSubtrahend:function(e){return this.setOperands(this.minuendAdapter_?this.minuendAdapter_.source:this.minuend,e)},destroy:function(){this.setOperands(),x.prototype.destroy.call(this)}}),B=f(x,{className:a+".SourceDataset",subscribeTo:w.SOURCE,source:null,emit_sourceChanged:b("sourceChanged","oldSource"),sourceAdapter_:null,sourceMap_:null,listen:{source:{destroy:function(){this.sourceAdapter_||this.setSource()}}},init:function(){this.sourceMap_={},x.prototype.init.call(this);var e=this.source;e&&(this.source=null,this.setSource(e))},setSource:function(e){e=n.data.resolveDataset(this,this.setSource,e,"sourceAdapter_");if(this.source!==e){var t=this.source,r=this.listen.source;this.source=e;if(r){var i=r.itemsChanged;C(!0),t&&(t.removeHandler(r,this),i&&i.call(this,t,{deleted:t.getItems()})),e&&(e.addHandler(r,this),i&&i.call(this,e,{inserted:e.getItems()})),C(!1)}this.emit_sourceChanged(t)}},destroy:function(){this.setSource(),x.prototype.destroy.call(this),this.sourceMap_=null}}),j=function(e){var t=this.map?this.map(e):object;if(t instanceof E==0||this.filter(t))t=null;var n=this.sourceMap_[e.basisObjectId],r=n.member;if(r!==t){var i=this.members_,s,o,u;n.member=t;if(r){var a=r.basisObjectId;this.removeMemberRef&&this.removeMemberRef(r,e),--i[a]==0&&(delete i[a],u=[r])}if(t){var f=t.basisObjectId;this.addMemberRef&&this.addMemberRef(t,e),i[f]?i[f]++:(i[f]=1,o=[t])}(s=k(o,u))&&this.emit_itemsChanged(s)}},F={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.members_,i=[],s=[],o,u,a,f=this.ruleEvents;C(!0);if(t.inserted)for(var l=0;o=t.inserted[l];l++){a=this.map?this.map(o):o;if(a instanceof E==0||this.filter(a))a=null;f&&o.addHandler(f,this),n[o.basisObjectId]={sourceObject:o,member:a};if(a){var c=a.basisObjectId;r[c]?r[c]++:(r[c]=1,i.push(a)),this.addMemberRef&&this.addMemberRef(a,o)}}if(t.deleted)for(var l=0;o=t.deleted[l];l++){u=o.basisObjectId,a=n[u].member,f&&o.removeHandler(f,this),delete n[u];if(a){var c=a.basisObjectId;--r[c]==0&&(delete r[c],s.push(a)),this.removeMemberRef&&this.removeMemberRef(a,o)}}C(!1),(t=k(i,s))&&this.emit_itemsChanged(t)}},I=f(B,{className:a+".MapFilter",map:d,filter:m,rule:p(v),emit_ruleChanged:b("ruleChanged","oldRule"),ruleEvents:L(j,"update"),addMemberRef:null,removeMemberRef:null,listen:{source:F},setMap:function(e){typeof e!="function"&&(e=d);if(this.map!==e)return this.map=e,this.applyRule()},setFilter:function(e){typeof e!="function"&&(e=m);if(this.filter!==e)return this.filter=e,this.applyRule()},setRule:function(e){e=p(e||v);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(){var e=this.sourceMap_,t=this.members_,n,r,i,s,o,u,a=[],f=[],l;for(var c in e){u=e[c],o=u.sourceObject,n=u.member,r=this.map?this.map(o):o;if(r instanceof E==0||this.filter(r))r=null;n!=r&&(u.member=r,n&&(i=n.basisObjectId,this.removeMemberRef&&this.removeMemberRef(n,o),t[i]--),r&&(s=r.basisObjectId,this.addMemberRef&&this.addMemberRef(r,o),s in t?t[s]++:(t[s]=1,a.push(r))))}for(i in this.items_)t[i]==0&&(delete t[i],f.push(this.items_[i]));return(l=k(a,f))&&this.emit_itemsChanged(l),l}}),q=f(I,{className:a+".Filter",filter:function(e){return!this.rule(e)}}),R=f(I,{className:a+".Split",subsetClass:x,subsetWrapperClass:N,keyMap:null,map:function(e){return this.keyMap.resolve(e)},rule:p(g),setRule:function(e){e=p(e||g);if(this.rule!==e){var t=this.rule;return this.rule=e,this.keyMap.keyGetter=e,this.emit_ruleChanged(t),this.applyRule()}},addMemberRef:function(e,t){e.dataset.emit_itemsChanged({inserted:[t]})},removeMemberRef:function(e,t){e.dataset.emit_itemsChanged({deleted:[t]})},init:function(){if(!this.keyMap||this.keyMap instanceof S==0)this.keyMap=A(this.keyMap,this.rule,this.subsetWrapperClass,this.subsetClass);I.prototype.init.call(this)},getSubset:function(e,t){return this.keyMap.get(e,t)},destroy:function(){I.prototype.destroy.call(this),this.keyMap.destroy(),this.keyMap=null}}),z=function(e){var t=this.sourceMap_[e.basisObjectId],n=this.rule(e),r=this.index_;if(n!==t.value){var i=U(r,t),s=r[i-1],o=r[i+1];t.value=n;if(s&&(s.value>n||s.value==n&&s.object.basisObjectId>t.object.basisObjectId)||o&&(o.value<n||o.value==n&&o.object.basisObjectId<t.object.basisObjectId))r.splice(i,1),r.splice(U(r,t),0,t),this.applyRule()}},X={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.index_,i=this.ruleEvents,s=!1,o=!1,u,a=t.inserted,f=t.deleted;if(f){f.length>r.length-f.length&&(s=!0,o=f.length!=r.length,r.length=0);for(var l=0,c;c=f[l];l++)s||(u=n[c.basisObjectId],r.splice(U(r,u),1)),delete n[c.basisObjectId],i&&c.removeHandler(i,this);if(o)for(var h in n)u=n[h],r.splice(U(r,u),0,u)}if(a){o=!r.length;for(var l=0,c;c=a[l];l++)u={object:c,value:this.rule(c)},n[c.basisObjectId]=u,o?r.push(u):r.splice(U(r,u),0,u),i&&c.addHandler(i,this);o&&r.sort(W)}this.applyRule()}},V=f(B,{className:a+".Slice",rule:p(v),emit_ruleChanged:b("ruleChanged","oldRule","oldOrderDesc"),ruleEvents:L(z,"update"),index_:null,orderDesc:!1,offset:0,limit:10,listen:{source:X},emit_rangeChanged:b("rangeChanged","oldOffset","oldLimit"),init:function(){this.index_=[],B.prototype.init.call(this)},setRange:function(e,t){var n=this.offset,r=this.limit,i=!1;if(n!=e||r!=t)this.offset=e,this.limit=t,i=this.applyRule(),this.emit_rangeChanged(n,r);return i},setOffset:function(e){return this.setRange(e,this.limit)},setLimit:function(e){return this.setRange(this.offset,e)},setRule:function(e,t){e=p(e||v),t=!!t;if(this.rule!=e||this.orderDesc!=t){var n=this.rule,r=this.orderDesc;if(this.rule!=e){var i=this.index_;for(var s=0;s<i.length;s++)i[s].value=e(i[s].object);i.sort(W),this.rule=e}return this.orderDesc=t,this.rule=e,this.emit_ruleChanged(n,r),this.applyRule()}},applyRule:function(){var e=this.offset,t=e+this.limit;this.orderDesc&&(e=this.index_.length-t,t=e+this.limit);var r=n.object.slice(this.members_),i=this.index_.slice(Math.max(0,e),Math.max(0,t)),s=[],o;for(var u=0,a;a=i[u];u++){var f=a.object.basisObjectId;r[f]?delete r[f]:(s.push(a.object),this.members_[f]=a.object)}for(var f in r)delete this.members_[f];return(o=k(s,h(r)))&&this.emit_itemsChanged(o),o},destroy:function(){B.prototype.destroy.call(this),this.index_=null}}),$=function(e){var t=this.sourceMap_,n=this.members_,r=e.basisObjectId,i=t[r].list,s=t[r].list={},o=this.rule(e),u,a=[],f=[],l;if(Array.isArray(o))for(var c=0;c<o.length;c++)l=this.keyMap.get(o[c],!0),l&&!l.has(e)&&(h=l.basisObjectId,s[h]=l,i[h]||(l.dataset.emit_itemsChanged({inserted:[e]}),n[h]?n[h]++:(a.push(l),n[h]=1)));for(var h in i)if(!s[h]){var l=i[h];l.dataset.emit_itemsChanged({deleted:[e]}),--n[h]||(delete n[h],f.push(l))}(u=k(a,f))&&this.emit_itemsChanged(u)},J={itemsChanged:function(e,t){var n=this.sourceMap_,r=this.members_,i=this.ruleEvents,s,o,u,a=[],f=[];C(!0);if(s=t.inserted)for(var l=0,c;c=s[l];l++){var h=this.rule(c),p={object:c,list:{}};n[c.basisObjectId]=p;if(Array.isArray(h))for(var d=0,v={};d<h.length;d++)o=this.keyMap.get(h[d],!0),o&&!v[o.basisObjectId]&&(u=o.basisObjectId,v[u]=!0,p.list[u]=o,o.dataset.emit_itemsChanged({inserted:[c]}),r[u]?r[u]++:(a.push(o),r[u]=1));i&&c.addHandler(i,this)}if(s=t.deleted)for(var l=0,c;c=s[l];l++){var m=c.basisObjectId,h=n[m].list;delete n[m];for(var u in h)o=h[u],o.dataset.emit_itemsChanged({deleted:[c]}),--r[u]||(delete r[u],f.push(o));i&&c.removeHandler(i,this)}C(!1),(t=k(a,f))&&this.emit_itemsChanged(t)}},K=f(B,{className:a+".Cloud",subsetClass:x,subsetWrapperClass:N,rule:p(g),ruleEvents:L($,"update"),keyMap:null,map:d,listen:{source:J},init:function(){if(!this.keyMap||this.keyMap instanceof S==0)this.keyMap=A(this.keyMap,this.rule,this.subsetWrapperClass,this.subsetClass);B.prototype.init.call(this)},getSubset:function(e,t){return this.keyMap.get(e,t)},destroy:function(){B.prototype.destroy.call(this),this.keyMap.destroy(),this.keyMap=null}}),Q=function(e){var t=this.sourceMap_[e.basisObjectId],n=this.rule(e)||null,r=t.value,i,s,o;if(n===r)return;if(n instanceof E||n instanceof x)i=et(this,n,e);r&&(s=tt(this,r,e)),t.value=n,(o=k(i,s))&&this.emit_itemsChanged(o)},G=function(e,t){var n=t.inserted,r=t.deleted,t;n&&(n=et(this,n,e)),r&&(r=tt(this,r,e)),(t=k(n,r))&&this.emit_itemsChanged(t)},Y={itemsChanged:G,destroy:function(e){var t=this.sourceMap_;for(var n=t[e.basisObjectId];n=n.ref;)t[n.object.basisObjectId].value=null;delete t[e.basisObjectId]}},nt=B.subclass({className:a+".Extract",rule:p(g),emit_ruleChanged:b("ruleChanged","oldRule"),ruleEvents:L(Q,"update"),listen:{source:{itemsChanged:G}},setRule:function(e){e=p(e||g);if(this.rule!==e){var t=this.rule;return this.rule=e,this.emit_ruleChanged(t),this.applyRule()}},applyRule:function(){var e={},t={},n,r;for(var i in this.sourceMap_){var s=this.sourceMap_[i],o=s.source;if(o instanceof E){var u=this.rule(o)||null,a=s.value;if(u===a)continue;if(u instanceof E||u instanceof x){var f=et(this,u,o);for(var l=0;l<f.length;l++){var c=f[l],p=c.basisObjectId;t[p]?delete t[p]:e[p]=c}}if(a){var d=tt(this,a,o);for(var l=0;l<d.length;l++){var c=d[l],p=c.basisObjectId;e[p]?delete e[p]:t[p]=c}}s.value=u}}return(r=k(h(e),h(t)))&&this.emit_itemsChanged(r),r}});t.exports={getDelta:k,createRuleEvents:L,Merge:M,Subtract:H,SourceDataset:B,MapFilter:I,Filter:q,Split:R,Extract:nt,Slice:V,Cloud:K}},"0.js":function(e,t,n,r,i,s,o,u){n.require("./1.js"),n.require("./a.js"),n.require("./d.js"),n.require("./e.js"),n.require("./f.js"),n.require("./g.js"),n.require("./h.js"),n.require("./i.js"),n.require("./k.js"),n.require("./n.js"),n.require("./o.js"),n.require("./p.js"),r.basis=n},"2.js":function(e,t,n,r,i,s,o,u){function h(e){var t=[];for(var n in e)c.call(e,n)&&t.push(n);return t}function b(e){if(e.charAt(0)=="#")return p[parseInt(e.substr(1),36)];var t=e.match(/^(.+?)@(.+)$/);if(t)return N(n.path.resolve(t[2])).token(t[1])}function x(e,t,n,r){var i=e.cultureValues[t];r=r?r+".":"";for(var s in n)if(c.call(n,s)){var o=r+s,u=n[s];i[o]=u,u&&(typeof u=="object"||Array.isArray(u))&&x(e,t,u,o)}}function N(e){var t;if(typeof e=="string"){var r=e,i=n.path.extname(r);i!=".l10n"&&(r=n.path.dirname(r)+"/"+n.path.basename(r,i)+".l10n"),e=n.resource(r)}return n.resource.isResource(e)&&(t=E[e.url]),t||new T(e)}function C(){return w.slice(0)}function P(e,t){return e&&!A[e]&&(A[e]=new D(e,t)),A[e||L]}function H(){return L}function B(e){if(!e)return;if(L!=e){if(k.indexOf(e)==-1)return;L=e;for(var t=0,r;r=w[t];t++)r.syncValues();n.Token.prototype.set.call(P,e)}}function j(){return k.slice(0)}function F(e){typeof e=="string"&&(e=e.trim().split(" "));if(!e.length)return;var t={},r,i;O={};for(var s=0,o,u;o=e[s];s++)r=o.split("/"),r.length>2&&(r=r.slice(0,2)),u=r[0],i||(i=u),t[u]=P(u),O[u]=r;for(var u in O)O[u]=n.array.flatten(O[u].map(function(e){return O[e]})).concat(i).filter(function(e,t,n){return!t||n.lastIndexOf(e,t-1)==-1});k=n.object.keys(t),L in t==0&&B(i)}function I(e,t,n){P.attach(e,t),n&&e.call(t,L)}n.require("./3.js");var a=this.path,f=n.Class,l=n.event.Emitter,c=Object.prototype.hasOwnProperty;n.resource.extensions[".l10n"]=function(e,t){return N(t).update(n.resource.extensions[".json"](e,t))};var p=[],d={},v={},m=n.Token.prototype.set,g=f(n.Token,{className:a+".ComputeToken",init:function(e,t){t.computeTokens[this.basisObjectId]=this,this.token=t,n.Token.prototype.init.call(this,e)},get:function(){var e=this.token.type=="plural"?A[L].plural(this.value):this.value;return this.token.dictionary.getValue(this.token.name+"."+e)},toString:function(){return this.get()},destroy:function(){delete this.token.computeTokens[this.basisObjectId],this.token=null,n.Token.prototype.destroy.call(this)}}),y=f(n.Token,{className:a+".Token",index:NaN,dictionary:null,name:"",type:"default",computeTokens:null,init:function(e,t,r,i){n.Token.prototype.init.call(this,i),this.index=p.push(this)-1,this.name=t,this.dictionary=e,this.computeTokens={},r?this.setType(r):this.apply()},toString:function(){return this.get()},apply:function(){for(var e in this.computeTokens)this.computeTokens[e].apply();n.Token.prototype.apply.call(this)},set:function(){},setType:function(e){e!="plural"&&(!n.l10n.enableMarkup||e!="markup")&&(e="default"),this.type!=e&&(this.type=e,this.apply())},compute:function(e,t){arguments.length==1&&(t=e,e=""),t=n.getter(t),e=String(e).trim().split(/\s+|\s*,\s*/).sort();var r=this.basisObjectId,i=e.concat(r,t[n.getter.ID]).join("_");if(d[i])return d[i];var s=this,o={},u=function(e){m.call(this,t(e))},a={destroy:function(e){delete o[e.basisObjectId],this.destroy()}};for(var f=0,c;c=e[f];f++)c!="destroy"&&(a[c]=u);return d[i]=function(e){if(e instanceof l==0)throw 3;var n=e.basisObjectId,r=o[n];return r||(r=o[n]=new g(t(e),s),e.addHandler(a,r)),r}},computeToken:function(e){return new g(e,this)},token:function(e){this.type=="plural"&&(e=A[L].plural(e));if(this.dictionary)return this.dictionary.token(this.name+"."+e)},destroy:function(){for(var e in this.computeTokens)this.computeTokens[e].destroy();this.computeTokens=null,this.value=null,n.Token.prototype.destroy.call(this)}}),w=[],E={},S=new n.Token,T=f(null,{className:a+".Dictionary",tokens:null,types:null,cultureValues:null,index:NaN,resource:null,init:function(e){this.tokens={},this.types={},this.cultureValues={},this.index=w.push(this)-1;if(n.resource.isResource(e)){var t=e;this.resource=t,E[t.url]||(E[t.url]=this,S.set(t.url)),t.fetch()}else this.update(e||{})},update:function(e){e||(e={}),this.cultureValues={};for(var t in e)/^_|_$/.test(t)||(this.cultureValues[t]={},x(this,t,e[t]));this.types=e._meta&&e._meta.type||{};for(var n in this.tokens)this.tokens[n].setType(this.types[n]);return this.syncValues(),this},syncValues:function(){for(var e in this.tokens)m.call(this.tokens[e],this.getValue(e))},getValue:function(e){var t=O[L]||[];for(var n=0,r;r=t[n];n++){var i=this.cultureValues[r];if(i&&e in i)return i[e]}},getCultureValue:function(e,t){return this.cultureValues[e]&&this.cultureValues[e][t]},token:function(e){var t=this.tokens[e];return t||(t=this.tokens[e]=new y(this,e,this.types[e],this.getValue(e))),t},destroy:function(){this.tokens=null,this.cultureValues=null,n.array.remove(w,this),this.resource&&(delete E[this.resource.url],this.resource=null)}}),k=[],L=null,A={},O={},M={},_=[[1,function(e){return 0}],[2,function(e){return e==1||e%10==1?0:1}],[2,function(e){return e==0?0:1}],[2,function(e){return e==1?0:1}],[2,function(e){return e==0||e==1?0:1}],[2,function(e){return e%10!=1||e%100==11?1:0}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e!=0?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==0?0:e==1?1:2}],[3,function(e){return e==1?0:e==0||e%100>0&&e%100<20?1:2}],[3,function(e){return e==1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2}],[3,function(e){return e==1?0:e>=2&&e<=4?1:2}],[4,function(e){return e==1?0:e==2?1:e!=8&&e!=11?2:3}],[4,function(e){return e==1?0:e==2?1:e==3?2:3}],[4,function(e){return e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0}],[4,function(e){return e==1?0:e==0||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3}],[4,function(e){return e==1||e==11?0:e==2||e==12?1:e>2&&e<20?2:3}],[5,function(e){return e==1?0:e==2?1:e<7?2:e<11?3:4}],[6,function(e){return e==0?0:e==1?1:e==2?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5}]];["ay bo cgg dz fa id ja jbo ka kk km ko ky lo ms my sah su th tt ug vi wo zh","mk","jv","af an ast az bg bn brx ca da de doi el en eo es es-AR et eu ff fi fo fur fy gl gu ha he hi hne hu hy ia it kn ku lb mai ml mn mni mr nah nap nb ne nl nn no nso or pa pap pms ps pt rm rw sat sco sd se si so son sq sv sw ta te tk ur yo","ach ak am arn br fil fr gun ln mfe mg mi oc pt-BR tg ti tr uz wa zh","is","csb","lv","lt","be bs hr ru sr uk","mnk","ro","pl","cs sk","cy","kw","sl","mt","gd","ga","ar"].forEach(function(e,t){e.split(" ").forEach(function(e){M[e]=this},_[t])});var D=n.Class(null,{className:a+".Culture",name:"",pluralForm:null,init:function(e,t){this.name=e,A[e]||(A[e]=this),this.pluralForm=t||M[e]||M[e.split("-")[0]]||_[0]},plural:function(e){return Number(this.pluralForm[1](Math.abs(parseInt(e,10))))}});n.object.extend(P,new n.Token),P.set=B,F("en-US"),B("en-US"),t.exports={ComputeToken:g,Token:y,token:b,Dictionary:T,dictionary:N,getDictionaries:C,addCreateDictionaryHandler:S.attach.bind(S),removeCreateDictionaryHandler:S.detach.bind(S),Culture:D,culture:P,getCulture:H,setCulture:B,getCultureList:j,setCultureList:F,pluralForms:_,onCultureChange:I}},"3.js":function(e,t,n,r,i,s,o,u){function v(e){var t=p[e];return t||(t=function(){var t=this,n,r;while(t=t.handler){r=t.callbacks[e];if(typeof r=="function"){if(!n){n=[this];for(var i=0;i<arguments.length;i++)n.push(arguments[i])}r.apply(t.context||this,n)}r=t.callbacks["*"];if(typeof r=="function"){if(!n){n=[this];for(var i=0;i<arguments.length;i++)n.push(arguments[i])}r.call(t.context||this,{sender:this,type:e,args:n})}}},p[e]=t),t}function m(e,t){var n={events:[]};if(e){e=String(e).trim().split(/\s+|\s*,\s*/).sort(),n={events:e};for(var r=0,i;i=e[r];r++)i!="destroy"&&(n[i]=t)}return n}var a=this.path,f=n.Class,l=n.object.extend,c=Array.prototype.slice,h={},p={},d=function(){},g=f(null,{className:a+".Emitter",extendConstructor_:!0,handler:null,emit_destroy:v("destroy"),listen:f.nestedExtendProperty(),init:function(){this.handler&&!this.handler.callbacks&&(this.handler={callbacks:this.handler,context:this,handler:null})},addHandler:function(e,t){t=t||this,this.handler={callbacks:e,context:t,handler:this.handler}},removeHandler:function(e,t){var n=this,r;t=t||this;while(r=n,n=n.handler)if(n.callbacks===e&&n.context===t){n.callbacks=h,r.handler=n.handler;return}},destroy:function(){this.destroy=d,this.emit_destroy(),this.handler=null}});t.exports={create:v,createHandler:m,events:p,Emitter:g}},"4.js":function(e,t,n,r,i,s,o,u){function T(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function N(e){var t=x[e];if(!t){var n=[],r={},i=1;t=x[e]={actions:n,handler:r};while(e){if(e&1){var s=w[i];n.push(s.action);for(var o in s.handler)r[o]=r[o]?T(r[o],s.handler[o]):s.handler[o]}i<<=1,e>>=1}}return t}function C(e,t){var n=N(t);for(var r=0,i;i=n.actions[r];r++)i(S.link,e);e.addHandler(n.handler)}function k(e,t){var n=N(t);for(var r=0,i;i=n.actions[r++];)i(S.unlink,e);e.removeHandler(n.handler)}function I(e,t){while(t&&t!==e&&t!==t.delegate)t=t.delegate;return t===e}function q(e,t,n){var r=e.delegate;r&&(e.root=r.root,e.target=r.target,e.data=r.data,e.state=r.state);if(e.root!==t){var i=e.listen.root;i&&(t&&t!==e&&t.removeHandler(i,e),e.root&&e.root!==e&&e.root.addHandler(i,e)),e.emit_rootChanged(t)}if(e.target!==n){var s=e.listen.target;s&&(n&&n!==e&&n.removeHandler(s,e),e.target&&e.target!==e&&e.target.addHandler(s,e)),e.emit_targetChanged(n)}var o=e.delegates_;while(o)o.delegate&&q(o.delegate,t,n),o=o.next}function X(e,t){var n={},r;e&&e.length&&(r=n.inserted=e),t&&t.length&&(r=n.deleted=t);if(r)return n}function V(e,t){if(!e||!e.itemCount){if(t&&t.itemCount)return{inserted:t.getItems()}}else{if(!!t&&!!t.itemCount){var n=[],r=[];for(var i in e.items_){var s=e.items_[i];s.basisObjectId in t.items_==0&&r.push(s)}for(var i in t.items_){var s=t.items_[i];s.basisObjectId in e.items_==0&&n.push(s)}return X(n,r)}if(e.itemCount)return{deleted:e.getItems()}}}function tt(e,t,n,r){var i=e[r]||null,s=null;return typeof n=="function"&&(n=n.call(e,e)),n&&(n instanceof $?(s=new Q(e,t,n,Z),n=n.dataset):n instanceof H?(s=new Q(e,t,n,et),n=tt(s,s.proxy,n.value,"next")):n.bindingBridge&&(s=new G(e,t,n,Y),n=tt(s,s.proxy,n.value,"next"))),n instanceof J==0&&(n=null),r&&i!==s&&(i&&(i.detach(),i.next&&tt(i,null,null,"next")),s&&s.attach(),e[r]=s),n}function nt(e,t,n,r){var i=e[r]||null,s=null;return typeof n=="function"&&(n=n.call(e,e)),n&&(n instanceof H?(s=new Q(e,t,n,et),n=nt(s,s.proxy,n.value,"next")):n.bindingBridge&&(s=new G(e,t,n,Y),n=nt(s,s.proxy,n.value,"next"))),n instanceof R==0&&(n=null),r&&i!==s&&(i&&(i.detach(),i.next&&nt(i,null,null,"next")),s&&s.attach(),e[r]=s),n}function rt(e){return Array.isArray(e)?e.map(function(e){return{data:e}}):{data:e}}function it(e){if(!e||e.constructor!==Object)e={value:e};return new R({data:e})}function st(e,t){var n=t?it:rt;return Array.isArray(e)?e.map(n):n(e)}n.require("./3.js");var a=this.path,f=n.Class,l=Array.prototype.slice,c=n.object.values,h=n.fn.$self,p=n.event.Emitter,d=n.event.create,v=n.event.events,m={},g=[],y={},b={priority:[],values:{},add:function(e,t){var n=e,r=e.toLowerCase();b[n]=r,y[r]=n,this.values[r]=n,t?t=this.priority.indexOf(t):t=-1,t==-1?this.priority.push(r):this.priority.splice(t,0,r)},getList:function(){return c(y)}};b.add("READY"),b.add("DEPRECATED"),b.add("UNDEFINED"),b.add("ERROR"),b.add("PROCESSING");var w={},E=1,S={NONE:0,ALL:0,link:function(e,t,n){var r=e+t.basisObjectId,i=n.subscribers_;i||(i=n.subscribers_={});if(!i[r]){i[r]=t;var s=n.subscriberCount+=1;s==1&&n.emit_subscribersChanged(1)}},unlink:function(e,t,n){var r=e+t.basisObjectId,i=n.subscribers_;if(i&&i[r]){delete i[r];var s=n.subscriberCount-=1;s==0&&(n.emit_subscribersChanged(-1),n.subscribers_=null)}},add:function(e,t,n){w[E]={handler:t,action:n},S[e]=E,S.ALL|=E,E<<=1},addProperty:function(e,t){var n={};n[t||e+"Changed"]=function(t,n){n instanceof L&&S.unlink(e,t,n),t[e]instanceof L&&S.link(e,t,t[e])},this.add(e.toUpperCase(),n,function(t,n){n[e]&&t(e,n,n[e])})}},x={};S.addProperty("delegate"),S.addProperty("target"),S.addProperty("dataset"),S.addProperty("value","change");var L=f(p,{className:a+".AbstractData",state:b.UNDEFINED,emit_stateChanged:d("stateChanged","oldState"),active:!1,emit_activeChanged:d("activeChanged"),subscribeTo:S.NONE,subscriberCount:0,subscribers_:null,emit_subscribersChanged:d("subscribersChanged","delta"),syncEvents:f.oneFunctionProperty(function(){this.isSyncRequired()&&this.syncAction()},{stateChanged:!0,subscribersChanged:!0}),syncAction:null,init:function(){p.prototype.init.call(this),this.active&&this.addHandler(N(this.subscribeTo).handler);var e=this.syncAction;e&&(this.syncAction=null,this.setSyncAction(e))},setState:function(e,t){var n=String(e);if(!y[n])throw 4;if(this.state!=n||this.state.data!=t){var r=this.state;return this.state=Object(n),this.state.data=t,this.emit_stateChanged(r),!0}return!1},deprecate:function(){this.state!=b.PROCESSING&&this.setState(b.DEPRECATED)},setActive:function(e){return e=!!e,this.active!=e?(this.active=e,this.emit_activeChanged(),e?C(this,this.subscribeTo):k(this,this.subscribeTo),!0):!1},setSubscription:function(e){var t=this.subscribeTo,n=e&S.ALL,r=t^n;if(r){this.subscribeTo=n;if(this.active){var i=N(t),s=N(n);this.removeHandler(i.handler),this.addHandler(s.handler);var o=1;while(r){if(r&1){var u=w[o];t&o?u.action(S.unlink,this):u.action(S.link,this)}o<<=1,r>>=1}}return!0}return!1},isSyncRequired:function(){return this.subscriberCount>0&&(this.state==b.UNDEFINED||this.state==b.DEPRECATED)},setSyncAction:function(e){var t=this.syncAction;typeof e!="function"&&(e=null),this.syncAction=e,e?(t||this.addHandler(this.syncEvents),this.isSyncRequired()&&this.syncAction()):t&&this.removeHandler(this.syncEvents)},destroy:function(){p.prototype.destroy.call(this);if(this.active){var e=N(this.subscribeTo);for(var t=0,n;n=e.actions[t];t++)n(S.unlink,this)}this.state=b.UNDEFINED}}),A=n.getter.ID,O={destroy:function(e){this.value.unlink(e,this.fn)}},M={destroy:function(e){this.set(null)}},_={},D={},P=function(e){this.set(this.fn(e))},H=f(L,{className:a+".Value",subscribeTo:S.VALUE,emit_change:d("change","oldValue")&&function(e){v.change.call(this,e);var t=this;while(t=t.links_)t.fn.call(t.context,this.value,e)},value:null,initValue:null,proxy:null,locked:0,lockedValue_:null,links_:null,setNullOnEmitterDestroy:!0,bindingBridge:{attach:function(e,t,n){e.link(n,t,!0)},detach:function(e,t,n){e.unlink(n,t)},get:function(e){return e.value}},init:function(){L.prototype.init.call(this),this.proxy&&(this.value=this.proxy(this.value)),this.setNullOnEmitterDestroy&&this.value instanceof p&&this.value.addHandler(M,this),this.initValue=this.value},set:function(e){var t=this.value,n=this.proxy?this.proxy(e):e,r=n!==t;return r&&(this.setNullOnEmitterDestroy&&(t instanceof p&&t.removeHandler(M,this),n instanceof p&&n.addHandler(M,this)),this.value=n,this.locked||this.emit_change(t)),r},reset:function(){this.set(this.initValue)},isLocked:function(){return this.locked>0},lock:function(){this.locked++,this.locked==1&&(this.lockedValue_=this.value)},unlock:function(){if(this.locked){this.locked--;if(!this.locked){var e=this.lockedValue_;this.lockedValue_=null,this.value!==e&&this.emit_change(e)}}},compute:function(e,t){t||(t=e,e=null),t||(t=h);var r=this,i=n.event.createHandler(e,function(e){this.set(t(e,r.value))}),s=t[A]||String(t),o=i.events.concat(s,this.basisObjectId).join("_"),u=_[o];if(!u){var a={};i.destroy=function(e){delete a[e.basisObjectId],this.destroy()},this.addHandler({change:function(){for(var e in a){var n=a[e];n.token.set(t(n.object,this.value))}},destroy:function(){for(var e in a){var t=a[e];t.object.removeHandler(i,t.token),t.token.destroy()}a=null,r=null}}),u=_[o]=function(e){var s=e.basisObjectId,o=a[s],u=t(e,r.value);if(!o){var f=new n.Token(u);e.addHandler(i,f),o=a[s]={token:f,object:e}}else o.token.set(u);return o.token},u.deferred=function(){return function(e){return u(e).deferred()}}}return u},as:function(e,t){e||(e=h);if(this.links_){var r=this,i=e[A]||String(e);while(r=r.links_){var s=r.context;if(s instanceof n.Token&&(s.fn[A]||String(s.fn))==i)return t?s.deferred():s}}var o=new n.Token;return o.fn=e,this.link(o,P),t?o.deferred():o},deferred:function(e){return this.as(e,!0)},link:function(e,t,n){if(typeof t!="function"){var r=String(t);t=D[r],t||(t=D[r]=function(e){this[r]=e})}return this.links_={value:this,context:e,fn:t,links_:this.links_},e instanceof p&&e.addHandler(O,this.links_),n||t.call(e,this.value),e},unlink:function(e,t){var r=this,i;while(i=r,r=r.links_)r.context===e&&(!t||r.fn===t)&&(r.fn=n.fn.$undef,i.links_=r.links_,r.context instanceof p&&r.context.removeHandler(O,r))},destroy:function(){L.prototype.destroy.call(this),this.setNullOnEmitterDestroy&&this.value instanceof p&&this.value.removeHandler(M,this);var e=this;while(e=e.links_)e.context instanceof p&&e.context.removeHandler(O,e);this.proxy=null,this.initValue=null,this.value=null,this.lockedValue_=null,this.links_=null}}),B={},j=function(e){H.prototype.set.call(this,e)};H.from=function(e,t,r){var i;if(!e)return null;if(e instanceof p){r||(r=t,t=null),r||(r=h);var s=n.event.createHandler(t,j),o=r[A]||String(r),u=s.events.concat(o,e.basisObjectId).join("_");i=B[u],i||(i=B[u]=new H({value:e,proxy:n.getter(r),set:n.fn.$undef,handler:{destroy:function(){B[u]=null,e.removeHandler(s,this)}}}),s.destroy=function(e){B[u]=null,this.destroy()},e.addHandler(s,i))}if(!i){var u=e.basisObjectId,a=e.bindingBridge;u&&a&&(i=B[u],i||(i=B[u]=new H({value:a.get(e)}),a.attach(e,i.set,i)))}if(!i)throw 5;return i},H.factory=function(e,t){return function(n){return H.from(n,e,t)}};var F={},R=f(L,{className:a+".Object",subscribeTo:S.DELEGATE+S.TARGET,data:null,emit_update:d("update","delta")&&function(e){var t=this.delegates_;v.update.call(this,e);while(t)t.delegate&&t.delegate.emit_update(e),t=t.next},emit_stateChanged:function(e){var t=this.delegates_;L.prototype.emit_stateChanged.call(this,e);while(t)t.delegate&&(t.delegate.state=this.state,t.delegate.emit_stateChanged(e)),t=t.next},delegate:null,delegateAdapter_:null,delegates_:null,emit_delegateChanged:d("delegateChanged","oldDelegate"),target:null,emit_targetChanged:d("targetChanged","oldTarget"),root:null,emit_rootChanged:d("rootChanged","oldRoot"),init:function(){this.root=this,L.prototype.init.call(this);var e=this.delegate,t=this.data;e?(this.delegate=null,this.target=null,this.data=F,this.setDelegate(e),this.data===F&&(this.data=t||{})):(t||(this.data={}),this.target!==null&&(this.target=this))},setDelegate:function(e){e=nt(this,this.setDelegate,e,"delegateAdapter_");if(e&&e instanceof R){if(e.delegate&&I(this,e))return!1}else e=null;if(this.delegate!==e){var t=this.state,n=this.data,r=this.delegate,i=this.target,s=this.root,o=this.listen.delegate,u=!1,a;if(r){o&&r.removeHandler(o,this);var f=r.delegates_,l=r;while(f){if(f.delegate===this){f.delegate=null,l===r?r.delegates_=f.next:l.next=f.next;break}l=f,f=f.next}}if(e){this.delegate=e,o&&e.addHandler(o,this),e.delegates_={delegate:this,next:e.delegates_};if(this.data!==F){a={};for(var c in e.data)c in n==0&&(u=!0,a[c]=undefined);for(var c in n)n[c]!==e.data[c]&&(u=!0,a[c]=n[c])}}else{this.delegate=null,this.target=null,this.root=this,this.data={};for(var c in n)this.data[c]=n[c]}return q(this,s,i),u&&this.emit_update(a),a&&t!==this.state&&(String(t)!=this.state||t.data!==this.state.data)&&this.emit_stateChanged(t),this.emit_delegateChanged(r),!0}return!1},setState:function(e,t){return this.delegate?this.root.setState(e,t):L.prototype.setState.call(this,e,t)},update:function(e){if(this.delegate)return this.root.update(e);if(e){var t={},n=!1;for(var r in e)this.data[r]!==e[r]&&(n=!0,t[r]=this.data[r],this.data[r]=e[r]);if(n)return this.emit_update(t),t}return!1},destroy:function(){L.prototype.destroy.call(this);var e=this.delegates_;this.delegates_=null;while(e)e.delegate.setDelegate(),e=e.next;this.delegate&&this.setDelegate(),this.data=m,this.root=null,this.target=null}}),U=f(R,{className:a+".Slot"}),z={destroy:function(){delete this.map[this.id]}},W=f(L,{className:a+".KeyObjectMap",itemClass:R,keyGetter:h,autoDestroyMembers:!0,map_:null,extendConstructor_:!0,init:function(){this.map_={},L.prototype.init.call(this)},resolve:function(e){return this.get(this.keyGetter(e),e)},create:function(e,t){var n;return e instanceof R?n={delegate:e}:n={data:{id:e,title:e}},new this.itemClass(n)},get:function(e,t){var n=e instanceof R?e.basisObjectId:e,r=this.map_[n];!r&&t&&(r=this.map_[n]={map:this.map_,id:n,item:this.create(e,t)},r.item.addHandler(z,r));if(r)return r.item},destroy:function(){L.prototype.destroy.call(this);var e=this.map_;this.map_=null;for(var t in e){var n=e[t];this.autoDestroyMembers?n.item.destroy():n.item.removeHandler(z,n)}}}),$=f(R,{className:a+".DatasetWrapper",subscribeTo:R.prototype.subscribeTo+S.DATASET,listen:{dataset:{itemsChanged:function(e,t){this.itemCount=e.itemCount,this.emit_itemsChanged(t)},destroy:function(){this.setDataset()}}},dataset:null,datasetAdapter_:null,emit_datasetChanged:d("datasetChanged","oldDataset"),emit_itemsChanged:d("itemsChanged","delta"),init:function(){R.prototype.init.call(this);var e=this.dataset;e&&(this.dataset=null,this.setDataset(e))},setDataset:function(e){e=tt(this,this.setDataset,e,"datasetAdapter_");if(this.dataset!==e){var t=this.listen.dataset,n=this.dataset,r;t&&(n&&n.removeHandler(t,this),e&&e.addHandler(t,this)),this.itemCount=e?e.itemCount:0,(r=V(n,e))&&this.emit_itemsChanged(r),this.dataset=e,this.emit_datasetChanged(n)}},has:function(e){return this.dataset?this.dataset.has(e):null},getItems:function(){return this.dataset?this.dataset.getItems():[]},pick:function(){return this.dataset?this.dataset.pick():null},top:function(e){return this.dataset?this.dataset.top(e):[]},forEach:function(e){if(this.dataset)return this.dataset.forEach(e)},destroy:function(){(this.dataset||this.datasetAdapter_)&&this.setDataset(),R.prototype.destroy.call(this)}}),J=f(L,{className:a+".ReadOnlyDataset",itemCount:0,items_:null,members_:null,cache_:null,emit_itemsChanged:d("itemsChanged","delta")&&function(e){var t,n=0,r=0,i;if(t=e.inserted)while(i=t[n])this.items_[i.basisObjectId]=i,n++;if(t=e.deleted)while(i=t[r])delete this.items_[i.basisObjectId],r++;this.itemCount+=n-r,this.cache_=n==this.itemCount?e.inserted:null,v.itemsChanged.call(this,e)},init:function(){L.prototype.init.call(this),this.members_={},this.items_={}},has:function(e){return!!e&&!!this.items_[e.basisObjectId]},getItems:function(){return this.cache_||(this.cache_=c(this.items_)),this.cache_},getValues:function(e){return this.getItems().map(n.getter(e||h))},pick:function(){for(var e in this.items_)return this.items_[e];return null},top:function(e){var t=[];if(e)for(var n in this.items_)if(t.push(this.items_[n])>=e)break;return t},forEach:function(e){var t=this.getItems();for(var n=0;n<t.length;n++)e(t[n])},destroy:function(){L.prototype.destroy.call(this),this.cache_=g,this.itemCount=0,this.members_=null,this.items_=null}}),K=f(J,{className:a+".Dataset",listen:{item:{destroy:function(e){this.remove([e])}}},init:function(){J.prototype.init.call(this);var e=this.items;e&&(this.items=null,this.set(e))},add:function(e){var t=this.members_,n=this.listen.item,r=[],i;e&&!Array.isArray(e)&&(e=[e]);for(var s=0;s<e.length;s++){var o=e[s];if(o instanceof R){var u=o.basisObjectId;t[u]||(t[u]=o,n&&o.addHandler(n,this),r.push(o))}}return r.length&&this.emit_itemsChanged(i={inserted:r}),i},remove:function(e){var t=this.members_,n=this.listen.item,r=[],i;e&&!Array.isArray(e)&&(e=[e]);for(var s=0;s<e.length;s++){var o=e[s];if(o instanceof R){var u=o.basisObjectId;t[u]&&(n&&o.removeHandler(n,this),delete t[u],r.push(o))}}return r.length&&this.emit_itemsChanged(i={deleted:r}),i},set:function(e){if(!this.itemCount)return this.add(e);if(!e||!e.length)return this.clear();var t=this.members_,n=this.listen.item,r={},i=[],s=[],o,u,a;for(var f=0;f<e.length;f++)o=e[f],o instanceof R&&(u=o.basisObjectId,r[u]=o,t[u]||(t[u]=o,n&&o.addHandler(n,this),s.push(o)));for(var u in t)r[u]||(o=t[u],n&&o.removeHandler(n,this),delete t[u],i.push(o));return(a=X(s,i))&&this.emit_itemsChanged(a),a},sync:function(e){var t=this.set(e)||{},n=t.deleted;K.setAccumulateState(!0);if(n)for(var r=0,i;i=n[r];r++)i.destroy();return K.setAccumulateState(!1),t.inserted},clear:function(){var e=this.getItems(),t=this.listen.item,n;if(e.length){if(t)for(var r=0;r<e.length;r++)e[r].removeHandler(t,this);this.emit_itemsChanged(n={deleted:e}),this.members_={}}return n},destroy:function(){this.clear(),J.prototype.destroy.call(this)}}),Q=function(e,t,n,r){this.context=e,this.fn=t,this.source=n,this.handler=r};Q.prototype={context:null,fn:null,source:null,handler:null,next:null,attach:function(){this.source.addHandler(this.handler,this)},detach:function(){this.source.removeHandler(this.handler,this)},proxy:function(){this.fn.call(this.context,this.source)}};var G=function(){Q.apply(this,arguments)};G.prototype=new Q,G.prototype.attach=function(){this.source.bindingBridge.attach(this.source,this.handler,this)},G.prototype.detach=function(){this.source.bindingBridge.detach(this.source,this.handler,this)};var Y=function(){this.fn.call(this.context,this.source)},Z={datasetChanged:function(){this.fn.call(this.context,this.source)},destroy:function(){this.fn.call(this.context,null)}},et={change:function(){this.fn.call(this.context,this.source)},destroy:function(){this.fn.call(this.context,null)}};K.setAccumulateState=function(){function o(e){var t=e.dataset;s.call(t,e)}function u(){var e=t;t={};for(var n in e){var r=e[n];r&&o(r)}}function a(e){var n=this,r=n.basisObjectId,i=e.inserted,u=e.deleted,a=t[r];if(i&&u||a&&a.mixed){a&&(t[r]=null,o(a)),s.call(n,e);return}if(a){var f=i?"inserted":"deleted",c=a[f];if(!c){var h=i?"deleted":"inserted",p=a[h],d={},v=i||u,m=[],g=0;for(var y=0;y<p.length;y++)d[p[y].basisObjectId]=y;for(var y=0;y<v.length;y++){var b=v[y].basisObjectId;b in d==0?m.push(v[y]):(g||(p=l.call(p)),g++,p[d[b]]=null)}g&&(g<p.length?p=p.filter(Boolean):p=null,a[h]=p),m.length?(a[f]=m,p&&(a.mixed=!0)):(m=null,p||(t[r]=null))}else c.push.apply(c,i||u);return}t[r]={inserted:i,deleted:u,dataset:n,mixed:!1}}function f(){i=null,r&&(r=0,c())}function c(){e.emit_itemsChanged=s,u()}var e=J.prototype,t={},r=0,i,s;return function(t){t?(r==0&&(s=e.emit_itemsChanged,e.emit_itemsChanged=a,i||(i=n.setImmediate(f))),r++):(r-=r>0,r==0&&c())}}(),t.exports={STATE:b,SUBSCRIPTION:S,AbstractData:L,Value:H,Object:R,Slot:U,KeyObjectMap:W,ReadOnlyDataset:J,Dataset:K,DatasetWrapper:$,isConnected:I,getDatasetDelta:V,ResolveAdapter:Q,resolveDataset:tt,resolveObject:nt,wrapData:rt,wrapObject:it,wrap:st}},"5.js":function(e,t,n,r,i,s,o,u){function B(){}function j(){}function F(){}function I(e){e.setDelegate=n.fn.$undef,e.destroy=B}function q(e){var t=e.constructor.prototype;e.setDelegate=t.setDelegate,e.destroy=t.destroy}function R(e){return e.sortingValue||0}function U(e,t){return e=e.sortingValue||0,t=t.sortingValue||0,+(e>t)||-(e<t)}function z(e,t){return e=e.sortingValue||0,t=t.sortingValue||0,-(e>t)||+(e<t)}function W(e){return e.childNodes.sort(e.sortingDesc?z:U)}function X(e,t,n,r){if(!e.length)return 0;r=!!r;var i,s,o=0,u=e.length-1;do{i=o+u>>1,s=n(e[i]);if(r?t>s:t<s)u=i-1;else{if(!(r?t<s:t>s))return t==s?i:0;o=i+1}}while(o<=u);return i+(s<t^r)}function V(e,t,n,r,i){if(t===n)return;var s,o=e,u=[];r&&(e.contextSelection=n,e.selected&&u.push(e));while(o){s=!o.selection||i&&o===e?o.firstChild:null;if(s&&s.contextSelection!==t)throw 6;while(!s){if(o===e){u.length&&(t&&t.remove(u),n&&n.add(u));return}s=o.nextSibling,s||(o=o.parentNode)}o=s,o.selected&&u.push(o),o.contextSelection=n}}function $(e,t){if(e.contextDisabled!=t){e.contextDisabled=t;if(e.disabled)return;t?e.emit_disable():e.emit_enable()}}function J(e){if(!e)return null;if(e.isSatelliteConfig)return e;if(e instanceof Z)return e;f.isClass(e)&&(e={instanceOf:e});if(e&&e.constructor===Object){var t=!1,n={isSatelliteConfig:!0},r;for(var i in e)switch(i){case"instance":e[i]instanceof Z&&(n[i]=e[i]);break;case"instanceOf":f.isClass(e[i])&&e[i].isSubclassOf(Z)&&(r=e[i]);break;case"existsIf":case"delegate":case"dataSource":t=!0,n[i]=d(e[i]);break;case"config":n[i]=e[i]}n.instance||(n.instanceOf=r||Z);if(t){var s="events"in e?e.events:"update";Array.isArray(s)&&(s=s.join(" "));if(typeof s=="string"){var o={};s=s.split(/\s+/);for(var u=0,a;a=s[u];u++)o[a]=G,n.handler=o}}return n}return null}function K(e,t){for(var n in t)t[n]&&typeof t[n]=="object"&&e.setSatellite(n,t[n])}function rt(e,t){var n=t.length-1;e.childNodes=t,e.firstChild=t[0]||null,e.lastChild=t[n]||null;for(var r,i=n;r=t[i];i--)r.nextSibling=t[i+1]||null,r.previousSibling=t[i-1]||null,e.insertBefore(r,r.nextSibling)}function it(e,t){for(var n=0,r;r=t[n];n++)r.groupNode.nodes.push(r);t.length=0;for(var i=e.grouping.nullGroup;i;i=i.nextSibling){var s=i.nodes;i.first=s[0]||null,i.last=s[s.length-1]||null,t.push.apply(t,s),i.emit_childNodesModified({inserted:s})}return t}function st(e,t){var n;if(typeof e.childFactory=="function"){n=e.childFactory(t);if(n instanceof e.childClass)return n}throw n?10:9}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.Class,l=n.object.complete,c=n.array,h=n.array.remove,p=n.fn.$undef,d=n.getter,v=n.fn.nullGetter,m=f.oneFunctionProperty,g=n.event.create,y=n.event.events,b=n.data.SUBSCRIPTION,w=n.data.STATE,E=n.data.AbstractData,S=n.data.Object,x=n.data.ReadOnlyDataset,T=n.data.Dataset,N=n.data.DatasetWrapper,C=a+": Node can't be inserted at specified point in hierarchy",k=a+": Node was not found",L=a+": Child node has wrong class",A=a+": Child node is null",O=a+": Operation is not allowed because node is under dataSource control",M=a+": Operation is not allowed because node is under dataSource adapter control",_=a+": Node can't has owner and parentNode",D=a+": Node can't has children and dataSource as childClass isn't specified",P={ANY:!0,NONE:!1,PARENT:"parent",OWNER:"owner"},H={};b.addProperty("owner"),b.addProperty("dataSource");var Q=f.customExtendProperty({},function(e,t){for(var n in t)e[n]=J(t[n])}),G=function(e){var t=this.name,n=this.config,r=!n.existsIf||n.existsIf(e),i=e.satellite[t];if(r)if(i)n.delegate&&i.setDelegate(n.delegate(e)),n.dataSource&&i.setDataSource(n.dataSource(e));else{i=n.instance;if(!i){var s,o=(typeof n.config=="function"?n.config(e):n.config)||{};o.owner=e,n.delegate&&(o.autoDelegate=!1,o.delegate=n.delegate(e)),n.dataSource&&(o.dataSource=n.dataSource(e)),i=new n.instanceOf(o),i.destroy=F,(s=e.listen.satellite)&&i.addHandler(s,e),(s=e.listen["satellite:"+t])&&i.addHandler(s,e)}else n.delegate&&i.setDelegate(n.delegate(e)),n.dataSource&&i.setDataSource(n.dataSource(e));e.satellite.__auto__[t].instance=i,e.setSatellite(t,i,!0)}else i&&(n.instance&&(n.delegate&&i.setDelegate(),n.dataSource&&i.setDataSource()),e.satellite.__auto__[t].instance=null,e.setSatellite(t,null,!0))},Y={destroy:function(){this.owner.setSatellite(this.name,null)}},Z=f(S,{className:a+".AbstractNode",subscribeTo:S.prototype.subscribeTo+b.DATASOURCE,isSyncRequired:function(){return this.state==w.UNDEFINED||this.state==w.DEPRECATED},syncEvents:{activeChanged:!1},emit_update:function(e){S.prototype.emit_update.call(this,e);var t=this.parentNode;t&&(t.matchFunction&&this.match(t.matchFunction),t.insertBefore(this,this.nextSibling))},listen:{owner:{destroy:function(){this.ownerSatelliteName||this.setOwner()}}},autoDelegate:P.NONE,name:null,childNodes:null,emit_childNodesModified:g("childNodesModified","delta")&&function(e){y.childNodesModified.call(this,e);var t=this.listen.childNode,n;if(t){if(n=e.inserted)for(var r=0,i;i=n[r];r++)i.addHandler(t,this);if(n=e.deleted)for(var r=0,i;i=n[r];r++)i.removeHandler(t,this)}},childNodesState:w.UNDEFINED,emit_childNodesStateChanged:g("childNodesStateChanged","oldState"),childClass:Z,dataSource:null,emit_dataSourceChanged:g("dataSourceChanged","oldDataSource"),dataSourceAdapter_:null,dataSourceMap_:null,destroyDataSourceMember:!0,parentNode:null,nextSibling:null,previousSibling:null,firstChild:null,lastChild:null,sorting:v,sortingDesc:!1,emit_sortingChanged:g("sortingChanged","oldSorting","oldSortingDesc"),groupingClass:null,grouping:null,emit_groupingChanged:g("groupingChanged","oldGrouping"),groupNode:null,groupId:NaN,satellite:Q,ownerSatelliteName:null,emit_satelliteChanged:g("satelliteChanged","name","oldSatellite"),owner:null,emit_ownerChanged:g("ownerChanged","oldOwner"),init:function(){S.prototype.init.call(this);var e=this.childNodes,t=this.dataSource;e&&(this.childNodes=null),t&&(this.dataSource=null);var n=this.grouping;n&&(this.grouping=null,this.setGrouping(n)),this.childClass&&(this.childNodes=[],t?this.setDataSource(t):e&&this.setChildNodes(e));var r=this.satellite;r!==Q&&(this.satellite=Q,K(this,r));var i=this.owner;i&&(this.owner=null,this.setOwner(i))},setChildNodesState:function(e,t){var n=String(e),r=this.childNodesState;if(!w.values[n])throw 7;if(r!=n||r.data!=t)this.childNodesState=Object(n),this.childNodesState.data=t,this.emit_childNodesStateChanged(r)},appendChild:function(e){},insertBefore:function(e,t){},removeChild:function(e){},replaceChild:function(e,t){},clear:function(e){},setChildNodes:function(e){},setGrouping:function(e,t){},setSorting:function(e,t){},setDataSource:function(e){},setOwner:function(e){if(!e||e instanceof Z==0)e=null;if(e&&this.parentNode)throw 8;var t=this.owner;if(t!==e){var n=this.listen.owner;if(t){if(this.ownerSatelliteName&&t.satellite.__auto__&&this.ownerSatelliteName in t.satellite.__auto__)return;n&&t.removeHandler(n,this),this.ownerSatelliteName&&(this.owner=null,t.setSatellite(this.ownerSatelliteName,null))}e&&n&&e.addHandler(n,this),this.owner=e,this.emit_ownerChanged(t),(this.autoDelegate==P.OWNER||this.autoDelegate===P.ANY)&&this.setDelegate(e)}},setSatellite:function(e,t,n){var r=this.satellite[e]||null,i=this.satellite.__auto__,s=i&&i[e],o=n&&s;if(o)t=s.instance,s.config.instance&&t&&delete s.config.instance.setOwner;else{t=J(t);if(t&&t.owner&&i&&t.ownerSatelliteName&&i[t.ownerSatelliteName])return;s&&(delete i[e],s.config.instance&&s.config.instance.removeHandler(Y,s),s.config.handler&&this.removeHandler(s.config.handler,s))}if(r!==t){var u=this.listen.satellite,a=this.listen["satellite:"+e],f;r&&(delete this.satellite[e],r.ownerSatelliteName=null,s&&r.destroy===F?f=r:(u&&r.removeHandler(u,this),a&&r.removeHandler(a,this),r.setOwner(null)),o&&!t&&s.config.instance&&(s.config.instance.setOwner=j));if(t){if(t instanceof Z==0){var s={owner:this,name:e,config:t,instance:null};t.handler&&this.addHandler(t.handler,s),t.instance&&(t.instance.addHandler(Y,s),t.instance.setOwner=j),i||(this.satellite===Q&&(this.satellite={}),i=this.satellite.__auto__={}),i[e]=s,G.call(s,this),!s.instance&&r&&this.emit_satelliteChanged(e,r),f&&(delete f.destroy,f.destroy());return}if(t.owner!==this){if(s&&s.config.delegate){var l=t.autoDelegate;t.autoDelegate=!1,t.setOwner(this),t.autoDelegate=l}else t.setOwner(this);if(t.owner!==this)return;u&&t.addHandler(u,this),a&&t.addHandler(a,this)}else t.ownerSatelliteName&&(delete this.satellite[t.ownerSatelliteName],this.emit_satelliteChanged(t.ownerSatelliteName,t));this.satellite==Q&&(this.satellite={}),this.satellite[e]=t,t.ownerSatelliteName=e}this.emit_satelliteChanged(e,r),f&&(delete f.destroy,f.destroy())}},getChildNodesDataset:function(){return H[this.basisObjectId]||new lt({sourceNode:this})},destroy:function(){S.prototype.destroy.call(this),this.dataSource||this.dataSourceAdapter_?this.setDataSource():this.firstChild&&this.clear(),this.parentNode&&this.parentNode.removeChild(this),this.grouping&&(this.grouping.setOwner(),this.grouping=null),this.owner&&this.setOwner();var e=this.satellite;if(e!==Q){var t=e.__auto__;delete e.__auto__;for(var n in t)t[n].config.instance&&!t[n].instance&&t[n].config.instance.destroy();for(var n in e){var r=e[n];r.owner=null,r.ownerSatelliteName=null,r.destroy===F&&delete r.destroy,r.destroy()}this.satellite=null}this.childNodes=null,this.parentNode=null,this.previousSibling=null,this.nextSibling=null,this.firstChild=null,this.lastChild=null}}),et=f(Z,{className:a+".PartitionNode",autoDestroyIfEmpty:!1,nodes:null,first:null,last:null,init:function(){this.nodes=[],Z.prototype.init.call(this)},insert:function(e,t){var n=this.nodes,r=t?n.indexOf(t):-1;r==-1?(n.push(e),this.last=e):n.splice(r,0,e),this.first=n[0],e.groupNode=this,this.emit_childNodesModified({inserted:[e]})},remove:function(e){var t=this.nodes;h(t,e)&&(this.first=t[0]||null,this.last=t[t.length-1]||null,e.groupNode=null,this.emit_childNodesModified({deleted:[e]})),!this.first&&this.autoDestroyIfEmpty&&this.destroy()},clear:function(){if(!this.first)return;var e=this.nodes;for(var t=e.length;t-->0;)e[t].groupNode=null;this.nodes=[],this.first=null,this.last=null,this.emit_childNodesModified({deleted:e}),this.autoDestroyIfEmpty&&this.destroy()},destroy:function(){Z.prototype.destroy.call(this),this.nodes=null,this.first=null,this.last=null}}),tt={itemsChanged:function(e,t){var n={},r=[];if(t.deleted){n.deleted=r;if(this.childNodes.length==t.deleted.length){r=c(this.childNodes);for(var i=0,s;s=r[i];i++)q(s);var o=this.dataSource;this.dataSource=null,this.clear(!0),this.dataSource=o,this.dataSourceMap_={}}else for(var i=0,u;u=t.deleted[i];i++){var a=u.basisObjectId,f=this.dataSourceMap_[a];q(f),delete this.dataSourceMap_[a],this.removeChild(f),r.push(f)}}if(t.inserted){n.inserted=[];for(var i=0,u;u=t.inserted[i];i++){var l=st(this,{delegate:u});I(l),this.dataSourceMap_[u.basisObjectId]=l,n.inserted.push(l),this.firstChild&&this.insertBefore(l)}}this.firstChild?this.emit_childNodesModified(n):this.setChildNodes(n.inserted);if(this.destroyDataSourceMember&&r.length)for(var i=0,u;u=r[i];i++)u.destroy()},stateChanged:function(e){this.setChildNodesState(e.state,e.state.data)},destroy:function(e){this.dataSourceAdapter_||this.setDataSource()}},nt={datasetChanged:function(e){this.setDataSource(e)},destroy:function(){this.setDataSource()}},ot={childClass:Z,childFactory:null,listen:{dataSource:tt},getChild:function(e,t){return n.array.search(this.childNodes,e,t)},getChildByName:function(e){return this.getChild(e,"name")},appendChild:function(e){return this.insertBefore(e)},insertBefore:function(e,t){if(!this.childClass)throw 11;if(e.firstChild){var n=this;while(n=n.parentNode)if(n===e)throw 12}var r=e&&e instanceof this.childClass;if(this.dataSource){if(!r||!e.delegate||this.dataSourceMap_[e.delegate.basisObjectId]!==e)throw 13}else if(this.dataSourceAdapter_)throw 14;r||(e=st(this,e instanceof S?{delegate:e}:e));if(e.owner)throw 15;var i=e.parentNode===this,s=this.childNodes,o=this.grouping,u,a=e.groupNode,f=null,l=this.sorting,c,p=!1,d,m=-1,g,y;i&&(g=e.nextSibling,y=e.previousSibling),l!==v&&(t=null,c=this.sortingDesc,d=l(e)||0,i&&(d===e.sortingValue?p=!0:(!g||(c?g.sortingValue<=d:g.sortingValue>=d))&&(!y||(c?y.sortingValue>=d:y.sortingValue<=d))&&(e.sortingValue=d,p=!0)));if(o){var n;f=o.getGroupNode(e,!0),u=f.nodes;if(a===f)if(p||l===v&&g===t)return e;l!==v?a===f&&p?g&&g.groupNode===f?m=u.indexOf(g):m=u.length:(m=X(u,d,R,c),e.sortingValue=d):t&&t.groupNode===f?m=u.indexOf(t):m=u.length;if(m<u.length)t=u[m];else if(f.last)t=f.last.nextSibling;else{n=f,t=null;while(n=n.nextSibling)if(t=n.first)break}if(e===t||i&&g===t)return a!==f&&(a&&a.remove(e),f.insert(e,t)),e;m=-1}else if(l!==v){if(p)return e;m=X(s,d,R,c),t=s[m],e.sortingValue=d;if(e===t||i&&g===t)return e}else{if(t&&t.parentNode!==this)throw 16;if(i){if(g===t)return e;if(e===t)throw 17}}if(i){g?(g.previousSibling=y,e.nextSibling=null):this.lastChild=y,y?(y.nextSibling=g,e.previousSibling=null):this.firstChild=g;if(m==-1)h(s,e);else{var b=s.indexOf(e);s.splice(b,1),m-=b<m}a&&(a.remove(e),a=null)}else e.parentNode&&e.parentNode.removeChild(e);a!=f&&f.insert(e,t);if(t){m==-1&&(m=s.indexOf(t));if(m==-1)throw 18;e.nextSibling=t,s.splice(m,0,e)}else m=s.length,s.push(e),t={previousSibling:this.lastChild},this.lastChild=e;return e.parentNode=this,e.previousSibling=t.previousSibling,m==0?this.firstChild=e:t.previousSibling.nextSibling=e,t.previousSibling=e,i||(V(e,e.contextSelection,this.selection||this.contextSelection,!0),$(e,this.disabled||this.contextDisabled),(e.underMatch_||this.matchFunction)&&e.match&&e.match(this.matchFunction),(e.autoDelegate==P.PARENT||e.autoDelegate===P.ANY)&&e.setDelegate(this),this.dataSource||this.emit_childNodesModified({inserted:[e]}),e.listen.parentNode&&this.addHandler(e.listen.parentNode,e)),e},removeChild:function(e){if(!e||e.parentNode!==this)throw 19;if(e instanceof this.childClass==0)throw 20;if(this.dataSource){if(this.dataSource.has(e.delegate))throw 21}else if(this.dataSourceAdapter_)throw 22;var t=this.childNodes.indexOf(e);if(t==-1)throw 23;return this.childNodes.splice(t,1),e.parentNode=null,e.nextSibling?e.nextSibling.previousSibling=e.previousSibling:this.lastChild=e.previousSibling,e.previousSibling?e.previousSibling.nextSibling=e.nextSibling:this.firstChild=e.nextSibling,e.nextSibling=null,e.previousSibling=null,e.listen.parentNode&&this.removeHandler(e.listen.parentNode,e),V(e,e.contextSelection,null,!0),e.groupNode&&e.groupNode.remove(e),this.dataSource||this.emit_childNodesModified({deleted:[e]}),(e.autoDelegate==P.PARENT||e.autoDelegate===P.ANY)&&e.setDelegate(),e},replaceChild:function(e,t){if(this.dataSource)throw 24;if(this.dataSourceAdapter_)throw 25;if(t==null||t.parentNode!==this)throw 26;return this.insertBefore(e,t),this.removeChild(t)},clear:function(e){if(this.dataSource&&this.dataSource.itemCount)throw 27;if(!this.firstChild)return;e&&V(this,this.selection||this.contextSelection,null,!1,!0);var t=this.childNodes;this.firstChild=null,this.lastChild=null,this.childNodes=[],this.emit_childNodesModified({deleted:t});for(var n=t.length;n-->0;){var r=t[n];r.listen.parentNode&&r.parentNode.removeHandler(r.listen.parentNode,r),r.parentNode=null,r.groupNode=null,e?(r.nextSibling=null,r.previousSibling=null,(r.autoDelegate==P.PARENT||r.autoDelegate===P.ANY)&&r.setDelegate()):r.destroy()}if(this.grouping)for(var t=this.grouping.childNodes,n=t.length-1,i;i=t[n];n--)i.clear()},setChildNodes:function(e,t){!this.dataSource&&!this.dataSourceAdapter_&&this.clear(t);if(e){"length"in e==0&&(e=[e]);if(e.length){var n=this.emit_childNodesModified;this.emit_childNodesModified=p;for(var r=0,i=e.length;r<i;r++)this.insertBefore(e[r]);this.emit_childNodesModified=n,this.emit_childNodesModified({inserted:this.childNodes})}}},setDataSource:function(e){if(!this.childClass)throw 28;e=n.data.resolveDataset(this,this.setDataSource,e,"dataSourceAdapter_");if(this.dataSource!==e){var t=this.dataSource,r=this.listen.dataSource;t&&(this.dataSourceMap_=null,this.dataSource=null,r&&t.removeHandler(r,this));if(this.firstChild){if(t)for(var i=0,s;s=this.childNodes[i];i++)q(s);this.clear()}this.dataSource=e,e?(this.dataSourceMap_={},this.setChildNodesState(e.state,e.state.data),r&&(e.addHandler(r,this),e.itemCount&&r.itemsChanged&&r.itemsChanged.call(this,e,{inserted:e.getItems()}))):this.setChildNodesState(w.UNDEFINED),this.emit_dataSourceChanged(t)}},setGrouping:function(e,t){if(typeof e=="function"||typeof e=="string")e={rule:e};e instanceof at==0&&(e=e&&typeof e=="object"?new this.groupingClass(e):null);if(this.grouping!==e){var n=this.grouping,r;if(n){this.grouping=null;if(!e&&this.firstChild){this.sorting!==v?r=W(this):r=this.childNodes,n.nullGroup.clear();var i=n.childNodes.slice(0);for(var s=0;s<i.length;s++)i[s].clear();rt(this,r)}n.setOwner()}if(e){this.grouping=e,e.setOwner(this);if(this.firstChild){this.sorting!==v?r=W(this):r=this.childNodes;for(var s=0,o;o=r[s];s++)o.groupNode=this.grouping.getGroupNode(o,!0);r=it(this,r),rt(this,r)}}this.emit_groupingChanged(n)}},setSorting:function(e,t){e=d(e),t=!!t;if(this.sorting!==e||this.sortingDesc!=!!t){var n=this.sorting,r=this.sortingDesc;this.sorting=e,this.sortingDesc=!!t;if(e!==v&&this.firstChild){var i=[],s;for(var o=this.firstChild;o;o=o.nextSibling)o.sortingValue=e(o)||0;if(this.grouping)for(var u=this.grouping.nullGroup;u;u=u.nextSibling)s=u.nodes=W({childNodes:u.nodes,sortingDesc:this.sortingDesc}),u.first=s[0]||null,u.last=s[s.length-1]||null,i.push.apply(i,s);else i=W(this);rt(this,i)}this.emit_sortingChanged(n,r)}},setMatchFunction:function(e){if(this.matchFunction!=e){var t=this.matchFunction;this.matchFunction=e;for(var n=this.lastChild;n;n=n.previousSibling)n.match(e);this.emit_matchFunctionChanged(t)}}},ut=f(Z,ot,{className:a+".Node",emit_enable:g("enable")&&function(){for(var e=this.firstChild;e;e=e.nextSibling)$(e,!1);y.enable.call(this)},emit_disable:g("disable")&&function(){for(var e=this.firstChild;e;e=e.nextSibling)$(e,!0);y.disable.call(this)},emit_satelliteChanged:function(e,t){Z.prototype.emit_satelliteChanged.call(this,e,t),this.satellite[e]instanceof ut&&$(this.satellite[e],this.disabled||this.contextDisabled)},emit_select:g("select"),emit_unselect:g("unselect"),emit_match:g("match"),emit_unmatch:g("unmatch"),emit_matchFunctionChanged:g("matchFunctionChanged","oldMatchFunction"),selectable:!0,selected:!1,selection:null,contextSelection:null,matchFunction:null,matched:!0,disabled:!1,contextDisabled:!1,listen:{owner:{enable:function(){$(this,!1)},disable:function(){$(this,!0)}}},init:function(){this.selection&&(this.selection instanceof x==0&&(this.selection=new ct(this.selection)),this.listen.selection&&this.selection.addHandler(this.listen.selection,this)),Z.prototype.init.call(this),this.disabled&&this.emit_disable(),this.selected&&(this.selected=!1,this.select(!0))},setSelection:function(e){if(this.selection!==e)return V(this,this.selection||this.contextSelection,e||this.contextSelection,!1,!0),this.selection&&this.listen.selection&&this.selection.removeHandler(this.listen.selection,this),this.selection=e,e&&this.listen.selection&&e.addHandler(this.listen.selection,this),!0},select:function(e){var t=this.selected,n=this.contextSelection;return n?e?t?n.remove([this]):n.add([this]):this.selectable&&n.set([this]):!t&&this.selectable&&(this.selected=!0,this.emit_select()),this.selected!=t},unselect:function(){var e=this.selected;if(e){var t=this.contextSelection;t?t.remove([this]):(this.selected=!1,this.emit_unselect())}return this.selected!=e},setSelected:function(e,t){return e?this.select(t):this.unselect()},enable:function(){var e=this.disabled;return e&&(this.disabled=!1,this.contextDisabled||this.emit_enable()),this.disabled!=e},disable:function(){var e=this.disabled;return e||(this.disabled=!0,this.contextDisabled||this.emit_disable()),this.disabled!=e},setDisabled:function(e){return e?this.disable():this.enable()},isDisabled:function(){return this.disabled||this.contextDisabled},match:function(e){typeof e!="function"&&(e=null),this.underMatch_&&!e&&this.underMatch_(this,!0),this.underMatch_=e;var t=!e||e(this);this.matched!=t&&(this.matched=t,t?this.emit_match():this.emit_unmatch())},destroy:function(){this.unselect(),this.contextSelection=null,this.selection&&this.setSelection(),Z.prototype.destroy.call(this)}}),at=f(Z,ot,{className:a+".GroupingNode",emit_childNodesModified:function(e){y.childNodesModified.call(this,e),this.nullGroup.nextSibling=this.firstChild;var t;if(t=e.inserted){for(var n=0,r;r=t[n++];)r.groupId_=r.delegate?r.delegate.basisObjectId:r.data.id,this.map_[r.groupId_]=r;if(this.dataSource&&this.nullGroup.first){var i=this.owner,s=c(this.nullGroup.nodes);for(var n=s.length;n-->0;)i.insertBefore(s[n],s[n].nextSibling)}}},emit_ownerChanged:function(e){e&&e.grouping===this&&e.setGrouping(null,!0),this.owner&&this.owner.grouping!==this&&this.owner.setGrouping(this),y.ownerChanged.call(this,e),!this.owner&&this.autoDestroyWithNoOwner&&this.destroy()},map_:null,nullGroup:null,autoDestroyWithNoOwner:!0,autoDestroyEmptyGroups:!0,rule:v,childClass:et,childFactory:function(e){return new this.childClass(l({autoDestroyIfEmpty:this.dataSource?!1:this.autoDestroyEmptyGroups},e))},init:function(){this.map_={},this.nullGroup=new et,Z.prototype.init.call(this)},getGroupNode:function(e,t){var n=this.rule(e),r=n instanceof S,i=this.map_[r?n.basisObjectId:n];return this.dataSource&&(t=!1),!i&&t&&(i=this.appendChild(r?n:{data:{id:n,title:n}})),i||this.nullGroup},setDataSource:function(e){var t=this.dataSource;ot.setDataSource.call(this,e);var n=this.owner;if(n&&this.dataSource!==t){var r=c(n.childNodes);for(var i=r.length-1;i>=0;i--)n.insertBefore(r[i],r[i+1])}},insertBefore:function(e,t){e=ot.insertBefore.call(this,e,t);var n=e.first;if(n){var r=n.parentNode,i=e.last,s,o,u,a=null,f=e;while(f=f.nextSibling)if(a=f.first)break;u=a?a.previousSibling:r.lastChild,s=n.previousSibling,o=i.nextSibling;if(o!==a){var l=r.childNodes,c=e.nodes,h=c.length;s&&(s.nextSibling=o),o&&(o.previousSibling=s),u&&(u.nextSibling=n),a&&(a.previousSibling=i),n.previousSibling=u,i.nextSibling=a;var p=l.indexOf(n),d=a?l.indexOf(a):l.length;d>p&&(d-=h),l.splice(p,h),l.splice.apply(l,[d,0].concat(c));if(!u||!s)r.firstChild=l[0];if(!a||!o)r.lastChild=l[l.length-1];if(n instanceof et)for(var v=h,m=a;v-->0;)r.insertBefore(c[v],m),m=c[v]}}return e},removeChild:function(e){if(e=ot.removeChild.call(this,e)){delete this.map_[e.groupId_];for(var t=0,n;n=e.nodes[t];t++)n.parentNode.insertBefore(n)}return e},clear:function(e){var t=[],n=this.getGroupNode,r=this.nullGroup;this.getGroupNode=function(){return r};for(var i=this.firstChild;i;i=i.nextSibling)t.push.apply(t,i.nodes);for(var s=0,o;o=t[s];s++)o.parentNode.insertBefore(o);this.getGroupNode=n,ot.clear.call(this,e),this.map_={}},destroy:function(){this.autoDestroyWithNoOwner=!1,Z.prototype.destroy.call(this),this.nullGroup.destroy(),this.nullGroup=null,this.map_=null}});Z.prototype.groupingClass=at;var ft={childNodesModified:function(e,t){var n=this.members_,r={},i,s=0,o=0,u=t.inserted,a=t.deleted;if(u&&u.length){r.inserted=u;while(i=u[s])n[i.basisObjectId]=i,s++}if(a&&a.length){r.deleted=a;while(i=a[o])delete n[i.basisObjectId],o++}(s||o)&&this.emit_itemsChanged(r)},destroy:function(){this.destroy()}},lt=f(x,{className:a+".ChildNodesDataset",sourceNode:null,init:function(){x.prototype.init.call(this);var e=this.sourceNode;H[e.basisObjectId]=this,e.firstChild&&ft.childNodesModified.call(this,e,{inserted:e.childNodes}),e.addHandler(ft,this)},destroy:function(){this.sourceNode.removeHandler(ft,this),delete H[this.sourceNode.basisObjectId],x.prototype.destroy.call(this)}}),ct=f(T,{className:a+".Selection",multiple:!1,emit_itemsChanged:function(e){T.prototype.emit_itemsChanged.call(this,e);if(e.inserted)for(var t=0,n;n=e.inserted[t];t++)n.selected||(n.selected=!0,n.emit_select());if(e.deleted)for(var t=0,n;n=e.deleted[t];t++)n.selected&&(n.selected=!1,n.emit_unselect())},add:function(e){if(!this.multiple){if(this.itemCount)return this.set(e);e=[e[0]]}var t=[];for(var n=0,r;r=e[n];n++)r.contextSelection==this&&r.selectable&&t.push(r);return T.prototype.add.call(this,t)},set:function(e){var t=[];for(var n=0,r;r=e[n];n++)r.contextSelection==this&&r.selectable&&t.push(r);return this.multiple||t.splice(1),T.prototype.set.call(this,t)}});t.exports={DELEGATE:P,AbstractNode:Z,Node:ut,GroupingNode:at,PartitionNode:et,ChildNodesDataset:lt,Selection:ct,nullSelection:new x}},"6.js":function(e,t,n,r,i,s,o,u){function et(e,t){return'<span class="basisjs-markup" data-basisjs-l10n="'+t+'">'+String(e)+"</span>"}function tt(e){typeof e=="string"&&(e=n.l10n.token(e));if(!e)return null;var t=e.basisObjectId,r=Y[t];return r||(r=Y[t]=new dt(new Z(e))),r}function nt(){return"i"+n.genUID()+"__"}function rt(e,t){function n(t){f>o&&(r.push((t||"")+e.substring(o,f)),o=f)}var r=[],i=e.split(""),s=i.length,o=0,u=!1,a;t||(t=nt());for(var f=0;f<s;f++)switch(i[f]){case"'":case'"':a=i[f];while(++f<s)if(i[f]=="\\")f++;else if(i[f]==a){f++;break}break;case"/":if(i[f+1]=="*"){f++;while(++f<s)if(i[f]=="*"&&i[f+1]=="/"){f+=2;break}}break;case"{":u=!0;break;case"}":u=!1;break;case".":if(!u){f++,n();while(++f<s)if(!/[a-z0-9\-\_]/.test(i[f])){n(t),f-=1;break}}}return n(),r.join("")}function st(e){var t=n.resource(e).fetch();typeof t.startUse=="function"&&t.startUse()}function ot(e){var t=n.resource(e).fetch();typeof t.stopUse=="function"&&t.stopUse()}function ut(){this.destroyBuilder&&lt.call(this);for(var e=0,t;t=this.attaches_[e];e++)t.handler.call(t.context)}function at(e){var t=[];for(var n=0;n<e.length;n++)t.push(Array.isArray(e[n])?at(e[n]):e[n]);return t}function ft(e,t,r,i){var s=e,o;typeof s=="function"&&(t="baseURI"in e?e.baseURI:t,o="url"in e?e.url:o,s=s()),s instanceof n.Token&&(t="baseURI"in e?e.baseURI:t,o="url"in e?e.url:o,s=s.get());if(Array.isArray(s))r&&(s=at(s)),s={tokens:s};else if(typeof s!="object"||!Array.isArray(s.tokens))s=String(s);return typeof s=="string"&&(s=it(s,t,i,o,e)),s}function lt(){var e=ft(this.source,this.baseURI,!1,{isolate:this.getIsolatePrefix()}),t=this.destroyBuilder,n=this.builder(e.tokens,this),r=this.deps_;if(r){this.deps_=null;for(var i=0,s;s=r[i];i++)s.bindingBridge.detach(s,lt,this)}if(e.deps&&e.deps.length){r=e.deps,this.deps_=r;for(var i=0,s;s=r[i];i++)s.bindingBridge.attach(s,lt,this)}this.createInstance=n.createInstance,this.clearInstance=n.destroyInstance,this.getBinding=function(){return{names:n.keys}},this.destroyBuilder=n.destroy;var o=e.resources&&e.resources.length>0?e.resources:null;if(o)for(var i=0,u;u=o[i];i++)st(u);if(this.resources)for(var i=0,u;u=this.resources[i];i++)ot(u);this.resources=o,t&&t(!0)}function ht(e){var t=pt(e);if(t.template)return t.template;var n=document.getElementById(e),r="";return n&&n.tagName=="SCRIPT"&&n.type=="text/basis-template"&&(r=n.textContent||n.text),t.template=new dt(r)}function pt(e){var t=ct[e];return t||(t=ct[e]=function(){return ht(e).source}),t}function gt(e,t){var r=n.array(arguments),t=r.pop();return new vt({rule:t,events:r.join(" ").trim().split(/\s+/)})}function wt(){var e=n.array(arguments).join("."),t=At[e];return t||(t=new bt("",e),At[e]=t),t}function Et(e){var t={},n=[];for(var r=0;r<e.length;r++)t[e[r]]||(t[e[r]]=!0,n.push(e[r]));return n}function St(e,t){var n=[];n.source=Et(t).join("/");var r={base:!0};for(var i=0;i<t.length;i++){var s=t[i]||"base";if(s==e||r[s])continue;var o=kt(s);r[s]=!0,n.push(s),t.splice.apply(t,[i+1,0].concat(Lt[s].fallback))}return n.unshift(e),e!="base"&&n.push("base"),n.value=n.join("/"),n}function xt(e,t){var n=Lt[e].sourcesList;for(var r=0,i;i=n[r];r++)if(i.hasOwnProperty(t))return i[t];return""}function Tt(e){return Lt[Mt].fallback.indexOf(e)!=-1}function Nt(e){wt(e).set()}function Ct(e){for(var t in At)Nt(t)}function kt(e){e||(e="base");if(Lt[e])return Lt[e].theme;if(!/^([a-z0-9\_\-]+)$/.test(e))throw 31;var t={},r=[t],i=new yt;Lt[e]={theme:i,sources:t,sourcesList:r,fallback:[]};var s=function(n,r){return n in t==0&&(t[n]=r,Tt(e)&&Nt(n)),wt(n)};return n.object.extend(i,{name:e,fallback:function(t){if(i!==Ot&&arguments.length>0){var n=typeof t=="string"?t.split("/"):[],r={};n=St(e,n);if(Lt[e].fallback.source!=n.source){Lt[e].fallback.source=n.source;for(var s in Lt){var o=Lt[s].fallback,n=St(s,(o.source||"").split("/"));if(n.value!=o.value){r[s]=!0,Lt[s].fallback=n;var u=Lt[s].sourcesList;u.length=n.length;for(var a=0;a<u.length;a++)u[a]=Lt[n[a]].sources}}}var f=Lt[Mt].fallback;for(var s in r)if(Tt(s)){Ct();break}}var l=Lt[e].fallback.slice(1);return l.source=Lt[e].fallback.source,l},define:function(e,t){typeof e=="function"&&(e=e());if(typeof e=="string"){if(typeof t=="object"){var n=e,r=t,o={};for(var u in r)r.hasOwnProperty(u)&&(o[u]=s(n+"."+u,r[u]));return o}return arguments.length==1?wt(e):s(e,t)}if(typeof e=="object"){var r=e;for(var a in r)r.hasOwnProperty(a)&&s(a,r[a]);return i}},apply:function(){if(e!=Mt){Mt=e,Ct();for(var t=0,n;n=_t[t];t++)n.fn.call(n.context,e)}return i},getSource:function(n,r){return r?xt(e,n):t[n]},drop:function(n){t.hasOwnProperty(n)&&(delete t[n],Tt(e)&&Nt(n))}}),Lt[e].fallback=St(e,[]),r.push(Lt.base.sources),i}function Dt(e,t,n){_t.push({fn:e,context:t}),n&&e.call(t,Mt)}n.require("./2.js");var a=this.path,f=n.Class,l=n.cleaner,c=n.path,h=n.array.search,p=n.array.add,d=n.array.remove,v=[],m={},g=2,y=1,b=2,w=4,E=5,S=6,x=3,T=8,N=0,C=1,k=2,L=3,A=4,O=/^event-(.+)$/,M={4:"class",5:"style"},_={"class":w,style:E},D={2:A,4:A-1,5:A-1,6:2},P=3,H=4,B=5,j=3,F=3,I="Invalid or unsupported syntax",q=/((?:.|[\r\n])*?)(\{(?:l10n:([a-zA-Z_][a-zA-Z0-9_\-]*(?:\.[a-zA-Z_][a-zA-Z0-9_\-]*)*(?:\.\{[a-zA-Z_][a-zA-Z0-9_\-]*\})?)\})?|<(\/|!--(\s*\{)?)?|$)/g,R=/([a-z_][a-z0-9\-_]*)(:|\{|\s*(\/?>)?)/ig,U=/([a-z_][a-z0-9_\-]*)(:|\{|=|\s*)|(\/?>)/ig,z=/(.|[\r\n])*?-->/g,W=/([a-z_][a-z0-9_\-]*(?::[a-z_][a-z0-9_\-]*)?)>/ig,X=/([a-z_][a-z0-9_]*)(\||\}\s*)/ig,V=/"((?:(\\")|[^"])*?)"\s*/g,$=/^/g,J=/^(area|base|br|col|command|embed|hr|img|input|link|meta|param|source)$/i,K={text:/((?:.|[\r\n])*?)(?:<\/b:text>|$)/g,style:/((?:.|[\r\n])*?)(?:<\/b:style>|$)/g},Q=/\\"/g,G=function(e){var t=[],n=[],r={childs:t},i,s,o,u,a=!1,f=0,l,c=q,h=0,p;e=e.trim();while(h<e.length||c!=q){c.lastIndex=h,u=h,p=c.exec(e);if(!p||p.index!==h){if(c==X&&s&&s.type==T){c=z;continue}a&&(r=n.pop()),s&&r.childs.pop();if(s=r.childs.pop())s.type==x&&!s.refs?f-="len"in s?s.len:s.value.length:r.childs.push(s);a=!1,c=q;continue}h=c.lastIndex;switch(c){case q:l=u+p[1].length,f!=l&&(i=f==u?p[1]:e.substring(f,l),s=i.replace(/\s*(\r\n?|\n\r?)\s*/g,""),s&&r.childs.push({type:x,len:i.length,value:s})),f=l,p[3]?r.childs.push({type:x,refs:["l10n:"+p[3]],value:"{l10n:"+p[3]+"}"}):p[2]=="{"?(o=h-1,r.childs.push(s={type:x}),c=X):p[4]?p[4]=="/"?(s=null,c=W):(r.childs.push(s={type:T}),p[5]?(o=h-p[5].length,c=X):(o=h,c=z)):p[2]&&(a=!0,n.push(r),r.childs.push(s={type:y,attrs:[],childs:[]}),r=s,c=R);break;case W:p[1]!==(r.prefix?r.prefix+":":"")+r.name?r.childs.push({type:x,value:"</"+p[0]}):r=n.pop(),c=q;break;case R:case U:if(p[2]==":"){s.prefix?c=$:s.prefix=p[1];break}p[1]&&(s.name=p[1],s.type==b&&r.attrs.push(s));if(p[2]=="{"){s.type==y?c=X:c=$;break}if(p[3]){a=!1;if(p[3]=="/>"||!r.prefix&&J.test(r.name))r=n.pop();else if(r.prefix=="b"&&r.name in K){c=K[r.name];break}c=q;break}if(p[2]=="="){c=V;break}s={type:b},c=U;break;case z:s.value=e.substring(o,h-3),c=q;break;case X:s.refs?s.refs.push(p[1]):s.refs=[p[1]],p[2]!="|"&&(s.type==x?(h-=p[2].length-1,s.value=e.substring(o,h),c=q):s.type==T?c=z:s.type==b&&e[h]=="="?(h++,c=V):(s={type:b},c=U));break;case V:s.value=p[1].replace(Q,'"'),s={type:b},c=U;break;case K.text:case K.style:r.childs.push({type:x,value:p[1]}),r=n.pop(),c=q;break;default:throw 29}c==q&&(f=h)}return f!=h&&r.childs.push({type:x,value:e.substring(f,h)}),t.templateTokens=!0,t},Y={},Z=n.Token.subclass({className:a+".L10nProxyToken",token:null,url:"",init:function(e){this.url=e.dictionary.resource.url+":"+e.name,this.token=e,this.set(),e.attach(this.set,this)},set:function(){return n.Token.prototype.set.call(this,this.token.type=="markup"?et(this.token.value,this.token.name+"@"+this.token.dictionary.resource.url):"")},destroy:function(){n.Token.prototype.destroy.call(this),this.token=null}}),it=function(){function P(e){return(e.prefix?e.prefix+":":"")+e.name}function B(e,t){return f[t]||(t.charAt(0)=="#"?f[t]=String.fromCharCode(t.charAt(1)=="x"||t.charAt(1)=="X"?parseInt(t.substr(2),16):t.substr(1)):l&&(l.innerHTML=e,f[t]=l.firstChild?l.firstChild.nodeValue:e)),f[t]||e}function j(e){return e.replace(a,B)}function F(e){var t=e.refs;return!t||!t.length?0:t}function I(e){var t,n=[],r=[],i={};for(var s=0;s<e.length;s++)s%2?(t=e[s],i[t]||(i[t]=n.length,n.push(t)),r.push(i[t])):e[s]&&r.push(j(e[s]));return[n,r]}function q(e,n){var a=0,f,l;if(n)switch(e){case"class":if(f=n.match(t)){var c=[];a=[];for(var h=0,p;p=f[h];h++)(l=p.match(r))?a.push([l[1]||"",l[2]]):c.push(p);n=c.join(" ")}break;case"style":var d=[];a=[];if(f=n.match(i))for(var h=0,p;p=f[h];h++){var l=p.match(s),v=l[1],n=l[2].trim(),m=n.split(o);if(m.length>1){var g=I(m);g.push(v),a.push(g)}else d.push(v+": "+j(n))}n=d.join("; "),n&&(n+=";");break;default:f=n.split(u),f.length>1?a=I(f):n=j(n)}return a&&!a.length&&(a=0),{binding:a,value:n,type:_[e]||2}}function R(e,t,n){var r=e.attrs,i=[],s,o,a;for(var f=0,l;l=r[f];f++){if(l.prefix=="b"){switch(l.name){case"ref":var c=(l.value||"").trim().split(/\s+/);for(var h=0;h<c.length;h++)U(t,c[h]);break;case"show":case"hide":o=l}continue}if(a=l.name.match(O)){i.push(a[1]==l.value?[S,a[1]]:[S,a[1],l.value]);continue}var p=q(l.name,l.value),d=[p.type,p.binding,F(l)];p.type==2&&d.push(P(l)),p.value&&(!n||!p.binding||p.type!=2)&&d.push(p.value),p.type==E&&(s=d),i.push(d)}if(o){s||(s=[E,0,0],i.push(s)),s[1]||(s[1]=[]);var v=I((o.value||o.name).split(u));v[0].length-v[1].length?s[3]=(s[3]?s[3]+"; ":"")+(o.name=="show"^o.value===""?"":"display: none"):(o.name=="show"&&(s[3]=(s[3]?s[3]+"; ":"")+"display: none"),s[1].push(v.concat("display",o.name)))}return i.length?i:0}function U(e,t){e[k]||(e[k]=[]),p(e[k],t),t!="element"&&(e[C]=e[k].length==1?t:0)}function z(e,t){var n=e[k].indexOf(t);if(n!=-1){var r=e[C]&&typeof e[C]=="number";e[k].splice(n,1),r&&n==e[C]-1&&(e[C]=t),e[k].length?r&&(e[C]-=n<e[C]-1):e[k]=0}}function W(e){var t={};if(e.attrs)for(var n=0,r;r=e.attrs[n];n++)t[P(r)]=r.value;return t}function X(e,t){for(var n=0;n<t.length;n++)p(e,t[n])}function V(e,t,n){for(var r=0,i;i=t[r];r++)i[1]!==g&&(i[1]=n+i[1]);e.unshift.apply(e,t)}function $(e,t,r,i){var s;if(r)s=c.resolve(e.baseURI+r);else{var o=t.childs[0];s=n.resource.virtual("css",o?o.value:"",e.sourceUrl).url}return e.resources.push([s,i]),s}function J(t,r,i,s){function o(t,n,r){var s=W(t);n&&(s.name=n);if(!s.name)return;if(!e.test(s.name))return;var o=ht[s.ref||"element"];if(o&&o.token[N]==y){var u=o.token,a=s.name.match(O),f=a?S:_[s.name]||b,l=D[f]||A,c=u&&h(u,s.name,function(e){return e[N]==S?"event-"+e[1]:M[e[N]]||e[L]},H);!c&&r!="remove"&&(a?c=[f,a[1]]:(c=[f,0,0,f==b?s.name:""],f==b&&c.push("")),u||(u=[],o.token.push(u)),u.push(c));var v=s.name=="class"||s.name=="style";switch(r){case"set":if(c[N]==S){s.value==a[1]?c.length=2:c[l]=s.value;return}var m=q(s.name,s.value);c[C]=m.binding,!i.optimizeSize||!c[C]||v?c[l]=m.value||"":c.length=l;if(v&&!c[C]&&!c[l]){d(u,c);return}break;case"append":var m=q(s.name,s.value);if(!a)if(m.binding){var g=c[C];if(g)switch(s.name){case"style":var w={};for(var E=0,x;x=g[E];E++)w[x[2]]=E;for(var E=0,T;T=m.binding[E];E++)T[2]in w?g[w[T[2]]]=T:g.push(T);break;case"class":g.push.apply(g,m.binding);break;default:m.binding[0].forEach(function(e){p(this,e)},g[0]);for(var E=0;E<m.binding[1].length;E++){var k=m.binding[1][E];typeof k=="number"&&(k=g[0].indexOf(m.binding[0][k])),g[1].push(k)}}else c[C]=m.binding,v||c[C][1].unshift(c[l])}else!v&&c[C]&&c[C][1].push(s.value);m.value&&(c[l]=(c[l]||"")+(c[l]&&(a||v)?" ":"")+m.value);if(v&&!c[C]&&!c[l]){d(u,c);return}break;case"remove":c&&d(u,c)}}}var u=[];for(var a=0,f,l;f=t[a];a++){var w=F(f),E=w&&w.length==1?w[0]:0;switch(f.type){case y:if(f.prefix=="b"){var k=W(f);switch(f.name){case"style":var B=k.namespace||k.ns,I=B?g:s&&s.isolate||"",Y=$(r,f,k.src,I);B&&(Y in g==0&&(g[Y]=nt()),r.styleNSPrefix[B]=g[Y]);break;case"isolate":r.isolate||(r.isolate=k.prefix||i.isolate||nt());break;case"l10n":k.src&&(r.dictURI=c.resolve(r.baseURI,k.src));break;case"define":if("name"in k&&!r.defines[k.name])switch(k.type){case"bool":r.defines[k.name]=[k["default"]=="true"?1:0];break;case"enum":var et=k.values?k.values.trim().split(" "):[];r.defines[k.name]=[et.indexOf(k["default"])+1,et]}break;case"text":var rt=f.childs[0];t[a--]=n.object.extend(rt,{refs:(k.ref||"").trim().split(/\s+/),value:"notrim"in k?rt.value:rt.value.replace(/^\s*[\r\n]+|[\r\n]\s*$/g,"")});break;case"include":var it=k.src;if(it){var st=/^#\d+$/.test(it),ot=/^id:/.test(it),ut=st?it.substr(1):it,at;st?at=v[ut]:ot?at=pt(ut.substr(3)):/^[a-z0-9\.]+$/i.test(ut)&&!/\.tmpl$/.test(ut)?at=wt(ut):at=n.resource(c.resolve(r.baseURI+ut));if(!at)continue;if(m.indexOf(at)==-1){var lt="isolate"in k?k.isolate||nt():"",ct;ot||p(r.deps,at),st?(at.source.bindingBridge&&p(r.deps,at.source),ct=ft(at.source,at.baseURI,!0,i)):ct=ft(at,at.url?c.dirname(at.url)+"/":"",!0,i),ct.resources&&"no-style"in k==0&&V(r.resources,ct.resources,lt),ct.deps&&X(r.deps,ct.deps);var ht=Q(ct.tokens),dt=(f.childs||[]).slice(),vt=n.object.slice(ct.styleNSPrefix);k["class"]&&dt.push({type:y,prefix:"b",name:"append-class",attrs:[{type:b,name:"value",value:k["class"]}]}),k.id&&dt.push({type:y,prefix:"b",name:"set-attr",attrs:[{type:b,name:"name",value:"id"},{type:b,name:"value",value:k.id}]}),k.ref&&ht.element&&k.ref.trim().split(/\s+/).map(function(e){U(ht.element.token,e)});for(var mt=0,gt;gt=dt[mt];mt++)if(gt.type==y&&gt.prefix=="b")switch(gt.name){case"style":var yt=W(gt),B=yt.namespace||yt.ns,I=B?g:lt,Y=$(r,gt,yt.src,I);B&&(Y in g==0&&(g[Y]=nt()),vt[B]=g[Y]);break;case"replace":case"remove":case"before":case"after":var bt=gt.name=="replace"||gt.name=="remove",yt=W(gt),Et="ref"in yt||!bt?yt.ref:"element",St=Et&&ht[Et];if(St){var xt=St.owner.indexOf(St.token);if(xt!=-1){var Tt=[xt+(gt.name=="after"),bt];gt.name!="remove"&&(Tt=Tt.concat(J(gt.childs,r,i)||[])),St.owner.splice.apply(St.owner,Tt)}}break;case"prepend":case"append":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;if(f&&f[N]==y){var Nt=J(gt.childs,r,i)||[];gt.name=="prepend"?f.splice.apply(f,[H,0].concat(Nt)):f.push.apply(f,Nt)}break;case"attr":case"set-attr":o(gt,!1,"set");break;case"append-attr":o(gt,!1,"append");break;case"remove-attr":o(gt,!1,"remove");break;case"class":case"append-class":o(gt,"class","append");break;case"set-class":o(gt,"class","set");break;case"remove-class":o(gt,"class","remove");break;case"add-ref":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;f&&yt.name&&U(f,yt.name);break;case"remove-ref":var yt=W(gt),Et="ref"in yt?yt.ref:"element",St=Et&&ht[Et],f=St&&St.token;f&&z(f,yt.name||yt.ref);break;default:}else ct.tokens.push.apply(ct.tokens,J([gt],r,i)||[]);ht.element&&z(ht.element.token,"element"),n.object.complete(r.styleNSPrefix,vt),lt?Z(ct.tokens,lt):ct.isolate&&!r.isolate&&(r.isolate=i.isolate||nt()),u.push.apply(u,ct.tokens)}}}continue}l=[1,E,w,P(f)],l.push.apply(l,R(f,l,i.optimizeSize)||[]),l.push.apply(l,J(f.childs,r,i)||[]);break;case x:w&&w.length==2&&h(w,"element")&&(E=w[+!w.lastSearchIndex]);if(E){var Ct=K(E,r.dictURI),kt=Ct.split(/[:@\{]/);if(kt[0]=="l10n"&&kt.length==3)if(!kt[2])d(w,E),w.length==0&&(w=null),E=0,f.value=f.value.replace(/\}$/,"@undefined}");else{var Lt=kt.slice(1).join("@"),At=n.l10n.token(Lt),Ot=tt(At);r.l10nResolved=!0;if(Ot&&At.type=="markup"){t[a--]=G('<b:include src="#'+Ot.templateId+'"/>')[0];continue}}}l=[3,E,w],(!w||f.value!="{"+w.join("|")+"}")&&l.push(j(f.value));break;case T:if(i.optimizeSize&&!E&&!w)continue;l=[8,E,w],i.optimizeSize||(!w||f.value!="{"+w.join("|")+"}")&&l.push(j(f.value))}while(l[l.length-1]===0)l.pop();u.push(l)}return u.length?u:0}function K(e,t){if(typeof e!="string")return e;var n=e.split(":");return n.length==2&&n[0]=="l10n"&&n[1].indexOf("@")==-1&&(n[1]=n[1]+"@"+t),n.join(":")}function Q(e,t,n,r){n||(n={});for(var i=r||0,s;s=e[i];i++){if(s[N]==S)continue;var o=s[k];if(o)for(var u=o.length-1,a;a=o[u];u--){if(a.indexOf(":")!=-1){z(s,a);continue}n[a]&&z(n[a].token,a),s[C]==a&&(s[C]=u+1),n[a]={owner:e,token:s}}switch(s[N]){case x:s[C]=K(s[C],t);break;case b:if(s[C]){var f=s[C][0];for(var u=0;u<f.length;u++)f[u]=K(f[u],t)}break;case y:Q(s,t,n,H)}}return n}function Y(e,t,n,r){var i=0;for(var s=r||0,o;o=e[s];s++){var u=o[N];u==y&&(i+=Y(o,t,n,H));if(u==w||u==b&&o[L]=="class"){var a=o[C],f=D[u];if(a){var l=(o[f]||"").trim().split(" ");for(var c=0,h;h=a[c];c++){if(h.length>2)continue;var d=h[1].split(":").pop(),v=t.defines[d];v?(h.push.apply(h,v),v.used=!0,v[0]&&(v.length==1?p(l,h[0]+d):p(l,h[0]+v[1][v[0]-1]))):i++}o[f]=l.join(" "),n.optimizeSize&&!o[f]&&(o.length=f)}}}return i}function Z(e,t,n,r){function i(e){var r=e.split(":");return r.length==1?t+r[0]:n?r[0]?r[0]in n.styleNSPrefix==0?e:n.styleNSPrefix[r[0]]+r[1]:r[1]:e}for(var s=r||0,o;o=e[s];s++){var u=o[N];u==y&&Z(o,t,n,H);if(u==w||u==b&&o[L]=="class"){var a=o[C],f=D[u];o[f]&&(o[f]=o[f].split(/\s+/).map(i).join(" "));if(a)for(var l=0,c;c=a[l];l++)c[0]=i(c[0])}}}var e=/^[a-z_][a-z0-9_\-]*$/i,t=/(\S+)/g,r=/^((?:[a-z_][a-z0-9_\-]*)?(?::(?:[a-z_][a-z0-9_\-]*)?)?)\{((anim:)?[a-z_][a-z0-9_\-]*)\}$/i,i=/\s*[^:]+?\s*:(?:\(.*?\)|".*?"|'.*?'|[^;]+?)+(?:;|$)/gi,s=/\s*([^:]+?)\s*:((?:\(.*?\)|".*?"|'.*?'|[^;]+?)+);?$/i,o=/\{([a-z_][a-z0-9_]*)\}/i,u=/\{([a-z_][a-z0-9_]*|l10n:[a-z_][a-z0-9_]*(?:\.[a-z_][a-z0-9_]*)*(?:\.\{[a-z_][a-z0-9_]*\})?)\}/i,a=/&([a-z]+|#[0-9]+|#x[0-9a-f]{1,4});?/gi,f=n.NODE_ENV?__nodejsRequire("./template/htmlentity.json"):{},l=n.NODE_ENV?null:document.createElement("div"),m=[],g={};return function(t,r,i,s,o){i=i||{};var u=[],a={sourceUrl:s,baseURI:r||"",tokens:null,resources:[],styleNSPrefix:{},deps:[],defines:{},unpredictable:!0,warns:u,isolate:!1};a.dictURI=s?n.path.resolve(s):r||"";if(a.dictURI){var f=n.path.extname(a.dictURI);f&&f!=".l10n"&&(a.dictURI=a.dictURI.substr(0,a.dictURI.length-f.length)+".l10n")}t.templateTokens||(t=G(String(t))),t.warns&&u.push.apply(u,t.warns),m.push(o!==!0&&o||{}),a.tokens=J(t,a,i),m.pop(),a.tokens||(a.tokens=[[3,0,0,""]]),U(a.tokens[0],"element"),Q(a.tokens,a.dictURI),a.unpredictable=!!Y(a.tokens,a,i);if(m.length==0){Z(a.tokens,a.isolate||"",a);if(a.isolate)for(var l=0,c;c=a.resources[l];l++)c[1]!==g&&(c[1]=a.isolate+c[1]);a.resources=a.resources.filter(function(e,t,r){return!n.array.search(r,String(e),String,t+1)}).map(function(e){var t=e[0],r=e[1];r===g&&(r=g[t]);if(!r)return t;var i=n.resource.virtual("css","").ready(function(e){s(),n.object.extend(e,{url:t+"?isolate-prefix="+r,baseURI:n.path.dirname(t)+"/"})}),s=n.resource(t).ready(function(e){var t=rt(e.cssText||"",r);i.update(t)});return i.url})}return delete a.defines,delete a.l10nResolved,u.length||(a.warns=!1),a}}(),ct={},dt=f(null,{className:a+".Template",__extend__:function(e){return e instanceof dt?e:e instanceof vt?new mt(e):new dt(e)},source:"",baseURI:"",init:function(e){if(v.length==4096)throw 30;this.attaches_=[],this.setSource(e||""),this.templateId=v.push(this)-1},bindingBridge:{attach:function(e,t,n){for(var r=0,i;i=e.attaches_[r];r++)if(i.handler==t&&i.context==n)return;e.attaches_.push({handler:t,context:n})},detach:function(e,t,n){for(var r=0,i;i=e.attaches_[r];r++)if(i.handler==t&&i.context==n){e.attaches_.splice(r,1);return}},get:function(){}},createInstance:function(e,t,n,r,i){return lt.call(this),this.createInstance(e,t,n,r,i)},clearInstance:function(e){},getIsolatePrefix:function(){return"i"+this.templateId+"__"},getBinding:function(e){return lt.call(this),this.getBinding(e)},setSource:function(e){var t=this.source;if(t!=e){if(typeof e=="string"){var r=e.match(/^([a-z]+):/);if(r){var i=r[1];e=e.substr(r[0].length);switch(i){case"file":e=n.resource(e);break;case"id":e=pt(e);break;case"tokens":e=n.string.toObject(e),e.isDecl=!0;break;case"raw":break;case"path":e=wt(e);break;default:}}}if(t&&t.bindingBridge){var s=t.url&&m[t.url];s&&(d(s,this),s.length||delete m[t.url]),this.baseURI="",this.source.bindingBridge.detach(t,ut,this)}e&&e.bindingBridge&&(e.url&&(this.baseURI=c.dirname(e.url)+"/",m[e.url]||(m[e.url]=[]),p(m[e.url],this)),e.bindingBridge.attach(e,ut,this)),this.source=e,ut.call(this)}},destroy:function(){this.destroyBuilder&&this.destroyBuilder(),this.attaches_=null,this.createInstance=null,this.getBinding=null,this.resources=null,this.source=null}}),vt=function(e){n.object.extend(this,e)},mt=n.Class(null,{className:a+".TemplateSwitcher",ruleRet_:null,templates_:null,templateClass:dt,ruleEvents:null,rule:String,init:function(e){this.ruleRet_=[],this.templates_=[],this.rule=e.rule;var t=e.events;if(t&&t.length){this.ruleEvents={};for(var n=0,r;r=t[n];n++)this.ruleEvents[r]=!0}l.add(this)},resolve:function(e){var t=this.rule(e),n=this.ruleRet_.indexOf(t);return n==-1&&(this.ruleRet_.push(t),n=this.templates_.push(new this.templateClass(t))-1),this.templates_[n]},destroy:function(){this.rule=null,this.templates_=null,this.ruleRet_=null}}),yt=f(null,{className:a+".Theme",get:wt}),bt=f(n.Token,{className:a+".SourceWrapper",path:"",url:"",baseURI:"",init:function(e,t){this.path=t,n.Token.prototype.init.call(this,"")},get:function(){return this.value&&this.value.bindingBridge?this.value.bindingBridge.get(this.value):this.value},set:function(){var e=xt(Mt,this.path);this.value!=e&&(this.value&&this.value.bindingBridge&&this.value.bindingBridge.detach(this.value,bt.prototype.apply,this),this.value=e,this.url=e&&e.url||"",this.baseURI=(typeof e=="object"||typeof e=="function")&&"baseURI"in e?e.baseURI:c.dirname(this.url)+"/",this.value&&this.value.bindingBridge&&this.value.bindingBridge.attach(this.value,bt.prototype.apply,this),this.apply())},destroy:function(){this.url=null,this.baseURI=null,this.value&&this.value.bindingBridge&&this.value.bindingBridge.detach(this.value,this.apply,this),n.Token.prototype.destroy.call(this)}}),Lt={},At={},Ot=kt(),Mt="base",_t=[];l.add({destroy:function(){for(var e in At)At[e].destroy();Lt=null,At=null;for(var t=0,n;n=v[t];t++)n.destroy();v=null}}),t.exports={DECLARATION_VERSION:g,TYPE_ELEMENT:y,TYPE_ATTRIBUTE:b,TYPE_ATTRIBUTE_CLASS:w,TYPE_ATTRIBUTE_STYLE:E,TYPE_ATTRIBUTE_EVENT:S,TYPE_TEXT:x,TYPE_COMMENT:T,TOKEN_TYPE:N,TOKEN_BINDINGS:C,TOKEN_REFS:k,ATTR_NAME:L,ATTR_VALUE:A,ATTR_NAME_BY_TYPE:M,ELEMENT_NAME:P,ELEMENT_ATTRS:H,ELEMENT_CHILDS:B,TEXT_VALUE:j,COMMENT_VALUE:F,L10nProxyToken:Z,TemplateSwitchConfig:vt,TemplateSwitcher:mt,Template:dt,SourceWrapper:bt,switcher:gt,tokenize:G,isolateCss:rt,getDeclFromSource:ft,makeDeclaration:it,getL10nTemplate:tt,Theme:yt,theme:kt,getThemeList:function(){return n.object.keys(Lt)},currentTheme:function(){return Lt[Mt].theme},setTheme:function(e){return kt(e).apply()},onThemeChange:Dt,define:Ot.define,get:wt,getPathList:function(){return n.object.keys(At)}}},"7.js":function(e,t,n,r,i,s,o,u){function X(e){var t=n.template.getL10nTemplate(e),r=t.templateId,i=W[r];return i||(i=W[r]=new et(t.source)),i}function V(e){return function(t){if(t.type=="click"&&t.which==3)return;var n=j[t.type]||t.type!="mouseenter"&&t.type!="mouseleave",r=t.sender,i;while(r){i=r.getAttribute&&r.getAttribute(e);if(!n||typeof i=="string")break;r=r.parentNode}if(typeof i=="string"){var s=r,o=s,u,a;if(j[t.type]){var f=t.relatedTarget;f&&(s===f||s.contains(f))&&(s=null)}while(s){u=s[_];if(typeof u=="number")if(a=K(u))break;s=s.parentNode}if(a&&a.action){var l=i.trim().split(/\s+/);t.actionTarget=o;for(var c=0,h;h=l[c++];)switch(h){case"prevent-default":t.preventDefault();break;case"stop-propagation":t.stopPropagation();break;default:a.action.call(a.context,h,t)}}}t.type in B&&B[t.type](t,r)}}function J(e){var t=e&4095,n=P[t];return n&&n.template}function K(e){var t=e&4095,n=e>>12,r=P[t];return r&&r.instances[n]}function Q(e){var t=K(e);return t&&t.context}function G(e){var t=K(e);return t&&t.tmpl}function Y(e){var t=K(e);return t&&t.debug&&t.debug()}n.require("./8.js"),n.require("./2.js"),n.require("./6.js"),n.require("./9.js");var a=this.path,f=r.document,l=n.dom.event,c=n.array.from,h=n.string.camelize,p=n.l10n.token,d=n.template.htmlfgen.getFunctions,v=n.template.TemplateSwitchConfig,m=n.template.TemplateSwitcher,g=n.template.Template,y=n.template.TYPE_ELEMENT,b=n.template.TYPE_ATTRIBUTE,w=n.template.TYPE_TEXT,E=n.template.TYPE_COMMENT,S=n.template.TOKEN_TYPE,x=n.template.TOKEN_BINDINGS,T=n.template.TOKEN_REFS,N=n.template.ATTR_NAME,C=n.template.ATTR_VALUE,k=n.template.ATTR_NAME_BY_TYPE,L=n.template.ELEMENT_NAME,A=n.template.TEXT_VALUE,O=n.template.COMMENT_VALUE,M=/^event-(.+)+/,_="basisTemplateId_"+n.genUID(),D={},P={},H={svg:"http://www.w3.org/2000/svg"},B={},j={},F="onmouseenter"in f.documentElement,I=!f.addEventListener&&"__basisTemplate"+parseInt(1e9*Math.random());I&&(r[I]=function(e,t){l.fireEvent(f,e),t.returnValue=!0;var n=D[e];n&&n(new l.Event(t))});var q=function(){var e=f.createElement("div");return e.appendChild(f.createTextNode("a")),e.appendChild(f.createTextNode("a")),e.cloneNode(true).childNodes.length==1}(),R=function(){var e=f.createElement("div");return e.setAttribute("class","a"),!e.className}(),U=function(){var e=f.createElement("div");return e.setAttribute("style","position:absolute"),e.style.position!="absolute"}(),z=!!function(){try{return f.documentElement.style.color="x"}catch(e){}}();typeof Node!="undefined"&&!Node.prototype.contains&&(Node.prototype.contains=function(e){return!!(this.compareDocumentPosition(e)&16)});var W={},$=function(e,t){function n(e,t){r(t),j[e]=!0,B[t]=function(t){t=new l.Event(t),t.type=e,D[e](t)},B[e]=function(t,n){n=n&&n.parentNode,n&&(t=new l.Event(t),t.type=e,t.sender=n,D[e](t))}}function r(e){if(!D[e]){D[e]=V("event-"+e);if(!I){if(!F&&e=="mouseenter")return n(e,"mouseover");if(!F&&e=="mouseleave")return n(e,"mouseout");for(var t=0,r=l.browserEvents(e),i;i=r[t];t++)l.addGlobalHandler(i,D[e])}}}function i(e,t){r(e),I&&o.setAttribute("on"+e,I+'("'+e+'",event)'),o.setAttribute("event-"+e,t)}function s(e,t){R&&e=="class"&&(e="className");if(U&&e=="style")return o.style.cssText=t;o.setAttribute(e,t)}var o=t||f.createDocumentFragment();for(var u=t?4:0,a;a=e[u];u++)switch(a[S]){case y:var c=a[L],h=c.split(/:/),p=h.length>1?f.createElementNS(H[h[0]],c):f.createElement(c);$(a,p),o.appendChild(p);break;case b:var d=a[N],v=a[C],m=d.replace(/^event-/,"");m!=d?i(m,v):(d!="class"&&d!="style"?!a[x]:v)&&s(d,v||"");break;case 4:case 5:var v=a[C-1];v&&s(k[a[S]],v);break;case 6:i(a[1],a[2]||a[1]);break;case E:o.appendChild(f.createComment(a[O]||(a[T]?"{"+a[T].join("|")+"}":"")));break;case w:q&&u&&e[u-1][S]==w&&o.appendChild(f.createComment("")),o.appendChild(f.createTextNode(a[A]||(a[T]?"{"+a[T].join("|")+"}":"")||(a[x]?"{"+a[x]+"}":"")))}return!t&&e.length==1&&(o=o.firstChild),o},Z=function(){function m(){this.set(this.name,this.value)}function g(e,t,r){var i=t&&t.bindingBridge,s=this.attaches&&this.attaches[e],o=null;if(i||s)if(i){if(!s||t!==s.value){s&&(s.tmpl&&(s.tmpl.element.toString=null,X(s.value).clearInstance(s.tmpl)),s.value.bindingBridge.detach(s.value,m,s));if(t.type=="markup"&&t instanceof n.l10n.Token){var u=X(t),a=this.context,f=this.bindings,l=this.bindingInterface;o=u.createInstance(a,null,function h(){o=c.tmpl=u.createInstance(a,null,h,f,l),o.element.toString=function(){return t.value},m.call(c)},f,l),o.element.toString=function(){return t.value}}this.attaches||(this.attaches=new r);var c=this.attaches[e]={name:e,value:t,tmpl:o,set:this.tmpl.set};i.attach(t,m,c)}else o=t&&t.type=="markup"?s.tmpl:null;if(o)return o.element;t=i.get(t)}else s&&(s.tmpl&&(s.tmpl.element.toString=null,X(s.value).clearInstance(s.tmpl)),s.value.bindingBridge.detach(s.value,m,s),this.attaches[e]=null);return t}function y(e,t){var n=e[0],r=e[1],i=t[n],s=t[r];switch(e.length){case 1:return function(t){this(n,i(t))};case 2:return function(t){this(n,i(t)),this(r,s(t))};default:var o=e.map(function(e){return t[e]});return function(n){for(var r=0;r<e.length;r++)this(e[r],o[r](n))}}}function b(e,t){for(var n in e)e[n]=y(e[n],t);return n?e:null}function w(e){var t={};return function(r,i,s,o){if(!r)return{};var u="bindingId"in r?r.bindingId:null,a=t[u];if(!a){var f=[],l={},c={};for(var h=0,p;p=e[h];h++){var d=r[p],v=d&&d.getter;if(v){l[p]=v,f.push(p);if(d.events){var m=String(d.events).trim().split(/\s+|\s*,\s*/);for(var g=0,w;w=m[g];g++)c[w]?c[w].push(p):c[w]=[p]}}}a={names:f,sync:y(f,l),handler:b(c,l)},u&&(t[u]=a)}i&&s&&a.sync.call(s,i);if(!o)return;return a.handler&&o.attach(i,a.handler,s),a.handler}}var e=/\s+/,t=typeof Node=="function"&&f instanceof Node,i=r.DOMTokenList&&f&&f.documentElement.classList instanceof r.DOMTokenList,s=t?function(e,t,n){var r=n&&n instanceof Node?n:e;return r!==t&&t.parentNode.replaceChild(r,t),r}:function(e,t,n){var r=n&&typeof n=="object"?n:e;if(r!==t)try{t.parentNode.replaceChild(r,t)}catch(i){r=e,t!==r&&t.parentNode.replaceChild(r,t)}return r},o=function(e,t,n){var r=s(e,t,n);return r===e&&typeof n=="string"&&(e.innerHTML=n),r},u=s,a=function(e,t,n){var r=s(e,t,n);return r===e&&(e.nodeValue=n),r},l=i?function(e,t,r,i,s){var o=r?i+r:"";return o!=t&&(t&&e.classList.remove(t),o&&(e.classList.add(o),s&&(e.classList.add(o+"-anim"),n.nextTick(function(){e.classList.remove(o+"-anim")})))),o}:function(t,r,i,s,o){var u=i?s+i:"";if(u!=r){var a=t.className,f=typeof a!="string",l;f&&(a=a.baseVal),l=a.split(e),r&&n.array.remove(l,r),u&&(l.push(u),o&&(n.array.add(l,u+"-anim"),n.nextTick(function(){var r=(f?t.className.baseVal:t.className).split(e);n.array.remove(r,u+"-anim"),f?t.className.baseVal=r.join(" "):t.className=r.join(" ")}))),f?t.className.baseVal=l.join(" "):t.className=l.join(" ")}return u},c=z?function(e,t,n,r){return n!==r&&(e.style[h(t)]=r),r}:function(e,t,n,r){if(n!==r)try{e.style[h(t)]=r}catch(i){}return r},v=function(e,t,n,r){return n!==r&&(r?e.setAttribute(t,r):e.removeAttribute(t)),r},E={bind_textNode:a,bind_node:s,bind_element:o,bind_comment:u,bind_attr:v,bind_attrClass:l,bind_attrStyle:c,resolve:g,l10nToken:p,createBindingFunction:w};return function(e){var t=d(e,!0,this.source.url,e.source_,!q,_),n,r={},i={},s=[],o=0,u=$(e),a=this.templateId;P[a]={template:this,instances:r};if(t.createL10nSync){var f=t.createL10nSync(u,i,v,q);for(var l=0,c;c=t.l10nKeys[l];l++)f(c,p(c).value);if(t.l10nKeys)for(var l=0,c;c=t.l10nKeys[l];l++){var h={path:c,token:p(c),handler:function(e){f(this.path,e);for(var t in r)r[t].tmpl.set(this.path,e)}};h.token.attach(h.handler,h),s.push(h),h=null}}return n=t.createInstance(a,r,u,E,i,q),{createInstance:function(e,t,i,s,u){var a=o++,f=n(a,e,t,i,s,u);return r[a]=f,f.tmpl},destroyInstance:function(e){var t=e.templateId_,n=r[t];if(n){n.handler&&n.bindingInterface.detach(n.context,n.handler,n.tmpl.set);for(var i in n.attaches)g.call(n,i,null);delete r[t]}},keys:t.keys,destroy:function(e){for(var n=0,o;o=s[n];n++)o.token.detach(o.handler,o);for(var l in r){var c=r[l];e&&c.rebuild&&c.rebuild.call(c.context);if(!e||l in r){c.handler&&c.bindingInterface.detach(c.context,c.handler,c.tmpl.set);for(var l in c.attaches)g.call(l,null)}}P[a]&&P[a].instances===r&&delete P[a],t=null,u=null,i=null,s=null,f=null,r=null}}}}(),et=g.subclass({className:a+".Template",__extend__:function(e){return e instanceof et?e:e instanceof v?new tt(e):new et(e)},builder:Z}),tt=m.subclass({className:a+".TemplateSwitcher",templateClass:et});t.exports={marker:_,Template:et,TemplateSwitcher:tt},n.template.extend({buildHtml:$,resolveTemplateById:J,resolveObjectById:Q,resolveTmplById:G})},"8.js":function(e,t,n,r,i,s,o,u){function b(e){return y[e]||[e]}function E(e){return e instanceof w?e.event_:e||r.event}function S(e){return typeof e=="string"?f.getElementById(e):e}function x(e){var t=e.target||e.srcElement||f;return t.nodeType==3?t.parentNode:t}function T(e){e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}function N(e){e.preventDefault?e.preventDefault():e.returnValue=!1}function C(e,t){t=S(t),t?R(t,e,C):(N(e),T(e))}function k(e){return e.keyCode||e.which||0}function L(e){return e.charCode||e.keyCode||0}function A(e,t){return typeof e.which=="number"?e.which==t.VALUE:!!(e.button&t.BIT)}function O(e){return e.changedTouches?e.changedTouches[0].pageX:"pageX"in e?e.pageX:"clientX"in e?e.clientX+(f.compatMode=="CSS1Compat"?f.documentElement.scrollLeft:f.body.scrollLeft):0}function M(e){return e.changedTouches?e.changedTouches[0].pageY:"pageY"in e?e.pageY:"clientY"in e?e.clientY+(f.compatMode=="CSS1Compat"?f.documentElement.scrollTop:f.body.scrollTop):0}function _(e){var t=0;return"wheelDelta"in e?t=e.wheelDelta:e.type=="DOMMouseScroll"&&(t=-e.detail),t&&t/Math.abs(t)}function B(e){var t=c(D[e.type]),n=P[e.type],r=new w(e);if(n){n.handler.call(n.thisObject,r),C(e);return}if(t)for(var i=t.length;i-->0;){var s=t[i];s.handler.call(s.thisObject,r)}}function j(e,t,n){P[e]&&F(e),I(e,t,n),P[e]={handler:t,thisObject:n}}function F(e){var t=P[e];t&&(q(e,t.handler,t.thisObject),delete P[e])}function I(e,t,n){var r=D[e];if(r){for(var i=0,s;s=r[i];i++)if(s.handler===t&&s.thisObject===n)return}else H?R(f,e,l):f.addEventListener(e,B,!0),r=D[e]=[];r.push({handler:t,thisObject:n})}function q(e,t,n){var r=D[e];if(r)for(var i=0,s;s=r[i];i++)if(s.handler===t&&s.thisObject===n){r.splice(i,1),r.length||(delete D[e],H?z(f,e,l):f.removeEventListener(e,B,!0));return}}function R(e,t,n,r){e=S(e);if(!e)throw 32;if(typeof n!="function")throw 33;e[p]||(e[p]={});var i={handler:n,thisObject:r},s=e[p],o=s[t];if(!o)o=s[t]=[i],o.fireEvent=function(e){e=E(e);if(H&&e&&D[t]&&typeof e.returnValue=="undefined"){B(e);if(e.cancelBubble===!0)return;typeof e.returnValue=="undefined"&&(e.returnValue=!0)}for(var n=0,r=new w(e),i;i=o[n++];)i.handler.call(i.thisObject,r)},h?e.addEventListener(t,o.fireEvent,!1):e.attachEvent("on"+t,o.fireEvent);else{for(var u=0,a;a=o[u];u++)if(a.handler===n&&a.thisObject===r)return;o.push(i)}}function U(e,t,n){e=S(e);for(var r in t)R(e,r,t[r],n)}function z(e,t,n,r){e=S(e);var i=e[p];if(i){var s=i[t];if(s)for(var o=0,u;u=s[o];o++)if(u.handler===n&&u.thisObject===r){s.splice(o,1),s.length||W(e,t);return}}}function W(e,t){e=S(e);var n=e[p];if(n)if(typeof t!="string")for(t in n)W(e,t);else{var r=n[t];r&&(e.removeEventListener?e.removeEventListener(t,r.fireEvent,!1):e.detachEvent("on"+t,r.fireEvent),delete n[t])}}function X(e,t,n){e=S(e);var r=e[p];r&&r[t]&&r[t].fireEvent(n)}function V(e,t){R(r,"unload",e,t)}function J(e,t){t||(t="div");var n=t+"-"+e;if($[n])return $[n];var r=!1,i=!1;if(!h){var s="on"+e,o=f.createElement("div"),u=o.appendChild(f.createElement(t));o[s]=function(){i=!0};try{u.fireEvent(s),r=!0}catch(a){}}return $[n]={supported:r,bubble:i}}function K(e){return function(t,n){return e(E(t),n)}}var a=this.path,f=r.document,l=n.fn.$null,c=n.array.from,h=!!f.addEventListener,p="__basisEvents",d={BACKSPACE:8,TAB:9,CTRL_ENTER:10,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,ESCAPE:27,SPACE:32,PAGEUP:33,PAGEDOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,INSERT:45,DELETE:46,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123},v={VALUE:1,BIT:1},m={VALUE:2,BIT:4},g={VALUE:3,BIT:2},y={mousewheel:["mousewheel","DOMMouseScroll"]},w=n.Class(null,{className:a+".Event",KEY:d,init:function(e){e=E(e);for(var t in e)typeof e[t]!="function"&&t in this==0&&(this[t]=e[t]);var r=x(e);n.object.extend(this,{event_:e,sender:r,target:r,key:k(e),charCode:L(e),mouseLeft:A(e,v),mouseMiddle:A(e,m),mouseRight:A(e,g),mouseX:O(e),mouseY:M(e),wheelDelta:_(e)})},stopBubble:function(){T(this.event_)},stopPropagation:function(){T(this.event_)},preventDefault:function(){N(this.event_)},die:function(){this.stopBubble(),this.preventDefault()}}),D={},P={},H=!h,$={};t.exports={W3CSUPPORT:h,browserEvents:b,getEventInfo:J,KEY:d,MOUSE_LEFT:v,MOUSE_RIGHT:g,MOUSE_MIDDLE:m,Event:w,sender:K(x),cancelBubble:K(T),cancelDefault:K(N),kill:K(C),key:K(k),charCode:K(L),mouseButton:K(A),mouseX:K(O),mouseY:K(M),wheelDelta:K(_),addGlobalHandler:I,removeGlobalHandler:q,captureEvent:j,releaseEvent:F,addHandler:R,addHandlers:U,removeHandler:z,clearHandlers:W,fireEvent:X,onUnload:V,wrap:E}},"9.js":function(e,t,n,r,i,s,o,u){function C(e,t){return new Function(e,t)}n.require("./6.js");var a=n.template.TYPE_ELEMENT,f=n.template.TYPE_ATTRIBUTE,l=n.template.TYPE_TEXT,c=n.template.TYPE_COMMENT,h=n.template.TOKEN_TYPE,p=n.template.TOKEN_BINDINGS,d=n.template.TOKEN_REFS,v=n.template.ATTR_NAME,m=n.template.ATTR_NAME_BY_TYPE,g=n.template.ELEMENT_NAME,y=n.template.ELEMENT_ATTRS,b=n.template.ELEMENT_CHILDS,w=n.template.TEXT_VALUE,E=n.template.COMMENT_VALUE,S={},x=1,T=function(){function u(e,t){for(var r=0,i;i=e[r];r++)i.indexOf(":")==-1&&n.push(i+":"+t)}function f(n){var r=t.length,i=e[r]||"r"+r;return t.push(i+"="+n),i}function b(e){r.push(e)}function w(e,n,r,E){var S,x,T,N,C;for(var k=0,L=0,A=0,O;O=e[k];k++,L++,N=!1){k?e[k+1]?(O[h]==e[k-1][h]&&O[h]==l&&A++,S=n+".childNodes["+(r?L:L+(A?" + "+A+" * TEXT_BUG":""))+"]"):S=n+".lastChild":S=n+".firstChild";if(x=O[d])N=!0,S=f(S),u(x,S);O[p]&&(O[p]&&typeof O[p]=="number"&&(O[p]=O[d][O[p]-1]),N||(N=!0,S=f(S)),b([O[h],S,O[p]]));if(O[h]==a){T=-1,n==s&&i.push(S+"."+E),N||(S=f(S),T=t.length);var M=[],_=[];for(var D=y,P;P=O[D];D++)P[h]==a||P[h]==l||P[h]==c?_.push(P):M.push(P);for(var D=0,H;H=M[D];D++){if(H[h]==6)continue;var B=m[H[h]]||H[v];if(x=H[d])N=!0,u(x,f(S+'.getAttributeNode("'+B+'")'));if(C=H[p]){N=!0;switch(B){case"class":for(var j=0,F;F=C[j];j++)b([2,S,F[1],B,F[0]].concat(F.slice(2)));break;case"style":for(var j=0,I;I=C[j];j++){o++;for(var q=0,R;R=I[0][q];q++)b([2,S,R,B,I[0],I[1],I[2],I[3],o])}break;default:o++;for(var j=0,R;R=C[0][j];j++)b([2,S,R,B,C[0],C[1],O[g],o])}}}_.length&&w(_,S,r),!N&&T==t.length&&t.pop()}}}var e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),t,n,r,i,s,o;return function(e,u,a,f){return t=[],n=[],r=[],i=[],s=u||"_",o=0,w(e,s,a,f),{path:t,ref:n,binding:r,markedElementList:i}}}(),N=function(){function s(t,n,r){var i=[],s=t[5],o=t[4],u,a;for(var f=0;f<s.length;f++)if(typeof s[f]=="string")i.push('"'+s[f].replace(/"/g,'\\"')+'"');else{u=o[s[f]],a=u.indexOf(":");if(a==-1)i.push(n=="l10n"?'"{'+u+'}"':n=="bool"?"(__"+u+'||"")':"__"+u);else{var l=null,c=u.substr(a+1).replace(e,function(e,t){return l=t,""});l?i.push(r[u.substr(a+1)]):i.push('__l10n["'+c+'"]')}}return i.length==1&&i.push('""'),i.join("+")}var e=/\.\{([a-zA-Z_][a-zA-Z0-9_\-]*)\}/,t={disabled:"*",checked:["input"],indeterminate:["input"],value:["input","textarea","select"],minlength:["input"],maxlength:["input"],readonly:["input"],selected:["option"],multiple:["select"]},r={disabled:!0,checked:!0,selected:!0,readonly:!0,multiple:!0,indeterminate:!0},i={1:"bind_element",3:"bind_textNode",8:"bind_comment"};return function(o){function u(e){N[e]=!0,h.push(p+"="+e+"("+n.array(arguments,1)+");")}var c={},h,p,d=[],m=[],g,y,b=[],w={},E=1,S,x,T={},N={resolve:!0};for(var C=0,k;k=o[C];C++){var L=k[0],A=k[1],O=k[2];if(["get","set","templateId_"].indexOf(O)!=-1)continue;var M=O.split(":"),_=M[0]=="anim";_&&(O=M[1]),h=c[O],p="_"+C,g="__"+O;if(M[0]=="l10n"&&M[1]){var D=M[1],P=null,H=D.replace(e,function(e,t){return P=t,""});if(P){D in w==0&&(g="$l10n_"+E++,w[D]=g,b.push('set("'+g+'",'+g+")"),d.push(g+'=tools.l10nToken("'+H+'").computeToken()'),h=c[P],h||(h=c[P]=[],d.push("__"+P)),h.push(g+".set(__"+P+");")),O=w[D],p="_"+C,g="__"+O,h=c[O],h||(h=c[O]=[],d.push(g)),L==l?(d.push(p+"="+A),u(i[L],A,p,"value")):(B='"'+k[v]+'"',d.push(p),u("bind_attr",A,B,p,s(k,!1,w)));continue}y||(y={}),c[H]||(c[H]=[],y[H]=[]),h=c[H],h.l10n=!0;if(L==l){y[H].push(A+".nodeValue=value;"),h.push(A+'.nodeValue=__l10n["'+H+'"]'+(P?"[__"+P+"]":"")+";");continue}y[H].push("bind_attr("+[A,'"'+k[v]+'"',"NaN",s(k,"l10n",w)]+");")}h||(h=c[O]=[],d.push(g));if(L!=f)if(!h.nodeBind)d.push(p+"="+A),u(i[L],A,p,"value"),h.nodeBind=p;else switch(L){case a:u(i[L],A,A,"value!==null?String(value):null");break;case l:h.push(A+".nodeValue=value;")}else{var B=k[v];switch(B){case"class":var j="",F="value",I=k[4],q=k.length;if(q>=6)if(q==6||typeof k[6]=="string")q==6?(F='value?"'+O+'":""',k[5]&&(j=I+O)):(I="",F='value?"'+k[6]+'":""',k[5]&&(j=k[6]));else{if(!k[6].length)continue;q==7?(F=k[6].map(function(e){return'value=="'+e+'"'}).join("||")+'?value:""',k[5]&&(j=I+k[6][k[5]-1])):(I="",F=k[6].map(function(e,t){return'value=="'+e+'"?"'+this[t]+'"'},k[7]).join(":")+':""',k[5]&&(j=k[7][k[5]-1]))}else F='typeof value=="string"||typeof value=="number"?value:(value?"'+O+'":"")';d.push(p+'="'+j+'"'),u("bind_attrClass",A,p,F,'"'+I+'"',_);break;case"style":var R=s(k,!1,w);x=k[8],T[x]||(T[x]=p,d.push(p+"="+(k[7]=="hide"?'""':'"none"'))),k[7]&&(R=R.replace(/\+""$/,"")+(k[7]=="hide"?'?"none":""':'?"":"none"')),p=T[x],u("bind_attrStyle",A,'"'+k[6]+'"',p,R);break;default:S=t[B],x=k[7],T[x]||(d.push(p+"="+s(k,"l10n",w)),T[x]=p),p=T[x],u("bind_attr",A,'"'+B+'"',p,S&&r[B]?s(k,"bool",w)+'?"'+B+'":""':s(k,!1,w)),S&&(S=="*"||S.indexOf(k[6].toLowerCase())!=-1)&&h.push("if("+A+"."+B+"!="+p+")"+A+"."+B+"="+(r[B]?"!!"+p:p)+";")}}}m.push(';function set(bindName,value){if(typeof bindName!="string")');for(var O in c)c[O].nodeBind&&m.push("if(bindName==="+c[O].nodeBind+")"+'bindName="'+O+'";'+"else ");m.push("return;"),m.push("value=resolve.call(instance,bindName,value,Attaches);switch(bindName){");for(var O in c)m.push('case"'+O+'":'+(c[O].l10n?c[O].join(""):"if(__"+O+"!==value)"+"{"+"__"+O+"=value;"+c[O].join("")+"}")+"break;");m.push("}}");var U=[];for(var z in N)U.push(z+"=tools."+z);return{keys:n.object.keys(c).filter(function(e){return e.indexOf("@")==-1}),tools:U,vars:d,set:m.join(""),l10n:y,l10nCompute:b}}}(),k=function(e,t,r,i,s,o){var u=S[r&&n.path.relative(r)];if(u)return u;var a=T(e,"_",s,o),f=N(a.binding),l=a.markedElementList.join("="),c,h,p={keys:f.keys,l10nKeys:n.object.keys(f.l10n)};e.length==1&&(a.path[0]="a=_");if(f.l10n){var d=[];for(var v in f.l10n)d.push('case"'+v+'":'+'if(value==null)value="{'+v+'}";'+"__l10n[token]=value;"+f.l10n[v].join("")+"break;");p.createL10nSync=C(["_","__l10n","bind_attr","TEXT_BUG"],"var "+a.path+";"+"return function(token, value){"+"switch(token){"+d.join("")+"}"+"}")}return p.createInstance=C(["tid","map","proto","tools","__l10n","TEXT_BUG"],"var getBindings=tools.createBindingFunction(["+f.keys.map(function(e){return'"'+e+'"'})+"]),"+(f.tools.length?f.tools+",":"")+"Attaches=function(){};"+"Attaches.prototype={"+f.keys.map(function(e){return e+":null"})+"};"+"return function createInstance_(id,obj,onAction,onRebuild,bindings,bindingInterface){"+"var _=proto.cloneNode(true),"+a.path.concat(f.vars)+","+"instance={"+"context:obj,"+"action:onAction,"+"rebuild:onRebuild,"+"handler:null,"+"bindings:bindings,"+"bindingInterface:bindingInterface,"+"attaches:null,"+"tmpl:{"+[a.ref,"templateId_:id","set:set"]+"}"+"}"+(l?";if(obj||onAction)"+l+"=(id<<12)|tid":"")+f.set+";if(bindings)instance.handler=getBindings(bindings,obj,set,bindingInterface)"+";"+f.l10nCompute+";return instance"+"}"),p};t.exports={getFunctions:k}},"a.js":function(e,t,n,r,i,s,o,u){function T(e){return typeof e=="string"?f.getElementById(e):e}function N(e){if(S||this.ignoreTarget(e.sender,e))return;var t=b(e.sender);if(e.mouseX<t.left||e.mouseX>t.right||e.mouseY<t.top||e.mouseY>t.bottom)return;S=this,x={initX:e.mouseX,initY:e.mouseY,deltaX:0,minDeltaX:-Infinity,maxDeltaX:Infinity,deltaY:0,minDeltaY:-Infinity,maxDeltaY:Infinity},h("mousemove",C),h("mouseup",k),h("mousedown",k),w&&h("selectstart",c.kill),e.preventDefault(),this.prepareDrag(x,e)}function C(e){var t=e.mouseX-x.initX,r=e.mouseY-x.initY;if(!E){if(!S.startRule(t,r))return;E=!0,S.emit_start(x,e)}S.axisX&&(x.deltaX=S.axisXproxy(n.number.fit(t,x.minDeltaX,x.maxDeltaX))),S.axisY&&(x.deltaY=S.axisYproxy(n.number.fit(r,x.minDeltaY,x.maxDeltaY))),S.emit_drag(x,e)}function k(e){p("mousemove",C),p("mouseup",k),p("mousedown",k),w&&p("selectstart",c.kill);var t=S,n=x;S=null,x=null,E&&(E=!1,t.emit_over(n,e)),e.die()}n.require("./3.js"),n.require("./8.js"),n.require("./b.js"),n.require("./c.js");var a=this.path,f=r.document,l=n.cleaner,c=n.dom.event,h=c.addGlobalHandler,p=c.removeGlobalHandler,d=n.event.Emitter,v=n.event.create,m=n.dom.computedStyle.get,g=n.layout.getOffsetParent,y=n.layout.getBoundingRect,b=n.layout.getViewportRect,w=c.getEventInfo("selectstart").supported,E,S,x,L=d.subclass({className:a+".DragDropElement",element:null,trigger:null,baseElement:null,axisX:!0,axisY:!0,axisXproxy:n.fn.$self,axisYproxy:n.fn.$self,prepareDrag:n.fn.$undef,startRule:n.fn.$true,ignoreTarget:function(e,t){return/^(INPUT|TEXTAREA|SELECT|BUTTON)$/.test(e.tagName)},emit_start:v("start"),emit_drag:v("drag"),emit_over:v("over"),init:function(){d.prototype.init.call(this);var e=this.element,t=this.trigger;this.element=null,this.trigger=null,this.setElement(e,t),this.setBase(this.baseElement),l.add(this)},setElement:function(e,t){this.element=T(e),t=T(t)||this.element,this.trigger!==t&&(this.trigger&&c.removeHandler(this.trigger,"mousedown",N,this),this.trigger=t,this.trigger&&c.addHandler(this.trigger,"mousedown",N,this))},setBase:function(e){this.baseElement=T(e)},getBase:function(){return this.baseElement||(f.compatMode=="CSS1Compat"?f.documentElement:f.body)},isDragging:function(){return S===this},start:function(e){this.isDragging()||N.call(this,e)},stop:function(){this.isDragging()&&k()},destroy:function(){this.stop(),l.remove(this),d.prototype.destroy.call(this),this.setElement(),this.setBase()}}),A=n.Class(null,{className:a+".DeltaWriter",property:null,invert:!1,format:n.fn.$self,init:function(e){typeof this.property=="function"&&(this.property=this.property(e)),typeof this.invert=="function"&&(this.invert=this.invert(this.property)),this.value=this.read(e)},read:function(){return element[this.property]},write:function(e,t){e[this.property]=t},applyDelta:function(e,t){this.invert&&(t=-t),this.write(e,this.format(this.value+t,t))}}),O=A.subclass({className:a+".StyleDeltaWriter",format:function(e,t){return e+"px"},read:function(e){return parseFloat(m(e,this.property))||0},write:function(e,t){e.style[this.property]=t}}),M=O.subclass({property:function(e){return m(e,"left")=="auto"&&m(e,"right")!="auto"?"right":"left"},invert:function(e){return e=="right"}}),_=O.subclass({property:function(e){return m(e,"top")=="auto"&&m(e,"bottom")!="auto"?"bottom":"top"},invert:function(e){return e=="bottom"}}),D=L.subclass({className:a+".MoveableElement",fixTop:!0,fixRight:!0,fixBottom:!0,fixLeft:!0,axisX:M,axisY:_,emit_start:function(e,t){var n=this.element;if(n){var r=b(this.getBase()),i=y(n);e.element=n,this.axisX&&(e.axisX=new this.axisX(n),this.fixLeft&&(e.minDeltaX=r.left-i.left),this.fixRight&&(e.maxDeltaX=r.right-i.right)),this.axisY&&(e.axisY=new this.axisY(n),this.fixTop&&(e.minDeltaY=r.top-i.top),this.fixBottom&&(e.maxDeltaY=r.bottom-i.bottom))}L.prototype.emit_start.call(this,e,t)},emit_drag:function(e,t){if(!e.element)return;e.axisX&&e.axisX.applyDelta(e.element,e.deltaX),e.axisY&&e.axisY.applyDelta(e.element,e.deltaY),L.prototype.emit_drag.call(this,e,t)}});t.exports={DragDropElement:L,MoveableElement:D,DeltaWriter:A,StyleDeltaWriter:O}},"b.js":function(e,t,n,r,i,s,o,u){var a=r.document,f;if("getComputedStyle"in r){var l={top:!0,bottom:!0,left:!0,right:!0,height:!0,width:!0},c=n.fn.runOnce(function(){var e=a.createElement("div");e.setAttribute("style","position:absolute;top:auto!important"),n.doc.body.add(e),r.getComputedStyle(e).top=="auto"&&(l={}),n.doc.remove(e)});f=function(e,t){var n=r.getComputedStyle(e),i;if(n){t in l&&c();if(l[t]&&n.position!="static"){var s=e.style.display;e.style.display="none",i=n.getPropertyValue(t),e.style.display=s}else i=n.getPropertyValue(t);return i}}}else{var h=/^-?(\d*\.)?\d+([a-z]+|%)?$/i,p=/\dpx$/i,d=function(e,t){if(p.test(t))return parseInt(t,10)+"px";var n=e.style,r=e.runtimeStyle,i=n.left,s=r.left;return r.left=e.currentStyle.left,n.left=t||0,t=n.pixelLeft,n.left=i,r.left=s,t+"px"};f=function(e,t){var r=e.currentStyle;if(r){var i=r[t=="float"?"styleFloat":n.string.camelize(t)],s=(i||"").match(h);return s&&s[2]&&s[2]!="px"&&(i=d(e,i)),i}}}t.exports={get:f}},"c.js":function(e,t,n,r,i,s,o,u){function h(e){var t=e.offsetParent||l;while(t&&t!==l&&c(t,"position")=="static")t=t.offsetParent;return t||l}function p(e){var t=0,n=0;if(e&&e.getBoundingClientRect){var i=e.getBoundingClientRect();n=-i.left,t=-i.top}else if(f.compatMode=="CSS1Compat")t=r.pageYOffset||l.scrollTop,n=r.pageXOffset||l.scrollLeft;else{var s=f.body;e!==s&&(t=s.scrollTop-s.clientTop,n=s.scrollLeft-s.clientLeft)}return{x:n,y:t}}function d(e,t){var n=0,r=0;if(e&&e.getBoundingClientRect){var i=e.getBoundingClientRect(),s=p(t);r=i.top+s.y,n=i.left+s.x}return{top:r,left:n}}function v(e,t){var n=0,r=0,i=0,s=0;if(e&&e.getBoundingClientRect){var o=e.getBoundingClientRect(),u=p(t);n=o.top+u.y,r=o.left+u.x,i=o.right+u.x,s=o.bottom+u.y}return{top:n,left:r,right:i,bottom:s,width:i-r,height:s-n}}function m(e,t){var n=d(e,t),r=n.top+e.clientTop,i=n.left+e.clientLeft,s=e.clientWidth,o=e.clientHeight;return{top:r,left:i,bottom:r+o,right:i+s,width:s,height:o}}n.require("./b.js");var a=this.path,f=r.document,l=f.documentElement,c=n.dom.computedStyle.get;t.exports={getOffsetParent:h,getTopLeftPoint:d,getBoundingRect:v,getViewportRect:m}},"1.js":function(e,t,n,r,i,s,o,u){function b(e,t){e.bindingId=y++;for(var r in t){var i=null,s=t[r];P&&s instanceof P||n.resource.isResource(s)?i={events:"satelliteChanged",getter:function(e,t){var n=typeof t=="function"?t:null,r=function(i){r=!1;if(n){t=n();if(t instanceof P==0)return;n=null}i.setSatellite(e,t)};return function(t){return r&&r(t),n||(t.satellite[e]?t.satellite[e].element:null)}}(r,s)}:s&&(typeof s=="string"?s=w.process(r,s):s.bindingBridge&&(s=n.fn.$const(s)),typeof s!="object"?i={getter:typeof s=="function"?s:n.getter(s)}:Array.isArray(s)?i={events:s[0],getter:n.getter(s[1])}:i={events:s.events,getter:n.getter(s.getter)}),e[r]=i}}function k(){return C.pop()||f.createDocumentFragment()}function L(e){var t=e.nodes;if(t)for(var n=t.length-1,r;r=t[n];n--)r.parentNode.insertBefore(r,r.nextSibling)}n.require("./2.js"),n.require("./4.js"),n.require("./5.js"),n.require("./6.js"),n.require("./7.js");var a=this.path,f=r.document,l=n.Class,c=n.event.create,h=n.template.html.Template,p=n.template.html.marker,d=n.template.TemplateSwitcher,v=n.dom.wrapper.Node,m=n.dom.wrapper.PartitionNode,g=n.dom.wrapper.GroupingNode,y=1,w=function(){var e={},t=/^([a-z_][a-z0-9_]*):(.*)/i;return{add:function(t,n){e[t]||(e[t]=n)},process:function(n,r){var i,s=r.match(t);return s&&(i=e[s[1]],r=s[2]||n),i?i(r):r}}}();w.add("data",function(e){return{events:"update",getter:"data."+e}}),w.add("satellite",function(e){return{events:"satelliteChanged",getter:function(t){return t.satellite[e]?t.satellite[e].element:null}}});var E=l.customExtendProperty({state:{events:"stateChanged",getter:function(e){return String(e.state)}},childNodesState:{events:"childNodesStateChanged",getter:function(e){return String(e.childNodesState)}},childCount:{events:"childNodesModified",getter:function(e){return e.childNodes?e.childNodes.length:0}},hasChildren:{events:"childNodesModified",getter:function(e){return!!e.firstChild}},empty:{events:"childNodesModified",getter:function(e){return!e.firstChild}}},b),S={attach:function(e,t,n){e.addHandler(t,n)},detach:function(e,t,n){e.removeHandler(t,n)}},x=l.extensibleProperty({select:function(e){if(this.isDisabled())return;this.contextSelection&&this.contextSelection.multiple?this.select(e.ctrlKey||e.metaKey):this.select()}}),T={"*":function(e){var t=this.templateSwitcher_;t&&t.ruleEvents&&t.ruleEvents[e.type]&&this.setTemplate(t.resolve(this))}},N=new h("<div/>"),C=[],A,O=function(e){return{template:N,emit_templateChanged:c("templateChanged"),templateSwitcher_:null,binding:E,action:x,tmpl:null,element:null,childNodesElement:null,init:function(){this.element=this.childNodesElement=k(),e.init.call(this)},postInit:function(){e.postInit.call(this);var t=this.template;if(t){var n=this.element;this.template=null,this.setTemplate(t),C.push(n),this.container&&(this.container.appendChild(this.element),this.container=null)}},templateSync:function(){var e=this.element,t=this.tmpl,n=this.template.createInstance(this,this.templateAction,this.templateSync,this.binding,S),r;n.childNodesHere&&(n.childNodesElement=n.childNodesHere.parentNode,n.childNodesElement.insertPoint=n.childNodesHere),this.tmpl=n,this.element=n.element,this.childNodesElement=n.childNodesElement||n.element,r=this.childNodesElement.nodeType!=1,r&&(this.childNodesElement=f.createDocumentFragment());if(this.grouping){this.grouping.syncDomRefs();var i=this;while(i.grouping)i=i.grouping;var s=i;for(var o=s.lastChild;o;o=o.previousSibling)o instanceof _?s.insertBefore(o,o.nextSibling):L(o);L(s.nullGroup)}else for(var u=this.lastChild;u;u=u.previousSibling)this.insertBefore(u,u.nextSibling);this instanceof _&&L(this);if(e&&e!==this.element&&e.nodeType!=11){var a=e&&e.parentNode;a&&(this.owner&&this.owner.tmpl&&this.owner.tmpl.set(e,this.element),this.element.parentNode!==a&&a.replaceChild(this.element,e))}t&&this.emit_templateChanged()},setTemplate:function(e){var t=this.templateSwitcher_,n;e instanceof d&&(n=e,e=n.resolve(this)),e instanceof h==0&&(e=null);if(!e)return;n&&(this.templateSwitcher_=n,t||this.addHandler(T,this)),t&&t.resolve(this)!==e&&(this.templateSwitcher_=null,this.removeHandler(T,this));var r=this.tmpl,i=this.template;i!==e&&(this.template=e,this.templateSync(),i&&i.clearInstance(r))},updateBind:function(e){var t=this.binding[e],n=t&&t.getter;n&&this.tmpl&&this.tmpl.set(e,n(this))},templateAction:function(e,t){var n=this.action[e];n&&n.call(this,t)},focus:function(e){var t=this.tmpl?this.tmpl.focus||this.element:null;t&&(A&&(A=n.clearImmediate(A)),A=n.setImmediate(function(){try{t.focus(),e&&t.select()}catch(n){}}))},blur:function(){var e=this.tmpl?this.tmpl.focus||this.element:null;if(e)try{e.blur()}catch(t){}},destroy:function(){var t=this.template,n=this.element;this.templateSwitcher_&&(this.templateSwitcher_=null,this.removeHandler(T,this)),t.clearInstance(this.tmpl),e.destroy.call(this),this.tmpl=null,this.element=null,this.childNodesElement=null;var r=n&&n.parentNode;r&&r.nodeType==1&&r.removeChild(n)}}},M=function(e){return{insertBefore:function(t,n){t=e.insertBefore.call(this,t,n);var r=t.groupNode||this,i=r.childNodesElement||this.childNodesElement,s=t.nextSibling,o=s&&s.element.parentNode==i?s.element:null,u=t.element,a=o||i.insertPoint||null;return(u.parentNode!==i||u.nextSibling!==a)&&i.insertBefore(u,a),t},removeChild:function(t){e.removeChild.call(this,t);var n=t.element,r=n.parentNode;return r&&r.removeChild(n),t},clear:function(t){if(t){var n=this.firstChild;while(n){var r=n.element,i=r.parentNode;i&&i.removeChild(r),n=n.nextSibling}}e.clear.call(this,t)},setChildNodes:function(t,n){var r=f.createDocumentFragment(),i=this.grouping||this,s=i.childNodesElement;i.childNodesElement=r,e.setChildNodes.call(this,t,n),s.insertBefore(r,s.insertPoint||null),i.childNodesElement=s}}},_=l(m,O,{className:a+".PartitionNode",binding:{title:"data:"}}),D=l(g,M,{className:a+".GroupingNode",childClass:_,groupingClass:l.SELF,element:null,childNodesElement:null,emit_ownerChanged:function(e){this.syncDomRefs(),g.prototype.emit_ownerChanged.call(this,e)},init:function(){this.element=this.childNodesElement=f.createDocumentFragment(),g.prototype.init.call(this)},syncDomRefs:function(){var e=this,t=this.owner,n=null;t&&(n=t.tmpl&&t.tmpl.groupsElement||t.childNodesElement);do e.element=e.childNodesElement=n;while(e=e.grouping)},destroy:function(){g.prototype.destroy.call(this),this.element=null,this.childNodesElement=null}}),P=l(v,O,M,{className:a+".Node",binding:{selected:{events:"select unselect",getter:function(e){return e.selected}},unselected:{events:"select unselect",getter:function(e){return!e.selected}},disabled:{events:"disable enable",getter:function(e){return e.isDisabled()}},enabled:{events:"disable enable",getter:function(e){return!e.isDisabled()}}},childClass:l.SELF,childFactory:function(e){return new this.childClass(e)},groupingClass:D}),H=P.subclass({className:a+".ShadowNodeList",emit_ownerChanged:function(e){P.prototype.emit_ownerChanged.call(this,e),this.setDataSource(this.owner&&this.owner.getChildNodesDataset())},getChildNodesElement:function(e){return e.childNodesElement},listen:{owner:{templateChanged:function(){this.childNodes.forEach(function(e){this.appendChild(e.element)},this.getChildNodesElement(this.owner)||this.owner.element)}}},childClass:{className:a+".ShadowNode",getElement:function(e){return e.element},templateSync:function(){P.prototype.templateSync.call(this);var e=this.getElement(this.delegate);e&&(e[p]=this.delegate.element[p],this.element=e)},listen:{delegate:{templateChanged:function(){var e=this.element,t=e.parentNode,n=this.getElement(this.delegate);n&&(n[p]=this.delegate.element[p]),this.element=n||this.tmpl.element,t&&t.replaceChild(this.element,e)}}}}});t.exports={BINDING_PRESET:w,Node:P,PartitionNode:_,GroupingNode:D,ShadowNodeList:H,ShadowNode:H.prototype.childClass}},"e.js":function(e,t,n,r,i,s,o,u){n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.getter,l=n.cleaner,c=n.event.Emitter,h=n.data.AbstractData,p=n.data.Value,d=n.data.STATE,v=p.subclass({className:a+".Property",extendConstructor_:!1,init:function(e,t,n){this.value=e,this.handler=t,this.proxy=n,p.prototype.init.call(this)}}),m=d.priority,g={stateChanged:function(){this.fire(!1,!0)},update:function(){this.fire(!0)},change:function(){this.fire(!0)},destroy:function(e){this.remove(e)}},y=p.subclass({className:a+".ObjectSet",objects:null,value:0,valueChanged_:!1,calculateValue:function(){return this.value+1},calculateOnInit:!1,statePriority:m,stateChanged_:!0,timer_:!1,init:function(){p.prototype.init.call(this);var e=this.objects;this.objects=[],e&&Array.isArray(e)&&(this.lock(),this.add.apply(this,e),this.unlock()),this.valueChanged_=this.stateChanged_=!!this.calculateOnInit,this.update()},add:function(){for(var e=0,t=arguments.length;e<t;e++){var r=arguments[e];if(!(r instanceof h))throw 34;n.array.add(this.objects,r)&&r.addHandler(g,this)}this.fire(!0,!0)},remove:function(e){n.array.remove(this.objects,e)&&e.removeHandler(g,this),this.fire(!0,!0)},clear:function(){for(var e=0,t;t=this.objects[e];e++)t.removeHandler(g,this);this.objects.length=0,this.fire(!0,!0)},fire:function(e,t){this.locked||(this.valueChanged_=this.valueChanged_||!!e,this.stateChanged_=this.stateChanged_||!!t,!this.timer_&&(this.valueChanged_||this.stateChanged_)&&(this.timer_=n.setImmediate(this.update.bind(this))))},lock:function(){this.locked=!0},unlock:function(){this.locked=!1},update:function(){var e=this.valueChanged_,t=this.stateChanged_;this.valueChanged_=!1,this.stateChanged_=!1,this.timer_=n.clearImmediate(this.timer_);if(!l.globalDestroy){e&&this.set(this.calculateValue());if(t){var r=this.objects.length;if(!r)this.setState(d.UNDEFINED);else{var i=-2,s;for(var o=0;o<r;o++){var u=this.objects[o],a=this.statePriority.indexOf(String(u.state));a>i&&(s=u,i=a)}s&&this.setState(s.state,s.state.data)}}}},destroy:function(){this.lock(),this.clear(),this.timer_&&n.clearImmediate(this.timer_),p.prototype.destroy.call(this)}}),b=v.subclass({className:a+".Expression",init:function(e,t){p.prototype.init.call(this);var e=n.array(arguments),t=e.pop();typeof t!="function"&&(t=n.fn.$undef),e.length==1&&e[0].link(this,function(e){this.set(t.call(this,e))});if(e.length>1){var r=new y({objects:e,calculateOnInit:!0,calculateValue:function(){return t.apply(this,e.map(function(e){return e.value}))}});r.link(this,this.set),this.addHandler({destroy:function(){l.globalDestroy||r.destroy()}})}}});t.exports={Property:v,ObjectSet:y,Expression:b}},"f.js":function(e,t,n,r,i,s,o,u){function m(e,t){if(!e.length)return 0;var n,r,i=0,s=e.length-1;do{n=i+s>>1,r=e[n]||0;if(t<r)s=n-1;else{if(!(t>r))return t==r?n:0;i=n+1}}while(i<=s);return n+(r<t)}function k(){}function L(e,t,r){if(!f.isClass(e)||!e.isSubclassOf(g))throw 35;t=n.getter(t),r=r||"update";if(typeof r!="string")throw 36;r=r.trim().split(" ").sort();var i=[e.basisClassId_,t[n.getter.ID],r].join("_"),s=N[i];if(s)return s.owner;var o={};for(var u=0;u<r.length;u++)o[r[u]]=!0;return s=new k,N[i]={owner:s,indexClass:e.subclass({indexId:i,updateEvents:o,valueGetter:t})},s.indexId=i,s}function B(e,t,n){var r=e.indexCache_,i;e.lock();if(t)for(var s=0,o;o=t[s++];){var u=e.normalize(e.valueGetter(o));r[o.basisObjectId]=u,e.add_(u)}if(n)for(var s=0,o;o=n[s++];)i=o.basisObjectId,e.remove_(r[i]),delete r[i];e.unlock()}function q(e,t){if(t instanceof k==0)throw 37;var n=e.basisObjectId,r=I[n];r||(r=I[n]={},e.addHandler(F),F.itemsChanged.call(e,e,{inserted:e.getItems()}));var i=t.indexId,s=r[i];if(!s){t=N[i];if(!t)throw 38;s=new t.indexClass,s.addHandler(C,e),r[i]=s,B(s,e.getItems())}return s}function R(e,t){var n=I[e.basisObjectId];if(n&&n[t.indexId]){delete n[t.indexId],t.removeHandler(C,e);for(var r in n)return;e.removeHandler(F),F.itemsChanged.call(e,e,{deleted:e.getItems()}),delete I[e.basisObjectId]}}function W(){return"calc-index-preset-"+n.number.lead(z++,8)}function X(e,t){var r="min_"+W(),i="max_"+W(),s={};s[r]=D(e,t),s[i]=P(e,t),t=n.getter(t||e);var o=function(e,n,s){return(t(s)-n[r])/(n[i]-n[r])};return o.preset=new U({indexes:s,calc:o})}function V(e,t){var r="max_"+W(),i={};i[r]=P(e,t),t=n.getter(t||e);var s=function(e,n,i){return t(i)/n[r]};return s.preset=new U({indexes:i,calc:s})}function $(e,t){var r="sum_"+W(),i={};i[r]=M(t,e),e=n.getter(e||t);var s=function(t,n,i){return e(i)/n[r]};return s.preset=new U({indexes:i,calc:s})}n.require("./4.js"),n.require("./d.js"),n.require("./e.js");var a=this.path,f=n.Class,l=n.data.Object,c=n.data.KeyObjectMap,h=n.data.ReadOnlyDataset,p=n.data.DatasetWrapper,d=n.data.Value,v=n.data.dataset.MapFilter,g=f(d,{className:a+".Index",autoDestroy:!0,indexCache_:null,valueGetter:n.fn.$null,updateEvents:{},value:0,setNullOnEmitterDestroy:!1,init:function(){this.indexCache_={},d.prototype.init.call(this)},add_:function(e){},remove_:function(e){},update_:function(e,t){},normalize:function(e){return Number(e)||0},destroy:function(){d.prototype.destroy.call(this),this.indexCache_=null}}),y=f(g,{className:a+".Sum",add_:function(e){this.value+=e},remove_:function(e){this.value-=e},update_:function(e,t){this.set(this.value-t+e)}}),b=f(g,{className:a+".Count",valueGetter:n.fn.$true,add_:function(e){this.value+=e},remove_:function(e){this.value-=e},normalize:function(e){return!!e},update_:function(e,t){this.set(this.value-!!t+!!e)}}),w=f(g,{className:a+".Avg",sum_:0,count_:0,add_:function(e){this.sum_+=e,this.count_+=1,this.value=this.sum_/this.count_},remove_:function(e){this.sum_-=e,this.count_-=1,this.value=this.count_?this.sum_/this.count_:0},update_:function(e,t){this.sum_+=e-t,this.set(this.sum_/this.count_)}}),E=f(g,{className:a+".VectorIndex",vectorGetter:n.fn.$null,vector_:null,value:undefined,init:function(){this.vector_=[],g.prototype.init.call(this)},add_:function(e){e!==null&&(this.vector_.splice(m(this.vector_,e),0,e),this.value=this.vectorGetter(this.vector_))},remove_:function(e){e!==null&&(this.vector_.splice(m(this.vector_,e),1),this.value=this.vectorGetter(this.vector_))},update_:function(e,t){t!==null&&this.vector_.splice(m(this.vector_,t),1),e!==null&&this.vector_.splice(m(this.vector_,e),0,e),this.set(this.vectorGetter(this.vector_))},normalize:function(e){return typeof e=="string"||typeof e=="number"?e:null},destroy:function(){g.prototype.destroy.call(this),this.vector_=null}}),S=f(E,{className:a+".Min",vectorGetter:function(e){return e[0]}}),x=f(E,{className:a+".Max",vectorGetter:function(e){return e[e.length-1]}}),T=f(g,{className:a+".Distinct",map_:null,init:function(){this.map_={},g.prototype.init.call(this)},add_:function(e){this.map_.hasOwnProperty(e)||(this.map_[e]=0),++this.map_[e]==1&&(this.value+=1)},remove_:function(e){--this.map_[e]==0&&(this.value-=1)},update_:function(e,t){var n=0;this.map_.hasOwnProperty(e)||(this.map_[e]=0),++this.map_[e]==1&&(n+=1),--this.map_[t]==0&&(n-=1),n&&this.set(this.value+n)},normalize:String,destroy:function(){g.prototype.destroy.call(this),this.map_=null}}),N={},C={destroy:function(e){R(this,e)}},A=function(e,t){return function(n,r){var i;if(n instanceof h||n instanceof p)i=n,n=r,r=arguments[2];r||(r=n,n="");var s=L(e,r||t,n);return i?q(i,s):s}},O=A(b,n.fn.$true),M=A(y),_=A(w),D=A(S),P=A(x),H=A(T),j={"*":function(e){var t,n,r,i=e.type,s=e.sender,o=s.basisObjectId,u=I[this.basisObjectId];for(var a in u)r=u[a],r.updateEvents[i]&&(t=r.indexCache_[o],n=r.normalize(r.valueGetter(s)),n!==t&&(r.update_(n,t),r.indexCache_[o]=n))}},F={itemsChanged:function(e,t){var n;if(n=t.inserted)for(var r=n.length;r-->0;)n[r].addHandler(j,this);if(n=t.deleted)for(var r=n.length;r-->0;)n[r].removeHandler(j,this);var i=I[this.basisObjectId];for(var s in i)B(i[s],t.inserted,t.deleted)},destroy:function(){var e=I[this.basisObjectId];for(var t in e)R(this,e[t])}},I={},U=f(null,{className:a+".CalcIndexPreset",extendConstructor_:!0,indexes:{},calc:n.fn.$null}),z=1,J=f(v,{className:a+".IndexMap",calcs:null,indexes:null,indexes_:null,indexesBind_:null,timer_:undefined,indexUpdated:null,indexValues:null,memberSourceMap:null,keyMap:null,map:function(e){return this.keyMap.get(e,!0)},addMemberRef:function(e,t){this.memberSourceMap[e.basisObjectId]=t.basisObjectId,this.listen.member&&e.addHandler(this.listen.member,this),this.sourceMap_[t.basisObjectId].updated=!0,e.subscriberCount>0&&this.calcMember(e)},removeMemberRef:function(e,t){delete this.memberSourceMap[e.basisObjectId],this.listen.member&&e.removeHandler(this.listen.member,this)},emit_sourceChanged:function(e){v.prototype.emit_sourceChanged.call(this,e);for(var t in this.indexes_){var n=this.indexes_[t];e&&(this.removeIndex(t),R(e,this.indexes[t])),this.source&&this.addIndex(t,q(this.source,n))}},listen:{index:{change:function(e){var t=this.indexMap;t.indexValues[this.key]=e.value,t.indexUpdated=!0,t.recalcRequest()}},member:{subscribersChanged:function(e,t){e.subscriberCount>0&&this.calcMember(e)}}},ruleEvents:n.data.dataset.createRuleEvents(function(e,t){v.prototype.ruleEvents.update.call(this,e,t),this.sourceMap_[e.basisObjectId].updated=!0,this.recalcRequest()},"update"),init:function(){this.recalc=this.recalc.bind(this),this.indexUpdated=!1,this.indexesBind_={},this.memberSourceMap={};var e=this.indexes;this.indexes={},this.indexes_={},this.indexValues={};var t=this.calcs;this.calcs={};if(!this.keyMap||this.keyMap instanceof c==0)this.keyMap=new c(n.object.complete({create:function(e,t){return new this.itemClass(t)}},this.keyMap));v.prototype.init.call(this),n.object.iterate(e,this.addIndex,this),n.object.iterate(t,this.addCalc,this)},addIndex:function(e,t){if(!this.indexes[e]){if(t instanceof k){if(!!this.indexes_[e])return;this.indexes_[e]=t,t=this.source?q(this.source,t):null}if(t instanceof g){this.indexValues[e]=t.value,this.indexes[e]=t,this.indexesBind_[e]={key:e,indexMap:this};var n=this.listen.index;n&&(t.addHandler(n,this.indexesBind_[e]),n.change&&n.change.call(this.indexesBind_[e],t,t.value))}}},removeIndex:function(e){if(this.indexes_[e]||this.indexes[e])this.indexes[e]&&this.listen.index&&this.indexes[e].removeHandler(this.listen.index,this.indexesBind_[e]),delete this.indexValues[e],delete this.indexesBind_[e],delete this.indexes[e],delete this.indexes_[e]},addCalc:function(e,t){if(t instanceof U){this.calcs[e]=t.calc;for(var n in t.indexes)this.addIndex(n,t.indexes[n])}else this.calcs[e]=t;this.recalcRequest()},removeCalc:function(e){var t=this.calcs[e];if(t&&t.preset instanceof U){var n=t.preset.indexes;for(var r in n)this.removeIndex(r,n[r])}delete this.calcs[e]},lock:function(){for(var e in this.indexes)this.indexes[e].lock()},unlock:function(){for(var e in this.indexes)this.indexes[e].unlock()},recalcRequest:function(){this.timer_||(this.timer_=n.setImmediate(this.recalc))},recalc:function(){for(var e in this.items_)this.calcMember(this.items_[e]);this.indexUpdated=!1,this.timer_=n.clearImmediate(this.timer_)},calcMember:function(e){var t=this.sourceMap_[this.memberSourceMap[e.basisObjectId]];if(e.subscriberCount&&(t.updated||this.indexUpdated)){t.updated=!1;var n={},r,i,s;for(var o in this.calcs)r=this.calcs[o](t.sourceObject.data,this.indexValues,t.sourceObject),i=e.data[o],e.data[o]!==r&&(typeof r!="number"||typeof i!="number"||!isNaN(r)||!isNaN(i))&&(n[o]=r,s=!0);s&&e.update(n)}},getMember:function(e){return this.keyMap.get(e,!0)},destroy:function(){this.keyMap.destroy(),this.keyMap=null;for(var e in this.indexes)this.removeIndex(e);v.prototype.destroy.call(this),this.timer_=n.clearImmediate(this.timer_),this.calcs=null,this.indexes=null,this.indexes_=null,this.indexValues=null,this.memberSourceMap=null,this.indexesBind_=null}});t.exports={IndexConstructor:k,createIndexConstructor:A,getDatasetIndex:q,removeDatasetIndex:R,Index:g,Count:b,Sum:y,Avg:w,VectorIndex:E,Min:S,Max:x,Distinct:T,count:O,sum:M,avg:_,max:P,min:D,distinct:H,CalcIndexPreset:U,percentOfRange:X,percentOfMax:V,percentOfSum:$,IndexMap:J}},"g.js":function(e,t,n,r,i,s,o,u){function l(e){return new Function("data","return {"+n.object.iterate(e,function(e,t){return e=e.replace(/"/g,'\\"'),t=t.replace(/"/g,'\\"'),'"'+e+'": data["'+t+'"]'})+"}")}n.require("./4.js");var a=this.path,f=n.data.Object,c={update:function(e,t){var n=this.host.fields,r={};if(this.name==n.defaultSource)for(var i in t)i in n.fieldSource==0&&(r[i]=e.data[i]);else for(var i in t){var s=n.fromNames[this.name][i];s&&this.host.fields.fieldSource[s]==this.name&&(r[s]=e.data[i])}for(var i in r)return this.host.update(r)},destroy:function(){this.host.setSource(this.name,null)}},h=function(e){var t={},n={},r={},i={defaultSource:!1,fieldSource:{},toNames:n,fromNames:r,sources:t,__extend__:h};e["*"]&&(i.defaultSource=e["*"]);for(var s in e){var o=e[s].split(":"),u=o.shift(),a=o.length?o.join(":"):s;if(u==i.defaultSource)continue;if(u=="-"&&a!=s)continue;n[u]||(n[u]={},r[u]={}),n[u][s]=a,r[u][a]=s,i.fieldSource[s]=u}for(var u in n)t[u]=l(n[u]);return i.defaultSource&&(t[i.defaultSource]=function(e){var t={};for(var n in e)n in i.fieldSource==0&&(t[n]=e[n]);return t}),i},p=f.subclass({className:a+".Merge",emit_sourceChanged:n.event.create("sourceChanged","name","oldSource"),fields:h({"*":"-"}),sources:null,sourcesContext_:null,delta_:null,init:function(){var e=this.data,t=this.sources;this.data={},this.delegate=null,f.prototype.init.call(this);for(var n in e){var r=this.fields.fieldSource[n]||this.fields.defaultSource;r=="-"&&(this.data[n]=e[n])}this.sources={},this.sourcesContext_={},t&&this.setSources(t)},update:function(e){if(this.delta_){for(var t in e){var n=this.fields.fieldSource[t]||this.fields.defaultSource;if(!n)continue;var r=n!=this.fields.defaultSource?this.fields.toNames[n][t]:t,i=this.sources[n].data[r];i!==this.data[t]&&(t in this.delta_==0?this.delta_[t]=this.data[t]:this.delta_[t]===i&&delete this.delta_[t],this.data[t]=i)}return}var s,o={};this.delta_=o;for(var t in e){var n=this.fields.fieldSource[t]||this.fields.defaultSource;if(!n)continue;if(n=="-"){o[t]=this.data[t],this.data[t]=e[t];continue}if(this.sources[n]){var r=n!=this.fields.defaultSource?this.fields.toNames[n][t]:t;this.sources[n].data[r]!==e[t]?(s||(s={}),n in s==0&&(s[n]={}),s[n][r]=e[t]):this.data[t]!==e[t]&&(o[t]=this.data[t],this.data[t]=e[t])}}if(s)for(var n in s)this.sources[n].update(s[n]);this.delta_=null;for(var t in o)return this.emit_update(o),o;return!1},setDelegate:function(){},setSource:function(e,t){var n=this.sources[e];if(e in this.fields.sources==0)return;if(e=="-")return;t instanceof f==0&&(t=null);if(n!==t){var r=this.listen["source:"+e];n&&(r&&n.removeHandler(r,this),n.removeHandler(c,this.sourcesContext_[e])),this.sources[e]=t,t&&(e in this.sourcesContext_==0&&(this.sourcesContext_[e]={host:this,name:e}),t.addHandler(c,this.sourcesContext_[e]),r&&t.addHandler(r,this),this.update(this.fields.sources[e](t.data))),this.emit_sourceChanged(e,n)}},setSources:function(e){e||(e={});for(var t in this.fields.sources)this.setSource(t,e[t])},destroy:function(){this.setSources(),this.sources=null,this.sourcesContext_=null,f.prototype.destroy.call(this)}});t.exports={Merge:p}},"h.js":function(e,t,n,r,i,s,o,u){function _(e){return M[e]=M[e]||0,e+M[e]++}function j(e,t){var n=H[e];if(n){for(var r=0,i;i=n[r];r++){var s=i[0],o=i[1];s[o]=t}delete H[e]}D[e]=t}function F(e,t,n){if(D[e])return D[e];var r=H[e];return r||(r=H[e]=[]),r.push([t,n]),function(t,n){var r=D[e];if(r)return r(t,n)}}function I(){for(var e in H)n.dev.warn(a+": type `"+e+"` is not defined, but used by "+H[e].length+" type(s)")}function R(){var e=m(arguments),t=e.pop(),n=e[0],r=e[1],i=e[2],s;if(typeof t!="function")throw 40;switch(e.length){case 0:s=function(){return t()};break;case 1:s=function(e,r,i){return n in e?t(r[n]):i};break;case 2:s=function(e,i,s){return n in e||r in e?t(i[n],i[r]):s};break;case 3:s=function(e,s,o){return n in e||r in e||i in e?t(s[n],s[r],s[i]):o};break;default:s=function(n,r,i){var s=!1,o=[];for(var u=0,a;a=e[u];u++)s=s||a in n,o.push(r[a]);return s?t.apply(null,o):i}}return s.args=e,s.calc=s,s}function U(e){return arguments.length==1?function(t,n,r){return e in t?n[e]!=null?String(n[e]):null:r}:R.apply(null,m(arguments).concat(function(){for(var e=arguments.length-1;e>=0;e--)if(arguments[e]==null)return null;return Array.prototype.join.call(arguments,"-")}))}function nt(e,t){var n=["has"],r=[l],i=[];for(var s in e)if(l.call(e,s)){var o="v"+i.length,u="f"+i.length,a=e[s];n.push(o,u),r.push(a,t[s]),i.push('"'+s+'":'+'has.call(data,"'+s+'")'+"?"+u+'(data["'+s+'"],'+o+")"+":"+o+(typeof a=="function"?"(data)":""))}var f=i.sort().join(","),c=et[f];return c||(c=et[f]=new Function(n,"return function(data){return {"+f+"};"+"};")),c.apply(null,r)}function rt(e,t){if(!Array.isArray(e))return null;if(!Array.isArray(t)||e.length!=t.length)return e||null;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return e;return t}function st(e,t){return typeof e=="string"?it(e):typeof e=="number"?new Date(e):e==null?null:e&&e.constructor===Date?e:t}function ot(e,t,r){e.aliases[t]=t,typeof r=="string"||Array.isArray(r)||typeof r=="function"&&r.calc!==r?r={type:r}:r=r?n.object.slice(r):{};if("type"in r){typeof r.type=="string"&&(r.type=F(r.type,e.fields,t));if(Array.isArray(r.type)){var i=r.type.slice();i.length==1?(r.type=n.fn.$const(i[0]),r.defValue=i[0]):(r.type=function(e,t){var n=i.indexOf(e)!=-1;return n?e:t},r.defValue=i.indexOf(r.defValue)!=-1?r.defValue:i[0])}r.type===Array&&(r.type=rt),r.type===Date&&(r.type=st),typeof r.type!="function"&&(r.type=null)}var s=r.type||d;if(r.id||r.index||[k,L,A,O].indexOf(s)!=-1)e.idFields[t]=r;r.calc?(at(e,t,r.calc),e.fields[t]=tt):e.fields[t]=s,e.defaults[t]="defValue"in r?r.defValue:s(),Z[t]||(Z[t]={destroy:function(){this.set(t,null)}})}function ut(e,t,n){if(n in e.fields==0)return;if(t in e.aliases)return;e.aliases[t]=n}function at(e,t,r){e.calcs||(e.calcs=[]);var i=e.calcs,s=e.deps,o=r.args||[],u={args:o,wrapper:r},a=e.calcs.length,f=0;if(o)for(var l=0,c;c=i[l];l++)o.indexOf(c.key)!=-1&&(f=l+1);if(t){u.key=t;for(var l=0,c;c=i[l];l++)if(c.args.indexOf(t)!=-1){a=l;break}if(f>a)return;s[t]=o.reduce(function(e,t){var r=s[t]||[t];for(var i=0;i<r.length;i++)n.array.add(e,r[i]);return e},[]);for(var h in s){var p=s[h].indexOf(t);p!=-1&&Array.prototype.splice.apply(s[h],[p,1].concat(s[t]))}}else a=f;i.splice(Math.min(a,f),0,u)}function ft(e){return function(t){return t&&this.modified&&e in this.modified?this.modified[e]:this.data[e]}}function lt(e){return function(t,n){return this.set(e,t,n)}}function ht(e,t){n.dev.warn("[basis.entity "+e.entityType.name+"#"+e.basisObjectId+"] "+t,e)}function vt(e){return e&&e instanceof pt}function mt(e,t){var r=e||{};return typeof e=="string"?r={name:r,fields:t||{}}:t&&(r=n.object.merge(r,{fields:t})),new Y(r)}function gt(e,t){return arguments.length>1?new Q(t,e):new Q(e)}n.require("./3.js"),n.require("./4.js"),n.require("./d.js");var a=this.path,f=n.Class,l=Object.prototype.hasOwnProperty,c=n.object.keys,h=n.object.extend,p=n.object.complete,d=n.fn.$self,v=n.getter,m=n.array.from,g=n.event.Emitter,y=n.event.create,b=n.data.Object,w=n.data.Slot,E=n.data.Dataset,S=n.data.dataset.Filter,x=n.data.dataset.Split,T={},N=[],C={string:!0,number:!0},k=function(e){return isNaN(e)?null:Number(e)},L=function(e){return isNaN(e)?null:Number(e)},A=function(e){return isNaN(e)?null:parseInt(e,10)},O=function(e){return e==null?null:String(e)},M={},D={},P={},H={},B=function(){},q=f(null,{className:a+".Index",items:null,init:function(e){this.items={}},get:function(e,t){var n=l.call(this.items,e)&&this.items[e];if(n&&(!t||n.entityType===t))return n},add:function(e,t){if(t){var n=this.get(e);if(!n)return this.items[e]=t,!0;if(n!==t)throw 39}},remove:function(e,t){if(this.items[e]===t)return delete this.items[e],!0},destroy:function(){this.items=null}}),z=function(e,t){return function(n){return e.prototype[t].call(this,n&&n.map(this.wrapper))}},W=function(e,t){return function(){this.name||(this.name=_(t)),e.prototype.init.call(this)}},X=function(e){return function(e){var t=n.object.slice(this.items_),r=[],i=[];if(e){E.setAccumulateState(!0);for(var s=0;s<e.length;s++){var o=this.wrapper(e[s]);o&&(t[o.basisObjectId]=!1)}E.setAccumulateState(!1)}for(var u in this.items_)u in t==0&&r.push(this.items_[u]);for(var u in t)t[u]&&i.push(t[u]);i.length&&this.wrapper.all&&this.wrapper.all.emit_itemsChanged({deleted:i}),E.setAccumulateState(!0);for(var s=0;s<i.length;s++)i[s].destroy();return E.setAccumulateState(!1),r.length?r:null}},V=f(E,{className:a+".EntitySet",name:null,wrapper:d,init:W(E,"EntitySet"),sync:X(E),set:z(E,"set"),add:z(E,"add"),remove:z(E,"remove"),destroy:function(){E.prototype.destroy.call(this),this.wrapper=null}}),$=f(V,{className:a+".ReadOnlyEntitySet",set:n.fn.$false,add:n.fn.$false,remove:n.fn.$false,clear:n.fn.$false}),J=f(S,{className:a+".EntityCollection",name:null,init:W(S,"EntityCollection"),sync:X(S)}),K=f(x,{className:a+".EntityGrouping",name:null,subsetClass:$,init:W(x,"EntityGrouping"),sync:X(x),getSubset:function(e,t){var n=x.prototype.getSubset.call(this,e,t);return n&&n.dataset&&(n.dataset.wrapper=this.wrapper),n}}),Q=function(e,t){if(this instanceof Q){e||(e=d);if(!t||D[t])t=_("UntitledEntitySetType");var n=new G({entitySetClass:{wrapper:e}}),r=n.entitySetClass,i=function(e,t){return e!=null?(t instanceof V==0&&(t=n.createEntitySet()),t.set(e instanceof E?e.getItems():m(e)),t):null};return typeof e=="string"&&(r.prototype.wrapper=F(e,r.prototype,"wrapper")),j(t,i),h(i,{type:n,typeName:t,toString:function(){return t+"()"},reader:function(e){if(Array.isArray(e)){var t=r.prototype.wrapper;return e.map(t.reader||t)}return e},extendClass:function(e){return r.extend.call(r,e),i},extendReader:function(e){var t=i.reader;return i.reader=function(n){return Array.isArray(n)&&e(n),t(n)},i},entitySetType:n,extend:function(){return r.extend.apply(r,arguments)}}),i}},G=f(null,{className:a+".EntitySetConstructor",entitySetClass:V,extendConstructor_:!0,createEntitySet:function(){return new this.entitySetClass}}),Y=function(e){if(this instanceof Y){var t;e.singleton?t=function(e){var t=n.get();return t?e&&t.update(e):t=new r(e||{}),t}:t=function(e,t){if(e!=null){if(!t||t.entityType!==n)t=null;if(e===t||e.entityType===n)return e;var i,s=n.idField;if(C[typeof e]){if(!s)return;if(t=n.index.get(e,n))return t;i=e,e={},e[s]=i}else n.compositeKey&&(i=n.compositeKey(e,e)),i!=null&&(t=n.index.get(i,n));return t&&t.entityType===n?t.update(e):t=new r(e),t}};var n=new ct(e||{},t),r=n.entityClass,i=n.name;return j(i,t),h(t,{all:n.all,type:n,typeName:i,toString:function(){return i+"()"},get:function(e){return n.get(e)},getSlot:function(e,t){return n.getSlot(e,t)},reader:function(e){return n.reader(e)},extendClass:function(e){return r.extend.call(r,e),t},extendReader:function(e){var n=t.reader;return t.reader=function(t){return t&&typeof t=="object"&&e(t),n(t)},t},entityType:n,extend:function(){return r.extend.apply(r,arguments)}}),t}},Z={},et={},tt=function(e,t){return t},it=function(){function e(e,n,r,i,s,o,u){var a=new Date(e,n-1,r,i||0,0,o||0,u?u.substr(0,3):0);return a.setMinutes((s||0)-t-a.getTimezoneOffset()),a}var t;return function(n){return t=0,e.apply(null,String(n||"").replace(reIsoTimezoneDesignator,function(e,n,r,i){return t=i?r*60+i*1:r*1,n}).split(reIsoStringSplit))}}(),ct=f(null,{className:a+".EntityType",wrapper:null,all:null,fields:null,idField:null,idFields:null,defaults:null,aliases:null,slots:null,singleton:!1,index:null,indexes:null,entityClass:null,init:function(e,t){this.name=e.name;if(!this.name||D[this.name])this.name=_("UntitledEntityType");this.fields={},this.deps={},this.idFields={},this.defaults={},this.aliases={},this.slots={};var r=e.index;r&&r instanceof q&&(this.index=r),this.wrapper=t;if("all"in e==0||e.all||e.singleton)this.all=new $(n.object.complete({wrapper:t},e.all));this.singleton=!!e.singleton;if(this.singleton){var i;this.get=function(){return i},this.all.addHandler({itemsChanged:function(e,t){i=t.inserted?t.inserted[0]:null}},this)}for(var s in e.fields)ot(this,s,e.fields[s]);for(var s in e.aliases)ut(this,s,e.aliases[s]);e.constrains&&e.constrains.forEach(function(e){at(this,null,e)},this);var o=c(this.idFields),u={};if(o.length){for(var a in this.idFields){var f=this.idFields[a],r=f.index,l;if(!r||r instanceof q==0)typeof r=="string"?(r in P==0&&(P[r]=new q),r=P[r]):(this.index||(this.index=new q),r=this.index);l=u[r.basisObjectId],l||(l=u[r.basisObjectId]={index:r,fields:[]}),l.fields.push(a),this.idFields[a]=l}this.index&&this.index.basisObjectId in u==0&&(this.index=null);for(var h in u){var l=u[h];l.property="__id__"+h,l.compositeKey=U.apply(null,l.fields),l.fields.length==1&&(l.idField=l.fields[0])}var p=c(u),d=u[this.index?this.index.basisObjectId:p[0]];this.index=d.index,this.idField=d.idField,this.compositeKey=d.compositeKey,this.idProperty=d.property,this.indexes=u}else this.index&&(this.index=null);var v={};for(var s in this.defaults)v[s]=undefined;this.entityClass=dt(this,this.all,this.fields,this.slots),this.entityClass.extend({entityType:this,type:t,typeName:this.name,state:e.state||this.entityClass.prototype.state,generateData:nt(this.defaults,this.fields),initDelta:v});for(var m in this.fields)this.entityClass.prototype["get_"+m]=ft(m),this.fields[m]!==tt&&(this.entityClass.prototype["set_"+m]=lt(m));N.push(this)},reader:function(e){var t={};if(C[typeof e])return this.idField?e:null;if(!e||e==null)return null;for(var n in e){var r=this.aliases[n];if(r){var i=this.fields[r].reader;t[r]=i?i(e[n]):e[n]}}return t},get:function(e){var t=this.getId(e);if(this.index&&t!=null)return this.index.get(t,this)},getId:function(e){if(this.compositeKey&&e!=null){if(C[typeof e])return e;if(e&&e.entityType===this)return e[this.idProperty];e instanceof b&&(e=e.data);if(this.compositeKey)return this.compositeKey(e,e)}},getSlot:function(e){var t=this.getId(e);if(t!=null){var n=l.call(this.slots,t)&&this.slots[t];if(!n){if(C[typeof e]){var r={};this.idField&&(r[this.idField]=e),e=r}n=this.slots[t]=new w({delegate:this.get(t)||null,data:e})}return n}}}),pt=f(b,{className:a+".BaseEntity",target:!0,setDelegate:function(){},extendConstructor_:!1,fieldHandlers_:null,modified:null,emit_rollbackUpdate:y("rollbackUpdate")}),dt=function(e,t,r,i){function s(t,n,r){var i=e.calcs,s=t.data,u=!1;try{if(i)for(var a=0,f;f=i[a];a++){var l=f.key,c=s[l],h=f.wrapper(n,s,c);l&&h!==c&&(n[l]=c,s[l]=h,u=!0)}for(var p in e.indexes){var d=e.indexes[p],v=t[d.property],m=v;d.compositeKey&&(m=d.compositeKey(n,s,v)),m!==v&&(o(d.index,t,v,m),t[d.property]=m)}return u}catch(g){for(var l in n)t.data[l]=n[l];r&&!t.modified&&(t.modified=r)}}function o(e,t,n,r){r!=null&&(e.add(r,t),l.call(i,r)&&i[r].setDelegate(t)),n!=null&&(e.remove(n,t),l.call(i,n)&&i[n].setDelegate())}return f(pt,{className:e.name,init:function(e){this.delegate=null,this.data=this.generateData(e),pt.prototype.init.call(this);var n;for(var r in this.data)n=this.data[r],n&&n!==this&&n instanceof g&&(n.addHandler(Z[r],this),this.fieldHandlers_||(this.fieldHandlers_={}),this.fieldHandlers_[r]=!0);s(this,this.initDelta),t&&t.emit_itemsChanged({inserted:[this]})},toString:function(){return"[object "+this.constructor.className+"("+this.entityType.name+")]"},getId:function(){return this[e.idProperty]},get:function(e,t){return t&&this.modified&&e in this.modified?this.modified[e]:this.data[e]},set:function(t,n,i,o){var u=r[t];if(!u)return!1;var a,f=this.modified;u===rt&&f&&t in f&&(n=rt(n,f[t]));var l=u(n,this.data[t]),h=this.data[t],p=l!==h&&(!l||!h||l.constructor!==Date||h.constructor!==Date||+l!==+h);if(p)e:{a={};if(!e.idFields[t])if(i)f||(this.modified=f={}),t in f==0?(a.rollback={key:t,value:undefined},f[t]=h):f[t]===l&&(a.rollback={key:t,value:l},delete f[t],c(f).length||(this.modified=null));else if(f&&t in f){if(f[t]!==l){a.rollback={key:t,value:f[t]},f[t]=l;break e}return!1}this.data[t]=l,this.fieldHandlers_&&this.fieldHandlers_[t]&&(h.removeHandler(Z[t],this),this.fieldHandlers_[t]=!1),l&&l!==this&&l instanceof g&&(l.addHandler(Z[t],this),this.fieldHandlers_||(this.fieldHandlers_={}),this.fieldHandlers_[t]=!0),a.key=t,a.value=h,a.delta={},a.delta[t]=h}else!i&&f&&t in f&&(a={rollback:{key:t,value:f[t]}},delete f[t],c(f).length||(this.modified=null));if(!o&&a){var d=a.key,v=a.delta||{},m;a.rollback&&(m={},m[a.rollback.key]=a.rollback.value),s(this,v,m)&&(d=!0),d&&(this.emit_update(v),a.delta=v),m&&this.emit_rollbackUpdate(m)}return a||!1},update:function(e,t){var n=!1,r={};if(e){var i,o;for(var u in e)if(o=this.set(u,e[u],t,!0))o.key&&(n=!0,r[o.key]=o.value),o.rollback&&(i||(i={}),i[o.rollback.key]=o.rollback.value);s(this,r,i)&&(n=!0),n&&this.emit_update(r),i&&this.emit_rollbackUpdate(i)}return n?r:!1},generateData:function(){return{}},reset:function(){this.update(this.generateData({}))},clear:function(){var e={};for(var t in this.data)e[t]=undefined;return this.update(e)},commit:function(e){var t=this.modified;this.modified=null,e&&this.update(e),t&&this.emit_rollbackUpdate(t)},rollback:function(t){var r=this.modified;r&&t&&(Array.isArray(t)||(t=[t]),r=n.object.slice(r,t.reduce(function(t,n){return t.concat(e.deps[n]||n)},[]))),this.update(r,!0)},destroy:function(){if(this.fieldHandlers_){for(var n in this.fieldHandlers_)this.fieldHandlers_[n]&&this.data[n].removeHandler(Z[n],this);this.fieldHandlers_=null}for(var n in e.indexes){var r=e.indexes[n],i=this[r.property];i!=null&&o(r.index,this,i,null)}t&&t.has(this)&&t.emit_itemsChanged({deleted:[this]}),b.prototype.destroy.call(this),this.data=T,this.modified=null}})};t.exports={isEntity:vt,createType:mt,createSetType:gt,validate:I,getTypeByName:function(e){return D[e]},getIndexByName:function(e){return P[e]},get:function(e,t){var n=D[e];if(n)return n.get(t)},resolve:function(e,t){var n=D[e];if(n)return n(t)},getByIndex:function(e,t){if(e in P)return P[e].get(t)},NumericId:k,NumberId:L,IntId:A,StringId:O,Index:q,CalculateField:R,ConcatStringField:U,calc:R,EntityType:Y,Entity:dt,BaseEntity:pt,EntitySetType:Q,EntitySet:V,ReadOnlyEntitySet:$,Collection:J,Grouping:K}},"i.js":function(e,t,n,r,i,s,o,u){function T(){var e="basisjsJsonpCallback"+parseInt(Math.random()*1e11);return r[e]=function(t){x[e]=t},e}function N(e){var t=x[e];return delete x[e],t}function C(e){delete x[e],delete r[e]}function k(e,t){var n,i,s=!1;if(typeof e!="number"){if(!e||this.script!==e.target)return;s=e&&e.type=="error",e=s||!this.script.readyState||/loaded|complete/.test(this.script.readyState)?S:E}if(e==this.prevReadyState_)return;this.prevReadyState_=e,this.emit_readyStateChanged(e);if(e==S){this.clearTimeout(),this.script.onload=this.script.onerror=this.script.onreadystatechange=null,this.script.parentNode&&this.script.parentNode.removeChild(this.script),this.script=null,t?(this.emit_abort(),n=this.stateOnAbort):(this.processResponse(),this.isSuccessful()&&!s?(n=y.READY,this.emit_success(this.getResponseData())):(n=y.ERROR,i=this.getResponseError(),this.emit_failure(i))),this.emit_complete(this);var o=this.callback;t?setTimeout(r[o]=function(){C(o)},3e5):C(o)}else n=y.PROCESSING;this.setState(n,i)}n.require("./j.js"),n.require("./4.js");var a=this.path,f=r.document,l=r.encodeURIComponent,c=n.object.extend,h=n.object.slice,p=n.object.merge,d=n.net.createTransportEvent,v=n.net.createRequestEvent,m=n.net.AbstractRequest,g=n.net.AbstractTransport,y=n.data.STATE,b=0,w=1,E=3,S=4,x={},L=m.subclass({className:a+".Request",timeout:3e4,timer_:null,emit_readyStateChanged:v("readyStateChanged"),isIdle:function(){return!this.script},isSuccessful:function(){return this.data.status==200},processResponse:function(){this.callback in x&&this.update({contentType:"application/javascript",data:N(this.callback),status:200})},getResponseData:function(){return this.data.data},getResponseError:function(){return{code:"ERROR",msg:"ERROR"}},prepare:n.fn.$true,prepareRequestData:function(e){var t=[],n=e.url;e=h(e),this.callback=T();for(var r in e.params){var i=e.params[r];if(i==null||i.toString()==null)continue;t.push(l(r)+"="+l(i.toString()))}return t.push(l(e.callbackParam)+"="+l(this.callback)),t=t.join("&"),e.routerParams&&(n=n.replace(/:([a-z\_\-][a-z0-9\_\-]+)/gi,function(t,n){return n in e.routerParams?e.routerParams[n]:t})),t&&(n+=(n.indexOf("?")==-1?"?":"&")+t),e.requestUrl=n,e},doRequest:function(){this.send(this.prepareRequestData(this.requestData))},send:function(e){if(!f)throw 41;var t=f.head||f.getElementByName("head")[0]||f.documentElement,n=f.createElement("script");this.update({data:undefined,status:"",error:""}),this.script=n,n.async=!0,n.src=e.requestUrl,n.charset=e.encoding,n.onload=n.onerror=n.onreadystatechange=k.bind(this),this.prevReadyState_=-1,this.emit_start(),k.call(this,b),this.setTimeout(this.timeout),t.appendChild(this.script)},repeat:function(){this.requestData&&(this.abort(),this.doRequest())},abort:function(){this.isIdle()||(this.clearTimeout(),k.call(this,S,!0))},setTimeout:function(e){this.timer_=setTimeout(this.timeoutAbort.bind(this),e)},clearTimeout:function(){this.timer_&&(this.timer_=clearTimeout(this.timer_))},timeoutAbort:function(){this.update({error:{code:"TIMEOUT_ERROR",message:"Timeout error"}}),this.emit_timeout(this),this.abort()},destroy:function(){this.abort(),m.prototype.destroy.call(this)}}),A=g.subclass({className:a+".Transport",requestClass:L,emit_readyStateChanged:v("readyStateChanged"),encoding:null,params:null,callbackParam:"callback",init:function(){g.prototype.init.call(this),this.params=h(this.params)},setParam:function(e,t){this.params[e]=t},setParams:function(e){this.clearParams();for(var t in e)this.setParam(t,e[t])},removeParam:function(e){delete this.params[e]},clearParams:function(){for(var e in this.params)delete this.params[e]},prepareRequestData:function(e){var t=e.url||this.url;if(!t)throw 42;return c(e,{url:t,encoding:e.encoding||this.encoding,params:p(this.params,e.params),routerParams:e.routerParams,callbackParam:e.callbackParam||this.callbackParam,influence:e.influence}),e}});t.exports={Request:L,Transport:A,request:function(e,t,r){typeof e=="string"&&(e={url:e});var i=new A(e);i.addHandler({success:t&&function(e,n,r){t(r)},failure:r&&function(e,t,n){r(n)},complete:function(){n.nextTick(function(){i.destroy()})}}),i.request()}}},"j.js":function(e,t,n,r,i,s,o,u){function g(e){var t=p(e);return function(){t.apply(w,arguments),this.service&&t.apply(this.service,arguments),t.apply(this,arguments)}}function y(e){var t=p(e);return function(){var r=[this].concat(l(arguments));t.apply(w,r),this.transport&&this.transport["emit_"+e].apply(this.transport,r),t.apply(this,arguments)}}n.require("./3.js"),n.require("./4.js");var a=this.path,f=n.object.extend,l=n.array.from,c=n.object.slice,h=n.object.merge,p=n.event.create,d=n.data.STATE,v=n.data.Object,m=n.event.Emitter,b=[],w=new m({abort:function(){var e=l(b);for(var t=0;t<e.length;t++)e[t].abort();return e},handler:{start:function(e){n.array.add(b,e.transport)},complete:function(e){n.array.remove(b,e.transport)}}}),E=v.subclass({className:a+".AbstractRequest",influence:null,initData:null,requestData:null,transport:null,stateOnAbort:d.UNDEFINED,emit_start:y("start"),emit_timeout:y("timeout"),emit_abort:y("abort"),emit_success:y("success"),emit_failure:y("failure"),emit_complete:y("complete"),emit_stateChanged:function(e){v.prototype.emit_stateChanged.call(this,e);if(this.influence)for(var t=0;t<this.influence.length;t++)this.influence[t].setState(this.state,this.state.data)},init:function(){v.prototype.init.call(this),this.influence=[]},setInfluence:function(e){this.influence=l(e)},clearInfluence:function(){this.influence=null},doRequest:n.fn.$undef,getResponseData:n.fn.$undef,destroy:function(){v.prototype.destroy.call(this),this.initData=null,this.requestData=null,this.clearInfluence()}}),S={start:function(e,t){n.array.add(this.inprogressRequests,t)},complete:function(e,t){n.array.remove(this.inprogressRequests,t)}},x={complete:function(){var e=this.requestQueue.shift();e&&n.nextTick(function(){e.doRequest()})}},T=m.subclass({className:a+".AbstractTransport",requestClass:E,requests:null,poolLimit:null,poolHashGetter:n.fn.$true,emit_start:g("start"),emit_timeout:g("timeout"),emit_abort:g("abort"),emit_success:g("success"),emit_failure:g("failure"),emit_complete:g("complete"),init:function(){this.requests={},this.requestQueue=[],this.inprogressRequests=[],m.prototype.init.call(this),this.addHandler(S,this),this.poolLimit&&this.addHandler(x,this)},getRequestByHash:function(e){var t=this.requests[e];if(!t){for(var n in this.requests)if(this.requests[n].isIdle()&&this.requestQueue.indexOf(this.requests[n])==-1){t=this.requests[n],delete this.requests[n];break}t||(t=new this.requestClass({transport:this})),this.requests[e]=t}return t},prepare:n.fn.$true,prepareRequestData:n.fn.$self,request:function(e){if(!this.prepare())return;var t=c(e),n=this.poolHashGetter(this.prepareRequestData(t)),r=this.getRequestByHash(n,!0);return r.initData&&r.abort(),r.initData=t,r.requestData=t,r.setInfluence(t.influence||this.influence),this.poolLimit&&this.inprogressRequests.length>=this.poolLimit?(this.requestQueue.push(r),r.setState(d.PROCESSING)):r.doRequest(),r},abort:function(){for(var e=0,t;t=this.inprogressRequests[e];e++)t.abort();for(var e=0,t;t=this.requestQueue[e];e++)t.setState(d.ERROR);this.inprogressRequests=[],this.requestQueue=[]},stop:function(){this.stopped||(this.stoppedRequests=this.inprogressRequests.concat(this.requestQueue),this.abort(),this.stopped=!0)},resume:function(){if(this.stoppedRequests){for(var e=0,t;t=this.stoppedRequests[e];e++)t.transport.request(t.initData);this.stoppedRequests=null}this.stopped=!1},destroy:function(){for(var e in this.requests)this.requests[e].destroy();this.requests={},this.inprogressRequests=null,this.requestQueue=null,this.stoppedRequests=null,m.prototype.destroy.call(this)}});t.exports={createTransportEvent:g,createRequestEvent:y,transportDispatcher:w,AbstractRequest:E,AbstractTransport:T}},"k.js":function(e,t,n,r,i,s,o,u){n.require("./3.js"),n.require("./l.js"),n.require("./n.js");var a=this.path,f=n.event.create,l=n.net.action.create,c=n.event.Emitter,h=n.net.ajax.Transport,p={start:function(e,t){n.array.add(this.inprogressTransports,t.transport)},complete:function(e,t){n.array.remove(this.inprogressTransports,t.transport)}},d=c.subclass({className:a+".Service",inprogressTransports:null,transportClass:h,emit_sessionOpen:f("sessionOpen"),emit_sessionClose:f("sessionClose"),emit_sessionFreeze:f("sessionFreeze"),emit_sessionUnfreeze:f("sessionUnfreeze"),isSecure:!1,prepare:n.fn.$true,signature:n.fn.$undef,isSessionExpiredError:n.fn.$false,init:function(){c.prototype.init.call(this),this.inprogressTransports=[];var e=this.transportClass;this.transportClass=e.subclass({service:this,needSignature:this.isSecure,emit_failure:function(t,n){e.prototype.emit_failure.call(this,t,n),this.needSignature&&this.service.isSessionExpiredError(t)&&(this.service.freeze(),this.service.stoppedTransports.push(this),this.stop())},request:function(t){if(!this.service.prepare(this,t))return;if(this.needSignature&&!this.service.sign(this))return;return e.prototype.request.call(this,t)}}),this.addHandler(p)},sign:function(e){if(this.sessionKey)return this.signature(e,this.sessionData),!0},openSession:function(e,t){this.sessionKey=e,this.sessionData=t,this.unfreeze(),this.emit_sessionOpen()},closeSession:function(){this.freeze(),this.emit_sessionClose()},freeze:function(){if(!this.sessionKey)return;this.sessionKey=null,this.sessionData=null,this.stoppedTransports=this.inprogressTransports.filter(function(e){return e.needSignature});for(var e=0,t;t=this.inprogressTransports[e];e++)t.stop();this.emit_sessionFreeze()},unfreeze:function(){if(this.stoppedTransports)for(var e=0,t;t=this.stoppedTransports[e];e++)t.resume();this.emit_sessionUnfreeze()},createTransport:function(e){return new this.transportClass(e)},createAction:function(e){return l(n.object.complete({service:this},e))},destroy:function(){this.inprogressTransports=null,this.stoppedTransports=null,this.sessionKey=null,this.sessionData=null,c.prototype.destroy.call(this)}});t.exports={Service:d}},"l.js":function(e,t,n,r,i,s,o,u){function O(e,t){var r={};if(k.test(t.method)){if(!c||t.postBody instanceof c==0)r["Content-Type"]=t.contentType+(t.encoding?";charset="+t.encoding:"")}else f.test("ie")&&(r["If-Modified-Since"]="Thu, 01 Jan 1970 00:00:00 GMT");n.object.iterate(h(r,t.headers),function(e,t){t!=null&&typeof t!="function"&&this.setRequestHeader(e,t)},e)}function M(e,t){if(t.responseType&&t.asynchronous&&"responseType"in e)try{e.responseType=t.responseType}catch(n){}}function _(e,t){try{return n.json.parse(e)}catch(r){}}function D(e){var t=this.xhr,r,i,s;this.sendDelayTimer_=clearTimeout(this.sendDelayTimer_);if(!t)return;typeof e!="number"&&(e=t.readyState);if(e==this.prevReadyState_)return;this.prevReadyState_=e,this.emit_readyStateChanged(e),e==x?(this.clearTimeout(),t.onreadystatechange=n.fn.$undef,s=t.status==0,!s&&!t.responseType&&(s=typeof t.responseText=="unknown"||!t.responseText&&!t.getAllResponseHeaders()),s?(this.emit_abort(),r=this.stateOnAbort):(this.processResponse(),this.isSuccessful()?(r=T.READY,this.emit_success(this.getResponseData())):(r=T.ERROR,i=this.getResponseError(),!i&&this.data.error&&(i=this.data.error),this.emit_failure(i))),this.emit_complete(this)):r=T.PROCESSING,this.setState(r,i)}n.require("./m.js"),n.require("./j.js"),n.require("./4.js");var a=this.path,f=n.ua,l=r.encodeURIComponent,c=r.FormData,h=n.object.extend,p=n.object.slice,d=n.object.merge,v=n.net.createTransportEvent,m=n.net.createRequestEvent,g=n.net.AbstractRequest,y=n.net.AbstractTransport,b=0,w=1,E=2,S=3,x=4,T=n.data.STATE,N="HEAD GET POST PUT PATCH DELETE TRACE LINK UNLINK CONNECT".split(" "),C=/POST/i,k=/^(POST|PUT|PATCH|LINK|UNLINK)$/i,L="native",A=function(){if("XMLHttpRequest"in r)return function(){return new XMLHttpRequest};var e=r.ActiveXObject;if(e){var t=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"];for(var n=0;L=t[n];n++)try{if(new e(L))return function(){return new e(L)}}catch(i){}}throw 43}(),P=g.subclass({className:a+".Request",requestStartTime:0,timeout:3e4,timer_:null,sendDelay:null,sendDelayTimer_:null,lastRequestUrl_:null,debug:!1,emit_readyStateChanged:m("readyStateChanged"),init:function(){g.prototype.init.call(this),this.xhr=A()},isIdle:function(){return this.xhr.readyState==x||this.xhr.readyState==b},isSuccessful:function(){var e=this.xhr.status;return e>=200&&e<300||e==304},processResponse:function(){this.update({contentType:this.xhr.getResponseHeader("content-type"),status:this.xhr.status})},getResponseData:function(){var e=this.xhr;if(!e.responseType)if(this.responseType=="json"||/^application\/json/i.test(this.data.contentType))return _(e.responseText,this.lastRequestUrl_);return"response"in e?e.response:e.responseText},processErrorResponse:function(){return this.getResponseError()},getResponseError:function(){return{code:"SERVER_ERROR",msg:this.responseType?this.xhr.response||this.xhr.statusText||"Error":this.xhr.responseText}},prepare:n.fn.$true,prepareRequestData:function(e){var t=[],n=e.url;e=p(e);for(var r in e.params){var i=e.params[r];if(i==null||i.toString()==null)continue;t.push(l(r)+"="+l(i.toString()))}return t=t.join("&"),!e.postBody&&k.test(e.method)&&(e.postBody=t||"",t=""),e.routerParams&&(n=n.replace(/:([a-z\_\-][a-z0-9\_\-]+)/gi,function(t,n){return n in e.routerParams?e.routerParams[n]:t})),t&&(n+=(n.indexOf("?")==-1?"?":"&")+t),e.requestUrl=n,e},doRequest:function(){this.send(this.prepareRequestData(this.requestData))},send:function(e){this.update({contentType:"",status:""}),f.test("gecko1.8.1-")&&e.asynchronous&&(this.xhr=A()),this.emit_start();var t=this.xhr;this.prevReadyState_=-1,t.onreadystatechange=D.bind(this),e.asynchronous||D.call(this,b),t.open(e.method,e.requestUrl,e.asynchronous),this.lastRequestUrl_=e.requestUrl,M(t,e),this.responseType=e.responseType||"",O(t,e),this.setTimeout(this.timeout);var n=e.postBody;if(k.test(e.method)&&f.test("ie9-"))if(typeof n=="object"&&typeof n.documentElement!="undefined"&&typeof n.xml=="string")n=n.xml;else if(typeof n=="string")n=n.replace(/\r/g,"");else if(n==null||n=="")n="[No data]";return this.sendDelay?(this.sendDelayTimer_&&(this.sendDelayTimer_=clearTimeout(this.sendDelayTimer_)),this.sendDelayTimer_=setTimeout(function(){this.sendDelayTimer_=null,this.xhr===t&&t.readyState==w&&t.send(n)}.bind(this),this.sendDelay)):t.send(n),!0},repeat:function(){this.requestData&&(this.abort(),this.doRequest())},abort:function(){this.isIdle()||(this.clearTimeout(),this.xhr.abort(),this.xhr.readyState!=x&&this.xhr.readyState!=b&&D.call(this,x))},setTimeout:function(e){if(!this.xhr.asynchronous)return;"ontimeout"in this.xhr?(this.xhr.timeout=e,this.xhr.ontimeout=this.timeoutAbort.bind(this)):this.timer_=setTimeout(this.timeoutAbort.bind(this),e)},clearTimeout:function(){this.timer_&&(this.timer_=clearTimeout(this.timer_))},timeoutAbort:function(){this.update({error:{code:"TIMEOUT_ERROR",message:"Timeout error"}}),this.emit_timeout(this),this.abort()},destroy:function(){this.abort(),this.xhr=null,g.prototype.destroy.call(this)}}),H=y.subclass({className:a+".Transport",requestClass:P,emit_readyStateChanged:v("readyStateChanged"),asynchronous:!0,method:"GET",contentType:"application/x-www-form-urlencoded",encoding:null,requestHeaders:n.Class.extensibleProperty(),responseType:"",params:null,routerParams:null,url:"",postBody:null,init:function(){y.prototype.init.call(this),this.params=p(this.params),this.routerParams=p(this.routerParams)},setParam:function(e,t){this.params[e]=t},setParams:function(e){this.clearParams();for(var t in e)this.setParam(t,e[t])},removeParam:function(e){delete this.params[e]},clearParams:function(){for(var e in this.params)delete this.params[e]},prepareRequestData:function(e){if(!e.url&&!this.url)throw 44;return h(e,{headers:d(this.requestHeaders,e.headers),params:d(this.params,e.params),routerParams:d(this.routerParams,e.routerParams)}),n.object.complete(e,{asynchronous:this.asynchronous,url:this.url,method:this.method,contentType:this.contentType,encoding:this.encoding,postBody:this.postBody,responseType:this.responseType}),e}});t.exports={Request:P,Transport:H,request:function(e,t,r){typeof e=="string"&&(e={url:e,asynchronous:!!t||!!r});var i=new H(e);i.addHandler({success:t&&function(e,n,r){t(r)},failure:r&&function(e,t,n){r(n)},complete:function(){n.nextTick(function(){i.destroy()})}});var s=i.request();if(!s.requestData.asynchronous)return s.getResponseData()}}},"m.js":function(e,t,n,r,i,s,o,u){function S(e){var t=1e6,n=String(e).split(".");for(var r=0,i=0;r<4&&r<n.length;r++,t/=100)i+=n[r]*t;return i}function x(e){var t=e.toLowerCase();if(t in p)return p[t];var n=t.match(/^([a-z]+)(([\d\.]+)([+-=]?))?$/i);if(n){p[t]=!1;var r=n[1].toLowerCase(),i=S(n[3]),s=n[4]||"=",o=h[r];if(o)return p[t]=!i||s=="="&&o==i||s=="+"&&o>=i||s=="-"&&o<i}return!1}var a=this.path,f=r.document,l=r.navigator&&r.navigator.userAgent||"",c=r.opera,h={},p={},d="unknown",v="unknown",m={MSIE:["Internet Explorer","msie","ie"],Gecko:["Gecko","gecko"],Safari:["Safari","safari"],"iPhone OS":["iPhone","iphone"],AdobeAir:["AdobeAir","air"],AppleWebKit:["WebKit"],Chrome:["Chrome","chrome"],FireFox:["FireFox","firefox","ff"],Iceweasel:["FireFox","firefox","ff"],Shiretoko:["FireFox","firefox","ff"],Opera:["Opera","opera"]};for(var g in m){if(g=="MSIE"&&c)continue;if(g=="Safari"&&/chrome/i.test(l))continue;if(g=="AppleWebKit"&&/iphone/i.test(l))continue;if(l.match(new RegExp(g+"."+"(\\d+(\\.\\d+)*)","i"))){var y=m[g],b=c&&typeof c.version=="function"?c.version():RegExp.$1,w=S(b);d=y[0]+w,v=y[0]+" "+b;for(var E=0;E<y.length;E++)h[y[E].toLowerCase()]=w}}var T={set:function(e,t,n,r,i){f.cookie=e+"="+(t==null?"":escape(t))+";path="+(r||(location.pathname.indexOf("/")==0?"":"/")+location.pathname)+(n?";expires="+(new Date(Date.now()+n*1e3)).toGMTString():"")+(i?";domain="+i:"")},get:function(e){var t=f.cookie.match(new RegExp("(^|;)\\s*"+e+"\\s*=\\s*(.*?)\\s*(;|$)"));return t&&unescape(t[2])},remove:function(e,t,n){f.cookie=e+"=;expires="+(new Date(0)).toGMTString()+";path="+(t||(location.pathname.indexOf("/")==0?"":"/")+location.pathname)+(n?";domain="+n:"")}};t.exports={prettyName:v,is:x,test:function(){return n.array(arguments).some(x)},cookies:T}},"n.js":function(e,t,n,r,i,s,o,u){function v(e){return e.transport?e.transport:e.service?e.service.createTransport(e):e.createTransport?e.createTransport(e):new n.net.ajax.Transport(e)}function m(e){e=n.object.extend({prepare:h,request:h},e);var t=n.object.splice(e,["prepare","request"]),r=n.object.merge(d,n.object.splice(e,["start","success","failure","abort","complete"])),i=n.fn.lazyInit(function(){var t=v(e);return t.addHandler(p,r),t});return function(){this.state!=l&&(t.prepare.apply(this,arguments),this.request=i().request(n.object.complete({origin:this},t.request.apply(this,arguments))))}}n.require("./4.js"),n.require("./l.js");var a=n.data.STATE.UNDEFINED,f=n.data.STATE.READY,l=n.data.STATE.PROCESSING,c=n.data.STATE.ERROR,h=function(){},p={start:function(e,t){var n=t.requestData.origin;this.start.call(t.requestData.origin),n.state!=l&&n.setState(l)},success:function(e,t,n){var r=t.requestData.origin;this.success.call(r,n),r.state==l&&r.setState(f)},failure:function(e,t,n){var r=t.requestData.origin;this.failure.call(r,n),r.state==l&&r.setState(c,n)},abort:function(e,t){var n=t.requestData.origin;this.abort.call(n),n.state==l&&n.setState(a)},complete:function(e,t){this.complete.call(t.requestData.origin)}},d={start:h,success:h,failure:h,abort:h,complete:h};t.exports={create:m}},"o.js":function(e,t,n,r,i,s,o,u){function E(e){function r(e){return t.substr(e).match(/^\w+/)}function i(e,s){var o="",u;for(var a=e;a<t.length;a++){var f=t.charAt(a);switch(f){case s:return{result:o,offset:a};case"\\":o+="\\"+t.charAt(++a);break;case"|":o+=s!=")"?"\\|":"|";break;case"(":(u=i(a+1,")"))?(a=u.offset,o+="(?:"+u.result+")?"):o+="\\(";break;case":":(u=r(a+1))?(a+=u[0].length,o+="([^/]+)"):o+=":";break;case"*":(u=r(a+1))?(a+=u[0].length,o+="(.*?)"):o+="\\*";break;default:o+=n.string.forRegExp(f)}}return s?null:o}var t=String(e||"");return new RegExp("^"+i(0)+"$","i")}function S(){p?n.dom.event.addHandler(r,"hashchange",C):w=setInterval(C,d)}function x(){p?n.dom.event.removeHandler(r,"hashchange",C):clearInterval(w)}function T(){y||(S(),y=!0,C())}function N(){y&&(x(),y=!1)}function C(){var e=l.hash.substr(1)||"";if(e!=b){var t=[],n=[];b=e;for(var r in m){var i=m[r],s=e.match(i.regexp);s?(g[r]||t.push(i),g[r]=s):g[r]&&(n.push(i),delete g[r])}for(var o=0,i;i=n[o];o++){var u=v(i.callbacks);for(var a=0,f;f=u[a];a++)f.callback.leave&&f.callback.leave.call(f.context)}for(var o=0,i;i=t[o];o++){var u=v(i.callbacks);for(var a=0,f;f=u[a];a++)f.callback.enter&&f.callback.enter.call(f.context)}for(var r in g){var i=m[r],c=v(g[r],1),u=v(i.callbacks);for(var o=0,f;f=u[o];o++)f.callback.match&&f.callback.match.apply(f.context,c)}}}function k(e,t,n){var r=m[e],i;if(!r){r=m[e]={source:e,callbacks:[],regexp:Object.prototype.toString.call(e)!="[object RegExp]"?E(e):e};if(typeof b=="string"){var s=b.match(r.regexp);s&&(g[e]=s)}}i={cb_:t,context:n,callback:typeof t!="function"?t||{}:{match:t}},r.callbacks.push(i),e in g&&(i.callback.enter&&i.callback.enter.call(n),i.callback.match&&i.callback.match.apply(n,v(g[e],1)))}function L(e,t,n){var r=m[e];if(r){var i=-1;for(var s=0,o;o=r.callbacks[s];s++)if(o.cb_===t&&o.context===n){r.callbacks.splice(s,1),r.callbacks.length||(delete m[e],delete g[e]);break}}}function A(e,t){t?l.replace(l.pathname+"#"+e):l.hash=e,y&&C()}n.require("./8.js");var a=this.path,f=n.namespace(String(a)),l=r.location,c=r.document,h=c.documentMode,p="onhashchange"in r&&(h===undefined||h>7),d=50,v=n.array.from,m={},g={},y=!1,b,w;t.exports={debug:!1,add:k,remove:L,stop:N,start:T,checkUrl:C,navigate:A}},"p.js":function(e,t,n,r,i,s,o,u){function p(e){a.title=e}function d(e){return typeof e=="string"?a.getElementById(e):e}function v(e,t){e.parentNode.replaceChild(t,e)}var a=r.document||{title:"unknown"},f=a.title,l=n.fn.$undef,c,h,m=n.fn.lazyInit(function(e){var t=[],r=!1,i={inited:!1,setTitle:function(e){e!=f&&(f instanceof n.Token&&f.detach(p),e instanceof n.Token?(e.attach(p),p(e.get())):p(e),f=e)},setElement:function(e){var t=d(e);if(h==t)return;if(h){v(h,t);return}h=t,c||(c={type:"append",node:a.body});var n=d(c.node);if(!n)return;c.type=="append"?n.appendChild(h):v(n,h)},ready:function(e,n){r?e.call(n,i):t.push({fn:e,context:n})}};for(var s in e){var o=e[s];switch(s){case"title":i.setTitle(o);break;case"container":c={type:"append",node:o};break;case"replace":c={type:"replace",node:o};break;case"element":h=o;break;case"init":l=typeof o=="function"?o:l;break;default:}}return n.ready(function(){var e=h,n=l.call(i);n&&(n.element?e=n.element:e=n),h=null,i.setElement(e),r=!0,i.inited=!0;var s;while(s=t.shift())s.fn.call(s.context,i)}),i});t.exports={create:m}}};(function r(i,s,o){function l(e){function t(e){return Math.round(e).toString(36)}var n=t(10+25*Math.random());e||(e=16);while(n.length<e)n+=t(new Date*Math.random());return n.substr(0,e)}function c(e,t){for(var n in t)e[n]=t[n];return e}function h(e,t){for(var n in t)n in e==0&&(e[n]=t[n]);return e}function p(e){var t=[];for(var n in e)t.push(n);return t}function d(e){var t=[];for(var n in e)t.push(e[n]);return t}function v(e,t){var n={};if(!t)return c(n,e);for(var r=0,i;i=t[r++];)i in e&&(n[i]=e[i]);return n}function m(e,t){var n={};if(!t)return c(n,e);for(var r=0,i;i=t[r++];)i in e&&(n[i]=e[i],delete e[i]);return n}function g(){var e={};for(var t=0;t<arguments.length;t++)c(e,arguments[t]);return e}function y(e,t,n){var r=[];for(var i in e)r.push(t.call(n,i,e[i]));return r}function b(e){return e==undefined}function w(e){return e!=undefined}function E(e){return e==null||e==undefined}function S(e){return e!=null&&e!=undefined}function x(e){return e===this}function T(e){return e!==this}function N(e){return e}function C(e){return function(){return e}}function k(){return!1}function L(){return!0}function A(){return null}function O(){}function D(e){return function(t){var n={};return n[e]=t,n}}function P(e,t){var n=0,r,i;return r=function(){return n++||(r.inited=!0,r.data=i=e.apply(t||this,arguments)),i}}function H(e,t,n){var r=0,i,s;return i=function(){return r++||(i.inited=!0,i.data=s=e.call(n||this)),t.apply(s,arguments),s}}function B(e,t){var n=0;return function(){if(!(n++))return e.apply(t||this,arguments)}}function W(){var e=o;if(!e)if(q)U=__filename.replace(/\\/g,"/");else{var t=a.scripts;for(var n=0,r;r=t[n];n++){var i=r.hasAttribute("basis-config")?r.getAttribute("basis-config"):r.getAttribute("data-basis-config");r.removeAttribute("basis-config"),r.removeAttribute("data-basis-config");if(i!==null){U=R.normalize(r.src);try{e=Function("return{"+i+"}")()}catch(s){}break}}}return X(e)}function X(e,t){e=v(e);var n=[],r=g(e.path,e.modules,{basis:U});e.modules={};if(e.autoload){var i=String(e.autoload).match(/^((?:[^\/]*\/)*)([a-z$_][a-z0-9$_]*)((?:\.[a-z$_][a-z0-9$_]*)*)$/i);i&&(r[i[2]]={autoload:!0,filename:i[1]+i[2]+(i[3]||".js")}),delete e.autoload}for(var s in r){var o=r[s];typeof o=="string"&&(o={filename:o.replace(/\/$/,"/"+s+".js")});var u=o.filename,a=o.path;u&&!a&&(u=R.resolve(u),a=u.substr(0,u.length-R.extname(u).length),u="../"+R.basename(u)),a=R.resolve(a),!u&&a&&(u=R.basename(a),a=R.dirname(a)),R.extname(u)||(u+=".js"),u=R.resolve(a,u),e.modules[s]={path:a,filename:u},o.autoload&&(e.autoload=n,n.push(s))}return e}function et(e){var t=Y[e.url];if(t)for(var n=0;n<t.length;n++)t[n](e.get(),e.url)}function it(e,t,n){try{return new Function(t,n)}catch(r){j.error("Compilation error at "+e+("line"in r?":"+(r.line-1):"")+": "+r)}}function ct(e){if(e in ut==0){var t=e.split("."),n=t.shift(),r=t.join("/")+".js";n in ft==0&&(ft[n]=R.baseURI+n+"/"),n==e?r=ft[n].replace(/\/$/,"")+".js":r=ft[n]+r,ut[e]=r,at[r]=e}return ut[e]}function ht(e){var n=ot[e];return n||(n=ot[e]=new lt(e),n.namespaces_={},n.namespaces_[e]=n,z.noConflict||(i[e]=n)),e=="library"&&!t&&(t=ot[e]),n}function pt(e){e=e.split(".");var t=ht(e[0]),n=t;for(var r=1,i;i=e[r];r++){if(!n[i]){var s=e.slice(0,r+1).join(".");n[i]=new lt(s),t.namespaces_[s]=n[i]}n=n[i]}return ot[e.join(".")]=n,n}function vt(e,t){!/[^a-z0-9_\.]/i.test(e)&&R.extname(e)!=".js"?e=ct(e):e=R.resolve(e),Y[e]?Y[e].push(t):Y[e]=[t];var n=rt.get(e);n&&n.isResolved()&&t(n.get(),n.url)}function mt(e,t){if(e!=null){var n=e.length;if(typeof n=="undefined"||f.call(e)=="[object Function]")return[e];t||(t=0);if(n-t>0){for(var r=[],i=0,s=t;s<n;)r[i++]=e[s++];return r}}return[]}function gt(e,t,n){var r=[],i=typeof t=="function";for(var s=0;s<e;s++)r[s]=i?t.call(n,s,r):t;return r}var u="1.3.3",a=i.document,f=Object.prototype.toString,M=function(){function o(e){if(n.test(e)){var t=e.split("."),r=t[0],i=t[1],s=t[2],o;switch(t.length){case 1:o=function(e){return e!=null?e[r]:e};break;case 2:o=function(e){return e!=null?e[r][i]:e};break;case 3:o=function(e){return e!=null?e[r][i][s]:e};break;default:o=function(e){if(e!=null){e=e[r][i][s];for(var n=3,o;o=t[n];n++)e=e[o]}return e}}return o}return new Function("object","return object != null ? object."+e+" : object")}var e="basisGetterId"+l()+"_",t=1,n=/^[a-z$_][a-z$_0-9]*(\.[a-z$_][a-z$_0-9]*)*$/i,r=[],i={},s={},u=function(n,u){var a,f,l;if(!n||n===_)return _;typeof n=="function"?(l=n[e],l?a=r[Math.abs(l)-1]:(a=function(e){return n(e)},a.base=n,a.__extend__=M,l=r.push(a),n[e]=-l,a[e]=l)):(a=i[n],a?l=a[e]:(a=o(n),a.base=n,a.__extend__=M,l=r.push(a),a[e]=l,i[n]=a));var c=u!=null&&typeof u;if(!c)return a;var h=s[l],p;if(c=="string")p=c+u;else if(c=="function")p=u.basisModId_;else if(c!="object")return a;if(p&&h&&h[p])return h[p];typeof a.base=="function"&&(a=a.base);switch(c){case"string":f=function(e){return St.format(u,a(e))};break;case"function":p||(p=c+t++,u.basisModId_=p),f=function(e){return u(a(e))};break;default:f=function(e){return u[a(e)]}}return f.base=a.base||a,f.__extend__=M,p&&(h||(h={},s[l]=h),h[p]=f,f.mod=u,f[e]=r.push(f)),f};return u.ID=e,u}(),_=c(function(){},{__extend__:M}),j=function(){var e={log:O,info:O,warn:O,error:O};return typeof console!="undefined"&&y(e,function(t){e[t]="bind"in Function.prototype&&typeof console[t]=="function"?Function.prototype.bind.call(console[t],console):function(){Function.prototype.apply.call(console[t],console,arguments)}}),e}(),F=i.setImmediate||i.msSetImmediate,I=i.clearImmediate||i.msSetImmediate;F&&(F=F.bind(i)),I&&(I=I.bind(i)),F||function(){var e="basisjs.setImmediate",t=function(){var e={},t=1;return F=function(r){if(typeof r!="function")return;return e[++t]={fn:r,args:mt(arguments,1)},n(t),t},I=function(t){delete e[t]},function(t){var n=e[t];if(n)return delete e[t],n.fn.apply(undefined,n.args)}}(),n=function(e){setTimeout(function(){t(e)},0)};if(i.process&&typeof process.nextTick=="function")n=function(e){process.nextTick(function(){t(e)})};else if(i.MessageChannel){var r=new i.MessageChannel;r.port1.onmessage=function(e){var n=e.data;t(n)},n=function(e){r.port2.postMessage(e)}}else{var s=i.postMessage&&!i.importScripts;if(s){var o=i.onmessage;i.onmessage=function(){s=!1},i.postMessage("","*"),i.onmessage=o}if(s){var u=function(n){if(n&&n.source==i){var r=String(n.data).split(e)[1];r&&t(r)}};i.addEventListener?i.addEventListener("message",u,!0):i.attachEvent("onmessage",u),n=function(t){i.postMessage(e+t,"*")}}else{var f=function(){return a.createElement("script")};if(a&&"onreadystatechange"in f()){var l=n;n=function c(e){typeof kt!="undefined"&&(n=l,kt.head.ready(function(){n=function(e){var n=f();n.onreadystatechange=function(){n.onreadystatechange=null,kt.remove(n),n=null,t(e)},kt.head.add(n)}})),n===c?l(e):n(e)}}}}}();var q=typeof process=="object"&&f.call(process)=="[object process]",R=function(){var e=/^([^\/]+:|\/)/,t=/^[a-zA-Z0-9\-]+:\/?/,n=/^(?:[a-zA-Z0-9\-]+:)?\/\/[^\/]+\/?/,r=/[\?#].*$/,i,s,o;if(q){var u=(process.basisjsBaseURI||require("path").resolve(".")).replace(/\\/g,"/");i=u.replace(/^[^\/]*/,""),s=u.replace(/\/.*/,"")}else i=location.pathname.replace(/[^\/]+$/,""),s=location.protocol+"//"+location.host;return o={baseURI:i,origin:s,normalize:function(e){e=(e||"").replace(t,"/").replace(n,"/").replace(r,"");var i=[],s=e.split("/");for(var o=0;o<s.length;o++)s[o]==".."?(i.length>1||i[0])&&i.pop():(s[o]||!o)&&s[o]!="."&&i.push(s[o]);return i.join("/")||(e[0]==="/"?"/":"")},dirname:function(e){var t=o.normalize(e);return t.replace(/\/([^\/]*)$|^[^\/]+$/,"")||(t[0]=="/"?"/":".")},extname:function(e){var t=o.normalize(e).match(/[^\/](\.[^\/\.]*)$/);return t?t[1]:""},basename:function(e,t){var n=o.normalize(e).match(/[^\\\/]*$/);return n=n?n[0]:"",t==o.extname(n)&&(n=n.substring(0,n.length-t.length)),n},resolve:function(t,n){var r=mt(arguments).reverse(),s=[],u=!1;for(var a=0;!u&&a<r.length;a++)typeof r[a]=="string"&&(s.unshift(r[a]),u=e.test(r[a]));return u||s.unshift(i=="/"?"":i),o.normalize(s.join("/"))},relative:function(e,t){typeof t!="string"&&(t=e,e=i),e=o.normalize(e),t=o.normalize(t);if(e[0]=="/"&&t[0]!="/")return e;if(t[0]=="/"&&e[0]!="/")return t;var n=e.replace(/^\/$/,"").split(/\//),r=t.replace(/^\/$/,"").split(/\//),s=[],u=0;while(r[u]==n[u]&&typeof n[u]=="string")u++;for(var a=n.length-u;a>0;a--)s.push("..");return s.concat(r.slice(u).filter(Boolean)).join("/")}},o}(),U=s||"",z=o||{noConflict:!0,modules:{},autoload:["./0.js"]},V=function(){function r(e){return typeof e=="function"&&!!e.basisClassId_}function i(e){var t=this;while(t&&t!==e)t=t.superClass_;return t===e}function s(e,t,n){return(new Function(p(t),'return {"'+e+'": '+n+'\n}["'+e+'"]')).apply(null,d(t))}function u(s,o){var f=t++;typeof s!="function"&&(s=l);var h=function(){};h.prototype=s.prototype;var p=new h,d={basisClassId_:f,superClass_:s,extendConstructor_:!!s.extendConstructor_,isSubclassOf:i,subclass:function(){return u.apply(null,[g].concat(mt(arguments)))},extend:a,__extend__:function(e){return e&&e!==n&&(typeof e=="object"||typeof e=="function"&&!r(e))?l.create.call(null,g,e):e},prototype:p};for(var v=1,m;m=arguments[v];v++)d.extend(m);var g=d.extendConstructor_?function(t){this.basisObjectId=e.id++;var n;for(var r in t)n=this[r],this[r]=n&&n.__extend__?n.__extend__(t[r]):t[r];this.init(),this.postInit()}:function(){this.basisObjectId=e.id++,this.init.apply(this,arguments),this.postInit()};p.constructor=g;for(var y in p)p[y]===n&&(p[y]=g);return c(g,d),g}function a(e){var t=this.prototype;typeof e=="function"&&!r(e)&&(e=e(this.superClass_.prototype,v(t))),e.prototype&&(e=e.prototype);for(var n in e){var i=e[n],s=t[n];n=="className"||n=="extendConstructor_"?this[n]=i:s&&s.__extend__?t[n]=s.__extend__(i):t[n]=i}return o&&e[n="toString"]!==f&&(t[n]=e[n]),this}var e={id:1},t=1,n={},o=function(){for(var e in{toString:1})return!1;return!0}(),l=c(u,{className:"basis.Class",extendConstructor_:!1,prototype:{basisObjectId:0,constructor:null,init:function(){},postInit:function(){},destroy:function(){for(var e in this)hasOwnProperty.call(this,e)&&(this[e]=null);this.destroy=O}}}),h=function(e,t,n){return{__extend__:function(e){if(!e)return e;if(e&&e.__extend__)return e;var n=function(){};n.prototype=this;var r=new n;return t(r,e),r}}.__extend__(e||{})},m=function(e){return h(e,c,"extensibleProperty")},g=function(e){return h(e,function(e,t){for(var n in t){var r=e[n];e[n]=r&&r.__extend__?r.__extend__(t[n]):m(t[n])}},"nestedExtendProperty")},y=function(e,t){var n=function(t){var r={__extend__:n};if(t){if(t.__extend__)return t;for(var i in t)t[i]&&(r[i]=e)}return r};return n(t||{})};return c(l,{SELF:n,create:u,isClass:r,customExtendProperty:h,extensibleProperty:m,nestedExtendProperty:g,oneFunctionProperty:y})}(),$=V(null,{className:"basis.Token",value:null,handler:null,deferredToken:null,bindingBridge:{attach:function(e,t,n){e.attach(t,n)},detach:function(e,t,n){e.detach(t,n)},get:function(e){return e.get()}},init:function(e){this.value=e},get:function(){return this.value},set:function(e){this.value!==e&&(this.value=e,this.apply())},attach:function(e,t){this.handler={fn:e,context:t,handler:this.handler}},detach:function(e,t){var n=this,r;while(r=n,n=n.handler)if(n.fn===e&&n.context===t){n.fn=O,r.handler=n.handler;return}},apply:function(){var e=this.get(),t=this;while(t=t.handler)t.fn.call(t.context,e)},deferred:function(){var e=this.deferredToken;return e||(e=this.deferredToken=new K(this.value),this.attach(e.set,e)),e},destroy:function(){this.deferredToken&&(this.deferredToken.destroy(),this.deferredToken=null),this.handler=null,this.value=null,this.attach=O,this.detach=O}}),J=function(){function n(){var n=e;e={},t=null;for(var r in n)n[r].apply()}var e={},t;return function(r){if(r.basisObjectId in e)return;e[r.basisObjectId]=r,t||F(n)}}(),K=$.subclass({className:"basis.DeferredToken",set:function(e){this.value!==e&&(this.value=e,J(this))},deferred:function(){return this}}),Q={},G={},Y={},Z=1;(function(){var e=typeof n!="undefined"?n:null;if(e)for(var t in e)G[R.resolve(t)]=e[t]})();var tt=function(e,t){if(t||!G.hasOwnProperty(e)){var n="";if(!q){var r=new XMLHttpRequest;r.open("GET",e,!1),r.setRequestHeader("If-Modified-Since",(new Date(0)).toGMTString()),r.setRequestHeader("X-Basis-Resource",1),r.send(""),r.status>=200&&r.status<400&&(n=r.responseText)}else try{n=process.basisjsReadFile?process.basisjsReadFile(e):require("fs").readFileSync(e,"utf-8")}catch(i){}G[e]=n}return G[e]},nt=function(e,t){var n=R.extname(e),r=rt.extensions[n],i=arguments.length>1,s=!1,o=!1;i&&(e+="#virtual");var u=function(){if(s)return t;var n=i?t:tt(e);return r?o||(o=!0,t=r(n,e)):t=n,s=!0,et(u),u.apply(),t};return c(u,c(new $,{url:e,type:n,virtual:i,fetch:function(){return u()},toString:function(){return"[basis.resource "+e+"]"},isResolved:function(){return s},update:function(n){if(!s||i||n!=G[e])i||(G[e]=n),r?(!o&&i&&(t=n),o&&!r.permanent&&(t=r(n,e,t),et(u),u.apply())):(t=n,s=!0,et(u),u.apply())},reload:function(){if(i)return;var t=G[e],n=tt(e,!0);n!=t&&(s=!1,u.update(n))},get:function(n){return i&&n?r?wrappedContent:t:n?tt(e):u()},ready:function(e,t){if(s){e.call(t,u());if(r&&r.permanent)return}return u.attach(e,t),u}})),Q[e]=u,u},rt=function(e){var t=Q[e];return t?t:(e=R.resolve(e),t=Q[e],t||nt(e))};c(rt,{isResource:function(e){return e?Q[e.url]===e:!1},isResolved:function(e){var t=rt.get(e);return t?t.isResolved():!1},exists:function(e){return Q.hasOwnProperty(R.resolve(e))},get:function(e){return e=R.resolve(e),rt.exists(e)?rt(e):null},getFiles:function(e){return p(e?G:Q).map(R.relative)},virtual:function(e,t,n){return nt((n?n+":":R.normalize(R.baseURI=="/"?"":R.baseURI)+"/")+"virtual-resource"+Z++ +"."+e,t)},extensions:{".js":c(function(e,t){var n=at[t];if(!n){var r=!0,i=R.dirname(t)+"/"+R.basename(t,R.extname(t));for(var s in ft){var o=ft[s]+s+"/";if(i.substr(0,o.length)==o){r=!1,i=i.substr(ft[s].length);break}}n=i.replace(/\./g,"_").replace(/^\//g,"").replace(/\//g,"."),r&&(n="implicit."+n)}if(!ot[n]){var s=pt(n);s.exports=st({path:s.path,exports:s.exports},t,e).exports,s.exports&&s.exports.constructor===Object&&h(s,s.exports)}return ot[n].exports},{permanent:!0}),".css":function(e,t,n){return n||(n=new At(t)),n.updateCssText(e),n},".json":function(e,t){if(typeof e=="object")return e;var n;try{e=String(e),n=Ot.json.parse(e)}catch(r){}return n||null}}});var st=function(e,t,n){var r=R.dirname(t)+"/",s=n;return e.exports||(e.exports={}),typeof s!="function"&&(s=it(t,["exports","module","basis","global","__filename","__dirname","resource","require"],'"use strict";\n'+n)),typeof s=="function"&&s.call(e.exports,e.exports,e,Ot,i,t,r,function(e){return rt(R.resolve(r,e))},function(e,t){return dt(e,t||r)}),e},ot={},ut={},at={},ft={};y(z.modules,function(e,t){ft[e]=t.path+"/",ut[e]=t.filename,at[t.filename]=e}),function(t){var t=typeof e!="undefined"?e:null;if(t)for(var n in t){var r=R.resolve(n),i=t[n];at[r]=i,ut[i]=r}}();var lt=V(null,{className:"basis.Namespace",init:function(e){this.name=e,this.exports={path:this.name}},toString:function(){return"[basis.namespace "+this.path+"]"},extend:function(e){return c(this.exports,e),h(this,e)}}),dt=function(){if(q){var e=module.constructor.prototype;return function(t,n){if(!/[^a-z0-9_\.]/i.test(t)||R.extname(t)==".js"){var r=e._compile,i=pt(t);e._compile=function(e,t){this.basis=Ot,e='var __nodejsRequire = require;\nvar basis = module.basis;\nvar resource = function(filename){ return basis.resource(__dirname + "/" + filename) };\nvar require = function(filename, baseURI){ return basis.require(filename, baseURI || __dirname) };\n'+e,r.call(c(this,i),e,t)};var s=require(__dirname+"/"+t.replace(/\./g,"/"));return i.exports=s,s&&s.constructor===Object&&h(i,s),e._compile=r,s}return t=R.resolve(n,t),require(t)}}return function(e,t){return!/[^a-z0-9_\.]/i.test(e)&&R.extname(e)!=".js"?e=ct(e):e=R.resolve(t,e),rt(e).fetch()}}();h(Function.prototype,{bind:function(e){var t=this,n=mt(arguments,1);return n.length?function(){return t.apply(e,n.concat.apply(n,arguments))}:function(){return t.apply(e,arguments)}}}),h(Array,{isArray:function(e){return f.call(e)==="[object Array]"}}),h(Array.prototype,{indexOf:function(e,t){t=parseInt(t,10)||0;if(t<0)return-1;for(;t<this.length;t++)if(this[t]===e)return t;return-1},lastIndexOf:function(e,t){var n=this.length;t=parseInt(t,10),isNaN(t)||t>=n?t=n-1:t=(t+n)%n;for(;t>=0;t--)if(this[t]===e)return t;return-1},forEach:function(e,t){for(var n=0,r=this.length;n<r;n++)n in this&&e.call(t,this[n],n,this)},every:function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&!e.call(t,this[n],n,this))return!1;return!0},some:function(e,t){for(var n=0,r=this.length;n<r;n++)if(n in this&&e.call(t,this[n],n,this))return!0;return!1},filter:function(e,t){var n=[];for(var r=0,i=this.length;r<i;r++)r in this&&e.call(t,this[r],r,this)&&n.push(this[r]);return n},map:function(e,t){var n=[];for(var r=0,i=this.length;r<i;r++)r in this&&(n[r]=e.call(t,this[r],r,this));return n},reduce:function(e,t){var n=this.length,r=arguments.length;if(n==0&&r==1)throw 1;var i,s=0;r>1&&(i=t,s=1);for(var o=0;o<n;o++)o in this&&(s++?i=e.call(null,i,this[o],o,this):i=this[o]);return i}});var yt={from:mt,create:gt,flatten:function(e){return e.concat.apply([],e)},repeat:function(e,t){return yt.flatten(gt(parseInt(t,10)||0,e))},search:function(e,t,n,r){e.lastSearchIndex=-1,n=M(n||N);for(var i=parseInt(r,10)||0,s=e.length;i<s;i++)if(n(e[i])===t)return e[e.lastSearchIndex=i]},lastSearch:function(e,t,n,r){e.lastSearchIndex=-1,n=M(n||N);var i=e.length,s=isNaN(r)||r==null?i:parseInt(r,10);for(var o=s>i?i:s;o-->0;)if(n(e[o])===t)return e[e.lastSearchIndex=o]},add:function(e,t){return e.indexOf(t)==-1&&!!e.push(t)},remove:function(e,t){var n=e.indexOf(t);return n!=-1&&!!e.splice(n,1)},has:function(e,t){return e.indexOf(t)!=-1},sortAsObject:function(){return yt.sort.apply(this,arguments)},sort:function(e,t,n,r){return t=M(t),r=r?-1:1,e.map(function(e,n){return{i:n,v:t(e)}}).sort(n||function(e,t){return r*(e.v>t.v||-(e.v<t.v)||(e.i>t.i?1:-1))}).map(function(e){return this[e.i]},e)}};if(![1,2].splice(1).length){var bt=Array.prototype.splice;Array.prototype.splice=function(){var e=mt(arguments);return e.length<2&&(e[1]=this.length),bt.apply(this,e)}}var wt=/([\/\\\(\)\[\]\?\{\}\|\*\+\-\.\^\$])/g,Et=/\{([a-z\d_]+)(?::([\.0])(\d+)|:(\?))?\}/gi;h(String,{toLowerCase:function(e){return String(e).toLowerCase()},toUpperCase:function(e){return String(e).toUpperCase()},trim:function(e){return String(e).trim()},trimLeft:function(e){return String(e).trimLeft()},trimRight:function(e){return String(e).trimRight()}}),h(String.prototype,{trimLeft:function(){return this.replace(/^\s+/,"")},trimRight:function(){return this.replace(/\s+$/,"")},trim:function(){return this.trimLeft().trimRight()}});var St={toObject:function(e,t){try{return(new Function("return 0,"+e))()}catch(n){if(t)throw 2}},repeat:function(e,t){return(new Array(parseInt(t,10)+1||0)).join(e)},qw:function(e){var t=e.trim();return t?t.split(/\s+/):[]},forRegExp:function(e){return e.replace(wt,"\\$1")},format:function(e,t){var n=mt(arguments,1);return typeof t=="object"&&c(n,t),e.replace(Et,function(e,t,r,i,s){var o=t in n?n[t]:s?"":e;return r&&!isNaN(o)?(o=Number(o),r=="."?o.toFixed(i):Nt.lead(o,i)):o})},capitalize:function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()},camelize:function(e){return e.replace(/-(.)/g,function(e,t){return t.toUpperCase()})},dasherize:function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})},isEmpty:function(e){return e==null||String(e)==""},isNotEmpty:function(e){return e!=null&&String(e)!=""}};if("|||".split(/\|/).length+"|||".split(/(\|)/).length!=11){var xt=String.prototype.split;String.prototype.split=function(e,t){if(!e||e instanceof RegExp==0||e.source=="")return xt.apply(this,arguments);var n=[],r=0,i;e.global||(e=new RegExp(e.source,/\/([mi]*)$/.exec(e)[1]+"g"));while(i=e.exec(this))i[0]=this.substring(r,i.index),n.push.apply(n,i),r=e.lastIndex;return n.push(this.substr(r)),n}}if("12".substr(-1)!="2"){var Tt=String.prototype.substr;String.prototype.substr=function(e,t){return Tt.call(this,e<0?Math.max(0,this.length+e):e,t)}}var Nt={fit:function(e,t,n){return!isNaN(t)&&e<t?Number(t):!isNaN(n)&&e>n?Number(n):e},lead:function(e,t,n){return String(e).replace(/\d+/,function(e){return(t-=e.length-1)>1?(new Array(t)).join(n||0)+e:e})},group:function(e,t,n){return String(e).replace(/\d+/,function(e){return e.replace(/\d/g,function(r,i){return!i+(e.length-i)%(t||3)?r:(n||" ")+r})})},format:function(e,t,n,r,i,s){var o=e.toFixed(t);if(n||s)o=o.replace(/(\d+)(\.?)/,function(e,t,r){return(n?Ot.number.group(Number(t),3,n):t)+(r?s||r:"")});return r&&(o=o.replace(/^-?/,"$&"+(r||""))),o+(i||"")}};h(Date,{now:function(){return Number(new Date)}});var Ct=function(){function e(){return a.readyState=="complete"&&!!a.body}function r(e){e.callback.call(e.context)}function s(){if(e()&&!(t++))while(n)r(n),n=n.next}function o(){try{a.documentElement.doScroll("left"),s()}catch(e){setTimeout(o,1)}}var t=!a||e(),n;if(!t)if(a.addEventListener)a.addEventListener("DOMContentLoaded",s,!1),i.addEventListener("load",s,!1);else{a.attachEvent("onreadystatechange",s),i.attachEvent("onload",s);try{!i.frameElement&&a.documentElement.doScroll&&o()}catch(u){}}return function(e,i){t?r({callback:e,context:i}):n={callback:e,context:i,next:n}}}(),kt=function(){function r(e){if(a&&!t[e]){t[e]=a[e]||a.getElementsByTagName(e)[0];if(t[e]){var r=n[e];delete n[e];for(var i=0,s;s=r[i];i++)s[0].call(s[1],t[e])}}return t[e]}function i(){var e=this[0],t=this[1],s=this[2];o(t);var u=r(e);if(u){s===!0&&(s=u.firstChild);if(!s||s.parentNode!==u)s=null;u.insertBefore(t,s)}else n[e].push([i,[e,t,s]])}function s(e,r,i){n[e]?n[e].push([r,i]):r.call(i,t[e])}function o(e){for(var t in n){var r=yt.search(n[t],e,function(e){return e[1]&&e[1][1]});r&&yt.remove(n[t],r)}e&&e.parentNode&&e.parentNode.nodeType==1&&e.parentNode.removeChild(e)}function u(){e&&r("head")&&r("body")&&(e=clearInterval(e))}var e,t={},n={head:[],body:[]};return a&&(!r("head")||!r("body"))&&(e=setInterval(u,5),Ct(u)),{head:{ready:function(e,t){s("head",e,t)},add:function(e,t){i.call(["head",e,t])}},body:{ready:function(e,t){s("body",e,t)},add:function(e,t){i.call(["body",e,t])}},remove:o}}(),Lt=function(){function t(t){n.globalDestroy=!0,n.add=O,n.remove=O;var r;while(r=e.pop())if(typeof r.destroy=="function")try{r.destroy()}catch(i){}else for(var s in r)r[s]=null;e.length=0}var e=[];if("attachEvent"in i)i.attachEvent("onunload",t);else{if(!("addEventListener"in i))return{add:O,remove:O};i.addEventListener("unload",t,!1)}var n={add:function(t){t!=null&&e.push(t)},remove:function(t){yt.remove(e,t)}};return n}(),At=function(){function n(e){t.setAttribute("href",e),kt.head.add(t,!0)}function r(){t.setAttribute("href",location.href),kt.remove(t)}function i(){n(this.baseURI),this.element||(this.element=a.createElement("style"),e||this.element.appendChild(a.createTextNode(""))),kt.head.add(this.element),this.syncCssText(),r()}var e=function(){try{return!a.createElement("style").appendChild(a.createTextNode(""))}catch(e){return!0}}(),t=a&&a.createElement("base");return V(null,{className:"basis.CssResource",inUse:0,url:"",baseURI:"",cssText:undefined,element:null,init:function(e){this.url=e,this.baseURI=R.dirname(e)+"/"},updateCssText:function(e){this.cssText!=e&&(this.cssText=e,this.inUse&&this.element&&(n(this.baseURI),this.syncCssText(),r()))},syncCssText:e?function(){this.element.styleSheet.cssText=this.cssText}:function(){var e=this.cssText;this.element.firstChild.nodeValue=e},startUse:function(){this.inUse||kt.head.ready(i,this),this.inUse+=1},stopUse:function(){this.inUse&&(this.inUse-=1,!this.inUse&&this.element&&kt.remove(this.element))},destroy:function(){this.element&&kt.remove(this.element),this.element=null,this.cssText=null}})}(),Ot=pt("basis").extend({version:u,NODE_ENV:q,config:z,createSandbox:function(e){return r(i,U,h({noConflict:!0},e))},resolveNSFilename:ct,patch:vt,namespace:pt,require:dt,resource:rt,asset:function(e){return e},setImmediate:F,clearImmediate:I,nextTick:function(){F.apply(null,arguments)},Class:V,Token:$,DeferredToken:K,genUID:l,getter:M,ready:Ct,cleaner:Lt,console:j,path:R,doc:kt,object:{extend:c,complete:h,keys:p,values:d,slice:v,splice:m,merge:g,iterate:y},fn:{$undefined:b,$defined:w,$isNull:E,$isNotNull:S,$isSame:x,$isNotSame:T,$self:N,$const:C,$false:k,$true:L,$null:A,$undef:O,getter:M,nullGetter:_,wrapper:D,lazyInit:P,lazyInitAndRun:H,runOnce:B},array:c(mt,yt),string:St,number:Nt,bool:{invert:function(e){return!e}},json:{parse:typeof JSON!="undefined"?JSON.parse:function(e){return St.toObject(e,!0)}}});return pt("basis.dev").extend(j),z.autoload&&z.autoload.forEach(function(e){dt(e)}),Ot})(this)}).call(this)",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 12:11:08 GMT",
                    "Content-Length": "204042",
                    "Date": "Thu, 06 Nov 2014 12:11:10 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}