{
    "url": "http://localhost:9999/mixxen/cesiumjs/Build/Documentation/Camera.html",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>window.location.href</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>ele.href = window.location.href;</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/mixxen/cesiumjs/Build/Documentation/Camera.html",
                "path": "/mixxen/cesiumjs/Build/Documentation/Camera.html",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9taXh4ZW4vY2VzaXVtanMvQnVpbGQvRG9jdW1lbnRhdGlvbi9DYW1lcmEuaHRtbCBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1FZGdlLGNocm9tZT0xIj4NCiAgICA8dGl0bGU+Q2FtZXJhIC0gQ2VzaXVtIERvY3VtZW50YXRpb248L3RpdGxlPg0KDQogICAgPCEtLVtpZiBsdCBJRSA5XT4NCiAgICAgIDxzY3JpcHQgc3JjPSJqYXZhc2NyaXB0L2h0bWw1LmpzIj48L3NjcmlwdD4NCiAgICA8IVtlbmRpZl0tLT4NCiAgICA8bGluayBocmVmPSJzdHlsZXMvanNkb2MtZGVmYXVsdC5jc3MiIHJlbD0ic3R5bGVzaGVldCI+DQogICAgPGxpbmsgaHJlZj0ic3R5bGVzL3ByaXNtLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4NCjwvaGVhZD4NCjxib2R5Pg0KDQo8ZGl2IGlkPSJia2dkIj4NCg0KPGRpdiBjbGFzcz0ibmF2Ij4NCiAgICA8ZGl2IGNsYXNzPSJtZW51Ij4NCiAgICAgICAgPGEgaHJlZj0iaW5kZXguaHRtbCI+PGltZyBpZD0iY2VzaXVtLWxvZ28iIHNyYz0iaW1hZ2VzL0Nlc2l1bUxvZ28uanBnIiBjbGFzcz0ibWVudUxvZ28iPjwvYT4NCiAgICAgICAgPGRpdiBjbGFzcz0iZGl2aWRlciI+PC9kaXY+DQoNCiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJjbGFzc0ZpbHRlciIgaWQ9IkNsYXNzRmlsdGVyIiBwbGFjZWhvbGRlcj0iRmlsdGVyIj4NCg0KICAgICAgICA8dWwgaWQ9IkNsYXNzTGlzdCI+PGxpIGRhdGEtbmFtZT0iQW5pbWF0aW9uIj48YSBocmVmPSJBbmltYXRpb24uaHRtbCI+QW5pbWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQW5pbWF0aW9uVmlld01vZGVsIj48YSBocmVmPSJBbmltYXRpb25WaWV3TW9kZWwuaHRtbCI+QW5pbWF0aW9uVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQXBwZWFyYW5jZSI+PGEgaHJlZj0iQXBwZWFyYW5jZS5odG1sIj5BcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQXJjR2lzSW1hZ2VTZXJ2ZXJUZXJyYWluUHJvdmlkZXIiPjxhIGhyZWY9IkFyY0dpc0ltYWdlU2VydmVyVGVycmFpblByb3ZpZGVyLmh0bWwiPkFyY0dpc0ltYWdlU2VydmVyVGVycmFpblByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQXJjR2lzTWFwU2VydmVySW1hZ2VyeVByb3ZpZGVyIj48YSBocmVmPSJBcmNHaXNNYXBTZXJ2ZXJJbWFnZXJ5UHJvdmlkZXIuaHRtbCI+QXJjR2lzTWFwU2VydmVySW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQXNzb2NpYXRpdmVBcnJheSI+PGEgaHJlZj0iQXNzb2NpYXRpdmVBcnJheS5odG1sIj5Bc3NvY2lhdGl2ZUFycmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQXhpc0FsaWduZWRCb3VuZGluZ0JveCI+PGEgaHJlZj0iQXhpc0FsaWduZWRCb3VuZGluZ0JveC5odG1sIj5BeGlzQWxpZ25lZEJvdW5kaW5nQm94PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iYmFyeWNlbnRyaWNDb29yZGluYXRlcyI+PGEgaHJlZj0iYmFyeWNlbnRyaWNDb29yZGluYXRlcy5odG1sIj5iYXJ5Y2VudHJpY0Nvb3JkaW5hdGVzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmFzZUxheWVyUGlja2VyIj48YSBocmVmPSJCYXNlTGF5ZXJQaWNrZXIuaHRtbCI+QmFzZUxheWVyUGlja2VyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmFzZUxheWVyUGlja2VyVmlld01vZGVsIj48YSBocmVmPSJCYXNlTGF5ZXJQaWNrZXJWaWV3TW9kZWwuaHRtbCI+QmFzZUxheWVyUGlja2VyVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmlsbGJvYXJkIj48YSBocmVmPSJCaWxsYm9hcmQuaHRtbCI+QmlsbGJvYXJkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmlsbGJvYXJkQ29sbGVjdGlvbiI+PGEgaHJlZj0iQmlsbGJvYXJkQ29sbGVjdGlvbi5odG1sIj5CaWxsYm9hcmRDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmlsbGJvYXJkR3JhcGhpY3MiPjxhIGhyZWY9IkJpbGxib2FyZEdyYXBoaWNzLmh0bWwiPkJpbGxib2FyZEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmlsbGJvYXJkVmlzdWFsaXplciI+PGEgaHJlZj0iQmlsbGJvYXJkVmlzdWFsaXplci5odG1sIj5CaWxsYm9hcmRWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iYmluYXJ5U2VhcmNoIj48YSBocmVmPSJiaW5hcnlTZWFyY2guaHRtbCI+YmluYXJ5U2VhcmNoPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmluZ01hcHNJbWFnZXJ5UHJvdmlkZXIiPjxhIGhyZWY9IkJpbmdNYXBzSW1hZ2VyeVByb3ZpZGVyLmh0bWwiPkJpbmdNYXBzSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmluZ01hcHNTdHlsZSI+PGEgaHJlZj0iQmluZ01hcHNTdHlsZS5odG1sIj5CaW5nTWFwc1N0eWxlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmxlbmRFcXVhdGlvbiI+PGEgaHJlZj0iQmxlbmRFcXVhdGlvbi5odG1sIj5CbGVuZEVxdWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmxlbmRGdW5jdGlvbiI+PGEgaHJlZj0iQmxlbmRGdW5jdGlvbi5odG1sIj5CbGVuZEZ1bmN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQmxlbmRpbmdTdGF0ZSI+PGEgaHJlZj0iQmxlbmRpbmdTdGF0ZS5odG1sIj5CbGVuZGluZ1N0YXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQm91bmRpbmdSZWN0YW5nbGUiPjxhIGhyZWY9IkJvdW5kaW5nUmVjdGFuZ2xlLmh0bWwiPkJvdW5kaW5nUmVjdGFuZ2xlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQm91bmRpbmdTcGhlcmUiPjxhIGhyZWY9IkJvdW5kaW5nU3BoZXJlLmh0bWwiPkJvdW5kaW5nU3BoZXJlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQm94R2VvbWV0cnkiPjxhIGhyZWY9IkJveEdlb21ldHJ5Lmh0bWwiPkJveEdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQm94T3V0bGluZUdlb21ldHJ5Ij48YSBocmVmPSJCb3hPdXRsaW5lR2VvbWV0cnkuaHRtbCI+Qm94T3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FtZXJhIj48YSBocmVmPSJDYW1lcmEuaHRtbCI+Q2FtZXJhPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FtZXJhRXZlbnRBZ2dyZWdhdG9yIj48YSBocmVmPSJDYW1lcmFFdmVudEFnZ3JlZ2F0b3IuaHRtbCI+Q2FtZXJhRXZlbnRBZ2dyZWdhdG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FtZXJhRXZlbnRUeXBlIj48YSBocmVmPSJDYW1lcmFFdmVudFR5cGUuaHRtbCI+Q2FtZXJhRXZlbnRUeXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY2FuY2VsQW5pbWF0aW9uRnJhbWUiPjxhIGhyZWY9ImNhbmNlbEFuaW1hdGlvbkZyYW1lLmh0bWwiPmNhbmNlbEFuaW1hdGlvbkZyYW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FydGVzaWFuMiI+PGEgaHJlZj0iQ2FydGVzaWFuMi5odG1sIj5DYXJ0ZXNpYW4yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FydGVzaWFuMyI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FydGVzaWFuNCI+PGEgaHJlZj0iQ2FydGVzaWFuNC5odG1sIj5DYXJ0ZXNpYW40PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2FydG9ncmFwaGljIj48YSBocmVmPSJDYXJ0b2dyYXBoaWMuaHRtbCI+Q2FydG9ncmFwaGljPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2F0bXVsbFJvbVNwbGluZSI+PGEgaHJlZj0iQ2F0bXVsbFJvbVNwbGluZS5odG1sIj5DYXRtdWxsUm9tU3BsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2VzaXVtSW5zcGVjdG9yIj48YSBocmVmPSJDZXNpdW1JbnNwZWN0b3IuaHRtbCI+Q2VzaXVtSW5zcGVjdG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2VzaXVtSW5zcGVjdG9yVmlld01vZGVsIj48YSBocmVmPSJDZXNpdW1JbnNwZWN0b3JWaWV3TW9kZWwuaHRtbCI+Q2VzaXVtSW5zcGVjdG9yVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2VzaXVtTWF0aCI+PGEgaHJlZj0iQ2VzaXVtTWF0aC5odG1sIj5DZXNpdW1NYXRoPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2VzaXVtVGVycmFpblByb3ZpZGVyIj48YSBocmVmPSJDZXNpdW1UZXJyYWluUHJvdmlkZXIuaHRtbCI+Q2VzaXVtVGVycmFpblByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2VzaXVtV2lkZ2V0Ij48YSBocmVmPSJDZXNpdW1XaWRnZXQuaHRtbCI+Q2VzaXVtV2lkZ2V0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2lyY2xlR2VvbWV0cnkiPjxhIGhyZWY9IkNpcmNsZUdlb21ldHJ5Lmh0bWwiPkNpcmNsZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2lyY2xlT3V0bGluZUdlb21ldHJ5Ij48YSBocmVmPSJDaXJjbGVPdXRsaW5lR2VvbWV0cnkuaHRtbCI+Q2lyY2xlT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2xvY2siPjxhIGhyZWY9IkNsb2NrLmh0bWwiPkNsb2NrPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2xvY2tSYW5nZSI+PGEgaHJlZj0iQ2xvY2tSYW5nZS5odG1sIj5DbG9ja1JhbmdlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2xvY2tTdGVwIj48YSBocmVmPSJDbG9ja1N0ZXAuaHRtbCI+Q2xvY2tTdGVwPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ2xvY2tWaWV3TW9kZWwiPjxhIGhyZWY9IkNsb2NrVmlld01vZGVsLmh0bWwiPkNsb2NrVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY2xvbmUiPjxhIGhyZWY9ImNsb25lLmh0bWwiPmNsb25lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29sb3IiPjxhIGhyZWY9IkNvbG9yLmh0bWwiPkNvbG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlIj48YSBocmVmPSJDb2xvckdlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUuaHRtbCI+Q29sb3JHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29sb3JNYXRlcmlhbFByb3BlcnR5Ij48YSBocmVmPSJDb2xvck1hdGVyaWFsUHJvcGVydHkuaHRtbCI+Q29sb3JNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY29tYmluZSI+PGEgaHJlZj0iY29tYmluZS5odG1sIj5jb21iaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tbWFuZCI+PGEgaHJlZj0iQ29tbWFuZC5odG1sIj5Db21tYW5kPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tcG9uZW50RGF0YXR5cGUiPjxhIGhyZWY9IkNvbXBvbmVudERhdGF0eXBlLmh0bWwiPkNvbXBvbmVudERhdGF0eXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tcG9zaXRlRW50aXR5Q29sbGVjdGlvbiI+PGEgaHJlZj0iQ29tcG9zaXRlRW50aXR5Q29sbGVjdGlvbi5odG1sIj5Db21wb3NpdGVFbnRpdHlDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tcG9zaXRlTWF0ZXJpYWxQcm9wZXJ0eSI+PGEgaHJlZj0iQ29tcG9zaXRlTWF0ZXJpYWxQcm9wZXJ0eS5odG1sIj5Db21wb3NpdGVNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tcG9zaXRlUG9zaXRpb25Qcm9wZXJ0eSI+PGEgaHJlZj0iQ29tcG9zaXRlUG9zaXRpb25Qcm9wZXJ0eS5odG1sIj5Db21wb3NpdGVQb3NpdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29tcG9zaXRlUHJvcGVydHkiPjxhIGhyZWY9IkNvbXBvc2l0ZVByb3BlcnR5Lmh0bWwiPkNvbXBvc2l0ZVByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29uc3RhbnRQb3NpdGlvblByb3BlcnR5Ij48YSBocmVmPSJDb25zdGFudFBvc2l0aW9uUHJvcGVydHkuaHRtbCI+Q29uc3RhbnRQb3NpdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29uc3RhbnRQcm9wZXJ0eSI+PGEgaHJlZj0iQ29uc3RhbnRQcm9wZXJ0eS5odG1sIj5Db25zdGFudFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29ybmVyVHlwZSI+PGEgaHJlZj0iQ29ybmVyVHlwZS5odG1sIj5Db3JuZXJUeXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29ycmlkb3JHZW9tZXRyeSI+PGEgaHJlZj0iQ29ycmlkb3JHZW9tZXRyeS5odG1sIj5Db3JyaWRvckdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ29ycmlkb3JPdXRsaW5lR2VvbWV0cnkiPjxhIGhyZWY9IkNvcnJpZG9yT3V0bGluZUdlb21ldHJ5Lmh0bWwiPkNvcnJpZG9yT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY3JlYXRlQ29tbWFuZCI+PGEgaHJlZj0iY3JlYXRlQ29tbWFuZC5odG1sIj5jcmVhdGVDb21tYW5kPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY3JlYXRlR3VpZCI+PGEgaHJlZj0iY3JlYXRlR3VpZC5odG1sIj5jcmVhdGVHdWlkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iY3JlYXRlVGFza1Byb2Nlc3NvcldvcmtlciI+PGEgaHJlZj0iY3JlYXRlVGFza1Byb2Nlc3Nvcldvcmtlci5odG1sIj5jcmVhdGVUYXNrUHJvY2Vzc29yV29ya2VyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3JlZGl0Ij48YSBocmVmPSJDcmVkaXQuaHRtbCI+Q3JlZGl0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3JlZGl0RGlzcGxheSI+PGEgaHJlZj0iQ3JlZGl0RGlzcGxheS5odG1sIj5DcmVkaXREaXNwbGF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3ViaWNSZWFsUG9seW5vbWlhbCI+PGEgaHJlZj0iQ3ViaWNSZWFsUG9seW5vbWlhbC5odG1sIj5DdWJpY1JlYWxQb2x5bm9taWFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3VsbEZhY2UiPjxhIGhyZWY9IkN1bGxGYWNlLmh0bWwiPkN1bGxGYWNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3VsbGluZ1ZvbHVtZSI+PGEgaHJlZj0iQ3VsbGluZ1ZvbHVtZS5odG1sIj5DdWxsaW5nVm9sdW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3lsaW5kZXJHZW9tZXRyeSI+PGEgaHJlZj0iQ3lsaW5kZXJHZW9tZXRyeS5odG1sIj5DeWxpbmRlckdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3lsaW5kZXJPdXRsaW5lR2VvbWV0cnkiPjxhIGhyZWY9IkN5bGluZGVyT3V0bGluZUdlb21ldHJ5Lmh0bWwiPkN5bGluZGVyT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iQ3ptbERhdGFTb3VyY2UiPjxhIGhyZWY9IkN6bWxEYXRhU291cmNlLmh0bWwiPkN6bWxEYXRhU291cmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGF0YVNvdXJjZSI+PGEgaHJlZj0iRGF0YVNvdXJjZS5odG1sIj5EYXRhU291cmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGF0YVNvdXJjZUNsb2NrIj48YSBocmVmPSJEYXRhU291cmNlQ2xvY2suaHRtbCI+RGF0YVNvdXJjZUNsb2NrPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGF0YVNvdXJjZUNvbGxlY3Rpb24iPjxhIGhyZWY9IkRhdGFTb3VyY2VDb2xsZWN0aW9uLmh0bWwiPkRhdGFTb3VyY2VDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGF0YVNvdXJjZURpc3BsYXkiPjxhIGhyZWY9IkRhdGFTb3VyY2VEaXNwbGF5Lmh0bWwiPkRhdGFTb3VyY2VEaXNwbGF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGVidWdBcHBlYXJhbmNlIj48YSBocmVmPSJEZWJ1Z0FwcGVhcmFuY2UuaHRtbCI+RGVidWdBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGVidWdNb2RlbE1hdHJpeFByaW1pdGl2ZSI+PGEgaHJlZj0iRGVidWdNb2RlbE1hdHJpeFByaW1pdGl2ZS5odG1sIj5EZWJ1Z01vZGVsTWF0cml4UHJpbWl0aXZlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGVmYXVsdFByb3h5Ij48YSBocmVmPSJEZWZhdWx0UHJveHkuaHRtbCI+RGVmYXVsdFByb3h5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZGVmYXVsdFZhbHVlIj48YSBocmVmPSJkZWZhdWx0VmFsdWUuaHRtbCI+ZGVmYXVsdFZhbHVlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZGVmaW5lZCI+PGEgaHJlZj0iZGVmaW5lZC5odG1sIj5kZWZpbmVkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGVwdGhGdW5jdGlvbiI+PGEgaHJlZj0iRGVwdGhGdW5jdGlvbi5odG1sIj5EZXB0aEZ1bmN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZGVzdHJveU9iamVjdCI+PGEgaHJlZj0iZGVzdHJveU9iamVjdC5odG1sIj5kZXN0cm95T2JqZWN0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGV2ZWxvcGVyRXJyb3IiPjxhIGhyZWY9IkRldmVsb3BlckVycm9yLmh0bWwiPkRldmVsb3BlckVycm9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRGlzY2FyZE1pc3NpbmdUaWxlSW1hZ2VQb2xpY3kiPjxhIGhyZWY9IkRpc2NhcmRNaXNzaW5nVGlsZUltYWdlUG9saWN5Lmh0bWwiPkRpc2NhcmRNaXNzaW5nVGlsZUltYWdlUG9saWN5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRHluYW1pY0dlb21ldHJ5VXBkYXRlciI+PGEgaHJlZj0iRHluYW1pY0dlb21ldHJ5VXBkYXRlci5odG1sIj5EeW5hbWljR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzZUdlb21ldHJ5Ij48YSBocmVmPSJFbGxpcHNlR2VvbWV0cnkuaHRtbCI+RWxsaXBzZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzZUdlb21ldHJ5VXBkYXRlciI+PGEgaHJlZj0iRWxsaXBzZUdlb21ldHJ5VXBkYXRlci5odG1sIj5FbGxpcHNlR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzZUdyYXBoaWNzIj48YSBocmVmPSJFbGxpcHNlR3JhcGhpY3MuaHRtbCI+RWxsaXBzZUdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzZU91dGxpbmVHZW9tZXRyeSI+PGEgaHJlZj0iRWxsaXBzZU91dGxpbmVHZW9tZXRyeS5odG1sIj5FbGxpcHNlT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkIj48YSBocmVmPSJFbGxpcHNvaWQuaHRtbCI+RWxsaXBzb2lkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkR2VvZGVzaWMiPjxhIGhyZWY9IkVsbGlwc29pZEdlb2Rlc2ljLmh0bWwiPkVsbGlwc29pZEdlb2Rlc2ljPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkR2VvbWV0cnkiPjxhIGhyZWY9IkVsbGlwc29pZEdlb21ldHJ5Lmh0bWwiPkVsbGlwc29pZEdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkR2VvbWV0cnlVcGRhdGVyIj48YSBocmVmPSJFbGxpcHNvaWRHZW9tZXRyeVVwZGF0ZXIuaHRtbCI+RWxsaXBzb2lkR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkR3JhcGhpY3MiPjxhIGhyZWY9IkVsbGlwc29pZEdyYXBoaWNzLmh0bWwiPkVsbGlwc29pZEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkT3V0bGluZUdlb21ldHJ5Ij48YSBocmVmPSJFbGxpcHNvaWRPdXRsaW5lR2VvbWV0cnkuaHRtbCI+RWxsaXBzb2lkT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkUHJpbWl0aXZlIj48YSBocmVmPSJFbGxpcHNvaWRQcmltaXRpdmUuaHRtbCI+RWxsaXBzb2lkUHJpbWl0aXZlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkU3VyZmFjZUFwcGVhcmFuY2UiPjxhIGhyZWY9IkVsbGlwc29pZFN1cmZhY2VBcHBlYXJhbmNlLmh0bWwiPkVsbGlwc29pZFN1cmZhY2VBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkVGFuZ2VudFBsYW5lIj48YSBocmVmPSJFbGxpcHNvaWRUYW5nZW50UGxhbmUuaHRtbCI+RWxsaXBzb2lkVGFuZ2VudFBsYW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRWxsaXBzb2lkVGVycmFpblByb3ZpZGVyIj48YSBocmVmPSJFbGxpcHNvaWRUZXJyYWluUHJvdmlkZXIuaHRtbCI+RWxsaXBzb2lkVGVycmFpblByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRW50aXR5Ij48YSBocmVmPSJFbnRpdHkuaHRtbCI+RW50aXR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRW50aXR5Q29sbGVjdGlvbiI+PGEgaHJlZj0iRW50aXR5Q29sbGVjdGlvbi5odG1sIj5FbnRpdHlDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRW50aXR5VmlldyI+PGEgaHJlZj0iRW50aXR5Vmlldy5odG1sIj5FbnRpdHlWaWV3PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRXZlbnQiPjxhIGhyZWY9IkV2ZW50Lmh0bWwiPkV2ZW50PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRXZlbnRIZWxwZXIiPjxhIGhyZWY9IkV2ZW50SGVscGVyLmh0bWwiPkV2ZW50SGVscGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRXh0cmFwb2xhdGlvblR5cGUiPjxhIGhyZWY9IkV4dHJhcG9sYXRpb25UeXBlLmh0bWwiPkV4dHJhcG9sYXRpb25UeXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRmVhdHVyZURldGVjdGlvbiI+PGEgaHJlZj0iRmVhdHVyZURldGVjdGlvbi5odG1sIj5GZWF0dXJlRGV0ZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZm9ybWF0RXJyb3IiPjxhIGhyZWY9ImZvcm1hdEVycm9yLmh0bWwiPmZvcm1hdEVycm9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRnJhbWVSYXRlTW9uaXRvciI+PGEgaHJlZj0iRnJhbWVSYXRlTW9uaXRvci5odG1sIj5GcmFtZVJhdGVNb25pdG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRnVsbHNjcmVlbiI+PGEgaHJlZj0iRnVsbHNjcmVlbi5odG1sIj5GdWxsc2NyZWVuPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRnVsbHNjcmVlbkJ1dHRvbiI+PGEgaHJlZj0iRnVsbHNjcmVlbkJ1dHRvbi5odG1sIj5GdWxsc2NyZWVuQnV0dG9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iRnVsbHNjcmVlbkJ1dHRvblZpZXdNb2RlbCI+PGEgaHJlZj0iRnVsbHNjcmVlbkJ1dHRvblZpZXdNb2RlbC5odG1sIj5GdWxsc2NyZWVuQnV0dG9uVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvY29kZXIiPjxhIGhyZWY9Ikdlb2NvZGVyLmh0bWwiPkdlb2NvZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvY29kZXJWaWV3TW9kZWwiPjxhIGhyZWY9Ikdlb2NvZGVyVmlld01vZGVsLmh0bWwiPkdlb2NvZGVyVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvZ3JhcGhpY1Byb2plY3Rpb24iPjxhIGhyZWY9Ikdlb2dyYXBoaWNQcm9qZWN0aW9uLmh0bWwiPkdlb2dyYXBoaWNQcm9qZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZSI+PGEgaHJlZj0iR2VvZ3JhcGhpY1RpbGluZ1NjaGVtZS5odG1sIj5HZW9ncmFwaGljVGlsaW5nU2NoZW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvSnNvbkRhdGFTb3VyY2UiPjxhIGhyZWY9Ikdlb0pzb25EYXRhU291cmNlLmh0bWwiPkdlb0pzb25EYXRhU291cmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnkiPjxhIGhyZWY9Ikdlb21ldHJ5Lmh0bWwiPkdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlBdHRyaWJ1dGUiPjxhIGhyZWY9Ikdlb21ldHJ5QXR0cmlidXRlLmh0bWwiPkdlb21ldHJ5QXR0cmlidXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlBdHRyaWJ1dGVzIj48YSBocmVmPSJHZW9tZXRyeUF0dHJpYnV0ZXMuaHRtbCI+R2VvbWV0cnlBdHRyaWJ1dGVzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlJbnN0YW5jZSI+PGEgaHJlZj0iR2VvbWV0cnlJbnN0YW5jZS5odG1sIj5HZW9tZXRyeUluc3RhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZSI+PGEgaHJlZj0iR2VvbWV0cnlJbnN0YW5jZUF0dHJpYnV0ZS5odG1sIj5HZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlQaXBlbGluZSI+PGEgaHJlZj0iR2VvbWV0cnlQaXBlbGluZS5odG1sIj5HZW9tZXRyeVBpcGVsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlVcGRhdGVyIj48YSBocmVmPSJHZW9tZXRyeVVwZGF0ZXIuaHRtbCI+R2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2VvbWV0cnlWaXN1YWxpemVyIj48YSBocmVmPSJHZW9tZXRyeVZpc3VhbGl6ZXIuaHRtbCI+R2VvbWV0cnlWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZ2V0RmlsZW5hbWVGcm9tVXJpIj48YSBocmVmPSJnZXRGaWxlbmFtZUZyb21VcmkuaHRtbCI+Z2V0RmlsZW5hbWVGcm9tVXJpPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZ2V0SW1hZ2VQaXhlbHMiPjxhIGhyZWY9ImdldEltYWdlUGl4ZWxzLmh0bWwiPmdldEltYWdlUGl4ZWxzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iZ2V0VGltZXN0YW1wIj48YSBocmVmPSJnZXRUaW1lc3RhbXAuaHRtbCI+Z2V0VGltZXN0YW1wPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR2xvYmUiPjxhIGhyZWY9Ikdsb2JlLmh0bWwiPkdsb2JlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR29vZ2xlRWFydGhJbWFnZXJ5UHJvdmlkZXIiPjxhIGhyZWY9Ikdvb2dsZUVhcnRoSW1hZ2VyeVByb3ZpZGVyLmh0bWwiPkdvb2dsZUVhcnRoSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR3JlZ29yaWFuRGF0ZSI+PGEgaHJlZj0iR3JlZ29yaWFuRGF0ZS5odG1sIj5HcmVnb3JpYW5EYXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR3JpZEltYWdlcnlQcm92aWRlciI+PGEgaHJlZj0iR3JpZEltYWdlcnlQcm92aWRlci5odG1sIj5HcmlkSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iR3JpZE1hdGVyaWFsUHJvcGVydHkiPjxhIGhyZWY9IkdyaWRNYXRlcmlhbFByb3BlcnR5Lmh0bWwiPkdyaWRNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSGVpZ2h0bWFwVGVycmFpbkRhdGEiPjxhIGhyZWY9IkhlaWdodG1hcFRlcnJhaW5EYXRhLmh0bWwiPkhlaWdodG1hcFRlcnJhaW5EYXRhPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSGVpZ2h0bWFwVGVzc2VsbGF0b3IiPjxhIGhyZWY9IkhlaWdodG1hcFRlc3NlbGxhdG9yLmh0bWwiPkhlaWdodG1hcFRlc3NlbGxhdG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSGVybWl0ZVBvbHlub21pYWxBcHByb3hpbWF0aW9uIj48YSBocmVmPSJIZXJtaXRlUG9seW5vbWlhbEFwcHJveGltYXRpb24uaHRtbCI+SGVybWl0ZVBvbHlub21pYWxBcHByb3hpbWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSGVybWl0ZVNwbGluZSI+PGEgaHJlZj0iSGVybWl0ZVNwbGluZS5odG1sIj5IZXJtaXRlU3BsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSG9tZUJ1dHRvbiI+PGEgaHJlZj0iSG9tZUJ1dHRvbi5odG1sIj5Ib21lQnV0dG9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSG9tZUJ1dHRvblZpZXdNb2RlbCI+PGEgaHJlZj0iSG9tZUJ1dHRvblZpZXdNb2RlbC5odG1sIj5Ib21lQnV0dG9uVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSG9yaXpvbnRhbE9yaWdpbiI+PGEgaHJlZj0iSG9yaXpvbnRhbE9yaWdpbi5odG1sIj5Ib3Jpem9udGFsT3JpZ2luPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW1hZ2VNYXRlcmlhbFByb3BlcnR5Ij48YSBocmVmPSJJbWFnZU1hdGVyaWFsUHJvcGVydHkuaHRtbCI+SW1hZ2VNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW1hZ2VyeUxheWVyIj48YSBocmVmPSJJbWFnZXJ5TGF5ZXIuaHRtbCI+SW1hZ2VyeUxheWVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW1hZ2VyeUxheWVyQ29sbGVjdGlvbiI+PGEgaHJlZj0iSW1hZ2VyeUxheWVyQ29sbGVjdGlvbi5odG1sIj5JbWFnZXJ5TGF5ZXJDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW1hZ2VyeUxheWVyRmVhdHVyZUluZm8iPjxhIGhyZWY9IkltYWdlcnlMYXllckZlYXR1cmVJbmZvLmh0bWwiPkltYWdlcnlMYXllckZlYXR1cmVJbmZvPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW1hZ2VyeVByb3ZpZGVyIj48YSBocmVmPSJJbWFnZXJ5UHJvdmlkZXIuaHRtbCI+SW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW5kZXhEYXRhdHlwZSI+PGEgaHJlZj0iSW5kZXhEYXRhdHlwZS5odG1sIj5JbmRleERhdGF0eXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW5mb0JveCI+PGEgaHJlZj0iSW5mb0JveC5odG1sIj5JbmZvQm94PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW5mb0JveFZpZXdNb2RlbCI+PGEgaHJlZj0iSW5mb0JveFZpZXdNb2RlbC5odG1sIj5JbmZvQm94Vmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW50ZXJwb2xhdGlvbkFsZ29yaXRobSI+PGEgaHJlZj0iSW50ZXJwb2xhdGlvbkFsZ29yaXRobS5odG1sIj5JbnRlcnBvbGF0aW9uQWxnb3JpdGhtPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW50ZXJzZWN0Ij48YSBocmVmPSJJbnRlcnNlY3QuaHRtbCI+SW50ZXJzZWN0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW50ZXJzZWN0aW9uczJEIj48YSBocmVmPSJJbnRlcnNlY3Rpb25zMkQuaHRtbCI+SW50ZXJzZWN0aW9uczJEPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW50ZXJzZWN0aW9uVGVzdHMiPjxhIGhyZWY9IkludGVyc2VjdGlvblRlc3RzLmh0bWwiPkludGVyc2VjdGlvblRlc3RzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSW50ZXJ2YWwiPjxhIGhyZWY9IkludGVydmFsLmh0bWwiPkludGVydmFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iaXNBcnJheSI+PGEgaHJlZj0iaXNBcnJheS5odG1sIj5pc0FycmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSXNvODYwMSI+PGEgaHJlZj0iSXNvODYwMS5odG1sIj5Jc284NjAxPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ianNvbnAiPjxhIGhyZWY9Impzb25wLmh0bWwiPmpzb25wPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iSnVsaWFuRGF0ZSI+PGEgaHJlZj0iSnVsaWFuRGF0ZS5odG1sIj5KdWxpYW5EYXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iS2V5Ym9hcmRFdmVudE1vZGlmaWVyIj48YSBocmVmPSJLZXlib2FyZEV2ZW50TW9kaWZpZXIuaHRtbCI+S2V5Ym9hcmRFdmVudE1vZGlmaWVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFiZWwiPjxhIGhyZWY9IkxhYmVsLmh0bWwiPkxhYmVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFiZWxDb2xsZWN0aW9uIj48YSBocmVmPSJMYWJlbENvbGxlY3Rpb24uaHRtbCI+TGFiZWxDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFiZWxHcmFwaGljcyI+PGEgaHJlZj0iTGFiZWxHcmFwaGljcy5odG1sIj5MYWJlbEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFiZWxTdHlsZSI+PGEgaHJlZj0iTGFiZWxTdHlsZS5odG1sIj5MYWJlbFN0eWxlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFiZWxWaXN1YWxpemVyIj48YSBocmVmPSJMYWJlbFZpc3VhbGl6ZXIuaHRtbCI+TGFiZWxWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGFncmFuZ2VQb2x5bm9taWFsQXBwcm94aW1hdGlvbiI+PGEgaHJlZj0iTGFncmFuZ2VQb2x5bm9taWFsQXBwcm94aW1hdGlvbi5odG1sIj5MYWdyYW5nZVBvbHlub21pYWxBcHByb3hpbWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGVhcFNlY29uZCI+PGEgaHJlZj0iTGVhcFNlY29uZC5odG1sIj5MZWFwU2Vjb25kPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGluZWFyQXBwcm94aW1hdGlvbiI+PGEgaHJlZj0iTGluZWFyQXBwcm94aW1hdGlvbi5odG1sIj5MaW5lYXJBcHByb3hpbWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTGluZWFyU3BsaW5lIj48YSBocmVmPSJMaW5lYXJTcGxpbmUuaHRtbCI+TGluZWFyU3BsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZEFycmF5QnVmZmVyIj48YSBocmVmPSJsb2FkQXJyYXlCdWZmZXIuaHRtbCI+bG9hZEFycmF5QnVmZmVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZEJsb2IiPjxhIGhyZWY9ImxvYWRCbG9iLmh0bWwiPmxvYWRCbG9iPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZEltYWdlIj48YSBocmVmPSJsb2FkSW1hZ2UuaHRtbCI+bG9hZEltYWdlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZEltYWdlVmlhQmxvYiI+PGEgaHJlZj0ibG9hZEltYWdlVmlhQmxvYi5odG1sIj5sb2FkSW1hZ2VWaWFCbG9iPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZEpzb24iPjxhIGhyZWY9ImxvYWRKc29uLmh0bWwiPmxvYWRKc29uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZFRleHQiPjxhIGhyZWY9ImxvYWRUZXh0Lmh0bWwiPmxvYWRUZXh0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZFdpdGhYaHIiPjxhIGhyZWY9ImxvYWRXaXRoWGhyLmh0bWwiPmxvYWRXaXRoWGhyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibG9hZFhNTCI+PGEgaHJlZj0ibG9hZFhNTC5odG1sIj5sb2FkWE1MPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWFwUHJvamVjdGlvbiI+PGEgaHJlZj0iTWFwUHJvamVjdGlvbi5odG1sIj5NYXBQcm9qZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0ZXJpYWwiPjxhIGhyZWY9Ik1hdGVyaWFsLmh0bWwiPk1hdGVyaWFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0ZXJpYWxBcHBlYXJhbmNlIj48YSBocmVmPSJNYXRlcmlhbEFwcGVhcmFuY2UuaHRtbCI+TWF0ZXJpYWxBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0ZXJpYWxQcm9wZXJ0eSI+PGEgaHJlZj0iTWF0ZXJpYWxQcm9wZXJ0eS5odG1sIj5NYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0cml4MiI+PGEgaHJlZj0iTWF0cml4Mi5odG1sIj5NYXRyaXgyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0cml4MyI+PGEgaHJlZj0iTWF0cml4My5odG1sIj5NYXRyaXgzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTWF0cml4NCI+PGEgaHJlZj0iTWF0cml4NC5odG1sIj5NYXRyaXg0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ibWVyZ2VTb3J0Ij48YSBocmVmPSJtZXJnZVNvcnQuaHRtbCI+bWVyZ2VTb3J0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWwiPjxhIGhyZWY9Ik1vZGVsLmh0bWwiPk1vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxBbmltYXRpb24iPjxhIGhyZWY9Ik1vZGVsQW5pbWF0aW9uLmh0bWwiPk1vZGVsQW5pbWF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxBbmltYXRpb25Db2xsZWN0aW9uIj48YSBocmVmPSJNb2RlbEFuaW1hdGlvbkNvbGxlY3Rpb24uaHRtbCI+TW9kZWxBbmltYXRpb25Db2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxBbmltYXRpb25Mb29wIj48YSBocmVmPSJNb2RlbEFuaW1hdGlvbkxvb3AuaHRtbCI+TW9kZWxBbmltYXRpb25Mb29wPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxHcmFwaGljcyI+PGEgaHJlZj0iTW9kZWxHcmFwaGljcy5odG1sIj5Nb2RlbEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxNYXRlcmlhbCI+PGEgaHJlZj0iTW9kZWxNYXRlcmlhbC5odG1sIj5Nb2RlbE1hdGVyaWFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxNZXNoIj48YSBocmVmPSJNb2RlbE1lc2guaHRtbCI+TW9kZWxNZXNoPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxOb2RlIj48YSBocmVmPSJNb2RlbE5vZGUuaHRtbCI+TW9kZWxOb2RlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9kZWxWaXN1YWxpemVyIj48YSBocmVmPSJNb2RlbFZpc3VhbGl6ZXIuaHRtbCI+TW9kZWxWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTW9vbiI+PGEgaHJlZj0iTW9vbi5odG1sIj5Nb29uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTmF2aWdhdGlvbkhlbHBCdXR0b24iPjxhIGhyZWY9Ik5hdmlnYXRpb25IZWxwQnV0dG9uLmh0bWwiPk5hdmlnYXRpb25IZWxwQnV0dG9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTmF2aWdhdGlvbkhlbHBCdXR0b25WaWV3TW9kZWwiPjxhIGhyZWY9Ik5hdmlnYXRpb25IZWxwQnV0dG9uVmlld01vZGVsLmh0bWwiPk5hdmlnYXRpb25IZWxwQnV0dG9uVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTmVhckZhclNjYWxhciI+PGEgaHJlZj0iTmVhckZhclNjYWxhci5odG1sIj5OZWFyRmFyU2NhbGFyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iTmV2ZXJUaWxlRGlzY2FyZFBvbGljeSI+PGEgaHJlZj0iTmV2ZXJUaWxlRGlzY2FyZFBvbGljeS5odG1sIj5OZXZlclRpbGVEaXNjYXJkUG9saWN5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iT2JqZWN0T3JpZW50ZWRCb3VuZGluZ0JveCI+PGEgaHJlZj0iT2JqZWN0T3JpZW50ZWRCb3VuZGluZ0JveC5odG1sIj5PYmplY3RPcmllbnRlZEJvdW5kaW5nQm94PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iT2NjbHVkZXIiPjxhIGhyZWY9Ik9jY2x1ZGVyLmh0bWwiPk9jY2x1ZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iT3BlblN0cmVldE1hcEltYWdlcnlQcm92aWRlciI+PGEgaHJlZj0iT3BlblN0cmVldE1hcEltYWdlcnlQcm92aWRlci5odG1sIj5PcGVuU3RyZWV0TWFwSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iT3J0aG9ncmFwaGljRnJ1c3R1bSI+PGEgaHJlZj0iT3J0aG9ncmFwaGljRnJ1c3R1bS5odG1sIj5PcnRob2dyYXBoaWNGcnVzdHVtPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGFja2FibGUiPjxhIGhyZWY9IlBhY2thYmxlLmh0bWwiPlBhY2thYmxlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGFja2FibGVGb3JJbnRlcnBvbGF0aW9uIj48YSBocmVmPSJQYWNrYWJsZUZvckludGVycG9sYXRpb24uaHRtbCI+UGFja2FibGVGb3JJbnRlcnBvbGF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGF0aEdyYXBoaWNzIj48YSBocmVmPSJQYXRoR3JhcGhpY3MuaHRtbCI+UGF0aEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGF0aFZpc3VhbGl6ZXIiPjxhIGhyZWY9IlBhdGhWaXN1YWxpemVyLmh0bWwiPlBhdGhWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGVyZm9ybWFuY2VXYXRjaGRvZyI+PGEgaHJlZj0iUGVyZm9ybWFuY2VXYXRjaGRvZy5odG1sIj5QZXJmb3JtYW5jZVdhdGNoZG9nPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGVyZm9ybWFuY2VXYXRjaGRvZ1ZpZXdNb2RlbCI+PGEgaHJlZj0iUGVyZm9ybWFuY2VXYXRjaGRvZ1ZpZXdNb2RlbC5odG1sIj5QZXJmb3JtYW5jZVdhdGNoZG9nVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGVySW5zdGFuY2VDb2xvckFwcGVhcmFuY2UiPjxhIGhyZWY9IlBlckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlLmh0bWwiPlBlckluc3RhbmNlQ29sb3JBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGVyc3BlY3RpdmVGcnVzdHVtIj48YSBocmVmPSJQZXJzcGVjdGl2ZUZydXN0dW0uaHRtbCI+UGVyc3BlY3RpdmVGcnVzdHVtPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGVyc3BlY3RpdmVPZmZDZW50ZXJGcnVzdHVtIj48YSBocmVmPSJQZXJzcGVjdGl2ZU9mZkNlbnRlckZydXN0dW0uaHRtbCI+UGVyc3BlY3RpdmVPZmZDZW50ZXJGcnVzdHVtPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGluQnVpbGRlciI+PGEgaHJlZj0iUGluQnVpbGRlci5odG1sIj5QaW5CdWlsZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGl4ZWxGb3JtYXQiPjxhIGhyZWY9IlBpeGVsRm9ybWF0Lmh0bWwiPlBpeGVsRm9ybWF0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUGxhbmUiPjxhIGhyZWY9IlBsYW5lLmh0bWwiPlBsYW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9pbnRHcmFwaGljcyI+PGEgaHJlZj0iUG9pbnRHcmFwaGljcy5odG1sIj5Qb2ludEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0icG9pbnRJbnNpZGVUcmlhbmdsZSI+PGEgaHJlZj0icG9pbnRJbnNpZGVUcmlhbmdsZS5odG1sIj5wb2ludEluc2lkZVRyaWFuZ2xlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9pbnRWaXN1YWxpemVyIj48YSBocmVmPSJQb2ludFZpc3VhbGl6ZXIuaHRtbCI+UG9pbnRWaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWdvbiI+PGEgaHJlZj0iUG9seWdvbi5odG1sIj5Qb2x5Z29uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWdvbkdlb21ldHJ5Ij48YSBocmVmPSJQb2x5Z29uR2VvbWV0cnkuaHRtbCI+UG9seWdvbkdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWdvbkdlb21ldHJ5VXBkYXRlciI+PGEgaHJlZj0iUG9seWdvbkdlb21ldHJ5VXBkYXRlci5odG1sIj5Qb2x5Z29uR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWdvbkdyYXBoaWNzIj48YSBocmVmPSJQb2x5Z29uR3JhcGhpY3MuaHRtbCI+UG9seWdvbkdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWdvbk91dGxpbmVHZW9tZXRyeSI+PGEgaHJlZj0iUG9seWdvbk91dGxpbmVHZW9tZXRyeS5odG1sIj5Qb2x5Z29uT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmUiPjxhIGhyZWY9IlBvbHlsaW5lLmh0bWwiPlBvbHlsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVDb2xsZWN0aW9uIj48YSBocmVmPSJQb2x5bGluZUNvbGxlY3Rpb24uaHRtbCI+UG9seWxpbmVDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVDb2xvckFwcGVhcmFuY2UiPjxhIGhyZWY9IlBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlLmh0bWwiPlBvbHlsaW5lQ29sb3JBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVHZW9tZXRyeSI+PGEgaHJlZj0iUG9seWxpbmVHZW9tZXRyeS5odG1sIj5Qb2x5bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVHZW9tZXRyeVVwZGF0ZXIiPjxhIGhyZWY9IlBvbHlsaW5lR2VvbWV0cnlVcGRhdGVyLmh0bWwiPlBvbHlsaW5lR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVHbG93UHJvcGVydHkiPjxhIGhyZWY9IlBvbHlsaW5lR2xvd1Byb3BlcnR5Lmh0bWwiPlBvbHlsaW5lR2xvd1Byb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVHcmFwaGljcyI+PGEgaHJlZj0iUG9seWxpbmVHcmFwaGljcy5odG1sIj5Qb2x5bGluZUdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVNYXRlcmlhbEFwcGVhcmFuY2UiPjxhIGhyZWY9IlBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlLmh0bWwiPlBvbHlsaW5lTWF0ZXJpYWxBcHBlYXJhbmNlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVPdXRsaW5lTWF0ZXJpYWxQcm9wZXJ0eSI+PGEgaHJlZj0iUG9seWxpbmVPdXRsaW5lTWF0ZXJpYWxQcm9wZXJ0eS5odG1sIj5Qb2x5bGluZU91dGxpbmVNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVWb2x1bWVHZW9tZXRyeSI+PGEgaHJlZj0iUG9seWxpbmVWb2x1bWVHZW9tZXRyeS5odG1sIj5Qb2x5bGluZVZvbHVtZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9seWxpbmVWb2x1bWVPdXRsaW5lR2VvbWV0cnkiPjxhIGhyZWY9IlBvbHlsaW5lVm9sdW1lT3V0bGluZUdlb21ldHJ5Lmh0bWwiPlBvbHlsaW5lVm9sdW1lT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9zaXRpb25Qcm9wZXJ0eSI+PGEgaHJlZj0iUG9zaXRpb25Qcm9wZXJ0eS5odG1sIj5Qb3NpdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUG9zaXRpb25Qcm9wZXJ0eUFycmF5Ij48YSBocmVmPSJQb3NpdGlvblByb3BlcnR5QXJyYXkuaHRtbCI+UG9zaXRpb25Qcm9wZXJ0eUFycmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJpbWl0aXZlIj48YSBocmVmPSJQcmltaXRpdmUuaHRtbCI+UHJpbWl0aXZlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJpbWl0aXZlQ29sbGVjdGlvbiI+PGEgaHJlZj0iUHJpbWl0aXZlQ29sbGVjdGlvbi5odG1sIj5QcmltaXRpdmVDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJpbWl0aXZlVHlwZSI+PGEgaHJlZj0iUHJpbWl0aXZlVHlwZS5odG1sIj5QcmltaXRpdmVUeXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJvcGVydHkiPjxhIGhyZWY9IlByb3BlcnR5Lmh0bWwiPlByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJvcGVydHlBcnJheSI+PGEgaHJlZj0iUHJvcGVydHlBcnJheS5odG1sIj5Qcm9wZXJ0eUFycmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUHJvdmlkZXJWaWV3TW9kZWwiPjxhIGhyZWY9IlByb3ZpZGVyVmlld01vZGVsLmh0bWwiPlByb3ZpZGVyVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVhZHJhdGljUmVhbFBvbHlub21pYWwiPjxhIGhyZWY9IlF1YWRyYXRpY1JlYWxQb2x5bm9taWFsLmh0bWwiPlF1YWRyYXRpY1JlYWxQb2x5bm9taWFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVhbnRpemVkTWVzaFRlcnJhaW5EYXRhIj48YSBocmVmPSJRdWFudGl6ZWRNZXNoVGVycmFpbkRhdGEuaHRtbCI+UXVhbnRpemVkTWVzaFRlcnJhaW5EYXRhPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVhcnRpY1JlYWxQb2x5bm9taWFsIj48YSBocmVmPSJRdWFydGljUmVhbFBvbHlub21pYWwuaHRtbCI+UXVhcnRpY1JlYWxQb2x5bm9taWFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVhdGVybmlvbiI+PGEgaHJlZj0iUXVhdGVybmlvbi5odG1sIj5RdWF0ZXJuaW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVhdGVybmlvblNwbGluZSI+PGEgaHJlZj0iUXVhdGVybmlvblNwbGluZS5odG1sIj5RdWF0ZXJuaW9uU3BsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUXVldWUiPjxhIGhyZWY9IlF1ZXVlLmh0bWwiPlF1ZXVlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmF5Ij48YSBocmVmPSJSYXkuaHRtbCI+UmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlIj48YSBocmVmPSJSZWN0YW5nbGUuaHRtbCI+UmVjdGFuZ2xlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlR2VvbWV0cnkiPjxhIGhyZWY9IlJlY3RhbmdsZUdlb21ldHJ5Lmh0bWwiPlJlY3RhbmdsZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlR2VvbWV0cnlVcGRhdGVyIj48YSBocmVmPSJSZWN0YW5nbGVHZW9tZXRyeVVwZGF0ZXIuaHRtbCI+UmVjdGFuZ2xlR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlR3JhcGhpY3MiPjxhIGhyZWY9IlJlY3RhbmdsZUdyYXBoaWNzLmh0bWwiPlJlY3RhbmdsZUdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlT3V0bGluZUdlb21ldHJ5Ij48YSBocmVmPSJSZWN0YW5nbGVPdXRsaW5lR2VvbWV0cnkuaHRtbCI+UmVjdGFuZ2xlT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVjdGFuZ2xlUHJpbWl0aXZlIj48YSBocmVmPSJSZWN0YW5nbGVQcmltaXRpdmUuaHRtbCI+UmVjdGFuZ2xlUHJpbWl0aXZlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVmZXJlbmNlRnJhbWUiPjxhIGhyZWY9IlJlZmVyZW5jZUZyYW1lLmh0bWwiPlJlZmVyZW5jZUZyYW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVmZXJlbmNlUHJvcGVydHkiPjxhIGhyZWY9IlJlZmVyZW5jZVByb3BlcnR5Lmh0bWwiPlJlZmVyZW5jZVByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0icmVxdWVzdEFuaW1hdGlvbkZyYW1lIj48YSBocmVmPSJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUuaHRtbCI+cmVxdWVzdEFuaW1hdGlvbkZyYW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUmVxdWVzdEVycm9yRXZlbnQiPjxhIGhyZWY9IlJlcXVlc3RFcnJvckV2ZW50Lmh0bWwiPlJlcXVlc3RFcnJvckV2ZW50PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iUnVudGltZUVycm9yIj48YSBocmVmPSJSdW50aW1lRXJyb3IuaHRtbCI+UnVudGltZUVycm9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2FtcGxlZFBvc2l0aW9uUHJvcGVydHkiPjxhIGhyZWY9IlNhbXBsZWRQb3NpdGlvblByb3BlcnR5Lmh0bWwiPlNhbXBsZWRQb3NpdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2FtcGxlZFByb3BlcnR5Ij48YSBocmVmPSJTYW1wbGVkUHJvcGVydHkuaHRtbCI+U2FtcGxlZFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ic2FtcGxlVGVycmFpbiI+PGEgaHJlZj0ic2FtcGxlVGVycmFpbi5odG1sIj5zYW1wbGVUZXJyYWluPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ic2FuaXRpemUiPjxhIGhyZWY9InNhbml0aXplLmh0bWwiPnNhbml0aXplPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NlbmUiPjxhIGhyZWY9IlNjZW5lLmh0bWwiPlNjZW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NlbmVNb2RlIj48YSBocmVmPSJTY2VuZU1vZGUuaHRtbCI+U2NlbmVNb2RlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NlbmVNb2RlUGlja2VyIj48YSBocmVmPSJTY2VuZU1vZGVQaWNrZXIuaHRtbCI+U2NlbmVNb2RlUGlja2VyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NlbmVNb2RlUGlja2VyVmlld01vZGVsIj48YSBocmVmPSJTY2VuZU1vZGVQaWNrZXJWaWV3TW9kZWwuaHRtbCI+U2NlbmVNb2RlUGlja2VyVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NlbmVUcmFuc2Zvcm1zIj48YSBocmVmPSJTY2VuZVRyYW5zZm9ybXMuaHRtbCI+U2NlbmVUcmFuc2Zvcm1zPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NyZWVuU3BhY2VDYW1lcmFDb250cm9sbGVyIj48YSBocmVmPSJTY3JlZW5TcGFjZUNhbWVyYUNvbnRyb2xsZXIuaHRtbCI+U2NyZWVuU3BhY2VDYW1lcmFDb250cm9sbGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NyZWVuU3BhY2VFdmVudEhhbmRsZXIiPjxhIGhyZWY9IlNjcmVlblNwYWNlRXZlbnRIYW5kbGVyLmh0bWwiPlNjcmVlblNwYWNlRXZlbnRIYW5kbGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2NyZWVuU3BhY2VFdmVudFR5cGUiPjxhIGhyZWY9IlNjcmVlblNwYWNlRXZlbnRUeXBlLmh0bWwiPlNjcmVlblNwYWNlRXZlbnRUeXBlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2VsZWN0aW9uSW5kaWNhdG9yIj48YSBocmVmPSJTZWxlY3Rpb25JbmRpY2F0b3IuaHRtbCI+U2VsZWN0aW9uSW5kaWNhdG9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2VsZWN0aW9uSW5kaWNhdG9yVmlld01vZGVsIj48YSBocmVmPSJTZWxlY3Rpb25JbmRpY2F0b3JWaWV3TW9kZWwuaHRtbCI+U2VsZWN0aW9uSW5kaWNhdG9yVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2hvd0dlb21ldHJ5SW5zdGFuY2VBdHRyaWJ1dGUiPjxhIGhyZWY9IlNob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlLmh0bWwiPlNob3dHZW9tZXRyeUluc3RhbmNlQXR0cmlidXRlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zIj48YSBocmVmPSJTaW1vbjE5OTRQbGFuZXRhcnlQb3NpdGlvbnMuaHRtbCI+U2ltb24xOTk0UGxhbmV0YXJ5UG9zaXRpb25zPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2ltcGxlUG9seWxpbmVHZW9tZXRyeSI+PGEgaHJlZj0iU2ltcGxlUG9seWxpbmVHZW9tZXRyeS5odG1sIj5TaW1wbGVQb2x5bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2luZ2xlVGlsZUltYWdlcnlQcm92aWRlciI+PGEgaHJlZj0iU2luZ2xlVGlsZUltYWdlcnlQcm92aWRlci5odG1sIj5TaW5nbGVUaWxlSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2t5QXRtb3NwaGVyZSI+PGEgaHJlZj0iU2t5QXRtb3NwaGVyZS5odG1sIj5Ta3lBdG1vc3BoZXJlPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU2t5Qm94Ij48YSBocmVmPSJTa3lCb3guaHRtbCI+U2t5Qm94PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3BoZXJlR2VvbWV0cnkiPjxhIGhyZWY9IlNwaGVyZUdlb21ldHJ5Lmh0bWwiPlNwaGVyZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3BoZXJlT3V0bGluZUdlb21ldHJ5Ij48YSBocmVmPSJTcGhlcmVPdXRsaW5lR2VvbWV0cnkuaHRtbCI+U3BoZXJlT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3BoZXJpY2FsIj48YSBocmVmPSJTcGhlcmljYWwuaHRtbCI+U3BoZXJpY2FsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3BsaW5lIj48YSBocmVmPSJTcGxpbmUuaHRtbCI+U3BsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3RlbmNpbEZ1bmN0aW9uIj48YSBocmVmPSJTdGVuY2lsRnVuY3Rpb24uaHRtbCI+U3RlbmNpbEZ1bmN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3RlbmNpbE9wZXJhdGlvbiI+PGEgaHJlZj0iU3RlbmNpbE9wZXJhdGlvbi5odG1sIj5TdGVuY2lsT3BlcmF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3RyaXBlTWF0ZXJpYWxQcm9wZXJ0eSI+PGEgaHJlZj0iU3RyaXBlTWF0ZXJpYWxQcm9wZXJ0eS5odG1sIj5TdHJpcGVNYXRlcmlhbFByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3RyaXBlT3JpZW50YXRpb24iPjxhIGhyZWY9IlN0cmlwZU9yaWVudGF0aW9uLmh0bWwiPlN0cmlwZU9yaWVudGF0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0ic3ViZGl2aWRlQXJyYXkiPjxhIGhyZWY9InN1YmRpdmlkZUFycmF5Lmh0bWwiPnN1YmRpdmlkZUFycmF5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3VuIj48YSBocmVmPSJTdW4uaHRtbCI+U3VuPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iU3ZnUGF0aEJpbmRpbmdIYW5kbGVyIj48YSBocmVmPSJTdmdQYXRoQmluZGluZ0hhbmRsZXIuaHRtbCI+U3ZnUGF0aEJpbmRpbmdIYW5kbGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGFza1Byb2Nlc3NvciI+PGEgaHJlZj0iVGFza1Byb2Nlc3Nvci5odG1sIj5UYXNrUHJvY2Vzc29yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGVycmFpbkRhdGEiPjxhIGhyZWY9IlRlcnJhaW5EYXRhLmh0bWwiPlRlcnJhaW5EYXRhPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGVycmFpbk1lc2giPjxhIGhyZWY9IlRlcnJhaW5NZXNoLmh0bWwiPlRlcnJhaW5NZXNoPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGVycmFpblByb3ZpZGVyIj48YSBocmVmPSJUZXJyYWluUHJvdmlkZXIuaHRtbCI+VGVycmFpblByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0idGhyb3R0bGVSZXF1ZXN0QnlTZXJ2ZXIiPjxhIGhyZWY9InRocm90dGxlUmVxdWVzdEJ5U2VydmVyLmh0bWwiPnRocm90dGxlUmVxdWVzdEJ5U2VydmVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGlsZUNvb3JkaW5hdGVzSW1hZ2VyeVByb3ZpZGVyIj48YSBocmVmPSJUaWxlQ29vcmRpbmF0ZXNJbWFnZXJ5UHJvdmlkZXIuaHRtbCI+VGlsZUNvb3JkaW5hdGVzSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGlsZURpc2NhcmRQb2xpY3kiPjxhIGhyZWY9IlRpbGVEaXNjYXJkUG9saWN5Lmh0bWwiPlRpbGVEaXNjYXJkUG9saWN5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGlsZU1hcFNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIiPjxhIGhyZWY9IlRpbGVNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLmh0bWwiPlRpbGVNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGlsZVByb3ZpZGVyRXJyb3IiPjxhIGhyZWY9IlRpbGVQcm92aWRlckVycm9yLmh0bWwiPlRpbGVQcm92aWRlckVycm9yPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGlsaW5nU2NoZW1lIj48YSBocmVmPSJUaWxpbmdTY2hlbWUuaHRtbCI+VGlsaW5nU2NoZW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZUludGVydmFsIj48YSBocmVmPSJUaW1lSW50ZXJ2YWwuaHRtbCI+VGltZUludGVydmFsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZUludGVydmFsQ29sbGVjdGlvbiI+PGEgaHJlZj0iVGltZUludGVydmFsQ29sbGVjdGlvbi5odG1sIj5UaW1lSW50ZXJ2YWxDb2xsZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZUludGVydmFsQ29sbGVjdGlvblBvc2l0aW9uUHJvcGVydHkiPjxhIGhyZWY9IlRpbWVJbnRlcnZhbENvbGxlY3Rpb25Qb3NpdGlvblByb3BlcnR5Lmh0bWwiPlRpbWVJbnRlcnZhbENvbGxlY3Rpb25Qb3NpdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZUludGVydmFsQ29sbGVjdGlvblByb3BlcnR5Ij48YSBocmVmPSJUaW1lSW50ZXJ2YWxDb2xsZWN0aW9uUHJvcGVydHkuaHRtbCI+VGltZUludGVydmFsQ29sbGVjdGlvblByb3BlcnR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZWxpbmUiPjxhIGhyZWY9IlRpbWVsaW5lLmh0bWwiPlRpbWVsaW5lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVGltZVN0YW5kYXJkIj48YSBocmVmPSJUaW1lU3RhbmRhcmQuaHRtbCI+VGltZVN0YW5kYXJkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVG9nZ2xlQnV0dG9uVmlld01vZGVsIj48YSBocmVmPSJUb2dnbGVCdXR0b25WaWV3TW9kZWwuaHRtbCI+VG9nZ2xlQnV0dG9uVmlld01vZGVsPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVHJhbnNmb3JtcyI+PGEgaHJlZj0iVHJhbnNmb3Jtcy5odG1sIj5UcmFuc2Zvcm1zPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVHJpZGlhZ29uYWxTeXN0ZW1Tb2x2ZXIiPjxhIGhyZWY9IlRyaWRpYWdvbmFsU3lzdGVtU29sdmVyLmh0bWwiPlRyaWRpYWdvbmFsU3lzdGVtU29sdmVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmVydGV4Rm9ybWF0Ij48YSBocmVmPSJWZXJ0ZXhGb3JtYXQuaHRtbCI+VmVydGV4Rm9ybWF0PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmVydGljYWxPcmlnaW4iPjxhIGhyZWY9IlZlcnRpY2FsT3JpZ2luLmh0bWwiPlZlcnRpY2FsT3JpZ2luPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmlld2VyIj48YSBocmVmPSJWaWV3ZXIuaHRtbCI+Vmlld2VyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0idmlld2VyQ2VzaXVtSW5zcGVjdG9yTWl4aW4iPjxhIGhyZWY9InZpZXdlckNlc2l1bUluc3BlY3Rvck1peGluLmh0bWwiPnZpZXdlckNlc2l1bUluc3BlY3Rvck1peGluPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0idmlld2VyRHJhZ0Ryb3BNaXhpbiI+PGEgaHJlZj0idmlld2VyRHJhZ0Ryb3BNaXhpbi5odG1sIj52aWV3ZXJEcmFnRHJvcE1peGluPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0idmlld2VyRW50aXR5TWl4aW4iPjxhIGhyZWY9InZpZXdlckVudGl0eU1peGluLmh0bWwiPnZpZXdlckVudGl0eU1peGluPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0idmlld2VyUGVyZm9ybWFuY2VXYXRjaGRvZ01peGluIj48YSBocmVmPSJ2aWV3ZXJQZXJmb3JtYW5jZVdhdGNoZG9nTWl4aW4uaHRtbCI+dmlld2VyUGVyZm9ybWFuY2VXYXRjaGRvZ01peGluPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmlld3BvcnRRdWFkIj48YSBocmVmPSJWaWV3cG9ydFF1YWQuaHRtbCI+Vmlld3BvcnRRdWFkPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmlzaWJpbGl0eSI+PGEgaHJlZj0iVmlzaWJpbGl0eS5odG1sIj5WaXNpYmlsaXR5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVmlzdWFsaXplciI+PGEgaHJlZj0iVmlzdWFsaXplci5odG1sIj5WaXN1YWxpemVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iVlJUaGVXb3JsZFRlcnJhaW5Qcm92aWRlciI+PGEgaHJlZj0iVlJUaGVXb3JsZFRlcnJhaW5Qcm92aWRlci5odG1sIj5WUlRoZVdvcmxkVGVycmFpblByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2FsbEdlb21ldHJ5Ij48YSBocmVmPSJXYWxsR2VvbWV0cnkuaHRtbCI+V2FsbEdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2FsbEdlb21ldHJ5VXBkYXRlciI+PGEgaHJlZj0iV2FsbEdlb21ldHJ5VXBkYXRlci5odG1sIj5XYWxsR2VvbWV0cnlVcGRhdGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2FsbEdyYXBoaWNzIj48YSBocmVmPSJXYWxsR3JhcGhpY3MuaHRtbCI+V2FsbEdyYXBoaWNzPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2FsbE91dGxpbmVHZW9tZXRyeSI+PGEgaHJlZj0iV2FsbE91dGxpbmVHZW9tZXRyeS5odG1sIj5XYWxsT3V0bGluZUdlb21ldHJ5PC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlciI+PGEgaHJlZj0iV2ViTWFwU2VydmljZUltYWdlcnlQcm92aWRlci5odG1sIj5XZWJNYXBTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2ViTWFwVGlsZVNlcnZpY2VJbWFnZXJ5UHJvdmlkZXIiPjxhIGhyZWY9IldlYk1hcFRpbGVTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyLmh0bWwiPldlYk1hcFRpbGVTZXJ2aWNlSW1hZ2VyeVByb3ZpZGVyPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2ViTWVyY2F0b3JQcm9qZWN0aW9uIj48YSBocmVmPSJXZWJNZXJjYXRvclByb2plY3Rpb24uaHRtbCI+V2ViTWVyY2F0b3JQcm9qZWN0aW9uPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2ViTWVyY2F0b3JUaWxpbmdTY2hlbWUiPjxhIGhyZWY9IldlYk1lcmNhdG9yVGlsaW5nU2NoZW1lLmh0bWwiPldlYk1lcmNhdG9yVGlsaW5nU2NoZW1lPC9hPjwvbGk+PGxpIGRhdGEtbmFtZT0iV2luZGluZ09yZGVyIj48YSBocmVmPSJXaW5kaW5nT3JkZXIuaHRtbCI+V2luZGluZ09yZGVyPC9hPjwvbGk+PC91bD4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8ZGl2IGNsYXNzPSJuYXYgbmF2U3RhdGljIj48L2Rpdj4NCg0KPGRpdiBpZD0ibWFpbiI+DQoNCiAgICA8aDEgY2xhc3M9InBhZ2UtdGl0bGUiPkNhbWVyYTwvaDE+DQoNCiAgICANCg0KDQoNCjxzZWN0aW9uPg0KDQo8aGVhZGVyPg0KICAgIA0KPC9oZWFkZXI+DQoNCjxhcnRpY2xlPg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1vdmVydmlldyI+DQogICAgDQoNCiAgICANCiAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iQ2FtZXJhIj4NCiAgICAgICAgbmV3IENhbWVyYTxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPigpPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVGhlIGNhbWVyYSBpcyBkZWZpbmVkIGJ5IGEgcG9zaXRpb24sIG9yaWVudGF0aW9uLCBhbmQgdmlldyBmcnVzdHVtLg08YnIgLz48YnIgLz4NVGhlIG9yaWVudGF0aW9uIGZvcm1zIGFuIG9ydGhvbm9ybWFsIGJhc2lzIHdpdGggYSB2aWV3LCB1cCBhbmQgcmlnaHQgPSB2aWV3IHggdXAgdW5pdCB2ZWN0b3JzLg08YnIgLz48YnIgLz4NVGhlIHZpZXdpbmcgZnJ1c3R1bSBpcyBkZWZpbmVkIGJ5IDYgcGxhbmVzLg1FYWNoIHBsYW5lIGlzIHJlcHJlc2VudGVkIGJ5IGEgPGEgaHJlZj0iQ2FydGVzaWFuNC5odG1sIj48Y29kZT5DYXJ0ZXNpYW40PC9jb2RlPjwvYT4gb2JqZWN0LCB3aGVyZSB0aGUgeCwgeSwgYW5kIHogY29tcG9uZW50cw1kZWZpbmUgdGhlIHVuaXQgdmVjdG9yIG5vcm1hbCB0byB0aGUgcGxhbmUsIGFuZCB0aGUgdyBjb21wb25lbnQgaXMgdGhlIGRpc3RhbmNlIG9mIHRoZQ1wbGFuZSBmcm9tIHRoZSBvcmlnaW4vY2FtZXJhIHBvc2l0aW9uLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIDxoNT5FeGFtcGxlOjwvaDU+DQogICAgICAgIA0KICAgIDxwcmU+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPi8vIENyZWF0ZSBhIGNhbWVyYSBsb29raW5nIGRvd24gdGhlIG5lZ2F0aXZlIHotYXhpcywgcG9zaXRpb25lZCBhdCB0aGUgb3JpZ2luLA0vLyB3aXRoIGEgZmllbGQgb2YgdmlldyBvZiA2MCBkZWdyZWVzLCBhbmQgMToxIGFzcGVjdCByYXRpby4NdmFyIGNhbWVyYSA9IG5ldyBDZXNpdW0uQ2FtZXJhKHNjZW5lKTsNY2FtZXJhLnBvc2l0aW9uID0gbmV3IENlc2l1bS5DYXJ0ZXNpYW4zKCk7DWNhbWVyYS5kaXJlY3Rpb24gPSBDZXNpdW0uQ2FydGVzaWFuMy5uZWdhdGUoQ2VzaXVtLkNhcnRlc2lhbjMuVU5JVF9aLCBuZXcgQ2VzaXVtLkNhcnRlc2lhbjMoKSk7DWNhbWVyYS51cCA9IENlc2l1bS5DYXJ0ZXNpYW4zLmNsb25lKENlc2l1bS5DYXJ0ZXNpYW4zLlVOSVRfWSk7DWNhbWVyYS5mcnVzdHVtLmZvdiA9IENlc2l1bS5NYXRoLlBJX09WRVJfVEhSRUU7DWNhbWVyYS5mcnVzdHVtLm5lYXIgPSAxLjA7DWNhbWVyYS5mcnVzdHVtLmZhciA9IDIuMDs8L2NvZGU+PC9wcmU+DQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PkRlbW86PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9jZXNpdW1qcy5vcmcvQ2VzaXVtL0FwcHMvU2FuZGNhc3RsZS9pbmRleC5odG1sP3NyYz1DYW1lcmEuaHRtbCI+Q2VzaXVtIFNhbmRjYXN0bGUgQ2FtZXJhIERlbW88L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9jZXNpdW1qcy5vcmcvQ2VzaXVtL0FwcHMvU2FuZGNhc3RsZS9pbmRleC5odG1sP3NyYz1DYW1lcmElMjBUdXRvcmlhbC5odG1sIj5TYW5kY2FzdGxlIEV4YW1wbGU8L2E+IGZyb20gdGhlIDxhIGhyZWY9Imh0dHA6Ly9jZXNpdW1qcy5vcmcvMjAxMy8wMi8xMy9DZXNpdW0tQ2FtZXJhLVR1dG9yaWFsLyI+Q2FtZXJhIFR1dG9yaWFsPC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w3NiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDc2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgIA0KICAgIDwvZGl2Pg0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICA8aDMgY2xhc3M9InN1YnNlY3Rpb24tdGl0bGUiPk1lbWJlcnM8L2gzPg0KDQogICAgICAgIDxkbD4NCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9IkRFRkFVTFRfVklFV19GQUNUT1IiPg0KICAgICAgICA8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUgYXR0cmlidXRlLXN0YXRpYyI+c3RhdGljPC9zcGFuPkNhbWVyYS5ERUZBVUxUX1ZJRVdfRkFDVE9SPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIj4gOk51bWJlcjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBBIHNjYWxhciB0byBtdWx0aXBseSB0byB0aGUgY2FtZXJhIHBvc2l0aW9uIGFuZCBhZGQgaXQgYmFjayBhZnRlciBzZXR0aW5nIHRoZSBjYW1lcmEgdG8gdmlldyB0aGUgcmVjdGFuZ2xlLg1BIHZhbHVlIG9mIHplcm8gbWVhbnMgdGhlIGNhbWVyYSB3aWxsIHZpZXcgdGhlIGVudGlyZSA8Y29kZT5DYW1lcmEjREVGQVVMVF9WSUVXX1JFQ1RBTkdMRTwvY29kZT4sIGEgdmFsdWUgZ3JlYXRlciB0aGFuIHplcm8Nd2lsbCBtb3ZlIGl0IGZ1cnRoZXIgYXdheSBmcm9tIHRoZSBleHRlbnQsIGFuZCBhIHZhbHVlIGxlc3MgdGhhbiB6ZXJvIHdpbGwgbW92ZSBpdCBjbG9zZSB0byB0aGUgZXh0ZW50Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDI0NCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDI0NDwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJERUZBVUxUX1ZJRVdfUkVDVEFOR0xFIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIGF0dHJpYnV0ZS1zdGF0aWMiPnN0YXRpYzwvc3Bhbj5DYW1lcmEuREVGQVVMVF9WSUVXX1JFQ1RBTkdMRTxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJSZWN0YW5nbGUuaHRtbCI+UmVjdGFuZ2xlPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUaGUgZGVmYXVsdCBleHRlbnQgdGhlIGNhbWVyYSB3aWxsIHZpZXcgb24gY3JlYXRpb24uDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMjM2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMjM2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImNvbnN0cmFpbmVkQXhpcyI+DQogICAgICAgIGNvbnN0cmFpbmVkQXhpczxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIElmIHNldCwgdGhlIGNhbWVyYSB3aWxsIG5vdCBiZSBhYmxlIHRvIHJvdGF0ZSBwYXN0IHRoaXMgYXhpcyBpbiBlaXRoZXIgZGlyZWN0aW9uLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxzcGFuIGNsYXNzPSJkZXRhaWxzLWhlYWRlciI+RGVmYXVsdCBWYWx1ZTo8L3NwYW4+DQogICAgPGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPnVuZGVmaW5lZDwvY29kZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxODIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxODI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iZGVmYXVsdExvb2tBbW91bnQiPg0KICAgICAgICBkZWZhdWx0TG9va0Ftb3VudDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDpOdW1iZXI8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVGhlIGRlZmF1bHQgYW1vdW50IHRvIHJvdGF0ZSB0aGUgY2FtZXJhIHdoZW4gYW4gYXJndW1lbnQgaXMgbm90DXByb3ZpZGVkIHRvIHRoZSBsb29rIG1ldGhvZHMuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPHNwYW4gY2xhc3M9ImRldGFpbHMtaGVhZGVyIj5EZWZhdWx0IFZhbHVlOjwvc3Bhbj4NCiAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+TWF0aC5QSSAvIDYwLjA8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTYyIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTYyPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImRlZmF1bHRNb3ZlQW1vdW50Ij4NCiAgICAgICAgZGVmYXVsdE1vdmVBbW91bnQ8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6TnVtYmVyPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRoZSBkZWZhdWx0IGFtb3VudCB0byBtb3ZlIHRoZSBjYW1lcmEgd2hlbiBhbiBhcmd1bWVudCBpcyBub3QNcHJvdmlkZWQgdG8gdGhlIG1vdmUgbWV0aG9kcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8c3BhbiBjbGFzcz0iZGV0YWlscy1oZWFkZXIiPkRlZmF1bHQgVmFsdWU6PC9zcGFuPg0KICAgIDxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qYXZhc2NyaXB0Ij4xMDAwMDAuMDs8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTU1Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTU1PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImRlZmF1bHRSb3RhdGVBbW91bnQiPg0KICAgICAgICBkZWZhdWx0Um90YXRlQW1vdW50PHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIj4gOk51bWJlcjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUaGUgZGVmYXVsdCBhbW91bnQgdG8gcm90YXRlIHRoZSBjYW1lcmEgd2hlbiBhbiBhcmd1bWVudCBpcyBub3QNcHJvdmlkZWQgdG8gdGhlIHJvdGF0ZSBtZXRob2RzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxzcGFuIGNsYXNzPSJkZXRhaWxzLWhlYWRlciI+RGVmYXVsdCBWYWx1ZTo8L3NwYW4+DQogICAgPGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPk1hdGguUEkgLyAzNjAwLjA8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTY5Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTY5PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImRlZmF1bHRab29tQW1vdW50Ij4NCiAgICAgICAgZGVmYXVsdFpvb21BbW91bnQ8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6TnVtYmVyPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRoZSBkZWZhdWx0IGFtb3VudCB0byBtb3ZlIHRoZSBjYW1lcmEgd2hlbiBhbiBhcmd1bWVudCBpcyBub3QNcHJvdmlkZWQgdG8gdGhlIHpvb20gbWV0aG9kcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8c3BhbiBjbGFzcz0iZGV0YWlscy1oZWFkZXIiPkRlZmF1bHQgVmFsdWU6PC9zcGFuPg0KICAgIDxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qYXZhc2NyaXB0Ij4xMDAwMDAuMDs8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTc2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTc2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImRpcmVjdGlvbiI+DQogICAgICAgIGRpcmVjdGlvbjxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRoZSB2aWV3IGRpcmVjdGlvbiBvZiB0aGUgY2FtZXJhLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDExMyI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDExMzwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJkaXJlY3Rpb25XQyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSBhdHRyaWJ1dGUtcmVhZG9ubHkiPnJlYWRvbmx5PC9zcGFuPmRpcmVjdGlvbldDPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIj4gOjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgR2V0cyB0aGUgdmlldyBkaXJlY3Rpb24gb2YgdGhlIGNhbWVyYSBpbiB3b3JsZCBjb29yZGluYXRlcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w2NDIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA2NDI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iZnJ1c3R1bSI+DQogICAgICAgIGZydXN0dW08c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6RnJ1c3R1bTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUaGUgcmVnaW9uIG9mIHNwYWNlIGluIHZpZXcuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPHNwYW4gY2xhc3M9ImRldGFpbHMtaGVhZGVyIj5EZWZhdWx0IFZhbHVlOjwvc3Bhbj4NCiAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+UGVyc3BlY3RpdmVGcnVzdHVtKCk8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJQZXJzcGVjdGl2ZUZydXN0dW0uaHRtbCI+UGVyc3BlY3RpdmVGcnVzdHVtPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJQZXJzcGVjdGl2ZU9mZkNlbnRlckZydXN0dW0uaHRtbCI+UGVyc3BlY3RpdmVPZmZDZW50ZXJGcnVzdHVtPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJPcnRob2dyYXBoaWNGcnVzdHVtLmh0bWwiPk9ydGhvZ3JhcGhpY0ZydXN0dW08L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxNDUiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxNDU8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iaGVhZGluZyI+DQogICAgICAgIGhlYWRpbmc8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6TnVtYmVyPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIEdldHMgb3Igc2V0cyB0aGUgY2FtZXJhIGhlYWRpbmcgaW4gcmFkaWFucy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w2ODMiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA2ODM8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iaW52ZXJzZVRyYW5zZm9ybSI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSBhdHRyaWJ1dGUtcmVhZG9ubHkiPnJlYWRvbmx5PC9zcGFuPmludmVyc2VUcmFuc2Zvcm08c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iTWF0cml4NC5odG1sIj5NYXRyaXg0PC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSBpbnZlcnNlIGNhbWVyYSB0cmFuc2Zvcm0uDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPHNwYW4gY2xhc3M9ImRldGFpbHMtaGVhZGVyIj5EZWZhdWx0IFZhbHVlOjwvc3Bhbj4NCiAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+PGEgaHJlZj0iTWF0cml4NC5odG1sI0lERU5USVRZIj48Y29kZT5NYXRyaXg0LklERU5USVRZPC9jb2RlPjwvYT48L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMNTY2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgNTY2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImludmVyc2VWaWV3TWF0cml4Ij4NCiAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIGF0dHJpYnV0ZS1yZWFkb25seSI+cmVhZG9ubHk8L3NwYW4+aW52ZXJzZVZpZXdNYXRyaXg8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iTWF0cml4NC5odG1sIj5NYXRyaXg0PC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSBpbnZlcnNlIHZpZXcgbWF0cml4Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjdmlld01hdHJpeCI+Q2FtZXJhI3ZpZXdNYXRyaXg8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w1OTgiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA1OTg8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0ibWF4aW11bVRyYW5zbGF0ZUZhY3RvciI+DQogICAgICAgIG1heGltdW1UcmFuc2xhdGVGYWN0b3I8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6TnVtYmVyPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRoZSBmYWN0b3IgbXVsdGlwbGllZCBieSB0aGUgdGhlIG1hcCBzaXplIHVzZWQgdG8gZGV0ZXJtaW5lIHdoZXJlIHRvIGNsYW1wIHRoZSBjYW1lcmEgcG9zaXRpb24Nd2hlbiB0cmFuc2xhdGluZyBhY3Jvc3MgdGhlIHN1cmZhY2UuIFRoZSBkZWZhdWx0IGlzIDEuNS4gT25seSB2YWxpZCBmb3IgMkQgYW5kIENvbHVtYnVzIHZpZXcuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPHNwYW4gY2xhc3M9ImRldGFpbHMtaGVhZGVyIj5EZWZhdWx0IFZhbHVlOjwvc3Bhbj4NCiAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+MS41PC9jb2RlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDE4OSI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDE4OTwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJtYXhpbXVtWm9vbUZhY3RvciI+DQogICAgICAgIG1heGltdW1ab29tRmFjdG9yPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIj4gOk51bWJlcjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUaGUgZmFjdG9yIG11bHRpcGxpZWQgYnkgdGhlIHRoZSBtYXAgc2l6ZSB1c2VkIHRvIGRldGVybWluZSB3aGVyZSB0byBjbGFtcCB0aGUgY2FtZXJhIHBvc2l0aW9uDXdoZW4gem9vbWluZyBvdXQgZnJvbSB0aGUgc3VyZmFjZS4gVGhlIGRlZmF1bHQgaXMgMi41LiBPbmx5IHZhbGlkIGZvciAyRC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8c3BhbiBjbGFzcz0iZGV0YWlscy1oZWFkZXIiPkRlZmF1bHQgVmFsdWU6PC9zcGFuPg0KICAgIDxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qYXZhc2NyaXB0Ij4yLjU8L2NvZGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTk2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTk2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InBvc2l0aW9uIj4NCiAgICAgICAgcG9zaXRpb248c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUaGUgcG9zaXRpb24gb2YgdGhlIGNhbWVyYS4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMDMiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMDM8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0icG9zaXRpb25DYXJ0b2dyYXBoaWMiPg0KICAgICAgICBwb3NpdGlvbkNhcnRvZ3JhcGhpYzxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJDYXJ0b2dyYXBoaWMuaHRtbCI+Q2FydG9ncmFwaGljPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSA8YSBocmVmPSJDYXJ0b2dyYXBoaWMuaHRtbCI+PGNvZGU+Q2FydG9ncmFwaGljPC9jb2RlPjwvYT4gcG9zaXRpb24gb2YgdGhlIGNhbWVyYSwgd2l0aCBsb25naXR1ZGUgYW5kIGxhdGl0dWRlDWV4cHJlc3NlZCBpbiByYWRpYW5zIGFuZCBoZWlnaHQgaW4gbWV0ZXJzLiAgSW4gMkQgYW5kIENvbHVtYnVzIFZpZXcsIGl0IGlzIHBvc3NpYmxlDWZvciB0aGUgcmV0dXJuZWQgbG9uZ2l0dWRlIGFuZCBsYXRpdHVkZSB0byBiZSBvdXRzaWRlIHRoZSByYW5nZSBvZiB2YWxpZCBsb25naXR1ZGVzDWFuZCBsYXRpdHVkZXMgd2hlbiB0aGUgY2FtZXJhIGlzIG91dHNpZGUgdGhlIG1hcC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w2MTQiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA2MTQ8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0icG9zaXRpb25XQyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSBhdHRyaWJ1dGUtcmVhZG9ubHkiPnJlYWRvbmx5PC9zcGFuPnBvc2l0aW9uV0M8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhIGluIHdvcmxkIGNvb3JkaW5hdGVzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDYyOCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDYyODwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJyaWdodCI+DQogICAgICAgIHJpZ2h0PHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIj4gOjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVGhlIHJpZ2h0IGRpcmVjdGlvbiBvZiB0aGUgY2FtZXJhLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEzMSI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDEzMTwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJyaWdodFdDIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIGF0dHJpYnV0ZS1yZWFkb25seSI+cmVhZG9ubHk8L3NwYW4+cmlnaHRXQzxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIEdldHMgdGhlIHJpZ2h0IGRpcmVjdGlvbiBvZiB0aGUgY2FtZXJhIGluIHdvcmxkIGNvb3JkaW5hdGVzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDY3MCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDY3MDwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJ0aWx0Ij4NCiAgICAgICAgdGlsdDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDpOdW1iZXI8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgR2V0cyBvciBzZXRzIHRoZSBjYW1lcmEgdGlsdCBpbiByYWRpYW5zDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMNzE2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgNzE2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InRyYW5zZm9ybSI+DQogICAgICAgIHRyYW5zZm9ybTxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJNYXRyaXg0Lmh0bWwiPk1hdHJpeDQ8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIE1vZGlmaWVzIHRoZSBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUuIFRoZSBpbnZlcnNlIG9mIHRoaXMgdHJhbnNmb3JtYXRpb24gaXMgYXBwZW5kZWQgdG8gdGhlIHZpZXcgbWF0cml4Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxzcGFuIGNsYXNzPSJkZXRhaWxzLWhlYWRlciI+RGVmYXVsdCBWYWx1ZTo8L3NwYW4+DQogICAgPGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPjxhIGhyZWY9Ik1hdHJpeDQuaHRtbCNJREVOVElUWSI+PGNvZGU+TWF0cml4NC5JREVOVElUWTwvY29kZT48L2E+PC9jb2RlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iVHJhbnNmb3Jtcy5odG1sIj5UcmFuc2Zvcm1zPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNpbnZlcnNlVHJhbnNmb3JtIj5DYW1lcmEjaW52ZXJzZVRyYW5zZm9ybTwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDkyIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgOTI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0idXAiPg0KICAgICAgICB1cDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSI+IDo8YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRoZSB1cCBkaXJlY3Rpb24gb2YgdGhlIGNhbWVyYS4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMjIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMjI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0idXBXQyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSBhdHRyaWJ1dGUtcmVhZG9ubHkiPnJlYWRvbmx5PC9zcGFuPnVwV0M8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSB1cCBkaXJlY3Rpb24gb2YgdGhlIGNhbWVyYSBpbiB3b3JsZCBjb29yZGluYXRlcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w2NTYiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA2NTY8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0idmlld01hdHJpeCI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSBhdHRyaWJ1dGUtcmVhZG9ubHkiPnJlYWRvbmx5PC9zcGFuPnZpZXdNYXRyaXg8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUiPiA6PGEgaHJlZj0iTWF0cml4NC5odG1sIj5NYXRyaXg0PC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSB2aWV3IG1hdHJpeC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI2ludmVyc2VWaWV3TWF0cml4Ij5DYW1lcmEjaW52ZXJzZVZpZXdNYXRyaXg8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w1ODIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA1ODI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIDwvZGw+DQogICAgDQoNCiAgICANCiAgICAgICAgPGgzIGNsYXNzPSJzdWJzZWN0aW9uLXRpdGxlIj5NZXRob2RzPC9oMz4NCg0KICAgICAgICA8ZGw+DQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJjYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXMiPg0KICAgICAgICBjYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXM8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oY2FydGVzaWFuLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPnJlc3VsdDwvc3Bhbj4pPC9zcGFuPiAmcmFycjsgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIHJldHVyblR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjQuaHRtbCI+Q2FydGVzaWFuNDwvYT48L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUcmFuc2Zvcm0gYSB2ZWN0b3Igb3IgcG9pbnQgZnJvbSB0aGUgY2FtZXJhJ3MgcmVmZXJlbmNlIGZyYW1lIHRvIHdvcmxkIGNvb3JkaW5hdGVzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmNhcnRlc2lhbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW40Lmh0bWwiPkNhcnRlc2lhbjQ8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHZlY3RvciBvciBwb2ludCB0byB0cmFuc2Zvcm0uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+cmVzdWx0PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjQuaHRtbCI+Q2FydGVzaWFuNDwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIG9iamVjdCBvbnRvIHdoaWNoIHRvIHN0b3JlIHRoZSByZXN1bHQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+UmV0dXJuczo8L2g1Pg0KICAgIA0KICAgICAgICAgICAgDQo8ZGl2IGNsYXNzPSJwYXJhbS1kZXNjIj4NCiAgICBUaGUgdHJhbnNmb3JtZWQgdmVjdG9yIG9yIHBvaW50Lg0KPC9kaXY+DQoNCg0KICAgICAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w4NzUiPlNjZW5lL0NhbWVyYS5qcywgbGluZSA4NzU8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iY2FtZXJhVG9Xb3JsZENvb3JkaW5hdGVzUG9pbnQiPg0KICAgICAgICBjYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXNQb2ludDxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPihjYXJ0ZXNpYW4sIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+cmVzdWx0PC9zcGFuPik8L3NwYW4+ICZyYXJyOyA8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUgcmV0dXJuVHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zZm9ybSBhIHBvaW50IGZyb20gdGhlIGNhbWVyYSdzIHJlZmVyZW5jZSBmcmFtZSB0byB3b3JsZCBjb29yZGluYXRlcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5jYXJ0ZXNpYW48L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBwb2ludCB0byB0cmFuc2Zvcm0uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+cmVzdWx0PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIG9iamVjdCBvbnRvIHdoaWNoIHRvIHN0b3JlIHRoZSByZXN1bHQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+UmV0dXJuczo8L2g1Pg0KICAgIA0KICAgICAgICAgICAgDQo8ZGl2IGNsYXNzPSJwYXJhbS1kZXNjIj4NCiAgICBUaGUgdHJhbnNmb3JtZWQgcG9pbnQuDQo8L2Rpdj4NCg0KDQogICAgICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDg5NiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDg5NjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJjYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXNWZWN0b3IiPg0KICAgICAgICBjYW1lcmFUb1dvcmxkQ29vcmRpbmF0ZXNWZWN0b3I8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oY2FydGVzaWFuLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPnJlc3VsdDwvc3Bhbj4pPC9zcGFuPiAmcmFycjsgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIHJldHVyblR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUcmFuc2Zvcm0gYSB2ZWN0b3IgZnJvbSB0aGUgY2FtZXJhJ3MgcmVmZXJlbmNlIGZyYW1lIHRvIHdvcmxkIGNvb3JkaW5hdGVzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmNhcnRlc2lhbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHZlY3RvciB0byB0cmFuc2Zvcm0uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+cmVzdWx0PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIG9iamVjdCBvbnRvIHdoaWNoIHRvIHN0b3JlIHRoZSByZXN1bHQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+UmV0dXJuczo8L2g1Pg0KICAgIA0KICAgICAgICAgICAgDQo8ZGl2IGNsYXNzPSJwYXJhbS1kZXNjIj4NCiAgICBUaGUgdHJhbnNmb3JtZWQgdmVjdG9yLg0KPC9kaXY+DQoNCg0KICAgICAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0w5MTciPlNjZW5lL0NhbWVyYS5qcywgbGluZSA5MTc8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iY2xvbmUiPg0KICAgICAgICBjbG9uZTxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPigpPC9zcGFuPiAmcmFycjsgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIHJldHVyblR5cGUiPjxhIGhyZWY9IkNhbWVyYS5odG1sIj5DYW1lcmE8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgUmV0dXJucyBhIGR1cGxpY2F0ZSBvZiBhIENhbWVyYSBpbnN0YW5jZS4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+UmV0dXJuczo8L2g1Pg0KICAgIA0KICAgICAgICAgICAgDQo8ZGl2IGNsYXNzPSJwYXJhbS1kZXNjIj4NCiAgICBBIG5ldyBjb3B5IG9mIHRoZSBDYW1lcmEgaW5zdGFuY2UuDQo8L2Rpdj4NCg0KDQogICAgICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDIwNzYiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAyMDc2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImZseVRvIj4NCiAgICAgICAgZmx5VG88c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4ob3B0aW9ucyk8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBGbGllcyB0aGUgY2FtZXJhIGZyb20gaXRzIGN1cnJlbnQgcG9zaXRpb24gdG8gYSBuZXcgcG9zaXRpb24uDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+b3B0aW9uczwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5PYmplY3Q8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIE9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczoNCiAgICAgICAgICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCiAgICAgICAgPHRoPkRlZmF1bHQ8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5kZXN0aW5hdGlvbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGZpbmFsIHBvc2l0aW9uIG9mIHRoZSBjYW1lcmEgaW4gV0dTODQgKHdvcmxkKSBjb29yZGluYXRlcy48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5kaXJlY3Rpb248L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVmYXVsdCI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgZmluYWwgZGlyZWN0aW9uIG9mIHRoZSBjYW1lcmEgaW4gV0dTODQgKHdvcmxkKSBjb29yZGluYXRlcy4gQnkgZGVmYXVsdCwgdGhlIGRpcmVjdGlvbiB3aWxsIHBvaW50IHRvd2FyZHMgdGhlIGNlbnRlciBvZiB0aGUgZnJhbWUgaW4gM0QgYW5kIGluIHRoZSBuZWdhdGl2ZSB6IGRpcmVjdGlvbiBpbiBDb2x1bWJ1cyB2aWV3IG9yIDJELjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPnVwPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGZpbmFsIHVwIGRpcmVjdGlvbiBpbiBXR1M4NCAod29ybGQpIGNvb3JkaW5hdGVzLiBCeSBkZWZhdWx0LCB0aGUgdXAgZGlyZWN0aW9uIHdpbGwgcG9pbnQgdG93YXJkcyBsb2NhbCBub3J0aCBpbiAzRCBhbmQgaW4gdGhlIHBvc2l0aXZlIHkgZGlyZWN0aW9uIGluIENvbHVtYnVzIHZpZXcgb3IgMkQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+ZHVyYXRpb248L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPjMuMDwvY29kZT4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBkdXJhdGlvbiBvZiB0aGUgZmxpZ2h0IGluIHNlY29uZHMuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+Y29tcGxldGU8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjRmxpZ2h0Q29tcGxldGVDYWxsYmFjayI+Q2FtZXJhfkZsaWdodENvbXBsZXRlQ2FsbGJhY2s8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB0byBleGVjdXRlIHdoZW4gdGhlIGZsaWdodCBpcyBjb21wbGV0ZS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5jYW5jZWw8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjRmxpZ2h0Q2FuY2VsbGVkQ2FsbGJhY2siPkNhbWVyYX5GbGlnaHRDYW5jZWxsZWRDYWxsYmFjazwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgaWYgdGhlIGZsaWdodCBpcyBjYW5jZWxsZWQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+ZW5kVHJhbnNmb3JtPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9Ik1hdHJpeDQuaHRtbCI+TWF0cml4NDwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVHJhbnNmb3JtIG1hdHJpeCByZXByZXNlbnRpbmcgdGhlIHJlZmVyZW5jZSBmcmFtZSB0aGUgY2FtZXJhIHdpbGwgYmUgaW4gd2hlbiB0aGUgZmxpZ2h0IGlzIGNvbXBsZXRlZC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5jb252ZXJ0PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPkJvb2xlYW48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+dHJ1ZTwvY29kZT4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFdoZW4gPGNvZGU+dHJ1ZTwvY29kZT4sIHRoZSBkZXN0aW5hdGlvbiBpcyBjb252ZXJ0ZWQgdG8gdGhlIGNvcnJlY3QgY29vcmRpbmF0ZSBzeXN0ZW0gZm9yIGVhY2ggc2NlbmUgbW9kZS4gV2hlbiA8Y29kZT5mYWxzZTwvY29kZT4sIHRoZSBkZXN0aW5hdGlvbiBpcyBleHBlY3RlZA0gICAgICAgICAgICAgICAgIHRvIGJlIGluIHRoZSBjb3JyZWN0IGNvb3JkaW5hdGUgc3lzdGVtLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICAgICAgICAgIDwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+VGhyb3dzOjwvaDU+DQogICAgPHVsPg0KICAgICAgICAgICAgPGxpPg0KDQogICAgPGRpdiBjbGFzcz0icGFyYW0tZGVzYyI+DQogICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkRldmVsb3BlckVycm9yLmh0bWwiPkRldmVsb3BlckVycm9yPC9hPjwvc3Bhbj4NCg0KOiBJZiBlaXRoZXIgZGlyZWN0aW9uIG9yIHVwIGlzIGdpdmVuLCB0aGVuIGJvdGggYXJlIHJlcXVpcmVkLg0KICAgIDwvZGl2Pg0KDQo8L2xpPg0KICAgICAgICA8L3VsPg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wyMDUxIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMjA1MTwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJmbHlUb1JlY3RhbmdsZSI+DQogICAgICAgIGZseVRvUmVjdGFuZ2xlPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KG9wdGlvbnMsIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+ZW5kVHJhbnNmb3JtPC9zcGFuPik8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBGbGllcyB0aGUgY2FtZXJhIGZyb20gaXRzIGN1cnJlbnQgcG9zaXRpb24gdG8gYSBwb3NpdGlvbiB3aGVyZSB0aGUgZW50aXJlIHJlY3RhbmdsZSBpcyB2aXNpYmxlLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPm9wdGlvbnM8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+T2JqZWN0PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgT2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOg0KICAgICAgICAgICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KICAgICAgICA8dGg+RGVmYXVsdDwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmRlc3RpbmF0aW9uPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IlJlY3RhbmdsZS5odG1sIj5SZWN0YW5nbGU8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHJlY3RhbmdsZSB0byB2aWV3LCBpbiBXR1M4NCAod29ybGQpIGNvb3JkaW5hdGVzLCB3aGljaCBkZXRlcm1pbmVzIHRoZSBmaW5hbCBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmR1cmF0aW9uPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVmYXVsdCI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qYXZhc2NyaXB0Ij4zLjA8L2NvZGU+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgZHVyYXRpb24gb2YgdGhlIGZsaWdodCBpbiBzZWNvbmRzLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmNvbXBsZXRlPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhbWVyYS5odG1sI0ZsaWdodENvbXBsZXRlQ2FsbGJhY2siPkNhbWVyYX5GbGlnaHRDb21wbGV0ZUNhbGxiYWNrPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVmYXVsdCI+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRoZSBmbGlnaHQgaXMgY29tcGxldGUuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+Y2FuY2VsPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhbWVyYS5odG1sI0ZsaWdodENhbmNlbGxlZENhbGxiYWNrIj5DYW1lcmF+RmxpZ2h0Q2FuY2VsbGVkQ2FsbGJhY2s8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB0byBleGVjdXRlIGlmIHRoZSBmbGlnaHQgaXMgY2FuY2VsbGVkLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICAgICAgICAgIDwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmVuZFRyYW5zZm9ybTwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJNYXRyaXg0Lmh0bWwiPk1hdHJpeDQ8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRyYW5zZm9ybSBtYXRyaXggcmVwcmVzZW50aW5nIHRoZSByZWZlcmVuY2UgZnJhbWUgdGhlIGNhbWVyYSB3aWxsIGJlIGluIHdoZW4gdGhlIGZsaWdodCBpcyBjb21wbGV0ZWQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wyMDY2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMjA2NjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJnZXRNYWduaXR1ZGUiPg0KICAgICAgICBnZXRNYWduaXR1ZGU8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oKTwvc3Bhbj4gJnJhcnI7IDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSByZXR1cm5UeXBlIj5OdW1iZXI8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXRzIHRoZSBtYWduaXR1ZGUgb2YgdGhlIGNhbWVyYSBwb3NpdGlvbi4gSW4gM0QsIHRoaXMgaXMgdGhlIHZlY3RvciBtYWduaXR1ZGUuIEluIDJEIGFuZA1Db2x1bWJ1cyB2aWV3LCB0aGlzIGlzIHRoZSBkaXN0YW5jZSB0byB0aGUgbWFwLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5SZXR1cm5zOjwvaDU+DQogICAgDQogICAgICAgICAgICANCjxkaXYgY2xhc3M9InBhcmFtLWRlc2MiPg0KICAgIFRoZSBtYWduaXR1ZGUgb2YgdGhlIHBvc2l0aW9uLg0KPC9kaXY+DQoNCg0KICAgICAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMzYzIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTM2MzwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJnZXRQaWNrUmF5Ij4NCiAgICAgICAgZ2V0UGlja1JheTxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPih3aW5kb3dQb3NpdGlvbiwgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5yZXN1bHQ8L3NwYW4+KTwvc3Bhbj4gJnJhcnI7IDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSByZXR1cm5UeXBlIj5PYmplY3Q8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBDcmVhdGUgYSByYXkgZnJvbSB0aGUgY2FtZXJhIHBvc2l0aW9uIHRocm91Z2ggdGhlIHBpeGVsIGF0IDxjb2RlPndpbmRvd1Bvc2l0aW9uPC9jb2RlPg1pbiB3b3JsZCBjb29yZGluYXRlcy4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT53aW5kb3dQb3NpdGlvbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4yLmh0bWwiPkNhcnRlc2lhbjI8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHggYW5kIHkgY29vcmRpbmF0ZXMgb2YgYSBwaXhlbC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZXN1bHQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iUmF5Lmh0bWwiPlJheTwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIG9iamVjdCBvbnRvIHdoaWNoIHRvIHN0b3JlIHRoZSByZXN1bHQuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+UmV0dXJuczo8L2g1Pg0KICAgIA0KICAgICAgICAgICAgDQo8ZGl2IGNsYXNzPSJwYXJhbS1kZXNjIj4NCiAgICBSZXR1cm5zIHRoZSA8YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPjxjb2RlPkNhcnRlc2lhbjM8L2NvZGU+PC9hPiBwb3NpdGlvbiBhbmQgZGlyZWN0aW9uIG9mIHRoZSByYXkuDQo8L2Rpdj4NCg0KDQogICAgICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDE4NjEiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxODYxPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9ImdldFJlY3RhbmdsZUNhbWVyYUNvb3JkaW5hdGVzIj4NCiAgICAgICAgZ2V0UmVjdGFuZ2xlQ2FtZXJhQ29vcmRpbmF0ZXM8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4ocmVjdGFuZ2xlLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPnJlc3VsdDwvc3Bhbj4pPC9zcGFuPiAmcmFycjsgPHNwYW4gY2xhc3M9InR5cGUtc2lnbmF0dXJlIHJldHVyblR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBHZXQgdGhlIGNhbWVyYSBwb3NpdGlvbiBuZWVkZWQgdG8gdmlldyBhbiByZWN0YW5nbGUgb24gYW4gZWxsaXBzb2lkIG9yIG1hcA0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPnJlY3RhbmdsZTwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJSZWN0YW5nbGUuaHRtbCI+UmVjdGFuZ2xlPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSByZWN0YW5nbGUgdG8gdmlldy48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZXN1bHQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgY2FtZXJhIHBvc2l0aW9uIG5lZWRlZCB0byB2aWV3IHRoZSByZWN0YW5nbGU8L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5SZXR1cm5zOjwvaDU+DQogICAgDQogICAgICAgICAgICANCjxkaXYgY2xhc3M9InBhcmFtLWRlc2MiPg0KICAgIFRoZSBjYW1lcmEgcG9zaXRpb24gbmVlZGVkIHRvIHZpZXcgdGhlIHJlY3RhbmdsZQ0KPC9kaXY+DQoNCg0KICAgICAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxNjc4Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTY3ODwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJsb29rIj4NCiAgICAgICAgbG9vazxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPihheGlzLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmFuZ2xlPC9zcGFuPik8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBSb3RhdGUgZWFjaCBvZiB0aGUgY2FtZXJhJ3Mgb3JpZW50YXRpb24gdmVjdG9ycyBhcm91bmQgPGNvZGU+YXhpczwvY29kZT4gYnkgPGNvZGU+YW5nbGU8L2NvZGU+DQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YXhpczwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGF4aXMgdG8gcm90YXRlIGFyb3VuZC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbmdsZTwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5OdW1iZXI8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGFuZ2xlLCBpbiByYWRpYW5zLCB0byByb3RhdGUgYnkuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRMb29rQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjbG9va1VwIj5DYW1lcmEjbG9va1VwPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNsb29rRG93biI+Q2FtZXJhI2xvb2tEb3duPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNsb29rTGVmdCI+Q2FtZXJhI2xvb2tMZWZ0PC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNsb29rUmlnaHQiPkNhbWVyYSNsb29rUmlnaHQ8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMTE5Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTExOTwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJsb29rQXQiPg0KICAgICAgICBsb29rQXQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oZXllLCB0YXJnZXQsIHVwKTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFNldHMgdGhlIGNhbWVyYSBwb3NpdGlvbiBhbmQgb3JpZW50YXRpb24gd2l0aCBhbiBleWUgcG9zaXRpb24sIHRhcmdldCwgYW5kIHVwIHZlY3Rvci4NVGhpcyBtZXRob2QgaXMgbm90IHN1cHBvcnRlZCBpbiAyRCBtb2RlIGJlY2F1c2UgdGhlcmUgaXMgb25seSBvbmUgZGlyZWN0aW9uIHRvIGxvb2suDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+ZXllPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBwb3NpdGlvbiBvZiB0aGUgY2FtZXJhLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPnRhcmdldDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgcG9zaXRpb24gdG8gbG9vayBhdC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT51cDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgdXAgdmVjdG9yLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+VGhyb3dzOjwvaDU+DQogICAgPHVsPg0KICAgICAgICAgICAgPGxpPg0KDQogICAgPGRpdiBjbGFzcz0icGFyYW0tZGVzYyI+DQogICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkRldmVsb3BlckVycm9yLmh0bWwiPkRldmVsb3BlckVycm9yPC9hPjwvc3Bhbj4NCg0KOiBsb29rQXQgaXMgbm90IHN1cHBvcnRlZCB3aGlsZSBtb3JwaGluZy4NCiAgICA8L2Rpdj4NCg0KPC9saT4NCiAgICAgICAgPC91bD4NCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTQ0MyI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDE0NDM8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0ibG9va0Rvd24iPg0KICAgICAgICBsb29rRG93bjxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPig8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmFtb3VudDwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgUm90YXRlcyB0aGUgY2FtZXJhIGFyb3VuZCBpdHMgcmlnaHQgdmVjdG9yIGJ5IGFtb3VudCwgaW4gcmFkaWFucywgaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbg1vZiBpdHMgdXAgdmVjdG9yLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFtb3VudDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5OdW1iZXI8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGFtb3VudCwgaW4gcmFkaWFucywgdG8gcm90YXRlIGJ5LiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0TG9va0Ftb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI2xvb2tVcCI+Q2FtZXJhI2xvb2tVcDwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDExMDEiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMTAxPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9Imxvb2tMZWZ0Ij4NCiAgICAgICAgbG9va0xlZnQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZXMgdGhlIGNhbWVyYSBhcm91bmQgaXRzIHVwIHZlY3RvciBieSBhbW91bnQsIGluIHJhZGlhbnMsIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24Nb2YgaXRzIHJpZ2h0IHZlY3Rvci4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIHJhZGlhbnMsIHRvIHJvdGF0ZSBieS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdExvb2tBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNsb29rUmlnaHQiPkNhbWVyYSNsb29rUmlnaHQ8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMDYyIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTA2MjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJsb29rUmlnaHQiPg0KICAgICAgICBsb29rUmlnaHQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZXMgdGhlIGNhbWVyYSBhcm91bmQgaXRzIHVwIHZlY3RvciBieSBhbW91bnQsIGluIHJhZGlhbnMsIGluIHRoZSBkaXJlY3Rpb24Nb2YgaXRzIHJpZ2h0IHZlY3Rvci4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIHJhZGlhbnMsIHRvIHJvdGF0ZSBieS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdExvb2tBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNsb29rTGVmdCI+Q2FtZXJhI2xvb2tMZWZ0PC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTA3NSI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDEwNzU8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0ibG9va1VwIj4NCiAgICAgICAgbG9va1VwPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW1vdW50PC9zcGFuPik8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBSb3RhdGVzIHRoZSBjYW1lcmEgYXJvdW5kIGl0cyByaWdodCB2ZWN0b3IgYnkgYW1vdW50LCBpbiByYWRpYW5zLCBpbiB0aGUgZGlyZWN0aW9uDW9mIGl0cyB1cCB2ZWN0b3IuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW1vdW50PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW1vdW50LCBpbiByYWRpYW5zLCB0byByb3RhdGUgYnkuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRMb29rQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjbG9va0Rvd24iPkNhbWVyYSNsb29rRG93bjwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEwODgiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMDg4PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9Im1vdmUiPg0KICAgICAgICBtb3ZlPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KGRpcmVjdGlvbiwgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zbGF0ZXMgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIGJ5IDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgPGNvZGU+ZGlyZWN0aW9uPC9jb2RlPi4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5kaXJlY3Rpb248L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBkaXJlY3Rpb24gdG8gbW92ZS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIG1ldGVycywgdG8gbW92ZS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdE1vdmVBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNtb3ZlQmFja3dhcmQiPkNhbWVyYSNtb3ZlQmFja3dhcmQ8L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI21vdmVGb3J3YXJkIj5DYW1lcmEjbW92ZUZvcndhcmQ8L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI21vdmVMZWZ0Ij5DYW1lcmEjbW92ZUxlZnQ8L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI21vdmVSaWdodCI+Q2FtZXJhI21vdmVSaWdodDwvYT48L2xpPg0KICAgIA0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjbW92ZVVwIj5DYW1lcmEjbW92ZVVwPC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNtb3ZlRG93biI+Q2FtZXJhI21vdmVEb3duPC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMOTYzIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgOTYzPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9Im1vdmVCYWNrd2FyZCI+DQogICAgICAgIG1vdmVCYWNrd2FyZDxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPig8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmFtb3VudDwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVHJhbnNsYXRlcyB0aGUgY2FtZXJhJ3MgcG9zaXRpb24gYnkgPGNvZGU+YW1vdW50PC9jb2RlPiBhbG9uZyB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uDW9mIHRoZSBjYW1lcmEncyB2aWV3IHZlY3Rvci4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIG1ldGVycywgdG8gbW92ZS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdE1vdmVBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNtb3ZlRm9yd2FyZCI+Q2FtZXJhI21vdmVGb3J3YXJkPC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMOTk5Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgOTk5PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9Im1vdmVEb3duIj4NCiAgICAgICAgbW92ZURvd248c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zbGF0ZXMgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIGJ5IDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgdGhlIG9wcG9zaXRlIGRpcmVjdGlvbg1vZiB0aGUgY2FtZXJhJ3MgdXAgdmVjdG9yLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFtb3VudDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5OdW1iZXI8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGFtb3VudCwgaW4gbWV0ZXJzLCB0byBtb3ZlLiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0TW92ZUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI21vdmVVcCI+Q2FtZXJhI21vdmVVcDwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEwMjQiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMDI0PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9Im1vdmVGb3J3YXJkIj4NCiAgICAgICAgbW92ZUZvcndhcmQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zbGF0ZXMgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIGJ5IDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgdGhlIGNhbWVyYSdzIHZpZXcgdmVjdG9yLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFtb3VudDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5OdW1iZXI8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGFtb3VudCwgaW4gbWV0ZXJzLCB0byBtb3ZlLiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0TW92ZUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI21vdmVCYWNrd2FyZCI+Q2FtZXJhI21vdmVCYWNrd2FyZDwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDk4NiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDk4NjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJtb3ZlTGVmdCI+DQogICAgICAgIG1vdmVMZWZ0PHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW1vdW50PC9zcGFuPik8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUcmFuc2xhdGVzIHRoZSBjYW1lcmEncyBwb3NpdGlvbiBieSA8Y29kZT5hbW91bnQ8L2NvZGU+IGFsb25nIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24Nb2YgdGhlIGNhbWVyYSdzIHJpZ2h0IHZlY3Rvci4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIG1ldGVycywgdG8gbW92ZS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdE1vdmVBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNtb3ZlUmlnaHQiPkNhbWVyYSNtb3ZlUmlnaHQ8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMDQ5Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTA0OTwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJtb3ZlUmlnaHQiPg0KICAgICAgICBtb3ZlUmlnaHQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zbGF0ZXMgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIGJ5IDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgdGhlIGNhbWVyYSdzIHJpZ2h0IHZlY3Rvci4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5hbW91bnQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbW91bnQsIGluIG1ldGVycywgdG8gbW92ZS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdE1vdmVBbW91bnQ8L2NvZGU+LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICA8aDU+U2VlOjwvaDU+DQogICAgPHVsIGNsYXNzPSJzZWUtbGlzdCI+DQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNtb3ZlTGVmdCI+Q2FtZXJhI21vdmVMZWZ0PC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTAzNiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDEwMzY8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0ibW92ZVVwIj4NCiAgICAgICAgbW92ZVVwPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW1vdW50PC9zcGFuPik8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBUcmFuc2xhdGVzIHRoZSBjYW1lcmEncyBwb3NpdGlvbiBieSA8Y29kZT5hbW91bnQ8L2NvZGU+IGFsb25nIHRoZSBjYW1lcmEncyB1cCB2ZWN0b3IuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW1vdW50PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW1vdW50LCBpbiBtZXRlcnMsIHRvIG1vdmUuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRNb3ZlQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjbW92ZURvd24iPkNhbWVyYSNtb3ZlRG93bjwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEwMTEiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMDExPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InBpY2tFbGxpcHNvaWQiPg0KICAgICAgICBwaWNrRWxsaXBzb2lkPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KHdpbmRvd1Bvc2l0aW9uLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmVsbGlwc29pZDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+cmVzdWx0PC9zcGFuPik8L3NwYW4+ICZyYXJyOyA8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUgcmV0dXJuVHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFBpY2sgYW4gZWxsaXBzb2lkIG9yIG1hcC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCiAgICAgICAgPHRoPkRlZmF1bHQ8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT53aW5kb3dQb3NpdGlvbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4yLmh0bWwiPkNhcnRlc2lhbjI8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHggYW5kIHkgY29vcmRpbmF0ZXMgb2YgYSBwaXhlbC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5lbGxpcHNvaWQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iRWxsaXBzb2lkLmh0bWwiPkVsbGlwc29pZDwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtamF2YXNjcmlwdCI+RWxsaXBzb2lkLldHUzg0PC9jb2RlPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGVsbGlwc29pZCB0byBwaWNrLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPnJlc3VsdDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBvYmplY3Qgb250byB3aGljaCB0byBzdG9yZSB0aGUgcmVzdWx0LjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlJldHVybnM6PC9oNT4NCiAgICANCiAgICAgICAgICAgIA0KPGRpdiBjbGFzcz0icGFyYW0tZGVzYyI+DQogICAgSWYgdGhlIGVsbGlwc29pZCBvciBtYXAgd2FzIHBpY2tlZCwgcmV0dXJucyB0aGUgcG9pbnQgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIGVsbGlwc29pZCBvciBtYXANaW4gd29ybGQgY29vcmRpbmF0ZXMuIElmIHRoZSBlbGxpcHNvaWQgb3IgbWFwIHdhcyBub3QgcGlja2VkLCByZXR1cm5zIHVuZGVmaW5lZC4NCjwvZGl2Pg0KDQoNCiAgICAgICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTc3MiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDE3NzI8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0icm90YXRlIj4NCiAgICAgICAgcm90YXRlPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KGF4aXMsIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW5nbGU8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZXMgdGhlIGNhbWVyYSBhcm91bmQgPGNvZGU+YXhpczwvY29kZT4gYnkgPGNvZGU+YW5nbGU8L2NvZGU+LiBUaGUgZGlzdGFuY2UNb2YgdGhlIGNhbWVyYSdzIHBvc2l0aW9uIHRvIHRoZSBjZW50ZXIgb2YgdGhlIGNhbWVyYSdzIHJlZmVyZW5jZSBmcmFtZSByZW1haW5zIHRoZSBzYW1lLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmF4aXM8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBheGlzIHRvIHJvdGF0ZSBhcm91bmQgZ2l2ZW4gaW4gd29ybGQgY29vcmRpbmF0ZXMuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW5nbGU8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbmdsZSwgaW4gcmFkaWFucywgdG8gcm90YXRlIGJ5LiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0Um90YXRlQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjcm90YXRlVXAiPkNhbWVyYSNyb3RhdGVVcDwvYT48L2xpPg0KICAgIA0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjcm90YXRlRG93biI+Q2FtZXJhI3JvdGF0ZURvd248L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZUxlZnQiPkNhbWVyYSNyb3RhdGVMZWZ0PC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNyb3RhdGVSaWdodCI+Q2FtZXJhI3JvdGF0ZVJpZ2h0PC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTE3NyI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDExNzc8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0icm90YXRlRG93biI+DQogICAgICAgIHJvdGF0ZURvd248c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbmdsZTwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgUm90YXRlcyB0aGUgY2FtZXJhIGFyb3VuZCB0aGUgY2VudGVyIG9mIHRoZSBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUgYnkgYW5nbGUgZG93bndhcmRzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFuZ2xlPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW5nbGUsIGluIHJhZGlhbnMsIHRvIHJvdGF0ZSBieS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdFJvdGF0ZUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZVVwIj5DYW1lcmEjcm90YXRlVXA8L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZSI+Q2FtZXJhI3JvdGF0ZTwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEyMDIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMjAyPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InJvdGF0ZUxlZnQiPg0KICAgICAgICByb3RhdGVMZWZ0PHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW5nbGU8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZXMgdGhlIGNhbWVyYSBhcm91bmQgdGhlIGNlbnRlciBvZiB0aGUgY2FtZXJhJ3MgcmVmZXJlbmNlIGZyYW1lIGJ5IGFuZ2xlIHRvIHRoZSBsZWZ0Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFuZ2xlPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW5nbGUsIGluIHJhZGlhbnMsIHRvIHJvdGF0ZSBieS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdFJvdGF0ZUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZVJpZ2h0Ij5DYW1lcmEjcm90YXRlUmlnaHQ8L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZSI+Q2FtZXJhI3JvdGF0ZTwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEyNzYiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMjc2PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InJvdGF0ZVJpZ2h0Ij4NCiAgICAgICAgcm90YXRlUmlnaHQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbmdsZTwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgUm90YXRlcyB0aGUgY2FtZXJhIGFyb3VuZCB0aGUgY2VudGVyIG9mIHRoZSBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUgYnkgYW5nbGUgdG8gdGhlIHJpZ2h0Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFuZ2xlPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW5nbGUsIGluIHJhZGlhbnMsIHRvIHJvdGF0ZSBieS4gRGVmYXVsdHMgdG8gPGNvZGU+ZGVmYXVsdFJvdGF0ZUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZUxlZnQiPkNhbWVyYSNyb3RhdGVMZWZ0PC9hPjwvbGk+DQogICAgDQogICAgICAgIDxsaT48YSBocmVmPSJDYW1lcmEuaHRtbCNyb3RhdGUiPkNhbWVyYSNyb3RhdGU8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMjYzIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTI2MzwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJyb3RhdGVVcCI+DQogICAgICAgIHJvdGF0ZVVwPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+YW5nbGU8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZXMgdGhlIGNhbWVyYSBhcm91bmQgdGhlIGNlbnRlciBvZiB0aGUgY2FtZXJhJ3MgcmVmZXJlbmNlIGZyYW1lIGJ5IGFuZ2xlIHVwd2FyZHMuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW5nbGU8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+TnVtYmVyPC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBhbmdsZSwgaW4gcmFkaWFucywgdG8gcm90YXRlIGJ5LiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0Um90YXRlQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjcm90YXRlRG93biI+Q2FtZXJhI3JvdGF0ZURvd248L2E+PC9saT4NCiAgICANCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3JvdGF0ZSI+Q2FtZXJhI3JvdGF0ZTwvYT48L2xpPg0KICAgIDwvdWw+DQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDEyMTUiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxMjE1PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9InNldFBvc2l0aW9uQ2FydG9ncmFwaGljIj4NCiAgICAgICAgc2V0UG9zaXRpb25DYXJ0b2dyYXBoaWM8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oY2FydG9ncmFwaGljKTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIE1vdmVzIHRoZSBjYW1lcmEgdG8gdGhlIHByb3ZpZGVkIGNhcnRvZ3JhcGhpYyBwb3NpdGlvbi4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5jYXJ0b2dyYXBoaWM8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydG9ncmFwaGljLmh0bWwiPkNhcnRvZ3JhcGhpYzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBuZXcgY2FtZXJhIHBvc2l0aW9uLjwvdGQ+DQogICAgICAgIDwvdHI+DQoNCiAgICANCiAgICA8L3Rib2R5Pg0KPC90YWJsZT4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTQxNyI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDE0MTc8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0ic2V0VHJhbnNmb3JtIj4NCiAgICAgICAgc2V0VHJhbnNmb3JtPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KHRyYW5zZm9ybSk8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBTZXRzIHRoZSBjYW1lcmEncyB0cmFuc2Zvcm0gd2l0aG91dCBjaGFuZ2luZyB0aGUgY3VycmVudCB2aWV3Lg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPnRyYW5zZm9ybTwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJNYXRyaXg0Lmh0bWwiPk1hdHJpeDQ8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgY2FtZXJhIHRyYW5zZm9ybS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDc5MCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDc5MDwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJ0d2lzdExlZnQiPg0KICAgICAgICB0d2lzdExlZnQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFJvdGF0ZSB0aGUgY2FtZXJhIGNvdW50ZXItY2xvY2t3aXNlIGFyb3VuZCBpdHMgZGlyZWN0aW9uIHZlY3RvciBieSBhbW91bnQsIGluIHJhZGlhbnMuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW1vdW50PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW1vdW50LCBpbiByYWRpYW5zLCB0byByb3RhdGUgYnkuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRMb29rQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjdHdpc3RSaWdodCI+Q2FtZXJhI3R3aXN0UmlnaHQ8L2E+PC9saT4NCiAgICA8L3VsPg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wxMTQ2Ij5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMTE0NjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJ0d2lzdFJpZ2h0Ij4NCiAgICAgICAgdHdpc3RSaWdodDxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPig8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmFtb3VudDwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgUm90YXRlIHRoZSBjYW1lcmEgY2xvY2t3aXNlIGFyb3VuZCBpdHMgZGlyZWN0aW9uIHZlY3RvciBieSBhbW91bnQsIGluIHJhZGlhbnMuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW1vdW50PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW1vdW50LCBpbiByYWRpYW5zLCB0byByb3RhdGUgYnkuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRMb29rQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjdHdpc3RMZWZ0Ij5DYW1lcmEjdHdpc3RMZWZ0PC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTE1OCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDExNTg8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0idmlld1JlY3RhbmdsZSI+DQogICAgICAgIHZpZXdSZWN0YW5nbGU8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4ocmVjdGFuZ2xlLCA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPmVsbGlwc29pZDwvc3Bhbj4pPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVmlldyBhbiByZWN0YW5nbGUgb24gYW4gZWxsaXBzb2lkIG9yIG1hcC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgICAgICANCg0KPHRhYmxlIGNsYXNzPSJwYXJhbXMiPg0KICAgIDx0aGVhZD4NCiAgICA8dHI+DQogICAgICAgIA0KICAgICAgICA8dGg+TmFtZTwvdGg+DQogICAgICAgIA0KDQogICAgICAgIDx0aD5UeXBlPC90aD4NCg0KICAgICAgICANCiAgICAgICAgPHRoPkRlZmF1bHQ8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGggY2xhc3M9Imxhc3QiPkRlc2NyaXB0aW9uPC90aD4NCiAgICA8L3RyPg0KICAgIDwvdGhlYWQ+DQoNCiAgICA8dGJvZHk+DQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZWN0YW5nbGU8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iUmVjdGFuZ2xlLmh0bWwiPlJlY3RhbmdsZTwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImRlZmF1bHQiPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgcmVjdGFuZ2xlIHRvIHZpZXcuPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+ZWxsaXBzb2lkPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkVsbGlwc29pZC5odG1sIj5FbGxpcHNvaWQ8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkZWZhdWx0Ij4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPGNvZGUgY2xhc3M9Imxhbmd1YWdlLWphdmFzY3JpcHQiPkVsbGlwc29pZC5XR1M4NDwvY29kZT4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+b3B0aW9uYWw8L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIFRoZSBlbGxpcHNvaWQgdG8gdmlldy48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDE3MDIiPlNjZW5lL0NhbWVyYS5qcywgbGluZSAxNzAyPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9IndvcmxkVG9DYW1lcmFDb29yZGluYXRlcyI+DQogICAgICAgIHdvcmxkVG9DYW1lcmFDb29yZGluYXRlczxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPihjYXJ0ZXNpYW4sIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+cmVzdWx0PC9zcGFuPik8L3NwYW4+ICZyYXJyOyA8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUgcmV0dXJuVHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuNC5odG1sIj5DYXJ0ZXNpYW40PC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zZm9ybSBhIHZlY3RvciBvciBwb2ludCBmcm9tIHdvcmxkIGNvb3JkaW5hdGVzIHRvIHRoZSBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+Y2FydGVzaWFuPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjQuaHRtbCI+Q2FydGVzaWFuNDwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgdmVjdG9yIG9yIHBvaW50IHRvIHRyYW5zZm9ybS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZXN1bHQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuNC5odG1sIj5DYXJ0ZXNpYW40PC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgb2JqZWN0IG9udG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5SZXR1cm5zOjwvaDU+DQogICAgDQogICAgICAgICAgICANCjxkaXYgY2xhc3M9InBhcmFtLWRlc2MiPg0KICAgIFRoZSB0cmFuc2Zvcm1lZCB2ZWN0b3Igb3IgcG9pbnQuDQo8L2Rpdj4NCg0KDQogICAgICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDgxMiI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDgxMjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJ3b3JsZFRvQ2FtZXJhQ29vcmRpbmF0ZXNQb2ludCI+DQogICAgICAgIHdvcmxkVG9DYW1lcmFDb29yZGluYXRlc1BvaW50PHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KGNhcnRlc2lhbiwgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5yZXN1bHQ8L3NwYW4+KTwvc3Bhbj4gJnJhcnI7IDxzcGFuIGNsYXNzPSJ0eXBlLXNpZ25hdHVyZSByZXR1cm5UeXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgVHJhbnNmb3JtIGEgcG9pbnQgZnJvbSB3b3JsZCBjb29yZGluYXRlcyB0byB0aGUgY2FtZXJhJ3MgcmVmZXJlbmNlIGZyYW1lLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmNhcnRlc2lhbjwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj48YSBocmVmPSJDYXJ0ZXNpYW4zLmh0bWwiPkNhcnRlc2lhbjM8L2E+PC9zcGFuPg0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0iZGVzY3JpcHRpb24gbGFzdCI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIHBvaW50IHRvIHRyYW5zZm9ybS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZXN1bHQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgb2JqZWN0IG9udG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5SZXR1cm5zOjwvaDU+DQogICAgDQogICAgICAgICAgICANCjxkaXYgY2xhc3M9InBhcmFtLWRlc2MiPg0KICAgIFRoZSB0cmFuc2Zvcm1lZCBwb2ludC4NCjwvZGl2Pg0KDQoNCiAgICAgICAgDQoNCiAgICANCg0KICAgIA0KPGRsIGNsYXNzPSJkZXRhaWxzIj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMODMzIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgODMzPC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICANCiAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9IndvcmxkVG9DYW1lcmFDb29yZGluYXRlc1ZlY3RvciI+DQogICAgICAgIHdvcmxkVG9DYW1lcmFDb29yZGluYXRlc1ZlY3RvcjxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPihjYXJ0ZXNpYW4sIDxzcGFuIGNsYXNzPSJvcHRpb25hbCI+cmVzdWx0PC9zcGFuPik8L3NwYW4+ICZyYXJyOyA8c3BhbiBjbGFzcz0idHlwZS1zaWduYXR1cmUgcmV0dXJuVHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFRyYW5zZm9ybSBhIHZlY3RvciBmcm9tIHdvcmxkIGNvb3JkaW5hdGVzIHRvIHRoZSBjYW1lcmEncyByZWZlcmVuY2UgZnJhbWUuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+Y2FydGVzaWFuPC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPjxhIGhyZWY9IkNhcnRlc2lhbjMuaHRtbCI+Q2FydGVzaWFuMzwvYT48L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgdmVjdG9yIHRvIHRyYW5zZm9ybS48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQoNCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJuYW1lIj48Y29kZT5yZXN1bHQ8L2NvZGU+PC90ZD4NCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9InR5cGUiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQo8c3BhbiBjbGFzcz0icGFyYW0tdHlwZSI+PGEgaHJlZj0iQ2FydGVzaWFuMy5odG1sIj5DYXJ0ZXNpYW4zPC9hPjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgb2JqZWN0IG9udG8gd2hpY2ggdG8gc3RvcmUgdGhlIHJlc3VsdC48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5SZXR1cm5zOjwvaDU+DQogICAgDQogICAgICAgICAgICANCjxkaXYgY2xhc3M9InBhcmFtLWRlc2MiPg0KICAgIFRoZSB0cmFuc2Zvcm1lZCB2ZWN0b3IuDQo8L2Rpdj4NCg0KDQogICAgICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDg1NCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDg1NDwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgDQogICAgICAgICAgICANCjxkdD4NCiAgICA8ZGl2IGNsYXNzPSJuYW1lQ29udGFpbmVyIj4NCiAgICA8aDQgY2xhc3M9Im5hbWUiIGlkPSJ6b29tSW4iPg0KICAgICAgICB6b29tSW48c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFpvb21zIDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgdGhlIGNhbWVyYSdzIHZpZXcgdmVjdG9yLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgICAgIA0KDQo8dGFibGUgY2xhc3M9InBhcmFtcyI+DQogICAgPHRoZWFkPg0KICAgIDx0cj4NCiAgICAgICAgDQogICAgICAgIDx0aD5OYW1lPC90aD4NCiAgICAgICAgDQoNCiAgICAgICAgPHRoPlR5cGU8L3RoPg0KDQogICAgICAgIA0KDQogICAgICAgIDx0aCBjbGFzcz0ibGFzdCI+RGVzY3JpcHRpb248L3RoPg0KICAgIDwvdHI+DQogICAgPC90aGVhZD4NCg0KICAgIDx0Ym9keT4NCiAgICANCg0KICAgICAgICA8dHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8dGQgY2xhc3M9Im5hbWUiPjxjb2RlPmFtb3VudDwvY29kZT48L3RkPg0KICAgICAgICAgICAgDQoNCiAgICAgICAgICAgIDx0ZCBjbGFzcz0idHlwZSI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCjxzcGFuIGNsYXNzPSJwYXJhbS10eXBlIj5OdW1iZXI8L3NwYW4+DQoNCg0KICAgICAgICAgICAgDQogICAgICAgICAgICA8L3RkPg0KDQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJkZXNjcmlwdGlvbiBsYXN0Ij4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5vcHRpb25hbDwvc3Bhbj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgVGhlIGFtb3VudCB0byBtb3ZlLiBEZWZhdWx0cyB0byA8Y29kZT5kZWZhdWx0Wm9vbUFtb3VudDwvY29kZT4uPC90ZD4NCiAgICAgICAgPC90cj4NCg0KICAgIA0KICAgIDwvdGJvZHk+DQo8L3RhYmxlPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KICAgIDxoNT5TZWU6PC9oNT4NCiAgICA8dWwgY2xhc3M9InNlZS1saXN0Ij4NCiAgICAgICAgPGxpPjxhIGhyZWY9IkNhbWVyYS5odG1sI3pvb21PdXQiPkNhbWVyYSN6b29tT3V0PC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTMzMSI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDEzMzE8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIA0KICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iem9vbU91dCI+DQogICAgICAgIHpvb21PdXQ8c3BhbiBjbGFzcz0ic2lnbmF0dXJlIj4oPHNwYW4gY2xhc3M9Im9wdGlvbmFsIj5hbW91bnQ8L3NwYW4+KTwvc3Bhbj4NCiAgICA8L2g0Pg0KDQogICAgPC9kaXY+DQoNCiAgICANCjwvZHQ+DQo8ZGQ+DQoNCiAgICANCiAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+DQogICAgICAgIFpvb21zIDxjb2RlPmFtb3VudDwvY29kZT4gYWxvbmcgdGhlIG9wcG9zaXRlIGRpcmVjdGlvbiBvZg10aGUgY2FtZXJhJ3MgdmlldyB2ZWN0b3IuDQogICAgPC9kaXY+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICAgICAgDQoNCjx0YWJsZSBjbGFzcz0icGFyYW1zIj4NCiAgICA8dGhlYWQ+DQogICAgPHRyPg0KICAgICAgICANCiAgICAgICAgPHRoPk5hbWU8L3RoPg0KICAgICAgICANCg0KICAgICAgICA8dGg+VHlwZTwvdGg+DQoNCiAgICAgICAgDQoNCiAgICAgICAgPHRoIGNsYXNzPSJsYXN0Ij5EZXNjcmlwdGlvbjwvdGg+DQogICAgPC90cj4NCiAgICA8L3RoZWFkPg0KDQogICAgPHRib2R5Pg0KICAgIA0KDQogICAgICAgIDx0cj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibmFtZSI+PGNvZGU+YW1vdW50PC9jb2RlPjwvdGQ+DQogICAgICAgICAgICANCg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJ0eXBlIj4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPHNwYW4gY2xhc3M9InBhcmFtLXR5cGUiPk51bWJlcjwvc3Bhbj4NCg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgIA0KDQogICAgICAgICAgICA8dGQgY2xhc3M9ImRlc2NyaXB0aW9uIGxhc3QiPg0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ib3B0aW9uYWwiPm9wdGlvbmFsPC9zcGFuPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBUaGUgYW1vdW50IHRvIG1vdmUuIERlZmF1bHRzIHRvIDxjb2RlPmRlZmF1bHRab29tQW1vdW50PC9jb2RlPi48L3RkPg0KICAgICAgICA8L3RyPg0KDQogICAgDQogICAgPC90Ym9keT4NCjwvdGFibGU+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgPGg1PlNlZTo8L2g1Pg0KICAgIDx1bCBjbGFzcz0ic2VlLWxpc3QiPg0KICAgICAgICA8bGk+PGEgaHJlZj0iQ2FtZXJhLmh0bWwjem9vbUluIj5DYW1lcmEjem9vbUluPC9hPjwvbGk+DQogICAgPC91bD4NCiAgICANCg0KICAgIA0KICAgIA0KICAgIA0KICAgIDxkaXYgY2xhc3M9InNvdXJjZS1saW5rIj4NCiAgICAgICAgU291cmNlOiANCiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FuYWx5dGljYWxHcmFwaGljc0luYy9jZXNpdW0vYmxvYi8xLjIvU291cmNlL1NjZW5lL0NhbWVyYS5qcyNMMTM0OCI+U2NlbmUvQ2FtZXJhLmpzLCBsaW5lIDEzNDg8L2E+DQogICAgPC9kaXY+DQogICAgDQo8L2RsPg0KDQo8L2RkPg0KDQogICAgICAgIDwvZGw+DQogICAgDQoNCiAgICANCiAgICAgICAgPGgzIGNsYXNzPSJzdWJzZWN0aW9uLXRpdGxlIj5UeXBlIERlZmluaXRpb25zPC9oMz4NCg0KICAgICAgICA8ZGw+DQogICAgICAgICAgICAgICAgDQo8ZHQ+DQogICAgPGRpdiBjbGFzcz0ibmFtZUNvbnRhaW5lciI+DQogICAgPGg0IGNsYXNzPSJuYW1lIiBpZD0iRmxpZ2h0Q2FuY2VsbGVkQ2FsbGJhY2siPg0KICAgICAgICBGbGlnaHRDYW5jZWxsZWRDYWxsYmFjazxzcGFuIGNsYXNzPSJzaWduYXR1cmUiPigpPC9zcGFuPg0KICAgIDwvaDQ+DQoNCiAgICA8L2Rpdj4NCg0KICAgIA0KPC9kdD4NCjxkZD4NCg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4NCiAgICAgICAgQSBmdW5jdGlvbiB0aGF0IHdpbGwgZXhlY3V0ZSB3aGVuIGEgZmxpZ2h0IGlzIGNhbmNlbGxlZC4NCiAgICA8L2Rpdj4NCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQo8ZGwgY2xhc3M9ImRldGFpbHMiPg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQogICAgDQogICAgDQogICAgPGRpdiBjbGFzcz0ic291cmNlLWxpbmsiPg0KICAgICAgICBTb3VyY2U6IA0KICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW5hbHl0aWNhbEdyYXBoaWNzSW5jL2Nlc2l1bS9ibG9iLzEuMi9Tb3VyY2UvU2NlbmUvQ2FtZXJhLmpzI0wyMDkyIj5TY2VuZS9DYW1lcmEuanMsIGxpbmUgMjA5MjwvYT4NCiAgICA8L2Rpdj4NCiAgICANCjwvZGw+DQoNCjwvZGQ+DQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KPGR0Pg0KICAgIDxkaXYgY2xhc3M9Im5hbWVDb250YWluZXIiPg0KICAgIDxoNCBjbGFzcz0ibmFtZSIgaWQ9IkZsaWdodENvbXBsZXRlQ2FsbGJhY2siPg0KICAgICAgICBGbGlnaHRDb21wbGV0ZUNhbGxiYWNrPHNwYW4gY2xhc3M9InNpZ25hdHVyZSI+KCk8L3NwYW4+DQogICAgPC9oND4NCg0KICAgIDwvZGl2Pg0KDQogICAgDQo8L2R0Pg0KPGRkPg0KDQogICAgDQogICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KICAgICAgICBBIGZ1bmN0aW9uIHRoYXQgd2lsbCBleGVjdXRlIHdoZW4gYSBmbGlnaHQgY29tcGxldGVzLg0KICAgIDwvZGl2Pg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCjxkbCBjbGFzcz0iZGV0YWlscyI+DQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCg0KICAgIA0KDQogICAgDQoNCiAgICANCiAgICANCiAgICANCiAgICA8ZGl2IGNsYXNzPSJzb3VyY2UtbGluayI+DQogICAgICAgIFNvdXJjZTogDQogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9BbmFseXRpY2FsR3JhcGhpY3NJbmMvY2VzaXVtL2Jsb2IvMS4yL1NvdXJjZS9TY2VuZS9DYW1lcmEuanMjTDIwODciPlNjZW5lL0NhbWVyYS5qcywgbGluZSAyMDg3PC9hPg0KICAgIDwvZGl2Pg0KICAgIA0KPC9kbD4NCg0KPC9kZD4NCg0KICAgICAgICAgICAgPC9kbD4NCiAgICANCg0KICAgIA0KPC9hcnRpY2xlPg0KDQo8L3NlY3Rpb24+DQoNCg0KDQoNCg0KICAgIDxmb290ZXI+DQogICAgICAgIERvY3VtZW50YXRpb24gZ2VuZXJhdGVkIGJ5IDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9qc2RvYzMvanNkb2MiPkpTRG9jIDMuMy4wLWFscGhhOTwvYT4NCiAgICA8L2Zvb3Rlcj4NCjwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGJyIGNsZWFyPSJib3RoIj4NCg0KPHNjcmlwdD4NCmlmICh3aW5kb3cuZnJhbWVFbGVtZW50KSB7DQogICAgZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPSAnZW1iZWRkZWQnOw0KDQogICAgdmFyIGVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsNCiAgICBlbGUuY2xhc3NOYW1lID0gJ3BvcG91dCc7DQogICAgZWxlLnRhcmdldCA9ICdfYmxhbmsnOw0KICAgIGVsZS5ocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7DQogICAgZWxlLnRpdGxlID0gJ1BvcCBvdXQnOw0KICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykuYXBwZW5kQ2hpbGQoZWxlKTsNCg0KICAgIGVsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsNCiAgICBlbGUuY2xhc3NOYW1lID0gJ2JhY2snOw0KICAgIGVsZS5ocmVmID0gJ2luZGV4Lmh0bWwnOw0KICAgIGVsZS50aXRsZSA9ICdIb21lJzsNCiAgICBlbGUudGFyZ2V0ID0gJ19zZWxmJzsNCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpLmFwcGVuZENoaWxkKGVsZSk7DQp9IGVsc2Ugew0KICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdia2dkJykuY2xhc3NOYW1lID0gJ3Nob3ctYmtnZCc7DQp9DQoNCi8vIFNldCB0YXJnZXRzIG9uIGV4dGVybmFsIGxpbmtzLiAgU2FuZGNhc3RsZSBhbmQgR2l0SHViIHNob3VsZG4ndCBiZSBlbWJlZGRlZCBpbiBhbnkgaWZyYW1lLg0KQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpLCBmdW5jdGlvbihhKSB7DQogICAgaWYgKC9eaHR0cHM/Oi9pLnRlc3QoYS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkpIHsNCiAgICAgICAgYS50YXJnZXQ9J19ibGFuayc7DQogICAgfQ0KfSk7DQo8L3NjcmlwdD4NCg0KPHNjcmlwdCBzcmM9ImphdmFzY3JpcHQvcHJpc20uanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9ImphdmFzY3JpcHQvY2VzaXVtRG9jLmpzIj48L3NjcmlwdD4NCg0KPC9ib2R5Pg0KPC9odG1sPg==",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 14:54:24 GMT",
                    "Content-Length": "146041",
                    "Date": "Thu, 06 Nov 2014 14:54:44 GMT",
                    "Content-Type": "text/html; charset=utf-8"
                },
                "cookies": [],
                "mimeType": "HTML",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}