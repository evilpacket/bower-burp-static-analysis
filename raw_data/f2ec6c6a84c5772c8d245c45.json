{
    "url": "http://localhost:9999/jacobthemyth/track.js/tracker.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cookie manipulation (DOM-based)",
    "issueType": 5245696,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based cookie manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the value of a cookie in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will set an arbitrary value in the user's cookie.<br><br>The potential impact of the vulnerability depends on the role that the cookie plays within the application. If the cookie is used to control the behavior that results from certain user actions (for example, a 'production' versus 'demo' mode setting), then the attacker may be able to cause the user to perform unintended actions by manipulating the cookie's value. If the cookie is used to track the user's session, then the attacker may be able to perform a session fixation attack, in which they set the cookie's value to a valid token that they have obtained from the application, and then hijack the session during the victim user's subsequent interaction with the application.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cookie manipulation vulnerabilities is not to dynamically write to cookies using data that originated from any untrusted source. This behavior should never be implemented for cookies that have any role in controlling privileged actions or user sessions within the application.",
    "issueDetail": "The application may be vulnerable to DOM-based cookie manipulation. Data is read from <b>document.cookie</b> and written to <b>document.cookie</b> via the following statements:<ul><li>var a=document.cookie.replace(/(?:(?:^|.*;\\s*)TJS\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");</li><li>a||(a=k.uuid(),document.cookie=\"TJS=\"+a+\"; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/\");</li></ul>Because the data originates from a cookie, the application's behavior is not trivial to exploit in an attack against another user. Typically, you will need to find a means of setting an arbitrary cookie value in the victim's browser in order to exploit the vulnerability. Applications often contain \"cookie-forcing\" conditions which make this possible, and such a condition in any related domain or subdomain can potentially be used for this purpose. Nonetheless, this limitation somewhat mitigates the impact of the vulnerability. ",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/jacobthemyth/track.js/tracker.js",
                "path": "/jacobthemyth/track.js/tracker.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9qYWNvYnRoZW15dGgvdHJhY2suanMvdHJhY2tlci5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sat, 08 Nov 2014 23:18:57 GMT",
                    "Content-Length": "11686",
                    "Date": "Sat, 08 Nov 2014 23:18:57 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}