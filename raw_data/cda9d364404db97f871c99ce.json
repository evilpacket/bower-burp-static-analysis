{
    "url": "http://localhost:9999/mixxen/cesiumjs/Build/Cesium/Cesium.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>window.location.href</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>e(t)||(t=document.createElement(\"a\")),t.href=window.location.href;</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/mixxen/cesiumjs/Build/Cesium/Cesium.js",
                "path": "/mixxen/cesiumjs/Build/Cesium/Cesium.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9taXh4ZW4vY2VzaXVtanMvQnVpbGQvQ2VzaXVtL0Nlc2l1bS5qcyBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "HTTP/1.1 200 OK
Content-Length: 1413655
Accept-Ranges: bytes
Content-Type: application/javascript
Date: Thu, 06 Nov 2014 14:54:37 GMT
Last-Modified: Thu, 06 Nov 2014 14:54:24 GMT

/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2014 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
/**
 * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

/**
  @license
  when.js - https://github.com/cujojs/when

  MIT License (c) copyright B Cavalier & J Hann

 * A lightweight CommonJS Promises/A and when() implementation
 * when is part of the cujo.js family of libraries (http://cujojs.com/)
 *
 * Licensed under the MIT License at:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @version 1.7.1
 */

/**
@license
mersenne-twister.js - https://gist.github.com/banksean/300494

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 *
 * Grauw URI utilities
 *
 * See: http://hg.grauw.nl/grauw-lib/file/tip/src/uri.js
 *
 * @author Laurens Holst (http://www.grauw.nl/)
 *
 *   Copyright 2012 Laurens Holst
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

// Copyright 2012 Google Inc., Apache 2.0 license.

/**
@license
sprintf.js from the php.js project - https://github.com/kvz/phpjs
Directly from https://github.com/kvz/phpjs/blob/master/functions/strings/sprintf.js

php.js is copyright 2012 Kevin van Zonneveld.

Portions copyright Brett Zamir (http://brett-zamir.me), Kevin van Zonneveld
(http://kevin.vanzonneveld.net), Onno Marsman, Theriault, Michael White
(http://getsprink.com), Waldo Malqui Silva, Paulo Freitas, Jack, Jonas
Raoni Soares Silva (http://www.jsfromhell.com), Philip Peterson, Legaev
Andrey, Ates Goral (http://magnetiq.com), Alex, Ratheous, Martijn Wieringa,
Rafa? Kukawski (http://blog.kukawski.pl), lmeyrick
(https://sourceforge.net/projects/bcmath-js/), Nate, Philippe Baumann,
Enrique Gonzalez, Webtoolkit.info (http://www.webtoolkit.info/), Carlos R.
L. Rodrigues (http://www.jsfromhell.com), Ash Searle
(http://hexmen.com/blog/), Jani Hartikainen, travc, Ole Vrijenhoek,
Erkekjetter, Michael Grier, Rafa? Kukawski (http://kukawski.pl), Johnny
Mast (http://www.phpvrouwen.nl), T.Wild, d3x,
http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript,
Rafa? Kukawski (http://blog.kukawski.pl/), stag019, pilus, WebDevHobo
(http://webdevhobo.blogspot.com/), marrtins, GeekFG
(http://geekfg.blogspot.com), Andrea Giammarchi
(http://webreflection.blogspot.com), Arpad Ray (mailto:arpad@php.net),
gorthaur, Paul Smith, Tim de Koning (http://www.kingsquare.nl), Joris, Oleg
Eremeev, Steve Hilder, majak, gettimeofday, KELAN, Josh Fraser
(http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/),
Marc Palau, Martin
(http://www.erlenwiese.de/), Breaking Par Consulting Inc
(http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7),
Chris, Mirek Slugen, saulius, Alfonso Jimenez
(http://www.alfonsojimenez.com), Diplom@t (http://difane.com/), felix,
Mailfaker (http://www.weedem.fr/), Tyler Akins (http://rumkin.com), Caio
Ariede (http://caioariede.com), Robin, Kankrelune
(http://www.webfaktory.info/), Karol Kowalski, Imgen Tata
(http://www.myipdf.com/), mdsjack (http://www.mdsjack.bo.it), Dreamer,
Felix Geisendoerfer (http://www.debuggable.com/felix), Lars Fischer, AJ,
David, Aman Gupta, Michael White, Public Domain
(http://www.json.org/json2.js), Steven Levithan
(http://blog.stevenlevithan.com), Sakimori, Pellentesque Malesuada,
Thunder.m, Dj (http://phpjs.org/functions/htmlentities:425#comment_134018),
Steve Clay, David James, Francois, class_exists, nobbler, T. Wild, Itsacon
(http://www.itsacon.net/), date, Ole Vrijenhoek (http://www.nervous.nl/),
Fox, Raphael (Ao RUDLER), Marco, noname, Mateusz "loonquawl" Zalega, Frank
Forte, Arno, ger, mktime, john (http://www.jd-tech.net), Nick Kolosov
(http://sammy.ru), marc andreu, Scott Cariss, Douglas Crockford
(http://javascript.crockford.com), madipta, Slawomir Kaniecki,
ReverseSyntax, Nathan, Alex Wilson, kenneth, Bayron Guevara, Adam Wallner
(http://web2.bitbaro.hu/), paulo kuong, jmweb, Lincoln Ramsay, djmix,
Pyerre, Jon Hohle, Thiago Mata (http://thiagomata.blog.com), lmeyrick
(https://sourceforge.net/projects/bcmath-js/this.), Linuxworld, duncan,
Gilbert, Sanjoy Roy, Shingo, sankai, Oskar Larsson H?gfeldt
(http://oskar-lh.name/), Denny Wardhana, 0m3r, Everlasto, Subhasis Deb,
josh, jd, Pier Paolo Ramon (http://www.mastersoup.com/), P, merabi, Soren
Hansen, Eugene Bulkin (http://doubleaw.com/), Der Simon
(http://innerdom.sourceforge.net/), echo is bad, Ozh, XoraX
(http://www.xorax.info), EdorFaus, JB, J A R, Marc Jansen, Francesco, LH,
Stoyan Kyosev (http://www.svest.org/), nord_ua, omid
(http://phpjs.org/functions/380:380#comment_137122), Brad Touesnard, MeEtc
(http://yass.meetcweb.com), Peter-Paul Koch
(http://www.quirksmode.org/js/beat.html), Olivier Louvignes
(http://mg-crea.com/), T0bsn, Tim Wiel, Bryan Elliott, Jalal Berrami,
Martin, JT, David Randall, Thomas Beaucourt (http://www.webapp.fr), taith,
vlado houba, Pierre-Luc Paour, Kristof Coomans (SCK-CEN Belgian Nucleair
Research Centre), Martin Pool, Kirk Strobeck, Rick Waldron, Brant Messenger
(http://www.brantmessenger.com/), Devan Penner-Woelk, Saulo Vallory, Wagner
B. Soares, Artur Tchernychev, Valentina De Rosa, Jason Wong
(http://carrot.org/), Christoph, Daniel Esteban, strftime, Mick@el, rezna,
Simon Willison (http://simonwillison.net), Anton Ongson, Gabriel Paderni,
Marco van Oort, penutbutterjelly, Philipp Lenssen, Bjorn Roesbeke
(http://www.bjornroesbeke.be/), Bug?, Eric Nagel, Tomasz Wesolowski,
Evertjan Garretsen, Bobby Drake, Blues (http://tech.bluesmoon.info/), Luke
Godfrey, Pul, uestla, Alan C, Ulrich, Rafal Kukawski, Yves Sucaet,
sowberry, Norman "zEh" Fuchs, hitwork, Zahlii, johnrembo, Nick Callen,
Steven Levithan (stevenlevithan.com), ejsanders, Scott Baker, Brian Tafoya
(http://www.premasolutions.com/), Philippe Jausions
(http://pear.php.net/user/jausions), Aidan Lister
(http://aidanlister.com/), Rob, e-mike, HKM, ChaosNo1, metjay, strcasecmp,
strcmp, Taras Bogach, jpfle, Alexander Ermolaev
(http://snippets.dzone.com/user/AlexanderErmolaev), DxGx, kilops, Orlando,
dptr1988, Le Torbi, James (http://www.james-bell.co.uk/), Pedro Tainha
(http://www.pedrotainha.com), James, Arnout Kazemier
(http://www.3rd-Eden.com), Chris McMacken, gabriel paderni, Yannoo,
FGFEmperor, baris ozdil, Tod Gentille, Greg Frazier, jakes, 3D-GRAF, Allan
Jensen (http://www.winternet.no), Howard Yeend, Benjamin Lupton, davook,
daniel airton wermann (http://wermann.com.br), Atli T¨®r, Maximusya, Ryan
W Tenney (http://ryan.10e.us), Alexander M Beedie, fearphage
(http://http/my.opera.com/fearphage/), Nathan Sepulveda, Victor, Matteo,
Billy, stensi, Cord, Manish, T.J. Leahy, Riddler
(http://www.frontierwebdev.com/), Rafa? Kukawski, FremyCompany, Matt
Bradley, Tim de Koning, Luis Salazar (http://www.freaky-media.com/), Diogo
Resende, Rival, Andrej Pavlovic, Garagoth, Le Torbi
(http://www.letorbi.de/), Dino, Josep Sanz (http://www.ws3.es/), rem,
Russell Walker (http://www.nbill.co.uk/), Jamie Beck
(http://www.terabit.ca/), setcookie, Michael, YUI Library:
http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html, Blues at
http://hacks.bluesmoon.info/strftime/strftime.js, Ben
(http://benblume.co.uk/), DtTvB
(http://dt.in.th/2008-09-16.string-length-in-bytes.html), Andreas, William,
meo, incidence, Cagri Ekin, Amirouche, Amir Habibi
(http://www.residence-mixte.com/), Luke Smith (http://lucassmith.name),
Kheang Hok Chin (http://www.distantia.ca/), Jay Klehr, Lorenzo Pisani,
Tony, Yen-Wei Liu, Greenseed, mk.keck, Leslie Hoare, dude, booeyOH, Ben
Bryan

Licensed under the MIT (MIT-LICENSE.txt) license.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES
OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/

/**
@license
tween.js - https://github.com/sole/tween.js

Copyright (c) 2010-2012 Tween.js authors.

Easing equations Copyright (c) 2001 Robert Penner http://robertpenner.com/easing/

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/**
  @license
  fontmetrics.js - https://github.com/Pomax/fontmetrics.js

  Copyright (C) 2011 by Mike "Pomax" Kamermans

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
**/

/**
@license
topojson - https://github.com/mbostock/topojson

Copyright (c) 2012, Michael Bostock
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* The name Michael Bostock may not be used to endorse or promote products
  derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 * Copyright (c) 2011 NVIDIA Corporation. All rights reserved.
 *
 * TO  THE MAXIMUM  EXTENT PERMITTED  BY APPLICABLE  LAW, THIS SOFTWARE  IS PROVIDED
 * *AS IS*  AND NVIDIA AND  ITS SUPPLIERS DISCLAIM  ALL WARRANTIES,  EITHER  EXPRESS
 * OR IMPLIED, INCLUDING, BUT NOT LIMITED  TO, NONINFRINGEMENT,IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL  NVIDIA 
 * OR ITS SUPPLIERS BE  LIABLE  FOR  ANY  DIRECT, SPECIAL,  INCIDENTAL,  INDIRECT,  OR  
 * CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION,  DAMAGES FOR LOSS 
 * OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY 
 * OTHER PECUNIARY LOSS) ARISING OUT OF THE  USE OF OR INABILITY  TO USE THIS SOFTWARE, 
 * EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 */

/**
 * @license
 * Copyright (c) 2000-2005, Sean O'Neil (s_p_oneil@hotmail.com)
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * * Neither the name of the project nor the names of its contributors may be
 *   used to endorse or promote products derived from this software without
 *   specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Modifications made by Analytical Graphics, Inc.
 */

/**
 * @license
 * Knockout JavaScript library v3.1.0
 * (c) Steven Sanderson - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

/**
 * @license
 * Knockout ES5 plugin - https://github.com/SteveSanderson/knockout-es5
 * Copyright (c) Steve Sanderson
 * MIT license
 */

!function(){var e,t,r;!function(i){function n(e,t){return C.call(e,t)}function o(e,t){var r,i,n,o,a,s,l,u,c,h,d=t&&t.split("/"),m=_.map,p=m&&m["*"]||{};if(e&&"."===e.charAt(0))if(t){for(d=d.slice(0,d.length-1),e=d.concat(e.split("/")),u=0;u<e.length;u+=1)if(h=e[u],"."===h)e.splice(u,1),u-=1;else if(".."===h){if(1===u&&(".."===e[2]||".."===e[0]))break;u>0&&(e.splice(u-1,2),u-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((d||p)&&m){for(r=e.split("/"),u=r.length;u>0;u-=1){if(i=r.slice(0,u).join("/"),d)for(c=d.length;c>0;c-=1)if(n=m[d.slice(0,c).join("/")],n&&(n=n[i])){o=n,a=u;break}if(o)break;!s&&p&&p[i]&&(s=p[i],l=u)}!o&&s&&(o=s,a=l),o&&(r.splice(0,a,o),e=r.join("/"))}return e}function a(e,t){return function(){return m.apply(i,w.call(arguments,0).concat([e,t]))}}function s(e){return function(t){return o(t,e)}}function l(e){return function(t){v[e]=t}}function u(e){if(n(g,e)){var t=g[e];delete g[e],y[e]=!0,d.apply(i,t)}if(!n(v,e)&&!n(y,e))throw new Error("No "+e);return v[e]}function c(e){var t,r=e?e.indexOf("!"):-1;return r>-1&&(t=e.substring(0,r),e=e.substring(r+1,e.length)),[t,e]}function h(e){return function(){return _&&_.config&&_.config[e]||{}}}var d,m,p,f,v={},g={},_={},y={},C=Object.prototype.hasOwnProperty,w=[].slice;p=function(e,t){var r,i=c(e),n=i[0];return e=i[1],n&&(n=o(n,t),r=u(n)),n?e=r&&r.normalize?r.normalize(e,s(t)):o(e,t):(e=o(e,t),i=c(e),n=i[0],e=i[1],n&&(r=u(n))),{f:n?n+"!"+e:e,n:e,pr:n,p:r}},f={require:function(e){return a(e)},exports:function(e){var t=v[e];return"undefined"!=typeof t?t:v[e]={}},module:function(e){return{id:e,uri:"",exports:v[e],config:h(e)}}},d=function(e,t,r,o){var s,c,h,d,m,_,C=[];if(o=o||e,"function"==typeof r){for(t=!t.length&&r.length?["require","exports","module"]:t,m=0;m<t.length;m+=1)if(d=p(t[m],o),c=d.f,"require"===c)C[m]=f.require(e);else if("exports"===c)C[m]=f.exports(e),_=!0;else if("module"===c)s=C[m]=f.module(e);else if(n(v,c)||n(g,c)||n(y,c))C[m]=u(c);else{if(!d.p)throw new Error(e+" missing "+c);d.p.load(d.n,a(o,!0),l(c),{}),C[m]=v[c]}h=r.apply(v[e],C),e&&(s&&s.exports!==i&&s.exports!==v[e]?v[e]=s.exports:h===i&&_||(v[e]=h))}else e&&(v[e]=r)},e=t=m=function(e,t,r,n,o){return"string"==typeof e?f[e]?f[e](t):u(p(e,t).f):(e.splice||(_=e,t.splice?(e=t,t=r,r=null):e=i),t=t||function(){},"function"==typeof r&&(r=n,n=o),n?d(i,e,t,r):setTimeout(function(){d(i,e,t,r)},4),m)},m.config=function(e){return _=e,_.deps&&m(_.deps,_.callback),m},e._defined=v,r=function(e,t,r){t.splice||(r=t,t=[]),n(v,e)||n(g,e)||(g[e]=[e,t,r])},r.amd={jQuery:!0}}(),function(e){"use strict";e("ThirdParty/when",[],function(){function e(e,r,i,n){return t(e).then(r,i,n)}function t(e){var t,r;return e instanceof i?t=e:s(e)?(r=a(),e.then(function(e){r.resolve(e)},function(e){r.reject(e)},function(e){r.progress(e)}),t=r.promise):t=n(e),t}function r(t){return e(t,o)}function i(e){this.then=e}function n(e){var r=new i(function(r){try{return t(r?r(e):e)}catch(i){return o(i)}});return r}function o(e){var r=new i(function(r,i){try{return i?t(i(e)):o(e)}catch(n){return o(n)}});return r}function a(){function e(e,t,r){return d(e,t,r)}function r(e){return p(e)}function n(e){return p(o(e))}function s(e){return m(e)}var l,u,c,h,d,m,p;return u=new i(e),l={then:e,resolve:r,reject:n,progress:s,promise:u,resolver:{resolve:r,reject:n,progress:s}},c=[],h=[],d=function(e,t,r){var i,n;return i=a(),n="function"==typeof r?function(e){try{i.progress(r(e))}catch(t){i.progress(t)}}:function(e){i.progress(e)},c.push(function(r){r.then(e,t).then(i.resolve,i.reject,n)}),h.push(n),i.promise},m=function(e){return f(h,e),e},p=function(e){return e=t(e),d=e.then,p=t,m=g,f(c,e),h=c=w,e},l}function s(e){return e&&"function"==typeof e.then}function l(t,r,i,n,o){return v(2,arguments),e(t,function(t){function s(e){f(e)}function l(e){p(e)}var u,c,h,d,m,p,f,v,_,y;if(_=t.length>>>0,u=Math.max(0,Math.min(r,_)),h=[],c=_-u+1,d=[],m=a(),u)for(v=m.progress,f=function(e){d.push(e),--c||(p=f=g,m.reject(d))},p=function(e){h.push(e),--u||(p=f=g,m.resolve(h))},y=0;_>y;++y)y in t&&e(t[y],l,s,v);else m.resolve(h);return m.then(i,n,o)})}function u(e,t,r,i){function n(e){return t?t(e[0]):e[0]}return l(e,1,n,r,i)}function c(e,t,r,i){return v(1,arguments),d(e,_).then(t,r,i)}function h(){return d(arguments,_)}function d(t,r){return e(t,function(t){var i,n,o,s,l,u;if(o=n=t.length>>>0,i=[],u=a(),o)for(s=function(t,n){e(t,r).then(function(e){i[n]=e,--o||u.resolve(i)},u.reject)},l=0;n>l;l++)l in t?s(t[l],l):--o;else u.resolve(i);return u.promise})}function m(t,r){var i=C.call(arguments,1);return e(t,function(t){var n;return n=t.length,i[0]=function(t,i,o){return e(t,function(t){return e(i,function(e){return r(t,e,o,n)})})},y.apply(t,i)})}function p(t,r,i){var n=arguments.length>2;return e(t,function(e){return e=n?i:e,r.resolve(e),e},function(e){return r.reject(e),o(e)},r.progress)}function f(e,t){for(var r,i=0;r=e[i++];)r(t)}function v(e,t){for(var r,i=t.length;i>e;)if(r=t[--i],null!=r&&"function"!=typeof r)throw new Error("arg "+i+" must be a function")}function g(){}function _(e){return e}var y,C,w;return e.defer=a,e.resolve=t,e.reject=r,e.join=h,e.all=c,e.map=d,e.reduce=m,e.any=u,e.some=l,e.chain=p,e.isPromise=s,i.prototype={always:function(e,t){return this.then(e,e,t)},otherwise:function(e){return this.then(w,e)},yield:function(e){return this.then(function(){return e})},spread:function(e){return this.then(function(t){return c(t,function(t){return e.apply(w,t)})})}},C=[].slice,y=[].reduce||function(e){var t,r,i,n,o;if(o=0,t=Object(this),n=t.length>>>0,r=arguments,r.length<=1)for(;;){if(o in t){i=t[o++];break}if(++o>=n)throw new TypeError}else i=r[1];for(;n>o;++o)o in t&&(i=e(i,t[o],o,t));return i},e})}("function"==typeof r&&r.amd?r:function(e){"object"==typeof exports?module.exports=e():this.when=e()}),r("Core/defined",[],function(){"use strict";var e=function(e){return void 0!==e};return e}),r("Core/defineProperties",["./defined"],function(e){"use strict";var t=function(){try{return"x"in Object.defineProperty({},"x",{})}catch(e){return!1}}(),r=Object.defineProperties;return t&&e(r)||(r=function(e){return e}),r}),r("Core/DeveloperError",["./defined"],function(e){"use strict";var t=function(e){this.name="DeveloperError",this.message=e;var t;try{throw new Error}catch(r){t=r.stack}this.stack=t};return t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t.throwInstantiationError=function(){throw new t("This function defines an interface and should not be called directly.")},t}),r("Core/Credit",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i){var n=e(i),o=e(r),a=e(t);a||o||(t=i),this._text=t,this._imageUrl=r,this._link=i,this._hasLink=n,this._hasImage=o};return t(r.prototype,{text:{get:function(){return this._text}},imageUrl:{get:function(){return this._imageUrl}},link:{get:function(){return this._link}}}),r.prototype.hasImage=function(){return this._hasImage},r.prototype.hasLink=function(){return this._hasLink},r.equals=function(t,r){var i=!e(t),n=!e(r);return t===r||(i&&n||!i&&!n)&&t._text===r._text&&t._imageUrl===r._imageUrl&&t._link===r._link},r.prototype.equals=function(e){return r.equals(this,e)},r}),r("Core/freezeObject",["./defined"],function(e){"use strict";var t=Object.freeze;return e(t)||(t=function(e){return e}),t}),r("Core/defaultValue",["./freezeObject"],function(e){"use strict";var t=function(e,t){return void 0!==e?e:t};return t.EMPTY_OBJECT=e({}),t}),r("ThirdParty/mersenne-twister",[],function(){var e=function(e){void 0==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};return e.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++){var e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0}},e.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var r;for(this.mti==this.N+1&&this.init_genrand(5489),r=0;r<this.N-this.M;r++)e=this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK,this.mt[r]=this.mt[r+this.M]^e>>>1^t[1&e];for(;r<this.N-1;r++)e=this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK,this.mt[r]=this.mt[r+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=2636928640&e<<7,e^=4022730752&e<<15,e^=e>>>18,e>>>0},e.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},e}),r("Core/Math",["../ThirdParty/mersenne-twister","./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r={};r.EPSILON1=.1,r.EPSILON2=.01,r.EPSILON3=.001,r.EPSILON4=1e-4,r.EPSILON5=1e-5,r.EPSILON6=1e-6,r.EPSILON7=1e-7,r.EPSILON8=1e-8,r.EPSILON9=1e-9,r.EPSILON10=1e-10,r.EPSILON11=1e-11,r.EPSILON12=1e-12,r.EPSILON13=1e-13,r.EPSILON14=1e-14,r.EPSILON15=1e-15,r.EPSILON16=1e-16,r.EPSILON17=1e-17,r.EPSILON18=1e-18,r.EPSILON19=1e-19,r.EPSILON20=1e-20,r.GRAVITATIONALPARAMETER=3986004418e5,r.SOLAR_RADIUS=6955e5,r.LUNAR_RADIUS=1737400,r.SIXTY_FOUR_KILOBYTES=65536,r.sign=function(e){return e>0?1:0>e?-1:0},r.signNotZero=function(e){return 0>e?-1:1},r.toSNorm=function(e){return Math.round(255*(.5*r.clamp(e,-1,1)+.5))},r.fromSNorm=function(e){return 2*(r.clamp(e,0,255)/255)-1},r.sinh=function(e){var t=Math.pow(Math.E,e),r=Math.pow(Math.E,-1*e);return.5*(t-r)},r.cosh=function(e){var t=Math.pow(Math.E,e),r=Math.pow(Math.E,-1*e);return.5*(t+r)},r.lerp=function(e,t,r){return(1-r)*e+r*t},r.PI=Math.PI,r.ONE_OVER_PI=1/Math.PI,r.PI_OVER_TWO=.5*Math.PI,r.PI_OVER_THREE=Math.PI/3,r.PI_OVER_FOUR=Math.PI/4,r.PI_OVER_SIX=Math.PI/6,r.THREE_PI_OVER_TWO=.5*3*Math.PI,r.TWO_PI=2*Math.PI,r.ONE_OVER_TWO_PI=1/(2*Math.PI),r.RADIANS_PER_DEGREE=Math.PI/180,r.DEGREES_PER_RADIAN=180/Math.PI,r.RADIANS_PER_ARCSECOND=r.RADIANS_PER_DEGREE/3600,r.toRadians=function(e){return e*r.RADIANS_PER_DEGREE},r.toDegrees=function(e){return e*r.DEGREES_PER_RADIAN},r.convertLongitudeRange=function(e){var t=r.TWO_PI,i=e-Math.floor(e/t)*t;return i<-Math.PI?i+t:i>=Math.PI?i-t:i},r.negativePiToPi=function(e){for(var t=r.EPSILON10,i=r.PI,n=r.TWO_PI;-(i+t)>e;)e+=n;if(-i>e)return-i;for(;e>i+t;)e-=n;return e>i?i:e},r.zeroToTwoPi=function(e){var t=e%r.TWO_PI;return 0>t?(t+r.TWO_PI)%r.TWO_PI:t},r.equalsEpsilon=function(e,r,i){return i=t(i,0),Math.abs(e-r)<=i};var i=[1];r.factorial=function(e){var t=i.length;if(e>=t)for(var r=i[t-1],n=t;e>=n;n++)i.push(r*n);return i[e]},r.incrementWrap=function(e,r,i){return i=t(i,0),++e,e>r&&(e=i),e},r.isPowerOfTwo=function(e){return 0!==e&&0===(e&e-1)},r.nextPowerOfTwo=function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e,e},r.clamp=function(e,t,r){return t>e?t:e>r?r:e};var n=new e;return r.setRandomNumberSeed=function(t){n=new e(t)},r.nextRandomNumber=function(){return n.random()},r.acosClamped=function(e){return Math.acos(r.clamp(e,-1,1))},r.asinClamped=function(e){return Math.asin(r.clamp(e,-1,1))},r}),r("Core/Cartesian3",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r,i){this.x=e(t,0),this.y=e(r,0),this.z=e(i,0)};o.fromSpherical=function(r,i){t(i)||(i=new o);var n=r.clock,a=r.cone,s=e(r.magnitude,1),l=s*Math.sin(a);return i.x=l*Math.cos(n),i.y=l*Math.sin(n),i.z=s*Math.cos(a),i},o.fromElements=function(e,r,i,n){return t(n)?(n.x=e,n.y=r,n.z=i,n):new o(e,r,i)},o.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r.z=e.z,r):new o(e.x,e.y,e.z):void 0},o.fromCartesian4=o.clone,o.packedLength=3,o.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i++]=t.y,r[i]=t.z},o.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new o),n.x=r[i++],n.y=r[i++],n.z=r[i],n},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y,e.z)},o.minimumComponent=function(e){return Math.min(e.x,e.y,e.z)},o.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r.z=Math.min(e.z,t.z),r},o.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r.z=Math.max(e.z,t.z),r},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var a=new o;o.distance=function(e,t){return o.subtract(e,t,a),o.magnitude(a)},o.normalize=function(e,t){var r=o.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t.z=e.z/r,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},o.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r},o.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r},o.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r},o.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r},o.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t};var s=new o;o.lerp=function(e,t,r,i){return o.multiplyByScalar(t,r,s),i=o.multiplyByScalar(e,1-r,i),o.add(s,i,i)};var l=new o,u=new o;o.angleBetween=function(e,t){o.normalize(e,l),o.normalize(t,u);var r=o.dot(l,u),i=o.magnitude(o.cross(l,u,l));return Math.atan2(i,r)};var c=new o;o.mostOrthogonalAxis=function(e,t){var r=o.normalize(e,c);return o.abs(r,r),t=r.x<=r.y?r.x<=r.z?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Z,t):r.y<=r.z?o.clone(o.UNIT_Y,t):o.clone(o.UNIT_Z,t)},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y&&e.z===r.z},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i&&Math.abs(e.z-r.z)<=i},o.cross=function(e,t,r){var i=e.x,n=e.y,o=e.z,a=t.x,s=t.y,l=t.z,u=n*l-o*s,c=o*a-i*l,h=i*s-n*a;return r.x=u,r.y=c,r.z=h,r},o.fromDegrees=function(e,t,r,i,a){var s=n.toRadians(e),l=n.toRadians(t);return o.fromRadians(s,l,r,i,a)};var h=new o,d=new o,m=new o(40680631590769,40680631590769,40408299984661.445);return o.fromRadians=function(r,i,n,a,s){n=e(n,0);var l=t(a)?a.radiiSquared:m,u=Math.cos(i);h.x=u*Math.cos(r),h.y=u*Math.sin(r),h.z=Math.sin(i),h=o.normalize(h,h),o.multiplyComponents(l,h,d);var c=Math.sqrt(o.dot(h,d));return d=o.divideByScalar(d,c,d),h=o.multiplyByScalar(h,n,h),t(s)||(s=new o),o.add(d,h,s)},o.fromDegreesArray=function(e,t,r){for(var i=new Array(e.length),a=0;a<e.length;a++)i[a]=n.toRadians(e[a]);return o.fromRadiansArray(i,t,r)},o.fromRadiansArray=function(e,r,i){var n=e.length;t(i)?i.length=n/2:i=new Array(n/2);for(var a=0;n>a;a+=2){var s=e[a],l=e[a+1];i[a/2]=o.fromRadians(s,l,0,r,i[a/2])}return i},o.fromDegreesArrayHeights=function(e,t,r){for(var i=new Array(e.length),a=0;a<e.length;a+=3)i[a]=n.toRadians(e[a]),i[a+1]=n.toRadians(e[a+1]),i[a+2]=e[a+2];return o.fromRadiansArrayHeights(i,t,r)},o.fromRadiansArrayHeights=function(e,r,i){var n=e.length;t(i)?i.length=n/3:i=new Array(n/3);for(var a=0;n>a;a+=3){var s=e[a],l=e[a+1],u=e[a+2];i[a/3]=o.fromRadians(s,l,u,r,i[a/3])}return i},o.ZERO=i(new o(0,0,0)),o.UNIT_X=i(new o(1,0,0)),o.UNIT_Y=i(new o(0,1,0)),o.UNIT_Z=i(new o(0,0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},o}),r("Core/Cartographic",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r,i){this.longitude=e(t,0),this.latitude=e(r,0),this.height=e(i,0)};return o.fromRadians=function(r,i,n,a){return n=e(n,0),t(a)?(a.longitude=r,a.latitude=i,a.height=n,a):new o(r,i,n)},o.fromDegrees=function(e,t,r,i){return e=n.toRadians(e),t=n.toRadians(t),o.fromRadians(e,t,r,i)},o.clone=function(e,r){return t(e)?t(r)?(r.longitude=e.longitude,r.latitude=e.latitude,r.height=e.height,r):new o(e.longitude,e.latitude,e.height):void 0},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.longitude===r.longitude&&e.latitude===r.latitude&&e.height===r.height},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.longitude-r.longitude)<=i&&Math.abs(e.latitude-r.latitude)<=i&&Math.abs(e.height-r.height)<=i},o.ZERO=i(new o(0,0,0)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.longitude+", "+this.latitude+", "+this.height+")"},o}),r("Core/Ellipsoid",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n,o,a,s){"use strict";function l(t,i,n,o){i=r(i,0),n=r(n,0),o=r(o,0),t._radii=new e(i,n,o),t._radiiSquared=new e(i*i,n*n,o*o),t._radiiToTheFourth=new e(i*i*i*i,n*n*n*n,o*o*o*o),t._oneOverRadii=new e(0===i?0:1/i,0===n?0:1/n,0===o?0:1/o),t._oneOverRadiiSquared=new e(0===i?0:1/(i*i),0===n?0:1/(n*n),0===o?0:1/(o*o)),t._minimumRadius=Math.min(i,n,o),t._maximumRadius=Math.max(i,n,o),t._centerToleranceSquared=s.EPSILON1}var u=function(e,t,r){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,l(this,e,t,r)};n(u.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),u.clone=function(t,r){if(!i(t))return void 0;var n=t._radii;return i(r)?(e.clone(n,r._radii),e.clone(t._radiiSquared,r._radiiSquared),e.clone(t._radiiToTheFourth,r._radiiToTheFourth),e.clone(t._oneOverRadii,r._oneOverRadii),e.clone(t._oneOverRadiiSquared,r._oneOverRadiiSquared),r._minimumRadius=t._minimumRadius,r._maximumRadius=t._maximumRadius,r._centerToleranceSquared=t._centerToleranceSquared,r):new u(n.x,n.y,n.z)},u.fromCartesian3=function(e,t){return i(t)||(t=new u),i(e)?(l(t,e.x,e.y,e.z),t):t},u.WGS84=a(new u(6378137,6378137,6356752.314245179)),u.UNIT_SPHERE=a(new u(1,1,1)),u.MOON=a(new u(s.LUNAR_RADIUS,s.LUNAR_RADIUS,s.LUNAR_RADIUS)),u.prototype.clone=function(e){return u.clone(this,e)},u.prototype.geocentricSurfaceNormal=e.normalize,u.prototype.geodeticSurfaceNormalCartographic=function(t,r){var n=t.longitude,o=t.latitude,a=Math.cos(o),s=a*Math.cos(n),l=a*Math.sin(n),u=Math.sin(o);return i(r)||(r=new e),r.x=s,r.y=l,r.z=u,e.normalize(r,r)},u.prototype.geodeticSurfaceNormal=function(t,r){return i(r)||(r=new e),r=e.multiplyComponents(t,this._oneOverRadiiSquared,r),e.normalize(r,r)};var c=new e,h=new e;u.prototype.cartographicToCartesian=function(t,r){var n=c,o=h;this.geodeticSurfaceNormalCartographic(t,n),e.multiplyComponents(this._radiiSquared,n,o);var a=Math.sqrt(e.dot(n,o));return e.divideByScalar(o,a,o),e.multiplyByScalar(n,t.height,n),i(r)||(r=new e),e.add(o,n,r)},u.prototype.cartographicArrayToCartesianArray=function(e,t){var r=e.length;i(t)?t.length=r:t=new Array(r);for(var n=0;r>n;n++)t[n]=this.cartographicToCartesian(e[n],t[n]);return t};var d=new e,m=new e,p=new e;u.prototype.cartesianToCartographic=function(r,n){var o=this.scaleToGeodeticSurface(r,m);if(!i(o))return void 0;var a=this.geodeticSurfaceNormal(o,d),l=e.subtract(r,o,p),u=Math.atan2(a.y,a.x),c=Math.asin(a.z),h=s.sign(e.dot(l,r))*e.magnitude(l);return i(n)?(n.longitude=u,n.latitude=c,n.height=h,n):new t(u,c,h)},u.prototype.cartesianArrayToCartographicArray=function(e,t){var r=e.length;i(t)?t.length=r:t=new Array(r);for(var n=0;r>n;++n)t[n]=this.cartesianToCartographic(e[n],t[n]);return t};var f=new e,v=new e;return u.prototype.scaleToGeodeticSurface=function(t,r){var n=t.x,o=t.y,a=t.z,l=this._oneOverRadii,u=l.x,c=l.y,h=l.z,d=n*n*u*u,m=o*o*c*c,p=a*a*h*h,g=d+m+p,_=Math.sqrt(1/g),y=e.multiplyByScalar(t,_,f);if(g<this._centerToleranceSquared)return isFinite(_)?e.clone(y,r):void 0;var C=this._oneOverRadiiSquared,w=C.x,S=C.y,E=C.z,b=v;b.x=2*y.x*w,b.y=2*y.y*S,b.z=2*y.z*E;var T,x,P,A,M,D,I,R,O,L,N,B=(1-_)*e.magnitude(t)/(.5*e.magnitude(b)),F=0;do{B-=F,P=1/(1+B*w),A=1/(1+B*S),M=1/(1+B*E),D=P*P,I=A*A,R=M*M,O=D*P,L=I*A,N=R*M,T=d*D+m*I+p*R-1,x=d*O*w+m*L*S+p*N*E;var z=-2*x;F=T/z}while(Math.abs(T)>s.EPSILON12);return i(r)?(r.x=n*P,r.y=o*A,r.z=a*M,r):new e(n*P,o*A,a*M)},u.prototype.scaleToGeocentricSurface=function(t,r){i(r)||(r=new e);var n=t.x,o=t.y,a=t.z,s=this._oneOverRadiiSquared,l=1/Math.sqrt(n*n*s.x+o*o*s.y+a*a*s.z);return e.multiplyByScalar(t,l,r)},u.prototype.transformPositionToScaledSpace=function(t,r){return i(r)||(r=new e),e.multiplyComponents(t,this._oneOverRadii,r)},u.prototype.transformPositionFromScaledSpace=function(t,r){return i(r)||(r=new e),e.multiplyComponents(t,this._radii,r)},u.prototype.equals=function(t){return this===t||i(t)&&e.equals(this._radii,t._radii)},u.prototype.toString=function(){return this._radii.toString()},u}),r("Core/Event",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){this._listeners=[],this._scopes=[],this._toRemove=[],this._insideRaiseEvent=!1};return t(r.prototype,{numberOfListeners:{get:function(){return this._listeners.length-this._toRemove.length}}}),r.prototype.addEventListener=function(e,t){this._listeners.push(e),this._scopes.push(t);var r=this;return function(){r.removeEventListener(e,t)}},r.prototype.removeEventListener=function(e,t){for(var r=this._listeners,i=this._scopes,n=-1,o=0;o<r.length;o++)if(r[o]===e&&i[o]===t){n=o;break}return-1!==n?(this._insideRaiseEvent?(this._toRemove.push(n),r[n]=void 0,i[n]=void 0):(r.splice(n,1),i.splice(n,1)),!0):!1},r.prototype.raiseEvent=function(){this._insideRaiseEvent=!0;var t,r=this._listeners,i=this._scopes,n=r.length;for(t=0;n>t;t++){var o=r[t];e(o)&&r[t].apply(i[t],arguments)}var a=this._toRemove;for(n=a.length,t=0;n>t;t++){var s=a[t];r.splice(s,1),i.splice(s,1)}a.length=0,this._insideRaiseEvent=!1},r}),r("Core/Cartesian2",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r){this.x=e(t,0),this.y=e(r,0)};o.fromElements=function(e,r,i){return t(i)?(i.x=e,i.y=r,i):new o(e,r)},o.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r):new o(e.x,e.y):void 0},o.fromCartesian3=o.clone,o.fromCartesian4=o.clone,o.packedLength=2,o.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i]=t.y},o.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new o),n.x=r[i++],n.y=r[i],n},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y)},o.minimumComponent=function(e){return Math.min(e.x,e.y)},o.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r},o.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var a=new o;o.distance=function(e,t){return o.subtract(e,t,a),o.magnitude(a)},o.normalize=function(e,t){var r=o.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y},o.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r},o.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r},o.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r},o.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r},o.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t};var s=new o;o.lerp=function(e,t,r,i){return o.multiplyByScalar(t,r,s),i=o.multiplyByScalar(e,1-r,i),o.add(s,i,i)};var l=new o,u=new o;o.angleBetween=function(e,t){return o.normalize(e,l),o.normalize(t,u),n.acosClamped(o.dot(l,u))};var c=new o;return o.mostOrthogonalAxis=function(e,t){var r=o.normalize(e,c);return o.abs(r,r),t=r.x<=r.y?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Y,t)},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i},o.ZERO=i(new o(0,0)),o.UNIT_X=i(new o(1,0)),o.UNIT_Y=i(new o(0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.x+", "+this.y+")"},o}),r("Core/GeographicProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){this._ellipsoid=r(e,a.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis};return n(s.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),s.prototype.project=function(t,r){var n=this._semimajorAxis,o=t.longitude*n,a=t.latitude*n,s=t.height;return i(r)?(r.x=o,r.y=a,r.z=s,r):new e(o,a,s)},s.prototype.unproject=function(e,r){var n=this._oneOverSemimajorAxis,o=e.x*n,a=e.y*n,s=e.z;return i(r)?(r.longitude=o,r.latitude=a,r.height=s,r):new t(o,a,s)},s}),r("Core/Rectangle",["./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./freezeObject","./Math"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,r,i,n){this.west=t(e,0),this.south=t(r,0),this.east=t(i,0),this.north=t(n,0)};s.fromDegrees=function(e,i,n,o,l){return e=a.toRadians(t(e,0)),i=a.toRadians(t(i,0)),n=a.toRadians(t(n,0)),o=a.toRadians(t(o,0)),r(l)?(l.west=e,l.south=i,l.east=n,l.north=o,l):new s(e,i,n,o)},s.fromCartographicArray=function(e,t){for(var i=Number.MAX_VALUE,n=-Number.MAX_VALUE,o=Number.MAX_VALUE,a=-Number.MAX_VALUE,l=0,u=e.length;u>l;l++){var c=e[l];i=Math.min(i,c.longitude),n=Math.max(n,c.longitude),o=Math.min(o,c.latitude),a=Math.max(a,c.latitude)}return r(t)?(t.west=i,t.south=o,t.east=n,t.north=a,t):new s(i,o,n,a)},s.packedLength=4,s.pack=function(e,r,i){i=t(i,0),r[i++]=e.west,r[i++]=e.south,r[i++]=e.east,r[i]=e.north},s.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new s),n.west=e[i++],n.south=e[i++],n.east=e[i++],n.north=e[i],n},s.clone=function(e,t){return r(e)?r(t)?(t.west=e.west,t.south=e.south,t.east=e.east,t.north=e.north,t):new s(e.west,e.south,e.east,e.north):void 0},s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.equals=function(e,t){return e===t||r(e)&&r(t)&&e.west===t.west&&e.south===t.south&&e.east===t.east&&e.north===t.north},s.prototype.equalsEpsilon=function(e,t){return r(e)&&Math.abs(this.west-e.west)<=t&&Math.abs(this.south-e.south)<=t&&Math.abs(this.east-e.east)<=t&&Math.abs(this.north-e.north)<=t},s.validate=function(){},s.southwest=function(t,i){return r(i)?(i.longitude=t.west,i.latitude=t.south,i.height=0,i):new e(t.west,t.south)},s.northwest=function(t,i){return r(i)?(i.longitude=t.west,i.latitude=t.north,i.height=0,i):new e(t.west,t.north)},s.northeast=function(t,i){return r(i)?(i.longitude=t.east,i.latitude=t.north,i.height=0,i):new e(t.east,t.north)},s.southeast=function(t,i){return r(i)?(i.longitude=t.east,i.latitude=t.south,i.height=0,i):new e(t.east,t.south)},s.center=function(t,i){var n=t.east,o=t.west,s=.5*(o+n);return o>n&&(s=a.negativePiToPi(s+a.PI)),r(i)?(i.longitude=s,i.latitude=.5*(t.south+t.north),i.height=0,i):new e(s,.5*(t.south+t.north))},s.intersectWith=function(e,t,i){var n=Math.max(e.west,t.west),o=Math.max(e.south,t.south),a=Math.min(e.east,t.east),l=Math.min(e.north,t.north);return r(i)?(i.west=n,i.south=o,i.east=a,i.north=l,i):new s(n,o,a,l)},s.contains=function(e,t){return t.longitude>=e.west&&t.longitude<=e.east&&t.latitude>=e.south&&t.latitude<=e.north},s.isEmpty=function(e){return e.west>=e.east||e.south>=e.north};var l=new e;return s.subsample=function(e,i,o,s){i=t(i,n.WGS84),o=t(o,0),r(s)||(s=[]);var u=0,c=e.north,h=e.south,d=e.east,m=e.west,p=l;p.height=o,p.longitude=m,p.latitude=c,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=d,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.latitude=h,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=m,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.latitude=0>c?c:h>0?h:0;for(var f=1;8>f;++f){var v=-Math.PI+f*a.PI_OVER_TWO;v>m&&d>v&&(p.longitude=v,s[u]=i.cartographicToCartesian(p,s[u]),u++)}return 0===p.latitude&&(p.longitude=m,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=d,s[u]=i.cartographicToCartesian(p,s[u]),u++),s.length=u,s},s.MAX_VALUE=o(new s(-Math.PI,-a.PI_OVER_TWO,Math.PI,a.PI_OVER_TWO)),s}),r("Core/GeographicTilingScheme",["./Cartesian2","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./GeographicProjection","./Math","./Rectangle"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(e){e=t(e,{}),this._ellipsoid=t(e.ellipsoid,o.WGS84),this._rectangle=t(e.rectangle,l.MAX_VALUE),this._projection=new a(this._ellipsoid),this._numberOfLevelZeroTilesX=t(e.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=t(e.numberOfLevelZeroTilesY,1)};return i(u.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),u.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},u.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},u.prototype.rectangleToNativeRectangle=function(e,t){var i=s.toDegrees(e.west),n=s.toDegrees(e.south),o=s.toDegrees(e.east),a=s.toDegrees(e.north);return r(t)?(t.west=i,t.south=n,t.east=o,t.north=a,t):new l(i,n,o,a)},u.prototype.tileXYToNativeRectangle=function(e,t,r,i){var n=this.tileXYToRectangle(e,t,r,i);return n.west=s.toDegrees(n.west),n.south=s.toDegrees(n.south),n.east=s.toDegrees(n.east),n.north=s.toDegrees(n.north),n},u.prototype.tileXYToRectangle=function(e,t,i,n){var o=this._rectangle,a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),u=(o.east-o.west)/a,c=e*u+o.west,h=(e+1)*u+o.west,d=(o.north-o.south)/s,m=o.north-t*d,p=o.north-(t+1)*d;return r(n)||(n=new l(c,p,h,m)),n.west=c,n.south=p,n.east=h,n.north=m,n},u.prototype.positionToTileXY=function(t,i,n){var o=this._rectangle;if(t.latitude>o.north||t.latitude<o.south||t.longitude<o.west||t.longitude>o.east)return void 0;var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=(o.east-o.west)/a,u=(o.north-o.south)/s,c=0|(t.longitude-o.west)/l;c>=a&&(c=a-1);var h=0|(o.north-t.latitude)/u;return h>=s&&(h=s-1),r(n)?(n.x=c,n.y=h,n):new e(c,h)},u}),r("Core/getImagePixels",["./defined"],function(e){"use strict";var t={},r=function(r,i,n){e(i)||(i=r.width),e(n)||(n=r.height);var o=t[i];e(o)||(o={},t[i]=o);var a=o[n];if(!e(a)){var s=document.createElement("canvas");s.width=i,s.height=n,a=s.getContext("2d"),a.globalCompositeOperation="copy",o[n]=a}return a.drawImage(r,0,0,i,n),a.getImageData(0,0,i,n).data};return r}),r("Core/HeightmapTessellator",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./freezeObject","./Math"],function(e,t,r,i,n,o,a){"use strict";var s={};return s.DEFAULT_STRUCTURE=o({heightScale:1,heightOffset:0,elementsPerHeight:1,stride:1,elementMultiplier:256,isBigEndian:!1}),s.computeVertices=function(i){var o,l,u,c,h=Math.cos,d=Math.sin,m=Math.sqrt,p=Math.atan,f=Math.exp,v=a.PI_OVER_TWO,g=a.toRadians,_=i.vertices,y=i.heightmap,C=i.width,w=i.height,S=i.skirtHeight,E=t(i.isGeographic,!0),b=t(i.ellipsoid,n.WGS84),T=1/b.maximumRadius,x=i.nativeRectangle,P=i.rectangle;r(P)?(o=P.west,l=P.south,u=P.east,c=P.north):E?(o=g(x.west),l=g(x.south),u=g(x.east),c=g(x.north)):(o=x.west*T,l=v-2*p(f(-x.south*T)),u=x.east*T,c=v-2*p(f(-x.north*T)));
var A=t(i.relativeToCenter,e.ZERO),M=t(i.structure,s.DEFAULT_STRUCTURE),D=t(M.heightScale,s.DEFAULT_STRUCTURE.heightScale),I=t(M.heightOffset,s.DEFAULT_STRUCTURE.heightOffset),R=t(M.elementsPerHeight,s.DEFAULT_STRUCTURE.elementsPerHeight),O=t(M.stride,s.DEFAULT_STRUCTURE.stride),L=t(M.elementMultiplier,s.DEFAULT_STRUCTURE.elementMultiplier),N=t(M.isBigEndian,s.DEFAULT_STRUCTURE.isBigEndian),B=(x.east-x.west)/(C-1),F=(x.north-x.south)/(w-1),z=b.radiiSquared,V=z.x,k=z.y,U=z.z,W=0,G=65536,H=-65536,q=0,j=w,Y=0,X=C;S>0&&(--q,++j,--Y,++X);for(var Z=q;j>Z;++Z){var Q=Z;0>Q&&(Q=0),Q>=w&&(Q=w-1);var J=x.north-F*Q;J=E?g(J):v-2*p(f(-J*T));for(var K=h(J),$=d(J),et=U*$,tt=(J-l)/(c-l),rt=Y;X>rt;++rt){var it=rt;0>it&&(it=0),it>=C&&(it=C-1);var nt=x.west+B*it;E?nt=g(nt):nt*=T;var ot,at=Q*C*O+it*O;if(1===R)ot=y[at];else{ot=0;var st;if(N)for(st=0;R>st;++st)ot=ot*L+y[at+st];else for(st=R-1;st>=0;--st)ot=ot*L+y[at+st]}ot=ot*D+I,H=Math.max(H,ot),G=Math.min(G,ot),(rt!==it||Z!==Q)&&(ot-=S);var lt=K*h(nt),ut=K*d(nt),ct=V*lt,ht=k*ut,dt=m(ct*lt+ht*ut+et*$),mt=1/dt,pt=ct*mt,ft=ht*mt,vt=et*mt;_[W++]=pt+lt*ot-A.x,_[W++]=ft+ut*ot-A.y,_[W++]=vt+$*ot-A.z,_[W++]=ot;var gt=(nt-o)/(u-o);_[W++]=gt,_[W++]=tt}}return{maximumHeight:H,minimumHeight:G}},s}),r("ThirdParty/Uri",[],function(){function e(t){if(t instanceof e)this.scheme=t.scheme,this.authority=t.authority,this.path=t.path,this.query=t.query,this.fragment=t.fragment;else if(t){var r=i.exec(t);this.scheme=r[1],this.authority=r[2],this.path=r[3],this.query=r[4],this.fragment=r[5]}}function t(e){var t=unescape(e);return o.test(t)?t:e.toUpperCase()}function r(e,t,r,i){return(t||"")+r.toLowerCase()+(i||"")}e.prototype.scheme=null,e.prototype.authority=null,e.prototype.path="",e.prototype.query=null,e.prototype.fragment=null;var i=new RegExp("^(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?$");e.prototype.getScheme=function(){return this.scheme},e.prototype.getAuthority=function(){return this.authority},e.prototype.getPath=function(){return this.path},e.prototype.getQuery=function(){return this.query},e.prototype.getFragment=function(){return this.fragment},e.prototype.isAbsolute=function(){return!!this.scheme&&!this.fragment},e.prototype.isSameDocumentAs=function(e){return e.scheme==this.scheme&&e.authority==this.authority&&e.path==this.path&&e.query==this.query},e.prototype.equals=function(e){return this.isSameDocumentAs(e)&&e.fragment==this.fragment},e.prototype.normalize=function(){this.removeDotSegments(),this.scheme&&(this.scheme=this.scheme.toLowerCase()),this.authority&&(this.authority=this.authority.replace(a,r).replace(n,t)),this.path&&(this.path=this.path.replace(n,t)),this.query&&(this.query=this.query.replace(n,t)),this.fragment&&(this.fragment=this.fragment.replace(n,t))};var n=/%[0-9a-z]{2}/gi,o=/[a-zA-Z0-9\-\._~]/,a=/(.*@)?([^@:]*)(:.*)?/;return e.prototype.resolve=function(t){var r=new e;return this.scheme?(r.scheme=this.scheme,r.authority=this.authority,r.path=this.path,r.query=this.query):(r.scheme=t.scheme,this.authority?(r.authority=this.authority,r.path=this.path,r.query=this.query):(r.authority=t.authority,""==this.path?(r.path=t.path,r.query=this.query||t.query):("/"==this.path.charAt(0)?(r.path=this.path,r.removeDotSegments()):(r.path=t.authority&&""==t.path?"/"+this.path:t.path.substring(0,t.path.lastIndexOf("/")+1)+this.path,r.removeDotSegments()),r.query=this.query))),r.fragment=this.fragment,r},e.prototype.removeDotSegments=function(){var e,t=this.path.split("/"),r=[],i=""==t[0];for(i&&t.shift(),""==t[0]?t.shift():null;t.length;)e=t.shift(),".."==e?r.pop():"."!=e&&r.push(e);("."==e||".."==e)&&r.push(""),i&&r.unshift(""),this.path=r.join("/")},e.prototype.toString=function(){var e="";return this.scheme&&(e+=this.scheme+":"),this.authority&&(e+="//"+this.authority),e+=this.path,this.query&&(e+="?"+this.query),this.fragment&&(e+="#"+this.fragment),e},e}),r("Core/buildModuleUrl",["../ThirdParty/Uri","./defined","./DeveloperError","require"],function(e,t,r,i){"use strict";function n(){for(var e=document.getElementsByTagName("script"),t=0,r=e.length;r>t;++t){var i=e[t].getAttribute("src"),n=h.exec(i);if(null!==n)return n[1]}return void 0}function o(){if(t(l))return l;var i;if(i="undefined"!=typeof CESIUM_BASE_URL?CESIUM_BASE_URL:n(),!t(i))throw new r("Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.");return l=new e(i).resolve(new e(document.location.href))}function a(e){return i.toUrl("../"+e)}function s(t){return new e(t).resolve(o()).toString()}var l,u,c,h=/((?:.*\/)|^)cesium[\w-]*\.js(?:\W|$)/i,d=function(e){t(u)||(u=t(i.toUrl)?a:s),t(c)||(c=document.createElement("a"));var r=u(e);return c.href=r,c.href=c.href,c.href};return d._cesiumScriptRegex=h,d}),r("Core/destroyObject",["./defaultValue","./DeveloperError"],function(e,t){"use strict";function r(){return!0}var i=function(i,n){function o(){throw new t(n)}n=e(n,"This object was destroyed, i.e., destroy() was called.");for(var a in i)"function"==typeof i[a]&&(i[a]=o);return i.isDestroyed=r,void 0};return i}),r("Core/isCrossOriginUrl",["./defined"],function(e){"use strict";var t,r=function(r){e(t)||(t=document.createElement("a")),t.href=window.location.href;var i=t.host,n=t.protocol;return t.href=r,t.href=t.href,n!==t.protocol||i!==t.host};return r}),r("Core/TaskProcessor",["../ThirdParty/Uri","../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./destroyObject","./isCrossOriginUrl","require"],function(e,t,r,i,n,o,a,s){"use strict";function l(){if(!n(p._canTransferArrayBuffer)){var e=new Worker(c("Workers/transferTypedArrayTest.js"));e.postMessage=i(e.webkitPostMessage,e.postMessage);var r=99,o=new Int8Array([r]);try{e.postMessage({array:o},[o.buffer])}catch(a){return p._canTransferArrayBuffer=!1,p._canTransferArrayBuffer}var s=t.defer();e.onmessage=function(t){var i=t.data.array,o=n(i)&&i[0]===r;s.resolve(o),e.terminate(),p._canTransferArrayBuffer=o},p._canTransferArrayBuffer=s.promise}return p._canTransferArrayBuffer}function u(e,t){--e._activeTasks;var r=t.id;if(n(r)){var i=e._deferreds,o=i[r];n(t.error)?o.reject(t.error):o.resolve(t.result),delete i[r]}}function c(e){var t=r(e);if(a(t)){var i,n='importScripts("'+t+'");';try{i=new Blob([n],{type:"application/javascript"})}catch(o){var s=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,l=new s;l.append(n),i=l.getBlob("application/javascript")}var u=window.URL||window.webkitURL;t=u.createObjectURL(i)}return t}function h(){return n(m)||(m=c("Workers/cesiumWorkerBootstrapper.js")),m}function d(t){var o=new Worker(h());o.postMessage=i(o.webkitPostMessage,o.postMessage);var a={loaderConfig:{},workerModule:p._workerModulePrefix+t._workerName};if(n(p._loaderConfig))a.loaderConfig=p._loaderConfig;else if(n(s.toUrl)){var l=new e("..").resolve(new e(r("Workers/cesiumWorkerBootstrapper.js"))).toString();a.loaderConfig.baseUrl=l}else a.loaderConfig.paths={Workers:r("Workers")};return o.postMessage(a),o.onmessage=function(e){u(t,e.data)},o}var m,p=function(e,t){this._workerName=e,this._maximumActiveTasks=i(t,5),this._activeTasks=0,this._deferreds={},this._nextID=0},f=[];return p.prototype.scheduleTask=function(e,r){if(n(this._worker)||(this._worker=d(this)),this._activeTasks>=this._maximumActiveTasks)return void 0;++this._activeTasks;var i=this;return t(l(),function(o){n(r)?o||(r.length=0):r=f;var a=i._nextID++,s=t.defer();return i._deferreds[a]=s,i._worker.postMessage({id:a,parameters:e,canTransferArrayBuffer:o},r),s.promise})},p.prototype.isDestroyed=function(){return!1},p.prototype.destroy=function(){return n(this._worker)&&this._worker.terminate(),o(this)},p._defaultWorkerModulePrefix="Workers/",p._workerModulePrefix=p._defaultWorkerModulePrefix,p._loaderConfig=void 0,p._canTransferArrayBuffer=void 0,p}),r("Core/TerrainMesh",[],function(){"use strict";var e=function(e,t,r,i,n,o,a){this.center=e,this.vertices=t,this.indices=r,this.minimumHeight=i,this.maximumHeight=n,this.boundingSphere3D=o,this.occludeePointInScaledSpace=a};return e}),r("Core/TerrainProvider",["./defined","./defineProperties","./DeveloperError"],function(e,t,r){"use strict";var i=function(){r.throwInstantiationError()};t(i.prototype,{errorEvent:{get:r.throwInstantiationError},credit:{get:r.throwInstantiationError},tilingScheme:{get:r.throwInstantiationError},ready:{get:r.throwInstantiationError},hasWaterMask:{get:r.throwInstantiationError},hasVertexNormals:{get:r.throwInstantiationError}});var n=[];return i.getRegularGridIndices=function(t,r){var i=n[t];e(i)||(n[t]=i=[]);var o=i[r];if(!e(o)){o=i[r]=new Uint16Array(6*(t-1)*(r-1));for(var a=0,s=0,l=0;r-1>l;++l){for(var u=0;t-1>u;++u){var c=a,h=c+t,d=h+1,m=c+1;o[s++]=c,o[s++]=h,o[s++]=m,o[s++]=m,o[s++]=h,o[s++]=d,++a}++a}}return o},i.heightmapTerrainQuality=.25,i.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(e,t,r){return 2*e.maximumRadius*Math.PI*i.heightmapTerrainQuality/(t*r)},i.prototype.requestTileGeometry=r.throwInstantiationError,i.prototype.getLevelMaximumGeometricError=r.throwInstantiationError,i.prototype.getTileDataAvailable=r.throwInstantiationError,i}),r("Core/HeightmapTerrainData",["../ThirdParty/when","./defaultValue","./defined","./defineProperties","./DeveloperError","./GeographicTilingScheme","./HeightmapTessellator","./Math","./Rectangle","./TaskProcessor","./TerrainMesh","./TerrainProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r,i,n,o,a){var s=1,l=e._width,u=e._height,c=o*(l-1),h=c+l-1,d=a*(u-1),m=d+u-1,p=1<<s;c/=p,h/=p,d/=p,m/=p;var f=r*(l-1),v=i*(u-1);c-=f,h-=f,d-=v,m-=v;var g,_,C=0|c,w=0|h,S=0|d,E=0|m,b=w-C+1,T=E-S+1,x=e._buffer,P=e._structure,A=b*T,M=A*P.stride,D=new x.constructor(M),I=0,R=P.stride;if(R>1)for(_=S;E>=_;++_)for(g=C;w>=g;++g)for(var O=(_*l+g)*R,L=0;R>L;++L)D[I++]=x[O+L];else for(_=S;E>=_;++_)for(g=C;w>=g;++g)D[I++]=x[_*l+g];return new y({buffer:D,width:b,height:T,childTileMask:0,structure:e._structure,createdByUpsampling:!0})}function m(e,t,r,i,n,o,a,l){var u,c,h,d,m=e._width,v=e._height,g=e._structure,C=g.stride,w=e._buffer,S=new w.constructor(m*v*C),E=t.tileXYToRectangle(r,i,n),b=t.tileXYToRectangle(o,a,l);if(C>1){var T=g.elementsPerHeight,x=g.elementMultiplier,P=g.isBigEndian,A=Math.pow(x,T-1);for(c=0;v>c;++c)for(h=s.lerp(b.north,b.south,c/(v-1)),u=0;m>u;++u){d=s.lerp(b.west,b.east,u/(m-1));var M=f(w,T,x,C,P,E,m,v,d,h);_(S,T,x,A,C,P,c*m+u,M)}}else for(c=0;v>c;++c)for(h=s.lerp(b.north,b.south,c/(v-1)),u=0;m>u;++u)d=s.lerp(b.west,b.east,u/(m-1)),S[c*m+u]=p(w,E,m,v,d,h);return new y({buffer:S,width:m,height:v,childTileMask:0,structure:e._structure,createdByUpsampling:!0})}function p(e,t,r,i,n,o){var a=(n-t.west)*(r-1)/(t.east-t.west),s=(o-t.south)*(i-1)/(t.north-t.south),l=0|a,u=l+1;u>=r&&(u=r-1,l=r-2);var c=0|s,h=c+1;h>=i&&(h=i-1,c=i-2);var d=a-l,m=s-c;c=i-1-c,h=i-1-h;var p=e[c*r+l],f=e[c*r+u],g=e[h*r+l],_=e[h*r+u];return v(d,m,p,f,g,_)}function f(e,t,r,i,n,o,a,s,l,u){var c=(l-o.west)*(a-1)/(o.east-o.west),h=(u-o.south)*(s-1)/(o.north-o.south),d=0|c,m=d+1;m>=a&&(m=a-1,d=a-2);var p=0|h,f=p+1;f>=s&&(f=s-1,p=s-2);var _=c-d,y=h-p;p=s-1-p,f=s-1-f;var C=g(e,t,r,i,n,p*a+d),w=g(e,t,r,i,n,p*a+m),S=g(e,t,r,i,n,f*a+d),E=g(e,t,r,i,n,f*a+m);return v(_,y,C,w,S,E)}function v(e,t,r,i,n,o){return e>t?r+e*(i-r)+t*(o-i):r+e*(o-n)+t*(n-r)}function g(e,t,r,i,n,o){o*=i;var a,s=0;if(n)for(a=0;t>a;++a)s=s*r+e[o+a];else for(a=t-1;a>=0;--a)s=s*r+e[o+a];return s}function _(e,t,r,i,n,o,a,s){a*=n;var l;if(o)for(l=0;t>l;++l)e[a+l]=0|s/i,s-=e[a+l]*i,i/=r;else for(l=t-1;l>=0;--l)e[a+l]=0|s/i,s-=e[a+l]*i,i/=r}var y=function(e){this._buffer=e.buffer,this._width=e.width,this._height=e.height,this._childTileMask=t(e.childTileMask,15);var i=a.DEFAULT_STRUCTURE,n=e.structure;r(n)?n!==i&&(n.heightScale=t(n.heightScale,i.heightScale),n.heightOffset=t(n.heightOffset,i.heightOffset),n.elementsPerHeight=t(n.elementsPerHeight,i.elementsPerHeight),n.stride=t(n.stride,i.stride),n.elementMultiplier=t(n.elementMultiplier,i.elementMultiplier),n.isBigEndian=t(n.isBigEndian,i.isBigEndian)):n=i,this._structure=n,this._createdByUpsampling=t(e.createdByUpsampling,!1),this._waterMask=e.waterMask};i(y.prototype,{waterMask:{get:function(){return this._waterMask}}});var C=new u("createVerticesFromHeightmap");return y.prototype.createMesh=function(t,i,n,a){var s=t.ellipsoid,u=t.tileXYToNativeRectangle(i,n,a),d=t.tileXYToRectangle(i,n,a),m=s.cartographicToCartesian(l.center(d)),p=this._structure,f=h.getEstimatedLevelZeroGeometricErrorForAHeightmap(s,this._width,t.getNumberOfXTilesAtLevel(0)),v=f/(1<<a),g=C.scheduleTask({heightmap:this._buffer,structure:p,width:this._width,height:this._height,nativeRectangle:u,rectangle:d,relativeToCenter:m,ellipsoid:s,skirtHeight:Math.min(4*v,1e3),isGeographic:t instanceof o});return r(g)?e(g,function(e){return new c(m,new Float32Array(e.vertices),h.getRegularGridIndices(e.gridWidth,e.gridHeight),e.minimumHeight,e.maximumHeight,e.boundingSphere3D,e.occludeePointInScaledSpace)}):void 0},y.prototype.interpolateHeight=function(e,t,r){var i,n=this._width,o=this._height,a=this._structure,s=a.stride;if(s>1){var l=a.elementsPerHeight,u=a.elementMultiplier,c=a.isBigEndian;i=f(this._buffer,l,u,s,c,e,n,o,t,r)}else i=p(this._buffer,e,n,o,t,r);return i*a.heightScale+a.heightOffset},y.prototype.upsample=function(e,t,r,i,n,o,a){var s;return s=1===this._width%2&&1===this._height%2?d(this,e,t,r,i,n,o,a):m(this,e,t,r,i,n,o,a)},y.prototype.isChildAvailable=function(e,t,r,i){var n=2;return r!==2*e&&++n,i!==2*t&&(n-=2),0!==(this._childTileMask&1<<n)},y.prototype.wasCreatedByUpsampling=function(){return this._createdByUpsampling},y}),r("Core/loadImage",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError","./isCrossOriginUrl"],function(e,t,r,i,n){"use strict";var o=/^data:/,a=function(r,i){return i=t(i,!0),e(r,function(t){var r;r=o.test(t)||!i?!1:n(t);var s=e.defer();return a.createImage(t,r,s),s.promise})};return a.createImage=function(e,t,r){var i=new Image;i.onload=function(){r.resolve(i)},i.onerror=function(e){r.reject(e)},t&&(i.crossOrigin=""),i.src=e},a.defaultCreateImage=a.createImage,a}),r("Core/throttleRequestByServer",["../ThirdParty/Uri","../ThirdParty/when","./defaultValue"],function(e,t,r){"use strict";function i(t){var r=new e(t).resolve(a);r.normalize();var i=r.authority;return/:/.test(i)||(i=i+":"+("https"===r.scheme?"443":"80")),i}var n=6,o={},a=new e(document.location.href),s=function(e,a){var s=i(e),l=r(o[s],0);return l>n?void 0:(o[s]=l+1,t(a(e),function(e){return o[s]--,e}).otherwise(function(e){return o[s]--,t.reject(e)}))};return s}),r("Core/ArcGisImageServerTerrainProvider",["../ThirdParty/when","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Event","./GeographicTilingScheme","./getImagePixels","./HeightmapTerrainData","./loadImage","./Math","./TerrainProvider","./throttleRequestByServer"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=function(e){this._url=e.url,this._token=e.token,this._tilingScheme=e.tilingScheme,i(this._tilingScheme)||(this._tilingScheme=new l({ellipsoid:r(e.ellipsoid,a.WGS84)})),this._heightmapWidth=65,this._levelZeroMaximumGeometricError=m.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,this._heightmapWidth,this._tilingScheme.getNumberOfXTilesAtLevel(0)),this._proxy=e.proxy,this._terrainDataStructure={heightScale:.001,heightOffset:-1e3,elementsPerHeight:3,stride:4,elementMultiplier:256,isBigEndian:!0},this._errorEvent=new s;var n=e.credit;"string"==typeof n&&(n=new t(n)),this._credit=n};return n(f.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return!0}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),f.prototype.requestTileGeometry=function(t,r,n){var o=this._tilingScheme.tileXYToRectangle(t,r,n),a=(o.east-o.west)/(this._heightmapWidth-1),s=(o.north-o.south)/(this._heightmapWidth-1);o.west-=.5*a,o.east+=.5*a,o.south-=.5*s,o.north+=.5*s;var l=d.toDegrees(o.west)+"%2C"+d.toDegrees(o.south)+"%2C"+d.toDegrees(o.east)+"%2C"+d.toDegrees(o.north),m=this._url+"/exportImage?interpolation=RSP_BilinearInterpolation&format=tiff&f=image&size="+this._heightmapWidth+"%2C"+this._heightmapWidth+"&bboxSR=4326&imageSR=4326&bbox="+l;this._token&&(m+="&token="+this._token);var f=this._proxy;i(f)&&(m=f.getURL(m));var v=p(m,h);if(!i(v))return void 0;var g=this;return e(v,function(e){return new c({buffer:u(e),width:g._heightmapWidth,height:g._heightmapWidth,childTileMask:15,structure:g._terrainDataStructure})})},f.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},f.prototype.getTileDataAvailable=function(){return void 0},f}),r("Core/AssociativeArray",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){this._array=[],this._hash={}};return t(r.prototype,{length:{get:function(){return this._array.length}},values:{get:function(){return this._array}}}),r.prototype.contains=function(t){return e(this._hash[t])},r.prototype.set=function(e,t){var r=this._hash[e];t!==r&&(this.remove(e),this._hash[e]=t,this._array.push(t))},r.prototype.get=function(e){return this._hash[e]},r.prototype.remove=function(t){var r=this._hash[t],i=e(r);if(i){var n=this._array;n.splice(n.indexOf(r),1),this._hash[t]=void 0}return i},r.prototype.removeAll=function(){this._hash={},this._array.length=0},r}),r("Core/Intersect",["./freezeObject"],function(e){"use strict";var t={OUTSIDE:-1,INTERSECTING:0,INSIDE:1};return e(t)}),r("Core/AxisAlignedBoundingBox",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Intersect"],function(e,t,r,i,n){"use strict";var o=function(i,n,o){this.minimum=e.clone(t(i,e.ZERO)),this.maximum=e.clone(t(n,e.ZERO)),r(o)?o=e.clone(o):(o=e.add(this.minimum,this.maximum,new e),e.multiplyByScalar(o,.5,o)),this.center=o};o.fromPoints=function(t,i){if(r(i)||(i=new o),!r(t)||0===t.length)return i.minimum=e.clone(e.ZERO,i.minimum),i.maximum=e.clone(e.ZERO,i.maximum),i.center=e.clone(e.ZERO,i.center),i;for(var n=t[0].x,a=t[0].y,s=t[0].z,l=t[0].x,u=t[0].y,c=t[0].z,h=t.length,d=1;h>d;d++){var m=t[d],p=m.x,f=m.y,v=m.z;n=Math.min(p,n),l=Math.max(p,l),a=Math.min(f,a),u=Math.max(f,u),s=Math.min(v,s),c=Math.max(v,c)}var g=i.minimum;g.x=n,g.y=a,g.z=s;var _=i.maximum;_.x=l,_.y=u,_.z=c;var y=e.add(g,_,i.center);return e.multiplyByScalar(y,.5,y),i},o.clone=function(t,i){return r(t)?r(i)?(i.minimum=e.clone(t.minimum,i.minimum),i.maximum=e.clone(t.maximum,i.maximum),i.center=e.clone(t.center,i.center),i):new o(t.minimum,t.maximum):void 0},o.equals=function(t,i){return t===i||r(t)&&r(i)&&e.equals(t.center,i.center)&&e.equals(t.minimum,i.minimum)&&e.equals(t.maximum,i.maximum)};var a=new e;return o.intersect=function(t,r){a=e.subtract(t.maximum,t.minimum,a);var i=e.multiplyByScalar(a,.5,a),o=i.x*Math.abs(r.x)+i.y*Math.abs(r.y)+i.z*Math.abs(r.z),s=e.dot(t.center,r)+r.w;return s-o>0?n.INSIDE:0>s+o?n.OUTSIDE:n.INTERSECTING},o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.intersect=function(e){return o.intersect(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o}),r("Core/BingMapsApi",["./defined"],function(e){"use strict";var t={};t.defaultKey=void 0;var r=!1;return t.getKey=function(i){return e(i)?i:e(t.defaultKey)?t.defaultKey:(r||(console.log("This application is using Cesium's default Bing Maps key.  Please create a new key for the application as soon as possible and prior to deployment by visiting https://www.bingmapsportal.com/, and provide your key to Cesium by setting the Cesium.BingMapsApi.defaultKey property before constructing the CesiumWidget or any other object that uses the Bing Maps API."),r=!0),"Aj1ony_-Typ-KjG9SJWiKSHY23U1KmK7yAmZa9lDmuF2osXWkcZ22VPsqmCt0TCt")},t}),r("Core/BoundingRectangle",["./Cartesian2","./Cartographic","./defaultValue","./defined","./DeveloperError","./GeographicProjection","./Intersect","./Rectangle"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,t,i,n){this.x=r(e,0),this.y=r(t,0),this.width=r(i,0),this.height=r(n,0)};l.fromPoints=function(e,t){if(i(t)||(t=new l),!i(e)||0===e.length)return t.x=0,t.y=0,t.width=0,t.height=0,t;for(var r=e.length,n=e[0].x,o=e[0].y,a=e[0].x,s=e[0].y,u=1;r>u;u++){var c=e[u],h=c.x,d=c.y;n=Math.min(h,n),a=Math.max(h,a),o=Math.min(d,o),s=Math.max(d,s)}return t.x=n,t.y=o,t.width=a-n,t.height=s-o,t};var u=new o,c=new t,h=new t;return l.fromRectangle=function(t,n,o){if(i(o)||(o=new l),!i(t))return o.x=0,o.y=0,o.width=0,o.height=0,o;n=r(n,u);var a=n.project(s.southwest(t,c)),d=n.project(s.northeast(t,h));return e.subtract(d,a,d),o.x=a.x,o.y=a.y,o.width=d.x,o.height=d.y,o},l.clone=function(e,t){return i(e)?i(t)?(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t):new l(e.x,e.y,e.width,e.height):void 0},l.union=function(e,t,r){i(r)||(r=new l);var n=Math.min(e.x,t.x),o=Math.min(e.y,t.y),a=Math.max(e.x+e.width,t.x+t.width),s=Math.max(e.y+e.height,t.y+t.height);return r.x=n,r.y=o,r.width=a-n,r.height=s-o,r},l.expand=function(e,t,r){r=l.clone(e,r);var i=t.x-r.x,n=t.y-r.y;return i>r.width?r.width=i:0>i&&(r.width-=i,r.x=t.x),n>r.height?r.height=n:0>n&&(r.height-=n,r.y=t.y),r},l.intersect=function(e,t){var r=e.x,i=e.y,n=t.x,o=t.y;return r>n+t.width||r+e.width<n||i+e.height<o||i>o+t.height?a.OUTSIDE:a.INTERSECTING},l.equals=function(e,t){return e===t||i(e)&&i(t)&&e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height},l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.intersect=function(e){return l.intersect(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l}),r("Core/Interval",["./defaultValue"],function(e){"use strict";var t=function(t,r){this.start=e(t,0),this.stop=e(r,0)};return t}),r("Core/Matrix3",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n,o){"use strict";function a(e){for(var t=0,r=0;9>r;++r){var i=e[r];t+=i*i}return Math.sqrt(t)}function s(e){for(var t=0,r=0;3>r;++r){var i=e[u.getElementIndex(m[r],d[r])];t+=2*i*i}return Math.sqrt(t)}function l(e,t){for(var r=o.EPSILON15,i=0,n=1,a=0;3>a;++a){var s=Math.abs(e[u.getElementIndex(m[a],d[a])]);s>i&&(n=a,i=s)}var l=1,c=0,h=d[n],p=m[n];if(Math.abs(e[u.getElementIndex(p,h)])>r){var f,v=e[u.getElementIndex(p,p)],g=e[u.getElementIndex(h,h)],_=e[u.getElementIndex(p,h)],y=(v-g)/2/_;f=0>y?-1/(-y+Math.sqrt(1+y*y)):1/(y+Math.sqrt(1+y*y)),l=1/Math.sqrt(1+f*f),c=f*l}return t=u.clone(u.IDENTITY,t),t[u.getElementIndex(h,h)]=t[u.getElementIndex(p,p)]=l,t[u.getElementIndex(p,h)]=c,t[u.getElementIndex(h,p)]=-c,t}var u=function(e,r,i,n,o,a,s,l,u){this[0]=t(e,0),this[1]=t(n,0),this[2]=t(s,0),this[3]=t(r,0),this[4]=t(o,0),this[5]=t(l,0),this[6]=t(i,0),this[7]=t(a,0),this[8]=t(u,0)};u.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):new u(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]):void 0},u.fromArray=function(e,i,n){return i=t(i,0),r(n)||(n=new u),n[0]=e[i],n[1]=e[i+1],n[2]=e[i+2],n[3]=e[i+3],n[4]=e[i+4],n[5]=e[i+5],n[6]=e[i+6],n[7]=e[i+7],n[8]=e[i+8],n},u.fromColumnMajorArray=function(e,t){return u.clone(e,t)},u.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],t):new u(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])},u.fromQuaternion=function(e,t){var i=e.x*e.x,n=e.x*e.y,o=e.x*e.z,a=e.x*e.w,s=e.y*e.y,l=e.y*e.z,c=e.y*e.w,h=e.z*e.z,d=e.z*e.w,m=e.w*e.w,p=i-s-h+m,f=2*(n-d),v=2*(o+c),g=2*(n+d),_=-i+s-h+m,y=2*(l-a),C=2*(o-c),w=2*(l+a),S=-i-s+h+m;return r(t)?(t[0]=p,t[1]=g,t[2]=C,t[3]=f,t[4]=_,t[5]=w,t[6]=v,t[7]=y,t[8]=S,t):new u(p,f,v,g,_,y,C,w,S)},u.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=e.y,t[5]=0,t[6]=0,t[7]=0,t[8]=e.z,t):new u(e.x,0,0,0,e.y,0,0,0,e.z)},u.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=e,t[5]=0,t[6]=0,t[7]=0,t[8]=e,t):new u(e,0,0,0,e,0,0,0,e)},u.fromCrossProduct=function(e,t){return r(t)?(t[0]=0,t[1]=e.z,t[2]=-e.y,t[3]=-e.z,t[4]=0,t[5]=e.x,t[6]=e.y,t[7]=-e.x,t[8]=0,t):new u(0,-e.z,e.y,e.z,0,-e.x,-e.y,e.x,0)},u.fromRotationX=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=i,t[5]=n,t[6]=0,t[7]=-n,t[8]=i,t):new u(1,0,0,0,i,-n,0,n,i)},u.fromRotationY=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=0,t[2]=-n,t[3]=0,t[4]=1,t[5]=0,t[6]=n,t[7]=0,t[8]=i,t):new u(i,0,n,0,1,0,-n,0,i)},u.fromRotationZ=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=n,t[2]=0,t[3]=-n,t[4]=i,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new u(i,-n,0,n,i,0,0,0,1)},u.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},u.getElementIndex=function(e,t){return 3*e+t},u.getColumn=function(e,t,r){var i=3*t,n=e[i],o=e[i+1],a=e[i+2];return r.x=n,r.y=o,r.z=a,r},u.setColumn=function(e,t,r,i){i=u.clone(e,i);var n=3*t;return i[n]=r.x,i[n+1]=r.y,i[n+2]=r.z,i},u.getRow=function(e,t,r){var i=e[t],n=e[t+3],o=e[t+6];return r.x=i,r.y=n,r.z=o,r},u.setRow=function(e,t,r,i){return i=u.clone(e,i),i[t]=r.x,i[t+3]=r.y,i[t+6]=r.z,i};var c=new e;u.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],t[2],c)),r.y=e.magnitude(e.fromElements(t[3],t[4],t[5],c)),r.z=e.magnitude(e.fromElements(t[6],t[7],t[8],c)),r};var h=new e;u.getMaximumScale=function(t){return u.getScale(t,h),e.maximumComponent(h)},u.multiply=function(e,t,r){var i=e[0]*t[0]+e[3]*t[1]+e[6]*t[2],n=e[1]*t[0]+e[4]*t[1]+e[7]*t[2],o=e[2]*t[0]+e[5]*t[1]+e[8]*t[2],a=e[0]*t[3]+e[3]*t[4]+e[6]*t[5],s=e[1]*t[3]+e[4]*t[4]+e[7]*t[5],l=e[2]*t[3]+e[5]*t[4]+e[8]*t[5],u=e[0]*t[6]+e[3]*t[7]+e[6]*t[8],c=e[1]*t[6]+e[4]*t[7]+e[7]*t[8],h=e[2]*t[6]+e[5]*t[7]+e[8]*t[8];return r[0]=i,r[1]=n,r[2]=o,r[3]=a,r[4]=s,r[5]=l,r[6]=u,r[7]=c,r[8]=h,r},u.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r[4]=e[4]+t[4],r[5]=e[5]+t[5],r[6]=e[6]+t[6],r[7]=e[7]+t[7],r[8]=e[8]+t[8],r},u.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r[4]=e[4]-t[4],r[5]=e[5]-t[5],r[6]=e[6]-t[6],r[7]=e[7]-t[7],r[8]=e[8]-t[8],r},u.multiplyByVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[3]*n+e[6]*o,s=e[1]*i+e[4]*n+e[7]*o,l=e[2]*i+e[5]*n+e[8]*o;return r.x=a,r.y=s,r.z=l,r},u.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r[4]=e[4]*t,r[5]=e[5]*t,r[6]=e[6]*t,r[7]=e[7]*t,r[8]=e[8]*t,r},u.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t},u.transpose=function(e,t){var r=e[0],i=e[3],n=e[6],o=e[1],a=e[4],s=e[7],l=e[2],u=e[5],c=e[8];return t[0]=r,t[1]=i,t[2]=n,t[3]=o,t[4]=a,t[5]=s,t[6]=l,t[7]=u,t[8]=c,t};var d=[1,0,0],m=[2,2,1],p=new u,f=new u;return u.computeEigenDecomposition=function(e,t){var i=o.EPSILON20,n=10,c=0,h=0;r(t)||(t={});for(var d=t.unitary=u.clone(u.IDENTITY,t.unitary),m=t.diagonal=u.clone(e,t.diagonal),v=i*a(m);n>h&&s(m)>v;)l(m,p),u.transpose(p,f),u.multiply(m,p,m),u.multiply(f,m,m),u.multiply(d,p,d),++c>2&&(++h,c=0);return t},u.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t},u.determinant=function(e){var t=e[0],r=e[3],i=e[6],n=e[1],o=e[4],a=e[7],s=e[2],l=e[5],u=e[8];return t*(o*u-l*a)+n*(l*i-r*u)+s*(r*a-o*i)},u.inverse=function(e,t){var r=e[0],n=e[1],a=e[2],s=e[3],l=e[4],c=e[5],h=e[6],d=e[7],m=e[8],p=u.determinant(e);if(Math.abs(p)<=o.EPSILON15)throw new i("matrix is not invertible");t[0]=l*m-d*c,t[1]=d*a-n*m,t[2]=n*c-l*a,t[3]=h*c-s*m,t[4]=r*m-h*a,t[5]=s*a-r*c,t[6]=s*d-h*l,t[7]=h*n-r*d,t[8]=r*l-s*n;var f=1/p;return u.multiplyByScalar(t,f,t)},u.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},u.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i&&Math.abs(e[4]-t[4])<=i&&Math.abs(e[5]-t[5])<=i&&Math.abs(e[6]-t[6])<=i&&Math.abs(e[7]-t[7])<=i&&Math.abs(e[8]-t[8])<=i},u.IDENTITY=n(new u(1,0,0,0,1,0,0,0,1)),u.COLUMN0ROW0=0,u.COLUMN0ROW1=1,u.COLUMN0ROW2=2,u.COLUMN1ROW0=3,u.COLUMN1ROW1=4,u.COLUMN1ROW2=5,u.COLUMN2ROW0=6,u.COLUMN2ROW1=7,u.COLUMN2ROW2=8,u.prototype.clone=function(e){return u.clone(this,e)},u.prototype.equals=function(e){return u.equals(this,e)},u.prototype.equalsEpsilon=function(e,t){return u.equalsEpsilon(this,e,t)},u.prototype.toString=function(){return"("+this[0]+", "+this[3]+", "+this[6]+")\n"+"("+this[1]+", "+this[4]+", "+this[7]+")\n"+"("+this[2]+", "+this[5]+", "+this[8]+")"},u}),r("Core/RuntimeError",["./defined"],function(e){"use strict";var t=function(e){this.name="RuntimeError",this.message=e;var t;try{throw new Error}catch(r){t=r.stack}this.stack=t};return t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t}),r("Core/Matrix4",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math","./Matrix3","./RuntimeError"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){this[0]=t(e,0),this[1]=t(o,0),this[2]=t(u,0),this[3]=t(m,0),this[4]=t(r,0),this[5]=t(a,0),this[6]=t(c,0),this[7]=t(p,0),this[8]=t(i,0),this[9]=t(s,0),this[10]=t(h,0),this[11]=t(f,0),this[12]=t(n,0),this[13]=t(l,0),this[14]=t(d,0),this[15]=t(v,0)};l.packedLength=16,l.pack=function(e,r,i){i=t(i,0),r[i++]=e[0],r[i++]=e[1],r[i++]=e[2],r[i++]=e[3],r[i++]=e[4],r[i++]=e[5],r[i++]=e[6],r[i++]=e[7],r[i++]=e[8],r[i++]=e[9],r[i++]=e[10],r[i++]=e[11],r[i++]=e[12],r[i++]=e[13],r[i++]=e[14],r[i]=e[15]},l.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new l),n[0]=e[i++],n[1]=e[i++],n[2]=e[i++],n[3]=e[i++],n[4]=e[i++],n[5]=e[i++],n[6]=e[i++],n[7]=e[i++],n[8]=e[i++],n[9]=e[i++],n[10]=e[i++],n[11]=e[i++],n[12]=e[i++],n[13]=e[i++],n[14]=e[i++],n[15]=e[i],n},l.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):new l(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]):void 0},l.fromArray=l.unpack,l.fromColumnMajorArray=function(e,t){return l.clone(e,t)},l.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15],t):new l(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])},l.fromRotationTranslation=function(e,t,i){return r(i)?(i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=0,i[4]=e[3],i[5]=e[4],i[6]=e[5],i[7]=0,i[8]=e[6],i[9]=e[7],i[10]=e[8],i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,i):new l(e[0],e[3],e[6],t.x,e[1],e[4],e[7],t.y,e[2],e[5],e[8],t.z,0,0,0,1)},l.fromTranslationQuaternionRotationScale=function(e,t,i,n){r(n)||(n=new l);var o=i.x,a=i.y,s=i.z,u=t.x*t.x,c=t.x*t.y,h=t.x*t.z,d=t.x*t.w,m=t.y*t.y,p=t.y*t.z,f=t.y*t.w,v=t.z*t.z,g=t.z*t.w,_=t.w*t.w,y=u-m-v+_,C=2*(c-g),w=2*(h+f),S=2*(c+g),E=-u+m-v+_,b=2*(p-d),T=2*(h-f),x=2*(p+d),P=-u-m+v+_;return n[0]=y*o,n[1]=S*o,n[2]=T*o,n[3]=0,n[4]=C*a,n[5]=E*a,n[6]=x*a,n[7]=0,n[8]=w*s,n[9]=b*s,n[10]=P*s,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,n},l.fromTranslation=function(e,t){return l.fromRotationTranslation(a.IDENTITY,e,t)},l.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e.y,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e.z,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1)},l.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1)
};var u=new e,c=new e,h=new e;l.fromCamera=function(t,i){var n=t.eye,o=t.target,a=t.up;e.normalize(e.subtract(o,n,u),u),e.normalize(e.cross(u,a,c),c),e.normalize(e.cross(c,u,h),h);var s=c.x,d=c.y,m=c.z,p=u.x,f=u.y,v=u.z,g=h.x,_=h.y,y=h.z,C=n.x,w=n.y,S=n.z,E=s*-C+d*-w+m*-S,b=g*-C+_*-w+y*-S,T=p*C+f*w+v*S;return r(i)?(i[0]=s,i[1]=g,i[2]=-p,i[3]=0,i[4]=d,i[5]=_,i[6]=-f,i[7]=0,i[8]=m,i[9]=y,i[10]=-v,i[11]=0,i[12]=E,i[13]=b,i[14]=T,i[15]=1,i):new l(s,d,m,E,g,_,y,b,-p,-f,-v,T,0,0,0,1)},l.computePerspectiveFieldOfView=function(e,t,r,i,n){var o=Math.tan(.5*e),a=1/o,s=a/t,l=(i+r)/(r-i),u=2*i*r/(r-i);return n[0]=s,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=a,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=l,n[11]=-1,n[12]=0,n[13]=0,n[14]=u,n[15]=0,n},l.computeOrthographicOffCenter=function(e,t,r,i,n,o,a){var s=1/(t-e),l=1/(i-r),u=1/(o-n),c=-(t+e)*s,h=-(i+r)*l,d=-(o+n)*u;return s*=2,l*=2,u*=-2,a[0]=s,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=l,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=u,a[11]=0,a[12]=c,a[13]=h,a[14]=d,a[15]=1,a},l.computePerspectiveOffCenter=function(e,t,r,i,n,o,a){var s=2*n/(t-e),l=2*n/(i-r),u=(t+e)/(t-e),c=(i+r)/(i-r),h=-(o+n)/(o-n),d=-1,m=-2*o*n/(o-n);return a[0]=s,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=l,a[6]=0,a[7]=0,a[8]=u,a[9]=c,a[10]=h,a[11]=d,a[12]=0,a[13]=0,a[14]=m,a[15]=0,a},l.computeInfinitePerspectiveOffCenter=function(e,t,r,i,n,o){var a=2*n/(t-e),s=2*n/(i-r),l=(t+e)/(t-e),u=(i+r)/(i-r),c=-1,h=-1,d=-2*n;return o[0]=a,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=l,o[9]=u,o[10]=c,o[11]=h,o[12]=0,o[13]=0,o[14]=d,o[15]=0,o},l.computeViewportTransformation=function(e,r,i,n){e=t(e,t.EMPTY_OBJECT);var o=t(e.x,0),a=t(e.y,0),s=t(e.width,0),l=t(e.height,0);r=t(r,0),i=t(i,1);var u=.5*s,c=.5*l,h=.5*(i-r),d=u,m=c,p=h,f=o+u,v=a+c,g=r+h,_=1;return n[0]=d,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=m,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=p,n[11]=0,n[12]=f,n[13]=v,n[14]=g,n[15]=_,n},l.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},l.getElementIndex=function(e,t){return 4*e+t},l.getColumn=function(e,t,r){var i=4*t,n=e[i],o=e[i+1],a=e[i+2],s=e[i+3];return r.x=n,r.y=o,r.z=a,r.w=s,r},l.setColumn=function(e,t,r,i){i=l.clone(e,i);var n=4*t;return i[n]=r.x,i[n+1]=r.y,i[n+2]=r.z,i[n+3]=r.w,i},l.getRow=function(e,t,r){var i=e[t],n=e[t+4],o=e[t+8],a=e[t+12];return r.x=i,r.y=n,r.z=o,r.w=a,r},l.setRow=function(e,t,r,i){return i=l.clone(e,i),i[t]=r.x,i[t+4]=r.y,i[t+8]=r.z,i[t+12]=r.w,i};var d=new e;l.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],t[2],d)),r.y=e.magnitude(e.fromElements(t[4],t[5],t[6],d)),r.z=e.magnitude(e.fromElements(t[8],t[9],t[10],d)),r};var m=new e;l.getMaximumScale=function(t){return l.getScale(t,m),e.maximumComponent(m)},l.multiply=function(e,t,r){var i=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],c=e[7],h=e[8],d=e[9],m=e[10],p=e[11],f=e[12],v=e[13],g=e[14],_=e[15],y=t[0],C=t[1],w=t[2],S=t[3],E=t[4],b=t[5],T=t[6],x=t[7],P=t[8],A=t[9],M=t[10],D=t[11],I=t[12],R=t[13],O=t[14],L=t[15],N=i*y+s*C+h*w+f*S,B=n*y+l*C+d*w+v*S,F=o*y+u*C+m*w+g*S,z=a*y+c*C+p*w+_*S,V=i*E+s*b+h*T+f*x,k=n*E+l*b+d*T+v*x,U=o*E+u*b+m*T+g*x,W=a*E+c*b+p*T+_*x,G=i*P+s*A+h*M+f*D,H=n*P+l*A+d*M+v*D,q=o*P+u*A+m*M+g*D,j=a*P+c*A+p*M+_*D,Y=i*I+s*R+h*O+f*L,X=n*I+l*R+d*O+v*L,Z=o*I+u*R+m*O+g*L,Q=a*I+c*R+p*O+_*L;return r[0]=N,r[1]=B,r[2]=F,r[3]=z,r[4]=V,r[5]=k,r[6]=U,r[7]=W,r[8]=G,r[9]=H,r[10]=q,r[11]=j,r[12]=Y,r[13]=X,r[14]=Z,r[15]=Q,r},l.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r[4]=e[4]+t[4],r[5]=e[5]+t[5],r[6]=e[6]+t[6],r[7]=e[7]+t[7],r[8]=e[8]+t[8],r[9]=e[9]+t[9],r[10]=e[10]+t[10],r[11]=e[11]+t[11],r[12]=e[12]+t[12],r[13]=e[13]+t[13],r[14]=e[14]+t[14],r[15]=e[15]+t[15],r},l.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r[4]=e[4]-t[4],r[5]=e[5]-t[5],r[6]=e[6]-t[6],r[7]=e[7]-t[7],r[8]=e[8]-t[8],r[9]=e[9]-t[9],r[10]=e[10]-t[10],r[11]=e[11]-t[11],r[12]=e[12]-t[12],r[13]=e[13]-t[13],r[14]=e[14]-t[14],r[15]=e[15]-t[15],r},l.multiplyTransformation=function(e,t,r){var i=e[0],n=e[1],o=e[2],a=e[4],s=e[5],l=e[6],u=e[8],c=e[9],h=e[10],d=e[12],m=e[13],p=e[14],f=t[0],v=t[1],g=t[2],_=t[4],y=t[5],C=t[6],w=t[8],S=t[9],E=t[10],b=t[12],T=t[13],x=t[14],P=i*f+a*v+u*g,A=n*f+s*v+c*g,M=o*f+l*v+h*g,D=i*_+a*y+u*C,I=n*_+s*y+c*C,R=o*_+l*y+h*C,O=i*w+a*S+u*E,L=n*w+s*S+c*E,N=o*w+l*S+h*E,B=i*b+a*T+u*x+d,F=n*b+s*T+c*x+m,z=o*b+l*T+h*x+p;return r[0]=P,r[1]=A,r[2]=M,r[3]=0,r[4]=D,r[5]=I,r[6]=R,r[7]=0,r[8]=O,r[9]=L,r[10]=N,r[11]=0,r[12]=B,r[13]=F,r[14]=z,r[15]=1,r},l.multiplyByTranslation=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=i*e[0]+n*e[4]+o*e[8]+e[12],s=i*e[1]+n*e[5]+o*e[9]+e[13],l=i*e[2]+n*e[6]+o*e[10]+e[14];return r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=e[3],r[4]=e[4],r[5]=e[5],r[6]=e[6],r[7]=e[7],r[8]=e[8],r[9]=e[9],r[10]=e[10],r[11]=e[11],r[12]=a,r[13]=s,r[14]=l,r[15]=e[15],r};var p=new e;return l.multiplyByUniformScale=function(e,t,r){return p.x=t,p.y=t,p.z=t,l.multiplyByScale(e,p,r)},l.multiplyByScale=function(e,t,r){var i=t.x,n=t.y,o=t.z;return 1===i&&1===n&&1===o?l.clone(e,r):(r[0]=i*e[0],r[1]=i*e[1],r[2]=i*e[2],r[3]=0,r[4]=n*e[4],r[5]=n*e[5],r[6]=n*e[6],r[7]=0,r[8]=o*e[8],r[9]=o*e[9],r[10]=o*e[10],r[11]=0,r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=1,r)},l.multiplyByVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=t.w,s=e[0]*i+e[4]*n+e[8]*o+e[12]*a,l=e[1]*i+e[5]*n+e[9]*o+e[13]*a,u=e[2]*i+e[6]*n+e[10]*o+e[14]*a,c=e[3]*i+e[7]*n+e[11]*o+e[15]*a;return r.x=s,r.y=l,r.z=u,r.w=c,r},l.multiplyByPointAsVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[4]*n+e[8]*o,s=e[1]*i+e[5]*n+e[9]*o,l=e[2]*i+e[6]*n+e[10]*o;return r.x=a,r.y=s,r.z=l,r},l.multiplyByPoint=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[4]*n+e[8]*o+e[12],s=e[1]*i+e[5]*n+e[9]*o+e[13],l=e[2]*i+e[6]*n+e[10]*o+e[14];return r.x=a,r.y=s,r.z=l,r},l.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r[4]=e[4]*t,r[5]=e[5]*t,r[6]=e[6]*t,r[7]=e[7]*t,r[8]=e[8]*t,r[9]=e[9]*t,r[10]=e[10]*t,r[11]=e[11]*t,r[12]=e[12]*t,r[13]=e[13]*t,r[14]=e[14]*t,r[15]=e[15]*t,r},l.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},l.transpose=function(e,t){var r=e[1],i=e[2],n=e[3],o=e[6],a=e[7],s=e[11];return t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[10]=e[10],t[11]=e[14],t[12]=n,t[13]=a,t[14]=s,t[15]=e[15],t},l.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t[9]=Math.abs(e[9]),t[10]=Math.abs(e[10]),t[11]=Math.abs(e[11]),t[12]=Math.abs(e[12]),t[13]=Math.abs(e[13]),t[14]=Math.abs(e[14]),t[15]=Math.abs(e[15]),t},l.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},l.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i&&Math.abs(e[4]-t[4])<=i&&Math.abs(e[5]-t[5])<=i&&Math.abs(e[6]-t[6])<=i&&Math.abs(e[7]-t[7])<=i&&Math.abs(e[8]-t[8])<=i&&Math.abs(e[9]-t[9])<=i&&Math.abs(e[10]-t[10])<=i&&Math.abs(e[11]-t[11])<=i&&Math.abs(e[12]-t[12])<=i&&Math.abs(e[13]-t[13])<=i&&Math.abs(e[14]-t[14])<=i&&Math.abs(e[15]-t[15])<=i},l.getTranslation=function(e,t){return t.x=e[12],t.y=e[13],t.z=e[14],t},l.getRotation=function(e,t){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},l.inverse=function(e,t){var r=e[0],i=e[4],n=e[8],a=e[12],l=e[1],u=e[5],c=e[9],h=e[13],d=e[2],m=e[6],p=e[10],f=e[14],v=e[3],g=e[7],_=e[11],y=e[15],C=p*y,w=f*_,S=m*y,E=f*g,b=m*_,T=p*g,x=d*y,P=f*v,A=d*_,M=p*v,D=d*g,I=m*v,R=C*u+E*c+b*h-(w*u+S*c+T*h),O=w*l+x*c+M*h-(C*l+P*c+A*h),L=S*l+P*u+D*h-(E*l+x*u+I*h),N=T*l+A*u+I*c-(b*l+M*u+D*c),B=w*i+S*n+T*a-(C*i+E*n+b*a),F=C*r+P*n+A*a-(w*r+x*n+M*a),z=E*r+x*i+I*a-(S*r+P*i+D*a),V=b*r+M*i+D*n-(T*r+A*i+I*n);C=n*h,w=a*c,S=i*h,E=a*u,b=i*c,T=n*u,x=r*h,P=a*l,A=r*c,M=n*l,D=r*u,I=i*l;var k=C*g+E*_+b*y-(w*g+S*_+T*y),U=w*v+x*_+M*y-(C*v+P*_+A*y),W=S*v+P*g+D*y-(E*v+x*g+I*y),G=T*v+A*g+I*_-(b*v+M*g+D*_),H=S*p+T*f+w*m-(b*f+C*m+E*p),q=A*f+C*d+P*p-(x*p+M*f+w*d),j=x*m+I*f+E*d-(D*f+S*d+P*m),Y=D*p+b*d+M*m-(A*m+I*p+T*d),X=r*R+i*O+n*L+a*N;if(Math.abs(X)<o.EPSILON20)throw new s("matrix is not invertible because its determinate is zero.");return X=1/X,t[0]=R*X,t[1]=O*X,t[2]=L*X,t[3]=N*X,t[4]=B*X,t[5]=F*X,t[6]=z*X,t[7]=V*X,t[8]=k*X,t[9]=U*X,t[10]=W*X,t[11]=G*X,t[12]=H*X,t[13]=q*X,t[14]=j*X,t[15]=Y*X,t},l.inverseTransformation=function(e,t){var r=e[0],i=e[1],n=e[2],o=e[4],a=e[5],s=e[6],l=e[8],u=e[9],c=e[10],h=e[12],d=e[13],m=e[14],p=-r*h-i*d-n*m,f=-o*h-a*d-s*m,v=-l*h-u*d-c*m;return t[0]=r,t[1]=o,t[2]=l,t[3]=0,t[4]=i,t[5]=a,t[6]=u,t[7]=0,t[8]=n,t[9]=s,t[10]=c,t[11]=0,t[12]=p,t[13]=f,t[14]=v,t[15]=1,t},l.IDENTITY=n(new l(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),l.COLUMN0ROW0=0,l.COLUMN0ROW1=1,l.COLUMN0ROW2=2,l.COLUMN0ROW3=3,l.COLUMN1ROW0=4,l.COLUMN1ROW1=5,l.COLUMN1ROW2=6,l.COLUMN1ROW3=7,l.COLUMN2ROW0=8,l.COLUMN2ROW1=9,l.COLUMN2ROW2=10,l.COLUMN2ROW3=11,l.COLUMN3ROW0=12,l.COLUMN3ROW1=13,l.COLUMN3ROW2=14,l.COLUMN3ROW3=15,l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l.prototype.equalsEpsilon=function(e,t){return l.equalsEpsilon(this,e,t)},l.prototype.toString=function(){return"("+this[0]+", "+this[4]+", "+this[8]+", "+this[12]+")\n"+"("+this[1]+", "+this[5]+", "+this[9]+", "+this[13]+")\n"+"("+this[2]+", "+this[6]+", "+this[10]+", "+this[14]+")\n"+"("+this[3]+", "+this[7]+", "+this[11]+", "+this[15]+")"},l}),r("Core/BoundingSphere",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./GeographicProjection","./Intersect","./Interval","./Matrix4","./Rectangle"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=function(t,i){this.center=e.clone(r(t,e.ZERO)),this.radius=r(i,0)},d=new e,m=new e,p=new e,f=new e,v=new e,g=new e,_=new e,y=new e,C=new e,w=new e,S=new e,E=new e;h.fromPoints=function(t,r){if(i(r)||(r=new h),!i(t)||0===t.length)return r.center=e.clone(e.ZERO,r.center),r.radius=0,r;for(var n=e.clone(t[0],_),o=e.clone(n,d),a=e.clone(n,m),s=e.clone(n,p),l=e.clone(n,f),u=e.clone(n,v),c=e.clone(n,g),b=t.length,T=1;b>T;T++){e.clone(t[T],n);var x=n.x,P=n.y,A=n.z;x<o.x&&e.clone(n,o),x>l.x&&e.clone(n,l),P<a.y&&e.clone(n,a),P>u.y&&e.clone(n,u),A<s.z&&e.clone(n,s),A>c.z&&e.clone(n,c)}var M=e.magnitudeSquared(e.subtract(l,o,y)),D=e.magnitudeSquared(e.subtract(u,a,y)),I=e.magnitudeSquared(e.subtract(c,s,y)),R=o,O=l,L=M;D>L&&(L=D,R=a,O=u),I>L&&(L=I,R=s,O=c);var N=C;N.x=.5*(R.x+O.x),N.y=.5*(R.y+O.y),N.z=.5*(R.z+O.z);var B=e.magnitudeSquared(e.subtract(O,N,y)),F=Math.sqrt(B),z=w;z.x=o.x,z.y=a.y,z.z=s.z;var V=S;V.x=l.x,V.y=u.y,V.z=c.z;var k=e.multiplyByScalar(e.add(z,V,y),.5,E),U=0;for(T=0;b>T;T++){e.clone(t[T],n);var W=e.magnitude(e.subtract(n,k,y));W>U&&(U=W);var G=e.magnitudeSquared(e.subtract(n,N,y));if(G>B){var H=Math.sqrt(G);F=.5*(F+H),B=F*F;var q=H-F;N.x=(F*N.x+q*n.x)/H,N.y=(F*N.y+q*n.y)/H,N.z=(F*N.z+q*n.z)/H}}return U>F?(e.clone(N,r.center),r.radius=F):(e.clone(k,r.center),r.radius=U),r};var b=new a,T=new e,x=new e,P=new t,A=new t;h.fromRectangle2D=function(e,t,r){return h.fromRectangleWithHeights2D(e,t,0,0,r)},h.fromRectangleWithHeights2D=function(t,n,o,a,s){if(i(s)||(s=new h),!i(t))return s.center=e.clone(e.ZERO,s.center),s.radius=0,s;n=r(n,b),c.southwest(t,P),P.height=o,c.northeast(t,A),A.height=a;var l=n.project(P,T),u=n.project(A,x),d=u.x-l.x,m=u.y-l.y,p=u.z-l.z;s.radius=.5*Math.sqrt(d*d+m*m+p*p);var f=s.center;return f.x=l.x+.5*d,f.y=l.y+.5*m,f.z=l.z+.5*p,s};var M=[];h.fromRectangle3D=function(e,t,n,a){t=r(t,o.WGS84),n=r(n,0);var s;return i(e)&&(s=c.subsample(e,t,n,M)),h.fromPoints(s,a)},h.fromVertices=function(t,n,o,a){if(i(a)||(a=new h),!i(t)||0===t.length)return a.center=e.clone(e.ZERO,a.center),a.radius=0,a;n=r(n,e.ZERO),o=r(o,3);var s=_;s.x=t[0]+n.x,s.y=t[1]+n.y,s.z=t[2]+n.z;for(var l=e.clone(s,d),u=e.clone(s,m),c=e.clone(s,p),b=e.clone(s,f),T=e.clone(s,v),x=e.clone(s,g),P=t.length,A=0;P>A;A+=o){var M=t[A]+n.x,D=t[A+1]+n.y,I=t[A+2]+n.z;s.x=M,s.y=D,s.z=I,M<l.x&&e.clone(s,l),M>b.x&&e.clone(s,b),D<u.y&&e.clone(s,u),D>T.y&&e.clone(s,T),I<c.z&&e.clone(s,c),I>x.z&&e.clone(s,x)}var R=e.magnitudeSquared(e.subtract(b,l,y)),O=e.magnitudeSquared(e.subtract(T,u,y)),L=e.magnitudeSquared(e.subtract(x,c,y)),N=l,B=b,F=R;O>F&&(F=O,N=u,B=T),L>F&&(F=L,N=c,B=x);var z=C;z.x=.5*(N.x+B.x),z.y=.5*(N.y+B.y),z.z=.5*(N.z+B.z);var V=e.magnitudeSquared(e.subtract(B,z,y)),k=Math.sqrt(V),U=w;U.x=l.x,U.y=u.y,U.z=c.z;var W=S;W.x=b.x,W.y=T.y,W.z=x.z;var G=e.multiplyByScalar(e.add(U,W,y),.5,E),H=0;for(A=0;P>A;A+=o){s.x=t[A]+n.x,s.y=t[A+1]+n.y,s.z=t[A+2]+n.z;var q=e.magnitude(e.subtract(s,G,y));q>H&&(H=q);var j=e.magnitudeSquared(e.subtract(s,z,y));if(j>V){var Y=Math.sqrt(j);k=.5*(k+Y),V=k*k;var X=Y-k;z.x=(k*z.x+X*s.x)/Y,z.y=(k*z.y+X*s.y)/Y,z.z=(k*z.z+X*s.z)/Y}}return H>k?(e.clone(z,a.center),a.radius=k):(e.clone(G,a.center),a.radius=H),a},h.fromCornerPoints=function(t,r,n){i(n)||(n=new h);var o=n.center;return e.add(t,r,o),e.multiplyByScalar(o,.5,o),n.radius=e.distance(o,r),n},h.fromEllipsoid=function(t,r){return i(r)||(r=new h),e.clone(e.ZERO,r.center),r.radius=t.maximumRadius,r},h.clone=function(t,r){return i(t)?i(r)?(r.center=e.clone(t.center,r.center),r.radius=t.radius,r):new h(t.center,t.radius):void 0},h.packedLength=4,h.pack=function(e,t,i){i=r(i,0);var n=e.center;t[i++]=n.x,t[i++]=n.y,t[i++]=n.z,t[i]=e.radius},h.unpack=function(e,t,n){t=r(t,0),i(n)||(n=new h);var o=n.center;return o.x=e[t++],o.y=e[t++],o.z=e[t++],n.radius=e[t],n};var D=new e,I=new e;h.union=function(t,r,n){i(n)||(n=new h);var o=t.center,a=r.center;e.add(o,a,I);var s=e.multiplyByScalar(I,.5,I),l=e.magnitude(e.subtract(o,s,D))+t.radius,u=e.magnitude(e.subtract(a,s,D))+r.radius;return n.radius=Math.max(l,u),e.clone(s,n.center),n};var R=new e;h.expand=function(t,r,i){i=h.clone(t,i);var n=e.magnitude(e.subtract(r,i.center,R));return n>i.radius&&(i.radius=n),i},h.intersect=function(t,r){var i=t.center,n=t.radius,o=e.dot(r,i)+r.w;return-n>o?s.OUTSIDE:n>o?s.INTERSECTING:s.INSIDE},h.transform=function(e,t,r){return i(r)||(r=new h),r.center=u.multiplyByPoint(t,e.center,r.center),r.radius=u.getMaximumScale(t)*e.radius,r};var O=new e;h.distanceSquaredTo=function(t,r){var i=e.subtract(t.center,r,O);return e.magnitudeSquared(i)-t.radius*t.radius},h.transformWithoutScale=function(e,t,r){return i(r)||(r=new h),r.center=u.multiplyByPoint(t,e.center,r.center),r.radius=e.radius,r};var L=new e;h.computePlaneDistances=function(t,r,n,o){i(o)||(o=new l);var a=e.subtract(t.center,r,L),s=e.multiplyByScalar(n,e.dot(n,a),L),u=e.magnitude(s);return o.start=u-t.radius,o.stop=u+t.radius,o};for(var N=new e,B=new e,F=new e,z=new e,V=new e,k=new t,U=new Array(8),W=0;8>W;++W)U[W]=new e;var G=new a;return h.projectTo2D=function(t,i,n){i=r(i,G);var o=i.ellipsoid,a=t.center,s=t.radius,l=o.geodeticSurfaceNormal(a,N),u=e.cross(e.UNIT_Z,l,B);e.normalize(u,u);var c=e.cross(l,u,F);e.normalize(c,c),e.multiplyByScalar(l,s,l),e.multiplyByScalar(c,s,c),e.multiplyByScalar(u,s,u);var d=e.negate(c,V),m=e.negate(u,z),p=U,f=p[0];e.add(l,c,f),e.add(f,u,f),f=p[1],e.add(l,c,f),e.add(f,m,f),f=p[2],e.add(l,d,f),e.add(f,m,f),f=p[3],e.add(l,d,f),e.add(f,u,f),e.negate(l,l),f=p[4],e.add(l,c,f),e.add(f,u,f),f=p[5],e.add(l,c,f),e.add(f,m,f),f=p[6],e.add(l,d,f),e.add(f,m,f),f=p[7],e.add(l,d,f),e.add(f,u,f);for(var v=p.length,g=0;v>g;++g){var _=p[g];e.add(a,_,_);var y=o.cartesianToCartographic(_,k);i.project(y,_)}n=h.fromPoints(p,n),a=n.center;var C=a.x,w=a.y,S=a.z;return a.x=S,a.y=C,a.z=w,n},h.equals=function(t,r){return t===r||i(t)&&i(r)&&e.equals(t.center,r.center)&&t.radius===r.radius},h.prototype.intersect=function(e){return h.intersect(this,e)},h.prototype.equals=function(e){return h.equals(this,e)},h.prototype.clone=function(e){return h.clone(this,e)},h}),r("Core/Fullscreen",["./defined","./defineProperties"],function(e,t){"use strict";var r,i={requestFullscreen:void 0,exitFullscreen:void 0,fullscreenEnabled:void 0,fullscreenElement:void 0,fullscreenchange:void 0,fullscreenerror:void 0},n={};return t(n,{element:{get:function(){return n.supportsFullscreen()?document[i.fullscreenElement]:void 0}},changeEventName:{get:function(){return n.supportsFullscreen()?i.fullscreenchange:void 0}},errorEventName:{get:function(){return n.supportsFullscreen()?i.fullscreenerror:void 0}},enabled:{get:function(){return n.supportsFullscreen()?document[i.fullscreenEnabled]:void 0}},fullscreen:{get:function(){return n.supportsFullscreen()?null!==n.element:void 0}}}),n.supportsFullscreen=function(){if(e(r))return r;r=!1;var t=document.body;if("function"==typeof t.requestFullscreen)return i.requestFullscreen="requestFullscreen",i.exitFullscreen="exitFullscreen",i.fullscreenEnabled="fullscreenEnabled",i.fullscreenElement="fullscreenElement",i.fullscreenchange="fullscreenchange",i.fullscreenerror="fullscreenerror",r=!0;for(var n,o=["webkit","moz","o","ms","khtml"],a=0,s=o.length;s>a;++a){var l=o[a];n=l+"RequestFullscreen","function"==typeof t[n]?(i.requestFullscreen=n,r=!0):(n=l+"RequestFullScreen","function"==typeof t[n]&&(i.requestFullscreen=n,r=!0)),n=l+"ExitFullscreen","function"==typeof document[n]?i.exitFullscreen=n:(n=l+"CancelFullScreen","function"==typeof document[n]&&(i.exitFullscreen=n)),n=l+"FullscreenEnabled",e(document[n])?i.fullscreenEnabled=n:(n=l+"FullScreenEnabled",e(document[n])&&(i.fullscreenEnabled=n)),n=l+"FullscreenElement",e(document[n])?i.fullscreenElement=n:(n=l+"FullScreenElement",e(document[n])&&(i.fullscreenElement=n)),n=l+"fullscreenchange",e(document["on"+n])&&("ms"===l&&(n="MSFullscreenChange"),i.fullscreenchange=n),n=l+"fullscreenerror",e(document["on"+n])&&("ms"===l&&(n="MSFullscreenError"),i.fullscreenerror=n)}return r},n.requestFullscreen=function(e){n.supportsFullscreen()&&e[i.requestFullscreen]()},n.exitFullscreen=function(){n.supportsFullscreen()&&document[i.exitFullscreen]()},n}),r("Core/FeatureDetection",["./defaultValue","./defined","./Fullscreen"],function(e,t,r){"use strict";function i(e){for(var t=e.split("."),r=0,i=t.length;i>r;++r)t[r]=parseInt(t[r],10);return t}function n(){if(!t(d)){var e=/ Chrome\/([\.0-9]+)/.exec(navigator.userAgent);null===e?d=!1:(d=!0,m=i(e[1]))}return d}function o(){return n()&&m}function a(){if(!t(p))if(n()||!/ Safari\/[\.0-9]+/.test(navigator.userAgent))p=!1;else{var e=/ Version\/([\.0-9]+)/.exec(navigator.userAgent);null===e?p=!1:(p=!0,f=i(e[1]))}return p}function s(){return a()&&f}function l(){if(!t(v)){var e=/ AppleWebKit\/([\.0-9]+)(\+?)/.exec(navigator.userAgent);null===e?v=!1:(v=!0,g=i(e[1]),g.isNightly=!!e[2])}return v}function u(){return l()&&g}function c(){if(!t(_)){var e;"Microsoft Internet Explorer"===navigator.appName?(e=/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(navigator.userAgent),null!==e&&(_=!0,y=i(e[1]))):"Netscape"===navigator.appName?(e=/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(navigator.userAgent),null!==e&&(_=!0,y=i(e[1]))):_=!1}return _}function h(){return c()&&y}var d,m,p,f,v,g,_,y,C={isChrome:n,chromeVersion:o,isSafari:a,safariVersion:s,isWebkit:l,webkitVersion:u,isInternetExplorer:c,internetExplorerVersion:h,hardwareConcurrency:e(navigator.hardwareConcurrency,3)};return C.supportsFullscreen=function(){return r.supportsFullscreen()},C.supportsTypedArrays=function(){return"undefined"!=typeof ArrayBuffer},C.supportsWebWorkers=function(){return"undefined"!=typeof Worker},C}),r("Core/ComponentDatatype",["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject"],function(e,t,r,i,n){"use strict";if(!i.supportsTypedArrays())return{};var o={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,FLOAT:5126,DOUBLE:5130};return o.getSizeInBytes=function(e){switch(e){case o.BYTE:return Int8Array.BYTES_PER_ELEMENT;case o.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case o.SHORT:return Int16Array.BYTES_PER_ELEMENT;case o.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case o.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case o.DOUBLE:return Float64Array.BYTES_PER_ELEMENT;default:throw new r("componentDatatype is not a valid value.")}},o.fromTypedArray=function(e){return e instanceof Int8Array?o.BYTE:e instanceof Uint8Array?o.UNSIGNED_BYTE:e instanceof Int16Array?o.SHORT:e instanceof Uint16Array?o.UNSIGNED_SHORT:e instanceof Float32Array?o.FLOAT:e instanceof Float64Array?o.DOUBLE:void 0},o.validate=function(e){return t(e)&&(e===o.BYTE||e===o.UNSIGNED_BYTE||e===o.SHORT||e===o.UNSIGNED_SHORT||e===o.FLOAT||e===o.DOUBLE)},o.createTypedArray=function(e,t){switch(e){case o.BYTE:return new Int8Array(t);case o.UNSIGNED_BYTE:return new Uint8Array(t);case o.SHORT:return new Int16Array(t);case o.UNSIGNED_SHORT:return new Uint16Array(t);case o.FLOAT:return new Float32Array(t);case o.DOUBLE:return new Float64Array(t);default:throw new r("componentDatatype is not a valid value.")}},o.createArrayBufferView=function(t,i,n,a){switch(n=e(n,0),a=e(a,(i.byteLength-n)/o.getSizeInBytes(t)),t){case o.BYTE:return new Int8Array(i,n,a);case o.UNSIGNED_BYTE:return new Uint8Array(i,n,a);case o.SHORT:return new Int16Array(i,n,a);case o.UNSIGNED_SHORT:return new Uint16Array(i,n,a);case o.FLOAT:return new Float32Array(i,n,a);case o.DOUBLE:return new Float64Array(i,n,a);default:throw new r("componentDatatype is not a valid value.")}},n(o)}),r("Core/Geometry",["./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(t){t=e(t,e.EMPTY_OBJECT),this.attributes=t.attributes,this.indices=t.indices,this.primitiveType=t.primitiveType,this.boundingSphere=t.boundingSphere};return i.computeNumberOfVertices=function(e){var i=-1;for(var n in e.attributes)if(e.attributes.hasOwnProperty(n)&&t(e.attributes[n])&&t(e.attributes[n].values)){var o=e.attributes[n],a=o.values.length/o.componentsPerAttribute;if(i!==a&&-1!==i)throw new r("All attribute lists must have the same number of attributes.");i=a}return i},i}),r("Core/GeometryAttribute",["./defaultValue","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.values=t.values};return t}),r("Core/GeometryAttributes",["./defaultValue"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.position=t.position,this.normal=t.normal,this.st=t.st,this.binormal=t.binormal,this.tangent=t.tangent,this.color=t.color};return t}),r("Core/PrimitiveType",["./freezeObject"],function(e){"use strict";var t={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,validate:function(e){return e===t.POINTS||e===t.LINES||e===t.LINE_LOOP||e===t.LINE_STRIP||e===t.TRIANGLES||e===t.TRIANGLE_STRIP||e===t.TRIANGLE_FAN}};return e(t)}),r("Core/VertexFormat",["./defaultValue","./freezeObject"],function(e,t){"use strict";var r=function(t){t=e(t,e.EMPTY_OBJECT),this.position=e(t.position,!1),this.normal=e(t.normal,!1),this.st=e(t.st,!1),this.binormal=e(t.binormal,!1),this.tangent=e(t.tangent,!1)};return r.POSITION_ONLY=t(new r({position:!0})),r.POSITION_AND_NORMAL=t(new r({position:!0,normal:!0})),r.POSITION_NORMAL_AND_ST=t(new r({position:!0,normal:!0,st:!0})),r.POSITION_AND_ST=t(new r({position:!0,st:!0})),r.ALL=t(new r({position:!0,normal:!0,st:!0,binormal:!0,tangent:!0})),r.DEFAULT=r.POSITION_NORMAL_AND_ST,r}),r("Core/BoxGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=new t,d=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.minimumCorner,n=e.maximumCorner,o=i(e.vertexFormat,c.DEFAULT);this._minimumCorner=t.clone(r),this._maximumCorner=t.clone(n),this._vertexFormat=o,this._workerName="createBoxGeometry"};return d.fromDimensions=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.dimensions,n=t.multiplyByScalar(r,.5,new t),o=t.negate(n,new t),a=n,s={minimumCorner:o,maximumCorner:a,vertexFormat:e.vertexFormat};return new d(s)},d.createGeometry=function(i){var n,o,c=i._minimumCorner,d=i._maximumCorner,m=i._vertexFormat,p=new l;if(m.position&&(m.st||m.normal||m.binormal||m.tangent)){if(m.position&&(o=new Float64Array(72),o[0]=c.x,o[1]=c.y,o[2]=d.z,o[3]=d.x,o[4]=c.y,o[5]=d.z,o[6]=d.x,o[7]=d.y,o[8]=d.z,o[9]=c.x,o[10]=d.y,o[11]=d.z,o[12]=c.x,o[13]=c.y,o[14]=c.z,o[15]=d.x,o[16]=c.y,o[17]=c.z,o[18]=d.x,o[19]=d.y,o[20]=c.z,o[21]=c.x,o[22]=d.y,o[23]=c.z,o[24]=d.x,o[25]=c.y,o[26]=c.z,o[27]=d.x,o[28]=d.y,o[29]=c.z,o[30]=d.x,o[31]=d.y,o[32]=d.z,o[33]=d.x,o[34]=c.y,o[35]=d.z,o[36]=c.x,o[37]=c.y,o[38]=c.z,o[39]=c.x,o[40]=d.y,o[41]=c.z,o[42]=c.x,o[43]=d.y,o[44]=d.z,o[45]=c.x,o[46]=c.y,o[47]=d.z,o[48]=c.x,o[49]=d.y,o[50]=c.z,o[51]=d.x,o[52]=d.y,o[53]=c.z,o[54]=d.x,o[55]=d.y,o[56]=d.z,o[57]=c.x,o[58]=d.y,o[59]=d.z,o[60]=c.x,o[61]=c.y,o[62]=c.z,o[63]=d.x,o[64]=c.y,o[65]=c.z,o[66]=d.x,o[67]=c.y,o[68]=d.z,o[69]=c.x,o[70]=c.y,o[71]=d.z,p.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:o})),m.normal){var f=new Float32Array(72);f[0]=0,f[1]=0,f[2]=1,f[3]=0,f[4]=0,f[5]=1,f[6]=0,f[7]=0,f[8]=1,f[9]=0,f[10]=0,f[11]=1,f[12]=0,f[13]=0,f[14]=-1,f[15]=0,f[16]=0,f[17]=-1,f[18]=0,f[19]=0,f[20]=-1,f[21]=0,f[22]=0,f[23]=-1,f[24]=1,f[25]=0,f[26]=0,f[27]=1,f[28]=0,f[29]=0,f[30]=1,f[31]=0,f[32]=0,f[33]=1,f[34]=0,f[35]=0,f[36]=-1,f[37]=0,f[38]=0,f[39]=-1,f[40]=0,f[41]=0,f[42]=-1,f[43]=0,f[44]=0,f[45]=-1,f[46]=0,f[47]=0,f[48]=0,f[49]=1,f[50]=0,f[51]=0,f[52]=1,f[53]=0,f[54]=0,f[55]=1,f[56]=0,f[57]=0,f[58]=1,f[59]=0,f[60]=0,f[61]=-1,f[62]=0,f[63]=0,f[64]=-1,f[65]=0,f[66]=0,f[67]=-1,f[68]=0,f[69]=0,f[70]=-1,f[71]=0,p.normal=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:f})}if(m.st){var v=new Float32Array(48);v[0]=0,v[1]=0,v[2]=1,v[3]=0,v[4]=1,v[5]=1,v[6]=0,v[7]=1,v[8]=1,v[9]=0,v[10]=0,v[11]=0,v[12]=0,v[13]=1,v[14]=1,v[15]=1,v[16]=0,v[17]=0,v[18]=1,v[19]=0,v[20]=1,v[21]=1,v[22]=0,v[23]=1,v[24]=1,v[25]=0,v[26]=0,v[27]=0,v[28]=0,v[29]=1,v[30]=1,v[31]=1,v[32]=1,v[33]=0,v[34]=0,v[35]=0,v[36]=0,v[37]=1,v[38]=1,v[39]=1,v[40]=0,v[41]=0,v[42]=1,v[43]=0,v[44]=1,v[45]=1,v[46]=0,v[47]=1,p.st=new s({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:v})}if(m.tangent){var g=new Float32Array(72);g[0]=1,g[1]=0,g[2]=0,g[3]=1,g[4]=0,g[5]=0,g[6]=1,g[7]=0,g[8]=0,g[9]=1,g[10]=0,g[11]=0,g[12]=-1,g[13]=0,g[14]=0,g[15]=-1,g[16]=0,g[17]=0,g[18]=-1,g[19]=0,g[20]=0,g[21]=-1,g[22]=0,g[23]=0,g[24]=0,g[25]=1,g[26]=0,g[27]=0,g[28]=1,g[29]=0,g[30]=0,g[31]=1,g[32]=0,g[33]=0,g[34]=1,g[35]=0,g[36]=0,g[37]=-1,g[38]=0,g[39]=0,g[40]=-1,g[41]=0,g[42]=0,g[43]=-1,g[44]=0,g[45]=0,g[46]=-1,g[47]=0,g[48]=-1,g[49]=0,g[50]=0,g[51]=-1,g[52]=0,g[53]=0,g[54]=-1,g[55]=0,g[56]=0,g[57]=-1,g[58]=0,g[59]=0,g[60]=1,g[61]=0,g[62]=0,g[63]=1,g[64]=0,g[65]=0,g[66]=1,g[67]=0,g[68]=0,g[69]=1,g[70]=0,g[71]=0,p.tangent=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:g})}if(m.binormal){var _=new Float32Array(72);_[0]=0,_[1]=1,_[2]=0,_[3]=0,_[4]=1,_[5]=0,_[6]=0,_[7]=1,_[8]=0,_[9]=0,_[10]=1,_[11]=0,_[12]=0,_[13]=1,_[14]=0,_[15]=0,_[16]=1,_[17]=0,_[18]=0,_[19]=1,_[20]=0,_[21]=0,_[22]=1,_[23]=0,_[24]=0,_[25]=0,_[26]=1,_[27]=0,_[28]=0,_[29]=1,_[30]=0,_[31]=0,_[32]=1,_[33]=0,_[34]=0,_[35]=1,_[36]=0,_[37]=0,_[38]=1,_[39]=0,_[40]=0,_[41]=1,_[42]=0,_[43]=0,_[44]=1,_[45]=0,_[46]=0,_[47]=1,_[48]=0,_[49]=0,_[50]=1,_[51]=0,_[52]=0,_[53]=1,_[54]=0,_[55]=0,_[56]=1,_[57]=0,_[58]=0,_[59]=1,_[60]=0,_[61]=0,_[62]=1,_[63]=0,_[64]=0,_[65]=1,_[66]=0,_[67]=0,_[68]=1,_[69]=0,_[70]=0,_[71]=1,p.binormal=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:_})}n=new Uint16Array(36),n[0]=0,n[1]=1,n[2]=2,n[3]=0,n[4]=2,n[5]=3,n[6]=6,n[7]=5,n[8]=4,n[9]=7,n[10]=6,n[11]=4,n[12]=8,n[13]=9,n[14]=10,n[15]=8,n[16]=10,n[17]=11,n[18]=14,n[19]=13,n[20]=12,n[21]=15,n[22]=14,n[23]=12,n[24]=18,n[25]=17,n[26]=16,n[27]=19,n[28]=18,n[29]=16,n[30]=20,n[31]=21,n[32]=22,n[33]=20,n[34]=22,n[35]=23}else o=new Float64Array(24),o[0]=c.x,o[1]=c.y,o[2]=c.z,o[3]=d.x,o[4]=c.y,o[5]=c.z,o[6]=d.x,o[7]=d.y,o[8]=c.z,o[9]=c.x,o[10]=d.y,o[11]=c.z,o[12]=c.x,o[13]=c.y,o[14]=d.z,o[15]=d.x,o[16]=c.y,o[17]=d.z,o[18]=d.x,o[19]=d.y,o[20]=d.z,o[21]=c.x,o[22]=d.y,o[23]=d.z,p.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:o}),n=new Uint16Array(36),n[0]=4,n[1]=5,n[2]=6,n[3]=4,n[4]=6,n[5]=7,n[6]=1,n[7]=0,n[8]=3,n[9]=1,n[10]=3,n[11]=2,n[12]=1,n[13]=6,n[14]=5,n[15]=1,n[16]=2,n[17]=6,n[18]=2,n[19]=3,n[20]=7,n[21]=2,n[22]=7,n[23]=6,n[24]=3,n[25]=0,n[26]=4,n[27]=3,n[28]=4,n[29]=7,n[30]=0,n[31]=1,n[32]=5,n[33]=0,n[34]=5,n[35]=4;var y=t.subtract(d,c,h),C=.5*t.magnitude(y);return new a({attributes:p,indices:n,primitiveType:u.TRIANGLES,boundingSphere:new e(t.ZERO,C)})},d}),r("Core/BoxOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=new t,h=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.minimumCorner,n=e.maximumCorner;this._min=t.clone(r),this._max=t.clone(n),this._workerName="createBoxOutlineGeometry"};return h.fromDimensions=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.dimensions,n=t.multiplyByScalar(r,.5,new t),o=t.negate(n,new t),a=n,s={minimumCorner:o,maximumCorner:a};return new h(s)},h.createGeometry=function(i){var n=i._min,o=i._max,h=new l,d=new Uint16Array(24),m=new Float64Array(24);m[0]=n.x,m[1]=n.y,m[2]=n.z,m[3]=o.x,m[4]=n.y,m[5]=n.z,m[6]=o.x,m[7]=o.y,m[8]=n.z,m[9]=n.x,m[10]=o.y,m[11]=n.z,m[12]=n.x,m[13]=n.y,m[14]=o.z,m[15]=o.x,m[16]=n.y,m[17]=o.z,m[18]=o.x,m[19]=o.y,m[20]=o.z,m[21]=n.x,m[22]=o.y,m[23]=o.z,h.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:m}),d[0]=4,d[1]=5,d[2]=5,d[3]=6,d[4]=6,d[5]=7,d[6]=7,d[7]=4,d[8]=0,d[9]=1,d[10]=1,d[11]=2,d[12]=2,d[13]=3,d[14]=3,d[15]=0,d[16]=0,d[17]=4,d[18]=1,d[19]=5,d[20]=2,d[21]=6,d[22]=3,d[23]=7;var p=t.subtract(o,n,c),f=.5*t.magnitude(p);return new a({attributes:h,indices:d,primitiveType:u.LINES,boundingSphere:new e(t.ZERO,f)})},h}),r("Core/Cartesian4",["./defaultValue","./defined","./DeveloperError","./freezeObject"],function(e,t,r,i){"use strict";var n=function(t,r,i,n){this.x=e(t,0),this.y=e(r,0),this.z=e(i,0),this.w=e(n,0)};n.fromElements=function(e,r,i,o,a){return t(a)?(a.x=e,a.y=r,a.z=i,a.w=o,a):new n(e,r,i,o)},n.fromColor=function(e,r){return t(r)?(r.x=e.red,r.y=e.green,r.z=e.blue,r.w=e.alpha,r):new n(e.red,e.green,e.blue,e.alpha)},n.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r.z=e.z,r.w=e.w,r):new n(e.x,e.y,e.z,e.w):void 0},n.packedLength=4,n.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i++]=t.y,r[i++]=t.z,r[i]=t.w},n.unpack=function(r,i,o){return i=e(i,0),t(o)||(o=new n),o.x=r[i++],o.y=r[i++],o.z=r[i++],o.w=r[i],o},n.fromArray=n.unpack,n.maximumComponent=function(e){return Math.max(e.x,e.y,e.z,e.w)},n.minimumComponent=function(e){return Math.min(e.x,e.y,e.z,e.w)},n.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r.z=Math.min(e.z,t.z),r.w=Math.min(e.w,t.w),r},n.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r.z=Math.max(e.z,t.z),r.w=Math.max(e.w,t.w),r},n.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},n.magnitude=function(e){return Math.sqrt(n.magnitudeSquared(e))};var o=new n;n.distance=function(e,t){return n.subtract(e,t,o),n.magnitude(o)},n.normalize=function(e,t){var r=n.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t.z=e.z/r,t.w=e.w/r,t
},n.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},n.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r.w=e.w*t.w,r},n.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r.w=e.w+t.w,r},n.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r.w=e.w-t.w,r},n.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r.w=e.w*t,r},n.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r.w=e.w/t,r},n.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},n.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t.w=Math.abs(e.w),t};var a=new n;n.lerp=function(e,t,r,i){return n.multiplyByScalar(t,r,a),i=n.multiplyByScalar(e,1-r,i),n.add(a,i,i)};var s=new n;return n.mostOrthogonalAxis=function(e,t){var r=n.normalize(e,s);return n.abs(r,r),t=r.x<=r.y?r.x<=r.z?r.x<=r.w?n.clone(n.UNIT_X,t):n.clone(n.UNIT_W,t):r.z<=r.w?n.clone(n.UNIT_Z,t):n.clone(n.UNIT_W,t):r.y<=r.z?r.y<=r.w?n.clone(n.UNIT_Y,t):n.clone(n.UNIT_W,t):r.z<=r.w?n.clone(n.UNIT_Z,t):n.clone(n.UNIT_W,t)},n.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y&&e.z===r.z&&e.w===r.w},n.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i&&Math.abs(e.z-r.z)<=i&&Math.abs(e.w-r.w)<=i},n.ZERO=i(new n(0,0,0,0)),n.UNIT_X=i(new n(1,0,0,0)),n.UNIT_Y=i(new n(0,1,0,0)),n.UNIT_Z=i(new n(0,0,1,0)),n.UNIT_W=i(new n(0,0,0,1)),n.prototype.clone=function(e){return n.clone(this,e)},n.prototype.equals=function(e){return n.equals(this,e)},n.prototype.equalsEpsilon=function(e,t){return n.equalsEpsilon(this,e,t)},n.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},n}),r("Core/Spline",["./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(){this.times=void 0,this.points=void 0,r.throwInstantiationError()};return i.prototype.evaluate=r.throwInstantiationError,i.prototype.findTimeInterval=function(t,r){var i=this.times,n=i.length;if(r=e(r,0),t>=i[r]){if(n>r+1&&t<i[r+1])return r;if(n>r+2&&t<i[r+2])return r+1}else if(r-1>=0&&t>=i[r-1])return r-1;var o;if(t>i[r])for(o=r;n-1>o&&!(t>=i[o]&&t<i[o+1]);++o);else for(o=r-1;o>=0&&!(t>=i[o]&&t<i[o+1]);--o);return o===n-1&&(o=n-2),o},i}),r("Core/LinearSpline",["./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Spline"],function(e,t,r,i,n,o){"use strict";var a=function(e){e=t(e,t.EMPTY_OBJECT);var r=e.points,i=e.times;this._times=i,this._points=r,this._lastTimeIndex=0};return i(a.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}}}),a.prototype.findTimeInterval=o.prototype.findTimeInterval,a.prototype.evaluate=function(t,i){var n=this.points,o=this.times,a=this._lastTimeIndex=this.findTimeInterval(t,this._lastTimeIndex),s=(t-o[a])/(o[a+1]-o[a]);return r(i)||(i=new e),e.lerp(n[a],n[a+1],s,i)},a}),r("Core/TridiagonalSystemSolver",["./Cartesian3","./defined","./DeveloperError"],function(e){"use strict";var t={};return t.solve=function(t,r,i,n){var o,a=new Array(i.length),s=new Array(n.length),l=new Array(n.length);for(o=0;o<s.length;o++)s[o]=new e,l[o]=new e;a[0]=i[0]/r[0],s[0]=e.multiplyByScalar(n[0],1/r[0],s[0]);var u;for(o=1;o<a.length;++o)u=1/(r[o]-a[o-1]*t[o-1]),a[o]=i[o]*u,s[o]=e.subtract(n[o],e.multiplyByScalar(s[o-1],t[o-1],s[o]),s[o]),s[o]=e.multiplyByScalar(s[o],u,s[o]);for(u=1/(r[o]-a[o-1]*t[o-1]),s[o]=e.subtract(n[o],e.multiplyByScalar(s[o-1],t[o-1],s[o]),s[o]),s[o]=e.multiplyByScalar(s[o],u,s[o]),l[l.length-1]=s[s.length-1],o=l.length-2;o>=0;--o)l[o]=e.subtract(s[o],e.multiplyByScalar(l[o+1],a[o],l[o]),l[o]);return l},t}),r("Core/HermiteSpline",["./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./LinearSpline","./Matrix4","./Spline","./TridiagonalSystemSolver"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(t,r,n){var o=d,a=p,s=m,l=f;o.length=a.length=t.length-1,s.length=l.length=t.length;var c;o[0]=s[0]=1,a[0]=0;var h=l[0];for(i(h)||(h=l[0]=new e),e.clone(r,h),c=1;c<o.length-1;++c)o[c]=a[c]=1,s[c]=4,h=l[c],i(h)||(h=l[c]=new e),e.subtract(t[c+1],t[c-1],h),e.multiplyByScalar(h,3,h);return o[c]=0,a[c]=1,s[c]=4,h=l[c],i(h)||(h=l[c]=new e),e.subtract(t[c+1],t[c-1],h),e.multiplyByScalar(h,3,h),s[c+1]=1,h=l[c+1],i(h)||(h=l[c+1]=new e),e.clone(n,h),u.solve(o,s,a,l)}function h(t){var r=d,n=p,o=m,a=f;r.length=n.length=t.length-1,o.length=a.length=t.length;var s;r[0]=n[0]=1,o[0]=2;var l=a[0];for(i(l)||(l=a[0]=new e),e.subtract(t[1],t[0],l),e.multiplyByScalar(l,3,l),s=1;s<r.length;++s)r[s]=n[s]=1,o[s]=4,l=a[s],i(l)||(l=a[s]=new e),e.subtract(t[s+1],t[s-1],l),e.multiplyByScalar(l,3,l);return o[s]=2,l=a[s],i(l)||(l=a[s]=new e),e.subtract(t[s],t[s-1],l),e.multiplyByScalar(l,3,l),u.solve(r,o,n,a)}var d=[],m=[],p=[],f=[],v=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.points,i=e.times,n=e.inTangents,o=e.outTangents;this._times=i,this._points=t,this._inTangents=n,this._outTangents=o,this._lastTimeIndex=0};n(v.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},inTangents:{get:function(){return this._inTangents}},outTangents:{get:function(){return this._outTangents}}}),v.createC1=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points,n=e.tangents,o=n.slice(0,n.length-1),a=n.slice(1,n.length);return new v({times:t,points:i,inTangents:a,outTangents:o})},v.createNaturalCubic=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points;if(i.length<3)return new a({points:i,times:t});var n=h(i),o=n.slice(0,n.length-1),s=n.slice(1,n.length);return new v({times:t,points:i,inTangents:s,outTangents:o})},v.createClampedCubic=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points,n=e.firstTangent,o=e.lastTangent;if(i.length<3)return new a({points:i,times:t});var s=c(i,n,o),l=s.slice(0,s.length-1),u=s.slice(1,s.length);return new v({times:t,points:i,inTangents:u,outTangents:l})},v.hermiteCoefficientMatrix=new s(2,-3,0,1,-2,3,0,0,1,-2,1,0,1,-1,0,0),v.prototype.findTimeInterval=l.prototype.findTimeInterval;var g=new t,_=new e;return v.prototype.evaluate=function(t,r){i(r)||(r=new e);var n=this.points,o=this.times,a=this.inTangents,l=this.outTangents,u=this._lastTimeIndex=this.findTimeInterval(t,this._lastTimeIndex),c=(t-o[u])/(o[u+1]-o[u]),h=g;h.z=c,h.y=c*c,h.x=h.y*c,h.w=1;var d=s.multiplyByVector(v.hermiteCoefficientMatrix,h,h);return r=e.multiplyByScalar(n[u],d.x,r),e.multiplyByScalar(n[u+1],d.y,_),e.add(r,_,r),e.multiplyByScalar(l[u],d.z,_),e.add(r,_,r),e.multiplyByScalar(a[u],d.w,_),e.add(r,_,r)},v}),r("Core/CatmullRomSpline",["./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./HermiteSpline","./Matrix4","./Spline"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(t){var r=t.points,n=t.times;if(r.length<3){var o=n[0],l=1/(n[1]-o),u=r[0],m=r[1];return function(t,r){i(r)||(r=new e);var n=(t-o)*l;return e.lerp(u,m,n,r)}}return function(o,l){i(l)||(l=new e);var u=t._lastTimeIndex=t.findTimeInterval(o,t._lastTimeIndex),m=(o-n[u])/(n[u+1]-n[u]),p=c;p.z=m,p.y=m*m,p.x=p.y*m,p.w=1;var v,g,_,y,C;return 0===u?(v=r[0],g=r[1],_=t.firstTangent,y=e.subtract(r[2],v,h),e.multiplyByScalar(y,.5,y),C=s.multiplyByVector(a.hermiteCoefficientMatrix,p,p)):u===r.length-2?(v=r[u],g=r[u+1],y=t.lastTangent,_=e.subtract(g,r[u-1],h),e.multiplyByScalar(_,.5,_),C=s.multiplyByVector(a.hermiteCoefficientMatrix,p,p)):(v=r[u-1],g=r[u],_=r[u+1],y=r[u+2],C=s.multiplyByVector(f.catmullRomCoefficientMatrix,p,p)),l=e.multiplyByScalar(v,C.x,l),e.multiplyByScalar(g,C.y,d),e.add(l,d,l),e.multiplyByScalar(_,C.z,d),e.add(l,d,l),e.multiplyByScalar(y,C.w,d),e.add(l,d,l)}}var c=new t,h=new e,d=new e,m=new e,p=new e,f=function(t){t=r(t,r.EMPTY_OBJECT);var n=t.points,o=t.times,a=t.firstTangent,s=t.lastTangent;if(n.length>2&&(i(a)||(a=m,e.multiplyByScalar(n[1],2,a),e.subtract(a,n[2],a),e.subtract(a,n[0],a),e.multiplyByScalar(a,.5,a)),!i(s))){var l=n.length-1;s=p,e.multiplyByScalar(n[l-1],2,s),e.subtract(n[l],s,s),e.add(s,n[l-2],s),e.multiplyByScalar(s,.5,s)}this._times=o,this._points=n,this._firstTangent=e.clone(a),this._lastTangent=e.clone(s),this._evaluateFunction=u(this),this._lastTimeIndex=0};return n(f.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},firstTangent:{get:function(){return this._firstTangent}},lastTangent:{get:function(){return this._lastTangent}}}),f.catmullRomCoefficientMatrix=new s(-.5,1,-.5,0,1.5,-2.5,0,1,-1.5,2,.5,0,.5,-.5,0,0),f.prototype.findTimeInterval=l.prototype.findTimeInterval,f.prototype.evaluate=function(e,t){return this._evaluateFunction(e,t)},f}),r("Core/parseResponseHeaders",[],function(){"use strict";var e=function(e){var t={};if(!e)return t;for(var r=e.split("\r\n"),i=0;i<r.length;++i){var n=r[i],o=n.indexOf(": ");if(o>0){var a=n.substring(0,o),s=n.substring(o+2);t[a]=s}}return t};return e}),r("Core/RequestErrorEvent",["./defined","./parseResponseHeaders"],function(e,t){"use strict";var r=function(e,r,i){this.statusCode=e,this.response=r,this.responseHeaders=i,"string"==typeof this.responseHeaders&&(this.responseHeaders=t(this.responseHeaders))};return r.prototype.toString=function(){var t="Request has failed.";return e(this.statusCode)&&(t+=" Status Code: "+this.statusCode),t},r}),r("Core/loadWithXhr",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError","./RequestErrorEvent","./RuntimeError"],function(e,t,r,i,n,o){"use strict";function a(e,t){var r=decodeURIComponent(t);return e?atob(r):r}function s(e,t){for(var r=a(e,t),i=new ArrayBuffer(r.length),n=new Uint8Array(i),o=0;o<r.length;o++)n[o]=r.charCodeAt(o);return i}function l(e,r){r=t(r,"");var n=e[1],o=!!e[2],l=e[3];switch(r){case"":case"text":return a(o,l);case"arraybuffer":return s(o,l);case"blob":var u=s(o,l);return new Blob([u],{type:n});case"document":var c=new DOMParser;return c.parseFromString(a(o,l),n);case"json":return JSON.parse(a(o,l));default:throw new i("Unhandled responseType: "+r)}}var u=function(r){r=t(r,t.EMPTY_OBJECT);var i=r.responseType,n=t(r.method,"GET"),o=r.data,a=r.headers,s=r.overrideMimeType;return e(r.url,function(t){var r=e.defer();return u.load(t,i,n,o,a,r,s),r.promise})},c=/^data:(.*?)(;base64)?,(.*)$/;return u.load=function(e,t,i,a,s,u,h){var d=c.exec(e);if(null!==d)return u.resolve(l(d,t)),void 0;var m=new XMLHttpRequest;if(r(h)&&r(m.overrideMimeType)&&m.overrideMimeType(h),m.open(i,e,!0),r(s))for(var p in s)s.hasOwnProperty(p)&&m.setRequestHeader(p,s[p]);r(t)&&(m.responseType=t),m.onload=function(){200===m.status?r(m.response)?u.resolve(m.response):r(m.responseXML)&&m.responseXML.hasChildNodes()?u.resolve(m.responseXML):r(m.responseText)?u.resolve(m.responseText):u.reject(new o("unknown XMLHttpRequest response type.")):u.reject(new n(m.status,m.response,m.getAllResponseHeaders()))},m.onerror=function(){u.reject(new n)},m.send(a)},u.defaultLoad=u.load,u}),r("Core/loadArrayBuffer",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"arraybuffer",headers:r})};return t}),r("Core/clone",["./defaultValue"],function(e){"use strict";var t=function(r,i){if(null===r||"object"!=typeof r)return r;i=e(i,!1);var n=new r.constructor;for(var o in r)if(r.hasOwnProperty(o)){var a=r[o];i&&(a=t(a,i)),n[o]=a}return n};return t}),r("Core/loadText",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,headers:r})};return t}),r("Core/loadJson",["./clone","./defined","./DeveloperError","./loadText"],function(e,t,r,i){"use strict";var n={Accept:"application/json,*/*;q=0.01"},o=function(r,o){return t(o)?t(o.Accept)||(o=e(o),o.Accept=n.Accept):o=n,i(r,o).then(function(e){return JSON.parse(e)})};return o}),r("Core/Intersections2D",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r={};return r.clipTriangleAtAxisAlignedThreshold=function(e,r,i,n,o,a){t(a)?a.length=0:a=[];var s,l,u;r?(s=e>i,l=e>n,u=e>o):(s=i>e,l=n>e,u=o>e);var c,h,d,m,p,f,v=s+l+u;return 1===v?s?(c=(e-i)/(n-i),h=(e-i)/(o-i),a.push(1),a.push(2),1!==h&&(a.push(-1),a.push(0),a.push(2),a.push(h)),1!==c&&(a.push(-1),a.push(0),a.push(1),a.push(c))):l?(d=(e-n)/(o-n),m=(e-n)/(i-n),a.push(2),a.push(0),1!==m&&(a.push(-1),a.push(1),a.push(0),a.push(m)),1!==d&&(a.push(-1),a.push(1),a.push(2),a.push(d))):u&&(p=(e-o)/(i-o),f=(e-o)/(n-o),a.push(0),a.push(1),1!==f&&(a.push(-1),a.push(2),a.push(1),a.push(f)),1!==p&&(a.push(-1),a.push(2),a.push(0),a.push(p))):2===v?s||i===e?l||n===e?u||o===e||(h=(e-i)/(o-i),d=(e-n)/(o-n),a.push(2),a.push(-1),a.push(0),a.push(2),a.push(h),a.push(-1),a.push(1),a.push(2),a.push(d)):(f=(e-o)/(n-o),c=(e-i)/(n-i),a.push(1),a.push(-1),a.push(2),a.push(1),a.push(f),a.push(-1),a.push(0),a.push(1),a.push(c)):(m=(e-n)/(i-n),p=(e-o)/(i-o),a.push(0),a.push(-1),a.push(1),a.push(0),a.push(m),a.push(-1),a.push(2),a.push(0),a.push(p)):3===v||(a.push(0),a.push(1),a.push(2)),a},r.computeBarycentricCoordinates=function(r,i,n,o,a,s,l,u,c){var h=n-l,d=l-a,m=s-u,p=o-u,f=1/(m*h+d*p),v=i-u,g=r-l,_=(m*g+d*v)*f,y=(-p*g+h*v)*f,C=1-_-y;return t(c)?(c.x=_,c.y=y,c.z=C,c):new e(_,y,C)},r}),r("Core/QuantizedMeshTerrainData",["../ThirdParty/when","./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Intersections2D","./Math","./TaskProcessor","./TerrainMesh"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t){m.length=e.length;for(var r=!1,i=0,n=e.length;n>i;++i)m[i]=e[i],r=r||i>0&&t(e[i-1],e[i])>0;return r?(m.sort(t),new Uint16Array(m)):e}var d=function(e){function t(e,t){return a[e]-a[t]}function r(e,t){return o[e]-o[t]}this._quantizedVertices=e.quantizedVertices,this._encodedNormals=e.encodedNormals,this._indices=e.indices,this._minimumHeight=e.minimumHeight,this._maximumHeight=e.maximumHeight,this._boundingSphere=e.boundingSphere,this._horizonOcclusionPoint=e.horizonOcclusionPoint;var n=this._quantizedVertices.length/3,o=this._uValues=this._quantizedVertices.subarray(0,n),a=this._vValues=this._quantizedVertices.subarray(n,2*n);this._heightValues=this._quantizedVertices.subarray(2*n,3*n),this._westIndices=h(e.westIndices,t),this._southIndices=h(e.southIndices,r),this._eastIndices=h(e.eastIndices,t),this._northIndices=h(e.northIndices,r),this._westSkirtHeight=e.westSkirtHeight,this._southSkirtHeight=e.southSkirtHeight,this._eastSkirtHeight=e.eastSkirtHeight,this._northSkirtHeight=e.northSkirtHeight,this._childTileMask=i(e.childTileMask,15),this._createdByUpsampling=i(e.createdByUpsampling,!1),this._waterMask=e.waterMask};o(d.prototype,{waterMask:{get:function(){return this._waterMask}}});var m=[],p=new u("createVerticesFromQuantizedTerrainMesh");d.prototype.createMesh=function(t,r,i,o){var a=t.ellipsoid,s=t.tileXYToRectangle(r,i,o),l=p.scheduleTask({minimumHeight:this._minimumHeight,maximumHeight:this._maximumHeight,quantizedVertices:this._quantizedVertices,octEncodedNormals:this._encodedNormals,indices:this._indices,westIndices:this._westIndices,southIndices:this._southIndices,eastIndices:this._eastIndices,northIndices:this._northIndices,westSkirtHeight:this._westSkirtHeight,southSkirtHeight:this._southSkirtHeight,eastSkirtHeight:this._eastSkirtHeight,northSkirtHeight:this._northSkirtHeight,rectangle:s,relativeToCenter:this._boundingSphere.center,ellipsoid:a});if(!n(l))return void 0;var u=this;return e(l,function(e){return new c(u._boundingSphere.center,new Float32Array(e.vertices),new Uint16Array(e.indices),u._minimumHeight,u._maximumHeight,u._boundingSphere,u._horizonOcclusionPoint)})};var f=new u("upsampleQuantizedTerrainMesh");d.prototype.upsample=function(i,o,a,s,l,u,c){var h=2*o!==l,m=2*a===u,p=i.ellipsoid,v=i.tileXYToRectangle(l,u,c),g=f.scheduleTask({vertices:this._quantizedVertices,indices:this._indices,encodedNormals:this._encodedNormals,minimumHeight:this._minimumHeight,maximumHeight:this._maximumHeight,isEastChild:h,isNorthChild:m,childRectangle:v,ellipsoid:p});if(!n(g))return void 0;var _=Math.min(this._westSkirtHeight,this._eastSkirtHeight);_=Math.min(_,this._southSkirtHeight),_=Math.min(_,this._northSkirtHeight);var y=h?.5*_:this._westSkirtHeight,C=m?.5*_:this._southSkirtHeight,w=h?this._eastSkirtHeight:.5*_,S=m?this._northSkirtHeight:.5*_;return e(g,function(e){var i;return n(e.encodedNormals)&&(i=new Uint8Array(e.encodedNormals)),new d({quantizedVertices:new Uint16Array(e.vertices),indices:new Uint16Array(e.indices),encodedNormals:i,minimumHeight:e.minimumHeight,maximumHeight:e.maximumHeight,boundingSphere:t.clone(e.boundingSphere),horizonOcclusionPoint:r.clone(e.horizonOcclusionPoint),westIndices:e.westIndices,southIndices:e.southIndices,eastIndices:e.eastIndices,northIndices:e.northIndices,westSkirtHeight:y,southSkirtHeight:C,eastSkirtHeight:w,northSkirtHeight:S,childTileMask:0,createdByUpsampling:!0})})};var v=32767,g=new r;return d.prototype.interpolateHeight=function(e,t,r){var i=(t-e.west)/(e.east-e.west);i*=v;var n=(r-e.south)/(e.north-e.south);n*=v;for(var o=this._uValues,a=this._vValues,u=this._heightValues,c=this._indices,h=0,d=c.length;d>h;h+=3){var m=c[h],p=c[h+1],f=c[h+2],_=o[m],y=o[p],C=o[f],w=a[m],S=a[p],E=a[f],b=s.computeBarycentricCoordinates(i,n,_,w,y,S,C,E,g);if(b.x>=-1e-15&&b.y>=-1e-15&&b.z>=-1e-15){var T=b.x*u[m]+b.y*u[p]+b.z*u[f];return l.lerp(this._minimumHeight,this._maximumHeight,T/v)}}return void 0},d.prototype.isChildAvailable=function(e,t,r,i){var n=2;return r!==2*e&&++n,i!==2*t&&(n-=2),0!==(this._childTileMask&1<<n)},d.prototype.wasCreatedByUpsampling=function(){return this._createdByUpsampling},d}),r("Core/formatError",["./defined"],function(e){"use strict";var t=function(t){var r,i=t.name,n=t.message;r=e(i)&&e(n)?i+": "+n:t.toString();var o=t.stack;return e(o)&&(r+="\n"+o),r};return t}),r("Core/TileProviderError",["./defaultValue","./defined","./formatError"],function(e,t,r){"use strict";var i=function(t,r,i,n,o,a){this.provider=t,this.message=r,this.x=i,this.y=n,this.level=o,this.timesRetried=e(a,0),this.retry=!1};return i.handleError=function(e,n,o,a,s,l,u,c){var h=e;return t(e)?(h.provider=n,h.message=a,h.x=s,h.y=l,h.level=u,h.retry=!1,++h.timesRetried):h=new i(n,a,s,l,u,0),o.numberOfListeners>0?o.raiseEvent(h):console.log('An error occurred in "'+n.constructor.name+'": '+r(a)),h.retry&&t(c)&&c(),h},i.handleSuccess=function(e){t(e)&&(e.timesRetried=-1)},i}),r("Core/CesiumTerrainProvider",["../ThirdParty/Uri","../ThirdParty/when","./BoundingSphere","./Cartesian3","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Event","./GeographicTilingScheme","./HeightmapTerrainData","./loadArrayBuffer","./loadJson","./QuantizedMeshTerrainData","./RuntimeError","./TerrainProvider","./throttleRequestByServer","./TileProviderError"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e){return d(e,P)}function C(e){return d(e,A)}function w(e,t){var r=new Uint16Array(t,0,e._heightmapWidth*e._heightmapWidth);return new h({buffer:r,childTileMask:new Uint8Array(t,r.byteLength,1)[0],waterMask:new Uint8Array(t,r.byteLength+1,t.byteLength-r.byteLength-1),width:e._heightmapWidth,height:e._heightmapWidth,structure:e._heightmapStructure})}function S(e,t,n,o,a,s){function l(e){return e>>1^-(1&e)}var u=0,c=3,h=c+1,d=Float64Array.BYTES_PER_ELEMENT*c,m=Float64Array.BYTES_PER_ELEMENT*h,v=3,g=Uint16Array.BYTES_PER_ELEMENT*v,_=3,y=Uint16Array.BYTES_PER_ELEMENT*_,C=new DataView(t),w=new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0));u+=d;var S=C.getFloat32(u,!0);u+=Float32Array.BYTES_PER_ELEMENT;var b=C.getFloat32(u,!0);u+=Float32Array.BYTES_PER_ELEMENT;var T=new r(new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0)),C.getFloat64(u+d,!0));u+=m;var P=new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0));u+=d;var A=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var M=new Uint16Array(t,u,3*A);if(u+=A*g,A>65536)throw new f("CesiumTerrainProvider currently does not support tiles with more than 65536 vertices.");var D,I=M.subarray(0,A),R=M.subarray(A,2*A),O=M.subarray(2*A,3*A),L=0,N=0,B=0;for(D=0;A>D;++D)L+=l(I[D]),N+=l(R[D]),B+=l(O[D]),I[D]=L,R[D]=N,O[D]=B;var F=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var z=new Uint16Array(t,u,F*_);u+=F*y;var V=0;for(D=0;D<z.length;++D){var k=z[D];z[D]=V-k,0===k&&++V}var U=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var W=new Uint16Array(t,u,U);u+=U*Uint16Array.BYTES_PER_ELEMENT;var G=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var H=new Uint16Array(t,u,G);u+=G*Uint16Array.BYTES_PER_ELEMENT;var q=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var j=new Uint16Array(t,u,q);u+=q*Uint16Array.BYTES_PER_ELEMENT;var Y=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var X=new Uint16Array(t,u,Y);u+=Y*Uint16Array.BYTES_PER_ELEMENT;for(var Z;u<C.byteLength;){var Q=C.getUint8(u);u+=Uint8Array.BYTES_PER_ELEMENT;var J=C.getUint32(u);u+=Uint32Array.BYTES_PER_ELEMENT,Q===x.OCT_VERTEX_NORMALS&&(Z=new Uint8Array(t,u,2*A)),u+=J}var K=5*e.getLevelMaximumGeometricError(n);return new p({center:w,minimumHeight:S,maximumHeight:b,boundingSphere:T,horizonOcclusionPoint:P,quantizedVertices:M,encodedNormals:Z,indices:z,westIndices:W,southIndices:H,eastIndices:j,northIndices:X,westSkirtHeight:K,southSkirtHeight:K,eastSkirtHeight:K,northSkirtHeight:K,childTileMask:E(e,n,o,s)})}function E(e,t,r,i){var n=e._availableTiles;if(!n||0===n.length)return 15;var o=t+1;if(o>=n.length)return 0;var a=n[o],s=0;return s|=b(a,2*r,2*i)?1:0,s|=b(a,2*r+1,2*i)?2:0,s|=b(a,2*r,2*i+1)?4:0,s|=b(a,2*r+1,2*i+1)?8:0}function b(e,t,r){for(var i=0,n=e.length;n>i;++i){var o=e[i];if(t>=o.startX&&t<=o.endX&&r>=o.startY&&r<=o.endY)return!0}return!1}var T=function(r){function i(t){var r;if(!t.format)return r="The tile format is not specified in the layer.json file.",p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;if(!t.tiles||0===t.tiles.length)return r="The layer.json file does not specify any tile URL templates.",p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;if("heightmap-1.0"===t.format)f._heightmapStructure={heightScale:.2,heightOffset:-1e3,elementsPerHeight:1,stride:1,elementMultiplier:256,isBigEndian:!1},f._hasWaterMask=!0;else{if(0!==t.format.indexOf("quantized-mesh-1."))return r='The tile format "'+t.format+'" is invalid or not supported.',p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;f._hasWaterMask=!1}var i=new e(d);f._tileUrlTemplates=t.tiles;for(var o=0;o<f._tileUrlTemplates.length;++o)f._tileUrlTemplates[o]=new e(f._tileUrlTemplates[o]).resolve(i).toString().replace("{version}",t.version);f._availableTiles=t.available,!a(f._credit)&&a(t.attribution)&&null!==t.attribution&&(f._credit=new n(t.attribution)),a(t.extensions)&&-1!==t.extensions.indexOf("vertexnormals")&&(f._hasVertexNormals=!0),f._ready=!0}function s(e){if(a(e)&&404===e.statusCode)return i({tilejson:"2.1.0",format:"heightmap-1.0",version:"1.0.0",scheme:"tms",tiles:["{z}/{x}/{y}.terrain?v={version}"]}),void 0;var t="An error occurred while accessing "+d+".";p=_.handleError(p,f,f._errorEvent,t,void 0,void 0,void 0,l)}function l(){var e=m(d);t(e,i,s)}this._url=r.url,(0===this._url.length||"/"!==this._url[this._url.length-1])&&(this._url=this._url+"/"),this._proxy=r.proxy,this._tilingScheme=new c({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:1}),this._heightmapWidth=65,this._levelZeroMaximumGeometricError=v.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,this._heightmapWidth,this._tilingScheme.getNumberOfXTilesAtLevel(0)),this._heightmapStructure=void 0,this._hasWaterMask=!1,this._hasVertexNormals=!1,this._requestVertexNormals=o(r.requestVertexNormals,!1),this._errorEvent=new u;var h=r.credit;"string"==typeof h&&(h=new n(h)),this._credit=h,this._ready=!1;var d=this._url+"layer.json";a(this._proxy)&&(d=this._proxy.getURL(d));var p,f=this;l()},x={OCT_VERTEX_NORMALS:1},P={Accept:"application/vnd.quantized-mesh;extensions=vertexnormals,application/octet-stream;q=0.9,*/*;q=0.01"},A={Accept:"application/vnd.quantized-mesh,application/octet-stream;q=0.9,*/*;q=0.01"};return T.prototype.requestTileGeometry=function(e,r,i,n){var s=this._tileUrlTemplates;if(0===s.length)return void 0;var l=this._tilingScheme.getNumberOfYTilesAtLevel(i),u=l-r-1,c=s[0].replace("{z}",i).replace("{x}",e).replace("{y}",u),h=this._proxy;a(h)&&(c=h.getURL(c));var d,m=C;if(this._requestVertexNormals&&this._hasVertexNormals&&(m=y),n=o(n,!0)){if(d=g(c,m),!a(d))return void 0}else d=m(c);var p=this;return t(d,function(t){return a(p._heightmapStructure)?w(p,t,i,e,r,u):S(p,t,i,e,r,u)})},s(T.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return this._ready}},hasWaterMask:{get:function(){return this._hasWaterMask}},hasVertexNormals:{get:function(){return this._hasVertexNormals&&this._requestVertexNormals}},requestVertexNormals:{get:function(){return this._requestVertexNormals}}}),T.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},T.prototype.getTileDataAvailable=function(e,t,r){var i=this._availableTiles;if(i&&0!==i.length){if(r>=i.length)return!1;var n=i[r],o=this._tilingScheme.getNumberOfYTilesAtLevel(r),a=o-t-1;return b(n,e,a)}return void 0},T}),r("Core/Quaternion",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./Math","./Matrix3"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,r,i,n){this.x=t(e,0),this.y=t(r,0),this.z=t(i,0),this.w=t(n,0)},u=new e;l.fromAxisAngle=function(t,i,n){var o=i/2,a=Math.sin(o);u=e.normalize(t,u);var s=u.x*a,c=u.y*a,h=u.z*a,d=Math.cos(o);return r(n)?(n.x=s,n.y=c,n.z=h,n.w=d,n):new l(s,c,h,d)};var c=[1,2,0],h=new Array(3);l.fromRotationMatrix=function(e,t){var i,n,o,a,u,d=e[s.COLUMN0ROW0],m=e[s.COLUMN1ROW1],p=e[s.COLUMN2ROW2],f=d+m+p;if(f>0)i=Math.sqrt(f+1),u=.5*i,i=.5/i,n=(e[s.COLUMN1ROW2]-e[s.COLUMN2ROW1])*i,o=(e[s.COLUMN2ROW0]-e[s.COLUMN0ROW2])*i,a=(e[s.COLUMN0ROW1]-e[s.COLUMN1ROW0])*i;else{var v=c,g=0;m>d&&(g=1),p>d&&p>m&&(g=2);var _=v[g],y=v[_];i=Math.sqrt(e[s.getElementIndex(g,g)]-e[s.getElementIndex(_,_)]-e[s.getElementIndex(y,y)]+1);var C=h;C[g]=.5*i,i=.5/i,u=(e[s.getElementIndex(y,_)]-e[s.getElementIndex(_,y)])*i,C[_]=(e[s.getElementIndex(_,g)]+e[s.getElementIndex(g,_)])*i,C[y]=(e[s.getElementIndex(y,g)]+e[s.getElementIndex(g,y)])*i,n=-C[0],o=-C[1],a=-C[2]}return r(t)?(t.x=n,t.y=o,t.z=a,t.w=u,t):new l(n,o,a,u)};var d=new e,m=new e,p=new l,f=new l,v=new l;l.packedLength=4,l.pack=function(e,r,i){i=t(i,0),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i]=e.w},l.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new l),n.x=e[i],n.y=e[i+1],n.z=e[i+2],n.w=e[i+3],n},l.packedInterpolationLength=3,l.convertPackedArrayForInterpolation=function(e,t,r,i){l.unpack(e,4*r,v),l.conjugate(v,v);for(var n=0,o=r-t+1;o>n;n++){var a=3*n;l.unpack(e,4*(t+n),p),l.multiply(p,v,p),p.w<0&&l.negate(p,p),l.computeAxis(p,d);var s=l.computeAngle(p);i[a]=d.x*s,i[a+1]=d.y*s,i[a+2]=d.z*s}},l.unpackInterpolationResult=function(t,i,n,o,a){r(a)||(a=new l),e.fromArray(t,0,m);var s=e.magnitude(m);return l.unpack(i,4*o,f),0===s?l.clone(l.IDENTITY,p):l.fromAxisAngle(m,s,p),l.multiply(p,f,a)},l.clone=function(e,t){return r(e)?r(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t):new l(e.x,e.y,e.z,e.w):void 0},l.conjugate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=e.w,t},l.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},l.magnitude=function(e){return Math.sqrt(l.magnitudeSquared(e))},l.normalize=function(e,t){var r=1/l.magnitude(e),i=e.x*r,n=e.y*r,o=e.z*r,a=e.w*r;return t.x=i,t.y=n,t.z=o,t.w=a,t},l.inverse=function(e,t){var r=l.magnitudeSquared(e);return t=l.conjugate(e,t),l.multiplyByScalar(t,1/r,t)},l.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r.w=e.w+t.w,r},l.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r.w=e.w-t.w,r},l.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},l.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},l.multiply=function(e,t,r){var i=e.x,n=e.y,o=e.z,a=e.w,s=t.x,l=t.y,u=t.z,c=t.w,h=a*s+i*c+n*u-o*l,d=a*l-i*u+n*c+o*s,m=a*u+i*l-n*s+o*c,p=a*c-i*s-n*l-o*u;return r.x=h,r.y=d,r.z=m,r.w=p,r},l.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r.w=e.w*t,r},l.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r.w=e.w/t,r},l.computeAxis=function(e,t){var r=e.w;if(Math.abs(r-1)<a.EPSILON6)return t.x=t.y=t.z=0,t;var i=1/Math.sqrt(1-r*r);return t.x=e.x*i,t.y=e.y*i,t.z=e.z*i,t},l.computeAngle=function(e){return Math.abs(e.w-1)<a.EPSILON6?0:2*Math.acos(e.w)};var g=new l;l.lerp=function(e,t,r,i){return g=l.multiplyByScalar(t,r,g),i=l.multiplyByScalar(e,1-r,i),l.add(g,i,i)};var _=new l,y=new l,C=new l;l.slerp=function(e,t,r,i){var n=l.dot(e,t),o=t;if(0>n&&(n=-n,o=_=l.negate(t,_)),1-n<a.EPSILON6)return l.lerp(e,o,r,i);var s=Math.acos(n);return y=l.multiplyByScalar(e,Math.sin((1-r)*s),y),C=l.multiplyByScalar(o,Math.sin(r*s),C),i=l.add(y,C,i),l.multiplyByScalar(i,1/Math.sin(s),i)},l.log=function(t,r){var i=a.acosClamped(t.w),n=0;return 0!==i&&(n=i/Math.sin(i)),e.multiplyByScalar(t,n,r)},l.exp=function(t,r){var i=e.magnitude(t),n=0;return 0!==i&&(n=Math.sin(i)/i),r.x=t.x*n,r.y=t.y*n,r.z=t.z*n,r.w=Math.cos(i),r};var w=new e,S=new e,E=new l,b=new l;l.computeInnerQuadrangle=function(t,r,i,n){var o=l.conjugate(r,E);l.multiply(o,i,b);var a=l.log(b,w);l.multiply(o,t,b);var s=l.log(b,S);return e.add(a,s,a),e.multiplyByScalar(a,.25,a),e.negate(a,a),l.exp(a,E),l.multiply(r,E,n)},l.squad=function(e,t,r,i,n,o){var a=l.slerp(e,t,n,E),s=l.slerp(r,i,n,b);return l.slerp(a,s,2*n*(1-n),o)};for(var T=new l,x=1.9011074535173003,P=n.supportsTypedArrays()?new Float32Array(8):[],A=n.supportsTypedArrays()?new Float32Array(8):[],M=n.supportsTypedArrays()?new Float32Array(8):[],D=n.supportsTypedArrays()?new Float32Array(8):[],I=0;7>I;++I){var R=I+1,O=2*R+1;P[I]=1/(R*O),A[I]=R/O}return P[7]=x/136,A[7]=8*x/17,l.fastSlerp=function(e,t,r,i){var n,o=l.dot(e,t);o>=0?n=1:(n=-1,o=-o);for(var a=o-1,s=1-r,u=r*r,c=s*s,h=7;h>=0;--h)M[h]=(P[h]*u-A[h])*a,D[h]=(P[h]*c-A[h])*a;var d=n*r*(1+M[0]*(1+M[1]*(1+M[2]*(1+M[3]*(1+M[4]*(1+M[5]*(1+M[6]*(1+M[7])))))))),m=s*(1+D[0]*(1+D[1]*(1+D[2]*(1+D[3]*(1+D[4]*(1+D[5]*(1+D[6]*(1+D[7])))))))),p=l.multiplyByScalar(e,m,T);return l.multiplyByScalar(t,d,i),l.add(p,i,i)},l.fastSquad=function(e,t,r,i,n,o){var a=l.fastSlerp(e,t,n,E),s=l.fastSlerp(r,i,n,b);return l.fastSlerp(a,s,2*n*(1-n),o)},l.equals=function(e,t){return e===t||r(e)&&r(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},l.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e.x-t.x)<=i&&Math.abs(e.y-t.y)<=i&&Math.abs(e.z-t.z)<=i&&Math.abs(e.w-t.w)<=i},l.ZERO=o(new l(0,0,0,0)),l.IDENTITY=o(new l(0,0,0,1)),l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l.prototype.equalsEpsilon=function(e,t){return l.equalsEpsilon(this,e,t)},l.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},l}),r("Core/EllipseGeometryLibrary",["./Cartesian3","./Math","./Matrix3","./Quaternion"],function(e,t,r,i){"use strict";function n(t,n,o,c,h,d,m,p,f,v){var g=t+n;e.multiplyByScalar(c,Math.cos(g),a),e.multiplyByScalar(o,Math.sin(g),s),e.add(a,s,a);var _=Math.cos(t);_*=_;var y=Math.sin(t);y*=y;var C=d/Math.sqrt(m*_+h*y),w=C/p;return i.fromAxisAngle(a,w,l),r.fromQuaternion(l,u),r.multiplyByVector(u,f,v),e.normalize(v,v),e.multiplyByScalar(v,p,v),v}var o={},a=new e,s=new e,l=new i,u=new r,c=new e,h=new e,d=new e,m=new e;o.raisePositionsToHeight=function(t,r,i){for(var n=r.ellipsoid,o=r.height,a=r.extrudedHeight,s=i?2*(t.length/3):t.length/3,l=new Float64Array(3*s),u=m,p=t.length,f=i?p:0,v=0;p>v;v+=3){var g,_=v+1,y=v+2,C=e.fromArray(t,v,c);C=n.scaleToGeodeticSurface(C,C),g=e.clone(C,h),u=n.geodeticSurfaceNormal(C,u);var w=e.multiplyByScalar(u,o,d);C=e.add(C,w,C),i&&(w=e.multiplyByScalar(u,a,w),g=e.add(g,w,g),l[v+f]=g.x,l[_+f]=g.y,l[y+f]=g.z),l[v]=C.x,l[_]=C.y,l[y]=C.z
}return l};var p=new e,f=new e,v=new e;return o.computeEllipsePositions=function(r,i,o){var a=r.semiMinorAxis,s=r.semiMajorAxis,l=r.rotation,u=r.center,m=r.granularity,g=2.31,_=a*a,y=s*s,C=s*a,w=e.magnitude(u),S=e.normalize(u,p),E=e.cross(e.UNIT_Z,u,f);E=e.normalize(E,E);var b,T,x,P,A,M=e.cross(S,E,v),D=1+Math.ceil(t.PI_OVER_TWO/m),I=g/(D-1),R=2*D*(D+1),O=i?new Array(3*R):void 0,L=0,N=c,B=h,F=o?[]:void 0,z=o?[]:void 0,V=t.PI_OVER_TWO;for(b=0;D>b&&V>0;++b){if(N=n(V,l,M,E,_,C,y,w,S,N),B=n(Math.PI-V,l,M,E,_,C,y,w,S,B),i){for(O[L++]=N.x,O[L++]=N.y,O[L++]=N.z,x=2*b+2,T=1;x-1>T;++T)P=T/(x-1),A=e.lerp(N,B,P,d),O[L++]=A.x,O[L++]=A.y,O[L++]=A.z;O[L++]=B.x,O[L++]=B.y,O[L++]=B.z}o&&(z.unshift(N.x,N.y,N.z),0!==b&&F.push(B.x,B.y,B.z)),V=t.PI_OVER_TWO-(b+1)*I}for(D=b,b=D;b>0;--b){if(V=t.PI_OVER_TWO-(b-1)*I,N=n(-V,l,M,E,_,C,y,w,S,N),B=n(V+Math.PI,l,M,E,_,C,y,w,S,B),i){for(O[L++]=N.x,O[L++]=N.y,O[L++]=N.z,x=2*(b-1)+2,T=1;x-1>T;++T)P=T/(x-1),A=e.lerp(N,B,P,d),O[L++]=A.x,O[L++]=A.y,O[L++]=A.z;O[L++]=B.x,O[L++]=B.y,O[L++]=B.z}o&&(z.unshift(N.x,N.y,N.z),1!==b&&F.push(B.x,B.y,B.z))}var k={};return i&&(O.length!==L&&(R=L/3,O.length=L),k.positions=O,k.numPts=D),o&&(k.outerPositions=z.concat(F)),k},o}),r("Core/GeometryInstance",["./defaultValue","./defined","./DeveloperError","./Matrix4"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT),this.geometry=t.geometry,this.modelMatrix=i.clone(e(t.modelMatrix,i.IDENTITY)),this.id=t.id,this.pickPrimitive=t.pickPrimitive,this.attributes=e(t.attributes,{})};return n}),r("Core/barycentricCoordinates",["./Cartesian2","./Cartesian3","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=new t,n=new t,o=new t,a=function(a,s,l,u,c){r(c)||(c=new t);var h,d,m,p,f,v,g,_;r(s.z)?(h=t.subtract(l,s,i),d=t.subtract(u,s,n),m=t.subtract(a,s,o),p=t.dot(h,h),f=t.dot(h,d),v=t.dot(h,m),g=t.dot(d,d),_=t.dot(d,m)):(h=e.subtract(l,s,i),d=e.subtract(u,s,n),m=e.subtract(a,s,o),p=e.dot(h,h),f=e.dot(h,d),v=e.dot(h,m),g=e.dot(d,d),_=e.dot(d,m));var y=1/(p*g-f*f);return c.y=(g*v-f*_)*y,c.z=(p*_-f*v)*y,c.x=1-c.y-c.z,c};return a}),r("Core/EncodedCartesian3",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(){this.high=e.clone(e.ZERO),this.low=e.clone(e.ZERO)};r.encode=function(e,r){t(r)||(r={high:0,low:0});var i;return e>=0?(i=65536*Math.floor(e/65536),r.high=i,r.low=e-i):(i=65536*Math.floor(-e/65536),r.high=-i,r.low=e+i),r};var i={high:0,low:0};r.fromCartesian=function(e,n){t(n)||(n=new r);var o=n.high,a=n.low;return r.encode(e.x,i),o.x=i.high,a.x=i.low,r.encode(e.y,i),o.y=i.high,a.y=i.low,r.encode(e.z,i),o.z=i.high,a.z=i.low,n};var n=new r;return r.writeElements=function(e,t,i){r.fromCartesian(e,n);var o=n.high,a=n.low;t[i]=o.x,t[i+1]=o.y,t[i+2]=o.z,t[i+3]=a.x,t[i+4]=a.y,t[i+5]=a.z},r}),r("Core/IndexDatatype",["./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i){"use strict";var n={UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,UNSIGNED_INT:5125};return n.getSizeInBytes=function(e){switch(e){case n.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case n.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case n.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT}},n.validate=function(t){return e(t)&&(t===n.UNSIGNED_BYTE||t===n.UNSIGNED_SHORT||t===n.UNSIGNED_INT)},n.createTypedArray=function(e,t){return e>i.SIXTY_FOUR_KILOBYTES?new Uint32Array(t):new Uint16Array(t)},r(n)}),r("Core/QuadraticRealPolynomial",["./DeveloperError","./Math"],function(e,t){"use strict";function r(e,r,i){var n=e+r;return t.sign(e)!==t.sign(r)&&Math.abs(n/Math.max(Math.abs(e),Math.abs(r)))<i?0:n}var i={};return i.computeDiscriminant=function(e,t,r){var i=t*t-4*e*r;return i},i.computeRealRoots=function(e,i,n){var o;if(0===e)return 0===i?[]:[-n/i];if(0===i){if(0===n)return[0,0];var a=Math.abs(n),s=Math.abs(e);if(s>a&&a/s<t.EPSILON14)return[0,0];if(a>s&&s/a<t.EPSILON14)return[];if(o=-n/e,0>o)return[];var l=Math.sqrt(o);return[-l,l]}if(0===n)return o=-i/e,0>o?[o,0]:[0,o];var u=i*i,c=4*e*n,h=r(u,-c,t.EPSILON14);if(0>h)return[];var d=-.5*r(i,t.sign(i)*Math.sqrt(h),t.EPSILON14);return i>0?[d/e,n/d]:[n/d,d/e]},i}),r("Core/CubicRealPolynomial",["./DeveloperError","./QuadraticRealPolynomial"],function(e,t){"use strict";function r(e,t,r,i){var n,o,a=e,s=t/3,l=r/3,u=i,c=a*l,h=s*u,d=s*s,m=l*l,p=a*l-d,f=a*u-s*l,v=s*u-m,g=4*p*v-f*f;if(0>g){var _,y,C;d*h>=c*m?(_=a,y=p,C=-2*s*p+a*f):(_=u,y=v,C=-u*f+2*l*v);var w=0>C?-1:1,S=-w*Math.abs(_)*Math.sqrt(-g);o=-C+S;var E=o/2,b=0>E?-Math.pow(-E,1/3):Math.pow(E,1/3),T=o===S?-b:-y/b;return n=0>=y?b+T:-C/(b*b+T*T+y),d*h>=c*m?[(n-s)/a]:[-u/(n+l)]}var x=p,P=-2*s*p+a*f,A=v,M=-u*f+2*l*v,D=Math.sqrt(g),I=Math.sqrt(3)/2,R=Math.abs(Math.atan2(a*D,-P)/3);n=2*Math.sqrt(-x);var O=Math.cos(R);o=n*O;var L=n*(-O/2-I*Math.sin(R)),N=o+L>2*s?o-s:L-s,B=a,F=N/B;R=Math.abs(Math.atan2(u*D,-M)/3),n=2*Math.sqrt(-A),O=Math.cos(R),o=n*O,L=n*(-O/2-I*Math.sin(R));var z=-u,V=2*l>o+L?o+l:L+l,k=z/V,U=B*V,W=-N*V-B*z,G=N*z,H=(l*W-s*G)/(-s*W+l*U);return H>=F?k>=F?k>=H?[F,H,k]:[F,k,H]:[k,F,H]:k>=F?[H,F,k]:k>=H?[H,k,F]:[k,H,F]}var i={};return i.computeDiscriminant=function(e,t,r,i){var n=e*e,o=t*t,a=r*r,s=i*i,l=18*e*t*r*i+o*a-27*n*s-4*(e*a*r+o*t*i);return l},i.computeRealRoots=function(e,i,n,o){var a,s;if(0===e)return t.computeRealRoots(i,n,o);if(0===i){if(0===n){if(0===o)return[0,0,0];s=-o/e;var l=0>s?-Math.pow(-s,1/3):Math.pow(s,1/3);return[l,l,l]}return 0===o?(a=t.computeRealRoots(e,0,n),0===a.Length?[0]:[a[0],0,a[1]]):r(e,0,n,o)}return 0===n?0===o?(s=-i/e,0>s?[s,0,0]:[0,0,s]):r(e,i,0,o):0===o?(a=t.computeRealRoots(e,i,n),0===a.length?[0]:a[1]<=0?[a[0],a[1],0]:a[0]>=0?[0,a[0],a[1]]:[a[0],0,a[1]]):r(e,i,n,o)},i}),r("Core/QuarticRealPolynomial",["./CubicRealPolynomial","./DeveloperError","./Math","./QuadraticRealPolynomial"],function(e,t,r,i){"use strict";function n(t,n,o,a){var s=t*t,l=n-3*s/8,u=o-n*t/2+s*t/8,c=a-o*t/4+n*s/16-3*s*s/256,h=e.computeRealRoots(1,2*l,l*l-4*c,-u*u);if(h.length>0){var d=-t/4,m=h[h.length-1];if(Math.abs(m)<r.EPSILON14){var p=i.computeRealRoots(1,l,c);if(2===p.length){var f,v=p[0],g=p[1];if(v>=0&&g>=0){var _=Math.sqrt(v),y=Math.sqrt(g);return[d-y,d-_,d+_,d+y]}if(v>=0&&0>g)return f=Math.sqrt(v),[d-f,d+f];if(0>v&&g>=0)return f=Math.sqrt(g),[d-f,d+f]}return[]}if(m>0){var C=Math.sqrt(m),w=(l+m-u/C)/2,S=(l+m+u/C)/2,E=i.computeRealRoots(1,C,w),b=i.computeRealRoots(1,-C,S);return 0!==E.length?(E[0]+=d,E[1]+=d,0!==b.length?(b[0]+=d,b[1]+=d,E[1]<=b[0]?[E[0],E[1],b[0],b[1]]:b[1]<=E[0]?[b[0],b[1],E[0],E[1]]:E[0]>=b[0]&&E[1]<=b[1]?[b[0],E[0],E[1],b[1]]:b[0]>=E[0]&&b[1]<=E[1]?[E[0],b[0],b[1],E[1]]:E[0]>b[0]&&E[0]<b[1]?[b[0],E[0],b[1],E[1]]:[E[0],b[0],E[1],b[1]]):E):0!==b.length?(b[0]+=d,b[1]+=d,b):[]}}return[]}function o(t,n,o,a){var s=o*o,l=n*n,u=t*t,c=-2*n,h=o*t+l-4*a,d=u*a-o*n*t+s,m=e.computeRealRoots(1,c,h,d);if(m.length>0){var p,f,v=m[0],g=n-v,_=g*g,y=t/2,C=g/2,w=_-4*a,S=_+4*Math.abs(a),E=u-4*v,b=u+4*Math.abs(v);if(0>v||E*S>w*b){var T=Math.sqrt(E);p=T/2,f=0===T?0:(t*C-o)/T}else{var x=Math.sqrt(w);p=0===x?0:(t*C-o)/x,f=x/2}var P,A;0===y&&0===p?(P=0,A=0):r.sign(y)===r.sign(p)?(P=y+p,A=v/P):(A=y-p,P=v/A);var M,D;0===C&&0===f?(M=0,D=0):r.sign(C)===r.sign(f)?(M=C+f,D=a/M):(D=C-f,M=a/D);var I=i.computeRealRoots(1,P,M),R=i.computeRealRoots(1,A,D);if(0!==I.length)return 0!==R.length?I[1]<=R[0]?[I[0],I[1],R[0],R[1]]:R[1]<=I[0]?[R[0],R[1],I[0],I[1]]:I[0]>=R[0]&&I[1]<=R[1]?[R[0],I[0],I[1],R[1]]:R[0]>=I[0]&&R[1]<=I[1]?[I[0],R[0],R[1],I[1]]:I[0]>R[0]&&I[0]<R[1]?[R[0],I[0],R[1],I[1]]:[I[0],R[0],I[1],R[1]]:I;if(0!==R.length)return R}return[]}var a={};return a.computeDiscriminant=function(e,t,r,i,n){var o=e*e,a=o*e,s=t*t,l=s*t,u=r*r,c=u*r,h=i*i,d=h*i,m=n*n,p=m*n,f=s*u*h-4*l*d-4*e*c*h+18*e*t*r*d-27*o*h*h+256*a*p+n*(18*l*r*i-4*s*c+16*e*u*u-80*e*t*u*i-6*e*s*h+144*o*r*h)+m*(144*e*s*r-27*s*s-128*o*u-192*o*t*i);return f},a.computeRealRoots=function(t,i,a,s,l){if(Math.abs(t)<r.EPSILON15)return e.computeRealRoots(i,a,s,l);var u=i/t,c=a/t,h=s/t,d=l/t,m=0>u?1:0;switch(m+=0>c?m+1:m,m+=0>h?m+1:m,m+=0>d?m+1:m){case 0:return n(u,c,h,d);case 1:return o(u,c,h,d);case 2:return o(u,c,h,d);case 3:return n(u,c,h,d);case 4:return n(u,c,h,d);case 5:return o(u,c,h,d);case 6:return n(u,c,h,d);case 7:return n(u,c,h,d);case 8:return o(u,c,h,d);case 9:return n(u,c,h,d);case 10:return n(u,c,h,d);case 11:return o(u,c,h,d);case 12:return n(u,c,h,d);case 13:return n(u,c,h,d);case 14:return n(u,c,h,d);case 15:return n(u,c,h,d);default:return void 0}},a}),r("Core/Ray",["./Cartesian3","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(r,i){i=e.clone(t(i,e.ZERO)),e.equals(i,e.ZERO)||e.normalize(i,i),this.origin=e.clone(t(r,e.ZERO)),this.direction=i};return i.getPoint=function(t,i,n){return r(n)||(n=new e),n=e.multiplyByScalar(t.direction,i,n),e.add(t.origin,n,n)},i}),r("Core/IntersectionTests",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Math","./Matrix3","./QuadraticRealPolynomial","./QuarticRealPolynomial","./Ray"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(t,i,n,a,s){s=r(s,!1);var l,u,c,h,d,m=t.origin,p=t.direction,f=e.subtract(n,i,v),w=e.subtract(a,i,g),S=e.cross(p,w,_),E=e.dot(f,S);if(s){if(E<o.EPSILON6)return void 0;if(l=e.subtract(m,i,y),c=e.dot(l,S),0>c||c>E)return void 0;if(u=e.cross(l,f,C),h=e.dot(p,u),0>h||c+h>E)return void 0;d=e.dot(w,u)/E}else{if(Math.abs(E)<o.EPSILON6)return void 0;var b=1/E;if(l=e.subtract(m,i,y),c=e.dot(l,S)*b,0>c||c>1)return void 0;if(u=e.cross(l,f,C),h=e.dot(p,u)*b,0>h||c+h>1)return void 0;d=e.dot(w,u)*b}return d}function h(e,t,r,i){var n=t*t-4*e*r;if(0>n)return void 0;if(n>0){var o=1/(2*e),a=Math.sqrt(n),s=(-t+a)*o,l=(-t-a)*o;return l>s?(i.root0=s,i.root1=l):(i.root0=l,i.root1=s),i}var u=-t/(2*e);return 0===u?void 0:(i.root0=i.root1=u,i)}function d(t,r,n){i(n)||(n={});var o=t.origin,a=t.direction,s=r.center,l=r.radius*r.radius,u=e.subtract(o,s,_),c=e.dot(a,a),d=2*e.dot(a,u),m=e.magnitudeSquared(u)-l,p=h(c,d,m,S);return i(p)?(n.start=p.root0,n.stop=p.root1,n):void 0}function m(e,t,r){var i=e+t;return o.sign(e)!==o.sign(t)&&Math.abs(i/Math.max(Math.abs(e),Math.abs(t)))<r?0:i}function p(t,r,i,n,u){var c,h=n*n,d=u*u,p=(t[a.COLUMN1ROW1]-t[a.COLUMN2ROW2])*d,f=u*(n*m(t[a.COLUMN1ROW0],t[a.COLUMN0ROW1],o.EPSILON15)+r.y),v=t[a.COLUMN0ROW0]*h+t[a.COLUMN2ROW2]*d+n*r.x+i,g=d*m(t[a.COLUMN2ROW1],t[a.COLUMN1ROW2],o.EPSILON15),_=u*(n*m(t[a.COLUMN2ROW0],t[a.COLUMN0ROW2])+r.z),y=[];if(0===_&&0===g){if(c=s.computeRealRoots(p,f,v),0===c.length)return y;var C=c[0],w=Math.sqrt(Math.max(1-C*C,0));if(y.push(new e(n,u*C,u*-w)),y.push(new e(n,u*C,u*w)),2===c.length){var S=c[1],E=Math.sqrt(Math.max(1-S*S,0));y.push(new e(n,u*S,u*-E)),y.push(new e(n,u*S,u*E))}return y}var b=_*_,T=g*g,x=p*p,P=_*g,A=x+T,M=2*(f*p+P),D=2*v*p+f*f-T+b,I=2*(v*f-P),R=v*v-b;if(0===A&&0===M&&0===D&&0===I)return y;c=l.computeRealRoots(A,M,D,I,R);var O=c.length;if(0===O)return y;for(var L=0;O>L;++L){var N,B=c[L],F=B*B,z=Math.max(1-F,0),V=Math.sqrt(z);N=o.sign(p)===o.sign(v)?m(p*F+v,f*B,o.EPSILON12):o.sign(v)===o.sign(f*B)?m(p*F,f*B+v,o.EPSILON12):m(p*F+f*B,v,o.EPSILON12);var k=m(g*B,_,o.EPSILON15),U=N*k;0>U?y.push(new e(n,u*B,u*V)):U>0?y.push(new e(n,u*B,u*-V)):0!==V?(y.push(new e(n,u*B,u*-V)),y.push(new e(n,u*B,u*V)),++L):y.push(new e(n,u*B,u*V))}return y}var f={};f.rayPlane=function(t,r,n){i(n)||(n=new e);var a=t.origin,s=t.direction,l=r.normal,u=e.dot(l,s);if(Math.abs(u)<o.EPSILON15)return void 0;var c=(-r.distance-e.dot(l,a))/u;return 0>c?void 0:(n=e.multiplyByScalar(s,c,n),e.add(a,n,n))};var v=new e,g=new e,_=new e,y=new e,C=new e;f.rayTriangle=function(t,r,n,o,a,s){var l=c(t,r,n,o,a);return!i(l)||0>l?void 0:(i(s)||(s=new e),e.multiplyByScalar(t.direction,l,s),e.add(t.origin,s,s))};var w=new u;f.lineSegmentTriangle=function(t,r,n,o,a,s,l){var u=w;e.clone(t,u.origin),e.subtract(r,t,u.direction),e.normalize(u.direction,u.direction);var h=c(u,n,o,a,s);return!i(h)||0>h||h>e.distance(t,r)?void 0:(i(l)||(l=new e),e.multiplyByScalar(u.direction,h,l),e.add(u.origin,l,l))};var S={root0:0,root1:0};f.raySphere=function(e,t,r){return r=d(e,t,r),!i(r)||r.stop<0?void 0:(r.start=Math.max(r.start,0),r)};var E=new u;f.lineSegmentSphere=function(t,r,n,o){var a=E;e.clone(t,a.origin);var s=e.subtract(r,t,a.direction),l=e.magnitude(s);return e.normalize(s,s),o=d(a,n,o),!i(o)||o.stop<0||o.start>l?void 0:(o.start=Math.max(o.start,0),o.stop=Math.min(o.stop,l),o)};var b=new e,T=new e;f.rayEllipsoid=function(t,r){var i,n,o,a,s,l=r.oneOverRadii,u=e.multiplyComponents(l,t.origin,b),c=e.multiplyComponents(l,t.direction,T),h=e.magnitudeSquared(u),d=e.dot(u,c);if(h>1){if(d>=0)return void 0;var m=d*d;if(i=h-1,n=e.magnitudeSquared(c),o=n*i,o>m)return void 0;if(m>o){a=d*d-o,s=-d+Math.sqrt(a);var p=s/n,f=i/s;return f>p?{start:p,stop:f}:{start:f,stop:p}}var v=Math.sqrt(i/n);return{start:v,stop:v}}return 1>h?(i=h-1,n=e.magnitudeSquared(c),o=n*i,a=d*d-o,s=-d+Math.sqrt(a),{start:0,stop:s/n}):0>d?(n=e.magnitudeSquared(c),{start:0,stop:-d/n}):void 0};var x=new e,P=new e,A=new e,M=new e,D=new e,I=new a,R=new a,O=new a,L=new a,N=new a,B=new a,F=new a,z=new e,V=new e,k=new t;f.grazingAltitudeLocation=function(t,r){var n=t.origin,s=t.direction,l=r.geodeticSurfaceNormal(n);if(e.dot(s,l)>=0)return n;var u=i(this.rayEllipsoid(t,r)),c=r.transformPositionToScaledSpace(s),h=e.normalize(c,x),d=e.mostOrthogonalAxis(c,M),m=e.normalize(e.cross(d,h,P),P),f=e.normalize(e.cross(h,m,A),A),v=I;v[0]=h.x,v[1]=h.y,v[2]=h.z,v[3]=m.x,v[4]=m.y,v[5]=m.z,v[6]=f.x,v[7]=f.y,v[8]=f.z;var g=a.transpose(v,R),_=a.fromScale(r.radii,O),y=a.fromScale(r.oneOverRadii,L),C=N;C[0]=0,C[1]=-s.z,C[2]=s.y,C[3]=s.z,C[4]=0,C[5]=-s.x,C[6]=-s.y,C[7]=s.x,C[8]=0;var w,S,E=a.multiply(a.multiply(g,y,B),C,B),b=a.multiply(a.multiply(E,_,F),v,F),T=a.multiplyByVector(E,n,D),U=p(b,e.negate(T,x),0,0,1),W=U.length;if(W>0){for(var G=e.clone(e.ZERO,V),H=Number.NEGATIVE_INFINITY,q=0;W>q;++q){w=a.multiplyByVector(_,a.multiplyByVector(v,U[q],z),z);var j=e.normalize(e.subtract(w,n,M),M),Y=e.dot(j,s);Y>H&&(H=Y,G=e.clone(w,G))}var X=r.cartesianToCartographic(G,k);return H=o.clamp(H,0,1),S=e.magnitude(e.subtract(G,n,M))*Math.sqrt(1-H*H),S=u?-S:S,X.height=S,r.cartographicToCartesian(X)}return void 0};var U=new e;return f.lineSegmentPlane=function(t,r,n,a){i(a)||(a=new e);var s=e.subtract(r,t,U),l=n.normal,u=e.dot(l,s);if(Math.abs(u)<o.EPSILON6)return void 0;var c=e.dot(l,t),h=-(n.distance+c)/u;return 0>h||h>1?void 0:(e.multiplyByScalar(s,h,a),e.add(t,a,a),a)},f.trianglePlaneIntersection=function(t,r,i,n){var o=n.normal,a=n.distance,s=e.dot(o,t)+a<0,l=e.dot(o,r)+a<0,u=e.dot(o,i)+a<0,c=0;c+=s?1:0,c+=l?1:0,c+=u?1:0;var h,d;if((1===c||2===c)&&(h=new e,d=new e),1===c){if(s)return f.lineSegmentPlane(t,r,n,h),f.lineSegmentPlane(t,i,n,d),{positions:[t,r,i,h,d],indices:[0,3,4,1,2,4,1,4,3]};if(l)return f.lineSegmentPlane(r,i,n,h),f.lineSegmentPlane(r,t,n,d),{positions:[t,r,i,h,d],indices:[1,3,4,2,0,4,2,4,3]};if(u)return f.lineSegmentPlane(i,t,n,h),f.lineSegmentPlane(i,r,n,d),{positions:[t,r,i,h,d],indices:[2,3,4,0,1,4,0,4,3]}}else if(2===c){if(!s)return f.lineSegmentPlane(r,t,n,h),f.lineSegmentPlane(i,t,n,d),{positions:[t,r,i,h,d],indices:[1,2,4,1,4,3,0,3,4]};if(!l)return f.lineSegmentPlane(i,r,n,h),f.lineSegmentPlane(t,r,n,d),{positions:[t,r,i,h,d],indices:[2,0,4,2,4,3,1,3,4]};if(!u)return f.lineSegmentPlane(t,i,n,h),f.lineSegmentPlane(r,i,n,d),{positions:[t,r,i,h,d],indices:[0,1,4,0,4,3,2,3,4]}}return void 0},f}),r("Core/Plane",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r){this.normal=e.clone(t),this.distance=r};return r.fromPointNormal=function(i,n,o){var a=-e.dot(n,i);return t(o)?(e.clone(n,o.normal),o.distance=a,o):new r(n,a)},r.getPointDistance=function(t,r){return e.dot(t.normal,r)+t.distance},r}),r("Core/Tipsify",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r={};return r.calculateACMR=function(r){r=e(r,e.EMPTY_OBJECT);var i=r.indices,n=r.maximumIndex,o=e(r.cacheSize,24),a=i.length;if(!t(n)){n=0;for(var s=0,l=i[s];a>s;)l>n&&(n=l),++s,l=i[s]}for(var u=[],c=0;n+1>c;c++)u[c]=0;for(var h=o+1,d=0;a>d;++d)h-u[i[d]]>o&&(u[i[d]]=h,++h);return(h-o+1)/(a/3)},r.tipsify=function(r){function i(e,t,r,i){for(;t.length>=1;){var n=t[t.length-1];if(t.splice(t.length-1,1),e[n].numLiveTriangles>0)return n}for(;i>o;){if(e[o].numLiveTriangles>0)return++o,o-1;++o}return-1}function n(e,t,r,n,o,a,s){for(var l,u=-1,c=-1,h=0;h<r.length;){var d=r[h];n[d].numLiveTriangles&&(l=0,o-n[d].timeStamp+2*n[d].numLiveTriangles<=t&&(l=o-n[d].timeStamp),(l>c||-1===c)&&(c=l,u=d)),++h}return-1===u?i(n,a,e,s):u}r=e(r,e.EMPTY_OBJECT);var o,a=r.indices,s=r.maximumIndex,l=e(r.cacheSize,24),u=a.length,c=0,h=0,d=a[h],m=u;if(t(s))c=s+1;else{for(;m>h;)d>c&&(c=d),++h,d=a[h];if(-1===c)return 0;++c}for(var p=[],f=0;c>f;f++)p[f]={numLiveTriangles:0,timeStamp:0,vertexTriangles:[]};h=0;for(var v=0;m>h;)p[a[h]].vertexTriangles.push(v),++p[a[h]].numLiveTriangles,p[a[h+1]].vertexTriangles.push(v),++p[a[h+1]].numLiveTriangles,p[a[h+2]].vertexTriangles.push(v),++p[a[h+2]].numLiveTriangles,++v,h+=3;var g=0,_=l+1;o=1;var y,C,w=[],S=[],E=0,b=[],T=u/3,x=[];for(f=0;T>f;f++)x[f]=!1;for(var P,A;-1!==g;){w=[],C=p[g],A=C.vertexTriangles.length;for(var M=0;A>M;++M)if(v=C.vertexTriangles[M],!x[v]){x[v]=!0,h=v+v+v;for(var D=0;3>D;++D)P=a[h],w.push(P),S.push(P),b[E]=P,++E,y=p[P],--y.numLiveTriangles,_-y.timeStamp>l&&(y.timeStamp=_,++_),++h}g=n(a,l,w,p,_,S,c)}return b},r}),r("Core/GeometryPipeline",["./barycentricCoordinates","./BoundingSphere","./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EncodedCartesian3","./GeographicProjection","./Geometry","./GeometryAttribute","./IndexDatatype","./Intersect","./IntersectionTests","./Math","./Matrix3","./Matrix4","./Plane","./PrimitiveType","./Tipsify"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(e,t,r,i,n){e[t++]=r,e[t++]=i,e[t++]=i,e[t++]=n,e[t++]=n,e[t]=r}function b(e){for(var t=e.length,r=6*(t/3),i=p.createTypedArray(t,r),n=0,o=0;t>o;o+=3,n+=6)E(i,n,e[o],e[o+1],e[o+2]);return i}function T(e){var t=e.length;if(t>=3){var r=6*(t-2),i=p.createTypedArray(t,r);E(i,0,e[0],e[1],e[2]);for(var n=6,o=3;t>o;++o,n+=6)E(i,n,e[o-1],e[o],e[o-2]);return i}return new Uint16Array}function x(e){if(e.length>0){for(var t=e.length-1,r=6*(t-1),i=p.createTypedArray(t,r),n=e[0],o=0,a=1;t>a;++a,o+=6)E(i,o,n,e[a],e[a+1]);return i}return new Uint16Array}function P(e){var t={};for(var r in e)if(e.hasOwnProperty(r)&&l(e[r])&&l(e[r].values)){var i=e[r];t[r]=new m({componentDatatype:i.componentDatatype,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize,values:[]})}return t}function A(e,t,r){for(var i in t)if(t.hasOwnProperty(i)&&l(t[i])&&l(t[i].values))for(var n=t[i],o=0;o<n.componentsPerAttribute;++o)e[i].values.push(n.values[r*n.componentsPerAttribute+o])}function M(e,t){if(l(t))for(var r=t.values,n=r.length,o=0;n>o;o+=3)i.unpack(r,o,Z),y.multiplyByPoint(e,Z,Z),i.pack(Z,r,o)}function D(e,t){if(l(t))for(var r=t.values,n=r.length,o=0;n>o;o+=3)i.unpack(r,o,Z),_.multiplyByVector(e,Z,Z),Z=i.normalize(Z,Z),i.pack(Z,r,o)}function I(e){var t,r=e.length,i={},n=e[0].geometry.attributes;for(t in n)if(n.hasOwnProperty(t)&&l(n[t])&&l(n[t].values)){for(var o=n[t],s=o.values.length,u=!0,c=1;r>c;++c){var h=e[c].geometry.attributes[t];if(!l(h)||o.componentDatatype!==h.componentDatatype||o.componentsPerAttribute!==h.componentsPerAttribute||o.normalize!==h.normalize){u=!1;break}s+=h.values.length}u&&(i[t]=new m({componentDatatype:o.componentDatatype,componentsPerAttribute:o.componentsPerAttribute,normalize:o.normalize,values:a.createTypedArray(o.componentDatatype,s)}))}return i}function R(e){if(l(e.indices))return e;for(var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,t),i=0;t>i;++i)r[i]=i;return e.indices=r,e}function O(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,3*(t-2));r[0]=1,r[1]=0,r[2]=2;for(var i=3,n=3;t>n;++n)r[i++]=n-1,r[i++]=0,r[i++]=n;return e.indices=r,e.primitiveType=w.TRIANGLES,e}function L(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,3*(t-2));r[0]=0,r[1]=1,r[2]=2,t>3&&(r[3]=0,r[4]=2,r[5]=3);for(var i=6,n=3;t-1>n;n+=2)r[i++]=n,r[i++]=n-1,r[i++]=n+1,t>n+2&&(r[i++]=n,r[i++]=n+1,r[i++]=n+2);return e.indices=r,e.primitiveType=w.TRIANGLES,e}function N(e){if(l(e.indices))return e;for(var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,t),i=0;t>i;++i)r[i]=i;return e.indices=r,e}function B(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,2*(t-1));r[0]=0,r[1]=1;for(var i=2,n=2;t>n;++n)r[i++]=n-1,r[i++]=n;return e.indices=r,e.primitiveType=w.LINES,e}function F(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,2*t);r[0]=0,r[1]=1;for(var i=2,n=2;t>n;++n)r[i++]=n-1,r[i++]=n;return r[i++]=t-1,r[i]=0,e.indices=r,e.primitiveType=w.LINES,e}function z(e){switch(e.primitiveType){case w.TRIANGLE_FAN:return O(e);case w.TRIANGLE_STRIP:return L(e);case w.TRIANGLES:return R(e);case w.LINE_STRIP:return B(e);case w.LINE_LOOP:return F(e);case w.LINES:return N(e)}return e}function V(e,t){Math.abs(e.y)<g.EPSILON11&&(e.y=t?-g.EPSILON11:g.EPSILON11)}function k(e,t,r,n){i.add(e,i.multiplyByScalar(i.subtract(t,e,at),e.y/(e.y-t.y),at),r),i.clone(r,n),V(r,!0),V(n,!1)}function U(e,t,r){if(e.x>=0||t.x>=0||r.x>=0)return void 0;var i=e.y<0,n=t.y<0,o=r.y<0;V(e,i),V(t,n),V(r,o);var a=0;a+=i?1:0,a+=n?1:0,a+=o?1:0;var s=ht.indices;1===a?(s[1]=3,s[2]=4,s[5]=6,s[7]=6,s[8]=5,i?(k(e,t,st,ut),k(e,r,lt,ct),s[0]=0,s[3]=1,s[4]=2,s[6]=1):n?(k(t,r,st,ut),k(t,e,lt,ct),s[0]=1,s[3]=2,s[4]=0,s[6]=2):o&&(k(r,e,st,ut),k(r,t,lt,ct),s[0]=2,s[3]=0,s[4]=1,s[6]=0)):2===a&&(s[2]=4,s[4]=4,s[5]=3,s[7]=5,s[8]=6,i?n?o||(k(r,e,st,ut),k(r,t,lt,ct),s[0]=0,s[1]=1,s[3]=0,s[6]=2):(k(t,r,st,ut),k(t,e,lt,ct),s[0]=2,s[1]=0,s[3]=2,s[6]=1):(k(e,t,st,ut),k(e,r,lt,ct),s[0]=1,s[1]=2,s[3]=1,s[6]=0));var l=ht.positions;return l[0]=e,l[1]=t,l[2]=r,ht.length=3,(1===a||2===a)&&(l[3]=st,l[4]=lt,l[5]=ut,l[6]=ct,ht.length=7),ht}function W(t,n,o,a,s,u,c,h){if(l(s)||l(u)||l(c)||l(h)){var d,m,p,f,v,g,_,y,C,w,S,E,b=a.positions,T=b[0],x=b[1],P=b[2],A=ft,M=vt,D=gt,I=dt,R=mt,O=pt;l(s)&&(d=i.fromArray(s,3*t),m=i.fromArray(s,3*n),p=i.fromArray(s,3*o)),l(u)&&(f=i.fromArray(u,3*t),v=i.fromArray(u,3*n),g=i.fromArray(u,3*o)),l(c)&&(_=i.fromArray(c,3*t),y=i.fromArray(c,3*n),C=i.fromArray(c,3*o)),l(h)&&(w=r.fromArray(h,2*t),S=r.fromArray(h,2*n),E=r.fromArray(h,2*o));for(var L=3;L<b.length;++L){var N=b[L],B=e(N,T,x,P);if(l(s)){A=i.multiplyByScalar(d,B.x,A),M=i.multiplyByScalar(m,B.y,M),D=i.multiplyByScalar(p,B.z,D);var F=i.add(A,M,_t);i.add(F,D,F),i.normalize(F,F),s.push(F.x,F.y,F.z)}if(l(u)){A=i.multiplyByScalar(f,B.x,A),M=i.multiplyByScalar(v,B.y,M),D=i.multiplyByScalar(g,B.z,D);var z=i.add(A,M,_t);i.add(z,D,z),i.normalize(z,z),u.push(z.x,z.y,z.z)}if(l(c)){A=i.multiplyByScalar(_,B.x,A),M=i.multiplyByScalar(y,B.y,M),D=i.multiplyByScalar(C,B.z,D);var V=i.add(A,M,_t);i.add(V,D,V),i.normalize(V,V),c.push(V.x,V.y,V.z)}if(l(h)){I=r.multiplyByScalar(w,B.x,I),R=r.multiplyByScalar(S,B.y,R),O=r.multiplyByScalar(E,B.z,O);var k=r.add(I,R,I);r.add(k,O,k),h.push(k.x,k.y)}}}}function G(e){for(var t=e.attributes,r=t.position.values,n=l(t.normal)?t.normal.values:void 0,o=l(t.binormal)?t.binormal.values:void 0,s=l(t.tangent)?t.tangent.values:void 0,u=l(t.st)?t.st.values:void 0,c=e.indices,h=Array.prototype.slice.call(r,0),m=l(n)?Array.prototype.slice.call(n,0):void 0,f=l(o)?Array.prototype.slice.call(o,0):void 0,v=l(s)?Array.prototype.slice.call(s,0):void 0,g=l(u)?Array.prototype.slice.call(u,0):void 0,_=[],y=c.length,C=0;y>C;C+=3){var w=c[C],S=c[C+1],E=c[C+2],b=i.fromArray(r,3*w),T=i.fromArray(r,3*S),x=i.fromArray(r,3*E),P=U(b,T,x);if(l(P))if(h[3*w+1]=P.positions[0].y,h[3*S+1]=P.positions[1].y,h[3*E+1]=P.positions[2].y,P.length>3){for(var A=h.length/3,M=0;M<P.indices.length;++M){var D=P.indices[M];3>D?_.push(c[C+D]):_.push(D-3+A)}for(var I=3;I<P.positions.length;++I){var R=P.positions[I];h.push(R.x,R.y,R.z)}W(w,S,E,P,m,f,v,g)}else _.push(w,S,E);else _.push(w,S,E)}e.attributes.position.values=new Float64Array(h),l(m)&&(t.normal.values=a.createTypedArray(t.normal.componentDatatype,m)),l(f)&&(t.binormal.values=a.createTypedArray(t.binormal.componentDatatype,f)),l(v)&&(t.tangent.values=a.createTypedArray(t.tangent.componentDatatype,v)),l(g)&&(t.st.values=a.createTypedArray(t.st.componentDatatype,g));var O=d.computeNumberOfVertices(e);e.indices=p.createTypedArray(O,_)}function H(e){for(var t=e.attributes,r=t.position.values,n=e.indices,o=Array.prototype.slice.call(r,0),a=[],s=C.fromPointNormal(i.ZERO,i.UNIT_Y),u=n.length,c=0;u>c;c+=2){var h=n[c],m=n[c+1],f=i.fromArray(r,3*h),_=i.fromArray(r,3*m);if(Math.abs(f.y)<g.EPSILON6&&(f.y=f.y<0?-g.EPSILON6:g.EPSILON6,o[3*h+1]=f.y),Math.abs(_.y)<g.EPSILON6&&(_.y=_.y<0?-g.EPSILON6:g.EPSILON6,o[3*m+1]=_.y),a.push(h),f.x<0||_.x<0){var y=v.lineSegmentPlane(f,_,s);if(l(y)){var w=i.multiplyByScalar(i.UNIT_Y,5*g.EPSILON9,yt);f.y<0&&i.negate(w,w);var S=o.length/3;a.push(S,S+1);var E=i.add(y,w,Ct);o.push(E.x,E.y,E.z),i.negate(w,w),i.add(y,w,E),o.push(E.x,E.y,E.z)}}a.push(m)}e.attributes.position.values=new Float64Array(o);var b=d.computeNumberOfVertices(e);e.indices=p.createTypedArray(b,a)}var q={};q.toWireframe=function(e){var t=e.indices;if(l(t)){switch(e.primitiveType){case w.TRIANGLES:e.indices=b(t);break;case w.TRIANGLE_STRIP:e.indices=T(t);break;case w.TRIANGLE_FAN:e.indices=x(t);break;default:throw new u("geometry.primitiveType must be TRIANGLES, TRIANGLE_STRIP, or TRIANGLE_FAN.")}e.primitiveType=w.LINES}return e},q.createLineSegmentsForVectors=function(e,r,i){r=s(r,"normal"),i=s(i,1e4);for(var n=e.attributes.position.values,o=e.attributes[r].values,u=n.length,c=new Float64Array(2*u),h=0,p=0;u>p;p+=3)c[h++]=n[p],c[h++]=n[p+1],c[h++]=n[p+2],c[h++]=n[p]+o[p]*i,c[h++]=n[p+1]+o[p+1]*i,c[h++]=n[p+2]+o[p+2]*i;var f,v=e.boundingSphere;return l(v)&&(f=new t(v.center,v.radius+i)),new d({attributes:{position:new m({componentDatatype:a.DOUBLE,componentsPerAttribute:3,values:c})},primitiveType:w.LINES,boundingSphere:f})},q.createAttributeLocations=function(e){var t,r=["position","positionHigh","positionLow","position3DHigh","position3DLow","position2DHigh","position2DLow","pickColor","normal","st","binormal","tangent"],i=e.attributes,n={},o=0,a=r.length;for(t=0;a>t;++t){var s=r[t];l(i[s])&&(n[s]=o++)}for(var u in i)i.hasOwnProperty(u)&&!l(n[u])&&(n[u]=o++);return n},q.reorderForPreVertexCache=function(e){var t=d.computeNumberOfVertices(e),r=e.indices;if(l(r)){for(var i=new Int32Array(t),n=0;t>n;n++)i[n]=-1;for(var o,s=r,u=s.length,c=p.createTypedArray(t,u),h=0,m=0,f=0;u>h;)o=i[s[h]],-1!==o?c[m]=o:(o=s[h],i[o]=f,c[m]=f,++f),++h,++m;e.indices=c;var v=e.attributes;for(var g in v)if(v.hasOwnProperty(g)&&l(v[g])&&l(v[g].values)){for(var _=v[g],y=_.values,C=0,w=_.componentsPerAttribute,S=a.createTypedArray(_.componentDatatype,f*w);t>C;){var E=i[C];if(-1!==E)for(n=0;w>n;n++)S[w*E+n]=y[w*C+n];++C}_.values=S}}return e},q.reorderForPostVertexCache=function(e,t){var r=e.indices;if(e.primitiveType===w.TRIANGLES&&l(r)){for(var i=r.length,n=0,o=0;i>o;o++)r[o]>n&&(n=r[o]);e.indices=S.tipsify({indices:r,maximumIndex:n,cacheSize:t})}return e},q.fitToUnsignedShortIndices=function(e){var t=[],r=d.computeNumberOfVertices(e);if(l(e.indices)&&r>g.SIXTY_FOUR_KILOBYTES){var i,n=[],o=[],a=0,s=P(e.attributes),u=e.indices,c=u.length;e.primitiveType===w.TRIANGLES?i=3:e.primitiveType===w.LINES?i=2:e.primitiveType===w.POINTS&&(i=1);for(var h=0;c>h;h+=i){for(var m=0;i>m;++m){var p=u[h+m],f=n[p];l(f)||(f=a++,n[p]=f,A(s,e.attributes,p)),o.push(f)}a+i>g.SIXTY_FOUR_KILOBYTES&&(t.push(new d({attributes:s,indices:o,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere})),n=[],o=[],a=0,s=P(e.attributes))}0!==o.length&&t.push(new d({attributes:s,indices:o,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere}))}else t.push(e);return t};var j=new i,Y=new o;q.projectTo2D=function(e,t,r,n,o){var s=e.attributes[t];o=l(o)?o:new h;for(var c=o.ellipsoid,d=s.values,p=new Float64Array(d.length),f=0,v=0;v<d.length;v+=3){var g=i.fromArray(d,v,j),_=c.cartesianToCartographic(g,Y);if(!l(_))throw new u("Could not project point ("+g.x+", "+g.y+", "+g.z+") to 2D.");var y=o.project(_,j);p[f++]=y.x,p[f++]=y.y,p[f++]=y.z}return e.attributes[r]=s,e.attributes[n]=new m({componentDatatype:a.DOUBLE,componentsPerAttribute:3,values:p}),delete e.attributes[t],e};var X={high:0,low:0};q.encodeAttribute=function(e,t,r,i){for(var n=e.attributes[t],o=n.values,s=o.length,l=new Float32Array(s),u=new Float32Array(s),h=0;s>h;++h)c.encode(o[h],X),l[h]=X.high,u[h]=X.low;var d=n.componentsPerAttribute;return e.attributes[r]=new m({componentDatatype:a.FLOAT,componentsPerAttribute:d,values:l}),e.attributes[i]=new m({componentDatatype:a.FLOAT,componentsPerAttribute:d,values:u}),delete e.attributes[t],e};var Z=new i,Q=new y,J=new _;q.transformToWorldCoordinates=function(e){var r=e.modelMatrix;if(y.equals(r,y.IDENTITY))return e;var i=e.geometry.attributes;M(r,i.position),M(r,i.prevPosition),M(r,i.nextPosition),(l(i.normal)||l(i.binormal)||l(i.tangent))&&(y.inverse(r,Q),y.transpose(Q,Q),y.getRotation(Q,J),D(J,i.normal),D(J,i.binormal),D(J,i.tangent));var n=e.geometry.boundingSphere;return l(n)&&(e.geometry.boundingSphere=t.transform(n,r,n)),e.modelMatrix=y.clone(y.IDENTITY),e};var K=new i;q.combine=function(e){var r,n,o,a,s=e.length;e[0].modelMatrix;var u,c,h,m=l(e[0].geometry.indices),f=e[0].geometry.primitiveType,v=I(e);for(r in v)if(v.hasOwnProperty(r))for(u=v[r].values,a=0,n=0;s>n;++n)for(c=e[n].geometry.attributes[r].values,h=c.length,o=0;h>o;++o)u[a++]=c[o];var g;if(m){var _=0;for(n=0;s>n;++n)_+=e[n].geometry.indices.length;var y=d.computeNumberOfVertices(new d({attributes:v,primitiveType:w.POINTS})),C=p.createTypedArray(y,_),S=0,E=0;for(n=0;s>n;++n){var b=e[n].geometry.indices,T=b.length;for(a=0;T>a;++a)C[S++]=E+b[a];E+=d.computeNumberOfVertices(e[n].geometry)}g=C}var x,P=new i,A=0;for(n=0;s>n;++n){if(x=e[n].geometry.boundingSphere,!l(x)){P=void 0;break}i.add(x.center,P,P)}if(l(P))for(i.divideByScalar(P,s,P),n=0;s>n;++n){x=e[n].geometry.boundingSphere;var M=i.magnitude(i.subtract(x.center,P,K))+x.radius;M>A&&(A=M)}return new d({attributes:v,indices:g,primitiveType:f,boundingSphere:l(P)?new t(P,A):void 0})};var $=new i,et=new i,tt=new i,rt=new i;q.computeNormal=function(e){for(var t=e.indices,r=e.attributes,n=r.position.values,o=r.position.values.length/3,s=t.length,l=new Array(o),u=new Array(s/3),c=new Array(s),h=0;o>h;h++)l[h]={indexOffset:0,count:0,currentCount:0};var d=0;for(h=0;s>h;h+=3){var p=t[h],f=t[h+1],v=t[h+2],g=3*p,_=3*f,y=3*v;et.x=n[g],et.y=n[g+1],et.z=n[g+2],tt.x=n[_],tt.y=n[_+1],tt.z=n[_+2],rt.x=n[y],rt.y=n[y+1],rt.z=n[y+2],l[p].count++,l[f].count++,l[v].count++,i.subtract(tt,et,tt),i.subtract(rt,et,rt),u[d]=i.cross(tt,rt,new i),d++}var C=0;for(h=0;o>h;h++)l[h].indexOffset+=C,C+=l[h].count;d=0;var w;for(h=0;s>h;h+=3){w=l[t[h]];var S=w.indexOffset+w.currentCount;c[S]=d,w.currentCount++,w=l[t[h+1]],S=w.indexOffset+w.currentCount,c[S]=d,w.currentCount++,w=l[t[h+2]],S=w.indexOffset+w.currentCount,c[S]=d,w.currentCount++,d++}var E=new Float32Array(3*o);for(h=0;o>h;h++){var b=3*h;if(w=l[h],w.count>0){for(i.clone(i.ZERO,$),d=0;d<w.count;d++)i.add($,u[c[w.indexOffset+d]],$);i.normalize($,$),E[b]=$.x,E[b+1]=$.y,E[b+2]=$.z}else E[b]=0,E[b+1]=0,E[b+2]=1}return e.attributes.normal=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:E}),e};var it=new i,nt=new i,ot=new i;q.computeBinormalAndTangent=function(e){e.attributes;for(var t=e.indices,r=e.attributes.position.values,n=e.attributes.normal.values,o=e.attributes.st.values,s=e.attributes.position.values.length/3,l=t.length,u=new Array(3*s),c=0;c<u.length;c++)u[c]=0;var h,d,p;for(c=0;l>c;c+=3){var f=t[c],v=t[c+1],g=t[c+2];h=3*f,d=3*v,p=3*g;var _=2*f,y=2*v,C=2*g,w=r[h],S=r[h+1],E=r[h+2],b=o[_],T=o[_+1],x=o[y+1]-T,P=o[C+1]-T,A=1/((o[y]-b)*P-(o[C]-b)*x),M=(P*(r[d]-w)-x*(r[p]-w))*A,D=(P*(r[d+1]-S)-x*(r[p+1]-S))*A,I=(P*(r[d+2]-E)-x*(r[p+2]-E))*A;u[h]+=M,u[h+1]+=D,u[h+2]+=I,u[d]+=M,u[d+1]+=D,u[d+2]+=I,u[p]+=M,u[p+1]+=D,u[p+2]+=I
}var R=new Float32Array(3*s),O=new Float32Array(3*s);for(c=0;s>c;c++){h=3*c,d=h+1,p=h+2;var L=i.fromArray(n,h,it),N=i.fromArray(u,h,ot),B=i.dot(L,N);i.multiplyByScalar(L,B,nt),i.normalize(i.subtract(N,nt,N),N),O[h]=N.x,O[d]=N.y,O[p]=N.z,i.normalize(i.cross(L,N,N),N),R[h]=N.x,R[d]=N.y,R[p]=N.z}return e.attributes.tangent=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:O}),e.attributes.binormal=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:R}),e};var at=new i,st=new i,lt=new i,ut=new i,ct=new i,ht={positions:new Array(7),indices:new Array(9)},dt=new r,mt=new r,pt=new r,ft=new i,vt=new i,gt=new i,_t=new i,yt=new i,Ct=new i;return q.wrapLongitude=function(e){var r=e.boundingSphere;if(l(r)){var i=r.center.x-r.radius;if(i>0||t.intersect(r,n.UNIT_Y)!==f.INTERSECTING)return e}return z(e),e.primitiveType===w.TRIANGLES?G(e):e.primitiveType===w.LINES&&H(e),e},q}),r("Core/EllipseGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EllipseGeometryLibrary","./Ellipsoid","./GeographicProjection","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix3","./PrimitiveType","./Quaternion","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w){"use strict";function S(e,t,i){var o=t.vertexFormat,a=t.center,s=t.semiMajorAxis,u=t.ellipsoid,h=t.stRotation,p=i?2*(e.length/3):e.length/3,f=o.st?new Float32Array(2*p):void 0,v=o.normal?new Float32Array(3*p):void 0,g=o.tangent?new Float32Array(3*p):void 0,y=o.binormal?new Float32Array(3*p):void 0,w=0,S=N,E=B,b=F,T=new c(u),x=T.project(u.cartesianToCartographic(a,z),V),P=u.scaleToGeodeticSurface(a,A);u.geodeticSurfaceNormal(P,P);for(var I=C.fromAxisAngle(P,h,L),k=_.fromQuaternion(I,O),U=e.length,W=i?U:0,G=2*(W/3),H=0;U>H;H+=3){var q=H+1,j=H+2,Y=r.fromArray(e,H,A);if(o.st){var X=_.multiplyByVector(k,Y,M),Z=T.project(u.cartesianToCartographic(X,z),D);r.subtract(Z,x,Z),R.x=(Z.x+s)/(2*s),R.y=(Z.y+s)/(2*s),i&&(f[w+G]=R.x,f[w+1+G]=R.y),f[w++]=R.x,f[w++]=R.y}S=u.geodeticSurfaceNormal(Y,S),(o.normal||o.tangent||o.binormal)&&((o.tangent||o.binormal)&&(E=r.cross(r.UNIT_Z,S,E),_.multiplyByVector(k,E,E)),o.normal&&(v[H]=S.x,v[q]=S.y,v[j]=S.z,i&&(v[H+W]=-S.x,v[q+W]=-S.y,v[j+W]=-S.z)),o.tangent&&(g[H]=E.x,g[q]=E.y,g[j]=E.z,i&&(g[H+W]=-E.x,g[q+W]=-E.y,g[j+W]=-E.z)),o.binormal&&(b=r.cross(S,E,b),y[H]=b.x,y[q]=b.y,y[j]=b.z,i&&(y[H+W]=b.x,y[q+W]=b.y,y[j+W]=b.z)))}var Q=new m;if(o.position){var J=l.raisePositionsToHeight(e,t,i);Q.position=new d({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:J})}return o.st&&(Q.st=new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:f})),o.normal&&(Q.normal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:v})),o.tangent&&(Q.tangent=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:g})),o.binormal&&(Q.binormal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:y})),Q}function E(e){var t,r,i,n,o,a=new Array(2*e*(e+1)),s=0;for(n=1;e>n;++n){for(i=n*(n+1),t=(n-1)*n,a[s++]=i++,a[s++]=t,a[s++]=i,r=2*n,o=0;r-1>o;++o)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;a[s++]=i++,a[s++]=t,a[s++]=i}for(r=2*e,++i,++t,n=0;r-1>n;++n)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;for(++t,++i,n=e-1;n>0;--n){for(a[s++]=t++,a[s++]=t,a[s++]=i,r=2*n,o=0;r-1>o;++o)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;a[s++]=t++,a[s++]=t++,a[s++]=i++}return a}function b(t){var i=t.center;k=r.multiplyByScalar(t.ellipsoid.geodeticSurfaceNormal(i,k),t.height,k),k=r.add(i,k,k);var n=new e(k,t.semiMajorAxis),o=l.computeEllipsePositions(t,!0,!1),a=o.positions,s=o.numPts,u=S(a,t,!1),c=E(s);return c=v.createTypedArray(a.length/3,c),{boundingSphere:n,attributes:u,indices:c}}function T(e,t){var i=t.vertexFormat,o=t.center,a=t.semiMajorAxis,s=t.ellipsoid,l=t.height,u=t.extrudedHeight,h=t.stRotation,p=2*(e.length/3),f=new Float64Array(3*p),v=i.st?new Float32Array(2*p):void 0,g=i.normal?new Float32Array(3*p):void 0,y=i.tangent?new Float32Array(3*p):void 0,w=i.binormal?new Float32Array(3*p):void 0,S=0,E=N,b=B,T=F,x=new c(s),P=x.project(s.cartesianToCartographic(o,z),V),k=s.scaleToGeodeticSurface(o,A);s.geodeticSurfaceNormal(k,k);for(var U=C.fromAxisAngle(k,h,L),W=_.fromQuaternion(U,O),G=e.length,H=2*(G/3),q=0;G>q;q+=3){var j,Y=q+1,X=q+2,Z=r.fromArray(e,q,A);if(i.st){var Q=_.multiplyByVector(W,Z,M),J=x.project(s.cartesianToCartographic(Q,z),D);r.subtract(J,P,J),R.x=(J.x+a)/(2*a),R.y=(J.y+a)/(2*a),v[S+H]=R.x,v[S+1+H]=R.y,v[S++]=R.x,v[S++]=R.y}Z=s.scaleToGeodeticSurface(Z,Z),j=r.clone(Z,M),E=s.geodeticSurfaceNormal(Z,E);var K=r.multiplyByScalar(E,l,I);if(Z=r.add(Z,K,Z),K=r.multiplyByScalar(E,u,K),j=r.add(j,K,j),i.position&&(f[q+G]=j.x,f[Y+G]=j.y,f[X+G]=j.z,f[q]=Z.x,f[Y]=Z.y,f[X]=Z.z),i.normal||i.tangent||i.binormal){T=r.clone(E,T);var $=r.fromArray(e,(q+3)%G,I);r.subtract($,Z,$);var et=r.subtract(j,Z,D);E=r.normalize(r.cross(et,$,E),E),i.normal&&(g[q]=E.x,g[Y]=E.y,g[X]=E.z,g[q+G]=E.x,g[Y+G]=E.y,g[X+G]=E.z),i.tangent&&(b=r.normalize(r.cross(T,E,b),b),y[q]=b.x,y[Y]=b.y,y[X]=b.z,y[q+G]=b.x,y[q+1+G]=b.y,y[q+2+G]=b.z),i.binormal&&(w[q]=T.x,w[Y]=T.y,w[X]=T.z,w[q+G]=T.x,w[Y+G]=T.y,w[X+G]=T.z)}}var tt=new m;return i.position&&(tt.position=new d({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:f})),i.st&&(tt.st=new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:v})),i.normal&&(tt.normal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:g})),i.tangent&&(tt.tangent=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:y})),i.binormal&&(tt.binormal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:w})),tt}function x(e){for(var t,r,i,n,o=e.length/3,a=v.createTypedArray(o,6*o),s=0,l=0;o-1>l;l++)t=l,i=l+o,r=t+1,n=r+o,a[s++]=t,a[s++]=i,a[s++]=r,a[s++]=r,a[s++]=i,a[s++]=n;return t=o-1,i=l+o,r=0,n=r+o,a[s++]=t,a[s++]=i,a[s++]=r,a[s++]=r,a[s++]=i,a[s++]=n,a}function P(t){var i=t.center,n=t.ellipsoid,o=t.semiMajorAxis,a=r.multiplyByScalar(n.geodeticSurfaceNormal(i,A),t.height,A);U.center=r.add(i,a,U.center),U.radius=o,a=r.multiplyByScalar(n.geodeticSurfaceNormal(i,a),t.extrudedHeight,a),W.center=r.add(i,a,W.center),W.radius=o;var s=l.computeEllipsePositions(t,!0,!0),u=s.positions,c=s.numPts,d=s.outerPositions,m=e.union(U,W),g=S(u,t,!0),_=E(c),C=_.length;_.length=2*C;for(var w=u.length/3,b=0;C>b;b+=3)_[b+C]=_[b+2]+w,_[b+1+C]=_[b+1]+w,_[b+2+C]=_[b]+w;var P=v.createTypedArray(2*w/3,_),M=new h({attributes:g,indices:P,primitiveType:y.TRIANGLES}),D=T(d,t);_=x(d);var I=v.createTypedArray(2*d.length/3,_),R=new h({attributes:D,indices:I,primitiveType:y.TRIANGLES}),O=f.combine([new p({geometry:M}),new p({geometry:R})]);return{boundingSphere:m,attributes:O.attributes,indices:O.indices}}var A=new r,M=new r,D=new r,I=new r,R=new t,O=new _,L=new C,N=new r,B=new r,F=new r,z=new i,V=new r,k=new r,U=new e,W=new e,G=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.center,i=e.semiMajorAxis,n=e.semiMinorAxis,s=o(e.granularity,g.RADIANS_PER_DEGREE),l=o(e.height,0),c=e.extrudedHeight,h=a(c)&&!g.equalsEpsilon(l,c,1);this._center=r.clone(t),this._semiMajorAxis=i,this._semiMinorAxis=n,this._ellipsoid=o(e.ellipsoid,u.WGS84),this._rotation=o(e.rotation,0),this._stRotation=o(e.stRotation,0),this._height=l,this._granularity=s,this._vertexFormat=o(e.vertexFormat,w.DEFAULT),this._extrudedHeight=c,this._extrude=h,this._workerName="createEllipseGeometry"};return G.createGeometry=function(e){var t,r={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:e._height,extrudedHeight:e._extrudedHeight,granularity:e._granularity,vertexFormat:e._vertexFormat,stRotation:e._stRotation};return e._extrude?(r.extrudedHeight=Math.min(e._extrudedHeight,e._height),r.height=Math.max(e._extrudedHeight,e._height),t=P(r)):t=b(r),new h({attributes:t.attributes,indices:t.indices,primitiveType:y.TRIANGLES,boundingSphere:t.boundingSphere})},G}),r("Core/CircleGeometry",["./defaultValue","./defined","./DeveloperError","./EllipseGeometry"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.radius,n={center:t.center,semiMajorAxis:r,semiMinorAxis:r,ellipsoid:t.ellipsoid,height:t.height,extrudedHeight:t.extrudedHeight,granularity:t.granularity,vertexFormat:t.vertexFormat,stRotation:t.stRotation};this._ellipseGeometry=new i(n),this._workerName="createCircleGeometry"};return n.createGeometry=function(e){return i.createGeometry(e._ellipseGeometry)},n}),r("Core/EllipseOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EllipseGeometryLibrary","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(i){var n=i.center;g=t.multiplyByScalar(i.ellipsoid.geodeticSurfaceNormal(n,g),i.height,g),g=t.add(n,g,g);for(var o=new e(g,i.semiMajorAxis),s=a.computeEllipsePositions(i,!1,!0).outerPositions,l=new c({position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:a.raisePositionsToHeight(s,i,!1)})}),d=s.length/3,m=h.createTypedArray(d,2*d),p=0,f=0;d-1>f;f++)m[p++]=f,m[p++]=f+1;return m[p++]=d-1,m[p++]=0,{boundingSphere:o,attributes:l,indices:m}}function f(n){var o=i(n.numberOfVerticalLines,16);o=Math.max(o,0);var s=n.center,l=n.ellipsoid,d=n.semiMajorAxis,m=t.multiplyByScalar(l.geodeticSurfaceNormal(s,v),n.height,v);_.center=t.add(s,m,_.center),_.radius=d,m=t.multiplyByScalar(l.geodeticSurfaceNormal(s,m),n.extrudedHeight,m),y.center=t.add(s,m,y.center),y.radius=d;var p=a.computeEllipsePositions(n,!1,!0).outerPositions,f=new c({position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:a.raisePositionsToHeight(p,n,!0)})});p=f.position.values;var g=e.union(_,y),C=p.length/3,w=h.createTypedArray(C,2*C+2*o);C/=2;for(var S=0,E=0;C-1>E;E++)w[S++]=E,w[S++]=E+1,w[S++]=E+C,w[S++]=E+C+1;w[S++]=C-1,w[S++]=0,w[S++]=C+C-1,w[S++]=C;var b;if(o>0){var T=Math.min(o,C);b=Math.round(C/T)}var x=Math.min(b*o,C);if(o>0)for(E=0;x>E;E+=b)w[S++]=E,w[S++]=E+C;return{boundingSphere:g,attributes:f,indices:w}}var v=new t,g=new t,_=new e,y=new e,C=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.center,o=e.semiMajorAxis,a=e.semiMinorAxis,l=i(e.granularity,d.RADIANS_PER_DEGREE),u=i(e.height,0),c=e.extrudedHeight,h=n(c)&&!d.equalsEpsilon(u,c,1);this._center=t.clone(r),this._semiMajorAxis=o,this._semiMinorAxis=a,this._ellipsoid=i(e.ellipsoid,s.WGS84),this._rotation=i(e.rotation,0),this._height=u,this._granularity=l,this._extrudedHeight=c,this._extrude=h,this._numberOfVerticalLines=Math.max(i(e.numberOfVerticalLines,16),0),this._workerName="createEllipseOutlineGeometry"};return C.createGeometry=function(e){var t,r={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:e._height,extrudedHeight:e._extrudedHeight,granularity:e._granularity,numberOfVerticalLines:e._numberOfVerticalLines};return e._extrude?(r.extrudedHeight=Math.min(e._extrudedHeight,e._height),r.height=Math.max(e._extrudedHeight,e._height),t=f(r)):t=p(r),new l({attributes:t.attributes,indices:t.indices,primitiveType:m.LINES,boundingSphere:t.boundingSphere})},C}),r("Core/CircleOutlineGeometry",["./defaultValue","./defined","./DeveloperError","./EllipseOutlineGeometry"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.radius,n={center:t.center,semiMajorAxis:r,semiMinorAxis:r,ellipsoid:t.ellipsoid,height:t.height,extrudedHeight:t.extrudedHeight,granularity:t.granularity,numberOfVerticalLines:t.numberOfVerticalLines};this._ellipseGeometry=new i(n),this._workerName="createCircleOutlineGeometry"};return n.createGeometry=function(e){return i.createGeometry(e._ellipseGeometry)},n}),r("Core/ClockRange",["./freezeObject"],function(e){"use strict";var t={UNBOUNDED:0,CLAMPED:1,LOOP_STOP:2};return e(t)}),r("Core/ClockStep",["./freezeObject"],function(e){"use strict";var t={TICK_DEPENDENT:0,SYSTEM_CLOCK_MULTIPLIER:1,SYSTEM_CLOCK:2};return e(t)}),r("Core/getTimestamp",["./defined"],function(e){"use strict";var t;return t="undefined"!=typeof performance&&e(performance.now)?function(){return performance.now()}:function(){return Date.now()}}),r("ThirdParty/sprintf",[],function(){function e(){var e=/%%|%(\d+\$)?([-+\'#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuideEfFgG])/g,t=arguments,r=0,i=t[r++],n=function(e,t,r,i){r||(r=" ");var n=e.length>=t?"":Array(1+t-e.length>>>0).join(r);return i?e+n:n+e},o=function(e,t,r,i,o,a){var s=i-e.length;return s>0&&(e=r||!o?n(e,i,a,r):e.slice(0,t.length)+n("",s,"0",!0)+e.slice(t.length)),e},a=function(e,t,r,i,a,s,l){var u=e>>>0;return r=r&&u&&{2:"0b",8:"0",16:"0x"}[t]||"",e=r+n(u.toString(t),s||0,"0",!1),o(e,r,i,a,l)},s=function(e,t,r,i,n,a){return null!=i&&(e=e.slice(0,i)),o(e,"",t,r,n,a)},l=function(e,i,l,u,c,h,d){var m,p,f,v,g;if("%%"==e)return"%";for(var _=!1,y="",C=!1,w=!1,S=" ",E=l.length,b=0;l&&E>b;b++)switch(l.charAt(b)){case" ":y=" ";break;case"+":y="+";break;case"-":_=!0;break;case"'":S=l.charAt(b+1);break;case"0":C=!0;break;case"#":w=!0}if(u=u?"*"==u?+t[r++]:"*"==u.charAt(0)?+t[u.slice(1,-1)]:+u:0,0>u&&(u=-u,_=!0),!isFinite(u))throw new Error("sprintf: (minimum-)width must be finite");switch(h=h?"*"==h?+t[r++]:"*"==h.charAt(0)?+t[h.slice(1,-1)]:+h:"fFeE".indexOf(d)>-1?6:"d"==d?0:void 0,g=i?t[i.slice(0,-1)]:t[r++],d){case"s":return s(String(g),_,u,h,C,S);case"c":return s(String.fromCharCode(+g),_,u,h,C);case"b":return a(g,2,w,_,u,h,C);case"o":return a(g,8,w,_,u,h,C);case"x":return a(g,16,w,_,u,h,C);case"X":return a(g,16,w,_,u,h,C).toUpperCase();case"u":return a(g,10,w,_,u,h,C);case"i":case"d":return m=+g||0,m=Math.round(m-m%1),p=0>m?"-":y,g=p+n(String(Math.abs(m)),h,"0",!1),o(g,p,_,u,C);case"e":case"E":case"f":case"F":case"g":case"G":return m=+g,p=0>m?"-":y,f=["toExponential","toFixed","toPrecision"]["efg".indexOf(d.toLowerCase())],v=["toString","toUpperCase"]["eEfFgG".indexOf(d)%2],g=p+Math.abs(m)[f](h),o(g,p,_,u,C)[v]();default:return e}};return i.replace(e,l)}return e}),r("Core/binarySearch",["./defined","./DeveloperError"],function(){"use strict";var e=function(e,t,r){for(var i,n,o=0,a=e.length-1;a>=o;)if(i=~~((o+a)/2),n=r(e[i],t),0>n)o=i+1;else{if(!(n>0))return i;a=i-1}return~(a+1)};return e}),r("Core/GregorianDate",[],function(){"use strict";var e=function(e,t,r,i,n,o,a,s){this.year=e,this.month=t,this.day=r,this.hour=i,this.minute=n,this.second=o,this.millisecond=a,this.isLeapSecond=s};return e}),r("Core/isLeapYear",["./DeveloperError"],function(){"use strict";function e(e){return 0===e%4&&0!==e%100||0===e%400}return e}),r("Core/LeapSecond",[],function(){"use strict";var e=function(e,t){this.julianDate=e,this.offset=t};return e}),r("Core/TimeConstants",["./freezeObject"],function(e){"use strict";var t={SECONDS_PER_MILLISECOND:.001,SECONDS_PER_MINUTE:60,MINUTES_PER_HOUR:60,HOURS_PER_DAY:24,SECONDS_PER_HOUR:3600,MINUTES_PER_DAY:1440,SECONDS_PER_DAY:86400,DAYS_PER_JULIAN_CENTURY:36525,PICOSECOND:1e-9,MODIFIED_JULIAN_DATE_DIFFERENCE:2400000.5};return e(t)}),r("Core/TimeStandard",["./freezeObject"],function(e){"use strict";var t={UTC:0,TAI:1};return e(t)}),r("Core/JulianDate",["../ThirdParty/sprintf","./binarySearch","./defaultValue","./defined","./DeveloperError","./GregorianDate","./isLeapYear","./LeapSecond","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){return M.compare(e.julianDate,t.julianDate)}function h(e){_.julianDate=e;var r=M.leapSeconds,i=t(r,_,c);0>i&&(i=~i),i>=r.length&&(i=r.length-1);var n=r[i].offset;if(i>0){var o=M.secondsDifference(r[i].julianDate,e);o>n&&(i--,n=r[i].offset)}M.addSeconds(e,n,e)}function d(e,r){_.julianDate=e;var i=M.leapSeconds,n=t(i,_,c);if(0>n&&(n=~n),0===n)return M.addSeconds(e,-i[0].offset,r);if(n>=i.length)return M.addSeconds(e,-i[n-1].offset,r);var o=M.secondsDifference(i[n].julianDate,e);return 0===o?M.addSeconds(e,-i[n].offset,r):1>=o?void 0:M.addSeconds(e,-i[--n].offset,r)}function m(e,t,r){var i=0|t/l.SECONDS_PER_DAY;return e+=i,t-=l.SECONDS_PER_DAY*i,0>t&&(e--,t+=l.SECONDS_PER_DAY),r.dayNumber=e,r.secondsOfDay=t,r}function p(e,t,r,i,n,o,a){var s=0|(t-14)/12,u=e+4800+s,c=(0|1461*u/4)+(0|367*(t-2-12*s)/12)-(0|3*((u+100)/100)/4)+r-32075;i-=12,0>i&&(i+=24);var h=o+(i*l.SECONDS_PER_HOUR+n*l.SECONDS_PER_MINUTE+a*l.SECONDS_PER_MILLISECOND);return h>=43200&&(c-=1),[c,h]}var f=new o,v=[31,28,31,30,31,30,31,31,30,31,30,31],g=29,_=new s,y=/^(\d{4})$/,C=/^(\d{4})-(\d{2})$/,w=/^(\d{4})-?(\d{3})$/,S=/^(\d{4})-?W(\d{2})-?(\d{1})?$/,E=/^(\d{4})-?(\d{2})-?(\d{2})$/,b=/([Z+\-])?(\d{2})?:?(\d{2})?$/,T=/^(\d{2})(\.\d+)?/.source+b.source,x=/^(\d{2}):?(\d{2})(\.\d+)?/.source+b.source,P=/^(\d{2}):?(\d{2}):?(\d{2})(\.\d+)?/.source+b.source,A="Invalid ISO 8601 date.",M=function(e,t,i){this.dayNumber=void 0,this.secondsOfDay=void 0,e=r(e,0),t=r(t,0),i=r(i,u.UTC);var n=0|e;t+=(e-n)*l.SECONDS_PER_DAY,m(n,t,this),i===u.UTC&&h(this)};M.fromDate=function(e,t){var r=p(e.getUTCFullYear(),e.getUTCMonth()+1,e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds());return i(t)?(m(r[0],r[1],t),h(t),t):new M(r[0],r[1],u.UTC)},M.fromIso8601=function(e,t){e=e.replace(",",".");var r,o,s,l=e.split("T"),c=1,d=1,f=0,_=0,b=0,D=0,I=l[0],R=l[1];if(!i(I))throw new n(A);var O;if(l=I.match(E),null!==l){if(O=I.split("-").length-1,O>0&&2!==O)throw new n(A);r=+l[1],c=+l[2],d=+l[3]}else if(l=I.match(C),null!==l)r=+l[1],c=+l[2];else if(l=I.match(y),null!==l)r=+l[1];else{var L;if(l=I.match(w),null!==l){if(r=+l[1],L=+l[2],s=a(r),1>L||s&&L>366||!s&&L>365)throw new n(A)}else{if(l=I.match(S),null===l)throw new n(A);r=+l[1];var N=+l[2],B=+l[3]||0;if(O=I.split("-").length-1,O>0&&(!i(l[3])&&1!==O||i(l[3])&&2!==O))throw new n(A);var F=new Date(Date.UTC(r,0,4));L=7*N+B-F.getUTCDay()-3}o=new Date(Date.UTC(r,0,1)),o.setUTCDate(L),c=o.getUTCMonth()+1,d=o.getUTCDate()}if(s=a(r),1>c||c>12||1>d||(2!==c||!s)&&d>v[c-1]||s&&2===c&&d>g)throw new n(A);var z;if(i(R)){if(l=R.match(P),null!==l){if(O=R.split(":").length-1,O>0&&2!==O&&3!==O)throw new n(A);f=+l[1],_=+l[2],b=+l[3],D=1e3*+(l[4]||0),z=5}else if(l=R.match(x),null!==l){if(O=R.split(":").length-1,O>0&&1!==O)throw new n(A);f=+l[1],_=+l[2],b=60*+(l[3]||0),z=4}else{if(l=R.match(T),null===l)throw new n(A);f=+l[1],_=60*+(l[2]||0),z=3}if(_>=60||b>=61||f>24||24===f&&(_>0||b>0||D>0))throw new n(A);var V=l[z],k=+l[z+1],U=+(l[z+2]||0);switch(V){case"+":f-=k,_-=U;break;case"-":f+=k,_+=U;break;case"Z":break;default:_+=new Date(Date.UTC(r,c-1,d,f,_)).getTimezoneOffset()}}else _+=new Date(Date.UTC(r,c-1,d)).getTimezoneOffset();var W=60===b;for(W&&b--;_>=60;)_-=60,f++;for(;f>=24;)f-=24,d++;for(o=s&&2===c?g:v[c-1];d>o;)d-=o,c++,c>12&&(c-=12,r++),o=s&&2===c?g:v[c-1];for(;0>_;)_+=60,f--;for(;0>f;)f+=24,d--;for(;1>d;)c--,1>c&&(c+=12,r--),o=s&&2===c?g:v[c-1],d+=o;var G=p(r,c,d,f,_,b,D);return i(t)?(m(G[0],G[1],t),h(t)):t=new M(G[0],G[1],u.UTC),W&&M.addSeconds(t,1,t),t},M.now=function(e){return M.fromDate(new Date,e)};var D=new M(0,0,u.TAI);return M.toGregorianDate=function(e,t){var r=!1,n=d(e,D);i(n)||(M.addSeconds(e,-1,D),n=d(D,D),r=!0);var a=n.dayNumber,s=n.secondsOfDay;s>=43200&&(a+=1);var u=0|a+68569,c=0|4*u/146097;u=0|u-(0|(146097*c+3)/4);var h=0|4e3*(u+1)/1461001;u=0|u-(0|1461*h/4)+31;var m=0|80*u/2447,p=0|u-(0|2447*m/80);u=0|m/11;var f=0|m+2-12*u,v=0|100*(c-49)+h+u,g=0|s/l.SECONDS_PER_HOUR,_=s-g*l.SECONDS_PER_HOUR,y=0|_/l.SECONDS_PER_MINUTE;_-=y*l.SECONDS_PER_MINUTE;var C=0|_,w=(_-C)/l.SECONDS_PER_MILLISECOND;return g+=12,g>23&&(g-=24),r&&(C+=1),i(t)?(t.year=v,t.month=f,t.day=p,t.hour=g,t.minute=y,t.second=C,t.millisecond=w,t.isLeapSecond=r,t):new o(v,f,p,g,y,C,w,r)},M.toDate=function(e){var t=M.toGregorianDate(e,f),r=t.second;return t.isLeapSecond&&(r-=1),new Date(Date.UTC(t.year,t.month-1,t.day,t.hour,t.minute,r,t.millisecond))},M.toIso8601=function(t,r){var n,o=M.toGregorianDate(t,o);return i(r)||0===o.millisecond?i(r)&&0!==r?(n=(.01*o.millisecond).toFixed(r).replace(".","").slice(0,r),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",o.year,o.month,o.day,o.hour,o.minute,o.second,n)):e("%04d-%02d-%02dT%02d:%02d:%02dZ",o.year,o.month,o.day,o.hour,o.minute,o.second):(n=(.01*o.millisecond).toString().replace(".",""),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",o.year,o.month,o.day,o.hour,o.minute,o.second,n))},M.clone=function(e,t){return i(e)?i(t)?(t.dayNumber=e.dayNumber,t.secondsOfDay=e.secondsOfDay,t):new M(e.dayNumber,e.secondsOfDay,u.TAI):void 0},M.compare=function(e,t){var r=e.dayNumber-t.dayNumber;return 0!==r?r:e.secondsOfDay-t.secondsOfDay},M.equals=function(e,t){return e===t||i(e)&&i(t)&&e.dayNumber===t.dayNumber&&e.secondsOfDay===t.secondsOfDay},M.equalsEpsilon=function(e,t,r){return e===t||i(e)&&i(t)&&Math.abs(M.secondsDifference(e,t))<=r},M.totalDays=function(e){return e.dayNumber+e.secondsOfDay/l.SECONDS_PER_DAY},M.secondsDifference=function(e,t){var r=(e.dayNumber-t.dayNumber)*l.SECONDS_PER_DAY;return r+(e.secondsOfDay-t.secondsOfDay)},M.daysDifference=function(e,t){var r=e.dayNumber-t.dayNumber,i=(e.secondsOfDay-t.secondsOfDay)/l.SECONDS_PER_DAY;return r+i},M.computeTaiMinusUtc=function(e){_.julianDate=e;var r=M.leapSeconds,i=t(r,_,c);return 0>i&&(i=~i,--i,0>i&&(i=0)),r[i].offset},M.addSeconds=function(e,t,r){return m(e.dayNumber,e.secondsOfDay+t,r)},M.addMinutes=function(e,t,r){var i=e.secondsOfDay+t*l.SECONDS_PER_MINUTE;return m(e.dayNumber,i,r)},M.addHours=function(e,t,r){var i=e.secondsOfDay+t*l.SECONDS_PER_HOUR;return m(e.dayNumber,i,r)},M.addDays=function(e,t,r){var i=e.dayNumber+t;return m(i,e.secondsOfDay,r)},M.lessThan=function(e,t){return M.compare(e,t)<0},M.lessThanOrEquals=function(e,t){return M.compare(e,t)<=0},M.greaterThan=function(e,t){return M.compare(e,t)>0},M.greaterThanOrEquals=function(e,t){return M.compare(e,t)>=0},M.prototype.clone=function(e){return M.clone(this,e)},M.prototype.equals=function(e){return M.equals(this,e)},M.prototype.equalsEpsilon=function(e,t){return M.equalsEpsilon(this,e,t)},M.prototype.toString=function(){return M.toIso8601(this)},M.leapSeconds=[new s(new M(2441317,43210,u.TAI),10),new s(new M(2441499,43211,u.TAI),11),new s(new M(2441683,43212,u.TAI),12),new s(new M(2442048,43213,u.TAI),13),new s(new M(2442413,43214,u.TAI),14),new s(new M(2442778,43215,u.TAI),15),new s(new M(2443144,43216,u.TAI),16),new s(new M(2443509,43217,u.TAI),17),new s(new M(2443874,43218,u.TAI),18),new s(new M(2444239,43219,u.TAI),19),new s(new M(2444786,43220,u.TAI),20),new s(new M(2445151,43221,u.TAI),21),new s(new M(2445516,43222,u.TAI),22),new s(new M(2446247,43223,u.TAI),23),new s(new M(2447161,43224,u.TAI),24),new s(new M(2447892,43225,u.TAI),25),new s(new M(2448257,43226,u.TAI),26),new s(new M(2448804,43227,u.TAI),27),new s(new M(2449169,43228,u.TAI),28),new s(new M(2449534,43229,u.TAI),29),new s(new M(2450083,43230,u.TAI),30),new s(new M(2450630,43231,u.TAI),31),new s(new M(2451179,43232,u.TAI),32),new s(new M(2453736,43233,u.TAI),33),new s(new M(2454832,43234,u.TAI),34),new s(new M(2456109,43235,u.TAI),35)],M}),r("Core/Clock",["./ClockRange","./ClockStep","./defaultValue","./defined","./DeveloperError","./Event","./getTimestamp","./JulianDate"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(n){n=r(n,r.EMPTY_OBJECT);var l=n.startTime,u=!i(l),c=n.stopTime,h=!i(c),d=n.currentTime,m=!i(d);u&&h&&m?(d=s.now(),l=s.clone(d),c=s.addDays(d,1,new s)):u&&h?(l=s.clone(d),c=s.addDays(d,1,new s)):u&&m?(l=s.addDays(c,-1,new s),d=s.clone(l)):m&&h?(d=s.clone(l),c=s.addDays(l,1,new s)):m?d=s.clone(l):h?c=s.addDays(d,1,new s):u&&(l=s.clone(d)),this.startTime=l,this.stopTime=c,this.currentTime=d,this.multiplier=r(n.multiplier,1),this.clockStep=r(n.clockStep,t.SYSTEM_CLOCK_MULTIPLIER),this.clockRange=r(n.clockRange,e.UNBOUNDED),this.canAnimate=r(n.canAnimate,!0),this.shouldAnimate=r(n.shouldAnimate,!0),this.onTick=new o,this._lastSystemTime=a()};return l.prototype.tick=function(){var r=a(),i=s.clone(this.currentTime),n=this.startTime,o=this.stopTime,l=this.multiplier;if(this.canAnimate&&this.shouldAnimate)if(this.clockStep===t.SYSTEM_CLOCK)i=s.now(i);else{if(this.clockStep===t.TICK_DEPENDENT)i=s.addSeconds(i,l,i);else{var u=r-this._lastSystemTime;i=s.addSeconds(i,l*(u/1e3),i)}if(this.clockRange===e.CLAMPED)s.lessThan(i,n)?i=s.clone(n,i):s.greaterThan(i,o)&&(i=s.clone(o,i));else if(this.clockRange===e.LOOP_STOP)for(s.lessThan(i,n)&&(i=s.clone(n,i));s.greaterThan(i,o);)i=s.addSeconds(n,s.secondsDifference(i,o),i)}return this.currentTime=i,this._lastSystemTime=r,this.onTick.raiseEvent(this),i},l}),r("Core/Color",["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./Math"],function(e,t,r,i,n,o){"use strict";function a(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1>6*r?e+6*(t-e)*r:1>2*r?t:2>3*r?e+6*(t-e)*(2/3-r):e}var s=function(t,r,i,n){this.red=e(t,1),this.green=e(r,1),this.blue=e(i,1),this.alpha=e(n,1)};s.fromCartesian4=function(e,r){return t(r)?(r.red=e.x,r.green=e.y,r.blue=e.z,r.alpha=e.w,r):new s(e.x,e.y,e.z,e.w)},s.fromBytes=function(t,r,i,n){return t=s.byteToFloat(e(t,255)),r=s.byteToFloat(e(r,255)),i=s.byteToFloat(e(i,255)),n=s.byteToFloat(e(n,255)),new s(t,r,i,n)};var l,u,c;i.supportsTypedArrays()&&(l=new ArrayBuffer(4),u=new Uint32Array(l),c=new Uint8Array(l)),s.fromRgba=function(e){return u[0]=e,s.fromBytes(c[0],c[1],c[2],c[3])},s.fromHsl=function(t,r,i,n){t=e(t,0)%1,r=e(r,0),i=e(i,0),n=e(n,1);var o=i,l=i,u=i;if(0!==r){var c;c=.5>i?i*(1+r):i+r-i*r;var h=2*i-c;o=a(h,c,t+1/3),l=a(h,c,t),u=a(h,c,t-1/3)}return new s(o,l,u,n)},s.fromRandom=function(r,i){r=e(r,e.EMPTY_OBJECT);var n=r.red;if(!t(n)){var a=e(r.minimumRed,0),l=e(r.maximumRed,1);n=a+o.nextRandomNumber()*(l-a)}var u=r.green;if(!t(u)){var c=e(r.minimumGreen,0),h=e(r.maximumGreen,1);u=c+o.nextRandomNumber()*(h-c)}var d=r.blue;if(!t(d)){var m=e(r.minimumBlue,0),p=e(r.maximumBlue,1);d=m+o.nextRandomNumber()*(p-m)}var f=r.alpha;if(!t(f)){var v=e(r.minimumAlpha,0),g=e(r.maximumAlpha,1);f=v+o.nextRandomNumber()*(g-v)}return t(i)?(i.red=n,i.green=u,i.blue=d,i.alpha=f,i):new s(n,u,d,f)};var h=/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i,d=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i,m=/^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)$/i,p=/^hsla?\(\s*([0-9.]+)\s*,\s*([0-9.]+%)\s*,\s*([0-9.]+%)(?:\s*,\s*([0-9.]+))?\s*\)$/i;return s.fromCssColorString=function(r){var i=s[r.toUpperCase()];if(t(i))return s.clone(i);var n=h.exec(r);return null!==n?new s(parseInt(n[1],16)/15,parseInt(n[2],16)/15,parseInt(n[3],16)/15):(n=d.exec(r),null!==n?new s(parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255):(n=m.exec(r),null!==n?new s(parseFloat(n[1])/("%"===n[1].substr(-1)?100:255),parseFloat(n[2])/("%"===n[2].substr(-1)?100:255),parseFloat(n[3])/("%"===n[3].substr(-1)?100:255),parseFloat(e(n[4],"1.0"))):(n=p.exec(r),null!==n?s.fromHsl(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,parseFloat(e(n[4],"1.0"))):void 0)))},s.packedLength=4,s.pack=function(t,r,i){i=e(i,0),r[i++]=t.red,r[i++]=t.green,r[i++]=t.blue,r[i]=t.alpha},s.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new s),n.red=r[i++],n.green=r[i++],n.blue=r[i++],n.alpha=r[i],n},s.byteToFloat=function(e){return e/255},s.floatToByte=function(e){return 1===e?255:0|256*e},s.clone=function(e,r){return t(e)?t(r)?(r.red=e.red,r.green=e.green,r.blue=e.blue,r.alpha=e.alpha,r):new s(e.red,e.green,e.blue,e.alpha):void 0},s.equals=function(e,r){return e===r||t(e)&&t(r)&&e.red===r.red&&e.green===r.green&&e.blue===r.blue&&e.alpha===r.alpha},s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.prototype.equalsEpsilon=function(e,r){return this===e||t(e)&&Math.abs(this.red-e.red)<=r&&Math.abs(this.green-e.green)<=r&&Math.abs(this.blue-e.blue)<=r&&Math.abs(this.alpha-e.alpha)<=r},s.prototype.toString=function(){return"("+this.red+", "+this.green+", "+this.blue+", "+this.alpha+")"},s.prototype.toCssColorString=function(){var e=s.floatToByte(this.red),t=s.floatToByte(this.green),r=s.floatToByte(this.blue);return 1===this.alpha?"rgb("+e+","+t+","+r+")":"rgba("+e+","+t+","+r+","+this.alpha+")"},s.prototype.toBytes=function(e){var r=s.floatToByte(this.red),i=s.floatToByte(this.green),n=s.floatToByte(this.blue),o=s.floatToByte(this.alpha);return t(e)?(e[0]=r,e[1]=i,e[2]=n,e[3]=o,e):[r,i,n,o]},s.prototype.toRgba=function(){return c[0]=s.floatToByte(this.red),c[1]=s.floatToByte(this.green),c[2]=s.floatToByte(this.blue),c[3]=s.floatToByte(this.alpha),u[0]},s.prototype.brighten=function(e,t){return e=1-e,t.red=1-(1-this.red)*e,t.green=1-(1-this.green)*e,t.blue=1-(1-this.blue)*e,t.alpha=this.alpha,t},s.prototype.darken=function(e,t){return e=1-e,t.red=this.red*e,t.green=this.green*e,t.blue=this.blue*e,t.alpha=this.alpha,t},s.ALICEBLUE=n(s.fromCssColorString("#F0F8FF")),s.ANTIQUEWHITE=n(s.fromCssColorString("#FAEBD7")),s.AQUA=n(s.fromCssColorString("#00FFFF")),s.AQUAMARINE=n(s.fromCssColorString("#7FFFD4")),s.AZURE=n(s.fromCssColorString("#F0FFFF")),s.BEIGE=n(s.fromCssColorString("#F5F5DC")),s.BISQUE=n(s.fromCssColorString("#FFE4C4")),s.BLACK=n(s.fromCssColorString("#000000")),s.BLANCHEDALMOND=n(s.fromCssColorString("#FFEBCD")),s.BLUE=n(s.fromCssColorString("#0000FF")),s.BLUEVIOLET=n(s.fromCssColorString("#8A2BE2")),s.BROWN=n(s.fromCssColorString("#A52A2A")),s.BURLYWOOD=n(s.fromCssColorString("#DEB887")),s.CADETBLUE=n(s.fromCssColorString("#5F9EA0")),s.CHARTREUSE=n(s.fromCssColorString("#7FFF00")),s.CHOCOLATE=n(s.fromCssColorString("#D2691E")),s.CORAL=n(s.fromCssColorString("#FF7F50")),s.CORNFLOWERBLUE=n(s.fromCssColorString("#6495ED")),s.CORNSILK=n(s.fromCssColorString("#FFF8DC")),s.CRIMSON=n(s.fromCssColorString("#DC143C")),s.CYAN=n(s.fromCssColorString("#00FFFF")),s.DARKBLUE=n(s.fromCssColorString("#00008B")),s.DARKCYAN=n(s.fromCssColorString("#008B8B")),s.DARKGOLDENROD=n(s.fromCssColorString("#B8860B")),s.DARKGRAY=n(s.fromCssColorString("#A9A9A9")),s.DARKGREEN=n(s.fromCssColorString("#006400")),s.DARKGREY=s.DARKGRAY,s.DARKKHAKI=n(s.fromCssColorString("#BDB76B")),s.DARKMAGENTA=n(s.fromCssColorString("#8B008B")),s.DARKOLIVEGREEN=n(s.fromCssColorString("#556B2F")),s.DARKORANGE=n(s.fromCssColorString("#FF8C00")),s.DARKORCHID=n(s.fromCssColorString("#9932CC")),s.DARKRED=n(s.fromCssColorString("#8B0000")),s.DARKSALMON=n(s.fromCssColorString("#E9967A")),s.DARKSEAGREEN=n(s.fromCssColorString("#8FBC8F")),s.DARKSLATEBLUE=n(s.fromCssColorString("#483D8B")),s.DARKSLATEGRAY=n(s.fromCssColorString("#2F4F4F")),s.DARKSLATEGREY=s.DARKSLATEGRAY,s.DARKTURQUOISE=n(s.fromCssColorString("#00CED1")),s.DARKVIOLET=n(s.fromCssColorString("#9400D3")),s.DEEPPINK=n(s.fromCssColorString("#FF1493")),s.DEEPSKYBLUE=n(s.fromCssColorString("#00BFFF")),s.DIMGRAY=n(s.fromCssColorString("#696969")),s.DIMGREY=s.DIMGRAY,s.DODGERBLUE=n(s.fromCssColorString("#1E90FF")),s.FIREBRICK=n(s.fromCssColorString("#B22222")),s.FLORALWHITE=n(s.fromCssColorString("#FFFAF0")),s.FORESTGREEN=n(s.fromCssColorString("#228B22")),s.FUSCHIA=n(s.fromCssColorString("#FF00FF")),s.GAINSBORO=n(s.fromCssColorString("#DCDCDC")),s.GHOSTWHITE=n(s.fromCssColorString("#F8F8FF")),s.GOLD=n(s.fromCssColorString("#FFD700")),s.GOLDENROD=n(s.fromCssColorString("#DAA520")),s.GRAY=n(s.fromCssColorString("#808080")),s.GREEN=n(s.fromCssColorString("#008000")),s.GREENYELLOW=n(s.fromCssColorString("#ADFF2F")),s.GREY=s.GRAY,s.HONEYDEW=n(s.fromCssColorString("#F0FFF0")),s.HOTPINK=n(s.fromCssColorString("#FF69B4")),s.INDIANRED=n(s.fromCssColorString("#CD5C5C")),s.INDIGO=n(s.fromCssColorString("#4B0082")),s.IVORY=n(s.fromCssColorString("#FFFFF0")),s.KHAKI=n(s.fromCssColorString("#F0E68C")),s.LAVENDER=n(s.fromCssColorString("#E6E6FA")),s.LAVENDAR_BLUSH=n(s.fromCssColorString("#FFF0F5")),s.LAWNGREEN=n(s.fromCssColorString("#7CFC00")),s.LEMONCHIFFON=n(s.fromCssColorString("#FFFACD")),s.LIGHTBLUE=n(s.fromCssColorString("#ADD8E6")),s.LIGHTCORAL=n(s.fromCssColorString("#F08080")),s.LIGHTCYAN=n(s.fromCssColorString("#E0FFFF")),s.LIGHTGOLDENRODYELLOW=n(s.fromCssColorString("#FAFAD2")),s.LIGHTGRAY=n(s.fromCssColorString("#D3D3D3")),s.LIGHTGREEN=n(s.fromCssColorString("#90EE90")),s.LIGHTGREY=s.LIGHTGRAY,s.LIGHTPINK=n(s.fromCssColorString("#FFB6C1")),s.LIGHTSEAGREEN=n(s.fromCssColorString("#20B2AA")),s.LIGHTSKYBLUE=n(s.fromCssColorString("#87CEFA")),s.LIGHTSLATEGRAY=n(s.fromCssColorString("#778899")),s.LIGHTSLATEGREY=s.LIGHTSLATEGRAY,s.LIGHTSTEELBLUE=n(s.fromCssColorString("#B0C4DE")),s.LIGHTYELLOW=n(s.fromCssColorString("#FFFFE0")),s.LIME=n(s.fromCssColorString("#00FF00")),s.LIMEGREEN=n(s.fromCssColorString("#32CD32")),s.LINEN=n(s.fromCssColorString("#FAF0E6")),s.MAGENTA=n(s.fromCssColorString("#FF00FF")),s.MAROON=n(s.fromCssColorString("#800000")),s.MEDIUMAQUAMARINE=n(s.fromCssColorString("#66CDAA")),s.MEDIUMBLUE=n(s.fromCssColorString("#0000CD")),s.MEDIUMORCHID=n(s.fromCssColorString("#BA55D3")),s.MEDIUMPURPLE=n(s.fromCssColorString("#9370DB")),s.MEDIUMSEAGREEN=n(s.fromCssColorString("#3CB371")),s.MEDIUMSLATEBLUE=n(s.fromCssColorString("#7B68EE")),s.MEDIUMSPRINGGREEN=n(s.fromCssColorString("#00FA9A")),s.MEDIUMTURQUOISE=n(s.fromCssColorString("#48D1CC")),s.MEDIUMVIOLETRED=n(s.fromCssColorString("#C71585")),s.MIDNIGHTBLUE=n(s.fromCssColorString("#191970")),s.MINTCREAM=n(s.fromCssColorString("#F5FFFA")),s.MISTYROSE=n(s.fromCssColorString("#FFE4E1")),s.MOCCASIN=n(s.fromCssColorString("#FFE4B5")),s.NAVAJOWHITE=n(s.fromCssColorString("#FFDEAD")),s.NAVY=n(s.fromCssColorString("#000080")),s.OLDLACE=n(s.fromCssColorString("#FDF5E6")),s.OLIVE=n(s.fromCssColorString("#808000")),s.OLIVEDRAB=n(s.fromCssColorString("#6B8E23")),s.ORANGE=n(s.fromCssColorString("#FFA500")),s.ORANGERED=n(s.fromCssColorString("#FF4500")),s.ORCHID=n(s.fromCssColorString("#DA70D6")),s.PALEGOLDENROD=n(s.fromCssColorString("#EEE8AA")),s.PALEGREEN=n(s.fromCssColorString("#98FB98")),s.PALETURQUOISE=n(s.fromCssColorString("#AFEEEE")),s.PALEVIOLETRED=n(s.fromCssColorString("#DB7093")),s.PAPAYAWHIP=n(s.fromCssColorString("#FFEFD5")),s.PEACHPUFF=n(s.fromCssColorString("#FFDAB9")),s.PERU=n(s.fromCssColorString("#CD853F")),s.PINK=n(s.fromCssColorString("#FFC0CB")),s.PLUM=n(s.fromCssColorString("#DDA0DD")),s.POWDERBLUE=n(s.fromCssColorString("#B0E0E6")),s.PURPLE=n(s.fromCssColorString("#800080")),s.RED=n(s.fromCssColorString("#FF0000")),s.ROSYBROWN=n(s.fromCssColorString("#BC8F8F")),s.ROYALBLUE=n(s.fromCssColorString("#4169E1")),s.SADDLEBROWN=n(s.fromCssColorString("#8B4513")),s.SALMON=n(s.fromCssColorString("#FA8072")),s.SANDYBROWN=n(s.fromCssColorString("#F4A460")),s.SEAGREEN=n(s.fromCssColorString("#2E8B57")),s.SEASHELL=n(s.fromCssColorString("#FFF5EE")),s.SIENNA=n(s.fromCssColorString("#A0522D")),s.SILVER=n(s.fromCssColorString("#C0C0C0")),s.SKYBLUE=n(s.fromCssColorString("#87CEEB")),s.SLATEBLUE=n(s.fromCssColorString("#6A5ACD")),s.SLATEGRAY=n(s.fromCssColorString("#708090")),s.SLATEGREY=s.SLATEGRAY,s.SNOW=n(s.fromCssColorString("#FFFAFA")),s.SPRINGGREEN=n(s.fromCssColorString("#00FF7F")),s.STEELBLUE=n(s.fromCssColorString("#4682B4")),s.TAN=n(s.fromCssColorString("#D2B48C")),s.TEAL=n(s.fromCssColorString("#008080")),s.THISTLE=n(s.fromCssColorString("#D8BFD8")),s.TOMATO=n(s.fromCssColorString("#FF6347")),s.TURQUOISE=n(s.fromCssColorString("#40E0D0")),s.VIOLET=n(s.fromCssColorString("#EE82EE")),s.WHEAT=n(s.fromCssColorString("#F5DEB3")),s.WHITE=n(s.fromCssColorString("#FFFFFF")),s.WHITESMOKE=n(s.fromCssColorString("#F5F5F5")),s.YELLOW=n(s.fromCssColorString("#FFFF00")),s.YELLOWGREEN=n(s.fromCssColorString("#9ACD32")),s
}),r("Core/ColorGeometryInstanceAttribute",["./Color","./ComponentDatatype","./defaultValue","./defined","./defineProperties","./DeveloperError"],function(e,t,r,i,n){"use strict";var o=function(t,i,n,o){t=r(t,1),i=r(i,1),n=r(n,1),o=r(o,1),this.value=new Uint8Array([e.floatToByte(t),e.floatToByte(i),e.floatToByte(n),e.floatToByte(o)])};return n(o.prototype,{componentDatatype:{get:function(){return t.UNSIGNED_BYTE}},componentsPerAttribute:{get:function(){return 4}},normalize:{get:function(){return!0}}}),o.fromColor=function(e){return new o(e.red,e.green,e.blue,e.alpha)},o.toValue=function(e,t){return i(t)?e.toBytes(t):new Uint8Array(e.toBytes())},o}),r("Core/CornerType",["./freezeObject"],function(e){"use strict";var t={ROUNDED:0,MITERED:1,BEVELED:2};return e(t)}),r("Core/isArray",["./defined"],function(e){"use strict";var t=Array.isArray;return e(t)||(t=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),t}),r("Core/EllipsoidGeodesic",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){var t=e._uSquared,r=e._ellipsoid.maximumRadius,i=e._ellipsoid.minimumRadius,n=(r-i)/r,o=Math.cos(e._startHeading),a=Math.sin(e._startHeading),s=(1-n)*Math.tan(e._start.latitude),l=1/Math.sqrt(1+s*s),u=l*s,c=Math.atan2(s,o),h=l*a,d=h*h,m=1-d,p=Math.sqrt(m),f=t/4,v=f*f,g=v*f,_=v*v,y=1+f-3*v/4+5*g/4-175*_/64,C=1-f+15*v/8-35*g/8,w=1-3*f+35*v/4,S=1-5*f,E=y*c-C*Math.sin(2*c)*f/2-w*Math.sin(4*c)*v/16-S*Math.sin(6*c)*g/48-5*Math.sin(8*c)*_/512,b=e._constants;b.a=r,b.b=i,b.f=n,b.cosineHeading=o,b.sineHeading=a,b.tanU=s,b.cosineU=l,b.sineU=u,b.sigma=c,b.sineAlpha=h,b.sineSquaredAlpha=d,b.cosineSquaredAlpha=m,b.cosineAlpha=p,b.u2Over4=f,b.u4Over16=v,b.u6Over64=g,b.u8Over256=_,b.a0=y,b.a1=C,b.a2=w,b.a3=S,b.distanceRatio=E}function u(e,t){return e*t*(4+e*(4-3*t))/16}function c(e,t,r,i,n,o,a){var s=u(e,r);return(1-s)*e*t*(i+s*n*(a+s*o*(2*a*a-1)))}function h(e,t,r,i,n,o,a){var l,u,h,d,m,p=(t-r)/t,f=o-i,v=Math.atan((1-p)*Math.tan(n)),g=Math.atan((1-p)*Math.tan(a)),_=Math.cos(v),y=Math.sin(v),C=Math.cos(g),w=Math.sin(g),S=_*C,E=_*w,b=y*w,T=y*C,x=f,P=s.TWO_PI,A=Math.cos(x),M=Math.sin(x);do{A=Math.cos(x),M=Math.sin(x);var D=E-T*A;h=Math.sqrt(C*C*M*M+D*D),u=b+S*A,l=Math.atan2(h,u);var I;0===h?(I=0,d=1):(I=S*M/h,d=1-I*I),P=x,m=u-2*b/d,isNaN(m)&&(m=0),x=f+c(p,I,d,l,h,u,m)}while(Math.abs(x-P)>s.EPSILON12);var R=d*(t*t-r*r)/(r*r),O=1+R*(4096+R*(R*(320-175*R)-768))/16384,L=R*(256+R*(R*(74-47*R)-128))/1024,N=m*m,B=L*h*(m+L*(u*(2*N-1)-L*m*(4*h*h-3)*(4*N-3)/6)/4),F=r*O*(l-B),z=Math.atan2(C*M,E-T*A),V=Math.atan2(_*M,E*A-T);e._distance=F,e._startHeading=z,e._endHeading=V,e._uSquared=R}function d(r,i,n,o){e.normalize(o.cartographicToCartesian(i,p),m),e.normalize(o.cartographicToCartesian(n,p),p),h(r,o.maximumRadius,o.minimumRadius,i.longitude,i.latitude,n.longitude,n.latitude),i.height=0,n.height=0,r._start=t.clone(i,r._start),r._end=t.clone(n,r._end),l(r)}var m=new e,p=new e,f=function(e,n,o){var s=r(o,a.WGS84);this._ellipsoid=s,this._start=new t,this._end=new t,this._constants={},this._startHeading=void 0,this._endHeading=void 0,this._distance=void 0,this._uSquared=void 0,i(e)&&i(n)&&d(this,e,n,s)};return n(f.prototype,{surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},startHeading:{get:function(){return this._startHeading}},endHeading:{get:function(){return this._endHeading}}}),f.prototype.setEndPoints=function(e,t){d(this,e,t,this._ellipsoid)},f.prototype.interpolateUsingFraction=function(e,t){return this.interpolateUsingSurfaceDistance(this._distance*e,t)},f.prototype.interpolateUsingSurfaceDistance=function(e,r){var n=this._constants,o=n.distanceRatio+e/n.b,a=Math.cos(2*o),s=Math.cos(4*o),l=Math.cos(6*o),u=Math.sin(2*o),h=Math.sin(4*o),d=Math.sin(6*o),m=Math.sin(8*o),p=o*o,f=o*p,v=n.u8Over256,g=n.u2Over4,_=n.u6Over64,y=n.u4Over16,C=2*f*v*a/3+o*(1-g+7*y/4-15*_/4+579*v/64-(y-15*_/4+187*v/16)*a-(5*_/4-115*v/16)*s-29*v*l/16)+(g/2-y+71*_/32-85*v/16)*u+(5*y/16-5*_/4+383*v/96)*h-p*((_-11*v/2)*u+5*v*h/2)+(29*_/96-29*v/16)*d+539*v*m/1536,w=Math.asin(Math.sin(C)*n.cosineAlpha),S=Math.atan(n.a/n.b*Math.tan(w));C-=n.sigma;var E=Math.cos(2*n.sigma+C),b=Math.sin(C),T=Math.cos(C),x=n.cosineU*T,P=n.sineU*b,A=Math.atan2(b*n.sineHeading,x-P*n.cosineHeading),M=A-c(n.f,n.sineAlpha,n.cosineSquaredAlpha,C,b,T,E);return i(r)?(r.longitude=this._start.longitude+M,r.latitude=S,r.height=0,r):new t(this._start.longitude+M,S,0)},f}),r("Core/PolylinePipeline",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidGeodesic","./IntersectionTests","./isArray","./Math","./Matrix4","./Plane"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r){var i,n=new Array(e);if(t===r){for(i=0;e>i;i++)n[i]=t;return n}var o=r-t,a=o/e;for(i=1;e>i;i++){var s=t+i*a;n[i]=s}return n[0]=t,n}function m(t,r,i,n,o,a,s,l){var u=n.scaleToGeodeticSurface(t,P),c=n.scaleToGeodeticSurface(r,A),h=p.numberOfPoints(t,r,i),m=n.cartesianToCartographic(u,b),f=n.cartesianToCartographic(c,T),v=d(h,o,a);M.setEndPoints(m,f);var g=M.surfaceDistance/h,_=l;m.height=o;var y=n.cartographicToCartesian(m,x);e.pack(y,s,_),_+=3;for(var C=1;h>C;C++){var w=M.interpolateUsingSurfaceDistance(C*g,T);w.height=v[C],y=n.cartographicToCartesian(w,x),e.pack(y,s,_),_+=3}return _}var p={};p.numberOfPoints=function(t,r,i){var n=e.angleBetween(t,r);return Math.ceil(n/i)};var f=new t;p.extractHeights=function(e,t){for(var r=e.length,i=new Array(r),n=0;r>n;n++){var o=e[n];i[n]=t.cartesianToCartographic(o,f).height}return i};var v=new c,g=new e,_=new e,y=new h(e.ZERO,0),C=new e,w=new h(e.ZERO,0),S=new e,E=new e,b=new t,T=new t,x=new e,P=new e,A=new e,M=new a;return p.wrapLongitude=function(t,n){var o=[],a=[];if(i(t)&&t.length>0){n=r(n,c.IDENTITY);var l=c.inverseTransformation(n,v),u=c.multiplyByPoint(l,e.ZERO,g),d=c.multiplyByPointAsVector(l,e.UNIT_Y,_),m=h.fromPointNormal(u,d,y),p=c.multiplyByPointAsVector(l,e.UNIT_X,C),f=h.fromPointNormal(u,p,w),b=1;o.push(e.clone(t[0]));for(var T=o[0],x=t.length,P=1;x>P;++P){var A=t[P];if(h.getPointDistance(f,T)<0||h.getPointDistance(f,A)<0){var M=s.lineSegmentPlane(T,A,m,S);if(i(M)){var D=e.multiplyByScalar(d,5e-9,E);h.getPointDistance(m,T)<0&&e.negate(D,D),o.push(e.add(M,D,new e)),a.push(b+1),e.negate(D,D),o.push(e.add(M,D,new e)),b=1}}o.push(e.clone(t[P])),b++,T=A}a.push(b)}return{positions:o,lengths:a}},p.removeDuplicates=function(t){var r=t.length;if(2>r)return t.slice(0);var i=[];i.push(t[0]);for(var n=1;r>n;++n){var o=t[n-1],a=t[n];e.equals(o,a)||i.push(a)}return i},p.generateArc=function(t){i(t)||(t={});var n,a,s,c=t.positions,h=r(t.ellipsoid,o.WGS84),d=r(t.height,0),f=r(t.granularity,u.RADIANS_PER_DEGREE),v=c.length,g=0;for(n=0;v-1>n;n++)a=c[n],s=c[n+1],g+=p.numberOfPoints(a,s,f);g++;var _=3*g,y=new Array(_),C=0;for(n=0;v-1>n;n++){a=c[n],s=c[n+1];var w,S;l(d)?(w=d[n],S=d[n+1]):(w=d,S=d),C=m(a,s,f,h,w,S,y,C)}var E=c[v-1],T=h.cartesianToCartographic(E,b);T.height=l(d)?d[v-1]:d;var P=h.cartographicToCartesian(T,x);return e.pack(P,y,_-3),y},p.generateCartesianArc=function(t){for(var r=p.generateArc(t),i=r.length/3,n=new Array(i),o=0;i>o;o++)n[o]=e.unpack(r,3*o);return n},p}),r("Core/EarthOrientationParametersSample",[],function(){"use strict";var e=function(e,t,r,i,n){this.xPoleWander=e,this.yPoleWander=t,this.xPoleOffset=r,this.yPoleOffset=i,this.ut1MinusUtc=n};return e}),r("Core/EarthOrientationParameters",["../ThirdParty/when","./binarySearch","./defaultValue","./defined","./EarthOrientationParametersSample","./freezeObject","./JulianDate","./LeapSecond","./loadJson","./RuntimeError","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t){return a.compare(e.julianDate,t)}function m(e,r){if(!i(r.columnNames))return e._dataError="Error in loaded EOP data: The columnNames property is required.",void 0;if(!i(r.samples))return e._dataError="Error in loaded EOP data: The samples property is required.",void 0;var n=r.columnNames.indexOf("modifiedJulianDateUtc"),o=r.columnNames.indexOf("xPoleWanderRadians"),l=r.columnNames.indexOf("yPoleWanderRadians"),u=r.columnNames.indexOf("ut1MinusUtcSeconds"),m=r.columnNames.indexOf("xCelestialPoleOffsetRadians"),p=r.columnNames.indexOf("yCelestialPoleOffsetRadians"),f=r.columnNames.indexOf("taiMinusUtcSeconds");if(0>n||0>o||0>l||0>u||0>m||0>p||0>f)return e._dataError="Error in loaded EOP data: The columnNames property must include modifiedJulianDateUtc, xPoleWanderRadians, yPoleWanderRadians, ut1MinusUtcSeconds, xCelestialPoleOffsetRadians, yCelestialPoleOffsetRadians, and taiMinusUtcSeconds columns",void 0;var v=e._samples=r.samples,g=e._dates=[];e._dateColumn=n,e._xPoleWanderRadiansColumn=o,e._yPoleWanderRadiansColumn=l,e._ut1MinusUtcSecondsColumn=u,e._xCelestialPoleOffsetRadiansColumn=m,e._yCelestialPoleOffsetRadiansColumn=p,e._taiMinusUtcSecondsColumn=f,e._columnCount=r.columnNames.length,e._lastIndex=void 0;for(var _,y=e._addNewLeapSeconds,C=0,w=v.length;w>C;C+=e._columnCount){var S=v[C+n],E=v[C+f],b=S+c.MODIFIED_JULIAN_DATE_DIFFERENCE,T=new a(b,E,h.TAI);if(g.push(T),y){if(E!==_&&i(_)){var x=a.leapSeconds,P=t(x,T,d);if(0>P){var A=new s(T,E);x.splice(~P,0,A)}}_=E}}}function p(e,t,r,i,n){var o=r*i;n.xPoleWander=t[o+e._xPoleWanderRadiansColumn],n.yPoleWander=t[o+e._yPoleWanderRadiansColumn],n.xPoleOffset=t[o+e._xCelestialPoleOffsetRadiansColumn],n.yPoleOffset=t[o+e._yCelestialPoleOffsetRadiansColumn],n.ut1MinusUtc=t[o+e._ut1MinusUtcSecondsColumn]}function f(e,t,r){return t+e*(r-t)}function v(e,t,r,i,n,o,s){var l=e._columnCount;if(o>t.length-1)return s.xPoleWander=0,s.yPoleWander=0,s.xPoleOffset=0,s.yPoleOffset=0,s.ut1MinusUtc=0,s;var u=t[n],c=t[o];if(u.equals(c)||i.equals(u))return p(e,r,n,l,s),s;if(i.equals(c))return p(e,r,o,l,s),s;var h=a.secondsDifference(i,u)/a.secondsDifference(c,u),d=n*l,m=o*l,v=r[d+e._ut1MinusUtcSecondsColumn],g=r[m+e._ut1MinusUtcSecondsColumn],_=g-v;if(_>.5||-.5>_){var y=r[d+e._taiMinusUtcSecondsColumn],C=r[m+e._taiMinusUtcSecondsColumn];y!==C&&(c.equals(i)?v=g:g-=C-y)}return s.xPoleWander=f(h,r[d+e._xPoleWanderRadiansColumn],r[m+e._xPoleWanderRadiansColumn]),s.yPoleWander=f(h,r[d+e._yPoleWanderRadiansColumn],r[m+e._yPoleWanderRadiansColumn]),s.xPoleOffset=f(h,r[d+e._xCelestialPoleOffsetRadiansColumn],r[m+e._xCelestialPoleOffsetRadiansColumn]),s.yPoleOffset=f(h,r[d+e._yCelestialPoleOffsetRadiansColumn],r[m+e._yCelestialPoleOffsetRadiansColumn]),s.ut1MinusUtc=f(h,v,g),s}var g=function(t){if(t=r(t,r.EMPTY_OBJECT),this._dates=void 0,this._samples=void 0,this._dateColumn=-1,this._xPoleWanderRadiansColumn=-1,this._yPoleWanderRadiansColumn=-1,this._ut1MinusUtcSecondsColumn=-1,this._xCelestialPoleOffsetRadiansColumn=-1,this._yCelestialPoleOffsetRadiansColumn=-1,this._taiMinusUtcSecondsColumn=-1,this._columnCount=0,this._lastIndex=-1,this._downloadPromise=void 0,this._dataError=void 0,this._addNewLeapSeconds=r(t.addNewLeapSeconds,!0),i(t.data))m(this,t.data);else if(i(t.url)){var n=this;this._downloadPromise=e(l(t.url),function(e){m(n,e)},function(){n._dataError="An error occurred while retrieving the EOP data from the URL "+t.url+"."})}else m(this,{columnNames:["dateIso8601","modifiedJulianDateUtc","xPoleWanderRadians","yPoleWanderRadians","ut1MinusUtcSeconds","lengthOfDayCorrectionSeconds","xCelestialPoleOffsetRadians","yCelestialPoleOffsetRadians","taiMinusUtcSeconds"],samples:[]})};return g.NONE=o({getPromiseToLoad:function(){return e()},compute:function(e,t){return i(t)?(t.xPoleWander=0,t.yPoleWander=0,t.xPoleOffset=0,t.yPoleOffset=0,t.ut1MinusUtc=0):t=new n(0,0,0,0,0),t}}),g.prototype.getPromiseToLoad=function(){return e(this._downloadPromise)},g.prototype.compute=function(e,r){if(!i(this._samples)){if(i(this._dataError))throw new u(this._dataError);return void 0}if(i(r)||(r=new n(0,0,0,0,0)),0===this._samples.length)return r.xPoleWander=0,r.yPoleWander=0,r.xPoleOffset=0,r.yPoleOffset=0,r.ut1MinusUtc=0,r;var o=this._dates,s=this._lastIndex,l=0,c=0;if(i(s)){var h=o[s],d=o[s+1],m=a.lessThanOrEquals(h,e),p=!i(d),f=p||a.greaterThanOrEquals(d,e);if(m&&f)return l=s,!p&&d.equals(e)&&++l,c=l+1,v(this,o,this._samples,e,l,c,r),r}var g=t(o,e,a.compare,this._dateColumn);return g>=0?(g<o.length-1&&o[g+1].equals(e)&&++g,l=g,c=g):(c=~g,l=c-1,0>l&&(l=0)),this._lastIndex=l,v(this,o,this._samples,e,l,c,r),r},g}),r("Core/Iau2006XysSample",[],function(){"use strict";var e=function(e,t,r){this.x=e,this.y=t,this.s=r};return e}),r("Core/Iau2006XysData",["../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./Iau2006XysSample","./JulianDate","./loadJson","./TimeStandard"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t,r){var i=h;return i.dayNumber=t,i.secondsOfDay=r,o.daysDifference(i,e._sampleZeroDateTT)}function u(r,n){if(r._chunkDownloadsInProgress[n])return r._chunkDownloadsInProgress[n];var o=e.defer();r._chunkDownloadsInProgress[n]=o;var s,l=r._xysFileUrlTemplate;return s=i(l)?l.replace("{0}",n):t("Assets/IAU2006_XYS/IAU2006_XYS_"+n+".json"),e(a(s),function(e){r._chunkDownloadsInProgress[n]=!1;for(var t=r._samples,i=e.samples,a=3*n*r._samplesPerXysFile,s=0,l=i.length;l>s;++s)t[a+s]=i[s];o.resolve()}),o.promise}var c=function(e){e=r(e,r.EMPTY_OBJECT),this._xysFileUrlTemplate=e.xysFileUrlTemplate,this._interpolationOrder=r(e.interpolationOrder,9),this._sampleZeroJulianEphemerisDate=r(e.sampleZeroJulianEphemerisDate,2442396.5),this._sampleZeroDateTT=new o(this._sampleZeroJulianEphemerisDate,0,s.TAI),this._stepSizeDays=r(e.stepSizeDays,1),this._samplesPerXysFile=r(e.samplesPerXysFile,1e3),this._totalSamples=r(e.totalSamples,27426),this._samples=new Array(3*this._totalSamples),this._chunkDownloadsInProgress=[];for(var t=this._interpolationOrder,i=this._denominators=new Array(t+1),n=this._xTable=new Array(t+1),a=Math.pow(this._stepSizeDays,t),l=0;t>=l;++l){i[l]=a,n[l]=l*this._stepSizeDays;for(var u=0;t>=u;++u)u!==l&&(i[l]*=l-u);i[l]=1/i[l]}this._work=new Array(t+1),this._coef=new Array(t+1)},h=new o(0,0,s.TAI);return c.prototype.preload=function(t,r,i,n){var o=l(this,t,r),a=l(this,i,n),s=0|o/this._stepSizeDays-this._interpolationOrder/2;0>s&&(s=0);var c=a/this._stepSizeDays-this._interpolationOrder/2|0+this._interpolationOrder;c>=this._totalSamples&&(c=this._totalSamples-1);for(var h=0|s/this._samplesPerXysFile,d=0|c/this._samplesPerXysFile,m=[],p=h;d>=p;++p)m.push(u(this,p));return e.all(m)},c.prototype.computeXysRadians=function(e,t,r){var o=l(this,e,t);if(0>o)return void 0;var a=0|o/this._stepSizeDays;if(a>=this._totalSamples)return void 0;var s=this._interpolationOrder,c=a-(0|s/2);0>c&&(c=0);var h=c+s;h>=this._totalSamples&&(h=this._totalSamples-1,c=h-s,0>c&&(c=0));var d=!1,m=this._samples;if(i(m[3*c])||(u(this,0|c/this._samplesPerXysFile),d=!0),i(m[3*h])||(u(this,0|h/this._samplesPerXysFile),d=!0),d)return void 0;i(r)?(r.x=0,r.y=0,r.s=0):r=new n(0,0,0);var p,f,v=o-c*this._stepSizeDays,g=this._work,_=this._denominators,y=this._coef,C=this._xTable;for(p=0;s>=p;++p)g[p]=v-C[p];for(p=0;s>=p;++p){for(y[p]=1,f=0;s>=f;++f)f!==p&&(y[p]*=g[f]);y[p]*=_[p];var w=3*(c+p);r.x+=y[p]*m[w++],r.y+=y[p]*m[w++],r.s+=y[p]*m[w]}return r},c}),r("Core/Transforms",["../ThirdParty/when","./Cartesian2","./Cartesian3","./Cartesian4","./defaultValue","./defined","./DeveloperError","./EarthOrientationParameters","./EarthOrientationParametersSample","./Ellipsoid","./Iau2006XysData","./Iau2006XysSample","./JulianDate","./Math","./Matrix3","./Matrix4","./TimeConstants"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g={},_=new r,y=new r,C=new r;g.eastNorthUpToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=0,i[1]=1,i[2]=0,i[3]=0,i[4]=-a,i[5]=0,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=a,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(0,-a,0,e.x,1,0,0,e.y,0,0,a,e.z,0,0,0,1)}var s=_,l=y,c=C;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=l.x,i[1]=l.y,i[2]=l.z,i[3]=0,i[4]=c.x,i[5]=c.y,i[6]=c.z,i[7]=0,i[8]=s.x,i[9]=s.y,i[10]=s.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(l.x,c.x,s.x,e.x,l.y,c.y,s.y,e.y,l.z,c.z,s.z,e.z,0,0,0,1)};var w=new r,S=new r,E=new r;g.northEastDownToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=-a,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-a,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(-a,0,0,e.x,0,1,0,e.y,0,0,-a,e.z,0,0,0,1)}var s=w,l=S,c=E;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=c.x,i[1]=c.y,i[2]=c.z,i[3]=0,i[4]=l.x,i[5]=l.y,i[6]=l.z,i[7]=0,i[8]=-s.x,i[9]=-s.y,i[10]=-s.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(c.x,l.x,-s.x,e.x,c.y,l.y,-s.y,e.y,c.z,l.z,-s.z,e.z,0,0,0,1)},g.northUpEastToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=-a,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=0,i[6]=a,i[7]=0,i[8]=0,i[9]=1,i[10]=0,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(-a,0,0,e.x,0,0,1,e.y,0,a,0,e.z,0,0,0,1)}var s=_,l=y,c=C;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=c.x,i[1]=c.y,i[2]=c.z,i[3]=0,i[4]=s.x,i[5]=s.y,i[6]=s.z,i[7]=0,i[8]=l.x,i[9]=l.y,i[10]=l.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(c.x,s.x,l.x,e.x,c.y,s.y,l.y,e.y,c.z,s.z,l.z,e.z,0,0,0,1)};var b=24110.54841,T=8640184.812866,x=.093104,P=-62e-7,A=1.1772758384668e-19,M=72921158553e-15,D=m.TWO_PI/86400,I=new d;g.computeTemeToPseudoFixedMatrix=function(e,t){I=d.addSeconds(e,-d.computeTaiMinusUtc(e),I);var r,i=I.dayNumber,n=I.secondsOfDay,a=i-2451545;r=n>=43200?(a+.5)/v.DAYS_PER_JULIAN_CENTURY:(a-.5)/v.DAYS_PER_JULIAN_CENTURY;var s=b+r*(T+r*(x+r*P)),l=s*D%m.TWO_PI,u=M+A*(i-2451545.5),c=(n+.5*v.SECONDS_PER_DAY)%v.SECONDS_PER_DAY,h=l+u*c,f=Math.cos(h),g=Math.sin(h);return o(t)?(t[0]=f,t[1]=-g,t[2]=0,t[3]=g,t[4]=f,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new p(f,g,0,-g,f,0,0,0,1)},g.iau2006XysData=new c,g.earthOrientationParameters=s.NONE;var R=32.184,O=2451545;g.preloadIcrfFixed=function(t){var r=t.start.dayNumber,i=t.start.secondsOfDay+R,n=t.stop.dayNumber,o=t.stop.secondsOfDay+R,a=g.iau2006XysData.preload(r,i,n,o),s=g.earthOrientationParameters.getPromiseToLoad();return e.all([a,s])},g.computeIcrfToFixedMatrix=function(e,t){o(t)||(t=new p);var r=g.computeFixedToIcrfMatrix(e,t);return o(r)?p.transpose(r,t):void 0};var L=new h(0,0,0),N=new l(0,0,0,0,0,0),B=new p,F=new p;g.computeFixedToIcrfMatrix=function(e,t){o(t)||(t=new p);var r=g.earthOrientationParameters.compute(e,N);if(!o(r))return void 0;var i=e.dayNumber,n=e.secondsOfDay+R,a=g.iau2006XysData.computeXysRadians(i,n,L);if(!o(a))return void 0;var s=a.x+r.xPoleOffset,l=a.y+r.yPoleOffset,u=1/(1+Math.sqrt(1-s*s-l*l)),c=B;c[0]=1-u*s*s,c[3]=-u*s*l,c[6]=s,c[1]=-u*s*l,c[4]=1-u*l*l,c[7]=l,c[2]=-s,c[5]=-l,c[8]=1-u*(s*s+l*l);var h=p.fromRotationZ(-a.s,F),f=p.multiply(c,h,B),_=e.dayNumber,y=e.secondsOfDay-d.computeTaiMinusUtc(e)+r.ut1MinusUtc,C=_-2451545,w=y/v.SECONDS_PER_DAY,S=.779057273264+w+.00273781191135448*(C+w);S=S%1*m.TWO_PI;var E=p.fromRotationZ(S,F),b=p.multiply(f,E,B),T=Math.cos(r.xPoleWander),x=Math.cos(r.yPoleWander),P=Math.sin(r.xPoleWander),A=Math.sin(r.yPoleWander),M=i-O+n/v.SECONDS_PER_DAY;M/=36525;var D=-47e-6*M*m.RADIANS_PER_DEGREE/3600,I=Math.cos(D),z=Math.sin(D),V=F;return V[0]=T*I,V[1]=T*z,V[2]=P,V[3]=-x*z+A*P*I,V[4]=x*I+A*P*z,V[5]=-A*T,V[6]=-A*z-x*P*I,V[7]=A*I-x*P*z,V[8]=x*T,p.multiply(b,V,t)};var z=new i;return g.pointToWindowCoordinates=function(e,t,r,i){return i=g.pointToGLWindowCoordinates(e,t,r,i),i.y=2*t[5]-i.y,i},g.pointToGLWindowCoordinates=function(e,r,n,a){o(a)||(a=new t);var s=z;return f.multiplyByVector(e,i.fromElements(n.x,n.y,n.z,1,s),s),i.multiplyByScalar(s,1/s.w,s),f.multiplyByVector(r,s,s),t.fromCartesian4(s,a)},g}),r("Core/EllipsoidTangentPlane",["./AxisAlignedBoundingBox","./Cartesian2","./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./IntersectionTests","./Matrix4","./Plane","./Ray","./Transforms"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new i,f=function(e,t){t=n(t,l.WGS84),e=t.scaleToGeodeticSurface(e);var i=m.eastNorthUpToFixedFrame(e,t);this._ellipsoid=t,this._origin=e,this._xAxis=r.fromCartesian4(c.getColumn(i,0,p)),this._yAxis=r.fromCartesian4(c.getColumn(i,1,p));var o=r.fromCartesian4(c.getColumn(i,2,p));this._plane=h.fromPointNormal(e,o)};a(f.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},origin:{get:function(){return this._origin}}});var v=new e;f.fromPoints=function(t,r){var i=e.fromPoints(t,v);return new f(i.center,r)};var g=new d,_=new r;f.prototype.projectPointOntoPlane=function(e,i){var n=g;n.origin=e,r.normalize(e,n.direction);var a=u.rayPlane(n,this._plane,_);if(o(a)||(r.negate(n.direction,n.direction),a=u.rayPlane(n,this._plane,_)),o(a)){var s=r.subtract(a,this._origin,a),l=r.dot(this._xAxis,s),c=r.dot(this._yAxis,s);return o(i)?(i.x=l,i.y=c,i):new t(l,c)}return void 0},f.prototype.projectPointsOntoPlane=function(e,t){o(t)||(t=[]);for(var r=0,i=e.length,n=0;i>n;n++){var a=this.projectPointOntoPlane(e[n],t[r]);o(a)&&(t[r]=a,r++)}return t.length=r,t};var y=new r;return f.prototype.projectPointsOntoEllipsoid=function(e,t){var i=e.length;o(t)?t.length=i:t=new Array(i);for(var n=this._ellipsoid,a=this._origin,s=this._xAxis,l=this._yAxis,u=y,c=0;i>c;++c){var h=e[c];r.multiplyByScalar(s,h.x,u),o(t[c])||(t[c]=new r);var d=r.add(a,u,t[c]);r.multiplyByScalar(l,h.y,u),r.add(d,u,d),n.scaleToGeocentricSurface(d,d)}return t},f}),r("Core/PolylineVolumeGeometryLibrary",["./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./CornerType","./EllipsoidTangentPlane","./Math","./Matrix3","./Matrix4","./PolylinePipeline","./Quaternion","./Transforms"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t){for(var r=new Array(e.length),i=0;i<e.length;i++){var n=e[i];L=t.cartesianToCartographic(n,L),r[i]=L.height,e[i]=t.scaleToGeodeticSurface(n,n)}return r}function m(e,r,i,n){var o,a=e[0],s=e[1],l=t.angleBetween(a,s),u=Math.ceil(l/n),c=new Array(u);if(r===i){for(o=0;u>o;o++)c[o]=r;return c.push(i),c}var h=i-r,d=h/u;for(o=1;u>o;o++){var m=r+o*d;c[o]=m}return c[0]=r,c.push(i),c}function p(r,i,n,a){var s=new o(n,a),l=s.projectPointOntoPlane(t.add(n,r,Y),Y),u=s.projectPointOntoPlane(t.add(n,i,X),X),c=e.angleBetween(l,u);return u.x*l.y-u.y*l.x>=0?-c:c}function f(e,r,i,n,o,a,u,c){var d=k,m=U;B=h.eastNorthUpToFixedFrame(e,o,B),d=l.multiplyByPointAsVector(B,N,d),d=t.normalize(d,d);var f=p(d,r,e,o);z=s.fromRotationZ(f,z),W.z=a,B=l.multiplyTransformation(B,l.fromRotationTranslation(z,W,F),B);var v=V;v[0]=u;for(var g=0;c>g;g++)for(var _=0;_<i.length;_+=3)m=t.fromArray(i,_,m),m=s.multiplyByVector(v,m,m),m=l.multiplyByPoint(B,m,m),n.push(m.x,m.y,m.z);return n}function v(e,r,i,n,o,a,s){for(var l=0;l<e.length;l+=3){var u=t.fromArray(e,l,G);n=f(u,r,i,n,o,a[l/3],s,1)}return n}function g(e,t){var r=e.length,i=new Array(6*r),n=0,o=t.x+t.width/2,a=t.y+t.height/2,s=e[0];i[n++]=s.x-o,i[n++]=0,i[n++]=s.y-a;for(var l=1;r>l;l++){s=e[l];var u=s.x-o,c=s.y-a;i[n++]=u,i[n++]=0,i[n++]=c,i[n++]=u,i[n++]=0,i[n++]=c}return s=e[0],i[n++]=s.x-o,i[n++]=0,i[n++]=s.y-a,i}function _(e,t){for(var r=e.length,i=new Array(3*r),n=0,o=t.x+t.width/2,a=t.y+t.height/2,s=0;r>s;s++)i[n++]=e[s].x-o,i[n++]=0,i[n++]=e[s].y-a;return i}function y(e,r,i,o,l,u,h,d,m,p){var v,g=t.angleBetween(t.subtract(r,e,I),t.subtract(i,e,R)),_=o===n.BEVELED?0:Math.ceil(g/a.toRadians(5));v=l?s.fromQuaternion(c.fromAxisAngle(t.negate(e,I),g/(_+1),H),j):s.fromQuaternion(c.fromAxisAngle(e,g/(_+1),H),j);var y,C;if(r=t.clone(r,q),_>0)for(var w=p?2:1,S=0;_>S;S++)r=s.multiplyByVector(v,r,r),y=t.subtract(r,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(r,R),h=f(C,y,d,h,u,m,1,w);else y=t.subtract(r,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(r,R),h=f(C,y,d,h,u,m,1,1),i=t.clone(i,q),y=t.subtract(i,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(i,R),h=f(C,y,d,h,u,m,1,1);return h}function C(e,t){return a.equalsEpsilon(e.latitude,t.latitude,a.EPSILON6)&&a.equalsEpsilon(e.longitude,t.longitude,a.EPSILON6)}var w=[new t,new t],S=new t,E=new t,b=new t,T=new t,x=new t,P=new t,A=new t,M=new t,D=new t,I=new t,R=new t,O={},L=new i,N=new t(-1,0,0),B=new l,F=new l,z=new s,V=s.IDENTITY.clone(),k=new t,U=new r,W=new t,G=new t,H=new c,q=new t,j=new s;O.removeDuplicatesFromShape=function(t){for(var r=t.length,i=[],n=r-1,o=0;r>o;n=o++){var a=t[n],s=t[o];e.equals(a,s)||i.push(s)}return i};var Y=new t,X=new t;O.angleIsGreaterThanPi=function(e,r,i,n){var a=new o(i,n),s=a.projectPointOntoPlane(t.add(i,e,Y),Y),l=a.projectPointOntoPlane(t.add(i,r,X),X);return l.x*s.y-l.y*s.x>=0};var Z=new i,Q=new i;return O.removeDuplicatesFromPositions=function(e,t){var r=e.length;if(2>r)return e.slice(0);var i=[];i.push(e[0]);for(var n=1;r>n;++n){var o=e[n-1],a=e[n],s=t.cartesianToCartographic(o,Z),l=t.cartesianToCartographic(a,Q);C(s,l)||i.push(a)}return i},O.computePositions=function(e,r,i,o,s){var l=o._ellipsoid,c=d(e,l),h=o._granularity,p=o._cornerType,C=s?g(r,i):_(r,i),R=s?_(r,i):void 0,L=i.height/2,N=i.width/2,B=e.length,F=[],z=s?[]:void 0,V=S,k=E,U=b,W=T,G=x,H=P,q=A,j=M,Y=D,X=e[0],Z=e[1];W=l.geodeticSurfaceNormal(X,W),V=t.subtract(Z,X,V),V=t.normalize(V,V),j=t.cross(W,V,j),j=t.normalize(j,j);var Q=c[0],J=c[1];s&&(z=f(X,j,R,z,l,Q+L,1,1)),Y=t.clone(X,Y),X=Z,k=t.negate(V,k);for(var K,$,et=1;B-1>et;et++){var tt=s?2:1;Z=e[et+1],V=t.subtract(Z,X,V),V=t.normalize(V,V),U=t.add(V,k,U),U=t.normalize(U,U),W=l.geodeticSurfaceNormal(X,W);var rt=!t.equalsEpsilon(t.negate(U,I),W,a.EPSILON2);if(rt){U=t.cross(U,W,U),U=t.cross(W,U,U),U=t.normalize(U,U);var it=1/Math.max(.25,t.magnitude(t.cross(U,k,I))),nt=O.angleIsGreaterThanPi(V,k,X,l);nt?(G=t.add(X,t.multiplyByScalar(U,it*N,U),G),H=t.add(G,t.multiplyByScalar(j,N,H),H),w[0]=t.clone(Y,w[0]),w[1]=t.clone(H,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),j=t.cross(W,V,j),j=t.normalize(j,j),q=t.add(G,t.multiplyByScalar(j,N,q),q),p===n.ROUNDED||p===n.BEVELED?y(G,H,q,p,nt,l,F,C,J+L,s):(U=t.negate(U,U),F=f(X,U,C,F,l,J+L,it,tt)),Y=t.clone(q,Y)):(G=t.add(X,t.multiplyByScalar(U,it*N,U),G),H=t.add(G,t.multiplyByScalar(j,-N,H),H),w[0]=t.clone(Y,w[0]),w[1]=t.clone(H,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),j=t.cross(W,V,j),j=t.normalize(j,j),q=t.add(G,t.multiplyByScalar(j,-N,q),q),p===n.ROUNDED||p===n.BEVELED?y(G,H,q,p,nt,l,F,C,J+L,s):F=f(X,U,C,F,l,J+L,it,tt),Y=t.clone(q,Y)),k=t.negate(V,k)}else F=f(Y,j,C,F,l,Q+L,1,1),Y=X;Q=J,J=c[et+1],X=Z}w[0]=t.clone(Y,w[0]),w[1]=t.clone(X,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),s&&(z=f(X,j,R,z,l,J+L,1,1)),B=F.length;var ot=s?B+z.length:B,at=new Float64Array(ot);return at.set(F),s&&at.set(z,B),at},O}),r("Core/CorridorGeometryLibrary",["./Cartesian3","./CornerType","./defined","./isArray","./Math","./Matrix3","./PolylinePipeline","./PolylineVolumeGeometryLibrary","./Quaternion"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(r,i,a,s,u){var c=e.angleBetween(e.subtract(i,r,f),e.subtract(a,r,v)),h=s===t.BEVELED?1:Math.ceil(c/n.toRadians(5))+1,d=3*h,m=new Array(d);m[d-3]=a.x,m[d-2]=a.y,m[d-1]=a.z;var p;p=u?o.fromQuaternion(l.fromAxisAngle(e.negate(r,f),c/h,D),I):o.fromQuaternion(l.fromAxisAngle(r,c/h,D),I);var g=0;i=e.clone(i,f);for(var _=0;h>_;_++)i=o.multiplyByVector(p,i,i),m[g++]=i.x,m[g++]=i.y,m[g++]=i.z;return m}function c(r){var i=C,n=w,o=S,a=r[1];n=e.fromArray(r[1],a.length-3,n),o=e.fromArray(r[0],0,o),i=e.multiplyByScalar(e.add(n,o,i),.5,i);var s=u(i,n,o,t.ROUNDED,!1),l=r.length-1,c=r[l-1];a=r[l],n=e.fromArray(c,c.length-3,n),o=e.fromArray(a,0,o),i=e.multiplyByScalar(e.add(n,o,i),.5,i);var h=u(i,n,o,t.ROUNDED,!1);return[s,h]}function h(t,r,i,n){var o=f;return n?o=e.add(t,r,o):(r=e.negate(r,r),o=e.add(t,r,o)),[o.x,o.y,o.z,i.x,i.y,i.z]}function d(t,r,i,n){for(var o=new Array(t.length),a=new Array(t.length),s=e.multiplyByScalar(r,i,f),l=e.negate(s,v),u=0,c=t.length-1,h=0;h<t.length;h+=3){var d=e.fromArray(t,h,g),m=e.add(d,l,_);o[u++]=m.x,o[u++]=m.y,o[u++]=m.z;var p=e.add(d,s,_);a[c--]=p.z,a[c--]=p.y,a[c--]=p.x}return n.push(o,a),n}function m(e,t){for(var r=0;r<e.length;r++)e[r]=t.scaleToGeodeticSurface(e[r],e[r]);return e}var p={},f=new e,v=new e,g=new e,_=new e,y=[new e,new e],C=new e,w=new e,S=new e,E=new e,b=new e,T=new e,x=new e,P=new e,A=new e,M=new e,D=new l,I=new o;p.addAttribute=function(e,t,i,n){var o=t.x,a=t.y,s=t.z;r(i)&&(e[i]=o,e[i+1]=a,e[i+2]=s),r(n)&&(e[n]=s,e[n-1]=a,e[n-2]=o)},p.computePositions=function(r){var i=r.granularity,o=r.positions,l=r.ellipsoid;o=m(o,l);var p=r.width/2,v=r.cornerType,g=r.saveAttributes,_=C,D=w,I=S,R=E,O=b,L=T,N=x,B=P,F=A,z=M,V=[],k=g?[]:void 0,U=g?[]:void 0,W=o[0],G=o[1];D=e.normalize(e.subtract(G,W,D),D),_=l.geodeticSurfaceNormal(W,_),R=e.normalize(e.cross(_,D,R),R),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),N=e.clone(W,N),W=G,I=e.negate(D,I);var H,q,j=[],Y=o.length;for(q=1;Y-1>q;q++){_=l.geodeticSurfaceNormal(W,_),G=o[q+1],D=e.normalize(e.subtract(G,W,D),D),O=e.normalize(e.add(D,I,O),O);var X=!e.equalsEpsilon(e.negate(O,f),_,n.EPSILON2);if(X){O=e.cross(O,_,O),O=e.cross(_,O,O);var Z=p/Math.max(.25,e.magnitude(e.cross(O,I,f))),Q=s.angleIsGreaterThanPi(D,I,W,l);O=e.multiplyByScalar(O,Z,O),Q?(B=e.add(W,O,B),z=e.add(B,e.multiplyByScalar(R,p,z),z),F=e.add(B,e.multiplyByScalar(R,2*p,F),F),y[0]=e.clone(N,y[0]),y[1]=e.clone(z,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),L=e.clone(F,L),R=e.normalize(e.cross(_,D,R),R),F=e.add(B,e.multiplyByScalar(R,2*p,F),F),N=e.add(B,e.multiplyByScalar(R,p,N),N),v===t.ROUNDED||v===t.BEVELED?j.push({leftPositions:u(B,L,F,v,Q)}):j.push({leftPositions:h(W,e.negate(O,O),F,Q)})):(F=e.add(W,O,F),z=e.add(F,e.negate(e.multiplyByScalar(R,p,z),z),z),B=e.add(F,e.negate(e.multiplyByScalar(R,2*p,B),B),B),y[0]=e.clone(N,y[0]),y[1]=e.clone(z,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),L=e.clone(B,L),R=e.normalize(e.cross(_,D,R),R),B=e.add(F,e.negate(e.multiplyByScalar(R,2*p,B),B),B),N=e.add(F,e.negate(e.multiplyByScalar(R,p,N),N),N),v===t.ROUNDED||v===t.BEVELED?j.push({rightPositions:u(F,L,B,v,Q)}):j.push({rightPositions:h(W,O,B,Q)})),I=e.negate(D,I)}W=G}_=l.geodeticSurfaceNormal(W,_),y[0]=e.clone(N,y[0]),y[1]=e.clone(W,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z));var J;return v===t.ROUNDED&&(J=c(V)),{positions:V,corners:j,lefts:k,normals:U,endPositions:J}};var R=new e,O=new e;return p.scaleToGeodeticHeight=function(t,r,n,o){var a=t.length,s=i(o)?o:new Array(t.length);s.length=t.length;for(var l=r,u=0;a>u;u+=3){var c=n.scaleToGeodeticSurface(e.fromArray(t,u,O),O),h=R;0!==r&&(h=n.geodeticSurfaceNormal(c,h),h=e.multiplyByScalar(h,l,h),c=e.add(c,h,c)),s[u]=c.x,s[u+1]=c.y,s[u+2]=c.z}return s},p}),r("Core/CorridorGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./CornerType","./CorridorGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,r,i,o,a,s){var l=e.normals,u=e.tangents,c=e.binormals,h=t.normalize(t.cross(i,r,A),A);s.normal&&n.addAttribute(l,r,o,a),s.binormal&&n.addAttribute(c,i,o,a),s.tangent&&n.addAttribute(u,h,o,a)}function _(e,i,o){var s,l,u,p=e.positions,f=e.corners,v=e.endPositions,_=e.lefts,y=e.normals,C=new h,w=0,x=0,D=0;
for(l=0;l<p.length;l+=2)u=p[l].length-3,w+=u,D+=2*u,x+=p[l+1].length-3;for(w+=3,x+=3,l=0;l<f.length;l++){s=f[l];var I=f[l].leftPositions;a(I)?(u=I.length,w+=u,D+=u):(u=f[l].rightPositions.length,x+=u,D+=u)}var R,O=a(v);O&&(R=v[0].length-3,w+=R,x+=R,R/=3,D+=6*R);var L,N,B,F,z,V,k=w+x,U=new Float64Array(k),W=i.normal?new Float32Array(k):void 0,G=i.tangent?new Float32Array(k):void 0,H=i.binormal?new Float32Array(k):void 0,q={normals:W,tangents:G,binormals:H},j=0,Y=k-1,X=S,Z=E,Q=R/2,J=d.createTypedArray(k/3,D),K=0;if(O){V=b,z=T;var $=v[0];for(X=t.fromArray(y,0,X),Z=t.fromArray(_,0,Z),l=0;Q>l;l++)V=t.fromArray($,3*(Q-1-l),V),z=t.fromArray($,3*(Q+l),z),n.addAttribute(U,z,j),n.addAttribute(U,V,void 0,Y),g(q,X,Z,j,Y,i),N=j/3,F=N+1,L=(Y-2)/3,B=L-1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3}var et=0,tt=0,rt=p[et++],it=p[et++];U.set(rt,j),U.set(it,Y-it.length+1),Z=t.fromArray(_,tt,Z);var nt,ot;for(u=it.length-3,l=0;u>l;l+=3)nt=o.geodeticSurfaceNormal(t.fromArray(rt,l,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u-l,M),M),X=t.normalize(t.add(nt,ot,X),X),g(q,X,Z,j,Y,i),N=j/3,F=N+1,L=(Y-2)/3,B=L-1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3;for(nt=o.geodeticSurfaceNormal(t.fromArray(rt,u,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u,M),M),X=t.normalize(t.add(nt,ot,X),X),tt+=3,l=0;l<f.length;l++){var at;s=f[l];var st,lt,ut=s.leftPositions,ct=s.rightPositions,ht=P,dt=b,mt=T;if(X=t.fromArray(y,tt,X),a(ut)){for(g(q,X,Z,void 0,Y,i),Y-=3,st=F,lt=B,at=0;at<ut.length/3;at++)ht=t.fromArray(ut,3*at,ht),J[K++]=st,J[K++]=lt-at-1,J[K++]=lt-at,n.addAttribute(U,ht,void 0,Y),dt=t.fromArray(U,3*(lt-at-1),dt),mt=t.fromArray(U,3*st,mt),Z=t.normalize(t.subtract(dt,mt,Z),Z),g(q,X,Z,void 0,Y,i),Y-=3;ht=t.fromArray(U,3*st,ht),dt=t.subtract(t.fromArray(U,3*lt,dt),ht,dt),mt=t.subtract(t.fromArray(U,3*(lt-at),mt),ht,mt),Z=t.normalize(t.add(dt,mt,Z),Z),g(q,X,Z,j,void 0,i),j+=3}else{for(g(q,X,Z,j,void 0,i),j+=3,st=B,lt=F,at=0;at<ct.length/3;at++)ht=t.fromArray(ct,3*at,ht),J[K++]=st,J[K++]=lt+at,J[K++]=lt+at+1,n.addAttribute(U,ht,j),dt=t.fromArray(U,3*st,dt),mt=t.fromArray(U,3*(lt+at),mt),Z=t.normalize(t.subtract(dt,mt,Z),Z),g(q,X,Z,j,void 0,i),j+=3;ht=t.fromArray(U,3*st,ht),dt=t.subtract(t.fromArray(U,3*(lt+at),dt),ht,dt),mt=t.subtract(t.fromArray(U,3*lt,mt),ht,mt),Z=t.normalize(t.negate(t.add(mt,dt,Z),Z),Z),g(q,X,Z,void 0,Y,i),Y-=3}for(rt=p[et++],it=p[et++],rt.splice(0,3),it.splice(it.length-3,3),U.set(rt,j),U.set(it,Y-it.length+1),u=it.length-3,tt+=3,Z=t.fromArray(_,tt,Z),at=0;at<it.length;at+=3)nt=o.geodeticSurfaceNormal(t.fromArray(rt,at,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u-at,M),M),X=t.normalize(t.add(nt,ot,X),X),g(q,X,Z,j,Y,i),F=j/3,N=F-1,B=(Y-2)/3,L=B+1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3;j-=3,Y+=3}if(X=t.fromArray(y,y.length-3,X),g(q,X,Z,j,Y,i),O){j+=3,Y-=3,V=b,z=T;var pt=v[1];for(l=0;Q>l;l++)V=t.fromArray(pt,3*(R-l-1),V),z=t.fromArray(pt,3*l,z),n.addAttribute(U,V,void 0,Y),n.addAttribute(U,z,j),g(q,X,Z,j,Y,i),F=j/3,N=F-1,B=(Y-2)/3,L=B+1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3}if(C.position=new c({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:U}),i.st){var ft,vt,gt=new Float32Array(2*(k/3)),_t=0;if(O){w/=3,x/=3;var yt=Math.PI/(R+1);vt=1/(w-R+1),ft=1/(x-R+1);var Ct,wt=R/2;for(l=wt+1;R+1>l;l++)Ct=m.PI_OVER_TWO+yt*l,gt[_t++]=ft*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=1;x-R+1>l;l++)gt[_t++]=l*ft,gt[_t++]=0;for(l=R;l>wt;l--)Ct=m.PI_OVER_TWO-l*yt,gt[_t++]=1-ft*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=wt;l>0;l--)Ct=m.PI_OVER_TWO-yt*l,gt[_t++]=1-vt*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=w-R;l>0;l--)gt[_t++]=l*vt,gt[_t++]=1;for(l=1;wt+1>l;l++)Ct=m.PI_OVER_TWO+yt*l,gt[_t++]=vt*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct))}else{for(w/=3,x/=3,vt=1/(w-1),ft=1/(x-1),l=0;x>l;l++)gt[_t++]=l*ft,gt[_t++]=0;for(l=w;l>0;l--)gt[_t++]=(l-1)*vt,gt[_t++]=1}C.st=new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:gt})}return i.normal&&(C.normal=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.normals})),i.tangent&&(C.tangent=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.tangents})),i.binormal&&(C.binormal=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.binormals})),{attributes:C,indices:J}}function y(e,r){if(!(r.normal||r.binormal||r.tangent||r.st))return e;var i,o,a=e.position.values;(r.normal||r.binormal)&&(i=e.normal.values,o=e.binormal.values);var s,l=e.position.values.length/18,u=3*l,c=2*l,h=2*u;if(r.normal||r.binormal||r.tangent){var d=r.normal?new Float32Array(6*u):void 0,m=r.binormal?new Float32Array(6*u):void 0,p=r.tangent?new Float32Array(6*u):void 0,f=S,v=E,g=b,_=T,y=x,C=P,w=h;for(s=0;u>s;s+=3){var A=w+h;f=t.fromArray(a,s,f),v=t.fromArray(a,s+u,v),g=t.fromArray(a,(s+3)%u,g),v=t.subtract(v,f,v),g=t.subtract(g,f,g),_=t.normalize(t.cross(v,g,_),_),r.normal&&(n.addAttribute(d,_,A),n.addAttribute(d,_,A+3),n.addAttribute(d,_,w),n.addAttribute(d,_,w+3)),(r.tangent||r.binormal)&&(C=t.fromArray(i,s,C),r.binormal&&(n.addAttribute(m,C,A),n.addAttribute(m,C,A+3),n.addAttribute(m,C,w),n.addAttribute(m,C,w+3)),r.tangent&&(y=t.normalize(t.cross(C,_,y),y),n.addAttribute(p,y,A),n.addAttribute(p,y,A+3),n.addAttribute(p,y,w),n.addAttribute(p,y,w+3))),w+=6}if(r.normal){for(d.set(i),s=0;u>s;s+=3)d[s+u]=-i[s],d[s+u+1]=-i[s+1],d[s+u+2]=-i[s+2];e.normal.values=d}else e.normal=void 0;if(r.binormal?(m.set(o),m.set(o,u),e.binormal.values=m):e.binormal=void 0,r.tangent){var M=e.tangent.values;p.set(M),p.set(M,u),e.tangent.values=p}}if(r.st){var D=e.st.values,I=new Float32Array(6*c);I.set(D),I.set(D,c);for(var R=2*c,O=0;2>O;O++){for(I[R++]=D[0],I[R++]=D[1],s=2;c>s;s+=2){var L=D[s],N=D[s+1];I[R++]=L,I[R++]=N,I[R++]=L,I[R++]=N}I[R++]=D[0],I[R++]=D[1]}e.st.values=I}return e}function C(e,t,r){r[t++]=e[0],r[t++]=e[1],r[t++]=e[2];for(var i=3;i<e.length;i+=3){var n=e[i],o=e[i+1],a=e[i+2];r[t++]=n,r[t++]=o,r[t++]=a,r[t++]=n,r[t++]=o,r[t++]=a}return r[t++]=e[0],r[t++]=e[1],r[t++]=e[2],r}function w(e,t){var r=new v({position:t.positon,normal:t.normal||t.binormal,tangent:t.tangent,binormal:t.normal||t.binormal,st:t.st}),i=e.ellipsoid,o=n.computePositions(e),a=_(o,r,i),s=e.height,l=e.extrudedHeight,u=a.attributes,c=a.indices,h=u.position.values,m=h.length,p=new Float64Array(6*m),f=new Float64Array(m);f.set(h);var g=new Float64Array(4*m);h=n.scaleToGeodeticHeight(h,s,i,h),g=C(h,0,g),f=n.scaleToGeodeticHeight(f,l,i,f),g=C(f,2*m,g),p.set(h),p.set(f,m),p.set(g,2*m),u.position.values=p,m/=3;var w,S=c.length,E=m+m,b=d.createTypedArray(p.length/3,2*S+3*E);b.set(c);var T=S;for(w=0;S>w;w+=3){var x=c[w],P=c[w+1],A=c[w+2];b[T++]=A+m,b[T++]=P+m,b[T++]=x+m}u=y(u,t);var M,D,I,R;for(w=0;E>w;w+=2)M=w+E,D=M+E,I=M+1,R=D+1,b[T++]=M,b[T++]=D,b[T++]=I,b[T++]=I,b[T++]=D,b[T++]=R;return{attributes:u,indices:b}}var S=new t,E=new t,b=new t,T=new t,x=new t,P=new t,A=new t,M=new t,D=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.positions,r=e.width;this._positions=t,this._width=r,this._ellipsoid=o(e.ellipsoid,l.WGS84),this._height=o(e.height,0),this._extrudedHeight=o(e.extrudedHeight,this._height),this._cornerType=o(e.cornerType,i.ROUNDED),this._vertexFormat=o(e.vertexFormat,v.DEFAULT),this._granularity=o(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createCorridorGeometry"};return D.createGeometry=function(t){var r,i=t._positions,o=t._height,a=t._extrudedHeight,s=o!==a,l=p.removeDuplicates(i),c=t._ellipsoid,h=t._vertexFormat,d={ellipsoid:c,positions:l,width:t._width,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!0};if(s){var m=Math.max(o,a);a=Math.min(o,a),o=m,d.height=o,d.extrudedHeight=a,r=w(d,h)}else{var v=n.computePositions(d);r=_(v,h,c),r.attributes.position.values=n.scaleToGeodeticHeight(r.attributes.position.values,o,c,r.attributes.position.values)}var g=r.attributes,y=e.fromVertices(g.position.values,void 0,3);return h.position||(r.attributes.position.values=void 0),new u({attributes:g,indices:r.indices,primitiveType:f.TRIANGLES,boundingSphere:y})},D}),r("Core/CorridorOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./CornerType","./CorridorGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,o){var s,l,u,m=[],p=e.positions,f=e.corners,v=e.endPositions,g=new h,w=0,S=0,E=0;for(l=0;l<p.length;l+=2)u=p[l].length-3,w+=u,E+=4*(u/3),S+=p[l+1].length-3;for(w+=3,S+=3,l=0;l<f.length;l++){s=f[l];var b=f[l].leftPositions;a(b)?(u=b.length,w+=u,E+=2*(u/3)):(u=f[l].rightPositions.length,S+=u,E+=2*(u/3))}var T,x=a(v);x&&(T=v[0].length-3,w+=T,S+=T,T/=3,E+=4*T);var P,A,M,D,I,R,O=w+S,L=new Float64Array(O),N=0,B=O-1,F=T/2,z=d.createTypedArray(O/3,E+4),V=0;if(z[V++]=N/3,z[V++]=(B-2)/3,x){m.push(N/3),R=_,I=y;var k=v[0];for(l=0;F>l;l++)R=t.fromArray(k,3*(F-1-l),R),I=t.fromArray(k,3*(F+l),I),n.addAttribute(L,I,N),n.addAttribute(L,R,void 0,B),A=N/3,D=A+1,P=(B-2)/3,M=P-1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3}var U=0,W=p[U++],G=p[U++];for(L.set(W,N),L.set(G,B-G.length+1),u=G.length-3,m.push(N/3,(B-2)/3),l=0;u>l;l+=3)A=N/3,D=A+1,P=(B-2)/3,M=P-1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;for(l=0;l<f.length;l++){var H;s=f[l];var q,j=s.leftPositions,Y=s.rightPositions,X=C;if(a(j)){for(B-=3,q=M,m.push(D),H=0;H<j.length/3;H++)X=t.fromArray(j,3*H,X),z[V++]=q-H-1,z[V++]=q-H,n.addAttribute(L,X,void 0,B),B-=3;m.push(q-Math.floor(j.length/6)),o===i.BEVELED&&m.push((B-2)/3+1),N+=3}else{for(N+=3,q=D,m.push(M),H=0;H<Y.length/3;H++)X=t.fromArray(Y,3*H,X),z[V++]=q+H,z[V++]=q+H+1,n.addAttribute(L,X,N),N+=3;m.push(q+Math.floor(Y.length/6)),o===i.BEVELED&&m.push(N/3-1),B-=3}for(W=p[U++],G=p[U++],W.splice(0,3),G.splice(G.length-3,3),L.set(W,N),L.set(G,B-G.length+1),u=G.length-3,H=0;H<G.length;H+=3)D=N/3,A=D-1,M=(B-2)/3,P=M+1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;N-=3,B+=3,m.push(N/3,(B-2)/3)}if(x){N+=3,B-=3,R=_,I=y;var Z=v[1];for(l=0;F>l;l++)R=t.fromArray(Z,3*(T-l-1),R),I=t.fromArray(Z,3*l,I),n.addAttribute(L,R,void 0,B),n.addAttribute(L,I,N),D=N/3,A=D-1,M=(B-2)/3,P=M+1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;m.push(N/3)}else m.push(N/3,(B-2)/3);return z[V++]=N/3,z[V++]=(B-2)/3,g.position=new c({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:L}),{attributes:g,indices:z,wallIndices:m}}function g(e){var t=e.ellipsoid,r=n.computePositions(e),i=v(r,e.cornerType),o=i.wallIndices,a=e.height,s=e.extrudedHeight,l=i.attributes,u=i.indices,c=l.position.values,h=c.length,m=new Float64Array(h);m.set(c);var p=new Float64Array(2*h);c=n.scaleToGeodeticHeight(c,a,t,c),m=n.scaleToGeodeticHeight(m,s,t,m),p.set(c),p.set(m,h),l.position.values=p,h/=3;var f,g=u.length,_=d.createTypedArray(p.length/3,2*(g+o.length));_.set(u);var y=g;for(f=0;g>f;f+=2){var C=u[f],w=u[f+1];_[y++]=C+h,_[y++]=w+h}var S,E;for(f=0;f<o.length;f++)S=o[f],E=S+h,_[y++]=S,_[y++]=E;return{attributes:l,indices:_}}var _=new t,y=new t,C=new t,w=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.positions,r=e.width;this._positions=t,this._width=r,this._ellipsoid=o(e.ellipsoid,l.WGS84),this._height=o(e.height,0),this._extrudedHeight=o(e.extrudedHeight,this._height),this._cornerType=o(e.cornerType,i.ROUNDED),this._granularity=o(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createCorridorOutlineGeometry"};return w.createGeometry=function(t){var r,i=t._positions,o=t._height,a=t._extrudedHeight,s=o!==a,l=p.removeDuplicates(i),c=t._ellipsoid,h={ellipsoid:c,positions:l,width:t._width,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!1};if(s){var d=Math.max(o,a);a=Math.min(o,a),o=d,h.height=o,h.extrudedHeight=a,r=g(h)}else{var m=n.computePositions(h);r=v(m,h.cornerType),r.attributes.position.values=n.scaleToGeodeticHeight(r.attributes.position.values,o,c,r.attributes.position.values)}var _=r.attributes,y=e.fromVertices(_.position.values,void 0,3);return new u({attributes:_,indices:r.indices,primitiveType:f.LINES,boundingSphere:y})},w}),r("Core/CylinderGeometryLibrary",["./Math"],function(e){"use strict";var t={};return t.computePositions=function(t,r,i,n,o){var a,s=.5*t,l=-s,u=n+n,c=o?2*u:u,h=new Float64Array(3*c),d=0,m=0,p=o?3*u:0,f=o?3*(u+n):3*n;for(a=0;n>a;a++){var v=a/n*e.TWO_PI,g=Math.cos(v),_=Math.sin(v),y=g*i,C=_*i,w=g*r,S=_*r;h[m+p]=y,h[m+p+1]=C,h[m+p+2]=l,h[m+f]=w,h[m+f+1]=S,h[m+f+2]=s,m+=3,o&&(h[d++]=y,h[d++]=C,h[d++]=l,h[d++]=w,h[d++]=S,h[d++]=s)}return h},t}),r("Core/CylinderGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./CylinderGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=new t,v=new r,g=new r,_=new r,y=new r,C=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.length,r=e.topRadius,i=e.bottomRadius,n=o(e.vertexFormat,p.DEFAULT),a=o(e.slices,128);this._length=t,this._topRadius=r,this._bottomRadius=i,this._vertexFormat=n,this._slices=a,this._workerName="createCylinderGeometry"};return C.createGeometry=function(o){var a,s=o._length,p=o._topRadius,C=o._bottomRadius,w=o._vertexFormat,S=o._slices,E=S+S,b=S+E,T=E+E,x=n.computePositions(s,p,C,S,!0),P=w.st?new Float32Array(2*T):void 0,A=w.normal?new Float32Array(3*T):void 0,M=w.tangent?new Float32Array(3*T):void 0,D=w.binormal?new Float32Array(3*T):void 0,I=w.normal||w.tangent||w.binormal;if(I){var R=w.tangent||w.binormal,O=0,L=0,N=0,B=v;B.z=0;var F=_,z=g;for(a=0;S>a;a++){var V=a/S*d.TWO_PI,k=Math.cos(V),U=Math.sin(V);I&&(B.x=k,B.y=U,R&&(F=r.normalize(r.cross(r.UNIT_Z,B,F),F)),w.normal&&(A[O++]=k,A[O++]=U,A[O++]=0,A[O++]=k,A[O++]=U,A[O++]=0),w.tangent&&(M[L++]=F.x,M[L++]=F.y,M[L++]=F.z,M[L++]=F.x,M[L++]=F.y,M[L++]=F.z),w.binormal&&(z=r.normalize(r.cross(B,F,z),z),D[N++]=z.x,D[N++]=z.y,D[N++]=z.z,D[N++]=z.x,D[N++]=z.y,D[N++]=z.z))}for(a=0;S>a;a++)w.normal&&(A[O++]=0,A[O++]=0,A[O++]=-1),w.tangent&&(M[L++]=1,M[L++]=0,M[L++]=0),w.binormal&&(D[N++]=0,D[N++]=-1,D[N++]=0);for(a=0;S>a;a++)w.normal&&(A[O++]=0,A[O++]=0,A[O++]=1),w.tangent&&(M[L++]=1,M[L++]=0,M[L++]=0),w.binormal&&(D[N++]=0,D[N++]=1,D[N++]=0)}var W=12*S-12,G=h.createTypedArray(T,W),H=0,q=0;for(a=0;S-1>a;a++)G[H++]=q,G[H++]=q+2,G[H++]=q+3,G[H++]=q,G[H++]=q+3,G[H++]=q+1,q+=2;for(G[H++]=E-2,G[H++]=0,G[H++]=1,G[H++]=E-2,G[H++]=1,G[H++]=E-1,a=1;S-1>a;a++)G[H++]=E+a+1,G[H++]=E+a,G[H++]=E;for(a=1;S-1>a;a++)G[H++]=b,G[H++]=b+a,G[H++]=b+a+1;var j=0;if(w.st){var Y=Math.max(p,C);for(a=0;T>a;a++){var X=r.fromArray(x,3*a,y);P[j++]=(X.x+Y)/(2*Y),P[j++]=(X.y+Y)/(2*Y)}}var Z=new c;w.position&&(Z.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:x})),w.normal&&(Z.normal=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:A})),w.tangent&&(Z.tangent=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:M})),w.binormal&&(Z.binormal=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:D})),w.st&&(Z.st=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:P})),f.x=.5*s,f.y=Math.max(C,p);var Q=new e(r.ZERO,t.magnitude(f));return new l({attributes:Z,indices:G,primitiveType:m.TRIANGLES,boundingSphere:Q})},C}),r("Core/CylinderOutlineGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./CylinderGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=new t,p=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.length,r=e.topRadius,i=e.bottomRadius,n=o(e.slices,128),a=Math.max(o(e.numberOfVerticalLines,16),0);this._length=t,this._topRadius=r,this._bottomRadius=i,this._slices=n,this._numberOfVerticalLines=a,this._workerName="createCylinderOutlineGeometry"};return p.createGeometry=function(o){var a,s=o._length,p=o._topRadius,f=o._bottomRadius,v=o._slices,g=o._numberOfVerticalLines,_=2*v,y=n.computePositions(s,p,f,v,!1),C=2*v;if(g>0){var w=Math.min(g,v);a=Math.round(v/w),C+=w}for(var S=h.createTypedArray(_,2*C),E=0,b=0;v-1>b;b++)S[E++]=b,S[E++]=b+1,S[E++]=b+v,S[E++]=b+1+v;if(S[E++]=v-1,S[E++]=0,S[E++]=v+v-1,S[E++]=v,g>0)for(b=0;v>b;b+=a)S[E++]=b,S[E++]=b+v;var T=new c;T.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:y}),m.x=.5*s,m.y=Math.max(f,p);var x=new e(r.ZERO,t.magnitude(m));return new l({attributes:T,indices:S,primitiveType:d.LINES,boundingSphere:x})},p}),r("Core/DefaultProxy",[],function(){"use strict";var e=function(e){this.proxy=e};return e.prototype.getURL=function(e){return this.proxy+"?"+encodeURIComponent(e)},e}),r("ThirdParty/Tween",[],function(){void 0===Date.now&&(Date.now=function(){return(new Date).valueOf()});var e=e||function(){var e=[];return{REVISION:"13",getAll:function(){return e},removeAll:function(){e=[]},add:function(t){e.push(t)},remove:function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},update:function(t){if(0===e.length)return!1;var r=0;for(t=void 0!==t?t:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();r<e.length;)e[r].update(t)?r++:e.splice(r,1);return!0}}}();return e.Tween=function(t){var r=t,i={},n={},o={},a=1e3,s=0,l=!1,u=!1,c=!1,h=0,d=null,m=e.Easing.Linear.None,p=e.Interpolation.Linear,f=[],v=null,g=!1,_=null,y=null,C=null;for(var w in t)i[w]=parseFloat(t[w],10);this.to=function(e,t){return void 0!==t&&(a=t),n=e,this},this.start=function(t){e.add(this),u=!0,g=!1,d=void 0!==t?t:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),d+=h;for(var a in n){if(n[a]instanceof Array){if(0===n[a].length)continue;n[a]=[r[a]].concat(n[a])}i[a]=r[a],i[a]instanceof Array==!1&&(i[a]*=1),o[a]=i[a]||0}return this},this.stop=function(){return u?(e.remove(this),u=!1,null!==C&&C.call(r),this.stopChainedTweens(),this):this},this.stopChainedTweens=function(){for(var e=0,t=f.length;t>e;e++)f[e].stop()},this.delay=function(e){return h=e,this},this.repeat=function(e){return s=e,this},this.yoyo=function(e){return l=e,this},this.easing=function(e){return m=e,this},this.interpolation=function(e){return p=e,this},this.chain=function(){return f=arguments,this},this.onStart=function(e){return v=e,this},this.onUpdate=function(e){return _=e,this},this.onComplete=function(e){return y=e,this},this.onStop=function(e){return C=e,this},this.update=function(e){var t;if(d>e)return!0;g===!1&&(null!==v&&v.call(r),g=!0);var u=(e-d)/a;u=u>1?1:u;var C=m(u);for(t in n){var w=i[t]||0,S=n[t];S instanceof Array?r[t]=p(S,C):("string"==typeof S&&(S=w+parseFloat(S,10)),"number"==typeof S&&(r[t]=w+(S-w)*C))}if(null!==_&&_.call(r,C),1==u){if(s>0){isFinite(s)&&s--;for(t in o){if("string"==typeof n[t]&&(o[t]=o[t]+parseFloat(n[t],10)),l){var E=o[t];o[t]=n[t],n[t]=E}i[t]=o[t]}return l&&(c=!c),d=e+h,!0}null!==y&&y.call(r);for(var b=0,T=f.length;T>b;b++)f[b].start(e);return!1}return!0}},e.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),-(r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/i)))},Out:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*2*Math.PI/i)+1)},InOut:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?-.5*r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/i):.5*r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*2*Math.PI/i)+1)}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?.5*e*e*((t+1)*e-t):.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(t){return 1-e.Easing.Bounce.Out(1-t)},Out:function(e){return 1/2.75>e?7.5625*e*e:2/2.75>e?7.5625*(e-=1.5/2.75)*e+.75:2.5/2.75>e?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(t){return.5>t?.5*e.Easing.Bounce.In(2*t):.5*e.Easing.Bounce.Out(2*t-1)+.5}}},e.Interpolation={Linear:function(t,r){var i=t.length-1,n=i*r,o=Math.floor(n),a=e.Interpolation.Utils.Linear;return 0>r?a(t[0],t[1],n):r>1?a(t[i],t[i-1],i-n):a(t[o],t[o+1>i?i:o+1],n-o)},Bezier:function(t,r){var i,n=0,o=t.length-1,a=Math.pow,s=e.Interpolation.Utils.Bernstein;for(i=0;o>=i;i++)n+=a(1-r,o-i)*a(r,i)*t[i]*s(o,i);return n},CatmullRom:function(t,r){var i=t.length-1,n=i*r,o=Math.floor(n),a=e.Interpolation.Utils.CatmullRom;return t[0]===t[i]?(0>r&&(o=Math.floor(n=i*(1+r))),a(t[(o-1+i)%i],t[o],t[(o+1)%i],t[(o+2)%i],n-o)):0>r?t[0]-(a(t[0],t[0],t[1],t[1],-n)-t[0]):r>1?t[i]-(a(t[i],t[i],t[i-1],t[i-1],n-i)-t[i]):a(t[o?o-1:0],t[o],t[o+1>i?i:o+1],t[o+2>i?i:o+2],n-o)},Utils:{Linear:function(e,t,r){return(t-e)*r+e},Bernstein:function(t,r){var i=e.Interpolation.Utils.Factorial;return i(t)/i(r)/i(t-r)},Factorial:function(){var e=[1];return function(t){var r,i=1;if(e[t])return e[t];for(r=t;r>1;r--)i*=r;return e[t]=i}}(),CatmullRom:function(e,t,r,i,n){var o=.5*(r-e),a=.5*(i-t),s=n*n,l=n*s;return(2*t-2*r+o+a)*l+(-3*t+3*r-2*o-a)*s+o*n+t}}},e}),r("Core/EasingFunction",["../ThirdParty/Tween","./freezeObject"],function(e,t){"use strict";var r={LINEAR_NONE:e.Easing.Linear.None,QUADRACTIC_IN:e.Easing.Quadratic.In,QUADRACTIC_OUT:e.Easing.Quadratic.Out,QUADRACTIC_IN_OUT:e.Easing.Quadratic.InOut,CUBIC_IN:e.Easing.Cubic.In,CUBIC_OUT:e.Easing.Cubic.Out,CUBIC_IN_OUT:e.Easing.Cubic.InOut,QUARTIC_IN:e.Easing.Quartic.In,QUARTIC_OUT:e.Easing.Quartic.Out,QUARTIC_IN_OUT:e.Easing.Quartic.InOut,QUINTIC_IN:e.Easing.Quintic.In,QUINTIC_OUT:e.Easing.Quintic.Out,QUINTIC_IN_OUT:e.Easing.Quintic.InOut,SINUSOIDAL_IN:e.Easing.Sinusoidal.In,SINUSOIDAL_OUT:e.Easing.Sinusoidal.Out,SINUSOIDAL_IN_OUT:e.Easing.Sinusoidal.InOut,EXPONENTIAL_IN:e.Easing.Exponential.In,EXPONENTIAL_OUT:e.Easing.Exponential.Out,EXPONENTIAL_IN_OUT:e.Easing.Exponential.InOut,CIRCULAR_IN:e.Easing.Circular.In,CIRCULAR_OUT:e.Easing.Circular.Out,CIRCULAR_IN_OUT:e.Easing.Circular.InOut,ELASTIC_IN:e.Easing.Elastic.In,ELASTIC_OUT:e.Easing.Elastic.Out,ELASTIC_IN_OUT:e.Easing.Elastic.InOut,BACK_IN:e.Easing.Back.In,BACK_OUT:e.Easing.Back.Out,BACK_IN_OUT:e.Easing.Back.InOut,BOUNCE_IN:e.Easing.Bounce.In,BOUNCE_OUT:e.Easing.Bounce.Out,BOUNCE_IN_OUT:e.Easing.Bounce.InOut};return t(r)}),r("Core/EllipsoidGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new r,f=new r,v=new r,g=new r,_=new r,y=new r(1,1,1),C=Math.cos,w=Math.sin,S=function(e){e=n(e,n.EMPTY_OBJECT);var t=n(e.radii,y),i=n(e.stackPartitions,64),o=n(e.slicePartitions,64),a=n(e.vertexFormat,m.DEFAULT);this._radii=r.clone(t),this._stackPartitions=i,this._slicePartitions=o,this._vertexFormat=a,this._workerName="createEllipsoidGeometry"};return S.createGeometry=function(n){var o,m,y=n._radii,S=a.fromCartesian3(y),E=n._vertexFormat,b=n._slicePartitions+1,T=n._stackPartitions+1,x=T*b,P=new Float64Array(3*x),A=6*(b-1)*(T-1),M=c.createTypedArray(x,A),D=E.normal?new Float32Array(3*x):void 0,I=E.tangent?new Float32Array(3*x):void 0,R=E.binormal?new Float32Array(3*x):void 0,O=E.st?new Float32Array(2*x):void 0,L=new Array(b),N=new Array(b),B=0;for(o=0;b>o;o++){var F=h.TWO_PI*o/(b-1);L[o]=C(F),N[o]=w(F),P[B++]=0,P[B++]=0,P[B++]=y.z}for(o=1;T-1>o;o++){var z=Math.PI*o/(T-1),V=w(z),k=y.x*V,U=y.y*V,W=y.z*C(z);for(m=0;b>m;m++)P[B++]=L[m]*k,P[B++]=N[m]*U,P[B++]=W}for(o=0;b>o;o++)P[B++]=0,P[B++]=0,P[B++]=-y.z;var G=new u;E.position&&(G.position=new l({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:P}));var H=0,q=0,j=0,Y=0;if(E.st||E.normal||E.tangent||E.binormal){for(o=0;x>o;o++){var X=r.fromArray(P,3*o,p),Z=S.geodeticSurfaceNormal(X,f);if(E.st){var Q=t.negate(Z,_);t.magnitude(Q)<h.EPSILON6&&(B=3*(o+b*Math.floor(.5*T)),B>P.length&&(B=3*(o-b*Math.floor(.5*T))),r.fromArray(P,B,Q),S.geodeticSurfaceNormal(Q,Q),t.negate(Q,Q)),O[H++]=Math.atan2(Q.y,Q.x)/h.TWO_PI+.5,O[H++]=Math.asin(Z.z)/Math.PI+.5}if(E.normal&&(D[q++]=Z.x,D[q++]=Z.y,D[q++]=Z.z),E.tangent||E.binormal){var J=v;if(b>o||o>x-b-1?(r.cross(r.UNIT_X,Z,J),r.normalize(J,J)):(r.cross(r.UNIT_Z,Z,J),r.normalize(J,J)),E.tangent&&(I[j++]=J.x,I[j++]=J.y,I[j++]=J.z),E.binormal){var K=r.cross(Z,J,g);r.normalize(K,K),R[Y++]=K.x,R[Y++]=K.y,R[Y++]=K.z}}}E.st&&(G.st=new l({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:O})),E.normal&&(G.normal=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:D})),E.tangent&&(G.tangent=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:I})),E.binormal&&(G.binormal=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:R}))}for(B=0,o=0;T>o;o++){var $=o*b,et=(o+1)*b;for(m=0;b-1>m;m++)M[B++]=et+m,M[B++]=et+m+1,M[B++]=$+m+1,M[B++]=et+m,M[B++]=$+m+1,M[B++]=$+m}return new s({attributes:G,indices:M,primitiveType:d.TRIANGLES,boundingSphere:e.fromEllipsoid(S)})},S}),r("Core/EllipsoidOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";var d=new t(1,1,1),m=Math.cos,p=Math.sin,f=function(e){e=i(e,i.EMPTY_OBJECT);var r=i(e.radii,d),n=i(e.stackPartitions,10),o=i(e.slicePartitions,8),a=i(e.subdivisions,128);this._radii=t.clone(r),this._stackPartitions=n,this._slicePartitions=o,this._subdivisions=a,this._workerName="createEllipsoidOutlineGeometry"};return f.createGeometry=function(t){var i,n,d,f,v,g,_=t._radii,y=o.fromCartesian3(_),C=t._stackPartitions,w=t._slicePartitions,S=t._subdivisions,E=S*(C+w-1),b=E-w+2,T=new Float64Array(3*b),x=u.createTypedArray(b,2*E),P=0,A=new Array(S),M=new Array(S);for(i=0;S>i;i++)d=c.TWO_PI*i/S,A[i]=m(d),M[i]=p(d);for(i=1;C>i;i++)for(f=Math.PI*i/C,v=m(f),g=p(f),n=0;S>n;n++)T[P++]=_.x*A[n]*g,T[P++]=_.y*M[n]*g,T[P++]=_.z*v;for(A.length=w,M.length=w,i=0;w>i;i++)d=c.TWO_PI*i/w,A[i]=m(d),M[i]=p(d);for(T[P++]=0,T[P++]=0,T[P++]=_.z,i=1;S>i;i++)for(f=Math.PI*i/S,v=m(f),g=p(f),n=0;w>n;n++)T[P++]=_.x*A[n]*g,T[P++]=_.y*M[n]*g,T[P++]=_.z*v;for(T[P++]=0,T[P++]=0,T[P++]=-_.z,P=0,i=0;C-1>i;++i){var D=i*S;for(n=0;S-1>n;++n)x[P++]=D+n,x[P++]=D+n+1;x[P++]=D+S-1,x[P++]=D}var I=S*(C-1);for(n=1;w+1>n;++n)x[P++]=I,x[P++]=I+n;for(i=0;S-2>i;++i){var R=i*w+1+I,O=(i+1)*w+1+I;for(n=0;w-1>n;++n)x[P++]=O+n,x[P++]=R+n;x[P++]=O+w-1,x[P++]=R+w-1}var L=T.length/3-1;for(n=L-1;n>L-w-1;--n)x[P++]=L,x[P++]=n;var N=new l({position:new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:T})});return new a({attributes:N,indices:x,primitiveType:h.LINES,boundingSphere:e.fromEllipsoid(y)})},f}),r("Core/EllipsoidTerrainProvider",["./defaultValue","./defined","./defineProperties","./Ellipsoid","./Event","./GeographicTilingScheme","./HeightmapTerrainData","./TerrainProvider"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,{}),this._tilingScheme=r.tilingScheme,t(this._tilingScheme)||(this._tilingScheme=new o({ellipsoid:e(r.ellipsoid,i.WGS84)})),this._levelZeroMaximumGeometricError=s.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,64,this._tilingScheme.getNumberOfXTilesAtLevel(0));var l=16,u=16;this._terrainData=new a({buffer:new Uint8Array(l*u),width:16,height:16}),this._errorEvent=new n};return r(l.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return!0}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),l.prototype.requestTileGeometry=function(){return this._terrainData},l.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},l.prototype.getTileDataAvailable=function(){return void 0},l}),r("Core/EllipsoidalOccluder",["./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Rectangle"],function(e,t,r,i,n,o,a){"use strict";function s(e,r,i){var n=e.transformPositionToScaledSpace(r,p),o=t.magnitudeSquared(n),a=Math.sqrt(o),s=t.divideByScalar(n,a,f);o=Math.max(1,o),a=Math.max(1,a);var l=t.dot(s,i),u=t.magnitude(t.cross(s,i,s)),c=1/a,h=Math.sqrt(o-1)*c;return 1/(l*c-u*h)}function l(e,r,i){return 0>=r||r===1/0||r!==r?void 0:t.multiplyByScalar(e,r,i)}function u(e,r){return e.transformPositionToScaledSpace(r,v),t.normalize(v,v)}var c=function(e,r){this._ellipsoid=e,this._cameraPosition=new t,this._cameraPositionInScaledSpace=new t,this._distanceToLimbInScaledSpaceSquared=0,i(r)&&(this.cameraPosition=r)};n(c.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(e){var r=this._ellipsoid,i=r.transformPositionToScaledSpace(e,this._cameraPositionInScaledSpace),n=t.magnitudeSquared(i)-1;t.clone(e,this._cameraPosition),this._cameraPositionInScaledSpace=i,this._distanceToLimbInScaledSpaceSquared=n}}});var h=new t;c.prototype.isPointVisible=function(e){var t=this._ellipsoid,r=t.transformPositionToScaledSpace(e,h);return this.isScaledSpacePointVisible(r)},c.prototype.isScaledSpacePointVisible=function(e){var r=this._cameraPositionInScaledSpace,i=this._distanceToLimbInScaledSpaceSquared,n=t.subtract(e,r,h),o=-t.dot(n,r),a=o>i&&o*o/t.magnitudeSquared(n)>i;return!a},c.prototype.computeHorizonCullingPoint=function(e,r,n){i(n)||(n=new t);for(var o=this._ellipsoid,a=u(o,e),c=0,h=0,d=r.length;d>h;++h){var m=r[h],p=s(o,m,a);c=Math.max(c,p)}return l(a,c,n)};var d=new t;c.prototype.computeHorizonCullingPointFromVertices=function(e,n,o,a,c){i(c)||(c=new t),a=r(a,t.ZERO);for(var h=this._ellipsoid,m=u(h,e),p=0,f=0,v=n.length;v>f;f+=o){d.x=n[f]+a.x,d.y=n[f+1]+a.y,d.z=n[f+2]+a.z;var g=s(h,d,m);p=Math.max(p,g)}return l(m,p,c)};var m=[];c.prototype.computeHorizonCullingPointFromRectangle=function(r,i,n){var o=a.subsample(r,i,0,m),s=e.fromPoints(o);return t.magnitude(s.center)<.1*i.minimumRadius?void 0:this.computeHorizonCullingPoint(s.center,o,n)};var p=new t,f=new t,v=new t;return c}),r("Core/EventHelper",["./defined","./DeveloperError"],function(){"use strict";var e=function(){this._removalFunctions=[]};return e.prototype.add=function(e,t,r){var i=e.addEventListener(t,r);this._removalFunctions.push(i);var n=this;return function(){i();var e=n._removalFunctions;e.splice(e.indexOf(i),1)}},e.prototype.removeAll=function(){for(var e=this._removalFunctions,t=0,r=e.length;r>t;++t)e[t]();e.length=0},e}),r("Core/ExtrapolationType",["./freezeObject"],function(e){"use strict";
var t={NONE:0,HOLD:1,EXTRAPOLATE:2};return e(t)}),r("Core/GeometryInstanceAttribute",["./defaultValue","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.value=t.value};return t}),r("Core/HermitePolynomialApproximation",["./defaultValue","./defined","./DeveloperError","./Math"],function(e,t,r,i){"use strict";function n(e,t,r,i,o,a){var s,l,u,c=0;if(i>0){for(l=0;o>l;l++){for(s=!1,u=0;u<a.length&&!s;u++)l===a[u]&&(s=!0);s||(a.push(l),c+=n(e,t,r,i-1,o,a),a.splice(a.length-1,1))}return c}for(c=1,l=0;o>l;l++){for(s=!1,u=0;u<a.length&&!s;u++)l===a[u]&&(s=!0);s||(c*=e-r[t[l]])}return c}function o(e,t,r,n,o,a){for(var s,l,u=-1,c=t.length,h=c*(c+1)/2,d=0;o>d;d++){var m=Math.floor(d*h);for(s=0;c>s;s++)l=t[s]*o*(a+1)+d,e[m+s]=n[l];for(var p=1;c>p;p++){var f=0,v=Math.floor(p*(1-p)/2)+c*p,g=!1;for(s=0;c-p>s;s++){var _,y,C=r[t[s]],w=r[t[s+p]];if(0>=w-C)l=t[s]*o*(a+1)+o*p+d,_=n[l],y=_/i.factorial(p),e[m+v+f]=y,f++;else{var S=Math.floor((p-1)*(2-p)/2)+c*(p-1);_=e[m+S+s+1]-e[m+S+s],y=_/(w-C),e[m+v+f]=y,f++}g=g||0!==_}g&&(u=Math.max(u,p))}}return u}var a=i.factorial,s={type:"Hermite"};s.getRequiredDataPoints=function(t,r){return r=e(r,0),Math.max(Math.floor((t+1)/(r+1)),2)},s.interpolateOrderZero=function(e,r,i,o,s){t(s)||(s=new Array(o));var l,u,c,h,d,m,p=r.length,f=new Array(o);for(l=0;o>l;l++){s[l]=0;var v=new Array(p);for(f[l]=v,u=0;p>u;u++)v[u]=[]}var g=p,_=new Array(g);for(l=0;g>l;l++)_[l]=l;var y=p-1;for(h=0;o>h;h++){for(u=0;g>u;u++)m=_[u]*o+h,f[h][0].push(i[m]);for(l=1;g>l;l++){var C=!1;for(u=0;g-l>u;u++){var w,S=r[_[u]],E=r[_[u+l]];0>=E-S?(m=_[u]*o+o*l+h,w=i[m],f[h][l].push(w/a(l))):(w=f[h][l-1][u+1]-f[h][l-1][u],f[h][l].push(w/(E-S))),C=C||0!==w}C||(y=l-1)}}for(c=0,d=0;d>=c;c++)for(l=c;y>=l;l++){var b=n(e,_,r,c,l,[]);for(h=0;o>h;h++){var T=f[h][l][0];s[h+c*o]+=T*b}}return s};var l=[];return s.interpolate=function(e,r,i,a,s,u,c){var h=a*(u+1);t(c)||(c=new Array(h));for(var d=0;h>d;d++)c[d]=0;for(var m=r.length,p=new Array(m*(s+1)),f=0;m>f;f++)for(var v=0;s+1>v;v++)p[f*(s+1)+v]=f;for(var g=p.length,_=l,y=o(_,p,r,i,a,s),C=[],w=g*(g+1)/2,S=Math.min(y,u),E=0;S>=E;E++)for(f=E;y>=f;f++){C.length=0;for(var b=n(e,p,r,E,f,C),T=Math.floor(f*(1-f)/2)+g*f,x=0;a>x;x++){var P=Math.floor(x*w),A=_[P+T];c[x+E*a]+=A*b}}return c},s}),r("Core/IauOrientationParameters",[],function(){"use strict";var e=function(e,t,r,i){this.rightAscension=e,this.declination=t,this.rotation=r,this.rotationRate=i};return e}),r("Core/Iau2000Orientation",["./defined","./IauOrientationParameters","./JulianDate","./Math","./TimeConstants"],function(e,t,r,i,n){"use strict";var o={},a=32.184,s=2451545,l=-.0529921,u=-.1059842,c=13.0120009,h=13.3407154,d=.9856003,m=26.4057084,p=13.064993,f=.3287146,v=1.7484877,g=-.1589763,_=.0036096,y=.1643573,C=12.9590088,w=new r;return o.ComputeMoon=function(o,S){e(o)||(o=r.now()),w=r.addSeconds(o,a,w);var E=r.totalDays(w)-s,b=E/n.DAYS_PER_JULIAN_CENTURY,T=(125.045+l*E)*i.RADIANS_PER_DEGREE,x=(250.089+u*E)*i.RADIANS_PER_DEGREE,P=(260.008+c*E)*i.RADIANS_PER_DEGREE,A=(176.625+h*E)*i.RADIANS_PER_DEGREE,M=(357.529+d*E)*i.RADIANS_PER_DEGREE,D=(311.589+m*E)*i.RADIANS_PER_DEGREE,I=(134.963+p*E)*i.RADIANS_PER_DEGREE,R=(276.617+f*E)*i.RADIANS_PER_DEGREE,O=(34.226+v*E)*i.RADIANS_PER_DEGREE,L=(15.134+g*E)*i.RADIANS_PER_DEGREE,N=(119.743+_*E)*i.RADIANS_PER_DEGREE,B=(239.961+y*E)*i.RADIANS_PER_DEGREE,F=(25.053+C*E)*i.RADIANS_PER_DEGREE,z=Math.sin(T),V=Math.sin(x),k=Math.sin(P),U=Math.sin(A),W=Math.sin(M),G=Math.sin(D),H=Math.sin(I),q=Math.sin(R),j=Math.sin(O),Y=Math.sin(L),X=Math.sin(N),Z=Math.sin(B),Q=Math.sin(F),J=Math.cos(T),K=Math.cos(x),$=Math.cos(P),et=Math.cos(A),tt=Math.cos(M),rt=Math.cos(D),it=Math.cos(I),nt=Math.cos(R),ot=Math.cos(O),at=Math.cos(L),st=Math.cos(N),lt=Math.cos(B),ut=Math.cos(F),ct=(269.9949+.0031*b-3.8787*z-.1204*V+.07*k-.0172*U+.0072*G-.0052*Y+.0043*Q)*i.RADIANS_PER_DEGREE,ht=(66.5392+.013*b+1.5419*J+.0239*K-.0278*$+.0068*et-.0029*rt+9e-4*it+8e-4*at-9e-4*ut)*i.RADIANS_PER_DEGREE,dt=(38.3213+13.17635815*E-1.4e-12*E*E+3.561*z+.1208*V-.0642*k+.0158*U+.0252*W-.0066*G-.0047*H-.0046*q+.0028*j+.0052*Y+.004*X+.0019*Z-.0044*Q)*i.RADIANS_PER_DEGREE,mt=(13.17635815-1.4e-12*2*E+3.561*J*l+.1208*K*u-.0642*$*c+.0158*et*h+.0252*tt*d-.0066*rt*m-.0047*it*p-.0046*nt*f+.0028*ot*v+.0052*at*g+.004*st*_+.0019*lt*y-.0044*ut*C)/86400*i.RADIANS_PER_DEGREE;return e(S)||(S=new t),S.rightAscension=ct,S.declination=ht,S.rotation=dt,S.rotationRate=mt,S},o}),r("Core/IauOrientationAxes",["./Cartesian3","./defined","./Iau2000Orientation","./JulianDate","./Math","./Matrix3","./Quaternion"],function(e,t,r,i,n,o,a){"use strict";function s(r,i,a){var s=u;s.x=Math.cos(r+n.PI_OVER_TWO),s.y=Math.sin(r+n.PI_OVER_TWO),s.z=0;var l=Math.cos(i),d=h;d.x=l*Math.cos(r),d.y=l*Math.sin(r),d.z=Math.sin(i);var m=e.cross(d,s,c);return t(a)||(a=new o),a[0]=s.x,a[1]=m.x,a[2]=d.x,a[3]=s.y,a[4]=m.y,a[5]=d.y,a[6]=s.z,a[7]=m.z,a[8]=d.z,a}var l=function(e){t(e)&&"function"==typeof e||(e=r.ComputeMoon),this._computeFunction=e},u=new e,c=new e,h=new e,d=new o,m=new a;return l.prototype.evaluate=function(r,l){t(r)||(r=i.now());var u=this._computeFunction(r),c=s(u.rightAscension,u.declination,l),h=n.zeroToTwoPi(u.rotation),p=a.fromAxisAngle(e.UNIT_Z,h,m),f=o.fromQuaternion(a.conjugate(p,p),d),v=o.multiply(f,c,c);return v},l}),r("Core/InterpolationAlgorithm",["./DeveloperError"],function(e){"use strict";var t={};return t.type=void 0,t.getRequiredDataPoints=e.throwInstantiationError,t.interpolateOrderZero=e.throwInstantiationError,t.interpolate=e.throwInstantiationError,t}),r("Core/TimeInterval",["./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./JulianDate"],function(e,t,r,i,n,o){"use strict";var a=function(r){r=e(r,e.EMPTY_OBJECT),this.start=t(r.start)?o.clone(r.start):new o,this.stop=t(r.stop)?o.clone(r.stop):new o,this.data=r.data,this.isStartIncluded=e(r.isStartIncluded,!0),this.isStopIncluded=e(r.isStopIncluded,!0)};r(a.prototype,{isEmpty:{get:function(){var e=o.compare(this.stop,this.start);return 0>e||0===e&&(!this.isStartIncluded||!this.isStopIncluded)}}});var s={start:void 0,stop:void 0,isStartIncluded:void 0,isStopIncluded:void 0,data:void 0};return a.fromIso8601=function(r,i){var n=r.iso8601.split("/"),l=o.fromIso8601(n[0]),u=o.fromIso8601(n[1]),c=e(r.isStartIncluded,!0),h=e(r.isStopIncluded,!0),d=r.data;return t(i)?(i.start=l,i.stop=u,i.isStartIncluded=c,i.isStopIncluded=h,i.data=d,i):(s.start=l,s.stop=u,s.isStartIncluded=c,s.isStopIncluded=h,s.data=d,new a(s))},a.toIso8601=function(e,t){return o.toIso8601(e.start,t)+"/"+o.toIso8601(e.stop,t)},a.clone=function(e,r){return t(e)?t(r)?(r.start=e.start,r.stop=e.stop,r.isStartIncluded=e.isStartIncluded,r.isStopIncluded=e.isStopIncluded,r.data=e.data,r):new a(e):void 0},a.equals=function(e,r,i){return e===r||t(e)&&t(r)&&(e.isEmpty&&r.isEmpty||e.isStartIncluded===r.isStartIncluded&&e.isStopIncluded===r.isStopIncluded&&o.equals(e.start,r.start)&&o.equals(e.stop,r.stop)&&(e.data===r.data||t(i)&&i(e.data,r.data)))},a.equalsEpsilon=function(e,r,i,n){return e===r||t(e)&&t(r)&&(e.isEmpty&&r.isEmpty||e.isStartIncluded===r.isStartIncluded&&e.isStopIncluded===r.isStopIncluded&&o.equalsEpsilon(e.start,r.start,i)&&o.equalsEpsilon(e.stop,r.stop,i)&&(e.data===r.data||t(n)&&n(e.data,r.data)))},a.intersect=function(e,r,i,n){if(!t(r))return a.clone(a.EMPTY,i);var s=e.start,l=e.stop,u=r.start,c=r.stop,h=o.greaterThanOrEquals(u,s)&&o.greaterThanOrEquals(l,u),d=!h&&o.lessThanOrEquals(u,s)&&o.lessThanOrEquals(s,c);if(!h&&!d)return a.clone(a.EMPTY,i);var m=e.isStartIncluded,p=e.isStopIncluded,f=r.isStartIncluded,v=r.isStopIncluded,g=o.lessThan(l,c);return i.start=h?u:s,i.isStartIncluded=m&&f||!o.equals(u,s)&&(h&&f||d&&m),i.stop=g?l:c,i.isStopIncluded=g?p:p&&v||!o.equals(c,l)&&v,i.data=t(n)?n(e.data,r.data):e.data,i},a.contains=function(e,t){if(e.isEmpty)return!1;var r=o.compare(e.start,t);if(0===r)return e.isStartIncluded;var i=o.compare(t,e.stop);return 0===i?e.isStopIncluded:0>r&&0>i},a.prototype.clone=function(e){return a.clone(this,e)},a.prototype.equals=function(e,t){return a.equals(this,e,t)},a.prototype.equalsEpsilon=function(e,t,r){return a.equalsEpsilon(this,e,t,r)},a.prototype.toString=function(){return a.toIso8601(this)},a.EMPTY=n(new a({start:new o,stop:new o,isStartIncluded:!1,isStopIncluded:!1})),a}),r("Core/Iso8601",["./freezeObject","./JulianDate","./TimeInterval"],function(e,t,r){"use strict";var i=e(t.fromIso8601("0000-01-01T00:00:00Z")),n=e(t.fromIso8601("9999-12-31T24:00:00Z")),o=e(new r({start:i,stop:n})),a={MINIMUM_VALUE:i,MAXIMUM_VALUE:n,MAXIMUM_INTERVAL:o};return a}),r("Core/KeyboardEventModifier",["./freezeObject"],function(e){"use strict";var t={SHIFT:0,CTRL:1,ALT:2};return e(t)}),r("Core/LagrangePolynomialApproximation",["./defined"],function(e){"use strict";var t={type:"Lagrange"};return t.getRequiredDataPoints=function(e){return Math.max(e+1,2)},t.interpolateOrderZero=function(t,r,i,n,o){e(o)||(o=new Array(n));var a,s,l=r.length;for(a=0;n>a;a++)o[a]=0;for(a=0;l>a;a++){var u=1;for(s=0;l>s;s++)if(s!==a){var c=r[a]-r[s];u*=(t-r[s])/c}for(s=0;n>s;s++)o[s]+=u*i[a*n+s]}return o},t}),r("Core/LinearApproximation",["./defined","./DeveloperError"],function(e){"use strict";var t={type:"Linear"};return t.getRequiredDataPoints=function(){return 2},t.interpolateOrderZero=function(t,r,i,n,o){e(o)||(o=new Array(n));var a,s,l,u=r[0],c=r[1];for(a=0;n>a;a++)s=i[a],l=i[a+n],o[a]=((l-s)*t+c*s-u*l)/(c-u);return o},t}),r("Core/MapProjection",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{ellipsoid:{get:t.throwInstantiationError}}),r.prototype.project=t.throwInstantiationError,r.prototype.unproject=t.throwInstantiationError,r}),r("Core/Matrix2",["./Cartesian2","./defaultValue","./defined","./DeveloperError","./freezeObject"],function(e,t,r,i,n){"use strict";var o=function(e,r,i,n){this[0]=t(e,0),this[1]=t(i,0),this[2]=t(r,0),this[3]=t(n,0)};o.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):new o(e[0],e[2],e[1],e[3]):void 0},o.fromArray=function(e,i,n){return i=t(i,0),r(n)||(n=new o),n[0]=e[i],n[1]=e[i+1],n[2]=e[i+2],n[3]=e[i+3],n},o.fromColumnMajorArray=function(e,t){return o.clone(e,t)},o.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3],t):new o(e[0],e[1],e[2],e[3])},o.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=e.y,t):new o(e.x,0,0,e.y)},o.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=e,t):new o(e,0,0,e)},o.fromRotation=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=n,t[2]=-n,t[3]=i,t):new o(i,-n,n,i)},o.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):[e[0],e[1],e[2],e[3]]},o.getElementIndex=function(e,t){return 2*e+t},o.getColumn=function(e,t,r){var i=2*t,n=e[i],o=e[i+1];return r.x=n,r.y=o,r},o.setColumn=function(e,t,r,i){i=o.clone(e,i);var n=2*t;return i[n]=r.x,i[n+1]=r.y,i},o.getRow=function(e,t,r){var i=e[t],n=e[t+2];return r.x=i,r.y=n,r},o.setRow=function(e,t,r,i){return i=o.clone(e,i),i[t]=r.x,i[t+2]=r.y,i};var a=new e;o.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],a)),r.y=e.magnitude(e.fromElements(t[2],t[3],a)),r};var s=new e;return o.getMaximumScale=function(t){return o.getScale(t,s),e.maximumComponent(s)},o.multiply=function(e,t,r){var i=e[0]*t[0]+e[2]*t[1],n=e[0]*t[2]+e[2]*t[3],o=e[1]*t[0]+e[3]*t[1],a=e[1]*t[2]+e[3]*t[3];return r[0]=i,r[1]=o,r[2]=n,r[3]=a,r},o.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r},o.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r},o.multiplyByVector=function(e,t,r){var i=e[0]*t.x+e[2]*t.y,n=e[1]*t.x+e[3]*t.y;return r.x=i,r.y=n,r},o.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r},o.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},o.transpose=function(e,t){var r=e[0],i=e[2],n=e[1],o=e[3];return t[0]=r,t[1]=i,t[2]=n,t[3]=o,t},o.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t},o.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},o.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i},o.IDENTITY=n(new o(1,0,0,1)),o.COLUMN0ROW0=0,o.COLUMN0ROW1=1,o.COLUMN1ROW0=2,o.COLUMN1ROW1=3,o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this[0]+", "+this[2]+")\n"+"("+this[1]+", "+this[3]+")"},o}),r("Core/NearFarScalar",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i,n){this.near=e(t,0),this.nearValue=e(r,0),this.far=e(i,1),this.farValue=e(n,0)};return r.clone=function(e,i){return t(e)?t(i)?(i.near=e.near,i.nearValue=e.nearValue,i.far=e.far,i.farValue=e.farValue,i):new r(e.near,e.nearValue,e.far,e.farValue):void 0},r.packedLength=4,r.pack=function(t,r,i){i=e(i,0),r[i++]=t.near,r[i++]=t.nearValue,r[i++]=t.far,r[i]=t.farValue},r.unpack=function(i,n,o){return n=e(n,0),t(o)||(o=new r),o.near=i[n++],o.nearValue=i[n++],o.far=i[n++],o.farValue=i[n],o},r.equals=function(e,r){return e===r||t(e)&&t(r)&&e.near===r.near&&e.nearValue===r.nearValue&&e.far===r.far&&e.farValue===r.farValue},r.prototype.clone=function(e){return r.clone(this,e)},r.prototype.equals=function(e){return r.equals(this,e)},r}),r("Core/ObjectOrientedBoundingBox",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Matrix3"],function(e,t,r,i,n){"use strict";function o(e,t,r,i,o){var a=t[e]+r[0]*i[n.getElementIndex(0,e)]+r[1]*i[n.getElementIndex(1,e)]+r[2]*i[n.getElementIndex(2,e)];return Math.abs(o[e])>a?!0:!1}function a(e,t,r,i,o){var a=o[0]*i[n.getElementIndex(0,e)]+o[1]*i[n.getElementIndex(1,e)]+o[2]*i[n.getElementIndex(2,e)],s=r[e]+t[0]*i[n.getElementIndex(0,e)]+t[1]*i[n.getElementIndex(1,e)]+t[2]*i[n.getElementIndex(2,e)];return Math.abs(a)>s?!0:!1}function s(e,t,r,i,o,a){var s=a[(e+2)%3]*o[n.getElementIndex((e+1)%3,t)]-a[(e+1)%3]*o[n.getElementIndex((e+2)%3,t)],l=r[(e+1)%3]*o[n.getElementIndex((e+2)%3,t)]+r[(e+2)%3]*o[n.getElementIndex((e+1)%3,t)];return l+=i[(t+1)%3]*o[n.getElementIndex(e,(t+2)%3)]+i[(t+2)%3]*o[n.getElementIndex(e,(t+1)%3)],Math.abs(s)>l?!0:!1}var l=function(r,i,o){this.rotation=n.clone(t(r,n.IDENTITY)),this.translation=e.clone(t(i,e.ZERO)),this.scale=e.clone(t(o,e.ZERO))},u=new e,c=new e,h=new e,d=new e,m=new e,p=new n,f={unitary:new n,diagonal:new n};l.fromPoints=function(t,i){if(r(i)||(i=new l),!r(t)||0===t.length)return i.tranformMatrix=n.IDENTITY,i.translation=e.ZERO,i.scale=e.ZERO,i;var o,a=t.length,s=e.clone(t[0],u);for(o=1;a>o;o++)e.add(s,t[o],s);var v=1/a;e.multiplyByScalar(s,v,s);var g,_=0,y=0,C=0,w=0,S=0,E=0;for(o=0;a>o;o++)g=e.subtract(t[o],s,c),_+=g.x*g.x,y+=g.x*g.y,C+=g.x*g.z,w+=g.y*g.y,S+=g.y*g.z,E+=g.z*g.z;_*=v,y*=v,C*=v,w*=v,S*=v,E*=v;var b=p;b[0]=_,b[1]=y,b[2]=C,b[3]=y,b[4]=w,b[5]=S,b[6]=C,b[7]=S,b[8]=E;var T=n.computeEigenDecomposition(b,f),x=n.transpose(T.unitary,i.rotation);g=e.subtract(t[0],s,c);var P=n.multiplyByVector(x,g,h),A=e.clone(P,d),M=e.clone(P,m);for(o=1;a>o;o++)g=e.subtract(t[o],s,g),n.multiplyByVector(x,g,P),e.minimumByComponent(M,P,M),e.maximumByComponent(A,P,A);var D=e.add(M,A,h);e.multiplyByScalar(D,.5,D),n.multiplyByVector(x,D,D),e.add(s,D,i.translation);var I=e.subtract(A,M,h);return e.multiplyByScalar(I,.5,i.scale),i},l.fromBoundingRectangle=function(e,t,i){r(i)||(i=new l),r(t)?n.fromRotationZ(t,i.rotation):n.clone(n.IDENTITY,i.rotation);var o=i.scale;o.x=.5*e.width,o.y=.5*e.height,o.z=0;var a=n.multiplyByVector(i.rotation,o,i.translation);return a.x+=e.x,a.y+=e.y,i},l.clone=function(t,i){return r(t)?r(i)?(n.clone(t.rotation,i.rotation),e.clone(t.translation,i.translation),e.clone(t.scale,i.scale),i):new l(t.rotation,t.translation,t.scale):void 0};var v=new n,g=new n,_=new e,y=new Array(3),C=new Array(3),w=new Array(3);return l.intersect=function(t,r){var i=n.transpose(t.rotation,v),l=n.multiply(i,r.rotation,g);n.abs(l,l);var u=y,c=C,h=w;return e.subtract(t.translation,r.translation,_),n.multiplyByVector(i,_,_),e.pack(_,u),e.pack(t.scale,c),e.pack(r.scale,h),o(0,c,h,l,u)?!1:o(1,c,h,l,u)?!1:o(2,c,h,l,u)?!1:a(0,c,h,l,u)?!1:a(1,c,h,l,u)?!1:a(2,c,h,l,u)?!1:s(0,0,c,h,l,u)?!1:s(1,0,c,h,l,u)?!1:s(2,0,c,h,l,u)?!1:s(0,1,c,h,l,u)?!1:s(1,1,c,h,l,u)?!1:s(2,1,c,h,l,u)?!1:s(0,2,c,h,l,u)?!1:s(1,2,c,h,l,u)?!1:s(2,2,c,h,l,u)?!1:!0},l.equals=function(t,i){return t===i||r(t)&&r(i)&&e.equals(t.transformedPosition,i.transformedPosition)&&n.equals(t.transformMatrix,i.transformMatrix)&&e.equals(t.rectangle,i.rectangle)},l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l}),r("Core/Visibility",["./freezeObject"],function(e){"use strict";var t={NONE:-1,PARTIAL:0,FULL:1};return e(t)}),r("Core/Occluder",["./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math","./Rectangle","./Visibility"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(e,r){this._occluderPosition=t.clone(e.center),this._occluderRadius=e.radius,this._horizonDistance=0,this._horizonPlaneNormal=void 0,this._horizonPlanePosition=void 0,this._cameraPosition=void 0,this.cameraPosition=r},h=new t;n(c.prototype,{position:{get:function(){return this._occluderPosition}},radius:{get:function(){return this._occluderRadius}},cameraPosition:{set:function(e){e=t.clone(e,this._cameraPosition);var r,i,n,o=t.subtract(this._occluderPosition,e,h),a=t.magnitudeSquared(o),s=this._occluderRadius*this._occluderRadius;if(a>s){r=Math.sqrt(a-s),a=1/Math.sqrt(a),i=t.multiplyByScalar(o,a,h);var l=r*r*a;n=t.add(e,t.multiplyByScalar(i,l,h),h)}else r=Number.MAX_VALUE;this._horizonDistance=r,this._horizonPlaneNormal=i,this._horizonPlanePosition=n,this._cameraPosition=e}}}),c.fromBoundingSphere=function(e,r,n){if(!i(e))throw new o("occluderBoundingSphere is required.");if(!i(r))throw new o("camera position is required.");return i(n)?(t.clone(e.center,n._occluderPosition),n._occluderRadius=e.radius,n.cameraPosition=r,n):new c(e,r)};var d=new t;c.prototype.isPointVisible=function(e){if(this._horizonDistance!==Number.MAX_VALUE){var r=t.subtract(e,this._occluderPosition,d),i=this._occluderRadius;if(i=t.magnitudeSquared(r)-i*i,i>0)return i=Math.sqrt(i)+this._horizonDistance,r=t.subtract(e,this._cameraPosition,r),i*i>t.magnitudeSquared(r)}return!1};var m=new t;c.prototype.isBoundingSphereVisible=function(e){var r=t.clone(e.center,m),i=e.radius;if(this._horizonDistance!==Number.MAX_VALUE){var n=t.subtract(r,this._occluderPosition,d),o=this._occluderRadius-i;if(o=t.magnitudeSquared(n)-o*o,i<this._occluderRadius)return o>0?(o=Math.sqrt(o)+this._horizonDistance,n=t.subtract(r,this._cameraPosition,n),o*o+i*i>t.magnitudeSquared(n)):!1;if(o>0){n=t.subtract(r,this._cameraPosition,n);var a=t.magnitudeSquared(n),s=this._occluderRadius*this._occluderRadius,l=i*i;return(this._horizonDistance*this._horizonDistance+s)*l>a*s?!0:(o=Math.sqrt(o)+this._horizonDistance,o*o+l>a)}return!0}return!1};var p=new t;c.prototype.computeVisibility=function(e){if(!i(e))throw new o("occludeeBS is required.");var r=t.clone(e.center),n=e.radius;if(n>this._occluderRadius)return u.FULL;if(this._horizonDistance!==Number.MAX_VALUE){var a=t.subtract(r,this._occluderPosition,p),s=this._occluderRadius-n,l=t.magnitudeSquared(a);if(s=l-s*s,s>0){s=Math.sqrt(s)+this._horizonDistance,a=t.subtract(r,this._cameraPosition,a);var c=t.magnitudeSquared(a);return c>s*s+n*n?u.NONE:(s=this._occluderRadius+n,s=l-s*s,s>0?(s=Math.sqrt(s)+this._horizonDistance,s*s+n*n>c?u.FULL:u.PARTIAL):(a=t.subtract(r,this._horizonPlanePosition,a),t.dot(a,this._horizonPlaneNormal)>-n?u.PARTIAL:u.FULL))}}return u.NONE};var f=new t;c.computeOccludeePoint=function(e,r,i){var n=t.clone(r),a=t.clone(e.center),s=e.radius,l=i.length;if(t.equals(a,r))throw new o("occludeePosition must be different than occluderBoundingSphere.center");var u=t.normalize(t.subtract(n,a,f),f),h=-t.dot(u,a),d=c._anyRotationVector(a,u,h),m=c._horizonToPlaneNormalDotProduct(e,u,h,d,i[0]);if(!m)return void 0;for(var p,v=1;l>v;++v){if(p=c._horizonToPlaneNormalDotProduct(e,u,h,d,i[v]),!p)return void 0;m>p&&(m=p)}if(.0017453283658983088>m)return void 0;var g=s/m;return t.add(a,t.multiplyByScalar(u,g,f),f)};var v=[];c.computeOccludeePointFromRectangle=function(i,n){n=r(n,a.WGS84);var o=l.subsample(i,n,0,v),s=e.fromPoints(o),u=t.ZERO;return t.equals(u,s.center)?void 0:c.computeOccludeePoint(new e(u,n.minimumRadius),s.center,o)};var g=new t;c._anyRotationVector=function(e,r,i){var n=t.abs(r,g),o=n.x>n.y?0:1;(0===o&&n.z>n.x||1===o&&n.z>n.y)&&(o=2);var a,s=new t;0===o?(n.x=e.x,n.y=e.y+1,n.z=e.z+1,a=t.UNIT_X):1===o?(n.x=e.x+1,n.y=e.y,n.z=e.z+1,a=t.UNIT_Y):(n.x=e.x+1,n.y=e.y+1,n.z=e.z,a=t.UNIT_Z);var l=(t.dot(r,n)+i)/-t.dot(r,a);return t.normalize(t.subtract(t.add(n,t.multiplyByScalar(a,l,s),n),e,n),n)};var _=new t;c._rotationVector=function(e,r,i,n,o){var a=t.subtract(n,e,_);if(a=t.normalize(a,a),t.dot(r,a)<.9999999847691291){var l=t.cross(r,a,a),u=t.magnitude(l);if(u>s.EPSILON13)return t.normalize(l,new t)}return o};var y=new t,C=new t,w=new t,S=new t;return c._horizonToPlaneNormalDotProduct=function(e,r,i,n,o){var a=t.clone(o,y),s=t.clone(e.center,C),l=e.radius,u=t.subtract(s,a,w),c=t.magnitudeSquared(u),h=l*l;if(h>c)return!1;var d=c-h,m=Math.sqrt(d),p=Math.sqrt(c),f=1/p,v=m*f,g=v*m;u=t.normalize(u,u);var _=t.add(a,t.multiplyByScalar(u,g,S),S),E=Math.sqrt(d-g*g),b=this._rotationVector(s,r,i,a,n),T=t.fromElements(b.x*b.x*u.x+(b.x*b.y-b.z)*u.y+(b.x*b.z+b.y)*u.z,(b.x*b.y+b.z)*u.x+b.y*b.y*u.y+(b.y*b.z-b.x)*u.z,(b.x*b.z-b.y)*u.x+(b.y*b.z+b.x)*u.y+b.z*b.z*u.z,y);T=t.normalize(T,T);var x=t.multiplyByScalar(T,E,y);b=t.normalize(t.subtract(t.add(_,x,w),s,w),w);var P=t.dot(r,b);b=t.normalize(t.subtract(t.subtract(_,x,b),s,b),b);var A=t.dot(r,b);return A>P?P:A},c}),r("Core/Oct",["./Cartesian3","./defined","./DeveloperError","./Math"],function(e,t,r,i){"use strict";var n={};return n.encode=function(e,t){if(t.x=e.x/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),t.y=e.y/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),e.z<0){var r=t.x,n=t.y;t.x=(1-Math.abs(n))*i.signNotZero(r),t.y=(1-Math.abs(r))*i.signNotZero(n)}return t.x=i.toSNorm(t.x),t.y=i.toSNorm(t.y),t},n.decode=function(t,r,n){if(n.x=i.fromSNorm(t),n.y=i.fromSNorm(r),n.z=1-(Math.abs(n.x)+Math.abs(n.y)),n.z<0){var o=n.x;n.x=(1-Math.abs(n.y))*i.signNotZero(o),n.y=(1-Math.abs(o))*i.signNotZero(n.y)}return e.normalize(n,n)},n}),r("Core/Packable",["./DeveloperError"],function(e){"use strict";var t={packedLength:void 0,pack:e.throwInstantiationError,unpack:e.throwInstantiationError};return t}),r("Core/PackableForInterpolation",["./DeveloperError"],function(e){"use strict";var t={packedInterpolationLength:void 0,convertPackedArrayForInterpolation:e.throwInstantiationError,unpackInterpolationResult:e.throwInstantiationError};return t}),r("ThirdParty/measureText",[],function(){var e=function(e,t){return document.defaultView.getComputedStyle(e,null).getPropertyValue(t)},t=function(t,r,i,n){var o=t.measureText(r),a=e(t.canvas,"font-family"),s=e(t.canvas,"font-size").replace("px",""),l=!/\S/.test(r);o.fontsize=s;var u=document.createElement("div");u.style.position="absolute",u.style.opacity=0,u.style.font=s+"px "+a,u.innerHTML=r+"<br/>"+r,document.body.appendChild(u),o.leading=1.2*s;var c=e(u,"height");if(c=c.replace("px",""),c>=2*s&&(o.leading=0|c/2),document.body.removeChild(u),l)o.ascent=0,o.descent=0,o.bounds={minx:0,maxx:o.width,miny:0,maxy:0},o.height=0;else{var h=document.createElement("canvas"),d=100;h.width=o.width+d,h.height=3*s,h.style.opacity=1,h.style.fontFamily=a,h.style.fontSize=s;var m=h.getContext("2d");m.font=s+"px "+a;var p=h.width,f=h.height,v=f/2;m.fillStyle="white",m.fillRect(-1,-1,p+2,f+2),i&&(m.strokeStyle="black",m.lineWidth=t.lineWidth,m.strokeText(r,d/2,v)),n&&(m.fillStyle="black",m.fillText(r,d/2,v));for(var g=m.getImageData(0,0,p,f).data,_=0,y=4*p,C=g.length;++_<C&&255===g[_];);var w=0|_/y;for(_=C-1;--_>0&&255===g[_];);var S=0|_/y;for(_=0;C>_&&255===g[_];)_+=y,_>=C&&(_=_-C+4);var E=0|_%y/4,b=1;for(_=C-3;_>=0&&255===g[_];)_-=y,0>_&&(_=C-3-4*b++);var T=0|_%y/4+1;o.ascent=v-w,o.descent=S-v,o.bounds={minx:E-d/2,maxx:T-d/2,miny:0,maxy:S-w},o.height=1+(S-w)}return o};return t}),r("Core/writeTextToCanvas",["../ThirdParty/measureText","./Color","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(i,n){if(""===i)return void 0;n=r(n,r.EMPTY_OBJECT);var o=r(n.font,"10px sans-serif"),a=document.createElement("canvas");a.width=a.height=1,a.style.font=o;var s=a.getContext("2d");s.font=o,s.textBaseline=r(n.textBaseline,"bottom"),a.style.visibility="hidden",document.body.appendChild(a);var l=r(n.stroke,!1),u=r(n.fill,!0),c=2*r(n.strokeWidth,1);s.lineWidth=c;var h=e(s,i,l,u);a.dimensions=h,document.body.removeChild(a),a.style.visibility="";var d=h.height-h.ascent;a.width=h.width,a.height=h.height;var m=a.height-d;if(s.font=o,l){var p=r(n.strokeColor,t.BLACK);s.strokeStyle=p.toCssColorString(),s.lineWidth=c,s.strokeText(i,0,m)}if(u){var f=r(n.fillColor,t.WHITE);s.fillStyle=f.toCssColorString(),s.fillText(i,0,m)}return a};return i}),r("Core/PinBuilder",["./buildModuleUrl","./Color","./defined","./DeveloperError","./loadImage","./writeTextToCanvas"],function(e,t,r,i,n,o){"use strict";function a(e,t,r){e.save(),e.scale(r/24,r/24),e.fillStyle=t.toCssColorString(),e.strokeStyle=t.brighten(.6,c).toCssColorString(),e.lineWidth=.846,e.beginPath(),e.moveTo(6.72,.422),e.lineTo(17.28,.422),e.bezierCurveTo(18.553,.422,19.577,1.758,19.577,3.415),e.lineTo(19.577,10.973),e.bezierCurveTo(19.577,12.63,18.553,13.966,17.282,13.966),e.lineTo(14.386,14.008),e.lineTo(11.826,23.578),e.lineTo(9.614,14.008),e.lineTo(6.719,13.965),e.bezierCurveTo(5.446,13.983,4.422,12.629,4.422,10.972),e.lineTo(4.422,3.416),e.bezierCurveTo(4.423,1.76,5.447,.423,6.718,.423),e.closePath(),e.fill(),e.stroke(),e.restore()}function s(e,r,i){var n=i/2.5,o=n,a=n;r.width>r.height?a=n*(r.height/r.width):r.width<r.height&&(o=n*(r.width/r.height));var s=(i-o)/2,l=7/24*i-a/2;e.globalCompositeOperation="destination-out",e.drawImage(r,s-1,l,o,a),e.drawImage(r,s,l-1,o,a),e.drawImage(r,s+1,l,o,a),e.drawImage(r,s,l+1,o,a),e.globalCompositeOperation="destination-over",e.fillStyle=t.BLACK.toCssColorString(),e.fillRect(s-1,l-1,o+1,a+1),e.globalCompositeOperation="destination-out",e.drawImage(r,s,l,o,a),e.globalCompositeOperation="destination-over",e.fillStyle=t.WHITE.toCssColorString(),e.fillRect(s,l,o,a)}function l(e,t,i,l,u){h[0]=e,h[1]=t,h[2]=i,h[3]=l;var c=JSON.stringify(h),d=u[c];if(r(d))return d;var m=document.createElement("canvas");m.width=l,m.height=l;var p=m.getContext("2d");if(a(p,i,l),r(e)){var f=n(e).then(function(e){return s(p,e,l),u[c]=m,m});return u[c]=f,f}if(r(t)){var v=o(t,{font:"bold "+l+"px sans-serif"});s(p,v,l)}return u[c]=m,m}var u=function(){this._cache={}};u.prototype.fromColor=function(e,t){return l(void 0,void 0,e,t,this._cache)},u.prototype.fromUrl=function(e,t,r){return l(e,void 0,t,r,this._cache)},u.prototype.fromMakiIconId=function(t,r,i){return l(e("Assets/Textures/maki/"+encodeURIComponent(t)+".png"),void 0,r,i,this._cache)},u.prototype.fromText=function(e,t,r){return l(void 0,e,t,r,this._cache)};var c=new t,h=new Array(4);return u}),r("Core/PixelFormat",["./freezeObject"],function(e){"use strict";var t={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,validate:function(e){return e===t.DEPTH_COMPONENT||e===t.DEPTH_STENCIL||e===t.ALPHA||e===t.RGB||e===t.RGBA||e===t.LUMINANCE||e===t.LUMINANCE_ALPHA},isColorFormat:function(e){return e===t.ALPHA||e===t.RGB||e===t.RGBA||e===t.LUMINANCE||e===t.LUMINANCE_ALPHA},isDepthFormat:function(e){return e===t.DEPTH_COMPONENT||e===t.DEPTH_STENCIL}};return e(t)}),r("Core/PolygonGeometryLibrary",["./Cartesian3","./defaultValue","./defined","./Ellipsoid"],function(e,t,r,i){"use strict";function n(t,r,i,n){return e.subtract(r,t,a),e.multiplyByScalar(a,i/n,a),e.add(t,a,a),[a.x,a.y,a.z]}var o={},a=new e;o.subdivideLine=function(t,r,i){var o=e.distance(t,r),a=e.angleBetween(t,r),s=a/i,l=Math.ceil(Math.log(s)/Math.log(2));1>l&&(l=0);var u=Math.pow(2,l),c=o/u,h=new Array(3*u),d=0;h[d++]=t.x,h[d++]=t.y,h[d++]=t.z;for(var m=1;u>m;m++){var p=n(t,r,m*c,o);h[d++]=p[0],h[d++]=p[1],h[d++]=p[2]}return h};var s=new e,l=new e,u=new e,c=new e;return o.scaleToGeodeticHeightExtruded=function(n,o,a,h,d){h=t(h,i.WGS84);var m=s,p=l,f=u,v=c;if(r(n)&&r(n.attributes)&&r(n.attributes.position))for(var g=n.attributes.position.values,_=g.length/2,y=0;_>y;y+=3)e.fromArray(g,y,f),h.geodeticSurfaceNormal(f,m),v=h.scaleToGeodeticSurface(f,v),p=e.multiplyByScalar(m,a,p),p=e.add(v,p,p),g[y+_]=p.x,g[y+1+_]=p.y,g[y+2+_]=p.z,d&&(v=e.clone(f,v)),p=e.multiplyByScalar(m,o,p),p=e.add(v,p,p),g[y]=p.x,g[y+1]=p.y,g[y+2]=p.z;return n},o}),r("Core/pointInsideTriangle",["./barycentricCoordinates","./Cartesian3"],function(e,t){"use strict";var r=new t,i=function(t,i,n,o){return e(t,i,n,o,r),r.x>0&&r.y>0&&r.z>0};return i}),r("Core/Queue",[],function(){"use strict";var e=function(){this._array=[],this._offset=0,this.length=0};return e.prototype.enqueue=function(e){this._array.push(e),this.length++},e.prototype.dequeue=function(){if(0===this.length)return void 0;var e=this._array,t=this._offset,r=e[t];return e[t]=void 0,t++,t>10&&2*t>e.length&&(this._array=e.slice(t),t=0),this._offset=t,this.length--,r},e.prototype.contains=function(e){return-1!==this._array.indexOf(e)},e.prototype.clear=function(){this._array.length=this._offset=this.length=0},e.prototype.sort=function(e){this._offset>0&&(this._array=this._array.slice(this._offset),this._offset=0),this._array.sort(e)},e}),r("Core/WindingOrder",["./freezeObject"],function(e){"use strict";var t={CLOCKWISE:2304,COUNTER_CLOCKWISE:2305,validate:function(e){return e===t.CLOCKWISE||e===t.COUNTER_CLOCKWISE}};return e(t)}),r("Core/PolygonPipeline",["./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./Math","./pointInsideTriangle","./PrimitiveType","./Queue","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(t,r,i){var n=e.subtract(r,t,z),o=e.subtract(i,r,V);return n.x*o.y-n.y*o.x>=0}function v(e){for(var t=e[0].x,r=0,i=0;i<e.length;i++)e[i].x>t&&(t=e[i].x,r=i);return r}function g(e){for(var t=e[0][0].x,r=0,i=0;i<e.length;i++){var n=e[i][v(e[i])].x;n>t&&(t=n,r=i)}return r}function _(e){for(var t=[],r=0;r<e.length;r++){var i=e[(r-1+e.length)%e.length],n=e[r],o=e[(r+1)%e.length];f(i,n,o)||t.push(n)}return t}function y(t,r){for(var i=0;i<t.length;i++)if(e.equals(r,t[i]))return i;return-1}function C(r,n,o){o=i(o,[]);var a=Number.MAX_VALUE,s=v(n),l=new e(n[s].x,r.y);o.push(s),o.push((s+1)%n.length);for(var u=n[0].x,c=u,h=1;h<n.length;++h)n[h].x<u?u=n[h].x:n[h].x>c&&(c=n[h].x);c+=c-u;var d=new t(c,r.y,0);for(h=0;h<n.length;h++){var m=n[h],p=n[(h+1)%n.length];if((m.x>=r.x||p.x>=r.x)&&(m.y>=r.y&&p.y<=r.y||m.y<=r.y&&p.y>=r.y)){var f=(p.y-m.y)*(d.x-r.x)-(p.x-m.x)*(d.y-r.y);if(0!==f){f=1/f;var g=((p.x-m.x)*(r.y-m.y)-(p.y-m.y)*(r.x-m.x))*f,_=((d.x-r.x)*(r.y-m.y)-(d.y-r.y)*(r.x-m.x))*f;if(g>=0&&1>=g&&_>=0&&1>=_){var y=new e(r.x+g*(d.x-r.x),r.y+g*(d.y-r.y)),C=e.subtract(y,r,k);f=e.magnitudeSquared(C),a>f&&(l=y,a=f,o[0]=h,o[1]=(h+1)%n.length)}}}}return l}function w(t,r){var i=g(r),n=r[i],o=v(n),a=n[o],s=[],l=C(a,t,s),u=y(t,l);if(-1!==u)return u;var d=e.magnitudeSquared(e.subtract(t[s[0]],a,U)),m=e.magnitudeSquared(e.subtract(t[s[1]],a,U)),p=m>d?t[s[0]]:t[s[1]],f=_(t),w=f.indexOf(p);
-1!==w&&f.splice(w,1);for(var S=[],E=0;E<f.length;E++){var b=f[E];h(b,a,l,p)&&S.push(b)}var T=Number.MAX_VALUE;if(S.length>0){var x=e.fromElements(1,0,U);for(E=0;E<S.length;E++){var P=e.subtract(S[E],a,W),A=e.magnitude(x)*e.magnitudeSquared(P);if(0!==A){var M=Math.abs(c.acosClamped(e.dot(x,P)/A));T>M&&(T=M,p=S[E])}}}return t.indexOf(p)}function S(e,r,i){for(var n=st.computeWindingOrder2D(e),o=0;o<r.length;o++){var a=r[o];t.equals(a[0],a[a.length-1])||a.push(a[0]);var l=st.computeWindingOrder2D(a);l===n&&a.reverse()}var u=s.fromPoints(e,i),c=u.projectPointsOntoPlane(e),h=[];for(o=0;o<r.length;o++)h.push(u.projectPointsOntoPlane(r[o]));var d=w(c,h),m=g(h),p=v(h[m]),f=r[m],_=[];for(o=0;o<e.length;o++)_.push(e[o]);var y,C=[];if(0!==p)for(y=0;y<=f.length;y++){var S=(y+p)%f.length;0!==S&&C.push(f[S])}else for(y=0;y<f.length;y++)C.push(f[(y+p)%f.length]);var E=_.lastIndexOf(e[d]);C.push(e[E]);var b=_.slice(0,E+1),T=_.slice(E+1);return _=b.concat(C,T),r.splice(m,1),_}function E(e){var t="0."+Math.sin(G).toString().substr(5);G+=.2;var r=Math.floor(t*e);return r===e&&r--,r}function b(t,r,i){return T(t,r,i)&&T(r,t,i)&&!L(i[t].position,i[r].position,i)&&!e.equals(i[t].position,i[r].position)}function T(t,r,i){A(t,i);var n=i[t],o=i[r],a=P(t,i,H),s=P(t,i,q),l=e.subtract(i[a].position,n.position,j),u=e.subtract(i[s].position,n.position,Y),c=e.subtract(o.position,n.position,X);return M(l,c)?x(l,c):M(u,c)?x(u,c):D(l,u)?O(l,u,c)?!0:!1:I(l,u)?R(l,u,c)?!1:!0:void 0}function x(t,r){return e.magnitude(r)<e.magnitude(t)}function P(e,t,r){var i=e+r;return 0>i&&(i=t.length-1),i===t.length&&(i=0),A(i,t),i}function A(t,r){var i=t-1,n=t+1;0>i&&(i=r.length-1),n===r.length&&(n=0);var a=e.subtract(r[i].position,r[t].position,Z),s=e.subtract(r[n].position,r[t].position,Q);if(M(a,s)){var l=new o("Superfluous vertex found.");throw l.vertexIndex=t,l}}function M(e,r){return 0===t.cross(e,r,J).z}function D(e,r){return t.cross(e,r,K).z<0}function I(e,r){return t.cross(e,r,$).z>0}function R(e,r,i){return t.cross(e,i,et).z>0&&t.cross(i,r,et).z>0}function O(e,r,i){return t.cross(e,i,tt).z<0&&t.cross(i,r,tt).z<0}function L(t,r,i){for(var n=0;n<i.length;n++){var o,a=i[n].position;if(o=n<i.length-1?i[n+1].position:i[0].position,!(e.equals(t,a)||e.equals(r,o)||e.equals(t,o)||e.equals(r,a))){var s=(r.y-t.y)/(r.x-t.x),l=(o.y-a.y)/(o.x-a.x);if(!(s===l||isNaN(s)&&isNaN(l))){var u;u=isNaN(s)?t.x:isNaN(l)?a.x:(t.y-a.y-s*t.x+l*a.x)/(l-s);var c=s*u+t.y-s*t.x,h=e.fromElements(u,c,rt);if(!(e.equals(h,t)||e.equals(h,r)||e.equals(h,a)||e.equals(h,o))){var d=B(u,t.x,r.x)&&B(c,t.y,r.y)&&B(u,a.x,o.x)&&B(c,a.y,o.y);if(d)return!0}}}}return!1}function N(t){var r=t[0].position,i=t[1].position,n=t[2].position,o=e.subtract(i,r,it),a=e.subtract(n,r,nt);return M(o,a)}function B(e,t,r){return(e>t||e>r)&&(t>e||r>e)||t===r&&t===e}function F(e){var t=e.length;if(3===t)return N(e)?[]:[e[0].index,e[1].index,e[2].index];if(e.length<3)throw new o("Invalid polygon: must have at least three vertices.");for(var r=!1,i=0;!r;){var n=10*e.length;if(i>n)return[];i++;for(var a=E(e.length),s=a+1;Math.abs(a-s)<2||Math.abs(a-s)>e.length-2;)s=E(e.length);if(a>s){var l=a;a=s,s=l}try{if(b(a,s,e)){var u=e.splice(a,s-a+1,e[a],e[s]);return F(e).concat(F(u))}}catch(c){if(c.hasOwnProperty("vertexIndex"))return e.splice(c.vertexIndex,1),F(e);throw c}}}var z=new e,V=new e,k=new e,U=new e(1,0),W=new e,G=0,H=-1,q=1,j=new t,Y=new t,X=new t,Z=new t,Q=new t,J=new t,K=new t,$=new t,et=new t,tt=new t,rt=new e,it=new t,nt=new t,ot=new t,at=new t,st={};return st.removeDuplicates=function(e){for(var r=e.length,i=[],n=r-1,o=0;r>o;n=o++){var a=e[n],s=e[o];t.equals(a,s)||i.push(s)}return i},st.computeArea2D=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++){var o=e[i],a=e[n];r+=o.x*a.y-a.x*o.y}return.5*r},st.computeWindingOrder2D=function(e){var t=st.computeArea2D(e);return t>0?p.COUNTER_CLOCKWISE:p.CLOCKWISE},st.triangulate=function(e){for(var t=e.length,r=[],i=0;t>i;++i)r[i]={position:e[i],index:i};return F(r)},st.resetSeed=function(e){G=i(e,0)},st.computeSubdivision=function(e,n,o){o=i(o,c.RADIANS_PER_DEGREE);for(var a=new m,s=n.length,h=0;s>h;h+=3)a.enqueue({i0:n[h],i1:n[h+1],i2:n[h+2]});for(var p,f=e.slice(0),v=[],g={};a.length>0;){var _,y,C=a.dequeue(),w=f[C.i0],S=f[C.i1],E=f[C.i2],b=t.angleBetween(w,S),T=t.angleBetween(S,E),x=t.angleBetween(E,w),P=Math.max(b,Math.max(T,x));P>o?b===P?(_=Math.min(C.i0,C.i1).toString()+" "+Math.max(C.i0,C.i1).toString(),p=g[_],p||(y=t.add(w,S,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i0,i1:p,i2:C.i2}),a.enqueue({i0:p,i1:C.i1,i2:C.i2})):T===P?(_=Math.min(C.i1,C.i2).toString()+" "+Math.max(C.i1,C.i2).toString(),p=g[_],p||(y=t.add(S,E,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i1,i1:p,i2:C.i0}),a.enqueue({i0:p,i1:C.i2,i2:C.i0})):x===P&&(_=Math.min(C.i2,C.i0).toString()+" "+Math.max(C.i2,C.i0).toString(),p=g[_],p||(y=t.add(E,w,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i2,i1:p,i2:C.i1}),a.enqueue({i0:p,i1:C.i0,i2:C.i1})):(v.push(C.i0),v.push(C.i1),v.push(C.i2))}var A=f.length,M=new Array(3*A),D=0;for(p=0;A>p;p++){var I=f[p];M[D++]=I.x,M[D++]=I.y,M[D++]=I.z}return new l({attributes:{position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:M})},indices:v,primitiveType:d.TRIANGLES})},st.scaleToGeodeticHeight=function(e,r,o,s){o=i(o,a.WGS84);var l=ot,u=at;if(r=i(r,0),s=i(s,!0),n(e)&&n(e.attributes)&&n(e.attributes.position))for(var c=e.attributes.position.values,h=c.length,d=0;h>d;d+=3)t.fromArray(c,d,u),s&&(u=o.scaleToGeodeticSurface(u,u)),l=o.geodeticSurfaceNormal(u,l),t.multiplyByScalar(l,r,l),t.add(u,l,u),c[d]=u.x,c[d+1]=u.y,c[d+2]=u.z;return e},st.eliminateHoles=function(e,r,n){n=i(n,a.WGS84);for(var o=[],s=0;s<r.length;s++){for(var l=[],u=0;u<r[s].length;u++)l.push(t.clone(r[s][u]));o.push(l)}for(var c=e;o.length>0;)c=S(c,o,n);return c},st}),r("Core/PolygonGeometry",["./BoundingRectangle","./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix3","./PolygonGeometryLibrary","./PolygonPipeline","./PrimitiveType","./Quaternion","./Queue","./VertexFormat","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b){"use strict";function T(e,t,r,n){for(var o=w.fromAxisAngle(e._plane.normal,r,R),s=g.fromQuaternion(o,O),l=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,c=Number.POSITIVE_INFINITY,h=Number.NEGATIVE_INFINITY,d=t.length,m=0;d>m;++m){var p=i.clone(t[m],I);g.multiplyByVector(s,p,p);var f=e.projectPointOntoPlane(p,D);a(f)&&(l=Math.min(l,f.x),u=Math.max(u,f.x),c=Math.min(c,f.y),h=Math.max(h,f.y))}return n.x=l,n.y=c,n.width=u-l,n.height=h-c,n}function x(e,t,r,i){var o=u.fromPoints(t,e),a=o.projectPointsOntoPlane(t,L),s=y.computeWindingOrder2D(a);s===b.CLOCKWISE&&(a.reverse(),t.reverse());var l=y.triangulate(a);l.length<3&&(l=[0,1,2]);var d;if(i){for(var p=t.length,f=new Array(3*p),v=0,g=0;p>g;g++){var _=t[g];f[v++]=_.x,f[v++]=_.y,f[v++]=_.z}d=new c({attributes:{position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:f})},indices:l,primitiveType:C.TRIANGLES})}else d=y.computeSubdivision(t,l,r);return new m({geometry:d})}function P(e,t,o,a,s,l,c){if(e.st||e.normal||e.tangent||e.binormal){var d=u.fromPoints(o,a),m=T(d,o,s,N),p=W;p.x=m.x,p.y=m.y;var f=t.attributes.position.values,_=f.length,y=e.st?new Float32Array(2*(_/3)):void 0,C=e.normal?new Float32Array(_):void 0,S=e.tangent?new Float32Array(_):void 0,E=e.binormal?new Float32Array(_):void 0,b=0,x=0,P=F,A=z,M=V,D=!0,I=w.fromAxisAngle(d._plane.normal,s,q),R=g.fromQuaternion(I,j),O=_/2,L=_/3;l&&(_/=2);for(var Y=0;_>Y;Y+=3){var X=i.fromArray(f,Y,H);if(e.st){var Z=g.multiplyByVector(R,X,B),Q=d.projectPointOntoPlane(Z,G);r.subtract(Q,p,Q),l&&(y[b+L]=Q.x/m.width,y[b+1+L]=Q.y/m.height),y[b]=Q.x/m.width,y[b+1]=Q.y/m.height,b+=2}if(e.normal||e.tangent||e.binormal){var J=x+1,K=x+2;if(c){if(_>Y+3){var $=i.fromArray(f,Y+3,k);if(D){var et=i.fromArray(f,Y+_,U);i.subtract($,X,$),i.subtract(et,X,et),P=i.normalize(i.cross(et,$,P),P),D=!1}i.equalsEpsilon($,X,v.EPSILON10)&&(D=!0)}(e.tangent||e.binormal)&&(M=a.geodeticSurfaceNormal(X,M),e.tangent&&(A=i.normalize(i.cross(M,P,A),A)))}else P=a.geodeticSurfaceNormal(X,P),(e.tangent||e.binormal)&&(A=i.cross(i.UNIT_Z,P,A),A=i.normalize(g.multiplyByVector(R,A,A),A),e.binormal&&(M=i.normalize(i.cross(P,A,M),M)));e.normal&&(l&&!c?(C[x+O]=-P.x,C[J+O]=-P.y,C[K+O]=-P.z):(C[x+O]=P.x,C[J+O]=P.y,C[K+O]=P.z),C[x]=P.x,C[J]=P.y,C[K]=P.z),e.tangent&&(l&&!c?(S[x+O]=-A.x,S[J+O]=-A.y,S[K+O]=-A.z):(S[x+O]=A.x,S[J+O]=A.y,S[K+O]=A.z),S[x]=A.x,S[J]=A.y,S[K]=A.z),e.binormal&&(l&&(E[x+O]=M.x,E[J+O]=M.y,E[K+O]=M.z),E[x]=M.x,E[J]=M.y,E[K]=M.z),x+=3}}e.st&&(t.attributes.st=new h({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:y})),e.normal&&(t.attributes.normal=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:C})),e.tangent&&(t.attributes.tangent=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:S})),e.binormal&&(t.attributes.binormal=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:E}))}return t}function A(e,t,r){var o,a,s,l,u,m,p,g,y,w=[],S=e.length;if(r)for(p=0;S>p;p++)g=e[p],y=e[(p+1)%S],w.push(g.x,g.y,g.z,y.x,y.y,y.z);else for(p=0;S>p;p++)g=e[p],y=e[(p+1)%S],o=_.subdivideLine(g,y,t),o.push(y.x,y.y,y.z),w=w.concat(o);w=w.concat(w),S=w.length;var E=f.createTypedArray(S/3,S-6*e.length);for(a=0,S/=6,p=0;S>p;p++)s=p,l=s+1,g=i.fromArray(w,3*s,k),y=i.fromArray(w,3*l,U),i.equalsEpsilon(g,y,v.EPSILON6)||(u=s+S,m=u+1,E[a++]=s,E[a++]=u,E[a++]=l,E[a++]=l,E[a++]=u,E[a++]=m);return new c({attributes:new d({position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:w})}),indices:E,primitiveType:C.TRIANGLES})}function M(e,t,r,i,o){var a=x(e,t,r,o).geometry,s=a.attributes.position.values,l=a.indices,p=s.concat(s),v=p.length/3,g=f.createTypedArray(v,2*l.length);g.set(l);var _,C=l.length,w=v/2;for(_=0;C>_;_+=3){var S=g[_]+w,E=g[_+1]+w,T=g[_+2]+w;g[_+C]=T,g[_+1+C]=E,g[_+2+C]=S}var P=new c({attributes:new d({position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:p})}),indices:g,primitiveType:a.primitiveType}),M={topAndBottom:new m({geometry:P})};M.walls=[];var D=i.outerRing,I=u.fromPoints(D,e),R=I.projectPointsOntoPlane(D,Y),O=y.computeWindingOrder2D(R);O===b.CLOCKWISE&&D.reverse();var L=A(D,r,o);M.walls.push(new m({geometry:L}));var N=i.holes;for(_=0;_<N.length;_++){var B=N[_];I=u.fromPoints(B,e),R=I.projectPointsOntoPlane(B,Y),O=y.computeWindingOrder2D(R),O===b.CLOCKWISE&&B.reverse(),L=A(B,r),M.walls.push(new m({geometry:L}))}return M}var D=new r,I=new i,R=new w,O=new g,L=[],N=new e,B=new i,F=new i,z=new i,V=new i,k=new i,U=new i,W=new r,G=new r,H=new i,q=new w,j=new g,Y=[],X=function(e){e=o(e,o.EMPTY_OBJECT);var t=o(e.vertexFormat,E.DEFAULT),r=o(e.ellipsoid,l.WGS84),i=o(e.granularity,v.RADIANS_PER_DEGREE),n=o(e.stRotation,0),s=o(e.height,0),u=o(e.perPositionHeight,!1),c=e.extrudedHeight,h=a(c)&&(!v.equalsEpsilon(s,c,v.EPSILON6)||u);if(h){var d=c;c=Math.min(d,s),s=Math.max(d,s)}var m=e.polygonHierarchy;this._vertexFormat=t,this._ellipsoid=r,this._granularity=i,this._stRotation=n,this._height=s,this._extrudedHeight=c,this._extrude=h,this._polygonHierarchy=m,this._perPositionHeight=u,this._workerName="createPolygonGeometry"};return X.fromPositions=function(e){e=o(e,o.EMPTY_OBJECT);var t={polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight};return new X(t)},X.createGeometry=function(e){var r,i,n,o=e._vertexFormat,l=e._ellipsoid,u=e._granularity,h=e._stRotation,d=e._height,m=e._extrudedHeight,v=e._extrude,g=e._polygonHierarchy,C=e._perPositionHeight,w=[],E=new S;E.enqueue(g),g=[];for(var b;0!==E.length;){var T=E.dequeue(),A=T.positions,D=T.holes;if(A=y.removeDuplicates(A),A.length<3)throw new s("At least three positions are required.");var I=D?D.length:0;if(0===I)g.push({outerRing:A,holes:[]}),w.push(A);else{var R=[];for(b=0;I>b;b++){var O=D[b];if(O.positions=y.removeDuplicates(O.positions),O.positions.length<3)throw new s("At least three positions are required.");R.push(O.positions);var L=0;a(O.holes)&&(L=O.holes.length);for(var N=0;L>N;N++)E.enqueue(O.holes[N])}g.push({outerRing:A,holes:R});var B=y.eliminateHoles(A,R);w.push(B)}}n=w[0];var F,z=[];if(v){for(b=0;b<w.length;b++)if(F=M(l,w[b],u,g[b],C),a(F)){i=F.topAndBottom,i.geometry=_.scaleToGeodeticHeightExtruded(i.geometry,d,m,l,C),i.geometry=P(o,i.geometry,n,l,h,!0,!1),z.push(i),r=F.walls;for(var V=0;V<r.length;V++){var k=r[V];k.geometry=_.scaleToGeodeticHeightExtruded(k.geometry,d,m,l,C),k.geometry=P(o,k.geometry,n,l,h,!0,!0),z.push(k)}}}else for(b=0;b<w.length;b++)F=x(l,w[b],u,C),a(F)&&(F.geometry=y.scaleToGeodeticHeight(F.geometry,d,l,!C),F.geometry=P(o,F.geometry,n,l,h,!1,!1),z.push(F));F=p.combine(z),F.attributes.position.values=new Float64Array(F.attributes.position.values),F.indices=f.createTypedArray(F.attributes.position.values.length/3,F.indices);var U=F.attributes,W=t.fromVertices(U.position.values);return o.position||delete U.position,new c({attributes:U,indices:F.indices,primitiveType:F.primitiveType,boundingSphere:W})},X}),r("Core/PolygonOutlineGeometry",["./BoundingSphere","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./PolygonGeometryLibrary","./PolygonPipeline","./PrimitiveType","./Queue","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,r,i,n){var o=f.removeDuplicates(r),h=a.fromPoints(o,e),m=h.projectPointsOntoPlane(o,w),g=f.computeWindingOrder2D(m);g===_.CLOCKWISE&&(m.reverse(),o.reverse());var y,C=[],S=o.length;if(n)for(y=0;S>y;y++){var E=o[y],b=o[(y+1)%S];C.push(E.x,E.y,E.z,b.x,b.y,b.z)}else for(y=0;S>y;y++)C=C.concat(p.subdivideLine(o[y],o[(y+1)%S],i));S=C.length/3;var T=2*S,x=d.createTypedArray(C.length/3,T),P=0;for(y=0;S-1>y;y++)x[P++]=y,x[P++]=y+1;return x[P++]=S-1,x[P++]=0,new c({geometry:new s({attributes:new u({position:new l({componentDatatype:t.DOUBLE,componentsPerAttribute:3,values:new Float64Array(C)})}),indices:x,primitiveType:v.LINES})})}function C(e,r,i,n){var o=f.removeDuplicates(r),h=a.fromPoints(o,e),m=h.projectPointsOntoPlane(o,w),g=f.computeWindingOrder2D(m);g===_.CLOCKWISE&&(m.reverse(),o.reverse());var y,C=[],S=o.length,E=new Array(S);if(E[0]=0,n){var b,T;for(y=0;S-1>y;y++)b=o[y],T=o[(y+1)%S],C.push(b.x,b.y,b.z,T.x,T.y,T.z),E[y+1]=C.length/3;b=o[S-1],T=o[0],C.push(b.x,b.y,b.z,T.x,T.y,T.z)}else{for(y=0;S-1>y;y++)C=C.concat(p.subdivideLine(o[y],o[y+1],i)),E[y+1]=C.length/3;C=C.concat(p.subdivideLine(o[S-1],o[0],i))}S=C.length/3;var x=2*(2*S+E.length),P=d.createTypedArray(C.length/3,x),A=0;for(y=0;S-1>y;y++)P[A++]=y,P[A++]=y+1,P[A++]=y+S,P[A++]=y+1+S;for(P[A++]=S-1,P[A++]=0,P[A++]=S+S-1,P[A++]=S,y=0;y<E.length;y++){var M=E[y];P[A++]=M,P[A++]=M+S}return C=C.concat(C),new c({geometry:new s({attributes:new u({position:new l({componentDatatype:t.DOUBLE,componentsPerAttribute:3,values:new Float64Array(C)})}),indices:P,primitiveType:v.LINES})})}var w=[],S=function(e){e=r(e,r.EMPTY_OBJECT);var t=r(e.ellipsoid,o.WGS84),n=r(e.granularity,m.RADIANS_PER_DEGREE),a=r(e.height,0),s=r(e.perPositionHeight,!1),l=e.extrudedHeight,u=i(l)&&(!m.equalsEpsilon(a,l,m.EPSILON6)||s);if(u){var c=l;l=Math.min(c,a),a=Math.max(c,a)}var h=e.polygonHierarchy;this._ellipsoid=t,this._granularity=n,this._height=a,this._extrudedHeight=l,this._extrude=u,this._polygonHierarchy=h,this._perPositionHeight=s,this._workerName="createPolygonOutlineGeometry"};return S.fromPositions=function(e){e=r(e,r.EMPTY_OBJECT);var t={polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight};return new S(t)},S.createGeometry=function(t){var r=t._ellipsoid,o=t._granularity,a=t._height,l=t._extrudedHeight,u=t._extrude,c=t._polygonHierarchy,d=t._perPositionHeight,m=[],v=new g;v.enqueue(c);for(var _;0!==v.length;){var w=v.dequeue(),S=w.positions;if(S.length<3)throw new n("At least three positions are required.");var E=w.holes?w.holes.length:0;for(_=0;E>_;_++){var b=w.holes[_];m.push(b.positions);var T=0;i(b.holes)&&(T=b.holes.length);for(var x=0;T>x;x++)v.enqueue(b.holes[x])}m.push(S)}var P,A=[];if(u)for(_=0;_<m.length;_++)P=C(r,m[_],o,d),i(P)&&(P.geometry=p.scaleToGeodeticHeightExtruded(P.geometry,a,l,r,d),A.push(P));else for(_=0;_<m.length;_++)P=y(r,m[_],o,d),i(P)&&(P.geometry=f.scaleToGeodeticHeight(P.geometry,a,r,!d),A.push(P));P=h.combine(A);var M=e.fromVertices(P.attributes.position.values);return new s({attributes:P.attributes,indices:P.indices,primitiveType:P.primitiveType,boundingSphere:M})},S}),r("Core/PolylineGeometry",["./BoundingSphere","./Cartesian3","./Color","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,t,i,n,o){var a,s=m.numberOfPoints(e,t,o),l=new Array(s),u=i.red,c=i.green,h=i.blue,d=i.alpha,p=n.red,f=n.green,v=n.blue,g=n.alpha;if(r.equals(i,n)){for(a=0;s>a;a++)l[a]=r.clone(i);return l}var _=(p-u)/s,y=(f-c)/s,C=(v-h)/s,w=(g-d)/s;for(a=0;s>a;a++)l[a]=new r(u+a*_,c+a*y,h+a*C,d+a*w);return l}var g=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.positions,r=e.colors,i=n(e.width,1),o=n(e.colorsPerVertex,!1);this._positions=t,this._colors=r,this._width=i,this._perVertex=o,this._vertexFormat=n(e.vertexFormat,f.DEFAULT),this._followSurface=n(e.followSurface,!0),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._ellipsoid=n(e.ellipsoid,s.WGS84),this._workerName="createPolylineGeometry"},_=new t,y=new t,C=new t,w=new t;return g.createGeometry=function(n){var a,s,d,f,g,S,E,b=n._width,T=n._vertexFormat,x=n._colors,P=n._perVertex,A=n._followSurface,M=n._granularity,D=n._ellipsoid,I=n._positions;if(A){var R=m.extractHeights(I,D),O=o(x)?[]:void 0;if(o(x)){for(a=0;a<I.length-1;a++)if(f=I[a],g=I[a+1],S=x[a],P&&a<x.length)E=x[a+1],O=O.concat(v(f,g,S,E,M));else{var L=m.numberOfPoints(f,g,M);for(s=0;L>s;s++)O.push(r.clone(S))}O.push(r.clone(x[x.length-1])),x=O}I=m.generateCartesianArc({positions:I,granularity:M,ellipsoid:D,height:R})}else I=n._positions;var N=m.wrapLongitude(I);I=N.positions;var B=N.lengths,F=0,z=B.length;for(a=0;z>a;++a)F+=4*B[a]-4;var V,k,U=new Float64Array(3*F),W=new Float64Array(3*F),G=new Float64Array(3*F),H=new Float32Array(2*F),q=T.st?new Float32Array(2*F):void 0,j=o(x)?new Uint8Array(4*F):void 0,Y=0,X=0,Z=0,Q=0,J=0,K=0,$=I.length;for(s=0;$>s;++s){0===s?(k=_,t.subtract(I[0],I[1],k),t.add(I[0],k,k)):k=I[s-1],t.clone(k,C),t.clone(I[s],y),s===$-1?(k=_,t.subtract(I[$-1],I[$-2],k),t.add(I[$-1],k,k)):k=I[s+1],t.clone(k,w),V=B[J],s===K+V&&(K+=V,++J);var et,tt,rt=0===s-K,it=s===K+B[J]-1,nt=rt?2:0,ot=it?2:4;if(o(j)){var at=s-J;et=rt||P?x[at]:x[at-1],it||(tt=x[at])}for(d=nt;ot>d;++d){t.pack(y,U,Y),t.pack(C,W,Y),t.pack(w,G,Y),Y+=3;var st=0>d-2?-1:1;if(H[X++]=2*(d%2)-1,H[X++]=st*b,T.st&&(q[Z++]=s/($-1),q[Z++]=Math.max(H[X-2],0)),o(j)){var lt=2>d?et:tt;j[Q++]=r.floatToByte(lt.red),j[Q++]=r.floatToByte(lt.green),j[Q++]=r.floatToByte(lt.blue),j[Q++]=r.floatToByte(lt.alpha)}}}var ut=new c;ut.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:U}),ut.prevPosition=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:W}),ut.nextPosition=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:G}),ut.expandAndWidth=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:H}),T.st&&(ut.st=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:q})),o(j)&&(ut.color=new u({componentDatatype:i.UNSIGNED_BYTE,componentsPerAttribute:4,values:j,normalize:!0})),z=B.length;var ct=h.createTypedArray(F,6*I.length-6*z),ht=0,dt=0;for(a=0;z>a;++a)for(V=B[a]-1,s=0;V>s;++s)ct[dt++]=ht,ct[dt++]=ht+2,ct[dt++]=ht+1,ct[dt++]=ht+1,ct[dt++]=ht+2,ct[dt++]=ht+3,ht+=4;return new l({attributes:ut,indices:ct,primitiveType:p.TRIANGLES,boundingSphere:e.fromPoints(I)})},g}),r("Core/PolylineVolumeGeometry",["./BoundingRectangle","./BoundingSphere","./ComponentDatatype","./CornerType","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryPipeline","./IndexDatatype","./Math","./PolygonPipeline","./PolylineVolumeGeometryLibrary","./PrimitiveType","./VertexFormat","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,i,n,o){var a=new c;o.position&&(a.position=new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:e}));var s,m,f,g,_,y,C=i.length,w=e.length/3,S=(w-2*C)/(2*C),E=p.triangulate(i),b=6*(S-1)*C+2*E.length,T=d.createTypedArray(w,b),x=2*C,P=0;for(s=0;S-1>s;s++){for(m=0;C-1>m;m++)f=2*m+2*s*C,y=f+x,g=f+1,_=g+x,T[P++]=g,T[P++]=f,T[P++]=_,T[P++]=_,T[P++]=f,T[P++]=y;f=2*C-2+2*s*C,g=f+1,_=g+x,y=f+x,T[P++]=g,T[P++]=f,T[P++]=_,T[P++]=_,T[P++]=f,T[P++]=y}if(o.st||o.tangent||o.binormal){var A,M,D=new Float32Array(2*w),I=1/(S-1),R=1/n.height,O=n.height/2,L=0;for(s=0;S>s;s++){for(A=s*I,M=R*(i[0].y+O),D[L++]=A,D[L++]=M,m=1;C>m;m++)M=R*(i[m].y+O),D[L++]=A,D[L++]=M,D[L++]=A,D[L++]=M;M=R*(i[0].y+O),D[L++]=A,D[L++]=M}for(m=0;C>m;m++)A=0,M=R*(i[m].y+O),D[L++]=A,D[L++]=M;for(m=0;C>m;m++)A=(S-1)*I,M=R*(i[m].y+O),D[L++]=A,D[L++]=M;a.st=new u({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:new Float32Array(D)})}var N=w-2*C;for(s=0;s<E.length;s+=3){var B=E[s]+N,F=E[s+1]+N,z=E[s+2]+N;T[P++]=B,T[P++]=F,T[P++]=z,T[P++]=z+C,T[P++]=F+C,T[P++]=B+C}var V=new l({attributes:a,indices:T,boundingSphere:t.fromVertices(e),primitiveType:v.TRIANGLES});return o.normal&&(V=h.computeNormal(V)),(o.tangent||o.binormal)&&(V=h.computeBinormalAndTangent(V),o.tangent||(V.attributes.tangent=void 0),o.binormal||(V.attributes.binormal=void 0),o.st||(V.attributes.st=void 0)),V}var C=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.polylinePositions,r=e.shapePositions;this._positions=t,this._shape=r,this._ellipsoid=n(e.ellipsoid,s.WGS84),this._height=n(e.height,0),this._cornerType=n(e.cornerType,i.ROUNDED),this._vertexFormat=n(e.vertexFormat,g.DEFAULT),this._granularity=n(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry"},w=new e;return C.createGeometry=function(t){var r=t._positions,i=f.removeDuplicatesFromPositions(r,t._ellipsoid),n=t._shape;n=f.removeDuplicatesFromShape(n),p.computeWindingOrder2D(n)===_.CLOCKWISE&&n.reverse();var o=e.fromPoints(n,w),a=f.computePositions(i,n,o,t,!0);return y(a,n,o,t._vertexFormat)},C}),r("Core/PolylineVolumeOutlineGeometry",["./BoundingRectangle","./BoundingSphere","./ComponentDatatype","./CornerType","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolygonPipeline","./PolylineVolumeGeometryLibrary","./PrimitiveType","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,i){var n=new c;n.position=new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:e});var o,a,s=i.length,d=n.position.values.length/3,m=e.length/3,p=m/s,v=h.createTypedArray(d,2*s*(p+1)),g=0;o=0;var _=o*s;for(a=0;s-1>a;a++)v[g++]=a+_,v[g++]=a+_+1;for(v[g++]=s-1+_,v[g++]=_,o=p-1,_=o*s,a=0;s-1>a;a++)v[g++]=a+_,v[g++]=a+_+1;for(v[g++]=s-1+_,v[g++]=_,o=0;p-1>o;o++){var y=s*o,C=y+s;for(a=0;s>a;a++)v[g++]=a+y,v[g++]=a+C}var w=new l({attributes:n,indices:h.createTypedArray(d,v),boundingSphere:t.fromVertices(e),primitiveType:f.LINES});return w}var _=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.polylinePositions,r=e.shapePositions;this._positions=t,this._shape=r,this._ellipsoid=n(e.ellipsoid,s.WGS84),this._cornerType=n(e.cornerType,i.ROUNDED),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry"},y=new e;return _.createGeometry=function(t){var r=t._positions,i=p.removeDuplicatesFromPositions(r,t._ellipsoid),n=t._shape;n=p.removeDuplicatesFromShape(n),m.computeWindingOrder2D(n)===v.CLOCKWISE&&n.reverse();var o=e.fromPoints(n,y),a=p.computePositions(i,n,o,t,!1);return g(a,n)},_}),r("Core/QuaternionSpline",["./defaultValue","./defined","./defineProperties","./DeveloperError","./Quaternion","./Spline"],function(e,t,r,i,n,o){"use strict";function a(e,r,i){var o=e.length,a=new Array(o);a[0]=t(r)?r:e[0],a[o-1]=t(i)?i:e[o-1];for(var s=1;o-1>s;++s)a[s]=n.computeInnerQuadrangle(e[s-1],e[s],e[s+1],new n);return a}function s(e){var r=e.points,i=e.innerQuadrangles,o=e.times;if(r.length<3){var a=o[0],s=1/(o[1]-a),l=r[0],u=r[1];return function(e,r){t(r)||(r=new n);var i=(e-a)*s;return n.fastSlerp(l,u,i,r)}}return function(a,s){t(s)||(s=new n);var l=e._lastTimeIndex=e.findTimeInterval(a,e._lastTimeIndex),u=(a-o[l])/(o[l+1]-o[l]),c=r[l],h=r[l+1],d=i[l],m=i[l+1];return n.fastSquad(c,h,d,m,u,s)}}var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.points,i=t.times,n=t.firstInnerQuadrangle,o=t.lastInnerQuadrangle,l=a(r,n,o);this._times=i,this._points=r,this._innerQuadrangles=l,this._evaluateFunction=s(this),this._lastTimeIndex=0};return r(l.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},innerQuadrangles:{get:function(){return this._innerQuadrangles}}}),l.prototype.findTimeInterval=o.prototype.findTimeInterval,l.prototype.evaluate=function(e,t){return this._evaluateFunction(e,t)},l}),r("Core/RectangleGeometryLibrary",["./Cartesian3","./Cartographic","./defined","./DeveloperError","./GeographicProjection","./Math","./Matrix2","./Rectangle"],function(e,t,r,i,n,o,a,s){"use strict";var l=Math.cos,u=Math.sin,c=Math.sqrt,h={};h.computePosition=function(e,t,i,n,o){var s=e.ellipsoid.radiiSquared,h=e.nwCorner,d=e.rectangle,m=h.latitude-e.granYCos*t+i*e.granXSin,p=l(m),f=u(m),v=s.z*f,g=h.longitude+t*e.granYSin+i*e.granXCos,_=p*l(g),y=p*u(g),C=s.x*_,w=s.y*y,S=c(C*_+w*y+v*f);n.x=C/S,n.y=w/S,n.z=v/S,r(e.vertexFormat)&&e.vertexFormat.st&&(o.x=(g-d.west)*e.lonScalar-.5,o.y=(m-d.south)*e.latScalar-.5,a.multiplyByVector(e.textureMatrix,o,o),o.x+=.5,o.y+=.5)};var d=new a,m=new e,p=new t,f=new e,v=new n;return h.computeOptions=function(t,n,l){var u,c,h,g,_,y=t._granularity,C=t._ellipsoid,w=t._surfaceHeight,S=t._rotation,E=t._extrudedHeight,b=n.east,T=n.west,x=n.north,P=n.south,A=x-P;T>b?(_=o.TWO_PI-T+b,u=Math.ceil(_/y)+1,c=Math.ceil(A/y)+1,h=_/(u-1),g=A/(c-1)):(_=b-T,u=Math.ceil(_/y)+1,c=Math.ceil(A/y)+1,h=_/(u-1),g=A/(c-1)),l=s.northwest(n,l);var M=s.center(n,p),D=g,I=h,R=0,O=0;if(r(S)){var L=Math.cos(S);D*=L,I*=L;var N=Math.sin(S);R=g*N,O=h*N,m=v.project(l,m),f=v.project(M,f),m=e.subtract(m,f,m);var B=a.fromRotation(S,d);m=a.multiplyByVector(B,m,m),m=e.add(m,f,m),l=v.unproject(m,l);var F=l.latitude,z=F+(u-1)*O,V=F-D*(c-1),k=F-D*(c-1)+(u-1)*O;x=Math.max(F,z,V,k),P=Math.min(F,z,V,k);var U=l.longitude,W=U+(u-1)*I,G=U+(c-1)*R,H=U+(c-1)*R+(u-1)*I;if(b=Math.max(U,W,G,H),T=Math.min(U,W,G,H),x<-o.PI_OVER_TWO||x>o.PI_OVER_TWO||P<-o.PI_OVER_TWO||P>o.PI_OVER_TWO)throw new i("Rotated extent is invalid.");n.north=x,n.south=P,n.east=b,n.west=T}return{granYCos:D,granYSin:R,granXCos:I,granXSin:O,ellipsoid:C,width:u,height:c,surfaceHeight:w,extrudedHeight:E,nwCorner:l,rectangle:n}},h}),r("Core/RectangleGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix2","./Matrix3","./PolygonPipeline","./PrimitiveType","./Quaternion","./Rectangle","./RectangleGeometryLibrary","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";function b(e,t){var r=new u({attributes:new h,primitiveType:y.TRIANGLES});return r.attributes.position=new c({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:t.positions}),e.normal&&(r.attributes.normal=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.normals})),e.tangent&&(r.attributes.tangent=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.tangents})),e.binormal&&(r.attributes.binormal=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.binormals})),r}function T(e,t,i,n){for(var o=e.length,a=t.normal?new Float32Array(o):void 0,s=t.tangent?new Float32Array(o):void 0,l=t.binormal?new Float32Array(o):void 0,u=0,c=L,h=O,d=R,m=0;o>m;m+=3){var p=r.fromArray(e,m,I),f=u+1,v=u+2;(t.normal||t.tangent||t.binormal)&&(d=i.geodeticSurfaceNormal(p,d),(t.tangent||t.binormal)&&(r.cross(r.UNIT_Z,d,h),g.multiplyByVector(n,h,h),r.normalize(h,h),t.binormal&&r.normalize(r.cross(d,h,c),c)),t.normal&&(a[u]=d.x,a[f]=d.y,a[v]=d.z),t.tangent&&(s[u]=h.x,s[f]=h.y,s[v]=h.z),t.binormal&&(l[u]=c.x,l[f]=c.y,l[v]=c.z)),u+=3}return b(t,{positions:e,normals:a,tangents:s,binormals:l})}function x(e,t,i){for(var n=e.length,o=t.normal?new Float32Array(n):void 0,a=t.tangent?new Float32Array(n):void 0,s=t.binormal?new Float32Array(n):void 0,l=0,u=0,c=0,h=!0,d=L,m=O,p=R,v=0;n>v;v+=6){var g=r.fromArray(e,v,I);if(t.normal||t.tangent||t.binormal){var _=r.fromArray(e,v+6,V);if(h){var y=r.fromArray(e,v+3,k);r.subtract(_,g,_),r.subtract(y,g,y),p=r.normalize(r.cross(y,_,p),p),h=!1}r.equalsEpsilon(_,g,f.EPSILON10)&&(h=!0),(t.tangent||t.binormal)&&(d=i.geodeticSurfaceNormal(g,d),t.tangent&&(m=r.normalize(r.cross(d,p,m),m))),t.normal&&(o[l++]=p.x,o[l++]=p.y,o[l++]=p.z,o[l++]=p.x,o[l++]=p.y,o[l++]=p.z),t.tangent&&(a[u++]=m.x,a[u++]=m.y,a[u++]=m.z,a[u++]=m.x,a[u++]=m.y,a[u++]=m.z),t.binormal&&(s[c++]=d.x,s[c++]=d.y,s[c++]=d.z,s[c++]=d.x,s[c++]=d.y,s[c++]=d.z)}}return b(t,{positions:e,normals:o,tangents:a,binormals:s})}function P(e){for(var t=e.vertexFormat,r=e.ellipsoid,i=e.size,o=e.height,a=e.width,s=t.position?new Float64Array(3*i):void 0,l=t.st?new Float32Array(2*i):void 0,u=0,h=0,d=I,m=B,f=0;o>f;++f)for(var v=0;a>v;++v)S.computePosition(e,f,v,d,m),s[u++]=d.x,s[u++]=d.y,s[u++]=d.z,t.st&&(l[h++]=m.x,l[h++]=m.y);for(var g=T(s,t,r,e.tangentRotationMatrix),_=6*(a-1)*(o-1),y=p.createTypedArray(i,_),C=0,w=0,E=0;o-1>E;++E){for(var b=0;a-1>b;++b){var x=C,P=x+a,A=P+1,M=x+1;y[w++]=x,y[w++]=P,y[w++]=M,y[w++]=M,y[w++]=P,y[w++]=A,++C}++C}return g.indices=y,t.st&&(g.attributes.st=new c({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:l})),g}function A(e,t,r,i,n){return e[t++]=i[r],e[t++]=i[r+1],e[t++]=i[r+2],e[t++]=n[r],e[t++]=n[r+1],e[t++]=n[r+2],e}function M(e,t,r,i){return e[t++]=i[r],e[t++]=i[r+1],e[t++]=i[r],e[t++]=i[r+1],e}function D(e){var t,i=e.vertexFormat,o=e.surfaceHeight,a=e.extrudedHeight,s=Math.min(a,o),l=Math.max(a,o),u=e.height,h=e.width,v=e.ellipsoid,g=P(e);if(f.equalsEpsilon(s,l,.1))return g;g=_.scaleToGeodeticHeight(g,l,v,!1);var y=new Float64Array(g.attributes.position.values),C=y.length,w=2*C,S=new Float64Array(w);S.set(y),g=_.scaleToGeodeticHeight(g,s,v);var E=g.attributes.position.values;S.set(E,C),g.attributes.position.values=S;var b,T=i.normal?new Float32Array(w):void 0,D=i.tangent?new Float32Array(w):void 0,I=i.binormal?new Float32Array(w):void 0,R=i.st?new Float32Array(2*(w/3)):void 0;if(i.normal){var O=g.attributes.normal.values;for(T.set(O),t=0;C>t;t++)O[t]=-O[t];T.set(O,C),g.attributes.normal.values=T}if(i.tangent){var L=g.attributes.tangent.values;for(D.set(L),t=0;C>t;t++)L[t]=-L[t];D.set(L,C),g.attributes.tangent.values=D}if(i.binormal){var N=g.attributes.binormal.values;I.set(N),I.set(N,C),g.attributes.binormal.values=I}i.st&&(b=g.attributes.st.values,R.set(b),R.set(b,2*(C/3)),g.attributes.st.values=R);
var B=g.indices,F=B.length,z=C/3,U=p.createTypedArray(w/3,2*F);for(U.set(B),t=0;F>t;t+=3)U[t+F]=B[t+2]+z,U[t+1+F]=B[t+1]+z,U[t+2+F]=B[t]+z;g.indices=U;var W=2*h+2*u-4,G=2*(W+4),H=new Float64Array(3*G),q=i.st?new Float32Array(2*G):void 0,j=0,Y=0,X=h*u;for(t=0;X>t;t+=h)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=X-h;X>t;t++)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=X-1;t>0;t-=h)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=h-1;t>=0;t--)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);var Z=x(H,i,v);i.st&&(Z.attributes.st=new c({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:q}));var Q,J,K,$,et=p.createTypedArray(G,6*W);C=H.length/3;var tt=0;for(t=0;C-1>t;t+=2){Q=t,$=Q+2;var rt=r.fromArray(H,3*Q,V),it=r.fromArray(H,3*$,k);r.equalsEpsilon(rt,it,f.EPSILON10)||(J=Q+1,K=J+2,et[tt++]=Q,et[tt++]=J,et[tt++]=$,et[tt++]=$,et[tt++]=J,et[tt++]=K)}return Z.indices=et,Z=m.combine([new d({geometry:g}),new d({geometry:Z})])}var I=new r,R=new r,O=new r,L=new r,N=new w,B=new t,F=new e,z=new e,V=new r,k=new r,U=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.rectangle,r=o(e.granularity,f.RADIANS_PER_DEGREE),i=o(e.ellipsoid,l.WGS84),n=o(e.height,0),a=e.rotation,s=e.stRotation,u=o(e.vertexFormat,E.DEFAULT);this._rectangle=t,this._granularity=r,this._ellipsoid=i,this._surfaceHeight=n,this._rotation=a,this._stRotation=s,this._vertexFormat=u,this._extrudedHeight=e.extrudedHeight,this._closeTop=e.closeTop,this._closeBottom=e.closeBottom,this._workerName="createRectangleGeometry"},W=new v,G=new g,H=new i,q=new C,j=new i;return U.createGeometry=function(t){var i=w.clone(t._rectangle,N),n=t._ellipsoid,o=t._surfaceHeight,s=t._extrudedHeight,l=t._stRotation,c=t._vertexFormat,d=S.computeOptions(t,i,H),m=W,p=G;if(a(l)){v.fromRotation(-l,m);var f=w.center(i,j),y=n.cartographicToCartesian(f,V);r.normalize(y,y),C.fromAxisAngle(y,-l,q),g.fromQuaternion(q,p)}else v.clone(v.IDENTITY,m),g.clone(g.IDENTITY,p);d.lonScalar=1/(i.east-i.west),d.latScalar=1/(i.north-i.south),d.vertexFormat=c,d.textureMatrix=m,d.tangentRotationMatrix=p,d.size=d.width*d.height;var E,b;if(i=t._rectangle,a(s)){E=D(d);var T=e.fromRectangle3D(i,n,o,z),x=e.fromRectangle3D(i,n,s,F);b=e.union(T,x)}else E=P(d),E=_.scaleToGeodeticHeight(E,o,n,!1),b=e.fromRectangle3D(i,n,o);return c.position||delete E.attributes.position,new u({attributes:new h(E.attributes),indices:E.indices,primitiveType:E.primitiveType,boundingSphere:b})},U}),r("Core/RectangleOutlineGeometry",["./BoundingSphere","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolygonPipeline","./PrimitiveType","./Rectangle","./RectangleGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e){var t,r=e.size,n=e.height,o=e.width,a=new Float64Array(3*r),s=0,d=0,m=w;for(t=0;o>t;t++)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(t=o-1,d=1;n>d;d++)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(d=n-1,t=o-2;t>=0;t--)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(t=0,d=n-2;d>0;d--)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(var f=2*(a.length/3),g=h.createTypedArray(a.length/3,f),_=0,y=0;y<a.length/3-1;y++)g[_++]=y,g[_++]=y+1;g[_++]=a.length/3-1,g[_++]=0;var C=new l({attributes:new c,primitiveType:p.LINES});return C.attributes.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:a}),C.indices=g,C}function _(e){var t=e.surfaceHeight,r=e.extrudedHeight,i=e.ellipsoid,n=Math.min(r,t),o=Math.max(r,t),a=g(e);if(d.equalsEpsilon(n,o,.1))return a;var s=e.height,l=e.width;a=m.scaleToGeodeticHeight(a,o,i,!1);var u=a.attributes.position.values,c=u.length,p=new Float64Array(2*c);p.set(u),a=m.scaleToGeodeticHeight(a,n,i);var f=a.attributes.position.values;p.set(f,c),a.attributes.position.values=p;var v=2*(p.length/3)+8,_=h.createTypedArray(p.length/3,v);c=p.length/6;for(var y=0,C=0;c-1>C;C++)_[y++]=C,_[y++]=C+1,_[y++]=C+c,_[y++]=C+c+1;return _[y++]=c-1,_[y++]=0,_[y++]=c+c-1,_[y++]=c,_[y++]=0,_[y++]=c,_[y++]=l-1,_[y++]=c+l-1,_[y++]=l+s-2,_[y++]=l+s-2+c,_[y++]=2*l+s-3,_[y++]=2*l+s-3+c,a.indices=_,a}var y=new e,C=new e,w=new t,S=new f,E=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.rectangle,r=n(e.granularity,d.RADIANS_PER_DEGREE),i=n(e.ellipsoid,s.WGS84),o=n(e.height,0),a=e.rotation;this._rectangle=t,this._granularity=r,this._ellipsoid=i,this._surfaceHeight=o,this._rotation=a,this._extrudedHeight=e.extrudedHeight,this._workerName="createRectangleOutlineGeometry"},b=new r;return E.createGeometry=function(t){var r=f.clone(t._rectangle,S),i=t._ellipsoid,n=t._surfaceHeight,a=t._extrudedHeight,s=v.computeOptions(t,r,b);s.size=2*s.width+2*s.height-4;var u,c;if(r=t._rectangle,o(a)){u=_(s);var h=e.fromRectangle3D(r,i,n,C),d=e.fromRectangle3D(r,i,a,y);c=e.union(h,d)}else u=g(s),u=m.scaleToGeodeticHeight(u,n,i,!1),c=e.fromRectangle3D(r,i,n);return new l({attributes:u.attributes,indices:u.indices,primitiveType:p.LINES,boundingSphere:c})},E}),r("Core/ReferenceFrame",["./freezeObject"],function(e){"use strict";var t={FIXED:0,INERTIAL:1};return e(t)}),r("Core/ScreenSpaceEventType",["./freezeObject"],function(e){"use strict";var t={LEFT_DOWN:0,LEFT_UP:1,LEFT_CLICK:2,LEFT_DOUBLE_CLICK:3,RIGHT_DOWN:5,RIGHT_UP:6,RIGHT_CLICK:7,RIGHT_DOUBLE_CLICK:8,MIDDLE_DOWN:10,MIDDLE_UP:11,MIDDLE_CLICK:12,MIDDLE_DOUBLE_CLICK:13,MOUSE_MOVE:15,WHEEL:16,PINCH_START:17,PINCH_END:18,PINCH_MOVE:19};return e(t)}),r("Core/ScreenSpaceEventHandler",["./Cartesian2","./defaultValue","./defined","./destroyObject","./DeveloperError","./KeyboardEventModifier","./ScreenSpaceEventType"],function(e,t,r,i,n,o,a){"use strict";function s(e,t,r){if(e._element===document)return r.x=t.clientX,r.y=t.clientY,r;var i=e._element.getBoundingClientRect();return r.x=t.clientX-i.left,r.y=t.clientY-i.top,r}function l(e,t){var i=e;return r(t)&&(i+="+"+t),i}function u(e){return e.shiftKey?o.SHIFT:e.ctrlKey?o.CTRL:e.altKey?o.ALT:void 0}function c(e,t){var i=s(e,t,C.position);if(e._lastMousePosition.x=i.x,e._lastMousePosition.y=i.y,e._totalPixels=0,!e._seenAnyTouchEvents){var n,o=u(t);0===t.button?(e._leftMouseButtonDown=!0,n=e.getInputAction(a.LEFT_DOWN,o)):1===t.button?(e._middleMouseButtonDown=!0,n=e.getInputAction(a.MIDDLE_DOWN,o)):2===t.button&&(e._rightMouseButtonDown=!0,n=e.getInputAction(a.RIGHT_DOWN,o)),r(n)&&n(C),t.preventDefault()}}function h(e,t){var i,n,o=u(t);if(!e._seenAnyTouchEvents){0===t.button?(e._leftMouseButtonDown=!1,i=e.getInputAction(a.LEFT_UP,o),n=e.getInputAction(a.LEFT_CLICK,o)):1===t.button?(e._middleMouseButtonDown=!1,i=e.getInputAction(a.MIDDLE_UP,o),n=e.getInputAction(a.MIDDLE_CLICK,o)):2===t.button&&(e._rightMouseButtonDown=!1,i=e.getInputAction(a.RIGHT_UP,o),n=e.getInputAction(a.RIGHT_CLICK,o));var l=s(e,t,w.position),c=e._lastMousePosition.x-l.x,h=e._lastMousePosition.y-l.y;e._totalPixels+=Math.sqrt(c*c+h*h),r(i)&&i(w),r(n)&&e._totalPixels<e._clickPixelTolerance&&n(w)}}function d(t,i){var n=s(t,i,S.endPosition);if(!t._seenAnyTouchEvents){var o=t._lastMousePosition.x-n.x,l=t._lastMousePosition.y-n.y;t._totalPixels+=Math.sqrt(o*o+l*l),e.clone(t._lastMousePosition,S.startPosition);var c=u(i),h=t.getInputAction(a.MOUSE_MOVE,c);r(h)&&h(S),e.clone(S.endPosition,t._lastMousePosition),(t._leftMouseButtonDown||t._middleMouseButtonDown||t._rightMouseButtonDown)&&i.preventDefault()}}function m(t,i){var n=i.touches.length;t._seenAnyTouchEvents=!0;var o,l=u(i),c=s(t,i.touches[0],E.position);if(1===n?(e.clone(c,t._lastMousePosition),t._totalPixels=0,t._leftMouseButtonDown=!0,o=t.getInputAction(a.LEFT_DOWN,l),r(o)&&o(E),i.preventDefault()):t._leftMouseButtonDown&&(t._leftMouseButtonDown=!1,o=t.getInputAction(a.LEFT_UP,l),r(o)&&o(E)),2===n){t._isPinching=!0;var h=s(t,i.touches[1],b.position2);t._touchID1=i.touches[0].identifier,t._touchID2=i.touches[1].identifier,e.clone(c,t._lastMousePosition),e.clone(c,b.position1),e.clone(h,t._lastTouch2),o=t.getInputAction(a.PINCH_START,l),r(o)&&o(b)}else t._isPinching&&(t._isPinching=!1,o=t.getInputAction(a.PINCH_END,l),r(o)&&o())}function p(e,t){var i,n,o=t.touches.length,l=t.changedTouches.length,c=u(t);if(e._leftMouseButtonDown&&(e._leftMouseButtonDown=!1,i=e.getInputAction(a.LEFT_UP,c),n=e.getInputAction(a.LEFT_CLICK,c),l>0)){var h=s(e,t.changedTouches[0],T.position),d=e._lastMousePosition.x-h.x,p=e._lastMousePosition.y-h.y;e._totalPixels+=Math.sqrt(d*d+p*p),r(i)&&i(T),r(n)&&e._totalPixels<e._clickPixelTolerance&&n(T)}e._isPinching&&(e._isPinching=!1,i=e.getInputAction(a.PINCH_END,c),i&&i()),(1===o||2===o)&&m(e,t)}function f(t,i){var n,o,l,c=u(i);if(t._leftMouseButtonDown&&1===i.touches.length){n=s(t,i.touches[0],x.endPosition);var h=t._lastMousePosition.x-n.x,d=t._lastMousePosition.y-n.y;t._totalPixels+=Math.sqrt(h*h+d*d),e.clone(t._lastMousePosition,x.startPosition),l=t.getInputAction(a.MOUSE_MOVE,c),r(l)&&l(x),e.clone(x.endPosition,t._lastMousePosition),(t._leftMouseButtonDown||t._middleMouseButtonDown||t._rightMouseButtonDown)&&i.preventDefault()}if(t._isPinching&&2===i.touches.length){if(i.touches[0].identifier===t._touchID2?(n=s(t,i.touches[1],x.startPosition),o=s(t,i.touches[0],x.endPosition)):(n=s(t,i.touches[0],x.startPosition),o=s(t,i.touches[1],x.endPosition)),l=t.getInputAction(a.PINCH_MOVE,c),r(l)){var m=o.x-n.x,p=o.y-n.y,f=.25*Math.sqrt(m*m+p*p),v=t._lastTouch2.x-t._lastMousePosition.x,g=t._lastTouch2.y-t._lastMousePosition.y,_=.25*Math.sqrt(v*v+g*g),y=.125*(o.y+n.y),C=.125*(t._lastTouch2.y+t._lastMousePosition.y),w=Math.atan2(p,m),S=Math.atan2(g,v);e.fromElements(0,_,P.distance.startPosition),e.fromElements(0,f,P.distance.endPosition),e.fromElements(S,C,P.angleAndHeight.startPosition),e.fromElements(w,y,P.angleAndHeight.endPosition),l(P)}e.clone(n,t._lastMousePosition),e.clone(o,t._lastTouch2)}}function v(e,t){var i=t.detail?-120*t.detail:t.wheelDelta,n=u(t),o=a.WHEEL,s=e.getInputAction(o,n);r(s)&&(t.preventDefault(),s(i))}function g(e,t){var i,n=u(t);s(e,t,A.position),0===t.button?i=e.getInputAction(a.LEFT_DOUBLE_CLICK,n):1===t.button?i=e.getInputAction(a.MIDDLE_DOUBLE_CLICK,n):2===t.button&&(i=e.getInputAction(a.RIGHT_DOUBLE_CLICK,n)),r(i)&&i(A)}function _(e){var t=e,i=!0;e._callbacks=[],r(e._element.disableRootEvents)&&(i=!1),e._callbacks.push({name:"mousedown",onDoc:!1,action:function(e){c(t,e)}}),e._callbacks.push({name:"mouseup",onDoc:i,action:function(e){h(t,e)}}),e._callbacks.push({name:"mousemove",onDoc:i,action:function(e){d(t,e)}}),e._callbacks.push({name:"dblclick",onDoc:!1,action:function(e){g(t,e)}}),e._callbacks.push({name:"touchstart",onDoc:!1,action:function(e){m(t,e)}}),e._callbacks.push({name:"touchend",onDoc:i,action:function(e){p(t,e)}}),e._callbacks.push({name:"touchmove",onDoc:i,action:function(e){f(t,e)}}),e._callbacks.push({name:"mousewheel",onDoc:!1,action:function(e){v(t,e)}}),e._callbacks.push({name:"DOMMouseScroll",onDoc:!1,action:function(e){v(t,e)}});for(var n=0;n<e._callbacks.length;n++){var o=e._callbacks[n];o.onDoc?document.addEventListener(o.name,o.action,!1):e._element.addEventListener(o.name,o.action,!1)}}var y=function(r){this._mouseEvents={},this._leftMouseButtonDown=!1,this._middleMouseButtonDown=!1,this._rightMouseButtonDown=!1,this._isPinching=!1,this._seenAnyTouchEvents=!1,this._lastMousePosition=new e,this._lastTouch2=new e,this._totalPixels=0,this._touchID1=0,this._touchID2=0,this._clickPixelTolerance=5,this._element=t(r,document),_(this)};y.prototype.setInputAction=function(e,t,r){var i=l(t,r);this._mouseEvents[i]=e},y.prototype.getInputAction=function(e,t){var r=l(e,t);return this._mouseEvents[r]},y.prototype.removeInputAction=function(e,t){var r=l(e,t);delete this._mouseEvents[r]};var C={position:new e},w={position:new e},S={startPosition:new e,endPosition:new e},E={position:new e},b={position1:new e,position2:new e},T={position:new e},x={startPosition:new e,endPosition:new e},P={distance:{startPosition:new e,endPosition:new e},angleAndHeight:{startPosition:new e,endPosition:new e}},A={position:new e};return y.prototype._unregister=function(){for(var e=0;e<this._callbacks.length;e++){var t=this._callbacks[e];t.onDoc?document.removeEventListener(t.name,t.action,!1):this._element.removeEventListener(t.name,t.action,!1)}},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){return this._unregister(),i(this)},y}),r("Core/ShowGeometryInstanceAttribute",["./ComponentDatatype","./defaultValue","./defined","./defineProperties","./DeveloperError"],function(e,t,r,i){"use strict";var n=function(e){e=t(e,!0),this.value=n.toValue(e)};return i(n.prototype,{componentDatatype:{get:function(){return e.UNSIGNED_BYTE}},componentsPerAttribute:{get:function(){return 1}},normalize:{get:function(){return!0}}}),n.toValue=function(e,t){return r(t)?(t[0]=e,t):new Uint8Array([e])},n}),r("Core/Simon1994PlanetaryPositions",["./Cartesian3","./defined","./DeveloperError","./JulianDate","./Math","./Matrix3","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){var t=6.239996+.0172019696544*e;return.001657*Math.sin(t+.01671*Math.sin(t))}function u(e,t){t=i.addSeconds(e,C,t);var r=i.totalDays(t)-w;return t=i.addSeconds(t,l(r),t)}function c(i,a,s,l,u,c,m,p){if(0>s&&(s=-s,u+=n.PI),0>s||s>n.PI)throw new r("The inclination is out of range. Inclination must be greater than or equal to zero and less than or equal to Pi radians.");var v=i*(1-a),g=l-u,_=u,y=d(c-l,a),C=h(a,0);if("Hyperbolic"===C&&Math.abs(n.NegativePiToPi(y))>=Math.acos(-1/a))throw new r("The true anomaly of the hyperbolic orbit lies outside of the bounds of the hyperbola.");f(g,s,_,M);var w=v*(1+a),S=Math.cos(y),E=Math.sin(y),b=1+a*S;if(b<=n.Epsilon10)throw new r("elements cannot be converted to cartesian");var T=w/b;return t(p)?(p.x=T*S,p.y=T*E,p.z=0):p=new e(T*S,T*E,0),o.multiplyByVector(M,p,p)}function h(e,t){if(0>e)throw new r("eccentricity cannot be negative.");return t>=e?"Circular":1-t>e?"Elliptical":1+t>=e?"Parabolic":"Hyperbolic"}function d(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=m(e,t);return p(i,t)}function m(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=Math.floor(e/n.TWO_PI);e-=i*n.TWO_PI;var o,a=e+t*Math.sin(e)/(1-Math.sin(e+t)+Math.sin(e)),s=Number.MAX_VALUE;for(o=0;D>o&&Math.abs(s-a)>I;++o){s=a;var l=s-t*Math.sin(s)-e,u=1-t*Math.cos(s);a=s-l/u}if(o>=D)throw new r("Kepler equation did not converge");return s=a+i*n.TWO_PI}function p(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=Math.floor(e/n.TWO_PI);e-=i*n.TWO_PI;var o=Math.cos(e)-t,a=Math.sin(e)*Math.sqrt(1-t*t),s=Math.atan2(a,o);return s=n.zeroToTwoPi(s),0>e&&(s-=n.TWO_PI),s+=i*n.TWO_PI}function f(e,i,a,s){if(0>i||i>n.PI)throw new r("inclination out of range");var l=Math.cos(e),u=Math.sin(e),c=Math.cos(i),h=Math.sin(i),d=Math.cos(a),m=Math.sin(a);return t(s)?(s[0]=d*l-m*u*c,s[1]=m*l+d*u*c,s[2]=u*h,s[3]=-d*u-m*l*c,s[4]=-m*u+d*l*c,s[5]=l*h,s[6]=m*h,s[7]=-d*h,s[8]=c):s=new o(d*l-m*u*c,-d*u-m*l*c,m*h,m*l+d*u*c,-m*u+d*l*c,-d*h,u*h,l*h,c),s}function v(e,t){u(e,Mt);var r=Mt.dayNumber-S.dayNumber+(Mt.secondsOfDay-S.secondsOfDay)/a.SECONDS_PER_DAY,i=r/(10*a.DAYS_PER_JULIAN_CENTURY),n=.3595362*i,o=R+G*Math.cos(N*n)+J*Math.sin(N*n)+H*Math.cos(B*n)+K*Math.sin(B*n)+q*Math.cos(F*n)+$*Math.sin(F*n)+j*Math.cos(z*n)+et*Math.sin(z*n)+Y*Math.cos(V*n)+tt*Math.sin(V*n)+X*Math.cos(k*n)+rt*Math.sin(k*n)+Z*Math.cos(U*n)+it*Math.sin(U*n)+Q*Math.cos(W*n)+nt*Math.sin(W*n),s=O+L*i+mt*Math.cos(ot*n)+wt*Math.sin(ot*n)+pt*Math.cos(at*n)+St*Math.sin(at*n)+ft*Math.cos(st*n)+Et*Math.sin(st*n)+vt*Math.cos(lt*n)+bt*Math.sin(lt*n)+gt*Math.cos(ut*n)+Tt*Math.sin(ut*n)+_t*Math.cos(ct*n)+xt*Math.sin(ct*n)+yt*Math.cos(ht*n)+Pt*Math.sin(ht*n)+Ct*Math.cos(dt*n)+At*Math.sin(dt*n),l=.0167086342-.0004203654*i,h=102.93734808*x+11612.3529*P*i,d=469.97289*P*i,m=174.87317577*x-8679.27034*P*i;return c(o,l,d,h,m,s,b,t)}function g(e,t){u(e,Mt);var r=Mt.dayNumber-S.dayNumber+(Mt.secondsOfDay-S.secondsOfDay)/a.SECONDS_PER_DAY,i=r/a.DAYS_PER_JULIAN_CENTURY,n=i*i,o=n*i,s=o*i,l=383397.7725+.004*i,h=.055545526-1.6e-8*i,d=5.15668983*x,m=-8e-5*i+.02966*n-42e-6*o-1.3e-7*s,p=83.35324312*x,f=14643420.2669*i-38.2702*n-.045047*o+21301e-8*s,v=125.04455501*x,g=-6967919.3631*i+6.3602*n+.007625*o-3586e-8*s,_=218.31664563*x,y=1732559343.4847*i-6.391*n+.006588*o-3169e-8*s,C=297.85019547*x+P*(1602961601.209*i-6.3706*n+.006593*o-3169e-8*s),w=93.27209062*x+P*(1739527262.8478*i-12.7512*n-.001037*o+417e-8*s),b=134.96340251*x+P*(1717915923.2178*i+31.8792*n+.051635*o-2447e-7*s),A=357.52910918*x+P*(129596581.0481*i-.5532*n+136e-6*o-1149e-8*s),M=310.17137918*x-P*(6967051.436*i+6.2068*n+.007618*o-3219e-8*s),D=2*C,I=4*C,R=6*C,O=2*b,L=3*b,N=4*b,B=2*w;l+=3400.4*Math.cos(D)-635.6*Math.cos(D-b)-235.6*Math.cos(b)+218.1*Math.cos(D-A)+181*Math.cos(D+b),h+=.014216*Math.cos(D-b)+.008551*Math.cos(D-O)-.001383*Math.cos(b)+.001356*Math.cos(D+b)-.001147*Math.cos(I-L)-914e-6*Math.cos(I-O)+869e-6*Math.cos(D-A-b)-627e-6*Math.cos(D)-394e-6*Math.cos(I-N)+282e-6*Math.cos(D-A-O)-279e-6*Math.cos(C-b)-236e-6*Math.cos(O)+231e-6*Math.cos(I)+229e-6*Math.cos(R-N)-201e-6*Math.cos(O-B),m+=486.26*Math.cos(D-B)-40.13*Math.cos(D)+37.51*Math.cos(B)+25.73*Math.cos(O-B)+19.97*Math.cos(D-A-B),f+=-55609*Math.sin(D-b)-34711*Math.sin(D-O)-9792*Math.sin(b)+9385*Math.sin(I-L)+7505*Math.sin(I-O)+5318*Math.sin(D+b)+3484*Math.sin(I-N)-3417*Math.sin(D-A-b)-2530*Math.sin(R-N)-2376*Math.sin(D)-2075*Math.sin(D-L)-1883*Math.sin(O)-1736*Math.sin(R-5*b)+1626*Math.sin(A)-1370*Math.sin(R-L),g+=-5392*Math.sin(D-B)-540*Math.sin(A)-441*Math.sin(D)+423*Math.sin(B)-288*Math.sin(O-B),y+=-3332.9*Math.sin(D)+1197.4*Math.sin(D-b)-662.5*Math.sin(A)+396.3*Math.sin(b)-218*Math.sin(D-A);var F=2*M,z=3*M;m+=46.997*Math.cos(M)*i-.614*Math.cos(D-B+M)*i+.614*Math.cos(D-B-M)*i-.0297*Math.cos(F)*n-.0335*Math.cos(M)*n+.0012*Math.cos(D-B+F)*n-16e-5*Math.cos(M)*o+4e-5*Math.cos(z)*o+4e-5*Math.cos(F)*o;var V=2.116*Math.sin(M)*i-.111*Math.sin(D-B-M)*i-.0015*Math.sin(M)*n;f+=V,y+=V,g+=-520.77*Math.sin(M)*i+13.66*Math.sin(D-B+M)*i+1.12*Math.sin(D-M)*i-1.06*Math.sin(B-M)*i+.66*Math.sin(F)*n+.371*Math.sin(M)*n-.035*Math.sin(D-B+F)*n-.015*Math.sin(D-B+M)*n+.0014*Math.sin(M)*o-.0011*Math.sin(z)*o-9e-4*Math.sin(F)*o,l*=T;var k=d+m*P,U=p+f*P,W=_+y*P,G=v+g*P;return c(l,h,k,U,G,W,E,t)}function _(t,r){return r=g(t,r),e.multiplyByScalar(r,It,r)}var y={},C=32.184,w=2451545,S=new i(2451545,0,s.TAI),E=398600435e6,b=328900.56*1.012300034*E,T=1e3,x=n.RADIANS_PER_DEGREE,P=n.RADIANS_PER_ARCSECOND,A=14959787e4,M=new o,D=50,I=n.EPSILON8,R=1.0000010178*A,O=100.46645683*x,L=1295977422.83429*P,N=16002,B=21863,F=32004,z=10931,V=14529,k=16368,U=15318,W=32794,G=64e-7*A,H=-152*1e-7*A,q=62e-7*A,j=-8e-7*A,Y=32e-7*A,X=-41*1e-7*A,Z=19e-7*A,Q=-11*1e-7*A,J=-150*1e-7*A,K=-46*1e-7*A,$=68*1e-7*A,et=54e-7*A,tt=14e-7*A,rt=24e-7*A,it=-28*1e-7*A,nt=22e-7*A,ot=10,at=16002,st=21863,lt=10931,ut=1473,ct=32004,ht=4387,dt=73,mt=-325*1e-7,pt=-322*1e-7,ft=-79*1e-7,vt=232*1e-7,gt=-52*1e-7,_t=97e-7,yt=55e-7,Ct=-41*1e-7,wt=-105*1e-7,St=-137*1e-7,Et=258e-7,bt=35e-7,Tt=-116*1e-7,xt=-88*1e-7,Pt=-112*1e-7,At=-80*1e-7,Mt=new i(0,0,s.TAI),Dt=.012300034,It=-1*(Dt/(Dt+1)),Rt=new o(1.0000000000000002,5.619723173785822e-16,4.690511510146299e-19,-5.154129427414611e-16,.9174820620691819,-.39777715593191376,-2.23970096136568e-16,.39777715593191376,.9174820620691819),Ot=new e;return y.computeSunPositionInEarthInertialFrame=function(r,n){return t(r)||(r=i.now()),t(n)||(n=new e),Ot=v(r,Ot),n=e.negate(Ot,n),_(r,Ot),e.subtract(n,Ot,n),o.multiplyByVector(Rt,n,n),n},y.computeMoonPositionInEarthInertialFrame=function(e,r){return t(e)||(e=i.now()),r=g(e,r),o.multiplyByVector(Rt,r,r),r},y}),r("Core/SimplePolylineGeometry",["./BoundingSphere","./Cartesian3","./Color","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,i,n,o,a,s){var l,u=m.numberOfPoints(e,t,o),c=i.red,h=i.green,d=i.blue,p=i.alpha,f=n.red,v=n.green,g=n.blue,_=n.alpha;if(r.equals(i,n)){for(l=0;u>l;l++)a[s++]=r.floatToByte(c),a[s++]=r.floatToByte(h),a[s++]=r.floatToByte(d),a[s++]=r.floatToByte(p);return s}var y=(f-c)/u,C=(v-h)/u,w=(g-d)/u,S=(_-p)/u,E=s;for(l=0;u>l;l++)a[E++]=r.floatToByte(c+l*y),a[E++]=r.floatToByte(h+l*C),a[E++]=r.floatToByte(d+l*w),a[E++]=r.floatToByte(p+l*S);return E}var v=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.positions,r=e.colors,i=n(e.colorsPerVertex,!1);this._positions=t,this._colors=r,this._perVertex=i,this._followSurface=n(e.followSurface,!0),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._ellipsoid=n(e.ellipsoid,s.WGS84),this._workerName="createSimplePolylineGeometry"},g=new Array(2),_=new Array(2);return v.createGeometry=function(n){var a,s,d,v,y,C,w,S,E,b,T=n._positions,x=n._colors,P=n._perVertex,A=n._followSurface,M=n._granularity,D=n._ellipsoid,I=o(x)&&!P,R=T.length,O=0,L=0,N=0,B=0;if(A){var F=m.extractHeights(T,D);if(I){for(a=0;R-1>a;a++)y=T[a],C=T[a+1],L+=m.numberOfPoints(y,C,M),L++;for(s=new Float64Array(3*L),v=new Uint8Array(4*L),E=0,a=0;R-1>a;a++){g[0]=T[a],g[1]=T[a+1],_[0]=F[a],_[1]=F[a+1];var z=m.generateArc({positions:g,granularity:M,ellipsoid:D,height:_});if(o(x)){var V=z.length/3;for(b=x[a],N=0;V>N;N++)v[E++]=r.floatToByte(b.red),v[E++]=r.floatToByte(b.green),v[E++]=r.floatToByte(b.blue),v[E++]=r.floatToByte(b.alpha)}s.set(z,O),O+=z.length}}else if(s=new Float64Array(m.generateArc({positions:T,granularity:M,ellipsoid:D,height:F})),o(x)){for(v=new Uint8Array(4*(s.length/3)),a=0;R-1>a;a++)y=T[a],C=T[a+1],w=x[a],S=x[a+1],O=f(y,C,w,S,M,v,O);v[O++]=r.floatToByte(S.red),v[O++]=r.floatToByte(S.green),v[O++]=r.floatToByte(S.blue),v[O++]=r.floatToByte(S.alpha)}}else for(d=I?2*T.length-2:T.length,s=new Float64Array(3*d),v=o(x)?new Uint8Array(4*d):void 0,a=0;R>a;++a){var k=T[a];if(I&&a>0&&(t.pack(k,s,B),B+=3,b=x[a-1],v[N++]=r.floatToByte(b.red),v[N++]=r.floatToByte(b.green),v[N++]=r.floatToByte(b.blue),v[N++]=r.floatToByte(b.alpha)),I&&a===R-1)break;t.pack(k,s,B),B+=3,o(x)&&(b=x[a],v[N++]=r.floatToByte(b.red),v[N++]=r.floatToByte(b.green),v[N++]=r.floatToByte(b.blue),v[N++]=r.floatToByte(b.alpha))}var U=new c;U.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:s}),o(x)&&(U.color=new u({componentDatatype:i.UNSIGNED_BYTE,componentsPerAttribute:4,values:v,normalize:!0})),d=s.length/3;var W=2*(d-1),G=h.createTypedArray(d,W);for(B=0,a=0;d-1>a;a++)G[B++]=a,G[B++]=a+1;return new l({attributes:U,indices:G,primitiveType:p.LINES,boundingSphere:e.fromPoints(T)})},v}),r("Core/SphereGeometry",["./Cartesian3","./defaultValue","./EllipsoidGeometry"],function(e,t,r){"use strict";var i=function(i){var n=t(i.radius,1),o=new e(n,n,n),a={radii:o,stackPartitions:i.stackPartitions,slicePartitions:i.slicePartitions,vertexFormat:i.vertexFormat};this._ellipsoidGeometry=new r(a),this._workerName="createSphereGeometry"};return i.createGeometry=function(e){return r.createGeometry(e._ellipsoidGeometry)},i}),r("Core/SphereOutlineGeometry",["./Cartesian3","./defaultValue","./EllipsoidOutlineGeometry"],function(e,t,r){"use strict";var i=function(i){var n=t(i.radius,1),o=new e(n,n,n),a={radii:o,stackPartitions:i.stackPartitions,slicePartitions:i.slicePartitions,subdivisions:i.subdivisions};this._ellipsoidGeometry=new r(a),this._workerName="createSphereOutlineGeometry"};return i.createGeometry=function(e){return r.createGeometry(e._ellipsoidGeometry)},i}),r("Core/Spherical",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i){this.clock=e(t,0),this.cone=e(r,0),this.magnitude=e(i,1)};return r.fromCartesian3=function(e,i){var n=e.x,o=e.y,a=e.z,s=n*n+o*o;return t(i)||(i=new r),i.clock=Math.atan2(o,n),i.cone=Math.atan2(Math.sqrt(s),a),i.magnitude=Math.sqrt(s+a*a),i},r.clone=function(e,i){return t(e)?t(i)?(i.clock=e.clock,i.cone=e.cone,i.magnitude=e.magnitude,i):new r(e.clock,e.cone,e.magnitude):void 0},r.normalize=function(e,i){return t(i)?(i.clock=e.clock,i.cone=e.cone,i.magnitude=1,i):new r(e.clock,e.cone,1)},r.equals=function(e,r){return e===r||t(e)&&t(r)&&e.clock===r.clock&&e.cone===r.cone&&e.magnitude===r.magnitude},r.equalsEpsilon=function(r,i,n){return n=e(n,0),r===i||t(r)&&t(i)&&Math.abs(r.clock-i.clock)<=n&&Math.abs(r.cone-i.cone)<=n&&Math.abs(r.magnitude-i.magnitude)<=n},r.prototype.equals=function(e){return r.equals(this,e)},r.prototype.clone=function(e){return r.clone(this,e)},r.prototype.equalsEpsilon=function(e,t){return r.equalsEpsilon(this,e,t)},r.prototype.toString=function(){return"("+this.clock+", "+this.cone+", "+this.magnitude+")"},r}),r("Core/TerrainData",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{waterMask:{get:t.throwInstantiationError}}),r.prototype.interpolateHeight=t.throwInstantiationError,r.prototype.isChildAvailable=t.throwInstantiationError,r.prototype.createMesh=t.throwInstantiationError,r.prototype.upsample=t.throwInstantiationError,r.prototype.wasCreatedByUpsampling=t.throwInstantiationError,r}),r("Core/TilingScheme",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){throw new t("This type should not be instantiated directly.  Instead, use WebMercatorTilingScheme or GeographicTilingScheme.")};return e(r.prototype,{ellipsoid:{get:t.throwInstantiationError},rectangle:{get:t.throwInstantiationError},projection:{get:t.throwInstantiationError}}),r.prototype.getNumberOfXTilesAtLevel=t.throwInstantiationError,r.prototype.getNumberOfYTilesAtLevel=t.throwInstantiationError,r.prototype.rectangleToNativeRectangle=t.throwInstantiationError,r.prototype.tileXYToNativeRectangle=t.throwInstantiationError,r.prototype.tileXYToRectangle=t.throwInstantiationError,r.prototype.positionToTileXY=t.throwInstantiationError,r}),r("Core/TimeIntervalCollection",["./binarySearch","./defaultValue","./defined","./defineProperties","./DeveloperError","./Event","./JulianDate","./TimeInterval"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){return a.compare(e.start,t.start)}var u=function(){this._intervals=[],this._changedEvent=new o};i(u.prototype,{changedEvent:{get:function(){return this._changedEvent}},start:{get:function(){var e=this._intervals;return 0===e.length?void 0:e[0].start}},isStartIncluded:{get:function(){var e=this._intervals;return 0===e.length?!1:e[0].isStartIncluded}},stop:{get:function(){var e=this._intervals,t=e.length;return 0===t?void 0:e[t-1].stop}},isStopIncluded:{get:function(){var e=this._intervals,t=e.length;return 0===t?!1:e[t-1].isStopIncluded}},length:{get:function(){return this._intervals.length}},isEmpty:{get:function(){return 0===this._intervals.length}}}),u.prototype.equals=function(e,t){if(this===e)return!0;if(!(e instanceof u))return!1;var r=this._intervals,i=e._intervals,n=r.length;if(n!==i.length)return!1;for(var o=0;n>o;o++)if(!s.equals(r[o],i[o],t))return!1;return!0},u.prototype.get=function(e){return this._intervals[e]},u.prototype.removeAll=function(){this._intervals.length>0&&(this._intervals.length=0,this._changedEvent.raiseEvent(this))},u.prototype.findIntervalContainingDate=function(e){var t=this.indexOf(e);return t>=0?this._intervals[t]:void 0},u.prototype.findDataForIntervalContainingDate=function(e){var t=this.indexOf(e);return t>=0?this._intervals[t].data:void 0},u.prototype.contains=function(e){return this.indexOf(e)>=0};var c=new s;return u.prototype.indexOf=function(t){var r=this._intervals;c.start=t,c.stop=t;var i=e(r,c,l);return i>=0?r[i].isStartIncluded?i:i>0&&r[i-1].stop.equals(t)&&r[i-1].isStopIncluded?i-1:~i:(i=~i,i>0&&i-1<r.length&&s.contains(r[i-1],t)?i-1:~i)},u.prototype.findInterval=function(e){e=t(e,t.EMPTY_OBJECT);for(var i=e.start,n=e.stop,o=e.isStartIncluded,a=e.isStopIncluded,s=this._intervals,l=0,u=s.length;u>l;l++){var c=s[l];if(!(r(i)&&!c.start.equals(i)||r(n)&&!c.stop.equals(n)||r(o)&&c.isStartIncluded!==o||r(a)&&c.isStopIncluded!==a))return s[l]}return void 0},u.prototype.addInterval=function(t,i){if(!t.isEmpty){var n,o,u=this._intervals;if(0===u.length||a.greaterThan(t.start,u[u.length-1].stop))return u.push(t),this._changedEvent.raiseEvent(this),void 0;for(o=e(u,t,l),0>o?o=~o:o>0&&t.isStartIncluded&&u[o-1].isStartIncluded&&u[o-1].start.equals(t.start)?--o:o<u.length&&!t.isStartIncluded&&u[o].isStartIncluded&&u[o].start.equals(t.start)&&++o,o>0&&(n=a.compare(u[o-1].stop,t.start),(n>0||0===n&&(u[o-1].isStopIncluded||t.isStartIncluded))&&((r(i)?i(u[o-1].data,t.data):u[o-1].data===t.data)?(t=a.greaterThan(t.stop,u[o-1].stop)?new s({start:u[o-1].start,stop:t.stop,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:t.isStopIncluded,data:t.data}):new s({start:u[o-1].start,stop:u[o-1].stop,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:u[o-1].isStopIncluded||t.stop.equals(u[o-1].stop)&&t.isStopIncluded,data:t.data}),u.splice(o-1,1),--o):(n=a.compare(u[o-1].stop,t.stop),n>0||0===n&&u[o-1].isStopIncluded&&!t.isStopIncluded?u.splice(o-1,1,new s({start:u[o-1].start,stop:t.start,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:!t.isStartIncluded,data:u[o-1].data}),new s({start:t.stop,stop:u[o-1].stop,isStartIncluded:!t.isStopIncluded,isStopIncluded:u[o-1].isStopIncluded,data:u[o-1].data})):u[o-1]=new s({start:u[o-1].start,stop:t.start,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:!t.isStartIncluded,data:u[o-1].data}))));o<u.length&&(n=a.compare(t.stop,u[o].start),n>0||0===n&&(t.isStopIncluded||u[o].isStartIncluded));)if(r(i)?i(u[o].data,t.data):u[o].data===t.data)t=new s({start:t.start,stop:a.greaterThan(u[o].stop,t.stop)?u[o].stop:t.stop,isStartIncluded:t.isStartIncluded,isStopIncluded:a.greaterThan(u[o].stop,t.stop)?u[o].isStopIncluded:t.isStopIncluded,data:t.data}),u.splice(o,1);else{if(u[o]=new s({start:t.stop,stop:u[o].stop,isStartIncluded:!t.isStopIncluded,isStopIncluded:u[o].isStopIncluded,data:u[o].data}),!u[o].isEmpty)break;u.splice(o,1)}u.splice(o,0,t),this._changedEvent.raiseEvent(this)}},u.prototype.removeInterval=function(t){if(t.isEmpty)return!1;var r=!1,i=this._intervals,n=e(i,t,l);0>n&&(n=~n);var o=t.start,u=t.stop,c=t.isStartIncluded,h=t.isStopIncluded;if(n>0){var d=i[n-1],m=d.stop;(a.greaterThan(m,o)||s.equals(m,o)&&d.isStopIncluded&&c)&&(r=!0,(a.greaterThan(m,u)||d.isStopIncluded&&!h&&s.equals(m,u))&&i.splice(n,0,new s({start:u,stop:m,isStartIncluded:!h,isStopIncluded:d.isStopIncluded,data:d.data})),i[n-1]=new s({start:d.start,stop:o,isStartIncluded:d.isStartIncluded,isStopIncluded:!c,data:d.data}))}var p=i[n];for(n<i.length&&!c&&p.isStartIncluded&&o.equals(p.start)&&(r=!0,i.splice(n,0,new s({start:p.start,stop:p.start,isStartIncluded:!0,isStopIncluded:!0,data:p.data})),++n,p=i[n]);n<i.length&&a.greaterThan(u,p.stop);)r=!0,i.splice(n,1);return n<i.length&&u.equals(p.stop)&&(r=!0,!h&&p.isStopIncluded?(n+1<i.length&&i[n+1].start.equals(u)&&p.data===i[n+1].data?(i.splice(n,1),p=new s({start:p.start,stop:p.stop,isStartIncluded:!0,isStopIncluded:p.isStopIncluded,data:p.data})):p=new s({start:u,stop:u,isStartIncluded:!0,isStopIncluded:!0,data:p.data}),i[n]=p):i.splice(n,1)),n<i.length&&(a.greaterThan(u,p.start)||u.equals(p.start)&&h&&p.isStartIncluded)&&(r=!0,i[n]=new s({start:u,stop:p.stop,isStartIncluded:!h,isStopIncluded:p.isStopIncluded,data:p.data})),r&&this._changedEvent.raiseEvent(this),r},u.prototype.intersect=function(e,t,i){for(var n=0,o=0,l=new u,c=this._intervals,h=e._intervals;n<c.length&&o<h.length;){var d=c[n],m=h[o];if(a.lessThan(d.stop,m.start))++n;else if(a.lessThan(m.stop,d.start))++o;else{if(r(i)||r(t)&&t(d.data,m.data)||!r(t)&&m.data===d.data){var p=s.intersect(d,m,new s,i);p.isEmpty||l.addInterval(p,t)}a.lessThan(d.stop,m.stop)||d.stop.equals(m.stop)&&!d.isStopIncluded&&m.isStopIncluded?++n:++o}}return l},u}),r("Core/loadXML",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"document",headers:r,overrideMimeType:"text/xml"})};
return t}),r("Core/VRTheWorldTerrainProvider",["../ThirdParty/when","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Event","./GeographicTilingScheme","./getImagePixels","./HeightmapTerrainData","./loadImage","./loadXML","./Math","./Rectangle","./TerrainProvider","./throttleRequestByServer","./TileProviderError"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g){"use strict";function _(e,t){this.rectangle=e,this.maxLevel=t}function y(e,t,r,i){for(var n=e._tilingScheme,o=e._rectangles,a=n.tileXYToRectangle(t,r,i),s=0,l=0;l<o.length&&15!==s;++l){var u=o[l];if(!(u.maxLevel<=i)){var c=u.rectangle,h=p.intersectWith(c,a,S);p.isEmpty(h)||(C(n,c,2*t,2*r,i+1)&&(s|=4),C(n,c,2*t+1,2*r,i+1)&&(s|=8),C(n,c,2*t,2*r+1,i+1)&&(s|=1),C(n,c,2*t+1,2*r+1,i+1)&&(s|=2))}}return s}function C(e,t,r,i,n){var o=e.tileXYToRectangle(r,i,n);return!p.isEmpty(p.intersectWith(o,t,S))}var w=function(n){function u(e){var t=e.getElementsByTagName("SRS")[0].textContent;if("EPSG:4326"!==t)return c("SRS "+t+" is not supported."),void 0;C._tilingScheme=new l({ellipsoid:w});var r=e.getElementsByTagName("TileFormat")[0];C._heightmapWidth=parseInt(r.getAttribute("width"),10),C._heightmapHeight=parseInt(r.getAttribute("height"),10),C._levelZeroMaximumGeometricError=f.getEstimatedLevelZeroGeometricErrorForAHeightmap(w,Math.min(C._heightmapWidth,C._heightmapHeight),C._tilingScheme.getNumberOfXTilesAtLevel(0));for(var i=e.getElementsByTagName("DataExtent"),n=0;n<i.length;++n){var o=i[n],a=m.toRadians(parseFloat(o.getAttribute("minx"))),s=m.toRadians(parseFloat(o.getAttribute("miny"))),u=m.toRadians(parseFloat(o.getAttribute("maxx"))),h=m.toRadians(parseFloat(o.getAttribute("maxy"))),d=parseInt(o.getAttribute("maxlevel"),10);C._rectangles.push(new _(new p(a,s,u,h),d))}C._ready=!0}function c(e){var t=r(e,"An error occurred while accessing "+C._url+".");y=g.handleError(y,C,C._errorEvent,t,void 0,void 0,void 0,h)}function h(){e(d(C._url),u,c)}if(n=r(n,r.EMPTY_OBJECT),!i(n.url))throw new o("options.url is required.");this._url=n.url,this._url.length>0&&"/"!==this._url[this._url.length-1]&&(this._url+="/"),this._errorEvent=new s,this._ready=!1,this._proxy=n.proxy,this._terrainDataStructure={heightScale:.001,heightOffset:-1e3,elementsPerHeight:3,stride:4,elementMultiplier:256,isBigEndian:!0};var v=n.credit;"string"==typeof v&&(v=new t(v)),this._credit=v,this._tilingScheme=void 0,this._rectangles=[];var y,C=this,w=r(n.ellipsoid,a.WGS84);h()};n(w.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");return this._tilingScheme}},ready:{get:function(){return this._ready}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),w.prototype.requestTileGeometry=function(t,n,a,s){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");var l=this._tilingScheme.getNumberOfYTilesAtLevel(a),d=this._url+a+"/"+t+"/"+(l-n-1)+".tif?cesium=true",m=this._proxy;i(m)&&(d=m.getURL(d));var p;if(s=r(s,!0)){if(p=v(d,h),!i(p))return void 0}else p=h(d);var f=this;return e(p,function(e){return new c({buffer:u(e),width:f._heightmapWidth,height:f._heightmapHeight,childTileMask:y(f,t,n,a),structure:f._terrainDataStructure})})},w.prototype.getLevelMaximumGeometricError=function(e){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");return this._levelZeroMaximumGeometricError/(1<<e)};var S=new p;return w.prototype.getTileDataAvailable=function(){return void 0},w}),r("Core/WallGeometryLibrary",["./Cartographic","./defined","./DeveloperError","./EllipsoidTangentPlane","./Math","./PolygonPipeline","./PolylinePipeline","./WindingOrder"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){return n.equalsEpsilon(e.latitude,t.latitude,n.EPSILON14)&&n.equalsEpsilon(e.longitude,t.longitude,n.EPSILON14)}function u(r,i,n,o){var a=t(o),s=t(n),u=[],c=[],m=[],p=i.length;if(2>p)return{positions:i};var f=i[0];u.push(f);var v=r.cartesianToCartographic(f,h);s&&(v.height=n[0]),c.push(v.height),a?m.push(o[0]):m.push(0);for(var g=1;p>g;++g){var _=i[g],y=r.cartesianToCartographic(_,d);s&&(y.height=n[g]),l(v,y)?v.height<y.height&&(c[c.length-1]=y.height):(u.push(_),c.push(y.height),a?m.push(o[g]):m.push(0)),e.clone(y,v)}return{positions:u,topHeights:c,bottomHeights:m}}var c={},h=new e,d=new e;return c.computePositions=function(e,t,r,n,l,c){var h=u(e,t,r,n);if(t=h.positions,r=h.topHeights,n=h.bottomHeights,t.length>=3){var d=i.fromPoints(t,e),m=d.projectPointsOntoPlane(t);o.computeWindingOrder2D(m)===s.CLOCKWISE&&(t.reverse(),r.reverse(),n.reverse())}var p,f,v,g,_,y=t.length;if(c){var C=0;for(p=0;y-1>p;p++)g=t[p],_=t[p+1],C+=a.numberOfPoints(g,_,l),C++;f=new Float64Array(3*C),v=new Float64Array(3*C);var w=0;for(p=0;y-1>p;p++){g=t[p],_=t[p+1];var S=r[p],E=r[p+1],b=a.generateArc({positions:[g,_],height:[S,E],granularity:l,ellipsoid:e});f.set(b,w),S=n[p],E=n[p+1],v.set(a.generateArc({positions:[g,_],height:[S,E],granularity:l,ellipsoid:e}),w),w+=b.length}}else f=new Float64Array(a.generateArc({positions:t,height:r,granularity:l,ellipsoid:e})),v=new Float64Array(a.generateArc({positions:t,height:n,granularity:l,ellipsoid:e}));return{bottomPositions:v,topPositions:f}},c}),r("Core/WallGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat","./WallGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=new t,v=new t,g=new t,_=new t,y=new t,C=new t,w=new t,S=new t,E=function(e){e=i(e,i.EMPTY_OBJECT);var t=e.positions,r=e.maximumHeights,n=e.minimumHeights,o=i(e.vertexFormat,m.DEFAULT),s=i(e.granularity,h.RADIANS_PER_DEGREE),l=i(e.ellipsoid,a.WGS84);this._positions=t,this._minimumHeights=n,this._maximumHeights=r,this._vertexFormat=o,this._granularity=s,this._ellipsoid=l,this._workerName="createWallGeometry"};return E.fromConstantHeights=function(e){e=i(e,i.EMPTY_OBJECT);var t,r,o=e.positions,a=e.minimumHeight,s=e.maximumHeight,l=n(a),u=n(s);if(l||u){var c=o.length;t=l?new Array(c):void 0,r=u?new Array(c):void 0;for(var h=0;c>h;++h)l&&(t[h]=a),u&&(r[h]=s)}var d={positions:o,maximumHeights:r,minimumHeights:t,ellipsoid:e.ellipsoid,vertexFormat:e.vertexFormat};return new E(d)},E.createGeometry=function(i){var n=i._positions,o=i._minimumHeights,a=i._maximumHeights,m=i._vertexFormat,E=i._granularity,b=i._ellipsoid,T=p.computePositions(b,n,a,o,E,!0),x=T.bottomPositions,P=T.topPositions,A=P.length,M=2*A,D=m.position?new Float64Array(M):void 0,I=m.normal?new Float32Array(M):void 0,R=m.tangent?new Float32Array(M):void 0,O=m.binormal?new Float32Array(M):void 0,L=m.st?new Float32Array(2*(M/3)):void 0,N=0,B=0,F=0,z=0,V=0,k=S,U=w,W=C,G=!0;A/=3;var H;for(H=0;A>H;++H){var q=3*H,j=t.fromArray(P,q,f),Y=t.fromArray(x,q,v);if(m.position&&(D[N++]=Y.x,D[N++]=Y.y,D[N++]=Y.z,D[N++]=j.x,D[N++]=j.y,D[N++]=j.z),m.normal||m.tangent||m.binormal){var X,Z=new t,Q=b.scaleToGeodeticSurface(t.fromArray(P,q,v),v);if(A>H+1&&(X=b.scaleToGeodeticSurface(t.fromArray(P,q+3,g),g),Z=t.fromArray(P,q+3,y)),G){var J=t.subtract(Z,j,_),K=t.subtract(Q,j,f);k=t.normalize(t.cross(K,J,k),k),G=!1}t.equalsEpsilon(X,Q,h.EPSILON6)?G=!0:(m.tangent&&(U=t.normalize(t.subtract(X,Q,U),U)),m.binormal&&(W=t.normalize(t.cross(k,U,W),W))),m.normal&&(I[B++]=k.x,I[B++]=k.y,I[B++]=k.z,I[B++]=k.x,I[B++]=k.y,I[B++]=k.z),m.tangent&&(R[z++]=U.x,R[z++]=U.y,R[z++]=U.z,R[z++]=U.x,R[z++]=U.y,R[z++]=U.z),m.binormal&&(O[F++]=W.x,O[F++]=W.y,O[F++]=W.z,O[F++]=W.x,O[F++]=W.y,O[F++]=W.z)}if(m.st){var $=H/(A-1);L[V++]=$,L[V++]=0,L[V++]=$,L[V++]=1}}var et=new u;m.position&&(et.position=new l({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:D})),m.normal&&(et.normal=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:I})),m.tangent&&(et.tangent=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:R})),m.binormal&&(et.binormal=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:O})),m.st&&(et.st=new l({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:L}));var tt=M/3;M-=6;var rt=c.createTypedArray(tt,M),it=0;for(H=0;tt-2>H;H+=2){var nt=H,ot=H+2,at=t.fromArray(D,3*nt,f),st=t.fromArray(D,3*ot,v);if(!t.equalsEpsilon(at,st,h.EPSILON6)){var lt=H+1,ut=H+3;rt[it++]=lt,rt[it++]=nt,rt[it++]=ut,rt[it++]=ut,rt[it++]=nt,rt[it++]=ot}}return new s({attributes:et,indices:rt,primitiveType:d.TRIANGLES,boundingSphere:new e.fromVertices(D)})},E}),r("Core/WallOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./WallGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new t,f=new t,v=function(e){e=i(e,i.EMPTY_OBJECT);var t=e.positions,r=e.maximumHeights,n=e.minimumHeights,o=i(e.granularity,h.RADIANS_PER_DEGREE),s=i(e.ellipsoid,a.WGS84);this._positions=t,this._minimumHeights=n,this._maximumHeights=r,this._granularity=o,this._ellipsoid=s,this._workerName="createWallOutlineGeometry"};return v.fromConstantHeights=function(e){e=i(e,i.EMPTY_OBJECT);var t,r,o=e.positions,a=e.minimumHeight,s=e.maximumHeight,l=n(a),u=n(s);if(l||u){var c=o.length;t=l?new Array(c):void 0,r=u?new Array(c):void 0;for(var h=0;c>h;++h)l&&(t[h]=a),u&&(r[h]=s)}var d={positions:o,maximumHeights:r,minimumHeights:t,ellipsoid:e.ellipsoid};return new v(d)},v.createGeometry=function(i){var n=i._positions,o=i._minimumHeights,a=i._maximumHeights,v=i._granularity,g=i._ellipsoid,_=m.computePositions(g,n,a,o,v,!1),y=_.bottomPositions,C=_.topPositions,w=C.length,S=2*w,E=new Float64Array(S),b=0;w/=3;var T;for(T=0;w>T;++T){var x=3*T,P=t.fromArray(C,x,p),A=t.fromArray(y,x,f);E[b++]=A.x,E[b++]=A.y,E[b++]=A.z,E[b++]=P.x,E[b++]=P.y,E[b++]=P.z}var M=new u({position:new l({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:E})}),D=S/3;S=2*D-4+D;var I=c.createTypedArray(D,S),R=0;for(T=0;D-2>T;T+=2){var O=T,L=T+2,N=t.fromArray(E,3*O,p),B=t.fromArray(E,3*L,f);if(!t.equalsEpsilon(N,B,h.EPSILON6)){var F=T+1,z=T+3;I[R++]=F,I[R++]=O,I[R++]=F,I[R++]=z,I[R++]=O,I[R++]=L}}return I[R++]=D-2,I[R++]=D-1,new s({attributes:M,indices:I,primitiveType:d.LINES,boundingSphere:new e.fromVertices(E)})},v}),r("Core/WebMercatorProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e){this._ellipsoid=r(e,a.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis};return n(l.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),l.mercatorAngleToGeodeticLatitude=function(e){return s.PI_OVER_TWO-2*Math.atan(Math.exp(-e))},l.geodeticLatitudeToMercatorAngle=function(e){e>l.MaximumLatitude?e=l.MaximumLatitude:e<-l.MaximumLatitude&&(e=-l.MaximumLatitude);var t=Math.sin(e);return.5*Math.log((1+t)/(1-t))},l.MaximumLatitude=l.mercatorAngleToGeodeticLatitude(Math.PI),l.prototype.project=function(t,r){var n=this._semimajorAxis,o=t.longitude*n,a=l.geodeticLatitudeToMercatorAngle(t.latitude)*n,s=t.height;return i(r)?(r.x=o,r.y=a,r.z=s,r):new e(o,a,s)},l.prototype.unproject=function(e,r){var n=this._oneOverSemimajorAxis,o=e.x*n,a=l.mercatorAngleToGeodeticLatitude(e.y*n),s=e.z;return i(r)?(r.longitude=o,r.latitude=a,r.height=s,r):new t(o,a,s)},l}),r("Core/WebMercatorTilingScheme",["./Cartesian2","./defaultValue","./defined","./defineProperties","./Ellipsoid","./Rectangle","./WebMercatorProjection"],function(e,t,r,i,n,o,a){"use strict";var s=function(i){if(i=t(i,{}),this._ellipsoid=t(i.ellipsoid,n.WGS84),this._numberOfLevelZeroTilesX=t(i.numberOfLevelZeroTilesX,1),this._numberOfLevelZeroTilesY=t(i.numberOfLevelZeroTilesY,1),this._projection=new a(this._ellipsoid),r(i.rectangleSouthwestInMeters)&&r(i.rectangleNortheastInMeters))this._rectangleSouthwestInMeters=i.rectangleSouthwestInMeters,this._rectangleNortheastInMeters=i.rectangleNortheastInMeters;else{var s=this._ellipsoid.maximumRadius*Math.PI;this._rectangleSouthwestInMeters=new e(-s,-s),this._rectangleNortheastInMeters=new e(s,s)}var l=this._projection.unproject(this._rectangleSouthwestInMeters),u=this._projection.unproject(this._rectangleNortheastInMeters);this._rectangle=new o(l.longitude,l.latitude,u.longitude,u.latitude)};return i(s.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),s.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},s.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},s.prototype.rectangleToNativeRectangle=function(e,t){var i=this._projection,n=i.project(o.southwest(e)),a=i.project(o.northeast(e));return r(t)?(t.west=n.x,t.south=n.y,t.east=a.x,t.north=a.y,t):new o(n.x,n.y,a.x,a.y)},s.prototype.tileXYToNativeRectangle=function(e,t,i,n){var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=(this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x)/a,u=this._rectangleSouthwestInMeters.x+e*l,c=this._rectangleSouthwestInMeters.x+(e+1)*l,h=(this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y)/s,d=this._rectangleNortheastInMeters.y-t*h,m=this._rectangleNortheastInMeters.y-(t+1)*h;return r(n)?(n.west=u,n.south=m,n.east=c,n.north=d,n):new o(u,m,c,d)},s.prototype.tileXYToRectangle=function(t,r,i,n){var o=this.tileXYToNativeRectangle(t,r,i,n),a=this._projection,s=a.unproject(new e(o.west,o.south)),l=a.unproject(new e(o.east,o.north));return o.west=s.longitude,o.south=s.latitude,o.east=l.longitude,o.north=l.latitude,o},s.prototype.positionToTileXY=function(t,i,n){var o=this._rectangle;if(t.latitude>o.north||t.latitude<o.south||t.longitude<o.west||t.longitude>o.east)return void 0;var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x,u=l/a,c=this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y,h=c/s,d=this._projection,m=d.project(t),p=m.x-this._rectangleSouthwestInMeters.x,f=this._rectangleNortheastInMeters.y-m.y,v=0|p/u;v>=a&&(v=a-1);var g=0|f/h;return g>=s&&(g=s-1),r(n)?(n.x=v,n.y=g,n):new e(v,g)},s}),r("Core/cancelAnimationFrame",["./defined"],function(e){"use strict";var t=window.cancelAnimationFrame;!function(){if(!e(t))for(var r=["webkit","moz","ms","o"],i=0,n=r.length;n>i&&!e(t);)t=window[r[i]+"CancelAnimationFrame"],e(t)||(t=window[r[i]+"CancelRequestAnimationFrame"]),++i;e(t)||(t=clearTimeout)}();var r=function(e){t(e)};return r}),r("Core/combine",["./defaultValue","./defined"],function(e,t){"use strict";var r=function(i,n,o){o=e(o,!1);var a,s,l,u={},c=t(i),h=t(n);if(c)for(a in i)i.hasOwnProperty(a)&&(s=i[a],h&&o&&"object"==typeof s&&n.hasOwnProperty(a)?(l=n[a],u[a]="object"==typeof l?r(s,l,o):s):u[a]=s);if(h)for(a in n)n.hasOwnProperty(a)&&!u.hasOwnProperty(a)&&(l=n[a],u[a]=l);return u};return r}),r("Core/createGuid",[],function(){"use strict";var e=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=0|16*Math.random(),r="x"===e?t:8|3&t;return r.toString(16)})};return e}),r("Core/deprecationWarning",["./defined","./DeveloperError"],function(e){"use strict";var t={},r=function(r,i){e(t[r])||(t[r]=!0,console.log(i))};return r}),r("Core/getFilenameFromUri",["../ThirdParty/Uri","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){var r=new e(t);r.normalize();var i=r.path,n=i.lastIndexOf("/");return-1!==n&&(i=i.substr(n+1)),i};return t}),r("Core/jsonp",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";function i(e,t,r){e.push(encodeURIComponent(t)+"="+encodeURIComponent(r))}var n=function(o,a){a=t(a,t.EMPTY_OBJECT);var s,l=e.defer();do s="jsonp"+Math.random().toString().substring(2,8);while(r(window[s]));window[s]=function(e){l.resolve(e);try{delete window[s]}catch(t){window[s]=void 0}};var u=t(a.callbackParameterName,"callback"),c=[];i(c,u,s);var h=t(a.parameters,t.EMPTY_OBJECT);for(var d in h)h.hasOwnProperty(d)&&i(c,d,h[d]);c.length>0&&(o+=-1===o.indexOf("?")?"?":"&",o+=c.join("&"));var m=a.proxy;return r(m)&&(o=m.getURL(o)),n.loadAndExecuteScript(o,s,l),l.promise};return n.loadAndExecuteScript=function(e,t,r){var i=document.createElement("script");i.async=!0,i.src=e;var n=document.getElementsByTagName("head")[0];i.onload=function(){i.onload=void 0,n.removeChild(i)},i.onerror=function(e){r.reject(e)},n.appendChild(i)},n.defaultLoadAndExecuteScript=n.loadAndExecuteScript,n}),r("Core/loadBlob",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"blob",headers:r})};return t}),r("Core/loadImageViaBlob",["../ThirdParty/when","./loadBlob","./loadImage"],function(e,t,r){"use strict";var i=/^data:/,n=function(n){return i.test(n)?r(n):t(n).then(function(t){var i=window.URL.createObjectURL(t);return r(i,!1).then(function(e){return e.blob=t,window.URL.revokeObjectURL(i),e},function(t){return window.URL.revokeObjectURL(i),e.reject(t)})})},o=function(){try{var e=new XMLHttpRequest;return e.open("GET","#",!0),e.responseType="blob","blob"===e.responseType}catch(t){return!1}}();return o?n:r}),r("Core/mergeSort",["./defined","./DeveloperError"],function(){"use strict";function e(e,t,n,o,a,s){var l,u,c=a-o+1,h=s-a,d=r,m=i;for(l=0;c>l;++l)d[l]=e[o+l];for(u=0;h>u;++u)m[u]=e[a+u+1];l=0,u=0;for(var p=o;s>=p;++p){var f=d[l],v=m[u];c>l&&(u>=h||t(f,v,n)<=0)?(e[p]=f,++l):h>u&&(e[p]=v,++u)}}function t(r,i,n,o,a){if(!(o>=a)){var s=Math.floor(.5*(o+a));t(r,i,n,o,s),t(r,i,n,s+1,a),e(r,i,n,o,s,a)}}var r=[],i=[],n=function(e,n,o){var a=e.length,s=Math.ceil(.5*a);r.length=s,i.length=s,t(e,n,o,0,a-1),r.length=0,i.length=0};return n}),r("Core/requestAnimationFrame",["./defined"],function(e){"use strict";var t=window.requestAnimationFrame;!function(){if(!e(t))for(var r=["webkit","moz","ms","o"],i=0,n=r.length;n>i&&!e(t);)t=window[r[i]+"RequestAnimationFrame"],++i;if(!e(t)){var o=0;t=function(e){var t=Date.now(),r=Math.max(16-(t-o),0);return o=t+r,setTimeout(function(){e(o)},r)}}}();var r=function(e){return t(e)};return r}),r("Core/sampleTerrain",["../ThirdParty/when","./defined","./DeveloperError"],function(e){"use strict";function t(t,n,o){var a,s=t.tilingScheme,l=[],u={};for(a=0;a<o.length;++a){var c=s.positionToTileXY(o[a],n),h=c.toString();if(!u.hasOwnProperty(h)){var d={x:c.x,y:c.y,level:n,tilingScheme:s,terrainProvider:t,positions:[]};u[h]=d,l.push(d)}u[h].positions.push(o[a])}var m=[];for(a=0;a<l.length;++a){var p=l[a],f=p.terrainProvider.requestTileGeometry(p.x,p.y,p.level,!1),v=e(f,r(p),i(p));m.push(v)}return e.all(m,function(){return o})}function r(e){var t=e.positions,r=e.tilingScheme.tileXYToRectangle(e.x,e.y,e.level);return function(e){for(var i=0;i<t.length;++i){var n=t[i];n.height=e.interpolateHeight(r,n.longitude,n.latitude)}}}function i(e){var t=e.positions;return function(){for(var e=0;e<t.length;++e){var r=t[e];r.height=void 0}}}var n=function(r,i,n){function o(){r.ready?e(t(r,i,n),function(e){a.resolve(e)}):setTimeout(o,10)}var a=e.defer();return o(),a.promise};return n}),r("Core/subdivideArray",["./defined","./DeveloperError"],function(){"use strict";var e=function(e,t){for(var r=[],i=e.length,n=0;i>n;){var o=Math.ceil((i-n)/t--);r.push(e.slice(n,n+o)),n+=o}return r};return e}),r("Core/wrapFunction",["./DeveloperError"],function(){"use strict";var e=function(e,t,r){return function(){r.apply(e,arguments),t.apply(e,arguments)}};return e}),r("DataSources/createPropertyDescriptor",["../Core/defaultValue","../Core/defined"],function(e,t){"use strict";function r(e,r,i,n){return{configurable:n,get:function(){return this[r]},set:function(n){var o=this[r],a=this[i];t(a)&&(a(),this[i]=void 0),o!==n&&(this[r]=n,this._definitionChanged.raiseEvent(this,e,n,o)),t(n)&&t(n.definitionChanged)&&(this[i]=n.definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this,e,n,n)},this))}}}function i(t,i){return r(t,"_"+t,"_"+t+"Subscription",e(i,!1))}return i}),r("DataSources/BillboardGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._image=void 0,this._imageSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._alignedAxis=void 0,this._alignedAxisSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},image:o("image"),scale:o("scale"),rotation:o("rotation"),alignedAxis:o("alignedAxis"),horizontalOrigin:o("horizontalOrigin"),verticalOrigin:o("verticalOrigin"),color:o("color"),eyeOffset:o("eyeOffset"),pixelOffset:o("pixelOffset"),show:o("show"),width:o("width"),height:o("height"),scaleByDistance:o("scaleByDistance"),translucencyByDistance:o("translucencyByDistance"),pixelOffsetScaleByDistance:o("pixelOffsetScaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.color=this._color,e.eyeOffset=this._eyeOffset,e.horizontalOrigin=this._horizontalOrigin,e.image=this._image,e.pixelOffset=this._pixelOffset,e.scale=this._scale,e.rotation=this._rotation,e.alignedAxis=this._alignedAxis,e.show=this._show,e.verticalOrigin=this._verticalOrigin,e.width=this._width,e.height=this._height,e.scaleByDistance=this._scaleByDistance,e.translucencyByDistance=this._translucencyByDistance,e.pixelOffsetScaleByDistance=this._pixelOffsetScaleByDistance,e},a.prototype.merge=function(t){this.color=e(this._color,t._color),this.eyeOffset=e(this._eyeOffset,t._eyeOffset),this.horizontalOrigin=e(this._horizontalOrigin,t._horizontalOrigin),this.image=e(this._image,t._image),this.pixelOffset=e(this._pixelOffset,t._pixelOffset),this.scale=e(this._scale,t._scale),this.rotation=e(this._rotation,t._rotation),this.alignedAxis=e(this._alignedAxis,t._alignedAxis),this.show=e(this._show,t._show),this.verticalOrigin=e(this._verticalOrigin,t._verticalOrigin),this.width=e(this._width,t._width),this.height=e(this._height,t._height),this.scaleByDistance=e(this._scaleByDistance,t._scaleByDistance),this.translucencyByDistance=e(this._translucencyByDistance,t._translucencyByDistance),this.pixelOffsetScaleByDistance=e(this._pixelOffsetScaleByDistance,t._pixelOffsetScaleByDistance)},a}),r("Renderer/BufferUsage",["../Core/freezeObject"],function(e){"use strict";var t={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,validate:function(e){return e===t.STREAM_DRAW||e===t.STATIC_DRAW||e===t.DYNAMIC_DRAW}};return e(t)}),r("Renderer/createShaderSource",["../Core/defaultValue","../Core/defined","../Core/DeveloperError"],function(e,t,r){"use strict";function i(i){i=e(i,e.EMPTY_OBJECT);var n=i.defines,o=i.sources,a=i.pickColorQualifier;if(t(a)&&"uniform"!==a&&"varying"!==a)throw new r("options.pickColorQualifier must be 'uniform' or 'varying'.");var s,l,u="";if(t(n)&&n.length>0)for(l=n.length,s=0;l>s;++s)0!==n[s].length&&(u+="#define "+n[s]+"\n");if(t(o)&&o.length>0)for(l=o.length,s=0;l>s;++s)u+="\n#line 0\n"+o[s];if(t(a)){var c=u.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_old_main()"),h=a+" vec4 czm_pickColor; \n"+"void main() \n"+"{ \n"+"    czm_old_main(); \n"+"    if (gl_FragColor.a == 0.0) { \n"+"        discard; \n"+"    } \n"+"    gl_FragColor = czm_pickColor; \n"+"}";u=c+"\n"+h}return u}return i}),r("Renderer/DrawCommand",["../Core/defaultValue","../Core/PrimitiveType"],function(e,t){"use strict";var r=function(r){r=e(r,e.EMPTY_OBJECT),this.boundingVolume=r.boundingVolume,this.cull=e(r.cull,!0),this.modelMatrix=r.modelMatrix,this.primitiveType=e(r.primitiveType,t.TRIANGLES),this.vertexArray=r.vertexArray,this.count=r.count,this.offset=e(r.offset,0),this.shaderProgram=r.shaderProgram,this.uniformMap=r.uniformMap,this.renderState=r.renderState,this.framebuffer=r.framebuffer,this.pass=r.pass,this.executeInClosestFrustum=e(r.executeInClosestFrustum,!1),this.owner=r.owner,this.debugShowBoundingVolume=e(r.debugShowBoundingVolume,!1),this.debugOverlappingFrustums=0,this.oit=void 0};return r.prototype.execute=function(e,t,r,i){e.draw(this,t,r,i)},r}),r("Renderer/VertexArrayFacade",["../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Math","./BufferUsage"],function(e,t,r,i,n,o,a){"use strict";function s(e,t){if(t.needsCommit&&t.vertexSizeInBytes>0){t.needsCommit=!1;var i=t.vertexBuffer,n=e._size*t.vertexSizeInBytes,o=r(i);if(!o||i.sizeInBytes<n)return o&&i.destroy(),t.vertexBuffer=e._context.createVertexBuffer(t.arrayBuffer,t.usage),t.vertexBuffer.vertexArrayDestroyable=!1,!0;t.vertexBuffer.copyFromArrayView(t.arrayBuffer)}return!1}function l(e,t,r){if(e.needsCommit&&e.vertexSizeInBytes>0){var i=e.vertexSizeInBytes*t,n=e.vertexSizeInBytes*r;e.vertexBuffer.copyFromArrayView(new Uint8Array(e.arrayBuffer,i,n),i)}}function u(e){var t=e.vaByPurpose;if(r(t)){for(var i in t)if(t.hasOwnProperty(i))for(var n=t[i],o=n.length,a=0;o>a;++a)n[a].va.destroy();e.vaByPurpose=void 0}}var c=function(t,i,n){function o(t,r){return e.getSizeInBytes(r.componentDatatype)-e.getSizeInBytes(t.componentDatatype)}var s=c._verifyAttributes(i);n=n||0;for(var l,u,h,d,m={},p=[],f=s.length,v=0;f>v;++v){var g=s[v];g.vertexBuffer?p.push(g):(h=g.purpose,l=m[h],r(l)||(l=m[h]={}),d=g.usage,u=l[d],r(u)||(u=l[d]=[]),u.push(g))}this._buffersByPurposeAndUsage={},this._allBuffers=[];for(h in m)if(m.hasOwnProperty(h)){l=m[h];var _=this._buffersByPurposeAndUsage[h];r(_)||(_=this._buffersByPurposeAndUsage[h]={});for(d in l)if(l.hasOwnProperty(d)){u=l[d],u.sort(o);var y,C=c._vertexSizeInBytes(u);switch(Number(d)){case a.STATIC_DRAW:y=a.STATIC_DRAW;break;case a.STREAM_DRAW:y=a.STREAM_DRAW;break;case a.DYNAMIC_DRAW:y=a.DYNAMIC_DRAW}var w={purpose:h,vertexSizeInBytes:C,vertexBuffer:void 0,usage:y,needsCommit:!1,arrayBuffer:void 0,arrayViews:c._createArrayViews(u,C)};_[d]=w,this._allBuffers.push(w)}}this._size=0,this._precreated=p,this._context=t,this.writers=void 0,this.vaByPurpose=void 0,this.resize(n)};c._verifyAttributes=function(i){for(var o=[],s=0;s<i.length;++s){var l=i[s],u={index:t(l.index,s),enabled:t(l.enabled,!0),componentsPerAttribute:l.componentsPerAttribute,componentDatatype:l.componentDatatype||e.FLOAT,normalize:l.normalize||!1,purpose:t(l.purpose,"all"),vertexBuffer:l.vertexBuffer,usage:l.usage||a.STATIC_DRAW};if(o.push(u),1!==u.componentsPerAttribute&&2!==u.componentsPerAttribute&&3!==u.componentsPerAttribute&&4!==u.componentsPerAttribute)throw new n("attribute.componentsPerAttribute must be in the range [1, 4].");var c=u.componentDatatype;if(!e.validate(c))throw new n("Attribute must have a valid componentDatatype or not specify it.");if(!a.validate(u.usage))throw new n("Attribute must have a valid usage or not specify it.")}for(var h=new Array(o.length),d=0;d<o.length;++d){var m=o[d],p=m.index,f=m.purpose;if("all"!==f){var v=h[p];if(v===!0)throw new n("Index "+p+" is used by more than one attribute.");if(r(v)){if(v[f])throw new n("Index "+p+" is used by more than one attribute with the same purpose.")}else v=h[p]={};v[f]=!0}else{if(h[p])throw new n("Index "+p+" is used by more than one attribute.");h[p]=!0}}return o},c._vertexSizeInBytes=function(t){for(var r=0,i=t.length,n=0;i>n;++n){var o=t[n];r+=o.componentsPerAttribute*e.getSizeInBytes(o.componentDatatype)}var a=i>0?e.getSizeInBytes(t[0].componentDatatype):0,s=a>0?r%a:0,l=0===s?0:a-s;return r+=l},c._createArrayViews=function(t,r){for(var i=[],n=0,o=t.length,a=0;o>a;++a){var s=t[a],l=s.componentDatatype;i.push({index:s.index,enabled:s.enabled,componentsPerAttribute:s.componentsPerAttribute,componentDatatype:l,normalize:s.normalize,offsetInBytes:n,vertexSizeInComponentType:r/e.getSizeInBytes(l),view:void 0}),n+=s.componentsPerAttribute*e.getSizeInBytes(l)}return i},c.prototype.resize=function(e){this._size=e;var t=this._allBuffers;this.writers={};for(var i=0,n=t.length;n>i;++i){var o=t[i];c._resize(o,this._size);var a=this.writers[o.purpose];r(a)||(a=this.writers[o.purpose]=[]),c._appendWriters(a,o)}u(this)},c._resize=function(t,i){if(t.vertexSizeInBytes>0){var n=new ArrayBuffer(i*t.vertexSizeInBytes);if(r(t.arrayBuffer))for(var o=new Uint8Array(n),a=new Uint8Array(t.arrayBuffer),s=a.length,l=0;s>l;++l)o[l]=a[l];for(var u=t.arrayViews,c=u.length,h=0;c>h;++h){var d=u[h];d.view=e.createArrayBufferView(d.componentDatatype,n,d.offsetInBytes)}t.arrayBuffer=n}};var h=[function(e,t,r){return function(i,n){t[i*r]=n,e.needsCommit=!0}},function(e,t,r){return function(i,n,o){var a=i*r;t[a]=n,t[a+1]=o,e.needsCommit=!0}},function(e,t,r){return function(i,n,o,a){var s=i*r;t[s]=n,t[s+1]=o,t[s+2]=a,e.needsCommit=!0}},function(e,t,r){return function(i,n,o,a,s){var l=i*r;t[l]=n,t[l+1]=o,t[l+2]=a,t[l+3]=s,e.needsCommit=!0}}];return c._appendWriters=function(e,t){for(var r=t.arrayViews,i=r.length,n=0;i>n;++n){var o=r[n];e[o.index]=h[o.componentsPerAttribute-1](t,o.view,o.vertexSizeInComponentType)}},c.prototype.commit=function(e){for(var t,i=!1,n=this._allBuffers,a=0,l=n.length;l>a;++a)t=n[a],i=s(this,t)||i;if(i||!r(this.vaByPurpose)){var h=this._buffersByPurposeAndUsage;u(this),this.vaByPurpose={};for(var d in h)if(h.hasOwnProperty(d)){for(var m=h[d],p=[],f=Math.ceil(this._size/o.SIXTY_FOUR_KILOBYTES),v=0;f>v;++v){var g=[],_=h.all;if(_!==m)for(var y in _)if(_.hasOwnProperty(y)){var C=_[y];c._appendAttributes(g,C,v*C.vertexSizeInBytes*o.SIXTY_FOUR_KILOBYTES)}for(var w in m)m.hasOwnProperty(w)&&(t=m[w],c._appendAttributes(g,t,v*t.vertexSizeInBytes*o.SIXTY_FOUR_KILOBYTES));g=g.concat(this._precreated),p.push({va:this._context.createVertexArray(g,e),indicesCount:1.5*(v!==f-1?o.SIXTY_FOUR_KILOBYTES:this._size%o.SIXTY_FOUR_KILOBYTES)})}this.vaByPurpose[d]=p}}},c._appendAttributes=function(e,t,r){for(var i=t.arrayViews,n=i.length,o=0;n>o;++o){var a=i[o];e.push({index:a.index,enabled:a.enabled,componentsPerAttribute:a.componentsPerAttribute,componentDatatype:a.componentDatatype,normalize:a.normalize,vertexBuffer:t.vertexBuffer,offsetInBytes:r+a.offsetInBytes,strideInBytes:t.vertexSizeInBytes})}},c.prototype.subCommit=function(e,t){for(var r=this._allBuffers,i=0,n=r.length;n>i;++i)l(r[i],e,t)},c.prototype.endSubCommits=function(){for(var e=this._allBuffers,t=0,r=e.length;r>t;++t)e[t].needsCommit=!1},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){for(var e=this._allBuffers,t=0,r=e.length;r>t;++t){var n=e[t];n.vertexBuffer=n.vertexBuffer&&n.vertexBuffer.destroy()}return u(this),i(this)},c}),r("Shaders/BillboardCollectionFS",[],function(){"use strict";return"uniform sampler2D u_atlas;\nvarying vec2 v_textureCoordinates;\n#ifdef RENDER_FOR_PICK\nvarying vec4 v_pickColor;\n#else\nvarying vec4 v_color;\n#endif\nvoid main()\n{\n#ifdef RENDER_FOR_PICK\nvec4 vertexColor = vec4(1.0, 1.0, 1.0, 1.0);\n#else\nvec4 vertexColor = v_color;\n#endif\nvec4 color = texture2D(u_atlas, v_textureCoordinates) * vertexColor;\nif (color.a == 0.0)\n{\ndiscard;\n}\n#ifdef RENDER_FOR_PICK\ngl_FragColor = v_pickColor;\n#else\ngl_FragColor = color;\n#endif\n}\n"
}),r("Shaders/BillboardCollectionVS",[],function(){"use strict";return"attribute vec3 positionHigh;\nattribute vec3 positionLow;\nattribute vec2 direction;\nattribute vec4 textureCoordinatesAndImageSize;\nattribute vec3 originAndShow;\nattribute vec4 pixelOffsetAndTranslate;\nattribute vec4 eyeOffsetAndScale;\nattribute vec4 rotationAndAlignedAxis;\nattribute vec4 scaleByDistance;\nattribute vec4 translucencyByDistance;\nattribute vec4 pixelOffsetScaleByDistance;\n#ifdef RENDER_FOR_PICK\nattribute vec4 pickColor;\n#else\nattribute vec4 color;\n#endif\nvarying vec2 v_textureCoordinates;\n#ifdef RENDER_FOR_PICK\nvarying vec4 v_pickColor;\n#else\nvarying vec4 v_color;\n#endif\nfloat getNearFarScalar(vec4 nearFarScalar, float cameraDistSq)\n{\nfloat valueAtMin = nearFarScalar.y;\nfloat valueAtMax = nearFarScalar.w;\nfloat nearDistanceSq = nearFarScalar.x * nearFarScalar.x;\nfloat farDistanceSq = nearFarScalar.z * nearFarScalar.z;\nfloat t = (cameraDistSq - nearDistanceSq) / (farDistanceSq - nearDistanceSq);\nt = pow(clamp(t, 0.0, 1.0), 0.2);\nreturn mix(valueAtMin, valueAtMax, t);\n}\nvoid main()\n{\nvec3 eyeOffset = eyeOffsetAndScale.xyz;\nfloat scale = eyeOffsetAndScale.w;\nvec2 textureCoordinates = textureCoordinatesAndImageSize.xy;\nvec2 imageSize = textureCoordinatesAndImageSize.zw;\nvec2 origin = originAndShow.xy;\nfloat show = originAndShow.z;\nvec2 pixelOffset = pixelOffsetAndTranslate.xy;\nvec2 translate = pixelOffsetAndTranslate.zw;\nvec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\nvec4 positionEC = czm_modelViewRelativeToEye * p;\npositionEC = czm_eyeOffset(positionEC, eyeOffset);\npositionEC.xyz *= show;\n#if defined(EYE_DISTANCE_SCALING) || defined(EYE_DISTANCE_TRANSLUCENCY) || defined(EYE_DISTANCE_PIXEL_OFFSET)\nfloat lengthSq;\nif (czm_sceneMode == czm_sceneMode2D)\n{\nlengthSq = czm_eyeHeight2D.y;\n}\nelse\n{\nlengthSq = dot(positionEC.xyz, positionEC.xyz);\n}\n#endif\n#ifdef EYE_DISTANCE_SCALING\nscale *= getNearFarScalar(scaleByDistance, lengthSq);\nif (scale == 0.0)\n{\npositionEC.xyz = vec3(0.0);\n}\n#endif\nfloat translucency = 1.0;\n#ifdef EYE_DISTANCE_TRANSLUCENCY\ntranslucency = getNearFarScalar(translucencyByDistance, lengthSq);\nif (translucency == 0.0)\n{\npositionEC.xyz = vec3(0.0);\n}\n#endif\n#ifdef EYE_DISTANCE_PIXEL_OFFSET\nfloat pixelOffsetScale = getNearFarScalar(pixelOffsetScaleByDistance, lengthSq);\npixelOffset *= pixelOffsetScale;\n#endif\nvec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\nvec2 halfSize = imageSize * scale * czm_resolutionScale;\nhalfSize *= ((direction * 2.0) - 1.0);\npositionWC.xy += (origin * abs(halfSize));\n#ifdef ROTATION\nfloat rotation = rotationAndAlignedAxis.x;\nvec3 alignedAxis = rotationAndAlignedAxis.yzw;\nif (!all(equal(rotationAndAlignedAxis, vec4(0.0))))\n{\nfloat angle = rotation;\nif (!all(equal(alignedAxis, vec3(0.0))))\n{\nvec3 pos = positionEC.xyz + czm_encodedCameraPositionMCHigh + czm_encodedCameraPositionMCLow;\nvec3 normal = normalize(cross(alignedAxis, pos));\nvec4 tangent = vec4(normalize(cross(pos, normal)), 0.0);\ntangent = czm_modelViewProjection * tangent;\nangle += sign(-tangent.x) * acos(tangent.y / length(tangent.xy));\n}\nfloat cosTheta = cos(angle);\nfloat sinTheta = sin(angle);\nmat2 rotationMatrix = mat2(cosTheta, sinTheta, -sinTheta, cosTheta);\nhalfSize = rotationMatrix * halfSize;\n}\n#endif\npositionWC.xy += halfSize;\npositionWC.xy += translate;\npositionWC.xy += (pixelOffset * czm_resolutionScale);\ngl_Position = czm_viewportOrthographic * vec4(positionWC.xy, -positionWC.z, 1.0);\nv_textureCoordinates = textureCoordinates;\n#ifdef RENDER_FOR_PICK\nv_pickColor = pickColor;\n#else\nv_color = color;\nv_color.a *= translucency;\n#endif\n}\n"}),r("Scene/HorizontalOrigin",["../Core/freezeObject"],function(e){"use strict";var t={CENTER:0,LEFT:1,RIGHT:-1};return e(t)}),r("Scene/SceneMode",["../Core/freezeObject"],function(e){"use strict";var t={MORPHING:0,COLUMBUS_VIEW:1,SCENE2D:2,SCENE3D:3};return t.getMorphTime=function(e){return e===t.SCENE3D?1:e===t.MORPHING?void 0:0},e(t)}),r("Scene/SceneTransforms",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defined","../Core/DeveloperError","../Core/Math","../Core/Matrix4","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c={},h=new i(0,0,0,1),d=new i,m=new l;c.wgs84ToWindowCoordinates=function(e,t,r){var n=c.computeActualWgs84Position(e.frameState,t,h);if(!o(n))return void 0;var a=e.camera,s=l.multiply(a.frustum.projectionMatrix,a.viewMatrix,m);return l.multiplyByVector(s,i.fromElements(n.x,n.y,n.z,1,d),d),d.z<0&&e.mode!==u.SCENE2D?void 0:(r=c.clipToGLWindowCoordinates(e,d,r),r.y=e.canvas.clientHeight-r.y,r)},c.wgs84ToDrawingBufferCoordinates=function(e,t,r){var n=c.computeActualWgs84Position(e.frameState,t,h);if(!o(n))return void 0;var a=e.camera,s=l.multiply(a.frustum.projectionMatrix,a.viewMatrix,m);return l.multiplyByVector(s,i.fromElements(n.x,n.y,n.z,1,d),d),d.z<0&&e.mode!==u.SCENE2D?void 0:c.clipToDrawingBufferCoordinates(e,d,r)};var p=new r,f=new n;c.computeActualWgs84Position=function(e,t,i){var n=e.mode;if(n===u.SCENE3D)return r.clone(t,i);var a=e.mapProjection,l=a.ellipsoid.cartesianToCartographic(t,f);if(!o(l))return void 0;if(a.project(l,p),n===u.COLUMBUS_VIEW)return r.fromElements(p.z,p.x,p.y,i);if(n===u.SCENE2D)return r.fromElements(0,p.x,p.y,i);var c=e.morphTime;return r.fromElements(s.lerp(p.z,t.x,c),s.lerp(p.x,t.y,c),s.lerp(p.y,t.z,c),i)};var v=new r,g=new r,_=new e,y=new l;return c.clipToGLWindowCoordinates=function(e,i,n){var o=e.canvas;return r.divideByScalar(i,i.w,v),_.width=o.clientWidth,_.height=o.clientHeight,l.computeViewportTransformation(_,0,1,y),l.multiplyByPoint(y,v,g),t.fromCartesian3(g,n)},c.clipToDrawingBufferCoordinates=function(e,i,n){return r.divideByScalar(i,i.w,v),_.width=e.drawingBufferWidth,_.height=e.drawingBufferHeight,l.computeViewportTransformation(_,0,1,y),l.multiplyByPoint(y,v,g),t.fromCartesian3(g,n)},c.transformWindowToDrawingBuffer=function(e,r,i){var n=e.canvas,o=e.drawingBufferWidth/n.clientWidth,a=e.drawingBufferHeight/n.clientHeight;return t.fromElements(r.x*o,r.y*a,i)},c}),r("Scene/VerticalOrigin",["../Core/freezeObject"],function(e){"use strict";var t={CENTER:0,BOTTOM:1,TOP:-1};return e(t)}),r("Scene/Billboard",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","../Core/NearFarScalar","./HorizontalOrigin","./SceneMode","./SceneTransforms","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,t){var r=e._billboardCollection;s(r)&&(r._updateBillboard(e,t),e._dirty=!0)}var g=function(e,i){e=a(e,a.EMPTY_OBJECT),this._show=a(e.show,!0),this._position=r.clone(a(e.position,r.ZERO)),this._actualPosition=r.clone(this._position),this._pixelOffset=t.clone(a(e.pixelOffset,t.ZERO)),this._translate=new t(0,0),this._eyeOffset=r.clone(a(e.eyeOffset,r.ZERO)),this._verticalOrigin=a(e.verticalOrigin,f.CENTER),this._horizontalOrigin=a(e.horizontalOrigin,d.CENTER),this._scale=a(e.scale,1),this._color=n.clone(a(e.color,n.WHITE)),this._rotation=a(e.rotation,0),this._alignedAxis=r.clone(a(e.alignedAxis,r.ZERO)),this._width=e.width,this._height=e.height,this._scaleByDistance=e.scaleByDistance,this._translucencyByDistance=e.translucencyByDistance,this._pixelOffsetScaleByDistance=e.pixelOffsetScaleByDistance,this._id=e.id,this._collection=a(e.collection,i),this._pickId=void 0,this._pickPrimitive=a(e._pickPrimitive,this),this._billboardCollection=i,this._dirty=!1,this._index=-1,this._imageIndex=-1,this._imageIndexPromise=void 0,this._imageId=void 0,this._image=void 0,this._imageSubRegion=void 0;var l=e.image,u=e.imageId;s(l)&&(s(u)||(u="string"==typeof l?l:s(l.src)?l.src:o()),this._imageId=u,this._image=l),s(e.imageSubRegion)&&(this._imageId=u,this._imageSubRegion=e.imageSubRegion),s(this._billboardCollection._textureAtlas)&&this._loadImage()},_=g.SHOW_INDEX=0,y=g.POSITION_INDEX=1,C=g.PIXEL_OFFSET_INDEX=2,w=g.EYE_OFFSET_INDEX=3,S=g.HORIZONTAL_ORIGIN_INDEX=4,E=g.VERTICAL_ORIGIN_INDEX=5,b=g.SCALE_INDEX=6,T=g.IMAGE_INDEX_INDEX=7,x=g.COLOR_INDEX=8,P=g.ROTATION_INDEX=9,A=g.ALIGNED_AXIS_INDEX=10,M=g.SCALE_BY_DISTANCE_INDEX=11,D=g.TRANSLUCENCY_BY_DISTANCE_INDEX=12,I=g.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX=13;g.NUMBER_OF_PROPERTIES=14,l(g.prototype,{show:{get:function(){return this._show},set:function(e){this._show!==e&&(this._show=e,v(this,_))}},position:{get:function(){return this._position},set:function(e){var t=this._position;r.equals(t,e)||(r.clone(e,t),r.clone(e,this._actualPosition),v(this,y))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(e){var r=this._pixelOffset;t.equals(r,e)||(t.clone(e,r),v(this,C))}},scaleByDistance:{get:function(){return this._scaleByDistance},set:function(e){var t=this._scaleByDistance;h.equals(t,e)||(this._scaleByDistance=h.clone(e,t),v(this,M))}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(e){var t=this._translucencyByDistance;h.equals(t,e)||(this._translucencyByDistance=h.clone(e,t),v(this,D))}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(e){var t=this._pixelOffsetScaleByDistance;h.equals(t,e)||(this._pixelOffsetScaleByDistance=h.clone(e,t),v(this,I))}},eyeOffset:{get:function(){return this._eyeOffset},set:function(e){var t=this._eyeOffset;r.equals(t,e)||(r.clone(e,t),v(this,w))}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(e){this._horizontalOrigin!==e&&(this._horizontalOrigin=e,v(this,S))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(e){this._verticalOrigin!==e&&(this._verticalOrigin=e,v(this,E))}},scale:{get:function(){return this._scale},set:function(e){this._scale!==e&&(this._scale=e,v(this,b))}},color:{get:function(){return this._color},set:function(e){var t=this._color;n.equals(t,e)||(n.clone(e,t),v(this,x))}},rotation:{get:function(){return this._rotation},set:function(e){this._rotation!==e&&(this._rotation=e,v(this,P))}},alignedAxis:{get:function(){return this._alignedAxis},set:function(e){var t=this._alignedAxis;r.equals(t,e)||(r.clone(e,t),v(this,A))}},width:{get:function(){return this._width},set:function(e){this._width!==e&&(this._width=e,v(this,T))}},height:{get:function(){return this._height},set:function(e){this._height!==e&&(this._height=e,v(this,T))}},id:{get:function(){return this._id},set:function(e){this._id=e,s(this._pickId)&&(this._pickId.object.id=e)}},pickPrimitive:{get:function(){return this._pickPrimitive},set:function(e){this._pickPrimitive=e,s(this._pickId)&&(this._pickId.object.primitive=e)}},image:{get:function(){return this._imageId},set:function(e){s(e)?"string"==typeof e?this.setImage(e,e):s(e.src)?this.setImage(e.src,e):this.setImage(o(),e):(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=void 0,this._image=void 0,this._imageIndexPromise=void 0,v(this,T))}},ready:{get:function(){return-1!==this._imageIndex}}}),g.prototype.getPickId=function(e){return s(this._pickId)||(this._pickId=e.createPickId({primitive:this._pickPrimitive,collection:this._collection,id:this._id})),this._pickId},g.prototype._loadImage=function(){var t,r=this._billboardCollection._textureAtlas,i=this._imageId,n=this._image,o=this._imageSubRegion;if(s(n)&&(t=r.addImage(i,n)),s(o)&&(t=r.addSubRegion(i,o)),this._imageIndexPromise=t,s(t)){var a=this;t.then(function(t){a._imageId===i&&a._image===n&&e.equals(a._imageSubRegion,o)&&(a._imageIndex=t,a._ready=!0,a._image=void 0,a._imageIndexPromise=void 0,v(a,T))}).otherwise(function(e){console.error("Error loading image for billboard: "+e),a._imageIndexPromise=void 0})}},g.prototype.setImage=function(e,t){this._imageId!==e&&(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=e,this._image=t,s(this._billboardCollection._textureAtlas)&&this._loadImage())},g.prototype.setImageSubRegion=function(t,r){this._imageId===t&&e.equals(this._imageSubRegion,r)||(this._imageIndex=-1,this._imageId=t,this._imageSubRegion=r,s(this._billboardCollection._textureAtlas)&&this._loadImage())},g.prototype._setTranslate=function(e){var r=this._translate;t.equals(r,e)||(t.clone(e,r),v(this,C))},g.prototype._getActualPosition=function(){return this._actualPosition},g.prototype._setActualPosition=function(e){r.clone(e,this._actualPosition),v(this,y)};var R=new i;g._computeActualPosition=function(e,t,r){return t.mode===m.SCENE3D?e:(c.multiplyByPoint(r,e,R),p.computeActualWgs84Position(t,R))};var O=new c,L=new i,N=new r,B=new t,F=new t;g._computeScreenSpacePosition=function(e,n,o,a,s){var l=s.camera,u=l.viewMatrix,h=l.frustum.projectionMatrix,d=c.multiplyTransformation(u,e,O),m=c.multiplyByVector(d,i.fromElements(n.x,n.y,n.z,1,L),L),f=r.multiplyComponents(o,r.normalize(m,N),N);m.x+=o.x+f.x,m.y+=o.y+f.y,m.z+=f.z;var v=c.multiplyByVector(h,m,L),g=p.clipToGLWindowCoordinates(s,v,new t);a=t.clone(a,F),a.y=-a.y;var _=t.multiplyByScalar(a,s.context.uniformState.resolutionScale,B);return g.x+=_.x,g.y+=_.y,g};var z=new t(0,0);return g.prototype.computeScreenSpacePosition=function(e){var r=this._billboardCollection;t.clone(this._pixelOffset,z),t.add(z,this._translate,z);var i=r.modelMatrix,n=g._computeScreenSpacePosition(i,this._actualPosition,this._eyeOffset,z,e);return n.y=e.canvas.clientHeight-n.y,n},g.prototype.equals=function(i){return this===i||s(i)&&this._show===i._show&&this._scale===i._scale&&this._verticalOrigin===i._verticalOrigin&&this._horizontalOrigin===i._horizontalOrigin&&this._id===i._id&&this._imageId===i._imageId&&e.equals(this._imageSubRegion,i._imageSubRegion)&&r.equals(this._position,i._position)&&n.equals(this._color,i._color)&&t.equals(this._pixelOffset,i._pixelOffset)&&t.equals(this._translate,i._translate)&&r.equals(this._eyeOffset,i._eyeOffset)&&h.equals(this._scaleByDistance,i._scaleByDistance)&&h.equals(this._translucencyByDistance,i._translucencyByDistance)&&h.equals(this._pixelOffsetScaleByDistance,i._pixelOffsetScaleByDistance)},g.prototype._destroy=function(){this.image=void 0,this._pickId=this._pickId&&this._pickId.destroy(),this._billboardCollection=void 0},g}),r("Scene/BlendEquation",["../Core/freezeObject"],function(e){"use strict";var t={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779};return e(t)}),r("Scene/BlendFunction",["../Core/freezeObject"],function(e){"use strict";var t={ZERO:0,ONE:1,SOURCE_COLOR:768,ONE_MINUS_SOURCE_COLOR:769,DESTINATION_COLOR:774,ONE_MINUS_DESTINATION_COLOR:775,SOURCE_ALPHA:770,ONE_MINUS_SOURCE_ALPHA:771,DESTINATION_ALPHA:772,ONE_MINUS_DESTINATION_ALPHA:773,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,SOURCE_ALPHA_SATURATE:776};return e(t)}),r("Scene/BlendingState",["../Core/freezeObject","./BlendEquation","./BlendFunction"],function(e,t,r){"use strict";var i={DISABLED:e({enabled:!1}),ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.SOURCE_ALPHA,functionSourceAlpha:r.SOURCE_ALPHA,functionDestinationRgb:r.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:r.ONE_MINUS_SOURCE_ALPHA}),PRE_MULTIPLIED_ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.ONE,functionSourceAlpha:r.ONE,functionDestinationRgb:r.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:r.ONE_MINUS_SOURCE_ALPHA}),ADDITIVE_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.SOURCE_ALPHA,functionSourceAlpha:r.SOURCE_ALPHA,functionDestinationRgb:r.ONE,functionDestinationAlpha:r.ONE})};return e(i)}),r("Scene/Pass",["../Core/freezeObject"],function(e){"use strict";var t={OPAQUE:0,TRANSLUCENT:1,OVERLAY:2};return e(t)}),r("Scene/TextureAtlas",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/loadImage","../Core/PixelFormat","../Core/RuntimeError","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,r,n,o,a){this.bottomLeft=i(e,t.ZERO),this.topRight=i(r,t.ZERO),this.childNode1=n,this.childNode2=o,this.imageIndex=a}function m(e,r){var i=e.numberOfImages,o=2;if(i>0){var a=e._texture.width,s=e._texture.height,l=o*(a+r.width+e._borderWidthInPixels),u=o*(s+r.height+e._borderWidthInPixels),c=a/l,h=s/u,m=new d(new t(a+e._borderWidthInPixels,0),new t(l,s)),p=new d(new t,new t(l,s),e._root,m),f=new d(new t(0,s+e._borderWidthInPixels),new t(l,u)),v=new d(new t,new t(l,u),p,f);e._root=v;for(var g=0;g<e._textureCoordinates.length;g++){var _=e._textureCoordinates[g];n(_)&&(_.x*=c,_.y*=h,_.width*=c,_.height*=h)}var y=e._context.createTexture2D({width:l,height:u,pixelFormat:e._pixelFormat}),C=e._context.createFramebuffer({colorTextures:[e._texture]});C._bind(),y.copyFromFramebuffer(0,0,0,0,a,s),C._unBind(),C.destroy(),e._texture=y}else{var w=o*(r.width+e._borderWidthInPixels),S=o*(r.height+e._borderWidthInPixels);e._texture=e._texture&&e._texture.destroy(),e._texture=e._context.createTexture2D({width:w,height:S,pixelFormat:e._pixelFormat}),e._root=new d(new t,new t(w,S))}}function p(e,r,i){if(!n(r))return void 0;if(!n(r.childNode1)&&!n(r.childNode2)){if(n(r.imageIndex))return void 0;var o=r.topRight.x-r.bottomLeft.x,a=r.topRight.y-r.bottomLeft.y,s=o-i.width,l=a-i.height;if(0>s||0>l)return void 0;if(0===s&&0===l)return r;if(s>l){r.childNode1=new d(new t(r.bottomLeft.x,r.bottomLeft.y),new t(r.bottomLeft.x+i.width,r.topRight.y));var u=r.bottomLeft.x+i.width+e._borderWidthInPixels;u<r.topRight.x&&(r.childNode2=new d(new t(u,r.bottomLeft.y),new t(r.topRight.x,r.topRight.y)))}else{r.childNode1=new d(new t(r.bottomLeft.x,r.bottomLeft.y),new t(r.topRight.x,r.bottomLeft.y+i.height));var c=r.bottomLeft.y+i.height+e._borderWidthInPixels;c<r.topRight.y&&(r.childNode2=new d(new t(r.bottomLeft.x,c),new t(r.topRight.x,r.topRight.y)))}return p(e,r.childNode1,i)}return p(e,r.childNode1,i)||p(e,r.childNode2,i)}function f(t,i,o){var a=p(t,t._root,i);if(n(a)){a.imageIndex=o;var s=t._texture.width,l=t._texture.height,u=a.topRight.x-a.bottomLeft.x,c=a.topRight.y-a.bottomLeft.y,h=a.bottomLeft.x/s,d=a.bottomLeft.y/l,v=u/s,g=c/l;t._textureCoordinates[o]=new e(h,d,v,g),t._texture.copyFrom(i,a.bottomLeft.x,a.bottomLeft.y)}else m(t,i),f(t,i,o);t._guid=r()}var v=new t(16,16),g=function(e){e=i(e,i.EMPTY_OBJECT);var n=i(e.borderWidthInPixels,1),o=i(e.initialSize,v);this._context=e.context,this._pixelFormat=i(e.pixelFormat,u.RGBA),this._borderWidthInPixels=n,this._textureCoordinates=[],this._guid=r(),this._idHash={},this._texture=this._context.createTexture2D({width:o.x,height:o.y,pixelFormat:this._pixelFormat}),this._root=new d(new t,new t(o.x,o.y))};return o(g.prototype,{borderWidthInPixels:{get:function(){return this._borderWidthInPixels}},textureCoordinates:{get:function(){return this._textureCoordinates}},texture:{get:function(){return this._texture}},numberOfImages:{get:function(){return this._textureCoordinates.length}},guid:{get:function(){return this._guid}}}),g.prototype.addImage=function(e,t){var r=this._idHash[e];if(n(r))return r;"function"==typeof t?t=t(e):"string"==typeof t&&(t=l(t));var i=this;return r=h(t,function(e){if(i.isDestroyed())return-1;var t=i.numberOfImages;return f(i,e,t),t}),this._idHash[e]=r,r},g.prototype.addSubRegion=function(t,i){var o=this._idHash[t];if(!n(o))throw new c('image with id "'+t+'" not found in the atlas.');var a=this;return h(o,function(t){if(-1===t)return-1;var n=a._texture.width,o=a._texture.height,s=a.numberOfImages,l=a._textureCoordinates[t],u=l.x+i.x/n,c=l.y+i.y/o,h=i.width/n,d=i.height/o;return a._textureCoordinates.push(new e(u,c,h,d)),a._guid=r(),s})},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),a(this)},g}),r("Scene/BillboardCollection",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EncodedCartesian3","../Core/IndexDatatype","../Core/Matrix4","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Renderer/VertexArrayFacade","../Shaders/BillboardCollectionFS","../Shaders/BillboardCollectionVS","./Billboard","./BlendingState","./HorizontalOrigin","./Pass","./SceneMode","./TextureAtlas"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b){"use strict";function T(e){if(e._billboardsRemoved){e._billboardsRemoved=!1;for(var t=[],r=e._billboards,i=r.length,n=0,o=0;i>n;++n){var a=r[n];a&&(a._index=o++,t.push(a))}e._billboards=t}}function x(e){var t=16384,r=e.cache.billboardCollection_directionsVertexBuffer;if(a(r))return r;for(var i=new Uint8Array(2*4*t),n=0,o=0;t>n;++n)i[o++]=0,i[o++]=0,i[o++]=255,i[o++]=0,i[o++]=255,i[o++]=255,i[o++]=0,i[o++]=255;return r=e.createVertexBuffer(i,m.STATIC_DRAW),r.vertexArrayDestroyable=!1,e.cache.billboardCollection_directionsVertexBuffer=r,r}function P(e){var t=16384,r=e.cache.billboardCollection_indexBuffer;if(a(r))return r;for(var i=6*t,n=new Uint16Array(i),o=0,s=0;i>o;o+=6,s+=4)n[o]=s,n[o+1]=s+1,n[o+2]=s+2,n[o+3]=s+0,n[o+4]=s+2,n[o+5]=s+3;return r=e.createIndexBuffer(n,m.STATIC_DRAW,h.UNSIGNED_SHORT),r.vertexArrayDestroyable=!1,e.cache.billboardCollection_indexBuffer=r,r}function A(e,t,r){var i=x(e);return new v(e,[{index:ot.positionHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,usage:r[q]},{index:ot.positionLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,usage:r[q]},{index:ot.pixelOffsetAndTranslate,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[j]},{index:ot.eyeOffsetAndScale,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[Q]},{index:ot.textureCoordinatesAndImageSize,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[J]},{index:ot.pickColor,componentsPerAttribute:4,normalize:!0,componentDatatype:n.UNSIGNED_BYTE,usage:m.STATIC_DRAW,purpose:lt},{index:ot.color,componentsPerAttribute:4,normalize:!0,componentDatatype:n.UNSIGNED_BYTE,usage:r[K],purpose:st},{index:ot.originAndShow,componentsPerAttribute:3,componentDatatype:n.BYTE,usage:r[H]},{index:ot.direction,vertexBuffer:i,componentsPerAttribute:2,normalize:!0,componentDatatype:n.UNSIGNED_BYTE},{index:ot.rotationAndAlignedAxis,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[$]},{index:ot.scaleByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[tt]},{index:ot.translucencyByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[rt]},{index:ot.pixelOffsetScaleByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[it]}],4*t)}function M(t,r,i,n,o){var a=4*o._index,s=o._getActualPosition();t._mode===E.SCENE3D&&(e.expand(t._baseVolume,s,t._baseVolume),t._boundingVolumeDirty=!0),c.fromCartesian(s,ct);var l=n[at],u=l[ot.positionHigh],h=ct.high;u(a+0,h.x,h.y,h.z),u(a+1,h.x,h.y,h.z),u(a+2,h.x,h.y,h.z),u(a+3,h.x,h.y,h.z);var d=l[ot.positionLow],m=ct.low;d(a+0,m.x,m.y,m.z),d(a+1,m.x,m.y,m.z),d(a+2,m.x,m.y,m.z),d(a+3,m.x,m.y,m.z)}function D(e,t,r,i,n){var o=4*n._index,a=n.pixelOffset,s=n._translate;e._maxPixelOffset=Math.max(e._maxPixelOffset,Math.abs(a.x+s.x),Math.abs(-a.y+s.y));var l=i[at],u=l[ot.pixelOffsetAndTranslate];u(o+0,a.x,-a.y,s.x,s.y),u(o+1,a.x,-a.y,s.x,s.y),u(o+2,a.x,-a.y,s.x,s.y),u(o+3,a.x,-a.y,s.x,s.y)}function I(e,t,r,i,n){var o=4*n._index,a=n.eyeOffset,s=n.scale;e._maxEyeOffset=Math.max(e._maxEyeOffset,Math.abs(a.x),Math.abs(a.y),Math.abs(a.z)),e._maxScale=Math.max(e._maxScale,s);var l=i[at],u=l[ot.eyeOffsetAndScale];u(o+0,a.x,a.y,a.z,s),u(o+1,a.x,a.y,a.z,s),u(o+2,a.x,a.y,a.z,s),u(o+3,a.x,a.y,a.z,s)}function R(e,t,r,n,o){var a=4*o._index,s=n[lt],l=s[ot.pickColor],u=o.getPickId(t).color,c=i.floatToByte(u.red),h=i.floatToByte(u.green),d=i.floatToByte(u.blue),m=i.floatToByte(u.alpha);l(a+0,c,h,d,m),l(a+1,c,h,d,m),l(a+2,c,h,d,m),l(a+3,c,h,d,m)}function O(e,t,r,n,o){var a=4*o._index,s=n[st],l=s[ot.color],u=o.color,c=i.floatToByte(u.red),h=i.floatToByte(u.green),d=i.floatToByte(u.blue),m=i.floatToByte(u.alpha);l(a+0,c,h,d,m),l(a+1,c,h,d,m),l(a+2,c,h,d,m),l(a+3,c,h,d,m)}function L(e,t,r,i,n){var o=4*n._index,a=n.horizontalOrigin,s=n.verticalOrigin,l=n.show;0===n.color.alpha&&(l=!1),e._allHorizontalCenter=e._allHorizontalCenter&&a===w.CENTER;var u=i[at],c=u[ot.originAndShow];c(o+0,a,s,l),c(o+1,a,s,l),c(o+2,a,s,l),c(o+3,a,s,l)}function N(e,t,r,i,n){var a=4*n._index,s=0,l=0,u=0,c=0,h=n._imageIndex;if(-1!==h){var d=r[h];s=d.x,l=d.y,u=d.width,c=d.height}var m=s+u,p=l+c,f=e._textureAtlas.texture.dimensions,v=.5*o(n.width,f.x*u),g=.5*o(n.height,f.y*c);e._maxSize=Math.max(e._maxSize,v,g);var _=i[at],y=_[ot.textureCoordinatesAndImageSize];y(a+0,s,l,v,g),y(a+1,m,l,v,g),y(a+2,m,p,v,g),y(a+3,s,p,v,g)}function B(e,t,i,n,o){var a=4*o._index,s=o.rotation,l=o.alignedAxis;0===s&&r.equals(l,r.ZERO)||(e._shaderRotation=!0);var u=l.x,c=l.y,h=l.z,d=n[at],m=d[ot.rotationAndAlignedAxis];m(a+0,s,u,c,h),m(a+1,s,u,c,h),m(a+2,s,u,c,h),m(a+3,s,u,c,h)}function F(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.scaleByDistance],u=0,c=1,h=1,d=1,m=n.scaleByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderScaleByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function z(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.translucencyByDistance],u=0,c=1,h=1,d=1,m=n.translucencyByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderTranslucencyByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function V(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.pixelOffsetScaleByDistance],u=0,c=1,h=1,d=1,m=n.pixelOffsetScaleByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderPixelOffsetScaleByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function k(e,t,r,i,n){M(e,t,r,i,n),D(e,t,r,i,n),I(e,t,r,i,n),R(e,t,r,i,n),O(e,t,r,i,n),L(e,t,r,i,n),N(e,t,r,i,n),B(e,t,r,i,n),F(e,t,r,i,n),z(e,t,r,i,n),V(e,t,r,i,n)}function U(t,r,i,n,o,s){var l;n.mode===E.SCENE3D?(l=t._baseVolume,t._boundingVolumeDirty=!0):l=t._baseVolume2D;for(var u=[],c=0;i>c;++c){var h=r[c],d=h.position,m=y._computeActualPosition(d,n,o);a(m)&&(h._setActualPosition(m),s?u.push(m):e.expand(l,m,l))}s&&e.fromPoints(u,l)}function W(e,t){var r=t.mode,i=e._billboards,n=e._billboardsToUpdate,o=e._modelMatrix;e._createVertexArray||e._mode!==r||r!==E.SCENE3D&&!d.equals(o,e.modelMatrix)?(e._mode=r,d.clone(e.modelMatrix,o),e._createVertexArray=!0,(r===E.SCENE3D||r===E.SCENE2D||r===E.COLUMBUS_VIEW)&&U(e,i,i.length,t,o,!0)):r===E.MORPHING?U(e,i,i.length,t,o,!0):(r===E.SCENE2D||r===E.COLUMBUS_VIEW)&&U(e,n,e._billboardsToUpdateIndex,t,o,!1)}function G(e,t,i,n){var o=i.camera,a=o.frustum,s=r.subtract(o.positionWC,n.center,dt),l=r.multiplyByScalar(o.directionWC,r.dot(s,o.directionWC),mt),u=Math.max(0,r.magnitude(l)-n.radius);ht.x=t.drawingBufferWidth,ht.y=t.drawingBufferHeight;var c=a.getPixelSize(ht,u),h=Math.max(c.x,c.y),d=2*h*e._maxScale*e._maxSize;e._allHorizontalCenter&&(d*=.5);var m=h*e._maxPixelOffset+e._maxEyeOffset;n.radius+=d+m}var H=y.SHOW_INDEX,q=y.POSITION_INDEX,j=y.PIXEL_OFFSET_INDEX,Y=y.EYE_OFFSET_INDEX,X=y.HORIZONTAL_ORIGIN_INDEX,Z=y.VERTICAL_ORIGIN_INDEX,Q=y.SCALE_INDEX,J=y.IMAGE_INDEX_INDEX,K=y.COLOR_INDEX,$=y.ROTATION_INDEX,et=y.ALIGNED_AXIS_INDEX,tt=y.SCALE_BY_DISTANCE_INDEX,rt=y.TRANSLUCENCY_BY_DISTANCE_INDEX,it=y.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX,nt=y.NUMBER_OF_PROPERTIES,ot={positionHigh:0,positionLow:1,pixelOffsetAndTranslate:2,eyeOffsetAndScale:3,textureCoordinatesAndImageSize:4,originAndShow:5,direction:6,pickColor:7,color:7,rotationAndAlignedAxis:8,scaleByDistance:9,translucencyByDistance:10,pixelOffsetScaleByDistance:11},at="all",st="color",lt="pick",ut=function(t){t=o(t,o.EMPTY_OBJECT),this._textureAtlas=void 0,this._textureAtlasGUID=void 0,this._destroyTextureAtlas=!0,this._sp=void 0,this._rs=void 0,this._vaf=void 0,this._spPick=void 0,this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!1,this._shaderRotation=!1,this._compiledShaderRotation=!1,this._compiledShaderRotationPick=!1,this._shaderScaleByDistance=!1,this._compiledShaderScaleByDistance=!1,this._compiledShaderScaleByDistancePick=!1,this._shaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistancePick=!1,this._shaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistancePick=!1,this._propertiesChanged=new Uint32Array(nt),this._maxSize=0,this._maxEyeOffset=0,this._maxScale=1,this._maxPixelOffset=0,this._allHorizontalCenter=!0,this._baseVolume=new e,this._baseVolumeWC=new e,this._baseVolume2D=new e,this._boundingVolume=new e,this._boundingVolumeDirty=!1,this._colorCommands=[],this._pickCommands=[],this.modelMatrix=d.clone(o(t.modelMatrix,d.IDENTITY)),this._modelMatrix=d.clone(d.IDENTITY),this.debugShowBoundingVolume=o(t.debugShowBoundingVolume,!1),this._mode=E.SCENE3D,this._buffersUsage=[m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW];var r=this;this._uniforms={u_atlas:function(){return r._textureAtlas.texture}}};s(ut.prototype,{length:{get:function(){return T(this),this._billboards.length}},textureAtlas:{get:function(){return this._textureAtlas},set:function(e){this._textureAtlas!==e&&(this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._textureAtlas=e,this._createVertexArray=!0)}},destroyTextureAtlas:{get:function(){return this._destroyTextureAtlas},set:function(e){this._destroyTextureAtlas=e}}}),ut.prototype.add=function(e){var t=new y(e,this);return t._index=this._billboards.length,this._billboards.push(t),this._createVertexArray=!0,t},ut.prototype.remove=function(e){return this.contains(e)?(this._billboards[e._index]=null,this._billboardsRemoved=!0,this._createVertexArray=!0,e._destroy(),!0):!1},ut.prototype.removeAll=function(){this._destroyBillboards(),this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!0},ut.prototype._updateBillboard=function(e,t){e._dirty||(this._billboardsToUpdate[this._billboardsToUpdateIndex++]=e),++this._propertiesChanged[t]},ut.prototype.contains=function(e){return a(e)&&e._billboardCollection===this},ut.prototype.get=function(e){return T(this),this._billboards[e]},ut.prototype.computeNewBuffersUsage=function(){for(var e=this._buffersUsage,t=!1,r=this._propertiesChanged,i=0;nt>i;++i){var n=0===r[i]?m.STATIC_DRAW:m.STREAM_DRAW;t=t||e[i]!==n,e[i]=n}return t};var ct=new c,ht=new t,dt=new r,mt=new r;return ut.prototype.update=function(t,r,i){var n=this._billboards,o=n.length,s=this._textureAtlas;if(!a(s)){s=this._textureAtlas=new b({context:t});for(var l=0;o>l;++l)n[l]._loadImage()}var u=s.textureCoordinates;if(0!==u.length){T(this),W(this,r),n=this._billboards,o=n.length;var c=this._billboardsToUpdate,h=this._billboardsToUpdateIndex,m=this._propertiesChanged,v=s.guid,y=this._createVertexArray||this._textureAtlasGUID!==v;this._textureAtlasGUID=v;var w,x=r.passes,R=x.pick;if(y||!R&&this.computeNewBuffersUsage()){this._createVertexArray=!1;for(var U=0;nt>U;++U)m[U]=0;if(this._vaf=this._vaf&&this._vaf.destroy(),o>0){this._vaf=A(t,o,this._buffersUsage),w=this._vaf.writers;for(var at=0;o>at;++at){var ut=this._billboards[at];ut._dirty=!1,k(this,t,u,w,ut)}this._vaf.commit(P(t))}this._billboardsToUpdateIndex=0}else if(h>0){var ct=[];if(m[q]&&ct.push(M),m[j]&&ct.push(D),(m[Y]||m[Q])&&ct.push(I),m[J]&&ct.push(N),m[K]&&ct.push(O),(m[X]||m[Z]||m[H])&&ct.push(L),(m[$]||m[et])&&ct.push(B),m[tt]&&ct.push(F),m[rt]&&ct.push(z),m[it]&&ct.push(V),w=this._vaf.writers,h/o>.1){for(var ht=0;h>ht;++ht){var dt=c[ht];
dt._dirty=!1;for(var mt=0;mt<ct.length;++mt)ct[mt](this,t,u,w,dt)}this._vaf.commit(P(t))}else{for(var pt=0;h>pt;++pt){var ft=c[pt];ft._dirty=!1;for(var vt=0;vt<ct.length;++vt)ct[vt](this,t,u,w,ft);this._vaf.subCommit(4*ft._index,4)}this._vaf.endSubCommits()}this._billboardsToUpdateIndex=0}if(h>1.5*o&&(c.length=o),a(this._vaf)&&a(this._vaf.vaByPurpose)){this._boundingVolumeDirty&&(this._boundingVolumeDirty=!1,e.transform(this._baseVolume,this.modelMatrix,this._baseVolumeWC));var gt,_t=d.IDENTITY;r.mode===E.SCENE3D?(_t=this.modelMatrix,gt=e.clone(this._baseVolumeWC,this._boundingVolume)):gt=e.clone(this._baseVolume2D,this._boundingVolume),G(this,t,r,gt);var yt,Ct,wt,St;if(x.render){var Et=this._colorCommands;for(a(this._rs)||(this._rs=t.createRenderState({depthTest:{enabled:!0},blending:C.ALPHA_BLEND})),(!a(this._sp)||this._shaderRotation&&!this._compiledShaderRotation||this._shaderScaleByDistance&&!this._compiledShaderScaleByDistance||this._shaderTranslucencyByDistance&&!this._compiledShaderTranslucencyByDistance||this._shaderPixelOffsetScaleByDistance&&!this._compiledShaderPixelOffsetScaleByDistance)&&(this._sp=t.replaceShaderProgram(this._sp,p({defines:[this._shaderRotation?"ROTATION":"",this._shaderScaleByDistance?"EYE_DISTANCE_SCALING":"",this._shaderTranslucencyByDistance?"EYE_DISTANCE_TRANSLUCENCY":"",this._shaderPixelOffsetScaleByDistance?"EYE_DISTANCE_PIXEL_OFFSET":""],sources:[_]}),g,ot),this._compiledShaderRotation=this._shaderRotation,this._compiledShaderScaleByDistance=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistance=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistance=this._shaderPixelOffsetScaleByDistance),yt=this._vaf.vaByPurpose[st],Ct=yt.length,Et.length=Ct,St=0;Ct>St;++St)wt=Et[St],a(wt)||(wt=Et[St]=new f({pass:S.OPAQUE,owner:this})),wt.boundingVolume=gt,wt.modelMatrix=_t,wt.count=yt[St].indicesCount,wt.shaderProgram=this._sp,wt.uniformMap=this._uniforms,wt.vertexArray=yt[St].va,wt.renderState=this._rs,wt.debugShowBoundingVolume=this.debugShowBoundingVolume,i.push(wt)}if(R){var bt=this._pickCommands;for((!a(this._spPick)||this._shaderRotation&&!this._compiledShaderRotationPick||this._shaderScaleByDistance&&!this._compiledShaderScaleByDistancePick||this._shaderTranslucencyByDistance&&!this._compiledShaderTranslucencyByDistancePick||this._shaderPixelOffsetScaleByDistance&&!this._compiledShaderPixelOffsetScaleByDistancePick)&&(this._spPick=t.replaceShaderProgram(this._spPick,p({defines:["RENDER_FOR_PICK",this._shaderRotation?"ROTATION":"",this._shaderScaleByDistance?"EYE_DISTANCE_SCALING":"",this._shaderTranslucencyByDistance?"EYE_DISTANCE_TRANSLUCENCY":"",this._shaderPixelOffsetScaleByDistance?"EYE_DISTANCE_PIXEL_OFFSET":""],sources:[_]}),p({defines:["RENDER_FOR_PICK"],sources:[g]}),ot),this._compiledShaderRotationPick=this._shaderRotation,this._compiledShaderScaleByDistancePick=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistancePick=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistancePick=this._shaderPixelOffsetScaleByDistance),yt=this._vaf.vaByPurpose[lt],Ct=yt.length,bt.length=Ct,St=0;Ct>St;++St)wt=bt[St],a(wt)||(wt=bt[St]=new f({pass:S.OPAQUE,owner:this})),wt.boundingVolume=gt,wt.modelMatrix=_t,wt.count=yt[St].indicesCount,wt.shaderProgram=this._spPick,wt.uniformMap=this._uniforms,wt.vertexArray=yt[St].va,wt.renderState=this._rs,i.push(wt)}}}},ut.prototype.isDestroyed=function(){return!1},ut.prototype.destroy=function(){return this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._sp=this._sp&&this._sp.destroy(),this._spPick=this._spPick&&this._spPick.destroy(),this._vaf=this._vaf&&this._vaf.destroy(),this._destroyBillboards(),l(this)},ut.prototype._destroyBillboards=function(){for(var e=this._billboards,t=e.length,r=0;t>r;++r)e[r]&&e[r]._destroy()},ut}),r("DataSources/Property",["../Core/defined","../Core/defineProperties","../Core/DeveloperError"],function(e,t,r){"use strict";var i=function(){r.throwInstantiationError()};return t(i.prototype,{isConstant:{get:r.throwInstantiationError},definitionChanged:{get:r.throwInstantiationError}}),i.prototype.getValue=r.throwInstantiationError,i.prototype.equals=r.throwInstantiationError,i.equals=function(t,r){return t===r||e(t)&&t.equals(r)},i.arrayEquals=function(t,r){if(t===r)return!0;if(!e(t)||!e(r)||t.length!==r.length)return!1;for(var n=t.length,o=0;n>o;o++)if(!i.equals(t[o],r[o]))return!1;return!0},i.isConstant=function(t){return!e(t)||t.isConstant},i.getValueOrUndefined=function(t,r,i){return e(t)?t.getValue(r,i):void 0},i.getValueOrDefault=function(t,r,i,n){var o;return e(t)&&(o=t.getValue(r,n)),e(o)||(o=i),o},i.getValueOrClonedDefault=function(t,r,i,n){var o;return e(t)&&(o=t.getValue(r,n)),e(o)||(o=i.clone(o)),o},i}),r("DataSources/BillboardVisualizer",["../Core/AssociativeArray","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/BillboardCollection","../Scene/HorizontalOrigin","../Scene/VerticalOrigin","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r){var i=e._billboardVisualizerIndex;if(n(i)){var o=t.get(i);o.show=!1,o.image=void 0,e._billboardVisualizerIndex=void 0,r.push(i)}}var m=i.WHITE,p=r.ZERO,f=t.ZERO,v=1,g=0,_=r.ZERO,y=u.CENTER,C=c.CENTER,w=new r,S=new i,E=new r,b=new t,T=new s,x=new s,P=new s,A=function(t,r){var i=new l;t.primitives.add(i),r.collectionChanged.addEventListener(A.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._billboardCollection=i,this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return A.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,r=this._billboardCollection,i=this._unusedIndexes,o=0,a=t.length;a>o;o++){var s,l,u=t[o],c=u._billboard,A=u._billboardVisualizerIndex,M=u.isAvailable(e)&&h.getValueOrDefault(c._show,e,!0);if(M&&(w=h.getValueOrUndefined(u._position,e,w),s=h.getValueOrUndefined(c._image,e),M=n(w)&&n(s)),M){if(n(A))l=r.get(A);else{var D=i.length;D>0?(A=i.pop(),l=r.get(A)):(A=r.length,l=r.add()),u._billboardVisualizerIndex=A,l.id=u,l.image=void 0}l.show=M,l.image=s,l.position=w,l.color=h.getValueOrDefault(c._color,e,m,S),l.eyeOffset=h.getValueOrDefault(c._eyeOffset,e,p,E),l.pixelOffset=h.getValueOrDefault(c._pixelOffset,e,f,b),l.scale=h.getValueOrDefault(c._scale,e,v),l.rotation=h.getValueOrDefault(c._rotation,e,g),l.alignedAxis=h.getValueOrDefault(c._alignedAxis,e,_),l.horizontalOrigin=h.getValueOrDefault(c._horizontalOrigin,e,y),l.verticalOrigin=h.getValueOrDefault(c._verticalOrigin,e,C),l.width=h.getValueOrUndefined(c._width,e),l.height=h.getValueOrUndefined(c._height,e),l.scaleByDistance=h.getValueOrUndefined(c._scaleByDistance,e,T),l.translucencyByDistance=h.getValueOrUndefined(c._translucencyByDistance,e,x),l.pixelOffsetScaleByDistance=h.getValueOrUndefined(c._pixelOffsetScaleByDistance,e,P)}else d(u,r,i)}return!0},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(A.prototype._onCollectionChanged,this);for(var e=this._entitiesToVisualize.values,t=e.length,r=0;t>r;r++)e[r]._billboardVisualizerIndex=void 0;return this._scene.primitives.remove(this._billboardCollection),o(this)},A.prototype._onCollectionChanged=function(e,t,r,i){var o,a,s=this._billboardCollection,l=this._unusedIndexes,u=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],n(a._billboard)&&n(a._position)&&u.set(a.id,a);for(o=i.length-1;o>-1;o--)a=i[o],n(a._billboard)&&n(a._position)?u.set(a.id,a):(d(a,s,l),u.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],d(a,s,l),u.remove(a.id)},A}),r("DataSources/ConstantProperty",["../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/isArray"],function(e,t,r,i){"use strict";var n=function(e){this._value=void 0,this._simple=!0,this._definitionChanged=new r,this.setValue(e)};return e(n.prototype,{isConstant:{value:!0},definitionChanged:{get:function(){return this._definitionChanged}}}),n.prototype.getValue=function(e,t){return this._simple?this._value:this._value.clone(t)},n.prototype.setValue=function(e){var t=this._value,r=this._simple;(r&&t!==e||!r&&!t.equals(e))&&(r="object"!=typeof e||i(e),this._value=r?e:e.clone(),this._simple=r,this._definitionChanged.raiseEvent(this))},n.prototype.equals=function(e){return this===e||e instanceof n&&(this._simple&&this._value===e._value||!this._simple&&this._value.equals(e._value))},n}),r("DataSources/ColorMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./ConstantProperty","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e){this._definitionChanged=new n,this._color=void 0,this._colorSubscription=void 0,this.color=e};return l.fromColor=function(e){return new l(new o(e))},r(l.prototype,{isConstant:{get:function(){return s.isConstant(this._color)}},definitionChanged:{get:function(){return this._definitionChanged}},color:a("color")}),l.prototype.getType=function(){return"Color"},l.prototype.getValue=function(r,i){return t(i)||(i={}),i.color=s.getValueOrClonedDefault(this._color,r,e.WHITE,i.color),i},l.prototype.equals=function(e){return this===e||e instanceof l&&s.equals(this._color,e._color)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/Entity",["../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){r(t)||(t=e()),this._availability=void 0,this._id=t,this._definitionChanged=new o,this._name=void 0,this._parent=void 0,this._propertyNames=["billboard","description","ellipse","ellipsoid","label","model","orientation","path","point","polygon","polyline","position","rectangle","viewFrom","wall"],this._billboard=void 0,this._billboardSubscription=void 0,this._description=void 0,this._descriptionSubscription=void 0,this._ellipse=void 0,this._ellipseSubscription=void 0,this._ellipsoid=void 0,this._ellipsoidSubscription=void 0,this._label=void 0,this._labelSubscription=void 0,this._model=void 0,this._modelSubscription=void 0,this._orientation=void 0,this._orientationSubscription=void 0,this._path=void 0,this._pathSubscription=void 0,this._point=void 0,this._pointSubscription=void 0,this._polygon=void 0,this._polygonSubscription=void 0,this._polyline=void 0,this._polylineSubscription=void 0,this._position=void 0,this._positionSubscription=void 0,this._rectangle=void 0,this._rectangleSubscription=void 0,this._viewFrom=void 0,this._viewFromSubscription=void 0,this._wall=void 0,this._wallSubscription=void 0};return i(s.prototype,{availability:a("availability"),id:{get:function(){return this._id}},definitionChanged:{get:function(){return this._definitionChanged}},name:{configurable:!1,get:function(){return this._name},set:function(e){var t=this._name;t!==e&&(this._name=e,this._definitionChanged.raiseEvent(this,"name",e,t))}},parent:a("parent"),propertyNames:{get:function(){return this._propertyNames}},billboard:a("billboard"),description:a("description"),ellipse:a("ellipse"),ellipsoid:a("ellipsoid"),label:a("label"),model:a("model"),orientation:a("orientation"),path:a("path"),point:a("point"),polygon:a("polygon"),polyline:a("polyline"),position:a("position"),rectangle:a("rectangle"),viewFrom:a("viewFrom"),wall:a("wall")}),s.prototype.isAvailable=function(e){var t=this._availability;return!r(t)||t.contains(e)},s.prototype.addProperty=function(e){var t=this._propertyNames;t.push(e),Object.defineProperty(this,e,a(e,!0))},s.prototype.removeProperty=function(e){this._propertyNames,this._propertyNames.push(e),delete this[e]},s.prototype.merge=function(e){this.name=t(this.name,e.name),this.availability=t(e.availability,this.availability);for(var i=this._propertyNames,n=i.length,o=0;n>o;o++){var a=i[o],s=this[a],l=e[a];r(l)&&(r(s)?r(s.merge)&&s.merge(l):this[a]=r(l.merge)&&r(l.clone)?l.clone():l)}},s}),r("DataSources/EntityCollection",["../Core/AssociativeArray","../Core/createGuid","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Iso8601","../Core/JulianDate","../Core/RuntimeError","../Core/TimeInterval","./Entity"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){if(0===e._suspendCount){var t=e._addedEntities,r=e._removedEntities,i=e._changedEntities;(0!==i.length||0!==t.length||0!==r.length)&&(e._collectionChanged.raiseEvent(e,t.values,r.values,i.values),t.removeAll(),r.removeAll(),i.removeAll())}}var d=function(){this._entities=new e,this._addedEntities=new e,this._removedEntities=new e,this._changedEntities=new e,this._suspendCount=0,this._collectionChanged=new o,this._id=t()};return d.prototype.suspendEvents=function(){this._suspendCount++},d.prototype.resumeEvents=function(){this._suspendCount--,h(this)},d.collectionChangedEventCallback=void 0,i(d.prototype,{collectionChanged:{get:function(){return this._collectionChanged}},id:{get:function(){return this._id}},entities:{get:function(){return this._entities.values}}}),d.prototype.computeAvailability=function(){for(var e=a.MAXIMUM_VALUE,t=a.MINIMUM_VALUE,i=this._entities.values,n=0,o=i.length;o>n;n++){var l=i[n],c=l.availability;if(r(c)){var h=c.start,d=c.stop;s.lessThan(h,e)&&!h.equals(a.MINIMUM_VALUE)&&(e=h),s.greaterThan(d,t)&&!d.equals(a.MAXIMUM_VALUE)&&(t=d)}}return a.MAXIMUM_VALUE.equals(e)&&(e=a.MINIMUM_VALUE),a.MINIMUM_VALUE.equals(t)&&(t=a.MAXIMUM_VALUE),new u({start:e,stop:t})},d.prototype.add=function(e){var t=e.id,r=this._entities;if(r.contains(t))throw new l("An entity with id "+t+" already exists in this collection.");r.set(t,e),this._removedEntities,this._removedEntities.remove(t)||this._addedEntities.set(t,e),e.definitionChanged.addEventListener(d.prototype._onEntityDefinitionChanged,this),h(this)},d.prototype.remove=function(e){return this.removeById(e.id)},d.prototype.removeById=function(e){var t=this._entities,r=t.get(e);return this._entities.remove(e)?(this._addedEntities.remove(e)||(this._removedEntities.set(e,r),this._changedEntities.remove(e)),this._entities.remove(e),r.definitionChanged.removeEventListener(d.prototype._onEntityDefinitionChanged,this),h(this),!0):!1},d.prototype.removeAll=function(){for(var e=this._entities,t=e.length,i=e.values,n=this._addedEntities,o=this._removedEntities,a=0;t>a;a++){var s=i[a],l=s.id,u=n.get(l);r(u)||(s.definitionChanged.removeEventListener(d.prototype._onEntityDefinitionChanged,this),o.set(l,s))}e.removeAll(),n.removeAll(),this._changedEntities.removeAll(),h(this)},d.prototype.getById=function(e){return this._entities.get(e)},d.prototype.getOrCreateEntity=function(e){var t=this._entities.get(e);return r(t)||(t=new c(e),this.add(t)),t},d.prototype._onEntityDefinitionChanged=function(e){var t=e.id;this._addedEntities.contains(t)||this._changedEntities.set(t,e),h(this)},d}),r("DataSources/CompositeEntityCollection",["../Core/createGuid","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Math","./Entity","./EntityCollection"],function(e,t,r,i,n,o,a){"use strict";function s(e){for(var t=e.propertyNames,r=t.length,i=0;r>i;i++)e[t[i]]=void 0}function l(e,t,r,i){m[0]=r,m[1]=i.id,t[JSON.stringify(m)]=i.definitionChanged.addEventListener(p.prototype._onDefinitionChanged,e)}function u(e,t,r,i){m[0]=r,m[1]=i.id;var n=JSON.stringify(m);t[n](),t[n]=void 0}function c(e){if(e._shouldRecomposite=!0,0===e._suspendCount){var r,i,n,c,h,d,m=e._collections,f=m.length,v=e._collectionsCopy,g=v.length,_=e._composite,y=new a,C=e._eventHash;for(r=0;g>r;r++)for(h=v[r],h.collectionChanged.removeEventListener(p.prototype._onCollectionChanged,e),n=h.entities,d=h.id,c=n.length-1;c>-1;c--)i=n[c],u(e,C,d,i);for(r=f-1;r>=0;r--)for(h=m[r],h.collectionChanged.addEventListener(p.prototype._onCollectionChanged,e),n=h.entities,d=h.id,c=n.length-1;c>-1;c--){i=n[c],l(e,C,d,i);var w=y.getById(i.id);t(w)||(w=_.getById(i.id),t(w)?s(w):w=new o(i.id),y.add(w)),w.merge(i)}e._collectionsCopy=m.slice(0),_.suspendEvents(),_.removeAll();var S=y.entities;for(r=0;r<S.length;r++)_.add(S[r]);_.resumeEvents()}}function h(e,t){var r=e.indexOf(t);return r}function d(e,t,r){var i=e._collections;if(t=n.clamp(t,0,i.length-1),r=n.clamp(r,0,i.length-1),t!==r){var o=i[t];i[t]=i[r],i[r]=o,c(e)}}var m=new Array(2),p=function(r){this._composite=new a,this._suspendCount=0,this._collections=t(r)?r.slice():[],this._collectionsCopy=[],this._id=e(),this._eventHash={},c(this),this._shouldRecomposite=!1};return r(p.prototype,{collectionChanged:{get:function(){return this._composite._collectionChanged}},id:{get:function(){return this._id}},entities:{get:function(){return this._composite.entities}}}),p.prototype.addCollection=function(e,r){var i=t(r);i?this._collections.splice(r,0,e):(r=this._collections.length,this._collections.push(e)),c(this)},p.prototype.removeCollection=function(e){var t=this._collections.indexOf(e);return-1!==t?(this._collections.splice(t,1),c(this),!0):!1},p.prototype.removeAllCollections=function(){this._collections.length=0,c(this)},p.prototype.containsCollection=function(e){return-1!==this._collections.indexOf(e)},p.prototype.indexOfCollection=function(e){return this._collections.indexOf(e)},p.prototype.getCollection=function(e){return this._collections[e]},p.prototype.getCollectionsLength=function(){return this._collections.length},p.prototype.raiseCollection=function(e){var t=h(this._collections,e);d(this,t,t+1)},p.prototype.lowerCollection=function(e){var t=h(this._collections,e);d(this,t,t-1)},p.prototype.raiseCollectionToTop=function(e){var t=h(this._collections,e);t!==this._collections.length-1&&(this._collections.splice(t,1),this._collections.push(e),c(this))},p.prototype.lowerCollectionToBottom=function(e){var t=h(this._collections,e);0!==t&&(this._collections.splice(t,1),this._collections.splice(0,0,e),c(this))},p.prototype.suspendEvents=function(){this._suspendCount++,this._composite.suspendEvents()},p.prototype.resumeEvents=function(){this._suspendCount--,this._shouldRecomposite&&0===this._suspendCount&&(c(this),this._shouldRecomposite=!1),this._composite.resumeEvents()},p.prototype.computeAvailability=function(){return this._composite.computeAvailability()},p.prototype.getById=function(e){return this._composite.getById(e)},p.prototype._onCollectionChanged=function(e,r,i){var n=this._collectionsCopy,a=n.length,c=this._composite;c.suspendEvents();var h,d,m,p,f=i.length,v=this._eventHash,g=e.id;for(h=0;f>h;h++){var _=i[h];u(this,v,g,_);var y=_.id;for(d=a-1;d>=0;d--)m=n[d].getById(y),t(m)&&(t(p)||(p=c.getById(y),s(p)),p.merge(m));t(p)||c.removeById(y)}var C=r.length;for(h=0;C>h;h++){var w=r[h];l(this,v,g,w);var S=w.id;for(d=a-1;d>=0;d--)m=n[d].getById(S),t(m)&&(t(p)||(p=c.getById(S),t(p)?s(p):(p=new o(S),c.add(p))),p.merge(m))}c.resumeEvents()},p.prototype._onDefinitionChanged=function(e,r){for(var i=this._collections,n=this._composite,o=i.length,a=e.id,s=n.getById(a),l=s[r],u=!0,c=o-1;c>=0;c--){var h=i[c].getById(e.id);if(t(h)){var d=h[r];if(t(d)){if(u){if(u=!1,!t(d.merge)||!t(d.clone)){l=d;break}l=d.clone(l)}l.merge(d)}}}s[r]=l},p}),r("DataSources/CompositeProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","../Core/TimeIntervalCollection","./Property"],function(e,t,r,i,n,o,a){"use strict";function s(t,r,i,n){var o=function(){i.raiseEvent(t)},a=[];r.removeAll();for(var s=n.length,l=0;s>l;l++){var u=n.get(l);e(u.data)&&-1===a.indexOf(u.data)&&r.add(u.data.definitionChanged,o)}}var l=function(){this._eventHelper=new n,this._definitionChanged=new i,this._intervals=new o,this._intervals.changedEvent.addEventListener(l.prototype._intervalsChanged,this)};return t(l.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}}}),l.prototype.getValue=function(t,r){var i=this._intervals.findDataForIntervalContainingDate(t);return e(i)?i.getValue(t,r):void 0},l.prototype.equals=function(e){return this===e||e instanceof l&&this._intervals.equals(e._intervals,a.equals)},l.prototype._intervalsChanged=function(){s(this,this._eventHelper,this._definitionChanged,this._intervals),this._definitionChanged.raiseEvent(this)},l}),r("DataSources/CompositeMaterialProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./CompositeProperty","./Property"],function(e,t,r,i,n,o){"use strict";var a=function(){this._definitionChanged=new i,this._composite=new n,this._composite.definitionChanged.addEventListener(a.prototype._raiseDefinitionChanged,this)};return t(a.prototype,{isConstant:{get:function(){return this._composite.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._composite._intervals}}}),a.prototype.getType=function(t){var r=this._composite._intervals.findDataForIntervalContainingDate(t);return e(r)?r.getType(t):void 0},a.prototype.getValue=function(t,r){var i=this._composite._intervals.findDataForIntervalContainingDate(t);return e(i)?i.getValue(t,r):void 0},a.prototype.equals=function(e){return this===e||e instanceof a&&this._composite.equals(e._composite,o.equals)},a.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},a}),r("DataSources/CompositePositionProperty",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./CompositeProperty","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){this._referenceFrame=e(t,o.FIXED),this._definitionChanged=new n,this._composite=new a,this._composite.definitionChanged.addEventListener(l.prototype._raiseDefinitionChanged,this)};return r(l.prototype,{isConstant:{get:function(){return this._composite.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._composite.intervals}},referenceFrame:{get:function(){return this._referenceFrame},set:function(e){this._referenceFrame=e}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,o.FIXED,t)},l.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._composite._intervals.findDataForIntervalContainingDate(e);return t(n)?n.getValueInReferenceFrame(e,r,i):void 0},l.prototype.equals=function(e){return this===e||e instanceof l&&this._referenceFrame===e._referenceFrame&&this._composite.equals(e._composite,s.equals)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/PositionProperty",["../Core/Cartesian3","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix3","../Core/ReferenceFrame","../Core/Transforms"],function(e,t,r,i,n,o,a){"use strict";var s=function(){i.throwInstantiationError()};r(s.prototype,{isConstant:{get:i.throwInstantiationError},definitionChanged:{get:i.throwInstantiationError},referenceFrame:{get:i.throwInstantiationError}}),s.prototype.getValue=i.throwInstantiationError,s.prototype.getValueInReferenceFrame=i.throwInstantiationError,s.prototype.equals=i.throwInstantiationError;var l=new n;return s.convertToReferenceFrame=function(r,i,s,u,c){if(!t(i))return i;if(t(c)||(c=new e),s===u)return e.clone(i,c);var h=a.computeIcrfToFixedMatrix(r,l);return t(h)||(h=a.computeTemeToPseudoFixedMatrix(r,l)),s===o.INERTIAL?n.multiplyByVector(h,i,c):s===o.FIXED?n.multiplyByVector(n.transpose(h,l),i,c):void 0},s}),r("DataSources/ConstantPositionProperty",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./PositionProperty"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r,i){this._definitionChanged=new o,this._value=e.clone(r),this._referenceFrame=t(i,a.FIXED)};return i(l.prototype,{isConstant:{get:function(){return!r(this._value)||this._referenceFrame===a.FIXED}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},l.prototype.setValue=function(t,i){var n=!1;e.equals(this._value,t)||(n=!0,this._value=e.clone(t)),r(i)&&this._referenceFrame!==i&&(n=!0,this._referenceFrame=i),n&&this._definitionChanged.raiseEvent(this)},l.prototype.getValueInReferenceFrame=function(e,t,r){return s.convertToReferenceFrame(e,this._value,this._referenceFrame,t,r)},l.prototype.equals=function(t){return this===t||t instanceof l&&e.equals(this._value,t._value)&&this._referenceFrame===t._referenceFrame},l}),r("Scene/LabelStyle",["../Core/freezeObject"],function(e){"use strict";var t={FILL:0,OUTLINE:1,FILL_AND_OUTLINE:2};return e(t)}),r("DataSources/DataSourceClock",["../Core/Clock","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/JulianDate","./createPropertyDescriptor"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(){this._startTime=void 0,this._stopTime=void 0,this._currentTime=void 0,this._clockRange=void 0,this._clockStep=void 0,this._multiplier=void 0,this._definitionChanged=new o};return i(l.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},startTime:s("startTime"),stopTime:s("stopTime"),currentTime:s("currentTime"),clockRange:s("clockRange"),clockStep:s("clockStep"),multiplier:s("multiplier")}),l.prototype.clone=function(e){return r(e)||(e=new l),e.startTime=this.startTime,e.stopTime=this.stopTime,e.currentTime=this.currentTime,e.clockRange=this.clockRange,e.clockStep=this.clockStep,e.multiplier=this.multiplier,e},l.prototype.equals=function(e){return this===e||r(e)&&a.equals(this.startTime,e.startTime)&&a.equals(this.stopTime,e.stopTime)&&a.equals(this.currentTime,e.currentTime)&&this.clockRange===e.clockRange&&this.clockStep===e.clockStep&&this.multiplier===e.multiplier},l.prototype.merge=function(e){this.startTime=t(this.startTime,e.startTime),this.stopTime=t(this.stopTime,e.stopTime),this.currentTime=t(this.currentTime,e.currentTime),this.clockRange=t(this.clockRange,e.clockRange),this.clockStep=t(this.clockStep,e.clockStep),this.multiplier=t(this.multiplier,e.multiplier)},l.prototype.getValue=function(t){return r(t)||(t=new e),t.startTime=this.startTime,t.stopTime=this.stopTime,t.clockRange=this.clockRange,t.clockStep=this.clockStep,t.multiplier=this.multiplier,t.currentTime=this.currentTime,t},l}),r("DataSources/EllipseGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._semiMajorAxis=void 0,this._semiMajorAxisSubscription=void 0,this._semiMinorAxis=void 0,this._semiMinorAxisSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._numberOfVerticalLines=void 0,this._numberOfVerticalLinesSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},semiMajorAxis:o("semiMajorAxis"),semiMinorAxis:o("semiMinorAxis"),rotation:o("rotation"),show:o("show"),material:o("material"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),numberOfVerticalLines:o("numberOfVerticalLines")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.rotation=this.rotation,e.semiMajorAxis=this.semiMajorAxis,e.semiMinorAxis=this.semiMinorAxis,e.show=this.show,e.material=this.material,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.numberOfVerticalLines=this.numberOfVerticalLines,e},a.prototype.merge=function(t){this.rotation=e(this.rotation,t.rotation),this.semiMajorAxis=e(this.semiMajorAxis,t.semiMajorAxis),this.semiMinorAxis=e(this.semiMinorAxis,t.semiMinorAxis),this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.numberOfVerticalLines=e(this.numberOfVerticalLines,t.numberOfVerticalLines)},a}),r("DataSources/EllipsoidGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._radii=void 0,this._radiiSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._stackPartitions=void 0,this._stackPartitionsSubscription=void 0,this._slicePartitions=void 0,this._slicePartitionsSubscription=void 0,this._subdivisions=void 0,this._subdivisionsSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),radii:o("radii"),material:o("material"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),stackPartitions:o("stackPartitions"),slicePartitions:o("slicePartitions"),subdivisions:o("subdivisions")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.radii=this.radii,e.material=this.material,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.stackPartitions=this.stackPartitions,e.slicePartitions=this.slicePartitions,e.subdivisions=this.subdivisions,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.radii=e(this.radii,t.radii),this.material=e(this.material,t.material),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.stackPartitions=e(this.stackPartitions,t.stackPartitions),this.slicePartitions=e(this.slicePartitions,t.slicePartitions),this.subdivisions=e(this.subdivisions,t.subdivisions)},a}),r("DataSources/GridMaterialProperty",["../Core/Cartesian2","../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o,a){"use strict";var s=t.WHITE,l=.1,u=new e(8,8),c=new e(0,0),h=new e(1,1),d=function(){this._definitionChanged=new n,this._color=void 0,this._colorSubscription=void 0,this._cellAlpha=void 0,this._cellAlphaSubscription=void 0,this._lineCount=void 0,this._lineCountSubscription=void 0,this._lineThickness=void 0,this._lineThicknessSubscription=void 0,this._lineOffset=void 0,this._lineOffsetSubscription=void 0,this.color=void 0,this.cellAlpha=void 0,this.lineCount=void 0,this.lineThickness=void 0,this.lineOffset=void 0};return i(d.prototype,{isConstant:{get:function(){return a.isConstant(this._color)&&a.isConstant(this._cellAlpha)&&a.isConstant(this._lineCount)&&a.isConstant(this._lineThickness)&&a.isConstant(this._lineOffset)}},definitionChanged:{get:function(){return this._definitionChanged}},color:o("color"),cellAlpha:o("cellAlpha"),lineCount:o("lineCount"),lineThickness:o("lineThickness"),lineOffset:o("lineOffset")}),d.prototype.getType=function(){return"Grid"
},d.prototype.getValue=function(e,t){return r(t)||(t={}),t.color=a.getValueOrClonedDefault(this._color,e,s,t.color),t.cellAlpha=a.getValueOrDefault(this._cellAlpha,e,l),t.lineCount=a.getValueOrClonedDefault(this._lineCount,e,u,t.lineCount),t.lineThickness=a.getValueOrClonedDefault(this._lineThickness,e,h,t.lineThickness),t.lineOffset=a.getValueOrClonedDefault(this._lineOffset,e,c,t.lineOffset),t},d.prototype.equals=function(e){return this===e||e instanceof d&&a.equals(this._color,e._color)&&a.equals(this._cellAlpha,e._cellAlpha)&&a.equals(this._lineCount,e._lineCount)&&a.equals(this._lineThickness,e._lineThickness)&&a.equals(this._lineOffset,e._lineOffset)},d.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},d}),r("DataSources/ImageMaterialProperty",["../Core/Cartesian2","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=new e(1,1),s=function(){this._definitionChanged=new i,this._image=void 0,this._imageSubscription=void 0,this._repeat=void 0,this._repeatSubscription=void 0};return r(s.prototype,{isConstant:{get:function(){return o.isConstant(this._image)&&o.isConstant(this._repeat)}},definitionChanged:{get:function(){return this._definitionChanged}},image:n("image"),repeat:n("repeat")}),s.prototype.getType=function(){return"Image"},s.prototype.getValue=function(e,r){return t(r)||(r={}),r.image=o.getValueOrUndefined(this._image,e),r.repeat=o.getValueOrClonedDefault(this._repeat,e,a,r.repeat),r},s.prototype.equals=function(e){return this===e||e instanceof s&&o.equals(this._image,e._image)&&o.equals(this._repeat,e._repeat)},s.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},s}),r("DataSources/LabelGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._text=void 0,this._textSubscription=void 0,this._font=void 0,this._fontSubscription=void 0,this._style=void 0,this._styleSubscription=void 0,this._fillColor=void 0,this._fillColorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},text:o("text"),font:o("font"),style:o("style"),fillColor:o("fillColor"),outlineColor:o("outlineColor"),outlineWidth:o("outlineWidth"),horizontalOrigin:o("horizontalOrigin"),verticalOrigin:o("verticalOrigin"),eyeOffset:o("eyeOffset"),pixelOffset:o("pixelOffset"),scale:o("scale"),show:o("show"),translucencyByDistance:o("translucencyByDistance"),pixelOffsetScaleByDistance:o("pixelOffsetScaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.text=this.text,e.font=this.font,e.show=this.show,e.style=this.style,e.fillColor=this.fillColor,e.outlineColor=this.outlineColor,e.outlineWidth=this.outlineWidth,e.scale=this.scale,e.horizontalOrigin=this.horizontalOrigin,e.verticalOrigin=this.verticalOrigin,e.eyeOffset=this.eyeOffset,e.pixelOffset=this.pixelOffset,e.translucencyByDistance=this._translucencyByDistance,e.pixelOffsetScaleByDistance=this._pixelOffsetScaleByDistance,e},a.prototype.merge=function(t){this.text=e(this.text,t.text),this.font=e(this.font,t.font),this.show=e(this.show,t.show),this.style=e(this.style,t.style),this.fillColor=e(this.fillColor,t.fillColor),this.outlineColor=e(this.outlineColor,t.outlineColor),this.outlineWidth=e(this.outlineWidth,t.outlineWidth),this.scale=e(this.scale,t.scale),this.horizontalOrigin=e(this.horizontalOrigin,t.horizontalOrigin),this.verticalOrigin=e(this.verticalOrigin,t.verticalOrigin),this.eyeOffset=e(this.eyeOffset,t.eyeOffset),this.pixelOffset=e(this.pixelOffset,t.pixelOffset),this.translucencyByDistance=e(this._translucencyByDistance,t._translucencyByDistance),this.pixelOffsetScaleByDistance=e(this._pixelOffsetScaleByDistance,t._pixelOffsetScaleByDistance)},a}),r("DataSources/ModelGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._minimumPixelSize=void 0,this._minimumPixelSizeSubscription=void 0,this._uri=void 0,this._uriSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),scale:o("scale"),minimumPixelSize:o("minimumPixelSize"),uri:o("uri")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.scale=this.scale,e.minimumPixelSize=this.minimumPixelSize,e.uri=this.uri,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.scale=e(this.scale,t.scale),this.minimumPixelSize=e(this.minimumPixelSize,t.minimumPixelSize),this.uri=e(this.uri,t.uri)},a}),r("DataSources/PathGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._material=void 0,this._materialSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._resolution=void 0,this._resolutionSubscription=void 0,this._leadTime=void 0,this._leadTimeSubscription=void 0,this._trailTime=void 0,this._trailTimeSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},material:o("material"),show:o("show"),width:o("width"),resolution:o("resolution"),leadTime:o("leadTime"),trailTime:o("trailTime")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.material=this.material,e.width=this.width,e.resolution=this.resolution,e.show=this.show,e.leadTime=this.leadTime,e.trailTime=this.trailTime,e},a.prototype.merge=function(t){this.material=e(this.material,t.material),this.width=e(this.width,t.width),this.resolution=e(this.resolution,t.resolution),this.show=e(this.show,t.show),this.leadTime=e(this.leadTime,t.leadTime),this.trailTime=e(this.trailTime,t.trailTime)},a}),r("DataSources/PointGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._color=void 0,this._colorSubscription=void 0,this._pixelSize=void 0,this._pixelSizeSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},color:o("color"),pixelSize:o("pixelSize"),outlineColor:o("outlineColor"),outlineWidth:o("outlineWidth"),show:o("show"),scaleByDistance:o("scaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.color=this.color,e.pixelSize=this.pixelSize,e.outlineColor=this.outlineColor,e.outlineWidth=this.outlineWidth,e.show=this.show,e.scaleByDistance=this.scaleByDistance,e},a.prototype.merge=function(t){this.color=e(this.color,t.color),this.pixelSize=e(this.pixelSize,t.pixelSize),this.outlineColor=e(this.outlineColor,t.outlineColor),this.outlineWidth=e(this.outlineWidth,t.outlineWidth),this.show=e(this.show,t.show),this.scaleByDistance=e(this.scaleByDistance,t.scaleByDistance)},a}),r("DataSources/PolygonGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._perPositionHeight=void 0,this._perPositionHeightSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),perPositionHeight:o("perPositionHeight")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.perPositionHeight=this.perPositionHeight,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.perPositionHeight=e(this.perPositionHeight,t.perPositionHeight)},a}),r("DataSources/PolylineGlowMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=e.WHITE,s=.25,l=function(){this._definitionChanged=new i,this._color=void 0,this._colorSubscription=void 0,this._glowPower=void 0,this._glowPowerSubscription=void 0};return r(l.prototype,{isConstant:{get:function(){return o.isConstant(this._color)&&o.isConstant(this._glow)}},definitionChanged:{get:function(){return this._definitionChanged}},color:n("color"),glowPower:n("glowPower")}),l.prototype.getType=function(){return"PolylineGlow"},l.prototype.getValue=function(e,r){return t(r)||(r={}),r.color=o.getValueOrClonedDefault(this._color,e,a,r.color),r.glowPower=o.getValueOrDefault(this._glowPower,e,s,r.glowPower),r},l.prototype.equals=function(e){return this===e||e instanceof l&&o.equals(this._color,e._color)&&o.equals(this._glowPower,e._glowPower)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/PolylineGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._followSurface=void 0,this._followSurfaceSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._widthSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),width:o("width"),followSurface:o("followSurface"),granularity:o("granularity")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.width=this.width,e.followSurface=this.followSurface,e.granularity=this.granularity,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.width=e(this.width,t.width),this.followSurface=e(this.followSurface,t.followSurface),this.granularity=e(this.granularity,t.granularity)},a}),r("DataSources/PolylineOutlineMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=e.WHITE,s=e.BLACK,l=0,u=function(){this._definitionChanged=new i,this._color=void 0,this._colorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0};return r(u.prototype,{isConstant:{get:function(){return o.isConstant(this._color)&&o.isConstant(this._outlineColor)&&o.isConstant(this._outlineWidth)}},definitionChanged:{get:function(){return this._definitionChanged}},color:n("color"),outlineColor:n("outlineColor"),outlineWidth:n("outlineWidth")}),u.prototype.getType=function(){return"PolylineOutline"},u.prototype.getValue=function(e,r){return t(r)||(r={}),r.color=o.getValueOrClonedDefault(this._color,e,a,r.color),r.outlineColor=o.getValueOrClonedDefault(this._outlineColor,e,s,r.outlineColor),r.outlineWidth=o.getValueOrDefault(this._outlineWidth,e,l),r},u.prototype.equals=function(e){return this===e||e instanceof u&&o.equals(this._color,e._color)&&o.equals(this._outlineColor,e._outlineColor)&&o.equals(this._outlineWidth,e._outlineWidth)},u.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},u}),r("DataSources/PositionPropertyArray",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","../Core/ReferenceFrame","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t,r){this._value=void 0,this._definitionChanged=new n,this._eventHelper=new o,this._referenceFrame=e(r,a.FIXED),this.setValue(t)};return r(l.prototype,{isConstant:{get:function(){var e=this._value;if(!t(e))return!0;for(var r=e.length,i=0;r>i;i++)if(!s.isConstant(e[i]))return!1;return!0}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},l.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._value;if(!t(n))return void 0;var o=n.length;t(i)||(i=new Array(o));for(var a=0,s=0;o>a;){var l=n[a],u=l.getValueInReferenceFrame(e,r,i[a]);t(u)&&(i[s]=u,s++),a++}return i.length=s,i},l.prototype.setValue=function(e){var r=this._eventHelper;if(r.removeAll(),t(e)){this._value=e.slice();for(var i=e.length,n=0;i>n;n++){var o=e[n];t(o)&&r.add(o.definitionChanged,l.prototype._raiseDefinitionChanged,this)}}else this._value=void 0;this._definitionChanged.raiseEvent(this)},l.prototype.equals=function(e){return this===e||e instanceof l&&this._referenceFrame===e._referenceFrame&&s.arrayEquals(this._value,e._value)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/RectangleGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._coordinates=void 0,this._coordinatesSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._closeTop=void 0,this._closeTopSubscription=void 0,this._closeBottom=void 0,this._closeBottomSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),coordinates:o("coordinates"),material:o("material"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),rotation:o("rotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),closeTop:o("closeTop"),closeBottom:o("closeBottom")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.coordinates=this.coordinates,e.material=this.material,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.rotation=this.rotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.closeTop=this.closeTop,e.closeBottom=this.closeBottom,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.coordinates=e(this.coordinates,t.coordinates),this.material=e(this.material,t.material),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.rotation=e(this.rotation,t.rotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.closeTop=e(this.closeTop,t.closeTop),this.closeBottom=e(this.closeBottom,t.closeBottom)},a}),r("DataSources/ReferenceProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/RuntimeError","./Property"],function(e,t,r,i,n,o){"use strict";function a(t){var r=t._targetProperty;if(!e(r)){var i=t._targetEntity;if(!e(i)){var o=t._targetCollection;if(i=o.getById(t._targetId),!e(i))throw new n('target entity "'+t._targetId+'" could not be resolved.');i.definitionChanged.addEventListener(s.prototype._onTargetEntityDefinitionChanged,t),t._targetEntity=i}var a=t._targetPropertyNames;r=i;for(var l=a.length,u=0;l>u;u++)if(r=r[a[u]],!e(r))throw new n('targetProperty "'+a[u]+'" could not be resolved.');t._targetProperty=r}return r}var s=function(e,t,r){this._targetCollection=e,this._targetId=t,this._targetPropertyNames=r,this._targetProperty=void 0,this._targetEntity=void 0,this._definitionChanged=new i,e.collectionChanged.addEventListener(s.prototype._onCollectionChanged,this)};return t(s.prototype,{isConstant:{get:function(){return o.isConstant(a(this))}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return a(this).referenceFrame}},targetId:{get:function(){return this._targetId}},targetCollection:{get:function(){return this._targetCollection}},targetPropertyNames:{get:function(){return this._targetPropertyNames}},resolvedProperty:{get:function(){return a(this)}}}),s.fromString=function(e,t){for(var r,i=[],n=!0,o=!1,a="",l=0;l<t.length;++l){var u=t.charAt(l);o?(a+=u,o=!1):"\\"===u?o=!0:n&&"#"===u?(r=a,n=!1,a=""):n||"."!==u?a+=u:(i.push(a),a="")}return i.push(a),new s(e,r,i)},s.prototype.getValue=function(e,t){return a(this).getValue(e,t)},s.prototype.getValueInReferenceFrame=function(e,t,r){return a(this).getValueInReferenceFrame(e,t,r)},s.prototype.getType=function(e){return a(this).getType(e)},s.prototype.equals=function(e){if(this===e)return!0;var t=this._targetPropertyNames,r=e._targetPropertyNames;if(this._targetCollection!==e._targetCollection||this._targetId!==e._targetId||t.length!==r.length)return!1;for(var i=this._targetPropertyNames.length,n=0;i>n;n++)if(t[n]!==r[n])return!1;return!0},s.prototype._onTargetEntityDefinitionChanged=function(e,t){this._targetPropertyNames[0]===t&&(this._targetProperty=void 0,this._definitionChanged.raiseEvent(this))},s.prototype._onCollectionChanged=function(t,r,i){var n=this._targetEntity;e(n)&&-1!==i.indexOf(n)&&(n.definitionChanged.removeEventListener(s.prototype._onTargetEntityDefinitionChanged,this),this._targetProperty=void 0,this._targetEntity=void 0,this._definitionChanged.raiseEvent(this))},s}),r("DataSources/SampledProperty",["../Core/binarySearch","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ExtrapolationType","../Core/JulianDate","../Core/LinearApproximation"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,r){var i,n=e.length,o=r.length,a=n+o;if(e.length=a,n!==t){var s=n-1;for(i=a-1;i>=t;i--)e[i]=e[s--]}for(i=0;o>i;i++)e[t++]=r[i]}function c(e,t){return e instanceof s?e:"string"==typeof e?s.fromIso8601(e):s.addSeconds(t,e,new s)}var h={packedLength:1,pack:function(e,r,i){i=t(i,0),r[i]=e},unpack:function(e,r){return r=t(r,0),e[r]}},d=[],m=[],p=function(t,i,n,o,a){for(var l,h,p,f,v,g,_=0;_<o.length;){v=c(o[_],t),p=e(i,v,s.compare);var y=0,C=0;if(0>p){for(p=~p,f=p*a,h=void 0,g=i[p];_<o.length&&(v=c(o[_],t),!(r(h)&&s.compare(h,v)>=0||r(g)&&s.compare(v,g)>=0));){for(d[y++]=v,_+=1,l=0;a>l;l++)m[C++]=o[_],_+=1;h=v}y>0&&(m.length=C,u(n,f,m),d.length=y,u(i,p,d))}else{for(l=0;a>l;l++)_++,n[p*a+l]=o[_];_++}}},f=function(e,i){var n=e;n===Number&&(n=h);var s,u=n.packedLength,c=t(n.packedInterpolationLength,u),d=0;if(r(i)){var m=i.length;s=new Array(m);for(var p=0;m>p;p++){var f=i[p];f===Number&&(f=h);var v=f.packedLength;u+=v,c+=t(f.packedInterpolationLength,v),s[p]=f}d=m}this._type=e,this._innerType=n,this._interpolationDegree=1,this._interpolationAlgorithm=l,this._numberOfPoints=0,this._times=[],this._values=[],this._xTable=[],this._yTable=[],this._packedLength=u,this._packedInterpolationLength=c,this._updateTableLength=!0,this._interpolationResult=new Array(c),this._definitionChanged=new o,this._derivativeTypes=i,this._innerDerivativeTypes=s,this._inputOrder=d,this._forwardExtrapolationType=a.NONE,this._forwardExtrapolationDuration=0,this._backwardExtrapolationType=a.NONE,this._backwardExtrapolationDuration=0};return i(f.prototype,{isConstant:{get:function(){return 0===this._values.length}},definitionChanged:{get:function(){return this._definitionChanged}},type:{get:function(){return this._type}},derivativeTypes:{get:function(){return this._derivativeTypes}},interpolationDegree:{get:function(){return this._interpolationDegree}},interpolationAlgorithm:{get:function(){return this._interpolationAlgorithm}},forwardExtrapolationType:{get:function(){return this._forwardExtrapolationType},set:function(e){this._forwardExtrapolationType!==e&&(this._forwardExtrapolationType=e,this._definitionChanged.raiseEvent(this))}},forwardExtrapolationDuration:{get:function(){return this._forwardExtrapolationDuration},set:function(e){this._forwardExtrapolationDuration!==e&&(this._forwardExtrapolationDuration=e,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationType:{get:function(){return this._backwardExtrapolationType},set:function(e){this._backwardExtrapolationType!==e&&(this._backwardExtrapolationType=e,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationDuration:{get:function(){return this._backwardExtrapolationDuration},set:function(e){this._backwardExtrapolationDuration!==e&&(this._backwardExtrapolationDuration=e,this._definitionChanged.raiseEvent(this))}}}),f.prototype.getValue=function(t,i){var n,o=this._innerType,l=this._times,u=this._values,c=e(l,t,s.compare);if(0>c){if(c=~c,0===c){var h=l[c];if(n=this._backwardExtrapolationDuration,this._backwardExtrapolationType===a.NONE||0!==n&&s.secondsDifference(h,t)>n)return void 0;if(this._backwardExtrapolationType===a.HOLD)return o.unpack(this._values,0,i)}if(c>=l.length){c=l.length-1;var d=l[c];if(n=this._forwardExtrapolationDuration,this._forwardExtrapolationType===a.NONE||0!==n&&s.secondsDifference(t,d)>n)return void 0;if(this._forwardExtrapolationType===a.HOLD)return c=l.length-1,o.unpack(this._values,c*o.packedLength,i)}var m=this._xTable,p=this._yTable,f=this._interpolationAlgorithm,v=this._packedInterpolationLength,g=this._inputOrder;if(this._updateTableLength){this._updateTableLength=!1;var _=Math.min(f.getRequiredDataPoints(this._interpolationDegree,g),l.length);_!==this._numberOfPoints&&(this._numberOfPoints=_,m.length=_,p.length=_*v)}var y=this._numberOfPoints-1;if(1>y)return void 0;var C=0,w=l.length-1,S=w-C+1;if(y+1>S);else{var E=c-(0|y/2)-1;C>E&&(E=C);var b=E+y;b>w&&(b=w,E=b-y,C>E&&(E=C)),C=E,w=b}for(var T=w-C+1,x=0;T>x;++x)m[x]=s.secondsDifference(l[C+x],l[w]);if(r(o.convertPackedArrayForInterpolation))o.convertPackedArrayForInterpolation(u,C,w,p);else for(var P=0,A=this._packedLength,M=C*A,D=(w+1)*A;D>M;)p[P]=u[M],M++,P++;var I,R=s.secondsDifference(t,l[w]);if(0!==g&&r(f.interpolate)){var O=Math.floor(v/(g+1));I=f.interpolate(R,m,p,O,g,g,this._interpolationResult)}else I=f.interpolateOrderZero(R,m,p,v,this._interpolationResult);return r(o.unpackInterpolationResult)?o.unpackInterpolationResult(I,u,C,w,i):o.unpack(I,0,i)}return o.unpack(this._values,c*this._packedLength,i)},f.prototype.setInterpolationOptions=function(e){var t=!1,r=e.interpolationAlgorithm,i=e.interpolationDegree;this._interpolationAlgorithm!==r&&(this._interpolationAlgorithm=r,t=!0),this._interpolationDegree!==i&&(this._interpolationDegree=i,t=!0),t&&(this._updateTableLength=!0,this._definitionChanged.raiseEvent(this))},f.prototype.addSample=function(e,t,i){var n=this._innerDerivativeTypes,o=r(n),a=this._innerType,s=[];if(s.push(e),a.pack(t,s,s.length),o)for(var l=n.length,u=0;l>u;u++)n[u].pack(i[u],s,s.length);p(void 0,this._times,this._values,s,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.addSamples=function(e,t,i){for(var n=this._innerDerivativeTypes,o=r(n),a=this._innerType,s=e.length,l=[],u=0;s>u;u++)if(l.push(e[u]),a.pack(t[u],l,l.length),o)for(var c=i[u],h=n.length,d=0;h>d;d++)n[d].pack(c[d],l,l.length);p(void 0,this._times,this._values,l,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.addSamplesPackedArray=function(e,t){p(t,this._times,this._values,e,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.equals=function(e){if(this===e)return!0;if(!r(e))return!1;if(this._type!==e._type||this._interpolationDegree!==e._interpolationDegree||this._interpolationAlgorithm!==e._interpolationAlgorithm)return!1;var t=this._derivativeTypes,i=r(t),n=e._derivativeTypes,o=r(n);if(i!==o)return!1;var a,l;if(i){if(l=t.length,l!==n.length)return!1;for(a=0;l>a;a++)if(t[a]!==n[a])return!1}var u=this._times,c=e._times;if(l=u.length,l!==c.length)return!1;for(a=0;l>a;a++)if(!s.equals(u[a],c[a]))return!1;var h=this._values,d=e._values;for(a=0;l>a;a++)if(h[a]!==d[a])return!1;return!0},f._mergeNewSamples=p,f}),r("DataSources/SampledPositionProperty",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./PositionProperty","./Property","./SampledProperty"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(r,i){i=t(i,0);var n;if(i>0){n=new Array(i);for(var s=0;i>s;s++)n[s]=e}this._numberOfDerivatives=i,this._property=new u(e,n),this._definitionChanged=new o,this._referenceFrame=t(r,a.FIXED),this._property._definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this)},this)};return i(c.prototype,{isConstant:{get:function(){return this._property.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}},interpolationDegree:{get:function(){return this._property.interpolationDegree}},interpolationAlgorithm:{get:function(){return this._property.interpolationAlgorithm}},numberOfDerivatives:{get:function(){return this._numberOfDerivatives}},forwardExtrapolationType:{get:function(){return this._property.forwardExtrapolationType},set:function(e){this._property.forwardExtrapolationType=e}},forwardExtrapolationDuration:{get:function(){return this._property.forwardExtrapolationDuration},set:function(e){this._property.forwardExtrapolationDuration=e}},backwardExtrapolationType:{get:function(){return this._property.backwardExtrapolationType},set:function(e){this._property.backwardExtrapolationType=e}},backwardExtrapolationDuration:{get:function(){return this._property.backwardExtrapolationDuration},set:function(e){this._property.backwardExtrapolationDuration=e}}}),c.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},c.prototype.getValueInReferenceFrame=function(e,t,i){return i=this._property.getValue(e,i),r(i)?s.convertToReferenceFrame(e,i,this._referenceFrame,t,i):void 0},c.prototype.setInterpolationOptions=function(e){this._property.setInterpolationOptions(e)},c.prototype.addSample=function(e,t,r){this._numberOfDerivatives,this._property.addSample(e,t,r)},c.prototype.addSamples=function(e,t,r){this._property.addSamples(e,t,r)},c.prototype.addSamplesPackedArray=function(e,t){this._property.addSamplesPackedArray(e,t)},c.prototype.equals=function(e){return this===e||l.equals(this._property,e._property)&&this._referenceFrame===e._referenceFrame},c}),r("DataSources/StripeOrientation",["../Core/freezeObject"],function(e){"use strict";var t={HORIZONTAL:0,VERTICAL:1};return e(t)}),r("DataSources/StripeMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property","./StripeOrientation"],function(e,t,r,i,n,o,a){"use strict";var s=a.HORIZONTAL,l=e.WHITE,u=e.BLACK,c=0,h=1,d=function(){this._definitionChanged=new i,this._orientation=void 0,this._orientationSubscription=void 0,this._evenColor=void 0,this._evenColorSubscription=void 0,this._oddColor=void 0,this._oddColorSubscription=void 0,this._offset=void 0,this._offsetSubscription=void 0,this._repeat=void 0,this._repeatSubscription=void 0};return r(d.prototype,{isConstant:{get:function(){return o.isConstant(this._orientation)&&o.isConstant(this._evenColor)&&o.isConstant(this._oddColor)&&o.isConstant(this._offset)&&o.isConstant(this._repeat)}},definitionChanged:{get:function(){return this._definitionChanged}},orientation:n("orientation"),evenColor:n("evenColor"),oddColor:n("oddColor"),offset:n("offset"),repeat:n("repeat")}),d.prototype.getType=function(){return"Stripe"},d.prototype.getValue=function(e,r){return t(r)||(r={}),r.horizontal=o.getValueOrDefault(this._orientation,e,s)===a.HORIZONTAL,r.evenColor=o.getValueOrClonedDefault(this._evenColor,e,l,r.evenColor),r.oddColor=o.getValueOrClonedDefault(this._oddColor,e,u,r.oddColor),r.offset=o.getValueOrDefault(this._offset,e,c),r.repeat=o.getValueOrDefault(this._repeat,e,h),r},d.prototype.equals=function(e){return this===e||e instanceof d&&o.equals(this._orientation,e._orientation)&&o.equals(this._evenColor,e._evenColor)&&o.equals(this._oddColor,e._oddColor)&&o.equals(this._offset,e._offset)&&o.equals(this._repeat,e._repeat)},d.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},d}),r("DataSources/TimeIntervalCollectionPositionProperty",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","../Core/TimeIntervalCollection","./PositionProperty","./Property"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t){this._definitionChanged=new n,this._intervals=new a,this._intervals.changedEvent.addEventListener(u.prototype._intervalsChanged,this),this._referenceFrame=e(t,o.FIXED)};return r(u.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}},referenceFrame:{get:function(){return this._referenceFrame
}}}),u.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,o.FIXED,t)},u.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._intervals.findDataForIntervalContainingDate(e);return t(n)?s.convertToReferenceFrame(e,n,this._referenceFrame,r,i):void 0},u.prototype.equals=function(e){return this===e||e instanceof u&&this._intervals.equals(e._intervals,l.equals)&&this._referenceFrame===e._referenceFrame},u.prototype._intervalsChanged=function(){this._definitionChanged.raiseEvent(this)},u}),r("DataSources/TimeIntervalCollectionProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/isArray","../Core/TimeIntervalCollection","./Property"],function(e,t,r,i,n,o,a){"use strict";var s=function(){this._definitionChanged=new i,this._intervals=new o,this._intervals.changedEvent.addEventListener(s.prototype._intervalsChanged,this)};return t(s.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}}}),s.prototype.getValue=function(t,r){var i=this._intervals.findDataForIntervalContainingDate(t);return e(i)&&"object"==typeof i&&!n(i)?i.clone(r):i},s.prototype.equals=function(e){return this===e||e instanceof s&&this._intervals.equals(e._intervals,a.equals)},s.prototype._intervalsChanged=function(){this._definitionChanged.raiseEvent(this)},s}),r("DataSources/WallGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._minimumHeights=void 0,this._minimumHeightsSubscription=void 0,this._maximumHeights=void 0,this._maximumHeightsSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),minimumHeights:o("minimumHeights"),maximumHeights:o("maximumHeights"),granularity:o("granularity"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.minimumHeights=this.minimumHeights,e.maximumHeights=this.maximumHeights,e.granularity=this.granularity,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.minimumHeights=e(this.minimumHeights,t.minimumHeights),this.maximumHeights=e(this.maximumHeights,t.maximumHeights),this.granularity=e(this.granularity,t.granularity),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor)},a}),r("DataSources/CzmlDataSource",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/ClockRange","../Core/ClockStep","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Ellipsoid","../Core/Event","../Core/ExtrapolationType","../Core/getFilenameFromUri","../Core/HermitePolynomialApproximation","../Core/isArray","../Core/Iso8601","../Core/JulianDate","../Core/LagrangePolynomialApproximation","../Core/LinearApproximation","../Core/loadJson","../Core/Math","../Core/Quaternion","../Core/Rectangle","../Core/ReferenceFrame","../Core/RuntimeError","../Core/Spherical","../Core/TimeInterval","../Core/TimeIntervalCollection","../Scene/HorizontalOrigin","../Scene/LabelStyle","../Scene/VerticalOrigin","../ThirdParty/Uri","../ThirdParty/when","./BillboardGraphics","./ColorMaterialProperty","./CompositeMaterialProperty","./CompositePositionProperty","./CompositeProperty","./ConstantPositionProperty","./ConstantProperty","./DataSourceClock","./EllipseGraphics","./EllipsoidGraphics","./EntityCollection","./GridMaterialProperty","./ImageMaterialProperty","./LabelGraphics","./ModelGraphics","./PathGraphics","./PointGraphics","./PolygonGraphics","./PolylineGlowMaterialProperty","./PolylineGraphics","./PolylineOutlineMaterialProperty","./PositionPropertyArray","./RectangleGraphics","./ReferenceProperty","./SampledPositionProperty","./SampledProperty","./StripeMaterialProperty","./StripeOrientation","./TimeIntervalCollectionPositionProperty","./TimeIntervalCollectionProperty","./WallGraphics"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht){"use strict";function dt(e,t){return"#"===t[0]&&(t=Zt+t),nt.fromString(e,t)}function mt(e){var t=e.rgbaf;if(l(t))return t;var r=e.rgba;if(!l(r))return void 0;if(r.length===o.length)return[o.byteToFloat(r[0]),o.byteToFloat(r[1]),o.byteToFloat(r[2]),o.byteToFloat(r[3])];var i=r.length;t=new Array(i);for(var n=0;i>n;n+=5)t[n]=r[n],t[n+1]=o.byteToFloat(r[n+1]),t[n+2]=o.byteToFloat(r[n+2]),t[n+3]=o.byteToFloat(r[n+3]),t[n+4]=o.byteToFloat(r[n+4]);return t}function pt(e,t){var r=s(e.uri,e);if(l(t)){var i=new O(document.location.href);t=new O(t),r=new O(r).resolve(t.resolve(i)).toString()}return r}function ft(e){var t=e.wsenDegrees;if(l(t)){for(var r=t.length,i=0;r>i;i++)t[i]=S.toRadians(t[i]);return t}return e.wsen}function vt(e){if(l(e.cartesian))return e.cartesian;if(l(e.cartesianVelocity))return e.cartesianVelocity;if(l(e.unitCartesian))return e.unitCartesian;var r,i,n,o=e.unitSpherical;if(l(o)){if(i=o.length,2===i)Jt.clock=o[0],Jt.cone=o[1],t.fromSpherical(Jt,Qt),n=[Qt.x,Qt.y,Qt.z];else{var a=0;for(n=new Array(4*(i/3)),r=0;i>r;r+=4)n[r]=o[a++],Jt.clock=o[a++],Jt.cone=o[a++],t.fromSpherical(Jt,Qt),n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z}return n}var s=e.cartographicRadians;if(l(s)){if(3===s.length)Kt.longitude=s[0],Kt.latitude=s[1],Kt.height=s[2],h.WGS84.cartographicToCartesian(Kt,Qt),n=[Qt.x,Qt.y,Qt.z];else for(i=s.length,n=new Array(i),r=0;i>r;r+=4)Kt.longitude=s[r+1],Kt.latitude=s[r+2],Kt.height=s[r+3],h.WGS84.cartographicToCartesian(Kt,Qt),n[r]=s[r],n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z;return n}var u=e.cartographicDegrees;if(!l(u))throw new x(JSON.stringify(e)+" is not a valid CZML interval.");if(3===u.length)Kt.longitude=S.toRadians(u[0]),Kt.latitude=S.toRadians(u[1]),Kt.height=u[2],h.WGS84.cartographicToCartesian(Kt,Qt),n=[Qt.x,Qt.y,Qt.z];else for(i=u.length,n=new Array(i),r=0;i>r;r+=4)Kt.longitude=S.toRadians(u[r+1]),Kt.latitude=S.toRadians(u[r+2]),Kt.height=u[r+3],h.WGS84.cartographicToCartesian(Kt,Qt),n[r]=u[r],n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z;return n}function gt(r,i,n){switch(r){case Boolean:return s(i["boolean"],i);case e:return i.cartesian2;case t:return vt(i);case o:return mt(i);case lt:return lt[s(i.stripeOrientation,i)];case D:return D[s(i.horizontalOrigin,i)];case Image:return pt(i,n);case _:return _.fromIso8601(s(i.date,i));case I:return I[s(i.labelStyle,i)];case Number:return s(i.number,i);case String:return s(i.string,i);case Array:return i.array;case E:return i.unitQuaternion;case b:return ft(i);case O:return pt(i,n);case R:return R[s(i.verticalOrigin,i)];default:throw new c(r)}}function _t(e,t){var r=e.interpolationAlgorithm;(l(r)||l(e.interpolationDegree))&&t.setInterpolationOptions({interpolationAlgorithm:er[r],interpolationDegree:e.interpolationDegree});var i=e.forwardExtrapolationType;l(i)&&(t.forwardExtrapolationType=m[i]);var n=e.forwardExtrapolationDuration;l(n)&&(t.forwardExtrapolationDuration=n);var o=e.backwardExtrapolationType;l(o)&&(t.backwardExtrapolationType=m[o]);var a=e.backwardExtrapolationDuration;l(a)&&(t.backwardExtrapolationDuration=a)}function yt(e,t,r,i,n,o,a){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m,p,f=l(i.reference),v=l(u)&&!u.equals(g.MAXIMUM_INTERVAL);if(f||(m=gt(e,i,o),h=s(e.packedLength,1),p=s(m.length,1),d=!l(i.array)&&"string"!=typeof m&&p>h),!d&&!v)return t[r]=f?dt(a,i.reference):l(e.unpack)?new U(e.unpack(m,0)):new U(m),void 0;var y,C=t[r],w=i.epoch;if(l(w)&&(y=_.fromIso8601(w)),d&&!v)return C instanceof at||(C=new at(e),t[r]=C),C.addSamplesPackedArray(m,y),_t(i,C),void 0;var S;if(!d&&v)return u=u.clone(),u.data=f?dt(a,i.reference):l(e.unpack)?e.unpack(m,0):m,l(C)||(C=f?new V:new ct,t[r]=C),!f&&C instanceof ct?C.intervals.addInterval(u):C instanceof V?(u.data=f?u.data:new U(u.data),C.intervals.addInterval(u)):(S=g.MAXIMUM_INTERVAL.clone(),S.data=C,C=new V,t[r]=C,C.intervals.addInterval(S),u.data=f?u.data:new U(u.data),C.intervals.addInterval(u)),void 0;l(C)||(C=new V,t[r]=C),C instanceof V||(S=g.MAXIMUM_INTERVAL.clone(),S.data=C,C=new V,t[r]=C,C.intervals.addInterval(S));var E=C.intervals;S=E.findInterval(u),l(S)&&S.data instanceof at||(S=u.clone(),S.data=new at(e),E.addInterval(S)),S.data.addSamplesPackedArray(m,y),_t(i,S.data)}function Ct(e,t,r,i,n,o,a){if(l(i))if(v(i))for(var s=0,u=i.length;u>s;s++)yt(e,t,r,i[s],n,o,a);else yt(e,t,r,i,n,o,a)}function wt(e,r,i,n,o,a){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m,p=!1,f=l(i.cartesianVelocity)?1:0,v=t.packedLength*(f+1),y=l(i.reference),C=l(u)&&!u.equals(g.MAXIMUM_INTERVAL);if(y||(h=s(T[i.referenceFrame],void 0),d=vt(i),m=s(d.length,1),p=m>v),!p&&!C)return e[r]=y?dt(a,i.reference):new k(t.unpack(d),h),void 0;var w,S=e[r],E=i.epoch;if(l(E)&&(w=_.fromIso8601(E)),p&&!C)return(!(S instanceof ot)||l(h)&&S.referenceFrame!==h)&&(S=new ot(h,f),e[r]=S),S.addSamplesPackedArray(d,w),_t(i,S),void 0;var b;if(!p&&C)return u=u.clone(),u.data=y?dt(a,i.reference):t.unpack(d),l(S)||(S=y?new z(h):new ut(h),e[r]=S),!y&&S instanceof ut&&l(h)&&S.referenceFrame===h?S.intervals.addInterval(u):S instanceof z?(u.data=y?u.data:new k(u.data,h),S.intervals.addInterval(u)):(b=g.MAXIMUM_INTERVAL.clone(),b.data=S,S=new z(S.referenceFrame),e[r]=S,S.intervals.addInterval(b),u.data=y?u.data:new k(u.data,h),S.intervals.addInterval(u)),void 0;l(S)?S instanceof z||(b=g.MAXIMUM_INTERVAL.clone(),b.data=S,S=new z(S.referenceFrame),e[r]=S,S.intervals.addInterval(b)):(S=new z(h),e[r]=S);var x=S.intervals;b=x.findInterval(u),l(b)&&b.data instanceof ot&&(!l(h)||b.data.referenceFrame===h)||(b=u.clone(),b.data=new ot(h,f),x.addInterval(b)),b.data.addSamplesPackedArray(d,w),_t(i,b.data)}function St(e,t,r,i,n,o){if(l(r))if(v(r))for(var a=0,s=r.length;s>a;a++)wt(e,t,r[a],i,n,o);else wt(e,t,r,i,n,o)}function Et(t,r,i,n,a,s){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m=t[r];if(l(u)){m instanceof F||(m=new F,t[r]=m);var p=m.intervals;d=p.findInterval({start:u.start,stop:u.stop}),l(d)?h=d.data:(d=u.clone(),p.addInterval(d))}else h=m;var f;l(i.solidColor)?(h instanceof B||(h=new B),f=i.solidColor,Ct(o,h,"color",f.color,void 0,void 0,s)):l(i.grid)?(h instanceof j||(h=new j),f=i.grid,Ct(o,h,"color",f.color,void 0,a,s),Ct(Number,h,"cellAlpha",f.cellAlpha,void 0,a,s),Ct(e,h,"lineThickness",f.lineThickness,void 0,a,s),Ct(e,h,"lineOffset",f.lineOffset,void 0,a,s),Ct(e,h,"lineCount",f.lineCount,void 0,a,s)):l(i.image)?(h instanceof Y||(h=new Y),f=i.image,Ct(Image,h,"image",f.image,void 0,a,s),Ct(e,h,"repeat",f.repeat,void 0,a,s)):l(i.stripe)?(h instanceof st||(h=new st),f=i.stripe,Ct(lt,h,"orientation",f.orientation,void 0,a,s),Ct(o,h,"evenColor",f.evenColor,void 0,a,s),Ct(o,h,"oddColor",f.oddColor,void 0,a,s),Ct(Number,h,"offset",f.offset,void 0,a,s),Ct(Number,h,"repeat",f.repeat,void 0,a,s)):l(i.polylineOutline)?(h instanceof tt||(h=new tt),f=i.polylineOutline,Ct(o,h,"color",f.color,void 0,a,s),Ct(o,h,"outlineColor",f.outlineColor,void 0,a,s),Ct(Number,h,"outlineWidth",f.outlineWidth,void 0,a,s)):l(i.polylineGlow)&&(h instanceof $||(h=new $),f=i.polylineGlow,Ct(o,h,"color",f.color,void 0,a,s),Ct(Number,h,"glowPower",f.glowPower,void 0,a,s)),l(d)?d.data=h:t[r]=h}function bt(e,t,r,i,n,o){if(l(r))if(v(r))for(var a=0,s=r.length;s>a;a++)Et(e,t,r[a],i,n,o);else Et(e,t,r,i,n,o)}function Tt(e,t){e.name=s(t.name,e.name)}function xt(e,t,r,i){var n=t.description;l(n)&&Ct(String,e,"description",n,void 0,i,r)}function Pt(e,t,r,i){var n=t.position;l(n)&&St(e,"position",n,void 0,i,r)}function At(e,r,i,n){var o=r.viewFrom;l(o)&&Ct(t,e,"viewFrom",o,void 0,n,i)}function Mt(e,t,r,i){var n=t.orientation;l(n)&&Ct(E,e,"orientation",n,void 0,i,r)}function Dt(e,r,i){var n,o,a=r.references;if(l(a)){var s=[];for(n=0,o=a.length;o>n;n++)s.push(dt(i,a[n]));var u=r.interval;l(u)?(u=A.fromIso8601(u),e.positions instanceof z||(e.positions=new z,u.data=new rt(s),e.positions.intervals.addInterval(u))):e.positions=new rt(s)}else{var c=[],d=r.cartesian;if(l(d)){for(n=0,o=d.length;o>n;n+=3)c.push(new t(d[n],d[n+1],d[n+2]));r.array=c}else if(d=r.cartographicRadians,l(d)){for(n=0,o=d.length;o>n;n+=3)Kt.longitude=d[n],Kt.latitude=d[n+1],Kt.height=d[n+2],c.push(h.WGS84.cartographicToCartesian(Kt));r.array=c}else if(d=r.cartographicDegrees,l(d)){for(n=0,o=d.length;o>n;n+=3)c.push(t.fromDegrees(d[n],d[n+1],d[n+2]));r.array=c}l(r.array)&&Ct(Array,e,"positions",r,void 0,void 0,i)}}function It(e,t,r){if(l(t))if(v(t))for(var i=t.length,n=0;i>n;n++)Dt(e,t[n],r);else Dt(e,t,r)}function Rt(e,t){var r,i=t.availability;if(l(i)){var n;if(v(i))for(var o=i.length,a=0;o>a;a++)l(n)||(n=new M),tr.iso8601=i[a],r=A.fromIso8601(tr),n.addInterval(r);else tr.iso8601=i,r=A.fromIso8601(tr),n=new M,n.addInterval(r);e.availability=n}}function Ot(r,i,n,a){var s=i.billboard;if(l(s)){var u,c=s.interval;l(c)&&(tr.iso8601=c,u=A.fromIso8601(tr));var h=r.billboard;l(h)||(r.billboard=h=new N),Ct(o,h,"color",s.color,u,a,n),Ct(t,h,"eyeOffset",s.eyeOffset,u,a,n),Ct(D,h,"horizontalOrigin",s.horizontalOrigin,u,a,n),Ct(Image,h,"image",s.image,u,a,n),Ct(e,h,"pixelOffset",s.pixelOffset,u,a,n),Ct(Number,h,"scale",s.scale,u,a,n),Ct(Number,h,"rotation",s.rotation,u,a,n),Ct(t,h,"alignedAxis",s.alignedAxis,u,a,n),Ct(Boolean,h,"show",s.show,u,a,n),Ct(R,h,"verticalOrigin",s.verticalOrigin,u,a,n)}}function Lt(e,t){var r=e.version;if(l(r)&&"string"==typeof r){var i=r.split(".");if(2===i.length){if("1"!==i[0])throw new x("Cesium only supports CZML version 1.");t._version=r}}if(!l(t._version))throw new x("CZML version information invalid.  It is expected to be a property on the document object in the <Major>.<Minor> version format.");var n=t._documentPacket;l(e.name)&&(n.name=e.name);var o=e.clock;if(l(o)){var a=n.clock;l(a)?(a.interval=s(o.interval,a.interval),a.currentTime=s(o.currentTime,a.currentTime),a.range=s(o.range,a.range),a.step=s(o.step,a.step),a.multiplier=s(o.multiplier,a.multiplier)):n.clock={interval:o.interval,currentTime:o.currentTime,range:o.range,step:o.step,multiplier:o.multiplier}}}function Nt(e,t,r,i){var n=t.ellipse;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.ellipse;l(u)||(e.ellipse=u=new G),Ct(Boolean,u,"show",n.show,a,i,r),Ct(Number,u,"rotation",n.rotation,a,i,r),Ct(Number,u,"semiMajorAxis",n.semiMajorAxis,a,i,r),Ct(Number,u,"semiMinorAxis",n.semiMinorAxis,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Number,u,"numberOfVerticalLines",n.numberOfVerticalLines,a,i,r)}}function Bt(e,r,i,n){var a=r.ellipsoid;if(l(a)){var s,u=a.interval;l(u)&&(tr.iso8601=u,s=A.fromIso8601(tr));var c=e.ellipsoid;l(c)||(e.ellipsoid=c=new H),Ct(Boolean,c,"show",a.show,s,n,i),Ct(t,c,"radii",a.radii,s,n,i),bt(c,"material",a.material,s,n,i),Ct(Boolean,c,"fill",a.fill,s,n,i),Ct(Boolean,c,"outline",a.outline,s,n,i),Ct(o,c,"outlineColor",a.outlineColor,s,n,i)}}function Ft(r,i,n,a){var s=i.label;if(l(s)){var u,c=s.interval;l(c)&&(tr.iso8601=c,u=A.fromIso8601(tr));var h=r.label;l(h)||(r.label=h=new X),Ct(o,h,"fillColor",s.fillColor,u,a,n),Ct(o,h,"outlineColor",s.outlineColor,u,a,n),Ct(Number,h,"outlineWidth",s.outlineWidth,u,a,n),Ct(t,h,"eyeOffset",s.eyeOffset,u,a,n),Ct(D,h,"horizontalOrigin",s.horizontalOrigin,u,a,n),Ct(String,h,"text",s.text,u,a,n),Ct(e,h,"pixelOffset",s.pixelOffset,u,a,n),Ct(Number,h,"scale",s.scale,u,a,n),Ct(Boolean,h,"show",s.show,u,a,n),Ct(R,h,"verticalOrigin",s.verticalOrigin,u,a,n),Ct(String,h,"font",s.font,u,a,n),Ct(I,h,"style",s.style,u,a,n)}}function zt(e,t,r,i){var n=t.model;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.model;l(s)||(e.model=s=new Z),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"scale",n.scale,o,i,r),Ct(Number,s,"minimumPixelSize",n.minimumPixelSize,o,i,r),Ct(O,s,"uri",n.gltf,o,i,r)}}function Vt(e,t,r,i){var n=t.path;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.path;l(s)||(e.path=s=new Q),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"width",n.width,o,i,r),Ct(Number,s,"resolution",n.resolution,o,i,r),Ct(Number,s,"leadTime",n.leadTime,o,i,r),Ct(Number,s,"trailTime",n.trailTime,o,i,r),bt(s,"material",n.material,o,i,r)}}function kt(e,t,r,i){var n=t.point;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.point;l(u)||(e.point=u=new J),Ct(o,u,"color",n.color,a,i,r),Ct(Number,u,"pixelSize",n.pixelSize,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Number,u,"outlineWidth",n.outlineWidth,a,i,r),Ct(Boolean,u,"show",n.show,a,i,r)}}function Ut(e,t,r,i){var n=t.polygon;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.polygon;l(u)||(e.polygon=u=new K),Ct(Boolean,u,"show",n.show,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Boolean,u,"perPositionHeight",n.perPositionHeight,a,i,r),It(u,n.positions,r)}}function Wt(e,t,r,i){var n=t.rectangle;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.rectangle;l(u)||(e.rectangle=u=new it),Ct(Boolean,u,"show",n.show,a,i,r),Ct(b,u,"coordinates",n.coordinates,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"rotation",n.rotation,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Boolean,u,"closeBottom",n.closeBottom,a,i,r),Ct(Boolean,u,"closeTop",n.closeTop,a,i,r)}}function Gt(e,t,r,i){var n=t.wall;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.wall;l(u)||(e.wall=u=new ht),Ct(Boolean,u,"show",n.show,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Array,u,"minimumHeights",n.minimumHeights,a,i,r),Ct(Array,u,"maximumHeights",n.maximumHeights,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),It(u,n.positions,r)}}function Ht(e,t,r,i){var n=t.polyline;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.polyline;l(s)||(e.polyline=s=new et),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"width",n.width,o,i,r),bt(s,"material",n.material,o,i,r),Ct(Boolean,s,"followSurface",n.followSurface,o,i,r),Ct(Number,s,"granularity",n.granularity,o,i,r),It(s,n.positions,r)}}function qt(e,t,r,i,n){var o=e.id;if(l(o)||(o=a()),Zt=o,!l(n._version)&&"document"!==o)throw new x("The first CZML packet is required to be the document object.");if(e["delete"]===!0)t.removeById(o);else if("document"===o)Lt(e,n);else{var s=t.getOrCreateEntity(o),u=e.parent;l(u)&&(s.parent=t.getOrCreateEntity(u));for(var c=r.length-1;c>-1;c--)r[c](s,e,t,i)}Zt=void 0}function jt(e){var t,r=e._documentPacket.clock;if(!l(r)){if(!l(e._clock)){var o=e._entityCollection.computeAvailability();if(!o.start.equals(g.MINIMUM_VALUE)){var a=o.start,u=o.stop,c=_.secondsDifference(u,a),h=Math.round(c/120);return t=new W,t.startTime=_.clone(a),t.stopTime=_.clone(u),t.clockRange=i.LOOP_STOP,t.multiplier=h,t.currentTime=_.clone(a),t.clockStep=n.SYSTEM_CLOCK_MULTIPLIER,e._clock=t,!0}}return!1}if(l(e._clock)?t=e._clock.clone():(t=new W,t.startTime=g.MINIMUM_VALUE.clone(),t.stopTime=g.MAXIMUM_VALUE.clone(),t.currentTime=g.MINIMUM_VALUE.clone(),t.clockRange=i.LOOP_STOP,t.clockStep=n.SYSTEM_CLOCK_MULTIPLIER,t.multiplier=1),l(r.interval)){tr.iso8601=r.interval;var d=A.fromIso8601(tr);t.startTime=d.start,t.stopTime=d.stop}return l(r.currentTime)&&(t.currentTime=_.fromIso8601(r.currentTime)),l(r.range)&&(t.clockRange=s(i[r.range],i.LOOP_STOP)),l(r.step)&&(t.clockStep=s(n[r.step],n.SYSTEM_CLOCK_MULTIPLIER)),l(r.multiplier)&&(t.multiplier=r.multiplier),t.equals(e._clock)?!1:(e._clock=t.clone(e._clock),!0)}function Yt(e,t,r){var i=e._entityCollection;i.suspendEvents(),ir._processCzml(t,i,r,void 0,e);var n=jt(e),o=e._documentPacket;l(o.name)&&e._name!==o.name?(e._name=o.name,n=!0):!l(e._name)&&l(r)&&(e._name=p(r),n=!0),i.resumeEvents(),n&&e._changed.raiseEvent(e)}function Xt(e,t){e._isLoading!==t&&(e._isLoading=t,e._loading.raiseEvent(e,t))}var Zt,Qt=new t,Jt=new P,Kt=new r,$t=new A,er={HERMITE:f,LAGRANGE:y,LINEAR:C},tr={iso8601:void 0},rr=function(){this.name=void 0,this.clock=void 0},ir=function(e){this._name=e,this._changed=new d,this._error=new d,this._isLoading=!1,this._loading=new d,this._clock=void 0,this._documentPacket=new rr,this._version=void 0,this._entityCollection=new q};return u(ir.prototype,{name:{get:function(){return this._name}},clock:{get:function(){return this._clock}},entities:{get:function(){return this._entityCollection}},isLoading:{get:function(){return this._isLoading}},changedEvent:{get:function(){return this._changed}},errorEvent:{get:function(){return this._error}},loadingEvent:{get:function(){return this._loading}}}),ir.updaters=[Ot,Nt,Bt,Ft,zt,Tt,xt,Vt,kt,Ut,Ht,Wt,Pt,At,Gt,Mt,Rt],ir.prototype.process=function(e,t){Yt(this,e,t)},ir.prototype.load=function(e,t){this._version=void 0,this._documentPacket=new rr,this._entityCollection.removeAll(),Yt(this,e,t)},ir.prototype.processUrl=function(e){Xt(this,!0);var t=this;return L(w(e),function(r){t.process(r,e),Xt(t,!1)}).otherwise(function(e){return Xt(t,!1),t._error.raiseEvent(t,e),L.reject(e)})},ir.prototype.loadUrl=function(e){Xt(this,!0);var t=this;return L(w(e),function(r){t.load(r,e),Xt(t,!1)}).otherwise(function(e){return Xt(t,!1),t._error.raiseEvent(t,e),L.reject(e)})},ir.processPacketData=Ct,ir.processPositionPacketData=St,ir.processMaterialPacketData=bt,ir._processCzml=function(e,t,r,i,n){if(i=l(i)?i:ir.updaters,v(e))for(var o=0,a=e.length;a>o;o++)qt(e[o],t,i,r,n);else qt(e,t,i,r,n)},ir}),r("DataSources/DataSource",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{name:{get:t.throwInstantiationError},clock:{get:t.throwInstantiationError},entities:{get:t.throwInstantiationError},isLoading:{get:t.throwInstantiationError},changedEvent:{get:t.throwInstantiationError},errorEvent:{get:t.throwInstantiationError},loadingEvent:{get:t.throwInstantiationError}}),r.prototype.update=t.throwInstantiationError,r}),r("DataSources/DataSourceCollection",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event"],function(e,t,r,i,n,o){"use strict";var a=function(){this._dataSources=[],this._dataSourceAdded=new o,this._dataSourceRemoved=new o};return r(a.prototype,{length:{get:function(){return this._dataSources.length}},dataSourceAdded:{get:function(){return this._dataSourceAdded}},dataSourceRemoved:{get:function(){return this._dataSourceRemoved}}}),a.prototype.add=function(e){this._dataSources.push(e),this._dataSourceAdded.raiseEvent(this,e)},a.prototype.remove=function(t,r){r=e(r,!1);var i=this._dataSources.indexOf(t);return-1!==i?(this._dataSources.splice(i,1),this._dataSourceRemoved.raiseEvent(this,t),r&&"function"==typeof t.destroy&&t.destroy(),!0):!1},a.prototype.removeAll=function(t){t=e(t,!1);for(var r=this._dataSources,i=0,n=r.length;n>i;++i){var o=r[i];this._dataSourceRemoved.raiseEvent(this,o),t&&"function"==typeof o.destroy&&o.destroy()}r.length=0},a.prototype.contains=function(e){return-1!==this.indexOf(e)},a.prototype.indexOf=function(e){return this._dataSources.indexOf(e)},a.prototype.get=function(e){return this._dataSources[e]},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){return this.removeAll(!0),i(this)},a}),r("Shaders/Appearances/AllMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec3 v_tangentEC;\nvarying vec3 v_binormalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nmat3 tangentToEyeMatrix = czm_tangentToEyeSpaceMatrix(v_normalEC, v_tangentEC, v_binormalEC);\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = tangentToEyeMatrix;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nmaterialInput.st = v_st;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/AllMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec3 tangent;\nattribute vec3 binormal;\nattribute vec2 st;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec3 v_tangentEC;\nvarying vec3 v_binormalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_tangentEC = czm_normal * tangent;\nv_binormalEC = czm_normal * binormal;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/BasicMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/BasicMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/TexturedMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nmaterialInput.st = v_st;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/TexturedMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec2 st;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/CullFace",["../Core/freezeObject"],function(e){"use strict";var t={FRONT:1028,BACK:1029,FRONT_AND_BACK:1032};return e(t)}),r("Scene/Appearance",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Renderer/createShaderSource","./BlendingState","./CullFace"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){e=t(e,t.EMPTY_OBJECT),this.material=e.material,this.translucent=t(e.translucent,!0),this._vertexShaderSource=e.vertexShaderSource,this._fragmentShaderSource=e.fragmentShaderSource,this._renderState=e.renderState,this._closed=t(e.closed,!1)};return i(s.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}}}),s.prototype.getFragmentShaderSource=function(){return n({defines:[this.flat?"FLAT":"",this.faceForward?"FACE_FORWARD":""],sources:[r(this.material)?this.material.shaderSource:"",this.fragmentShaderSource]})},s.prototype.isTranslucent=function(){return r(this.material)&&this.material.isTranslucent()||!r(this.material)&&this.translucent},s.prototype.getRenderState=function(){var t=this.isTranslucent(),r=e(this.renderState,!1);return t?(r.depthMask=!1,r.blending=o.ALPHA_BLEND):r.depthMask=!0,r},s.getDefaultRenderState=function(e,t){var r={depthTest:{enabled:!0}};return e&&(r.depthMask=!1,r.blending=o.ALPHA_BLEND),t&&(r.cull={enabled:!0,face:a.BACK}),r},s}),r("Renderer/PixelDatatype",["../Core/freezeObject"],function(e){"use strict";var t={UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,UNSIGNED_INT:5125,FLOAT:5126,UNSIGNED_INT_24_8_WEBGL:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,validate:function(e){return e===t.UNSIGNED_BYTE||e===t.UNSIGNED_SHORT||e===t.UNSIGNED_INT||e===t.FLOAT||e===t.UNSIGNED_INT_24_8_WEBGL||e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5}};return e(t)}),r("Renderer/CubeMapFace",["../Core/defaultValue","../Core/defineProperties","../Core/DeveloperError","./PixelDatatype"],function(e,t){"use strict";var r=function(e,t,r,i,n,o,a,s,l){this._gl=e,this._texture=t,this._textureTarget=r,this._targetFace=i,this._pixelFormat=n,this._pixelDatatype=o,this._size=a,this._preMultiplyAlpha=s,this._flipY=l};return t(r.prototype,{pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},_target:{get:function(){return this._targetFace}}}),r.prototype.copyFrom=function(t,r,i){r=e(r,0),i=e(i,0);var n=this._gl,o=this._textureTarget;n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._preMultiplyAlpha),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,this._flipY),n.activeTexture(n.TEXTURE0),n.bindTexture(o,this._texture),t.arrayBufferView?n.texSubImage2D(this._targetFace,0,r,i,t.width,t.height,this._pixelFormat,this._pixelDatatype,t.arrayBufferView):n.texSubImage2D(this._targetFace,0,r,i,this._pixelFormat,this._pixelDatatype,t),n.bindTexture(o,null)
},r.prototype.copyFromFramebuffer=function(t,r,i,n,o,a){t=e(t,0),r=e(r,0),i=e(i,0),n=e(n,0),o=e(o,this._size),a=e(a,this._size);var s=this._gl,l=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(l,this._texture),s.copyTexSubImage2D(this._targetFace,0,t,r,i,n,o,a),s.bindTexture(l,null)},r}),r("Renderer/MipmapHint",["../Core/freezeObject"],function(e){"use strict";var t={DONT_CARE:4352,FASTEST:4353,NICEST:4354,validate:function(e){return e===t.DONT_CARE||e===t.FASTEST||e===t.NICEST}};return e(t)}),r("Renderer/TextureMagnificationFilter",["../Core/freezeObject"],function(e){"use strict";var t={NEAREST:9728,LINEAR:9729,validate:function(e){return e===t.NEAREST||e===t.LINEAR}};return e(t)}),r("Renderer/TextureMinificationFilter",["../Core/freezeObject"],function(e){"use strict";var t={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,validate:function(e){return e===t.NEAREST||e===t.LINEAR||e===t.NEAREST_MIPMAP_NEAREST||e===t.LINEAR_MIPMAP_NEAREST||e===t.NEAREST_MIPMAP_LINEAR||e===t.LINEAR_MIPMAP_LINEAR}};return e(t)}),r("Renderer/TextureWrap",["../Core/freezeObject"],function(e){"use strict";var t={CLAMP_TO_EDGE:33071,REPEAT:10497,MIRRORED_REPEAT:33648,validate:function(e){return e===t.CLAMP_TO_EDGE||e===t.REPEAT||e===t.MIRRORED_REPEAT}};return e(t)}),r("Renderer/CubeMap",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","./CubeMapFace","./MipmapHint","./PixelDatatype","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";var d=function(e,t,r,i,n,o,s,l,u){this._gl=e,this._textureFilterAnisotropic=t,this._textureTarget=r,this._texture=i,this._pixelFormat=n,this._pixelDatatype=o,this._size=s,this._preMultiplyAlpha=l,this._flipY=u,this._sampler=void 0,this._positiveX=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_X,n,o,s,l,u),this._negativeX=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_X,n,o,s,l,u),this._positiveY=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_Y,n,o,s,l,u),this._negativeY=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_Y,n,o,s,l,u),this._positiveZ=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_Z,n,o,s,l,u),this._negativeZ=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_Z,n,o,s,l,u),this.sampler=void 0};return r(d.prototype,{positiveX:{get:function(){return this._positiveX}},negativeX:{get:function(){return this._negativeX}},positiveY:{get:function(){return this._positiveY}},negativeY:{get:function(){return this._negativeY}},positiveZ:{get:function(){return this._positiveZ}},negativeZ:{get:function(){return this._negativeZ}},sampler:{get:function(){return this._sampler},set:function(e){var r=!0;if(!t(e)){r=!1;var i=c.LINEAR,o=u.LINEAR;this._pixelDatatype===l.FLOAT&&(i=c.NEAREST,o=u.NEAREST),e={wrapS:h.CLAMP_TO_EDGE,wrapT:h.CLAMP_TO_EDGE,minificationFilter:i,magnificationFilter:o,maximumAnisotropy:1}}if(this._pixelDatatype===l.FLOAT){if(e.minificationFilter!==c.NEAREST&&e.minificationFilter!==c.NEAREST_MIPMAP_NEAREST)throw new n("Only NEAREST and NEAREST_MIPMAP_NEAREST minification filters are supported for floating point textures.");if(e.magnificationFilter!==u.NEAREST)throw new n("Only the NEAREST magnification filter is supported for floating point textures.")}var a=this._gl,s=this._textureTarget;a.activeTexture(a.TEXTURE0),a.bindTexture(s,this._texture),a.texParameteri(s,a.TEXTURE_MIN_FILTER,e.minificationFilter),a.texParameteri(s,a.TEXTURE_MAG_FILTER,e.magnificationFilter),a.texParameteri(s,a.TEXTURE_WRAP_S,e.wrapS),a.texParameteri(s,a.TEXTURE_WRAP_T,e.wrapT),t(this._textureFilterAnisotropic)&&a.texParameteri(s,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),a.bindTexture(s,null),this._sampler=r?{wrapS:e.wrapS,wrapT:e.wrapT,minificationFilter:e.minificationFilter,magnificationFilter:e.magnificationFilter,maximumAnisotropy:e.maximumAnisotropy}:void 0}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},width:{get:function(){return this._size}},height:{get:function(){return this._size}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},_target:{get:function(){return this._textureTarget}}}),d.prototype.generateMipmap=function(t){t=e(t,s.DONT_CARE);var r=this._gl,i=this._textureTarget;r.hint(r.GENERATE_MIPMAP_HINT,t),r.activeTexture(r.TEXTURE0),r.bindTexture(i,this._texture),r.generateMipmap(i),r.bindTexture(i,null)},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){return this._gl.deleteTexture(this._texture),this._positiveX=i(this._positiveX),this._negativeX=i(this._negativeX),this._positiveY=i(this._positiveY),this._negativeY=i(this._negativeY),this._positiveZ=i(this._positiveZ),this._negativeZ=i(this._negativeZ),i(this)},d}),r("Renderer/Texture",["../Core/Cartesian2","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","../Core/PixelFormat","./MipmapHint","./PixelDatatype","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(i,n){n=t(n,t.EMPTY_OBJECT);var a=n.source,l=r(a)?a.width:n.width,c=r(a)?a.height:n.height,h=t(n.pixelFormat,s.RGBA),d=t(n.pixelDatatype,u.UNSIGNED_BYTE);if(d===u.FLOAT&&!i.floatingPointTexture)throw new o("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture.");if(s.isDepthFormat(h)&&!i.depthTexture)throw new o("When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture.");var m=n.preMultiplyAlpha||h===s.RGB||h===s.LUMINANCE,p=t(n.flipY,!0),f=i._gl,v=f.TEXTURE_2D,g=f.createTexture();f.activeTexture(f.TEXTURE0),f.bindTexture(v,g),r(a)?(f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,m),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,p),r(a.arrayBufferView)?f.texImage2D(v,0,h,l,c,0,h,d,a.arrayBufferView):r(a.framebuffer)?(a.framebuffer!==i.defaultFramebuffer&&a.framebuffer._bind(),f.copyTexImage2D(v,0,h,a.xOffset,a.yOffset,l,c,0),a.framebuffer!==i.defaultFramebuffer&&a.framebuffer._unBind()):f.texImage2D(v,0,h,h,d,a)):f.texImage2D(v,0,h,l,c,0,h,d,null),f.bindTexture(v,null),this._context=i,this._textureFilterAnisotropic=i._textureFilterAnisotropic,this._textureTarget=v,this._texture=g,this._pixelFormat=h,this._pixelDatatype=d,this._width=l,this._height=c,this._dimensions=new e(l,c),this._preMultiplyAlpha=m,this._flipY=p,this._sampler=void 0,this.sampler=void 0};return i(m.prototype,{sampler:{get:function(){return this._sampler},set:function(e){var t=!0;if(!r(e)){t=!1;var i=h.LINEAR,n=c.LINEAR;this._pixelDatatype===u.FLOAT&&(i=h.NEAREST,n=c.NEAREST),e={wrapS:d.CLAMP_TO_EDGE,wrapT:d.CLAMP_TO_EDGE,minificationFilter:i,magnificationFilter:n,maximumAnisotropy:1}}if(this._pixelDatatype===u.FLOAT){if(e.minificationFilter!==h.NEAREST&&e.minificationFilter!==h.NEAREST_MIPMAP_NEAREST)throw new o("Only NEAREST and NEAREST_MIPMAP_NEAREST minification filters are supported for floating point textures.");if(e.magnificationFilter!==c.NEAREST)throw new o("Only the NEAREST magnification filter is supported for floating point textures.")}var a=this._context._gl,s=this._textureTarget;a.activeTexture(a.TEXTURE0),a.bindTexture(s,this._texture),a.texParameteri(s,a.TEXTURE_MIN_FILTER,e.minificationFilter),a.texParameteri(s,a.TEXTURE_MAG_FILTER,e.magnificationFilter),a.texParameteri(s,a.TEXTURE_WRAP_S,e.wrapS),a.texParameteri(s,a.TEXTURE_WRAP_T,e.wrapT),r(this._textureFilterAnisotropic)&&a.texParameteri(s,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),a.bindTexture(s,null),this._sampler=t?{wrapS:e.wrapS,wrapT:e.wrapT,minificationFilter:e.minificationFilter,magnificationFilter:e.magnificationFilter,maximumAnisotropy:e.maximumAnisotropy}:void 0}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},dimensions:{get:function(){return this._dimensions}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},_target:{get:function(){return this._textureTarget}}}),m.prototype.copyFrom=function(e,r,i){r=t(r,0),i=t(i,0);var n=this._context._gl,o=this._textureTarget;n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._preMultiplyAlpha),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,this._flipY),n.activeTexture(n.TEXTURE0),n.bindTexture(o,this._texture),e.arrayBufferView?n.texSubImage2D(o,0,r,i,e.width,e.height,this._pixelFormat,this._pixelDatatype,e.arrayBufferView):n.texSubImage2D(o,0,r,i,this._pixelFormat,this._pixelDatatype,e),n.bindTexture(o,null)},m.prototype.copyFromFramebuffer=function(e,r,i,n,o,a){e=t(e,0),r=t(r,0),i=t(i,0),n=t(n,0),o=t(o,this._width),a=t(a,this._height);var s=this._context._gl,l=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(l,this._texture),s.copyTexSubImage2D(l,0,e,r,i,n,o,a),s.bindTexture(l,null)},m.prototype.generateMipmap=function(e){e=t(e,l.DONT_CARE);var r=this._context._gl,i=this._textureTarget;r.hint(r.GENERATE_MIPMAP_HINT,e),r.activeTexture(r.TEXTURE0),r.bindTexture(i,this._texture),r.generateMipmap(i),r.bindTexture(i,null)},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._context._gl.deleteTexture(this._texture),n(this)},m}),r("Shaders/Materials/BumpMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nvec2 centerPixel = fract(repeat * st);\nfloat centerBump = texture2D(image, centerPixel).channel;\nfloat imageWidth = float(imageDimensions.x);\nvec2 rightPixel = fract(repeat * (st + vec2(1.0 / imageWidth, 0.0)));\nfloat rightBump = texture2D(image, rightPixel).channel;\nfloat imageHeight = float(imageDimensions.y);\nvec2 leftPixel = fract(repeat * (st + vec2(0.0, 1.0 / imageHeight)));\nfloat topBump = texture2D(image, leftPixel).channel;\nvec3 normalTangentSpace = normalize(vec3(centerBump - rightBump, centerBump - topBump, clamp(1.0 - strength, 0.1, 1.0)));\nvec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\nmaterial.normal = normalEC;\nmaterial.diffuse = vec3(0.01);\nreturn material;\n}\n"}),r("Shaders/Materials/CheckerboardMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);\nfloat scaledWidth = fract(repeat.s * st.s);\nscaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\nfloat scaledHeight = fract(repeat.t * st.t);\nscaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\nfloat value = min(scaledWidth, scaledHeight);\nvec4 currentColor = mix(lightColor, darkColor, b);\nvec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/DotMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat b = smoothstep(0.3, 0.32, length(fract(repeat * materialInput.st) - 0.5));\nvec4 color = mix(lightColor, darkColor, b);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/FadeMaterial",[],function(){"use strict";return"uniform vec4 fadeInColor;\nuniform vec4 fadeOutColor;\nuniform float maximumDistance;\nuniform bool repeat;\nuniform vec2 fadeDirection;\nuniform vec2 time;\nfloat getTime(float t, float coord)\n{\nfloat scalar = 1.0 / maximumDistance;\nfloat q  = distance(t, coord) * scalar;\nif (repeat)\n{\nfloat r = distance(t, coord + 1.0) * scalar;\nfloat s = distance(t, coord - 1.0) * scalar;\nq = min(min(r, s), q);\n}\nreturn clamp(q, 0.0, 1.0);\n}\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat s = getTime(time.x, st.s) * fadeDirection.s;\nfloat t = getTime(time.y, st.t) * fadeDirection.t;\nfloat u = length(vec2(s, t));\nvec4 color = mix(fadeInColor, fadeOutColor, u);\nmaterial.emission = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/GridMaterial",[],function(){"use strict";return"#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\nuniform vec4 color;\nuniform float cellAlpha;\nuniform vec2 lineCount;\nuniform vec2 lineThickness;\nuniform vec2 lineOffset;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat scaledWidth = fract(lineCount.s * st.s - lineOffset.s);\nscaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\nfloat scaledHeight = fract(lineCount.t * st.t - lineOffset.t);\nscaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\nfloat value;\n#ifdef GL_OES_standard_derivatives\nconst float fuzz = 1.2;\nvec2 thickness = (lineThickness * czm_resolutionScale) - 1.0;\nvec2 dx = abs(dFdx(st));\nvec2 dy = abs(dFdy(st));\nvec2 dF = vec2(max(dx.s, dy.s), max(dx.t, dy.t)) * lineCount;\nvalue = min(\nsmoothstep(dF.s * thickness.s, dF.s * (fuzz + thickness.s), scaledWidth),\nsmoothstep(dF.t * thickness.t, dF.t * (fuzz + thickness.t), scaledHeight));\n#else\nconst float fuzz = 0.05;\nvec2 range = 0.5 - (lineThickness * 0.05);\nvalue = min(\n1.0 - smoothstep(range.s, range.s + fuzz, scaledWidth),\n1.0 - smoothstep(range.t, range.t + fuzz, scaledHeight));\n#endif\nfloat dRim = 1.0 - abs(dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC)));\nfloat sRim = smoothstep(0.8, 1.0, dRim);\nvalue *= (1.0 - sRim);\nvec3 halfColor = color.rgb * 0.5;\nmaterial.diffuse = halfColor;\nmaterial.emission = halfColor;\nmaterial.alpha = color.a * (1.0 - ((1.0 - cellAlpha) * value));\nreturn material;\n}\n"}),r("Shaders/Materials/NormalMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec4 textureValue = texture2D(image, fract(repeat * materialInput.st));\nvec3 normalTangentSpace = textureValue.channels;\nnormalTangentSpace.xy = normalTangentSpace.xy * 2.0 - 1.0;\nnormalTangentSpace.z = clamp(1.0 - strength, 0.1, 1.0);\nnormalTangentSpace = normalize(normalTangentSpace);\nvec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\nmaterial.normal = normalEC;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineArrowMaterial",[],function(){"use strict";return"#extension GL_OES_standard_derivatives : enable\nuniform vec4 color;\nvarying float v_width;\nfloat getPointOnLine(vec2 p0, vec2 p1, float x)\n{\nfloat slope = (p0.y - p1.y) / (p0.x - p1.x);\nreturn slope * (x - p0.x) + p0.y;\n}\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat base = 1.0 - abs(fwidth(st.s)) * 10.0;\nvec2 center = vec2(1.0, 0.5);\nfloat ptOnUpperLine = getPointOnLine(vec2(base, 1.0), center, st.s);\nfloat ptOnLowerLine = getPointOnLine(vec2(base, 0.0), center, st.s);\nfloat halfWidth = 0.15;\nfloat s = step(0.5 - halfWidth, st.t);\ns *= 1.0 - step(0.5 + halfWidth, st.t);\ns *= 1.0 - step(base, st.s);\nfloat t = step(base, materialInput.st.s);\nt *= 1.0 - step(ptOnUpperLine, st.t);\nt *= step(ptOnLowerLine, st.t);\nfloat dist;\nif (st.s < base)\n{\nfloat d1 = abs(st.t - (0.5 - halfWidth));\nfloat d2 = abs(st.t - (0.5 + halfWidth));\ndist = min(d1, d2);\n}\nelse\n{\nfloat d1 = czm_infinity;\nif (st.t < 0.5 - halfWidth && st.t > 0.5 + halfWidth)\n{\nd1 = abs(st.s - base);\n}\nfloat d2 = abs(st.t - ptOnUpperLine);\nfloat d3 = abs(st.t - ptOnLowerLine);\ndist = min(min(d1, d2), d3);\n}\nvec4 outsideColor = vec4(0.0);\nvec4 currentColor = mix(outsideColor, color, clamp(s + t, 0.0, 1.0));\nvec4 outColor = czm_antialias(outsideColor, color, currentColor, dist);\nmaterial.diffuse = outColor.rgb;\nmaterial.alpha = outColor.a;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineGlowMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform float glowPower;\nvarying float v_width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);\nmaterial.emission = max(vec3(glow - 1.0 + color.rgb), color.rgb);\nmaterial.alpha = clamp(0.0, 1.0, glow) * color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineOutlineMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 outlineColor;\nuniform float outlineWidth;\nvarying float v_width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat halfInteriorWidth =  0.5 * (v_width - outlineWidth) / v_width;\nfloat b = step(0.5 - halfInteriorWidth, st.t);\nb *= 1.0 - step(0.5 + halfInteriorWidth, st.t);\nfloat d1 = abs(st.t - (0.5 - halfInteriorWidth));\nfloat d2 = abs(st.t - (0.5 + halfInteriorWidth));\nfloat dist = min(d1, d2);\nvec4 currentColor = mix(outlineColor, color, b);\nvec4 outColor = czm_antialias(outlineColor, color, currentColor, dist);\nmaterial.diffuse = outColor.rgb;\nmaterial.alpha = outColor.a;\nreturn material;\n}\n"}),r("Shaders/Materials/RimLightingMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 rimColor;\nuniform float width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat d = 1.0 - dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC));\nfloat s = smoothstep(1.0 - width, 1.0, d);\nmaterial.diffuse = color.rgb;\nmaterial.emission = rimColor.rgb * s;\nmaterial.alpha = mix(color.a, rimColor.a, s);\nreturn material;\n}\n"}),r("Shaders/Materials/StripeMaterial",[],function(){"use strict";return"uniform vec4 evenColor;\nuniform vec4 oddColor;\nuniform float offset;\nuniform float repeat;\nuniform bool horizontal;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat coord = mix(materialInput.st.s, materialInput.st.t, float(horizontal));\nfloat value = fract((coord - offset) * (repeat * 0.5));\nfloat dist = min(value, min(abs(value - 0.5), 1.0 - value));\nvec4 currentColor = mix(evenColor, oddColor, step(0.5, value));\nvec4 color = czm_antialias(evenColor, oddColor, currentColor, dist);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/Water",[],function(){"use strict";return"uniform sampler2D specularMap;\nuniform sampler2D normalMap;\nuniform vec4 baseWaterColor;\nuniform vec4 blendColor;\nuniform float frequency;\nuniform float animationSpeed;\nuniform float amplitude;\nuniform float specularIntensity;\nuniform float fadeFactor;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat time = czm_frameNumber * animationSpeed;\nfloat fade = max(1.0, (length(materialInput.positionToEyeEC) / 10000000000.0) * frequency * fadeFactor);\nfloat specularMapValue = texture2D(specularMap, materialInput.st).r;\nvec4 noise = czm_getWaterNoise(normalMap, materialInput.st * frequency, time, 0.0);\nvec3 normalTangentSpace = noise.xyz * vec3(1.0, 1.0, (1.0 / amplitude));\nnormalTangentSpace.xy /= fade;\nnormalTangentSpace = mix(vec3(0.0, 0.0, 50.0), normalTangentSpace, specularMapValue);\nnormalTangentSpace = normalize(normalTangentSpace);\nfloat tsPerturbationRatio = clamp(dot(normalTangentSpace, vec3(0.0, 0.0, 1.0)), 0.0, 1.0);\nmaterial.alpha = specularMapValue;\nmaterial.diffuse = mix(blendColor.rgb, baseWaterColor.rgb, specularMapValue);\nmaterial.diffuse += (0.1 * tsPerturbationRatio);\nmaterial.normal = normalize(materialInput.tangentToEyeMatrix * normalTangentSpace);\nmaterial.specular = specularIntensity;\nmaterial.shininess = 10.0;\nreturn material;\n}\n"}),r("Scene/Material",["../Core/Cartesian2","../Core/clone","../Core/Color","../Core/combine","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/isArray","../Core/loadImage","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Renderer/CubeMap","../Renderer/Texture","../Shaders/Materials/BumpMapMaterial","../Shaders/Materials/CheckerboardMaterial","../Shaders/Materials/DotMaterial","../Shaders/Materials/FadeMaterial","../Shaders/Materials/GridMaterial","../Shaders/Materials/NormalMapMaterial","../Shaders/Materials/PolylineArrowMaterial","../Shaders/Materials/PolylineGlowMaterial","../Shaders/Materials/PolylineOutlineMaterial","../Shaders/Materials/RimLightingMaterial","../Shaders/Materials/StripeMaterial","../Shaders/Materials/Water","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M){"use strict";function D(e,r){e=o(e,o.EMPTY_OBJECT),r._strict=o(e.strict,!1),r._count=o(e.count,0),r._template=t(o(e.fabric,o.EMPTY_OBJECT)),r._template.uniforms=t(o(r._template.uniforms,o.EMPTY_OBJECT)),r._template.materials=t(o(r._template.materials,o.EMPTY_OBJECT)),r.type=a(r._template.type)?r._template.type:n(),r.shaderSource="",r.materials={},r.uniforms={},r._uniforms={},r._translucentFunctions=[];var s,l=H._materialCache.getMaterial(r.type);if(a(l)){var u=t(l.fabric,!0);r._template=i(r._template,u,!0),s=l.translucent}L(r),a(l)||H._materialCache.addMaterial(r.type,r),N(r),z(r),U(r);var c=0===r._translucentFunctions.length?!0:void 0;if(s=o(s,c),s=o(e.translucent,s),a(s))if("function"==typeof s){var h=function(){return s(r)};r._translucentFunctions.push(h)}else r._translucentFunctions.push(s)}function I(e,t,r,i){if(a(e))for(var n in e)if(e.hasOwnProperty(n)){var o=-1!==t.indexOf(n);(i&&!o||!i&&o)&&r(n,t)}}function R(e,t){for(var r="fabric: property name '"+e+"' is not valid. It should be ",i=0;i<t.length;i++){var n="'"+t[i]+"'";r+=i===t.length-1?"or "+n+".":n+", "}throw new u(r)}function O(e){var t="fabric: uniforms and materials cannot share the same property '"+e+"'";throw new u(t)}function L(e){var t=e._template,r=t.uniforms,i=t.materials,n=t.components;if(a(n)&&a(t.source))throw new u("fabric: cannot have source and components in the same template.");I(t,q,R,!0),I(n,j,R,!0);var o=[];for(var s in i)i.hasOwnProperty(s)&&o.push(s);I(r,o,O,!1)}function N(e){var t=e._template.components,r=e._template.source;if(a(r))e.shaderSource+=r+"\n";else{if(e.shaderSource+="czm_material czm_getMaterial(czm_materialInput materialInput)\n{\n",e.shaderSource+="czm_material material = czm_getDefaultMaterial(materialInput);\n",a(t))for(var i in t)t.hasOwnProperty(i)&&(e.shaderSource+="material."+i+" = "+t[i]+";\n");e.shaderSource+="return material;\n}\n"}}function B(e){return function(t,r){var i,n,o=t.uniforms,s=o[e],l=t._textures[e];if(s instanceof v&&s!==l)return H._textureCache.releaseTexture(t._texturePaths[e]),t._texturePaths[e]=void 0,t._textures[e]=s,i=e+"Dimensions",o.hasOwnProperty(i)&&(n=o[i],n.x=s._width,n.y=s._height),void 0;if(a(l)||(t._texturePaths[e]=void 0,l=t._textures[e]=r.defaultTexture,i=e+"Dimensions",o.hasOwnProperty(i)&&(n=o[i],n.x=l._width,n.y=l._height)),s!==H.DefaultImageId&&s!==t._texturePaths[e]){var u=H._textureCache.getTexture(s);a(u)?(H._textureCache.releaseTexture(t._texturePaths[e]),t._textures[e]=u):M(h(s),function(r){t._loadedImages.push({id:e,image:r})}),t._texturePaths[e]=s}}}function F(e){return function(t,r){var i=t.uniforms[e];if(i instanceof f)return H._textureCache.releaseTexture(t._texturePaths[e]),t._texturePaths[e]=void 0,t._textures[e]=i,void 0;if(a(t._textures[e])||(t._texturePaths[e]=void 0,t._textures[e]=r.defaultCubeMap),i!==H.DefaultCubeMapId){var n=i.positiveX+i.negativeX+i.positiveY+i.negativeY+i.positiveZ+i.negativeZ;if(n!==t._texturePaths[e]){var o=H._textureCache.getTexture(n);if(a(o))H._textureCache.releaseTexture(t._texturePaths[e]),t._textures[e]=o;else{var s=[h(i.positiveX),h(i.negativeX),h(i.positiveY),h(i.negativeY),h(i.positiveZ),h(i.negativeZ)];M.all(s).then(function(r){t._loadedCubeMaps.push({id:e,images:r})})}t._texturePaths[e]=n}}}}function z(e){var t=e._template.uniforms;for(var r in t)t.hasOwnProperty(r)&&V(e,r)}function V(e,t){var r=e._strict,i=e._template.uniforms,n=i[t],o=k(n);if(!a(o))throw new u("fabric: uniform '"+t+"' has invalid type.");if("channels"===o){if(0===W(e,t,n,!1)&&r)throw new u("strict: shader source does not use channels '"+t+"'.")}else{if("sampler2D"===o){var s=t+"Dimensions";G(e,s)>0&&(i[s]={type:"ivec3",x:1,y:1},V(e,s))}var l=new RegExp("uniform\\s+"+o+"\\s+"+t+"\\s*;");if(!l.test(e.shaderSource)){var c="uniform "+o+" "+t+";";e.shaderSource=c+e.shaderSource}var h=t+"_"+e._count++;if(1===W(e,t,h)&&r)throw new u("strict: shader source does not use uniform '"+t+"'.");if(e.uniforms[t]=n,"sampler2D"===o)e._uniforms[h]=function(){return e._textures[t]},e._updateFunctions.push(B(t));else if("samplerCube"===o)e._uniforms[h]=function(){return e._textures[t]},e._updateFunctions.push(F(t));else if(-1!==o.indexOf("mat")){var d=new Y[o];e._uniforms[h]=function(){return Y[o].fromColumnMajorArray(e.uniforms[t],d)}}else e._uniforms[h]=function(){return e.uniforms[t]}}}function k(e){var t=e.type;if(!a(t)){var r=typeof e;if("number"===r)t="float";else if("boolean"===r)t="bool";else if("string"===r)t=/^([rgba]){1,4}$/i.test(e)?"channels":e===H.DefaultCubeMapId?"samplerCube":"sampler2D";else if("object"===r)if(c(e))(4===e.length||9===e.length||16===e.length)&&(t="mat"+Math.sqrt(e.length));else{var i=0;for(var n in e)e.hasOwnProperty(n)&&(i+=1);i>=2&&4>=i?t="vec"+i:6===i&&(t="samplerCube")}}return t}function U(e){var t=e._strict,r=e._template.materials;for(var n in r)if(r.hasOwnProperty(n)){var o=new H({strict:t,fabric:r[n],count:e._count});e._count=o._count,e._uniforms=i(e._uniforms,o._uniforms,!0),e.materials[n]=o,e._translucentFunctions=e._translucentFunctions.concat(o._translucentFunctions);var a="czm_getMaterial",s=a+"_"+e._count++;W(o,a,s),e.shaderSource=o.shaderSource+e.shaderSource;var l=s+"(materialInput)";if(0===W(e,n,l)&&t)throw new u("strict: shader source does not use material '"+n+"'.")}}function W(e,t,r,i){i=o(i,!0);var n=0,a="([\\w])?",s="([\\w"+(i?".":"")+"])?",l=new RegExp(s+t+a,"g");return e.shaderSource=e.shaderSource.replace(l,function(e,t,i){return t||i?e:(n+=1,r)}),n}function G(e,t,r){return W(e,t,t,r)}var H=function(e){this.type=void 0,this.shaderSource=void 0,this.materials=void 0,this.uniforms=void 0,this._uniforms=void 0,this.translucent=void 0,this._strict=void 0,this._template=void 0,this._count=void 0,this._texturePaths={},this._loadedImages=[],this._loadedCubeMaps=[],this._textures={},this._updateFunctions=[],D(e,this),s(this,{type:{value:this.type,writable:!1}}),a(H._uniformList[this.type])||(H._uniformList[this.type]=Object.keys(this._uniforms))};H._uniformList={},H.fromType=function(e,t){var r=new H({fabric:{type:e}});if(a(t))for(var i in t)t.hasOwnProperty(i)&&(r.uniforms[i]=t[i]);return r},H.prototype.isTranslucent=function(){if(a(this.translucent))return"function"==typeof this.translucent?this.translucent():this.translucent;for(var e=!0,t=this._translucentFunctions,r=t.length,i=0;r>i;++i){var n=t[i];if(e="function"==typeof n?e&&n():e&&n,!e)break}return e},H.prototype.update=function(e){var t,r,i=this._loadedImages,n=i.length;for(t=0;n>t;++t){var o=i[t];r=o.id;var s=o.image,l=H._textureCache.getTexture(this._texturePaths[r]);a(l)||(l=e.createTexture2D({source:s}),H._textureCache.addTexture(this._texturePaths[r],l)),this._textures[r]=l;var u=r+"Dimensions";if(this.uniforms.hasOwnProperty(u)){var c=this.uniforms[u];c.x=l._width,c.y=l._height}}i.length=0;var h=this._loadedCubeMaps;for(n=h.length,t=0;n>t;++t){var d=h[t];r=d.id;var m=d.images,p=H._textureCache.getTexture(this._texturePaths[r]);a(p)||(p=e.createCubeMap({source:{positiveX:m[0],negativeX:m[1],positiveY:m[2],negativeY:m[3],positiveZ:m[4],negativeZ:m[5]}}),H._textureCache.addTexture(this._texturePaths[r],p)),this._textures[r]=p}h.length=0;var f=this._updateFunctions;for(n=f.length,t=0;n>t;++t)f[t](this,e);var v=this.materials;for(var g in v)v.hasOwnProperty(g)&&v[g].update(e)},H.prototype.isDestroyed=function(){return!1},H.prototype.destroy=function(){var e=this.materials,t=this.uniforms;for(var r in t)if(t.hasOwnProperty(r)){var i=this._texturePaths[r];H._textureCache.releaseTexture(i)}for(var n in e)e.hasOwnProperty(n)&&e[n].destroy();return l(this)};var q=["type","materials","uniforms","components","source"],j=["diffuse","specular","shininess","normal","emission","alpha"],Y={mat2:d,mat3:m,mat4:p};return H._textureCache={_textures:{},addTexture:function(e,t){this._textures[e]={texture:t,count:1}},getTexture:function(e){var t=this._textures[e];return a(t)?(t.count++,t.texture):void 0},releaseTexture:function(e){var t=this._textures[e];a(t)&&0===--t.count&&(t.texture=t.texture&&t.texture.destroy(),this._textures[e]=void 0)}},H._materialCache={_materials:{},addMaterial:function(e,t){this._materials[e]=t},getMaterial:function(e){return this._materials[e]}},H.DefaultImageId="czm_defaultImage",H.DefaultCubeMapId="czm_defaultCubeMap",H.ColorType="Color",H._materialCache.addMaterial(H.ColorType,{fabric:{type:H.ColorType,uniforms:{color:new r(1,0,0,.5)},components:{diffuse:"color.rgb",alpha:"color.a"}},translucent:function(e){return e.uniforms.color.alpha<1}}),H.ImageType="Image",H._materialCache.addMaterial(H.ImageType,{fabric:{type:H.ImageType,uniforms:{image:H.DefaultImageId,repeat:new e(1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).rgb",alpha:"texture2D(image, fract(repeat * materialInput.st)).a"}},translucent:!0}),H.DiffuseMapType="DiffuseMap",H._materialCache.addMaterial(H.DiffuseMapType,{fabric:{type:H.DiffuseMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),H.AlphaMapType="AlphaMap",H._materialCache.addMaterial(H.AlphaMapType,{fabric:{type:H.AlphaMapType,uniforms:{image:H.DefaultImageId,channel:"a",repeat:new e(1,1)},components:{alpha:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!0}),H.SpecularMapType="SpecularMap",H._materialCache.addMaterial(H.SpecularMapType,{fabric:{type:H.SpecularMapType,uniforms:{image:H.DefaultImageId,channel:"r",repeat:new e(1,1)},components:{specular:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!1}),H.EmissionMapType="EmissionMap",H._materialCache.addMaterial(H.EmissionMapType,{fabric:{type:H.EmissionMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{emission:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),H.BumpMapType="BumpMap",H._materialCache.addMaterial(H.BumpMapType,{fabric:{type:H.BumpMapType,uniforms:{image:H.DefaultImageId,channel:"r",strength:.8,repeat:new e(1,1)},source:g},translucent:!1}),H.NormalMapType="NormalMap",H._materialCache.addMaterial(H.NormalMapType,{fabric:{type:H.NormalMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",strength:.8,repeat:new e(1,1)},source:S},translucent:!1}),H.GridType="Grid",H._materialCache.addMaterial(H.GridType,{fabric:{type:H.GridType,uniforms:{color:new r(0,1,0,1),cellAlpha:.1,lineCount:new e(8,8),lineThickness:new e(1,1),lineOffset:new e(0,0)},source:w},translucent:function(e){var t=e.uniforms;
return t.color.alpha<1||t.cellAlpha<1}}),H.StripeType="Stripe",H._materialCache.addMaterial(H.StripeType,{fabric:{type:H.StripeType,uniforms:{horizontal:!0,evenColor:new r(1,1,1,.5),oddColor:new r(0,0,1,.5),offset:0,repeat:5},source:P},translucent:function(e){var t=e.uniforms;return t.evenColor.alpha<1||t.oddColor.alpha<0}}),H.CheckerboardType="Checkerboard",H._materialCache.addMaterial(H.CheckerboardType,{fabric:{type:H.CheckerboardType,uniforms:{lightColor:new r(1,1,1,.5),darkColor:new r(0,0,0,.5),repeat:new e(5,5)},source:_},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<0}}),H.DotType="Dot",H._materialCache.addMaterial(H.DotType,{fabric:{type:H.DotType,uniforms:{lightColor:new r(1,1,0,.75),darkColor:new r(0,1,1,.75),repeat:new e(5,5)},source:y},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<0}}),H.WaterType="Water",H._materialCache.addMaterial(H.WaterType,{fabric:{type:H.WaterType,uniforms:{baseWaterColor:new r(.2,.3,.6,1),blendColor:new r(0,1,.699,1),specularMap:H.DefaultImageId,normalMap:H.DefaultImageId,frequency:10,animationSpeed:.01,amplitude:1,specularIntensity:.5,fadeFactor:1},source:A},translucent:function(e){var t=e.uniforms;return t.baseWaterColor.alpha<1||t.blendColor.alpha<0}}),H.RimLightingType="RimLighting",H._materialCache.addMaterial(H.RimLightingType,{fabric:{type:H.RimLightingType,uniforms:{color:new r(1,0,0,.7),rimColor:new r(1,1,1,.4),width:.3},source:x},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.rimColor.alpha<0}}),H.FadeType="Fade",H._materialCache.addMaterial(H.FadeType,{fabric:{type:H.FadeType,uniforms:{fadeInColor:new r(1,0,0,1),fadeOutColor:new r(0,0,0,0),maximumDistance:.5,repeat:!0,fadeDirection:{x:!0,y:!0},time:new e(.5,.5)},source:C},translucent:function(e){var t=e.uniforms;return t.fadeInColor.alpha<1||t.fadeOutColor.alpha<0}}),H.PolylineArrowType="PolylineArrow",H._materialCache.addMaterial(H.PolylineArrowType,{fabric:{type:H.PolylineArrowType,uniforms:{color:new r(1,1,1,1)},source:E},translucent:!0}),H.PolylineGlowType="PolylineGlow",H._materialCache.addMaterial(H.PolylineGlowType,{fabric:{type:H.PolylineGlowType,uniforms:{color:new r(0,.5,1,1),glowPower:.25},source:b},translucent:!0}),H.PolylineOutlineType="PolylineOutline",H._materialCache.addMaterial(H.PolylineOutlineType,{fabric:{type:H.PolylineOutlineType,uniforms:{color:new r(1,1,1,1),outlineColor:new r(1,0,0,1),outlineWidth:1},source:T},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.outlineColor.alpha<1}}),H}),r("Scene/MaterialAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/freezeObject","../Core/VertexFormat","../Shaders/Appearances/AllMaterialAppearanceFS","../Shaders/Appearances/AllMaterialAppearanceVS","../Shaders/Appearances/BasicMaterialAppearanceFS","../Shaders/Appearances/BasicMaterialAppearanceVS","../Shaders/Appearances/TexturedMaterialAppearanceFS","../Shaders/Appearances/TexturedMaterialAppearanceVS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),n=e(r.closed,!1),o=e(r.materialSupport,m.MaterialSupport.TEXTURED);this.material=t(r.material)?r.material:d.fromType(d.ColorType),this.translucent=i,this._vertexShaderSource=e(r.vertexShaderSource,o.vertexShaderSource),this._fragmentShaderSource=e(r.fragmentShaderSource,o.fragmentShaderSource),this._renderState=e(r.renderState,h.getDefaultRenderState(i,n)),this._closed=n,this._materialSupport=o,this._vertexFormat=o.vertexFormat,this._flat=e(r.flat,!1),this._faceForward=e(r.faceForward,!n)};return r(m.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},materialSupport:{get:function(){return this._materialSupport}},vertexFormat:{get:function(){return this._vertexFormat}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}}}),m.prototype.getFragmentShaderSource=h.prototype.getFragmentShaderSource,m.prototype.isTranslucent=h.prototype.isTranslucent,m.prototype.getRenderState=h.prototype.getRenderState,m.MaterialSupport={BASIC:i({vertexFormat:n.POSITION_AND_NORMAL,vertexShaderSource:l,fragmentShaderSource:s}),TEXTURED:i({vertexFormat:n.POSITION_NORMAL_AND_ST,vertexShaderSource:c,fragmentShaderSource:u}),ALL:i({vertexFormat:n.ALL,vertexShaderSource:a,fragmentShaderSource:o})},m}),r("Shaders/Appearances/PerInstanceColorAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec4 v_color;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getDefaultMaterial(materialInput);\nmaterial.diffuse = v_color.rgb;\nmaterial.alpha = v_color.a;\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n}\n"}),r("Shaders/Appearances/PerInstanceColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec4 color;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec4 v_color;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_color = color;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/PerInstanceFlatColorAppearanceFS",[],function(){"use strict";return"varying vec4 v_color;\nvoid main()\n{\ngl_FragColor = v_color;\n}\n"}),r("Shaders/Appearances/PerInstanceFlatColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec4 color;\nvarying vec4 v_color;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_color = color;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/PerInstanceColorAppearance",["../Core/defaultValue","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/PerInstanceColorAppearanceFS","../Shaders/Appearances/PerInstanceColorAppearanceVS","../Shaders/Appearances/PerInstanceFlatColorAppearanceFS","../Shaders/Appearances/PerInstanceFlatColorAppearanceVS","./Appearance"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=e(t.translucent,!0),u=e(t.closed,!1),c=e(t.flat,!1),h=c?a:n,d=c?o:i,m=c?l.FLAT_VERTEX_FORMAT:l.VERTEX_FORMAT;this.material=void 0,this.translucent=r,this._vertexShaderSource=e(t.vertexShaderSource,h),this._fragmentShaderSource=e(t.fragmentShaderSource,d),this._renderState=e(t.renderState,s.getDefaultRenderState(r,u)),this._closed=u,this._vertexFormat=m,this._flat=c,this._faceForward=e(t.faceForward,!u)};return t(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}}}),l.VERTEX_FORMAT=r.POSITION_AND_NORMAL,l.FLAT_VERTEX_FORMAT=r.POSITION_ONLY,l.prototype.getFragmentShaderSource=s.prototype.getFragmentShaderSource,l.prototype.isTranslucent=s.prototype.isTranslucent,l.prototype.getRenderState=s.prototype.getRenderState,l}),r("Scene/PrimitivePipeline",["../Core/BoundingSphere","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/Ellipsoid","../Core/FeatureDetection","../Core/GeographicProjection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryPipeline","../Core/IndexDatatype","../Core/Matrix4","../Core/WebMercatorProjection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,r){var i,n=!r,o=e.length;if(!n&&o>1){var a=e[0].modelMatrix;for(i=1;o>i;++i)if(!m.equals(a,e[i].modelMatrix)){n=!0;break}}if(n)for(i=0;o>i;++i)h.transformToWorldCoordinates(e[i]);else m.clone(e[0].modelMatrix,t)}function v(e,i){for(var n=e.length,o=0;n>o;++o){var a=e[o],s=a.geometry,l=s.attributes,u=l.position,h=4*(u.values.length/u.componentsPerAttribute);l.pickColor=new c({componentDatatype:r.UNSIGNED_BYTE,componentsPerAttribute:4,normalize:!0,values:new Uint8Array(h)});for(var d=i[o],m=t.floatToByte(d.red),p=t.floatToByte(d.green),f=t.floatToByte(d.blue),v=t.floatToByte(d.alpha),g=l.pickColor.values,_=0;h>_;_+=4)g[_]=m,g[_+1]=p,g[_+2]=f,g[_+3]=v}}function g(e){var t,r=e.length,i=[],o=e[0].attributes;for(t in o)if(o.hasOwnProperty(t)){for(var a=o[t],s=!0,l=1;r>l;++l){var u=e[l].attributes[t];if(!n(u)||a.componentDatatype!==u.componentDatatype||a.componentsPerAttribute!==u.componentsPerAttribute||a.normalize!==u.normalize){s=!1;break}}s&&i.push(t)}return i}function _(e,t){for(var i=e.length,n=0;i>n;++n)for(var o=e[n],a=o.attributes,s=o.geometry,l=u.computeNumberOfVertices(s),h=t.length,d=0;h>d;++d){for(var m=t[d],p=a[m],f=p.componentDatatype,v=p.value,g=v.length,_=r.createTypedArray(f,l*g),y=0;l>y;++y)_.set(v,y*g);s.attributes[m]=new c({componentDatatype:f,componentsPerAttribute:g,normalize:p.normalize,values:_})}}function y(e){var t,i=e.instances,n=e.pickIds,o=e.projection,a=e.elementIndexUintSupported,s=e.scene3DOnly,l=e.allowPicking,u=e.vertexCacheOptimize,c=e.modelMatrix,d=i.length;if(i[0].geometry.primitiveType,f(i,c,s),!s)for(t=0;d>t;++t)h.wrapLongitude(i[t].geometry);l&&v(i,n);var m=g(i);if(_(i,m),u)for(t=0;d>t;++t)h.reorderForPostVertexCache(i[t].geometry),h.reorderForPreVertexCache(i[t].geometry);var p,y=h.combine(i),C=y.attributes;if(s)for(p in C)C.hasOwnProperty(p)&&C[p].componentDatatype===r.DOUBLE&&h.encodeAttribute(y,p,p+"3DHigh",p+"3DLow");else for(p in C)if(C.hasOwnProperty(p)&&C[p].componentDatatype===r.DOUBLE){var w=p+"3D",S=p+"2D";h.projectTo2D(y,p,w,S,o),h.encodeAttribute(y,w,w+"High",w+"Low"),h.encodeAttribute(y,S,S+"High",S+"Low")}return a?[y]:h.fitToUnsignedShortIndices(y)}function C(e,t,i){for(var n=[],o=e.attributes,a=i.length,s=0;a>s;++s){var l=i[s],u=o[l],c=u.componentDatatype;c===r.DOUBLE&&(c=r.FLOAT);var h=r.createTypedArray(c,u.values);n.push({index:t[l],componentDatatype:c,componentsPerAttribute:u.componentsPerAttribute,normalize:u.normalize,values:h}),delete o[l]}return n}function w(e,t,r){for(var o=[],a=g(e),s=e.length,l={},c={},h=0;s>h;++h)for(var d=e[h],m=u.computeNumberOfVertices(d.geometry),p=a.length,f=0;p>f;++f)for(var v=a[f],_=r[v],y=m;y>0;){for(var C,w=i(c[v],0),S=t[w],E=S.length,b=0;E>b&&(C=S[b],C.index!==_);++b);n(o[h])||(o[h]={}),n(o[h][v])||(o[h][v]={dirty:!1,value:d.attributes[v].value,indices:[]});var T,x=C.values.length/C.componentsPerAttribute,P=i(l[v],0);x>P+y?(T=y,o[h][v].indices.push({attribute:C,offset:P,count:T}),l[v]=P+y):(T=x-P,o[h][v].indices.push({attribute:C,offset:P,count:T}),l[v]=0,c[v]=w+1),y-=T}return o}function S(e,t){var r=e.attributes;for(var i in r)if(r.hasOwnProperty(i)){var o=r[i];n(o)&&n(o.values)&&t.push(o.values.buffer)}n(e.indices)&&t.push(e.indices.buffer)}function E(e,t){for(var r=e.length,i=0;r>i;++i)S(e[i],t)}function b(e,t){for(var r=e.length,i=0;r>i;++i)for(var n=e[i],o=n.length,a=0;o>a;++a)t.push(n[a].values.buffer)}function T(t){for(var r=1,i=t.length,o=0;i>o;o++){var a=t[o],s=a.attributes;r+=3+e.packedLength+(n(a.indices)?a.indices.length:0);for(var l in s)if(s.hasOwnProperty(l)&&n(s[l])){var u=s[l];r+=5+u.values.length}}return r}function x(e,t){for(var r=e.length,i=new Uint32Array(e.length),n=0;r>n;++n)i[n]=e[n].toRgba();return t.push(i.buffer),i}function P(e){for(var r=e.length,i=new Array(r),n=0;r>n;n++)i[n]=t.fromRgba(e[n]);return i}function A(e){for(var t=e.length,r=1+17*t,i=0;t>i;i++){var o=e[i].attributes;for(var a in o)if(o.hasOwnProperty(a)&&n(o[a])){var s=o[a];r+=5+s.value.length}}return r}function M(e,t){var r=new Float64Array(A(e)),i={},o=[],a=e.length,s=0;r[s++]=a;for(var l=0;a>l;l++){var u=e[l];m.pack(u.modelMatrix,r,s),s+=m.packedLength;var c=u.attributes,h=[];for(var d in c)c.hasOwnProperty(d)&&n(c[d])&&(h.push(d),n(i[d])||(i[d]=o.length,o.push(d)));r[s++]=h.length;for(var p=0;p<h.length;p++){var f=h[p],v=c[f];r[s++]=i[f],r[s++]=v.componentDatatype,r[s++]=v.componentsPerAttribute,r[s++]=v.normalize,r[s++]=v.value.length,r.set(v.value,s),s+=v.value.length}}return t.push(r.buffer),{stringTable:o,packedData:r}}function D(e){for(var t=e.packedData,i=e.stringTable,n=new Array(t[0]),o=0,a=1;a<t.length;){var s=m.unpack(t,a);a+=m.packedLength;for(var l={},u=t[a++],c=0;u>c;c++){for(var h=i[t[a++]],d=t[a++],p=t[a++],f=0!==t[a++],v=t[a++],g=r.createTypedArray(d,v),_=0;v>_;_++)g[_]=t[a++];l[h]={componentDatatype:d,componentsPerAttribute:p,normalize:f,value:g}}n[o++]={attributes:l,modelMatrix:s}}return n}function I(e){for(var t=e.length,r=1+t,i=0;t>i;i++){var o=e[i];for(var a in o)if(o.hasOwnProperty(a)&&n(o[a])){var s=o[a];r+=3+3*s.indices.length+s.value.length}}return r}function R(e,t){var r=new Float64Array(I(e)),i=[],o=[],a={},s=e.length,l=0;r[l++]=s;for(var u=0;s>u;u++){var c=e[u],h=[];for(var d in c)c.hasOwnProperty(d)&&n(c[d])&&(h.push(d),n(a[d])||(a[d]=i.length,i.push(d)));r[l++]=h.length;for(var m=0;m<h.length;m++){var p=h[m],f=c[p];r[l++]=a[p];var v=f.indices,g=v.length;r[l++]=g;for(var _=0;g>_;_++){var y=v[_];r[l++]=y.count,r[l++]=y.offset;var C=o.indexOf(y.attribute);-1===C&&(C=o.length,o.push(y.attribute)),r[l++]=C}r[l++]=f.value.length,r.set(f.value,l),l+=f.value.length}}return t.push(r.buffer),{stringTable:i,packedData:r,attributeTable:o}}function O(e){for(var t=e.stringTable,i=e.attributeTable,n=e.packedData,o=new Array(n[0]),a=0,s=1,l=n.length;l>s;){for(var u={},c=n[s++],h=0;c>h;h++){for(var d=t[n[s++]],m=new Array(n[s++]),p=0;p<m.length;p++){var f={};f.count=n[s++],f.offset=n[s++],f.attribute=i[n[s++]],m[p]=f}for(var v=n[s++],g=r.createTypedArray(m[0].attribute.componentDatatype,v),_=0;v>_;_++)g[_]=n[s++];u[d]={dirty:!1,indices:m,value:g}}o[a++]=u}return o}if(!s.supportsTypedArrays())return{};var L={};return L.combineGeometry=function(e){for(var t=y(e),r=h.createAttributeLocations(t[0]),i=e.instances,n=g(i),o=[],a=t.length,s=0;a>s;++s){var l=t[s];o.push(C(l,r,n))}var u=w(i,o,r);return{geometries:t,modelMatrix:e.modelMatrix,attributeLocations:r,vaAttributes:o,vaAttributeLocations:u}},L.packCreateGeometryResults=function(t,r){var i=new Float64Array(T(t)),o=[],a={},s=t.length,l=0;i[l++]=s;for(var u=0;s>u;u++){var c=t[u];i[l++]=c.primitiveType,e.pack(c.boundingSphere,i,l),l+=e.packedLength;var h=c.attributes,d=[];for(var m in h)h.hasOwnProperty(m)&&n(h[m])&&(d.push(m),n(a[m])||(a[m]=o.length,o.push(m)));i[l++]=d.length;for(var p=0;p<d.length;p++){var f=d[p],v=h[f];i[l++]=a[f],i[l++]=v.componentDatatype,i[l++]=v.componentsPerAttribute,i[l++]=v.normalize?1:0,i[l++]=v.values.length,i.set(v.values,l),l+=v.values.length}var g=n(c.indices)?c.indices.length:0;i[l++]=g,g>0&&(i.set(c.indices,l),l+=g)}return r.push(i.buffer),{stringTable:o,packedData:i}},L.unpackCreateGeometryResults=function(t){for(var i,n=t.stringTable,o=t.packedData,a=new Array(o[0]),s=0,l=1;l<o.length;){var h=o[l++],m=e.unpack(o,l);l+=e.packedLength;var p,f,v,g={},_=o[l++];for(i=0;_>i;i++){var y=n[o[l++]],C=o[l++];v=o[l++];var w=0!==o[l++];p=o[l++],f=r.createTypedArray(C,p);for(var S=0;p>S;S++)f[S]=o[l++];g[y]=new c({componentDatatype:C,componentsPerAttribute:v,normalize:w,values:f})}var E;if(p=o[l++],p>0){var b=f.length/v;for(E=d.createTypedArray(b,p),i=0;p>i;i++)E[i]=o[l++]}a[s++]=new u({primitiveType:h,boundingSphere:m,indices:E,attributes:g})}return a},L.packCombineGeometryParameters=function(e,t){for(var r=e.createGeometryResults,i=r.length,n=0;i>n;n++)t.push(r[n].packedData.buffer);var o;return e.allowPicking&&(o=x(e.pickIds,t)),{createGeometryResults:e.createGeometryResults,packedInstances:M(e.instances,t),packedPickIds:o,ellipsoid:e.ellipsoid,isGeographic:e.projection instanceof l,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,allowPicking:e.allowPicking,vertexCacheOptimize:e.vertexCacheOptimize,modelMatrix:e.modelMatrix}},L.unpackCombineGeometryParameters=function(e){for(var t=D(e.packedInstances),r=e.allowPicking?P(e.packedPickIds):void 0,i=e.createGeometryResults,n=i.length,o=0,s=0;n>s;s++)for(var u=L.unpackCreateGeometryResults(i[s]),c=u.length,h=0;c>h;h++)t[o++].geometry=u[h];var d=a.clone(e.ellipsoid),f=e.isGeographic?new l(d):new p(d);return{instances:t,pickIds:r,ellipsoid:d,projection:f,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,allowPicking:e.allowPicking,vertexCacheOptimize:e.vertexCacheOptimize,modelMatrix:m.clone(e.modelMatrix)}},L.packCombineGeometryResults=function(e,t){return E(e.geometries,t),b(e.vaAttributes,t),{geometries:e.geometries,attributeLocations:e.attributeLocations,vaAttributes:e.vaAttributes,packedVaAttributeLocations:R(e.vaAttributeLocations,t),modelMatrix:e.modelMatrix}},L.unpackCombineGeometryResults=function(e){return{geometries:e.geometries,attributeLocations:e.attributeLocations,vaAttributes:e.vaAttributes,perInstanceAttributeLocations:O(e.packedVaAttributeLocations,e.vaAttributes),modelMatrix:e.modelMatrix}},L}),r("Scene/PrimitiveState",["../Core/freezeObject"],function(e){"use strict";var t={READY:0,CREATING:1,CREATED:2,COMBINING:3,COMBINED:4,COMPLETE:5,FAILED:6};return e(t)}),r("Scene/Primitive",["../Core/BoundingSphere","../Core/clone","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryAttributes","../Core/GeometryInstance","../Core/GeometryInstanceAttribute","../Core/isArray","../Core/Matrix4","../Core/subdivideArray","../Core/TaskProcessor","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../ThirdParty/when","./CullFace","./Pass","./PrimitivePipeline","./PrimitiveState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x){"use strict";function P(e){return new c({componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,values:new e.values.constructor(e.values)})}function A(t){var r=t.attributes,i=new h;for(var o in r)r.hasOwnProperty(o)&&n(r[o])&&(i[o]=P(r[o]));var a;if(n(t.indices)){var s=t.indices;a=new s.constructor(s)}return new u({attributes:i,indices:a,primitiveType:t.primitiveType,boundingSphere:e.clone(t.boundingSphere)})}function M(e){return new m({componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,value:new e.value.constructor(e.value)})}function D(e,t){var r=e.attributes,i={};for(var n in r)r.hasOwnProperty(n)&&(i[n]=M(r[n]));return new d({geometry:t,modelMatrix:f.clone(e.modelMatrix),attributes:i})}function I(e,t,r){for(var i,n="",o="",a="";null!==(i=k.exec(t));){var s=i[1],l="vec4 czm_compute"+s[0].toUpperCase()+s.substr(1)+"()";"vec4 czm_computePosition()"!==l&&(n+=l+";\n"),r?a+=l+"\n"+"{\n"+"    return czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n"+"}\n\n":(o+="attribute vec3 "+s+"2DHigh;\n"+"attribute vec3 "+s+"2DLow;\n",a+=l+"\n"+"{\n"+"    vec4 p;\n"+"    if (czm_morphTime == 1.0)\n"+"    {\n"+"        p = czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n"+"    }\n"+"    else if (czm_morphTime == 0.0)\n"+"    {\n"+"        p = czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy);\n"+"    }\n"+"    else\n"+"    {\n"+"        p = czm_columbusViewMorph(\n"+"                czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy),\n"+"                czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow),\n"+"                czm_morphTime);\n"+"    }\n"+"    return p;\n"+"}\n\n")}return y({sources:[n,o,t,a]})}function R(e){var t=e.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_old_main()"),r="attribute vec4 pickColor; \nvarying vec4 czm_pickColor; \nvoid main() \n{ \n    czm_old_main(); \n    czm_pickColor = pickColor; \n}";return t+"\n"+r}function O(e,t){if(!n(e._attributeLocations.show))return t;var r=t.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_non_show_main()"),i="attribute float show;\nvoid main() \n{ \n    czm_non_show_main(); \n    gl_Position *= show; \n}";return r+"\n"+i}function L(e){e.vertexAttributes}function N(e,t,r){for(var o=[],a=r.length,s=0;a>s;++s){var l={primitive:i(r[s].pickPrimitive,t)};n(r[s].id)&&(l.id=r[s].id);var u=e.createPickId(l);t._pickIds.push(u),o.push(u.color)}return o}function B(e,t){return function(){return t[e].value}}function F(e,t,r){return function(i){var n=t[e];n.value=i,n.dirty||(r.push(n),n.dirty=!0)}}var z=function(e){e=i(e,i.EMPTY_OBJECT),this.geometryInstances=e.geometryInstances,this.appearance=e.appearance,this._appearance=void 0,this._material=void 0,this.modelMatrix=f.clone(f.IDENTITY),this._modelMatrix=new f,this.show=i(e.show,!0),this._vertexCacheOptimize=i(e.vertexCacheOptimize,!1),this._interleave=i(e.interleave,!1),this._releaseGeometryInstances=i(e.releaseGeometryInstances,!0),this._allowPicking=i(e.allowPicking,!0),this._asynchronous=i(e.asynchronous,!0),this.debugShowBoundingVolume=i(e.debugShowBoundingVolume,!1),this._translucent=void 0,this._state=T.READY,this._geometries=[],this._vaAttributes=void 0,this._error=void 0,this._numberOfInstances=0,this._boundingSphere=void 0,this._boundingSphereWC=void 0,this._boundingSphereCV=void 0,this._boundingSphere2D=void 0,this._perInstanceAttributeLocations=void 0,this._instanceIds=[],this._lastPerInstanceAttributeIndex=0,this._dirtyAttributes=[],this._va=[],this._attributeLocations=void 0,this._primitiveType=void 0,this._frontFaceRS=void 0,this._backFaceRS=void 0,this._sp=void 0,this._pickRS=void 0,this._pickSP=void 0,this._pickIds=[],this._colorCommands=[],this._pickCommands=[],this._createGeometryResults=void 0};o(z.prototype,{vertexCacheOptimize:{get:function(){return this._vertexCacheOptimize}},interleave:{get:function(){return this._interleave}},releaseGeometryInstances:{get:function(){return this._releaseGeometryInstances}},allowPicking:{get:function(){return this._allowPicking}},asynchronous:{get:function(){return this._asynchronous}},ready:{get:function(){return this._state===T.COMPLETE}}});var V,k=/attribute\s+vec(?:3|4)\s+(.*)3DHigh;/g,U=Math.max(l.hardwareConcurrency-1,1),W=new g("combineGeometry",Number.POSITIVE_INFINITY);return z.prototype.update=function(i,o,a){if(!(!n(this.geometryInstances)&&0===this._va.length||n(this.geometryInstances)&&p(this.geometryInstances)&&0===this.geometryInstances.length||!n(this.appearance)||o.mode!==x.SCENE3D&&o.scene3DOnly||!o.passes.render&&!o.passes.pick)){var s,l,u,c,h,d,m,P,M,B,F,z,k,G=o.mapProjection,H=this.allowPicking,q=this._instanceIds,j=o.scene3DOnly,Y=this;if(this._state!==T.COMPLETE&&this._state!==T.COMBINED)if(this.asynchronous){if(this._state===T.FAILED)throw this._error;if(this._state===T.READY){F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],this._numberOfInstances=d=F.length;var X=[],Z=[];for(m=0;d>m;++m)u=F[m].geometry,q.push(F[m].id),Z.push({moduleName:u._workerName,geometry:u});if(!n(V))for(V=new Array(U),m=0;U>m;m++)V[m]=new g("createGeometry",Number.POSITIVE_INFINITY);for(Z=v(Z,U),m=0;m<Z.length;m++)X.push(V[m].scheduleTask({subTasks:Z[m]}));this._state=T.CREATING,w.all(X,function(e){Y._createGeometryResults=e,Y._state=T.CREATED},function(e){Y._error=e,Y._state=T.FAILED})}else if(this._state===T.CREATED){var Q=[];F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],B=W.scheduleTask(b.packCombineGeometryParameters({createGeometryResults:this._createGeometryResults,instances:F,pickIds:H?N(i,this,F):void 0,ellipsoid:G.ellipsoid,projection:G,elementIndexUintSupported:i.elementIndexUint,scene3DOnly:j,allowPicking:H,vertexCacheOptimize:this.vertexCacheOptimize,modelMatrix:this.modelMatrix},Q),Q),this._createGeometryResults=void 0,this._state=T.COMBINING,w(B,function(e){var t=b.unpackCombineGeometryResults(e);Y._geometries=t.geometries,Y._attributeLocations=t.attributeLocations,Y._vaAttributes=t.vaAttributes,Y._perInstanceAttributeLocations=t.perInstanceAttributeLocations,Y._state=T.COMBINED,Y.modelMatrix=f.clone(t.modelMatrix,Y.modelMatrix)},function(e){Y._error=e,Y._state=T.FAILED})}}else{for(F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],this._numberOfInstances=d=F.length,k=new Array(d),z=new Array(F.length),m=0;d>m;m++){var J=F[m];u=J.geometry,q.push(J.id);var K;K=n(u.attributes)&&n(u.primitiveType)?A(u):u.constructor.createGeometry(u),k[m]=K,z[m]=D(J,K)}var $=b.combineGeometry({instances:z,pickIds:H?N(i,this,F):void 0,ellipsoid:G.ellipsoid,projection:G,elementIndexUintSupported:i.elementIndexUint,scene3DOnly:j,allowPicking:H,vertexCacheOptimize:this.vertexCacheOptimize,modelMatrix:this.modelMatrix});this._geometries=$.geometries,this._attributeLocations=$.attributeLocations,this._vaAttributes=$.vaAttributes,this._perInstanceAttributeLocations=$.vaAttributeLocations,this._state=T.COMBINED}var et=this._attributeLocations;if(this._state===T.COMBINED){k=this._geometries;var tt=this._vaAttributes;this._boundingSphere=e.clone(k[0].boundingSphere);var rt=[];for(d=k.length,m=0;d>m;++m){u=k[m],c=tt[m];var it=c.length;for(P=0;it>P;++P)h=c[P],h.vertexBuffer=i.createVertexBuffer(h.values,_.DYNAMIC_DRAW),delete h.values;rt.push(i.createVertexArrayFromGeometry({geometry:u,attributeLocations:et,bufferUsage:_.STATIC_DRAW,interleave:this._interleave,vertexArrayAttributes:c}))}this._va=rt,this._primitiveType=k[0].primitiveType,this.releaseGeometryInstances&&(this.geometryInstances=void 0),this._geometries=void 0,this._state=T.COMPLETE}if(this.show&&this._state===T.COMPLETE){var nt=this.appearance,ot=nt.material,at=!1,st=!1;this._appearance!==nt?(this._appearance=nt,this._material=ot,at=!0,st=!0):this._material!==ot&&(this._material=ot,st=!0);var lt=this._appearance.isTranslucent();this._translucent!==lt&&(this._translucent=lt,at=!0),n(this._material)&&this._material.update(i);var ut=nt.closed&&lt;if(at){var ct,ht=nt.getRenderState();ut?(ct=t(ht,!1),ct.cull={enabled:!0,face:S.BACK},this._frontFaceRS=i.createRenderState(ct),ct.cull.face=S.FRONT,this._backFaceRS=i.createRenderState(ct)):(this._frontFaceRS=i.createRenderState(ht),this._backFaceRS=this._frontFaceRS),H?ut?(ct=t(ht,!1),ct.cull={enabled:!1},this._pickRS=i.createRenderState(ct)):this._pickRS=this._frontFaceRS:(ct=t(ht,!1),ct.colorMask={red:!1,green:!1,blue:!1,alpha:!1},ut?(ct.cull={enabled:!1},this._pickRS=i.createRenderState(ct)):this._pickRS=i.createRenderState(ct))}if(st){var dt=I(this,nt.vertexShaderSource,j);dt=O(this,dt);var mt=nt.getFragmentShaderSource();if(this._sp=i.replaceShaderProgram(this._sp,dt,mt,et),L(this._sp,et),H){var pt=y({sources:[mt],pickColorQualifier:"varying"});this._pickSP=i.replaceShaderProgram(this._pickSP,R(dt),pt,et)}else this._pickSP=i.createShaderProgram(dt,mt,et);L(this._pickSP,et)}var ft=this._colorCommands,vt=this._pickCommands;if(at||st){var gt=n(ot)?ot._uniforms:void 0,_t=lt?E.TRANSLUCENT:E.OPAQUE;ft.length=this._va.length*(ut?2:1),vt.length=this._va.length,d=ft.length;var yt=0,Ct=0;for(m=0;d>m;++m)ut&&(s=ft[m],n(s)||(s=ft[m]=new C({owner:this,primitiveType:this._primitiveType})),s.vertexArray=this._va[Ct],s.renderState=this._backFaceRS,s.shaderProgram=this._sp,s.uniformMap=gt,s.pass=_t,++m),s=ft[m],n(s)||(s=ft[m]=new C({owner:this,primitiveType:this._primitiveType})),s.vertexArray=this._va[Ct],s.renderState=this._frontFaceRS,s.shaderProgram=this._sp,s.uniformMap=gt,s.pass=_t,l=vt[yt],n(l)||(l=vt[yt]=new C({owner:this,primitiveType:this._primitiveType})),l.vertexArray=this._va[Ct],l.renderState=this._pickRS,l.shaderProgram=this._pickSP,l.uniformMap=gt,l.pass=_t,++yt,++Ct}if(this._dirtyAttributes.length>0){for(c=this._dirtyAttributes,d=c.length,m=0;d>m;++m){h=c[m];var wt=h.value,St=h.indices,Et=St.length;for(P=0;Et>P;++P){M=St[P];for(var bt=M.offset,Tt=M.count,xt=M.attribute,Pt=xt.componentDatatype,At=xt.componentsPerAttribute,Mt=r.createTypedArray(Pt,Tt*At),Dt=0;Tt>Dt;++Dt)Mt.set(wt,Dt*At);var It=bt*At*r.getSizeInBytes(Pt);xt.vertexBuffer.copyFromArrayView(Mt,It)}h.dirty=!1}c.length=0}var Rt;Rt=this._numberOfInstances>1||o.mode!==x.SCENE3D?f.IDENTITY:this.modelMatrix,f.equals(Rt,this._modelMatrix)||(f.clone(Rt,this._modelMatrix),this._boundingSphereWC=e.transform(this._boundingSphere,Rt,this._boundingSphereWC),!j&&n(this._boundingSphere)&&(this._boundingSphereCV=e.projectTo2D(this._boundingSphereWC,G,this._boundingSphereCV),this._boundingSphere2D=e.clone(this._boundingSphereCV,this._boundingSphere2D),this._boundingSphere2D.center.x=0));var Ot;o.mode===x.SCENE3D?Ot=this._boundingSphereWC:o.mode===x.COLUMBUS_VIEW?Ot=this._boundingSphereCV:o.mode===x.SCENE2D&&n(this._boundingSphere2D)?Ot=this._boundingSphere2D:n(this._boundingSphereWC)&&n(this._boundingSphereCV)&&(Ot=e.union(this._boundingSphereWC,this._boundingSphereCV));var Lt=o.passes;if(Lt.render)for(d=ft.length,m=0;d>m;++m)ft[m].modelMatrix=Rt,ft[m].boundingVolume=Ot,ft[m].debugShowBoundingVolume=this.debugShowBoundingVolume,a.push(ft[m]);if(Lt.pick)for(d=vt.length,m=0;d>m;++m)vt[m].modelMatrix=Rt,vt[m].boundingVolume=Ot,a.push(vt[m])}}},z.prototype.getGeometryInstanceAttributes=function(e){for(var t=-1,r=this._lastPerInstanceAttributeIndex,i=this._instanceIds,n=i.length,a=0;n>a;++a){var s=(r+a)%n;if(e===i[s]){t=s;break}}if(-1===t)return void 0;var l=this._perInstanceAttributeLocations[t],u={},c={},h=!1;for(var d in l)l.hasOwnProperty(d)&&(h=!0,c[d]={get:B(d,l),set:F(d,l,this._dirtyAttributes)});return h&&o(u,c),this._lastPerInstanceAttributeIndex=t,u},z.prototype.isDestroyed=function(){return!1},z.prototype.destroy=function(){var e,t;this._sp=this._sp&&this._sp.destroy(),this._pickSP=this._pickSP&&this._pickSP.destroy();var r=this._va;for(e=r.length,t=0;e>t;++t)r[t].destroy();this._va=void 0;var i=this._pickIds;for(e=i.length,t=0;e>t;++t)i[t].destroy();return this._pickIds=void 0,a(this)},z}),r("DataSources/MaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Scene/Material"],function(e,t,r,i,n){"use strict";var o=function(){i.throwInstantiationError()};return r(o.prototype,{isConstant:{get:i.throwInstantiationError},definitionChanged:{get:i.throwInstantiationError}}),o.prototype.getType=i.throwInstantiationError,o.prototype.getValue=i.throwInstantiationError,o.prototype.equals=i.throwInstantiationError,o.getValue=function(r,i,o){var a;return t(i)&&(a=i.getType(r),t(a))?(t(o)&&o.type===a||(o=n.fromType(a)),i.getValue(r,o.uniforms),o):(t(o)&&o.type===n.ColorType||(o=n.fromType(n.ColorType)),e.clone(e.WHITE,o.uniforms.color),o)},o}),r("DataSources/EllipseGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipseGeometry","../Core/EllipseOutlineGeometry","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.center=void 0,this.semiMajorAxis=void 0,this.semiMinorAxis=void 0,this.rotation=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0,this.numberOfVerticalLines=void 0
},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new u,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"ellipse",e.ellipse,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,l=a.isAvailable(r),u=new d(l&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||l)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new c({id:a,geometry:new s(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new c({id:i,geometry:new l(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"position"===t||"ellipse"===t){var n=this._entity.ellipse;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(h.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(h.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var u=this._entity.position,c=n.semiMajorAxis,d=n.semiMinorAxis,f=n.show;if(i(f)&&f.isConstant&&!f.getValue(h.MINIMUM_VALUE)||!i(u)||!i(c)||!i(d))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var g=r(n.material,C),_=g instanceof v;this._materialProperty=g,this._fillProperty=r(o,S),this._showProperty=r(f,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var T=n.rotation,x=n.height,P=n.extrudedHeight,A=n.granularity,M=n.stRotation,D=n.numberOfVerticalLines;if(this._isClosed=i(P),this._fillEnabled=a,this._outlineEnabled=l,u.isConstant&&c.isConstant&&d.isConstant&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)&&y.isConstant(A)&&y.isConstant(M)&&y.isConstant(D)){var I=this._options;I.vertexFormat=_?p.VERTEX_FORMAT:m.VERTEX_FORMAT,I.center=u.getValue(h.MINIMUM_VALUE,I.center),I.semiMajorAxis=c.getValue(h.MINIMUM_VALUE,I.semiMajorAxis),I.semiMinorAxis=d.getValue(h.MINIMUM_VALUE,I.semiMinorAxis),I.rotation=i(T)?T.getValue(h.MINIMUM_VALUE):void 0,I.height=i(x)?x.getValue(h.MINIMUM_VALUE):void 0,I.extrudedHeight=i(P)?P.getValue(h.MINIMUM_VALUE):void 0,I.granularity=i(A)?A.getValue(h.MINIMUM_VALUE):void 0,I.stRotation=i(M)?M.getValue(h.MINIMUM_VALUE):void 0,I.numberOfVerticalLines=i(D)?D.getValue(h.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.ellipse,u=a.show;if(o.isAvailable(r)&&(!i(u)||u.getValue(r))){var h=this._options,d=o.position,v=a.semiMajorAxis,g=a.semiMinorAxis,y=a.rotation,C=a.height,w=a.extrudedHeight,S=a.granularity,E=a.stRotation,b=a.numberOfVerticalLines;if(h.center=d.getValue(r,h.center),h.semiMajorAxis=v.getValue(r,h.semiMajorAxis),h.semiMinorAxis=g.getValue(r,h.semiMinorAxis),h.rotation=i(y)?y.getValue(r,h):void 0,h.height=i(C)?C.getValue(r,h):void 0,h.extrudedHeight=i(w)?w.getValue(r,h):void 0,h.granularity=i(S)?S.getValue(r):void 0,h.stRotation=i(E)?E.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){this._material=_.getValue(r,n.fillMaterialProperty,this._material);var T=this._material,x=new m({material:T,translucent:T.isTranslucent(),closed:i(h.extrudedHeight)});h.vertexFormat=x.vertexFormat,this._primitive=new f({geometryInstances:new c({id:o,geometry:new s(h)}),appearance:x,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){h.vertexFormat=p.VERTEX_FORMAT,h.numberOfVerticalLines=i(b)?b.getValue(r):void 0;var P=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new c({id:o,geometry:new l(h),attributes:{color:t.fromColor(P)}}),appearance:new p({flat:!0,translucent:1!==P.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/EllipsoidGeometryUpdater",["../Core/Cartesian3","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipsoidGeometry","../Core/EllipsoidOutlineGeometry","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/Matrix3","../Core/Matrix4","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","../Scene/SceneMode","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";var b,T,x,P,A=C.fromColor(t.WHITE),M=new w(!0),D=new w(!0),I=new w(!1),R=new w(t.BLACK),O=new e(1,1,1),L=function(e){this.id=e,this.vertexFormat=void 0,this.radii=void 0,this.stackPartitions=void 0,this.slicePartitions=void 0,this.subdivisions=void 0},N=function(e,t){this._scene=t,this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(N.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new c,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new L(e),this._onEntityPropertyChanged(e,"ellipsoid",e.ellipsoid,void 0)};o(N,{perInstanceColorAppearanceType:{value:g},materialAppearanceType:{value:v}}),o(N.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!n(this._entity.availability)&&E.isConstant(this._showProperty)&&E.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!n(this._entity.availability)&&E.isConstant(this._showProperty)&&E.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{value:!0},geometryChanged:{get:function(){return this._geometryChanged}}}),N.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},N.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},N.prototype.createFillGeometryInstance=function(e){var i,o,a=this._entity,s=a.isAvailable(e),u=new f(s&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e));if(this._materialProperty instanceof C){var c=t.WHITE;n(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(c=this._materialProperty.color.getValue(e)),o=r.fromColor(c),i={show:u,color:o}}else i={show:u};return b=a.position.getValue(d.MINIMUM_VALUE,b),T=a.orientation.getValue(d.MINIMUM_VALUE,T),P=m.fromQuaternion(T,P),new h({id:a,geometry:new l(this._options),modelMatrix:p.fromRotationTranslation(P,b),attributes:i})},N.prototype.createOutlineGeometryInstance=function(e){var i=this._entity,n=i.isAvailable(e);return b=i.position.getValue(d.MINIMUM_VALUE,b),T=i.orientation.getValue(d.MINIMUM_VALUE,T),P=m.fromQuaternion(T,P),new h({id:i,geometry:new u(this._options),modelMatrix:p.fromRotationTranslation(P,b),attributes:{show:new f(n&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)),color:r.fromColor(n?this._outlineColorProperty.getValue(e):t.BLACK)}})},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){this._entitySubscription(),a(this)},N.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"position"===t||"orientation"===t||"ellipsoid"===t){var r=this._entity.ellipsoid;if(!n(r))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=r.fill,a=n(o)&&o.isConstant?o.getValue(d.MINIMUM_VALUE):!0,s=r.outline,l=n(s);if(l&&s.isConstant&&(l=s.getValue(d.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var u=this._entity.position,c=this._entity.orientation,h=r.radii,m=r.show;if(n(m)&&m.isConstant&&!m.getValue(d.MINIMUM_VALUE)||!n(u)||!n(c)||!n(h))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var p=i(r.material,A),f=p instanceof C;this._materialProperty=p,this._fillProperty=i(o,D),this._showProperty=i(m,M),this._showOutlineProperty=i(r.outline,I),this._outlineColorProperty=l?i(r.outlineColor,R):void 0,this._fillEnabled=a,this._outlineEnabled=l;var _=r.stackPartitions,y=r.slicePartitions,w=r.subdivisions;if(u.isConstant&&c.isConstant&&h.isConstant&&E.isConstant(_)&&E.isConstant(y)&&E.isConstant(w)){var S=this._options;S.vertexFormat=f?g.VERTEX_FORMAT:v.VERTEX_FORMAT,S.radii=h.getValue(d.MINIMUM_VALUE,S.radii),S.stackPartitions=n(_)?_.getValue(d.MINIMUM_VALUE):void 0,S.slicePartitions=n(y)?y.getValue(d.MINIMUM_VALUE):void 0,S.subdivisions=n(w)?w.getValue(d.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},N.prototype.createDynamicUpdater=function(e){return new B(e,this)};var B=function(e,t){this._entity=t._entity,this._scene=t._scene,this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new L(t._entity),this._modelMatrix=new p,this._material=void 0,this._attributes=void 0,this._outlineAttributes=void 0,this._lastSceneMode=void 0};return B.prototype.update=function(e){var o=this._entity,a=o.ellipsoid,s=a.show;if(!o.isAvailable(e)||n(s)&&!s.getValue(e))return n(this._primitive)&&(this._primitive.show=!1),n(this._outlinePrimitive)&&(this._outlinePrimitive.show=!1),void 0;var c,d=!n(a.fill)||a.fill.getValue(e),C=n(a.outline)&&a.outline.getValue(e),w=n(a.outlineColor)?a.outlineColor.getValue(e):t.BLACK,E=S.getValue(e,i(a.material,A),this._material);this._material=E;var M=a.stackPartitions,D=a.slicePartitions,I=a.subdivisions,R=n(M)?M.getValue(e):void 0,L=n(D)?D.getValue(e):void 0,N=n(I)?I.getValue(e):void 0,B=this._options,F=this._scene.mode,z=F===y.SCENE3D,V=this._modelMatrix,k=o.position,U=o.orientation,W=a.radii;b=k.getValue(e,b),T=U.getValue(e,T),P=m.fromQuaternion(T,P),x=W.getValue(e,x),V=p.fromRotationTranslation(P,b,V);var G=!z||this._lastSceneMode!==F||!n(this._primitive)||B.stackPartitions!==R||B.slicePartitions!==L||B.subdivisions!==N;if(G)this._removePrimitives(),this._lastSceneMode=F,B.stackPartitions=R,B.slicePartitions=L,B.subdivisions=N,B.radii=z?O:x,this._material=E,E=this._material,c=new v({material:E,translucent:E.isTranslucent(),closed:!0}),B.vertexFormat=c.vertexFormat,this._primitive=new _({geometryInstances:new h({id:o,geometry:new l(B),modelMatrix:z?void 0:V,attributes:{show:new f(d)}}),appearance:c,asynchronous:!1}),this._primitives.add(this._primitive),B.vertexFormat=g.VERTEX_FORMAT,this._outlinePrimitive=new _({geometryInstances:new h({id:o,geometry:new u(B),modelMatrix:z?void 0:V,attributes:{show:new f(C),color:r.fromColor(w)}}),appearance:new g({flat:!0,translucent:1!==w.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive);else if(this._primitive.ready){var H=this._primitive;c=H.appearance,c.material=E;var q=this._attributes;n(q)||(q=H.getGeometryInstanceAttributes(o),this._attributes=q),q.show=f.toValue(d,q.show);var j=this._outlinePrimitive,Y=this._outlineAttributes;n(Y)||(Y=j.getGeometryInstanceAttributes(o),this._outlineAttributes=Y),Y.show=f.toValue(C,Y.show),Y.color=r.toValue(w,Y.color)}z&&(x.x=Math.max(x.x,.001),x.y=Math.max(x.y,.001),x.z=Math.max(x.z,.001),V=p.multiplyByScale(V,x,V),this._primitive.modelMatrix=V,this._outlinePrimitive.modelMatrix=V)},B.prototype.isDestroyed=function(){return!1},B.prototype._removePrimitives=function(){n(this._primitive)&&this._primitives.remove(this._primitive),n(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive)},B.prototype.destroy=function(){this._removePrimitives(),a(this)},N}),r("DataSources/StaticGeometryColorBatch",["../Core/AssociativeArray","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/Primitive"],function(e,t,r,i,n,o){"use strict";var a=new t,s=function(t,r,i,n){this.translucent=r,this.appearanceType=i,this.closed=n,this.primitives=t,this.createPrimitive=!1,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.updaters=new e,this.updatersWithAttributes=new e,this.attributes=new e,this.itemsToRemove=[]};s.prototype.add=function(e,t){var r=e.entity.id;this.createPrimitive=!0,this.geometry.set(r,t),this.updaters.set(r,e),e.hasConstantFill&&e.fillMaterialProperty.isConstant||this.updatersWithAttributes.set(r,e)},s.prototype.remove=function(e){var t=e.entity.id;this.createPrimitive=this.geometry.remove(t)||this.createPrimitive,this.updaters.remove(t),this.updatersWithAttributes.remove(t)},s.prototype.update=function(e){var s=!0,l=!0,u=0,c=this.primitive,h=this.primitives;if(this.createPrimitive){this.attributes.removeAll(),i(c)&&(c.ready?this.oldPrimitive=c:h.remove(c),s=!1);var d=this.geometry.values;d.length>0&&(c=new o({asynchronous:!0,geometryInstances:d,appearance:new this.appearanceType({translucent:this.translucent,closed:this.closed})}),c.show=s,h.add(c),l=!1),this.primitive=c,this.createPrimitive=!1}else if(i(c)&&c.ready){i(this.oldPrimitive)&&(h.remove(this.oldPrimitive),this.oldPrimitive=void 0,c.show=!0);for(var m=this.updatersWithAttributes.values,p=m.length,f=0;p>f;f++){var v=m[f],g=this.geometry.get(v.entity.id),_=this.attributes.get(g.id.id);if(i(_)||(_=c.getGeometryInstanceAttributes(g.id),this.attributes.set(g.id.id,_)),!v.fillMaterialProperty.isConstant){var y=v.fillMaterialProperty.color;y.getValue(e,a),t.equals(_._lastColor,a)||(_._lastColor=t.clone(a,_._lastColor),_.color=r.toValue(a,_.color),(this.translucent&&255===_.color[3]||!this.translucent&&255!==_.color[3])&&(this.itemsToRemove[u++]=v))}v.hasConstantFill||(s=v.isFilled(e),s!==_._lastShow&&(_._lastShow=s,_.show=n.toValue(s,_.show)))}}else i(c)&&!c.ready&&(l=!1);return this.itemsToRemove.length=u,l},s.prototype.removeAllPrimitives=function(){var e=this.primitive;i(e)&&(this.primitives.remove(e),this.primitive=void 0,this.geometry.removeAll(),this.updaters.removeAll())};var l=function(e,t,r){this._solidBatch=new s(e,!1,t,r),this._translucentBatch=new s(e,!0,t,r)};return l.prototype.add=function(e,t){var r=t.createFillGeometryInstance(e);255===r.attributes.color.value[3]?this._solidBatch.add(t,r):this._translucentBatch.add(t,r)},l.prototype.remove=function(e){this._solidBatch.remove(e)||this._translucentBatch.remove(e)},l.prototype.update=function(e){var t,r,i=this._solidBatch.update(e);i=this._translucentBatch.update(e)&&i;var n=this._solidBatch.itemsToRemove,o=n.length;if(o>0)for(t=0;o>t;t++)r=n[t],this._solidBatch.remove(r),this._translucentBatch.add(r,r.createFillGeometryInstance(e));n=this._translucentBatch.itemsToRemove;var a=n.length;if(a>0)for(t=0;a>t;t++)r=n[t],this._translucentBatch.remove(r),this._solidBatch.add(r,r.createFillGeometryInstance(e));return(o>0||a>0)&&(i=this._solidBatch.update(e)&&i,i=this._translucentBatch.update(e)&&i),i},l.prototype.removeAllPrimitives=function(){this._solidBatch.removeAllPrimitives(),this._translucentBatch.removeAllPrimitives()},l}),r("DataSources/StaticGeometryPerMaterialBatch",["../Core/AssociativeArray","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/Primitive","./MaterialProperty"],function(e,t,r,i,n){"use strict";var o=function(t,r,i,n){this.primitives=t,this.appearanceType=r,this.materialProperty=i,this.closed=n,this.updaters=new e,this.createPrimitive=!0,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.material=void 0,this.updatersWithAttributes=new e,this.attributes=new e,this.invalidated=!1,this.removeMaterialSubscription=i.definitionChanged.addEventListener(o.prototype.onMaterialChanged,this)};o.prototype.onMaterialChanged=function(){this.invalidated=!0},o.prototype.isMaterial=function(e){var r=this.materialProperty,i=e.fillMaterialProperty;return i===r?!0:t(r)?r.equals(i):!1},o.prototype.add=function(e,t){var r=t.entity.id;this.updaters.set(r,t),this.geometry.set(r,t.createFillGeometryInstance(e)),t.hasConstantFill&&t.fillMaterialProperty.isConstant||this.updatersWithAttributes.set(r,t),this.createPrimitive=!0},o.prototype.remove=function(e){var t=e.entity.id;return this.createPrimitive=this.updaters.remove(t),this.geometry.remove(t),this.updatersWithAttributes.remove(t),this.createPrimitive},o.prototype.update=function(e){var o=!0,a=!0,s=this.primitive,l=this.primitives,u=this.geometry.values;if(this.createPrimitive)t(s)&&(s.ready?this.oldPrimitive=s:l.remove(s),o=!1),u.length>0&&(this.material=n.getValue(e,this.materialProperty,this.material),s=new i({asynchronous:!0,geometryInstances:u,appearance:new this.appearanceType({material:this.material,translucent:this.material.isTranslucent(),closed:this.closed})}),s.show=o,l.add(s),a=!1),this.primitive=s,this.createPrimitive=!1;else if(t(s)&&s.ready){t(this.oldPrimitive)&&(l.remove(this.oldPrimitive),this.oldPrimitive=void 0,s.show=!0),this.material=n.getValue(e,this.materialProperty,this.material),this.primitive.appearance.material=this.material;for(var c=this.updatersWithAttributes.values,h=c.length,d=0;h>d;d++){var m=c[d],p=this.geometry.get(m.entity.id),f=this.attributes.get(p.id.id);t(f)||(f=s.getGeometryInstanceAttributes(p.id),this.attributes.set(p.id.id,f)),m.hasConstantFill||(o=m.isFilled(e),o!==f._lastShow&&(f._lastShow=o,f.show=r.toValue(o,f.show)))}}else t(s)&&!s.ready&&(a=!1);return a},o.prototype.destroy=function(){var e=this.primitive,r=this.primitives;t(e)&&r.remove(e),this.removeMaterialSubscription()};var a=function(e,t,r){this._items=[],this._primitives=e,this._appearanceType=t,this._closed=r};return a.prototype.add=function(e,t){for(var r=this._items,i=r.length,n=0;i>n;n++){var a=r[n];if(a.isMaterial(t))return a.add(e,t),void 0}var s=new o(this._primitives,this._appearanceType,t.fillMaterialProperty,this._closed);s.add(e,t),r.push(s)},a.prototype.remove=function(e){for(var t=this._items,r=t.length,i=r-1;i>=0;i--){var n=t[i];if(n.remove(e)){0===n.updaters.length&&(t.splice(i,1),n.destroy());break}}},a.prototype.update=function(e){var t,r=this._items,i=r.length;for(t=i-1;t>=0;t--){var n=r[t];if(n.invalidated){r.splice(t,1);for(var o=n.updaters.values,a=o.length,s=0;a>s;s++)this.add(e,o[s]);n.destroy()}}var l=!0;for(t=0;i>t;t++)l=r[t].update(e)&&l;return l},a.prototype.removeAllPrimitives=function(){for(var e=this._items,t=e.length,r=0;t>r;r++)e[r].destroy();this._items.length=0},a}),r("DataSources/StaticOutlineGeometryBatch",["../Core/AssociativeArray","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/PerInstanceColorAppearance","../Scene/Primitive"],function(e,t,r,i,n,o,a){"use strict";var s=function(t,r){this.translucent=r,this.primitives=t,this.createPrimitive=!1,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.updaters=new e,this.updatersWithAttributes=new e,this.attributes=new e,this.itemsToRemove=[]};s.prototype.add=function(e,t){var r=e.entity.id;this.createPrimitive=!0,this.geometry.set(r,t),this.updaters.set(r,e),e.hasConstantOutline&&e.outlineColorProperty.isConstant||this.updatersWithAttributes.set(r,e)},s.prototype.remove=function(e){var t=e.entity.id;this.createPrimitive=this.geometry.remove(t)||this.createPrimitive,this.updaters.remove(t),this.updatersWithAttributes.remove(t)};var l=new t;s.prototype.update=function(e){var s=!0,u=!0,c=0,h=this.primitive,d=this.primitives;if(this.createPrimitive){this.attributes.removeAll(),i(h)&&(h.ready?this.oldPrimitive=h:d.remove(h),s=!1);var m=this.geometry.values;m.length>0&&(h=new a({asynchronous:!0,geometryInstances:m,appearance:new o({flat:!0,translucent:this.translucent})}),d.add(h),u=!1,h.show=s),this.primitive=h,this.createPrimitive=!1}else if(i(h)&&h.ready){i(this.oldPrimitive)&&(d.remove(this.oldPrimitive),this.oldPrimitive=void 0,h.show=!0);for(var p=this.updatersWithAttributes.values,f=p.length,v=0;f>v;v++){var g=p[v],_=this.geometry.get(g.entity.id),y=this.attributes.get(_.id.id);if(i(y)||(y=h.getGeometryInstanceAttributes(_.id),this.attributes.set(_.id.id,y)),!g.outlineColorProperty.isConstant){var C=g.outlineColorProperty;C.getValue(e,l),t.equals(y._lastColor,l)||(y._lastColor=t.clone(l,y._lastColor),y.color=r.toValue(l,y.color),(this.translucent&&255===y.color[3]||!this.translucent&&255!==y.color[3])&&(this.itemsToRemove[c++]=g))}g.hasConstantOutline||(s=g.isOutlineVisible(e),s!==y._lastShow&&(y._lastShow=s,y.show=n.toValue(s,y.show)))}}else i(h)&&!h.ready&&(u=!1);return this.itemsToRemove.length=c,u},s.prototype.removeAllPrimitives=function(){var e=this.primitive;i(e)&&(this.primitives.remove(e),this.primitive=void 0,this.geometry.removeAll(),this.updaters.removeAll())};var u=function(e){this._solidBatch=new s(e,!1),this._translucentBatch=new s(e,!0)};return u.prototype.add=function(e,t){var r=t.createOutlineGeometryInstance(e);255===r.attributes.color.value[3]?this._solidBatch.add(t,r):this._translucentBatch.add(t,r)},u.prototype.remove=function(e){this._solidBatch.remove(e)||this._translucentBatch.remove(e)},u.prototype.update=function(e){var t,r,i=this._solidBatch.update(e);i=this._translucentBatch.update(e)&&i;var n=this._solidBatch.itemsToRemove,o=n.length;if(o>0)for(t=0;o>t;t++)r=n[t],this._solidBatch.remove(r),this._translucentBatch.add(r,r.createOutlineGeometryInstance(e));n=this._translucentBatch.itemsToRemove;var a=n.length;if(a>0)for(t=0;a>t;t++)r=n[t],this._translucentBatch.remove(r),this._solidBatch.add(r,r.createOutlineGeometryInstance(e));return(o>0||a>0)&&(i=this._solidBatch.update(e)&&i,i=this._translucentBatch.update(e)&&i),i},u.prototype.removeAllPrimitives=function(){this._solidBatch.removeAllPrimitives(),this._translucentBatch.removeAllPrimitives()},u}),r("DataSources/GeometryVisualizer",["../Core/AssociativeArray","../Core/defined","../Core/destroyObject","../Core/DeveloperError","./ColorMaterialProperty","./StaticGeometryColorBatch","./StaticGeometryPerMaterialBatch","./StaticOutlineGeometryBatch"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){e._outlineBatch.remove(t),e._closedColorBatch.remove(t),e._closedMaterialBatch.remove(t),e._openColorBatch.remove(t),e._openMaterialBatch.remove(t),e._dynamicBatch.remove(t)}function u(e,t,r){return r.isDynamic?(e._dynamicBatch.add(t,r),void 0):(r.outlineEnabled&&e._outlineBatch.add(t,r),r.fillEnabled&&(r.isClosed?r.fillMaterialProperty instanceof n?e._closedColorBatch.add(t,r):e._closedMaterialBatch.add(t,r):r.fillMaterialProperty instanceof n?e._openColorBatch.add(t,r):e._openMaterialBatch.add(t,r)),void 0)}var c=[],h=function(t){this._primitives=t,this._dynamicUpdaters=new e};h.prototype.add=function(e,t){this._dynamicUpdaters.set(t.entity.id,t.createDynamicUpdater(this._primitives))},h.prototype.remove=function(e){var r=e.entity.id,i=this._dynamicUpdaters.get(r);t(i)&&(this._dynamicUpdaters.remove(r),i.destroy())},h.prototype.update=function(e){for(var t=this._dynamicUpdaters.values,r=0,i=t.length;i>r;r++)t[r].update(e);return!0},h.prototype.removeAllPrimitives=function(){for(var e=this._dynamicUpdaters.values,t=0,r=e.length;r>t;t++)e[t].destroy();this._dynamicUpdaters.removeAll()};var d=function(t,r,i){this._type=t;var n=r.primitives;this._scene=r,this._primitives=n,this._entityCollection=void 0,this._addedObjects=new e,this._removedObjects=new e,this._changedObjects=new e,this._outlineBatch=new s(n),this._closedColorBatch=new o(n,t.perInstanceColorAppearanceType,!0),this._closedMaterialBatch=new a(n,t.materialAppearanceType,!0),this._openColorBatch=new o(n,t.perInstanceColorAppearanceType,!1),this._openMaterialBatch=new a(n,t.materialAppearanceType,!1),this._dynamicBatch=new h(n),this._subscriptions=new e,this._updaters=new e,this._entityCollection=i,i.collectionChanged.addEventListener(d.prototype._onCollectionChanged,this),this._onCollectionChanged(i,i.entities,c)};return d.prototype.update=function(e){var t,r,i,n,o=this._addedObjects,a=o.values,s=this._removedObjects,c=s.values,h=this._changedObjects,m=h.values;for(t=c.length-1;t>-1;t--)r=c[t],i=r.id,n=this._updaters.get(i),l(this,n),n.destroy(),this._updaters.remove(i),this._subscriptions.get(i)(),this._subscriptions.remove(i);for(t=a.length-1;t>-1;t--)r=a[t],i=r.id,n=new this._type(r,this._scene),this._updaters.set(i,n),u(this,e,n),this._subscriptions.set(i,n.geometryChanged.addEventListener(d._onGeometryChanged,this));for(t=m.length-1;t>-1;t--)r=m[t],i=r.id,n=this._updaters.get(i),l(this,n),u(this,e,n);o.removeAll(),s.removeAll(),h.removeAll();var p=this._outlineBatch.update(e);return p=this._closedColorBatch.update(e)&&p,p=this._closedMaterialBatch.update(e)&&p,p=this._openColorBatch.update(e)&&p,p=this._openMaterialBatch.update(e)&&p,p=this._dynamicBatch.update(e)&&p},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(d.prototype._onCollectionChanged,this),this._addedObjects.removeAll(),this._removedObjects.removeAll(),this._outlineBatch.removeAllPrimitives(),this._closedColorBatch.removeAllPrimitives(),this._closedMaterialBatch.removeAllPrimitives(),this._openColorBatch.removeAllPrimitives(),this._openMaterialBatch.removeAllPrimitives(),this._dynamicBatch.removeAllPrimitives();for(var e=this._subscriptions.values,t=e.length,i=0;t>i;i++)e[i]();return this._subscriptions.removeAll(),r(this)},d._onGeometryChanged=function(e){var r=this._removedObjects,i=this._changedObjects,n=e.entity,o=n.id;t(r.get(o))||t(i.get(o))||i.set(o,n)},d.prototype._onCollectionChanged=function(e,t,r){var i,n,o,a=this._addedObjects,s=this._removedObjects,l=this._changedObjects;for(i=r.length-1;i>-1;i--)o=r[i],n=o.id,a.remove(n)||(s.set(n,o),l.remove(n));for(i=t.length-1;i>-1;i--)o=t[i],n=o.id,s.remove(n)?l.set(n,o):a.set(n,o)},d}),r("Scene/Label",["../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/NearFarScalar","./Billboard","./HorizontalOrigin","./LabelStyle","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e){e._rebindAllGlyphs||e._repositionAllGlyphs||e._labelCollection._labelsToUpdate.push(e),e._rebindAllGlyphs=!0}function m(e){e._rebindAllGlyphs||e._repositionAllGlyphs||e._labelCollection._labelsToUpdate.push(e),e._repositionAllGlyphs=!0}var p=function(n,o){n=i(n,i.EMPTY_OBJECT),this._text=i(n.text,""),this._show=i(n.show,!0),this._font=i(n.font,"30px sans-serif"),this._fillColor=r.clone(i(n.fillColor,r.WHITE)),this._outlineColor=r.clone(i(n.outlineColor,r.BLACK)),this._outlineWidth=i(n.outlineWidth,1),this._style=i(n.style,c.FILL),this._verticalOrigin=i(n.verticalOrigin,h.BOTTOM),this._horizontalOrigin=i(n.horizontalOrigin,u.LEFT),this._pixelOffset=e.clone(i(n.pixelOffset,e.ZERO),new e),this._eyeOffset=t.clone(i(n.eyeOffset,t.ZERO)),this._position=t.clone(i(n.position,t.ZERO)),this._scale=i(n.scale,1),this._id=n.id,this._translucencyByDistance=n.translucencyByDistance,this._pixelOffsetScaleByDistance=n.pixelOffsetScaleByDistance,this._labelCollection=o,this._glyphs=[],this._rebindAllGlyphs=!0,this._repositionAllGlyphs=!0};return o(p.prototype,{show:{get:function(){return this._show},set:function(e){if(this._show!==e){this._show=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.show=e)}}}},position:{get:function(){return this._position},set:function(e){var r=this._position;if(!t.equals(r,e)){t.clone(e,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.position=e)}}}},text:{get:function(){return this._text},set:function(e){this._text!==e&&(this._text=e,d(this))}},font:{get:function(){return this._font},set:function(e){this._font!==e&&(this._font=e,d(this))}},fillColor:{get:function(){return this._fillColor},set:function(e){var t=this._fillColor;r.equals(t,e)||(r.clone(e,t),d(this))}},outlineColor:{get:function(){return this._outlineColor},set:function(e){var t=this._outlineColor;r.equals(t,e)||(r.clone(e,t),d(this))}},outlineWidth:{get:function(){return this._outlineWidth},set:function(e){this._outlineWidth!==e&&(this._outlineWidth=e,d(this))}},style:{get:function(){return this._style},set:function(e){this._style!==e&&(this._style=e,d(this))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(t){var r=this._pixelOffset;if(!e.equals(r,t)){e.clone(t,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.pixelOffset=t)}}}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(e){var t=this._translucencyByDistance;if(!s.equals(t,e)){this._translucencyByDistance=s.clone(e,t);
for(var r=this._glyphs,i=0,o=r.length;o>i;i++){var a=r[i];n(a.billboard)&&(a.billboard.translucencyByDistance=e)}}}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(e){var t=this._pixelOffsetScaleByDistance;if(!s.equals(t,e)){this._pixelOffsetScaleByDistance=s.clone(e,t);for(var r=this._glyphs,i=0,o=r.length;o>i;i++){var a=r[i];n(a.billboard)&&(a.billboard.pixelOffsetScaleByDistance=e)}}}},eyeOffset:{get:function(){return this._eyeOffset},set:function(e){var r=this._eyeOffset;if(!t.equals(r,e)){t.clone(e,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.eyeOffset=e)}}}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(e){this._horizontalOrigin!==e&&(this._horizontalOrigin=e,m(this))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(e){if(this._verticalOrigin!==e){this._verticalOrigin=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.verticalOrigin=e)}m(this)}}},scale:{get:function(){return this._scale},set:function(e){if(this._scale!==e){this._scale=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.scale=e)}m(this)}}},id:{get:function(){return this._id},set:function(e){if(this._id!==e){this._id=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.id=e)}}}}}),p.prototype.computeScreenSpacePosition=function(e){var t=this._labelCollection,r=t.modelMatrix,i=l._computeActualPosition(this._position,e.frameState,r),n=l._computeScreenSpacePosition(r,i,this._eyeOffset,this._pixelOffset,e);return n.y=e.canvas.clientHeight-n.y,n},p.prototype.equals=function(i){return this===i||n(i)&&this._show===i._show&&this._scale===i._scale&&this._style===i._style&&this._verticalOrigin===i._verticalOrigin&&this._horizontalOrigin===i._horizontalOrigin&&this._text===i._text&&this._font===i._font&&t.equals(this._position,i._position)&&r.equals(this._fillColor,i._fillColor)&&r.equals(this._outlineColor,i._outlineColor)&&e.equals(this._pixelOffset,i._pixelOffset)&&t.equals(this._eyeOffset,i._eyeOffset)&&s.equals(this._translucencyByDistance,i._translucencyByDistance)&&s.equals(this._pixelOffsetScaleByDistance,i._pixelOffsetScaleByDistance)&&this._id===i._id},p.prototype.isDestroyed=function(){return!1},p}),r("Scene/LabelCollection",["../Core/Cartesian2","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix4","../Core/writeTextToCanvas","./BillboardCollection","./HorizontalOrigin","./Label","./LabelStyle","./TextureAtlas","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(){this.textureInfo=void 0,this.dimensions=void 0,this.billboard=void 0}function f(e,t,r){this.labelCollection=e,this.index=t,this.dimensions=r}function v(e,t,r,i,n,o,a){return S.font=t,S.fillColor=r,S.strokeColor=i,S.strokeWidth=n,S.textBaseline=a===m.BOTTOM?"bottom":a===m.TOP?"top":"middle",S.fill=o===h.FILL||o===h.FILL_AND_OUTLINE,S.stroke=o===h.OUTLINE||o===h.FILL_AND_OUTLINE,s(e,S)}function g(e,t){t.textureInfo=void 0,t.dimensions=void 0;var i=t.billboard;r(i)&&(i.show=!1,i.image=void 0,e._spareBillboards.push(i),t.billboard=void 0)}function _(e,t,r,i){e.addImage(t,r).then(function(e){i.index=e})}function y(e,t){var i,n,o,a=t._text,s=a.length,l=t._glyphs,c=l.length;if(c>s)for(n=s;c>n;++n)g(e,l[n]);l.length=s;var h=e._glyphTextureCache;for(o=0;s>o;++o){var d=a.charAt(o),m=t._font,y=t._fillColor,C=t._outlineColor,w=t._outlineWidth,S=t._style,E=t._verticalOrigin,b=JSON.stringify([d,m,y.toRgba(),C.toRgba(),w,+S,+E]),T=h[b];if(!r(T)){var x=v(d,m,y,C,w,S,E);T=new f(e,-1,x.dimensions),h[b]=T,x.width>0&&x.height>0&&_(e._textureAtlas,b,x,T)}if(i=l[o],r(i)?-1===T.index?g(e,i):r(i.textureInfo)&&(i.textureInfo=void 0):(i=new p,l[o]=i),i.textureInfo=T,i.dimensions=T.dimensions,-1!==T.index){var P=i.billboard;r(P)||(P=e._spareBillboards.length>0?e._spareBillboards.pop():e._billboardCollection.add({collection:e}),i.billboard=P),P.show=t._show,P.position=t._position,P.eyeOffset=t._eyeOffset,P.pixelOffset=t._pixelOffset,P.horizontalOrigin=u.LEFT,P.verticalOrigin=t._verticalOrigin,P.scale=t._scale,P.pickPrimitive=t,P.id=t._id,P.image=b,P.translucencyByDistance=t._translucencyByDistance,P.pixelOffsetScaleByDistance=t._pixelOffsetScaleByDistance}}t._repositionAllGlyphs=!0}function C(e,t){var i,n,o=e._glyphs,a=0,s=0,l=0,c=o.length;for(l=0;c>l;++l)i=o[l],n=i.dimensions,a+=n.width,s=Math.max(s,n.height);var h=e._scale,d=e._horizontalOrigin,p=0;d===u.CENTER?p-=a/2*h:d===u.RIGHT&&(p-=a*h),E.x=p*t,E.y=0;var f=e._verticalOrigin;for(l=0;c>l;++l)i=o[l],n=i.dimensions,f===m.BOTTOM||n.height===s?E.y=-n.descent*h:f===m.TOP?E.y=-(s-n.height)*h-n.descent*h:f===m.CENTER&&(E.y=-(s-n.height)/2*h-n.descent*h),E.y*=t,r(i.billboard)&&i.billboard._setTranslate(E),E.x+=n.width*h*t}function w(e,t){for(var r=t._glyphs,i=0,o=r.length;o>i;++i)g(e,r[i]);t._labelCollection=void 0,n(t)}var S={},E=new e,b=function(e){e=t(e,t.EMPTY_OBJECT),this._textureAtlas=void 0,this._billboardCollection=new l,this._billboardCollection.destroyTextureAtlas=!1,this._spareBillboards=[],this._glyphTextureCache={},this._labels=[],this._labelsToUpdate=[],this._totalGlyphCount=0,this._resolutionScale=void 0,this.modelMatrix=a.clone(t(e.modelMatrix,a.IDENTITY)),this.debugShowBoundingVolume=t(e.debugShowBoundingVolume,!1)};return i(b.prototype,{length:{get:function(){return this._labels.length}}}),b.prototype.add=function(e){var t=new c(e,this);return this._labels.push(t),this._labelsToUpdate.push(t),t},b.prototype.remove=function(e){if(r(e)&&e._labelCollection===this){var t=this._labels.indexOf(e);if(-1!==t)return this._labels.splice(t,1),w(this,e),!0}return!1},b.prototype.removeAll=function(){for(var e=this._labels,t=0,r=e.length;r>t;++t)w(this,e[t]);e.length=0},b.prototype.contains=function(e){return r(e)&&e._labelCollection===this},b.prototype.get=function(e){return this._labels[e]},b.prototype.update=function(e,t,i){var n=this._billboardCollection;n.modelMatrix=this.modelMatrix,n.debugShowBoundingVolume=this.debugShowBoundingVolume,r(this._textureAtlas)||(this._textureAtlas=new d({context:e}),n.textureAtlas=this._textureAtlas);var o=e.uniformState,a=o.resolutionScale,s=this._resolutionScale!==a;this._resolutionScale=a;var l;l=s?this._labels:this._labelsToUpdate;for(var u=0,c=l.length;c>u;++u){var h=l[u];if(!h.isDestroyed()){var m=h._glyphs.length;h._rebindAllGlyphs&&(y(this,h),h._rebindAllGlyphs=!1),(s||h._repositionAllGlyphs)&&(C(h,a),h._repositionAllGlyphs=!1);var p=h._glyphs.length-m;this._totalGlyphCount+=p}}this._labelsToUpdate.length=0,n.update(e,t,i)},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){return this.removeAll(),this._billboardCollection=this._billboardCollection.destroy(),this._textureAtlas=this._textureAtlas&&this._textureAtlas.destroy(),n(this)},b}),r("DataSources/LabelVisualizer",["../Core/AssociativeArray","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/HorizontalOrigin","../Scene/LabelCollection","../Scene/LabelStyle","../Scene/VerticalOrigin","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";function m(e,t,r){var i=e._labelVisualizerIndex;if(n(i)){var o=t.get(i);o.show=!1,r.push(i),e._labelVisualizerIndex=void 0}}var p=1,f="30px sans-serif",v=c.FILL,g=i.WHITE,_=i.BLACK,y=1,C=t.ZERO,w=r.ZERO,S=l.CENTER,E=h.CENTER,b=new r,T=new i,x=new i,P=new r,A=new t,M=new s,D=new s,I=function(t,r){var i=new u;t.primitives.add(i),r.collectionChanged.addEventListener(I.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._labelCollection=i,this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return I.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,r=this._unusedIndexes,i=this._labelCollection,o=0,a=t.length;a>o;o++){var s,l,u=t[o],c=u._label,h=u._labelVisualizerIndex,I=u.isAvailable(e)&&d.getValueOrDefault(c._show,e,!0);if(I&&(b=d.getValueOrUndefined(u._position,e,b),s=d.getValueOrUndefined(c._text,e),I=n(b)&&n(s)),I){if(n(h))l=i.get(h);else{var R=r.length;R>0?(h=r.pop(),l=i.get(h)):(h=i.length,l=i.add()),u._labelVisualizerIndex=h,l.id=u}l.show=!0,l.position=b,l.text=s,l.scale=d.getValueOrDefault(c._scale,e,p),l.font=d.getValueOrDefault(c._font,e,f),l.style=d.getValueOrDefault(c._style,e,v),l.fillColor=d.getValueOrDefault(c._fillColor,e,g,T),l.outlineColor=d.getValueOrDefault(c._outlineColor,e,_,x),l.outlineWidth=d.getValueOrDefault(c._outlineWidth,e,y),l.pixelOffset=d.getValueOrDefault(c._pixelOffset,e,C,A),l.eyeOffset=d.getValueOrDefault(c._eyeOffset,e,w,P),l.horizontalOrigin=d.getValueOrDefault(c._horizontalOrigin,e,S),l.verticalOrigin=d.getValueOrDefault(c._verticalOrigin,e,E),l.translucencyByDistance=d.getValueOrUndefined(c._translucencyByDistance,e,M),l.pixelOffsetScaleByDistance=d.getValueOrUndefined(c._pixelOffsetScaleByDistance,e,D)}else m(u,i,r)}return!0},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){var e=this._entityCollection;e.collectionChanged.removeEventListener(I.prototype._onCollectionChanged,this);for(var t=e.entities,r=t.length,i=0;r>i;i++)t[i]._labelVisualizerIndex=void 0;return this._scene.primitives.remove(this._labelCollection),o(this)},I.prototype._onCollectionChanged=function(e,t,r,i){var o,a,s=this._labelCollection,l=this._unusedIndexes,u=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],n(a._label)&&n(a._position)&&u.set(a.id,a);for(o=i.length-1;o>-1;o--)a=i[o],n(a._label)&&n(a._position)?u.set(a.id,a):(m(a,s,l),u.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],m(a,s,l),u.remove(a.id)},I}),r("ThirdParty/gltfDefaults",["../Core/defaultValue","../Core/defined"],function(e,t){"use strict";function r(r){t(r.accessors)||(r.accessors={});var i=r.accessors;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.byteStride=e(o.byteStride,0)}}function i(r){t(r.animations)||(r.animations={});var i=r.animations;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t(o.channels)||(o.channels=[]),t(o.parameters)||(o.parameters={}),t(o.samplers)||(o.samplers={});var a=i.samplers;for(var s in a)if(a.hasOwnProperty(s)){var l=a[s];l.interpolation=e(l.interpolation,"LINEAR")}}}function n(r){t(r.asset)||(r.asset={}),r.asset.premultipliedAlpha=e(r.asset.premultipliedAlpha,!1)}function o(r){t(r.buffers)||(r.buffers={});var i=r.buffers;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.type=e(o.type,"arraybuffer")}}function a(e){t(e.bufferViews)||(e.bufferViews={})}function s(e){t(e.cameras)||(e.cameras={})}function l(e){t(e.images)||(e.images={})}function u(r){t(r.lights)||(r.lights={});var i=r.lights;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];if("ambient"===o.type){t(o.ambient)||(o.ambient={});var a=o.ambient;t(a.color)||(a.color=[1,1,1])}else if("directional"===o.type){t(o.directional)||(o.directional={});var s=o.directional;t(s.color)||(s.color=[1,1,1])}else if("point"===o.type){t(o.point)||(o.point={});var l=o.point;t(l.color)||(l.color=[1,1,1]),l.constantAttenuation=e(l.constantAttenuation,1),l.linearAttenuation=e(l.linearAttenuation,0),l.quadraticAttenuation=e(l.quadraticAttenuation,0)}else if("spot"===o.type){t(o.spot)||(o.spot={});var u=o.spot;t(u.color)||(u.color=[1,1,1]),u.constantAttenuation=e(u.constantAttenuation,1),u.fallOffAngle=e(u.fallOffAngle,3.14159265),u.fallOffExponent=e(u.fallOffExponent,0),u.linearAttenuation=e(u.linearAttenuation,0),u.quadraticAttenuation=e(u.quadraticAttenuation,0)}}}function c(e){t(e.materials)||(e.materials={});var r=e.materials;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i].instanceTechnique;t(n.values)||(n.values={})}}function h(r){t(r.meshes)||(r.meshes={});var i=r.meshes;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t(o.primitives)||(o.primitives=[]);for(var a=o.primitives.length,s=a.length,l=0;s>l;++l){var u=a[l];t(u.attributes)||(u.attributes={}),u.primitive=e(u.primitive,WebGLRenderingContext.TRIANGLES)}}}function d(e){t(e.nodes)||(e.nodes={});var r=e.nodes;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.children)||(n.children=[]),t(n.matrix)||(t(n.translation)&&t(n.rotation)&&t(n.scale)?(t(n.translation)||(n.translation=[0,0,0]),t(n.rotation)||(n.rotation=[1,0,0,0]),t(n.scale)||(n.scale=[1,1,1])):n.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}}function m(e){t(e.programs)||(e.programs={});var r=e.programs;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.attributes)||(n.attributes=[])}}function p(r){t(r.samplers)||(r.samplers={});var i=r.samplers;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.magFilter=e(o.magFilter,WebGLRenderingContext.LINEAR),o.minFilter=e(o.minFilter,WebGLRenderingContext.NEAREST_MIPMAP_LINEAR),o.wrapS=e(o.wrapS,WebGLRenderingContext.REPEAT),o.wrapT=e(o.wrapT,WebGLRenderingContext.REPEAT)}}function f(e){t(e.scenes)||(e.scenes={});var r=e.scenes;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.node)||(n.node=[])}}function v(e){t(e.shaders)||(e.shaders={})}function g(e){t(e.skins)||(e.skins={});var r=e.skins;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.bindShapeMatrix)&&(n.bindShapeMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}}function _(e){t(e.enable)||(e.enable=[]),t(e.disable)||(e.disable=[])}function y(e){t(e.techniques)||(e.techniques={});var r=e.techniques;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.parameters)||(n.parameters={});var o=n.passes;for(var a in o)if(o.hasOwnProperty(a)){var s=o[a],l=s.instanceProgram;t(l.attributes)||(l.attributes={}),t(l.uniforms)||(l.uniforms={}),t(s.states)||(s.states={}),_(s.states)}}}function C(r){t(r.textures)||(r.textures={});var i=r.textures;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.format=e(o.format,WebGLRenderingContext.RGBA),o.internalFormat=e(o.internalFormat,o.format),o.target=e(o.target,WebGLRenderingContext.TEXTURE_2D),o.type=e(o.type,WebGLRenderingContext.UNSIGNED_BYTE)}}var w=function(_){return t(_)?(t(_.allExtensions)||(_.allExtensions=[]),r(_),i(_),n(_),o(_),a(_),s(_),l(_),u(_),c(_),h(_),d(_),m(_),p(_),f(_),v(_),g(_),y(_),_.profile=e(_.profile,"WebGL 1.0.2"),_.version=e(_.version,"1.0"),C(_),_):void 0};return w}),r("Scene/getModelAccessor",["../Core/ComponentDatatype"],function(e){"use strict";var t={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},r=function(r){var i=r.componentType,n=t[r.type];return{componentsPerAttribute:n,createArrayBufferView:function(t,r,o){return e.createArrayBufferView(i,t,r,n*o)}}};return r}),r("Scene/ModelAnimationCache",["../Core/Cartesian3","../Core/defined","../Core/LinearSpline","../Core/Quaternion","../Core/QuaternionSpline","./getModelAccessor"],function(e,t,r,i,n,o){"use strict";function a(e,t){var r=e.gltf,i=r.buffers,n=r.bufferViews,a=n[t.bufferView],s=i[a.buffer],l=a.byteOffset+t.byteOffset,u=t.count*o(t).componentsPerAttribute;return e.basePath+s.path+":"+l+":"+u}function s(e,t,r){return e.basePath+":"+t+":"+r}var l=function(){},u={},c=new e;l.getAnimationParameterValues=function(r,n){var s=a(r,n),l=u[s];if(!t(l)){var h,d=r._loadResources.buffers,m=r.gltf,p=m.bufferViews,f=p[n.bufferView],v=n.componentType,g=n.type,_=n.count,y=o(n).createArrayBufferView(d[f.buffer],f.byteOffset+n.byteOffset,_);if(v===WebGLRenderingContext.FLOAT&&"SCALAR"===g)l=y;else if(v===WebGLRenderingContext.FLOAT&&"VEC3"===g)for(l=new Array(_),h=0;_>h;++h)l[h]=e.fromArray(y,3*h);else if(v===WebGLRenderingContext.FLOAT&&"VEC4"===g)for(l=new Array(_),h=0;_>h;++h){var C=4*h;l[h]=i.fromAxisAngle(e.fromArray(y,C,c),y[C+3])}""!==r.basePath&&(u[s]=l)}return l};var h={},d=function(e){this._value=e};return d.prototype.evaluate=function(){return this._value},l.getAnimationSpline=function(e,i,o,a,l,u){var c=s(e,i,a),m=h[c];if(!t(m)){var p=u[l.input],f=e.gltf.accessors[o.parameters[l.output]],v=u[l.output];if(1===p.length&&1===v.length)m=new d(v[0]);else{var g=f.componentType,_=f.type;"LINEAR"===l.interpolation&&(g===WebGLRenderingContext.FLOAT&&"VEC3"===_?m=new r({times:p,points:v}):g===WebGLRenderingContext.FLOAT&&"VEC4"===_&&(m=new n({times:p,points:v})))}""!==e.basePath&&(h[c]=m)}return m},l}),r("Scene/ModelAnimationLoop",["../Core/freezeObject"],function(e){"use strict";var t={NONE:0,REPEAT:1,MIRRORED_REPEAT:2};return e(t)}),r("Scene/ModelAnimationState",["../Core/freezeObject"],function(e){"use strict";return e({STOPPED:0,ANIMATING:1})}),r("Scene/ModelAnimation",["../Core/defaultValue","../Core/defineProperties","../Core/Event","./ModelAnimationLoop","./ModelAnimationState"],function(e,t,r,i,n){"use strict";var o=function(t,o,a){this._name=t.name,this._startTime=t.startTime,this._delay=e(t.delay,0),this._stopTime=t.stopTime,this.removeOnStop=e(t.removeOnStop,!1),this._speedup=e(t.speedup,1),this._reverse=e(t.reverse,!1),this._loop=e(t.loop,i.NONE),this.start=new r,this.update=new r,this.stop=new r,this._state=n.STOPPED,this._runtimeAnimation=a,this._startTime=void 0,this._duration=void 0;var s=this;this._raiseStartEvent=function(){s.start.raiseEvent(o,s)},this._updateEventTime=0,this._raiseUpdateEvent=function(){s.update.raiseEvent(o,s,s._updateEventTime)},this._raiseStopEvent=function(){s.stop.raiseEvent(o,s)}};return t(o.prototype,{name:{get:function(){return this._name}},startTime:{get:function(){return this._startTime}},delay:{get:function(){return this._delay}},stopTime:{get:function(){return this._stopTime}},speedup:{get:function(){return this._speedup}},reverse:{get:function(){return this._reverse}},loop:{get:function(){return this._loop}}}),o}),r("Scene/ModelAnimationCollection",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/JulianDate","../Core/Math","./ModelAnimation","./ModelAnimationLoop","./ModelAnimationState"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t){for(var r=e.channelEvaluators,i=r.length,n=0;i>n;++n)r[n](t)}function d(e,t,r){return function(){e.animationRemoved.raiseEvent(t,r)}}var m=function(e){this.animationAdded=new o,this.animationRemoved=new o,this._model=e,this._scheduledAnimations=[],this._previousTime=void 0};i(m.prototype,{length:{get:function(){return this._scheduledAnimations.length}}}),m.prototype.add=function(e){e=t(e,t.EMPTY_OBJECT);var r=this._model,i=r._runtime.animations,n=i[e.name],o=new l(e,r,n);return this._scheduledAnimations.push(o),this.animationAdded.raiseEvent(r,o),o},m.prototype.addAll=function(r){r=t(r,t.EMPTY_OBJECT),r=e(r);var i=[],n=this._model.gltf.animations;for(var o in n)n.hasOwnProperty(o)&&(r.name=o,i.push(this.add(r)));return i},m.prototype.remove=function(e){if(r(e)){var t=this._scheduledAnimations,i=t.indexOf(e);if(-1!==i)return t.splice(i,1),this.animationRemoved.raiseEvent(this._model,e),!0}return!1},m.prototype.removeAll=function(){var e=this._model,t=this._scheduledAnimations,r=t.length;this._scheduledAnimations=[];for(var i=0;r>i;++i)this.animationRemoved.raiseEvent(e,t[i])},m.prototype.contains=function(e){return r(e)?-1!==this._scheduledAnimations.indexOf(e):!1},m.prototype.get=function(e){return this._scheduledAnimations[e]};var p=[];return m.prototype.update=function(e){if(a.equals(e.time,this._previousTime))return!1;this._previousTime=a.clone(e.time,this._previousTime);for(var i=!1,n=e.time,o=this._model,l=this._scheduledAnimations,m=l.length,f=0;m>f;++f){var v=l[f],g=v._runtimeAnimation;r(v._startTime)||(v._startTime=a.addSeconds(t(v.startTime,n),v.delay,new a)),r(v._duration)||(v._duration=g.stopTime*(1/v.speedup));var _=v._startTime,y=v._duration,C=v.stopTime,w=0!==y?a.secondsDifference(n,_)/y:0,S=w>=0,E=S&&(1>=w||v.loop===u.REPEAT||v.loop===u.MIRRORED_REPEAT)&&(!r(C)||a.lessThanOrEquals(n,C));if(E){if(v._state===c.STOPPED&&(v._state=c.ANIMATING,v.start.numberOfListeners>0&&e.afterRender.push(v._raiseStartEvent)),v.loop===u.REPEAT)w-=Math.floor(w);else if(v.loop===u.MIRRORED_REPEAT){var b=Math.floor(w),T=w-b;w=1===b%2?1-T:T}v.reverse&&(w=1-w);var x=w*y*v.speedup;x=s.clamp(x,g.startTime,g.stopTime),h(g,x),v.update.numberOfListeners>0&&(v._updateEventTime=x,e.afterRender.push(v._raiseUpdateEvent)),i=!0}else S&&v._state===c.ANIMATING&&(v._state=c.STOPPED,v.stop.numberOfListeners>0&&e.afterRender.push(v._raiseStopEvent),v.removeOnStop&&p.push(v))}m=p.length;for(var P=0;m>P;++P){var A=p[P];l.splice(l.indexOf(A),1),e.afterRender.push(d(this,o,A))}return p.length=0,i},m}),r("Scene/ModelMaterial",["../Core/defined","../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(e,t,r){this._name=t.name,this._id=r,this._uniformMap=e._rendererResources.uniformMaps[r]};return t(r.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}}}),r.prototype.setValue=function(e,t){var r=this._uniformMap.values[e];r.value=r.clone(t,r.value)},r.prototype.getValue=function(t){var r=this._uniformMap.values[t];return e(r)?r.value:void 0},r}),r("Scene/ModelMesh",["../Core/defineProperties"],function(e){"use strict";var t=function(e,t,r){for(var i=[],n=e.primitives,o=n.length,a=0;o>a;++a){var s=n[a];i[a]=t[s.material]}this._name=e.name,this._materials=i,this._id=r};return e(t.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}},materials:{get:function(){return this._materials}}}),t}),r("Scene/ModelNode",["../Core/defaultValue","../Core/defineProperties","../Core/Matrix4"],function(e,t,r){"use strict";var i=function(t,i,n,o){this._model=t,this._runtimeNode=n,this._name=i.name,this._id=o,this.useMatrix=!1,this._matrix=r.clone(e(i.matrix,r.IDENTITY))};return t(i.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}},matrix:{get:function(){return this._matrix},set:function(e){this._matrix=r.clone(e,this._matrix),this.useMatrix=!0;var t=this._model;t._cesiumAnimationsDirty=!0,this._runtimeNode.dirtyNumber=t._maxDirtyNumber}}}),i}),r("Scene/Model",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/combine","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/IndexDatatype","../Core/loadArrayBuffer","../Core/loadImage","../Core/loadText","../Core/Math","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/PrimitiveType","../Core/Quaternion","../Core/Queue","../Core/RuntimeError","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","../ThirdParty/gltfDefaults","../ThirdParty/Uri","./getModelAccessor","./ModelAnimationCache","./ModelAnimationCollection","./ModelMaterial","./ModelMesh","./ModelNode","./Pass","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F){"use strict";function z(){this.buffersToCreate=new w,this.buffers={},this.pendingBufferLoads=0,this.programsToCreate=new w,this.shaders={},this.pendingShaderLoads=0,this.texturesToCreate=new w,this.pendingTextureLoads=0,this.createSamplers=!0,this.createSkins=!0,this.createRuntimeAnimations=!0,this.createVertexArrays=!0,this.createRenderStates=!0,this.createUniformMaps=!0,this.createRuntimeNodes=!0,this.skinnedNodesNames=[]}function V(e,t,r){return e._runtime[t][r]}function k(e){if(a(e.matrix))return _.fromArray(e.matrix);var t=r.fromArray(e.rotation,0,Ht);return _.fromTranslationQuaternionRotationScale(r.fromArray(e.translation,0,qt),C.fromAxisAngle(t,e.rotation[3],jt),r.fromArray(e.scale,0,Yt))}function U(t){for(var i=t.nodes,n=t.meshes,s=t.accessors,l=t.scenes[t.scene].nodes,u=l.length,c=[],h=new r(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),d=new r(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),m=0;u>m;++m){var p=i[l[m]];for(p._transformToRoot=k(p),c.push(p);c.length>0;){p=c.pop();var f=p._transformToRoot,v=o(p.meshes,a(p.instanceSkin)?p.instanceSkin.meshes:void 0);if(a(v))for(var g=v.length,y=0;g>y;++y)for(var C=n[v[y]].primitives,w=C.length,S=0;w>S;++S){var E=C[S].attributes.POSITION;if(a(E)){var b=s[E],T=r.fromArray(b.min,0,Xt),x=r.fromArray(b.max,0,Zt);a(h)&&a(d)&&(_.multiplyByPoint(f,T,T),_.multiplyByPoint(f,x,x),r.minimumByComponent(h,T,h),r.maximumByComponent(d,x,d))}}for(var P=p.children,A=P.length,M=0;A>M;++M){var D=i[P[M]];D._transformToRoot=k(D),_.multiplyTransformation(f,D._transformToRoot,D._transformToRoot),c.push(D)}delete p._transformToRoot}}var I=e.fromCornerPoints(h,d);return e.transformWithoutScale(I,Ut,I)}function W(e,t,r){return function(){e._loadError=new S("Failed to load external "+t+": "+r),e._state=Wt.FAILED}}function G(e,t){return function(r){var i=e._loadResources;i.buffers[t]=r,--i.pendingBufferLoads}}function H(e){var t=e.gltf.buffers;for(var r in t)if(t.hasOwnProperty(r)){++e._loadResources.pendingBufferLoads;var i=t[r],n=new M(i.uri),o=n.resolve(e._baseUri).toString();d(o).then(G(e,r)).otherwise(W(e,"buffer",o))}}function q(e){var t=e.gltf.bufferViews;for(var r in t)t.hasOwnProperty(r)&&e._loadResources.buffersToCreate.enqueue(r)}function j(e,t){return function(r){var i=e._loadResources;i.shaders[t]=r,--i.pendingShaderLoads}}function Y(e){var t=e.gltf.shaders;for(var r in t)if(t.hasOwnProperty(r)){++e._loadResources.pendingShaderLoads;var i=t[r],n=new M(i.uri),o=n.resolve(e._baseUri).toString();p(o).then(j(e,r)).otherwise(W(e,"shader",o))}}function X(e){var t=e.gltf.programs;for(var r in t)t.hasOwnProperty(r)&&e._loadResources.programsToCreate.enqueue(r)}function Z(e,t){return function(r){var i=e._loadResources;--i.pendingTextureLoads,i.texturesToCreate.enqueue({name:t,image:r})}}function Q(e){var t=e.gltf.images,r=e.gltf.textures;for(var i in r)if(r.hasOwnProperty(i)){++e._loadResources.pendingTextureLoads;var n=r[i],o=new M(t[n.source].uri),a=o.resolve(e._baseUri).toString();m(a).then(Z(e,i)).otherwise(W(e,"image",a))}}function J(e){var t={},r={},i=[],n=e._loadResources.skinnedNodesNames,o=e.gltf.nodes;for(var s in o)if(o.hasOwnProperty(s)){var l=o[s],u={matrix:void 0,translation:void 0,rotation:void 0,scale:void 0,transformToRoot:new _,computedMatrix:new _,dirtyNumber:0,commands:[],inverseBindMatrices:void 0,bindShapeMatrix:void 0,joints:[],computedJointMatrices:[],jointName:l.jointName,children:[],parents:[],publicNode:void 0};u.publicNode=new N(e,l,u,s),t[s]=u,r[l.name]=u,a(l.instanceSkin)&&(n.push(s),i.push(u))}e._runtime.nodes=t,e._runtime.nodesByName=r,e._runtime.skinnedNodes=i}function K(e){var t={},r={},i=e.gltf.materials,n=e._rendererResources.uniformMaps;for(var o in i)if(i.hasOwnProperty(o)){n[o]={uniformMap:void 0,values:void 0,jointMatrixUniformName:void 0};var a=i[o],s=new O(e,a,o);t[a.name]=s,r[o]=s}e._runtime.materialsByName=t,e._runtime.materialsById=r}function $(e){var t={},r=e._runtime.materialsById,i=e.gltf.meshes;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t[o.name]=new L(o,r,n)}e._runtime.meshesByName=t}function et(e){H(e),q(e),Y(e),X(e),Q(e),K(e),$(e),J(e)}function tt(e,t){var r=e._loadResources;if(0===r.pendingBufferLoads){for(var i,n,o=e.gltf.bufferViews,s=r.buffers,l=e._rendererResources.buffers;r.buffersToCreate.length>0;){var u=r.buffersToCreate.dequeue();if(n=o[u],n.target===WebGLRenderingContext.ARRAY_BUFFER){i=new Uint8Array(s[n.buffer],n.byteOffset,n.byteLength);var c=t.createVertexBuffer(i,E.STATIC_DRAW);c.vertexArrayDestroyable=!1,l[u]=c}}var h=e.gltf.accessors;for(var d in h)if(h.hasOwnProperty(d)){var m=h[d];if(n=o[m.bufferView],n.target===WebGLRenderingContext.ELEMENT_ARRAY_BUFFER&&!a(l[m.bufferView])){i=new Uint8Array(s[n.buffer],n.byteOffset,n.byteLength);var p=t.createIndexBuffer(i,E.STATIC_DRAW,m.componentType);p.vertexArrayDestroyable=!1,l[m.bufferView]=p}}}}function rt(e){for(var t={},r=e.length,i=0;r>i;++i)t[e[i]]=i;return t}function it(e,t,r){var i=t.gltf.programs,n=t._loadResources.shaders,o=i[e],a=rt(o.attributes),s=n[o.vertexShader],l=n[o.fragmentShader];if(t._rendererResources.programs[e]=r.createShaderProgram(s,l,a),t.allowPicking){var u=b({sources:[l],pickColorQualifier:"uniform"});t._rendererResources.pickPrograms[e]=r.createShaderProgram(s,u,a)}}function nt(e,t){var r,i=e._loadResources;if(0===i.pendingShaderLoads)if(e.asynchronous)i.programsToCreate.length>0&&(r=i.programsToCreate.dequeue(),it(r,e,t));else for(;i.programsToCreate.length>0;)r=i.programsToCreate.dequeue(),it(r,e,t)}function ot(e,t){var r=e._loadResources;if(r.createSamplers){r.createSamplers=!1;var i=e._rendererResources.samplers,n=e.gltf.samplers;for(var o in n)if(n.hasOwnProperty(o)){var a=n[o];i[o]=t.createSampler({wrapS:a.wrapS,wrapT:a.wrapT,minificationFilter:a.minFilter,magnificationFilter:a.magFilter})}}}function at(e,t,r){var i=t.gltf.textures,n=i[e.name],o=t._rendererResources.samplers,a=o[n.sampler],s=a.minificationFilter===x.NEAREST_MIPMAP_NEAREST||a.minificationFilter===x.NEAREST_MIPMAP_LINEAR||a.minificationFilter===x.LINEAR_MIPMAP_NEAREST||a.minificationFilter===x.LINEAR_MIPMAP_LINEAR,l=s||a.wrapS===P.REPEAT||a.wrapS===P.MIRRORED_REPEAT||a.wrapT===P.REPEAT||a.wrapT===P.MIRRORED_REPEAT,u=e.image,c=!f.isPowerOfTwo(u.width)||!f.isPowerOfTwo(u.height);if(l&&c){var h=document.createElement("canvas");h.width=f.nextPowerOfTwo(u.width),h.height=f.nextPowerOfTwo(u.height);var d=h.getContext("2d");d.drawImage(u,0,0,u.width,u.height,0,0,h.width,h.height),u=h}var m;n.target===WebGLRenderingContext.TEXTURE_2D&&(m=r.createTexture2D({source:u,pixelFormat:n.internalFormat,pixelDatatype:n.type,flipY:!1})),s&&m.generateMipmap(),m.sampler=a,t._rendererResources.textures[e.name]=m}function st(e,t){var r,i=e._loadResources;if(e.asynchronous)i.texturesToCreate.length>0&&(r=i.texturesToCreate.dequeue(),at(r,e,t));else for(;i.texturesToCreate.length>0;)r=i.texturesToCreate.dequeue(),at(r,e,t)}function lt(e,t){var r=e.gltf;r.programs;var i=r.techniques,n=r.materials,o={},a=i[n[t.material].instanceTechnique.technique],s=a.parameters,l=a.passes[a.pass],u=l.instanceProgram,c=u.attributes,h=e._rendererResources.programs[u.program].vertexAttributes;for(var d in c)if(c.hasOwnProperty(d)){var m=s[c[d]];o[m.semantic]=h[d].index}return o}function ut(e,t){for(var r=e.length,i=0;r>i;++i)for(var n=[e[i]];n.length>0;){var o=n.pop();if(o.jointName===t)return o;for(var a=o.children,s=a.length,l=0;s>l;++l)n.push(a[l])}return void 0}function ct(e,t){for(var r=e.gltf,i=r.skins,n=r.nodes,o=e._runtime.nodes,a=e._loadResources.skinnedNodesNames,s=a.length,l=0;s>l;++l){var u=a[l],c=o[u],h=n[u].instanceSkin,d=t[h.skin];c.inverseBindMatrices=d.inverseBindMatrices,c.bindShapeMatrix=d.bindShapeMatrix;for(var m=[],p=h.skeletons,f=p.length,v=0;f>v;++v)m.push(o[p[v]]);for(var g=i[h.skin].jointNames,_=g.length,y=0;_>y;++y){var C=g[y];c.joints.push(ut(m,C))}}}function ht(e){var t=e._loadResources;if(t.finishedBuffersCreation()&&t.createSkins){t.createSkins=!1;var r=e.gltf,i=t.buffers,n=r.accessors,o=r.bufferViews,a=r.skins,s={};for(var l in a)if(a.hasOwnProperty(l)){var u=a[l],c=n[u.inverseBindMatrices],h=o[c.bufferView],d=c.componentType,m=c.type,p=c.count,f=D(c).createArrayBufferView(i[h.buffer],h.byteOffset+c.byteOffset,p),v=new Array(p);if(d===WebGLRenderingContext.FLOAT&&"MAT4"===m)for(var g=0;p>g;++g)v[g]=_.fromArray(f,16*g);var y;_.equals(u.bindShapeMatrix,_.IDENTITY)||(y=_.clone(u.bindShapeMatrix)),s[l]={inverseBindMatrices:v,bindShapeMatrix:y}}ct(e,s)}}function dt(e,t,r,i){return function(n){t[r]=i.evaluate(n,t[r]),t.dirtyNumber=e._maxDirtyNumber}}function mt(e){var t=e._loadResources;if(t.finishedPendingLoads()&&t.createRuntimeAnimations){t.createRuntimeAnimations=!1,e._runtime.animations={};var r,i=e._runtime.nodes,n=e.gltf.animations,o=e.gltf.accessors;for(var a in n)if(n.hasOwnProperty(a)){var s=n[a],l=s.channels,u=s.parameters,c=s.samplers,h={};for(r in u)u.hasOwnProperty(r)&&(h[r]=I.getAnimationParameterValues(e,o[u[r]]));for(var d=Number.MAX_VALUE,m=-Number.MAX_VALUE,p=l.length,f=new Array(p),v=0;p>v;++v){var g=l[v],_=g.target,y=c[g.sampler],C=h[y.input];d=Math.min(d,C[0]),m=Math.max(m,C[C.length-1]);var w=I.getAnimationSpline(e,a,s,g.sampler,y,h);
f[v]=dt(e,i[_.id],_.path,w)}e._runtime.animations[a]={startTime:d,stopTime:m,channelEvaluators:f}}}}function pt(e,t){var r=e._loadResources;if(r.finishedBuffersCreation()&&r.finishedProgramCreation()&&r.createVertexArrays){r.createVertexArrays=!1;var i=e._rendererResources.buffers,n=e._rendererResources.vertexArrays,o=e.gltf,s=o.accessors,l=o.meshes;for(var u in l)if(l.hasOwnProperty(u))for(var c=l[u].primitives,h=c.length,d=0;h>d;++d){var m=c[d],p=lt(e,m),f=[],v=m.attributes;for(var g in v)if(v.hasOwnProperty(g)){var _=p[g];if(a(_)){var y=s[v[g]];f.push({index:_,vertexBuffer:i[y.bufferView],componentsPerAttribute:D(y).componentsPerAttribute,componentDatatype:y.componentType,normalize:!1,offsetInBytes:y.byteOffset,strideInBytes:y.byteStride})}}var C=s[m.indices],w=i[C.bufferView];n[u+".primitive."+d]=t.createVertexArray(f,w)}}}function ft(e){var t={};t[WebGLRenderingContext.BLEND]=!1,t[WebGLRenderingContext.CULL_FACE]=!1,t[WebGLRenderingContext.DEPTH_TEST]=!1,t[WebGLRenderingContext.POLYGON_OFFSET_FILL]=!1,t[WebGLRenderingContext.SAMPLE_COVERAGE]=!1,t[WebGLRenderingContext.SCISSOR_TEST]=!1;var r,i=e.enable,n=i.length;for(r=0;n>r;++r)t[i[r]]=!0;return t}function vt(e,t){var r=e._loadResources;if(r.createRenderStates){r.createRenderStates=!1;var i=e._rendererResources.renderStates,n=e.gltf.techniques;for(var s in n)if(n.hasOwnProperty(s)){var l=n[s],u=l.passes[l.pass],c=u.states,h=ft(c),d=o(c.functions,o.EMPTY_OBJECT),m=o(d.blendColor,[0,0,0,0]),p=o(d.blendEquationSeparate,[WebGLRenderingContext.FUNC_ADD,WebGLRenderingContext.FUNC_ADD]),f=o(d.blendFuncSeparate,[WebGLRenderingContext.ONE,WebGLRenderingContext.ONE,WebGLRenderingContext.ZERO,WebGLRenderingContext.ZERO]),v=o(d.colorMask,[!0,!0,!0,!0]),g=o(d.depthRange,[0,1]),_=o(d.polygonOffset,[0,0]),y=o(d.sampleCoverage,[0,0]),C=o(d.scissor,[0,0,0,0]);i[s]=t.createRenderState({frontFace:a(d.frontFace)?d.frontFace[0]:WebGLRenderingContext.CCW,cull:{enabled:h[WebGLRenderingContext.CULL_FACE],face:a(d.cullFace)?d.cullFace[0]:WebGLRenderingContext.BACK},lineWidth:a(d.lineWidth)?d.lineWidth[0]:1,polygonOffset:{enabled:h[WebGLRenderingContext.POLYGON_OFFSET_FILL],factor:_[0],units:_[1]},scissorTest:{enabled:h[WebGLRenderingContext.SCISSOR_TEST],rectangle:{x:C[0],y:C[1],width:C[2],height:C[3]}},depthRange:{near:g[0],far:g[1]},depthTest:{enabled:h[WebGLRenderingContext.DEPTH_TEST],func:a(d.depthFunc)?d.depthFunc[0]:WebGLRenderingContext.LESS},colorMask:{red:v[0],green:v[1],blue:v[2],alpha:v[3]},depthMask:a(d.depthMask)?d.depthMask[0]:!0,blending:{enabled:h[WebGLRenderingContext.BLEND],color:{red:m[0],green:m[1],blue:m[2],alpha:m[3]},equationRgb:p[0],equationAlpha:p[1],functionSourceRgb:f[0],functionSourceAlpha:f[1],functionDestinationRgb:f[2],functionDestinationAlpha:f[3]},sampleCoverage:{enabled:h[WebGLRenderingContext.SAMPLE_COVERAGE],value:y[0],invert:y[1]}})}}}function gt(e){var t={value:e,clone:function(e){return e},func:function(){return t.value}};return t}function _t(e){var r={value:t.fromArray(e),clone:t.clone,func:function(){return r.value}};return r}function yt(e){var t={value:r.fromArray(e),clone:r.clone,func:function(){return t.value}};return t}function Ct(e){var t={value:i.fromArray(e),clone:i.clone,func:function(){return t.value}};return t}function wt(e){var t={value:v.fromColumnMajorArray(e),clone:v.clone,func:function(){return t.value}};return t}function St(e){var t={value:g.fromColumnMajorArray(e),clone:g.clone,func:function(){return t.value}};return t}function Et(e){var t={value:_.fromColumnMajorArray(e),clone:_.clone,func:function(){return t.value}};return t}function bt(e,t){var r={value:t._rendererResources.textures[e],clone:function(e){return e},func:function(){return r.value}};return r}function Tt(e,t){var r=t._runtime.nodes[e];return function(){return r.computedMatrix}}function xt(e,t){var r=e._loadResources;if(r.finishedTextureCreation()&&r.finishedProgramCreation()&&r.createUniformMaps){r.createUniformMaps=!1;var i=e.gltf,n=i.materials,o=i.techniques;i.programs;var s=e._rendererResources.uniformMaps;for(var l in n)if(n.hasOwnProperty(l)){var u=n[l],c=u.instanceTechnique,h=c.values,d=o[c.technique],m=d.parameters,p=d.passes[d.pass],f=p.instanceProgram,v=f.uniforms;e._rendererResources.programs[f.program].allUniforms;var g,_={},y={};for(var C in v)if(v.hasOwnProperty(C)){var w=v[C],S=m[w];if(a(h[w])){var E=Jt[S.type](h[w],e);_[C]=E.func,y[w]=E}else if(a(S.semantic))"JOINTMATRIX"!==S.semantic?_[C]=Qt[S.semantic](t.uniformState):g=C;else if(a(S.source))_[C]=Tt(S.source,e);else if(a(S.value)){var b=Jt[S.type](S.value,e);_[C]=b.func,y[w]=b}}var T=s[l];T.uniformMap=_,T.values=y,T.jointMatrixUniformName=g}}}function Pt(e){return function(){return e}}function At(e){return function(){return e.computedJointMatrices}}function Mt(t,i,s,l){for(var u=t._renderCommands,c=t._pickCommands,d=t._pickIds,m=t.allowPicking,p=t._runtime.meshesByName,f=t.debugShowBoundingVolume,v=t._rendererResources,g=v.vertexArrays,y=v.programs,C=v.pickPrograms,w=v.renderStates,S=v.uniformMaps,E=t.gltf,b=E.accessors,x=E.meshes,P=E.techniques,A=E.materials,M=a(i.meshes)?i.meshes:i.instanceSkin.meshes,D=M.length,I=0;D>I;++I)for(var R=M[I],O=x[R],L=O.primitives,N=L.length,F=0;N>F;++F){var z,V=L[F],k=b[V.indices],U=A[V.material].instanceTechnique,W=P[U.technique],G=W.passes[W.pass],H=G.instanceProgram,q=V.attributes.POSITION;if(a(q)){var j=b[q];z=e.fromCornerPoints(r.fromArray(j.min),r.fromArray(j.max))}var Y=g[R+".primitive."+F],X=k.count,Z=k.byteOffset/h.getSizeInBytes(k.componentType),Q=S[V.material],J=Q.uniformMap;if(a(Q.jointMatrixUniformName)){var K={};K[Q.jointMatrixUniformName]=At(s),J=n(J,K)}var $=w[U.technique],et=$.blending.enabled,tt={primitive:o(t.pickPrimitive,t),id:t.id,node:s.publicNode,mesh:p[O.name]},rt=new T({boundingVolume:new e,modelMatrix:new _,primitiveType:V.primitive,vertexArray:Y,count:X,offset:Z,shaderProgram:y[H.program],uniformMap:J,renderState:$,owner:tt,debugShowBoundingVolume:f,pass:et?B.TRANSLUCENT:B.OPAQUE});u.push(rt);var it;if(m){var nt=l.createPickId(tt);d.push(nt);var ot=n(J,{czm_pickColor:Pt(nt.color)});it=new T({boundingVolume:new e,modelMatrix:new _,primitiveType:V.primitive,vertexArray:Y,count:X,offset:Z,shaderProgram:C[H.program],uniformMap:ot,renderState:$,owner:tt,pass:et?B.TRANSLUCENT:B.OPAQUE}),c.push(it)}s.commands.push({command:rt,pickCommand:it,boundingSphere:z})}}function Dt(e,t){var i=e._loadResources;if(i.finishedPendingLoads()&&i.finishedResourceCreation()&&i.createRuntimeNodes){i.createRuntimeNodes=!1;for(var n=[],o=e._runtime.nodes,s=e.gltf,l=s.nodes,u=s.scenes[s.scene],c=u.nodes,h=c.length,d=[],m=new r,p=0;h>p;++p)for(d.push({parentRuntimeNode:void 0,gltfNode:l[c[p]],id:c[p]});d.length>0;){var f=d.pop(),v=f.parentRuntimeNode,g=f.gltfNode,y=o[f.id];0===y.parents.length&&(a(g.matrix)?y.matrix=_.fromColumnMajorArray(g.matrix):(m=r.fromArray(g.rotation,0,m),y.translation=r.fromArray(g.translation),y.rotation=C.fromAxisAngle(m,g.rotation[3]),y.scale=r.fromArray(g.scale))),a(v)?(v.children.push(y),y.parents.push(v)):n.push(y),(a(g.meshes)||a(g.instanceSkin))&&Mt(e,g,y,t);for(var w=g.children,S=w.length,E=0;S>E;++E)d.push({parentRuntimeNode:y,gltfNode:l[w[E]],id:w[E]})}e._runtime.rootNodes=n,e._runtime.nodes=o}}function It(e,t){tt(e,t),nt(e,t),ot(e,t),st(e,t),ht(e),mt(e),pt(e,t),vt(e,t),xt(e,t),Dt(e,t)}function Rt(e,t){var r=e.publicNode,i=r.matrix;r.useMatrix&&a(i)?_.clone(i,t):a(e.matrix)?_.clone(e.matrix,t):_.fromTranslationQuaternionRotationScale(e.translation,e.rotation,e.scale,t)}function Ot(t,r,i){for(var n=t._maxDirtyNumber,o=t.allowPicking,a=t._runtime.rootNodes,s=a.length,l=Kt,u=t._computedModelMatrix,c=0;s>c;++c){var h=a[c];for(Rt(h,h.transformToRoot),l.push(h);l.length>0;){h=l.pop();var d=h.transformToRoot,m=h.commands;if(h.dirtyNumber===n||r||i){var p=m.length;if(p>0)for(var f=0;p>f;++f){var v=m[f],g=v.command;if(_.multiplyTransformation(u,d,g.modelMatrix),e.transform(v.boundingSphere,g.modelMatrix,g.boundingVolume),o){var y=v.pickCommand;_.clone(g.modelMatrix,y.modelMatrix),e.clone(g.boundingVolume,y.boundingVolume)}}else h.computedMatrix=_.multiplyTransformation(u,d,h.computedMatrix)}for(var C=h.children,w=C.length,S=0;w>S;++S){var E=C[S];E.dirtyNumber=Math.max(E.dirtyNumber,h.dirtyNumber),(E.dirtyNumber===n||i)&&(Rt(E,E.transformToRoot),_.multiplyTransformation(d,E.transformToRoot,E.transformToRoot)),l.push(E)}}}++t._maxDirtyNumber}function Lt(e){for(var t=e._runtime.skinnedNodes,r=t.length,i=0;r>i;++i){var n=t[i];$t=_.inverseTransformation(n.transformToRoot,$t);for(var o=n.computedJointMatrices,s=n.joints,l=n.bindShapeMatrix,u=n.inverseBindMatrices,c=u.length,h=0;c>h;++h)a(o[h])||(o[h]=new _),o[h]=_.multiplyTransformation($t,s[h].transformToRoot,o[h]),o[h]=_.multiplyTransformation(o[h],u[h],o[h]),a(l)&&(o[h]=_.multiplyTransformation(o[h],l,o[h]))}}function Nt(e){var t=e.id;if(e._id!==t){e._id=t;for(var r=e._pickIds,i=r.length,n=0;i>n;++n)r[n].object.id=t}}function Bt(e){if(e._debugWireframe!==e.debugWireframe){e._debugWireframe=e.debugWireframe;for(var t=e.debugWireframe?y.LINES:y.TRIANGLES,r=e._renderCommands,i=r.length,n=0;i>n;++n)r[n].primitiveType=t}}function Ft(e,t,i,n){var o=n.camera,a=o.frustum,s=r.subtract(o.positionWC,e,tr),l=r.multiplyByScalar(o.directionWC,r.dot(s,o.directionWC),rr),u=Math.max(a.near,r.magnitude(l)-t);er.x=i.drawingBufferWidth,er.y=i.drawingBufferHeight;var c=a.getPixelSize(er,u),h=Math.max(c.x,c.y);return h}function zt(e,t,r){var i=e._scale;if(0!==e.minimumPixelSize){var n=Math.max(t.drawingBufferWidth,t.drawingBufferHeight),o=e.modelMatrix;ir.x=o[12],ir.y=o[13],ir.z=o[14];var a=e.boundingSphere.radius,s=Ft(ir,a,t,r),l=1/s,u=Math.min(l*2*a,n);u<e.minimumPixelSize&&(i=e.minimumPixelSize*s/(2*e._initialRadius))}return i}function Vt(e){for(var t in e)e.hasOwnProperty(t)&&e[t].destroy()}function kt(e){for(var t in e)e.hasOwnProperty(t)&&e[t].destroy()}var Ut=_.fromRotationTranslation(g.fromRotationX(f.PI_OVER_TWO),r.ZERO),Wt={NEEDS_LOAD:0,LOADING:1,LOADED:2,FAILED:3};z.prototype.finishedPendingLoads=function(){return 0===this.pendingBufferLoads&&0===this.pendingShaderLoads&&0===this.pendingTextureLoads},z.prototype.finishedResourceCreation=function(){return 0===this.buffersToCreate.length&&0===this.programsToCreate.length&&0===this.texturesToCreate.length},z.prototype.finishedBuffersCreation=function(){return 0===this.pendingBufferLoads&&0===this.buffersToCreate.length},z.prototype.finishedProgramCreation=function(){return 0===this.pendingShaderLoads&&0===this.programsToCreate.length},z.prototype.finishedTextureCreation=function(){return 0===this.pendingTextureLoads&&0===this.texturesToCreate.length};var Gt=function(e){e=o(e,o.EMPTY_OBJECT),this._gltf=A(e.gltf),this._basePath=o(e.basePath,"");var t=new M(document.location.href),r=new M(this._basePath);this._baseUri=r.resolve(t),this.show=o(e.show,!0),this.modelMatrix=_.clone(o(e.modelMatrix,_.IDENTITY)),this._modelMatrix=_.clone(this.modelMatrix),this.scale=o(e.scale,1),this._scale=this.scale,this.minimumPixelSize=o(e.minimumPixelSize,0),this._minimumPixelSize=this.minimumPixelSize,this.id=e.id,this._id=e.id,this.pickPrimitive=e.pickPrimitive,this._allowPicking=o(e.allowPicking,!0),this.readyToRender=new c,this._ready=!1,this.activeAnimations=new R(this),this._asynchronous=o(e.asynchronous,!0),this.debugShowBoundingVolume=o(e.debugShowBoundingVolume,!1),this.debugWireframe=o(e.debugWireframe,!1),this._debugWireframe=!1,this._computedModelMatrix=new _,this._initialRadius=void 0,this._boundingSphere=void 0,this._state=Wt.NEEDS_LOAD,this._loadError=void 0,this._loadResources=void 0,this._cesiumAnimationsDirty=!1,this._maxDirtyNumber=0,this._runtime={animations:void 0,rootNodes:void 0,nodes:void 0,nodesByName:void 0,skinnedNodes:void 0,meshesByName:void 0,materialsByName:void 0,materialsById:void 0},this._rendererResources={buffers:{},vertexArrays:{},programs:{},pickPrograms:{},textures:{},samplers:{},renderStates:{},uniformMaps:{}},this._renderCommands=[],this._pickCommands=[],this._pickIds=[]};s(Gt.prototype,{gltf:{get:function(){return this._gltf}},basePath:{get:function(){return this._basePath}},boundingSphere:{get:function(){return this._boundingSphere.radius=this.scale*_.getMaximumScale(this.modelMatrix)*this._initialRadius,this._boundingSphere}},ready:{get:function(){return this._ready}},asynchronous:{get:function(){return this._asynchronous}},allowPicking:{get:function(){return this._allowPicking}}}),Gt.fromGltf=function(e){var t=e.url,r="",i=t.lastIndexOf("/");-1!==i&&(r=t.substring(0,i+1));var n=new Gt(e);return p(t,e.headers).then(function(e){n._gltf=A(JSON.parse(e)),n._basePath=r;var t=new M(document.location.href),i=new M(n._basePath);n._baseUri=i.resolve(t)}).otherwise(W(n,"gltf",t)),n},Gt.prototype.getNode=function(e){var t=V(this,"nodesByName",e);return a(t)?t.publicNode:void 0},Gt.prototype.getMesh=function(e){return V(this,"meshesByName",e)},Gt.prototype.getMaterial=function(e){return V(this,"materialsByName",e)};var Ht=new r,qt=new r,jt=new C,Yt=new r,Xt=new r,Zt=new r,Qt={MODEL:function(e){return function(){return e.model}},VIEW:function(e){return function(){return e.view}},PROJECTION:function(e){return function(){return e.projection}},MODELVIEW:function(e){return function(){return e.modelView}},MODELVIEWPROJECTION:function(e){return function(){return e.modelViewProjection}},MODELINVERSE:function(e){return function(){return e.inverseModel}},VIEWINVERSE:function(e){return function(){return e.inverseView}},PROJECTIONINVERSE:function(e){return function(){return e.inverseProjection}},MODELVIEWINVERSE:function(e){return function(){return e.inverseModelView}},MODELVIEWPROJECTIONINVERSE:function(e){return function(){return e.inverseModelViewProjection}},MODELINVERSETRANSPOSE:function(e){return function(){return e.inverseTranposeModel}},MODELVIEWINVERSETRANSPOSE:function(e){return function(){return e.normal}},VIEWPORT:function(e){return function(){return e.viewportCartesian4}}},Jt={};"undefined"!=typeof WebGLRenderingContext&&(Jt[WebGLRenderingContext.FLOAT]=gt,Jt[WebGLRenderingContext.FLOAT_VEC2]=_t,Jt[WebGLRenderingContext.FLOAT_VEC3]=yt,Jt[WebGLRenderingContext.FLOAT_VEC4]=Ct,Jt[WebGLRenderingContext.INT]=gt,Jt[WebGLRenderingContext.INT_VEC2]=_t,Jt[WebGLRenderingContext.INT_VEC3]=yt,Jt[WebGLRenderingContext.INT_VEC4]=Ct,Jt[WebGLRenderingContext.BOOL]=gt,Jt[WebGLRenderingContext.BOOL_VEC2]=_t,Jt[WebGLRenderingContext.BOOL_VEC3]=yt,Jt[WebGLRenderingContext.BOOL_VEC4]=Ct,Jt[WebGLRenderingContext.FLOAT_MAT2]=wt,Jt[WebGLRenderingContext.FLOAT_MAT3]=St,Jt[WebGLRenderingContext.FLOAT_MAT4]=Et,Jt[WebGLRenderingContext.SAMPLER_2D]=bt);var Kt=[],$t=new _,er=new t,tr=new r,rr=new r,ir=new r;return Gt.prototype.update=function(e,t,r){if(t.mode===F.SCENE3D){this._state===Wt.NEEDS_LOAD&&a(this.gltf)&&(this._state=Wt.LOADING,this._boundingSphere=U(this.gltf),this._initialRadius=this._boundingSphere.radius,this._loadResources=new z,et(this));var i=!1;if(this._state===Wt.FAILED)throw this._loadError;if(this._state===Wt.LOADING){It(this,e);var n=this._loadResources;n.finishedPendingLoads()&&n.finishedResourceCreation()&&(this._state=Wt.LOADED,this._loadResources=void 0,i=!0)}var o=this.show&&0!==this.scale;if(o&&this._state===Wt.LOADED||i){var s=this.activeAnimations.update(t)||this._cesiumAnimationsDirty;this._cesiumAnimationsDirty=!1;var l=!_.equals(this._modelMatrix,this.modelMatrix)||this._scale!==this.scale||this._minimumPixelSize!==this.minimumPixelSize||0!==this.minimumPixelSize;if(l||i){_.clone(this.modelMatrix,this._modelMatrix),this._scale=this.scale,this._minimumPixelSize=this.minimumPixelSize;var u=zt(this,e,t),c=this._computedModelMatrix;_.multiplyByUniformScale(this.modelMatrix,u,c),_.multiplyTransformation(c,Ut,c)}(s||l||i)&&(Ot(this,l,i),(s||i)&&Lt(this)),Nt(this,e),Bt(this)}if(i){var h=this;return t.afterRender.push(function(){h._ready=!0,h.readyToRender.raiseEvent(h)}),void 0}if(o){var d,m,p,f=t.passes;if(f.render)for(p=this._renderCommands,m=p.length,d=0;m>d;++d)r.push(p[d]);if(f.pick)for(p=this._pickCommands,m=p.length,d=0;m>d;++d)r.push(p[d])}}},Gt.prototype.isDestroyed=function(){return!1},Gt.prototype.destroy=function(){var e=this._rendererResources;Vt(e.buffers),Vt(e.vertexArrays),kt(e.programs),kt(e.pickPrograms),Vt(e.textures),e=void 0,this._rendererResources=void 0;for(var t=this._pickIds,r=t.length,i=0;r>i;++i)t[i].destroy();return l(this)},Gt}),r("DataSources/ModelVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/Transforms","../Scene/Model","../Scene/ModelAnimationLoop","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,i,n){var o=i[t.id];if(r(o)){var a=o.modelPrimitive;a.readyToRender.removeEventListener(m,e),n.remove(a),a.isDestroyed()||a.destroy(),delete i[t.id]}}function m(e){e.activeAnimations.addAll({loop:c.REPEAT})}var p=1,f=0,v=new o,g=new t,_=new s,y=function(t,r){r.collectionChanged.addEventListener(y.prototype._onCollectionChanged,this),this._scene=t,this._primitives=t.primitives,this._entityCollection=r,this._modelHash={},this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return y.prototype.update=function(e){this._scene.context;for(var i=this._entitiesToVisualize.values,n=this._modelHash,c=this._primitives,d=this._scene,y=0,C=i.length;C>y;y++){var w,S=i[y],E=S._model,b=n[S.id],T=S.isAvailable(e)&&h.getValueOrDefault(E._show,e,!0);if(T&&(g=h.getValueOrUndefined(S._position,e,g),w=h.getValueOrUndefined(E._uri,e),T=r(g)&&r(w)),T){var x=r(b)?b.modelPrimitive:void 0;r(x)&&w===b.uri||(r(x)&&(c.remove(x),x.isDestroyed()||x.destroy(),delete n[S.id]),x=u.fromGltf({url:w}),x.readyToRender.addEventListener(m,this),x.id=S,c.add(x),b={modelPrimitive:x,uri:w,position:void 0,orientation:void 0},n[S.id]=b),x.show=!0,x.scale=h.getValueOrDefault(E._scale,e,p),x.minimumPixelSize=h.getValueOrDefault(E._minimumPixelSize,e,f),_=h.getValueOrUndefined(S._orientation,e,_),t.equals(g,b.position)&&s.equals(_,b.orientation)||(r(_)?a.fromRotationTranslation(o.fromQuaternion(_,v),g,x.modelMatrix):l.eastNorthUpToFixedFrame(g,d.globe.ellipsoid,x.modelMatrix),b.position=t.clone(g,b.position),b.orientation=s.clone(_,b.orientation))}else r(b)&&(b.modelPrimitive.show=!1)}return!0},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(y.prototype._onCollectionChanged,this);for(var e=this._entitiesToVisualize.values,t=this._modelHash,r=this._primitives,n=e.length-1;n>-1;n--)d(this,e[n],t,r);return i(this)},y.prototype._onCollectionChanged=function(e,t,i,n){var o,a,s=this._entitiesToVisualize,l=this._modelHash,u=this._primitives;for(o=t.length-1;o>-1;o--)a=t[o],r(a._model)&&r(a._position)&&s.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],r(a._model)&&r(a._position)?s.set(a.id,a):(d(this,a,l,u),s.remove(a.id));for(o=i.length-1;o>-1;o--)a=i[o],d(this,a,l,u),s.remove(a.id)},y}),r("Shaders/PolylineCommon",[],function(){"use strict";return"void clipLineSegmentToNearPlane(\nvec3 p0,\nvec3 p1,\nout vec4 positionWC,\nout bool clipped,\nout bool culledByNearPlane)\n{\nculledByNearPlane = false;\nclipped = false;\nvec3 p1ToP0 = p1 - p0;\nfloat magnitude = length(p1ToP0);\nvec3 direction = normalize(p1ToP0);\nfloat endPoint0Distance =  -(czm_currentFrustum.x + p0.z);\nfloat denominator = -direction.z;\nif (endPoint0Distance < 0.0 && abs(denominator) < czm_epsilon7)\n{\nculledByNearPlane = true;\n}\nelse if (endPoint0Distance < 0.0 && abs(denominator) > czm_epsilon7)\n{\nfloat t = (czm_currentFrustum.x + p0.z) / denominator;\nif (t < 0.0 || t > magnitude)\n{\nculledByNearPlane = true;\n}\nelse\n{\np0 = p0 + t * direction;\nclipped = true;\n}\n}\npositionWC = czm_eyeToWindowCoordinates(vec4(p0, 1.0));\n}\nvec4 getPolylineWindowCoordinates(vec4 position, vec4 previous, vec4 next, float expandDirection, float width, bool usePrevious) {\nvec4 endPointWC, p0, p1;\nbool culledByNearPlane, clipped;\nvec4 positionEC = czm_modelViewRelativeToEye * position;\nvec4 prevEC = czm_modelViewRelativeToEye * previous;\nvec4 nextEC = czm_modelViewRelativeToEye * next;\nclipLineSegmentToNearPlane(prevEC.xyz, positionEC.xyz, p0, clipped, culledByNearPlane);\nclipLineSegmentToNearPlane(nextEC.xyz, positionEC.xyz, p1, clipped, culledByNearPlane);\nclipLineSegmentToNearPlane(positionEC.xyz, usePrevious ? prevEC.xyz : nextEC.xyz, endPointWC, clipped, culledByNearPlane);\nif (culledByNearPlane)\n{\nreturn vec4(0.0, 0.0, 0.0, 1.0);\n}\nvec2 prevWC = normalize(p0.xy - endPointWC.xy);\nvec2 nextWC = normalize(p1.xy - endPointWC.xy);\nfloat expandWidth = width * 0.5;\nvec2 direction;\nif (czm_equalsEpsilon(normalize(previous.xyz - position.xyz), vec3(0.0), czm_epsilon1) || czm_equalsEpsilon(prevWC, -nextWC, czm_epsilon1))\n{\ndirection = vec2(-nextWC.y, nextWC.x);\n}\nelse if (czm_equalsEpsilon(normalize(next.xyz - position.xyz), vec3(0.0), czm_epsilon1) || clipped)\n{\ndirection = vec2(prevWC.y, -prevWC.x);\n}\nelse\n{\nvec2 normal = vec2(-nextWC.y, nextWC.x);\ndirection = normalize((nextWC + prevWC) * 0.5);\nif (dot(direction, normal) < 0.0)\n{\ndirection = -direction;\n}\nfloat sinAngle = abs(direction.x * nextWC.y - direction.y * nextWC.x);\nexpandWidth = clamp(expandWidth / sinAngle, 0.0, width * 2.0);\n}\nvec2 offset = direction * expandDirection * expandWidth * czm_resolutionScale;\nreturn vec4(endPointWC.xy + offset, -endPointWC.z, 1.0);\n}\n"}),r("Shaders/PolylineFS",[],function(){"use strict";return"varying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nczm_material material = czm_getMaterial(materialInput);\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n}\n"}),r("Shaders/PolylineVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 position2DHigh;\nattribute vec3 position2DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 prevPosition2DHigh;\nattribute vec3 prevPosition2DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec3 nextPosition2DHigh;\nattribute vec3 nextPosition2DLow;\nattribute vec4 texCoordExpandWidthAndShow;\nattribute vec4 pickColor;\nvarying vec2  v_st;\nvarying float v_width;\nvarying vec4  czm_pickColor;\nvoid main()\n{\nfloat texCoord = texCoordExpandWidthAndShow.x;\nfloat expandDir = texCoordExpandWidthAndShow.y;\nfloat width = abs(texCoordExpandWidthAndShow.z) + 0.5;\nbool usePrev = texCoordExpandWidthAndShow.z < 0.0;\nfloat show = texCoordExpandWidthAndShow.w;\nvec4 p, prev, next;\nif (czm_morphTime == 1.0)\n{\np = czm_translateRelativeToEye(position3DHigh.xyz, position3DLow.xyz);\nprev = czm_translateRelativeToEye(prevPosition3DHigh.xyz, prevPosition3DLow.xyz);\nnext = czm_translateRelativeToEye(nextPosition3DHigh.xyz, nextPosition3DLow.xyz);\n}\nelse if (czm_morphTime == 0.0)\n{\np = czm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy);\nprev = czm_translateRelativeToEye(prevPosition2DHigh.zxy, prevPosition2DLow.zxy);\nnext = czm_translateRelativeToEye(nextPosition2DHigh.zxy, nextPosition2DLow.zxy);\n}\nelse\n{\np = czm_columbusViewMorph(\nczm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy),\nczm_translateRelativeToEye(position3DHigh.xyz, position3DLow.xyz),\nczm_morphTime);\nprev = czm_columbusViewMorph(\nczm_translateRelativeToEye(prevPosition2DHigh.zxy, prevPosition2DLow.zxy),\nczm_translateRelativeToEye(prevPosition3DHigh.xyz, prevPosition3DLow.xyz),\nczm_morphTime);\nnext = czm_columbusViewMorph(\nczm_translateRelativeToEye(nextPosition2DHigh.zxy, nextPosition2DLow.zxy),\nczm_translateRelativeToEye(nextPosition3DHigh.xyz, nextPosition3DLow.xyz),\nczm_morphTime);\n}\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC * show;\nv_st = vec2(texCoord, clamp(expandDir, 0.0, 1.0));\nv_width = width;\nczm_pickColor = pickColor;\n}\n"}),r("Scene/Polyline",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","../Core/PolylinePipeline","./Material"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){++e._propertiesChanged[t];var r=e._polylineCollection;n(r)&&(r._updatePolyline(e,t),e._dirty=!0)}var h=function(o,a){o=i(o,i.EMPTY_OBJECT),this._show=i(o.show,!0),this._width=i(o.width,1),this._loop=i(o.loop,!1),this._material=o.material,n(this._material)||(this._material=u.fromType(u.ColorType,{color:new r(1,1,1,1)}));var c=o.positions;n(c)||(c=[]),this._positions=c,this._loop&&c.length>2&&!t.equals(c[0],c[c.length-1])&&c.push(t.clone(c[0])),this._length=c.length,this._id=o.id;var h;n(a)&&(h=s.clone(a.modelMatrix)),this._modelMatrix=h,this._segments=l.wrapLongitude(c,h),this._actualLength=void 0,this._propertiesChanged=new Uint32Array(g),this._polylineCollection=a,this._dirty=!1,this._pickId=void 0,this._boundingVolume=e.fromPoints(this._positions),this._boundingVolumeWC=e.transform(this._boundingVolume,this._modelMatrix),this._boundingVolume2D=new e},d=h.SHOW_INDEX=0,m=h.WIDTH_INDEX=1,p=h.POSITION_INDEX=2,f=h.MATERIAL_INDEX=3,v=h.POSITION_SIZE_INDEX=4,g=h.NUMBER_OF_PROPERTIES=5;return o(h.prototype,{show:{get:function(){return this._show},set:function(e){e!==this._show&&(this._show=e,c(this,d))}},positions:{get:function(){return this._positions},set:function(r){this._loop&&r.length>2&&!t.equals(r[0],r[r.length-1])&&r.push(t.clone(r[0])),(this._positions.length!==r.length||this._positions.length!==this._length)&&c(this,v),this._positions=r,this._length=r.length,this._boundingVolume=e.fromPoints(this._positions,this._boundingVolume),this._boundingVolumeWC=e.transform(this._boundingVolume,this._modelMatrix,this._boundingVolumeWC),c(this,p),this.update()}},material:{get:function(){return this._material},set:function(e){this._material!==e&&(this._material=e,c(this,f))}},width:{get:function(){return this._width},set:function(e){var t=this._width;e!==t&&(this._width=e,c(this,m))}},loop:{get:function(){return this._loop},set:function(e){if(e!==this._loop){var r=this._positions;e?r.length>2&&!t.equals(r[0],r[r.length-1])&&r.push(t.clone(r[0])):r.length>2&&t.equals(r[0],r[r.length-1])&&r.pop(),this._loop=e,c(this,v)}}},id:{get:function(){return this._id},set:function(e){this._id=e,n(this._pickId)&&(this._pickId.object.id=e)}}}),h.prototype.update=function(){var t=s.IDENTITY;n(this._polylineCollection)&&(t=this._polylineCollection.modelMatrix);var r=this._segments.positions.length,i=this._segments.lengths,o=this._propertiesChanged[p]>0||this._propertiesChanged[v]>0;if((!s.equals(t,this._modelMatrix)||o)&&(this._segments=l.wrapLongitude(this._positions,t),this._boundingVolumeWC=e.transform(this._boundingVolume,t,this._boundingVolumeWC)),this._modelMatrix=t,this._segments.positions.length!==r)c(this,v);else for(var a=i.length,u=0;a>u;++u)if(i[u]!==this._segments.lengths[u]){c(this,v);break}},h.prototype.getPickId=function(e){return n(this._pickId)||(this._pickId=e.createPickId({primitive:this,collection:this._polylineCollection,id:this._id})),this._pickId},h.prototype._clean=function(){this._dirty=!1;for(var e=this._propertiesChanged,t=0;g-1>t;++t)e[t]=0},h.prototype._destroy=function(){this._pickId=this._pickId&&this._pickId.destroy(),this._material=this._material&&this._material.destroy(),this._polylineCollection=void 0},h}),r("Scene/PolylineCollection",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EncodedCartesian3","../Core/IndexDatatype","../Core/Intersect","../Core/Math","../Core/Matrix4","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/PolylineCommon","../Shaders/PolylineFS","../Shaders/PolylineVS","./BlendingState","./Material","./Pass","./Polyline","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T){"use strict";function x(t,r,i,n,o,s,l){for(var u=n.length,c=0,h=!0,d=t._vertexArrays,m=t.debugShowBoundingVolume,p=d.length,f=0;p>f;++f)for(var v=d[f],_=v.buckets,y=_.length,C=0;y>C;++C){for(var w,S,b,x=_[C],P=x.offset,A=l?x.bucket.shaderProgram:x.bucket.pickShaderProgram,D=x.bucket.polylines,I=D.length,R=0,O=0;I>O;++O){var L=D[O],N=M(L._material);if(N!==w){if(a(w)&&R>0){var B=S.isTranslucent();c>=u?(b=new g({owner:t}),n.push(b)):b=n[c],++c,b.boundingVolume=e.clone(j,b.boundingVolume),b.modelMatrix=s,b.shaderProgram=A,b.vertexArray=v.va,b.renderState=B?t._translucentRS:t._opaqueRS,b.pass=B?E.TRANSLUCENT:E.OPAQUE,b.debugShowBoundingVolume=l?m:!1,b.uniformMap=S._uniforms,b.count=R,b.offset=P,P+=R,R=0,h=!0,o.push(b)}S=L._material,S.update(r),w=N}for(var F=L._locatorBuckets,z=F.length,V=0;z>V;++V){var k=F[V];k.locator===x&&(R+=k.count)}var U;i.mode===T.SCENE3D?U=L._boundingVolumeWC:i.mode===T.COLUMBUS_VIEW?U=L._boundingVolume2D:i.mode===T.SCENE2D?a(L._boundingVolume2D)&&(U=e.clone(L._boundingVolume2D,Y),U.center.x=0):a(L._boundingVolumeWC)&&a(L._boundingVolume2D)&&(U=e.union(L._boundingVolumeWC,L._boundingVolume2D,Y)),h?(h=!1,e.clone(U,j)):e.union(U,j,j)}a(w)&&R>0&&(c>=u?(b=new g({owner:t}),n.push(b)):b=n[c],++c,b.boundingVolume=e.clone(j,b.boundingVolume),b.modelMatrix=s,b.shaderProgram=A,b.vertexArray=v.va,b.renderState=S.isTranslucent()?t._translucentRS:t._opaqueRS,b.pass=S.isTranslucent()?E.TRANSLUCENT:E.OPAQUE,b.debugShowBoundingVolume=l?m:!1,b.uniformMap=S._uniforms,b.count=R,b.offset=P,h=!0,o.push(b)),w=void 0}n.length=c}function P(e){for(var t=e._buffersUsage,r=!1,i=e._propertiesChanged,n=0;G-2>n;++n){var o=t[n];i[n]?o.bufferUsage!==f.STREAM_DRAW?(r=!0,o.bufferUsage=f.STREAM_DRAW,o.frameCount=100):o.frameCount=100:o.bufferUsage!==f.STATIC_DRAW&&(0===o.frameCount?(r=!0,o.bufferUsage=f.STATIC_DRAW):o.frameCount--)}return r}function A(e,t,r){e._createVertexArray=!1,O(e),L(e),D(e);var i,o,s=[[]],l=s[0],u=[0],c=0,d=[[]],p=0,v=e._polylineBuckets;for(i in v)v.hasOwnProperty(i)&&(o=v[i],o.updateShader(t),p+=o.lengthOfPositions);if(p>0){var g,_=e._mode,y=new Float32Array(3*6*p),C=new Uint8Array(4*p),w=new Float32Array(4*p),S=0,E=0,b=0;for(i in v)if(v.hasOwnProperty(i)){o=v[i],o.write(y,C,w,S,E,b,t,r),_===T.MORPHING&&(a(g)||(g=new Float32Array(3*6*p)),o.writeForMorph(g,S));var x=o.lengthOfPositions;S+=3*6*x,E+=4*x,b+=4*x,c=o.updateIndices(s,u,d,c)}var P=e._buffersUsage[k].bufferUsage,A=e._buffersUsage[z].bufferUsage,M=e._buffersUsage[V].bufferUsage,I=A===f.STREAM_DRAW||M===f.STREAM_DRAW?f.STREAM_DRAW:f.STATIC_DRAW;e._positionBuffer=t.createVertexBuffer(y,P);var R;a(g)&&(R=t.createVertexBuffer(g,P)),e._pickColorBuffer=t.createVertexBuffer(C,f.STATIC_DRAW),e._texCoordExpandWidthAndShowBuffer=t.createVertexBuffer(w,I);for(var N=4*Uint8Array.BYTES_PER_ELEMENT,B=3*Float32Array.BYTES_PER_ELEMENT,F=4*Float32Array.BYTES_PER_ELEMENT,U=0,W=s.length,G=0;W>G;++G)if(l=s[G],l.length>0){var q=new Uint16Array(l),j=t.createIndexBuffer(q,f.STATIC_DRAW,h.UNSIGNED_SHORT);U+=u[G];var Y,Z,Q,J,K=6*(G*B*m.SIXTY_FOUR_KILOBYTES-U*B),$=B+K,et=B+$,tt=B+et,rt=B+tt,it=B+rt,nt=G*N*m.SIXTY_FOUR_KILOBYTES-U*N,ot=G*F*m.SIXTY_FOUR_KILOBYTES-U*F,at=[{index:H.position3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:K,strideInBytes:6*B},{index:H.position3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:$,strideInBytes:6*B},{index:H.position2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:K,strideInBytes:6*B},{index:H.position2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:$,strideInBytes:6*B},{index:H.prevPosition3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:et,strideInBytes:6*B},{index:H.prevPosition3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:tt,strideInBytes:6*B},{index:H.prevPosition2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:et,strideInBytes:6*B},{index:H.prevPosition2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:tt,strideInBytes:6*B},{index:H.nextPosition3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:rt,strideInBytes:6*B},{index:H.nextPosition3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:it,strideInBytes:6*B},{index:H.nextPosition2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:rt,strideInBytes:6*B},{index:H.nextPosition2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:it,strideInBytes:6*B},{index:H.texCoordExpandWidthAndShow,componentsPerAttribute:4,componentDatatype:n.FLOAT,vertexBuffer:e._texCoordExpandWidthAndShowBuffer,offsetInBytes:ot},{index:H.pickColor,componentsPerAttribute:4,componentDatatype:n.UNSIGNED_BYTE,vertexBuffer:e._pickColorBuffer,offsetInBytes:nt,normalize:!0}];
_===T.SCENE3D?(Y=e._positionBuffer,Z="vertexBuffer",Q=X,J="value"):_===T.SCENE2D||_===T.COLUMBUS_VIEW?(Y=X,Z="value",Q=e._positionBuffer,J="vertexBuffer"):(Y=R,Z="vertexBuffer",Q=e._positionBuffer,J="vertexBuffer"),at[0][Z]=Y,at[1][Z]=Y,at[2][J]=Q,at[3][J]=Q,at[4][Z]=Y,at[5][Z]=Y,at[6][J]=Q,at[7][J]=Q,at[8][Z]=Y,at[9][Z]=Y,at[10][J]=Q,at[11][J]=Q;var st=t.createVertexArray(at,j);e._vertexArrays.push({va:st,buckets:d[G]})}}}function M(e){var t=S._uniformList[e.type],r=t.length;Z.length=2*r;for(var i=0,n=0;r>n;++n){var o=t[n];Z[i]=o,Z[i+1]=e._uniforms[o](),i+=2}return e.type+":"+JSON.stringify(Z)}function D(e){for(var t=e._mode,r=e._modelMatrix,i=e._polylineBuckets={},n=e._polylines,o=n.length,s=0;o>s;++s){var l=n[s];if(l.positions.length>1){l.update();var u=l.material,c=i[u.type];a(c)||(c=i[u.type]=new Q(u,t,r)),c.addPolyline(l)}}}function I(e,t){var r=t.mode;e._mode===r&&p.equals(e._modelMatrix,e.modelMatrix)||(e._mode=r,e._modelMatrix=p.clone(e.modelMatrix),e._createVertexArray=!0)}function R(e){if(e._polylinesRemoved){e._polylinesRemoved=!1;for(var t=[],r=e._polylines.length,i=0,n=0;r>i;++i){var o=e._polylines[i];a(o)&&(o._index=n++,t.push(o))}e._polylines=t}}function O(e){for(var t=e._polylines,r=t.length,i=0;r>i;++i)if(a(t[i])){var n=t[i]._bucket;a(n)&&(n.shaderProgram=n.shaderProgram&&n.shaderProgram.destroy())}}function L(e){for(var t=e._vertexArrays.length,r=0;t>r;++r)e._vertexArrays[r].va.destroy();e._vertexArrays.length=0}function N(e){for(var t=e._polylines,r=t.length,i=0;r>i;++i)a(t[i])&&t[i]._destroy()}function B(e,t,r){this.count=e,this.offset=t,this.bucket=r}function F(e){return t.dot(t.UNIT_X,e._boundingVolume.center)<0||e._boundingVolume.intersect(r.UNIT_Y)===d.INTERSECTING}var z=b.SHOW_INDEX,V=b.WIDTH_INDEX,k=b.POSITION_INDEX,U=b.MATERIAL_INDEX,W=b.POSITION_SIZE_INDEX,G=b.NUMBER_OF_PROPERTIES,H={texCoordExpandWidthAndShow:0,position3DHigh:1,position3DLow:2,position2DHigh:3,position2DLow:4,prevPosition3DHigh:5,prevPosition3DLow:6,prevPosition2DHigh:7,prevPosition2DLow:8,nextPosition3DHigh:9,nextPosition3DLow:10,nextPosition2DHigh:11,nextPosition2DLow:12,pickColor:13},q=function(e){e=o(e,o.EMPTY_OBJECT),this.modelMatrix=p.clone(o(e.modelMatrix,p.IDENTITY)),this._modelMatrix=p.clone(p.IDENTITY),this.debugShowBoundingVolume=o(e.debugShowBoundingVolume,!1),this._opaqueRS=void 0,this._translucentRS=void 0,this._colorCommands=[],this._pickCommands=[],this._polylinesUpdated=!1,this._polylinesRemoved=!1,this._createVertexArray=!1,this._propertiesChanged=new Uint32Array(G),this._polylines=[],this._polylineBuckets={},this._buffersUsage=[{bufferUsage:f.STATIC_DRAW,frameCount:0},{bufferUsage:f.STATIC_DRAW,frameCount:0},{bufferUsage:f.STATIC_DRAW,frameCount:0}],this._mode=void 0,this._polylinesToUpdate=[],this._vertexArrays=[],this._positionBuffer=void 0,this._pickColorBuffer=void 0,this._texCoordExpandWidthAndShowBuffer=void 0};s(q.prototype,{length:{get:function(){return R(this),this._polylines.length}}}),q.prototype.add=function(e){var t=new b(e,this);return t._index=this._polylines.length,this._polylines.push(t),this._createVertexArray=!0,t},q.prototype.remove=function(e){if(this.contains(e)){if(this._polylines[e._index]=void 0,this._polylinesRemoved=!0,this._createVertexArray=!0,a(e._bucket)){var t=e._bucket;t.shaderProgram=t.shaderProgram&&t.shaderProgram.destroy(),t.pickShaderProgram=t.pickShaderProgram&&t.pickShaderProgram.destroy()}return e._destroy(),!0}return!1},q.prototype.removeAll=function(){O(this),N(this),this._polylineBuckets={},this._polylinesRemoved=!1,this._polylines.length=0,this._polylinesToUpdate.length=0,this._createVertexArray=!0},q.prototype.contains=function(e){return a(e)&&e._polylineCollection===this},q.prototype.get=function(e){return R(this),this._polylines[e]},q.prototype.update=function(e,t,r){if(R(this),0!==this._polylines.length){I(this,t);var i,n=t.mapProjection,o=this._propertiesChanged;if(this._createVertexArray||P(this))A(this,e,n);else if(this._polylinesUpdated){var s=this._polylinesToUpdate;if(this._mode!==T.SCENE3D)for(var l=s.length,u=0;l>u;++u)i=s[u],i.update();if(o[W]||o[U])A(this,e,n);else for(var c=s.length,h=this._polylineBuckets,d=0;c>d;++d){i=s[d],o=i._propertiesChanged;var m=i._bucket,f=0;for(var v in h)if(h.hasOwnProperty(v)){if(h[v]===m){(o[k]||o[z]||o[V])&&m.writeUpdate(f,i,this._positionBuffer,this._texCoordExpandWidthAndShowBuffer,n);break}f+=h[v].lengthOfPositions}i._clean()}s.length=0,this._polylinesUpdated=!1}o=this._propertiesChanged;for(var g=0;G>g;++g)o[g]=0;var _=p.IDENTITY;t.mode===T.SCENE3D&&(_=this.modelMatrix);var y=t.passes,C=0!==t.morphTime;if(a(this._opaqueRS)&&this._opaqueRS.depthTest.enabled===C||(this._opaqueRS=e.createRenderState({depthMask:C,depthTest:{enabled:C}})),a(this._translucentRS)&&this._translucentRS.depthTest.enabled===C||(this._translucentRS=e.createRenderState({blending:w.ALPHA_BLEND,depthMask:!C,depthTest:{enabled:C}})),y.render){var S=this._colorCommands;x(this,e,t,S,r,_,!0)}if(y.pick){var E=this._pickCommands;x(this,e,t,E,r,_,!1)}}};var j=new e,Y=new e;q.prototype.isDestroyed=function(){return!1},q.prototype.destroy=function(){return L(this),O(this),N(this),l(this)};var X=[0,0,0],Z=[];q.prototype._updatePolyline=function(e,t){this._polylinesUpdated=!0,this._polylinesToUpdate.push(e),++this._propertiesChanged[t]};var Q=function(e,t,r){this.polylines=[],this.lengthOfPositions=0,this.material=e,this.shaderProgram=void 0,this.pickShaderProgram=void 0,this.mode=t,this.modelMatrix=r};Q.prototype.addPolyline=function(e){var t=this.polylines;t.push(e),e._actualLength=this.getPolylinePositionsLength(e),this.lengthOfPositions+=e._actualLength,e._bucket=this},Q.prototype.updateShader=function(e){if(!a(this.shaderProgram)){var t=v({sources:[_,C]}),r=v({sources:[this.material.shaderSource,y]}),i=v({sources:[r],pickColorQualifier:"varying"});this.shaderProgram=e.createShaderProgram(t,r,H),this.pickShaderProgram=e.createShaderProgram(t,i,H)}},Q.prototype.getPolylinePositionsLength=function(e){var t;if(this.mode===T.SCENE3D||!F(e))return t=e.positions.length,4*t-4;var r=0,i=e._segments.lengths;t=i.length;for(var n=0;t>n;++n)r+=4*i[n]-4;return r};var J=new t,K=new t,$=new t,et=new t;Q.prototype.write=function(e,r,n,o,a,s,l,u){for(var h=this.mode,d=this.polylines,m=d.length,p=0;m>p;++p)for(var f,v=d[p],g=v.width,_=v.show&&g>0,y=this.getSegments(v,u),C=y.positions,w=y.lengths,S=C.length,E=v.getPickId(l).color,b=0,x=0,P=0;S>P;++P){0===P?v._loop?f=C[S-2]:(f=et,t.subtract(C[0],C[1],f),t.add(C[0],f,f)):f=C[P-1],K.x=f.x,K.y=f.y,K.z=h!==T.SCENE2D?f.z:0,f=C[P],J.x=f.x,J.y=f.y,J.z=h!==T.SCENE2D?f.z:0,P===S-1?v._loop?f=C[1]:(f=et,t.subtract(C[S-1],C[S-2],f),t.add(C[S-1],f,f)):f=C[P+1],$.x=f.x,$.y=f.y,$.z=h!==T.SCENE2D?f.z:0;var A=w[b];P===x+A&&(x+=A,++b);for(var M=0===P-x,D=P===x+w[b]-1,I=M?2:0,R=D?2:4,O=I;R>O;++O){c.writeElements(J,e,o),c.writeElements(K,e,o+6),c.writeElements($,e,o+12),r[a]=i.floatToByte(E.red),r[a+1]=i.floatToByte(E.green),r[a+2]=i.floatToByte(E.blue),r[a+3]=i.floatToByte(E.alpha);var L=0>O-2?-1:1;n[s]=P/(S-1),n[s+1]=2*(O%2)-1,n[s+2]=L*g,n[s+3]=_,o+=18,a+=4,s+=4}}};var tt=new t,rt=new t,it=new t,nt=new t;Q.prototype.writeForMorph=function(e,r){for(var i=this.modelMatrix,n=this.polylines,o=n.length,a=0;o>a;++a)for(var s=n[a],l=s._segments.positions,u=s._segments.lengths,h=l.length,d=0,m=0,f=0;h>f;++f){var v;0===f?s._loop?v=l[h-2]:(v=nt,t.subtract(l[0],l[1],v),t.add(l[0],v,v)):v=l[f-1],v=p.multiplyByPoint(i,v,rt);var g,_=p.multiplyByPoint(i,l[f],tt);f===h-1?s._loop?g=l[1]:(g=nt,t.subtract(l[h-1],l[h-2],g),t.add(l[h-1],g,g)):g=l[f+1],g=p.multiplyByPoint(i,g,it);var y=u[d];f===m+y&&(m+=y,++d);for(var C=0===f-m,w=f===m+u[d]-1,S=C?2:0,E=w?2:4,b=S;E>b;++b)c.writeElements(_,e,r),c.writeElements(v,e,r+6),c.writeElements(g,e,r+12),r+=18}};var ot=new Array(1);Q.prototype.updateIndices=function(e,t,r,i){var n=r.length-1,o=new B(0,i,this);r[n].push(o);var a=0,s=e[e.length-1],l=0;s.length>0&&(l=s[s.length-1]+1);for(var u=this.polylines,c=u.length,h=0;c>h;++h){var d=u[h];d._locatorBuckets=[];var p;if(this.mode===T.SCENE3D){p=ot;var f=d.positions.length;if(!(f>0))continue;p[0]=f}else p=d._segments.lengths;var v=p.length;if(v>0){for(var g=0,_=0;v>_;++_)for(var y=p[_]-1,C=0;y>C;++C)l+4>=m.SIXTY_FOUR_KILOBYTES-1&&(d._locatorBuckets.push({locator:o,count:g}),g=0,t.push(4),s=[],e.push(s),l=0,o.count=a,a=0,i=0,o=new B(0,0,this),r[++n]=[o]),s.push(l,l+2,l+1),s.push(l+1,l+2,l+3),g+=6,a+=6,i+=6,l+=4;d._locatorBuckets.push({locator:o,count:g}),l+4>=m.SIXTY_FOUR_KILOBYTES-1&&(t.push(0),s=[],e.push(s),l=0,o.count=a,i=0,a=0,o=new B(0,0,this),r[++n]=[o])}d._clean()}return o.count=a,i},Q.prototype.getPolylineStartIndex=function(e){for(var t=this.polylines,r=0,i=t.length,n=0;i>n;++n){var o=t[n];if(o===e)break;r+=o._actualLength}return r};var at={positions:void 0,lengths:void 0},st=new Array(1),lt=new t;Q.prototype.getSegments=function(r,i){var n=r.positions;if(this.mode===T.SCENE3D)return st[0]=n.length,at.positions=n,at.lengths=st,at;F(r)&&(n=r._segments.positions);for(var o,a=i.ellipsoid,s=[],l=this.modelMatrix,u=n.length,c=lt,h=0;u>h;++h)o=n[h],c=p.multiplyByPoint(l,o,c),s.push(i.project(a.cartesianToCartographic(c)));if(s.length>0){r._boundingVolume2D=e.fromPoints(s,r._boundingVolume2D);var d=r._boundingVolume2D.center;r._boundingVolume2D.center=new t(d.z,d.x,d.y)}return at.positions=s,at.lengths=r._segments.lengths,at};var ut,ct;return Q.prototype.writeUpdate=function(e,r,i,n,o){var s=this.mode,l=r._actualLength;if(l){e+=this.getPolylineStartIndex(r);var u=ut,h=ct,d=3*6*l;!a(u)||u.length<d?(u=ut=new Float32Array(d),h=ct=new Float32Array(4*l)):u.length>d&&(u=new Float32Array(u.buffer,0,d),h=new Float32Array(h.buffer,0,4*l));var m,p=0,f=0,v=this.getSegments(r,o),g=v.positions,_=v.lengths,y=0,C=0,w=r.width,S=r.show&&w>0;l=g.length;for(var E=0;l>E;++E){0===E?r._loop?m=g[l-2]:(m=et,t.subtract(g[0],g[1],m),t.add(g[0],m,m)):m=g[E-1],K.x=m.x,K.y=m.y,K.z=s!==T.SCENE2D?m.z:0,m=g[E],J.x=m.x,J.y=m.y,J.z=s!==T.SCENE2D?m.z:0,E===l-1?r._loop?m=g[1]:(m=et,t.subtract(g[l-1],g[l-2],m),t.add(g[l-1],m,m)):m=g[E+1],$.x=m.x,$.y=m.y,$.z=s!==T.SCENE2D?m.z:0;var b=_[y];E===C+b&&(C+=b,++y);for(var x=0===E-C,P=E===C+_[y]-1,A=x?2:0,M=P?2:4,D=A;M>D;++D){c.writeElements(J,u,p),c.writeElements(K,u,p+6),c.writeElements($,u,p+12);var I=0>D-2?-1:1;h[f]=E/(l-1),h[f+1]=2*(D%2)-1,h[f+2]=I*w,h[f+3]=S,p+=18,f+=4}}i.copyFromArrayView(u,18*Float32Array.BYTES_PER_ELEMENT*e),n.copyFromArrayView(h,4*Float32Array.BYTES_PER_ELEMENT*e)}},q}),r("DataSources/PathVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/JulianDate","../Core/Matrix3","../Core/Matrix4","../Core/ReferenceFrame","../Core/TimeInterval","../Core/Transforms","../Scene/PolylineCollection","../Scene/SceneMode","./CompositePositionProperty","./ConstantPositionProperty","./MaterialProperty","./Property","./ReferenceProperty","./SampledPositionProperty","./TimeIntervalCollectionPositionProperty"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e,t,i,n,a,s,l,u){var c,h=e._property._times,d=l;c=e.getValueInReferenceFrame(t,a,u[d]),r(c)&&(u[d++]=c);for(var m,p,f,v=!r(n)||o.lessThanOrEquals(n,t)||o.greaterThanOrEquals(n,i),g=0,_=h.length,y=h[g],C=i,w=!1;_>g;){if(!v&&o.greaterThanOrEquals(y,n)&&(c=e.getValueInReferenceFrame(n,a,u[d]),r(c)&&(u[d++]=c),v=!0),o.greaterThan(y,t)&&o.lessThan(y,C)&&!y.equals(n)&&(c=e.getValueInReferenceFrame(y,a,u[d]),r(c)&&(u[d++]=c)),_-1>g){if(s>0&&!w){var S=h[g+1],E=o.secondsDifference(S,y);w=E>s,w&&(m=Math.ceil(E/s),p=0,f=E/Math.max(m,2),m=Math.max(m-1,1))}if(w&&m>p){y=o.addSeconds(y,f,new o),p++;continue}}w=!1,g++,y=h[g]}return c=e.getValueInReferenceFrame(i,a,u[d]),r(c)&&(u[d++]=c),d}function w(e,t,i,n,a,s,l,u){for(var c,h=0,d=l,m=t,p=Math.max(s,60),f=!r(n)||o.lessThanOrEquals(n,t)||o.greaterThanOrEquals(n,i);o.lessThan(m,i);)!f&&o.greaterThanOrEquals(m,n)&&(f=!0,c=e.getValueInReferenceFrame(n,a,u[d]),r(c)&&(u[d]=c,d++)),c=e.getValueInReferenceFrame(m,a,u[d]),r(c)&&(u[d]=c,d++),h++,m=o.addSeconds(t,p*h,new o);return c=e.getValueInReferenceFrame(i,a,u[d]),r(c)&&(u[d]=c,d++),d}function S(e,t,i,n,a,s,l,c){D.start=t,D.stop=i;for(var h=l,d=e.intervals,m=0;m<d.length;m++){var p=d.get(m);if(!u.intersect(p,D,A).isEmpty){var f=p.start;p.isStartIncluded||(f=p.isStopIncluded?p.stop:o.addSeconds(p.start,o.secondsDifference(p.stop,p.start)/2,new o));var v=e.getValueInReferenceFrame(f,a,c[h]);r(v)&&(c[h]=v,h++)}}return h}function E(e,t,i,n,o,a,s,l){var u=e.getValueInReferenceFrame(t,o,l[s]);return r(u)&&(l[s++]=u),s}function b(e,t,r,i,n,a,s,l){M.start=t,M.stop=r;for(var c=s,h=e.intervals,d=0;d<h.length;d++){var f=h.get(d);if(!u.intersect(f,M,A).isEmpty){var v=f.start,T=f.stop,x=t;o.greaterThan(v,x)&&(x=v);var P=r;o.lessThan(T,P)&&(P=T);var D=f.data;D instanceof g&&(D=D.resolvedProperty),c=D instanceof _?C(D,x,P,i,n,a,c,l):D instanceof m?b(D,x,P,i,n,a,c,l):D instanceof y?S(D,x,P,i,n,a,c,l):D instanceof p?E(D,x,P,i,n,a,c,l):w(D,x,P,i,n,a,c,l)}}return c}function T(e,t,i,n,o,a,s){r(s)||(s=[]),e instanceof g&&(e=e.resolvedProperty);var l=0;return l=e instanceof _?C(e,t,i,n,o,a,0,s):e instanceof m?b(e,t,i,n,o,a,0,s):e instanceof y?S(e,t,i,n,o,a,0,s):e instanceof p?E(e,t,i,n,o,a,0,s):w(e,t,i,n,o,a,0,s),s.length=l,s}var x=60,P=1,A=new u,M=new u,D=new u,I=new a,R=function(e,t){this._unusedIndexes=[],this._polylineCollection=new h,this._scene=e,this._referenceFrame=t,e.primitives.add(this._polylineCollection)};R.prototype.update=function(e){if(this._referenceFrame===l.INERTIAL){var i=c.computeIcrfToFixedMatrix(e,I);r(i)||(i=c.computeTemeToPseudoFixedMatrix(e,I)),s.fromRotationTranslation(i,t.ZERO,this._polylineCollection.modelMatrix)}},R.prototype.updateObject=function(e,t){var i=t._path;if(r(i)){var n=t._position;if(r(n)){var a,s,l,u=i._show,c=t._pathVisualizerIndex,h=!r(u)||u.getValue(e);if(h){var d=v.getValueOrUndefined(i._leadTime,e),m=v.getValueOrUndefined(i._trailTime,e),p=t._availability,g=r(p),_=r(d),y=r(m);if(h=g||_&&y){if(y&&(s=o.addSeconds(e,-m,new o)),_&&(l=o.addSeconds(e,d,new o)),g){var C=p.start,w=p.stop;(!y||o.greaterThan(C,s))&&(s=C),(!_||o.lessThan(w,l))&&(l=w)}h=o.lessThan(s,l)}}if(!h)return r(c)&&(a=this._polylineCollection.get(c),a.show=!1,t._pathVisualizerIndex=void 0,this._unusedIndexes.push(c)),void 0;if(r(c))a=this._polylineCollection.get(c);else{var S=this._unusedIndexes,E=S.length;E>0?(c=S.pop(),a=this._polylineCollection.get(c)):(c=this._polylineCollection.length,a=this._polylineCollection.add()),t._pathVisualizerIndex=c,a.id=t}var b=v.getValueOrDefault(i._resolution,e,x);a.show=!0,a.positions=T(n,s,l,e,this._referenceFrame,b,a.positions),a.material=f.getValue(e,i._material,a.material),a.width=v.getValueOrDefault(i._width,e,P)}}},R.prototype.removeObject=function(e){var t=e._pathVisualizerIndex;if(r(t)){var i=this._polylineCollection.get(t);i.show=!1,this._unusedIndexes.push(t),e._pathVisualizerIndex=void 0}},R.prototype.destroy=function(){return this._scene.primitives.remove(this._polylineCollection),i(this)};var O=function(t,r){r.collectionChanged.addEventListener(O.prototype._onCollectionChanged,this),this._scene=t,this._updaters={},this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return O.prototype.update=function(e){var t=this._updaters;for(var i in t)t.hasOwnProperty(i)&&t[i].update(e);for(var n=this._entitiesToVisualize.values,o=0,a=n.length;a>o;o++){var s=n[o],u=s._position,c=s._pathUpdater,h=l.FIXED;this._scene.mode===d.SCENE3D&&(h=u.referenceFrame);var m=this._updaters[h];c===m&&r(m)?m.updateObject(e,s):(r(c)&&c.removeObject(s),r(m)||(m=new R(this._scene,h),m.update(e),this._updaters[h]=m),s._pathUpdater=m,r(m)&&m.updateObject(e,s))}return!0},O.prototype.isDestroyed=function(){return!1},O.prototype.destroy=function(){var e=this._entityCollection;e.collectionChanged.removeEventListener(O.prototype._onCollectionChanged,this);var t=this._updaters;for(var r in t)t.hasOwnProperty(r)&&t[r].destroy();for(var n=e.entities,o=n.length,a=0;o>a;a++)n[a]._pathUpdater=void 0,n[a]._pathVisualizerIndex=void 0;return i(this)},O.prototype._onCollectionChanged=function(e,t,i,n){var o,a,s,l=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],r(a._path)&&r(a._position)&&l.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],r(a._path)&&r(a._position)?l.set(a.id,a):(s=a._pathUpdater,r(s)&&s.removeObject(a),l.remove(a.id));for(o=i.length-1;o>-1;o--)a=i[o],s=a._pathUpdater,r(s)&&s.removeObject(a),l.remove(a.id)},O._subSample=T,O}),r("DataSources/PointVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/BillboardCollection","./Property"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,r){var n=e._pointVisualizerIndex;if(i(n)){var o=t.get(n);o.show=!1,e._pointVisualizerIndex=void 0,r.push(n)}}function c(e,t,r,i,n){return function(){var o=document.createElement("canvas"),a=n+2*i;o.height=o.width=a;var s=o.getContext("2d");return s.clearRect(0,0,a,a),0!==i&&(s.beginPath(),s.arc(a/2,a/2,a/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle=r,s.fill(),1>e&&(s.save(),s.globalCompositeOperation="destination-out",s.beginPath(),s.arc(a/2,a/2,n/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle="black",s.fill(),s.restore())),s.beginPath(),s.arc(a/2,a/2,n/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle=t,s.fill(),o}}var h=r.WHITE,d=r.BLACK,m=0,p=1,f=new r,v=new t,g=new r,_=new a,y=function(t,r){var i=new s;t.primitives.add(i),r.collectionChanged.addEventListener(y.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._entityCollection=r,this._billboardCollection=i,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return y.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,n=this._billboardCollection,o=this._unusedIndexes,a=0,s=t.length;s>a;a++){var y,C=t[a],w=C._point,S=C._pointVisualizerIndex,E=C.isAvailable(e)&&l.getValueOrDefault(w._show,e,!0);if(E&&(v=l.getValueOrUndefined(C._position,e,v),E=i(v)),E){var b=!1;if(i(S))y=n.get(S);else{var T=o.length;T>0?(S=o.pop(),y=n.get(S)):(S=n.length,y=n.add()),C._pointVisualizerIndex=S,y.id=C,y._visualizerColor=r.clone(r.WHITE,y._visualizerColor),y._visualizerOutlineColor=r.clone(r.BLACK,y._visualizerOutlineColor),y._visualizerOutlineWidth=0,y._visualizerPixelSize=1,b=!0}y.show=!0,y.position=v,y.scaleByDistance=l.getValueOrUndefined(w._scaleByDistance,e,_);var x=l.getValueOrDefault(w._color,e,h,f),P=l.getValueOrDefault(w._outlineColor,e,d,g),A=l.getValueOrDefault(w._outlineWidth,e,m),M=l.getValueOrDefault(w._pixelSize,e,p);if(b=b||A!==y._visualizerOutlineWidth||M!==y._visualizerPixelSize||!r.equals(x,y._visualizerColor)||!r.equals(P,y._visualizerOutlineColor)){y._visualizerColor=r.clone(x,y._visualizerColor),y._visualizerOutlineColor=r.clone(P,y._visualizerOutlineColor),y._visualizerPixelSize=M,y._visualizerOutlineWidth=A;var D=x.alpha,I=x.toCssColorString(),R=P.toCssColorString(),O=A,L=JSON.stringify([I,M,R,O]);y.setImage(L,c(D,I,R,O,M))}}else u(C,n,o)}return!0},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){for(var e=this._entitiesToVisualize.values,t=e.length-1;t>-1;t--)e[t]._pointVisualizerIndex=void 0;return this._entityCollection.collectionChanged.removeEventListener(y.prototype._onCollectionChanged,this),this._scene.primitives.remove(this._billboardCollection),n(this)},y.prototype._onCollectionChanged=function(e,t,r,n){var o,a,s=this._billboardCollection,l=this._unusedIndexes,c=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],i(a._point)&&i(a._position)&&c.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],i(a._point)&&i(a._position)?c.set(a.id,a):(u(a,s,l),c.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],u(a,s,l),c.remove(a.id)},y}),r("DataSources/PolygonGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/PolygonGeometry","../Core/PolygonOutlineGeometry","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.polygonHierarchy={positions:void 0},this.perPositionHeight=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"polygon",e.polygon,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new d(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new c(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new h(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"polygon"===t){var n=this._entity.polygon;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.positions,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.height,_=n.extrudedHeight,T=n.granularity,x=n.stRotation,P=n.perPositionHeight;if(this._isClosed=i(_),this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)){var A=this._options;A.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,A.polygonHierarchy.positions=c.getValue(u.MINIMUM_VALUE,A.polygonHierarchy.positions),A.height=i(g)?g.getValue(u.MINIMUM_VALUE):void 0,A.extrudedHeight=i(_)?_.getValue(u.MINIMUM_VALUE):void 0,A.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,A.stRotation=i(x)?x.getValue(u.MINIMUM_VALUE):void 0,A.perPositionHeight=i(P)?P.getValue(u.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.polygon,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,d=a.positions,v=a.perPositionHeight,g=a.height,y=a.extrudedHeight,C=a.granularity,w=a.stRotation;if(u.polygonHierarchy.positions=d.getValue(r,u.polygonHierarchy.positions),u.height=i(g)?g.getValue(r,u):void 0,u.extrudedHeight=i(y)?y.getValue(r,u):void 0,u.granularity=i(C)?C.getValue(r):void 0,u.stRotation=i(w)?w.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){u.perPositionHeight=i(v)?v.getValue(r):void 0,this._material=_.getValue(r,n.fillMaterialProperty,this._material);var S=this._material,E=new m({material:S,translucent:S.isTranslucent(),closed:i(u.extrudedHeight)});u.vertexFormat=E.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new c(u)}),appearance:E,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var b=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new h(u),attributes:{color:t.fromColor(b)}}),appearance:new p({flat:!0,translucent:1!==b.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("Shaders/Appearances/PolylineColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec4 color;\nvarying vec4 v_color;\nvoid main()\n{\nfloat expandDir = expandAndWidth.x;\nfloat width = abs(expandAndWidth.y) + 0.5;\nbool usePrev = expandAndWidth.y < 0.0;\nvec4 p = czm_computePosition();\nvec4 prev = czm_computePrevPosition();\nvec4 next = czm_computeNextPosition();\nv_color = color;\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC;\n}\n"}),r("Scene/PolylineColorAppearance",["../Core/defaultValue","../Core/defineProperties","../Core/VertexFormat","../Renderer/createShaderSource","../Shaders/Appearances/PerInstanceFlatColorAppearanceFS","../Shaders/Appearances/PolylineColorAppearanceVS","../Shaders/PolylineCommon","./Appearance"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=e(t.translucent,!0),u=!1,c=i({sources:[a,o]}),h=n,d=l.VERTEX_FORMAT;this.material=void 0,this.translucent=r,this._vertexShaderSource=e(t.vertexShaderSource,c),this._fragmentShaderSource=e(t.fragmentShaderSource,h),this._renderState=e(t.renderState,s.getDefaultRenderState(r,u)),this._closed=u,this._vertexFormat=d};return t(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),l.VERTEX_FORMAT=r.POSITION_ONLY,l.prototype.getFragmentShaderSource=s.prototype.getFragmentShaderSource,l.prototype.isTranslucent=s.prototype.isTranslucent,l.prototype.getRenderState=s.prototype.getRenderState,l}),r("Shaders/Appearances/PolylineMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec2 st;\nvarying float v_width;\nvarying vec2 v_st;\nvoid main()\n{\nfloat expandDir = expandAndWidth.x;\nfloat width = abs(expandAndWidth.y) + 0.5;\nbool usePrev = expandAndWidth.y < 0.0;\nvec4 p = czm_computePosition();\nvec4 prev = czm_computePrevPosition();\nvec4 next = czm_computeNextPosition();\nv_width = width;\nv_st = st;\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC;\n}\n"}),r("Scene/PolylineMaterialAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/VertexFormat","../Renderer/createShaderSource","../Shaders/Appearances/PolylineMaterialAppearanceVS","../Shaders/PolylineCommon","../Shaders/PolylineFS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),h=!1,d=n({sources:[a,o]}),m=s,p=c.VERTEX_FORMAT;this.material=t(r.material)?r.material:u.fromType(u.ColorType),this.translucent=i,this._vertexShaderSource=e(r.vertexShaderSource,d),this._fragmentShaderSource=e(r.fragmentShaderSource,m),this._renderState=e(r.renderState,l.getDefaultRenderState(i,h)),this._closed=h,this._vertexFormat=p};return r(c.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),c.VERTEX_FORMAT=i.POSITION_AND_ST,c.prototype.getFragmentShaderSource=l.prototype.getFragmentShaderSource,c.prototype.isTranslucent=l.prototype.isTranslucent,c.prototype.getRenderState=l.prototype.getRenderState,c}),r("DataSources/PolylineGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/PolylineGeometry","../Core/PolylinePipeline","../Core/ShowGeometryInstanceAttribute","../Scene/PolylineCollection","../Scene/PolylineColorAppearance","../Scene/PolylineMaterialAppearance","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C){"use strict";var w={},S=g.fromColor(e.WHITE),E=new _(!0),b=function(e){this.id=e,this.vertexFormat=void 0,this.positions=void 0,this.width=void 0,this.followSurface=void 0,this.granularity=void 0},T=function(e,t){this._entity=e,this._scene=t,this._entitySubscription=e.definitionChanged.addEventListener(T.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._geometryChanged=new l,this._showProperty=void 0,this._materialProperty=void 0,this._options=new b(e),this._onEntityPropertyChanged(e,"polyline",e.polyline,void 0)
};n(T,{perInstanceColorAppearanceType:{value:f},materialAppearanceType:{value:v}}),n(T.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&C.isConstant(this._showProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{value:!1},hasConstantOutline:{value:!0},outlineColorProperty:{value:void 0},isDynamic:{get:function(){return this._dynamic}},isClosed:{value:!1},geometryChanged:{get:function(){return this._geometryChanged}}}),T.prototype.isOutlineVisible=function(){return!1},T.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)},T.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),l=new m(s&&this._showProperty.getValue(r));if(this._materialProperty instanceof g){var c=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(c=this._materialProperty.color.getValue(r)),n=t.fromColor(c),o={show:l,color:n}}else o={show:l};return new u({id:a,geometry:new h(this._options),attributes:o})},T.prototype.createOutlineGeometryInstance=function(){},T.prototype.isDestroyed=function(){return!1},T.prototype.destroy=function(){this._entitySubscription(),o(this)},T.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"polyline"===t){var n=this._entity.polyline;if(!i(n))return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.positions,a=n.show;if(i(a)&&a.isConstant&&!a.getValue(c.MINIMUM_VALUE)||!i(o))return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var s=r(n.material,S),l=s instanceof g;this._materialProperty=s,this._showProperty=r(a,E),this._fillEnabled=!0;var u=n.width,h=n.followSurface,d=n.granularity;if(o.isConstant&&C.isConstant(u)&&C.isConstant(h)&&C.isConstant(d)){var m=this._options,p=o.getValue(c.MINIMUM_VALUE,m.positions);if(!i(p)||p.length<2)return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;m.vertexFormat=l?f.VERTEX_FORMAT:v.VERTEX_FORMAT,m.positions=p,m.width=i(u)?u.getValue(c.MINIMUM_VALUE):void 0,m.followSurface=i(h)?h.getValue(c.MINIMUM_VALUE):void 0,m.granularity=i(d)?d.getValue(c.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},T.prototype.createDynamicUpdater=function(e){return new x(e,this)};var x=function(e,t){var r=t._scene.id,n=w[r];i(n)||(n=new p,w[r]=n,e.add(n));var o=n.add();o.id=t._entity,this._line=o,this._primitives=e,this._geometryUpdater=t,this._positions=[]};return x.prototype.update=function(e){var t=this._geometryUpdater,r=t._entity,i=r.polyline,n=this._line,o=r.isAvailable(e)&&C.getValueOrDefault(i._show,e,!0);if(!o)return n.show=!1,void 0;var a=i.positions,l=a.getValue(e,this._positions),u=C.getValueOrDefault(i._followSurface,e,!0);if(u){var c=C.getValueOrUndefined(i._granularity,e);l=d.generateCartesianArc({positions:l,granularity:c,height:d.extractHeights(l,s.WGS84)})}n.show=!0,n.positions=l,n.material=y.getValue(e,t.fillMaterialProperty,n.material),n.width=C.getValueOrDefault(i._width,e,1)},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){var e=this._geometryUpdater,t=e._scene.id,r=w[t];r.remove(this._line),0===r.length&&(this._primitives.remove(r),r.isDestroyed()||r.destroy(),delete w[t]),o(this)},T}),r("DataSources/RectangleGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/RectangleGeometry","../Core/RectangleOutlineGeometry","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.rectangle=void 0,this.closeBottom=void 0,this.closeTop=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0,this.rotation=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"rectangle",e.rectangle,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new d(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new c(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new h(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"rectangle"===t){var n=this._entity.rectangle;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.coordinates,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.height,_=n.extrudedHeight,T=n.granularity,x=n.stRotation,P=n.rotation,A=n.closeBottom,M=n.closeTop;if(this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)&&y.isConstant(A)&&y.isConstant(M)){var D=this._options;D.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,D.rectangle=c.getValue(u.MINIMUM_VALUE,D.rectangle),D.height=i(g)?g.getValue(u.MINIMUM_VALUE):void 0,D.extrudedHeight=i(_)?_.getValue(u.MINIMUM_VALUE):void 0,D.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,D.stRotation=i(x)?x.getValue(u.MINIMUM_VALUE):void 0,D.rotation=i(P)?P.getValue(u.MINIMUM_VALUE):void 0,D.closeBottom=i(A)?A.getValue(u.MINIMUM_VALUE):void 0,D.closeTop=i(M)?M.getValue(u.MINIMUM_VALUE):void 0,this._isClosed=i(_)&&i(D.closeTop)&&i(D.closeBottom)&&D.closeTop&&D.closeBottom,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.rectangle,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,d=a.coordinates,v=a.closeBottom,g=a.closeTop,y=a.height,C=a.extrudedHeight,w=a.granularity,S=a.stRotation,E=a.rotation;if(u.rectangle=d.getValue(r,u.rectangle),u.height=i(y)?y.getValue(r,u):void 0,u.extrudedHeight=i(C)?C.getValue(r,u):void 0,u.granularity=i(w)?w.getValue(r):void 0,u.stRotation=i(S)?S.getValue(r):void 0,u.rotation=i(E)?E.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){u.closeBottom=i(v)?v.getValue(r):void 0,u.closeTop=i(g)?g.getValue(r):void 0,this._material=_.getValue(r,n.fillMaterialProperty,this._material);var b=this._material,T=new m({material:b,translucent:b.isTranslucent(),closed:u.closeTop&&u.closeBottom});u.vertexFormat=T.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new c(u)}),appearance:T,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var x=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new h(u),attributes:{color:t.fromColor(x)}}),appearance:new p({flat:!0,translucent:1!==x.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/WallGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/ShowGeometryInstanceAttribute","../Core/WallGeometry","../Core/WallOutlineGeometry","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.positions=void 0,this.minimumHeights=void 0,this.maximumHeights=void 0,this.granularity=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"wall",e.wall,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return!1}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new c(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var d=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(d=this._materialProperty.color.getValue(r)),o=t.fromColor(d),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new h(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new d(this._options),attributes:{show:new c(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"wall"===t){var n=this._entity.wall;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.positions,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.minimumHeights,_=n.maximumHeights,T=n.granularity;if(this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)){var x=this._options;x.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,x.positions=c.getValue(u.MINIMUM_VALUE,x.positions),x.minimumHeights=i(g)?g.getValue(u.MINIMUM_VALUE,x.minimumHeights):void 0,x.maximumHeights=i(_)?_.getValue(u.MINIMUM_VALUE,x.maximumHeights):void 0,x.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.wall,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,c=a.positions,v=a.minimumHeights,g=a.maximumHeights,y=a.granularity;if(u.positions=c.getValue(r,u.positions),u.minimumHeights=i(v)?v.getValue(r,u.minimumHeights):void 0,u.maximumHeights=i(g)?g.getValue(r,u.maximumHeights):void 0,u.granularity=i(y)?y.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){this._material=_.getValue(r,n.fillMaterialProperty,this._material);var C=this._material,w=new m({material:C,translucent:C.isTranslucent(),closed:!1});u.vertexFormat=w.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new h(u)}),appearance:w,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var S=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new d(u),attributes:{color:t.fromColor(S)}}),appearance:new p({flat:!0,translucent:1!==S.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/DataSourceDisplay",["../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/EventHelper","./BillboardVisualizer","./EllipseGeometryUpdater","./EllipsoidGeometryUpdater","./GeometryVisualizer","./LabelVisualizer","./ModelVisualizer","./PathVisualizer","./PointVisualizer","./PolygonGeometryUpdater","./PolylineGeometryUpdater","./RectangleGeometryUpdater","./WallGeometryUpdater"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g=function(t){var r=t.scene,i=t.dataSourceCollection;this._eventHelper=new n,this._eventHelper.add(i.dataSourceAdded,this._onDataSourceAdded,this),this._eventHelper.add(i.dataSourceRemoved,this._onDataSourceRemoved,this),this._dataSourceCollection=i,this._scene=r,this._visualizersCallback=e(t.visualizersCallback,g.defaultVisualizersCallback);for(var o=0,a=i.length;a>o;o++)this._onDataSourceAdded(i,i.get(o))};return g.defaultVisualizersCallback=function(e,t){var r=t.entities;return[new o(e,r),new l(a,e,r),new l(s,e,r),new l(m,e,r),new l(p,e,r),new l(f,e,r),new l(v,e,r),new u(e,r),new c(e,r),new d(e,r),new h(e,r)]},g.prototype.getScene=function(){return this._scene},g.prototype.getDataSources=function(){return this._dataSourceCollection},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){this._eventHelper.removeAll();for(var e=this._dataSourceCollection,t=0,i=e.length;i>t;++t)this._onDataSourceRemoved(this._dataSourceCollection,e.get(t));return r(this)},g.prototype.update=function(e){var r,i,n,o,a=!0,s=this._dataSourceCollection,l=s.length;for(r=0;l>r;r++){var u=s.get(r);for(t(u.update)&&(a=u.update(e)&&a),n=u._visualizers,o=n.length,i=0;o>i;i++)a=n[i].update(e)&&a}return a},g.prototype._onDataSourceAdded=function(e,t){var r=this._visualizersCallback(this._scene,t);t._visualizers=r},g.prototype._onDataSourceRemoved=function(e,t){for(var r=t._visualizers,i=r.length,n=0;i>n;n++)r[n].destroy(),t._visualizers=void 0},g}),r("DataSources/DynamicGeometryUpdater",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.update=e.throwInstantiationError,t.prototype.isDestroyed=e.throwInstantiationError,t.prototype.destroy=e.throwInstantiationError,t}),r("DataSources/EntityView",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Ellipsoid","../Core/JulianDate","../Core/Math","../Core/Matrix3","../Core/Transforms","../Scene/SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t,i,n,o,h,E){var b=o.getValue(h,t._lastCartesian);if(r(b)){var T,x,P,A=!1;w=a.addSeconds(h,.001,w);var M=o.getValue(w,f);if(r(M)){var D,I=u.computeFixedToIcrfMatrix(h,d),R=u.computeFixedToIcrfMatrix(w,m);r(I)&&r(R)?D=l.transpose(I,p):(D=u.computeTemeToPseudoFixedMatrix(h,p),I=l.transpose(D,d),R=u.computeTemeToPseudoFixedMatrix(w,m),l.transpose(R,R));var O=l.multiplyByVector(I,b,y),L=l.multiplyByVector(R,M,C);e.subtract(O,L,_);var N=1e3*e.magnitude(_),B=3986004418e5,F=-B/(N*N-2*B/e.magnitude(O));0>F||F>S*E.maximumRadius?(T=v,e.normalize(b,T),e.negate(T,T),P=e.clone(e.UNIT_Z,g),x=e.cross(P,T,f),e.magnitude(x)>s.EPSILON7&&(e.normalize(T,T),e.normalize(x,x),P=e.cross(T,x,g),e.normalize(P,P),A=!0)):e.equalsEpsilon(b,M,s.EPSILON7)||(P=v,e.normalize(O,P),e.normalize(L,L),x=e.cross(P,L,g),e.equalsEpsilon(x,e.ZERO,s.EPSILON7)||(T=e.cross(x,P,f),l.multiplyByVector(D,T,T),l.multiplyByVector(D,x,x),l.multiplyByVector(D,P,P),e.normalize(T,T),e.normalize(x,x),e.normalize(P,P),A=!0))}if(A){var z=i.transform;z[0]=T.x,z[1]=T.y,z[2]=T.z,z[3]=0,z[4]=x.x,z[5]=x.y,z[6]=x.z,z[7]=0,z[8]=P.x,z[9]=P.y,z[10]=P.z,z[11]=0,z[12]=b.x,z[13]=b.y,z[14]=b.z,z[15]=0}else u.eastNorthUpToFixedFrame(b,E,i.transform)}n&&(t.scene.mode===c.SCENE2D?i.lookAt(t._offset2D,e.ZERO,t._up2D):i.lookAt(t._offset3D,e.ZERO,t._up3D))}var d=new l,m=new l,p=new l,f=new e,v=new e,g=new e,_=new e,y=new e,C=new e,w=new a,S=1.25,E=new e,b=function(r,i,n){this.entity=r,this.scene=i,this.ellipsoid=t(n,o.WGS84),this._lastEntity=void 0,this._mode=void 0,this._lastCartesian=new e,this._offset3D=new e,this._up3D=new e,this._offset2D=new e,this._up2D=new e};return i(b,{defaultOffset3D:{get:function(){return this._defaultOffset3D},set:function(t){this._defaultOffset3D=e.clone(t,new e),this._defaultUp3D=e.cross(this._defaultOffset3D,e.cross(e.UNIT_Z,this._defaultOffset3D,E),new e),e.normalize(this._defaultUp3D,this._defaultUp3D),this._defaultOffset2D=new e(0,0,e.magnitude(this._defaultOffset3D)),this._defaultUp2D=e.clone(e.UNIT_Y)}}}),b.defaultOffset3D=new e(-14e3,3500,3500),b.prototype.update=function(t){var i=this.scene,n=this.entity,o=this.ellipsoid,a=n.position,s=n!==this._lastEntity,l=i.mode!==this._mode&&i.mode!==c.MORPHING,u=this._offset3D,d=this._up3D,m=this._offset2D,p=this._up2D,f=i.camera;if(s){var v=n.viewFrom;if(r(v)&&r(v.getValue(t,u))){e.cross(e.UNIT_Z,u,d),e.cross(u,d,d),e.normalize(d,d);var g=e.magnitude(u);e.fromElements(0,0,g,m),e.clone(this._defaultUp2D,p)}else e.clone(b._defaultOffset2D,m),e.clone(b._defaultUp2D,p),e.clone(b._defaultOffset3D,u),e.clone(b._defaultUp3D,d)}else if(!l&&i.mode!==c.MORPHING)if(this._mode===c.SCENE2D){var _=Math.max(f.frustum.right-f.frustum.left,f.frustum.top-f.frustum.bottom);e.fromElements(0,0,_,m),e.clone(f.up,p)}else(this._mode===c.SCENE3D||this._mode===c.COLUMBUS_VIEW)&&(e.clone(f.position,u),e.clone(f.up,d));var y=s||l;this._lastEntity=n,this._mode=i.mode!==c.MORPHING?i.mode:this._mode,i.mode!==c.MORPHING&&h(this,i.camera,y,a,t,o)},b}),!function(){function e(e,t){function r(t){var r,i=e.arcs[0>t?~t:t],n=i[0];return e.transform?(r=[0,0],i.forEach(function(e){r[0]+=e[0],r[1]+=e[1]})):r=i[i.length-1],0>t?[r,n]:[n,r]}function i(e,t){for(var r in e){var i=e[r];delete t[i.start],delete i.start,delete i.end,i.forEach(function(e){n[0>e?~e:e]=1}),s.push(i)}}var n={},o={},a={},s=[],l=-1;return t.forEach(function(r,i){var n,o=e.arcs[0>r?~r:r];o.length<3&&!o[1][0]&&!o[1][1]&&(n=t[++l],t[l]=r,t[i]=n)}),t.forEach(function(e){var t,i,n=r(e),s=n[0],l=n[1];if(t=a[s])if(delete a[t.end],t.push(e),t.end=l,i=o[l]){delete o[i.start];var u=i===t?t:t.concat(i);o[u.start=t.start]=a[u.end=i.end]=u}else o[t.start]=a[t.end]=t;else if(t=o[l])if(delete o[t.start],t.unshift(e),t.start=s,i=a[s]){delete a[i.end];var c=i===t?t:i.concat(t);o[c.start=i.start]=a[c.end=t.end]=c}else o[t.start]=a[t.end]=t;else t=[e],o[t.start=s]=a[t.end=l]=t}),i(a,o),i(o,a),t.forEach(function(e){n[0>e?~e:e]||s.push([e])}),s}function t(t,r,i){function n(e){var t=0>e?~e:e;(c[t]||(c[t]=[])).push({i:e,g:u})}function o(e){e.forEach(n)}function a(e){e.forEach(o)}function s(e){"GeometryCollection"===e.type?e.geometries.forEach(s):e.type in h&&(u=e,h[e.type](e.arcs))}var l=[];if(arguments.length>1){var u,c=[],h={LineString:o,MultiLineString:a,Polygon:a,MultiPolygon:function(e){e.forEach(a)}};s(r),c.forEach(arguments.length<3?function(e){l.push(e[0].i)}:function(e){i(e[0].g,e[e.length-1].g)&&l.push(e[0].i)})}else for(var d=0,m=t.arcs.length;m>d;++d)l.push(d);return{type:"MultiLineString",arcs:e(t,l)}}function i(t,r){function i(e){e.forEach(function(t){t.forEach(function(t){(a[t=0>t?~t:t]||(a[t]=[])).push(e)})}),l.push(e)}function o(e){return d(s(t,{type:"Polygon",arcs:[e]}).coordinates[0])>0}var a={},l=[],u=[];return r.forEach(function(e){"Polygon"===e.type?i(e.arcs):"MultiPolygon"===e.type&&e.arcs.forEach(i)}),l.forEach(function(e){if(!e._){var t=[],r=[e];for(e._=1,u.push(t);e=r.pop();)t.push(e),e.forEach(function(e){e.forEach(function(e){a[0>e?~e:e].forEach(function(e){e._||(e._=1,r.push(e))})})})}}),l.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:u.map(function(r){var i=[];if(r.forEach(function(e){e.forEach(function(e){e.forEach(function(e){a[0>e?~e:e].length<2&&i.push(e)})})}),i=e(t,i),(n=i.length)>1)for(var s,l=o(r[0][0]),u=0;n>u;++u)if(l===o(i[u])){s=i[0],i[0]=i[u],i[u]=s;break}return i})}}function o(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return a(e,t)})}:a(e,t)}function a(e,t){var r={type:"Feature",id:t.id,properties:t.properties||{},geometry:s(e,t)};return null==t.id&&delete r.id,r}function s(e,t){function r(e,t){t.length&&t.pop();for(var r,i=c[0>e?~e:e],n=0,o=i.length;o>n;++n)t.push(r=i[n].slice()),u(r,n);0>e&&l(t,o)}function i(e){return e=e.slice(),u(e,0),e}function n(e){for(var t=[],i=0,n=e.length;n>i;++i)r(e[i],t);return t.length<2&&t.push(t[0].slice()),t}function o(e){for(var t=n(e);t.length<4;)t.push(t[0].slice());return t}function a(e){return e.map(o)}function s(e){var t=e.type;return"GeometryCollection"===t?{type:t,geometries:e.geometries.map(s)}:t in h?{type:t,coordinates:h[t](e)}:null}var u=v(e.transform),c=e.arcs,h={Point:function(e){return i(e.coordinates)},MultiPoint:function(e){return e.coordinates.map(i)},LineString:function(e){return n(e.arcs)},MultiLineString:function(e){return e.arcs.map(n)},Polygon:function(e){return a(e.arcs)},MultiPolygon:function(e){return e.arcs.map(a)}};return s(t)}function l(e,t){for(var r,i=e.length,n=i-t;n<--i;)r=e[n],e[n++]=e[i],e[i]=r}function u(e,t){for(var r=0,i=e.length;i>r;){var n=r+i>>>1;e[n]<t?r=n+1:i=n}return r}function c(e){function t(e,t){e.forEach(function(e){0>e&&(e=~e);var r=n[e];r?r.push(t):n[e]=[t]})}function r(e,r){e.forEach(function(e){t(e,r)})}function i(e,t){"GeometryCollection"===e.type?e.geometries.forEach(function(e){i(e,t)}):e.type in a&&a[e.type](e.arcs,t)}var n={},o=e.map(function(){return[]}),a={LineString:t,MultiLineString:r,Polygon:r,MultiPolygon:function(e,t){e.forEach(function(e){r(e,t)})}};e.forEach(i);for(var s in n)for(var l=n[s],c=l.length,h=0;c>h;++h)for(var d=h+1;c>d;++d){var m,p=l[h],f=l[d];(m=o[p])[s=u(m,f)]!==f&&m.splice(s,0,f),(m=o[f])[s=u(m,p)]!==p&&m.splice(s,0,p)}return o}function h(e,t){function r(e){a.remove(e),e[1][2]=t(e),a.push(e)}var i,n=v(e.transform),o=g(e.transform),a=f(),s=0;for(t||(t=m),e.arcs.forEach(function(e){var r=[];e.forEach(n);for(var o=1,s=e.length-1;s>o;++o)i=e.slice(o-1,o+2),i[1][2]=t(i),r.push(i),a.push(i);e[0][2]=e[s][2]=1/0;for(var o=0,s=r.length;s>o;++o)i=r[o],i.previous=r[o-1],i.next=r[o+1]});i=a.pop();){var l=i.previous,u=i.next;i[1][2]<s?i[1][2]=s:s=i[1][2],l&&(l.next=u,l[2]=i[2],r(l)),u&&(u.previous=l,u[0]=i[0],r(u))}return e.arcs.forEach(function(e){e.forEach(o)}),e}function d(e){for(var t,r=-1,i=e.length,n=e[i-1],o=0;++r<i;)t=n,n=e[r],o+=t[0]*n[1]-t[1]*n[0];return.5*o}function m(e){var t=e[0],r=e[1],i=e[2];return Math.abs((t[0]-i[0])*(r[1]-t[1])-(t[0]-r[0])*(i[1]-t[1]))}function p(e,t){return e[1][2]-t[1][2]}function f(){function e(e,t){for(;t>0;){var r=(t+1>>1)-1,n=i[r];if(p(e,n)>=0)break;i[n._=t]=n,i[e._=t=r]=e}}function t(e,t){for(;;){var r=t+1<<1,o=r-1,a=t,s=i[a];if(n>o&&p(i[o],s)<0&&(s=i[a=o]),n>r&&p(i[r],s)<0&&(s=i[a=r]),a===t)break;i[s._=t]=s,i[e._=t=a]=e}}var r={},i=[],n=0;return r.push=function(t){return e(i[t._=n]=t,n++),n},r.pop=function(){if(!(0>=n)){var e,r=i[0];return--n>0&&(e=i[n],t(i[e._=0]=e,0)),r}},r.remove=function(r){var o,a=r._;if(i[a]===r)return a!==--n&&(o=i[n],(p(o,r)<0?e:t)(i[o._=a]=o,a)),a},r}function v(e){if(!e)return _;var t,r,i=e.scale[0],n=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=r=0),e[0]=(t+=e[0])*i+o,e[1]=(r+=e[1])*n+a}}function g(e){if(!e)return _;var t,r,i=e.scale[0],n=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=r=0);var l=0|(e[0]-o)/i,u=0|(e[1]-a)/n;e[0]=l-t,e[1]=u-r,t=l,r=u}}function _(){}var y={version:"1.6.8",mesh:function(e){return s(e,t.apply(this,arguments))},meshArcs:t,merge:function(e){return s(e,i.apply(this,arguments))},mergeArcs:i,feature:o,neighbors:c,presimplify:h};"function"==typeof r&&r.amd?r("ThirdParty/topojson",y):"object"==typeof module&&module.exports?module.exports=y:this.topojson=y}(),r("DataSources/GeoJsonDataSource",["../Core/Cartesian3","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/getFilenameFromUri","../Core/loadJson","../Core/PinBuilder","../Core/RuntimeError","../Scene/VerticalOrigin","../ThirdParty/topojson","../ThirdParty/when","./BillboardGraphics","./ColorMaterialProperty","./ConstantPositionProperty","./ConstantProperty","./EntityCollection","./PolygonGraphics","./PolylineGraphics"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w){"use strict";function S(e,t){var r='<table class="cesium-infoBox-defaultTable"><tbody>';for(var i in e)if(e.hasOwnProperty(i)){if(i===t||-1!==Y.indexOf(i))continue;var o=e[i];n(o)&&(r+="object"==typeof o?"<tr><th>"+i+"</th><td>"+S(o)+"</td></tr>":"<tr><th>"+i+"</th><td>"+o+"</td></tr>")}return r+="</tbody></table>"}function E(e,t){var i=e.id;if(n(i)&&"Feature"===e.type){for(var o=2,a=i;n(t.getById(a));)a=i+"_"+o,o++;i=a}else i=r();var s=t.getOrCreateEntity(i),l=e.properties;if(n(l)){s.addProperty("properties"),s.properties=l;var u,c=l.title;if(n(c))s.name=c,u="title";else{var h=Number.MAX_VALUE;for(var d in l)if(l.hasOwnProperty(d)&&l[d]){var m=d.toLowerCase();if(h>1&&"title"===m){h=1,u=d;break}h>2&&"name"===m?(h=2,u=d):h>3&&/title/i.test(d)?(h=3,u=d):h>4&&/name/i.test(d)&&(h=4,u=d)}n(u)&&(s.name=l[u])}var p=l.description;n(p)||(p=S(l,u)),s.description=new _(p)}return s}function b(e,t){for(var r=new Array(e.length),i=0;i<e.length;i++)r[i]=t(e[i]);return r}function T(e,t,r,i){if(!n(t.geometry))throw new h("feature.geometry is required.");if(null===t.geometry)E(t,e._entityCollection);else{var o=t.geometry.type,a=Z[o];if(!n(a))throw new h("Unknown geometry type: "+o);a(e,t,t.geometry,i)}}function x(e,t,r,i){for(var n=t.features,o=0,a=n.length;a>o;o++)T(e,n[o],void 0,i)}function P(e,t,r,i){for(var o=r.geometries,a=0,s=o.length;s>a;a++){var l=o[a],u=l.type,c=Z[u];if(!n(c))throw new h("Unknown geometry type: "+u);c(e,t,l,i)}}function A(e,r,o,a){var s,l=t.ROYALBLUE,u=k.medium,c=r.properties;if(n(c)){var h=c["marker-color"];n(h)&&(l=t.fromCssColorString(h)),u=i(k[c["marker-size"]],u),s=c["marker-symbol"]}var m;m=n(s)?1===s.length?e._pinBuilder.fromText(s.toUpperCase(),l,u):e._pinBuilder.fromMakiIconId(s,l,u):e._pinBuilder.fromColor(l,u),e._promises.push(p(m,function(t){var i=new f;i.verticalOrigin=new _(d.BOTTOM),i.image=new _(t.toDataURL());var n=E(r,e._entityCollection);
n.billboard=i,n.position=new g(o(a))}))}function M(e,t,r,i){A(e,t,i,r.coordinates)}function D(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)A(e,t,i,n[o])}function I(e,r,i,o){var a=U,s=W,l=r.properties;if(n(l)){var u=l["stroke-width"];n(u)&&(s=new _(u));var c,h=l.stroke;n(h)&&(c=t.fromCssColorString(h));var d=l["stroke-opacity"];n(d)&&1!==d&&(n(c)||(c=a.color.clone()),c.alpha=d),n(c)&&(a=v.fromColor(c))}var m=new w;m.material=a,m.width=s,m.positions=new _(b(o,i));var p=E(r,e._entityCollection);p.polyline=m}function R(e,t,r,i){I(e,t,i,r.coordinates)}function O(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)I(e,t,i,n[o])}function L(e,r,i,o){var a=j,s=G,l=r.properties;if(n(l)){var u,c=l.stroke;n(c)&&(u=t.fromCssColorString(c));var h=l["stroke-opacity"];n(h)&&1!==h&&(n(u)||(u=q.clone()),u.alpha=h),n(u)&&(a=new _(u));var d,m=l.fill;n(m)&&(d=t.fromCssColorString(m),d.alpha=s.color.alpha),h=l["fill-opacity"],n(h)&&h!==s.color.alpha&&(n(d)||(d=s.color.clone()),d.alpha=h),n(d)&&(s=v.fromColor(d))}var p=new C;p.outline=H,p.outlineColor=a,p.material=s,p.positions=new _(b(o,i)),o.length>0&&o[0].length>2&&(p.perPositionHeight=new _(!0));var f=E(r,e._entityCollection);f.polygon=p}function N(e,t,r,i){L(e,t,i,r.coordinates[0])}function B(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)L(e,t,i,n[o][0])}function F(e,t,r,i){for(var n in r.objects)if(r.objects.hasOwnProperty(n)){var o=m.feature(r,r.objects[n]),a=X[o.type];a(e,o,o,i)}}function z(e,t){e._isLoading!==t&&(t?e._entityCollection.suspendEvents():e._entityCollection.resumeEvents(),e._isLoading=t,e._loading.raiseEvent(e,t))}function V(t){return e.fromDegrees(t[0],t[1],t[2])}var k={small:24,medium:48,large:64},U=v.fromColor(t.YELLOW),W=new _(2),G=v.fromColor(t.fromBytes(255,255,0,100)),H=new _(!0),q=t.BLACK,j=new _(q),Y=["title","description","marker-size","marker-symbol","marker-color","stroke","stroke-opacity","stroke-width","fill","fill-opacity"],X={Feature:T,FeatureCollection:x,GeometryCollection:P,LineString:R,MultiLineString:O,MultiPoint:D,MultiPolygon:B,Point:M,Polygon:N,Topology:F},Z={GeometryCollection:P,LineString:R,MultiLineString:O,MultiPoint:D,MultiPolygon:B,Point:M,Polygon:N,Topology:F},Q=function(e){this._name=e,this._changed=new s,this._error=new s,this._isLoading=!1,this._loading=new s,this._entityCollection=new y,this._promises=[],this._pinBuilder=new c};return Q.fromUrl=function(e){var t=new Q;return t.loadUrl(e),t},o(Q.prototype,{name:{get:function(){return this._name}},clock:{value:void 0,writable:!1},entities:{get:function(){return this._entityCollection}},isLoading:{get:function(){return this._isLoading}},changedEvent:{get:function(){return this._changed}},errorEvent:{get:function(){return this._error}},loadingEvent:{get:function(){return this._loading}}}),Q.prototype.loadUrl=function(e){z(this,!0);var t=this;return p(u(e),function(r){return t.load(r,e)}).otherwise(function(e){return z(t,!1),t._error.raiseEvent(t,e),p.reject(e)})},Q.prototype.load=function(e,t){var r;n(t)&&(r=l(t)),n(r)&&this._name!==r&&(this._name=r,this._changed.raiseEvent(this));var i=X[e.type];if(!n(i))throw new a("Unsupported GeoJSON object type: "+e.type);var o=V,s=e.crs;if(n(s)){if(null===s)throw new h("crs is null.");if(!n(s.properties))throw new h("crs.properties is undefined.");var u=s.properties;if("name"===s.type){if(o=Q.crsNames[u.name],!n(o))throw new h("Unknown crs name: "+u.name)}else if("link"===s.type){var c=Q.crsLinkHrefs[u.href];if(n(c)||(c=Q.crsLinkTypes[u.type]),!n(c))throw new h("Unable to resolve crs link: "+JSON.stringify(u));o=c(u)}else{if("EPSG"!==s.type)throw new h("Unknown crs type: "+s.type);if(o=Q.crsNames["EPSG:"+u.code],!n(o))throw new h("Unknown crs EPSG code: "+u.code)}}z(this,!0);var d=this;return p(o,function(t){d._entityCollection.removeAll(),i(d,e,e,t),p.all(d._promises,function(){d._promises.length=0,z(d,!1),d._changed.raiseEvent(d)})}).otherwise(function(e){return z(d,!1),d._error.raiseEvent(d,e),p.reject(e)})},Q.crsNames={"urn:ogc:def:crs:OGC:1.3:CRS84":V,"EPSG:4326":V},Q.crsLinkHrefs={},Q.crsLinkTypes={},Q}),r("DataSources/GeometryUpdater",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r,{perInstanceColorAppearanceType:{get:t.throwInstantiationError},materialAppearanceType:{get:t.throwInstantiationError}}),e(r.prototype,{entity:{get:t.throwInstantiationError},fillEnabled:{get:t.throwInstantiationError},hasConstantFill:{get:t.throwInstantiationError},fillMaterialProperty:{get:t.throwInstantiationError},outlineEnabled:{get:t.throwInstantiationError},hasConstantOutline:{get:t.throwInstantiationError},outlineColorProperty:{get:t.throwInstantiationError},isDynamic:{get:t.throwInstantiationError},isClosed:{get:t.throwInstantiationError},geometryChanged:{get:t.throwInstantiationError}}),r.prototype.isOutlineVisible=t.throwInstantiationError,r.prototype.isFilled=t.throwInstantiationError,r.prototype.createFillGeometryInstance=t.throwInstantiationError,r.prototype.createOutlineGeometryInstance=t.throwInstantiationError,r.prototype.isDestroyed=t.throwInstantiationError,r.prototype.destroy=t.throwInstantiationError,r.prototype.createDynamicUpdater=t.throwInstantiationError,r}),r("DataSources/PropertyArray",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","./Property"],function(e,t,r,i,n,o){"use strict";var a=function(e){this._value=void 0,this._definitionChanged=new i,this._eventHelper=new n,this.setValue(e)};return t(a.prototype,{isConstant:{get:function(){var t=this._value;if(!e(t))return!0;for(var r=t.length,i=0;r>i;i++)if(!o.isConstant(t[i]))return!1;return!0}},definitionChanged:{get:function(){return this._definitionChanged}}}),a.prototype.getValue=function(t,r){var i=this._value;if(!e(i))return void 0;var n=i.length;e(r)||(r=new Array(n));for(var o=0,a=0;n>o;){var s=this._value[o],l=s.getValue(t,r[o]);e(l)&&(r[a]=l,a++),o++}return r.length=a,r},a.prototype.setValue=function(t){var r=this._eventHelper;if(r.removeAll(),e(t)){this._value=t.slice();for(var i=t.length,n=0;i>n;n++){var o=t[n];e(o)&&r.add(o.definitionChanged,a.prototype._raiseDefinitionChanged,this)}}else this._value=void 0;this._definitionChanged.raiseEvent(this)},a.prototype.equals=function(e){return this===e||e instanceof a&&o.arrayEquals(this._value,e._value)},a.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},a}),r("DataSources/Visualizer",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.update=e.throwInstantiationError,t.prototype.isDestroyed=e.throwInstantiationError,t.prototype.destroy=e.throwInstantiationError,t}),r("Renderer/AutomaticUniforms",["../Core/Cartesian3","../Core/defineProperties","../Core/Matrix4"],function(e,t,r){"use strict";var i=new e,n=function(e){this._size=e.size,this._datatype=e.datatype,this.getValue=e.getValue};if(t(n.prototype,{size:{get:function(){return this._size}},datatype:{get:function(){return this._datatype}}}),"undefined"==typeof WebGLRenderingContext)return{};var o={};o[WebGLRenderingContext.FLOAT]="float",o[WebGLRenderingContext.FLOAT_VEC2]="vec2",o[WebGLRenderingContext.FLOAT_VEC3]="vec3",o[WebGLRenderingContext.FLOAT_VEC4]="vec4",o[WebGLRenderingContext.INT]="int",o[WebGLRenderingContext.INT_VEC2]="ivec2",o[WebGLRenderingContext.INT_VEC3]="ivec3",o[WebGLRenderingContext.INT_VEC4]="ivec4",o[WebGLRenderingContext.BOOL]="bool",o[WebGLRenderingContext.BOOL_VEC2]="bvec2",o[WebGLRenderingContext.BOOL_VEC3]="bvec3",o[WebGLRenderingContext.BOOL_VEC4]="bvec4",o[WebGLRenderingContext.FLOAT_MAT2]="mat2",o[WebGLRenderingContext.FLOAT_MAT3]="mat3",o[WebGLRenderingContext.FLOAT_MAT4]="mat4",o[WebGLRenderingContext.SAMPLER_2D]="sampler2D",o[WebGLRenderingContext.SAMPLER_CUBE]="samplerCube",n.prototype.getDeclaration=function(e){var t="uniform "+o[this._datatype]+" "+e,r=this._size;return t+=1===r?";":"["+r.toString()+"];"};var a={czm_viewport:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC4,getValue:function(e){return e.viewportCartesian4}}),czm_viewportOrthographic:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewportOrthographic}}),czm_viewportTransformation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewportTransformation}}),czm_model:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.model}}),czm_inverseModel:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModel}}),czm_view:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.view}}),czm_view3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.view3D}}),czm_viewRotation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.viewRotation}}),czm_viewRotation3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.viewRotation3D}}),czm_inverseView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseView}}),czm_inverseView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseView3D}}),czm_inverseViewRotation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation}}),czm_inverseViewRotation3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation3D}}),czm_projection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.projection}}),czm_inverseProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseProjection}}),czm_inverseProjectionOIT:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseProjectionOIT}}),czm_infiniteProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.infiniteProjection}}),czm_modelView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelView}}),czm_modelView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelView3D}}),czm_modelViewRelativeToEye:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewRelativeToEye}}),czm_inverseModelView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelView}}),czm_inverseModelView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelView3D}}),czm_viewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewProjection}}),czm_inverseViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseViewProjection}}),czm_modelViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewProjection}}),czm_inverseModelViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelViewProjection}}),czm_modelViewProjectionRelativeToEye:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewProjectionRelativeToEye}}),czm_modelViewInfiniteProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewInfiniteProjection}}),czm_normal:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.normal}}),czm_normal3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.normal3D}}),czm_inverseNormal:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseNormal}}),czm_inverseNormal3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseNormal3D}}),czm_eyeHeight2D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.eyeHeight2D}}),czm_entireFrustum:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.entireFrustum}}),czm_currentFrustum:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.currentFrustum}}),czm_sunPositionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunPositionWC}}),czm_sunPositionColumbusView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunPositionColumbusView}}),czm_sunDirectionEC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunDirectionEC}}),czm_sunDirectionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunDirectionWC}}),czm_moonDirectionEC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.moonDirectionEC}}),czm_encodedCameraPositionMCHigh:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCHigh}}),czm_encodedCameraPositionMCLow:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCLow}}),czm_viewerPositionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return r.getTranslation(e.inverseView,i)}}),czm_frameNumber:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.frameNumber}}),czm_morphTime:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.morphTime}}),czm_sceneMode:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.mode}}),czm_temeToPseudoFixed:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.temeToPseudoFixedMatrix}}),czm_resolutionScale:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.resolutionScale}})};return a}),r("Renderer/Buffer",["../Core/defaultValue","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r){"use strict";var i=function(e,t,r,i,n){this._gl=e,this._bufferTarget=t,this._sizeInBytes=r,this._usage=i,this._buffer=n,this.vertexArrayDestroyable=!0};return t(i.prototype,{sizeInBytes:{get:function(){return this._sizeInBytes}},usage:{get:function(){return this._usage}}}),i.prototype._getBuffer=function(){return this._buffer},i.prototype.copyFromArrayView=function(t,r){r=e(r,0);var i=this._gl,n=this._bufferTarget;i.bindBuffer(n,this._buffer),i.bufferSubData(n,r,t),i.bindBuffer(n,null)},i.prototype.isDestroyed=function(){return!1},i.prototype.destroy=function(){return this._gl.deleteBuffer(this._buffer),r(this)},i}),r("Renderer/ClearCommand",["../Core/Color","../Core/defaultValue","../Core/freezeObject"],function(e,t,r){"use strict";var i=function(e){e=t(e,t.EMPTY_OBJECT),this.color=e.color,this.depth=e.depth,this.stencil=e.stencil,this.renderState=e.renderState,this.framebuffer=e.framebuffer,this.owner=e.owner};return i.ALL=r(new i({color:new e(0,0,0,0),depth:1,stencil:0})),i.prototype.execute=function(e,t){e.clear(this,t)},i}),r("Shaders/ViewportQuadVS",[],function(){"use strict";return"attribute vec4 position;\nattribute vec2 textureCoordinates;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_Position = position;\nv_textureCoordinates = textureCoordinates;\n}\n"}),r("Renderer/Framebuffer",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/PixelFormat"],function(e,t,r,i){"use strict";function n(e,t,r){var i=e._gl;i.framebufferTexture2D(i.FRAMEBUFFER,t,r._target,r._texture,0)}function o(e,t,r){var i=e._gl;i.framebufferRenderbuffer(i.FRAMEBUFFER,t,i.RENDERBUFFER,r._getRenderbuffer())}var a=function(r,i,a){a=e(a,e.EMPTY_OBJECT),this._gl=r,this._framebuffer=r.createFramebuffer(),this._colorTextures=[],this._colorRenderbuffers=[],this._activeColorAttachments=[],this._depthTexture=void 0,this._depthRenderbuffer=void 0,this._stencilRenderbuffer=void 0,this._depthStencilTexture=void 0,this._depthStencilRenderbuffer=void 0,this.destroyAttachments=e(a.destroyAttachments,!0),t(a.depthTexture)||t(a.depthRenderbuffer),t(a.depthStencilTexture)||t(a.depthStencilRenderbuffer),this._bind();var s,l,u,c,h;if(t(a.colorTextures)){var d=a.colorTextures;for(c=this._colorTextures.length=this._activeColorAttachments.length=d.length,u=0;c>u;++u)s=d[u],h=this._gl.COLOR_ATTACHMENT0+u,n(this,h,s),this._activeColorAttachments[u]=h,this._colorTextures[u]=s}if(t(a.colorRenderbuffers)){var m=a.colorRenderbuffers;for(c=this._colorRenderbuffers.length=this._activeColorAttachments.length=m.length,u=0;c>u;++u)l=m[u],h=this._gl.COLOR_ATTACHMENT0+u,o(this,h,l),this._activeColorAttachments[u]=h,this._colorRenderbuffers[u]=l}t(a.depthTexture)&&(s=a.depthTexture,n(this,this._gl.DEPTH_ATTACHMENT,s),this._depthTexture=s),t(a.depthRenderbuffer)&&(l=a.depthRenderbuffer,o(this,this._gl.DEPTH_ATTACHMENT,l),this._depthRenderbuffer=l),t(a.stencilRenderbuffer)&&(l=a.stencilRenderbuffer,o(this,this._gl.STENCIL_ATTACHMENT,l),this._stencilRenderbuffer=l),t(a.depthStencilTexture)&&(s=a.depthStencilTexture,n(this,this._gl.DEPTH_STENCIL_ATTACHMENT,s),this._depthStencilTexture=s),t(a.depthStencilRenderbuffer)&&(l=a.depthStencilRenderbuffer,o(this,this._gl.DEPTH_STENCIL_ATTACHMENT,l),this._depthStencilRenderbuffer=l),this._unBind()};return r(a.prototype,{status:{get:function(){this._bind();var e=this._gl.checkFramebufferStatus(this._gl.FRAMEBUFFER);return this._unBind(),e}},numberOfColorAttachments:{get:function(){return this._activeColorAttachments.length}},depthTexture:{get:function(){return this._depthTexture}},depthRenderbuffer:{get:function(){return this._depthRenderbuffer}},stencilRenderbuffer:{get:function(){return this._stencilRenderbuffer}},depthStencilTexture:{get:function(){return this._depthStencilTexture}},depthStencilRenderbuffer:{get:function(){return this._depthStencilRenderbuffer}},hasDepthAttachment:{get:function(){return!!(this.depthTexture||this.depthRenderbuffer||this.depthStencilTexture||this.depthStencilRenderbuffer)}}}),a.prototype._bind=function(){var e=this._gl;e.bindFramebuffer(e.FRAMEBUFFER,this._framebuffer)},a.prototype._unBind=function(){var e=this._gl;e.bindFramebuffer(e.FRAMEBUFFER,null)},a.prototype._getActiveColorAttachments=function(){return this._activeColorAttachments},a.prototype.getColorTexture=function(e){return this._colorTextures[e]},a.prototype.getColorRenderbuffer=function(e){return this._colorRenderbuffers[e]},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){if(this.destroyAttachments){for(var e=0,r=this._colorTextures,n=r.length;n>e;++e){var o=r[e];t(o)&&o.destroy()}var a=this._colorRenderbuffers;for(n=a.length,e=0;n>e;++e){var s=a[e];t(s)&&s.destroy()}this._depthTexture=this._depthTexture&&this._depthTexture.destroy(),this._depthRenderbuffer=this._depthRenderbuffer&&this._depthRenderbuffer.destroy(),this._stencilRenderbuffer=this._stencilRenderbuffer&&this._stencilRenderbuffer.destroy(),this._depthStencilTexture=this._depthStencilTexture&&this._depthStencilTexture.destroy(),this._depthStencilRenderbuffer=this._depthStencilRenderbuffer&&this._depthStencilRenderbuffer.destroy()}return this._gl.deleteFramebuffer(this._framebuffer),i(this)},a}),r("Renderer/PassState",[],function(){"use strict";var e=function(e){this.context=e,this.framebuffer=void 0,this.blendingEnabled=void 0,this.scissorTest=void 0};return e}),r("Renderer/RenderbufferFormat",["../Core/freezeObject"],function(e){"use strict";var t={RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,validate:function(e){return e===t.RGBA4||e===t.RGB5_A1||e===t.RGB565||e===t.DEPTH_COMPONENT16||e===t.STENCIL_INDEX8||e===t.DEPTH_STENCIL}};return e(t)}),r("Renderer/PickFramebuffer",["../Core/BoundingRectangle","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","./PassState","./RenderbufferFormat"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){var r=new o(t);r.blendingEnabled=!1,r.scissorTest={enabled:!0,rectangle:new e},this._context=t,this._fb=void 0,this._passState=r,this._width=0,this._height=0};s.prototype.begin=function(t){var r=this._context,n=r.drawingBufferWidth,o=r.drawingBufferHeight;return e.clone(t,this._passState.scissorTest.rectangle),i(this._fb)&&this._width===n&&this._height===o||(this._width=n,this._height=o,this._fb=this._fb&&this._fb.destroy(),this._fb=r.createFramebuffer({colorTextures:[r.createTexture2D({width:n,height:o})],depthRenderbuffer:r.createRenderbuffer({format:a.DEPTH_COMPONENT16})}),this._passState.framebuffer=this._fb),this._passState};var l=new t;return s.prototype.end=function(e){for(var n=r(e.width,1),o=r(e.height,1),a=this._context,s=a.readPixels({x:e.x,y:e.y,width:n,height:o,framebuffer:this._fb}),u=Math.max(n,o),c=u*u,h=Math.floor(.5*n),d=Math.floor(.5*o),m=0,p=0,f=0,v=-1,g=0;c>g;++g){if(m>=-h&&h>=m&&p>=-d&&d>=p){var _=4*((d-p)*n+m+h);l.red=t.byteToFloat(s[_]),l.green=t.byteToFloat(s[_+1]),l.blue=t.byteToFloat(s[_+2]),l.alpha=t.byteToFloat(s[_+3]);var y=a.getObjectByPickColor(l);if(i(y))return y}if(m===p||0>m&&-m===p||m>0&&m===1-p){var C=f;f=-v,v=C}m+=f,p+=v}return void 0},s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return this._fb=this._fb&&this._fb.destroy(),n(this)},s}),r("Renderer/Renderbuffer",["../Core/defineProperties","../Core/destroyObject"],function(e,t){"use strict";function r(e,t,r,i){this._gl=e,this._format=t,this._width=r,this._height=i,this._renderbuffer=this._gl.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,this._renderbuffer),e.renderbufferStorage(e.RENDERBUFFER,t,r,i),e.bindRenderbuffer(e.RENDERBUFFER,null)}return e(r.prototype,{format:{get:function(){return this._format}},width:{get:function(){return this._width}},height:{get:function(){return this._height}}}),r.prototype._getRenderbuffer=function(){return this._renderbuffer},r.prototype.isDestroyed=function(){return!1},r.prototype.destroy=function(){return this._gl.deleteRenderbuffer(this._renderbuffer),t(this)},r}),r("Renderer/RenderState",["../Core/BoundingRectangle","../Core/Color","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/RuntimeError","../Core/WindingOrder"],function(e,t,r,i,n,o,a){"use strict";function s(e,t,r){r?e.enable(t):e.disable(t)}function l(e,t){e.frontFace(t.frontFace)}function u(e,t){var r=t.cull,i=r.enabled;s(e,e.CULL_FACE,i),i&&e.cullFace(r.face)}function c(e,t){e.lineWidth(t.lineWidth)}function h(e,t){var r=t.polygonOffset,i=r.enabled;s(e,e.POLYGON_OFFSET_FILL,i),i&&e.polygonOffset(r.factor,r.units)}function d(e,t,r){var n=t.scissorTest,o=i(r.scissorTest)?r.scissorTest.enabled:n.enabled;if(s(e,e.SCISSOR_TEST,o),o){var a=i(r.scissorTest)?r.scissorTest.rectangle:n.rectangle;e.scissor(a.x,a.y,a.width,a.height)}}function m(e,t){var r=t.depthRange;e.depthRange(r.near,r.far)}function p(e,t){var r=t.depthTest,i=r.enabled;s(e,e.DEPTH_TEST,i),i&&e.depthFunc(r.func)}function f(e,t){var r=t.colorMask;e.colorMask(r.red,r.green,r.blue,r.alpha)}function v(e,t){e.depthMask(t.depthMask)}function g(e,t){e.stencilMask(t.stencilMask)}function _(e,t,r){var n=t.blending,o=i(r.blendingEnabled)?r.blendingEnabled:n.enabled;s(e,e.BLEND,o),o&&(E(e,n.color),e.blendEquationSeparate(n.equationRgb,n.equationAlpha),e.blendFuncSeparate(n.functionSourceRgb,n.functionDestinationRgb,n.functionSourceAlpha,n.functionDestinationAlpha))}function y(e,t){var r=t.stencilTest,i=r.enabled;if(s(e,e.STENCIL_TEST,i),i){var n=r.frontFunction,o=r.backFunction,a=r.reference,l=r.mask;e.stencilFunc(r.frontFunction,r.reference,r.mask),e.stencilFuncSeparate(e.BACK,o,a,l),e.stencilFuncSeparate(e.FRONT,n,a,l);var u=r.frontOperation,c=u.fail,h=u.zFail,d=u.zPass;e.stencilOpSeparate(e.FRONT,c,h,d);var m=r.backOperation,p=m.fail,f=m.zFail,v=m.zPass;e.stencilOpSeparate(e.BACK,p,f,v)}}function C(e,t,r){var n=t.viewport;i(n)||(n=T,n.width=r.context.drawingBufferWidth,n.height=r.context.drawingBufferHeight),r.context.uniformState.viewport=n,e.viewport(n.x,n.y,n.width,n.height)}function w(e,t){var r=[];return e.frontFace!==t.frontFace&&r.push(l),(e.cull.enabled!==t.cull.enabled||e.cull.face!==t.cull.face)&&r.push(u),e.lineWidth!==t.lineWidth&&r.push(c),(e.polygonOffset.enabled!==t.polygonOffset.enabled||e.polygonOffset.factor!==t.polygonOffset.factor||e.polygonOffset.units!==t.polygonOffset.units)&&r.push(h),r.push(d),(e.depthRange.near!==t.depthRange.near||e.depthRange.far!==t.depthRange.far)&&r.push(m),(e.depthTest.enabled!==t.depthTest.enabled||e.depthTest.func!==t.depthTest.func)&&r.push(p),(e.colorMask.red!==t.colorMask.red||e.colorMask.green!==t.colorMask.green||e.colorMask.blue!==t.colorMask.blue||e.colorMask.alpha!==t.colorMask.alpha)&&r.push(f),e.depthMask!==t.depthMask&&r.push(v),r.push(_),e.stencilMask!==t.stencilMask&&r.push(g),(e.stencilTest.enabled!==t.stencilTest.enabled||e.stencilTest.frontFunction!==t.stencilTest.frontFunction||e.stencilTest.backFunction!==t.stencilTest.backFunction||e.stencilTest.reference!==t.stencilTest.reference||e.stencilTest.mask!==t.stencilTest.mask||e.stencilTest.frontOperation.fail!==t.stencilTest.frontOperation.fail||e.stencilTest.frontOperation.zFail!==t.stencilTest.frontOperation.zFail||e.stencilTest.backOperation.fail!==t.stencilTest.backOperation.fail||e.stencilTest.backOperation.zFail!==t.stencilTest.backOperation.zFail||e.stencilTest.backOperation.zPass!==t.stencilTest.backOperation.zPass)&&r.push(y),(e.sampleCoverage.enabled!==t.sampleCoverage.enabled||e.sampleCoverage.value!==t.sampleCoverage.value||e.sampleCoverage.invert!==t.sampleCoverage.invert)&&r.push(b),r.push(C),r}var S=function(n,s){var l=r(s,{}),u=r(l.cull,{}),c=r(l.polygonOffset,{}),h=r(l.scissorTest,{}),d=r(h.rectangle,{}),m=r(l.depthRange,{}),p=r(l.depthTest,{}),f=r(l.colorMask,{}),v=r(l.blending,{}),g=r(v.color,{}),_=r(l.stencilTest,{}),y=r(_.frontOperation,{}),C=r(_.backOperation,{}),w=r(l.sampleCoverage,{}),S=l.viewport;if(this.frontFace=r(l.frontFace,a.COUNTER_CLOCKWISE),this.cull={enabled:r(u.enabled,!1),face:r(u.face,WebGLRenderingContext.BACK)},this.lineWidth=r(l.lineWidth,1),this.polygonOffset={enabled:r(c.enabled,!1),factor:r(c.factor,0),units:r(c.units,0)},this.scissorTest={enabled:r(h.enabled,!1),rectangle:e.clone(d)},this.depthRange={near:r(m.near,0),far:r(m.far,1)},this.depthTest={enabled:r(p.enabled,!1),func:r(p.func,WebGLRenderingContext.LESS)},this.colorMask={red:r(f.red,!0),green:r(f.green,!0),blue:r(f.blue,!0),alpha:r(f.alpha,!0)},this.depthMask=r(l.depthMask,!0),this.stencilMask=r(l.stencilMask,-1),this.blending={enabled:r(v.enabled,!1),color:new t(r(g.red,0),r(g.green,0),r(g.blue,0),r(g.alpha,0)),equationRgb:r(v.equationRgb,WebGLRenderingContext.FUNC_ADD),equationAlpha:r(v.equationAlpha,WebGLRenderingContext.FUNC_ADD),functionSourceRgb:r(v.functionSourceRgb,WebGLRenderingContext.ONE),functionSourceAlpha:r(v.functionSourceAlpha,WebGLRenderingContext.ONE),functionDestinationRgb:r(v.functionDestinationRgb,WebGLRenderingContext.ZERO),functionDestinationAlpha:r(v.functionDestinationAlpha,WebGLRenderingContext.ZERO)},this.stencilTest={enabled:r(_.enabled,!1),frontFunction:r(_.frontFunction,WebGLRenderingContext.ALWAYS),backFunction:r(_.backFunction,WebGLRenderingContext.ALWAYS),reference:r(_.reference,0),mask:r(_.mask,-1),frontOperation:{fail:r(y.fail,WebGLRenderingContext.KEEP),zFail:r(y.zFail,WebGLRenderingContext.KEEP),zPass:r(y.zPass,WebGLRenderingContext.KEEP)},backOperation:{fail:r(C.fail,WebGLRenderingContext.KEEP),zFail:r(C.zFail,WebGLRenderingContext.KEEP),zPass:r(C.zPass,WebGLRenderingContext.KEEP)}},this.sampleCoverage={enabled:r(w.enabled,!1),value:r(w.value,1),invert:r(w.invert,!1)},this.viewport=i(S)?new e(S.x,S.y,i(S.width)?S.width:n.drawingBufferWidth,i(S.height)?S.height:n.drawingBufferHeight):void 0,this.lineWidth<n.minimumAliasedLineWidth||this.lineWidth>n.maximumAliasedLineWidth)throw new o("renderState.lineWidth is out of range.  Check minimumAliasedLineWidth and maximumAliasedLineWidth.");if(i(this.viewport)){if(this.viewport.width>n.maximumViewportWidth)throw new o("renderState.viewport.width must be less than or equal to the maximum viewport width ("+this.maximumViewportWidth.toString()+").  Check maximumViewportWidth.");if(this.viewport.height>n.maximumViewportHeight)throw new o("renderState.viewport.height must be less than or equal to the maximum viewport height ("+this.maximumViewportHeight.toString()+").  Check maximumViewportHeight.")}this.id=0,this._applyFunctions=[]},E=function(e,t){e.blendColor(t.red,t.green,t.blue,t.alpha)},b=function(e,t){var r=t.sampleCoverage,i=r.enabled;s(e,e.SAMPLE_COVERAGE,i),i&&e.sampleCoverage(r.value,r.invert)},T=new e;return S.apply=function(e,t,r){l(e,t),u(e,t),c(e,t),h(e,t),d(e,t,r),m(e,t),p(e,t),f(e,t),v(e,t),g(e,t),_(e,t,r),y(e,t),b(e,t),C(e,t,r)},S.partialApply=function(e,t,r,n){var o=r._applyFunctions[t.id];i(o)||(o=w(t,r),r._applyFunctions[t.id]=o);for(var a=o.length,s=0;a>s;++s)o[s](e,r,n)},S.clone=function(r){return{frontFace:r.frontFace,cull:{enabled:r.cull.enabled,face:r.cull.face},lineWidth:r.lineWidth,polygonOffset:{enabled:r.polygonOffset.enabled,factor:r.polygonOffset.factor,units:r.polygonOffset.units},scissorTest:{enabled:r.scissorTest.enabled,rectangle:e.clone(r.scissorTest.rectangle)},depthRange:{near:r.depthRange.near,far:r.depthRange.far},depthTest:{enabled:r.depthTest.enabled,func:r.depthTest.func},colorMask:{red:r.colorMask.red,green:r.colorMask.green,blue:r.colorMask.blue,alpha:r.colorMask.alpha},depthMask:r.depthMask,stencilMask:r.stencilMask,blending:{enabled:r.blending.enabled,color:t.clone(r.blending.color),equationRgb:r.blending.equationRgb,equationAlpha:r.blending.equationAlpha,functionSourceRgb:r.blending.functionSourceRgb,functionSourceAlpha:r.blending.functionSourceAlpha,functionDestinationRgb:r.blending.functionDestinationRgb,functionDestinationAlpha:r.blending.functionDestinationAlpha},stencilTest:{enabled:r.stencilTest.enabled,frontFunction:r.stencilTest.frontFunction,backFunction:r.stencilTest.backFunction,reference:r.stencilTest.reference,mask:r.stencilTest.mask,frontOperation:{fail:r.stencilTest.frontOperation.fail,zFail:r.stencilTest.frontOperation.zFail,zPass:r.stencilTest.frontOperation.zPass},backOperation:{fail:r.stencilTest.backOperation.fail,zFail:r.stencilTest.backOperation.zFail,zPass:r.stencilTest.backOperation.zPass}},sampleCoverage:{enabled:r.sampleCoverage.enabled,value:r.sampleCoverage.value,invert:r.sampleCoverage.invert},viewport:i(r.viewport)?e.clone(r.viewport):void 0}},S}),r("Shaders/Builtin/Constants/degreesPerRadian",[],function(){"use strict";return"const float czm_degreesPerRadian = 57.29577951308232;\n"}),r("Shaders/Builtin/Constants/depthRange",[],function(){"use strict";return"const czm_depthRangeStruct czm_depthRange = czm_depthRangeStruct(0.0, 1.0);\n"}),r("Shaders/Builtin/Constants/epsilon1",[],function(){"use strict";return"const float czm_epsilon1 = 0.1;\n"}),r("Shaders/Builtin/Constants/epsilon2",[],function(){"use strict";return"const float czm_epsilon2 = 0.01;\n"}),r("Shaders/Builtin/Constants/epsilon3",[],function(){"use strict";return"const float czm_epsilon3 = 0.001;\n"}),r("Shaders/Builtin/Constants/epsilon4",[],function(){"use strict";return"const float czm_epsilon4 = 0.0001;\n"}),r("Shaders/Builtin/Constants/epsilon5",[],function(){"use strict";return"const float czm_epsilon5 = 0.00001;\n"}),r("Shaders/Builtin/Constants/epsilon6",[],function(){"use strict";return"const float czm_epsilon6 = 0.000001;\n"}),r("Shaders/Builtin/Constants/epsilon7",[],function(){"use strict";return"const float czm_epsilon7 = 0.0000001;\n"}),r("Shaders/Builtin/Constants/infinity",[],function(){"use strict";return"const float czm_infinity = 5906376272000.0;\n"}),r("Shaders/Builtin/Constants/oneOverPi",[],function(){"use strict";return"const float czm_oneOverPi = 0.3183098861837907;\n"
}),r("Shaders/Builtin/Constants/oneOverTwoPi",[],function(){"use strict";return"const float czm_oneOverTwoPi = 0.15915494309189535;\n"}),r("Shaders/Builtin/Constants/pi",[],function(){"use strict";return"const float czm_pi = 3.141592653589793;\n"}),r("Shaders/Builtin/Constants/piOverFour",[],function(){"use strict";return"const float czm_piOverFour = 0.7853981633974483;\n"}),r("Shaders/Builtin/Constants/piOverSix",[],function(){"use strict";return"const float czm_piOverSix = 0.5235987755982988;\n"}),r("Shaders/Builtin/Constants/piOverThree",[],function(){"use strict";return"const float czm_piOverThree = 1.0471975511965976;\n"}),r("Shaders/Builtin/Constants/piOverTwo",[],function(){"use strict";return"const float czm_piOverTwo = 1.5707963267948966;\n"}),r("Shaders/Builtin/Constants/radiansPerDegree",[],function(){"use strict";return"const float czm_radiansPerDegree = 0.017453292519943295;\n"}),r("Shaders/Builtin/Constants/sceneMode2D",[],function(){"use strict";return"const float czm_sceneMode2D = 2.0;\n"}),r("Shaders/Builtin/Constants/sceneMode3D",[],function(){"use strict";return"const float czm_sceneMode3D = 3.0;\n"}),r("Shaders/Builtin/Constants/sceneModeColumbusView",[],function(){"use strict";return"const float czm_sceneModeColumbusView = 1.0;\n"}),r("Shaders/Builtin/Constants/sceneModeMorphing",[],function(){"use strict";return"const float czm_sceneModeMorphing = 0.0;\n"}),r("Shaders/Builtin/Constants/solarRadius",[],function(){"use strict";return"const float czm_solarRadius = 695500000.0;\n"}),r("Shaders/Builtin/Constants/threePiOver2",[],function(){"use strict";return"const float czm_threePiOver2 = 4.71238898038469;\n"}),r("Shaders/Builtin/Constants/twoPi",[],function(){"use strict";return"const float czm_twoPi = 6.283185307179586;\n"}),r("Shaders/Builtin/Constants/webMercatorMaxLatitude",[],function(){"use strict";return"const float czm_webMercatorMaxLatitude = 1.4844222297453324;\n"}),r("Shaders/Builtin/Structs/depthRangeStruct",[],function(){"use strict";return"struct czm_depthRangeStruct\n{\nfloat near;\nfloat far;\n};\n"}),r("Shaders/Builtin/Structs/ellipsoid",[],function(){"use strict";return"struct czm_ellipsoid\n{\nvec3 center;\nvec3 radii;\nvec3 inverseRadii;\nvec3 inverseRadiiSquared;\n};\n"}),r("Shaders/Builtin/Structs/material",[],function(){"use strict";return"struct czm_material\n{\nvec3 diffuse;\nfloat specular;\nfloat shininess;\nvec3 normal;\nvec3 emission;\nfloat alpha;\n};\n"}),r("Shaders/Builtin/Structs/materialInput",[],function(){"use strict";return"struct czm_materialInput\n{\nfloat s;\nvec2 st;\nvec3 str;\nvec3 normalEC;\nmat3 tangentToEyeMatrix;\nvec3 positionToEyeEC;\n};\n"}),r("Shaders/Builtin/Structs/ray",[],function(){"use strict";return"struct czm_ray\n{\nvec3 origin;\nvec3 direction;\n};\n"}),r("Shaders/Builtin/Structs/raySegment",[],function(){"use strict";return"struct czm_raySegment\n{\nfloat start;\nfloat stop;\n};\nconst czm_raySegment czm_emptyRaySegment = czm_raySegment(-czm_infinity, -czm_infinity);\nconst czm_raySegment czm_fullRaySegment = czm_raySegment(0.0, czm_infinity);\n"}),r("Shaders/Builtin/Functions/RGBToXYZ",[],function(){"use strict";return"vec3 czm_RGBToXYZ(vec3 rgb)\n{\nconst mat3 RGB2XYZ = mat3(0.4124, 0.2126, 0.0193,\n0.3576, 0.7152, 0.1192,\n0.1805, 0.0722, 0.9505);\nvec3 xyz = RGB2XYZ * rgb;\nvec3 Yxy;\nYxy.r = xyz.g;\nfloat temp = dot(vec3(1.0), xyz);\nYxy.gb = xyz.rg / temp;\nreturn Yxy;\n}\n"}),r("Shaders/Builtin/Functions/XYZToRGB",[],function(){"use strict";return"vec3 czm_XYZToRGB(vec3 Yxy)\n{\nconst mat3 XYZ2RGB = mat3( 3.2405, -0.9693,  0.0556,\n-1.5371,  1.8760, -0.2040,\n-0.4985,  0.0416,  1.0572);\nvec3 xyz;\nxyz.r = Yxy.r * Yxy.g / Yxy.b;\nxyz.g = Yxy.r;\nxyz.b = Yxy.r * (1.0 - Yxy.g - Yxy.b) / Yxy.b;\nreturn XYZ2RGB * xyz;\n}\n"}),r("Shaders/Builtin/Functions/alphaWeight",[],function(){"use strict";return"float czm_alphaWeight(float a)\n{\nfloat z;\nif (czm_sceneMode != czm_sceneMode2D)\n{\nfloat x = 2.0 * (gl_FragCoord.x - czm_viewport.x) / czm_viewport.z - 1.0;\nfloat y = 2.0 * (gl_FragCoord.y - czm_viewport.y) / czm_viewport.w - 1.0;\nfloat z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\nvec4 q = vec4(x, y, z, 1.0);\nq /= gl_FragCoord.w;\nz = (czm_inverseProjectionOIT * q).z;\n}\nelse\n{\nz = gl_FragCoord.z * (czm_currentFrustum.y - czm_currentFrustum.x) + czm_currentFrustum.x;\n}\nreturn pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 100.0 / (1e-5 + pow(abs(z) / 10.0, 3.0) + pow(abs(z) / 200.0, 6.0))));\n}\n"}),r("Shaders/Builtin/Functions/antialias",[],function(){"use strict";return"vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor)\n{\nfloat val1 = clamp(dist / fuzzFactor, 0.0, 1.0);\nfloat val2 = clamp((dist - 0.5) / fuzzFactor, 0.0, 1.0);\nval1 = val1 * (1.0 - val2);\nval1 = val1 * val1 * (3.0 - (2.0 * val1));\nval1 = pow(val1, 0.5);\nvec4 midColor = (color1 + color2) * 0.5;\nreturn mix(midColor, currentColor, val1);\n}\nvec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist)\n{\nreturn czm_antialias(color1, color2, currentColor, dist, 0.1);\n}\n"}),r("Shaders/Builtin/Functions/columbusViewMorph",[],function(){"use strict";return"vec4 czm_columbusViewMorph(vec4 position2D, vec4 position3D, float time)\n{\nvec3 p = mix(position2D.xyz, position3D.xyz, time);\nreturn vec4(p, 1.0);\n}\n"}),r("Shaders/Builtin/Functions/computePosition",[],function(){"use strict";return"vec4 czm_computePosition();\n"}),r("Shaders/Builtin/Functions/cosineAndSine",[],function(){"use strict";return"vec2 cordic(float angle)\n{\nvec2 vector = vec2(6.0725293500888267e-1, 0.0);\nfloat sense = (angle < 0.0) ? -1.0 : 1.0;\nmat2 rotation = mat2(1.0, sense, -sense, 1.0);\nvector = rotation * vector;\nangle -= sense * 7.8539816339744828e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfloat factor = sense * 5.0e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.6364760900080609e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.5e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.4497866312686414e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.25e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.2435499454676144e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 6.25e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 6.2418809995957350e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.125e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.1239833430268277e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.5625e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.5623728620476831e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 7.8125e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 7.8123410601011111e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.90625e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.9062301319669718e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.953125e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.9531225164788188e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 9.765625e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 9.7656218955931946e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 4.8828125e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.8828121119489829e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.44140625e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.4414062014936177e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.220703125e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.2207031189367021e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 6.103515625e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 6.1035156174208773e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.0517578125e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.0517578115526096e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.52587890625e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.5258789061315762e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 7.62939453125e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 7.6293945311019700e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.814697265625e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.8146972656064961e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.9073486328125e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.9073486328101870e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 9.5367431640625e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 9.5367431640596084e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 4.76837158203125e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.7683715820308884e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.384185791015625e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.3841857910155797e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.1920928955078125e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nreturn vector;\n}\nvec2 czm_cosineAndSine(float angle)\n{\nif (angle < -czm_piOverTwo || angle > czm_piOverTwo)\n{\nif (angle < 0.0)\n{\nreturn -cordic(angle + czm_pi);\n}\nelse\n{\nreturn -cordic(angle - czm_pi);\n}\n}\nelse\n{\nreturn cordic(angle);\n}\n}\n"}),r("Shaders/Builtin/Functions/eastNorthUpToEyeCoordinates",[],function(){"use strict";return"mat3 czm_eastNorthUpToEyeCoordinates(vec3 positionMC, vec3 normalEC)\n{\nvec3 tangentMC = normalize(vec3(-positionMC.y, positionMC.x, 0.0));\nvec3 tangentEC = normalize(czm_normal3D * tangentMC);\nvec3 bitangentEC = normalize(cross(normalEC, tangentEC));\nreturn mat3(\ntangentEC.x,   tangentEC.y,   tangentEC.z,\nbitangentEC.x, bitangentEC.y, bitangentEC.z,\nnormalEC.x,    normalEC.y,    normalEC.z);\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidContainsPoint",[],function(){"use strict";return"bool czm_ellipsoidContainsPoint(czm_ellipsoid ellipsoid, vec3 point)\n{\nvec3 scaled = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(point, 1.0)).xyz;\nreturn (dot(scaled, scaled) <= 1.0);\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidNew",[],function(){"use strict";return"czm_ellipsoid czm_ellipsoidNew(vec3 center, vec3 radii)\n{\nvec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\nvec3 inverseRadiiSquared = inverseRadii * inverseRadii;\nczm_ellipsoid temp = czm_ellipsoid(center, radii, inverseRadii, inverseRadiiSquared);\nreturn temp;\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidWgs84TextureCoordinates",[],function(){"use strict";return"vec2 czm_ellipsoidWgs84TextureCoordinates(vec3 normal)\n{\nreturn vec2(atan(normal.y, normal.x) * czm_oneOverTwoPi + 0.5, asin(normal.z) * czm_oneOverPi + 0.5);\n}\n"}),r("Shaders/Builtin/Functions/equalsEpsilon",[],function(){"use strict";return"bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec4(epsilon)));\n}\nbool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec3(epsilon)));\n}\nbool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec2(epsilon)));\n}\nbool czm_equalsEpsilon(float left, float right, float epsilon) {\nreturn (abs(left - right) <= epsilon);\n}\n"}),r("Shaders/Builtin/Functions/eyeOffset",[],function(){"use strict";return"vec4 czm_eyeOffset(vec4 positionEC, vec3 eyeOffset)\n{\nvec4 p = positionEC;\nvec4 zEyeOffset = normalize(p) * eyeOffset.z;\np.xy += eyeOffset.xy + zEyeOffset.xy;\np.z += zEyeOffset.z;\nreturn p;\n}\n"}),r("Shaders/Builtin/Functions/eyeToWindowCoordinates",[],function(){"use strict";return"vec4 czm_eyeToWindowCoordinates(vec4 positionEC)\n{\nvec4 q = czm_projection * positionEC;\nq.xyz /= q.w;\nq.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz;\nreturn q;\n}\n"}),r("Shaders/Builtin/Functions/geodeticSurfaceNormal",[],function(){"use strict";return"vec3 czm_geodeticSurfaceNormal(vec3 positionOnEllipsoid, vec3 ellipsoidCenter, vec3 oneOverEllipsoidRadiiSquared)\n{\nreturn normalize((positionOnEllipsoid - ellipsoidCenter) * oneOverEllipsoidRadiiSquared);\n}\n"}),r("Shaders/Builtin/Functions/getDefaultMaterial",[],function(){"use strict";return"czm_material czm_getDefaultMaterial(czm_materialInput materialInput)\n{\nczm_material material;\nmaterial.diffuse = vec3(0.0);\nmaterial.specular = 0.0;\nmaterial.shininess = 1.0;\nmaterial.normal = materialInput.normalEC;\nmaterial.emission = vec3(0.0);\nmaterial.alpha = 1.0;\nreturn material;\n}\n"}),r("Shaders/Builtin/Functions/getLambertDiffuse",[],function(){"use strict";return"float czm_getLambertDiffuse(vec3 lightDirectionEC, vec3 normalEC)\n{\nreturn max(dot(lightDirectionEC, normalEC), 0.0);\n}\n"}),r("Shaders/Builtin/Functions/getSpecular",[],function(){"use strict";return"float czm_getSpecular(vec3 lightDirectionEC, vec3 toEyeEC, vec3 normalEC, float shininess)\n{\nvec3 toReflectedLight = reflect(-lightDirectionEC, normalEC);\nfloat specular = max(dot(toReflectedLight, toEyeEC), 0.0);\nreturn pow(specular, shininess);\n}\n"}),r("Shaders/Builtin/Functions/getWaterNoise",[],function(){"use strict";return"vec4 czm_getWaterNoise(sampler2D normalMap, vec2 uv, float time, float angleInRadians)\n{\nfloat cosAngle = cos(angleInRadians);\nfloat sinAngle = sin(angleInRadians);\nvec2 s0 = vec2(1.0/17.0, 0.0);\nvec2 s1 = vec2(-1.0/29.0, 0.0);\nvec2 s2 = vec2(1.0/101.0, 1.0/59.0);\nvec2 s3 = vec2(-1.0/109.0, -1.0/57.0);\ns0 = vec2((cosAngle * s0.x) - (sinAngle * s0.y), (sinAngle * s0.x) + (cosAngle * s0.y));\ns1 = vec2((cosAngle * s1.x) - (sinAngle * s1.y), (sinAngle * s1.x) + (cosAngle * s1.y));\ns2 = vec2((cosAngle * s2.x) - (sinAngle * s2.y), (sinAngle * s2.x) + (cosAngle * s2.y));\ns3 = vec2((cosAngle * s3.x) - (sinAngle * s3.y), (sinAngle * s3.x) + (cosAngle * s3.y));\nvec2 uv0 = (uv/103.0) + (time * s0);\nvec2 uv1 = uv/107.0 + (time * s1) + vec2(0.23);\nvec2 uv2 = uv/vec2(897.0, 983.0) + (time * s2) + vec2(0.51);\nvec2 uv3 = uv/vec2(991.0, 877.0) + (time * s3) + vec2(0.71);\nuv0 = fract(uv0);\nuv1 = fract(uv1);\nuv2 = fract(uv2);\nuv3 = fract(uv3);\nvec4 noise = (texture2D(normalMap, uv0)) +\n(texture2D(normalMap, uv1)) +\n(texture2D(normalMap, uv2)) +\n(texture2D(normalMap, uv3));\nreturn ((noise / 4.0) - 0.5) * 2.0;\n}\n"}),r("Shaders/Builtin/Functions/getWgs84EllipsoidEC",[],function(){"use strict";return"czm_ellipsoid czm_getWgs84EllipsoidEC()\n{\nvec3 radii = vec3(6378137.0, 6378137.0, 6356752.314245);\nvec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\nvec3 inverseRadiiSquared = inverseRadii * inverseRadii;\nczm_ellipsoid temp = czm_ellipsoid(czm_view[3].xyz, radii, inverseRadii, inverseRadiiSquared);\nreturn temp;\n}\n"}),r("Shaders/Builtin/Functions/hue",[],function(){"use strict";return"vec3 czm_hue(vec3 rgb, float adjustment)\n{\nconst mat3 toYIQ = mat3(0.299,     0.587,     0.114,\n0.595716, -0.274453, -0.321263,\n0.211456, -0.522591,  0.311135);\nconst mat3 toRGB = mat3(1.0,  0.9563,  0.6210,\n1.0, -0.2721, -0.6474,\n1.0, -1.107,   1.7046);\nvec3 yiq = toYIQ * rgb;\nfloat hue = atan(yiq.z, yiq.y) + adjustment;\nfloat chroma = sqrt(yiq.z * yiq.z + yiq.y * yiq.y);\nvec3 color = vec3(yiq.x, chroma * cos(hue), chroma * sin(hue));\nreturn toRGB * color;\n}\n"}),r("Shaders/Builtin/Functions/isEmpty",[],function(){"use strict";return"bool czm_isEmpty(czm_raySegment interval)\n{\nreturn (interval.stop < 0.0);\n}\n"}),r("Shaders/Builtin/Functions/isFull",[],function(){"use strict";return"bool czm_isFull(czm_raySegment interval)\n{\nreturn (interval.start == 0.0 && interval.stop == czm_infinity);\n}\n"}),r("Shaders/Builtin/Functions/latitudeToWebMercatorFraction",[],function(){"use strict";return"float czm_latitudeToWebMercatorFraction(float latitude, float southMercatorYLow, float southMercatorYHigh, float oneOverMercatorHeight)\n{\nfloat sinLatitude = czm_cosineAndSine(latitude).y;\nfloat mercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\nfloat t1 = 0.0 - southMercatorYLow;\nfloat e = t1 - 0.0;\nfloat t2 = ((-southMercatorYLow - e) + (0.0 - (t1 - e))) + mercatorY - southMercatorYHigh;\nfloat highDifference = t1 + t2;\nfloat lowDifference = t2 - (highDifference - t1);\nreturn highDifference * oneOverMercatorHeight + lowDifference * oneOverMercatorHeight;\n}\n"}),r("Shaders/Builtin/Functions/luminance",[],function(){"use strict";return"float czm_luminance(vec3 rgb)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nreturn dot(rgb, W);\n}\n"}),r("Shaders/Builtin/Functions/modelToWindowCoordinates",[],function(){"use strict";return"vec4 czm_modelToWindowCoordinates(vec4 position)\n{\nvec4 q = czm_modelViewProjection * position;\nq.xyz /= q.w;\nq.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz;\nreturn q;\n}\n"}),r("Shaders/Builtin/Functions/multiplyWithColorBalance",[],function(){"use strict";return"vec3 czm_multiplyWithColorBalance(vec3 left, vec3 right)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nvec3 target = left * right;\nfloat leftLuminance = dot(left, W);\nfloat rightLuminance = dot(right, W);\nfloat targetLuminance = dot(target, W);\nreturn ((leftLuminance + rightLuminance) / (2.0 * targetLuminance)) * target;\n}\n"}),r("Shaders/Builtin/Functions/octDecode",[],function(){"use strict";return"vec3 czm_octDecode(vec2 encoded)\n{\nvec3 v = vec3(encoded.x, encoded.y, 1.0 - abs(encoded.x) - abs(encoded.y));\nif (v.z < 0.0)\n{\nv.xy = (1.0 - abs(v.yx)) * czm_signNotZero(v.xy);\n}\nreturn normalize(v);\n}\n"}),r("Shaders/Builtin/Functions/phong",[],function(){"use strict";return"float czm_private_getLambertDiffuseOfMaterial(vec3 lightDirectionEC, czm_material material)\n{\nreturn czm_getLambertDiffuse(lightDirectionEC, material.normal);\n}\nfloat czm_private_getSpecularOfMaterial(vec3 lightDirectionEC, vec3 toEyeEC, czm_material material)\n{\nreturn czm_getSpecular(lightDirectionEC, toEyeEC, material.normal, material.shininess);\n}\nvec4 czm_phong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 0.0, 1.0), material) + czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 1.0, 0.0), material);\nfloat specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material) + czm_private_getSpecularOfMaterial(czm_moonDirectionEC, toEye, material);\nvec3 materialDiffuse = material.diffuse * 0.5;\nvec3 ambient = materialDiffuse;\nvec3 color = ambient + material.emission;\ncolor += materialDiffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\nvec4 czm_private_phong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_private_getLambertDiffuseOfMaterial(czm_sunDirectionEC, material);\nfloat specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material);\nvec3 ambient = vec3(0.0);\nvec3 color = ambient + material.emission;\ncolor += material.diffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\n"}),r("Shaders/Builtin/Functions/pointAlongRay",[],function(){"use strict";return"vec3 czm_pointAlongRay(czm_ray ray, float time)\n{\nreturn ray.origin + (time * ray.direction);\n}\n"}),r("Shaders/Builtin/Functions/rayEllipsoidIntersectionInterval",[],function(){"use strict";return"czm_raySegment czm_rayEllipsoidIntersectionInterval(czm_ray ray, czm_ellipsoid ellipsoid)\n{\nvec3 q = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.origin, 1.0)).xyz;\nvec3 w = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.direction, 0.0)).xyz;\nq = q - ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ellipsoid.center, 1.0)).xyz;\nfloat q2 = dot(q, q);\nfloat qw = dot(q, w);\nif (q2 > 1.0)\n{\nif (qw >= 0.0)\n{\nreturn czm_emptyRaySegment;\n}\nelse\n{\nfloat qw2 = qw * qw;\nfloat difference = q2 - 1.0;\nfloat w2 = dot(w, w);\nfloat product = w2 * difference;\nif (qw2 < product)\n{\nreturn czm_emptyRaySegment;\n}\nelse if (qw2 > product)\n{\nfloat discriminant = qw * qw - product;\nfloat temp = -qw + sqrt(discriminant);\nfloat root0 = temp / w2;\nfloat root1 = difference / temp;\nif (root0 < root1)\n{\nczm_raySegment i = czm_raySegment(root0, root1);\nreturn i;\n}\nelse\n{\nczm_raySegment i = czm_raySegment(root1, root0);\nreturn i;\n}\n}\nelse\n{\nfloat root = sqrt(difference / w2);\nczm_raySegment i = czm_raySegment(root, root);\nreturn i;\n}\n}\n}\nelse if (q2 < 1.0)\n{\nfloat difference = q2 - 1.0;\nfloat w2 = dot(w, w);\nfloat product = w2 * difference;\nfloat discriminant = qw * qw - product;\nfloat temp = -qw + sqrt(discriminant);\nczm_raySegment i = czm_raySegment(0.0, temp / w2);\nreturn i;\n}\nelse\n{\nif (qw < 0.0)\n{\nfloat w2 = dot(w, w);\nczm_raySegment i = czm_raySegment(0.0, -qw / w2);\nreturn i;\n}\nelse\n{\nreturn czm_emptyRaySegment;\n}\n}\n}\n"}),r("Shaders/Builtin/Functions/saturation",[],function(){"use strict";return"vec3 czm_saturation(vec3 rgb, float adjustment)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nvec3 intensity = vec3(dot(rgb, W));\nreturn mix(intensity, rgb, adjustment);\n}\n"}),r("Shaders/Builtin/Functions/signNotZero",[],function(){"use strict";return"float czm_signNotZero(float value)\n{\nreturn value >= 0.0 ? 1.0 : -1.0;\n}\nvec2 czm_signNotZero(vec2 value)\n{\nreturn vec2(czm_signNotZero(value.x), czm_signNotZero(value.y));\n}\nvec3 czm_signNotZero(vec3 value)\n{\nreturn vec3(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z));\n}\nvec4 czm_signNotZero(vec4 value)\n{\nreturn vec4(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z), czm_signNotZero(value.w));\n}\n"}),r("Shaders/Builtin/Functions/tangentToEyeSpaceMatrix",[],function(){"use strict";return"mat3 czm_tangentToEyeSpaceMatrix(vec3 normalEC, vec3 tangentEC, vec3 binormalEC)\n{\nvec3 normal = normalize(normalEC);\nvec3 tangent = normalize(tangentEC);\nvec3 binormal = normalize(binormalEC);\nreturn mat3(tangent.x,  tangent.y,  tangent.z,\nbinormal.x, binormal.y, binormal.z,\nnormal.x,   normal.y,   normal.z);\n}\n"}),r("Shaders/Builtin/Functions/translateRelativeToEye",[],function(){"use strict";return"vec4 czm_translateRelativeToEye(vec3 high, vec3 low)\n{\nvec3 highDifference = high - czm_encodedCameraPositionMCHigh;\nvec3 lowDifference = low - czm_encodedCameraPositionMCLow;\nreturn vec4(highDifference + lowDifference, 1.0);\n}\n"}),r("Shaders/Builtin/Functions/translucentPhong",[],function(){"use strict";return"vec4 czm_translucentPhong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_getLambertDiffuse(vec3(0.0, 0.0, 1.0), material.normal);\ndiffuse += czm_getLambertDiffuse(vec3(0.0, 1.0, 0.0), material.normal);\ndiffuse = clamp(diffuse, 0.0, 1.0);\nfloat specular = czm_getSpecular(czm_sunDirectionEC, toEye, material.normal, material.shininess);\nspecular += czm_getSpecular(czm_moonDirectionEC, toEye, material.normal, material.shininess);\nvec3 materialDiffuse = material.diffuse * 0.5;\nvec3 ambient = materialDiffuse;\nvec3 color = ambient + material.emission;\ncolor += materialDiffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\n"}),r("Shaders/Builtin/Functions/transpose",[],function(){"use strict";return"mat2 czm_transpose(mat2 matrix)\n{\nreturn mat2(\nmatrix[0][0], matrix[1][0],\nmatrix[0][1], matrix[1][1]);\n}\nmat3 czm_transpose(mat3 matrix)\n{\nreturn mat3(\nmatrix[0][0], matrix[1][0], matrix[2][0],\nmatrix[0][1], matrix[1][1], matrix[2][1],\nmatrix[0][2], matrix[1][2], matrix[2][2]);\n}\nmat4 czm_transpose(mat4 matrix)\n{\nreturn mat4(\nmatrix[0][0], matrix[1][0], matrix[2][0], matrix[3][0],\nmatrix[0][1], matrix[1][1], matrix[2][1], matrix[3][1],\nmatrix[0][2], matrix[1][2], matrix[2][2], matrix[3][2],\nmatrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]);\n}\n"}),r("Shaders/Builtin/Functions/windowToEyeCoordinates",[],function(){"use strict";return"vec4 czm_windowToEyeCoordinates(vec4 fragmentCoordinate)\n{\nfloat x = 2.0 * (fragmentCoordinate.x - czm_viewport.x) / czm_viewport.z - 1.0;\nfloat y = 2.0 * (fragmentCoordinate.y - czm_viewport.y) / czm_viewport.w - 1.0;\nfloat z = (fragmentCoordinate.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\nvec4 q = vec4(x, y, z, 1.0);\nq /= fragmentCoordinate.w;\nq = czm_inverseProjection * q;\nreturn q;\n}\n"}),r("Shaders/Builtin/CzmBuiltins",["./Constants/degreesPerRadian","./Constants/depthRange","./Constants/epsilon1","./Constants/epsilon2","./Constants/epsilon3","./Constants/epsilon4","./Constants/epsilon5","./Constants/epsilon6","./Constants/epsilon7","./Constants/infinity","./Constants/oneOverPi","./Constants/oneOverTwoPi","./Constants/pi","./Constants/piOverFour","./Constants/piOverSix","./Constants/piOverThree","./Constants/piOverTwo","./Constants/radiansPerDegree","./Constants/sceneMode2D","./Constants/sceneMode3D","./Constants/sceneModeColumbusView","./Constants/sceneModeMorphing","./Constants/solarRadius","./Constants/threePiOver2","./Constants/twoPi","./Constants/webMercatorMaxLatitude","./Structs/depthRangeStruct","./Structs/ellipsoid","./Structs/material","./Structs/materialInput","./Structs/ray","./Structs/raySegment","./Functions/RGBToXYZ","./Functions/XYZToRGB","./Functions/alphaWeight","./Functions/antialias","./Functions/columbusViewMorph","./Functions/computePosition","./Functions/cosineAndSine","./Functions/eastNorthUpToEyeCoordinates","./Functions/ellipsoidContainsPoint","./Functions/ellipsoidNew","./Functions/ellipsoidWgs84TextureCoordinates","./Functions/equalsEpsilon","./Functions/eyeOffset","./Functions/eyeToWindowCoordinates","./Functions/geodeticSurfaceNormal","./Functions/getDefaultMaterial","./Functions/getLambertDiffuse","./Functions/getSpecular","./Functions/getWaterNoise","./Functions/getWgs84EllipsoidEC","./Functions/hue","./Functions/isEmpty","./Functions/isFull","./Functions/latitudeToWebMercatorFraction","./Functions/luminance","./Functions/modelToWindowCoordinates","./Functions/multiplyWithColorBalance","./Functions/octDecode","./Functions/phong","./Functions/pointAlongRay","./Functions/rayEllipsoidIntersectionInterval","./Functions/saturation","./Functions/signNotZero","./Functions/tangentToEyeSpaceMatrix","./Functions/translateRelativeToEye","./Functions/translucentPhong","./Functions/transpose","./Functions/windowToEyeCoordinates"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht,dt,mt,pt,ft){"use strict";return{czm_degreesPerRadian:e,czm_depthRange:t,czm_epsilon1:r,czm_epsilon2:i,czm_epsilon3:n,czm_epsilon4:o,czm_epsilon5:a,czm_epsilon6:s,czm_epsilon7:l,czm_infinity:u,czm_oneOverPi:c,czm_oneOverTwoPi:h,czm_pi:d,czm_piOverFour:m,czm_piOverSix:p,czm_piOverThree:f,czm_piOverTwo:v,czm_radiansPerDegree:g,czm_sceneMode2D:_,czm_sceneMode3D:y,czm_sceneModeColumbusView:C,czm_sceneModeMorphing:w,czm_solarRadius:S,czm_threePiOver2:E,czm_twoPi:b,czm_webMercatorMaxLatitude:T,czm_depthRangeStruct:x,czm_ellipsoid:P,czm_material:A,czm_materialInput:M,czm_ray:D,czm_raySegment:I,czm_RGBToXYZ:R,czm_XYZToRGB:O,czm_alphaWeight:L,czm_antialias:N,czm_columbusViewMorph:B,czm_computePosition:F,czm_cosineAndSine:z,czm_eastNorthUpToEyeCoordinates:V,czm_ellipsoidContainsPoint:k,czm_ellipsoidNew:U,czm_ellipsoidWgs84TextureCoordinates:W,czm_equalsEpsilon:G,czm_eyeOffset:H,czm_eyeToWindowCoordinates:q,czm_geodeticSurfaceNormal:j,czm_getDefaultMaterial:Y,czm_getLambertDiffuse:X,czm_getSpecular:Z,czm_getWaterNoise:Q,czm_getWgs84EllipsoidEC:J,czm_hue:K,czm_isEmpty:$,czm_isFull:et,czm_latitudeToWebMercatorFraction:tt,czm_luminance:rt,czm_modelToWindowCoordinates:it,czm_multiplyWithColorBalance:nt,czm_octDecode:ot,czm_phong:at,czm_pointAlongRay:st,czm_rayEllipsoidIntersectionInterval:lt,czm_saturation:ut,czm_signNotZero:ct,czm_tangentToEyeSpaceMatrix:ht,czm_translateRelativeToEye:dt,czm_translucentPhong:mt,czm_transpose:pt,czm_windowToEyeCoordinates:ft}}),r("Renderer/ShaderProgram",["../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/RuntimeError","../Shaders/Builtin/CzmBuiltins","./AutomaticUniforms"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t){var r=t._gl,n=t._location;switch(t._activeUniform.type){case r.FLOAT:return function(){r.uniform1f(n,t.value)};case r.FLOAT_VEC2:return function(){var e=t.value;r.uniform2f(n,e.x,e.y)};case r.FLOAT_VEC3:return function(){var e=t.value;r.uniform3f(n,e.x,e.y,e.z)};case r.FLOAT_VEC4:return function(){var o=t.value;if(e(o.red))r.uniform4f(n,o.red,o.green,o.blue,o.alpha);else{if(!e(o.x))throw new i('Invalid vec4 value for uniform "'+t._activeUniform.name+'".');r.uniform4f(n,o.x,o.y,o.z,o.w)}};case r.SAMPLER_2D:case r.SAMPLER_CUBE:return function(){r.activeTexture(r.TEXTURE0+t.textureUnitIndex),r.bindTexture(t.value._target,t.value._texture)};case r.INT:case r.BOOL:return function(){r.uniform1i(n,t.value)};case r.INT_VEC2:case r.BOOL_VEC2:return function(){var e=t.value;r.uniform2i(n,e.x,e.y)};case r.INT_VEC3:case r.BOOL_VEC3:return function(){var e=t.value;r.uniform3i(n,e.x,e.y,e.z)};case r.INT_VEC4:case r.BOOL_VEC4:return function(){var e=t.value;r.uniform4i(n,e.x,e.y,e.z,e.w)};case r.FLOAT_MAT2:return function(){r.uniformMatrix2fv(n,!1,o.toArray(t.value,T))};case r.FLOAT_MAT3:return function(){r.uniformMatrix3fv(n,!1,a.toArray(t.value,x))};case r.FLOAT_MAT4:return function(){r.uniformMatrix4fv(n,!1,s.toArray(t.value,P))};default:throw new l("Unrecognized uniform type: "+t._activeUniform.type+' for uniform "'+t._activeUniform.name+'".')}}function d(t){var r=t._gl,n=t._locations;switch(t._activeUniform.type){case r.FLOAT:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniform1f(n[o],e[o])};case r.FLOAT_VEC2:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform2f(n[o],a.x,a.y)}};case r.FLOAT_VEC3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform3f(n[o],a.x,a.y,a.z)}};case r.FLOAT_VEC4:return function(){for(var o=t.value,a=o.length,s=0;a>s;++s){var l=o[s];if(e(l.red))r.uniform4f(n[s],l.red,l.green,l.blue,l.alpha);else{if(!e(l.x))throw new i("Invalid vec4 value.");r.uniform4f(n[s],l.x,l.y,l.z,l.w)}}};case r.SAMPLER_2D:case r.SAMPLER_CUBE:return function(){for(var e=t.value,i=e.length,n=0;i>n;++n){var o=e[n],a=t.textureUnitIndex+n;r.activeTexture(r.TEXTURE0+a),r.bindTexture(o._target,o._texture)}};case r.INT:case r.BOOL:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniform1i(n[o],e[o])};case r.INT_VEC2:case r.BOOL_VEC2:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform2i(n[o],a.x,a.y)}};case r.INT_VEC3:case r.BOOL_VEC3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform3i(n[o],a.x,a.y,a.z)
}};case r.INT_VEC4:case r.BOOL_VEC4:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform4i(n[o],a.x,a.y,a.z,a.w)}};case r.FLOAT_MAT2:return function(){for(var e=t.value,i=e.length,a=0;i>a;++a)r.uniformMatrix2fv(n[a],!1,o.toArray(e[a],T))};case r.FLOAT_MAT3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniformMatrix3fv(n[o],!1,a.toArray(e[o],x))};case r.FLOAT_MAT4:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniformMatrix4fv(n[o],!1,s.toArray(e[o],P))};default:throw new l("Unrecognized uniform type: "+t._activeUniform.type)}}function m(e,t,r){e.useProgram(t);for(var i=0,n=r.length,o=0;n>o;++o)i=r[o]._setSampler(i);return e.useProgram(null),i}function p(e){var t=e.indexOf("#version");if(-1!==t){var r=e.indexOf("\n",t);if(-1!==t){var i=e.substring(t,r+1),n=e.substring(0,t)+"//"+e.substring(t);return{version:i,source:n}}}return{version:"",source:e}}function f(t,r,i){for(var n,o=0;o<i.length;++o)i[o].name===t&&(n=i[o]);if(!e(n)){var a=r.match(/\/\*\*[\s\S]*?\*\//gm);if(e(a)&&null!==a)for(o=0;o<a.length;++o){for(var s=a[o],l=s.match(/\n/gm).length,u="",c=0;l>c;++c)u+=0===c?"// Comment replaced to prevent problems when determining dependencies on built-in functions\n":"//\n";r=r.replace(s,u)}n={name:t,glslSource:r,dependsOn:[],requiredBy:[],evaluated:!1},i.push(n)}return n}function v(t,r){if(!t.evaluated){t.evaluated=!0;var i=t.glslSource.match(/\bczm_[a-zA-Z0-9_]*/g);e(i)&&null!==i&&(i=i.filter(function(e,t){return i.indexOf(e)===t}),i.forEach(function(e){if(e!==t.name&&I._czmBuiltinsAndUniforms.hasOwnProperty(e)){var i=f(e,I._czmBuiltinsAndUniforms[e],r);t.dependsOn.push(i),i.requiredBy.push(t),v(i,r)}}))}}function g(e){for(var t=[],r=[];e.length>0;){var n=e.pop();r.push(n),0===n.requiredBy.length&&t.push(n)}for(;t.length>0;){var o=t.shift();e.push(o);for(var a=0;a<o.dependsOn.length;++a){var s=o.dependsOn[a],l=s.requiredBy.indexOf(o);s.requiredBy.splice(l,1),0===s.requiredBy.length&&t.push(s)}}for(var u=[],c=0;c<r.length;++c)0!==r[c].requiredBy.length&&u.push(r[c]);if(0!==u.length){var h="A circular dependency was found in the following built-in functions/structs/constants: \n";for(c=0;c<u.length;++c)h=h+u[c].name+"\n";throw new i(h)}}function _(e){var t=[],r=f("main",e,t);v(r,t),g(t);for(var i="",n=t.length-1;n>=0;--n)i=i+t[n].glslSource+"\n";return i.replace(r.glslSource,"")}function y(){return"#ifdef GL_FRAGMENT_PRECISION_HIGH \n  precision highp float; \n#else \n  precision mediump float; \n#endif \n\n"}function C(t,r,i,n,o){var a,s=p(i),u=p(n),c=s.version+_(s.source)+"\n#line 0\n"+s.source,h=u.version+y()+_(u.source)+"\n#line 0\n"+u.source,d=t.createShader(t.VERTEX_SHADER);t.shaderSource(d,c),t.compileShader(d);var m=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(m,h),t.compileShader(m);var f=t.createProgram();if(t.attachShader(f,d),t.attachShader(f,m),t.deleteShader(d),t.deleteShader(m),e(o))for(var v in o)o.hasOwnProperty(v)&&t.bindAttribLocation(f,o[v],v);if(t.linkProgram(f),!t.getProgramParameter(f,t.LINK_STATUS)){if(!t.getShaderParameter(m,t.COMPILE_STATUS))throw a=t.getShaderInfoLog(m),t.deleteProgram(f),console.error("[GL] Fragment shader compile log: "+a),new l("Fragment shader failed to compile.  Compile log: "+a);if(!t.getShaderParameter(d,t.COMPILE_STATUS))throw a=t.getShaderInfoLog(d),t.deleteProgram(f),console.error("[GL] Vertex shader compile log: "+a),new l("Vertex shader failed to compile.  Compile log: "+a);throw a=t.getProgramInfoLog(f),t.deleteProgram(f),console.error("[GL] Shader program link log: "+a),new l("Program failed to link.  Link log: "+a)}return r&&(a=t.getShaderInfoLog(d),e(a)&&a.length>0&&console.log("[GL] Vertex shader compile log: "+a)),r&&(a=t.getShaderInfoLog(m),e(a)&&a.length>0&&console.log("[GL] Fragment shader compile log: "+a)),r&&(a=t.getProgramInfoLog(f),e(a)&&a.length>0&&console.log("[GL] Shader program link log: "+a)),f}function w(e,t,r){for(var i={},n=0;r>n;++n){var o=e.getActiveAttrib(t,n),a=e.getAttribLocation(t,o.name);i[o.name]={name:o.name,type:o.type,index:a}}return i}function S(t,r){for(var i={},n=[],o=[],a=t.getProgramParameter(r,t.ACTIVE_UNIFORMS),s=0;a>s;++s){var l=t.getActiveUniform(r,s),u="[0]",c=-1!==l.name.indexOf(u,l.name.length-u.length)?l.name.slice(0,l.name.length-3):l.name;if(0!==c.indexOf("gl_"))if(l.name.indexOf("[")<0){var h=t.getUniformLocation(r,c);if(null!==h){var d=t.getUniform(r,h),m=new A(t,l,c,h,d);i[c]=m,n.push(m),m._setSampler&&o.push(m)}}else{var p,f,v,g,_=c.indexOf("[");if(_>=0){if(p=i[c.slice(0,_)],!e(p))continue;f=p._locations,f.length<=1&&(v=p.value,g=t.getUniformLocation(r,c),null!==g&&(f.push(g),v.push(t.getUniform(r,g))))}else{f=[],v=[];for(var y=0;y<l.size;++y)g=t.getUniformLocation(r,c+"["+y+"]"),null!==g&&(f.push(g),v.push(t.getUniform(r,g)));p=new M(t,l,c,f,v),i[c]=p,n.push(p),p._setSampler&&o.push(p)}}}return{uniformsByName:i,uniforms:n,samplerUniforms:o}}function E(e){var t=[],r={};for(var i in e)if(e.hasOwnProperty(i)){var n=c[i];n?t.push({uniform:e[i],automaticUniform:n}):r[i]=e[i]}return{automaticUniforms:t,manualUniforms:r}}function b(t){if(!e(t._program)){var r=t._gl,i=C(r,t._logShaderCompilation,t.vertexShaderSource,t.fragmentShaderSource,t._attributeLocations),n=r.getProgramParameter(i,r.ACTIVE_ATTRIBUTES),o=S(r,i),a=E(o.uniformsByName);t._program=i,t._numberOfVertexAttributes=n,t._vertexAttributes=w(r,i,n),t._uniformsByName=o.uniformsByName,t._uniforms=o.uniforms,t._automaticUniforms=a.automaticUniforms,t._manualUniforms=a.manualUniforms,t.maximumTextureUnitIndex=m(r,i,o.samplerUniforms)}}var T,x,P;n.supportsTypedArrays()&&(T=new Float32Array(4),x=new Float32Array(9),P=new Float32Array(16));var A=function(e,t,r,i,n){this.value=n,this._gl=e,this._activeUniform=t,this._uniformName=r,this._location=i,this.textureUnitIndex=void 0,this._set=h(this),(t.type===e.SAMPLER_2D||t.type===e.SAMPLER_CUBE)&&(this._setSampler=function(t){return this.textureUnitIndex=t,e.uniform1i(i,t),t+1})};t(A.prototype,{name:{get:function(){return this._uniformName}},datatype:{get:function(){return this._activeUniform.type}}});var M=function(e,t,r,i,n){this._gl=e,this._activeUniform=t,this._uniformName=r,this.value=n,this._locations=i,this.textureUnitIndex=void 0,this._set=d(this),(t.type===e.SAMPLER_2D||t.type===e.SAMPLER_CUBE)&&(this._setSampler=function(t){this.textureUnitIndex=t;for(var r=i.length,n=0;r>n;++n){var o=t+n;e.uniform1i(i[n],o)}return t+r})};t(M.prototype,{name:{get:function(){return this._uniformName}},datatype:{get:function(){return this._activeUniform.type}}});var D=0,I=function(e,t,r,i,n){this._gl=e,this._logShaderCompilation=t,this._attributeLocations=n,this._program=void 0,this._numberOfVertexAttributes=void 0,this._vertexAttributes=void 0,this._uniformsByName=void 0,this._uniforms=void 0,this._automaticUniforms=void 0,this._manualUniforms=void 0,this._cachedShader=void 0,this.maximumTextureUnitIndex=void 0,this._vertexShaderSource=r,this._fragmentShaderSource=i,this.id=D++};t(I.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},vertexAttributes:{get:function(){return b(this),this._vertexAttributes}},numberOfVertexAttributes:{get:function(){return b(this),this._numberOfVertexAttributes}},allUniforms:{get:function(){return b(this),this._uniformsByName}},manualUniforms:{get:function(){return b(this),this._manualUniforms}}}),I._czmBuiltinsAndUniforms={};for(var R in u)u.hasOwnProperty(R)&&(I._czmBuiltinsAndUniforms[R]=u[R]);for(var O in c)if(c.hasOwnProperty(O)){var L=c[O];"function"==typeof L.getDeclaration&&(I._czmBuiltinsAndUniforms[O]=L.getDeclaration(O))}return I.prototype._bind=function(){b(this),this._gl.useProgram(this._program)},I.prototype._setUniforms=function(e,t,r){var n,o,a=this._uniforms,s=this._manualUniforms,l=this._automaticUniforms;if(e)for(var u in s)s.hasOwnProperty(u)&&(s[u].value=e[u]());for(n=l.length,o=0;n>o;++o)l[o].uniform.value=l[o].automaticUniform.getValue(t);for(n=a.length,o=0;n>o;++o)a[o]._set();if(r){var c=this._gl,h=this._program;if(c.validateProgram(h),!c.getProgramParameter(h,c.VALIDATE_STATUS))throw new i("Program validation failed.  Link log: "+c.getProgramInfoLog(h))}},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){return this._cachedShader.cache.releaseShaderProgram(this),void 0},I.prototype.finalDestroy=function(){return this._gl.deleteProgram(this._program),r(this)},I}),r("Renderer/ShaderCache",["../Core/defined","../Core/destroyObject","./ShaderProgram"],function(e,t,r){"use strict";var i=function(e){this._context=e,this._shaders={},this._shadersToRelease={}};return i.prototype.replaceShaderProgram=function(t,r,i,n){return e(t)&&t.destroy(),this.getShaderProgram(r,i,n)},i.prototype.getShaderProgram=function(e,t,i){var n,o=e+t+JSON.stringify(i);if(this._shaders[o])n=this._shaders[o],delete this._shadersToRelease[o];else{var a=this._context,s=new r(a._gl,a.logShaderCompilation,e,t,i);n={cache:this,shaderProgram:s,keyword:o,count:0},s._cachedShader=n,this._shaders[o]=n}return++n.count,n.shaderProgram},i.prototype.destroyReleasedShaderPrograms=function(){var e=this._shadersToRelease;for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];delete this._shaders[r.keyword],r.shaderProgram.finalDestroy()}this._shadersToRelease={}},i.prototype.releaseShaderProgram=function(e){if(e){var t=e._cachedShader;t&&0===--t.count&&(this._shadersToRelease[t.keyword]=t)}},i.prototype.isDestroyed=function(){return!1},i.prototype.destroy=function(){var e=this._shaders;for(var r in e)e.hasOwnProperty(r)&&e[r].shaderProgram.finalDestroy();return t(this)},i}),r("Renderer/UniformState",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defined","../Core/defineProperties","../Core/EncodedCartesian3","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Simon1994PlanetaryPositions","../Core/Transforms","../Scene/SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t){c.clone(t,e._view),c.getRotation(t,e._viewRotation),e._view3DDirty=!0,e._inverseView3DDirty=!0,e._modelViewDirty=!0,e._modelView3DDirty=!0,e._modelViewRelativeToEyeDirty=!0,e._inverseModelViewDirty=!0,e._inverseModelView3DDirty=!0,e._viewProjectionDirty=!0,e._modelViewProjectionDirty=!0,e._modelViewProjectionRelativeToEyeDirty=!0,e._modelViewInfiniteProjectionDirty=!0,e._normalDirty=!0,e._inverseNormalDirty=!0,e._normal3DDirty=!0,e._inverseNormal3DDirty=!0}function f(e,t){c.clone(t,e._inverseView),c.getRotation(t,e._inverseViewRotation)}function v(e,t){c.clone(t,e._projection),e._inverseProjectionDirty=!0,e._inverseProjectionOITDirty=!0,e._viewProjectionDirty=!0,e._modelViewProjectionDirty=!0,e._modelViewProjectionRelativeToEyeDirty=!0}function g(e,t){c.clone(t,e._infiniteProjection),e._modelViewInfiniteProjectionDirty=!0}function _(e,t){r.clone(t.positionWC,e._cameraPosition),r.clone(t.directionWC,e._cameraDirection),r.clone(t.rightWC,e._cameraRight),r.clone(t.upWC,e._cameraUp),e._encodedCameraPositionMCDirty=!0}function y(e,t){o(d.computeIcrfToFixedMatrix(t.time,U))||(U=d.computeTemeToPseudoFixedMatrix(t.time,U));var i=h.computeSunPositionInEarthInertialFrame(t.time,e._sunPositionWC);u.multiplyByVector(U,i,i),r.normalize(i,e._sunDirectionWC),i=u.multiplyByVector(e.viewRotation3D,i,e._sunDirectionEC),r.normalize(i,i),i=h.computeMoonPositionInEarthInertialFrame(t.time,e._moonDirectionEC),u.multiplyByVector(U,i,i),u.multiplyByVector(e.viewRotation3D,i,i),r.normalize(i,i);var n=t.mapProjection,a=n.ellipsoid,s=a.cartesianToCartographic(e._sunPositionWC,W);n.project(s,e._sunPositionColumbusView)}function C(e){if(e._viewportDirty){var t=e._viewport;c.computeOrthographicOffCenter(t.x,t.x+t.width,t.y,t.y+t.height,0,1,e._viewportOrthographicMatrix),c.computeViewportTransformation(t,0,1,e._viewportTransformation),e._viewportDirty=!1}}function w(e){e._inverseProjectionDirty&&(e._inverseProjectionDirty=!1,c.inverse(e._projection,e._inverseProjection))}function S(e){e._inverseProjectionOITDirty&&(e._inverseProjectionOITDirty=!1,e._mode!==m.SCENE2D&&e._mode!==m.MORPHING?c.inverse(e._projection,e._inverseProjectionOIT):c.clone(c.IDENTITY,e._inverseProjectionOIT))}function E(e){e._modelViewDirty&&(e._modelViewDirty=!1,c.multiplyTransformation(e._view,e._model,e._modelView))}function b(e){e._modelView3DDirty&&(e._modelView3DDirty=!1,c.multiplyTransformation(e.view3D,e._model,e._modelView3D))}function T(e){e._inverseModelViewDirty&&(e._inverseModelViewDirty=!1,c.inverse(e.modelView,e._inverseModelView))}function x(e){e._inverseModelView3DDirty&&(e._inverseModelView3DDirty=!1,c.inverse(e.modelView3D,e._inverseModelView3D))}function P(e){e._viewProjectionDirty&&(e._viewProjectionDirty=!1,c.multiply(e._projection,e._view,e._viewProjection))}function A(e){e._inverseViewProjectionDirty&&(e._inverseViewProjectionDirty=!1,c.inverse(e.viewProjection,e._inverseViewProjection))}function M(e){e._modelViewProjectionDirty&&(e._modelViewProjectionDirty=!1,c.multiply(e._projection,e.modelView,e._modelViewProjection))}function D(e){if(e._modelViewRelativeToEyeDirty){e._modelViewRelativeToEyeDirty=!1;var t=e.modelView,r=e._modelViewRelativeToEye;r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r[9]=t[9],r[10]=t[10],r[11]=t[11],r[12]=0,r[13]=0,r[14]=0,r[15]=t[15]}}function I(e){e._inverseModelViewProjectionDirty&&(e._inverseModelViewProjectionDirty=!1,c.inverse(e.modelViewProjection,e._inverseModelViewProjection))}function R(e){e._modelViewProjectionRelativeToEyeDirty&&(e._modelViewProjectionRelativeToEyeDirty=!1,c.multiply(e._projection,e.modelViewRelativeToEye,e._modelViewProjectionRelativeToEye))}function O(e){e._modelViewInfiniteProjectionDirty&&(e._modelViewInfiniteProjectionDirty=!1,c.multiply(e._infiniteProjection,e.modelView,e._modelViewInfiniteProjection))}function L(e){if(e._normalDirty){e._normalDirty=!1;var t=e._normal;c.getRotation(e.inverseModelView,t),u.transpose(t,t)}}function N(e){if(e._normal3DDirty){e._normal3DDirty=!1;var t=e._normal3D;c.getRotation(e.inverseModelView3D,t),u.transpose(t,t)}}function B(e){e._inverseNormalDirty&&(e._inverseNormalDirty=!1,c.getRotation(e.inverseModelView,e._inverseNormal))}function F(e){e._inverseNormal3DDirty&&(e._inverseNormal3DDirty=!1,c.getRotation(e.inverseModelView3D,e._inverseNormal3D))}function z(e){e._encodedCameraPositionMCDirty&&(e._encodedCameraPositionMCDirty=!1,c.multiplyByPoint(e.inverseModel,e._cameraPosition,G),s.fromCartesian(G,e._encodedCameraPositionMC))}function V(e,t,i,n,a,s,u,h){var p=H;p.x=e.y,p.y=e.z,p.z=e.x;var f=q;f.x=i.y,f.y=i.z,f.z=i.x;var v=j;v.x=n.y,v.y=n.z,v.z=n.x;var g=Y;g.x=t.y,g.y=t.z,g.z=t.x,s===m.SCENE2D&&(p.z=.5*a);var _=u.unproject(p,X);_.longitude=l.clamp(_.longitude,-Math.PI,Math.PI),_.latitude=l.clamp(_.latitude,-l.PI_OVER_TWO,l.PI_OVER_TWO);var y=u.ellipsoid,C=y.cartographicToCartesian(_,Z),w=d.eastNorthUpToFixedFrame(C,y,Q);return c.multiplyByPointAsVector(w,f,f),c.multiplyByPointAsVector(w,v,v),c.multiplyByPointAsVector(w,g,g),o(h)||(h=new c),h[0]=f.x,h[1]=v.x,h[2]=-g.x,h[3]=0,h[4]=f.y,h[5]=v.y,h[6]=-g.y,h[7]=0,h[8]=f.z,h[9]=v.z,h[10]=-g.z,h[11]=0,h[12]=-r.dot(f,C),h[13]=-r.dot(v,C),h[14]=r.dot(g,C),h[15]=1,h}var k=function(){this._viewport=new e,this._viewportCartesian4=new i,this._viewportDirty=!1,this._viewportOrthographicMatrix=c.clone(c.IDENTITY),this._viewportTransformation=c.clone(c.IDENTITY),this._model=c.clone(c.IDENTITY),this._view=c.clone(c.IDENTITY),this._inverseView=c.clone(c.IDENTITY),this._projection=c.clone(c.IDENTITY),this._infiniteProjection=c.clone(c.IDENTITY),this._entireFrustum=new t,this._currentFrustum=new t,this._frameState=void 0,this._temeToPseudoFixed=u.clone(c.IDENTITY),this._view3DDirty=!0,this._view3D=new c,this._inverseView3DDirty=!0,this._inverseView3D=new c,this._inverseModelDirty=!0,this._inverseModel=new c,this._inverseTransposeModelDirty=!0,this._inverseTransposeModel=new u,this._viewRotation=new u,this._inverseViewRotation=new u,this._viewRotation3D=new u,this._inverseViewRotation3D=new u,this._inverseProjectionDirty=!0,this._inverseProjection=new c,this._inverseProjectionOITDirty=!0,this._inverseProjectionOIT=new c,this._modelViewDirty=!0,this._modelView=new c,this._modelView3DDirty=!0,this._modelView3D=new c,this._modelViewRelativeToEyeDirty=!0,this._modelViewRelativeToEye=new c,this._inverseModelViewDirty=!0,this._inverseModelView=new c,this._inverseModelView3DDirty=!0,this._inverseModelView3D=new c,this._viewProjectionDirty=!0,this._viewProjection=new c,this._inverseViewProjectionDirty=!0,this._inverseViewProjection=new c,this._modelViewProjectionDirty=!0,this._modelViewProjection=new c,this._inverseModelViewProjectionDirty=!0,this._inverseModelViewProjection=new c,this._modelViewProjectionRelativeToEyeDirty=!0,this._modelViewProjectionRelativeToEye=new c,this._modelViewInfiniteProjectionDirty=!0,this._modelViewInfiniteProjection=new c,this._normalDirty=!0,this._normal=new u,this._normal3DDirty=!0,this._normal3D=new u,this._inverseNormalDirty=!0,this._inverseNormal=new u,this._inverseNormal3DDirty=!0,this._inverseNormal3D=new u,this._encodedCameraPositionMCDirty=!0,this._encodedCameraPositionMC=new s,this._cameraPosition=new r,this._sunPositionWC=new r,this._sunPositionColumbusView=new r,this._sunDirectionWC=new r,this._sunDirectionEC=new r,this._moonDirectionEC=new r,this._mode=void 0,this._mapProjection=void 0,this._cameraDirection=new r,this._cameraRight=new r,this._cameraUp=new r,this._frustum2DWidth=0,this._eyeHeight2D=new t,this._resolutionScale=1};a(k.prototype,{frameState:{get:function(){return this._frameState}},viewport:{get:function(){return this._viewport},set:function(t){if(!e.equals(t,this._viewport)){e.clone(t,this._viewport);var r=this._viewport,i=this._viewportCartesian4;i.x=r.x,i.y=r.y,i.z=r.width,i.w=r.height,this._viewportDirty=!0}}},viewportCartesian4:{get:function(){return this._viewportCartesian4}},viewportOrthographic:{get:function(){return C(this),this._viewportOrthographicMatrix}},viewportTransformation:{get:function(){return C(this),this._viewportTransformation}},model:{get:function(){return this._model},set:function(e){c.clone(e,this._model),this._modelView3DDirty=!0,this._inverseModelView3DDirty=!0,this._inverseModelDirty=!0,this._inverseTransposeModelDirty=!0,this._modelViewDirty=!0,this._inverseModelViewDirty=!0,this._viewProjectionDirty=!0,this._inverseViewProjectionDirty=!0,this._modelViewRelativeToEyeDirty=!0,this._inverseModelViewDirty=!0,this._modelViewProjectionDirty=!0,this._inverseModelViewProjectionDirty=!0,this._modelViewProjectionRelativeToEyeDirty=!0,this._modelViewInfiniteProjectionDirty=!0,this._normalDirty=!0,this._inverseNormalDirty=!0,this._normal3DDirty=!0,this._inverseNormal3DDirty=!0,this._encodedCameraPositionMCDirty=!0}},inverseModel:{get:function(){return this._inverseModelDirty&&(this._inverseModelDirty=!1,c.inverse(this._model,this._inverseModel)),this._inverseModel}},inverseTranposeModel:{get:function(){var e=this._inverseTransposeModel;return this._inverseTransposeModelDirty&&(this._inverseTransposeModelDirty=!1,c.getRotation(this.inverseModel,e),u.transpose(e,e)),e}},view:{get:function(){return this._view}},view3D:{get:function(){return this._view3DDirty&&(this._mode===m.SCENE3D?c.clone(this._view,this._view3D):V(this._cameraPosition,this._cameraDirection,this._cameraRight,this._cameraUp,this._frustum2DWidth,this._mode,this._mapProjection,this._view3D),c.getRotation(this._view3D,this._viewRotation3D),this._view3DDirty=!1),this._view3D}},viewRotation:{get:function(){return this._viewRotation}},viewRotation3D:{get:function(){return this.view3D,this._viewRotation3D}},inverseView:{get:function(){return this._inverseView}},inverseView3D:{get:function(){return this._inverseView3DDirty&&(c.inverseTransformation(this.view3D,this._inverseView3D),c.getRotation(this._inverseView3D,this._inverseViewRotation3D),this._inverseView3DDirty=!1),this._inverseView3D}},inverseViewRotation:{get:function(){return this._inverseViewRotation}},inverseViewRotation3D:{get:function(){return this.inverseView3D,this._inverseViewRotation3D}},projection:{get:function(){return this._projection}},inverseProjection:{get:function(){return w(this),this._inverseProjection}},inverseProjectionOIT:{get:function(){return S(this),this._inverseProjectionOIT}},infiniteProjection:{get:function(){return this._infiniteProjection}},modelView:{get:function(){return E(this),this._modelView}},modelView3D:{get:function(){return b(this),this._modelView3D}},modelViewRelativeToEye:{get:function(){return D(this),this._modelViewRelativeToEye}},inverseModelView:{get:function(){return T(this),this._inverseModelView}},inverseModelView3D:{get:function(){return x(this),this._inverseModelView3D}},viewProjection:{get:function(){return P(this),this._viewProjection}},inverseViewProjection:{get:function(){return A(this),this._inverseViewProjection}},modelViewProjection:{get:function(){return M(this),this._modelViewProjection}},inverseModelViewProjection:{get:function(){return I(this),this._inverseModelViewProjection}},modelViewProjectionRelativeToEye:{get:function(){return R(this),this._modelViewProjectionRelativeToEye}},modelViewInfiniteProjection:{get:function(){return O(this),this._modelViewInfiniteProjection}},normal:{get:function(){return L(this),this._normal}},normal3D:{get:function(){return N(this),this._normal3D}},inverseNormal:{get:function(){return B(this),this._inverseNormal}},inverseNormal3D:{get:function(){return F(this),this._inverseNormal3D}},entireFrustum:{get:function(){return this._entireFrustum}},currentFrustum:{get:function(){return this._currentFrustum}},eyeHeight2D:{get:function(){return this._eyeHeight2D}},sunPositionWC:{get:function(){return this._sunPositionWC}},sunPositionColumbusView:{get:function(){return this._sunPositionColumbusView}},sunDirectionWC:{get:function(){return this._sunDirectionWC}},sunDirectionEC:{get:function(){return this._sunDirectionEC}},moonDirectionEC:{get:function(){return this._moonDirectionEC}},encodedCameraPositionMCHigh:{get:function(){return z(this),this._encodedCameraPositionMC.high}},encodedCameraPositionMCLow:{get:function(){return z(this),this._encodedCameraPositionMC.low}},temeToPseudoFixedMatrix:{get:function(){return this._temeToPseudoFixed}},resolutionScale:{get:function(){return this._resolutionScale}}});var U=new u,W=new n;k.prototype.updateFrustum=function(e){v(this,e.projectionMatrix),o(e.infiniteProjectionMatrix)&&g(this,e.infiniteProjectionMatrix),this._currentFrustum.x=e.near,this._currentFrustum.y=e.far},k.prototype.update=function(e,t){this._mode=t.mode,this._mapProjection=t.mapProjection;var r=e._canvas;this._resolutionScale=r.width/r.clientWidth;var i=t.camera;p(this,i.viewMatrix),f(this,i.inverseViewMatrix),_(this,i),t.mode===m.SCENE2D?(this._frustum2DWidth=i.frustum.right-i.frustum.left,this._eyeHeight2D.x=.5*this._frustum2DWidth,this._eyeHeight2D.y=this._eyeHeight2D.x*this._eyeHeight2D.x):(this._frustum2DWidth=0,this._eyeHeight2D.x=0,this._eyeHeight2D.y=0),y(this,t),this._entireFrustum.x=i.frustum.near,this._entireFrustum.y=i.frustum.far,this.updateFrustum(i.frustum),this._frameState=t,this._temeToPseudoFixed=d.computeTemeToPseudoFixedMatrix(t.time,this._temeToPseudoFixed)};var G=new r,H=new r,q=new r,j=new r,Y=new r,X=new n,Z=new r,Q=new c;return k}),r("Renderer/VertexArray",["../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i,n,o){"use strict";function a(i,n,o){var a=r(n.vertexBuffer),s=r(n.value),l=n.value?n.value.length:n.componentsPerAttribute,u={index:t(n.index,o),enabled:t(n.enabled,!0),vertexBuffer:n.vertexBuffer,value:s?n.value.slice(0):void 0,componentsPerAttribute:l,componentDatatype:t(n.componentDatatype,e.FLOAT),normalize:t(n.normalize,!1),offsetInBytes:t(n.offsetInBytes,0),strideInBytes:t(n.strideInBytes,0)};if(a)u.vertexAttrib=function(e){e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer._getBuffer()),e.vertexAttribPointer(this.index,this.componentsPerAttribute,this.componentDatatype,this.normalize,this.strideInBytes,this.offsetInBytes),e.enableVertexAttribArray(this.index)},u.disableVertexAttribArray=function(e){e.disableVertexAttribArray(this.index)};else{switch(u.componentsPerAttribute){case 1:u.vertexAttrib=function(e){e.vertexAttrib1fv(this.index,this.value)};break;case 2:u.vertexAttrib=function(e){e.vertexAttrib2fv(this.index,this.value)};break;case 3:u.vertexAttrib=function(e){e.vertexAttrib3fv(this.index,this.value)};break;case 4:u.vertexAttrib=function(e){e.vertexAttrib4fv(this.index,this.value)}}u.disableVertexAttribArray=function(){}}i.push(u)}function s(e,t,i){for(var n=0;n<t.length;++n){var o=t[n];o.enabled&&o.vertexAttrib(e)}r(i)&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i._getBuffer())}var l=function(t,i,n,l){if(!r(n))throw new o("attributes is required.");var u,c=[],h=1;for(u=0;u<n.length;++u)a(c,n[u],u);for(u=0;u<c.length;++u){var d=c[u];if(r(d.vertexBuffer)){var m=d.strideInBytes||d.componentsPerAttribute*e.getSizeInBytes(d.componentDatatype);h=d.vertexBuffer.sizeInBytes/m;break}}for(var p={},f=0;f<c.length;++f){var v=c[f].index;if(p[v])throw new o("Index "+v+" is used by more than one attribute.");p[v]=!0}var g;r(i)&&(g=i.createVertexArrayOES(),i.bindVertexArrayOES(g),s(t,c,l),i.bindVertexArrayOES(null)),this._numberOfVertices=h,this._gl=t,this._vaoExtension=i,this._vao=g,this._attributes=c,this._indexBuffer=l};return i(l.prototype,{numberOfAttributes:{get:function(){return this._attributes.length}},numberOfVertices:{get:function(){return this._numberOfVertices}},indexBuffer:{get:function(){return this._indexBuffer}}}),l.prototype.getAttribute=function(e){return this._attributes[e]},l.prototype._bind=function(){r(this._vao)?this._vaoExtension.bindVertexArrayOES(this._vao):s(this._gl,this._attributes,this._indexBuffer)},l.prototype._unBind=function(){if(r(this._vao))this._vaoExtension.bindVertexArrayOES(null);else{for(var e=this._attributes,t=this._gl,i=0;i<e.length;++i){var n=e[i];n.enabled&&n.disableVertexAttribArray(t)}this._indexBuffer&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}},l.prototype.isDestroyed=function(){return!1},l.prototype.destroy=function(){for(var e=this._attributes,t=0;t<e.length;++t){var i=e[t].vertexBuffer;r(i)&&!i.isDestroyed()&&i.vertexArrayDestroyable&&i.destroy()}var o=this._indexBuffer;return r(o)&&!o.isDestroyed()&&o.vertexArrayDestroyable&&o.destroy(),r(this._vao)&&this._vaoExtension.deleteVertexArrayOES(this._vao),n(this)},l}),r("Renderer/Context",["../Core/clone","../Core/Color","../Core/ComponentDatatype","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Geometry","../Core/GeometryAttribute","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/PrimitiveType","../Core/RuntimeError","../Shaders/ViewportQuadVS","./Buffer","./BufferUsage","./ClearCommand","./CubeMap","./DrawCommand","./Framebuffer","./PassState","./PickFramebuffer","./PixelDatatype","./Renderbuffer","./RenderbufferFormat","./RenderState","./ShaderCache","./Texture","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap","./UniformState","./VertexArray"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B){"use strict";function F(e,t){var r="WebGL Error:  ";switch(t){case e.INVALID_ENUM:r+="INVALID_ENUM";break;case e.INVALID_VALUE:r+="INVALID_VALUE";break;case e.INVALID_OPERATION:r+="INVALID_OPERATION";break;case e.OUT_OF_MEMORY:r+="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:r+="CONTEXT_LOST_WEBGL lost";break;default:r+="Unknown ("+t+")"}return r}function z(e,t,r,i){for(var n=F(e,i)+": "+t.name+"(",o=0;o<r.length;++o)0!==o&&(n+=", "),n+=r[o];return n+=");"}function V(e,t,r){var i=e.getError();if(i!==e.NO_ERROR)throw new v(z(e,t,r,i))}function k(e,t,r){return{get:function(){var i=e[t];return r(e,"get: "+t,i),e[t]},set:function(i){e[t]=i,r(e,"set: "+t,i)}}}function U(e,t){function r(r){return function(){var i=r.apply(e,arguments);return t(e,r,arguments),i}}if(!t)return e;var i={};for(var n in e){var o=e[n];"function"==typeof o?i[n]=r(o):Object.defineProperty(i,n,k(e,n,t))}return i}function W(e,t){for(var r=t.length,i=0;r>i;++i){var n=e.getExtension(t[i]);if(n)return n}return void 0}function G(e,t,r,i){var n;"number"==typeof r?n=r:"object"==typeof r&&"number"==typeof r.byteLength&&(n=r.byteLength);var o=e.createBuffer();return e.bindBuffer(t,o),e.bufferData(t,r,i),e.bindBuffer(t,null),new _(e,t,n,i,o)}function H(e){if(e.validateFramebuffer){var t=e._gl,r=t.checkFramebufferStatus(t.FRAMEBUFFER);if(r!==t.FRAMEBUFFER_COMPLETE){var i;switch(r){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:i="Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.";break;case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:i="Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.";break;case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:i="Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.";break;case t.FRAMEBUFFER_UNSUPPORTED:i="Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions."}throw new l(i)}}}function q(e,t,r){var i=e._currentRenderState;i!==t&&(e._currentRenderState=t,M.partialApply(e._gl,i,t,r))}function j(e,t){if(t!==e._currentFramebuffer){e._currentFramebuffer=t;var r=it;if(o(t))t._bind(),H(e,t),r=t._getActiveColorAttachments();else{var i=e._gl;i.bindFramebuffer(i.FRAMEBUFFER,null)}e.drawBuffers&&e._drawBuffers.drawBuffersWEBGL(r)}}function Y(e,t,r,i,o,a){var s=n(n(o,r.renderState),e._defaultRenderState);j(e,t);var l=n(a,r.shaderProgram);l._bind(),e._maxFrameTextureUnitIndex=Math.max(e._maxFrameTextureUnitIndex,l.maximumTextureUnitIndex),q(e,s,i)}function X(e,t,r){var i=t.primitiveType,a=t.vertexArray,s=t.offset,l=t.count;e._us.model=n(t.modelMatrix,m.IDENTITY);var u=n(r,t.shaderProgram);u._setUniforms(t.uniformMap,e._us,e.validateShaderProgram);var c=a.indexBuffer;o(c)?(s*=c.bytesPerIndex,l=n(l,c.numberOfIndices),a._bind(),e._gl.drawElements(i,l,c.indexDatatype,s),a._unBind()):(l=n(l,a.numberOfVertices),a._bind(),e._gl.drawArrays(i,s,l),a._unBind())}function Z(e){return e.values.length/e.componentsPerAttribute}function Q(e){return r.getSizeInBytes(e.componentDatatype)*e.componentsPerAttribute}function J(e){var t,i,n,a=[];for(i in e)e.hasOwnProperty(i)&&o(e[i])&&o(e[i].values)&&(a.push(i),e[i].componentDatatype===r.DOUBLE&&(e[i].componentDatatype=r.FLOAT,e[i].values=r.createTypedArray(r.FLOAT,e[i].values)));var s,l=a.length;if(l>0)for(s=Z(e[a[0]]),t=1;l>t;++t){var u=Z(e[a[t]]);if(u!==s)throw new v("Each attribute list must have the same number of vertices.  Attribute "+a[t]+" has a different number of vertices "+"("+u.toString()+")"+" than attribute "+a[0]+" ("+s.toString()+").")}a.sort(function(t,i){return r.getSizeInBytes(e[i].componentDatatype)-r.getSizeInBytes(e[t].componentDatatype)});var c=0,h={};for(t=0;l>t;++t)i=a[t],n=e[i],h[i]=c,c+=Q(n);if(c>0){var d=r.getSizeInBytes(e[a[0]].componentDatatype),m=c%d;0!==m&&(c+=d-m);var p=s*c,f=new ArrayBuffer(p),g={};for(t=0;l>t;++t){i=a[t];var _=r.getSizeInBytes(e[i].componentDatatype);g[i]={pointer:r.createTypedArray(e[i].componentDatatype,f),index:h[i]/_,strideInComponentType:c/_}
}for(t=0;s>t;++t)for(var y=0;l>y;++y){i=a[y],n=e[i];for(var C=n.values,w=g[i],S=w.pointer,E=n.componentsPerAttribute,b=0;E>b;++b)S[w.index+b]=C[t*E+b];w.index+=w.strideInComponentType}return{buffer:f,offsetsInBytes:h,vertexSizeInBytes:c}}return void 0}function K(e,t,r){this._pickObjects=e,this.key=t,this.color=r}var $=function(r,a){if("undefined"==typeof WebGLRenderingContext)throw new v("The browser does not support WebGL.  Visit http://get.webgl.org.");this._canvas=r,a=e(a,!0),a=n(a,{}),a.allowTextureFilterAnisotropic=n(a.allowTextureFilterAnisotropic,!0);var s=n(a.webgl,{});if(s.alpha=n(s.alpha,!1),s.stencil=n(s.stencil,!1),s.failIfMajorPerformanceCaveat=n(s.failIfMajorPerformanceCaveat,!0),this._originalGLContext=r.getContext("webgl",s)||r.getContext("experimental-webgl",s)||void 0,!o(this._originalGLContext))throw new v("The browser supports WebGL, but initialization failed.");this._id=i(),this.validateFramebuffer=!1,this.validateShaderProgram=!1,this.logShaderCompilation=!1,this._throwOnWebGLError=!1,this._shaderCache=new D(this);var l=this._gl=this._originalGLContext;this._version=l.getParameter(l.VERSION),this._shadingLanguageVersion=l.getParameter(l.SHADING_LANGUAGE_VERSION),this._vendor=l.getParameter(l.VENDOR),this._renderer=l.getParameter(l.RENDERER),this._redBits=l.getParameter(l.RED_BITS),this._greenBits=l.getParameter(l.GREEN_BITS),this._blueBits=l.getParameter(l.BLUE_BITS),this._alphaBits=l.getParameter(l.ALPHA_BITS),this._depthBits=l.getParameter(l.DEPTH_BITS),this._stencilBits=l.getParameter(l.STENCIL_BITS),this._maximumCombinedTextureImageUnits=l.getParameter(l.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this._maximumCubeMapSize=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),this._maximumFragmentUniformVectors=l.getParameter(l.MAX_FRAGMENT_UNIFORM_VECTORS),this._maximumTextureImageUnits=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),this._maximumRenderbufferSize=l.getParameter(l.MAX_RENDERBUFFER_SIZE),this._maximumTextureSize=l.getParameter(l.MAX_TEXTURE_SIZE),this._maximumVaryingVectors=l.getParameter(l.MAX_VARYING_VECTORS),this._maximumVertexAttributes=l.getParameter(l.MAX_VERTEX_ATTRIBS),this._maximumVertexTextureImageUnits=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._maximumVertexUniformVectors=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),this._aliasedLineWidthRange=l.getParameter(l.ALIASED_LINE_WIDTH_RANGE),this._aliasedPointSizeRange=l.getParameter(l.ALIASED_POINT_SIZE_RANGE),this._maximumViewportDimensions=l.getParameter(l.MAX_VIEWPORT_DIMS),this._antialias=l.getContextAttributes().antialias,this._standardDerivatives=W(l,["OES_standard_derivatives"]),this._elementIndexUint=W(l,["OES_element_index_uint"]),this._depthTexture=W(l,["WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"]),this._textureFloat=W(l,["OES_texture_float"]);var u=a.allowTextureFilterAnisotropic?W(l,["EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic"]):void 0;this._textureFilterAnisotropic=u,this._maximumTextureFilterAnisotropy=o(u)?l.getParameter(u.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,this._vertexArrayObject=W(l,["OES_vertex_array_object"]),this._fragDepth=W(l,["EXT_frag_depth"]),this._drawBuffers=W(l,["WEBGL_draw_buffers"]),this._maximumDrawBuffers=o(this._drawBuffers)?l.getParameter(this._drawBuffers.MAX_DRAW_BUFFERS_WEBGL):1,this._maximumColorAttachments=o(this._drawBuffers)?l.getParameter(this._drawBuffers.MAX_COLOR_ATTACHMENTS_WEBGL):1;var c=l.getParameter(l.COLOR_CLEAR_VALUE);this._clearColor=new t(c[0],c[1],c[2],c[3]),this._clearDepth=l.getParameter(l.DEPTH_CLEAR_VALUE),this._clearStencil=l.getParameter(l.STENCIL_CLEAR_VALUE);var h=new N,d=new b(this),m=this.createRenderState();this._defaultPassState=d,this._defaultRenderState=m,this._defaultTexture=void 0,this._defaultCubeMap=void 0,this._us=h,this._currentRenderState=m,this._currentFramebuffer=void 0,this._maxFrameTextureUnitIndex=0,this._pickObjects={},this._nextPickColor=new Uint32Array(1),this.options=a,this.cache={},M.apply(l,m,d)},et={};a($.prototype,{id:{get:function(){return this._id}},canvas:{get:function(){return this._canvas}},shaderCache:{get:function(){return this._shaderCache}},uniformState:{get:function(){return this._us}},version:{get:function(){return this._version}},shadingLanguageVersion:{get:function(){return this._shadingLanguageVersion}},vendor:{get:function(){return this._vendor}},renderer:{get:function(){return this._renderer}},redBits:{get:function(){return this._redBits}},greenBits:{get:function(){return this._greenBits}},blueBits:{get:function(){return this._blueBits}},alphaBits:{get:function(){return this._alphaBits}},depthBits:{get:function(){return this._depthBits}},stencilBits:{get:function(){return this._stencilBits}},maximumCombinedTextureImageUnits:{get:function(){return this._maximumCombinedTextureImageUnits}},maximumCubeMapSize:{get:function(){return this._maximumCubeMapSize}},maximumFragmentUniformVectors:{get:function(){return this._maximumFragmentUniformVectors}},maximumTextureImageUnits:{get:function(){return this._maximumTextureImageUnits}},maximumRenderbufferSize:{get:function(){return this._maximumRenderbufferSize}},maximumTextureSize:{get:function(){return this._maximumTextureSize}},maximumVaryingVectors:{get:function(){return this._maximumVaryingVectors}},maximumVertexAttributes:{get:function(){return this._maximumVertexAttributes}},maximumVertexTextureImageUnits:{get:function(){return this._maximumVertexTextureImageUnits}},maximumVertexUniformVectors:{get:function(){return this._maximumVertexUniformVectors}},minimumAliasedLineWidth:{get:function(){return this._aliasedLineWidthRange[0]}},maximumAliasedLineWidth:{get:function(){return this._aliasedLineWidthRange[1]}},minimumAliasedPointSize:{get:function(){return this._aliasedPointSizeRange[0]}},maximumAliasedPointSize:{get:function(){return this._aliasedPointSizeRange[1]}},maximumViewportWidth:{get:function(){return this._maximumViewportDimensions[0]}},maximumViewportHeight:{get:function(){return this._maximumViewportDimensions[1]}},antialias:{get:function(){return this._antialias}},standardDerivatives:{get:function(){return!!this._standardDerivatives}},elementIndexUint:{get:function(){return!!this._elementIndexUint}},depthTexture:{get:function(){return!!this._depthTexture}},floatingPointTexture:{get:function(){return!!this._textureFloat}},textureFilterAnisotropic:{get:function(){return!!this._textureFilterAnisotropic}},maximumTextureFilterAnisotropy:{get:function(){return this._maximumTextureFilterAnisotropy}},vertexArrayObject:{get:function(){return!!this._vertexArrayObject}},fragmentDepth:{get:function(){return!!this._fragDepth}},drawBuffers:{get:function(){return!!this._drawBuffers}},maximumDrawBuffers:{get:function(){return this._maximumDrawBuffers}},maximumColorAttachments:{get:function(){return this._maximumColorAttachments}},throwOnWebGLError:{get:function(){return this._throwOnWebGLError},set:function(e){this._throwOnWebGLError=e,this._gl=U(this._originalGLContext,e?V:null)}},defaultTexture:{get:function(){return void 0===this._defaultTexture&&(this._defaultTexture=this.createTexture2D({source:{width:1,height:1,arrayBufferView:new Uint8Array([255,255,255,255])}})),this._defaultTexture}},defaultCubeMap:{get:function(){if(void 0===this._defaultCubeMap){var e={width:1,height:1,arrayBufferView:new Uint8Array([255,255,255,255])};this._defaultCubeMap=this.createCubeMap({source:{positiveX:e,negativeX:e,positiveY:e,negativeY:e,positiveZ:e,negativeZ:e}})}return this._defaultCubeMap}},drawingBufferHeight:{get:function(){return this._gl.drawingBufferHeight}},drawingBufferWidth:{get:function(){return this._gl.drawingBufferWidth}},defaultFramebuffer:{get:function(){return et}}}),$.prototype.replaceShaderProgram=function(e,t,r,i){return this.shaderCache.replaceShaderProgram(e,t,r,i)},$.prototype.createShaderProgram=function(e,t,r){return this.shaderCache.getShaderProgram(e,t,r)},$.prototype.createVertexBuffer=function(e,t){return G(this._gl,this._gl.ARRAY_BUFFER,e,t)},$.prototype.createIndexBuffer=function(e,t,r){if(r===h.UNSIGNED_INT&&!this.elementIndexUint)throw new l("IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system.  Check context.elementIndexUint.");var i=h.getSizeInBytes(r),n=this._gl,o=G(n,n.ELEMENT_ARRAY_BUFFER,e,t),s=o.sizeInBytes/i;return a(o,{indexDatatype:{get:function(){return r}},bytesPerIndex:{get:function(){return i}},numberOfIndices:{get:function(){return s}}}),o},$.prototype.createVertexArray=function(e,t){return new B(this._gl,this._vertexArrayObject,e,t)},$.prototype.createTexture2D=function(e){return new I(this,e)},$.prototype.createTexture2DFromFramebuffer=function(e,t,r,i,a,s){var l=this._gl;e=n(e,p.RGB),t=n(t,0),r=n(r,0),i=n(i,l.drawingBufferWidth),a=n(a,l.drawingBufferHeight);var u=new I(this,{width:i,height:a,pixelFormat:e,source:{framebuffer:o(s)?s:this.defaultFramebuffer,xOffset:t,yOffset:r,width:i,height:a}});return u},$.prototype.createCubeMap=function(e){function t(e,t){t.arrayBufferView?f.texImage2D(e,0,c,u,u,0,c,h,t.arrayBufferView):f.texImage2D(e,0,c,c,h,t)}e=n(e,n.EMPTY_OBJECT);var r,i,a=e.source;if(o(a)){var s=[a.positiveX,a.negativeX,a.positiveY,a.negativeY,a.positiveZ,a.negativeZ];r=s[0].width,i=s[0].height}else r=e.width,i=e.height;var u=r,c=n(e.pixelFormat,p.RGBA),h=n(e.pixelDatatype,x.UNSIGNED_BYTE);if(h===x.FLOAT&&!this.floatingPointTexture)throw new l("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.");var d=e.preMultiplyAlpha||c===p.RGB||c===p.LUMINANCE,m=n(e.flipY,!0),f=this._gl,v=f.TEXTURE_CUBE_MAP,g=f.createTexture();return f.activeTexture(f.TEXTURE0),f.bindTexture(v,g),o(a)?(f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,d),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,m),t(f.TEXTURE_CUBE_MAP_POSITIVE_X,a.positiveX),t(f.TEXTURE_CUBE_MAP_NEGATIVE_X,a.negativeX),t(f.TEXTURE_CUBE_MAP_POSITIVE_Y,a.positiveY),t(f.TEXTURE_CUBE_MAP_NEGATIVE_Y,a.negativeY),t(f.TEXTURE_CUBE_MAP_POSITIVE_Z,a.positiveZ),t(f.TEXTURE_CUBE_MAP_NEGATIVE_Z,a.negativeZ)):(f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_X,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_Y,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_Z,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,c,u,u,0,c,h,null)),f.bindTexture(v,null),new w(f,this._textureFilterAnisotropic,v,g,c,h,u,d,m)},$.prototype.createFramebuffer=function(e){return new E(this._gl,this._maximumColorAttachments,e)},$.prototype.createRenderbuffer=function(e){var t=this._gl;e=n(e,n.EMPTY_OBJECT);var r=n(e.format,A.RGBA4),i=o(e.width)?e.width:t.drawingBufferWidth,a=o(e.height)?e.height:t.drawingBufferHeight;return new P(t,r,i,a)};var tt=0,rt={};$.prototype.createRenderState=function(e){var t=JSON.stringify(e),r=rt[t];if(o(r))return r;var i=new M(this,e),n=JSON.stringify(i);return r=rt[n],o(r)||(i.id=tt++,r=i,rt[n]=r),rt[t]=r,r},$.prototype.createSampler=function(e){var t={wrapS:n(e.wrapS,L.CLAMP_TO_EDGE),wrapT:n(e.wrapT,L.CLAMP_TO_EDGE),minificationFilter:n(e.minificationFilter,O.LINEAR),magnificationFilter:n(e.magnificationFilter,R.LINEAR),maximumAnisotropy:o(e.maximumAnisotropy)?e.maximumAnisotropy:1};return t};var it;"undefined"!=typeof WebGLRenderingContext&&(it=[WebGLRenderingContext.BACK]);var nt=new C;$.prototype.clear=function(e,r){e=n(e,nt),r=n(r,this._defaultPassState);var i=this._gl,a=0,s=e.color,l=e.depth,u=e.stencil;o(s)&&(t.equals(this._clearColor,s)||(t.clone(s,this._clearColor),i.clearColor(s.red,s.green,s.blue,s.alpha)),a|=i.COLOR_BUFFER_BIT),o(l)&&(l!==this._clearDepth&&(this._clearDepth=l,i.clearDepth(l)),a|=i.DEPTH_BUFFER_BIT),o(u)&&(u!==this._clearStencil&&(this._clearStencil=u,i.clearStencil(u)),a|=i.STENCIL_BUFFER_BIT);var c=n(e.renderState,this._defaultRenderState);q(this,c,r);var h=n(e.framebuffer,r.framebuffer);j(this,h),i.clear(a)},$.prototype.draw=function(e,t,r,i){t=n(t,this._defaultPassState);var o=n(e.framebuffer,t.framebuffer);Y(this,o,e,t,r,i),X(this,e,i)},$.prototype.endFrame=function(){var e=this._gl;e.useProgram(null),this._currentFramebuffer=void 0,e.bindFramebuffer(e.FRAMEBUFFER,null),this.drawBuffers&&this._drawBuffers.drawBuffersWEBGL(it);var t=this._maxFrameTextureUnitIndex;this._maxFrameTextureUnitIndex=0;for(var r=0;t>r;++r)e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,null),e.bindTexture(e.TEXTURE_CUBE_MAP,null)},$.prototype.readPixels=function(e){var t=this._gl;e=e||{};var r=Math.max(e.x||0,0),i=Math.max(e.y||0,0),n=e.width||t.drawingBufferWidth,o=e.height||t.drawingBufferHeight,a=e.framebuffer,s=new Uint8Array(4*n*o);return j(this,a),t.readPixels(r,i,n,o,t.RGBA,t.UNSIGNED_BYTE,s),s},$.prototype.createVertexArrayFromGeometry=function(e){e=n(e,n.EMPTY_OBJECT);var t,i,a,s=n(e.geometry,n.EMPTY_OBJECT),l=n(e.bufferUsage,y.DYNAMIC_DRAW),c=n(e.attributeLocations,n.EMPTY_OBJECT),m=n(e.interleave,!1),p=e.vertexArrayAttributes,f=o(p)?p:[],v=s.attributes;if(m){var g=J(v);if(o(g)){a=this.createVertexBuffer(g.buffer,l);var _=g.offsetsInBytes,C=g.vertexSizeInBytes;for(t in v)v.hasOwnProperty(t)&&o(v[t])&&(i=v[t],o(i.values)?f.push({index:c[t],vertexBuffer:a,componentDatatype:i.componentDatatype,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize,offsetInBytes:_[t],strideInBytes:C}):f.push({index:c[t],value:i.value,componentDatatype:i.componentDatatype,normalize:i.normalize}))}}else for(t in v)if(v.hasOwnProperty(t)&&o(v[t])){i=v[t];var w=i.componentDatatype;w===r.DOUBLE&&(w=r.FLOAT),a=void 0,o(i.values)&&(a=this.createVertexBuffer(r.createTypedArray(w,i.values),l)),f.push({index:c[t],vertexBuffer:a,value:i.value,componentDatatype:w,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize})}var S,E=s.indices;return o(E)&&(S=u.computeNumberOfVertices(s)>d.SIXTY_FOUR_KILOBYTES&&this.elementIndexUint?this.createIndexBuffer(new Uint32Array(E),l,h.UNSIGNED_INT):this.createIndexBuffer(new Uint16Array(E),l,h.UNSIGNED_SHORT)),this.createVertexArray(f,S)};var ot={position:0,textureCoordinates:1};return $.prototype.createViewportQuadCommand=function(e,t){var i=this.cache.viewportQuad_vertexArray;if(!o(i)){var a=new u({attributes:{position:new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:[-1,-1,1,-1,1,1,-1,1]}),textureCoordinates:new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:[0,0,1,0,1,1,0,1]})},indices:new Uint16Array([0,1,2,0,2,3]),primitiveType:f.TRIANGLES});i=this.createVertexArrayFromGeometry({geometry:a,attributeLocations:{position:0,textureCoordinates:1},bufferUsage:y.STATIC_DRAW,interleave:!0}),this.cache.viewportQuad_vertexArray=i}return t=n(t,n.EMPTY_OBJECT),new S({vertexArray:i,primitiveType:f.TRIANGLES,renderState:t.renderState,shaderProgram:this.createShaderProgram(g,e,ot),uniformMap:t.uniformMap,owner:t.owner,framebuffer:t.framebuffer})},$.prototype.createPickFramebuffer=function(){return new T(this)},$.prototype.getObjectByPickColor=function(e){return this._pickObjects[e.toRgba()]},a(K.prototype,{object:{get:function(){return this._pickObjects[this.key]},set:function(e){this._pickObjects[this.key]=e}}}),K.prototype.destroy=function(){return delete this._pickObjects[this.key],void 0},$.prototype.createPickId=function(e){++this._nextPickColor[0];var r=this._nextPickColor[0];if(0===r)throw new v("Out of unique Pick IDs.");return this._pickObjects[r]=e,new K(this._pickObjects,r,t.fromRgba(r))},$.prototype.isDestroyed=function(){return!1},$.prototype.destroy=function(){var e=this.cache;for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];o(r.destroy)&&r.destroy()}return this._shaderCache=this._shaderCache.destroy(),this._defaultTexture=this._defaultTexture&&this._defaultTexture.destroy(),this._defaultCubeMap=this._defaultCubeMap&&this._defaultCubeMap.destroy(),s(this)},$}),r("Renderer/loadCubeMap",["../Core/defined","../Core/DeveloperError","../Core/loadImage","../ThirdParty/when"],function(e,t,r,i){"use strict";var n=function(e,t,n){var o=[r(t.positiveX,n),r(t.negativeX,n),r(t.positiveY,n),r(t.negativeY,n),r(t.positiveZ,n),r(t.negativeZ,n)];return i.all(o,function(t){return e.createCubeMap({source:{positiveX:t[0],negativeX:t[1],positiveY:t[2],negativeY:t[3],positiveZ:t[4],negativeZ:t[5]}})})};return n}),r("Scene/DiscardMissingTileImagePolicy",["../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/getImagePixels","../Core/loadImageViaBlob","../ThirdParty/when"],function(e,t,r,i,n,o){"use strict";var a=function(a){function s(e){t(e.blob)&&(u._missingImageByteLength=e.blob.size);var r=i(e);if(a.disableCheckIfAllPixelsAreTransparent){for(var n=!0,o=e.width,s=a.pixelsToCheck,l=0,c=s.length;n&&c>l;++l){var h=s[l],d=4*h.x+h.y*o,m=r[d+3];m>0&&(n=!1)}n&&(r=void 0)}u._missingImagePixels=r,u._isReady=!0}function l(){u._missingImagePixels=void 0,u._isReady=!0}if(a=e(a,e.EMPTY_OBJECT),!t(a.missingImageUrl))throw new r("options.missingImageUrl is required.");if(!t(a.pixelsToCheck))throw new r("options.pixelsToCheck is required.");this._pixelsToCheck=a.pixelsToCheck,this._missingImagePixels=void 0,this._missingImageByteLength=void 0,this._isReady=!1;var u=this;o(n(a.missingImageUrl),s,l)};return a.prototype.isReady=function(){return this._isReady},a.prototype.shouldDiscardImage=function(e){if(!this._isReady)throw new r("shouldDiscardImage must not be called before the discard policy is ready.");var n=this._pixelsToCheck,o=this._missingImagePixels;if(!t(o))return!1;if(t(e.blob)&&e.blob.size!==this._missingImageByteLength)return!1;for(var a=i(e),s=e.width,l=0,u=n.length;u>l;++l)for(var c=n[l],h=4*c.x+c.y*s,d=0;4>d;++d){var m=h+d;if(a[m]!==o[m])return!1}return!0},a}),r("Scene/ImageryProvider",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/loadImage","../Core/loadImageViaBlob","../Core/throttleRequestByServer"],function(e,t,r,i,n,o){"use strict";var a=function(){this.defaultAlpha=void 0,this.defaultBrightness=void 0,this.defaultContrast=void 0,this.defaultHue=void 0,this.defaultSaturation=void 0,this.defaultGamma=void 0,r.throwInstantiationError()};return t(a.prototype,{ready:{get:r.throwInstantiationError},rectangle:{get:r.throwInstantiationError},tileWidth:{get:r.throwInstantiationError},tileHeight:{get:r.throwInstantiationError},maximumLevel:{get:r.throwInstantiationError},minimumLevel:{get:r.throwInstantiationError},tilingScheme:{get:r.throwInstantiationError},tileDiscardPolicy:{get:r.throwInstantiationError},errorEvent:{get:r.throwInstantiationError},credit:{get:r.throwInstantiationError},proxy:{get:r.throwInstantiationError},hasAlphaChannel:{get:r.throwInstantiationError}}),a.prototype.getTileCredits=r.throwInstantiationError,a.prototype.requestImage=r.throwInstantiationError,a.prototype.pickFeatures=r.throwInstantiationError,a.loadImage=function(t,r){return e(t.tileDiscardPolicy)?o(r,n):o(r,i)},a}),r("Scene/ArcGisMapServerImageryProvider",["../Core/Cartesian2","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicProjection","../Core/GeographicTilingScheme","../Core/jsonp","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorProjection","../Core/WebMercatorTilingScheme","../ThirdParty/when","./DiscardMissingTileImagePolicy","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,t,r,n){var o;if(e._useTiles)o=e._url+"/tile/"+n+"/"+r+"/"+t;else{var a=e._tilingScheme.tileXYToNativeRectangle(t,r,n),s=a.west+"%2C"+a.south+"%2C"+a.east+"%2C"+a.north;o=e._url+"/export?",o+="bbox="+s,o+="&bboxSR=4326&size=256%2C256&imageSR=4326&format=png&transparent=true&f=image"}var l=e._proxy;return i(l)&&(o=l.getURL(o)),o}var _=function(n){function o(r){var n=r.tileInfo;if(C._useTiles&&i(n)){if(C._tileWidth=n.rows,C._tileHeight=n.cols,102100===n.spatialReference.wkid||102113===n.spatialReference.wkid)C._tilingScheme=new m;else{if(4326!==r.tileInfo.spatialReference.wkid){var o="Tile spatial reference WKID "+r.tileInfo.spatialReference.wkid+" is not supported.";return y=h.handleError(y,C,C._errorEvent,o,void 0,void 0,void 0,_),void 0}C._tilingScheme=new l}if(C._maximumLevel=r.tileInfo.lods.length-1,i(r.fullExtent)){var a=C._tilingScheme.projection;if(i(r.fullExtent.spatialReference)&&i(r.fullExtent.spatialReference.wkid))if(102100===r.fullExtent.spatialReference.wkid||102113===r.fullExtent.spatialReference.wkid)a=new d;else{if(4326!==r.fullExtent.spatialReference.wkid){var u="fullExtent.spatialReference WKID "+r.fullExtent.spatialReference.wkid+" is not supported.";return y=h.handleError(y,C,C._errorEvent,u,void 0,void 0,void 0,_),void 0}a=new s}var p=a.unproject(new e(r.fullExtent.xmin,r.fullExtent.ymin)),v=a.unproject(new e(r.fullExtent.xmax,r.fullExtent.ymax));C._rectangle=new c(p.longitude,p.latitude,v.longitude,v.latitude)}else C._rectangle=C._tilingScheme.rectangle;i(C._tileDiscardPolicy)||(C._tileDiscardPolicy=new f({missingImageUrl:g(C,0,0,C._maximumLevel),pixelsToCheck:[new e(0,0),new e(200,20),new e(20,200),new e(80,110),new e(160,130)],disableCheckIfAllPixelsAreTransparent:!0})),C._useTiles=!0}else C._tileWidth=256,C._tileHeight=256,C._tilingScheme=new l,C._rectangle=C._tilingScheme.rectangle,C._useTiles=!1;i(r.copyrightText)&&r.copyrightText.length>0&&(C._credit=new t(r.copyrightText)),C._ready=!0,h.handleSuccess(y)}function v(){var e="An error occurred while accessing "+C._url+".";y=h.handleError(y,C,C._errorEvent,e,void 0,void 0,void 0,_)}function _(){var e=u(C._url,{parameters:{f:"json"},proxy:C._proxy});p(e,o,v)}n=r(n,{}),this._url=n.url,this._tileDiscardPolicy=n.tileDiscardPolicy,this._proxy=n.proxy,this._tileWidth=void 0,this._tileHeight=void 0,this._maximumLevel=void 0,this._tilingScheme=void 0,this._credit=void 0,this._useTiles=r(n.usePreCachedTilesIfAvailable,!0),this._rectangle=void 0,this._errorEvent=new a,this._ready=!1;var y,C=this;_()};return n(_.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},usingPrecachedTiles:{get:function(){return this._useTiles}},hasAlphaChannel:{get:function(){return!0}}}),_.prototype.getTileCredits=function(){return void 0},_.prototype.requestImage=function(e,t,r){var i=g(this,e,t,r);return v.loadImage(this,i)},_.prototype.pickFeatures=function(){return void 0},_}),r("Scene/BingMapsStyle",["../Core/freezeObject"],function(e){"use strict";var t={AERIAL:"Aerial",AERIAL_WITH_LABELS:"AerialWithLabels",ROAD:"Road",ORDNANCE_SURVEY:"OrdnanceSurvey",COLLINS_BART:"CollinsBart"};return e(t)}),r("Scene/BingMapsImageryProvider",["../Core/BingMapsApi","../Core/Cartesian2","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/jsonp","../Core/Math","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./BingMapsStyle","./DiscardMissingTileImagePolicy","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,t,r,i){var o=e._imageUrlTemplate,a=y.tileXYToQuadKey(t,r,i);o=o.replace("{quadkey}",a);var s=e._imageUrlSubdomains,l=(t+r+i)%s.length;o=o.replace("{subdomain}",s[l]);var u=e._proxy;return n(u)&&(o=u.getURL(o)),o}function _(e,t,r){++t;for(var i=[],n=0,o=e.length;o>n;++n){for(var a=e[n],s=a.coverageAreas,l=!1,u=0,h=a.coverageAreas.length;!l&&h>u;++u){var d=s[u];if(t>=d.zoomMin&&t<=d.zoomMax){var m=c.intersectWith(r,d.bbox,w);c.isEmpty(m)||(l=!0)}}l&&i.push(a.credit)}return i}var y=function S(o){function a(e){var i=e.resourceSets[0].resources[0];w._tileWidth=i.imageWidth,w._tileHeight=i.imageHeight,w._maximumLevel=i.zoomMax-1,w._imageUrlSubdomains=i.imageUrlSubdomains,w._imageUrlTemplate=i.imageUrl.replace("{culture}","");var o=w._tileProtocol;if(!n(o)){var a=document.location.protocol;o=/^http/.test(a)?a:"http:"}w._imageUrlTemplate=w._imageUrlTemplate.replace(/^http:/,o),n(w._tileDiscardPolicy)||(w._tileDiscardPolicy=new f({missingImageUrl:g(w,0,0,w._maximumLevel),pixelsToCheck:[new t(0,0),new t(120,140),new t(130,160),new t(200,50),new t(200,200)],disableCheckIfAllPixelsAreTransparent:!0}));var s=w._attributionList=i.imageryProviders;s||(s=w._attributionList=[]);for(var l=0,d=s.length;d>l;++l){var m=s[l];m.credit=new r(m.attribution);for(var p=m.coverageAreas,v=0,_=m.coverageAreas.length;_>v;++v){var C=p[v],S=C.bbox;C.bbox=new c(u.toRadians(S[1]),u.toRadians(S[0]),u.toRadians(S[3]),u.toRadians(S[2]))}}w._ready=!0,h.handleSuccess(y)}function v(){var e="An error occurred while accessing "+C+".";y=h.handleError(y,w,w._errorEvent,e,void 0,void 0,void 0,_)}function _(){var e=l(C,{callbackParameterName:"jsonp",proxy:w._proxy});m(e,a,v)}o=i(o,{}),this._key=e.getKey(o.key),this._url=o.url,this._tileProtocol=o.tileProtocol,this._mapStyle=i(o.mapStyle,p.AERIAL),this._tileDiscardPolicy=o.tileDiscardPolicy,this._proxy=o.proxy,this._credit=new r("Bing Imagery",S._logoData,"http://www.bing.com"),this.defaultGamma=1,(this._mapStyle===p.AERIAL||this._mapStyle===p.AERIAL_WITH_LABELS)&&(this.defaultGamma=1.3),this._tilingScheme=new d({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2}),this._tileWidth=void 0,this._tileHeight=void 0,this._maximumLevel=void 0,this._imageUrlTemplate=void 0,this._imageUrlSubdomains=void 0,this._errorEvent=new s,this._ready=!1;var y,C=this._url+"/REST/v1/Imagery/Metadata/"+this._mapStyle+"?incl=ImageryProviders&key="+this._key,w=this;_()};o(y.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},key:{get:function(){return this._key}},mapStyle:{get:function(){return this._mapStyle}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!1}}});var C=new c;y.prototype.getTileCredits=function(e,t,r){if(!this._ready)throw new a("getTileCredits must not be called before the imagery provider is ready.");var i=this._tilingScheme.tileXYToRectangle(e,t,r,C);return _(this._attributionList,r,i)},y.prototype.requestImage=function(e,t,r){var i=g(this,e,t,r);return v.loadImage(this,i)},y.prototype.pickFeatures=function(){return void 0},y._logoData="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAD0AAAAaCAYAAAAEy1RnAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH3gIDEgcPTMnXOQAAClZJREFUWMPdWGtsFNcV/u689uH1+sXaONhlWQzBENtxiUFBpBSLd60IpXHSNig4URtSYQUkRJNSi0igViVVVBJBaBsiAgKRQJSG8AgEHCCWU4iBCprY2MSgXfOI16y9D3s9Mzsztz9yB12WNU2i9Ecy0tHOzN4793zn3POdcy7BnRfJ8I7iB3SRDPeEExswLz8Y0DZIAYDIRGAgLQAm+7Xle31J3L3Anp1MZPY+BUBjorN332vgYhpgV1FRUd6TTz45ubq6OtDV1SXpuu5g//Oept9wNwlMyAi8IXDjyF245TsDTdivDMATCATGNDU1/WbhwoWPTZs2bWx1dXWhx+Oxrl+/PqTrus5t9W8KWEzjinTAYhro/xuBStwiIgBnJBLxKIoy1u/3V/r9/krDMMz3339/Z3t7e38ikUgCMDLEt8W+Q0cAI3McYTDDmZxh7DESG5Ni43jg9Gsa+X+OsxWxPSJTSj3JZFK5ZRVJErOzs8e6XC4fgGwALhbzDgAKU1hK28KEA6PMmTMn56233qpevnz5PQDcbJ7EzVUAuMrLy3MBeABkcWOEDELSyFe4y7iMoHkriZZlKYZh8ASHZDKpJJPJHAC5APIA5APIAeBlCjo5TwlpXnbOmTPHP3fu3KZVq1atZKBcDJQ9x7V48WJfc3Pzhp6enj+tXLnyR8w4MjdG4gyVDk7KICMClzKlLUrpbQMNw5AkScppbGz8cWdn57WjR4/2caw+DEBlYjO8wX1foZQWuN3uKZIklQD4G+fhlG0Yl8uVm5WVVW6app6dne0D0G8vnxbjJntHubCUOK/badZICyWanrJuAaeUknTQpmlKkUhEWbx48U8LCwtHhUKha+fPn+85fPhwV0tLyzUACSZx9jvMFhIByNFoVDEMw/qKB5HPvJfkUqBr9+7deklJyZ/j8bi5ffv2OAslieMLsG+m2DybT2QuzEQOsF5SUqJfvXo1yc2l6Xn6rgSRSCSEc+fOhVeuXLmwoqJixvTp0wcWLFgQ7unpudHR0dF97ty5z/fu3XseQJh5adjeerquy5ZlCalUivh8Pt8HH3ywzOPxyD09PZ81NjZ+2NnZaQEQx40b54vFYqaqquEVK1b4a2tr/WvWrDn18ssv144fP36SqqoD69ev371nz57rDLwAwHHkyJGfjRs3rtowDOv06dOnu7q6rs6bN2/s7Nmz9zIjDKenWoFZKg/AlMLCwl82Nzf/m3LX22+/fXb06NF/ALC8u7u7m6ZdkUhksL29/UpLS0vzunXrVgAoBzAaQBGAiY2NjUui0ei1RCLRFwwG/9PX19cVi8WCqqoOdHd3HysrK6sDMCccDl8IBoOtiqIsOnbs2D+i0eiV3t7ez8Ph8GeRSKRT07TB/v7+i1OnTp0HYBqABzs7O/+paVo0Fot1RyKRi/F4/Gp/f39XIpHoZnoUMn6wU+ZtRDaymwmxZFk2AWjvvvvuJ/F4PMn/n5+fn1VeXu6fOXNmbU1NzUOM4Bz8QqIoyg6HwxuLxfq3bdu2a+vWrW/09/dfKy0tffDVV199BEC20+n0ud3uQgBup9Pp83g8JYqieE+ePPnxxo0bt33xxRen8/Ly7n3hhRcWASh47bXX5pWVldWFw+GuXbt27XjzzTd3BoPBDq/XG1AUZRRHmAKPVfqaoKkgCCkA+oYNG84Eg0FHTU1N5ezZs8eWlJQ4CSF8/LvZYhJPQoQQpFKpwcrKyo1su9HBwUF99erVv588eXINgOOmacIwDEopdaZSKUIpxYkTJz6sr68/BMBav379RcMwZk2aNOl+AP+qq6t7xDTNVEVFxR+j0WgSAJk4ceKlTz/9tNzpdHpZvIvpjVW6pykhhBJCbkvwgiAQQogEQL558ybdtGlTsLm5OWJZdxZmlmWll5OUEEJN0zSGhob6GcOrALSzZ8/2apqWcLlc2axGACNRkRAimqaph0Kh68xIwwB0y7IMSZKcABz5+fkl8Xj8y2g0apOb5na7rYGBgS/JV54Q0qpAAoBKaS0jBWClg1ZVFeFw2AlgVF1dXeDpp5+eWVFRUVpcXOzgvQwAbrcbDJhdudlGpKZpGtx6JCcnRxIEQbQsS2PjbjM+AMvlchnMSBaXkr7ymCCIhmEYfMoVRVESBEHI0CaTTNubssUsQRBuubCtra33pZdeCk6YMCGwZs2aipqaGn9paWmuJEl3JP0bN258eeTIkRMABrm0YomiaImiKGVlZeWxLecAgBkzZvgdDkfWjRs3ggA0bpfpoiiahBCqKEqKAy2yULMA6MlkMp6Xl3cP1x2SWCwmFhQU+CmlFhfHNFOevpX4LcvSJUkyAeDQoUOh119//fpTTz01Zf78+UWBQCBHUZQ7yE/TNGPfvn0n33vvvSP79+//BECMeZsCMGRZNgRBgNPpHHXx4sVVDQ0Nf1+wYMGYJ554YikAevDgwUMA4oIgQJZlSggZdDqdBiGEZGdn6ww0tQlJURTT4/EMHz9+/MCjjz7622AwuHbZsmVbiouLvWvXrm1wOp3ZqVRqaKQTIInf1gAMl8ulU0q1CxcuBGOxmL5u3bryQCDgycrKEjORXGtra8eOHTsOHz169OyVK1cuA+hlRYrGlNRkWR7UNO2mYRiaz+cb3dLS8gYhhOi6Hj116tSOVatWHQNALcsaME0zLghClBDSZ9+zQsZ2SoJS2udwOKLPPffcvsrKyrJAIPDQ/v37txiGofX19V3r7e29UlBQMHqEVpjwnrYA6PF4PK6q6s2qqqqpZWVlitvtljOB7enpiWzbtu3wgQMHTre1tV0E0MeKkkGuIhMAqHv37u30er3Px+NxlyiKygMPPOAnhFiXLl0Kbd68uYPNsXbu3Lk6mUwaqqr2btmyZUdtbe3hd955pwvAEFNcO3jw4K/b2tqiqqpGIpGI4/HHH/9rQ0PDCa/XOyoSidDLly8PNTU1PcZ4QuNK1ju6NYHFRAGASXPnzv1Fa2vrxzTDpapqateuXR/Nnz+/SVGUhwFMBzCBFSLZLF75DsrJGpXRAH4EIABgPIBxAEoBFAPwARjFif1sNzZ25+VlOhaxufcCqAFQC+BhAPVLliz5XSqVUkOhUAuAKWnFyR3dlsw+fg+A+8eMGfPzTZs2bY9GozEb8JkzZ9qXLl36l+Li4l8B+AmAyQDGsGrOzfXNPGPawG2l85jksmcPm+vihH+2W1iF3bvZPN+sWbPuGx4eDrW3t+85fvz41o6OjmZN04Y0TYvV19cvYIbN5QqUjG2mwj5YAqDK4XDMe+aZZ55vbW09+sorr2yuqqpqYFatAuBn3uB7XzJCY297XeaUd2RoGzOJmHb6IjFj5D777LP3DQwMfDw8PBxSVbUvkUj0hEKhj1588cXH2O7zMSPdplumoxveMx5Zlj3jx4/39vb26gMDA4MsvgYZo+p8Pr7LqQX5Ds/U7d0jFxUVZS1atKg4Nzc317Isp67rZldXV6y5ufkmI78hFtcmrx8ZweMit6XsUs4+6kmlgbW+peLf9gyMZNCR374G0y/FxEzX8b/8+bkXEBxKFwAAAABJRU5ErkJggg==",y.tileXYToQuadKey=function(e,t,r){for(var i="",n=r;n>=0;--n){var o=1<<n,a=0;0!==(e&o)&&(a|=1),0!==(t&o)&&(a|=2),i+=a}return i},y.quadKeyToTileXY=function(e){for(var t=0,r=0,i=e.length-1,n=i;n>=0;--n){var o=1<<n,a=+e[i-n];0!==(1&a)&&(t|=o),0!==(2&a)&&(r|=o)}return{x:t,y:r,level:i}};var w=new c;return y}),r("Scene/CullingVolume",["../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/Intersect"],function(e,t,r,i){"use strict";var n=function(t){this.planes=e(t,[])};return n.prototype.computeVisibility=function(e){for(var t=this.planes,r=!1,n=0,o=t.length;o>n;++n){var a=e.intersect(t[n]);if(a===i.OUTSIDE)return i.OUTSIDE;a===i.INTERSECTING&&(r=!0)}return r?i.INTERSECTING:i.INSIDE},n}),r("Scene/PerspectiveOffCenterFrustum",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","./CullingVolume"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e){var t=e.top,r=e.bottom,i=e.right,n=e.left,o=e.near,a=e.far;(t!==e._top||r!==e._bottom||n!==e._left||i!==e._right||o!==e._near||a!==e._far)&&(e._left=n,e._right=i,e._top=t,e._bottom=r,e._near=o,e._far=a,e._perspectiveMatrix=s.computePerspectiveOffCenter(n,i,r,t,o,a,e._perspectiveMatrix),e._infinitePerspective=s.computeInfinitePerspectiveOffCenter(n,i,r,t,o,e._infinitePerspective))
}var c=function(){this.left=void 0,this._left=void 0,this.right=void 0,this._right=void 0,this.top=void 0,this._top=void 0,this.bottom=void 0,this._bottom=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far,this._cullingVolume=new l,this._perspectiveMatrix=new s,this._infinitePerspective=new s};o(c.prototype,{projectionMatrix:{get:function(){return u(this),this._perspectiveMatrix}},infiniteProjectionMatrix:{get:function(){return u(this),this._infinitePerspective}}});var h=new t,d=new t,m=new t,p=new t;return c.prototype.computeCullingVolume=function(e,i,o){var a=this._cullingVolume.planes,s=this.top,l=this.bottom,u=this.right,c=this.left,f=this.near,v=this.far,g=t.cross(i,o,h),_=d;t.multiplyByScalar(i,f,_),t.add(e,_,_);var y=m;t.multiplyByScalar(i,v,y),t.add(e,y,y);var C=p;t.multiplyByScalar(g,c,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(C,o,C);var w=a[0];return n(w)||(w=a[0]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(g,u,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(o,C,C),w=a[1],n(w)||(w=a[1]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(o,l,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(g,C,C),w=a[2],n(w)||(w=a[2]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(o,s,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(C,g,C),w=a[3],n(w)||(w=a[3]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),w=a[4],n(w)||(w=a[4]=new r),w.x=i.x,w.y=i.y,w.z=i.z,w.w=-t.dot(i,_),t.negate(i,C),w=a[5],n(w)||(w=a[5]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,y),this._cullingVolume},c.prototype.getPixelSize=function(t,r,o){u(this);var a=t.x,s=t.y;r=i(r,this.near);var l=1/this.near,c=this.top*l,h=2*r*c/s;c=this.right*l;var d=2*r*c/a;return n(o)?(o.x=d,o.y=h,o):new e(d,h)},c.prototype.clone=function(e){return n(e)||(e=new c),e.right=this.right,e.left=this.left,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},c.prototype.equals=function(e){return n(e)&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},c}),r("Scene/PerspectiveFrustum",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","./PerspectiveOffCenterFrustum"],function(e,t,r,i){"use strict";function n(e){var t=e._offCenterFrustum;(e.fov!==e._fov||e.aspectRatio!==e._aspectRatio||e.near!==e._near||e.far!==e._far)&&(e._aspectRatio=e.aspectRatio,e._fov=e.fov,e._fovy=e.aspectRatio<=1?e.fov:2*Math.atan(Math.tan(.5*e.fov)/e.aspectRatio),e._near=e.near,e._far=e.far,t.top=e.near*Math.tan(.5*e._fovy),t.bottom=-t.top,t.right=e.aspectRatio*t.top,t.left=-t.right,t.near=e.near,t.far=e.far)}var o=function(){this._offCenterFrustum=new i,this.fov=void 0,this._fov=void 0,this._fovy=void 0,this.aspectRatio=void 0,this._aspectRatio=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far};return t(o.prototype,{projectionMatrix:{get:function(){return n(this),this._offCenterFrustum.projectionMatrix}},infiniteProjectionMatrix:{get:function(){return n(this),this._offCenterFrustum.infiniteProjectionMatrix}},fovy:{get:function(){return n(this),this._fovy}}}),o.prototype.computeCullingVolume=function(e,t,r){return n(this),this._offCenterFrustum.computeCullingVolume(e,t,r)},o.prototype.getPixelSize=function(e,t,r){return n(this),this._offCenterFrustum.getPixelSize(e,t,r)},o.prototype.clone=function(t){return e(t)||(t=new o),t.aspectRatio=this.aspectRatio,t.fov=this.fov,t.near=this.near,t.far=this.far,t._aspectRatio=void 0,t._fov=void 0,t._near=void 0,t._far=void 0,this._offCenterFrustum.clone(t._offCenterFrustum),t},o.prototype.equals=function(t){return e(t)?(n(this),n(t),this.fov===t.fov&&this.aspectRatio===t.aspectRatio&&this.near===t.near&&this.far===t.far&&this._offCenterFrustum.equals(t._offCenterFrustum)):!1},o}),r("Scene/CameraFlightPath",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/clone","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/EasingFunction","../Core/HermiteSpline","../Core/LinearSpline","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/QuaternionSpline","./PerspectiveFrustum","./PerspectiveOffCenterFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g){"use strict";function _(e,r,i){return t.cross(e,r,I),t.cross(I,e,R),D[0]=I.x,D[1]=R.x,D[2]=-e.x,D[3]=I.y,D[4]=R.y,D[5]=-e.y,D[6]=I.z,D[7]=R.z,D[8]=-e.z,m.fromRotationMatrix(D,i)}function y(e,t,r){var i,n,o;if(e instanceof f){var a=Math.tan(.5*e.fovy);return i=e.near,n=e.near*a,o=e.aspectRatio*n,Math.max(t*i/o,r*i/n)}return e instanceof v?(i=e.near,n=e.top,o=e.right,Math.max(t*i/o,r*i/n)):Math.max(t,r)}function C(e,r,i,n,o,a,s){var u,d,p,f=r.maximumRadius,v=e.frustum,g=y(v,f,f),_=t.dot(t.normalize(i,O),t.normalize(a,L));if(t.magnitude(i)>g)d=f+.6*(g-f),p=.35;else{var C=t.subtract(i,a,O);d=t.magnitude(t.add(t.multiplyByScalar(C,.5,L),a,L));var w=t.magnitude(t.multiplyByScalar(n,t.dot(C,n),L)),S=t.magnitude(t.multiplyByScalar(o,t.dot(C,o),L));d+=y(v,w,S),p=c.clamp(_+1,.25,.5)}var E,b,T,x=t.multiplyByScalar(t.normalize(a,L),d,L),P=t.multiplyByScalar(t.normalize(i,O),d,O),A=new t;if(t.magnitude(a)>g&&_>.75)A=t.add(t.multiplyByScalar(t.subtract(i,a,A),.5,A),a,A),u=[i,A,a];else if(t.magnitude(i)>g&&_>0)A=t.add(t.multiplyByScalar(t.subtract(i,x,A),.5,A),x,A),u=[i,A,a];else{u=[i],b=c.acosClamped(t.dot(t.normalize(P,N),t.normalize(x,B))),E=t.cross(x,P,N),t.equalsEpsilon(E,t.ZERO,c.EPSILON6)&&(E=t.UNIT_Z);for(var M=p*b,D=b-M,I=D;I>0;I-=M)T=h.fromQuaternion(m.fromAxisAngle(E,I),F),u.push(h.multiplyByVector(T,x,new t));u.push(a)}for(var R=new Array(u.length),z=s/(u.length-1),V=0;V<u.length;++V)R[V]=V*z;return l.createNaturalCubic({points:u,times:R})}function w(e,r,i,n,a){var s=e.points,l=new Array(s.length);l[0]=_(r,i);for(var u,c=s.length-1,h=1;c>h;++h)u=s[h],t.normalize(t.negate(u,z),z),t.normalize(t.cross(z,t.UNIT_Z,V),V),t.cross(V,z,k),l[h]=_(z,k,U);return u=s[c],o(n)&&o(a)?l[c]=_(n,a):(t.normalize(t.negate(u,z),z),t.normalize(t.cross(z,t.UNIT_Z,V),V),t.cross(V,z,k),l[c]=_(z,k,U)),new p({points:l,times:e.times})}function S(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=a.cameraToWorldCoordinatesPoint(a.position,W),u=a.cameraToWorldCoordinatesVector(a.direction,G),c=a.cameraToWorldCoordinatesVector(a.up,H),m=t.cross(u,c,q),p=C(a,s,l,c,m,r,i),f=w(p,u,c,n,o),v=function(e){var r=e.time,i=f.evaluate(r);h.fromQuaternion(i,M),d.clone(a.transform,j),d.clone(d.IDENTITY,a.transform),a.position=p.evaluate(r,a.position),a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction),a.setTransform(j)};return v}function E(r,i,n,o,a){if(c.equalsEpsilon(e.magnitude(n),e.magnitude(o),1e4))return new u({points:[n,o],times:[0,a]});var s,h,d=i.maximumRadius,m=r.frustum,p=y(m,Math.PI*d,c.PI_OVER_TWO*d),f=.5;if(n.z>p)h=.6*p;else{var v=t.subtract(n,o,Y);h=y(m,Math.abs(v.y),Math.abs(v.x))}var g=t.clone(o);g.z=h;var _=t.clone(n);_.z=h;var C=new t;if(o.z>p)C=t.add(t.multiplyByScalar(t.subtract(n,o,C),.5,C),o,C),s=[n,C,o];else if(n.z>p)C=t.add(t.multiplyByScalar(t.subtract(n,g,C),.5,C),g,C),s=[n,C,o];else{s=[n];var w=t.subtract(_,g,Y),S=t.magnitude(w);t.normalize(w,w);for(var E=f*S,b=S-E,T=b;T>0;T-=E){var x=new t;s.push(t.add(t.multiplyByScalar(w,T,x),g,x))}s.push(o)}for(var P=new Array(s.length),A=a/(s.length-1),M=0;M<s.length;++M)P[M]=M*A;return l.createNaturalCubic({points:s,times:P})}function b(e,t,r,i){var n=t.points,a=new Array(n.length);a[0]=_(e.direction,e.up);for(var s=n.length-1,l=1;s>l;++l)a[l]=J;return a[s]=o(r)&&o(i)?_(r,i):J,new p({points:a,times:t.times})}function T(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=E(a,s,t.clone(a.position),r,i),u=b(a,l,n,o),c=function(e){var r=e.time,i=u.evaluate(r);h.fromQuaternion(i,M),d.clone(a.transform,j),d.clone(d.IDENTITY,a.transform),a.position=l.evaluate(r,a.position),a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction),a.setTransform(j)};return c}function x(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=t.clone(a.position);l.z=a.frustum.right-a.frustum.left;var u=E(a,s,l,r,i),c=b(a,u,t.negate(t.UNIT_Z,new t),o),d=a.position.z,m=function(e){var r=e.time,i=c.evaluate(r);h.fromQuaternion(i,M),a.position=u.evaluate(r);var n=a.position.z;a.position.z=d,a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction);var o=a.frustum,s=o.top/o.right,l=.5*(n-(o.right-o.left));o.right+=l,o.left-=l,o.top=s*o.right,o.bottom=-o.top};return m}var P={},A=new t,M=new h,D=new h,I=new t,R=new t,O=new t,L=new t,N=new t,B=new t,F=new h,z=new t,V=new t,k=new t,U=new m,W=new t,G=new t,H=new t,q=new t,j=new d,Y=new t,X=t.negate(t.UNIT_Z,new t),Z=new t;Z=t.normalize(t.cross(X,t.UNIT_Y,Z),Z);var Q=t.cross(Z,X,new t),J=_(X,Q),K=new t,$=new t,et=new t,tt=new r,rt=new t;return P.createTween=function(r,i){i=n(i,n.EMPTY_OBJECT);var a=i.destination,l=i.direction,u=i.up;if(r.mode===g.MORPHING)return{startObject:{},stopObject:{},duration:0};var h=n(i.convert,!0);if(h&&r.mode!==g.SCENE3D){var d=r.mapProjection,m=d.ellipsoid;m.cartesianToCartographic(a,tt),a=d.project(tt,rt)}var p=n(i.duration,3),f=r.screenSpaceCameraController;f.enableInputs=!1;var v=function(e){var t=function(){"function"==typeof e&&e(),f.enableInputs=!0};return t},_=v(i.complete),y=v(i.cancel),C=r.camera,w=i.endTransform;o(w)&&C.setTransform(w);var E=C.frustum;if(r.mode===g.SCENE2D){if(e.equalsEpsilon(C.position,a,c.EPSILON6)&&c.equalsEpsilon(Math.max(E.right-E.left,E.top-E.bottom),a.z,c.EPSILON6))return{startObject:{},stopObject:{},duration:0,complete:_,cancel:y}}else if(t.equalsEpsilon(a,C.position,c.EPSILON6))return{startObject:{},stopObject:{},duration:0,complete:_,cancel:y};if(0>=p){var b=function(){var e=a;if(r.mode===g.SCENE3D?(o(i.direction)||o(i.up)?(K=i.direction,$=t.normalize(t.cross(K,i.up,$),$)):(K=t.normalize(t.negate(e,K),K),$=t.normalize(t.cross(K,t.UNIT_Z,$),$)),et=n(i.up,t.cross($,K,et))):(o(i.direction)||o(i.up)?(K=i.direction,$=t.normalize(t.cross(K,i.up,$),$)):(K=t.negate(t.UNIT_Z,K),$=t.normalize(t.cross(K,t.UNIT_Y,$),$)),et=n(i.up,t.cross($,K,et))),t.clone(e,C.position),t.clone(K,C.direction),t.clone(et,C.up),t.clone($,C.right),r.mode===g.SCENE2D){var s=C.position.z,l=E.top/E.right,u=.5*(s-(E.right-E.left));E.right+=u,E.left-=u,E.top=l*E.right,E.bottom=-E.top}"function"==typeof _&&_()};return{startObject:{},stopObject:{},duration:0,complete:b,cancel:y}}var P;return P=r.mode===g.SCENE3D?S(r,a,p,l,u):r.mode===g.SCENE2D?x(r,a,p,l,u):T(r,a,p,l,u),{duration:p,easingFunction:s.SINUSOIDAL_IN_OUT,startObject:{time:0},stopObject:{time:p},update:P,complete:_,cancel:y}},P.createTweenRectangle=function(e,t){t=n(t,n.EMPTY_OBJECT);var r=t.destination,o=i(t);return e.camera.getRectangleCameraCoordinates(r,A),o.destination=A,o.convert=!1,this.createTween(e,o)},P}),r("Scene/Camera",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/EasingFunction","../Core/Ellipsoid","../Core/IntersectionTests","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/Ray","../Core/Rectangle","../Core/Transforms","./CameraFlightPath","./PerspectiveFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C){"use strict";function w(e){var r=e._right,i=e._up,n=e._direction,o=e._position,a=e._viewMatrix;a[0]=r.x,a[1]=i.x,a[2]=-n.x,a[3]=0,a[4]=r.y,a[5]=i.y,a[6]=-n.y,a[7]=0,a[8]=r.z,a[9]=i.z,a[10]=-n.z,a[11]=0,a[12]=-t.dot(r,o),a[13]=-t.dot(i,o),a[14]=t.dot(n,o),a[15]=1,m.multiply(a,e._actualInvTransform,e._viewMatrix),m.inverseTransformation(e._viewMatrix,e._invViewMatrix)}function S(e){var i=e._projection,n=i.ellipsoid,o=m.getColumn(e._transform,3,et),a=n.cartesianToCartographic(o,J),s=i.project(a,K),l=tt;l.x=s.z,l.y=s.x,l.z=s.y,l.w=1;var u=r.add(m.getColumn(e._transform,0,$),o,$);n.cartesianToCartographic(u,a),i.project(a,s);var c=rt;c.x=s.z,c.y=s.x,c.z=s.y,c.w=0,t.subtract(c,l,c);var h=r.add(m.getColumn(e._transform,1,$),o,$);n.cartesianToCartographic(h,a),i.project(a,s);var d=it;d.x=s.z,d.y=s.x,d.z=s.y,d.w=0,t.subtract(d,l,d);var p=nt;t.cross(c,d,p),t.normalize(p,p),t.cross(d,p,c),t.normalize(c,c),t.cross(p,c,d),t.normalize(d,d),m.setColumn(e._actualTransform,0,c,e._actualTransform),m.setColumn(e._actualTransform,1,d,e._actualTransform),m.setColumn(e._actualTransform,2,p,e._actualTransform),m.setColumn(e._actualTransform,3,l,e._actualTransform)}function E(e){var i=e._projection,n=i.ellipsoid,o=m.getColumn(e._transform,3,et),a=n.cartesianToCartographic(o,J),s=i.project(a,K),l=tt;l.x=s.z,l.y=s.x,l.z=s.y,l.w=1;var u=r.clone(r.UNIT_X,nt),c=r.add(m.getColumn(e._transform,0,$),o,$);n.cartesianToCartographic(c,a),i.project(a,s);var d=rt;d.x=s.z,d.y=s.x,d.z=s.y,d.w=0,t.subtract(d,l,d),d.x=0;var p=it;if(t.magnitudeSquared(d)>h.EPSILON10)t.cross(u,d,p);else{var f=r.add(m.getColumn(e._transform,1,$),o,$);n.cartesianToCartographic(f,a),i.project(a,s),p.x=s.z,p.y=s.x,p.z=s.y,p.w=0,t.subtract(p,l,p),p.x=0,t.magnitudeSquared(p)<h.EPSILON10&&(r.clone(r.UNIT_Y,d),r.clone(r.UNIT_Z,p))}t.cross(p,u,d),t.normalize(d,d),t.cross(u,d,p),t.normalize(p,p),m.setColumn(e._actualTransform,0,d,e._actualTransform),m.setColumn(e._actualTransform,1,p,e._actualTransform),m.setColumn(e._actualTransform,2,u,e._actualTransform),m.setColumn(e._actualTransform,3,l,e._actualTransform)}function b(e){var r=e._position,i=!t.equals(r,e.position);i&&(r=t.clone(e.position,e._position));var n=e._direction,o=!t.equals(n,e.direction);o&&(n=t.clone(e.direction,e._direction));var a=e._up,s=!t.equals(a,e.up);s&&(a=t.clone(e.up,e._up));var l=e._right,u=!t.equals(l,e.right);u&&(l=t.clone(e.right,e._right));var c=!m.equals(e._transform,e.transform)||e._modeChanged;c&&(m.clone(e.transform,e._transform),m.inverseTransformation(e._transform,e._invTransform),e._mode===C.COLUMBUS_VIEW||e._mode===C.SCENE2D?m.equals(m.IDENTITY,e._transform)?m.clone(Q.TRANSFORM_2D,e._actualTransform):e._mode===C.COLUMBUS_VIEW?S(e):E(e):m.clone(e._transform,e._actualTransform),m.inverseTransformation(e._actualTransform,e._actualInvTransform),e._modeChanged=!1);var d=e._actualTransform;if(i||c){e._positionWC=m.multiplyByPoint(d,r,e._positionWC);var p=e._mode;if(p===C.SCENE3D||p===C.MORPHING)e._positionCartographic=e._projection.ellipsoid.cartesianToCartographic(e._positionWC,e._positionCartographic);else{var f=ot;f.x=e._positionWC.y,f.y=e._positionWC.z,f.z=e._positionWC.x,p===C.SCENE2D&&(f.z=.5*(e.frustum.right-e.frustum.left)),e._projection.unproject(f,e._positionCartographic)}}if(o||s||u){var v=t.dot(n,t.cross(a,l,ot));if(Math.abs(1-v)>h.EPSILON2){n=t.normalize(n,e._direction),t.clone(n,e.direction);var g=1/t.magnitudeSquared(a),_=t.dot(a,n)*g,y=t.multiplyByScalar(n,_,ot);a=t.normalize(t.subtract(a,y,e._up),e._up),t.clone(a,e.up),l=t.cross(n,a,e._right),t.clone(l,e.right)}}(o||c)&&(e._directionWC=m.multiplyByPointAsVector(d,n,e._directionWC)),(s||c)&&(e._upWC=m.multiplyByPointAsVector(d,a,e._upWC)),(u||c)&&(e._rightWC=m.multiplyByPointAsVector(d,l,e._rightWC)),(i||o||s||u||c)&&w(e)}function T(e){return Math.atan2(e.right.y,e.right.x)}function x(e){var t=e._projection.ellipsoid,r=g.eastNorthUpToFixedFrame(e.position,t,at),i=m.getRotation(r,st);d.transpose(i,i);var n=d.multiplyByVector(i,e.right,lt);return Math.atan2(n.y,n.x)}function P(e,r){var i=T(e);r=i-r,e.look(t.UNIT_Z,r)}function A(e,r){var i=t.normalize(e.position,ut),n=x(e);r=n-r,e.look(i,r)}function M(e){return h.PI_OVER_TWO-h.acosClamped(-e.direction.z)}function D(e){var r=t.normalize(e.position,ct);return t.negate(r,r),h.PI_OVER_TWO-h.acosClamped(t.dot(e.direction,r))}function I(e,t){var r=e._maxCoord.x*e.maximumTranslateFactor;t.x>r&&(t.x=r),t.x<-r&&(t.x=-r);var i=e._maxCoord.y*e.maximumTranslateFactor;t.y>i&&(t.y=i),t.y<-i&&(t.y=-i)}function R(e,r){var i=e.position,n=t.normalize(i,yt);if(o(e.constrainedAxis)){var a=t.equalsEpsilon(n,e.constrainedAxis,h.EPSILON2),s=t.equalsEpsilon(n,t.negate(e.constrainedAxis,St),h.EPSILON2);if(a||s)(a&&0>r||s&&r>0)&&e.rotate(e.right,r);else{var l=t.normalize(e.constrainedAxis,Ct),u=t.dot(n,l),c=h.acosClamped(u);r>0&&r>c&&(r=c-h.EPSILON4),u=t.dot(n,t.negate(l,St)),c=h.acosClamped(u),0>r&&-r>c&&(r=-c+h.EPSILON4);var d=t.cross(l,n,wt);e.rotate(d,r)}}else e.rotate(e.right,r)}function O(e,t){o(e.constrainedAxis)?e.rotate(e.constrainedAxis,t):e.rotate(e.up,t)}function L(e,t){var r=e.frustum;t=.5*t;var i=r.right-t,n=r.left+t,o=e._maxCoord.x*e.maximumZoomFactor;i>o&&(i=o,n=-o),n>=i&&(i=1,n=-1);var a=r.top/r.right;r.right=i,r.left=n,r.top=r.right*a,r.bottom=-r.top}function N(e,t){e.move(e.direction,t)}function B(r,i){var n=.5*-i.height,o=-n,a=r.frustum;if(o>n){var s=a.top/a.right;a.right=o,a.left=n,a.top=a.right*s,a.bottom=-a.top}e.clone(r._projection.project(i),r.position),t.negate(t.UNIT_Z,r.direction),t.clone(t.UNIT_Y,r.up),t.clone(t.UNIT_X,r.right)}function F(e,r){var i=e._projection;e.position=i.project(r),t.negate(t.UNIT_Z,e.direction),t.clone(t.UNIT_Y,e.up),t.clone(t.UNIT_X,e.right)}function z(e,r){var i=e._projection.ellipsoid;i.cartographicToCartesian(r,e.position),t.negate(e.position,e.direction),t.normalize(e.direction,e.direction),t.cross(e.direction,t.UNIT_Z,e.right),t.cross(e.right,e.direction,e.up),t.cross(e.direction,e.up,e.right)}function V(e,r,i,n,a){o(n)||(n=new t);var s=e;a&&(s=Mt);var l=r.north,u=r.south,c=r.east,d=r.west;d>c&&(c+=h.TWO_PI);var m=Et;m.longitude=c,m.latitude=l;var p=i.cartographicToCartesian(m,bt);m.latitude=u;var f=i.cartographicToCartesian(m,Pt);m.longitude=d;var v=i.cartographicToCartesian(m,Tt);m.latitude=l;var g=i.cartographicToCartesian(m,xt),_=t.subtract(p,v,At);t.multiplyByScalar(_,.5,_),t.add(v,_,_);var y=t.magnitude(_);y<h.EPSILON6&&(m.longitude=.5*(c+d),m.latitude=.5*(l+u),i.cartographicToCartesian(m,_)),t.subtract(g,_,g),t.subtract(f,_,f),t.subtract(p,_,p),t.subtract(v,_,v);var C=t.negate(_,s.direction);t.normalize(C,C);var w=t.cross(C,t.UNIT_Z,s.right);t.normalize(w,w);var S=t.cross(w,C,s.up),E=Math.max(Math.abs(t.dot(S,g)),Math.abs(t.dot(S,f)),Math.abs(t.dot(S,p)),Math.abs(t.dot(S,v))),b=Math.max(Math.abs(t.dot(w,g)),Math.abs(t.dot(w,f)),Math.abs(t.dot(w,p)),Math.abs(t.dot(w,v))),T=Math.tan(.5*e.frustum.fovy),x=e.frustum.aspectRatio*T,P=Math.max(b/x,E/T),A=y+P;return t.normalize(_,_),t.multiplyByScalar(_,A,n)}function k(e,r,i,n,a){var s=r.north,l=r.south,u=r.east,c=r.west,h=e._actualTransform,d=e._actualInvTransform,p=Dt;p.longitude=u,p.latitude=s;var f=i.project(p,It);m.multiplyByPoint(h,f,f),m.multiplyByPoint(d,f,f),p.longitude=c,p.latitude=l;var v=i.project(p,Rt);m.multiplyByPoint(h,v,v),m.multiplyByPoint(d,v,v);var g=Math.tan(.5*e.frustum.fovy),_=e.frustum.aspectRatio*g;if(o(n)||(n=new t),n.x=.5*(f.x-v.x)+v.x,n.y=.5*(f.y-v.y)+v.y,n.z=.5*Math.max((f.x-v.x)/_,(f.y-v.y)/g),!a){var y=t.clone(t.UNIT_Z,e.direction);t.negate(y,y),t.clone(t.UNIT_X,e.right),t.clone(t.UNIT_Y,e.up)}return n}function U(e,r,i,n,a){var s=r.north,l=r.south,u=r.east,c=r.west,h=Ot;h.longitude=u,h.latitude=s;var d=i.project(h,Lt);h.longitude=c,h.latitude=l;var m,p,f=i.project(h,Nt),v=.5*Math.abs(d.x-f.x),g=.5*Math.abs(d.y-f.y),_=e.frustum.right/e.frustum.top,y=g*_;if(v>y?(m=v,p=m/_):(p=g,m=y),g=Math.max(2*m,2*p),o(n)||(n=new t),n.x=.5*(d.x-f.x)+f.x,n.y=.5*(d.y-f.y)+f.y,a)h=i.unproject(n,h),h.height=g,n=i.project(h,n);else{var C=e.frustum;C.right=m,C.left=-m,C.top=p,C.bottom=-p;var w=t.clone(t.UNIT_Z,e.direction);t.negate(w,w),t.clone(t.UNIT_X,e.right),t.clone(t.UNIT_Y,e.up)}return n}function W(e,t,r,i){r=n(r,u.WGS84);var o=e.getPickRay(t,Bt),a=c.rayEllipsoid(o,r);if(!a)return void 0;var s=a.start>0?a.start:a.stop;return f.getPoint(o,s,i)}function G(e,t,r,i){var n=e.getPickRay(t,Ft),o=n.origin;o.z=0;var a=r.unproject(o);return a.latitude<-h.PI_OVER_TWO||a.latitude>h.PI_OVER_TWO||a.longitude<-Math.PI||a.longitude>Math.PI?void 0:r.ellipsoid.cartographicToCartesian(a,i)}function H(e,r,i,n){var o=e.getPickRay(r,zt),a=-o.origin.x/o.direction.x;f.getPoint(o,a,n);var s=i.unproject(new t(n.y,n.z,0));return s.latitude<-h.PI_OVER_TWO||s.latitude>h.PI_OVER_TWO||s.longitude<-Math.PI||s.longitude>Math.PI?void 0:i.ellipsoid.cartographicToCartesian(s,n)}function q(e,r,i){var n=e._scene.canvas,o=n.clientWidth,a=n.clientHeight,s=Math.tan(.5*e.frustum.fovy),l=e.frustum.aspectRatio*s,u=e.frustum.near,c=2/o*r.x-1,h=2/a*(a-r.y)-1,d=e.positionWC;t.clone(d,i.origin);var m=t.multiplyByScalar(e.directionWC,u,Vt);t.add(d,m,m);var p=t.multiplyByScalar(e.rightWC,c*u*l,kt),f=t.multiplyByScalar(e.upWC,h*u*s,Ut),v=t.add(m,p,i.direction);return t.add(v,f,v),t.subtract(v,d,v),t.normalize(v,v),i}function j(e,r,i){var n=e._scene.canvas,o=n.clientWidth,a=n.clientHeight,s=2/o*r.x-1;s*=.5*(e.frustum.right-e.frustum.left);var l=2/a*(a-r.y)-1;l*=.5*(e.frustum.top-e.frustum.bottom);var u=i.origin;return t.clone(e.position,u),t.multiplyByScalar(e.right,s,Wt),t.add(Wt,u,u),t.multiplyByScalar(e.up,l,Wt),t.add(Wt,u,u),t.clone(e.directionWC,i.direction),i}function Y(e,r){var i=e.position,n=i.x<-e._maxCoord.x||i.x>e._maxCoord.x,o=i.y<-e._maxCoord.y||i.y>e._maxCoord.y,a=n||o,s=e.frustum,u=s.top,c=s.bottom,d=s.right,m=s.left,p=e._max2Dfrustum,f=d>e._max2Dfrustum.right;if(a||f){var v=t.clone(i);v.x>e._maxCoord.x?v.x=e._maxCoord.x:v.x<-e._maxCoord.x&&(v.x=-e._maxCoord.x),v.y>e._maxCoord.y?v.y=e._maxCoord.y:v.y<-e._maxCoord.y&&(v.y=-e._maxCoord.y);var g=function(r){a&&(e.position=t.lerp(i,v,r.time,e.position)),f&&(e.frustum.top=h.lerp(u,p.top,r.time),e.frustum.bottom=h.lerp(c,p.bottom,r.time),e.frustum.right=h.lerp(d,p.right,r.time),e.frustum.left=h.lerp(m,p.left,r.time))};return{easingFunction:l.EXPONENTIAL_OUT,startObject:{time:0},stopObject:{time:1},duration:r,update:g}}return void 0}function X(e,r,i,n,o,a){var s=t.clone(r);i.y>n?s.y-=i.y-n:i.y<-n&&(s.y+=-n-i.y),i.z>o?s.z-=i.z-o:i.z<-o&&(s.z+=-o-i.z);var u=function(i){var n=t.lerp(r,s,i.time,new t);e.worldToCameraCoordinatesPoint(n,e.position)};return{easingFunction:l.EXPONENTIAL_OUT,startObject:{time:0},stopObject:{time:1},duration:a,update:u}}function Z(e,r){var i=e.position,n=e.direction,o=e.worldToCameraCoordinatesVector(t.UNIT_X,Gt),a=-t.dot(o,i)/t.dot(o,n),s=t.add(i,t.multiplyByScalar(n,a,Ht),Ht);e.cameraToWorldCoordinatesPoint(s,s),i=e.cameraToWorldCoordinatesPoint(e.position,qt);var l=Math.tan(.5*e.frustum.fovy),u=e.frustum.aspectRatio*l,c=t.magnitude(t.subtract(i,s,jt)),h=u*c,d=l*c,m=e._maxCoord.x,p=e._maxCoord.y,f=Math.max(h-m,m),v=Math.max(d-p,p);if(i.z<-f||i.z>f||i.y<-v||i.y>v){var g=s.y<-f||s.y>f,_=s.z<-v||s.z>v;if(g||_)return X(e,i,s,f,v,r)}return void 0}var Q=function(e){this._scene=e,this.transform=m.clone(m.IDENTITY),this._transform=m.clone(m.IDENTITY),this._invTransform=m.clone(m.IDENTITY),this._actualTransform=m.clone(m.IDENTITY),this._actualInvTransform=m.clone(m.IDENTITY),this.position=new t,this._position=new t,this._positionWC=new t,this._positionCartographic=new i,this.direction=new t,this._direction=new t,this._directionWC=new t,this.up=new t,this._up=new t,this._upWC=new t,this.right=new t,this._right=new t,this._rightWC=new t,this.frustum=new y,this.frustum.aspectRatio=e.drawingBufferWidth/e.drawingBufferHeight,this.frustum.fov=h.toRadians(60),this.defaultMoveAmount=1e5,this.defaultLookAmount=Math.PI/60,this.defaultRotateAmount=Math.PI/3600,this.defaultZoomAmount=1e5,this.constrainedAxis=void 0,this.maximumTranslateFactor=1.5,this.maximumZoomFactor=2.5,this._viewMatrix=new m,this._invViewMatrix=new m,w(this),this._mode=C.SCENE3D,this._modeChanged=!0;var r=e.mapProjection;this._projection=r,this._maxCoord=r.project(new i(Math.PI,h.PI_OVER_TWO)),this._max2Dfrustum=void 0,this.viewRectangle(Q.DEFAULT_VIEW_RECTANGLE);var n=t.magnitude(this.position);n+=n*Q.DEFAULT_VIEW_FACTOR,t.normalize(this.position,this.position),t.multiplyByScalar(this.position,n,this.position)};Q.TRANSFORM_2D=new m(0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1),Q.TRANSFORM_2D_INVERSE=m.inverseTransformation(Q.TRANSFORM_2D,new m),Q.DEFAULT_VIEW_RECTANGLE=v.fromDegrees(-95,-20,-70,90),Q.DEFAULT_VIEW_FACTOR=.5;var J=new i,K=new t,$=new t,et=new r,tt=new r,rt=new r,it=new r,nt=new r,ot=new t,at=new m,st=new d,lt=new t,ut=new t,ct=new t;a(Q.prototype,{inverseTransform:{get:function(){return b(this),this._invTransform}},viewMatrix:{get:function(){return b(this),this._viewMatrix}},inverseViewMatrix:{get:function(){return b(this),this._invViewMatrix}},positionCartographic:{get:function(){return b(this),this._positionCartographic}},positionWC:{get:function(){return b(this),this._positionWC}},directionWC:{get:function(){return b(this),this._directionWC}},upWC:{get:function(){return b(this),this._upWC}},rightWC:{get:function(){return b(this),this._rightWC}},heading:{get:function(){return this._mode===C.SCENE2D||this._mode===C.COLUMBUS_VIEW?T(this):this._mode===C.SCENE3D?x(this):void 0},set:function(e){this._mode===C.SCENE2D||this._mode===C.COLUMBUS_VIEW?P(this,e):this._mode===C.SCENE3D&&A(this,e)}},tilt:{get:function(){return this._mode===C.COLUMBUS_VIEW?M(this):this._mode===C.SCENE3D?D(this):void 0},set:function(e){(this._mode===C.COLUMBUS_VIEW||this._mode===C.SCENE3D)&&(e=h.clamp(e,0,h.PI_OVER_TWO),e-=this.tilt,this.look(this.right,e))}}}),Q.prototype.update=function(e){var t=!1;if(e!==this._mode&&(this._mode=e,this._modeChanged=e!==C.MORPHING,t=this._mode===C.SCENE2D),t){var r=this._max2Dfrustum=this.frustum.clone(),i=2,n=r.top/r.right;r.right=this._maxCoord.x*i,r.left=-r.right,r.top=n*r.right,r.bottom=-r.top}};var ht=new t,dt=new t,mt=new t;Q.prototype.setTransform=function(e){var r=t.clone(this.positionWC,ht),i=t.clone(this.upWC,dt),n=t.clone(this.directionWC,mt);m.clone(e,this.transform),b(this);var o=this._actualInvTransform;m.multiplyByPoint(o,r,this.position),m.multiplyByPointAsVector(o,n,this.direction),m.multiplyByPointAsVector(o,i,this.up),t.cross(this.direction,this.up,this.right)},Q.prototype.worldToCameraCoordinates=function(e,t){return o(t)||(t=new r),b(this),m.multiplyByVector(this._actualInvTransform,e,t)},Q.prototype.worldToCameraCoordinatesPoint=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPoint(this._actualInvTransform,e,r)},Q.prototype.worldToCameraCoordinatesVector=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPointAsVector(this._actualInvTransform,e,r)},Q.prototype.cameraToWorldCoordinates=function(e,t){return o(t)||(t=new r),b(this),m.multiplyByVector(this._actualTransform,e,t)},Q.prototype.cameraToWorldCoordinatesPoint=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPoint(this._actualTransform,e,r)},Q.prototype.cameraToWorldCoordinatesVector=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPointAsVector(this._actualTransform,e,r)};var pt=new t;Q.prototype.move=function(e,r){var i=this.position;t.multiplyByScalar(e,r,pt),t.add(i,pt,i),this._mode===C.SCENE2D&&I(this,i)},Q.prototype.moveForward=function(e){e=n(e,this.defaultMoveAmount),this.move(this.direction,e)},Q.prototype.moveBackward=function(e){e=n(e,this.defaultMoveAmount),this.move(this.direction,-e)},Q.prototype.moveUp=function(e){e=n(e,this.defaultMoveAmount),this.move(this.up,e)},Q.prototype.moveDown=function(e){e=n(e,this.defaultMoveAmount),this.move(this.up,-e)},Q.prototype.moveRight=function(e){e=n(e,this.defaultMoveAmount),this.move(this.right,e)},Q.prototype.moveLeft=function(e){e=n(e,this.defaultMoveAmount),this.move(this.right,-e)},Q.prototype.lookLeft=function(e){e=n(e,this.defaultLookAmount),this.look(this.up,-e)},Q.prototype.lookRight=function(e){e=n(e,this.defaultLookAmount),this.look(this.up,e)},Q.prototype.lookUp=function(e){e=n(e,this.defaultLookAmount),this.look(this.right,-e)},Q.prototype.lookDown=function(e){e=n(e,this.defaultLookAmount),this.look(this.right,e)};var ft=new p,vt=new d;Q.prototype.look=function(e,t){var r=n(t,this.defaultLookAmount),i=p.fromAxisAngle(e,-r,ft),o=d.fromQuaternion(i,vt),a=this.direction,s=this.up,l=this.right;d.multiplyByVector(o,a,a),d.multiplyByVector(o,s,s),d.multiplyByVector(o,l,l)},Q.prototype.twistLeft=function(e){e=n(e,this.defaultLookAmount),this.look(this.direction,e)},Q.prototype.twistRight=function(e){e=n(e,this.defaultLookAmount),this.look(this.direction,-e)};var gt=new p,_t=new d;Q.prototype.rotate=function(e,r){var i=n(r,this.defaultRotateAmount),o=p.fromAxisAngle(e,-i,gt),a=d.fromQuaternion(o,_t);d.multiplyByVector(a,this.position,this.position),d.multiplyByVector(a,this.direction,this.direction),d.multiplyByVector(a,this.up,this.up),t.cross(this.direction,this.up,this.right),t.cross(this.right,this.direction,this.up)},Q.prototype.rotateDown=function(e){e=n(e,this.defaultRotateAmount),R(this,e)},Q.prototype.rotateUp=function(e){e=n(e,this.defaultRotateAmount),R(this,-e)};var yt=new t,Ct=new t,wt=new t,St=new t;Q.prototype.rotateRight=function(e){e=n(e,this.defaultRotateAmount),O(this,-e)},Q.prototype.rotateLeft=function(e){e=n(e,this.defaultRotateAmount),O(this,e)},Q.prototype.zoomIn=function(e){e=n(e,this.defaultZoomAmount),this._mode===C.SCENE2D?L(this,e):N(this,e)},Q.prototype.zoomOut=function(e){e=n(e,this.defaultZoomAmount),this._mode===C.SCENE2D?L(this,-e):N(this,-e)},Q.prototype.getMagnitude=function(){return this._mode===C.SCENE3D?t.magnitude(this.position):this._mode===C.COLUMBUS_VIEW?Math.abs(this.position.z):this._mode===C.SCENE2D?Math.max(this.frustum.right-this.frustum.left,this.frustum.top-this.frustum.bottom):void 0},Q.prototype.setPositionCartographic=function(e){this._mode===C.SCENE2D?B(this,e):this._mode===C.COLUMBUS_VIEW?F(this,e):this._mode===C.SCENE3D&&z(this,e)},Q.prototype.lookAt=function(r,i,n){if(this._mode===C.SCENE2D){e.clone(i,this.position),t.negate(t.UNIT_Z,this.direction),t.clone(n,this.up),this.up.z=0,t.magnitudeSquared(this.up)<h.EPSILON10&&t.clone(t.UNIT_Y,this.up),t.cross(this.direction,this.up,this.right);var o=this.frustum,a=o.top/o.right;return o.right=r.z,o.left=-o.right,o.top=a*o.right,o.bottom=-o.top,void 0}this.position=t.clone(r,this.position),this.direction=t.normalize(t.subtract(i,r,this.direction),this.direction),this.right=t.normalize(t.cross(this.direction,n,this.right),this.right),this.up=t.cross(this.right,this.direction,this.up)};var Et=new i,bt=new t,Tt=new t,xt=new t,Pt=new t,At=new t,Mt={direction:new t,right:new t,up:new t},Dt=new i,It=new t,Rt=new t,Ot=new i,Lt=new t,Nt=new t;Q.prototype.getRectangleCameraCoordinates=function(e,t){return this._mode===C.SCENE3D?V(this,e,this._projection.ellipsoid,t,!0):this._mode===C.COLUMBUS_VIEW?k(this,e,this._projection,t,!0):this._mode===C.SCENE2D?U(this,e,this._projection,t,!0):void 0},Q.prototype.viewRectangle=function(e,t){t=n(t,u.WGS84),this._mode===C.SCENE3D?V(this,e,t,this.position):this._mode===C.COLUMBUS_VIEW?k(this,e,this._projection,this.position):this._mode===C.SCENE2D&&U(this,e,this._projection,this.position)};var Bt=new f,Ft=new f,zt=new f;Q.prototype.pickEllipsoid=function(e,r,i){if(o(i)||(i=new t),r=n(r,u.WGS84),this._mode===C.SCENE3D)i=W(this,e,r,i);else if(this._mode===C.SCENE2D)i=G(this,e,this._projection,i);else{if(this._mode!==C.COLUMBUS_VIEW)return void 0;i=H(this,e,this._projection,i)}return i};var Vt=new t,kt=new t,Ut=new t,Wt=new t;Q.prototype.getPickRay=function(e,t){o(t)||(t=new f);var r=this.frustum;return o(r.aspectRatio)&&o(r.fov)&&o(r.near)?q(this,e,t):j(this,e,t)};var Gt=new t,Ht=new t,qt=new t,jt=new t;return Q.prototype.createCorrectPositionTween=function(e){return this._mode===C.SCENE2D?Y(this,e):this._mode===C.COLUMBUS_VIEW?Z(this,e):void 0},Q.prototype.flyTo=function(e){var t=this._scene;t.tweens.add(_.createTween(t,e))},Q.prototype.flyToRectangle=function(e){var t=this._scene;t.tweens.add(_.createTweenRectangle(t,e))},Q.prototype.clone=function(){var e=new Q(this._scene);return e.position=t.clone(this.position),e.direction=t.clone(this.direction),e.up=t.clone(this.up),e.right=t.clone(this.right),e.transform=m.clone(this.transform),e.frustum=this.frustum.clone(),e
},Q}),r("Scene/CameraEventType",["../Core/freezeObject"],function(e){"use strict";var t={LEFT_DRAG:0,RIGHT_DRAG:1,MIDDLE_DRAG:2,WHEEL:3,PINCH:4};return e(t)}),r("Scene/CameraEventAggregator",["../Core/Cartesian2","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/KeyboardEventModifier","../Core/Math","../Core/ScreenSpaceEventHandler","../Core/ScreenSpaceEventType","./CameraEventType"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,r){var i=e;return t(r)&&(i+="+"+r),i}function h(t,r){e.clone(t.distance.startPosition,r.distance.startPosition),e.clone(t.distance.endPosition,r.distance.endPosition),e.clone(t.angleAndHeight.startPosition,r.angleAndHeight.startPosition),e.clone(t.angleAndHeight.endPosition,r.angleAndHeight.endPosition)}function d(r,i,n){var o=c(u.PINCH,i),a=r._update,s=r._isDown,d=r._eventStartPosition,m=r._pressTime,p=r._releaseTime;a[o]=!0,s[o]=!1,d[o]=new e;var f=r._movement[o];t(f)||(f=r._movement[o]={}),f.distance={startPosition:new e,endPosition:new e},f.angleAndHeight={startPosition:new e,endPosition:new e},f.prevAngle=0,r._eventHandler.setInputAction(function(t){r._buttonsDown++,s[o]=!0,m[o]=new Date,e.clone(t.position,d[o])},l.PINCH_START,i),r._eventHandler.setInputAction(function(){r._buttonsDown=Math.max(r._buttonsDown-1,0),s[o]=!1,p[o]=new Date},l.PINCH_END,i),r._eventHandler.setInputAction(function(t){if(s[o]){a[o]?(h(t,f),a[o]=!1,f.prevAngle=f.angleAndHeight.startPosition.x):(e.clone(t.distance.endPosition,f.distance.endPosition),e.clone(t.angleAndHeight.endPosition,f.angleAndHeight.endPosition));for(var r=f.angleAndHeight.endPosition.x,i=f.prevAngle,l=2*Math.PI;r>=i+Math.PI;)r-=l;for(;r<i-Math.PI;)r+=l;f.angleAndHeight.endPosition.x=-r*n.clientWidth/12,f.angleAndHeight.startPosition.x=-i*n.clientWidth/12}},l.PINCH_MOVE,i)}function m(r,i){var n=c(u.WHEEL,i),o=r._update;o[n]=!0;var s=r._movement[n];t(s)||(s=r._movement[n]={}),s.startPosition=new e,s.endPosition=new e,r._eventHandler.setInputAction(function(t){var r=15*a.toRadians(t);o[n]?(e.clone(e.ZERO,s.startPosition),s.endPosition.x=0,s.endPosition.y=r,o[n]=!1):s.endPosition.y=s.endPosition.y+r},l.WHEEL,i)}function p(r,i,n){var o=c(n,i),a=r._isDown,s=r._eventStartPosition,h=r._pressTime,d=r._releaseTime;a[o]=!1,s[o]=new e;var m=r._lastMovement[o];t(m)||(m=r._lastMovement[o]={startPosition:new e,endPosition:new e,valid:!1});var p,f;n===u.LEFT_DRAG?(p=l.LEFT_DOWN,f=l.LEFT_UP):n===u.RIGHT_DRAG?(p=l.RIGHT_DOWN,f=l.RIGHT_UP):n===u.MIDDLE_DRAG&&(p=l.MIDDLE_DOWN,f=l.MIDDLE_UP),r._eventHandler.setInputAction(function(t){r._buttonsDown++,m.valid=!1,a[o]=!0,h[o]=new Date,e.clone(t.position,s[o])},p,i),r._eventHandler.setInputAction(function(){r._buttonsDown=Math.max(r._buttonsDown-1,0),a[o]=!1,d[o]=new Date},f,i)}function f(t,r){e.clone(t.startPosition,r.startPosition),e.clone(t.endPosition,r.endPosition)}function v(r,i){var n=r._update,o=r._movement,a=r._lastMovement,s=r._isDown;for(var h in u)if(u.hasOwnProperty(h)){var d=u[h];if(t(d)){var m=c(d,i);n[m]=!0,t(r._lastMovement[m])||(r._lastMovement[m]={startPosition:new e,endPosition:new e,valid:!1}),t(r._movement[m])||(r._movement[m]={startPosition:new e,endPosition:new e})}}r._eventHandler.setInputAction(function(l){for(var h in u)if(u.hasOwnProperty(h)){var d=u[h];if(t(d)){var m=c(d,i);s[m]&&(n[m]?(f(o[m],a[m]),a[m].valid=!0,f(l,o[m]),n[m]=!1):e.clone(l.endPosition,o[m].endPosition))}}e.clone(l.endPosition,r._currentMousePosition)},l.MOUSE_MOVE,i)}var g=function(r){this._eventHandler=new s(r),this._update={},this._movement={},this._lastMovement={},this._isDown={},this._eventStartPosition={},this._pressTime={},this._releaseTime={},this._buttonsDown=0,this._currentMousePosition=new e,m(this,void 0),d(this,void 0,r),p(this,void 0,u.LEFT_DRAG),p(this,void 0,u.RIGHT_DRAG),p(this,void 0,u.MIDDLE_DRAG),v(this,void 0);for(var i in o)if(o.hasOwnProperty(i)){var n=o[i];t(n)&&(m(this,n),d(this,n,r),p(this,n,u.LEFT_DRAG),p(this,n,u.RIGHT_DRAG),p(this,n,u.MIDDLE_DRAG),v(this,n))}};return r(g.prototype,{currentMousePosition:{get:function(){return this._currentMousePosition}},anyButtonDown:{get:function(){var e=!(this._update[c(u.WHEEL)]&&this._update[c(u.WHEEL,o.SHIFT)]&&this._update[c(u.WHEEL,o.CTRL)]&&this._update[c(u.WHEEL,o.ALT)]);return this._buttonsDown>0||e}}}),g.prototype.isMoving=function(e,t){var r=c(e,t);return!this._update[r]},g.prototype.getMovement=function(e,t){var r=c(e,t),i=this._movement[r];return i},g.prototype.getLastMovement=function(e,t){var r=c(e,t),i=this._lastMovement[r];return i.valid?i:void 0},g.prototype.isButtonDown=function(e,t){var r=c(e,t);return this._isDown[r]},g.prototype.getStartMousePosition=function(e,t){if(e===u.WHEEL)return this._currentMousePosition;var r=c(e,t);return this._eventStartPosition[r]},g.prototype.getButtonPressTime=function(e,t){var r=c(e,t);return this._pressTime[r]},g.prototype.getButtonReleaseTime=function(e,t){var r=c(e,t);return this._releaseTime[r]},g.prototype.reset=function(){for(var e in this._update)this._update.hasOwnProperty(e)&&(this._update[e]=!0)},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){return this._eventHandler=this._eventHandler&&this._eventHandler.destroy(),i(this)},g}),r("Scene/CreditDisplay",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i){"use strict";function n(e,t,i){if(!r(e.element)){var n=e.text,o=e.link,a=document.createElement("span");if(e.hasLink()){var s=document.createElement("a");s.textContent=n,s.href=o,s.target="_blank",a.appendChild(s)}else a.textContent=n;a.className="cesium-credit-text",e.element=a}if(t.hasChildNodes()){var l=document.createElement("span");l.textContent=i,l.className="cesium-credit-delimiter",t.appendChild(l)}t.appendChild(e.element)}function o(e,t){if(!r(e.element)){var i=e.text,n=e.link,o=document.createElement("span"),a=document.createElement("img");if(a.src=e.imageUrl,a.style["vertical-align"]="bottom",r(i)&&(a.alt=i,a.title=i),e.hasLink()){var s=document.createElement("a");s.appendChild(a),s.href=n,s.target="_blank",o.appendChild(s)}else o.appendChild(a);o.className="cesium-credit-image",e.element=o}t.appendChild(e.element)}function a(t,r){for(var i=t.length,n=0;i>n;n++){var o=t[n];if(e.equals(o,r))return!0}return!1}function s(e){var t=e.element;if(r(t)){var i=t.parentNode;if(!e.hasImage()){var n=t.previousSibling;null===n&&(n=t.nextSibling),null!==n&&i.removeChild(n)}i.removeChild(t)}}function l(e,t){var r,i,o,a=e._displayedCredits.textCredits;for(r=0;r<t.length;r++)o=t[r],i=a.indexOf(o),-1===i?n(o,e._textContainer,e._delimiter):a.splice(i,1);for(r=0;r<a.length;r++)o=a[r],s(o)}function u(e,t){var r,i,n,a=e._displayedCredits.imageCredits;for(r=0;r<t.length;r++)n=t[r],i=a.indexOf(n),-1===i?o(n,e._imageContainer):a.splice(i,1);for(r=0;r<a.length;r++)n=a[r],s(n)}var c=function(e,r){var i=document.createElement("span");i.className="cesium-credit-imageContainer";var n=document.createElement("span");n.className="cesium-credit-textContainer",e.appendChild(i),e.appendChild(n),this._delimiter=t(r," • "),this._container=e,this._textContainer=n,this._imageContainer=i,this._defaultImageCredits=[],this._defaultTextCredits=[],this._displayedCredits={imageCredits:[],textCredits:[]},this._currentFrameCredits={imageCredits:[],textCredits:[]}};return c.prototype.addCredit=function(e){if(e.hasImage()){var t=this._currentFrameCredits.imageCredits;a(t,e)||a(this._defaultImageCredits,e)||t.push(e)}else{var r=this._currentFrameCredits.textCredits;a(r,e)||a(this._defaultTextCredits,e)||r.push(e)}},c.prototype.addDefaultCredit=function(e){if(e.hasImage()){var t=this._defaultImageCredits;a(t,e)||t.push(e)}else{var r=this._defaultTextCredits;a(r,e)||r.push(e)}},c.prototype.removeDefaultCredit=function(e){var t;e.hasImage()?(t=this._defaultImageCredits.indexOf(e),-1!==t&&this._defaultImageCredits.splice(t,1)):(t=this._defaultTextCredits.indexOf(e),-1!==t&&this._defaultTextCredits.splice(t,1))},c.prototype.beginFrame=function(){this._currentFrameCredits.imageCredits.length=0,this._currentFrameCredits.textCredits.length=0},c.prototype.endFrame=function(){var e=this._defaultTextCredits.concat(this._currentFrameCredits.textCredits),t=this._defaultImageCredits.concat(this._currentFrameCredits.imageCredits);l(this,e),u(this,t),this._displayedCredits.textCredits=e,this._displayedCredits.imageCredits=t},c.prototype.destroy=function(){return this._container.removeChild(this._textContainer),this._container.removeChild(this._imageContainer),i(this)},c.prototype.isDestroyed=function(){return!1},c}),r("Scene/DebugAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","./Appearance"],function(e,t,r,i,n){"use strict";var o=function(t){t=e(t,e.EMPTY_OBJECT);var r,o=t.attributeName,a=e(t.glslDatatype,"vec3"),s="v_"+o;if("normal"===o||"binormal"===o|"tangent"===o)r="vec4 getColor() { return vec4(("+s+" + vec3(1.0)) * 0.5, 1.0); }\n";else switch("st"===o&&(a="vec2"),a){case"float":r="vec4 getColor() { return vec4(vec3("+s+"), 1.0); }\n";break;case"vec2":r="vec4 getColor() { return vec4("+s+", 0.0, 1.0); }\n";break;case"vec3":r="vec4 getColor() { return vec4("+s+", 1.0); }\n";break;case"vec4":r="vec4 getColor() { return "+s+"; }\n";break;default:throw new i("options.glslDatatype must be float, vec2, vec3, or vec4.")}var l="attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute "+a+" "+o+";\n"+"varying "+a+" "+s+";\n"+"void main()\n"+"{\n"+"vec4 p = czm_translateRelativeToEye(position3DHigh, position3DLow);\n"+s+" = "+o+";\n"+"gl_Position = czm_modelViewProjectionRelativeToEye * p;\n"+"}",u="varying "+a+" "+s+";\n"+r+"\n"+"void main()\n"+"{\n"+"gl_FragColor = getColor();\n"+"}";this.material=void 0,this.translucent=e(t.translucent,!1),this._vertexShaderSource=e(t.vertexShaderSource,l),this._fragmentShaderSource=e(t.fragmentShaderSource,u),this._renderState=e(t.renderState,n.getDefaultRenderState(!1,!1)),this._closed=e(t.closed,!1),this._attributeName=o,this._glslDatatype=a};return r(o.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},attributeName:{get:function(){return this._attributeName}},glslDatatype:{get:function(){return this._glslDatatype}}}),o.prototype.getFragmentShaderSource=n.prototype.getFragmentShaderSource,o.prototype.isTranslucent=n.prototype.isTranslucent,o.prototype.getRenderState=n.prototype.getRenderState,o}),r("Scene/DebugModelMatrixPrimitive",["../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/GeometryInstance","../Core/Matrix4","../Core/PolylineGeometry","./PolylineColorAppearance","./Primitive"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(e){e=r(e,r.EMPTY_OBJECT),this.length=r(e.length,1e7),this._length=void 0,this.width=r(e.width,2),this._width=void 0,this.show=r(e.show,!0),this.modelMatrix=a.clone(r(e.modelMatrix,a.IDENTITY)),this._modelMatrix=new a,this.id=e.id,this._id=void 0,this._primitive=void 0};return c.prototype.update=function(r,n,c){this.show&&(i(this._primitive)&&a.equals(this._modelMatrix,this.modelMatrix)&&this._length===this.length&&this._width===this.width&&this._id===this.id||(this._modelMatrix=a.clone(this.modelMatrix,this._modelMatrix),this._length=this.length,this._width=this.width,this._id=this.id,i(this._primitive)&&this._primitive.destroy(),0===this.modelMatrix[12]&&0===this.modelMatrix[13]&&0===this.modelMatrix[14]&&(this.modelMatrix[14]=.01),this._primitive=new u({geometryInstances:new o({geometry:s.createGeometry(new s({positions:[e.ZERO,e.UNIT_X,e.ZERO,e.UNIT_Y,e.ZERO,e.UNIT_Z],width:this.width,vertexFormat:l.VERTEX_FORMAT,colors:[t.RED,t.RED,t.GREEN,t.GREEN,t.BLUE,t.BLUE],followSurface:!1})),modelMatrix:a.multiplyByUniformScale(this.modelMatrix,this.length,new a),id:this.id,pickPrimitive:this}),appearance:new l,asynchronous:!1})),this._primitive.update(r,n,c))},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),n(this)},c}),r("Scene/DepthFunction",["../Core/freezeObject"],function(e){"use strict";var t={NEVER:512,LESS:513,EQUAL:514,LESS_OR_EQUAL:515,GREATER:516,NOT_EQUAL:517,GREATER_OR_EQUAL:518,ALWAYS:519};return e(t)}),r("Shaders/EllipsoidFS",[],function(){"use strict";return"#ifdef WRITE_DEPTH\n#ifdef GL_EXT_frag_depth\n#extension GL_EXT_frag_depth : enable\n#endif\n#endif\nuniform vec3 u_radii;\nuniform vec3 u_oneOverEllipsoidRadiiSquared;\nvarying vec3 v_positionEC;\nvec4 computeEllipsoidColor(czm_ray ray, float intersection, float side)\n{\nvec3 positionEC = czm_pointAlongRay(ray, intersection);\nvec3 positionMC = (czm_inverseModelView * vec4(positionEC, 1.0)).xyz;\nvec3 geodeticNormal = normalize(czm_geodeticSurfaceNormal(positionMC, vec3(0.0), u_oneOverEllipsoidRadiiSquared));\nvec3 sphericalNormal = normalize(positionMC / u_radii);\nvec3 normalMC = geodeticNormal * side;\nvec3 normalEC = normalize(czm_normal * normalMC);\nvec2 st = czm_ellipsoidWgs84TextureCoordinates(sphericalNormal);\nvec3 positionToEyeEC = -positionEC;\nczm_materialInput materialInput;\nmaterialInput.s = st.s;\nmaterialInput.st = st;\nmaterialInput.str = (positionMC + u_radii) / u_radii;\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(positionMC, normalEC);\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef ONLY_SUN_LIGHTING\nreturn czm_private_phong(normalize(positionToEyeEC), material);\n#else\nreturn czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\nvoid main()\n{\nfloat maxRadius = max(u_radii.x, max(u_radii.y, u_radii.z)) * 1.5;\nvec3 direction = normalize(v_positionEC);\nvec3 ellipsoidCenter = czm_modelView[3].xyz;\nfloat t1 = -1.0;\nfloat t2 = -1.0;\nfloat b = -2.0 * dot(direction, ellipsoidCenter);\nfloat c = dot(ellipsoidCenter, ellipsoidCenter) - maxRadius * maxRadius;\nfloat discriminant = b * b - 4.0 * c;\nif (discriminant >= 0.0) {\nt1 = (-b - sqrt(discriminant)) * 0.5;\nt2 = (-b + sqrt(discriminant)) * 0.5;\n}\nif (t1 < 0.0 && t2 < 0.0) {\ndiscard;\n}\nfloat t = min(t1, t2);\nif (t < 0.0) {\nt = 0.0;\n}\nczm_ellipsoid ellipsoid = czm_ellipsoidNew(ellipsoidCenter, u_radii);\nczm_ray ray = czm_ray(t * direction, direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (czm_isEmpty(intersection))\n{\ndiscard;\n}\nvec4 outsideFaceColor = (intersection.start != 0.0) ? computeEllipsoidColor(ray, intersection.start, 1.0) : vec4(0.0);\nvec4 insideFaceColor = (outsideFaceColor.a < 1.0) ? computeEllipsoidColor(ray, intersection.stop, -1.0) : vec4(0.0);\ngl_FragColor = mix(insideFaceColor, outsideFaceColor, outsideFaceColor.a);\ngl_FragColor.a = 1.0 - (1.0 - insideFaceColor.a) * (1.0 - outsideFaceColor.a);\n#ifdef WRITE_DEPTH\n#ifdef GL_EXT_frag_depth\nt = (intersection.start != 0.0) ? intersection.start : intersection.stop;\nvec3 positionEC = czm_pointAlongRay(ray, t);\nvec4 positionCC = czm_projection * vec4(positionEC, 1.0);\nfloat z = positionCC.z / positionCC.w;\nfloat n = czm_depthRange.near;\nfloat f = czm_depthRange.far;\ngl_FragDepthEXT = (z * (f - n) + f + n) * 0.5;\n#endif\n#endif\n}\n"}),r("Shaders/EllipsoidVS",[],function(){"use strict";return"attribute vec3 position;\nuniform vec3 u_radii;\nvarying vec3 v_positionEC;\nvoid main()\n{\nvec4 p = vec4(u_radii * position, 1.0);\nv_positionEC = (czm_modelView * p).xyz;\ngl_Position = czm_modelViewProjection * p;\ngl_Position.z = clamp(gl_Position.z, czm_depthRange.near, czm_depthRange.far);\n}\n"}),r("Scene/EllipsoidPrimitive",["../Core/BoundingSphere","../Core/BoxGeometry","../Core/Cartesian3","../Core/combine","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix4","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/EllipsoidFS","../Shaders/EllipsoidVS","./BlendingState","./CullFace","./Material","./Pass","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e){var i=e.cache.ellipsoidPrimitive_vertexArray;if(o(i))return i;var n=t.createGeometry(t.fromDimensions({dimensions:new r(2,2,2),vertexFormat:u.POSITION_ONLY}));return i=e.createVertexArrayFromGeometry({geometry:n,attributeLocations:w,bufferUsage:c.STATIC_DRAW,interleave:!0}),e.cache.ellipsoidPrimitive_vertexArray=i,i}var w={position:0},S=function(t){t=n(t,n.EMPTY_OBJECT),this.center=r.clone(n(t.center,r.ZERO)),this._center=new r,this.radii=r.clone(t.radii),this._radii=new r,this._oneOverEllipsoidRadiiSquared=new r,this._boundingSphere=new e,this.modelMatrix=l.clone(n(t.modelMatrix,l.IDENTITY)),this._modelMatrix=new l,this._computedModelMatrix=new l,this.show=n(t.show,!0),this.material=n(t.material,g.fromType(g.ColorType)),this._material=void 0,this._translucent=void 0,this.id=t.id,this._id=void 0,this.debugShowBoundingVolume=n(t.debugShowBoundingVolume,!1),this.onlySunLighting=n(t.onlySunLighting,!1),this._onlySunLighting=!1,this._sp=void 0,this._rs=void 0,this._va=void 0,this._pickSP=void 0,this._pickId=void 0,this._colorCommand=new d({owner:n(t._owner,this)}),this._pickCommand=new d({owner:n(t._owner,this)});var i=this;this._uniforms={u_radii:function(){return i.radii},u_oneOverEllipsoidRadiiSquared:function(){return i._oneOverEllipsoidRadiiSquared}},this._pickUniforms={czm_pickColor:function(){return i._pickId.color}}};return S.prototype.update=function(t,n,a){if(this.show&&n.mode===y.SCENE3D&&o(this.center)&&o(this.radii)){var s=this.material.isTranslucent(),u=this._translucent!==s;(!o(this._rs)||u)&&(this._translucent=s,this._rs=t.createRenderState({cull:{enabled:!0,face:v.FRONT},depthTest:{enabled:!0},depthMask:!s&&t.fragmentDepth,blending:s?f.ALPHA_BLEND:void 0})),o(this._va)||(this._va=C(t));var c=!1,d=this.radii;if(!r.equals(this._radii,d)){r.clone(d,this._radii);var g=this._oneOverEllipsoidRadiiSquared;g.x=1/(d.x*d.x),g.y=1/(d.y*d.y),g.z=1/(d.z*d.z),c=!0}l.equals(this.modelMatrix,this._modelMatrix)&&r.equals(this.center,this._center)||(l.clone(this.modelMatrix,this._modelMatrix),r.clone(this.center,this._center),l.multiplyByTranslation(this.modelMatrix,this.center,this._computedModelMatrix),c=!0),c&&(r.clone(r.ZERO,this._boundingSphere.center),this._boundingSphere.radius=r.maximumComponent(d),e.transform(this._boundingSphere,this._computedModelMatrix,this._boundingSphere));var S=this._material!==this.material;this._material=this.material,this._material.update(t);var E=this.onlySunLighting!==this._onlySunLighting;this._onlySunLighting=this.onlySunLighting;var b=this._colorCommand;if(S||E||u){var T=h({defines:[this.onlySunLighting?"ONLY_SUN_LIGHTING":"",!s&&t.fragmentDepth?"WRITE_DEPTH":""],sources:[this.material.shaderSource,m]});this._sp=t.replaceShaderProgram(this._sp,p,T,w),b.vertexArray=this._va,b.renderState=this._rs,b.shaderProgram=this._sp,b.uniformMap=i(this._uniforms,this.material._uniforms),b.executeInClosestFrustum=s}var x=n.passes;if(x.render&&(b.boundingVolume=this._boundingSphere,b.debugShowBoundingVolume=this.debugShowBoundingVolume,b.modelMatrix=this._computedModelMatrix,b.pass=s?_.TRANSLUCENT:_.OPAQUE,a.push(b)),x.pick){var P=this._pickCommand;if(o(this._pickId)&&this._id===this.id||(this._id=this.id,this._pickId=this._pickId&&this._pickId.destroy(),this._pickId=t.createPickId({primitive:this,id:this.id})),S||E||!o(this._pickSP)){var A=h({defines:[this.onlySunLighting?"ONLY_SUN_LIGHTING":"",!s&&t.fragmentDepth?"WRITE_DEPTH":""],sources:[this.material.shaderSource,m],pickColorQualifier:"uniform"});this._pickSP=t.replaceShaderProgram(this._pickSP,p,A,w),P.vertexArray=this._va,P.renderState=this._rs,P.shaderProgram=this._pickSP,P.uniformMap=i(i(this._uniforms,this._pickUniforms),this.material._uniforms),P.executeInClosestFrustum=s}P.boundingVolume=this._boundingSphere,P.modelMatrix=this._computedModelMatrix,P.pass=s?_.TRANSLUCENT:_.OPAQUE,a.push(P)}}},S.prototype.isDestroyed=function(){return!1},S.prototype.destroy=function(){return this._sp=this._sp&&this._sp.destroy(),this._pickSP=this._pickSP&&this._pickSP.destroy(),this._pickId=this._pickId&&this._pickId.destroy(),a(this)},S}),r("Shaders/Appearances/EllipsoidSurfaceAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nvec3 normalEC = czm_normal3D * czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0));\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC));\n#else\nnormalEC = normalize(normalEC);\n#endif\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(v_positionMC, materialInput.normalEC);\nvec3 positionToEyeEC = -v_positionEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/EllipsoidSurfaceAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec2 st;\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionMC = position3DHigh + position3DLow;\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/EllipsoidSurfaceAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/EllipsoidSurfaceAppearanceFS","../Shaders/Appearances/EllipsoidSurfaceAppearanceVS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),l=e(r.aboveGround,!1);this.material=t(r.material)?r.material:s.fromType(s.ColorType),this.translucent=e(r.translucent,!0),this._vertexShaderSource=e(r.vertexShaderSource,o),this._fragmentShaderSource=e(r.fragmentShaderSource,n),this._renderState=e(r.renderState,a.getDefaultRenderState(i,!l)),this._closed=!1,this._flat=e(r.flat,!1),this._faceForward=e(r.faceForward,l),this._aboveGround=l};return r(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return l.VERTEX_FORMAT}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}},aboveGround:{get:function(){return this._aboveGround}}}),l.VERTEX_FORMAT=i.POSITION_AND_ST,l.prototype.getFragmentShaderSource=a.prototype.getFragmentShaderSource,l.prototype.isTranslucent=a.prototype.isTranslucent,l.prototype.getRenderState=a.prototype.getRenderState,l}),r("Shaders/PostProcessFilters/FXAA",[],function(){"use strict";return"#ifndef FXAA_PRESET\n#define FXAA_PRESET 3\n#endif\n#if (FXAA_PRESET == 3)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        16\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#if (FXAA_PRESET == 4)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        24\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#if (FXAA_PRESET == 5)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        32\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#define FXAA_SUBPIX_TRIM_SCALE (1.0/(1.0 - FXAA_SUBPIX_TRIM))\nfloat FxaaLuma(vec3 rgb) {\nreturn rgb.y * (0.587/0.299) + rgb.x;\n}\nvec3 FxaaLerp3(vec3 a, vec3 b, float amountOfA) {\nreturn (vec3(-amountOfA) * b) + ((a * vec3(amountOfA)) + b);\n}\nvec4 FxaaTexOff(sampler2D tex, vec2 pos, ivec2 off, vec2 rcpFrame) {\nfloat x = pos.x + float(off.x) * rcpFrame.x;\nfloat y = pos.y + float(off.y) * rcpFrame.y;\nreturn texture2D(tex, vec2(x, y));\n}\nvec3 FxaaPixelShader(vec2 pos, sampler2D tex, vec2 rcpFrame)\n{\nvec3 rgbN = FxaaTexOff(tex, pos.xy, ivec2( 0,-1), rcpFrame).xyz;\nvec3 rgbW = FxaaTexOff(tex, pos.xy, ivec2(-1, 0), rcpFrame).xyz;\nvec3 rgbM = FxaaTexOff(tex, pos.xy, ivec2( 0, 0), rcpFrame).xyz;\nvec3 rgbE = FxaaTexOff(tex, pos.xy, ivec2( 1, 0), rcpFrame).xyz;\nvec3 rgbS = FxaaTexOff(tex, pos.xy, ivec2( 0, 1), rcpFrame).xyz;\nfloat lumaN = FxaaLuma(rgbN);\nfloat lumaW = FxaaLuma(rgbW);\nfloat lumaM = FxaaLuma(rgbM);\nfloat lumaE = FxaaLuma(rgbE);\nfloat lumaS = FxaaLuma(rgbS);\nfloat rangeMin = min(lumaM, min(min(lumaN, lumaW), min(lumaS, lumaE)));\nfloat rangeMax = max(lumaM, max(max(lumaN, lumaW), max(lumaS, lumaE)));\nfloat range = rangeMax - rangeMin;\nif(range < max(FXAA_EDGE_THRESHOLD_MIN, rangeMax * FXAA_EDGE_THRESHOLD))\n{\nreturn rgbM;\n}\nvec3 rgbL = rgbN + rgbW + rgbM + rgbE + rgbS;\nfloat lumaL = (lumaN + lumaW + lumaE + lumaS) * 0.25;\nfloat rangeL = abs(lumaL - lumaM);\nfloat blendL = max(0.0, (rangeL / range) - FXAA_SUBPIX_TRIM) * FXAA_SUBPIX_TRIM_SCALE;\nblendL = min(FXAA_SUBPIX_CAP, blendL);\nvec3 rgbNW = FxaaTexOff(tex, pos.xy, ivec2(-1,-1), rcpFrame).xyz;\nvec3 rgbNE = FxaaTexOff(tex, pos.xy, ivec2( 1,-1), rcpFrame).xyz;\nvec3 rgbSW = FxaaTexOff(tex, pos.xy, ivec2(-1, 1), rcpFrame).xyz;\nvec3 rgbSE = FxaaTexOff(tex, pos.xy, ivec2( 1, 1), rcpFrame).xyz;\nrgbL += (rgbNW + rgbNE + rgbSW + rgbSE);\nrgbL *= vec3(1.0/9.0);\nfloat lumaNW = FxaaLuma(rgbNW);\nfloat lumaNE = FxaaLuma(rgbNE);\nfloat lumaSW = FxaaLuma(rgbSW);\nfloat lumaSE = FxaaLuma(rgbSE);\nfloat edgeVert =\nabs((0.25 * lumaNW) + (-0.5 * lumaN) + (0.25 * lumaNE)) +\nabs((0.50 * lumaW ) + (-1.0 * lumaM) + (0.50 * lumaE )) +\nabs((0.25 * lumaSW) + (-0.5 * lumaS) + (0.25 * lumaSE));\nfloat edgeHorz =\nabs((0.25 * lumaNW) + (-0.5 * lumaW) + (0.25 * lumaSW)) +\nabs((0.50 * lumaN ) + (-1.0 * lumaM) + (0.50 * lumaS )) +\nabs((0.25 * lumaNE) + (-0.5 * lumaE) + (0.25 * lumaSE));\nbool horzSpan = edgeHorz >= edgeVert;\nfloat lengthSign = horzSpan ? -rcpFrame.y : -rcpFrame.x;\nif(!horzSpan)\n{\nlumaN = lumaW;\nlumaS = lumaE;\n}\nfloat gradientN = abs(lumaN - lumaM);\nfloat gradientS = abs(lumaS - lumaM);\nlumaN = (lumaN + lumaM) * 0.5;\nlumaS = (lumaS + lumaM) * 0.5;\nif (gradientN < gradientS)\n{\nlumaN = lumaS;\nlumaN = lumaS;\ngradientN = gradientS;\nlengthSign *= -1.0;\n}\nvec2 posN;\nposN.x = pos.x + (horzSpan ? 0.0 : lengthSign * 0.5);\nposN.y = pos.y + (horzSpan ? lengthSign * 0.5 : 0.0);\ngradientN *= FXAA_SEARCH_THRESHOLD;\nvec2 posP = posN;\nvec2 offNP = horzSpan ? vec2(rcpFrame.x, 0.0) : vec2(0.0, rcpFrame.y);\nfloat lumaEndN = lumaN;\nfloat lumaEndP = lumaN;\nbool doneN = false;\nbool doneP = false;\nposN += offNP * vec2(-1.0, -1.0);\nposP += offNP * vec2( 1.0,  1.0);\nfor(int i = 0; i < FXAA_SEARCH_STEPS; i++) {\nif(!doneN)\n{\nlumaEndN = FxaaLuma(texture2D(tex, posN.xy).xyz);\n}\nif(!doneP)\n{\nlumaEndP = FxaaLuma(texture2D(tex, posP.xy).xyz);\n}\ndoneN = doneN || (abs(lumaEndN - lumaN) >= gradientN);\ndoneP = doneP || (abs(lumaEndP - lumaN) >= gradientN);\nif(doneN && doneP)\n{\nbreak;\n}\nif(!doneN)\n{\nposN -= offNP;\n}\nif(!doneP)\n{\nposP += offNP;\n}\n}\nfloat dstN = horzSpan ? pos.x - posN.x : pos.y - posN.y;\nfloat dstP = horzSpan ? posP.x - pos.x : posP.y - pos.y;\nbool directionN = dstN < dstP;\nlumaEndN = directionN ? lumaEndN : lumaEndP;\nif(((lumaM - lumaN) < 0.0) == ((lumaEndN - lumaN) < 0.0))\n{\nlengthSign = 0.0;\n}\nfloat spanLength = (dstP + dstN);\ndstN = directionN ? dstN : dstP;\nfloat subPixelOffset = (0.5 + (dstN * (-1.0/spanLength))) * lengthSign;\nvec3 rgbF = texture2D(tex, vec2(\npos.x + (horzSpan ? 0.0 : subPixelOffset),\npos.y + (horzSpan ? subPixelOffset : 0.0))).xyz;\nreturn FxaaLerp3(rgbL, rgbF, blendL);\n}\nuniform sampler2D u_texture;\nuniform vec2 u_step;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = vec4(FxaaPixelShader(v_textureCoordinates, u_texture, u_step), 1.0);\n}\n"}),r("Scene/FXAA",["../Core/Cartesian2","../Core/Color","../Core/defined","../Core/destroyObject","../Core/PixelFormat","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/PixelDatatype","../Renderer/RenderbufferFormat","../Shaders/PostProcessFilters/FXAA"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e){e._fbo=e._fbo&&e._fbo.destroy(),e._texture=e._texture&&e._texture.destroy(),e._depthTexture=e._depthTexture&&e._depthTexture.destroy(),e._depthRenderbuffer=e._depthRenderbuffer&&e._depthRenderbuffer.destroy(),e._fbo=void 0,e._texture=void 0,e._depthTexture=void 0,e._depthRenderbuffer=void 0,r(e._command)&&(e._command.shaderProgram=e._command.shaderProgram&&e._command.shaderProgram.destroy(),e._command=void 0)}var h=function(){this._texture=void 0,this._depthTexture=void 0,this._depthRenderbuffer=void 0,this._fbo=void 0,this._command=void 0;var e=new o({color:new t(0,0,0,0),depth:1,owner:this});this._clearCommand=e};return h.prototype.update=function(t){var i=t.drawingBufferWidth,o=t.drawingBufferHeight,c=this._texture,h=!r(c)||c.width!==i||c.height!==o;if(h&&(this._texture=this._texture&&this._texture.destroy(),this._depthTexture=this._depthTexture&&this._depthTexture.destroy(),this._depthRenderbuffer=this._depthRenderbuffer&&this._depthRenderbuffer.destroy(),this._texture=t.createTexture2D({width:i,height:o,pixelFormat:n.RGBA,pixelDatatype:s.UNSIGNED_BYTE}),t.depthTexture?this._depthTexture=t.createTexture2D({width:i,height:o,pixelFormat:n.DEPTH_COMPONENT,pixelDatatype:s.UNSIGNED_SHORT}):this._depthRenderbuffer=t.createRenderbuffer({width:i,height:o,format:l.DEPTH_COMPONENT16})),(!r(this._fbo)||h)&&(this._fbo=this._fbo&&this._fbo.destroy(),this._fbo=t.createFramebuffer({colorTextures:[this._texture],depthTexture:this._depthTexture,depthRenderbuffer:this._depthRenderbuffer,destroyAttachments:!1})),!r(this._command)){var d=a({sources:[u]});this._command=t.createViewportQuadCommand(d,{renderState:t.createRenderState(),owner:this})}if(h){var m=this,p=new e(1/this._texture.width,1/this._texture.height);this._command.uniformMap={u_texture:function(){return m._texture},u_step:function(){return p}}}},h.prototype.execute=function(e,t){this._command.execute(e,t)},h.prototype.clear=function(e,r,i){var n=r.framebuffer;r.framebuffer=this._fbo,t.clone(i,this._clearCommand.color),this._clearCommand.execute(e,r),r.framebuffer=n},h.prototype.getColorFramebuffer=function(){return this._fbo},h.prototype.isDestroyed=function(){return!1},h.prototype.destroy=function(){return c(this),i(this)},h}),r("Scene/FrameRateMonitor",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/getTimestamp","../Core/TimeConstants"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){if(!(e._pauseCount>0)){var t=a();if(e._needsQuietPeriod)e._needsQuietPeriod=!1,e._frameTimes.length=0,e._quietPeriodEndTime=t+e.quietPeriod/s.SECONDS_PER_MILLISECOND,e._warmupPeriodEndTime=e._quietPeriodEndTime+(e.warmupPeriod+e.samplingWindow)/s.SECONDS_PER_MILLISECOND;else if(t>=e._quietPeriodEndTime){e._frameTimes.push(t);var r=t-e.samplingWindow/s.SECONDS_PER_MILLISECOND;if(e._frameTimes.length>=2&&e._frameTimes[0]<=r){for(;e._frameTimes.length>=2&&e._frameTimes[1]<r;)e._frameTimes.shift();
var i=(t-e._frameTimes[0])/(e._frameTimes.length-1);e._lastFramesPerSecond=1e3/i;var n=1e3/(t>e._warmupPeriodEndTime?e.minimumFrameRateAfterWarmup:e.minimumFrameRateDuringWarmup);i>n?e._frameRateIsLow||(e._frameRateIsLow=!0,e._needsQuietPeriod=!0,e.lowFrameRate.raiseEvent(e.scene,e._lastFramesPerSecond)):e._frameRateIsLow&&(e._frameRateIsLow=!1,e._needsQuietPeriod=!0,e.nominalFrameRate.raiseEvent(e.scene,e._lastFramesPerSecond))}}}}function u(e){document[e._hiddenPropertyName]?e.pause():e.unpause()}var c=function(r){function i(){u(n)}this._scene=r.scene,this.samplingWindow=e(r.samplingWindow,c.defaultSettings.samplingWindow),this.quietPeriod=e(r.quietPeriod,c.defaultSettings.quietPeriod),this.warmupPeriod=e(r.warmupPeriod,c.defaultSettings.warmupPeriod),this.minimumFrameRateDuringWarmup=e(r.minimumFrameRateDuringWarmup,c.defaultSettings.minimumFrameRateDuringWarmup),this.minimumFrameRateAfterWarmup=e(r.minimumFrameRateAfterWarmup,c.defaultSettings.minimumFrameRateAfterWarmup),this._lowFrameRate=new o,this._nominalFrameRate=new o,this._frameTimes=[],this._needsQuietPeriod=!0,this._quietPeriodEndTime=0,this._warmupPeriodEndTime=0,this._frameRateIsLow=!1,this._lastFramesPerSecond=void 0,this._pauseCount=0;var n=this;this._preRenderRemoveListener=this._scene.preRender.addEventListener(function(e,t){l(n,t)}),this._hiddenPropertyName=t(document.hidden)?"hidden":t(document.mozHidden)?"mozHidden":t(document.msHidden)?"msHidden":t(document.webkitHidden)?"webkitHidden":void 0;var a=t(document.hidden)?"visibilitychange":t(document.mozHidden)?"mozvisibilitychange":t(document.msHidden)?"msvisibilitychange":t(document.webkitHidden)?"webkitvisibilitychange":void 0;this._visibilityChangeRemoveListener=void 0,t(a)&&(document.addEventListener(a,i,!1),this._visibilityChangeRemoveListener=function(){document.removeEventListener(a,i,!1)})};return c.defaultSettings={samplingWindow:5,quietPeriod:2,warmupPeriod:5,minimumFrameRateDuringWarmup:4,minimumFrameRateAfterWarmup:8},c.fromScene=function(e){return(!t(e._frameRateMonitor)||e._frameRateMonitor.isDestroyed())&&(e._frameRateMonitor=new c({scene:e})),e._frameRateMonitor},r(c.prototype,{scene:{get:function(){return this._scene}},lowFrameRate:{get:function(){return this._lowFrameRate}},nominalFrameRate:{get:function(){return this._nominalFrameRate}},lastFramesPerSecond:{get:function(){return this._lastFramesPerSecond}}}),c.prototype.pause=function(){++this._pauseCount,1===this._pauseCount&&(this._frameTimes.length=0,this._lastFramesPerSecond=void 0)},c.prototype.unpause=function(){--this._pauseCount,this._pauseCount<=0&&(this._pauseCount=0,this._needsQuietPeriod=!0)},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._preRenderRemoveListener(),t(this._visibilityChangeRemoveListener)&&this._visibilityChangeRemoveListener(),i(this)},c}),r("Scene/FrameState",["./SceneMode"],function(e){"use strict";var t=function(t){this.mode=e.SCENE3D,this.morphTime=e.getMorphTime(e.SCENE3D),this.frameNumber=0,this.time=void 0,this.mapProjection=void 0,this.camera=void 0,this.cullingVolume=void 0,this.occluder=void 0,this.passes={render:!1,pick:!1},this.creditDisplay=t,this.afterRender=[],this.scene3DOnly=!1};return t}),r("Scene/FrustumCommands",["../Core/defaultValue"],function(e){"use strict";var t=function(t,r){this.near=e(t,0),this.far=e(r,0),this.opaqueCommands=[],this.translucentCommands=[]};return t}),r("Shaders/GlobeFS",[],function(){"use strict";return"uniform vec4 u_initialColor;\n#if TEXTURE_UNITS > 0\nuniform sampler2D u_dayTextures[TEXTURE_UNITS];\nuniform vec4 u_dayTextureTranslationAndScale[TEXTURE_UNITS];\n#ifdef APPLY_ALPHA\nuniform float u_dayTextureAlpha[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_BRIGHTNESS\nuniform float u_dayTextureBrightness[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_CONTRAST\nuniform float u_dayTextureContrast[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_HUE\nuniform float u_dayTextureHue[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_SATURATION\nuniform float u_dayTextureSaturation[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_GAMMA\nuniform float u_dayTextureOneOverGamma[TEXTURE_UNITS];\n#endif\nuniform vec4 u_dayTextureTexCoordsRectangle[TEXTURE_UNITS];\n#endif\n#ifdef SHOW_REFLECTIVE_OCEAN\nuniform sampler2D u_waterMask;\nuniform vec4 u_waterMaskTranslationAndScale;\nuniform float u_zoomedOutOceanSpecularIntensity;\n#endif\n#ifdef SHOW_OCEAN_WAVES\nuniform sampler2D u_oceanNormalMap;\n#endif\n#ifdef ENABLE_DAYNIGHT_SHADING\nuniform vec2 u_lightingFadeDistance;\n#endif\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_textureCoordinates;\nvarying vec3 v_normalMC;\nvarying vec3 v_normalEC;\nvec4 sampleAndBlend(\nvec4 previousColor,\nsampler2D texture,\nvec2 tileTextureCoordinates,\nvec4 textureCoordinateRectangle,\nvec4 textureCoordinateTranslationAndScale,\nfloat textureAlpha,\nfloat textureBrightness,\nfloat textureContrast,\nfloat textureHue,\nfloat textureSaturation,\nfloat textureOneOverGamma)\n{\nvec2 alphaMultiplier = step(textureCoordinateRectangle.st, tileTextureCoordinates);\ntextureAlpha = textureAlpha * alphaMultiplier.x * alphaMultiplier.y;\nalphaMultiplier = step(vec2(0.0), textureCoordinateRectangle.pq - tileTextureCoordinates);\ntextureAlpha = textureAlpha * alphaMultiplier.x * alphaMultiplier.y;\nvec2 translation = textureCoordinateTranslationAndScale.xy;\nvec2 scale = textureCoordinateTranslationAndScale.zw;\nvec2 textureCoordinates = tileTextureCoordinates * scale + translation;\nvec4 sample = texture2D(texture, textureCoordinates);\nvec3 color = sample.rgb;\nfloat alpha = sample.a;\n#ifdef APPLY_BRIGHTNESS\ncolor = mix(vec3(0.0), color, textureBrightness);\n#endif\n#ifdef APPLY_CONTRAST\ncolor = mix(vec3(0.5), color, textureContrast);\n#endif\n#ifdef APPLY_HUE\ncolor = czm_hue(color, textureHue);\n#endif\n#ifdef APPLY_SATURATION\ncolor = czm_saturation(color, textureSaturation);\n#endif\n#ifdef APPLY_GAMMA\ncolor = pow(color, vec3(textureOneOverGamma));\n#endif\nfloat sourceAlpha = alpha * textureAlpha;\nfloat outAlpha = mix(previousColor.a, 1.0, sourceAlpha);\nvec3 outColor = mix(previousColor.rgb * previousColor.a, color, sourceAlpha) / outAlpha;\nreturn vec4(outColor, outAlpha);\n}\nvec4 computeDayColor(vec4 initialColor, vec2 textureCoordinates);\nvec4 computeWaterColor(vec3 positionEyeCoordinates, vec2 textureCoordinates, mat3 enuToEye, vec4 imageryColor, float specularMapValue);\nvoid main()\n{\nvec4 color = computeDayColor(u_initialColor, clamp(v_textureCoordinates, 0.0, 1.0));\n#ifdef SHOW_TILE_BOUNDARIES\nif (v_textureCoordinates.x < (1.0/256.0) || v_textureCoordinates.x > (255.0/256.0) ||\nv_textureCoordinates.y < (1.0/256.0) || v_textureCoordinates.y > (255.0/256.0))\n{\ncolor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n#endif\n#if defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING)\nvec3 normalMC = normalize(czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0)));\nvec3 normalEC = normalize(czm_normal3D * normalMC);\n#elif defined(ENABLE_VERTEX_LIGHTING)\nvec3 normalMC = normalize(v_normalMC);\nvec3 normalEC = normalize(v_normalEC);\n#endif\n#ifdef SHOW_REFLECTIVE_OCEAN\nvec2 waterMaskTranslation = u_waterMaskTranslationAndScale.xy;\nvec2 waterMaskScale = u_waterMaskTranslationAndScale.zw;\nvec2 waterMaskTextureCoordinates = v_textureCoordinates * waterMaskScale + waterMaskTranslation;\nfloat mask = texture2D(u_waterMask, waterMaskTextureCoordinates).r;\nif (mask > 0.0)\n{\nmat3 enuToEye = czm_eastNorthUpToEyeCoordinates(v_positionMC, normalEC);\nvec2 ellipsoidTextureCoordinates = czm_ellipsoidWgs84TextureCoordinates(normalMC);\nvec2 ellipsoidFlippedTextureCoordinates = czm_ellipsoidWgs84TextureCoordinates(normalMC.zyx);\nvec2 textureCoordinates = mix(ellipsoidTextureCoordinates, ellipsoidFlippedTextureCoordinates, czm_morphTime * smoothstep(0.9, 0.95, normalMC.z));\ncolor = computeWaterColor(v_positionEC, textureCoordinates, enuToEye, color, mask);\n}\n#endif\n#ifdef ENABLE_VERTEX_LIGHTING\nfloat diffuseIntensity = czm_getLambertDiffuse(czm_sunDirectionEC, normalEC) * 0.8 + 0.2;\ngl_FragColor = vec4(color.rgb * diffuseIntensity, color.a);\n#elif defined(ENABLE_DAYNIGHT_SHADING)\nfloat diffuseIntensity = clamp(czm_getLambertDiffuse(czm_sunDirectionEC, normalEC) * 5.0 + 0.3, 0.0, 1.0);\nfloat cameraDist = length(czm_view[3]);\nfloat fadeOutDist = u_lightingFadeDistance.x;\nfloat fadeInDist = u_lightingFadeDistance.y;\nfloat t = clamp((cameraDist - fadeOutDist) / (fadeInDist - fadeOutDist), 0.0, 1.0);\ndiffuseIntensity = mix(1.0, diffuseIntensity, t);\ngl_FragColor = vec4(color.rgb * diffuseIntensity, color.a);\n#else\ngl_FragColor = color;\n#endif\n}\n#ifdef SHOW_REFLECTIVE_OCEAN\nfloat waveFade(float edge0, float edge1, float x)\n{\nfloat y = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\nreturn pow(1.0 - y, 5.0);\n}\nfloat linearFade(float edge0, float edge1, float x)\n{\nreturn clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n}\nconst float oceanFrequencyLowAltitude = 825000.0;\nconst float oceanAnimationSpeedLowAltitude = 0.004;\nconst float oceanOneOverAmplitudeLowAltitude = 1.0 / 2.0;\nconst float oceanSpecularIntensity = 0.5;\nconst float oceanFrequencyHighAltitude = 125000.0;\nconst float oceanAnimationSpeedHighAltitude = 0.008;\nconst float oceanOneOverAmplitudeHighAltitude = 1.0 / 2.0;\nvec4 computeWaterColor(vec3 positionEyeCoordinates, vec2 textureCoordinates, mat3 enuToEye, vec4 imageryColor, float specularMapValue)\n{\nvec3 positionToEyeEC = -positionEyeCoordinates;\nfloat positionToEyeECLength = length(positionToEyeEC);\nvec3 normalizedpositionToEyeEC = normalize(normalize(positionToEyeEC));\nfloat waveIntensity = waveFade(70000.0, 1000000.0, positionToEyeECLength);\n#ifdef SHOW_OCEAN_WAVES\nfloat time = czm_frameNumber * oceanAnimationSpeedHighAltitude;\nvec4 noise = czm_getWaterNoise(u_oceanNormalMap, textureCoordinates * oceanFrequencyHighAltitude, time, 0.0);\nvec3 normalTangentSpaceHighAltitude = vec3(noise.xy, noise.z * oceanOneOverAmplitudeHighAltitude);\ntime = czm_frameNumber * oceanAnimationSpeedLowAltitude;\nnoise = czm_getWaterNoise(u_oceanNormalMap, textureCoordinates * oceanFrequencyLowAltitude, time, 0.0);\nvec3 normalTangentSpaceLowAltitude = vec3(noise.xy, noise.z * oceanOneOverAmplitudeLowAltitude);\nfloat highAltitudeFade = linearFade(0.0, 60000.0, positionToEyeECLength);\nfloat lowAltitudeFade = 1.0 - linearFade(20000.0, 60000.0, positionToEyeECLength);\nvec3 normalTangentSpace =\n(highAltitudeFade * normalTangentSpaceHighAltitude) +\n(lowAltitudeFade * normalTangentSpaceLowAltitude);\nnormalTangentSpace = normalize(normalTangentSpace);\nnormalTangentSpace.xy *= waveIntensity;\nnormalTangentSpace = normalize(normalTangentSpace);\n#else\nvec3 normalTangentSpace = vec3(0.0, 0.0, 1.0);\n#endif\nvec3 normalEC = enuToEye * normalTangentSpace;\nconst vec3 waveHighlightColor = vec3(0.3, 0.45, 0.6);\nfloat diffuseIntensity = czm_getLambertDiffuse(czm_sunDirectionEC, normalEC);\nvec3 diffuseHighlight = waveHighlightColor * diffuseIntensity;\n#ifdef SHOW_OCEAN_WAVES\nfloat tsPerturbationRatio = normalTangentSpace.z;\nvec3 nonDiffuseHighlight = mix(waveHighlightColor * 5.0 * (1.0 - tsPerturbationRatio), vec3(0.0), diffuseIntensity);\n#else\nvec3 nonDiffuseHighlight = vec3(0.0);\n#endif\nfloat specularIntensity = czm_getSpecular(czm_sunDirectionEC, normalizedpositionToEyeEC, normalEC, 10.0) + 0.25 * czm_getSpecular(czm_moonDirectionEC, normalizedpositionToEyeEC, normalEC, 10.0);\nfloat surfaceReflectance = mix(0.0, mix(u_zoomedOutOceanSpecularIntensity, oceanSpecularIntensity, waveIntensity), specularMapValue);\nfloat specular = specularIntensity * surfaceReflectance;\nreturn vec4(imageryColor.rgb + diffuseHighlight + nonDiffuseHighlight + specular, imageryColor.a);\n}\n#endif\n"}),r("Shaders/GlobeFSDepth",[],function(){"use strict";return"varying vec4 positionEC;\nvoid main()\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(positionEC.xyz);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection))\n{\ngl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n}\nelse\n{\ndiscard;\n}\n}\n"}),r("Shaders/GlobeFSPole",[],function(){"use strict";return"uniform vec3 u_color;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(czm_windowToEyeCoordinates(gl_FragCoord).xyz);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection))\n{\nvec3 positionEC = czm_pointAlongRay(ray, intersection.start);\nvec3 positionMC = (czm_inverseModelView * vec4(positionEC, 1.0)).xyz;\nvec3 normalMC = normalize(czm_geodeticSurfaceNormal(positionMC, vec3(0.0), vec3(1.0)));\nvec3 normalEC = normalize(czm_normal * normalMC);\nvec3 startDayColor = u_color;\ngl_FragColor = vec4(startDayColor, 1.0);\n}\nelse\n{\ndiscard;\n}\n}\n"}),r("Shaders/GlobeVS",[],function(){"use strict";return"attribute vec4 position3DAndHeight;\nattribute vec4 textureCoordAndEncodedNormals;\nuniform vec3 u_center3D;\nuniform mat4 u_modifiedModelView;\nuniform vec4 u_tileRectangle;\nuniform vec2 u_southAndNorthLatitude;\nuniform vec3 u_southMercatorYLowAndHighAndOneOverHeight;\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_textureCoordinates;\nvarying vec3 v_normalMC;\nvarying vec3 v_normalEC;\nvec4 getPosition(vec3 position3DWC);\nfloat get2DYPositionFraction();\nvec4 getPosition3DMode(vec3 position3DWC)\n{\nreturn czm_projection * (u_modifiedModelView * vec4(position3DAndHeight.xyz, 1.0));\n}\nfloat get2DMercatorYPositionFraction()\n{\nconst float maxTileWidth = 0.003068;\nfloat positionFraction = textureCoordAndEncodedNormals.y;\nfloat southLatitude = u_southAndNorthLatitude.x;\nfloat northLatitude = u_southAndNorthLatitude.y;\nif (northLatitude - southLatitude > maxTileWidth)\n{\nfloat southMercatorYLow = u_southMercatorYLowAndHighAndOneOverHeight.x;\nfloat southMercatorYHigh = u_southMercatorYLowAndHighAndOneOverHeight.y;\nfloat oneOverMercatorHeight = u_southMercatorYLowAndHighAndOneOverHeight.z;\nfloat currentLatitude = mix(southLatitude, northLatitude, textureCoordAndEncodedNormals.y);\ncurrentLatitude = clamp(currentLatitude, -czm_webMercatorMaxLatitude, czm_webMercatorMaxLatitude);\npositionFraction = czm_latitudeToWebMercatorFraction(currentLatitude, southMercatorYLow, southMercatorYHigh, oneOverMercatorHeight);\n}\nreturn positionFraction;\n}\nfloat get2DGeographicYPositionFraction()\n{\nreturn textureCoordAndEncodedNormals.y;\n}\nvec4 getPositionPlanarEarth(vec3 position3DWC, float height2D)\n{\nfloat yPositionFraction = get2DYPositionFraction();\nvec4 rtcPosition2D = vec4(height2D, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordAndEncodedNormals.x, yPositionFraction)), 1.0);\nreturn czm_projection * (u_modifiedModelView * rtcPosition2D);\n}\nvec4 getPosition2DMode(vec3 position3DWC)\n{\nreturn getPositionPlanarEarth(position3DWC, 0.0);\n}\nvec4 getPositionColumbusViewMode(vec3 position3DWC)\n{\nreturn getPositionPlanarEarth(position3DWC, position3DAndHeight.w);\n}\nvec4 getPositionMorphingMode(vec3 position3DWC)\n{\nfloat yPositionFraction = get2DYPositionFraction();\nvec4 position2DWC = vec4(0.0, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordAndEncodedNormals.x, yPositionFraction)), 1.0);\nvec4 morphPosition = czm_columbusViewMorph(position2DWC, vec4(position3DWC, 1.0), czm_morphTime);\nreturn czm_modelViewProjection * morphPosition;\n}\nvoid main()\n{\nvec3 position3DWC = position3DAndHeight.xyz + u_center3D;\ngl_Position = getPosition(position3DWC);\n#if defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING)\nv_positionEC = (czm_modelView3D * vec4(position3DWC, 1.0)).xyz;\nv_positionMC = position3DWC;\n#elif defined(ENABLE_VERTEX_LIGHTING)\nv_positionEC = (czm_modelView3D * vec4(position3DWC, 1.0)).xyz;\nv_positionMC = position3DWC;\nvec2 encodedNormal = textureCoordAndEncodedNormals.zw;\nencodedNormal = encodedNormal / 255.0 * 2.0 - 1.0;\nv_normalMC = czm_octDecode(encodedNormal);\nv_normalEC = czm_normal3D * v_normalMC;\n#endif\nv_textureCoordinates = textureCoordAndEncodedNormals.xy;\n}\n"}),r("Shaders/GlobeVSDepth",[],function(){"use strict";return"attribute vec4 position;\nvarying vec4 positionEC;\nvoid main()\n{\npositionEC = czm_modelView * position;\ngl_Position = czm_projection * positionEC;\n}\n"}),r("Shaders/GlobeVSPole",[],function(){"use strict";return"attribute vec4 position;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nfloat x = (position.x - czm_viewport.x) / czm_viewport.z;\nfloat y = (position.y - czm_viewport.y) / czm_viewport.w;\nv_textureCoordinates = vec2(x, y);\ngl_Position = czm_viewportOrthographic * position;\n}\n"}),r("Scene/terrainAttributeLocations",[],function(){"use strict";return{position3DAndHeight:0,textureCoordAndEncodedNormals:1}}),r("Scene/GlobeSurfaceShaderSet",["../Core/defined","../Core/destroyObject","../Scene/terrainAttributeLocations"],function(e,t,r){"use strict";function i(){this.baseVertexShaderString=void 0,this.baseFragmentShaderString=void 0,this._attributeLocations=r,this._shaders={}}function n(e,t,r,i,n,o,a){var s="";return s+=e,t&&(s+="_brightness"),r&&(s+="_contrast"),i&&(s+="_hue"),n&&(s+="_saturation"),o&&(s+="_gamma"),a&&(s+="_alpha"),s}return i.prototype.invalidateShaders=function(){var e=this._shaders;for(var t in e)e.hasOwnProperty(t)&&e[t].destroy();this._shaders={}},i.prototype.getShaderProgram=function(t,r,i,o,a,s,l,u){var c=n(r,i,o,a,s,l,u),h=this._shaders[c];if(!e(h)){for(var d=this.baseVertexShaderString,m=(i?"#define APPLY_BRIGHTNESS\n":"")+(o?"#define APPLY_CONTRAST\n":"")+(a?"#define APPLY_HUE\n":"")+(s?"#define APPLY_SATURATION\n":"")+(l?"#define APPLY_GAMMA\n":"")+(u?"#define APPLY_ALPHA\n":"")+"#define TEXTURE_UNITS "+r+"\n"+this.baseFragmentShaderString+"\n"+"vec4 computeDayColor(vec4 initialColor, vec2 textureCoordinates)\n"+"{\n"+"    vec4 color = initialColor;\n",p=0;r>p;++p)m+="color = sampleAndBlend(\n   color,\n   u_dayTextures["+p+"],\n"+"   textureCoordinates,\n"+"   u_dayTextureTexCoordsRectangle["+p+"],\n"+"   u_dayTextureTranslationAndScale["+p+"],\n"+(u?"   u_dayTextureAlpha["+p+"],\n":"1.0,\n")+(i?"   u_dayTextureBrightness["+p+"],\n":"0.0,\n")+(o?"   u_dayTextureContrast["+p+"],\n":"0.0,\n")+(a?"   u_dayTextureHue["+p+"],\n":"0.0,\n")+(s?"   u_dayTextureSaturation["+p+"],\n":"0.0,\n")+(l?"   u_dayTextureOneOverGamma["+p+"]);\n":"0.0);\n");m+="    return color;\n}",h=t.createShaderProgram(d,m,this._attributeLocations),this._shaders[c]=h}return h},i.prototype.destroy=function(){return this.invalidateShaders(),t(this)},i}),r("Scene/ImageryState",["../Core/freezeObject"],function(e){"use strict";var t={UNLOADED:0,TRANSITIONING:1,RECEIVED:2,TEXTURE_LOADED:3,READY:4,FAILED:5,INVALID:6,PLACEHOLDER:7};return e(t)}),r("Scene/QuadtreeTileLoadState",["../Core/freezeObject"],function(e){"use strict";var t={START:0,LOADING:1,DONE:2,FAILED:3};return e(t)}),r("Scene/TerrainState",["../Core/freezeObject"],function(e){"use strict";var t={FAILED:0,UNLOADED:1,RECEIVING:2,RECEIVED:3,TRANSFORMING:4,TRANSFORMED:5,READY:6};return e(t)}),r("Scene/TileTerrain",["../Core/BoundingSphere","../Core/Cartesian3","../Core/ComponentDatatype","../Core/defined","../Core/DeveloperError","../Core/IndexDatatype","../Core/TileProviderError","../Renderer/BufferUsage","../ThirdParty/when","./terrainAttributeLocations","./TerrainState"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t,r,n,o){function s(t){e.data=t,e.state=c.RECEIVED}function u(){e.state=c.FAILED;var i="Failed to obtain terrain tile X: "+r+" Y: "+n+" Level: "+o+".";t._requestError=a.handleError(t._requestError,t,t.errorEvent,i,r,n,o,h)}function h(){e.data=t.requestTileGeometry(r,n,o),i(e.data)?(e.state=c.RECEIVING,l(e.data,s,u)):e.state=c.UNLOADED}h()}function d(e,t,r,n,o,a){var s=r.tilingScheme,u=e.data,h=u.createMesh(s,n,o,a);i(h)&&(e.state=c.TRANSFORMING,l(h,function(t){e.mesh=t,e.state=c.TRANSFORMED},function(){e.state=c.FAILED}))}function m(e,t,n){var a,l,h=r.FLOAT,d=e.mesh.vertices,m=t.createVertexBuffer(d,s.STATIC_DRAW);n.hasVertexNormals?(a=8*r.getSizeInBytes(h),l=4):(a=6*r.getSizeInBytes(h),l=2);var p=4,f=[{index:u.position3DAndHeight,vertexBuffer:m,componentDatatype:h,componentsPerAttribute:p,offsetInBytes:0,strideInBytes:a},{index:u.textureCoordAndEncodedNormals,vertexBuffer:m,componentDatatype:h,componentsPerAttribute:l,offsetInBytes:p*r.getSizeInBytes(h),strideInBytes:a}],v=e.mesh.indices.indexBuffers||{},g=v[t.id];if(!i(g)||g.isDestroyed()){var _=e.mesh.indices;g=t.createIndexBuffer(_,s.STATIC_DRAW,o.UNSIGNED_SHORT),g.vertexArrayDestroyable=!1,g.referenceCount=1,v[t.id]=g,e.mesh.indices.indexBuffers=v}else++g.referenceCount;e.vertexArray=t.createVertexArray(f,g),e.state=c.READY}var p=function(e){this.state=c.UNLOADED,this.data=void 0,this.mesh=void 0,this.vertexArray=void 0,this.upsampleDetails=e};return p.prototype.freeResources=function(){if(this.state=c.UNLOADED,this.data=void 0,this.mesh=void 0,i(this.vertexArray)){var e=this.vertexArray.indexBuffer;this.vertexArray.destroy(),this.vertexArray=void 0,!e.isDestroyed()&&i(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy())}},p.prototype.publishToTile=function(r){var i=r.data,n=this.mesh;t.clone(n.center,i.center),i.minimumHeight=n.minimumHeight,i.maximumHeight=n.maximumHeight,i.boundingSphere3D=e.clone(n.boundingSphere3D,i.boundingSphere3D),r.data.occludeePointInScaledSpace=t.clone(n.occludeePointInScaledSpace,i.occludeePointInScaledSpace),i.freeVertexArray(),i.vertexArray=this.vertexArray,this.vertexArray=void 0},p.prototype.processLoadStateMachine=function(e,t,r,i,n){this.state===c.UNLOADED&&h(this,t,r,i,n),this.state===c.RECEIVED&&d(this,e,t,r,i,n),this.state===c.TRANSFORMED&&m(this,e,t,r,i,n)},p.prototype.processUpsampleStateMachine=function(e,t,r,n,o){if(this.state===c.UNLOADED){var a=this.upsampleDetails,s=a.data,u=a.x,h=a.y,p=a.level;if(this.data=s.upsample(t.tilingScheme,u,h,p,r,n,o),!i(this.data))return;this.state=c.RECEIVING;var f=this;l(this.data,function(e){f.data=e,f.state=c.RECEIVED},function(){f.state=c.FAILED})}this.state===c.RECEIVED&&d(this,e,t,r,n,o),this.state===c.TRANSFORMED&&m(this,e,t,r,n,o)},p}),r("Scene/GlobeSurfaceTile",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/deprecationWarning","../Core/IntersectionTests","../Core/PixelFormat","../Core/Rectangle","../Renderer/PixelDatatype","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","./ImageryState","./QuadtreeTileLoadState","./SceneMode","./TerrainState","./TileTerrain"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e,r,i,n,a){if(t.unpack(i,6*n,a),t.add(e.center,a,a),o(r)&&r.mode!==g.SCENE3D){var s=r.mapProjection,l=s.ellipsoid,u=l.cartesianToCartographic(a);s.project(u,a),t.fromElements(a.z,a.x,a.y,a)}return a}function w(e,r,i){var n=e.data,a=E(e);o(a)&&(n.upsampledTerrain=new y(a)),x(e,r)&&(n.loadedTerrain=new y);for(var s=0,l=i.length;l>s;++s){var u=i.get(s);u.show&&u._createTileImagerySkeletons(e,r)}var h=e.tilingScheme.ellipsoid,d=e.rectangle;h.cartographicToCartesian(c.southwest(d),n.southwestCornerCartesian),h.cartographicToCartesian(c.northeast(d),n.northeastCornerCartesian),z.longitude=d.west,z.latitude=.5*(d.south+d.north),z.height=0;var m=h.cartographicToCartesian(z,B),p=t.cross(m,t.UNIT_Z,L);t.normalize(p,n.westNormal),z.longitude=d.east;var f=h.cartographicToCartesian(z,F),v=t.cross(t.UNIT_Z,f,L);t.normalize(v,n.eastNormal);var g=h.geodeticSurfaceNormalCartographic(c.southeast(d),N),_=t.subtract(m,f,L),C=t.cross(g,_,N);t.normalize(C,n.southNormal);var w=h.geodeticSurfaceNormalCartographic(c.northwest(d),N),S=t.cross(_,w,N);t.normalize(S,n.northNormal)}function S(e,t,r){var i=e.data,a=i.loadedTerrain,s=i.upsampledTerrain,l=!1;if(o(a)){if(a.processLoadStateMachine(t,r,e.x,e.y,e.level),a.state>=_.RECEIVED){if(i.terrainData!==a.data){i.terrainData=a.data;var u=i.terrainData.waterMask;o(u)&&(o(i.waterMaskTexture)&&(--i.waterMaskTexture.referenceCount,0===i.waterMaskTexture.referenceCount&&i.waterMaskTexture.destroy()),i.waterMaskTexture=P(t,u),i.waterMaskTranslationAndScale.x=0,i.waterMaskTranslationAndScale.y=0,i.waterMaskTranslationAndScale.z=1,i.waterMaskTranslationAndScale.w=1),T(e)}l=!0}a.state===_.READY?(a.publishToTile(e),i.pickTerrain=n(i.loadedTerrain,i.upsampledTerrain),i.loadedTerrain=void 0,i.upsampledTerrain=void 0):a.state===_.FAILED&&(i.loadedTerrain=void 0)}!l&&o(s)&&(s.processUpsampleStateMachine(t,r,e.x,e.y,e.level),s.state>=_.RECEIVED&&i.terrainData!==s.data&&(i.terrainData=s.data,r.hasWaterMask&&A(e),b(e)),s.state===_.READY?(s.publishToTile(e),i.pickTerrain=i.upsampledTerrain,i.upsampledTerrain=void 0):s.state===_.FAILED&&(i.upsampledTerrain=void 0))}function E(e){for(var t=e.parent;o(t)&&o(t.data)&&!o(t.data.terrainData);)t=t.parent;return o(t)&&o(t.data)?{data:t.data.terrainData,x:t.x,y:t.y,level:t.level}:void 0}function b(e){var t=e.data;if(o(e._children))for(var r=0;4>r;++r){var i=e._children[r];if(i.state!==v.START){var n=i.data;if(o(n.terrainData)&&!n.terrainData.wasCreatedByUpsampling())continue;o(n.upsampledTerrain)&&n.upsampledTerrain.freeResources(),n.upsampledTerrain=new y({data:t.terrainData,x:e.x,y:e.y,level:e.level}),i.state=v.LOADING}}}function T(e){var t=e.data;if(o(e.children))for(var r=0;4>r;++r){var i=e.children[r];if(i.state!==v.START){var n=i.data;if(o(n.terrainData)&&!n.terrainData.wasCreatedByUpsampling())continue;o(n.upsampledTerrain)&&n.upsampledTerrain.freeResources(),n.upsampledTerrain=new y({data:t.terrainData,x:e.x,y:e.y,level:e.level}),t.terrainData.isChildAvailable(e.x,e.y,i.x,i.y)&&(o(n.loadedTerrain)||(n.loadedTerrain=new y)),i.state=v.LOADING}}}function x(e,t){if(o(t.getTileDataAvailable)){var r=t.getTileDataAvailable(e.x,e.y,e.level);if(o(r))return r}else s("TerrainProvider.getTileDataAvailable","TerrainProviders must now implement the getTileDataAvailable function.");var i=e.parent;return o(i)?o(i.data)&&o(i.data.terrainData)?i.data.terrainData.isChildAvailable(i.x,i.y,e.x,e.y):!1:!0}function P(e,t){var r,i=e.cache.tile_waterMaskData;o(i)||(i=e.cache.tile_waterMaskData={allWaterTexture:void 0,allLandTexture:void 0,sampler:void 0,destroy:function(){o(this.allWaterTexture)&&this.allWaterTexture.destroy(),o(this.allLandTexture)&&this.allLandTexture.destroy()}});var n=Math.sqrt(t.length);return 1!==n||0!==t[0]&&255!==t[0]?(r=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{width:n,height:n,arrayBufferView:t}}),r.referenceCount=0,o(i.sampler)||(i.sampler=e.createSampler({wrapS:p.CLAMP_TO_EDGE,wrapT:p.CLAMP_TO_EDGE,minificationFilter:m.LINEAR,magnificationFilter:d.LINEAR})),r.sampler=i.sampler):(o(i.allWaterTexture)||(i.allWaterTexture=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{arrayBufferView:new Uint8Array([255]),width:1,height:1}}),i.allWaterTexture.referenceCount=1,i.allLandTexture=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{arrayBufferView:new Uint8Array([0]),width:1,height:1}}),i.allLandTexture.referenceCount=1),r=0===t[0]?i.allLandTexture:i.allWaterTexture),++r.referenceCount,r}function A(e){for(var t=e.data,r=e.parent;o(r)&&!o(r.data.terrainData)||r.data.terrainData.wasCreatedByUpsampling();)r=r.parent;if(o(r)&&o(r.data.waterMaskTexture)){t.waterMaskTexture=r.data.waterMaskTexture,++t.waterMaskTexture.referenceCount;var i=r.rectangle,n=e.rectangle,a=n.east-n.west,s=n.north-n.south,l=a/(i.east-i.west),u=s/(i.north-i.south);t.waterMaskTranslationAndScale.x=l*(n.west-i.west)/a,t.waterMaskTranslationAndScale.y=u*(n.south-i.south)/s,t.waterMaskTranslationAndScale.z=l,t.waterMaskTranslationAndScale.w=u}}var M=function(){this.imagery=[],this.southwestCornerCartesian=new t,this.northeastCornerCartesian=new t,this.westNormal=new t,this.southNormal=new t,this.eastNormal=new t,this.northNormal=new t,this.waterMaskTexture=void 0,this.waterMaskTranslationAndScale=new r(0,0,1,1),this.terrainData=void 0,this.center=new t,this.vertexArray=void 0,this.minimumHeight=0,this.maximumHeight=0,this.boundingSphere3D=new e,this.boundingSphere2D=new e,this.occludeePointInScaledSpace=new t,this.loadedTerrain=void 0,this.upsampledTerrain=void 0,this.pickBoundingSphere=new e,this.pickTerrain=void 0};a(M.prototype,{eligibleForUnloading:{get:function(){for(var e=this.loadedTerrain,t=o(e)&&(e.state===_.RECEIVING||e.state===_.TRANSFORMING),r=this.upsampledTerrain,i=o(r)&&(r.state===_.RECEIVING||r.state===_.TRANSFORMING),n=!t&&!i,a=this.imagery,s=0,l=a.length;n&&l>s;++s){var u=a[s];n=!o(u.loadingImagery)||u.loadingImagery.state!==f.TRANSITIONING}return n}}});var D=new t,I=new t,R=new t,O=new t;M.prototype.pick=function(e,r,i,n){var a=this.pickTerrain;if(!o(a))return void 0;var s=a.mesh;if(!o(s))return void 0;for(var u=s.vertices,c=s.indices,h=c.length,d=0;h>d;d+=3){var m=c[d],p=c[d+1],f=c[d+2],v=C(this,r,u,m,D),g=C(this,r,u,p,I),_=C(this,r,u,f,R),y=l.rayTriangle(e,v,g,_,i,O);if(o(y))return t.clone(y,n)}return void 0},M.prototype.freeResources=function(){o(this.waterMaskTexture)&&(--this.waterMaskTexture.referenceCount,0===this.waterMaskTexture.referenceCount&&this.waterMaskTexture.destroy(),this.waterMaskTexture=void 0),this.terrainData=void 0,o(this.loadedTerrain)&&(this.loadedTerrain.freeResources(),this.loadedTerrain=void 0),o(this.upsampledTerrain)&&(this.upsampledTerrain.freeResources(),this.upsampledTerrain=void 0),o(this.pickTerrain)&&(this.pickTerrain.freeResources(),this.pickTerrain=void 0);var e,t,r=this.imagery;for(e=0,t=r.length;t>e;++e)r[e].freeResources();this.imagery.length=0,this.freeVertexArray()},M.prototype.freeVertexArray=function(){var e;o(this.vertexArray)&&(e=this.vertexArray.indexBuffer,this.vertexArray.destroy(),this.vertexArray=void 0,!e.isDestroyed()&&o(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy())),o(this.wireframeVertexArray)&&(e=this.wireframeVertexArray.indexBuffer,this.wireframeVertexArray.destroy(),this.wireframeVertexArray=void 0,!e.isDestroyed()&&o(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy()))},M.processStateMachine=function(e,t,r,i){var n=e.data;o(n)||(n=e.data=new M),e.state===v.START&&(w(e,r,i),e.state=v.LOADING),e.state===v.LOADING&&S(e,t,r);for(var a=o(n.vertexArray),s=!o(n.loadedTerrain)&&!o(n.upsampledTerrain),l=o(n.terrainData)&&n.terrainData.wasCreatedByUpsampling(),u=n.imagery,c=0,h=u.length;h>c;++c){var d=u[c];if(o(d.loadingImagery)){if(d.loadingImagery.state===f.PLACEHOLDER){var m=d.loadingImagery.imageryLayer;if(m.imageryProvider.ready){d.freeResources(),u.splice(c,1),m._createTileImagerySkeletons(e,r,c),--c,h=u.length;continue}l=!1}var p=d.processStateMachine(e,t);s=s&&p,a=a&&(p||o(d.readyImagery)),l=l&&o(d.loadingImagery)&&(d.loadingImagery.state===f.FAILED||d.loadingImagery.state===f.INVALID)}else l=!1}e.upsampledFromParent=l,c===h&&(a&&(e.renderable=!0),s&&(e.state=v.DONE))};var L=new t,N=new t,B=new t,F=new t,z=new i;return M}),r("Shaders/ReprojectWebMercatorFS",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Shaders/ReprojectWebMercatorVS",[],function(){"use strict";return"attribute vec4 position;\nuniform vec2 u_textureDimensions;\nuniform float u_northLatitude;\nuniform float u_southLatitude;\nuniform float u_southMercatorYHigh;\nuniform float u_southMercatorYLow;\nuniform float u_oneOverMercatorHeight;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nfloat currentLatitude = mix(u_southLatitude, u_northLatitude, position.y);\nfloat fraction = czm_latitudeToWebMercatorFraction(currentLatitude, u_southMercatorYLow, u_southMercatorYHigh, u_oneOverMercatorHeight);\nv_textureCoordinates = vec2(position.x, fraction);\ngl_Position = czm_viewportOrthographic * (position * vec4(u_textureDimensions, 1.0, 1.0));\n}\n"
}),r("Scene/Imagery",["../Core/defined","../Core/destroyObject","./ImageryState"],function(e,t,r){"use strict";var i=function(t,i,n,o,a){if(this.imageryLayer=t,this.x=i,this.y=n,this.level=o,0!==o){var s=0|i/2,l=0|n/2,u=o-1;this.parent=t.getImageryFromCache(s,l,u)}if(this.state=r.UNLOADED,this.imageUrl=void 0,this.image=void 0,this.texture=void 0,this.credits=void 0,this.referenceCount=0,!e(a)&&t.imageryProvider.ready){var c=t.imageryProvider.tilingScheme;a=c.tileXYToRectangle(i,n,o)}this.rectangle=a};return i.createPlaceholder=function(e){var t=new i(e,0,0,0);return t.addReference(),t.state=r.PLACEHOLDER,t},i.prototype.addReference=function(){++this.referenceCount},i.prototype.releaseReference=function(){return--this.referenceCount,0===this.referenceCount?(this.imageryLayer.removeImageryFromCache(this),e(this.parent)&&this.parent.releaseReference(),e(this.image)&&e(this.image.destroy)&&this.image.destroy(),e(this.texture)&&this.texture.destroy(),t(this),0):this.referenceCount},i}),r("Scene/TileImagery",["../Core/defined","./ImageryState"],function(e,t){"use strict";var r=function(e,t){this.readyImagery=void 0,this.loadingImagery=e,this.textureCoordinateRectangle=t,this.textureTranslationAndScale=void 0};return r.prototype.freeResources=function(){e(this.readyImagery)&&this.readyImagery.releaseReference(),e(this.loadingImagery)&&this.loadingImagery.releaseReference()},r.prototype.processStateMachine=function(r,i){var n=this.loadingImagery,o=n.imageryLayer;if(n.state===t.UNLOADED&&(n.state=t.TRANSITIONING,o._requestImagery(n)),n.state===t.RECEIVED&&(n.state=t.TRANSITIONING,o._createTexture(i,n)),n.state===t.TEXTURE_LOADED&&(n.state=t.TRANSITIONING,o._reprojectTexture(i,n)),n.state===t.READY)return e(this.readyImagery)&&this.readyImagery.releaseReference(),this.readyImagery=this.loadingImagery,this.loadingImagery=void 0,this.textureTranslationAndScale=o._calculateTextureTranslationAndScale(r,this),!0;for(var a=n.parent,s=!1;e(a)&&a.state!==t.READY;)s=s||a.state!==t.FAILED&&a.state!==t.INVALID,a=a.parent;return this.readyImagery!==a&&(e(this.readyImagery)&&this.readyImagery.releaseReference(),this.readyImagery=a,e(a)&&(a.addReference(),this.textureTranslationAndScale=o._calculateTextureTranslationAndScale(r,this))),s||n.state!==t.FAILED&&n.state!==t.INVALID?!1:!0},r}),r("Scene/ImageryLayer",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/FeatureDetection","../Core/GeographicTilingScheme","../Core/Geometry","../Core/GeometryAttribute","../Core/Math","../Core/PixelFormat","../Core/PrimitiveType","../Core/Rectangle","../Core/TerrainProvider","../Core/TileProviderError","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/DrawCommand","../Renderer/MipmapHint","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","../Shaders/ReprojectWebMercatorFS","../Shaders/ReprojectWebMercatorVS","../ThirdParty/when","./Imagery","./ImageryState","./TileImagery"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I){"use strict";function R(e,t,r){return JSON.stringify([e,t,r])}function O(t,r,s,l){var u=r.cache.imageryLayer_reproject;if(!a(u)){u=r.cache.imageryLayer_reproject={framebuffer:void 0,vertexArray:void 0,shaderProgram:void 0,renderState:void 0,sampler:void 0,destroy:function(){a(this.framebuffer)&&this.framebuffer.destroy(),a(this.vertexArray)&&this.vertexArray.destroy(),a(this.shaderProgram)&&this.shaderProgram.destroy()}};for(var c=new Array(131072),m=0,p=0;256>p;++p)for(var v=p/255,_=0;256>_;++_){var A=_/255;c[m++]=A,c[m++]=v}var M=new h({attributes:{position:new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:c})},indices:g.getRegularGridIndices(256,256),primitiveType:f.TRIANGLES}),D={position:0};u.vertexArray=r.createVertexArrayFromGeometry({geometry:M,attributeLocations:D,bufferUsage:y.STATIC_DRAW}),u.shaderProgram=r.createShaderProgram(P,x,D);var I=r.maximumTextureFilterAnisotropy;u.sampler=r.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR,magnificationFilter:E.LINEAR,maximumAnisotropy:Math.min(I,o(t._maximumAnisotropy,I))})}s.sampler=u.sampler;var R=s.width,O=s.height;B.textureDimensions.x=R,B.textureDimensions.y=O,B.texture=s,B.northLatitude=l.north,B.southLatitude=l.south;var L=Math.sin(l.south),N=.5*Math.log((1+L)/(1-L));F[0]=N,B.southMercatorYHigh=F[0],B.southMercatorYLow=N-F[0],L=Math.sin(l.north);var z=.5*Math.log((1+L)/(1-L));B.oneOverMercatorHeight=1/(z-N);var V=r.createTexture2D({width:R,height:O,pixelFormat:s.pixelFormat,pixelDatatype:s.pixelDatatype,preMultiplyAlpha:s.preMultiplyAlpha});V.generateMipmap(S.NICEST),a(u.framebuffer)&&u.framebuffer.destroy(),u.framebuffer=r.createFramebuffer({colorTextures:[V]}),u.framebuffer.destroyAttachments=!1;var k=new C({color:i.BLACK,framebuffer:u.framebuffer});k.execute(r),a(u.renderState)&&u.renderState.viewport.width===R&&u.renderState.viewport.height===O||(u.renderState=r.createRenderState({viewport:new e(0,0,R,O)}));var U=new w({framebuffer:u.framebuffer,shaderProgram:u.shaderProgram,renderState:u.renderState,primitiveType:f.TRIANGLES,vertexArray:u.vertexArray,uniformMap:B});return U.execute(r),V}function L(e,t,r){var i=e._imageryProvider,n=i.tilingScheme,o=n.ellipsoid,a=e._imageryProvider.tilingScheme instanceof c?1:Math.cos(r),s=n.rectangle,l=o.maximumRadius*(s.east-s.west)*a/(i.tileWidth*n.getNumberOfXTilesAtLevel(0)),u=l/t,h=Math.log(u)/Math.log(2),d=Math.round(h);return 0|d}var N=function z(e,t){this._imageryProvider=e,t=o(t,{}),this.alpha=o(t.alpha,o(e.defaultAlpha,1)),this.brightness=o(t.brightness,o(e.defaultBrightness,z.DEFAULT_BRIGHTNESS)),this.contrast=o(t.contrast,o(e.defaultContrast,z.DEFAULT_CONTRAST)),this.hue=o(t.hue,o(e.defaultHue,z.DEFAULT_HUE)),this.saturation=o(t.saturation,o(e.defaultSaturation,z.DEFAULT_SATURATION)),this.gamma=o(t.gamma,o(e.defaultGamma,z.DEFAULT_GAMMA)),this.show=o(t.show,!0),this._minimumTerrainLevel=t.minimumTerrainLevel,this._maximumTerrainLevel=t.maximumTerrainLevel,this._rectangle=o(t.rectangle,v.MAX_VALUE),this._maximumAnisotropy=t.maximumAnisotropy,this._imageryCache={},this._skeletonPlaceholder=new I(M.createPlaceholder(this)),this._show=!0,this._layerIndex=-1,this._isBaseLayer=!1,this._requestImageError=void 0};s(N.prototype,{imageryProvider:{get:function(){return this._imageryProvider}},rectangle:{get:function(){return this._rectangle}}}),N.DEFAULT_BRIGHTNESS=1,N.DEFAULT_CONTRAST=1,N.DEFAULT_HUE=0,N.DEFAULT_SATURATION=1,N.DEFAULT_GAMMA=1,N.prototype.isBaseLayer=function(){return this._isBaseLayer},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){return l(this)},N.prototype._createTileImagerySkeletons=function(e,t,i){var n=e.data;if(a(this._minimumTerrainLevel)&&e.level<this._minimumTerrainLevel)return!1;if(a(this._maximumTerrainLevel)&&e.level>this._maximumTerrainLevel)return!1;var o=this._imageryProvider;if(a(i)||(i=n.imagery.length),!o.ready)return this._skeletonPlaceholder.loadingImagery.addReference(),n.imagery.splice(i,0,this._skeletonPlaceholder),!0;var s=v.intersectWith(e.rectangle,o.rectangle);if(s=v.intersectWith(s,this._rectangle),s.east<=s.west||s.north<=s.south){if(!this.isBaseLayer())return!1;var l=v.intersectWith(o.rectangle,this._rectangle),u=e.rectangle;u.south>=l.north?s.north=s.south=l.north:u.north<=l.south&&(s.north=s.south=l.south),u.west>=l.east?s.west=s.east=l.east:u.east<=l.west&&(s.west=s.east=l.west)}var c=0;s.south>0?c=s.south:s.north<0&&(c=s.north);var h=1,d=h*t.getLevelMaximumGeometricError(e.level),m=L(this,d,c);m=Math.max(0,m);var p=o.maximumLevel;if(m>p&&(m=p),a(o.minimumLevel)){var f=o.minimumLevel;f>m&&(m=f)}var g=o.tilingScheme,_=g.positionToTileXY(v.northwest(s),m),y=g.positionToTileXY(v.southeast(s),m),C=(e.rectangle.north-e.rectangle.south)/512,w=(e.rectangle.east-e.rectangle.west)/512,S=g.tileXYToRectangle(_.x,_.y,m);Math.abs(S.south-e.rectangle.north)<w&&_.y<y.y&&++_.y,Math.abs(S.east-e.rectangle.west)<C&&_.x<y.x&&++_.x;var E=g.tileXYToRectangle(y.x,y.y,m);Math.abs(E.north-e.rectangle.south)<w&&y.y>_.y&&--y.y,Math.abs(E.west-e.rectangle.east)<C&&y.x>_.x&&--y.x;var b,T,x=e.rectangle,P=g.tileXYToRectangle(_.x,_.y,m),A=0,M=1;!this.isBaseLayer()&&Math.abs(P.west-e.rectangle.west)>=C&&(A=Math.min(1,(P.west-x.west)/(x.east-x.west))),!this.isBaseLayer()&&Math.abs(P.north-e.rectangle.north)>=w&&(M=Math.max(0,(P.north-x.south)/(x.north-x.south)));for(var D=M,R=_.x;R<=y.x;R++){b=A,P=g.tileXYToRectangle(R,_.y,m),A=Math.min(1,(P.east-x.west)/(x.east-x.west)),R===y.x&&(this.isBaseLayer()||Math.abs(P.east-e.rectangle.east)<C)&&(A=1),M=D;for(var O=_.y;O<=y.y;O++){T=M,P=g.tileXYToRectangle(R,O,m),M=Math.max(0,(P.south-x.south)/(x.north-x.south)),O===y.y&&(this.isBaseLayer()||Math.abs(P.south-e.rectangle.south)<w)&&(M=0);var N=new r(b,M,A,T),B=this.getImageryFromCache(R,O,m,P);n.imagery.splice(i,0,new I(B,N)),++i}}return!0},N.prototype._calculateTextureTranslationAndScale=function(e,t){var i=t.readyImagery.rectangle,n=e.rectangle,o=n.east-n.west,a=n.north-n.south,s=o/(i.east-i.west),l=a/(i.north-i.south);return new r(s*(n.west-i.west)/o,l*(n.south-i.south)/a,s,l)},N.prototype._requestImagery=function(e){function t(t){return a(t)?(e.image=t,e.state=D.RECEIVED,_.handleSuccess(o._requestImageError),void 0):r()}function r(){e.state=D.FAILED;var t="Failed to obtain image tile X: "+e.x+" Y: "+e.y+" Level: "+e.level+".";o._requestImageError=_.handleError(o._requestImageError,n,n.errorEvent,t,e.x,e.y,e.level,i)}function i(){e.state=D.TRANSITIONING;var i=n.requestImage(e.x,e.y,e.level);return a(i)?(a(n.getTileCredits)&&(e.credits=n.getTileCredits(e.x,e.y,e.level)),A(i,t,r),void 0):(e.state=D.UNLOADED,void 0)}var n=this._imageryProvider,o=this;i()},N.prototype._createTexture=function(e,t){var r=this._imageryProvider;if(a(r.tileDiscardPolicy)){var i=r.tileDiscardPolicy;if(a(i)){if(!i.isReady())return t.state=D.RECEIVED,void 0;if(i.shouldDiscardImage(t.image))return t.state=D.INVALID,void 0}}var n=e.createTexture2D({source:t.image,pixelFormat:r.hasAlphaChannel?p.RGBA:p.RGB});t.texture=n,t.image=void 0,t.state=D.TEXTURE_LOADED},N.prototype._reprojectTexture=function(e,t){var r=t.texture,i=t.rectangle;if(!(this._imageryProvider.tilingScheme instanceof c)&&(i.east-i.west)/r.width>1e-5){var n=O(this,e,r,t.rectangle);r.destroy(),t.texture=r=n}if(m.isPowerOfTwo(r.width)&&m.isPowerOfTwo(r.height)){var s=e.cache.imageryLayer_mipmapSampler;if(!a(s)){var l=e.maximumTextureFilterAnisotropy;s=e.cache.imageryLayer_mipmapSampler=e.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR_MIPMAP_LINEAR,magnificationFilter:E.LINEAR,maximumAnisotropy:Math.min(l,o(this._maximumAnisotropy,l))})}r.generateMipmap(S.NICEST),r.sampler=s}else{var u=e.cache.imageryLayer_nonMipmapSampler;a(u)||(u=e.cache.imageryLayer_nonMipmapSampler=e.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR,magnificationFilter:E.LINEAR})),r.sampler=u}t.state=D.READY},N.prototype.getImageryFromCache=function(e,t,r,i){var n=R(e,t,r),o=this._imageryCache[n];return a(o)||(o=new M(this,e,t,r,i),this._imageryCache[n]=o),o.addReference(),o},N.prototype.removeImageryFromCache=function(e){var t=R(e.x,e.y,e.level);delete this._imageryCache[t]};var B={u_textureDimensions:function(){return this.textureDimensions},u_texture:function(){return this.texture},u_northLatitude:function(){return this.northLatitude},u_southLatitude:function(){return this.southLatitude},u_southMercatorYLow:function(){return this.southMercatorYLow},u_southMercatorYHigh:function(){return this.southMercatorYHigh},u_oneOverMercatorHeight:function(){return this.oneOverMercatorHeight},textureDimensions:new t,texture:void 0,northLatitude:0,southLatitude:0,southMercatorYHigh:0,southMercatorYLow:0,oneOverMercatorHeight:0},F=u.supportsTypedArrays()?new Float32Array(1):void 0;return N}),r("Scene/GlobeSurfaceTileProvider",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/FeatureDetection","../Core/GeometryPipeline","../Core/IndexDatatype","../Core/Intersect","../Core/Matrix4","../Core/PrimitiveType","../Core/Rectangle","../Core/Visibility","../Core/WebMercatorProjection","../Renderer/BufferUsage","../Renderer/DrawCommand","../Scene/BlendingState","../Scene/DepthFunction","../Scene/Pass","../ThirdParty/when","./GlobeSurfaceTile","./ImageryLayer","./ImageryState","./QuadtreeTileLoadState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M){"use strict";function D(e,t){var r=e.loadingImagery;o(r)||(r=e.readyImagery);var i=t.loadingImagery;return o(i)||(i=t.readyImagery),r.imageryLayer._layerIndex-i.imageryLayer._layerIndex}function I(){var e={u_initialColor:function(){return this.initialColor},u_zoomedOutOceanSpecularIntensity:function(){return this.zoomedOutOceanSpecularIntensity},u_oceanNormalMap:function(){return this.oceanNormalMap},u_lightingFadeDistance:function(){return this.lightingFadeDistance},u_center3D:function(){return this.center3D},u_tileRectangle:function(){return this.tileRectangle},u_modifiedModelView:function(){return this.modifiedModelView},u_dayTextures:function(){return this.dayTextures},u_dayTextureTranslationAndScale:function(){return this.dayTextureTranslationAndScale},u_dayTextureTexCoordsRectangle:function(){return this.dayTextureTexCoordsRectangle},u_dayTextureAlpha:function(){return this.dayTextureAlpha},u_dayTextureBrightness:function(){return this.dayTextureBrightness},u_dayTextureContrast:function(){return this.dayTextureContrast},u_dayTextureHue:function(){return this.dayTextureHue},u_dayTextureSaturation:function(){return this.dayTextureSaturation},u_dayTextureOneOverGamma:function(){return this.dayTextureOneOverGamma},u_dayIntensity:function(){return this.dayIntensity},u_southAndNorthLatitude:function(){return this.southAndNorthLatitude},u_southMercatorYLowAndHighAndOneOverHeight:function(){return this.southMercatorYLowAndHighAndOneOverHeight},u_waterMask:function(){return this.waterMask},u_waterMaskTranslationAndScale:function(){return this.waterMaskTranslationAndScale},initialColor:new i(0,0,.5,1),zoomedOutOceanSpecularIntensity:.5,oceanNormalMap:void 0,lightingFadeDistance:new t(65e5,9e6),center3D:void 0,modifiedModelView:new p,tileRectangle:new i,dayTextures:[],dayTextureTranslationAndScale:[],dayTextureTexCoordsRectangle:[],dayTextureAlpha:[],dayTextureBrightness:[],dayTextureContrast:[],dayTextureHue:[],dayTextureSaturation:[],dayTextureOneOverGamma:[],dayIntensity:0,southAndNorthLatitude:new t,southMercatorYLowAndHighAndOneOverHeight:new r,waterMask:void 0,waterMaskTranslationAndScale:new i};return e}function R(e,t,r){var i=r.data;if(!o(i.wireframeVertexArray)&&!o(i.meshForWireframePromise)&&(i.meshForWireframePromise=i.terrainData.createMesh(t._terrainProvider.tilingScheme,r.x,r.y,r.level),o(i.meshForWireframePromise))){var n=i.vertexArray;b(i.meshForWireframePromise,function(t){i.vertexArray===n&&(i.wireframeVertexArray=O(e,i.vertexArray,t)),i.meshForWireframePromise=void 0})}}function O(e,t,r){var i={indices:r.indices,primitiveType:f.TRIANGLES};h.toWireframe(i);var n=i.indices,o=e.createIndexBuffer(n,y.STATIC_DRAW,d.UNSIGNED_SHORT);return e.createVertexArray(t._attributes,o)}function L(t,n,a,s,l){var u=n.data,c=s.camera.viewMatrix,h=a.maximumTextureImageUnits;o(t.oceanNormalMap)&&--h,o(u.waterMaskTexture)&&--h;var d=u.center,m=V,g=0,y=0,w=0,S=0,b=0;if(s.mode!==M.SCENE3D){var T=s.mapProjection,A=T.project(v.southwest(n.rectangle),W),D=T.project(v.northeast(n.rectangle),G);if(m.x=A.x,m.y=A.y,m.z=D.x,m.w=D.y,s.mode!==M.MORPHING&&(d=k,d.x=0,d.y=.5*(m.z+m.x),d.z=.5*(m.w+m.y),m.x-=d.y,m.y-=d.z,m.z-=d.y,m.w-=d.z),T instanceof _){g=n.rectangle.south,y=n.rectangle.north;var O=_.geodeticLatitudeToMercatorAngle(g),L=_.geodeticLatitudeToMercatorAngle(y);F[0]=O,w=F[0],S=O-F[0],b=1/(L-O)}}var N=U;N.x=d.x,N.y=d.y,N.z=d.z,N.w=1,p.multiplyByVector(c,N,N),p.setColumn(c,3,N,z);var B=u.imagery,H=0,q=B.length,j=t._renderState,Y=t._blendRenderState,X=j,Q=t._firstPassInitialColor;do{var J,K,$=0;t._drawCommands.length<=t._usedDrawCommands?(J=new C,J.owner=n,J.cull=!1,J.boundingVolume=new e,K=I(),t._drawCommands.push(J),t._uniformMaps.push(K)):(J=t._drawCommands[t._usedDrawCommands],K=t._uniformMaps[t._usedDrawCommands]),J.owner=n,++t._usedDrawCommands,J.debugShowBoundingVolume=n===t._debug.boundingSphereTile,i.clone(Q,K.initialColor),K.oceanNormalMap=t.oceanNormalMap,K.lightingFadeDistance.x=t.lightingFadeOutDistance,K.lightingFadeDistance.y=t.lightingFadeInDistance,K.zoomedOutOceanSpecularIntensity=t.zoomedOutOceanSpecularIntensity,K.center3D=u.center,i.clone(m,K.tileRectangle),K.southAndNorthLatitude.x=g,K.southAndNorthLatitude.y=y,K.southMercatorYLowAndHighAndOneOverHeight.x=S,K.southMercatorYLowAndHighAndOneOverHeight.y=w,K.southMercatorYLowAndHighAndOneOverHeight.z=b,p.clone(z,K.modifiedModelView);for(var et=!1,tt=!1,rt=!1,it=!1,nt=!1,ot=!1;h>$&&q>H;){var at=B[H],st=at.readyImagery;if(++H,o(st)&&st.state===P.READY&&0!==st.imageryLayer.alpha){var lt=st.imageryLayer;if(o(at.textureTranslationAndScale)||(at.textureTranslationAndScale=lt._calculateTextureTranslationAndScale(n,at)),K.dayTextures[$]=st.texture,K.dayTextureTranslationAndScale[$]=at.textureTranslationAndScale,K.dayTextureTexCoordsRectangle[$]=at.textureCoordinateRectangle,K.dayTextureAlpha[$]=lt.alpha,ot=ot||1!==K.dayTextureAlpha[$],K.dayTextureBrightness[$]=lt.brightness,et=et||K.dayTextureBrightness[$]!==x.DEFAULT_BRIGHTNESS,K.dayTextureContrast[$]=lt.contrast,tt=tt||K.dayTextureContrast[$]!==x.DEFAULT_CONTRAST,K.dayTextureHue[$]=lt.hue,rt=rt||K.dayTextureHue[$]!==x.DEFAULT_HUE,K.dayTextureSaturation[$]=lt.saturation,it=it||K.dayTextureSaturation[$]!==x.DEFAULT_SATURATION,K.dayTextureOneOverGamma[$]=1/lt.gamma,nt=nt||K.dayTextureOneOverGamma[$]!==1/x.DEFAULT_GAMMA,o(st.credits))for(var ut=s.creditDisplay,ct=st.credits,ht=0,dt=ct.length;dt>ht;++ht)ut.addCredit(ct[ht]);++$}}K.dayTextures.length=$,K.waterMask=u.waterMaskTexture,i.clone(u.waterMaskTranslationAndScale,K.waterMaskTranslationAndScale),J.shaderProgram=t._surfaceShaderSet.getShaderProgram(a,$,et,tt,rt,it,nt,ot),J.renderState=X,J.primitiveType=f.TRIANGLES,J.vertexArray=u.vertexArray,J.uniformMap=K,J.pass=E.OPAQUE,t._debug.wireframe&&(R(a,t,n),o(u.wireframeVertexArray)&&(J.vertexArray=u.wireframeVertexArray,J.primitiveType=f.LINES));var mt=J.boundingVolume;s.mode!==M.SCENE3D?(e.fromRectangleWithHeights2D(n.rectangle,s.mapProjection,u.minimumHeight,u.maximumHeight,mt),r.fromElements(mt.center.z,mt.center.x,mt.center.y,mt.center),s.mode===M.MORPHING&&(mt=e.union(u.boundingSphere3D,mt,mt))):e.clone(u.boundingSphere3D,mt),l.push(J),X=Y,Q=Z}while(q>H)}var N=function Q(e){this.lightingFadeOutDistance=65e5,this.lightingFadeInDistance=9e6,this.oceanNormalMap=void 0,this.zoomedOutOceanSpecularIntensity=.5,this._quadtree=void 0,this._terrainProvider=e.terrainProvider,this._imageryLayers=e.imageryLayers,this._surfaceShaderSet=e.surfaceShaderSet,this._renderState=void 0,this._blendRenderState=void 0,this._errorEvent=new u,this._imageryLayers.layerAdded.addEventListener(Q.prototype._onLayerAdded,this),this._imageryLayers.layerRemoved.addEventListener(Q.prototype._onLayerRemoved,this),this._imageryLayers.layerMoved.addEventListener(Q.prototype._onLayerMoved,this),this._imageryLayers.layerShownOrHidden.addEventListener(Q.prototype._onLayerShownOrHidden,this),this._layerOrderChanged=!1,this._tilesToRenderByTextureCount=[],this._drawCommands=[],this._uniformMaps=[],this._usedDrawCommands=0,this._debug={wireframe:!1,boundingSphereTile:void 0},this._baseColor=void 0,this._firstPassInitialColor=void 0,this.baseColor=new n(0,0,.5,1)};a(N.prototype,{baseColor:{get:function(){return this._baseColor},set:function(e){this._baseColor=e,this._firstPassInitialColor=i.fromColor(e,this._firstPassInitialColor)}},quadtree:{get:function(){return this._quadtree},set:function(e){this._quadtree=e}},ready:{get:function(){return this._terrainProvider.ready&&(0===this._imageryLayers.length||this._imageryLayers.get(0).imageryProvider.ready)}},tilingScheme:{get:function(){return this._terrainProvider.tilingScheme}},errorEvent:{get:function(){return this._errorEvent}},terrainProvider:{get:function(){return this._terrainProvider},set:function(e){this._terrainProvider!==e&&(this._terrainProvider=e,o(this._quadtree)&&this._quadtree.invalidateAllTiles())}}}),N.prototype.beginUpdate=function(e,t){this._imageryLayers._update(),this._layerOrderChanged&&(this._layerOrderChanged=!1,this._quadtree.forEachLoadedTile(function(e){e.data.imagery.sort(D)}));var r,i,n=this._tilesToRenderByTextureCount;for(r=0,i=n.length;i>r;++r){var a=n[r];o(a)&&(a.length=0)}this._usedDrawCommands=0;var s=t.creditDisplay;this._terrainProvider.ready&&o(this._terrainProvider.credit)&&s.addCredit(this._terrainProvider.credit);var l=this._imageryLayers;for(r=0,i=l.length;i>r;++r){var u=l.get(r).imageryProvider;u.ready&&o(u.credit)&&s.addCredit(u.credit)}},N.prototype.endUpdate=function(e,t,r){o(this._renderState)||(this._renderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0}})),o(this._blendRenderState)||(this._blendRenderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0,func:S.LESS_OR_EQUAL},blending:w.ALPHA_BLEND})),this._renderState.depthTest.enabled=t.mode===M.SCENE3D||t.mode===M.COLUMBUS_VIEW,this._blendRenderState.depthTest.enabled=this._renderState.depthTest.enabled;for(var i=this._tilesToRenderByTextureCount,n=0,a=i.length;a>n;++n){var s=i[n];if(o(s))for(var l=0,u=s.length;u>l;++l)L(this,s[l],e,t,r)}},N.prototype.getLevelMaximumGeometricError=function(e){return this._terrainProvider.getLevelMaximumGeometricError(e)},N.prototype.loadTile=function(e,t,r){T.processStateMachine(r,e,this._terrainProvider,this._imageryLayers)};var B=new e;N.prototype.computeTileVisibility=function(t,i,n){var a=t.data,s=i.cullingVolume,l=a.boundingSphere3D;i.mode!==M.SCENE3D&&(l=B,e.fromRectangleWithHeights2D(t.rectangle,i.mapProjection,a.minimumHeight,a.maximumHeight,l),r.fromElements(l.center.z,l.center.x,l.center.y,l.center),i.mode===M.MORPHING&&(l=e.union(a.boundingSphere3D,l,l)));var u=s.computeVisibility(l);if(u===m.OUTSIDE)return g.NONE;if(i.mode===M.SCENE3D){var c=a.occludeePointInScaledSpace;return o(c)?n.ellipsoid.isScaledSpacePointVisible(c)?u:g.NONE:u}return u};var F=c.supportsTypedArrays()?new Float32Array(1):void 0,z=new p,V=new i,k=new r,U=new i,W=new r,G=new r;N.prototype.showTileThisFrame=function(e){for(var t=0,r=e.data.imagery,i=0,n=r.length;n>i;++i){var a=r[i];o(a.readyImagery)&&0!==a.readyImagery.imageryLayer.alpha&&++t}var s=this._tilesToRenderByTextureCount[t];o(s)||(s=[],this._tilesToRenderByTextureCount[t]=s),s.push(e);var l=this._debug;++l.tilesRendered,l.texturesRendered+=t};var H=new r,q=new r,j=new r(0,-1,0),Y=new r(0,0,-1),X=new r;N.prototype.computeDistanceToTile=function(e,t){var i=e.data,n=i.southwestCornerCartesian,o=i.northeastCornerCartesian,a=i.westNormal,s=i.southNormal,l=i.eastNormal,u=i.northNormal,c=i.maximumHeight;t.mode!==M.SCENE3D&&(n=t.mapProjection.project(v.southwest(e.rectangle),H),n.z=n.y,n.y=n.x,n.x=0,o=t.mapProjection.project(v.northeast(e.rectangle),q),o.z=o.y,o.y=o.x,o.x=0,a=j,l=r.UNIT_Y,s=Y,u=r.UNIT_Z,c=0);var h,d=t.camera.positionWC,m=t.camera.positionCartographic,p=r.subtract(d,n,X),f=r.dot(p,a),g=r.dot(p,s),_=r.subtract(d,o,X),y=r.dot(_,l),C=r.dot(_,u);h=t.mode===M.SCENE3D?m.height:d.x;var w=h-c,S=0;return f>0?S+=f*f:y>0&&(S+=y*y),g>0?S+=g*g:C>0&&(S+=C*C),w>0&&(S+=w*w),Math.sqrt(S)},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){return this._tileProvider=this._tileProvider&&this._tileProvider.destroy(),s(this)},N.prototype._onLayerAdded=function(e){if(e.show){var t=this._terrainProvider;this._quadtree.forEachLoadedTile(function(r){e._createTileImagerySkeletons(r,t)&&(r.state=A.LOADING)}),this._layerOrderChanged=!0}},N.prototype._onLayerRemoved=function(e){this._quadtree.forEachLoadedTile(function(t){for(var r=t.data.imagery,i=-1,n=0,a=0,s=r.length;s>a;++a){var l=r[a],u=l.loadingImagery;if(o(u)||(u=l.readyImagery),u.imageryLayer===e)-1===i&&(i=a),l.freeResources(),++n;else if(-1!==i)break}-1!==i&&r.splice(i,n)})},N.prototype._onLayerMoved=function(){this._layerOrderChanged=!0},N.prototype._onLayerShownOrHidden=function(e,t,r){r?this._onLayerAdded(e,t):this._onLayerRemoved(e,t)};var Z=new i(0,0,0,0);return N}),r("Scene/ImageryLayerCollection",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/Math","../Core/Rectangle","../ThirdParty/when","./ImageryLayer"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){var r=e.indexOf(t);return r}function h(e,t,r){var i=e._layers;if(t=a.clamp(t,0,i.length-1),r=a.clamp(r,0,i.length-1),t!==r){var n=i[t];i[t]=i[r],i[r]=n,e._update(),e.layerMoved.raiseEvent(n,r,t)}}var d=function(){this._layers=[],this.layerAdded=new o,this.layerRemoved=new o,this.layerMoved=new o,this.layerShownOrHidden=new o};return r(d.prototype,{length:{get:function(){return this._layers.length}}}),d.prototype.add=function(e,r){var i=t(r);i?this._layers.splice(r,0,e):(r=this._layers.length,this._layers.push(e)),this._update(),this.layerAdded.raiseEvent(e,r)},d.prototype.addImageryProvider=function(e,t){var r=new u(e);return this.add(r,t),r},d.prototype.remove=function(t,r){r=e(r,!0);var i=this._layers.indexOf(t);return-1!==i?(this._layers.splice(i,1),this._update(),this.layerRemoved.raiseEvent(t,i),r&&t.destroy(),!0):!1},d.prototype.removeAll=function(t){t=e(t,!0);for(var r=this._layers,i=0,n=r.length;n>i;i++){var o=r[i];this.layerRemoved.raiseEvent(o,i),t&&o.destroy()}this._layers=[]},d.prototype.contains=function(e){return-1!==this.indexOf(e)},d.prototype.indexOf=function(e){return this._layers.indexOf(e)},d.prototype.get=function(e){return this._layers[e]},d.prototype.raise=function(e){var t=c(this._layers,e);h(this,t,t+1)},d.prototype.lower=function(e){var t=c(this._layers,e);h(this,t,t-1)},d.prototype.raiseToTop=function(e){var t=c(this._layers,e);t!==this._layers.length-1&&(this._layers.splice(t,1),this._layers.push(e),this._update(),this.layerMoved.raiseEvent(e,this._layers.length-1,t))},d.prototype.lowerToBottom=function(e){var t=c(this._layers,e);0!==t&&(this._layers.splice(t,1),this._layers.splice(0,0,e),this._update(),this.layerMoved.raiseEvent(e,0,t))},d.prototype.pickImageryLayerFeatures=function(e,r){var i=r.globe.pick(e,r);if(!t(i))return void 0;var n=r.globe.ellipsoid.cartesianToCartographic(i),o=r.globe._surface._tilesToRender;o.length;for(var a,u=0;!t(a)&&u<o.length;++u){var c=o[u];s.contains(c.rectangle,n)&&(a=c)}if(!t(a))return void 0;a.rectangle;for(var h=a.data.imagery,d=[],m=h.length-1;m>=0;--m){var p=h[m],f=p.readyImagery;if(t(f)){var v=f.imageryLayer.imageryProvider;if(t(v.pickFeatures)){var g=v.pickFeatures(f.x,f.y,f.level,n.longitude,n.latitude);t(g)&&d.push(g)}}}return 0===d.length?void 0:l.all(d,function(e){for(var r=[],i=0;i<e.length;++i){var o=e[i];if(t(o)&&o.length>0)for(var a=0;a<o.length;++a){var s=o[a];t(s.position)||(s.position=n),r.push(s)}}return r})},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){return this.removeAll(!0),i(this)},d.prototype._update=function(){for(var e,r,i=!0,n=this._layers,o=0,a=n.length;a>o;++o)r=n[o],r._layerIndex=o,r.show?(r._isBaseLayer=i,i=!1):r._isBaseLayer=!1,r.show!==r._show&&(t(r._show)&&(t(e)||(e=[]),e.push(r)),r._show=r.show);if(t(e))for(o=0,a=e.length;a>o;++o)r=e[o],this.layerShownOrHidden.raiseEvent(r,r._layerIndex,r.show)},d}),r("Scene/QuadtreeOccluders",["../Core/Cartesian3","../Core/defineProperties","../Core/EllipsoidalOccluder"],function(e,t,r){"use strict";var i=function(t){this._ellipsoid=new r(t.ellipsoid,e.ZERO)};return t(i.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),i}),r("Scene/QuadtreeTile",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","./QuadtreeTileLoadState"],function(e,t,r,i){"use strict";var n=function(e){this._tilingScheme=e.tilingScheme,this._x=e.x,this._y=e.y,this._level=e.level,this._parent=e.parent,this._rectangle=this._tilingScheme.tileXYToRectangle(this._x,this._y,this._level),this._children=void 0,this._replacementPrevious=void 0,this._replacementNext=void 0,this._distance=0,this.state=i.START,this.renderable=!1,this.upsampledFromParent=!1,this.data=void 0};return n.createLevelZeroTiles=function(t){if(!e(t))throw new r("tilingScheme is required.");for(var i=t.getNumberOfXTilesAtLevel(0),o=t.getNumberOfYTilesAtLevel(0),a=new Array(i*o),s=0,l=0;o>l;++l)for(var u=0;i>u;++u)a[s++]=new n({tilingScheme:t,x:u,y:l,level:0});return a},t(n.prototype,{tilingScheme:{get:function(){return this._tilingScheme}},x:{get:function(){return this._x}},y:{get:function(){return this._y}},level:{get:function(){return this._level}},parent:{get:function(){return this._parent}},rectangle:{get:function(){return this._rectangle}},children:{get:function(){if(!e(this._children)){var t=this.tilingScheme,r=this.level+1,i=2*this.x,o=2*this.y;this._children=[new n({tilingScheme:t,x:i,y:o,level:r,parent:this}),new n({tilingScheme:t,x:i+1,y:o,level:r,parent:this}),new n({tilingScheme:t,x:i,y:o+1,level:r,parent:this}),new n({tilingScheme:t,x:i+1,y:o+1,level:r,parent:this})]}return this._children}},needsLoading:{get:function(){return this.state<i.DONE}},eligibleForUnloading:{get:function(){var t=!0;return e(this.data)&&(t=this.data.eligibleForUnloading,e(t)||(t=!0)),t}}}),n.prototype.freeResources=function(){if(this.state=i.START,this.renderable=!1,this.upsampledFromParent=!1,e(this.data)&&e(this.data.freeResources)&&this.data.freeResources(),e(this._children)){for(var t=0,r=this._children.length;r>t;++t)this._children[t].freeResources();this._children=void 0}},n}),r("Scene/TileReplacementQueue",["../Core/defined"],function(e){"use strict";function t(e,t){var r=t.replacementPrevious,i=t.replacementNext;t===e._lastBeforeStartOfFrame&&(e._lastBeforeStartOfFrame=i),t===e.head?e.head=i:r.replacementNext=i,t===e.tail?e.tail=r:i.replacementPrevious=r,t.replacementPrevious=void 0,t.replacementNext=void 0,--e.count}var r=function(){this.head=void 0,this.tail=void 0,this.count=0,this._lastBeforeStartOfFrame=void 0};return r.prototype.markStartOfRenderFrame=function(){this._lastBeforeStartOfFrame=this.head},r.prototype.trimTiles=function(r){for(var i=this.tail,n=!0;n&&e(this._lastBeforeStartOfFrame)&&this.count>r&&e(i);){n=i!==this._lastBeforeStartOfFrame;var o=i.replacementPrevious;i.eligibleForUnloading&&(i.freeResources(),t(this,i)),i=o}},r.prototype.markTileRendered=function(r){var i=this.head;return i===r?(r===this._lastBeforeStartOfFrame&&(this._lastBeforeStartOfFrame=r.replacementNext),void 0):(++this.count,e(i)?((e(r.replacementPrevious)||e(r.replacementNext))&&t(this,r),r.replacementPrevious=void 0,r.replacementNext=i,i.replacementPrevious=r,this.head=r,void 0):(r.replacementPrevious=void 0,r.replacementNext=void 0,this.head=r,this.tail=r,void 0))},r}),r("Scene/QuadtreePrimitive",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/getTimestamp","../Core/Queue","../Core/Visibility","./QuadtreeOccluders","./QuadtreeTile","./QuadtreeTileLoadState","./SceneMode","./TileReplacementQueue"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,r,i){var n=e._debug;if(!n.suspendLodUpdate){var o,s,u=e._tilesToRender;u.length=0;var c=e._tileTraversalQueue;if(c.clear(),n.maxDepth=0,n.tilesVisited=0,n.tilesCulled=0,n.tilesRendered=0,n.tilesWaitingForChildren=0,e._tileLoadQueue.length=0,e._tileReplacementQueue.markStartOfRenderFrame(),!t(e._levelZeroTiles)){if(!e._tileProvider.ready)return;var h=e._tileProvider.tilingScheme;e._levelZeroTiles=l.createLevelZeroTiles(h)
}e._occluders.ellipsoid.cameraPosition=i.camera.positionWC;var d,p=e._tileProvider,_=e._occluders,y=e._levelZeroTiles;for(o=0,s=y.length;s>o;++o)d=y[o],e._tileReplacementQueue.markTileRendered(d),d.needsLoading&&g(e,d),d.renderable&&p.computeTileVisibility(d,i,_)!==a.NONE?c.enqueue(d):(++n.tilesCulled,d.renderable||++n.tilesWaitingForChildren);for(;t(d=c.dequeue());)if(++n.tilesVisited,e._tileReplacementQueue.markTileRendered(d),d.level>n.maxDepth&&(n.maxDepth=d.level),m(e,r,i,d)<e.maximumScreenSpaceError)f(e,d);else if(v(e,d)){var C=d.children;for(o=0,s=C.length;s>o;++o)p.computeTileVisibility(C[o],i,_)!==a.NONE?c.enqueue(C[o]):++n.tilesCulled}else++n.tilesWaitingForChildren,f(e,d);n.enableDebugOutput&&(n.tilesVisited!==n.lastTilesVisited||n.tilesRendered!==n.lastTilesRendered||n.tilesCulled!==n.lastTilesCulled||n.maxDepth!==n.lastMaxDepth||n.tilesWaitingForChildren!==n.lastTilesWaitingForChildren)&&(console.log("Visited "+n.tilesVisited+", Rendered: "+n.tilesRendered+", Culled: "+n.tilesCulled+", Max Depth: "+n.maxDepth+", Waiting for children: "+n.tilesWaitingForChildren),n.lastTilesVisited=n.tilesVisited,n.lastTilesRendered=n.tilesRendered,n.lastTilesCulled=n.tilesCulled,n.lastMaxDepth=n.maxDepth,n.lastTilesWaitingForChildren=n.tilesWaitingForChildren)}}function m(e,t,r,i){if(r.mode===c.SCENE2D)return p(e,t,r,i);var n=e._tileProvider.getLevelMaximumGeometricError(i.level),o=e._tileProvider.computeDistanceToTile(i,r);i._distance=o;var a=t.drawingBufferHeight,s=r.camera,l=s.frustum,u=l.fovy;return n*a/(2*o*Math.tan(.5*u))}function p(e,t,r,i){var n=r.camera,o=n.frustum,a=t.drawingBufferWidth,s=t.drawingBufferHeight,l=e._tileProvider.getLevelMaximumGeometricError(i.level),u=Math.max(o.top-o.bottom,o.right-o.left)/Math.max(a,s);return l/u}function f(e,t){e._tilesToRender.push(t),++e._debug.tilesRendered}function v(e,t){for(var r=!0,i=!0,n=t.children,o=0,a=n.length;a>o;++o){var s=n[o];e._tileReplacementQueue.markTileRendered(s),i=i&&s.upsampledFromParent,r=r&&s.renderable,s.needsLoading&&g(e,s)}return r||++e._debug.tilesWaitingForChildren,r&&!i}function g(e,t){e._tileLoadQueue.push(t)}function _(e,t,r){var i=e._tileLoadQueue,o=e._tileProvider;if(0!==i.length){e._tileReplacementQueue.trimTiles(e.tileCacheSize);for(var a=n(),s=e._loadQueueTimeSlice,l=a+s,u=i.length-1,c=u;c>=0;--c){var h=i[c];if(e._tileReplacementQueue.markTileRendered(h),o.loadTile(t,r,h),n()>=l)break}}}function y(e,t){return e._distance-t._distance}function C(e,t,r,i){var n=e._tileProvider,o=e._tilesToRender;o.sort(y);for(var a=0,s=o.length;s>a;++a)n.showTileThisFrame(o[a],t,r,i)}var w=function(t){this._tileProvider=t.tileProvider,this._tileProvider.quadtree=this,this._debug={enableDebugOutput:!1,maxDepth:0,tilesVisited:0,tilesCulled:0,tilesRendered:0,tilesWaitingForChildren:0,lastMaxDepth:-1,lastTilesVisited:-1,lastTilesCulled:-1,lastTilesRendered:-1,lastTilesWaitingForChildren:-1,suspendLodUpdate:!1};var r=this._tileProvider.tilingScheme,i=r.ellipsoid;this._tilesToRender=[],this._tileTraversalQueue=new o,this._tileLoadQueue=[],this._tileReplacementQueue=new h,this._levelZeroTiles=void 0,this._levelZeroTilesReady=!1,this._loadQueueTimeSlice=5,this.maximumScreenSpaceError=e(t.maximumScreenSpaceError,2),this.tileCacheSize=e(t.tileCacheSize,100),this._occluders=new s({ellipsoid:i})};return r(w.prototype,{tileProvider:{get:function(){return this._tileProvider}}}),w.prototype.invalidateAllTiles=function(){var e=this._tileReplacementQueue;e.head=void 0,e.tail=void 0,e.count=0;var r=this._levelZeroTiles;if(t(r))for(var i=0;i<r.length;++i)r[i].freeResources();this._levelZeroTiles=void 0},w.prototype.forEachLoadedTile=function(e){for(var r=this._tileReplacementQueue.head;t(r);)r.state!==u.START&&e(r),r=r.replacementNext},w.prototype.forEachRenderedTile=function(e){for(var t=this._tilesToRender,r=0,i=t.length;i>r;++r)e(t[r])},w.prototype.update=function(e,t,r){this._tileProvider.beginUpdate(e,t,r),d(this,e,t),_(this,e,t),C(this,e,t,r),this._tileProvider.endUpdate(e,t,r)},w.prototype.isDestroyed=function(){return!1},w.prototype.destroy=function(){this._tileProvider=this._tileProvider&&this._tileProvider.destroy()},w}),r("Scene/Globe",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/buildModuleUrl","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/combine","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/EllipsoidTerrainProvider","../Core/FeatureDetection","../Core/GeographicProjection","../Core/Geometry","../Core/GeometryAttribute","../Core/Intersect","../Core/IntersectionTests","../Core/loadImage","../Core/Math","../Core/Matrix4","../Core/Occluder","../Core/PrimitiveType","../Core/Ray","../Core/Rectangle","../Core/Transforms","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/GlobeFS","../Shaders/GlobeFSDepth","../Shaders/GlobeFSPole","../Shaders/GlobeVS","../Shaders/GlobeVSDepth","../Shaders/GlobeVSPole","../ThirdParty/when","./DepthFunction","./GlobeSurfaceShaderSet","./GlobeSurfaceTileProvider","./ImageryLayerCollection","./Pass","./QuadtreePrimitive","./SceneMode","./terrainAttributeLocations"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y){"use strict";function X(e){return function(r,i){var n=t.distanceSquaredTo(r.pickBoundingSphere,e),o=t.distanceSquaredTo(i.pickBoundingSphere,e);return n-o}}function Z(e,t){var r=e._ellipsoid.radii,i=t.camera.positionWC,o=n.multiplyComponents(e._ellipsoid.oneOverRadii,i,at),a=n.magnitude(o),s=n.normalize(o,st),l=n.normalize(n.cross(n.UNIT_Z,o,lt),lt),u=n.normalize(n.cross(s,l,ut),ut),c=Math.sqrt(n.magnitudeSquared(o)-1),h=n.multiplyByScalar(s,1/a,at),d=c/a,m=n.multiplyByScalar(l,d,st),p=n.multiplyByScalar(u,d,lt),f=n.add(h,p,ut);n.subtract(f,m,f),n.multiplyComponents(r,f,f),n.pack(f,ot,0);var v=n.subtract(h,p,ut);n.subtract(v,m,v),n.multiplyComponents(r,v,v),n.pack(v,ot,3);var g=n.add(h,p,ut);n.add(g,m,g),n.multiplyComponents(r,g,g),n.pack(g,ot,6);var _=n.subtract(h,p,ut);return n.add(_,m,_),n.multiplyComponents(r,_,_),n.pack(_,ot,9),ot}function Q(t,r,i,a,s,l){var u,c=t._ellipsoid.cartographicToCartesian(new o(0,a)),h=t._ellipsoid.cartographicToCartesian(new o(Math.PI,a)),d=.5*n.magnitude(n.subtract(c,h,ct),ct),m=t._ellipsoid.cartographicToCartesian(new o(0,i)),p=r.camera.direction;u=1-n.dot(dt,p)<S.EPSILON6?n.UNIT_X:n.normalize(n.cross(p,n.UNIT_Z,ct),ct);var f=n.add(m,n.multiplyByScalar(u,d,ct),ct),v=n.add(m,n.multiplyByScalar(n.normalize(n.cross(n.UNIT_Z,u,ht),ht),d,ht),ht);A.pointToGLWindowCoordinates(s,l,m,m),A.pointToGLWindowCoordinates(s,l,f,f),A.pointToGLWindowCoordinates(s,l,v,v);var g=Math.floor(Math.max(n.distance(v,m),n.distance(f,m))),_=g;return new e(Math.floor(m.x)-g,Math.floor(m.y)-_,2*g,2*_)}function J(e,r,i){var n=e.terrainProvider;if(i.mode===j.SCENE3D&&n.ready){var o=n.tilingScheme.rectangle,l=r.uniformState.viewProjection,c=mt;c.width=r.drawingBufferWidth,c.height=r.drawingBufferHeight;var h,d,m,p,f,v,C,w=E.computeViewportTransformation(c,0,1,pt),T=.05,x=e._occluder;o.north<S.PI_OVER_TWO&&(h=new P(-Math.PI,o.north,Math.PI,S.PI_OVER_TWO),d=t.fromRectangle3D(h,e._ellipsoid),m=i.cullingVolume.computeVisibility(d)===y.OUTSIDE,p=b.computeOccludeePointFromRectangle(h,e._ellipsoid),f=p&&!x.isPointVisible(p,0)||!x.isBoundingSphereVisible(d),e._drawNorthPole=!m&&!f,e._drawNorthPole&&(C=Q(e,i,h.north,h.south-T,l,w),ft[0]=C.x,ft[1]=C.y,ft[2]=C.x+C.width,ft[3]=C.y,ft[4]=C.x+C.width,ft[5]=C.y+C.height,ft[6]=C.x,ft[7]=C.y+C.height,u(e._northPoleCommand.vertexArray)?e._northPoleCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(ft):(e._northPoleCommand.boundingVolume=t.fromRectangle3D(h,e._ellipsoid),v=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:2,values:ft})}}),e._northPoleCommand.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:{position:0},bufferUsage:M.STREAM_DRAW})))),o.south>-S.PI_OVER_TWO&&(h=new P(-Math.PI,-S.PI_OVER_TWO,Math.PI,o.south),d=t.fromRectangle3D(h,e._ellipsoid),m=i.cullingVolume.computeVisibility(d)===y.OUTSIDE,p=b.computeOccludeePointFromRectangle(h,e._ellipsoid),f=p&&!x.isPointVisible(p)||!x.isBoundingSphereVisible(d),e._drawSouthPole=!m&&!f,e._drawSouthPole&&(C=Q(e,i,h.south,h.north+T,l,w),ft[0]=C.x,ft[1]=C.y,ft[2]=C.x+C.width,ft[3]=C.y,ft[4]=C.x+C.width,ft[5]=C.y+C.height,ft[6]=C.x,ft[7]=C.y+C.height,u(e._southPoleCommand.vertexArray)?e._southPoleCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(ft):(e._southPoleCommand.boundingVolume=t.fromRectangle3D(h,e._ellipsoid),v=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:2,values:ft})}}),e._southPoleCommand.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:{position:0},bufferUsage:M.STREAM_DRAW}))));var A=0,D=e._imageryLayerCollection.length>0?e._imageryLayerCollection.get(0):void 0;u(D)&&u(D.imageryProvider)&&u(D.imageryProvider.getPoleIntensity)&&(A=D.imageryProvider.getPoleIntensity());var I={u_dayIntensity:function(){return A}};if(!u(e._northPoleCommand.uniformMap)){var R=a(I,{u_color:function(){return e.northPoleColor}});e._northPoleCommand.uniformMap=a(R,e._drawUniforms)}if(!u(e._southPoleCommand.uniformMap)){var O=a(I,{u_color:function(){return e.southPoleColor}});e._southPoleCommand.uniformMap=a(O,e._drawUniforms)}}}var K=function(e){e=l(e,m.WGS84);var o=new p({ellipsoid:e}),a=new G;this._ellipsoid=e,this._imageryLayerCollection=a,this._surfaceShaderSet=new U,this._surface=new q({tileProvider:new W({terrainProvider:o,imageryLayers:a,surfaceShaderSet:this._surfaceShaderSet})}),this._occluder=new b(new t(n.ZERO,e.minimumRadius),n.ZERO),this._rsColor=void 0,this._rsColorWithoutDepthTest=void 0,this._clearDepthCommand=new D({depth:1,stencil:0,owner:this}),this._depthCommand=new R({boundingVolume:new t(n.ZERO,e.maximumRadius),pass:H.OPAQUE,owner:this}),this._northPoleCommand=new R({pass:H.OPAQUE,owner:this}),this._southPoleCommand=new R({pass:H.OPAQUE,owner:this}),this._drawNorthPole=!1,this._drawSouthPole=!1,this._mode=j.SCENE3D,this.terrainProvider=o,this.northPoleColor=new n(2/255,6/255,18/255),this.southPoleColor=new n(1,1,1),this.show=!0,this.oceanNormalMapUrl=r("Assets/Textures/waterNormalsSmall.jpg"),this._oceanNormalMapUrl=void 0,this._oceanNormalMapChanged=!1,this.depthTestAgainstTerrain=!1,this.maximumScreenSpaceError=2,this.tileCacheSize=100,this.enableLighting=!1,this._enableLighting=!1,this.lightingFadeOutDistance=65e5,this.lightingFadeInDistance=9e6,this.showWaterEffect=!0,this._oceanNormalMap=void 0,this._zoomedOutOceanSpecularIntensity=.5,this._hasWaterMask=!1,this._hasVertexNormals=!1,this._lightingFadeDistance=new i(this.lightingFadeOutDistance,this.lightingFadeInDistance);var s=this;this._drawUniforms={u_zoomedOutOceanSpecularIntensity:function(){return s._zoomedOutOceanSpecularIntensity},u_oceanNormalMap:function(){return s._oceanNormalMap},u_lightingFadeDistance:function(){return s._lightingFadeDistance}}};c(K.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},imageryLayers:{get:function(){return this._imageryLayerCollection}},baseColor:{get:function(){return this._surface.tileProvider.baseColor},set:function(e){this._surface.tileProvider.baseColor=e}}});var $=[],et={start:0,stop:0};K.prototype.pick=function(e,r,i){var o=r.mode,a=r.mapProjection,s=$;s.length=0;var l,c,h=this._surface._tilesToRender,d=h.length;for(c=0;d>c;++c){l=h[c];var m=l.data;if(u(m)){var p=m.pickBoundingSphere;o!==j.SCENE3D?(t.fromRectangleWithHeights2D(l.rectangle,a,m.minimumHeight,m.maximumHeight,p),n.fromElements(p.center.z,p.center.x,p.center.y,p.center)):t.clone(m.boundingSphere3D,p);var f=C.raySphere(e,p,et);u(f)&&s.push(m)}}s.sort(X(e.origin));var v;for(d=s.length,c=0;d>c&&(v=s[c].pick(e,r,!0,i),!u(v));++c);return v};var tt=new n,rt=new n,it=new o,nt=new x;K.prototype.getHeight=function(e){var t=this._surface._levelZeroTiles;if(u(t)){var r,i,o=t.length;for(i=0;o>i&&(r=t[i],!P.contains(r.rectangle,e));++i);if(!u(r)||!P.contains(r.rectangle,e))return void 0;for(;r.renderable;){var a=r.children;for(o=a.length,i=0;o>i&&(r=a[i],!P.contains(r.rectangle,e));++i);}for(;u(r)&&(!u(r.data)||!u(r.data.pickTerrain));)r=r.parent;if(!u(r))return void 0;var s=this._surface._tileProvider.tilingScheme.ellipsoid,l=s.cartographicToCartesian(e,tt),c=nt;n.normalize(l,c.direction);var h=r.data.pick(c,void 0,!1,rt);return u(h)?s.cartesianToCartographic(h,it).height:void 0}};var ot=f.supportsTypedArrays()?new Float32Array(12):[],at=new n,st=new n,lt=new n,ut=new n,ct=new n,ht=new n,dt=n.negate(n.UNIT_Z,new n),mt=new e,pt=new E,ft=f.supportsTypedArrays()?new Float32Array(8):[];return K.prototype.update=function(e,t,r){if(this.show){var i=e.drawingBufferWidth,n=e.drawingBufferHeight;if(0!==i&&0!==n){var o=t.mode,a=t.mapProjection,l=!1;this._mode===o&&u(this._rsColor)||(l=!0,o===j.SCENE3D||o===j.COLUMBUS_VIEW?(this._rsColor=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0}}),this._rsColorWithoutDepthTest=e.createRenderState({cull:{enabled:!0}}),this._depthCommand.renderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0,func:k.ALWAYS},colorMask:{red:!1,green:!1,blue:!1,alpha:!1}})):(this._rsColor=e.createRenderState({cull:{enabled:!0}}),this._rsColorWithoutDepthTest=e.createRenderState({cull:{enabled:!0}}),this._depthCommand.renderState=e.createRenderState({cull:{enabled:!0}}))),this._mode=o;var c=this._northPoleCommand,h=this._southPoleCommand;c.renderState=this._rsColorWithoutDepthTest,h.renderState=this._rsColorWithoutDepthTest;var d=Z(this,t);if(this._depthCommand.vertexArray)this._depthCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(d);else{var m=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:3,values:d})},indices:[0,1,2,2,1,3],primitiveType:T.TRIANGLES});this._depthCommand.vertexArray=e.createVertexArrayFromGeometry({geometry:m,attributeLocations:{position:0},bufferUsage:M.DYNAMIC_DRAW})}u(this._depthCommand.shaderProgram)||(this._depthCommand.shaderProgram=e.createShaderProgram(F,L,{position:0}));var p=this._surface,f=p.tileProvider,y=this.terrainProvider,C=this.showWaterEffect&&y.ready&&y.hasWaterMask;if(C&&this.oceanNormalMapUrl!==this._oceanNormalMapUrl){var S=this.oceanNormalMapUrl;this._oceanNormalMapUrl=S;var E=this;V(w(S),function(t){S===E.oceanNormalMapUrl&&(E._oceanNormalMap=E._oceanNormalMap&&E._oceanNormalMap.destroy(),E._oceanNormalMap=e.createTexture2D({source:t}),E._oceanNormalMapChanged=!0)})}var b=y.ready&&y.hasVertexNormals,x=this.enableLighting;if(!u(c.shaderProgram)||!u(h.shaderProgram)||l||this._oceanNormalMapChanged||this._hasWaterMask!==C||this._hasVertexNormals!==b||this._enableLighting!==x){var P,A="vec4 getPosition(vec3 position3DWC) { return getPosition3DMode(position3DWC); }",D="vec4 getPosition(vec3 position3DWC) { return getPosition2DMode(position3DWC); }",R="vec4 getPosition(vec3 position3DWC) { return getPositionColumbusViewMode(position3DWC); }",U="vec4 getPosition(vec3 position3DWC) { return getPositionMorphingMode(position3DWC); }";switch(o){case j.SCENE3D:P=A;break;case j.SCENE2D:P=D;break;case j.COLUMBUS_VIEW:P=R;break;case j.MORPHING:P=U}var W,G="float get2DYPositionFraction() { return get2DGeographicYPositionFraction(); }",H="float get2DYPositionFraction() { return get2DMercatorYPositionFraction(); }";W=a instanceof v?G:H;var q=this._surfaceShaderSet,X=[];C&&(X.push("SHOW_REFLECTIVE_OCEAN"),u(this._oceanNormalMap)&&X.push("SHOW_OCEAN_WAVES")),x&&(b?X.push("ENABLE_VERTEX_LIGHTING"):X.push("ENABLE_DAYNIGHT_SHADING")),q.baseVertexShaderString=I({defines:X,sources:[B,P,W]}),q.baseFragmentShaderString=I({defines:X,sources:[O]}),q.invalidateShaders();var Q=e.replaceShaderProgram(c.shaderProgram,z,N,Y);c.shaderProgram=Q,h.shaderProgram=Q,this._hasWaterMask=C,this._hasVertexNormals=b,this._enableLighting=x,this._oceanNormalMapChanged=!1}this._occluder.cameraPosition=t.camera.positionWC,J(this,e,t);var K=t.passes;K.render&&(o===j.SCENE3D&&(this._drawNorthPole&&r.push(c),this._drawSouthPole&&r.push(h)),this._zoomedOutOceanSpecularIntensity=o===j.SCENE3D?.5:0,p.maximumScreenSpaceError=this.maximumScreenSpaceError,p.tileCacheSize=this.tileCacheSize,f.terrainProvider=this.terrainProvider,f.lightingFadeOutDistance=this.lightingFadeOutDistance,f.lightingFadeInDistance=this.lightingFadeInDistance,f.zoomedOutOceanSpecularIntensity=this._zoomedOutOceanSpecularIntensity,f.oceanNormalMap=this._oceanNormalMap,p.update(e,t,r),(o===j.SCENE3D||o===j.COLUMBUS_VIEW)&&(this.depthTestAgainstTerrain||(r.push(this._clearDepthCommand),o===j.SCENE3D&&r.push(this._depthCommand)))),K.pick&&r.push(this._depthCommand)}}},K.prototype.isDestroyed=function(){return!1},K.prototype.destroy=function(){return this._northPoleCommand.vertexArray=this._northPoleCommand.vertexArray&&this._northPoleCommand.vertexArray.destroy(),this._southPoleCommand.vertexArray=this._southPoleCommand.vertexArray&&this._southPoleCommand.vertexArray.destroy(),this._surfaceShaderSet=this._surfaceShaderSet&&this._surfaceShaderSet.destroy(),this._northPoleCommand.shaderProgram=this._northPoleCommand.shaderProgram&&this._northPoleCommand.shaderProgram.destroy(),this._southPoleCommand.shaderProgram=this._northPoleCommand.shaderProgram,this._depthCommand.shaderProgram=this._depthCommand.shaderProgram&&this._depthCommand.shaderProgram.destroy(),this._depthCommand.vertexArray=this._depthCommand.vertexArray&&this._depthCommand.vertexArray.destroy(),this._surface=this._surface&&this._surface.destroy(),this._oceanNormalMap=this._oceanNormalMap&&this._oceanNormalMap.destroy(),h(this)},K}),r("Scene/GoogleEarthImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadText","../Core/Rectangle","../Core/RuntimeError","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t,i,n){var o=e._imageUrlTemplate;o=o.replace("{x}",t),o=o.replace("{y}",i),o=o.replace("{zoom}",n+1);var a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var f=function v(i){function n(e){var t;try{t=JSON.parse(e)}catch(i){t=JSON.parse(e.replace(/([\[\{,])[\n\r ]*([A-Za-z0-9]+)[\n\r ]*:/g,'$1"$2":'))}for(var n,o=0;o<t.layers.length;o++)if(t.layers[o].id===_._channel){n=t.layers[o];break}var s;if(!r(n))throw s="Could not find layer with channel (id) of "+_._channel+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);if(!r(n.version))throw s="Could not find a version in channel (id) "+_._channel+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);if(_._version=n.version,r(t.projection)&&"flat"===t.projection)_._tilingScheme=new a({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2,rectangle:new l(-Math.PI,-Math.PI,Math.PI,Math.PI)});else{if(r(t.projection)&&"mercator"!==t.projection)throw s="Unsupported projection "+t.projection+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);_._tilingScheme=new h({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2})}_._imageUrlTemplate=_._imageUrlTemplate.replace("{request}",_._requestType).replace("{channel}",_._channel).replace("{version}",_._version),_._ready=!0,c.handleSuccess(f)}function m(){var e="An error occurred while accessing "+g+".";f=c.handleError(f,_,_._errorEvent,e,void 0,void 0,void 0,p)}function p(){var e=r(_._proxy)?_._proxy.getURL(g):g,t=s(e);d(t,n,m)}i=t(i,{}),this._url=i.url,this._path=t(i.path,"/default_map"),this._tileDiscardPolicy=i.tileDiscardPolicy,this._proxy=i.proxy,this._channel=i.channel,this._requestType="ImageryMaps",this._credit=new e("Google Imagery",v._logoData,"http://www.google.com/enterprise/mapsearth/products/earthenterprise.html"),this.defaultGamma=1.9,this._tilingScheme=void 0,this._version=void 0,this._tileWidth=256,this._tileHeight=256,this._maximumLevel=t(i.maximumLevel,23),this._imageUrlTemplate=this._url+this._path+"/query?request={request}&channel={channel}&version={version}&x={x}&y={y}&z={zoom}",this._errorEvent=new o,this._ready=!1;var f,g=this._url+this._path+"/query?request=Json&vars=geeServerDefs&is2d=t",_=this;p()};return i(f.prototype,{url:{get:function(){return this._url}},path:{get:function(){return this._path}},proxy:{get:function(){return this._proxy}},channel:{get:function(){return this._channel}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},version:{get:function(){return this._version}},requestType:{get:function(){return this._requestType}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),f.prototype.getTileCredits=function(){return void 0},f.prototype.requestImage=function(e,t,r){var i=p(this,e,t,r);return m.loadImage(this,i)},f.prototype.pickFeatures=function(){return void 0},f._logoData="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAALQAAAAnCAYAAACmP2LfAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAHdElNRQfcDB4TJDr1mp5kAAAAGnRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xMDD0cqEAAB1zSURBVHhe7ZwHeFTFFsf/u+l9N70npOxuSAKEFFIhCSH0qhEQUHkgKCgWUFGBB6IoCAoo0ntooaRvEkIIBBBpoYSa3nvvfd+5u4sQUigPfMX8v2/Y3Tkzs3fv/d0z58zcgF69Ql1SY+MM1wQJem44ZeiJk8beEOqPwG6uC7ZqyElb9eo/JZEIkH2nRQkBIlNMauuPCS3uGN/kjkmNDghoskBAgzrZ2NLmf1+JwIKQpYsoxdmIV9+N07onCegzBPM9bOdmYKnazF6g/1N6UySPqSJzvCaaiLHtP8G/Phq+FRfgU5ogKWUXMLT6Mvzqr2BE40mMadqO8c3zMabBC6PqDDC8SlY60t9HByCLVTKu+ERmHr5TWI9wjVxEaOZivWo1pil8D1tZeWnLXv1l8iZ3PF2kjymiWRgvCoJv5U243IyAXcQq8A9Mg9W+4bDe6wv+kVGwCZkL+4Sf4ZR+BZ5VGQR3EkbWn8Hopm3wq54Lz2JD6ah/P21XGopQ9Qoc16jGSqVyTJWbQbUsibFXf42mihTwZpsvAtp3k0dOhFOSEH1+ngaDefrgjFCgFkxY8fCisCBvKgODzxRh9qslBFGfYmDGLbiV5mBwRRo8KtPhVBgPu8teMP7u73chD6kMRYRGBY5xqrFKqQwz5SdTbS/Qf5mmUYw8rf01CjHC4VP7AHZxO6E3qy9ZZCQNnio2rE/4o9/tkxiQUYp+KRXgx8XC5FsXcLz/hkCrDUU4pxLHuDVYpdwL9F+qqSJZKlPwenskfOoI5tN7YPCJGVme7wKYr5EBXzgYfW+mwTI0Gjrznaj2WW+I/y8dVPdDGLcKRzXrsEqlHO8oTKHaXqAZWe9hQXCi63NhHWYI3ilfWIW/YLjqL2JRiOFBJRz+LffhcPs09D+0J8vzn3zXdBnYnp8Mi6NboTWzH9X8fVc+DhDQodxqAroe36lU9AJNWr4cEAjNwI8OAC9cT1rbUfzwGeCfKiL7dGnNc+q1NiO80b4BY1oT4V6WDcsdc6j2xbyq4wMWrA9rQmeWFn36ey/jBaoPQ4hmLYI0G/AtAf22fC/QDols8ITrIYi/Bl6knbS2o3gRbxHQxQQ0k0S/gCa2v4OJovPwacqAQ1ICjL40klr+UrWoQbFBETo18jCpZsOoFODkvuCNJYoHW3QKXFEM7ETRcKfiQe8d6NVIFImXvg4skhY40mxnQYVRIIeA1qrHEc1GrFSpxFtP99AiFbDbNKDZpAzzGkVYVcvBuBJQEo/9/6C+dyjPitwLwak74D8V6Bfw0P5VShjXFoTR7TfhUZkL29M/wfATJan1lauWC3aDOgyaVDCuTgbf1bFkfmtkye1ogsK2asivLYfCglIoD8qCknI2NHuG4QSVGMgQyMbt0fioRYh9VYcRU7QX55uDcaHtFOJEsThMtmWtQgxsDodsWaC0c3ea3MzGBJEqxrfbYmzr6xjfPAeTmt5HQPO7eK1xDibUz8eY+k8xtHYJPCtXwvHOu7AXMrMTsF/TH8HajTis1YwVqpWY0TXQDKy1OpBr5EJA52Fukxx+bmKxtjWx2DuaWawNlZD5qhzyo9KhpHAbKpJO/6t65UCPbPHA2PYrGNacgkElabCJJDev/MpDhUKKnuq44LRoYEK1IiswkS1zYCfk5y+F0qjvoTwqBOof34dGeAnUL1ZCLboEnJ9zoe0QD/Nuj00UBVXRabzVLETM3S0ICfwA8yc7Y6C3ANYbZsA7aQ1W1xzEfZEQ6dT2BkG9pP4ouo7jGE1u42JS20QMrzkCr4xwuN4+AM+cYII3EaNar2J86zmMrP8DHulCON4NhU3YWuhOYy6SZENpH9cfx7WacFC7BSvUqjBDsRPQIiugURvazeqYVaqAw6dYrJ9WQy7gayj4nYDy3HtQOVQGpYRqKEWXQf2HdGha/AFdae9Xr4czz0ubISRA75ECbSut7agegO75OLxpahze8j5GtifBpzEDLiV30Dd2mNT6StWiCbVmLt5rUkBQCEt2zWzIMSA8HgrIBkLD+Sp0jhHISYXQ/KMYukfvQ3fQxq68XCTBHId/tMTg7LV1CFs4BszJ6hBarBgHlcRv8H7tbuSKQpFPYGe0BmND+nZ0npECaPKf0r4UIxsuoF/IMpitsAVnrA4s15uh3x8fwLXkLobUZGJIXTqcUzbDaJE5FAVq0t4S7dEcjqMEc6B2K5arVWN6Z6AbdOmm5mJelQKOHWSxF44Cy4CqxW0s6RwchCovFRohdGNfLgX3WiZ0N4aD++y7jfwYJUrAPCle/ZjKV+BFTSegrGAZIm3QjXhBytTWB3zhByzryMUU986jz16wD+96ijCNUIAgmkc3tS6G7GERjCbgR82B4OTbEESqIiCIcqsIYzoGGyrBEMSmgh8xBoIIAR2fAHZhj8Z9DOhl9FHeKkSDvn809fuc+iyCddRYaiOZBTvIt1YJfs0b4N+WDO+GHPLQN2Ab7S61vjJV60C9SRPvNSqzTpxlyQfS1dGUmjppK7gW16B/LhN6abnQu5cDwzO3YNhhqqK4WJY887sEdGzWFpxfOxmDpKZOOvgWFB8sx9L6nShvP4FyUQjKGg5gScpGKEqbUE7RxiGYv6QQ4zIG/r4D2m88sjEy/EIW/a6+TQ4gHe5VhXCvy4JL7gLYnesI2i6t4Tii04r92u1YKt767gB0ozrkGzmY26zEOh7Hkt+kAKhLTX9qOVVdg9aoNOjcToR+wUVKLYKgN0Zq7l7884wn9CKgr4AfWw/B6SwqKQRKOdXVghe9CpbherASSjtIpGpxRIHFjwygNreoXy0lb+lU7lHJBP9kPcGXQnBNghUB/Lh44fbUp5JA+5Hs71LbPPLCVRDEJZDNGIJgeQI6mG6KegKzldq1U7tGKjQmHR8vwl86kgRoAQN0xBw6ztn0nQ/ocxEdQ7L4d/BjG6g+m8aZTL/xsXPuW82Fb8t+DG1Ox5D6XAwqvQ67OA+p9ZWoUQPsei78mjSwNU9GLmEzVGZJTd3qFPTn3YZhXgYMMjNhlHsDxms/hNWfoUdrNPgEc2h7BG5d/Bo7Blt0BuNxXf4MVmXrkdRyEHWiY6hr2oc7mevRX2wc18gioEeI1+N9a+/CNnImVAZ0mhEoNOPAJT8MHjUF8KTiWhqHgbfMpVaJdhLQh3XasU9bJAZ6ekeg6zQwgEKuLSWysmd3QGmatLqD8qDNug3dCX/AIPk4jGr2wDB/JXTmkan70IvmZTY/rB9BdZlKLkG0lG0d5klAObKsw1+jzyFiWPnRawiaDrMYwTyMwMwh220WP2IWFVfqN4CKO8E3n0C6R/ZUej9Y2kUiMdDRFTRePH3nA3q/m7xpAEtAXl0QrkTwscnmS/3eptdzNEYevZLnZ5booqk8tuYs9tAny+n1LL1mghezlcULH0VtHamOZhvhIvoNOXQsd2EZIbluYnlWaMO75TCFG9kYXJ8H14o76H/10Z3yClSrCm6jGtbWK7LC7kIlYRfUmY2XHnUa+mbXYRSfCuNCptyE6b1jMBD/EPKwchQPLxGdxOWWI8iKXYBPqLozgI8pfA5YBWvxbfMeNLUfRmPTLjRnr8YKsdGvRQ5j2zZTSSRQ78H+7GhxfScFAINypsG9ukDspZ0LKKE+O0pqlGi71ggcIqD3dga6RhFKjSqYT+VEFkvu/E9Q+HNWKaE2VVDgVkPFqwAaay5CN3En9M59BM2vfKDs7AvljjPGE5LlharQdL+LoCmhOHU0rIUyD+NgVTOa+q2iVQiIcAKpHtbhXuJOjPqeVCRYThNE6VTvKNs3hM3cHGIxntxKyCbP7Erj1lHZJbVIJAG6iiCroZCAPGukvOyASJbvCgoaAoKoAQ1kHcGC7nmZDkmhBR2PfSQLtkcl4zCSAE2eO6qExYuYxrE4KqdvelBiM4+ncYQy1IY8d0wbhUSLJAZGbsUceNYdwJCGPAyuy4NbZToG3JoO1Qk9AvHvqF4ejo0KCKlisyl04Jw+AE1ma71HRUJP+QqM1t2HcVEyTEoSYVYQCuN3HenCt4XDhGA+KorAnYZ9KIj5ELOl3XpU/k/wrt+OmraDaG7cjpacbxFvYAAZDG5Vw/DWCxjRdp+ATsWAS6+D69H1+XDNsoVb1T06b0VwzCmBIOYdqUWibTojcFBH1CXQctBtUcA6Oh/RmVC4sBmKA5j6erC1qqE4sRpqG25A43QIOHuXgvOmP5R4ZH6m5UY2L9SSLjZ5sKjjsI/o8olH8ngjCZoSgmw9DMIl3t42Up0g+pq89/sEjLK47knZhSkSuDepJP4JOyNJyEFAR8VQKMOR1nbWM69yxNJYwh+VLE90ffPyxLE3EwL9Jq0huWQqwL1iA7zq8+FVl0+epgBO6T+gb2TH+OglqgastxtZrNNlkLt8E5oJx6HZdab7mFZBk3UZRjMewCT7HkzLfodZxREYr5sBjiIBPYiAPt8ehvSGPSg5vwjzpd16VNkmmDTswp22QDTXbkJrxhJkzHGDFoUQmvBpvo2hrZl0TnLhlLIYfUO7nt7dSg3hURcP1/JiDEgphuXBqVKLRFsfA3oJAf3mI6Cr2OjTwGYdqWGzzmZD6WoYVCfehdqsZKjuuwS1oB1Q+5piHac3oaxBzZ9vLZ4nHEeesoXg6niDPSYWP9yUgD5PHu48eKE64krHcErchHIEuRysTpAXjObQWIYEHiV4EQYEojp5aEoyY+IIpOQugKYYOnIdJXrdJ63PtWwXMQM6m6SVT4gfZkbHV0XHsVtaQ3K8yoJr0YfwoHDDq5ZiQSqDik/B4Q9taYtn18gyNia1qGJsmTrGlUjK2FJ1jCjRwOASDnkxDvN95ZD/og5yl0qgfCMJ2leDoeksHaFHXYOJVyrMkm/DrPwMzGr2wmjnLGipthyHL0W7t9pDkduwF2U3lmGFtvbTdyirt0OreT+iWwPRUrUBbSkLkT/fCUZwKVYikBMwpDlPXNzLwuAQ2rWX8KzUh2dDDJyLSmB7/S5Mf3WRWiR6CPSezkCXQs6qBnLCKsheyoXqnTCoL9oOFd9/Qtl9KJT6UJMX3/zhCz8iuCjhiviSYtMx3ZTJBN8lCE7eIRgF0p6krRRaRBDskTTGySBKws5SuUjJHYUiMQdpzCUE0Q3y5MnSDhJJQg5JUvjSgO5hHZofaioGmvc40IycMgbRtJktjgOZ5Ma9irzSg46xYHcaVEZevkgBHqUWGFK+FENKQ+BdGAq/wiMYWbwHI6h4FwTDOes0BMKFMHxPNg9qn1dANakYanfuQSs5FJoTpaP1qBswsSGgb9+EeUU0Af0LDH4dBhXlmv3wajuOpPYQFDcEojxtNQ6sn9ZzUsiofjfUWg/iYOt+tJatRtvN95DqZgxNuKTKwLV4Jdyqc8Wz1uCGTLjmDIVDQqewQ8anwpJi6GsYkF4Ey2O/QvsfXKlJIgboAwT07s5AZ0G1TylUIsuhdKMI6vcuQ3PVAqg+9UZ8JvGEywiuNoIwD4IzaV2X+HSa1otgE3+NwJImVkycG0kx8snfyUZJW+QFApeSu+hN9BpIn6n+ZBp9bqDv+C8Fum+8IpzzJNOmR3UhTaGFcC07iAHXmamuZw28C/S/aIt+CcthF7+ToN0EQdhqOFzcBu/Sm/ApvAGX3DzYXIiF9jtWTJf74L6ZC83UfGg8SId2xnloSZKxp+gWjC0J6KSrMK8KhmnlSugtInpkCzaBV78Hl5oPoaLpECrLt+Bi4jfgS7t1q+YDUGsPwj5KDFsLlqD97JuIpmpZmP+TftM1ezjlxsOllM4H3eReDWHwKrOBW84jqMeK5OBTv4Bu6HxxgqU1s/N3MkAHSoH+ioCe+gjoJHB0s8ENLID6/UJo3E+GVlwoNEwY278tXhR50RhmeexzgmM8JXjdF36MHwEoiXn70Csv6gxBm8PiRc6gJFD1HDzFpq1cP0omo5QJZAfqQzH0f6uHZjQgeR4cC/IJZCnUtSkYVPAWBiX2/CdU/S7Ql+9TgtFCTaiP0qAEXA2yRsqwuzECziWZcM4tgv2DSljF7ID+l+JNh9+hY38HuvcYmLOhk5EEnVPfQOmpW+33YGaXhj53E2BWuxvGebOh5cPUX/sWSgXrsa9mB2qaDqCK4C7I2IA3jn8u7tat2g6D034MIbWb0fZgHlr2DscXUhNNuYdkYRPrg/7JiXDMLYBrZS6GNEZgVJM/JjWY4I16G4xr/BCDq2nKjjoAvY+Zpwo7eXBskQK9Swr0lEdAn4a2wk3o/DMNWmn54KYUQIuZsebGQuXFQ42H4kfNk4QckSOkNZ1lGkGAUoInOKkAm2jJsVtH+om9Nj9ytZxNcNdhljXByo+JJXj/i4G2u2xM02YInPJLxFB7VudTPH0ZHkWu0hbPpwHpfnAszoFDVgVsb1fDMmoL9L8S7wTFQE/1AvR33oB+QSp0czKgl34B2iO9uwJCKib5SGaZjbqLPlkhMG1YDr1gQyioSs24vQTDitagsnIL6loCUVu9C2EJK9FjYtsWBNP2Q7hb9A155zdwY5mTeGexo0w32hEcy2F7JQaOqZfgk38KY6rDMKFBiGHNt+iGPgCNYd0/s/sbAb2fgN5JQC9Wq8bkR0AzioOOx3Xo30mGbnY+tNMKoJOQCm03qfnFxRf6E1yUFAqZJcyuZRWuQmB+TWHJcgJfkjPxImcSSIUsXviMx/O9DvqfALrPDjb6nhuBAWkZ5JFKKTYuIqhz4FUdAo9CGwzO7Ra2LjUg0w9OxdlwyKxAXzHQm8lDi4HeAT1WMPSHnYXR7aswKE6Gfl4K9PdfgZ6+uG8XSmMbKyXD/LsEmFduglH2NHA7rA3Hvg+Ve1/gYO4KNFRvQUPLQVRU7MG4yn1dJ4eiULAo3JhW9xsa77+Hml8GY8FQ425uAM5wRRivNoPlTjs4XhoH35oLGFZ/S/wglyDkbWmrrsUAvY+A3kHlSwJ6ihKzCvLnuQyElmIs9LdfhmHxA+jn5kI3jcrRFOjxU6DTbTx9DybsOBh0f034EeYEVyaFD0IYhnQ9y1pTIsiPvU5AnKYkUBL78yKmQhDLgDRPSWtPp/HFkFtHqFCfRBr73wX67qsD+qFsEubCnqKBAZllcCkkT12RjSHVMfApH0bJXfcH+aQGZg6FU1EWeeoK2NwgoMM3Q++zP/fq/Smf2g392ZEwzk2Acfl9GBHURmuSYPyn132oHBizH8B8wjX0SadQI2cWtOZZQbHTdEgRn8XN93EiczFayn5GU3Mg7lJMPab5SEeoCWZZ0TF4Ne/A/ZSPUbXdDz9Qdddrrk/KtcwR7jX34VXDzGCFGFT0GzyLu922x069kdiv145tOu34jlOHBWoz4arUAZQt0LYOhmFcHJ2H6zAsYnZDc2FwKhv60+m9UQrLUJ4hSYQAVhpM1O6jj30EDD33Q6frZyoY8cMVaWZZR560kuB5V9H6iVUas+Py5L1/IHsT2ZldR4nEkMdkUd8Y8tYd43mLIMhYhenDWvgjQSQiGFOkiEv0rEAzK2u8yG10M2WwBWFdb6q9NKDNd6rCOuYD9L2VI/57QMfcEniU5cCnJgG+lR9haAnz4MzT5ZjmA4e8HBqnGtYXamF+nK7bpx0uwHxoqGyE3sKD5HHjYVJ1C6Z5qTD5Ph2G1hnQEV/0LBhxU2E+4yYsbgTCJGsuNBfYQrnjA0CPxDo2CRYJ0xGesgD1ZWvQ3LQbKeSJ54uC0UcUDVVRGExFR/FB2y7cSf4C+Zv9sXSUeQ9P2z2pQdnmBHQsPKqKqFCyWJsM75o1GMw8O/iEhFZs/KK9CD9wRfhCTYTP1dqwnBOHrQYz8IuuH5ZxxI/MLQZH5kfoeu6D4cVQGNecgXHFbRgXZsD4Xg5MjqfDeE0KTBbRDLXsLiwOR8HkxCJoOs+Eavdr08ZBBGdYP7rYzAZILsH3LYUYtgSsAXlYRwLqW0r8Ksl2id4/Onaz47IE+kayUfwddYhsgwkqXRrLgOpHEuyhVF9B7ytoTAL//qNjeFagGfGEi5nvYPEifqOx/ek4p1J/8aKBWC8N6Icy2+oL6zOhECTmw46SuoHZpXBn/pK7/DK8K1bCp3Q0vAv7wqfIBD55OuS9teFVYASPfAFccseThw+E4Ho5LOMqYB6ZCeOdK6H1bleJH2sOOPZradqlC3otDqY5F2GafQmmCZdgFnMBZteEML2yCnprh0CZWVp66gbDuD5Q2uSLUacm43jSB0gq+h55JeuRX7wRqUUbkJL8DS4GTcPqCdZgduZ6XiZjgvcp9fIY3aAH/yY+3KvcMDBjLSXQBXDML4VbaQG8a9PgUxcOzyIneKY/Or6FHDO8q7INY+RiMFJaJijE4i2VeEylej/FDs99TAPH8Dvofv8bDK/vhVHxMRhX0W+vOgXTijiY5UXANGkNnYeRUGN2VrsPNx6XVaQNgRNM03sBgUjeOKJJ/Cr+LNzFsg61YB5/elyKtic0qM031CaZAG0gqJnVEuYBIoI49gy9D6DXrQR3GoU2j3YE+WE2FI9TGBG1FLywnhNbPt1Y/OhY+o5iGqsGNmdLaVxfqZUB+g0Iztwi2AOkNZ3FCzOm30bHeHK9tKYHKfPZMFhlAtM9c2EpjALv93zY3qlE/8xyOOUVUTiSBrfy83CvDIdbRZC4uJSGwzHzd0qgkmEVfRnGW/dC79vPobtkFLRmm0HDpVt43MnrzoOm/dfQeeOf0P3wB+guJogXrIDuhHfAsdOFbKdQ5GkaYQbNNYNht2c8/AOnYNKB6Ri//Q14zRwIuohdPC76pCbWKGFCkx9GNC7B0NZD8CiJh8Odi7A59zud7EuwvU4hVUYZBhUXwqsqA56V0RiUM1Dam36UoiyFuprQhc6fRZuKKhV5+rcLKD2hrPQ+NPsvgNb0j6C9eCG0v/kU2l9/BK0ZM8EdRJQ833noG8Qib6lDkA0lYD6i8GIJlffZ/IhhbJtQjW4TP164EiWWztTnH9T+a4L/MxpjAn02hWWYDAQnefSZzm7Io7zDOpiSzGh3grwPwd3zDccPZdH4phBEkXcWBrD4wlE07qObw5pmBUGsK43T/YPfgmAFWEe5U2EeCXhGcV5nQ3u2KrTf6w+jdTNhtud7mB/ZC4vg43QAwbAMDYLF0e3os+8HGP80D7oLx0F9dD+oj9AGZ4Y85K0Yj/Vs3kQiFgeybFPIySiDzdwAz9O3JzHjPNtYk8gjv948FOOatlGodR0Dk07Bau9n0F8wFBp+luBO1CXeuDD51Q3830PRP7UIzgUlcC0vhHPRSdic6eI53ecT3W0sKyjI2EFRxhzyz3sOO8voBkEUTclYhAyshCwr642PR79diwlbBOEs8vLMFjgbbuelhpeoz5rEDxsNNl/+9ON5RWJOLsXCysQdh5IhWWbzhUmoel6v/l/RxGpZTKgbh3EtEZQMp5AX2ASd2f3AVu7695ky/7nOuc2U/BZSCFIGp+I82F/rfprsVa/+Mk0sZ2F0tTvGNZ+gRO8B7C/HQ92beWine+/IDWDBbJUmbBN/hUNOGRyyStH34vfQeP3ZV4R61atXIu9Kefg1rIB/XRJciwso9nymLXmxbP+wxcCsVAxIKwfv1AZoDH96jN6rXr1SuVeowKsuFINrs+BSXATbc59JLU/XwCwdDMw7B/vUEpgHfQYZ7v9HCNar/2E55ynDpSwYrhXF4uKUeQiY0/Oy3kM555nCITcJgmvp0F30Yo8L9KpXL1X9E2XhkPoVBuYWwbmolKDOhmv+WHiXyGNkgbTRE1pOublXkRycCz+AfUoRzPdsgKJN1w/19KpXf7n6xlnCPikE/SkWdswrozDkNoZUfIWhFTYYWaPy4a6NkgSR2XAZXSOLIWUWcCv7FP1T7sH8wFZwp7ycxz971auXIm4AG+b77MFLEKLv7ULJMy0FefCsPAOv0t0YUrIMg0s+gVfxYrgVbIJLUSzsrl2F2ZZl4L7J/Pdp/956ca969UrEna0O41/HwSJ4F3in42Fz5Trsbt5Bv3u30e9uImyvnoV15GGY/LIA6kOZP1966pZ8r3r1n5eqhwZ0F/aB4ToHGK9zh/FPHjD60RE6H1tDaaA2cdy7mvFfI+BffksPNrEksu0AAAAASUVORK5CYII=",f}),r("Scene/GridImageryProvider",["../Core/Color","../Core/defaultValue","../Core/defineProperties","../Core/Event","../Core/GeographicTilingScheme"],function(e,t,r,i,n){"use strict";var o=function(r){r=t(r,{}),this._tilingScheme=t(r.tilingScheme,new n),this._cells=t(r.cells,8),this._color=t(r.color,new e(1,1,1,.4)),this._glowColor=t(r.glowColor,new e(0,1,0,.05)),this._glowWidth=t(r.glowWidth,6),this._backgroundColor=t(r.backgroundColor,new e(0,.5,0,.2)),this._errorEvent=new i,this._tileWidth=t(r.tileWidth,256),this._tileHeight=t(r.tileHeight,256),this._canvasSize=t(r.canvasSize,256),this._canvas=this._createGridCanvas()
};return r(o.prototype,{proxy:{get:function(){return void 0}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return void 0}},minimumLevel:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return!0}},credit:{get:function(){return void 0}},hasAlphaChannel:{get:function(){return!0}}}),o.prototype._drawGrid=function(e){for(var t=0,r=this._canvasSize,i=0;i<=this._cells;++i){var n=i/this._cells,o=1+n*(r-1);e.moveTo(o,t),e.lineTo(o,r),e.moveTo(t,o),e.lineTo(r,o)}e.stroke()},o.prototype._createGridCanvas=function(){var e=document.createElement("canvas");e.width=this._canvasSize,e.height=this._canvasSize;var t=0,r=this._canvasSize,i=e.getContext("2d"),n=this._backgroundColor.toCssColorString();i.fillStyle=n,i.fillRect(t,t,r,r);var o=this._glowColor.toCssColorString();i.strokeStyle=o,i.lineWidth=this._glowWidth,i.strokeRect(t,t,r,r),this._drawGrid(i),i.lineWidth=.5*this._glowWidth,i.strokeRect(t,t,r,r),this._drawGrid(i);var a=this._color.toCssColorString();return i.strokeStyle=a,i.lineWidth=2,i.strokeRect(t,t,r,r),i.lineWidth=1,this._drawGrid(i),e},o.prototype.getTileCredits=function(){return void 0},o.prototype.requestImage=function(){return this._canvas},o.prototype.pickFeatures=function(){return void 0},o}),r("Scene/ImageryLayerFeatureInfo",["../Core/defined"],function(e){"use strict";var t=function(){this.name=void 0,this.description=void 0,this.position=void 0,this.data=void 0};return t.prototype.configureNameFromProperties=function(t){var r,i=10;for(var n in t)if(t.hasOwnProperty(n)&&t[n]){var o=n.toLowerCase();i>1&&"name"===o?(i=1,r=n):i>2&&"title"===o?(i=2,r=n):i>3&&/name/i.test(n)?(i=3,r=n):i>4&&/title/i.test(n)&&(i=4,r=n)}e(r)&&(this.name=t[r])},t.prototype.configureDescriptionFromProperties=function(t){function r(t){var i='<table class="cesium-infoBox-defaultTable">';for(var n in t)if(t.hasOwnProperty(n)){var o=t[n];e(o)&&(i+="object"==typeof o?"<tr><td>"+n+"</td><td>"+r(o)+"</td></tr>":"<tr><td>"+n+"</td><td>"+o+"</td></tr>")}return i+="</table>"}this.description=r(t)},t}),r("Scene/Moon",["../Core/buildModuleUrl","../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/Ellipsoid","../Core/IauOrientationAxes","../Core/Matrix3","../Core/Matrix4","../Core/Simon1994PlanetaryPositions","../Core/Transforms","./EllipsoidPrimitive","./Material"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=function(t){t=r(t,r.EMPTY_OBJECT);var n=t.textureUrl;i(n)||(n=e("Assets/Textures/moonSmall.jpg")),this.show=r(t.show,!0),this.textureUrl=n,this._ellipsoid=r(t.ellipsoid,a.MOON),this.onlySunLighting=r(t.onlySunLighting,!0),this._ellipsoidPrimitive=new d({radii:this.ellipsoid.radii,material:m.fromType(m.ImageType),_owner:this}),this._ellipsoidPrimitive.material.translucent=!1,this._axes=new s};n(p.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}});var f=new l,v=new l,g=new t;return p.prototype.update=function(e,t,r){if(this.show){var n=this._ellipsoidPrimitive;n.material.uniforms.image=this.textureUrl,n.onlySunLighting=this.onlySunLighting;var o=t.time;i(h.computeIcrfToFixedMatrix(o,f))||h.computeTemeToPseudoFixedMatrix(o,f);var a=this._axes.evaluate(o,v);l.transpose(a,a),l.multiply(f,a,a);var s=c.computeMoonPositionInEarthInertialFrame(o,g);l.multiplyByVector(f,s,s),u.fromRotationTranslation(a,s,n.modelMatrix),n.update(e,t,r)}},p.prototype.isDestroyed=function(){return!1},p.prototype.destroy=function(){return this._ellipsoidPrimitive=this._ellipsoidPrimitive&&this._ellipsoidPrimitive.destroy(),o(this)},p}),r("Scene/NeverTileDiscardPolicy",[],function(){"use strict";var e=function(){};return e.prototype.isReady=function(){return!0},e.prototype.shouldDiscardImage=function(){return!1},e}),r("Shaders/AdjustTranslucentFS",[],function(){"use strict";return"#ifdef MRT\n#extension GL_EXT_draw_buffers : enable\n#endif\nuniform vec4 u_bgColor;\nuniform sampler2D u_depthTexture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nif (texture2D(u_depthTexture, v_textureCoordinates).r < 1.0)\n{\n#ifdef MRT\ngl_FragData[0] = u_bgColor;\ngl_FragData[1] = vec4(u_bgColor.a);\n#else\ngl_FragColor = u_bgColor;\n#endif\nreturn;\n}\ndiscard;\n}\n"}),r("Shaders/CompositeOITFS",[],function(){"use strict";return"uniform sampler2D u_opaque;\nuniform sampler2D u_accumulation;\nuniform sampler2D u_revealage;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 opaque = texture2D(u_opaque, v_textureCoordinates);\nvec4 accum = texture2D(u_accumulation, v_textureCoordinates);\nfloat r = texture2D(u_revealage, v_textureCoordinates).r;\n#ifdef MRT\nvec4 transparent = vec4(accum.rgb / clamp(r, 1e-4, 5e4), accum.a);\n#else\nvec4 transparent = vec4(accum.rgb / clamp(accum.a, 1e-4, 5e4), r);\n#endif\ngl_FragColor = (1.0 - transparent.a) * transparent + transparent.a * opaque;\n}\n"}),r("Scene/OIT",["../Core/Color","../Core/defined","../Core/destroyObject","../Core/PixelFormat","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/PixelDatatype","../Renderer/RenderState","../Shaders/AdjustTranslucentFS","../Shaders/CompositeOITFS","./BlendEquation","./BlendFunction"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e){e._opaqueTexture=e._opaqueTexture&&!e._opaqueTexture.isDestroyed()&&e._opaqueTexture.destroy(),e._accumulationTexture=e._accumulationTexture&&!e._accumulationTexture.isDestroyed()&&e._accumulationTexture.destroy(),e._revealageTexture=e._revealageTexture&&!e._revealageTexture.isDestroyed()&&e._revealageTexture.destroy(),e._depthTexture=e._depthTexture&&!e._depthTexture.isDestroyed()&&e._depthTexture.destroy()}function m(e){e._opaqueFBO=e._opaqueFBO&&!e._opaqueFBO.isDestroyed()&&e._opaqueFBO.destroy(),e._translucentFBO=e._translucentFBO&&!e._translucentFBO.isDestroyed()&&e._translucentFBO.destroy(),e._alphaFBO=e._alphaFBO&&!e._alphaFBO.isDestroyed()&&e._alphaFBO.destroy(),e._adjustTranslucentFBO=e._adjustTranslucentFBO&&!e._adjustTranslucentFBO.isDestroyed()&&e._adjustTranslucentFBO.destroy(),e._adjustAlphaFBO=e._adjustAlphaFBO&&!e._adjustAlphaFBO.isDestroyed()&&e._adjustAlphaFBO.destroy()}function p(e){d(e),m(e)}function f(e,t,r,n){d(e),e._opaqueTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.UNSIGNED_BYTE}),e._accumulationTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.FLOAT}),e._revealageTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.FLOAT}),e._depthTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.DEPTH_COMPONENT,pixelDatatype:a.UNSIGNED_SHORT})}function v(e,t){m(e);var r=WebGLRenderingContext.FRAMEBUFFER_COMPLETE,i=!0;if(e._translucentMRTSupport&&(e._translucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture,e._revealageTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._adjustTranslucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture,e._revealageTexture],destroyAttachments:!1}),(e._translucentFBO.status!==r||e._adjustTranslucentFBO.status!==r)&&(m(e),e._translucentMRTSupport=!1)),!e._translucentMRTSupport){e._translucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._alphaFBO=t.createFramebuffer({colorTextures:[e._revealageTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._adjustTranslucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture],destroyAttachments:!1}),e._adjustAlphaFBO=t.createFramebuffer({colorTextures:[e._revealageTexture],destroyAttachments:!1});var n=e._translucentFBO.status===r,o=e._alphaFBO.status===r,a=e._adjustTranslucentFBO.status===r,s=e._adjustAlphaFBO.status===r;n&&o&&a&&s||(p(e),e._translucentMultipassSupport=!1,i=!1)}return i&&(e._opaqueFBO=t.createFramebuffer({colorTextures:[e._opaqueTexture],depthTexture:e._depthTexture,destroyAttachments:!1})),i}function g(e,r,i,n){var o=i[n.id];if(!t(o)){var a=s.clone(n);a.depthMask=!1,a.blending=r,o=e.createRenderState(a),i[n.id]=o}return o}function _(e,t,r){return g(t,A,e._translucentRenderStateCache,r)}function y(e,t,r){return g(t,M,e._translucentRenderStateCache,r)}function C(e,t,r){return g(t,D,e._alphaRenderStateCache,r)}function w(e,r,i,n){var o=r.id,a=i[o];if(!t(a)){var s=r._attributeLocations,l=r.vertexShaderSource,u=r.fragmentShaderSource,c=u.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_translucent_main()");c=c.replace(/gl_FragColor/g,"czm_gl_FragColor"),c=c.replace(/\bdiscard\b/g,"czm_discard = true"),c=c.replace(/czm_phong/g,"czm_translucentPhong");var h=(-1!==n.indexOf("gl_FragData")?"#extension GL_EXT_draw_buffers : enable \n":"")+"vec4 czm_gl_FragColor;\n"+"bool czm_discard = false;\n"+c+"\n\n"+"void main()\n"+"{\n"+"    czm_translucent_main();\n"+"    if (czm_discard)\n"+"    {\n"+"        discard;\n"+"    }\n"+n+"}\n";a=e.createShaderProgram(l,h,s),i[o]=a}return a}function S(e,t,r){return w(t,r,e._translucentShaderCache,I)}function E(e,t,r){return w(t,r,e._translucentShaderCache,R)}function b(e,t,r){return w(t,r,e._alphaShaderCache,O)}function T(e,r,i,n,o){var a,s,l,u,c=r.context,h=n.framebuffer,d=o.length;n.framebuffer=e._adjustTranslucentFBO,e._adjustTranslucentCommand.execute(c,n),n.framebuffer=e._adjustAlphaFBO,e._adjustAlphaCommand.execute(c,n);var m=e._opaqueFBO;for(n.framebuffer=e._translucentFBO,u=0;d>u;++u)a=o[u],t(a.oit)&&a.shaderProgram.id===a.oit.shaderProgramId||(a.oit={colorRenderState:y(e,c,a.renderState),alphaRenderState:C(e,c,a.renderState),colorShaderProgram:E(e,c,a.shaderProgram),alphaShaderProgram:b(e,c,a.shaderProgram),shaderProgramId:a.shaderProgram.id}),s=a.oit.colorRenderState,l=a.oit.colorShaderProgram,i(a,r,c,n,s,l,m);for(n.framebuffer=e._alphaFBO,u=0;d>u;++u)a=o[u],s=a.oit.alphaRenderState,l=a.oit.alphaShaderProgram,i(a,r,c,n,s,l,m);n.framebuffer=h}function x(e,r,i,n,o){var a=r.context,s=n.framebuffer,l=o.length;n.framebuffer=e._adjustTranslucentFBO,e._adjustTranslucentCommand.execute(a,n);var u=e._opaqueFBO;n.framebuffer=e._translucentFBO;for(var c=0;l>c;++c){var h=o[c];t(h.oit)&&h.shaderProgram.id===h.oit.shaderProgramId||(h.oit={translucentRenderState:_(e,a,h.renderState),translucentShaderProgram:S(e,a,h.shaderProgram),shaderProgramId:h.shaderProgram.id});var d=h.oit.translucentRenderState,m=h.oit.translucentShaderProgram;i(h,r,a,n,d,m,u)}n.framebuffer=s}var P=function(t){var r=t.floatingPointTexture&&t.depthTexture;this._translucentMRTSupport=t.drawBuffers&&r,this._translucentMultipassSupport=!this._translucentMRTSupport&&r,this._opaqueTexture=void 0,this._accumulationTexture=void 0,this._depthTexture=void 0,this._opaqueFBO=void 0,this._translucentFBO=void 0,this._alphaFBO=void 0,this._adjustTranslucentFBO=void 0,this._adjustAlphaFBO=void 0,this._opaqueClearCommand=new n({color:new e(0,0,0,0),owner:this}),this._translucentMRTClearCommand=new n({color:new e(0,0,0,1),owner:this}),this._translucentMultipassClearCommand=new n({color:new e(0,0,0,0),owner:this}),this._alphaClearCommand=new n({color:new e(1,1,1,1),owner:this}),this._translucentRenderStateCache={},this._alphaRenderStateCache={},this._translucentShaderCache={},this._alphaShaderCache={},this._compositeCommand=void 0,this._adjustTranslucentCommand=void 0,this._adjustAlphaCommand=void 0};P.prototype.update=function(e){if(this.isSupported()){var r=e.drawingBufferWidth,i=e.drawingBufferHeight,n=this._opaqueTexture,a=!t(n)||n.width!==r||n.height!==i;if(a&&f(this,e,r,i),t(this._opaqueFBO)&&!a||v(this,e)){var s,c,h=this;t(this._compositeCommand)||(s=o({defines:[this._translucentMRTSupport?"MRT":""],sources:[u]}),c={u_opaque:function(){return h._opaqueTexture},u_accumulation:function(){return h._accumulationTexture},u_revealage:function(){return h._revealageTexture}},this._compositeCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})),t(this._adjustTranslucentCommand)||(this._translucentMRTSupport?(s=o({defines:["MRT"],sources:[l]}),c={u_bgColor:function(){return h._translucentMRTClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustTranslucentCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})):this._translucentMultipassSupport&&(s=o({sources:[l]}),c={u_bgColor:function(){return h._translucentMultipassClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustTranslucentCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this}),c={u_bgColor:function(){return h._alphaClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustAlphaCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})))}}};var A={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ONE,functionDestinationRgb:h.ONE,functionSourceAlpha:h.ZERO,functionDestinationAlpha:h.ONE_MINUS_SOURCE_ALPHA},M={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ONE,functionDestinationRgb:h.ONE,functionSourceAlpha:h.ONE,functionDestinationAlpha:h.ONE},D={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ZERO,functionDestinationRgb:h.ONE_MINUS_SOURCE_ALPHA,functionSourceAlpha:h.ZERO,functionDestinationAlpha:h.ONE_MINUS_SOURCE_ALPHA},I="    vec3 Ci = czm_gl_FragColor.rgb * czm_gl_FragColor.a;\n    float ai = czm_gl_FragColor.a;\n    float wzi = czm_alphaWeight(ai);\n    gl_FragData[0] = vec4(Ci * wzi, ai);\n    gl_FragData[1] = vec4(ai * wzi);\n",R="    vec3 Ci = czm_gl_FragColor.rgb * czm_gl_FragColor.a;\n    float ai = czm_gl_FragColor.a;\n    float wzi = czm_alphaWeight(ai);\n    gl_FragColor = vec4(Ci, ai) * wzi;\n",O="    float ai = czm_gl_FragColor.a;\n    gl_FragColor = vec4(ai);\n";return P.prototype.executeCommands=function(e,t,r,i){return this._translucentMRTSupport?(x(this,e,t,r,i),void 0):(T(this,e,t,r,i),void 0)},P.prototype.execute=function(e,t){this._compositeCommand.execute(e,t)},P.prototype.clear=function(t,r,i){var n=r.framebuffer;r.framebuffer=this._opaqueFBO,e.clone(i,this._opaqueClearCommand.color),this._opaqueClearCommand.execute(t,r),r.framebuffer=this._translucentFBO;var o=this._translucentMRTSupport?this._translucentMRTClearCommand:this._translucentMultipassClearCommand;o.execute(t,r),this._translucentMultipassSupport&&(r.framebuffer=this._alphaFBO,this._alphaClearCommand.execute(t,r)),r.framebuffer=n},P.prototype.getColorFramebuffer=function(){return this._opaqueFBO},P.prototype.isSupported=function(){return this._translucentMRTSupport||this._translucentMultipassSupport},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){p(this),t(this._compositeCommand)&&(this._compositeCommand.shaderProgram=this._compositeCommand.shaderProgram&&this._compositeCommand.shaderProgram.destroy()),t(this._adjustTranslucentCommand)&&(this._adjustTranslucentCommand.shaderProgram=this._adjustTranslucentCommand.shaderProgram&&this._adjustTranslucentCommand.shaderProgram.destroy()),t(this._adjustAlphaCommand)&&(this._adjustAlphaCommand.shaderProgram=this._adjustAlphaCommand.shaderProgram&&this._adjustAlphaCommand.shaderProgram.destroy());var e,i=this._translucentShaderCache;for(e in i)i.hasOwnProperty(e)&&t(i[e])&&i[e].destroy();this._translucentShaderCache={},i=this._alphaShaderCache;for(e in i)i.hasOwnProperty(e)&&t(i[e])&&i[e].destroy();return this._alphaShaderCache={},r(this)},P}),r("Scene/OpenStreetMapImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Rectangle","../Core/WebMercatorTilingScheme","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,i,n){var o=e._url+n+"/"+t+"/"+i+"."+e._fileExtension,a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var c=/\/$/,h=new e("MapQuest, Open Street Map and contributors, CC-BY-SA"),d=function(r){r=t(r,{});var i=t(r.url,"//a.tile.openstreetmap.org/");c.test(i)||(i+="/"),this._url=i,this._fileExtension=t(r.fileExtension,"png"),this._proxy=r.proxy,this._tileDiscardPolicy=r.tileDiscardPolicy,this._tilingScheme=new s,this._tileWidth=256,this._tileHeight=256,this._minimumLevel=t(r.minimumLevel,0),this._maximumLevel=t(r.maximumLevel,18),this._rectangle=t(r.rectangle,this._tilingScheme.rectangle);var l=this._tilingScheme.positionToTileXY(a.southwest(this._rectangle),this._minimumLevel),u=this._tilingScheme.positionToTileXY(a.northeast(this._rectangle),this._minimumLevel),d=(Math.abs(u.x-l.x)+1)*(Math.abs(u.y-l.y)+1);if(d>4)throw new n("The imagery provider's rectangle and minimumLevel indicate that there are "+d+" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.");this._errorEvent=new o,this._ready=!0;var m=t(r.credit,h);"string"==typeof m&&(m=new e(m)),this._credit=m};return i(d.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),d.prototype.getTileCredits=function(){return void 0},d.prototype.requestImage=function(e,t,r){var i=u(this,e,t,r);return l.loadImage(this,i)},d.prototype.pickFeatures=function(){return void 0},d}),r("Scene/OrthographicFrustum",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","./CullingVolume"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){(e.top!==e._top||e.bottom!==e._bottom||e.left!==e._left||e.right!==e._right||e.near!==e._near||e.far!==e._far)&&(e._left=e.left,e._right=e.right,e._top=e.top,e._bottom=e.bottom,e._near=e.near,e._far=e.far,e._orthographicMatrix=a.computeOrthographicOffCenter(e.left,e.right,e.bottom,e.top,e.near,e.far,e._orthographicMatrix))}var u=function(){this.left=void 0,this._left=void 0,this.right=void 0,this._right=void 0,this.top=void 0,this._top=void 0,this.bottom=void 0,this._bottom=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far,this._cullingVolume=new s,this._orthographicMatrix=new a};n(u.prototype,{projectionMatrix:{get:function(){return l(this),this._orthographicMatrix}}});var c=new t,h=new t,d=new t,m=new t;return u.prototype.computeCullingVolume=function(e,n,o){var a=this._cullingVolume.planes,s=this.top,l=this.bottom,u=this.right,p=this.left,f=this.near,v=this.far,g=t.cross(n,o,c),_=h;t.multiplyByScalar(n,f,_),t.add(e,_,_);var y=d;t.multiplyByScalar(g,p,y),t.add(_,y,y);var C=a[0];return i(C)||(C=a[0]=new r),C.x=g.x,C.y=g.y,C.z=g.z,C.w=-t.dot(g,y),t.multiplyByScalar(g,u,y),t.add(_,y,y),C=a[1],i(C)||(C=a[1]=new r),C.x=-g.x,C.y=-g.y,C.z=-g.z,C.w=-t.dot(t.negate(g,m),y),t.multiplyByScalar(o,l,y),t.add(_,y,y),C=a[2],i(C)||(C=a[2]=new r),C.x=o.x,C.y=o.y,C.z=o.z,C.w=-t.dot(o,y),t.multiplyByScalar(o,s,y),t.add(_,y,y),C=a[3],i(C)||(C=a[3]=new r),C.x=-o.x,C.y=-o.y,C.z=-o.z,C.w=-t.dot(t.negate(o,m),y),C=a[4],i(C)||(C=a[4]=new r),C.x=n.x,C.y=n.y,C.z=n.z,C.w=-t.dot(n,_),t.multiplyByScalar(n,v,y),t.add(e,y,y),C=a[5],i(C)||(C=a[5]=new r),C.x=-n.x,C.y=-n.y,C.z=-n.z,C.w=-t.dot(t.negate(n,m),y),this._cullingVolume},u.prototype.getPixelSize=function(t,r,n){l(this);var o=this.right-this.left,a=this.top-this.bottom,s=o/t.x,u=a/t.y;return i(n)?(n.x=s,n.y=u,n):new e(s,u)},u.prototype.clone=function(e){return i(e)||(e=new u),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},u.prototype.equals=function(e){return i(e)&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},u}),r("Widgets/getElement",["../Core/DeveloperError"],function(){"use strict";var e=function(e){if("string"==typeof e){var t=document.getElementById(e);e=t}return e};return e}),r("Scene/PerformanceDisplay",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/getTimestamp","../Widgets/getElement"],function(e,t,r,i,n,o,a){"use strict";var s=e.fromCssColorString("#e52"),l=e.fromCssColorString("#de3"),u=e.fromCssColorString("rgba(40, 40, 40, 0.7)"),c=function(e){e=t(e,t.EMPTY_OBJECT);var i=a(e.container);if(!r(i))throw new n("container is required");this._container=i,this._fpsColor=t(e.fpsColor,s).toCssColorString(),this._frameTimeColor=t(e.frameTimeColor,l).toCssColorString(),this._backgroundColor=t(e.backgroundColor,u).toCssColorString(),this._font=t(e.font,"bold 12px Helvetica,Arial,sans-serif");var o=document.createElement("div"),c=document.createElement("div");this._fpsText=document.createTextNode(""),c.appendChild(this._fpsText),c.style.color=this._fpsColor;var h=document.createElement("div");this._msText=document.createTextNode(""),h.style.color=this._frameTimeColor,h.appendChild(this._msText),o.appendChild(c),o.appendChild(h),o.style["z-index"]=1,o.style["background-color"]=this._backgroundColor,o.style.font=this._font,o.style.padding="7px",o.style["border-radius"]="5px",o.style.border="1px solid #444",this._container.appendChild(o),this._lastFpsSampleTime=void 0,this._frameCount=0,this._time=void 0,this._fps=0,this._frameTime=0};return c.prototype.update=function(){if(!r(this._time))return this._lastFpsSampleTime=o(),this._time=o(),void 0;var e=this._time,t=o();this._time=t;var i=t-e;this._frameCount++;var n=this._fps,a=t-this._lastFpsSampleTime;a>1e3&&(n=0|1e3*this._frameCount/a,this._lastFpsSampleTime=t,this._frameCount=0),n!==this._fps&&(this._fpsText.nodeValue=n+" FPS",this._fps=n),i!==this._frameTime&&(this._msText.nodeValue=i.toFixed(2)+" MS",this._frameTime=i)},c.prototype.destroy=function(){return i(this)},c}),r("Scene/Polygon",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/GeometryInstance","../Core/Math","../Core/PolygonGeometry","./EllipsoidSurfaceAppearance","./Material","./Primitive"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(i){i=t(i,t.EMPTY_OBJECT),this.ellipsoid=t(i.ellipsoid,a.WGS84),this._ellipsoid=void 0,this.granularity=t(i.granularity,l.RADIANS_PER_DEGREE),this._granularity=void 0,this.height=t(i.height,0),this._height=void 0,this.textureRotationAngle=t(i.textureRotationAngle,0),this._textureRotationAngle=void 0,this.show=t(i.show,!0);var n=h.fromType(h.ColorType,{color:new e(1,1,0,.5)});this.material=t(i.material,n),this.id=i.id,this._id=void 0,this.asynchronous=t(i.asynchronous,!0),this.debugShowBoundingVolume=t(i.debugShowBoundingVolume,!1),this._positions=void 0,this._polygonHierarchy=void 0,this._createPrimitive=!1,this._primitive=void 0,r(i.positions)?this.positions=i.positions:r(i.polygonHierarchy)&&this.configureFromPolygonHierarchy(i.polygonHierarchy)};return i(m.prototype,{positions:{get:function(){return this._positions},set:function(e){this._positions=e,this._polygonHierarchy=void 0,this._createPrimitive=!0}}}),m.prototype.configureFromPolygonHierarchy=function(e){this._positions=void 0,this._polygonHierarchy=e,this._createPrimitive=!0},m.prototype.update=function(e,t,i){if(this.show&&(this._createPrimitive||r(this._primitive))){if(this._createPrimitive||this._ellipsoid!==this.ellipsoid||this._granularity!==this.granularity||this._height!==this.height||this._textureRotationAngle!==this.textureRotationAngle||this._id!==this.id){if(this._createPrimitive=!1,this._ellipsoid=this.ellipsoid,this._granularity=this.granularity,this._height=this.height,this._textureRotationAngle=this.textureRotationAngle,this._id=this.id,this._primitive=this._primitive&&this._primitive.destroy(),!r(this._positions)&&!r(this._polygonHierarchy))return;var n;n=r(this._positions)?new s({geometry:u.fromPositions({positions:this._positions,height:this.height,vertexFormat:c.VERTEX_FORMAT,stRotation:this.textureRotationAngle,ellipsoid:this.ellipsoid,granularity:this.granularity}),id:this.id,pickPrimitive:this}):new s({geometry:new u({polygonHierarchy:this._polygonHierarchy,height:this.height,vertexFormat:c.VERTEX_FORMAT,stRotation:this.textureRotationAngle,ellipsoid:this.ellipsoid,granularity:this.granularity}),id:this.id,pickPrimitive:this}),this._primitive=new d({geometryInstances:n,appearance:new c({aboveGround:this.height>0}),asynchronous:this.asynchronous})}var o=this._primitive;o.debugShowBoundingVolume=this.debugShowBoundingVolume,o.appearance.material=this.material,o.update(e,t,i)}},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),n(this)},m}),r("Scene/PrimitiveCollection",["../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i,n){"use strict";function o(e,t){return e._primitives.indexOf(t)}var a=function(r){r=t(r,t.EMPTY_OBJECT),this._primitives=[],this._guid=e(),this.show=t(r.show,!0),this.destroyPrimitives=t(r.destroyPrimitives,!0)};return i(a.prototype,{length:{get:function(){return this._primitives.length}}}),a.prototype.add=function(e){var t=e._external=e._external||{},r=t._composites=t._composites||{};return r[this._guid]={collection:this},this._primitives.push(e),e},a.prototype.remove=function(e){if(this.contains(e)){var t=this._primitives.indexOf(e);if(-1!==t)return this._primitives.splice(t,1),delete e._external._composites[this._guid],this.destroyPrimitives&&e.destroy(),!0}return!1},a.prototype.removeAll=function(){if(this.destroyPrimitives)for(var e=this._primitives,t=e.length,r=0;t>r;++r)e[r].destroy();this._primitives=[]},a.prototype.contains=function(e){return!!(r(e)&&e._external&&e._external._composites&&e._external._composites[this._guid])},a.prototype.raise=function(e){if(r(e)){var t=o(this,e),i=this._primitives;if(t!==i.length-1){var n=i[t];i[t]=i[t+1],i[t+1]=n}}},a.prototype.raiseToTop=function(e){if(r(e)){var t=o(this,e),i=this._primitives;t!==i.length-1&&(i.splice(t,1),i.push(e))}},a.prototype.lower=function(e){if(r(e)){var t=o(this,e),i=this._primitives;if(0!==t){var n=i[t];i[t]=i[t-1],i[t-1]=n}}},a.prototype.lowerToBottom=function(e){if(r(e)){var t=o(this,e),i=this._primitives;0!==t&&(i.splice(t,1),i.unshift(e))}},a.prototype.get=function(e){return this._primitives[e]},a.prototype.update=function(e,t,r){if(this.show)for(var i=this._primitives,n=0;n<i.length;++n)i[n].update(e,t,r)},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){return this.removeAll(),n(this)},a}),r("Scene/QuadtreeTileProvider",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return r.computeDefaultLevelZeroMaximumGeometricError=function(e){return.25*2*e.ellipsoid.maximumRadius*Math.PI/(65*e.getNumberOfXTilesAtLevel(0))},e(r.prototype,{quadtree:{get:t.throwInstantiationError,set:t.throwInstantiationError},ready:{get:t.throwInstantiationError},tilingScheme:{get:t.throwInstantiationError},errorEvent:{get:t.throwInstantiationError}}),r.prototype.beginUpdate=t.throwInstantiationError,r.prototype.endUpdate=t.throwInstantiationError,r.prototype.getLevelMaximumGeometricError=t.throwInstantiationError,r.prototype.loadTile=t.throwInstantiationError,r.prototype.computeTileVisibility=t.throwInstantiationError,r.prototype.showTileThisFrame=t.throwInstantiationError,r.prototype.computeDistanceToTile=t.throwInstantiationError,r.prototype.isDestroyed=t.throwInstantiationError,r.prototype.destroy=t.throwInstantiationError,r}),r("Scene/RectanglePrimitive",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/GeometryInstance","../Core/Math","../Core/Rectangle","../Core/RectangleGeometry","./EllipsoidSurfaceAppearance","./Material","./Primitive"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(r){r=t(r,t.EMPTY_OBJECT),this.ellipsoid=t(r.ellipsoid,o.WGS84),this._ellipsoid=void 0,this.rectangle=l.clone(r.rectangle),this._rectangle=void 0,this.granularity=t(r.granularity,s.RADIANS_PER_DEGREE),this._granularity=void 0,this.height=t(r.height,0),this._height=void 0,this.rotation=t(r.rotation,0),this._rotation=void 0,this.textureRotationAngle=t(r.textureRotationAngle,0),this._textureRotationAngle=void 0,this.show=t(r.show,!0);var i=h.fromType(h.ColorType,{color:new e(1,1,0,.5)});this.material=t(r.material,i),this.id=r.id,this._id=void 0,this.asynchronous=t(r.asynchronous,!0),this.debugShowBoundingVolume=t(r.debugShowBoundingVolume,!1),this._primitive=void 0};return m.prototype.update=function(e,t,i){if(this.show&&r(this.rectangle)){if(!l.equals(this._rectangle,this.rectangle)||this._ellipsoid!==this.ellipsoid||this._granularity!==this.granularity||this._height!==this.height||this._rotation!==this.rotation||this._textureRotationAngle!==this.textureRotationAngle||this._id!==this.id){this._rectangle=l.clone(this.rectangle,this._rectangle),this._ellipsoid=this.ellipsoid,this._granularity=this.granularity,this._height=this.height,this._rotation=this.rotation,this._textureRotationAngle=this.textureRotationAngle,this._id=this.id;var n=new a({geometry:new u({rectangle:this.rectangle,vertexFormat:c.VERTEX_FORMAT,ellipsoid:this.ellipsoid,granularity:this.granularity,height:this.height,rotation:this.rotation,stRotation:this.textureRotationAngle}),id:this.id,pickPrimitive:this});r(this._primitive)&&this._primitive.destroy(),this._primitive=new d({geometryInstances:n,appearance:new c({aboveGround:this.height>0}),asynchronous:this.asynchronous})}var o=this._primitive;o.appearance.material=this.material,o.debugShowBoundingVolume=this.debugShowBoundingVolume,o.update(e,t,i)}},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),i(this)},m}),r("Scene/SceneTransitioner",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/EasingFunction","../Core/Ellipsoid","../Core/Math","../Core/Matrix4","../Core/ScreenSpaceEventHandler","../Core/ScreenSpaceEventType","./Camera","./OrthographicFrustum","./PerspectiveFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t){if(e._scene.completeMorphOnUserInput){e._morphHandler=new u(e._scene.canvas);var r=function(){e._morphCancelled=!0,t(e)};e._completeMorph=r,e._morphHandler.setInputAction(r,c.LEFT_DOWN),e._morphHandler.setInputAction(r,c.MIDDLE_DOWN),e._morphHandler.setInputAction(r,c.RIGHT_DOWN),e._morphHandler.setInputAction(r,c.WHEEL)}}function v(e){for(var t=e._currentTweens,r=0;r<t.length;++r)t[r].cancelTween();e._currentTweens.length=0,e._morphHandler=e._morphHandler&&e._morphHandler.destroy()}function g(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=s.position,c=s.direction,h=s.up,d=e.clone(t._camera2D.position),m=e.clone(t._camera2D.direction),p=e.clone(t._camera2D.up),f=function(t){s.position=y(u,d,t.time),s.direction=y(c,m,t.time),s.up=y(h,p,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},v=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:f});
t._currentTweens.push(v),x(t,a,0,1,r,n)}function _(e,t,r,i){t*=.5;var n=e._scene.camera;n.setTransform(l.IDENTITY),E(e,t,r,function(){n.frustum=e._cameraCV.frustum.clone(),g(e,t,r,i)})}function y(t,r,i){return e.lerp(t,r,i,new e)}function C(t,r,i){var n=t._scene,a=n.camera,l=a.position,u=a.frustum.fov,c=.5*s.RADIANS_PER_DEGREE,h=e.magnitude(l)*Math.tan(.5*u);a.frustum.far=h/Math.tan(.5*c)+1e7;var d=function(t){a.frustum.fov=s.lerp(u,c,t.time);var r=h/Math.tan(.5*a.frustum.fov),i=new e;a.position=e.multiplyByScalar(e.normalize(a.position,i),r,i)},m=n.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:d,complete:function(){a.frustum=t._camera2D.frustum.clone(),i(t)}});t._currentTweens.push(m)}function w(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=i.maximumRadius,c=e.clone(s.position),h=e.clone(s.direction),d=e.clone(s.up),m=Math.tan(.5*t._cameraCV.frustum.fovy),p=t._cameraCV.frustum.aspectRatio*m,f=u*Math.PI/p,v=new e;v=e.multiplyByScalar(e.normalize(t._camera2D.position,v),f,v);var g=e.clone(t._camera2D.direction),_=e.clone(t._camera2D.up),w=function(t){s.position=y(c,v,t.time),s.direction=y(h,g,t.time),s.up=y(d,_,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)};r*=.5;var S=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:w,complete:function(){C(t,r,n)}});t._currentTweens.push(S)}function S(t,r,i,n){r*=.5;var o=i.maximumRadius,a=Math.tan(.5*t._camera3D.frustum.fovy),s=t._camera3D.frustum.aspectRatio*a,l=o*Math.PI/s,u={},c=new e;u.position2D=e.multiplyByScalar(e.normalize(t._camera2D.position2D,c),l,c),u.direction2D=e.clone(t._camera2D.direction2D),u.up2D=e.clone(t._camera2D.up2D);var h=function(){C(t,r,n)};T(t,r,u,h)}function E(t,r,i,n){var a=t._scene,l=a.camera,u=i.maximumRadius,c=Math.tan(.5*t._cameraCV.frustum.fovy),h=t._cameraCV.frustum.aspectRatio*c,d=u*Math.PI/h,m=new e;m=e.multiplyByScalar(e.normalize(t._camera2D.position,m),d,m);var p=l.frustum.top,f=l.frustum.bottom,v=l.frustum.right,g=l.frustum.left,_=t._camera2D.frustum,C=t._cameraCV.frustum,w=e.clone(l.position),S=function(e){l.position=y(w,m,e.time),l.frustum.top=s.lerp(p,_.top,e.time),l.frustum.bottom=s.lerp(f,_.bottom,e.time),l.frustum.right=s.lerp(v,_.right,e.time),l.frustum.left=s.lerp(g,_.left,e.time)},E=(v-g)/(2*u*Math.PI),b=1;E>b&&(E=0);var T=(b-E)*r;if(T<s.EPSILON6){if(e.equalsEpsilon(w,m,s.EPSILON6))return l.position=m,l.frustum=C.clone(),n(t),void 0;T=r,E=0,b=1}var x=a.tweens.add({easingFunction:o.QUARTIC_OUT,duration:T,startObject:{time:E},stopObject:{time:b},update:S,complete:function(){l.frustum=C.clone(),n(t)}});t._currentTweens.push(x)}function b(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY),r*=.5;var u=function(){var i=e.clone(s.position),l=e.clone(s.direction),u=e.clone(s.up),c=e.clone(t._cameraCV.position),h=e.clone(t._cameraCV.direction),d=e.clone(t._cameraCV.up),m=function(t){s.position=y(i,c,t.time),s.direction=y(l,h,t.time),s.up=y(u,d,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},p=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:m,complete:function(){n(t)}});t._currentTweens.push(p)};E(t,r,i,u)}function T(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=e.clone(s.position),c=e.clone(s.direction),h=e.clone(s.up),d=e.clone(i.position2D),m=e.clone(i.direction2D),p=e.clone(i.up2D),f=function(t){s.position=y(u,d,t.time),s.direction=y(c,m,t.time),s.up=y(h,p,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},v=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:f,complete:function(){s.position=d,s.direction=m,s.up=p,s.right=e.cross(m,p,s.right),e.normalize(s.right,s.right)}});t._currentTweens.push(v),x(t,a,1,0,r,n)}function x(e,t,i,n,a,s){var l={object:t,property:"morphTime",startValue:i,stopValue:n,duration:a,easingFunction:o.QUARTIC_OUT};r(s)&&(l.complete=function(){s(e)});var u=t.tweens.addProperty(l);e._currentTweens.push(u)}function P(e){var t=e._scene,r=t.drawingBufferHeight/t.drawingBufferWidth,i=e._camera2D.frustum;i.top=i.right*r,i.bottom=-i.top,r=1/r,i=e._cameraCV.frustum,i.aspectRatio=r,i=e._camera3D.frustum,i.aspectRatio=r;var n=t.camera;switch(t.mode){case p.SCENE3D:n.frustum=e._camera3D.frustum.clone();break;case p.COLUMBUS_VIEW:n.frustum=e._cameraCV.frustum.clone();break;case p.SCENE2D:n.frustum=e._camera2D.frustum.clone()}}function A(t){var i=t._scene;if(i.mode=p.SCENE3D,i.morphTime=p.getMorphTime(p.SCENE3D),v(t),P(t),t._previousMode!==p.MORPHING||t._morphCancelled){t._morphCancelled=!1;var n=i.camera;n.position=e.clone(t._camera3D.position),n.direction=e.clone(t._camera3D.direction),n.up=e.clone(t._camera3D.up),n.right=e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right)}var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.SCENE3D,o)}function M(t){var i=t._scene;i.mode=p.SCENE2D,i.morphTime=p.getMorphTime(p.SCENE2D),v(t),P(t);var n=i.camera;e.clone(t._camera2D.position,n.position),e.clone(t._camera2D.direction,n.direction),e.clone(t._camera2D.up,n.up),e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right);var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.SCENE2D,o)}function D(t){var i=t._scene;if(i.mode=p.COLUMBUS_VIEW,i.morphTime=p.getMorphTime(p.COLUMBUS_VIEW),v(t),P(t),t._previousModeMode!==p.MORPHING||t._morphCancelled){t._morphCancelled=!1;var n=i.camera;e.clone(t._cameraCV.position,n.position),e.clone(t._cameraCV.direction,n.direction),e.clone(t._cameraCV.up,n.up),e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right)}var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.COLUMBUS_VIEW,o)}var I=function(r,i){this._scene=r,i=t(i,a.WGS84);var n=i.maximumRadius,o=new e(0,0,2*n),u=new e;u=e.normalize(e.negate(o,u),u);var c=e.clone(e.UNIT_Y),p=l.multiplyByPoint(h.TRANSFORM_2D,o,new e),f=l.multiplyByPointAsVector(h.TRANSFORM_2D,u,new e),v=l.multiplyByPointAsVector(h.TRANSFORM_2D,c,new e),g=new d;g.right=n*Math.PI,g.left=-g.right,g.top=g.right*(r.drawingBufferHeight/r.drawingBufferWidth),g.bottom=-g.top,this._camera2D={position:o,direction:u,up:c,position2D:p,direction2D:f,up2D:v,frustum:g},o=new e(0,-1,1),o=e.multiplyByScalar(e.normalize(o,o),5*n,o),u=new e,u=e.normalize(e.subtract(e.ZERO,o,u),u);var _=new e;_=e.normalize(e.cross(u,e.UNIT_Z,_),_),c=new e,c=e.normalize(e.cross(_,u,c),c),p=l.multiplyByPoint(h.TRANSFORM_2D,o,new e),f=l.multiplyByPointAsVector(h.TRANSFORM_2D,u,new e);var y=l.multiplyByPointAsVector(h.TRANSFORM_2D,_,new e);v=new e,v=e.normalize(e.cross(y,f,v),v),g=new m,g.aspectRatio=r.drawingBufferWidth/r.drawingBufferHeight,g.fov=s.toRadians(60),this._cameraCV={position:o,direction:u,up:c,position2D:p,direction2D:f,up2D:v,frustum:g},o=new e,o=e.multiplyByScalar(e.normalize(new e(0,-2,1),o),2*n,o),u=new e,u=e.normalize(e.subtract(e.ZERO,o,u),u),_=new e,_=e.normalize(e.cross(u,e.UNIT_Z,_),_),c=new e,c=e.normalize(e.cross(_,u,c),c),this._camera3D={position:o,direction:u,up:c,frustum:g},this._currentTweens=[],this._morphHandler=void 0,this._morphCancelled=!1,this._completeMorph=void 0};return I.prototype.completeMorph=function(){r(this._completeMorph)&&this._completeMorph()},I.prototype.morphTo2D=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.SCENE2D&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.SCENE2D,!0),P(this),i.mode=p.MORPHING,f(this,M),this._previousMode===p.COLUMBUS_VIEW?w(this,e,t,M):S(this,e,t,M),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.morphToColumbusView=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.COLUMBUS_VIEW&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.COLUMBUS_VIEW,!0),P(this),i.mode=p.MORPHING,f(this,D),this._previousMode===p.SCENE2D?b(this,e,t,D):T(this,e,this._cameraCV,D),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.morphTo3D=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.SCENE3D&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.SCENE3D,!0),P(this),i.mode=p.MORPHING,f(this,A),this._previousMode===p.SCENE2D?_(this,e,t,A):g(this,e,t,A),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){return v(this),i(this)},I}),r("Scene/TweenCollection",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/EasingFunction","../Core/getTimestamp","../Core/TimeConstants","../ThirdParty/Tween"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t,r,i,n,o,a,s,l,u,c){this._tweens=t,this._tweenjs=r,this._startObject=e(i),this._stopObject=e(n),this._duration=o,this._delay=a,this._easingFunction=s,this._update=l,this._complete=u,this.cancel=c,this.needsStart=!0};i(u.prototype,{startObject:{get:function(){return this._startObject}},stopObject:{get:function(){return this._stopObject}},duration:{get:function(){return this._duration}},delay:{get:function(){return this._delay}},easingFunction:{get:function(){return this._easingFunction}},update:{get:function(){return this._update}},complete:{get:function(){return this._complete}},tweenjs:{get:function(){return this._tweenjs}}}),u.prototype.cancelTween=function(){this._tweens.remove(this)};var c=function(){this._tweens=[]};return i(c.prototype,{length:{get:function(){return this._tweens.length}}}),c.prototype.add=function(i){if(i=t(i,t.EMPTY_OBJECT),0===i.duration)return r(i.complete)&&i.complete(),new u(this);var n=i.duration/s.SECONDS_PER_MILLISECOND,a=t(i.delay,0),c=a/s.SECONDS_PER_MILLISECOND,h=t(i.easingFunction,o.LINEAR_NONE),d=i.startObject,m=new l.Tween(d);m.to(e(i.stopObject),n),m.delay(c),m.easing(h),r(i.update)&&m.onUpdate(function(){i.update(d)}),m.onComplete(t(i.complete,null)),m.repeat(t(i._repeat,0));var p=new u(this,m,i.startObject,i.stopObject,i.duration,a,h,i.update,i.complete,i.cancel);return this._tweens.push(p),p},c.prototype.addProperty=function(e){function r(e){i[n]=e.value}e=t(e,t.EMPTY_OBJECT);var i=e.object,n=e.property,o=e.startValue,a=e.stopValue;return this.add({startObject:{value:o},stopObject:{value:a},duration:t(e.duration,3),delay:e.delay,easingFunction:e.easingFunction,update:r,complete:e.complete,cancel:e.cancel,_repeat:e._repeat})},c.prototype.addAlpha=function(e){function i(e){for(var t=o.length,r=0;t>r;++r)n.uniforms[o[r]].alpha=e.alpha}e=t(e,t.EMPTY_OBJECT);var n=e.material,o=[];for(var a in n.uniforms)n.uniforms.hasOwnProperty(a)&&r(n.uniforms[a])&&r(n.uniforms[a].alpha)&&o.push(a);return this.add({startObject:{alpha:t(e.startValue,0)},stopObject:{alpha:t(e.stopValue,1)},duration:t(e.duration,3),delay:e.delay,easingFunction:e.easingFunction,update:i,complete:e.complete,cancel:e.cancel})},c.prototype.addOffsetIncrement=function(e){e=t(e,t.EMPTY_OBJECT);var r=e.material,i=r.uniforms;return this.addProperty({object:i,property:"offset",startValue:i.offset,stopValue:i.offset+1,duration:e.duration,delay:e.delay,easingFunction:e.easingFunction,update:e.update,cancel:e.cancel,_repeat:1/0})},c.prototype.remove=function(e){if(!r(e))return!1;var t=this._tweens.indexOf(e);return-1!==t?(e.tweenjs.stop(),r(e.cancel)&&e.cancel(),this._tweens.splice(t,1),!0):!1},c.prototype.removeAll=function(){for(var e=this._tweens,t=0;t<e.length;++t){var i=e[t];i.tweenjs.stop(),r(i.cancel)&&i.cancel()}e.length=0},c.prototype.contains=function(e){return r(e)&&-1!==this._tweens.indexOf(e)},c.prototype.get=function(e){return this._tweens[e]},c.prototype.update=function(e){var t=this._tweens,i=0;for(e=r(e)?e/s.SECONDS_PER_MILLISECOND:a();i<t.length;){var n=t[i],o=n.tweenjs;n.needsStart?(n.needsStart=!1,o.start(e)):o.update(e)?i++:(o.stop(),t.splice(i,1))}},c}),r("Scene/ScreenSpaceCameraController",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/IntersectionTests","../Core/isArray","../Core/KeyboardEventModifier","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Plane","../Core/Quaternion","../Core/Ray","../Core/Transforms","./CameraEventAggregator","./CameraEventType","./SceneMode","./TweenCollection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(e,t){if(0>e)return 0;var r=25*(1-t);return Math.exp(-r*e)}function b(t){return e.equalsEpsilon(t.startPosition,t.endPosition,d.EPSILON14)}function T(t,r,i,n,a,s,l){var u=s[l];o(u)||(u=s[l]={startPosition:new e,endPosition:new e,motion:new e,active:!1});var c=t.getButtonPressTime(r,i),h=t.getButtonReleaseTime(r,i),d=c&&h&&(h.getTime()-c.getTime())/1e3,m=new Date,p=h&&(m.getTime()-h.getTime())/1e3;if(c&&h&&Q>d){var f=E(p,n);if(u.active)u.startPosition=e.clone(u.endPosition,u.startPosition),u.endPosition=e.multiplyByScalar(u.motion,f,u.endPosition),u.endPosition=e.add(u.startPosition,u.endPosition,u.endPosition),u.motion=e.clone(e.ZERO,u.motion);else{var v=t.getLastMovement(r,i);if(!o(v)||b(v))return;u.motion.x=.5*(v.endPosition.x-v.startPosition.x),u.motion.y=.5*(v.endPosition.y-v.startPosition.y),u.startPosition=e.clone(v.startPosition,u.startPosition),u.endPosition=e.multiplyByScalar(u.motion,f,u.endPosition),u.endPosition=e.add(u.startPosition,u.endPosition,u.endPosition),u.active=!0}if(isNaN(u.endPosition.x)||isNaN(u.endPosition.y)||b(u))return u.active=!1,void 0;if(!t.isButtonDown(r,i)){var g=t.getStartMousePosition(r,i);a(s,g,u)}}else u.active=!1}function x(e,t,r,i,n,a){if(o(r)){var s=e._aggregator;c(r)||(J[0]=r,r=J);for(var l=r.length,u=0;l>u;++u){var h=r[u],d=o(h.eventType)?h.eventType:h,m=h.modifier,p=s.isMoving(d,m)&&s.getMovement(d,m),f=s.getStartMousePosition(d,m);e.enableInputs&&t&&(p?i(e,f,p):1>n&&T(s,d,m,n,i,e,a))}}}function P(e,t,r,i,n,a){var s=1;o(a)&&(s=d.clamp(Math.abs(a),.25,1));var l=e.minimumZoomDistance*s,u=e.maximumZoomDistance,c=n-l,h=i*c;h=d.clamp(h,e._minimumZoomRate,e._maximumZoomRate);var m=r.endPosition.y-r.startPosition.y,p=m/e._scene.canvas.clientHeight;p=Math.min(p,e.maximumMovementRatio);var f=h*p;f>0&&Math.abs(n-l)<1||0>f&&Math.abs(n-u)<1||(l>n-f?f=n-l-1:n-f>u&&(f=n-u),e._scene.camera.zoomIn(f))}function A(e,r,i){var n=e._scene,o=n.camera,a=o.getPickRay(i.startPosition,K).origin,s=o.getPickRay(i.endPosition,$).origin,l=o.position,u=t.subtract(a,l,et),c=t.subtract(s,l,tt),h=t.subtract(u,c,et),d=t.magnitude(h);d>0&&(t.normalize(h,h),o.move(h,d))}function M(e,t,r){o(r.distance)&&(r=r.distance);var i=e._scene,n=i.camera;P(e,t,r,e._zoomFactor,n.getMagnitude())}function D(t,r,i){if(o(i.angleAndHeight))return I(t,r,i.angleAndHeight),void 0;var n=t._scene,a=n.camera,s=n.canvas,l=s.clientWidth,u=s.clientHeight,c=rt;c.x=2/l*i.startPosition.x-1,c.y=2/u*(u-i.startPosition.y)-1,c=e.normalize(c,c);var h=it;h.x=2/l*i.endPosition.x-1,h.y=2/u*(u-i.endPosition.y)-1,h=e.normalize(h,h);var m=d.acosClamped(c.x);c.y<0&&(m=d.TWO_PI-m);var p=d.acosClamped(h.x);h.y<0&&(p=d.TWO_PI-p);var f=p-m;a.twistRight(f)}function I(e,t,r){var i=e._rotateFactor*e._rotateRateRangeAdjustment;i>e._maximumRotateRate&&(i=e._maximumRotateRate),i<e._minimumRotateRate&&(i=e._minimumRotateRate);var n=e._scene,o=n.camera,a=n.canvas,s=(r.endPosition.x-r.startPosition.x)/a.clientWidth;s=Math.min(s,e.maximumMovementRatio);var l=4*i*s*Math.PI;o.twistRight(l)}function R(e){var t=e._tweens;e._aggregator.anyButtonDown&&t.removeAll();var r=e._scene,i=r.camera;if(t.contains(e._tween)||(p.equals(p.IDENTITY,i.transform)?(x(e,e.enableTranslate,e.translateEventTypes,A,e.inertiaTranslate,"_lastInertiaTranslateMovement"),x(e,e.enableZoom,e.zoomEventTypes,M,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableRotate,e.tiltEventTypes,D,e.inertiaSpin,"_lastInertiaTiltMovement")):(x(e,e.enableRotate,e.translateEventTypes,D,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,M,e.inertiaZoom,"_lastInertiaZoomMovement"))),!(e._aggregator.anyButtonDown||o(e._lastInertiaZoomMovement)&&e._lastInertiaZoomMovement.active||o(e._lastInertiaTranslateMovement)&&e._lastInertiaTranslateMovement.active||t.contains(e._tween))){var n=i.createCorrectPositionTween(e.bounceAnimationTime);o(n)&&(e._tween=t.add(n))}t.update()}function O(r,i,n){if(t.equals(i,r._translateMousePosition)||(r._looking=!1),r._looking)return j(r,i,n),void 0;var a=r._scene,s=a.camera,l=e.clone(n.startPosition,ht),c=e.clone(n.endPosition,dt),h=s.getPickRay(l,nt),m=t.clone(t.ZERO,ut),p=t.UNIT_X;if(o(r._globe)&&s.position.z<r.minimumPickingTerrainHeight){var v=r._globe.pick(h,a,at);o(v)&&(m.x=v.x)}if(m.x>s.position.z){var g=l.y;l.y=c.y,c.y=g}var _=f.fromPointNormal(m,p,ct);h=s.getPickRay(l,nt);var y=u.rayPlane(h,_,at),C=s.getPickRay(c,ot),w=u.rayPlane(C,_,st);if(!o(y)||!o(w))return r._looking=!0,j(r,i,n),e.clone(i,r._translateMousePosition),void 0;var S=t.subtract(y,w,lt),E=S.x;S.x=S.y,S.y=S.z,S.z=E;var b=t.magnitude(S);b>d.EPSILON6&&(t.normalize(S,S),s.move(S,b))}function L(t,r,i){if(o(i.angleAndHeight)&&(i=i.angleAndHeight),e.equals(r,t._tiltCenterMousePosition)||(t._tiltCVOffMap=!1,t._looking=!1),t._looking)return j(t,r,i),void 0;var n=t._scene,a=n.camera,s=t._maxCoord,l=Math.abs(a.position.x)-s.x<0&&Math.abs(a.position.y)-s.y<0;t._tiltCVOffMap||!l||a.position.z>t.minimumPickingTerrainHeight?(t._tiltCVOffMap=!0,N(t,r,i)):B(t,r,i)}function N(r,i,n){var a=r._scene,s=a.camera,u=a.canvas,c=mt;c.x=u.clientWidth/2,c.y=u.clientHeight/2;var h,m=s.getPickRay(c,pt),f=t.UNIT_X,v=m.origin,g=m.direction,y=t.dot(f,g);if(Math.abs(y)>d.EPSILON6&&(h=-t.dot(f,v)/y),!o(h)||0>=h)return r._looking=!0,j(r,i,n),e.clone(i,r._tiltCenterMousePosition),void 0;var C=t.multiplyByScalar(g,h,ft);t.add(v,C,C);var w=a.mapProjection,S=w.ellipsoid;t.fromElements(C.y,C.z,C.x,C);var E=w.unproject(C,St);S.cartographicToCartesian(E,C);var b=_.eastNorthUpToFixedFrame(C,S,gt),T=r._globe,x=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var P=p.clone(s.transform,Et);s.setTransform(b),k(r,i,n,t.UNIT_Z),s.setTransform(P),r._globe=T,r._ellipsoid=x;var A=x.maximumRadius;r._rotateFactor=1/A,r._rotateRateRangeAdjustment=A}function B(r,i,n){var a,s,c=r._ellipsoid,h=r._scene,g=h.camera,y=t.UNIT_X;if(e.equals(i,r._tiltCenterMousePosition))a=t.clone(r._tiltCenter,ft);else{if(s=g.getPickRay(i,pt),o(r._globe)&&g.position.z<r.minimumPickingTerrainHeight&&(a=r._globe.pick(s,h,ft)),!o(a)){var C,w=s.origin,S=s.direction,E=t.dot(y,S);if(Math.abs(E)>d.EPSILON6&&(C=-t.dot(y,w)/E),!o(C)||0>=C)return r._looking=!0,j(r,i,n),e.clone(i,r._tiltCenterMousePosition),void 0;a=t.multiplyByScalar(S,C,ft),t.add(w,a,a)}e.clone(i,r._tiltCenterMousePosition),t.clone(a,r._tiltCenter)}var b=h.canvas,T=mt;T.x=b.clientWidth/2,T.y=r._tiltCenterMousePosition.y,s=g.getPickRay(T,pt);var x=t.clone(t.ZERO,yt);x.x=a.x;var P=f.fromPointNormal(x,y,Ct),A=u.rayPlane(s,P,vt),M=g._projection;c=M.ellipsoid,t.fromElements(a.y,a.z,a.x,a);var D=M.unproject(a,St);c.cartographicToCartesian(D,a);var I,R=_.eastNorthUpToFixedFrame(a,c,gt);o(A)?(t.fromElements(A.y,A.z,A.x,A),D=M.unproject(A,St),c.cartographicToCartesian(D,A),I=_.eastNorthUpToFixedFrame(A,c,_t)):I=R;var O=r._globe,L=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var N=t.UNIT_Z,B=p.clone(g.transform,Et);g.setTransform(R);var F=t.cross(t.UNIT_Z,t.normalize(g.position,wt),wt),z=t.dot(g.right,F);if(k(r,i,n,N,!1,!0),g.setTransform(I),0>z){n.startPosition.y>n.endPosition.y&&(N=void 0);var V=g.constrainedAxis;g.constrainedAxis=void 0,k(r,i,n,N,!0,!1),g.constrainedAxis=V}else k(r,i,n,N,!0,!1);if(o(g.constrainedAxis)){var U=t.cross(g.direction,g.constrainedAxis,Jt);t.equalsEpsilon(U,t.ZERO,d.EPSILON6)||(t.dot(U,g.right)<0&&t.negate(U,U),t.cross(U,g.direction,g.up),t.cross(g.direction,g.up,g.right),t.normalize(g.up,g.up),t.normalize(g.right,g.right))}g.setTransform(B),r._globe=O,r._ellipsoid=L;var W=L.maximumRadius;r._rotateFactor=1/W,r._rotateRateRangeAdjustment=W;var G=t.clone(g.positionWC,wt);if(X(r),!t.equals(g.positionWC,G)){g.setTransform(I),g.worldToCameraCoordinatesPoint(G,G);var H=t.magnitudeSquared(G);t.magnitudeSquared(g.position)>H&&(t.normalize(g.position,g.position),t.multiplyByScalar(g.position,Math.sqrt(H),g.position));var q=t.angleBetween(G,g.position),Y=t.cross(G,g.position,G);t.normalize(Y,Y);var Z=v.fromAxisAngle(Y,q,bt),Q=m.fromQuaternion(Z,Tt);m.multiplyByVector(Q,g.direction,g.direction),m.multiplyByVector(Q,g.up,g.up),t.cross(g.direction,g.up,g.right),t.cross(g.right,g.direction,g.up),g.setTransform(B)}}function F(e,r,i){o(i.distance)&&(i=i.distance);var n=e._scene,a=n.camera,s=n.canvas,l=xt;l.x=s.clientWidth/2,l.y=s.clientHeight/2;var u,c=a.getPickRay(l,Pt);o(e._globe)&&a.position.z<e.minimumPickingTerrainHeight&&(u=e._globe.pick(c,n,At));var h;if(o(u))h=t.distance(c.origin,u);else{var d=t.UNIT_X,m=c.origin,p=c.direction;h=-t.dot(d,m)/t.dot(d,p)}P(e,r,i,e._zoomFactor,h)}function z(e){var t=e._scene,r=t.camera;if(p.equals(p.IDENTITY,r.transform)){var i=e._tweens;if(e._aggregator.anyButtonDown&&i.removeAll(),x(e,e.enableTilt,e.tiltEventTypes,L,e.inertiaSpin,"_lastInertiaTiltMovement"),x(e,e.enableTranslate,e.translateEventTypes,O,e.inertiaTranslate,"_lastInertiaTranslateMovement"),x(e,e.enableZoom,e.zoomEventTypes,F,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableLook,e.lookEventTypes,j),!(e._aggregator.anyButtonDown||o(e._lastInertiaZoomMovement)&&e._lastInertiaZoomMovement.active||o(e._lastInertiaTranslateMovement)&&e._lastInertiaTranslateMovement.active||i.contains(e._tween))){var n=r.createCorrectPositionTween(e.bounceAnimationTime);o(n)&&(e._tween=i.add(n))}i.update()}else x(e,e.enableRotate,e.rotateEventTypes,k,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,W,e.inertiaZoom,"_lastInertiaZoomMovement")}function V(r,i,n){var a=r._scene,s=a.camera;if(!p.equals(s.transform,p.IDENTITY))return k(r,i,n),void 0;var u,c,h,d=r._ellipsoid.geodeticSurfaceNormal(s.position,Nt);if(e.equals(i,r._rotateMousePosition))return r._looking?j(r,i,n,d):r._rotating?k(r,i,n):(u=t.magnitude(r._rotateStartPosition),c=Ot,c.x=c.y=c.z=u,h=l.fromCartesian3(c,Lt),U(r,i,n,h)),void 0;r._looking=!1,r._rotating=!1;var m=r._ellipsoid.cartesianToCartographic(s.positionWC,It).height;if(o(r._globe)&&m<r.minimumPickingTerrainHeight){var f=s.getPickRay(n.startPosition,Dt),v=r._globe.pick(f,a,Rt);o(v)?(u=t.magnitude(v),c=Ot,c.x=c.y=c.z=u,h=l.fromCartesian3(c,Lt),U(r,i,n,h),t.clone(v,r._rotateStartPosition)):(r._looking=!0,j(r,i,n,d))}else o(s.pickEllipsoid(n.startPosition,r._ellipsoid,Mt))?(U(r,i,n,r._ellipsoid),t.clone(Mt,r._rotateStartPosition)):m>r.minimumTrackBallHeight?(r._rotating=!0,k(r,i,n)):(r._looking=!0,j(r,i,n,d));e.clone(i,r._rotateMousePosition)}function k(e,r,i,a,s,l){s=n(s,!1),l=n(l,!1);var u=e._scene,c=u.camera,h=u.canvas,d=c.constrainedAxis;o(a)&&(c.constrainedAxis=a);var m=t.magnitude(c.position),p=e._rotateFactor*(m-e._rotateRateRangeAdjustment);p>e._maximumRotateRate&&(p=e._maximumRotateRate),p<e._minimumRotateRate&&(p=e._minimumRotateRate);var f=(i.startPosition.x-i.endPosition.x)/h.clientWidth,v=(i.startPosition.y-i.endPosition.y)/h.clientHeight;f=Math.min(f,e.maximumMovementRatio),v=Math.min(v,e.maximumMovementRatio);var g=2*p*f*Math.PI,_=p*v*Math.PI;s||c.rotateRight(g),l||c.rotateUp(_),c.constrainedAxis=d}function U(r,i,n,a){var s=r._scene,u=s.camera,c=t.magnitude(u.position),h=e.clone(n.startPosition,Wt),m=e.clone(n.endPosition,Gt);if(c<a.maximumRadius){h.y=m.y,m.y=n.startPosition.y;var p=c+2*(a.maximumRadius-c),f=Ot;f.x=f.y=f.z=p,a=l.fromCartesian3(f,a)}var v=u.pickEllipsoid(h,a,Bt),g=u.pickEllipsoid(m,a,Ft);if(!o(v)||!o(g))return r._rotating=!0,k(r,i,n),void 0;if(v=u.worldToCameraCoordinates(v,v),g=u.worldToCameraCoordinates(g,g),o(u.constrainedAxis)){var _=u.constrainedAxis,y=t.mostOrthogonalAxis(_,zt);t.cross(y,_,y),t.normalize(y,y);var C=t.cross(_,y,Vt),w=t.magnitude(v),S=t.dot(_,v),E=Math.acos(S/w),b=t.multiplyByScalar(_,S,kt);t.subtract(v,b,b),t.normalize(b,b);var T=t.magnitude(g),x=t.dot(_,g),P=Math.acos(x/T),A=t.multiplyByScalar(_,x,Ut);t.subtract(g,A,A),t.normalize(A,A);var M=Math.acos(t.dot(b,y));t.dot(b,C)<0&&(M=d.TWO_PI-M);var D=Math.acos(t.dot(A,y));t.dot(A,C)<0&&(D=d.TWO_PI-D);var I,R=M-D;I=t.equalsEpsilon(_,u.position,d.EPSILON2)?u.right:t.cross(_,u.position,zt);var O,L=t.cross(_,I,zt),N=t.dot(L,t.subtract(v,_,Vt)),B=t.dot(L,t.subtract(g,_,Vt));O=N>0&&B>0?P-E:N>0&&0>=B?t.dot(u.position,_)>0?-E-P:E+P:E-P,u.rotateRight(R),u.rotateUp(O)}else{t.normalize(v,v),t.normalize(g,g);var F=t.dot(v,g),z=t.cross(v,g,zt);if(1>F&&!t.equalsEpsilon(z,t.ZERO,d.EPSILON14)){var V=Math.acos(F);u.rotate(z,V)}}}function W(e,r,i){o(i.distance)&&(i=i.distance);var n=e._ellipsoid,a=e._scene,s=a.camera,l=a.canvas,u=xt;u.x=l.clientWidth/2,u.y=l.clientHeight/2;var c,h=s.getPickRay(u,Pt),d=n.cartesianToCartographic(s.position).height;o(e._globe)&&d<e.minimumPickingTerrainHeight&&(c=e._globe.pick(h,a,At));var m;m=o(c)?t.distance(h.origin,c):d;var p=t.normalize(s.position,Ht);P(e,r,i,e._zoomFactor,m,t.dot(p,s.direction))}function G(t,r,i){var n=t._scene,a=n.camera;if(p.equals(a.transform,p.IDENTITY)){if(o(i.angleAndHeight)&&(i=i.angleAndHeight),e.equals(r,t._tiltCenterMousePosition)||(t._tiltOnEllipsoid=!1,t._looking=!1),t._looking){var s=t._ellipsoid.geodeticSurfaceNormal(a.position,rr);return j(t,r,i,s),void 0}var l=t._ellipsoid,u=l.cartesianToCartographic(a.position,tr);t._tiltOnEllipsoid||u.height>t.minimumCollisionTerrainHeight?(t._tiltOnEllipsoid=!0,H(t,r,i)):q(t,r,i)}}function H(r,i,n){var a=r._ellipsoid,s=r._scene,c=s.camera,h=.25*r.minimumZoomDistance,m=a.cartesianToCartographic(c.positionWC).height;if(!(m-h-1<d.EPSILON3&&n.endPosition.y-n.startPosition.y<0)){var f=s.canvas,v=qt;v.x=f.clientWidth/2,v.y=f.clientHeight/2;var y,C=c.getPickRay(v,jt),w=u.rayEllipsoid(C,a);if(o(w))y=g.getPoint(C,w.start,Yt);else{if(!(m>r.minimumTrackBallHeight)){r._looking=!0;var S=r._ellipsoid.geodeticSurfaceNormal(c.position,rr);return j(r,i,n,S),e.clone(i,r._tiltCenterMousePosition),void 0}var E=u.grazingAltitudeLocation(C,a);if(!o(E))return;var b=a.cartesianToCartographic(E,tr);b.height=0,y=a.cartographicToCartesian(b,Yt)}var T=_.eastNorthUpToFixedFrame(y,a,Zt),x=r._globe,P=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var A=p.clone(c.transform,Kt);c.setTransform(T),k(r,i,n,t.UNIT_Z),c.setTransform(A),r._globe=x,r._ellipsoid=P;var M=P.maximumRadius;r._rotateFactor=1/M,r._rotateRateRangeAdjustment=M}}function q(r,i,n){var a,s,c,h=r._ellipsoid,f=r._scene,y=f.camera;if(e.equals(i,r._tiltCenterMousePosition))a=t.clone(r._tiltCenter,Yt);else{if(s=y.getPickRay(i,jt),o(r._globe)&&(a=r._globe.pick(s,f,Yt)),!o(a)){if(c=u.rayEllipsoid(s,h),!o(c)){var C=h.cartesianToCartographic(y.position,tr);if(C.height<=r.minimumTrackBallHeight){r._looking=!0;var w=r._ellipsoid.geodeticSurfaceNormal(y.position,rr);j(r,i,n,w),e.clone(i,r._tiltCenterMousePosition)}return}a=g.getPoint(s,c.start,Yt)}e.clone(i,r._tiltCenterMousePosition),t.clone(a,r._tiltCenter)}var S=f.canvas,E=qt;E.x=S.clientWidth/2,E.y=r._tiltCenterMousePosition.y,s=y.getPickRay(E,jt);var b=t.magnitude(a),T=t.fromElements(b,b,b,Ot),x=l.fromCartesian3(T,Lt);if(c=u.rayEllipsoid(s,x),o(c)){var P=t.magnitude(s.origin)>b?c.start:c.stop,A=g.getPoint(s,P,Xt),M=_.eastNorthUpToFixedFrame(a,h,Zt),D=_.eastNorthUpToFixedFrame(A,x,Qt),I=r._globe,R=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var O=t.UNIT_Z,L=p.clone(y.transform,Kt);y.setTransform(M);var N=t.cross(A,y.positionWC,Jt),B=t.dot(y.rightWC,N);if(k(r,i,n,O,!1,!0),y.setTransform(D),0>B){n.startPosition.y>n.endPosition.y&&(O=void 0);var F=y.constrainedAxis;y.constrainedAxis=void 0,k(r,i,n,O,!0,!1),y.constrainedAxis=F}else k(r,i,n,O,!0,!1);if(o(y.constrainedAxis)){var z=t.cross(y.direction,y.constrainedAxis,Jt);t.equalsEpsilon(z,t.ZERO,d.EPSILON6)||(t.dot(z,y.right)<0&&t.negate(z,z),t.cross(z,y.direction,y.up),t.cross(y.direction,y.up,y.right),t.normalize(y.up,y.up),t.normalize(y.right,y.right))}y.setTransform(L),r._globe=I,r._ellipsoid=R;var V=R.maximumRadius;r._rotateFactor=1/V,r._rotateRateRangeAdjustment=V;var U=t.clone(y.positionWC,Jt);if(X(r),!t.equals(y.positionWC,U)){y.setTransform(D),y.worldToCameraCoordinatesPoint(U,U);var W=t.magnitudeSquared(U);t.magnitudeSquared(y.position)>W&&(t.normalize(y.position,y.position),t.multiplyByScalar(y.position,Math.sqrt(W),y.position));var G=t.angleBetween(U,y.position),H=t.cross(U,y.position,U);t.normalize(H,H);var q=v.fromAxisAngle(H,G,$t),Y=m.fromQuaternion(q,er);m.multiplyByVector(Y,y.direction,y.direction),m.multiplyByVector(Y,y.up,y.up),t.cross(y.direction,y.up,y.right),t.cross(y.right,y.direction,y.up),y.setTransform(L)}}}function j(e,r,i,a){var s=e._scene,l=s.camera,u=ir;u.x=i.startPosition.x,u.y=0;var c=nr;c.x=i.endPosition.x,c.y=0;var h=l.getPickRay(u,or).direction,m=l.getPickRay(c,ar).direction,p=0,f=t.dot(h,m);1>f&&(p=Math.acos(f)),p=i.startPosition.x>i.endPosition.x?-p:p;var v=e._horizontalRotationAxis;if(o(a)?l.look(a,-p):o(v)?l.look(v,-p):l.lookLeft(p),u.x=0,u.y=i.startPosition.y,c.x=0,c.y=i.endPosition.y,h=l.getPickRay(u,or).direction,m=l.getPickRay(c,ar).direction,p=0,f=t.dot(h,m),1>f&&(p=Math.acos(f)),p=i.startPosition.y>i.endPosition.y?-p:p,a=n(a,v),o(a)){var g=l.direction,_=t.negate(a,sr),y=t.equalsEpsilon(g,a,d.EPSILON2),C=t.equalsEpsilon(g,_,d.EPSILON2);if(y||C)(y&&0>p||C&&p>0)&&l.look(l.right,-p);else{f=t.dot(g,a);var w=d.acosClamped(f);p>0&&p>w&&(p=w-d.EPSILON4),f=t.dot(g,_),w=d.acosClamped(f),0>p&&-p>w&&(p=-w+d.EPSILON4);var S=t.cross(a,g,lr);l.look(S,p)}}else l.lookUp(p)}function Y(e){x(e,e.enableRotate,e.rotateEventTypes,V,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,W,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableTilt,e.tiltEventTypes,G,e.inertiaSpin,"_lastInertiaTiltMovement"),x(e,e.enableLook,e.lookEventTypes,j)}function X(e){var t=e._scene,r=t.mode,i=e._globe;if(o(i)&&r!==w.SCENE2D&&r!==w.MORPHING){var n=t.camera,a=e._ellipsoid,s=t.mapProjection,l=ur;if(r===w.SCENE3D?a.cartesianToCartographic(n.position,l):s.unproject(n.position,l),!(l.height>e.minimumCollisionTerrainHeight)){var u=i.getHeight(l);o(u)&&(u+=e.minimumZoomDistance,l.height>=u||(l.height=u,r===w.SCENE3D?a.cartographicToCartesian(l,n.position):s.project(l,n.position)))}}}var Z=function(r){this.enableInputs=!0,this.enableTranslate=!0,this.enableZoom=!0,this.enableRotate=!0,this.enableTilt=!0,this.enableLook=!0,this.inertiaSpin=.9,this.inertiaTranslate=.9,this.inertiaZoom=.8,this.maximumMovementRatio=.1,this.bounceAnimationTime=3,this.minimumZoomDistance=20,this.maximumZoomDistance=Number.POSITIVE_INFINITY,this.translateEventTypes=C.LEFT_DRAG,this.zoomEventTypes=[C.RIGHT_DRAG,C.WHEEL,C.PINCH],this.rotateEventTypes=C.LEFT_DRAG,this.tiltEventTypes=[C.MIDDLE_DRAG,C.PINCH,{eventType:C.LEFT_DRAG,modifier:h.CTRL}],this.lookEventTypes={eventType:C.LEFT_DRAG,modifier:h.SHIFT},this.minimumPickingTerrainHeight=15e4,this.minimumCollisionTerrainHeight=1e4,this.minimumTrackBallHeight=75e5,this._scene=r,this._globe=void 0,this._ellipsoid=void 0,this._aggregator=new y(r.canvas),this._lastInertiaSpinMovement=void 0,this._lastInertiaZoomMovement=void 0,this._lastInertiaTranslateMovement=void 0,this._lastInertiaWheelZoomMovement=void 0,this._lastInertiaTiltMovement=void 0,this._tweens=new S,this._tween=void 0,this._horizontalRotationAxis=void 0,this._tiltCenterMousePosition=new e(-1,-1),this._tiltCenter=new t,this._rotateMousePosition=new e(-1,-1),this._rotateStartPosition=new t,this._tiltCVOffMap=!1,this._looking=!1,this._rotating=!1;
var n=r.mapProjection;this._maxCoord=n.project(new i(Math.PI,d.PI_OVER_TWO)),this._zoomFactor=5,this._rotateFactor=void 0,this._rotateRateRangeAdjustment=void 0,this._maximumRotateRate=1.77,this._minimumRotateRate=2e-4,this._translateFactor=1,this._minimumZoomRate=20,this._maximumZoomRate=5906376272e3},Q=.4,J=[],K=new g,$=new g,et=new t,tt=new t,rt=new e,it=new e,nt=new g,ot=new g,at=new t,st=new t,lt=new t,ut=new t,ct=new f(t.ZERO,0),ht=new e,dt=new e,mt=new e,pt=new g,ft=new t,vt=new t,gt=new p,_t=new p,yt=new t,Ct=new f(t.ZERO,0),wt=new t,St=new i,Et=new p,bt=new v,Tt=new m,xt=new e,Pt=new g,At=new t,Mt=new t,Dt=new g,It=new i,Rt=new t,Ot=new t,Lt=new l,Nt=new t,Bt=r.clone(r.UNIT_W),Ft=r.clone(r.UNIT_W),zt=new t,Vt=new t,kt=new t,Ut=new t,Wt=new e,Gt=new e,Ht=new t,qt=new e,jt=new g,Yt=new t,Xt=new t,Zt=new p,Qt=new p,Jt=new t,Kt=new p,$t=new v,er=new m,tr=new i,rr=new t,ir=new e,nr=new e,or=new g,ar=new g,sr=new t,lr=new t,ur=new i;return Z.prototype.update=function(){p.equals(this._scene.camera.transform,p.IDENTITY)?(this._globe=this._scene.globe,this._ellipsoid=o(this._globe)?this._globe.ellipsoid:this._scene.mapProjection.ellipsoid):(this._globe=void 0,this._ellipsoid=l.UNIT_SPHERE);var e=this._ellipsoid.maximumRadius;this._rotateFactor=1/e,this._rotateRateRangeAdjustment=e;var r=this._scene,i=r.mode;i===w.SCENE2D?R(this):i===w.COLUMBUS_VIEW?(this._horizontalRotationAxis=t.UNIT_Z,z(this)):i===w.SCENE3D&&(this._horizontalRotationAxis=void 0,Y(this)),X(this),this._aggregator.reset()},Z.prototype.isDestroyed=function(){return!1},Z.prototype.destroy=function(){return this._tweens.removeAll(),this._spinHandler=this._spinHandler&&this._spinHandler.destroy(),this._translateHandler=this._translateHandler&&this._translateHandler.destroy(),this._lookHandler=this._lookHandler&&this._lookHandler.destroy(),this._rotateHandler=this._rotateHandler&&this._rotateHandler.destroy(),this._zoomHandler=this._zoomHandler&&this._zoomHandler.destroy(),this._zoomWheelHandler=this._zoomWheelHandler&&this._zoomWheelHandler.destroy(),this._pinchHandler=this._pinchHandler&&this._pinchHandler.destroy(),a(this)},Z}),r("Shaders/PostProcessFilters/AdditiveBlend",[],function(){"use strict";return"uniform sampler2D u_texture0;\nuniform sampler2D u_texture1;\nuniform vec2 u_center;\nuniform float u_radius;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 color0 = texture2D(u_texture0, v_textureCoordinates);\nvec4 color1 = texture2D(u_texture1, v_textureCoordinates);\nfloat x = length(gl_FragCoord.xy - u_center) / u_radius;\nfloat t = smoothstep(0.5, 0.8, x);\ngl_FragColor = mix(color0 + color1, color0, t);\n}\n"}),r("Shaders/PostProcessFilters/BrightPass",[],function(){"use strict";return"uniform sampler2D u_texture;\nuniform float u_avgLuminance;\nuniform float u_threshold;\nuniform float u_offset;\nvarying vec2 v_textureCoordinates;\nfloat key(float avg)\n{\nfloat guess = 1.5 - (1.5 / (avg * 0.1 + 1.0));\nreturn max(0.0, guess) + 0.1;\n}\nvoid main()\n{\nvec4 color = texture2D(u_texture, v_textureCoordinates);\nvec3 xyz = czm_RGBToXYZ(color.rgb);\nfloat luminance = xyz.r;\nfloat scaledLum = key(u_avgLuminance) * luminance / u_avgLuminance;\nfloat brightLum = max(scaledLum - u_threshold, 0.0);\nfloat brightness = brightLum / (u_offset + brightLum);\nxyz.r = brightness;\ngl_FragColor = vec4(czm_XYZToRGB(xyz), 1.0);\n}\n"}),r("Shaders/PostProcessFilters/GaussianBlur1D",[],function(){"use strict";return"#define SAMPLES 8\nuniform float delta;\nuniform float sigma;\nuniform float direction;\nuniform sampler2D u_texture;\nuniform vec2 u_step;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec2 st = v_textureCoordinates;\nvec2 dir = vec2(1.0 - direction, direction);\nvec3 g;\ng.x = 1.0 / (sqrt(czm_twoPi) * sigma);\ng.y = exp((-0.5 * delta * delta) / (sigma * sigma));\ng.z = g.y * g.y;\nvec4 result = texture2D(u_texture, st) * g.x;\nfor (int i = 1; i < SAMPLES; ++i)\n{\ng.xy *= g.yz;\nvec2 offset = float(i) * dir * u_step;\nresult += texture2D(u_texture, st - offset) * g.x;\nresult += texture2D(u_texture, st + offset) * g.x;\n}\ngl_FragColor = result;\n}\n"}),r("Shaders/PostProcessFilters/PassThrough",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Scene/SunPostProcess",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian4","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/Transforms","../Renderer/ClearCommand","../Renderer/PassState","../Renderer/PixelDatatype","../Renderer/RenderbufferFormat","../Shaders/PostProcessFilters/AdditiveBlend","../Shaders/PostProcessFilters/BrightPass","../Shaders/PostProcessFilters/GaussianBlur1D","../Shaders/PostProcessFilters/PassThrough"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";var y=function(){this._fbo=void 0,this._downSampleFBO1=void 0,this._downSampleFBO2=void 0,this._clearFBO1Command=void 0,this._clearFBO2Command=void 0,this._downSampleCommand=void 0,this._brightPassCommand=void 0,this._blurXCommand=void 0,this._blurYCommand=void 0,this._blendCommand=void 0,this._fullScreenCommand=void 0,this._downSamplePassState=new d,this._downSamplePassState.scissorTest={enable:!0,rectangle:new e},this._upSamplePassState=new d,this._upSamplePassState.scissorTest={enabled:!0,rectangle:new e},this._uCenter=new t,this._uRadius=void 0,this._blurStep=new t};y.prototype.clear=function(e,t){var r=this._clearFBO1Command;i.clone(n(t,i.BLACK),r.color),r.execute(e),r=this._clearFBO2Command,i.clone(n(t,i.BLACK),r.color),r.execute(e)},y.prototype.execute=function(e,t){this._downSampleCommand.execute(e,this._downSamplePassState),this._brightPassCommand.execute(e,this._downSamplePassState),this._blurXCommand.execute(e,this._downSamplePassState),this._blurYCommand.execute(e,this._downSamplePassState),this._fullScreenCommand.framebuffer=t,this._blendCommand.framebuffer=t,this._fullScreenCommand.execute(e),this._blendCommand.execute(e,this._upSamplePassState)};var C=new e,w=new e,S=new r,E=new t,b=new t,T=new l;return y.prototype.update=function(e){var r=e.drawingBufferWidth,n=e.drawingBufferHeight,a=this;if(!o(this._downSampleCommand)){this._clearFBO1Command=new h({color:new i}),this._clearFBO2Command=new h({color:new i});var d,y={};this._downSampleCommand=e.createViewportQuadCommand(_,{renderState:d,uniformMap:y,owner:this}),y={u_avgLuminance:function(){return.5},u_threshold:function(){return.25},u_offset:function(){return.1}},this._brightPassCommand=e.createViewportQuadCommand(v,{renderState:d,uniformMap:y,owner:this});var x=1,P=2;y={delta:function(){return x},sigma:function(){return P},direction:function(){return 0}},this._blurXCommand=e.createViewportQuadCommand(g,{renderState:d,uniformMap:y,owner:this}),y={delta:function(){return x},sigma:function(){return P},direction:function(){return 1}},this._blurYCommand=e.createViewportQuadCommand(g,{renderState:d,uniformMap:y,owner:this}),y={u_center:function(){return a._uCenter},u_radius:function(){return a._uRadius}},this._blendCommand=e.createViewportQuadCommand(f,{renderState:d,uniformMap:y,owner:this}),y={},this._fullScreenCommand=e.createViewportQuadCommand(_,{renderState:d,uniformMap:y,owner:this})}var A=Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))-2),M=Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))-2),D=Math.max(A,M),I=C;I.width=r,I.height=n;var R=w;R.width=D,R.height=D;var O=this._fbo,L=o(O)&&O.getColorTexture(0)||void 0;if(!o(L)||L.width!==r||L.height!==n){O=O&&O.destroy(),this._downSampleFBO1=this._downSampleFBO1&&this._downSampleFBO1.destroy(),this._downSampleFBO2=this._downSampleFBO2&&this._downSampleFBO2.destroy(),this._blurStep.x=this._blurStep.y=1/D;var N=[e.createTexture2D({width:r,height:n})];O=this._fbo=e.depthTexture?e.createFramebuffer({colorTextures:N,depthTexture:e.createTexture2D({width:r,height:n,pixelFormat:u.DEPTH_COMPONENT,pixelDatatype:m.UNSIGNED_SHORT})}):e.createFramebuffer({colorTextures:N,depthRenderbuffer:e.createRenderbuffer({format:p.DEPTH_COMPONENT16})}),this._downSampleFBO1=e.createFramebuffer({colorTextures:[e.createTexture2D({width:D,height:D})]}),this._downSampleFBO2=e.createFramebuffer({colorTextures:[e.createTexture2D({width:D,height:D})]}),this._clearFBO1Command.framebuffer=this._downSampleFBO1,this._clearFBO2Command.framebuffer=this._downSampleFBO2,this._downSampleCommand.framebuffer=this._downSampleFBO1,this._brightPassCommand.framebuffer=this._downSampleFBO2,this._blurXCommand.framebuffer=this._downSampleFBO1,this._blurYCommand.framebuffer=this._downSampleFBO2;var B=e.createRenderState({viewport:R}),F=e.createRenderState();this._downSampleCommand.uniformMap.u_texture=function(){return O.getColorTexture(0)},this._downSampleCommand.renderState=B,this._brightPassCommand.uniformMap.u_texture=function(){return a._downSampleFBO1.getColorTexture(0)},this._brightPassCommand.renderState=B,this._blurXCommand.uniformMap.u_texture=function(){return a._downSampleFBO2.getColorTexture(0)},this._blurXCommand.uniformMap.u_step=function(){return a._blurStep},this._blurXCommand.renderState=B,this._blurYCommand.uniformMap.u_texture=function(){return a._downSampleFBO1.getColorTexture(0)},this._blurYCommand.uniformMap.u_step=function(){return a._blurStep},this._blurYCommand.renderState=B,this._blendCommand.uniformMap.u_texture0=function(){return O.getColorTexture(0)},this._blendCommand.uniformMap.u_texture1=function(){return a._downSampleFBO2.getColorTexture(0)},this._blendCommand.renderState=F,this._fullScreenCommand.uniformMap.u_texture=function(){return O.getColorTexture(0)},this._fullScreenCommand.renderState=F}var z=e.uniformState,V=z.sunPositionWC,k=z.view,U=z.viewProjection,W=z.projection,G=l.computeViewportTransformation(I,0,1,T),H=l.multiplyByPoint(k,V,S),q=c.pointToGLWindowCoordinates(U,G,V,E);H.x+=s.SOLAR_RADIUS;var j=c.pointToGLWindowCoordinates(W,G,H,H),Y=2*30*t.magnitude(t.subtract(j,q,j)),X=b;X.x=Y,X.y=Y;var Z=this._upSamplePassState.scissorTest.rectangle;return Z.x=Math.max(q.x-.5*X.x,0),Z.y=Math.max(q.y-.5*X.y,0),Z.width=Math.min(X.x,r),Z.height=Math.min(X.y,n),this._uCenter=t.clone(q,this._uCenter),this._uRadius=.5*Math.max(X.x,X.y),G=l.computeViewportTransformation(R,0,1,T),q=c.pointToGLWindowCoordinates(U,G,V,E),X.x*=A/r,X.y*=M/n,Z=this._downSamplePassState.scissorTest.rectangle,Z.x=Math.max(q.x-.5*X.x,0),Z.y=Math.max(q.y-.5*X.y,0),Z.width=Math.min(X.x,r),Z.height=Math.min(X.y,n),this._downSamplePassState.context=e,this._upSamplePassState.context=e,this._fbo},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){return this._fbo=this._fbo&&this._fbo.destroy(),this._downSampleFBO1=this._downSampleFBO1&&this._downSampleFBO1.destroy(),this._downSampleFBO2=this._downSampleFBO2&&this._downSampleFBO2.destroy(),this._downSampleCommand=this._downSampleCommand&&this._downSampleCommand.shaderProgram&&this._downSampleCommand.shaderProgram.destroy(),this._brightPassCommand=this._brightPassCommand&&this._brightPassCommand.shaderProgram&&this._brightPassCommand.shaderProgram.destroy(),this._blurXCommand=this._blurXCommand&&this._blurXCommand.shaderProgram&&this._blurXCommand.shaderProgram.destroy(),this._blurYCommand=this._blurYCommand&&this._blurYCommand.shaderProgram&&this._blurYCommand.shaderProgram.destroy(),this._blendCommand=this._blendCommand&&this._blendCommand.shaderProgram&&this._blendCommand.shaderProgram.destroy(),this._fullScreenCommand=this._fullScreenCommand&&this._fullScreenCommand.shaderProgram&&this._fullScreenCommand.shaderProgram.destroy(),a(this)},y}),r("Scene/Scene",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipsoidGeometry","../Core/Event","../Core/GeographicProjection","../Core/GeometryInstance","../Core/GeometryPipeline","../Core/Intersect","../Core/Interval","../Core/JulianDate","../Core/Math","../Core/Matrix4","../Core/mergeSort","../Core/Occluder","../Core/ShowGeometryInstanceAttribute","../Renderer/ClearCommand","../Renderer/Context","../Renderer/PassState","./Camera","./CreditDisplay","./CullingVolume","./FrameState","./FrustumCommands","./FXAA","./OIT","./OrthographicFrustum","./Pass","./PerformanceDisplay","./PerInstanceColorAppearance","./PerspectiveFrustum","./PerspectiveOffCenterFrustum","./Primitive","./PrimitiveCollection","./SceneMode","./SceneTransforms","./SceneTransitioner","./ScreenSpaceCameraController","./SunPostProcess","./TweenCollection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X){"use strict";function Z(e){var t=e.globe;if(e._mode===G.SCENE3D&&l(t)){var r=t.ellipsoid;return _t.radius=r.minimumRadius,gt=E.fromBoundingSphere(_t,e._camera.positionWC,gt)}return void 0}function Q(e){e.render=!1,e.pick=!1}function J(e,t,r){var i=e._camera,n=e._frameState;n.mode=e._mode,n.morphTime=e.morphTime,n.mapProjection=e.mapProjection,n.frameNumber=t,n.time=y.clone(r,n.time),n.camera=i,n.cullingVolume=i.frustum.computeCullingVolume(i.positionWC,i.directionWC,i.upWC),n.occluder=Z(e),n.afterRender.length=0,Q(n.passes)}function K(e,t,r,i,n){n.length=i;for(var o=0;i>o;++o){var a=Math.max(e,Math.pow(r,o)*e),s=Math.min(t,r*a),u=n[o];l(u)?(u.near=a,u.far=s):u=n[o]=new R(a,s)}}function $(e,t,r){e.debugShowFrustums&&(t.debugOverlappingFrustums=0);for(var i=e._frustumCommandsList,n=i.length,o=0;n>o;++o){var a=i[o],s=a.near,u=a.far;if(!(r.start>u)){if(r.stop<s)break;if(t.pass===B.OPAQUE||t instanceof T?a.opaqueCommands[a.opaqueIndex++]=t:t.pass===B.TRANSLUCENT&&(a.translucentCommands[a.translucentIndex++]=t),e.debugShowFrustums&&(t.debugOverlappingFrustums|=1<<o),t.executeInClosestFrustum)break}}if(e.debugShowFrustums){var c=e._debugFrustumStatistics.commandsInFrustums;c[t.debugOverlappingFrustums]=l(c[t.debugOverlappingFrustums])?c[t.debugOverlappingFrustums]+1:1,++e._debugFrustumStatistics.totalCommands}}function et(e){var r=e._commandList,i=e._overlayCommandList,n=e._frameState.cullingVolume,o=e._camera,a=o.directionWC,s=o.positionWC;e.debugShowFrustums&&(e._debugFrustumStatistics={totalCommands:0,commandsInFrustums:{}});for(var u=e._frustumCommandsList,c=u.length,h=0;c>h;++h)u[h].opaqueIndex=0,u[h].translucentIndex=0;var d,m=Number.MAX_VALUE,p=Number.MIN_VALUE,f=!1;e._frameState.mode===G.SCENE3D&&(d=e._frameState.occluder);for(var v=yt.planes,_=0;5>_;++_)v[_]=n.planes[_];n=yt;for(var y=r.length,C=0;y>C;++C){var w=r[C],S=w.pass;if(S===B.OVERLAY)i.push(w);else{var E=w.boundingVolume;if(l(E)){if(w.cull&&(n.computeVisibility(E)===g.OUTSIDE||l(d)&&!d.isBoundingSphereVisible(E)))continue;Ct=t.computePlaneDistances(E,s,a,Ct),m=Math.min(m,Ct.start),p=Math.max(p,Ct.stop)}else Ct.start=o.frustum.near,Ct.stop=o.frustum.far,f=!(w instanceof T);$(e,w,Ct)}}f?(m=o.frustum.near,p=o.frustum.far):(m=Math.min(Math.max(m,o.frustum.near),o.frustum.far),p=Math.max(Math.min(p,o.frustum.far),m));var b=e.farToNearRatio,x=Math.ceil(Math.log(p/m)/Math.log(b));m!==Number.MAX_VALUE&&(x!==c||0!==u.length&&(m<u[0].near||p>u[c-1].far))&&(K(m,p,b,x,u),et(e))}function tt(e){var t={},r=e.vertexAttributes;for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i].index);return t}function rt(e,t,r){var i=t.context,o=s(r,e.shaderProgram),a=o.fragmentShaderSource,u=a.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_Debug_main()"),c="void main() \n{ \n    czm_Debug_main(); \n";if(t.debugShowCommands){l(e._debugColor)||(e._debugColor=n.fromRandom());var h=e._debugColor;c+="    gl_FragColor.rgb *= vec3("+h.red+", "+h.green+", "+h.blue+"); \n"}if(t.debugShowFrustums){var d=1&e.debugOverlappingFrustums?"1.0":"0.0",m=2&e.debugOverlappingFrustums?"1.0":"0.0",p=4&e.debugOverlappingFrustums?"1.0":"0.0";c+="    gl_FragColor.rgb *= vec3("+d+", "+m+", "+p+"); \n"}c+="}";var f=u+"\n"+c,v=tt(o);return i.createShaderProgram(o.vertexShaderSource,f,v)}function it(e,t,r,i,n){if(l(e.shaderProgram)||l(n)){var o=rt(e,t,n);e.execute(t.context,r,i,o),o.destroy()}}function nt(e,t,r,n,a,s,u){if((!l(t.debugCommandFilter)||t.debugCommandFilter(e))&&(t.debugShowCommands||t.debugShowFrustums?it(e,t,n,a,s):e.execute(r,n,a,s),e.debugShowBoundingVolume&&l(e.boundingVolume))){l(t._debugSphere)&&t._debugSphere.destroy();var c=t._frameState,h=e.boundingVolume,m=h.radius,p=h.center,g=v.toWireframe(d.createGeometry(new d({radii:new i(m,m,m),vertexFormat:z.FLAT_VERTEX_FORMAT})));if(c.mode!==G.SCENE3D){p=w.multiplyByPoint(wt,p,p);var _=c.mapProjection,y=_.unproject(p);p=_.ellipsoid.cartographicToCartesian(y)}t._debugSphere=new U({geometryInstances:new f({geometry:g,modelMatrix:w.multiplyByTranslation(w.IDENTITY,p,new w),attributes:{color:new o(1,0,0,1)}}),appearance:new z({flat:!0,translucent:!1}),asynchronous:!1});var C=[];t._debugSphere.update(r,c,C);var S;l(u)&&(S=n.framebuffer,n.framebuffer=u),C[0].execute(r,n),l(S)&&(n.framebuffer=S)}}function ot(e,t){if(l(e)){for(var r=t.mode===G.SCENE3D?t.occluder:void 0,i=t.cullingVolume,n=yt.planes,o=0;5>o;++o)n[o]=i.planes[o];i=yt;var a=e.boundingVolume;return l(e)&&(!l(e.boundingVolume)||!e.cull||i.computeVisibility(a)!==g.OUTSIDE&&(!l(r)||r.isBoundingSphereVisible(a)))}}function at(e,r,i){return t.distanceSquaredTo(r.boundingVolume,i)-t.distanceSquaredTo(e.boundingVolume,i)}function st(e,t,r,i){var n=e.context;S(i,at,e._camera.positionWC);for(var o=i.length,a=0;o>a;++a)t(i[a],e,n,r)}function lt(e,t,r,i){var o,a=e._frameState,s=e._camera,u=e.context,c=u.uniformState;o=l(s.frustum.fov)?s.frustum.clone(St):l(s.frustum.infiniteProjectionMatrix)?s.frustum.clone(Et):s.frustum.clone(bt),l(e.sun)&&e.sunBloom!==e._sunBloom?(e.sunBloom?e._sunPostProcess=new Y:l(e._sunPostProcess)&&(e._sunPostProcess=e._sunPostProcess.destroy()),e._sunBloom=e.sunBloom):!l(e.sun)&&l(e._sunPostProcess)&&(e._sunPostProcess=e._sunPostProcess.destroy(),e._sunBloom=!1);var h=a.passes.render&&l(e.skyBox)?e.skyBox.update(u,a):void 0,d=a.passes.render&&l(e.skyAtmosphere)?e.skyAtmosphere.update(u,a):void 0,m=a.passes.render&&l(e.sun)?e.sun.update(e):void 0,p=ot(m,a),f=e._clearColorCommand;n.clone(r,f.color),f.execute(u,t);var v,g=!1,_=e._frustumCommandsList,y=_.length;for(v=0;y>v;++v)if(_[v].translucentIndex>0){g=!0;break}var C=!i&&g&&l(e._oit)&&e._oit.isSupported();C&&(e._oit.update(u),e._oit.clear(u,t,r),C=C&&e._oit.isSupported());var w=!i&&(e.fxaa||C&&e.fxaaOrderIndependentTranslucency);w&&(e._fxaa.update(u),e._fxaa.clear(u,t,r));var S=t.framebuffer;C?S=e._oit.getColorFramebuffer():w&&(S=e._fxaa.getColorFramebuffer()),t.framebuffer=p&&e.sunBloom?e._sunPostProcess.update(u):S,o.near=s.frustum.near,o.far=s.frustum.far,c.updateFrustum(o),l(h)&&nt(h,e,u,t),l(d)&&nt(d,e,u,t),l(m)&&p&&(m.execute(u,t),e.sunBloom&&(e._sunPostProcess.execute(u,S),t.framebuffer=S));var E,b=e._depthClearCommand;for(C?(l(e._executeOITFunction)||(e._executeOITFunction=function(e,t,r,i){e._oit.executeCommands(e,t,r,i)}),E=e._executeOITFunction):E=st,v=0;y>v;++v){var T=y-v-1,x=_[T];o.near=x.near,o.far=x.far,0!==T&&(o.near*=.99),c.updateFrustum(o),b.execute(u,t);for(var P=x.opaqueCommands,A=x.opaqueIndex,M=0;A>M;++M)nt(P[M],e,u,t);o.near=x.near,c.updateFrustum(o),P=x.translucentCommands,P.length=x.translucentIndex,E(e,nt,t,P)}C&&(t.framebuffer=w?e._fxaa.getColorFramebuffer():void 0,e._oit.execute(u,t)),w&&(t.framebuffer=void 0,e._fxaa.execute(u,t))}function ut(e,t){for(var r=e.context,i=e._overlayCommandList,n=i.length,o=0;n>o;++o)i[o].execute(r,t)}function ct(e){var t=e.context,r=e._frameState,i=e._commandList;e._globe&&e._globe.update(t,r,i),e._primitives.update(t,r,i),l(e.moon)&&e.moon.update(t,r,i)}function ht(e){for(var t=e.afterRender,r=0,i=t.length;i>r;++r)t[r]();t.length=0}function dt(e,t){l(t)||(t=y.now()),e._preRender.raiseEvent(e,t);var r=e.context.uniformState,i=e._frameState,o=C.incrementWrap(i.frameNumber,15e6,1);J(e,o,t),i.passes.render=!0,i.creditDisplay.beginFrame();var a=e.context;r.update(a,i),e._commandList.length=0,e._overlayCommandList.length=0,ct(e),et(e);var u=e._passState;if(lt(e,u,s(e.backgroundColor,n.BLACK)),ut(e,u),i.creditDisplay.endFrame(),e.debugShowFramesPerSecond){if(!l(e._performanceDisplay)){var c=document.createElement("div");c.style.position="absolute",c.style.top="10px",c.style.left="10px";var h=e._canvas.parentNode;h.appendChild(c);var d=new F({container:c});e._performanceDisplay=d,e._performanceContainer=c}e._performanceDisplay.update()}else l(e._performanceDisplay)&&(e._performanceDisplay=e._performanceDisplay&&e._performanceDisplay.destroy(),e._performanceContainer.parentNode.removeChild(e._performanceContainer));a.endFrame(),ht(i),e._postRender.raiseEvent(e,t)}function mt(e,t){var r=e._camera,n=r.frustum,o=e.drawingBufferWidth,a=e.drawingBufferHeight,s=2/o*t.x-1;s*=.5*(n.right-n.left);var l=2/a*(a-t.y)-1;l*=.5*(n.top-n.bottom);var u=i.clone(r.position,xt);i.multiplyByScalar(r.right,s,Pt),i.add(Pt,u,u),i.multiplyByScalar(r.up,l,Pt),i.add(Pt,u,u),i.fromElements(u.z,u.x,u.y,u),At.x=o,At.y=a;var c=n.getPixelSize(At,void 0,Mt),h=Tt;return h.right=.5*c.x,h.left=-h.right,h.top=.5*c.y,h.bottom=-h.top,h.near=n.near,h.far=n.far,h.computeCullingVolume(u,r.directionWC,r.upWC)}function pt(e,t,r,i){var n=e._camera,o=n.frustum,a=o.near,s=e.drawingBufferWidth,l=e.drawingBufferHeight,u=Math.tan(.5*o.fovy),c=o.aspectRatio*u,h=2/s*t.x-1,d=2/l*(l-t.y)-1,m=h*a*c,p=d*a*u;At.x=s,At.y=l;var f=o.getPixelSize(At,void 0,Mt),v=.5*f.x*r,g=.5*f.y*i,_=Dt;return _.top=p+g,_.bottom=p-g,_.right=m+v,_.left=m-v,_.near=a,_.far=o.far,_.computeCullingVolume(n.positionWC,n.directionWC,n.upWC)}function ft(e,t,r,i){return e._mode===G.SCENE2D?mt(e,t,r,i):pt(e,t,r,i)}var vt=function(e){e=s(e,s.EMPTY_OBJECT);var t=e.canvas,r=e.contextOptions,i=e.creditContainer,o=new x(t,r);l(i)||(i=document.createElement("div"),i.style.position="absolute",i.style.bottom="0",i.style["text-shadow"]="0px 0px 2px #000000",i.style.color="#ffffff",i.style["font-size"]="10px",i.style["padding-right"]="5px",t.parentNode.appendChild(i)),this._id=a(),this._frameState=new I(new M(i)),this._frameState.scene3DOnly=s(e.scene3DOnly,!1),this._passState=new P(o),this._canvas=t,this._context=o,this._globe=void 0,this._primitives=new W,this._pickFramebuffer=void 0,this._tweens=new X,this._shaderFrameCount=0,this._sunPostProcess=void 0,this._commandList=[],this._frustumCommandsList=[],this._overlayCommandList=[],this._oit=s(e.orderIndependentTranslucency,!0)?new L(o):void 0,this._executeOITFunction=void 0,this._fxaa=new O,this._clearColorCommand=new T({color:new n,owner:this}),this._depthClearCommand=new T({depth:1,owner:this}),this._transitioner=new q(this),this._renderError=new m,this._preRender=new m,this._postRender=new m,this.rethrowRenderErrors=!1,this.completeMorphOnUserInput=!0,this.morphStart=new m,this.morphComplete=new m,this.skyBox=void 0,this.skyAtmosphere=void 0,this.sun=void 0,this.sunBloom=!0,this._sunBloom=void 0,this.moon=void 0,this.backgroundColor=n.clone(n.BLACK),this._mode=G.SCENE3D,this._mapProjection=s(e.mapProjection,new p),this.morphTime=1,this.farToNearRatio=1e3,this.debugCommandFilter=void 0,this.debugShowCommands=!1,this.debugShowFrustums=!1,this._debugFrustumStatistics=void 0,this.debugShowFramesPerSecond=!1,this.fxaaOrderIndependentTranslucency=!0,this.fxaa=!1,this._performanceDisplay=void 0,this._debugSphere=void 0;var u=new A(this);this._camera=u,this._screenSpaceCameraController=new j(this);var c=u.frustum.near,h=u.frustum.far,d=Math.ceil(Math.log(h/c)/Math.log(this.farToNearRatio));K(c,h,this.farToNearRatio,d,this._frustumCommandsList),J(this,0,y.now()),this.initializeFrame()};u(vt.prototype,{canvas:{get:function(){return this._canvas}},drawingBufferHeight:{get:function(){return this._context.drawingBufferHeight}},drawingBufferWidth:{get:function(){return this._context.drawingBufferWidth}},maximumAliasedLineWidth:{get:function(){return this._context.maximumAliasedLineWidth}},globe:{get:function(){return this._globe},set:function(e){this._globe=this._globe&&this._globe.destroy(),this._globe=e}},primitives:{get:function(){return this._primitives}},camera:{get:function(){return this._camera}},screenSpaceCameraController:{get:function(){return this._screenSpaceCameraController}},mapProjection:{get:function(){return this._mapProjection}},frameState:{get:function(){return this._frameState}},tweens:{get:function(){return this._tweens}},imageryLayers:{get:function(){return this.globe.imageryLayers}},terrainProvider:{get:function(){return this.globe.terrainProvider},set:function(e){this.globe.terrainProvider=e}},renderError:{get:function(){return this._renderError}},preRender:{get:function(){return this._preRender}},postRender:{get:function(){return this._postRender}},context:{get:function(){return this._context}},debugFrustumStatistics:{get:function(){return this._debugFrustumStatistics}},scene3DOnly:{get:function(){return this._frameState.scene3DOnly}},orderIndependentTranslucency:{get:function(){return l(this._oit)}},id:{get:function(){return this._id}},mode:{get:function(){return this._mode},set:function(e){if(this.scene3DOnly&&e!==G.SCENE3D)throw new h("Only SceneMode.SCENE3D is valid when scene3DOnly is true.");this._mode=e}}});var gt,_t=new t,yt=new D,Ct=new _,wt=new w(0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1);wt=w.inverseTransformation(wt,wt);var St=new V,Et=new k,bt=new N;vt.prototype.initializeFrame=function(){120===this._shaderFrameCount++&&(this._shaderFrameCount=0,this._context.shaderCache.destroyReleasedShaderPrograms()),this._tweens.update(),this._camera.update(this._mode),this._screenSpaceCameraController.update()},vt.prototype.render=function(e){try{dt(this,e)}catch(t){if(this._renderError.raiseEvent(this,t),this.rethrowRenderErrors)throw t}};var Tt=new N,xt=new i,Pt=new i,At=new r,Mt=new r,Dt=new k,It=3,Rt=3,Ot=new e(0,0,It,Rt),Lt=new n(0,0,0,0),Nt=new r;return vt.prototype.pick=function(e){var t=this._context,r=t.uniformState,i=this._frameState,n=H.transformWindowToDrawingBuffer(this,e,Nt);l(this._pickFramebuffer)||(this._pickFramebuffer=t.createPickFramebuffer()),J(this,i.frameNumber,i.time),i.cullingVolume=ft(this,n,It,Rt),i.passes.pick=!0,r.update(t,i),this._commandList.length=0,ct(this),et(this),Ot.x=n.x-.5*(It-1),Ot.y=this.drawingBufferHeight-n.y-.5*(Rt-1),lt(this,this._pickFramebuffer.begin(Ot),Lt,!0);var o=this._pickFramebuffer.end(Ot);return t.endFrame(),ht(i),o},vt.prototype.drillPick=function(e){for(var t=[],r=this.pick(e);l(r)&&l(r.primitive);){var i=r.primitive;if(t.push(r),l(i.show))i.show=!1;else if("function"==typeof i.getGeometryInstanceAttributes){var n=i.getGeometryInstanceAttributes(r.id);l(n)&&l(n.show)&&(n.show=b.toValue(!1))}r=this.pick(e)}for(var o=0;o<t.length;++o){var a=t[o].primitive;if(l(a.show))a.show=!0;else if("function"==typeof a.getGeometryInstanceAttributes){var s=a.getGeometryInstanceAttributes(t[o].id);l(s)&&l(s.show)&&(s.show=b.toValue(!0))}}return t},vt.prototype.completeMorph=function(){this._transitioner.completeMorph()},vt.prototype.morphTo2D=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphTo2D(e,t)},vt.prototype.morphToColumbusView=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphToColumbusView(e,t)},vt.prototype.morphTo3D=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphTo3D(e,t)},vt.prototype.isDestroyed=function(){return!1},vt.prototype.destroy=function(){return this._tweens.removeAll(),this._screenSpaceCameraController=this._screenSpaceCameraController&&this._screenSpaceCameraController.destroy(),this._pickFramebuffer=this._pickFramebuffer&&this._pickFramebuffer.destroy(),this._primitives=this._primitives&&this._primitives.destroy(),this._globe=this._globe&&this._globe.destroy(),this.skyBox=this.skyBox&&this.skyBox.destroy(),this.skyAtmosphere=this.skyAtmosphere&&this.skyAtmosphere.destroy(),this._debugSphere=this._debugSphere&&this._debugSphere.destroy(),this.sun=this.sun&&this.sun.destroy(),this._sunPostProcess=this._sunPostProcess&&this._sunPostProcess.destroy(),this._transitioner.destroy(),l(this._oit)&&this._oit.destroy(),this._fxaa.destroy(),this._context=this._context&&this._context.destroy(),this._frameState.creditDisplay.destroy(),l(this._performanceDisplay)&&(this._performanceDisplay=this._performanceDisplay&&this._performanceDisplay.destroy(),this._performanceContainer.parentNode.removeChild(this._performanceContainer)),c(this)},vt}),r("Scene/SingleTileImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadImage","../Core/Rectangle","../Core/TileProviderError","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=function(i){function n(e){C._image=e,C._tileWidth=e.width,C._tileHeight=e.height,C._ready=!0,u.handleSuccess(C._errorEvent)}function h(){var e="Failed to load image "+g+".";y=u.handleError(y,C,C._errorEvent,e,0,0,0,d)}function d(){c(s(g),n,h)}i=t(i,{});var m=i.url;this._url=m;var p=i.proxy;this._proxy=p;var f=t(i.rectangle,l.MAX_VALUE),v=new a({rectangle:f,numberOfLevelZeroTilesX:1,numberOfLevelZeroTilesY:1});this._tilingScheme=v,this._image=void 0,this._texture=void 0,this._tileWidth=0,this._tileHeight=0,this._errorEvent=new o,this._ready=!1;var g=m;r(p)&&(g=p.getURL(g));var _=i.credit;"string"==typeof _&&(_=new e(_)),this._credit=_;var y,C=this;d()};return i(h.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return 0}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),h.prototype.getTileCredits=function(){return void 0},h.prototype.requestImage=function(){return this._image},h.prototype.pickFeatures=function(){return void 0},h}),r("Shaders/SkyAtmosphereFS",[],function(){"use strict";return"const float g = -0.95;\nconst float g2 = g * g;\nvarying vec3 v_rayleighColor;\nvarying vec3 v_mieColor;\nvarying vec3 v_toCamera;\nvarying vec3 v_positionEC;\nvoid main (void)\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(v_positionEC);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection)) {\ndiscard;\n}\nfloat fCos = dot(czm_sunDirectionWC, normalize(v_toCamera)) / length(v_toCamera);\nfloat fRayleighPhase = 0.75 * (1.0 + fCos*fCos);\nfloat fMiePhase = 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCos*fCos) / pow(1.0 + g2 - 2.0*g*fCos, 1.5);\nconst float fExposure = 2.0;\nvec3 rgb = fRayleighPhase * v_rayleighColor + fMiePhase * v_mieColor;\nrgb = vec3(1.0) - exp(-fExposure * rgb);\nfloat l = czm_luminance(rgb);\ngl_FragColor = vec4(rgb, min(smoothstep(0.0, 0.1, l), 1.0) * smoothstep(0.0, 1.0, czm_morphTime));\n}\n"}),r("Shaders/SkyAtmosphereVS",[],function(){"use strict";return"attribute vec4 position;\nuniform float fCameraHeight;\nuniform float fCameraHeight2;\nuniform float fOuterRadius;\nuniform float fOuterRadius2;\nuniform float fInnerRadius;\nuniform float fScale;\nuniform float fScaleDepth;\nuniform float fScaleOverScaleDepth;\nconst float Kr = 0.0025;\nconst float fKr4PI = Kr * 4.0 * czm_pi;\nconst float Km = 0.0015;\nconst float fKm4PI = Km * 4.0 * czm_pi;\nconst float ESun = 15.0;\nconst float fKmESun = Km * ESun;\nconst float fKrESun = Kr * ESun;\nconst vec3 v3InvWavelength = vec3(\n5.60204474633241,\n9.473284437923038,\n19.643802610477206);\nconst float rayleighScaleDepth = 0.25;\nconst int nSamples = 2;\nconst float fSamples = 2.0;\nvarying vec3 v_rayleighColor;\nvarying vec3 v_mieColor;\nvarying vec3 v_toCamera;\nvarying vec3 v_positionEC;\nfloat scale(float fCos)\n{\nfloat x = 1.0 - fCos;\nreturn fScaleDepth * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\nvoid main(void)\n{\nvec3 v3Pos = position.xyz;\nvec3 v3Ray = v3Pos - czm_viewerPositionWC;\nfloat fFar = length(v3Ray);\nv3Ray /= fFar;\n#ifdef SKY_FROM_SPACE\nfloat B = 2.0 * dot(czm_viewerPositionWC, v3Ray);\nfloat C = fCameraHeight2 - fOuterRadius2;\nfloat fDet = max(0.0, B*B - 4.0 * C);\nfloat fNear = 0.5 * (-B - sqrt(fDet));\nvec3 v3Start = czm_viewerPositionWC + v3Ray * fNear;\nfFar -= fNear;\nfloat fStartAngle = dot(v3Ray, v3Start) / fOuterRadius;\nfloat fStartDepth = exp(-1.0 / fScaleDepth);\nfloat fStartOffset = fStartDepth*scale(fStartAngle);\n#else\nvec3 v3Start = czm_viewerPositionWC;\nfloat fHeight = length(v3Start);\nfloat fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fCameraHeight));\nfloat fStartAngle = dot(v3Ray, v3Start) / fHeight;\nfloat fStartOffset = fDepth*scale(fStartAngle);\n#endif\nfloat fSampleLength = fFar / fSamples;\nfloat fScaledLength = fSampleLength * fScale;\nvec3 v3SampleRay = v3Ray * fSampleLength;\nvec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\nvec3 v3FrontColor = vec3(0.0, 0.0, 0.0);\nfor(int i=0; i<nSamples; i++)\n{\nfloat fHeight = length(v3SamplePoint);\nfloat fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fHeight));\nvec3 lightPosition = normalize(czm_viewerPositionWC);\nfloat fLightAngle = dot(lightPosition, v3SamplePoint) / fHeight;\nfloat fCameraAngle = dot(v3Ray, v3SamplePoint) / fHeight;\nfloat fScatter = (fStartOffset + fDepth*(scale(fLightAngle) - scale(fCameraAngle)));\nvec3 v3Attenuate = exp(-fScatter * (v3InvWavelength * fKr4PI + fKm4PI));\nv3FrontColor += v3Attenuate * (fDepth * fScaledLength);\nv3SamplePoint += v3SampleRay;\n}\nv_mieColor = v3FrontColor * fKmESun;\nv_rayleighColor = v3FrontColor * (v3InvWavelength * fKrESun);\nv_toCamera = czm_viewerPositionWC - v3Pos;\nv_positionEC = (czm_modelView * position).xyz;\ngl_Position = czm_modelViewProjection * position;\n}\n"
}),r("Scene/SkyAtmosphere",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/Ellipsoid","../Core/EllipsoidGeometry","../Core/GeometryPipeline","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/SkyAtmosphereFS","../Shaders/SkyAtmosphereVS","./BlendingState","./CullFace","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g=function(r){r=t(r,o.WGS84),this.show=!0,this._ellipsoid=r,this._command=new h({owner:this}),this._spSkyFromSpace=void 0,this._spSkyFromAtmosphere=void 0,this._fCameraHeight=void 0,this._fCameraHeight2=void 0,this._outerRadius=e.maximumComponent(e.multiplyByScalar(r.radii,1.025,new e));var i=r.maximumRadius,n=.25,a=this;this._command.uniformMap={fCameraHeight:function(){return a._fCameraHeight},fCameraHeight2:function(){return a._fCameraHeight2},fOuterRadius:function(){return a._outerRadius},fOuterRadius2:function(){return a._outerRadius*a._outerRadius},fInnerRadius:function(){return i},fScale:function(){return 1/(a._outerRadius-i)},fScaleDepth:function(){return n},fScaleOverScaleDepth:function(){return 1/(a._outerRadius-i)/n}}};return i(g.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),g.prototype.update=function(t,i){if(!this.show)return void 0;if(i.mode!==v.SCENE3D&&i.mode!==v.MORPHING)return void 0;if(!i.passes.render)return void 0;var n=this._command;if(!r(n.vertexArray)){var o=a.createGeometry(new a({radii:e.multiplyByScalar(this._ellipsoid.radii,1.025,new e),slicePartitions:256,stackPartitions:256,vertexFormat:l.POSITION_ONLY}));n.vertexArray=t.createVertexArrayFromGeometry({geometry:o,attributeLocations:s.createAttributeLocations(o),bufferUsage:u.STATIC_DRAW}),n.renderState=t.createRenderState({cull:{enabled:!0,face:f.FRONT},blending:p.ALPHA_BLEND});var h=c({defines:["SKY_FROM_SPACE"],sources:[m]});this._spSkyFromSpace=t.createShaderProgram(h,d),h=c({defines:["SKY_FROM_ATMOSPHERE"],sources:[m]}),this._spSkyFromAtmosphere=t.createShaderProgram(h,d)}var g=i.camera.positionWC;return this._fCameraHeight2=e.magnitudeSquared(g),this._fCameraHeight=Math.sqrt(this._fCameraHeight2),n.shaderProgram=this._fCameraHeight>this._outerRadius?this._spSkyFromSpace:this._spSkyFromAtmosphere,n},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),this._spSkyFromSpace=this._spSkyFromSpace&&this._spSkyFromSpace.destroy(),this._spSkyFromAtmosphere=this._spSkyFromAtmosphere&&this._spSkyFromAtmosphere.destroy(),n(this)},g}),r("Shaders/SkyBoxFS",[],function(){"use strict";return"uniform samplerCube u_cubeMap;\nvarying vec3 v_texCoord;\nvoid main()\n{\nvec3 rgb = textureCube(u_cubeMap, normalize(v_texCoord)).rgb;\ngl_FragColor = vec4(rgb, czm_morphTime);\n}\n"}),r("Shaders/SkyBoxVS",[],function(){"use strict";return"attribute vec3 position;\nvarying vec3 v_texCoord;\nvoid main()\n{\nvec3 p = czm_viewRotation * (czm_temeToPseudoFixed * (czm_entireFrustum.y * position));\ngl_Position = czm_projection * vec4(p, 1.0);\nv_texCoord = position.xyz;\n}\n"}),r("Scene/SkyBox",["../Core/BoxGeometry","../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/GeometryPipeline","../Core/Matrix4","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/DrawCommand","../Renderer/loadCubeMap","../Shaders/SkyBoxFS","../Shaders/SkyBoxVS","./BlendingState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";var v=function(e){this.sources=e.sources,this._sources=void 0,this.show=r(e.show,!0),this._command=new c({modelMatrix:s.clone(s.IDENTITY),owner:this}),this._cubeMap=void 0};return v.prototype.update=function(r,n){if(!this.show)return void 0;if(n.mode!==f.SCENE3D&&n.mode!==f.MORPHING)return void 0;if(!n.passes.render)return void 0;if(this._sources!==this.sources){this._sources=this.sources;var o=this.sources;"string"==typeof o.positiveX?h(r,this._sources).then(function(e){c._cubeMap=c._cubeMap&&c._cubeMap.destroy(),c._cubeMap=e}):(this._cubeMap=this._cubeMap&&this._cubeMap.destroy(),this._cubeMap=r.createCubeMap({source:o}))}var s=this._command;if(!i(s.vertexArray)){var c=this;s.uniformMap={u_cubeMap:function(){return c._cubeMap}};var v=e.createGeometry(e.fromDimensions({dimensions:new t(2,2,2),vertexFormat:l.POSITION_ONLY})),g=a.createAttributeLocations(v);s.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:g,bufferUsage:u.STATIC_DRAW}),s.shaderProgram=r.createShaderProgram(m,d,g),s.renderState=r.createRenderState({blending:p.ALPHA_BLEND})}return i(this._cubeMap)?s:void 0},v.prototype.isDestroyed=function(){return!1},v.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),e.shaderProgram=e.shaderProgram&&e.shaderProgram.destroy(),this._cubeMap=this._cubeMap&&this._cubeMap.destroy(),n(this)},v}),r("Scene/StencilFunction",["../Core/freezeObject"],function(e){"use strict";var t={NEVER:512,LESS:513,EQUAL:514,LESS_OR_EQUAL:515,GREATER:516,NOT_EQUAL:517,GREATER_OR_EQUAL:518,ALWAYS:519};return e(t)}),r("Scene/StencilOperation",["../Core/freezeObject"],function(e){"use strict";var t={ZERO:0,KEEP:7680,REPLACE:7681,INCREMENT:7682,DECREMENT:7683,INVERT:5386,INCREMENT_WRAP:34055,DECREMENT_WRAP:34056};return e(t)}),r("Shaders/SunFS",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Shaders/SunTextureFS",[],function(){"use strict";return"uniform float u_glowLengthTS;\nuniform float u_radiusTS;\nvarying vec2 v_textureCoordinates;\nvec2 rotate(vec2 p, vec2 direction)\n{\nreturn vec2(p.x * direction.x - p.y * direction.y, p.x * direction.y + p.y * direction.x);\n}\nvec4 addBurst(vec2 position, vec2 direction)\n{\nvec2 rotatedPosition = rotate(position, direction) * vec2(25.0, 0.75);\nfloat radius = length(rotatedPosition);\nfloat burst = 1.0 - smoothstep(0.0, 0.55, radius);\nreturn vec4(burst);\n}\nvoid main()\n{\nvec2 position = v_textureCoordinates - vec2(0.5);\nfloat radius = length(position);\nfloat surface = step(radius, u_radiusTS);\nvec4 color = vec4(1.0, 1.0, surface + 0.2, surface);\nfloat glow = 1.0 - smoothstep(0.0, 0.55, radius);\ncolor.ba += mix(vec2(0.0), vec2(1.0), glow) * 0.75;\nvec4 burst = vec4(0.0);\nburst += 0.4 * addBurst(position, vec2(0.38942,  0.92106));\nburst += 0.4 * addBurst(position, vec2(0.99235,  0.12348));\nburst += 0.4 * addBurst(position, vec2(0.60327, -0.79754));\nburst += 0.3 * addBurst(position, vec2(0.31457,  0.94924));\nburst += 0.3 * addBurst(position, vec2(0.97931,  0.20239));\nburst += 0.3 * addBurst(position, vec2(0.66507, -0.74678));\ncolor += clamp(burst, vec4(0.0), vec4(1.0)) * 0.15;\ngl_FragColor = clamp(color, vec4(0.0), vec4(1.0));\n}\n"}),r("Shaders/SunVS",[],function(){"use strict";return"attribute vec2 direction;\nuniform float u_size;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 position;\nif (czm_morphTime == 1.0)\n{\nposition = vec4(czm_sunPositionWC, 1.0);\n}\nelse\n{\nposition = vec4(czm_sunPositionColumbusView.zxy, 1.0);\n}\nvec4 positionEC = czm_view * position;\nvec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\nvec2 halfSize = vec2(u_size * 0.5);\nhalfSize *= ((direction * 2.0) - 1.0);\ngl_Position = czm_viewportOrthographic * vec4(positionWC.xy + halfSize, -positionWC.z, 1.0);\nv_textureCoordinates = direction;\n}\n"}),r("Scene/Sun",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/PrimitiveType","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/DrawCommand","../Shaders/SunFS","../Shaders/SunTextureFS","../Shaders/SunVS","./BlendingState","./SceneMode","./SceneTransforms"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";var b=function(){this.show=!0,this._command=new g({primitiveType:p.TRIANGLES,boundingVolume:new t,owner:this}),this._boundingVolume=new t,this._boundingVolume2D=new t,this._texture=void 0,this._drawingBufferWidth=void 0,this._drawingBufferHeight=void 0,this._radiusTS=void 0,this._size=void 0,this.glowFactor=1,this._glowFactorDirty=!1;var e=this;this._uniformMap={u_texture:function(){return e._texture},u_size:function(){return e._size}}};l(b.prototype,{glowFactor:{get:function(){return this._glowFactor},set:function(e){e=Math.max(e,0),this._glowFactor=e,this._glowFactorDirty=!0}}});var T=new r,x=new r,P=new n,A=new n;return b.prototype.update=function(n){var l=n.frameState,u=n.context;if(!this.show)return void 0;var p=l.mode;if(p===S.SCENE2D||p===S.MORPHING)return void 0;if(!l.passes.render)return void 0;var g=n.drawingBufferWidth,b=n.drawingBufferHeight;if(!s(this._texture)||g!==this._drawingBufferWidth||b!==this._drawingBufferHeight||this._glowFactorDirty){this._texture=this._texture&&this._texture.destroy(),this._drawingBufferWidth=g,this._drawingBufferHeight=b,this._glowFactorDirty=!1;var M=Math.max(g,b);M=Math.pow(2,Math.ceil(Math.log(M)/Math.log(2))-2),this._texture=u.createTexture2D({width:M,height:M,pixelFormat:m.RGBA});var D=u.createFramebuffer({colorTextures:[this._texture]});D.destroyAttachments=!1;var I=new v({color:new o(0,0,0,0),framebuffer:D}),R=u.createRenderState({viewport:new e(0,0,M,M)});this._glowLengthTS=5*this._glowFactor,this._radiusTS=.5*(1/(1+2*this._glowLengthTS));var O=this,L={u_glowLengthTS:function(){return O._glowLengthTS},u_radiusTS:function(){return O._radiusTS}},N=u.createViewportQuadCommand(y,{renderState:R,uniformMap:L,framebuffer:D,owner:this});I.execute(u),N.execute(u),N.shaderProgram.destroy(),D.destroy()}var B=this._command;if(!s(B.vertexArray)){var F={direction:0},z=new Uint8Array(8);z[0]=0,z[1]=0,z[2]=255,z[3]=0,z[4]=255,z[5]=255,z[6]=0,z[7]=255;var V=u.createVertexBuffer(z,f.STATIC_DRAW),k=[{index:F.direction,vertexBuffer:V,componentsPerAttribute:2,normalize:!0,componentDatatype:a.UNSIGNED_BYTE}],U=u.createIndexBuffer(new Uint16Array([0,1,2,0,2,3]),f.STATIC_DRAW,c.UNSIGNED_SHORT);B.vertexArray=u.createVertexArray(k,U),B.shaderProgram=u.createShaderProgram(C,_,F),B.renderState=u.createRenderState({blending:w.ALPHA_BLEND}),B.uniformMap=this._uniformMap}var W=u.uniformState.sunPositionWC,G=u.uniformState.sunPositionColumbusView,H=this._boundingVolume,q=this._boundingVolume2D;i.clone(W,H.center),q.center.x=G.z,q.center.y=G.x,q.center.z=G.y,H.radius=h.SOLAR_RADIUS+h.SOLAR_RADIUS*this._glowLengthTS,q.radius=H.radius,p===S.SCENE3D?t.clone(H,B.boundingVolume):p===S.COLUMBUS_VIEW&&t.clone(q,B.boundingVolume);var j=E.computeActualWgs84Position(l,W,A),Y=i.magnitude(i.subtract(j,n.camera.position,A)),X=u.uniformState.projection,Z=P;Z.x=0,Z.y=0,Z.z=-Y,Z.w=1;var Q=d.multiplyByVector(X,Z,A),J=E.clipToDrawingBufferCoordinates(n,Q,T);Z.x=h.SOLAR_RADIUS;var K=d.multiplyByVector(X,Z,A),$=E.clipToDrawingBufferCoordinates(n,K,x);return this._size=Math.ceil(r.magnitude(r.subtract($,J,A))),this._size=2*this._size*(1+2*this._glowLengthTS),B},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),e.shaderProgram=e.shaderProgram&&e.shaderProgram.destroy(),this._texture=this._texture&&this._texture.destroy(),u(this)},b}),r("Scene/TileCoordinatesImageryProvider",["../Core/Color","../Core/defaultValue","../Core/defineProperties","../Core/Event","../Core/GeographicTilingScheme"],function(e,t,r,i,n){"use strict";var o=function(r){r=t(r,{}),this._tilingScheme=t(r.tilingScheme,new n),this._color=t(r.color,e.YELLOW),this._errorEvent=new i,this._tileWidth=t(r.tileWidth,256),this._tileHeight=t(r.tileHeight,256)};return r(o.prototype,{proxy:{get:function(){return void 0}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return void 0}},minimumLevel:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return!0}},credit:{get:function(){return void 0}},hasAlphaChannel:{get:function(){return!0}}}),o.prototype.getTileCredits=function(){return void 0},o.prototype.requestImage=function(e,t,r){var i=document.createElement("canvas");i.width=256,i.height=256;var n=i.getContext("2d"),o=this._color.toCssColorString();n.strokeStyle=o,n.lineWidth=2,n.strokeRect(1,1,255,255);var a="L"+r+"X"+e+"Y"+t;return n.font="bold 25px Arial",n.textAlign="center",n.fillStyle="black",n.fillText(a,127,127),n.fillStyle=o,n.fillText(a,124,124),i},o.prototype.pickFeatures=function(){return void 0},o}),r("Scene/TileDiscardPolicy",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.isReady=e.throwInstantiationError,t.prototype.shouldDiscardImage=e.throwInstantiationError,t}),r("Scene/TileMapServiceImageryProvider",["../Core/Cartesian2","../Core/Cartographic","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadXML","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,r,i){var o=e._tilingScheme.getNumberOfYTilesAtLevel(i),a=e._url+i+"/"+t+"/"+(o-r-1)+"."+e._fileExtension,s=e._proxy;return n(s)&&(a=s.getURL(a)),a}var v=/\/$/,g=function(o){function a(r){for(var o,a,s,u,m=/tileformat/i,p=/tileset/i,v=/tilesets/i,_=/boundingbox/i,w=/srs/i,S=[],E=r.childNodes[0].childNodes,b=0;b<E.length;b++)if(m.test(E.item(b).nodeName))o=E.item(b);else if(v.test(E.item(b).nodeName)){s=E.item(b);for(var T=E.item(b).childNodes,x=0;x<T.length;x++)p.test(T.item(x).nodeName)&&S.push(T.item(x))}else _.test(E.item(b).nodeName)?a=E.item(b):w.test(E.item(b).nodeName)&&(u=E.item(b).textContent);C._fileExtension=i(C._fileExtension,o.getAttribute("extension")),C._tileWidth=i(C._tileWidth,parseInt(o.getAttribute("width"),10)),C._tileHeight=i(C._tileHeight,parseInt(o.getAttribute("height"),10)),C._minimumLevel=i(C._minimumLevel,parseInt(S[0].getAttribute("order"),10)),C._maximumLevel=i(C._maximumLevel,parseInt(S[S.length-1].getAttribute("order"),10));var P=s.getAttribute("profile"),A=!1;if(("geodetic"===P||"mercator"===P)&&(A=!0),!n(C._tilingScheme))if("geodetic"===P||"global-geodetic"===P)C._tilingScheme=new l;else{if("mercator"!==P&&"global-mercator"!==P){var M=g+"tilemapresource.xml specifies an unsupported profile attribute, "+P+".";return y=h.handleError(y,C,C._errorEvent,M,void 0,void 0,void 0,f),void 0}C._tilingScheme=new d}var D=C._tilingScheme;if(!n(C._rectangle)){var I,R,O,L;if(A)I=new e(parseFloat(a.getAttribute("miny")),parseFloat(a.getAttribute("minx"))),R=new e(parseFloat(a.getAttribute("maxy")),parseFloat(a.getAttribute("maxx"))),O=t.fromDegrees(I.x,I.y),L=t.fromDegrees(R.x,R.y);else if(I=new e(parseFloat(a.getAttribute("minx")),parseFloat(a.getAttribute("miny"))),R=new e(parseFloat(a.getAttribute("maxx")),parseFloat(a.getAttribute("maxy"))),C._tilingScheme instanceof l)O=t.fromDegrees(I.x,I.y),L=t.fromDegrees(R.x,R.y);else{var N=C._tilingScheme.projection;O=N.unproject(I),L=N.unproject(R)}C._rectangle=new c(O.longitude,O.latitude,L.longitude,L.latitude)}C._rectangle.west<D.rectangle.west&&(C._rectangle.west=D.rectangle.west),C._rectangle.east>D.rectangle.east&&(C._rectangle.east=D.rectangle.east),C._rectangle.south<D.rectangle.south&&(C._rectangle.south=D.rectangle.south),C._rectangle.north>D.rectangle.north&&(C._rectangle.north=D.rectangle.north);var B=D.positionToTileXY(c.southwest(C._rectangle),C._minimumLevel),F=D.positionToTileXY(c.northeast(C._rectangle),C._minimumLevel),z=(Math.abs(F.x-B.x)+1)*(Math.abs(F.y-B.y)+1);z>4&&(C._minimumLevel=0),C._tilingScheme=D,C._ready=!0}function p(){C._fileExtension=i(o.fileExtension,"png"),C._tileWidth=i(o.tileWidth,256),C._tileHeight=i(o.tileHeight,256),C._minimumLevel=i(o.minimumLevel,0),C._maximumLevel=i(o.maximumLevel,18),C._tilingScheme=i(o.tilingScheme,new d),C._rectangle=i(o.rectangle,C._tilingScheme.rectangle),C._ready=!0}function f(){m(u(g+"tilemapresource.xml"),a,p)}o=i(o,{});var g=o.url;v.test(g)||(g+="/"),this._url=g,this._ready=!1,this._proxy=o.proxy,this._tileDiscardPolicy=o.tileDiscardPolicy,this._errorEvent=new s,this._fileExtension=o.fileExtension,this._tileWidth=o.tileWidth,this._tileHeight=o.tileHeight,this._minimumLevel=o.minimumLevel,this._maximumLevel=o.maximumLevel,this._rectangle=c.clone(o.rectangle),this._tilingScheme=o.tilingScheme;var _=o.credit;"string"==typeof _&&(_=new r(_)),this._credit=_;var y,C=this;f()};return o(g.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),g.prototype.getTileCredits=function(){return void 0},g.prototype.requestImage=function(e,t,r){var i=f(this,e,t,r);return p.loadImage(this,i)},g.prototype.pickFeatures=function(){return void 0},g}),r("Scene/TileState",["../Core/freezeObject"],function(e){"use strict";var t={START:0,LOADING:1,READY:2,UPSAMPLED_ONLY:3};return e(t)}),r("Shaders/ViewportQuadFS",[],function(){"use strict";return"varying vec2 v_textureCoordinates;\nvoid main()\n{\nczm_materialInput materialInput;\nmaterialInput.s = v_textureCoordinates.s;\nmaterialInput.st = v_textureCoordinates;\nmaterialInput.str = vec3(v_textureCoordinates, 0.0);\nmaterialInput.normalEC = vec3(0.0, 0.0, -1.0);\nczm_material material = czm_getMaterial(materialInput);\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n}\n"}),r("Scene/ViewportQuad",["../Core/BoundingRectangle","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Renderer/createShaderSource","../Shaders/ViewportQuadFS","./BlendingState","./Material","./Pass"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(i,n){this.show=!0,r(i)||(i=new e),this.rectangle=e.clone(i),r(n)||(n=l.fromType(l.ColorType,{color:new t(1,1,1,1)})),this.material=n,this._material=void 0,this._overlayCommand=void 0,this._rs=void 0};return c.prototype.update=function(t,i,n){if(this.show){var l=this._rs;r(l)&&e.equals(l.viewport,this.rectangle)||(this._rs=t.createRenderState({blending:s.ALPHA_BLEND,viewport:this.rectangle}));var c=i.passes;if(c.render){if(this._material!==this.material||!r(this._overlayCommand)){this._material=this.material,r(this._overlayCommand)&&this._overlayCommand.shaderProgram.destroy();var h=o({sources:[this._material.shaderSource,a]});this._overlayCommand=t.createViewportQuadCommand(h,{renderState:this._rs,uniformMap:this._material._uniforms,owner:this}),this._overlayCommand.pass=u.OVERLAY}this._material.update(t),this._overlayCommand.uniformMap=this._material._uniforms,n.push(this._overlayCommand)}}},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return r(this._overlayCommand)&&(this._overlayCommand.shaderProgram=this._overlayCommand.shaderProgram&&this._overlayCommand.shaderProgram.destroy()),i(this)},c}),r("Scene/WebMapServiceImageryProvider",["../Core/Cartesian3","../Core/Cartographic","../Core/clone","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/freezeObject","../Core/GeographicTilingScheme","../Core/loadJson","../Core/loadXML","../Core/Math","../Core/Rectangle","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryLayerFeatureInfo","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,t,r,i){var n=e._url,a=n.indexOf("?");a>=0&&a<n.length-1?"&"!==n[n.length-1]&&(n+="&"):0>a&&(n+="?");var s=e._parameters;for(var l in s)s.hasOwnProperty(l)&&(n+=l+"="+s[l]+"&");if(o(s.layers)||(n+="layers="+e._layers+"&"),!o(s.srs)){var u=e._tilingScheme instanceof f?"EPSG:3857":"EPSG:4326";n+="srs="+u+"&"}if(!o(s.bbox)){var c=e._tilingScheme.tileXYToNativeRectangle(t,r,i),h=c.west+","+c.south+","+c.east+","+c.north;n+="bbox="+h+"&"}o(s.width)||(n+="width="+e._tileWidth+"&"),o(s.height)||(n+="height="+e._tileHeight+"&");var d=e._proxy;return o(d)&&(n=d.getURL(n)),n}function C(e,t,r,i,n,a,s){var l=e._url,u=l.indexOf("?");u>=0&&u<l.length-1?"&"!==l[l.length-1]&&(l+="&"):0>u&&(l+="?");var c=e._getFeatureInfoParameters;for(var h in c)c.hasOwnProperty(h)&&(l+=h+"="+c[h]+"&");if(o(c.layers)||(l+="layers="+e._layers+"&"),o(c.query_layers)||(l+="query_layers="+e._layers+"&"),!o(c.srs)){var d=e._tilingScheme instanceof f?"EPSG:3857":"EPSG:4326";l+="srs="+d+"&"}if(!o(c.bbox)){var m=e._tilingScheme.tileXYToNativeRectangle(r,i,n),p=m.west+","+m.south+","+m.east+","+m.north;l+="bbox="+p+"&"}o(c.x)||(l+="x="+a+"&"),o(c.y)||(l+="y="+s+"&"),o(c.width)||(l+="width="+e._tileWidth+"&"),o(c.height)||(l+="height="+e._tileHeight+"&"),o(c.info_format)||(l+="info_format="+t+"&");var v=e._proxy;return o(v)&&(l=v.getURL(l)),l}function w(e){for(var r=[],i=e.features,n=0;n<i.length;++n){var o=i[n],a=new g;if(a.data=o,a.configureNameFromProperties(o.properties),a.configureDescriptionFromProperties(o.properties),"Point"===o.geometry.type){var s=o.geometry.coordinates[0],l=o.geometry.coordinates[1];a.position=t.fromDegrees(s,l)}r.push(a)}return r}function S(e){var t=e.documentElement;return"MultiFeatureCollection"===t.localName&&t.namespaceURI===M?E(e):"FeatureInfoResponse"===t.localName&&t.namespaceURI===D?b(e):"ServiceExceptionReport"===t.localName?void 0:T(e)}function E(e){for(var t=[],r=e.documentElement,i=r.getElementsByTagNameNS(M,"Feature"),n=0;n<i.length;++n){for(var o=i[n],a={},s=o.getElementsByTagNameNS(M,"Val"),l=0;l<s.length;++l){var u=s[l];if(u.hasAttribute("ref")){var c=u.getAttribute("ref"),h=u.textContent.trim();a[c]=h}}var d=new g;d.data=o,d.configureNameFromProperties(a),d.configureDescriptionFromProperties(a),t.push(d)}return t}function b(e){for(var t=[],r=e.documentElement,i=r.getElementsByTagNameNS(D,"FIELDS"),n=0;n<i.length;++n){for(var o=i[n],a={},s=o.attributes,l=0;l<s.length;++l){var u=s[l];a[u.name]=u.value}var c=new g;c.data=o,c.configureNameFromProperties(a),c.configureDescriptionFromProperties(a),t.push(c)}return t}function T(e){var t=(new XMLSerializer).serializeToString(e),r=document.createElement("div"),i=document.createElement("pre");i.textContent=t,r.appendChild(i);var n=new g;return n.data=e,n.description=r.innerHTML,[n]}var x=function I(e){e=n(e,{}),this._url=e.url,this._tileDiscardPolicy=e.tileDiscardPolicy,this._proxy=e.proxy,this._layers=e.layers,this._enablePickFeatures=n(e.enablePickFeatures,!0),this._getFeatureInfoAsGeoJson=n(e.getFeatureInfoAsGeoJson,!0),this._getFeatureInfoAsXml=n(e.getFeatureInfoAsXml,!0);var t,a,s=r(I.DefaultParameters);if(o(e.parameters))for(t in e.parameters)e.parameters.hasOwnProperty(t)&&(a=t.toLowerCase(),s[a]=e.parameters[t]);this._parameters=s;var u=r(I.GetFeatureInfoDefaultParameters);if(o(e.getFeatureInfoParameters))for(t in e.getFeatureInfoParameters)e.getFeatureInfoParameters.hasOwnProperty(t)&&(a=t.toLowerCase(),u[a]=e.getFeatureInfoParameters[t]);this._getFeatureInfoParameters=u,this._tileWidth=n(e.tileWidth,256),this._tileHeight=n(e.tileHeight,256),this._minimumLevel=n(e.minimumLevel,0),this._maximumLevel=e.maximumLevel,this._rectangle=n(e.rectangle,p.MAX_VALUE),this._tilingScheme=o(e.tilingScheme)?e.tilingScheme:new c,this._rectangle=p.intersectWith(this._rectangle,this._tilingScheme.rectangle);var h=e.credit;"string"==typeof h&&(h=new i(h)),this._credit=h,this._errorEvent=new l,this._ready=!0};a(x.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},layers:{get:function(){return this._layers}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),x.prototype.getTileCredits=function(){return void 0},x.prototype.requestImage=function(e,t,r){var i=y(this,e,t,r);return _.loadImage(this,i)};var P=new t,A=new e;x.prototype.pickFeatures=function(e,t,r,i,n){if(!this._enablePickFeatures)return void 0;var o,a=this._tilingScheme.tileXYToNativeRectangle(e,t,r);if(this._tilingScheme instanceof c)o=A,o.x=m.toDegrees(i),o.y=m.toDegrees(n);else{var s=P;s.longitude=i,s.latitude=n,o=this._tilingScheme.projection.project(s,A)}var l,u=0|this._tileWidth*(o.x-a.west)/(a.east-a.west),p=0|this._tileHeight*(a.north-o.y)/(a.north-a.south);if(this._getFeatureInfoAsGeoJson){l=C(this,"application/json",e,t,r,u,p);var f=this;return v(h(l),function(e){return w(e)},function(i){return f._getFeatureInfoAsXml?(l=C(f,"text/xml",e,t,r,u,p),v(d(l),function(e){return S(e)})):v.reject(i)})}return this._getFeatureInfoAsXml?(l=C(this,"text/xml",e,t,r,u,p),v(d(l),function(e){return S(e)})):void 0},x.DefaultParameters=u({service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"}),x.GetFeatureInfoDefaultParameters=u({service:"WMS",version:"1.1.1",request:"GetFeatureInfo"});var M="http://www.mapinfo.com/mxp",D="http://www.esri.com/wms";return x}),r("Scene/WebMapTileServiceImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Rectangle","../Core/WebMercatorTilingScheme","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,i,n){var o=e._url+"service=WMTS&VERSION=1.0.0&request=GetTile"+"&TILEMATRIX="+n+"&LAYER="+e._layer+"&STYLE="+e._style+"&TILEROW="+i+"&TILECOL="+t+"&TILEMATRIXSET="+e._tileMatrixSetID+"&FORMAT="+e._format,a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var c=/\?$/,h=function(i){if(i=t(i,{}),!r(i.url))throw new n("options.url is required.");if(!r(i.layer))throw new n("options.layer is required.");if(!r(i.style))throw new n("options.style is required.");if(!r(i.tileMatrixSetID))throw new n("options.tileMatrixSetID is required.");this._url=i.url,c.test(this._url)||(this._url=this._url+"?"),this._layer=i.layer,this._style=i.style,this._tileMatrixSetID=i.tileMatrixSetID,this._format=t(i.format,"image/jpeg"),this._proxy=i.proxy,this._tileDiscardPolicy=i.tileDiscardPolicy,this._tilingScheme=t(i.tilingScheme,new s),this._tileWidth=t(i.tileWidth,256),this._tileHeight=t(i.tileHeight,256),this._minimumLevel=t(i.minimumLevel,0),this._maximumLevel=t(i.maximumLevel,18),this._rectangle=t(i.rectangle,this._tilingScheme.rectangle);var l=this._tilingScheme.positionToTileXY(a.southwest(this._rectangle),this._minimumLevel),u=this._tilingScheme.positionToTileXY(a.northeast(this._rectangle),this._minimumLevel),h=(Math.abs(u.x-l.x)+1)*(Math.abs(u.y-l.y)+1);if(h>4)throw new n("The imagery provider's rectangle and minimumLevel indicate that there are "+h+" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.");this._errorEvent=new o,this._ready=!0;var d=i.credit;"string"==typeof d&&(d=new e(d)),this._credit=d};return i(h.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},format:{get:function(){return this._format}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),h.prototype.getTileCredits=function(){return void 0},h.prototype.requestImage=function(e,t,r){var i=u(this,e,t,r);return l.loadImage(this,i)},h.prototype.pickFeatures=function(){return void 0},h}),r("Scene/createTangentSpaceDebugPrimitive",["../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/GeometryInstance","../Core/GeometryPipeline","../Core/Matrix4","./PerInstanceColorAppearance","./Primitive"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(i){i=t(i,t.EMPTY_OBJECT);var u=[],c=i.geometry;r(c.attributes)&&r(c.primitiveType)||(c=c.constructor.createGeometry(c));var h=c.attributes,d=a.clone(t(i.modelMatrix,a.IDENTITY)),m=t(i.length,1e4);return r(h.normal)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"normal",m),attributes:{color:new e(1,0,0,1)},modelMatrix:d})),r(h.binormal)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"binormal",m),attributes:{color:new e(0,1,0,1)},modelMatrix:d})),r(h.tangent)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"tangent",m),attributes:{color:new e(0,0,1,1)},modelMatrix:d})),u.length>0?new l({geometryInstances:u,appearance:new s({flat:!0,translucent:!1})}):void 0}return u}),function(){!function(e){var i=this||(0,eval)("this"),n=i.document,o=i.navigator,a=i.jQuery,s=i.JSON;!function(e){"function"==typeof t&&"object"==typeof exports&&"object"==typeof module?e(module.exports||exports):"function"==typeof r&&r.amd?r("ThirdParty/knockout-3.1.0",["exports"],e):e(i.ko={})}(function(t){function r(e,t){return null===e||typeof e in d?e===t:!1}function l(t,r){var i;return function(){i||(i=setTimeout(function(){i=e,t()},r))}}function u(e,t){var r;return function(){clearTimeout(r),r=setTimeout(e,t)}}function c(e,t,r,i){h.d[e]={init:function(e,n,o,a,s){var l,u;return h.ba(function(){var o=h.a.c(n()),a=!r!=!o,c=!u;(c||t||a!==l)&&(c&&h.ca.fa()&&(u=h.a.lb(h.e.childNodes(e),!0)),a?(c||h.e.U(e,h.a.lb(u)),h.gb(i?i(s,o):s,e)):h.e.da(e),l=a)},null,{G:e}),{controlsDescendantBindings:!0}}},h.g.aa[e]=!1,h.e.Q[e]=!0}var h="undefined"!=typeof t?t:{};h.b=function(e,t){for(var r=e.split("."),i=h,n=0;n<r.length-1;n++)i=i[r[n]];i[r[r.length-1]]=t},h.s=function(e,t,r){e[t]=r},h.version="3.1.0",h.b("version",h.version),h.a=function(){function t(e,t){for(var r in e)e.hasOwnProperty(r)&&t(r,e[r])}function r(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e}function l(e,t){return e.__proto__=t,e}var u={__proto__:[]}instanceof Array,c={},d={};c[o&&/Firefox\/2/i.test(o.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"],c.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" "),t(c,function(e,t){if(t.length)for(var r=0,i=t.length;i>r;r++)d[t[r]]=e});var m={propertychange:!0},p=n&&function(){for(var t=3,r=n.createElement("div"),i=r.getElementsByTagName("i");r.innerHTML="<!--[if gt IE "+ ++t+"]><i></i><![endif]-->",i[0];);return t>4?t:e}();return{mb:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],r:function(e,t){for(var r=0,i=e.length;i>r;r++)t(e[r],r)
},l:function(e,t){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(e,t);for(var r=0,i=e.length;i>r;r++)if(e[r]===t)return r;return-1},hb:function(e,t,r){for(var i=0,n=e.length;n>i;i++)if(t.call(r,e[i],i))return e[i];return null},ma:function(e,t){var r=h.a.l(e,t);r>0?e.splice(r,1):0===r&&e.shift()},ib:function(e){e=e||[];for(var t=[],r=0,i=e.length;i>r;r++)0>h.a.l(t,e[r])&&t.push(e[r]);return t},ya:function(e,t){e=e||[];for(var r=[],i=0,n=e.length;n>i;i++)r.push(t(e[i],i));return r},la:function(e,t){e=e||[];for(var r=[],i=0,n=e.length;n>i;i++)t(e[i],i)&&r.push(e[i]);return r},$:function(e,t){if(t instanceof Array)e.push.apply(e,t);else for(var r=0,i=t.length;i>r;r++)e.push(t[r]);return e},Y:function(e,t,r){var i=h.a.l(h.a.Sa(e),t);0>i?r&&e.push(t):r||e.splice(i,1)},na:u,extend:r,ra:l,sa:u?l:r,A:t,Oa:function(e,t){if(!e)return e;var r,i={};for(r in e)e.hasOwnProperty(r)&&(i[r]=t(e[r],r,e));return i},Fa:function(e){for(;e.firstChild;)h.removeNode(e.firstChild)},ec:function(e){e=h.a.R(e);for(var t=n.createElement("div"),r=0,i=e.length;i>r;r++)t.appendChild(h.M(e[r]));return t},lb:function(e,t){for(var r=0,i=e.length,n=[];i>r;r++){var o=e[r].cloneNode(!0);n.push(t?h.M(o):o)}return n},U:function(e,t){if(h.a.Fa(e),t)for(var r=0,i=t.length;i>r;r++)e.appendChild(t[r])},Bb:function(e,t){var r=e.nodeType?[e]:e;if(0<r.length){for(var i=r[0],n=i.parentNode,o=0,a=t.length;a>o;o++)n.insertBefore(t[o],i);for(o=0,a=r.length;a>o;o++)h.removeNode(r[o])}},ea:function(e,t){if(e.length){for(t=8===t.nodeType&&t.parentNode||t;e.length&&e[0].parentNode!==t;)e.shift();if(1<e.length){var r=e[0],i=e[e.length-1];for(e.length=0;r!==i;)if(e.push(r),r=r.nextSibling,!r)return;e.push(i)}}return e},Db:function(e,t){7>p?e.setAttribute("selected",t):e.selected=t},ta:function(t){return null===t||t===e?"":t.trim?t.trim():t.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},oc:function(e,t){for(var r=[],i=(e||"").split(t),n=0,o=i.length;o>n;n++){var a=h.a.ta(i[n]);""!==a&&r.push(a)}return r},kc:function(e,t){return e=e||"",t.length>e.length?!1:e.substring(0,t.length)===t},Sb:function(e,t){if(e===t)return!0;if(11===e.nodeType)return!1;if(t.contains)return t.contains(3===e.nodeType?e.parentNode:e);if(t.compareDocumentPosition)return 16==(16&t.compareDocumentPosition(e));for(;e&&e!=t;)e=e.parentNode;return!!e},Ea:function(e){return h.a.Sb(e,e.ownerDocument.documentElement)},eb:function(e){return!!h.a.hb(e,h.a.Ea)},B:function(e){return e&&e.tagName&&e.tagName.toLowerCase()},q:function(e,t,r){var i=p&&m[t];if(!i&&a)a(e).bind(t,r);else if(i||"function"!=typeof e.addEventListener){if("undefined"==typeof e.attachEvent)throw Error("Browser doesn't support addEventListener or attachEvent");var n=function(t){r.call(e,t)},o="on"+t;e.attachEvent(o,n),h.a.u.ja(e,function(){e.detachEvent(o,n)})}else e.addEventListener(t,r,!1)},ha:function(e,t){if(!e||!e.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var r;if("input"===h.a.B(e)&&e.type&&"click"==t.toLowerCase()?(r=e.type,r="checkbox"==r||"radio"==r):r=!1,a&&!r)a(e).trigger(t);else if("function"==typeof n.createEvent){if("function"!=typeof e.dispatchEvent)throw Error("The supplied element doesn't support dispatchEvent");r=n.createEvent(d[t]||"HTMLEvents"),r.initEvent(t,!0,!0,i,0,0,0,0,0,!1,!1,!1,!1,0,e),e.dispatchEvent(r)}else if(r&&e.click)e.click();else{if("undefined"==typeof e.fireEvent)throw Error("Browser doesn't support triggering events");e.fireEvent("on"+t)}},c:function(e){return h.v(e)?e():e},Sa:function(e){return h.v(e)?e.o():e},ua:function(e,t,r){if(t){var i=/\S+/g,n=e.className.match(i)||[];h.a.r(t.match(i),function(e){h.a.Y(n,e,r)}),e.className=n.join(" ")}},Xa:function(t,r){var i=h.a.c(r);(null===i||i===e)&&(i="");var n=h.e.firstChild(t);!n||3!=n.nodeType||h.e.nextSibling(n)?h.e.U(t,[t.ownerDocument.createTextNode(i)]):n.data=i,h.a.Vb(t)},Cb:function(e,t){if(e.name=t,7>=p)try{e.mergeAttributes(n.createElement("<input name='"+e.name+"'/>"),!1)}catch(r){}},Vb:function(e){p>=9&&(e=1==e.nodeType?e:e.parentNode,e.style&&(e.style.zoom=e.style.zoom))},Tb:function(e){if(p){var t=e.style.width;e.style.width=0,e.style.width=t}},ic:function(e,t){e=h.a.c(e),t=h.a.c(t);for(var r=[],i=e;t>=i;i++)r.push(i);return r},R:function(e){for(var t=[],r=0,i=e.length;i>r;r++)t.push(e[r]);return t},mc:6===p,nc:7===p,oa:p,ob:function(e,t){for(var r=h.a.R(e.getElementsByTagName("input")).concat(h.a.R(e.getElementsByTagName("textarea"))),i="string"==typeof t?function(e){return e.name===t}:function(e){return t.test(e.name)},n=[],o=r.length-1;o>=0;o--)i(r[o])&&n.push(r[o]);return n},fc:function(e){return"string"==typeof e&&(e=h.a.ta(e))?s&&s.parse?s.parse(e):new Function("return "+e)():null},Ya:function(e,t,r){if(!s||!s.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");return s.stringify(h.a.c(e),t,r)},gc:function(e,r,i){i=i||{};var o=i.params||{},a=i.includeFields||this.mb,s=e;if("object"==typeof e&&"form"===h.a.B(e))for(var s=e.action,l=a.length-1;l>=0;l--)for(var u=h.a.ob(e,a[l]),c=u.length-1;c>=0;c--)o[u[c].name]=u[c].value;r=h.a.c(r);var d=n.createElement("form");d.style.display="none",d.action=s,d.method="post";for(var m in r)e=n.createElement("input"),e.name=m,e.value=h.a.Ya(h.a.c(r[m])),d.appendChild(e);t(o,function(e,t){var r=n.createElement("input");r.name=e,r.value=t,d.appendChild(r)}),n.body.appendChild(d),i.submitter?i.submitter(d):d.submit(),setTimeout(function(){d.parentNode.removeChild(d)},0)}}}(),h.b("utils",h.a),h.b("utils.arrayForEach",h.a.r),h.b("utils.arrayFirst",h.a.hb),h.b("utils.arrayFilter",h.a.la),h.b("utils.arrayGetDistinctValues",h.a.ib),h.b("utils.arrayIndexOf",h.a.l),h.b("utils.arrayMap",h.a.ya),h.b("utils.arrayPushAll",h.a.$),h.b("utils.arrayRemoveItem",h.a.ma),h.b("utils.extend",h.a.extend),h.b("utils.fieldsIncludedWithJsonPost",h.a.mb),h.b("utils.getFormFields",h.a.ob),h.b("utils.peekObservable",h.a.Sa),h.b("utils.postJson",h.a.gc),h.b("utils.parseJson",h.a.fc),h.b("utils.registerEventHandler",h.a.q),h.b("utils.stringifyJson",h.a.Ya),h.b("utils.range",h.a.ic),h.b("utils.toggleDomNodeCssClass",h.a.ua),h.b("utils.triggerEvent",h.a.ha),h.b("utils.unwrapObservable",h.a.c),h.b("utils.objectForEach",h.a.A),h.b("utils.addOrRemoveItem",h.a.Y),h.b("unwrap",h.a.c),Function.prototype.bind||(Function.prototype.bind=function(e){var t=this,r=Array.prototype.slice.call(arguments);return e=r.shift(),function(){return t.apply(e,r.concat(Array.prototype.slice.call(arguments)))}}),h.a.f=new function(){function t(t,o){var a=t[i];if(!a||"null"===a||!n[a]){if(!o)return e;a=t[i]="ko"+r++,n[a]={}}return n[a]}var r=0,i="__ko__"+(new Date).getTime(),n={};return{get:function(r,i){var n=t(r,!1);return n===e?e:n[i]},set:function(r,i,n){(n!==e||t(r,!1)!==e)&&(t(r,!0)[i]=n)},clear:function(e){var t=e[i];return t?(delete n[t],e[i]=null,!0):!1},L:function(){return r++ +i}}},h.b("utils.domData",h.a.f),h.b("utils.domData.clear",h.a.f.clear),h.a.u=new function(){function t(t,r){var n=h.a.f.get(t,i);return n===e&&r&&(n=[],h.a.f.set(t,i,n)),n}function r(e){var i=t(e,!1);if(i)for(var i=i.slice(0),n=0;n<i.length;n++)i[n](e);if(h.a.f.clear(e),h.a.u.cleanExternalData(e),o[e.nodeType])for(i=e.firstChild;e=i;)i=e.nextSibling,8===e.nodeType&&r(e)}var i=h.a.f.L(),n={1:!0,8:!0,9:!0},o={1:!0,9:!0};return{ja:function(e,r){if("function"!=typeof r)throw Error("Callback must be a function");t(e,!0).push(r)},Ab:function(r,n){var o=t(r,!1);o&&(h.a.ma(o,n),0==o.length&&h.a.f.set(r,i,e))},M:function(e){if(n[e.nodeType]&&(r(e),o[e.nodeType])){var t=[];h.a.$(t,e.getElementsByTagName("*"));for(var i=0,a=t.length;a>i;i++)r(t[i])}return e},removeNode:function(e){h.M(e),e.parentNode&&e.parentNode.removeChild(e)},cleanExternalData:function(e){a&&"function"==typeof a.cleanData&&a.cleanData([e])}}},h.M=h.a.u.M,h.removeNode=h.a.u.removeNode,h.b("cleanNode",h.M),h.b("removeNode",h.removeNode),h.b("utils.domNodeDisposal",h.a.u),h.b("utils.domNodeDisposal.addDisposeCallback",h.a.u.ja),h.b("utils.domNodeDisposal.removeDisposeCallback",h.a.u.Ab),function(){h.a.Qa=function(e){var t;if(a){if(a.parseHTML)t=a.parseHTML(e)||[];else if((t=a.clean([e]))&&t[0]){for(e=t[0];e.parentNode&&11!==e.parentNode.nodeType;)e=e.parentNode;e.parentNode&&e.parentNode.removeChild(e)}}else{var r=h.a.ta(e).toLowerCase();for(t=n.createElement("div"),r=r.match(/^<(thead|tbody|tfoot)/)&&[1,"<table>","</table>"]||!r.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!r.indexOf("<td")||!r.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||[0,"",""],e="ignored<div>"+r[1]+e+r[2]+"</div>","function"==typeof i.innerShiv?t.appendChild(i.innerShiv(e)):t.innerHTML=e;r[0]--;)t=t.lastChild;t=h.a.R(t.lastChild.childNodes)}return t},h.a.Va=function(t,r){if(h.a.Fa(t),r=h.a.c(r),null!==r&&r!==e)if("string"!=typeof r&&(r=r.toString()),a)a(t).html(r);else for(var i=h.a.Qa(r),n=0;n<i.length;n++)t.appendChild(i[n])}}(),h.b("utils.parseHtmlFragment",h.a.Qa),h.b("utils.setHtml",h.a.Va),h.w=function(){function t(e,r){if(e)if(8==e.nodeType){var i=h.w.xb(e.nodeValue);null!=i&&r.push({Rb:e,cc:i})}else if(1==e.nodeType)for(var i=0,n=e.childNodes,o=n.length;o>i;i++)t(n[i],r)}var r={};return{Na:function(e){if("function"!=typeof e)throw Error("You can only pass a function to ko.memoization.memoize()");var t=(0|4294967296*(1+Math.random())).toString(16).substring(1)+(0|4294967296*(1+Math.random())).toString(16).substring(1);return r[t]=e,"<!--[ko_memo:"+t+"]-->"},Hb:function(t,i){var n=r[t];if(n===e)throw Error("Couldn't find any memo with ID "+t+". Perhaps it's already been unmemoized.");try{return n.apply(null,i||[]),!0}finally{delete r[t]}},Ib:function(e,r){var i=[];t(e,i);for(var n=0,o=i.length;o>n;n++){var a=i[n].Rb,s=[a];r&&h.a.$(s,r),h.w.Hb(i[n].cc,s),a.nodeValue="",a.parentNode&&a.parentNode.removeChild(a)}},xb:function(e){return(e=e.match(/^\[ko_memo\:(.*?)\]$/))?e[1]:null}}}(),h.b("memoization",h.w),h.b("memoization.memoize",h.w.Na),h.b("memoization.unmemoize",h.w.Hb),h.b("memoization.parseMemoText",h.w.xb),h.b("memoization.unmemoizeDomNodeAndDescendants",h.w.Ib),h.Ga={throttle:function(e,t){e.throttleEvaluation=t;var r=null;return h.h({read:e,write:function(i){clearTimeout(r),r=setTimeout(function(){e(i)},t)}})},rateLimit:function(e,t){var r,i,n;"number"==typeof t?r=t:(r=t.timeout,i=t.method),n="notifyWhenChangesStop"==i?u:l,e.Ma(function(e){return n(e,r)})},notify:function(e,t){e.equalityComparer="always"==t?null:r}};var d={undefined:1,"boolean":1,number:1,string:1};h.b("extenders",h.Ga),h.Fb=function(e,t,r){this.target=e,this.za=t,this.Qb=r,this.sb=!1,h.s(this,"dispose",this.F)},h.Fb.prototype.F=function(){this.sb=!0,this.Qb()},h.N=function(){h.a.sa(this,h.N.fn),this.H={}};var m="change";t={V:function(e,t,r){var i=this;r=r||m;var n=new h.Fb(i,t?e.bind(t):e,function(){h.a.ma(i.H[r],n)});return i.o&&i.o(),i.H[r]||(i.H[r]=[]),i.H[r].push(n),n},notifySubscribers:function(e,t){if(t=t||m,this.qb(t))try{h.k.jb();for(var r,i=this.H[t].slice(0),n=0;r=i[n];++n)r.sb||r.za(e)}finally{h.k.end()}},Ma:function(e){var t,r,i,n=this,o=h.v(n);n.ia||(n.ia=n.notifySubscribers,n.notifySubscribers=function(e,t){t&&t!==m?"beforeChange"===t?n.bb(e):n.ia(e,t):n.cb(e)});var a=e(function(){o&&i===n&&(i=n()),t=!1,n.Ka(r,i)&&n.ia(r=i)});n.cb=function(e){t=!0,i=e,a()},n.bb=function(e){t||(r=e,n.ia(e,"beforeChange"))}},qb:function(e){return this.H[e]&&this.H[e].length},Wb:function(){var e=0;return h.a.A(this.H,function(t,r){e+=r.length}),e},Ka:function(e,t){return!this.equalityComparer||!this.equalityComparer(e,t)},extend:function(e){var t=this;return e&&h.a.A(e,function(e,r){var i=h.Ga[e];"function"==typeof i&&(t=i(t,r)||t)}),t}},h.s(t,"subscribe",t.V),h.s(t,"extend",t.extend),h.s(t,"getSubscriptionsCount",t.Wb),h.a.na&&h.a.ra(t,Function.prototype),h.N.fn=t,h.tb=function(e){return null!=e&&"function"==typeof e.V&&"function"==typeof e.notifySubscribers},h.b("subscribable",h.N),h.b("isSubscribable",h.tb),h.ca=h.k=function(){function e(e){i.push(r),r=e}function t(){r=i.pop()}var r,i=[],n=0;return{jb:e,end:t,zb:function(e){if(r){if(!h.tb(e))throw Error("Only subscribable things can act as dependencies");r.za(e,e.Kb||(e.Kb=++n))}},t:function(r,i,n){try{return e(),r.apply(i,n||[])}finally{t()}},fa:function(){return r?r.ba.fa():void 0},pa:function(){return r?r.pa:void 0}}}(),h.b("computedContext",h.ca),h.b("computedContext.getDependenciesCount",h.ca.fa),h.b("computedContext.isInitial",h.ca.pa),h.m=function(e){function t(){return 0<arguments.length?(t.Ka(r,arguments[0])&&(t.P(),r=arguments[0],t.O()),this):(h.k.zb(t),r)}var r=e;return h.N.call(t),h.a.sa(t,h.m.fn),t.o=function(){return r},t.O=function(){t.notifySubscribers(r)},t.P=function(){t.notifySubscribers(r,"beforeChange")},h.s(t,"peek",t.o),h.s(t,"valueHasMutated",t.O),h.s(t,"valueWillMutate",t.P),t},h.m.fn={equalityComparer:r};var p=h.m.hc="__ko_proto__";h.m.fn[p]=h.m,h.a.na&&h.a.ra(h.m.fn,h.N.fn),h.Ha=function(t,r){return null===t||t===e||t[p]===e?!1:t[p]===r?!0:h.Ha(t[p],r)},h.v=function(e){return h.Ha(e,h.m)},h.ub=function(e){return"function"==typeof e&&e[p]===h.m||"function"==typeof e&&e[p]===h.h&&e.Yb?!0:!1},h.b("observable",h.m),h.b("isObservable",h.v),h.b("isWriteableObservable",h.ub),h.T=function(e){if(e=e||[],"object"!=typeof e||!("length"in e))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");return e=h.m(e),h.a.sa(e,h.T.fn),e.extend({trackArrayChanges:!0})},h.T.fn={remove:function(e){for(var t=this.o(),r=[],i="function"!=typeof e||h.v(e)?function(t){return t===e}:e,n=0;n<t.length;n++){var o=t[n];i(o)&&(0===r.length&&this.P(),r.push(o),t.splice(n,1),n--)}return r.length&&this.O(),r},removeAll:function(t){if(t===e){var r=this.o(),i=r.slice(0);return this.P(),r.splice(0,r.length),this.O(),i}return t?this.remove(function(e){return 0<=h.a.l(t,e)}):[]},destroy:function(e){var t=this.o(),r="function"!=typeof e||h.v(e)?function(t){return t===e}:e;this.P();for(var i=t.length-1;i>=0;i--)r(t[i])&&(t[i]._destroy=!0);this.O()},destroyAll:function(t){return t===e?this.destroy(function(){return!0}):t?this.destroy(function(e){return 0<=h.a.l(t,e)}):[]},indexOf:function(e){var t=this();return h.a.l(t,e)},replace:function(e,t){var r=this.indexOf(e);r>=0&&(this.P(),this.o()[r]=t,this.O())}},h.a.r("pop push reverse shift sort splice unshift".split(" "),function(e){h.T.fn[e]=function(){var t=this.o();return this.P(),this.kb(t,e,arguments),t=t[e].apply(t,arguments),this.O(),t}}),h.a.r(["slice"],function(e){h.T.fn[e]=function(){var t=this();return t[e].apply(t,arguments)}}),h.a.na&&h.a.ra(h.T.fn,h.m.fn),h.b("observableArray",h.T);var f="arrayChange";h.Ga.trackArrayChanges=function(e){function t(){if(!r){r=!0;var t=e.notifySubscribers;e.notifySubscribers=function(e,r){return r&&r!==m||++n,t.apply(this,arguments)};var o=[].concat(e.o()||[]);i=null,e.V(function(t){if(t=[].concat(t||[]),e.qb(f)){var r;(!i||n>1)&&(i=h.a.Aa(o,t,{sparse:!0})),r=i,r.length&&e.notifySubscribers(r,f)}o=t,i=null,n=0})}}if(!e.kb){var r=!1,i=null,n=0,o=e.V;e.V=e.subscribe=function(e,r,i){return i===f&&t(),o.apply(this,arguments)},e.kb=function(e,t,o){function a(e,t,r){return s[s.length]={status:e,value:t,index:r}}if(r&&!n){var s=[],l=e.length,u=o.length,c=0;switch(t){case"push":c=l;case"unshift":for(t=0;u>t;t++)a("added",o[t],c+t);break;case"pop":c=l-1;case"shift":l&&a("deleted",e[c],c);break;case"splice":t=Math.min(Math.max(0,0>o[0]?l+o[0]:o[0]),l);for(var l=1===u?l:Math.min(t+(o[1]||0),l),u=t+u-2,c=Math.max(l,u),d=[],m=[],p=2;c>t;++t,++p)l>t&&m.push(a("deleted",e[t],t)),u>t&&d.push(a("added",o[p],t));h.a.nb(m,d);break;default:return}i=s}}}},h.ba=h.h=function(e,t,r){function i(){m=!0,h.a.A(C,function(e,t){t.F()}),C={},w=0,u=!1}function n(){var e=a.throttleEvaluation;e&&e>=0?(clearTimeout(S),S=setTimeout(o,e)):a.wa?a.wa():o()}function o(){if(!c&&!m){if(_&&_()){if(!d)return y(),void 0}else d=!1;c=!0;try{var e=C,r=w;h.k.jb({za:function(t,i){m||(r&&e[i]?(C[i]=e[i],++w,delete e[i],--r):C[i]||(C[i]=t.V(n),++w))},ba:a,pa:!w}),C={},w=0;try{var i=t?p.call(t):p()}finally{h.k.end(),r&&h.a.A(e,function(e,t){t.F()}),u=!1}a.Ka(l,i)&&(a.notifySubscribers(l,"beforeChange"),l=i,a.wa&&!a.throttleEvaluation||a.notifySubscribers(l))}finally{c=!1}w||y()}}function a(){if(0<arguments.length){if("function"!=typeof f)throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");return f.apply(t,arguments),this}return u&&o(),h.k.zb(a),l}function s(){return u||w>0}var l,u=!0,c=!1,d=!1,m=!1,p=e;if(p&&"object"==typeof p?(r=p,p=r.read):(r=r||{},p||(p=r.read)),"function"!=typeof p)throw Error("Pass a function that returns the value of the ko.computed");var f=r.write,v=r.disposeWhenNodeIsRemoved||r.G||null,g=r.disposeWhen||r.Da,_=g,y=i,C={},w=0,S=null;t||(t=r.owner),h.N.call(a),h.a.sa(a,h.h.fn),a.o=function(){return u&&!w&&o(),l},a.fa=function(){return w},a.Yb="function"==typeof r.write,a.F=function(){y()},a.ga=s;var E=a.Ma;return a.Ma=function(e){E.call(a,e),a.wa=function(){a.bb(l),u=!0,a.cb(a)}},h.s(a,"peek",a.o),h.s(a,"dispose",a.F),h.s(a,"isActive",a.ga),h.s(a,"getDependenciesCount",a.fa),v&&(d=!0,v.nodeType&&(_=function(){return!h.a.Ea(v)||g&&g()})),!0!==r.deferEvaluation&&o(),v&&s()&&v.nodeType&&(y=function(){h.a.u.Ab(v,y),i()},h.a.u.ja(v,y)),a},h.$b=function(e){return h.Ha(e,h.h)},t=h.m.hc,h.h[t]=h.m,h.h.fn={equalityComparer:r},h.h.fn[t]=h.h,h.a.na&&h.a.ra(h.h.fn,h.N.fn),h.b("dependentObservable",h.h),h.b("computed",h.h),h.b("isComputed",h.$b),function(){function t(n,o,a){if(a=a||new i,n=o(n),"object"!=typeof n||null===n||n===e||n instanceof Date||n instanceof String||n instanceof Number||n instanceof Boolean)return n;var s=n instanceof Array?[]:{};return a.save(n,s),r(n,function(r){var i=o(n[r]);switch(typeof i){case"boolean":case"number":case"string":case"function":s[r]=i;break;case"object":case"undefined":var l=a.get(i);s[r]=l!==e?l:t(i,o,a)}}),s}function r(e,t){if(e instanceof Array){for(var r=0;r<e.length;r++)t(r);"function"==typeof e.toJSON&&t("toJSON")}else for(r in e)t(r)}function i(){this.keys=[],this.ab=[]}h.Gb=function(e){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return t(e,function(e){for(var t=0;h.v(e)&&10>t;t++)e=e();return e})},h.toJSON=function(e,t,r){return e=h.Gb(e),h.a.Ya(e,t,r)},i.prototype={save:function(e,t){var r=h.a.l(this.keys,e);r>=0?this.ab[r]=t:(this.keys.push(e),this.ab.push(t))},get:function(t){return t=h.a.l(this.keys,t),t>=0?this.ab[t]:e}}}(),h.b("toJS",h.Gb),h.b("toJSON",h.toJSON),function(){h.i={p:function(t){switch(h.a.B(t)){case"option":return!0===t.__ko__hasDomDataOptionValue__?h.a.f.get(t,h.d.options.Pa):7>=h.a.oa?t.getAttributeNode("value")&&t.getAttributeNode("value").specified?t.value:t.text:t.value;case"select":return 0<=t.selectedIndex?h.i.p(t.options[t.selectedIndex]):e;default:return t.value}},X:function(t,r,i){switch(h.a.B(t)){case"option":switch(typeof r){case"string":h.a.f.set(t,h.d.options.Pa,e),"__ko__hasDomDataOptionValue__"in t&&delete t.__ko__hasDomDataOptionValue__,t.value=r;break;default:h.a.f.set(t,h.d.options.Pa,r),t.__ko__hasDomDataOptionValue__=!0,t.value="number"==typeof r?r:""}break;case"select":(""===r||null===r)&&(r=e);for(var n,o=-1,a=0,s=t.options.length;s>a;++a)if(n=h.i.p(t.options[a]),n==r||""==n&&r===e){o=a;break}(i||o>=0||r===e&&1<t.size)&&(t.selectedIndex=o);break;default:(null===r||r===e)&&(r=""),t.value=r}}}}(),h.b("selectExtensions",h.i),h.b("selectExtensions.readValue",h.i.p),h.b("selectExtensions.writeValue",h.i.X),h.g=function(){function e(e){e=h.a.ta(e),123===e.charCodeAt(0)&&(e=e.slice(1,-1));var t,r,a=[],s=e.match(i),l=0;if(s){s.push(",");for(var u,c=0;u=s[c];++c){var d=u.charCodeAt(0);if(44===d){if(0>=l){t&&a.push(r?{key:t,value:r.join("")}:{unknown:t}),t=r=l=0;continue}}else if(58===d){if(!r)continue}else if(47===d&&c&&1<u.length)(d=s[c-1].match(n))&&!o[d[0]]&&(e=e.substr(e.indexOf(u)+1),s=e.match(i),s.push(","),c=-1,u="/");else if(40===d||123===d||91===d)++l;else if(41===d||125===d||93===d)--l;else if(!t&&!r){t=34===d||39===d?u.slice(1,-1):u;continue}r?r.push(u):r=[u]}}return a}var t=["true","false","null","undefined"],r=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,i=RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]","g"),n=/[\])"'A-Za-z0-9_$]+$/,o={"in":1,"return":1,"typeof":1},a={};return{aa:[],W:a,Ra:e,qa:function(i,n){function o(e,i){var n,c=h.getBindingHandler(e);(c&&c.preprocess?i=c.preprocess(i,e,o):1)&&((c=a[e])&&(n=i,0<=h.a.l(t,n)?n=!1:(c=n.match(r),n=null===c?!1:c[1]?"Object("+c[1]+")"+c[2]:n),c=n),c&&l.push("'"+e+"':function(_z){"+n+"=_z}"),u&&(i="function(){return "+i+" }"),s.push("'"+e+"':"+i))}n=n||{};var s=[],l=[],u=n.valueAccessors,c="string"==typeof i?e(i):i;return h.a.r(c,function(e){o(e.key||e.unknown,e.value)}),l.length&&o("_ko_property_writers","{"+l.join(",")+" }"),s.join(",")},bc:function(e,t){for(var r=0;r<e.length;r++)if(e[r].key==t)return!0;return!1},va:function(e,t,r,i,n){e&&h.v(e)?!h.ub(e)||n&&e.o()===i||e(i):(e=t.get("_ko_property_writers"))&&e[r]&&e[r](i)}}}(),h.b("expressionRewriting",h.g),h.b("expressionRewriting.bindingRewriteValidators",h.g.aa),h.b("expressionRewriting.parseObjectLiteral",h.g.Ra),h.b("expressionRewriting.preProcessBindings",h.g.qa),h.b("expressionRewriting._twoWayBindings",h.g.W),h.b("jsonExpressionRewriting",h.g),h.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",h.g.qa),function(){function e(e){return 8==e.nodeType&&a.test(o?e.text:e.nodeValue)}function t(e){return 8==e.nodeType&&s.test(o?e.text:e.nodeValue)}function r(r,i){for(var n=r,o=1,a=[];n=n.nextSibling;){if(t(n)&&(o--,0===o))return a;a.push(n),e(n)&&o++}if(!i)throw Error("Cannot find closing comment tag to match: "+r.nodeValue);return null}function i(e,t){var i=r(e,t);return i?0<i.length?i[i.length-1].nextSibling:e.nextSibling:null}var o=n&&"<!--test-->"===n.createComment("test").text,a=o?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,s=o?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,l={ul:!0,ol:!0};h.e={Q:{},childNodes:function(t){return e(t)?r(t):t.childNodes},da:function(t){if(e(t)){t=h.e.childNodes(t);for(var r=0,i=t.length;i>r;r++)h.removeNode(t[r])}else h.a.Fa(t)},U:function(t,r){if(e(t)){h.e.da(t);for(var i=t.nextSibling,n=0,o=r.length;o>n;n++)i.parentNode.insertBefore(r[n],i)}else h.a.U(t,r)},yb:function(t,r){e(t)?t.parentNode.insertBefore(r,t.nextSibling):t.firstChild?t.insertBefore(r,t.firstChild):t.appendChild(r)},rb:function(t,r,i){i?e(t)?t.parentNode.insertBefore(r,i.nextSibling):i.nextSibling?t.insertBefore(r,i.nextSibling):t.appendChild(r):h.e.yb(t,r)},firstChild:function(r){return e(r)?!r.nextSibling||t(r.nextSibling)?null:r.nextSibling:r.firstChild},nextSibling:function(r){return e(r)&&(r=i(r)),r.nextSibling&&t(r.nextSibling)?null:r.nextSibling},Xb:e,lc:function(e){return(e=(o?e.text:e.nodeValue).match(a))?e[1]:null},wb:function(r){if(l[h.a.B(r)]){var n=r.firstChild;if(n)do if(1===n.nodeType){var o;o=n.firstChild;var a=null;if(o)do if(a)a.push(o);else if(e(o)){var s=i(o,!0);s?o=s:a=[o]}else t(o)&&(a=[o]);while(o=o.nextSibling);if(o=a)for(a=n.nextSibling,s=0;s<o.length;s++)a?r.insertBefore(o[s],a):r.appendChild(o[s])}while(n=n.nextSibling)}}}}(),h.b("virtualElements",h.e),h.b("virtualElements.allowedBindings",h.e.Q),h.b("virtualElements.emptyNode",h.e.da),h.b("virtualElements.insertAfter",h.e.rb),h.b("virtualElements.prepend",h.e.yb),h.b("virtualElements.setDomNodeChildren",h.e.U),function(){h.J=function(){this.Nb={}},h.a.extend(h.J.prototype,{nodeHasBindings:function(e){switch(e.nodeType){case 1:return null!=e.getAttribute("data-bind");case 8:return h.e.Xb(e);default:return!1}},getBindings:function(e,t){var r=this.getBindingsString(e,t);return r?this.parseBindingsString(r,t,e):null},getBindingAccessors:function(e,t){var r=this.getBindingsString(e,t);return r?this.parseBindingsString(r,t,e,{valueAccessors:!0}):null},getBindingsString:function(e){switch(e.nodeType){case 1:return e.getAttribute("data-bind");case 8:return h.e.lc(e);default:return null}},parseBindingsString:function(e,t,r,i){try{var n,o=this.Nb,a=e+(i&&i.valueAccessors||"");if(!(n=o[a])){var s,l="with($context){with($data||{}){return{"+h.g.qa(e,i)+"}}}";s=new Function("$context","$element",l),n=o[a]=s}return n(t,r)}catch(u){throw u.message="Unable to parse bindings.\nBindings value: "+e+"\nMessage: "+u.message,u}}}),h.J.instance=new h.J}(),h.b("bindingProvider",h.J),function(){function t(e){return function(){return e}}function r(e){return e()}function n(e){return h.a.Oa(h.k.t(e),function(t,r){return function(){return e()[r]}})}function o(e,t){return n(this.getBindings.bind(this,e,t))}function s(e,t,r){var i,n=h.e.firstChild(t),o=h.J.instance,a=o.preprocessNode;if(a){for(;i=n;)n=h.e.nextSibling(i),a.call(o,i);n=h.e.firstChild(t)}for(;i=n;)n=h.e.nextSibling(i),l(e,i,r)}function l(e,t,r){var i=!0,n=1===t.nodeType;n&&h.e.wb(t),(n&&r||h.J.instance.nodeHasBindings(t))&&(i=c(t,null,e,r).shouldBindDescendants),i&&!m[h.a.B(t)]&&s(e,t,!n)}function u(e){var t=[],r={},i=[];return h.a.A(e,function n(o){if(!r[o]){var a=h.getBindingHandler(o);a&&(a.after&&(i.push(o),h.a.r(a.after,function(t){if(e[t]){if(-1!==h.a.l(i,t))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+i.join(", "));n(t)}}),i.length--),t.push({key:o,pb:a})),r[o]=!0}}),t}function c(t,i,n,a){var s=h.a.f.get(t,p);if(!i){if(s)throw Error("You cannot apply bindings multiple times to the same element.");h.a.f.set(t,p,!0)}!s&&a&&h.Eb(t,n);var l;if(i&&"function"!=typeof i)l=i;else{var c=h.J.instance,d=c.getBindingAccessors||o,m=h.h(function(){return(l=i?i(n,t):d.call(c,t,n))&&n.D&&n.D(),l},null,{G:t});l&&m.ga()||(m=null)}var f;if(l){var v=m?function(e){return function(){return r(m()[e])}}:function(e){return l[e]},g=function(){return h.a.Oa(m?m():l,r)};g.get=function(e){return l[e]&&r(v(e))},g.has=function(e){return e in l},a=u(l),h.a.r(a,function(r){var i=r.pb.init,o=r.pb.update,a=r.key;if(8===t.nodeType&&!h.e.Q[a])throw Error("The binding '"+a+"' cannot be used with virtual elements");try{"function"==typeof i&&h.k.t(function(){var r=i(t,v(a),g,n.$data,n);if(r&&r.controlsDescendantBindings){if(f!==e)throw Error("Multiple bindings ("+f+" and "+a+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");f=a}}),"function"==typeof o&&h.h(function(){o(t,v(a),g,n.$data,n)},null,{G:t})}catch(s){throw s.message='Unable to process binding "'+a+": "+l[a]+'"\nMessage: '+s.message,s}})}return{shouldBindDescendants:f===e}}function d(e){return e&&e instanceof h.I?e:new h.I(e)}h.d={};var m={script:!0};h.getBindingHandler=function(e){return h.d[e]},h.I=function(t,r,i,n){var o,a=this,s="function"==typeof t&&!h.v(t),l=h.h(function(){var e=s?t():t,o=h.a.c(e);return r?(r.D&&r.D(),h.a.extend(a,r),l&&(a.D=l)):(a.$parents=[],a.$root=o,a.ko=h),a.$rawData=e,a.$data=o,i&&(a[i]=o),n&&n(a,r,o),a.$data},null,{Da:function(){return o&&!h.a.eb(o)},G:!0});l.ga()&&(a.D=l,l.equalityComparer=null,o=[],l.Jb=function(t){o.push(t),h.a.u.ja(t,function(t){h.a.ma(o,t),o.length||(l.F(),a.D=l=e)})})},h.I.prototype.createChildContext=function(e,t,r){return new h.I(e,this,t,function(e,t){e.$parentContext=t,e.$parent=t.$data,e.$parents=(t.$parents||[]).slice(0),e.$parents.unshift(e.$parent),r&&r(e)})},h.I.prototype.extend=function(e){return new h.I(this.D||this.$data,this,null,function(t,r){t.$rawData=r.$rawData,h.a.extend(t,"function"==typeof e?e():e)})};var p=h.a.f.L(),f=h.a.f.L();h.Eb=function(e,t){return 2!=arguments.length?h.a.f.get(e,f):(h.a.f.set(e,f,t),t.D&&t.D.Jb(e),void 0)},h.xa=function(e,t,r){return 1===e.nodeType&&h.e.wb(e),c(e,t,d(r),!0)},h.Lb=function(e,r,i){return i=d(i),h.xa(e,"function"==typeof r?n(r.bind(null,i,e)):h.a.Oa(r,t),i)},h.gb=function(e,t){1!==t.nodeType&&8!==t.nodeType||s(d(e),t,!0)},h.fb=function(e,t){if(!a&&i.jQuery&&(a=i.jQuery),t&&1!==t.nodeType&&8!==t.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");t=t||i.document.body,l(d(e),t,!0)},h.Ca=function(t){switch(t.nodeType){case 1:case 8:var r=h.Eb(t);if(r)return r;if(t.parentNode)return h.Ca(t.parentNode)}return e},h.Pb=function(t){return(t=h.Ca(t))?t.$data:e},h.b("bindingHandlers",h.d),h.b("applyBindings",h.fb),h.b("applyBindingsToDescendants",h.gb),h.b("applyBindingAccessorsToNode",h.xa),h.b("applyBindingsToNode",h.Lb),h.b("contextFor",h.Ca),h.b("dataFor",h.Pb)}();var v={"class":"className","for":"htmlFor"};h.d.attr={update:function(t,r){var i=h.a.c(r())||{};h.a.A(i,function(r,i){i=h.a.c(i);var n=!1===i||null===i||i===e;n&&t.removeAttribute(r),8>=h.a.oa&&r in v?(r=v[r],n?t.removeAttribute(r):t[r]=i):n||t.setAttribute(r,i.toString()),"name"===r&&h.a.Cb(t,n?"":i.toString())})}},function(){h.d.checked={after:["value","attr"],init:function(t,r,i){function n(){return i.has("checkedValue")?h.a.c(i.get("checkedValue")):t.value}function o(){var e=t.checked,o=d?n():e;if(!h.ca.pa()&&(!l||e)){var a=h.k.t(r);u?c!==o?(e&&(h.a.Y(a,o,!0),h.a.Y(a,c,!1)),c=o):h.a.Y(a,o,e):h.g.va(a,i,"checked",o,!0)}}function a(){var e=h.a.c(r());t.checked=u?0<=h.a.l(e,n()):s?e:n()===e}var s="checkbox"==t.type,l="radio"==t.type;if(s||l){var u=s&&h.a.c(r())instanceof Array,c=u?n():e,d=l||u;l&&!t.name&&h.d.uniqueName.init(t,function(){return!0}),h.ba(o,null,{G:t}),h.a.q(t,"click",o),h.ba(a,null,{G:t})}}},h.g.W.checked=!0,h.d.checkedValue={update:function(e,t){e.value=h.a.c(t())}}}(),h.d.css={update:function(e,t){var r=h.a.c(t());"object"==typeof r?h.a.A(r,function(t,r){r=h.a.c(r),h.a.ua(e,t,r)}):(r=String(r||""),h.a.ua(e,e.__ko__cssValue,!1),e.__ko__cssValue=r,h.a.ua(e,r,!0))}},h.d.enable={update:function(e,t){var r=h.a.c(t());r&&e.disabled?e.removeAttribute("disabled"):r||e.disabled||(e.disabled=!0)}},h.d.disable={update:function(e,t){h.d.enable.update(e,function(){return!h.a.c(t())})}},h.d.event={init:function(e,t,r,i,n){var o=t()||{};h.a.A(o,function(o){"string"==typeof o&&h.a.q(e,o,function(e){var a,s=t()[o];if(s){try{var l=h.a.R(arguments);i=n.$data,l.unshift(i),a=s.apply(i,l)}finally{!0!==a&&(e.preventDefault?e.preventDefault():e.returnValue=!1)}!1===r.get(o+"Bubble")&&(e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation())}})})}},h.d.foreach={vb:function(e){return function(){var t=e(),r=h.a.Sa(t);return r&&"number"!=typeof r.length?(h.a.c(t),{foreach:r.data,as:r.as,includeDestroyed:r.includeDestroyed,afterAdd:r.afterAdd,beforeRemove:r.beforeRemove,afterRender:r.afterRender,beforeMove:r.beforeMove,afterMove:r.afterMove,templateEngine:h.K.Ja}):{foreach:t,templateEngine:h.K.Ja}}},init:function(e,t){return h.d.template.init(e,h.d.foreach.vb(t))},update:function(e,t,r,i,n){return h.d.template.update(e,h.d.foreach.vb(t),r,i,n)}},h.g.aa.foreach=!1,h.e.Q.foreach=!0,h.d.hasfocus={init:function(e,t,r){function i(i){e.__ko_hasfocusUpdating=!0;var n=e.ownerDocument;if("activeElement"in n){var o;try{o=n.activeElement}catch(a){o=n.body}i=o===e}n=t(),h.g.va(n,r,"hasfocus",i,!0),e.__ko_hasfocusLastValue=i,e.__ko_hasfocusUpdating=!1}var n=i.bind(null,!0),o=i.bind(null,!1);h.a.q(e,"focus",n),h.a.q(e,"focusin",n),h.a.q(e,"blur",o),h.a.q(e,"focusout",o)},update:function(e,t){var r=!!h.a.c(t());e.__ko_hasfocusUpdating||e.__ko_hasfocusLastValue===r||(r?e.focus():e.blur(),h.k.t(h.a.ha,null,[e,r?"focusin":"focusout"]))}},h.g.W.hasfocus=!0,h.d.hasFocus=h.d.hasfocus,h.g.W.hasFocus=!0,h.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(e,t){h.a.Va(e,t())}},c("if"),c("ifnot",!1,!0),c("with",!0,!1,function(e,t){return e.createChildContext(t)});var g={};h.d.options={init:function(e){if("select"!==h.a.B(e))throw Error("options binding applies only to SELECT elements");for(;0<e.length;)e.remove(0);return{controlsDescendantBindings:!0}},update:function(t,r,i){function n(){return h.a.la(t.options,function(e){return e.selected
})}function o(e,t,r){var i=typeof t;return"function"==i?t(e):"string"==i?e[t]:r}function a(e,r){if(d.length){var i=0<=h.a.l(d,h.i.p(r[0]));h.a.Db(r[0],i),m&&!i&&h.k.t(h.a.ha,null,[t,"change"])}}var s=0!=t.length&&t.multiple?t.scrollTop:null,l=h.a.c(r()),u=i.get("optionsIncludeDestroyed");r={};var c,d;d=t.multiple?h.a.ya(n(),h.i.p):0<=t.selectedIndex?[h.i.p(t.options[t.selectedIndex])]:[],l&&("undefined"==typeof l.length&&(l=[l]),c=h.a.la(l,function(t){return u||t===e||null===t||!h.a.c(t._destroy)}),i.has("optionsCaption")&&(l=h.a.c(i.get("optionsCaption")),null!==l&&l!==e&&c.unshift(g)));var m=!1;r.beforeRemove=function(e){t.removeChild(e)},l=a,i.has("optionsAfterRender")&&(l=function(t,r){a(0,r),h.k.t(i.get("optionsAfterRender"),null,[r[0],t!==g?t:e])}),h.a.Ua(t,c,function(r,n,a){return a.length&&(d=a[0].selected?[h.i.p(a[0])]:[],m=!0),n=t.ownerDocument.createElement("option"),r===g?(h.a.Xa(n,i.get("optionsCaption")),h.i.X(n,e)):(a=o(r,i.get("optionsValue"),r),h.i.X(n,h.a.c(a)),r=o(r,i.get("optionsText"),a),h.a.Xa(n,r)),[n]},r,l),h.k.t(function(){i.get("valueAllowUnset")&&i.has("value")?h.i.X(t,h.a.c(i.get("value")),!0):(t.multiple?d.length&&n().length<d.length:d.length&&0<=t.selectedIndex?h.i.p(t.options[t.selectedIndex])!==d[0]:d.length||0<=t.selectedIndex)&&h.a.ha(t,"change")}),h.a.Tb(t),s&&20<Math.abs(s-t.scrollTop)&&(t.scrollTop=s)}},h.d.options.Pa=h.a.f.L(),h.d.selectedOptions={after:["options","foreach"],init:function(e,t,r){h.a.q(e,"change",function(){var i=t(),n=[];h.a.r(e.getElementsByTagName("option"),function(e){e.selected&&n.push(h.i.p(e))}),h.g.va(i,r,"selectedOptions",n)})},update:function(e,t){if("select"!=h.a.B(e))throw Error("values binding applies only to SELECT elements");var r=h.a.c(t());r&&"number"==typeof r.length&&h.a.r(e.getElementsByTagName("option"),function(e){var t=0<=h.a.l(r,h.i.p(e));h.a.Db(e,t)})}},h.g.W.selectedOptions=!0,h.d.style={update:function(e,t){var r=h.a.c(t()||{});h.a.A(r,function(t,r){r=h.a.c(r),e.style[t]=r||""})}},h.d.submit={init:function(e,t,r,i,n){if("function"!=typeof t())throw Error("The value for a submit binding must be a function");h.a.q(e,"submit",function(r){var i,o=t();try{i=o.call(n.$data,e)}finally{!0!==i&&(r.preventDefault?r.preventDefault():r.returnValue=!1)}})}},h.d.text={init:function(){return{controlsDescendantBindings:!0}},update:function(e,t){h.a.Xa(e,t())}},h.e.Q.text=!0,h.d.uniqueName={init:function(e,t){if(t()){var r="ko_unique_"+ ++h.d.uniqueName.Ob;h.a.Cb(e,r)}}},h.d.uniqueName.Ob=0,h.d.value={after:["options","foreach"],init:function(e,t,r){function i(){a=!1;var i=t(),n=h.i.p(e);h.g.va(i,r,"value",n)}var n=["change"],o=r.get("valueUpdate"),a=!1;o&&("string"==typeof o&&(o=[o]),h.a.$(n,o),n=h.a.ib(n)),!h.a.oa||"input"!=e.tagName.toLowerCase()||"text"!=e.type||"off"==e.autocomplete||e.form&&"off"==e.form.autocomplete||-1!=h.a.l(n,"propertychange")||(h.a.q(e,"propertychange",function(){a=!0}),h.a.q(e,"focus",function(){a=!1}),h.a.q(e,"blur",function(){a&&i()})),h.a.r(n,function(t){var r=i;h.a.kc(t,"after")&&(r=function(){setTimeout(i,0)},t=t.substring(5)),h.a.q(e,t,r)})},update:function(e,t,r){var i=h.a.c(t());if(t=h.i.p(e),i!==t)if("select"===h.a.B(e)){var n=r.get("valueAllowUnset");r=function(){h.i.X(e,i,n)},r(),n||i===h.i.p(e)?setTimeout(r,0):h.k.t(h.a.ha,null,[e,"change"])}else h.i.X(e,i)}},h.g.W.value=!0,h.d.visible={update:function(e,t){var r=h.a.c(t()),i="none"!=e.style.display;r&&!i?e.style.display="":!r&&i&&(e.style.display="none")}},function(e){h.d[e]={init:function(t,r,i,n,o){return h.d.event.init.call(this,t,function(){var t={};return t[e]=r(),t},i,n,o)}}}("click"),h.C=function(){},h.C.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource")},h.C.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock")},h.C.prototype.makeTemplateSource=function(e,t){if("string"==typeof e){t=t||n;var r=t.getElementById(e);if(!r)throw Error("Cannot find template with ID "+e);return new h.n.j(r)}if(1==e.nodeType||8==e.nodeType)return new h.n.Z(e);throw Error("Unknown template type: "+e)},h.C.prototype.renderTemplate=function(e,t,r,i){return e=this.makeTemplateSource(e,i),this.renderTemplateSource(e,t,r)},h.C.prototype.isTemplateRewritten=function(e,t){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(e,t).data("isRewritten")},h.C.prototype.rewriteTemplate=function(e,t,r){e=this.makeTemplateSource(e,r),t=t(e.text()),e.text(t),e.data("isRewritten",!0)},h.b("templateEngine",h.C),h.Za=function(){function e(e,t,r,i){e=h.g.Ra(e);for(var n=h.g.aa,o=0;o<e.length;o++){var a=e[o].key;if(n.hasOwnProperty(a)){var s=n[a];if("function"==typeof s){if(a=s(e[o].value))throw Error(a)}else if(!s)throw Error("This template engine does not support the '"+a+"' binding within its templates")}}return r="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+h.g.qa(e,{valueAccessors:!0})+" } })()},'"+r.toLowerCase()+"')",i.createJavaScriptEvaluatorBlock(r)+t}var t=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,r=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{Ub:function(e,t,r){t.isTemplateRewritten(e,r)||t.rewriteTemplate(e,function(e){return h.Za.dc(e,t)},r)},dc:function(i,n){return i.replace(t,function(t,r,i,o,a){return e(a,r,i,n)}).replace(r,function(t,r){return e(r,"<!-- ko -->","#comment",n)})},Mb:function(e,t){return h.w.Na(function(r,i){var n=r.nextSibling;n&&n.nodeName.toLowerCase()===t&&h.xa(n,e,i)})}}}(),h.b("__tr_ambtns",h.Za.Mb),function(){h.n={},h.n.j=function(e){this.j=e},h.n.j.prototype.text=function(){var e=h.a.B(this.j),e="script"===e?"text":"textarea"===e?"value":"innerHTML";if(0==arguments.length)return this.j[e];var t=arguments[0];"innerHTML"===e?h.a.Va(this.j,t):this.j[e]=t};var t=h.a.f.L()+"_";h.n.j.prototype.data=function(e){return 1===arguments.length?h.a.f.get(this.j,t+e):(h.a.f.set(this.j,t+e,arguments[1]),void 0)};var r=h.a.f.L();h.n.Z=function(e){this.j=e},h.n.Z.prototype=new h.n.j,h.n.Z.prototype.text=function(){if(0==arguments.length){var t=h.a.f.get(this.j,r)||{};return t.$a===e&&t.Ba&&(t.$a=t.Ba.innerHTML),t.$a}h.a.f.set(this.j,r,{$a:arguments[0]})},h.n.j.prototype.nodes=function(){return 0==arguments.length?(h.a.f.get(this.j,r)||{}).Ba:(h.a.f.set(this.j,r,{Ba:arguments[0]}),void 0)},h.b("templateSources",h.n),h.b("templateSources.domElement",h.n.j),h.b("templateSources.anonymousTemplate",h.n.Z)}(),function(){function t(e,t,r){var i;for(t=h.e.nextSibling(t);e&&(i=e)!==t;)e=h.e.nextSibling(i),r(i,e)}function r(e,r){if(e.length){var i=e[0],n=e[e.length-1],o=i.parentNode,a=h.J.instance,s=a.preprocessNode;if(s){if(t(i,n,function(e,t){var r=e.previousSibling,o=s.call(a,e);o&&(e===i&&(i=o[0]||t),e===n&&(n=o[o.length-1]||r))}),e.length=0,!i)return;i===n?e.push(i):(e.push(i,n),h.a.ea(e,o))}t(i,n,function(e){1!==e.nodeType&&8!==e.nodeType||h.fb(r,e)}),t(i,n,function(e){1!==e.nodeType&&8!==e.nodeType||h.w.Ib(e,[r])}),h.a.ea(e,o)}}function i(e){return e.nodeType?e:0<e.length?e[0]:null}function n(e,t,n,a,s){s=s||{};var l=e&&i(e),l=l&&l.ownerDocument,u=s.templateEngine||o;if(h.Za.Ub(n,u,l),n=u.renderTemplate(n,a,s,l),"number"!=typeof n.length||0<n.length&&"number"!=typeof n[0].nodeType)throw Error("Template engine must return an array of DOM nodes");switch(l=!1,t){case"replaceChildren":h.e.U(e,n),l=!0;break;case"replaceNode":h.a.Bb(e,n),l=!0;break;case"ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+t)}return l&&(r(n,a),s.afterRender&&h.k.t(s.afterRender,null,[n,a.$data])),n}var o;h.Wa=function(t){if(t!=e&&!(t instanceof h.C))throw Error("templateEngine must inherit from ko.templateEngine");o=t},h.Ta=function(t,r,a,s,l){if(a=a||{},(a.templateEngine||o)==e)throw Error("Set a template engine before calling renderTemplate");if(l=l||"replaceChildren",s){var u=i(s);return h.h(function(){var e=r&&r instanceof h.I?r:new h.I(h.a.c(r)),o=h.v(t)?t():"function"==typeof t?t(e.$data,e):t,e=n(s,l,o,e,a);"replaceNode"==l&&(s=e,u=i(s))},null,{Da:function(){return!u||!h.a.Ea(u)},G:u&&"replaceNode"==l?u.parentNode:u})}return h.w.Na(function(e){h.Ta(t,r,a,e,"replaceNode")})},h.jc=function(t,i,o,a,s){function l(e,t){r(t,c),o.afterRender&&o.afterRender(t,e)}function u(e,r){c=s.createChildContext(e,o.as,function(e){e.$index=r});var i="function"==typeof t?t(e,c):t;return n(null,"ignoreTargetNode",i,c,o)}var c;return h.h(function(){var t=h.a.c(i)||[];"undefined"==typeof t.length&&(t=[t]),t=h.a.la(t,function(t){return o.includeDestroyed||t===e||null===t||!h.a.c(t._destroy)}),h.k.t(h.a.Ua,null,[a,t,u,o,l])},null,{G:a})};var a=h.a.f.L();h.d.template={init:function(e,t){var r=h.a.c(t());return"string"==typeof r||r.name?h.e.da(e):(r=h.e.childNodes(e),r=h.a.ec(r),new h.n.Z(e).nodes(r)),{controlsDescendantBindings:!0}},update:function(t,r,i,n,o){var s,l=r();r=h.a.c(l),i=!0,n=null,"string"==typeof r?r={}:(l=r.name,"if"in r&&(i=h.a.c(r["if"])),i&&"ifnot"in r&&(i=!h.a.c(r.ifnot)),s=h.a.c(r.data)),"foreach"in r?n=h.jc(l||t,i&&r.foreach||[],r,t,o):i?(o="data"in r?o.createChildContext(s,r.as):o,n=h.Ta(l||t,o,r,t)):h.e.da(t),o=n,(s=h.a.f.get(t,a))&&"function"==typeof s.F&&s.F(),h.a.f.set(t,a,o&&o.ga()?o:e)}},h.g.aa.template=function(e){return e=h.g.Ra(e),1==e.length&&e[0].unknown||h.g.bc(e,"name")?null:"This template engine does not support anonymous templates nested within its templates"},h.e.Q.template=!0}(),h.b("setTemplateEngine",h.Wa),h.b("renderTemplate",h.Ta),h.a.nb=function(e,t,r){if(e.length&&t.length){var i,n,o,a,s;for(i=n=0;(!r||r>i)&&(a=e[n]);++n){for(o=0;s=t[o];++o)if(a.value===s.value){a.moved=s.index,s.moved=a.index,t.splice(o,1),i=o=0;break}i+=o}}},h.a.Aa=function(){function e(e,t,r,i,n){var o,a,s,l,u,c=Math.min,d=Math.max,m=[],p=e.length,f=t.length,v=f-p||1,g=p+f+1;for(o=0;p>=o;o++)for(l=s,m.push(s=[]),u=c(f,o+v),a=d(0,o-1);u>=a;a++)s[a]=a?o?e[o-1]===t[a-1]?l[a-1]:c(l[a]||g,s[a-1]||g)+1:a+1:o+1;for(c=[],d=[],v=[],o=p,a=f;o||a;)f=m[o][a]-1,a&&f===m[o][a-1]?d.push(c[c.length]={status:r,value:t[--a],index:a}):o&&f===m[o-1][a]?v.push(c[c.length]={status:i,value:e[--o],index:o}):(--a,--o,n.sparse||c.push({status:"retained",value:t[a]}));return h.a.nb(d,v,10*p),c.reverse()}return function(t,r,i){return i="boolean"==typeof i?{dontLimitMoves:i}:i||{},t=t||[],r=r||[],t.length<=r.length?e(t,r,"added","deleted",i):e(r,t,"deleted","added",i)}}(),h.b("utils.compareArrays",h.a.Aa),function(){function t(t,r,i,n,o){var a=[],s=h.h(function(){var e=r(i,o,h.a.ea(a,t))||[];0<a.length&&(h.a.Bb(a,e),n&&h.k.t(n,null,[i,e,o])),a.length=0,h.a.$(a,e)},null,{G:t,Da:function(){return!h.a.eb(a)}});return{S:a,h:s.ga()?s:e}}var r=h.a.f.L();h.a.Ua=function(i,n,o,a,s){function l(e,t){C=d[t],g!==t&&(E[e]=C),C.Ia(g++),h.a.ea(C.S,i),f.push(C),y.push(C)}function u(e,t){if(e)for(var r=0,i=t.length;i>r;r++)t[r]&&h.a.r(t[r].S,function(i){e(i,r,t[r].ka)})}n=n||[],a=a||{};var c=h.a.f.get(i,r)===e,d=h.a.f.get(i,r)||[],m=h.a.ya(d,function(e){return e.ka}),p=h.a.Aa(m,n,a.dontLimitMoves),f=[],v=0,g=0,_=[],y=[];n=[];for(var C,w,S,E=[],m=[],b=0;w=p[b];b++)switch(S=w.moved,w.status){case"deleted":S===e&&(C=d[v],C.h&&C.h.F(),_.push.apply(_,h.a.ea(C.S,i)),a.beforeRemove&&(n[b]=C,y.push(C))),v++;break;case"retained":l(b,v++);break;case"added":S!==e?l(b,S):(C={ka:w.value,Ia:h.m(g++)},f.push(C),y.push(C),c||(m[b]=C))}u(a.beforeMove,E),h.a.r(_,a.beforeRemove?h.M:h.removeNode);for(var T,b=0,c=h.e.firstChild(i);C=y[b];b++){for(C.S||h.a.extend(C,t(i,o,C.ka,s,C.Ia)),v=0;p=C.S[v];c=p.nextSibling,T=p,v++)p!==c&&h.e.rb(i,p,T);!C.Zb&&s&&(s(C.ka,C.S,C.Ia),C.Zb=!0)}u(a.beforeRemove,n),u(a.afterMove,E),u(a.afterAdd,m),h.a.f.set(i,r,f)}}(),h.b("utils.setDomNodeChildrenFromArrayMapping",h.a.Ua),h.K=function(){this.allowTemplateRewriting=!1},h.K.prototype=new h.C,h.K.prototype.renderTemplateSource=function(e){var t=(9>h.a.oa?0:e.nodes)?e.nodes():null;return t?h.a.R(t.cloneNode(!0).childNodes):(e=e.text(),h.a.Qa(e))},h.K.Ja=new h.K,h.Wa(h.K.Ja),h.b("nativeTemplateEngine",h.K),function(){h.La=function(){var e=this.ac=function(){if(!a||!a.tmpl)return 0;try{if(0<=a.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(e){}return 1}();this.renderTemplateSource=function(t,r,i){if(i=i||{},2>e)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var o=t.data("precompiled");return o||(o=t.text()||"",o=a.template(null,"{{ko_with $item.koBindingContext}}"+o+"{{/ko_with}}"),t.data("precompiled",o)),t=[r.$data],r=a.extend({koBindingContext:r},i.templateOptions),r=a.tmpl(o,t,r),r.appendTo(n.createElement("div")),a.fragments={},r},this.createJavaScriptEvaluatorBlock=function(e){return"{{ko_code ((function() { return "+e+" })()) }}"},this.addTemplate=function(e,t){n.write("<script type='text/html' id='"+e+"'>"+t+"</script>")},e>0&&(a.tmpl.tag.ko_code={open:"__.push($1 || '');"},a.tmpl.tag.ko_with={open:"with($1) {",close:"} "})},h.La.prototype=new h.C;var e=new h.La;0<e.ac&&h.Wa(e),h.b("jqueryTmplTemplateEngine",h.La)}()})}()}(),r("ThirdParty/knockout-es5",[],function(){"use strict";function e(e,r){if(!e)throw new Error("When calling ko.track, you must pass an object as the first parameter.");var n=this,o=t(e,!0);return r=r||Object.getOwnPropertyNames(e),r.forEach(function(t){if(t!==h&&t!==d&&!(t in o)){var r=e[t],a=r instanceof Array,s=n.isObservable(r)?r:a?n.observableArray(r):n.observable(r);Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get:s,set:n.isWriteableObservable(s)?s:void 0}),o[t]=s,a&&i(n,s)}}),e}function t(e,t){var r=e[h];return!r&&t&&(r={},Object.defineProperty(e,h,{value:r})),r}function r(t,r,i){var n=this,o={owner:t,deferEvaluation:!0};if("function"==typeof i)o.read=i;else{if("value"in i)throw new Error('For ko.defineProperty, you must not specify a "value" for the property. You must provide a "get" function.');if("function"!=typeof i.get)throw new Error('For ko.defineProperty, the third parameter must be either an evaluator function, or an options object containing a function called "get".');o.read=i.get,o.write=i.set}return t[r]=n.computed(o),e.call(n,t,[r]),t}function i(e,t){var r=null;e.computed(function(){r&&(r.dispose(),r=null);var i=t();i instanceof Array&&(r=n(e,t,i))})}function n(e,t,r){var i=o(e,r);return i.subscribe(t)}function o(e,t){var r=t[d];if(!r){r=new e.subscribable,Object.defineProperty(t,d,{value:r});var i={};a(t,r,i),s(e,t,r,i)}return r}function a(e,t,r){["pop","push","reverse","shift","sort","splice","unshift"].forEach(function(i){var n=e[i];e[i]=function(){var e=n.apply(this,arguments);return r.pause!==!0&&t.notifySubscribers(this),e}})}function s(e,t,r,i){["remove","removeAll","destroy","destroyAll","replace"].forEach(function(n){Object.defineProperty(t,n,{enumerable:!1,value:function(){var o;i.pause=!0;try{o=e.observableArray.fn[n].apply(e.observableArray(t),arguments)}finally{i.pause=!1}return r.notifySubscribers(t),o}})})}function l(e,r){if(!e)return null;var i=t(e,!1);return i&&i[r]||null}function u(e,t){var r=l(e,t);r&&r.valueHasMutated()}function c(t){t.track=e,t.getObservable=l,t.valueHasMutated=u,t.defineProperty=r}var h="__knockoutObservables",d="__knockoutSubscribable";return{attachToKo:c}}),r("Widgets/SvgPathBindingHandler",[],function(){"use strict";var e="http://www.w3.org/2000/svg",t="cesium-svgPath-svg",r={register:function(r){r.bindingHandlers.cesiumSvgPath={init:function(i,n){var o=document.createElementNS(e,"svg:svg");o.setAttribute("class",t);var a=document.createElementNS(e,"path");return o.appendChild(a),r.virtualElements.setDomNodeChildren(i,[o]),r.computed({read:function(){var e=r.unwrap(n());a.setAttribute("d",r.unwrap(e.path));var i=r.unwrap(e.width),s=r.unwrap(e.height);o.setAttribute("width",i),o.setAttribute("height",s),o.setAttribute("viewBox","0 0 "+i+" "+s),e.css&&o.setAttribute("class",t+" "+r.unwrap(e.css))},disposeWhenNodeIsRemoved:i}),{controlsDescendantBindings:!0}}},r.virtualElements.allowedBindings.cesiumSvgPath=!0}};return r}),r("ThirdParty/knockout",["./knockout-3.1.0","./knockout-es5","../Widgets/SvgPathBindingHandler"],function(e,t,r){"use strict";return t.attachToKo(e),r.register(e),e}),r("Widgets/subscribeAndEvaluate",["../ThirdParty/knockout"],function(e){"use strict";var t=function(t,r,i,n,o){return i.call(n,t[r]),e.getObservable(t,r).subscribe(i,n,o)};return t}),r("Widgets/Animation/Animation",["../../Core/Color","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../getElement","../subscribeAndEvaluate"],function(e,t,r,i,n,o,a){"use strict";function s(t){return e.fromCssColorString(window.getComputedStyle(t).getPropertyValue("color"))}function l(e){var t=document.createElementNS(v,e.tagName);for(var r in e)if(e.hasOwnProperty(r)&&"tagName"!==r)if("children"===r){var i,n=e.children.length;for(i=0;n>i;++i)t.appendChild(l(e.children[i]))}else 0===r.indexOf("xlink:")?t.setAttributeNS(g,r.substring(6),e[r]):"textContent"===r?t.textContent=e[r]:t.setAttribute(r,e[r]);return t}function u(e,t,r){var i=document.createElementNS(v,"text");i.setAttribute("x",e),i.setAttribute("y",t),i.setAttribute("class","cesium-animation-svgText");var n=document.createElementNS(v,"tspan");return n.textContent=r,i.appendChild(n),i}function c(e,t,r){e.setAttribute("transform","translate(100,100) rotate("+r+")"),t.setAttribute("transform","rotate("+r+")")}function h(e,t){var r=t.alpha,i=1-r;return x.red=e.red*i+t.red*r,x.green=e.green*i+t.green*r,x.blue=e.blue*i+t.blue*r,x.toCssColorString()}function d(e,t,r){var i={tagName:"g","class":"cesium-animation-rectButton",transform:"translate("+e+","+t+")",children:[{tagName:"rect","class":"cesium-animation-buttonGlow",width:32,height:32,rx:2,ry:2},{tagName:"rect","class":"cesium-animation-buttonMain",width:32,height:32,rx:4,ry:4},{tagName:"use","class":"cesium-animation-buttonPath","xlink:href":r},{tagName:"title",textContent:""}]};return l(i)}function m(e,t,r){var i={tagName:"g","class":"cesium-animation-rectButton",transform:"translate("+e+","+t+")",children:[{tagName:"use","class":"cesium-animation-buttonGlow","xlink:href":"#animation_pathWingButton"},{tagName:"use","class":"cesium-animation-buttonMain","xlink:href":"#animation_pathWingButton"},{tagName:"use","class":"cesium-animation-buttonPath","xlink:href":r},{tagName:"title",textContent:""}]};return l(i)}function p(e,t){var r=e._viewModel,i=r.shuttleRingDragging;if(!i||f===e)if("mousedown"===t.type||i&&"mousemove"===t.type||"touchstart"===t.type&&1===t.touches.length||i&&"touchmove"===t.type&&1===t.touches.length){var n,o,a=e._centerX,s=e._centerY,l=e._svgNode,u=l.getBoundingClientRect();if("touchstart"===t.type||"touchmove"===t.type?(n=t.touches[0].clientX,o=t.touches[0].clientY):(n=t.clientX,o=t.clientY),!i&&(n>u.right||n<u.left||o<u.top||o>u.bottom))return;var c=e._shuttleRingPointer.getBoundingClientRect(),h=n-a-u.left,d=o-s-u.top,m=180*Math.atan2(d,h)/Math.PI+90;m>180&&(m-=360);var p=r.shuttleRingAngle;i||n<c.right&&n>c.left&&o>c.top&&o<c.bottom?(f=e,r.shuttleRingDragging=!0,r.shuttleRingAngle=m):p>m?r.slower():m>p&&r.faster(),t.preventDefault()}else f=void 0,r.shuttleRingDragging=!1}var f,v="http://www.w3.org/2000/svg",g="http://www.w3.org/1999/xlink",_=e.fromCssColorString("rgba(247,250,255,0.384)"),y=e.fromCssColorString("rgba(143,191,255,0.216)"),C=e.fromCssColorString("rgba(153,197,255,0.098)"),w=e.fromCssColorString("rgba(255,255,255,0.086)"),S=e.fromCssColorString("rgba(255,255,255,0.267)"),E=e.fromCssColorString("rgba(255,255,255,0)"),b=e.fromCssColorString("rgba(66,67,68,0.3)"),T=e.fromCssColorString("rgba(0,0,0,0.5)"),x=new e,P=function(e,t){this._viewModel=t,this.svgElement=e,this._enabled=void 0,this._toggled=void 0;var r=this;this._clickFunction=function(){var e=r._viewModel.command;e.canExecute&&e()},e.addEventListener("click",this._clickFunction,!0),this._subscriptions=[a(t,"toggled",this.setToggled,this),a(t,"tooltip",this.setTooltip,this),a(t.command,"canExecute",this.setEnabled,this)]};P.prototype.destroy=function(){this.svgElement.removeEventListener("click",this._clickFunction,!0);for(var e=this._subscriptions,t=0,r=e.length;r>t;t++)e[t].dispose();i(this)},P.prototype.isDestroyed=function(){return!1},P.prototype.setEnabled=function(e){if(this._enabled!==e){if(this._enabled=e,!e)return this.svgElement.setAttribute("class","cesium-animation-buttonDisabled"),void 0;if(this._toggled)return this.svgElement.setAttribute("class","cesium-animation-rectButton cesium-animation-buttonToggled"),void 0;this.svgElement.setAttribute("class","cesium-animation-rectButton")}},P.prototype.setToggled=function(e){this._toggled!==e&&(this._toggled=e,this._enabled&&(e?this.svgElement.setAttribute("class","cesium-animation-rectButton cesium-animation-buttonToggled"):this.svgElement.setAttribute("class","cesium-animation-rectButton")))},P.prototype.setTooltip=function(e){this.svgElement.getElementsByTagName("title")[0].textContent=e};var A=function(e,t){e=o(e),this._viewModel=t,this._container=e,this._centerX=0,this._centerY=0,this._defsElement=void 0,this._svgNode=void 0,this._topG=void 0,this._lastHeight=void 0,this._lastWidth=void 0;var r=document.createElement("style");r.textContent=".cesium-animation-rectButton .cesium-animation-buttonGlow { filter: url(#animation_blurred); }.cesium-animation-rectButton .cesium-animation-buttonMain { fill: url(#animation_buttonNormal); }.cesium-animation-buttonToggled .cesium-animation-buttonMain { fill: url(#animation_buttonToggled); }.cesium-animation-rectButton:hover .cesium-animation-buttonMain { fill: url(#animation_buttonHovered); }.cesium-animation-buttonDisabled .cesium-animation-buttonMain { fill: url(#animation_buttonDisabled); }.cesium-animation-shuttleRingG .cesium-animation-shuttleRingSwoosh { fill: url(#animation_shuttleRingSwooshGradient); }.cesium-animation-shuttleRingG:hover .cesium-animation-shuttleRingSwoosh { fill: url(#animation_shuttleRingSwooshHovered); }.cesium-animation-shuttleRingPointer { fill: url(#animation_shuttleRingPointerGradient); }.cesium-animation-shuttleRingPausePointer { fill: url(#animation_shuttleRingPointerPaused); }.cesium-animation-knobOuter { fill: url(#animation_knobOuter); }.cesium-animation-knobInner { fill: url(#animation_knobInner); }",document.head.insertBefore(r,document.head.childNodes[0]);var i=document.createElement("div");i.className="cesium-animation-theme",i.innerHTML='<div class="cesium-animation-themeNormal"></div><div class="cesium-animation-themeHover"></div><div class="cesium-animation-themeSelect"></div><div class="cesium-animation-themeDisabled"></div><div class="cesium-animation-themeKnob"></div><div class="cesium-animation-themePointer"></div><div class="cesium-animation-themeSwoosh"></div><div class="cesium-animation-themeSwooshHover"></div>',this._theme=i,this._themeNormal=i.childNodes[0],this._themeHover=i.childNodes[1],this._themeSelect=i.childNodes[2],this._themeDisabled=i.childNodes[3],this._themeKnob=i.childNodes[4],this._themePointer=i.childNodes[5],this._themeSwoosh=i.childNodes[6],this._themeSwooshHover=i.childNodes[7];var n=document.createElementNS(v,"svg:svg");this._svgNode=n,n.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xlink",g);var s=document.createElementNS(v,"g");this._topG=s,this._realtimeSVG=new P(m(3,4,"#animation_pathClock"),t.playRealtimeViewModel),this._playReverseSVG=new P(d(44,99,"#animation_pathPlayReverse"),t.playReverseViewModel),this._playForwardSVG=new P(d(124,99,"#animation_pathPlay"),t.playForwardViewModel),this._pauseSVG=new P(d(84,99,"#animation_pathPause"),t.pauseViewModel);var h=document.createElementNS(v,"g");h.appendChild(this._realtimeSVG.svgElement),h.appendChild(this._playReverseSVG.svgElement),h.appendChild(this._playForwardSVG.svgElement),h.appendChild(this._pauseSVG.svgElement);var f=l({tagName:"circle","class":"cesium-animation-shuttleRingBack",cx:100,cy:100,r:99});this._shuttleRingBackPanel=f;var _=l({tagName:"g","class":"cesium-animation-shuttleRingSwoosh",children:[{tagName:"use",transform:"translate(100,97) scale(-1,1)","xlink:href":"#animation_pathSwooshFX"},{tagName:"use",transform:"translate(100,97)","xlink:href":"#animation_pathSwooshFX"},{tagName:"line",x1:100,y1:8,x2:100,y2:22}]});this._shuttleRingSwooshG=_,this._shuttleRingPointer=l({tagName:"use","class":"cesium-animation-shuttleRingPointer","xlink:href":"#animation_pathPointer"});var y=l({tagName:"g",transform:"translate(100,100)"});this._knobOuter=l({tagName:"circle","class":"cesium-animation-knobOuter",cx:0,cy:0,r:71});var C=61,w=l({tagName:"circle","class":"cesium-animation-knobInner",cx:0,cy:0,r:C});this._knobDate=u(0,-24,""),this._knobTime=u(0,-7,""),this._knobStatus=u(0,-41,"");var S=l({tagName:"circle","class":"cesium-animation-blank",cx:0,cy:0,r:C}),E=document.createElementNS(v,"g");E.setAttribute("class","cesium-animation-shuttleRingG"),e.appendChild(i),s.appendChild(E),s.appendChild(y),s.appendChild(h),E.appendChild(f),E.appendChild(_),E.appendChild(this._shuttleRingPointer),y.appendChild(this._knobOuter),y.appendChild(w),y.appendChild(this._knobDate),y.appendChild(this._knobTime),y.appendChild(this._knobStatus),y.appendChild(S),n.appendChild(s),e.appendChild(n);var b=this,T=function(e){p(b,e)};this._mouseCallback=T,f.addEventListener("mousedown",T,!0),f.addEventListener("touchstart",T,!0),_.addEventListener("mousedown",T,!0),_.addEventListener("touchstart",T,!0),document.addEventListener("mousemove",T,!0),document.addEventListener("touchmove",T,!0),document.addEventListener("mouseup",T,!0),document.addEventListener("touchend",T,!0),this._shuttleRingPointer.addEventListener("mousedown",T,!0),this._shuttleRingPointer.addEventListener("touchstart",T,!0),this._knobOuter.addEventListener("mousedown",T,!0),this._knobOuter.addEventListener("touchstart",T,!0);var x,A=this._knobTime.childNodes[0],M=this._knobDate.childNodes[0],D=this._knobStatus.childNodes[0];this._subscriptions=[a(t.pauseViewModel,"toggled",function(e){x!==e&&(x=e,x?b._shuttleRingPointer.setAttribute("class","cesium-animation-shuttleRingPausePointer"):b._shuttleRingPointer.setAttribute("class","cesium-animation-shuttleRingPointer"))}),a(t,"shuttleRingAngle",function(e){c(b._shuttleRingPointer,b._knobOuter,e)}),a(t,"dateLabel",function(e){M.textContent!==e&&(M.textContent=e)}),a(t,"timeLabel",function(e){A.textContent!==e&&(A.textContent=e)}),a(t,"multiplierLabel",function(e){D.textContent!==e&&(D.textContent=e)})],this.applyThemeChanges(),this.resize()};return r(A.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){var e=this._mouseCallback;this._shuttleRingBackPanel.removeEventListener("mousedown",e,!0),this._shuttleRingBackPanel.removeEventListener("touchstart",e,!0),this._shuttleRingSwooshG.removeEventListener("mousedown",e,!0),this._shuttleRingSwooshG.removeEventListener("touchstart",e,!0),document.removeEventListener("mousemove",e,!0),document.removeEventListener("touchmove",e,!0),document.removeEventListener("mouseup",e,!0),document.removeEventListener("touchend",e,!0),this._shuttleRingPointer.removeEventListener("mousedown",e,!0),this._shuttleRingPointer.removeEventListener("touchstart",e,!0),this._knobOuter.removeEventListener("mousedown",e,!0),this._knobOuter.removeEventListener("touchstart",e,!0),this._container.removeChild(this._svgNode),this._container.removeChild(this._theme),this._realtimeSVG.destroy(),this._playReverseSVG.destroy(),this._playForwardSVG.destroy(),this._pauseSVG.destroy();for(var t=this._subscriptions,r=0,n=t.length;n>r;r++)t[r].dispose();return i(this)},A.prototype.resize=function(){var e=this._container.clientWidth,t=this._container.clientHeight;if(e!==this._lastWidth||t!==this._lastHeight){var r=this._svgNode,i=200,n=132,o=e,a=t;0===e&&0===t?(o=i,a=n):0===e?(a=t,o=i*(t/n)):0===t&&(o=e,a=n*(e/i));var s=o/i,l=a/n;r.style.cssText="width: "+o+"px; height: "+a+"px; position: absolute; bottom: 0; left: 0; overflow: hidden;",r.setAttribute("width",o),r.setAttribute("height",a),r.setAttribute("viewBox","0 0 "+o+" "+a),this._topG.setAttribute("transform","scale("+s+","+l+")"),this._centerX=Math.max(1,100*s),this._centerY=Math.max(1,100*l),this._lastHeight=e,this._lastWidth=t}},A.prototype.applyThemeChanges=function(){var e=s(this._themeNormal),r=s(this._themeHover),i=s(this._themeSelect),n=s(this._themeDisabled),o=s(this._themeKnob),a=s(this._themePointer),u=s(this._themeSwoosh),c=s(this._themeSwooshHover),d=l({tagName:"defs",children:[{id:"animation_buttonNormal",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(e,_)},{tagName:"stop",offset:"12%","stop-color":h(e,y)},{tagName:"stop",offset:"46%","stop-color":h(e,C)},{tagName:"stop",offset:"81%","stop-color":h(e,w)}]},{id:"animation_buttonHovered",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(r,_)},{tagName:"stop",offset:"12%","stop-color":h(r,y)},{tagName:"stop",offset:"46%","stop-color":h(r,C)},{tagName:"stop",offset:"81%","stop-color":h(r,w)}]},{id:"animation_buttonToggled",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(i,_)},{tagName:"stop",offset:"12%","stop-color":h(i,y)},{tagName:"stop",offset:"46%","stop-color":h(i,C)},{tagName:"stop",offset:"81%","stop-color":h(i,w)}]},{id:"animation_buttonDisabled",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(n,S)},{tagName:"stop",offset:"75%","stop-color":h(n,E)}]},{id:"animation_blurred",tagName:"filter",width:"200%",height:"200%",x:"-50%",y:"-50%",children:[{tagName:"feGaussianBlur",stdDeviation:4,"in":"SourceGraphic"}]},{id:"animation_shuttleRingSwooshGradient",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-opacity":.2,"stop-color":u.toCssColorString()},{tagName:"stop",offset:"85%","stop-opacity":.85,"stop-color":u.toCssColorString()},{tagName:"stop",offset:"95%","stop-opacity":.05,"stop-color":u.toCssColorString()}]},{id:"animation_shuttleRingSwooshHovered",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-opacity":.2,"stop-color":c.toCssColorString()},{tagName:"stop",offset:"85%","stop-opacity":.85,"stop-color":c.toCssColorString()},{tagName:"stop",offset:"95%","stop-opacity":.05,"stop-color":c.toCssColorString()}]},{id:"animation_shuttleRingPointerGradient",tagName:"linearGradient",x1:"0%",y1:"50%",x2:"100%",y2:"50%",children:[{tagName:"stop",offset:"0%","stop-color":a.toCssColorString()},{tagName:"stop",offset:"40%","stop-color":a.toCssColorString()},{tagName:"stop",offset:"60%","stop-color":h(a,T)},{tagName:"stop",offset:"100%","stop-color":h(a,T)}]},{id:"animation_shuttleRingPointerPaused",tagName:"linearGradient",x1:"0%",y1:"50%",x2:"100%",y2:"50%",children:[{tagName:"stop",offset:"0%","stop-color":"#CCC"},{tagName:"stop",offset:"40%","stop-color":"#CCC"},{tagName:"stop",offset:"60%","stop-color":"#555"},{tagName:"stop",offset:"100%","stop-color":"#555"}]},{id:"animation_knobOuter",tagName:"linearGradient",x1:"20%",y1:"0%",x2:"90%",y2:"100%",children:[{tagName:"stop",offset:"5%","stop-color":h(o,_)},{tagName:"stop",offset:"60%","stop-color":h(o,b)},{tagName:"stop",offset:"85%","stop-color":h(o,y)}]},{id:"animation_knobInner",tagName:"linearGradient",x1:"20%",y1:"0%",x2:"90%",y2:"100%",children:[{tagName:"stop",offset:"5%","stop-color":h(o,b)},{tagName:"stop",offset:"60%","stop-color":h(o,_)},{tagName:"stop",offset:"85%","stop-color":h(o,w)}]},{id:"animation_pathReset",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M24.316,5.318,9.833,13.682,9.833,5.5,5.5,5.5,5.5,25.5,9.833,25.5,9.833,17.318,24.316,25.682z"},{id:"animation_pathPause",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M13,5.5,7.5,5.5,7.5,25.5,13,25.5zM24.5,5.5,19,5.5,19,25.5,24.5,25.5z"},{id:"animation_pathPlay",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z"},{id:"animation_pathPlayReverse",tagName:"path",transform:"translate(16,16) scale(-0.85,0.85) translate(-16,-16)",d:"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z"},{id:"animation_pathLoop",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M24.249,15.499c-0.009,4.832-3.918,8.741-8.75,8.75c-2.515,0-4.768-1.064-6.365-2.763l2.068-1.442l-7.901-3.703l0.744,8.694l2.193-1.529c2.244,2.594,5.562,4.242,9.26,4.242c6.767,0,12.249-5.482,12.249-12.249H24.249zM15.499,6.75c2.516,0,4.769,1.065,6.367,2.764l-2.068,1.443l7.901,3.701l-0.746-8.693l-2.192,1.529c-2.245-2.594-5.562-4.245-9.262-4.245C8.734,3.25,3.25,8.734,3.249,15.499H6.75C6.758,10.668,10.668,6.758,15.499,6.75z"},{id:"animation_pathClock",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-15.5)",d:"M15.5,2.374C8.251,2.375,2.376,8.251,2.374,15.5C2.376,22.748,8.251,28.623,15.5,28.627c7.249-0.004,13.124-5.879,13.125-13.127C28.624,8.251,22.749,2.375,15.5,2.374zM15.5,25.623C9.909,25.615,5.385,21.09,5.375,15.5C5.385,9.909,9.909,5.384,15.5,5.374c5.59,0.01,10.115,4.535,10.124,10.125C25.615,21.09,21.091,25.615,15.5,25.623zM8.625,15.5c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,16.5,8.624,16.053,8.625,15.5zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.887,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM22.822,12.428c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,12.54,22.344,12.705,22.822,12.428zM12.062,21.455c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,22.344,12.54,21.732,12.062,21.455zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM22.823,18.572c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.092,0.367,1.367c0.477,0.275,1.089,0.113,1.365-0.365C23.464,19.461,23.3,18.848,22.823,18.572zM19.938,7.813c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM23.378,14.5c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,14.949,23.929,14.5,23.378,14.5zM15.501,6.624c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.365c0.275,0.479,0.889,0.643,1.365,0.367l3.305-1.676C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876C16.501,7.072,16.053,6.624,15.501,6.624zM15.501,22.377c-0.552,0-1,0.447-1,1s0.448,1,1,1s1-0.447,1-1S16.053,22.377,15.501,22.377zM18.939,21.455c-0.479,0.277-0.643,0.889-0.366,1.367c0.275,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.889,0.366-1.365C20.028,21.344,19.417,21.18,18.939,21.455z"},{id:"animation_pathWingButton",tagName:"path",d:"m 4.5,0.5 c -2.216,0 -4,1.784 -4,4 l 0,24 c 0,2.216 1.784,4 4,4 l 13.71875,0 C 22.478584,27.272785 27.273681,22.511272 32.5,18.25 l 0,-13.75 c 0,-2.216 -1.784,-4 -4,-4 l -24,0 z"},{id:"animation_pathPointer",tagName:"path",d:"M-15,-65,-15,-55,15,-55,15,-65,0,-95z"},{id:"animation_pathSwooshFX",tagName:"path",d:"m 85,0 c 0,16.617 -4.813944,35.356 -13.131081,48.4508 h 6.099803 c 8.317138,-13.0948 13.13322,-28.5955 13.13322,-45.2124 0,-46.94483 -38.402714,-85.00262 -85.7743869,-85.00262 -1.0218522,0 -2.0373001,0.0241 -3.0506131,0.0589 45.958443,1.59437 82.723058,35.77285 82.723058,81.70532 z"}]});
t(this._defsElement)?this._svgNode.replaceChild(d,this._defsElement):this._svgNode.appendChild(d),this._defsElement=d},A}),r("Widgets/createCommand",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../ThirdParty/knockout"],function(e,t,r,i,n,o){"use strict";var a=function(t,i){function a(){var e,r={args:arguments,cancel:!1};return s.raiseEvent(r),r.cancel||(e=t.apply(null,arguments),l.raiseEvent(e)),e}i=e(i,!0);var s=new n,l=new n;return a.canExecute=i,o.track(a,["canExecute"]),r(a,{beforeExecute:{value:s},afterExecute:{value:l}}),a};return a}),r("Widgets/ToggleButtonViewModel",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../ThirdParty/knockout"],function(e,t,r,i,n){"use strict";var o=function(t,r){this._command=t,r=e(r,e.EMPTY_OBJECT),this.toggled=e(r.toggled,!1),this.tooltip=e(r.tooltip,""),n.track(this,["toggled","tooltip"])};return r(o.prototype,{command:{get:function(){return this._command}}}),o}),r("Widgets/Animation/AnimationViewModel",["../../Core/binarySearch","../../Core/ClockRange","../../Core/ClockStep","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/JulianDate","../../ThirdParty/knockout","../../ThirdParty/sprintf","../createCommand","../ToggleButtonViewModel"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){e.clockStep===r.SYSTEM_CLOCK&&(e.clockStep=r.SYSTEM_CLOCK_MULTIPLIER,e.multiplier=1)}function d(e){h(e),e.shouldAnimate=!0}function m(e,t){return e-t}function p(t,r){var i=e(r,t,m);return 0>i?~i:i}function f(e,t){if(Math.abs(e)<=_)return e/_;var r,i,n=_,o=y,a=0;return e>0?(r=Math.log(t[t.length-1]),i=(r-a)/(o-n),Math.exp(a+i*(e-n))):(r=Math.log(-t[0]),i=(r-a)/(o-n),-Math.exp(a+i*(Math.abs(e)-n)))}function v(e,t,i){if(i.clockStep===r.SYSTEM_CLOCK)return _;if(Math.abs(e)<=1)return e*_;var n,o,a=_,s=y,l=0;return e>0?(n=Math.log(t[t.length-1]),o=(n-l)/(s-a),(Math.log(e)-l)/o+a):(n=Math.log(-t[0]),o=(n-l)/(s-a),-((Math.log(Math.abs(e))-l)/o+a))}var g=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],_=15,y=105,C=function(e){var i=this;this._clockViewModel=e,this._allShuttleRingTicks=[],this._dateFormatter=C.defaultDateFormatter,this._timeFormatter=C.defaultTimeFormatter,this.shuttleRingDragging=!1,this.snapToTicks=!1,s.track(this,["_allShuttleRingTicks","_dateFormatter","_timeFormatter","shuttleRingDragging","snapToTicks"]),this._sortedFilteredPositiveTicks=[],this.setShuttleRingTicks(C.defaultTicks),this.timeLabel=void 0,s.defineProperty(this,"timeLabel",function(){return i._timeFormatter(i._clockViewModel.currentTime,i)}),this.dateLabel=void 0,s.defineProperty(this,"dateLabel",function(){return i._dateFormatter(i._clockViewModel.currentTime,i)}),this.multiplierLabel=void 0,s.defineProperty(this,"multiplierLabel",function(){var e=i._clockViewModel;if(e.clockStep===r.SYSTEM_CLOCK)return"Today";var t=e.multiplier;return 0===t%1?t.toFixed(0)+"x":t.toFixed(3).replace(/0{0,3}$/,"")+"x"}),this.shuttleRingAngle=void 0,s.defineProperty(this,"shuttleRingAngle",{get:function(){return v(e.multiplier,i._allShuttleRingTicks,e)},set:function(e){e=Math.max(Math.min(e,y),-y);var t=i._allShuttleRingTicks,n=i._clockViewModel;if(n.clockStep=r.SYSTEM_CLOCK_MULTIPLIER,Math.abs(e)===y)return n.multiplier=e>0?t[t.length-1]:t[0],void 0;var o=f(e,t);if(i.snapToTicks)o=t[p(o,t)];else if(0!==o){var a=Math.abs(o);if(a>100){var s=a.toFixed(0).length-2,l=Math.pow(10,s);o=0|Math.round(o/l)*l}else a>_?o=Math.round(o):a>1?o=+o.toFixed(1):a>0&&(o=+o.toFixed(2))}n.multiplier=o}}),this._canAnimate=void 0,s.defineProperty(this,"_canAnimate",function(){var e=i._clockViewModel,r=e.clockRange;if(i.shuttleRingDragging||r===t.UNBOUNDED)return!0;var n=e.multiplier,o=e.currentTime,s=e.startTime,l=!1;if(r===t.LOOP_STOP)l=a.greaterThan(o,s)||o.equals(s)&&n>0;else{var u=e.stopTime;l=a.greaterThan(o,s)&&a.lessThan(o,u)||o.equals(s)&&n>0||o.equals(u)&&0>n}return l||(e.shouldAnimate=!1),l}),this._isSystemTimeAvailable=void 0,s.defineProperty(this,"_isSystemTimeAvailable",function(){var e=i._clockViewModel,r=e.clockRange;if(r===t.UNBOUNDED)return!0;var n=e.systemTime;return a.greaterThanOrEquals(n,e.startTime)&&a.lessThanOrEquals(n,e.stopTime)}),this._isAnimating=void 0,s.defineProperty(this,"_isAnimating",function(){return i._clockViewModel.shouldAnimate&&(i._canAnimate||i.shuttleRingDragging)});var n=u(function(){var e=i._clockViewModel;e.shouldAnimate?(h(e),e.shouldAnimate=!1):i._canAnimate&&d(e)});this._pauseViewModel=new c(n,{toggled:s.computed(function(){return!i._isAnimating}),tooltip:"Pause"});var o=u(function(){var e=i._clockViewModel;h(e);var t=e.multiplier;t>0&&(e.multiplier=-t),e.shouldAnimate=!0});this._playReverseViewModel=new c(o,{toggled:s.computed(function(){return i._isAnimating&&e.multiplier<0}),tooltip:"Play Reverse"});var l=u(function(){var e=i._clockViewModel;h(e);var t=e.multiplier;0>t&&(e.multiplier=-t),e.shouldAnimate=!0});this._playForwardViewModel=new c(l,{toggled:s.computed(function(){return i._isAnimating&&e.multiplier>0&&e.clockStep!==r.SYSTEM_CLOCK}),tooltip:"Play Forward"});var m=u(function(){var e=i._clockViewModel;e.clockStep=r.SYSTEM_CLOCK,e.multiplier=1,e.shouldAnimate=!0},s.getObservable(this,"_isSystemTimeAvailable"));this._playRealtimeViewModel=new c(m,{toggled:s.computed(function(){return e.shouldAnimate&&e.clockStep===r.SYSTEM_CLOCK}),tooltip:s.computed(function(){return i._isSystemTimeAvailable?"Today (real-time)":"Current time not in range"})}),this._slower=u(function(){var e=i._clockViewModel;h(e);var t=i._allShuttleRingTicks,r=e.multiplier,n=p(r,t)-1;n>=0&&(e.multiplier=t[n])}),this._faster=u(function(){var e=i._clockViewModel;h(e);var t=i._allShuttleRingTicks,r=e.multiplier,n=p(r,t)+1;n<t.length&&(e.multiplier=t[n])})};return C.defaultDateFormatter=function(e){var t=a.toGregorianDate(e);return g[t.month-1]+" "+t.day+" "+t.year},C.defaultTicks=[.001,.002,.005,.01,.02,.05,.1,.25,.5,1,2,5,10,15,30,60,120,300,600,900,1800,3600,7200,14400,21600,43200,86400,172800,345600,604800],C.defaultTimeFormatter=function(e,t){var r=a.toGregorianDate(e),i=Math.round(r.millisecond);return Math.abs(t._clockViewModel.multiplier)<1?l("%02d:%02d:%02d.%03d",r.hour,r.minute,r.second,i):l("%02d:%02d:%02d UTC",r.hour,r.minute,r.second)},C.prototype.getShuttleRingTicks=function(){return this._sortedFilteredPositiveTicks.slice(0)},C.prototype.setShuttleRingTicks=function(e){var t,r,i,n={},o=this._sortedFilteredPositiveTicks;for(o.length=0,t=0,r=e.length;r>t;++t)i=e[t],n.hasOwnProperty(i)||(n[i]=!0,o.push(i));o.sort(m);var a=[];for(r=o.length,t=r-1;t>=0;--t)i=o[t],0!==i&&a.push(-i);Array.prototype.push.apply(a,o),this._allShuttleRingTicks=a},n(C.prototype,{slower:{get:function(){return this._slower}},faster:{get:function(){return this._faster}},clockViewModel:{get:function(){return this._clockViewModel}},pauseViewModel:{get:function(){return this._pauseViewModel}},playReverseViewModel:{get:function(){return this._playReverseViewModel}},playForwardViewModel:{get:function(){return this._playForwardViewModel}},playRealtimeViewModel:{get:function(){return this._playRealtimeViewModel}},dateFormatter:{get:function(){return this._dateFormatter},set:function(e){this._dateFormatter=e}},timeFormatter:{get:function(){return this._timeFormatter},set:function(e){this._timeFormatter=e}}}),C._maxShuttleRingAngle=y,C._realtimeShuttleRingAngle=_,C}),r("Widgets/BaseLayerPicker/BaseLayerPickerViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/EllipsoidTerrainProvider","../../Core/isArray","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,e.EMPTY_OBJECT);var i=r.globe,l=e(r.imageryProviderViewModels,[]),u=e(r.terrainProviderViewModels,[]);this._globe=i,this.imageryProviderViewModels=l.slice(0),this.terrainProviderViewModels=u.slice(0),this.dropDownVisible=!1,a.track(this,["imageryProviderViewModels","terrainProviderViewModels","dropDownVisible"]),this.buttonTooltip=void 0,a.defineProperty(this,"buttonTooltip",function(){var e=this.selectedImagery,r=this.selectedTerrain,i=t(e)?e.name:void 0,n=t(r)?r.name:void 0;return t(i)&&t(n)?i+"\n"+n:t(i)?i:n}),this.buttonImageUrl=void 0,a.defineProperty(this,"buttonImageUrl",function(){var e=this.selectedImagery;return t(e)?e.iconUrl:void 0}),this.selectedImagery=void 0;var c=a.observable();this._currentImageryProviders=[],a.defineProperty(this,"selectedImagery",{get:function(){return c()},set:function(e){if(c()===e)return this.dropDownVisible=!1,void 0;var r,i=this._currentImageryProviders,n=i.length,a=this._globe.imageryLayers;for(r=0;n>r;r++)for(var s=a.length,l=0;s>l;l++){var u=a.get(l);if(u.imageryProvider===i[r]){a.remove(u);break}}if(t(e)){var h=e.creationCommand();if(o(h)){var d=h.length;for(r=d-1;r>=0;r--)a.addImageryProvider(h[r],0);this._currentImageryProviders=h.slice(0)}else this._currentImageryProviders=[h],a.addImageryProvider(h,0)}c(e),this.dropDownVisible=!1}}),this.selectedTerrain=void 0;var h=a.observable();a.defineProperty(this,"selectedTerrain",{get:function(){return h()},set:function(e){if(h()===e)return this.dropDownVisible=!1,void 0;var r;t(e)&&(r=e.creationCommand()),this._globe.depthTestAgainstTerrain=!(r instanceof n),this._globe.terrainProvider=r,h(e),this.dropDownVisible=!1}});var d=this;this._toggleDropDown=s(function(){d.dropDownVisible=!d.dropDownVisible}),this.selectedImagery=e(r.selectedImageryProviderViewModel,l[0]),this.selectedTerrain=e(r.selectedTerrainProviderViewModel,u[0])};return r(l.prototype,{toggleDropDown:{get:function(){return this._toggleDropDown}},globe:{get:function(){return this._globe}}}),l}),r("Widgets/BaseLayerPicker/BaseLayerPicker",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./BaseLayerPickerViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t){e=o(e);var r=new a(t),i=document.createElement("button");i.type="button",i.className="cesium-button cesium-toolbar-button",i.setAttribute("data-bind","attr: { title: buttonTooltip },click: toggleDropDown"),e.appendChild(i);var s=document.createElement("img");s.setAttribute("draggable","false"),s.className="cesium-baseLayerPicker-selected",s.setAttribute("data-bind","attr: { src: buttonImageUrl }"),i.appendChild(s);var l=document.createElement("div");l.className="cesium-baseLayerPicker-dropDown",l.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-dropDown-visible" : dropDownVisible }'),e.appendChild(l);var u=document.createElement("div");u.className="cesium-baseLayerPicker-sectionTitle",u.setAttribute("data-bind","visible: imageryProviderViewModels.length > 0"),u.innerHTML="Imagery",l.appendChild(u);var c=document.createElement("div");c.className="cesium-baseLayerPicker-choices",c.setAttribute("data-bind","foreach: imageryProviderViewModels"),l.appendChild(c);var h=document.createElement("div");h.className="cesium-baseLayerPicker-item",h.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-selectedItem" : $data === $parent.selectedImagery },attr: { title: tooltip },visible: creationCommand.canExecute,click: function($data) { $parent.selectedImagery = $data; }'),c.appendChild(h);var d=document.createElement("img");d.className="cesium-baseLayerPicker-itemIcon",d.setAttribute("data-bind","attr: { src: iconUrl }"),d.setAttribute("draggable","false"),h.appendChild(d);var m=document.createElement("div");m.className="cesium-baseLayerPicker-itemLabel",m.setAttribute("data-bind","text: name"),h.appendChild(m);var p=document.createElement("div");p.className="cesium-baseLayerPicker-sectionTitle",p.setAttribute("data-bind","visible: terrainProviderViewModels.length > 0"),p.innerHTML="Terrain",l.appendChild(p);var f=document.createElement("div");f.className="cesium-baseLayerPicker-choices",f.setAttribute("data-bind","foreach: terrainProviderViewModels"),l.appendChild(f);var v=document.createElement("div");v.className="cesium-baseLayerPicker-item",v.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-selectedItem" : $data === $parent.selectedTerrain },attr: { title: tooltip },visible: creationCommand.canExecute,click: function($data) { $parent.selectedTerrain = $data; }'),f.appendChild(v);var g=document.createElement("img");g.className="cesium-baseLayerPicker-itemIcon",g.setAttribute("data-bind","attr: { src: iconUrl }"),g.setAttribute("draggable","false"),v.appendChild(g);var _=document.createElement("div");_.className="cesium-baseLayerPicker-itemLabel",_.setAttribute("data-bind","text: name"),v.appendChild(_),n.applyBindings(r,i),n.applyBindings(r,l),this._viewModel=r,this._container=e,this._element=i,this._dropPanel=l,this._closeDropDown=function(e){i.contains(e.target)||l.contains(e.target)||(r.dropDownVisible=!1)},document.addEventListener("mousedown",this._closeDropDown,!0),document.addEventListener("touchstart",this._closeDropDown,!0)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return document.removeEventListener("mousedown",this._closeDropDown,!0),document.removeEventListener("touchstart",this._closeDropDown,!0),n.cleanNode(this._element),n.cleanNode(this._dropPanel),this._container.removeChild(this._element),this._container.removeChild(this._dropPanel),r(this)},s}),r("Widgets/BaseLayerPicker/ProviderViewModel",["../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n){"use strict";var o=function(t){var r=t.creationFunction;e(r.canExecute)||(r=n(r)),this._creationCommand=r,this.name=t.name,this.tooltip=t.tooltip,this.iconUrl=t.iconUrl,i.track(this,["name","tooltip","iconUrl"])};return t(o.prototype,{creationCommand:{get:function(){return this._creationCommand}}}),o}),r("Widgets/BaseLayerPicker/createDefaultImageryProviderViewModels",["../../Core/buildModuleUrl","../../Scene/ArcGisMapServerImageryProvider","../../Scene/BingMapsImageryProvider","../../Scene/BingMapsStyle","../../Scene/OpenStreetMapImageryProvider","../../Scene/TileMapServiceImageryProvider","../BaseLayerPicker/ProviderViewModel"],function(e,t,r,i,n,o,a){"use strict";function s(){var s=[];return s.push(new a({name:"Bing Maps Aerial",iconUrl:e("Widgets/Images/ImageryProviders/bingAerial.png"),tooltip:"Bing Maps aerial imagery \nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.AERIAL})}})),s.push(new a({name:"Bing Maps Aerial with Labels",iconUrl:e("Widgets/Images/ImageryProviders/bingAerialLabels.png"),tooltip:"Bing Maps aerial imagery with label overlays \nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.AERIAL_WITH_LABELS})}})),s.push(new a({name:"Bing Maps Roads",iconUrl:e("Widgets/Images/ImageryProviders/bingRoads.png"),tooltip:"Bing Maps standard road maps\nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.ROAD})}})),s.push(new a({name:"ESRI World Imagery",iconUrl:e("Widgets/Images/ImageryProviders/esriWorldImagery.png"),tooltip:"World Imagery provides one meter or better satellite and aerial imagery in many parts of the world and lower resolution satellite imagery worldwide.  The map includes NASA Blue Marble: Next Generation 500m resolution imagery at small scales (above 1:1,000,000), i-cubed 15m eSAT imagery at medium-to-large scales (down to 1:70,000) for the world, and USGS 15m Landsat imagery for Antarctica. The map features 0.3m resolution imagery in the continental United States and 0.6m resolution imagery in parts of Western Europe from DigitalGlobe. In other parts of the world, 1 meter resolution imagery is available from GeoEye IKONOS, i-cubed Nationwide Prime, Getmapping, AeroGRID, IGN Spain, and IGP Portugal.  Additionally, imagery at different resolutions has been contributed by the GIS User Community.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"})}})),s.push(new a({name:"ESRI World Street Map",iconUrl:e("Widgets/Images/ImageryProviders/esriWorldStreetMap.png"),tooltip:"This worldwide street map presents highway-level data for the world. Street-level data includes the United States; much of Canada; Japan; most countries in Europe; Australia and New Zealand; India; parts of South America including Argentina, Brazil, Chile, Colombia, and Venezuela; Ghana; and parts of southern Africa including Botswana, Lesotho, Namibia, South Africa, and Swaziland.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"})}})),s.push(new a({name:"ESRI National Geographic",iconUrl:e("Widgets/Images/ImageryProviders/esriNationalGeographic.png"),tooltip:"This web map contains the National Geographic World Map service. This map service is designed to be used as a general reference map for informational and educational purposes as well as a basemap by GIS professionals and other users for creating web maps and web mapping applications.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/"})}})),s.push(new a({name:"Open­Street­Map",iconUrl:e("Widgets/Images/ImageryProviders/openStreetMap.png"),tooltip:"OpenStreetMap (OSM) is a collaborative project to create a free editable map of the world.\nhttp://www.openstreetmap.org",creationFunction:function(){return new n({url:"//a.tile.openstreetmap.org/"})}})),s.push(new a({name:"Stamen Watercolor",iconUrl:e("Widgets/Images/ImageryProviders/stamenWatercolor.png"),tooltip:"Reminiscent of hand drawn maps, Stamen watercolor maps apply raster effect area washes and organic edges over a paper texture to add warm pop to any map.\nhttp://maps.stamen.com",creationFunction:function(){return new n({url:"//stamen-tiles.a.ssl.fastly.net/watercolor/",credit:"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under CC BY SA."})}})),s.push(new a({name:"Stamen Toner",iconUrl:e("Widgets/Images/ImageryProviders/stamenToner.png"),tooltip:"A high contrast black and white map.\nhttp://maps.stamen.com",creationFunction:function(){return new n({url:"//stamen-tiles.a.ssl.fastly.net/toner/",credit:"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under CC BY SA."})}})),s.push(new a({name:"MapQuest Open­Street­Map",iconUrl:e("Widgets/Images/ImageryProviders/mapQuestOpenStreetMap.png"),tooltip:"OpenStreetMap (OSM) is a collaborative project to create a free editable map of the world.\nhttp://www.openstreetmap.org",creationFunction:function(){return new n({url:"//otile1-s.mqcdn.com/tiles/1.0.0/osm/"})}})),s.push(new a({name:"The Black Marble",iconUrl:e("Widgets/Images/ImageryProviders/blackMarble.png"),tooltip:"The lights of cities and villages trace the outlines of civilization in this global view of the Earth at night as seen by NASA/NOAA's Suomi NPP satellite.",creationFunction:function(){return new o({url:"//cesiumjs.org/blackmarble",maximumLevel:8,credit:"Black Marble imagery courtesy NASA Earth Observatory"})}})),s.push(new a({name:"Natural Earth II",iconUrl:e("Widgets/Images/ImageryProviders/naturalEarthII.png"),tooltip:"Natural Earth II, darkened for contrast.\nhttp://www.naturalearthdata.com/",creationFunction:function(){return new o({url:e("Assets/Textures/NaturalEarthII")})}})),s}return s}),r("Widgets/BaseLayerPicker/createDefaultTerrainProviderViewModels",["../../Core/buildModuleUrl","../../Core/CesiumTerrainProvider","../../Core/EllipsoidTerrainProvider","../BaseLayerPicker/ProviderViewModel"],function(e,t,r,i){"use strict";function n(){var n=[];return n.push(new i({name:"WGS84 Ellipsoid",iconUrl:e("Widgets/Images/TerrainProviders/Ellipsoid.png"),tooltip:"WGS84 standard ellipsoid, also known as EPSG:4326",creationFunction:function(){return new r}})),n.push(new i({name:"STK World Terrain meshes",iconUrl:e("Widgets/Images/TerrainProviders/STK.png"),tooltip:"High-resolution, mesh-based terrain for the entire globe. Free for use on the Internet. Closed-network options are available.\nhttp://www.agi.com",creationFunction:function(){return new t({url:"//cesiumjs.org/stk-terrain/tilesets/world/tiles"})}})),n.push(new i({name:"Small Terrain heightmaps with water",iconUrl:e("Widgets/Images/TerrainProviders/STK.png"),tooltip:"Medium-resolution, heightmap-based terrain for the entire globe. This tileset also includes a water mask. Free for use on the Internet.\nhttp://www.agi.com",creationFunction:function(){return new t({url:"//cesiumjs.org/smallterrain",credit:"Terrain data courtesy Analytical Graphics, Inc."})}})),n}return n}),r("Widgets/CesiumInspector/CesiumInspectorViewModel",["../../Core/Color","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Rectangle","../../Scene/DebugModelMatrixPrimitive","../../Scene/PerformanceDisplay","../../Scene/TileCoordinatesImageryProvider","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e){var r;if(t(e)){r="Command Statistics";var i=e.commandsInFrustums;for(var n in i)if(i.hasOwnProperty(n)){var o,a=parseInt(n,10);if(7===a)o="1, 2 and 3";else{for(var s=[],l=2;l>=0;l--){var u=Math.pow(2,l);a>=u&&(s.push(l+1),a-=u)}o=s.reverse().join(" and ")}r+="<br>&nbsp;&nbsp;&nbsp;&nbsp;"+i[n]+" in frustum "+o}r+="<br>Total: "+e.totalCommands}return r}var h=new e(.15,.15,.15,.75),d=document.createElement("div");d.className="cesium-cesiumInspector-performanceDisplay";var m=function(e){if(!t(e))throw new i("scene is required");var r=this,c=e.canvas;c.parentNode.appendChild(d),this._scene=e,this._canvas=c,this._primitive=void 0,this._tile=void 0,this._modelMatrixPrimitive=void 0,this._performanceDisplay=void 0;var m=this._scene.globe;m.depthTestAgainstTerrain=!0,this.frustums=!1,this.performance=!1,this.primitiveBoundingSphere=!1,this.primitiveReferenceFrame=!1,this.filterPrimitive=!1,this.tileBoundingSphere=!1,this.filterTile=!1,this.wireframe=!1,this.suspendUpdates=!1,this.tileCoordinates=!1,this.frustumStatisticText="",this.tileText="",this.hasPickedPrimitive=!1,this.hasPickedTile=!1,this.pickPimitiveActive=!1,this.pickTileActive=!1,this.dropDownVisible=!0,this.generalVisible=!0,this.primitivesVisible=!1,this.terrainVisible=!1,this.generalSwitchText="-",this.primitivesSwitchText="+",this.terrainSwitchText="+",l.track(this,["filterTile","suspendUpdates","dropDownVisible","frustums","frustumStatisticText","pickTileActive","pickPrimitiveActive","hasPickedPrimitive","hasPickedTile","tileText","generalVisible","generalSwitchText","primitivesVisible","primitivesSwitchText","terrainVisible","terrainSwitchText"]),this._toggleDropDown=u(function(){r.dropDownVisible=!r.dropDownVisible}),this._toggleGeneral=u(function(){r.generalVisible=!r.generalVisible,r.generalSwitchText=r.generalVisible?"-":"+"}),this._togglePrimitives=u(function(){r.primitivesVisible=!r.primitivesVisible,r.primitivesSwitchText=r.primitivesVisible?"-":"+"}),this._toggleTerrain=u(function(){r.terrainVisible=!r.terrainVisible,r.terrainSwitchText=r.terrainVisible?"-":"+"}),this._showFrustums=u(function(){return r._scene.debugShowFrustums=r.frustums?!0:!1,!0}),this._showPerformance=u(function(){return r.performance?r._performanceDisplay=new a({container:d,backgroundColor:h,font:"12px arial,sans-serif"}):d.innerHTML="",!0}),this._showPrimitiveBoundingSphere=u(function(){return r._primitive.debugShowBoundingVolume=r.primitiveBoundingSphere,!0}),this._showPrimitiveReferenceFrame=u(function(){if(r.primitiveReferenceFrame){var e=r._primitive.modelMatrix;r._modelMatrixPrimitive=new o({modelMatrix:e}),r._scene.primitives.add(r._modelMatrixPrimitive)}else t(r._modelMatrixPrimitive)&&(r._scene.primitives.remove(r._modelMatrixPrimitive),r._modelMatrixPrimitive=void 0);return!0}),this._doFilterPrimitive=u(function(){return r._scene.debugCommandFilter=r.filterPrimitive?function(e){return t(r._modelMatrixPrimitive)&&e.owner===r._modelMatrixPrimitive._primitive?!0:t(r._primitive)?e.owner===r._primitive||e.owner===r._primitive._billboardCollection:!1}:void 0,!0}),this._showWireframe=u(function(){return m._surface.tileProvider._debug.wireframe=r.wireframe,!0}),this._doSuspendUpdates=u(function(){return m._surface._debug.suspendLodUpdate=r.suspendUpdates,r.suspendUpdates||(r.filterTile=!1),!0});var p;this._showTileCoordinates=u(function(){return r.tileCoordinates&&!t(p)?p=e.imageryLayers.addImageryProvider(new s({tilingScheme:e.terrainProvider.tilingScheme})):!r.tileCoordinates&&t(p)&&(e.imageryLayers.remove(p),p=void 0),!0}),this._showTileBoundingSphere=u(function(){return m._surface.tileProvider._debug.boundingSphereTile=r.tileBoundingSphere?r._tile:void 0,!0}),this._doFilterTile=u(function(){return r.filterTile?(r.suspendUpdates=!0,r.doSuspendUpdates(),m._surface._tilesToRender=[],t(r._tile)&&m._surface._tilesToRender.push(r._tile)):(r.suspendUpdates=!1,r.doSuspendUpdates()),!0});var f=function(e){r._canvas.removeEventListener("mousedown",f,!1),r.pickPrimitiveActive=!1;var i=r._scene.pick({x:e.clientX,y:e.clientY});t(i)&&(r.primitive=t(i.collection)?i.collection:i.primitive)};this._pickPrimitive=u(function(){r.pickPrimitiveActive=!r.pickPrimitiveActive,r.pickPrimitiveActive?r._canvas.addEventListener("mousedown",f,!1):r._canvas.removeEventListener("mousedown",f,!1)});var v=function(e){var i,o=m.ellipsoid,a=r._scene.camera.pickEllipsoid({x:e.clientX,y:e.clientY},o);if(t(a))for(var s=o.cartesianToCartographic(a),l=m._surface.tileProvider._tilesToRenderByTextureCount,u=0;!i&&u<l.length;++u){var c=l[u];if(t(c))for(var h=0;!i&&h<c.length;++h){var d=c[h];n.contains(d.rectangle,s)&&(i=d)}}r.tile=i,r._canvas.removeEventListener("mousedown",v,!1),r.pickTileActive=!1};this._pickTile=u(function(){r.pickTileActive=!r.pickTileActive,r.pickTileActive?r._canvas.addEventListener("mousedown",v,!1):r._canvas.removeEventListener("mousedown",v,!1)})};return r(m.prototype,{scene:{get:function(){return this._scene}},toggleDropDown:{get:function(){return this._toggleDropDown}},showFrustums:{get:function(){return this._showFrustums}},showPerformance:{get:function(){return this._showPerformance}},showPrimitiveBoundingSphere:{get:function(){return this._showPrimitiveBoundingSphere}},showPrimitiveReferenceFrame:{get:function(){return this._showPrimitiveReferenceFrame}},doFilterPrimitive:{get:function(){return this._doFilterPrimitive}},showWireframe:{get:function(){return this._showWireframe}},doSuspendUpdates:{get:function(){return this._doSuspendUpdates}},showTileCoordinates:{get:function(){return this._showTileCoordinates}},showTileBoundingSphere:{get:function(){return this._showTileBoundingSphere}},doFilterTile:{get:function(){return this._doFilterTile}},toggleGeneral:{get:function(){return this._toggleGeneral}},togglePrimitives:{get:function(){return this._togglePrimitives}},toggleTerrain:{get:function(){return this._toggleTerrain}},pickPrimitive:{get:function(){return this._pickPrimitive}},pickTile:{get:function(){return this._pickTile}},selectParent:{get:function(){var e=this;return u(function(){e.tile=e.tile.parent})}},selectNW:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[0]})}},selectNE:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[1]})}},selectSW:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[2]})}},selectSE:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[3]})}},primitive:{set:function(e){var r=this._primitive;e!==r&&(this.hasPickedPrimitive=!0,t(r)&&(r.debugShowBoundingVolume=!1),this._scene.debugCommandFilter=void 0,t(this._modelMatrixPrimitive)&&(this._scene.primitives.remove(this._modelMatrixPrimitive),this._modelMatrixPrimitive=void 0),this._primitive=e,e.show=!1,setTimeout(function(){e.show=!0},50),this.showPrimitiveBoundingSphere(),this.showPrimitiveReferenceFrame(),this.doFilterPrimitive())},get:function(){return this._primitive}},tile:{set:function(e){if(t(e)){this.hasPickedTile=!0;var r=this._tile;e!==r&&(this.tileText="L: "+e.level+" X: "+e.x+" Y: "+e.y,this.tileText+="<br>SW corner: "+e.rectangle.west+", "+e.rectangle.south,this.tileText+="<br>NE corner: "+e.rectangle.east+", "+e.rectangle.north,this.tileText+="<br>Min: "+e.data.minimumHeight+" Max: "+e.data.maximumHeight),this._tile=e,this.showTileBoundingSphere(),this.doFilterTile()}else this.hasPickedTile=!1,this._tile=void 0},get:function(){return this._tile}},update:{get:function(){var e=this;return function(){e.frustums&&(e.frustumStatisticText=c(e._scene.debugFrustumStatistics)),e.performance&&e._performanceDisplay.update(),e.primitiveReferenceFrame&&(e._modelMatrixPrimitive.modelMatrix=e._primitive.modelMatrix)}}}}),m}),r("Widgets/CesiumInspector/CesiumInspector",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./CesiumInspectorViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(t,r){if(!e(t))throw new i("container is required.");if(!e(r))throw new i("scene is required.");t=o(t);var s=new a(r);this._viewModel=s,this._container=t;var l=document.createElement("div");this._element=l;var u=document.createElement("div");u.textContent="Cesium Inspector",u.className="cesium-cesiumInspector-button",u.setAttribute("data-bind","click: toggleDropDown"),l.appendChild(u),l.className="cesium-cesiumInspector",l.setAttribute("data-bind",'css: { "cesium-cesiumInspector-visible" : dropDownVisible, "cesium-cesiumInspector-hidden" : !dropDownVisible }'),t.appendChild(this._element);var c=document.createElement("div");this._panel=c,c.className="cesium-cesiumInspector-dropDown",l.appendChild(c);var h=document.createElement("div");h.className="cesium-cesiumInspector-sectionHeader";var d=document.createElement("span");d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: toggleGeneral, text: generalSwitchText"),h.appendChild(d),h.appendChild(document.createTextNode("General")),c.appendChild(h);var m=document.createElement("div");m.className="cesium-cesiumInspector-section",m.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : generalVisible, "cesium-cesiumInspector-hide" : !generalVisible}'),c.appendChild(m);var p=document.createElement("div");m.appendChild(p);var f=document.createElement("div");f.className="cesium-cesiumInspector-frustumStats",f.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : frustums, "cesium-cesiumInspector-hide" : !frustums}, html: frustumStatisticText');var v=document.createElement("input");v.type="checkbox",v.setAttribute("data-bind","checked: frustums, click: showFrustums"),p.appendChild(v),p.appendChild(document.createTextNode("Show Frustums")),p.appendChild(f);var g=document.createElement("div");m.appendChild(g);var _=document.createElement("input");_.type="checkbox",_.setAttribute("data-bind","checked: performance, click: showPerformance"),g.appendChild(_),g.appendChild(document.createTextNode("Performance Display"));var y=document.createElement("div");y.className="cesium-cesiumInspector-sectionHeader",d=document.createElement("span"),d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: togglePrimitives, text: primitivesSwitchText"),y.appendChild(d),y.appendChild(document.createTextNode("Primitives")),c.appendChild(y);var C=document.createElement("div");C.className="cesium-cesiumInspector-section",C.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : primitivesVisible, "cesium-cesiumInspector-hide" : !primitivesVisible}'),c.appendChild(C);var w=document.createElement("div");w.className="cesium-cesiumInspector-pickSection",C.appendChild(w);
var S=document.createElement("input");S.type="button",S.value="Pick a primitive",S.className="cesium-cesiumInspector-pickButton",S.setAttribute("data-bind",'css: {"cesium-cesiumInspector-pickButtonHighlight" : pickPrimitiveActive}, click: pickPrimitive');var E=document.createElement("div");E.className="cesium-cesiumInspector-center",E.appendChild(S),w.appendChild(E);var b=document.createElement("div");w.appendChild(b);var T=document.createElement("input");T.type="checkbox",T.setAttribute("data-bind","checked: primitiveBoundingSphere, click: showPrimitiveBoundingSphere, enable: hasPickedPrimitive"),b.appendChild(T),b.appendChild(document.createTextNode("Show bounding sphere"));var x=document.createElement("div");w.appendChild(x);var P=document.createElement("input");P.type="checkbox",P.setAttribute("data-bind","checked: primitiveReferenceFrame, click: showPrimitiveReferenceFrame, enable: hasPickedPrimitive"),x.appendChild(P),x.appendChild(document.createTextNode("Show reference frame"));var A=document.createElement("div");this._primitiveOnly=A,w.appendChild(A);var M=document.createElement("input");M.type="checkbox",M.setAttribute("data-bind","checked: filterPrimitive, click: doFilterPrimitive, enable: hasPickedPrimitive"),A.appendChild(M),A.appendChild(document.createTextNode("Show only selected"));var D=document.createElement("div");D.className="cesium-cesiumInspector-sectionHeader",d=document.createElement("span"),d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: toggleTerrain, text: terrainSwitchText"),D.appendChild(d),D.appendChild(document.createTextNode("Terrain")),c.appendChild(D);var I=document.createElement("div");I.className="cesium-cesiumInspector-section",I.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : terrainVisible, "cesium-cesiumInspector-hide" : !terrainVisible}'),c.appendChild(I);var R=document.createElement("div");R.className="cesium-cesiumInspector-pickSection",I.appendChild(R);var O=document.createElement("input");O.type="button",O.value="Pick a tile",O.className="cesium-cesiumInspector-pickButton",O.setAttribute("data-bind",'css: {"cesium-cesiumInspector-pickButtonHighlight" : pickTileActive}, click: pickTile'),E=document.createElement("div"),E.appendChild(O),E.className="cesium-cesiumInspector-center",R.appendChild(E);var L=document.createElement("div");R.appendChild(L);var N=document.createElement("input");N.type="button",N.value="Parent",N.className="cesium-cesiumInspector-pickButton",N.setAttribute("data-bind","click: selectParent");var B=document.createElement("input");B.type="button",B.value="NW",B.className="cesium-cesiumInspector-pickButton",B.setAttribute("data-bind","click: selectNW");var F=document.createElement("input");F.type="button",F.value="NE",F.className="cesium-cesiumInspector-pickButton",F.setAttribute("data-bind","click: selectNE");var z=document.createElement("input");z.type="button",z.value="SW",z.className="cesium-cesiumInspector-pickButton",z.setAttribute("data-bind","click: selectSW");var V=document.createElement("input");V.type="button",V.value="SE",V.className="cesium-cesiumInspector-pickButton",V.setAttribute("data-bind","click: selectSE");var k=document.createElement("div");k.className="cesium-cesiumInspector-tileText",L.className="cesium-cesiumInspector-frustumStats",L.appendChild(k),L.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : hasPickedTile, "cesium-cesiumInspector-hide" : !hasPickedTile}'),k.setAttribute("data-bind","html: tileText");var U=document.createElement("div");U.className="cesium-cesiumInspector-relativeText",U.textContent="Select relative:",L.appendChild(U);var W=document.createElement("table"),G=document.createElement("tr"),H=document.createElement("tr"),q=document.createElement("td");q.appendChild(N);var j=document.createElement("td");j.appendChild(B);var Y=document.createElement("td");Y.appendChild(F),G.appendChild(q),G.appendChild(j),G.appendChild(Y);var X=document.createElement("td"),Z=document.createElement("td");Z.appendChild(z);var Q=document.createElement("td");Q.appendChild(V),H.appendChild(X),H.appendChild(Z),H.appendChild(Q),W.appendChild(G),W.appendChild(H),L.appendChild(W);var J=document.createElement("div");R.appendChild(J);var K=document.createElement("input");K.type="checkbox",K.setAttribute("data-bind","checked: tileBoundingSphere, enable: hasPickedTile, click: showTileBoundingSphere"),J.appendChild(K),J.appendChild(document.createTextNode("Show bounding sphere"));var $=document.createElement("div");R.appendChild($);var et=document.createElement("input");et.type="checkbox",et.setAttribute("data-bind","checked: filterTile, enable: hasPickedTile, click: doFilterTile"),$.appendChild(et),$.appendChild(document.createTextNode("Show only selected"));var tt=document.createElement("div");I.appendChild(tt);var rt=document.createElement("input");rt.type="checkbox",rt.setAttribute("data-bind","checked: wireframe, click: showWireframe"),tt.appendChild(rt),tt.appendChild(document.createTextNode("Wireframe"));var it=document.createElement("div");I.appendChild(it);var nt=document.createElement("input");nt.type="checkbox",nt.setAttribute("data-bind","checked: suspendUpdates, click: doSuspendUpdates"),it.appendChild(nt),it.appendChild(document.createTextNode("Suspend LOD update"));var ot=document.createElement("div");I.appendChild(ot);var at=document.createElement("input");at.type="checkbox",at.setAttribute("data-bind","checked: tileCoordinates, click: showTileCoordinates"),ot.appendChild(at),ot.appendChild(document.createTextNode("Show tile coordinates")),n.applyBindings(s,this._element)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/CesiumWidget/CesiumWidget",["../../Core/buildModuleUrl","../../Core/Cartesian3","../../Core/Clock","../../Core/Credit","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/Ellipsoid","../../Core/formatError","../../Core/getTimestamp","../../Core/requestAnimationFrame","../../Core/ScreenSpaceEventHandler","../../Scene/BingMapsImageryProvider","../../Scene/Globe","../../Scene/Moon","../../Scene/Scene","../../Scene/SceneMode","../../Scene/SkyAtmosphere","../../Scene/SkyBox","../../Scene/Sun","../getElement"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(t){return e("Assets/Textures/SkyBox/tycho2t3_80_"+t+".jpg")}function b(e){function t(){if(!e.isDestroyed())if(e._useDefaultRenderLoop)try{var r=e._targetFrameRate;if(o(r)){var i=e._lastFrameTime,n=1e3/r,a=h(),s=a-i;s>n&&(e.resize(),e.render(),e._lastFrameTime=a-s%n),d(t)}else e.resize(),e.render(),d(t)}catch(l){if(e._useDefaultRenderLoop=!1,e._renderLoopRunning=!1,e._showRenderLoopErrors){var u="An error occurred while rendering.  Rendering has stopped.";e.showErrorPanel(u,void 0,l)}}else e._renderLoopRunning=!1}e._renderLoopRunning=!0,e._lastFrameTime=h(),d(t)}function T(e){var t=e._canvas,r=t.clientWidth,i=t.clientHeight,o=n(window.devicePixelRatio,1)*e._resolutionScale;e._canvasWidth=r,e._canvasHeight=i,r*=o,i*=o,t.width=r,t.height=i,e._canRender=0!==r&&0!==i}function x(e){var t=e._canvas,r=t.width,i=t.height;if(0!==r&&0!==i){var n=e._scene.camera.frustum;o(n.aspectRatio)?n.aspectRatio=r/i:(n.top=n.right*(i/r),n.bottom=-n.top)}}var P="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAHYAAAAaCAYAAABikagwAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB9wGGRQyF371QVsAABOHSURBVGje7Vp5cFTHmf91v2Nm3owGnYMuEEJCOBiEjDlsDMYQjGMOOwmXcWxiLywpJ9iuTXZd612corJssFOxi8LerXizxEGUvWsivNxxHHCQ8WYBYSFzmUMCCXQjaUajOd/V+4f6Kc14kI/KZv/xq+p6M/PmO15/9/c1wa0vwpcMQAHgBuAFoPG7mz8jAGwASQBxADFhJQGYACwAjK+vrr/AJQ8jVMqfuwH4AGQByAaQnTNqXGHWqHGFbq8/g1BJsgw9GQ12Bds/qWsxEvEeAEEAfQDCAKKCgPGVcP//BOsIVQHgAZAJIACgsHTqvDvK7150T2bR2DFaZm6W4slwUypR20yaiUg4OtDbcaP36rlPPt6/7f2B3q5mAB0AeriAE18J9y93kVu4X4W73BwAhQBK5v/gZ98ZVXXvDG92IJMx569MQDEoK0tPmOHu1s4L7799sH7vtvcAXAPQCaCfu2qLu+7h+Eh3sS8Bcyt48iVgPos2+4J7jS+BIx2etDBSynfH/Xq46y0CUL70n3/zXMmUuXepWoZHFCQhFIQARCBFJYV6/Nn+QHnVBH9Ovq/51JFWADpfJhcqEzyDcx9ukTTr/xr2VnDpng0nuHR0h1u3wvWF6EspgBIAFYAfQAGAsuU/rfm7kePvvJ0QiTj6QSgBISS9ujEGSikkxaXklIwfK8uK2Xru2HVurWKspZyezGmmWwp/LqVsupPQub4grPQ5YIejKQvPJAGflLLJSBGmxPEqKXhU4XdJEBq7BR5Z+L+DKx3MTTHWEaybx9WCud/btCJQMeX2Qevk+NPoks0YPArF/RUj0NyXxOmO2CAy1a1OmL9yUVfTmatXTx52EildYFQVNlgRmBR1xQJgCBbPBAVUhcw8lTObLz0FVk4RIEmJJyJNZzFBiCTFBRL+f50rriFUATRFiZSU/XYEAw6X5LlIUghZqXvl5p8pfycRZsgjymlKGw1Adm7JbRUVs785nwGghP5pp9mfFMOxWstmuC3gwdcrRqA/buJUWwyKRMAYgydrZNZt9337623njn+ixyN9nAmdM5nBvYOPfxc3mnEmTQ4T5VZv8hfz8aUKnocJd5tvVhxAhOMADzNefleFjRUFa/D/xzi8LQhIEpTG4VXnNBzlZYISufk7juCfqaAoLkHYcZ6HBAEM8O+ObJz3HcFDpJfDJwWYfiHMMTklviocKHv6I3+zRFLdKhEEatmALBFIBIibNhQ6KFyJEjT2JHDoUj/a+nVIVIBhBGOnzptWXzhmTFfT2TZBOH4AgSeeeGJqRUVFqdfr9btcLnVQXwapmqZpJZPJRCgUCh47duzie++9dwWAXl5enrlp06bF0WhUM01TYYwRrmg2vzNKqS3Lsunz+Yy6urpTP//5z09blkVLSkryVq9ePT03NzegqqqbUnqTGyOEMNM0k319fX2///3vz9bW1l4DYD700EPFy5Ytm65pmvbBBx9c2rp166Wnnnqq7MEHH5zAGIu8/vrr+w8ePPgJVwrRO2gAcg8cOLA2mUx62tvbB9avX39s+fLlo++///5JXNiwbXugpqam9tChQ2cEj6NzuQwlsi+//PKSzMzMQtu2qcfjMZqbm09v2LDht4J3sQEQOU2Jo8mKKzt7VEU5lSgFBi3PZkBZrgv3lGbCo1Jc7I7iSGN40JcQgoGkhXdO94ESQJEoGI+1k/M9mDKqQHEv++akl186e45rNAAE3njjjccWLFhwfyAQyJEkiabGbcc7JJNJva2trX3Lli3vvPbaa+eKi4uLV6xY8d10cf5TcZ8x5OXl5b366qs9lFLtrbfeWldVVXW7pmkuxhjS0SSEIJlMGitXrrz2/PPPv1lTU3NtypQp0x955JG/kmVZdrlcR7du3WrOnTt33pIlS+YDwNGjR68ePHiwjVtukm+wI9ichQsXPgUAHR0d3evXr78xc+bMu9asWbOQUjpENz8/v/jQoUP/IiiH40UzAeQvW7Zs1rp16/7a5/NpDr/19fWlGzZsOM4tNsphkc5iPaXTvl6uuDUvY4MZLwNQ4Ffw+LR8+KQQTCuJSQUFcMsEe88FoSkSKCFwyWSISQbg9pEefHdGAJHIdUydVjFecL3K448/Pm3hwoUPBAKBHFGIlmU5pRCRpMGEze12q2PHjh2zatWqeTt37gwODAxkOQIJhUJ6Y2Njn6IojFJqE0KYsGyPx0POnTvXnUgkfGvXrr1j5syZU7iFsKampv5YLBZ34GzbJgAwatSo7MzMTE95eXnZT37yk0dramr+PRQKZSQSCdPn88nBYNADID8UCmkAYBiGGQ6Hna6cksbdZliWZUuSRKPRKAAUBINBfywWM30+n+yEtenTp9+5YsWKGTt37oxwz+a44RwARc8+++xSr9eriQrY398v8311CUncTTHN0Q7Vl1OQJymq4iBwyxQPT8qDVwri1d1/i8ttp/AP39mOBeMn41pQx9mOGFSZ3qT52ZqMR6aMRGvXKfzbgX9Ea3PnSLEdOWXKlK/5/X4/AFy8ePHG6tWr90QikS5VVaOEEIsxRhljngcffLBi8+bNjxBCUFJSMrKkpMRvGIbboXP27Nn+2bNn/3cgEIgSQmKEEAOARQixKKVxRVEioVAoYtu2dMcdd4x24Hbv3t3+ox/96ONoNBqklMa4ppNkMinNnz8///nnn6/y+Xw0mUxaANy6rrsdl28YhguAX9d1F98jwn9TUjJkJ5N1DWV0ti0ByDAMw+PsbzQatX0+Hy0oKMhcvnz5nP3791+IxWJRIUaPfO655+ZVVlaOA4BoNGprmkZ5uJJThZouKyYAqOrWVEKoE7cwszQDlQUK3jr8S5y++iEIIXh55/fwylOH8e3KHHSEdfQnLFBuRbJEsLQyF27Sh3eO/iuudV+EaSuqkJF6MjMzs9xutwIAv/rVr06eOHHiEwCtPBHQOaPaxYsXLxcXF8cKCwtzOzo6+ltbW4OFhYU+h2nDMAgAqbu7W8xkLSEBcsos1bbtocZIIBBQs7Ky5Pb2dkvXdV1wfaipqemsqak5yF1bFABljNEU4Sj87nia1LKHCJWGLLh6AkDhiksAoLq6um/VqlWZWVlZ8gMPPHDHwoULK2tqasJcYJ7y8vKyb33rW/f4/X43YwybNm26vnnz5pIUb0tvVe44maSVjEfizDJtmwFlOS4srczGiQvv4ncnd4ASAkIo+mN92LLrB/j7Vb/GQxOz8Z/1PTDsQXc6p3QEqopU7Dr6S5y8fAiKpCKhs6SQSUqyLKsO4d7e3j4AvbxD1csFQQF4EolEaP369TVCFjuiqKiogG8w5s6dm8sY++ZwcfbZZ5/dvHXr1isnT55scVz+rFmz8urr6xc4Ls22bZZIJExd181oNGr09PREDx06dPmFF144Ho/HTVGIjiE4guECoyl1LYTPcppGEAghDAAikUjixRdfbHnppZfKfD6fa82aNfMOHz7cHgwGbwBwr1ix4u677rqrgsfU4I4dO66lCPZTXSkqpOaMa60e7mjuosw0RmYoWHf3SLT3NOKt91+CbsZBeOlDCcX5luP4rw9fw4wSH+4p9cMlU3xtpAfLJmej/vIR7PnjLyDRwXeKhoxubokWAOYkDXxTLE5brB11oTZMCrWoNQgymJwZhsHC4bAZjUaNaDRqxGIx3VnxeDzJky8TQGLHjh3n9u3bd6ytrS3U2dkZ6e3tjfX398cHBgYS8XjcIIQQr9frKioq8ldWVhb88Ic/vHfbtm3zAXhs25aHUx7uEt1COeXEXM3JfAWLvWnSxRhLbNu2rampqSlMCME3vvGNyXPmzKkCUFZeXn776tWr72WMwbZtvPDCCx+5XK6wo6BcOdhwQ4Chuu/KR39onDGS9T80u9ivkgiqD/0UbT2NcKvelMaEhXfrqlGaPwEPT5qH0lwvqopcaOtpxPb3/gmGmYBEFRBC0HUlfp67tQQALxMKYsaYU+tlcSadNN8NIOO+++4bnZ2d7Q+Hw+zIkSNJxtiQ9TQ1NUW3bNnSmJWVlZBlWaeUWs5SVTUxYsSIRF1dXScAwzTN2MMPP7w3Pz//ZFVVVUFubq7L6/VKmqZRl8ulKIriVlVVmz59ev6cOXMCLpeLLliwYDyAOpGm08SglA659mQy6eHTrwiPtRYXbi6vP2/yjI61AoDL5Ur09vZ2bt++/ezGjRvvppSSjRs3Lti9e/fvnnzyyfHjx48fyRjDwYMHL9TW1jYWFhZ6xfIs3UhUTlPQRwGE9Gv/c/ba9YGi2rPv0FONf/iUUB3Lj8SDqD60GYtmdGBcYSVOnL+K39b9Gp19zVDkwZzBSpLY9Qv9Z3lKHgOgmaYZd9zg1KlTS994441L3G3lcD6oo/1btmxZFwgEctrb27vWrFlzwLIs2cmKW1pa4q+//vp1AbchdIKiPGZHAJDFixcHpk+ffnsoFNLefvvt3ra2Nl0YSDhdt4zy8vLwsWPHsl0ul6ooigSACuEZXKBJwzAMxhhUVZW8Xm8uH5hQ3mCwOf95VVVVYx03yQVhUEpNQbBxADfefPPN6NKlS8dUVlYWVlZW5r344osz1q1bV8IYQzAYjFVXV5+IxWIdkiTlpfDCUgcC6Sw2CqBvw4ZN+7/9d+Wzo1avT5HU9N1tMpj4dfU14z/efxletx9xPYpIPAhVccO2bVBKcf189I/h3mSLkBi5b9y40RWLxZJer9f12GOPTa6oqMjq6enpJYQYlFLGyx21tLQ0MGnSpDGEECQSCZMQIjuNCF6aqI8++mheVlZWJrdYkzcoLEVREj6fL1FfX39x165dzfPnzy/7/ve/v1LXdWvlypVde/bsuRKLxQyn1LEsS2aMeebNm1fs8/lkxhgsy7IAJBRF0Yc2TZZ1AANNTU0djoJt2rRpzqxZs/K6urq6JUnSCSHMMAxZ07SsxYsXV1JKCWMMAwMDMQBhVVWTjtU6gr1y5Yq1d+/ej8aNG5eraZr6zDPPjPV4PBJjDLW1ted27dr1MYCYqqpDcpMkyRIaEyydxToxNgagr7e3t+XEe0rNxPkjnvhTznNr4Sb0KBL6YO9BovJQnRXptTqaPgr9wTLsDgAhTkOurq4+unz58vs1TRvl9/vVuXPnljHGxgqxw2GcEjLYJLlw4cKV06dPd06bNo04+MePH+/ftm3bNNG1iW5KVVVl//79ew4cONC8d+/ey88884ysKIp85513jpo8eXJh2pHX4EUIITh58uRFAN1utzvHcb0ejycGoKuurk5vbW29u7i4ODB69OisJ5988i4xxDhsKIoiEUJgmqZ94MCBOgBdmqaVODxrmhbhiaP+4x//+N2lS5dOmjBhwhiPxyMBQFdXV191dfX7tm23AdBdLtdQzFYUxWmb3iRcmqbh7vQfOz9+v/PdjvP6kcHuE288MJZWuM4Smw1mgkQvHw/v6Wga+BjADY53AEDfmTNnLq9du/Znp06datB13RA3ROwGmaZphcPhgX379v326aefftO27Tafz9fJGGOmadqMMSbLMpEkiaZbjDFommYQQsK1tbWNr7zyymvhcLifEIJbwRBCmGVZ1vHjxz9atGjRLwA0Z2dndzpdHb/fHwTQcuLEiYann3761fPnz3+i67pBCCGUUkoIofwjpZQS27ZZd3f3ja1bt1Zv3LhxL4CrmZmZPYQQkxCCjIyMEIB2AG0Amrdv3/6beDweNwzD1nXdPHXq1Indu3cf48+7MjIyupw98ng8EW4wCWH4kHbQLgsnJ4oAlN332Ji1hbeps6lEaLohQLrhQCJi9zcei77TcLh9H4CrALp4rLN5LBvBE4scAP6JEyfmBQIBL6VUopSCMcYGBgYSly5dCvX19YW5QkQAmD6fz3PvvfeWxmIxr2EYHqFXPBRrKKWWJEmG1+uNtbW1dTU0NNzgz7wA/OXl5bkFBQV+XsYQwVpZMpk0jh8/3snpRQCYo0aN8k6YMCHX5XLRa9euBRsaGnr4Jnp458c7ceLEbK/X6xL5MQzDbGhoCNq2HeO4YgBYWVmZv6KiIkdVVbS0tHQ3NDR0CsORrDlz5oyllHoYY3p9ff31cDjczeGhaVrGkiVLSg3DkLu7u/s+/PDDFn4UKeJYLhnmAJvGs9QCAKOnLMhfNHqSNl/LlHOpTORbWa4et2ORXqv1wgf9NVfO9B7nTYcuPvlICq02t9CJ8ggjOJomodOF0ZQtHNvxCC08pBnbmcIhO53jdA7mpXaKUkOSWGoxYaaKlIa7IozT0uET+XDGehDGhhBGb6bTmBHezeb8OyNPCPQk/ptzeHConCSfcZDNI1hWQXaBVl5254hZmSPVce4MKUdxEQ+VJMnUbcNIWJFoyOzoa02eOX2k+yg/79TFNWkgZchOUobe4vA63WzUEmpYsa+dCoM0Izgz5aQkTUOPpGvUpKFJBaUR8Q03cLdT8NkppyEgPGOCYcnCiNASsn2SwrstDA2Gxnbkc5xSdHGrcmaBWYoqZ+YUe4pcXuqXJCobupWIhaze3vZohzAfdOaKN2mSwPxwR0ZSZ6uptZoIN9yxFCYIiqV5v3THStgwNNPhvtXxFgzDP9K8q52Cj6ZRNnaLffoUDfI5zhVLgrvxCN0Ux5URYXYYF84Wf2qqf4uDV591ZuiLHir7c8F+mZOU5M+Iazg8n3mYjnxORkV3I6dxg6KrMQW3Yaexlq+uv8D1v2IL+t4z3B/NAAAAAElFTkSuQmCC",A=function(e,a){e=S(e),a=n(a,{});var s=document.createElement("div");s.className="cesium-widget",e.appendChild(s);var l=document.createElement("canvas");l.oncontextmenu=function(){return!1},l.onselectstart=function(){return!1},s.appendChild(l);var c=document.createElement("div");c.className="cesium-widget-credits";var h=o(a.creditContainer)?S(a.creditContainer):s;h.appendChild(c),this._element=s,this._container=e,this._canvas=l,this._canvasWidth=0,this._canvasHeight=0,this._creditContainer=c,this._canRender=!1,this._renderLoopRunning=!1,this._showRenderLoopErrors=n(a.showRenderLoopErrors,!0),this._resolutionScale=1,this._forceResize=!1,this._clock=n(a.clock,new r),this._lastFrameTime=void 0,T(this);try{var d=new g({canvas:l,contextOptions:a.contextOptions,creditContainer:c,mapProjection:a.mapProjection,orderIndependentTranslucency:a.orderIndependentTranslucency,scene3DOnly:n(a.scene3DOnly,!1)});this._scene=d,d.camera.constrainedAxis=t.UNIT_Z,x(this);var b=u.WGS84,A=d.frameState.creditDisplay,M=new i("Cesium",P,"http://cesiumjs.org/");A.addDefaultCredit(M);var D=new f(b);this._globe=D,d.globe=D;var I=a.skyBox;o(I)||(I=new C({sources:{positiveX:E("px"),negativeX:E("mx"),positiveY:E("py"),negativeY:E("my"),positiveZ:E("pz"),negativeZ:E("mz")}})),d.skyBox=I,d.skyAtmosphere=new y(b),d.sun=new w,d.moon=new v;var R=a.imageryProvider;o(R)||(R=new p({url:"//dev.virtualearth.net"})),R!==!1&&d.imageryLayers.addImageryProvider(R),o(a.terrainProvider)&&(d.terrainProvider=a.terrainProvider),this._screenSpaceEventHandler=new m(l),o(a.sceneMode)&&(a.sceneMode===_.SCENE2D&&this._scene.morphTo2D(0),a.sceneMode===_.COLUMBUS_VIEW&&this._scene.morphToColumbusView(0)),this._useDefaultRenderLoop=void 0,this.useDefaultRenderLoop=n(a.useDefaultRenderLoop,!0),this._targetFrameRate=void 0,this.targetFrameRate=a.targetFrameRate;var O=this;d.renderError.addEventListener(function(e,t){if(O._useDefaultRenderLoop=!1,O._renderLoopRunning=!1,O._showRenderLoopErrors){var r="An error occurred while rendering.  Rendering has stopped.";O.showErrorPanel(r,void 0,t)}})}catch(L){var N="Error constructing CesiumWidget.",B='Visit <a href="http://get.webgl.org">http://get.webgl.org</a> to verify that your web browser and hardware support WebGL.  Consider trying a different web browser or updating your video drivers.  Detailed error information is below:';throw this.showErrorPanel(N,B,L),L}};return a(A.prototype,{container:{get:function(){return this._container}},canvas:{get:function(){return this._canvas}},creditContainer:{get:function(){return this._creditContainer}},scene:{get:function(){return this._scene}},clock:{get:function(){return this._clock}},screenSpaceEventHandler:{get:function(){return this._screenSpaceEventHandler}},targetFrameRate:{get:function(){return this._targetFrameRate},set:function(e){if(0>=e)throw new l("targetFrameRate must be greater than 0.");this._targetFrameRate=e}},useDefaultRenderLoop:{get:function(){return this._useDefaultRenderLoop},set:function(e){this._useDefaultRenderLoop!==e&&(this._useDefaultRenderLoop=e,e&&!this._renderLoopRunning&&b(this))}},resolutionScale:{get:function(){return this._resolutionScale},set:function(e){if(0>=e)throw new l("resolutionScale must be greater than 0.");this._resolutionScale=e,this._forceResize=!0}}}),A.prototype.showErrorPanel=function(e,t,r){var i=this._element,n=document.createElement("div");n.className="cesium-widget-errorPanel";var a=document.createElement("div");a.className="cesium-widget-errorPanel-content",n.appendChild(a);var s=document.createElement("div");s.className="cesium-widget-errorPanel-header",s.appendChild(document.createTextNode(e)),a.appendChild(s);var l=document.createElement("div");l.className="cesium-widget-errorPanel-scroll",a.appendChild(l);var u=function(){l.style.maxHeight=Math.max(Math.round(.9*i.clientHeight-100),30)+"px"};if(u(),o(window.addEventListener)&&window.addEventListener("resize",u,!1),o(t)){var h=document.createElement("div");h.className="cesium-widget-errorPanel-message",h.innerHTML="<p>"+t+"</p>",l.appendChild(h)}var d="(no error details available)";o(r)&&(d=c(r));var m=document.createElement("div");m.className="cesium-widget-errorPanel-message",m.appendChild(document.createTextNode(d)),l.appendChild(m);var p=document.createElement("div");p.className="cesium-widget-errorPanel-buttonPanel",a.appendChild(p);var f=document.createElement("button");f.setAttribute("type","button"),f.className="cesium-button",f.appendChild(document.createTextNode("OK")),f.onclick=function(){o(u)&&o(window.removeEventListener)&&window.removeEventListener("resize",u,!1),i.removeChild(n)},p.appendChild(f),i.appendChild(n),console.error(e+"\n"+t+"\n"+d)},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){this._scene=this._scene&&this._scene.destroy(),this._container.removeChild(this._element),s(this)},A.prototype.resize=function(){var e=this._canvas,t=e.clientWidth,r=e.clientHeight;(this._forceResize||this._canvasWidth!==t||this._canvasHeight!==r)&&(this._forceResize=!1,T(this),x(this))},A.prototype.render=function(){this._scene.initializeFrame();var e=this._clock.tick();this._canRender&&this._scene.render(e)},A}),r("Widgets/ClockViewModel",["../Core/Clock","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/EventHelper","../Core/JulianDate","../ThirdParty/knockout"],function(e,t,r,i,n,o,a){"use strict";var s=function(r){t(r)||(r=new e),this._clock=r,this._eventHelper=new n,this._eventHelper.add(r.onTick,this.synchronize,this);var i=a.observable(r.startTime);i.equalityComparer=o.equals,this.systemTime=a.observable(o.now()),this.systemTime.equalityComparer=o.equals,a.track(this,["systemTime"]),this.startTime=void 0,a.defineProperty(this,"startTime",{get:i,set:function(e){i(e),r.startTime=e}});var s=a.observable(r.stopTime);s.equalityComparer=o.equals,this.stopTime=void 0,a.defineProperty(this,"stopTime",{get:s,set:function(e){r.stopTime=e,s(e)}});var l=a.observable(r.currentTime);l.equalityComparer=o.equals,this.currentTime=void 0,a.defineProperty(this,"currentTime",{get:l,set:function(e){r.currentTime=e,l(e)}});var u=a.observable(r.multiplier);this.multiplier=void 0,a.defineProperty(this,"multiplier",{get:u,set:function(e){r.multiplier=e,u(e)}});var c=a.observable(r.clockStep);c.equalityComparer=function(e,t){return e===t},this.clockStep=void 0,a.defineProperty(this,"clockStep",{get:c,set:function(e){c(e),r.clockStep=e}});var h=a.observable(r.clockRange);h.equalityComparer=function(e,t){return e===t},this.clockRange=void 0,a.defineProperty(this,"clockRange",{get:h,set:function(e){h(e),r.clockRange=e}});var d=a.observable(r.canAnimate);this.canAnimate=void 0,a.defineProperty(this,"canAnimate",{get:d,set:function(e){d(e),r.canAnimate=e}});var m=a.observable(r.shouldAnimate);this.shouldAnimate=void 0,a.defineProperty(this,"shouldAnimate",{get:m,set:function(e){m(e),r.shouldAnimate=e}})};return r(s.prototype,{clock:{get:function(){return this._clock}}}),s.prototype.synchronize=function(){var e=this._clock,t=e.startTime,r=e.stopTime,i=e.currentTime,n=e.multiplier,a=e.clockStep,s=e.clockRange,l=e.canAnimate,u=e.shouldAnimate;this.systemTime=o.now(),this.startTime=t,this.stopTime=r,this.currentTime=i,this.multiplier=n,this.clockStep=a,this.clockRange=s,this.canAnimate=l,this.shouldAnimate=u},s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){this._eventHelper.removeAll(),i(this)},s}),r("Widgets/Command",["../Core/DeveloperError"],function(e){"use strict";var t=function(){this.canExecute=void 0,this.beforeExecute=void 0,this.afterExecute=void 0,e.throwInstantiationError()};return t}),r("Widgets/FullscreenButton/FullscreenButtonViewModel",["../../Core/defaultValue","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/Fullscreen","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){var r=this,i=o.observable(n.fullscreen),s=o.observable(n.enabled);this.isFullscreen=void 0,o.defineProperty(this,"isFullscreen",{get:function(){return i()}}),this.isFullscreenEnabled=void 0,o.defineProperty(this,"isFullscreenEnabled",{get:function(){return s()},set:function(e){s(e&&n.enabled)}}),this.tooltip=void 0,o.defineProperty(this,"tooltip",function(){return this.isFullscreenEnabled?i()?"Exit full screen":"Full screen":"Full screen unavailable"}),this._command=a(function(){n.fullscreen?n.exitFullscreen():n.requestFullscreen(r._fullscreenElement)},o.getObservable(this,"isFullscreenEnabled")),this._fullscreenElement=e(t,document.body),this._callback=function(){i(n.fullscreen)},document.addEventListener(n.changeEventName,this._callback)};return t(s.prototype,{fullscreenElement:{get:function(){return this._fullscreenElement},set:function(e){this._fullscreenElement=e}},command:{get:function(){return this._command}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){document.removeEventListener(n.changeEventName,this._callback),r(this)},s}),r("Widgets/FullscreenButton/FullscreenButton",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./FullscreenButtonViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="M 83.96875 17.5625 L 83.96875 17.59375 L 76.65625 24.875 L 97.09375 24.96875 L 76.09375 45.96875 L 81.9375 51.8125 L 102.78125 30.9375 L 102.875 51.15625 L 110.15625 43.875 L 110.1875 17.59375 L 83.96875 17.5625 z M 44.125 17.59375 L 17.90625 17.625 L 17.9375 43.90625 L 25.21875 51.1875 L 25.3125 30.96875 L 46.15625 51.8125 L 52 45.96875 L 31 25 L 51.4375 24.90625 L 44.125 17.59375 z M 46.0625 76.03125 L 25.1875 96.875 L 25.09375 76.65625 L 17.8125 83.9375 L 17.8125 110.21875 L 44 110.25 L 51.3125 102.9375 L 30.90625 102.84375 L 51.875 81.875 L 46.0625 76.03125 z M 82 76.15625 L 76.15625 82 L 97.15625 103 L 76.71875 103.0625 L 84.03125 110.375 L 110.25 110.34375 L 110.21875 84.0625 L 102.9375 76.8125 L 102.84375 97 L 82 76.15625 z",l="M 104.34375 17.5625 L 83.5 38.4375 L 83.40625 18.21875 L 76.125 25.5 L 76.09375 51.78125 L 102.3125 51.8125 L 102.3125 51.78125 L 109.625 44.5 L 89.1875 44.40625 L 110.1875 23.40625 L 104.34375 17.5625 z M 23.75 17.59375 L 17.90625 23.4375 L 38.90625 44.4375 L 18.5 44.53125 L 25.78125 51.8125 L 52 51.78125 L 51.96875 25.53125 L 44.6875 18.25 L 44.625 38.46875 L 23.75 17.59375 z M 25.6875 76.03125 L 18.375 83.3125 L 38.78125 83.40625 L 17.8125 104.40625 L 23.625 110.25 L 44.5 89.375 L 44.59375 109.59375 L 51.875 102.3125 L 51.875 76.0625 L 25.6875 76.03125 z M 102.375 76.15625 L 76.15625 76.1875 L 76.1875 102.4375 L 83.46875 109.71875 L 83.5625 89.53125 L 104.40625 110.375 L 110.25 104.53125 L 89.25 83.53125 L 109.6875 83.46875 L 102.375 76.15625 z",u=function(e,t){e=o(e);var r=new a(t);r._exitFullScreenPath=l,r._enterFullScreenPath=s;var i=document.createElement("button");i.type="button",i.className="cesium-button cesium-fullscreenButton",i.setAttribute("data-bind","attr: { title: tooltip },click: command,enable: isFullscreenEnabled,cesiumSvgPath: { path: isFullscreen ? _exitFullScreenPath : _enterFullScreenPath, width: 128, height: 128 }"),e.appendChild(i),n.applyBindings(r,i),this._container=e,this._viewModel=r,this._element=i};return t(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return this._viewModel.destroy(),n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},u}),r("Widgets/Geocoder/GeocoderViewModel",["../../Core/BingMapsApi","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/jsonp","../../Core/Matrix4","../../Core/Rectangle","../../ThirdParty/knockout","../../ThirdParty/when","../createCommand"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){var t=e.searchText;if(!/^\s*$/.test(t)){e._isSearchInProgress=!0;var i=o(e._url+"REST/v1/Locations",{parameters:{query:t,key:e._key},callbackParameterName:"jsonp"}),n=e._geocodeInProgress=u(i,function(t){if(!n.cancel){if(e._isSearchInProgress=!1,0===t.resourceSets.length)return e.searchText=e._searchText+" (not found)",void 0;var i=t.resourceSets[0];if(0===i.resources.length)return e.searchText=e._searchText+" (not found)",void 0;var o=i.resources[0];e._searchText=o.name;var l=o.bbox,u=l[0],c=l[1],h=l[2],d=l[3],m=s.fromDegrees(c,u,d,h),p=e._scene.camera,f=p.getRectangleCameraCoordinates(m);r(f)&&e._scene.camera.flyTo({destination:f,duration:e._flightDuration,endTransform:a.IDENTITY,convert:!1})}},function(){n.cancel||(e._isSearchInProgress=!1,e.searchText=e._searchText+" (error)")})}}function d(e){e._isSearchInProgress=!1,r(e._geocodeInProgress)&&(e._geocodeInProgress.cancel=!0,e._geocodeInProgress=void 0)}var m=function(r){this._url=t(r.url,"//dev.virtualearth.net/"),this._url.length>0&&"/"!==this._url[this._url.length-1]&&(this._url+="/"),this._key=e.getKey(r.key),this._scene=r.scene,this._flightDuration=t(r.flightDuration,1.5),this._searchText="",this._isSearchInProgress=!1,this._geocodeInProgress=void 0;var i=this;this._searchCommand=c(function(){i.isSearchInProgress?d(i):h(i)}),l.track(this,["_searchText","_isSearchInProgress"]),this.isSearchInProgress=void 0,l.defineProperty(this,"isSearchInProgress",{get:function(){return this._isSearchInProgress}}),this.searchText=void 0,l.defineProperty(this,"searchText",{get:function(){return this.isSearchInProgress?"Searching...":this._searchText},set:function(e){this._searchText=e}}),this.flightDuration=void 0,l.defineProperty(this,"flightDuration",{get:function(){return this._flightDuration},set:function(e){this._flightDuration=e}})};return i(m.prototype,{url:{get:function(){return this._url}},key:{get:function(){return this._key}},scene:{get:function(){return this._scene}},search:{get:function(){return this._searchCommand}}}),m}),r("Widgets/Geocoder/Geocoder",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./GeocoderViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="M29.772,26.433l-7.126-7.126c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127L29.772,26.433zM7.203,13.885c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486c-0.007,3.58-2.905,6.476-6.484,6.484C10.106,20.361,7.209,17.465,7.203,13.885z",l="M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z",u=function(e){var t=o(e.container),r=new a(e);r._startSearchPath=s,r._stopSearchPath=l;var i=document.createElement("form");i.setAttribute("data-bind","submit: search");var u=document.createElement("input");u.type="search",u.className="cesium-geocoder-input",u.setAttribute("placeholder","Enter an address or landmark..."),u.setAttribute("data-bind",'value: searchText,valueUpdate: "afterkeydown",disable: isSearchInProgress,css: { "cesium-geocoder-input-wide" : searchText.length > 0 }'),i.appendChild(u);var c=document.createElement("span");c.className="cesium-geocoder-searchButton",c.setAttribute("data-bind","click: search,cesiumSvgPath: { path: isSearchInProgress ? _stopSearchPath : _startSearchPath, width: 32, height: 32 }"),i.appendChild(c),t.appendChild(i),n.applyBindings(r,i),this._container=t,this._viewModel=r,this._form=i,this._onInputBegin=function(e){t.contains(e.target)||u.blur()},this._onInputEnd=function(e){t.contains(e.target)&&u.focus()},document.addEventListener("mousedown",this._onInputBegin,!0),document.addEventListener("mouseup",this._onInputEnd,!0),document.addEventListener("touchstart",this._onInputBegin,!0),document.addEventListener("touchend",this._onInputEnd,!0)};return t(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return document.removeEventListener("mousedown",this._onInputBegin,!0),document.removeEventListener("mouseup",this._onInputEnd,!0),document.removeEventListener("touchstart",this._onInputBegin,!0),document.removeEventListener("touchend",this._onInputEnd,!0),n.cleanNode(this._form),this._container.removeChild(this._form),r(this)},u}),r("Widgets/HomeButton/HomeButtonViewModel",["../../Core/Cartesian3","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Matrix4","../../Core/Rectangle","../../Scene/Camera","../../Scene/SceneMode","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t,i){var n=t.mode;r(t)&&n===l.MORPHING&&t.completeMorph();var u,c,h;if(n===l.SCENE2D)t.camera.flyToRectangle({destination:a.MAX_VALUE,duration:i,endTransform:o.IDENTITY});else if(n===l.SCENE3D){var d=t.camera.getRectangleCameraCoordinates(s.DEFAULT_VIEW_RECTANGLE),m=e.magnitude(d);m+=m*s.DEFAULT_VIEW_FACTOR,e.normalize(d,d),e.multiplyByScalar(d,m,d),u=e.normalize(d,new e),e.negate(u,u),c=e.cross(u,e.UNIT_Z,new e),h=e.cross(c,u,new e),t.camera.flyTo({destination:d,direction:u,up:h,duration:i,endTransform:o.IDENTITY})}else if(n===l.COLUMBUS_VIEW){var p=t.globe.ellipsoid.maximumRadius,f=new e(0,-1,1);f=e.multiplyByScalar(e.normalize(f,f),5*p,f),u=new e,u=e.normalize(e.subtract(e.ZERO,f,u),u),c=e.cross(u,e.UNIT_Z,new e),h=e.cross(c,u,new e),t.camera.flyTo({destination:f,duration:i,up:h,direction:u,endTransform:o.IDENTITY,convert:!1})
}}var d=function(e,r){r=t(r,1.5),this._scene=e,this._duration=r;var i=this;this._command=c(function(){h(i._scene,i._duration)}),this.tooltip="View Home",u.track(this,["tooltip"])};return i(d.prototype,{scene:{get:function(){return this._scene}},command:{get:function(){return this._command}},duration:{get:function(){return this._duration},set:function(e){this._duration=e}}}),d}),r("Widgets/HomeButton/HomeButton",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./HomeButtonViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t,r){e=o(e);var i=new a(t,r);i._svgPath="M14,4l-10,8.75h20l-4.25-3.7188v-4.6562h-2.812v2.1875l-2.938-2.5625zm-7.0938,9.906v10.094h14.094v-10.094h-14.094zm2.1876,2.313h3.3122v4.25h-3.3122v-4.25zm5.8442,1.281h3.406v6.438h-3.406v-6.438z";var s=document.createElement("button");s.type="button",s.className="cesium-button cesium-toolbar-button cesium-home-button",s.setAttribute("data-bind","attr: { title: tooltip },click: command,cesiumSvgPath: { path: _svgPath, width: 28, height: 28 }"),e.appendChild(s),n.applyBindings(i,s),this._container=e,this._viewModel=i,this._element=s};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/InfoBox/InfoBoxViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/Event","../../Core/formatError","../../Core/TaskProcessor","../../ThirdParty/knockout","../../ThirdParty/when"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){return t(d)||(d=new o("sanitizeHtml",1/0)),d.scheduleTask(e)}var u="M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4853444 22.104033 11.423165 24.0625 13.84375 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 8.975298 28.305952 7.03125 25.875 7.03125 L 13.84375 7.03125 z",c="M 27.34375 1.65625 L 5.28125 27.9375 L 8.09375 30.3125 L 30.15625 4.03125 L 27.34375 1.65625 z M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4724893 20.232036 9.5676108 20.7379 9.75 21.21875 L 21.65625 7.03125 L 13.84375 7.03125 z M 28.21875 7.71875 L 14.53125 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 9.8371439 29.456025 8.4902779 28.21875 7.71875 z",h=function(){this._sanitizer=void 0,this._descriptionRawHtml="",this._descriptionSanitizedHtml="",this._cameraClicked=new i,this._closeClicked=new i,this.maxHeight=500,this.enableCamera=!1,this.isCameraTracking=!1,this.showInfo=!1,this.titleText="",this.loadingIndicatorHtml='<div class="cesium-infoBox-loadingContainer"><span class="cesium-infoBox-loading"></span></div>',a.track(this,["showInfo","titleText","_descriptionRawHtml","_descriptionSanitizedHtml","maxHeight","enableCamera","isCameraTracking"]),this.descriptionRawHtml=void 0,a.defineProperty(this,"descriptionRawHtml",{get:function(){return this._descriptionRawHtml},set:function(e){if(this._descriptionRawHtml!==e){this._descriptionRawHtml=e,this._descriptionSanitizedHtml=this.loadingIndicatorHtml;var t=this;s(this.sanitizer(e),function(r){t._descriptionRawHtml===e&&(t._descriptionSanitizedHtml=r)}).otherwise(function(e){console.log("An error occurred while sanitizing HTML: "+n(e))})}}}),this.descriptionSanitizedHtml=void 0,a.defineProperty(this,"descriptionSanitizedHtml",{get:function(){return this._descriptionSanitizedHtml}}),this.cameraIconPath=void 0,a.defineProperty(this,"cameraIconPath",{get:function(){return this.enableCamera||this.isCameraTracking?u:c}}),a.defineProperty(this,"_bodyless",{get:function(){return!this._descriptionSanitizedHtml}})};h.prototype.maxHeightOffset=function(e){return this.maxHeight-e+"px"};var d;return h.defaultSanitizer=l,r(h.prototype,{cameraClicked:{get:function(){return this._cameraClicked}},closeClicked:{get:function(){return this._closeClicked}},sanitizer:{get:function(){return e(this._sanitizer,h.defaultSanitizer)},set:function(e){this._sanitizer=e;var t=this._descriptionRawHtml;this._descriptionRawHtml="",this.descriptionRawHtml=t}}}),h}),r("Widgets/InfoBox/InfoBox",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./InfoBoxViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){e=o(e),this._container=e;var t=document.createElement("div");t.className="cesium-infoBox",t.setAttribute("data-bind",'css: { "cesium-infoBox-visible" : showInfo, "cesium-infoBox-bodyless" : _bodyless }'),e.appendChild(t),this._element=t;var r=document.createElement("div");r.className="cesium-infoBox-title",r.setAttribute("data-bind","text: titleText"),t.appendChild(r);var i=document.createElement("button");i.type="button",i.className="cesium-button cesium-infoBox-camera",i.setAttribute("data-bind",'attr: { title: "Focus camera on object" },click: function () { cameraClicked.raiseEvent(); },enable: enableCamera,cesiumSvgPath: { path: cameraIconPath, width: 32, height: 32 }'),t.appendChild(i);var s=document.createElement("button");s.type="button",s.className="cesium-infoBox-close",s.setAttribute("data-bind","click: function () { closeClicked.raiseEvent(); }"),s.innerHTML="&times;",t.appendChild(s);var l=document.createElement("div");l.className="cesium-infoBox-body",t.appendChild(l);var u=document.createElement("div");u.className="cesium-infoBox-description",u.setAttribute("data-bind","html: descriptionSanitizedHtml,style : { maxHeight : maxHeightOffset(40) }"),l.appendChild(u);var c=new a;this._viewModel=c,n.applyBindings(this._viewModel,t)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){var e=this._container;return n.cleanNode(this._element),e.removeChild(this._element),r(this)},s}),r("Widgets/NavigationHelpButton/NavigationHelpButtonViewModel",["../../Core/defineProperties","../../ThirdParty/knockout","../createCommand"],function(e,t,r){"use strict";var i=function(){this.showInstructions=!1;var e=this;this._command=r(function(){e.showInstructions=!e.showInstructions}),this._showClick=r(function(){e._touch=!1}),this._showTouch=r(function(){e._touch=!0}),this._touch=!1,this.tooltip="Navigation Instructions",t.track(this,["tooltip","showInstructions","_touch"])};return e(i.prototype,{command:{get:function(){return this._command}},showClick:{get:function(){return this._showClick}},showTouch:{get:function(){return this._showTouch}}}),i}),r("Widgets/NavigationHelpButton/NavigationHelpButton",["../../Core/buildModuleUrl","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./NavigationHelpButtonViewModel"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(r){var i=s(r.container),n=new l,o=t(r.instructionsInitiallyVisible,!1);n.showInstructions=o,n._svgPath="M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466z M17.328,24.371h-2.707v-2.596h2.707V24.371zM17.328,19.003v0.858h-2.707v-1.057c0-3.19,3.63-3.696,3.63-5.963c0-1.034-0.924-1.826-2.134-1.826c-1.254,0-2.354,0.924-2.354,0.924l-1.541-1.915c0,0,1.519-1.584,4.137-1.584c2.487,0,4.796,1.54,4.796,4.136C21.156,16.208,17.328,16.627,17.328,19.003z";var u=document.createElement("span");u.className="cesium-navigationHelpButton-wrapper",i.appendChild(u);var c=document.createElement("button");c.type="button",c.className="cesium-button cesium-toolbar-button cesium-navigation-help-button",c.setAttribute("data-bind","attr: { title: tooltip },click: command,cesiumSvgPath: { path: _svgPath, width: 32, height: 32 }"),u.appendChild(c);var h=document.createElement("div");h.className="cesium-navigation-help",h.setAttribute("data-bind",'css: { "cesium-navigation-help-visible" : showInstructions}'),u.appendChild(h);var d=document.createElement("button");d.className="cesium-navigation-button cesium-navigation-button-left",d.setAttribute("data-bind",'click: showClick, css: {"cesium-navigation-button-selected": !_touch, "cesium-navigation-button-unselected": _touch}');var m=document.createElement("img");m.src=e("Widgets/Images/NavigationHelp/Mouse.svg"),m.className="cesium-navigation-button-icon",m.style.width="25px",m.style.height="25px",d.appendChild(m),d.appendChild(document.createTextNode("Mouse"));var p=document.createElement("button");p.className="cesium-navigation-button cesium-navigation-button-right",p.setAttribute("data-bind",'click: showTouch, css: {"cesium-navigation-button-selected": _touch, "cesium-navigation-button-unselected": !_touch}');var f=document.createElement("img");f.src=e("Widgets/Images/NavigationHelp/Touch.svg"),f.className="cesium-navigation-button-icon",f.style.width="25px",f.style.height="25px",p.appendChild(f),p.appendChild(document.createTextNode("Touch")),h.appendChild(d),h.appendChild(p);var v=document.createElement("div");v.className="cesium-click-navigation-help cesium-navigation-help-instructions",v.setAttribute("data-bind",'css: { "cesium-click-navigation-help-visible" : !_touch}'),v.innerHTML='            <table>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseLeft.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-pan">Pan view</div>                        <div class="cesium-navigation-help-details">Left click + drag</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseRight.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-zoom">Zoom view</div>                        <div class="cesium-navigation-help-details">Right click + drag, or</div>                        <div class="cesium-navigation-help-details">Mouse wheel scroll</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseMiddle.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-rotate">Rotate view</div>                        <div class="cesium-navigation-help-details">Middle click + drag, or</div>                        <div class="cesium-navigation-help-details">CTRL + Left click + drag</div>                    </td>                </tr>            </table>',h.appendChild(v);var g=document.createElement("div");g.className="cesium-touch-navigation-help cesium-navigation-help-instructions",g.setAttribute("data-bind",'css: { "cesium-touch-navigation-help-visible" : _touch}'),g.innerHTML='            <table>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchDrag.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-pan">Pan view</div>                        <div class="cesium-navigation-help-details">One finger drag</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchZoom.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-zoom">Zoom view</div>                        <div class="cesium-navigation-help-details">Two finger pinch</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchTilt.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-rotate">Tilt view</div>                        <div class="cesium-navigation-help-details">Two finger drag, same direction</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchRotate.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-tilt">Rotate view</div>                        <div class="cesium-navigation-help-details">Two finger drag, opposite direction</div>                    </td>                </tr>            </table>',h.appendChild(g),a.applyBindings(n,u),this._container=i,this._viewModel=n,this._wrapper=u,this._closeInstructions=function(e){u.contains(e.target)||(n.showInstructions=!1)},document.addEventListener("mousedown",this._closeInstructions,!0),document.addEventListener("touchstart",this._closeInstructions,!0)};return i(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return document.removeEventListener("mousedown",this._closeInstructions,!0),document.removeEventListener("touchstart",this._closeInstructions,!0),a.cleanNode(this._wrapper),this._container.removeChild(this._wrapper),n(this)},u}),r("Widgets/PerformanceWatchdog/PerformanceWatchdogViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Scene/FrameRateMonitor","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){this._scene=t.scene,this.lowFrameRateMessage=e(t.lowFrameRateMessage,"This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers."),this.lowFrameRateMessageDismissed=!1,this.showingLowFrameRateMessage=!1,a.track(this,["lowFrameRateMessage","lowFrameRateMessageDismissed","showingLowFrameRateMessage"]);var r=this;this._dismissMessage=s(function(){r.showingLowFrameRateMessage=!1,r.lowFrameRateMessageDismissed=!0});var i=o.fromScene(t.scene);this._unsubscribeLowFrameRate=i.lowFrameRate.addEventListener(function(){r.lowFrameRateMessageDismissed||(r.showingLowFrameRateMessage=!0)}),this._unsubscribeNominalFrameRate=i.nominalFrameRate.addEventListener(function(){r.showingLowFrameRateMessage=!1})};return r(l.prototype,{scene:{get:function(){return this._scene}},dismissMessage:{get:function(){return this._dismissMessage}}}),l.prototype.destroy=function(){return this._unsubscribeLowFrameRate(),this._unsubscribeNominalFrameRate(),i(this)},l}),r("Widgets/PerformanceWatchdog/PerformanceWatchdog",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./PerformanceWatchdogViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){var t=o(e.container),r=new a(e),i=document.createElement("div");i.className="cesium-performance-watchdog-message-area",i.setAttribute("data-bind","visible: showingLowFrameRateMessage");var s=document.createElement("button");s.setAttribute("type","button"),s.className="cesium-performance-watchdog-message-dismiss",s.innerHTML="&times;",s.setAttribute("data-bind","click: dismissMessage"),i.appendChild(s);var l=document.createElement("div");l.className="cesium-performance-watchdog-message",l.setAttribute("data-bind","html: lowFrameRateMessage"),i.appendChild(l),t.appendChild(i),n.applyBindings(r,i),this._container=t,this._viewModel=r,this._element=i};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return this._viewModel.destroy(),n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/SceneModePicker/SceneModePickerViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/EventHelper","../../Scene/SceneMode","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t,r){this._scene=t;var i=this,n=function(e,t,r){i.sceneMode=r,i.dropDownVisible=!1};this._eventHelper=new o,this._eventHelper.add(t.morphStart,n),this._duration=e(r,2),this.sceneMode=t.mode,this.dropDownVisible=!1,this.tooltip2D="2D",this.tooltip3D="3D",this.tooltipColumbusView="Columbus View",s.track(this,["sceneMode","dropDownVisible","tooltip2D","tooltip3D","tooltipColumbusView"]),this.selectedTooltip=void 0,s.defineProperty(this,"selectedTooltip",function(){var e=i.sceneMode;return e===a.SCENE2D?i.tooltip2D:e===a.SCENE3D?i.tooltip3D:i.tooltipColumbusView}),this._toggleDropDown=l(function(){i.dropDownVisible=!i.dropDownVisible}),this._morphTo2D=l(function(){t.morphTo2D(i._duration)}),this._morphTo3D=l(function(){t.morphTo3D(i._duration)}),this._morphToColumbusView=l(function(){t.morphToColumbusView(i._duration)}),this._sceneMode=a};return r(u.prototype,{scene:{get:function(){return this._scene}},duration:{get:function(){return this._duration},set:function(e){this._duration=e}},toggleDropDown:{get:function(){return this._toggleDropDown}},morphTo2D:{get:function(){return this._morphTo2D}},morphTo3D:{get:function(){return this._morphTo3D}},morphToColumbusView:{get:function(){return this._morphToColumbusView}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){this._eventHelper.removeAll(),i(this)},u}),r("Widgets/SceneModePicker/SceneModePicker",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./SceneModePickerViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="m 32.401392,4.9330437 c -7.087603,0 -14.096095,2.884602 -19.10793,7.8946843 -5.0118352,5.010083 -7.9296167,11.987468 -7.9296167,19.072999 0,7.085531 2.9177815,14.097848 7.9296167,19.107931 4.837653,4.835961 11.541408,7.631372 18.374354,7.82482 0.05712,0.01231 0.454119,0.139729 0.454119,0.139729 l 0.03493,-0.104797 c 0.08246,7.84e-4 0.162033,0.03493 0.244525,0.03493 0.08304,0 0.161515,-0.03414 0.244526,-0.03493 l 0.03493,0.104797 c 0,0 0.309474,-0.129487 0.349323,-0.139729 6.867765,-0.168094 13.582903,-2.965206 18.444218,-7.82482 2.558195,-2.5573 4.551081,-5.638134 5.903547,-8.977584 1.297191,-3.202966 2.02607,-6.661489 2.02607,-10.130347 0,-6.237309 -2.366261,-12.31219 -6.322734,-17.116794 -0.0034,-0.02316 0.0049,-0.04488 0,-0.06986 -0.01733,-0.08745 -0.104529,-0.278855 -0.104797,-0.279458 -5.31e-4,-0.0012 -0.522988,-0.628147 -0.523984,-0.62878         -3.47e-4,-2.2e-4 -0.133444,-0.03532 -0.244525,-0.06987 C 51.944299,13.447603 51.751076,13.104317 51.474391,12.827728 46.462556,7.8176457 39.488996,4.9330437 32.401392,4.9330437 z m -2.130866,3.5281554 0.104797,9.6762289 c -4.111695,-0.08361 -7.109829,-0.423664 -9.257041,-0.943171 1.198093,-2.269271 2.524531,-4.124404 3.91241,-5.414496 2.167498,-2.0147811 3.950145,-2.8540169 5.239834,-3.3185619 z m 2.794579,0 c 1.280302,0.4754953 3.022186,1.3285948 5.065173,3.2486979 1.424667,1.338973 2.788862,3.303645 3.982275,5.728886 -2.29082,0.403367 -5.381258,0.621049 -8.942651,0.698645 L 33.065105,8.4611991 z m 5.728886,0.2445256 c 4.004072,1.1230822 7.793098,3.1481363 10.724195,6.0782083 0.03468,0.03466 0.07033,0.06991 0.104797,0.104797 -0.45375,0.313891 -0.923054,0.663002 -1.956205,1.082899 -0.647388,0.263114 -1.906242,0.477396 -2.829511,0.733577 -1.382296,-2.988132         -3.027146,-5.368585 -4.785716,-7.0213781 -0.422866,-0.397432 -0.835818,-0.6453247 -1.25756,-0.9781032 z m -15.33525,0.7685092 c -0.106753,0.09503 -0.207753,0.145402 -0.31439,0.244526 -1.684973,1.5662541 -3.298068,3.8232211 -4.680919,6.5672591 -0.343797,-0.14942 -1.035052,-0.273198 -1.292493,-0.419186 -0.956528,-0.542427 -1.362964,-1.022024 -1.537018,-1.292493 -0.0241,-0.03745 -0.01868,-0.0401 -0.03493,-0.06986 2.250095,-2.163342 4.948824,-3.869984 7.859752,-5.0302421 z m -9.641296,7.0912431 c 0.464973,0.571618 0.937729,1.169056 1.956205,1.746612 0.349907,0.198425 1.107143,0.335404 1.537018,0.523983 -1.20166,3.172984 -1.998037,7.051901 -2.165798,11.772162 C 14.256557,30.361384 12.934823,30.161483 12.280427,29.90959 10.644437,29.279855 9.6888882,28.674891 9.1714586,28.267775 8.6540289,27.860658 8.6474751,27.778724 8.6474751,27.778724 l -0.069864,0.03493 C 9.3100294,23.691285         11.163248,19.798527 13.817445,16.565477 z m 37.552149,0.523984 c 2.548924,3.289983 4.265057,7.202594 4.890513,11.318043 -0.650428,0.410896 -1.756876,1.001936 -3.563088,1.606882 -1.171552,0.392383 -3.163859,0.759153 -4.960377,1.117832 -0.04367,-4.752703 -0.784809,-8.591423 -1.88634,-11.807094 0.917574,-0.263678 2.170552,-0.486495 2.864443,-0.76851 1.274693,-0.518066 2.003942,-1.001558 2.654849,-1.467153 z m -31.439008,2.619917 c 2.487341,0.672766 5.775813,1.137775 10.479669,1.222628 l 0.104797,10.689263 0,0.03493 0,0.733577 c -5.435005,-0.09059 -9.512219,-0.519044 -12.610536,-1.117831 0.106127,-4.776683 0.879334,-8.55791 2.02607,-11.562569 z m 23.264866,0.31439 c 1.073459,3.067541 1.833795,6.821314 1.816476,11.702298 -3.054474,0.423245 -7.062018,0.648559 -11.702298,0.698644 l 0,-0.838373 -0.104796,-10.654331 c 4.082416,-0.0864 7.404468,-0.403886 9.990618,-0.908238 z         M 8.2632205,30.922625 c 0.7558676,0.510548 1.5529563,1.013339 3.0041715,1.57195 0.937518,0.360875 2.612202,0.647642 3.91241,0.978102 0.112814,3.85566 0.703989,7.107756 1.606883,9.920754 -1.147172,-0.324262 -2.644553,-0.640648 -3.423359,-0.978102 -1.516688,-0.657177 -2.386627,-1.287332 -2.864443,-1.71168 -0.477816,-0.424347 -0.489051,-0.489051 -0.489051,-0.489051 L 9.8002387,40.319395 C 8.791691,37.621767 8.1584238,34.769583 8.1584238,31.900727 c 0,-0.330153 0.090589,-0.648169 0.1047967,-0.978102 z m 48.2763445,0.419186 c 0.0047,0.188973 0.06986,0.36991 0.06986,0.558916 0,2.938869 -0.620228,5.873558 -1.676747,8.628261 -0.07435,0.07583 -0.06552,0.07411 -0.454119,0.349323 -0.606965,0.429857 -1.631665,1.042044 -3.318562,1.676747 -1.208528,0.454713 -3.204964,0.850894 -5.135038,1.25756 0.84593,-2.765726 1.41808,-6.005357 1.606883,-9.815957 2.232369,-0.413371 4.483758,-0.840201         5.938479,-1.327425 1.410632,-0.472457 2.153108,-0.89469 2.96924,-1.327425 z m -38.530252,2.864443 c 3.208141,0.56697 7.372279,0.898588 12.575603,0.978103 l 0.174662,9.885821 c -4.392517,-0.06139 -8.106722,-0.320566 -10.863925,-0.803441 -1.051954,-2.664695 -1.692909,-6.043794 -1.88634,-10.060483 z m 26.793022,0.31439 c -0.246298,3.923551 -0.877762,7.263679 -1.816476,9.885822 -2.561957,0.361954 -5.766249,0.560708 -9.431703,0.62878 l -0.174661,-9.815957 c 4.491734,-0.04969 8.334769,-0.293032 11.42284,-0.698645 z M 12.035901,44.860585 c 0.09977,0.04523 0.105535,0.09465 0.209594,0.139729 1.337656,0.579602 3.441099,1.058072 5.589157,1.537018 1.545042,3.399208 3.548524,5.969402 5.589157,7.789888 -3.034411,-1.215537 -5.871615,-3.007978 -8.174142,-5.309699 -1.245911,-1.245475 -2.271794,-2.662961 -3.213766,-4.156936 z m 40.69605,0 c -0.941972,1.493975 -1.967855,2.911461         -3.213765,4.156936 -2.74253,2.741571 -6.244106,4.696717 -9.955686,5.868615 0.261347,-0.241079 0.507495,-0.394491 0.768509,-0.663713 1.674841,-1.727516 3.320792,-4.181056 4.645987,-7.265904 2.962447,-0.503021 5.408965,-1.122293 7.161107,-1.781544 0.284034,-0.106865 0.337297,-0.207323 0.593848,-0.31439 z m -31.404076,2.305527 c 2.645807,0.376448 5.701178,0.649995 9.466635,0.698645 l 0.139729,7.789888 c -1.38739,-0.480844 -3.316218,-1.29837 -5.659022,-3.388427 -1.388822,-1.238993 -2.743668,-3.0113 -3.947342,-5.100106 z m 20.365491,0.104797 c -1.04872,2.041937 -2.174337,3.779068 -3.353494,4.995309 -1.853177,1.911459 -3.425515,2.82679 -4.611055,3.353494 l -0.139729,-7.789887 c 3.13091,-0.05714 5.728238,-0.278725 8.104278,-0.558916 z",l="m 2.9825053,17.550598 0,1.368113 0,26.267766 0,1.368113 1.36811,0 54.9981397,0 1.36811,0 0,-1.368113 0,-26.267766 0,-1.368113 -1.36811,0 -54.9981397,0 -1.36811,0 z m 2.73623,2.736226 10.3292497,0 0,10.466063 -10.3292497,0 0,-10.466063 z m 13.0654697,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 10.32926,0 0,10.466063 -10.32926,0 0,-10.466063 z m -41.9326497,13.202288 10.3292497,0 0,10.329252 -10.3292497,0 0,-10.329252 z m 13.0654697,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 10.32926,0 0,10.329252 -10.32926,0 0,-10.329252 z",u="m 14.723969,17.675598 -0.340489,0.817175 -11.1680536,26.183638 -0.817175,1.872692 2.076986,0 54.7506996,0 2.07698,0 -0.81717,-1.872692 -11.16805,-26.183638 -0.34049,-0.817175 -0.91933,0 -32.414586,0 -0.919322,0 z m 1.838643,2.723916 6.196908,0 -2.928209,10.418977 -7.729111,0 4.460412,-10.418977 z m 9.02297,0 4.903049,0 0,10.418977 -7.831258,0 2.928209,-10.418977 z m 7.626964,0 5.584031,0 2.62176,10.418977 -8.205791,0 0,-10.418977 z m 8.410081,0 5.51593,0 4.46042,10.418977 -7.38863,0 -2.58772,-10.418977 z m -30.678091,13.142892 8.103649,0 -2.89416,10.282782 -9.6018026,0 4.3923136,-10.282782 z m 10.929711,0 8.614384,0 0,10.282782 -11.508544,0 2.89416,-10.282782 z m 11.338299,0 8.852721,0 2.58772,10.282782 -11.440441,0 0,-10.282782 z m 11.678781,0 7.86531,0 4.39231,10.282782 -9.6699,0 -2.58772,-10.282782 z",c=function(e,t,r){e=o(e);var i=new a(t,r);i._globePath=s,i._flatMapPath=l,i._columbusViewPath=u;var c=document.createElement("span");c.className="cesium-sceneModePicker-wrapper cesium-toolbar-button",e.appendChild(c);var h=document.createElement("button");h.type="button",h.className="cesium-button cesium-toolbar-button",h.setAttribute("data-bind",'css: { "cesium-sceneModePicker-button2D": sceneMode === _sceneMode.SCENE2D,       "cesium-sceneModePicker-button3D": sceneMode === _sceneMode.SCENE3D,       "cesium-sceneModePicker-buttonColumbusView": sceneMode === _sceneMode.COLUMBUS_VIEW,       "cesium-sceneModePicker-selected": dropDownVisible },attr: { title: selectedTooltip },click: toggleDropDown'),h.innerHTML='<!-- ko cesiumSvgPath: { path: _globePath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-icon3D" } --><!-- /ko --><!-- ko cesiumSvgPath: { path: _flatMapPath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-icon2D" } --><!-- /ko --><!-- ko cesiumSvgPath: { path: _columbusViewPath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-iconColumbusView" } --><!-- /ko -->',c.appendChild(h);var d=document.createElement("button");d.type="button",d.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",d.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.SCENE3D)) || (!dropDownVisible && (sceneMode === _sceneMode.SCENE3D)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.SCENE3D,       "cesium-sceneModePicker-hidden" : !dropDownVisible },attr: { title: tooltip3D },click: morphTo3D,cesiumSvgPath: { path: _globePath, width: 64, height: 64 }'),c.appendChild(d);var m=document.createElement("button");m.type="button",m.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",m.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.SCENE2D)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.SCENE2D,       "cesium-sceneModePicker-hidden" : !dropDownVisible },attr: { title: tooltip2D },click: morphTo2D,cesiumSvgPath: { path: _flatMapPath, width: 64, height: 64 }'),c.appendChild(m);var p=document.createElement("button");p.type="button",p.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",p.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.COLUMBUS_VIEW)) || (!dropDownVisible && (sceneMode === _sceneMode.COLUMBUS_VIEW)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.COLUMBUS_VIEW,       "cesium-sceneModePicker-hidden" : !dropDownVisible},attr: { title: tooltipColumbusView },click: morphToColumbusView,cesiumSvgPath: { path: _columbusViewPath, width: 64, height: 64 }'),c.appendChild(p),n.applyBindings(i,c),this._viewModel=i,this._container=e,this._wrapper=c,this._closeDropDown=function(e){c.contains(e.target)||(i.dropDownVisible=!1)},document.addEventListener("mousedown",this._closeDropDown,!0),document.addEventListener("touchstart",this._closeDropDown,!0)};return t(c.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._viewModel.destroy(),document.removeEventListener("mousedown",this._closeDropDown,!0),document.removeEventListener("touchstart",this._closeDropDown,!0),n.cleanNode(this._wrapper),this._container.removeChild(this._wrapper),r(this)},c}),r("Widgets/SelectionIndicator/SelectionIndicatorViewModel",["../../Core/Cartesian2","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/EasingFunction","../../Scene/SceneTransforms","../../ThirdParty/knockout"],function(e,t,r,i,n,o,a,s){"use strict";var l=new e,u="-1000px",c=function(e,i,n){this._scene=e,this._screenPositionX=u,this._screenPositionY=u,this._tweens=e.tweens,this._container=t(n,document.body),this._selectionIndicatorElement=i,this._scale=1,this.position=void 0,this.showSelection=!1,s.track(this,["position","_screenPositionX","_screenPositionY","_scale","showSelection"]),this.isVisible=void 0,s.defineProperty(this,"isVisible",{get:function(){return this.showSelection&&r(this.position)}}),s.defineProperty(this,"_transform",{get:function(){return"scale("+this._scale+")"}}),this.computeScreenSpacePosition=function(t,r){return a.wgs84ToWindowCoordinates(e,t,r)}};return c.prototype.update=function(){if(this.showSelection&&r(this.position)){var e=this.computeScreenSpacePosition(this.position,l);if(r(e)){var t=this._container,i=t.parentNode.clientWidth,n=t.parentNode.clientHeight,o=this._selectionIndicatorElement.clientWidth,a=.5*o;e.x=Math.min(Math.max(e.x,-o),i+o)-a,e.y=Math.min(Math.max(e.y,-o),n+o)-a,this._screenPositionX=Math.floor(e.x+.25)+"px",this._screenPositionY=Math.floor(e.y+.25)+"px"}else this._screenPositionX=u,this._screenPositionY=u}},c.prototype.animateAppear=function(){this._tweens.addProperty({object:this,property:"_scale",startValue:2,stopValue:1,duration:.8,easingFunction:o.EXPONENTIAL_OUT})},c.prototype.animateDepart=function(){this._tweens.addProperty({object:this,property:"_scale",startValue:this._scale,stopValue:1.5,duration:.8,easingFunction:o.EXPONENTIAL_OUT})},i(c.prototype,{container:{get:function(){return this._container}},selectionIndicatorElement:{get:function(){return this._selectionIndicatorElement}},scene:{get:function(){return this._scene}}}),c}),r("Widgets/SelectionIndicator/SelectionIndicator",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./SelectionIndicatorViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t){e=o(e),this._container=e;var r=document.createElement("div");r.className="cesium-selection-wrapper",r.setAttribute("data-bind",'style: { "top" : _screenPositionY, "left" : _screenPositionX },css: { "cesium-selection-wrapper-visible" : isVisible }'),e.appendChild(r),this._element=r;
var i="http://www.w3.org/2000/svg",s="M -34 -34 L -34 -11.25 L -30 -15.25 L -30 -30 L -15.25 -30 L -11.25 -34 L -34 -34 z M 11.25 -34 L 15.25 -30 L 30 -30 L 30 -15.25 L 34 -11.25 L 34 -34 L 11.25 -34 z M -34 11.25 L -34 34 L -11.25 34 L -15.25 30 L -30 30 L -30 15.25 L -34 11.25 z M 34 11.25 L 30 15.25 L 30 30 L 15.25 30 L 11.25 34 L 34 34 L 34 11.25 z",l=document.createElementNS(i,"svg:svg");l.setAttribute("width",160),l.setAttribute("height",160),l.setAttribute("viewBox","0 0 160 160");var u=document.createElementNS(i,"g");u.setAttribute("transform","translate(80,80)"),l.appendChild(u);var c=document.createElementNS(i,"path");c.setAttribute("data-bind","attr: { transform: _transform }"),c.setAttribute("d",s),u.appendChild(c),r.appendChild(l);var h=new a(t,this._element,this._container);this._viewModel=h,n.applyBindings(this._viewModel,this._element)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){var e=this._container;return n.cleanNode(this._element),e.removeChild(this._element),r(this)},s}),r("Widgets/Timeline/TimelineHighlightRange",["../../Core/defaultValue","../../Core/JulianDate"],function(e,t){"use strict";function r(t,r,i){this._color=t,this._height=r,this._base=e(i,0)}return r.prototype.getHeight=function(){return this._height},r.prototype.getBase=function(){return this._base},r.prototype.getStartTime=function(){return this._start},r.prototype.getStopTime=function(){return this._stop},r.prototype.setRange=function(e,t){this._start=e,this._stop=t},r.prototype.render=function(e){var r="";if(this._start&&this._stop&&this._color){var i=t.secondsDifference(this._start,e.epochJulian),n=Math.round(e.timeBarWidth*e.getAlpha(i)),o=t.secondsDifference(this._stop,e.epochJulian),a=Math.round(e.timeBarWidth*e.getAlpha(o))-n;0>n&&(a+=n,n=0),n+a>e.timeBarWidth&&(a=e.timeBarWidth-n),a>0&&(r='<span class="cesium-timeline-highlight" style="left: '+n.toString()+"px; width: "+a.toString()+"px; bottom: "+this._base.toString()+"px; height: "+this._height+"px; background-color: "+this._color+';"></span>')}return r},r}),r("Widgets/Timeline/TimelineTrack",["../../Core/Color","../../Core/defined","../../Core/JulianDate"],function(e,t,r){"use strict";function i(t,r,i,n){this.interval=t,this.height=r,this.color=i||new e(.5,.5,.5,1),this.backgroundColor=n||new e(0,0,0,0)}return i.prototype.render=function(e,i){var n=this.interval.start,o=this.interval.stop,a=i.startJulian,s=r.addSeconds(i.startJulian,i.duration,new r);if(r.lessThan(n,a)&&r.greaterThan(o,s))e.fillStyle=this.color.toCssColorString(),e.fillRect(0,i.y,i.timeBarWidth,this.height);else if(r.lessThanOrEquals(n,s)&&r.greaterThanOrEquals(o,a)){var l,u,c;for(l=0;l<i.timeBarWidth;++l){var h=r.addSeconds(i.startJulian,l/i.timeBarWidth*i.duration,new r);!t(u)&&r.greaterThanOrEquals(h,n)?u=l:!t(c)&&r.greaterThanOrEquals(h,o)&&(c=l)}e.fillStyle=this.backgroundColor.toCssColorString(),e.fillRect(0,i.y,i.timeBarWidth,this.height),t(u)&&(t(c)||(c=i.timeBarWidth),e.fillStyle=this.color.toCssColorString(),e.fillRect(u,i.y,Math.max(c-u,1),this.height))}},i}),r("Widgets/Timeline/Timeline",["../../Core/ClockRange","../../Core/defined","../../Core/destroyObject","../../Core/DeveloperError","../../Core/JulianDate","../getElement","./TimelineHighlightRange","./TimelineTrack"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){return 10>e?"0"+e.toString():e.toString()}function u(e){return function(t){e._mouseMode!==g.touchOnly&&(0===t.button?(e._mouseMode=g.scrub,e._scrubElement&&(e._scrubElement.style.backgroundPosition="-16px 0"),e._onMouseMove(t)):(e._mouseX=t.clientX,e._mouseMode=2===t.button?g.zoom:g.slide)),t.preventDefault()}}function c(e){return function(){e._mouseMode=g.none,e._scrubElement&&(e._scrubElement.style.backgroundPosition="0px 0px"),e._timelineDrag=0,e._timelineDragLocation=void 0}}function h(e){return function(t){var r;if(e._mouseMode===g.scrub){t.preventDefault();var i=t.clientX-e._topDiv.getBoundingClientRect().left;0>i?(e._timelineDragLocation=0,e._timelineDrag=-.01*e._timeBarSecondsSpan):i>e._topDiv.clientWidth?(e._timelineDragLocation=e._topDiv.clientWidth,e._timelineDrag=.01*e._timeBarSecondsSpan):(e._timelineDragLocation=void 0,e._setTimeBarTime(i,i*e._timeBarSecondsSpan/e._topDiv.clientWidth))}else if(e._mouseMode===g.slide){if(r=e._mouseX-t.clientX,e._mouseX=t.clientX,0!==r){var o=r*e._timeBarSecondsSpan/e._topDiv.clientWidth;e.zoomTo(n.addSeconds(e._startJulian,o,new n),n.addSeconds(e._endJulian,o,new n))}}else e._mouseMode===g.zoom&&(r=e._mouseX-t.clientX,e._mouseX=t.clientX,0!==r&&e.zoomFrom(Math.pow(1.01,r)))}}function d(e){return function(t){var r=t.wheelDeltaY||t.wheelDelta||-t.detail;v=Math.max(Math.min(Math.abs(r),v),1),r/=v,e.zoomFrom(Math.pow(1.05,-r))}}function m(e){return function(t){var r,i,o=t.touches.length,a=e._topDiv.getBoundingClientRect().left;t.preventDefault(),e._mouseMode=g.touchOnly,1===o?(r=n.secondsDifference(e._scrubJulian,e._startJulian),i=Math.round(r*e._topDiv.clientWidth/e._timeBarSecondsSpan+a),Math.abs(t.touches[0].clientX-i)<50?(e._touchMode=_.scrub,e._scrubElement&&(e._scrubElement.style.backgroundPosition=1===o?"-16px 0":"0 0")):(e._touchMode=_.singleTap,e._touchState.centerX=t.touches[0].clientX-a)):2===o?(e._touchMode=_.slideZoom,e._touchState.centerX=.5*(t.touches[0].clientX+t.touches[1].clientX)-a,e._touchState.spanX=Math.abs(t.touches[0].clientX-t.touches[1].clientX)):e._touchMode=_.ignore}}function p(e){return function(t){var r=t.touches.length,i=e._topDiv.getBoundingClientRect().left;e._touchMode===_.singleTap?(e._touchMode=_.scrub,e._handleTouchMove(t)):e._touchMode===_.scrub&&e._handleTouchMove(t),e._mouseMode=g.touchOnly,1!==r?e._touchMode=r>0?_.ignore:_.none:e._touchMode===_.slideZoom&&(e._touchState.centerX=t.touches[0].clientX-i),e._scrubElement&&(e._scrubElement.style.backgroundPosition="0 0")}}function f(e){return function(r){var i,o,a,s,l,u,c=1,h=e._topDiv.getBoundingClientRect().left;e._touchMode===_.singleTap&&(e._touchMode=_.slideZoom),e._mouseMode=g.touchOnly,e._touchMode===_.scrub?(r.preventDefault(),1===r.changedTouches.length&&(o=r.changedTouches[0].clientX-h,o>=0&&o<=e._topDiv.clientWidth&&e._setTimeBarTime(o,o*e._timeBarSecondsSpan/e._topDiv.clientWidth))):e._touchMode===_.slideZoom&&(a=r.touches.length,2===a?(s=.5*(r.touches[0].clientX+r.touches[1].clientX)-h,l=Math.abs(r.touches[0].clientX-r.touches[1].clientX)):1===a&&(s=r.touches[0].clientX-h,l=0),t(s)&&(l>0&&e._touchState.spanX>0?(c=e._touchState.spanX/l,u=n.addSeconds(e._startJulian,(e._touchState.centerX*e._timeBarSecondsSpan-s*e._timeBarSecondsSpan*c)/e._topDiv.clientWidth,new n)):(i=e._touchState.centerX-s,u=n.addSeconds(e._startJulian,i*e._timeBarSecondsSpan/e._topDiv.clientWidth,new n)),e.zoomTo(u,n.addSeconds(u,e._timeBarSecondsSpan*c,new n)),e._touchState.centerX=s,e._touchState.spanX=l))}}var v=1e12,g={none:0,scrub:1,slide:2,zoom:3,touchOnly:4},_={none:0,scrub:1,slideZoom:2,singleTap:3,ignore:4},y=[.001,.002,.005,.01,.02,.05,.1,.25,.5,1,2,5,10,15,30,60,120,300,600,900,1800,3600,7200,14400,21600,43200,86400,172800,345600,604800,1296e3,2592e3,5184e3,7776e3,15552e3,31536e3,63072e3,126144e3,15768e4,31536e4,63072e4,126144e4,15768e5,31536e5,63072e5,126144e5,15768e6,31536e6],C=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],w=function(e,t){e=o(e),this.container=e;var r=document.createElement("div");r.className="cesium-timeline-main",e.appendChild(r),this._topDiv=r,this._endJulian=void 0,this._epochJulian=void 0,this._lastXPos=void 0,this._scrubElement=void 0,this._startJulian=void 0,this._timeBarSecondsSpan=void 0,this._clock=t,this._scrubJulian=t.currentTime,this._mainTicSpan=-1,this._mouseMode=g.none,this._touchMode=_.none,this._touchState={centerX:0,spanX:0},this._mouseX=0,this._timelineDrag=0,this._timelineDragLocation=void 0,this._lastHeight=void 0,this._lastWidth=void 0,this._topDiv.innerHTML='<div class="cesium-timeline-bar"></div><div class="cesium-timeline-trackContainer"><canvas class="cesium-timeline-tracks" width="10" height="1"></canvas></div><div class="cesium-timeline-needle"></div><span class="cesium-timeline-ruler"></span>',this._timeBarEle=this._topDiv.childNodes[0],this._trackContainer=this._topDiv.childNodes[1],this._trackListEle=this._topDiv.childNodes[1].childNodes[0],this._needleEle=this._topDiv.childNodes[2],this._rulerEle=this._topDiv.childNodes[3],this._context=this._trackListEle.getContext("2d"),this._trackList=[],this._highlightRanges=[],this.zoomTo(t.startTime,t.stopTime),this._onMouseDown=u(this),this._onMouseUp=c(this),this._onMouseMove=h(this),this._onMouseWheel=d(this),this._onTouchStart=m(this),this._onTouchMove=f(this),this._onTouchEnd=p(this);var i=this._timeBarEle;document.addEventListener("mouseup",this._onMouseUp,!1),document.addEventListener("mousemove",this._onMouseMove,!1),i.addEventListener("mousedown",this._onMouseDown,!1),i.addEventListener("DOMMouseScroll",this._onMouseWheel,!1),i.addEventListener("mousewheel",this._onMouseWheel,!1),i.addEventListener("touchstart",this._onTouchStart,!1),i.addEventListener("touchmove",this._onTouchMove,!1),i.addEventListener("touchend",this._onTouchEnd,!1),this._topDiv.oncontextmenu=function(){return!1},t.onTick.addEventListener(this.updateFromClock,this),this.updateFromClock()};return w.prototype.addEventListener=function(e,t,r){this._topDiv.addEventListener(e,t,r)},w.prototype.removeEventListener=function(e,t,r){this._topDiv.removeEventListener(e,t,r)},w.prototype.isDestroyed=function(){return!1},w.prototype.destroy=function(){this._clock.onTick.removeEventListener(this.updateFromClock,this),document.removeEventListener("mouseup",this._onMouseUp,!1),document.removeEventListener("mousemove",this._onMouseMove,!1);var e=this._timeBarEle;e.removeEventListener("mousedown",this._onMouseDown,!1),e.removeEventListener("DOMMouseScroll",this._onMouseWheel,!1),e.removeEventListener("mousewheel",this._onMouseWheel,!1),e.removeEventListener("touchstart",this._onTouchStart,!1),e.removeEventListener("touchmove",this._onTouchMove,!1),e.removeEventListener("touchend",this._onTouchEnd,!1),this.container.removeChild(this._topDiv),r(this)},w.prototype.addHighlightRange=function(e,t,r){var i=new a(e,t,r);return this._highlightRanges.push(i),this.resize(),i},w.prototype.addTrack=function(e,t,r,i){var n=new s(e,t,r,i);return this._trackList.push(n),this._lastHeight=void 0,this.resize(),n},w.prototype.zoomTo=function(t,r){if(this._startJulian=t,this._endJulian=r,this._timeBarSecondsSpan=n.secondsDifference(r,t),this._clock&&this._clock.clockRange!==e.UNBOUNDED){var i=this._clock.startTime,o=this._clock.stopTime,a=n.secondsDifference(o,i),s=n.secondsDifference(i,this._startJulian),l=n.secondsDifference(o,this._endJulian);this._timeBarSecondsSpan>=a?(this._timeBarSecondsSpan=a,this._startJulian=this._clock.startTime,this._endJulian=this._clock.stopTime):s>0?(this._endJulian=n.addSeconds(this._endJulian,s,new n),this._startJulian=i,this._timeBarSecondsSpan=n.secondsDifference(this._endJulian,this._startJulian)):0>l&&(this._startJulian=n.addSeconds(this._startJulian,l,new n),this._endJulian=o,this._timeBarSecondsSpan=n.secondsDifference(this._endJulian,this._startJulian))}this._makeTics();var u=document.createEvent("Event");u.initEvent("setzoom",!0,!0),u.startJulian=this._startJulian,u.endJulian=this._endJulian,u.epochJulian=this._epochJulian,u.totalSpan=this._timeBarSecondsSpan,u.mainTicSpan=this._mainTicSpan,this._topDiv.dispatchEvent(u)},w.prototype.zoomFrom=function(e){var t=n.secondsDifference(this._scrubJulian,this._startJulian);e>1||0>t||t>this._timeBarSecondsSpan?t=.5*this._timeBarSecondsSpan:t+=t-.5*this._timeBarSecondsSpan;var r=this._timeBarSecondsSpan-t;this.zoomTo(n.addSeconds(this._startJulian,t-t*e,new n),n.addSeconds(this._endJulian,r*e-r,new n))},w.prototype.makeLabel=function(e){var t=n.toGregorianDate(e),r=t.millisecond,i=" UTC";if(r>0&&this._timeBarSecondsSpan<3600){for(i=Math.floor(r).toString();i.length<3;)i="0"+i;i="."+i}return C[t.month-1]+" "+t.day+" "+t.year+" "+l(t.hour)+":"+l(t.minute)+":"+l(t.second)+i},w.prototype.smallestTicInPixels=7,w.prototype._makeTics=function(){function e(e){return Math.floor(S/e)*e}function t(e,t){return Math.ceil(e/t+.5)*t}function r(e){return(e-S)/v}function i(e,t){return e-t*Math.round(e/t)}var o,a=this._timeBarEle,s=n.secondsDifference(this._scrubJulian,this._startJulian),l=Math.round(s*this._topDiv.clientWidth/this._timeBarSecondsSpan),u=l-8,c=this;this._needleEle.style.left=l.toString()+"px";var h="",d=.01,m=31536e6,p=1e-10,f=0,v=this._timeBarSecondsSpan;d>v?(v=d,this._timeBarSecondsSpan=d,this._endJulian=n.addSeconds(this._startJulian,d,new n)):v>m&&(v=m,this._timeBarSecondsSpan=m,this._endJulian=n.addSeconds(this._startJulian,m,new n));var g=this._timeBarEle.clientWidth;10>g&&(g=10);var _,C=this._startJulian,w=Math.min(1e-5*(v/g),.4);_=v>31536e4?n.fromIso8601(n.toDate(C).toISOString().substring(0,2)+"00-01-01T00:00:00Z"):v>31536e3?n.fromIso8601(n.toDate(C).toISOString().substring(0,3)+"0-01-01T00:00:00Z"):v>86400?n.fromIso8601(n.toDate(C).toISOString().substring(0,4)+"-01-01T00:00:00Z"):n.fromIso8601(n.toDate(C).toISOString().substring(0,10)+"T00:00:00Z");var S=n.secondsDifference(this._startJulian,n.addSeconds(_,w,new n)),E=S+v;this._epochJulian=_,this._rulerEle.innerHTML=this.makeLabel(n.addSeconds(this._endJulian,-d,new n));var b=this._rulerEle.offsetWidth+20;30>b&&(b=180);var T=f;f-=p;var x={startTime:S,startJulian:C,epochJulian:_,duration:v,timeBarWidth:g,getAlpha:r};this._highlightRanges.forEach(function(e){h+=e.render(x)});var P=0,A=0,M=0,D=b/g;D>1&&(D=1),D*=this._timeBarSecondsSpan;var I,R=-1,O=-1,L=y.length;for(I=0;L>I;++I){var N=y[I];if(++R,P=N,N>D&&N>f)break;0>O&&g*(N/this._timeBarSecondsSpan)>=this.smallestTicInPixels&&(O=R)}if(R>0){for(;R>0;)if(--R,Math.abs(i(P,y[R]))<1e-5){y[R]>=f&&(A=y[R]);break}if(O>=0)for(;R>O;){if(Math.abs(i(A,y[O]))<1e-5&&y[O]>=f){M=y[O];break}++O}}f=T,f>p&&1e-5>M&&Math.abs(f-P)>p&&(M=f,P+p>=f&&(A=0));var B,F=-999999;if(g*(M/this._timeBarSecondsSpan)>=3)for(o=e(M);E>=o;o=t(o,M))h+='<span class="cesium-timeline-ticTiny" style="left: '+Math.round(g*r(o)).toString()+'px;"></span>';if(g*(A/this._timeBarSecondsSpan)>=3)for(o=e(A);E>=o;o=t(o,A))h+='<span class="cesium-timeline-ticSub" style="left: '+Math.round(g*r(o)).toString()+'px;"></span>';if(g*(P/this._timeBarSecondsSpan)>=2){this._mainTicSpan=P,E+=P,o=e(P);for(var z=n.computeTaiMinusUtc(_);E>=o;){var V=n.addSeconds(C,o-S,new n);if(P>2.1){var k=n.computeTaiMinusUtc(V);Math.abs(k-z)>.1&&(o+=k-z,V=n.addSeconds(C,o-S,new n))}var U=Math.round(g*r(o)),W=this.makeLabel(V);this._rulerEle.innerHTML=W,B=this._rulerEle.offsetWidth,10>B&&(B=b);var G=U-(B/2-1);G>F?(F=G+B+5,h+='<span class="cesium-timeline-ticMain" style="left: '+U.toString()+'px;"></span>'+'<span class="cesium-timeline-ticLabel" style="left: '+G.toString()+'px;">'+W+"</span>"):h+='<span class="cesium-timeline-ticSub" style="left: '+U.toString()+'px;"></span>',o=t(o,P)}}else this._mainTicSpan=-1;h+='<span class="cesium-timeline-icon16" style="left:'+u+'px;bottom:0;background-position: 0px 0px;"></span>',a.innerHTML=h,this._scrubElement=a.lastChild,this._context.clearRect(0,0,this._trackListEle.width,this._trackListEle.height),x.y=0,this._trackList.forEach(function(e){e.render(c._context,x),x.y+=e.height})},w.prototype.updateFromClock=function(){this._scrubJulian=this._clock.currentTime;var e=this._scrubElement;if(t(this._scrubElement)){var r=n.secondsDifference(this._scrubJulian,this._startJulian),i=Math.round(r*this._topDiv.clientWidth/this._timeBarSecondsSpan);this._lastXPos!==i&&(this._lastXPos=i,e.style.left=i-8+"px",this._needleEle.style.left=i+"px")}t(this._timelineDragLocation)&&(this._setTimeBarTime(this._timelineDragLocation,this._timelineDragLocation*this._timeBarSecondsSpan/this._topDiv.clientWidth),this.zoomTo(n.addSeconds(this._startJulian,this._timelineDrag,new n),n.addSeconds(this._endJulian,this._timelineDrag,new n)))},w.prototype._setTimeBarTime=function(e,t){if(e=Math.round(e),this._scrubJulian=n.addSeconds(this._startJulian,t,new n),this._scrubElement){var r=e-8;this._scrubElement.style.left=r.toString()+"px",this._needleEle.style.left=e.toString()+"px"}var i=document.createEvent("Event");i.initEvent("settime",!0,!0),i.clientX=e,i.timeSeconds=t,i.timeJulian=this._scrubJulian,i.clock=this._clock,this._topDiv.dispatchEvent(i)},w.prototype.resize=function(){var e=this.container.clientWidth,t=this.container.clientHeight;if(e!==this._lastWidth||t!==this._lastHeight){this._trackContainer.style.height=t+"px";var r=1;this._trackList.forEach(function(e){r+=e.height}),this._trackListEle.style.height=r.toString()+"px",this._trackListEle.width=this._trackListEle.clientWidth,this._trackListEle.height=r,this._makeTics(),this._lastWidth=e,this._lastHeight=t}},w}),r("Widgets/Viewer/Viewer",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/EventHelper","../../DataSources/DataSourceCollection","../../DataSources/DataSourceDisplay","../../ThirdParty/knockout","../Animation/Animation","../Animation/AnimationViewModel","../BaseLayerPicker/BaseLayerPicker","../BaseLayerPicker/createDefaultImageryProviderViewModels","../BaseLayerPicker/createDefaultTerrainProviderViewModels","../CesiumWidget/CesiumWidget","../ClockViewModel","../FullscreenButton/FullscreenButton","../Geocoder/Geocoder","../getElement","../HomeButton/HomeButton","../InfoBox/InfoBox","../NavigationHelpButton/NavigationHelpButton","../SceneModePicker/SceneModePicker","../SelectionIndicator/SelectionIndicator","../subscribeAndEvaluate","../Timeline/Timeline"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T){"use strict";function x(e){var t=e.clock;t.currentTime=e.timeJulian,t.shouldAnimate=!1}function P(e){var r=e._container,i=r.clientWidth,n=r.clientHeight,o=t(e._animation),a=t(e._timeline);if(i!==e._lastWidth||n!==e._lastHeight){var s=n-125,l=e._baseLayerPickerDropDown;t(l)&&(l.style.maxHeight=s+"px"),t(e._infoBox)&&(e._infoBox.viewModel.maxHeight=s);var u,c=e._timeline,h=0,d=0,m=0;if(o&&"hidden"!==window.getComputedStyle(e._animation.container).visibility){var p=e._lastWidth;u=e._animation.container,i>900?(h=169,900>=p&&(u.style.width="169px",u.style.height="112px",e._animation.resize())):i>=600?(h=136,(600>p||p>900)&&(u.style.width="136px",u.style.height="90px",e._animation.resize())):(h=106,(p>600||0===p)&&(u.style.width="106px",u.style.height="70px",e._animation.resize())),d=h+5}if(a&&"hidden"!==window.getComputedStyle(e._timeline.container).visibility){var f=e._fullscreenButton,v=c.container,g=v.style;m=v.clientHeight+3,g.left=h+"px",t(f)&&(g.right=f.container.clientWidth+"px"),c.resize()}e._bottomContainer.style.left=d+"px",e._bottomContainer.style.bottom=m+"px",e._lastWidth=i,e._lastHeight=n}}var A=function(r,i){function A(e){if(t(e)){var r=e.clock;t(r)&&(r.getValue(z),t(at)&&(at.updateFromClock(),at.zoomTo(r.startTime,r.stopTime)))}}r=_(r),i=e(i,e.EMPTY_OBJECT);var M=!t(i.baseLayerPicker)||i.baseLayerPicker!==!1,D=document.createElement("div");D.className="cesium-viewer",r.appendChild(D);var I=document.createElement("div");I.className="cesium-viewer-cesiumWidgetContainer",D.appendChild(I);var R=document.createElement("div");R.className="cesium-viewer-bottom",D.appendChild(R);var O=e(i.scene3DOnly,!1),L=new p(I,{terrainProvider:i.terrainProvider,imageryProvider:M?!1:i.imageryProvider,skyBox:i.skyBox,sceneMode:i.sceneMode,mapProjection:i.mapProjection,orderIndependentTranslucency:i.orderIndependentTranslucency,contextOptions:i.contextOptions,useDefaultRenderLoop:i.useDefaultRenderLoop,targetFrameRate:i.targetFrameRate,showRenderLoopErrors:i.showRenderLoopErrors,creditContainer:t(i.creditContainer)?i.creditContainer:R,scene3DOnly:O}),N=i.dataSources,B=!1;t(N)||(N=new a,B=!0);var F=new s({scene:L.scene,dataSourceCollection:N}),z=L.clock,V=new f(z),k=new o,U=this;k.add(z.onTick,function(e){var t=F.update(e.currentTime);U._allowDataSourcesToSuspendAnimation&&(V.canAnimate=t)});var W;if(!t(i.selectionIndicator)||i.selectionIndicator!==!1){var G=document.createElement("div");G.className="cesium-viewer-selectionIndicatorContainer",D.appendChild(G),W=new E(G,L.scene)}var H;if(!t(i.infoBox)||i.infoBox!==!1){var q=document.createElement("div");q.className="cesium-viewer-infoBoxContainer",D.appendChild(q),H=new C(q)}var j=document.createElement("div");j.className="cesium-viewer-toolbar",D.appendChild(j);var Y;if(!t(i.geocoder)||i.geocoder!==!1){var X=document.createElement("div");X.className="cesium-viewer-geocoderContainer",j.appendChild(X),Y=new g({container:X,scene:L.scene})}var Z;if(t(i.homeButton)&&i.homeButton===!1||(Z=new y(j,L.scene),t(Y)&&k.add(Z.viewModel.command.afterExecute,function(){var e=Y.viewModel;e.searchText="",e.isSearchInProgress&&e.search()})),i.sceneModePicker===!0&&O)throw new n("options.sceneModePicker is not available when options.scene3DOnly is set to true.");var Q;O||t(i.sceneModePicker)&&i.sceneModePicker===!1||(Q=new S(j,L.scene));var J;if(M){var K=e(i.imageryProviderViewModels,d()),$=e(i.terrainProviderViewModels,m());J=new h(j,{globe:L.scene.globe,imageryProviderViewModels:K,selectedImageryProviderViewModel:i.selectedImageryProviderViewModel,terrainProviderViewModels:$,selectedTerrainProviderViewModel:i.selectedTerrainProviderViewModel});var et=j.getElementsByClassName("cesium-baseLayerPicker-dropDown");this._baseLayerPickerDropDown=et[0]}var tt;if(!t(i.navigationHelpButton)||i.navigationHelpButton!==!1){var rt=!0;if(t(window.localStorage)){var it=window.localStorage.getItem("cesium-hasSeenNavHelp");t(it)&&Boolean(it)?rt=!1:window.localStorage.setItem("cesium-hasSeenNavHelp","true")}tt=new w({container:j,instructionsInitiallyVisible:e(i.navigationInstructionsInitiallyVisible,rt)})}var nt;if(!t(i.animation)||i.animation!==!1){var ot=document.createElement("div");ot.className="cesium-viewer-animationContainer",D.appendChild(ot),nt=new u(ot,new c(V))}var at;if(!t(i.timeline)||i.timeline!==!1){var st=document.createElement("div");st.className="cesium-viewer-timelineContainer",D.appendChild(st),at=new T(st,z),at.addEventListener("settime",x,!1),at.zoomTo(z.startTime,z.stopTime)}var lt;if(t(i.fullscreenButton)&&i.fullscreenButton===!1)t(at)&&(at.container.style.right=0);else{var ut=document.createElement("div");ut.className="cesium-viewer-fullscreenContainer",D.appendChild(ut),lt=new v(ut,i.fullscreenElement),this._fullscreenSubscription=b(lt.viewModel,"isFullscreenEnabled",function(e){ut.style.display=e?"block":"none",t(at)&&(at.container.style.right=ut.clientWidth+"px",at.resize())})}this.clockTrackedDataSource=void 0,l.track(this,["clockTrackedDataSource"]),this._dataSourceChangedListeners={},this._knockoutSubscriptions=[];var ct=e(i.automaticallyTrackDataSourceClocks,!0);this._knockoutSubscriptions.push(b(this,"clockTrackedDataSource",function(e){A(e)}));var ht=function(e){U.clockTrackedDataSource===e&&A(e)},dt=function(e,t){ct&&(U.clockTrackedDataSource=t);var r=t.entities.id,i=k.add(t.changedEvent,ht);U._dataSourceChangedListeners[r]=i},mt=function(e,t){var r=U.clockTrackedDataSource===t,i=t.entities.id;if(U._dataSourceChangedListeners[i](),U._dataSourceChangedListeners[i]=void 0,r){var n=e.length;U.clockTrackedDataSource=ct&&n>0?e.get(n-1):void 0}};k.add(N.dataSourceAdded,dt),k.add(N.dataSourceRemoved,mt),this._container=r,this._bottomContainer=R,this._element=D,this._cesiumWidget=L,this._selectionIndicator=W,this._infoBox=H,this._dataSourceCollection=N,this._destroyDataSourceCollection=B,this._dataSourceDisplay=F,this._clockViewModel=V,this._toolbar=j,this._homeButton=Z,this._sceneModePicker=Q,this._baseLayerPicker=J,this._animation=nt,this._timeline=at,this._fullscreenButton=lt,this._geocoder=Y,this._eventHelper=k,this._lastWidth=0,this._lastHeight=0,this._allowDataSourcesToSuspendAnimation=!0,L.scene.preRender.addEventListener(function(){P(U)})};return r(A.prototype,{container:{get:function(){return this._container}},bottomContainer:{get:function(){return this._bottomContainer}},cesiumWidget:{get:function(){return this._cesiumWidget}},selectionIndicator:{get:function(){return this._selectionIndicator}},infoBox:{get:function(){return this._infoBox}},geocoder:{get:function(){return this._geocoder}},homeButton:{get:function(){return this._homeButton}},sceneModePicker:{get:function(){return this._sceneModePicker}},baseLayerPicker:{get:function(){return this._baseLayerPicker}},animation:{get:function(){return this._animation}},timeline:{get:function(){return this._timeline}},fullscreenButton:{get:function(){return this._fullscreenButton}},dataSourceDisplay:{get:function(){return this._dataSourceDisplay}},dataSources:{get:function(){return this._dataSourceCollection}},canvas:{get:function(){return this._cesiumWidget.canvas}},cesiumLogo:{get:function(){return this._cesiumWidget.cesiumLogo}},scene:{get:function(){return this._cesiumWidget.scene}},clock:{get:function(){return this._cesiumWidget.clock}},screenSpaceEventHandler:{get:function(){return this._cesiumWidget.screenSpaceEventHandler}},targetFrameRate:{get:function(){return this._cesiumWidget.targetFrameRate},set:function(e){this._cesiumWidget.targetFrameRate=e}},useDefaultRenderLoop:{get:function(){return this._cesiumWidget.useDefaultRenderLoop},set:function(e){this._cesiumWidget.useDefaultRenderLoop=e}},resolutionScale:{get:function(){return this._cesiumWidget.resolutionScale},set:function(e){this._cesiumWidget.resolutionScale=e}},allowDataSourcesToSuspendAnimation:{get:function(){return this._allowDataSourcesToSuspendAnimation},set:function(e){this._allowDataSourcesToSuspendAnimation=e}}}),A.prototype.extend=function(e,t){e(this,t)},A.prototype.resize=function(){var e=this._cesiumWidget;e.resize(),P(this)},A.prototype.forceResize=function(){this._lastWidth=0,this.resize()},A.prototype.render=function(){this._cesiumWidget.render()},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){var e,r=this._knockoutSubscriptions.length;for(e=0;r>e;e++)this._knockoutSubscriptions[e].dispose();return this._container.removeChild(this._element),this._element.removeChild(this._toolbar),this._eventHelper.removeAll(),t(this._geocoder)&&(this._geocoder=this._geocoder.destroy()),t(this._homeButton)&&(this._homeButton=this._homeButton.destroy()),t(this._sceneModePicker)&&(this._sceneModePicker=this._sceneModePicker.destroy()),t(this._baseLayerPicker)&&(this._baseLayerPicker=this._baseLayerPicker.destroy()),t(this._animation)&&(this._element.removeChild(this._animation.container),this._animation=this._animation.destroy()),t(this._timeline)&&(this._timeline.removeEventListener("settime",x,!1),this._element.removeChild(this._timeline.container),this._timeline=this._timeline.destroy()),t(this._fullscreenButton)&&(this._fullscreenSubscription.dispose(),this._element.removeChild(this._fullscreenButton.container),this._fullscreenButton=this._fullscreenButton.destroy()),t(this._infoBox)&&(this._element.removeChild(this._infoBox.container),this._infoBox=this._infoBox.destroy()),t(this._selectionIndicator)&&(this._element.removeChild(this._selectionIndicator.container),this._selectionIndicator=this._selectionIndicator.destroy()),this._clockViewModel=this._clockViewModel.destroy(),this._dataSourceDisplay=this._dataSourceDisplay.destroy(),this._cesiumWidget=this._cesiumWidget.destroy(),this._destroyDataSourceCollection&&(this._dataSourceCollection=this._dataSourceCollection.destroy()),i(this)},A}),r("Widgets/Viewer/viewerCesiumInspectorMixin",["../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../CesiumInspector/CesiumInspector"],function(e,t,r,i){"use strict";var n=function(n){if(!e(n))throw new r("viewer is required.");var o=document.createElement("div");o.className="cesium-viewer-cesiumInspectorContainer",n.container.appendChild(o);var a=new i(o,n.scene);t(n,{cesiumInspector:{get:function(){return a}}}),n.scene.postRender.addEventListener(function(){n.cesiumInspector.viewModel.update()})};return n}),r("Widgets/Viewer/viewerDragDropMixin",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Event","../../Core/wrapFunction","../../DataSources/CzmlDataSource","../../DataSources/GeoJsonDataSource","../getElement"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e){e.stopPropagation(),e.preventDefault()}function c(e,r){var i=e;t(i)&&(i.removeEventListener("drop",r,!1),i.removeEventListener("dragenter",u,!1),i.removeEventListener("dragover",u,!1),i.removeEventListener("dragexit",u,!1))}function h(e,t){e.addEventListener("drop",t,!1),e.addEventListener("dragenter",u,!1),e.addEventListener("dragover",u,!1),e.addEventListener("dragexit",u,!1)}function d(e,r){return function(i){var n=r.name;try{var o,l;if(/\.czml$/i.test(n))o=new a(n),o.load(JSON.parse(i.target.result),n);else{if(!(/\.geojson$/i.test(n)||/\.json$/i.test(n)||/\.topojson$/i.test(n)))return e.dropError.raiseEvent(e,n,"Unrecognized file: "+n),void 0;o=new s(n),l=o.load(JSON.parse(i.target.result),n)}e.dataSources.add(o),t(l)&&l.otherwise(function(t){e.dropError.raiseEvent(e,n,t)})}catch(u){e.dropError.raiseEvent(e,n,u)}}}function m(e,t){return function(r){e.dropError.raiseEvent(e,t.name,r.target.error)}}var p=function(t,i){function a(e){u(e),f&&t.dataSources.removeAll();for(var r=e.dataTransfer.files,i=r.length,n=0;i>n;n++){var o=r[n],a=new FileReader;a.onload=d(t,o),a.onerror=m(t,o),a.readAsText(o)}}i=e(i,e.EMPTY_OBJECT);var s=!0,p=new n,f=e(i.clearOnDrop,!0),v=e(i.dropTarget,t.container);v=l(v),r(t,{dropTarget:{get:function(){return v},set:function(e){c(v,a),v=e,h(v,a)}},dropEnabled:{get:function(){return s},set:function(e){e!==s&&(e?h(v,a):c(v,a),s=e)}},dropError:{get:function(){return p}},clearOnDrop:{get:function(){return f},set:function(e){f=e}}}),h(v,a),t.destroy=o(t,t.destroy,function(){t.dropEnabled=!1}),t._handleDrop=a};return p}),r("Widgets/Viewer/viewerEntityMixin",["../../Core/Cartesian3","../../Core/defaultValue","../../Core/defined","../../Core/DeveloperError","../../Core/EventHelper","../../Core/ScreenSpaceEventType","../../Core/wrapFunction","../../DataSources/ConstantPositionProperty","../../DataSources/Entity","../../DataSources/EntityView","../../Scene/SceneMode","../../ThirdParty/knockout","../../ThirdParty/when","../subscribeAndEvaluate"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t){var i=e.scene,n=i.camera.getPickRay(t),o=i.imageryLayers.pickImageryLayerFeatures(n,i);if(r(o)){var a=new l("Loading...");return a.description={getValue:function(){return"Loading feature information..."}},d(o,function(t){if(e.selectedEntity===a){if(!r(t)||0===t.length)return e.selectedEntity=f(),void 0;var i=t[0],n=new l(i.name);if(n.description={getValue:function(){return i.description}},r(i.position)){var o=e.scene.globe.ellipsoid.cartographicToCartesian(i.position,g);n.position=new s(o)}e.selectedEntity=n}},function(){if(e.selectedEntity===a){var t=new l("None");t.description={getValue:function(){return"No features found."}},e.selectedEntity=f()}}),a}}function f(){var e=new l("None");return e.description={getValue:function(){return"No features found."}},e}var v=function(e){function i(){e.trackedEntity=e.selectedEntity}function s(){e.trackedEntity=void 0}function d(){e.selectedEntity=void 0}function f(){e.trackedEntity=void 0,e.selectedEntity=void 0}function v(i){var n=i.currentTime;r(b)&&b.update(n);var o=e.selectedEntity,a=r(o)&&M;if(a){var s,l=r(A)?A.position:void 0,u=!1;o.isAvailable(n)&&r(o.position)&&(s=o.position.getValue(n,l),u=r(s)&&e.trackedEntity!==e.selectedEntity),r(A)&&(A.position=s),r(x)&&(x.enableCamera=u,x.isCameraTracking=e.trackedEntity===e.selectedEntity,x.descriptionRawHtml=r(o.description)?t(o.description.getValue(n),""):"")}r(A)&&(A.showSelection=a,A.update()),r(x)&&(x.showInfo=a)}function g(i){var n=e.scene.pick(i.position);if(r(n)){var o=t(n.id,n.primitive.id);
if(o instanceof l)return o}return p(e,i.position)}function _(t){r(t)&&r(t.position)&&(e.trackedEntity=t)}function y(e){var t=g(e);r(t)&&_(t)}function C(t){e.selectedEntity=g(t)}function w(t,r,i){for(var n=i.length,o=0;n>o;o++){var a=i[o];e.trackedEntity===a&&e.homeButton.viewModel.command(),e.selectedEntity===a&&(e.selectedEntity=void 0)}}function S(e,t){var r=t.entities;r.collectionChanged.addEventListener(w)}function E(t,i){var n=i.entities;n.collectionChanged.removeEventListener(w),r(e.trackedEntity)&&n.getById(e.trackedEntity.id)===e.trackedEntity&&e.homeButton.viewModel.command(),r(e.selectedEntity)&&n.getById(e.selectedEntity.id)===e.selectedEntity&&(e.selectedEntity=void 0)}var b,T=e.infoBox,x=r(T)?T.viewModel:void 0,P=e.selectionIndicator,A=r(P)?P.viewModel:void 0,M=r(T)||r(P),D=new n;r(x)&&(D.add(x.cameraClicked,i),D.add(x.closeClicked,d)),D.add(e.clock.onTick,v),r(e.homeButton)&&D.add(e.homeButton.viewModel.command.beforeExecute,s),r(e.geocoder)&&D.add(e.geocoder.viewModel.search.beforeExecute,f);for(var I=e.dataSources,R=I.length,O=0;R>O;O++)S(I,I.get(O));D.add(e.dataSources.dataSourceAdded,S),D.add(e.dataSources.dataSourceRemoved,E),e.screenSpaceEventHandler.setInputAction(C,o.LEFT_CLICK),e.screenSpaceEventHandler.setInputAction(y,o.LEFT_DOUBLE_CLICK),e.trackedEntity=void 0,e.selectedEntity=void 0,h.track(e,["trackedEntity","selectedEntity"]);var L=[];L.push(m(e,"trackedEntity",function(t){var i=e.scene,n=i.mode,o=r(t);(n===c.COLUMBUS_VIEW||n===c.SCENE2D)&&(i.screenSpaceCameraController.enableTranslate=!o),(n===c.COLUMBUS_VIEW||n===c.SCENE3D)&&(i.screenSpaceCameraController.enableTilt=!o),b=o&&r(t.position)?new u(t,i,e.scene.globe.ellipsoid):void 0})),L.push(m(e,"selectedEntity",function(e){r(e)?(r(x)&&(x.titleText=r(e.name)?e.name:e.id),r(A)&&A.animateAppear()):r(A)&&A.animateDepart()})),e.destroy=a(e,e.destroy,function(){D.removeAll();var t;for(t=0;t<L.length;t++)L[t].dispose();e.screenSpaceEventHandler.removeInputAction(o.LEFT_CLICK),e.screenSpaceEventHandler.removeInputAction(o.LEFT_DOUBLE_CLICK);var r=e.dataSources,i=r.length;for(t=0;i>t;t++)E(r,r.get(t))})},g=new e;return v}),r("Widgets/Viewer/viewerPerformanceWatchdogMixin",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../PerformanceWatchdog/PerformanceWatchdog"],function(e,t,r,i,n){"use strict";var o=function(o,a){if(!t(o))throw new i("viewer is required.");a=e(a,e.EMPTY_OBJECT);var s=new n({scene:o.scene,container:o.bottomContainer,lowFrameRateMessage:a.lowFrameRateMessage});r(o,{performanceWatchdog:{get:function(){return s}}})};return o}),r("Workers/createTaskProcessorWorker",["../Core/defaultValue","../Core/defined","../Core/formatError"],function(e,t,r){"use strict";var i=function(i){var n,o=[],a={id:void 0,result:void 0,error:void 0};return function(s){var l=s.data;o.length=0,a.id=l.id,a.error=void 0,a.result=void 0;try{a.result=i(l.parameters,o)}catch(u){a.error=u instanceof Error?{name:u.name,message:u.message,stack:u.stack}:u}t(n)||(n=e(self.webkitPostMessage,self.postMessage)),l.canTransferArrayBuffer||(o.length=0);try{n(a,o)}catch(u){a.result=void 0,a.error="postMessage failed with error: "+r(u)+"\n  with responseMessage: "+JSON.stringify(a),n(a)}}};return i}),r("Cesium",["./Core/ArcGisImageServerTerrainProvider","./Core/AssociativeArray","./Core/AxisAlignedBoundingBox","./Core/BingMapsApi","./Core/BoundingRectangle","./Core/BoundingSphere","./Core/BoxGeometry","./Core/BoxOutlineGeometry","./Core/Cartesian2","./Core/Cartesian3","./Core/Cartesian4","./Core/Cartographic","./Core/CatmullRomSpline","./Core/CesiumTerrainProvider","./Core/CircleGeometry","./Core/CircleOutlineGeometry","./Core/Clock","./Core/ClockRange","./Core/ClockStep","./Core/Color","./Core/ColorGeometryInstanceAttribute","./Core/ComponentDatatype","./Core/CornerType","./Core/CorridorGeometry","./Core/CorridorGeometryLibrary","./Core/CorridorOutlineGeometry","./Core/Credit","./Core/CubicRealPolynomial","./Core/CylinderGeometry","./Core/CylinderGeometryLibrary","./Core/CylinderOutlineGeometry","./Core/DefaultProxy","./Core/DeveloperError","./Core/EarthOrientationParameters","./Core/EarthOrientationParametersSample","./Core/EasingFunction","./Core/EllipseGeometry","./Core/EllipseGeometryLibrary","./Core/EllipseOutlineGeometry","./Core/Ellipsoid","./Core/EllipsoidGeodesic","./Core/EllipsoidGeometry","./Core/EllipsoidOutlineGeometry","./Core/EllipsoidTangentPlane","./Core/EllipsoidTerrainProvider","./Core/EllipsoidalOccluder","./Core/EncodedCartesian3","./Core/Event","./Core/EventHelper","./Core/ExtrapolationType","./Core/FeatureDetection","./Core/Fullscreen","./Core/GeographicProjection","./Core/GeographicTilingScheme","./Core/Geometry","./Core/GeometryAttribute","./Core/GeometryAttributes","./Core/GeometryInstance","./Core/GeometryInstanceAttribute","./Core/GeometryPipeline","./Core/GregorianDate","./Core/HeightmapTerrainData","./Core/HeightmapTessellator","./Core/HermitePolynomialApproximation","./Core/HermiteSpline","./Core/Iau2000Orientation","./Core/Iau2006XysData","./Core/Iau2006XysSample","./Core/IauOrientationAxes","./Core/IauOrientationParameters","./Core/IndexDatatype","./Core/InterpolationAlgorithm","./Core/Intersect","./Core/IntersectionTests","./Core/Intersections2D","./Core/Interval","./Core/Iso8601","./Core/JulianDate","./Core/KeyboardEventModifier","./Core/LagrangePolynomialApproximation","./Core/LeapSecond","./Core/LinearApproximation","./Core/LinearSpline","./Core/MapProjection","./Core/Math","./Core/Matrix2","./Core/Matrix3","./Core/Matrix4","./Core/NearFarScalar","./Core/ObjectOrientedBoundingBox","./Core/Occluder","./Core/Oct","./Core/Packable","./Core/PackableForInterpolation","./Core/PinBuilder","./Core/PixelFormat","./Core/Plane","./Core/PolygonGeometry","./Core/PolygonGeometryLibrary","./Core/PolygonOutlineGeometry","./Core/PolygonPipeline","./Core/PolylineGeometry","./Core/PolylinePipeline","./Core/PolylineVolumeGeometry","./Core/PolylineVolumeGeometryLibrary","./Core/PolylineVolumeOutlineGeometry","./Core/PrimitiveType","./Core/QuadraticRealPolynomial","./Core/QuantizedMeshTerrainData","./Core/QuarticRealPolynomial","./Core/Quaternion","./Core/QuaternionSpline","./Core/Queue","./Core/Ray","./Core/Rectangle","./Core/RectangleGeometry","./Core/RectangleGeometryLibrary","./Core/RectangleOutlineGeometry","./Core/ReferenceFrame","./Core/RequestErrorEvent","./Core/RuntimeError","./Core/ScreenSpaceEventHandler","./Core/ScreenSpaceEventType","./Core/ShowGeometryInstanceAttribute","./Core/Simon1994PlanetaryPositions","./Core/SimplePolylineGeometry","./Core/SphereGeometry","./Core/SphereOutlineGeometry","./Core/Spherical","./Core/Spline","./Core/TaskProcessor","./Core/TerrainData","./Core/TerrainMesh","./Core/TerrainProvider","./Core/TileProviderError","./Core/TilingScheme","./Core/TimeConstants","./Core/TimeInterval","./Core/TimeIntervalCollection","./Core/TimeStandard","./Core/Tipsify","./Core/Transforms","./Core/TridiagonalSystemSolver","./Core/VRTheWorldTerrainProvider","./Core/VertexFormat","./Core/Visibility","./Core/WallGeometry","./Core/WallGeometryLibrary","./Core/WallOutlineGeometry","./Core/WebMercatorProjection","./Core/WebMercatorTilingScheme","./Core/WindingOrder","./Core/barycentricCoordinates","./Core/binarySearch","./Core/buildModuleUrl","./Core/cancelAnimationFrame","./Core/clone","./Core/combine","./Core/createGuid","./Core/defaultValue","./Core/defineProperties","./Core/defined","./Core/deprecationWarning","./Core/destroyObject","./Core/formatError","./Core/freezeObject","./Core/getFilenameFromUri","./Core/getImagePixels","./Core/getTimestamp","./Core/isArray","./Core/isCrossOriginUrl","./Core/isLeapYear","./Core/jsonp","./Core/loadArrayBuffer","./Core/loadBlob","./Core/loadImage","./Core/loadImageViaBlob","./Core/loadJson","./Core/loadText","./Core/loadWithXhr","./Core/loadXML","./Core/mergeSort","./Core/parseResponseHeaders","./Core/pointInsideTriangle","./Core/requestAnimationFrame","./Core/sampleTerrain","./Core/subdivideArray","./Core/throttleRequestByServer","./Core/wrapFunction","./Core/writeTextToCanvas","./DataSources/BillboardGraphics","./DataSources/BillboardVisualizer","./DataSources/ColorMaterialProperty","./DataSources/CompositeEntityCollection","./DataSources/CompositeMaterialProperty","./DataSources/CompositePositionProperty","./DataSources/CompositeProperty","./DataSources/ConstantPositionProperty","./DataSources/ConstantProperty","./DataSources/CzmlDataSource","./DataSources/DataSource","./DataSources/DataSourceClock","./DataSources/DataSourceCollection","./DataSources/DataSourceDisplay","./DataSources/DynamicGeometryUpdater","./DataSources/EllipseGeometryUpdater","./DataSources/EllipseGraphics","./DataSources/EllipsoidGeometryUpdater","./DataSources/EllipsoidGraphics","./DataSources/Entity","./DataSources/EntityCollection","./DataSources/EntityView","./DataSources/GeoJsonDataSource","./DataSources/GeometryUpdater","./DataSources/GeometryVisualizer","./DataSources/GridMaterialProperty","./DataSources/ImageMaterialProperty","./DataSources/LabelGraphics","./DataSources/LabelVisualizer","./DataSources/MaterialProperty","./DataSources/ModelGraphics","./DataSources/ModelVisualizer","./DataSources/PathGraphics","./DataSources/PathVisualizer","./DataSources/PointGraphics","./DataSources/PointVisualizer","./DataSources/PolygonGeometryUpdater","./DataSources/PolygonGraphics","./DataSources/PolylineGeometryUpdater","./DataSources/PolylineGlowMaterialProperty","./DataSources/PolylineGraphics","./DataSources/PolylineOutlineMaterialProperty","./DataSources/PositionProperty","./DataSources/PositionPropertyArray","./DataSources/Property","./DataSources/PropertyArray","./DataSources/RectangleGeometryUpdater","./DataSources/RectangleGraphics","./DataSources/ReferenceProperty","./DataSources/SampledPositionProperty","./DataSources/SampledProperty","./DataSources/StaticGeometryColorBatch","./DataSources/StaticGeometryPerMaterialBatch","./DataSources/StaticOutlineGeometryBatch","./DataSources/StripeMaterialProperty","./DataSources/StripeOrientation","./DataSources/TimeIntervalCollectionPositionProperty","./DataSources/TimeIntervalCollectionProperty","./DataSources/Visualizer","./DataSources/WallGeometryUpdater","./DataSources/WallGraphics","./DataSources/createPropertyDescriptor","./Renderer/AutomaticUniforms","./Renderer/Buffer","./Renderer/BufferUsage","./Renderer/ClearCommand","./Renderer/Context","./Renderer/CubeMap","./Renderer/CubeMapFace","./Renderer/DrawCommand","./Renderer/Framebuffer","./Renderer/MipmapHint","./Renderer/PassState","./Renderer/PickFramebuffer","./Renderer/PixelDatatype","./Renderer/RenderState","./Renderer/Renderbuffer","./Renderer/RenderbufferFormat","./Renderer/ShaderCache","./Renderer/ShaderProgram","./Renderer/Texture","./Renderer/TextureMagnificationFilter","./Renderer/TextureMinificationFilter","./Renderer/TextureWrap","./Renderer/UniformState","./Renderer/VertexArray","./Renderer/VertexArrayFacade","./Renderer/createShaderSource","./Renderer/loadCubeMap","./Scene/Appearance","./Scene/ArcGisMapServerImageryProvider","./Scene/Billboard","./Scene/BillboardCollection","./Scene/BingMapsImageryProvider","./Scene/BingMapsStyle","./Scene/BlendEquation","./Scene/BlendFunction","./Scene/BlendingState","./Scene/Camera","./Scene/CameraEventAggregator","./Scene/CameraEventType","./Scene/CameraFlightPath","./Scene/CreditDisplay","./Scene/CullFace","./Scene/CullingVolume","./Scene/DebugAppearance","./Scene/DebugModelMatrixPrimitive","./Scene/DepthFunction","./Scene/DiscardMissingTileImagePolicy","./Scene/EllipsoidPrimitive","./Scene/EllipsoidSurfaceAppearance","./Scene/FXAA","./Scene/FrameRateMonitor","./Scene/FrameState","./Scene/FrustumCommands","./Scene/Globe","./Scene/GlobeSurfaceShaderSet","./Scene/GlobeSurfaceTile","./Scene/GlobeSurfaceTileProvider","./Scene/GoogleEarthImageryProvider","./Scene/GridImageryProvider","./Scene/HorizontalOrigin","./Scene/Imagery","./Scene/ImageryLayer","./Scene/ImageryLayerCollection","./Scene/ImageryLayerFeatureInfo","./Scene/ImageryProvider","./Scene/ImageryState","./Scene/Label","./Scene/LabelCollection","./Scene/LabelStyle","./Scene/Material","./Scene/MaterialAppearance","./Scene/Model","./Scene/ModelAnimation","./Scene/ModelAnimationCache","./Scene/ModelAnimationCollection","./Scene/ModelAnimationLoop","./Scene/ModelAnimationState","./Scene/ModelMaterial","./Scene/ModelMesh","./Scene/ModelNode","./Scene/Moon","./Scene/NeverTileDiscardPolicy","./Scene/OIT","./Scene/OpenStreetMapImageryProvider","./Scene/OrthographicFrustum","./Scene/Pass","./Scene/PerInstanceColorAppearance","./Scene/PerformanceDisplay","./Scene/PerspectiveFrustum","./Scene/PerspectiveOffCenterFrustum","./Scene/Polygon","./Scene/Polyline","./Scene/PolylineCollection","./Scene/PolylineColorAppearance","./Scene/PolylineMaterialAppearance","./Scene/Primitive","./Scene/PrimitiveCollection","./Scene/PrimitivePipeline","./Scene/PrimitiveState","./Scene/QuadtreeOccluders","./Scene/QuadtreePrimitive","./Scene/QuadtreeTile","./Scene/QuadtreeTileLoadState","./Scene/QuadtreeTileProvider","./Scene/RectanglePrimitive","./Scene/Scene","./Scene/SceneMode","./Scene/SceneTransforms","./Scene/SceneTransitioner","./Scene/ScreenSpaceCameraController","./Scene/SingleTileImageryProvider","./Scene/SkyAtmosphere","./Scene/SkyBox","./Scene/StencilFunction","./Scene/StencilOperation","./Scene/Sun","./Scene/SunPostProcess","./Scene/TerrainState","./Scene/TextureAtlas","./Scene/TileCoordinatesImageryProvider","./Scene/TileDiscardPolicy","./Scene/TileImagery","./Scene/TileMapServiceImageryProvider","./Scene/TileReplacementQueue","./Scene/TileState","./Scene/TileTerrain","./Scene/TweenCollection","./Scene/VerticalOrigin","./Scene/ViewportQuad","./Scene/WebMapServiceImageryProvider","./Scene/WebMapTileServiceImageryProvider","./Scene/createTangentSpaceDebugPrimitive","./Scene/getModelAccessor","./Scene/terrainAttributeLocations","./Shaders/AdjustTranslucentFS","./Shaders/Appearances/AllMaterialAppearanceFS","./Shaders/Appearances/AllMaterialAppearanceVS","./Shaders/Appearances/BasicMaterialAppearanceFS","./Shaders/Appearances/BasicMaterialAppearanceVS","./Shaders/Appearances/EllipsoidSurfaceAppearanceFS","./Shaders/Appearances/EllipsoidSurfaceAppearanceVS","./Shaders/Appearances/PerInstanceColorAppearanceFS","./Shaders/Appearances/PerInstanceColorAppearanceVS","./Shaders/Appearances/PerInstanceFlatColorAppearanceFS","./Shaders/Appearances/PerInstanceFlatColorAppearanceVS","./Shaders/Appearances/PolylineColorAppearanceVS","./Shaders/Appearances/PolylineMaterialAppearanceVS","./Shaders/Appearances/TexturedMaterialAppearanceFS","./Shaders/Appearances/TexturedMaterialAppearanceVS","./Shaders/BillboardCollectionFS","./Shaders/BillboardCollectionVS","./Shaders/Builtin/Constants/degreesPerRadian","./Shaders/Builtin/Constants/depthRange","./Shaders/Builtin/Constants/epsilon1","./Shaders/Builtin/Constants/epsilon2","./Shaders/Builtin/Constants/epsilon3","./Shaders/Builtin/Constants/epsilon4","./Shaders/Builtin/Constants/epsilon5","./Shaders/Builtin/Constants/epsilon6","./Shaders/Builtin/Constants/epsilon7","./Shaders/Builtin/Constants/infinity","./Shaders/Builtin/Constants/oneOverPi","./Shaders/Builtin/Constants/oneOverTwoPi","./Shaders/Builtin/Constants/pi","./Shaders/Builtin/Constants/piOverFour","./Shaders/Builtin/Constants/piOverSix","./Shaders/Builtin/Constants/piOverThree","./Shaders/Builtin/Constants/piOverTwo","./Shaders/Builtin/Constants/radiansPerDegree","./Shaders/Builtin/Constants/sceneMode2D","./Shaders/Builtin/Constants/sceneMode3D","./Shaders/Builtin/Constants/sceneModeColumbusView","./Shaders/Builtin/Constants/sceneModeMorphing","./Shaders/Builtin/Constants/solarRadius","./Shaders/Builtin/Constants/threePiOver2","./Shaders/Builtin/Constants/twoPi","./Shaders/Builtin/Constants/webMercatorMaxLatitude","./Shaders/Builtin/CzmBuiltins","./Shaders/Builtin/Functions/RGBToXYZ","./Shaders/Builtin/Functions/XYZToRGB","./Shaders/Builtin/Functions/alphaWeight","./Shaders/Builtin/Functions/antialias","./Shaders/Builtin/Functions/columbusViewMorph","./Shaders/Builtin/Functions/computePosition","./Shaders/Builtin/Functions/cosineAndSine","./Shaders/Builtin/Functions/eastNorthUpToEyeCoordinates","./Shaders/Builtin/Functions/ellipsoidContainsPoint","./Shaders/Builtin/Functions/ellipsoidNew","./Shaders/Builtin/Functions/ellipsoidWgs84TextureCoordinates","./Shaders/Builtin/Functions/equalsEpsilon","./Shaders/Builtin/Functions/eyeOffset","./Shaders/Builtin/Functions/eyeToWindowCoordinates","./Shaders/Builtin/Functions/geodeticSurfaceNormal","./Shaders/Builtin/Functions/getDefaultMaterial","./Shaders/Builtin/Functions/getLambertDiffuse","./Shaders/Builtin/Functions/getSpecular","./Shaders/Builtin/Functions/getWaterNoise","./Shaders/Builtin/Functions/getWgs84EllipsoidEC","./Shaders/Builtin/Functions/hue","./Shaders/Builtin/Functions/isEmpty","./Shaders/Builtin/Functions/isFull","./Shaders/Builtin/Functions/latitudeToWebMercatorFraction","./Shaders/Builtin/Functions/luminance","./Shaders/Builtin/Functions/modelToWindowCoordinates","./Shaders/Builtin/Functions/multiplyWithColorBalance","./Shaders/Builtin/Functions/octDecode","./Shaders/Builtin/Functions/phong","./Shaders/Builtin/Functions/pointAlongRay","./Shaders/Builtin/Functions/rayEllipsoidIntersectionInterval","./Shaders/Builtin/Functions/saturation","./Shaders/Builtin/Functions/signNotZero","./Shaders/Builtin/Functions/tangentToEyeSpaceMatrix","./Shaders/Builtin/Functions/translateRelativeToEye","./Shaders/Builtin/Functions/translucentPhong","./Shaders/Builtin/Functions/transpose","./Shaders/Builtin/Functions/windowToEyeCoordinates","./Shaders/Builtin/Structs/depthRangeStruct","./Shaders/Builtin/Structs/ellipsoid","./Shaders/Builtin/Structs/material","./Shaders/Builtin/Structs/materialInput","./Shaders/Builtin/Structs/ray","./Shaders/Builtin/Structs/raySegment","./Shaders/CompositeOITFS","./Shaders/EllipsoidFS","./Shaders/EllipsoidVS","./Shaders/GlobeFS","./Shaders/GlobeFSDepth","./Shaders/GlobeFSPole","./Shaders/GlobeVS","./Shaders/GlobeVSDepth","./Shaders/GlobeVSPole","./Shaders/Materials/BumpMapMaterial","./Shaders/Materials/CheckerboardMaterial","./Shaders/Materials/DotMaterial","./Shaders/Materials/FadeMaterial","./Shaders/Materials/GridMaterial","./Shaders/Materials/NormalMapMaterial","./Shaders/Materials/PolylineArrowMaterial","./Shaders/Materials/PolylineGlowMaterial","./Shaders/Materials/PolylineOutlineMaterial","./Shaders/Materials/RimLightingMaterial","./Shaders/Materials/StripeMaterial","./Shaders/Materials/Water","./Shaders/PolylineCommon","./Shaders/PolylineFS","./Shaders/PolylineVS","./Shaders/PostProcessFilters/AdditiveBlend","./Shaders/PostProcessFilters/BrightPass","./Shaders/PostProcessFilters/FXAA","./Shaders/PostProcessFilters/GaussianBlur1D","./Shaders/PostProcessFilters/PassThrough","./Shaders/ReprojectWebMercatorFS","./Shaders/ReprojectWebMercatorVS","./Shaders/SkyAtmosphereFS","./Shaders/SkyAtmosphereVS","./Shaders/SkyBoxFS","./Shaders/SkyBoxVS","./Shaders/SunFS","./Shaders/SunTextureFS","./Shaders/SunVS","./Shaders/ViewportQuadFS","./Shaders/ViewportQuadVS","./ThirdParty/Tween","./ThirdParty/Uri","./ThirdParty/gltfDefaults","./ThirdParty/knockout-3.1.0","./ThirdParty/knockout-es5","./ThirdParty/knockout","./ThirdParty/measureText","./ThirdParty/mersenne-twister","./ThirdParty/sprintf","./ThirdParty/topojson","./ThirdParty/when","./Widgets/Animation/Animation","./Widgets/Animation/AnimationViewModel","./Widgets/BaseLayerPicker/BaseLayerPicker","./Widgets/BaseLayerPicker/BaseLayerPickerViewModel","./Widgets/BaseLayerPicker/ProviderViewModel","./Widgets/BaseLayerPicker/createDefaultImageryProviderViewModels","./Widgets/BaseLayerPicker/createDefaultTerrainProviderViewModels","./Widgets/CesiumInspector/CesiumInspector","./Widgets/CesiumInspector/CesiumInspectorViewModel","./Widgets/CesiumWidget/CesiumWidget","./Widgets/ClockViewModel","./Widgets/Command","./Widgets/FullscreenButton/FullscreenButton","./Widgets/FullscreenButton/FullscreenButtonViewModel","./Widgets/Geocoder/Geocoder","./Widgets/Geocoder/GeocoderViewModel","./Widgets/HomeButton/HomeButton","./Widgets/HomeButton/HomeButtonViewModel","./Widgets/InfoBox/InfoBox","./Widgets/InfoBox/InfoBoxViewModel","./Widgets/NavigationHelpButton/NavigationHelpButton","./Widgets/NavigationHelpButton/NavigationHelpButtonViewModel","./Widgets/PerformanceWatchdog/PerformanceWatchdog","./Widgets/PerformanceWatchdog/PerformanceWatchdogViewModel","./Widgets/SceneModePicker/SceneModePicker","./Widgets/SceneModePicker/SceneModePickerViewModel","./Widgets/SelectionIndicator/SelectionIndicator","./Widgets/SelectionIndicator/SelectionIndicatorViewModel","./Widgets/SvgPathBindingHandler","./Widgets/Timeline/Timeline","./Widgets/Timeline/TimelineHighlightRange","./Widgets/Timeline/TimelineTrack","./Widgets/ToggleButtonViewModel","./Widgets/Viewer/Viewer","./Widgets/Viewer/viewerCesiumInspectorMixin","./Widgets/Viewer/viewerDragDropMixin","./Widgets/Viewer/viewerEntityMixin","./Widgets/Viewer/viewerPerformanceWatchdogMixin","./Widgets/createCommand","./Widgets/getElement","./Widgets/subscribeAndEvaluate","./Workers/createTaskProcessorWorker"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht,dt,mt,pt,ft,vt,gt,_t,yt,Ct,wt,St,Et,bt,Tt,xt,Pt,At,Mt,Dt,It,Rt,Ot,Lt,Nt,Bt,Ft,zt,Vt,kt,Ut,Wt,Gt,Ht,qt,jt,Yt,Xt,Zt,Qt,Jt,Kt,$t,er,tr,rr,ir,nr,or,ar,sr,lr,ur,cr,hr,dr,mr,pr,fr,vr,gr,_r,yr,Cr,wr,Sr,Er,br,Tr,xr,Pr,Ar,Mr,Dr,Ir,Rr,Or,Lr,Nr,Br,Fr,zr,Vr,kr,Ur,Wr,Gr,Hr,qr,jr,Yr,Xr,Zr,Qr,Jr,Kr,$r,ei,ti,ri,ii,ni,oi,ai,si,li,ui,ci,hi,di,mi,pi,fi,vi,gi,_i,yi,Ci,wi,Si,Ei,bi,Ti,xi,Pi,Ai,Mi,Di,Ii,Ri,Oi,Li,Ni,Bi,Fi,zi,Vi,ki,Ui,Wi,Gi,Hi,qi,ji,Yi,Xi,Zi,Qi,Ji,Ki,$i,en,tn,rn,nn,on,an,sn,ln,un,cn,hn,dn,mn,pn,fn,vn,gn,_n,yn,Cn,wn,Sn,En,bn,Tn,xn,Pn,An,Mn,Dn,In,Rn,On,Ln,Nn,Bn,Fn,zn,Vn,kn,Un,Wn,Gn,Hn,qn,jn,Yn,Xn,Zn,Qn,Jn,Kn,$n,eo,to,ro,io,no,oo,ao,so,lo,uo,co,ho,mo,po,fo,vo,go,_o,yo,Co,wo,So,Eo,bo,To,xo,Po,Ao,Mo,Do,Io,Ro,Oo,Lo,No,Bo,Fo,zo,Vo,ko,Uo,Wo,Go,Ho,qo,jo,Yo,Xo,Zo,Qo,Jo,Ko,$o,ea,ta,ra,ia,na,oa,aa,sa,la,ua,ca,ha,da,ma,pa,fa,va,ga,_a,ya,Ca,wa,Sa,Ea,ba,Ta,xa,Pa,Aa,Ma,Da,Ia,Ra,Oa,La,Na,Ba,Fa,za,Va,ka,Ua,Wa,Ga,Ha,qa,ja,Ya,Xa,Za,Qa,Ja,Ka,$a,es,ts,rs,is,ns,os,as,ss,ls,us,cs,hs,ds,ms,ps,fs,vs,gs,_s,ys,Cs,ws,Ss,Es,bs,Ts,xs,Ps,As,Ms,Ds,Is,Rs,Os,Ls,Ns,Bs,Fs,zs,Vs,ks,Us,Ws,Gs,Hs,qs,js,Ys,Xs,Zs,Qs,Js,Ks,$s,el,tl,rl,il,nl,ol,al,sl,ll,ul,cl,hl,dl,ml,pl,fl,vl,gl,_l,yl,Cl,wl,Sl,El,bl,Tl,xl,Pl,Al,Ml,Dl,Il,Rl,Ol,Ll,Nl,Bl,Fl,zl,Vl,kl,Ul,Wl,Gl,Hl,ql,jl,Yl,Xl,Zl,Ql,Jl,Kl,$l,eu,tu,ru,iu,nu,ou,au,su,lu,uu,cu,hu,du,mu,pu,fu,vu,gu,_u,yu,Cu,wu,Su,Eu,bu,Tu,xu,Pu,Au,Mu,Du,Iu,Ru,Ou,Lu,Nu,Bu,Fu,zu,Vu,ku,Uu,Wu,Gu,Hu,qu,ju,Yu,Xu,Zu,Qu,Ju,Ku,$u,ec,tc,rc,ic,nc,oc,ac,sc,lc,uc,cc,hc,dc,mc,pc,fc,vc,gc,_c,yc,Cc,wc,Sc,Ec,bc,Tc,xc,Pc,Ac){"use strict";var Mc={VERSION:"1.2",_shaders:{}};return Mc.ArcGisImageServerTerrainProvider=e,Mc.AssociativeArray=t,Mc.AxisAlignedBoundingBox=r,Mc.BingMapsApi=i,Mc.BoundingRectangle=n,Mc.BoundingSphere=o,Mc.BoxGeometry=a,Mc.BoxOutlineGeometry=s,Mc.Cartesian2=l,Mc.Cartesian3=u,Mc.Cartesian4=c,Mc.Cartographic=h,Mc.CatmullRomSpline=d,Mc.CesiumTerrainProvider=m,Mc.CircleGeometry=p,Mc.CircleOutlineGeometry=f,Mc.Clock=v,Mc.ClockRange=g,Mc.ClockStep=_,Mc.Color=y,Mc.ColorGeometryInstanceAttribute=C,Mc.ComponentDatatype=w,Mc.CornerType=S,Mc.CorridorGeometry=E,Mc.CorridorGeometryLibrary=b,Mc.CorridorOutlineGeometry=T,Mc.Credit=x,Mc.CubicRealPolynomial=P,Mc.CylinderGeometry=A,Mc.CylinderGeometryLibrary=M,Mc.CylinderOutlineGeometry=D,Mc.DefaultProxy=I,Mc.DeveloperError=R,Mc.EarthOrientationParameters=O,Mc.EarthOrientationParametersSample=L,Mc.EasingFunction=N,Mc.EllipseGeometry=B,Mc.EllipseGeometryLibrary=F,Mc.EllipseOutlineGeometry=z,Mc.Ellipsoid=V,Mc.EllipsoidGeodesic=k,Mc.EllipsoidGeometry=U,Mc.EllipsoidOutlineGeometry=W,Mc.EllipsoidTangentPlane=G,Mc.EllipsoidTerrainProvider=H,Mc.EllipsoidalOccluder=q,Mc.EncodedCartesian3=j,Mc.Event=Y,Mc.EventHelper=X,Mc.ExtrapolationType=Z,Mc.FeatureDetection=Q,Mc.Fullscreen=J,Mc.GeographicProjection=K,Mc.GeographicTilingScheme=$,Mc.Geometry=et,Mc.GeometryAttribute=tt,Mc.GeometryAttributes=rt,Mc.GeometryInstance=it,Mc.GeometryInstanceAttribute=nt,Mc.GeometryPipeline=ot,Mc.GregorianDate=at,Mc.HeightmapTerrainData=st,Mc.HeightmapTessellator=lt,Mc.HermitePolynomialApproximation=ut,Mc.HermiteSpline=ct,Mc.Iau2000Orientation=ht,Mc.Iau2006XysData=dt,Mc.Iau2006XysSample=mt,Mc.IauOrientationAxes=pt,Mc.IauOrientationParameters=ft,Mc.IndexDatatype=vt,Mc.InterpolationAlgorithm=gt,Mc.Intersect=_t,Mc.IntersectionTests=yt,Mc.Intersections2D=Ct,Mc.Interval=wt,Mc.Iso8601=St,Mc.JulianDate=Et,Mc.KeyboardEventModifier=bt,Mc.LagrangePolynomialApproximation=Tt,Mc.LeapSecond=xt,Mc.LinearApproximation=Pt,Mc.LinearSpline=At,Mc.MapProjection=Mt,Mc.Math=Dt,Mc.Matrix2=It,Mc.Matrix3=Rt,Mc.Matrix4=Ot,Mc.NearFarScalar=Lt,Mc.ObjectOrientedBoundingBox=Nt,Mc.Occluder=Bt,Mc.Oct=Ft,Mc.Packable=zt,Mc.PackableForInterpolation=Vt,Mc.PinBuilder=kt,Mc.PixelFormat=Ut,Mc.Plane=Wt,Mc.PolygonGeometry=Gt,Mc.PolygonGeometryLibrary=Ht,Mc.PolygonOutlineGeometry=qt,Mc.PolygonPipeline=jt,Mc.PolylineGeometry=Yt,Mc.PolylinePipeline=Xt,Mc.PolylineVolumeGeometry=Zt,Mc.PolylineVolumeGeometryLibrary=Qt,Mc.PolylineVolumeOutlineGeometry=Jt,Mc.PrimitiveType=Kt,Mc.QuadraticRealPolynomial=$t,Mc.QuantizedMeshTerrainData=er,Mc.QuarticRealPolynomial=tr,Mc.Quaternion=rr,Mc.QuaternionSpline=ir,Mc.Queue=nr,Mc.Ray=or,Mc.Rectangle=ar,Mc.RectangleGeometry=sr,Mc.RectangleGeometryLibrary=lr,Mc.RectangleOutlineGeometry=ur,Mc.ReferenceFrame=cr,Mc.RequestErrorEvent=hr,Mc.RuntimeError=dr,Mc.ScreenSpaceEventHandler=mr,Mc.ScreenSpaceEventType=pr,Mc.ShowGeometryInstanceAttribute=fr,Mc.Simon1994PlanetaryPositions=vr,Mc.SimplePolylineGeometry=gr,Mc.SphereGeometry=_r,Mc.SphereOutlineGeometry=yr,Mc.Spherical=Cr,Mc.Spline=wr,Mc.TaskProcessor=Sr,Mc.TerrainData=Er,Mc.TerrainMesh=br,Mc.TerrainProvider=Tr,Mc.TileProviderError=xr,Mc.TilingScheme=Pr,Mc.TimeConstants=Ar,Mc.TimeInterval=Mr,Mc.TimeIntervalCollection=Dr,Mc.TimeStandard=Ir,Mc.Tipsify=Rr,Mc.Transforms=Or,Mc.TridiagonalSystemSolver=Lr,Mc.VRTheWorldTerrainProvider=Nr,Mc.VertexFormat=Br,Mc.Visibility=Fr,Mc.WallGeometry=zr,Mc.WallGeometryLibrary=Vr,Mc.WallOutlineGeometry=kr,Mc.WebMercatorProjection=Ur,Mc.WebMercatorTilingScheme=Wr,Mc.WindingOrder=Gr,Mc.barycentricCoordinates=Hr,Mc.binarySearch=qr,Mc.buildModuleUrl=jr,Mc.cancelAnimationFrame=Yr,Mc.clone=Xr,Mc.combine=Zr,Mc.createGuid=Qr,Mc.defaultValue=Jr,Mc.defineProperties=Kr,Mc.defined=$r,Mc.deprecationWarning=ei,Mc.destroyObject=ti,Mc.formatError=ri,Mc.freezeObject=ii,Mc.getFilenameFromUri=ni,Mc.getImagePixels=oi,Mc.getTimestamp=ai,Mc.isArray=si,Mc.isCrossOriginUrl=li,Mc.isLeapYear=ui,Mc.jsonp=ci,Mc.loadArrayBuffer=hi,Mc.loadBlob=di,Mc.loadImage=mi,Mc.loadImageViaBlob=pi,Mc.loadJson=fi,Mc.loadText=vi,Mc.loadWithXhr=gi,Mc.loadXML=_i,Mc.mergeSort=yi,Mc.parseResponseHeaders=Ci,Mc.pointInsideTriangle=wi,Mc.requestAnimationFrame=Si,Mc.sampleTerrain=Ei,Mc.subdivideArray=bi,Mc.throttleRequestByServer=Ti,Mc.wrapFunction=xi,Mc.writeTextToCanvas=Pi,Mc.BillboardGraphics=Ai,Mc.BillboardVisualizer=Mi,Mc.ColorMaterialProperty=Di,Mc.CompositeEntityCollection=Ii,Mc.CompositeMaterialProperty=Ri,Mc.CompositePositionProperty=Oi,Mc.CompositeProperty=Li,Mc.ConstantPositionProperty=Ni,Mc.ConstantProperty=Bi,Mc.CzmlDataSource=Fi,Mc.DataSource=zi,Mc.DataSourceClock=Vi,Mc.DataSourceCollection=ki,Mc.DataSourceDisplay=Ui,Mc.DynamicGeometryUpdater=Wi,Mc.EllipseGeometryUpdater=Gi,Mc.EllipseGraphics=Hi,Mc.EllipsoidGeometryUpdater=qi,Mc.EllipsoidGraphics=ji,Mc.Entity=Yi,Mc.EntityCollection=Xi,Mc.EntityView=Zi,Mc.GeoJsonDataSource=Qi,Mc.GeometryUpdater=Ji,Mc.GeometryVisualizer=Ki,Mc.GridMaterialProperty=$i,Mc.ImageMaterialProperty=en,Mc.LabelGraphics=tn,Mc.LabelVisualizer=rn,Mc.MaterialProperty=nn,Mc.ModelGraphics=on,Mc.ModelVisualizer=an,Mc.PathGraphics=sn,Mc.PathVisualizer=ln,Mc.PointGraphics=un,Mc.PointVisualizer=cn,Mc.PolygonGeometryUpdater=hn,Mc.PolygonGraphics=dn,Mc.PolylineGeometryUpdater=mn,Mc.PolylineGlowMaterialProperty=pn,Mc.PolylineGraphics=fn,Mc.PolylineOutlineMaterialProperty=vn,Mc.PositionProperty=gn,Mc.PositionPropertyArray=_n,Mc.Property=yn,Mc.PropertyArray=Cn,Mc.RectangleGeometryUpdater=wn,Mc.RectangleGraphics=Sn,Mc.ReferenceProperty=En,Mc.SampledPositionProperty=bn,Mc.SampledProperty=Tn,Mc.StaticGeometryColorBatch=xn,Mc.StaticGeometryPerMaterialBatch=Pn,Mc.StaticOutlineGeometryBatch=An,Mc.StripeMaterialProperty=Mn,Mc.StripeOrientation=Dn,Mc.TimeIntervalCollectionPositionProperty=In,Mc.TimeIntervalCollectionProperty=Rn,Mc.Visualizer=On,Mc.WallGeometryUpdater=Ln,Mc.WallGraphics=Nn,Mc.createPropertyDescriptor=Bn,Mc.AutomaticUniforms=Fn,Mc.Buffer=zn,Mc.BufferUsage=Vn,Mc.ClearCommand=kn,Mc.Context=Un,Mc.CubeMap=Wn,Mc.CubeMapFace=Gn,Mc.DrawCommand=Hn,Mc.Framebuffer=qn,Mc.MipmapHint=jn,Mc.PassState=Yn,Mc.PickFramebuffer=Xn,Mc.PixelDatatype=Zn,Mc.RenderState=Qn,Mc.Renderbuffer=Jn,Mc.RenderbufferFormat=Kn,Mc.ShaderCache=$n,Mc.ShaderProgram=eo,Mc.Texture=to,Mc.TextureMagnificationFilter=ro,Mc.TextureMinificationFilter=io,Mc.TextureWrap=no,Mc.UniformState=oo,Mc.VertexArray=ao,Mc.VertexArrayFacade=so,Mc.createShaderSource=lo,Mc.loadCubeMap=uo,Mc.Appearance=co,Mc.ArcGisMapServerImageryProvider=ho,Mc.Billboard=mo,Mc.BillboardCollection=po,Mc.BingMapsImageryProvider=fo,Mc.BingMapsStyle=vo,Mc.BlendEquation=go,Mc.BlendFunction=_o,Mc.BlendingState=yo,Mc.Camera=Co,Mc.CameraEventAggregator=wo,Mc.CameraEventType=So,Mc.CameraFlightPath=Eo,Mc.CreditDisplay=bo,Mc.CullFace=To,Mc.CullingVolume=xo,Mc.DebugAppearance=Po,Mc.DebugModelMatrixPrimitive=Ao,Mc.DepthFunction=Mo,Mc.DiscardMissingTileImagePolicy=Do,Mc.EllipsoidPrimitive=Io,Mc.EllipsoidSurfaceAppearance=Ro,Mc.FXAA=Oo,Mc.FrameRateMonitor=Lo,Mc.FrameState=No,Mc.FrustumCommands=Bo,Mc.Globe=Fo,Mc.GlobeSurfaceShaderSet=zo,Mc.GlobeSurfaceTile=Vo,Mc.GlobeSurfaceTileProvider=ko,Mc.GoogleEarthImageryProvider=Uo,Mc.GridImageryProvider=Wo,Mc.HorizontalOrigin=Go,Mc.Imagery=Ho,Mc.ImageryLayer=qo,Mc.ImageryLayerCollection=jo,Mc.ImageryLayerFeatureInfo=Yo,Mc.ImageryProvider=Xo,Mc.ImageryState=Zo,Mc.Label=Qo,Mc.LabelCollection=Jo,Mc.LabelStyle=Ko,Mc.Material=$o,Mc.MaterialAppearance=ea,Mc.Model=ta,Mc.ModelAnimation=ra,Mc.ModelAnimationCache=ia,Mc.ModelAnimationCollection=na,Mc.ModelAnimationLoop=oa,Mc.ModelAnimationState=aa,Mc.ModelMaterial=sa,Mc.ModelMesh=la,Mc.ModelNode=ua,Mc.Moon=ca,Mc.NeverTileDiscardPolicy=ha,Mc.OIT=da,Mc.OpenStreetMapImageryProvider=ma,Mc.OrthographicFrustum=pa,Mc.Pass=fa,Mc.PerInstanceColorAppearance=va,Mc.PerformanceDisplay=ga,Mc.PerspectiveFrustum=_a,Mc.PerspectiveOffCenterFrustum=ya,Mc.Polygon=Ca,Mc.Polyline=wa,Mc.PolylineCollection=Sa,Mc.PolylineColorAppearance=Ea,Mc.PolylineMaterialAppearance=ba,Mc.Primitive=Ta,Mc.PrimitiveCollection=xa,Mc.PrimitivePipeline=Pa,Mc.PrimitiveState=Aa,Mc.QuadtreeOccluders=Ma,Mc.QuadtreePrimitive=Da,Mc.QuadtreeTile=Ia,Mc.QuadtreeTileLoadState=Ra,Mc.QuadtreeTileProvider=Oa,Mc.RectanglePrimitive=La,Mc.Scene=Na,Mc.SceneMode=Ba,Mc.SceneTransforms=Fa,Mc.SceneTransitioner=za,Mc.ScreenSpaceCameraController=Va,Mc.SingleTileImageryProvider=ka,Mc.SkyAtmosphere=Ua,Mc.SkyBox=Wa,Mc.StencilFunction=Ga,Mc.StencilOperation=Ha,Mc.Sun=qa,Mc.SunPostProcess=ja,Mc.TerrainState=Ya,Mc.TextureAtlas=Xa,Mc.TileCoordinatesImageryProvider=Za,Mc.TileDiscardPolicy=Qa,Mc.TileImagery=Ja,Mc.TileMapServiceImageryProvider=Ka,Mc.TileReplacementQueue=$a,Mc.TileState=es,Mc.TileTerrain=ts,Mc.TweenCollection=rs,Mc.VerticalOrigin=is,Mc.ViewportQuad=ns,Mc.WebMapServiceImageryProvider=os,Mc.WebMapTileServiceImageryProvider=as,Mc.createTangentSpaceDebugPrimitive=ss,Mc.getModelAccessor=ls,Mc.terrainAttributeLocations=us,Mc._shaders.AdjustTranslucentFS=cs,Mc._shaders.AllMaterialAppearanceFS=hs,Mc._shaders.AllMaterialAppearanceVS=ds,Mc._shaders.BasicMaterialAppearanceFS=ms,Mc._shaders.BasicMaterialAppearanceVS=ps,Mc._shaders.EllipsoidSurfaceAppearanceFS=fs,Mc._shaders.EllipsoidSurfaceAppearanceVS=vs,Mc._shaders.PerInstanceColorAppearanceFS=gs,Mc._shaders.PerInstanceColorAppearanceVS=_s,Mc._shaders.PerInstanceFlatColorAppearanceFS=ys,Mc._shaders.PerInstanceFlatColorAppearanceVS=Cs,Mc._shaders.PolylineColorAppearanceVS=ws,Mc._shaders.PolylineMaterialAppearanceVS=Ss,Mc._shaders.TexturedMaterialAppearanceFS=Es,Mc._shaders.TexturedMaterialAppearanceVS=bs,Mc._shaders.BillboardCollectionFS=Ts,Mc._shaders.BillboardCollectionVS=xs,Mc._shaders.degreesPerRadian=Ps,Mc._shaders.depthRange=As,Mc._shaders.epsilon1=Ms,Mc._shaders.epsilon2=Ds,Mc._shaders.epsilon3=Is,Mc._shaders.epsilon4=Rs,Mc._shaders.epsilon5=Os,Mc._shaders.epsilon6=Ls,Mc._shaders.epsilon7=Ns,Mc._shaders.infinity=Bs,Mc._shaders.oneOverPi=Fs,Mc._shaders.oneOverTwoPi=zs,Mc._shaders.pi=Vs,Mc._shaders.piOverFour=ks,Mc._shaders.piOverSix=Us,Mc._shaders.piOverThree=Ws,Mc._shaders.piOverTwo=Gs,Mc._shaders.radiansPerDegree=Hs,Mc._shaders.sceneMode2D=qs,Mc._shaders.sceneMode3D=js,Mc._shaders.sceneModeColumbusView=Ys,Mc._shaders.sceneModeMorphing=Xs,Mc._shaders.solarRadius=Zs,Mc._shaders.threePiOver2=Qs,Mc._shaders.twoPi=Js,Mc._shaders.webMercatorMaxLatitude=Ks,Mc._shaders.CzmBuiltins=$s,Mc._shaders.RGBToXYZ=el,Mc._shaders.XYZToRGB=tl,Mc._shaders.alphaWeight=rl,Mc._shaders.antialias=il,Mc._shaders.columbusViewMorph=nl,Mc._shaders.computePosition=ol,Mc._shaders.cosineAndSine=al,Mc._shaders.eastNorthUpToEyeCoordinates=sl,Mc._shaders.ellipsoidContainsPoint=ll,Mc._shaders.ellipsoidNew=ul,Mc._shaders.ellipsoidWgs84TextureCoordinates=cl,Mc._shaders.equalsEpsilon=hl,Mc._shaders.eyeOffset=dl,Mc._shaders.eyeToWindowCoordinates=ml,Mc._shaders.geodeticSurfaceNormal=pl,Mc._shaders.getDefaultMaterial=fl,Mc._shaders.getLambertDiffuse=vl,Mc._shaders.getSpecular=gl,Mc._shaders.getWaterNoise=_l,Mc._shaders.getWgs84EllipsoidEC=yl,Mc._shaders.hue=Cl,Mc._shaders.isEmpty=wl,Mc._shaders.isFull=Sl,Mc._shaders.latitudeToWebMercatorFraction=El,Mc._shaders.luminance=bl,Mc._shaders.modelToWindowCoordinates=Tl,Mc._shaders.multiplyWithColorBalance=xl,Mc._shaders.octDecode=Pl,Mc._shaders.phong=Al,Mc._shaders.pointAlongRay=Ml,Mc._shaders.rayEllipsoidIntersectionInterval=Dl,Mc._shaders.saturation=Il,Mc._shaders.signNotZero=Rl,Mc._shaders.tangentToEyeSpaceMatrix=Ol,Mc._shaders.translateRelativeToEye=Ll,Mc._shaders.translucentPhong=Nl,Mc._shaders.transpose=Bl,Mc._shaders.windowToEyeCoordinates=Fl,Mc._shaders.depthRangeStruct=zl,Mc._shaders.ellipsoid=Vl,Mc._shaders.material=kl,Mc._shaders.materialInput=Ul,Mc._shaders.ray=Wl,Mc._shaders.raySegment=Gl,Mc._shaders.CompositeOITFS=Hl,Mc._shaders.EllipsoidFS=ql,Mc._shaders.EllipsoidVS=jl,Mc._shaders.GlobeFS=Yl,Mc._shaders.GlobeFSDepth=Xl,Mc._shaders.GlobeFSPole=Zl,Mc._shaders.GlobeVS=Ql,Mc._shaders.GlobeVSDepth=Jl,Mc._shaders.GlobeVSPole=Kl,Mc._shaders.BumpMapMaterial=$l,Mc._shaders.CheckerboardMaterial=eu,Mc._shaders.DotMaterial=tu,Mc._shaders.FadeMaterial=ru,Mc._shaders.GridMaterial=iu,Mc._shaders.NormalMapMaterial=nu,Mc._shaders.PolylineArrowMaterial=ou,Mc._shaders.PolylineGlowMaterial=au,Mc._shaders.PolylineOutlineMaterial=su,Mc._shaders.RimLightingMaterial=lu,Mc._shaders.StripeMaterial=uu,Mc._shaders.Water=cu,Mc._shaders.PolylineCommon=hu,Mc._shaders.PolylineFS=du,Mc._shaders.PolylineVS=mu,Mc._shaders.AdditiveBlend=pu,Mc._shaders.BrightPass=fu,Mc._shaders.FXAA=vu,Mc._shaders.GaussianBlur1D=gu,Mc._shaders.PassThrough=_u,Mc._shaders.ReprojectWebMercatorFS=yu,Mc._shaders.ReprojectWebMercatorVS=Cu,Mc._shaders.SkyAtmosphereFS=wu,Mc._shaders.SkyAtmosphereVS=Su,Mc._shaders.SkyBoxFS=Eu,Mc._shaders.SkyBoxVS=bu,Mc._shaders.SunFS=Tu,Mc._shaders.SunTextureFS=xu,Mc._shaders.SunVS=Pu,Mc._shaders.ViewportQuadFS=Au,Mc._shaders.ViewportQuadVS=Mu,Mc.Tween=Du,Mc.Uri=Iu,Mc.gltfDefaults=Ru,Mc["knockout-3.1.0"]=Ou,Mc["knockout-es5"]=Lu,Mc.knockout=Nu,Mc.measureText=Bu,Mc["mersenne-twister"]=Fu,Mc.sprintf=zu,Mc.topojson=Vu,Mc.when=ku,Mc.Animation=Uu,Mc.AnimationViewModel=Wu,Mc.BaseLayerPicker=Gu,Mc.BaseLayerPickerViewModel=Hu,Mc.ProviderViewModel=qu,Mc.createDefaultImageryProviderViewModels=ju,Mc.createDefaultTerrainProviderViewModels=Yu,Mc.CesiumInspector=Xu,Mc.CesiumInspectorViewModel=Zu,Mc.CesiumWidget=Qu,Mc.ClockViewModel=Ju,Mc.Command=Ku,Mc.FullscreenButton=$u,Mc.FullscreenButtonViewModel=ec,Mc.Geocoder=tc,Mc.GeocoderViewModel=rc,Mc.HomeButton=ic,Mc.HomeButtonViewModel=nc,Mc.InfoBox=oc,Mc.InfoBoxViewModel=ac,Mc.NavigationHelpButton=sc,Mc.NavigationHelpButtonViewModel=lc,Mc.PerformanceWatchdog=uc,Mc.PerformanceWatchdogViewModel=cc,Mc.SceneModePicker=hc,Mc.SceneModePickerViewModel=dc,Mc.SelectionIndicator=mc,Mc.SelectionIndicatorViewModel=pc,Mc.SvgPathBindingHandler=fc,Mc.Timeline=vc,Mc.TimelineHighlightRange=gc,Mc.TimelineTrack=_c,Mc.ToggleButtonViewModel=yc,Mc.Viewer=Cc,Mc.viewerCesiumInspectorMixin=wc,Mc.viewerDragDropMixin=Sc,Mc.viewerEntityMixin=Ec,Mc.viewerPerformanceWatchdogMixin=bc,Mc.createCommand=Tc,Mc.getElement=xc,Mc.subscribeAndEvaluate=Pc,Mc.createTaskProcessorWorker=Ac,Mc
}),t(["Cesium"],function(e){"use strict";var t="undefined"!=typeof window?window:"undefined"!=typeof self?self:{};t.Cesium=e},void 0,!0)}();",
                "body": "/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2014 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
/**
 * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

/**
  @license
  when.js - https://github.com/cujojs/when

  MIT License (c) copyright B Cavalier & J Hann

 * A lightweight CommonJS Promises/A and when() implementation
 * when is part of the cujo.js family of libraries (http://cujojs.com/)
 *
 * Licensed under the MIT License at:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @version 1.7.1
 */

/**
@license
mersenne-twister.js - https://gist.github.com/banksean/300494

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 *
 * Grauw URI utilities
 *
 * See: http://hg.grauw.nl/grauw-lib/file/tip/src/uri.js
 *
 * @author Laurens Holst (http://www.grauw.nl/)
 *
 *   Copyright 2012 Laurens Holst
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

// Copyright 2012 Google Inc., Apache 2.0 license.

/**
@license
sprintf.js from the php.js project - https://github.com/kvz/phpjs
Directly from https://github.com/kvz/phpjs/blob/master/functions/strings/sprintf.js

php.js is copyright 2012 Kevin van Zonneveld.

Portions copyright Brett Zamir (http://brett-zamir.me), Kevin van Zonneveld
(http://kevin.vanzonneveld.net), Onno Marsman, Theriault, Michael White
(http://getsprink.com), Waldo Malqui Silva, Paulo Freitas, Jack, Jonas
Raoni Soares Silva (http://www.jsfromhell.com), Philip Peterson, Legaev
Andrey, Ates Goral (http://magnetiq.com), Alex, Ratheous, Martijn Wieringa,
Rafa? Kukawski (http://blog.kukawski.pl), lmeyrick
(https://sourceforge.net/projects/bcmath-js/), Nate, Philippe Baumann,
Enrique Gonzalez, Webtoolkit.info (http://www.webtoolkit.info/), Carlos R.
L. Rodrigues (http://www.jsfromhell.com), Ash Searle
(http://hexmen.com/blog/), Jani Hartikainen, travc, Ole Vrijenhoek,
Erkekjetter, Michael Grier, Rafa? Kukawski (http://kukawski.pl), Johnny
Mast (http://www.phpvrouwen.nl), T.Wild, d3x,
http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript,
Rafa? Kukawski (http://blog.kukawski.pl/), stag019, pilus, WebDevHobo
(http://webdevhobo.blogspot.com/), marrtins, GeekFG
(http://geekfg.blogspot.com), Andrea Giammarchi
(http://webreflection.blogspot.com), Arpad Ray (mailto:arpad@php.net),
gorthaur, Paul Smith, Tim de Koning (http://www.kingsquare.nl), Joris, Oleg
Eremeev, Steve Hilder, majak, gettimeofday, KELAN, Josh Fraser
(http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/),
Marc Palau, Martin
(http://www.erlenwiese.de/), Breaking Par Consulting Inc
(http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7),
Chris, Mirek Slugen, saulius, Alfonso Jimenez
(http://www.alfonsojimenez.com), Diplom@t (http://difane.com/), felix,
Mailfaker (http://www.weedem.fr/), Tyler Akins (http://rumkin.com), Caio
Ariede (http://caioariede.com), Robin, Kankrelune
(http://www.webfaktory.info/), Karol Kowalski, Imgen Tata
(http://www.myipdf.com/), mdsjack (http://www.mdsjack.bo.it), Dreamer,
Felix Geisendoerfer (http://www.debuggable.com/felix), Lars Fischer, AJ,
David, Aman Gupta, Michael White, Public Domain
(http://www.json.org/json2.js), Steven Levithan
(http://blog.stevenlevithan.com), Sakimori, Pellentesque Malesuada,
Thunder.m, Dj (http://phpjs.org/functions/htmlentities:425#comment_134018),
Steve Clay, David James, Francois, class_exists, nobbler, T. Wild, Itsacon
(http://www.itsacon.net/), date, Ole Vrijenhoek (http://www.nervous.nl/),
Fox, Raphael (Ao RUDLER), Marco, noname, Mateusz "loonquawl" Zalega, Frank
Forte, Arno, ger, mktime, john (http://www.jd-tech.net), Nick Kolosov
(http://sammy.ru), marc andreu, Scott Cariss, Douglas Crockford
(http://javascript.crockford.com), madipta, Slawomir Kaniecki,
ReverseSyntax, Nathan, Alex Wilson, kenneth, Bayron Guevara, Adam Wallner
(http://web2.bitbaro.hu/), paulo kuong, jmweb, Lincoln Ramsay, djmix,
Pyerre, Jon Hohle, Thiago Mata (http://thiagomata.blog.com), lmeyrick
(https://sourceforge.net/projects/bcmath-js/this.), Linuxworld, duncan,
Gilbert, Sanjoy Roy, Shingo, sankai, Oskar Larsson H?gfeldt
(http://oskar-lh.name/), Denny Wardhana, 0m3r, Everlasto, Subhasis Deb,
josh, jd, Pier Paolo Ramon (http://www.mastersoup.com/), P, merabi, Soren
Hansen, Eugene Bulkin (http://doubleaw.com/), Der Simon
(http://innerdom.sourceforge.net/), echo is bad, Ozh, XoraX
(http://www.xorax.info), EdorFaus, JB, J A R, Marc Jansen, Francesco, LH,
Stoyan Kyosev (http://www.svest.org/), nord_ua, omid
(http://phpjs.org/functions/380:380#comment_137122), Brad Touesnard, MeEtc
(http://yass.meetcweb.com), Peter-Paul Koch
(http://www.quirksmode.org/js/beat.html), Olivier Louvignes
(http://mg-crea.com/), T0bsn, Tim Wiel, Bryan Elliott, Jalal Berrami,
Martin, JT, David Randall, Thomas Beaucourt (http://www.webapp.fr), taith,
vlado houba, Pierre-Luc Paour, Kristof Coomans (SCK-CEN Belgian Nucleair
Research Centre), Martin Pool, Kirk Strobeck, Rick Waldron, Brant Messenger
(http://www.brantmessenger.com/), Devan Penner-Woelk, Saulo Vallory, Wagner
B. Soares, Artur Tchernychev, Valentina De Rosa, Jason Wong
(http://carrot.org/), Christoph, Daniel Esteban, strftime, Mick@el, rezna,
Simon Willison (http://simonwillison.net), Anton Ongson, Gabriel Paderni,
Marco van Oort, penutbutterjelly, Philipp Lenssen, Bjorn Roesbeke
(http://www.bjornroesbeke.be/), Bug?, Eric Nagel, Tomasz Wesolowski,
Evertjan Garretsen, Bobby Drake, Blues (http://tech.bluesmoon.info/), Luke
Godfrey, Pul, uestla, Alan C, Ulrich, Rafal Kukawski, Yves Sucaet,
sowberry, Norman "zEh" Fuchs, hitwork, Zahlii, johnrembo, Nick Callen,
Steven Levithan (stevenlevithan.com), ejsanders, Scott Baker, Brian Tafoya
(http://www.premasolutions.com/), Philippe Jausions
(http://pear.php.net/user/jausions), Aidan Lister
(http://aidanlister.com/), Rob, e-mike, HKM, ChaosNo1, metjay, strcasecmp,
strcmp, Taras Bogach, jpfle, Alexander Ermolaev
(http://snippets.dzone.com/user/AlexanderErmolaev), DxGx, kilops, Orlando,
dptr1988, Le Torbi, James (http://www.james-bell.co.uk/), Pedro Tainha
(http://www.pedrotainha.com), James, Arnout Kazemier
(http://www.3rd-Eden.com), Chris McMacken, gabriel paderni, Yannoo,
FGFEmperor, baris ozdil, Tod Gentille, Greg Frazier, jakes, 3D-GRAF, Allan
Jensen (http://www.winternet.no), Howard Yeend, Benjamin Lupton, davook,
daniel airton wermann (http://wermann.com.br), Atli T¨®r, Maximusya, Ryan
W Tenney (http://ryan.10e.us), Alexander M Beedie, fearphage
(http://http/my.opera.com/fearphage/), Nathan Sepulveda, Victor, Matteo,
Billy, stensi, Cord, Manish, T.J. Leahy, Riddler
(http://www.frontierwebdev.com/), Rafa? Kukawski, FremyCompany, Matt
Bradley, Tim de Koning, Luis Salazar (http://www.freaky-media.com/), Diogo
Resende, Rival, Andrej Pavlovic, Garagoth, Le Torbi
(http://www.letorbi.de/), Dino, Josep Sanz (http://www.ws3.es/), rem,
Russell Walker (http://www.nbill.co.uk/), Jamie Beck
(http://www.terabit.ca/), setcookie, Michael, YUI Library:
http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html, Blues at
http://hacks.bluesmoon.info/strftime/strftime.js, Ben
(http://benblume.co.uk/), DtTvB
(http://dt.in.th/2008-09-16.string-length-in-bytes.html), Andreas, William,
meo, incidence, Cagri Ekin, Amirouche, Amir Habibi
(http://www.residence-mixte.com/), Luke Smith (http://lucassmith.name),
Kheang Hok Chin (http://www.distantia.ca/), Jay Klehr, Lorenzo Pisani,
Tony, Yen-Wei Liu, Greenseed, mk.keck, Leslie Hoare, dude, booeyOH, Ben
Bryan

Licensed under the MIT (MIT-LICENSE.txt) license.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES
OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/

/**
@license
tween.js - https://github.com/sole/tween.js

Copyright (c) 2010-2012 Tween.js authors.

Easing equations Copyright (c) 2001 Robert Penner http://robertpenner.com/easing/

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/**
  @license
  fontmetrics.js - https://github.com/Pomax/fontmetrics.js

  Copyright (C) 2011 by Mike "Pomax" Kamermans

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
**/

/**
@license
topojson - https://github.com/mbostock/topojson

Copyright (c) 2012, Michael Bostock
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* The name Michael Bostock may not be used to endorse or promote products
  derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 * Copyright (c) 2011 NVIDIA Corporation. All rights reserved.
 *
 * TO  THE MAXIMUM  EXTENT PERMITTED  BY APPLICABLE  LAW, THIS SOFTWARE  IS PROVIDED
 * *AS IS*  AND NVIDIA AND  ITS SUPPLIERS DISCLAIM  ALL WARRANTIES,  EITHER  EXPRESS
 * OR IMPLIED, INCLUDING, BUT NOT LIMITED  TO, NONINFRINGEMENT,IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL  NVIDIA 
 * OR ITS SUPPLIERS BE  LIABLE  FOR  ANY  DIRECT, SPECIAL,  INCIDENTAL,  INDIRECT,  OR  
 * CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION,  DAMAGES FOR LOSS 
 * OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY 
 * OTHER PECUNIARY LOSS) ARISING OUT OF THE  USE OF OR INABILITY  TO USE THIS SOFTWARE, 
 * EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 */

/**
 * @license
 * Copyright (c) 2000-2005, Sean O'Neil (s_p_oneil@hotmail.com)
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * * Neither the name of the project nor the names of its contributors may be
 *   used to endorse or promote products derived from this software without
 *   specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Modifications made by Analytical Graphics, Inc.
 */

/**
 * @license
 * Knockout JavaScript library v3.1.0
 * (c) Steven Sanderson - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

/**
 * @license
 * Knockout ES5 plugin - https://github.com/SteveSanderson/knockout-es5
 * Copyright (c) Steve Sanderson
 * MIT license
 */

!function(){var e,t,r;!function(i){function n(e,t){return C.call(e,t)}function o(e,t){var r,i,n,o,a,s,l,u,c,h,d=t&&t.split("/"),m=_.map,p=m&&m["*"]||{};if(e&&"."===e.charAt(0))if(t){for(d=d.slice(0,d.length-1),e=d.concat(e.split("/")),u=0;u<e.length;u+=1)if(h=e[u],"."===h)e.splice(u,1),u-=1;else if(".."===h){if(1===u&&(".."===e[2]||".."===e[0]))break;u>0&&(e.splice(u-1,2),u-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((d||p)&&m){for(r=e.split("/"),u=r.length;u>0;u-=1){if(i=r.slice(0,u).join("/"),d)for(c=d.length;c>0;c-=1)if(n=m[d.slice(0,c).join("/")],n&&(n=n[i])){o=n,a=u;break}if(o)break;!s&&p&&p[i]&&(s=p[i],l=u)}!o&&s&&(o=s,a=l),o&&(r.splice(0,a,o),e=r.join("/"))}return e}function a(e,t){return function(){return m.apply(i,w.call(arguments,0).concat([e,t]))}}function s(e){return function(t){return o(t,e)}}function l(e){return function(t){v[e]=t}}function u(e){if(n(g,e)){var t=g[e];delete g[e],y[e]=!0,d.apply(i,t)}if(!n(v,e)&&!n(y,e))throw new Error("No "+e);return v[e]}function c(e){var t,r=e?e.indexOf("!"):-1;return r>-1&&(t=e.substring(0,r),e=e.substring(r+1,e.length)),[t,e]}function h(e){return function(){return _&&_.config&&_.config[e]||{}}}var d,m,p,f,v={},g={},_={},y={},C=Object.prototype.hasOwnProperty,w=[].slice;p=function(e,t){var r,i=c(e),n=i[0];return e=i[1],n&&(n=o(n,t),r=u(n)),n?e=r&&r.normalize?r.normalize(e,s(t)):o(e,t):(e=o(e,t),i=c(e),n=i[0],e=i[1],n&&(r=u(n))),{f:n?n+"!"+e:e,n:e,pr:n,p:r}},f={require:function(e){return a(e)},exports:function(e){var t=v[e];return"undefined"!=typeof t?t:v[e]={}},module:function(e){return{id:e,uri:"",exports:v[e],config:h(e)}}},d=function(e,t,r,o){var s,c,h,d,m,_,C=[];if(o=o||e,"function"==typeof r){for(t=!t.length&&r.length?["require","exports","module"]:t,m=0;m<t.length;m+=1)if(d=p(t[m],o),c=d.f,"require"===c)C[m]=f.require(e);else if("exports"===c)C[m]=f.exports(e),_=!0;else if("module"===c)s=C[m]=f.module(e);else if(n(v,c)||n(g,c)||n(y,c))C[m]=u(c);else{if(!d.p)throw new Error(e+" missing "+c);d.p.load(d.n,a(o,!0),l(c),{}),C[m]=v[c]}h=r.apply(v[e],C),e&&(s&&s.exports!==i&&s.exports!==v[e]?v[e]=s.exports:h===i&&_||(v[e]=h))}else e&&(v[e]=r)},e=t=m=function(e,t,r,n,o){return"string"==typeof e?f[e]?f[e](t):u(p(e,t).f):(e.splice||(_=e,t.splice?(e=t,t=r,r=null):e=i),t=t||function(){},"function"==typeof r&&(r=n,n=o),n?d(i,e,t,r):setTimeout(function(){d(i,e,t,r)},4),m)},m.config=function(e){return _=e,_.deps&&m(_.deps,_.callback),m},e._defined=v,r=function(e,t,r){t.splice||(r=t,t=[]),n(v,e)||n(g,e)||(g[e]=[e,t,r])},r.amd={jQuery:!0}}(),function(e){"use strict";e("ThirdParty/when",[],function(){function e(e,r,i,n){return t(e).then(r,i,n)}function t(e){var t,r;return e instanceof i?t=e:s(e)?(r=a(),e.then(function(e){r.resolve(e)},function(e){r.reject(e)},function(e){r.progress(e)}),t=r.promise):t=n(e),t}function r(t){return e(t,o)}function i(e){this.then=e}function n(e){var r=new i(function(r){try{return t(r?r(e):e)}catch(i){return o(i)}});return r}function o(e){var r=new i(function(r,i){try{return i?t(i(e)):o(e)}catch(n){return o(n)}});return r}function a(){function e(e,t,r){return d(e,t,r)}function r(e){return p(e)}function n(e){return p(o(e))}function s(e){return m(e)}var l,u,c,h,d,m,p;return u=new i(e),l={then:e,resolve:r,reject:n,progress:s,promise:u,resolver:{resolve:r,reject:n,progress:s}},c=[],h=[],d=function(e,t,r){var i,n;return i=a(),n="function"==typeof r?function(e){try{i.progress(r(e))}catch(t){i.progress(t)}}:function(e){i.progress(e)},c.push(function(r){r.then(e,t).then(i.resolve,i.reject,n)}),h.push(n),i.promise},m=function(e){return f(h,e),e},p=function(e){return e=t(e),d=e.then,p=t,m=g,f(c,e),h=c=w,e},l}function s(e){return e&&"function"==typeof e.then}function l(t,r,i,n,o){return v(2,arguments),e(t,function(t){function s(e){f(e)}function l(e){p(e)}var u,c,h,d,m,p,f,v,_,y;if(_=t.length>>>0,u=Math.max(0,Math.min(r,_)),h=[],c=_-u+1,d=[],m=a(),u)for(v=m.progress,f=function(e){d.push(e),--c||(p=f=g,m.reject(d))},p=function(e){h.push(e),--u||(p=f=g,m.resolve(h))},y=0;_>y;++y)y in t&&e(t[y],l,s,v);else m.resolve(h);return m.then(i,n,o)})}function u(e,t,r,i){function n(e){return t?t(e[0]):e[0]}return l(e,1,n,r,i)}function c(e,t,r,i){return v(1,arguments),d(e,_).then(t,r,i)}function h(){return d(arguments,_)}function d(t,r){return e(t,function(t){var i,n,o,s,l,u;if(o=n=t.length>>>0,i=[],u=a(),o)for(s=function(t,n){e(t,r).then(function(e){i[n]=e,--o||u.resolve(i)},u.reject)},l=0;n>l;l++)l in t?s(t[l],l):--o;else u.resolve(i);return u.promise})}function m(t,r){var i=C.call(arguments,1);return e(t,function(t){var n;return n=t.length,i[0]=function(t,i,o){return e(t,function(t){return e(i,function(e){return r(t,e,o,n)})})},y.apply(t,i)})}function p(t,r,i){var n=arguments.length>2;return e(t,function(e){return e=n?i:e,r.resolve(e),e},function(e){return r.reject(e),o(e)},r.progress)}function f(e,t){for(var r,i=0;r=e[i++];)r(t)}function v(e,t){for(var r,i=t.length;i>e;)if(r=t[--i],null!=r&&"function"!=typeof r)throw new Error("arg "+i+" must be a function")}function g(){}function _(e){return e}var y,C,w;return e.defer=a,e.resolve=t,e.reject=r,e.join=h,e.all=c,e.map=d,e.reduce=m,e.any=u,e.some=l,e.chain=p,e.isPromise=s,i.prototype={always:function(e,t){return this.then(e,e,t)},otherwise:function(e){return this.then(w,e)},yield:function(e){return this.then(function(){return e})},spread:function(e){return this.then(function(t){return c(t,function(t){return e.apply(w,t)})})}},C=[].slice,y=[].reduce||function(e){var t,r,i,n,o;if(o=0,t=Object(this),n=t.length>>>0,r=arguments,r.length<=1)for(;;){if(o in t){i=t[o++];break}if(++o>=n)throw new TypeError}else i=r[1];for(;n>o;++o)o in t&&(i=e(i,t[o],o,t));return i},e})}("function"==typeof r&&r.amd?r:function(e){"object"==typeof exports?module.exports=e():this.when=e()}),r("Core/defined",[],function(){"use strict";var e=function(e){return void 0!==e};return e}),r("Core/defineProperties",["./defined"],function(e){"use strict";var t=function(){try{return"x"in Object.defineProperty({},"x",{})}catch(e){return!1}}(),r=Object.defineProperties;return t&&e(r)||(r=function(e){return e}),r}),r("Core/DeveloperError",["./defined"],function(e){"use strict";var t=function(e){this.name="DeveloperError",this.message=e;var t;try{throw new Error}catch(r){t=r.stack}this.stack=t};return t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t.throwInstantiationError=function(){throw new t("This function defines an interface and should not be called directly.")},t}),r("Core/Credit",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i){var n=e(i),o=e(r),a=e(t);a||o||(t=i),this._text=t,this._imageUrl=r,this._link=i,this._hasLink=n,this._hasImage=o};return t(r.prototype,{text:{get:function(){return this._text}},imageUrl:{get:function(){return this._imageUrl}},link:{get:function(){return this._link}}}),r.prototype.hasImage=function(){return this._hasImage},r.prototype.hasLink=function(){return this._hasLink},r.equals=function(t,r){var i=!e(t),n=!e(r);return t===r||(i&&n||!i&&!n)&&t._text===r._text&&t._imageUrl===r._imageUrl&&t._link===r._link},r.prototype.equals=function(e){return r.equals(this,e)},r}),r("Core/freezeObject",["./defined"],function(e){"use strict";var t=Object.freeze;return e(t)||(t=function(e){return e}),t}),r("Core/defaultValue",["./freezeObject"],function(e){"use strict";var t=function(e,t){return void 0!==e?e:t};return t.EMPTY_OBJECT=e({}),t}),r("ThirdParty/mersenne-twister",[],function(){var e=function(e){void 0==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};return e.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++){var e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0}},e.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var r;for(this.mti==this.N+1&&this.init_genrand(5489),r=0;r<this.N-this.M;r++)e=this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK,this.mt[r]=this.mt[r+this.M]^e>>>1^t[1&e];for(;r<this.N-1;r++)e=this.mt[r]&this.UPPER_MASK|this.mt[r+1]&this.LOWER_MASK,this.mt[r]=this.mt[r+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=2636928640&e<<7,e^=4022730752&e<<15,e^=e>>>18,e>>>0},e.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},e}),r("Core/Math",["../ThirdParty/mersenne-twister","./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r={};r.EPSILON1=.1,r.EPSILON2=.01,r.EPSILON3=.001,r.EPSILON4=1e-4,r.EPSILON5=1e-5,r.EPSILON6=1e-6,r.EPSILON7=1e-7,r.EPSILON8=1e-8,r.EPSILON9=1e-9,r.EPSILON10=1e-10,r.EPSILON11=1e-11,r.EPSILON12=1e-12,r.EPSILON13=1e-13,r.EPSILON14=1e-14,r.EPSILON15=1e-15,r.EPSILON16=1e-16,r.EPSILON17=1e-17,r.EPSILON18=1e-18,r.EPSILON19=1e-19,r.EPSILON20=1e-20,r.GRAVITATIONALPARAMETER=3986004418e5,r.SOLAR_RADIUS=6955e5,r.LUNAR_RADIUS=1737400,r.SIXTY_FOUR_KILOBYTES=65536,r.sign=function(e){return e>0?1:0>e?-1:0},r.signNotZero=function(e){return 0>e?-1:1},r.toSNorm=function(e){return Math.round(255*(.5*r.clamp(e,-1,1)+.5))},r.fromSNorm=function(e){return 2*(r.clamp(e,0,255)/255)-1},r.sinh=function(e){var t=Math.pow(Math.E,e),r=Math.pow(Math.E,-1*e);return.5*(t-r)},r.cosh=function(e){var t=Math.pow(Math.E,e),r=Math.pow(Math.E,-1*e);return.5*(t+r)},r.lerp=function(e,t,r){return(1-r)*e+r*t},r.PI=Math.PI,r.ONE_OVER_PI=1/Math.PI,r.PI_OVER_TWO=.5*Math.PI,r.PI_OVER_THREE=Math.PI/3,r.PI_OVER_FOUR=Math.PI/4,r.PI_OVER_SIX=Math.PI/6,r.THREE_PI_OVER_TWO=.5*3*Math.PI,r.TWO_PI=2*Math.PI,r.ONE_OVER_TWO_PI=1/(2*Math.PI),r.RADIANS_PER_DEGREE=Math.PI/180,r.DEGREES_PER_RADIAN=180/Math.PI,r.RADIANS_PER_ARCSECOND=r.RADIANS_PER_DEGREE/3600,r.toRadians=function(e){return e*r.RADIANS_PER_DEGREE},r.toDegrees=function(e){return e*r.DEGREES_PER_RADIAN},r.convertLongitudeRange=function(e){var t=r.TWO_PI,i=e-Math.floor(e/t)*t;return i<-Math.PI?i+t:i>=Math.PI?i-t:i},r.negativePiToPi=function(e){for(var t=r.EPSILON10,i=r.PI,n=r.TWO_PI;-(i+t)>e;)e+=n;if(-i>e)return-i;for(;e>i+t;)e-=n;return e>i?i:e},r.zeroToTwoPi=function(e){var t=e%r.TWO_PI;return 0>t?(t+r.TWO_PI)%r.TWO_PI:t},r.equalsEpsilon=function(e,r,i){return i=t(i,0),Math.abs(e-r)<=i};var i=[1];r.factorial=function(e){var t=i.length;if(e>=t)for(var r=i[t-1],n=t;e>=n;n++)i.push(r*n);return i[e]},r.incrementWrap=function(e,r,i){return i=t(i,0),++e,e>r&&(e=i),e},r.isPowerOfTwo=function(e){return 0!==e&&0===(e&e-1)},r.nextPowerOfTwo=function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e,e},r.clamp=function(e,t,r){return t>e?t:e>r?r:e};var n=new e;return r.setRandomNumberSeed=function(t){n=new e(t)},r.nextRandomNumber=function(){return n.random()},r.acosClamped=function(e){return Math.acos(r.clamp(e,-1,1))},r.asinClamped=function(e){return Math.asin(r.clamp(e,-1,1))},r}),r("Core/Cartesian3",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r,i){this.x=e(t,0),this.y=e(r,0),this.z=e(i,0)};o.fromSpherical=function(r,i){t(i)||(i=new o);var n=r.clock,a=r.cone,s=e(r.magnitude,1),l=s*Math.sin(a);return i.x=l*Math.cos(n),i.y=l*Math.sin(n),i.z=s*Math.cos(a),i},o.fromElements=function(e,r,i,n){return t(n)?(n.x=e,n.y=r,n.z=i,n):new o(e,r,i)},o.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r.z=e.z,r):new o(e.x,e.y,e.z):void 0},o.fromCartesian4=o.clone,o.packedLength=3,o.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i++]=t.y,r[i]=t.z},o.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new o),n.x=r[i++],n.y=r[i++],n.z=r[i],n},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y,e.z)},o.minimumComponent=function(e){return Math.min(e.x,e.y,e.z)},o.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r.z=Math.min(e.z,t.z),r},o.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r.z=Math.max(e.z,t.z),r},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var a=new o;o.distance=function(e,t){return o.subtract(e,t,a),o.magnitude(a)},o.normalize=function(e,t){var r=o.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t.z=e.z/r,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},o.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r},o.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r},o.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r},o.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r},o.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t};var s=new o;o.lerp=function(e,t,r,i){return o.multiplyByScalar(t,r,s),i=o.multiplyByScalar(e,1-r,i),o.add(s,i,i)};var l=new o,u=new o;o.angleBetween=function(e,t){o.normalize(e,l),o.normalize(t,u);var r=o.dot(l,u),i=o.magnitude(o.cross(l,u,l));return Math.atan2(i,r)};var c=new o;o.mostOrthogonalAxis=function(e,t){var r=o.normalize(e,c);return o.abs(r,r),t=r.x<=r.y?r.x<=r.z?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Z,t):r.y<=r.z?o.clone(o.UNIT_Y,t):o.clone(o.UNIT_Z,t)},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y&&e.z===r.z},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i&&Math.abs(e.z-r.z)<=i},o.cross=function(e,t,r){var i=e.x,n=e.y,o=e.z,a=t.x,s=t.y,l=t.z,u=n*l-o*s,c=o*a-i*l,h=i*s-n*a;return r.x=u,r.y=c,r.z=h,r},o.fromDegrees=function(e,t,r,i,a){var s=n.toRadians(e),l=n.toRadians(t);return o.fromRadians(s,l,r,i,a)};var h=new o,d=new o,m=new o(40680631590769,40680631590769,40408299984661.445);return o.fromRadians=function(r,i,n,a,s){n=e(n,0);var l=t(a)?a.radiiSquared:m,u=Math.cos(i);h.x=u*Math.cos(r),h.y=u*Math.sin(r),h.z=Math.sin(i),h=o.normalize(h,h),o.multiplyComponents(l,h,d);var c=Math.sqrt(o.dot(h,d));return d=o.divideByScalar(d,c,d),h=o.multiplyByScalar(h,n,h),t(s)||(s=new o),o.add(d,h,s)},o.fromDegreesArray=function(e,t,r){for(var i=new Array(e.length),a=0;a<e.length;a++)i[a]=n.toRadians(e[a]);return o.fromRadiansArray(i,t,r)},o.fromRadiansArray=function(e,r,i){var n=e.length;t(i)?i.length=n/2:i=new Array(n/2);for(var a=0;n>a;a+=2){var s=e[a],l=e[a+1];i[a/2]=o.fromRadians(s,l,0,r,i[a/2])}return i},o.fromDegreesArrayHeights=function(e,t,r){for(var i=new Array(e.length),a=0;a<e.length;a+=3)i[a]=n.toRadians(e[a]),i[a+1]=n.toRadians(e[a+1]),i[a+2]=e[a+2];return o.fromRadiansArrayHeights(i,t,r)},o.fromRadiansArrayHeights=function(e,r,i){var n=e.length;t(i)?i.length=n/3:i=new Array(n/3);for(var a=0;n>a;a+=3){var s=e[a],l=e[a+1],u=e[a+2];i[a/3]=o.fromRadians(s,l,u,r,i[a/3])}return i},o.ZERO=i(new o(0,0,0)),o.UNIT_X=i(new o(1,0,0)),o.UNIT_Y=i(new o(0,1,0)),o.UNIT_Z=i(new o(0,0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},o}),r("Core/Cartographic",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r,i){this.longitude=e(t,0),this.latitude=e(r,0),this.height=e(i,0)};return o.fromRadians=function(r,i,n,a){return n=e(n,0),t(a)?(a.longitude=r,a.latitude=i,a.height=n,a):new o(r,i,n)},o.fromDegrees=function(e,t,r,i){return e=n.toRadians(e),t=n.toRadians(t),o.fromRadians(e,t,r,i)},o.clone=function(e,r){return t(e)?t(r)?(r.longitude=e.longitude,r.latitude=e.latitude,r.height=e.height,r):new o(e.longitude,e.latitude,e.height):void 0},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.longitude===r.longitude&&e.latitude===r.latitude&&e.height===r.height},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.longitude-r.longitude)<=i&&Math.abs(e.latitude-r.latitude)<=i&&Math.abs(e.height-r.height)<=i},o.ZERO=i(new o(0,0,0)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.longitude+", "+this.latitude+", "+this.height+")"},o}),r("Core/Ellipsoid",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n,o,a,s){"use strict";function l(t,i,n,o){i=r(i,0),n=r(n,0),o=r(o,0),t._radii=new e(i,n,o),t._radiiSquared=new e(i*i,n*n,o*o),t._radiiToTheFourth=new e(i*i*i*i,n*n*n*n,o*o*o*o),t._oneOverRadii=new e(0===i?0:1/i,0===n?0:1/n,0===o?0:1/o),t._oneOverRadiiSquared=new e(0===i?0:1/(i*i),0===n?0:1/(n*n),0===o?0:1/(o*o)),t._minimumRadius=Math.min(i,n,o),t._maximumRadius=Math.max(i,n,o),t._centerToleranceSquared=s.EPSILON1}var u=function(e,t,r){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,l(this,e,t,r)};n(u.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),u.clone=function(t,r){if(!i(t))return void 0;var n=t._radii;return i(r)?(e.clone(n,r._radii),e.clone(t._radiiSquared,r._radiiSquared),e.clone(t._radiiToTheFourth,r._radiiToTheFourth),e.clone(t._oneOverRadii,r._oneOverRadii),e.clone(t._oneOverRadiiSquared,r._oneOverRadiiSquared),r._minimumRadius=t._minimumRadius,r._maximumRadius=t._maximumRadius,r._centerToleranceSquared=t._centerToleranceSquared,r):new u(n.x,n.y,n.z)},u.fromCartesian3=function(e,t){return i(t)||(t=new u),i(e)?(l(t,e.x,e.y,e.z),t):t},u.WGS84=a(new u(6378137,6378137,6356752.314245179)),u.UNIT_SPHERE=a(new u(1,1,1)),u.MOON=a(new u(s.LUNAR_RADIUS,s.LUNAR_RADIUS,s.LUNAR_RADIUS)),u.prototype.clone=function(e){return u.clone(this,e)},u.prototype.geocentricSurfaceNormal=e.normalize,u.prototype.geodeticSurfaceNormalCartographic=function(t,r){var n=t.longitude,o=t.latitude,a=Math.cos(o),s=a*Math.cos(n),l=a*Math.sin(n),u=Math.sin(o);return i(r)||(r=new e),r.x=s,r.y=l,r.z=u,e.normalize(r,r)},u.prototype.geodeticSurfaceNormal=function(t,r){return i(r)||(r=new e),r=e.multiplyComponents(t,this._oneOverRadiiSquared,r),e.normalize(r,r)};var c=new e,h=new e;u.prototype.cartographicToCartesian=function(t,r){var n=c,o=h;this.geodeticSurfaceNormalCartographic(t,n),e.multiplyComponents(this._radiiSquared,n,o);var a=Math.sqrt(e.dot(n,o));return e.divideByScalar(o,a,o),e.multiplyByScalar(n,t.height,n),i(r)||(r=new e),e.add(o,n,r)},u.prototype.cartographicArrayToCartesianArray=function(e,t){var r=e.length;i(t)?t.length=r:t=new Array(r);for(var n=0;r>n;n++)t[n]=this.cartographicToCartesian(e[n],t[n]);return t};var d=new e,m=new e,p=new e;u.prototype.cartesianToCartographic=function(r,n){var o=this.scaleToGeodeticSurface(r,m);if(!i(o))return void 0;var a=this.geodeticSurfaceNormal(o,d),l=e.subtract(r,o,p),u=Math.atan2(a.y,a.x),c=Math.asin(a.z),h=s.sign(e.dot(l,r))*e.magnitude(l);return i(n)?(n.longitude=u,n.latitude=c,n.height=h,n):new t(u,c,h)},u.prototype.cartesianArrayToCartographicArray=function(e,t){var r=e.length;i(t)?t.length=r:t=new Array(r);for(var n=0;r>n;++n)t[n]=this.cartesianToCartographic(e[n],t[n]);return t};var f=new e,v=new e;return u.prototype.scaleToGeodeticSurface=function(t,r){var n=t.x,o=t.y,a=t.z,l=this._oneOverRadii,u=l.x,c=l.y,h=l.z,d=n*n*u*u,m=o*o*c*c,p=a*a*h*h,g=d+m+p,_=Math.sqrt(1/g),y=e.multiplyByScalar(t,_,f);if(g<this._centerToleranceSquared)return isFinite(_)?e.clone(y,r):void 0;var C=this._oneOverRadiiSquared,w=C.x,S=C.y,E=C.z,b=v;b.x=2*y.x*w,b.y=2*y.y*S,b.z=2*y.z*E;var T,x,P,A,M,D,I,R,O,L,N,B=(1-_)*e.magnitude(t)/(.5*e.magnitude(b)),F=0;do{B-=F,P=1/(1+B*w),A=1/(1+B*S),M=1/(1+B*E),D=P*P,I=A*A,R=M*M,O=D*P,L=I*A,N=R*M,T=d*D+m*I+p*R-1,x=d*O*w+m*L*S+p*N*E;var z=-2*x;F=T/z}while(Math.abs(T)>s.EPSILON12);return i(r)?(r.x=n*P,r.y=o*A,r.z=a*M,r):new e(n*P,o*A,a*M)},u.prototype.scaleToGeocentricSurface=function(t,r){i(r)||(r=new e);var n=t.x,o=t.y,a=t.z,s=this._oneOverRadiiSquared,l=1/Math.sqrt(n*n*s.x+o*o*s.y+a*a*s.z);return e.multiplyByScalar(t,l,r)},u.prototype.transformPositionToScaledSpace=function(t,r){return i(r)||(r=new e),e.multiplyComponents(t,this._oneOverRadii,r)},u.prototype.transformPositionFromScaledSpace=function(t,r){return i(r)||(r=new e),e.multiplyComponents(t,this._radii,r)},u.prototype.equals=function(t){return this===t||i(t)&&e.equals(this._radii,t._radii)},u.prototype.toString=function(){return this._radii.toString()},u}),r("Core/Event",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){this._listeners=[],this._scopes=[],this._toRemove=[],this._insideRaiseEvent=!1};return t(r.prototype,{numberOfListeners:{get:function(){return this._listeners.length-this._toRemove.length}}}),r.prototype.addEventListener=function(e,t){this._listeners.push(e),this._scopes.push(t);var r=this;return function(){r.removeEventListener(e,t)}},r.prototype.removeEventListener=function(e,t){for(var r=this._listeners,i=this._scopes,n=-1,o=0;o<r.length;o++)if(r[o]===e&&i[o]===t){n=o;break}return-1!==n?(this._insideRaiseEvent?(this._toRemove.push(n),r[n]=void 0,i[n]=void 0):(r.splice(n,1),i.splice(n,1)),!0):!1},r.prototype.raiseEvent=function(){this._insideRaiseEvent=!0;var t,r=this._listeners,i=this._scopes,n=r.length;for(t=0;n>t;t++){var o=r[t];e(o)&&r[t].apply(i[t],arguments)}var a=this._toRemove;for(n=a.length,t=0;n>t;t++){var s=a[t];r.splice(s,1),i.splice(s,1)}a.length=0,this._insideRaiseEvent=!1},r}),r("Core/Cartesian2",["./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n){"use strict";var o=function(t,r){this.x=e(t,0),this.y=e(r,0)};o.fromElements=function(e,r,i){return t(i)?(i.x=e,i.y=r,i):new o(e,r)},o.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r):new o(e.x,e.y):void 0},o.fromCartesian3=o.clone,o.fromCartesian4=o.clone,o.packedLength=2,o.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i]=t.y},o.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new o),n.x=r[i++],n.y=r[i],n},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y)},o.minimumComponent=function(e){return Math.min(e.x,e.y)},o.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r},o.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var a=new o;o.distance=function(e,t){return o.subtract(e,t,a),o.magnitude(a)},o.normalize=function(e,t){var r=o.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y},o.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r},o.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r},o.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r},o.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r},o.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t};var s=new o;o.lerp=function(e,t,r,i){return o.multiplyByScalar(t,r,s),i=o.multiplyByScalar(e,1-r,i),o.add(s,i,i)};var l=new o,u=new o;o.angleBetween=function(e,t){return o.normalize(e,l),o.normalize(t,u),n.acosClamped(o.dot(l,u))};var c=new o;return o.mostOrthogonalAxis=function(e,t){var r=o.normalize(e,c);return o.abs(r,r),t=r.x<=r.y?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Y,t)},o.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y},o.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i},o.ZERO=i(new o(0,0)),o.UNIT_X=i(new o(1,0)),o.UNIT_Y=i(new o(0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this.x+", "+this.y+")"},o}),r("Core/GeographicProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){this._ellipsoid=r(e,a.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis};return n(s.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),s.prototype.project=function(t,r){var n=this._semimajorAxis,o=t.longitude*n,a=t.latitude*n,s=t.height;return i(r)?(r.x=o,r.y=a,r.z=s,r):new e(o,a,s)},s.prototype.unproject=function(e,r){var n=this._oneOverSemimajorAxis,o=e.x*n,a=e.y*n,s=e.z;return i(r)?(r.longitude=o,r.latitude=a,r.height=s,r):new t(o,a,s)},s}),r("Core/Rectangle",["./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./freezeObject","./Math"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,r,i,n){this.west=t(e,0),this.south=t(r,0),this.east=t(i,0),this.north=t(n,0)};s.fromDegrees=function(e,i,n,o,l){return e=a.toRadians(t(e,0)),i=a.toRadians(t(i,0)),n=a.toRadians(t(n,0)),o=a.toRadians(t(o,0)),r(l)?(l.west=e,l.south=i,l.east=n,l.north=o,l):new s(e,i,n,o)},s.fromCartographicArray=function(e,t){for(var i=Number.MAX_VALUE,n=-Number.MAX_VALUE,o=Number.MAX_VALUE,a=-Number.MAX_VALUE,l=0,u=e.length;u>l;l++){var c=e[l];i=Math.min(i,c.longitude),n=Math.max(n,c.longitude),o=Math.min(o,c.latitude),a=Math.max(a,c.latitude)}return r(t)?(t.west=i,t.south=o,t.east=n,t.north=a,t):new s(i,o,n,a)},s.packedLength=4,s.pack=function(e,r,i){i=t(i,0),r[i++]=e.west,r[i++]=e.south,r[i++]=e.east,r[i]=e.north},s.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new s),n.west=e[i++],n.south=e[i++],n.east=e[i++],n.north=e[i],n},s.clone=function(e,t){return r(e)?r(t)?(t.west=e.west,t.south=e.south,t.east=e.east,t.north=e.north,t):new s(e.west,e.south,e.east,e.north):void 0},s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.equals=function(e,t){return e===t||r(e)&&r(t)&&e.west===t.west&&e.south===t.south&&e.east===t.east&&e.north===t.north},s.prototype.equalsEpsilon=function(e,t){return r(e)&&Math.abs(this.west-e.west)<=t&&Math.abs(this.south-e.south)<=t&&Math.abs(this.east-e.east)<=t&&Math.abs(this.north-e.north)<=t},s.validate=function(){},s.southwest=function(t,i){return r(i)?(i.longitude=t.west,i.latitude=t.south,i.height=0,i):new e(t.west,t.south)},s.northwest=function(t,i){return r(i)?(i.longitude=t.west,i.latitude=t.north,i.height=0,i):new e(t.west,t.north)},s.northeast=function(t,i){return r(i)?(i.longitude=t.east,i.latitude=t.north,i.height=0,i):new e(t.east,t.north)},s.southeast=function(t,i){return r(i)?(i.longitude=t.east,i.latitude=t.south,i.height=0,i):new e(t.east,t.south)},s.center=function(t,i){var n=t.east,o=t.west,s=.5*(o+n);return o>n&&(s=a.negativePiToPi(s+a.PI)),r(i)?(i.longitude=s,i.latitude=.5*(t.south+t.north),i.height=0,i):new e(s,.5*(t.south+t.north))},s.intersectWith=function(e,t,i){var n=Math.max(e.west,t.west),o=Math.max(e.south,t.south),a=Math.min(e.east,t.east),l=Math.min(e.north,t.north);return r(i)?(i.west=n,i.south=o,i.east=a,i.north=l,i):new s(n,o,a,l)},s.contains=function(e,t){return t.longitude>=e.west&&t.longitude<=e.east&&t.latitude>=e.south&&t.latitude<=e.north},s.isEmpty=function(e){return e.west>=e.east||e.south>=e.north};var l=new e;return s.subsample=function(e,i,o,s){i=t(i,n.WGS84),o=t(o,0),r(s)||(s=[]);var u=0,c=e.north,h=e.south,d=e.east,m=e.west,p=l;p.height=o,p.longitude=m,p.latitude=c,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=d,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.latitude=h,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=m,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.latitude=0>c?c:h>0?h:0;for(var f=1;8>f;++f){var v=-Math.PI+f*a.PI_OVER_TWO;v>m&&d>v&&(p.longitude=v,s[u]=i.cartographicToCartesian(p,s[u]),u++)}return 0===p.latitude&&(p.longitude=m,s[u]=i.cartographicToCartesian(p,s[u]),u++,p.longitude=d,s[u]=i.cartographicToCartesian(p,s[u]),u++),s.length=u,s},s.MAX_VALUE=o(new s(-Math.PI,-a.PI_OVER_TWO,Math.PI,a.PI_OVER_TWO)),s}),r("Core/GeographicTilingScheme",["./Cartesian2","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./GeographicProjection","./Math","./Rectangle"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(e){e=t(e,{}),this._ellipsoid=t(e.ellipsoid,o.WGS84),this._rectangle=t(e.rectangle,l.MAX_VALUE),this._projection=new a(this._ellipsoid),this._numberOfLevelZeroTilesX=t(e.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=t(e.numberOfLevelZeroTilesY,1)};return i(u.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),u.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},u.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},u.prototype.rectangleToNativeRectangle=function(e,t){var i=s.toDegrees(e.west),n=s.toDegrees(e.south),o=s.toDegrees(e.east),a=s.toDegrees(e.north);return r(t)?(t.west=i,t.south=n,t.east=o,t.north=a,t):new l(i,n,o,a)},u.prototype.tileXYToNativeRectangle=function(e,t,r,i){var n=this.tileXYToRectangle(e,t,r,i);return n.west=s.toDegrees(n.west),n.south=s.toDegrees(n.south),n.east=s.toDegrees(n.east),n.north=s.toDegrees(n.north),n},u.prototype.tileXYToRectangle=function(e,t,i,n){var o=this._rectangle,a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),u=(o.east-o.west)/a,c=e*u+o.west,h=(e+1)*u+o.west,d=(o.north-o.south)/s,m=o.north-t*d,p=o.north-(t+1)*d;return r(n)||(n=new l(c,p,h,m)),n.west=c,n.south=p,n.east=h,n.north=m,n},u.prototype.positionToTileXY=function(t,i,n){var o=this._rectangle;if(t.latitude>o.north||t.latitude<o.south||t.longitude<o.west||t.longitude>o.east)return void 0;var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=(o.east-o.west)/a,u=(o.north-o.south)/s,c=0|(t.longitude-o.west)/l;c>=a&&(c=a-1);var h=0|(o.north-t.latitude)/u;return h>=s&&(h=s-1),r(n)?(n.x=c,n.y=h,n):new e(c,h)},u}),r("Core/getImagePixels",["./defined"],function(e){"use strict";var t={},r=function(r,i,n){e(i)||(i=r.width),e(n)||(n=r.height);var o=t[i];e(o)||(o={},t[i]=o);var a=o[n];if(!e(a)){var s=document.createElement("canvas");s.width=i,s.height=n,a=s.getContext("2d"),a.globalCompositeOperation="copy",o[n]=a}return a.drawImage(r,0,0,i,n),a.getImageData(0,0,i,n).data};return r}),r("Core/HeightmapTessellator",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./freezeObject","./Math"],function(e,t,r,i,n,o,a){"use strict";var s={};return s.DEFAULT_STRUCTURE=o({heightScale:1,heightOffset:0,elementsPerHeight:1,stride:1,elementMultiplier:256,isBigEndian:!1}),s.computeVertices=function(i){var o,l,u,c,h=Math.cos,d=Math.sin,m=Math.sqrt,p=Math.atan,f=Math.exp,v=a.PI_OVER_TWO,g=a.toRadians,_=i.vertices,y=i.heightmap,C=i.width,w=i.height,S=i.skirtHeight,E=t(i.isGeographic,!0),b=t(i.ellipsoid,n.WGS84),T=1/b.maximumRadius,x=i.nativeRectangle,P=i.rectangle;r(P)?(o=P.west,l=P.south,u=P.east,c=P.north):E?(o=g(x.west),l=g(x.south),u=g(x.east),c=g(x.north)):(o=x.west*T,l=v-2*p(f(-x.south*T)),u=x.east*T,c=v-2*p(f(-x.north*T)));
var A=t(i.relativeToCenter,e.ZERO),M=t(i.structure,s.DEFAULT_STRUCTURE),D=t(M.heightScale,s.DEFAULT_STRUCTURE.heightScale),I=t(M.heightOffset,s.DEFAULT_STRUCTURE.heightOffset),R=t(M.elementsPerHeight,s.DEFAULT_STRUCTURE.elementsPerHeight),O=t(M.stride,s.DEFAULT_STRUCTURE.stride),L=t(M.elementMultiplier,s.DEFAULT_STRUCTURE.elementMultiplier),N=t(M.isBigEndian,s.DEFAULT_STRUCTURE.isBigEndian),B=(x.east-x.west)/(C-1),F=(x.north-x.south)/(w-1),z=b.radiiSquared,V=z.x,k=z.y,U=z.z,W=0,G=65536,H=-65536,q=0,j=w,Y=0,X=C;S>0&&(--q,++j,--Y,++X);for(var Z=q;j>Z;++Z){var Q=Z;0>Q&&(Q=0),Q>=w&&(Q=w-1);var J=x.north-F*Q;J=E?g(J):v-2*p(f(-J*T));for(var K=h(J),$=d(J),et=U*$,tt=(J-l)/(c-l),rt=Y;X>rt;++rt){var it=rt;0>it&&(it=0),it>=C&&(it=C-1);var nt=x.west+B*it;E?nt=g(nt):nt*=T;var ot,at=Q*C*O+it*O;if(1===R)ot=y[at];else{ot=0;var st;if(N)for(st=0;R>st;++st)ot=ot*L+y[at+st];else for(st=R-1;st>=0;--st)ot=ot*L+y[at+st]}ot=ot*D+I,H=Math.max(H,ot),G=Math.min(G,ot),(rt!==it||Z!==Q)&&(ot-=S);var lt=K*h(nt),ut=K*d(nt),ct=V*lt,ht=k*ut,dt=m(ct*lt+ht*ut+et*$),mt=1/dt,pt=ct*mt,ft=ht*mt,vt=et*mt;_[W++]=pt+lt*ot-A.x,_[W++]=ft+ut*ot-A.y,_[W++]=vt+$*ot-A.z,_[W++]=ot;var gt=(nt-o)/(u-o);_[W++]=gt,_[W++]=tt}}return{maximumHeight:H,minimumHeight:G}},s}),r("ThirdParty/Uri",[],function(){function e(t){if(t instanceof e)this.scheme=t.scheme,this.authority=t.authority,this.path=t.path,this.query=t.query,this.fragment=t.fragment;else if(t){var r=i.exec(t);this.scheme=r[1],this.authority=r[2],this.path=r[3],this.query=r[4],this.fragment=r[5]}}function t(e){var t=unescape(e);return o.test(t)?t:e.toUpperCase()}function r(e,t,r,i){return(t||"")+r.toLowerCase()+(i||"")}e.prototype.scheme=null,e.prototype.authority=null,e.prototype.path="",e.prototype.query=null,e.prototype.fragment=null;var i=new RegExp("^(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?$");e.prototype.getScheme=function(){return this.scheme},e.prototype.getAuthority=function(){return this.authority},e.prototype.getPath=function(){return this.path},e.prototype.getQuery=function(){return this.query},e.prototype.getFragment=function(){return this.fragment},e.prototype.isAbsolute=function(){return!!this.scheme&&!this.fragment},e.prototype.isSameDocumentAs=function(e){return e.scheme==this.scheme&&e.authority==this.authority&&e.path==this.path&&e.query==this.query},e.prototype.equals=function(e){return this.isSameDocumentAs(e)&&e.fragment==this.fragment},e.prototype.normalize=function(){this.removeDotSegments(),this.scheme&&(this.scheme=this.scheme.toLowerCase()),this.authority&&(this.authority=this.authority.replace(a,r).replace(n,t)),this.path&&(this.path=this.path.replace(n,t)),this.query&&(this.query=this.query.replace(n,t)),this.fragment&&(this.fragment=this.fragment.replace(n,t))};var n=/%[0-9a-z]{2}/gi,o=/[a-zA-Z0-9\-\._~]/,a=/(.*@)?([^@:]*)(:.*)?/;return e.prototype.resolve=function(t){var r=new e;return this.scheme?(r.scheme=this.scheme,r.authority=this.authority,r.path=this.path,r.query=this.query):(r.scheme=t.scheme,this.authority?(r.authority=this.authority,r.path=this.path,r.query=this.query):(r.authority=t.authority,""==this.path?(r.path=t.path,r.query=this.query||t.query):("/"==this.path.charAt(0)?(r.path=this.path,r.removeDotSegments()):(r.path=t.authority&&""==t.path?"/"+this.path:t.path.substring(0,t.path.lastIndexOf("/")+1)+this.path,r.removeDotSegments()),r.query=this.query))),r.fragment=this.fragment,r},e.prototype.removeDotSegments=function(){var e,t=this.path.split("/"),r=[],i=""==t[0];for(i&&t.shift(),""==t[0]?t.shift():null;t.length;)e=t.shift(),".."==e?r.pop():"."!=e&&r.push(e);("."==e||".."==e)&&r.push(""),i&&r.unshift(""),this.path=r.join("/")},e.prototype.toString=function(){var e="";return this.scheme&&(e+=this.scheme+":"),this.authority&&(e+="//"+this.authority),e+=this.path,this.query&&(e+="?"+this.query),this.fragment&&(e+="#"+this.fragment),e},e}),r("Core/buildModuleUrl",["../ThirdParty/Uri","./defined","./DeveloperError","require"],function(e,t,r,i){"use strict";function n(){for(var e=document.getElementsByTagName("script"),t=0,r=e.length;r>t;++t){var i=e[t].getAttribute("src"),n=h.exec(i);if(null!==n)return n[1]}return void 0}function o(){if(t(l))return l;var i;if(i="undefined"!=typeof CESIUM_BASE_URL?CESIUM_BASE_URL:n(),!t(i))throw new r("Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.");return l=new e(i).resolve(new e(document.location.href))}function a(e){return i.toUrl("../"+e)}function s(t){return new e(t).resolve(o()).toString()}var l,u,c,h=/((?:.*\/)|^)cesium[\w-]*\.js(?:\W|$)/i,d=function(e){t(u)||(u=t(i.toUrl)?a:s),t(c)||(c=document.createElement("a"));var r=u(e);return c.href=r,c.href=c.href,c.href};return d._cesiumScriptRegex=h,d}),r("Core/destroyObject",["./defaultValue","./DeveloperError"],function(e,t){"use strict";function r(){return!0}var i=function(i,n){function o(){throw new t(n)}n=e(n,"This object was destroyed, i.e., destroy() was called.");for(var a in i)"function"==typeof i[a]&&(i[a]=o);return i.isDestroyed=r,void 0};return i}),r("Core/isCrossOriginUrl",["./defined"],function(e){"use strict";var t,r=function(r){e(t)||(t=document.createElement("a")),t.href=window.location.href;var i=t.host,n=t.protocol;return t.href=r,t.href=t.href,n!==t.protocol||i!==t.host};return r}),r("Core/TaskProcessor",["../ThirdParty/Uri","../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./destroyObject","./isCrossOriginUrl","require"],function(e,t,r,i,n,o,a,s){"use strict";function l(){if(!n(p._canTransferArrayBuffer)){var e=new Worker(c("Workers/transferTypedArrayTest.js"));e.postMessage=i(e.webkitPostMessage,e.postMessage);var r=99,o=new Int8Array([r]);try{e.postMessage({array:o},[o.buffer])}catch(a){return p._canTransferArrayBuffer=!1,p._canTransferArrayBuffer}var s=t.defer();e.onmessage=function(t){var i=t.data.array,o=n(i)&&i[0]===r;s.resolve(o),e.terminate(),p._canTransferArrayBuffer=o},p._canTransferArrayBuffer=s.promise}return p._canTransferArrayBuffer}function u(e,t){--e._activeTasks;var r=t.id;if(n(r)){var i=e._deferreds,o=i[r];n(t.error)?o.reject(t.error):o.resolve(t.result),delete i[r]}}function c(e){var t=r(e);if(a(t)){var i,n='importScripts("'+t+'");';try{i=new Blob([n],{type:"application/javascript"})}catch(o){var s=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,l=new s;l.append(n),i=l.getBlob("application/javascript")}var u=window.URL||window.webkitURL;t=u.createObjectURL(i)}return t}function h(){return n(m)||(m=c("Workers/cesiumWorkerBootstrapper.js")),m}function d(t){var o=new Worker(h());o.postMessage=i(o.webkitPostMessage,o.postMessage);var a={loaderConfig:{},workerModule:p._workerModulePrefix+t._workerName};if(n(p._loaderConfig))a.loaderConfig=p._loaderConfig;else if(n(s.toUrl)){var l=new e("..").resolve(new e(r("Workers/cesiumWorkerBootstrapper.js"))).toString();a.loaderConfig.baseUrl=l}else a.loaderConfig.paths={Workers:r("Workers")};return o.postMessage(a),o.onmessage=function(e){u(t,e.data)},o}var m,p=function(e,t){this._workerName=e,this._maximumActiveTasks=i(t,5),this._activeTasks=0,this._deferreds={},this._nextID=0},f=[];return p.prototype.scheduleTask=function(e,r){if(n(this._worker)||(this._worker=d(this)),this._activeTasks>=this._maximumActiveTasks)return void 0;++this._activeTasks;var i=this;return t(l(),function(o){n(r)?o||(r.length=0):r=f;var a=i._nextID++,s=t.defer();return i._deferreds[a]=s,i._worker.postMessage({id:a,parameters:e,canTransferArrayBuffer:o},r),s.promise})},p.prototype.isDestroyed=function(){return!1},p.prototype.destroy=function(){return n(this._worker)&&this._worker.terminate(),o(this)},p._defaultWorkerModulePrefix="Workers/",p._workerModulePrefix=p._defaultWorkerModulePrefix,p._loaderConfig=void 0,p._canTransferArrayBuffer=void 0,p}),r("Core/TerrainMesh",[],function(){"use strict";var e=function(e,t,r,i,n,o,a){this.center=e,this.vertices=t,this.indices=r,this.minimumHeight=i,this.maximumHeight=n,this.boundingSphere3D=o,this.occludeePointInScaledSpace=a};return e}),r("Core/TerrainProvider",["./defined","./defineProperties","./DeveloperError"],function(e,t,r){"use strict";var i=function(){r.throwInstantiationError()};t(i.prototype,{errorEvent:{get:r.throwInstantiationError},credit:{get:r.throwInstantiationError},tilingScheme:{get:r.throwInstantiationError},ready:{get:r.throwInstantiationError},hasWaterMask:{get:r.throwInstantiationError},hasVertexNormals:{get:r.throwInstantiationError}});var n=[];return i.getRegularGridIndices=function(t,r){var i=n[t];e(i)||(n[t]=i=[]);var o=i[r];if(!e(o)){o=i[r]=new Uint16Array(6*(t-1)*(r-1));for(var a=0,s=0,l=0;r-1>l;++l){for(var u=0;t-1>u;++u){var c=a,h=c+t,d=h+1,m=c+1;o[s++]=c,o[s++]=h,o[s++]=m,o[s++]=m,o[s++]=h,o[s++]=d,++a}++a}}return o},i.heightmapTerrainQuality=.25,i.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(e,t,r){return 2*e.maximumRadius*Math.PI*i.heightmapTerrainQuality/(t*r)},i.prototype.requestTileGeometry=r.throwInstantiationError,i.prototype.getLevelMaximumGeometricError=r.throwInstantiationError,i.prototype.getTileDataAvailable=r.throwInstantiationError,i}),r("Core/HeightmapTerrainData",["../ThirdParty/when","./defaultValue","./defined","./defineProperties","./DeveloperError","./GeographicTilingScheme","./HeightmapTessellator","./Math","./Rectangle","./TaskProcessor","./TerrainMesh","./TerrainProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r,i,n,o,a){var s=1,l=e._width,u=e._height,c=o*(l-1),h=c+l-1,d=a*(u-1),m=d+u-1,p=1<<s;c/=p,h/=p,d/=p,m/=p;var f=r*(l-1),v=i*(u-1);c-=f,h-=f,d-=v,m-=v;var g,_,C=0|c,w=0|h,S=0|d,E=0|m,b=w-C+1,T=E-S+1,x=e._buffer,P=e._structure,A=b*T,M=A*P.stride,D=new x.constructor(M),I=0,R=P.stride;if(R>1)for(_=S;E>=_;++_)for(g=C;w>=g;++g)for(var O=(_*l+g)*R,L=0;R>L;++L)D[I++]=x[O+L];else for(_=S;E>=_;++_)for(g=C;w>=g;++g)D[I++]=x[_*l+g];return new y({buffer:D,width:b,height:T,childTileMask:0,structure:e._structure,createdByUpsampling:!0})}function m(e,t,r,i,n,o,a,l){var u,c,h,d,m=e._width,v=e._height,g=e._structure,C=g.stride,w=e._buffer,S=new w.constructor(m*v*C),E=t.tileXYToRectangle(r,i,n),b=t.tileXYToRectangle(o,a,l);if(C>1){var T=g.elementsPerHeight,x=g.elementMultiplier,P=g.isBigEndian,A=Math.pow(x,T-1);for(c=0;v>c;++c)for(h=s.lerp(b.north,b.south,c/(v-1)),u=0;m>u;++u){d=s.lerp(b.west,b.east,u/(m-1));var M=f(w,T,x,C,P,E,m,v,d,h);_(S,T,x,A,C,P,c*m+u,M)}}else for(c=0;v>c;++c)for(h=s.lerp(b.north,b.south,c/(v-1)),u=0;m>u;++u)d=s.lerp(b.west,b.east,u/(m-1)),S[c*m+u]=p(w,E,m,v,d,h);return new y({buffer:S,width:m,height:v,childTileMask:0,structure:e._structure,createdByUpsampling:!0})}function p(e,t,r,i,n,o){var a=(n-t.west)*(r-1)/(t.east-t.west),s=(o-t.south)*(i-1)/(t.north-t.south),l=0|a,u=l+1;u>=r&&(u=r-1,l=r-2);var c=0|s,h=c+1;h>=i&&(h=i-1,c=i-2);var d=a-l,m=s-c;c=i-1-c,h=i-1-h;var p=e[c*r+l],f=e[c*r+u],g=e[h*r+l],_=e[h*r+u];return v(d,m,p,f,g,_)}function f(e,t,r,i,n,o,a,s,l,u){var c=(l-o.west)*(a-1)/(o.east-o.west),h=(u-o.south)*(s-1)/(o.north-o.south),d=0|c,m=d+1;m>=a&&(m=a-1,d=a-2);var p=0|h,f=p+1;f>=s&&(f=s-1,p=s-2);var _=c-d,y=h-p;p=s-1-p,f=s-1-f;var C=g(e,t,r,i,n,p*a+d),w=g(e,t,r,i,n,p*a+m),S=g(e,t,r,i,n,f*a+d),E=g(e,t,r,i,n,f*a+m);return v(_,y,C,w,S,E)}function v(e,t,r,i,n,o){return e>t?r+e*(i-r)+t*(o-i):r+e*(o-n)+t*(n-r)}function g(e,t,r,i,n,o){o*=i;var a,s=0;if(n)for(a=0;t>a;++a)s=s*r+e[o+a];else for(a=t-1;a>=0;--a)s=s*r+e[o+a];return s}function _(e,t,r,i,n,o,a,s){a*=n;var l;if(o)for(l=0;t>l;++l)e[a+l]=0|s/i,s-=e[a+l]*i,i/=r;else for(l=t-1;l>=0;--l)e[a+l]=0|s/i,s-=e[a+l]*i,i/=r}var y=function(e){this._buffer=e.buffer,this._width=e.width,this._height=e.height,this._childTileMask=t(e.childTileMask,15);var i=a.DEFAULT_STRUCTURE,n=e.structure;r(n)?n!==i&&(n.heightScale=t(n.heightScale,i.heightScale),n.heightOffset=t(n.heightOffset,i.heightOffset),n.elementsPerHeight=t(n.elementsPerHeight,i.elementsPerHeight),n.stride=t(n.stride,i.stride),n.elementMultiplier=t(n.elementMultiplier,i.elementMultiplier),n.isBigEndian=t(n.isBigEndian,i.isBigEndian)):n=i,this._structure=n,this._createdByUpsampling=t(e.createdByUpsampling,!1),this._waterMask=e.waterMask};i(y.prototype,{waterMask:{get:function(){return this._waterMask}}});var C=new u("createVerticesFromHeightmap");return y.prototype.createMesh=function(t,i,n,a){var s=t.ellipsoid,u=t.tileXYToNativeRectangle(i,n,a),d=t.tileXYToRectangle(i,n,a),m=s.cartographicToCartesian(l.center(d)),p=this._structure,f=h.getEstimatedLevelZeroGeometricErrorForAHeightmap(s,this._width,t.getNumberOfXTilesAtLevel(0)),v=f/(1<<a),g=C.scheduleTask({heightmap:this._buffer,structure:p,width:this._width,height:this._height,nativeRectangle:u,rectangle:d,relativeToCenter:m,ellipsoid:s,skirtHeight:Math.min(4*v,1e3),isGeographic:t instanceof o});return r(g)?e(g,function(e){return new c(m,new Float32Array(e.vertices),h.getRegularGridIndices(e.gridWidth,e.gridHeight),e.minimumHeight,e.maximumHeight,e.boundingSphere3D,e.occludeePointInScaledSpace)}):void 0},y.prototype.interpolateHeight=function(e,t,r){var i,n=this._width,o=this._height,a=this._structure,s=a.stride;if(s>1){var l=a.elementsPerHeight,u=a.elementMultiplier,c=a.isBigEndian;i=f(this._buffer,l,u,s,c,e,n,o,t,r)}else i=p(this._buffer,e,n,o,t,r);return i*a.heightScale+a.heightOffset},y.prototype.upsample=function(e,t,r,i,n,o,a){var s;return s=1===this._width%2&&1===this._height%2?d(this,e,t,r,i,n,o,a):m(this,e,t,r,i,n,o,a)},y.prototype.isChildAvailable=function(e,t,r,i){var n=2;return r!==2*e&&++n,i!==2*t&&(n-=2),0!==(this._childTileMask&1<<n)},y.prototype.wasCreatedByUpsampling=function(){return this._createdByUpsampling},y}),r("Core/loadImage",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError","./isCrossOriginUrl"],function(e,t,r,i,n){"use strict";var o=/^data:/,a=function(r,i){return i=t(i,!0),e(r,function(t){var r;r=o.test(t)||!i?!1:n(t);var s=e.defer();return a.createImage(t,r,s),s.promise})};return a.createImage=function(e,t,r){var i=new Image;i.onload=function(){r.resolve(i)},i.onerror=function(e){r.reject(e)},t&&(i.crossOrigin=""),i.src=e},a.defaultCreateImage=a.createImage,a}),r("Core/throttleRequestByServer",["../ThirdParty/Uri","../ThirdParty/when","./defaultValue"],function(e,t,r){"use strict";function i(t){var r=new e(t).resolve(a);r.normalize();var i=r.authority;return/:/.test(i)||(i=i+":"+("https"===r.scheme?"443":"80")),i}var n=6,o={},a=new e(document.location.href),s=function(e,a){var s=i(e),l=r(o[s],0);return l>n?void 0:(o[s]=l+1,t(a(e),function(e){return o[s]--,e}).otherwise(function(e){return o[s]--,t.reject(e)}))};return s}),r("Core/ArcGisImageServerTerrainProvider",["../ThirdParty/when","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Event","./GeographicTilingScheme","./getImagePixels","./HeightmapTerrainData","./loadImage","./Math","./TerrainProvider","./throttleRequestByServer"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=function(e){this._url=e.url,this._token=e.token,this._tilingScheme=e.tilingScheme,i(this._tilingScheme)||(this._tilingScheme=new l({ellipsoid:r(e.ellipsoid,a.WGS84)})),this._heightmapWidth=65,this._levelZeroMaximumGeometricError=m.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,this._heightmapWidth,this._tilingScheme.getNumberOfXTilesAtLevel(0)),this._proxy=e.proxy,this._terrainDataStructure={heightScale:.001,heightOffset:-1e3,elementsPerHeight:3,stride:4,elementMultiplier:256,isBigEndian:!0},this._errorEvent=new s;var n=e.credit;"string"==typeof n&&(n=new t(n)),this._credit=n};return n(f.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return!0}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),f.prototype.requestTileGeometry=function(t,r,n){var o=this._tilingScheme.tileXYToRectangle(t,r,n),a=(o.east-o.west)/(this._heightmapWidth-1),s=(o.north-o.south)/(this._heightmapWidth-1);o.west-=.5*a,o.east+=.5*a,o.south-=.5*s,o.north+=.5*s;var l=d.toDegrees(o.west)+"%2C"+d.toDegrees(o.south)+"%2C"+d.toDegrees(o.east)+"%2C"+d.toDegrees(o.north),m=this._url+"/exportImage?interpolation=RSP_BilinearInterpolation&format=tiff&f=image&size="+this._heightmapWidth+"%2C"+this._heightmapWidth+"&bboxSR=4326&imageSR=4326&bbox="+l;this._token&&(m+="&token="+this._token);var f=this._proxy;i(f)&&(m=f.getURL(m));var v=p(m,h);if(!i(v))return void 0;var g=this;return e(v,function(e){return new c({buffer:u(e),width:g._heightmapWidth,height:g._heightmapWidth,childTileMask:15,structure:g._terrainDataStructure})})},f.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},f.prototype.getTileDataAvailable=function(){return void 0},f}),r("Core/AssociativeArray",["./defined","./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){this._array=[],this._hash={}};return t(r.prototype,{length:{get:function(){return this._array.length}},values:{get:function(){return this._array}}}),r.prototype.contains=function(t){return e(this._hash[t])},r.prototype.set=function(e,t){var r=this._hash[e];t!==r&&(this.remove(e),this._hash[e]=t,this._array.push(t))},r.prototype.get=function(e){return this._hash[e]},r.prototype.remove=function(t){var r=this._hash[t],i=e(r);if(i){var n=this._array;n.splice(n.indexOf(r),1),this._hash[t]=void 0}return i},r.prototype.removeAll=function(){this._hash={},this._array.length=0},r}),r("Core/Intersect",["./freezeObject"],function(e){"use strict";var t={OUTSIDE:-1,INTERSECTING:0,INSIDE:1};return e(t)}),r("Core/AxisAlignedBoundingBox",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Intersect"],function(e,t,r,i,n){"use strict";var o=function(i,n,o){this.minimum=e.clone(t(i,e.ZERO)),this.maximum=e.clone(t(n,e.ZERO)),r(o)?o=e.clone(o):(o=e.add(this.minimum,this.maximum,new e),e.multiplyByScalar(o,.5,o)),this.center=o};o.fromPoints=function(t,i){if(r(i)||(i=new o),!r(t)||0===t.length)return i.minimum=e.clone(e.ZERO,i.minimum),i.maximum=e.clone(e.ZERO,i.maximum),i.center=e.clone(e.ZERO,i.center),i;for(var n=t[0].x,a=t[0].y,s=t[0].z,l=t[0].x,u=t[0].y,c=t[0].z,h=t.length,d=1;h>d;d++){var m=t[d],p=m.x,f=m.y,v=m.z;n=Math.min(p,n),l=Math.max(p,l),a=Math.min(f,a),u=Math.max(f,u),s=Math.min(v,s),c=Math.max(v,c)}var g=i.minimum;g.x=n,g.y=a,g.z=s;var _=i.maximum;_.x=l,_.y=u,_.z=c;var y=e.add(g,_,i.center);return e.multiplyByScalar(y,.5,y),i},o.clone=function(t,i){return r(t)?r(i)?(i.minimum=e.clone(t.minimum,i.minimum),i.maximum=e.clone(t.maximum,i.maximum),i.center=e.clone(t.center,i.center),i):new o(t.minimum,t.maximum):void 0},o.equals=function(t,i){return t===i||r(t)&&r(i)&&e.equals(t.center,i.center)&&e.equals(t.minimum,i.minimum)&&e.equals(t.maximum,i.maximum)};var a=new e;return o.intersect=function(t,r){a=e.subtract(t.maximum,t.minimum,a);var i=e.multiplyByScalar(a,.5,a),o=i.x*Math.abs(r.x)+i.y*Math.abs(r.y)+i.z*Math.abs(r.z),s=e.dot(t.center,r)+r.w;return s-o>0?n.INSIDE:0>s+o?n.OUTSIDE:n.INTERSECTING},o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.intersect=function(e){return o.intersect(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o}),r("Core/BingMapsApi",["./defined"],function(e){"use strict";var t={};t.defaultKey=void 0;var r=!1;return t.getKey=function(i){return e(i)?i:e(t.defaultKey)?t.defaultKey:(r||(console.log("This application is using Cesium's default Bing Maps key.  Please create a new key for the application as soon as possible and prior to deployment by visiting https://www.bingmapsportal.com/, and provide your key to Cesium by setting the Cesium.BingMapsApi.defaultKey property before constructing the CesiumWidget or any other object that uses the Bing Maps API."),r=!0),"Aj1ony_-Typ-KjG9SJWiKSHY23U1KmK7yAmZa9lDmuF2osXWkcZ22VPsqmCt0TCt")},t}),r("Core/BoundingRectangle",["./Cartesian2","./Cartographic","./defaultValue","./defined","./DeveloperError","./GeographicProjection","./Intersect","./Rectangle"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,t,i,n){this.x=r(e,0),this.y=r(t,0),this.width=r(i,0),this.height=r(n,0)};l.fromPoints=function(e,t){if(i(t)||(t=new l),!i(e)||0===e.length)return t.x=0,t.y=0,t.width=0,t.height=0,t;for(var r=e.length,n=e[0].x,o=e[0].y,a=e[0].x,s=e[0].y,u=1;r>u;u++){var c=e[u],h=c.x,d=c.y;n=Math.min(h,n),a=Math.max(h,a),o=Math.min(d,o),s=Math.max(d,s)}return t.x=n,t.y=o,t.width=a-n,t.height=s-o,t};var u=new o,c=new t,h=new t;return l.fromRectangle=function(t,n,o){if(i(o)||(o=new l),!i(t))return o.x=0,o.y=0,o.width=0,o.height=0,o;n=r(n,u);var a=n.project(s.southwest(t,c)),d=n.project(s.northeast(t,h));return e.subtract(d,a,d),o.x=a.x,o.y=a.y,o.width=d.x,o.height=d.y,o},l.clone=function(e,t){return i(e)?i(t)?(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t):new l(e.x,e.y,e.width,e.height):void 0},l.union=function(e,t,r){i(r)||(r=new l);var n=Math.min(e.x,t.x),o=Math.min(e.y,t.y),a=Math.max(e.x+e.width,t.x+t.width),s=Math.max(e.y+e.height,t.y+t.height);return r.x=n,r.y=o,r.width=a-n,r.height=s-o,r},l.expand=function(e,t,r){r=l.clone(e,r);var i=t.x-r.x,n=t.y-r.y;return i>r.width?r.width=i:0>i&&(r.width-=i,r.x=t.x),n>r.height?r.height=n:0>n&&(r.height-=n,r.y=t.y),r},l.intersect=function(e,t){var r=e.x,i=e.y,n=t.x,o=t.y;return r>n+t.width||r+e.width<n||i+e.height<o||i>o+t.height?a.OUTSIDE:a.INTERSECTING},l.equals=function(e,t){return e===t||i(e)&&i(t)&&e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height},l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.intersect=function(e){return l.intersect(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l}),r("Core/Interval",["./defaultValue"],function(e){"use strict";var t=function(t,r){this.start=e(t,0),this.stop=e(r,0)};return t}),r("Core/Matrix3",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i,n,o){"use strict";function a(e){for(var t=0,r=0;9>r;++r){var i=e[r];t+=i*i}return Math.sqrt(t)}function s(e){for(var t=0,r=0;3>r;++r){var i=e[u.getElementIndex(m[r],d[r])];t+=2*i*i}return Math.sqrt(t)}function l(e,t){for(var r=o.EPSILON15,i=0,n=1,a=0;3>a;++a){var s=Math.abs(e[u.getElementIndex(m[a],d[a])]);s>i&&(n=a,i=s)}var l=1,c=0,h=d[n],p=m[n];if(Math.abs(e[u.getElementIndex(p,h)])>r){var f,v=e[u.getElementIndex(p,p)],g=e[u.getElementIndex(h,h)],_=e[u.getElementIndex(p,h)],y=(v-g)/2/_;f=0>y?-1/(-y+Math.sqrt(1+y*y)):1/(y+Math.sqrt(1+y*y)),l=1/Math.sqrt(1+f*f),c=f*l}return t=u.clone(u.IDENTITY,t),t[u.getElementIndex(h,h)]=t[u.getElementIndex(p,p)]=l,t[u.getElementIndex(p,h)]=c,t[u.getElementIndex(h,p)]=-c,t}var u=function(e,r,i,n,o,a,s,l,u){this[0]=t(e,0),this[1]=t(n,0),this[2]=t(s,0),this[3]=t(r,0),this[4]=t(o,0),this[5]=t(l,0),this[6]=t(i,0),this[7]=t(a,0),this[8]=t(u,0)};u.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):new u(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]):void 0},u.fromArray=function(e,i,n){return i=t(i,0),r(n)||(n=new u),n[0]=e[i],n[1]=e[i+1],n[2]=e[i+2],n[3]=e[i+3],n[4]=e[i+4],n[5]=e[i+5],n[6]=e[i+6],n[7]=e[i+7],n[8]=e[i+8],n},u.fromColumnMajorArray=function(e,t){return u.clone(e,t)},u.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],t):new u(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])},u.fromQuaternion=function(e,t){var i=e.x*e.x,n=e.x*e.y,o=e.x*e.z,a=e.x*e.w,s=e.y*e.y,l=e.y*e.z,c=e.y*e.w,h=e.z*e.z,d=e.z*e.w,m=e.w*e.w,p=i-s-h+m,f=2*(n-d),v=2*(o+c),g=2*(n+d),_=-i+s-h+m,y=2*(l-a),C=2*(o-c),w=2*(l+a),S=-i-s+h+m;return r(t)?(t[0]=p,t[1]=g,t[2]=C,t[3]=f,t[4]=_,t[5]=w,t[6]=v,t[7]=y,t[8]=S,t):new u(p,f,v,g,_,y,C,w,S)},u.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=e.y,t[5]=0,t[6]=0,t[7]=0,t[8]=e.z,t):new u(e.x,0,0,0,e.y,0,0,0,e.z)},u.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=e,t[5]=0,t[6]=0,t[7]=0,t[8]=e,t):new u(e,0,0,0,e,0,0,0,e)},u.fromCrossProduct=function(e,t){return r(t)?(t[0]=0,t[1]=e.z,t[2]=-e.y,t[3]=-e.z,t[4]=0,t[5]=e.x,t[6]=e.y,t[7]=-e.x,t[8]=0,t):new u(0,-e.z,e.y,e.z,0,-e.x,-e.y,e.x,0)},u.fromRotationX=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=i,t[5]=n,t[6]=0,t[7]=-n,t[8]=i,t):new u(1,0,0,0,i,-n,0,n,i)},u.fromRotationY=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=0,t[2]=-n,t[3]=0,t[4]=1,t[5]=0,t[6]=n,t[7]=0,t[8]=i,t):new u(i,0,n,0,1,0,-n,0,i)},u.fromRotationZ=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=n,t[2]=0,t[3]=-n,t[4]=i,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new u(i,-n,0,n,i,0,0,0,1)},u.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},u.getElementIndex=function(e,t){return 3*e+t},u.getColumn=function(e,t,r){var i=3*t,n=e[i],o=e[i+1],a=e[i+2];return r.x=n,r.y=o,r.z=a,r},u.setColumn=function(e,t,r,i){i=u.clone(e,i);var n=3*t;return i[n]=r.x,i[n+1]=r.y,i[n+2]=r.z,i},u.getRow=function(e,t,r){var i=e[t],n=e[t+3],o=e[t+6];return r.x=i,r.y=n,r.z=o,r},u.setRow=function(e,t,r,i){return i=u.clone(e,i),i[t]=r.x,i[t+3]=r.y,i[t+6]=r.z,i};var c=new e;u.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],t[2],c)),r.y=e.magnitude(e.fromElements(t[3],t[4],t[5],c)),r.z=e.magnitude(e.fromElements(t[6],t[7],t[8],c)),r};var h=new e;u.getMaximumScale=function(t){return u.getScale(t,h),e.maximumComponent(h)},u.multiply=function(e,t,r){var i=e[0]*t[0]+e[3]*t[1]+e[6]*t[2],n=e[1]*t[0]+e[4]*t[1]+e[7]*t[2],o=e[2]*t[0]+e[5]*t[1]+e[8]*t[2],a=e[0]*t[3]+e[3]*t[4]+e[6]*t[5],s=e[1]*t[3]+e[4]*t[4]+e[7]*t[5],l=e[2]*t[3]+e[5]*t[4]+e[8]*t[5],u=e[0]*t[6]+e[3]*t[7]+e[6]*t[8],c=e[1]*t[6]+e[4]*t[7]+e[7]*t[8],h=e[2]*t[6]+e[5]*t[7]+e[8]*t[8];return r[0]=i,r[1]=n,r[2]=o,r[3]=a,r[4]=s,r[5]=l,r[6]=u,r[7]=c,r[8]=h,r},u.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r[4]=e[4]+t[4],r[5]=e[5]+t[5],r[6]=e[6]+t[6],r[7]=e[7]+t[7],r[8]=e[8]+t[8],r},u.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r[4]=e[4]-t[4],r[5]=e[5]-t[5],r[6]=e[6]-t[6],r[7]=e[7]-t[7],r[8]=e[8]-t[8],r},u.multiplyByVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[3]*n+e[6]*o,s=e[1]*i+e[4]*n+e[7]*o,l=e[2]*i+e[5]*n+e[8]*o;return r.x=a,r.y=s,r.z=l,r},u.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r[4]=e[4]*t,r[5]=e[5]*t,r[6]=e[6]*t,r[7]=e[7]*t,r[8]=e[8]*t,r},u.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t},u.transpose=function(e,t){var r=e[0],i=e[3],n=e[6],o=e[1],a=e[4],s=e[7],l=e[2],u=e[5],c=e[8];return t[0]=r,t[1]=i,t[2]=n,t[3]=o,t[4]=a,t[5]=s,t[6]=l,t[7]=u,t[8]=c,t};var d=[1,0,0],m=[2,2,1],p=new u,f=new u;return u.computeEigenDecomposition=function(e,t){var i=o.EPSILON20,n=10,c=0,h=0;r(t)||(t={});for(var d=t.unitary=u.clone(u.IDENTITY,t.unitary),m=t.diagonal=u.clone(e,t.diagonal),v=i*a(m);n>h&&s(m)>v;)l(m,p),u.transpose(p,f),u.multiply(m,p,m),u.multiply(f,m,m),u.multiply(d,p,d),++c>2&&(++h,c=0);return t},u.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t},u.determinant=function(e){var t=e[0],r=e[3],i=e[6],n=e[1],o=e[4],a=e[7],s=e[2],l=e[5],u=e[8];return t*(o*u-l*a)+n*(l*i-r*u)+s*(r*a-o*i)},u.inverse=function(e,t){var r=e[0],n=e[1],a=e[2],s=e[3],l=e[4],c=e[5],h=e[6],d=e[7],m=e[8],p=u.determinant(e);if(Math.abs(p)<=o.EPSILON15)throw new i("matrix is not invertible");t[0]=l*m-d*c,t[1]=d*a-n*m,t[2]=n*c-l*a,t[3]=h*c-s*m,t[4]=r*m-h*a,t[5]=s*a-r*c,t[6]=s*d-h*l,t[7]=h*n-r*d,t[8]=r*l-s*n;var f=1/p;return u.multiplyByScalar(t,f,t)},u.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},u.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i&&Math.abs(e[4]-t[4])<=i&&Math.abs(e[5]-t[5])<=i&&Math.abs(e[6]-t[6])<=i&&Math.abs(e[7]-t[7])<=i&&Math.abs(e[8]-t[8])<=i},u.IDENTITY=n(new u(1,0,0,0,1,0,0,0,1)),u.COLUMN0ROW0=0,u.COLUMN0ROW1=1,u.COLUMN0ROW2=2,u.COLUMN1ROW0=3,u.COLUMN1ROW1=4,u.COLUMN1ROW2=5,u.COLUMN2ROW0=6,u.COLUMN2ROW1=7,u.COLUMN2ROW2=8,u.prototype.clone=function(e){return u.clone(this,e)},u.prototype.equals=function(e){return u.equals(this,e)},u.prototype.equalsEpsilon=function(e,t){return u.equalsEpsilon(this,e,t)},u.prototype.toString=function(){return"("+this[0]+", "+this[3]+", "+this[6]+")\n"+"("+this[1]+", "+this[4]+", "+this[7]+")\n"+"("+this[2]+", "+this[5]+", "+this[8]+")"},u}),r("Core/RuntimeError",["./defined"],function(e){"use strict";var t=function(e){this.name="RuntimeError",this.message=e;var t;try{throw new Error}catch(r){t=r.stack}this.stack=t};return t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t}),r("Core/Matrix4",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math","./Matrix3","./RuntimeError"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){this[0]=t(e,0),this[1]=t(o,0),this[2]=t(u,0),this[3]=t(m,0),this[4]=t(r,0),this[5]=t(a,0),this[6]=t(c,0),this[7]=t(p,0),this[8]=t(i,0),this[9]=t(s,0),this[10]=t(h,0),this[11]=t(f,0),this[12]=t(n,0),this[13]=t(l,0),this[14]=t(d,0),this[15]=t(v,0)};l.packedLength=16,l.pack=function(e,r,i){i=t(i,0),r[i++]=e[0],r[i++]=e[1],r[i++]=e[2],r[i++]=e[3],r[i++]=e[4],r[i++]=e[5],r[i++]=e[6],r[i++]=e[7],r[i++]=e[8],r[i++]=e[9],r[i++]=e[10],r[i++]=e[11],r[i++]=e[12],r[i++]=e[13],r[i++]=e[14],r[i]=e[15]},l.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new l),n[0]=e[i++],n[1]=e[i++],n[2]=e[i++],n[3]=e[i++],n[4]=e[i++],n[5]=e[i++],n[6]=e[i++],n[7]=e[i++],n[8]=e[i++],n[9]=e[i++],n[10]=e[i++],n[11]=e[i++],n[12]=e[i++],n[13]=e[i++],n[14]=e[i++],n[15]=e[i],n},l.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):new l(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]):void 0},l.fromArray=l.unpack,l.fromColumnMajorArray=function(e,t){return l.clone(e,t)},l.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15],t):new l(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])},l.fromRotationTranslation=function(e,t,i){return r(i)?(i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=0,i[4]=e[3],i[5]=e[4],i[6]=e[5],i[7]=0,i[8]=e[6],i[9]=e[7],i[10]=e[8],i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,i):new l(e[0],e[3],e[6],t.x,e[1],e[4],e[7],t.y,e[2],e[5],e[8],t.z,0,0,0,1)},l.fromTranslationQuaternionRotationScale=function(e,t,i,n){r(n)||(n=new l);var o=i.x,a=i.y,s=i.z,u=t.x*t.x,c=t.x*t.y,h=t.x*t.z,d=t.x*t.w,m=t.y*t.y,p=t.y*t.z,f=t.y*t.w,v=t.z*t.z,g=t.z*t.w,_=t.w*t.w,y=u-m-v+_,C=2*(c-g),w=2*(h+f),S=2*(c+g),E=-u+m-v+_,b=2*(p-d),T=2*(h-f),x=2*(p+d),P=-u-m+v+_;return n[0]=y*o,n[1]=S*o,n[2]=T*o,n[3]=0,n[4]=C*a,n[5]=E*a,n[6]=x*a,n[7]=0,n[8]=w*s,n[9]=b*s,n[10]=P*s,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,n},l.fromTranslation=function(e,t){return l.fromRotationTranslation(a.IDENTITY,e,t)},l.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e.y,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e.z,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1)},l.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1)
};var u=new e,c=new e,h=new e;l.fromCamera=function(t,i){var n=t.eye,o=t.target,a=t.up;e.normalize(e.subtract(o,n,u),u),e.normalize(e.cross(u,a,c),c),e.normalize(e.cross(c,u,h),h);var s=c.x,d=c.y,m=c.z,p=u.x,f=u.y,v=u.z,g=h.x,_=h.y,y=h.z,C=n.x,w=n.y,S=n.z,E=s*-C+d*-w+m*-S,b=g*-C+_*-w+y*-S,T=p*C+f*w+v*S;return r(i)?(i[0]=s,i[1]=g,i[2]=-p,i[3]=0,i[4]=d,i[5]=_,i[6]=-f,i[7]=0,i[8]=m,i[9]=y,i[10]=-v,i[11]=0,i[12]=E,i[13]=b,i[14]=T,i[15]=1,i):new l(s,d,m,E,g,_,y,b,-p,-f,-v,T,0,0,0,1)},l.computePerspectiveFieldOfView=function(e,t,r,i,n){var o=Math.tan(.5*e),a=1/o,s=a/t,l=(i+r)/(r-i),u=2*i*r/(r-i);return n[0]=s,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=a,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=l,n[11]=-1,n[12]=0,n[13]=0,n[14]=u,n[15]=0,n},l.computeOrthographicOffCenter=function(e,t,r,i,n,o,a){var s=1/(t-e),l=1/(i-r),u=1/(o-n),c=-(t+e)*s,h=-(i+r)*l,d=-(o+n)*u;return s*=2,l*=2,u*=-2,a[0]=s,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=l,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=u,a[11]=0,a[12]=c,a[13]=h,a[14]=d,a[15]=1,a},l.computePerspectiveOffCenter=function(e,t,r,i,n,o,a){var s=2*n/(t-e),l=2*n/(i-r),u=(t+e)/(t-e),c=(i+r)/(i-r),h=-(o+n)/(o-n),d=-1,m=-2*o*n/(o-n);return a[0]=s,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=l,a[6]=0,a[7]=0,a[8]=u,a[9]=c,a[10]=h,a[11]=d,a[12]=0,a[13]=0,a[14]=m,a[15]=0,a},l.computeInfinitePerspectiveOffCenter=function(e,t,r,i,n,o){var a=2*n/(t-e),s=2*n/(i-r),l=(t+e)/(t-e),u=(i+r)/(i-r),c=-1,h=-1,d=-2*n;return o[0]=a,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=s,o[6]=0,o[7]=0,o[8]=l,o[9]=u,o[10]=c,o[11]=h,o[12]=0,o[13]=0,o[14]=d,o[15]=0,o},l.computeViewportTransformation=function(e,r,i,n){e=t(e,t.EMPTY_OBJECT);var o=t(e.x,0),a=t(e.y,0),s=t(e.width,0),l=t(e.height,0);r=t(r,0),i=t(i,1);var u=.5*s,c=.5*l,h=.5*(i-r),d=u,m=c,p=h,f=o+u,v=a+c,g=r+h,_=1;return n[0]=d,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=m,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=p,n[11]=0,n[12]=f,n[13]=v,n[14]=g,n[15]=_,n},l.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},l.getElementIndex=function(e,t){return 4*e+t},l.getColumn=function(e,t,r){var i=4*t,n=e[i],o=e[i+1],a=e[i+2],s=e[i+3];return r.x=n,r.y=o,r.z=a,r.w=s,r},l.setColumn=function(e,t,r,i){i=l.clone(e,i);var n=4*t;return i[n]=r.x,i[n+1]=r.y,i[n+2]=r.z,i[n+3]=r.w,i},l.getRow=function(e,t,r){var i=e[t],n=e[t+4],o=e[t+8],a=e[t+12];return r.x=i,r.y=n,r.z=o,r.w=a,r},l.setRow=function(e,t,r,i){return i=l.clone(e,i),i[t]=r.x,i[t+4]=r.y,i[t+8]=r.z,i[t+12]=r.w,i};var d=new e;l.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],t[2],d)),r.y=e.magnitude(e.fromElements(t[4],t[5],t[6],d)),r.z=e.magnitude(e.fromElements(t[8],t[9],t[10],d)),r};var m=new e;l.getMaximumScale=function(t){return l.getScale(t,m),e.maximumComponent(m)},l.multiply=function(e,t,r){var i=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],c=e[7],h=e[8],d=e[9],m=e[10],p=e[11],f=e[12],v=e[13],g=e[14],_=e[15],y=t[0],C=t[1],w=t[2],S=t[3],E=t[4],b=t[5],T=t[6],x=t[7],P=t[8],A=t[9],M=t[10],D=t[11],I=t[12],R=t[13],O=t[14],L=t[15],N=i*y+s*C+h*w+f*S,B=n*y+l*C+d*w+v*S,F=o*y+u*C+m*w+g*S,z=a*y+c*C+p*w+_*S,V=i*E+s*b+h*T+f*x,k=n*E+l*b+d*T+v*x,U=o*E+u*b+m*T+g*x,W=a*E+c*b+p*T+_*x,G=i*P+s*A+h*M+f*D,H=n*P+l*A+d*M+v*D,q=o*P+u*A+m*M+g*D,j=a*P+c*A+p*M+_*D,Y=i*I+s*R+h*O+f*L,X=n*I+l*R+d*O+v*L,Z=o*I+u*R+m*O+g*L,Q=a*I+c*R+p*O+_*L;return r[0]=N,r[1]=B,r[2]=F,r[3]=z,r[4]=V,r[5]=k,r[6]=U,r[7]=W,r[8]=G,r[9]=H,r[10]=q,r[11]=j,r[12]=Y,r[13]=X,r[14]=Z,r[15]=Q,r},l.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r[4]=e[4]+t[4],r[5]=e[5]+t[5],r[6]=e[6]+t[6],r[7]=e[7]+t[7],r[8]=e[8]+t[8],r[9]=e[9]+t[9],r[10]=e[10]+t[10],r[11]=e[11]+t[11],r[12]=e[12]+t[12],r[13]=e[13]+t[13],r[14]=e[14]+t[14],r[15]=e[15]+t[15],r},l.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r[4]=e[4]-t[4],r[5]=e[5]-t[5],r[6]=e[6]-t[6],r[7]=e[7]-t[7],r[8]=e[8]-t[8],r[9]=e[9]-t[9],r[10]=e[10]-t[10],r[11]=e[11]-t[11],r[12]=e[12]-t[12],r[13]=e[13]-t[13],r[14]=e[14]-t[14],r[15]=e[15]-t[15],r},l.multiplyTransformation=function(e,t,r){var i=e[0],n=e[1],o=e[2],a=e[4],s=e[5],l=e[6],u=e[8],c=e[9],h=e[10],d=e[12],m=e[13],p=e[14],f=t[0],v=t[1],g=t[2],_=t[4],y=t[5],C=t[6],w=t[8],S=t[9],E=t[10],b=t[12],T=t[13],x=t[14],P=i*f+a*v+u*g,A=n*f+s*v+c*g,M=o*f+l*v+h*g,D=i*_+a*y+u*C,I=n*_+s*y+c*C,R=o*_+l*y+h*C,O=i*w+a*S+u*E,L=n*w+s*S+c*E,N=o*w+l*S+h*E,B=i*b+a*T+u*x+d,F=n*b+s*T+c*x+m,z=o*b+l*T+h*x+p;return r[0]=P,r[1]=A,r[2]=M,r[3]=0,r[4]=D,r[5]=I,r[6]=R,r[7]=0,r[8]=O,r[9]=L,r[10]=N,r[11]=0,r[12]=B,r[13]=F,r[14]=z,r[15]=1,r},l.multiplyByTranslation=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=i*e[0]+n*e[4]+o*e[8]+e[12],s=i*e[1]+n*e[5]+o*e[9]+e[13],l=i*e[2]+n*e[6]+o*e[10]+e[14];return r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=e[3],r[4]=e[4],r[5]=e[5],r[6]=e[6],r[7]=e[7],r[8]=e[8],r[9]=e[9],r[10]=e[10],r[11]=e[11],r[12]=a,r[13]=s,r[14]=l,r[15]=e[15],r};var p=new e;return l.multiplyByUniformScale=function(e,t,r){return p.x=t,p.y=t,p.z=t,l.multiplyByScale(e,p,r)},l.multiplyByScale=function(e,t,r){var i=t.x,n=t.y,o=t.z;return 1===i&&1===n&&1===o?l.clone(e,r):(r[0]=i*e[0],r[1]=i*e[1],r[2]=i*e[2],r[3]=0,r[4]=n*e[4],r[5]=n*e[5],r[6]=n*e[6],r[7]=0,r[8]=o*e[8],r[9]=o*e[9],r[10]=o*e[10],r[11]=0,r[12]=e[12],r[13]=e[13],r[14]=e[14],r[15]=1,r)},l.multiplyByVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=t.w,s=e[0]*i+e[4]*n+e[8]*o+e[12]*a,l=e[1]*i+e[5]*n+e[9]*o+e[13]*a,u=e[2]*i+e[6]*n+e[10]*o+e[14]*a,c=e[3]*i+e[7]*n+e[11]*o+e[15]*a;return r.x=s,r.y=l,r.z=u,r.w=c,r},l.multiplyByPointAsVector=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[4]*n+e[8]*o,s=e[1]*i+e[5]*n+e[9]*o,l=e[2]*i+e[6]*n+e[10]*o;return r.x=a,r.y=s,r.z=l,r},l.multiplyByPoint=function(e,t,r){var i=t.x,n=t.y,o=t.z,a=e[0]*i+e[4]*n+e[8]*o+e[12],s=e[1]*i+e[5]*n+e[9]*o+e[13],l=e[2]*i+e[6]*n+e[10]*o+e[14];return r.x=a,r.y=s,r.z=l,r},l.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r[4]=e[4]*t,r[5]=e[5]*t,r[6]=e[6]*t,r[7]=e[7]*t,r[8]=e[8]*t,r[9]=e[9]*t,r[10]=e[10]*t,r[11]=e[11]*t,r[12]=e[12]*t,r[13]=e[13]*t,r[14]=e[14]*t,r[15]=e[15]*t,r},l.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},l.transpose=function(e,t){var r=e[1],i=e[2],n=e[3],o=e[6],a=e[7],s=e[11];return t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=i,t[9]=o,t[10]=e[10],t[11]=e[14],t[12]=n,t[13]=a,t[14]=s,t[15]=e[15],t},l.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t[9]=Math.abs(e[9]),t[10]=Math.abs(e[10]),t[11]=Math.abs(e[11]),t[12]=Math.abs(e[12]),t[13]=Math.abs(e[13]),t[14]=Math.abs(e[14]),t[15]=Math.abs(e[15]),t},l.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},l.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i&&Math.abs(e[4]-t[4])<=i&&Math.abs(e[5]-t[5])<=i&&Math.abs(e[6]-t[6])<=i&&Math.abs(e[7]-t[7])<=i&&Math.abs(e[8]-t[8])<=i&&Math.abs(e[9]-t[9])<=i&&Math.abs(e[10]-t[10])<=i&&Math.abs(e[11]-t[11])<=i&&Math.abs(e[12]-t[12])<=i&&Math.abs(e[13]-t[13])<=i&&Math.abs(e[14]-t[14])<=i&&Math.abs(e[15]-t[15])<=i},l.getTranslation=function(e,t){return t.x=e[12],t.y=e[13],t.z=e[14],t},l.getRotation=function(e,t){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},l.inverse=function(e,t){var r=e[0],i=e[4],n=e[8],a=e[12],l=e[1],u=e[5],c=e[9],h=e[13],d=e[2],m=e[6],p=e[10],f=e[14],v=e[3],g=e[7],_=e[11],y=e[15],C=p*y,w=f*_,S=m*y,E=f*g,b=m*_,T=p*g,x=d*y,P=f*v,A=d*_,M=p*v,D=d*g,I=m*v,R=C*u+E*c+b*h-(w*u+S*c+T*h),O=w*l+x*c+M*h-(C*l+P*c+A*h),L=S*l+P*u+D*h-(E*l+x*u+I*h),N=T*l+A*u+I*c-(b*l+M*u+D*c),B=w*i+S*n+T*a-(C*i+E*n+b*a),F=C*r+P*n+A*a-(w*r+x*n+M*a),z=E*r+x*i+I*a-(S*r+P*i+D*a),V=b*r+M*i+D*n-(T*r+A*i+I*n);C=n*h,w=a*c,S=i*h,E=a*u,b=i*c,T=n*u,x=r*h,P=a*l,A=r*c,M=n*l,D=r*u,I=i*l;var k=C*g+E*_+b*y-(w*g+S*_+T*y),U=w*v+x*_+M*y-(C*v+P*_+A*y),W=S*v+P*g+D*y-(E*v+x*g+I*y),G=T*v+A*g+I*_-(b*v+M*g+D*_),H=S*p+T*f+w*m-(b*f+C*m+E*p),q=A*f+C*d+P*p-(x*p+M*f+w*d),j=x*m+I*f+E*d-(D*f+S*d+P*m),Y=D*p+b*d+M*m-(A*m+I*p+T*d),X=r*R+i*O+n*L+a*N;if(Math.abs(X)<o.EPSILON20)throw new s("matrix is not invertible because its determinate is zero.");return X=1/X,t[0]=R*X,t[1]=O*X,t[2]=L*X,t[3]=N*X,t[4]=B*X,t[5]=F*X,t[6]=z*X,t[7]=V*X,t[8]=k*X,t[9]=U*X,t[10]=W*X,t[11]=G*X,t[12]=H*X,t[13]=q*X,t[14]=j*X,t[15]=Y*X,t},l.inverseTransformation=function(e,t){var r=e[0],i=e[1],n=e[2],o=e[4],a=e[5],s=e[6],l=e[8],u=e[9],c=e[10],h=e[12],d=e[13],m=e[14],p=-r*h-i*d-n*m,f=-o*h-a*d-s*m,v=-l*h-u*d-c*m;return t[0]=r,t[1]=o,t[2]=l,t[3]=0,t[4]=i,t[5]=a,t[6]=u,t[7]=0,t[8]=n,t[9]=s,t[10]=c,t[11]=0,t[12]=p,t[13]=f,t[14]=v,t[15]=1,t},l.IDENTITY=n(new l(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),l.COLUMN0ROW0=0,l.COLUMN0ROW1=1,l.COLUMN0ROW2=2,l.COLUMN0ROW3=3,l.COLUMN1ROW0=4,l.COLUMN1ROW1=5,l.COLUMN1ROW2=6,l.COLUMN1ROW3=7,l.COLUMN2ROW0=8,l.COLUMN2ROW1=9,l.COLUMN2ROW2=10,l.COLUMN2ROW3=11,l.COLUMN3ROW0=12,l.COLUMN3ROW1=13,l.COLUMN3ROW2=14,l.COLUMN3ROW3=15,l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l.prototype.equalsEpsilon=function(e,t){return l.equalsEpsilon(this,e,t)},l.prototype.toString=function(){return"("+this[0]+", "+this[4]+", "+this[8]+", "+this[12]+")\n"+"("+this[1]+", "+this[5]+", "+this[9]+", "+this[13]+")\n"+"("+this[2]+", "+this[6]+", "+this[10]+", "+this[14]+")\n"+"("+this[3]+", "+this[7]+", "+this[11]+", "+this[15]+")"},l}),r("Core/BoundingSphere",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./GeographicProjection","./Intersect","./Interval","./Matrix4","./Rectangle"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=function(t,i){this.center=e.clone(r(t,e.ZERO)),this.radius=r(i,0)},d=new e,m=new e,p=new e,f=new e,v=new e,g=new e,_=new e,y=new e,C=new e,w=new e,S=new e,E=new e;h.fromPoints=function(t,r){if(i(r)||(r=new h),!i(t)||0===t.length)return r.center=e.clone(e.ZERO,r.center),r.radius=0,r;for(var n=e.clone(t[0],_),o=e.clone(n,d),a=e.clone(n,m),s=e.clone(n,p),l=e.clone(n,f),u=e.clone(n,v),c=e.clone(n,g),b=t.length,T=1;b>T;T++){e.clone(t[T],n);var x=n.x,P=n.y,A=n.z;x<o.x&&e.clone(n,o),x>l.x&&e.clone(n,l),P<a.y&&e.clone(n,a),P>u.y&&e.clone(n,u),A<s.z&&e.clone(n,s),A>c.z&&e.clone(n,c)}var M=e.magnitudeSquared(e.subtract(l,o,y)),D=e.magnitudeSquared(e.subtract(u,a,y)),I=e.magnitudeSquared(e.subtract(c,s,y)),R=o,O=l,L=M;D>L&&(L=D,R=a,O=u),I>L&&(L=I,R=s,O=c);var N=C;N.x=.5*(R.x+O.x),N.y=.5*(R.y+O.y),N.z=.5*(R.z+O.z);var B=e.magnitudeSquared(e.subtract(O,N,y)),F=Math.sqrt(B),z=w;z.x=o.x,z.y=a.y,z.z=s.z;var V=S;V.x=l.x,V.y=u.y,V.z=c.z;var k=e.multiplyByScalar(e.add(z,V,y),.5,E),U=0;for(T=0;b>T;T++){e.clone(t[T],n);var W=e.magnitude(e.subtract(n,k,y));W>U&&(U=W);var G=e.magnitudeSquared(e.subtract(n,N,y));if(G>B){var H=Math.sqrt(G);F=.5*(F+H),B=F*F;var q=H-F;N.x=(F*N.x+q*n.x)/H,N.y=(F*N.y+q*n.y)/H,N.z=(F*N.z+q*n.z)/H}}return U>F?(e.clone(N,r.center),r.radius=F):(e.clone(k,r.center),r.radius=U),r};var b=new a,T=new e,x=new e,P=new t,A=new t;h.fromRectangle2D=function(e,t,r){return h.fromRectangleWithHeights2D(e,t,0,0,r)},h.fromRectangleWithHeights2D=function(t,n,o,a,s){if(i(s)||(s=new h),!i(t))return s.center=e.clone(e.ZERO,s.center),s.radius=0,s;n=r(n,b),c.southwest(t,P),P.height=o,c.northeast(t,A),A.height=a;var l=n.project(P,T),u=n.project(A,x),d=u.x-l.x,m=u.y-l.y,p=u.z-l.z;s.radius=.5*Math.sqrt(d*d+m*m+p*p);var f=s.center;return f.x=l.x+.5*d,f.y=l.y+.5*m,f.z=l.z+.5*p,s};var M=[];h.fromRectangle3D=function(e,t,n,a){t=r(t,o.WGS84),n=r(n,0);var s;return i(e)&&(s=c.subsample(e,t,n,M)),h.fromPoints(s,a)},h.fromVertices=function(t,n,o,a){if(i(a)||(a=new h),!i(t)||0===t.length)return a.center=e.clone(e.ZERO,a.center),a.radius=0,a;n=r(n,e.ZERO),o=r(o,3);var s=_;s.x=t[0]+n.x,s.y=t[1]+n.y,s.z=t[2]+n.z;for(var l=e.clone(s,d),u=e.clone(s,m),c=e.clone(s,p),b=e.clone(s,f),T=e.clone(s,v),x=e.clone(s,g),P=t.length,A=0;P>A;A+=o){var M=t[A]+n.x,D=t[A+1]+n.y,I=t[A+2]+n.z;s.x=M,s.y=D,s.z=I,M<l.x&&e.clone(s,l),M>b.x&&e.clone(s,b),D<u.y&&e.clone(s,u),D>T.y&&e.clone(s,T),I<c.z&&e.clone(s,c),I>x.z&&e.clone(s,x)}var R=e.magnitudeSquared(e.subtract(b,l,y)),O=e.magnitudeSquared(e.subtract(T,u,y)),L=e.magnitudeSquared(e.subtract(x,c,y)),N=l,B=b,F=R;O>F&&(F=O,N=u,B=T),L>F&&(F=L,N=c,B=x);var z=C;z.x=.5*(N.x+B.x),z.y=.5*(N.y+B.y),z.z=.5*(N.z+B.z);var V=e.magnitudeSquared(e.subtract(B,z,y)),k=Math.sqrt(V),U=w;U.x=l.x,U.y=u.y,U.z=c.z;var W=S;W.x=b.x,W.y=T.y,W.z=x.z;var G=e.multiplyByScalar(e.add(U,W,y),.5,E),H=0;for(A=0;P>A;A+=o){s.x=t[A]+n.x,s.y=t[A+1]+n.y,s.z=t[A+2]+n.z;var q=e.magnitude(e.subtract(s,G,y));q>H&&(H=q);var j=e.magnitudeSquared(e.subtract(s,z,y));if(j>V){var Y=Math.sqrt(j);k=.5*(k+Y),V=k*k;var X=Y-k;z.x=(k*z.x+X*s.x)/Y,z.y=(k*z.y+X*s.y)/Y,z.z=(k*z.z+X*s.z)/Y}}return H>k?(e.clone(z,a.center),a.radius=k):(e.clone(G,a.center),a.radius=H),a},h.fromCornerPoints=function(t,r,n){i(n)||(n=new h);var o=n.center;return e.add(t,r,o),e.multiplyByScalar(o,.5,o),n.radius=e.distance(o,r),n},h.fromEllipsoid=function(t,r){return i(r)||(r=new h),e.clone(e.ZERO,r.center),r.radius=t.maximumRadius,r},h.clone=function(t,r){return i(t)?i(r)?(r.center=e.clone(t.center,r.center),r.radius=t.radius,r):new h(t.center,t.radius):void 0},h.packedLength=4,h.pack=function(e,t,i){i=r(i,0);var n=e.center;t[i++]=n.x,t[i++]=n.y,t[i++]=n.z,t[i]=e.radius},h.unpack=function(e,t,n){t=r(t,0),i(n)||(n=new h);var o=n.center;return o.x=e[t++],o.y=e[t++],o.z=e[t++],n.radius=e[t],n};var D=new e,I=new e;h.union=function(t,r,n){i(n)||(n=new h);var o=t.center,a=r.center;e.add(o,a,I);var s=e.multiplyByScalar(I,.5,I),l=e.magnitude(e.subtract(o,s,D))+t.radius,u=e.magnitude(e.subtract(a,s,D))+r.radius;return n.radius=Math.max(l,u),e.clone(s,n.center),n};var R=new e;h.expand=function(t,r,i){i=h.clone(t,i);var n=e.magnitude(e.subtract(r,i.center,R));return n>i.radius&&(i.radius=n),i},h.intersect=function(t,r){var i=t.center,n=t.radius,o=e.dot(r,i)+r.w;return-n>o?s.OUTSIDE:n>o?s.INTERSECTING:s.INSIDE},h.transform=function(e,t,r){return i(r)||(r=new h),r.center=u.multiplyByPoint(t,e.center,r.center),r.radius=u.getMaximumScale(t)*e.radius,r};var O=new e;h.distanceSquaredTo=function(t,r){var i=e.subtract(t.center,r,O);return e.magnitudeSquared(i)-t.radius*t.radius},h.transformWithoutScale=function(e,t,r){return i(r)||(r=new h),r.center=u.multiplyByPoint(t,e.center,r.center),r.radius=e.radius,r};var L=new e;h.computePlaneDistances=function(t,r,n,o){i(o)||(o=new l);var a=e.subtract(t.center,r,L),s=e.multiplyByScalar(n,e.dot(n,a),L),u=e.magnitude(s);return o.start=u-t.radius,o.stop=u+t.radius,o};for(var N=new e,B=new e,F=new e,z=new e,V=new e,k=new t,U=new Array(8),W=0;8>W;++W)U[W]=new e;var G=new a;return h.projectTo2D=function(t,i,n){i=r(i,G);var o=i.ellipsoid,a=t.center,s=t.radius,l=o.geodeticSurfaceNormal(a,N),u=e.cross(e.UNIT_Z,l,B);e.normalize(u,u);var c=e.cross(l,u,F);e.normalize(c,c),e.multiplyByScalar(l,s,l),e.multiplyByScalar(c,s,c),e.multiplyByScalar(u,s,u);var d=e.negate(c,V),m=e.negate(u,z),p=U,f=p[0];e.add(l,c,f),e.add(f,u,f),f=p[1],e.add(l,c,f),e.add(f,m,f),f=p[2],e.add(l,d,f),e.add(f,m,f),f=p[3],e.add(l,d,f),e.add(f,u,f),e.negate(l,l),f=p[4],e.add(l,c,f),e.add(f,u,f),f=p[5],e.add(l,c,f),e.add(f,m,f),f=p[6],e.add(l,d,f),e.add(f,m,f),f=p[7],e.add(l,d,f),e.add(f,u,f);for(var v=p.length,g=0;v>g;++g){var _=p[g];e.add(a,_,_);var y=o.cartesianToCartographic(_,k);i.project(y,_)}n=h.fromPoints(p,n),a=n.center;var C=a.x,w=a.y,S=a.z;return a.x=S,a.y=C,a.z=w,n},h.equals=function(t,r){return t===r||i(t)&&i(r)&&e.equals(t.center,r.center)&&t.radius===r.radius},h.prototype.intersect=function(e){return h.intersect(this,e)},h.prototype.equals=function(e){return h.equals(this,e)},h.prototype.clone=function(e){return h.clone(this,e)},h}),r("Core/Fullscreen",["./defined","./defineProperties"],function(e,t){"use strict";var r,i={requestFullscreen:void 0,exitFullscreen:void 0,fullscreenEnabled:void 0,fullscreenElement:void 0,fullscreenchange:void 0,fullscreenerror:void 0},n={};return t(n,{element:{get:function(){return n.supportsFullscreen()?document[i.fullscreenElement]:void 0}},changeEventName:{get:function(){return n.supportsFullscreen()?i.fullscreenchange:void 0}},errorEventName:{get:function(){return n.supportsFullscreen()?i.fullscreenerror:void 0}},enabled:{get:function(){return n.supportsFullscreen()?document[i.fullscreenEnabled]:void 0}},fullscreen:{get:function(){return n.supportsFullscreen()?null!==n.element:void 0}}}),n.supportsFullscreen=function(){if(e(r))return r;r=!1;var t=document.body;if("function"==typeof t.requestFullscreen)return i.requestFullscreen="requestFullscreen",i.exitFullscreen="exitFullscreen",i.fullscreenEnabled="fullscreenEnabled",i.fullscreenElement="fullscreenElement",i.fullscreenchange="fullscreenchange",i.fullscreenerror="fullscreenerror",r=!0;for(var n,o=["webkit","moz","o","ms","khtml"],a=0,s=o.length;s>a;++a){var l=o[a];n=l+"RequestFullscreen","function"==typeof t[n]?(i.requestFullscreen=n,r=!0):(n=l+"RequestFullScreen","function"==typeof t[n]&&(i.requestFullscreen=n,r=!0)),n=l+"ExitFullscreen","function"==typeof document[n]?i.exitFullscreen=n:(n=l+"CancelFullScreen","function"==typeof document[n]&&(i.exitFullscreen=n)),n=l+"FullscreenEnabled",e(document[n])?i.fullscreenEnabled=n:(n=l+"FullScreenEnabled",e(document[n])&&(i.fullscreenEnabled=n)),n=l+"FullscreenElement",e(document[n])?i.fullscreenElement=n:(n=l+"FullScreenElement",e(document[n])&&(i.fullscreenElement=n)),n=l+"fullscreenchange",e(document["on"+n])&&("ms"===l&&(n="MSFullscreenChange"),i.fullscreenchange=n),n=l+"fullscreenerror",e(document["on"+n])&&("ms"===l&&(n="MSFullscreenError"),i.fullscreenerror=n)}return r},n.requestFullscreen=function(e){n.supportsFullscreen()&&e[i.requestFullscreen]()},n.exitFullscreen=function(){n.supportsFullscreen()&&document[i.exitFullscreen]()},n}),r("Core/FeatureDetection",["./defaultValue","./defined","./Fullscreen"],function(e,t,r){"use strict";function i(e){for(var t=e.split("."),r=0,i=t.length;i>r;++r)t[r]=parseInt(t[r],10);return t}function n(){if(!t(d)){var e=/ Chrome\/([\.0-9]+)/.exec(navigator.userAgent);null===e?d=!1:(d=!0,m=i(e[1]))}return d}function o(){return n()&&m}function a(){if(!t(p))if(n()||!/ Safari\/[\.0-9]+/.test(navigator.userAgent))p=!1;else{var e=/ Version\/([\.0-9]+)/.exec(navigator.userAgent);null===e?p=!1:(p=!0,f=i(e[1]))}return p}function s(){return a()&&f}function l(){if(!t(v)){var e=/ AppleWebKit\/([\.0-9]+)(\+?)/.exec(navigator.userAgent);null===e?v=!1:(v=!0,g=i(e[1]),g.isNightly=!!e[2])}return v}function u(){return l()&&g}function c(){if(!t(_)){var e;"Microsoft Internet Explorer"===navigator.appName?(e=/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(navigator.userAgent),null!==e&&(_=!0,y=i(e[1]))):"Netscape"===navigator.appName?(e=/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(navigator.userAgent),null!==e&&(_=!0,y=i(e[1]))):_=!1}return _}function h(){return c()&&y}var d,m,p,f,v,g,_,y,C={isChrome:n,chromeVersion:o,isSafari:a,safariVersion:s,isWebkit:l,webkitVersion:u,isInternetExplorer:c,internetExplorerVersion:h,hardwareConcurrency:e(navigator.hardwareConcurrency,3)};return C.supportsFullscreen=function(){return r.supportsFullscreen()},C.supportsTypedArrays=function(){return"undefined"!=typeof ArrayBuffer},C.supportsWebWorkers=function(){return"undefined"!=typeof Worker},C}),r("Core/ComponentDatatype",["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject"],function(e,t,r,i,n){"use strict";if(!i.supportsTypedArrays())return{};var o={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,FLOAT:5126,DOUBLE:5130};return o.getSizeInBytes=function(e){switch(e){case o.BYTE:return Int8Array.BYTES_PER_ELEMENT;case o.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case o.SHORT:return Int16Array.BYTES_PER_ELEMENT;case o.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case o.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case o.DOUBLE:return Float64Array.BYTES_PER_ELEMENT;default:throw new r("componentDatatype is not a valid value.")}},o.fromTypedArray=function(e){return e instanceof Int8Array?o.BYTE:e instanceof Uint8Array?o.UNSIGNED_BYTE:e instanceof Int16Array?o.SHORT:e instanceof Uint16Array?o.UNSIGNED_SHORT:e instanceof Float32Array?o.FLOAT:e instanceof Float64Array?o.DOUBLE:void 0},o.validate=function(e){return t(e)&&(e===o.BYTE||e===o.UNSIGNED_BYTE||e===o.SHORT||e===o.UNSIGNED_SHORT||e===o.FLOAT||e===o.DOUBLE)},o.createTypedArray=function(e,t){switch(e){case o.BYTE:return new Int8Array(t);case o.UNSIGNED_BYTE:return new Uint8Array(t);case o.SHORT:return new Int16Array(t);case o.UNSIGNED_SHORT:return new Uint16Array(t);case o.FLOAT:return new Float32Array(t);case o.DOUBLE:return new Float64Array(t);default:throw new r("componentDatatype is not a valid value.")}},o.createArrayBufferView=function(t,i,n,a){switch(n=e(n,0),a=e(a,(i.byteLength-n)/o.getSizeInBytes(t)),t){case o.BYTE:return new Int8Array(i,n,a);case o.UNSIGNED_BYTE:return new Uint8Array(i,n,a);case o.SHORT:return new Int16Array(i,n,a);case o.UNSIGNED_SHORT:return new Uint16Array(i,n,a);case o.FLOAT:return new Float32Array(i,n,a);case o.DOUBLE:return new Float64Array(i,n,a);default:throw new r("componentDatatype is not a valid value.")}},n(o)}),r("Core/Geometry",["./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(t){t=e(t,e.EMPTY_OBJECT),this.attributes=t.attributes,this.indices=t.indices,this.primitiveType=t.primitiveType,this.boundingSphere=t.boundingSphere};return i.computeNumberOfVertices=function(e){var i=-1;for(var n in e.attributes)if(e.attributes.hasOwnProperty(n)&&t(e.attributes[n])&&t(e.attributes[n].values)){var o=e.attributes[n],a=o.values.length/o.componentsPerAttribute;if(i!==a&&-1!==i)throw new r("All attribute lists must have the same number of attributes.");i=a}return i},i}),r("Core/GeometryAttribute",["./defaultValue","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.values=t.values};return t}),r("Core/GeometryAttributes",["./defaultValue"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.position=t.position,this.normal=t.normal,this.st=t.st,this.binormal=t.binormal,this.tangent=t.tangent,this.color=t.color};return t}),r("Core/PrimitiveType",["./freezeObject"],function(e){"use strict";var t={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,validate:function(e){return e===t.POINTS||e===t.LINES||e===t.LINE_LOOP||e===t.LINE_STRIP||e===t.TRIANGLES||e===t.TRIANGLE_STRIP||e===t.TRIANGLE_FAN}};return e(t)}),r("Core/VertexFormat",["./defaultValue","./freezeObject"],function(e,t){"use strict";var r=function(t){t=e(t,e.EMPTY_OBJECT),this.position=e(t.position,!1),this.normal=e(t.normal,!1),this.st=e(t.st,!1),this.binormal=e(t.binormal,!1),this.tangent=e(t.tangent,!1)};return r.POSITION_ONLY=t(new r({position:!0})),r.POSITION_AND_NORMAL=t(new r({position:!0,normal:!0})),r.POSITION_NORMAL_AND_ST=t(new r({position:!0,normal:!0,st:!0})),r.POSITION_AND_ST=t(new r({position:!0,st:!0})),r.ALL=t(new r({position:!0,normal:!0,st:!0,binormal:!0,tangent:!0})),r.DEFAULT=r.POSITION_NORMAL_AND_ST,r}),r("Core/BoxGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=new t,d=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.minimumCorner,n=e.maximumCorner,o=i(e.vertexFormat,c.DEFAULT);this._minimumCorner=t.clone(r),this._maximumCorner=t.clone(n),this._vertexFormat=o,this._workerName="createBoxGeometry"};return d.fromDimensions=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.dimensions,n=t.multiplyByScalar(r,.5,new t),o=t.negate(n,new t),a=n,s={minimumCorner:o,maximumCorner:a,vertexFormat:e.vertexFormat};return new d(s)},d.createGeometry=function(i){var n,o,c=i._minimumCorner,d=i._maximumCorner,m=i._vertexFormat,p=new l;if(m.position&&(m.st||m.normal||m.binormal||m.tangent)){if(m.position&&(o=new Float64Array(72),o[0]=c.x,o[1]=c.y,o[2]=d.z,o[3]=d.x,o[4]=c.y,o[5]=d.z,o[6]=d.x,o[7]=d.y,o[8]=d.z,o[9]=c.x,o[10]=d.y,o[11]=d.z,o[12]=c.x,o[13]=c.y,o[14]=c.z,o[15]=d.x,o[16]=c.y,o[17]=c.z,o[18]=d.x,o[19]=d.y,o[20]=c.z,o[21]=c.x,o[22]=d.y,o[23]=c.z,o[24]=d.x,o[25]=c.y,o[26]=c.z,o[27]=d.x,o[28]=d.y,o[29]=c.z,o[30]=d.x,o[31]=d.y,o[32]=d.z,o[33]=d.x,o[34]=c.y,o[35]=d.z,o[36]=c.x,o[37]=c.y,o[38]=c.z,o[39]=c.x,o[40]=d.y,o[41]=c.z,o[42]=c.x,o[43]=d.y,o[44]=d.z,o[45]=c.x,o[46]=c.y,o[47]=d.z,o[48]=c.x,o[49]=d.y,o[50]=c.z,o[51]=d.x,o[52]=d.y,o[53]=c.z,o[54]=d.x,o[55]=d.y,o[56]=d.z,o[57]=c.x,o[58]=d.y,o[59]=d.z,o[60]=c.x,o[61]=c.y,o[62]=c.z,o[63]=d.x,o[64]=c.y,o[65]=c.z,o[66]=d.x,o[67]=c.y,o[68]=d.z,o[69]=c.x,o[70]=c.y,o[71]=d.z,p.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:o})),m.normal){var f=new Float32Array(72);f[0]=0,f[1]=0,f[2]=1,f[3]=0,f[4]=0,f[5]=1,f[6]=0,f[7]=0,f[8]=1,f[9]=0,f[10]=0,f[11]=1,f[12]=0,f[13]=0,f[14]=-1,f[15]=0,f[16]=0,f[17]=-1,f[18]=0,f[19]=0,f[20]=-1,f[21]=0,f[22]=0,f[23]=-1,f[24]=1,f[25]=0,f[26]=0,f[27]=1,f[28]=0,f[29]=0,f[30]=1,f[31]=0,f[32]=0,f[33]=1,f[34]=0,f[35]=0,f[36]=-1,f[37]=0,f[38]=0,f[39]=-1,f[40]=0,f[41]=0,f[42]=-1,f[43]=0,f[44]=0,f[45]=-1,f[46]=0,f[47]=0,f[48]=0,f[49]=1,f[50]=0,f[51]=0,f[52]=1,f[53]=0,f[54]=0,f[55]=1,f[56]=0,f[57]=0,f[58]=1,f[59]=0,f[60]=0,f[61]=-1,f[62]=0,f[63]=0,f[64]=-1,f[65]=0,f[66]=0,f[67]=-1,f[68]=0,f[69]=0,f[70]=-1,f[71]=0,p.normal=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:f})}if(m.st){var v=new Float32Array(48);v[0]=0,v[1]=0,v[2]=1,v[3]=0,v[4]=1,v[5]=1,v[6]=0,v[7]=1,v[8]=1,v[9]=0,v[10]=0,v[11]=0,v[12]=0,v[13]=1,v[14]=1,v[15]=1,v[16]=0,v[17]=0,v[18]=1,v[19]=0,v[20]=1,v[21]=1,v[22]=0,v[23]=1,v[24]=1,v[25]=0,v[26]=0,v[27]=0,v[28]=0,v[29]=1,v[30]=1,v[31]=1,v[32]=1,v[33]=0,v[34]=0,v[35]=0,v[36]=0,v[37]=1,v[38]=1,v[39]=1,v[40]=0,v[41]=0,v[42]=1,v[43]=0,v[44]=1,v[45]=1,v[46]=0,v[47]=1,p.st=new s({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:v})}if(m.tangent){var g=new Float32Array(72);g[0]=1,g[1]=0,g[2]=0,g[3]=1,g[4]=0,g[5]=0,g[6]=1,g[7]=0,g[8]=0,g[9]=1,g[10]=0,g[11]=0,g[12]=-1,g[13]=0,g[14]=0,g[15]=-1,g[16]=0,g[17]=0,g[18]=-1,g[19]=0,g[20]=0,g[21]=-1,g[22]=0,g[23]=0,g[24]=0,g[25]=1,g[26]=0,g[27]=0,g[28]=1,g[29]=0,g[30]=0,g[31]=1,g[32]=0,g[33]=0,g[34]=1,g[35]=0,g[36]=0,g[37]=-1,g[38]=0,g[39]=0,g[40]=-1,g[41]=0,g[42]=0,g[43]=-1,g[44]=0,g[45]=0,g[46]=-1,g[47]=0,g[48]=-1,g[49]=0,g[50]=0,g[51]=-1,g[52]=0,g[53]=0,g[54]=-1,g[55]=0,g[56]=0,g[57]=-1,g[58]=0,g[59]=0,g[60]=1,g[61]=0,g[62]=0,g[63]=1,g[64]=0,g[65]=0,g[66]=1,g[67]=0,g[68]=0,g[69]=1,g[70]=0,g[71]=0,p.tangent=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:g})}if(m.binormal){var _=new Float32Array(72);_[0]=0,_[1]=1,_[2]=0,_[3]=0,_[4]=1,_[5]=0,_[6]=0,_[7]=1,_[8]=0,_[9]=0,_[10]=1,_[11]=0,_[12]=0,_[13]=1,_[14]=0,_[15]=0,_[16]=1,_[17]=0,_[18]=0,_[19]=1,_[20]=0,_[21]=0,_[22]=1,_[23]=0,_[24]=0,_[25]=0,_[26]=1,_[27]=0,_[28]=0,_[29]=1,_[30]=0,_[31]=0,_[32]=1,_[33]=0,_[34]=0,_[35]=1,_[36]=0,_[37]=0,_[38]=1,_[39]=0,_[40]=0,_[41]=1,_[42]=0,_[43]=0,_[44]=1,_[45]=0,_[46]=0,_[47]=1,_[48]=0,_[49]=0,_[50]=1,_[51]=0,_[52]=0,_[53]=1,_[54]=0,_[55]=0,_[56]=1,_[57]=0,_[58]=0,_[59]=1,_[60]=0,_[61]=0,_[62]=1,_[63]=0,_[64]=0,_[65]=1,_[66]=0,_[67]=0,_[68]=1,_[69]=0,_[70]=0,_[71]=1,p.binormal=new s({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:_})}n=new Uint16Array(36),n[0]=0,n[1]=1,n[2]=2,n[3]=0,n[4]=2,n[5]=3,n[6]=6,n[7]=5,n[8]=4,n[9]=7,n[10]=6,n[11]=4,n[12]=8,n[13]=9,n[14]=10,n[15]=8,n[16]=10,n[17]=11,n[18]=14,n[19]=13,n[20]=12,n[21]=15,n[22]=14,n[23]=12,n[24]=18,n[25]=17,n[26]=16,n[27]=19,n[28]=18,n[29]=16,n[30]=20,n[31]=21,n[32]=22,n[33]=20,n[34]=22,n[35]=23}else o=new Float64Array(24),o[0]=c.x,o[1]=c.y,o[2]=c.z,o[3]=d.x,o[4]=c.y,o[5]=c.z,o[6]=d.x,o[7]=d.y,o[8]=c.z,o[9]=c.x,o[10]=d.y,o[11]=c.z,o[12]=c.x,o[13]=c.y,o[14]=d.z,o[15]=d.x,o[16]=c.y,o[17]=d.z,o[18]=d.x,o[19]=d.y,o[20]=d.z,o[21]=c.x,o[22]=d.y,o[23]=d.z,p.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:o}),n=new Uint16Array(36),n[0]=4,n[1]=5,n[2]=6,n[3]=4,n[4]=6,n[5]=7,n[6]=1,n[7]=0,n[8]=3,n[9]=1,n[10]=3,n[11]=2,n[12]=1,n[13]=6,n[14]=5,n[15]=1,n[16]=2,n[17]=6,n[18]=2,n[19]=3,n[20]=7,n[21]=2,n[22]=7,n[23]=6,n[24]=3,n[25]=0,n[26]=4,n[27]=3,n[28]=4,n[29]=7,n[30]=0,n[31]=1,n[32]=5,n[33]=0,n[34]=5,n[35]=4;var y=t.subtract(d,c,h),C=.5*t.magnitude(y);return new a({attributes:p,indices:n,primitiveType:u.TRIANGLES,boundingSphere:new e(t.ZERO,C)})},d}),r("Core/BoxOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=new t,h=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.minimumCorner,n=e.maximumCorner;this._min=t.clone(r),this._max=t.clone(n),this._workerName="createBoxOutlineGeometry"};return h.fromDimensions=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.dimensions,n=t.multiplyByScalar(r,.5,new t),o=t.negate(n,new t),a=n,s={minimumCorner:o,maximumCorner:a};return new h(s)},h.createGeometry=function(i){var n=i._min,o=i._max,h=new l,d=new Uint16Array(24),m=new Float64Array(24);m[0]=n.x,m[1]=n.y,m[2]=n.z,m[3]=o.x,m[4]=n.y,m[5]=n.z,m[6]=o.x,m[7]=o.y,m[8]=n.z,m[9]=n.x,m[10]=o.y,m[11]=n.z,m[12]=n.x,m[13]=n.y,m[14]=o.z,m[15]=o.x,m[16]=n.y,m[17]=o.z,m[18]=o.x,m[19]=o.y,m[20]=o.z,m[21]=n.x,m[22]=o.y,m[23]=o.z,h.position=new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:m}),d[0]=4,d[1]=5,d[2]=5,d[3]=6,d[4]=6,d[5]=7,d[6]=7,d[7]=4,d[8]=0,d[9]=1,d[10]=1,d[11]=2,d[12]=2,d[13]=3,d[14]=3,d[15]=0,d[16]=0,d[17]=4,d[18]=1,d[19]=5,d[20]=2,d[21]=6,d[22]=3,d[23]=7;var p=t.subtract(o,n,c),f=.5*t.magnitude(p);return new a({attributes:h,indices:d,primitiveType:u.LINES,boundingSphere:new e(t.ZERO,f)})},h}),r("Core/Cartesian4",["./defaultValue","./defined","./DeveloperError","./freezeObject"],function(e,t,r,i){"use strict";var n=function(t,r,i,n){this.x=e(t,0),this.y=e(r,0),this.z=e(i,0),this.w=e(n,0)};n.fromElements=function(e,r,i,o,a){return t(a)?(a.x=e,a.y=r,a.z=i,a.w=o,a):new n(e,r,i,o)},n.fromColor=function(e,r){return t(r)?(r.x=e.red,r.y=e.green,r.z=e.blue,r.w=e.alpha,r):new n(e.red,e.green,e.blue,e.alpha)},n.clone=function(e,r){return t(e)?t(r)?(r.x=e.x,r.y=e.y,r.z=e.z,r.w=e.w,r):new n(e.x,e.y,e.z,e.w):void 0},n.packedLength=4,n.pack=function(t,r,i){i=e(i,0),r[i++]=t.x,r[i++]=t.y,r[i++]=t.z,r[i]=t.w},n.unpack=function(r,i,o){return i=e(i,0),t(o)||(o=new n),o.x=r[i++],o.y=r[i++],o.z=r[i++],o.w=r[i],o},n.fromArray=n.unpack,n.maximumComponent=function(e){return Math.max(e.x,e.y,e.z,e.w)},n.minimumComponent=function(e){return Math.min(e.x,e.y,e.z,e.w)},n.minimumByComponent=function(e,t,r){return r.x=Math.min(e.x,t.x),r.y=Math.min(e.y,t.y),r.z=Math.min(e.z,t.z),r.w=Math.min(e.w,t.w),r},n.maximumByComponent=function(e,t,r){return r.x=Math.max(e.x,t.x),r.y=Math.max(e.y,t.y),r.z=Math.max(e.z,t.z),r.w=Math.max(e.w,t.w),r},n.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},n.magnitude=function(e){return Math.sqrt(n.magnitudeSquared(e))};var o=new n;n.distance=function(e,t){return n.subtract(e,t,o),n.magnitude(o)},n.normalize=function(e,t){var r=n.magnitude(e);return t.x=e.x/r,t.y=e.y/r,t.z=e.z/r,t.w=e.w/r,t
},n.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},n.multiplyComponents=function(e,t,r){return r.x=e.x*t.x,r.y=e.y*t.y,r.z=e.z*t.z,r.w=e.w*t.w,r},n.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r.w=e.w+t.w,r},n.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r.w=e.w-t.w,r},n.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r.w=e.w*t,r},n.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r.w=e.w/t,r},n.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},n.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t.w=Math.abs(e.w),t};var a=new n;n.lerp=function(e,t,r,i){return n.multiplyByScalar(t,r,a),i=n.multiplyByScalar(e,1-r,i),n.add(a,i,i)};var s=new n;return n.mostOrthogonalAxis=function(e,t){var r=n.normalize(e,s);return n.abs(r,r),t=r.x<=r.y?r.x<=r.z?r.x<=r.w?n.clone(n.UNIT_X,t):n.clone(n.UNIT_W,t):r.z<=r.w?n.clone(n.UNIT_Z,t):n.clone(n.UNIT_W,t):r.y<=r.z?r.y<=r.w?n.clone(n.UNIT_Y,t):n.clone(n.UNIT_W,t):r.z<=r.w?n.clone(n.UNIT_Z,t):n.clone(n.UNIT_W,t)},n.equals=function(e,r){return e===r||t(e)&&t(r)&&e.x===r.x&&e.y===r.y&&e.z===r.z&&e.w===r.w},n.equalsEpsilon=function(e,r,i){return e===r||t(e)&&t(r)&&Math.abs(e.x-r.x)<=i&&Math.abs(e.y-r.y)<=i&&Math.abs(e.z-r.z)<=i&&Math.abs(e.w-r.w)<=i},n.ZERO=i(new n(0,0,0,0)),n.UNIT_X=i(new n(1,0,0,0)),n.UNIT_Y=i(new n(0,1,0,0)),n.UNIT_Z=i(new n(0,0,1,0)),n.UNIT_W=i(new n(0,0,0,1)),n.prototype.clone=function(e){return n.clone(this,e)},n.prototype.equals=function(e){return n.equals(this,e)},n.prototype.equalsEpsilon=function(e,t){return n.equalsEpsilon(this,e,t)},n.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},n}),r("Core/Spline",["./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(){this.times=void 0,this.points=void 0,r.throwInstantiationError()};return i.prototype.evaluate=r.throwInstantiationError,i.prototype.findTimeInterval=function(t,r){var i=this.times,n=i.length;if(r=e(r,0),t>=i[r]){if(n>r+1&&t<i[r+1])return r;if(n>r+2&&t<i[r+2])return r+1}else if(r-1>=0&&t>=i[r-1])return r-1;var o;if(t>i[r])for(o=r;n-1>o&&!(t>=i[o]&&t<i[o+1]);++o);else for(o=r-1;o>=0&&!(t>=i[o]&&t<i[o+1]);--o);return o===n-1&&(o=n-2),o},i}),r("Core/LinearSpline",["./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Spline"],function(e,t,r,i,n,o){"use strict";var a=function(e){e=t(e,t.EMPTY_OBJECT);var r=e.points,i=e.times;this._times=i,this._points=r,this._lastTimeIndex=0};return i(a.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}}}),a.prototype.findTimeInterval=o.prototype.findTimeInterval,a.prototype.evaluate=function(t,i){var n=this.points,o=this.times,a=this._lastTimeIndex=this.findTimeInterval(t,this._lastTimeIndex),s=(t-o[a])/(o[a+1]-o[a]);return r(i)||(i=new e),e.lerp(n[a],n[a+1],s,i)},a}),r("Core/TridiagonalSystemSolver",["./Cartesian3","./defined","./DeveloperError"],function(e){"use strict";var t={};return t.solve=function(t,r,i,n){var o,a=new Array(i.length),s=new Array(n.length),l=new Array(n.length);for(o=0;o<s.length;o++)s[o]=new e,l[o]=new e;a[0]=i[0]/r[0],s[0]=e.multiplyByScalar(n[0],1/r[0],s[0]);var u;for(o=1;o<a.length;++o)u=1/(r[o]-a[o-1]*t[o-1]),a[o]=i[o]*u,s[o]=e.subtract(n[o],e.multiplyByScalar(s[o-1],t[o-1],s[o]),s[o]),s[o]=e.multiplyByScalar(s[o],u,s[o]);for(u=1/(r[o]-a[o-1]*t[o-1]),s[o]=e.subtract(n[o],e.multiplyByScalar(s[o-1],t[o-1],s[o]),s[o]),s[o]=e.multiplyByScalar(s[o],u,s[o]),l[l.length-1]=s[s.length-1],o=l.length-2;o>=0;--o)l[o]=e.subtract(s[o],e.multiplyByScalar(l[o+1],a[o],l[o]),l[o]);return l},t}),r("Core/HermiteSpline",["./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./LinearSpline","./Matrix4","./Spline","./TridiagonalSystemSolver"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(t,r,n){var o=d,a=p,s=m,l=f;o.length=a.length=t.length-1,s.length=l.length=t.length;var c;o[0]=s[0]=1,a[0]=0;var h=l[0];for(i(h)||(h=l[0]=new e),e.clone(r,h),c=1;c<o.length-1;++c)o[c]=a[c]=1,s[c]=4,h=l[c],i(h)||(h=l[c]=new e),e.subtract(t[c+1],t[c-1],h),e.multiplyByScalar(h,3,h);return o[c]=0,a[c]=1,s[c]=4,h=l[c],i(h)||(h=l[c]=new e),e.subtract(t[c+1],t[c-1],h),e.multiplyByScalar(h,3,h),s[c+1]=1,h=l[c+1],i(h)||(h=l[c+1]=new e),e.clone(n,h),u.solve(o,s,a,l)}function h(t){var r=d,n=p,o=m,a=f;r.length=n.length=t.length-1,o.length=a.length=t.length;var s;r[0]=n[0]=1,o[0]=2;var l=a[0];for(i(l)||(l=a[0]=new e),e.subtract(t[1],t[0],l),e.multiplyByScalar(l,3,l),s=1;s<r.length;++s)r[s]=n[s]=1,o[s]=4,l=a[s],i(l)||(l=a[s]=new e),e.subtract(t[s+1],t[s-1],l),e.multiplyByScalar(l,3,l);return o[s]=2,l=a[s],i(l)||(l=a[s]=new e),e.subtract(t[s],t[s-1],l),e.multiplyByScalar(l,3,l),u.solve(r,o,n,a)}var d=[],m=[],p=[],f=[],v=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.points,i=e.times,n=e.inTangents,o=e.outTangents;this._times=i,this._points=t,this._inTangents=n,this._outTangents=o,this._lastTimeIndex=0};n(v.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},inTangents:{get:function(){return this._inTangents}},outTangents:{get:function(){return this._outTangents}}}),v.createC1=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points,n=e.tangents,o=n.slice(0,n.length-1),a=n.slice(1,n.length);return new v({times:t,points:i,inTangents:a,outTangents:o})},v.createNaturalCubic=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points;if(i.length<3)return new a({points:i,times:t});var n=h(i),o=n.slice(0,n.length-1),s=n.slice(1,n.length);return new v({times:t,points:i,inTangents:s,outTangents:o})},v.createClampedCubic=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.times,i=e.points,n=e.firstTangent,o=e.lastTangent;if(i.length<3)return new a({points:i,times:t});var s=c(i,n,o),l=s.slice(0,s.length-1),u=s.slice(1,s.length);return new v({times:t,points:i,inTangents:u,outTangents:l})},v.hermiteCoefficientMatrix=new s(2,-3,0,1,-2,3,0,0,1,-2,1,0,1,-1,0,0),v.prototype.findTimeInterval=l.prototype.findTimeInterval;var g=new t,_=new e;return v.prototype.evaluate=function(t,r){i(r)||(r=new e);var n=this.points,o=this.times,a=this.inTangents,l=this.outTangents,u=this._lastTimeIndex=this.findTimeInterval(t,this._lastTimeIndex),c=(t-o[u])/(o[u+1]-o[u]),h=g;h.z=c,h.y=c*c,h.x=h.y*c,h.w=1;var d=s.multiplyByVector(v.hermiteCoefficientMatrix,h,h);return r=e.multiplyByScalar(n[u],d.x,r),e.multiplyByScalar(n[u+1],d.y,_),e.add(r,_,r),e.multiplyByScalar(l[u],d.z,_),e.add(r,_,r),e.multiplyByScalar(a[u],d.w,_),e.add(r,_,r)},v}),r("Core/CatmullRomSpline",["./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./HermiteSpline","./Matrix4","./Spline"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(t){var r=t.points,n=t.times;if(r.length<3){var o=n[0],l=1/(n[1]-o),u=r[0],m=r[1];return function(t,r){i(r)||(r=new e);var n=(t-o)*l;return e.lerp(u,m,n,r)}}return function(o,l){i(l)||(l=new e);var u=t._lastTimeIndex=t.findTimeInterval(o,t._lastTimeIndex),m=(o-n[u])/(n[u+1]-n[u]),p=c;p.z=m,p.y=m*m,p.x=p.y*m,p.w=1;var v,g,_,y,C;return 0===u?(v=r[0],g=r[1],_=t.firstTangent,y=e.subtract(r[2],v,h),e.multiplyByScalar(y,.5,y),C=s.multiplyByVector(a.hermiteCoefficientMatrix,p,p)):u===r.length-2?(v=r[u],g=r[u+1],y=t.lastTangent,_=e.subtract(g,r[u-1],h),e.multiplyByScalar(_,.5,_),C=s.multiplyByVector(a.hermiteCoefficientMatrix,p,p)):(v=r[u-1],g=r[u],_=r[u+1],y=r[u+2],C=s.multiplyByVector(f.catmullRomCoefficientMatrix,p,p)),l=e.multiplyByScalar(v,C.x,l),e.multiplyByScalar(g,C.y,d),e.add(l,d,l),e.multiplyByScalar(_,C.z,d),e.add(l,d,l),e.multiplyByScalar(y,C.w,d),e.add(l,d,l)}}var c=new t,h=new e,d=new e,m=new e,p=new e,f=function(t){t=r(t,r.EMPTY_OBJECT);var n=t.points,o=t.times,a=t.firstTangent,s=t.lastTangent;if(n.length>2&&(i(a)||(a=m,e.multiplyByScalar(n[1],2,a),e.subtract(a,n[2],a),e.subtract(a,n[0],a),e.multiplyByScalar(a,.5,a)),!i(s))){var l=n.length-1;s=p,e.multiplyByScalar(n[l-1],2,s),e.subtract(n[l],s,s),e.add(s,n[l-2],s),e.multiplyByScalar(s,.5,s)}this._times=o,this._points=n,this._firstTangent=e.clone(a),this._lastTangent=e.clone(s),this._evaluateFunction=u(this),this._lastTimeIndex=0};return n(f.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},firstTangent:{get:function(){return this._firstTangent}},lastTangent:{get:function(){return this._lastTangent}}}),f.catmullRomCoefficientMatrix=new s(-.5,1,-.5,0,1.5,-2.5,0,1,-1.5,2,.5,0,.5,-.5,0,0),f.prototype.findTimeInterval=l.prototype.findTimeInterval,f.prototype.evaluate=function(e,t){return this._evaluateFunction(e,t)},f}),r("Core/parseResponseHeaders",[],function(){"use strict";var e=function(e){var t={};if(!e)return t;for(var r=e.split("\r\n"),i=0;i<r.length;++i){var n=r[i],o=n.indexOf(": ");if(o>0){var a=n.substring(0,o),s=n.substring(o+2);t[a]=s}}return t};return e}),r("Core/RequestErrorEvent",["./defined","./parseResponseHeaders"],function(e,t){"use strict";var r=function(e,r,i){this.statusCode=e,this.response=r,this.responseHeaders=i,"string"==typeof this.responseHeaders&&(this.responseHeaders=t(this.responseHeaders))};return r.prototype.toString=function(){var t="Request has failed.";return e(this.statusCode)&&(t+=" Status Code: "+this.statusCode),t},r}),r("Core/loadWithXhr",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError","./RequestErrorEvent","./RuntimeError"],function(e,t,r,i,n,o){"use strict";function a(e,t){var r=decodeURIComponent(t);return e?atob(r):r}function s(e,t){for(var r=a(e,t),i=new ArrayBuffer(r.length),n=new Uint8Array(i),o=0;o<r.length;o++)n[o]=r.charCodeAt(o);return i}function l(e,r){r=t(r,"");var n=e[1],o=!!e[2],l=e[3];switch(r){case"":case"text":return a(o,l);case"arraybuffer":return s(o,l);case"blob":var u=s(o,l);return new Blob([u],{type:n});case"document":var c=new DOMParser;return c.parseFromString(a(o,l),n);case"json":return JSON.parse(a(o,l));default:throw new i("Unhandled responseType: "+r)}}var u=function(r){r=t(r,t.EMPTY_OBJECT);var i=r.responseType,n=t(r.method,"GET"),o=r.data,a=r.headers,s=r.overrideMimeType;return e(r.url,function(t){var r=e.defer();return u.load(t,i,n,o,a,r,s),r.promise})},c=/^data:(.*?)(;base64)?,(.*)$/;return u.load=function(e,t,i,a,s,u,h){var d=c.exec(e);if(null!==d)return u.resolve(l(d,t)),void 0;var m=new XMLHttpRequest;if(r(h)&&r(m.overrideMimeType)&&m.overrideMimeType(h),m.open(i,e,!0),r(s))for(var p in s)s.hasOwnProperty(p)&&m.setRequestHeader(p,s[p]);r(t)&&(m.responseType=t),m.onload=function(){200===m.status?r(m.response)?u.resolve(m.response):r(m.responseXML)&&m.responseXML.hasChildNodes()?u.resolve(m.responseXML):r(m.responseText)?u.resolve(m.responseText):u.reject(new o("unknown XMLHttpRequest response type.")):u.reject(new n(m.status,m.response,m.getAllResponseHeaders()))},m.onerror=function(){u.reject(new n)},m.send(a)},u.defaultLoad=u.load,u}),r("Core/loadArrayBuffer",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"arraybuffer",headers:r})};return t}),r("Core/clone",["./defaultValue"],function(e){"use strict";var t=function(r,i){if(null===r||"object"!=typeof r)return r;i=e(i,!1);var n=new r.constructor;for(var o in r)if(r.hasOwnProperty(o)){var a=r[o];i&&(a=t(a,i)),n[o]=a}return n};return t}),r("Core/loadText",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,headers:r})};return t}),r("Core/loadJson",["./clone","./defined","./DeveloperError","./loadText"],function(e,t,r,i){"use strict";var n={Accept:"application/json,*/*;q=0.01"},o=function(r,o){return t(o)?t(o.Accept)||(o=e(o),o.Accept=n.Accept):o=n,i(r,o).then(function(e){return JSON.parse(e)})};return o}),r("Core/Intersections2D",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r={};return r.clipTriangleAtAxisAlignedThreshold=function(e,r,i,n,o,a){t(a)?a.length=0:a=[];var s,l,u;r?(s=e>i,l=e>n,u=e>o):(s=i>e,l=n>e,u=o>e);var c,h,d,m,p,f,v=s+l+u;return 1===v?s?(c=(e-i)/(n-i),h=(e-i)/(o-i),a.push(1),a.push(2),1!==h&&(a.push(-1),a.push(0),a.push(2),a.push(h)),1!==c&&(a.push(-1),a.push(0),a.push(1),a.push(c))):l?(d=(e-n)/(o-n),m=(e-n)/(i-n),a.push(2),a.push(0),1!==m&&(a.push(-1),a.push(1),a.push(0),a.push(m)),1!==d&&(a.push(-1),a.push(1),a.push(2),a.push(d))):u&&(p=(e-o)/(i-o),f=(e-o)/(n-o),a.push(0),a.push(1),1!==f&&(a.push(-1),a.push(2),a.push(1),a.push(f)),1!==p&&(a.push(-1),a.push(2),a.push(0),a.push(p))):2===v?s||i===e?l||n===e?u||o===e||(h=(e-i)/(o-i),d=(e-n)/(o-n),a.push(2),a.push(-1),a.push(0),a.push(2),a.push(h),a.push(-1),a.push(1),a.push(2),a.push(d)):(f=(e-o)/(n-o),c=(e-i)/(n-i),a.push(1),a.push(-1),a.push(2),a.push(1),a.push(f),a.push(-1),a.push(0),a.push(1),a.push(c)):(m=(e-n)/(i-n),p=(e-o)/(i-o),a.push(0),a.push(-1),a.push(1),a.push(0),a.push(m),a.push(-1),a.push(2),a.push(0),a.push(p)):3===v||(a.push(0),a.push(1),a.push(2)),a},r.computeBarycentricCoordinates=function(r,i,n,o,a,s,l,u,c){var h=n-l,d=l-a,m=s-u,p=o-u,f=1/(m*h+d*p),v=i-u,g=r-l,_=(m*g+d*v)*f,y=(-p*g+h*v)*f,C=1-_-y;return t(c)?(c.x=_,c.y=y,c.z=C,c):new e(_,y,C)},r}),r("Core/QuantizedMeshTerrainData",["../ThirdParty/when","./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Intersections2D","./Math","./TaskProcessor","./TerrainMesh"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t){m.length=e.length;for(var r=!1,i=0,n=e.length;n>i;++i)m[i]=e[i],r=r||i>0&&t(e[i-1],e[i])>0;return r?(m.sort(t),new Uint16Array(m)):e}var d=function(e){function t(e,t){return a[e]-a[t]}function r(e,t){return o[e]-o[t]}this._quantizedVertices=e.quantizedVertices,this._encodedNormals=e.encodedNormals,this._indices=e.indices,this._minimumHeight=e.minimumHeight,this._maximumHeight=e.maximumHeight,this._boundingSphere=e.boundingSphere,this._horizonOcclusionPoint=e.horizonOcclusionPoint;var n=this._quantizedVertices.length/3,o=this._uValues=this._quantizedVertices.subarray(0,n),a=this._vValues=this._quantizedVertices.subarray(n,2*n);this._heightValues=this._quantizedVertices.subarray(2*n,3*n),this._westIndices=h(e.westIndices,t),this._southIndices=h(e.southIndices,r),this._eastIndices=h(e.eastIndices,t),this._northIndices=h(e.northIndices,r),this._westSkirtHeight=e.westSkirtHeight,this._southSkirtHeight=e.southSkirtHeight,this._eastSkirtHeight=e.eastSkirtHeight,this._northSkirtHeight=e.northSkirtHeight,this._childTileMask=i(e.childTileMask,15),this._createdByUpsampling=i(e.createdByUpsampling,!1),this._waterMask=e.waterMask};o(d.prototype,{waterMask:{get:function(){return this._waterMask}}});var m=[],p=new u("createVerticesFromQuantizedTerrainMesh");d.prototype.createMesh=function(t,r,i,o){var a=t.ellipsoid,s=t.tileXYToRectangle(r,i,o),l=p.scheduleTask({minimumHeight:this._minimumHeight,maximumHeight:this._maximumHeight,quantizedVertices:this._quantizedVertices,octEncodedNormals:this._encodedNormals,indices:this._indices,westIndices:this._westIndices,southIndices:this._southIndices,eastIndices:this._eastIndices,northIndices:this._northIndices,westSkirtHeight:this._westSkirtHeight,southSkirtHeight:this._southSkirtHeight,eastSkirtHeight:this._eastSkirtHeight,northSkirtHeight:this._northSkirtHeight,rectangle:s,relativeToCenter:this._boundingSphere.center,ellipsoid:a});if(!n(l))return void 0;var u=this;return e(l,function(e){return new c(u._boundingSphere.center,new Float32Array(e.vertices),new Uint16Array(e.indices),u._minimumHeight,u._maximumHeight,u._boundingSphere,u._horizonOcclusionPoint)})};var f=new u("upsampleQuantizedTerrainMesh");d.prototype.upsample=function(i,o,a,s,l,u,c){var h=2*o!==l,m=2*a===u,p=i.ellipsoid,v=i.tileXYToRectangle(l,u,c),g=f.scheduleTask({vertices:this._quantizedVertices,indices:this._indices,encodedNormals:this._encodedNormals,minimumHeight:this._minimumHeight,maximumHeight:this._maximumHeight,isEastChild:h,isNorthChild:m,childRectangle:v,ellipsoid:p});if(!n(g))return void 0;var _=Math.min(this._westSkirtHeight,this._eastSkirtHeight);_=Math.min(_,this._southSkirtHeight),_=Math.min(_,this._northSkirtHeight);var y=h?.5*_:this._westSkirtHeight,C=m?.5*_:this._southSkirtHeight,w=h?this._eastSkirtHeight:.5*_,S=m?this._northSkirtHeight:.5*_;return e(g,function(e){var i;return n(e.encodedNormals)&&(i=new Uint8Array(e.encodedNormals)),new d({quantizedVertices:new Uint16Array(e.vertices),indices:new Uint16Array(e.indices),encodedNormals:i,minimumHeight:e.minimumHeight,maximumHeight:e.maximumHeight,boundingSphere:t.clone(e.boundingSphere),horizonOcclusionPoint:r.clone(e.horizonOcclusionPoint),westIndices:e.westIndices,southIndices:e.southIndices,eastIndices:e.eastIndices,northIndices:e.northIndices,westSkirtHeight:y,southSkirtHeight:C,eastSkirtHeight:w,northSkirtHeight:S,childTileMask:0,createdByUpsampling:!0})})};var v=32767,g=new r;return d.prototype.interpolateHeight=function(e,t,r){var i=(t-e.west)/(e.east-e.west);i*=v;var n=(r-e.south)/(e.north-e.south);n*=v;for(var o=this._uValues,a=this._vValues,u=this._heightValues,c=this._indices,h=0,d=c.length;d>h;h+=3){var m=c[h],p=c[h+1],f=c[h+2],_=o[m],y=o[p],C=o[f],w=a[m],S=a[p],E=a[f],b=s.computeBarycentricCoordinates(i,n,_,w,y,S,C,E,g);if(b.x>=-1e-15&&b.y>=-1e-15&&b.z>=-1e-15){var T=b.x*u[m]+b.y*u[p]+b.z*u[f];return l.lerp(this._minimumHeight,this._maximumHeight,T/v)}}return void 0},d.prototype.isChildAvailable=function(e,t,r,i){var n=2;return r!==2*e&&++n,i!==2*t&&(n-=2),0!==(this._childTileMask&1<<n)},d.prototype.wasCreatedByUpsampling=function(){return this._createdByUpsampling},d}),r("Core/formatError",["./defined"],function(e){"use strict";var t=function(t){var r,i=t.name,n=t.message;r=e(i)&&e(n)?i+": "+n:t.toString();var o=t.stack;return e(o)&&(r+="\n"+o),r};return t}),r("Core/TileProviderError",["./defaultValue","./defined","./formatError"],function(e,t,r){"use strict";var i=function(t,r,i,n,o,a){this.provider=t,this.message=r,this.x=i,this.y=n,this.level=o,this.timesRetried=e(a,0),this.retry=!1};return i.handleError=function(e,n,o,a,s,l,u,c){var h=e;return t(e)?(h.provider=n,h.message=a,h.x=s,h.y=l,h.level=u,h.retry=!1,++h.timesRetried):h=new i(n,a,s,l,u,0),o.numberOfListeners>0?o.raiseEvent(h):console.log('An error occurred in "'+n.constructor.name+'": '+r(a)),h.retry&&t(c)&&c(),h},i.handleSuccess=function(e){t(e)&&(e.timesRetried=-1)},i}),r("Core/CesiumTerrainProvider",["../ThirdParty/Uri","../ThirdParty/when","./BoundingSphere","./Cartesian3","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Event","./GeographicTilingScheme","./HeightmapTerrainData","./loadArrayBuffer","./loadJson","./QuantizedMeshTerrainData","./RuntimeError","./TerrainProvider","./throttleRequestByServer","./TileProviderError"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e){return d(e,P)}function C(e){return d(e,A)}function w(e,t){var r=new Uint16Array(t,0,e._heightmapWidth*e._heightmapWidth);return new h({buffer:r,childTileMask:new Uint8Array(t,r.byteLength,1)[0],waterMask:new Uint8Array(t,r.byteLength+1,t.byteLength-r.byteLength-1),width:e._heightmapWidth,height:e._heightmapWidth,structure:e._heightmapStructure})}function S(e,t,n,o,a,s){function l(e){return e>>1^-(1&e)}var u=0,c=3,h=c+1,d=Float64Array.BYTES_PER_ELEMENT*c,m=Float64Array.BYTES_PER_ELEMENT*h,v=3,g=Uint16Array.BYTES_PER_ELEMENT*v,_=3,y=Uint16Array.BYTES_PER_ELEMENT*_,C=new DataView(t),w=new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0));u+=d;var S=C.getFloat32(u,!0);u+=Float32Array.BYTES_PER_ELEMENT;var b=C.getFloat32(u,!0);u+=Float32Array.BYTES_PER_ELEMENT;var T=new r(new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0)),C.getFloat64(u+d,!0));u+=m;var P=new i(C.getFloat64(u,!0),C.getFloat64(u+8,!0),C.getFloat64(u+16,!0));u+=d;var A=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var M=new Uint16Array(t,u,3*A);if(u+=A*g,A>65536)throw new f("CesiumTerrainProvider currently does not support tiles with more than 65536 vertices.");var D,I=M.subarray(0,A),R=M.subarray(A,2*A),O=M.subarray(2*A,3*A),L=0,N=0,B=0;for(D=0;A>D;++D)L+=l(I[D]),N+=l(R[D]),B+=l(O[D]),I[D]=L,R[D]=N,O[D]=B;var F=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var z=new Uint16Array(t,u,F*_);u+=F*y;var V=0;for(D=0;D<z.length;++D){var k=z[D];z[D]=V-k,0===k&&++V}var U=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var W=new Uint16Array(t,u,U);u+=U*Uint16Array.BYTES_PER_ELEMENT;var G=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var H=new Uint16Array(t,u,G);u+=G*Uint16Array.BYTES_PER_ELEMENT;var q=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var j=new Uint16Array(t,u,q);u+=q*Uint16Array.BYTES_PER_ELEMENT;var Y=C.getUint32(u,!0);u+=Uint32Array.BYTES_PER_ELEMENT;var X=new Uint16Array(t,u,Y);u+=Y*Uint16Array.BYTES_PER_ELEMENT;for(var Z;u<C.byteLength;){var Q=C.getUint8(u);u+=Uint8Array.BYTES_PER_ELEMENT;var J=C.getUint32(u);u+=Uint32Array.BYTES_PER_ELEMENT,Q===x.OCT_VERTEX_NORMALS&&(Z=new Uint8Array(t,u,2*A)),u+=J}var K=5*e.getLevelMaximumGeometricError(n);return new p({center:w,minimumHeight:S,maximumHeight:b,boundingSphere:T,horizonOcclusionPoint:P,quantizedVertices:M,encodedNormals:Z,indices:z,westIndices:W,southIndices:H,eastIndices:j,northIndices:X,westSkirtHeight:K,southSkirtHeight:K,eastSkirtHeight:K,northSkirtHeight:K,childTileMask:E(e,n,o,s)})}function E(e,t,r,i){var n=e._availableTiles;if(!n||0===n.length)return 15;var o=t+1;if(o>=n.length)return 0;var a=n[o],s=0;return s|=b(a,2*r,2*i)?1:0,s|=b(a,2*r+1,2*i)?2:0,s|=b(a,2*r,2*i+1)?4:0,s|=b(a,2*r+1,2*i+1)?8:0}function b(e,t,r){for(var i=0,n=e.length;n>i;++i){var o=e[i];if(t>=o.startX&&t<=o.endX&&r>=o.startY&&r<=o.endY)return!0}return!1}var T=function(r){function i(t){var r;if(!t.format)return r="The tile format is not specified in the layer.json file.",p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;if(!t.tiles||0===t.tiles.length)return r="The layer.json file does not specify any tile URL templates.",p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;if("heightmap-1.0"===t.format)f._heightmapStructure={heightScale:.2,heightOffset:-1e3,elementsPerHeight:1,stride:1,elementMultiplier:256,isBigEndian:!1},f._hasWaterMask=!0;else{if(0!==t.format.indexOf("quantized-mesh-1."))return r='The tile format "'+t.format+'" is invalid or not supported.',p=_.handleError(p,f,f._errorEvent,r,void 0,void 0,void 0,l),void 0;f._hasWaterMask=!1}var i=new e(d);f._tileUrlTemplates=t.tiles;for(var o=0;o<f._tileUrlTemplates.length;++o)f._tileUrlTemplates[o]=new e(f._tileUrlTemplates[o]).resolve(i).toString().replace("{version}",t.version);f._availableTiles=t.available,!a(f._credit)&&a(t.attribution)&&null!==t.attribution&&(f._credit=new n(t.attribution)),a(t.extensions)&&-1!==t.extensions.indexOf("vertexnormals")&&(f._hasVertexNormals=!0),f._ready=!0}function s(e){if(a(e)&&404===e.statusCode)return i({tilejson:"2.1.0",format:"heightmap-1.0",version:"1.0.0",scheme:"tms",tiles:["{z}/{x}/{y}.terrain?v={version}"]}),void 0;var t="An error occurred while accessing "+d+".";p=_.handleError(p,f,f._errorEvent,t,void 0,void 0,void 0,l)}function l(){var e=m(d);t(e,i,s)}this._url=r.url,(0===this._url.length||"/"!==this._url[this._url.length-1])&&(this._url=this._url+"/"),this._proxy=r.proxy,this._tilingScheme=new c({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:1}),this._heightmapWidth=65,this._levelZeroMaximumGeometricError=v.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,this._heightmapWidth,this._tilingScheme.getNumberOfXTilesAtLevel(0)),this._heightmapStructure=void 0,this._hasWaterMask=!1,this._hasVertexNormals=!1,this._requestVertexNormals=o(r.requestVertexNormals,!1),this._errorEvent=new u;var h=r.credit;"string"==typeof h&&(h=new n(h)),this._credit=h,this._ready=!1;var d=this._url+"layer.json";a(this._proxy)&&(d=this._proxy.getURL(d));var p,f=this;l()},x={OCT_VERTEX_NORMALS:1},P={Accept:"application/vnd.quantized-mesh;extensions=vertexnormals,application/octet-stream;q=0.9,*/*;q=0.01"},A={Accept:"application/vnd.quantized-mesh,application/octet-stream;q=0.9,*/*;q=0.01"};return T.prototype.requestTileGeometry=function(e,r,i,n){var s=this._tileUrlTemplates;if(0===s.length)return void 0;var l=this._tilingScheme.getNumberOfYTilesAtLevel(i),u=l-r-1,c=s[0].replace("{z}",i).replace("{x}",e).replace("{y}",u),h=this._proxy;a(h)&&(c=h.getURL(c));var d,m=C;if(this._requestVertexNormals&&this._hasVertexNormals&&(m=y),n=o(n,!0)){if(d=g(c,m),!a(d))return void 0}else d=m(c);var p=this;return t(d,function(t){return a(p._heightmapStructure)?w(p,t,i,e,r,u):S(p,t,i,e,r,u)})},s(T.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return this._ready}},hasWaterMask:{get:function(){return this._hasWaterMask}},hasVertexNormals:{get:function(){return this._hasVertexNormals&&this._requestVertexNormals}},requestVertexNormals:{get:function(){return this._requestVertexNormals}}}),T.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},T.prototype.getTileDataAvailable=function(e,t,r){var i=this._availableTiles;if(i&&0!==i.length){if(r>=i.length)return!1;var n=i[r],o=this._tilingScheme.getNumberOfYTilesAtLevel(r),a=o-t-1;return b(n,e,a)}return void 0},T}),r("Core/Quaternion",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./Math","./Matrix3"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e,r,i,n){this.x=t(e,0),this.y=t(r,0),this.z=t(i,0),this.w=t(n,0)},u=new e;l.fromAxisAngle=function(t,i,n){var o=i/2,a=Math.sin(o);u=e.normalize(t,u);var s=u.x*a,c=u.y*a,h=u.z*a,d=Math.cos(o);return r(n)?(n.x=s,n.y=c,n.z=h,n.w=d,n):new l(s,c,h,d)};var c=[1,2,0],h=new Array(3);l.fromRotationMatrix=function(e,t){var i,n,o,a,u,d=e[s.COLUMN0ROW0],m=e[s.COLUMN1ROW1],p=e[s.COLUMN2ROW2],f=d+m+p;if(f>0)i=Math.sqrt(f+1),u=.5*i,i=.5/i,n=(e[s.COLUMN1ROW2]-e[s.COLUMN2ROW1])*i,o=(e[s.COLUMN2ROW0]-e[s.COLUMN0ROW2])*i,a=(e[s.COLUMN0ROW1]-e[s.COLUMN1ROW0])*i;else{var v=c,g=0;m>d&&(g=1),p>d&&p>m&&(g=2);var _=v[g],y=v[_];i=Math.sqrt(e[s.getElementIndex(g,g)]-e[s.getElementIndex(_,_)]-e[s.getElementIndex(y,y)]+1);var C=h;C[g]=.5*i,i=.5/i,u=(e[s.getElementIndex(y,_)]-e[s.getElementIndex(_,y)])*i,C[_]=(e[s.getElementIndex(_,g)]+e[s.getElementIndex(g,_)])*i,C[y]=(e[s.getElementIndex(y,g)]+e[s.getElementIndex(g,y)])*i,n=-C[0],o=-C[1],a=-C[2]}return r(t)?(t.x=n,t.y=o,t.z=a,t.w=u,t):new l(n,o,a,u)};var d=new e,m=new e,p=new l,f=new l,v=new l;l.packedLength=4,l.pack=function(e,r,i){i=t(i,0),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i]=e.w},l.unpack=function(e,i,n){return i=t(i,0),r(n)||(n=new l),n.x=e[i],n.y=e[i+1],n.z=e[i+2],n.w=e[i+3],n},l.packedInterpolationLength=3,l.convertPackedArrayForInterpolation=function(e,t,r,i){l.unpack(e,4*r,v),l.conjugate(v,v);for(var n=0,o=r-t+1;o>n;n++){var a=3*n;l.unpack(e,4*(t+n),p),l.multiply(p,v,p),p.w<0&&l.negate(p,p),l.computeAxis(p,d);var s=l.computeAngle(p);i[a]=d.x*s,i[a+1]=d.y*s,i[a+2]=d.z*s}},l.unpackInterpolationResult=function(t,i,n,o,a){r(a)||(a=new l),e.fromArray(t,0,m);var s=e.magnitude(m);return l.unpack(i,4*o,f),0===s?l.clone(l.IDENTITY,p):l.fromAxisAngle(m,s,p),l.multiply(p,f,a)},l.clone=function(e,t){return r(e)?r(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t):new l(e.x,e.y,e.z,e.w):void 0},l.conjugate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=e.w,t},l.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},l.magnitude=function(e){return Math.sqrt(l.magnitudeSquared(e))},l.normalize=function(e,t){var r=1/l.magnitude(e),i=e.x*r,n=e.y*r,o=e.z*r,a=e.w*r;return t.x=i,t.y=n,t.z=o,t.w=a,t},l.inverse=function(e,t){var r=l.magnitudeSquared(e);return t=l.conjugate(e,t),l.multiplyByScalar(t,1/r,t)},l.add=function(e,t,r){return r.x=e.x+t.x,r.y=e.y+t.y,r.z=e.z+t.z,r.w=e.w+t.w,r},l.subtract=function(e,t,r){return r.x=e.x-t.x,r.y=e.y-t.y,r.z=e.z-t.z,r.w=e.w-t.w,r},l.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},l.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},l.multiply=function(e,t,r){var i=e.x,n=e.y,o=e.z,a=e.w,s=t.x,l=t.y,u=t.z,c=t.w,h=a*s+i*c+n*u-o*l,d=a*l-i*u+n*c+o*s,m=a*u+i*l-n*s+o*c,p=a*c-i*s-n*l-o*u;return r.x=h,r.y=d,r.z=m,r.w=p,r},l.multiplyByScalar=function(e,t,r){return r.x=e.x*t,r.y=e.y*t,r.z=e.z*t,r.w=e.w*t,r},l.divideByScalar=function(e,t,r){return r.x=e.x/t,r.y=e.y/t,r.z=e.z/t,r.w=e.w/t,r},l.computeAxis=function(e,t){var r=e.w;if(Math.abs(r-1)<a.EPSILON6)return t.x=t.y=t.z=0,t;var i=1/Math.sqrt(1-r*r);return t.x=e.x*i,t.y=e.y*i,t.z=e.z*i,t},l.computeAngle=function(e){return Math.abs(e.w-1)<a.EPSILON6?0:2*Math.acos(e.w)};var g=new l;l.lerp=function(e,t,r,i){return g=l.multiplyByScalar(t,r,g),i=l.multiplyByScalar(e,1-r,i),l.add(g,i,i)};var _=new l,y=new l,C=new l;l.slerp=function(e,t,r,i){var n=l.dot(e,t),o=t;if(0>n&&(n=-n,o=_=l.negate(t,_)),1-n<a.EPSILON6)return l.lerp(e,o,r,i);var s=Math.acos(n);return y=l.multiplyByScalar(e,Math.sin((1-r)*s),y),C=l.multiplyByScalar(o,Math.sin(r*s),C),i=l.add(y,C,i),l.multiplyByScalar(i,1/Math.sin(s),i)},l.log=function(t,r){var i=a.acosClamped(t.w),n=0;return 0!==i&&(n=i/Math.sin(i)),e.multiplyByScalar(t,n,r)},l.exp=function(t,r){var i=e.magnitude(t),n=0;return 0!==i&&(n=Math.sin(i)/i),r.x=t.x*n,r.y=t.y*n,r.z=t.z*n,r.w=Math.cos(i),r};var w=new e,S=new e,E=new l,b=new l;l.computeInnerQuadrangle=function(t,r,i,n){var o=l.conjugate(r,E);l.multiply(o,i,b);var a=l.log(b,w);l.multiply(o,t,b);var s=l.log(b,S);return e.add(a,s,a),e.multiplyByScalar(a,.25,a),e.negate(a,a),l.exp(a,E),l.multiply(r,E,n)},l.squad=function(e,t,r,i,n,o){var a=l.slerp(e,t,n,E),s=l.slerp(r,i,n,b);return l.slerp(a,s,2*n*(1-n),o)};for(var T=new l,x=1.9011074535173003,P=n.supportsTypedArrays()?new Float32Array(8):[],A=n.supportsTypedArrays()?new Float32Array(8):[],M=n.supportsTypedArrays()?new Float32Array(8):[],D=n.supportsTypedArrays()?new Float32Array(8):[],I=0;7>I;++I){var R=I+1,O=2*R+1;P[I]=1/(R*O),A[I]=R/O}return P[7]=x/136,A[7]=8*x/17,l.fastSlerp=function(e,t,r,i){var n,o=l.dot(e,t);o>=0?n=1:(n=-1,o=-o);for(var a=o-1,s=1-r,u=r*r,c=s*s,h=7;h>=0;--h)M[h]=(P[h]*u-A[h])*a,D[h]=(P[h]*c-A[h])*a;var d=n*r*(1+M[0]*(1+M[1]*(1+M[2]*(1+M[3]*(1+M[4]*(1+M[5]*(1+M[6]*(1+M[7])))))))),m=s*(1+D[0]*(1+D[1]*(1+D[2]*(1+D[3]*(1+D[4]*(1+D[5]*(1+D[6]*(1+D[7])))))))),p=l.multiplyByScalar(e,m,T);return l.multiplyByScalar(t,d,i),l.add(p,i,i)},l.fastSquad=function(e,t,r,i,n,o){var a=l.fastSlerp(e,t,n,E),s=l.fastSlerp(r,i,n,b);return l.fastSlerp(a,s,2*n*(1-n),o)},l.equals=function(e,t){return e===t||r(e)&&r(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},l.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e.x-t.x)<=i&&Math.abs(e.y-t.y)<=i&&Math.abs(e.z-t.z)<=i&&Math.abs(e.w-t.w)<=i},l.ZERO=o(new l(0,0,0,0)),l.IDENTITY=o(new l(0,0,0,1)),l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l.prototype.equalsEpsilon=function(e,t){return l.equalsEpsilon(this,e,t)},l.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},l}),r("Core/EllipseGeometryLibrary",["./Cartesian3","./Math","./Matrix3","./Quaternion"],function(e,t,r,i){"use strict";function n(t,n,o,c,h,d,m,p,f,v){var g=t+n;e.multiplyByScalar(c,Math.cos(g),a),e.multiplyByScalar(o,Math.sin(g),s),e.add(a,s,a);var _=Math.cos(t);_*=_;var y=Math.sin(t);y*=y;var C=d/Math.sqrt(m*_+h*y),w=C/p;return i.fromAxisAngle(a,w,l),r.fromQuaternion(l,u),r.multiplyByVector(u,f,v),e.normalize(v,v),e.multiplyByScalar(v,p,v),v}var o={},a=new e,s=new e,l=new i,u=new r,c=new e,h=new e,d=new e,m=new e;o.raisePositionsToHeight=function(t,r,i){for(var n=r.ellipsoid,o=r.height,a=r.extrudedHeight,s=i?2*(t.length/3):t.length/3,l=new Float64Array(3*s),u=m,p=t.length,f=i?p:0,v=0;p>v;v+=3){var g,_=v+1,y=v+2,C=e.fromArray(t,v,c);C=n.scaleToGeodeticSurface(C,C),g=e.clone(C,h),u=n.geodeticSurfaceNormal(C,u);var w=e.multiplyByScalar(u,o,d);C=e.add(C,w,C),i&&(w=e.multiplyByScalar(u,a,w),g=e.add(g,w,g),l[v+f]=g.x,l[_+f]=g.y,l[y+f]=g.z),l[v]=C.x,l[_]=C.y,l[y]=C.z
}return l};var p=new e,f=new e,v=new e;return o.computeEllipsePositions=function(r,i,o){var a=r.semiMinorAxis,s=r.semiMajorAxis,l=r.rotation,u=r.center,m=r.granularity,g=2.31,_=a*a,y=s*s,C=s*a,w=e.magnitude(u),S=e.normalize(u,p),E=e.cross(e.UNIT_Z,u,f);E=e.normalize(E,E);var b,T,x,P,A,M=e.cross(S,E,v),D=1+Math.ceil(t.PI_OVER_TWO/m),I=g/(D-1),R=2*D*(D+1),O=i?new Array(3*R):void 0,L=0,N=c,B=h,F=o?[]:void 0,z=o?[]:void 0,V=t.PI_OVER_TWO;for(b=0;D>b&&V>0;++b){if(N=n(V,l,M,E,_,C,y,w,S,N),B=n(Math.PI-V,l,M,E,_,C,y,w,S,B),i){for(O[L++]=N.x,O[L++]=N.y,O[L++]=N.z,x=2*b+2,T=1;x-1>T;++T)P=T/(x-1),A=e.lerp(N,B,P,d),O[L++]=A.x,O[L++]=A.y,O[L++]=A.z;O[L++]=B.x,O[L++]=B.y,O[L++]=B.z}o&&(z.unshift(N.x,N.y,N.z),0!==b&&F.push(B.x,B.y,B.z)),V=t.PI_OVER_TWO-(b+1)*I}for(D=b,b=D;b>0;--b){if(V=t.PI_OVER_TWO-(b-1)*I,N=n(-V,l,M,E,_,C,y,w,S,N),B=n(V+Math.PI,l,M,E,_,C,y,w,S,B),i){for(O[L++]=N.x,O[L++]=N.y,O[L++]=N.z,x=2*(b-1)+2,T=1;x-1>T;++T)P=T/(x-1),A=e.lerp(N,B,P,d),O[L++]=A.x,O[L++]=A.y,O[L++]=A.z;O[L++]=B.x,O[L++]=B.y,O[L++]=B.z}o&&(z.unshift(N.x,N.y,N.z),1!==b&&F.push(B.x,B.y,B.z))}var k={};return i&&(O.length!==L&&(R=L/3,O.length=L),k.positions=O,k.numPts=D),o&&(k.outerPositions=z.concat(F)),k},o}),r("Core/GeometryInstance",["./defaultValue","./defined","./DeveloperError","./Matrix4"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT),this.geometry=t.geometry,this.modelMatrix=i.clone(e(t.modelMatrix,i.IDENTITY)),this.id=t.id,this.pickPrimitive=t.pickPrimitive,this.attributes=e(t.attributes,{})};return n}),r("Core/barycentricCoordinates",["./Cartesian2","./Cartesian3","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=new t,n=new t,o=new t,a=function(a,s,l,u,c){r(c)||(c=new t);var h,d,m,p,f,v,g,_;r(s.z)?(h=t.subtract(l,s,i),d=t.subtract(u,s,n),m=t.subtract(a,s,o),p=t.dot(h,h),f=t.dot(h,d),v=t.dot(h,m),g=t.dot(d,d),_=t.dot(d,m)):(h=e.subtract(l,s,i),d=e.subtract(u,s,n),m=e.subtract(a,s,o),p=e.dot(h,h),f=e.dot(h,d),v=e.dot(h,m),g=e.dot(d,d),_=e.dot(d,m));var y=1/(p*g-f*f);return c.y=(g*v-f*_)*y,c.z=(p*_-f*v)*y,c.x=1-c.y-c.z,c};return a}),r("Core/EncodedCartesian3",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(){this.high=e.clone(e.ZERO),this.low=e.clone(e.ZERO)};r.encode=function(e,r){t(r)||(r={high:0,low:0});var i;return e>=0?(i=65536*Math.floor(e/65536),r.high=i,r.low=e-i):(i=65536*Math.floor(-e/65536),r.high=-i,r.low=e+i),r};var i={high:0,low:0};r.fromCartesian=function(e,n){t(n)||(n=new r);var o=n.high,a=n.low;return r.encode(e.x,i),o.x=i.high,a.x=i.low,r.encode(e.y,i),o.y=i.high,a.y=i.low,r.encode(e.z,i),o.z=i.high,a.z=i.low,n};var n=new r;return r.writeElements=function(e,t,i){r.fromCartesian(e,n);var o=n.high,a=n.low;t[i]=o.x,t[i+1]=o.y,t[i+2]=o.z,t[i+3]=a.x,t[i+4]=a.y,t[i+5]=a.z},r}),r("Core/IndexDatatype",["./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,r,i){"use strict";var n={UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,UNSIGNED_INT:5125};return n.getSizeInBytes=function(e){switch(e){case n.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case n.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case n.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT}},n.validate=function(t){return e(t)&&(t===n.UNSIGNED_BYTE||t===n.UNSIGNED_SHORT||t===n.UNSIGNED_INT)},n.createTypedArray=function(e,t){return e>i.SIXTY_FOUR_KILOBYTES?new Uint32Array(t):new Uint16Array(t)},r(n)}),r("Core/QuadraticRealPolynomial",["./DeveloperError","./Math"],function(e,t){"use strict";function r(e,r,i){var n=e+r;return t.sign(e)!==t.sign(r)&&Math.abs(n/Math.max(Math.abs(e),Math.abs(r)))<i?0:n}var i={};return i.computeDiscriminant=function(e,t,r){var i=t*t-4*e*r;return i},i.computeRealRoots=function(e,i,n){var o;if(0===e)return 0===i?[]:[-n/i];if(0===i){if(0===n)return[0,0];var a=Math.abs(n),s=Math.abs(e);if(s>a&&a/s<t.EPSILON14)return[0,0];if(a>s&&s/a<t.EPSILON14)return[];if(o=-n/e,0>o)return[];var l=Math.sqrt(o);return[-l,l]}if(0===n)return o=-i/e,0>o?[o,0]:[0,o];var u=i*i,c=4*e*n,h=r(u,-c,t.EPSILON14);if(0>h)return[];var d=-.5*r(i,t.sign(i)*Math.sqrt(h),t.EPSILON14);return i>0?[d/e,n/d]:[n/d,d/e]},i}),r("Core/CubicRealPolynomial",["./DeveloperError","./QuadraticRealPolynomial"],function(e,t){"use strict";function r(e,t,r,i){var n,o,a=e,s=t/3,l=r/3,u=i,c=a*l,h=s*u,d=s*s,m=l*l,p=a*l-d,f=a*u-s*l,v=s*u-m,g=4*p*v-f*f;if(0>g){var _,y,C;d*h>=c*m?(_=a,y=p,C=-2*s*p+a*f):(_=u,y=v,C=-u*f+2*l*v);var w=0>C?-1:1,S=-w*Math.abs(_)*Math.sqrt(-g);o=-C+S;var E=o/2,b=0>E?-Math.pow(-E,1/3):Math.pow(E,1/3),T=o===S?-b:-y/b;return n=0>=y?b+T:-C/(b*b+T*T+y),d*h>=c*m?[(n-s)/a]:[-u/(n+l)]}var x=p,P=-2*s*p+a*f,A=v,M=-u*f+2*l*v,D=Math.sqrt(g),I=Math.sqrt(3)/2,R=Math.abs(Math.atan2(a*D,-P)/3);n=2*Math.sqrt(-x);var O=Math.cos(R);o=n*O;var L=n*(-O/2-I*Math.sin(R)),N=o+L>2*s?o-s:L-s,B=a,F=N/B;R=Math.abs(Math.atan2(u*D,-M)/3),n=2*Math.sqrt(-A),O=Math.cos(R),o=n*O,L=n*(-O/2-I*Math.sin(R));var z=-u,V=2*l>o+L?o+l:L+l,k=z/V,U=B*V,W=-N*V-B*z,G=N*z,H=(l*W-s*G)/(-s*W+l*U);return H>=F?k>=F?k>=H?[F,H,k]:[F,k,H]:[k,F,H]:k>=F?[H,F,k]:k>=H?[H,k,F]:[k,H,F]}var i={};return i.computeDiscriminant=function(e,t,r,i){var n=e*e,o=t*t,a=r*r,s=i*i,l=18*e*t*r*i+o*a-27*n*s-4*(e*a*r+o*t*i);return l},i.computeRealRoots=function(e,i,n,o){var a,s;if(0===e)return t.computeRealRoots(i,n,o);if(0===i){if(0===n){if(0===o)return[0,0,0];s=-o/e;var l=0>s?-Math.pow(-s,1/3):Math.pow(s,1/3);return[l,l,l]}return 0===o?(a=t.computeRealRoots(e,0,n),0===a.Length?[0]:[a[0],0,a[1]]):r(e,0,n,o)}return 0===n?0===o?(s=-i/e,0>s?[s,0,0]:[0,0,s]):r(e,i,0,o):0===o?(a=t.computeRealRoots(e,i,n),0===a.length?[0]:a[1]<=0?[a[0],a[1],0]:a[0]>=0?[0,a[0],a[1]]:[a[0],0,a[1]]):r(e,i,n,o)},i}),r("Core/QuarticRealPolynomial",["./CubicRealPolynomial","./DeveloperError","./Math","./QuadraticRealPolynomial"],function(e,t,r,i){"use strict";function n(t,n,o,a){var s=t*t,l=n-3*s/8,u=o-n*t/2+s*t/8,c=a-o*t/4+n*s/16-3*s*s/256,h=e.computeRealRoots(1,2*l,l*l-4*c,-u*u);if(h.length>0){var d=-t/4,m=h[h.length-1];if(Math.abs(m)<r.EPSILON14){var p=i.computeRealRoots(1,l,c);if(2===p.length){var f,v=p[0],g=p[1];if(v>=0&&g>=0){var _=Math.sqrt(v),y=Math.sqrt(g);return[d-y,d-_,d+_,d+y]}if(v>=0&&0>g)return f=Math.sqrt(v),[d-f,d+f];if(0>v&&g>=0)return f=Math.sqrt(g),[d-f,d+f]}return[]}if(m>0){var C=Math.sqrt(m),w=(l+m-u/C)/2,S=(l+m+u/C)/2,E=i.computeRealRoots(1,C,w),b=i.computeRealRoots(1,-C,S);return 0!==E.length?(E[0]+=d,E[1]+=d,0!==b.length?(b[0]+=d,b[1]+=d,E[1]<=b[0]?[E[0],E[1],b[0],b[1]]:b[1]<=E[0]?[b[0],b[1],E[0],E[1]]:E[0]>=b[0]&&E[1]<=b[1]?[b[0],E[0],E[1],b[1]]:b[0]>=E[0]&&b[1]<=E[1]?[E[0],b[0],b[1],E[1]]:E[0]>b[0]&&E[0]<b[1]?[b[0],E[0],b[1],E[1]]:[E[0],b[0],E[1],b[1]]):E):0!==b.length?(b[0]+=d,b[1]+=d,b):[]}}return[]}function o(t,n,o,a){var s=o*o,l=n*n,u=t*t,c=-2*n,h=o*t+l-4*a,d=u*a-o*n*t+s,m=e.computeRealRoots(1,c,h,d);if(m.length>0){var p,f,v=m[0],g=n-v,_=g*g,y=t/2,C=g/2,w=_-4*a,S=_+4*Math.abs(a),E=u-4*v,b=u+4*Math.abs(v);if(0>v||E*S>w*b){var T=Math.sqrt(E);p=T/2,f=0===T?0:(t*C-o)/T}else{var x=Math.sqrt(w);p=0===x?0:(t*C-o)/x,f=x/2}var P,A;0===y&&0===p?(P=0,A=0):r.sign(y)===r.sign(p)?(P=y+p,A=v/P):(A=y-p,P=v/A);var M,D;0===C&&0===f?(M=0,D=0):r.sign(C)===r.sign(f)?(M=C+f,D=a/M):(D=C-f,M=a/D);var I=i.computeRealRoots(1,P,M),R=i.computeRealRoots(1,A,D);if(0!==I.length)return 0!==R.length?I[1]<=R[0]?[I[0],I[1],R[0],R[1]]:R[1]<=I[0]?[R[0],R[1],I[0],I[1]]:I[0]>=R[0]&&I[1]<=R[1]?[R[0],I[0],I[1],R[1]]:R[0]>=I[0]&&R[1]<=I[1]?[I[0],R[0],R[1],I[1]]:I[0]>R[0]&&I[0]<R[1]?[R[0],I[0],R[1],I[1]]:[I[0],R[0],I[1],R[1]]:I;if(0!==R.length)return R}return[]}var a={};return a.computeDiscriminant=function(e,t,r,i,n){var o=e*e,a=o*e,s=t*t,l=s*t,u=r*r,c=u*r,h=i*i,d=h*i,m=n*n,p=m*n,f=s*u*h-4*l*d-4*e*c*h+18*e*t*r*d-27*o*h*h+256*a*p+n*(18*l*r*i-4*s*c+16*e*u*u-80*e*t*u*i-6*e*s*h+144*o*r*h)+m*(144*e*s*r-27*s*s-128*o*u-192*o*t*i);return f},a.computeRealRoots=function(t,i,a,s,l){if(Math.abs(t)<r.EPSILON15)return e.computeRealRoots(i,a,s,l);var u=i/t,c=a/t,h=s/t,d=l/t,m=0>u?1:0;switch(m+=0>c?m+1:m,m+=0>h?m+1:m,m+=0>d?m+1:m){case 0:return n(u,c,h,d);case 1:return o(u,c,h,d);case 2:return o(u,c,h,d);case 3:return n(u,c,h,d);case 4:return n(u,c,h,d);case 5:return o(u,c,h,d);case 6:return n(u,c,h,d);case 7:return n(u,c,h,d);case 8:return o(u,c,h,d);case 9:return n(u,c,h,d);case 10:return n(u,c,h,d);case 11:return o(u,c,h,d);case 12:return n(u,c,h,d);case 13:return n(u,c,h,d);case 14:return n(u,c,h,d);case 15:return n(u,c,h,d);default:return void 0}},a}),r("Core/Ray",["./Cartesian3","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(r,i){i=e.clone(t(i,e.ZERO)),e.equals(i,e.ZERO)||e.normalize(i,i),this.origin=e.clone(t(r,e.ZERO)),this.direction=i};return i.getPoint=function(t,i,n){return r(n)||(n=new e),n=e.multiplyByScalar(t.direction,i,n),e.add(t.origin,n,n)},i}),r("Core/IntersectionTests",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Math","./Matrix3","./QuadraticRealPolynomial","./QuarticRealPolynomial","./Ray"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(t,i,n,a,s){s=r(s,!1);var l,u,c,h,d,m=t.origin,p=t.direction,f=e.subtract(n,i,v),w=e.subtract(a,i,g),S=e.cross(p,w,_),E=e.dot(f,S);if(s){if(E<o.EPSILON6)return void 0;if(l=e.subtract(m,i,y),c=e.dot(l,S),0>c||c>E)return void 0;if(u=e.cross(l,f,C),h=e.dot(p,u),0>h||c+h>E)return void 0;d=e.dot(w,u)/E}else{if(Math.abs(E)<o.EPSILON6)return void 0;var b=1/E;if(l=e.subtract(m,i,y),c=e.dot(l,S)*b,0>c||c>1)return void 0;if(u=e.cross(l,f,C),h=e.dot(p,u)*b,0>h||c+h>1)return void 0;d=e.dot(w,u)*b}return d}function h(e,t,r,i){var n=t*t-4*e*r;if(0>n)return void 0;if(n>0){var o=1/(2*e),a=Math.sqrt(n),s=(-t+a)*o,l=(-t-a)*o;return l>s?(i.root0=s,i.root1=l):(i.root0=l,i.root1=s),i}var u=-t/(2*e);return 0===u?void 0:(i.root0=i.root1=u,i)}function d(t,r,n){i(n)||(n={});var o=t.origin,a=t.direction,s=r.center,l=r.radius*r.radius,u=e.subtract(o,s,_),c=e.dot(a,a),d=2*e.dot(a,u),m=e.magnitudeSquared(u)-l,p=h(c,d,m,S);return i(p)?(n.start=p.root0,n.stop=p.root1,n):void 0}function m(e,t,r){var i=e+t;return o.sign(e)!==o.sign(t)&&Math.abs(i/Math.max(Math.abs(e),Math.abs(t)))<r?0:i}function p(t,r,i,n,u){var c,h=n*n,d=u*u,p=(t[a.COLUMN1ROW1]-t[a.COLUMN2ROW2])*d,f=u*(n*m(t[a.COLUMN1ROW0],t[a.COLUMN0ROW1],o.EPSILON15)+r.y),v=t[a.COLUMN0ROW0]*h+t[a.COLUMN2ROW2]*d+n*r.x+i,g=d*m(t[a.COLUMN2ROW1],t[a.COLUMN1ROW2],o.EPSILON15),_=u*(n*m(t[a.COLUMN2ROW0],t[a.COLUMN0ROW2])+r.z),y=[];if(0===_&&0===g){if(c=s.computeRealRoots(p,f,v),0===c.length)return y;var C=c[0],w=Math.sqrt(Math.max(1-C*C,0));if(y.push(new e(n,u*C,u*-w)),y.push(new e(n,u*C,u*w)),2===c.length){var S=c[1],E=Math.sqrt(Math.max(1-S*S,0));y.push(new e(n,u*S,u*-E)),y.push(new e(n,u*S,u*E))}return y}var b=_*_,T=g*g,x=p*p,P=_*g,A=x+T,M=2*(f*p+P),D=2*v*p+f*f-T+b,I=2*(v*f-P),R=v*v-b;if(0===A&&0===M&&0===D&&0===I)return y;c=l.computeRealRoots(A,M,D,I,R);var O=c.length;if(0===O)return y;for(var L=0;O>L;++L){var N,B=c[L],F=B*B,z=Math.max(1-F,0),V=Math.sqrt(z);N=o.sign(p)===o.sign(v)?m(p*F+v,f*B,o.EPSILON12):o.sign(v)===o.sign(f*B)?m(p*F,f*B+v,o.EPSILON12):m(p*F+f*B,v,o.EPSILON12);var k=m(g*B,_,o.EPSILON15),U=N*k;0>U?y.push(new e(n,u*B,u*V)):U>0?y.push(new e(n,u*B,u*-V)):0!==V?(y.push(new e(n,u*B,u*-V)),y.push(new e(n,u*B,u*V)),++L):y.push(new e(n,u*B,u*V))}return y}var f={};f.rayPlane=function(t,r,n){i(n)||(n=new e);var a=t.origin,s=t.direction,l=r.normal,u=e.dot(l,s);if(Math.abs(u)<o.EPSILON15)return void 0;var c=(-r.distance-e.dot(l,a))/u;return 0>c?void 0:(n=e.multiplyByScalar(s,c,n),e.add(a,n,n))};var v=new e,g=new e,_=new e,y=new e,C=new e;f.rayTriangle=function(t,r,n,o,a,s){var l=c(t,r,n,o,a);return!i(l)||0>l?void 0:(i(s)||(s=new e),e.multiplyByScalar(t.direction,l,s),e.add(t.origin,s,s))};var w=new u;f.lineSegmentTriangle=function(t,r,n,o,a,s,l){var u=w;e.clone(t,u.origin),e.subtract(r,t,u.direction),e.normalize(u.direction,u.direction);var h=c(u,n,o,a,s);return!i(h)||0>h||h>e.distance(t,r)?void 0:(i(l)||(l=new e),e.multiplyByScalar(u.direction,h,l),e.add(u.origin,l,l))};var S={root0:0,root1:0};f.raySphere=function(e,t,r){return r=d(e,t,r),!i(r)||r.stop<0?void 0:(r.start=Math.max(r.start,0),r)};var E=new u;f.lineSegmentSphere=function(t,r,n,o){var a=E;e.clone(t,a.origin);var s=e.subtract(r,t,a.direction),l=e.magnitude(s);return e.normalize(s,s),o=d(a,n,o),!i(o)||o.stop<0||o.start>l?void 0:(o.start=Math.max(o.start,0),o.stop=Math.min(o.stop,l),o)};var b=new e,T=new e;f.rayEllipsoid=function(t,r){var i,n,o,a,s,l=r.oneOverRadii,u=e.multiplyComponents(l,t.origin,b),c=e.multiplyComponents(l,t.direction,T),h=e.magnitudeSquared(u),d=e.dot(u,c);if(h>1){if(d>=0)return void 0;var m=d*d;if(i=h-1,n=e.magnitudeSquared(c),o=n*i,o>m)return void 0;if(m>o){a=d*d-o,s=-d+Math.sqrt(a);var p=s/n,f=i/s;return f>p?{start:p,stop:f}:{start:f,stop:p}}var v=Math.sqrt(i/n);return{start:v,stop:v}}return 1>h?(i=h-1,n=e.magnitudeSquared(c),o=n*i,a=d*d-o,s=-d+Math.sqrt(a),{start:0,stop:s/n}):0>d?(n=e.magnitudeSquared(c),{start:0,stop:-d/n}):void 0};var x=new e,P=new e,A=new e,M=new e,D=new e,I=new a,R=new a,O=new a,L=new a,N=new a,B=new a,F=new a,z=new e,V=new e,k=new t;f.grazingAltitudeLocation=function(t,r){var n=t.origin,s=t.direction,l=r.geodeticSurfaceNormal(n);if(e.dot(s,l)>=0)return n;var u=i(this.rayEllipsoid(t,r)),c=r.transformPositionToScaledSpace(s),h=e.normalize(c,x),d=e.mostOrthogonalAxis(c,M),m=e.normalize(e.cross(d,h,P),P),f=e.normalize(e.cross(h,m,A),A),v=I;v[0]=h.x,v[1]=h.y,v[2]=h.z,v[3]=m.x,v[4]=m.y,v[5]=m.z,v[6]=f.x,v[7]=f.y,v[8]=f.z;var g=a.transpose(v,R),_=a.fromScale(r.radii,O),y=a.fromScale(r.oneOverRadii,L),C=N;C[0]=0,C[1]=-s.z,C[2]=s.y,C[3]=s.z,C[4]=0,C[5]=-s.x,C[6]=-s.y,C[7]=s.x,C[8]=0;var w,S,E=a.multiply(a.multiply(g,y,B),C,B),b=a.multiply(a.multiply(E,_,F),v,F),T=a.multiplyByVector(E,n,D),U=p(b,e.negate(T,x),0,0,1),W=U.length;if(W>0){for(var G=e.clone(e.ZERO,V),H=Number.NEGATIVE_INFINITY,q=0;W>q;++q){w=a.multiplyByVector(_,a.multiplyByVector(v,U[q],z),z);var j=e.normalize(e.subtract(w,n,M),M),Y=e.dot(j,s);Y>H&&(H=Y,G=e.clone(w,G))}var X=r.cartesianToCartographic(G,k);return H=o.clamp(H,0,1),S=e.magnitude(e.subtract(G,n,M))*Math.sqrt(1-H*H),S=u?-S:S,X.height=S,r.cartographicToCartesian(X)}return void 0};var U=new e;return f.lineSegmentPlane=function(t,r,n,a){i(a)||(a=new e);var s=e.subtract(r,t,U),l=n.normal,u=e.dot(l,s);if(Math.abs(u)<o.EPSILON6)return void 0;var c=e.dot(l,t),h=-(n.distance+c)/u;return 0>h||h>1?void 0:(e.multiplyByScalar(s,h,a),e.add(t,a,a),a)},f.trianglePlaneIntersection=function(t,r,i,n){var o=n.normal,a=n.distance,s=e.dot(o,t)+a<0,l=e.dot(o,r)+a<0,u=e.dot(o,i)+a<0,c=0;c+=s?1:0,c+=l?1:0,c+=u?1:0;var h,d;if((1===c||2===c)&&(h=new e,d=new e),1===c){if(s)return f.lineSegmentPlane(t,r,n,h),f.lineSegmentPlane(t,i,n,d),{positions:[t,r,i,h,d],indices:[0,3,4,1,2,4,1,4,3]};if(l)return f.lineSegmentPlane(r,i,n,h),f.lineSegmentPlane(r,t,n,d),{positions:[t,r,i,h,d],indices:[1,3,4,2,0,4,2,4,3]};if(u)return f.lineSegmentPlane(i,t,n,h),f.lineSegmentPlane(i,r,n,d),{positions:[t,r,i,h,d],indices:[2,3,4,0,1,4,0,4,3]}}else if(2===c){if(!s)return f.lineSegmentPlane(r,t,n,h),f.lineSegmentPlane(i,t,n,d),{positions:[t,r,i,h,d],indices:[1,2,4,1,4,3,0,3,4]};if(!l)return f.lineSegmentPlane(i,r,n,h),f.lineSegmentPlane(t,r,n,d),{positions:[t,r,i,h,d],indices:[2,0,4,2,4,3,1,3,4]};if(!u)return f.lineSegmentPlane(t,i,n,h),f.lineSegmentPlane(r,i,n,d),{positions:[t,r,i,h,d],indices:[0,1,4,0,4,3,2,3,4]}}return void 0},f}),r("Core/Plane",["./Cartesian3","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r){this.normal=e.clone(t),this.distance=r};return r.fromPointNormal=function(i,n,o){var a=-e.dot(n,i);return t(o)?(e.clone(n,o.normal),o.distance=a,o):new r(n,a)},r.getPointDistance=function(t,r){return e.dot(t.normal,r)+t.distance},r}),r("Core/Tipsify",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r={};return r.calculateACMR=function(r){r=e(r,e.EMPTY_OBJECT);var i=r.indices,n=r.maximumIndex,o=e(r.cacheSize,24),a=i.length;if(!t(n)){n=0;for(var s=0,l=i[s];a>s;)l>n&&(n=l),++s,l=i[s]}for(var u=[],c=0;n+1>c;c++)u[c]=0;for(var h=o+1,d=0;a>d;++d)h-u[i[d]]>o&&(u[i[d]]=h,++h);return(h-o+1)/(a/3)},r.tipsify=function(r){function i(e,t,r,i){for(;t.length>=1;){var n=t[t.length-1];if(t.splice(t.length-1,1),e[n].numLiveTriangles>0)return n}for(;i>o;){if(e[o].numLiveTriangles>0)return++o,o-1;++o}return-1}function n(e,t,r,n,o,a,s){for(var l,u=-1,c=-1,h=0;h<r.length;){var d=r[h];n[d].numLiveTriangles&&(l=0,o-n[d].timeStamp+2*n[d].numLiveTriangles<=t&&(l=o-n[d].timeStamp),(l>c||-1===c)&&(c=l,u=d)),++h}return-1===u?i(n,a,e,s):u}r=e(r,e.EMPTY_OBJECT);var o,a=r.indices,s=r.maximumIndex,l=e(r.cacheSize,24),u=a.length,c=0,h=0,d=a[h],m=u;if(t(s))c=s+1;else{for(;m>h;)d>c&&(c=d),++h,d=a[h];if(-1===c)return 0;++c}for(var p=[],f=0;c>f;f++)p[f]={numLiveTriangles:0,timeStamp:0,vertexTriangles:[]};h=0;for(var v=0;m>h;)p[a[h]].vertexTriangles.push(v),++p[a[h]].numLiveTriangles,p[a[h+1]].vertexTriangles.push(v),++p[a[h+1]].numLiveTriangles,p[a[h+2]].vertexTriangles.push(v),++p[a[h+2]].numLiveTriangles,++v,h+=3;var g=0,_=l+1;o=1;var y,C,w=[],S=[],E=0,b=[],T=u/3,x=[];for(f=0;T>f;f++)x[f]=!1;for(var P,A;-1!==g;){w=[],C=p[g],A=C.vertexTriangles.length;for(var M=0;A>M;++M)if(v=C.vertexTriangles[M],!x[v]){x[v]=!0,h=v+v+v;for(var D=0;3>D;++D)P=a[h],w.push(P),S.push(P),b[E]=P,++E,y=p[P],--y.numLiveTriangles,_-y.timeStamp>l&&(y.timeStamp=_,++_),++h}g=n(a,l,w,p,_,S,c)}return b},r}),r("Core/GeometryPipeline",["./barycentricCoordinates","./BoundingSphere","./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EncodedCartesian3","./GeographicProjection","./Geometry","./GeometryAttribute","./IndexDatatype","./Intersect","./IntersectionTests","./Math","./Matrix3","./Matrix4","./Plane","./PrimitiveType","./Tipsify"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(e,t,r,i,n){e[t++]=r,e[t++]=i,e[t++]=i,e[t++]=n,e[t++]=n,e[t]=r}function b(e){for(var t=e.length,r=6*(t/3),i=p.createTypedArray(t,r),n=0,o=0;t>o;o+=3,n+=6)E(i,n,e[o],e[o+1],e[o+2]);return i}function T(e){var t=e.length;if(t>=3){var r=6*(t-2),i=p.createTypedArray(t,r);E(i,0,e[0],e[1],e[2]);for(var n=6,o=3;t>o;++o,n+=6)E(i,n,e[o-1],e[o],e[o-2]);return i}return new Uint16Array}function x(e){if(e.length>0){for(var t=e.length-1,r=6*(t-1),i=p.createTypedArray(t,r),n=e[0],o=0,a=1;t>a;++a,o+=6)E(i,o,n,e[a],e[a+1]);return i}return new Uint16Array}function P(e){var t={};for(var r in e)if(e.hasOwnProperty(r)&&l(e[r])&&l(e[r].values)){var i=e[r];t[r]=new m({componentDatatype:i.componentDatatype,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize,values:[]})}return t}function A(e,t,r){for(var i in t)if(t.hasOwnProperty(i)&&l(t[i])&&l(t[i].values))for(var n=t[i],o=0;o<n.componentsPerAttribute;++o)e[i].values.push(n.values[r*n.componentsPerAttribute+o])}function M(e,t){if(l(t))for(var r=t.values,n=r.length,o=0;n>o;o+=3)i.unpack(r,o,Z),y.multiplyByPoint(e,Z,Z),i.pack(Z,r,o)}function D(e,t){if(l(t))for(var r=t.values,n=r.length,o=0;n>o;o+=3)i.unpack(r,o,Z),_.multiplyByVector(e,Z,Z),Z=i.normalize(Z,Z),i.pack(Z,r,o)}function I(e){var t,r=e.length,i={},n=e[0].geometry.attributes;for(t in n)if(n.hasOwnProperty(t)&&l(n[t])&&l(n[t].values)){for(var o=n[t],s=o.values.length,u=!0,c=1;r>c;++c){var h=e[c].geometry.attributes[t];if(!l(h)||o.componentDatatype!==h.componentDatatype||o.componentsPerAttribute!==h.componentsPerAttribute||o.normalize!==h.normalize){u=!1;break}s+=h.values.length}u&&(i[t]=new m({componentDatatype:o.componentDatatype,componentsPerAttribute:o.componentsPerAttribute,normalize:o.normalize,values:a.createTypedArray(o.componentDatatype,s)}))}return i}function R(e){if(l(e.indices))return e;for(var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,t),i=0;t>i;++i)r[i]=i;return e.indices=r,e}function O(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,3*(t-2));r[0]=1,r[1]=0,r[2]=2;for(var i=3,n=3;t>n;++n)r[i++]=n-1,r[i++]=0,r[i++]=n;return e.indices=r,e.primitiveType=w.TRIANGLES,e}function L(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,3*(t-2));r[0]=0,r[1]=1,r[2]=2,t>3&&(r[3]=0,r[4]=2,r[5]=3);for(var i=6,n=3;t-1>n;n+=2)r[i++]=n,r[i++]=n-1,r[i++]=n+1,t>n+2&&(r[i++]=n,r[i++]=n+1,r[i++]=n+2);return e.indices=r,e.primitiveType=w.TRIANGLES,e}function N(e){if(l(e.indices))return e;for(var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,t),i=0;t>i;++i)r[i]=i;return e.indices=r,e}function B(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,2*(t-1));r[0]=0,r[1]=1;for(var i=2,n=2;t>n;++n)r[i++]=n-1,r[i++]=n;return e.indices=r,e.primitiveType=w.LINES,e}function F(e){var t=d.computeNumberOfVertices(e),r=p.createTypedArray(t,2*t);r[0]=0,r[1]=1;for(var i=2,n=2;t>n;++n)r[i++]=n-1,r[i++]=n;return r[i++]=t-1,r[i]=0,e.indices=r,e.primitiveType=w.LINES,e}function z(e){switch(e.primitiveType){case w.TRIANGLE_FAN:return O(e);case w.TRIANGLE_STRIP:return L(e);case w.TRIANGLES:return R(e);case w.LINE_STRIP:return B(e);case w.LINE_LOOP:return F(e);case w.LINES:return N(e)}return e}function V(e,t){Math.abs(e.y)<g.EPSILON11&&(e.y=t?-g.EPSILON11:g.EPSILON11)}function k(e,t,r,n){i.add(e,i.multiplyByScalar(i.subtract(t,e,at),e.y/(e.y-t.y),at),r),i.clone(r,n),V(r,!0),V(n,!1)}function U(e,t,r){if(e.x>=0||t.x>=0||r.x>=0)return void 0;var i=e.y<0,n=t.y<0,o=r.y<0;V(e,i),V(t,n),V(r,o);var a=0;a+=i?1:0,a+=n?1:0,a+=o?1:0;var s=ht.indices;1===a?(s[1]=3,s[2]=4,s[5]=6,s[7]=6,s[8]=5,i?(k(e,t,st,ut),k(e,r,lt,ct),s[0]=0,s[3]=1,s[4]=2,s[6]=1):n?(k(t,r,st,ut),k(t,e,lt,ct),s[0]=1,s[3]=2,s[4]=0,s[6]=2):o&&(k(r,e,st,ut),k(r,t,lt,ct),s[0]=2,s[3]=0,s[4]=1,s[6]=0)):2===a&&(s[2]=4,s[4]=4,s[5]=3,s[7]=5,s[8]=6,i?n?o||(k(r,e,st,ut),k(r,t,lt,ct),s[0]=0,s[1]=1,s[3]=0,s[6]=2):(k(t,r,st,ut),k(t,e,lt,ct),s[0]=2,s[1]=0,s[3]=2,s[6]=1):(k(e,t,st,ut),k(e,r,lt,ct),s[0]=1,s[1]=2,s[3]=1,s[6]=0));var l=ht.positions;return l[0]=e,l[1]=t,l[2]=r,ht.length=3,(1===a||2===a)&&(l[3]=st,l[4]=lt,l[5]=ut,l[6]=ct,ht.length=7),ht}function W(t,n,o,a,s,u,c,h){if(l(s)||l(u)||l(c)||l(h)){var d,m,p,f,v,g,_,y,C,w,S,E,b=a.positions,T=b[0],x=b[1],P=b[2],A=ft,M=vt,D=gt,I=dt,R=mt,O=pt;l(s)&&(d=i.fromArray(s,3*t),m=i.fromArray(s,3*n),p=i.fromArray(s,3*o)),l(u)&&(f=i.fromArray(u,3*t),v=i.fromArray(u,3*n),g=i.fromArray(u,3*o)),l(c)&&(_=i.fromArray(c,3*t),y=i.fromArray(c,3*n),C=i.fromArray(c,3*o)),l(h)&&(w=r.fromArray(h,2*t),S=r.fromArray(h,2*n),E=r.fromArray(h,2*o));for(var L=3;L<b.length;++L){var N=b[L],B=e(N,T,x,P);if(l(s)){A=i.multiplyByScalar(d,B.x,A),M=i.multiplyByScalar(m,B.y,M),D=i.multiplyByScalar(p,B.z,D);var F=i.add(A,M,_t);i.add(F,D,F),i.normalize(F,F),s.push(F.x,F.y,F.z)}if(l(u)){A=i.multiplyByScalar(f,B.x,A),M=i.multiplyByScalar(v,B.y,M),D=i.multiplyByScalar(g,B.z,D);var z=i.add(A,M,_t);i.add(z,D,z),i.normalize(z,z),u.push(z.x,z.y,z.z)}if(l(c)){A=i.multiplyByScalar(_,B.x,A),M=i.multiplyByScalar(y,B.y,M),D=i.multiplyByScalar(C,B.z,D);var V=i.add(A,M,_t);i.add(V,D,V),i.normalize(V,V),c.push(V.x,V.y,V.z)}if(l(h)){I=r.multiplyByScalar(w,B.x,I),R=r.multiplyByScalar(S,B.y,R),O=r.multiplyByScalar(E,B.z,O);var k=r.add(I,R,I);r.add(k,O,k),h.push(k.x,k.y)}}}}function G(e){for(var t=e.attributes,r=t.position.values,n=l(t.normal)?t.normal.values:void 0,o=l(t.binormal)?t.binormal.values:void 0,s=l(t.tangent)?t.tangent.values:void 0,u=l(t.st)?t.st.values:void 0,c=e.indices,h=Array.prototype.slice.call(r,0),m=l(n)?Array.prototype.slice.call(n,0):void 0,f=l(o)?Array.prototype.slice.call(o,0):void 0,v=l(s)?Array.prototype.slice.call(s,0):void 0,g=l(u)?Array.prototype.slice.call(u,0):void 0,_=[],y=c.length,C=0;y>C;C+=3){var w=c[C],S=c[C+1],E=c[C+2],b=i.fromArray(r,3*w),T=i.fromArray(r,3*S),x=i.fromArray(r,3*E),P=U(b,T,x);if(l(P))if(h[3*w+1]=P.positions[0].y,h[3*S+1]=P.positions[1].y,h[3*E+1]=P.positions[2].y,P.length>3){for(var A=h.length/3,M=0;M<P.indices.length;++M){var D=P.indices[M];3>D?_.push(c[C+D]):_.push(D-3+A)}for(var I=3;I<P.positions.length;++I){var R=P.positions[I];h.push(R.x,R.y,R.z)}W(w,S,E,P,m,f,v,g)}else _.push(w,S,E);else _.push(w,S,E)}e.attributes.position.values=new Float64Array(h),l(m)&&(t.normal.values=a.createTypedArray(t.normal.componentDatatype,m)),l(f)&&(t.binormal.values=a.createTypedArray(t.binormal.componentDatatype,f)),l(v)&&(t.tangent.values=a.createTypedArray(t.tangent.componentDatatype,v)),l(g)&&(t.st.values=a.createTypedArray(t.st.componentDatatype,g));var O=d.computeNumberOfVertices(e);e.indices=p.createTypedArray(O,_)}function H(e){for(var t=e.attributes,r=t.position.values,n=e.indices,o=Array.prototype.slice.call(r,0),a=[],s=C.fromPointNormal(i.ZERO,i.UNIT_Y),u=n.length,c=0;u>c;c+=2){var h=n[c],m=n[c+1],f=i.fromArray(r,3*h),_=i.fromArray(r,3*m);if(Math.abs(f.y)<g.EPSILON6&&(f.y=f.y<0?-g.EPSILON6:g.EPSILON6,o[3*h+1]=f.y),Math.abs(_.y)<g.EPSILON6&&(_.y=_.y<0?-g.EPSILON6:g.EPSILON6,o[3*m+1]=_.y),a.push(h),f.x<0||_.x<0){var y=v.lineSegmentPlane(f,_,s);if(l(y)){var w=i.multiplyByScalar(i.UNIT_Y,5*g.EPSILON9,yt);f.y<0&&i.negate(w,w);var S=o.length/3;a.push(S,S+1);var E=i.add(y,w,Ct);o.push(E.x,E.y,E.z),i.negate(w,w),i.add(y,w,E),o.push(E.x,E.y,E.z)}}a.push(m)}e.attributes.position.values=new Float64Array(o);var b=d.computeNumberOfVertices(e);e.indices=p.createTypedArray(b,a)}var q={};q.toWireframe=function(e){var t=e.indices;if(l(t)){switch(e.primitiveType){case w.TRIANGLES:e.indices=b(t);break;case w.TRIANGLE_STRIP:e.indices=T(t);break;case w.TRIANGLE_FAN:e.indices=x(t);break;default:throw new u("geometry.primitiveType must be TRIANGLES, TRIANGLE_STRIP, or TRIANGLE_FAN.")}e.primitiveType=w.LINES}return e},q.createLineSegmentsForVectors=function(e,r,i){r=s(r,"normal"),i=s(i,1e4);for(var n=e.attributes.position.values,o=e.attributes[r].values,u=n.length,c=new Float64Array(2*u),h=0,p=0;u>p;p+=3)c[h++]=n[p],c[h++]=n[p+1],c[h++]=n[p+2],c[h++]=n[p]+o[p]*i,c[h++]=n[p+1]+o[p+1]*i,c[h++]=n[p+2]+o[p+2]*i;var f,v=e.boundingSphere;return l(v)&&(f=new t(v.center,v.radius+i)),new d({attributes:{position:new m({componentDatatype:a.DOUBLE,componentsPerAttribute:3,values:c})},primitiveType:w.LINES,boundingSphere:f})},q.createAttributeLocations=function(e){var t,r=["position","positionHigh","positionLow","position3DHigh","position3DLow","position2DHigh","position2DLow","pickColor","normal","st","binormal","tangent"],i=e.attributes,n={},o=0,a=r.length;for(t=0;a>t;++t){var s=r[t];l(i[s])&&(n[s]=o++)}for(var u in i)i.hasOwnProperty(u)&&!l(n[u])&&(n[u]=o++);return n},q.reorderForPreVertexCache=function(e){var t=d.computeNumberOfVertices(e),r=e.indices;if(l(r)){for(var i=new Int32Array(t),n=0;t>n;n++)i[n]=-1;for(var o,s=r,u=s.length,c=p.createTypedArray(t,u),h=0,m=0,f=0;u>h;)o=i[s[h]],-1!==o?c[m]=o:(o=s[h],i[o]=f,c[m]=f,++f),++h,++m;e.indices=c;var v=e.attributes;for(var g in v)if(v.hasOwnProperty(g)&&l(v[g])&&l(v[g].values)){for(var _=v[g],y=_.values,C=0,w=_.componentsPerAttribute,S=a.createTypedArray(_.componentDatatype,f*w);t>C;){var E=i[C];if(-1!==E)for(n=0;w>n;n++)S[w*E+n]=y[w*C+n];++C}_.values=S}}return e},q.reorderForPostVertexCache=function(e,t){var r=e.indices;if(e.primitiveType===w.TRIANGLES&&l(r)){for(var i=r.length,n=0,o=0;i>o;o++)r[o]>n&&(n=r[o]);e.indices=S.tipsify({indices:r,maximumIndex:n,cacheSize:t})}return e},q.fitToUnsignedShortIndices=function(e){var t=[],r=d.computeNumberOfVertices(e);if(l(e.indices)&&r>g.SIXTY_FOUR_KILOBYTES){var i,n=[],o=[],a=0,s=P(e.attributes),u=e.indices,c=u.length;e.primitiveType===w.TRIANGLES?i=3:e.primitiveType===w.LINES?i=2:e.primitiveType===w.POINTS&&(i=1);for(var h=0;c>h;h+=i){for(var m=0;i>m;++m){var p=u[h+m],f=n[p];l(f)||(f=a++,n[p]=f,A(s,e.attributes,p)),o.push(f)}a+i>g.SIXTY_FOUR_KILOBYTES&&(t.push(new d({attributes:s,indices:o,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere})),n=[],o=[],a=0,s=P(e.attributes))}0!==o.length&&t.push(new d({attributes:s,indices:o,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere}))}else t.push(e);return t};var j=new i,Y=new o;q.projectTo2D=function(e,t,r,n,o){var s=e.attributes[t];o=l(o)?o:new h;for(var c=o.ellipsoid,d=s.values,p=new Float64Array(d.length),f=0,v=0;v<d.length;v+=3){var g=i.fromArray(d,v,j),_=c.cartesianToCartographic(g,Y);if(!l(_))throw new u("Could not project point ("+g.x+", "+g.y+", "+g.z+") to 2D.");var y=o.project(_,j);p[f++]=y.x,p[f++]=y.y,p[f++]=y.z}return e.attributes[r]=s,e.attributes[n]=new m({componentDatatype:a.DOUBLE,componentsPerAttribute:3,values:p}),delete e.attributes[t],e};var X={high:0,low:0};q.encodeAttribute=function(e,t,r,i){for(var n=e.attributes[t],o=n.values,s=o.length,l=new Float32Array(s),u=new Float32Array(s),h=0;s>h;++h)c.encode(o[h],X),l[h]=X.high,u[h]=X.low;var d=n.componentsPerAttribute;return e.attributes[r]=new m({componentDatatype:a.FLOAT,componentsPerAttribute:d,values:l}),e.attributes[i]=new m({componentDatatype:a.FLOAT,componentsPerAttribute:d,values:u}),delete e.attributes[t],e};var Z=new i,Q=new y,J=new _;q.transformToWorldCoordinates=function(e){var r=e.modelMatrix;if(y.equals(r,y.IDENTITY))return e;var i=e.geometry.attributes;M(r,i.position),M(r,i.prevPosition),M(r,i.nextPosition),(l(i.normal)||l(i.binormal)||l(i.tangent))&&(y.inverse(r,Q),y.transpose(Q,Q),y.getRotation(Q,J),D(J,i.normal),D(J,i.binormal),D(J,i.tangent));var n=e.geometry.boundingSphere;return l(n)&&(e.geometry.boundingSphere=t.transform(n,r,n)),e.modelMatrix=y.clone(y.IDENTITY),e};var K=new i;q.combine=function(e){var r,n,o,a,s=e.length;e[0].modelMatrix;var u,c,h,m=l(e[0].geometry.indices),f=e[0].geometry.primitiveType,v=I(e);for(r in v)if(v.hasOwnProperty(r))for(u=v[r].values,a=0,n=0;s>n;++n)for(c=e[n].geometry.attributes[r].values,h=c.length,o=0;h>o;++o)u[a++]=c[o];var g;if(m){var _=0;for(n=0;s>n;++n)_+=e[n].geometry.indices.length;var y=d.computeNumberOfVertices(new d({attributes:v,primitiveType:w.POINTS})),C=p.createTypedArray(y,_),S=0,E=0;for(n=0;s>n;++n){var b=e[n].geometry.indices,T=b.length;for(a=0;T>a;++a)C[S++]=E+b[a];E+=d.computeNumberOfVertices(e[n].geometry)}g=C}var x,P=new i,A=0;for(n=0;s>n;++n){if(x=e[n].geometry.boundingSphere,!l(x)){P=void 0;break}i.add(x.center,P,P)}if(l(P))for(i.divideByScalar(P,s,P),n=0;s>n;++n){x=e[n].geometry.boundingSphere;var M=i.magnitude(i.subtract(x.center,P,K))+x.radius;M>A&&(A=M)}return new d({attributes:v,indices:g,primitiveType:f,boundingSphere:l(P)?new t(P,A):void 0})};var $=new i,et=new i,tt=new i,rt=new i;q.computeNormal=function(e){for(var t=e.indices,r=e.attributes,n=r.position.values,o=r.position.values.length/3,s=t.length,l=new Array(o),u=new Array(s/3),c=new Array(s),h=0;o>h;h++)l[h]={indexOffset:0,count:0,currentCount:0};var d=0;for(h=0;s>h;h+=3){var p=t[h],f=t[h+1],v=t[h+2],g=3*p,_=3*f,y=3*v;et.x=n[g],et.y=n[g+1],et.z=n[g+2],tt.x=n[_],tt.y=n[_+1],tt.z=n[_+2],rt.x=n[y],rt.y=n[y+1],rt.z=n[y+2],l[p].count++,l[f].count++,l[v].count++,i.subtract(tt,et,tt),i.subtract(rt,et,rt),u[d]=i.cross(tt,rt,new i),d++}var C=0;for(h=0;o>h;h++)l[h].indexOffset+=C,C+=l[h].count;d=0;var w;for(h=0;s>h;h+=3){w=l[t[h]];var S=w.indexOffset+w.currentCount;c[S]=d,w.currentCount++,w=l[t[h+1]],S=w.indexOffset+w.currentCount,c[S]=d,w.currentCount++,w=l[t[h+2]],S=w.indexOffset+w.currentCount,c[S]=d,w.currentCount++,d++}var E=new Float32Array(3*o);for(h=0;o>h;h++){var b=3*h;if(w=l[h],w.count>0){for(i.clone(i.ZERO,$),d=0;d<w.count;d++)i.add($,u[c[w.indexOffset+d]],$);i.normalize($,$),E[b]=$.x,E[b+1]=$.y,E[b+2]=$.z}else E[b]=0,E[b+1]=0,E[b+2]=1}return e.attributes.normal=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:E}),e};var it=new i,nt=new i,ot=new i;q.computeBinormalAndTangent=function(e){e.attributes;for(var t=e.indices,r=e.attributes.position.values,n=e.attributes.normal.values,o=e.attributes.st.values,s=e.attributes.position.values.length/3,l=t.length,u=new Array(3*s),c=0;c<u.length;c++)u[c]=0;var h,d,p;for(c=0;l>c;c+=3){var f=t[c],v=t[c+1],g=t[c+2];h=3*f,d=3*v,p=3*g;var _=2*f,y=2*v,C=2*g,w=r[h],S=r[h+1],E=r[h+2],b=o[_],T=o[_+1],x=o[y+1]-T,P=o[C+1]-T,A=1/((o[y]-b)*P-(o[C]-b)*x),M=(P*(r[d]-w)-x*(r[p]-w))*A,D=(P*(r[d+1]-S)-x*(r[p+1]-S))*A,I=(P*(r[d+2]-E)-x*(r[p+2]-E))*A;u[h]+=M,u[h+1]+=D,u[h+2]+=I,u[d]+=M,u[d+1]+=D,u[d+2]+=I,u[p]+=M,u[p+1]+=D,u[p+2]+=I
}var R=new Float32Array(3*s),O=new Float32Array(3*s);for(c=0;s>c;c++){h=3*c,d=h+1,p=h+2;var L=i.fromArray(n,h,it),N=i.fromArray(u,h,ot),B=i.dot(L,N);i.multiplyByScalar(L,B,nt),i.normalize(i.subtract(N,nt,N),N),O[h]=N.x,O[d]=N.y,O[p]=N.z,i.normalize(i.cross(L,N,N),N),R[h]=N.x,R[d]=N.y,R[p]=N.z}return e.attributes.tangent=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:O}),e.attributes.binormal=new m({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:R}),e};var at=new i,st=new i,lt=new i,ut=new i,ct=new i,ht={positions:new Array(7),indices:new Array(9)},dt=new r,mt=new r,pt=new r,ft=new i,vt=new i,gt=new i,_t=new i,yt=new i,Ct=new i;return q.wrapLongitude=function(e){var r=e.boundingSphere;if(l(r)){var i=r.center.x-r.radius;if(i>0||t.intersect(r,n.UNIT_Y)!==f.INTERSECTING)return e}return z(e),e.primitiveType===w.TRIANGLES?G(e):e.primitiveType===w.LINES&&H(e),e},q}),r("Core/EllipseGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EllipseGeometryLibrary","./Ellipsoid","./GeographicProjection","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix3","./PrimitiveType","./Quaternion","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w){"use strict";function S(e,t,i){var o=t.vertexFormat,a=t.center,s=t.semiMajorAxis,u=t.ellipsoid,h=t.stRotation,p=i?2*(e.length/3):e.length/3,f=o.st?new Float32Array(2*p):void 0,v=o.normal?new Float32Array(3*p):void 0,g=o.tangent?new Float32Array(3*p):void 0,y=o.binormal?new Float32Array(3*p):void 0,w=0,S=N,E=B,b=F,T=new c(u),x=T.project(u.cartesianToCartographic(a,z),V),P=u.scaleToGeodeticSurface(a,A);u.geodeticSurfaceNormal(P,P);for(var I=C.fromAxisAngle(P,h,L),k=_.fromQuaternion(I,O),U=e.length,W=i?U:0,G=2*(W/3),H=0;U>H;H+=3){var q=H+1,j=H+2,Y=r.fromArray(e,H,A);if(o.st){var X=_.multiplyByVector(k,Y,M),Z=T.project(u.cartesianToCartographic(X,z),D);r.subtract(Z,x,Z),R.x=(Z.x+s)/(2*s),R.y=(Z.y+s)/(2*s),i&&(f[w+G]=R.x,f[w+1+G]=R.y),f[w++]=R.x,f[w++]=R.y}S=u.geodeticSurfaceNormal(Y,S),(o.normal||o.tangent||o.binormal)&&((o.tangent||o.binormal)&&(E=r.cross(r.UNIT_Z,S,E),_.multiplyByVector(k,E,E)),o.normal&&(v[H]=S.x,v[q]=S.y,v[j]=S.z,i&&(v[H+W]=-S.x,v[q+W]=-S.y,v[j+W]=-S.z)),o.tangent&&(g[H]=E.x,g[q]=E.y,g[j]=E.z,i&&(g[H+W]=-E.x,g[q+W]=-E.y,g[j+W]=-E.z)),o.binormal&&(b=r.cross(S,E,b),y[H]=b.x,y[q]=b.y,y[j]=b.z,i&&(y[H+W]=b.x,y[q+W]=b.y,y[j+W]=b.z)))}var Q=new m;if(o.position){var J=l.raisePositionsToHeight(e,t,i);Q.position=new d({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:J})}return o.st&&(Q.st=new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:f})),o.normal&&(Q.normal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:v})),o.tangent&&(Q.tangent=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:g})),o.binormal&&(Q.binormal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:y})),Q}function E(e){var t,r,i,n,o,a=new Array(2*e*(e+1)),s=0;for(n=1;e>n;++n){for(i=n*(n+1),t=(n-1)*n,a[s++]=i++,a[s++]=t,a[s++]=i,r=2*n,o=0;r-1>o;++o)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;a[s++]=i++,a[s++]=t,a[s++]=i}for(r=2*e,++i,++t,n=0;r-1>n;++n)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;for(++t,++i,n=e-1;n>0;--n){for(a[s++]=t++,a[s++]=t,a[s++]=i,r=2*n,o=0;r-1>o;++o)a[s++]=i,a[s++]=t++,a[s++]=t,a[s++]=i++,a[s++]=t,a[s++]=i;a[s++]=t++,a[s++]=t++,a[s++]=i++}return a}function b(t){var i=t.center;k=r.multiplyByScalar(t.ellipsoid.geodeticSurfaceNormal(i,k),t.height,k),k=r.add(i,k,k);var n=new e(k,t.semiMajorAxis),o=l.computeEllipsePositions(t,!0,!1),a=o.positions,s=o.numPts,u=S(a,t,!1),c=E(s);return c=v.createTypedArray(a.length/3,c),{boundingSphere:n,attributes:u,indices:c}}function T(e,t){var i=t.vertexFormat,o=t.center,a=t.semiMajorAxis,s=t.ellipsoid,l=t.height,u=t.extrudedHeight,h=t.stRotation,p=2*(e.length/3),f=new Float64Array(3*p),v=i.st?new Float32Array(2*p):void 0,g=i.normal?new Float32Array(3*p):void 0,y=i.tangent?new Float32Array(3*p):void 0,w=i.binormal?new Float32Array(3*p):void 0,S=0,E=N,b=B,T=F,x=new c(s),P=x.project(s.cartesianToCartographic(o,z),V),k=s.scaleToGeodeticSurface(o,A);s.geodeticSurfaceNormal(k,k);for(var U=C.fromAxisAngle(k,h,L),W=_.fromQuaternion(U,O),G=e.length,H=2*(G/3),q=0;G>q;q+=3){var j,Y=q+1,X=q+2,Z=r.fromArray(e,q,A);if(i.st){var Q=_.multiplyByVector(W,Z,M),J=x.project(s.cartesianToCartographic(Q,z),D);r.subtract(J,P,J),R.x=(J.x+a)/(2*a),R.y=(J.y+a)/(2*a),v[S+H]=R.x,v[S+1+H]=R.y,v[S++]=R.x,v[S++]=R.y}Z=s.scaleToGeodeticSurface(Z,Z),j=r.clone(Z,M),E=s.geodeticSurfaceNormal(Z,E);var K=r.multiplyByScalar(E,l,I);if(Z=r.add(Z,K,Z),K=r.multiplyByScalar(E,u,K),j=r.add(j,K,j),i.position&&(f[q+G]=j.x,f[Y+G]=j.y,f[X+G]=j.z,f[q]=Z.x,f[Y]=Z.y,f[X]=Z.z),i.normal||i.tangent||i.binormal){T=r.clone(E,T);var $=r.fromArray(e,(q+3)%G,I);r.subtract($,Z,$);var et=r.subtract(j,Z,D);E=r.normalize(r.cross(et,$,E),E),i.normal&&(g[q]=E.x,g[Y]=E.y,g[X]=E.z,g[q+G]=E.x,g[Y+G]=E.y,g[X+G]=E.z),i.tangent&&(b=r.normalize(r.cross(T,E,b),b),y[q]=b.x,y[Y]=b.y,y[X]=b.z,y[q+G]=b.x,y[q+1+G]=b.y,y[q+2+G]=b.z),i.binormal&&(w[q]=T.x,w[Y]=T.y,w[X]=T.z,w[q+G]=T.x,w[Y+G]=T.y,w[X+G]=T.z)}}var tt=new m;return i.position&&(tt.position=new d({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:f})),i.st&&(tt.st=new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:v})),i.normal&&(tt.normal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:g})),i.tangent&&(tt.tangent=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:y})),i.binormal&&(tt.binormal=new d({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:w})),tt}function x(e){for(var t,r,i,n,o=e.length/3,a=v.createTypedArray(o,6*o),s=0,l=0;o-1>l;l++)t=l,i=l+o,r=t+1,n=r+o,a[s++]=t,a[s++]=i,a[s++]=r,a[s++]=r,a[s++]=i,a[s++]=n;return t=o-1,i=l+o,r=0,n=r+o,a[s++]=t,a[s++]=i,a[s++]=r,a[s++]=r,a[s++]=i,a[s++]=n,a}function P(t){var i=t.center,n=t.ellipsoid,o=t.semiMajorAxis,a=r.multiplyByScalar(n.geodeticSurfaceNormal(i,A),t.height,A);U.center=r.add(i,a,U.center),U.radius=o,a=r.multiplyByScalar(n.geodeticSurfaceNormal(i,a),t.extrudedHeight,a),W.center=r.add(i,a,W.center),W.radius=o;var s=l.computeEllipsePositions(t,!0,!0),u=s.positions,c=s.numPts,d=s.outerPositions,m=e.union(U,W),g=S(u,t,!0),_=E(c),C=_.length;_.length=2*C;for(var w=u.length/3,b=0;C>b;b+=3)_[b+C]=_[b+2]+w,_[b+1+C]=_[b+1]+w,_[b+2+C]=_[b]+w;var P=v.createTypedArray(2*w/3,_),M=new h({attributes:g,indices:P,primitiveType:y.TRIANGLES}),D=T(d,t);_=x(d);var I=v.createTypedArray(2*d.length/3,_),R=new h({attributes:D,indices:I,primitiveType:y.TRIANGLES}),O=f.combine([new p({geometry:M}),new p({geometry:R})]);return{boundingSphere:m,attributes:O.attributes,indices:O.indices}}var A=new r,M=new r,D=new r,I=new r,R=new t,O=new _,L=new C,N=new r,B=new r,F=new r,z=new i,V=new r,k=new r,U=new e,W=new e,G=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.center,i=e.semiMajorAxis,n=e.semiMinorAxis,s=o(e.granularity,g.RADIANS_PER_DEGREE),l=o(e.height,0),c=e.extrudedHeight,h=a(c)&&!g.equalsEpsilon(l,c,1);this._center=r.clone(t),this._semiMajorAxis=i,this._semiMinorAxis=n,this._ellipsoid=o(e.ellipsoid,u.WGS84),this._rotation=o(e.rotation,0),this._stRotation=o(e.stRotation,0),this._height=l,this._granularity=s,this._vertexFormat=o(e.vertexFormat,w.DEFAULT),this._extrudedHeight=c,this._extrude=h,this._workerName="createEllipseGeometry"};return G.createGeometry=function(e){var t,r={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:e._height,extrudedHeight:e._extrudedHeight,granularity:e._granularity,vertexFormat:e._vertexFormat,stRotation:e._stRotation};return e._extrude?(r.extrudedHeight=Math.min(e._extrudedHeight,e._height),r.height=Math.max(e._extrudedHeight,e._height),t=P(r)):t=b(r),new h({attributes:t.attributes,indices:t.indices,primitiveType:y.TRIANGLES,boundingSphere:t.boundingSphere})},G}),r("Core/CircleGeometry",["./defaultValue","./defined","./DeveloperError","./EllipseGeometry"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.radius,n={center:t.center,semiMajorAxis:r,semiMinorAxis:r,ellipsoid:t.ellipsoid,height:t.height,extrudedHeight:t.extrudedHeight,granularity:t.granularity,vertexFormat:t.vertexFormat,stRotation:t.stRotation};this._ellipseGeometry=new i(n),this._workerName="createCircleGeometry"};return n.createGeometry=function(e){return i.createGeometry(e._ellipseGeometry)},n}),r("Core/EllipseOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EllipseGeometryLibrary","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(i){var n=i.center;g=t.multiplyByScalar(i.ellipsoid.geodeticSurfaceNormal(n,g),i.height,g),g=t.add(n,g,g);for(var o=new e(g,i.semiMajorAxis),s=a.computeEllipsePositions(i,!1,!0).outerPositions,l=new c({position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:a.raisePositionsToHeight(s,i,!1)})}),d=s.length/3,m=h.createTypedArray(d,2*d),p=0,f=0;d-1>f;f++)m[p++]=f,m[p++]=f+1;return m[p++]=d-1,m[p++]=0,{boundingSphere:o,attributes:l,indices:m}}function f(n){var o=i(n.numberOfVerticalLines,16);o=Math.max(o,0);var s=n.center,l=n.ellipsoid,d=n.semiMajorAxis,m=t.multiplyByScalar(l.geodeticSurfaceNormal(s,v),n.height,v);_.center=t.add(s,m,_.center),_.radius=d,m=t.multiplyByScalar(l.geodeticSurfaceNormal(s,m),n.extrudedHeight,m),y.center=t.add(s,m,y.center),y.radius=d;var p=a.computeEllipsePositions(n,!1,!0).outerPositions,f=new c({position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:a.raisePositionsToHeight(p,n,!0)})});p=f.position.values;var g=e.union(_,y),C=p.length/3,w=h.createTypedArray(C,2*C+2*o);C/=2;for(var S=0,E=0;C-1>E;E++)w[S++]=E,w[S++]=E+1,w[S++]=E+C,w[S++]=E+C+1;w[S++]=C-1,w[S++]=0,w[S++]=C+C-1,w[S++]=C;var b;if(o>0){var T=Math.min(o,C);b=Math.round(C/T)}var x=Math.min(b*o,C);if(o>0)for(E=0;x>E;E+=b)w[S++]=E,w[S++]=E+C;return{boundingSphere:g,attributes:f,indices:w}}var v=new t,g=new t,_=new e,y=new e,C=function(e){e=i(e,i.EMPTY_OBJECT);var r=e.center,o=e.semiMajorAxis,a=e.semiMinorAxis,l=i(e.granularity,d.RADIANS_PER_DEGREE),u=i(e.height,0),c=e.extrudedHeight,h=n(c)&&!d.equalsEpsilon(u,c,1);this._center=t.clone(r),this._semiMajorAxis=o,this._semiMinorAxis=a,this._ellipsoid=i(e.ellipsoid,s.WGS84),this._rotation=i(e.rotation,0),this._height=u,this._granularity=l,this._extrudedHeight=c,this._extrude=h,this._numberOfVerticalLines=Math.max(i(e.numberOfVerticalLines,16),0),this._workerName="createEllipseOutlineGeometry"};return C.createGeometry=function(e){var t,r={center:e._center,semiMajorAxis:e._semiMajorAxis,semiMinorAxis:e._semiMinorAxis,ellipsoid:e._ellipsoid,rotation:e._rotation,height:e._height,extrudedHeight:e._extrudedHeight,granularity:e._granularity,numberOfVerticalLines:e._numberOfVerticalLines};return e._extrude?(r.extrudedHeight=Math.min(e._extrudedHeight,e._height),r.height=Math.max(e._extrudedHeight,e._height),t=f(r)):t=p(r),new l({attributes:t.attributes,indices:t.indices,primitiveType:m.LINES,boundingSphere:t.boundingSphere})},C}),r("Core/CircleOutlineGeometry",["./defaultValue","./defined","./DeveloperError","./EllipseOutlineGeometry"],function(e,t,r,i){"use strict";var n=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.radius,n={center:t.center,semiMajorAxis:r,semiMinorAxis:r,ellipsoid:t.ellipsoid,height:t.height,extrudedHeight:t.extrudedHeight,granularity:t.granularity,numberOfVerticalLines:t.numberOfVerticalLines};this._ellipseGeometry=new i(n),this._workerName="createCircleOutlineGeometry"};return n.createGeometry=function(e){return i.createGeometry(e._ellipseGeometry)},n}),r("Core/ClockRange",["./freezeObject"],function(e){"use strict";var t={UNBOUNDED:0,CLAMPED:1,LOOP_STOP:2};return e(t)}),r("Core/ClockStep",["./freezeObject"],function(e){"use strict";var t={TICK_DEPENDENT:0,SYSTEM_CLOCK_MULTIPLIER:1,SYSTEM_CLOCK:2};return e(t)}),r("Core/getTimestamp",["./defined"],function(e){"use strict";var t;return t="undefined"!=typeof performance&&e(performance.now)?function(){return performance.now()}:function(){return Date.now()}}),r("ThirdParty/sprintf",[],function(){function e(){var e=/%%|%(\d+\$)?([-+\'#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuideEfFgG])/g,t=arguments,r=0,i=t[r++],n=function(e,t,r,i){r||(r=" ");var n=e.length>=t?"":Array(1+t-e.length>>>0).join(r);return i?e+n:n+e},o=function(e,t,r,i,o,a){var s=i-e.length;return s>0&&(e=r||!o?n(e,i,a,r):e.slice(0,t.length)+n("",s,"0",!0)+e.slice(t.length)),e},a=function(e,t,r,i,a,s,l){var u=e>>>0;return r=r&&u&&{2:"0b",8:"0",16:"0x"}[t]||"",e=r+n(u.toString(t),s||0,"0",!1),o(e,r,i,a,l)},s=function(e,t,r,i,n,a){return null!=i&&(e=e.slice(0,i)),o(e,"",t,r,n,a)},l=function(e,i,l,u,c,h,d){var m,p,f,v,g;if("%%"==e)return"%";for(var _=!1,y="",C=!1,w=!1,S=" ",E=l.length,b=0;l&&E>b;b++)switch(l.charAt(b)){case" ":y=" ";break;case"+":y="+";break;case"-":_=!0;break;case"'":S=l.charAt(b+1);break;case"0":C=!0;break;case"#":w=!0}if(u=u?"*"==u?+t[r++]:"*"==u.charAt(0)?+t[u.slice(1,-1)]:+u:0,0>u&&(u=-u,_=!0),!isFinite(u))throw new Error("sprintf: (minimum-)width must be finite");switch(h=h?"*"==h?+t[r++]:"*"==h.charAt(0)?+t[h.slice(1,-1)]:+h:"fFeE".indexOf(d)>-1?6:"d"==d?0:void 0,g=i?t[i.slice(0,-1)]:t[r++],d){case"s":return s(String(g),_,u,h,C,S);case"c":return s(String.fromCharCode(+g),_,u,h,C);case"b":return a(g,2,w,_,u,h,C);case"o":return a(g,8,w,_,u,h,C);case"x":return a(g,16,w,_,u,h,C);case"X":return a(g,16,w,_,u,h,C).toUpperCase();case"u":return a(g,10,w,_,u,h,C);case"i":case"d":return m=+g||0,m=Math.round(m-m%1),p=0>m?"-":y,g=p+n(String(Math.abs(m)),h,"0",!1),o(g,p,_,u,C);case"e":case"E":case"f":case"F":case"g":case"G":return m=+g,p=0>m?"-":y,f=["toExponential","toFixed","toPrecision"]["efg".indexOf(d.toLowerCase())],v=["toString","toUpperCase"]["eEfFgG".indexOf(d)%2],g=p+Math.abs(m)[f](h),o(g,p,_,u,C)[v]();default:return e}};return i.replace(e,l)}return e}),r("Core/binarySearch",["./defined","./DeveloperError"],function(){"use strict";var e=function(e,t,r){for(var i,n,o=0,a=e.length-1;a>=o;)if(i=~~((o+a)/2),n=r(e[i],t),0>n)o=i+1;else{if(!(n>0))return i;a=i-1}return~(a+1)};return e}),r("Core/GregorianDate",[],function(){"use strict";var e=function(e,t,r,i,n,o,a,s){this.year=e,this.month=t,this.day=r,this.hour=i,this.minute=n,this.second=o,this.millisecond=a,this.isLeapSecond=s};return e}),r("Core/isLeapYear",["./DeveloperError"],function(){"use strict";function e(e){return 0===e%4&&0!==e%100||0===e%400}return e}),r("Core/LeapSecond",[],function(){"use strict";var e=function(e,t){this.julianDate=e,this.offset=t};return e}),r("Core/TimeConstants",["./freezeObject"],function(e){"use strict";var t={SECONDS_PER_MILLISECOND:.001,SECONDS_PER_MINUTE:60,MINUTES_PER_HOUR:60,HOURS_PER_DAY:24,SECONDS_PER_HOUR:3600,MINUTES_PER_DAY:1440,SECONDS_PER_DAY:86400,DAYS_PER_JULIAN_CENTURY:36525,PICOSECOND:1e-9,MODIFIED_JULIAN_DATE_DIFFERENCE:2400000.5};return e(t)}),r("Core/TimeStandard",["./freezeObject"],function(e){"use strict";var t={UTC:0,TAI:1};return e(t)}),r("Core/JulianDate",["../ThirdParty/sprintf","./binarySearch","./defaultValue","./defined","./DeveloperError","./GregorianDate","./isLeapYear","./LeapSecond","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){return M.compare(e.julianDate,t.julianDate)}function h(e){_.julianDate=e;var r=M.leapSeconds,i=t(r,_,c);0>i&&(i=~i),i>=r.length&&(i=r.length-1);var n=r[i].offset;if(i>0){var o=M.secondsDifference(r[i].julianDate,e);o>n&&(i--,n=r[i].offset)}M.addSeconds(e,n,e)}function d(e,r){_.julianDate=e;var i=M.leapSeconds,n=t(i,_,c);if(0>n&&(n=~n),0===n)return M.addSeconds(e,-i[0].offset,r);if(n>=i.length)return M.addSeconds(e,-i[n-1].offset,r);var o=M.secondsDifference(i[n].julianDate,e);return 0===o?M.addSeconds(e,-i[n].offset,r):1>=o?void 0:M.addSeconds(e,-i[--n].offset,r)}function m(e,t,r){var i=0|t/l.SECONDS_PER_DAY;return e+=i,t-=l.SECONDS_PER_DAY*i,0>t&&(e--,t+=l.SECONDS_PER_DAY),r.dayNumber=e,r.secondsOfDay=t,r}function p(e,t,r,i,n,o,a){var s=0|(t-14)/12,u=e+4800+s,c=(0|1461*u/4)+(0|367*(t-2-12*s)/12)-(0|3*((u+100)/100)/4)+r-32075;i-=12,0>i&&(i+=24);var h=o+(i*l.SECONDS_PER_HOUR+n*l.SECONDS_PER_MINUTE+a*l.SECONDS_PER_MILLISECOND);return h>=43200&&(c-=1),[c,h]}var f=new o,v=[31,28,31,30,31,30,31,31,30,31,30,31],g=29,_=new s,y=/^(\d{4})$/,C=/^(\d{4})-(\d{2})$/,w=/^(\d{4})-?(\d{3})$/,S=/^(\d{4})-?W(\d{2})-?(\d{1})?$/,E=/^(\d{4})-?(\d{2})-?(\d{2})$/,b=/([Z+\-])?(\d{2})?:?(\d{2})?$/,T=/^(\d{2})(\.\d+)?/.source+b.source,x=/^(\d{2}):?(\d{2})(\.\d+)?/.source+b.source,P=/^(\d{2}):?(\d{2}):?(\d{2})(\.\d+)?/.source+b.source,A="Invalid ISO 8601 date.",M=function(e,t,i){this.dayNumber=void 0,this.secondsOfDay=void 0,e=r(e,0),t=r(t,0),i=r(i,u.UTC);var n=0|e;t+=(e-n)*l.SECONDS_PER_DAY,m(n,t,this),i===u.UTC&&h(this)};M.fromDate=function(e,t){var r=p(e.getUTCFullYear(),e.getUTCMonth()+1,e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds());return i(t)?(m(r[0],r[1],t),h(t),t):new M(r[0],r[1],u.UTC)},M.fromIso8601=function(e,t){e=e.replace(",",".");var r,o,s,l=e.split("T"),c=1,d=1,f=0,_=0,b=0,D=0,I=l[0],R=l[1];if(!i(I))throw new n(A);var O;if(l=I.match(E),null!==l){if(O=I.split("-").length-1,O>0&&2!==O)throw new n(A);r=+l[1],c=+l[2],d=+l[3]}else if(l=I.match(C),null!==l)r=+l[1],c=+l[2];else if(l=I.match(y),null!==l)r=+l[1];else{var L;if(l=I.match(w),null!==l){if(r=+l[1],L=+l[2],s=a(r),1>L||s&&L>366||!s&&L>365)throw new n(A)}else{if(l=I.match(S),null===l)throw new n(A);r=+l[1];var N=+l[2],B=+l[3]||0;if(O=I.split("-").length-1,O>0&&(!i(l[3])&&1!==O||i(l[3])&&2!==O))throw new n(A);var F=new Date(Date.UTC(r,0,4));L=7*N+B-F.getUTCDay()-3}o=new Date(Date.UTC(r,0,1)),o.setUTCDate(L),c=o.getUTCMonth()+1,d=o.getUTCDate()}if(s=a(r),1>c||c>12||1>d||(2!==c||!s)&&d>v[c-1]||s&&2===c&&d>g)throw new n(A);var z;if(i(R)){if(l=R.match(P),null!==l){if(O=R.split(":").length-1,O>0&&2!==O&&3!==O)throw new n(A);f=+l[1],_=+l[2],b=+l[3],D=1e3*+(l[4]||0),z=5}else if(l=R.match(x),null!==l){if(O=R.split(":").length-1,O>0&&1!==O)throw new n(A);f=+l[1],_=+l[2],b=60*+(l[3]||0),z=4}else{if(l=R.match(T),null===l)throw new n(A);f=+l[1],_=60*+(l[2]||0),z=3}if(_>=60||b>=61||f>24||24===f&&(_>0||b>0||D>0))throw new n(A);var V=l[z],k=+l[z+1],U=+(l[z+2]||0);switch(V){case"+":f-=k,_-=U;break;case"-":f+=k,_+=U;break;case"Z":break;default:_+=new Date(Date.UTC(r,c-1,d,f,_)).getTimezoneOffset()}}else _+=new Date(Date.UTC(r,c-1,d)).getTimezoneOffset();var W=60===b;for(W&&b--;_>=60;)_-=60,f++;for(;f>=24;)f-=24,d++;for(o=s&&2===c?g:v[c-1];d>o;)d-=o,c++,c>12&&(c-=12,r++),o=s&&2===c?g:v[c-1];for(;0>_;)_+=60,f--;for(;0>f;)f+=24,d--;for(;1>d;)c--,1>c&&(c+=12,r--),o=s&&2===c?g:v[c-1],d+=o;var G=p(r,c,d,f,_,b,D);return i(t)?(m(G[0],G[1],t),h(t)):t=new M(G[0],G[1],u.UTC),W&&M.addSeconds(t,1,t),t},M.now=function(e){return M.fromDate(new Date,e)};var D=new M(0,0,u.TAI);return M.toGregorianDate=function(e,t){var r=!1,n=d(e,D);i(n)||(M.addSeconds(e,-1,D),n=d(D,D),r=!0);var a=n.dayNumber,s=n.secondsOfDay;s>=43200&&(a+=1);var u=0|a+68569,c=0|4*u/146097;u=0|u-(0|(146097*c+3)/4);var h=0|4e3*(u+1)/1461001;u=0|u-(0|1461*h/4)+31;var m=0|80*u/2447,p=0|u-(0|2447*m/80);u=0|m/11;var f=0|m+2-12*u,v=0|100*(c-49)+h+u,g=0|s/l.SECONDS_PER_HOUR,_=s-g*l.SECONDS_PER_HOUR,y=0|_/l.SECONDS_PER_MINUTE;_-=y*l.SECONDS_PER_MINUTE;var C=0|_,w=(_-C)/l.SECONDS_PER_MILLISECOND;return g+=12,g>23&&(g-=24),r&&(C+=1),i(t)?(t.year=v,t.month=f,t.day=p,t.hour=g,t.minute=y,t.second=C,t.millisecond=w,t.isLeapSecond=r,t):new o(v,f,p,g,y,C,w,r)},M.toDate=function(e){var t=M.toGregorianDate(e,f),r=t.second;return t.isLeapSecond&&(r-=1),new Date(Date.UTC(t.year,t.month-1,t.day,t.hour,t.minute,r,t.millisecond))},M.toIso8601=function(t,r){var n,o=M.toGregorianDate(t,o);return i(r)||0===o.millisecond?i(r)&&0!==r?(n=(.01*o.millisecond).toFixed(r).replace(".","").slice(0,r),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",o.year,o.month,o.day,o.hour,o.minute,o.second,n)):e("%04d-%02d-%02dT%02d:%02d:%02dZ",o.year,o.month,o.day,o.hour,o.minute,o.second):(n=(.01*o.millisecond).toString().replace(".",""),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",o.year,o.month,o.day,o.hour,o.minute,o.second,n))},M.clone=function(e,t){return i(e)?i(t)?(t.dayNumber=e.dayNumber,t.secondsOfDay=e.secondsOfDay,t):new M(e.dayNumber,e.secondsOfDay,u.TAI):void 0},M.compare=function(e,t){var r=e.dayNumber-t.dayNumber;return 0!==r?r:e.secondsOfDay-t.secondsOfDay},M.equals=function(e,t){return e===t||i(e)&&i(t)&&e.dayNumber===t.dayNumber&&e.secondsOfDay===t.secondsOfDay},M.equalsEpsilon=function(e,t,r){return e===t||i(e)&&i(t)&&Math.abs(M.secondsDifference(e,t))<=r},M.totalDays=function(e){return e.dayNumber+e.secondsOfDay/l.SECONDS_PER_DAY},M.secondsDifference=function(e,t){var r=(e.dayNumber-t.dayNumber)*l.SECONDS_PER_DAY;return r+(e.secondsOfDay-t.secondsOfDay)},M.daysDifference=function(e,t){var r=e.dayNumber-t.dayNumber,i=(e.secondsOfDay-t.secondsOfDay)/l.SECONDS_PER_DAY;return r+i},M.computeTaiMinusUtc=function(e){_.julianDate=e;var r=M.leapSeconds,i=t(r,_,c);return 0>i&&(i=~i,--i,0>i&&(i=0)),r[i].offset},M.addSeconds=function(e,t,r){return m(e.dayNumber,e.secondsOfDay+t,r)},M.addMinutes=function(e,t,r){var i=e.secondsOfDay+t*l.SECONDS_PER_MINUTE;return m(e.dayNumber,i,r)},M.addHours=function(e,t,r){var i=e.secondsOfDay+t*l.SECONDS_PER_HOUR;return m(e.dayNumber,i,r)},M.addDays=function(e,t,r){var i=e.dayNumber+t;return m(i,e.secondsOfDay,r)},M.lessThan=function(e,t){return M.compare(e,t)<0},M.lessThanOrEquals=function(e,t){return M.compare(e,t)<=0},M.greaterThan=function(e,t){return M.compare(e,t)>0},M.greaterThanOrEquals=function(e,t){return M.compare(e,t)>=0},M.prototype.clone=function(e){return M.clone(this,e)},M.prototype.equals=function(e){return M.equals(this,e)},M.prototype.equalsEpsilon=function(e,t){return M.equalsEpsilon(this,e,t)},M.prototype.toString=function(){return M.toIso8601(this)},M.leapSeconds=[new s(new M(2441317,43210,u.TAI),10),new s(new M(2441499,43211,u.TAI),11),new s(new M(2441683,43212,u.TAI),12),new s(new M(2442048,43213,u.TAI),13),new s(new M(2442413,43214,u.TAI),14),new s(new M(2442778,43215,u.TAI),15),new s(new M(2443144,43216,u.TAI),16),new s(new M(2443509,43217,u.TAI),17),new s(new M(2443874,43218,u.TAI),18),new s(new M(2444239,43219,u.TAI),19),new s(new M(2444786,43220,u.TAI),20),new s(new M(2445151,43221,u.TAI),21),new s(new M(2445516,43222,u.TAI),22),new s(new M(2446247,43223,u.TAI),23),new s(new M(2447161,43224,u.TAI),24),new s(new M(2447892,43225,u.TAI),25),new s(new M(2448257,43226,u.TAI),26),new s(new M(2448804,43227,u.TAI),27),new s(new M(2449169,43228,u.TAI),28),new s(new M(2449534,43229,u.TAI),29),new s(new M(2450083,43230,u.TAI),30),new s(new M(2450630,43231,u.TAI),31),new s(new M(2451179,43232,u.TAI),32),new s(new M(2453736,43233,u.TAI),33),new s(new M(2454832,43234,u.TAI),34),new s(new M(2456109,43235,u.TAI),35)],M}),r("Core/Clock",["./ClockRange","./ClockStep","./defaultValue","./defined","./DeveloperError","./Event","./getTimestamp","./JulianDate"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(n){n=r(n,r.EMPTY_OBJECT);var l=n.startTime,u=!i(l),c=n.stopTime,h=!i(c),d=n.currentTime,m=!i(d);u&&h&&m?(d=s.now(),l=s.clone(d),c=s.addDays(d,1,new s)):u&&h?(l=s.clone(d),c=s.addDays(d,1,new s)):u&&m?(l=s.addDays(c,-1,new s),d=s.clone(l)):m&&h?(d=s.clone(l),c=s.addDays(l,1,new s)):m?d=s.clone(l):h?c=s.addDays(d,1,new s):u&&(l=s.clone(d)),this.startTime=l,this.stopTime=c,this.currentTime=d,this.multiplier=r(n.multiplier,1),this.clockStep=r(n.clockStep,t.SYSTEM_CLOCK_MULTIPLIER),this.clockRange=r(n.clockRange,e.UNBOUNDED),this.canAnimate=r(n.canAnimate,!0),this.shouldAnimate=r(n.shouldAnimate,!0),this.onTick=new o,this._lastSystemTime=a()};return l.prototype.tick=function(){var r=a(),i=s.clone(this.currentTime),n=this.startTime,o=this.stopTime,l=this.multiplier;if(this.canAnimate&&this.shouldAnimate)if(this.clockStep===t.SYSTEM_CLOCK)i=s.now(i);else{if(this.clockStep===t.TICK_DEPENDENT)i=s.addSeconds(i,l,i);else{var u=r-this._lastSystemTime;i=s.addSeconds(i,l*(u/1e3),i)}if(this.clockRange===e.CLAMPED)s.lessThan(i,n)?i=s.clone(n,i):s.greaterThan(i,o)&&(i=s.clone(o,i));else if(this.clockRange===e.LOOP_STOP)for(s.lessThan(i,n)&&(i=s.clone(n,i));s.greaterThan(i,o);)i=s.addSeconds(n,s.secondsDifference(i,o),i)}return this.currentTime=i,this._lastSystemTime=r,this.onTick.raiseEvent(this),i},l}),r("Core/Color",["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./Math"],function(e,t,r,i,n,o){"use strict";function a(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1>6*r?e+6*(t-e)*r:1>2*r?t:2>3*r?e+6*(t-e)*(2/3-r):e}var s=function(t,r,i,n){this.red=e(t,1),this.green=e(r,1),this.blue=e(i,1),this.alpha=e(n,1)};s.fromCartesian4=function(e,r){return t(r)?(r.red=e.x,r.green=e.y,r.blue=e.z,r.alpha=e.w,r):new s(e.x,e.y,e.z,e.w)},s.fromBytes=function(t,r,i,n){return t=s.byteToFloat(e(t,255)),r=s.byteToFloat(e(r,255)),i=s.byteToFloat(e(i,255)),n=s.byteToFloat(e(n,255)),new s(t,r,i,n)};var l,u,c;i.supportsTypedArrays()&&(l=new ArrayBuffer(4),u=new Uint32Array(l),c=new Uint8Array(l)),s.fromRgba=function(e){return u[0]=e,s.fromBytes(c[0],c[1],c[2],c[3])},s.fromHsl=function(t,r,i,n){t=e(t,0)%1,r=e(r,0),i=e(i,0),n=e(n,1);var o=i,l=i,u=i;if(0!==r){var c;c=.5>i?i*(1+r):i+r-i*r;var h=2*i-c;o=a(h,c,t+1/3),l=a(h,c,t),u=a(h,c,t-1/3)}return new s(o,l,u,n)},s.fromRandom=function(r,i){r=e(r,e.EMPTY_OBJECT);var n=r.red;if(!t(n)){var a=e(r.minimumRed,0),l=e(r.maximumRed,1);n=a+o.nextRandomNumber()*(l-a)}var u=r.green;if(!t(u)){var c=e(r.minimumGreen,0),h=e(r.maximumGreen,1);u=c+o.nextRandomNumber()*(h-c)}var d=r.blue;if(!t(d)){var m=e(r.minimumBlue,0),p=e(r.maximumBlue,1);d=m+o.nextRandomNumber()*(p-m)}var f=r.alpha;if(!t(f)){var v=e(r.minimumAlpha,0),g=e(r.maximumAlpha,1);f=v+o.nextRandomNumber()*(g-v)}return t(i)?(i.red=n,i.green=u,i.blue=d,i.alpha=f,i):new s(n,u,d,f)};var h=/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i,d=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i,m=/^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)$/i,p=/^hsla?\(\s*([0-9.]+)\s*,\s*([0-9.]+%)\s*,\s*([0-9.]+%)(?:\s*,\s*([0-9.]+))?\s*\)$/i;return s.fromCssColorString=function(r){var i=s[r.toUpperCase()];if(t(i))return s.clone(i);var n=h.exec(r);return null!==n?new s(parseInt(n[1],16)/15,parseInt(n[2],16)/15,parseInt(n[3],16)/15):(n=d.exec(r),null!==n?new s(parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255):(n=m.exec(r),null!==n?new s(parseFloat(n[1])/("%"===n[1].substr(-1)?100:255),parseFloat(n[2])/("%"===n[2].substr(-1)?100:255),parseFloat(n[3])/("%"===n[3].substr(-1)?100:255),parseFloat(e(n[4],"1.0"))):(n=p.exec(r),null!==n?s.fromHsl(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,parseFloat(e(n[4],"1.0"))):void 0)))},s.packedLength=4,s.pack=function(t,r,i){i=e(i,0),r[i++]=t.red,r[i++]=t.green,r[i++]=t.blue,r[i]=t.alpha},s.unpack=function(r,i,n){return i=e(i,0),t(n)||(n=new s),n.red=r[i++],n.green=r[i++],n.blue=r[i++],n.alpha=r[i],n},s.byteToFloat=function(e){return e/255},s.floatToByte=function(e){return 1===e?255:0|256*e},s.clone=function(e,r){return t(e)?t(r)?(r.red=e.red,r.green=e.green,r.blue=e.blue,r.alpha=e.alpha,r):new s(e.red,e.green,e.blue,e.alpha):void 0},s.equals=function(e,r){return e===r||t(e)&&t(r)&&e.red===r.red&&e.green===r.green&&e.blue===r.blue&&e.alpha===r.alpha},s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.prototype.equalsEpsilon=function(e,r){return this===e||t(e)&&Math.abs(this.red-e.red)<=r&&Math.abs(this.green-e.green)<=r&&Math.abs(this.blue-e.blue)<=r&&Math.abs(this.alpha-e.alpha)<=r},s.prototype.toString=function(){return"("+this.red+", "+this.green+", "+this.blue+", "+this.alpha+")"},s.prototype.toCssColorString=function(){var e=s.floatToByte(this.red),t=s.floatToByte(this.green),r=s.floatToByte(this.blue);return 1===this.alpha?"rgb("+e+","+t+","+r+")":"rgba("+e+","+t+","+r+","+this.alpha+")"},s.prototype.toBytes=function(e){var r=s.floatToByte(this.red),i=s.floatToByte(this.green),n=s.floatToByte(this.blue),o=s.floatToByte(this.alpha);return t(e)?(e[0]=r,e[1]=i,e[2]=n,e[3]=o,e):[r,i,n,o]},s.prototype.toRgba=function(){return c[0]=s.floatToByte(this.red),c[1]=s.floatToByte(this.green),c[2]=s.floatToByte(this.blue),c[3]=s.floatToByte(this.alpha),u[0]},s.prototype.brighten=function(e,t){return e=1-e,t.red=1-(1-this.red)*e,t.green=1-(1-this.green)*e,t.blue=1-(1-this.blue)*e,t.alpha=this.alpha,t},s.prototype.darken=function(e,t){return e=1-e,t.red=this.red*e,t.green=this.green*e,t.blue=this.blue*e,t.alpha=this.alpha,t},s.ALICEBLUE=n(s.fromCssColorString("#F0F8FF")),s.ANTIQUEWHITE=n(s.fromCssColorString("#FAEBD7")),s.AQUA=n(s.fromCssColorString("#00FFFF")),s.AQUAMARINE=n(s.fromCssColorString("#7FFFD4")),s.AZURE=n(s.fromCssColorString("#F0FFFF")),s.BEIGE=n(s.fromCssColorString("#F5F5DC")),s.BISQUE=n(s.fromCssColorString("#FFE4C4")),s.BLACK=n(s.fromCssColorString("#000000")),s.BLANCHEDALMOND=n(s.fromCssColorString("#FFEBCD")),s.BLUE=n(s.fromCssColorString("#0000FF")),s.BLUEVIOLET=n(s.fromCssColorString("#8A2BE2")),s.BROWN=n(s.fromCssColorString("#A52A2A")),s.BURLYWOOD=n(s.fromCssColorString("#DEB887")),s.CADETBLUE=n(s.fromCssColorString("#5F9EA0")),s.CHARTREUSE=n(s.fromCssColorString("#7FFF00")),s.CHOCOLATE=n(s.fromCssColorString("#D2691E")),s.CORAL=n(s.fromCssColorString("#FF7F50")),s.CORNFLOWERBLUE=n(s.fromCssColorString("#6495ED")),s.CORNSILK=n(s.fromCssColorString("#FFF8DC")),s.CRIMSON=n(s.fromCssColorString("#DC143C")),s.CYAN=n(s.fromCssColorString("#00FFFF")),s.DARKBLUE=n(s.fromCssColorString("#00008B")),s.DARKCYAN=n(s.fromCssColorString("#008B8B")),s.DARKGOLDENROD=n(s.fromCssColorString("#B8860B")),s.DARKGRAY=n(s.fromCssColorString("#A9A9A9")),s.DARKGREEN=n(s.fromCssColorString("#006400")),s.DARKGREY=s.DARKGRAY,s.DARKKHAKI=n(s.fromCssColorString("#BDB76B")),s.DARKMAGENTA=n(s.fromCssColorString("#8B008B")),s.DARKOLIVEGREEN=n(s.fromCssColorString("#556B2F")),s.DARKORANGE=n(s.fromCssColorString("#FF8C00")),s.DARKORCHID=n(s.fromCssColorString("#9932CC")),s.DARKRED=n(s.fromCssColorString("#8B0000")),s.DARKSALMON=n(s.fromCssColorString("#E9967A")),s.DARKSEAGREEN=n(s.fromCssColorString("#8FBC8F")),s.DARKSLATEBLUE=n(s.fromCssColorString("#483D8B")),s.DARKSLATEGRAY=n(s.fromCssColorString("#2F4F4F")),s.DARKSLATEGREY=s.DARKSLATEGRAY,s.DARKTURQUOISE=n(s.fromCssColorString("#00CED1")),s.DARKVIOLET=n(s.fromCssColorString("#9400D3")),s.DEEPPINK=n(s.fromCssColorString("#FF1493")),s.DEEPSKYBLUE=n(s.fromCssColorString("#00BFFF")),s.DIMGRAY=n(s.fromCssColorString("#696969")),s.DIMGREY=s.DIMGRAY,s.DODGERBLUE=n(s.fromCssColorString("#1E90FF")),s.FIREBRICK=n(s.fromCssColorString("#B22222")),s.FLORALWHITE=n(s.fromCssColorString("#FFFAF0")),s.FORESTGREEN=n(s.fromCssColorString("#228B22")),s.FUSCHIA=n(s.fromCssColorString("#FF00FF")),s.GAINSBORO=n(s.fromCssColorString("#DCDCDC")),s.GHOSTWHITE=n(s.fromCssColorString("#F8F8FF")),s.GOLD=n(s.fromCssColorString("#FFD700")),s.GOLDENROD=n(s.fromCssColorString("#DAA520")),s.GRAY=n(s.fromCssColorString("#808080")),s.GREEN=n(s.fromCssColorString("#008000")),s.GREENYELLOW=n(s.fromCssColorString("#ADFF2F")),s.GREY=s.GRAY,s.HONEYDEW=n(s.fromCssColorString("#F0FFF0")),s.HOTPINK=n(s.fromCssColorString("#FF69B4")),s.INDIANRED=n(s.fromCssColorString("#CD5C5C")),s.INDIGO=n(s.fromCssColorString("#4B0082")),s.IVORY=n(s.fromCssColorString("#FFFFF0")),s.KHAKI=n(s.fromCssColorString("#F0E68C")),s.LAVENDER=n(s.fromCssColorString("#E6E6FA")),s.LAVENDAR_BLUSH=n(s.fromCssColorString("#FFF0F5")),s.LAWNGREEN=n(s.fromCssColorString("#7CFC00")),s.LEMONCHIFFON=n(s.fromCssColorString("#FFFACD")),s.LIGHTBLUE=n(s.fromCssColorString("#ADD8E6")),s.LIGHTCORAL=n(s.fromCssColorString("#F08080")),s.LIGHTCYAN=n(s.fromCssColorString("#E0FFFF")),s.LIGHTGOLDENRODYELLOW=n(s.fromCssColorString("#FAFAD2")),s.LIGHTGRAY=n(s.fromCssColorString("#D3D3D3")),s.LIGHTGREEN=n(s.fromCssColorString("#90EE90")),s.LIGHTGREY=s.LIGHTGRAY,s.LIGHTPINK=n(s.fromCssColorString("#FFB6C1")),s.LIGHTSEAGREEN=n(s.fromCssColorString("#20B2AA")),s.LIGHTSKYBLUE=n(s.fromCssColorString("#87CEFA")),s.LIGHTSLATEGRAY=n(s.fromCssColorString("#778899")),s.LIGHTSLATEGREY=s.LIGHTSLATEGRAY,s.LIGHTSTEELBLUE=n(s.fromCssColorString("#B0C4DE")),s.LIGHTYELLOW=n(s.fromCssColorString("#FFFFE0")),s.LIME=n(s.fromCssColorString("#00FF00")),s.LIMEGREEN=n(s.fromCssColorString("#32CD32")),s.LINEN=n(s.fromCssColorString("#FAF0E6")),s.MAGENTA=n(s.fromCssColorString("#FF00FF")),s.MAROON=n(s.fromCssColorString("#800000")),s.MEDIUMAQUAMARINE=n(s.fromCssColorString("#66CDAA")),s.MEDIUMBLUE=n(s.fromCssColorString("#0000CD")),s.MEDIUMORCHID=n(s.fromCssColorString("#BA55D3")),s.MEDIUMPURPLE=n(s.fromCssColorString("#9370DB")),s.MEDIUMSEAGREEN=n(s.fromCssColorString("#3CB371")),s.MEDIUMSLATEBLUE=n(s.fromCssColorString("#7B68EE")),s.MEDIUMSPRINGGREEN=n(s.fromCssColorString("#00FA9A")),s.MEDIUMTURQUOISE=n(s.fromCssColorString("#48D1CC")),s.MEDIUMVIOLETRED=n(s.fromCssColorString("#C71585")),s.MIDNIGHTBLUE=n(s.fromCssColorString("#191970")),s.MINTCREAM=n(s.fromCssColorString("#F5FFFA")),s.MISTYROSE=n(s.fromCssColorString("#FFE4E1")),s.MOCCASIN=n(s.fromCssColorString("#FFE4B5")),s.NAVAJOWHITE=n(s.fromCssColorString("#FFDEAD")),s.NAVY=n(s.fromCssColorString("#000080")),s.OLDLACE=n(s.fromCssColorString("#FDF5E6")),s.OLIVE=n(s.fromCssColorString("#808000")),s.OLIVEDRAB=n(s.fromCssColorString("#6B8E23")),s.ORANGE=n(s.fromCssColorString("#FFA500")),s.ORANGERED=n(s.fromCssColorString("#FF4500")),s.ORCHID=n(s.fromCssColorString("#DA70D6")),s.PALEGOLDENROD=n(s.fromCssColorString("#EEE8AA")),s.PALEGREEN=n(s.fromCssColorString("#98FB98")),s.PALETURQUOISE=n(s.fromCssColorString("#AFEEEE")),s.PALEVIOLETRED=n(s.fromCssColorString("#DB7093")),s.PAPAYAWHIP=n(s.fromCssColorString("#FFEFD5")),s.PEACHPUFF=n(s.fromCssColorString("#FFDAB9")),s.PERU=n(s.fromCssColorString("#CD853F")),s.PINK=n(s.fromCssColorString("#FFC0CB")),s.PLUM=n(s.fromCssColorString("#DDA0DD")),s.POWDERBLUE=n(s.fromCssColorString("#B0E0E6")),s.PURPLE=n(s.fromCssColorString("#800080")),s.RED=n(s.fromCssColorString("#FF0000")),s.ROSYBROWN=n(s.fromCssColorString("#BC8F8F")),s.ROYALBLUE=n(s.fromCssColorString("#4169E1")),s.SADDLEBROWN=n(s.fromCssColorString("#8B4513")),s.SALMON=n(s.fromCssColorString("#FA8072")),s.SANDYBROWN=n(s.fromCssColorString("#F4A460")),s.SEAGREEN=n(s.fromCssColorString("#2E8B57")),s.SEASHELL=n(s.fromCssColorString("#FFF5EE")),s.SIENNA=n(s.fromCssColorString("#A0522D")),s.SILVER=n(s.fromCssColorString("#C0C0C0")),s.SKYBLUE=n(s.fromCssColorString("#87CEEB")),s.SLATEBLUE=n(s.fromCssColorString("#6A5ACD")),s.SLATEGRAY=n(s.fromCssColorString("#708090")),s.SLATEGREY=s.SLATEGRAY,s.SNOW=n(s.fromCssColorString("#FFFAFA")),s.SPRINGGREEN=n(s.fromCssColorString("#00FF7F")),s.STEELBLUE=n(s.fromCssColorString("#4682B4")),s.TAN=n(s.fromCssColorString("#D2B48C")),s.TEAL=n(s.fromCssColorString("#008080")),s.THISTLE=n(s.fromCssColorString("#D8BFD8")),s.TOMATO=n(s.fromCssColorString("#FF6347")),s.TURQUOISE=n(s.fromCssColorString("#40E0D0")),s.VIOLET=n(s.fromCssColorString("#EE82EE")),s.WHEAT=n(s.fromCssColorString("#F5DEB3")),s.WHITE=n(s.fromCssColorString("#FFFFFF")),s.WHITESMOKE=n(s.fromCssColorString("#F5F5F5")),s.YELLOW=n(s.fromCssColorString("#FFFF00")),s.YELLOWGREEN=n(s.fromCssColorString("#9ACD32")),s
}),r("Core/ColorGeometryInstanceAttribute",["./Color","./ComponentDatatype","./defaultValue","./defined","./defineProperties","./DeveloperError"],function(e,t,r,i,n){"use strict";var o=function(t,i,n,o){t=r(t,1),i=r(i,1),n=r(n,1),o=r(o,1),this.value=new Uint8Array([e.floatToByte(t),e.floatToByte(i),e.floatToByte(n),e.floatToByte(o)])};return n(o.prototype,{componentDatatype:{get:function(){return t.UNSIGNED_BYTE}},componentsPerAttribute:{get:function(){return 4}},normalize:{get:function(){return!0}}}),o.fromColor=function(e){return new o(e.red,e.green,e.blue,e.alpha)},o.toValue=function(e,t){return i(t)?e.toBytes(t):new Uint8Array(e.toBytes())},o}),r("Core/CornerType",["./freezeObject"],function(e){"use strict";var t={ROUNDED:0,MITERED:1,BEVELED:2};return e(t)}),r("Core/isArray",["./defined"],function(e){"use strict";var t=Array.isArray;return e(t)||(t=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),t}),r("Core/EllipsoidGeodesic",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){var t=e._uSquared,r=e._ellipsoid.maximumRadius,i=e._ellipsoid.minimumRadius,n=(r-i)/r,o=Math.cos(e._startHeading),a=Math.sin(e._startHeading),s=(1-n)*Math.tan(e._start.latitude),l=1/Math.sqrt(1+s*s),u=l*s,c=Math.atan2(s,o),h=l*a,d=h*h,m=1-d,p=Math.sqrt(m),f=t/4,v=f*f,g=v*f,_=v*v,y=1+f-3*v/4+5*g/4-175*_/64,C=1-f+15*v/8-35*g/8,w=1-3*f+35*v/4,S=1-5*f,E=y*c-C*Math.sin(2*c)*f/2-w*Math.sin(4*c)*v/16-S*Math.sin(6*c)*g/48-5*Math.sin(8*c)*_/512,b=e._constants;b.a=r,b.b=i,b.f=n,b.cosineHeading=o,b.sineHeading=a,b.tanU=s,b.cosineU=l,b.sineU=u,b.sigma=c,b.sineAlpha=h,b.sineSquaredAlpha=d,b.cosineSquaredAlpha=m,b.cosineAlpha=p,b.u2Over4=f,b.u4Over16=v,b.u6Over64=g,b.u8Over256=_,b.a0=y,b.a1=C,b.a2=w,b.a3=S,b.distanceRatio=E}function u(e,t){return e*t*(4+e*(4-3*t))/16}function c(e,t,r,i,n,o,a){var s=u(e,r);return(1-s)*e*t*(i+s*n*(a+s*o*(2*a*a-1)))}function h(e,t,r,i,n,o,a){var l,u,h,d,m,p=(t-r)/t,f=o-i,v=Math.atan((1-p)*Math.tan(n)),g=Math.atan((1-p)*Math.tan(a)),_=Math.cos(v),y=Math.sin(v),C=Math.cos(g),w=Math.sin(g),S=_*C,E=_*w,b=y*w,T=y*C,x=f,P=s.TWO_PI,A=Math.cos(x),M=Math.sin(x);do{A=Math.cos(x),M=Math.sin(x);var D=E-T*A;h=Math.sqrt(C*C*M*M+D*D),u=b+S*A,l=Math.atan2(h,u);var I;0===h?(I=0,d=1):(I=S*M/h,d=1-I*I),P=x,m=u-2*b/d,isNaN(m)&&(m=0),x=f+c(p,I,d,l,h,u,m)}while(Math.abs(x-P)>s.EPSILON12);var R=d*(t*t-r*r)/(r*r),O=1+R*(4096+R*(R*(320-175*R)-768))/16384,L=R*(256+R*(R*(74-47*R)-128))/1024,N=m*m,B=L*h*(m+L*(u*(2*N-1)-L*m*(4*h*h-3)*(4*N-3)/6)/4),F=r*O*(l-B),z=Math.atan2(C*M,E-T*A),V=Math.atan2(_*M,E*A-T);e._distance=F,e._startHeading=z,e._endHeading=V,e._uSquared=R}function d(r,i,n,o){e.normalize(o.cartographicToCartesian(i,p),m),e.normalize(o.cartographicToCartesian(n,p),p),h(r,o.maximumRadius,o.minimumRadius,i.longitude,i.latitude,n.longitude,n.latitude),i.height=0,n.height=0,r._start=t.clone(i,r._start),r._end=t.clone(n,r._end),l(r)}var m=new e,p=new e,f=function(e,n,o){var s=r(o,a.WGS84);this._ellipsoid=s,this._start=new t,this._end=new t,this._constants={},this._startHeading=void 0,this._endHeading=void 0,this._distance=void 0,this._uSquared=void 0,i(e)&&i(n)&&d(this,e,n,s)};return n(f.prototype,{surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},startHeading:{get:function(){return this._startHeading}},endHeading:{get:function(){return this._endHeading}}}),f.prototype.setEndPoints=function(e,t){d(this,e,t,this._ellipsoid)},f.prototype.interpolateUsingFraction=function(e,t){return this.interpolateUsingSurfaceDistance(this._distance*e,t)},f.prototype.interpolateUsingSurfaceDistance=function(e,r){var n=this._constants,o=n.distanceRatio+e/n.b,a=Math.cos(2*o),s=Math.cos(4*o),l=Math.cos(6*o),u=Math.sin(2*o),h=Math.sin(4*o),d=Math.sin(6*o),m=Math.sin(8*o),p=o*o,f=o*p,v=n.u8Over256,g=n.u2Over4,_=n.u6Over64,y=n.u4Over16,C=2*f*v*a/3+o*(1-g+7*y/4-15*_/4+579*v/64-(y-15*_/4+187*v/16)*a-(5*_/4-115*v/16)*s-29*v*l/16)+(g/2-y+71*_/32-85*v/16)*u+(5*y/16-5*_/4+383*v/96)*h-p*((_-11*v/2)*u+5*v*h/2)+(29*_/96-29*v/16)*d+539*v*m/1536,w=Math.asin(Math.sin(C)*n.cosineAlpha),S=Math.atan(n.a/n.b*Math.tan(w));C-=n.sigma;var E=Math.cos(2*n.sigma+C),b=Math.sin(C),T=Math.cos(C),x=n.cosineU*T,P=n.sineU*b,A=Math.atan2(b*n.sineHeading,x-P*n.cosineHeading),M=A-c(n.f,n.sineAlpha,n.cosineSquaredAlpha,C,b,T,E);return i(r)?(r.longitude=this._start.longitude+M,r.latitude=S,r.height=0,r):new t(this._start.longitude+M,S,0)},f}),r("Core/PolylinePipeline",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidGeodesic","./IntersectionTests","./isArray","./Math","./Matrix4","./Plane"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r){var i,n=new Array(e);if(t===r){for(i=0;e>i;i++)n[i]=t;return n}var o=r-t,a=o/e;for(i=1;e>i;i++){var s=t+i*a;n[i]=s}return n[0]=t,n}function m(t,r,i,n,o,a,s,l){var u=n.scaleToGeodeticSurface(t,P),c=n.scaleToGeodeticSurface(r,A),h=p.numberOfPoints(t,r,i),m=n.cartesianToCartographic(u,b),f=n.cartesianToCartographic(c,T),v=d(h,o,a);M.setEndPoints(m,f);var g=M.surfaceDistance/h,_=l;m.height=o;var y=n.cartographicToCartesian(m,x);e.pack(y,s,_),_+=3;for(var C=1;h>C;C++){var w=M.interpolateUsingSurfaceDistance(C*g,T);w.height=v[C],y=n.cartographicToCartesian(w,x),e.pack(y,s,_),_+=3}return _}var p={};p.numberOfPoints=function(t,r,i){var n=e.angleBetween(t,r);return Math.ceil(n/i)};var f=new t;p.extractHeights=function(e,t){for(var r=e.length,i=new Array(r),n=0;r>n;n++){var o=e[n];i[n]=t.cartesianToCartographic(o,f).height}return i};var v=new c,g=new e,_=new e,y=new h(e.ZERO,0),C=new e,w=new h(e.ZERO,0),S=new e,E=new e,b=new t,T=new t,x=new e,P=new e,A=new e,M=new a;return p.wrapLongitude=function(t,n){var o=[],a=[];if(i(t)&&t.length>0){n=r(n,c.IDENTITY);var l=c.inverseTransformation(n,v),u=c.multiplyByPoint(l,e.ZERO,g),d=c.multiplyByPointAsVector(l,e.UNIT_Y,_),m=h.fromPointNormal(u,d,y),p=c.multiplyByPointAsVector(l,e.UNIT_X,C),f=h.fromPointNormal(u,p,w),b=1;o.push(e.clone(t[0]));for(var T=o[0],x=t.length,P=1;x>P;++P){var A=t[P];if(h.getPointDistance(f,T)<0||h.getPointDistance(f,A)<0){var M=s.lineSegmentPlane(T,A,m,S);if(i(M)){var D=e.multiplyByScalar(d,5e-9,E);h.getPointDistance(m,T)<0&&e.negate(D,D),o.push(e.add(M,D,new e)),a.push(b+1),e.negate(D,D),o.push(e.add(M,D,new e)),b=1}}o.push(e.clone(t[P])),b++,T=A}a.push(b)}return{positions:o,lengths:a}},p.removeDuplicates=function(t){var r=t.length;if(2>r)return t.slice(0);var i=[];i.push(t[0]);for(var n=1;r>n;++n){var o=t[n-1],a=t[n];e.equals(o,a)||i.push(a)}return i},p.generateArc=function(t){i(t)||(t={});var n,a,s,c=t.positions,h=r(t.ellipsoid,o.WGS84),d=r(t.height,0),f=r(t.granularity,u.RADIANS_PER_DEGREE),v=c.length,g=0;for(n=0;v-1>n;n++)a=c[n],s=c[n+1],g+=p.numberOfPoints(a,s,f);g++;var _=3*g,y=new Array(_),C=0;for(n=0;v-1>n;n++){a=c[n],s=c[n+1];var w,S;l(d)?(w=d[n],S=d[n+1]):(w=d,S=d),C=m(a,s,f,h,w,S,y,C)}var E=c[v-1],T=h.cartesianToCartographic(E,b);T.height=l(d)?d[v-1]:d;var P=h.cartographicToCartesian(T,x);return e.pack(P,y,_-3),y},p.generateCartesianArc=function(t){for(var r=p.generateArc(t),i=r.length/3,n=new Array(i),o=0;i>o;o++)n[o]=e.unpack(r,3*o);return n},p}),r("Core/EarthOrientationParametersSample",[],function(){"use strict";var e=function(e,t,r,i,n){this.xPoleWander=e,this.yPoleWander=t,this.xPoleOffset=r,this.yPoleOffset=i,this.ut1MinusUtc=n};return e}),r("Core/EarthOrientationParameters",["../ThirdParty/when","./binarySearch","./defaultValue","./defined","./EarthOrientationParametersSample","./freezeObject","./JulianDate","./LeapSecond","./loadJson","./RuntimeError","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t){return a.compare(e.julianDate,t)}function m(e,r){if(!i(r.columnNames))return e._dataError="Error in loaded EOP data: The columnNames property is required.",void 0;if(!i(r.samples))return e._dataError="Error in loaded EOP data: The samples property is required.",void 0;var n=r.columnNames.indexOf("modifiedJulianDateUtc"),o=r.columnNames.indexOf("xPoleWanderRadians"),l=r.columnNames.indexOf("yPoleWanderRadians"),u=r.columnNames.indexOf("ut1MinusUtcSeconds"),m=r.columnNames.indexOf("xCelestialPoleOffsetRadians"),p=r.columnNames.indexOf("yCelestialPoleOffsetRadians"),f=r.columnNames.indexOf("taiMinusUtcSeconds");if(0>n||0>o||0>l||0>u||0>m||0>p||0>f)return e._dataError="Error in loaded EOP data: The columnNames property must include modifiedJulianDateUtc, xPoleWanderRadians, yPoleWanderRadians, ut1MinusUtcSeconds, xCelestialPoleOffsetRadians, yCelestialPoleOffsetRadians, and taiMinusUtcSeconds columns",void 0;var v=e._samples=r.samples,g=e._dates=[];e._dateColumn=n,e._xPoleWanderRadiansColumn=o,e._yPoleWanderRadiansColumn=l,e._ut1MinusUtcSecondsColumn=u,e._xCelestialPoleOffsetRadiansColumn=m,e._yCelestialPoleOffsetRadiansColumn=p,e._taiMinusUtcSecondsColumn=f,e._columnCount=r.columnNames.length,e._lastIndex=void 0;for(var _,y=e._addNewLeapSeconds,C=0,w=v.length;w>C;C+=e._columnCount){var S=v[C+n],E=v[C+f],b=S+c.MODIFIED_JULIAN_DATE_DIFFERENCE,T=new a(b,E,h.TAI);if(g.push(T),y){if(E!==_&&i(_)){var x=a.leapSeconds,P=t(x,T,d);if(0>P){var A=new s(T,E);x.splice(~P,0,A)}}_=E}}}function p(e,t,r,i,n){var o=r*i;n.xPoleWander=t[o+e._xPoleWanderRadiansColumn],n.yPoleWander=t[o+e._yPoleWanderRadiansColumn],n.xPoleOffset=t[o+e._xCelestialPoleOffsetRadiansColumn],n.yPoleOffset=t[o+e._yCelestialPoleOffsetRadiansColumn],n.ut1MinusUtc=t[o+e._ut1MinusUtcSecondsColumn]}function f(e,t,r){return t+e*(r-t)}function v(e,t,r,i,n,o,s){var l=e._columnCount;if(o>t.length-1)return s.xPoleWander=0,s.yPoleWander=0,s.xPoleOffset=0,s.yPoleOffset=0,s.ut1MinusUtc=0,s;var u=t[n],c=t[o];if(u.equals(c)||i.equals(u))return p(e,r,n,l,s),s;if(i.equals(c))return p(e,r,o,l,s),s;var h=a.secondsDifference(i,u)/a.secondsDifference(c,u),d=n*l,m=o*l,v=r[d+e._ut1MinusUtcSecondsColumn],g=r[m+e._ut1MinusUtcSecondsColumn],_=g-v;if(_>.5||-.5>_){var y=r[d+e._taiMinusUtcSecondsColumn],C=r[m+e._taiMinusUtcSecondsColumn];y!==C&&(c.equals(i)?v=g:g-=C-y)}return s.xPoleWander=f(h,r[d+e._xPoleWanderRadiansColumn],r[m+e._xPoleWanderRadiansColumn]),s.yPoleWander=f(h,r[d+e._yPoleWanderRadiansColumn],r[m+e._yPoleWanderRadiansColumn]),s.xPoleOffset=f(h,r[d+e._xCelestialPoleOffsetRadiansColumn],r[m+e._xCelestialPoleOffsetRadiansColumn]),s.yPoleOffset=f(h,r[d+e._yCelestialPoleOffsetRadiansColumn],r[m+e._yCelestialPoleOffsetRadiansColumn]),s.ut1MinusUtc=f(h,v,g),s}var g=function(t){if(t=r(t,r.EMPTY_OBJECT),this._dates=void 0,this._samples=void 0,this._dateColumn=-1,this._xPoleWanderRadiansColumn=-1,this._yPoleWanderRadiansColumn=-1,this._ut1MinusUtcSecondsColumn=-1,this._xCelestialPoleOffsetRadiansColumn=-1,this._yCelestialPoleOffsetRadiansColumn=-1,this._taiMinusUtcSecondsColumn=-1,this._columnCount=0,this._lastIndex=-1,this._downloadPromise=void 0,this._dataError=void 0,this._addNewLeapSeconds=r(t.addNewLeapSeconds,!0),i(t.data))m(this,t.data);else if(i(t.url)){var n=this;this._downloadPromise=e(l(t.url),function(e){m(n,e)},function(){n._dataError="An error occurred while retrieving the EOP data from the URL "+t.url+"."})}else m(this,{columnNames:["dateIso8601","modifiedJulianDateUtc","xPoleWanderRadians","yPoleWanderRadians","ut1MinusUtcSeconds","lengthOfDayCorrectionSeconds","xCelestialPoleOffsetRadians","yCelestialPoleOffsetRadians","taiMinusUtcSeconds"],samples:[]})};return g.NONE=o({getPromiseToLoad:function(){return e()},compute:function(e,t){return i(t)?(t.xPoleWander=0,t.yPoleWander=0,t.xPoleOffset=0,t.yPoleOffset=0,t.ut1MinusUtc=0):t=new n(0,0,0,0,0),t}}),g.prototype.getPromiseToLoad=function(){return e(this._downloadPromise)},g.prototype.compute=function(e,r){if(!i(this._samples)){if(i(this._dataError))throw new u(this._dataError);return void 0}if(i(r)||(r=new n(0,0,0,0,0)),0===this._samples.length)return r.xPoleWander=0,r.yPoleWander=0,r.xPoleOffset=0,r.yPoleOffset=0,r.ut1MinusUtc=0,r;var o=this._dates,s=this._lastIndex,l=0,c=0;if(i(s)){var h=o[s],d=o[s+1],m=a.lessThanOrEquals(h,e),p=!i(d),f=p||a.greaterThanOrEquals(d,e);if(m&&f)return l=s,!p&&d.equals(e)&&++l,c=l+1,v(this,o,this._samples,e,l,c,r),r}var g=t(o,e,a.compare,this._dateColumn);return g>=0?(g<o.length-1&&o[g+1].equals(e)&&++g,l=g,c=g):(c=~g,l=c-1,0>l&&(l=0)),this._lastIndex=l,v(this,o,this._samples,e,l,c,r),r},g}),r("Core/Iau2006XysSample",[],function(){"use strict";var e=function(e,t,r){this.x=e,this.y=t,this.s=r};return e}),r("Core/Iau2006XysData",["../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./Iau2006XysSample","./JulianDate","./loadJson","./TimeStandard"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t,r){var i=h;return i.dayNumber=t,i.secondsOfDay=r,o.daysDifference(i,e._sampleZeroDateTT)}function u(r,n){if(r._chunkDownloadsInProgress[n])return r._chunkDownloadsInProgress[n];var o=e.defer();r._chunkDownloadsInProgress[n]=o;var s,l=r._xysFileUrlTemplate;return s=i(l)?l.replace("{0}",n):t("Assets/IAU2006_XYS/IAU2006_XYS_"+n+".json"),e(a(s),function(e){r._chunkDownloadsInProgress[n]=!1;for(var t=r._samples,i=e.samples,a=3*n*r._samplesPerXysFile,s=0,l=i.length;l>s;++s)t[a+s]=i[s];o.resolve()}),o.promise}var c=function(e){e=r(e,r.EMPTY_OBJECT),this._xysFileUrlTemplate=e.xysFileUrlTemplate,this._interpolationOrder=r(e.interpolationOrder,9),this._sampleZeroJulianEphemerisDate=r(e.sampleZeroJulianEphemerisDate,2442396.5),this._sampleZeroDateTT=new o(this._sampleZeroJulianEphemerisDate,0,s.TAI),this._stepSizeDays=r(e.stepSizeDays,1),this._samplesPerXysFile=r(e.samplesPerXysFile,1e3),this._totalSamples=r(e.totalSamples,27426),this._samples=new Array(3*this._totalSamples),this._chunkDownloadsInProgress=[];for(var t=this._interpolationOrder,i=this._denominators=new Array(t+1),n=this._xTable=new Array(t+1),a=Math.pow(this._stepSizeDays,t),l=0;t>=l;++l){i[l]=a,n[l]=l*this._stepSizeDays;for(var u=0;t>=u;++u)u!==l&&(i[l]*=l-u);i[l]=1/i[l]}this._work=new Array(t+1),this._coef=new Array(t+1)},h=new o(0,0,s.TAI);return c.prototype.preload=function(t,r,i,n){var o=l(this,t,r),a=l(this,i,n),s=0|o/this._stepSizeDays-this._interpolationOrder/2;0>s&&(s=0);var c=a/this._stepSizeDays-this._interpolationOrder/2|0+this._interpolationOrder;c>=this._totalSamples&&(c=this._totalSamples-1);for(var h=0|s/this._samplesPerXysFile,d=0|c/this._samplesPerXysFile,m=[],p=h;d>=p;++p)m.push(u(this,p));return e.all(m)},c.prototype.computeXysRadians=function(e,t,r){var o=l(this,e,t);if(0>o)return void 0;var a=0|o/this._stepSizeDays;if(a>=this._totalSamples)return void 0;var s=this._interpolationOrder,c=a-(0|s/2);0>c&&(c=0);var h=c+s;h>=this._totalSamples&&(h=this._totalSamples-1,c=h-s,0>c&&(c=0));var d=!1,m=this._samples;if(i(m[3*c])||(u(this,0|c/this._samplesPerXysFile),d=!0),i(m[3*h])||(u(this,0|h/this._samplesPerXysFile),d=!0),d)return void 0;i(r)?(r.x=0,r.y=0,r.s=0):r=new n(0,0,0);var p,f,v=o-c*this._stepSizeDays,g=this._work,_=this._denominators,y=this._coef,C=this._xTable;for(p=0;s>=p;++p)g[p]=v-C[p];for(p=0;s>=p;++p){for(y[p]=1,f=0;s>=f;++f)f!==p&&(y[p]*=g[f]);y[p]*=_[p];var w=3*(c+p);r.x+=y[p]*m[w++],r.y+=y[p]*m[w++],r.s+=y[p]*m[w]}return r},c}),r("Core/Transforms",["../ThirdParty/when","./Cartesian2","./Cartesian3","./Cartesian4","./defaultValue","./defined","./DeveloperError","./EarthOrientationParameters","./EarthOrientationParametersSample","./Ellipsoid","./Iau2006XysData","./Iau2006XysSample","./JulianDate","./Math","./Matrix3","./Matrix4","./TimeConstants"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g={},_=new r,y=new r,C=new r;g.eastNorthUpToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=0,i[1]=1,i[2]=0,i[3]=0,i[4]=-a,i[5]=0,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=a,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(0,-a,0,e.x,1,0,0,e.y,0,0,a,e.z,0,0,0,1)}var s=_,l=y,c=C;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=l.x,i[1]=l.y,i[2]=l.z,i[3]=0,i[4]=c.x,i[5]=c.y,i[6]=c.z,i[7]=0,i[8]=s.x,i[9]=s.y,i[10]=s.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(l.x,c.x,s.x,e.x,l.y,c.y,s.y,e.y,l.z,c.z,s.z,e.z,0,0,0,1)};var w=new r,S=new r,E=new r;g.northEastDownToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=-a,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=-a,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(-a,0,0,e.x,0,1,0,e.y,0,0,-a,e.z,0,0,0,1)}var s=w,l=S,c=E;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=c.x,i[1]=c.y,i[2]=c.z,i[3]=0,i[4]=l.x,i[5]=l.y,i[6]=l.z,i[7]=0,i[8]=-s.x,i[9]=-s.y,i[10]=-s.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(c.x,l.x,-s.x,e.x,c.y,l.y,-s.y,e.y,c.z,l.z,-s.z,e.z,0,0,0,1)},g.northUpEastToFixedFrame=function(e,t,i){if(m.equalsEpsilon(e.x,0,m.EPSILON14)&&m.equalsEpsilon(e.y,0,m.EPSILON14)){var a=m.sign(e.z);return o(i)?(i[0]=-a,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=0,i[6]=a,i[7]=0,i[8]=0,i[9]=1,i[10]=0,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(-a,0,0,e.x,0,0,1,e.y,0,a,0,e.z,0,0,0,1)}var s=_,l=y,c=C;return t=n(t,u.WGS84),t.geodeticSurfaceNormal(e,s),l.x=-e.y,l.y=e.x,l.z=0,r.normalize(l,l),r.cross(s,l,c),o(i)?(i[0]=c.x,i[1]=c.y,i[2]=c.z,i[3]=0,i[4]=s.x,i[5]=s.y,i[6]=s.z,i[7]=0,i[8]=l.x,i[9]=l.y,i[10]=l.z,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,i):new f(c.x,s.x,l.x,e.x,c.y,s.y,l.y,e.y,c.z,s.z,l.z,e.z,0,0,0,1)};var b=24110.54841,T=8640184.812866,x=.093104,P=-62e-7,A=1.1772758384668e-19,M=72921158553e-15,D=m.TWO_PI/86400,I=new d;g.computeTemeToPseudoFixedMatrix=function(e,t){I=d.addSeconds(e,-d.computeTaiMinusUtc(e),I);var r,i=I.dayNumber,n=I.secondsOfDay,a=i-2451545;r=n>=43200?(a+.5)/v.DAYS_PER_JULIAN_CENTURY:(a-.5)/v.DAYS_PER_JULIAN_CENTURY;var s=b+r*(T+r*(x+r*P)),l=s*D%m.TWO_PI,u=M+A*(i-2451545.5),c=(n+.5*v.SECONDS_PER_DAY)%v.SECONDS_PER_DAY,h=l+u*c,f=Math.cos(h),g=Math.sin(h);return o(t)?(t[0]=f,t[1]=-g,t[2]=0,t[3]=g,t[4]=f,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new p(f,g,0,-g,f,0,0,0,1)},g.iau2006XysData=new c,g.earthOrientationParameters=s.NONE;var R=32.184,O=2451545;g.preloadIcrfFixed=function(t){var r=t.start.dayNumber,i=t.start.secondsOfDay+R,n=t.stop.dayNumber,o=t.stop.secondsOfDay+R,a=g.iau2006XysData.preload(r,i,n,o),s=g.earthOrientationParameters.getPromiseToLoad();return e.all([a,s])},g.computeIcrfToFixedMatrix=function(e,t){o(t)||(t=new p);var r=g.computeFixedToIcrfMatrix(e,t);return o(r)?p.transpose(r,t):void 0};var L=new h(0,0,0),N=new l(0,0,0,0,0,0),B=new p,F=new p;g.computeFixedToIcrfMatrix=function(e,t){o(t)||(t=new p);var r=g.earthOrientationParameters.compute(e,N);if(!o(r))return void 0;var i=e.dayNumber,n=e.secondsOfDay+R,a=g.iau2006XysData.computeXysRadians(i,n,L);if(!o(a))return void 0;var s=a.x+r.xPoleOffset,l=a.y+r.yPoleOffset,u=1/(1+Math.sqrt(1-s*s-l*l)),c=B;c[0]=1-u*s*s,c[3]=-u*s*l,c[6]=s,c[1]=-u*s*l,c[4]=1-u*l*l,c[7]=l,c[2]=-s,c[5]=-l,c[8]=1-u*(s*s+l*l);var h=p.fromRotationZ(-a.s,F),f=p.multiply(c,h,B),_=e.dayNumber,y=e.secondsOfDay-d.computeTaiMinusUtc(e)+r.ut1MinusUtc,C=_-2451545,w=y/v.SECONDS_PER_DAY,S=.779057273264+w+.00273781191135448*(C+w);S=S%1*m.TWO_PI;var E=p.fromRotationZ(S,F),b=p.multiply(f,E,B),T=Math.cos(r.xPoleWander),x=Math.cos(r.yPoleWander),P=Math.sin(r.xPoleWander),A=Math.sin(r.yPoleWander),M=i-O+n/v.SECONDS_PER_DAY;M/=36525;var D=-47e-6*M*m.RADIANS_PER_DEGREE/3600,I=Math.cos(D),z=Math.sin(D),V=F;return V[0]=T*I,V[1]=T*z,V[2]=P,V[3]=-x*z+A*P*I,V[4]=x*I+A*P*z,V[5]=-A*T,V[6]=-A*z-x*P*I,V[7]=A*I-x*P*z,V[8]=x*T,p.multiply(b,V,t)};var z=new i;return g.pointToWindowCoordinates=function(e,t,r,i){return i=g.pointToGLWindowCoordinates(e,t,r,i),i.y=2*t[5]-i.y,i},g.pointToGLWindowCoordinates=function(e,r,n,a){o(a)||(a=new t);var s=z;return f.multiplyByVector(e,i.fromElements(n.x,n.y,n.z,1,s),s),i.multiplyByScalar(s,1/s.w,s),f.multiplyByVector(r,s,s),t.fromCartesian4(s,a)},g}),r("Core/EllipsoidTangentPlane",["./AxisAlignedBoundingBox","./Cartesian2","./Cartesian3","./Cartesian4","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./IntersectionTests","./Matrix4","./Plane","./Ray","./Transforms"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new i,f=function(e,t){t=n(t,l.WGS84),e=t.scaleToGeodeticSurface(e);var i=m.eastNorthUpToFixedFrame(e,t);this._ellipsoid=t,this._origin=e,this._xAxis=r.fromCartesian4(c.getColumn(i,0,p)),this._yAxis=r.fromCartesian4(c.getColumn(i,1,p));var o=r.fromCartesian4(c.getColumn(i,2,p));this._plane=h.fromPointNormal(e,o)};a(f.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},origin:{get:function(){return this._origin}}});var v=new e;f.fromPoints=function(t,r){var i=e.fromPoints(t,v);return new f(i.center,r)};var g=new d,_=new r;f.prototype.projectPointOntoPlane=function(e,i){var n=g;n.origin=e,r.normalize(e,n.direction);var a=u.rayPlane(n,this._plane,_);if(o(a)||(r.negate(n.direction,n.direction),a=u.rayPlane(n,this._plane,_)),o(a)){var s=r.subtract(a,this._origin,a),l=r.dot(this._xAxis,s),c=r.dot(this._yAxis,s);return o(i)?(i.x=l,i.y=c,i):new t(l,c)}return void 0},f.prototype.projectPointsOntoPlane=function(e,t){o(t)||(t=[]);for(var r=0,i=e.length,n=0;i>n;n++){var a=this.projectPointOntoPlane(e[n],t[r]);o(a)&&(t[r]=a,r++)}return t.length=r,t};var y=new r;return f.prototype.projectPointsOntoEllipsoid=function(e,t){var i=e.length;o(t)?t.length=i:t=new Array(i);for(var n=this._ellipsoid,a=this._origin,s=this._xAxis,l=this._yAxis,u=y,c=0;i>c;++c){var h=e[c];r.multiplyByScalar(s,h.x,u),o(t[c])||(t[c]=new r);var d=r.add(a,u,t[c]);r.multiplyByScalar(l,h.y,u),r.add(d,u,d),n.scaleToGeocentricSurface(d,d)}return t},f}),r("Core/PolylineVolumeGeometryLibrary",["./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./CornerType","./EllipsoidTangentPlane","./Math","./Matrix3","./Matrix4","./PolylinePipeline","./Quaternion","./Transforms"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t){for(var r=new Array(e.length),i=0;i<e.length;i++){var n=e[i];L=t.cartesianToCartographic(n,L),r[i]=L.height,e[i]=t.scaleToGeodeticSurface(n,n)}return r}function m(e,r,i,n){var o,a=e[0],s=e[1],l=t.angleBetween(a,s),u=Math.ceil(l/n),c=new Array(u);if(r===i){for(o=0;u>o;o++)c[o]=r;return c.push(i),c}var h=i-r,d=h/u;for(o=1;u>o;o++){var m=r+o*d;c[o]=m}return c[0]=r,c.push(i),c}function p(r,i,n,a){var s=new o(n,a),l=s.projectPointOntoPlane(t.add(n,r,Y),Y),u=s.projectPointOntoPlane(t.add(n,i,X),X),c=e.angleBetween(l,u);return u.x*l.y-u.y*l.x>=0?-c:c}function f(e,r,i,n,o,a,u,c){var d=k,m=U;B=h.eastNorthUpToFixedFrame(e,o,B),d=l.multiplyByPointAsVector(B,N,d),d=t.normalize(d,d);var f=p(d,r,e,o);z=s.fromRotationZ(f,z),W.z=a,B=l.multiplyTransformation(B,l.fromRotationTranslation(z,W,F),B);var v=V;v[0]=u;for(var g=0;c>g;g++)for(var _=0;_<i.length;_+=3)m=t.fromArray(i,_,m),m=s.multiplyByVector(v,m,m),m=l.multiplyByPoint(B,m,m),n.push(m.x,m.y,m.z);return n}function v(e,r,i,n,o,a,s){for(var l=0;l<e.length;l+=3){var u=t.fromArray(e,l,G);n=f(u,r,i,n,o,a[l/3],s,1)}return n}function g(e,t){var r=e.length,i=new Array(6*r),n=0,o=t.x+t.width/2,a=t.y+t.height/2,s=e[0];i[n++]=s.x-o,i[n++]=0,i[n++]=s.y-a;for(var l=1;r>l;l++){s=e[l];var u=s.x-o,c=s.y-a;i[n++]=u,i[n++]=0,i[n++]=c,i[n++]=u,i[n++]=0,i[n++]=c}return s=e[0],i[n++]=s.x-o,i[n++]=0,i[n++]=s.y-a,i}function _(e,t){for(var r=e.length,i=new Array(3*r),n=0,o=t.x+t.width/2,a=t.y+t.height/2,s=0;r>s;s++)i[n++]=e[s].x-o,i[n++]=0,i[n++]=e[s].y-a;return i}function y(e,r,i,o,l,u,h,d,m,p){var v,g=t.angleBetween(t.subtract(r,e,I),t.subtract(i,e,R)),_=o===n.BEVELED?0:Math.ceil(g/a.toRadians(5));v=l?s.fromQuaternion(c.fromAxisAngle(t.negate(e,I),g/(_+1),H),j):s.fromQuaternion(c.fromAxisAngle(e,g/(_+1),H),j);var y,C;if(r=t.clone(r,q),_>0)for(var w=p?2:1,S=0;_>S;S++)r=s.multiplyByVector(v,r,r),y=t.subtract(r,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(r,R),h=f(C,y,d,h,u,m,1,w);else y=t.subtract(r,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(r,R),h=f(C,y,d,h,u,m,1,1),i=t.clone(i,q),y=t.subtract(i,e,I),y=t.normalize(y,y),l||(y=t.negate(y,y)),C=u.scaleToGeodeticSurface(i,R),h=f(C,y,d,h,u,m,1,1);return h}function C(e,t){return a.equalsEpsilon(e.latitude,t.latitude,a.EPSILON6)&&a.equalsEpsilon(e.longitude,t.longitude,a.EPSILON6)}var w=[new t,new t],S=new t,E=new t,b=new t,T=new t,x=new t,P=new t,A=new t,M=new t,D=new t,I=new t,R=new t,O={},L=new i,N=new t(-1,0,0),B=new l,F=new l,z=new s,V=s.IDENTITY.clone(),k=new t,U=new r,W=new t,G=new t,H=new c,q=new t,j=new s;O.removeDuplicatesFromShape=function(t){for(var r=t.length,i=[],n=r-1,o=0;r>o;n=o++){var a=t[n],s=t[o];e.equals(a,s)||i.push(s)}return i};var Y=new t,X=new t;O.angleIsGreaterThanPi=function(e,r,i,n){var a=new o(i,n),s=a.projectPointOntoPlane(t.add(i,e,Y),Y),l=a.projectPointOntoPlane(t.add(i,r,X),X);return l.x*s.y-l.y*s.x>=0};var Z=new i,Q=new i;return O.removeDuplicatesFromPositions=function(e,t){var r=e.length;if(2>r)return e.slice(0);var i=[];i.push(e[0]);for(var n=1;r>n;++n){var o=e[n-1],a=e[n],s=t.cartesianToCartographic(o,Z),l=t.cartesianToCartographic(a,Q);C(s,l)||i.push(a)}return i},O.computePositions=function(e,r,i,o,s){var l=o._ellipsoid,c=d(e,l),h=o._granularity,p=o._cornerType,C=s?g(r,i):_(r,i),R=s?_(r,i):void 0,L=i.height/2,N=i.width/2,B=e.length,F=[],z=s?[]:void 0,V=S,k=E,U=b,W=T,G=x,H=P,q=A,j=M,Y=D,X=e[0],Z=e[1];W=l.geodeticSurfaceNormal(X,W),V=t.subtract(Z,X,V),V=t.normalize(V,V),j=t.cross(W,V,j),j=t.normalize(j,j);var Q=c[0],J=c[1];s&&(z=f(X,j,R,z,l,Q+L,1,1)),Y=t.clone(X,Y),X=Z,k=t.negate(V,k);for(var K,$,et=1;B-1>et;et++){var tt=s?2:1;Z=e[et+1],V=t.subtract(Z,X,V),V=t.normalize(V,V),U=t.add(V,k,U),U=t.normalize(U,U),W=l.geodeticSurfaceNormal(X,W);var rt=!t.equalsEpsilon(t.negate(U,I),W,a.EPSILON2);if(rt){U=t.cross(U,W,U),U=t.cross(W,U,U),U=t.normalize(U,U);var it=1/Math.max(.25,t.magnitude(t.cross(U,k,I))),nt=O.angleIsGreaterThanPi(V,k,X,l);nt?(G=t.add(X,t.multiplyByScalar(U,it*N,U),G),H=t.add(G,t.multiplyByScalar(j,N,H),H),w[0]=t.clone(Y,w[0]),w[1]=t.clone(H,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),j=t.cross(W,V,j),j=t.normalize(j,j),q=t.add(G,t.multiplyByScalar(j,N,q),q),p===n.ROUNDED||p===n.BEVELED?y(G,H,q,p,nt,l,F,C,J+L,s):(U=t.negate(U,U),F=f(X,U,C,F,l,J+L,it,tt)),Y=t.clone(q,Y)):(G=t.add(X,t.multiplyByScalar(U,it*N,U),G),H=t.add(G,t.multiplyByScalar(j,-N,H),H),w[0]=t.clone(Y,w[0]),w[1]=t.clone(H,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),j=t.cross(W,V,j),j=t.normalize(j,j),q=t.add(G,t.multiplyByScalar(j,-N,q),q),p===n.ROUNDED||p===n.BEVELED?y(G,H,q,p,nt,l,F,C,J+L,s):F=f(X,U,C,F,l,J+L,it,tt),Y=t.clone(q,Y)),k=t.negate(V,k)}else F=f(Y,j,C,F,l,Q+L,1,1),Y=X;Q=J,J=c[et+1],X=Z}w[0]=t.clone(Y,w[0]),w[1]=t.clone(X,w[1]),K=m(w,Q+L,J+L,h),$=u.generateArc({positions:w,granularity:h,ellipsoid:l}),F=v($,j,C,F,l,K,1),s&&(z=f(X,j,R,z,l,J+L,1,1)),B=F.length;var ot=s?B+z.length:B,at=new Float64Array(ot);return at.set(F),s&&at.set(z,B),at},O}),r("Core/CorridorGeometryLibrary",["./Cartesian3","./CornerType","./defined","./isArray","./Math","./Matrix3","./PolylinePipeline","./PolylineVolumeGeometryLibrary","./Quaternion"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(r,i,a,s,u){var c=e.angleBetween(e.subtract(i,r,f),e.subtract(a,r,v)),h=s===t.BEVELED?1:Math.ceil(c/n.toRadians(5))+1,d=3*h,m=new Array(d);m[d-3]=a.x,m[d-2]=a.y,m[d-1]=a.z;var p;p=u?o.fromQuaternion(l.fromAxisAngle(e.negate(r,f),c/h,D),I):o.fromQuaternion(l.fromAxisAngle(r,c/h,D),I);var g=0;i=e.clone(i,f);for(var _=0;h>_;_++)i=o.multiplyByVector(p,i,i),m[g++]=i.x,m[g++]=i.y,m[g++]=i.z;return m}function c(r){var i=C,n=w,o=S,a=r[1];n=e.fromArray(r[1],a.length-3,n),o=e.fromArray(r[0],0,o),i=e.multiplyByScalar(e.add(n,o,i),.5,i);var s=u(i,n,o,t.ROUNDED,!1),l=r.length-1,c=r[l-1];a=r[l],n=e.fromArray(c,c.length-3,n),o=e.fromArray(a,0,o),i=e.multiplyByScalar(e.add(n,o,i),.5,i);var h=u(i,n,o,t.ROUNDED,!1);return[s,h]}function h(t,r,i,n){var o=f;return n?o=e.add(t,r,o):(r=e.negate(r,r),o=e.add(t,r,o)),[o.x,o.y,o.z,i.x,i.y,i.z]}function d(t,r,i,n){for(var o=new Array(t.length),a=new Array(t.length),s=e.multiplyByScalar(r,i,f),l=e.negate(s,v),u=0,c=t.length-1,h=0;h<t.length;h+=3){var d=e.fromArray(t,h,g),m=e.add(d,l,_);o[u++]=m.x,o[u++]=m.y,o[u++]=m.z;var p=e.add(d,s,_);a[c--]=p.z,a[c--]=p.y,a[c--]=p.x}return n.push(o,a),n}function m(e,t){for(var r=0;r<e.length;r++)e[r]=t.scaleToGeodeticSurface(e[r],e[r]);return e}var p={},f=new e,v=new e,g=new e,_=new e,y=[new e,new e],C=new e,w=new e,S=new e,E=new e,b=new e,T=new e,x=new e,P=new e,A=new e,M=new e,D=new l,I=new o;p.addAttribute=function(e,t,i,n){var o=t.x,a=t.y,s=t.z;r(i)&&(e[i]=o,e[i+1]=a,e[i+2]=s),r(n)&&(e[n]=s,e[n-1]=a,e[n-2]=o)},p.computePositions=function(r){var i=r.granularity,o=r.positions,l=r.ellipsoid;o=m(o,l);var p=r.width/2,v=r.cornerType,g=r.saveAttributes,_=C,D=w,I=S,R=E,O=b,L=T,N=x,B=P,F=A,z=M,V=[],k=g?[]:void 0,U=g?[]:void 0,W=o[0],G=o[1];D=e.normalize(e.subtract(G,W,D),D),_=l.geodeticSurfaceNormal(W,_),R=e.normalize(e.cross(_,D,R),R),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),N=e.clone(W,N),W=G,I=e.negate(D,I);var H,q,j=[],Y=o.length;for(q=1;Y-1>q;q++){_=l.geodeticSurfaceNormal(W,_),G=o[q+1],D=e.normalize(e.subtract(G,W,D),D),O=e.normalize(e.add(D,I,O),O);var X=!e.equalsEpsilon(e.negate(O,f),_,n.EPSILON2);if(X){O=e.cross(O,_,O),O=e.cross(_,O,O);var Z=p/Math.max(.25,e.magnitude(e.cross(O,I,f))),Q=s.angleIsGreaterThanPi(D,I,W,l);O=e.multiplyByScalar(O,Z,O),Q?(B=e.add(W,O,B),z=e.add(B,e.multiplyByScalar(R,p,z),z),F=e.add(B,e.multiplyByScalar(R,2*p,F),F),y[0]=e.clone(N,y[0]),y[1]=e.clone(z,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),L=e.clone(F,L),R=e.normalize(e.cross(_,D,R),R),F=e.add(B,e.multiplyByScalar(R,2*p,F),F),N=e.add(B,e.multiplyByScalar(R,p,N),N),v===t.ROUNDED||v===t.BEVELED?j.push({leftPositions:u(B,L,F,v,Q)}):j.push({leftPositions:h(W,e.negate(O,O),F,Q)})):(F=e.add(W,O,F),z=e.add(F,e.negate(e.multiplyByScalar(R,p,z),z),z),B=e.add(F,e.negate(e.multiplyByScalar(R,2*p,B),B),B),y[0]=e.clone(N,y[0]),y[1]=e.clone(z,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z)),L=e.clone(B,L),R=e.normalize(e.cross(_,D,R),R),B=e.add(F,e.negate(e.multiplyByScalar(R,2*p,B),B),B),N=e.add(F,e.negate(e.multiplyByScalar(R,p,N),N),N),v===t.ROUNDED||v===t.BEVELED?j.push({rightPositions:u(F,L,B,v,Q)}):j.push({rightPositions:h(W,O,B,Q)})),I=e.negate(D,I)}W=G}_=l.geodeticSurfaceNormal(W,_),y[0]=e.clone(N,y[0]),y[1]=e.clone(W,y[1]),H=a.generateArc({positions:y,granularity:i,ellipsoid:l}),V=d(H,R,p,V),g&&(k.push(R.x,R.y,R.z),U.push(_.x,_.y,_.z));var J;return v===t.ROUNDED&&(J=c(V)),{positions:V,corners:j,lefts:k,normals:U,endPositions:J}};var R=new e,O=new e;return p.scaleToGeodeticHeight=function(t,r,n,o){var a=t.length,s=i(o)?o:new Array(t.length);s.length=t.length;for(var l=r,u=0;a>u;u+=3){var c=n.scaleToGeodeticSurface(e.fromArray(t,u,O),O),h=R;0!==r&&(h=n.geodeticSurfaceNormal(c,h),h=e.multiplyByScalar(h,l,h),c=e.add(c,h,c)),s[u]=c.x,s[u+1]=c.y,s[u+2]=c.z}return s},p}),r("Core/CorridorGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./CornerType","./CorridorGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,r,i,o,a,s){var l=e.normals,u=e.tangents,c=e.binormals,h=t.normalize(t.cross(i,r,A),A);s.normal&&n.addAttribute(l,r,o,a),s.binormal&&n.addAttribute(c,i,o,a),s.tangent&&n.addAttribute(u,h,o,a)}function _(e,i,o){var s,l,u,p=e.positions,f=e.corners,v=e.endPositions,_=e.lefts,y=e.normals,C=new h,w=0,x=0,D=0;
for(l=0;l<p.length;l+=2)u=p[l].length-3,w+=u,D+=2*u,x+=p[l+1].length-3;for(w+=3,x+=3,l=0;l<f.length;l++){s=f[l];var I=f[l].leftPositions;a(I)?(u=I.length,w+=u,D+=u):(u=f[l].rightPositions.length,x+=u,D+=u)}var R,O=a(v);O&&(R=v[0].length-3,w+=R,x+=R,R/=3,D+=6*R);var L,N,B,F,z,V,k=w+x,U=new Float64Array(k),W=i.normal?new Float32Array(k):void 0,G=i.tangent?new Float32Array(k):void 0,H=i.binormal?new Float32Array(k):void 0,q={normals:W,tangents:G,binormals:H},j=0,Y=k-1,X=S,Z=E,Q=R/2,J=d.createTypedArray(k/3,D),K=0;if(O){V=b,z=T;var $=v[0];for(X=t.fromArray(y,0,X),Z=t.fromArray(_,0,Z),l=0;Q>l;l++)V=t.fromArray($,3*(Q-1-l),V),z=t.fromArray($,3*(Q+l),z),n.addAttribute(U,z,j),n.addAttribute(U,V,void 0,Y),g(q,X,Z,j,Y,i),N=j/3,F=N+1,L=(Y-2)/3,B=L-1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3}var et=0,tt=0,rt=p[et++],it=p[et++];U.set(rt,j),U.set(it,Y-it.length+1),Z=t.fromArray(_,tt,Z);var nt,ot;for(u=it.length-3,l=0;u>l;l+=3)nt=o.geodeticSurfaceNormal(t.fromArray(rt,l,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u-l,M),M),X=t.normalize(t.add(nt,ot,X),X),g(q,X,Z,j,Y,i),N=j/3,F=N+1,L=(Y-2)/3,B=L-1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3;for(nt=o.geodeticSurfaceNormal(t.fromArray(rt,u,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u,M),M),X=t.normalize(t.add(nt,ot,X),X),tt+=3,l=0;l<f.length;l++){var at;s=f[l];var st,lt,ut=s.leftPositions,ct=s.rightPositions,ht=P,dt=b,mt=T;if(X=t.fromArray(y,tt,X),a(ut)){for(g(q,X,Z,void 0,Y,i),Y-=3,st=F,lt=B,at=0;at<ut.length/3;at++)ht=t.fromArray(ut,3*at,ht),J[K++]=st,J[K++]=lt-at-1,J[K++]=lt-at,n.addAttribute(U,ht,void 0,Y),dt=t.fromArray(U,3*(lt-at-1),dt),mt=t.fromArray(U,3*st,mt),Z=t.normalize(t.subtract(dt,mt,Z),Z),g(q,X,Z,void 0,Y,i),Y-=3;ht=t.fromArray(U,3*st,ht),dt=t.subtract(t.fromArray(U,3*lt,dt),ht,dt),mt=t.subtract(t.fromArray(U,3*(lt-at),mt),ht,mt),Z=t.normalize(t.add(dt,mt,Z),Z),g(q,X,Z,j,void 0,i),j+=3}else{for(g(q,X,Z,j,void 0,i),j+=3,st=B,lt=F,at=0;at<ct.length/3;at++)ht=t.fromArray(ct,3*at,ht),J[K++]=st,J[K++]=lt+at,J[K++]=lt+at+1,n.addAttribute(U,ht,j),dt=t.fromArray(U,3*st,dt),mt=t.fromArray(U,3*(lt+at),mt),Z=t.normalize(t.subtract(dt,mt,Z),Z),g(q,X,Z,j,void 0,i),j+=3;ht=t.fromArray(U,3*st,ht),dt=t.subtract(t.fromArray(U,3*(lt+at),dt),ht,dt),mt=t.subtract(t.fromArray(U,3*lt,mt),ht,mt),Z=t.normalize(t.negate(t.add(mt,dt,Z),Z),Z),g(q,X,Z,void 0,Y,i),Y-=3}for(rt=p[et++],it=p[et++],rt.splice(0,3),it.splice(it.length-3,3),U.set(rt,j),U.set(it,Y-it.length+1),u=it.length-3,tt+=3,Z=t.fromArray(_,tt,Z),at=0;at<it.length;at+=3)nt=o.geodeticSurfaceNormal(t.fromArray(rt,at,A),A),ot=o.geodeticSurfaceNormal(t.fromArray(it,u-at,M),M),X=t.normalize(t.add(nt,ot,X),X),g(q,X,Z,j,Y,i),F=j/3,N=F-1,B=(Y-2)/3,L=B+1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3;j-=3,Y+=3}if(X=t.fromArray(y,y.length-3,X),g(q,X,Z,j,Y,i),O){j+=3,Y-=3,V=b,z=T;var pt=v[1];for(l=0;Q>l;l++)V=t.fromArray(pt,3*(R-l-1),V),z=t.fromArray(pt,3*l,z),n.addAttribute(U,V,void 0,Y),n.addAttribute(U,z,j),g(q,X,Z,j,Y,i),F=j/3,N=F-1,B=(Y-2)/3,L=B+1,J[K++]=L,J[K++]=N,J[K++]=B,J[K++]=B,J[K++]=N,J[K++]=F,j+=3,Y-=3}if(C.position=new c({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:U}),i.st){var ft,vt,gt=new Float32Array(2*(k/3)),_t=0;if(O){w/=3,x/=3;var yt=Math.PI/(R+1);vt=1/(w-R+1),ft=1/(x-R+1);var Ct,wt=R/2;for(l=wt+1;R+1>l;l++)Ct=m.PI_OVER_TWO+yt*l,gt[_t++]=ft*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=1;x-R+1>l;l++)gt[_t++]=l*ft,gt[_t++]=0;for(l=R;l>wt;l--)Ct=m.PI_OVER_TWO-l*yt,gt[_t++]=1-ft*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=wt;l>0;l--)Ct=m.PI_OVER_TWO-yt*l,gt[_t++]=1-vt*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct));for(l=w-R;l>0;l--)gt[_t++]=l*vt,gt[_t++]=1;for(l=1;wt+1>l;l++)Ct=m.PI_OVER_TWO+yt*l,gt[_t++]=vt*(1+Math.cos(Ct)),gt[_t++]=.5*(1+Math.sin(Ct))}else{for(w/=3,x/=3,vt=1/(w-1),ft=1/(x-1),l=0;x>l;l++)gt[_t++]=l*ft,gt[_t++]=0;for(l=w;l>0;l--)gt[_t++]=(l-1)*vt,gt[_t++]=1}C.st=new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:gt})}return i.normal&&(C.normal=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.normals})),i.tangent&&(C.tangent=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.tangents})),i.binormal&&(C.binormal=new c({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:q.binormals})),{attributes:C,indices:J}}function y(e,r){if(!(r.normal||r.binormal||r.tangent||r.st))return e;var i,o,a=e.position.values;(r.normal||r.binormal)&&(i=e.normal.values,o=e.binormal.values);var s,l=e.position.values.length/18,u=3*l,c=2*l,h=2*u;if(r.normal||r.binormal||r.tangent){var d=r.normal?new Float32Array(6*u):void 0,m=r.binormal?new Float32Array(6*u):void 0,p=r.tangent?new Float32Array(6*u):void 0,f=S,v=E,g=b,_=T,y=x,C=P,w=h;for(s=0;u>s;s+=3){var A=w+h;f=t.fromArray(a,s,f),v=t.fromArray(a,s+u,v),g=t.fromArray(a,(s+3)%u,g),v=t.subtract(v,f,v),g=t.subtract(g,f,g),_=t.normalize(t.cross(v,g,_),_),r.normal&&(n.addAttribute(d,_,A),n.addAttribute(d,_,A+3),n.addAttribute(d,_,w),n.addAttribute(d,_,w+3)),(r.tangent||r.binormal)&&(C=t.fromArray(i,s,C),r.binormal&&(n.addAttribute(m,C,A),n.addAttribute(m,C,A+3),n.addAttribute(m,C,w),n.addAttribute(m,C,w+3)),r.tangent&&(y=t.normalize(t.cross(C,_,y),y),n.addAttribute(p,y,A),n.addAttribute(p,y,A+3),n.addAttribute(p,y,w),n.addAttribute(p,y,w+3))),w+=6}if(r.normal){for(d.set(i),s=0;u>s;s+=3)d[s+u]=-i[s],d[s+u+1]=-i[s+1],d[s+u+2]=-i[s+2];e.normal.values=d}else e.normal=void 0;if(r.binormal?(m.set(o),m.set(o,u),e.binormal.values=m):e.binormal=void 0,r.tangent){var M=e.tangent.values;p.set(M),p.set(M,u),e.tangent.values=p}}if(r.st){var D=e.st.values,I=new Float32Array(6*c);I.set(D),I.set(D,c);for(var R=2*c,O=0;2>O;O++){for(I[R++]=D[0],I[R++]=D[1],s=2;c>s;s+=2){var L=D[s],N=D[s+1];I[R++]=L,I[R++]=N,I[R++]=L,I[R++]=N}I[R++]=D[0],I[R++]=D[1]}e.st.values=I}return e}function C(e,t,r){r[t++]=e[0],r[t++]=e[1],r[t++]=e[2];for(var i=3;i<e.length;i+=3){var n=e[i],o=e[i+1],a=e[i+2];r[t++]=n,r[t++]=o,r[t++]=a,r[t++]=n,r[t++]=o,r[t++]=a}return r[t++]=e[0],r[t++]=e[1],r[t++]=e[2],r}function w(e,t){var r=new v({position:t.positon,normal:t.normal||t.binormal,tangent:t.tangent,binormal:t.normal||t.binormal,st:t.st}),i=e.ellipsoid,o=n.computePositions(e),a=_(o,r,i),s=e.height,l=e.extrudedHeight,u=a.attributes,c=a.indices,h=u.position.values,m=h.length,p=new Float64Array(6*m),f=new Float64Array(m);f.set(h);var g=new Float64Array(4*m);h=n.scaleToGeodeticHeight(h,s,i,h),g=C(h,0,g),f=n.scaleToGeodeticHeight(f,l,i,f),g=C(f,2*m,g),p.set(h),p.set(f,m),p.set(g,2*m),u.position.values=p,m/=3;var w,S=c.length,E=m+m,b=d.createTypedArray(p.length/3,2*S+3*E);b.set(c);var T=S;for(w=0;S>w;w+=3){var x=c[w],P=c[w+1],A=c[w+2];b[T++]=A+m,b[T++]=P+m,b[T++]=x+m}u=y(u,t);var M,D,I,R;for(w=0;E>w;w+=2)M=w+E,D=M+E,I=M+1,R=D+1,b[T++]=M,b[T++]=D,b[T++]=I,b[T++]=I,b[T++]=D,b[T++]=R;return{attributes:u,indices:b}}var S=new t,E=new t,b=new t,T=new t,x=new t,P=new t,A=new t,M=new t,D=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.positions,r=e.width;this._positions=t,this._width=r,this._ellipsoid=o(e.ellipsoid,l.WGS84),this._height=o(e.height,0),this._extrudedHeight=o(e.extrudedHeight,this._height),this._cornerType=o(e.cornerType,i.ROUNDED),this._vertexFormat=o(e.vertexFormat,v.DEFAULT),this._granularity=o(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createCorridorGeometry"};return D.createGeometry=function(t){var r,i=t._positions,o=t._height,a=t._extrudedHeight,s=o!==a,l=p.removeDuplicates(i),c=t._ellipsoid,h=t._vertexFormat,d={ellipsoid:c,positions:l,width:t._width,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!0};if(s){var m=Math.max(o,a);a=Math.min(o,a),o=m,d.height=o,d.extrudedHeight=a,r=w(d,h)}else{var v=n.computePositions(d);r=_(v,h,c),r.attributes.position.values=n.scaleToGeodeticHeight(r.attributes.position.values,o,c,r.attributes.position.values)}var g=r.attributes,y=e.fromVertices(g.position.values,void 0,3);return h.position||(r.attributes.position.values=void 0),new u({attributes:g,indices:r.indices,primitiveType:f.TRIANGLES,boundingSphere:y})},D}),r("Core/CorridorOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./CornerType","./CorridorGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,o){var s,l,u,m=[],p=e.positions,f=e.corners,v=e.endPositions,g=new h,w=0,S=0,E=0;for(l=0;l<p.length;l+=2)u=p[l].length-3,w+=u,E+=4*(u/3),S+=p[l+1].length-3;for(w+=3,S+=3,l=0;l<f.length;l++){s=f[l];var b=f[l].leftPositions;a(b)?(u=b.length,w+=u,E+=2*(u/3)):(u=f[l].rightPositions.length,S+=u,E+=2*(u/3))}var T,x=a(v);x&&(T=v[0].length-3,w+=T,S+=T,T/=3,E+=4*T);var P,A,M,D,I,R,O=w+S,L=new Float64Array(O),N=0,B=O-1,F=T/2,z=d.createTypedArray(O/3,E+4),V=0;if(z[V++]=N/3,z[V++]=(B-2)/3,x){m.push(N/3),R=_,I=y;var k=v[0];for(l=0;F>l;l++)R=t.fromArray(k,3*(F-1-l),R),I=t.fromArray(k,3*(F+l),I),n.addAttribute(L,I,N),n.addAttribute(L,R,void 0,B),A=N/3,D=A+1,P=(B-2)/3,M=P-1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3}var U=0,W=p[U++],G=p[U++];for(L.set(W,N),L.set(G,B-G.length+1),u=G.length-3,m.push(N/3,(B-2)/3),l=0;u>l;l+=3)A=N/3,D=A+1,P=(B-2)/3,M=P-1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;for(l=0;l<f.length;l++){var H;s=f[l];var q,j=s.leftPositions,Y=s.rightPositions,X=C;if(a(j)){for(B-=3,q=M,m.push(D),H=0;H<j.length/3;H++)X=t.fromArray(j,3*H,X),z[V++]=q-H-1,z[V++]=q-H,n.addAttribute(L,X,void 0,B),B-=3;m.push(q-Math.floor(j.length/6)),o===i.BEVELED&&m.push((B-2)/3+1),N+=3}else{for(N+=3,q=D,m.push(M),H=0;H<Y.length/3;H++)X=t.fromArray(Y,3*H,X),z[V++]=q+H,z[V++]=q+H+1,n.addAttribute(L,X,N),N+=3;m.push(q+Math.floor(Y.length/6)),o===i.BEVELED&&m.push(N/3-1),B-=3}for(W=p[U++],G=p[U++],W.splice(0,3),G.splice(G.length-3,3),L.set(W,N),L.set(G,B-G.length+1),u=G.length-3,H=0;H<G.length;H+=3)D=N/3,A=D-1,M=(B-2)/3,P=M+1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;N-=3,B+=3,m.push(N/3,(B-2)/3)}if(x){N+=3,B-=3,R=_,I=y;var Z=v[1];for(l=0;F>l;l++)R=t.fromArray(Z,3*(T-l-1),R),I=t.fromArray(Z,3*l,I),n.addAttribute(L,R,void 0,B),n.addAttribute(L,I,N),D=N/3,A=D-1,M=(B-2)/3,P=M+1,z[V++]=P,z[V++]=M,z[V++]=A,z[V++]=D,N+=3,B-=3;m.push(N/3)}else m.push(N/3,(B-2)/3);return z[V++]=N/3,z[V++]=(B-2)/3,g.position=new c({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:L}),{attributes:g,indices:z,wallIndices:m}}function g(e){var t=e.ellipsoid,r=n.computePositions(e),i=v(r,e.cornerType),o=i.wallIndices,a=e.height,s=e.extrudedHeight,l=i.attributes,u=i.indices,c=l.position.values,h=c.length,m=new Float64Array(h);m.set(c);var p=new Float64Array(2*h);c=n.scaleToGeodeticHeight(c,a,t,c),m=n.scaleToGeodeticHeight(m,s,t,m),p.set(c),p.set(m,h),l.position.values=p,h/=3;var f,g=u.length,_=d.createTypedArray(p.length/3,2*(g+o.length));_.set(u);var y=g;for(f=0;g>f;f+=2){var C=u[f],w=u[f+1];_[y++]=C+h,_[y++]=w+h}var S,E;for(f=0;f<o.length;f++)S=o[f],E=S+h,_[y++]=S,_[y++]=E;return{attributes:l,indices:_}}var _=new t,y=new t,C=new t,w=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.positions,r=e.width;this._positions=t,this._width=r,this._ellipsoid=o(e.ellipsoid,l.WGS84),this._height=o(e.height,0),this._extrudedHeight=o(e.extrudedHeight,this._height),this._cornerType=o(e.cornerType,i.ROUNDED),this._granularity=o(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createCorridorOutlineGeometry"};return w.createGeometry=function(t){var r,i=t._positions,o=t._height,a=t._extrudedHeight,s=o!==a,l=p.removeDuplicates(i),c=t._ellipsoid,h={ellipsoid:c,positions:l,width:t._width,cornerType:t._cornerType,granularity:t._granularity,saveAttributes:!1};if(s){var d=Math.max(o,a);a=Math.min(o,a),o=d,h.height=o,h.extrudedHeight=a,r=g(h)}else{var m=n.computePositions(h);r=v(m,h.cornerType),r.attributes.position.values=n.scaleToGeodeticHeight(r.attributes.position.values,o,c,r.attributes.position.values)}var _=r.attributes,y=e.fromVertices(_.position.values,void 0,3);return new u({attributes:_,indices:r.indices,primitiveType:f.LINES,boundingSphere:y})},w}),r("Core/CylinderGeometryLibrary",["./Math"],function(e){"use strict";var t={};return t.computePositions=function(t,r,i,n,o){var a,s=.5*t,l=-s,u=n+n,c=o?2*u:u,h=new Float64Array(3*c),d=0,m=0,p=o?3*u:0,f=o?3*(u+n):3*n;for(a=0;n>a;a++){var v=a/n*e.TWO_PI,g=Math.cos(v),_=Math.sin(v),y=g*i,C=_*i,w=g*r,S=_*r;h[m+p]=y,h[m+p+1]=C,h[m+p+2]=l,h[m+f]=w,h[m+f+1]=S,h[m+f+2]=s,m+=3,o&&(h[d++]=y,h[d++]=C,h[d++]=l,h[d++]=w,h[d++]=S,h[d++]=s)}return h},t}),r("Core/CylinderGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./CylinderGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=new t,v=new r,g=new r,_=new r,y=new r,C=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.length,r=e.topRadius,i=e.bottomRadius,n=o(e.vertexFormat,p.DEFAULT),a=o(e.slices,128);this._length=t,this._topRadius=r,this._bottomRadius=i,this._vertexFormat=n,this._slices=a,this._workerName="createCylinderGeometry"};return C.createGeometry=function(o){var a,s=o._length,p=o._topRadius,C=o._bottomRadius,w=o._vertexFormat,S=o._slices,E=S+S,b=S+E,T=E+E,x=n.computePositions(s,p,C,S,!0),P=w.st?new Float32Array(2*T):void 0,A=w.normal?new Float32Array(3*T):void 0,M=w.tangent?new Float32Array(3*T):void 0,D=w.binormal?new Float32Array(3*T):void 0,I=w.normal||w.tangent||w.binormal;if(I){var R=w.tangent||w.binormal,O=0,L=0,N=0,B=v;B.z=0;var F=_,z=g;for(a=0;S>a;a++){var V=a/S*d.TWO_PI,k=Math.cos(V),U=Math.sin(V);I&&(B.x=k,B.y=U,R&&(F=r.normalize(r.cross(r.UNIT_Z,B,F),F)),w.normal&&(A[O++]=k,A[O++]=U,A[O++]=0,A[O++]=k,A[O++]=U,A[O++]=0),w.tangent&&(M[L++]=F.x,M[L++]=F.y,M[L++]=F.z,M[L++]=F.x,M[L++]=F.y,M[L++]=F.z),w.binormal&&(z=r.normalize(r.cross(B,F,z),z),D[N++]=z.x,D[N++]=z.y,D[N++]=z.z,D[N++]=z.x,D[N++]=z.y,D[N++]=z.z))}for(a=0;S>a;a++)w.normal&&(A[O++]=0,A[O++]=0,A[O++]=-1),w.tangent&&(M[L++]=1,M[L++]=0,M[L++]=0),w.binormal&&(D[N++]=0,D[N++]=-1,D[N++]=0);for(a=0;S>a;a++)w.normal&&(A[O++]=0,A[O++]=0,A[O++]=1),w.tangent&&(M[L++]=1,M[L++]=0,M[L++]=0),w.binormal&&(D[N++]=0,D[N++]=1,D[N++]=0)}var W=12*S-12,G=h.createTypedArray(T,W),H=0,q=0;for(a=0;S-1>a;a++)G[H++]=q,G[H++]=q+2,G[H++]=q+3,G[H++]=q,G[H++]=q+3,G[H++]=q+1,q+=2;for(G[H++]=E-2,G[H++]=0,G[H++]=1,G[H++]=E-2,G[H++]=1,G[H++]=E-1,a=1;S-1>a;a++)G[H++]=E+a+1,G[H++]=E+a,G[H++]=E;for(a=1;S-1>a;a++)G[H++]=b,G[H++]=b+a,G[H++]=b+a+1;var j=0;if(w.st){var Y=Math.max(p,C);for(a=0;T>a;a++){var X=r.fromArray(x,3*a,y);P[j++]=(X.x+Y)/(2*Y),P[j++]=(X.y+Y)/(2*Y)}}var Z=new c;w.position&&(Z.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:x})),w.normal&&(Z.normal=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:A})),w.tangent&&(Z.tangent=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:M})),w.binormal&&(Z.binormal=new u({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:D})),w.st&&(Z.st=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:P})),f.x=.5*s,f.y=Math.max(C,p);var Q=new e(r.ZERO,t.magnitude(f));return new l({attributes:Z,indices:G,primitiveType:m.TRIANGLES,boundingSphere:Q})},C}),r("Core/CylinderOutlineGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./CylinderGeometryLibrary","./defaultValue","./defined","./DeveloperError","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=new t,p=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.length,r=e.topRadius,i=e.bottomRadius,n=o(e.slices,128),a=Math.max(o(e.numberOfVerticalLines,16),0);this._length=t,this._topRadius=r,this._bottomRadius=i,this._slices=n,this._numberOfVerticalLines=a,this._workerName="createCylinderOutlineGeometry"};return p.createGeometry=function(o){var a,s=o._length,p=o._topRadius,f=o._bottomRadius,v=o._slices,g=o._numberOfVerticalLines,_=2*v,y=n.computePositions(s,p,f,v,!1),C=2*v;if(g>0){var w=Math.min(g,v);a=Math.round(v/w),C+=w}for(var S=h.createTypedArray(_,2*C),E=0,b=0;v-1>b;b++)S[E++]=b,S[E++]=b+1,S[E++]=b+v,S[E++]=b+1+v;if(S[E++]=v-1,S[E++]=0,S[E++]=v+v-1,S[E++]=v,g>0)for(b=0;v>b;b+=a)S[E++]=b,S[E++]=b+v;var T=new c;T.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:y}),m.x=.5*s,m.y=Math.max(f,p);var x=new e(r.ZERO,t.magnitude(m));return new l({attributes:T,indices:S,primitiveType:d.LINES,boundingSphere:x})},p}),r("Core/DefaultProxy",[],function(){"use strict";var e=function(e){this.proxy=e};return e.prototype.getURL=function(e){return this.proxy+"?"+encodeURIComponent(e)},e}),r("ThirdParty/Tween",[],function(){void 0===Date.now&&(Date.now=function(){return(new Date).valueOf()});var e=e||function(){var e=[];return{REVISION:"13",getAll:function(){return e},removeAll:function(){e=[]},add:function(t){e.push(t)},remove:function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},update:function(t){if(0===e.length)return!1;var r=0;for(t=void 0!==t?t:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();r<e.length;)e[r].update(t)?r++:e.splice(r,1);return!0}}}();return e.Tween=function(t){var r=t,i={},n={},o={},a=1e3,s=0,l=!1,u=!1,c=!1,h=0,d=null,m=e.Easing.Linear.None,p=e.Interpolation.Linear,f=[],v=null,g=!1,_=null,y=null,C=null;for(var w in t)i[w]=parseFloat(t[w],10);this.to=function(e,t){return void 0!==t&&(a=t),n=e,this},this.start=function(t){e.add(this),u=!0,g=!1,d=void 0!==t?t:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),d+=h;for(var a in n){if(n[a]instanceof Array){if(0===n[a].length)continue;n[a]=[r[a]].concat(n[a])}i[a]=r[a],i[a]instanceof Array==!1&&(i[a]*=1),o[a]=i[a]||0}return this},this.stop=function(){return u?(e.remove(this),u=!1,null!==C&&C.call(r),this.stopChainedTweens(),this):this},this.stopChainedTweens=function(){for(var e=0,t=f.length;t>e;e++)f[e].stop()},this.delay=function(e){return h=e,this},this.repeat=function(e){return s=e,this},this.yoyo=function(e){return l=e,this},this.easing=function(e){return m=e,this},this.interpolation=function(e){return p=e,this},this.chain=function(){return f=arguments,this},this.onStart=function(e){return v=e,this},this.onUpdate=function(e){return _=e,this},this.onComplete=function(e){return y=e,this},this.onStop=function(e){return C=e,this},this.update=function(e){var t;if(d>e)return!0;g===!1&&(null!==v&&v.call(r),g=!0);var u=(e-d)/a;u=u>1?1:u;var C=m(u);for(t in n){var w=i[t]||0,S=n[t];S instanceof Array?r[t]=p(S,C):("string"==typeof S&&(S=w+parseFloat(S,10)),"number"==typeof S&&(r[t]=w+(S-w)*C))}if(null!==_&&_.call(r,C),1==u){if(s>0){isFinite(s)&&s--;for(t in o){if("string"==typeof n[t]&&(o[t]=o[t]+parseFloat(n[t],10)),l){var E=o[t];o[t]=n[t],n[t]=E}i[t]=o[t]}return l&&(c=!c),d=e+h,!0}null!==y&&y.call(r);for(var b=0,T=f.length;T>b;b++)f[b].start(e);return!1}return!0}},e.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),-(r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/i)))},Out:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*2*Math.PI/i)+1)},InOut:function(e){var t,r=.1,i=.4;return 0===e?0:1===e?1:(!r||1>r?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?-.5*r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*2*Math.PI/i):.5*r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*2*Math.PI/i)+1)}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?.5*e*e*((t+1)*e-t):.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(t){return 1-e.Easing.Bounce.Out(1-t)},Out:function(e){return 1/2.75>e?7.5625*e*e:2/2.75>e?7.5625*(e-=1.5/2.75)*e+.75:2.5/2.75>e?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(t){return.5>t?.5*e.Easing.Bounce.In(2*t):.5*e.Easing.Bounce.Out(2*t-1)+.5}}},e.Interpolation={Linear:function(t,r){var i=t.length-1,n=i*r,o=Math.floor(n),a=e.Interpolation.Utils.Linear;return 0>r?a(t[0],t[1],n):r>1?a(t[i],t[i-1],i-n):a(t[o],t[o+1>i?i:o+1],n-o)},Bezier:function(t,r){var i,n=0,o=t.length-1,a=Math.pow,s=e.Interpolation.Utils.Bernstein;for(i=0;o>=i;i++)n+=a(1-r,o-i)*a(r,i)*t[i]*s(o,i);return n},CatmullRom:function(t,r){var i=t.length-1,n=i*r,o=Math.floor(n),a=e.Interpolation.Utils.CatmullRom;return t[0]===t[i]?(0>r&&(o=Math.floor(n=i*(1+r))),a(t[(o-1+i)%i],t[o],t[(o+1)%i],t[(o+2)%i],n-o)):0>r?t[0]-(a(t[0],t[0],t[1],t[1],-n)-t[0]):r>1?t[i]-(a(t[i],t[i],t[i-1],t[i-1],n-i)-t[i]):a(t[o?o-1:0],t[o],t[o+1>i?i:o+1],t[o+2>i?i:o+2],n-o)},Utils:{Linear:function(e,t,r){return(t-e)*r+e},Bernstein:function(t,r){var i=e.Interpolation.Utils.Factorial;return i(t)/i(r)/i(t-r)},Factorial:function(){var e=[1];return function(t){var r,i=1;if(e[t])return e[t];for(r=t;r>1;r--)i*=r;return e[t]=i}}(),CatmullRom:function(e,t,r,i,n){var o=.5*(r-e),a=.5*(i-t),s=n*n,l=n*s;return(2*t-2*r+o+a)*l+(-3*t+3*r-2*o-a)*s+o*n+t}}},e}),r("Core/EasingFunction",["../ThirdParty/Tween","./freezeObject"],function(e,t){"use strict";var r={LINEAR_NONE:e.Easing.Linear.None,QUADRACTIC_IN:e.Easing.Quadratic.In,QUADRACTIC_OUT:e.Easing.Quadratic.Out,QUADRACTIC_IN_OUT:e.Easing.Quadratic.InOut,CUBIC_IN:e.Easing.Cubic.In,CUBIC_OUT:e.Easing.Cubic.Out,CUBIC_IN_OUT:e.Easing.Cubic.InOut,QUARTIC_IN:e.Easing.Quartic.In,QUARTIC_OUT:e.Easing.Quartic.Out,QUARTIC_IN_OUT:e.Easing.Quartic.InOut,QUINTIC_IN:e.Easing.Quintic.In,QUINTIC_OUT:e.Easing.Quintic.Out,QUINTIC_IN_OUT:e.Easing.Quintic.InOut,SINUSOIDAL_IN:e.Easing.Sinusoidal.In,SINUSOIDAL_OUT:e.Easing.Sinusoidal.Out,SINUSOIDAL_IN_OUT:e.Easing.Sinusoidal.InOut,EXPONENTIAL_IN:e.Easing.Exponential.In,EXPONENTIAL_OUT:e.Easing.Exponential.Out,EXPONENTIAL_IN_OUT:e.Easing.Exponential.InOut,CIRCULAR_IN:e.Easing.Circular.In,CIRCULAR_OUT:e.Easing.Circular.Out,CIRCULAR_IN_OUT:e.Easing.Circular.InOut,ELASTIC_IN:e.Easing.Elastic.In,ELASTIC_OUT:e.Easing.Elastic.Out,ELASTIC_IN_OUT:e.Easing.Elastic.InOut,BACK_IN:e.Easing.Back.In,BACK_OUT:e.Easing.Back.Out,BACK_IN_OUT:e.Easing.Back.InOut,BOUNCE_IN:e.Easing.Bounce.In,BOUNCE_OUT:e.Easing.Bounce.Out,BOUNCE_IN_OUT:e.Easing.Bounce.InOut};return t(r)}),r("Core/EllipsoidGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new r,f=new r,v=new r,g=new r,_=new r,y=new r(1,1,1),C=Math.cos,w=Math.sin,S=function(e){e=n(e,n.EMPTY_OBJECT);var t=n(e.radii,y),i=n(e.stackPartitions,64),o=n(e.slicePartitions,64),a=n(e.vertexFormat,m.DEFAULT);this._radii=r.clone(t),this._stackPartitions=i,this._slicePartitions=o,this._vertexFormat=a,this._workerName="createEllipsoidGeometry"};return S.createGeometry=function(n){var o,m,y=n._radii,S=a.fromCartesian3(y),E=n._vertexFormat,b=n._slicePartitions+1,T=n._stackPartitions+1,x=T*b,P=new Float64Array(3*x),A=6*(b-1)*(T-1),M=c.createTypedArray(x,A),D=E.normal?new Float32Array(3*x):void 0,I=E.tangent?new Float32Array(3*x):void 0,R=E.binormal?new Float32Array(3*x):void 0,O=E.st?new Float32Array(2*x):void 0,L=new Array(b),N=new Array(b),B=0;for(o=0;b>o;o++){var F=h.TWO_PI*o/(b-1);L[o]=C(F),N[o]=w(F),P[B++]=0,P[B++]=0,P[B++]=y.z}for(o=1;T-1>o;o++){var z=Math.PI*o/(T-1),V=w(z),k=y.x*V,U=y.y*V,W=y.z*C(z);for(m=0;b>m;m++)P[B++]=L[m]*k,P[B++]=N[m]*U,P[B++]=W}for(o=0;b>o;o++)P[B++]=0,P[B++]=0,P[B++]=-y.z;var G=new u;E.position&&(G.position=new l({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:P}));var H=0,q=0,j=0,Y=0;if(E.st||E.normal||E.tangent||E.binormal){for(o=0;x>o;o++){var X=r.fromArray(P,3*o,p),Z=S.geodeticSurfaceNormal(X,f);if(E.st){var Q=t.negate(Z,_);t.magnitude(Q)<h.EPSILON6&&(B=3*(o+b*Math.floor(.5*T)),B>P.length&&(B=3*(o-b*Math.floor(.5*T))),r.fromArray(P,B,Q),S.geodeticSurfaceNormal(Q,Q),t.negate(Q,Q)),O[H++]=Math.atan2(Q.y,Q.x)/h.TWO_PI+.5,O[H++]=Math.asin(Z.z)/Math.PI+.5}if(E.normal&&(D[q++]=Z.x,D[q++]=Z.y,D[q++]=Z.z),E.tangent||E.binormal){var J=v;if(b>o||o>x-b-1?(r.cross(r.UNIT_X,Z,J),r.normalize(J,J)):(r.cross(r.UNIT_Z,Z,J),r.normalize(J,J)),E.tangent&&(I[j++]=J.x,I[j++]=J.y,I[j++]=J.z),E.binormal){var K=r.cross(Z,J,g);r.normalize(K,K),R[Y++]=K.x,R[Y++]=K.y,R[Y++]=K.z}}}E.st&&(G.st=new l({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:O})),E.normal&&(G.normal=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:D})),E.tangent&&(G.tangent=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:I})),E.binormal&&(G.binormal=new l({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:R}))}for(B=0,o=0;T>o;o++){var $=o*b,et=(o+1)*b;for(m=0;b-1>m;m++)M[B++]=et+m,M[B++]=et+m+1,M[B++]=$+m+1,M[B++]=et+m,M[B++]=$+m+1,M[B++]=$+m}return new s({attributes:G,indices:M,primitiveType:d.TRIANGLES,boundingSphere:e.fromEllipsoid(S)})},S}),r("Core/EllipsoidOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";var d=new t(1,1,1),m=Math.cos,p=Math.sin,f=function(e){e=i(e,i.EMPTY_OBJECT);var r=i(e.radii,d),n=i(e.stackPartitions,10),o=i(e.slicePartitions,8),a=i(e.subdivisions,128);this._radii=t.clone(r),this._stackPartitions=n,this._slicePartitions=o,this._subdivisions=a,this._workerName="createEllipsoidOutlineGeometry"};return f.createGeometry=function(t){var i,n,d,f,v,g,_=t._radii,y=o.fromCartesian3(_),C=t._stackPartitions,w=t._slicePartitions,S=t._subdivisions,E=S*(C+w-1),b=E-w+2,T=new Float64Array(3*b),x=u.createTypedArray(b,2*E),P=0,A=new Array(S),M=new Array(S);for(i=0;S>i;i++)d=c.TWO_PI*i/S,A[i]=m(d),M[i]=p(d);for(i=1;C>i;i++)for(f=Math.PI*i/C,v=m(f),g=p(f),n=0;S>n;n++)T[P++]=_.x*A[n]*g,T[P++]=_.y*M[n]*g,T[P++]=_.z*v;for(A.length=w,M.length=w,i=0;w>i;i++)d=c.TWO_PI*i/w,A[i]=m(d),M[i]=p(d);for(T[P++]=0,T[P++]=0,T[P++]=_.z,i=1;S>i;i++)for(f=Math.PI*i/S,v=m(f),g=p(f),n=0;w>n;n++)T[P++]=_.x*A[n]*g,T[P++]=_.y*M[n]*g,T[P++]=_.z*v;for(T[P++]=0,T[P++]=0,T[P++]=-_.z,P=0,i=0;C-1>i;++i){var D=i*S;for(n=0;S-1>n;++n)x[P++]=D+n,x[P++]=D+n+1;x[P++]=D+S-1,x[P++]=D}var I=S*(C-1);for(n=1;w+1>n;++n)x[P++]=I,x[P++]=I+n;for(i=0;S-2>i;++i){var R=i*w+1+I,O=(i+1)*w+1+I;for(n=0;w-1>n;++n)x[P++]=O+n,x[P++]=R+n;x[P++]=O+w-1,x[P++]=R+w-1}var L=T.length/3-1;for(n=L-1;n>L-w-1;--n)x[P++]=L,x[P++]=n;var N=new l({position:new s({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:T})});return new a({attributes:N,indices:x,primitiveType:h.LINES,boundingSphere:e.fromEllipsoid(y)})},f}),r("Core/EllipsoidTerrainProvider",["./defaultValue","./defined","./defineProperties","./Ellipsoid","./Event","./GeographicTilingScheme","./HeightmapTerrainData","./TerrainProvider"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,{}),this._tilingScheme=r.tilingScheme,t(this._tilingScheme)||(this._tilingScheme=new o({ellipsoid:e(r.ellipsoid,i.WGS84)})),this._levelZeroMaximumGeometricError=s.getEstimatedLevelZeroGeometricErrorForAHeightmap(this._tilingScheme.ellipsoid,64,this._tilingScheme.getNumberOfXTilesAtLevel(0));var l=16,u=16;this._terrainData=new a({buffer:new Uint8Array(l*u),width:16,height:16}),this._errorEvent=new n};return r(l.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},ready:{get:function(){return!0}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),l.prototype.requestTileGeometry=function(){return this._terrainData},l.prototype.getLevelMaximumGeometricError=function(e){return this._levelZeroMaximumGeometricError/(1<<e)},l.prototype.getTileDataAvailable=function(){return void 0},l}),r("Core/EllipsoidalOccluder",["./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Rectangle"],function(e,t,r,i,n,o,a){"use strict";function s(e,r,i){var n=e.transformPositionToScaledSpace(r,p),o=t.magnitudeSquared(n),a=Math.sqrt(o),s=t.divideByScalar(n,a,f);o=Math.max(1,o),a=Math.max(1,a);var l=t.dot(s,i),u=t.magnitude(t.cross(s,i,s)),c=1/a,h=Math.sqrt(o-1)*c;return 1/(l*c-u*h)}function l(e,r,i){return 0>=r||r===1/0||r!==r?void 0:t.multiplyByScalar(e,r,i)}function u(e,r){return e.transformPositionToScaledSpace(r,v),t.normalize(v,v)}var c=function(e,r){this._ellipsoid=e,this._cameraPosition=new t,this._cameraPositionInScaledSpace=new t,this._distanceToLimbInScaledSpaceSquared=0,i(r)&&(this.cameraPosition=r)};n(c.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(e){var r=this._ellipsoid,i=r.transformPositionToScaledSpace(e,this._cameraPositionInScaledSpace),n=t.magnitudeSquared(i)-1;t.clone(e,this._cameraPosition),this._cameraPositionInScaledSpace=i,this._distanceToLimbInScaledSpaceSquared=n}}});var h=new t;c.prototype.isPointVisible=function(e){var t=this._ellipsoid,r=t.transformPositionToScaledSpace(e,h);return this.isScaledSpacePointVisible(r)},c.prototype.isScaledSpacePointVisible=function(e){var r=this._cameraPositionInScaledSpace,i=this._distanceToLimbInScaledSpaceSquared,n=t.subtract(e,r,h),o=-t.dot(n,r),a=o>i&&o*o/t.magnitudeSquared(n)>i;return!a},c.prototype.computeHorizonCullingPoint=function(e,r,n){i(n)||(n=new t);for(var o=this._ellipsoid,a=u(o,e),c=0,h=0,d=r.length;d>h;++h){var m=r[h],p=s(o,m,a);c=Math.max(c,p)}return l(a,c,n)};var d=new t;c.prototype.computeHorizonCullingPointFromVertices=function(e,n,o,a,c){i(c)||(c=new t),a=r(a,t.ZERO);for(var h=this._ellipsoid,m=u(h,e),p=0,f=0,v=n.length;v>f;f+=o){d.x=n[f]+a.x,d.y=n[f+1]+a.y,d.z=n[f+2]+a.z;var g=s(h,d,m);p=Math.max(p,g)}return l(m,p,c)};var m=[];c.prototype.computeHorizonCullingPointFromRectangle=function(r,i,n){var o=a.subsample(r,i,0,m),s=e.fromPoints(o);return t.magnitude(s.center)<.1*i.minimumRadius?void 0:this.computeHorizonCullingPoint(s.center,o,n)};var p=new t,f=new t,v=new t;return c}),r("Core/EventHelper",["./defined","./DeveloperError"],function(){"use strict";var e=function(){this._removalFunctions=[]};return e.prototype.add=function(e,t,r){var i=e.addEventListener(t,r);this._removalFunctions.push(i);var n=this;return function(){i();var e=n._removalFunctions;e.splice(e.indexOf(i),1)}},e.prototype.removeAll=function(){for(var e=this._removalFunctions,t=0,r=e.length;r>t;++t)e[t]();e.length=0},e}),r("Core/ExtrapolationType",["./freezeObject"],function(e){"use strict";
var t={NONE:0,HOLD:1,EXTRAPOLATE:2};return e(t)}),r("Core/GeometryInstanceAttribute",["./defaultValue","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.value=t.value};return t}),r("Core/HermitePolynomialApproximation",["./defaultValue","./defined","./DeveloperError","./Math"],function(e,t,r,i){"use strict";function n(e,t,r,i,o,a){var s,l,u,c=0;if(i>0){for(l=0;o>l;l++){for(s=!1,u=0;u<a.length&&!s;u++)l===a[u]&&(s=!0);s||(a.push(l),c+=n(e,t,r,i-1,o,a),a.splice(a.length-1,1))}return c}for(c=1,l=0;o>l;l++){for(s=!1,u=0;u<a.length&&!s;u++)l===a[u]&&(s=!0);s||(c*=e-r[t[l]])}return c}function o(e,t,r,n,o,a){for(var s,l,u=-1,c=t.length,h=c*(c+1)/2,d=0;o>d;d++){var m=Math.floor(d*h);for(s=0;c>s;s++)l=t[s]*o*(a+1)+d,e[m+s]=n[l];for(var p=1;c>p;p++){var f=0,v=Math.floor(p*(1-p)/2)+c*p,g=!1;for(s=0;c-p>s;s++){var _,y,C=r[t[s]],w=r[t[s+p]];if(0>=w-C)l=t[s]*o*(a+1)+o*p+d,_=n[l],y=_/i.factorial(p),e[m+v+f]=y,f++;else{var S=Math.floor((p-1)*(2-p)/2)+c*(p-1);_=e[m+S+s+1]-e[m+S+s],y=_/(w-C),e[m+v+f]=y,f++}g=g||0!==_}g&&(u=Math.max(u,p))}}return u}var a=i.factorial,s={type:"Hermite"};s.getRequiredDataPoints=function(t,r){return r=e(r,0),Math.max(Math.floor((t+1)/(r+1)),2)},s.interpolateOrderZero=function(e,r,i,o,s){t(s)||(s=new Array(o));var l,u,c,h,d,m,p=r.length,f=new Array(o);for(l=0;o>l;l++){s[l]=0;var v=new Array(p);for(f[l]=v,u=0;p>u;u++)v[u]=[]}var g=p,_=new Array(g);for(l=0;g>l;l++)_[l]=l;var y=p-1;for(h=0;o>h;h++){for(u=0;g>u;u++)m=_[u]*o+h,f[h][0].push(i[m]);for(l=1;g>l;l++){var C=!1;for(u=0;g-l>u;u++){var w,S=r[_[u]],E=r[_[u+l]];0>=E-S?(m=_[u]*o+o*l+h,w=i[m],f[h][l].push(w/a(l))):(w=f[h][l-1][u+1]-f[h][l-1][u],f[h][l].push(w/(E-S))),C=C||0!==w}C||(y=l-1)}}for(c=0,d=0;d>=c;c++)for(l=c;y>=l;l++){var b=n(e,_,r,c,l,[]);for(h=0;o>h;h++){var T=f[h][l][0];s[h+c*o]+=T*b}}return s};var l=[];return s.interpolate=function(e,r,i,a,s,u,c){var h=a*(u+1);t(c)||(c=new Array(h));for(var d=0;h>d;d++)c[d]=0;for(var m=r.length,p=new Array(m*(s+1)),f=0;m>f;f++)for(var v=0;s+1>v;v++)p[f*(s+1)+v]=f;for(var g=p.length,_=l,y=o(_,p,r,i,a,s),C=[],w=g*(g+1)/2,S=Math.min(y,u),E=0;S>=E;E++)for(f=E;y>=f;f++){C.length=0;for(var b=n(e,p,r,E,f,C),T=Math.floor(f*(1-f)/2)+g*f,x=0;a>x;x++){var P=Math.floor(x*w),A=_[P+T];c[x+E*a]+=A*b}}return c},s}),r("Core/IauOrientationParameters",[],function(){"use strict";var e=function(e,t,r,i){this.rightAscension=e,this.declination=t,this.rotation=r,this.rotationRate=i};return e}),r("Core/Iau2000Orientation",["./defined","./IauOrientationParameters","./JulianDate","./Math","./TimeConstants"],function(e,t,r,i,n){"use strict";var o={},a=32.184,s=2451545,l=-.0529921,u=-.1059842,c=13.0120009,h=13.3407154,d=.9856003,m=26.4057084,p=13.064993,f=.3287146,v=1.7484877,g=-.1589763,_=.0036096,y=.1643573,C=12.9590088,w=new r;return o.ComputeMoon=function(o,S){e(o)||(o=r.now()),w=r.addSeconds(o,a,w);var E=r.totalDays(w)-s,b=E/n.DAYS_PER_JULIAN_CENTURY,T=(125.045+l*E)*i.RADIANS_PER_DEGREE,x=(250.089+u*E)*i.RADIANS_PER_DEGREE,P=(260.008+c*E)*i.RADIANS_PER_DEGREE,A=(176.625+h*E)*i.RADIANS_PER_DEGREE,M=(357.529+d*E)*i.RADIANS_PER_DEGREE,D=(311.589+m*E)*i.RADIANS_PER_DEGREE,I=(134.963+p*E)*i.RADIANS_PER_DEGREE,R=(276.617+f*E)*i.RADIANS_PER_DEGREE,O=(34.226+v*E)*i.RADIANS_PER_DEGREE,L=(15.134+g*E)*i.RADIANS_PER_DEGREE,N=(119.743+_*E)*i.RADIANS_PER_DEGREE,B=(239.961+y*E)*i.RADIANS_PER_DEGREE,F=(25.053+C*E)*i.RADIANS_PER_DEGREE,z=Math.sin(T),V=Math.sin(x),k=Math.sin(P),U=Math.sin(A),W=Math.sin(M),G=Math.sin(D),H=Math.sin(I),q=Math.sin(R),j=Math.sin(O),Y=Math.sin(L),X=Math.sin(N),Z=Math.sin(B),Q=Math.sin(F),J=Math.cos(T),K=Math.cos(x),$=Math.cos(P),et=Math.cos(A),tt=Math.cos(M),rt=Math.cos(D),it=Math.cos(I),nt=Math.cos(R),ot=Math.cos(O),at=Math.cos(L),st=Math.cos(N),lt=Math.cos(B),ut=Math.cos(F),ct=(269.9949+.0031*b-3.8787*z-.1204*V+.07*k-.0172*U+.0072*G-.0052*Y+.0043*Q)*i.RADIANS_PER_DEGREE,ht=(66.5392+.013*b+1.5419*J+.0239*K-.0278*$+.0068*et-.0029*rt+9e-4*it+8e-4*at-9e-4*ut)*i.RADIANS_PER_DEGREE,dt=(38.3213+13.17635815*E-1.4e-12*E*E+3.561*z+.1208*V-.0642*k+.0158*U+.0252*W-.0066*G-.0047*H-.0046*q+.0028*j+.0052*Y+.004*X+.0019*Z-.0044*Q)*i.RADIANS_PER_DEGREE,mt=(13.17635815-1.4e-12*2*E+3.561*J*l+.1208*K*u-.0642*$*c+.0158*et*h+.0252*tt*d-.0066*rt*m-.0047*it*p-.0046*nt*f+.0028*ot*v+.0052*at*g+.004*st*_+.0019*lt*y-.0044*ut*C)/86400*i.RADIANS_PER_DEGREE;return e(S)||(S=new t),S.rightAscension=ct,S.declination=ht,S.rotation=dt,S.rotationRate=mt,S},o}),r("Core/IauOrientationAxes",["./Cartesian3","./defined","./Iau2000Orientation","./JulianDate","./Math","./Matrix3","./Quaternion"],function(e,t,r,i,n,o,a){"use strict";function s(r,i,a){var s=u;s.x=Math.cos(r+n.PI_OVER_TWO),s.y=Math.sin(r+n.PI_OVER_TWO),s.z=0;var l=Math.cos(i),d=h;d.x=l*Math.cos(r),d.y=l*Math.sin(r),d.z=Math.sin(i);var m=e.cross(d,s,c);return t(a)||(a=new o),a[0]=s.x,a[1]=m.x,a[2]=d.x,a[3]=s.y,a[4]=m.y,a[5]=d.y,a[6]=s.z,a[7]=m.z,a[8]=d.z,a}var l=function(e){t(e)&&"function"==typeof e||(e=r.ComputeMoon),this._computeFunction=e},u=new e,c=new e,h=new e,d=new o,m=new a;return l.prototype.evaluate=function(r,l){t(r)||(r=i.now());var u=this._computeFunction(r),c=s(u.rightAscension,u.declination,l),h=n.zeroToTwoPi(u.rotation),p=a.fromAxisAngle(e.UNIT_Z,h,m),f=o.fromQuaternion(a.conjugate(p,p),d),v=o.multiply(f,c,c);return v},l}),r("Core/InterpolationAlgorithm",["./DeveloperError"],function(e){"use strict";var t={};return t.type=void 0,t.getRequiredDataPoints=e.throwInstantiationError,t.interpolateOrderZero=e.throwInstantiationError,t.interpolate=e.throwInstantiationError,t}),r("Core/TimeInterval",["./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./JulianDate"],function(e,t,r,i,n,o){"use strict";var a=function(r){r=e(r,e.EMPTY_OBJECT),this.start=t(r.start)?o.clone(r.start):new o,this.stop=t(r.stop)?o.clone(r.stop):new o,this.data=r.data,this.isStartIncluded=e(r.isStartIncluded,!0),this.isStopIncluded=e(r.isStopIncluded,!0)};r(a.prototype,{isEmpty:{get:function(){var e=o.compare(this.stop,this.start);return 0>e||0===e&&(!this.isStartIncluded||!this.isStopIncluded)}}});var s={start:void 0,stop:void 0,isStartIncluded:void 0,isStopIncluded:void 0,data:void 0};return a.fromIso8601=function(r,i){var n=r.iso8601.split("/"),l=o.fromIso8601(n[0]),u=o.fromIso8601(n[1]),c=e(r.isStartIncluded,!0),h=e(r.isStopIncluded,!0),d=r.data;return t(i)?(i.start=l,i.stop=u,i.isStartIncluded=c,i.isStopIncluded=h,i.data=d,i):(s.start=l,s.stop=u,s.isStartIncluded=c,s.isStopIncluded=h,s.data=d,new a(s))},a.toIso8601=function(e,t){return o.toIso8601(e.start,t)+"/"+o.toIso8601(e.stop,t)},a.clone=function(e,r){return t(e)?t(r)?(r.start=e.start,r.stop=e.stop,r.isStartIncluded=e.isStartIncluded,r.isStopIncluded=e.isStopIncluded,r.data=e.data,r):new a(e):void 0},a.equals=function(e,r,i){return e===r||t(e)&&t(r)&&(e.isEmpty&&r.isEmpty||e.isStartIncluded===r.isStartIncluded&&e.isStopIncluded===r.isStopIncluded&&o.equals(e.start,r.start)&&o.equals(e.stop,r.stop)&&(e.data===r.data||t(i)&&i(e.data,r.data)))},a.equalsEpsilon=function(e,r,i,n){return e===r||t(e)&&t(r)&&(e.isEmpty&&r.isEmpty||e.isStartIncluded===r.isStartIncluded&&e.isStopIncluded===r.isStopIncluded&&o.equalsEpsilon(e.start,r.start,i)&&o.equalsEpsilon(e.stop,r.stop,i)&&(e.data===r.data||t(n)&&n(e.data,r.data)))},a.intersect=function(e,r,i,n){if(!t(r))return a.clone(a.EMPTY,i);var s=e.start,l=e.stop,u=r.start,c=r.stop,h=o.greaterThanOrEquals(u,s)&&o.greaterThanOrEquals(l,u),d=!h&&o.lessThanOrEquals(u,s)&&o.lessThanOrEquals(s,c);if(!h&&!d)return a.clone(a.EMPTY,i);var m=e.isStartIncluded,p=e.isStopIncluded,f=r.isStartIncluded,v=r.isStopIncluded,g=o.lessThan(l,c);return i.start=h?u:s,i.isStartIncluded=m&&f||!o.equals(u,s)&&(h&&f||d&&m),i.stop=g?l:c,i.isStopIncluded=g?p:p&&v||!o.equals(c,l)&&v,i.data=t(n)?n(e.data,r.data):e.data,i},a.contains=function(e,t){if(e.isEmpty)return!1;var r=o.compare(e.start,t);if(0===r)return e.isStartIncluded;var i=o.compare(t,e.stop);return 0===i?e.isStopIncluded:0>r&&0>i},a.prototype.clone=function(e){return a.clone(this,e)},a.prototype.equals=function(e,t){return a.equals(this,e,t)},a.prototype.equalsEpsilon=function(e,t,r){return a.equalsEpsilon(this,e,t,r)},a.prototype.toString=function(){return a.toIso8601(this)},a.EMPTY=n(new a({start:new o,stop:new o,isStartIncluded:!1,isStopIncluded:!1})),a}),r("Core/Iso8601",["./freezeObject","./JulianDate","./TimeInterval"],function(e,t,r){"use strict";var i=e(t.fromIso8601("0000-01-01T00:00:00Z")),n=e(t.fromIso8601("9999-12-31T24:00:00Z")),o=e(new r({start:i,stop:n})),a={MINIMUM_VALUE:i,MAXIMUM_VALUE:n,MAXIMUM_INTERVAL:o};return a}),r("Core/KeyboardEventModifier",["./freezeObject"],function(e){"use strict";var t={SHIFT:0,CTRL:1,ALT:2};return e(t)}),r("Core/LagrangePolynomialApproximation",["./defined"],function(e){"use strict";var t={type:"Lagrange"};return t.getRequiredDataPoints=function(e){return Math.max(e+1,2)},t.interpolateOrderZero=function(t,r,i,n,o){e(o)||(o=new Array(n));var a,s,l=r.length;for(a=0;n>a;a++)o[a]=0;for(a=0;l>a;a++){var u=1;for(s=0;l>s;s++)if(s!==a){var c=r[a]-r[s];u*=(t-r[s])/c}for(s=0;n>s;s++)o[s]+=u*i[a*n+s]}return o},t}),r("Core/LinearApproximation",["./defined","./DeveloperError"],function(e){"use strict";var t={type:"Linear"};return t.getRequiredDataPoints=function(){return 2},t.interpolateOrderZero=function(t,r,i,n,o){e(o)||(o=new Array(n));var a,s,l,u=r[0],c=r[1];for(a=0;n>a;a++)s=i[a],l=i[a+n],o[a]=((l-s)*t+c*s-u*l)/(c-u);return o},t}),r("Core/MapProjection",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{ellipsoid:{get:t.throwInstantiationError}}),r.prototype.project=t.throwInstantiationError,r.prototype.unproject=t.throwInstantiationError,r}),r("Core/Matrix2",["./Cartesian2","./defaultValue","./defined","./DeveloperError","./freezeObject"],function(e,t,r,i,n){"use strict";var o=function(e,r,i,n){this[0]=t(e,0),this[1]=t(i,0),this[2]=t(r,0),this[3]=t(n,0)};o.clone=function(e,t){return r(e)?r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):new o(e[0],e[2],e[1],e[3]):void 0},o.fromArray=function(e,i,n){return i=t(i,0),r(n)||(n=new o),n[0]=e[i],n[1]=e[i+1],n[2]=e[i+2],n[3]=e[i+3],n},o.fromColumnMajorArray=function(e,t){return o.clone(e,t)},o.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3],t):new o(e[0],e[1],e[2],e[3])},o.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=e.y,t):new o(e.x,0,0,e.y)},o.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=e,t):new o(e,0,0,e)},o.fromRotation=function(e,t){var i=Math.cos(e),n=Math.sin(e);return r(t)?(t[0]=i,t[1]=n,t[2]=-n,t[3]=i,t):new o(i,-n,n,i)},o.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):[e[0],e[1],e[2],e[3]]},o.getElementIndex=function(e,t){return 2*e+t},o.getColumn=function(e,t,r){var i=2*t,n=e[i],o=e[i+1];return r.x=n,r.y=o,r},o.setColumn=function(e,t,r,i){i=o.clone(e,i);var n=2*t;return i[n]=r.x,i[n+1]=r.y,i},o.getRow=function(e,t,r){var i=e[t],n=e[t+2];return r.x=i,r.y=n,r},o.setRow=function(e,t,r,i){return i=o.clone(e,i),i[t]=r.x,i[t+2]=r.y,i};var a=new e;o.getScale=function(t,r){return r.x=e.magnitude(e.fromElements(t[0],t[1],a)),r.y=e.magnitude(e.fromElements(t[2],t[3],a)),r};var s=new e;return o.getMaximumScale=function(t){return o.getScale(t,s),e.maximumComponent(s)},o.multiply=function(e,t,r){var i=e[0]*t[0]+e[2]*t[1],n=e[0]*t[2]+e[2]*t[3],o=e[1]*t[0]+e[3]*t[1],a=e[1]*t[2]+e[3]*t[3];return r[0]=i,r[1]=o,r[2]=n,r[3]=a,r},o.add=function(e,t,r){return r[0]=e[0]+t[0],r[1]=e[1]+t[1],r[2]=e[2]+t[2],r[3]=e[3]+t[3],r},o.subtract=function(e,t,r){return r[0]=e[0]-t[0],r[1]=e[1]-t[1],r[2]=e[2]-t[2],r[3]=e[3]-t[3],r},o.multiplyByVector=function(e,t,r){var i=e[0]*t.x+e[2]*t.y,n=e[1]*t.x+e[3]*t.y;return r.x=i,r.y=n,r},o.multiplyByScalar=function(e,t,r){return r[0]=e[0]*t,r[1]=e[1]*t,r[2]=e[2]*t,r[3]=e[3]*t,r},o.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},o.transpose=function(e,t){var r=e[0],i=e[2],n=e[1],o=e[3];return t[0]=r,t[1]=i,t[2]=n,t[3]=o,t},o.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t},o.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},o.equalsEpsilon=function(e,t,i){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=i&&Math.abs(e[1]-t[1])<=i&&Math.abs(e[2]-t[2])<=i&&Math.abs(e[3]-t[3])<=i},o.IDENTITY=n(new o(1,0,0,1)),o.COLUMN0ROW0=0,o.COLUMN0ROW1=1,o.COLUMN1ROW0=2,o.COLUMN1ROW1=3,o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this[0]+", "+this[2]+")\n"+"("+this[1]+", "+this[3]+")"},o}),r("Core/NearFarScalar",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i,n){this.near=e(t,0),this.nearValue=e(r,0),this.far=e(i,1),this.farValue=e(n,0)};return r.clone=function(e,i){return t(e)?t(i)?(i.near=e.near,i.nearValue=e.nearValue,i.far=e.far,i.farValue=e.farValue,i):new r(e.near,e.nearValue,e.far,e.farValue):void 0},r.packedLength=4,r.pack=function(t,r,i){i=e(i,0),r[i++]=t.near,r[i++]=t.nearValue,r[i++]=t.far,r[i]=t.farValue},r.unpack=function(i,n,o){return n=e(n,0),t(o)||(o=new r),o.near=i[n++],o.nearValue=i[n++],o.far=i[n++],o.farValue=i[n],o},r.equals=function(e,r){return e===r||t(e)&&t(r)&&e.near===r.near&&e.nearValue===r.nearValue&&e.far===r.far&&e.farValue===r.farValue},r.prototype.clone=function(e){return r.clone(this,e)},r.prototype.equals=function(e){return r.equals(this,e)},r}),r("Core/ObjectOrientedBoundingBox",["./Cartesian3","./defaultValue","./defined","./DeveloperError","./Matrix3"],function(e,t,r,i,n){"use strict";function o(e,t,r,i,o){var a=t[e]+r[0]*i[n.getElementIndex(0,e)]+r[1]*i[n.getElementIndex(1,e)]+r[2]*i[n.getElementIndex(2,e)];return Math.abs(o[e])>a?!0:!1}function a(e,t,r,i,o){var a=o[0]*i[n.getElementIndex(0,e)]+o[1]*i[n.getElementIndex(1,e)]+o[2]*i[n.getElementIndex(2,e)],s=r[e]+t[0]*i[n.getElementIndex(0,e)]+t[1]*i[n.getElementIndex(1,e)]+t[2]*i[n.getElementIndex(2,e)];return Math.abs(a)>s?!0:!1}function s(e,t,r,i,o,a){var s=a[(e+2)%3]*o[n.getElementIndex((e+1)%3,t)]-a[(e+1)%3]*o[n.getElementIndex((e+2)%3,t)],l=r[(e+1)%3]*o[n.getElementIndex((e+2)%3,t)]+r[(e+2)%3]*o[n.getElementIndex((e+1)%3,t)];return l+=i[(t+1)%3]*o[n.getElementIndex(e,(t+2)%3)]+i[(t+2)%3]*o[n.getElementIndex(e,(t+1)%3)],Math.abs(s)>l?!0:!1}var l=function(r,i,o){this.rotation=n.clone(t(r,n.IDENTITY)),this.translation=e.clone(t(i,e.ZERO)),this.scale=e.clone(t(o,e.ZERO))},u=new e,c=new e,h=new e,d=new e,m=new e,p=new n,f={unitary:new n,diagonal:new n};l.fromPoints=function(t,i){if(r(i)||(i=new l),!r(t)||0===t.length)return i.tranformMatrix=n.IDENTITY,i.translation=e.ZERO,i.scale=e.ZERO,i;var o,a=t.length,s=e.clone(t[0],u);for(o=1;a>o;o++)e.add(s,t[o],s);var v=1/a;e.multiplyByScalar(s,v,s);var g,_=0,y=0,C=0,w=0,S=0,E=0;for(o=0;a>o;o++)g=e.subtract(t[o],s,c),_+=g.x*g.x,y+=g.x*g.y,C+=g.x*g.z,w+=g.y*g.y,S+=g.y*g.z,E+=g.z*g.z;_*=v,y*=v,C*=v,w*=v,S*=v,E*=v;var b=p;b[0]=_,b[1]=y,b[2]=C,b[3]=y,b[4]=w,b[5]=S,b[6]=C,b[7]=S,b[8]=E;var T=n.computeEigenDecomposition(b,f),x=n.transpose(T.unitary,i.rotation);g=e.subtract(t[0],s,c);var P=n.multiplyByVector(x,g,h),A=e.clone(P,d),M=e.clone(P,m);for(o=1;a>o;o++)g=e.subtract(t[o],s,g),n.multiplyByVector(x,g,P),e.minimumByComponent(M,P,M),e.maximumByComponent(A,P,A);var D=e.add(M,A,h);e.multiplyByScalar(D,.5,D),n.multiplyByVector(x,D,D),e.add(s,D,i.translation);var I=e.subtract(A,M,h);return e.multiplyByScalar(I,.5,i.scale),i},l.fromBoundingRectangle=function(e,t,i){r(i)||(i=new l),r(t)?n.fromRotationZ(t,i.rotation):n.clone(n.IDENTITY,i.rotation);var o=i.scale;o.x=.5*e.width,o.y=.5*e.height,o.z=0;var a=n.multiplyByVector(i.rotation,o,i.translation);return a.x+=e.x,a.y+=e.y,i},l.clone=function(t,i){return r(t)?r(i)?(n.clone(t.rotation,i.rotation),e.clone(t.translation,i.translation),e.clone(t.scale,i.scale),i):new l(t.rotation,t.translation,t.scale):void 0};var v=new n,g=new n,_=new e,y=new Array(3),C=new Array(3),w=new Array(3);return l.intersect=function(t,r){var i=n.transpose(t.rotation,v),l=n.multiply(i,r.rotation,g);n.abs(l,l);var u=y,c=C,h=w;return e.subtract(t.translation,r.translation,_),n.multiplyByVector(i,_,_),e.pack(_,u),e.pack(t.scale,c),e.pack(r.scale,h),o(0,c,h,l,u)?!1:o(1,c,h,l,u)?!1:o(2,c,h,l,u)?!1:a(0,c,h,l,u)?!1:a(1,c,h,l,u)?!1:a(2,c,h,l,u)?!1:s(0,0,c,h,l,u)?!1:s(1,0,c,h,l,u)?!1:s(2,0,c,h,l,u)?!1:s(0,1,c,h,l,u)?!1:s(1,1,c,h,l,u)?!1:s(2,1,c,h,l,u)?!1:s(0,2,c,h,l,u)?!1:s(1,2,c,h,l,u)?!1:s(2,2,c,h,l,u)?!1:!0},l.equals=function(t,i){return t===i||r(t)&&r(i)&&e.equals(t.transformedPosition,i.transformedPosition)&&n.equals(t.transformMatrix,i.transformMatrix)&&e.equals(t.rectangle,i.rectangle)},l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l}),r("Core/Visibility",["./freezeObject"],function(e){"use strict";var t={NONE:-1,PARTIAL:0,FULL:1};return e(t)}),r("Core/Occluder",["./BoundingSphere","./Cartesian3","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math","./Rectangle","./Visibility"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(e,r){this._occluderPosition=t.clone(e.center),this._occluderRadius=e.radius,this._horizonDistance=0,this._horizonPlaneNormal=void 0,this._horizonPlanePosition=void 0,this._cameraPosition=void 0,this.cameraPosition=r},h=new t;n(c.prototype,{position:{get:function(){return this._occluderPosition}},radius:{get:function(){return this._occluderRadius}},cameraPosition:{set:function(e){e=t.clone(e,this._cameraPosition);var r,i,n,o=t.subtract(this._occluderPosition,e,h),a=t.magnitudeSquared(o),s=this._occluderRadius*this._occluderRadius;if(a>s){r=Math.sqrt(a-s),a=1/Math.sqrt(a),i=t.multiplyByScalar(o,a,h);var l=r*r*a;n=t.add(e,t.multiplyByScalar(i,l,h),h)}else r=Number.MAX_VALUE;this._horizonDistance=r,this._horizonPlaneNormal=i,this._horizonPlanePosition=n,this._cameraPosition=e}}}),c.fromBoundingSphere=function(e,r,n){if(!i(e))throw new o("occluderBoundingSphere is required.");if(!i(r))throw new o("camera position is required.");return i(n)?(t.clone(e.center,n._occluderPosition),n._occluderRadius=e.radius,n.cameraPosition=r,n):new c(e,r)};var d=new t;c.prototype.isPointVisible=function(e){if(this._horizonDistance!==Number.MAX_VALUE){var r=t.subtract(e,this._occluderPosition,d),i=this._occluderRadius;if(i=t.magnitudeSquared(r)-i*i,i>0)return i=Math.sqrt(i)+this._horizonDistance,r=t.subtract(e,this._cameraPosition,r),i*i>t.magnitudeSquared(r)}return!1};var m=new t;c.prototype.isBoundingSphereVisible=function(e){var r=t.clone(e.center,m),i=e.radius;if(this._horizonDistance!==Number.MAX_VALUE){var n=t.subtract(r,this._occluderPosition,d),o=this._occluderRadius-i;if(o=t.magnitudeSquared(n)-o*o,i<this._occluderRadius)return o>0?(o=Math.sqrt(o)+this._horizonDistance,n=t.subtract(r,this._cameraPosition,n),o*o+i*i>t.magnitudeSquared(n)):!1;if(o>0){n=t.subtract(r,this._cameraPosition,n);var a=t.magnitudeSquared(n),s=this._occluderRadius*this._occluderRadius,l=i*i;return(this._horizonDistance*this._horizonDistance+s)*l>a*s?!0:(o=Math.sqrt(o)+this._horizonDistance,o*o+l>a)}return!0}return!1};var p=new t;c.prototype.computeVisibility=function(e){if(!i(e))throw new o("occludeeBS is required.");var r=t.clone(e.center),n=e.radius;if(n>this._occluderRadius)return u.FULL;if(this._horizonDistance!==Number.MAX_VALUE){var a=t.subtract(r,this._occluderPosition,p),s=this._occluderRadius-n,l=t.magnitudeSquared(a);if(s=l-s*s,s>0){s=Math.sqrt(s)+this._horizonDistance,a=t.subtract(r,this._cameraPosition,a);var c=t.magnitudeSquared(a);return c>s*s+n*n?u.NONE:(s=this._occluderRadius+n,s=l-s*s,s>0?(s=Math.sqrt(s)+this._horizonDistance,s*s+n*n>c?u.FULL:u.PARTIAL):(a=t.subtract(r,this._horizonPlanePosition,a),t.dot(a,this._horizonPlaneNormal)>-n?u.PARTIAL:u.FULL))}}return u.NONE};var f=new t;c.computeOccludeePoint=function(e,r,i){var n=t.clone(r),a=t.clone(e.center),s=e.radius,l=i.length;if(t.equals(a,r))throw new o("occludeePosition must be different than occluderBoundingSphere.center");var u=t.normalize(t.subtract(n,a,f),f),h=-t.dot(u,a),d=c._anyRotationVector(a,u,h),m=c._horizonToPlaneNormalDotProduct(e,u,h,d,i[0]);if(!m)return void 0;for(var p,v=1;l>v;++v){if(p=c._horizonToPlaneNormalDotProduct(e,u,h,d,i[v]),!p)return void 0;m>p&&(m=p)}if(.0017453283658983088>m)return void 0;var g=s/m;return t.add(a,t.multiplyByScalar(u,g,f),f)};var v=[];c.computeOccludeePointFromRectangle=function(i,n){n=r(n,a.WGS84);var o=l.subsample(i,n,0,v),s=e.fromPoints(o),u=t.ZERO;return t.equals(u,s.center)?void 0:c.computeOccludeePoint(new e(u,n.minimumRadius),s.center,o)};var g=new t;c._anyRotationVector=function(e,r,i){var n=t.abs(r,g),o=n.x>n.y?0:1;(0===o&&n.z>n.x||1===o&&n.z>n.y)&&(o=2);var a,s=new t;0===o?(n.x=e.x,n.y=e.y+1,n.z=e.z+1,a=t.UNIT_X):1===o?(n.x=e.x+1,n.y=e.y,n.z=e.z+1,a=t.UNIT_Y):(n.x=e.x+1,n.y=e.y+1,n.z=e.z,a=t.UNIT_Z);var l=(t.dot(r,n)+i)/-t.dot(r,a);return t.normalize(t.subtract(t.add(n,t.multiplyByScalar(a,l,s),n),e,n),n)};var _=new t;c._rotationVector=function(e,r,i,n,o){var a=t.subtract(n,e,_);if(a=t.normalize(a,a),t.dot(r,a)<.9999999847691291){var l=t.cross(r,a,a),u=t.magnitude(l);if(u>s.EPSILON13)return t.normalize(l,new t)}return o};var y=new t,C=new t,w=new t,S=new t;return c._horizonToPlaneNormalDotProduct=function(e,r,i,n,o){var a=t.clone(o,y),s=t.clone(e.center,C),l=e.radius,u=t.subtract(s,a,w),c=t.magnitudeSquared(u),h=l*l;if(h>c)return!1;var d=c-h,m=Math.sqrt(d),p=Math.sqrt(c),f=1/p,v=m*f,g=v*m;u=t.normalize(u,u);var _=t.add(a,t.multiplyByScalar(u,g,S),S),E=Math.sqrt(d-g*g),b=this._rotationVector(s,r,i,a,n),T=t.fromElements(b.x*b.x*u.x+(b.x*b.y-b.z)*u.y+(b.x*b.z+b.y)*u.z,(b.x*b.y+b.z)*u.x+b.y*b.y*u.y+(b.y*b.z-b.x)*u.z,(b.x*b.z-b.y)*u.x+(b.y*b.z+b.x)*u.y+b.z*b.z*u.z,y);T=t.normalize(T,T);var x=t.multiplyByScalar(T,E,y);b=t.normalize(t.subtract(t.add(_,x,w),s,w),w);var P=t.dot(r,b);b=t.normalize(t.subtract(t.subtract(_,x,b),s,b),b);var A=t.dot(r,b);return A>P?P:A},c}),r("Core/Oct",["./Cartesian3","./defined","./DeveloperError","./Math"],function(e,t,r,i){"use strict";var n={};return n.encode=function(e,t){if(t.x=e.x/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),t.y=e.y/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),e.z<0){var r=t.x,n=t.y;t.x=(1-Math.abs(n))*i.signNotZero(r),t.y=(1-Math.abs(r))*i.signNotZero(n)}return t.x=i.toSNorm(t.x),t.y=i.toSNorm(t.y),t},n.decode=function(t,r,n){if(n.x=i.fromSNorm(t),n.y=i.fromSNorm(r),n.z=1-(Math.abs(n.x)+Math.abs(n.y)),n.z<0){var o=n.x;n.x=(1-Math.abs(n.y))*i.signNotZero(o),n.y=(1-Math.abs(o))*i.signNotZero(n.y)}return e.normalize(n,n)},n}),r("Core/Packable",["./DeveloperError"],function(e){"use strict";var t={packedLength:void 0,pack:e.throwInstantiationError,unpack:e.throwInstantiationError};return t}),r("Core/PackableForInterpolation",["./DeveloperError"],function(e){"use strict";var t={packedInterpolationLength:void 0,convertPackedArrayForInterpolation:e.throwInstantiationError,unpackInterpolationResult:e.throwInstantiationError};return t}),r("ThirdParty/measureText",[],function(){var e=function(e,t){return document.defaultView.getComputedStyle(e,null).getPropertyValue(t)},t=function(t,r,i,n){var o=t.measureText(r),a=e(t.canvas,"font-family"),s=e(t.canvas,"font-size").replace("px",""),l=!/\S/.test(r);o.fontsize=s;var u=document.createElement("div");u.style.position="absolute",u.style.opacity=0,u.style.font=s+"px "+a,u.innerHTML=r+"<br/>"+r,document.body.appendChild(u),o.leading=1.2*s;var c=e(u,"height");if(c=c.replace("px",""),c>=2*s&&(o.leading=0|c/2),document.body.removeChild(u),l)o.ascent=0,o.descent=0,o.bounds={minx:0,maxx:o.width,miny:0,maxy:0},o.height=0;else{var h=document.createElement("canvas"),d=100;h.width=o.width+d,h.height=3*s,h.style.opacity=1,h.style.fontFamily=a,h.style.fontSize=s;var m=h.getContext("2d");m.font=s+"px "+a;var p=h.width,f=h.height,v=f/2;m.fillStyle="white",m.fillRect(-1,-1,p+2,f+2),i&&(m.strokeStyle="black",m.lineWidth=t.lineWidth,m.strokeText(r,d/2,v)),n&&(m.fillStyle="black",m.fillText(r,d/2,v));for(var g=m.getImageData(0,0,p,f).data,_=0,y=4*p,C=g.length;++_<C&&255===g[_];);var w=0|_/y;for(_=C-1;--_>0&&255===g[_];);var S=0|_/y;for(_=0;C>_&&255===g[_];)_+=y,_>=C&&(_=_-C+4);var E=0|_%y/4,b=1;for(_=C-3;_>=0&&255===g[_];)_-=y,0>_&&(_=C-3-4*b++);var T=0|_%y/4+1;o.ascent=v-w,o.descent=S-v,o.bounds={minx:E-d/2,maxx:T-d/2,miny:0,maxy:S-w},o.height=1+(S-w)}return o};return t}),r("Core/writeTextToCanvas",["../ThirdParty/measureText","./Color","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";var i=function(i,n){if(""===i)return void 0;n=r(n,r.EMPTY_OBJECT);var o=r(n.font,"10px sans-serif"),a=document.createElement("canvas");a.width=a.height=1,a.style.font=o;var s=a.getContext("2d");s.font=o,s.textBaseline=r(n.textBaseline,"bottom"),a.style.visibility="hidden",document.body.appendChild(a);var l=r(n.stroke,!1),u=r(n.fill,!0),c=2*r(n.strokeWidth,1);s.lineWidth=c;var h=e(s,i,l,u);a.dimensions=h,document.body.removeChild(a),a.style.visibility="";var d=h.height-h.ascent;a.width=h.width,a.height=h.height;var m=a.height-d;if(s.font=o,l){var p=r(n.strokeColor,t.BLACK);s.strokeStyle=p.toCssColorString(),s.lineWidth=c,s.strokeText(i,0,m)}if(u){var f=r(n.fillColor,t.WHITE);s.fillStyle=f.toCssColorString(),s.fillText(i,0,m)}return a};return i}),r("Core/PinBuilder",["./buildModuleUrl","./Color","./defined","./DeveloperError","./loadImage","./writeTextToCanvas"],function(e,t,r,i,n,o){"use strict";function a(e,t,r){e.save(),e.scale(r/24,r/24),e.fillStyle=t.toCssColorString(),e.strokeStyle=t.brighten(.6,c).toCssColorString(),e.lineWidth=.846,e.beginPath(),e.moveTo(6.72,.422),e.lineTo(17.28,.422),e.bezierCurveTo(18.553,.422,19.577,1.758,19.577,3.415),e.lineTo(19.577,10.973),e.bezierCurveTo(19.577,12.63,18.553,13.966,17.282,13.966),e.lineTo(14.386,14.008),e.lineTo(11.826,23.578),e.lineTo(9.614,14.008),e.lineTo(6.719,13.965),e.bezierCurveTo(5.446,13.983,4.422,12.629,4.422,10.972),e.lineTo(4.422,3.416),e.bezierCurveTo(4.423,1.76,5.447,.423,6.718,.423),e.closePath(),e.fill(),e.stroke(),e.restore()}function s(e,r,i){var n=i/2.5,o=n,a=n;r.width>r.height?a=n*(r.height/r.width):r.width<r.height&&(o=n*(r.width/r.height));var s=(i-o)/2,l=7/24*i-a/2;e.globalCompositeOperation="destination-out",e.drawImage(r,s-1,l,o,a),e.drawImage(r,s,l-1,o,a),e.drawImage(r,s+1,l,o,a),e.drawImage(r,s,l+1,o,a),e.globalCompositeOperation="destination-over",e.fillStyle=t.BLACK.toCssColorString(),e.fillRect(s-1,l-1,o+1,a+1),e.globalCompositeOperation="destination-out",e.drawImage(r,s,l,o,a),e.globalCompositeOperation="destination-over",e.fillStyle=t.WHITE.toCssColorString(),e.fillRect(s,l,o,a)}function l(e,t,i,l,u){h[0]=e,h[1]=t,h[2]=i,h[3]=l;var c=JSON.stringify(h),d=u[c];if(r(d))return d;var m=document.createElement("canvas");m.width=l,m.height=l;var p=m.getContext("2d");if(a(p,i,l),r(e)){var f=n(e).then(function(e){return s(p,e,l),u[c]=m,m});return u[c]=f,f}if(r(t)){var v=o(t,{font:"bold "+l+"px sans-serif"});s(p,v,l)}return u[c]=m,m}var u=function(){this._cache={}};u.prototype.fromColor=function(e,t){return l(void 0,void 0,e,t,this._cache)},u.prototype.fromUrl=function(e,t,r){return l(e,void 0,t,r,this._cache)},u.prototype.fromMakiIconId=function(t,r,i){return l(e("Assets/Textures/maki/"+encodeURIComponent(t)+".png"),void 0,r,i,this._cache)},u.prototype.fromText=function(e,t,r){return l(void 0,e,t,r,this._cache)};var c=new t,h=new Array(4);return u}),r("Core/PixelFormat",["./freezeObject"],function(e){"use strict";var t={DEPTH_COMPONENT:6402,DEPTH_STENCIL:34041,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,validate:function(e){return e===t.DEPTH_COMPONENT||e===t.DEPTH_STENCIL||e===t.ALPHA||e===t.RGB||e===t.RGBA||e===t.LUMINANCE||e===t.LUMINANCE_ALPHA},isColorFormat:function(e){return e===t.ALPHA||e===t.RGB||e===t.RGBA||e===t.LUMINANCE||e===t.LUMINANCE_ALPHA},isDepthFormat:function(e){return e===t.DEPTH_COMPONENT||e===t.DEPTH_STENCIL}};return e(t)}),r("Core/PolygonGeometryLibrary",["./Cartesian3","./defaultValue","./defined","./Ellipsoid"],function(e,t,r,i){"use strict";function n(t,r,i,n){return e.subtract(r,t,a),e.multiplyByScalar(a,i/n,a),e.add(t,a,a),[a.x,a.y,a.z]}var o={},a=new e;o.subdivideLine=function(t,r,i){var o=e.distance(t,r),a=e.angleBetween(t,r),s=a/i,l=Math.ceil(Math.log(s)/Math.log(2));1>l&&(l=0);var u=Math.pow(2,l),c=o/u,h=new Array(3*u),d=0;h[d++]=t.x,h[d++]=t.y,h[d++]=t.z;for(var m=1;u>m;m++){var p=n(t,r,m*c,o);h[d++]=p[0],h[d++]=p[1],h[d++]=p[2]}return h};var s=new e,l=new e,u=new e,c=new e;return o.scaleToGeodeticHeightExtruded=function(n,o,a,h,d){h=t(h,i.WGS84);var m=s,p=l,f=u,v=c;if(r(n)&&r(n.attributes)&&r(n.attributes.position))for(var g=n.attributes.position.values,_=g.length/2,y=0;_>y;y+=3)e.fromArray(g,y,f),h.geodeticSurfaceNormal(f,m),v=h.scaleToGeodeticSurface(f,v),p=e.multiplyByScalar(m,a,p),p=e.add(v,p,p),g[y+_]=p.x,g[y+1+_]=p.y,g[y+2+_]=p.z,d&&(v=e.clone(f,v)),p=e.multiplyByScalar(m,o,p),p=e.add(v,p,p),g[y]=p.x,g[y+1]=p.y,g[y+2]=p.z;return n},o}),r("Core/pointInsideTriangle",["./barycentricCoordinates","./Cartesian3"],function(e,t){"use strict";var r=new t,i=function(t,i,n,o){return e(t,i,n,o,r),r.x>0&&r.y>0&&r.z>0};return i}),r("Core/Queue",[],function(){"use strict";var e=function(){this._array=[],this._offset=0,this.length=0};return e.prototype.enqueue=function(e){this._array.push(e),this.length++},e.prototype.dequeue=function(){if(0===this.length)return void 0;var e=this._array,t=this._offset,r=e[t];return e[t]=void 0,t++,t>10&&2*t>e.length&&(this._array=e.slice(t),t=0),this._offset=t,this.length--,r},e.prototype.contains=function(e){return-1!==this._array.indexOf(e)},e.prototype.clear=function(){this._array.length=this._offset=this.length=0},e.prototype.sort=function(e){this._offset>0&&(this._array=this._array.slice(this._offset),this._offset=0),this._array.sort(e)},e}),r("Core/WindingOrder",["./freezeObject"],function(e){"use strict";var t={CLOCKWISE:2304,COUNTER_CLOCKWISE:2305,validate:function(e){return e===t.CLOCKWISE||e===t.COUNTER_CLOCKWISE}};return e(t)}),r("Core/PolygonPipeline",["./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./Math","./pointInsideTriangle","./PrimitiveType","./Queue","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(t,r,i){var n=e.subtract(r,t,z),o=e.subtract(i,r,V);return n.x*o.y-n.y*o.x>=0}function v(e){for(var t=e[0].x,r=0,i=0;i<e.length;i++)e[i].x>t&&(t=e[i].x,r=i);return r}function g(e){for(var t=e[0][0].x,r=0,i=0;i<e.length;i++){var n=e[i][v(e[i])].x;n>t&&(t=n,r=i)}return r}function _(e){for(var t=[],r=0;r<e.length;r++){var i=e[(r-1+e.length)%e.length],n=e[r],o=e[(r+1)%e.length];f(i,n,o)||t.push(n)}return t}function y(t,r){for(var i=0;i<t.length;i++)if(e.equals(r,t[i]))return i;return-1}function C(r,n,o){o=i(o,[]);var a=Number.MAX_VALUE,s=v(n),l=new e(n[s].x,r.y);o.push(s),o.push((s+1)%n.length);for(var u=n[0].x,c=u,h=1;h<n.length;++h)n[h].x<u?u=n[h].x:n[h].x>c&&(c=n[h].x);c+=c-u;var d=new t(c,r.y,0);for(h=0;h<n.length;h++){var m=n[h],p=n[(h+1)%n.length];if((m.x>=r.x||p.x>=r.x)&&(m.y>=r.y&&p.y<=r.y||m.y<=r.y&&p.y>=r.y)){var f=(p.y-m.y)*(d.x-r.x)-(p.x-m.x)*(d.y-r.y);if(0!==f){f=1/f;var g=((p.x-m.x)*(r.y-m.y)-(p.y-m.y)*(r.x-m.x))*f,_=((d.x-r.x)*(r.y-m.y)-(d.y-r.y)*(r.x-m.x))*f;if(g>=0&&1>=g&&_>=0&&1>=_){var y=new e(r.x+g*(d.x-r.x),r.y+g*(d.y-r.y)),C=e.subtract(y,r,k);f=e.magnitudeSquared(C),a>f&&(l=y,a=f,o[0]=h,o[1]=(h+1)%n.length)}}}}return l}function w(t,r){var i=g(r),n=r[i],o=v(n),a=n[o],s=[],l=C(a,t,s),u=y(t,l);if(-1!==u)return u;var d=e.magnitudeSquared(e.subtract(t[s[0]],a,U)),m=e.magnitudeSquared(e.subtract(t[s[1]],a,U)),p=m>d?t[s[0]]:t[s[1]],f=_(t),w=f.indexOf(p);
-1!==w&&f.splice(w,1);for(var S=[],E=0;E<f.length;E++){var b=f[E];h(b,a,l,p)&&S.push(b)}var T=Number.MAX_VALUE;if(S.length>0){var x=e.fromElements(1,0,U);for(E=0;E<S.length;E++){var P=e.subtract(S[E],a,W),A=e.magnitude(x)*e.magnitudeSquared(P);if(0!==A){var M=Math.abs(c.acosClamped(e.dot(x,P)/A));T>M&&(T=M,p=S[E])}}}return t.indexOf(p)}function S(e,r,i){for(var n=st.computeWindingOrder2D(e),o=0;o<r.length;o++){var a=r[o];t.equals(a[0],a[a.length-1])||a.push(a[0]);var l=st.computeWindingOrder2D(a);l===n&&a.reverse()}var u=s.fromPoints(e,i),c=u.projectPointsOntoPlane(e),h=[];for(o=0;o<r.length;o++)h.push(u.projectPointsOntoPlane(r[o]));var d=w(c,h),m=g(h),p=v(h[m]),f=r[m],_=[];for(o=0;o<e.length;o++)_.push(e[o]);var y,C=[];if(0!==p)for(y=0;y<=f.length;y++){var S=(y+p)%f.length;0!==S&&C.push(f[S])}else for(y=0;y<f.length;y++)C.push(f[(y+p)%f.length]);var E=_.lastIndexOf(e[d]);C.push(e[E]);var b=_.slice(0,E+1),T=_.slice(E+1);return _=b.concat(C,T),r.splice(m,1),_}function E(e){var t="0."+Math.sin(G).toString().substr(5);G+=.2;var r=Math.floor(t*e);return r===e&&r--,r}function b(t,r,i){return T(t,r,i)&&T(r,t,i)&&!L(i[t].position,i[r].position,i)&&!e.equals(i[t].position,i[r].position)}function T(t,r,i){A(t,i);var n=i[t],o=i[r],a=P(t,i,H),s=P(t,i,q),l=e.subtract(i[a].position,n.position,j),u=e.subtract(i[s].position,n.position,Y),c=e.subtract(o.position,n.position,X);return M(l,c)?x(l,c):M(u,c)?x(u,c):D(l,u)?O(l,u,c)?!0:!1:I(l,u)?R(l,u,c)?!1:!0:void 0}function x(t,r){return e.magnitude(r)<e.magnitude(t)}function P(e,t,r){var i=e+r;return 0>i&&(i=t.length-1),i===t.length&&(i=0),A(i,t),i}function A(t,r){var i=t-1,n=t+1;0>i&&(i=r.length-1),n===r.length&&(n=0);var a=e.subtract(r[i].position,r[t].position,Z),s=e.subtract(r[n].position,r[t].position,Q);if(M(a,s)){var l=new o("Superfluous vertex found.");throw l.vertexIndex=t,l}}function M(e,r){return 0===t.cross(e,r,J).z}function D(e,r){return t.cross(e,r,K).z<0}function I(e,r){return t.cross(e,r,$).z>0}function R(e,r,i){return t.cross(e,i,et).z>0&&t.cross(i,r,et).z>0}function O(e,r,i){return t.cross(e,i,tt).z<0&&t.cross(i,r,tt).z<0}function L(t,r,i){for(var n=0;n<i.length;n++){var o,a=i[n].position;if(o=n<i.length-1?i[n+1].position:i[0].position,!(e.equals(t,a)||e.equals(r,o)||e.equals(t,o)||e.equals(r,a))){var s=(r.y-t.y)/(r.x-t.x),l=(o.y-a.y)/(o.x-a.x);if(!(s===l||isNaN(s)&&isNaN(l))){var u;u=isNaN(s)?t.x:isNaN(l)?a.x:(t.y-a.y-s*t.x+l*a.x)/(l-s);var c=s*u+t.y-s*t.x,h=e.fromElements(u,c,rt);if(!(e.equals(h,t)||e.equals(h,r)||e.equals(h,a)||e.equals(h,o))){var d=B(u,t.x,r.x)&&B(c,t.y,r.y)&&B(u,a.x,o.x)&&B(c,a.y,o.y);if(d)return!0}}}}return!1}function N(t){var r=t[0].position,i=t[1].position,n=t[2].position,o=e.subtract(i,r,it),a=e.subtract(n,r,nt);return M(o,a)}function B(e,t,r){return(e>t||e>r)&&(t>e||r>e)||t===r&&t===e}function F(e){var t=e.length;if(3===t)return N(e)?[]:[e[0].index,e[1].index,e[2].index];if(e.length<3)throw new o("Invalid polygon: must have at least three vertices.");for(var r=!1,i=0;!r;){var n=10*e.length;if(i>n)return[];i++;for(var a=E(e.length),s=a+1;Math.abs(a-s)<2||Math.abs(a-s)>e.length-2;)s=E(e.length);if(a>s){var l=a;a=s,s=l}try{if(b(a,s,e)){var u=e.splice(a,s-a+1,e[a],e[s]);return F(e).concat(F(u))}}catch(c){if(c.hasOwnProperty("vertexIndex"))return e.splice(c.vertexIndex,1),F(e);throw c}}}var z=new e,V=new e,k=new e,U=new e(1,0),W=new e,G=0,H=-1,q=1,j=new t,Y=new t,X=new t,Z=new t,Q=new t,J=new t,K=new t,$=new t,et=new t,tt=new t,rt=new e,it=new t,nt=new t,ot=new t,at=new t,st={};return st.removeDuplicates=function(e){for(var r=e.length,i=[],n=r-1,o=0;r>o;n=o++){var a=e[n],s=e[o];t.equals(a,s)||i.push(s)}return i},st.computeArea2D=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++){var o=e[i],a=e[n];r+=o.x*a.y-a.x*o.y}return.5*r},st.computeWindingOrder2D=function(e){var t=st.computeArea2D(e);return t>0?p.COUNTER_CLOCKWISE:p.CLOCKWISE},st.triangulate=function(e){for(var t=e.length,r=[],i=0;t>i;++i)r[i]={position:e[i],index:i};return F(r)},st.resetSeed=function(e){G=i(e,0)},st.computeSubdivision=function(e,n,o){o=i(o,c.RADIANS_PER_DEGREE);for(var a=new m,s=n.length,h=0;s>h;h+=3)a.enqueue({i0:n[h],i1:n[h+1],i2:n[h+2]});for(var p,f=e.slice(0),v=[],g={};a.length>0;){var _,y,C=a.dequeue(),w=f[C.i0],S=f[C.i1],E=f[C.i2],b=t.angleBetween(w,S),T=t.angleBetween(S,E),x=t.angleBetween(E,w),P=Math.max(b,Math.max(T,x));P>o?b===P?(_=Math.min(C.i0,C.i1).toString()+" "+Math.max(C.i0,C.i1).toString(),p=g[_],p||(y=t.add(w,S,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i0,i1:p,i2:C.i2}),a.enqueue({i0:p,i1:C.i1,i2:C.i2})):T===P?(_=Math.min(C.i1,C.i2).toString()+" "+Math.max(C.i1,C.i2).toString(),p=g[_],p||(y=t.add(S,E,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i1,i1:p,i2:C.i0}),a.enqueue({i0:p,i1:C.i2,i2:C.i0})):x===P&&(_=Math.min(C.i2,C.i0).toString()+" "+Math.max(C.i2,C.i0).toString(),p=g[_],p||(y=t.add(E,w,new t),t.multiplyByScalar(y,.5,y),f.push(y),p=f.length-1,g[_]=p),a.enqueue({i0:C.i2,i1:p,i2:C.i1}),a.enqueue({i0:p,i1:C.i0,i2:C.i1})):(v.push(C.i0),v.push(C.i1),v.push(C.i2))}var A=f.length,M=new Array(3*A),D=0;for(p=0;A>p;p++){var I=f[p];M[D++]=I.x,M[D++]=I.y,M[D++]=I.z}return new l({attributes:{position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:M})},indices:v,primitiveType:d.TRIANGLES})},st.scaleToGeodeticHeight=function(e,r,o,s){o=i(o,a.WGS84);var l=ot,u=at;if(r=i(r,0),s=i(s,!0),n(e)&&n(e.attributes)&&n(e.attributes.position))for(var c=e.attributes.position.values,h=c.length,d=0;h>d;d+=3)t.fromArray(c,d,u),s&&(u=o.scaleToGeodeticSurface(u,u)),l=o.geodeticSurfaceNormal(u,l),t.multiplyByScalar(l,r,l),t.add(u,l,u),c[d]=u.x,c[d+1]=u.y,c[d+2]=u.z;return e},st.eliminateHoles=function(e,r,n){n=i(n,a.WGS84);for(var o=[],s=0;s<r.length;s++){for(var l=[],u=0;u<r[s].length;u++)l.push(t.clone(r[s][u]));o.push(l)}for(var c=e;o.length>0;)c=S(c,o,n);return c},st}),r("Core/PolygonGeometry",["./BoundingRectangle","./BoundingSphere","./Cartesian2","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix3","./PolygonGeometryLibrary","./PolygonPipeline","./PrimitiveType","./Quaternion","./Queue","./VertexFormat","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b){"use strict";function T(e,t,r,n){for(var o=w.fromAxisAngle(e._plane.normal,r,R),s=g.fromQuaternion(o,O),l=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,c=Number.POSITIVE_INFINITY,h=Number.NEGATIVE_INFINITY,d=t.length,m=0;d>m;++m){var p=i.clone(t[m],I);g.multiplyByVector(s,p,p);var f=e.projectPointOntoPlane(p,D);a(f)&&(l=Math.min(l,f.x),u=Math.max(u,f.x),c=Math.min(c,f.y),h=Math.max(h,f.y))}return n.x=l,n.y=c,n.width=u-l,n.height=h-c,n}function x(e,t,r,i){var o=u.fromPoints(t,e),a=o.projectPointsOntoPlane(t,L),s=y.computeWindingOrder2D(a);s===b.CLOCKWISE&&(a.reverse(),t.reverse());var l=y.triangulate(a);l.length<3&&(l=[0,1,2]);var d;if(i){for(var p=t.length,f=new Array(3*p),v=0,g=0;p>g;g++){var _=t[g];f[v++]=_.x,f[v++]=_.y,f[v++]=_.z}d=new c({attributes:{position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:f})},indices:l,primitiveType:C.TRIANGLES})}else d=y.computeSubdivision(t,l,r);return new m({geometry:d})}function P(e,t,o,a,s,l,c){if(e.st||e.normal||e.tangent||e.binormal){var d=u.fromPoints(o,a),m=T(d,o,s,N),p=W;p.x=m.x,p.y=m.y;var f=t.attributes.position.values,_=f.length,y=e.st?new Float32Array(2*(_/3)):void 0,C=e.normal?new Float32Array(_):void 0,S=e.tangent?new Float32Array(_):void 0,E=e.binormal?new Float32Array(_):void 0,b=0,x=0,P=F,A=z,M=V,D=!0,I=w.fromAxisAngle(d._plane.normal,s,q),R=g.fromQuaternion(I,j),O=_/2,L=_/3;l&&(_/=2);for(var Y=0;_>Y;Y+=3){var X=i.fromArray(f,Y,H);if(e.st){var Z=g.multiplyByVector(R,X,B),Q=d.projectPointOntoPlane(Z,G);r.subtract(Q,p,Q),l&&(y[b+L]=Q.x/m.width,y[b+1+L]=Q.y/m.height),y[b]=Q.x/m.width,y[b+1]=Q.y/m.height,b+=2}if(e.normal||e.tangent||e.binormal){var J=x+1,K=x+2;if(c){if(_>Y+3){var $=i.fromArray(f,Y+3,k);if(D){var et=i.fromArray(f,Y+_,U);i.subtract($,X,$),i.subtract(et,X,et),P=i.normalize(i.cross(et,$,P),P),D=!1}i.equalsEpsilon($,X,v.EPSILON10)&&(D=!0)}(e.tangent||e.binormal)&&(M=a.geodeticSurfaceNormal(X,M),e.tangent&&(A=i.normalize(i.cross(M,P,A),A)))}else P=a.geodeticSurfaceNormal(X,P),(e.tangent||e.binormal)&&(A=i.cross(i.UNIT_Z,P,A),A=i.normalize(g.multiplyByVector(R,A,A),A),e.binormal&&(M=i.normalize(i.cross(P,A,M),M)));e.normal&&(l&&!c?(C[x+O]=-P.x,C[J+O]=-P.y,C[K+O]=-P.z):(C[x+O]=P.x,C[J+O]=P.y,C[K+O]=P.z),C[x]=P.x,C[J]=P.y,C[K]=P.z),e.tangent&&(l&&!c?(S[x+O]=-A.x,S[J+O]=-A.y,S[K+O]=-A.z):(S[x+O]=A.x,S[J+O]=A.y,S[K+O]=A.z),S[x]=A.x,S[J]=A.y,S[K]=A.z),e.binormal&&(l&&(E[x+O]=M.x,E[J+O]=M.y,E[K+O]=M.z),E[x]=M.x,E[J]=M.y,E[K]=M.z),x+=3}}e.st&&(t.attributes.st=new h({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:y})),e.normal&&(t.attributes.normal=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:C})),e.tangent&&(t.attributes.tangent=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:S})),e.binormal&&(t.attributes.binormal=new h({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:E}))}return t}function A(e,t,r){var o,a,s,l,u,m,p,g,y,w=[],S=e.length;if(r)for(p=0;S>p;p++)g=e[p],y=e[(p+1)%S],w.push(g.x,g.y,g.z,y.x,y.y,y.z);else for(p=0;S>p;p++)g=e[p],y=e[(p+1)%S],o=_.subdivideLine(g,y,t),o.push(y.x,y.y,y.z),w=w.concat(o);w=w.concat(w),S=w.length;var E=f.createTypedArray(S/3,S-6*e.length);for(a=0,S/=6,p=0;S>p;p++)s=p,l=s+1,g=i.fromArray(w,3*s,k),y=i.fromArray(w,3*l,U),i.equalsEpsilon(g,y,v.EPSILON6)||(u=s+S,m=u+1,E[a++]=s,E[a++]=u,E[a++]=l,E[a++]=l,E[a++]=u,E[a++]=m);return new c({attributes:new d({position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:w})}),indices:E,primitiveType:C.TRIANGLES})}function M(e,t,r,i,o){var a=x(e,t,r,o).geometry,s=a.attributes.position.values,l=a.indices,p=s.concat(s),v=p.length/3,g=f.createTypedArray(v,2*l.length);g.set(l);var _,C=l.length,w=v/2;for(_=0;C>_;_+=3){var S=g[_]+w,E=g[_+1]+w,T=g[_+2]+w;g[_+C]=T,g[_+1+C]=E,g[_+2+C]=S}var P=new c({attributes:new d({position:new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:p})}),indices:g,primitiveType:a.primitiveType}),M={topAndBottom:new m({geometry:P})};M.walls=[];var D=i.outerRing,I=u.fromPoints(D,e),R=I.projectPointsOntoPlane(D,Y),O=y.computeWindingOrder2D(R);O===b.CLOCKWISE&&D.reverse();var L=A(D,r,o);M.walls.push(new m({geometry:L}));var N=i.holes;for(_=0;_<N.length;_++){var B=N[_];I=u.fromPoints(B,e),R=I.projectPointsOntoPlane(B,Y),O=y.computeWindingOrder2D(R),O===b.CLOCKWISE&&B.reverse(),L=A(B,r),M.walls.push(new m({geometry:L}))}return M}var D=new r,I=new i,R=new w,O=new g,L=[],N=new e,B=new i,F=new i,z=new i,V=new i,k=new i,U=new i,W=new r,G=new r,H=new i,q=new w,j=new g,Y=[],X=function(e){e=o(e,o.EMPTY_OBJECT);var t=o(e.vertexFormat,E.DEFAULT),r=o(e.ellipsoid,l.WGS84),i=o(e.granularity,v.RADIANS_PER_DEGREE),n=o(e.stRotation,0),s=o(e.height,0),u=o(e.perPositionHeight,!1),c=e.extrudedHeight,h=a(c)&&(!v.equalsEpsilon(s,c,v.EPSILON6)||u);if(h){var d=c;c=Math.min(d,s),s=Math.max(d,s)}var m=e.polygonHierarchy;this._vertexFormat=t,this._ellipsoid=r,this._granularity=i,this._stRotation=n,this._height=s,this._extrudedHeight=c,this._extrude=h,this._polygonHierarchy=m,this._perPositionHeight=u,this._workerName="createPolygonGeometry"};return X.fromPositions=function(e){e=o(e,o.EMPTY_OBJECT);var t={polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight};return new X(t)},X.createGeometry=function(e){var r,i,n,o=e._vertexFormat,l=e._ellipsoid,u=e._granularity,h=e._stRotation,d=e._height,m=e._extrudedHeight,v=e._extrude,g=e._polygonHierarchy,C=e._perPositionHeight,w=[],E=new S;E.enqueue(g),g=[];for(var b;0!==E.length;){var T=E.dequeue(),A=T.positions,D=T.holes;if(A=y.removeDuplicates(A),A.length<3)throw new s("At least three positions are required.");var I=D?D.length:0;if(0===I)g.push({outerRing:A,holes:[]}),w.push(A);else{var R=[];for(b=0;I>b;b++){var O=D[b];if(O.positions=y.removeDuplicates(O.positions),O.positions.length<3)throw new s("At least three positions are required.");R.push(O.positions);var L=0;a(O.holes)&&(L=O.holes.length);for(var N=0;L>N;N++)E.enqueue(O.holes[N])}g.push({outerRing:A,holes:R});var B=y.eliminateHoles(A,R);w.push(B)}}n=w[0];var F,z=[];if(v){for(b=0;b<w.length;b++)if(F=M(l,w[b],u,g[b],C),a(F)){i=F.topAndBottom,i.geometry=_.scaleToGeodeticHeightExtruded(i.geometry,d,m,l,C),i.geometry=P(o,i.geometry,n,l,h,!0,!1),z.push(i),r=F.walls;for(var V=0;V<r.length;V++){var k=r[V];k.geometry=_.scaleToGeodeticHeightExtruded(k.geometry,d,m,l,C),k.geometry=P(o,k.geometry,n,l,h,!0,!0),z.push(k)}}}else for(b=0;b<w.length;b++)F=x(l,w[b],u,C),a(F)&&(F.geometry=y.scaleToGeodeticHeight(F.geometry,d,l,!C),F.geometry=P(o,F.geometry,n,l,h,!1,!1),z.push(F));F=p.combine(z),F.attributes.position.values=new Float64Array(F.attributes.position.values),F.indices=f.createTypedArray(F.attributes.position.values.length/3,F.indices);var U=F.attributes,W=t.fromVertices(U.position.values);return o.position||delete U.position,new c({attributes:U,indices:F.indices,primitiveType:F.primitiveType,boundingSphere:W})},X}),r("Core/PolygonOutlineGeometry",["./BoundingSphere","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./EllipsoidTangentPlane","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./PolygonGeometryLibrary","./PolygonPipeline","./PrimitiveType","./Queue","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,r,i,n){var o=f.removeDuplicates(r),h=a.fromPoints(o,e),m=h.projectPointsOntoPlane(o,w),g=f.computeWindingOrder2D(m);g===_.CLOCKWISE&&(m.reverse(),o.reverse());var y,C=[],S=o.length;if(n)for(y=0;S>y;y++){var E=o[y],b=o[(y+1)%S];C.push(E.x,E.y,E.z,b.x,b.y,b.z)}else for(y=0;S>y;y++)C=C.concat(p.subdivideLine(o[y],o[(y+1)%S],i));S=C.length/3;var T=2*S,x=d.createTypedArray(C.length/3,T),P=0;for(y=0;S-1>y;y++)x[P++]=y,x[P++]=y+1;return x[P++]=S-1,x[P++]=0,new c({geometry:new s({attributes:new u({position:new l({componentDatatype:t.DOUBLE,componentsPerAttribute:3,values:new Float64Array(C)})}),indices:x,primitiveType:v.LINES})})}function C(e,r,i,n){var o=f.removeDuplicates(r),h=a.fromPoints(o,e),m=h.projectPointsOntoPlane(o,w),g=f.computeWindingOrder2D(m);g===_.CLOCKWISE&&(m.reverse(),o.reverse());var y,C=[],S=o.length,E=new Array(S);if(E[0]=0,n){var b,T;for(y=0;S-1>y;y++)b=o[y],T=o[(y+1)%S],C.push(b.x,b.y,b.z,T.x,T.y,T.z),E[y+1]=C.length/3;b=o[S-1],T=o[0],C.push(b.x,b.y,b.z,T.x,T.y,T.z)}else{for(y=0;S-1>y;y++)C=C.concat(p.subdivideLine(o[y],o[y+1],i)),E[y+1]=C.length/3;C=C.concat(p.subdivideLine(o[S-1],o[0],i))}S=C.length/3;var x=2*(2*S+E.length),P=d.createTypedArray(C.length/3,x),A=0;for(y=0;S-1>y;y++)P[A++]=y,P[A++]=y+1,P[A++]=y+S,P[A++]=y+1+S;for(P[A++]=S-1,P[A++]=0,P[A++]=S+S-1,P[A++]=S,y=0;y<E.length;y++){var M=E[y];P[A++]=M,P[A++]=M+S}return C=C.concat(C),new c({geometry:new s({attributes:new u({position:new l({componentDatatype:t.DOUBLE,componentsPerAttribute:3,values:new Float64Array(C)})}),indices:P,primitiveType:v.LINES})})}var w=[],S=function(e){e=r(e,r.EMPTY_OBJECT);var t=r(e.ellipsoid,o.WGS84),n=r(e.granularity,m.RADIANS_PER_DEGREE),a=r(e.height,0),s=r(e.perPositionHeight,!1),l=e.extrudedHeight,u=i(l)&&(!m.equalsEpsilon(a,l,m.EPSILON6)||s);if(u){var c=l;l=Math.min(c,a),a=Math.max(c,a)}var h=e.polygonHierarchy;this._ellipsoid=t,this._granularity=n,this._height=a,this._extrudedHeight=l,this._extrude=u,this._polygonHierarchy=h,this._perPositionHeight=s,this._workerName="createPolygonOutlineGeometry"};return S.fromPositions=function(e){e=r(e,r.EMPTY_OBJECT);var t={polygonHierarchy:{positions:e.positions},height:e.height,extrudedHeight:e.extrudedHeight,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight};return new S(t)},S.createGeometry=function(t){var r=t._ellipsoid,o=t._granularity,a=t._height,l=t._extrudedHeight,u=t._extrude,c=t._polygonHierarchy,d=t._perPositionHeight,m=[],v=new g;v.enqueue(c);for(var _;0!==v.length;){var w=v.dequeue(),S=w.positions;if(S.length<3)throw new n("At least three positions are required.");var E=w.holes?w.holes.length:0;for(_=0;E>_;_++){var b=w.holes[_];m.push(b.positions);var T=0;i(b.holes)&&(T=b.holes.length);for(var x=0;T>x;x++)v.enqueue(b.holes[x])}m.push(S)}var P,A=[];if(u)for(_=0;_<m.length;_++)P=C(r,m[_],o,d),i(P)&&(P.geometry=p.scaleToGeodeticHeightExtruded(P.geometry,a,l,r,d),A.push(P));else for(_=0;_<m.length;_++)P=y(r,m[_],o,d),i(P)&&(P.geometry=f.scaleToGeodeticHeight(P.geometry,a,r,!d),A.push(P));P=h.combine(A);var M=e.fromVertices(P.attributes.position.values);return new s({attributes:P.attributes,indices:P.indices,primitiveType:P.primitiveType,boundingSphere:M})},S}),r("Core/PolylineGeometry",["./BoundingSphere","./Cartesian3","./Color","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,t,i,n,o){var a,s=m.numberOfPoints(e,t,o),l=new Array(s),u=i.red,c=i.green,h=i.blue,d=i.alpha,p=n.red,f=n.green,v=n.blue,g=n.alpha;if(r.equals(i,n)){for(a=0;s>a;a++)l[a]=r.clone(i);return l}var _=(p-u)/s,y=(f-c)/s,C=(v-h)/s,w=(g-d)/s;for(a=0;s>a;a++)l[a]=new r(u+a*_,c+a*y,h+a*C,d+a*w);return l}var g=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.positions,r=e.colors,i=n(e.width,1),o=n(e.colorsPerVertex,!1);this._positions=t,this._colors=r,this._width=i,this._perVertex=o,this._vertexFormat=n(e.vertexFormat,f.DEFAULT),this._followSurface=n(e.followSurface,!0),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._ellipsoid=n(e.ellipsoid,s.WGS84),this._workerName="createPolylineGeometry"},_=new t,y=new t,C=new t,w=new t;return g.createGeometry=function(n){var a,s,d,f,g,S,E,b=n._width,T=n._vertexFormat,x=n._colors,P=n._perVertex,A=n._followSurface,M=n._granularity,D=n._ellipsoid,I=n._positions;if(A){var R=m.extractHeights(I,D),O=o(x)?[]:void 0;if(o(x)){for(a=0;a<I.length-1;a++)if(f=I[a],g=I[a+1],S=x[a],P&&a<x.length)E=x[a+1],O=O.concat(v(f,g,S,E,M));else{var L=m.numberOfPoints(f,g,M);for(s=0;L>s;s++)O.push(r.clone(S))}O.push(r.clone(x[x.length-1])),x=O}I=m.generateCartesianArc({positions:I,granularity:M,ellipsoid:D,height:R})}else I=n._positions;var N=m.wrapLongitude(I);I=N.positions;var B=N.lengths,F=0,z=B.length;for(a=0;z>a;++a)F+=4*B[a]-4;var V,k,U=new Float64Array(3*F),W=new Float64Array(3*F),G=new Float64Array(3*F),H=new Float32Array(2*F),q=T.st?new Float32Array(2*F):void 0,j=o(x)?new Uint8Array(4*F):void 0,Y=0,X=0,Z=0,Q=0,J=0,K=0,$=I.length;for(s=0;$>s;++s){0===s?(k=_,t.subtract(I[0],I[1],k),t.add(I[0],k,k)):k=I[s-1],t.clone(k,C),t.clone(I[s],y),s===$-1?(k=_,t.subtract(I[$-1],I[$-2],k),t.add(I[$-1],k,k)):k=I[s+1],t.clone(k,w),V=B[J],s===K+V&&(K+=V,++J);var et,tt,rt=0===s-K,it=s===K+B[J]-1,nt=rt?2:0,ot=it?2:4;if(o(j)){var at=s-J;et=rt||P?x[at]:x[at-1],it||(tt=x[at])}for(d=nt;ot>d;++d){t.pack(y,U,Y),t.pack(C,W,Y),t.pack(w,G,Y),Y+=3;var st=0>d-2?-1:1;if(H[X++]=2*(d%2)-1,H[X++]=st*b,T.st&&(q[Z++]=s/($-1),q[Z++]=Math.max(H[X-2],0)),o(j)){var lt=2>d?et:tt;j[Q++]=r.floatToByte(lt.red),j[Q++]=r.floatToByte(lt.green),j[Q++]=r.floatToByte(lt.blue),j[Q++]=r.floatToByte(lt.alpha)}}}var ut=new c;ut.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:U}),ut.prevPosition=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:W}),ut.nextPosition=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:G}),ut.expandAndWidth=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:H}),T.st&&(ut.st=new u({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:q})),o(j)&&(ut.color=new u({componentDatatype:i.UNSIGNED_BYTE,componentsPerAttribute:4,values:j,normalize:!0})),z=B.length;var ct=h.createTypedArray(F,6*I.length-6*z),ht=0,dt=0;for(a=0;z>a;++a)for(V=B[a]-1,s=0;V>s;++s)ct[dt++]=ht,ct[dt++]=ht+2,ct[dt++]=ht+1,ct[dt++]=ht+1,ct[dt++]=ht+2,ct[dt++]=ht+3,ht+=4;return new l({attributes:ut,indices:ct,primitiveType:p.TRIANGLES,boundingSphere:e.fromPoints(I)})},g}),r("Core/PolylineVolumeGeometry",["./BoundingRectangle","./BoundingSphere","./ComponentDatatype","./CornerType","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryPipeline","./IndexDatatype","./Math","./PolygonPipeline","./PolylineVolumeGeometryLibrary","./PrimitiveType","./VertexFormat","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,i,n,o){var a=new c;o.position&&(a.position=new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:e}));var s,m,f,g,_,y,C=i.length,w=e.length/3,S=(w-2*C)/(2*C),E=p.triangulate(i),b=6*(S-1)*C+2*E.length,T=d.createTypedArray(w,b),x=2*C,P=0;for(s=0;S-1>s;s++){for(m=0;C-1>m;m++)f=2*m+2*s*C,y=f+x,g=f+1,_=g+x,T[P++]=g,T[P++]=f,T[P++]=_,T[P++]=_,T[P++]=f,T[P++]=y;f=2*C-2+2*s*C,g=f+1,_=g+x,y=f+x,T[P++]=g,T[P++]=f,T[P++]=_,T[P++]=_,T[P++]=f,T[P++]=y}if(o.st||o.tangent||o.binormal){var A,M,D=new Float32Array(2*w),I=1/(S-1),R=1/n.height,O=n.height/2,L=0;for(s=0;S>s;s++){for(A=s*I,M=R*(i[0].y+O),D[L++]=A,D[L++]=M,m=1;C>m;m++)M=R*(i[m].y+O),D[L++]=A,D[L++]=M,D[L++]=A,D[L++]=M;M=R*(i[0].y+O),D[L++]=A,D[L++]=M}for(m=0;C>m;m++)A=0,M=R*(i[m].y+O),D[L++]=A,D[L++]=M;for(m=0;C>m;m++)A=(S-1)*I,M=R*(i[m].y+O),D[L++]=A,D[L++]=M;a.st=new u({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:new Float32Array(D)})}var N=w-2*C;for(s=0;s<E.length;s+=3){var B=E[s]+N,F=E[s+1]+N,z=E[s+2]+N;T[P++]=B,T[P++]=F,T[P++]=z,T[P++]=z+C,T[P++]=F+C,T[P++]=B+C}var V=new l({attributes:a,indices:T,boundingSphere:t.fromVertices(e),primitiveType:v.TRIANGLES});return o.normal&&(V=h.computeNormal(V)),(o.tangent||o.binormal)&&(V=h.computeBinormalAndTangent(V),o.tangent||(V.attributes.tangent=void 0),o.binormal||(V.attributes.binormal=void 0),o.st||(V.attributes.st=void 0)),V}var C=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.polylinePositions,r=e.shapePositions;this._positions=t,this._shape=r,this._ellipsoid=n(e.ellipsoid,s.WGS84),this._height=n(e.height,0),this._cornerType=n(e.cornerType,i.ROUNDED),this._vertexFormat=n(e.vertexFormat,g.DEFAULT),this._granularity=n(e.granularity,m.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry"},w=new e;return C.createGeometry=function(t){var r=t._positions,i=f.removeDuplicatesFromPositions(r,t._ellipsoid),n=t._shape;n=f.removeDuplicatesFromShape(n),p.computeWindingOrder2D(n)===_.CLOCKWISE&&n.reverse();var o=e.fromPoints(n,w),a=f.computePositions(i,n,o,t,!0);return y(a,n,o,t._vertexFormat)},C}),r("Core/PolylineVolumeOutlineGeometry",["./BoundingRectangle","./BoundingSphere","./ComponentDatatype","./CornerType","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolygonPipeline","./PolylineVolumeGeometryLibrary","./PrimitiveType","./WindingOrder"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,i){var n=new c;n.position=new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:e});var o,a,s=i.length,d=n.position.values.length/3,m=e.length/3,p=m/s,v=h.createTypedArray(d,2*s*(p+1)),g=0;o=0;var _=o*s;for(a=0;s-1>a;a++)v[g++]=a+_,v[g++]=a+_+1;for(v[g++]=s-1+_,v[g++]=_,o=p-1,_=o*s,a=0;s-1>a;a++)v[g++]=a+_,v[g++]=a+_+1;for(v[g++]=s-1+_,v[g++]=_,o=0;p-1>o;o++){var y=s*o,C=y+s;for(a=0;s>a;a++)v[g++]=a+y,v[g++]=a+C}var w=new l({attributes:n,indices:h.createTypedArray(d,v),boundingSphere:t.fromVertices(e),primitiveType:f.LINES});return w}var _=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.polylinePositions,r=e.shapePositions;this._positions=t,this._shape=r,this._ellipsoid=n(e.ellipsoid,s.WGS84),this._cornerType=n(e.cornerType,i.ROUNDED),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry"},y=new e;return _.createGeometry=function(t){var r=t._positions,i=p.removeDuplicatesFromPositions(r,t._ellipsoid),n=t._shape;n=p.removeDuplicatesFromShape(n),m.computeWindingOrder2D(n)===v.CLOCKWISE&&n.reverse();var o=e.fromPoints(n,y),a=p.computePositions(i,n,o,t,!1);return g(a,n)},_}),r("Core/QuaternionSpline",["./defaultValue","./defined","./defineProperties","./DeveloperError","./Quaternion","./Spline"],function(e,t,r,i,n,o){"use strict";function a(e,r,i){var o=e.length,a=new Array(o);a[0]=t(r)?r:e[0],a[o-1]=t(i)?i:e[o-1];for(var s=1;o-1>s;++s)a[s]=n.computeInnerQuadrangle(e[s-1],e[s],e[s+1],new n);return a}function s(e){var r=e.points,i=e.innerQuadrangles,o=e.times;if(r.length<3){var a=o[0],s=1/(o[1]-a),l=r[0],u=r[1];return function(e,r){t(r)||(r=new n);var i=(e-a)*s;return n.fastSlerp(l,u,i,r)}}return function(a,s){t(s)||(s=new n);var l=e._lastTimeIndex=e.findTimeInterval(a,e._lastTimeIndex),u=(a-o[l])/(o[l+1]-o[l]),c=r[l],h=r[l+1],d=i[l],m=i[l+1];return n.fastSquad(c,h,d,m,u,s)}}var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=t.points,i=t.times,n=t.firstInnerQuadrangle,o=t.lastInnerQuadrangle,l=a(r,n,o);this._times=i,this._points=r,this._innerQuadrangles=l,this._evaluateFunction=s(this),this._lastTimeIndex=0};return r(l.prototype,{times:{get:function(){return this._times}},points:{get:function(){return this._points}},innerQuadrangles:{get:function(){return this._innerQuadrangles}}}),l.prototype.findTimeInterval=o.prototype.findTimeInterval,l.prototype.evaluate=function(e,t){return this._evaluateFunction(e,t)},l}),r("Core/RectangleGeometryLibrary",["./Cartesian3","./Cartographic","./defined","./DeveloperError","./GeographicProjection","./Math","./Matrix2","./Rectangle"],function(e,t,r,i,n,o,a,s){"use strict";var l=Math.cos,u=Math.sin,c=Math.sqrt,h={};h.computePosition=function(e,t,i,n,o){var s=e.ellipsoid.radiiSquared,h=e.nwCorner,d=e.rectangle,m=h.latitude-e.granYCos*t+i*e.granXSin,p=l(m),f=u(m),v=s.z*f,g=h.longitude+t*e.granYSin+i*e.granXCos,_=p*l(g),y=p*u(g),C=s.x*_,w=s.y*y,S=c(C*_+w*y+v*f);n.x=C/S,n.y=w/S,n.z=v/S,r(e.vertexFormat)&&e.vertexFormat.st&&(o.x=(g-d.west)*e.lonScalar-.5,o.y=(m-d.south)*e.latScalar-.5,a.multiplyByVector(e.textureMatrix,o,o),o.x+=.5,o.y+=.5)};var d=new a,m=new e,p=new t,f=new e,v=new n;return h.computeOptions=function(t,n,l){var u,c,h,g,_,y=t._granularity,C=t._ellipsoid,w=t._surfaceHeight,S=t._rotation,E=t._extrudedHeight,b=n.east,T=n.west,x=n.north,P=n.south,A=x-P;T>b?(_=o.TWO_PI-T+b,u=Math.ceil(_/y)+1,c=Math.ceil(A/y)+1,h=_/(u-1),g=A/(c-1)):(_=b-T,u=Math.ceil(_/y)+1,c=Math.ceil(A/y)+1,h=_/(u-1),g=A/(c-1)),l=s.northwest(n,l);var M=s.center(n,p),D=g,I=h,R=0,O=0;if(r(S)){var L=Math.cos(S);D*=L,I*=L;var N=Math.sin(S);R=g*N,O=h*N,m=v.project(l,m),f=v.project(M,f),m=e.subtract(m,f,m);var B=a.fromRotation(S,d);m=a.multiplyByVector(B,m,m),m=e.add(m,f,m),l=v.unproject(m,l);var F=l.latitude,z=F+(u-1)*O,V=F-D*(c-1),k=F-D*(c-1)+(u-1)*O;x=Math.max(F,z,V,k),P=Math.min(F,z,V,k);var U=l.longitude,W=U+(u-1)*I,G=U+(c-1)*R,H=U+(c-1)*R+(u-1)*I;if(b=Math.max(U,W,G,H),T=Math.min(U,W,G,H),x<-o.PI_OVER_TWO||x>o.PI_OVER_TWO||P<-o.PI_OVER_TWO||P>o.PI_OVER_TWO)throw new i("Rotated extent is invalid.");n.north=x,n.south=P,n.east=b,n.west=T}return{granYCos:D,granYSin:R,granXCos:I,granXSin:O,ellipsoid:C,width:u,height:c,surfaceHeight:w,extrudedHeight:E,nwCorner:l,rectangle:n}},h}),r("Core/RectangleGeometry",["./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix2","./Matrix3","./PolygonPipeline","./PrimitiveType","./Quaternion","./Rectangle","./RectangleGeometryLibrary","./VertexFormat"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";function b(e,t){var r=new u({attributes:new h,primitiveType:y.TRIANGLES});return r.attributes.position=new c({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:t.positions}),e.normal&&(r.attributes.normal=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.normals})),e.tangent&&(r.attributes.tangent=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.tangents})),e.binormal&&(r.attributes.binormal=new c({componentDatatype:n.FLOAT,componentsPerAttribute:3,values:t.binormals})),r}function T(e,t,i,n){for(var o=e.length,a=t.normal?new Float32Array(o):void 0,s=t.tangent?new Float32Array(o):void 0,l=t.binormal?new Float32Array(o):void 0,u=0,c=L,h=O,d=R,m=0;o>m;m+=3){var p=r.fromArray(e,m,I),f=u+1,v=u+2;(t.normal||t.tangent||t.binormal)&&(d=i.geodeticSurfaceNormal(p,d),(t.tangent||t.binormal)&&(r.cross(r.UNIT_Z,d,h),g.multiplyByVector(n,h,h),r.normalize(h,h),t.binormal&&r.normalize(r.cross(d,h,c),c)),t.normal&&(a[u]=d.x,a[f]=d.y,a[v]=d.z),t.tangent&&(s[u]=h.x,s[f]=h.y,s[v]=h.z),t.binormal&&(l[u]=c.x,l[f]=c.y,l[v]=c.z)),u+=3}return b(t,{positions:e,normals:a,tangents:s,binormals:l})}function x(e,t,i){for(var n=e.length,o=t.normal?new Float32Array(n):void 0,a=t.tangent?new Float32Array(n):void 0,s=t.binormal?new Float32Array(n):void 0,l=0,u=0,c=0,h=!0,d=L,m=O,p=R,v=0;n>v;v+=6){var g=r.fromArray(e,v,I);if(t.normal||t.tangent||t.binormal){var _=r.fromArray(e,v+6,V);if(h){var y=r.fromArray(e,v+3,k);r.subtract(_,g,_),r.subtract(y,g,y),p=r.normalize(r.cross(y,_,p),p),h=!1}r.equalsEpsilon(_,g,f.EPSILON10)&&(h=!0),(t.tangent||t.binormal)&&(d=i.geodeticSurfaceNormal(g,d),t.tangent&&(m=r.normalize(r.cross(d,p,m),m))),t.normal&&(o[l++]=p.x,o[l++]=p.y,o[l++]=p.z,o[l++]=p.x,o[l++]=p.y,o[l++]=p.z),t.tangent&&(a[u++]=m.x,a[u++]=m.y,a[u++]=m.z,a[u++]=m.x,a[u++]=m.y,a[u++]=m.z),t.binormal&&(s[c++]=d.x,s[c++]=d.y,s[c++]=d.z,s[c++]=d.x,s[c++]=d.y,s[c++]=d.z)}}return b(t,{positions:e,normals:o,tangents:a,binormals:s})}function P(e){for(var t=e.vertexFormat,r=e.ellipsoid,i=e.size,o=e.height,a=e.width,s=t.position?new Float64Array(3*i):void 0,l=t.st?new Float32Array(2*i):void 0,u=0,h=0,d=I,m=B,f=0;o>f;++f)for(var v=0;a>v;++v)S.computePosition(e,f,v,d,m),s[u++]=d.x,s[u++]=d.y,s[u++]=d.z,t.st&&(l[h++]=m.x,l[h++]=m.y);for(var g=T(s,t,r,e.tangentRotationMatrix),_=6*(a-1)*(o-1),y=p.createTypedArray(i,_),C=0,w=0,E=0;o-1>E;++E){for(var b=0;a-1>b;++b){var x=C,P=x+a,A=P+1,M=x+1;y[w++]=x,y[w++]=P,y[w++]=M,y[w++]=M,y[w++]=P,y[w++]=A,++C}++C}return g.indices=y,t.st&&(g.attributes.st=new c({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:l})),g}function A(e,t,r,i,n){return e[t++]=i[r],e[t++]=i[r+1],e[t++]=i[r+2],e[t++]=n[r],e[t++]=n[r+1],e[t++]=n[r+2],e}function M(e,t,r,i){return e[t++]=i[r],e[t++]=i[r+1],e[t++]=i[r],e[t++]=i[r+1],e}function D(e){var t,i=e.vertexFormat,o=e.surfaceHeight,a=e.extrudedHeight,s=Math.min(a,o),l=Math.max(a,o),u=e.height,h=e.width,v=e.ellipsoid,g=P(e);if(f.equalsEpsilon(s,l,.1))return g;g=_.scaleToGeodeticHeight(g,l,v,!1);var y=new Float64Array(g.attributes.position.values),C=y.length,w=2*C,S=new Float64Array(w);S.set(y),g=_.scaleToGeodeticHeight(g,s,v);var E=g.attributes.position.values;S.set(E,C),g.attributes.position.values=S;var b,T=i.normal?new Float32Array(w):void 0,D=i.tangent?new Float32Array(w):void 0,I=i.binormal?new Float32Array(w):void 0,R=i.st?new Float32Array(2*(w/3)):void 0;if(i.normal){var O=g.attributes.normal.values;for(T.set(O),t=0;C>t;t++)O[t]=-O[t];T.set(O,C),g.attributes.normal.values=T}if(i.tangent){var L=g.attributes.tangent.values;for(D.set(L),t=0;C>t;t++)L[t]=-L[t];D.set(L,C),g.attributes.tangent.values=D}if(i.binormal){var N=g.attributes.binormal.values;I.set(N),I.set(N,C),g.attributes.binormal.values=I}i.st&&(b=g.attributes.st.values,R.set(b),R.set(b,2*(C/3)),g.attributes.st.values=R);
var B=g.indices,F=B.length,z=C/3,U=p.createTypedArray(w/3,2*F);for(U.set(B),t=0;F>t;t+=3)U[t+F]=B[t+2]+z,U[t+1+F]=B[t+1]+z,U[t+2+F]=B[t]+z;g.indices=U;var W=2*h+2*u-4,G=2*(W+4),H=new Float64Array(3*G),q=i.st?new Float32Array(2*G):void 0,j=0,Y=0,X=h*u;for(t=0;X>t;t+=h)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=X-h;X>t;t++)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=X-1;t>0;t-=h)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);for(t=h-1;t>=0;t--)H=A(H,j,3*t,y,E),j+=6,i.st&&(q=M(q,Y,2*t,b),Y+=4);var Z=x(H,i,v);i.st&&(Z.attributes.st=new c({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:q}));var Q,J,K,$,et=p.createTypedArray(G,6*W);C=H.length/3;var tt=0;for(t=0;C-1>t;t+=2){Q=t,$=Q+2;var rt=r.fromArray(H,3*Q,V),it=r.fromArray(H,3*$,k);r.equalsEpsilon(rt,it,f.EPSILON10)||(J=Q+1,K=J+2,et[tt++]=Q,et[tt++]=J,et[tt++]=$,et[tt++]=$,et[tt++]=J,et[tt++]=K)}return Z.indices=et,Z=m.combine([new d({geometry:g}),new d({geometry:Z})])}var I=new r,R=new r,O=new r,L=new r,N=new w,B=new t,F=new e,z=new e,V=new r,k=new r,U=function(e){e=o(e,o.EMPTY_OBJECT);var t=e.rectangle,r=o(e.granularity,f.RADIANS_PER_DEGREE),i=o(e.ellipsoid,l.WGS84),n=o(e.height,0),a=e.rotation,s=e.stRotation,u=o(e.vertexFormat,E.DEFAULT);this._rectangle=t,this._granularity=r,this._ellipsoid=i,this._surfaceHeight=n,this._rotation=a,this._stRotation=s,this._vertexFormat=u,this._extrudedHeight=e.extrudedHeight,this._closeTop=e.closeTop,this._closeBottom=e.closeBottom,this._workerName="createRectangleGeometry"},W=new v,G=new g,H=new i,q=new C,j=new i;return U.createGeometry=function(t){var i=w.clone(t._rectangle,N),n=t._ellipsoid,o=t._surfaceHeight,s=t._extrudedHeight,l=t._stRotation,c=t._vertexFormat,d=S.computeOptions(t,i,H),m=W,p=G;if(a(l)){v.fromRotation(-l,m);var f=w.center(i,j),y=n.cartographicToCartesian(f,V);r.normalize(y,y),C.fromAxisAngle(y,-l,q),g.fromQuaternion(q,p)}else v.clone(v.IDENTITY,m),g.clone(g.IDENTITY,p);d.lonScalar=1/(i.east-i.west),d.latScalar=1/(i.north-i.south),d.vertexFormat=c,d.textureMatrix=m,d.tangentRotationMatrix=p,d.size=d.width*d.height;var E,b;if(i=t._rectangle,a(s)){E=D(d);var T=e.fromRectangle3D(i,n,o,z),x=e.fromRectangle3D(i,n,s,F);b=e.union(T,x)}else E=P(d),E=_.scaleToGeodeticHeight(E,o,n,!1),b=e.fromRectangle3D(i,n,o);return c.position||delete E.attributes.position,new u({attributes:new h(E.attributes),indices:E.indices,primitiveType:E.primitiveType,boundingSphere:b})},U}),r("Core/RectangleOutlineGeometry",["./BoundingSphere","./Cartesian3","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolygonPipeline","./PrimitiveType","./Rectangle","./RectangleGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e){var t,r=e.size,n=e.height,o=e.width,a=new Float64Array(3*r),s=0,d=0,m=w;for(t=0;o>t;t++)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(t=o-1,d=1;n>d;d++)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(d=n-1,t=o-2;t>=0;t--)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(t=0,d=n-2;d>0;d--)v.computePosition(e,d,t,m),a[s++]=m.x,a[s++]=m.y,a[s++]=m.z;for(var f=2*(a.length/3),g=h.createTypedArray(a.length/3,f),_=0,y=0;y<a.length/3-1;y++)g[_++]=y,g[_++]=y+1;g[_++]=a.length/3-1,g[_++]=0;var C=new l({attributes:new c,primitiveType:p.LINES});return C.attributes.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:a}),C.indices=g,C}function _(e){var t=e.surfaceHeight,r=e.extrudedHeight,i=e.ellipsoid,n=Math.min(r,t),o=Math.max(r,t),a=g(e);if(d.equalsEpsilon(n,o,.1))return a;var s=e.height,l=e.width;a=m.scaleToGeodeticHeight(a,o,i,!1);var u=a.attributes.position.values,c=u.length,p=new Float64Array(2*c);p.set(u),a=m.scaleToGeodeticHeight(a,n,i);var f=a.attributes.position.values;p.set(f,c),a.attributes.position.values=p;var v=2*(p.length/3)+8,_=h.createTypedArray(p.length/3,v);c=p.length/6;for(var y=0,C=0;c-1>C;C++)_[y++]=C,_[y++]=C+1,_[y++]=C+c,_[y++]=C+c+1;return _[y++]=c-1,_[y++]=0,_[y++]=c+c-1,_[y++]=c,_[y++]=0,_[y++]=c,_[y++]=l-1,_[y++]=c+l-1,_[y++]=l+s-2,_[y++]=l+s-2+c,_[y++]=2*l+s-3,_[y++]=2*l+s-3+c,a.indices=_,a}var y=new e,C=new e,w=new t,S=new f,E=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.rectangle,r=n(e.granularity,d.RADIANS_PER_DEGREE),i=n(e.ellipsoid,s.WGS84),o=n(e.height,0),a=e.rotation;this._rectangle=t,this._granularity=r,this._ellipsoid=i,this._surfaceHeight=o,this._rotation=a,this._extrudedHeight=e.extrudedHeight,this._workerName="createRectangleOutlineGeometry"},b=new r;return E.createGeometry=function(t){var r=f.clone(t._rectangle,S),i=t._ellipsoid,n=t._surfaceHeight,a=t._extrudedHeight,s=v.computeOptions(t,r,b);s.size=2*s.width+2*s.height-4;var u,c;if(r=t._rectangle,o(a)){u=_(s);var h=e.fromRectangle3D(r,i,n,C),d=e.fromRectangle3D(r,i,a,y);c=e.union(h,d)}else u=g(s),u=m.scaleToGeodeticHeight(u,n,i,!1),c=e.fromRectangle3D(r,i,n);return new l({attributes:u.attributes,indices:u.indices,primitiveType:p.LINES,boundingSphere:c})},E}),r("Core/ReferenceFrame",["./freezeObject"],function(e){"use strict";var t={FIXED:0,INERTIAL:1};return e(t)}),r("Core/ScreenSpaceEventType",["./freezeObject"],function(e){"use strict";var t={LEFT_DOWN:0,LEFT_UP:1,LEFT_CLICK:2,LEFT_DOUBLE_CLICK:3,RIGHT_DOWN:5,RIGHT_UP:6,RIGHT_CLICK:7,RIGHT_DOUBLE_CLICK:8,MIDDLE_DOWN:10,MIDDLE_UP:11,MIDDLE_CLICK:12,MIDDLE_DOUBLE_CLICK:13,MOUSE_MOVE:15,WHEEL:16,PINCH_START:17,PINCH_END:18,PINCH_MOVE:19};return e(t)}),r("Core/ScreenSpaceEventHandler",["./Cartesian2","./defaultValue","./defined","./destroyObject","./DeveloperError","./KeyboardEventModifier","./ScreenSpaceEventType"],function(e,t,r,i,n,o,a){"use strict";function s(e,t,r){if(e._element===document)return r.x=t.clientX,r.y=t.clientY,r;var i=e._element.getBoundingClientRect();return r.x=t.clientX-i.left,r.y=t.clientY-i.top,r}function l(e,t){var i=e;return r(t)&&(i+="+"+t),i}function u(e){return e.shiftKey?o.SHIFT:e.ctrlKey?o.CTRL:e.altKey?o.ALT:void 0}function c(e,t){var i=s(e,t,C.position);if(e._lastMousePosition.x=i.x,e._lastMousePosition.y=i.y,e._totalPixels=0,!e._seenAnyTouchEvents){var n,o=u(t);0===t.button?(e._leftMouseButtonDown=!0,n=e.getInputAction(a.LEFT_DOWN,o)):1===t.button?(e._middleMouseButtonDown=!0,n=e.getInputAction(a.MIDDLE_DOWN,o)):2===t.button&&(e._rightMouseButtonDown=!0,n=e.getInputAction(a.RIGHT_DOWN,o)),r(n)&&n(C),t.preventDefault()}}function h(e,t){var i,n,o=u(t);if(!e._seenAnyTouchEvents){0===t.button?(e._leftMouseButtonDown=!1,i=e.getInputAction(a.LEFT_UP,o),n=e.getInputAction(a.LEFT_CLICK,o)):1===t.button?(e._middleMouseButtonDown=!1,i=e.getInputAction(a.MIDDLE_UP,o),n=e.getInputAction(a.MIDDLE_CLICK,o)):2===t.button&&(e._rightMouseButtonDown=!1,i=e.getInputAction(a.RIGHT_UP,o),n=e.getInputAction(a.RIGHT_CLICK,o));var l=s(e,t,w.position),c=e._lastMousePosition.x-l.x,h=e._lastMousePosition.y-l.y;e._totalPixels+=Math.sqrt(c*c+h*h),r(i)&&i(w),r(n)&&e._totalPixels<e._clickPixelTolerance&&n(w)}}function d(t,i){var n=s(t,i,S.endPosition);if(!t._seenAnyTouchEvents){var o=t._lastMousePosition.x-n.x,l=t._lastMousePosition.y-n.y;t._totalPixels+=Math.sqrt(o*o+l*l),e.clone(t._lastMousePosition,S.startPosition);var c=u(i),h=t.getInputAction(a.MOUSE_MOVE,c);r(h)&&h(S),e.clone(S.endPosition,t._lastMousePosition),(t._leftMouseButtonDown||t._middleMouseButtonDown||t._rightMouseButtonDown)&&i.preventDefault()}}function m(t,i){var n=i.touches.length;t._seenAnyTouchEvents=!0;var o,l=u(i),c=s(t,i.touches[0],E.position);if(1===n?(e.clone(c,t._lastMousePosition),t._totalPixels=0,t._leftMouseButtonDown=!0,o=t.getInputAction(a.LEFT_DOWN,l),r(o)&&o(E),i.preventDefault()):t._leftMouseButtonDown&&(t._leftMouseButtonDown=!1,o=t.getInputAction(a.LEFT_UP,l),r(o)&&o(E)),2===n){t._isPinching=!0;var h=s(t,i.touches[1],b.position2);t._touchID1=i.touches[0].identifier,t._touchID2=i.touches[1].identifier,e.clone(c,t._lastMousePosition),e.clone(c,b.position1),e.clone(h,t._lastTouch2),o=t.getInputAction(a.PINCH_START,l),r(o)&&o(b)}else t._isPinching&&(t._isPinching=!1,o=t.getInputAction(a.PINCH_END,l),r(o)&&o())}function p(e,t){var i,n,o=t.touches.length,l=t.changedTouches.length,c=u(t);if(e._leftMouseButtonDown&&(e._leftMouseButtonDown=!1,i=e.getInputAction(a.LEFT_UP,c),n=e.getInputAction(a.LEFT_CLICK,c),l>0)){var h=s(e,t.changedTouches[0],T.position),d=e._lastMousePosition.x-h.x,p=e._lastMousePosition.y-h.y;e._totalPixels+=Math.sqrt(d*d+p*p),r(i)&&i(T),r(n)&&e._totalPixels<e._clickPixelTolerance&&n(T)}e._isPinching&&(e._isPinching=!1,i=e.getInputAction(a.PINCH_END,c),i&&i()),(1===o||2===o)&&m(e,t)}function f(t,i){var n,o,l,c=u(i);if(t._leftMouseButtonDown&&1===i.touches.length){n=s(t,i.touches[0],x.endPosition);var h=t._lastMousePosition.x-n.x,d=t._lastMousePosition.y-n.y;t._totalPixels+=Math.sqrt(h*h+d*d),e.clone(t._lastMousePosition,x.startPosition),l=t.getInputAction(a.MOUSE_MOVE,c),r(l)&&l(x),e.clone(x.endPosition,t._lastMousePosition),(t._leftMouseButtonDown||t._middleMouseButtonDown||t._rightMouseButtonDown)&&i.preventDefault()}if(t._isPinching&&2===i.touches.length){if(i.touches[0].identifier===t._touchID2?(n=s(t,i.touches[1],x.startPosition),o=s(t,i.touches[0],x.endPosition)):(n=s(t,i.touches[0],x.startPosition),o=s(t,i.touches[1],x.endPosition)),l=t.getInputAction(a.PINCH_MOVE,c),r(l)){var m=o.x-n.x,p=o.y-n.y,f=.25*Math.sqrt(m*m+p*p),v=t._lastTouch2.x-t._lastMousePosition.x,g=t._lastTouch2.y-t._lastMousePosition.y,_=.25*Math.sqrt(v*v+g*g),y=.125*(o.y+n.y),C=.125*(t._lastTouch2.y+t._lastMousePosition.y),w=Math.atan2(p,m),S=Math.atan2(g,v);e.fromElements(0,_,P.distance.startPosition),e.fromElements(0,f,P.distance.endPosition),e.fromElements(S,C,P.angleAndHeight.startPosition),e.fromElements(w,y,P.angleAndHeight.endPosition),l(P)}e.clone(n,t._lastMousePosition),e.clone(o,t._lastTouch2)}}function v(e,t){var i=t.detail?-120*t.detail:t.wheelDelta,n=u(t),o=a.WHEEL,s=e.getInputAction(o,n);r(s)&&(t.preventDefault(),s(i))}function g(e,t){var i,n=u(t);s(e,t,A.position),0===t.button?i=e.getInputAction(a.LEFT_DOUBLE_CLICK,n):1===t.button?i=e.getInputAction(a.MIDDLE_DOUBLE_CLICK,n):2===t.button&&(i=e.getInputAction(a.RIGHT_DOUBLE_CLICK,n)),r(i)&&i(A)}function _(e){var t=e,i=!0;e._callbacks=[],r(e._element.disableRootEvents)&&(i=!1),e._callbacks.push({name:"mousedown",onDoc:!1,action:function(e){c(t,e)}}),e._callbacks.push({name:"mouseup",onDoc:i,action:function(e){h(t,e)}}),e._callbacks.push({name:"mousemove",onDoc:i,action:function(e){d(t,e)}}),e._callbacks.push({name:"dblclick",onDoc:!1,action:function(e){g(t,e)}}),e._callbacks.push({name:"touchstart",onDoc:!1,action:function(e){m(t,e)}}),e._callbacks.push({name:"touchend",onDoc:i,action:function(e){p(t,e)}}),e._callbacks.push({name:"touchmove",onDoc:i,action:function(e){f(t,e)}}),e._callbacks.push({name:"mousewheel",onDoc:!1,action:function(e){v(t,e)}}),e._callbacks.push({name:"DOMMouseScroll",onDoc:!1,action:function(e){v(t,e)}});for(var n=0;n<e._callbacks.length;n++){var o=e._callbacks[n];o.onDoc?document.addEventListener(o.name,o.action,!1):e._element.addEventListener(o.name,o.action,!1)}}var y=function(r){this._mouseEvents={},this._leftMouseButtonDown=!1,this._middleMouseButtonDown=!1,this._rightMouseButtonDown=!1,this._isPinching=!1,this._seenAnyTouchEvents=!1,this._lastMousePosition=new e,this._lastTouch2=new e,this._totalPixels=0,this._touchID1=0,this._touchID2=0,this._clickPixelTolerance=5,this._element=t(r,document),_(this)};y.prototype.setInputAction=function(e,t,r){var i=l(t,r);this._mouseEvents[i]=e},y.prototype.getInputAction=function(e,t){var r=l(e,t);return this._mouseEvents[r]},y.prototype.removeInputAction=function(e,t){var r=l(e,t);delete this._mouseEvents[r]};var C={position:new e},w={position:new e},S={startPosition:new e,endPosition:new e},E={position:new e},b={position1:new e,position2:new e},T={position:new e},x={startPosition:new e,endPosition:new e},P={distance:{startPosition:new e,endPosition:new e},angleAndHeight:{startPosition:new e,endPosition:new e}},A={position:new e};return y.prototype._unregister=function(){for(var e=0;e<this._callbacks.length;e++){var t=this._callbacks[e];t.onDoc?document.removeEventListener(t.name,t.action,!1):this._element.removeEventListener(t.name,t.action,!1)}},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){return this._unregister(),i(this)},y}),r("Core/ShowGeometryInstanceAttribute",["./ComponentDatatype","./defaultValue","./defined","./defineProperties","./DeveloperError"],function(e,t,r,i){"use strict";var n=function(e){e=t(e,!0),this.value=n.toValue(e)};return i(n.prototype,{componentDatatype:{get:function(){return e.UNSIGNED_BYTE}},componentsPerAttribute:{get:function(){return 1}},normalize:{get:function(){return!0}}}),n.toValue=function(e,t){return r(t)?(t[0]=e,t):new Uint8Array([e])},n}),r("Core/Simon1994PlanetaryPositions",["./Cartesian3","./defined","./DeveloperError","./JulianDate","./Math","./Matrix3","./TimeConstants","./TimeStandard"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){var t=6.239996+.0172019696544*e;return.001657*Math.sin(t+.01671*Math.sin(t))}function u(e,t){t=i.addSeconds(e,C,t);var r=i.totalDays(t)-w;return t=i.addSeconds(t,l(r),t)}function c(i,a,s,l,u,c,m,p){if(0>s&&(s=-s,u+=n.PI),0>s||s>n.PI)throw new r("The inclination is out of range. Inclination must be greater than or equal to zero and less than or equal to Pi radians.");var v=i*(1-a),g=l-u,_=u,y=d(c-l,a),C=h(a,0);if("Hyperbolic"===C&&Math.abs(n.NegativePiToPi(y))>=Math.acos(-1/a))throw new r("The true anomaly of the hyperbolic orbit lies outside of the bounds of the hyperbola.");f(g,s,_,M);var w=v*(1+a),S=Math.cos(y),E=Math.sin(y),b=1+a*S;if(b<=n.Epsilon10)throw new r("elements cannot be converted to cartesian");var T=w/b;return t(p)?(p.x=T*S,p.y=T*E,p.z=0):p=new e(T*S,T*E,0),o.multiplyByVector(M,p,p)}function h(e,t){if(0>e)throw new r("eccentricity cannot be negative.");return t>=e?"Circular":1-t>e?"Elliptical":1+t>=e?"Parabolic":"Hyperbolic"}function d(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=m(e,t);return p(i,t)}function m(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=Math.floor(e/n.TWO_PI);e-=i*n.TWO_PI;var o,a=e+t*Math.sin(e)/(1-Math.sin(e+t)+Math.sin(e)),s=Number.MAX_VALUE;for(o=0;D>o&&Math.abs(s-a)>I;++o){s=a;var l=s-t*Math.sin(s)-e,u=1-t*Math.cos(s);a=s-l/u}if(o>=D)throw new r("Kepler equation did not converge");return s=a+i*n.TWO_PI}function p(e,t){if(0>t||t>=1)throw new r("eccentricity out of range.");var i=Math.floor(e/n.TWO_PI);e-=i*n.TWO_PI;var o=Math.cos(e)-t,a=Math.sin(e)*Math.sqrt(1-t*t),s=Math.atan2(a,o);return s=n.zeroToTwoPi(s),0>e&&(s-=n.TWO_PI),s+=i*n.TWO_PI}function f(e,i,a,s){if(0>i||i>n.PI)throw new r("inclination out of range");var l=Math.cos(e),u=Math.sin(e),c=Math.cos(i),h=Math.sin(i),d=Math.cos(a),m=Math.sin(a);return t(s)?(s[0]=d*l-m*u*c,s[1]=m*l+d*u*c,s[2]=u*h,s[3]=-d*u-m*l*c,s[4]=-m*u+d*l*c,s[5]=l*h,s[6]=m*h,s[7]=-d*h,s[8]=c):s=new o(d*l-m*u*c,-d*u-m*l*c,m*h,m*l+d*u*c,-m*u+d*l*c,-d*h,u*h,l*h,c),s}function v(e,t){u(e,Mt);var r=Mt.dayNumber-S.dayNumber+(Mt.secondsOfDay-S.secondsOfDay)/a.SECONDS_PER_DAY,i=r/(10*a.DAYS_PER_JULIAN_CENTURY),n=.3595362*i,o=R+G*Math.cos(N*n)+J*Math.sin(N*n)+H*Math.cos(B*n)+K*Math.sin(B*n)+q*Math.cos(F*n)+$*Math.sin(F*n)+j*Math.cos(z*n)+et*Math.sin(z*n)+Y*Math.cos(V*n)+tt*Math.sin(V*n)+X*Math.cos(k*n)+rt*Math.sin(k*n)+Z*Math.cos(U*n)+it*Math.sin(U*n)+Q*Math.cos(W*n)+nt*Math.sin(W*n),s=O+L*i+mt*Math.cos(ot*n)+wt*Math.sin(ot*n)+pt*Math.cos(at*n)+St*Math.sin(at*n)+ft*Math.cos(st*n)+Et*Math.sin(st*n)+vt*Math.cos(lt*n)+bt*Math.sin(lt*n)+gt*Math.cos(ut*n)+Tt*Math.sin(ut*n)+_t*Math.cos(ct*n)+xt*Math.sin(ct*n)+yt*Math.cos(ht*n)+Pt*Math.sin(ht*n)+Ct*Math.cos(dt*n)+At*Math.sin(dt*n),l=.0167086342-.0004203654*i,h=102.93734808*x+11612.3529*P*i,d=469.97289*P*i,m=174.87317577*x-8679.27034*P*i;return c(o,l,d,h,m,s,b,t)}function g(e,t){u(e,Mt);var r=Mt.dayNumber-S.dayNumber+(Mt.secondsOfDay-S.secondsOfDay)/a.SECONDS_PER_DAY,i=r/a.DAYS_PER_JULIAN_CENTURY,n=i*i,o=n*i,s=o*i,l=383397.7725+.004*i,h=.055545526-1.6e-8*i,d=5.15668983*x,m=-8e-5*i+.02966*n-42e-6*o-1.3e-7*s,p=83.35324312*x,f=14643420.2669*i-38.2702*n-.045047*o+21301e-8*s,v=125.04455501*x,g=-6967919.3631*i+6.3602*n+.007625*o-3586e-8*s,_=218.31664563*x,y=1732559343.4847*i-6.391*n+.006588*o-3169e-8*s,C=297.85019547*x+P*(1602961601.209*i-6.3706*n+.006593*o-3169e-8*s),w=93.27209062*x+P*(1739527262.8478*i-12.7512*n-.001037*o+417e-8*s),b=134.96340251*x+P*(1717915923.2178*i+31.8792*n+.051635*o-2447e-7*s),A=357.52910918*x+P*(129596581.0481*i-.5532*n+136e-6*o-1149e-8*s),M=310.17137918*x-P*(6967051.436*i+6.2068*n+.007618*o-3219e-8*s),D=2*C,I=4*C,R=6*C,O=2*b,L=3*b,N=4*b,B=2*w;l+=3400.4*Math.cos(D)-635.6*Math.cos(D-b)-235.6*Math.cos(b)+218.1*Math.cos(D-A)+181*Math.cos(D+b),h+=.014216*Math.cos(D-b)+.008551*Math.cos(D-O)-.001383*Math.cos(b)+.001356*Math.cos(D+b)-.001147*Math.cos(I-L)-914e-6*Math.cos(I-O)+869e-6*Math.cos(D-A-b)-627e-6*Math.cos(D)-394e-6*Math.cos(I-N)+282e-6*Math.cos(D-A-O)-279e-6*Math.cos(C-b)-236e-6*Math.cos(O)+231e-6*Math.cos(I)+229e-6*Math.cos(R-N)-201e-6*Math.cos(O-B),m+=486.26*Math.cos(D-B)-40.13*Math.cos(D)+37.51*Math.cos(B)+25.73*Math.cos(O-B)+19.97*Math.cos(D-A-B),f+=-55609*Math.sin(D-b)-34711*Math.sin(D-O)-9792*Math.sin(b)+9385*Math.sin(I-L)+7505*Math.sin(I-O)+5318*Math.sin(D+b)+3484*Math.sin(I-N)-3417*Math.sin(D-A-b)-2530*Math.sin(R-N)-2376*Math.sin(D)-2075*Math.sin(D-L)-1883*Math.sin(O)-1736*Math.sin(R-5*b)+1626*Math.sin(A)-1370*Math.sin(R-L),g+=-5392*Math.sin(D-B)-540*Math.sin(A)-441*Math.sin(D)+423*Math.sin(B)-288*Math.sin(O-B),y+=-3332.9*Math.sin(D)+1197.4*Math.sin(D-b)-662.5*Math.sin(A)+396.3*Math.sin(b)-218*Math.sin(D-A);var F=2*M,z=3*M;m+=46.997*Math.cos(M)*i-.614*Math.cos(D-B+M)*i+.614*Math.cos(D-B-M)*i-.0297*Math.cos(F)*n-.0335*Math.cos(M)*n+.0012*Math.cos(D-B+F)*n-16e-5*Math.cos(M)*o+4e-5*Math.cos(z)*o+4e-5*Math.cos(F)*o;var V=2.116*Math.sin(M)*i-.111*Math.sin(D-B-M)*i-.0015*Math.sin(M)*n;f+=V,y+=V,g+=-520.77*Math.sin(M)*i+13.66*Math.sin(D-B+M)*i+1.12*Math.sin(D-M)*i-1.06*Math.sin(B-M)*i+.66*Math.sin(F)*n+.371*Math.sin(M)*n-.035*Math.sin(D-B+F)*n-.015*Math.sin(D-B+M)*n+.0014*Math.sin(M)*o-.0011*Math.sin(z)*o-9e-4*Math.sin(F)*o,l*=T;var k=d+m*P,U=p+f*P,W=_+y*P,G=v+g*P;return c(l,h,k,U,G,W,E,t)}function _(t,r){return r=g(t,r),e.multiplyByScalar(r,It,r)}var y={},C=32.184,w=2451545,S=new i(2451545,0,s.TAI),E=398600435e6,b=328900.56*1.012300034*E,T=1e3,x=n.RADIANS_PER_DEGREE,P=n.RADIANS_PER_ARCSECOND,A=14959787e4,M=new o,D=50,I=n.EPSILON8,R=1.0000010178*A,O=100.46645683*x,L=1295977422.83429*P,N=16002,B=21863,F=32004,z=10931,V=14529,k=16368,U=15318,W=32794,G=64e-7*A,H=-152*1e-7*A,q=62e-7*A,j=-8e-7*A,Y=32e-7*A,X=-41*1e-7*A,Z=19e-7*A,Q=-11*1e-7*A,J=-150*1e-7*A,K=-46*1e-7*A,$=68*1e-7*A,et=54e-7*A,tt=14e-7*A,rt=24e-7*A,it=-28*1e-7*A,nt=22e-7*A,ot=10,at=16002,st=21863,lt=10931,ut=1473,ct=32004,ht=4387,dt=73,mt=-325*1e-7,pt=-322*1e-7,ft=-79*1e-7,vt=232*1e-7,gt=-52*1e-7,_t=97e-7,yt=55e-7,Ct=-41*1e-7,wt=-105*1e-7,St=-137*1e-7,Et=258e-7,bt=35e-7,Tt=-116*1e-7,xt=-88*1e-7,Pt=-112*1e-7,At=-80*1e-7,Mt=new i(0,0,s.TAI),Dt=.012300034,It=-1*(Dt/(Dt+1)),Rt=new o(1.0000000000000002,5.619723173785822e-16,4.690511510146299e-19,-5.154129427414611e-16,.9174820620691819,-.39777715593191376,-2.23970096136568e-16,.39777715593191376,.9174820620691819),Ot=new e;return y.computeSunPositionInEarthInertialFrame=function(r,n){return t(r)||(r=i.now()),t(n)||(n=new e),Ot=v(r,Ot),n=e.negate(Ot,n),_(r,Ot),e.subtract(n,Ot,n),o.multiplyByVector(Rt,n,n),n},y.computeMoonPositionInEarthInertialFrame=function(e,r){return t(e)||(e=i.now()),r=g(e,r),o.multiplyByVector(Rt,r,r),r},y}),r("Core/SimplePolylineGeometry",["./BoundingSphere","./Cartesian3","./Color","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,i,n,o,a,s){var l,u=m.numberOfPoints(e,t,o),c=i.red,h=i.green,d=i.blue,p=i.alpha,f=n.red,v=n.green,g=n.blue,_=n.alpha;if(r.equals(i,n)){for(l=0;u>l;l++)a[s++]=r.floatToByte(c),a[s++]=r.floatToByte(h),a[s++]=r.floatToByte(d),a[s++]=r.floatToByte(p);return s}var y=(f-c)/u,C=(v-h)/u,w=(g-d)/u,S=(_-p)/u,E=s;for(l=0;u>l;l++)a[E++]=r.floatToByte(c+l*y),a[E++]=r.floatToByte(h+l*C),a[E++]=r.floatToByte(d+l*w),a[E++]=r.floatToByte(p+l*S);return E}var v=function(e){e=n(e,n.EMPTY_OBJECT);var t=e.positions,r=e.colors,i=n(e.colorsPerVertex,!1);this._positions=t,this._colors=r,this._perVertex=i,this._followSurface=n(e.followSurface,!0),this._granularity=n(e.granularity,d.RADIANS_PER_DEGREE),this._ellipsoid=n(e.ellipsoid,s.WGS84),this._workerName="createSimplePolylineGeometry"},g=new Array(2),_=new Array(2);return v.createGeometry=function(n){var a,s,d,v,y,C,w,S,E,b,T=n._positions,x=n._colors,P=n._perVertex,A=n._followSurface,M=n._granularity,D=n._ellipsoid,I=o(x)&&!P,R=T.length,O=0,L=0,N=0,B=0;if(A){var F=m.extractHeights(T,D);if(I){for(a=0;R-1>a;a++)y=T[a],C=T[a+1],L+=m.numberOfPoints(y,C,M),L++;for(s=new Float64Array(3*L),v=new Uint8Array(4*L),E=0,a=0;R-1>a;a++){g[0]=T[a],g[1]=T[a+1],_[0]=F[a],_[1]=F[a+1];var z=m.generateArc({positions:g,granularity:M,ellipsoid:D,height:_});if(o(x)){var V=z.length/3;for(b=x[a],N=0;V>N;N++)v[E++]=r.floatToByte(b.red),v[E++]=r.floatToByte(b.green),v[E++]=r.floatToByte(b.blue),v[E++]=r.floatToByte(b.alpha)}s.set(z,O),O+=z.length}}else if(s=new Float64Array(m.generateArc({positions:T,granularity:M,ellipsoid:D,height:F})),o(x)){for(v=new Uint8Array(4*(s.length/3)),a=0;R-1>a;a++)y=T[a],C=T[a+1],w=x[a],S=x[a+1],O=f(y,C,w,S,M,v,O);v[O++]=r.floatToByte(S.red),v[O++]=r.floatToByte(S.green),v[O++]=r.floatToByte(S.blue),v[O++]=r.floatToByte(S.alpha)}}else for(d=I?2*T.length-2:T.length,s=new Float64Array(3*d),v=o(x)?new Uint8Array(4*d):void 0,a=0;R>a;++a){var k=T[a];if(I&&a>0&&(t.pack(k,s,B),B+=3,b=x[a-1],v[N++]=r.floatToByte(b.red),v[N++]=r.floatToByte(b.green),v[N++]=r.floatToByte(b.blue),v[N++]=r.floatToByte(b.alpha)),I&&a===R-1)break;t.pack(k,s,B),B+=3,o(x)&&(b=x[a],v[N++]=r.floatToByte(b.red),v[N++]=r.floatToByte(b.green),v[N++]=r.floatToByte(b.blue),v[N++]=r.floatToByte(b.alpha))}var U=new c;U.position=new u({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:s}),o(x)&&(U.color=new u({componentDatatype:i.UNSIGNED_BYTE,componentsPerAttribute:4,values:v,normalize:!0})),d=s.length/3;var W=2*(d-1),G=h.createTypedArray(d,W);for(B=0,a=0;d-1>a;a++)G[B++]=a,G[B++]=a+1;return new l({attributes:U,indices:G,primitiveType:p.LINES,boundingSphere:e.fromPoints(T)})},v}),r("Core/SphereGeometry",["./Cartesian3","./defaultValue","./EllipsoidGeometry"],function(e,t,r){"use strict";var i=function(i){var n=t(i.radius,1),o=new e(n,n,n),a={radii:o,stackPartitions:i.stackPartitions,slicePartitions:i.slicePartitions,vertexFormat:i.vertexFormat};this._ellipsoidGeometry=new r(a),this._workerName="createSphereGeometry"};return i.createGeometry=function(e){return r.createGeometry(e._ellipsoidGeometry)},i}),r("Core/SphereOutlineGeometry",["./Cartesian3","./defaultValue","./EllipsoidOutlineGeometry"],function(e,t,r){"use strict";var i=function(i){var n=t(i.radius,1),o=new e(n,n,n),a={radii:o,stackPartitions:i.stackPartitions,slicePartitions:i.slicePartitions,subdivisions:i.subdivisions};this._ellipsoidGeometry=new r(a),this._workerName="createSphereOutlineGeometry"};return i.createGeometry=function(e){return r.createGeometry(e._ellipsoidGeometry)},i}),r("Core/Spherical",["./defaultValue","./defined","./DeveloperError"],function(e,t){"use strict";var r=function(t,r,i){this.clock=e(t,0),this.cone=e(r,0),this.magnitude=e(i,1)};return r.fromCartesian3=function(e,i){var n=e.x,o=e.y,a=e.z,s=n*n+o*o;return t(i)||(i=new r),i.clock=Math.atan2(o,n),i.cone=Math.atan2(Math.sqrt(s),a),i.magnitude=Math.sqrt(s+a*a),i},r.clone=function(e,i){return t(e)?t(i)?(i.clock=e.clock,i.cone=e.cone,i.magnitude=e.magnitude,i):new r(e.clock,e.cone,e.magnitude):void 0},r.normalize=function(e,i){return t(i)?(i.clock=e.clock,i.cone=e.cone,i.magnitude=1,i):new r(e.clock,e.cone,1)},r.equals=function(e,r){return e===r||t(e)&&t(r)&&e.clock===r.clock&&e.cone===r.cone&&e.magnitude===r.magnitude},r.equalsEpsilon=function(r,i,n){return n=e(n,0),r===i||t(r)&&t(i)&&Math.abs(r.clock-i.clock)<=n&&Math.abs(r.cone-i.cone)<=n&&Math.abs(r.magnitude-i.magnitude)<=n},r.prototype.equals=function(e){return r.equals(this,e)},r.prototype.clone=function(e){return r.clone(this,e)},r.prototype.equalsEpsilon=function(e,t){return r.equalsEpsilon(this,e,t)},r.prototype.toString=function(){return"("+this.clock+", "+this.cone+", "+this.magnitude+")"},r}),r("Core/TerrainData",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{waterMask:{get:t.throwInstantiationError}}),r.prototype.interpolateHeight=t.throwInstantiationError,r.prototype.isChildAvailable=t.throwInstantiationError,r.prototype.createMesh=t.throwInstantiationError,r.prototype.upsample=t.throwInstantiationError,r.prototype.wasCreatedByUpsampling=t.throwInstantiationError,r}),r("Core/TilingScheme",["./defineProperties","./DeveloperError"],function(e,t){"use strict";var r=function(){throw new t("This type should not be instantiated directly.  Instead, use WebMercatorTilingScheme or GeographicTilingScheme.")};return e(r.prototype,{ellipsoid:{get:t.throwInstantiationError},rectangle:{get:t.throwInstantiationError},projection:{get:t.throwInstantiationError}}),r.prototype.getNumberOfXTilesAtLevel=t.throwInstantiationError,r.prototype.getNumberOfYTilesAtLevel=t.throwInstantiationError,r.prototype.rectangleToNativeRectangle=t.throwInstantiationError,r.prototype.tileXYToNativeRectangle=t.throwInstantiationError,r.prototype.tileXYToRectangle=t.throwInstantiationError,r.prototype.positionToTileXY=t.throwInstantiationError,r}),r("Core/TimeIntervalCollection",["./binarySearch","./defaultValue","./defined","./defineProperties","./DeveloperError","./Event","./JulianDate","./TimeInterval"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){return a.compare(e.start,t.start)}var u=function(){this._intervals=[],this._changedEvent=new o};i(u.prototype,{changedEvent:{get:function(){return this._changedEvent}},start:{get:function(){var e=this._intervals;return 0===e.length?void 0:e[0].start}},isStartIncluded:{get:function(){var e=this._intervals;return 0===e.length?!1:e[0].isStartIncluded}},stop:{get:function(){var e=this._intervals,t=e.length;return 0===t?void 0:e[t-1].stop}},isStopIncluded:{get:function(){var e=this._intervals,t=e.length;return 0===t?!1:e[t-1].isStopIncluded}},length:{get:function(){return this._intervals.length}},isEmpty:{get:function(){return 0===this._intervals.length}}}),u.prototype.equals=function(e,t){if(this===e)return!0;if(!(e instanceof u))return!1;var r=this._intervals,i=e._intervals,n=r.length;if(n!==i.length)return!1;for(var o=0;n>o;o++)if(!s.equals(r[o],i[o],t))return!1;return!0},u.prototype.get=function(e){return this._intervals[e]},u.prototype.removeAll=function(){this._intervals.length>0&&(this._intervals.length=0,this._changedEvent.raiseEvent(this))},u.prototype.findIntervalContainingDate=function(e){var t=this.indexOf(e);return t>=0?this._intervals[t]:void 0},u.prototype.findDataForIntervalContainingDate=function(e){var t=this.indexOf(e);return t>=0?this._intervals[t].data:void 0},u.prototype.contains=function(e){return this.indexOf(e)>=0};var c=new s;return u.prototype.indexOf=function(t){var r=this._intervals;c.start=t,c.stop=t;var i=e(r,c,l);return i>=0?r[i].isStartIncluded?i:i>0&&r[i-1].stop.equals(t)&&r[i-1].isStopIncluded?i-1:~i:(i=~i,i>0&&i-1<r.length&&s.contains(r[i-1],t)?i-1:~i)},u.prototype.findInterval=function(e){e=t(e,t.EMPTY_OBJECT);for(var i=e.start,n=e.stop,o=e.isStartIncluded,a=e.isStopIncluded,s=this._intervals,l=0,u=s.length;u>l;l++){var c=s[l];if(!(r(i)&&!c.start.equals(i)||r(n)&&!c.stop.equals(n)||r(o)&&c.isStartIncluded!==o||r(a)&&c.isStopIncluded!==a))return s[l]}return void 0},u.prototype.addInterval=function(t,i){if(!t.isEmpty){var n,o,u=this._intervals;if(0===u.length||a.greaterThan(t.start,u[u.length-1].stop))return u.push(t),this._changedEvent.raiseEvent(this),void 0;for(o=e(u,t,l),0>o?o=~o:o>0&&t.isStartIncluded&&u[o-1].isStartIncluded&&u[o-1].start.equals(t.start)?--o:o<u.length&&!t.isStartIncluded&&u[o].isStartIncluded&&u[o].start.equals(t.start)&&++o,o>0&&(n=a.compare(u[o-1].stop,t.start),(n>0||0===n&&(u[o-1].isStopIncluded||t.isStartIncluded))&&((r(i)?i(u[o-1].data,t.data):u[o-1].data===t.data)?(t=a.greaterThan(t.stop,u[o-1].stop)?new s({start:u[o-1].start,stop:t.stop,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:t.isStopIncluded,data:t.data}):new s({start:u[o-1].start,stop:u[o-1].stop,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:u[o-1].isStopIncluded||t.stop.equals(u[o-1].stop)&&t.isStopIncluded,data:t.data}),u.splice(o-1,1),--o):(n=a.compare(u[o-1].stop,t.stop),n>0||0===n&&u[o-1].isStopIncluded&&!t.isStopIncluded?u.splice(o-1,1,new s({start:u[o-1].start,stop:t.start,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:!t.isStartIncluded,data:u[o-1].data}),new s({start:t.stop,stop:u[o-1].stop,isStartIncluded:!t.isStopIncluded,isStopIncluded:u[o-1].isStopIncluded,data:u[o-1].data})):u[o-1]=new s({start:u[o-1].start,stop:t.start,isStartIncluded:u[o-1].isStartIncluded,isStopIncluded:!t.isStartIncluded,data:u[o-1].data}))));o<u.length&&(n=a.compare(t.stop,u[o].start),n>0||0===n&&(t.isStopIncluded||u[o].isStartIncluded));)if(r(i)?i(u[o].data,t.data):u[o].data===t.data)t=new s({start:t.start,stop:a.greaterThan(u[o].stop,t.stop)?u[o].stop:t.stop,isStartIncluded:t.isStartIncluded,isStopIncluded:a.greaterThan(u[o].stop,t.stop)?u[o].isStopIncluded:t.isStopIncluded,data:t.data}),u.splice(o,1);else{if(u[o]=new s({start:t.stop,stop:u[o].stop,isStartIncluded:!t.isStopIncluded,isStopIncluded:u[o].isStopIncluded,data:u[o].data}),!u[o].isEmpty)break;u.splice(o,1)}u.splice(o,0,t),this._changedEvent.raiseEvent(this)}},u.prototype.removeInterval=function(t){if(t.isEmpty)return!1;var r=!1,i=this._intervals,n=e(i,t,l);0>n&&(n=~n);var o=t.start,u=t.stop,c=t.isStartIncluded,h=t.isStopIncluded;if(n>0){var d=i[n-1],m=d.stop;(a.greaterThan(m,o)||s.equals(m,o)&&d.isStopIncluded&&c)&&(r=!0,(a.greaterThan(m,u)||d.isStopIncluded&&!h&&s.equals(m,u))&&i.splice(n,0,new s({start:u,stop:m,isStartIncluded:!h,isStopIncluded:d.isStopIncluded,data:d.data})),i[n-1]=new s({start:d.start,stop:o,isStartIncluded:d.isStartIncluded,isStopIncluded:!c,data:d.data}))}var p=i[n];for(n<i.length&&!c&&p.isStartIncluded&&o.equals(p.start)&&(r=!0,i.splice(n,0,new s({start:p.start,stop:p.start,isStartIncluded:!0,isStopIncluded:!0,data:p.data})),++n,p=i[n]);n<i.length&&a.greaterThan(u,p.stop);)r=!0,i.splice(n,1);return n<i.length&&u.equals(p.stop)&&(r=!0,!h&&p.isStopIncluded?(n+1<i.length&&i[n+1].start.equals(u)&&p.data===i[n+1].data?(i.splice(n,1),p=new s({start:p.start,stop:p.stop,isStartIncluded:!0,isStopIncluded:p.isStopIncluded,data:p.data})):p=new s({start:u,stop:u,isStartIncluded:!0,isStopIncluded:!0,data:p.data}),i[n]=p):i.splice(n,1)),n<i.length&&(a.greaterThan(u,p.start)||u.equals(p.start)&&h&&p.isStartIncluded)&&(r=!0,i[n]=new s({start:u,stop:p.stop,isStartIncluded:!h,isStopIncluded:p.isStopIncluded,data:p.data})),r&&this._changedEvent.raiseEvent(this),r},u.prototype.intersect=function(e,t,i){for(var n=0,o=0,l=new u,c=this._intervals,h=e._intervals;n<c.length&&o<h.length;){var d=c[n],m=h[o];if(a.lessThan(d.stop,m.start))++n;else if(a.lessThan(m.stop,d.start))++o;else{if(r(i)||r(t)&&t(d.data,m.data)||!r(t)&&m.data===d.data){var p=s.intersect(d,m,new s,i);p.isEmpty||l.addInterval(p,t)}a.lessThan(d.stop,m.stop)||d.stop.equals(m.stop)&&!d.isStopIncluded&&m.isStopIncluded?++n:++o}}return l},u}),r("Core/loadXML",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"document",headers:r,overrideMimeType:"text/xml"})};
return t}),r("Core/VRTheWorldTerrainProvider",["../ThirdParty/when","./Credit","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Event","./GeographicTilingScheme","./getImagePixels","./HeightmapTerrainData","./loadImage","./loadXML","./Math","./Rectangle","./TerrainProvider","./throttleRequestByServer","./TileProviderError"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g){"use strict";function _(e,t){this.rectangle=e,this.maxLevel=t}function y(e,t,r,i){for(var n=e._tilingScheme,o=e._rectangles,a=n.tileXYToRectangle(t,r,i),s=0,l=0;l<o.length&&15!==s;++l){var u=o[l];if(!(u.maxLevel<=i)){var c=u.rectangle,h=p.intersectWith(c,a,S);p.isEmpty(h)||(C(n,c,2*t,2*r,i+1)&&(s|=4),C(n,c,2*t+1,2*r,i+1)&&(s|=8),C(n,c,2*t,2*r+1,i+1)&&(s|=1),C(n,c,2*t+1,2*r+1,i+1)&&(s|=2))}}return s}function C(e,t,r,i,n){var o=e.tileXYToRectangle(r,i,n);return!p.isEmpty(p.intersectWith(o,t,S))}var w=function(n){function u(e){var t=e.getElementsByTagName("SRS")[0].textContent;if("EPSG:4326"!==t)return c("SRS "+t+" is not supported."),void 0;C._tilingScheme=new l({ellipsoid:w});var r=e.getElementsByTagName("TileFormat")[0];C._heightmapWidth=parseInt(r.getAttribute("width"),10),C._heightmapHeight=parseInt(r.getAttribute("height"),10),C._levelZeroMaximumGeometricError=f.getEstimatedLevelZeroGeometricErrorForAHeightmap(w,Math.min(C._heightmapWidth,C._heightmapHeight),C._tilingScheme.getNumberOfXTilesAtLevel(0));for(var i=e.getElementsByTagName("DataExtent"),n=0;n<i.length;++n){var o=i[n],a=m.toRadians(parseFloat(o.getAttribute("minx"))),s=m.toRadians(parseFloat(o.getAttribute("miny"))),u=m.toRadians(parseFloat(o.getAttribute("maxx"))),h=m.toRadians(parseFloat(o.getAttribute("maxy"))),d=parseInt(o.getAttribute("maxlevel"),10);C._rectangles.push(new _(new p(a,s,u,h),d))}C._ready=!0}function c(e){var t=r(e,"An error occurred while accessing "+C._url+".");y=g.handleError(y,C,C._errorEvent,t,void 0,void 0,void 0,h)}function h(){e(d(C._url),u,c)}if(n=r(n,r.EMPTY_OBJECT),!i(n.url))throw new o("options.url is required.");this._url=n.url,this._url.length>0&&"/"!==this._url[this._url.length-1]&&(this._url+="/"),this._errorEvent=new s,this._ready=!1,this._proxy=n.proxy,this._terrainDataStructure={heightScale:.001,heightOffset:-1e3,elementsPerHeight:3,stride:4,elementMultiplier:256,isBigEndian:!0};var v=n.credit;"string"==typeof v&&(v=new t(v)),this._credit=v,this._tilingScheme=void 0,this._rectangles=[];var y,C=this,w=r(n.ellipsoid,a.WGS84);h()};n(w.prototype,{errorEvent:{get:function(){return this._errorEvent}},credit:{get:function(){return this._credit}},tilingScheme:{get:function(){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");return this._tilingScheme}},ready:{get:function(){return this._ready}},hasWaterMask:{get:function(){return!1}},hasVertexNormals:{get:function(){return!1}}}),w.prototype.requestTileGeometry=function(t,n,a,s){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");var l=this._tilingScheme.getNumberOfYTilesAtLevel(a),d=this._url+a+"/"+t+"/"+(l-n-1)+".tif?cesium=true",m=this._proxy;i(m)&&(d=m.getURL(d));var p;if(s=r(s,!0)){if(p=v(d,h),!i(p))return void 0}else p=h(d);var f=this;return e(p,function(e){return new c({buffer:u(e),width:f._heightmapWidth,height:f._heightmapHeight,childTileMask:y(f,t,n,a),structure:f._terrainDataStructure})})},w.prototype.getLevelMaximumGeometricError=function(e){if(!this.ready)throw new o("requestTileGeometry must not be called before ready returns true.");return this._levelZeroMaximumGeometricError/(1<<e)};var S=new p;return w.prototype.getTileDataAvailable=function(){return void 0},w}),r("Core/WallGeometryLibrary",["./Cartographic","./defined","./DeveloperError","./EllipsoidTangentPlane","./Math","./PolygonPipeline","./PolylinePipeline","./WindingOrder"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){return n.equalsEpsilon(e.latitude,t.latitude,n.EPSILON14)&&n.equalsEpsilon(e.longitude,t.longitude,n.EPSILON14)}function u(r,i,n,o){var a=t(o),s=t(n),u=[],c=[],m=[],p=i.length;if(2>p)return{positions:i};var f=i[0];u.push(f);var v=r.cartesianToCartographic(f,h);s&&(v.height=n[0]),c.push(v.height),a?m.push(o[0]):m.push(0);for(var g=1;p>g;++g){var _=i[g],y=r.cartesianToCartographic(_,d);s&&(y.height=n[g]),l(v,y)?v.height<y.height&&(c[c.length-1]=y.height):(u.push(_),c.push(y.height),a?m.push(o[g]):m.push(0)),e.clone(y,v)}return{positions:u,topHeights:c,bottomHeights:m}}var c={},h=new e,d=new e;return c.computePositions=function(e,t,r,n,l,c){var h=u(e,t,r,n);if(t=h.positions,r=h.topHeights,n=h.bottomHeights,t.length>=3){var d=i.fromPoints(t,e),m=d.projectPointsOntoPlane(t);o.computeWindingOrder2D(m)===s.CLOCKWISE&&(t.reverse(),r.reverse(),n.reverse())}var p,f,v,g,_,y=t.length;if(c){var C=0;for(p=0;y-1>p;p++)g=t[p],_=t[p+1],C+=a.numberOfPoints(g,_,l),C++;f=new Float64Array(3*C),v=new Float64Array(3*C);var w=0;for(p=0;y-1>p;p++){g=t[p],_=t[p+1];var S=r[p],E=r[p+1],b=a.generateArc({positions:[g,_],height:[S,E],granularity:l,ellipsoid:e});f.set(b,w),S=n[p],E=n[p+1],v.set(a.generateArc({positions:[g,_],height:[S,E],granularity:l,ellipsoid:e}),w),w+=b.length}}else f=new Float64Array(a.generateArc({positions:t,height:r,granularity:l,ellipsoid:e})),v=new Float64Array(a.generateArc({positions:t,height:n,granularity:l,ellipsoid:e}));return{bottomPositions:v,topPositions:f}},c}),r("Core/WallGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./VertexFormat","./WallGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";var f=new t,v=new t,g=new t,_=new t,y=new t,C=new t,w=new t,S=new t,E=function(e){e=i(e,i.EMPTY_OBJECT);var t=e.positions,r=e.maximumHeights,n=e.minimumHeights,o=i(e.vertexFormat,m.DEFAULT),s=i(e.granularity,h.RADIANS_PER_DEGREE),l=i(e.ellipsoid,a.WGS84);this._positions=t,this._minimumHeights=n,this._maximumHeights=r,this._vertexFormat=o,this._granularity=s,this._ellipsoid=l,this._workerName="createWallGeometry"};return E.fromConstantHeights=function(e){e=i(e,i.EMPTY_OBJECT);var t,r,o=e.positions,a=e.minimumHeight,s=e.maximumHeight,l=n(a),u=n(s);if(l||u){var c=o.length;t=l?new Array(c):void 0,r=u?new Array(c):void 0;for(var h=0;c>h;++h)l&&(t[h]=a),u&&(r[h]=s)}var d={positions:o,maximumHeights:r,minimumHeights:t,ellipsoid:e.ellipsoid,vertexFormat:e.vertexFormat};return new E(d)},E.createGeometry=function(i){var n=i._positions,o=i._minimumHeights,a=i._maximumHeights,m=i._vertexFormat,E=i._granularity,b=i._ellipsoid,T=p.computePositions(b,n,a,o,E,!0),x=T.bottomPositions,P=T.topPositions,A=P.length,M=2*A,D=m.position?new Float64Array(M):void 0,I=m.normal?new Float32Array(M):void 0,R=m.tangent?new Float32Array(M):void 0,O=m.binormal?new Float32Array(M):void 0,L=m.st?new Float32Array(2*(M/3)):void 0,N=0,B=0,F=0,z=0,V=0,k=S,U=w,W=C,G=!0;A/=3;var H;for(H=0;A>H;++H){var q=3*H,j=t.fromArray(P,q,f),Y=t.fromArray(x,q,v);if(m.position&&(D[N++]=Y.x,D[N++]=Y.y,D[N++]=Y.z,D[N++]=j.x,D[N++]=j.y,D[N++]=j.z),m.normal||m.tangent||m.binormal){var X,Z=new t,Q=b.scaleToGeodeticSurface(t.fromArray(P,q,v),v);if(A>H+1&&(X=b.scaleToGeodeticSurface(t.fromArray(P,q+3,g),g),Z=t.fromArray(P,q+3,y)),G){var J=t.subtract(Z,j,_),K=t.subtract(Q,j,f);k=t.normalize(t.cross(K,J,k),k),G=!1}t.equalsEpsilon(X,Q,h.EPSILON6)?G=!0:(m.tangent&&(U=t.normalize(t.subtract(X,Q,U),U)),m.binormal&&(W=t.normalize(t.cross(k,U,W),W))),m.normal&&(I[B++]=k.x,I[B++]=k.y,I[B++]=k.z,I[B++]=k.x,I[B++]=k.y,I[B++]=k.z),m.tangent&&(R[z++]=U.x,R[z++]=U.y,R[z++]=U.z,R[z++]=U.x,R[z++]=U.y,R[z++]=U.z),m.binormal&&(O[F++]=W.x,O[F++]=W.y,O[F++]=W.z,O[F++]=W.x,O[F++]=W.y,O[F++]=W.z)}if(m.st){var $=H/(A-1);L[V++]=$,L[V++]=0,L[V++]=$,L[V++]=1}}var et=new u;m.position&&(et.position=new l({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:D})),m.normal&&(et.normal=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:I})),m.tangent&&(et.tangent=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:R})),m.binormal&&(et.binormal=new l({componentDatatype:r.FLOAT,componentsPerAttribute:3,values:O})),m.st&&(et.st=new l({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:L}));var tt=M/3;M-=6;var rt=c.createTypedArray(tt,M),it=0;for(H=0;tt-2>H;H+=2){var nt=H,ot=H+2,at=t.fromArray(D,3*nt,f),st=t.fromArray(D,3*ot,v);if(!t.equalsEpsilon(at,st,h.EPSILON6)){var lt=H+1,ut=H+3;rt[it++]=lt,rt[it++]=nt,rt[it++]=ut,rt[it++]=ut,rt[it++]=nt,rt[it++]=ot}}return new s({attributes:et,indices:rt,primitiveType:d.TRIANGLES,boundingSphere:new e.fromVertices(D)})},E}),r("Core/WallOutlineGeometry",["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./WallGeometryLibrary"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=new t,f=new t,v=function(e){e=i(e,i.EMPTY_OBJECT);var t=e.positions,r=e.maximumHeights,n=e.minimumHeights,o=i(e.granularity,h.RADIANS_PER_DEGREE),s=i(e.ellipsoid,a.WGS84);this._positions=t,this._minimumHeights=n,this._maximumHeights=r,this._granularity=o,this._ellipsoid=s,this._workerName="createWallOutlineGeometry"};return v.fromConstantHeights=function(e){e=i(e,i.EMPTY_OBJECT);var t,r,o=e.positions,a=e.minimumHeight,s=e.maximumHeight,l=n(a),u=n(s);if(l||u){var c=o.length;t=l?new Array(c):void 0,r=u?new Array(c):void 0;for(var h=0;c>h;++h)l&&(t[h]=a),u&&(r[h]=s)}var d={positions:o,maximumHeights:r,minimumHeights:t,ellipsoid:e.ellipsoid};return new v(d)},v.createGeometry=function(i){var n=i._positions,o=i._minimumHeights,a=i._maximumHeights,v=i._granularity,g=i._ellipsoid,_=m.computePositions(g,n,a,o,v,!1),y=_.bottomPositions,C=_.topPositions,w=C.length,S=2*w,E=new Float64Array(S),b=0;w/=3;var T;for(T=0;w>T;++T){var x=3*T,P=t.fromArray(C,x,p),A=t.fromArray(y,x,f);E[b++]=A.x,E[b++]=A.y,E[b++]=A.z,E[b++]=P.x,E[b++]=P.y,E[b++]=P.z}var M=new u({position:new l({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:E})}),D=S/3;S=2*D-4+D;var I=c.createTypedArray(D,S),R=0;for(T=0;D-2>T;T+=2){var O=T,L=T+2,N=t.fromArray(E,3*O,p),B=t.fromArray(E,3*L,f);if(!t.equalsEpsilon(N,B,h.EPSILON6)){var F=T+1,z=T+3;I[R++]=F,I[R++]=O,I[R++]=F,I[R++]=z,I[R++]=O,I[R++]=L}}return I[R++]=D-2,I[R++]=D-1,new s({attributes:M,indices:I,primitiveType:d.LINES,boundingSphere:new e.fromVertices(E)})},v}),r("Core/WebMercatorProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e){this._ellipsoid=r(e,a.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis};return n(l.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),l.mercatorAngleToGeodeticLatitude=function(e){return s.PI_OVER_TWO-2*Math.atan(Math.exp(-e))},l.geodeticLatitudeToMercatorAngle=function(e){e>l.MaximumLatitude?e=l.MaximumLatitude:e<-l.MaximumLatitude&&(e=-l.MaximumLatitude);var t=Math.sin(e);return.5*Math.log((1+t)/(1-t))},l.MaximumLatitude=l.mercatorAngleToGeodeticLatitude(Math.PI),l.prototype.project=function(t,r){var n=this._semimajorAxis,o=t.longitude*n,a=l.geodeticLatitudeToMercatorAngle(t.latitude)*n,s=t.height;return i(r)?(r.x=o,r.y=a,r.z=s,r):new e(o,a,s)},l.prototype.unproject=function(e,r){var n=this._oneOverSemimajorAxis,o=e.x*n,a=l.mercatorAngleToGeodeticLatitude(e.y*n),s=e.z;return i(r)?(r.longitude=o,r.latitude=a,r.height=s,r):new t(o,a,s)},l}),r("Core/WebMercatorTilingScheme",["./Cartesian2","./defaultValue","./defined","./defineProperties","./Ellipsoid","./Rectangle","./WebMercatorProjection"],function(e,t,r,i,n,o,a){"use strict";var s=function(i){if(i=t(i,{}),this._ellipsoid=t(i.ellipsoid,n.WGS84),this._numberOfLevelZeroTilesX=t(i.numberOfLevelZeroTilesX,1),this._numberOfLevelZeroTilesY=t(i.numberOfLevelZeroTilesY,1),this._projection=new a(this._ellipsoid),r(i.rectangleSouthwestInMeters)&&r(i.rectangleNortheastInMeters))this._rectangleSouthwestInMeters=i.rectangleSouthwestInMeters,this._rectangleNortheastInMeters=i.rectangleNortheastInMeters;else{var s=this._ellipsoid.maximumRadius*Math.PI;this._rectangleSouthwestInMeters=new e(-s,-s),this._rectangleNortheastInMeters=new e(s,s)}var l=this._projection.unproject(this._rectangleSouthwestInMeters),u=this._projection.unproject(this._rectangleNortheastInMeters);this._rectangle=new o(l.longitude,l.latitude,u.longitude,u.latitude)};return i(s.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),s.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},s.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},s.prototype.rectangleToNativeRectangle=function(e,t){var i=this._projection,n=i.project(o.southwest(e)),a=i.project(o.northeast(e));return r(t)?(t.west=n.x,t.south=n.y,t.east=a.x,t.north=a.y,t):new o(n.x,n.y,a.x,a.y)},s.prototype.tileXYToNativeRectangle=function(e,t,i,n){var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=(this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x)/a,u=this._rectangleSouthwestInMeters.x+e*l,c=this._rectangleSouthwestInMeters.x+(e+1)*l,h=(this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y)/s,d=this._rectangleNortheastInMeters.y-t*h,m=this._rectangleNortheastInMeters.y-(t+1)*h;return r(n)?(n.west=u,n.south=m,n.east=c,n.north=d,n):new o(u,m,c,d)},s.prototype.tileXYToRectangle=function(t,r,i,n){var o=this.tileXYToNativeRectangle(t,r,i,n),a=this._projection,s=a.unproject(new e(o.west,o.south)),l=a.unproject(new e(o.east,o.north));return o.west=s.longitude,o.south=s.latitude,o.east=l.longitude,o.north=l.latitude,o},s.prototype.positionToTileXY=function(t,i,n){var o=this._rectangle;if(t.latitude>o.north||t.latitude<o.south||t.longitude<o.west||t.longitude>o.east)return void 0;var a=this.getNumberOfXTilesAtLevel(i),s=this.getNumberOfYTilesAtLevel(i),l=this._rectangleNortheastInMeters.x-this._rectangleSouthwestInMeters.x,u=l/a,c=this._rectangleNortheastInMeters.y-this._rectangleSouthwestInMeters.y,h=c/s,d=this._projection,m=d.project(t),p=m.x-this._rectangleSouthwestInMeters.x,f=this._rectangleNortheastInMeters.y-m.y,v=0|p/u;v>=a&&(v=a-1);var g=0|f/h;return g>=s&&(g=s-1),r(n)?(n.x=v,n.y=g,n):new e(v,g)},s}),r("Core/cancelAnimationFrame",["./defined"],function(e){"use strict";var t=window.cancelAnimationFrame;!function(){if(!e(t))for(var r=["webkit","moz","ms","o"],i=0,n=r.length;n>i&&!e(t);)t=window[r[i]+"CancelAnimationFrame"],e(t)||(t=window[r[i]+"CancelRequestAnimationFrame"]),++i;e(t)||(t=clearTimeout)}();var r=function(e){t(e)};return r}),r("Core/combine",["./defaultValue","./defined"],function(e,t){"use strict";var r=function(i,n,o){o=e(o,!1);var a,s,l,u={},c=t(i),h=t(n);if(c)for(a in i)i.hasOwnProperty(a)&&(s=i[a],h&&o&&"object"==typeof s&&n.hasOwnProperty(a)?(l=n[a],u[a]="object"==typeof l?r(s,l,o):s):u[a]=s);if(h)for(a in n)n.hasOwnProperty(a)&&!u.hasOwnProperty(a)&&(l=n[a],u[a]=l);return u};return r}),r("Core/createGuid",[],function(){"use strict";var e=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=0|16*Math.random(),r="x"===e?t:8|3&t;return r.toString(16)})};return e}),r("Core/deprecationWarning",["./defined","./DeveloperError"],function(e){"use strict";var t={},r=function(r,i){e(t[r])||(t[r]=!0,console.log(i))};return r}),r("Core/getFilenameFromUri",["../ThirdParty/Uri","./defined","./DeveloperError"],function(e){"use strict";var t=function(t){var r=new e(t);r.normalize();var i=r.path,n=i.lastIndexOf("/");return-1!==n&&(i=i.substr(n+1)),i};return t}),r("Core/jsonp",["../ThirdParty/when","./defaultValue","./defined","./DeveloperError"],function(e,t,r){"use strict";function i(e,t,r){e.push(encodeURIComponent(t)+"="+encodeURIComponent(r))}var n=function(o,a){a=t(a,t.EMPTY_OBJECT);var s,l=e.defer();do s="jsonp"+Math.random().toString().substring(2,8);while(r(window[s]));window[s]=function(e){l.resolve(e);try{delete window[s]}catch(t){window[s]=void 0}};var u=t(a.callbackParameterName,"callback"),c=[];i(c,u,s);var h=t(a.parameters,t.EMPTY_OBJECT);for(var d in h)h.hasOwnProperty(d)&&i(c,d,h[d]);c.length>0&&(o+=-1===o.indexOf("?")?"?":"&",o+=c.join("&"));var m=a.proxy;return r(m)&&(o=m.getURL(o)),n.loadAndExecuteScript(o,s,l),l.promise};return n.loadAndExecuteScript=function(e,t,r){var i=document.createElement("script");i.async=!0,i.src=e;var n=document.getElementsByTagName("head")[0];i.onload=function(){i.onload=void 0,n.removeChild(i)},i.onerror=function(e){r.reject(e)},n.appendChild(i)},n.defaultLoadAndExecuteScript=n.loadAndExecuteScript,n}),r("Core/loadBlob",["./loadWithXhr"],function(e){"use strict";var t=function(t,r){return e({url:t,responseType:"blob",headers:r})};return t}),r("Core/loadImageViaBlob",["../ThirdParty/when","./loadBlob","./loadImage"],function(e,t,r){"use strict";var i=/^data:/,n=function(n){return i.test(n)?r(n):t(n).then(function(t){var i=window.URL.createObjectURL(t);return r(i,!1).then(function(e){return e.blob=t,window.URL.revokeObjectURL(i),e},function(t){return window.URL.revokeObjectURL(i),e.reject(t)})})},o=function(){try{var e=new XMLHttpRequest;return e.open("GET","#",!0),e.responseType="blob","blob"===e.responseType}catch(t){return!1}}();return o?n:r}),r("Core/mergeSort",["./defined","./DeveloperError"],function(){"use strict";function e(e,t,n,o,a,s){var l,u,c=a-o+1,h=s-a,d=r,m=i;for(l=0;c>l;++l)d[l]=e[o+l];for(u=0;h>u;++u)m[u]=e[a+u+1];l=0,u=0;for(var p=o;s>=p;++p){var f=d[l],v=m[u];c>l&&(u>=h||t(f,v,n)<=0)?(e[p]=f,++l):h>u&&(e[p]=v,++u)}}function t(r,i,n,o,a){if(!(o>=a)){var s=Math.floor(.5*(o+a));t(r,i,n,o,s),t(r,i,n,s+1,a),e(r,i,n,o,s,a)}}var r=[],i=[],n=function(e,n,o){var a=e.length,s=Math.ceil(.5*a);r.length=s,i.length=s,t(e,n,o,0,a-1),r.length=0,i.length=0};return n}),r("Core/requestAnimationFrame",["./defined"],function(e){"use strict";var t=window.requestAnimationFrame;!function(){if(!e(t))for(var r=["webkit","moz","ms","o"],i=0,n=r.length;n>i&&!e(t);)t=window[r[i]+"RequestAnimationFrame"],++i;if(!e(t)){var o=0;t=function(e){var t=Date.now(),r=Math.max(16-(t-o),0);return o=t+r,setTimeout(function(){e(o)},r)}}}();var r=function(e){return t(e)};return r}),r("Core/sampleTerrain",["../ThirdParty/when","./defined","./DeveloperError"],function(e){"use strict";function t(t,n,o){var a,s=t.tilingScheme,l=[],u={};for(a=0;a<o.length;++a){var c=s.positionToTileXY(o[a],n),h=c.toString();if(!u.hasOwnProperty(h)){var d={x:c.x,y:c.y,level:n,tilingScheme:s,terrainProvider:t,positions:[]};u[h]=d,l.push(d)}u[h].positions.push(o[a])}var m=[];for(a=0;a<l.length;++a){var p=l[a],f=p.terrainProvider.requestTileGeometry(p.x,p.y,p.level,!1),v=e(f,r(p),i(p));m.push(v)}return e.all(m,function(){return o})}function r(e){var t=e.positions,r=e.tilingScheme.tileXYToRectangle(e.x,e.y,e.level);return function(e){for(var i=0;i<t.length;++i){var n=t[i];n.height=e.interpolateHeight(r,n.longitude,n.latitude)}}}function i(e){var t=e.positions;return function(){for(var e=0;e<t.length;++e){var r=t[e];r.height=void 0}}}var n=function(r,i,n){function o(){r.ready?e(t(r,i,n),function(e){a.resolve(e)}):setTimeout(o,10)}var a=e.defer();return o(),a.promise};return n}),r("Core/subdivideArray",["./defined","./DeveloperError"],function(){"use strict";var e=function(e,t){for(var r=[],i=e.length,n=0;i>n;){var o=Math.ceil((i-n)/t--);r.push(e.slice(n,n+o)),n+=o}return r};return e}),r("Core/wrapFunction",["./DeveloperError"],function(){"use strict";var e=function(e,t,r){return function(){r.apply(e,arguments),t.apply(e,arguments)}};return e}),r("DataSources/createPropertyDescriptor",["../Core/defaultValue","../Core/defined"],function(e,t){"use strict";function r(e,r,i,n){return{configurable:n,get:function(){return this[r]},set:function(n){var o=this[r],a=this[i];t(a)&&(a(),this[i]=void 0),o!==n&&(this[r]=n,this._definitionChanged.raiseEvent(this,e,n,o)),t(n)&&t(n.definitionChanged)&&(this[i]=n.definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this,e,n,n)},this))}}}function i(t,i){return r(t,"_"+t,"_"+t+"Subscription",e(i,!1))}return i}),r("DataSources/BillboardGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._image=void 0,this._imageSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._alignedAxis=void 0,this._alignedAxisSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._color=void 0,this._colorSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},image:o("image"),scale:o("scale"),rotation:o("rotation"),alignedAxis:o("alignedAxis"),horizontalOrigin:o("horizontalOrigin"),verticalOrigin:o("verticalOrigin"),color:o("color"),eyeOffset:o("eyeOffset"),pixelOffset:o("pixelOffset"),show:o("show"),width:o("width"),height:o("height"),scaleByDistance:o("scaleByDistance"),translucencyByDistance:o("translucencyByDistance"),pixelOffsetScaleByDistance:o("pixelOffsetScaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.color=this._color,e.eyeOffset=this._eyeOffset,e.horizontalOrigin=this._horizontalOrigin,e.image=this._image,e.pixelOffset=this._pixelOffset,e.scale=this._scale,e.rotation=this._rotation,e.alignedAxis=this._alignedAxis,e.show=this._show,e.verticalOrigin=this._verticalOrigin,e.width=this._width,e.height=this._height,e.scaleByDistance=this._scaleByDistance,e.translucencyByDistance=this._translucencyByDistance,e.pixelOffsetScaleByDistance=this._pixelOffsetScaleByDistance,e},a.prototype.merge=function(t){this.color=e(this._color,t._color),this.eyeOffset=e(this._eyeOffset,t._eyeOffset),this.horizontalOrigin=e(this._horizontalOrigin,t._horizontalOrigin),this.image=e(this._image,t._image),this.pixelOffset=e(this._pixelOffset,t._pixelOffset),this.scale=e(this._scale,t._scale),this.rotation=e(this._rotation,t._rotation),this.alignedAxis=e(this._alignedAxis,t._alignedAxis),this.show=e(this._show,t._show),this.verticalOrigin=e(this._verticalOrigin,t._verticalOrigin),this.width=e(this._width,t._width),this.height=e(this._height,t._height),this.scaleByDistance=e(this._scaleByDistance,t._scaleByDistance),this.translucencyByDistance=e(this._translucencyByDistance,t._translucencyByDistance),this.pixelOffsetScaleByDistance=e(this._pixelOffsetScaleByDistance,t._pixelOffsetScaleByDistance)},a}),r("Renderer/BufferUsage",["../Core/freezeObject"],function(e){"use strict";var t={STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,validate:function(e){return e===t.STREAM_DRAW||e===t.STATIC_DRAW||e===t.DYNAMIC_DRAW}};return e(t)}),r("Renderer/createShaderSource",["../Core/defaultValue","../Core/defined","../Core/DeveloperError"],function(e,t,r){"use strict";function i(i){i=e(i,e.EMPTY_OBJECT);var n=i.defines,o=i.sources,a=i.pickColorQualifier;if(t(a)&&"uniform"!==a&&"varying"!==a)throw new r("options.pickColorQualifier must be 'uniform' or 'varying'.");var s,l,u="";if(t(n)&&n.length>0)for(l=n.length,s=0;l>s;++s)0!==n[s].length&&(u+="#define "+n[s]+"\n");if(t(o)&&o.length>0)for(l=o.length,s=0;l>s;++s)u+="\n#line 0\n"+o[s];if(t(a)){var c=u.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_old_main()"),h=a+" vec4 czm_pickColor; \n"+"void main() \n"+"{ \n"+"    czm_old_main(); \n"+"    if (gl_FragColor.a == 0.0) { \n"+"        discard; \n"+"    } \n"+"    gl_FragColor = czm_pickColor; \n"+"}";u=c+"\n"+h}return u}return i}),r("Renderer/DrawCommand",["../Core/defaultValue","../Core/PrimitiveType"],function(e,t){"use strict";var r=function(r){r=e(r,e.EMPTY_OBJECT),this.boundingVolume=r.boundingVolume,this.cull=e(r.cull,!0),this.modelMatrix=r.modelMatrix,this.primitiveType=e(r.primitiveType,t.TRIANGLES),this.vertexArray=r.vertexArray,this.count=r.count,this.offset=e(r.offset,0),this.shaderProgram=r.shaderProgram,this.uniformMap=r.uniformMap,this.renderState=r.renderState,this.framebuffer=r.framebuffer,this.pass=r.pass,this.executeInClosestFrustum=e(r.executeInClosestFrustum,!1),this.owner=r.owner,this.debugShowBoundingVolume=e(r.debugShowBoundingVolume,!1),this.debugOverlappingFrustums=0,this.oit=void 0};return r.prototype.execute=function(e,t,r,i){e.draw(this,t,r,i)},r}),r("Renderer/VertexArrayFacade",["../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Math","./BufferUsage"],function(e,t,r,i,n,o,a){"use strict";function s(e,t){if(t.needsCommit&&t.vertexSizeInBytes>0){t.needsCommit=!1;var i=t.vertexBuffer,n=e._size*t.vertexSizeInBytes,o=r(i);if(!o||i.sizeInBytes<n)return o&&i.destroy(),t.vertexBuffer=e._context.createVertexBuffer(t.arrayBuffer,t.usage),t.vertexBuffer.vertexArrayDestroyable=!1,!0;t.vertexBuffer.copyFromArrayView(t.arrayBuffer)}return!1}function l(e,t,r){if(e.needsCommit&&e.vertexSizeInBytes>0){var i=e.vertexSizeInBytes*t,n=e.vertexSizeInBytes*r;e.vertexBuffer.copyFromArrayView(new Uint8Array(e.arrayBuffer,i,n),i)}}function u(e){var t=e.vaByPurpose;if(r(t)){for(var i in t)if(t.hasOwnProperty(i))for(var n=t[i],o=n.length,a=0;o>a;++a)n[a].va.destroy();e.vaByPurpose=void 0}}var c=function(t,i,n){function o(t,r){return e.getSizeInBytes(r.componentDatatype)-e.getSizeInBytes(t.componentDatatype)}var s=c._verifyAttributes(i);n=n||0;for(var l,u,h,d,m={},p=[],f=s.length,v=0;f>v;++v){var g=s[v];g.vertexBuffer?p.push(g):(h=g.purpose,l=m[h],r(l)||(l=m[h]={}),d=g.usage,u=l[d],r(u)||(u=l[d]=[]),u.push(g))}this._buffersByPurposeAndUsage={},this._allBuffers=[];for(h in m)if(m.hasOwnProperty(h)){l=m[h];var _=this._buffersByPurposeAndUsage[h];r(_)||(_=this._buffersByPurposeAndUsage[h]={});for(d in l)if(l.hasOwnProperty(d)){u=l[d],u.sort(o);var y,C=c._vertexSizeInBytes(u);switch(Number(d)){case a.STATIC_DRAW:y=a.STATIC_DRAW;break;case a.STREAM_DRAW:y=a.STREAM_DRAW;break;case a.DYNAMIC_DRAW:y=a.DYNAMIC_DRAW}var w={purpose:h,vertexSizeInBytes:C,vertexBuffer:void 0,usage:y,needsCommit:!1,arrayBuffer:void 0,arrayViews:c._createArrayViews(u,C)};_[d]=w,this._allBuffers.push(w)}}this._size=0,this._precreated=p,this._context=t,this.writers=void 0,this.vaByPurpose=void 0,this.resize(n)};c._verifyAttributes=function(i){for(var o=[],s=0;s<i.length;++s){var l=i[s],u={index:t(l.index,s),enabled:t(l.enabled,!0),componentsPerAttribute:l.componentsPerAttribute,componentDatatype:l.componentDatatype||e.FLOAT,normalize:l.normalize||!1,purpose:t(l.purpose,"all"),vertexBuffer:l.vertexBuffer,usage:l.usage||a.STATIC_DRAW};if(o.push(u),1!==u.componentsPerAttribute&&2!==u.componentsPerAttribute&&3!==u.componentsPerAttribute&&4!==u.componentsPerAttribute)throw new n("attribute.componentsPerAttribute must be in the range [1, 4].");var c=u.componentDatatype;if(!e.validate(c))throw new n("Attribute must have a valid componentDatatype or not specify it.");if(!a.validate(u.usage))throw new n("Attribute must have a valid usage or not specify it.")}for(var h=new Array(o.length),d=0;d<o.length;++d){var m=o[d],p=m.index,f=m.purpose;if("all"!==f){var v=h[p];if(v===!0)throw new n("Index "+p+" is used by more than one attribute.");if(r(v)){if(v[f])throw new n("Index "+p+" is used by more than one attribute with the same purpose.")}else v=h[p]={};v[f]=!0}else{if(h[p])throw new n("Index "+p+" is used by more than one attribute.");h[p]=!0}}return o},c._vertexSizeInBytes=function(t){for(var r=0,i=t.length,n=0;i>n;++n){var o=t[n];r+=o.componentsPerAttribute*e.getSizeInBytes(o.componentDatatype)}var a=i>0?e.getSizeInBytes(t[0].componentDatatype):0,s=a>0?r%a:0,l=0===s?0:a-s;return r+=l},c._createArrayViews=function(t,r){for(var i=[],n=0,o=t.length,a=0;o>a;++a){var s=t[a],l=s.componentDatatype;i.push({index:s.index,enabled:s.enabled,componentsPerAttribute:s.componentsPerAttribute,componentDatatype:l,normalize:s.normalize,offsetInBytes:n,vertexSizeInComponentType:r/e.getSizeInBytes(l),view:void 0}),n+=s.componentsPerAttribute*e.getSizeInBytes(l)}return i},c.prototype.resize=function(e){this._size=e;var t=this._allBuffers;this.writers={};for(var i=0,n=t.length;n>i;++i){var o=t[i];c._resize(o,this._size);var a=this.writers[o.purpose];r(a)||(a=this.writers[o.purpose]=[]),c._appendWriters(a,o)}u(this)},c._resize=function(t,i){if(t.vertexSizeInBytes>0){var n=new ArrayBuffer(i*t.vertexSizeInBytes);if(r(t.arrayBuffer))for(var o=new Uint8Array(n),a=new Uint8Array(t.arrayBuffer),s=a.length,l=0;s>l;++l)o[l]=a[l];for(var u=t.arrayViews,c=u.length,h=0;c>h;++h){var d=u[h];d.view=e.createArrayBufferView(d.componentDatatype,n,d.offsetInBytes)}t.arrayBuffer=n}};var h=[function(e,t,r){return function(i,n){t[i*r]=n,e.needsCommit=!0}},function(e,t,r){return function(i,n,o){var a=i*r;t[a]=n,t[a+1]=o,e.needsCommit=!0}},function(e,t,r){return function(i,n,o,a){var s=i*r;t[s]=n,t[s+1]=o,t[s+2]=a,e.needsCommit=!0}},function(e,t,r){return function(i,n,o,a,s){var l=i*r;t[l]=n,t[l+1]=o,t[l+2]=a,t[l+3]=s,e.needsCommit=!0}}];return c._appendWriters=function(e,t){for(var r=t.arrayViews,i=r.length,n=0;i>n;++n){var o=r[n];e[o.index]=h[o.componentsPerAttribute-1](t,o.view,o.vertexSizeInComponentType)}},c.prototype.commit=function(e){for(var t,i=!1,n=this._allBuffers,a=0,l=n.length;l>a;++a)t=n[a],i=s(this,t)||i;if(i||!r(this.vaByPurpose)){var h=this._buffersByPurposeAndUsage;u(this),this.vaByPurpose={};for(var d in h)if(h.hasOwnProperty(d)){for(var m=h[d],p=[],f=Math.ceil(this._size/o.SIXTY_FOUR_KILOBYTES),v=0;f>v;++v){var g=[],_=h.all;if(_!==m)for(var y in _)if(_.hasOwnProperty(y)){var C=_[y];c._appendAttributes(g,C,v*C.vertexSizeInBytes*o.SIXTY_FOUR_KILOBYTES)}for(var w in m)m.hasOwnProperty(w)&&(t=m[w],c._appendAttributes(g,t,v*t.vertexSizeInBytes*o.SIXTY_FOUR_KILOBYTES));g=g.concat(this._precreated),p.push({va:this._context.createVertexArray(g,e),indicesCount:1.5*(v!==f-1?o.SIXTY_FOUR_KILOBYTES:this._size%o.SIXTY_FOUR_KILOBYTES)})}this.vaByPurpose[d]=p}}},c._appendAttributes=function(e,t,r){for(var i=t.arrayViews,n=i.length,o=0;n>o;++o){var a=i[o];e.push({index:a.index,enabled:a.enabled,componentsPerAttribute:a.componentsPerAttribute,componentDatatype:a.componentDatatype,normalize:a.normalize,vertexBuffer:t.vertexBuffer,offsetInBytes:r+a.offsetInBytes,strideInBytes:t.vertexSizeInBytes})}},c.prototype.subCommit=function(e,t){for(var r=this._allBuffers,i=0,n=r.length;n>i;++i)l(r[i],e,t)},c.prototype.endSubCommits=function(){for(var e=this._allBuffers,t=0,r=e.length;r>t;++t)e[t].needsCommit=!1},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){for(var e=this._allBuffers,t=0,r=e.length;r>t;++t){var n=e[t];n.vertexBuffer=n.vertexBuffer&&n.vertexBuffer.destroy()}return u(this),i(this)},c}),r("Shaders/BillboardCollectionFS",[],function(){"use strict";return"uniform sampler2D u_atlas;\nvarying vec2 v_textureCoordinates;\n#ifdef RENDER_FOR_PICK\nvarying vec4 v_pickColor;\n#else\nvarying vec4 v_color;\n#endif\nvoid main()\n{\n#ifdef RENDER_FOR_PICK\nvec4 vertexColor = vec4(1.0, 1.0, 1.0, 1.0);\n#else\nvec4 vertexColor = v_color;\n#endif\nvec4 color = texture2D(u_atlas, v_textureCoordinates) * vertexColor;\nif (color.a == 0.0)\n{\ndiscard;\n}\n#ifdef RENDER_FOR_PICK\ngl_FragColor = v_pickColor;\n#else\ngl_FragColor = color;\n#endif\n}\n"
}),r("Shaders/BillboardCollectionVS",[],function(){"use strict";return"attribute vec3 positionHigh;\nattribute vec3 positionLow;\nattribute vec2 direction;\nattribute vec4 textureCoordinatesAndImageSize;\nattribute vec3 originAndShow;\nattribute vec4 pixelOffsetAndTranslate;\nattribute vec4 eyeOffsetAndScale;\nattribute vec4 rotationAndAlignedAxis;\nattribute vec4 scaleByDistance;\nattribute vec4 translucencyByDistance;\nattribute vec4 pixelOffsetScaleByDistance;\n#ifdef RENDER_FOR_PICK\nattribute vec4 pickColor;\n#else\nattribute vec4 color;\n#endif\nvarying vec2 v_textureCoordinates;\n#ifdef RENDER_FOR_PICK\nvarying vec4 v_pickColor;\n#else\nvarying vec4 v_color;\n#endif\nfloat getNearFarScalar(vec4 nearFarScalar, float cameraDistSq)\n{\nfloat valueAtMin = nearFarScalar.y;\nfloat valueAtMax = nearFarScalar.w;\nfloat nearDistanceSq = nearFarScalar.x * nearFarScalar.x;\nfloat farDistanceSq = nearFarScalar.z * nearFarScalar.z;\nfloat t = (cameraDistSq - nearDistanceSq) / (farDistanceSq - nearDistanceSq);\nt = pow(clamp(t, 0.0, 1.0), 0.2);\nreturn mix(valueAtMin, valueAtMax, t);\n}\nvoid main()\n{\nvec3 eyeOffset = eyeOffsetAndScale.xyz;\nfloat scale = eyeOffsetAndScale.w;\nvec2 textureCoordinates = textureCoordinatesAndImageSize.xy;\nvec2 imageSize = textureCoordinatesAndImageSize.zw;\nvec2 origin = originAndShow.xy;\nfloat show = originAndShow.z;\nvec2 pixelOffset = pixelOffsetAndTranslate.xy;\nvec2 translate = pixelOffsetAndTranslate.zw;\nvec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\nvec4 positionEC = czm_modelViewRelativeToEye * p;\npositionEC = czm_eyeOffset(positionEC, eyeOffset);\npositionEC.xyz *= show;\n#if defined(EYE_DISTANCE_SCALING) || defined(EYE_DISTANCE_TRANSLUCENCY) || defined(EYE_DISTANCE_PIXEL_OFFSET)\nfloat lengthSq;\nif (czm_sceneMode == czm_sceneMode2D)\n{\nlengthSq = czm_eyeHeight2D.y;\n}\nelse\n{\nlengthSq = dot(positionEC.xyz, positionEC.xyz);\n}\n#endif\n#ifdef EYE_DISTANCE_SCALING\nscale *= getNearFarScalar(scaleByDistance, lengthSq);\nif (scale == 0.0)\n{\npositionEC.xyz = vec3(0.0);\n}\n#endif\nfloat translucency = 1.0;\n#ifdef EYE_DISTANCE_TRANSLUCENCY\ntranslucency = getNearFarScalar(translucencyByDistance, lengthSq);\nif (translucency == 0.0)\n{\npositionEC.xyz = vec3(0.0);\n}\n#endif\n#ifdef EYE_DISTANCE_PIXEL_OFFSET\nfloat pixelOffsetScale = getNearFarScalar(pixelOffsetScaleByDistance, lengthSq);\npixelOffset *= pixelOffsetScale;\n#endif\nvec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\nvec2 halfSize = imageSize * scale * czm_resolutionScale;\nhalfSize *= ((direction * 2.0) - 1.0);\npositionWC.xy += (origin * abs(halfSize));\n#ifdef ROTATION\nfloat rotation = rotationAndAlignedAxis.x;\nvec3 alignedAxis = rotationAndAlignedAxis.yzw;\nif (!all(equal(rotationAndAlignedAxis, vec4(0.0))))\n{\nfloat angle = rotation;\nif (!all(equal(alignedAxis, vec3(0.0))))\n{\nvec3 pos = positionEC.xyz + czm_encodedCameraPositionMCHigh + czm_encodedCameraPositionMCLow;\nvec3 normal = normalize(cross(alignedAxis, pos));\nvec4 tangent = vec4(normalize(cross(pos, normal)), 0.0);\ntangent = czm_modelViewProjection * tangent;\nangle += sign(-tangent.x) * acos(tangent.y / length(tangent.xy));\n}\nfloat cosTheta = cos(angle);\nfloat sinTheta = sin(angle);\nmat2 rotationMatrix = mat2(cosTheta, sinTheta, -sinTheta, cosTheta);\nhalfSize = rotationMatrix * halfSize;\n}\n#endif\npositionWC.xy += halfSize;\npositionWC.xy += translate;\npositionWC.xy += (pixelOffset * czm_resolutionScale);\ngl_Position = czm_viewportOrthographic * vec4(positionWC.xy, -positionWC.z, 1.0);\nv_textureCoordinates = textureCoordinates;\n#ifdef RENDER_FOR_PICK\nv_pickColor = pickColor;\n#else\nv_color = color;\nv_color.a *= translucency;\n#endif\n}\n"}),r("Scene/HorizontalOrigin",["../Core/freezeObject"],function(e){"use strict";var t={CENTER:0,LEFT:1,RIGHT:-1};return e(t)}),r("Scene/SceneMode",["../Core/freezeObject"],function(e){"use strict";var t={MORPHING:0,COLUMBUS_VIEW:1,SCENE2D:2,SCENE3D:3};return t.getMorphTime=function(e){return e===t.SCENE3D?1:e===t.MORPHING?void 0:0},e(t)}),r("Scene/SceneTransforms",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defined","../Core/DeveloperError","../Core/Math","../Core/Matrix4","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c={},h=new i(0,0,0,1),d=new i,m=new l;c.wgs84ToWindowCoordinates=function(e,t,r){var n=c.computeActualWgs84Position(e.frameState,t,h);if(!o(n))return void 0;var a=e.camera,s=l.multiply(a.frustum.projectionMatrix,a.viewMatrix,m);return l.multiplyByVector(s,i.fromElements(n.x,n.y,n.z,1,d),d),d.z<0&&e.mode!==u.SCENE2D?void 0:(r=c.clipToGLWindowCoordinates(e,d,r),r.y=e.canvas.clientHeight-r.y,r)},c.wgs84ToDrawingBufferCoordinates=function(e,t,r){var n=c.computeActualWgs84Position(e.frameState,t,h);if(!o(n))return void 0;var a=e.camera,s=l.multiply(a.frustum.projectionMatrix,a.viewMatrix,m);return l.multiplyByVector(s,i.fromElements(n.x,n.y,n.z,1,d),d),d.z<0&&e.mode!==u.SCENE2D?void 0:c.clipToDrawingBufferCoordinates(e,d,r)};var p=new r,f=new n;c.computeActualWgs84Position=function(e,t,i){var n=e.mode;if(n===u.SCENE3D)return r.clone(t,i);var a=e.mapProjection,l=a.ellipsoid.cartesianToCartographic(t,f);if(!o(l))return void 0;if(a.project(l,p),n===u.COLUMBUS_VIEW)return r.fromElements(p.z,p.x,p.y,i);if(n===u.SCENE2D)return r.fromElements(0,p.x,p.y,i);var c=e.morphTime;return r.fromElements(s.lerp(p.z,t.x,c),s.lerp(p.x,t.y,c),s.lerp(p.y,t.z,c),i)};var v=new r,g=new r,_=new e,y=new l;return c.clipToGLWindowCoordinates=function(e,i,n){var o=e.canvas;return r.divideByScalar(i,i.w,v),_.width=o.clientWidth,_.height=o.clientHeight,l.computeViewportTransformation(_,0,1,y),l.multiplyByPoint(y,v,g),t.fromCartesian3(g,n)},c.clipToDrawingBufferCoordinates=function(e,i,n){return r.divideByScalar(i,i.w,v),_.width=e.drawingBufferWidth,_.height=e.drawingBufferHeight,l.computeViewportTransformation(_,0,1,y),l.multiplyByPoint(y,v,g),t.fromCartesian3(g,n)},c.transformWindowToDrawingBuffer=function(e,r,i){var n=e.canvas,o=e.drawingBufferWidth/n.clientWidth,a=e.drawingBufferHeight/n.clientHeight;return t.fromElements(r.x*o,r.y*a,i)},c}),r("Scene/VerticalOrigin",["../Core/freezeObject"],function(e){"use strict";var t={CENTER:0,BOTTOM:1,TOP:-1};return e(t)}),r("Scene/Billboard",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","../Core/NearFarScalar","./HorizontalOrigin","./SceneMode","./SceneTransforms","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";function v(e,t){var r=e._billboardCollection;s(r)&&(r._updateBillboard(e,t),e._dirty=!0)}var g=function(e,i){e=a(e,a.EMPTY_OBJECT),this._show=a(e.show,!0),this._position=r.clone(a(e.position,r.ZERO)),this._actualPosition=r.clone(this._position),this._pixelOffset=t.clone(a(e.pixelOffset,t.ZERO)),this._translate=new t(0,0),this._eyeOffset=r.clone(a(e.eyeOffset,r.ZERO)),this._verticalOrigin=a(e.verticalOrigin,f.CENTER),this._horizontalOrigin=a(e.horizontalOrigin,d.CENTER),this._scale=a(e.scale,1),this._color=n.clone(a(e.color,n.WHITE)),this._rotation=a(e.rotation,0),this._alignedAxis=r.clone(a(e.alignedAxis,r.ZERO)),this._width=e.width,this._height=e.height,this._scaleByDistance=e.scaleByDistance,this._translucencyByDistance=e.translucencyByDistance,this._pixelOffsetScaleByDistance=e.pixelOffsetScaleByDistance,this._id=e.id,this._collection=a(e.collection,i),this._pickId=void 0,this._pickPrimitive=a(e._pickPrimitive,this),this._billboardCollection=i,this._dirty=!1,this._index=-1,this._imageIndex=-1,this._imageIndexPromise=void 0,this._imageId=void 0,this._image=void 0,this._imageSubRegion=void 0;var l=e.image,u=e.imageId;s(l)&&(s(u)||(u="string"==typeof l?l:s(l.src)?l.src:o()),this._imageId=u,this._image=l),s(e.imageSubRegion)&&(this._imageId=u,this._imageSubRegion=e.imageSubRegion),s(this._billboardCollection._textureAtlas)&&this._loadImage()},_=g.SHOW_INDEX=0,y=g.POSITION_INDEX=1,C=g.PIXEL_OFFSET_INDEX=2,w=g.EYE_OFFSET_INDEX=3,S=g.HORIZONTAL_ORIGIN_INDEX=4,E=g.VERTICAL_ORIGIN_INDEX=5,b=g.SCALE_INDEX=6,T=g.IMAGE_INDEX_INDEX=7,x=g.COLOR_INDEX=8,P=g.ROTATION_INDEX=9,A=g.ALIGNED_AXIS_INDEX=10,M=g.SCALE_BY_DISTANCE_INDEX=11,D=g.TRANSLUCENCY_BY_DISTANCE_INDEX=12,I=g.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX=13;g.NUMBER_OF_PROPERTIES=14,l(g.prototype,{show:{get:function(){return this._show},set:function(e){this._show!==e&&(this._show=e,v(this,_))}},position:{get:function(){return this._position},set:function(e){var t=this._position;r.equals(t,e)||(r.clone(e,t),r.clone(e,this._actualPosition),v(this,y))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(e){var r=this._pixelOffset;t.equals(r,e)||(t.clone(e,r),v(this,C))}},scaleByDistance:{get:function(){return this._scaleByDistance},set:function(e){var t=this._scaleByDistance;h.equals(t,e)||(this._scaleByDistance=h.clone(e,t),v(this,M))}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(e){var t=this._translucencyByDistance;h.equals(t,e)||(this._translucencyByDistance=h.clone(e,t),v(this,D))}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(e){var t=this._pixelOffsetScaleByDistance;h.equals(t,e)||(this._pixelOffsetScaleByDistance=h.clone(e,t),v(this,I))}},eyeOffset:{get:function(){return this._eyeOffset},set:function(e){var t=this._eyeOffset;r.equals(t,e)||(r.clone(e,t),v(this,w))}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(e){this._horizontalOrigin!==e&&(this._horizontalOrigin=e,v(this,S))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(e){this._verticalOrigin!==e&&(this._verticalOrigin=e,v(this,E))}},scale:{get:function(){return this._scale},set:function(e){this._scale!==e&&(this._scale=e,v(this,b))}},color:{get:function(){return this._color},set:function(e){var t=this._color;n.equals(t,e)||(n.clone(e,t),v(this,x))}},rotation:{get:function(){return this._rotation},set:function(e){this._rotation!==e&&(this._rotation=e,v(this,P))}},alignedAxis:{get:function(){return this._alignedAxis},set:function(e){var t=this._alignedAxis;r.equals(t,e)||(r.clone(e,t),v(this,A))}},width:{get:function(){return this._width},set:function(e){this._width!==e&&(this._width=e,v(this,T))}},height:{get:function(){return this._height},set:function(e){this._height!==e&&(this._height=e,v(this,T))}},id:{get:function(){return this._id},set:function(e){this._id=e,s(this._pickId)&&(this._pickId.object.id=e)}},pickPrimitive:{get:function(){return this._pickPrimitive},set:function(e){this._pickPrimitive=e,s(this._pickId)&&(this._pickId.object.primitive=e)}},image:{get:function(){return this._imageId},set:function(e){s(e)?"string"==typeof e?this.setImage(e,e):s(e.src)?this.setImage(e.src,e):this.setImage(o(),e):(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=void 0,this._image=void 0,this._imageIndexPromise=void 0,v(this,T))}},ready:{get:function(){return-1!==this._imageIndex}}}),g.prototype.getPickId=function(e){return s(this._pickId)||(this._pickId=e.createPickId({primitive:this._pickPrimitive,collection:this._collection,id:this._id})),this._pickId},g.prototype._loadImage=function(){var t,r=this._billboardCollection._textureAtlas,i=this._imageId,n=this._image,o=this._imageSubRegion;if(s(n)&&(t=r.addImage(i,n)),s(o)&&(t=r.addSubRegion(i,o)),this._imageIndexPromise=t,s(t)){var a=this;t.then(function(t){a._imageId===i&&a._image===n&&e.equals(a._imageSubRegion,o)&&(a._imageIndex=t,a._ready=!0,a._image=void 0,a._imageIndexPromise=void 0,v(a,T))}).otherwise(function(e){console.error("Error loading image for billboard: "+e),a._imageIndexPromise=void 0})}},g.prototype.setImage=function(e,t){this._imageId!==e&&(this._imageIndex=-1,this._imageSubRegion=void 0,this._imageId=e,this._image=t,s(this._billboardCollection._textureAtlas)&&this._loadImage())},g.prototype.setImageSubRegion=function(t,r){this._imageId===t&&e.equals(this._imageSubRegion,r)||(this._imageIndex=-1,this._imageId=t,this._imageSubRegion=r,s(this._billboardCollection._textureAtlas)&&this._loadImage())},g.prototype._setTranslate=function(e){var r=this._translate;t.equals(r,e)||(t.clone(e,r),v(this,C))},g.prototype._getActualPosition=function(){return this._actualPosition},g.prototype._setActualPosition=function(e){r.clone(e,this._actualPosition),v(this,y)};var R=new i;g._computeActualPosition=function(e,t,r){return t.mode===m.SCENE3D?e:(c.multiplyByPoint(r,e,R),p.computeActualWgs84Position(t,R))};var O=new c,L=new i,N=new r,B=new t,F=new t;g._computeScreenSpacePosition=function(e,n,o,a,s){var l=s.camera,u=l.viewMatrix,h=l.frustum.projectionMatrix,d=c.multiplyTransformation(u,e,O),m=c.multiplyByVector(d,i.fromElements(n.x,n.y,n.z,1,L),L),f=r.multiplyComponents(o,r.normalize(m,N),N);m.x+=o.x+f.x,m.y+=o.y+f.y,m.z+=f.z;var v=c.multiplyByVector(h,m,L),g=p.clipToGLWindowCoordinates(s,v,new t);a=t.clone(a,F),a.y=-a.y;var _=t.multiplyByScalar(a,s.context.uniformState.resolutionScale,B);return g.x+=_.x,g.y+=_.y,g};var z=new t(0,0);return g.prototype.computeScreenSpacePosition=function(e){var r=this._billboardCollection;t.clone(this._pixelOffset,z),t.add(z,this._translate,z);var i=r.modelMatrix,n=g._computeScreenSpacePosition(i,this._actualPosition,this._eyeOffset,z,e);return n.y=e.canvas.clientHeight-n.y,n},g.prototype.equals=function(i){return this===i||s(i)&&this._show===i._show&&this._scale===i._scale&&this._verticalOrigin===i._verticalOrigin&&this._horizontalOrigin===i._horizontalOrigin&&this._id===i._id&&this._imageId===i._imageId&&e.equals(this._imageSubRegion,i._imageSubRegion)&&r.equals(this._position,i._position)&&n.equals(this._color,i._color)&&t.equals(this._pixelOffset,i._pixelOffset)&&t.equals(this._translate,i._translate)&&r.equals(this._eyeOffset,i._eyeOffset)&&h.equals(this._scaleByDistance,i._scaleByDistance)&&h.equals(this._translucencyByDistance,i._translucencyByDistance)&&h.equals(this._pixelOffsetScaleByDistance,i._pixelOffsetScaleByDistance)},g.prototype._destroy=function(){this.image=void 0,this._pickId=this._pickId&&this._pickId.destroy(),this._billboardCollection=void 0},g}),r("Scene/BlendEquation",["../Core/freezeObject"],function(e){"use strict";var t={ADD:32774,SUBTRACT:32778,REVERSE_SUBTRACT:32779};return e(t)}),r("Scene/BlendFunction",["../Core/freezeObject"],function(e){"use strict";var t={ZERO:0,ONE:1,SOURCE_COLOR:768,ONE_MINUS_SOURCE_COLOR:769,DESTINATION_COLOR:774,ONE_MINUS_DESTINATION_COLOR:775,SOURCE_ALPHA:770,ONE_MINUS_SOURCE_ALPHA:771,DESTINATION_ALPHA:772,ONE_MINUS_DESTINATION_ALPHA:773,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,SOURCE_ALPHA_SATURATE:776};return e(t)}),r("Scene/BlendingState",["../Core/freezeObject","./BlendEquation","./BlendFunction"],function(e,t,r){"use strict";var i={DISABLED:e({enabled:!1}),ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.SOURCE_ALPHA,functionSourceAlpha:r.SOURCE_ALPHA,functionDestinationRgb:r.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:r.ONE_MINUS_SOURCE_ALPHA}),PRE_MULTIPLIED_ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.ONE,functionSourceAlpha:r.ONE,functionDestinationRgb:r.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:r.ONE_MINUS_SOURCE_ALPHA}),ADDITIVE_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:r.SOURCE_ALPHA,functionSourceAlpha:r.SOURCE_ALPHA,functionDestinationRgb:r.ONE,functionDestinationAlpha:r.ONE})};return e(i)}),r("Scene/Pass",["../Core/freezeObject"],function(e){"use strict";var t={OPAQUE:0,TRANSLUCENT:1,OVERLAY:2};return e(t)}),r("Scene/TextureAtlas",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/loadImage","../Core/PixelFormat","../Core/RuntimeError","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,r,n,o,a){this.bottomLeft=i(e,t.ZERO),this.topRight=i(r,t.ZERO),this.childNode1=n,this.childNode2=o,this.imageIndex=a}function m(e,r){var i=e.numberOfImages,o=2;if(i>0){var a=e._texture.width,s=e._texture.height,l=o*(a+r.width+e._borderWidthInPixels),u=o*(s+r.height+e._borderWidthInPixels),c=a/l,h=s/u,m=new d(new t(a+e._borderWidthInPixels,0),new t(l,s)),p=new d(new t,new t(l,s),e._root,m),f=new d(new t(0,s+e._borderWidthInPixels),new t(l,u)),v=new d(new t,new t(l,u),p,f);e._root=v;for(var g=0;g<e._textureCoordinates.length;g++){var _=e._textureCoordinates[g];n(_)&&(_.x*=c,_.y*=h,_.width*=c,_.height*=h)}var y=e._context.createTexture2D({width:l,height:u,pixelFormat:e._pixelFormat}),C=e._context.createFramebuffer({colorTextures:[e._texture]});C._bind(),y.copyFromFramebuffer(0,0,0,0,a,s),C._unBind(),C.destroy(),e._texture=y}else{var w=o*(r.width+e._borderWidthInPixels),S=o*(r.height+e._borderWidthInPixels);e._texture=e._texture&&e._texture.destroy(),e._texture=e._context.createTexture2D({width:w,height:S,pixelFormat:e._pixelFormat}),e._root=new d(new t,new t(w,S))}}function p(e,r,i){if(!n(r))return void 0;if(!n(r.childNode1)&&!n(r.childNode2)){if(n(r.imageIndex))return void 0;var o=r.topRight.x-r.bottomLeft.x,a=r.topRight.y-r.bottomLeft.y,s=o-i.width,l=a-i.height;if(0>s||0>l)return void 0;if(0===s&&0===l)return r;if(s>l){r.childNode1=new d(new t(r.bottomLeft.x,r.bottomLeft.y),new t(r.bottomLeft.x+i.width,r.topRight.y));var u=r.bottomLeft.x+i.width+e._borderWidthInPixels;u<r.topRight.x&&(r.childNode2=new d(new t(u,r.bottomLeft.y),new t(r.topRight.x,r.topRight.y)))}else{r.childNode1=new d(new t(r.bottomLeft.x,r.bottomLeft.y),new t(r.topRight.x,r.bottomLeft.y+i.height));var c=r.bottomLeft.y+i.height+e._borderWidthInPixels;c<r.topRight.y&&(r.childNode2=new d(new t(r.bottomLeft.x,c),new t(r.topRight.x,r.topRight.y)))}return p(e,r.childNode1,i)}return p(e,r.childNode1,i)||p(e,r.childNode2,i)}function f(t,i,o){var a=p(t,t._root,i);if(n(a)){a.imageIndex=o;var s=t._texture.width,l=t._texture.height,u=a.topRight.x-a.bottomLeft.x,c=a.topRight.y-a.bottomLeft.y,h=a.bottomLeft.x/s,d=a.bottomLeft.y/l,v=u/s,g=c/l;t._textureCoordinates[o]=new e(h,d,v,g),t._texture.copyFrom(i,a.bottomLeft.x,a.bottomLeft.y)}else m(t,i),f(t,i,o);t._guid=r()}var v=new t(16,16),g=function(e){e=i(e,i.EMPTY_OBJECT);var n=i(e.borderWidthInPixels,1),o=i(e.initialSize,v);this._context=e.context,this._pixelFormat=i(e.pixelFormat,u.RGBA),this._borderWidthInPixels=n,this._textureCoordinates=[],this._guid=r(),this._idHash={},this._texture=this._context.createTexture2D({width:o.x,height:o.y,pixelFormat:this._pixelFormat}),this._root=new d(new t,new t(o.x,o.y))};return o(g.prototype,{borderWidthInPixels:{get:function(){return this._borderWidthInPixels}},textureCoordinates:{get:function(){return this._textureCoordinates}},texture:{get:function(){return this._texture}},numberOfImages:{get:function(){return this._textureCoordinates.length}},guid:{get:function(){return this._guid}}}),g.prototype.addImage=function(e,t){var r=this._idHash[e];if(n(r))return r;"function"==typeof t?t=t(e):"string"==typeof t&&(t=l(t));var i=this;return r=h(t,function(e){if(i.isDestroyed())return-1;var t=i.numberOfImages;return f(i,e,t),t}),this._idHash[e]=r,r},g.prototype.addSubRegion=function(t,i){var o=this._idHash[t];if(!n(o))throw new c('image with id "'+t+'" not found in the atlas.');var a=this;return h(o,function(t){if(-1===t)return-1;var n=a._texture.width,o=a._texture.height,s=a.numberOfImages,l=a._textureCoordinates[t],u=l.x+i.x/n,c=l.y+i.y/o,h=i.width/n,d=i.height/o;return a._textureCoordinates.push(new e(u,c,h,d)),a._guid=r(),s})},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),a(this)},g}),r("Scene/BillboardCollection",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EncodedCartesian3","../Core/IndexDatatype","../Core/Matrix4","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Renderer/VertexArrayFacade","../Shaders/BillboardCollectionFS","../Shaders/BillboardCollectionVS","./Billboard","./BlendingState","./HorizontalOrigin","./Pass","./SceneMode","./TextureAtlas"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b){"use strict";function T(e){if(e._billboardsRemoved){e._billboardsRemoved=!1;for(var t=[],r=e._billboards,i=r.length,n=0,o=0;i>n;++n){var a=r[n];a&&(a._index=o++,t.push(a))}e._billboards=t}}function x(e){var t=16384,r=e.cache.billboardCollection_directionsVertexBuffer;if(a(r))return r;for(var i=new Uint8Array(2*4*t),n=0,o=0;t>n;++n)i[o++]=0,i[o++]=0,i[o++]=255,i[o++]=0,i[o++]=255,i[o++]=255,i[o++]=0,i[o++]=255;return r=e.createVertexBuffer(i,m.STATIC_DRAW),r.vertexArrayDestroyable=!1,e.cache.billboardCollection_directionsVertexBuffer=r,r}function P(e){var t=16384,r=e.cache.billboardCollection_indexBuffer;if(a(r))return r;for(var i=6*t,n=new Uint16Array(i),o=0,s=0;i>o;o+=6,s+=4)n[o]=s,n[o+1]=s+1,n[o+2]=s+2,n[o+3]=s+0,n[o+4]=s+2,n[o+5]=s+3;return r=e.createIndexBuffer(n,m.STATIC_DRAW,h.UNSIGNED_SHORT),r.vertexArrayDestroyable=!1,e.cache.billboardCollection_indexBuffer=r,r}function A(e,t,r){var i=x(e);return new v(e,[{index:ot.positionHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,usage:r[q]},{index:ot.positionLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,usage:r[q]},{index:ot.pixelOffsetAndTranslate,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[j]},{index:ot.eyeOffsetAndScale,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[Q]},{index:ot.textureCoordinatesAndImageSize,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[J]},{index:ot.pickColor,componentsPerAttribute:4,normalize:!0,componentDatatype:n.UNSIGNED_BYTE,usage:m.STATIC_DRAW,purpose:lt},{index:ot.color,componentsPerAttribute:4,normalize:!0,componentDatatype:n.UNSIGNED_BYTE,usage:r[K],purpose:st},{index:ot.originAndShow,componentsPerAttribute:3,componentDatatype:n.BYTE,usage:r[H]},{index:ot.direction,vertexBuffer:i,componentsPerAttribute:2,normalize:!0,componentDatatype:n.UNSIGNED_BYTE},{index:ot.rotationAndAlignedAxis,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[$]},{index:ot.scaleByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[tt]},{index:ot.translucencyByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[rt]},{index:ot.pixelOffsetScaleByDistance,componentsPerAttribute:4,componentDatatype:n.FLOAT,usage:r[it]}],4*t)}function M(t,r,i,n,o){var a=4*o._index,s=o._getActualPosition();t._mode===E.SCENE3D&&(e.expand(t._baseVolume,s,t._baseVolume),t._boundingVolumeDirty=!0),c.fromCartesian(s,ct);var l=n[at],u=l[ot.positionHigh],h=ct.high;u(a+0,h.x,h.y,h.z),u(a+1,h.x,h.y,h.z),u(a+2,h.x,h.y,h.z),u(a+3,h.x,h.y,h.z);var d=l[ot.positionLow],m=ct.low;d(a+0,m.x,m.y,m.z),d(a+1,m.x,m.y,m.z),d(a+2,m.x,m.y,m.z),d(a+3,m.x,m.y,m.z)}function D(e,t,r,i,n){var o=4*n._index,a=n.pixelOffset,s=n._translate;e._maxPixelOffset=Math.max(e._maxPixelOffset,Math.abs(a.x+s.x),Math.abs(-a.y+s.y));var l=i[at],u=l[ot.pixelOffsetAndTranslate];u(o+0,a.x,-a.y,s.x,s.y),u(o+1,a.x,-a.y,s.x,s.y),u(o+2,a.x,-a.y,s.x,s.y),u(o+3,a.x,-a.y,s.x,s.y)}function I(e,t,r,i,n){var o=4*n._index,a=n.eyeOffset,s=n.scale;e._maxEyeOffset=Math.max(e._maxEyeOffset,Math.abs(a.x),Math.abs(a.y),Math.abs(a.z)),e._maxScale=Math.max(e._maxScale,s);var l=i[at],u=l[ot.eyeOffsetAndScale];u(o+0,a.x,a.y,a.z,s),u(o+1,a.x,a.y,a.z,s),u(o+2,a.x,a.y,a.z,s),u(o+3,a.x,a.y,a.z,s)}function R(e,t,r,n,o){var a=4*o._index,s=n[lt],l=s[ot.pickColor],u=o.getPickId(t).color,c=i.floatToByte(u.red),h=i.floatToByte(u.green),d=i.floatToByte(u.blue),m=i.floatToByte(u.alpha);l(a+0,c,h,d,m),l(a+1,c,h,d,m),l(a+2,c,h,d,m),l(a+3,c,h,d,m)}function O(e,t,r,n,o){var a=4*o._index,s=n[st],l=s[ot.color],u=o.color,c=i.floatToByte(u.red),h=i.floatToByte(u.green),d=i.floatToByte(u.blue),m=i.floatToByte(u.alpha);l(a+0,c,h,d,m),l(a+1,c,h,d,m),l(a+2,c,h,d,m),l(a+3,c,h,d,m)}function L(e,t,r,i,n){var o=4*n._index,a=n.horizontalOrigin,s=n.verticalOrigin,l=n.show;0===n.color.alpha&&(l=!1),e._allHorizontalCenter=e._allHorizontalCenter&&a===w.CENTER;var u=i[at],c=u[ot.originAndShow];c(o+0,a,s,l),c(o+1,a,s,l),c(o+2,a,s,l),c(o+3,a,s,l)}function N(e,t,r,i,n){var a=4*n._index,s=0,l=0,u=0,c=0,h=n._imageIndex;if(-1!==h){var d=r[h];s=d.x,l=d.y,u=d.width,c=d.height}var m=s+u,p=l+c,f=e._textureAtlas.texture.dimensions,v=.5*o(n.width,f.x*u),g=.5*o(n.height,f.y*c);e._maxSize=Math.max(e._maxSize,v,g);var _=i[at],y=_[ot.textureCoordinatesAndImageSize];y(a+0,s,l,v,g),y(a+1,m,l,v,g),y(a+2,m,p,v,g),y(a+3,s,p,v,g)}function B(e,t,i,n,o){var a=4*o._index,s=o.rotation,l=o.alignedAxis;0===s&&r.equals(l,r.ZERO)||(e._shaderRotation=!0);var u=l.x,c=l.y,h=l.z,d=n[at],m=d[ot.rotationAndAlignedAxis];m(a+0,s,u,c,h),m(a+1,s,u,c,h),m(a+2,s,u,c,h),m(a+3,s,u,c,h)}function F(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.scaleByDistance],u=0,c=1,h=1,d=1,m=n.scaleByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderScaleByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function z(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.translucencyByDistance],u=0,c=1,h=1,d=1,m=n.translucencyByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderTranslucencyByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function V(e,t,r,i,n){var o=4*n._index,s=i[at],l=s[ot.pixelOffsetScaleByDistance],u=0,c=1,h=1,d=1,m=n.pixelOffsetScaleByDistance;a(m)&&(u=m.near,c=m.nearValue,h=m.far,d=m.farValue,(1!==c||1!==d)&&(e._shaderPixelOffsetScaleByDistance=!0)),l(o+0,u,c,h,d),l(o+1,u,c,h,d),l(o+2,u,c,h,d),l(o+3,u,c,h,d)}function k(e,t,r,i,n){M(e,t,r,i,n),D(e,t,r,i,n),I(e,t,r,i,n),R(e,t,r,i,n),O(e,t,r,i,n),L(e,t,r,i,n),N(e,t,r,i,n),B(e,t,r,i,n),F(e,t,r,i,n),z(e,t,r,i,n),V(e,t,r,i,n)}function U(t,r,i,n,o,s){var l;n.mode===E.SCENE3D?(l=t._baseVolume,t._boundingVolumeDirty=!0):l=t._baseVolume2D;for(var u=[],c=0;i>c;++c){var h=r[c],d=h.position,m=y._computeActualPosition(d,n,o);a(m)&&(h._setActualPosition(m),s?u.push(m):e.expand(l,m,l))}s&&e.fromPoints(u,l)}function W(e,t){var r=t.mode,i=e._billboards,n=e._billboardsToUpdate,o=e._modelMatrix;e._createVertexArray||e._mode!==r||r!==E.SCENE3D&&!d.equals(o,e.modelMatrix)?(e._mode=r,d.clone(e.modelMatrix,o),e._createVertexArray=!0,(r===E.SCENE3D||r===E.SCENE2D||r===E.COLUMBUS_VIEW)&&U(e,i,i.length,t,o,!0)):r===E.MORPHING?U(e,i,i.length,t,o,!0):(r===E.SCENE2D||r===E.COLUMBUS_VIEW)&&U(e,n,e._billboardsToUpdateIndex,t,o,!1)}function G(e,t,i,n){var o=i.camera,a=o.frustum,s=r.subtract(o.positionWC,n.center,dt),l=r.multiplyByScalar(o.directionWC,r.dot(s,o.directionWC),mt),u=Math.max(0,r.magnitude(l)-n.radius);ht.x=t.drawingBufferWidth,ht.y=t.drawingBufferHeight;var c=a.getPixelSize(ht,u),h=Math.max(c.x,c.y),d=2*h*e._maxScale*e._maxSize;e._allHorizontalCenter&&(d*=.5);var m=h*e._maxPixelOffset+e._maxEyeOffset;n.radius+=d+m}var H=y.SHOW_INDEX,q=y.POSITION_INDEX,j=y.PIXEL_OFFSET_INDEX,Y=y.EYE_OFFSET_INDEX,X=y.HORIZONTAL_ORIGIN_INDEX,Z=y.VERTICAL_ORIGIN_INDEX,Q=y.SCALE_INDEX,J=y.IMAGE_INDEX_INDEX,K=y.COLOR_INDEX,$=y.ROTATION_INDEX,et=y.ALIGNED_AXIS_INDEX,tt=y.SCALE_BY_DISTANCE_INDEX,rt=y.TRANSLUCENCY_BY_DISTANCE_INDEX,it=y.PIXEL_OFFSET_SCALE_BY_DISTANCE_INDEX,nt=y.NUMBER_OF_PROPERTIES,ot={positionHigh:0,positionLow:1,pixelOffsetAndTranslate:2,eyeOffsetAndScale:3,textureCoordinatesAndImageSize:4,originAndShow:5,direction:6,pickColor:7,color:7,rotationAndAlignedAxis:8,scaleByDistance:9,translucencyByDistance:10,pixelOffsetScaleByDistance:11},at="all",st="color",lt="pick",ut=function(t){t=o(t,o.EMPTY_OBJECT),this._textureAtlas=void 0,this._textureAtlasGUID=void 0,this._destroyTextureAtlas=!0,this._sp=void 0,this._rs=void 0,this._vaf=void 0,this._spPick=void 0,this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!1,this._shaderRotation=!1,this._compiledShaderRotation=!1,this._compiledShaderRotationPick=!1,this._shaderScaleByDistance=!1,this._compiledShaderScaleByDistance=!1,this._compiledShaderScaleByDistancePick=!1,this._shaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistance=!1,this._compiledShaderTranslucencyByDistancePick=!1,this._shaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistance=!1,this._compiledShaderPixelOffsetScaleByDistancePick=!1,this._propertiesChanged=new Uint32Array(nt),this._maxSize=0,this._maxEyeOffset=0,this._maxScale=1,this._maxPixelOffset=0,this._allHorizontalCenter=!0,this._baseVolume=new e,this._baseVolumeWC=new e,this._baseVolume2D=new e,this._boundingVolume=new e,this._boundingVolumeDirty=!1,this._colorCommands=[],this._pickCommands=[],this.modelMatrix=d.clone(o(t.modelMatrix,d.IDENTITY)),this._modelMatrix=d.clone(d.IDENTITY),this.debugShowBoundingVolume=o(t.debugShowBoundingVolume,!1),this._mode=E.SCENE3D,this._buffersUsage=[m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW,m.STATIC_DRAW];var r=this;this._uniforms={u_atlas:function(){return r._textureAtlas.texture}}};s(ut.prototype,{length:{get:function(){return T(this),this._billboards.length}},textureAtlas:{get:function(){return this._textureAtlas},set:function(e){this._textureAtlas!==e&&(this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._textureAtlas=e,this._createVertexArray=!0)}},destroyTextureAtlas:{get:function(){return this._destroyTextureAtlas},set:function(e){this._destroyTextureAtlas=e}}}),ut.prototype.add=function(e){var t=new y(e,this);return t._index=this._billboards.length,this._billboards.push(t),this._createVertexArray=!0,t},ut.prototype.remove=function(e){return this.contains(e)?(this._billboards[e._index]=null,this._billboardsRemoved=!0,this._createVertexArray=!0,e._destroy(),!0):!1},ut.prototype.removeAll=function(){this._destroyBillboards(),this._billboards=[],this._billboardsToUpdate=[],this._billboardsToUpdateIndex=0,this._billboardsRemoved=!1,this._createVertexArray=!0},ut.prototype._updateBillboard=function(e,t){e._dirty||(this._billboardsToUpdate[this._billboardsToUpdateIndex++]=e),++this._propertiesChanged[t]},ut.prototype.contains=function(e){return a(e)&&e._billboardCollection===this},ut.prototype.get=function(e){return T(this),this._billboards[e]},ut.prototype.computeNewBuffersUsage=function(){for(var e=this._buffersUsage,t=!1,r=this._propertiesChanged,i=0;nt>i;++i){var n=0===r[i]?m.STATIC_DRAW:m.STREAM_DRAW;t=t||e[i]!==n,e[i]=n}return t};var ct=new c,ht=new t,dt=new r,mt=new r;return ut.prototype.update=function(t,r,i){var n=this._billboards,o=n.length,s=this._textureAtlas;if(!a(s)){s=this._textureAtlas=new b({context:t});for(var l=0;o>l;++l)n[l]._loadImage()}var u=s.textureCoordinates;if(0!==u.length){T(this),W(this,r),n=this._billboards,o=n.length;var c=this._billboardsToUpdate,h=this._billboardsToUpdateIndex,m=this._propertiesChanged,v=s.guid,y=this._createVertexArray||this._textureAtlasGUID!==v;this._textureAtlasGUID=v;var w,x=r.passes,R=x.pick;if(y||!R&&this.computeNewBuffersUsage()){this._createVertexArray=!1;for(var U=0;nt>U;++U)m[U]=0;if(this._vaf=this._vaf&&this._vaf.destroy(),o>0){this._vaf=A(t,o,this._buffersUsage),w=this._vaf.writers;for(var at=0;o>at;++at){var ut=this._billboards[at];ut._dirty=!1,k(this,t,u,w,ut)}this._vaf.commit(P(t))}this._billboardsToUpdateIndex=0}else if(h>0){var ct=[];if(m[q]&&ct.push(M),m[j]&&ct.push(D),(m[Y]||m[Q])&&ct.push(I),m[J]&&ct.push(N),m[K]&&ct.push(O),(m[X]||m[Z]||m[H])&&ct.push(L),(m[$]||m[et])&&ct.push(B),m[tt]&&ct.push(F),m[rt]&&ct.push(z),m[it]&&ct.push(V),w=this._vaf.writers,h/o>.1){for(var ht=0;h>ht;++ht){var dt=c[ht];
dt._dirty=!1;for(var mt=0;mt<ct.length;++mt)ct[mt](this,t,u,w,dt)}this._vaf.commit(P(t))}else{for(var pt=0;h>pt;++pt){var ft=c[pt];ft._dirty=!1;for(var vt=0;vt<ct.length;++vt)ct[vt](this,t,u,w,ft);this._vaf.subCommit(4*ft._index,4)}this._vaf.endSubCommits()}this._billboardsToUpdateIndex=0}if(h>1.5*o&&(c.length=o),a(this._vaf)&&a(this._vaf.vaByPurpose)){this._boundingVolumeDirty&&(this._boundingVolumeDirty=!1,e.transform(this._baseVolume,this.modelMatrix,this._baseVolumeWC));var gt,_t=d.IDENTITY;r.mode===E.SCENE3D?(_t=this.modelMatrix,gt=e.clone(this._baseVolumeWC,this._boundingVolume)):gt=e.clone(this._baseVolume2D,this._boundingVolume),G(this,t,r,gt);var yt,Ct,wt,St;if(x.render){var Et=this._colorCommands;for(a(this._rs)||(this._rs=t.createRenderState({depthTest:{enabled:!0},blending:C.ALPHA_BLEND})),(!a(this._sp)||this._shaderRotation&&!this._compiledShaderRotation||this._shaderScaleByDistance&&!this._compiledShaderScaleByDistance||this._shaderTranslucencyByDistance&&!this._compiledShaderTranslucencyByDistance||this._shaderPixelOffsetScaleByDistance&&!this._compiledShaderPixelOffsetScaleByDistance)&&(this._sp=t.replaceShaderProgram(this._sp,p({defines:[this._shaderRotation?"ROTATION":"",this._shaderScaleByDistance?"EYE_DISTANCE_SCALING":"",this._shaderTranslucencyByDistance?"EYE_DISTANCE_TRANSLUCENCY":"",this._shaderPixelOffsetScaleByDistance?"EYE_DISTANCE_PIXEL_OFFSET":""],sources:[_]}),g,ot),this._compiledShaderRotation=this._shaderRotation,this._compiledShaderScaleByDistance=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistance=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistance=this._shaderPixelOffsetScaleByDistance),yt=this._vaf.vaByPurpose[st],Ct=yt.length,Et.length=Ct,St=0;Ct>St;++St)wt=Et[St],a(wt)||(wt=Et[St]=new f({pass:S.OPAQUE,owner:this})),wt.boundingVolume=gt,wt.modelMatrix=_t,wt.count=yt[St].indicesCount,wt.shaderProgram=this._sp,wt.uniformMap=this._uniforms,wt.vertexArray=yt[St].va,wt.renderState=this._rs,wt.debugShowBoundingVolume=this.debugShowBoundingVolume,i.push(wt)}if(R){var bt=this._pickCommands;for((!a(this._spPick)||this._shaderRotation&&!this._compiledShaderRotationPick||this._shaderScaleByDistance&&!this._compiledShaderScaleByDistancePick||this._shaderTranslucencyByDistance&&!this._compiledShaderTranslucencyByDistancePick||this._shaderPixelOffsetScaleByDistance&&!this._compiledShaderPixelOffsetScaleByDistancePick)&&(this._spPick=t.replaceShaderProgram(this._spPick,p({defines:["RENDER_FOR_PICK",this._shaderRotation?"ROTATION":"",this._shaderScaleByDistance?"EYE_DISTANCE_SCALING":"",this._shaderTranslucencyByDistance?"EYE_DISTANCE_TRANSLUCENCY":"",this._shaderPixelOffsetScaleByDistance?"EYE_DISTANCE_PIXEL_OFFSET":""],sources:[_]}),p({defines:["RENDER_FOR_PICK"],sources:[g]}),ot),this._compiledShaderRotationPick=this._shaderRotation,this._compiledShaderScaleByDistancePick=this._shaderScaleByDistance,this._compiledShaderTranslucencyByDistancePick=this._shaderTranslucencyByDistance,this._compiledShaderPixelOffsetScaleByDistancePick=this._shaderPixelOffsetScaleByDistance),yt=this._vaf.vaByPurpose[lt],Ct=yt.length,bt.length=Ct,St=0;Ct>St;++St)wt=bt[St],a(wt)||(wt=bt[St]=new f({pass:S.OPAQUE,owner:this})),wt.boundingVolume=gt,wt.modelMatrix=_t,wt.count=yt[St].indicesCount,wt.shaderProgram=this._spPick,wt.uniformMap=this._uniforms,wt.vertexArray=yt[St].va,wt.renderState=this._rs,i.push(wt)}}}},ut.prototype.isDestroyed=function(){return!1},ut.prototype.destroy=function(){return this._textureAtlas=this._destroyTextureAtlas&&this._textureAtlas&&this._textureAtlas.destroy(),this._sp=this._sp&&this._sp.destroy(),this._spPick=this._spPick&&this._spPick.destroy(),this._vaf=this._vaf&&this._vaf.destroy(),this._destroyBillboards(),l(this)},ut.prototype._destroyBillboards=function(){for(var e=this._billboards,t=e.length,r=0;t>r;++r)e[r]&&e[r]._destroy()},ut}),r("DataSources/Property",["../Core/defined","../Core/defineProperties","../Core/DeveloperError"],function(e,t,r){"use strict";var i=function(){r.throwInstantiationError()};return t(i.prototype,{isConstant:{get:r.throwInstantiationError},definitionChanged:{get:r.throwInstantiationError}}),i.prototype.getValue=r.throwInstantiationError,i.prototype.equals=r.throwInstantiationError,i.equals=function(t,r){return t===r||e(t)&&t.equals(r)},i.arrayEquals=function(t,r){if(t===r)return!0;if(!e(t)||!e(r)||t.length!==r.length)return!1;for(var n=t.length,o=0;n>o;o++)if(!i.equals(t[o],r[o]))return!1;return!0},i.isConstant=function(t){return!e(t)||t.isConstant},i.getValueOrUndefined=function(t,r,i){return e(t)?t.getValue(r,i):void 0},i.getValueOrDefault=function(t,r,i,n){var o;return e(t)&&(o=t.getValue(r,n)),e(o)||(o=i),o},i.getValueOrClonedDefault=function(t,r,i,n){var o;return e(t)&&(o=t.getValue(r,n)),e(o)||(o=i.clone(o)),o},i}),r("DataSources/BillboardVisualizer",["../Core/AssociativeArray","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/BillboardCollection","../Scene/HorizontalOrigin","../Scene/VerticalOrigin","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,r){var i=e._billboardVisualizerIndex;if(n(i)){var o=t.get(i);o.show=!1,o.image=void 0,e._billboardVisualizerIndex=void 0,r.push(i)}}var m=i.WHITE,p=r.ZERO,f=t.ZERO,v=1,g=0,_=r.ZERO,y=u.CENTER,C=c.CENTER,w=new r,S=new i,E=new r,b=new t,T=new s,x=new s,P=new s,A=function(t,r){var i=new l;t.primitives.add(i),r.collectionChanged.addEventListener(A.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._billboardCollection=i,this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return A.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,r=this._billboardCollection,i=this._unusedIndexes,o=0,a=t.length;a>o;o++){var s,l,u=t[o],c=u._billboard,A=u._billboardVisualizerIndex,M=u.isAvailable(e)&&h.getValueOrDefault(c._show,e,!0);if(M&&(w=h.getValueOrUndefined(u._position,e,w),s=h.getValueOrUndefined(c._image,e),M=n(w)&&n(s)),M){if(n(A))l=r.get(A);else{var D=i.length;D>0?(A=i.pop(),l=r.get(A)):(A=r.length,l=r.add()),u._billboardVisualizerIndex=A,l.id=u,l.image=void 0}l.show=M,l.image=s,l.position=w,l.color=h.getValueOrDefault(c._color,e,m,S),l.eyeOffset=h.getValueOrDefault(c._eyeOffset,e,p,E),l.pixelOffset=h.getValueOrDefault(c._pixelOffset,e,f,b),l.scale=h.getValueOrDefault(c._scale,e,v),l.rotation=h.getValueOrDefault(c._rotation,e,g),l.alignedAxis=h.getValueOrDefault(c._alignedAxis,e,_),l.horizontalOrigin=h.getValueOrDefault(c._horizontalOrigin,e,y),l.verticalOrigin=h.getValueOrDefault(c._verticalOrigin,e,C),l.width=h.getValueOrUndefined(c._width,e),l.height=h.getValueOrUndefined(c._height,e),l.scaleByDistance=h.getValueOrUndefined(c._scaleByDistance,e,T),l.translucencyByDistance=h.getValueOrUndefined(c._translucencyByDistance,e,x),l.pixelOffsetScaleByDistance=h.getValueOrUndefined(c._pixelOffsetScaleByDistance,e,P)}else d(u,r,i)}return!0},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(A.prototype._onCollectionChanged,this);for(var e=this._entitiesToVisualize.values,t=e.length,r=0;t>r;r++)e[r]._billboardVisualizerIndex=void 0;return this._scene.primitives.remove(this._billboardCollection),o(this)},A.prototype._onCollectionChanged=function(e,t,r,i){var o,a,s=this._billboardCollection,l=this._unusedIndexes,u=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],n(a._billboard)&&n(a._position)&&u.set(a.id,a);for(o=i.length-1;o>-1;o--)a=i[o],n(a._billboard)&&n(a._position)?u.set(a.id,a):(d(a,s,l),u.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],d(a,s,l),u.remove(a.id)},A}),r("DataSources/ConstantProperty",["../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/isArray"],function(e,t,r,i){"use strict";var n=function(e){this._value=void 0,this._simple=!0,this._definitionChanged=new r,this.setValue(e)};return e(n.prototype,{isConstant:{value:!0},definitionChanged:{get:function(){return this._definitionChanged}}}),n.prototype.getValue=function(e,t){return this._simple?this._value:this._value.clone(t)},n.prototype.setValue=function(e){var t=this._value,r=this._simple;(r&&t!==e||!r&&!t.equals(e))&&(r="object"!=typeof e||i(e),this._value=r?e:e.clone(),this._simple=r,this._definitionChanged.raiseEvent(this))},n.prototype.equals=function(e){return this===e||e instanceof n&&(this._simple&&this._value===e._value||!this._simple&&this._value.equals(e._value))},n}),r("DataSources/ColorMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./ConstantProperty","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(e){this._definitionChanged=new n,this._color=void 0,this._colorSubscription=void 0,this.color=e};return l.fromColor=function(e){return new l(new o(e))},r(l.prototype,{isConstant:{get:function(){return s.isConstant(this._color)}},definitionChanged:{get:function(){return this._definitionChanged}},color:a("color")}),l.prototype.getType=function(){return"Color"},l.prototype.getValue=function(r,i){return t(i)||(i={}),i.color=s.getValueOrClonedDefault(this._color,r,e.WHITE,i.color),i},l.prototype.equals=function(e){return this===e||e instanceof l&&s.equals(this._color,e._color)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/Entity",["../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){r(t)||(t=e()),this._availability=void 0,this._id=t,this._definitionChanged=new o,this._name=void 0,this._parent=void 0,this._propertyNames=["billboard","description","ellipse","ellipsoid","label","model","orientation","path","point","polygon","polyline","position","rectangle","viewFrom","wall"],this._billboard=void 0,this._billboardSubscription=void 0,this._description=void 0,this._descriptionSubscription=void 0,this._ellipse=void 0,this._ellipseSubscription=void 0,this._ellipsoid=void 0,this._ellipsoidSubscription=void 0,this._label=void 0,this._labelSubscription=void 0,this._model=void 0,this._modelSubscription=void 0,this._orientation=void 0,this._orientationSubscription=void 0,this._path=void 0,this._pathSubscription=void 0,this._point=void 0,this._pointSubscription=void 0,this._polygon=void 0,this._polygonSubscription=void 0,this._polyline=void 0,this._polylineSubscription=void 0,this._position=void 0,this._positionSubscription=void 0,this._rectangle=void 0,this._rectangleSubscription=void 0,this._viewFrom=void 0,this._viewFromSubscription=void 0,this._wall=void 0,this._wallSubscription=void 0};return i(s.prototype,{availability:a("availability"),id:{get:function(){return this._id}},definitionChanged:{get:function(){return this._definitionChanged}},name:{configurable:!1,get:function(){return this._name},set:function(e){var t=this._name;t!==e&&(this._name=e,this._definitionChanged.raiseEvent(this,"name",e,t))}},parent:a("parent"),propertyNames:{get:function(){return this._propertyNames}},billboard:a("billboard"),description:a("description"),ellipse:a("ellipse"),ellipsoid:a("ellipsoid"),label:a("label"),model:a("model"),orientation:a("orientation"),path:a("path"),point:a("point"),polygon:a("polygon"),polyline:a("polyline"),position:a("position"),rectangle:a("rectangle"),viewFrom:a("viewFrom"),wall:a("wall")}),s.prototype.isAvailable=function(e){var t=this._availability;return!r(t)||t.contains(e)},s.prototype.addProperty=function(e){var t=this._propertyNames;t.push(e),Object.defineProperty(this,e,a(e,!0))},s.prototype.removeProperty=function(e){this._propertyNames,this._propertyNames.push(e),delete this[e]},s.prototype.merge=function(e){this.name=t(this.name,e.name),this.availability=t(e.availability,this.availability);for(var i=this._propertyNames,n=i.length,o=0;n>o;o++){var a=i[o],s=this[a],l=e[a];r(l)&&(r(s)?r(s.merge)&&s.merge(l):this[a]=r(l.merge)&&r(l.clone)?l.clone():l)}},s}),r("DataSources/EntityCollection",["../Core/AssociativeArray","../Core/createGuid","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Iso8601","../Core/JulianDate","../Core/RuntimeError","../Core/TimeInterval","./Entity"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){if(0===e._suspendCount){var t=e._addedEntities,r=e._removedEntities,i=e._changedEntities;(0!==i.length||0!==t.length||0!==r.length)&&(e._collectionChanged.raiseEvent(e,t.values,r.values,i.values),t.removeAll(),r.removeAll(),i.removeAll())}}var d=function(){this._entities=new e,this._addedEntities=new e,this._removedEntities=new e,this._changedEntities=new e,this._suspendCount=0,this._collectionChanged=new o,this._id=t()};return d.prototype.suspendEvents=function(){this._suspendCount++},d.prototype.resumeEvents=function(){this._suspendCount--,h(this)},d.collectionChangedEventCallback=void 0,i(d.prototype,{collectionChanged:{get:function(){return this._collectionChanged}},id:{get:function(){return this._id}},entities:{get:function(){return this._entities.values}}}),d.prototype.computeAvailability=function(){for(var e=a.MAXIMUM_VALUE,t=a.MINIMUM_VALUE,i=this._entities.values,n=0,o=i.length;o>n;n++){var l=i[n],c=l.availability;if(r(c)){var h=c.start,d=c.stop;s.lessThan(h,e)&&!h.equals(a.MINIMUM_VALUE)&&(e=h),s.greaterThan(d,t)&&!d.equals(a.MAXIMUM_VALUE)&&(t=d)}}return a.MAXIMUM_VALUE.equals(e)&&(e=a.MINIMUM_VALUE),a.MINIMUM_VALUE.equals(t)&&(t=a.MAXIMUM_VALUE),new u({start:e,stop:t})},d.prototype.add=function(e){var t=e.id,r=this._entities;if(r.contains(t))throw new l("An entity with id "+t+" already exists in this collection.");r.set(t,e),this._removedEntities,this._removedEntities.remove(t)||this._addedEntities.set(t,e),e.definitionChanged.addEventListener(d.prototype._onEntityDefinitionChanged,this),h(this)},d.prototype.remove=function(e){return this.removeById(e.id)},d.prototype.removeById=function(e){var t=this._entities,r=t.get(e);return this._entities.remove(e)?(this._addedEntities.remove(e)||(this._removedEntities.set(e,r),this._changedEntities.remove(e)),this._entities.remove(e),r.definitionChanged.removeEventListener(d.prototype._onEntityDefinitionChanged,this),h(this),!0):!1},d.prototype.removeAll=function(){for(var e=this._entities,t=e.length,i=e.values,n=this._addedEntities,o=this._removedEntities,a=0;t>a;a++){var s=i[a],l=s.id,u=n.get(l);r(u)||(s.definitionChanged.removeEventListener(d.prototype._onEntityDefinitionChanged,this),o.set(l,s))}e.removeAll(),n.removeAll(),this._changedEntities.removeAll(),h(this)},d.prototype.getById=function(e){return this._entities.get(e)},d.prototype.getOrCreateEntity=function(e){var t=this._entities.get(e);return r(t)||(t=new c(e),this.add(t)),t},d.prototype._onEntityDefinitionChanged=function(e){var t=e.id;this._addedEntities.contains(t)||this._changedEntities.set(t,e),h(this)},d}),r("DataSources/CompositeEntityCollection",["../Core/createGuid","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Math","./Entity","./EntityCollection"],function(e,t,r,i,n,o,a){"use strict";function s(e){for(var t=e.propertyNames,r=t.length,i=0;r>i;i++)e[t[i]]=void 0}function l(e,t,r,i){m[0]=r,m[1]=i.id,t[JSON.stringify(m)]=i.definitionChanged.addEventListener(p.prototype._onDefinitionChanged,e)}function u(e,t,r,i){m[0]=r,m[1]=i.id;var n=JSON.stringify(m);t[n](),t[n]=void 0}function c(e){if(e._shouldRecomposite=!0,0===e._suspendCount){var r,i,n,c,h,d,m=e._collections,f=m.length,v=e._collectionsCopy,g=v.length,_=e._composite,y=new a,C=e._eventHash;for(r=0;g>r;r++)for(h=v[r],h.collectionChanged.removeEventListener(p.prototype._onCollectionChanged,e),n=h.entities,d=h.id,c=n.length-1;c>-1;c--)i=n[c],u(e,C,d,i);for(r=f-1;r>=0;r--)for(h=m[r],h.collectionChanged.addEventListener(p.prototype._onCollectionChanged,e),n=h.entities,d=h.id,c=n.length-1;c>-1;c--){i=n[c],l(e,C,d,i);var w=y.getById(i.id);t(w)||(w=_.getById(i.id),t(w)?s(w):w=new o(i.id),y.add(w)),w.merge(i)}e._collectionsCopy=m.slice(0),_.suspendEvents(),_.removeAll();var S=y.entities;for(r=0;r<S.length;r++)_.add(S[r]);_.resumeEvents()}}function h(e,t){var r=e.indexOf(t);return r}function d(e,t,r){var i=e._collections;if(t=n.clamp(t,0,i.length-1),r=n.clamp(r,0,i.length-1),t!==r){var o=i[t];i[t]=i[r],i[r]=o,c(e)}}var m=new Array(2),p=function(r){this._composite=new a,this._suspendCount=0,this._collections=t(r)?r.slice():[],this._collectionsCopy=[],this._id=e(),this._eventHash={},c(this),this._shouldRecomposite=!1};return r(p.prototype,{collectionChanged:{get:function(){return this._composite._collectionChanged}},id:{get:function(){return this._id}},entities:{get:function(){return this._composite.entities}}}),p.prototype.addCollection=function(e,r){var i=t(r);i?this._collections.splice(r,0,e):(r=this._collections.length,this._collections.push(e)),c(this)},p.prototype.removeCollection=function(e){var t=this._collections.indexOf(e);return-1!==t?(this._collections.splice(t,1),c(this),!0):!1},p.prototype.removeAllCollections=function(){this._collections.length=0,c(this)},p.prototype.containsCollection=function(e){return-1!==this._collections.indexOf(e)},p.prototype.indexOfCollection=function(e){return this._collections.indexOf(e)},p.prototype.getCollection=function(e){return this._collections[e]},p.prototype.getCollectionsLength=function(){return this._collections.length},p.prototype.raiseCollection=function(e){var t=h(this._collections,e);d(this,t,t+1)},p.prototype.lowerCollection=function(e){var t=h(this._collections,e);d(this,t,t-1)},p.prototype.raiseCollectionToTop=function(e){var t=h(this._collections,e);t!==this._collections.length-1&&(this._collections.splice(t,1),this._collections.push(e),c(this))},p.prototype.lowerCollectionToBottom=function(e){var t=h(this._collections,e);0!==t&&(this._collections.splice(t,1),this._collections.splice(0,0,e),c(this))},p.prototype.suspendEvents=function(){this._suspendCount++,this._composite.suspendEvents()},p.prototype.resumeEvents=function(){this._suspendCount--,this._shouldRecomposite&&0===this._suspendCount&&(c(this),this._shouldRecomposite=!1),this._composite.resumeEvents()},p.prototype.computeAvailability=function(){return this._composite.computeAvailability()},p.prototype.getById=function(e){return this._composite.getById(e)},p.prototype._onCollectionChanged=function(e,r,i){var n=this._collectionsCopy,a=n.length,c=this._composite;c.suspendEvents();var h,d,m,p,f=i.length,v=this._eventHash,g=e.id;for(h=0;f>h;h++){var _=i[h];u(this,v,g,_);var y=_.id;for(d=a-1;d>=0;d--)m=n[d].getById(y),t(m)&&(t(p)||(p=c.getById(y),s(p)),p.merge(m));t(p)||c.removeById(y)}var C=r.length;for(h=0;C>h;h++){var w=r[h];l(this,v,g,w);var S=w.id;for(d=a-1;d>=0;d--)m=n[d].getById(S),t(m)&&(t(p)||(p=c.getById(S),t(p)?s(p):(p=new o(S),c.add(p))),p.merge(m))}c.resumeEvents()},p.prototype._onDefinitionChanged=function(e,r){for(var i=this._collections,n=this._composite,o=i.length,a=e.id,s=n.getById(a),l=s[r],u=!0,c=o-1;c>=0;c--){var h=i[c].getById(e.id);if(t(h)){var d=h[r];if(t(d)){if(u){if(u=!1,!t(d.merge)||!t(d.clone)){l=d;break}l=d.clone(l)}l.merge(d)}}}s[r]=l},p}),r("DataSources/CompositeProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","../Core/TimeIntervalCollection","./Property"],function(e,t,r,i,n,o,a){"use strict";function s(t,r,i,n){var o=function(){i.raiseEvent(t)},a=[];r.removeAll();for(var s=n.length,l=0;s>l;l++){var u=n.get(l);e(u.data)&&-1===a.indexOf(u.data)&&r.add(u.data.definitionChanged,o)}}var l=function(){this._eventHelper=new n,this._definitionChanged=new i,this._intervals=new o,this._intervals.changedEvent.addEventListener(l.prototype._intervalsChanged,this)};return t(l.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}}}),l.prototype.getValue=function(t,r){var i=this._intervals.findDataForIntervalContainingDate(t);return e(i)?i.getValue(t,r):void 0},l.prototype.equals=function(e){return this===e||e instanceof l&&this._intervals.equals(e._intervals,a.equals)},l.prototype._intervalsChanged=function(){s(this,this._eventHelper,this._definitionChanged,this._intervals),this._definitionChanged.raiseEvent(this)},l}),r("DataSources/CompositeMaterialProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./CompositeProperty","./Property"],function(e,t,r,i,n,o){"use strict";var a=function(){this._definitionChanged=new i,this._composite=new n,this._composite.definitionChanged.addEventListener(a.prototype._raiseDefinitionChanged,this)};return t(a.prototype,{isConstant:{get:function(){return this._composite.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._composite._intervals}}}),a.prototype.getType=function(t){var r=this._composite._intervals.findDataForIntervalContainingDate(t);return e(r)?r.getType(t):void 0},a.prototype.getValue=function(t,r){var i=this._composite._intervals.findDataForIntervalContainingDate(t);return e(i)?i.getValue(t,r):void 0},a.prototype.equals=function(e){return this===e||e instanceof a&&this._composite.equals(e._composite,o.equals)},a.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},a}),r("DataSources/CompositePositionProperty",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./CompositeProperty","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){this._referenceFrame=e(t,o.FIXED),this._definitionChanged=new n,this._composite=new a,this._composite.definitionChanged.addEventListener(l.prototype._raiseDefinitionChanged,this)};return r(l.prototype,{isConstant:{get:function(){return this._composite.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._composite.intervals}},referenceFrame:{get:function(){return this._referenceFrame},set:function(e){this._referenceFrame=e}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,o.FIXED,t)},l.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._composite._intervals.findDataForIntervalContainingDate(e);return t(n)?n.getValueInReferenceFrame(e,r,i):void 0},l.prototype.equals=function(e){return this===e||e instanceof l&&this._referenceFrame===e._referenceFrame&&this._composite.equals(e._composite,s.equals)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/PositionProperty",["../Core/Cartesian3","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix3","../Core/ReferenceFrame","../Core/Transforms"],function(e,t,r,i,n,o,a){"use strict";var s=function(){i.throwInstantiationError()};r(s.prototype,{isConstant:{get:i.throwInstantiationError},definitionChanged:{get:i.throwInstantiationError},referenceFrame:{get:i.throwInstantiationError}}),s.prototype.getValue=i.throwInstantiationError,s.prototype.getValueInReferenceFrame=i.throwInstantiationError,s.prototype.equals=i.throwInstantiationError;var l=new n;return s.convertToReferenceFrame=function(r,i,s,u,c){if(!t(i))return i;if(t(c)||(c=new e),s===u)return e.clone(i,c);var h=a.computeIcrfToFixedMatrix(r,l);return t(h)||(h=a.computeTemeToPseudoFixedMatrix(r,l)),s===o.INERTIAL?n.multiplyByVector(h,i,c):s===o.FIXED?n.multiplyByVector(n.transpose(h,l),i,c):void 0},s}),r("DataSources/ConstantPositionProperty",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./PositionProperty"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r,i){this._definitionChanged=new o,this._value=e.clone(r),this._referenceFrame=t(i,a.FIXED)};return i(l.prototype,{isConstant:{get:function(){return!r(this._value)||this._referenceFrame===a.FIXED}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},l.prototype.setValue=function(t,i){var n=!1;e.equals(this._value,t)||(n=!0,this._value=e.clone(t)),r(i)&&this._referenceFrame!==i&&(n=!0,this._referenceFrame=i),n&&this._definitionChanged.raiseEvent(this)},l.prototype.getValueInReferenceFrame=function(e,t,r){return s.convertToReferenceFrame(e,this._value,this._referenceFrame,t,r)},l.prototype.equals=function(t){return this===t||t instanceof l&&e.equals(this._value,t._value)&&this._referenceFrame===t._referenceFrame},l}),r("Scene/LabelStyle",["../Core/freezeObject"],function(e){"use strict";var t={FILL:0,OUTLINE:1,FILL_AND_OUTLINE:2};return e(t)}),r("DataSources/DataSourceClock",["../Core/Clock","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/JulianDate","./createPropertyDescriptor"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(){this._startTime=void 0,this._stopTime=void 0,this._currentTime=void 0,this._clockRange=void 0,this._clockStep=void 0,this._multiplier=void 0,this._definitionChanged=new o};return i(l.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},startTime:s("startTime"),stopTime:s("stopTime"),currentTime:s("currentTime"),clockRange:s("clockRange"),clockStep:s("clockStep"),multiplier:s("multiplier")}),l.prototype.clone=function(e){return r(e)||(e=new l),e.startTime=this.startTime,e.stopTime=this.stopTime,e.currentTime=this.currentTime,e.clockRange=this.clockRange,e.clockStep=this.clockStep,e.multiplier=this.multiplier,e},l.prototype.equals=function(e){return this===e||r(e)&&a.equals(this.startTime,e.startTime)&&a.equals(this.stopTime,e.stopTime)&&a.equals(this.currentTime,e.currentTime)&&this.clockRange===e.clockRange&&this.clockStep===e.clockStep&&this.multiplier===e.multiplier},l.prototype.merge=function(e){this.startTime=t(this.startTime,e.startTime),this.stopTime=t(this.stopTime,e.stopTime),this.currentTime=t(this.currentTime,e.currentTime),this.clockRange=t(this.clockRange,e.clockRange),this.clockStep=t(this.clockStep,e.clockStep),this.multiplier=t(this.multiplier,e.multiplier)},l.prototype.getValue=function(t){return r(t)||(t=new e),t.startTime=this.startTime,t.stopTime=this.stopTime,t.clockRange=this.clockRange,t.clockStep=this.clockStep,t.multiplier=this.multiplier,t.currentTime=this.currentTime,t},l}),r("DataSources/EllipseGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._semiMajorAxis=void 0,this._semiMajorAxisSubscription=void 0,this._semiMinorAxis=void 0,this._semiMinorAxisSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._outline=void 0,this._outlineSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._numberOfVerticalLines=void 0,this._numberOfVerticalLinesSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},semiMajorAxis:o("semiMajorAxis"),semiMinorAxis:o("semiMinorAxis"),rotation:o("rotation"),show:o("show"),material:o("material"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),numberOfVerticalLines:o("numberOfVerticalLines")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.rotation=this.rotation,e.semiMajorAxis=this.semiMajorAxis,e.semiMinorAxis=this.semiMinorAxis,e.show=this.show,e.material=this.material,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.numberOfVerticalLines=this.numberOfVerticalLines,e},a.prototype.merge=function(t){this.rotation=e(this.rotation,t.rotation),this.semiMajorAxis=e(this.semiMajorAxis,t.semiMajorAxis),this.semiMinorAxis=e(this.semiMinorAxis,t.semiMinorAxis),this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.numberOfVerticalLines=e(this.numberOfVerticalLines,t.numberOfVerticalLines)},a}),r("DataSources/EllipsoidGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._radii=void 0,this._radiiSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._stackPartitions=void 0,this._stackPartitionsSubscription=void 0,this._slicePartitions=void 0,this._slicePartitionsSubscription=void 0,this._subdivisions=void 0,this._subdivisionsSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),radii:o("radii"),material:o("material"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),stackPartitions:o("stackPartitions"),slicePartitions:o("slicePartitions"),subdivisions:o("subdivisions")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.radii=this.radii,e.material=this.material,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.stackPartitions=this.stackPartitions,e.slicePartitions=this.slicePartitions,e.subdivisions=this.subdivisions,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.radii=e(this.radii,t.radii),this.material=e(this.material,t.material),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.stackPartitions=e(this.stackPartitions,t.stackPartitions),this.slicePartitions=e(this.slicePartitions,t.slicePartitions),this.subdivisions=e(this.subdivisions,t.subdivisions)},a}),r("DataSources/GridMaterialProperty",["../Core/Cartesian2","../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o,a){"use strict";var s=t.WHITE,l=.1,u=new e(8,8),c=new e(0,0),h=new e(1,1),d=function(){this._definitionChanged=new n,this._color=void 0,this._colorSubscription=void 0,this._cellAlpha=void 0,this._cellAlphaSubscription=void 0,this._lineCount=void 0,this._lineCountSubscription=void 0,this._lineThickness=void 0,this._lineThicknessSubscription=void 0,this._lineOffset=void 0,this._lineOffsetSubscription=void 0,this.color=void 0,this.cellAlpha=void 0,this.lineCount=void 0,this.lineThickness=void 0,this.lineOffset=void 0};return i(d.prototype,{isConstant:{get:function(){return a.isConstant(this._color)&&a.isConstant(this._cellAlpha)&&a.isConstant(this._lineCount)&&a.isConstant(this._lineThickness)&&a.isConstant(this._lineOffset)}},definitionChanged:{get:function(){return this._definitionChanged}},color:o("color"),cellAlpha:o("cellAlpha"),lineCount:o("lineCount"),lineThickness:o("lineThickness"),lineOffset:o("lineOffset")}),d.prototype.getType=function(){return"Grid"
},d.prototype.getValue=function(e,t){return r(t)||(t={}),t.color=a.getValueOrClonedDefault(this._color,e,s,t.color),t.cellAlpha=a.getValueOrDefault(this._cellAlpha,e,l),t.lineCount=a.getValueOrClonedDefault(this._lineCount,e,u,t.lineCount),t.lineThickness=a.getValueOrClonedDefault(this._lineThickness,e,h,t.lineThickness),t.lineOffset=a.getValueOrClonedDefault(this._lineOffset,e,c,t.lineOffset),t},d.prototype.equals=function(e){return this===e||e instanceof d&&a.equals(this._color,e._color)&&a.equals(this._cellAlpha,e._cellAlpha)&&a.equals(this._lineCount,e._lineCount)&&a.equals(this._lineThickness,e._lineThickness)&&a.equals(this._lineOffset,e._lineOffset)},d.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},d}),r("DataSources/ImageMaterialProperty",["../Core/Cartesian2","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=new e(1,1),s=function(){this._definitionChanged=new i,this._image=void 0,this._imageSubscription=void 0,this._repeat=void 0,this._repeatSubscription=void 0};return r(s.prototype,{isConstant:{get:function(){return o.isConstant(this._image)&&o.isConstant(this._repeat)}},definitionChanged:{get:function(){return this._definitionChanged}},image:n("image"),repeat:n("repeat")}),s.prototype.getType=function(){return"Image"},s.prototype.getValue=function(e,r){return t(r)||(r={}),r.image=o.getValueOrUndefined(this._image,e),r.repeat=o.getValueOrClonedDefault(this._repeat,e,a,r.repeat),r},s.prototype.equals=function(e){return this===e||e instanceof s&&o.equals(this._image,e._image)&&o.equals(this._repeat,e._repeat)},s.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},s}),r("DataSources/LabelGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._text=void 0,this._textSubscription=void 0,this._font=void 0,this._fontSubscription=void 0,this._style=void 0,this._styleSubscription=void 0,this._fillColor=void 0,this._fillColorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._horizontalOrigin=void 0,this._horizontalOriginSubscription=void 0,this._verticalOrigin=void 0,this._verticalOriginSubscription=void 0,this._eyeOffset=void 0,this._eyeOffsetSubscription=void 0,this._pixelOffset=void 0,this._pixelOffsetSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._translucencyByDistance=void 0,this._translucencyByDistanceSubscription=void 0,this._pixelOffsetScaleByDistance=void 0,this._pixelOffsetScaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},text:o("text"),font:o("font"),style:o("style"),fillColor:o("fillColor"),outlineColor:o("outlineColor"),outlineWidth:o("outlineWidth"),horizontalOrigin:o("horizontalOrigin"),verticalOrigin:o("verticalOrigin"),eyeOffset:o("eyeOffset"),pixelOffset:o("pixelOffset"),scale:o("scale"),show:o("show"),translucencyByDistance:o("translucencyByDistance"),pixelOffsetScaleByDistance:o("pixelOffsetScaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.text=this.text,e.font=this.font,e.show=this.show,e.style=this.style,e.fillColor=this.fillColor,e.outlineColor=this.outlineColor,e.outlineWidth=this.outlineWidth,e.scale=this.scale,e.horizontalOrigin=this.horizontalOrigin,e.verticalOrigin=this.verticalOrigin,e.eyeOffset=this.eyeOffset,e.pixelOffset=this.pixelOffset,e.translucencyByDistance=this._translucencyByDistance,e.pixelOffsetScaleByDistance=this._pixelOffsetScaleByDistance,e},a.prototype.merge=function(t){this.text=e(this.text,t.text),this.font=e(this.font,t.font),this.show=e(this.show,t.show),this.style=e(this.style,t.style),this.fillColor=e(this.fillColor,t.fillColor),this.outlineColor=e(this.outlineColor,t.outlineColor),this.outlineWidth=e(this.outlineWidth,t.outlineWidth),this.scale=e(this.scale,t.scale),this.horizontalOrigin=e(this.horizontalOrigin,t.horizontalOrigin),this.verticalOrigin=e(this.verticalOrigin,t.verticalOrigin),this.eyeOffset=e(this.eyeOffset,t.eyeOffset),this.pixelOffset=e(this.pixelOffset,t.pixelOffset),this.translucencyByDistance=e(this._translucencyByDistance,t._translucencyByDistance),this.pixelOffsetScaleByDistance=e(this._pixelOffsetScaleByDistance,t._pixelOffsetScaleByDistance)},a}),r("DataSources/ModelGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._scale=void 0,this._scaleSubscription=void 0,this._minimumPixelSize=void 0,this._minimumPixelSizeSubscription=void 0,this._uri=void 0,this._uriSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),scale:o("scale"),minimumPixelSize:o("minimumPixelSize"),uri:o("uri")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.scale=this.scale,e.minimumPixelSize=this.minimumPixelSize,e.uri=this.uri,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.scale=e(this.scale,t.scale),this.minimumPixelSize=e(this.minimumPixelSize,t.minimumPixelSize),this.uri=e(this.uri,t.uri)},a}),r("DataSources/PathGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._material=void 0,this._materialSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._resolution=void 0,this._resolutionSubscription=void 0,this._leadTime=void 0,this._leadTimeSubscription=void 0,this._trailTime=void 0,this._trailTimeSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},material:o("material"),show:o("show"),width:o("width"),resolution:o("resolution"),leadTime:o("leadTime"),trailTime:o("trailTime")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.material=this.material,e.width=this.width,e.resolution=this.resolution,e.show=this.show,e.leadTime=this.leadTime,e.trailTime=this.trailTime,e},a.prototype.merge=function(t){this.material=e(this.material,t.material),this.width=e(this.width,t.width),this.resolution=e(this.resolution,t.resolution),this.show=e(this.show,t.show),this.leadTime=e(this.leadTime,t.leadTime),this.trailTime=e(this.trailTime,t.trailTime)},a}),r("DataSources/PointGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._color=void 0,this._colorSubscription=void 0,this._pixelSize=void 0,this._pixelSizeSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0,this._show=void 0,this._showSubscription=void 0,this._scaleByDistance=void 0,this._scaleByDistanceSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},color:o("color"),pixelSize:o("pixelSize"),outlineColor:o("outlineColor"),outlineWidth:o("outlineWidth"),show:o("show"),scaleByDistance:o("scaleByDistance")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.color=this.color,e.pixelSize=this.pixelSize,e.outlineColor=this.outlineColor,e.outlineWidth=this.outlineWidth,e.show=this.show,e.scaleByDistance=this.scaleByDistance,e},a.prototype.merge=function(t){this.color=e(this.color,t.color),this.pixelSize=e(this.pixelSize,t.pixelSize),this.outlineColor=e(this.outlineColor,t.outlineColor),this.outlineWidth=e(this.outlineWidth,t.outlineWidth),this.show=e(this.show,t.show),this.scaleByDistance=e(this.scaleByDistance,t.scaleByDistance)},a}),r("DataSources/PolygonGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._perPositionHeight=void 0,this._perPositionHeightSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),perPositionHeight:o("perPositionHeight")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.perPositionHeight=this.perPositionHeight,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.perPositionHeight=e(this.perPositionHeight,t.perPositionHeight)},a}),r("DataSources/PolylineGlowMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=e.WHITE,s=.25,l=function(){this._definitionChanged=new i,this._color=void 0,this._colorSubscription=void 0,this._glowPower=void 0,this._glowPowerSubscription=void 0};return r(l.prototype,{isConstant:{get:function(){return o.isConstant(this._color)&&o.isConstant(this._glow)}},definitionChanged:{get:function(){return this._definitionChanged}},color:n("color"),glowPower:n("glowPower")}),l.prototype.getType=function(){return"PolylineGlow"},l.prototype.getValue=function(e,r){return t(r)||(r={}),r.color=o.getValueOrClonedDefault(this._color,e,a,r.color),r.glowPower=o.getValueOrDefault(this._glowPower,e,s,r.glowPower),r},l.prototype.equals=function(e){return this===e||e instanceof l&&o.equals(this._color,e._color)&&o.equals(this._glowPower,e._glowPower)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/PolylineGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._followSurface=void 0,this._followSurfaceSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._widthSubscription=void 0,this._width=void 0,this._widthSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),width:o("width"),followSurface:o("followSurface"),granularity:o("granularity")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.width=this.width,e.followSurface=this.followSurface,e.granularity=this.granularity,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.width=e(this.width,t.width),this.followSurface=e(this.followSurface,t.followSurface),this.granularity=e(this.granularity,t.granularity)},a}),r("DataSources/PolylineOutlineMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property"],function(e,t,r,i,n,o){"use strict";var a=e.WHITE,s=e.BLACK,l=0,u=function(){this._definitionChanged=new i,this._color=void 0,this._colorSubscription=void 0,this._outlineColor=void 0,this._outlineColorSubscription=void 0,this._outlineWidth=void 0,this._outlineWidthSubscription=void 0};return r(u.prototype,{isConstant:{get:function(){return o.isConstant(this._color)&&o.isConstant(this._outlineColor)&&o.isConstant(this._outlineWidth)}},definitionChanged:{get:function(){return this._definitionChanged}},color:n("color"),outlineColor:n("outlineColor"),outlineWidth:n("outlineWidth")}),u.prototype.getType=function(){return"PolylineOutline"},u.prototype.getValue=function(e,r){return t(r)||(r={}),r.color=o.getValueOrClonedDefault(this._color,e,a,r.color),r.outlineColor=o.getValueOrClonedDefault(this._outlineColor,e,s,r.outlineColor),r.outlineWidth=o.getValueOrDefault(this._outlineWidth,e,l),r},u.prototype.equals=function(e){return this===e||e instanceof u&&o.equals(this._color,e._color)&&o.equals(this._outlineColor,e._outlineColor)&&o.equals(this._outlineWidth,e._outlineWidth)},u.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},u}),r("DataSources/PositionPropertyArray",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","../Core/ReferenceFrame","./Property"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t,r){this._value=void 0,this._definitionChanged=new n,this._eventHelper=new o,this._referenceFrame=e(r,a.FIXED),this.setValue(t)};return r(l.prototype,{isConstant:{get:function(){var e=this._value;if(!t(e))return!0;for(var r=e.length,i=0;r>i;i++)if(!s.isConstant(e[i]))return!1;return!0}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}}}),l.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},l.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._value;if(!t(n))return void 0;var o=n.length;t(i)||(i=new Array(o));for(var a=0,s=0;o>a;){var l=n[a],u=l.getValueInReferenceFrame(e,r,i[a]);t(u)&&(i[s]=u,s++),a++}return i.length=s,i},l.prototype.setValue=function(e){var r=this._eventHelper;if(r.removeAll(),t(e)){this._value=e.slice();for(var i=e.length,n=0;i>n;n++){var o=e[n];t(o)&&r.add(o.definitionChanged,l.prototype._raiseDefinitionChanged,this)}}else this._value=void 0;this._definitionChanged.raiseEvent(this)},l.prototype.equals=function(e){return this===e||e instanceof l&&this._referenceFrame===e._referenceFrame&&s.arrayEquals(this._value,e._value)},l.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},l}),r("DataSources/RectangleGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._coordinates=void 0,this._coordinatesSubscription=void 0,this._height=void 0,this._heightSubscription=void 0,this._extrudedHeight=void 0,this._extrudedHeightSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._stRotation=void 0,this._stRotationSubscription=void 0,this._rotation=void 0,this._rotationSubscription=void 0,this._closeTop=void 0,this._closeTopSubscription=void 0,this._closeBottom=void 0,this._closeBottomSubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),coordinates:o("coordinates"),material:o("material"),height:o("height"),extrudedHeight:o("extrudedHeight"),granularity:o("granularity"),stRotation:o("stRotation"),rotation:o("rotation"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor"),closeTop:o("closeTop"),closeBottom:o("closeBottom")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.coordinates=this.coordinates,e.material=this.material,e.height=this.height,e.extrudedHeight=this.extrudedHeight,e.granularity=this.granularity,e.stRotation=this.stRotation,e.rotation=this.rotation,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e.closeTop=this.closeTop,e.closeBottom=this.closeBottom,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.coordinates=e(this.coordinates,t.coordinates),this.material=e(this.material,t.material),this.height=e(this.height,t.height),this.extrudedHeight=e(this.extrudedHeight,t.extrudedHeight),this.granularity=e(this.granularity,t.granularity),this.stRotation=e(this.stRotation,t.stRotation),this.rotation=e(this.rotation,t.rotation),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor),this.closeTop=e(this.closeTop,t.closeTop),this.closeBottom=e(this.closeBottom,t.closeBottom)},a}),r("DataSources/ReferenceProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/RuntimeError","./Property"],function(e,t,r,i,n,o){"use strict";function a(t){var r=t._targetProperty;if(!e(r)){var i=t._targetEntity;if(!e(i)){var o=t._targetCollection;if(i=o.getById(t._targetId),!e(i))throw new n('target entity "'+t._targetId+'" could not be resolved.');i.definitionChanged.addEventListener(s.prototype._onTargetEntityDefinitionChanged,t),t._targetEntity=i}var a=t._targetPropertyNames;r=i;for(var l=a.length,u=0;l>u;u++)if(r=r[a[u]],!e(r))throw new n('targetProperty "'+a[u]+'" could not be resolved.');t._targetProperty=r}return r}var s=function(e,t,r){this._targetCollection=e,this._targetId=t,this._targetPropertyNames=r,this._targetProperty=void 0,this._targetEntity=void 0,this._definitionChanged=new i,e.collectionChanged.addEventListener(s.prototype._onCollectionChanged,this)};return t(s.prototype,{isConstant:{get:function(){return o.isConstant(a(this))}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return a(this).referenceFrame}},targetId:{get:function(){return this._targetId}},targetCollection:{get:function(){return this._targetCollection}},targetPropertyNames:{get:function(){return this._targetPropertyNames}},resolvedProperty:{get:function(){return a(this)}}}),s.fromString=function(e,t){for(var r,i=[],n=!0,o=!1,a="",l=0;l<t.length;++l){var u=t.charAt(l);o?(a+=u,o=!1):"\\"===u?o=!0:n&&"#"===u?(r=a,n=!1,a=""):n||"."!==u?a+=u:(i.push(a),a="")}return i.push(a),new s(e,r,i)},s.prototype.getValue=function(e,t){return a(this).getValue(e,t)},s.prototype.getValueInReferenceFrame=function(e,t,r){return a(this).getValueInReferenceFrame(e,t,r)},s.prototype.getType=function(e){return a(this).getType(e)},s.prototype.equals=function(e){if(this===e)return!0;var t=this._targetPropertyNames,r=e._targetPropertyNames;if(this._targetCollection!==e._targetCollection||this._targetId!==e._targetId||t.length!==r.length)return!1;for(var i=this._targetPropertyNames.length,n=0;i>n;n++)if(t[n]!==r[n])return!1;return!0},s.prototype._onTargetEntityDefinitionChanged=function(e,t){this._targetPropertyNames[0]===t&&(this._targetProperty=void 0,this._definitionChanged.raiseEvent(this))},s.prototype._onCollectionChanged=function(t,r,i){var n=this._targetEntity;e(n)&&-1!==i.indexOf(n)&&(n.definitionChanged.removeEventListener(s.prototype._onTargetEntityDefinitionChanged,this),this._targetProperty=void 0,this._targetEntity=void 0,this._definitionChanged.raiseEvent(this))},s}),r("DataSources/SampledProperty",["../Core/binarySearch","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ExtrapolationType","../Core/JulianDate","../Core/LinearApproximation"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,r){var i,n=e.length,o=r.length,a=n+o;if(e.length=a,n!==t){var s=n-1;for(i=a-1;i>=t;i--)e[i]=e[s--]}for(i=0;o>i;i++)e[t++]=r[i]}function c(e,t){return e instanceof s?e:"string"==typeof e?s.fromIso8601(e):s.addSeconds(t,e,new s)}var h={packedLength:1,pack:function(e,r,i){i=t(i,0),r[i]=e},unpack:function(e,r){return r=t(r,0),e[r]}},d=[],m=[],p=function(t,i,n,o,a){for(var l,h,p,f,v,g,_=0;_<o.length;){v=c(o[_],t),p=e(i,v,s.compare);var y=0,C=0;if(0>p){for(p=~p,f=p*a,h=void 0,g=i[p];_<o.length&&(v=c(o[_],t),!(r(h)&&s.compare(h,v)>=0||r(g)&&s.compare(v,g)>=0));){for(d[y++]=v,_+=1,l=0;a>l;l++)m[C++]=o[_],_+=1;h=v}y>0&&(m.length=C,u(n,f,m),d.length=y,u(i,p,d))}else{for(l=0;a>l;l++)_++,n[p*a+l]=o[_];_++}}},f=function(e,i){var n=e;n===Number&&(n=h);var s,u=n.packedLength,c=t(n.packedInterpolationLength,u),d=0;if(r(i)){var m=i.length;s=new Array(m);for(var p=0;m>p;p++){var f=i[p];f===Number&&(f=h);var v=f.packedLength;u+=v,c+=t(f.packedInterpolationLength,v),s[p]=f}d=m}this._type=e,this._innerType=n,this._interpolationDegree=1,this._interpolationAlgorithm=l,this._numberOfPoints=0,this._times=[],this._values=[],this._xTable=[],this._yTable=[],this._packedLength=u,this._packedInterpolationLength=c,this._updateTableLength=!0,this._interpolationResult=new Array(c),this._definitionChanged=new o,this._derivativeTypes=i,this._innerDerivativeTypes=s,this._inputOrder=d,this._forwardExtrapolationType=a.NONE,this._forwardExtrapolationDuration=0,this._backwardExtrapolationType=a.NONE,this._backwardExtrapolationDuration=0};return i(f.prototype,{isConstant:{get:function(){return 0===this._values.length}},definitionChanged:{get:function(){return this._definitionChanged}},type:{get:function(){return this._type}},derivativeTypes:{get:function(){return this._derivativeTypes}},interpolationDegree:{get:function(){return this._interpolationDegree}},interpolationAlgorithm:{get:function(){return this._interpolationAlgorithm}},forwardExtrapolationType:{get:function(){return this._forwardExtrapolationType},set:function(e){this._forwardExtrapolationType!==e&&(this._forwardExtrapolationType=e,this._definitionChanged.raiseEvent(this))}},forwardExtrapolationDuration:{get:function(){return this._forwardExtrapolationDuration},set:function(e){this._forwardExtrapolationDuration!==e&&(this._forwardExtrapolationDuration=e,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationType:{get:function(){return this._backwardExtrapolationType},set:function(e){this._backwardExtrapolationType!==e&&(this._backwardExtrapolationType=e,this._definitionChanged.raiseEvent(this))}},backwardExtrapolationDuration:{get:function(){return this._backwardExtrapolationDuration},set:function(e){this._backwardExtrapolationDuration!==e&&(this._backwardExtrapolationDuration=e,this._definitionChanged.raiseEvent(this))}}}),f.prototype.getValue=function(t,i){var n,o=this._innerType,l=this._times,u=this._values,c=e(l,t,s.compare);if(0>c){if(c=~c,0===c){var h=l[c];if(n=this._backwardExtrapolationDuration,this._backwardExtrapolationType===a.NONE||0!==n&&s.secondsDifference(h,t)>n)return void 0;if(this._backwardExtrapolationType===a.HOLD)return o.unpack(this._values,0,i)}if(c>=l.length){c=l.length-1;var d=l[c];if(n=this._forwardExtrapolationDuration,this._forwardExtrapolationType===a.NONE||0!==n&&s.secondsDifference(t,d)>n)return void 0;if(this._forwardExtrapolationType===a.HOLD)return c=l.length-1,o.unpack(this._values,c*o.packedLength,i)}var m=this._xTable,p=this._yTable,f=this._interpolationAlgorithm,v=this._packedInterpolationLength,g=this._inputOrder;if(this._updateTableLength){this._updateTableLength=!1;var _=Math.min(f.getRequiredDataPoints(this._interpolationDegree,g),l.length);_!==this._numberOfPoints&&(this._numberOfPoints=_,m.length=_,p.length=_*v)}var y=this._numberOfPoints-1;if(1>y)return void 0;var C=0,w=l.length-1,S=w-C+1;if(y+1>S);else{var E=c-(0|y/2)-1;C>E&&(E=C);var b=E+y;b>w&&(b=w,E=b-y,C>E&&(E=C)),C=E,w=b}for(var T=w-C+1,x=0;T>x;++x)m[x]=s.secondsDifference(l[C+x],l[w]);if(r(o.convertPackedArrayForInterpolation))o.convertPackedArrayForInterpolation(u,C,w,p);else for(var P=0,A=this._packedLength,M=C*A,D=(w+1)*A;D>M;)p[P]=u[M],M++,P++;var I,R=s.secondsDifference(t,l[w]);if(0!==g&&r(f.interpolate)){var O=Math.floor(v/(g+1));I=f.interpolate(R,m,p,O,g,g,this._interpolationResult)}else I=f.interpolateOrderZero(R,m,p,v,this._interpolationResult);return r(o.unpackInterpolationResult)?o.unpackInterpolationResult(I,u,C,w,i):o.unpack(I,0,i)}return o.unpack(this._values,c*this._packedLength,i)},f.prototype.setInterpolationOptions=function(e){var t=!1,r=e.interpolationAlgorithm,i=e.interpolationDegree;this._interpolationAlgorithm!==r&&(this._interpolationAlgorithm=r,t=!0),this._interpolationDegree!==i&&(this._interpolationDegree=i,t=!0),t&&(this._updateTableLength=!0,this._definitionChanged.raiseEvent(this))},f.prototype.addSample=function(e,t,i){var n=this._innerDerivativeTypes,o=r(n),a=this._innerType,s=[];if(s.push(e),a.pack(t,s,s.length),o)for(var l=n.length,u=0;l>u;u++)n[u].pack(i[u],s,s.length);p(void 0,this._times,this._values,s,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.addSamples=function(e,t,i){for(var n=this._innerDerivativeTypes,o=r(n),a=this._innerType,s=e.length,l=[],u=0;s>u;u++)if(l.push(e[u]),a.pack(t[u],l,l.length),o)for(var c=i[u],h=n.length,d=0;h>d;d++)n[d].pack(c[d],l,l.length);p(void 0,this._times,this._values,l,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.addSamplesPackedArray=function(e,t){p(t,this._times,this._values,e,this._packedLength),this._updateTableLength=!0,this._definitionChanged.raiseEvent(this)},f.prototype.equals=function(e){if(this===e)return!0;if(!r(e))return!1;if(this._type!==e._type||this._interpolationDegree!==e._interpolationDegree||this._interpolationAlgorithm!==e._interpolationAlgorithm)return!1;var t=this._derivativeTypes,i=r(t),n=e._derivativeTypes,o=r(n);if(i!==o)return!1;var a,l;if(i){if(l=t.length,l!==n.length)return!1;for(a=0;l>a;a++)if(t[a]!==n[a])return!1}var u=this._times,c=e._times;if(l=u.length,l!==c.length)return!1;for(a=0;l>a;a++)if(!s.equals(u[a],c[a]))return!1;var h=this._values,d=e._values;for(a=0;l>a;a++)if(h[a]!==d[a])return!1;return!0},f._mergeNewSamples=p,f}),r("DataSources/SampledPositionProperty",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","./PositionProperty","./Property","./SampledProperty"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(r,i){i=t(i,0);var n;if(i>0){n=new Array(i);for(var s=0;i>s;s++)n[s]=e}this._numberOfDerivatives=i,this._property=new u(e,n),this._definitionChanged=new o,this._referenceFrame=t(r,a.FIXED),this._property._definitionChanged.addEventListener(function(){this._definitionChanged.raiseEvent(this)},this)};return i(c.prototype,{isConstant:{get:function(){return this._property.isConstant}},definitionChanged:{get:function(){return this._definitionChanged}},referenceFrame:{get:function(){return this._referenceFrame}},interpolationDegree:{get:function(){return this._property.interpolationDegree}},interpolationAlgorithm:{get:function(){return this._property.interpolationAlgorithm}},numberOfDerivatives:{get:function(){return this._numberOfDerivatives}},forwardExtrapolationType:{get:function(){return this._property.forwardExtrapolationType},set:function(e){this._property.forwardExtrapolationType=e}},forwardExtrapolationDuration:{get:function(){return this._property.forwardExtrapolationDuration},set:function(e){this._property.forwardExtrapolationDuration=e}},backwardExtrapolationType:{get:function(){return this._property.backwardExtrapolationType},set:function(e){this._property.backwardExtrapolationType=e}},backwardExtrapolationDuration:{get:function(){return this._property.backwardExtrapolationDuration},set:function(e){this._property.backwardExtrapolationDuration=e}}}),c.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,a.FIXED,t)},c.prototype.getValueInReferenceFrame=function(e,t,i){return i=this._property.getValue(e,i),r(i)?s.convertToReferenceFrame(e,i,this._referenceFrame,t,i):void 0},c.prototype.setInterpolationOptions=function(e){this._property.setInterpolationOptions(e)},c.prototype.addSample=function(e,t,r){this._numberOfDerivatives,this._property.addSample(e,t,r)},c.prototype.addSamples=function(e,t,r){this._property.addSamples(e,t,r)},c.prototype.addSamplesPackedArray=function(e,t){this._property.addSamplesPackedArray(e,t)},c.prototype.equals=function(e){return this===e||l.equals(this._property,e._property)&&this._referenceFrame===e._referenceFrame},c}),r("DataSources/StripeOrientation",["../Core/freezeObject"],function(e){"use strict";var t={HORIZONTAL:0,VERTICAL:1};return e(t)}),r("DataSources/StripeMaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/Event","./createPropertyDescriptor","./Property","./StripeOrientation"],function(e,t,r,i,n,o,a){"use strict";var s=a.HORIZONTAL,l=e.WHITE,u=e.BLACK,c=0,h=1,d=function(){this._definitionChanged=new i,this._orientation=void 0,this._orientationSubscription=void 0,this._evenColor=void 0,this._evenColorSubscription=void 0,this._oddColor=void 0,this._oddColorSubscription=void 0,this._offset=void 0,this._offsetSubscription=void 0,this._repeat=void 0,this._repeatSubscription=void 0};return r(d.prototype,{isConstant:{get:function(){return o.isConstant(this._orientation)&&o.isConstant(this._evenColor)&&o.isConstant(this._oddColor)&&o.isConstant(this._offset)&&o.isConstant(this._repeat)}},definitionChanged:{get:function(){return this._definitionChanged}},orientation:n("orientation"),evenColor:n("evenColor"),oddColor:n("oddColor"),offset:n("offset"),repeat:n("repeat")}),d.prototype.getType=function(){return"Stripe"},d.prototype.getValue=function(e,r){return t(r)||(r={}),r.horizontal=o.getValueOrDefault(this._orientation,e,s)===a.HORIZONTAL,r.evenColor=o.getValueOrClonedDefault(this._evenColor,e,l,r.evenColor),r.oddColor=o.getValueOrClonedDefault(this._oddColor,e,u,r.oddColor),r.offset=o.getValueOrDefault(this._offset,e,c),r.repeat=o.getValueOrDefault(this._repeat,e,h),r},d.prototype.equals=function(e){return this===e||e instanceof d&&o.equals(this._orientation,e._orientation)&&o.equals(this._evenColor,e._evenColor)&&o.equals(this._oddColor,e._oddColor)&&o.equals(this._offset,e._offset)&&o.equals(this._repeat,e._repeat)},d.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},d}),r("DataSources/TimeIntervalCollectionPositionProperty",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/ReferenceFrame","../Core/TimeIntervalCollection","./PositionProperty","./Property"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t){this._definitionChanged=new n,this._intervals=new a,this._intervals.changedEvent.addEventListener(u.prototype._intervalsChanged,this),this._referenceFrame=e(t,o.FIXED)};return r(u.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}},referenceFrame:{get:function(){return this._referenceFrame
}}}),u.prototype.getValue=function(e,t){return this.getValueInReferenceFrame(e,o.FIXED,t)},u.prototype.getValueInReferenceFrame=function(e,r,i){var n=this._intervals.findDataForIntervalContainingDate(e);return t(n)?s.convertToReferenceFrame(e,n,this._referenceFrame,r,i):void 0},u.prototype.equals=function(e){return this===e||e instanceof u&&this._intervals.equals(e._intervals,l.equals)&&this._referenceFrame===e._referenceFrame},u.prototype._intervalsChanged=function(){this._definitionChanged.raiseEvent(this)},u}),r("DataSources/TimeIntervalCollectionProperty",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/isArray","../Core/TimeIntervalCollection","./Property"],function(e,t,r,i,n,o,a){"use strict";var s=function(){this._definitionChanged=new i,this._intervals=new o,this._intervals.changedEvent.addEventListener(s.prototype._intervalsChanged,this)};return t(s.prototype,{isConstant:{get:function(){return this._intervals.isEmpty}},definitionChanged:{get:function(){return this._definitionChanged}},intervals:{get:function(){return this._intervals}}}),s.prototype.getValue=function(t,r){var i=this._intervals.findDataForIntervalContainingDate(t);return e(i)&&"object"==typeof i&&!n(i)?i.clone(r):i},s.prototype.equals=function(e){return this===e||e instanceof s&&this._intervals.equals(e._intervals,a.equals)},s.prototype._intervalsChanged=function(){this._definitionChanged.raiseEvent(this)},s}),r("DataSources/WallGraphics",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","./createPropertyDescriptor"],function(e,t,r,i,n,o){"use strict";var a=function(){this._show=void 0,this._showSubscription=void 0,this._material=void 0,this._materialSubscription=void 0,this._positions=void 0,this._positionsSubscription=void 0,this._minimumHeights=void 0,this._minimumHeightsSubscription=void 0,this._maximumHeights=void 0,this._maximumHeightsSubscription=void 0,this._granularity=void 0,this._granularitySubscription=void 0,this._definitionChanged=new n};return r(a.prototype,{definitionChanged:{get:function(){return this._definitionChanged}},show:o("show"),material:o("material"),positions:o("positions"),minimumHeights:o("minimumHeights"),maximumHeights:o("maximumHeights"),granularity:o("granularity"),fill:o("fill"),outline:o("outline"),outlineColor:o("outlineColor")}),a.prototype.clone=function(e){return t(e)||(e=new a),e.show=this.show,e.material=this.material,e.positions=this.positions,e.minimumHeights=this.minimumHeights,e.maximumHeights=this.maximumHeights,e.granularity=this.granularity,e.fill=this.fill,e.outline=this.outline,e.outlineColor=this.outlineColor,e},a.prototype.merge=function(t){this.show=e(this.show,t.show),this.material=e(this.material,t.material),this.positions=e(this.positions,t.positions),this.minimumHeights=e(this.minimumHeights,t.minimumHeights),this.maximumHeights=e(this.maximumHeights,t.maximumHeights),this.granularity=e(this.granularity,t.granularity),this.fill=e(this.fill,t.fill),this.outline=e(this.outline,t.outline),this.outlineColor=e(this.outlineColor,t.outlineColor)},a}),r("DataSources/CzmlDataSource",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/ClockRange","../Core/ClockStep","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Ellipsoid","../Core/Event","../Core/ExtrapolationType","../Core/getFilenameFromUri","../Core/HermitePolynomialApproximation","../Core/isArray","../Core/Iso8601","../Core/JulianDate","../Core/LagrangePolynomialApproximation","../Core/LinearApproximation","../Core/loadJson","../Core/Math","../Core/Quaternion","../Core/Rectangle","../Core/ReferenceFrame","../Core/RuntimeError","../Core/Spherical","../Core/TimeInterval","../Core/TimeIntervalCollection","../Scene/HorizontalOrigin","../Scene/LabelStyle","../Scene/VerticalOrigin","../ThirdParty/Uri","../ThirdParty/when","./BillboardGraphics","./ColorMaterialProperty","./CompositeMaterialProperty","./CompositePositionProperty","./CompositeProperty","./ConstantPositionProperty","./ConstantProperty","./DataSourceClock","./EllipseGraphics","./EllipsoidGraphics","./EntityCollection","./GridMaterialProperty","./ImageMaterialProperty","./LabelGraphics","./ModelGraphics","./PathGraphics","./PointGraphics","./PolygonGraphics","./PolylineGlowMaterialProperty","./PolylineGraphics","./PolylineOutlineMaterialProperty","./PositionPropertyArray","./RectangleGraphics","./ReferenceProperty","./SampledPositionProperty","./SampledProperty","./StripeMaterialProperty","./StripeOrientation","./TimeIntervalCollectionPositionProperty","./TimeIntervalCollectionProperty","./WallGraphics"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht){"use strict";function dt(e,t){return"#"===t[0]&&(t=Zt+t),nt.fromString(e,t)}function mt(e){var t=e.rgbaf;if(l(t))return t;var r=e.rgba;if(!l(r))return void 0;if(r.length===o.length)return[o.byteToFloat(r[0]),o.byteToFloat(r[1]),o.byteToFloat(r[2]),o.byteToFloat(r[3])];var i=r.length;t=new Array(i);for(var n=0;i>n;n+=5)t[n]=r[n],t[n+1]=o.byteToFloat(r[n+1]),t[n+2]=o.byteToFloat(r[n+2]),t[n+3]=o.byteToFloat(r[n+3]),t[n+4]=o.byteToFloat(r[n+4]);return t}function pt(e,t){var r=s(e.uri,e);if(l(t)){var i=new O(document.location.href);t=new O(t),r=new O(r).resolve(t.resolve(i)).toString()}return r}function ft(e){var t=e.wsenDegrees;if(l(t)){for(var r=t.length,i=0;r>i;i++)t[i]=S.toRadians(t[i]);return t}return e.wsen}function vt(e){if(l(e.cartesian))return e.cartesian;if(l(e.cartesianVelocity))return e.cartesianVelocity;if(l(e.unitCartesian))return e.unitCartesian;var r,i,n,o=e.unitSpherical;if(l(o)){if(i=o.length,2===i)Jt.clock=o[0],Jt.cone=o[1],t.fromSpherical(Jt,Qt),n=[Qt.x,Qt.y,Qt.z];else{var a=0;for(n=new Array(4*(i/3)),r=0;i>r;r+=4)n[r]=o[a++],Jt.clock=o[a++],Jt.cone=o[a++],t.fromSpherical(Jt,Qt),n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z}return n}var s=e.cartographicRadians;if(l(s)){if(3===s.length)Kt.longitude=s[0],Kt.latitude=s[1],Kt.height=s[2],h.WGS84.cartographicToCartesian(Kt,Qt),n=[Qt.x,Qt.y,Qt.z];else for(i=s.length,n=new Array(i),r=0;i>r;r+=4)Kt.longitude=s[r+1],Kt.latitude=s[r+2],Kt.height=s[r+3],h.WGS84.cartographicToCartesian(Kt,Qt),n[r]=s[r],n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z;return n}var u=e.cartographicDegrees;if(!l(u))throw new x(JSON.stringify(e)+" is not a valid CZML interval.");if(3===u.length)Kt.longitude=S.toRadians(u[0]),Kt.latitude=S.toRadians(u[1]),Kt.height=u[2],h.WGS84.cartographicToCartesian(Kt,Qt),n=[Qt.x,Qt.y,Qt.z];else for(i=u.length,n=new Array(i),r=0;i>r;r+=4)Kt.longitude=S.toRadians(u[r+1]),Kt.latitude=S.toRadians(u[r+2]),Kt.height=u[r+3],h.WGS84.cartographicToCartesian(Kt,Qt),n[r]=u[r],n[r+1]=Qt.x,n[r+2]=Qt.y,n[r+3]=Qt.z;return n}function gt(r,i,n){switch(r){case Boolean:return s(i["boolean"],i);case e:return i.cartesian2;case t:return vt(i);case o:return mt(i);case lt:return lt[s(i.stripeOrientation,i)];case D:return D[s(i.horizontalOrigin,i)];case Image:return pt(i,n);case _:return _.fromIso8601(s(i.date,i));case I:return I[s(i.labelStyle,i)];case Number:return s(i.number,i);case String:return s(i.string,i);case Array:return i.array;case E:return i.unitQuaternion;case b:return ft(i);case O:return pt(i,n);case R:return R[s(i.verticalOrigin,i)];default:throw new c(r)}}function _t(e,t){var r=e.interpolationAlgorithm;(l(r)||l(e.interpolationDegree))&&t.setInterpolationOptions({interpolationAlgorithm:er[r],interpolationDegree:e.interpolationDegree});var i=e.forwardExtrapolationType;l(i)&&(t.forwardExtrapolationType=m[i]);var n=e.forwardExtrapolationDuration;l(n)&&(t.forwardExtrapolationDuration=n);var o=e.backwardExtrapolationType;l(o)&&(t.backwardExtrapolationType=m[o]);var a=e.backwardExtrapolationDuration;l(a)&&(t.backwardExtrapolationDuration=a)}function yt(e,t,r,i,n,o,a){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m,p,f=l(i.reference),v=l(u)&&!u.equals(g.MAXIMUM_INTERVAL);if(f||(m=gt(e,i,o),h=s(e.packedLength,1),p=s(m.length,1),d=!l(i.array)&&"string"!=typeof m&&p>h),!d&&!v)return t[r]=f?dt(a,i.reference):l(e.unpack)?new U(e.unpack(m,0)):new U(m),void 0;var y,C=t[r],w=i.epoch;if(l(w)&&(y=_.fromIso8601(w)),d&&!v)return C instanceof at||(C=new at(e),t[r]=C),C.addSamplesPackedArray(m,y),_t(i,C),void 0;var S;if(!d&&v)return u=u.clone(),u.data=f?dt(a,i.reference):l(e.unpack)?e.unpack(m,0):m,l(C)||(C=f?new V:new ct,t[r]=C),!f&&C instanceof ct?C.intervals.addInterval(u):C instanceof V?(u.data=f?u.data:new U(u.data),C.intervals.addInterval(u)):(S=g.MAXIMUM_INTERVAL.clone(),S.data=C,C=new V,t[r]=C,C.intervals.addInterval(S),u.data=f?u.data:new U(u.data),C.intervals.addInterval(u)),void 0;l(C)||(C=new V,t[r]=C),C instanceof V||(S=g.MAXIMUM_INTERVAL.clone(),S.data=C,C=new V,t[r]=C,C.intervals.addInterval(S));var E=C.intervals;S=E.findInterval(u),l(S)&&S.data instanceof at||(S=u.clone(),S.data=new at(e),E.addInterval(S)),S.data.addSamplesPackedArray(m,y),_t(i,S.data)}function Ct(e,t,r,i,n,o,a){if(l(i))if(v(i))for(var s=0,u=i.length;u>s;s++)yt(e,t,r,i[s],n,o,a);else yt(e,t,r,i,n,o,a)}function wt(e,r,i,n,o,a){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m,p=!1,f=l(i.cartesianVelocity)?1:0,v=t.packedLength*(f+1),y=l(i.reference),C=l(u)&&!u.equals(g.MAXIMUM_INTERVAL);if(y||(h=s(T[i.referenceFrame],void 0),d=vt(i),m=s(d.length,1),p=m>v),!p&&!C)return e[r]=y?dt(a,i.reference):new k(t.unpack(d),h),void 0;var w,S=e[r],E=i.epoch;if(l(E)&&(w=_.fromIso8601(E)),p&&!C)return(!(S instanceof ot)||l(h)&&S.referenceFrame!==h)&&(S=new ot(h,f),e[r]=S),S.addSamplesPackedArray(d,w),_t(i,S),void 0;var b;if(!p&&C)return u=u.clone(),u.data=y?dt(a,i.reference):t.unpack(d),l(S)||(S=y?new z(h):new ut(h),e[r]=S),!y&&S instanceof ut&&l(h)&&S.referenceFrame===h?S.intervals.addInterval(u):S instanceof z?(u.data=y?u.data:new k(u.data,h),S.intervals.addInterval(u)):(b=g.MAXIMUM_INTERVAL.clone(),b.data=S,S=new z(S.referenceFrame),e[r]=S,S.intervals.addInterval(b),u.data=y?u.data:new k(u.data,h),S.intervals.addInterval(u)),void 0;l(S)?S instanceof z||(b=g.MAXIMUM_INTERVAL.clone(),b.data=S,S=new z(S.referenceFrame),e[r]=S,S.intervals.addInterval(b)):(S=new z(h),e[r]=S);var x=S.intervals;b=x.findInterval(u),l(b)&&b.data instanceof ot&&(!l(h)||b.data.referenceFrame===h)||(b=u.clone(),b.data=new ot(h,f),x.addInterval(b)),b.data.addSamplesPackedArray(d,w),_t(i,b.data)}function St(e,t,r,i,n,o){if(l(r))if(v(r))for(var a=0,s=r.length;s>a;a++)wt(e,t,r[a],i,n,o);else wt(e,t,r,i,n,o)}function Et(t,r,i,n,a,s){var u,c=i.interval;l(c)?(tr.iso8601=c,u=A.fromIso8601(tr),l(n)&&(u=A.intersect(u,n,$t))):l(n)&&(u=n);var h,d,m=t[r];if(l(u)){m instanceof F||(m=new F,t[r]=m);var p=m.intervals;d=p.findInterval({start:u.start,stop:u.stop}),l(d)?h=d.data:(d=u.clone(),p.addInterval(d))}else h=m;var f;l(i.solidColor)?(h instanceof B||(h=new B),f=i.solidColor,Ct(o,h,"color",f.color,void 0,void 0,s)):l(i.grid)?(h instanceof j||(h=new j),f=i.grid,Ct(o,h,"color",f.color,void 0,a,s),Ct(Number,h,"cellAlpha",f.cellAlpha,void 0,a,s),Ct(e,h,"lineThickness",f.lineThickness,void 0,a,s),Ct(e,h,"lineOffset",f.lineOffset,void 0,a,s),Ct(e,h,"lineCount",f.lineCount,void 0,a,s)):l(i.image)?(h instanceof Y||(h=new Y),f=i.image,Ct(Image,h,"image",f.image,void 0,a,s),Ct(e,h,"repeat",f.repeat,void 0,a,s)):l(i.stripe)?(h instanceof st||(h=new st),f=i.stripe,Ct(lt,h,"orientation",f.orientation,void 0,a,s),Ct(o,h,"evenColor",f.evenColor,void 0,a,s),Ct(o,h,"oddColor",f.oddColor,void 0,a,s),Ct(Number,h,"offset",f.offset,void 0,a,s),Ct(Number,h,"repeat",f.repeat,void 0,a,s)):l(i.polylineOutline)?(h instanceof tt||(h=new tt),f=i.polylineOutline,Ct(o,h,"color",f.color,void 0,a,s),Ct(o,h,"outlineColor",f.outlineColor,void 0,a,s),Ct(Number,h,"outlineWidth",f.outlineWidth,void 0,a,s)):l(i.polylineGlow)&&(h instanceof $||(h=new $),f=i.polylineGlow,Ct(o,h,"color",f.color,void 0,a,s),Ct(Number,h,"glowPower",f.glowPower,void 0,a,s)),l(d)?d.data=h:t[r]=h}function bt(e,t,r,i,n,o){if(l(r))if(v(r))for(var a=0,s=r.length;s>a;a++)Et(e,t,r[a],i,n,o);else Et(e,t,r,i,n,o)}function Tt(e,t){e.name=s(t.name,e.name)}function xt(e,t,r,i){var n=t.description;l(n)&&Ct(String,e,"description",n,void 0,i,r)}function Pt(e,t,r,i){var n=t.position;l(n)&&St(e,"position",n,void 0,i,r)}function At(e,r,i,n){var o=r.viewFrom;l(o)&&Ct(t,e,"viewFrom",o,void 0,n,i)}function Mt(e,t,r,i){var n=t.orientation;l(n)&&Ct(E,e,"orientation",n,void 0,i,r)}function Dt(e,r,i){var n,o,a=r.references;if(l(a)){var s=[];for(n=0,o=a.length;o>n;n++)s.push(dt(i,a[n]));var u=r.interval;l(u)?(u=A.fromIso8601(u),e.positions instanceof z||(e.positions=new z,u.data=new rt(s),e.positions.intervals.addInterval(u))):e.positions=new rt(s)}else{var c=[],d=r.cartesian;if(l(d)){for(n=0,o=d.length;o>n;n+=3)c.push(new t(d[n],d[n+1],d[n+2]));r.array=c}else if(d=r.cartographicRadians,l(d)){for(n=0,o=d.length;o>n;n+=3)Kt.longitude=d[n],Kt.latitude=d[n+1],Kt.height=d[n+2],c.push(h.WGS84.cartographicToCartesian(Kt));r.array=c}else if(d=r.cartographicDegrees,l(d)){for(n=0,o=d.length;o>n;n+=3)c.push(t.fromDegrees(d[n],d[n+1],d[n+2]));r.array=c}l(r.array)&&Ct(Array,e,"positions",r,void 0,void 0,i)}}function It(e,t,r){if(l(t))if(v(t))for(var i=t.length,n=0;i>n;n++)Dt(e,t[n],r);else Dt(e,t,r)}function Rt(e,t){var r,i=t.availability;if(l(i)){var n;if(v(i))for(var o=i.length,a=0;o>a;a++)l(n)||(n=new M),tr.iso8601=i[a],r=A.fromIso8601(tr),n.addInterval(r);else tr.iso8601=i,r=A.fromIso8601(tr),n=new M,n.addInterval(r);e.availability=n}}function Ot(r,i,n,a){var s=i.billboard;if(l(s)){var u,c=s.interval;l(c)&&(tr.iso8601=c,u=A.fromIso8601(tr));var h=r.billboard;l(h)||(r.billboard=h=new N),Ct(o,h,"color",s.color,u,a,n),Ct(t,h,"eyeOffset",s.eyeOffset,u,a,n),Ct(D,h,"horizontalOrigin",s.horizontalOrigin,u,a,n),Ct(Image,h,"image",s.image,u,a,n),Ct(e,h,"pixelOffset",s.pixelOffset,u,a,n),Ct(Number,h,"scale",s.scale,u,a,n),Ct(Number,h,"rotation",s.rotation,u,a,n),Ct(t,h,"alignedAxis",s.alignedAxis,u,a,n),Ct(Boolean,h,"show",s.show,u,a,n),Ct(R,h,"verticalOrigin",s.verticalOrigin,u,a,n)}}function Lt(e,t){var r=e.version;if(l(r)&&"string"==typeof r){var i=r.split(".");if(2===i.length){if("1"!==i[0])throw new x("Cesium only supports CZML version 1.");t._version=r}}if(!l(t._version))throw new x("CZML version information invalid.  It is expected to be a property on the document object in the <Major>.<Minor> version format.");var n=t._documentPacket;l(e.name)&&(n.name=e.name);var o=e.clock;if(l(o)){var a=n.clock;l(a)?(a.interval=s(o.interval,a.interval),a.currentTime=s(o.currentTime,a.currentTime),a.range=s(o.range,a.range),a.step=s(o.step,a.step),a.multiplier=s(o.multiplier,a.multiplier)):n.clock={interval:o.interval,currentTime:o.currentTime,range:o.range,step:o.step,multiplier:o.multiplier}}}function Nt(e,t,r,i){var n=t.ellipse;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.ellipse;l(u)||(e.ellipse=u=new G),Ct(Boolean,u,"show",n.show,a,i,r),Ct(Number,u,"rotation",n.rotation,a,i,r),Ct(Number,u,"semiMajorAxis",n.semiMajorAxis,a,i,r),Ct(Number,u,"semiMinorAxis",n.semiMinorAxis,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Number,u,"numberOfVerticalLines",n.numberOfVerticalLines,a,i,r)}}function Bt(e,r,i,n){var a=r.ellipsoid;if(l(a)){var s,u=a.interval;l(u)&&(tr.iso8601=u,s=A.fromIso8601(tr));var c=e.ellipsoid;l(c)||(e.ellipsoid=c=new H),Ct(Boolean,c,"show",a.show,s,n,i),Ct(t,c,"radii",a.radii,s,n,i),bt(c,"material",a.material,s,n,i),Ct(Boolean,c,"fill",a.fill,s,n,i),Ct(Boolean,c,"outline",a.outline,s,n,i),Ct(o,c,"outlineColor",a.outlineColor,s,n,i)}}function Ft(r,i,n,a){var s=i.label;if(l(s)){var u,c=s.interval;l(c)&&(tr.iso8601=c,u=A.fromIso8601(tr));var h=r.label;l(h)||(r.label=h=new X),Ct(o,h,"fillColor",s.fillColor,u,a,n),Ct(o,h,"outlineColor",s.outlineColor,u,a,n),Ct(Number,h,"outlineWidth",s.outlineWidth,u,a,n),Ct(t,h,"eyeOffset",s.eyeOffset,u,a,n),Ct(D,h,"horizontalOrigin",s.horizontalOrigin,u,a,n),Ct(String,h,"text",s.text,u,a,n),Ct(e,h,"pixelOffset",s.pixelOffset,u,a,n),Ct(Number,h,"scale",s.scale,u,a,n),Ct(Boolean,h,"show",s.show,u,a,n),Ct(R,h,"verticalOrigin",s.verticalOrigin,u,a,n),Ct(String,h,"font",s.font,u,a,n),Ct(I,h,"style",s.style,u,a,n)}}function zt(e,t,r,i){var n=t.model;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.model;l(s)||(e.model=s=new Z),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"scale",n.scale,o,i,r),Ct(Number,s,"minimumPixelSize",n.minimumPixelSize,o,i,r),Ct(O,s,"uri",n.gltf,o,i,r)}}function Vt(e,t,r,i){var n=t.path;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.path;l(s)||(e.path=s=new Q),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"width",n.width,o,i,r),Ct(Number,s,"resolution",n.resolution,o,i,r),Ct(Number,s,"leadTime",n.leadTime,o,i,r),Ct(Number,s,"trailTime",n.trailTime,o,i,r),bt(s,"material",n.material,o,i,r)}}function kt(e,t,r,i){var n=t.point;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.point;l(u)||(e.point=u=new J),Ct(o,u,"color",n.color,a,i,r),Ct(Number,u,"pixelSize",n.pixelSize,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Number,u,"outlineWidth",n.outlineWidth,a,i,r),Ct(Boolean,u,"show",n.show,a,i,r)}}function Ut(e,t,r,i){var n=t.polygon;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.polygon;l(u)||(e.polygon=u=new K),Ct(Boolean,u,"show",n.show,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Boolean,u,"perPositionHeight",n.perPositionHeight,a,i,r),It(u,n.positions,r)}}function Wt(e,t,r,i){var n=t.rectangle;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.rectangle;l(u)||(e.rectangle=u=new it),Ct(Boolean,u,"show",n.show,a,i,r),Ct(b,u,"coordinates",n.coordinates,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Number,u,"height",n.height,a,i,r),Ct(Number,u,"extrudedHeight",n.extrudedHeight,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Number,u,"rotation",n.rotation,a,i,r),Ct(Number,u,"stRotation",n.stRotation,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),Ct(Boolean,u,"closeBottom",n.closeBottom,a,i,r),Ct(Boolean,u,"closeTop",n.closeTop,a,i,r)}}function Gt(e,t,r,i){var n=t.wall;if(l(n)){var a,s=n.interval;l(s)&&(tr.iso8601=s,a=A.fromIso8601(tr));var u=e.wall;l(u)||(e.wall=u=new ht),Ct(Boolean,u,"show",n.show,a,i,r),bt(u,"material",n.material,a,i,r),Ct(Array,u,"minimumHeights",n.minimumHeights,a,i,r),Ct(Array,u,"maximumHeights",n.maximumHeights,a,i,r),Ct(Number,u,"granularity",n.granularity,a,i,r),Ct(Boolean,u,"fill",n.fill,a,i,r),Ct(Boolean,u,"outline",n.outline,a,i,r),Ct(o,u,"outlineColor",n.outlineColor,a,i,r),It(u,n.positions,r)}}function Ht(e,t,r,i){var n=t.polyline;if(l(n)){var o,a=n.interval;l(a)&&(tr.iso8601=a,o=A.fromIso8601(tr));var s=e.polyline;l(s)||(e.polyline=s=new et),Ct(Boolean,s,"show",n.show,o,i,r),Ct(Number,s,"width",n.width,o,i,r),bt(s,"material",n.material,o,i,r),Ct(Boolean,s,"followSurface",n.followSurface,o,i,r),Ct(Number,s,"granularity",n.granularity,o,i,r),It(s,n.positions,r)}}function qt(e,t,r,i,n){var o=e.id;if(l(o)||(o=a()),Zt=o,!l(n._version)&&"document"!==o)throw new x("The first CZML packet is required to be the document object.");if(e["delete"]===!0)t.removeById(o);else if("document"===o)Lt(e,n);else{var s=t.getOrCreateEntity(o),u=e.parent;l(u)&&(s.parent=t.getOrCreateEntity(u));for(var c=r.length-1;c>-1;c--)r[c](s,e,t,i)}Zt=void 0}function jt(e){var t,r=e._documentPacket.clock;if(!l(r)){if(!l(e._clock)){var o=e._entityCollection.computeAvailability();if(!o.start.equals(g.MINIMUM_VALUE)){var a=o.start,u=o.stop,c=_.secondsDifference(u,a),h=Math.round(c/120);return t=new W,t.startTime=_.clone(a),t.stopTime=_.clone(u),t.clockRange=i.LOOP_STOP,t.multiplier=h,t.currentTime=_.clone(a),t.clockStep=n.SYSTEM_CLOCK_MULTIPLIER,e._clock=t,!0}}return!1}if(l(e._clock)?t=e._clock.clone():(t=new W,t.startTime=g.MINIMUM_VALUE.clone(),t.stopTime=g.MAXIMUM_VALUE.clone(),t.currentTime=g.MINIMUM_VALUE.clone(),t.clockRange=i.LOOP_STOP,t.clockStep=n.SYSTEM_CLOCK_MULTIPLIER,t.multiplier=1),l(r.interval)){tr.iso8601=r.interval;var d=A.fromIso8601(tr);t.startTime=d.start,t.stopTime=d.stop}return l(r.currentTime)&&(t.currentTime=_.fromIso8601(r.currentTime)),l(r.range)&&(t.clockRange=s(i[r.range],i.LOOP_STOP)),l(r.step)&&(t.clockStep=s(n[r.step],n.SYSTEM_CLOCK_MULTIPLIER)),l(r.multiplier)&&(t.multiplier=r.multiplier),t.equals(e._clock)?!1:(e._clock=t.clone(e._clock),!0)}function Yt(e,t,r){var i=e._entityCollection;i.suspendEvents(),ir._processCzml(t,i,r,void 0,e);var n=jt(e),o=e._documentPacket;l(o.name)&&e._name!==o.name?(e._name=o.name,n=!0):!l(e._name)&&l(r)&&(e._name=p(r),n=!0),i.resumeEvents(),n&&e._changed.raiseEvent(e)}function Xt(e,t){e._isLoading!==t&&(e._isLoading=t,e._loading.raiseEvent(e,t))}var Zt,Qt=new t,Jt=new P,Kt=new r,$t=new A,er={HERMITE:f,LAGRANGE:y,LINEAR:C},tr={iso8601:void 0},rr=function(){this.name=void 0,this.clock=void 0},ir=function(e){this._name=e,this._changed=new d,this._error=new d,this._isLoading=!1,this._loading=new d,this._clock=void 0,this._documentPacket=new rr,this._version=void 0,this._entityCollection=new q};return u(ir.prototype,{name:{get:function(){return this._name}},clock:{get:function(){return this._clock}},entities:{get:function(){return this._entityCollection}},isLoading:{get:function(){return this._isLoading}},changedEvent:{get:function(){return this._changed}},errorEvent:{get:function(){return this._error}},loadingEvent:{get:function(){return this._loading}}}),ir.updaters=[Ot,Nt,Bt,Ft,zt,Tt,xt,Vt,kt,Ut,Ht,Wt,Pt,At,Gt,Mt,Rt],ir.prototype.process=function(e,t){Yt(this,e,t)},ir.prototype.load=function(e,t){this._version=void 0,this._documentPacket=new rr,this._entityCollection.removeAll(),Yt(this,e,t)},ir.prototype.processUrl=function(e){Xt(this,!0);var t=this;return L(w(e),function(r){t.process(r,e),Xt(t,!1)}).otherwise(function(e){return Xt(t,!1),t._error.raiseEvent(t,e),L.reject(e)})},ir.prototype.loadUrl=function(e){Xt(this,!0);var t=this;return L(w(e),function(r){t.load(r,e),Xt(t,!1)}).otherwise(function(e){return Xt(t,!1),t._error.raiseEvent(t,e),L.reject(e)})},ir.processPacketData=Ct,ir.processPositionPacketData=St,ir.processMaterialPacketData=bt,ir._processCzml=function(e,t,r,i,n){if(i=l(i)?i:ir.updaters,v(e))for(var o=0,a=e.length;a>o;o++)qt(e[o],t,i,r,n);else qt(e,t,i,r,n)},ir}),r("DataSources/DataSource",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r.prototype,{name:{get:t.throwInstantiationError},clock:{get:t.throwInstantiationError},entities:{get:t.throwInstantiationError},isLoading:{get:t.throwInstantiationError},changedEvent:{get:t.throwInstantiationError},errorEvent:{get:t.throwInstantiationError},loadingEvent:{get:t.throwInstantiationError}}),r.prototype.update=t.throwInstantiationError,r}),r("DataSources/DataSourceCollection",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event"],function(e,t,r,i,n,o){"use strict";var a=function(){this._dataSources=[],this._dataSourceAdded=new o,this._dataSourceRemoved=new o};return r(a.prototype,{length:{get:function(){return this._dataSources.length}},dataSourceAdded:{get:function(){return this._dataSourceAdded}},dataSourceRemoved:{get:function(){return this._dataSourceRemoved}}}),a.prototype.add=function(e){this._dataSources.push(e),this._dataSourceAdded.raiseEvent(this,e)},a.prototype.remove=function(t,r){r=e(r,!1);var i=this._dataSources.indexOf(t);return-1!==i?(this._dataSources.splice(i,1),this._dataSourceRemoved.raiseEvent(this,t),r&&"function"==typeof t.destroy&&t.destroy(),!0):!1},a.prototype.removeAll=function(t){t=e(t,!1);for(var r=this._dataSources,i=0,n=r.length;n>i;++i){var o=r[i];this._dataSourceRemoved.raiseEvent(this,o),t&&"function"==typeof o.destroy&&o.destroy()}r.length=0},a.prototype.contains=function(e){return-1!==this.indexOf(e)},a.prototype.indexOf=function(e){return this._dataSources.indexOf(e)},a.prototype.get=function(e){return this._dataSources[e]},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){return this.removeAll(!0),i(this)},a}),r("Shaders/Appearances/AllMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec3 v_tangentEC;\nvarying vec3 v_binormalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nmat3 tangentToEyeMatrix = czm_tangentToEyeSpaceMatrix(v_normalEC, v_tangentEC, v_binormalEC);\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = tangentToEyeMatrix;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nmaterialInput.st = v_st;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/AllMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec3 tangent;\nattribute vec3 binormal;\nattribute vec2 st;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec3 v_tangentEC;\nvarying vec3 v_binormalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_tangentEC = czm_normal * tangent;\nv_binormalEC = czm_normal * binormal;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/BasicMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/BasicMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/TexturedMaterialAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nmaterialInput.st = v_st;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/TexturedMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec2 st;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/CullFace",["../Core/freezeObject"],function(e){"use strict";var t={FRONT:1028,BACK:1029,FRONT_AND_BACK:1032};return e(t)}),r("Scene/Appearance",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Renderer/createShaderSource","./BlendingState","./CullFace"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){e=t(e,t.EMPTY_OBJECT),this.material=e.material,this.translucent=t(e.translucent,!0),this._vertexShaderSource=e.vertexShaderSource,this._fragmentShaderSource=e.fragmentShaderSource,this._renderState=e.renderState,this._closed=t(e.closed,!1)};return i(s.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}}}),s.prototype.getFragmentShaderSource=function(){return n({defines:[this.flat?"FLAT":"",this.faceForward?"FACE_FORWARD":""],sources:[r(this.material)?this.material.shaderSource:"",this.fragmentShaderSource]})},s.prototype.isTranslucent=function(){return r(this.material)&&this.material.isTranslucent()||!r(this.material)&&this.translucent},s.prototype.getRenderState=function(){var t=this.isTranslucent(),r=e(this.renderState,!1);return t?(r.depthMask=!1,r.blending=o.ALPHA_BLEND):r.depthMask=!0,r},s.getDefaultRenderState=function(e,t){var r={depthTest:{enabled:!0}};return e&&(r.depthMask=!1,r.blending=o.ALPHA_BLEND),t&&(r.cull={enabled:!0,face:a.BACK}),r},s}),r("Renderer/PixelDatatype",["../Core/freezeObject"],function(e){"use strict";var t={UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,UNSIGNED_INT:5125,FLOAT:5126,UNSIGNED_INT_24_8_WEBGL:34042,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,validate:function(e){return e===t.UNSIGNED_BYTE||e===t.UNSIGNED_SHORT||e===t.UNSIGNED_INT||e===t.FLOAT||e===t.UNSIGNED_INT_24_8_WEBGL||e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5}};return e(t)}),r("Renderer/CubeMapFace",["../Core/defaultValue","../Core/defineProperties","../Core/DeveloperError","./PixelDatatype"],function(e,t){"use strict";var r=function(e,t,r,i,n,o,a,s,l){this._gl=e,this._texture=t,this._textureTarget=r,this._targetFace=i,this._pixelFormat=n,this._pixelDatatype=o,this._size=a,this._preMultiplyAlpha=s,this._flipY=l};return t(r.prototype,{pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},_target:{get:function(){return this._targetFace}}}),r.prototype.copyFrom=function(t,r,i){r=e(r,0),i=e(i,0);var n=this._gl,o=this._textureTarget;n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._preMultiplyAlpha),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,this._flipY),n.activeTexture(n.TEXTURE0),n.bindTexture(o,this._texture),t.arrayBufferView?n.texSubImage2D(this._targetFace,0,r,i,t.width,t.height,this._pixelFormat,this._pixelDatatype,t.arrayBufferView):n.texSubImage2D(this._targetFace,0,r,i,this._pixelFormat,this._pixelDatatype,t),n.bindTexture(o,null)
},r.prototype.copyFromFramebuffer=function(t,r,i,n,o,a){t=e(t,0),r=e(r,0),i=e(i,0),n=e(n,0),o=e(o,this._size),a=e(a,this._size);var s=this._gl,l=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(l,this._texture),s.copyTexSubImage2D(this._targetFace,0,t,r,i,n,o,a),s.bindTexture(l,null)},r}),r("Renderer/MipmapHint",["../Core/freezeObject"],function(e){"use strict";var t={DONT_CARE:4352,FASTEST:4353,NICEST:4354,validate:function(e){return e===t.DONT_CARE||e===t.FASTEST||e===t.NICEST}};return e(t)}),r("Renderer/TextureMagnificationFilter",["../Core/freezeObject"],function(e){"use strict";var t={NEAREST:9728,LINEAR:9729,validate:function(e){return e===t.NEAREST||e===t.LINEAR}};return e(t)}),r("Renderer/TextureMinificationFilter",["../Core/freezeObject"],function(e){"use strict";var t={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,validate:function(e){return e===t.NEAREST||e===t.LINEAR||e===t.NEAREST_MIPMAP_NEAREST||e===t.LINEAR_MIPMAP_NEAREST||e===t.NEAREST_MIPMAP_LINEAR||e===t.LINEAR_MIPMAP_LINEAR}};return e(t)}),r("Renderer/TextureWrap",["../Core/freezeObject"],function(e){"use strict";var t={CLAMP_TO_EDGE:33071,REPEAT:10497,MIRRORED_REPEAT:33648,validate:function(e){return e===t.CLAMP_TO_EDGE||e===t.REPEAT||e===t.MIRRORED_REPEAT}};return e(t)}),r("Renderer/CubeMap",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","./CubeMapFace","./MipmapHint","./PixelDatatype","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";var d=function(e,t,r,i,n,o,s,l,u){this._gl=e,this._textureFilterAnisotropic=t,this._textureTarget=r,this._texture=i,this._pixelFormat=n,this._pixelDatatype=o,this._size=s,this._preMultiplyAlpha=l,this._flipY=u,this._sampler=void 0,this._positiveX=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_X,n,o,s,l,u),this._negativeX=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_X,n,o,s,l,u),this._positiveY=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_Y,n,o,s,l,u),this._negativeY=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_Y,n,o,s,l,u),this._positiveZ=new a(e,i,r,e.TEXTURE_CUBE_MAP_POSITIVE_Z,n,o,s,l,u),this._negativeZ=new a(e,i,r,e.TEXTURE_CUBE_MAP_NEGATIVE_Z,n,o,s,l,u),this.sampler=void 0};return r(d.prototype,{positiveX:{get:function(){return this._positiveX}},negativeX:{get:function(){return this._negativeX}},positiveY:{get:function(){return this._positiveY}},negativeY:{get:function(){return this._negativeY}},positiveZ:{get:function(){return this._positiveZ}},negativeZ:{get:function(){return this._negativeZ}},sampler:{get:function(){return this._sampler},set:function(e){var r=!0;if(!t(e)){r=!1;var i=c.LINEAR,o=u.LINEAR;this._pixelDatatype===l.FLOAT&&(i=c.NEAREST,o=u.NEAREST),e={wrapS:h.CLAMP_TO_EDGE,wrapT:h.CLAMP_TO_EDGE,minificationFilter:i,magnificationFilter:o,maximumAnisotropy:1}}if(this._pixelDatatype===l.FLOAT){if(e.minificationFilter!==c.NEAREST&&e.minificationFilter!==c.NEAREST_MIPMAP_NEAREST)throw new n("Only NEAREST and NEAREST_MIPMAP_NEAREST minification filters are supported for floating point textures.");if(e.magnificationFilter!==u.NEAREST)throw new n("Only the NEAREST magnification filter is supported for floating point textures.")}var a=this._gl,s=this._textureTarget;a.activeTexture(a.TEXTURE0),a.bindTexture(s,this._texture),a.texParameteri(s,a.TEXTURE_MIN_FILTER,e.minificationFilter),a.texParameteri(s,a.TEXTURE_MAG_FILTER,e.magnificationFilter),a.texParameteri(s,a.TEXTURE_WRAP_S,e.wrapS),a.texParameteri(s,a.TEXTURE_WRAP_T,e.wrapT),t(this._textureFilterAnisotropic)&&a.texParameteri(s,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),a.bindTexture(s,null),this._sampler=r?{wrapS:e.wrapS,wrapT:e.wrapT,minificationFilter:e.minificationFilter,magnificationFilter:e.magnificationFilter,maximumAnisotropy:e.maximumAnisotropy}:void 0}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},width:{get:function(){return this._size}},height:{get:function(){return this._size}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},_target:{get:function(){return this._textureTarget}}}),d.prototype.generateMipmap=function(t){t=e(t,s.DONT_CARE);var r=this._gl,i=this._textureTarget;r.hint(r.GENERATE_MIPMAP_HINT,t),r.activeTexture(r.TEXTURE0),r.bindTexture(i,this._texture),r.generateMipmap(i),r.bindTexture(i,null)},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){return this._gl.deleteTexture(this._texture),this._positiveX=i(this._positiveX),this._negativeX=i(this._negativeX),this._positiveY=i(this._positiveY),this._negativeY=i(this._negativeY),this._positiveZ=i(this._positiveZ),this._negativeZ=i(this._negativeZ),i(this)},d}),r("Renderer/Texture",["../Core/Cartesian2","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","../Core/PixelFormat","./MipmapHint","./PixelDatatype","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(i,n){n=t(n,t.EMPTY_OBJECT);var a=n.source,l=r(a)?a.width:n.width,c=r(a)?a.height:n.height,h=t(n.pixelFormat,s.RGBA),d=t(n.pixelDatatype,u.UNSIGNED_BYTE);if(d===u.FLOAT&&!i.floatingPointTexture)throw new o("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture.");if(s.isDepthFormat(h)&&!i.depthTexture)throw new o("When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture.");var m=n.preMultiplyAlpha||h===s.RGB||h===s.LUMINANCE,p=t(n.flipY,!0),f=i._gl,v=f.TEXTURE_2D,g=f.createTexture();f.activeTexture(f.TEXTURE0),f.bindTexture(v,g),r(a)?(f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,m),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,p),r(a.arrayBufferView)?f.texImage2D(v,0,h,l,c,0,h,d,a.arrayBufferView):r(a.framebuffer)?(a.framebuffer!==i.defaultFramebuffer&&a.framebuffer._bind(),f.copyTexImage2D(v,0,h,a.xOffset,a.yOffset,l,c,0),a.framebuffer!==i.defaultFramebuffer&&a.framebuffer._unBind()):f.texImage2D(v,0,h,h,d,a)):f.texImage2D(v,0,h,l,c,0,h,d,null),f.bindTexture(v,null),this._context=i,this._textureFilterAnisotropic=i._textureFilterAnisotropic,this._textureTarget=v,this._texture=g,this._pixelFormat=h,this._pixelDatatype=d,this._width=l,this._height=c,this._dimensions=new e(l,c),this._preMultiplyAlpha=m,this._flipY=p,this._sampler=void 0,this.sampler=void 0};return i(m.prototype,{sampler:{get:function(){return this._sampler},set:function(e){var t=!0;if(!r(e)){t=!1;var i=h.LINEAR,n=c.LINEAR;this._pixelDatatype===u.FLOAT&&(i=h.NEAREST,n=c.NEAREST),e={wrapS:d.CLAMP_TO_EDGE,wrapT:d.CLAMP_TO_EDGE,minificationFilter:i,magnificationFilter:n,maximumAnisotropy:1}}if(this._pixelDatatype===u.FLOAT){if(e.minificationFilter!==h.NEAREST&&e.minificationFilter!==h.NEAREST_MIPMAP_NEAREST)throw new o("Only NEAREST and NEAREST_MIPMAP_NEAREST minification filters are supported for floating point textures.");if(e.magnificationFilter!==c.NEAREST)throw new o("Only the NEAREST magnification filter is supported for floating point textures.")}var a=this._context._gl,s=this._textureTarget;a.activeTexture(a.TEXTURE0),a.bindTexture(s,this._texture),a.texParameteri(s,a.TEXTURE_MIN_FILTER,e.minificationFilter),a.texParameteri(s,a.TEXTURE_MAG_FILTER,e.magnificationFilter),a.texParameteri(s,a.TEXTURE_WRAP_S,e.wrapS),a.texParameteri(s,a.TEXTURE_WRAP_T,e.wrapT),r(this._textureFilterAnisotropic)&&a.texParameteri(s,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),a.bindTexture(s,null),this._sampler=t?{wrapS:e.wrapS,wrapT:e.wrapT,minificationFilter:e.minificationFilter,magnificationFilter:e.magnificationFilter,maximumAnisotropy:e.maximumAnisotropy}:void 0}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},dimensions:{get:function(){return this._dimensions}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},_target:{get:function(){return this._textureTarget}}}),m.prototype.copyFrom=function(e,r,i){r=t(r,0),i=t(i,0);var n=this._context._gl,o=this._textureTarget;n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this._preMultiplyAlpha),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,this._flipY),n.activeTexture(n.TEXTURE0),n.bindTexture(o,this._texture),e.arrayBufferView?n.texSubImage2D(o,0,r,i,e.width,e.height,this._pixelFormat,this._pixelDatatype,e.arrayBufferView):n.texSubImage2D(o,0,r,i,this._pixelFormat,this._pixelDatatype,e),n.bindTexture(o,null)},m.prototype.copyFromFramebuffer=function(e,r,i,n,o,a){e=t(e,0),r=t(r,0),i=t(i,0),n=t(n,0),o=t(o,this._width),a=t(a,this._height);var s=this._context._gl,l=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(l,this._texture),s.copyTexSubImage2D(l,0,e,r,i,n,o,a),s.bindTexture(l,null)},m.prototype.generateMipmap=function(e){e=t(e,l.DONT_CARE);var r=this._context._gl,i=this._textureTarget;r.hint(r.GENERATE_MIPMAP_HINT,e),r.activeTexture(r.TEXTURE0),r.bindTexture(i,this._texture),r.generateMipmap(i),r.bindTexture(i,null)},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._context._gl.deleteTexture(this._texture),n(this)},m}),r("Shaders/Materials/BumpMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nvec2 centerPixel = fract(repeat * st);\nfloat centerBump = texture2D(image, centerPixel).channel;\nfloat imageWidth = float(imageDimensions.x);\nvec2 rightPixel = fract(repeat * (st + vec2(1.0 / imageWidth, 0.0)));\nfloat rightBump = texture2D(image, rightPixel).channel;\nfloat imageHeight = float(imageDimensions.y);\nvec2 leftPixel = fract(repeat * (st + vec2(0.0, 1.0 / imageHeight)));\nfloat topBump = texture2D(image, leftPixel).channel;\nvec3 normalTangentSpace = normalize(vec3(centerBump - rightBump, centerBump - topBump, clamp(1.0 - strength, 0.1, 1.0)));\nvec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\nmaterial.normal = normalEC;\nmaterial.diffuse = vec3(0.01);\nreturn material;\n}\n"}),r("Shaders/Materials/CheckerboardMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);\nfloat scaledWidth = fract(repeat.s * st.s);\nscaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\nfloat scaledHeight = fract(repeat.t * st.t);\nscaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\nfloat value = min(scaledWidth, scaledHeight);\nvec4 currentColor = mix(lightColor, darkColor, b);\nvec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/DotMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat b = smoothstep(0.3, 0.32, length(fract(repeat * materialInput.st) - 0.5));\nvec4 color = mix(lightColor, darkColor, b);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/FadeMaterial",[],function(){"use strict";return"uniform vec4 fadeInColor;\nuniform vec4 fadeOutColor;\nuniform float maximumDistance;\nuniform bool repeat;\nuniform vec2 fadeDirection;\nuniform vec2 time;\nfloat getTime(float t, float coord)\n{\nfloat scalar = 1.0 / maximumDistance;\nfloat q  = distance(t, coord) * scalar;\nif (repeat)\n{\nfloat r = distance(t, coord + 1.0) * scalar;\nfloat s = distance(t, coord - 1.0) * scalar;\nq = min(min(r, s), q);\n}\nreturn clamp(q, 0.0, 1.0);\n}\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat s = getTime(time.x, st.s) * fadeDirection.s;\nfloat t = getTime(time.y, st.t) * fadeDirection.t;\nfloat u = length(vec2(s, t));\nvec4 color = mix(fadeInColor, fadeOutColor, u);\nmaterial.emission = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/GridMaterial",[],function(){"use strict";return"#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\nuniform vec4 color;\nuniform float cellAlpha;\nuniform vec2 lineCount;\nuniform vec2 lineThickness;\nuniform vec2 lineOffset;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat scaledWidth = fract(lineCount.s * st.s - lineOffset.s);\nscaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\nfloat scaledHeight = fract(lineCount.t * st.t - lineOffset.t);\nscaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\nfloat value;\n#ifdef GL_OES_standard_derivatives\nconst float fuzz = 1.2;\nvec2 thickness = (lineThickness * czm_resolutionScale) - 1.0;\nvec2 dx = abs(dFdx(st));\nvec2 dy = abs(dFdy(st));\nvec2 dF = vec2(max(dx.s, dy.s), max(dx.t, dy.t)) * lineCount;\nvalue = min(\nsmoothstep(dF.s * thickness.s, dF.s * (fuzz + thickness.s), scaledWidth),\nsmoothstep(dF.t * thickness.t, dF.t * (fuzz + thickness.t), scaledHeight));\n#else\nconst float fuzz = 0.05;\nvec2 range = 0.5 - (lineThickness * 0.05);\nvalue = min(\n1.0 - smoothstep(range.s, range.s + fuzz, scaledWidth),\n1.0 - smoothstep(range.t, range.t + fuzz, scaledHeight));\n#endif\nfloat dRim = 1.0 - abs(dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC)));\nfloat sRim = smoothstep(0.8, 1.0, dRim);\nvalue *= (1.0 - sRim);\nvec3 halfColor = color.rgb * 0.5;\nmaterial.diffuse = halfColor;\nmaterial.emission = halfColor;\nmaterial.alpha = color.a * (1.0 - ((1.0 - cellAlpha) * value));\nreturn material;\n}\n"}),r("Shaders/Materials/NormalMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec4 textureValue = texture2D(image, fract(repeat * materialInput.st));\nvec3 normalTangentSpace = textureValue.channels;\nnormalTangentSpace.xy = normalTangentSpace.xy * 2.0 - 1.0;\nnormalTangentSpace.z = clamp(1.0 - strength, 0.1, 1.0);\nnormalTangentSpace = normalize(normalTangentSpace);\nvec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\nmaterial.normal = normalEC;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineArrowMaterial",[],function(){"use strict";return"#extension GL_OES_standard_derivatives : enable\nuniform vec4 color;\nvarying float v_width;\nfloat getPointOnLine(vec2 p0, vec2 p1, float x)\n{\nfloat slope = (p0.y - p1.y) / (p0.x - p1.x);\nreturn slope * (x - p0.x) + p0.y;\n}\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat base = 1.0 - abs(fwidth(st.s)) * 10.0;\nvec2 center = vec2(1.0, 0.5);\nfloat ptOnUpperLine = getPointOnLine(vec2(base, 1.0), center, st.s);\nfloat ptOnLowerLine = getPointOnLine(vec2(base, 0.0), center, st.s);\nfloat halfWidth = 0.15;\nfloat s = step(0.5 - halfWidth, st.t);\ns *= 1.0 - step(0.5 + halfWidth, st.t);\ns *= 1.0 - step(base, st.s);\nfloat t = step(base, materialInput.st.s);\nt *= 1.0 - step(ptOnUpperLine, st.t);\nt *= step(ptOnLowerLine, st.t);\nfloat dist;\nif (st.s < base)\n{\nfloat d1 = abs(st.t - (0.5 - halfWidth));\nfloat d2 = abs(st.t - (0.5 + halfWidth));\ndist = min(d1, d2);\n}\nelse\n{\nfloat d1 = czm_infinity;\nif (st.t < 0.5 - halfWidth && st.t > 0.5 + halfWidth)\n{\nd1 = abs(st.s - base);\n}\nfloat d2 = abs(st.t - ptOnUpperLine);\nfloat d3 = abs(st.t - ptOnLowerLine);\ndist = min(min(d1, d2), d3);\n}\nvec4 outsideColor = vec4(0.0);\nvec4 currentColor = mix(outsideColor, color, clamp(s + t, 0.0, 1.0));\nvec4 outColor = czm_antialias(outsideColor, color, currentColor, dist);\nmaterial.diffuse = outColor.rgb;\nmaterial.alpha = outColor.a;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineGlowMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform float glowPower;\nvarying float v_width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);\nmaterial.emission = max(vec3(glow - 1.0 + color.rgb), color.rgb);\nmaterial.alpha = clamp(0.0, 1.0, glow) * color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/PolylineOutlineMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 outlineColor;\nuniform float outlineWidth;\nvarying float v_width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nvec2 st = materialInput.st;\nfloat halfInteriorWidth =  0.5 * (v_width - outlineWidth) / v_width;\nfloat b = step(0.5 - halfInteriorWidth, st.t);\nb *= 1.0 - step(0.5 + halfInteriorWidth, st.t);\nfloat d1 = abs(st.t - (0.5 - halfInteriorWidth));\nfloat d2 = abs(st.t - (0.5 + halfInteriorWidth));\nfloat dist = min(d1, d2);\nvec4 currentColor = mix(outlineColor, color, b);\nvec4 outColor = czm_antialias(outlineColor, color, currentColor, dist);\nmaterial.diffuse = outColor.rgb;\nmaterial.alpha = outColor.a;\nreturn material;\n}\n"}),r("Shaders/Materials/RimLightingMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 rimColor;\nuniform float width;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat d = 1.0 - dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC));\nfloat s = smoothstep(1.0 - width, 1.0, d);\nmaterial.diffuse = color.rgb;\nmaterial.emission = rimColor.rgb * s;\nmaterial.alpha = mix(color.a, rimColor.a, s);\nreturn material;\n}\n"}),r("Shaders/Materials/StripeMaterial",[],function(){"use strict";return"uniform vec4 evenColor;\nuniform vec4 oddColor;\nuniform float offset;\nuniform float repeat;\nuniform bool horizontal;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat coord = mix(materialInput.st.s, materialInput.st.t, float(horizontal));\nfloat value = fract((coord - offset) * (repeat * 0.5));\nfloat dist = min(value, min(abs(value - 0.5), 1.0 - value));\nvec4 currentColor = mix(evenColor, oddColor, step(0.5, value));\nvec4 color = czm_antialias(evenColor, oddColor, currentColor, dist);\nmaterial.diffuse = color.rgb;\nmaterial.alpha = color.a;\nreturn material;\n}\n"}),r("Shaders/Materials/Water",[],function(){"use strict";return"uniform sampler2D specularMap;\nuniform sampler2D normalMap;\nuniform vec4 baseWaterColor;\nuniform vec4 blendColor;\nuniform float frequency;\nuniform float animationSpeed;\nuniform float amplitude;\nuniform float specularIntensity;\nuniform float fadeFactor;\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\nczm_material material = czm_getDefaultMaterial(materialInput);\nfloat time = czm_frameNumber * animationSpeed;\nfloat fade = max(1.0, (length(materialInput.positionToEyeEC) / 10000000000.0) * frequency * fadeFactor);\nfloat specularMapValue = texture2D(specularMap, materialInput.st).r;\nvec4 noise = czm_getWaterNoise(normalMap, materialInput.st * frequency, time, 0.0);\nvec3 normalTangentSpace = noise.xyz * vec3(1.0, 1.0, (1.0 / amplitude));\nnormalTangentSpace.xy /= fade;\nnormalTangentSpace = mix(vec3(0.0, 0.0, 50.0), normalTangentSpace, specularMapValue);\nnormalTangentSpace = normalize(normalTangentSpace);\nfloat tsPerturbationRatio = clamp(dot(normalTangentSpace, vec3(0.0, 0.0, 1.0)), 0.0, 1.0);\nmaterial.alpha = specularMapValue;\nmaterial.diffuse = mix(blendColor.rgb, baseWaterColor.rgb, specularMapValue);\nmaterial.diffuse += (0.1 * tsPerturbationRatio);\nmaterial.normal = normalize(materialInput.tangentToEyeMatrix * normalTangentSpace);\nmaterial.specular = specularIntensity;\nmaterial.shininess = 10.0;\nreturn material;\n}\n"}),r("Scene/Material",["../Core/Cartesian2","../Core/clone","../Core/Color","../Core/combine","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/isArray","../Core/loadImage","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Renderer/CubeMap","../Renderer/Texture","../Shaders/Materials/BumpMapMaterial","../Shaders/Materials/CheckerboardMaterial","../Shaders/Materials/DotMaterial","../Shaders/Materials/FadeMaterial","../Shaders/Materials/GridMaterial","../Shaders/Materials/NormalMapMaterial","../Shaders/Materials/PolylineArrowMaterial","../Shaders/Materials/PolylineGlowMaterial","../Shaders/Materials/PolylineOutlineMaterial","../Shaders/Materials/RimLightingMaterial","../Shaders/Materials/StripeMaterial","../Shaders/Materials/Water","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M){"use strict";function D(e,r){e=o(e,o.EMPTY_OBJECT),r._strict=o(e.strict,!1),r._count=o(e.count,0),r._template=t(o(e.fabric,o.EMPTY_OBJECT)),r._template.uniforms=t(o(r._template.uniforms,o.EMPTY_OBJECT)),r._template.materials=t(o(r._template.materials,o.EMPTY_OBJECT)),r.type=a(r._template.type)?r._template.type:n(),r.shaderSource="",r.materials={},r.uniforms={},r._uniforms={},r._translucentFunctions=[];var s,l=H._materialCache.getMaterial(r.type);if(a(l)){var u=t(l.fabric,!0);r._template=i(r._template,u,!0),s=l.translucent}L(r),a(l)||H._materialCache.addMaterial(r.type,r),N(r),z(r),U(r);var c=0===r._translucentFunctions.length?!0:void 0;if(s=o(s,c),s=o(e.translucent,s),a(s))if("function"==typeof s){var h=function(){return s(r)};r._translucentFunctions.push(h)}else r._translucentFunctions.push(s)}function I(e,t,r,i){if(a(e))for(var n in e)if(e.hasOwnProperty(n)){var o=-1!==t.indexOf(n);(i&&!o||!i&&o)&&r(n,t)}}function R(e,t){for(var r="fabric: property name '"+e+"' is not valid. It should be ",i=0;i<t.length;i++){var n="'"+t[i]+"'";r+=i===t.length-1?"or "+n+".":n+", "}throw new u(r)}function O(e){var t="fabric: uniforms and materials cannot share the same property '"+e+"'";throw new u(t)}function L(e){var t=e._template,r=t.uniforms,i=t.materials,n=t.components;if(a(n)&&a(t.source))throw new u("fabric: cannot have source and components in the same template.");I(t,q,R,!0),I(n,j,R,!0);var o=[];for(var s in i)i.hasOwnProperty(s)&&o.push(s);I(r,o,O,!1)}function N(e){var t=e._template.components,r=e._template.source;if(a(r))e.shaderSource+=r+"\n";else{if(e.shaderSource+="czm_material czm_getMaterial(czm_materialInput materialInput)\n{\n",e.shaderSource+="czm_material material = czm_getDefaultMaterial(materialInput);\n",a(t))for(var i in t)t.hasOwnProperty(i)&&(e.shaderSource+="material."+i+" = "+t[i]+";\n");e.shaderSource+="return material;\n}\n"}}function B(e){return function(t,r){var i,n,o=t.uniforms,s=o[e],l=t._textures[e];if(s instanceof v&&s!==l)return H._textureCache.releaseTexture(t._texturePaths[e]),t._texturePaths[e]=void 0,t._textures[e]=s,i=e+"Dimensions",o.hasOwnProperty(i)&&(n=o[i],n.x=s._width,n.y=s._height),void 0;if(a(l)||(t._texturePaths[e]=void 0,l=t._textures[e]=r.defaultTexture,i=e+"Dimensions",o.hasOwnProperty(i)&&(n=o[i],n.x=l._width,n.y=l._height)),s!==H.DefaultImageId&&s!==t._texturePaths[e]){var u=H._textureCache.getTexture(s);a(u)?(H._textureCache.releaseTexture(t._texturePaths[e]),t._textures[e]=u):M(h(s),function(r){t._loadedImages.push({id:e,image:r})}),t._texturePaths[e]=s}}}function F(e){return function(t,r){var i=t.uniforms[e];if(i instanceof f)return H._textureCache.releaseTexture(t._texturePaths[e]),t._texturePaths[e]=void 0,t._textures[e]=i,void 0;if(a(t._textures[e])||(t._texturePaths[e]=void 0,t._textures[e]=r.defaultCubeMap),i!==H.DefaultCubeMapId){var n=i.positiveX+i.negativeX+i.positiveY+i.negativeY+i.positiveZ+i.negativeZ;if(n!==t._texturePaths[e]){var o=H._textureCache.getTexture(n);if(a(o))H._textureCache.releaseTexture(t._texturePaths[e]),t._textures[e]=o;else{var s=[h(i.positiveX),h(i.negativeX),h(i.positiveY),h(i.negativeY),h(i.positiveZ),h(i.negativeZ)];M.all(s).then(function(r){t._loadedCubeMaps.push({id:e,images:r})})}t._texturePaths[e]=n}}}}function z(e){var t=e._template.uniforms;for(var r in t)t.hasOwnProperty(r)&&V(e,r)}function V(e,t){var r=e._strict,i=e._template.uniforms,n=i[t],o=k(n);if(!a(o))throw new u("fabric: uniform '"+t+"' has invalid type.");if("channels"===o){if(0===W(e,t,n,!1)&&r)throw new u("strict: shader source does not use channels '"+t+"'.")}else{if("sampler2D"===o){var s=t+"Dimensions";G(e,s)>0&&(i[s]={type:"ivec3",x:1,y:1},V(e,s))}var l=new RegExp("uniform\\s+"+o+"\\s+"+t+"\\s*;");if(!l.test(e.shaderSource)){var c="uniform "+o+" "+t+";";e.shaderSource=c+e.shaderSource}var h=t+"_"+e._count++;if(1===W(e,t,h)&&r)throw new u("strict: shader source does not use uniform '"+t+"'.");if(e.uniforms[t]=n,"sampler2D"===o)e._uniforms[h]=function(){return e._textures[t]},e._updateFunctions.push(B(t));else if("samplerCube"===o)e._uniforms[h]=function(){return e._textures[t]},e._updateFunctions.push(F(t));else if(-1!==o.indexOf("mat")){var d=new Y[o];e._uniforms[h]=function(){return Y[o].fromColumnMajorArray(e.uniforms[t],d)}}else e._uniforms[h]=function(){return e.uniforms[t]}}}function k(e){var t=e.type;if(!a(t)){var r=typeof e;if("number"===r)t="float";else if("boolean"===r)t="bool";else if("string"===r)t=/^([rgba]){1,4}$/i.test(e)?"channels":e===H.DefaultCubeMapId?"samplerCube":"sampler2D";else if("object"===r)if(c(e))(4===e.length||9===e.length||16===e.length)&&(t="mat"+Math.sqrt(e.length));else{var i=0;for(var n in e)e.hasOwnProperty(n)&&(i+=1);i>=2&&4>=i?t="vec"+i:6===i&&(t="samplerCube")}}return t}function U(e){var t=e._strict,r=e._template.materials;for(var n in r)if(r.hasOwnProperty(n)){var o=new H({strict:t,fabric:r[n],count:e._count});e._count=o._count,e._uniforms=i(e._uniforms,o._uniforms,!0),e.materials[n]=o,e._translucentFunctions=e._translucentFunctions.concat(o._translucentFunctions);var a="czm_getMaterial",s=a+"_"+e._count++;W(o,a,s),e.shaderSource=o.shaderSource+e.shaderSource;var l=s+"(materialInput)";if(0===W(e,n,l)&&t)throw new u("strict: shader source does not use material '"+n+"'.")}}function W(e,t,r,i){i=o(i,!0);var n=0,a="([\\w])?",s="([\\w"+(i?".":"")+"])?",l=new RegExp(s+t+a,"g");return e.shaderSource=e.shaderSource.replace(l,function(e,t,i){return t||i?e:(n+=1,r)}),n}function G(e,t,r){return W(e,t,t,r)}var H=function(e){this.type=void 0,this.shaderSource=void 0,this.materials=void 0,this.uniforms=void 0,this._uniforms=void 0,this.translucent=void 0,this._strict=void 0,this._template=void 0,this._count=void 0,this._texturePaths={},this._loadedImages=[],this._loadedCubeMaps=[],this._textures={},this._updateFunctions=[],D(e,this),s(this,{type:{value:this.type,writable:!1}}),a(H._uniformList[this.type])||(H._uniformList[this.type]=Object.keys(this._uniforms))};H._uniformList={},H.fromType=function(e,t){var r=new H({fabric:{type:e}});if(a(t))for(var i in t)t.hasOwnProperty(i)&&(r.uniforms[i]=t[i]);return r},H.prototype.isTranslucent=function(){if(a(this.translucent))return"function"==typeof this.translucent?this.translucent():this.translucent;for(var e=!0,t=this._translucentFunctions,r=t.length,i=0;r>i;++i){var n=t[i];if(e="function"==typeof n?e&&n():e&&n,!e)break}return e},H.prototype.update=function(e){var t,r,i=this._loadedImages,n=i.length;for(t=0;n>t;++t){var o=i[t];r=o.id;var s=o.image,l=H._textureCache.getTexture(this._texturePaths[r]);a(l)||(l=e.createTexture2D({source:s}),H._textureCache.addTexture(this._texturePaths[r],l)),this._textures[r]=l;var u=r+"Dimensions";if(this.uniforms.hasOwnProperty(u)){var c=this.uniforms[u];c.x=l._width,c.y=l._height}}i.length=0;var h=this._loadedCubeMaps;for(n=h.length,t=0;n>t;++t){var d=h[t];r=d.id;var m=d.images,p=H._textureCache.getTexture(this._texturePaths[r]);a(p)||(p=e.createCubeMap({source:{positiveX:m[0],negativeX:m[1],positiveY:m[2],negativeY:m[3],positiveZ:m[4],negativeZ:m[5]}}),H._textureCache.addTexture(this._texturePaths[r],p)),this._textures[r]=p}h.length=0;var f=this._updateFunctions;for(n=f.length,t=0;n>t;++t)f[t](this,e);var v=this.materials;for(var g in v)v.hasOwnProperty(g)&&v[g].update(e)},H.prototype.isDestroyed=function(){return!1},H.prototype.destroy=function(){var e=this.materials,t=this.uniforms;for(var r in t)if(t.hasOwnProperty(r)){var i=this._texturePaths[r];H._textureCache.releaseTexture(i)}for(var n in e)e.hasOwnProperty(n)&&e[n].destroy();return l(this)};var q=["type","materials","uniforms","components","source"],j=["diffuse","specular","shininess","normal","emission","alpha"],Y={mat2:d,mat3:m,mat4:p};return H._textureCache={_textures:{},addTexture:function(e,t){this._textures[e]={texture:t,count:1}},getTexture:function(e){var t=this._textures[e];return a(t)?(t.count++,t.texture):void 0},releaseTexture:function(e){var t=this._textures[e];a(t)&&0===--t.count&&(t.texture=t.texture&&t.texture.destroy(),this._textures[e]=void 0)}},H._materialCache={_materials:{},addMaterial:function(e,t){this._materials[e]=t},getMaterial:function(e){return this._materials[e]}},H.DefaultImageId="czm_defaultImage",H.DefaultCubeMapId="czm_defaultCubeMap",H.ColorType="Color",H._materialCache.addMaterial(H.ColorType,{fabric:{type:H.ColorType,uniforms:{color:new r(1,0,0,.5)},components:{diffuse:"color.rgb",alpha:"color.a"}},translucent:function(e){return e.uniforms.color.alpha<1}}),H.ImageType="Image",H._materialCache.addMaterial(H.ImageType,{fabric:{type:H.ImageType,uniforms:{image:H.DefaultImageId,repeat:new e(1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).rgb",alpha:"texture2D(image, fract(repeat * materialInput.st)).a"}},translucent:!0}),H.DiffuseMapType="DiffuseMap",H._materialCache.addMaterial(H.DiffuseMapType,{fabric:{type:H.DiffuseMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),H.AlphaMapType="AlphaMap",H._materialCache.addMaterial(H.AlphaMapType,{fabric:{type:H.AlphaMapType,uniforms:{image:H.DefaultImageId,channel:"a",repeat:new e(1,1)},components:{alpha:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!0}),H.SpecularMapType="SpecularMap",H._materialCache.addMaterial(H.SpecularMapType,{fabric:{type:H.SpecularMapType,uniforms:{image:H.DefaultImageId,channel:"r",repeat:new e(1,1)},components:{specular:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!1}),H.EmissionMapType="EmissionMap",H._materialCache.addMaterial(H.EmissionMapType,{fabric:{type:H.EmissionMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{emission:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),H.BumpMapType="BumpMap",H._materialCache.addMaterial(H.BumpMapType,{fabric:{type:H.BumpMapType,uniforms:{image:H.DefaultImageId,channel:"r",strength:.8,repeat:new e(1,1)},source:g},translucent:!1}),H.NormalMapType="NormalMap",H._materialCache.addMaterial(H.NormalMapType,{fabric:{type:H.NormalMapType,uniforms:{image:H.DefaultImageId,channels:"rgb",strength:.8,repeat:new e(1,1)},source:S},translucent:!1}),H.GridType="Grid",H._materialCache.addMaterial(H.GridType,{fabric:{type:H.GridType,uniforms:{color:new r(0,1,0,1),cellAlpha:.1,lineCount:new e(8,8),lineThickness:new e(1,1),lineOffset:new e(0,0)},source:w},translucent:function(e){var t=e.uniforms;
return t.color.alpha<1||t.cellAlpha<1}}),H.StripeType="Stripe",H._materialCache.addMaterial(H.StripeType,{fabric:{type:H.StripeType,uniforms:{horizontal:!0,evenColor:new r(1,1,1,.5),oddColor:new r(0,0,1,.5),offset:0,repeat:5},source:P},translucent:function(e){var t=e.uniforms;return t.evenColor.alpha<1||t.oddColor.alpha<0}}),H.CheckerboardType="Checkerboard",H._materialCache.addMaterial(H.CheckerboardType,{fabric:{type:H.CheckerboardType,uniforms:{lightColor:new r(1,1,1,.5),darkColor:new r(0,0,0,.5),repeat:new e(5,5)},source:_},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<0}}),H.DotType="Dot",H._materialCache.addMaterial(H.DotType,{fabric:{type:H.DotType,uniforms:{lightColor:new r(1,1,0,.75),darkColor:new r(0,1,1,.75),repeat:new e(5,5)},source:y},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<0}}),H.WaterType="Water",H._materialCache.addMaterial(H.WaterType,{fabric:{type:H.WaterType,uniforms:{baseWaterColor:new r(.2,.3,.6,1),blendColor:new r(0,1,.699,1),specularMap:H.DefaultImageId,normalMap:H.DefaultImageId,frequency:10,animationSpeed:.01,amplitude:1,specularIntensity:.5,fadeFactor:1},source:A},translucent:function(e){var t=e.uniforms;return t.baseWaterColor.alpha<1||t.blendColor.alpha<0}}),H.RimLightingType="RimLighting",H._materialCache.addMaterial(H.RimLightingType,{fabric:{type:H.RimLightingType,uniforms:{color:new r(1,0,0,.7),rimColor:new r(1,1,1,.4),width:.3},source:x},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.rimColor.alpha<0}}),H.FadeType="Fade",H._materialCache.addMaterial(H.FadeType,{fabric:{type:H.FadeType,uniforms:{fadeInColor:new r(1,0,0,1),fadeOutColor:new r(0,0,0,0),maximumDistance:.5,repeat:!0,fadeDirection:{x:!0,y:!0},time:new e(.5,.5)},source:C},translucent:function(e){var t=e.uniforms;return t.fadeInColor.alpha<1||t.fadeOutColor.alpha<0}}),H.PolylineArrowType="PolylineArrow",H._materialCache.addMaterial(H.PolylineArrowType,{fabric:{type:H.PolylineArrowType,uniforms:{color:new r(1,1,1,1)},source:E},translucent:!0}),H.PolylineGlowType="PolylineGlow",H._materialCache.addMaterial(H.PolylineGlowType,{fabric:{type:H.PolylineGlowType,uniforms:{color:new r(0,.5,1,1),glowPower:.25},source:b},translucent:!0}),H.PolylineOutlineType="PolylineOutline",H._materialCache.addMaterial(H.PolylineOutlineType,{fabric:{type:H.PolylineOutlineType,uniforms:{color:new r(1,1,1,1),outlineColor:new r(1,0,0,1),outlineWidth:1},source:T},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.outlineColor.alpha<1}}),H}),r("Scene/MaterialAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/freezeObject","../Core/VertexFormat","../Shaders/Appearances/AllMaterialAppearanceFS","../Shaders/Appearances/AllMaterialAppearanceVS","../Shaders/Appearances/BasicMaterialAppearanceFS","../Shaders/Appearances/BasicMaterialAppearanceVS","../Shaders/Appearances/TexturedMaterialAppearanceFS","../Shaders/Appearances/TexturedMaterialAppearanceVS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),n=e(r.closed,!1),o=e(r.materialSupport,m.MaterialSupport.TEXTURED);this.material=t(r.material)?r.material:d.fromType(d.ColorType),this.translucent=i,this._vertexShaderSource=e(r.vertexShaderSource,o.vertexShaderSource),this._fragmentShaderSource=e(r.fragmentShaderSource,o.fragmentShaderSource),this._renderState=e(r.renderState,h.getDefaultRenderState(i,n)),this._closed=n,this._materialSupport=o,this._vertexFormat=o.vertexFormat,this._flat=e(r.flat,!1),this._faceForward=e(r.faceForward,!n)};return r(m.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},materialSupport:{get:function(){return this._materialSupport}},vertexFormat:{get:function(){return this._vertexFormat}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}}}),m.prototype.getFragmentShaderSource=h.prototype.getFragmentShaderSource,m.prototype.isTranslucent=h.prototype.isTranslucent,m.prototype.getRenderState=h.prototype.getRenderState,m.MaterialSupport={BASIC:i({vertexFormat:n.POSITION_AND_NORMAL,vertexShaderSource:l,fragmentShaderSource:s}),TEXTURED:i({vertexFormat:n.POSITION_NORMAL_AND_ST,vertexShaderSource:c,fragmentShaderSource:u}),ALL:i({vertexFormat:n.ALL,vertexShaderSource:a,fragmentShaderSource:o})},m}),r("Shaders/Appearances/PerInstanceColorAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec4 v_color;\nvoid main()\n{\nvec3 positionToEyeEC = -v_positionEC;\nvec3 normalEC;\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(v_normalEC, vec3(0.0, 0.0, 1.0), -v_normalEC));\n#else\nnormalEC = normalize(v_normalEC);\n#endif\nczm_materialInput materialInput;\nmaterialInput.normalEC = normalEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getDefaultMaterial(materialInput);\nmaterial.diffuse = v_color.rgb;\nmaterial.alpha = v_color.a;\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n}\n"}),r("Shaders/Appearances/PerInstanceColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 normal;\nattribute vec4 color;\nvarying vec3 v_positionEC;\nvarying vec3 v_normalEC;\nvarying vec4 v_color;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_normalEC = czm_normal * normal;\nv_color = color;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Shaders/Appearances/PerInstanceFlatColorAppearanceFS",[],function(){"use strict";return"varying vec4 v_color;\nvoid main()\n{\ngl_FragColor = v_color;\n}\n"}),r("Shaders/Appearances/PerInstanceFlatColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec4 color;\nvarying vec4 v_color;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_color = color;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/PerInstanceColorAppearance",["../Core/defaultValue","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/PerInstanceColorAppearanceFS","../Shaders/Appearances/PerInstanceColorAppearanceVS","../Shaders/Appearances/PerInstanceFlatColorAppearanceFS","../Shaders/Appearances/PerInstanceFlatColorAppearanceVS","./Appearance"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=e(t.translucent,!0),u=e(t.closed,!1),c=e(t.flat,!1),h=c?a:n,d=c?o:i,m=c?l.FLAT_VERTEX_FORMAT:l.VERTEX_FORMAT;this.material=void 0,this.translucent=r,this._vertexShaderSource=e(t.vertexShaderSource,h),this._fragmentShaderSource=e(t.fragmentShaderSource,d),this._renderState=e(t.renderState,s.getDefaultRenderState(r,u)),this._closed=u,this._vertexFormat=m,this._flat=c,this._faceForward=e(t.faceForward,!u)};return t(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}}}),l.VERTEX_FORMAT=r.POSITION_AND_NORMAL,l.FLAT_VERTEX_FORMAT=r.POSITION_ONLY,l.prototype.getFragmentShaderSource=s.prototype.getFragmentShaderSource,l.prototype.isTranslucent=s.prototype.isTranslucent,l.prototype.getRenderState=s.prototype.getRenderState,l}),r("Scene/PrimitivePipeline",["../Core/BoundingSphere","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/Ellipsoid","../Core/FeatureDetection","../Core/GeographicProjection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryPipeline","../Core/IndexDatatype","../Core/Matrix4","../Core/WebMercatorProjection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,r){var i,n=!r,o=e.length;if(!n&&o>1){var a=e[0].modelMatrix;for(i=1;o>i;++i)if(!m.equals(a,e[i].modelMatrix)){n=!0;break}}if(n)for(i=0;o>i;++i)h.transformToWorldCoordinates(e[i]);else m.clone(e[0].modelMatrix,t)}function v(e,i){for(var n=e.length,o=0;n>o;++o){var a=e[o],s=a.geometry,l=s.attributes,u=l.position,h=4*(u.values.length/u.componentsPerAttribute);l.pickColor=new c({componentDatatype:r.UNSIGNED_BYTE,componentsPerAttribute:4,normalize:!0,values:new Uint8Array(h)});for(var d=i[o],m=t.floatToByte(d.red),p=t.floatToByte(d.green),f=t.floatToByte(d.blue),v=t.floatToByte(d.alpha),g=l.pickColor.values,_=0;h>_;_+=4)g[_]=m,g[_+1]=p,g[_+2]=f,g[_+3]=v}}function g(e){var t,r=e.length,i=[],o=e[0].attributes;for(t in o)if(o.hasOwnProperty(t)){for(var a=o[t],s=!0,l=1;r>l;++l){var u=e[l].attributes[t];if(!n(u)||a.componentDatatype!==u.componentDatatype||a.componentsPerAttribute!==u.componentsPerAttribute||a.normalize!==u.normalize){s=!1;break}}s&&i.push(t)}return i}function _(e,t){for(var i=e.length,n=0;i>n;++n)for(var o=e[n],a=o.attributes,s=o.geometry,l=u.computeNumberOfVertices(s),h=t.length,d=0;h>d;++d){for(var m=t[d],p=a[m],f=p.componentDatatype,v=p.value,g=v.length,_=r.createTypedArray(f,l*g),y=0;l>y;++y)_.set(v,y*g);s.attributes[m]=new c({componentDatatype:f,componentsPerAttribute:g,normalize:p.normalize,values:_})}}function y(e){var t,i=e.instances,n=e.pickIds,o=e.projection,a=e.elementIndexUintSupported,s=e.scene3DOnly,l=e.allowPicking,u=e.vertexCacheOptimize,c=e.modelMatrix,d=i.length;if(i[0].geometry.primitiveType,f(i,c,s),!s)for(t=0;d>t;++t)h.wrapLongitude(i[t].geometry);l&&v(i,n);var m=g(i);if(_(i,m),u)for(t=0;d>t;++t)h.reorderForPostVertexCache(i[t].geometry),h.reorderForPreVertexCache(i[t].geometry);var p,y=h.combine(i),C=y.attributes;if(s)for(p in C)C.hasOwnProperty(p)&&C[p].componentDatatype===r.DOUBLE&&h.encodeAttribute(y,p,p+"3DHigh",p+"3DLow");else for(p in C)if(C.hasOwnProperty(p)&&C[p].componentDatatype===r.DOUBLE){var w=p+"3D",S=p+"2D";h.projectTo2D(y,p,w,S,o),h.encodeAttribute(y,w,w+"High",w+"Low"),h.encodeAttribute(y,S,S+"High",S+"Low")}return a?[y]:h.fitToUnsignedShortIndices(y)}function C(e,t,i){for(var n=[],o=e.attributes,a=i.length,s=0;a>s;++s){var l=i[s],u=o[l],c=u.componentDatatype;c===r.DOUBLE&&(c=r.FLOAT);var h=r.createTypedArray(c,u.values);n.push({index:t[l],componentDatatype:c,componentsPerAttribute:u.componentsPerAttribute,normalize:u.normalize,values:h}),delete o[l]}return n}function w(e,t,r){for(var o=[],a=g(e),s=e.length,l={},c={},h=0;s>h;++h)for(var d=e[h],m=u.computeNumberOfVertices(d.geometry),p=a.length,f=0;p>f;++f)for(var v=a[f],_=r[v],y=m;y>0;){for(var C,w=i(c[v],0),S=t[w],E=S.length,b=0;E>b&&(C=S[b],C.index!==_);++b);n(o[h])||(o[h]={}),n(o[h][v])||(o[h][v]={dirty:!1,value:d.attributes[v].value,indices:[]});var T,x=C.values.length/C.componentsPerAttribute,P=i(l[v],0);x>P+y?(T=y,o[h][v].indices.push({attribute:C,offset:P,count:T}),l[v]=P+y):(T=x-P,o[h][v].indices.push({attribute:C,offset:P,count:T}),l[v]=0,c[v]=w+1),y-=T}return o}function S(e,t){var r=e.attributes;for(var i in r)if(r.hasOwnProperty(i)){var o=r[i];n(o)&&n(o.values)&&t.push(o.values.buffer)}n(e.indices)&&t.push(e.indices.buffer)}function E(e,t){for(var r=e.length,i=0;r>i;++i)S(e[i],t)}function b(e,t){for(var r=e.length,i=0;r>i;++i)for(var n=e[i],o=n.length,a=0;o>a;++a)t.push(n[a].values.buffer)}function T(t){for(var r=1,i=t.length,o=0;i>o;o++){var a=t[o],s=a.attributes;r+=3+e.packedLength+(n(a.indices)?a.indices.length:0);for(var l in s)if(s.hasOwnProperty(l)&&n(s[l])){var u=s[l];r+=5+u.values.length}}return r}function x(e,t){for(var r=e.length,i=new Uint32Array(e.length),n=0;r>n;++n)i[n]=e[n].toRgba();return t.push(i.buffer),i}function P(e){for(var r=e.length,i=new Array(r),n=0;r>n;n++)i[n]=t.fromRgba(e[n]);return i}function A(e){for(var t=e.length,r=1+17*t,i=0;t>i;i++){var o=e[i].attributes;for(var a in o)if(o.hasOwnProperty(a)&&n(o[a])){var s=o[a];r+=5+s.value.length}}return r}function M(e,t){var r=new Float64Array(A(e)),i={},o=[],a=e.length,s=0;r[s++]=a;for(var l=0;a>l;l++){var u=e[l];m.pack(u.modelMatrix,r,s),s+=m.packedLength;var c=u.attributes,h=[];for(var d in c)c.hasOwnProperty(d)&&n(c[d])&&(h.push(d),n(i[d])||(i[d]=o.length,o.push(d)));r[s++]=h.length;for(var p=0;p<h.length;p++){var f=h[p],v=c[f];r[s++]=i[f],r[s++]=v.componentDatatype,r[s++]=v.componentsPerAttribute,r[s++]=v.normalize,r[s++]=v.value.length,r.set(v.value,s),s+=v.value.length}}return t.push(r.buffer),{stringTable:o,packedData:r}}function D(e){for(var t=e.packedData,i=e.stringTable,n=new Array(t[0]),o=0,a=1;a<t.length;){var s=m.unpack(t,a);a+=m.packedLength;for(var l={},u=t[a++],c=0;u>c;c++){for(var h=i[t[a++]],d=t[a++],p=t[a++],f=0!==t[a++],v=t[a++],g=r.createTypedArray(d,v),_=0;v>_;_++)g[_]=t[a++];l[h]={componentDatatype:d,componentsPerAttribute:p,normalize:f,value:g}}n[o++]={attributes:l,modelMatrix:s}}return n}function I(e){for(var t=e.length,r=1+t,i=0;t>i;i++){var o=e[i];for(var a in o)if(o.hasOwnProperty(a)&&n(o[a])){var s=o[a];r+=3+3*s.indices.length+s.value.length}}return r}function R(e,t){var r=new Float64Array(I(e)),i=[],o=[],a={},s=e.length,l=0;r[l++]=s;for(var u=0;s>u;u++){var c=e[u],h=[];for(var d in c)c.hasOwnProperty(d)&&n(c[d])&&(h.push(d),n(a[d])||(a[d]=i.length,i.push(d)));r[l++]=h.length;for(var m=0;m<h.length;m++){var p=h[m],f=c[p];r[l++]=a[p];var v=f.indices,g=v.length;r[l++]=g;for(var _=0;g>_;_++){var y=v[_];r[l++]=y.count,r[l++]=y.offset;var C=o.indexOf(y.attribute);-1===C&&(C=o.length,o.push(y.attribute)),r[l++]=C}r[l++]=f.value.length,r.set(f.value,l),l+=f.value.length}}return t.push(r.buffer),{stringTable:i,packedData:r,attributeTable:o}}function O(e){for(var t=e.stringTable,i=e.attributeTable,n=e.packedData,o=new Array(n[0]),a=0,s=1,l=n.length;l>s;){for(var u={},c=n[s++],h=0;c>h;h++){for(var d=t[n[s++]],m=new Array(n[s++]),p=0;p<m.length;p++){var f={};f.count=n[s++],f.offset=n[s++],f.attribute=i[n[s++]],m[p]=f}for(var v=n[s++],g=r.createTypedArray(m[0].attribute.componentDatatype,v),_=0;v>_;_++)g[_]=n[s++];u[d]={dirty:!1,indices:m,value:g}}o[a++]=u}return o}if(!s.supportsTypedArrays())return{};var L={};return L.combineGeometry=function(e){for(var t=y(e),r=h.createAttributeLocations(t[0]),i=e.instances,n=g(i),o=[],a=t.length,s=0;a>s;++s){var l=t[s];o.push(C(l,r,n))}var u=w(i,o,r);return{geometries:t,modelMatrix:e.modelMatrix,attributeLocations:r,vaAttributes:o,vaAttributeLocations:u}},L.packCreateGeometryResults=function(t,r){var i=new Float64Array(T(t)),o=[],a={},s=t.length,l=0;i[l++]=s;for(var u=0;s>u;u++){var c=t[u];i[l++]=c.primitiveType,e.pack(c.boundingSphere,i,l),l+=e.packedLength;var h=c.attributes,d=[];for(var m in h)h.hasOwnProperty(m)&&n(h[m])&&(d.push(m),n(a[m])||(a[m]=o.length,o.push(m)));i[l++]=d.length;for(var p=0;p<d.length;p++){var f=d[p],v=h[f];i[l++]=a[f],i[l++]=v.componentDatatype,i[l++]=v.componentsPerAttribute,i[l++]=v.normalize?1:0,i[l++]=v.values.length,i.set(v.values,l),l+=v.values.length}var g=n(c.indices)?c.indices.length:0;i[l++]=g,g>0&&(i.set(c.indices,l),l+=g)}return r.push(i.buffer),{stringTable:o,packedData:i}},L.unpackCreateGeometryResults=function(t){for(var i,n=t.stringTable,o=t.packedData,a=new Array(o[0]),s=0,l=1;l<o.length;){var h=o[l++],m=e.unpack(o,l);l+=e.packedLength;var p,f,v,g={},_=o[l++];for(i=0;_>i;i++){var y=n[o[l++]],C=o[l++];v=o[l++];var w=0!==o[l++];p=o[l++],f=r.createTypedArray(C,p);for(var S=0;p>S;S++)f[S]=o[l++];g[y]=new c({componentDatatype:C,componentsPerAttribute:v,normalize:w,values:f})}var E;if(p=o[l++],p>0){var b=f.length/v;for(E=d.createTypedArray(b,p),i=0;p>i;i++)E[i]=o[l++]}a[s++]=new u({primitiveType:h,boundingSphere:m,indices:E,attributes:g})}return a},L.packCombineGeometryParameters=function(e,t){for(var r=e.createGeometryResults,i=r.length,n=0;i>n;n++)t.push(r[n].packedData.buffer);var o;return e.allowPicking&&(o=x(e.pickIds,t)),{createGeometryResults:e.createGeometryResults,packedInstances:M(e.instances,t),packedPickIds:o,ellipsoid:e.ellipsoid,isGeographic:e.projection instanceof l,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,allowPicking:e.allowPicking,vertexCacheOptimize:e.vertexCacheOptimize,modelMatrix:e.modelMatrix}},L.unpackCombineGeometryParameters=function(e){for(var t=D(e.packedInstances),r=e.allowPicking?P(e.packedPickIds):void 0,i=e.createGeometryResults,n=i.length,o=0,s=0;n>s;s++)for(var u=L.unpackCreateGeometryResults(i[s]),c=u.length,h=0;c>h;h++)t[o++].geometry=u[h];var d=a.clone(e.ellipsoid),f=e.isGeographic?new l(d):new p(d);return{instances:t,pickIds:r,ellipsoid:d,projection:f,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,allowPicking:e.allowPicking,vertexCacheOptimize:e.vertexCacheOptimize,modelMatrix:m.clone(e.modelMatrix)}},L.packCombineGeometryResults=function(e,t){return E(e.geometries,t),b(e.vaAttributes,t),{geometries:e.geometries,attributeLocations:e.attributeLocations,vaAttributes:e.vaAttributes,packedVaAttributeLocations:R(e.vaAttributeLocations,t),modelMatrix:e.modelMatrix}},L.unpackCombineGeometryResults=function(e){return{geometries:e.geometries,attributeLocations:e.attributeLocations,vaAttributes:e.vaAttributes,perInstanceAttributeLocations:O(e.packedVaAttributeLocations,e.vaAttributes),modelMatrix:e.modelMatrix}},L}),r("Scene/PrimitiveState",["../Core/freezeObject"],function(e){"use strict";var t={READY:0,CREATING:1,CREATED:2,COMBINING:3,COMBINED:4,COMPLETE:5,FAILED:6};return e(t)}),r("Scene/Primitive",["../Core/BoundingSphere","../Core/clone","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryAttributes","../Core/GeometryInstance","../Core/GeometryInstanceAttribute","../Core/isArray","../Core/Matrix4","../Core/subdivideArray","../Core/TaskProcessor","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../ThirdParty/when","./CullFace","./Pass","./PrimitivePipeline","./PrimitiveState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x){"use strict";function P(e){return new c({componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,values:new e.values.constructor(e.values)})}function A(t){var r=t.attributes,i=new h;for(var o in r)r.hasOwnProperty(o)&&n(r[o])&&(i[o]=P(r[o]));var a;if(n(t.indices)){var s=t.indices;a=new s.constructor(s)}return new u({attributes:i,indices:a,primitiveType:t.primitiveType,boundingSphere:e.clone(t.boundingSphere)})}function M(e){return new m({componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,value:new e.value.constructor(e.value)})}function D(e,t){var r=e.attributes,i={};for(var n in r)r.hasOwnProperty(n)&&(i[n]=M(r[n]));return new d({geometry:t,modelMatrix:f.clone(e.modelMatrix),attributes:i})}function I(e,t,r){for(var i,n="",o="",a="";null!==(i=k.exec(t));){var s=i[1],l="vec4 czm_compute"+s[0].toUpperCase()+s.substr(1)+"()";"vec4 czm_computePosition()"!==l&&(n+=l+";\n"),r?a+=l+"\n"+"{\n"+"    return czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n"+"}\n\n":(o+="attribute vec3 "+s+"2DHigh;\n"+"attribute vec3 "+s+"2DLow;\n",a+=l+"\n"+"{\n"+"    vec4 p;\n"+"    if (czm_morphTime == 1.0)\n"+"    {\n"+"        p = czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n"+"    }\n"+"    else if (czm_morphTime == 0.0)\n"+"    {\n"+"        p = czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy);\n"+"    }\n"+"    else\n"+"    {\n"+"        p = czm_columbusViewMorph(\n"+"                czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy),\n"+"                czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow),\n"+"                czm_morphTime);\n"+"    }\n"+"    return p;\n"+"}\n\n")}return y({sources:[n,o,t,a]})}function R(e){var t=e.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_old_main()"),r="attribute vec4 pickColor; \nvarying vec4 czm_pickColor; \nvoid main() \n{ \n    czm_old_main(); \n    czm_pickColor = pickColor; \n}";return t+"\n"+r}function O(e,t){if(!n(e._attributeLocations.show))return t;var r=t.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_non_show_main()"),i="attribute float show;\nvoid main() \n{ \n    czm_non_show_main(); \n    gl_Position *= show; \n}";return r+"\n"+i}function L(e){e.vertexAttributes}function N(e,t,r){for(var o=[],a=r.length,s=0;a>s;++s){var l={primitive:i(r[s].pickPrimitive,t)};n(r[s].id)&&(l.id=r[s].id);var u=e.createPickId(l);t._pickIds.push(u),o.push(u.color)}return o}function B(e,t){return function(){return t[e].value}}function F(e,t,r){return function(i){var n=t[e];n.value=i,n.dirty||(r.push(n),n.dirty=!0)}}var z=function(e){e=i(e,i.EMPTY_OBJECT),this.geometryInstances=e.geometryInstances,this.appearance=e.appearance,this._appearance=void 0,this._material=void 0,this.modelMatrix=f.clone(f.IDENTITY),this._modelMatrix=new f,this.show=i(e.show,!0),this._vertexCacheOptimize=i(e.vertexCacheOptimize,!1),this._interleave=i(e.interleave,!1),this._releaseGeometryInstances=i(e.releaseGeometryInstances,!0),this._allowPicking=i(e.allowPicking,!0),this._asynchronous=i(e.asynchronous,!0),this.debugShowBoundingVolume=i(e.debugShowBoundingVolume,!1),this._translucent=void 0,this._state=T.READY,this._geometries=[],this._vaAttributes=void 0,this._error=void 0,this._numberOfInstances=0,this._boundingSphere=void 0,this._boundingSphereWC=void 0,this._boundingSphereCV=void 0,this._boundingSphere2D=void 0,this._perInstanceAttributeLocations=void 0,this._instanceIds=[],this._lastPerInstanceAttributeIndex=0,this._dirtyAttributes=[],this._va=[],this._attributeLocations=void 0,this._primitiveType=void 0,this._frontFaceRS=void 0,this._backFaceRS=void 0,this._sp=void 0,this._pickRS=void 0,this._pickSP=void 0,this._pickIds=[],this._colorCommands=[],this._pickCommands=[],this._createGeometryResults=void 0};o(z.prototype,{vertexCacheOptimize:{get:function(){return this._vertexCacheOptimize}},interleave:{get:function(){return this._interleave}},releaseGeometryInstances:{get:function(){return this._releaseGeometryInstances}},allowPicking:{get:function(){return this._allowPicking}},asynchronous:{get:function(){return this._asynchronous}},ready:{get:function(){return this._state===T.COMPLETE}}});var V,k=/attribute\s+vec(?:3|4)\s+(.*)3DHigh;/g,U=Math.max(l.hardwareConcurrency-1,1),W=new g("combineGeometry",Number.POSITIVE_INFINITY);return z.prototype.update=function(i,o,a){if(!(!n(this.geometryInstances)&&0===this._va.length||n(this.geometryInstances)&&p(this.geometryInstances)&&0===this.geometryInstances.length||!n(this.appearance)||o.mode!==x.SCENE3D&&o.scene3DOnly||!o.passes.render&&!o.passes.pick)){var s,l,u,c,h,d,m,P,M,B,F,z,k,G=o.mapProjection,H=this.allowPicking,q=this._instanceIds,j=o.scene3DOnly,Y=this;if(this._state!==T.COMPLETE&&this._state!==T.COMBINED)if(this.asynchronous){if(this._state===T.FAILED)throw this._error;if(this._state===T.READY){F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],this._numberOfInstances=d=F.length;var X=[],Z=[];for(m=0;d>m;++m)u=F[m].geometry,q.push(F[m].id),Z.push({moduleName:u._workerName,geometry:u});if(!n(V))for(V=new Array(U),m=0;U>m;m++)V[m]=new g("createGeometry",Number.POSITIVE_INFINITY);for(Z=v(Z,U),m=0;m<Z.length;m++)X.push(V[m].scheduleTask({subTasks:Z[m]}));this._state=T.CREATING,w.all(X,function(e){Y._createGeometryResults=e,Y._state=T.CREATED},function(e){Y._error=e,Y._state=T.FAILED})}else if(this._state===T.CREATED){var Q=[];F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],B=W.scheduleTask(b.packCombineGeometryParameters({createGeometryResults:this._createGeometryResults,instances:F,pickIds:H?N(i,this,F):void 0,ellipsoid:G.ellipsoid,projection:G,elementIndexUintSupported:i.elementIndexUint,scene3DOnly:j,allowPicking:H,vertexCacheOptimize:this.vertexCacheOptimize,modelMatrix:this.modelMatrix},Q),Q),this._createGeometryResults=void 0,this._state=T.COMBINING,w(B,function(e){var t=b.unpackCombineGeometryResults(e);Y._geometries=t.geometries,Y._attributeLocations=t.attributeLocations,Y._vaAttributes=t.vaAttributes,Y._perInstanceAttributeLocations=t.perInstanceAttributeLocations,Y._state=T.COMBINED,Y.modelMatrix=f.clone(t.modelMatrix,Y.modelMatrix)},function(e){Y._error=e,Y._state=T.FAILED})}}else{for(F=p(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],this._numberOfInstances=d=F.length,k=new Array(d),z=new Array(F.length),m=0;d>m;m++){var J=F[m];u=J.geometry,q.push(J.id);var K;K=n(u.attributes)&&n(u.primitiveType)?A(u):u.constructor.createGeometry(u),k[m]=K,z[m]=D(J,K)}var $=b.combineGeometry({instances:z,pickIds:H?N(i,this,F):void 0,ellipsoid:G.ellipsoid,projection:G,elementIndexUintSupported:i.elementIndexUint,scene3DOnly:j,allowPicking:H,vertexCacheOptimize:this.vertexCacheOptimize,modelMatrix:this.modelMatrix});this._geometries=$.geometries,this._attributeLocations=$.attributeLocations,this._vaAttributes=$.vaAttributes,this._perInstanceAttributeLocations=$.vaAttributeLocations,this._state=T.COMBINED}var et=this._attributeLocations;if(this._state===T.COMBINED){k=this._geometries;var tt=this._vaAttributes;this._boundingSphere=e.clone(k[0].boundingSphere);var rt=[];for(d=k.length,m=0;d>m;++m){u=k[m],c=tt[m];var it=c.length;for(P=0;it>P;++P)h=c[P],h.vertexBuffer=i.createVertexBuffer(h.values,_.DYNAMIC_DRAW),delete h.values;rt.push(i.createVertexArrayFromGeometry({geometry:u,attributeLocations:et,bufferUsage:_.STATIC_DRAW,interleave:this._interleave,vertexArrayAttributes:c}))}this._va=rt,this._primitiveType=k[0].primitiveType,this.releaseGeometryInstances&&(this.geometryInstances=void 0),this._geometries=void 0,this._state=T.COMPLETE}if(this.show&&this._state===T.COMPLETE){var nt=this.appearance,ot=nt.material,at=!1,st=!1;this._appearance!==nt?(this._appearance=nt,this._material=ot,at=!0,st=!0):this._material!==ot&&(this._material=ot,st=!0);var lt=this._appearance.isTranslucent();this._translucent!==lt&&(this._translucent=lt,at=!0),n(this._material)&&this._material.update(i);var ut=nt.closed&&lt;if(at){var ct,ht=nt.getRenderState();ut?(ct=t(ht,!1),ct.cull={enabled:!0,face:S.BACK},this._frontFaceRS=i.createRenderState(ct),ct.cull.face=S.FRONT,this._backFaceRS=i.createRenderState(ct)):(this._frontFaceRS=i.createRenderState(ht),this._backFaceRS=this._frontFaceRS),H?ut?(ct=t(ht,!1),ct.cull={enabled:!1},this._pickRS=i.createRenderState(ct)):this._pickRS=this._frontFaceRS:(ct=t(ht,!1),ct.colorMask={red:!1,green:!1,blue:!1,alpha:!1},ut?(ct.cull={enabled:!1},this._pickRS=i.createRenderState(ct)):this._pickRS=i.createRenderState(ct))}if(st){var dt=I(this,nt.vertexShaderSource,j);dt=O(this,dt);var mt=nt.getFragmentShaderSource();if(this._sp=i.replaceShaderProgram(this._sp,dt,mt,et),L(this._sp,et),H){var pt=y({sources:[mt],pickColorQualifier:"varying"});this._pickSP=i.replaceShaderProgram(this._pickSP,R(dt),pt,et)}else this._pickSP=i.createShaderProgram(dt,mt,et);L(this._pickSP,et)}var ft=this._colorCommands,vt=this._pickCommands;if(at||st){var gt=n(ot)?ot._uniforms:void 0,_t=lt?E.TRANSLUCENT:E.OPAQUE;ft.length=this._va.length*(ut?2:1),vt.length=this._va.length,d=ft.length;var yt=0,Ct=0;for(m=0;d>m;++m)ut&&(s=ft[m],n(s)||(s=ft[m]=new C({owner:this,primitiveType:this._primitiveType})),s.vertexArray=this._va[Ct],s.renderState=this._backFaceRS,s.shaderProgram=this._sp,s.uniformMap=gt,s.pass=_t,++m),s=ft[m],n(s)||(s=ft[m]=new C({owner:this,primitiveType:this._primitiveType})),s.vertexArray=this._va[Ct],s.renderState=this._frontFaceRS,s.shaderProgram=this._sp,s.uniformMap=gt,s.pass=_t,l=vt[yt],n(l)||(l=vt[yt]=new C({owner:this,primitiveType:this._primitiveType})),l.vertexArray=this._va[Ct],l.renderState=this._pickRS,l.shaderProgram=this._pickSP,l.uniformMap=gt,l.pass=_t,++yt,++Ct}if(this._dirtyAttributes.length>0){for(c=this._dirtyAttributes,d=c.length,m=0;d>m;++m){h=c[m];var wt=h.value,St=h.indices,Et=St.length;for(P=0;Et>P;++P){M=St[P];for(var bt=M.offset,Tt=M.count,xt=M.attribute,Pt=xt.componentDatatype,At=xt.componentsPerAttribute,Mt=r.createTypedArray(Pt,Tt*At),Dt=0;Tt>Dt;++Dt)Mt.set(wt,Dt*At);var It=bt*At*r.getSizeInBytes(Pt);xt.vertexBuffer.copyFromArrayView(Mt,It)}h.dirty=!1}c.length=0}var Rt;Rt=this._numberOfInstances>1||o.mode!==x.SCENE3D?f.IDENTITY:this.modelMatrix,f.equals(Rt,this._modelMatrix)||(f.clone(Rt,this._modelMatrix),this._boundingSphereWC=e.transform(this._boundingSphere,Rt,this._boundingSphereWC),!j&&n(this._boundingSphere)&&(this._boundingSphereCV=e.projectTo2D(this._boundingSphereWC,G,this._boundingSphereCV),this._boundingSphere2D=e.clone(this._boundingSphereCV,this._boundingSphere2D),this._boundingSphere2D.center.x=0));var Ot;o.mode===x.SCENE3D?Ot=this._boundingSphereWC:o.mode===x.COLUMBUS_VIEW?Ot=this._boundingSphereCV:o.mode===x.SCENE2D&&n(this._boundingSphere2D)?Ot=this._boundingSphere2D:n(this._boundingSphereWC)&&n(this._boundingSphereCV)&&(Ot=e.union(this._boundingSphereWC,this._boundingSphereCV));var Lt=o.passes;if(Lt.render)for(d=ft.length,m=0;d>m;++m)ft[m].modelMatrix=Rt,ft[m].boundingVolume=Ot,ft[m].debugShowBoundingVolume=this.debugShowBoundingVolume,a.push(ft[m]);if(Lt.pick)for(d=vt.length,m=0;d>m;++m)vt[m].modelMatrix=Rt,vt[m].boundingVolume=Ot,a.push(vt[m])}}},z.prototype.getGeometryInstanceAttributes=function(e){for(var t=-1,r=this._lastPerInstanceAttributeIndex,i=this._instanceIds,n=i.length,a=0;n>a;++a){var s=(r+a)%n;if(e===i[s]){t=s;break}}if(-1===t)return void 0;var l=this._perInstanceAttributeLocations[t],u={},c={},h=!1;for(var d in l)l.hasOwnProperty(d)&&(h=!0,c[d]={get:B(d,l),set:F(d,l,this._dirtyAttributes)});return h&&o(u,c),this._lastPerInstanceAttributeIndex=t,u},z.prototype.isDestroyed=function(){return!1},z.prototype.destroy=function(){var e,t;this._sp=this._sp&&this._sp.destroy(),this._pickSP=this._pickSP&&this._pickSP.destroy();var r=this._va;for(e=r.length,t=0;e>t;++t)r[t].destroy();this._va=void 0;var i=this._pickIds;for(e=i.length,t=0;e>t;++t)i[t].destroy();return this._pickIds=void 0,a(this)},z}),r("DataSources/MaterialProperty",["../Core/Color","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Scene/Material"],function(e,t,r,i,n){"use strict";var o=function(){i.throwInstantiationError()};return r(o.prototype,{isConstant:{get:i.throwInstantiationError},definitionChanged:{get:i.throwInstantiationError}}),o.prototype.getType=i.throwInstantiationError,o.prototype.getValue=i.throwInstantiationError,o.prototype.equals=i.throwInstantiationError,o.getValue=function(r,i,o){var a;return t(i)&&(a=i.getType(r),t(a))?(t(o)&&o.type===a||(o=n.fromType(a)),i.getValue(r,o.uniforms),o):(t(o)&&o.type===n.ColorType||(o=n.fromType(n.ColorType)),e.clone(e.WHITE,o.uniforms.color),o)},o}),r("DataSources/EllipseGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipseGeometry","../Core/EllipseOutlineGeometry","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.center=void 0,this.semiMajorAxis=void 0,this.semiMinorAxis=void 0,this.rotation=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0,this.numberOfVerticalLines=void 0
},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new u,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"ellipse",e.ellipse,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,l=a.isAvailable(r),u=new d(l&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||l)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new c({id:a,geometry:new s(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new c({id:i,geometry:new l(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"position"===t||"ellipse"===t){var n=this._entity.ellipse;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(h.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(h.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var u=this._entity.position,c=n.semiMajorAxis,d=n.semiMinorAxis,f=n.show;if(i(f)&&f.isConstant&&!f.getValue(h.MINIMUM_VALUE)||!i(u)||!i(c)||!i(d))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var g=r(n.material,C),_=g instanceof v;this._materialProperty=g,this._fillProperty=r(o,S),this._showProperty=r(f,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var T=n.rotation,x=n.height,P=n.extrudedHeight,A=n.granularity,M=n.stRotation,D=n.numberOfVerticalLines;if(this._isClosed=i(P),this._fillEnabled=a,this._outlineEnabled=l,u.isConstant&&c.isConstant&&d.isConstant&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)&&y.isConstant(A)&&y.isConstant(M)&&y.isConstant(D)){var I=this._options;I.vertexFormat=_?p.VERTEX_FORMAT:m.VERTEX_FORMAT,I.center=u.getValue(h.MINIMUM_VALUE,I.center),I.semiMajorAxis=c.getValue(h.MINIMUM_VALUE,I.semiMajorAxis),I.semiMinorAxis=d.getValue(h.MINIMUM_VALUE,I.semiMinorAxis),I.rotation=i(T)?T.getValue(h.MINIMUM_VALUE):void 0,I.height=i(x)?x.getValue(h.MINIMUM_VALUE):void 0,I.extrudedHeight=i(P)?P.getValue(h.MINIMUM_VALUE):void 0,I.granularity=i(A)?A.getValue(h.MINIMUM_VALUE):void 0,I.stRotation=i(M)?M.getValue(h.MINIMUM_VALUE):void 0,I.numberOfVerticalLines=i(D)?D.getValue(h.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.ellipse,u=a.show;if(o.isAvailable(r)&&(!i(u)||u.getValue(r))){var h=this._options,d=o.position,v=a.semiMajorAxis,g=a.semiMinorAxis,y=a.rotation,C=a.height,w=a.extrudedHeight,S=a.granularity,E=a.stRotation,b=a.numberOfVerticalLines;if(h.center=d.getValue(r,h.center),h.semiMajorAxis=v.getValue(r,h.semiMajorAxis),h.semiMinorAxis=g.getValue(r,h.semiMinorAxis),h.rotation=i(y)?y.getValue(r,h):void 0,h.height=i(C)?C.getValue(r,h):void 0,h.extrudedHeight=i(w)?w.getValue(r,h):void 0,h.granularity=i(S)?S.getValue(r):void 0,h.stRotation=i(E)?E.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){this._material=_.getValue(r,n.fillMaterialProperty,this._material);var T=this._material,x=new m({material:T,translucent:T.isTranslucent(),closed:i(h.extrudedHeight)});h.vertexFormat=x.vertexFormat,this._primitive=new f({geometryInstances:new c({id:o,geometry:new s(h)}),appearance:x,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){h.vertexFormat=p.VERTEX_FORMAT,h.numberOfVerticalLines=i(b)?b.getValue(r):void 0;var P=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new c({id:o,geometry:new l(h),attributes:{color:t.fromColor(P)}}),appearance:new p({flat:!0,translucent:1!==P.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/EllipsoidGeometryUpdater",["../Core/Cartesian3","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipsoidGeometry","../Core/EllipsoidOutlineGeometry","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/Matrix3","../Core/Matrix4","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","../Scene/SceneMode","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";var b,T,x,P,A=C.fromColor(t.WHITE),M=new w(!0),D=new w(!0),I=new w(!1),R=new w(t.BLACK),O=new e(1,1,1),L=function(e){this.id=e,this.vertexFormat=void 0,this.radii=void 0,this.stackPartitions=void 0,this.slicePartitions=void 0,this.subdivisions=void 0},N=function(e,t){this._scene=t,this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(N.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new c,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new L(e),this._onEntityPropertyChanged(e,"ellipsoid",e.ellipsoid,void 0)};o(N,{perInstanceColorAppearanceType:{value:g},materialAppearanceType:{value:v}}),o(N.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!n(this._entity.availability)&&E.isConstant(this._showProperty)&&E.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!n(this._entity.availability)&&E.isConstant(this._showProperty)&&E.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{value:!0},geometryChanged:{get:function(){return this._geometryChanged}}}),N.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},N.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},N.prototype.createFillGeometryInstance=function(e){var i,o,a=this._entity,s=a.isAvailable(e),u=new f(s&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e));if(this._materialProperty instanceof C){var c=t.WHITE;n(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(c=this._materialProperty.color.getValue(e)),o=r.fromColor(c),i={show:u,color:o}}else i={show:u};return b=a.position.getValue(d.MINIMUM_VALUE,b),T=a.orientation.getValue(d.MINIMUM_VALUE,T),P=m.fromQuaternion(T,P),new h({id:a,geometry:new l(this._options),modelMatrix:p.fromRotationTranslation(P,b),attributes:i})},N.prototype.createOutlineGeometryInstance=function(e){var i=this._entity,n=i.isAvailable(e);return b=i.position.getValue(d.MINIMUM_VALUE,b),T=i.orientation.getValue(d.MINIMUM_VALUE,T),P=m.fromQuaternion(T,P),new h({id:i,geometry:new u(this._options),modelMatrix:p.fromRotationTranslation(P,b),attributes:{show:new f(n&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)),color:r.fromColor(n?this._outlineColorProperty.getValue(e):t.BLACK)}})},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){this._entitySubscription(),a(this)},N.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"position"===t||"orientation"===t||"ellipsoid"===t){var r=this._entity.ellipsoid;if(!n(r))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=r.fill,a=n(o)&&o.isConstant?o.getValue(d.MINIMUM_VALUE):!0,s=r.outline,l=n(s);if(l&&s.isConstant&&(l=s.getValue(d.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var u=this._entity.position,c=this._entity.orientation,h=r.radii,m=r.show;if(n(m)&&m.isConstant&&!m.getValue(d.MINIMUM_VALUE)||!n(u)||!n(c)||!n(h))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var p=i(r.material,A),f=p instanceof C;this._materialProperty=p,this._fillProperty=i(o,D),this._showProperty=i(m,M),this._showOutlineProperty=i(r.outline,I),this._outlineColorProperty=l?i(r.outlineColor,R):void 0,this._fillEnabled=a,this._outlineEnabled=l;var _=r.stackPartitions,y=r.slicePartitions,w=r.subdivisions;if(u.isConstant&&c.isConstant&&h.isConstant&&E.isConstant(_)&&E.isConstant(y)&&E.isConstant(w)){var S=this._options;S.vertexFormat=f?g.VERTEX_FORMAT:v.VERTEX_FORMAT,S.radii=h.getValue(d.MINIMUM_VALUE,S.radii),S.stackPartitions=n(_)?_.getValue(d.MINIMUM_VALUE):void 0,S.slicePartitions=n(y)?y.getValue(d.MINIMUM_VALUE):void 0,S.subdivisions=n(w)?w.getValue(d.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},N.prototype.createDynamicUpdater=function(e){return new B(e,this)};var B=function(e,t){this._entity=t._entity,this._scene=t._scene,this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new L(t._entity),this._modelMatrix=new p,this._material=void 0,this._attributes=void 0,this._outlineAttributes=void 0,this._lastSceneMode=void 0};return B.prototype.update=function(e){var o=this._entity,a=o.ellipsoid,s=a.show;if(!o.isAvailable(e)||n(s)&&!s.getValue(e))return n(this._primitive)&&(this._primitive.show=!1),n(this._outlinePrimitive)&&(this._outlinePrimitive.show=!1),void 0;var c,d=!n(a.fill)||a.fill.getValue(e),C=n(a.outline)&&a.outline.getValue(e),w=n(a.outlineColor)?a.outlineColor.getValue(e):t.BLACK,E=S.getValue(e,i(a.material,A),this._material);this._material=E;var M=a.stackPartitions,D=a.slicePartitions,I=a.subdivisions,R=n(M)?M.getValue(e):void 0,L=n(D)?D.getValue(e):void 0,N=n(I)?I.getValue(e):void 0,B=this._options,F=this._scene.mode,z=F===y.SCENE3D,V=this._modelMatrix,k=o.position,U=o.orientation,W=a.radii;b=k.getValue(e,b),T=U.getValue(e,T),P=m.fromQuaternion(T,P),x=W.getValue(e,x),V=p.fromRotationTranslation(P,b,V);var G=!z||this._lastSceneMode!==F||!n(this._primitive)||B.stackPartitions!==R||B.slicePartitions!==L||B.subdivisions!==N;if(G)this._removePrimitives(),this._lastSceneMode=F,B.stackPartitions=R,B.slicePartitions=L,B.subdivisions=N,B.radii=z?O:x,this._material=E,E=this._material,c=new v({material:E,translucent:E.isTranslucent(),closed:!0}),B.vertexFormat=c.vertexFormat,this._primitive=new _({geometryInstances:new h({id:o,geometry:new l(B),modelMatrix:z?void 0:V,attributes:{show:new f(d)}}),appearance:c,asynchronous:!1}),this._primitives.add(this._primitive),B.vertexFormat=g.VERTEX_FORMAT,this._outlinePrimitive=new _({geometryInstances:new h({id:o,geometry:new u(B),modelMatrix:z?void 0:V,attributes:{show:new f(C),color:r.fromColor(w)}}),appearance:new g({flat:!0,translucent:1!==w.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive);else if(this._primitive.ready){var H=this._primitive;c=H.appearance,c.material=E;var q=this._attributes;n(q)||(q=H.getGeometryInstanceAttributes(o),this._attributes=q),q.show=f.toValue(d,q.show);var j=this._outlinePrimitive,Y=this._outlineAttributes;n(Y)||(Y=j.getGeometryInstanceAttributes(o),this._outlineAttributes=Y),Y.show=f.toValue(C,Y.show),Y.color=r.toValue(w,Y.color)}z&&(x.x=Math.max(x.x,.001),x.y=Math.max(x.y,.001),x.z=Math.max(x.z,.001),V=p.multiplyByScale(V,x,V),this._primitive.modelMatrix=V,this._outlinePrimitive.modelMatrix=V)},B.prototype.isDestroyed=function(){return!1},B.prototype._removePrimitives=function(){n(this._primitive)&&this._primitives.remove(this._primitive),n(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive)},B.prototype.destroy=function(){this._removePrimitives(),a(this)},N}),r("DataSources/StaticGeometryColorBatch",["../Core/AssociativeArray","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/Primitive"],function(e,t,r,i,n,o){"use strict";var a=new t,s=function(t,r,i,n){this.translucent=r,this.appearanceType=i,this.closed=n,this.primitives=t,this.createPrimitive=!1,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.updaters=new e,this.updatersWithAttributes=new e,this.attributes=new e,this.itemsToRemove=[]};s.prototype.add=function(e,t){var r=e.entity.id;this.createPrimitive=!0,this.geometry.set(r,t),this.updaters.set(r,e),e.hasConstantFill&&e.fillMaterialProperty.isConstant||this.updatersWithAttributes.set(r,e)},s.prototype.remove=function(e){var t=e.entity.id;this.createPrimitive=this.geometry.remove(t)||this.createPrimitive,this.updaters.remove(t),this.updatersWithAttributes.remove(t)},s.prototype.update=function(e){var s=!0,l=!0,u=0,c=this.primitive,h=this.primitives;if(this.createPrimitive){this.attributes.removeAll(),i(c)&&(c.ready?this.oldPrimitive=c:h.remove(c),s=!1);var d=this.geometry.values;d.length>0&&(c=new o({asynchronous:!0,geometryInstances:d,appearance:new this.appearanceType({translucent:this.translucent,closed:this.closed})}),c.show=s,h.add(c),l=!1),this.primitive=c,this.createPrimitive=!1}else if(i(c)&&c.ready){i(this.oldPrimitive)&&(h.remove(this.oldPrimitive),this.oldPrimitive=void 0,c.show=!0);for(var m=this.updatersWithAttributes.values,p=m.length,f=0;p>f;f++){var v=m[f],g=this.geometry.get(v.entity.id),_=this.attributes.get(g.id.id);if(i(_)||(_=c.getGeometryInstanceAttributes(g.id),this.attributes.set(g.id.id,_)),!v.fillMaterialProperty.isConstant){var y=v.fillMaterialProperty.color;y.getValue(e,a),t.equals(_._lastColor,a)||(_._lastColor=t.clone(a,_._lastColor),_.color=r.toValue(a,_.color),(this.translucent&&255===_.color[3]||!this.translucent&&255!==_.color[3])&&(this.itemsToRemove[u++]=v))}v.hasConstantFill||(s=v.isFilled(e),s!==_._lastShow&&(_._lastShow=s,_.show=n.toValue(s,_.show)))}}else i(c)&&!c.ready&&(l=!1);return this.itemsToRemove.length=u,l},s.prototype.removeAllPrimitives=function(){var e=this.primitive;i(e)&&(this.primitives.remove(e),this.primitive=void 0,this.geometry.removeAll(),this.updaters.removeAll())};var l=function(e,t,r){this._solidBatch=new s(e,!1,t,r),this._translucentBatch=new s(e,!0,t,r)};return l.prototype.add=function(e,t){var r=t.createFillGeometryInstance(e);255===r.attributes.color.value[3]?this._solidBatch.add(t,r):this._translucentBatch.add(t,r)},l.prototype.remove=function(e){this._solidBatch.remove(e)||this._translucentBatch.remove(e)},l.prototype.update=function(e){var t,r,i=this._solidBatch.update(e);i=this._translucentBatch.update(e)&&i;var n=this._solidBatch.itemsToRemove,o=n.length;if(o>0)for(t=0;o>t;t++)r=n[t],this._solidBatch.remove(r),this._translucentBatch.add(r,r.createFillGeometryInstance(e));n=this._translucentBatch.itemsToRemove;var a=n.length;if(a>0)for(t=0;a>t;t++)r=n[t],this._translucentBatch.remove(r),this._solidBatch.add(r,r.createFillGeometryInstance(e));return(o>0||a>0)&&(i=this._solidBatch.update(e)&&i,i=this._translucentBatch.update(e)&&i),i},l.prototype.removeAllPrimitives=function(){this._solidBatch.removeAllPrimitives(),this._translucentBatch.removeAllPrimitives()},l}),r("DataSources/StaticGeometryPerMaterialBatch",["../Core/AssociativeArray","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/Primitive","./MaterialProperty"],function(e,t,r,i,n){"use strict";var o=function(t,r,i,n){this.primitives=t,this.appearanceType=r,this.materialProperty=i,this.closed=n,this.updaters=new e,this.createPrimitive=!0,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.material=void 0,this.updatersWithAttributes=new e,this.attributes=new e,this.invalidated=!1,this.removeMaterialSubscription=i.definitionChanged.addEventListener(o.prototype.onMaterialChanged,this)};o.prototype.onMaterialChanged=function(){this.invalidated=!0},o.prototype.isMaterial=function(e){var r=this.materialProperty,i=e.fillMaterialProperty;return i===r?!0:t(r)?r.equals(i):!1},o.prototype.add=function(e,t){var r=t.entity.id;this.updaters.set(r,t),this.geometry.set(r,t.createFillGeometryInstance(e)),t.hasConstantFill&&t.fillMaterialProperty.isConstant||this.updatersWithAttributes.set(r,t),this.createPrimitive=!0},o.prototype.remove=function(e){var t=e.entity.id;return this.createPrimitive=this.updaters.remove(t),this.geometry.remove(t),this.updatersWithAttributes.remove(t),this.createPrimitive},o.prototype.update=function(e){var o=!0,a=!0,s=this.primitive,l=this.primitives,u=this.geometry.values;if(this.createPrimitive)t(s)&&(s.ready?this.oldPrimitive=s:l.remove(s),o=!1),u.length>0&&(this.material=n.getValue(e,this.materialProperty,this.material),s=new i({asynchronous:!0,geometryInstances:u,appearance:new this.appearanceType({material:this.material,translucent:this.material.isTranslucent(),closed:this.closed})}),s.show=o,l.add(s),a=!1),this.primitive=s,this.createPrimitive=!1;else if(t(s)&&s.ready){t(this.oldPrimitive)&&(l.remove(this.oldPrimitive),this.oldPrimitive=void 0,s.show=!0),this.material=n.getValue(e,this.materialProperty,this.material),this.primitive.appearance.material=this.material;for(var c=this.updatersWithAttributes.values,h=c.length,d=0;h>d;d++){var m=c[d],p=this.geometry.get(m.entity.id),f=this.attributes.get(p.id.id);t(f)||(f=s.getGeometryInstanceAttributes(p.id),this.attributes.set(p.id.id,f)),m.hasConstantFill||(o=m.isFilled(e),o!==f._lastShow&&(f._lastShow=o,f.show=r.toValue(o,f.show)))}}else t(s)&&!s.ready&&(a=!1);return a},o.prototype.destroy=function(){var e=this.primitive,r=this.primitives;t(e)&&r.remove(e),this.removeMaterialSubscription()};var a=function(e,t,r){this._items=[],this._primitives=e,this._appearanceType=t,this._closed=r};return a.prototype.add=function(e,t){for(var r=this._items,i=r.length,n=0;i>n;n++){var a=r[n];if(a.isMaterial(t))return a.add(e,t),void 0}var s=new o(this._primitives,this._appearanceType,t.fillMaterialProperty,this._closed);s.add(e,t),r.push(s)},a.prototype.remove=function(e){for(var t=this._items,r=t.length,i=r-1;i>=0;i--){var n=t[i];if(n.remove(e)){0===n.updaters.length&&(t.splice(i,1),n.destroy());break}}},a.prototype.update=function(e){var t,r=this._items,i=r.length;for(t=i-1;t>=0;t--){var n=r[t];if(n.invalidated){r.splice(t,1);for(var o=n.updaters.values,a=o.length,s=0;a>s;s++)this.add(e,o[s]);n.destroy()}}var l=!0;for(t=0;i>t;t++)l=r[t].update(e)&&l;return l},a.prototype.removeAllPrimitives=function(){for(var e=this._items,t=e.length,r=0;t>r;r++)e[r].destroy();this._items.length=0},a}),r("DataSources/StaticOutlineGeometryBatch",["../Core/AssociativeArray","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/ShowGeometryInstanceAttribute","../Scene/PerInstanceColorAppearance","../Scene/Primitive"],function(e,t,r,i,n,o,a){"use strict";var s=function(t,r){this.translucent=r,this.primitives=t,this.createPrimitive=!1,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new e,this.updaters=new e,this.updatersWithAttributes=new e,this.attributes=new e,this.itemsToRemove=[]};s.prototype.add=function(e,t){var r=e.entity.id;this.createPrimitive=!0,this.geometry.set(r,t),this.updaters.set(r,e),e.hasConstantOutline&&e.outlineColorProperty.isConstant||this.updatersWithAttributes.set(r,e)},s.prototype.remove=function(e){var t=e.entity.id;this.createPrimitive=this.geometry.remove(t)||this.createPrimitive,this.updaters.remove(t),this.updatersWithAttributes.remove(t)};var l=new t;s.prototype.update=function(e){var s=!0,u=!0,c=0,h=this.primitive,d=this.primitives;if(this.createPrimitive){this.attributes.removeAll(),i(h)&&(h.ready?this.oldPrimitive=h:d.remove(h),s=!1);var m=this.geometry.values;m.length>0&&(h=new a({asynchronous:!0,geometryInstances:m,appearance:new o({flat:!0,translucent:this.translucent})}),d.add(h),u=!1,h.show=s),this.primitive=h,this.createPrimitive=!1}else if(i(h)&&h.ready){i(this.oldPrimitive)&&(d.remove(this.oldPrimitive),this.oldPrimitive=void 0,h.show=!0);for(var p=this.updatersWithAttributes.values,f=p.length,v=0;f>v;v++){var g=p[v],_=this.geometry.get(g.entity.id),y=this.attributes.get(_.id.id);if(i(y)||(y=h.getGeometryInstanceAttributes(_.id),this.attributes.set(_.id.id,y)),!g.outlineColorProperty.isConstant){var C=g.outlineColorProperty;C.getValue(e,l),t.equals(y._lastColor,l)||(y._lastColor=t.clone(l,y._lastColor),y.color=r.toValue(l,y.color),(this.translucent&&255===y.color[3]||!this.translucent&&255!==y.color[3])&&(this.itemsToRemove[c++]=g))}g.hasConstantOutline||(s=g.isOutlineVisible(e),s!==y._lastShow&&(y._lastShow=s,y.show=n.toValue(s,y.show)))}}else i(h)&&!h.ready&&(u=!1);return this.itemsToRemove.length=c,u},s.prototype.removeAllPrimitives=function(){var e=this.primitive;i(e)&&(this.primitives.remove(e),this.primitive=void 0,this.geometry.removeAll(),this.updaters.removeAll())};var u=function(e){this._solidBatch=new s(e,!1),this._translucentBatch=new s(e,!0)};return u.prototype.add=function(e,t){var r=t.createOutlineGeometryInstance(e);255===r.attributes.color.value[3]?this._solidBatch.add(t,r):this._translucentBatch.add(t,r)},u.prototype.remove=function(e){this._solidBatch.remove(e)||this._translucentBatch.remove(e)},u.prototype.update=function(e){var t,r,i=this._solidBatch.update(e);i=this._translucentBatch.update(e)&&i;var n=this._solidBatch.itemsToRemove,o=n.length;if(o>0)for(t=0;o>t;t++)r=n[t],this._solidBatch.remove(r),this._translucentBatch.add(r,r.createOutlineGeometryInstance(e));n=this._translucentBatch.itemsToRemove;var a=n.length;if(a>0)for(t=0;a>t;t++)r=n[t],this._translucentBatch.remove(r),this._solidBatch.add(r,r.createOutlineGeometryInstance(e));return(o>0||a>0)&&(i=this._solidBatch.update(e)&&i,i=this._translucentBatch.update(e)&&i),i},u.prototype.removeAllPrimitives=function(){this._solidBatch.removeAllPrimitives(),this._translucentBatch.removeAllPrimitives()},u}),r("DataSources/GeometryVisualizer",["../Core/AssociativeArray","../Core/defined","../Core/destroyObject","../Core/DeveloperError","./ColorMaterialProperty","./StaticGeometryColorBatch","./StaticGeometryPerMaterialBatch","./StaticOutlineGeometryBatch"],function(e,t,r,i,n,o,a,s){"use strict";function l(e,t){e._outlineBatch.remove(t),e._closedColorBatch.remove(t),e._closedMaterialBatch.remove(t),e._openColorBatch.remove(t),e._openMaterialBatch.remove(t),e._dynamicBatch.remove(t)}function u(e,t,r){return r.isDynamic?(e._dynamicBatch.add(t,r),void 0):(r.outlineEnabled&&e._outlineBatch.add(t,r),r.fillEnabled&&(r.isClosed?r.fillMaterialProperty instanceof n?e._closedColorBatch.add(t,r):e._closedMaterialBatch.add(t,r):r.fillMaterialProperty instanceof n?e._openColorBatch.add(t,r):e._openMaterialBatch.add(t,r)),void 0)}var c=[],h=function(t){this._primitives=t,this._dynamicUpdaters=new e};h.prototype.add=function(e,t){this._dynamicUpdaters.set(t.entity.id,t.createDynamicUpdater(this._primitives))},h.prototype.remove=function(e){var r=e.entity.id,i=this._dynamicUpdaters.get(r);t(i)&&(this._dynamicUpdaters.remove(r),i.destroy())},h.prototype.update=function(e){for(var t=this._dynamicUpdaters.values,r=0,i=t.length;i>r;r++)t[r].update(e);return!0},h.prototype.removeAllPrimitives=function(){for(var e=this._dynamicUpdaters.values,t=0,r=e.length;r>t;t++)e[t].destroy();this._dynamicUpdaters.removeAll()};var d=function(t,r,i){this._type=t;var n=r.primitives;this._scene=r,this._primitives=n,this._entityCollection=void 0,this._addedObjects=new e,this._removedObjects=new e,this._changedObjects=new e,this._outlineBatch=new s(n),this._closedColorBatch=new o(n,t.perInstanceColorAppearanceType,!0),this._closedMaterialBatch=new a(n,t.materialAppearanceType,!0),this._openColorBatch=new o(n,t.perInstanceColorAppearanceType,!1),this._openMaterialBatch=new a(n,t.materialAppearanceType,!1),this._dynamicBatch=new h(n),this._subscriptions=new e,this._updaters=new e,this._entityCollection=i,i.collectionChanged.addEventListener(d.prototype._onCollectionChanged,this),this._onCollectionChanged(i,i.entities,c)};return d.prototype.update=function(e){var t,r,i,n,o=this._addedObjects,a=o.values,s=this._removedObjects,c=s.values,h=this._changedObjects,m=h.values;for(t=c.length-1;t>-1;t--)r=c[t],i=r.id,n=this._updaters.get(i),l(this,n),n.destroy(),this._updaters.remove(i),this._subscriptions.get(i)(),this._subscriptions.remove(i);for(t=a.length-1;t>-1;t--)r=a[t],i=r.id,n=new this._type(r,this._scene),this._updaters.set(i,n),u(this,e,n),this._subscriptions.set(i,n.geometryChanged.addEventListener(d._onGeometryChanged,this));for(t=m.length-1;t>-1;t--)r=m[t],i=r.id,n=this._updaters.get(i),l(this,n),u(this,e,n);o.removeAll(),s.removeAll(),h.removeAll();var p=this._outlineBatch.update(e);return p=this._closedColorBatch.update(e)&&p,p=this._closedMaterialBatch.update(e)&&p,p=this._openColorBatch.update(e)&&p,p=this._openMaterialBatch.update(e)&&p,p=this._dynamicBatch.update(e)&&p},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(d.prototype._onCollectionChanged,this),this._addedObjects.removeAll(),this._removedObjects.removeAll(),this._outlineBatch.removeAllPrimitives(),this._closedColorBatch.removeAllPrimitives(),this._closedMaterialBatch.removeAllPrimitives(),this._openColorBatch.removeAllPrimitives(),this._openMaterialBatch.removeAllPrimitives(),this._dynamicBatch.removeAllPrimitives();for(var e=this._subscriptions.values,t=e.length,i=0;t>i;i++)e[i]();return this._subscriptions.removeAll(),r(this)},d._onGeometryChanged=function(e){var r=this._removedObjects,i=this._changedObjects,n=e.entity,o=n.id;t(r.get(o))||t(i.get(o))||i.set(o,n)},d.prototype._onCollectionChanged=function(e,t,r){var i,n,o,a=this._addedObjects,s=this._removedObjects,l=this._changedObjects;for(i=r.length-1;i>-1;i--)o=r[i],n=o.id,a.remove(n)||(s.set(n,o),l.remove(n));for(i=t.length-1;i>-1;i--)o=t[i],n=o.id,s.remove(n)?l.set(n,o):a.set(n,o)},d}),r("Scene/Label",["../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/NearFarScalar","./Billboard","./HorizontalOrigin","./LabelStyle","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e){e._rebindAllGlyphs||e._repositionAllGlyphs||e._labelCollection._labelsToUpdate.push(e),e._rebindAllGlyphs=!0}function m(e){e._rebindAllGlyphs||e._repositionAllGlyphs||e._labelCollection._labelsToUpdate.push(e),e._repositionAllGlyphs=!0}var p=function(n,o){n=i(n,i.EMPTY_OBJECT),this._text=i(n.text,""),this._show=i(n.show,!0),this._font=i(n.font,"30px sans-serif"),this._fillColor=r.clone(i(n.fillColor,r.WHITE)),this._outlineColor=r.clone(i(n.outlineColor,r.BLACK)),this._outlineWidth=i(n.outlineWidth,1),this._style=i(n.style,c.FILL),this._verticalOrigin=i(n.verticalOrigin,h.BOTTOM),this._horizontalOrigin=i(n.horizontalOrigin,u.LEFT),this._pixelOffset=e.clone(i(n.pixelOffset,e.ZERO),new e),this._eyeOffset=t.clone(i(n.eyeOffset,t.ZERO)),this._position=t.clone(i(n.position,t.ZERO)),this._scale=i(n.scale,1),this._id=n.id,this._translucencyByDistance=n.translucencyByDistance,this._pixelOffsetScaleByDistance=n.pixelOffsetScaleByDistance,this._labelCollection=o,this._glyphs=[],this._rebindAllGlyphs=!0,this._repositionAllGlyphs=!0};return o(p.prototype,{show:{get:function(){return this._show},set:function(e){if(this._show!==e){this._show=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.show=e)}}}},position:{get:function(){return this._position},set:function(e){var r=this._position;if(!t.equals(r,e)){t.clone(e,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.position=e)}}}},text:{get:function(){return this._text},set:function(e){this._text!==e&&(this._text=e,d(this))}},font:{get:function(){return this._font},set:function(e){this._font!==e&&(this._font=e,d(this))}},fillColor:{get:function(){return this._fillColor},set:function(e){var t=this._fillColor;r.equals(t,e)||(r.clone(e,t),d(this))}},outlineColor:{get:function(){return this._outlineColor},set:function(e){var t=this._outlineColor;r.equals(t,e)||(r.clone(e,t),d(this))}},outlineWidth:{get:function(){return this._outlineWidth},set:function(e){this._outlineWidth!==e&&(this._outlineWidth=e,d(this))}},style:{get:function(){return this._style},set:function(e){this._style!==e&&(this._style=e,d(this))}},pixelOffset:{get:function(){return this._pixelOffset},set:function(t){var r=this._pixelOffset;if(!e.equals(r,t)){e.clone(t,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.pixelOffset=t)}}}},translucencyByDistance:{get:function(){return this._translucencyByDistance},set:function(e){var t=this._translucencyByDistance;if(!s.equals(t,e)){this._translucencyByDistance=s.clone(e,t);
for(var r=this._glyphs,i=0,o=r.length;o>i;i++){var a=r[i];n(a.billboard)&&(a.billboard.translucencyByDistance=e)}}}},pixelOffsetScaleByDistance:{get:function(){return this._pixelOffsetScaleByDistance},set:function(e){var t=this._pixelOffsetScaleByDistance;if(!s.equals(t,e)){this._pixelOffsetScaleByDistance=s.clone(e,t);for(var r=this._glyphs,i=0,o=r.length;o>i;i++){var a=r[i];n(a.billboard)&&(a.billboard.pixelOffsetScaleByDistance=e)}}}},eyeOffset:{get:function(){return this._eyeOffset},set:function(e){var r=this._eyeOffset;if(!t.equals(r,e)){t.clone(e,r);for(var i=this._glyphs,o=0,a=i.length;a>o;o++){var s=i[o];n(s.billboard)&&(s.billboard.eyeOffset=e)}}}},horizontalOrigin:{get:function(){return this._horizontalOrigin},set:function(e){this._horizontalOrigin!==e&&(this._horizontalOrigin=e,m(this))}},verticalOrigin:{get:function(){return this._verticalOrigin},set:function(e){if(this._verticalOrigin!==e){this._verticalOrigin=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.verticalOrigin=e)}m(this)}}},scale:{get:function(){return this._scale},set:function(e){if(this._scale!==e){this._scale=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.scale=e)}m(this)}}},id:{get:function(){return this._id},set:function(e){if(this._id!==e){this._id=e;for(var t=this._glyphs,r=0,i=t.length;i>r;r++){var o=t[r];n(o.billboard)&&(o.billboard.id=e)}}}}}),p.prototype.computeScreenSpacePosition=function(e){var t=this._labelCollection,r=t.modelMatrix,i=l._computeActualPosition(this._position,e.frameState,r),n=l._computeScreenSpacePosition(r,i,this._eyeOffset,this._pixelOffset,e);return n.y=e.canvas.clientHeight-n.y,n},p.prototype.equals=function(i){return this===i||n(i)&&this._show===i._show&&this._scale===i._scale&&this._style===i._style&&this._verticalOrigin===i._verticalOrigin&&this._horizontalOrigin===i._horizontalOrigin&&this._text===i._text&&this._font===i._font&&t.equals(this._position,i._position)&&r.equals(this._fillColor,i._fillColor)&&r.equals(this._outlineColor,i._outlineColor)&&e.equals(this._pixelOffset,i._pixelOffset)&&t.equals(this._eyeOffset,i._eyeOffset)&&s.equals(this._translucencyByDistance,i._translucencyByDistance)&&s.equals(this._pixelOffsetScaleByDistance,i._pixelOffsetScaleByDistance)&&this._id===i._id},p.prototype.isDestroyed=function(){return!1},p}),r("Scene/LabelCollection",["../Core/Cartesian2","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix4","../Core/writeTextToCanvas","./BillboardCollection","./HorizontalOrigin","./Label","./LabelStyle","./TextureAtlas","./VerticalOrigin"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(){this.textureInfo=void 0,this.dimensions=void 0,this.billboard=void 0}function f(e,t,r){this.labelCollection=e,this.index=t,this.dimensions=r}function v(e,t,r,i,n,o,a){return S.font=t,S.fillColor=r,S.strokeColor=i,S.strokeWidth=n,S.textBaseline=a===m.BOTTOM?"bottom":a===m.TOP?"top":"middle",S.fill=o===h.FILL||o===h.FILL_AND_OUTLINE,S.stroke=o===h.OUTLINE||o===h.FILL_AND_OUTLINE,s(e,S)}function g(e,t){t.textureInfo=void 0,t.dimensions=void 0;var i=t.billboard;r(i)&&(i.show=!1,i.image=void 0,e._spareBillboards.push(i),t.billboard=void 0)}function _(e,t,r,i){e.addImage(t,r).then(function(e){i.index=e})}function y(e,t){var i,n,o,a=t._text,s=a.length,l=t._glyphs,c=l.length;if(c>s)for(n=s;c>n;++n)g(e,l[n]);l.length=s;var h=e._glyphTextureCache;for(o=0;s>o;++o){var d=a.charAt(o),m=t._font,y=t._fillColor,C=t._outlineColor,w=t._outlineWidth,S=t._style,E=t._verticalOrigin,b=JSON.stringify([d,m,y.toRgba(),C.toRgba(),w,+S,+E]),T=h[b];if(!r(T)){var x=v(d,m,y,C,w,S,E);T=new f(e,-1,x.dimensions),h[b]=T,x.width>0&&x.height>0&&_(e._textureAtlas,b,x,T)}if(i=l[o],r(i)?-1===T.index?g(e,i):r(i.textureInfo)&&(i.textureInfo=void 0):(i=new p,l[o]=i),i.textureInfo=T,i.dimensions=T.dimensions,-1!==T.index){var P=i.billboard;r(P)||(P=e._spareBillboards.length>0?e._spareBillboards.pop():e._billboardCollection.add({collection:e}),i.billboard=P),P.show=t._show,P.position=t._position,P.eyeOffset=t._eyeOffset,P.pixelOffset=t._pixelOffset,P.horizontalOrigin=u.LEFT,P.verticalOrigin=t._verticalOrigin,P.scale=t._scale,P.pickPrimitive=t,P.id=t._id,P.image=b,P.translucencyByDistance=t._translucencyByDistance,P.pixelOffsetScaleByDistance=t._pixelOffsetScaleByDistance}}t._repositionAllGlyphs=!0}function C(e,t){var i,n,o=e._glyphs,a=0,s=0,l=0,c=o.length;for(l=0;c>l;++l)i=o[l],n=i.dimensions,a+=n.width,s=Math.max(s,n.height);var h=e._scale,d=e._horizontalOrigin,p=0;d===u.CENTER?p-=a/2*h:d===u.RIGHT&&(p-=a*h),E.x=p*t,E.y=0;var f=e._verticalOrigin;for(l=0;c>l;++l)i=o[l],n=i.dimensions,f===m.BOTTOM||n.height===s?E.y=-n.descent*h:f===m.TOP?E.y=-(s-n.height)*h-n.descent*h:f===m.CENTER&&(E.y=-(s-n.height)/2*h-n.descent*h),E.y*=t,r(i.billboard)&&i.billboard._setTranslate(E),E.x+=n.width*h*t}function w(e,t){for(var r=t._glyphs,i=0,o=r.length;o>i;++i)g(e,r[i]);t._labelCollection=void 0,n(t)}var S={},E=new e,b=function(e){e=t(e,t.EMPTY_OBJECT),this._textureAtlas=void 0,this._billboardCollection=new l,this._billboardCollection.destroyTextureAtlas=!1,this._spareBillboards=[],this._glyphTextureCache={},this._labels=[],this._labelsToUpdate=[],this._totalGlyphCount=0,this._resolutionScale=void 0,this.modelMatrix=a.clone(t(e.modelMatrix,a.IDENTITY)),this.debugShowBoundingVolume=t(e.debugShowBoundingVolume,!1)};return i(b.prototype,{length:{get:function(){return this._labels.length}}}),b.prototype.add=function(e){var t=new c(e,this);return this._labels.push(t),this._labelsToUpdate.push(t),t},b.prototype.remove=function(e){if(r(e)&&e._labelCollection===this){var t=this._labels.indexOf(e);if(-1!==t)return this._labels.splice(t,1),w(this,e),!0}return!1},b.prototype.removeAll=function(){for(var e=this._labels,t=0,r=e.length;r>t;++t)w(this,e[t]);e.length=0},b.prototype.contains=function(e){return r(e)&&e._labelCollection===this},b.prototype.get=function(e){return this._labels[e]},b.prototype.update=function(e,t,i){var n=this._billboardCollection;n.modelMatrix=this.modelMatrix,n.debugShowBoundingVolume=this.debugShowBoundingVolume,r(this._textureAtlas)||(this._textureAtlas=new d({context:e}),n.textureAtlas=this._textureAtlas);var o=e.uniformState,a=o.resolutionScale,s=this._resolutionScale!==a;this._resolutionScale=a;var l;l=s?this._labels:this._labelsToUpdate;for(var u=0,c=l.length;c>u;++u){var h=l[u];if(!h.isDestroyed()){var m=h._glyphs.length;h._rebindAllGlyphs&&(y(this,h),h._rebindAllGlyphs=!1),(s||h._repositionAllGlyphs)&&(C(h,a),h._repositionAllGlyphs=!1);var p=h._glyphs.length-m;this._totalGlyphCount+=p}}this._labelsToUpdate.length=0,n.update(e,t,i)},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){return this.removeAll(),this._billboardCollection=this._billboardCollection.destroy(),this._textureAtlas=this._textureAtlas&&this._textureAtlas.destroy(),n(this)},b}),r("DataSources/LabelVisualizer",["../Core/AssociativeArray","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/HorizontalOrigin","../Scene/LabelCollection","../Scene/LabelStyle","../Scene/VerticalOrigin","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";function m(e,t,r){var i=e._labelVisualizerIndex;if(n(i)){var o=t.get(i);o.show=!1,r.push(i),e._labelVisualizerIndex=void 0}}var p=1,f="30px sans-serif",v=c.FILL,g=i.WHITE,_=i.BLACK,y=1,C=t.ZERO,w=r.ZERO,S=l.CENTER,E=h.CENTER,b=new r,T=new i,x=new i,P=new r,A=new t,M=new s,D=new s,I=function(t,r){var i=new u;t.primitives.add(i),r.collectionChanged.addEventListener(I.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._labelCollection=i,this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return I.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,r=this._unusedIndexes,i=this._labelCollection,o=0,a=t.length;a>o;o++){var s,l,u=t[o],c=u._label,h=u._labelVisualizerIndex,I=u.isAvailable(e)&&d.getValueOrDefault(c._show,e,!0);if(I&&(b=d.getValueOrUndefined(u._position,e,b),s=d.getValueOrUndefined(c._text,e),I=n(b)&&n(s)),I){if(n(h))l=i.get(h);else{var R=r.length;R>0?(h=r.pop(),l=i.get(h)):(h=i.length,l=i.add()),u._labelVisualizerIndex=h,l.id=u}l.show=!0,l.position=b,l.text=s,l.scale=d.getValueOrDefault(c._scale,e,p),l.font=d.getValueOrDefault(c._font,e,f),l.style=d.getValueOrDefault(c._style,e,v),l.fillColor=d.getValueOrDefault(c._fillColor,e,g,T),l.outlineColor=d.getValueOrDefault(c._outlineColor,e,_,x),l.outlineWidth=d.getValueOrDefault(c._outlineWidth,e,y),l.pixelOffset=d.getValueOrDefault(c._pixelOffset,e,C,A),l.eyeOffset=d.getValueOrDefault(c._eyeOffset,e,w,P),l.horizontalOrigin=d.getValueOrDefault(c._horizontalOrigin,e,S),l.verticalOrigin=d.getValueOrDefault(c._verticalOrigin,e,E),l.translucencyByDistance=d.getValueOrUndefined(c._translucencyByDistance,e,M),l.pixelOffsetScaleByDistance=d.getValueOrUndefined(c._pixelOffsetScaleByDistance,e,D)}else m(u,i,r)}return!0},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){var e=this._entityCollection;e.collectionChanged.removeEventListener(I.prototype._onCollectionChanged,this);for(var t=e.entities,r=t.length,i=0;r>i;i++)t[i]._labelVisualizerIndex=void 0;return this._scene.primitives.remove(this._labelCollection),o(this)},I.prototype._onCollectionChanged=function(e,t,r,i){var o,a,s=this._labelCollection,l=this._unusedIndexes,u=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],n(a._label)&&n(a._position)&&u.set(a.id,a);for(o=i.length-1;o>-1;o--)a=i[o],n(a._label)&&n(a._position)?u.set(a.id,a):(m(a,s,l),u.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],m(a,s,l),u.remove(a.id)},I}),r("ThirdParty/gltfDefaults",["../Core/defaultValue","../Core/defined"],function(e,t){"use strict";function r(r){t(r.accessors)||(r.accessors={});var i=r.accessors;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.byteStride=e(o.byteStride,0)}}function i(r){t(r.animations)||(r.animations={});var i=r.animations;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t(o.channels)||(o.channels=[]),t(o.parameters)||(o.parameters={}),t(o.samplers)||(o.samplers={});var a=i.samplers;for(var s in a)if(a.hasOwnProperty(s)){var l=a[s];l.interpolation=e(l.interpolation,"LINEAR")}}}function n(r){t(r.asset)||(r.asset={}),r.asset.premultipliedAlpha=e(r.asset.premultipliedAlpha,!1)}function o(r){t(r.buffers)||(r.buffers={});var i=r.buffers;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.type=e(o.type,"arraybuffer")}}function a(e){t(e.bufferViews)||(e.bufferViews={})}function s(e){t(e.cameras)||(e.cameras={})}function l(e){t(e.images)||(e.images={})}function u(r){t(r.lights)||(r.lights={});var i=r.lights;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];if("ambient"===o.type){t(o.ambient)||(o.ambient={});var a=o.ambient;t(a.color)||(a.color=[1,1,1])}else if("directional"===o.type){t(o.directional)||(o.directional={});var s=o.directional;t(s.color)||(s.color=[1,1,1])}else if("point"===o.type){t(o.point)||(o.point={});var l=o.point;t(l.color)||(l.color=[1,1,1]),l.constantAttenuation=e(l.constantAttenuation,1),l.linearAttenuation=e(l.linearAttenuation,0),l.quadraticAttenuation=e(l.quadraticAttenuation,0)}else if("spot"===o.type){t(o.spot)||(o.spot={});var u=o.spot;t(u.color)||(u.color=[1,1,1]),u.constantAttenuation=e(u.constantAttenuation,1),u.fallOffAngle=e(u.fallOffAngle,3.14159265),u.fallOffExponent=e(u.fallOffExponent,0),u.linearAttenuation=e(u.linearAttenuation,0),u.quadraticAttenuation=e(u.quadraticAttenuation,0)}}}function c(e){t(e.materials)||(e.materials={});var r=e.materials;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i].instanceTechnique;t(n.values)||(n.values={})}}function h(r){t(r.meshes)||(r.meshes={});var i=r.meshes;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t(o.primitives)||(o.primitives=[]);for(var a=o.primitives.length,s=a.length,l=0;s>l;++l){var u=a[l];t(u.attributes)||(u.attributes={}),u.primitive=e(u.primitive,WebGLRenderingContext.TRIANGLES)}}}function d(e){t(e.nodes)||(e.nodes={});var r=e.nodes;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.children)||(n.children=[]),t(n.matrix)||(t(n.translation)&&t(n.rotation)&&t(n.scale)?(t(n.translation)||(n.translation=[0,0,0]),t(n.rotation)||(n.rotation=[1,0,0,0]),t(n.scale)||(n.scale=[1,1,1])):n.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}}function m(e){t(e.programs)||(e.programs={});var r=e.programs;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.attributes)||(n.attributes=[])}}function p(r){t(r.samplers)||(r.samplers={});var i=r.samplers;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.magFilter=e(o.magFilter,WebGLRenderingContext.LINEAR),o.minFilter=e(o.minFilter,WebGLRenderingContext.NEAREST_MIPMAP_LINEAR),o.wrapS=e(o.wrapS,WebGLRenderingContext.REPEAT),o.wrapT=e(o.wrapT,WebGLRenderingContext.REPEAT)}}function f(e){t(e.scenes)||(e.scenes={});var r=e.scenes;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.node)||(n.node=[])}}function v(e){t(e.shaders)||(e.shaders={})}function g(e){t(e.skins)||(e.skins={});var r=e.skins;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.bindShapeMatrix)&&(n.bindShapeMatrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}}function _(e){t(e.enable)||(e.enable=[]),t(e.disable)||(e.disable=[])}function y(e){t(e.techniques)||(e.techniques={});var r=e.techniques;for(var i in r)if(r.hasOwnProperty(i)){var n=r[i];t(n.parameters)||(n.parameters={});var o=n.passes;for(var a in o)if(o.hasOwnProperty(a)){var s=o[a],l=s.instanceProgram;t(l.attributes)||(l.attributes={}),t(l.uniforms)||(l.uniforms={}),t(s.states)||(s.states={}),_(s.states)}}}function C(r){t(r.textures)||(r.textures={});var i=r.textures;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];o.format=e(o.format,WebGLRenderingContext.RGBA),o.internalFormat=e(o.internalFormat,o.format),o.target=e(o.target,WebGLRenderingContext.TEXTURE_2D),o.type=e(o.type,WebGLRenderingContext.UNSIGNED_BYTE)}}var w=function(_){return t(_)?(t(_.allExtensions)||(_.allExtensions=[]),r(_),i(_),n(_),o(_),a(_),s(_),l(_),u(_),c(_),h(_),d(_),m(_),p(_),f(_),v(_),g(_),y(_),_.profile=e(_.profile,"WebGL 1.0.2"),_.version=e(_.version,"1.0"),C(_),_):void 0};return w}),r("Scene/getModelAccessor",["../Core/ComponentDatatype"],function(e){"use strict";var t={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},r=function(r){var i=r.componentType,n=t[r.type];return{componentsPerAttribute:n,createArrayBufferView:function(t,r,o){return e.createArrayBufferView(i,t,r,n*o)}}};return r}),r("Scene/ModelAnimationCache",["../Core/Cartesian3","../Core/defined","../Core/LinearSpline","../Core/Quaternion","../Core/QuaternionSpline","./getModelAccessor"],function(e,t,r,i,n,o){"use strict";function a(e,t){var r=e.gltf,i=r.buffers,n=r.bufferViews,a=n[t.bufferView],s=i[a.buffer],l=a.byteOffset+t.byteOffset,u=t.count*o(t).componentsPerAttribute;return e.basePath+s.path+":"+l+":"+u}function s(e,t,r){return e.basePath+":"+t+":"+r}var l=function(){},u={},c=new e;l.getAnimationParameterValues=function(r,n){var s=a(r,n),l=u[s];if(!t(l)){var h,d=r._loadResources.buffers,m=r.gltf,p=m.bufferViews,f=p[n.bufferView],v=n.componentType,g=n.type,_=n.count,y=o(n).createArrayBufferView(d[f.buffer],f.byteOffset+n.byteOffset,_);if(v===WebGLRenderingContext.FLOAT&&"SCALAR"===g)l=y;else if(v===WebGLRenderingContext.FLOAT&&"VEC3"===g)for(l=new Array(_),h=0;_>h;++h)l[h]=e.fromArray(y,3*h);else if(v===WebGLRenderingContext.FLOAT&&"VEC4"===g)for(l=new Array(_),h=0;_>h;++h){var C=4*h;l[h]=i.fromAxisAngle(e.fromArray(y,C,c),y[C+3])}""!==r.basePath&&(u[s]=l)}return l};var h={},d=function(e){this._value=e};return d.prototype.evaluate=function(){return this._value},l.getAnimationSpline=function(e,i,o,a,l,u){var c=s(e,i,a),m=h[c];if(!t(m)){var p=u[l.input],f=e.gltf.accessors[o.parameters[l.output]],v=u[l.output];if(1===p.length&&1===v.length)m=new d(v[0]);else{var g=f.componentType,_=f.type;"LINEAR"===l.interpolation&&(g===WebGLRenderingContext.FLOAT&&"VEC3"===_?m=new r({times:p,points:v}):g===WebGLRenderingContext.FLOAT&&"VEC4"===_&&(m=new n({times:p,points:v})))}""!==e.basePath&&(h[c]=m)}return m},l}),r("Scene/ModelAnimationLoop",["../Core/freezeObject"],function(e){"use strict";var t={NONE:0,REPEAT:1,MIRRORED_REPEAT:2};return e(t)}),r("Scene/ModelAnimationState",["../Core/freezeObject"],function(e){"use strict";return e({STOPPED:0,ANIMATING:1})}),r("Scene/ModelAnimation",["../Core/defaultValue","../Core/defineProperties","../Core/Event","./ModelAnimationLoop","./ModelAnimationState"],function(e,t,r,i,n){"use strict";var o=function(t,o,a){this._name=t.name,this._startTime=t.startTime,this._delay=e(t.delay,0),this._stopTime=t.stopTime,this.removeOnStop=e(t.removeOnStop,!1),this._speedup=e(t.speedup,1),this._reverse=e(t.reverse,!1),this._loop=e(t.loop,i.NONE),this.start=new r,this.update=new r,this.stop=new r,this._state=n.STOPPED,this._runtimeAnimation=a,this._startTime=void 0,this._duration=void 0;var s=this;this._raiseStartEvent=function(){s.start.raiseEvent(o,s)},this._updateEventTime=0,this._raiseUpdateEvent=function(){s.update.raiseEvent(o,s,s._updateEventTime)},this._raiseStopEvent=function(){s.stop.raiseEvent(o,s)}};return t(o.prototype,{name:{get:function(){return this._name}},startTime:{get:function(){return this._startTime}},delay:{get:function(){return this._delay}},stopTime:{get:function(){return this._stopTime}},speedup:{get:function(){return this._speedup}},reverse:{get:function(){return this._reverse}},loop:{get:function(){return this._loop}}}),o}),r("Scene/ModelAnimationCollection",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/JulianDate","../Core/Math","./ModelAnimation","./ModelAnimationLoop","./ModelAnimationState"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t){for(var r=e.channelEvaluators,i=r.length,n=0;i>n;++n)r[n](t)}function d(e,t,r){return function(){e.animationRemoved.raiseEvent(t,r)}}var m=function(e){this.animationAdded=new o,this.animationRemoved=new o,this._model=e,this._scheduledAnimations=[],this._previousTime=void 0};i(m.prototype,{length:{get:function(){return this._scheduledAnimations.length}}}),m.prototype.add=function(e){e=t(e,t.EMPTY_OBJECT);var r=this._model,i=r._runtime.animations,n=i[e.name],o=new l(e,r,n);return this._scheduledAnimations.push(o),this.animationAdded.raiseEvent(r,o),o},m.prototype.addAll=function(r){r=t(r,t.EMPTY_OBJECT),r=e(r);var i=[],n=this._model.gltf.animations;for(var o in n)n.hasOwnProperty(o)&&(r.name=o,i.push(this.add(r)));return i},m.prototype.remove=function(e){if(r(e)){var t=this._scheduledAnimations,i=t.indexOf(e);if(-1!==i)return t.splice(i,1),this.animationRemoved.raiseEvent(this._model,e),!0}return!1},m.prototype.removeAll=function(){var e=this._model,t=this._scheduledAnimations,r=t.length;this._scheduledAnimations=[];for(var i=0;r>i;++i)this.animationRemoved.raiseEvent(e,t[i])},m.prototype.contains=function(e){return r(e)?-1!==this._scheduledAnimations.indexOf(e):!1},m.prototype.get=function(e){return this._scheduledAnimations[e]};var p=[];return m.prototype.update=function(e){if(a.equals(e.time,this._previousTime))return!1;this._previousTime=a.clone(e.time,this._previousTime);for(var i=!1,n=e.time,o=this._model,l=this._scheduledAnimations,m=l.length,f=0;m>f;++f){var v=l[f],g=v._runtimeAnimation;r(v._startTime)||(v._startTime=a.addSeconds(t(v.startTime,n),v.delay,new a)),r(v._duration)||(v._duration=g.stopTime*(1/v.speedup));var _=v._startTime,y=v._duration,C=v.stopTime,w=0!==y?a.secondsDifference(n,_)/y:0,S=w>=0,E=S&&(1>=w||v.loop===u.REPEAT||v.loop===u.MIRRORED_REPEAT)&&(!r(C)||a.lessThanOrEquals(n,C));if(E){if(v._state===c.STOPPED&&(v._state=c.ANIMATING,v.start.numberOfListeners>0&&e.afterRender.push(v._raiseStartEvent)),v.loop===u.REPEAT)w-=Math.floor(w);else if(v.loop===u.MIRRORED_REPEAT){var b=Math.floor(w),T=w-b;w=1===b%2?1-T:T}v.reverse&&(w=1-w);var x=w*y*v.speedup;x=s.clamp(x,g.startTime,g.stopTime),h(g,x),v.update.numberOfListeners>0&&(v._updateEventTime=x,e.afterRender.push(v._raiseUpdateEvent)),i=!0}else S&&v._state===c.ANIMATING&&(v._state=c.STOPPED,v.stop.numberOfListeners>0&&e.afterRender.push(v._raiseStopEvent),v.removeOnStop&&p.push(v))}m=p.length;for(var P=0;m>P;++P){var A=p[P];l.splice(l.indexOf(A),1),e.afterRender.push(d(this,o,A))}return p.length=0,i},m}),r("Scene/ModelMaterial",["../Core/defined","../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(e,t,r){this._name=t.name,this._id=r,this._uniformMap=e._rendererResources.uniformMaps[r]};return t(r.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}}}),r.prototype.setValue=function(e,t){var r=this._uniformMap.values[e];r.value=r.clone(t,r.value)},r.prototype.getValue=function(t){var r=this._uniformMap.values[t];return e(r)?r.value:void 0},r}),r("Scene/ModelMesh",["../Core/defineProperties"],function(e){"use strict";var t=function(e,t,r){for(var i=[],n=e.primitives,o=n.length,a=0;o>a;++a){var s=n[a];i[a]=t[s.material]}this._name=e.name,this._materials=i,this._id=r};return e(t.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}},materials:{get:function(){return this._materials}}}),t}),r("Scene/ModelNode",["../Core/defaultValue","../Core/defineProperties","../Core/Matrix4"],function(e,t,r){"use strict";var i=function(t,i,n,o){this._model=t,this._runtimeNode=n,this._name=i.name,this._id=o,this.useMatrix=!1,this._matrix=r.clone(e(i.matrix,r.IDENTITY))};return t(i.prototype,{name:{get:function(){return this._name}},id:{get:function(){return this._id}},matrix:{get:function(){return this._matrix},set:function(e){this._matrix=r.clone(e,this._matrix),this.useMatrix=!0;var t=this._model;t._cesiumAnimationsDirty=!0,this._runtimeNode.dirtyNumber=t._maxDirtyNumber}}}),i}),r("Scene/Model",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/combine","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/IndexDatatype","../Core/loadArrayBuffer","../Core/loadImage","../Core/loadText","../Core/Math","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/PrimitiveType","../Core/Quaternion","../Core/Queue","../Core/RuntimeError","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","../ThirdParty/gltfDefaults","../ThirdParty/Uri","./getModelAccessor","./ModelAnimationCache","./ModelAnimationCollection","./ModelMaterial","./ModelMesh","./ModelNode","./Pass","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F){"use strict";function z(){this.buffersToCreate=new w,this.buffers={},this.pendingBufferLoads=0,this.programsToCreate=new w,this.shaders={},this.pendingShaderLoads=0,this.texturesToCreate=new w,this.pendingTextureLoads=0,this.createSamplers=!0,this.createSkins=!0,this.createRuntimeAnimations=!0,this.createVertexArrays=!0,this.createRenderStates=!0,this.createUniformMaps=!0,this.createRuntimeNodes=!0,this.skinnedNodesNames=[]}function V(e,t,r){return e._runtime[t][r]}function k(e){if(a(e.matrix))return _.fromArray(e.matrix);var t=r.fromArray(e.rotation,0,Ht);return _.fromTranslationQuaternionRotationScale(r.fromArray(e.translation,0,qt),C.fromAxisAngle(t,e.rotation[3],jt),r.fromArray(e.scale,0,Yt))}function U(t){for(var i=t.nodes,n=t.meshes,s=t.accessors,l=t.scenes[t.scene].nodes,u=l.length,c=[],h=new r(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),d=new r(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),m=0;u>m;++m){var p=i[l[m]];for(p._transformToRoot=k(p),c.push(p);c.length>0;){p=c.pop();var f=p._transformToRoot,v=o(p.meshes,a(p.instanceSkin)?p.instanceSkin.meshes:void 0);if(a(v))for(var g=v.length,y=0;g>y;++y)for(var C=n[v[y]].primitives,w=C.length,S=0;w>S;++S){var E=C[S].attributes.POSITION;if(a(E)){var b=s[E],T=r.fromArray(b.min,0,Xt),x=r.fromArray(b.max,0,Zt);a(h)&&a(d)&&(_.multiplyByPoint(f,T,T),_.multiplyByPoint(f,x,x),r.minimumByComponent(h,T,h),r.maximumByComponent(d,x,d))}}for(var P=p.children,A=P.length,M=0;A>M;++M){var D=i[P[M]];D._transformToRoot=k(D),_.multiplyTransformation(f,D._transformToRoot,D._transformToRoot),c.push(D)}delete p._transformToRoot}}var I=e.fromCornerPoints(h,d);return e.transformWithoutScale(I,Ut,I)}function W(e,t,r){return function(){e._loadError=new S("Failed to load external "+t+": "+r),e._state=Wt.FAILED}}function G(e,t){return function(r){var i=e._loadResources;i.buffers[t]=r,--i.pendingBufferLoads}}function H(e){var t=e.gltf.buffers;for(var r in t)if(t.hasOwnProperty(r)){++e._loadResources.pendingBufferLoads;var i=t[r],n=new M(i.uri),o=n.resolve(e._baseUri).toString();d(o).then(G(e,r)).otherwise(W(e,"buffer",o))}}function q(e){var t=e.gltf.bufferViews;for(var r in t)t.hasOwnProperty(r)&&e._loadResources.buffersToCreate.enqueue(r)}function j(e,t){return function(r){var i=e._loadResources;i.shaders[t]=r,--i.pendingShaderLoads}}function Y(e){var t=e.gltf.shaders;for(var r in t)if(t.hasOwnProperty(r)){++e._loadResources.pendingShaderLoads;var i=t[r],n=new M(i.uri),o=n.resolve(e._baseUri).toString();p(o).then(j(e,r)).otherwise(W(e,"shader",o))}}function X(e){var t=e.gltf.programs;for(var r in t)t.hasOwnProperty(r)&&e._loadResources.programsToCreate.enqueue(r)}function Z(e,t){return function(r){var i=e._loadResources;--i.pendingTextureLoads,i.texturesToCreate.enqueue({name:t,image:r})}}function Q(e){var t=e.gltf.images,r=e.gltf.textures;for(var i in r)if(r.hasOwnProperty(i)){++e._loadResources.pendingTextureLoads;var n=r[i],o=new M(t[n.source].uri),a=o.resolve(e._baseUri).toString();m(a).then(Z(e,i)).otherwise(W(e,"image",a))}}function J(e){var t={},r={},i=[],n=e._loadResources.skinnedNodesNames,o=e.gltf.nodes;for(var s in o)if(o.hasOwnProperty(s)){var l=o[s],u={matrix:void 0,translation:void 0,rotation:void 0,scale:void 0,transformToRoot:new _,computedMatrix:new _,dirtyNumber:0,commands:[],inverseBindMatrices:void 0,bindShapeMatrix:void 0,joints:[],computedJointMatrices:[],jointName:l.jointName,children:[],parents:[],publicNode:void 0};u.publicNode=new N(e,l,u,s),t[s]=u,r[l.name]=u,a(l.instanceSkin)&&(n.push(s),i.push(u))}e._runtime.nodes=t,e._runtime.nodesByName=r,e._runtime.skinnedNodes=i}function K(e){var t={},r={},i=e.gltf.materials,n=e._rendererResources.uniformMaps;for(var o in i)if(i.hasOwnProperty(o)){n[o]={uniformMap:void 0,values:void 0,jointMatrixUniformName:void 0};var a=i[o],s=new O(e,a,o);t[a.name]=s,r[o]=s}e._runtime.materialsByName=t,e._runtime.materialsById=r}function $(e){var t={},r=e._runtime.materialsById,i=e.gltf.meshes;for(var n in i)if(i.hasOwnProperty(n)){var o=i[n];t[o.name]=new L(o,r,n)}e._runtime.meshesByName=t}function et(e){H(e),q(e),Y(e),X(e),Q(e),K(e),$(e),J(e)}function tt(e,t){var r=e._loadResources;if(0===r.pendingBufferLoads){for(var i,n,o=e.gltf.bufferViews,s=r.buffers,l=e._rendererResources.buffers;r.buffersToCreate.length>0;){var u=r.buffersToCreate.dequeue();if(n=o[u],n.target===WebGLRenderingContext.ARRAY_BUFFER){i=new Uint8Array(s[n.buffer],n.byteOffset,n.byteLength);var c=t.createVertexBuffer(i,E.STATIC_DRAW);c.vertexArrayDestroyable=!1,l[u]=c}}var h=e.gltf.accessors;for(var d in h)if(h.hasOwnProperty(d)){var m=h[d];if(n=o[m.bufferView],n.target===WebGLRenderingContext.ELEMENT_ARRAY_BUFFER&&!a(l[m.bufferView])){i=new Uint8Array(s[n.buffer],n.byteOffset,n.byteLength);var p=t.createIndexBuffer(i,E.STATIC_DRAW,m.componentType);p.vertexArrayDestroyable=!1,l[m.bufferView]=p}}}}function rt(e){for(var t={},r=e.length,i=0;r>i;++i)t[e[i]]=i;return t}function it(e,t,r){var i=t.gltf.programs,n=t._loadResources.shaders,o=i[e],a=rt(o.attributes),s=n[o.vertexShader],l=n[o.fragmentShader];if(t._rendererResources.programs[e]=r.createShaderProgram(s,l,a),t.allowPicking){var u=b({sources:[l],pickColorQualifier:"uniform"});t._rendererResources.pickPrograms[e]=r.createShaderProgram(s,u,a)}}function nt(e,t){var r,i=e._loadResources;if(0===i.pendingShaderLoads)if(e.asynchronous)i.programsToCreate.length>0&&(r=i.programsToCreate.dequeue(),it(r,e,t));else for(;i.programsToCreate.length>0;)r=i.programsToCreate.dequeue(),it(r,e,t)}function ot(e,t){var r=e._loadResources;if(r.createSamplers){r.createSamplers=!1;var i=e._rendererResources.samplers,n=e.gltf.samplers;for(var o in n)if(n.hasOwnProperty(o)){var a=n[o];i[o]=t.createSampler({wrapS:a.wrapS,wrapT:a.wrapT,minificationFilter:a.minFilter,magnificationFilter:a.magFilter})}}}function at(e,t,r){var i=t.gltf.textures,n=i[e.name],o=t._rendererResources.samplers,a=o[n.sampler],s=a.minificationFilter===x.NEAREST_MIPMAP_NEAREST||a.minificationFilter===x.NEAREST_MIPMAP_LINEAR||a.minificationFilter===x.LINEAR_MIPMAP_NEAREST||a.minificationFilter===x.LINEAR_MIPMAP_LINEAR,l=s||a.wrapS===P.REPEAT||a.wrapS===P.MIRRORED_REPEAT||a.wrapT===P.REPEAT||a.wrapT===P.MIRRORED_REPEAT,u=e.image,c=!f.isPowerOfTwo(u.width)||!f.isPowerOfTwo(u.height);if(l&&c){var h=document.createElement("canvas");h.width=f.nextPowerOfTwo(u.width),h.height=f.nextPowerOfTwo(u.height);var d=h.getContext("2d");d.drawImage(u,0,0,u.width,u.height,0,0,h.width,h.height),u=h}var m;n.target===WebGLRenderingContext.TEXTURE_2D&&(m=r.createTexture2D({source:u,pixelFormat:n.internalFormat,pixelDatatype:n.type,flipY:!1})),s&&m.generateMipmap(),m.sampler=a,t._rendererResources.textures[e.name]=m}function st(e,t){var r,i=e._loadResources;if(e.asynchronous)i.texturesToCreate.length>0&&(r=i.texturesToCreate.dequeue(),at(r,e,t));else for(;i.texturesToCreate.length>0;)r=i.texturesToCreate.dequeue(),at(r,e,t)}function lt(e,t){var r=e.gltf;r.programs;var i=r.techniques,n=r.materials,o={},a=i[n[t.material].instanceTechnique.technique],s=a.parameters,l=a.passes[a.pass],u=l.instanceProgram,c=u.attributes,h=e._rendererResources.programs[u.program].vertexAttributes;for(var d in c)if(c.hasOwnProperty(d)){var m=s[c[d]];o[m.semantic]=h[d].index}return o}function ut(e,t){for(var r=e.length,i=0;r>i;++i)for(var n=[e[i]];n.length>0;){var o=n.pop();if(o.jointName===t)return o;for(var a=o.children,s=a.length,l=0;s>l;++l)n.push(a[l])}return void 0}function ct(e,t){for(var r=e.gltf,i=r.skins,n=r.nodes,o=e._runtime.nodes,a=e._loadResources.skinnedNodesNames,s=a.length,l=0;s>l;++l){var u=a[l],c=o[u],h=n[u].instanceSkin,d=t[h.skin];c.inverseBindMatrices=d.inverseBindMatrices,c.bindShapeMatrix=d.bindShapeMatrix;for(var m=[],p=h.skeletons,f=p.length,v=0;f>v;++v)m.push(o[p[v]]);for(var g=i[h.skin].jointNames,_=g.length,y=0;_>y;++y){var C=g[y];c.joints.push(ut(m,C))}}}function ht(e){var t=e._loadResources;if(t.finishedBuffersCreation()&&t.createSkins){t.createSkins=!1;var r=e.gltf,i=t.buffers,n=r.accessors,o=r.bufferViews,a=r.skins,s={};for(var l in a)if(a.hasOwnProperty(l)){var u=a[l],c=n[u.inverseBindMatrices],h=o[c.bufferView],d=c.componentType,m=c.type,p=c.count,f=D(c).createArrayBufferView(i[h.buffer],h.byteOffset+c.byteOffset,p),v=new Array(p);if(d===WebGLRenderingContext.FLOAT&&"MAT4"===m)for(var g=0;p>g;++g)v[g]=_.fromArray(f,16*g);var y;_.equals(u.bindShapeMatrix,_.IDENTITY)||(y=_.clone(u.bindShapeMatrix)),s[l]={inverseBindMatrices:v,bindShapeMatrix:y}}ct(e,s)}}function dt(e,t,r,i){return function(n){t[r]=i.evaluate(n,t[r]),t.dirtyNumber=e._maxDirtyNumber}}function mt(e){var t=e._loadResources;if(t.finishedPendingLoads()&&t.createRuntimeAnimations){t.createRuntimeAnimations=!1,e._runtime.animations={};var r,i=e._runtime.nodes,n=e.gltf.animations,o=e.gltf.accessors;for(var a in n)if(n.hasOwnProperty(a)){var s=n[a],l=s.channels,u=s.parameters,c=s.samplers,h={};for(r in u)u.hasOwnProperty(r)&&(h[r]=I.getAnimationParameterValues(e,o[u[r]]));for(var d=Number.MAX_VALUE,m=-Number.MAX_VALUE,p=l.length,f=new Array(p),v=0;p>v;++v){var g=l[v],_=g.target,y=c[g.sampler],C=h[y.input];d=Math.min(d,C[0]),m=Math.max(m,C[C.length-1]);var w=I.getAnimationSpline(e,a,s,g.sampler,y,h);
f[v]=dt(e,i[_.id],_.path,w)}e._runtime.animations[a]={startTime:d,stopTime:m,channelEvaluators:f}}}}function pt(e,t){var r=e._loadResources;if(r.finishedBuffersCreation()&&r.finishedProgramCreation()&&r.createVertexArrays){r.createVertexArrays=!1;var i=e._rendererResources.buffers,n=e._rendererResources.vertexArrays,o=e.gltf,s=o.accessors,l=o.meshes;for(var u in l)if(l.hasOwnProperty(u))for(var c=l[u].primitives,h=c.length,d=0;h>d;++d){var m=c[d],p=lt(e,m),f=[],v=m.attributes;for(var g in v)if(v.hasOwnProperty(g)){var _=p[g];if(a(_)){var y=s[v[g]];f.push({index:_,vertexBuffer:i[y.bufferView],componentsPerAttribute:D(y).componentsPerAttribute,componentDatatype:y.componentType,normalize:!1,offsetInBytes:y.byteOffset,strideInBytes:y.byteStride})}}var C=s[m.indices],w=i[C.bufferView];n[u+".primitive."+d]=t.createVertexArray(f,w)}}}function ft(e){var t={};t[WebGLRenderingContext.BLEND]=!1,t[WebGLRenderingContext.CULL_FACE]=!1,t[WebGLRenderingContext.DEPTH_TEST]=!1,t[WebGLRenderingContext.POLYGON_OFFSET_FILL]=!1,t[WebGLRenderingContext.SAMPLE_COVERAGE]=!1,t[WebGLRenderingContext.SCISSOR_TEST]=!1;var r,i=e.enable,n=i.length;for(r=0;n>r;++r)t[i[r]]=!0;return t}function vt(e,t){var r=e._loadResources;if(r.createRenderStates){r.createRenderStates=!1;var i=e._rendererResources.renderStates,n=e.gltf.techniques;for(var s in n)if(n.hasOwnProperty(s)){var l=n[s],u=l.passes[l.pass],c=u.states,h=ft(c),d=o(c.functions,o.EMPTY_OBJECT),m=o(d.blendColor,[0,0,0,0]),p=o(d.blendEquationSeparate,[WebGLRenderingContext.FUNC_ADD,WebGLRenderingContext.FUNC_ADD]),f=o(d.blendFuncSeparate,[WebGLRenderingContext.ONE,WebGLRenderingContext.ONE,WebGLRenderingContext.ZERO,WebGLRenderingContext.ZERO]),v=o(d.colorMask,[!0,!0,!0,!0]),g=o(d.depthRange,[0,1]),_=o(d.polygonOffset,[0,0]),y=o(d.sampleCoverage,[0,0]),C=o(d.scissor,[0,0,0,0]);i[s]=t.createRenderState({frontFace:a(d.frontFace)?d.frontFace[0]:WebGLRenderingContext.CCW,cull:{enabled:h[WebGLRenderingContext.CULL_FACE],face:a(d.cullFace)?d.cullFace[0]:WebGLRenderingContext.BACK},lineWidth:a(d.lineWidth)?d.lineWidth[0]:1,polygonOffset:{enabled:h[WebGLRenderingContext.POLYGON_OFFSET_FILL],factor:_[0],units:_[1]},scissorTest:{enabled:h[WebGLRenderingContext.SCISSOR_TEST],rectangle:{x:C[0],y:C[1],width:C[2],height:C[3]}},depthRange:{near:g[0],far:g[1]},depthTest:{enabled:h[WebGLRenderingContext.DEPTH_TEST],func:a(d.depthFunc)?d.depthFunc[0]:WebGLRenderingContext.LESS},colorMask:{red:v[0],green:v[1],blue:v[2],alpha:v[3]},depthMask:a(d.depthMask)?d.depthMask[0]:!0,blending:{enabled:h[WebGLRenderingContext.BLEND],color:{red:m[0],green:m[1],blue:m[2],alpha:m[3]},equationRgb:p[0],equationAlpha:p[1],functionSourceRgb:f[0],functionSourceAlpha:f[1],functionDestinationRgb:f[2],functionDestinationAlpha:f[3]},sampleCoverage:{enabled:h[WebGLRenderingContext.SAMPLE_COVERAGE],value:y[0],invert:y[1]}})}}}function gt(e){var t={value:e,clone:function(e){return e},func:function(){return t.value}};return t}function _t(e){var r={value:t.fromArray(e),clone:t.clone,func:function(){return r.value}};return r}function yt(e){var t={value:r.fromArray(e),clone:r.clone,func:function(){return t.value}};return t}function Ct(e){var t={value:i.fromArray(e),clone:i.clone,func:function(){return t.value}};return t}function wt(e){var t={value:v.fromColumnMajorArray(e),clone:v.clone,func:function(){return t.value}};return t}function St(e){var t={value:g.fromColumnMajorArray(e),clone:g.clone,func:function(){return t.value}};return t}function Et(e){var t={value:_.fromColumnMajorArray(e),clone:_.clone,func:function(){return t.value}};return t}function bt(e,t){var r={value:t._rendererResources.textures[e],clone:function(e){return e},func:function(){return r.value}};return r}function Tt(e,t){var r=t._runtime.nodes[e];return function(){return r.computedMatrix}}function xt(e,t){var r=e._loadResources;if(r.finishedTextureCreation()&&r.finishedProgramCreation()&&r.createUniformMaps){r.createUniformMaps=!1;var i=e.gltf,n=i.materials,o=i.techniques;i.programs;var s=e._rendererResources.uniformMaps;for(var l in n)if(n.hasOwnProperty(l)){var u=n[l],c=u.instanceTechnique,h=c.values,d=o[c.technique],m=d.parameters,p=d.passes[d.pass],f=p.instanceProgram,v=f.uniforms;e._rendererResources.programs[f.program].allUniforms;var g,_={},y={};for(var C in v)if(v.hasOwnProperty(C)){var w=v[C],S=m[w];if(a(h[w])){var E=Jt[S.type](h[w],e);_[C]=E.func,y[w]=E}else if(a(S.semantic))"JOINTMATRIX"!==S.semantic?_[C]=Qt[S.semantic](t.uniformState):g=C;else if(a(S.source))_[C]=Tt(S.source,e);else if(a(S.value)){var b=Jt[S.type](S.value,e);_[C]=b.func,y[w]=b}}var T=s[l];T.uniformMap=_,T.values=y,T.jointMatrixUniformName=g}}}function Pt(e){return function(){return e}}function At(e){return function(){return e.computedJointMatrices}}function Mt(t,i,s,l){for(var u=t._renderCommands,c=t._pickCommands,d=t._pickIds,m=t.allowPicking,p=t._runtime.meshesByName,f=t.debugShowBoundingVolume,v=t._rendererResources,g=v.vertexArrays,y=v.programs,C=v.pickPrograms,w=v.renderStates,S=v.uniformMaps,E=t.gltf,b=E.accessors,x=E.meshes,P=E.techniques,A=E.materials,M=a(i.meshes)?i.meshes:i.instanceSkin.meshes,D=M.length,I=0;D>I;++I)for(var R=M[I],O=x[R],L=O.primitives,N=L.length,F=0;N>F;++F){var z,V=L[F],k=b[V.indices],U=A[V.material].instanceTechnique,W=P[U.technique],G=W.passes[W.pass],H=G.instanceProgram,q=V.attributes.POSITION;if(a(q)){var j=b[q];z=e.fromCornerPoints(r.fromArray(j.min),r.fromArray(j.max))}var Y=g[R+".primitive."+F],X=k.count,Z=k.byteOffset/h.getSizeInBytes(k.componentType),Q=S[V.material],J=Q.uniformMap;if(a(Q.jointMatrixUniformName)){var K={};K[Q.jointMatrixUniformName]=At(s),J=n(J,K)}var $=w[U.technique],et=$.blending.enabled,tt={primitive:o(t.pickPrimitive,t),id:t.id,node:s.publicNode,mesh:p[O.name]},rt=new T({boundingVolume:new e,modelMatrix:new _,primitiveType:V.primitive,vertexArray:Y,count:X,offset:Z,shaderProgram:y[H.program],uniformMap:J,renderState:$,owner:tt,debugShowBoundingVolume:f,pass:et?B.TRANSLUCENT:B.OPAQUE});u.push(rt);var it;if(m){var nt=l.createPickId(tt);d.push(nt);var ot=n(J,{czm_pickColor:Pt(nt.color)});it=new T({boundingVolume:new e,modelMatrix:new _,primitiveType:V.primitive,vertexArray:Y,count:X,offset:Z,shaderProgram:C[H.program],uniformMap:ot,renderState:$,owner:tt,pass:et?B.TRANSLUCENT:B.OPAQUE}),c.push(it)}s.commands.push({command:rt,pickCommand:it,boundingSphere:z})}}function Dt(e,t){var i=e._loadResources;if(i.finishedPendingLoads()&&i.finishedResourceCreation()&&i.createRuntimeNodes){i.createRuntimeNodes=!1;for(var n=[],o=e._runtime.nodes,s=e.gltf,l=s.nodes,u=s.scenes[s.scene],c=u.nodes,h=c.length,d=[],m=new r,p=0;h>p;++p)for(d.push({parentRuntimeNode:void 0,gltfNode:l[c[p]],id:c[p]});d.length>0;){var f=d.pop(),v=f.parentRuntimeNode,g=f.gltfNode,y=o[f.id];0===y.parents.length&&(a(g.matrix)?y.matrix=_.fromColumnMajorArray(g.matrix):(m=r.fromArray(g.rotation,0,m),y.translation=r.fromArray(g.translation),y.rotation=C.fromAxisAngle(m,g.rotation[3]),y.scale=r.fromArray(g.scale))),a(v)?(v.children.push(y),y.parents.push(v)):n.push(y),(a(g.meshes)||a(g.instanceSkin))&&Mt(e,g,y,t);for(var w=g.children,S=w.length,E=0;S>E;++E)d.push({parentRuntimeNode:y,gltfNode:l[w[E]],id:w[E]})}e._runtime.rootNodes=n,e._runtime.nodes=o}}function It(e,t){tt(e,t),nt(e,t),ot(e,t),st(e,t),ht(e),mt(e),pt(e,t),vt(e,t),xt(e,t),Dt(e,t)}function Rt(e,t){var r=e.publicNode,i=r.matrix;r.useMatrix&&a(i)?_.clone(i,t):a(e.matrix)?_.clone(e.matrix,t):_.fromTranslationQuaternionRotationScale(e.translation,e.rotation,e.scale,t)}function Ot(t,r,i){for(var n=t._maxDirtyNumber,o=t.allowPicking,a=t._runtime.rootNodes,s=a.length,l=Kt,u=t._computedModelMatrix,c=0;s>c;++c){var h=a[c];for(Rt(h,h.transformToRoot),l.push(h);l.length>0;){h=l.pop();var d=h.transformToRoot,m=h.commands;if(h.dirtyNumber===n||r||i){var p=m.length;if(p>0)for(var f=0;p>f;++f){var v=m[f],g=v.command;if(_.multiplyTransformation(u,d,g.modelMatrix),e.transform(v.boundingSphere,g.modelMatrix,g.boundingVolume),o){var y=v.pickCommand;_.clone(g.modelMatrix,y.modelMatrix),e.clone(g.boundingVolume,y.boundingVolume)}}else h.computedMatrix=_.multiplyTransformation(u,d,h.computedMatrix)}for(var C=h.children,w=C.length,S=0;w>S;++S){var E=C[S];E.dirtyNumber=Math.max(E.dirtyNumber,h.dirtyNumber),(E.dirtyNumber===n||i)&&(Rt(E,E.transformToRoot),_.multiplyTransformation(d,E.transformToRoot,E.transformToRoot)),l.push(E)}}}++t._maxDirtyNumber}function Lt(e){for(var t=e._runtime.skinnedNodes,r=t.length,i=0;r>i;++i){var n=t[i];$t=_.inverseTransformation(n.transformToRoot,$t);for(var o=n.computedJointMatrices,s=n.joints,l=n.bindShapeMatrix,u=n.inverseBindMatrices,c=u.length,h=0;c>h;++h)a(o[h])||(o[h]=new _),o[h]=_.multiplyTransformation($t,s[h].transformToRoot,o[h]),o[h]=_.multiplyTransformation(o[h],u[h],o[h]),a(l)&&(o[h]=_.multiplyTransformation(o[h],l,o[h]))}}function Nt(e){var t=e.id;if(e._id!==t){e._id=t;for(var r=e._pickIds,i=r.length,n=0;i>n;++n)r[n].object.id=t}}function Bt(e){if(e._debugWireframe!==e.debugWireframe){e._debugWireframe=e.debugWireframe;for(var t=e.debugWireframe?y.LINES:y.TRIANGLES,r=e._renderCommands,i=r.length,n=0;i>n;++n)r[n].primitiveType=t}}function Ft(e,t,i,n){var o=n.camera,a=o.frustum,s=r.subtract(o.positionWC,e,tr),l=r.multiplyByScalar(o.directionWC,r.dot(s,o.directionWC),rr),u=Math.max(a.near,r.magnitude(l)-t);er.x=i.drawingBufferWidth,er.y=i.drawingBufferHeight;var c=a.getPixelSize(er,u),h=Math.max(c.x,c.y);return h}function zt(e,t,r){var i=e._scale;if(0!==e.minimumPixelSize){var n=Math.max(t.drawingBufferWidth,t.drawingBufferHeight),o=e.modelMatrix;ir.x=o[12],ir.y=o[13],ir.z=o[14];var a=e.boundingSphere.radius,s=Ft(ir,a,t,r),l=1/s,u=Math.min(l*2*a,n);u<e.minimumPixelSize&&(i=e.minimumPixelSize*s/(2*e._initialRadius))}return i}function Vt(e){for(var t in e)e.hasOwnProperty(t)&&e[t].destroy()}function kt(e){for(var t in e)e.hasOwnProperty(t)&&e[t].destroy()}var Ut=_.fromRotationTranslation(g.fromRotationX(f.PI_OVER_TWO),r.ZERO),Wt={NEEDS_LOAD:0,LOADING:1,LOADED:2,FAILED:3};z.prototype.finishedPendingLoads=function(){return 0===this.pendingBufferLoads&&0===this.pendingShaderLoads&&0===this.pendingTextureLoads},z.prototype.finishedResourceCreation=function(){return 0===this.buffersToCreate.length&&0===this.programsToCreate.length&&0===this.texturesToCreate.length},z.prototype.finishedBuffersCreation=function(){return 0===this.pendingBufferLoads&&0===this.buffersToCreate.length},z.prototype.finishedProgramCreation=function(){return 0===this.pendingShaderLoads&&0===this.programsToCreate.length},z.prototype.finishedTextureCreation=function(){return 0===this.pendingTextureLoads&&0===this.texturesToCreate.length};var Gt=function(e){e=o(e,o.EMPTY_OBJECT),this._gltf=A(e.gltf),this._basePath=o(e.basePath,"");var t=new M(document.location.href),r=new M(this._basePath);this._baseUri=r.resolve(t),this.show=o(e.show,!0),this.modelMatrix=_.clone(o(e.modelMatrix,_.IDENTITY)),this._modelMatrix=_.clone(this.modelMatrix),this.scale=o(e.scale,1),this._scale=this.scale,this.minimumPixelSize=o(e.minimumPixelSize,0),this._minimumPixelSize=this.minimumPixelSize,this.id=e.id,this._id=e.id,this.pickPrimitive=e.pickPrimitive,this._allowPicking=o(e.allowPicking,!0),this.readyToRender=new c,this._ready=!1,this.activeAnimations=new R(this),this._asynchronous=o(e.asynchronous,!0),this.debugShowBoundingVolume=o(e.debugShowBoundingVolume,!1),this.debugWireframe=o(e.debugWireframe,!1),this._debugWireframe=!1,this._computedModelMatrix=new _,this._initialRadius=void 0,this._boundingSphere=void 0,this._state=Wt.NEEDS_LOAD,this._loadError=void 0,this._loadResources=void 0,this._cesiumAnimationsDirty=!1,this._maxDirtyNumber=0,this._runtime={animations:void 0,rootNodes:void 0,nodes:void 0,nodesByName:void 0,skinnedNodes:void 0,meshesByName:void 0,materialsByName:void 0,materialsById:void 0},this._rendererResources={buffers:{},vertexArrays:{},programs:{},pickPrograms:{},textures:{},samplers:{},renderStates:{},uniformMaps:{}},this._renderCommands=[],this._pickCommands=[],this._pickIds=[]};s(Gt.prototype,{gltf:{get:function(){return this._gltf}},basePath:{get:function(){return this._basePath}},boundingSphere:{get:function(){return this._boundingSphere.radius=this.scale*_.getMaximumScale(this.modelMatrix)*this._initialRadius,this._boundingSphere}},ready:{get:function(){return this._ready}},asynchronous:{get:function(){return this._asynchronous}},allowPicking:{get:function(){return this._allowPicking}}}),Gt.fromGltf=function(e){var t=e.url,r="",i=t.lastIndexOf("/");-1!==i&&(r=t.substring(0,i+1));var n=new Gt(e);return p(t,e.headers).then(function(e){n._gltf=A(JSON.parse(e)),n._basePath=r;var t=new M(document.location.href),i=new M(n._basePath);n._baseUri=i.resolve(t)}).otherwise(W(n,"gltf",t)),n},Gt.prototype.getNode=function(e){var t=V(this,"nodesByName",e);return a(t)?t.publicNode:void 0},Gt.prototype.getMesh=function(e){return V(this,"meshesByName",e)},Gt.prototype.getMaterial=function(e){return V(this,"materialsByName",e)};var Ht=new r,qt=new r,jt=new C,Yt=new r,Xt=new r,Zt=new r,Qt={MODEL:function(e){return function(){return e.model}},VIEW:function(e){return function(){return e.view}},PROJECTION:function(e){return function(){return e.projection}},MODELVIEW:function(e){return function(){return e.modelView}},MODELVIEWPROJECTION:function(e){return function(){return e.modelViewProjection}},MODELINVERSE:function(e){return function(){return e.inverseModel}},VIEWINVERSE:function(e){return function(){return e.inverseView}},PROJECTIONINVERSE:function(e){return function(){return e.inverseProjection}},MODELVIEWINVERSE:function(e){return function(){return e.inverseModelView}},MODELVIEWPROJECTIONINVERSE:function(e){return function(){return e.inverseModelViewProjection}},MODELINVERSETRANSPOSE:function(e){return function(){return e.inverseTranposeModel}},MODELVIEWINVERSETRANSPOSE:function(e){return function(){return e.normal}},VIEWPORT:function(e){return function(){return e.viewportCartesian4}}},Jt={};"undefined"!=typeof WebGLRenderingContext&&(Jt[WebGLRenderingContext.FLOAT]=gt,Jt[WebGLRenderingContext.FLOAT_VEC2]=_t,Jt[WebGLRenderingContext.FLOAT_VEC3]=yt,Jt[WebGLRenderingContext.FLOAT_VEC4]=Ct,Jt[WebGLRenderingContext.INT]=gt,Jt[WebGLRenderingContext.INT_VEC2]=_t,Jt[WebGLRenderingContext.INT_VEC3]=yt,Jt[WebGLRenderingContext.INT_VEC4]=Ct,Jt[WebGLRenderingContext.BOOL]=gt,Jt[WebGLRenderingContext.BOOL_VEC2]=_t,Jt[WebGLRenderingContext.BOOL_VEC3]=yt,Jt[WebGLRenderingContext.BOOL_VEC4]=Ct,Jt[WebGLRenderingContext.FLOAT_MAT2]=wt,Jt[WebGLRenderingContext.FLOAT_MAT3]=St,Jt[WebGLRenderingContext.FLOAT_MAT4]=Et,Jt[WebGLRenderingContext.SAMPLER_2D]=bt);var Kt=[],$t=new _,er=new t,tr=new r,rr=new r,ir=new r;return Gt.prototype.update=function(e,t,r){if(t.mode===F.SCENE3D){this._state===Wt.NEEDS_LOAD&&a(this.gltf)&&(this._state=Wt.LOADING,this._boundingSphere=U(this.gltf),this._initialRadius=this._boundingSphere.radius,this._loadResources=new z,et(this));var i=!1;if(this._state===Wt.FAILED)throw this._loadError;if(this._state===Wt.LOADING){It(this,e);var n=this._loadResources;n.finishedPendingLoads()&&n.finishedResourceCreation()&&(this._state=Wt.LOADED,this._loadResources=void 0,i=!0)}var o=this.show&&0!==this.scale;if(o&&this._state===Wt.LOADED||i){var s=this.activeAnimations.update(t)||this._cesiumAnimationsDirty;this._cesiumAnimationsDirty=!1;var l=!_.equals(this._modelMatrix,this.modelMatrix)||this._scale!==this.scale||this._minimumPixelSize!==this.minimumPixelSize||0!==this.minimumPixelSize;if(l||i){_.clone(this.modelMatrix,this._modelMatrix),this._scale=this.scale,this._minimumPixelSize=this.minimumPixelSize;var u=zt(this,e,t),c=this._computedModelMatrix;_.multiplyByUniformScale(this.modelMatrix,u,c),_.multiplyTransformation(c,Ut,c)}(s||l||i)&&(Ot(this,l,i),(s||i)&&Lt(this)),Nt(this,e),Bt(this)}if(i){var h=this;return t.afterRender.push(function(){h._ready=!0,h.readyToRender.raiseEvent(h)}),void 0}if(o){var d,m,p,f=t.passes;if(f.render)for(p=this._renderCommands,m=p.length,d=0;m>d;++d)r.push(p[d]);if(f.pick)for(p=this._pickCommands,m=p.length,d=0;m>d;++d)r.push(p[d])}}},Gt.prototype.isDestroyed=function(){return!1},Gt.prototype.destroy=function(){var e=this._rendererResources;Vt(e.buffers),Vt(e.vertexArrays),kt(e.programs),kt(e.pickPrograms),Vt(e.textures),e=void 0,this._rendererResources=void 0;for(var t=this._pickIds,r=t.length,i=0;r>i;++i)t[i].destroy();return l(this)},Gt}),r("DataSources/ModelVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/Transforms","../Scene/Model","../Scene/ModelAnimationLoop","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,t,i,n){var o=i[t.id];if(r(o)){var a=o.modelPrimitive;a.readyToRender.removeEventListener(m,e),n.remove(a),a.isDestroyed()||a.destroy(),delete i[t.id]}}function m(e){e.activeAnimations.addAll({loop:c.REPEAT})}var p=1,f=0,v=new o,g=new t,_=new s,y=function(t,r){r.collectionChanged.addEventListener(y.prototype._onCollectionChanged,this),this._scene=t,this._primitives=t.primitives,this._entityCollection=r,this._modelHash={},this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return y.prototype.update=function(e){this._scene.context;for(var i=this._entitiesToVisualize.values,n=this._modelHash,c=this._primitives,d=this._scene,y=0,C=i.length;C>y;y++){var w,S=i[y],E=S._model,b=n[S.id],T=S.isAvailable(e)&&h.getValueOrDefault(E._show,e,!0);if(T&&(g=h.getValueOrUndefined(S._position,e,g),w=h.getValueOrUndefined(E._uri,e),T=r(g)&&r(w)),T){var x=r(b)?b.modelPrimitive:void 0;r(x)&&w===b.uri||(r(x)&&(c.remove(x),x.isDestroyed()||x.destroy(),delete n[S.id]),x=u.fromGltf({url:w}),x.readyToRender.addEventListener(m,this),x.id=S,c.add(x),b={modelPrimitive:x,uri:w,position:void 0,orientation:void 0},n[S.id]=b),x.show=!0,x.scale=h.getValueOrDefault(E._scale,e,p),x.minimumPixelSize=h.getValueOrDefault(E._minimumPixelSize,e,f),_=h.getValueOrUndefined(S._orientation,e,_),t.equals(g,b.position)&&s.equals(_,b.orientation)||(r(_)?a.fromRotationTranslation(o.fromQuaternion(_,v),g,x.modelMatrix):l.eastNorthUpToFixedFrame(g,d.globe.ellipsoid,x.modelMatrix),b.position=t.clone(g,b.position),b.orientation=s.clone(_,b.orientation))}else r(b)&&(b.modelPrimitive.show=!1)}return!0},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){this._entityCollection.collectionChanged.removeEventListener(y.prototype._onCollectionChanged,this);for(var e=this._entitiesToVisualize.values,t=this._modelHash,r=this._primitives,n=e.length-1;n>-1;n--)d(this,e[n],t,r);return i(this)},y.prototype._onCollectionChanged=function(e,t,i,n){var o,a,s=this._entitiesToVisualize,l=this._modelHash,u=this._primitives;for(o=t.length-1;o>-1;o--)a=t[o],r(a._model)&&r(a._position)&&s.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],r(a._model)&&r(a._position)?s.set(a.id,a):(d(this,a,l,u),s.remove(a.id));for(o=i.length-1;o>-1;o--)a=i[o],d(this,a,l,u),s.remove(a.id)},y}),r("Shaders/PolylineCommon",[],function(){"use strict";return"void clipLineSegmentToNearPlane(\nvec3 p0,\nvec3 p1,\nout vec4 positionWC,\nout bool clipped,\nout bool culledByNearPlane)\n{\nculledByNearPlane = false;\nclipped = false;\nvec3 p1ToP0 = p1 - p0;\nfloat magnitude = length(p1ToP0);\nvec3 direction = normalize(p1ToP0);\nfloat endPoint0Distance =  -(czm_currentFrustum.x + p0.z);\nfloat denominator = -direction.z;\nif (endPoint0Distance < 0.0 && abs(denominator) < czm_epsilon7)\n{\nculledByNearPlane = true;\n}\nelse if (endPoint0Distance < 0.0 && abs(denominator) > czm_epsilon7)\n{\nfloat t = (czm_currentFrustum.x + p0.z) / denominator;\nif (t < 0.0 || t > magnitude)\n{\nculledByNearPlane = true;\n}\nelse\n{\np0 = p0 + t * direction;\nclipped = true;\n}\n}\npositionWC = czm_eyeToWindowCoordinates(vec4(p0, 1.0));\n}\nvec4 getPolylineWindowCoordinates(vec4 position, vec4 previous, vec4 next, float expandDirection, float width, bool usePrevious) {\nvec4 endPointWC, p0, p1;\nbool culledByNearPlane, clipped;\nvec4 positionEC = czm_modelViewRelativeToEye * position;\nvec4 prevEC = czm_modelViewRelativeToEye * previous;\nvec4 nextEC = czm_modelViewRelativeToEye * next;\nclipLineSegmentToNearPlane(prevEC.xyz, positionEC.xyz, p0, clipped, culledByNearPlane);\nclipLineSegmentToNearPlane(nextEC.xyz, positionEC.xyz, p1, clipped, culledByNearPlane);\nclipLineSegmentToNearPlane(positionEC.xyz, usePrevious ? prevEC.xyz : nextEC.xyz, endPointWC, clipped, culledByNearPlane);\nif (culledByNearPlane)\n{\nreturn vec4(0.0, 0.0, 0.0, 1.0);\n}\nvec2 prevWC = normalize(p0.xy - endPointWC.xy);\nvec2 nextWC = normalize(p1.xy - endPointWC.xy);\nfloat expandWidth = width * 0.5;\nvec2 direction;\nif (czm_equalsEpsilon(normalize(previous.xyz - position.xyz), vec3(0.0), czm_epsilon1) || czm_equalsEpsilon(prevWC, -nextWC, czm_epsilon1))\n{\ndirection = vec2(-nextWC.y, nextWC.x);\n}\nelse if (czm_equalsEpsilon(normalize(next.xyz - position.xyz), vec3(0.0), czm_epsilon1) || clipped)\n{\ndirection = vec2(prevWC.y, -prevWC.x);\n}\nelse\n{\nvec2 normal = vec2(-nextWC.y, nextWC.x);\ndirection = normalize((nextWC + prevWC) * 0.5);\nif (dot(direction, normal) < 0.0)\n{\ndirection = -direction;\n}\nfloat sinAngle = abs(direction.x * nextWC.y - direction.y * nextWC.x);\nexpandWidth = clamp(expandWidth / sinAngle, 0.0, width * 2.0);\n}\nvec2 offset = direction * expandDirection * expandWidth * czm_resolutionScale;\nreturn vec4(endPointWC.xy + offset, -endPointWC.z, 1.0);\n}\n"}),r("Shaders/PolylineFS",[],function(){"use strict";return"varying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nczm_material material = czm_getMaterial(materialInput);\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n}\n"}),r("Shaders/PolylineVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 position2DHigh;\nattribute vec3 position2DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 prevPosition2DHigh;\nattribute vec3 prevPosition2DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec3 nextPosition2DHigh;\nattribute vec3 nextPosition2DLow;\nattribute vec4 texCoordExpandWidthAndShow;\nattribute vec4 pickColor;\nvarying vec2  v_st;\nvarying float v_width;\nvarying vec4  czm_pickColor;\nvoid main()\n{\nfloat texCoord = texCoordExpandWidthAndShow.x;\nfloat expandDir = texCoordExpandWidthAndShow.y;\nfloat width = abs(texCoordExpandWidthAndShow.z) + 0.5;\nbool usePrev = texCoordExpandWidthAndShow.z < 0.0;\nfloat show = texCoordExpandWidthAndShow.w;\nvec4 p, prev, next;\nif (czm_morphTime == 1.0)\n{\np = czm_translateRelativeToEye(position3DHigh.xyz, position3DLow.xyz);\nprev = czm_translateRelativeToEye(prevPosition3DHigh.xyz, prevPosition3DLow.xyz);\nnext = czm_translateRelativeToEye(nextPosition3DHigh.xyz, nextPosition3DLow.xyz);\n}\nelse if (czm_morphTime == 0.0)\n{\np = czm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy);\nprev = czm_translateRelativeToEye(prevPosition2DHigh.zxy, prevPosition2DLow.zxy);\nnext = czm_translateRelativeToEye(nextPosition2DHigh.zxy, nextPosition2DLow.zxy);\n}\nelse\n{\np = czm_columbusViewMorph(\nczm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy),\nczm_translateRelativeToEye(position3DHigh.xyz, position3DLow.xyz),\nczm_morphTime);\nprev = czm_columbusViewMorph(\nczm_translateRelativeToEye(prevPosition2DHigh.zxy, prevPosition2DLow.zxy),\nczm_translateRelativeToEye(prevPosition3DHigh.xyz, prevPosition3DLow.xyz),\nczm_morphTime);\nnext = czm_columbusViewMorph(\nczm_translateRelativeToEye(nextPosition2DHigh.zxy, nextPosition2DLow.zxy),\nczm_translateRelativeToEye(nextPosition3DHigh.xyz, nextPosition3DLow.xyz),\nczm_morphTime);\n}\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC * show;\nv_st = vec2(texCoord, clamp(expandDir, 0.0, 1.0));\nv_width = width;\nczm_pickColor = pickColor;\n}\n"}),r("Scene/Polyline",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","../Core/PolylinePipeline","./Material"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){++e._propertiesChanged[t];var r=e._polylineCollection;n(r)&&(r._updatePolyline(e,t),e._dirty=!0)}var h=function(o,a){o=i(o,i.EMPTY_OBJECT),this._show=i(o.show,!0),this._width=i(o.width,1),this._loop=i(o.loop,!1),this._material=o.material,n(this._material)||(this._material=u.fromType(u.ColorType,{color:new r(1,1,1,1)}));var c=o.positions;n(c)||(c=[]),this._positions=c,this._loop&&c.length>2&&!t.equals(c[0],c[c.length-1])&&c.push(t.clone(c[0])),this._length=c.length,this._id=o.id;var h;n(a)&&(h=s.clone(a.modelMatrix)),this._modelMatrix=h,this._segments=l.wrapLongitude(c,h),this._actualLength=void 0,this._propertiesChanged=new Uint32Array(g),this._polylineCollection=a,this._dirty=!1,this._pickId=void 0,this._boundingVolume=e.fromPoints(this._positions),this._boundingVolumeWC=e.transform(this._boundingVolume,this._modelMatrix),this._boundingVolume2D=new e},d=h.SHOW_INDEX=0,m=h.WIDTH_INDEX=1,p=h.POSITION_INDEX=2,f=h.MATERIAL_INDEX=3,v=h.POSITION_SIZE_INDEX=4,g=h.NUMBER_OF_PROPERTIES=5;return o(h.prototype,{show:{get:function(){return this._show},set:function(e){e!==this._show&&(this._show=e,c(this,d))}},positions:{get:function(){return this._positions},set:function(r){this._loop&&r.length>2&&!t.equals(r[0],r[r.length-1])&&r.push(t.clone(r[0])),(this._positions.length!==r.length||this._positions.length!==this._length)&&c(this,v),this._positions=r,this._length=r.length,this._boundingVolume=e.fromPoints(this._positions,this._boundingVolume),this._boundingVolumeWC=e.transform(this._boundingVolume,this._modelMatrix,this._boundingVolumeWC),c(this,p),this.update()}},material:{get:function(){return this._material},set:function(e){this._material!==e&&(this._material=e,c(this,f))}},width:{get:function(){return this._width},set:function(e){var t=this._width;e!==t&&(this._width=e,c(this,m))}},loop:{get:function(){return this._loop},set:function(e){if(e!==this._loop){var r=this._positions;e?r.length>2&&!t.equals(r[0],r[r.length-1])&&r.push(t.clone(r[0])):r.length>2&&t.equals(r[0],r[r.length-1])&&r.pop(),this._loop=e,c(this,v)}}},id:{get:function(){return this._id},set:function(e){this._id=e,n(this._pickId)&&(this._pickId.object.id=e)}}}),h.prototype.update=function(){var t=s.IDENTITY;n(this._polylineCollection)&&(t=this._polylineCollection.modelMatrix);var r=this._segments.positions.length,i=this._segments.lengths,o=this._propertiesChanged[p]>0||this._propertiesChanged[v]>0;if((!s.equals(t,this._modelMatrix)||o)&&(this._segments=l.wrapLongitude(this._positions,t),this._boundingVolumeWC=e.transform(this._boundingVolume,t,this._boundingVolumeWC)),this._modelMatrix=t,this._segments.positions.length!==r)c(this,v);else for(var a=i.length,u=0;a>u;++u)if(i[u]!==this._segments.lengths[u]){c(this,v);break}},h.prototype.getPickId=function(e){return n(this._pickId)||(this._pickId=e.createPickId({primitive:this,collection:this._polylineCollection,id:this._id})),this._pickId},h.prototype._clean=function(){this._dirty=!1;for(var e=this._propertiesChanged,t=0;g-1>t;++t)e[t]=0},h.prototype._destroy=function(){this._pickId=this._pickId&&this._pickId.destroy(),this._material=this._material&&this._material.destroy(),this._polylineCollection=void 0},h}),r("Scene/PolylineCollection",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EncodedCartesian3","../Core/IndexDatatype","../Core/Intersect","../Core/Math","../Core/Matrix4","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/PolylineCommon","../Shaders/PolylineFS","../Shaders/PolylineVS","./BlendingState","./Material","./Pass","./Polyline","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T){"use strict";function x(t,r,i,n,o,s,l){for(var u=n.length,c=0,h=!0,d=t._vertexArrays,m=t.debugShowBoundingVolume,p=d.length,f=0;p>f;++f)for(var v=d[f],_=v.buckets,y=_.length,C=0;y>C;++C){for(var w,S,b,x=_[C],P=x.offset,A=l?x.bucket.shaderProgram:x.bucket.pickShaderProgram,D=x.bucket.polylines,I=D.length,R=0,O=0;I>O;++O){var L=D[O],N=M(L._material);if(N!==w){if(a(w)&&R>0){var B=S.isTranslucent();c>=u?(b=new g({owner:t}),n.push(b)):b=n[c],++c,b.boundingVolume=e.clone(j,b.boundingVolume),b.modelMatrix=s,b.shaderProgram=A,b.vertexArray=v.va,b.renderState=B?t._translucentRS:t._opaqueRS,b.pass=B?E.TRANSLUCENT:E.OPAQUE,b.debugShowBoundingVolume=l?m:!1,b.uniformMap=S._uniforms,b.count=R,b.offset=P,P+=R,R=0,h=!0,o.push(b)}S=L._material,S.update(r),w=N}for(var F=L._locatorBuckets,z=F.length,V=0;z>V;++V){var k=F[V];k.locator===x&&(R+=k.count)}var U;i.mode===T.SCENE3D?U=L._boundingVolumeWC:i.mode===T.COLUMBUS_VIEW?U=L._boundingVolume2D:i.mode===T.SCENE2D?a(L._boundingVolume2D)&&(U=e.clone(L._boundingVolume2D,Y),U.center.x=0):a(L._boundingVolumeWC)&&a(L._boundingVolume2D)&&(U=e.union(L._boundingVolumeWC,L._boundingVolume2D,Y)),h?(h=!1,e.clone(U,j)):e.union(U,j,j)}a(w)&&R>0&&(c>=u?(b=new g({owner:t}),n.push(b)):b=n[c],++c,b.boundingVolume=e.clone(j,b.boundingVolume),b.modelMatrix=s,b.shaderProgram=A,b.vertexArray=v.va,b.renderState=S.isTranslucent()?t._translucentRS:t._opaqueRS,b.pass=S.isTranslucent()?E.TRANSLUCENT:E.OPAQUE,b.debugShowBoundingVolume=l?m:!1,b.uniformMap=S._uniforms,b.count=R,b.offset=P,h=!0,o.push(b)),w=void 0}n.length=c}function P(e){for(var t=e._buffersUsage,r=!1,i=e._propertiesChanged,n=0;G-2>n;++n){var o=t[n];i[n]?o.bufferUsage!==f.STREAM_DRAW?(r=!0,o.bufferUsage=f.STREAM_DRAW,o.frameCount=100):o.frameCount=100:o.bufferUsage!==f.STATIC_DRAW&&(0===o.frameCount?(r=!0,o.bufferUsage=f.STATIC_DRAW):o.frameCount--)}return r}function A(e,t,r){e._createVertexArray=!1,O(e),L(e),D(e);var i,o,s=[[]],l=s[0],u=[0],c=0,d=[[]],p=0,v=e._polylineBuckets;for(i in v)v.hasOwnProperty(i)&&(o=v[i],o.updateShader(t),p+=o.lengthOfPositions);if(p>0){var g,_=e._mode,y=new Float32Array(3*6*p),C=new Uint8Array(4*p),w=new Float32Array(4*p),S=0,E=0,b=0;for(i in v)if(v.hasOwnProperty(i)){o=v[i],o.write(y,C,w,S,E,b,t,r),_===T.MORPHING&&(a(g)||(g=new Float32Array(3*6*p)),o.writeForMorph(g,S));var x=o.lengthOfPositions;S+=3*6*x,E+=4*x,b+=4*x,c=o.updateIndices(s,u,d,c)}var P=e._buffersUsage[k].bufferUsage,A=e._buffersUsage[z].bufferUsage,M=e._buffersUsage[V].bufferUsage,I=A===f.STREAM_DRAW||M===f.STREAM_DRAW?f.STREAM_DRAW:f.STATIC_DRAW;e._positionBuffer=t.createVertexBuffer(y,P);var R;a(g)&&(R=t.createVertexBuffer(g,P)),e._pickColorBuffer=t.createVertexBuffer(C,f.STATIC_DRAW),e._texCoordExpandWidthAndShowBuffer=t.createVertexBuffer(w,I);for(var N=4*Uint8Array.BYTES_PER_ELEMENT,B=3*Float32Array.BYTES_PER_ELEMENT,F=4*Float32Array.BYTES_PER_ELEMENT,U=0,W=s.length,G=0;W>G;++G)if(l=s[G],l.length>0){var q=new Uint16Array(l),j=t.createIndexBuffer(q,f.STATIC_DRAW,h.UNSIGNED_SHORT);U+=u[G];var Y,Z,Q,J,K=6*(G*B*m.SIXTY_FOUR_KILOBYTES-U*B),$=B+K,et=B+$,tt=B+et,rt=B+tt,it=B+rt,nt=G*N*m.SIXTY_FOUR_KILOBYTES-U*N,ot=G*F*m.SIXTY_FOUR_KILOBYTES-U*F,at=[{index:H.position3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:K,strideInBytes:6*B},{index:H.position3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:$,strideInBytes:6*B},{index:H.position2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:K,strideInBytes:6*B},{index:H.position2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:$,strideInBytes:6*B},{index:H.prevPosition3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:et,strideInBytes:6*B},{index:H.prevPosition3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:tt,strideInBytes:6*B},{index:H.prevPosition2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:et,strideInBytes:6*B},{index:H.prevPosition2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:tt,strideInBytes:6*B},{index:H.nextPosition3DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:rt,strideInBytes:6*B},{index:H.nextPosition3DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:it,strideInBytes:6*B},{index:H.nextPosition2DHigh,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:rt,strideInBytes:6*B},{index:H.nextPosition2DLow,componentsPerAttribute:3,componentDatatype:n.FLOAT,offsetInBytes:it,strideInBytes:6*B},{index:H.texCoordExpandWidthAndShow,componentsPerAttribute:4,componentDatatype:n.FLOAT,vertexBuffer:e._texCoordExpandWidthAndShowBuffer,offsetInBytes:ot},{index:H.pickColor,componentsPerAttribute:4,componentDatatype:n.UNSIGNED_BYTE,vertexBuffer:e._pickColorBuffer,offsetInBytes:nt,normalize:!0}];
_===T.SCENE3D?(Y=e._positionBuffer,Z="vertexBuffer",Q=X,J="value"):_===T.SCENE2D||_===T.COLUMBUS_VIEW?(Y=X,Z="value",Q=e._positionBuffer,J="vertexBuffer"):(Y=R,Z="vertexBuffer",Q=e._positionBuffer,J="vertexBuffer"),at[0][Z]=Y,at[1][Z]=Y,at[2][J]=Q,at[3][J]=Q,at[4][Z]=Y,at[5][Z]=Y,at[6][J]=Q,at[7][J]=Q,at[8][Z]=Y,at[9][Z]=Y,at[10][J]=Q,at[11][J]=Q;var st=t.createVertexArray(at,j);e._vertexArrays.push({va:st,buckets:d[G]})}}}function M(e){var t=S._uniformList[e.type],r=t.length;Z.length=2*r;for(var i=0,n=0;r>n;++n){var o=t[n];Z[i]=o,Z[i+1]=e._uniforms[o](),i+=2}return e.type+":"+JSON.stringify(Z)}function D(e){for(var t=e._mode,r=e._modelMatrix,i=e._polylineBuckets={},n=e._polylines,o=n.length,s=0;o>s;++s){var l=n[s];if(l.positions.length>1){l.update();var u=l.material,c=i[u.type];a(c)||(c=i[u.type]=new Q(u,t,r)),c.addPolyline(l)}}}function I(e,t){var r=t.mode;e._mode===r&&p.equals(e._modelMatrix,e.modelMatrix)||(e._mode=r,e._modelMatrix=p.clone(e.modelMatrix),e._createVertexArray=!0)}function R(e){if(e._polylinesRemoved){e._polylinesRemoved=!1;for(var t=[],r=e._polylines.length,i=0,n=0;r>i;++i){var o=e._polylines[i];a(o)&&(o._index=n++,t.push(o))}e._polylines=t}}function O(e){for(var t=e._polylines,r=t.length,i=0;r>i;++i)if(a(t[i])){var n=t[i]._bucket;a(n)&&(n.shaderProgram=n.shaderProgram&&n.shaderProgram.destroy())}}function L(e){for(var t=e._vertexArrays.length,r=0;t>r;++r)e._vertexArrays[r].va.destroy();e._vertexArrays.length=0}function N(e){for(var t=e._polylines,r=t.length,i=0;r>i;++i)a(t[i])&&t[i]._destroy()}function B(e,t,r){this.count=e,this.offset=t,this.bucket=r}function F(e){return t.dot(t.UNIT_X,e._boundingVolume.center)<0||e._boundingVolume.intersect(r.UNIT_Y)===d.INTERSECTING}var z=b.SHOW_INDEX,V=b.WIDTH_INDEX,k=b.POSITION_INDEX,U=b.MATERIAL_INDEX,W=b.POSITION_SIZE_INDEX,G=b.NUMBER_OF_PROPERTIES,H={texCoordExpandWidthAndShow:0,position3DHigh:1,position3DLow:2,position2DHigh:3,position2DLow:4,prevPosition3DHigh:5,prevPosition3DLow:6,prevPosition2DHigh:7,prevPosition2DLow:8,nextPosition3DHigh:9,nextPosition3DLow:10,nextPosition2DHigh:11,nextPosition2DLow:12,pickColor:13},q=function(e){e=o(e,o.EMPTY_OBJECT),this.modelMatrix=p.clone(o(e.modelMatrix,p.IDENTITY)),this._modelMatrix=p.clone(p.IDENTITY),this.debugShowBoundingVolume=o(e.debugShowBoundingVolume,!1),this._opaqueRS=void 0,this._translucentRS=void 0,this._colorCommands=[],this._pickCommands=[],this._polylinesUpdated=!1,this._polylinesRemoved=!1,this._createVertexArray=!1,this._propertiesChanged=new Uint32Array(G),this._polylines=[],this._polylineBuckets={},this._buffersUsage=[{bufferUsage:f.STATIC_DRAW,frameCount:0},{bufferUsage:f.STATIC_DRAW,frameCount:0},{bufferUsage:f.STATIC_DRAW,frameCount:0}],this._mode=void 0,this._polylinesToUpdate=[],this._vertexArrays=[],this._positionBuffer=void 0,this._pickColorBuffer=void 0,this._texCoordExpandWidthAndShowBuffer=void 0};s(q.prototype,{length:{get:function(){return R(this),this._polylines.length}}}),q.prototype.add=function(e){var t=new b(e,this);return t._index=this._polylines.length,this._polylines.push(t),this._createVertexArray=!0,t},q.prototype.remove=function(e){if(this.contains(e)){if(this._polylines[e._index]=void 0,this._polylinesRemoved=!0,this._createVertexArray=!0,a(e._bucket)){var t=e._bucket;t.shaderProgram=t.shaderProgram&&t.shaderProgram.destroy(),t.pickShaderProgram=t.pickShaderProgram&&t.pickShaderProgram.destroy()}return e._destroy(),!0}return!1},q.prototype.removeAll=function(){O(this),N(this),this._polylineBuckets={},this._polylinesRemoved=!1,this._polylines.length=0,this._polylinesToUpdate.length=0,this._createVertexArray=!0},q.prototype.contains=function(e){return a(e)&&e._polylineCollection===this},q.prototype.get=function(e){return R(this),this._polylines[e]},q.prototype.update=function(e,t,r){if(R(this),0!==this._polylines.length){I(this,t);var i,n=t.mapProjection,o=this._propertiesChanged;if(this._createVertexArray||P(this))A(this,e,n);else if(this._polylinesUpdated){var s=this._polylinesToUpdate;if(this._mode!==T.SCENE3D)for(var l=s.length,u=0;l>u;++u)i=s[u],i.update();if(o[W]||o[U])A(this,e,n);else for(var c=s.length,h=this._polylineBuckets,d=0;c>d;++d){i=s[d],o=i._propertiesChanged;var m=i._bucket,f=0;for(var v in h)if(h.hasOwnProperty(v)){if(h[v]===m){(o[k]||o[z]||o[V])&&m.writeUpdate(f,i,this._positionBuffer,this._texCoordExpandWidthAndShowBuffer,n);break}f+=h[v].lengthOfPositions}i._clean()}s.length=0,this._polylinesUpdated=!1}o=this._propertiesChanged;for(var g=0;G>g;++g)o[g]=0;var _=p.IDENTITY;t.mode===T.SCENE3D&&(_=this.modelMatrix);var y=t.passes,C=0!==t.morphTime;if(a(this._opaqueRS)&&this._opaqueRS.depthTest.enabled===C||(this._opaqueRS=e.createRenderState({depthMask:C,depthTest:{enabled:C}})),a(this._translucentRS)&&this._translucentRS.depthTest.enabled===C||(this._translucentRS=e.createRenderState({blending:w.ALPHA_BLEND,depthMask:!C,depthTest:{enabled:C}})),y.render){var S=this._colorCommands;x(this,e,t,S,r,_,!0)}if(y.pick){var E=this._pickCommands;x(this,e,t,E,r,_,!1)}}};var j=new e,Y=new e;q.prototype.isDestroyed=function(){return!1},q.prototype.destroy=function(){return L(this),O(this),N(this),l(this)};var X=[0,0,0],Z=[];q.prototype._updatePolyline=function(e,t){this._polylinesUpdated=!0,this._polylinesToUpdate.push(e),++this._propertiesChanged[t]};var Q=function(e,t,r){this.polylines=[],this.lengthOfPositions=0,this.material=e,this.shaderProgram=void 0,this.pickShaderProgram=void 0,this.mode=t,this.modelMatrix=r};Q.prototype.addPolyline=function(e){var t=this.polylines;t.push(e),e._actualLength=this.getPolylinePositionsLength(e),this.lengthOfPositions+=e._actualLength,e._bucket=this},Q.prototype.updateShader=function(e){if(!a(this.shaderProgram)){var t=v({sources:[_,C]}),r=v({sources:[this.material.shaderSource,y]}),i=v({sources:[r],pickColorQualifier:"varying"});this.shaderProgram=e.createShaderProgram(t,r,H),this.pickShaderProgram=e.createShaderProgram(t,i,H)}},Q.prototype.getPolylinePositionsLength=function(e){var t;if(this.mode===T.SCENE3D||!F(e))return t=e.positions.length,4*t-4;var r=0,i=e._segments.lengths;t=i.length;for(var n=0;t>n;++n)r+=4*i[n]-4;return r};var J=new t,K=new t,$=new t,et=new t;Q.prototype.write=function(e,r,n,o,a,s,l,u){for(var h=this.mode,d=this.polylines,m=d.length,p=0;m>p;++p)for(var f,v=d[p],g=v.width,_=v.show&&g>0,y=this.getSegments(v,u),C=y.positions,w=y.lengths,S=C.length,E=v.getPickId(l).color,b=0,x=0,P=0;S>P;++P){0===P?v._loop?f=C[S-2]:(f=et,t.subtract(C[0],C[1],f),t.add(C[0],f,f)):f=C[P-1],K.x=f.x,K.y=f.y,K.z=h!==T.SCENE2D?f.z:0,f=C[P],J.x=f.x,J.y=f.y,J.z=h!==T.SCENE2D?f.z:0,P===S-1?v._loop?f=C[1]:(f=et,t.subtract(C[S-1],C[S-2],f),t.add(C[S-1],f,f)):f=C[P+1],$.x=f.x,$.y=f.y,$.z=h!==T.SCENE2D?f.z:0;var A=w[b];P===x+A&&(x+=A,++b);for(var M=0===P-x,D=P===x+w[b]-1,I=M?2:0,R=D?2:4,O=I;R>O;++O){c.writeElements(J,e,o),c.writeElements(K,e,o+6),c.writeElements($,e,o+12),r[a]=i.floatToByte(E.red),r[a+1]=i.floatToByte(E.green),r[a+2]=i.floatToByte(E.blue),r[a+3]=i.floatToByte(E.alpha);var L=0>O-2?-1:1;n[s]=P/(S-1),n[s+1]=2*(O%2)-1,n[s+2]=L*g,n[s+3]=_,o+=18,a+=4,s+=4}}};var tt=new t,rt=new t,it=new t,nt=new t;Q.prototype.writeForMorph=function(e,r){for(var i=this.modelMatrix,n=this.polylines,o=n.length,a=0;o>a;++a)for(var s=n[a],l=s._segments.positions,u=s._segments.lengths,h=l.length,d=0,m=0,f=0;h>f;++f){var v;0===f?s._loop?v=l[h-2]:(v=nt,t.subtract(l[0],l[1],v),t.add(l[0],v,v)):v=l[f-1],v=p.multiplyByPoint(i,v,rt);var g,_=p.multiplyByPoint(i,l[f],tt);f===h-1?s._loop?g=l[1]:(g=nt,t.subtract(l[h-1],l[h-2],g),t.add(l[h-1],g,g)):g=l[f+1],g=p.multiplyByPoint(i,g,it);var y=u[d];f===m+y&&(m+=y,++d);for(var C=0===f-m,w=f===m+u[d]-1,S=C?2:0,E=w?2:4,b=S;E>b;++b)c.writeElements(_,e,r),c.writeElements(v,e,r+6),c.writeElements(g,e,r+12),r+=18}};var ot=new Array(1);Q.prototype.updateIndices=function(e,t,r,i){var n=r.length-1,o=new B(0,i,this);r[n].push(o);var a=0,s=e[e.length-1],l=0;s.length>0&&(l=s[s.length-1]+1);for(var u=this.polylines,c=u.length,h=0;c>h;++h){var d=u[h];d._locatorBuckets=[];var p;if(this.mode===T.SCENE3D){p=ot;var f=d.positions.length;if(!(f>0))continue;p[0]=f}else p=d._segments.lengths;var v=p.length;if(v>0){for(var g=0,_=0;v>_;++_)for(var y=p[_]-1,C=0;y>C;++C)l+4>=m.SIXTY_FOUR_KILOBYTES-1&&(d._locatorBuckets.push({locator:o,count:g}),g=0,t.push(4),s=[],e.push(s),l=0,o.count=a,a=0,i=0,o=new B(0,0,this),r[++n]=[o]),s.push(l,l+2,l+1),s.push(l+1,l+2,l+3),g+=6,a+=6,i+=6,l+=4;d._locatorBuckets.push({locator:o,count:g}),l+4>=m.SIXTY_FOUR_KILOBYTES-1&&(t.push(0),s=[],e.push(s),l=0,o.count=a,i=0,a=0,o=new B(0,0,this),r[++n]=[o])}d._clean()}return o.count=a,i},Q.prototype.getPolylineStartIndex=function(e){for(var t=this.polylines,r=0,i=t.length,n=0;i>n;++n){var o=t[n];if(o===e)break;r+=o._actualLength}return r};var at={positions:void 0,lengths:void 0},st=new Array(1),lt=new t;Q.prototype.getSegments=function(r,i){var n=r.positions;if(this.mode===T.SCENE3D)return st[0]=n.length,at.positions=n,at.lengths=st,at;F(r)&&(n=r._segments.positions);for(var o,a=i.ellipsoid,s=[],l=this.modelMatrix,u=n.length,c=lt,h=0;u>h;++h)o=n[h],c=p.multiplyByPoint(l,o,c),s.push(i.project(a.cartesianToCartographic(c)));if(s.length>0){r._boundingVolume2D=e.fromPoints(s,r._boundingVolume2D);var d=r._boundingVolume2D.center;r._boundingVolume2D.center=new t(d.z,d.x,d.y)}return at.positions=s,at.lengths=r._segments.lengths,at};var ut,ct;return Q.prototype.writeUpdate=function(e,r,i,n,o){var s=this.mode,l=r._actualLength;if(l){e+=this.getPolylineStartIndex(r);var u=ut,h=ct,d=3*6*l;!a(u)||u.length<d?(u=ut=new Float32Array(d),h=ct=new Float32Array(4*l)):u.length>d&&(u=new Float32Array(u.buffer,0,d),h=new Float32Array(h.buffer,0,4*l));var m,p=0,f=0,v=this.getSegments(r,o),g=v.positions,_=v.lengths,y=0,C=0,w=r.width,S=r.show&&w>0;l=g.length;for(var E=0;l>E;++E){0===E?r._loop?m=g[l-2]:(m=et,t.subtract(g[0],g[1],m),t.add(g[0],m,m)):m=g[E-1],K.x=m.x,K.y=m.y,K.z=s!==T.SCENE2D?m.z:0,m=g[E],J.x=m.x,J.y=m.y,J.z=s!==T.SCENE2D?m.z:0,E===l-1?r._loop?m=g[1]:(m=et,t.subtract(g[l-1],g[l-2],m),t.add(g[l-1],m,m)):m=g[E+1],$.x=m.x,$.y=m.y,$.z=s!==T.SCENE2D?m.z:0;var b=_[y];E===C+b&&(C+=b,++y);for(var x=0===E-C,P=E===C+_[y]-1,A=x?2:0,M=P?2:4,D=A;M>D;++D){c.writeElements(J,u,p),c.writeElements(K,u,p+6),c.writeElements($,u,p+12);var I=0>D-2?-1:1;h[f]=E/(l-1),h[f+1]=2*(D%2)-1,h[f+2]=I*w,h[f+3]=S,p+=18,f+=4}}i.copyFromArrayView(u,18*Float32Array.BYTES_PER_ELEMENT*e),n.copyFromArrayView(h,4*Float32Array.BYTES_PER_ELEMENT*e)}},q}),r("DataSources/PathVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/JulianDate","../Core/Matrix3","../Core/Matrix4","../Core/ReferenceFrame","../Core/TimeInterval","../Core/Transforms","../Scene/PolylineCollection","../Scene/SceneMode","./CompositePositionProperty","./ConstantPositionProperty","./MaterialProperty","./Property","./ReferenceProperty","./SampledPositionProperty","./TimeIntervalCollectionPositionProperty"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e,t,i,n,a,s,l,u){var c,h=e._property._times,d=l;c=e.getValueInReferenceFrame(t,a,u[d]),r(c)&&(u[d++]=c);for(var m,p,f,v=!r(n)||o.lessThanOrEquals(n,t)||o.greaterThanOrEquals(n,i),g=0,_=h.length,y=h[g],C=i,w=!1;_>g;){if(!v&&o.greaterThanOrEquals(y,n)&&(c=e.getValueInReferenceFrame(n,a,u[d]),r(c)&&(u[d++]=c),v=!0),o.greaterThan(y,t)&&o.lessThan(y,C)&&!y.equals(n)&&(c=e.getValueInReferenceFrame(y,a,u[d]),r(c)&&(u[d++]=c)),_-1>g){if(s>0&&!w){var S=h[g+1],E=o.secondsDifference(S,y);w=E>s,w&&(m=Math.ceil(E/s),p=0,f=E/Math.max(m,2),m=Math.max(m-1,1))}if(w&&m>p){y=o.addSeconds(y,f,new o),p++;continue}}w=!1,g++,y=h[g]}return c=e.getValueInReferenceFrame(i,a,u[d]),r(c)&&(u[d++]=c),d}function w(e,t,i,n,a,s,l,u){for(var c,h=0,d=l,m=t,p=Math.max(s,60),f=!r(n)||o.lessThanOrEquals(n,t)||o.greaterThanOrEquals(n,i);o.lessThan(m,i);)!f&&o.greaterThanOrEquals(m,n)&&(f=!0,c=e.getValueInReferenceFrame(n,a,u[d]),r(c)&&(u[d]=c,d++)),c=e.getValueInReferenceFrame(m,a,u[d]),r(c)&&(u[d]=c,d++),h++,m=o.addSeconds(t,p*h,new o);return c=e.getValueInReferenceFrame(i,a,u[d]),r(c)&&(u[d]=c,d++),d}function S(e,t,i,n,a,s,l,c){D.start=t,D.stop=i;for(var h=l,d=e.intervals,m=0;m<d.length;m++){var p=d.get(m);if(!u.intersect(p,D,A).isEmpty){var f=p.start;p.isStartIncluded||(f=p.isStopIncluded?p.stop:o.addSeconds(p.start,o.secondsDifference(p.stop,p.start)/2,new o));var v=e.getValueInReferenceFrame(f,a,c[h]);r(v)&&(c[h]=v,h++)}}return h}function E(e,t,i,n,o,a,s,l){var u=e.getValueInReferenceFrame(t,o,l[s]);return r(u)&&(l[s++]=u),s}function b(e,t,r,i,n,a,s,l){M.start=t,M.stop=r;for(var c=s,h=e.intervals,d=0;d<h.length;d++){var f=h.get(d);if(!u.intersect(f,M,A).isEmpty){var v=f.start,T=f.stop,x=t;o.greaterThan(v,x)&&(x=v);var P=r;o.lessThan(T,P)&&(P=T);var D=f.data;D instanceof g&&(D=D.resolvedProperty),c=D instanceof _?C(D,x,P,i,n,a,c,l):D instanceof m?b(D,x,P,i,n,a,c,l):D instanceof y?S(D,x,P,i,n,a,c,l):D instanceof p?E(D,x,P,i,n,a,c,l):w(D,x,P,i,n,a,c,l)}}return c}function T(e,t,i,n,o,a,s){r(s)||(s=[]),e instanceof g&&(e=e.resolvedProperty);var l=0;return l=e instanceof _?C(e,t,i,n,o,a,0,s):e instanceof m?b(e,t,i,n,o,a,0,s):e instanceof y?S(e,t,i,n,o,a,0,s):e instanceof p?E(e,t,i,n,o,a,0,s):w(e,t,i,n,o,a,0,s),s.length=l,s}var x=60,P=1,A=new u,M=new u,D=new u,I=new a,R=function(e,t){this._unusedIndexes=[],this._polylineCollection=new h,this._scene=e,this._referenceFrame=t,e.primitives.add(this._polylineCollection)};R.prototype.update=function(e){if(this._referenceFrame===l.INERTIAL){var i=c.computeIcrfToFixedMatrix(e,I);r(i)||(i=c.computeTemeToPseudoFixedMatrix(e,I)),s.fromRotationTranslation(i,t.ZERO,this._polylineCollection.modelMatrix)}},R.prototype.updateObject=function(e,t){var i=t._path;if(r(i)){var n=t._position;if(r(n)){var a,s,l,u=i._show,c=t._pathVisualizerIndex,h=!r(u)||u.getValue(e);if(h){var d=v.getValueOrUndefined(i._leadTime,e),m=v.getValueOrUndefined(i._trailTime,e),p=t._availability,g=r(p),_=r(d),y=r(m);if(h=g||_&&y){if(y&&(s=o.addSeconds(e,-m,new o)),_&&(l=o.addSeconds(e,d,new o)),g){var C=p.start,w=p.stop;(!y||o.greaterThan(C,s))&&(s=C),(!_||o.lessThan(w,l))&&(l=w)}h=o.lessThan(s,l)}}if(!h)return r(c)&&(a=this._polylineCollection.get(c),a.show=!1,t._pathVisualizerIndex=void 0,this._unusedIndexes.push(c)),void 0;if(r(c))a=this._polylineCollection.get(c);else{var S=this._unusedIndexes,E=S.length;E>0?(c=S.pop(),a=this._polylineCollection.get(c)):(c=this._polylineCollection.length,a=this._polylineCollection.add()),t._pathVisualizerIndex=c,a.id=t}var b=v.getValueOrDefault(i._resolution,e,x);a.show=!0,a.positions=T(n,s,l,e,this._referenceFrame,b,a.positions),a.material=f.getValue(e,i._material,a.material),a.width=v.getValueOrDefault(i._width,e,P)}}},R.prototype.removeObject=function(e){var t=e._pathVisualizerIndex;if(r(t)){var i=this._polylineCollection.get(t);i.show=!1,this._unusedIndexes.push(t),e._pathVisualizerIndex=void 0}},R.prototype.destroy=function(){return this._scene.primitives.remove(this._polylineCollection),i(this)};var O=function(t,r){r.collectionChanged.addEventListener(O.prototype._onCollectionChanged,this),this._scene=t,this._updaters={},this._entityCollection=r,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return O.prototype.update=function(e){var t=this._updaters;for(var i in t)t.hasOwnProperty(i)&&t[i].update(e);for(var n=this._entitiesToVisualize.values,o=0,a=n.length;a>o;o++){var s=n[o],u=s._position,c=s._pathUpdater,h=l.FIXED;this._scene.mode===d.SCENE3D&&(h=u.referenceFrame);var m=this._updaters[h];c===m&&r(m)?m.updateObject(e,s):(r(c)&&c.removeObject(s),r(m)||(m=new R(this._scene,h),m.update(e),this._updaters[h]=m),s._pathUpdater=m,r(m)&&m.updateObject(e,s))}return!0},O.prototype.isDestroyed=function(){return!1},O.prototype.destroy=function(){var e=this._entityCollection;e.collectionChanged.removeEventListener(O.prototype._onCollectionChanged,this);var t=this._updaters;for(var r in t)t.hasOwnProperty(r)&&t[r].destroy();for(var n=e.entities,o=n.length,a=0;o>a;a++)n[a]._pathUpdater=void 0,n[a]._pathVisualizerIndex=void 0;return i(this)},O.prototype._onCollectionChanged=function(e,t,i,n){var o,a,s,l=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],r(a._path)&&r(a._position)&&l.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],r(a._path)&&r(a._position)?l.set(a.id,a):(s=a._pathUpdater,r(s)&&s.removeObject(a),l.remove(a.id));for(o=i.length-1;o>-1;o--)a=i[o],s=a._pathUpdater,r(s)&&s.removeObject(a),l.remove(a.id)},O._subSample=T,O}),r("DataSources/PointVisualizer",["../Core/AssociativeArray","../Core/Cartesian3","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/NearFarScalar","../Scene/BillboardCollection","./Property"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,r){var n=e._pointVisualizerIndex;if(i(n)){var o=t.get(n);o.show=!1,e._pointVisualizerIndex=void 0,r.push(n)}}function c(e,t,r,i,n){return function(){var o=document.createElement("canvas"),a=n+2*i;o.height=o.width=a;var s=o.getContext("2d");return s.clearRect(0,0,a,a),0!==i&&(s.beginPath(),s.arc(a/2,a/2,a/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle=r,s.fill(),1>e&&(s.save(),s.globalCompositeOperation="destination-out",s.beginPath(),s.arc(a/2,a/2,n/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle="black",s.fill(),s.restore())),s.beginPath(),s.arc(a/2,a/2,n/2,0,2*Math.PI,!0),s.closePath(),s.fillStyle=t,s.fill(),o}}var h=r.WHITE,d=r.BLACK,m=0,p=1,f=new r,v=new t,g=new r,_=new a,y=function(t,r){var i=new s;t.primitives.add(i),r.collectionChanged.addEventListener(y.prototype._onCollectionChanged,this),this._scene=t,this._unusedIndexes=[],this._entityCollection=r,this._billboardCollection=i,this._entitiesToVisualize=new e,this._onCollectionChanged(r,r.entities,[],[])};return y.prototype.update=function(e){for(var t=this._entitiesToVisualize.values,n=this._billboardCollection,o=this._unusedIndexes,a=0,s=t.length;s>a;a++){var y,C=t[a],w=C._point,S=C._pointVisualizerIndex,E=C.isAvailable(e)&&l.getValueOrDefault(w._show,e,!0);if(E&&(v=l.getValueOrUndefined(C._position,e,v),E=i(v)),E){var b=!1;if(i(S))y=n.get(S);else{var T=o.length;T>0?(S=o.pop(),y=n.get(S)):(S=n.length,y=n.add()),C._pointVisualizerIndex=S,y.id=C,y._visualizerColor=r.clone(r.WHITE,y._visualizerColor),y._visualizerOutlineColor=r.clone(r.BLACK,y._visualizerOutlineColor),y._visualizerOutlineWidth=0,y._visualizerPixelSize=1,b=!0}y.show=!0,y.position=v,y.scaleByDistance=l.getValueOrUndefined(w._scaleByDistance,e,_);var x=l.getValueOrDefault(w._color,e,h,f),P=l.getValueOrDefault(w._outlineColor,e,d,g),A=l.getValueOrDefault(w._outlineWidth,e,m),M=l.getValueOrDefault(w._pixelSize,e,p);if(b=b||A!==y._visualizerOutlineWidth||M!==y._visualizerPixelSize||!r.equals(x,y._visualizerColor)||!r.equals(P,y._visualizerOutlineColor)){y._visualizerColor=r.clone(x,y._visualizerColor),y._visualizerOutlineColor=r.clone(P,y._visualizerOutlineColor),y._visualizerPixelSize=M,y._visualizerOutlineWidth=A;var D=x.alpha,I=x.toCssColorString(),R=P.toCssColorString(),O=A,L=JSON.stringify([I,M,R,O]);y.setImage(L,c(D,I,R,O,M))}}else u(C,n,o)}return!0},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){for(var e=this._entitiesToVisualize.values,t=e.length-1;t>-1;t--)e[t]._pointVisualizerIndex=void 0;return this._entityCollection.collectionChanged.removeEventListener(y.prototype._onCollectionChanged,this),this._scene.primitives.remove(this._billboardCollection),n(this)},y.prototype._onCollectionChanged=function(e,t,r,n){var o,a,s=this._billboardCollection,l=this._unusedIndexes,c=this._entitiesToVisualize;for(o=t.length-1;o>-1;o--)a=t[o],i(a._point)&&i(a._position)&&c.set(a.id,a);for(o=n.length-1;o>-1;o--)a=n[o],i(a._point)&&i(a._position)?c.set(a.id,a):(u(a,s,l),c.remove(a.id));for(o=r.length-1;o>-1;o--)a=r[o],u(a,s,l),c.remove(a.id)},y}),r("DataSources/PolygonGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/PolygonGeometry","../Core/PolygonOutlineGeometry","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.polygonHierarchy={positions:void 0},this.perPositionHeight=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"polygon",e.polygon,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new d(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new c(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new h(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"polygon"===t){var n=this._entity.polygon;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.positions,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.height,_=n.extrudedHeight,T=n.granularity,x=n.stRotation,P=n.perPositionHeight;if(this._isClosed=i(_),this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)){var A=this._options;A.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,A.polygonHierarchy.positions=c.getValue(u.MINIMUM_VALUE,A.polygonHierarchy.positions),A.height=i(g)?g.getValue(u.MINIMUM_VALUE):void 0,A.extrudedHeight=i(_)?_.getValue(u.MINIMUM_VALUE):void 0,A.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,A.stRotation=i(x)?x.getValue(u.MINIMUM_VALUE):void 0,A.perPositionHeight=i(P)?P.getValue(u.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.polygon,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,d=a.positions,v=a.perPositionHeight,g=a.height,y=a.extrudedHeight,C=a.granularity,w=a.stRotation;if(u.polygonHierarchy.positions=d.getValue(r,u.polygonHierarchy.positions),u.height=i(g)?g.getValue(r,u):void 0,u.extrudedHeight=i(y)?y.getValue(r,u):void 0,u.granularity=i(C)?C.getValue(r):void 0,u.stRotation=i(w)?w.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){u.perPositionHeight=i(v)?v.getValue(r):void 0,this._material=_.getValue(r,n.fillMaterialProperty,this._material);var S=this._material,E=new m({material:S,translucent:S.isTranslucent(),closed:i(u.extrudedHeight)});u.vertexFormat=E.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new c(u)}),appearance:E,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var b=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new h(u),attributes:{color:t.fromColor(b)}}),appearance:new p({flat:!0,translucent:1!==b.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("Shaders/Appearances/PolylineColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec4 color;\nvarying vec4 v_color;\nvoid main()\n{\nfloat expandDir = expandAndWidth.x;\nfloat width = abs(expandAndWidth.y) + 0.5;\nbool usePrev = expandAndWidth.y < 0.0;\nvec4 p = czm_computePosition();\nvec4 prev = czm_computePrevPosition();\nvec4 next = czm_computeNextPosition();\nv_color = color;\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC;\n}\n"}),r("Scene/PolylineColorAppearance",["../Core/defaultValue","../Core/defineProperties","../Core/VertexFormat","../Renderer/createShaderSource","../Shaders/Appearances/PerInstanceFlatColorAppearanceFS","../Shaders/Appearances/PolylineColorAppearanceVS","../Shaders/PolylineCommon","./Appearance"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){t=e(t,e.EMPTY_OBJECT);var r=e(t.translucent,!0),u=!1,c=i({sources:[a,o]}),h=n,d=l.VERTEX_FORMAT;this.material=void 0,this.translucent=r,this._vertexShaderSource=e(t.vertexShaderSource,c),this._fragmentShaderSource=e(t.fragmentShaderSource,h),this._renderState=e(t.renderState,s.getDefaultRenderState(r,u)),this._closed=u,this._vertexFormat=d};return t(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),l.VERTEX_FORMAT=r.POSITION_ONLY,l.prototype.getFragmentShaderSource=s.prototype.getFragmentShaderSource,l.prototype.isTranslucent=s.prototype.isTranslucent,l.prototype.getRenderState=s.prototype.getRenderState,l}),r("Shaders/Appearances/PolylineMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec2 st;\nvarying float v_width;\nvarying vec2 v_st;\nvoid main()\n{\nfloat expandDir = expandAndWidth.x;\nfloat width = abs(expandAndWidth.y) + 0.5;\nbool usePrev = expandAndWidth.y < 0.0;\nvec4 p = czm_computePosition();\nvec4 prev = czm_computePrevPosition();\nvec4 next = czm_computeNextPosition();\nv_width = width;\nv_st = st;\nvec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev);\ngl_Position = czm_viewportOrthographic * positionWC;\n}\n"}),r("Scene/PolylineMaterialAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/VertexFormat","../Renderer/createShaderSource","../Shaders/Appearances/PolylineMaterialAppearanceVS","../Shaders/PolylineCommon","../Shaders/PolylineFS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),h=!1,d=n({sources:[a,o]}),m=s,p=c.VERTEX_FORMAT;this.material=t(r.material)?r.material:u.fromType(u.ColorType),this.translucent=i,this._vertexShaderSource=e(r.vertexShaderSource,d),this._fragmentShaderSource=e(r.fragmentShaderSource,m),this._renderState=e(r.renderState,l.getDefaultRenderState(i,h)),this._closed=h,this._vertexFormat=p};return r(c.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),c.VERTEX_FORMAT=i.POSITION_AND_ST,c.prototype.getFragmentShaderSource=l.prototype.getFragmentShaderSource,c.prototype.isTranslucent=l.prototype.isTranslucent,c.prototype.getRenderState=l.prototype.getRenderState,c}),r("DataSources/PolylineGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/PolylineGeometry","../Core/PolylinePipeline","../Core/ShowGeometryInstanceAttribute","../Scene/PolylineCollection","../Scene/PolylineColorAppearance","../Scene/PolylineMaterialAppearance","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C){"use strict";var w={},S=g.fromColor(e.WHITE),E=new _(!0),b=function(e){this.id=e,this.vertexFormat=void 0,this.positions=void 0,this.width=void 0,this.followSurface=void 0,this.granularity=void 0},T=function(e,t){this._entity=e,this._scene=t,this._entitySubscription=e.definitionChanged.addEventListener(T.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._geometryChanged=new l,this._showProperty=void 0,this._materialProperty=void 0,this._options=new b(e),this._onEntityPropertyChanged(e,"polyline",e.polyline,void 0)
};n(T,{perInstanceColorAppearanceType:{value:f},materialAppearanceType:{value:v}}),n(T.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&C.isConstant(this._showProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{value:!1},hasConstantOutline:{value:!0},outlineColorProperty:{value:void 0},isDynamic:{get:function(){return this._dynamic}},isClosed:{value:!1},geometryChanged:{get:function(){return this._geometryChanged}}}),T.prototype.isOutlineVisible=function(){return!1},T.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)},T.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),l=new m(s&&this._showProperty.getValue(r));if(this._materialProperty instanceof g){var c=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(c=this._materialProperty.color.getValue(r)),n=t.fromColor(c),o={show:l,color:n}}else o={show:l};return new u({id:a,geometry:new h(this._options),attributes:o})},T.prototype.createOutlineGeometryInstance=function(){},T.prototype.isDestroyed=function(){return!1},T.prototype.destroy=function(){this._entitySubscription(),o(this)},T.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"polyline"===t){var n=this._entity.polyline;if(!i(n))return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.positions,a=n.show;if(i(a)&&a.isConstant&&!a.getValue(c.MINIMUM_VALUE)||!i(o))return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var s=r(n.material,S),l=s instanceof g;this._materialProperty=s,this._showProperty=r(a,E),this._fillEnabled=!0;var u=n.width,h=n.followSurface,d=n.granularity;if(o.isConstant&&C.isConstant(u)&&C.isConstant(h)&&C.isConstant(d)){var m=this._options,p=o.getValue(c.MINIMUM_VALUE,m.positions);if(!i(p)||p.length<2)return this._fillEnabled&&(this._fillEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;m.vertexFormat=l?f.VERTEX_FORMAT:v.VERTEX_FORMAT,m.positions=p,m.width=i(u)?u.getValue(c.MINIMUM_VALUE):void 0,m.followSurface=i(h)?h.getValue(c.MINIMUM_VALUE):void 0,m.granularity=i(d)?d.getValue(c.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},T.prototype.createDynamicUpdater=function(e){return new x(e,this)};var x=function(e,t){var r=t._scene.id,n=w[r];i(n)||(n=new p,w[r]=n,e.add(n));var o=n.add();o.id=t._entity,this._line=o,this._primitives=e,this._geometryUpdater=t,this._positions=[]};return x.prototype.update=function(e){var t=this._geometryUpdater,r=t._entity,i=r.polyline,n=this._line,o=r.isAvailable(e)&&C.getValueOrDefault(i._show,e,!0);if(!o)return n.show=!1,void 0;var a=i.positions,l=a.getValue(e,this._positions),u=C.getValueOrDefault(i._followSurface,e,!0);if(u){var c=C.getValueOrUndefined(i._granularity,e);l=d.generateCartesianArc({positions:l,granularity:c,height:d.extractHeights(l,s.WGS84)})}n.show=!0,n.positions=l,n.material=y.getValue(e,t.fillMaterialProperty,n.material),n.width=C.getValueOrDefault(i._width,e,1)},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){var e=this._geometryUpdater,t=e._scene.id,r=w[t];r.remove(this._line),0===r.length&&(this._primitives.remove(r),r.isDestroyed()||r.destroy(),delete w[t]),o(this)},T}),r("DataSources/RectangleGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/RectangleGeometry","../Core/RectangleOutlineGeometry","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.rectangle=void 0,this.closeBottom=void 0,this.closeTop=void 0,this.height=void 0,this.extrudedHeight=void 0,this.granularity=void 0,this.stRotation=void 0,this.rotation=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._isClosed=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"rectangle",e.rectangle,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return this._isClosed}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new d(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var h=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(h=this._materialProperty.color.getValue(r)),o=t.fromColor(h),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new c(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new h(this._options),attributes:{show:new d(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"rectangle"===t){var n=this._entity.rectangle;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.coordinates,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.height,_=n.extrudedHeight,T=n.granularity,x=n.stRotation,P=n.rotation,A=n.closeBottom,M=n.closeTop;if(this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)&&y.isConstant(x)&&y.isConstant(P)&&y.isConstant(A)&&y.isConstant(M)){var D=this._options;D.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,D.rectangle=c.getValue(u.MINIMUM_VALUE,D.rectangle),D.height=i(g)?g.getValue(u.MINIMUM_VALUE):void 0,D.extrudedHeight=i(_)?_.getValue(u.MINIMUM_VALUE):void 0,D.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,D.stRotation=i(x)?x.getValue(u.MINIMUM_VALUE):void 0,D.rotation=i(P)?P.getValue(u.MINIMUM_VALUE):void 0,D.closeBottom=i(A)?A.getValue(u.MINIMUM_VALUE):void 0,D.closeTop=i(M)?M.getValue(u.MINIMUM_VALUE):void 0,this._isClosed=i(_)&&i(D.closeTop)&&i(D.closeBottom)&&D.closeTop&&D.closeBottom,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.rectangle,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,d=a.coordinates,v=a.closeBottom,g=a.closeTop,y=a.height,C=a.extrudedHeight,w=a.granularity,S=a.stRotation,E=a.rotation;if(u.rectangle=d.getValue(r,u.rectangle),u.height=i(y)?y.getValue(r,u):void 0,u.extrudedHeight=i(C)?C.getValue(r,u):void 0,u.granularity=i(w)?w.getValue(r):void 0,u.stRotation=i(S)?S.getValue(r):void 0,u.rotation=i(E)?E.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){u.closeBottom=i(v)?v.getValue(r):void 0,u.closeTop=i(g)?g.getValue(r):void 0,this._material=_.getValue(r,n.fillMaterialProperty,this._material);var b=this._material,T=new m({material:b,translucent:b.isTranslucent(),closed:u.closeTop&&u.closeBottom});u.vertexFormat=T.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new c(u)}),appearance:T,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var x=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new h(u),attributes:{color:t.fromColor(x)}}),appearance:new p({flat:!0,translucent:1!==x.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/WallGeometryUpdater",["../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/GeometryInstance","../Core/Iso8601","../Core/ShowGeometryInstanceAttribute","../Core/WallGeometry","../Core/WallOutlineGeometry","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","../Scene/Primitive","./ColorMaterialProperty","./ConstantProperty","./MaterialProperty","./Property"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";var C=v.fromColor(e.WHITE),w=new g(!0),S=new g(!0),E=new g(!1),b=new g(e.BLACK),T=function(e){this.id=e,this.vertexFormat=void 0,this.positions=void 0,this.minimumHeights=void 0,this.maximumHeights=void 0,this.granularity=void 0},x=function(e){this._entity=e,this._entitySubscription=e.definitionChanged.addEventListener(x.prototype._onEntityPropertyChanged,this),this._fillEnabled=!1,this._dynamic=!1,this._outlineEnabled=!1,this._geometryChanged=new s,this._showProperty=void 0,this._materialProperty=void 0,this._hasConstantOutline=!0,this._showOutlineProperty=void 0,this._outlineColorProperty=void 0,this._options=new T(e),this._onEntityPropertyChanged(e,"wall",e.wall,void 0)};n(x,{perInstanceColorAppearanceType:{value:p},materialAppearanceType:{value:m}}),n(x.prototype,{entity:{get:function(){return this._entity}},fillEnabled:{get:function(){return this._fillEnabled}},hasConstantFill:{get:function(){return!this._fillEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._fillProperty)}},fillMaterialProperty:{get:function(){return this._materialProperty}},outlineEnabled:{get:function(){return this._outlineEnabled}},hasConstantOutline:{get:function(){return!this._outlineEnabled||!i(this._entity.availability)&&y.isConstant(this._showProperty)&&y.isConstant(this._showOutlineProperty)}},outlineColorProperty:{get:function(){return this._outlineColorProperty}},isDynamic:{get:function(){return this._dynamic}},isClosed:{get:function(){return!1}},geometryChanged:{get:function(){return this._geometryChanged}}}),x.prototype.isOutlineVisible=function(e){var t=this._entity;return this._outlineEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)},x.prototype.isFilled=function(e){var t=this._entity;return this._fillEnabled&&t.isAvailable(e)&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)},x.prototype.createFillGeometryInstance=function(r){var n,o,a=this._entity,s=a.isAvailable(r),u=new c(s&&this._showProperty.getValue(r)&&this._fillProperty.getValue(r));if(this._materialProperty instanceof v){var d=e.WHITE;i(this._materialProperty.color)&&(this._materialProperty.color.isConstant||s)&&(d=this._materialProperty.color.getValue(r)),o=t.fromColor(d),n={show:u,color:o}}else n={show:u};return new l({id:a,geometry:new h(this._options),attributes:n})},x.prototype.createOutlineGeometryInstance=function(r){var i=this._entity,n=i.isAvailable(r);return new l({id:i,geometry:new d(this._options),attributes:{show:new c(n&&this._showProperty.getValue(r)&&this._showOutlineProperty.getValue(r)),color:t.fromColor(n?this._outlineColorProperty.getValue(r):e.BLACK)}})},x.prototype.isDestroyed=function(){return!1},x.prototype.destroy=function(){this._entitySubscription(),o(this)},x.prototype._onEntityPropertyChanged=function(e,t){if("availability"===t||"wall"===t){var n=this._entity.wall;if(!i(n))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var o=n.fill,a=i(o)&&o.isConstant?o.getValue(u.MINIMUM_VALUE):!0,s=n.outline,l=i(s);if(l&&s.isConstant&&(l=s.getValue(u.MINIMUM_VALUE)),!a&&!l)return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var c=n.positions,h=n.show;if(i(h)&&h.isConstant&&!h.getValue(u.MINIMUM_VALUE)||!i(c))return(this._fillEnabled||this._outlineEnabled)&&(this._fillEnabled=!1,this._outlineEnabled=!1,this._geometryChanged.raiseEvent(this)),void 0;var d=r(n.material,C),f=d instanceof v;this._materialProperty=d,this._fillProperty=r(o,S),this._showProperty=r(h,w),this._showOutlineProperty=r(n.outline,E),this._outlineColorProperty=l?r(n.outlineColor,b):void 0;var g=n.minimumHeights,_=n.maximumHeights,T=n.granularity;if(this._fillEnabled=a,this._outlineEnabled=l,c.isConstant&&y.isConstant(g)&&y.isConstant(_)&&y.isConstant(T)){var x=this._options;x.vertexFormat=f?p.VERTEX_FORMAT:m.VERTEX_FORMAT,x.positions=c.getValue(u.MINIMUM_VALUE,x.positions),x.minimumHeights=i(g)?g.getValue(u.MINIMUM_VALUE,x.minimumHeights):void 0,x.maximumHeights=i(_)?_.getValue(u.MINIMUM_VALUE,x.maximumHeights):void 0,x.granularity=i(T)?T.getValue(u.MINIMUM_VALUE):void 0,this._dynamic=!1,this._geometryChanged.raiseEvent(this)}else this._dynamic||(this._dynamic=!0,this._geometryChanged.raiseEvent(this))}},x.prototype.createDynamicUpdater=function(e){return new P(e,this)};var P=function(e,t){this._primitives=e,this._primitive=void 0,this._outlinePrimitive=void 0,this._geometryUpdater=t,this._options=new T(t._entity)};return P.prototype.update=function(r){var n=this._geometryUpdater;i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive);var o=n._entity,a=o.wall,s=a.show;if(o.isAvailable(r)&&(!i(s)||s.getValue(r))){var u=this._options,c=a.positions,v=a.minimumHeights,g=a.maximumHeights,y=a.granularity;if(u.positions=c.getValue(r,u.positions),u.minimumHeights=i(v)?v.getValue(r,u.minimumHeights):void 0,u.maximumHeights=i(g)?g.getValue(r,u.maximumHeights):void 0,u.granularity=i(y)?y.getValue(r):void 0,!i(a.fill)||a.fill.getValue(r)){this._material=_.getValue(r,n.fillMaterialProperty,this._material);var C=this._material,w=new m({material:C,translucent:C.isTranslucent(),closed:!1});u.vertexFormat=w.vertexFormat,this._primitive=new f({geometryInstances:new l({id:o,geometry:new h(u)}),appearance:w,asynchronous:!1}),this._primitives.add(this._primitive)}if(i(a.outline)&&a.outline.getValue(r)){u.vertexFormat=p.VERTEX_FORMAT;var S=i(a.outlineColor)?a.outlineColor.getValue(r):e.BLACK;this._outlinePrimitive=new f({geometryInstances:new l({id:o,geometry:new d(u),attributes:{color:t.fromColor(S)}}),appearance:new p({flat:!0,translucent:1!==S.alpha}),asynchronous:!1}),this._primitives.add(this._outlinePrimitive)}}},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){i(this._primitive)&&this._primitives.remove(this._primitive),i(this._outlinePrimitive)&&this._primitives.remove(this._outlinePrimitive),o(this)},x}),r("DataSources/DataSourceDisplay",["../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/EventHelper","./BillboardVisualizer","./EllipseGeometryUpdater","./EllipsoidGeometryUpdater","./GeometryVisualizer","./LabelVisualizer","./ModelVisualizer","./PathVisualizer","./PointVisualizer","./PolygonGeometryUpdater","./PolylineGeometryUpdater","./RectangleGeometryUpdater","./WallGeometryUpdater"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g=function(t){var r=t.scene,i=t.dataSourceCollection;this._eventHelper=new n,this._eventHelper.add(i.dataSourceAdded,this._onDataSourceAdded,this),this._eventHelper.add(i.dataSourceRemoved,this._onDataSourceRemoved,this),this._dataSourceCollection=i,this._scene=r,this._visualizersCallback=e(t.visualizersCallback,g.defaultVisualizersCallback);for(var o=0,a=i.length;a>o;o++)this._onDataSourceAdded(i,i.get(o))};return g.defaultVisualizersCallback=function(e,t){var r=t.entities;return[new o(e,r),new l(a,e,r),new l(s,e,r),new l(m,e,r),new l(p,e,r),new l(f,e,r),new l(v,e,r),new u(e,r),new c(e,r),new d(e,r),new h(e,r)]},g.prototype.getScene=function(){return this._scene},g.prototype.getDataSources=function(){return this._dataSourceCollection},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){this._eventHelper.removeAll();for(var e=this._dataSourceCollection,t=0,i=e.length;i>t;++t)this._onDataSourceRemoved(this._dataSourceCollection,e.get(t));return r(this)},g.prototype.update=function(e){var r,i,n,o,a=!0,s=this._dataSourceCollection,l=s.length;for(r=0;l>r;r++){var u=s.get(r);for(t(u.update)&&(a=u.update(e)&&a),n=u._visualizers,o=n.length,i=0;o>i;i++)a=n[i].update(e)&&a}return a},g.prototype._onDataSourceAdded=function(e,t){var r=this._visualizersCallback(this._scene,t);t._visualizers=r},g.prototype._onDataSourceRemoved=function(e,t){for(var r=t._visualizers,i=r.length,n=0;i>n;n++)r[n].destroy(),t._visualizers=void 0},g}),r("DataSources/DynamicGeometryUpdater",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.update=e.throwInstantiationError,t.prototype.isDestroyed=e.throwInstantiationError,t.prototype.destroy=e.throwInstantiationError,t}),r("DataSources/EntityView",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Ellipsoid","../Core/JulianDate","../Core/Math","../Core/Matrix3","../Core/Transforms","../Scene/SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t,i,n,o,h,E){var b=o.getValue(h,t._lastCartesian);if(r(b)){var T,x,P,A=!1;w=a.addSeconds(h,.001,w);var M=o.getValue(w,f);if(r(M)){var D,I=u.computeFixedToIcrfMatrix(h,d),R=u.computeFixedToIcrfMatrix(w,m);r(I)&&r(R)?D=l.transpose(I,p):(D=u.computeTemeToPseudoFixedMatrix(h,p),I=l.transpose(D,d),R=u.computeTemeToPseudoFixedMatrix(w,m),l.transpose(R,R));var O=l.multiplyByVector(I,b,y),L=l.multiplyByVector(R,M,C);e.subtract(O,L,_);var N=1e3*e.magnitude(_),B=3986004418e5,F=-B/(N*N-2*B/e.magnitude(O));0>F||F>S*E.maximumRadius?(T=v,e.normalize(b,T),e.negate(T,T),P=e.clone(e.UNIT_Z,g),x=e.cross(P,T,f),e.magnitude(x)>s.EPSILON7&&(e.normalize(T,T),e.normalize(x,x),P=e.cross(T,x,g),e.normalize(P,P),A=!0)):e.equalsEpsilon(b,M,s.EPSILON7)||(P=v,e.normalize(O,P),e.normalize(L,L),x=e.cross(P,L,g),e.equalsEpsilon(x,e.ZERO,s.EPSILON7)||(T=e.cross(x,P,f),l.multiplyByVector(D,T,T),l.multiplyByVector(D,x,x),l.multiplyByVector(D,P,P),e.normalize(T,T),e.normalize(x,x),e.normalize(P,P),A=!0))}if(A){var z=i.transform;z[0]=T.x,z[1]=T.y,z[2]=T.z,z[3]=0,z[4]=x.x,z[5]=x.y,z[6]=x.z,z[7]=0,z[8]=P.x,z[9]=P.y,z[10]=P.z,z[11]=0,z[12]=b.x,z[13]=b.y,z[14]=b.z,z[15]=0}else u.eastNorthUpToFixedFrame(b,E,i.transform)}n&&(t.scene.mode===c.SCENE2D?i.lookAt(t._offset2D,e.ZERO,t._up2D):i.lookAt(t._offset3D,e.ZERO,t._up3D))}var d=new l,m=new l,p=new l,f=new e,v=new e,g=new e,_=new e,y=new e,C=new e,w=new a,S=1.25,E=new e,b=function(r,i,n){this.entity=r,this.scene=i,this.ellipsoid=t(n,o.WGS84),this._lastEntity=void 0,this._mode=void 0,this._lastCartesian=new e,this._offset3D=new e,this._up3D=new e,this._offset2D=new e,this._up2D=new e};return i(b,{defaultOffset3D:{get:function(){return this._defaultOffset3D},set:function(t){this._defaultOffset3D=e.clone(t,new e),this._defaultUp3D=e.cross(this._defaultOffset3D,e.cross(e.UNIT_Z,this._defaultOffset3D,E),new e),e.normalize(this._defaultUp3D,this._defaultUp3D),this._defaultOffset2D=new e(0,0,e.magnitude(this._defaultOffset3D)),this._defaultUp2D=e.clone(e.UNIT_Y)}}}),b.defaultOffset3D=new e(-14e3,3500,3500),b.prototype.update=function(t){var i=this.scene,n=this.entity,o=this.ellipsoid,a=n.position,s=n!==this._lastEntity,l=i.mode!==this._mode&&i.mode!==c.MORPHING,u=this._offset3D,d=this._up3D,m=this._offset2D,p=this._up2D,f=i.camera;if(s){var v=n.viewFrom;if(r(v)&&r(v.getValue(t,u))){e.cross(e.UNIT_Z,u,d),e.cross(u,d,d),e.normalize(d,d);var g=e.magnitude(u);e.fromElements(0,0,g,m),e.clone(this._defaultUp2D,p)}else e.clone(b._defaultOffset2D,m),e.clone(b._defaultUp2D,p),e.clone(b._defaultOffset3D,u),e.clone(b._defaultUp3D,d)}else if(!l&&i.mode!==c.MORPHING)if(this._mode===c.SCENE2D){var _=Math.max(f.frustum.right-f.frustum.left,f.frustum.top-f.frustum.bottom);e.fromElements(0,0,_,m),e.clone(f.up,p)}else(this._mode===c.SCENE3D||this._mode===c.COLUMBUS_VIEW)&&(e.clone(f.position,u),e.clone(f.up,d));var y=s||l;this._lastEntity=n,this._mode=i.mode!==c.MORPHING?i.mode:this._mode,i.mode!==c.MORPHING&&h(this,i.camera,y,a,t,o)},b}),!function(){function e(e,t){function r(t){var r,i=e.arcs[0>t?~t:t],n=i[0];return e.transform?(r=[0,0],i.forEach(function(e){r[0]+=e[0],r[1]+=e[1]})):r=i[i.length-1],0>t?[r,n]:[n,r]}function i(e,t){for(var r in e){var i=e[r];delete t[i.start],delete i.start,delete i.end,i.forEach(function(e){n[0>e?~e:e]=1}),s.push(i)}}var n={},o={},a={},s=[],l=-1;return t.forEach(function(r,i){var n,o=e.arcs[0>r?~r:r];o.length<3&&!o[1][0]&&!o[1][1]&&(n=t[++l],t[l]=r,t[i]=n)}),t.forEach(function(e){var t,i,n=r(e),s=n[0],l=n[1];if(t=a[s])if(delete a[t.end],t.push(e),t.end=l,i=o[l]){delete o[i.start];var u=i===t?t:t.concat(i);o[u.start=t.start]=a[u.end=i.end]=u}else o[t.start]=a[t.end]=t;else if(t=o[l])if(delete o[t.start],t.unshift(e),t.start=s,i=a[s]){delete a[i.end];var c=i===t?t:i.concat(t);o[c.start=i.start]=a[c.end=t.end]=c}else o[t.start]=a[t.end]=t;else t=[e],o[t.start=s]=a[t.end=l]=t}),i(a,o),i(o,a),t.forEach(function(e){n[0>e?~e:e]||s.push([e])}),s}function t(t,r,i){function n(e){var t=0>e?~e:e;(c[t]||(c[t]=[])).push({i:e,g:u})}function o(e){e.forEach(n)}function a(e){e.forEach(o)}function s(e){"GeometryCollection"===e.type?e.geometries.forEach(s):e.type in h&&(u=e,h[e.type](e.arcs))}var l=[];if(arguments.length>1){var u,c=[],h={LineString:o,MultiLineString:a,Polygon:a,MultiPolygon:function(e){e.forEach(a)}};s(r),c.forEach(arguments.length<3?function(e){l.push(e[0].i)}:function(e){i(e[0].g,e[e.length-1].g)&&l.push(e[0].i)})}else for(var d=0,m=t.arcs.length;m>d;++d)l.push(d);return{type:"MultiLineString",arcs:e(t,l)}}function i(t,r){function i(e){e.forEach(function(t){t.forEach(function(t){(a[t=0>t?~t:t]||(a[t]=[])).push(e)})}),l.push(e)}function o(e){return d(s(t,{type:"Polygon",arcs:[e]}).coordinates[0])>0}var a={},l=[],u=[];return r.forEach(function(e){"Polygon"===e.type?i(e.arcs):"MultiPolygon"===e.type&&e.arcs.forEach(i)}),l.forEach(function(e){if(!e._){var t=[],r=[e];for(e._=1,u.push(t);e=r.pop();)t.push(e),e.forEach(function(e){e.forEach(function(e){a[0>e?~e:e].forEach(function(e){e._||(e._=1,r.push(e))})})})}}),l.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:u.map(function(r){var i=[];if(r.forEach(function(e){e.forEach(function(e){e.forEach(function(e){a[0>e?~e:e].length<2&&i.push(e)})})}),i=e(t,i),(n=i.length)>1)for(var s,l=o(r[0][0]),u=0;n>u;++u)if(l===o(i[u])){s=i[0],i[0]=i[u],i[u]=s;break}return i})}}function o(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return a(e,t)})}:a(e,t)}function a(e,t){var r={type:"Feature",id:t.id,properties:t.properties||{},geometry:s(e,t)};return null==t.id&&delete r.id,r}function s(e,t){function r(e,t){t.length&&t.pop();for(var r,i=c[0>e?~e:e],n=0,o=i.length;o>n;++n)t.push(r=i[n].slice()),u(r,n);0>e&&l(t,o)}function i(e){return e=e.slice(),u(e,0),e}function n(e){for(var t=[],i=0,n=e.length;n>i;++i)r(e[i],t);return t.length<2&&t.push(t[0].slice()),t}function o(e){for(var t=n(e);t.length<4;)t.push(t[0].slice());return t}function a(e){return e.map(o)}function s(e){var t=e.type;return"GeometryCollection"===t?{type:t,geometries:e.geometries.map(s)}:t in h?{type:t,coordinates:h[t](e)}:null}var u=v(e.transform),c=e.arcs,h={Point:function(e){return i(e.coordinates)},MultiPoint:function(e){return e.coordinates.map(i)},LineString:function(e){return n(e.arcs)},MultiLineString:function(e){return e.arcs.map(n)},Polygon:function(e){return a(e.arcs)},MultiPolygon:function(e){return e.arcs.map(a)}};return s(t)}function l(e,t){for(var r,i=e.length,n=i-t;n<--i;)r=e[n],e[n++]=e[i],e[i]=r}function u(e,t){for(var r=0,i=e.length;i>r;){var n=r+i>>>1;e[n]<t?r=n+1:i=n}return r}function c(e){function t(e,t){e.forEach(function(e){0>e&&(e=~e);var r=n[e];r?r.push(t):n[e]=[t]})}function r(e,r){e.forEach(function(e){t(e,r)})}function i(e,t){"GeometryCollection"===e.type?e.geometries.forEach(function(e){i(e,t)}):e.type in a&&a[e.type](e.arcs,t)}var n={},o=e.map(function(){return[]}),a={LineString:t,MultiLineString:r,Polygon:r,MultiPolygon:function(e,t){e.forEach(function(e){r(e,t)})}};e.forEach(i);for(var s in n)for(var l=n[s],c=l.length,h=0;c>h;++h)for(var d=h+1;c>d;++d){var m,p=l[h],f=l[d];(m=o[p])[s=u(m,f)]!==f&&m.splice(s,0,f),(m=o[f])[s=u(m,p)]!==p&&m.splice(s,0,p)}return o}function h(e,t){function r(e){a.remove(e),e[1][2]=t(e),a.push(e)}var i,n=v(e.transform),o=g(e.transform),a=f(),s=0;for(t||(t=m),e.arcs.forEach(function(e){var r=[];e.forEach(n);for(var o=1,s=e.length-1;s>o;++o)i=e.slice(o-1,o+2),i[1][2]=t(i),r.push(i),a.push(i);e[0][2]=e[s][2]=1/0;for(var o=0,s=r.length;s>o;++o)i=r[o],i.previous=r[o-1],i.next=r[o+1]});i=a.pop();){var l=i.previous,u=i.next;i[1][2]<s?i[1][2]=s:s=i[1][2],l&&(l.next=u,l[2]=i[2],r(l)),u&&(u.previous=l,u[0]=i[0],r(u))}return e.arcs.forEach(function(e){e.forEach(o)}),e}function d(e){for(var t,r=-1,i=e.length,n=e[i-1],o=0;++r<i;)t=n,n=e[r],o+=t[0]*n[1]-t[1]*n[0];return.5*o}function m(e){var t=e[0],r=e[1],i=e[2];return Math.abs((t[0]-i[0])*(r[1]-t[1])-(t[0]-r[0])*(i[1]-t[1]))}function p(e,t){return e[1][2]-t[1][2]}function f(){function e(e,t){for(;t>0;){var r=(t+1>>1)-1,n=i[r];if(p(e,n)>=0)break;i[n._=t]=n,i[e._=t=r]=e}}function t(e,t){for(;;){var r=t+1<<1,o=r-1,a=t,s=i[a];if(n>o&&p(i[o],s)<0&&(s=i[a=o]),n>r&&p(i[r],s)<0&&(s=i[a=r]),a===t)break;i[s._=t]=s,i[e._=t=a]=e}}var r={},i=[],n=0;return r.push=function(t){return e(i[t._=n]=t,n++),n},r.pop=function(){if(!(0>=n)){var e,r=i[0];return--n>0&&(e=i[n],t(i[e._=0]=e,0)),r}},r.remove=function(r){var o,a=r._;if(i[a]===r)return a!==--n&&(o=i[n],(p(o,r)<0?e:t)(i[o._=a]=o,a)),a},r}function v(e){if(!e)return _;var t,r,i=e.scale[0],n=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=r=0),e[0]=(t+=e[0])*i+o,e[1]=(r+=e[1])*n+a}}function g(e){if(!e)return _;var t,r,i=e.scale[0],n=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=r=0);var l=0|(e[0]-o)/i,u=0|(e[1]-a)/n;e[0]=l-t,e[1]=u-r,t=l,r=u}}function _(){}var y={version:"1.6.8",mesh:function(e){return s(e,t.apply(this,arguments))},meshArcs:t,merge:function(e){return s(e,i.apply(this,arguments))},mergeArcs:i,feature:o,neighbors:c,presimplify:h};"function"==typeof r&&r.amd?r("ThirdParty/topojson",y):"object"==typeof module&&module.exports?module.exports=y:this.topojson=y}(),r("DataSources/GeoJsonDataSource",["../Core/Cartesian3","../Core/Color","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/getFilenameFromUri","../Core/loadJson","../Core/PinBuilder","../Core/RuntimeError","../Scene/VerticalOrigin","../ThirdParty/topojson","../ThirdParty/when","./BillboardGraphics","./ColorMaterialProperty","./ConstantPositionProperty","./ConstantProperty","./EntityCollection","./PolygonGraphics","./PolylineGraphics"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w){"use strict";function S(e,t){var r='<table class="cesium-infoBox-defaultTable"><tbody>';for(var i in e)if(e.hasOwnProperty(i)){if(i===t||-1!==Y.indexOf(i))continue;var o=e[i];n(o)&&(r+="object"==typeof o?"<tr><th>"+i+"</th><td>"+S(o)+"</td></tr>":"<tr><th>"+i+"</th><td>"+o+"</td></tr>")}return r+="</tbody></table>"}function E(e,t){var i=e.id;if(n(i)&&"Feature"===e.type){for(var o=2,a=i;n(t.getById(a));)a=i+"_"+o,o++;i=a}else i=r();var s=t.getOrCreateEntity(i),l=e.properties;if(n(l)){s.addProperty("properties"),s.properties=l;var u,c=l.title;if(n(c))s.name=c,u="title";else{var h=Number.MAX_VALUE;for(var d in l)if(l.hasOwnProperty(d)&&l[d]){var m=d.toLowerCase();if(h>1&&"title"===m){h=1,u=d;break}h>2&&"name"===m?(h=2,u=d):h>3&&/title/i.test(d)?(h=3,u=d):h>4&&/name/i.test(d)&&(h=4,u=d)}n(u)&&(s.name=l[u])}var p=l.description;n(p)||(p=S(l,u)),s.description=new _(p)}return s}function b(e,t){for(var r=new Array(e.length),i=0;i<e.length;i++)r[i]=t(e[i]);return r}function T(e,t,r,i){if(!n(t.geometry))throw new h("feature.geometry is required.");if(null===t.geometry)E(t,e._entityCollection);else{var o=t.geometry.type,a=Z[o];if(!n(a))throw new h("Unknown geometry type: "+o);a(e,t,t.geometry,i)}}function x(e,t,r,i){for(var n=t.features,o=0,a=n.length;a>o;o++)T(e,n[o],void 0,i)}function P(e,t,r,i){for(var o=r.geometries,a=0,s=o.length;s>a;a++){var l=o[a],u=l.type,c=Z[u];if(!n(c))throw new h("Unknown geometry type: "+u);c(e,t,l,i)}}function A(e,r,o,a){var s,l=t.ROYALBLUE,u=k.medium,c=r.properties;if(n(c)){var h=c["marker-color"];n(h)&&(l=t.fromCssColorString(h)),u=i(k[c["marker-size"]],u),s=c["marker-symbol"]}var m;m=n(s)?1===s.length?e._pinBuilder.fromText(s.toUpperCase(),l,u):e._pinBuilder.fromMakiIconId(s,l,u):e._pinBuilder.fromColor(l,u),e._promises.push(p(m,function(t){var i=new f;i.verticalOrigin=new _(d.BOTTOM),i.image=new _(t.toDataURL());var n=E(r,e._entityCollection);
n.billboard=i,n.position=new g(o(a))}))}function M(e,t,r,i){A(e,t,i,r.coordinates)}function D(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)A(e,t,i,n[o])}function I(e,r,i,o){var a=U,s=W,l=r.properties;if(n(l)){var u=l["stroke-width"];n(u)&&(s=new _(u));var c,h=l.stroke;n(h)&&(c=t.fromCssColorString(h));var d=l["stroke-opacity"];n(d)&&1!==d&&(n(c)||(c=a.color.clone()),c.alpha=d),n(c)&&(a=v.fromColor(c))}var m=new w;m.material=a,m.width=s,m.positions=new _(b(o,i));var p=E(r,e._entityCollection);p.polyline=m}function R(e,t,r,i){I(e,t,i,r.coordinates)}function O(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)I(e,t,i,n[o])}function L(e,r,i,o){var a=j,s=G,l=r.properties;if(n(l)){var u,c=l.stroke;n(c)&&(u=t.fromCssColorString(c));var h=l["stroke-opacity"];n(h)&&1!==h&&(n(u)||(u=q.clone()),u.alpha=h),n(u)&&(a=new _(u));var d,m=l.fill;n(m)&&(d=t.fromCssColorString(m),d.alpha=s.color.alpha),h=l["fill-opacity"],n(h)&&h!==s.color.alpha&&(n(d)||(d=s.color.clone()),d.alpha=h),n(d)&&(s=v.fromColor(d))}var p=new C;p.outline=H,p.outlineColor=a,p.material=s,p.positions=new _(b(o,i)),o.length>0&&o[0].length>2&&(p.perPositionHeight=new _(!0));var f=E(r,e._entityCollection);f.polygon=p}function N(e,t,r,i){L(e,t,i,r.coordinates[0])}function B(e,t,r,i){for(var n=r.coordinates,o=0;o<n.length;o++)L(e,t,i,n[o][0])}function F(e,t,r,i){for(var n in r.objects)if(r.objects.hasOwnProperty(n)){var o=m.feature(r,r.objects[n]),a=X[o.type];a(e,o,o,i)}}function z(e,t){e._isLoading!==t&&(t?e._entityCollection.suspendEvents():e._entityCollection.resumeEvents(),e._isLoading=t,e._loading.raiseEvent(e,t))}function V(t){return e.fromDegrees(t[0],t[1],t[2])}var k={small:24,medium:48,large:64},U=v.fromColor(t.YELLOW),W=new _(2),G=v.fromColor(t.fromBytes(255,255,0,100)),H=new _(!0),q=t.BLACK,j=new _(q),Y=["title","description","marker-size","marker-symbol","marker-color","stroke","stroke-opacity","stroke-width","fill","fill-opacity"],X={Feature:T,FeatureCollection:x,GeometryCollection:P,LineString:R,MultiLineString:O,MultiPoint:D,MultiPolygon:B,Point:M,Polygon:N,Topology:F},Z={GeometryCollection:P,LineString:R,MultiLineString:O,MultiPoint:D,MultiPolygon:B,Point:M,Polygon:N,Topology:F},Q=function(e){this._name=e,this._changed=new s,this._error=new s,this._isLoading=!1,this._loading=new s,this._entityCollection=new y,this._promises=[],this._pinBuilder=new c};return Q.fromUrl=function(e){var t=new Q;return t.loadUrl(e),t},o(Q.prototype,{name:{get:function(){return this._name}},clock:{value:void 0,writable:!1},entities:{get:function(){return this._entityCollection}},isLoading:{get:function(){return this._isLoading}},changedEvent:{get:function(){return this._changed}},errorEvent:{get:function(){return this._error}},loadingEvent:{get:function(){return this._loading}}}),Q.prototype.loadUrl=function(e){z(this,!0);var t=this;return p(u(e),function(r){return t.load(r,e)}).otherwise(function(e){return z(t,!1),t._error.raiseEvent(t,e),p.reject(e)})},Q.prototype.load=function(e,t){var r;n(t)&&(r=l(t)),n(r)&&this._name!==r&&(this._name=r,this._changed.raiseEvent(this));var i=X[e.type];if(!n(i))throw new a("Unsupported GeoJSON object type: "+e.type);var o=V,s=e.crs;if(n(s)){if(null===s)throw new h("crs is null.");if(!n(s.properties))throw new h("crs.properties is undefined.");var u=s.properties;if("name"===s.type){if(o=Q.crsNames[u.name],!n(o))throw new h("Unknown crs name: "+u.name)}else if("link"===s.type){var c=Q.crsLinkHrefs[u.href];if(n(c)||(c=Q.crsLinkTypes[u.type]),!n(c))throw new h("Unable to resolve crs link: "+JSON.stringify(u));o=c(u)}else{if("EPSG"!==s.type)throw new h("Unknown crs type: "+s.type);if(o=Q.crsNames["EPSG:"+u.code],!n(o))throw new h("Unknown crs EPSG code: "+u.code)}}z(this,!0);var d=this;return p(o,function(t){d._entityCollection.removeAll(),i(d,e,e,t),p.all(d._promises,function(){d._promises.length=0,z(d,!1),d._changed.raiseEvent(d)})}).otherwise(function(e){return z(d,!1),d._error.raiseEvent(d,e),p.reject(e)})},Q.crsNames={"urn:ogc:def:crs:OGC:1.3:CRS84":V,"EPSG:4326":V},Q.crsLinkHrefs={},Q.crsLinkTypes={},Q}),r("DataSources/GeometryUpdater",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return e(r,{perInstanceColorAppearanceType:{get:t.throwInstantiationError},materialAppearanceType:{get:t.throwInstantiationError}}),e(r.prototype,{entity:{get:t.throwInstantiationError},fillEnabled:{get:t.throwInstantiationError},hasConstantFill:{get:t.throwInstantiationError},fillMaterialProperty:{get:t.throwInstantiationError},outlineEnabled:{get:t.throwInstantiationError},hasConstantOutline:{get:t.throwInstantiationError},outlineColorProperty:{get:t.throwInstantiationError},isDynamic:{get:t.throwInstantiationError},isClosed:{get:t.throwInstantiationError},geometryChanged:{get:t.throwInstantiationError}}),r.prototype.isOutlineVisible=t.throwInstantiationError,r.prototype.isFilled=t.throwInstantiationError,r.prototype.createFillGeometryInstance=t.throwInstantiationError,r.prototype.createOutlineGeometryInstance=t.throwInstantiationError,r.prototype.isDestroyed=t.throwInstantiationError,r.prototype.destroy=t.throwInstantiationError,r.prototype.createDynamicUpdater=t.throwInstantiationError,r}),r("DataSources/PropertyArray",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/EventHelper","./Property"],function(e,t,r,i,n,o){"use strict";var a=function(e){this._value=void 0,this._definitionChanged=new i,this._eventHelper=new n,this.setValue(e)};return t(a.prototype,{isConstant:{get:function(){var t=this._value;if(!e(t))return!0;for(var r=t.length,i=0;r>i;i++)if(!o.isConstant(t[i]))return!1;return!0}},definitionChanged:{get:function(){return this._definitionChanged}}}),a.prototype.getValue=function(t,r){var i=this._value;if(!e(i))return void 0;var n=i.length;e(r)||(r=new Array(n));for(var o=0,a=0;n>o;){var s=this._value[o],l=s.getValue(t,r[o]);e(l)&&(r[a]=l,a++),o++}return r.length=a,r},a.prototype.setValue=function(t){var r=this._eventHelper;if(r.removeAll(),e(t)){this._value=t.slice();for(var i=t.length,n=0;i>n;n++){var o=t[n];e(o)&&r.add(o.definitionChanged,a.prototype._raiseDefinitionChanged,this)}}else this._value=void 0;this._definitionChanged.raiseEvent(this)},a.prototype.equals=function(e){return this===e||e instanceof a&&o.arrayEquals(this._value,e._value)},a.prototype._raiseDefinitionChanged=function(){this._definitionChanged.raiseEvent(this)},a}),r("DataSources/Visualizer",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.update=e.throwInstantiationError,t.prototype.isDestroyed=e.throwInstantiationError,t.prototype.destroy=e.throwInstantiationError,t}),r("Renderer/AutomaticUniforms",["../Core/Cartesian3","../Core/defineProperties","../Core/Matrix4"],function(e,t,r){"use strict";var i=new e,n=function(e){this._size=e.size,this._datatype=e.datatype,this.getValue=e.getValue};if(t(n.prototype,{size:{get:function(){return this._size}},datatype:{get:function(){return this._datatype}}}),"undefined"==typeof WebGLRenderingContext)return{};var o={};o[WebGLRenderingContext.FLOAT]="float",o[WebGLRenderingContext.FLOAT_VEC2]="vec2",o[WebGLRenderingContext.FLOAT_VEC3]="vec3",o[WebGLRenderingContext.FLOAT_VEC4]="vec4",o[WebGLRenderingContext.INT]="int",o[WebGLRenderingContext.INT_VEC2]="ivec2",o[WebGLRenderingContext.INT_VEC3]="ivec3",o[WebGLRenderingContext.INT_VEC4]="ivec4",o[WebGLRenderingContext.BOOL]="bool",o[WebGLRenderingContext.BOOL_VEC2]="bvec2",o[WebGLRenderingContext.BOOL_VEC3]="bvec3",o[WebGLRenderingContext.BOOL_VEC4]="bvec4",o[WebGLRenderingContext.FLOAT_MAT2]="mat2",o[WebGLRenderingContext.FLOAT_MAT3]="mat3",o[WebGLRenderingContext.FLOAT_MAT4]="mat4",o[WebGLRenderingContext.SAMPLER_2D]="sampler2D",o[WebGLRenderingContext.SAMPLER_CUBE]="samplerCube",n.prototype.getDeclaration=function(e){var t="uniform "+o[this._datatype]+" "+e,r=this._size;return t+=1===r?";":"["+r.toString()+"];"};var a={czm_viewport:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC4,getValue:function(e){return e.viewportCartesian4}}),czm_viewportOrthographic:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewportOrthographic}}),czm_viewportTransformation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewportTransformation}}),czm_model:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.model}}),czm_inverseModel:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModel}}),czm_view:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.view}}),czm_view3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.view3D}}),czm_viewRotation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.viewRotation}}),czm_viewRotation3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.viewRotation3D}}),czm_inverseView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseView}}),czm_inverseView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseView3D}}),czm_inverseViewRotation:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation}}),czm_inverseViewRotation3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation3D}}),czm_projection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.projection}}),czm_inverseProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseProjection}}),czm_inverseProjectionOIT:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseProjectionOIT}}),czm_infiniteProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.infiniteProjection}}),czm_modelView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelView}}),czm_modelView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelView3D}}),czm_modelViewRelativeToEye:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewRelativeToEye}}),czm_inverseModelView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelView}}),czm_inverseModelView3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelView3D}}),czm_viewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.viewProjection}}),czm_inverseViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseViewProjection}}),czm_modelViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewProjection}}),czm_inverseModelViewProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.inverseModelViewProjection}}),czm_modelViewProjectionRelativeToEye:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewProjectionRelativeToEye}}),czm_modelViewInfiniteProjection:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT4,getValue:function(e){return e.modelViewInfiniteProjection}}),czm_normal:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.normal}}),czm_normal3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.normal3D}}),czm_inverseNormal:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseNormal}}),czm_inverseNormal3D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.inverseNormal3D}}),czm_eyeHeight2D:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.eyeHeight2D}}),czm_entireFrustum:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.entireFrustum}}),czm_currentFrustum:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC2,getValue:function(e){return e.currentFrustum}}),czm_sunPositionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunPositionWC}}),czm_sunPositionColumbusView:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunPositionColumbusView}}),czm_sunDirectionEC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunDirectionEC}}),czm_sunDirectionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.sunDirectionWC}}),czm_moonDirectionEC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.moonDirectionEC}}),czm_encodedCameraPositionMCHigh:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCHigh}}),czm_encodedCameraPositionMCLow:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCLow}}),czm_viewerPositionWC:new n({size:1,datatype:WebGLRenderingContext.FLOAT_VEC3,getValue:function(e){return r.getTranslation(e.inverseView,i)}}),czm_frameNumber:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.frameNumber}}),czm_morphTime:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.morphTime}}),czm_sceneMode:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.frameState.mode}}),czm_temeToPseudoFixed:new n({size:1,datatype:WebGLRenderingContext.FLOAT_MAT3,getValue:function(e){return e.temeToPseudoFixedMatrix}}),czm_resolutionScale:new n({size:1,datatype:WebGLRenderingContext.FLOAT,getValue:function(e){return e.resolutionScale}})};return a}),r("Renderer/Buffer",["../Core/defaultValue","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r){"use strict";var i=function(e,t,r,i,n){this._gl=e,this._bufferTarget=t,this._sizeInBytes=r,this._usage=i,this._buffer=n,this.vertexArrayDestroyable=!0};return t(i.prototype,{sizeInBytes:{get:function(){return this._sizeInBytes}},usage:{get:function(){return this._usage}}}),i.prototype._getBuffer=function(){return this._buffer},i.prototype.copyFromArrayView=function(t,r){r=e(r,0);var i=this._gl,n=this._bufferTarget;i.bindBuffer(n,this._buffer),i.bufferSubData(n,r,t),i.bindBuffer(n,null)},i.prototype.isDestroyed=function(){return!1},i.prototype.destroy=function(){return this._gl.deleteBuffer(this._buffer),r(this)},i}),r("Renderer/ClearCommand",["../Core/Color","../Core/defaultValue","../Core/freezeObject"],function(e,t,r){"use strict";var i=function(e){e=t(e,t.EMPTY_OBJECT),this.color=e.color,this.depth=e.depth,this.stencil=e.stencil,this.renderState=e.renderState,this.framebuffer=e.framebuffer,this.owner=e.owner};return i.ALL=r(new i({color:new e(0,0,0,0),depth:1,stencil:0})),i.prototype.execute=function(e,t){e.clear(this,t)},i}),r("Shaders/ViewportQuadVS",[],function(){"use strict";return"attribute vec4 position;\nattribute vec2 textureCoordinates;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_Position = position;\nv_textureCoordinates = textureCoordinates;\n}\n"}),r("Renderer/Framebuffer",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/PixelFormat"],function(e,t,r,i){"use strict";function n(e,t,r){var i=e._gl;i.framebufferTexture2D(i.FRAMEBUFFER,t,r._target,r._texture,0)}function o(e,t,r){var i=e._gl;i.framebufferRenderbuffer(i.FRAMEBUFFER,t,i.RENDERBUFFER,r._getRenderbuffer())}var a=function(r,i,a){a=e(a,e.EMPTY_OBJECT),this._gl=r,this._framebuffer=r.createFramebuffer(),this._colorTextures=[],this._colorRenderbuffers=[],this._activeColorAttachments=[],this._depthTexture=void 0,this._depthRenderbuffer=void 0,this._stencilRenderbuffer=void 0,this._depthStencilTexture=void 0,this._depthStencilRenderbuffer=void 0,this.destroyAttachments=e(a.destroyAttachments,!0),t(a.depthTexture)||t(a.depthRenderbuffer),t(a.depthStencilTexture)||t(a.depthStencilRenderbuffer),this._bind();var s,l,u,c,h;if(t(a.colorTextures)){var d=a.colorTextures;for(c=this._colorTextures.length=this._activeColorAttachments.length=d.length,u=0;c>u;++u)s=d[u],h=this._gl.COLOR_ATTACHMENT0+u,n(this,h,s),this._activeColorAttachments[u]=h,this._colorTextures[u]=s}if(t(a.colorRenderbuffers)){var m=a.colorRenderbuffers;for(c=this._colorRenderbuffers.length=this._activeColorAttachments.length=m.length,u=0;c>u;++u)l=m[u],h=this._gl.COLOR_ATTACHMENT0+u,o(this,h,l),this._activeColorAttachments[u]=h,this._colorRenderbuffers[u]=l}t(a.depthTexture)&&(s=a.depthTexture,n(this,this._gl.DEPTH_ATTACHMENT,s),this._depthTexture=s),t(a.depthRenderbuffer)&&(l=a.depthRenderbuffer,o(this,this._gl.DEPTH_ATTACHMENT,l),this._depthRenderbuffer=l),t(a.stencilRenderbuffer)&&(l=a.stencilRenderbuffer,o(this,this._gl.STENCIL_ATTACHMENT,l),this._stencilRenderbuffer=l),t(a.depthStencilTexture)&&(s=a.depthStencilTexture,n(this,this._gl.DEPTH_STENCIL_ATTACHMENT,s),this._depthStencilTexture=s),t(a.depthStencilRenderbuffer)&&(l=a.depthStencilRenderbuffer,o(this,this._gl.DEPTH_STENCIL_ATTACHMENT,l),this._depthStencilRenderbuffer=l),this._unBind()};return r(a.prototype,{status:{get:function(){this._bind();var e=this._gl.checkFramebufferStatus(this._gl.FRAMEBUFFER);return this._unBind(),e}},numberOfColorAttachments:{get:function(){return this._activeColorAttachments.length}},depthTexture:{get:function(){return this._depthTexture}},depthRenderbuffer:{get:function(){return this._depthRenderbuffer}},stencilRenderbuffer:{get:function(){return this._stencilRenderbuffer}},depthStencilTexture:{get:function(){return this._depthStencilTexture}},depthStencilRenderbuffer:{get:function(){return this._depthStencilRenderbuffer}},hasDepthAttachment:{get:function(){return!!(this.depthTexture||this.depthRenderbuffer||this.depthStencilTexture||this.depthStencilRenderbuffer)}}}),a.prototype._bind=function(){var e=this._gl;e.bindFramebuffer(e.FRAMEBUFFER,this._framebuffer)},a.prototype._unBind=function(){var e=this._gl;e.bindFramebuffer(e.FRAMEBUFFER,null)},a.prototype._getActiveColorAttachments=function(){return this._activeColorAttachments},a.prototype.getColorTexture=function(e){return this._colorTextures[e]},a.prototype.getColorRenderbuffer=function(e){return this._colorRenderbuffers[e]},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){if(this.destroyAttachments){for(var e=0,r=this._colorTextures,n=r.length;n>e;++e){var o=r[e];t(o)&&o.destroy()}var a=this._colorRenderbuffers;for(n=a.length,e=0;n>e;++e){var s=a[e];t(s)&&s.destroy()}this._depthTexture=this._depthTexture&&this._depthTexture.destroy(),this._depthRenderbuffer=this._depthRenderbuffer&&this._depthRenderbuffer.destroy(),this._stencilRenderbuffer=this._stencilRenderbuffer&&this._stencilRenderbuffer.destroy(),this._depthStencilTexture=this._depthStencilTexture&&this._depthStencilTexture.destroy(),this._depthStencilRenderbuffer=this._depthStencilRenderbuffer&&this._depthStencilRenderbuffer.destroy()}return this._gl.deleteFramebuffer(this._framebuffer),i(this)},a}),r("Renderer/PassState",[],function(){"use strict";var e=function(e){this.context=e,this.framebuffer=void 0,this.blendingEnabled=void 0,this.scissorTest=void 0};return e}),r("Renderer/RenderbufferFormat",["../Core/freezeObject"],function(e){"use strict";var t={RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,validate:function(e){return e===t.RGBA4||e===t.RGB5_A1||e===t.RGB565||e===t.DEPTH_COMPONENT16||e===t.STENCIL_INDEX8||e===t.DEPTH_STENCIL}};return e(t)}),r("Renderer/PickFramebuffer",["../Core/BoundingRectangle","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","./PassState","./RenderbufferFormat"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){var r=new o(t);r.blendingEnabled=!1,r.scissorTest={enabled:!0,rectangle:new e},this._context=t,this._fb=void 0,this._passState=r,this._width=0,this._height=0};s.prototype.begin=function(t){var r=this._context,n=r.drawingBufferWidth,o=r.drawingBufferHeight;return e.clone(t,this._passState.scissorTest.rectangle),i(this._fb)&&this._width===n&&this._height===o||(this._width=n,this._height=o,this._fb=this._fb&&this._fb.destroy(),this._fb=r.createFramebuffer({colorTextures:[r.createTexture2D({width:n,height:o})],depthRenderbuffer:r.createRenderbuffer({format:a.DEPTH_COMPONENT16})}),this._passState.framebuffer=this._fb),this._passState};var l=new t;return s.prototype.end=function(e){for(var n=r(e.width,1),o=r(e.height,1),a=this._context,s=a.readPixels({x:e.x,y:e.y,width:n,height:o,framebuffer:this._fb}),u=Math.max(n,o),c=u*u,h=Math.floor(.5*n),d=Math.floor(.5*o),m=0,p=0,f=0,v=-1,g=0;c>g;++g){if(m>=-h&&h>=m&&p>=-d&&d>=p){var _=4*((d-p)*n+m+h);l.red=t.byteToFloat(s[_]),l.green=t.byteToFloat(s[_+1]),l.blue=t.byteToFloat(s[_+2]),l.alpha=t.byteToFloat(s[_+3]);var y=a.getObjectByPickColor(l);if(i(y))return y}if(m===p||0>m&&-m===p||m>0&&m===1-p){var C=f;f=-v,v=C}m+=f,p+=v}return void 0},s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return this._fb=this._fb&&this._fb.destroy(),n(this)},s}),r("Renderer/Renderbuffer",["../Core/defineProperties","../Core/destroyObject"],function(e,t){"use strict";function r(e,t,r,i){this._gl=e,this._format=t,this._width=r,this._height=i,this._renderbuffer=this._gl.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,this._renderbuffer),e.renderbufferStorage(e.RENDERBUFFER,t,r,i),e.bindRenderbuffer(e.RENDERBUFFER,null)}return e(r.prototype,{format:{get:function(){return this._format}},width:{get:function(){return this._width}},height:{get:function(){return this._height}}}),r.prototype._getRenderbuffer=function(){return this._renderbuffer},r.prototype.isDestroyed=function(){return!1},r.prototype.destroy=function(){return this._gl.deleteRenderbuffer(this._renderbuffer),t(this)},r}),r("Renderer/RenderState",["../Core/BoundingRectangle","../Core/Color","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/RuntimeError","../Core/WindingOrder"],function(e,t,r,i,n,o,a){"use strict";function s(e,t,r){r?e.enable(t):e.disable(t)}function l(e,t){e.frontFace(t.frontFace)}function u(e,t){var r=t.cull,i=r.enabled;s(e,e.CULL_FACE,i),i&&e.cullFace(r.face)}function c(e,t){e.lineWidth(t.lineWidth)}function h(e,t){var r=t.polygonOffset,i=r.enabled;s(e,e.POLYGON_OFFSET_FILL,i),i&&e.polygonOffset(r.factor,r.units)}function d(e,t,r){var n=t.scissorTest,o=i(r.scissorTest)?r.scissorTest.enabled:n.enabled;if(s(e,e.SCISSOR_TEST,o),o){var a=i(r.scissorTest)?r.scissorTest.rectangle:n.rectangle;e.scissor(a.x,a.y,a.width,a.height)}}function m(e,t){var r=t.depthRange;e.depthRange(r.near,r.far)}function p(e,t){var r=t.depthTest,i=r.enabled;s(e,e.DEPTH_TEST,i),i&&e.depthFunc(r.func)}function f(e,t){var r=t.colorMask;e.colorMask(r.red,r.green,r.blue,r.alpha)}function v(e,t){e.depthMask(t.depthMask)}function g(e,t){e.stencilMask(t.stencilMask)}function _(e,t,r){var n=t.blending,o=i(r.blendingEnabled)?r.blendingEnabled:n.enabled;s(e,e.BLEND,o),o&&(E(e,n.color),e.blendEquationSeparate(n.equationRgb,n.equationAlpha),e.blendFuncSeparate(n.functionSourceRgb,n.functionDestinationRgb,n.functionSourceAlpha,n.functionDestinationAlpha))}function y(e,t){var r=t.stencilTest,i=r.enabled;if(s(e,e.STENCIL_TEST,i),i){var n=r.frontFunction,o=r.backFunction,a=r.reference,l=r.mask;e.stencilFunc(r.frontFunction,r.reference,r.mask),e.stencilFuncSeparate(e.BACK,o,a,l),e.stencilFuncSeparate(e.FRONT,n,a,l);var u=r.frontOperation,c=u.fail,h=u.zFail,d=u.zPass;e.stencilOpSeparate(e.FRONT,c,h,d);var m=r.backOperation,p=m.fail,f=m.zFail,v=m.zPass;e.stencilOpSeparate(e.BACK,p,f,v)}}function C(e,t,r){var n=t.viewport;i(n)||(n=T,n.width=r.context.drawingBufferWidth,n.height=r.context.drawingBufferHeight),r.context.uniformState.viewport=n,e.viewport(n.x,n.y,n.width,n.height)}function w(e,t){var r=[];return e.frontFace!==t.frontFace&&r.push(l),(e.cull.enabled!==t.cull.enabled||e.cull.face!==t.cull.face)&&r.push(u),e.lineWidth!==t.lineWidth&&r.push(c),(e.polygonOffset.enabled!==t.polygonOffset.enabled||e.polygonOffset.factor!==t.polygonOffset.factor||e.polygonOffset.units!==t.polygonOffset.units)&&r.push(h),r.push(d),(e.depthRange.near!==t.depthRange.near||e.depthRange.far!==t.depthRange.far)&&r.push(m),(e.depthTest.enabled!==t.depthTest.enabled||e.depthTest.func!==t.depthTest.func)&&r.push(p),(e.colorMask.red!==t.colorMask.red||e.colorMask.green!==t.colorMask.green||e.colorMask.blue!==t.colorMask.blue||e.colorMask.alpha!==t.colorMask.alpha)&&r.push(f),e.depthMask!==t.depthMask&&r.push(v),r.push(_),e.stencilMask!==t.stencilMask&&r.push(g),(e.stencilTest.enabled!==t.stencilTest.enabled||e.stencilTest.frontFunction!==t.stencilTest.frontFunction||e.stencilTest.backFunction!==t.stencilTest.backFunction||e.stencilTest.reference!==t.stencilTest.reference||e.stencilTest.mask!==t.stencilTest.mask||e.stencilTest.frontOperation.fail!==t.stencilTest.frontOperation.fail||e.stencilTest.frontOperation.zFail!==t.stencilTest.frontOperation.zFail||e.stencilTest.backOperation.fail!==t.stencilTest.backOperation.fail||e.stencilTest.backOperation.zFail!==t.stencilTest.backOperation.zFail||e.stencilTest.backOperation.zPass!==t.stencilTest.backOperation.zPass)&&r.push(y),(e.sampleCoverage.enabled!==t.sampleCoverage.enabled||e.sampleCoverage.value!==t.sampleCoverage.value||e.sampleCoverage.invert!==t.sampleCoverage.invert)&&r.push(b),r.push(C),r}var S=function(n,s){var l=r(s,{}),u=r(l.cull,{}),c=r(l.polygonOffset,{}),h=r(l.scissorTest,{}),d=r(h.rectangle,{}),m=r(l.depthRange,{}),p=r(l.depthTest,{}),f=r(l.colorMask,{}),v=r(l.blending,{}),g=r(v.color,{}),_=r(l.stencilTest,{}),y=r(_.frontOperation,{}),C=r(_.backOperation,{}),w=r(l.sampleCoverage,{}),S=l.viewport;if(this.frontFace=r(l.frontFace,a.COUNTER_CLOCKWISE),this.cull={enabled:r(u.enabled,!1),face:r(u.face,WebGLRenderingContext.BACK)},this.lineWidth=r(l.lineWidth,1),this.polygonOffset={enabled:r(c.enabled,!1),factor:r(c.factor,0),units:r(c.units,0)},this.scissorTest={enabled:r(h.enabled,!1),rectangle:e.clone(d)},this.depthRange={near:r(m.near,0),far:r(m.far,1)},this.depthTest={enabled:r(p.enabled,!1),func:r(p.func,WebGLRenderingContext.LESS)},this.colorMask={red:r(f.red,!0),green:r(f.green,!0),blue:r(f.blue,!0),alpha:r(f.alpha,!0)},this.depthMask=r(l.depthMask,!0),this.stencilMask=r(l.stencilMask,-1),this.blending={enabled:r(v.enabled,!1),color:new t(r(g.red,0),r(g.green,0),r(g.blue,0),r(g.alpha,0)),equationRgb:r(v.equationRgb,WebGLRenderingContext.FUNC_ADD),equationAlpha:r(v.equationAlpha,WebGLRenderingContext.FUNC_ADD),functionSourceRgb:r(v.functionSourceRgb,WebGLRenderingContext.ONE),functionSourceAlpha:r(v.functionSourceAlpha,WebGLRenderingContext.ONE),functionDestinationRgb:r(v.functionDestinationRgb,WebGLRenderingContext.ZERO),functionDestinationAlpha:r(v.functionDestinationAlpha,WebGLRenderingContext.ZERO)},this.stencilTest={enabled:r(_.enabled,!1),frontFunction:r(_.frontFunction,WebGLRenderingContext.ALWAYS),backFunction:r(_.backFunction,WebGLRenderingContext.ALWAYS),reference:r(_.reference,0),mask:r(_.mask,-1),frontOperation:{fail:r(y.fail,WebGLRenderingContext.KEEP),zFail:r(y.zFail,WebGLRenderingContext.KEEP),zPass:r(y.zPass,WebGLRenderingContext.KEEP)},backOperation:{fail:r(C.fail,WebGLRenderingContext.KEEP),zFail:r(C.zFail,WebGLRenderingContext.KEEP),zPass:r(C.zPass,WebGLRenderingContext.KEEP)}},this.sampleCoverage={enabled:r(w.enabled,!1),value:r(w.value,1),invert:r(w.invert,!1)},this.viewport=i(S)?new e(S.x,S.y,i(S.width)?S.width:n.drawingBufferWidth,i(S.height)?S.height:n.drawingBufferHeight):void 0,this.lineWidth<n.minimumAliasedLineWidth||this.lineWidth>n.maximumAliasedLineWidth)throw new o("renderState.lineWidth is out of range.  Check minimumAliasedLineWidth and maximumAliasedLineWidth.");if(i(this.viewport)){if(this.viewport.width>n.maximumViewportWidth)throw new o("renderState.viewport.width must be less than or equal to the maximum viewport width ("+this.maximumViewportWidth.toString()+").  Check maximumViewportWidth.");if(this.viewport.height>n.maximumViewportHeight)throw new o("renderState.viewport.height must be less than or equal to the maximum viewport height ("+this.maximumViewportHeight.toString()+").  Check maximumViewportHeight.")}this.id=0,this._applyFunctions=[]},E=function(e,t){e.blendColor(t.red,t.green,t.blue,t.alpha)},b=function(e,t){var r=t.sampleCoverage,i=r.enabled;s(e,e.SAMPLE_COVERAGE,i),i&&e.sampleCoverage(r.value,r.invert)},T=new e;return S.apply=function(e,t,r){l(e,t),u(e,t),c(e,t),h(e,t),d(e,t,r),m(e,t),p(e,t),f(e,t),v(e,t),g(e,t),_(e,t,r),y(e,t),b(e,t),C(e,t,r)},S.partialApply=function(e,t,r,n){var o=r._applyFunctions[t.id];i(o)||(o=w(t,r),r._applyFunctions[t.id]=o);for(var a=o.length,s=0;a>s;++s)o[s](e,r,n)},S.clone=function(r){return{frontFace:r.frontFace,cull:{enabled:r.cull.enabled,face:r.cull.face},lineWidth:r.lineWidth,polygonOffset:{enabled:r.polygonOffset.enabled,factor:r.polygonOffset.factor,units:r.polygonOffset.units},scissorTest:{enabled:r.scissorTest.enabled,rectangle:e.clone(r.scissorTest.rectangle)},depthRange:{near:r.depthRange.near,far:r.depthRange.far},depthTest:{enabled:r.depthTest.enabled,func:r.depthTest.func},colorMask:{red:r.colorMask.red,green:r.colorMask.green,blue:r.colorMask.blue,alpha:r.colorMask.alpha},depthMask:r.depthMask,stencilMask:r.stencilMask,blending:{enabled:r.blending.enabled,color:t.clone(r.blending.color),equationRgb:r.blending.equationRgb,equationAlpha:r.blending.equationAlpha,functionSourceRgb:r.blending.functionSourceRgb,functionSourceAlpha:r.blending.functionSourceAlpha,functionDestinationRgb:r.blending.functionDestinationRgb,functionDestinationAlpha:r.blending.functionDestinationAlpha},stencilTest:{enabled:r.stencilTest.enabled,frontFunction:r.stencilTest.frontFunction,backFunction:r.stencilTest.backFunction,reference:r.stencilTest.reference,mask:r.stencilTest.mask,frontOperation:{fail:r.stencilTest.frontOperation.fail,zFail:r.stencilTest.frontOperation.zFail,zPass:r.stencilTest.frontOperation.zPass},backOperation:{fail:r.stencilTest.backOperation.fail,zFail:r.stencilTest.backOperation.zFail,zPass:r.stencilTest.backOperation.zPass}},sampleCoverage:{enabled:r.sampleCoverage.enabled,value:r.sampleCoverage.value,invert:r.sampleCoverage.invert},viewport:i(r.viewport)?e.clone(r.viewport):void 0}},S}),r("Shaders/Builtin/Constants/degreesPerRadian",[],function(){"use strict";return"const float czm_degreesPerRadian = 57.29577951308232;\n"}),r("Shaders/Builtin/Constants/depthRange",[],function(){"use strict";return"const czm_depthRangeStruct czm_depthRange = czm_depthRangeStruct(0.0, 1.0);\n"}),r("Shaders/Builtin/Constants/epsilon1",[],function(){"use strict";return"const float czm_epsilon1 = 0.1;\n"}),r("Shaders/Builtin/Constants/epsilon2",[],function(){"use strict";return"const float czm_epsilon2 = 0.01;\n"}),r("Shaders/Builtin/Constants/epsilon3",[],function(){"use strict";return"const float czm_epsilon3 = 0.001;\n"}),r("Shaders/Builtin/Constants/epsilon4",[],function(){"use strict";return"const float czm_epsilon4 = 0.0001;\n"}),r("Shaders/Builtin/Constants/epsilon5",[],function(){"use strict";return"const float czm_epsilon5 = 0.00001;\n"}),r("Shaders/Builtin/Constants/epsilon6",[],function(){"use strict";return"const float czm_epsilon6 = 0.000001;\n"}),r("Shaders/Builtin/Constants/epsilon7",[],function(){"use strict";return"const float czm_epsilon7 = 0.0000001;\n"}),r("Shaders/Builtin/Constants/infinity",[],function(){"use strict";return"const float czm_infinity = 5906376272000.0;\n"}),r("Shaders/Builtin/Constants/oneOverPi",[],function(){"use strict";return"const float czm_oneOverPi = 0.3183098861837907;\n"
}),r("Shaders/Builtin/Constants/oneOverTwoPi",[],function(){"use strict";return"const float czm_oneOverTwoPi = 0.15915494309189535;\n"}),r("Shaders/Builtin/Constants/pi",[],function(){"use strict";return"const float czm_pi = 3.141592653589793;\n"}),r("Shaders/Builtin/Constants/piOverFour",[],function(){"use strict";return"const float czm_piOverFour = 0.7853981633974483;\n"}),r("Shaders/Builtin/Constants/piOverSix",[],function(){"use strict";return"const float czm_piOverSix = 0.5235987755982988;\n"}),r("Shaders/Builtin/Constants/piOverThree",[],function(){"use strict";return"const float czm_piOverThree = 1.0471975511965976;\n"}),r("Shaders/Builtin/Constants/piOverTwo",[],function(){"use strict";return"const float czm_piOverTwo = 1.5707963267948966;\n"}),r("Shaders/Builtin/Constants/radiansPerDegree",[],function(){"use strict";return"const float czm_radiansPerDegree = 0.017453292519943295;\n"}),r("Shaders/Builtin/Constants/sceneMode2D",[],function(){"use strict";return"const float czm_sceneMode2D = 2.0;\n"}),r("Shaders/Builtin/Constants/sceneMode3D",[],function(){"use strict";return"const float czm_sceneMode3D = 3.0;\n"}),r("Shaders/Builtin/Constants/sceneModeColumbusView",[],function(){"use strict";return"const float czm_sceneModeColumbusView = 1.0;\n"}),r("Shaders/Builtin/Constants/sceneModeMorphing",[],function(){"use strict";return"const float czm_sceneModeMorphing = 0.0;\n"}),r("Shaders/Builtin/Constants/solarRadius",[],function(){"use strict";return"const float czm_solarRadius = 695500000.0;\n"}),r("Shaders/Builtin/Constants/threePiOver2",[],function(){"use strict";return"const float czm_threePiOver2 = 4.71238898038469;\n"}),r("Shaders/Builtin/Constants/twoPi",[],function(){"use strict";return"const float czm_twoPi = 6.283185307179586;\n"}),r("Shaders/Builtin/Constants/webMercatorMaxLatitude",[],function(){"use strict";return"const float czm_webMercatorMaxLatitude = 1.4844222297453324;\n"}),r("Shaders/Builtin/Structs/depthRangeStruct",[],function(){"use strict";return"struct czm_depthRangeStruct\n{\nfloat near;\nfloat far;\n};\n"}),r("Shaders/Builtin/Structs/ellipsoid",[],function(){"use strict";return"struct czm_ellipsoid\n{\nvec3 center;\nvec3 radii;\nvec3 inverseRadii;\nvec3 inverseRadiiSquared;\n};\n"}),r("Shaders/Builtin/Structs/material",[],function(){"use strict";return"struct czm_material\n{\nvec3 diffuse;\nfloat specular;\nfloat shininess;\nvec3 normal;\nvec3 emission;\nfloat alpha;\n};\n"}),r("Shaders/Builtin/Structs/materialInput",[],function(){"use strict";return"struct czm_materialInput\n{\nfloat s;\nvec2 st;\nvec3 str;\nvec3 normalEC;\nmat3 tangentToEyeMatrix;\nvec3 positionToEyeEC;\n};\n"}),r("Shaders/Builtin/Structs/ray",[],function(){"use strict";return"struct czm_ray\n{\nvec3 origin;\nvec3 direction;\n};\n"}),r("Shaders/Builtin/Structs/raySegment",[],function(){"use strict";return"struct czm_raySegment\n{\nfloat start;\nfloat stop;\n};\nconst czm_raySegment czm_emptyRaySegment = czm_raySegment(-czm_infinity, -czm_infinity);\nconst czm_raySegment czm_fullRaySegment = czm_raySegment(0.0, czm_infinity);\n"}),r("Shaders/Builtin/Functions/RGBToXYZ",[],function(){"use strict";return"vec3 czm_RGBToXYZ(vec3 rgb)\n{\nconst mat3 RGB2XYZ = mat3(0.4124, 0.2126, 0.0193,\n0.3576, 0.7152, 0.1192,\n0.1805, 0.0722, 0.9505);\nvec3 xyz = RGB2XYZ * rgb;\nvec3 Yxy;\nYxy.r = xyz.g;\nfloat temp = dot(vec3(1.0), xyz);\nYxy.gb = xyz.rg / temp;\nreturn Yxy;\n}\n"}),r("Shaders/Builtin/Functions/XYZToRGB",[],function(){"use strict";return"vec3 czm_XYZToRGB(vec3 Yxy)\n{\nconst mat3 XYZ2RGB = mat3( 3.2405, -0.9693,  0.0556,\n-1.5371,  1.8760, -0.2040,\n-0.4985,  0.0416,  1.0572);\nvec3 xyz;\nxyz.r = Yxy.r * Yxy.g / Yxy.b;\nxyz.g = Yxy.r;\nxyz.b = Yxy.r * (1.0 - Yxy.g - Yxy.b) / Yxy.b;\nreturn XYZ2RGB * xyz;\n}\n"}),r("Shaders/Builtin/Functions/alphaWeight",[],function(){"use strict";return"float czm_alphaWeight(float a)\n{\nfloat z;\nif (czm_sceneMode != czm_sceneMode2D)\n{\nfloat x = 2.0 * (gl_FragCoord.x - czm_viewport.x) / czm_viewport.z - 1.0;\nfloat y = 2.0 * (gl_FragCoord.y - czm_viewport.y) / czm_viewport.w - 1.0;\nfloat z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\nvec4 q = vec4(x, y, z, 1.0);\nq /= gl_FragCoord.w;\nz = (czm_inverseProjectionOIT * q).z;\n}\nelse\n{\nz = gl_FragCoord.z * (czm_currentFrustum.y - czm_currentFrustum.x) + czm_currentFrustum.x;\n}\nreturn pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 100.0 / (1e-5 + pow(abs(z) / 10.0, 3.0) + pow(abs(z) / 200.0, 6.0))));\n}\n"}),r("Shaders/Builtin/Functions/antialias",[],function(){"use strict";return"vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor)\n{\nfloat val1 = clamp(dist / fuzzFactor, 0.0, 1.0);\nfloat val2 = clamp((dist - 0.5) / fuzzFactor, 0.0, 1.0);\nval1 = val1 * (1.0 - val2);\nval1 = val1 * val1 * (3.0 - (2.0 * val1));\nval1 = pow(val1, 0.5);\nvec4 midColor = (color1 + color2) * 0.5;\nreturn mix(midColor, currentColor, val1);\n}\nvec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist)\n{\nreturn czm_antialias(color1, color2, currentColor, dist, 0.1);\n}\n"}),r("Shaders/Builtin/Functions/columbusViewMorph",[],function(){"use strict";return"vec4 czm_columbusViewMorph(vec4 position2D, vec4 position3D, float time)\n{\nvec3 p = mix(position2D.xyz, position3D.xyz, time);\nreturn vec4(p, 1.0);\n}\n"}),r("Shaders/Builtin/Functions/computePosition",[],function(){"use strict";return"vec4 czm_computePosition();\n"}),r("Shaders/Builtin/Functions/cosineAndSine",[],function(){"use strict";return"vec2 cordic(float angle)\n{\nvec2 vector = vec2(6.0725293500888267e-1, 0.0);\nfloat sense = (angle < 0.0) ? -1.0 : 1.0;\nmat2 rotation = mat2(1.0, sense, -sense, 1.0);\nvector = rotation * vector;\nangle -= sense * 7.8539816339744828e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfloat factor = sense * 5.0e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.6364760900080609e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.5e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.4497866312686414e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.25e-1;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.2435499454676144e-1;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 6.25e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 6.2418809995957350e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.125e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.1239833430268277e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.5625e-2;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.5623728620476831e-2;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 7.8125e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 7.8123410601011111e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.90625e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.9062301319669718e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.953125e-3;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.9531225164788188e-3;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 9.765625e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 9.7656218955931946e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 4.8828125e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.8828121119489829e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.44140625e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.4414062014936177e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.220703125e-4;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.2207031189367021e-4;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 6.103515625e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 6.1035156174208773e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.0517578125e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.0517578115526096e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.52587890625e-5;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.5258789061315762e-5;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 7.62939453125e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 7.6293945311019700e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 3.814697265625e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 3.8146972656064961e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.9073486328125e-6;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 1.9073486328101870e-6;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 9.5367431640625e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 9.5367431640596084e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 4.76837158203125e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 4.7683715820308884e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 2.384185791015625e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nangle -= sense * 2.3841857910155797e-7;\nsense = (angle < 0.0) ? -1.0 : 1.0;\nfactor = sense * 1.1920928955078125e-7;\nrotation[0][1] = factor;\nrotation[1][0] = -factor;\nvector = rotation * vector;\nreturn vector;\n}\nvec2 czm_cosineAndSine(float angle)\n{\nif (angle < -czm_piOverTwo || angle > czm_piOverTwo)\n{\nif (angle < 0.0)\n{\nreturn -cordic(angle + czm_pi);\n}\nelse\n{\nreturn -cordic(angle - czm_pi);\n}\n}\nelse\n{\nreturn cordic(angle);\n}\n}\n"}),r("Shaders/Builtin/Functions/eastNorthUpToEyeCoordinates",[],function(){"use strict";return"mat3 czm_eastNorthUpToEyeCoordinates(vec3 positionMC, vec3 normalEC)\n{\nvec3 tangentMC = normalize(vec3(-positionMC.y, positionMC.x, 0.0));\nvec3 tangentEC = normalize(czm_normal3D * tangentMC);\nvec3 bitangentEC = normalize(cross(normalEC, tangentEC));\nreturn mat3(\ntangentEC.x,   tangentEC.y,   tangentEC.z,\nbitangentEC.x, bitangentEC.y, bitangentEC.z,\nnormalEC.x,    normalEC.y,    normalEC.z);\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidContainsPoint",[],function(){"use strict";return"bool czm_ellipsoidContainsPoint(czm_ellipsoid ellipsoid, vec3 point)\n{\nvec3 scaled = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(point, 1.0)).xyz;\nreturn (dot(scaled, scaled) <= 1.0);\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidNew",[],function(){"use strict";return"czm_ellipsoid czm_ellipsoidNew(vec3 center, vec3 radii)\n{\nvec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\nvec3 inverseRadiiSquared = inverseRadii * inverseRadii;\nczm_ellipsoid temp = czm_ellipsoid(center, radii, inverseRadii, inverseRadiiSquared);\nreturn temp;\n}\n"}),r("Shaders/Builtin/Functions/ellipsoidWgs84TextureCoordinates",[],function(){"use strict";return"vec2 czm_ellipsoidWgs84TextureCoordinates(vec3 normal)\n{\nreturn vec2(atan(normal.y, normal.x) * czm_oneOverTwoPi + 0.5, asin(normal.z) * czm_oneOverPi + 0.5);\n}\n"}),r("Shaders/Builtin/Functions/equalsEpsilon",[],function(){"use strict";return"bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec4(epsilon)));\n}\nbool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec3(epsilon)));\n}\nbool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {\nreturn all(lessThanEqual(abs(left - right), vec2(epsilon)));\n}\nbool czm_equalsEpsilon(float left, float right, float epsilon) {\nreturn (abs(left - right) <= epsilon);\n}\n"}),r("Shaders/Builtin/Functions/eyeOffset",[],function(){"use strict";return"vec4 czm_eyeOffset(vec4 positionEC, vec3 eyeOffset)\n{\nvec4 p = positionEC;\nvec4 zEyeOffset = normalize(p) * eyeOffset.z;\np.xy += eyeOffset.xy + zEyeOffset.xy;\np.z += zEyeOffset.z;\nreturn p;\n}\n"}),r("Shaders/Builtin/Functions/eyeToWindowCoordinates",[],function(){"use strict";return"vec4 czm_eyeToWindowCoordinates(vec4 positionEC)\n{\nvec4 q = czm_projection * positionEC;\nq.xyz /= q.w;\nq.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz;\nreturn q;\n}\n"}),r("Shaders/Builtin/Functions/geodeticSurfaceNormal",[],function(){"use strict";return"vec3 czm_geodeticSurfaceNormal(vec3 positionOnEllipsoid, vec3 ellipsoidCenter, vec3 oneOverEllipsoidRadiiSquared)\n{\nreturn normalize((positionOnEllipsoid - ellipsoidCenter) * oneOverEllipsoidRadiiSquared);\n}\n"}),r("Shaders/Builtin/Functions/getDefaultMaterial",[],function(){"use strict";return"czm_material czm_getDefaultMaterial(czm_materialInput materialInput)\n{\nczm_material material;\nmaterial.diffuse = vec3(0.0);\nmaterial.specular = 0.0;\nmaterial.shininess = 1.0;\nmaterial.normal = materialInput.normalEC;\nmaterial.emission = vec3(0.0);\nmaterial.alpha = 1.0;\nreturn material;\n}\n"}),r("Shaders/Builtin/Functions/getLambertDiffuse",[],function(){"use strict";return"float czm_getLambertDiffuse(vec3 lightDirectionEC, vec3 normalEC)\n{\nreturn max(dot(lightDirectionEC, normalEC), 0.0);\n}\n"}),r("Shaders/Builtin/Functions/getSpecular",[],function(){"use strict";return"float czm_getSpecular(vec3 lightDirectionEC, vec3 toEyeEC, vec3 normalEC, float shininess)\n{\nvec3 toReflectedLight = reflect(-lightDirectionEC, normalEC);\nfloat specular = max(dot(toReflectedLight, toEyeEC), 0.0);\nreturn pow(specular, shininess);\n}\n"}),r("Shaders/Builtin/Functions/getWaterNoise",[],function(){"use strict";return"vec4 czm_getWaterNoise(sampler2D normalMap, vec2 uv, float time, float angleInRadians)\n{\nfloat cosAngle = cos(angleInRadians);\nfloat sinAngle = sin(angleInRadians);\nvec2 s0 = vec2(1.0/17.0, 0.0);\nvec2 s1 = vec2(-1.0/29.0, 0.0);\nvec2 s2 = vec2(1.0/101.0, 1.0/59.0);\nvec2 s3 = vec2(-1.0/109.0, -1.0/57.0);\ns0 = vec2((cosAngle * s0.x) - (sinAngle * s0.y), (sinAngle * s0.x) + (cosAngle * s0.y));\ns1 = vec2((cosAngle * s1.x) - (sinAngle * s1.y), (sinAngle * s1.x) + (cosAngle * s1.y));\ns2 = vec2((cosAngle * s2.x) - (sinAngle * s2.y), (sinAngle * s2.x) + (cosAngle * s2.y));\ns3 = vec2((cosAngle * s3.x) - (sinAngle * s3.y), (sinAngle * s3.x) + (cosAngle * s3.y));\nvec2 uv0 = (uv/103.0) + (time * s0);\nvec2 uv1 = uv/107.0 + (time * s1) + vec2(0.23);\nvec2 uv2 = uv/vec2(897.0, 983.0) + (time * s2) + vec2(0.51);\nvec2 uv3 = uv/vec2(991.0, 877.0) + (time * s3) + vec2(0.71);\nuv0 = fract(uv0);\nuv1 = fract(uv1);\nuv2 = fract(uv2);\nuv3 = fract(uv3);\nvec4 noise = (texture2D(normalMap, uv0)) +\n(texture2D(normalMap, uv1)) +\n(texture2D(normalMap, uv2)) +\n(texture2D(normalMap, uv3));\nreturn ((noise / 4.0) - 0.5) * 2.0;\n}\n"}),r("Shaders/Builtin/Functions/getWgs84EllipsoidEC",[],function(){"use strict";return"czm_ellipsoid czm_getWgs84EllipsoidEC()\n{\nvec3 radii = vec3(6378137.0, 6378137.0, 6356752.314245);\nvec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\nvec3 inverseRadiiSquared = inverseRadii * inverseRadii;\nczm_ellipsoid temp = czm_ellipsoid(czm_view[3].xyz, radii, inverseRadii, inverseRadiiSquared);\nreturn temp;\n}\n"}),r("Shaders/Builtin/Functions/hue",[],function(){"use strict";return"vec3 czm_hue(vec3 rgb, float adjustment)\n{\nconst mat3 toYIQ = mat3(0.299,     0.587,     0.114,\n0.595716, -0.274453, -0.321263,\n0.211456, -0.522591,  0.311135);\nconst mat3 toRGB = mat3(1.0,  0.9563,  0.6210,\n1.0, -0.2721, -0.6474,\n1.0, -1.107,   1.7046);\nvec3 yiq = toYIQ * rgb;\nfloat hue = atan(yiq.z, yiq.y) + adjustment;\nfloat chroma = sqrt(yiq.z * yiq.z + yiq.y * yiq.y);\nvec3 color = vec3(yiq.x, chroma * cos(hue), chroma * sin(hue));\nreturn toRGB * color;\n}\n"}),r("Shaders/Builtin/Functions/isEmpty",[],function(){"use strict";return"bool czm_isEmpty(czm_raySegment interval)\n{\nreturn (interval.stop < 0.0);\n}\n"}),r("Shaders/Builtin/Functions/isFull",[],function(){"use strict";return"bool czm_isFull(czm_raySegment interval)\n{\nreturn (interval.start == 0.0 && interval.stop == czm_infinity);\n}\n"}),r("Shaders/Builtin/Functions/latitudeToWebMercatorFraction",[],function(){"use strict";return"float czm_latitudeToWebMercatorFraction(float latitude, float southMercatorYLow, float southMercatorYHigh, float oneOverMercatorHeight)\n{\nfloat sinLatitude = czm_cosineAndSine(latitude).y;\nfloat mercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\nfloat t1 = 0.0 - southMercatorYLow;\nfloat e = t1 - 0.0;\nfloat t2 = ((-southMercatorYLow - e) + (0.0 - (t1 - e))) + mercatorY - southMercatorYHigh;\nfloat highDifference = t1 + t2;\nfloat lowDifference = t2 - (highDifference - t1);\nreturn highDifference * oneOverMercatorHeight + lowDifference * oneOverMercatorHeight;\n}\n"}),r("Shaders/Builtin/Functions/luminance",[],function(){"use strict";return"float czm_luminance(vec3 rgb)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nreturn dot(rgb, W);\n}\n"}),r("Shaders/Builtin/Functions/modelToWindowCoordinates",[],function(){"use strict";return"vec4 czm_modelToWindowCoordinates(vec4 position)\n{\nvec4 q = czm_modelViewProjection * position;\nq.xyz /= q.w;\nq.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz;\nreturn q;\n}\n"}),r("Shaders/Builtin/Functions/multiplyWithColorBalance",[],function(){"use strict";return"vec3 czm_multiplyWithColorBalance(vec3 left, vec3 right)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nvec3 target = left * right;\nfloat leftLuminance = dot(left, W);\nfloat rightLuminance = dot(right, W);\nfloat targetLuminance = dot(target, W);\nreturn ((leftLuminance + rightLuminance) / (2.0 * targetLuminance)) * target;\n}\n"}),r("Shaders/Builtin/Functions/octDecode",[],function(){"use strict";return"vec3 czm_octDecode(vec2 encoded)\n{\nvec3 v = vec3(encoded.x, encoded.y, 1.0 - abs(encoded.x) - abs(encoded.y));\nif (v.z < 0.0)\n{\nv.xy = (1.0 - abs(v.yx)) * czm_signNotZero(v.xy);\n}\nreturn normalize(v);\n}\n"}),r("Shaders/Builtin/Functions/phong",[],function(){"use strict";return"float czm_private_getLambertDiffuseOfMaterial(vec3 lightDirectionEC, czm_material material)\n{\nreturn czm_getLambertDiffuse(lightDirectionEC, material.normal);\n}\nfloat czm_private_getSpecularOfMaterial(vec3 lightDirectionEC, vec3 toEyeEC, czm_material material)\n{\nreturn czm_getSpecular(lightDirectionEC, toEyeEC, material.normal, material.shininess);\n}\nvec4 czm_phong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 0.0, 1.0), material) + czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 1.0, 0.0), material);\nfloat specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material) + czm_private_getSpecularOfMaterial(czm_moonDirectionEC, toEye, material);\nvec3 materialDiffuse = material.diffuse * 0.5;\nvec3 ambient = materialDiffuse;\nvec3 color = ambient + material.emission;\ncolor += materialDiffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\nvec4 czm_private_phong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_private_getLambertDiffuseOfMaterial(czm_sunDirectionEC, material);\nfloat specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material);\nvec3 ambient = vec3(0.0);\nvec3 color = ambient + material.emission;\ncolor += material.diffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\n"}),r("Shaders/Builtin/Functions/pointAlongRay",[],function(){"use strict";return"vec3 czm_pointAlongRay(czm_ray ray, float time)\n{\nreturn ray.origin + (time * ray.direction);\n}\n"}),r("Shaders/Builtin/Functions/rayEllipsoidIntersectionInterval",[],function(){"use strict";return"czm_raySegment czm_rayEllipsoidIntersectionInterval(czm_ray ray, czm_ellipsoid ellipsoid)\n{\nvec3 q = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.origin, 1.0)).xyz;\nvec3 w = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.direction, 0.0)).xyz;\nq = q - ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ellipsoid.center, 1.0)).xyz;\nfloat q2 = dot(q, q);\nfloat qw = dot(q, w);\nif (q2 > 1.0)\n{\nif (qw >= 0.0)\n{\nreturn czm_emptyRaySegment;\n}\nelse\n{\nfloat qw2 = qw * qw;\nfloat difference = q2 - 1.0;\nfloat w2 = dot(w, w);\nfloat product = w2 * difference;\nif (qw2 < product)\n{\nreturn czm_emptyRaySegment;\n}\nelse if (qw2 > product)\n{\nfloat discriminant = qw * qw - product;\nfloat temp = -qw + sqrt(discriminant);\nfloat root0 = temp / w2;\nfloat root1 = difference / temp;\nif (root0 < root1)\n{\nczm_raySegment i = czm_raySegment(root0, root1);\nreturn i;\n}\nelse\n{\nczm_raySegment i = czm_raySegment(root1, root0);\nreturn i;\n}\n}\nelse\n{\nfloat root = sqrt(difference / w2);\nczm_raySegment i = czm_raySegment(root, root);\nreturn i;\n}\n}\n}\nelse if (q2 < 1.0)\n{\nfloat difference = q2 - 1.0;\nfloat w2 = dot(w, w);\nfloat product = w2 * difference;\nfloat discriminant = qw * qw - product;\nfloat temp = -qw + sqrt(discriminant);\nczm_raySegment i = czm_raySegment(0.0, temp / w2);\nreturn i;\n}\nelse\n{\nif (qw < 0.0)\n{\nfloat w2 = dot(w, w);\nczm_raySegment i = czm_raySegment(0.0, -qw / w2);\nreturn i;\n}\nelse\n{\nreturn czm_emptyRaySegment;\n}\n}\n}\n"}),r("Shaders/Builtin/Functions/saturation",[],function(){"use strict";return"vec3 czm_saturation(vec3 rgb, float adjustment)\n{\nconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\nvec3 intensity = vec3(dot(rgb, W));\nreturn mix(intensity, rgb, adjustment);\n}\n"}),r("Shaders/Builtin/Functions/signNotZero",[],function(){"use strict";return"float czm_signNotZero(float value)\n{\nreturn value >= 0.0 ? 1.0 : -1.0;\n}\nvec2 czm_signNotZero(vec2 value)\n{\nreturn vec2(czm_signNotZero(value.x), czm_signNotZero(value.y));\n}\nvec3 czm_signNotZero(vec3 value)\n{\nreturn vec3(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z));\n}\nvec4 czm_signNotZero(vec4 value)\n{\nreturn vec4(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z), czm_signNotZero(value.w));\n}\n"}),r("Shaders/Builtin/Functions/tangentToEyeSpaceMatrix",[],function(){"use strict";return"mat3 czm_tangentToEyeSpaceMatrix(vec3 normalEC, vec3 tangentEC, vec3 binormalEC)\n{\nvec3 normal = normalize(normalEC);\nvec3 tangent = normalize(tangentEC);\nvec3 binormal = normalize(binormalEC);\nreturn mat3(tangent.x,  tangent.y,  tangent.z,\nbinormal.x, binormal.y, binormal.z,\nnormal.x,   normal.y,   normal.z);\n}\n"}),r("Shaders/Builtin/Functions/translateRelativeToEye",[],function(){"use strict";return"vec4 czm_translateRelativeToEye(vec3 high, vec3 low)\n{\nvec3 highDifference = high - czm_encodedCameraPositionMCHigh;\nvec3 lowDifference = low - czm_encodedCameraPositionMCLow;\nreturn vec4(highDifference + lowDifference, 1.0);\n}\n"}),r("Shaders/Builtin/Functions/translucentPhong",[],function(){"use strict";return"vec4 czm_translucentPhong(vec3 toEye, czm_material material)\n{\nfloat diffuse = czm_getLambertDiffuse(vec3(0.0, 0.0, 1.0), material.normal);\ndiffuse += czm_getLambertDiffuse(vec3(0.0, 1.0, 0.0), material.normal);\ndiffuse = clamp(diffuse, 0.0, 1.0);\nfloat specular = czm_getSpecular(czm_sunDirectionEC, toEye, material.normal, material.shininess);\nspecular += czm_getSpecular(czm_moonDirectionEC, toEye, material.normal, material.shininess);\nvec3 materialDiffuse = material.diffuse * 0.5;\nvec3 ambient = materialDiffuse;\nvec3 color = ambient + material.emission;\ncolor += materialDiffuse * diffuse;\ncolor += material.specular * specular;\nreturn vec4(color, material.alpha);\n}\n"}),r("Shaders/Builtin/Functions/transpose",[],function(){"use strict";return"mat2 czm_transpose(mat2 matrix)\n{\nreturn mat2(\nmatrix[0][0], matrix[1][0],\nmatrix[0][1], matrix[1][1]);\n}\nmat3 czm_transpose(mat3 matrix)\n{\nreturn mat3(\nmatrix[0][0], matrix[1][0], matrix[2][0],\nmatrix[0][1], matrix[1][1], matrix[2][1],\nmatrix[0][2], matrix[1][2], matrix[2][2]);\n}\nmat4 czm_transpose(mat4 matrix)\n{\nreturn mat4(\nmatrix[0][0], matrix[1][0], matrix[2][0], matrix[3][0],\nmatrix[0][1], matrix[1][1], matrix[2][1], matrix[3][1],\nmatrix[0][2], matrix[1][2], matrix[2][2], matrix[3][2],\nmatrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]);\n}\n"}),r("Shaders/Builtin/Functions/windowToEyeCoordinates",[],function(){"use strict";return"vec4 czm_windowToEyeCoordinates(vec4 fragmentCoordinate)\n{\nfloat x = 2.0 * (fragmentCoordinate.x - czm_viewport.x) / czm_viewport.z - 1.0;\nfloat y = 2.0 * (fragmentCoordinate.y - czm_viewport.y) / czm_viewport.w - 1.0;\nfloat z = (fragmentCoordinate.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\nvec4 q = vec4(x, y, z, 1.0);\nq /= fragmentCoordinate.w;\nq = czm_inverseProjection * q;\nreturn q;\n}\n"}),r("Shaders/Builtin/CzmBuiltins",["./Constants/degreesPerRadian","./Constants/depthRange","./Constants/epsilon1","./Constants/epsilon2","./Constants/epsilon3","./Constants/epsilon4","./Constants/epsilon5","./Constants/epsilon6","./Constants/epsilon7","./Constants/infinity","./Constants/oneOverPi","./Constants/oneOverTwoPi","./Constants/pi","./Constants/piOverFour","./Constants/piOverSix","./Constants/piOverThree","./Constants/piOverTwo","./Constants/radiansPerDegree","./Constants/sceneMode2D","./Constants/sceneMode3D","./Constants/sceneModeColumbusView","./Constants/sceneModeMorphing","./Constants/solarRadius","./Constants/threePiOver2","./Constants/twoPi","./Constants/webMercatorMaxLatitude","./Structs/depthRangeStruct","./Structs/ellipsoid","./Structs/material","./Structs/materialInput","./Structs/ray","./Structs/raySegment","./Functions/RGBToXYZ","./Functions/XYZToRGB","./Functions/alphaWeight","./Functions/antialias","./Functions/columbusViewMorph","./Functions/computePosition","./Functions/cosineAndSine","./Functions/eastNorthUpToEyeCoordinates","./Functions/ellipsoidContainsPoint","./Functions/ellipsoidNew","./Functions/ellipsoidWgs84TextureCoordinates","./Functions/equalsEpsilon","./Functions/eyeOffset","./Functions/eyeToWindowCoordinates","./Functions/geodeticSurfaceNormal","./Functions/getDefaultMaterial","./Functions/getLambertDiffuse","./Functions/getSpecular","./Functions/getWaterNoise","./Functions/getWgs84EllipsoidEC","./Functions/hue","./Functions/isEmpty","./Functions/isFull","./Functions/latitudeToWebMercatorFraction","./Functions/luminance","./Functions/modelToWindowCoordinates","./Functions/multiplyWithColorBalance","./Functions/octDecode","./Functions/phong","./Functions/pointAlongRay","./Functions/rayEllipsoidIntersectionInterval","./Functions/saturation","./Functions/signNotZero","./Functions/tangentToEyeSpaceMatrix","./Functions/translateRelativeToEye","./Functions/translucentPhong","./Functions/transpose","./Functions/windowToEyeCoordinates"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht,dt,mt,pt,ft){"use strict";return{czm_degreesPerRadian:e,czm_depthRange:t,czm_epsilon1:r,czm_epsilon2:i,czm_epsilon3:n,czm_epsilon4:o,czm_epsilon5:a,czm_epsilon6:s,czm_epsilon7:l,czm_infinity:u,czm_oneOverPi:c,czm_oneOverTwoPi:h,czm_pi:d,czm_piOverFour:m,czm_piOverSix:p,czm_piOverThree:f,czm_piOverTwo:v,czm_radiansPerDegree:g,czm_sceneMode2D:_,czm_sceneMode3D:y,czm_sceneModeColumbusView:C,czm_sceneModeMorphing:w,czm_solarRadius:S,czm_threePiOver2:E,czm_twoPi:b,czm_webMercatorMaxLatitude:T,czm_depthRangeStruct:x,czm_ellipsoid:P,czm_material:A,czm_materialInput:M,czm_ray:D,czm_raySegment:I,czm_RGBToXYZ:R,czm_XYZToRGB:O,czm_alphaWeight:L,czm_antialias:N,czm_columbusViewMorph:B,czm_computePosition:F,czm_cosineAndSine:z,czm_eastNorthUpToEyeCoordinates:V,czm_ellipsoidContainsPoint:k,czm_ellipsoidNew:U,czm_ellipsoidWgs84TextureCoordinates:W,czm_equalsEpsilon:G,czm_eyeOffset:H,czm_eyeToWindowCoordinates:q,czm_geodeticSurfaceNormal:j,czm_getDefaultMaterial:Y,czm_getLambertDiffuse:X,czm_getSpecular:Z,czm_getWaterNoise:Q,czm_getWgs84EllipsoidEC:J,czm_hue:K,czm_isEmpty:$,czm_isFull:et,czm_latitudeToWebMercatorFraction:tt,czm_luminance:rt,czm_modelToWindowCoordinates:it,czm_multiplyWithColorBalance:nt,czm_octDecode:ot,czm_phong:at,czm_pointAlongRay:st,czm_rayEllipsoidIntersectionInterval:lt,czm_saturation:ut,czm_signNotZero:ct,czm_tangentToEyeSpaceMatrix:ht,czm_translateRelativeToEye:dt,czm_translucentPhong:mt,czm_transpose:pt,czm_windowToEyeCoordinates:ft}}),r("Renderer/ShaderProgram",["../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/RuntimeError","../Shaders/Builtin/CzmBuiltins","./AutomaticUniforms"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t){var r=t._gl,n=t._location;switch(t._activeUniform.type){case r.FLOAT:return function(){r.uniform1f(n,t.value)};case r.FLOAT_VEC2:return function(){var e=t.value;r.uniform2f(n,e.x,e.y)};case r.FLOAT_VEC3:return function(){var e=t.value;r.uniform3f(n,e.x,e.y,e.z)};case r.FLOAT_VEC4:return function(){var o=t.value;if(e(o.red))r.uniform4f(n,o.red,o.green,o.blue,o.alpha);else{if(!e(o.x))throw new i('Invalid vec4 value for uniform "'+t._activeUniform.name+'".');r.uniform4f(n,o.x,o.y,o.z,o.w)}};case r.SAMPLER_2D:case r.SAMPLER_CUBE:return function(){r.activeTexture(r.TEXTURE0+t.textureUnitIndex),r.bindTexture(t.value._target,t.value._texture)};case r.INT:case r.BOOL:return function(){r.uniform1i(n,t.value)};case r.INT_VEC2:case r.BOOL_VEC2:return function(){var e=t.value;r.uniform2i(n,e.x,e.y)};case r.INT_VEC3:case r.BOOL_VEC3:return function(){var e=t.value;r.uniform3i(n,e.x,e.y,e.z)};case r.INT_VEC4:case r.BOOL_VEC4:return function(){var e=t.value;r.uniform4i(n,e.x,e.y,e.z,e.w)};case r.FLOAT_MAT2:return function(){r.uniformMatrix2fv(n,!1,o.toArray(t.value,T))};case r.FLOAT_MAT3:return function(){r.uniformMatrix3fv(n,!1,a.toArray(t.value,x))};case r.FLOAT_MAT4:return function(){r.uniformMatrix4fv(n,!1,s.toArray(t.value,P))};default:throw new l("Unrecognized uniform type: "+t._activeUniform.type+' for uniform "'+t._activeUniform.name+'".')}}function d(t){var r=t._gl,n=t._locations;switch(t._activeUniform.type){case r.FLOAT:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniform1f(n[o],e[o])};case r.FLOAT_VEC2:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform2f(n[o],a.x,a.y)}};case r.FLOAT_VEC3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform3f(n[o],a.x,a.y,a.z)}};case r.FLOAT_VEC4:return function(){for(var o=t.value,a=o.length,s=0;a>s;++s){var l=o[s];if(e(l.red))r.uniform4f(n[s],l.red,l.green,l.blue,l.alpha);else{if(!e(l.x))throw new i("Invalid vec4 value.");r.uniform4f(n[s],l.x,l.y,l.z,l.w)}}};case r.SAMPLER_2D:case r.SAMPLER_CUBE:return function(){for(var e=t.value,i=e.length,n=0;i>n;++n){var o=e[n],a=t.textureUnitIndex+n;r.activeTexture(r.TEXTURE0+a),r.bindTexture(o._target,o._texture)}};case r.INT:case r.BOOL:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniform1i(n[o],e[o])};case r.INT_VEC2:case r.BOOL_VEC2:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform2i(n[o],a.x,a.y)}};case r.INT_VEC3:case r.BOOL_VEC3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform3i(n[o],a.x,a.y,a.z)
}};case r.INT_VEC4:case r.BOOL_VEC4:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o){var a=e[o];r.uniform4i(n[o],a.x,a.y,a.z,a.w)}};case r.FLOAT_MAT2:return function(){for(var e=t.value,i=e.length,a=0;i>a;++a)r.uniformMatrix2fv(n[a],!1,o.toArray(e[a],T))};case r.FLOAT_MAT3:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniformMatrix3fv(n[o],!1,a.toArray(e[o],x))};case r.FLOAT_MAT4:return function(){for(var e=t.value,i=e.length,o=0;i>o;++o)r.uniformMatrix4fv(n[o],!1,s.toArray(e[o],P))};default:throw new l("Unrecognized uniform type: "+t._activeUniform.type)}}function m(e,t,r){e.useProgram(t);for(var i=0,n=r.length,o=0;n>o;++o)i=r[o]._setSampler(i);return e.useProgram(null),i}function p(e){var t=e.indexOf("#version");if(-1!==t){var r=e.indexOf("\n",t);if(-1!==t){var i=e.substring(t,r+1),n=e.substring(0,t)+"//"+e.substring(t);return{version:i,source:n}}}return{version:"",source:e}}function f(t,r,i){for(var n,o=0;o<i.length;++o)i[o].name===t&&(n=i[o]);if(!e(n)){var a=r.match(/\/\*\*[\s\S]*?\*\//gm);if(e(a)&&null!==a)for(o=0;o<a.length;++o){for(var s=a[o],l=s.match(/\n/gm).length,u="",c=0;l>c;++c)u+=0===c?"// Comment replaced to prevent problems when determining dependencies on built-in functions\n":"//\n";r=r.replace(s,u)}n={name:t,glslSource:r,dependsOn:[],requiredBy:[],evaluated:!1},i.push(n)}return n}function v(t,r){if(!t.evaluated){t.evaluated=!0;var i=t.glslSource.match(/\bczm_[a-zA-Z0-9_]*/g);e(i)&&null!==i&&(i=i.filter(function(e,t){return i.indexOf(e)===t}),i.forEach(function(e){if(e!==t.name&&I._czmBuiltinsAndUniforms.hasOwnProperty(e)){var i=f(e,I._czmBuiltinsAndUniforms[e],r);t.dependsOn.push(i),i.requiredBy.push(t),v(i,r)}}))}}function g(e){for(var t=[],r=[];e.length>0;){var n=e.pop();r.push(n),0===n.requiredBy.length&&t.push(n)}for(;t.length>0;){var o=t.shift();e.push(o);for(var a=0;a<o.dependsOn.length;++a){var s=o.dependsOn[a],l=s.requiredBy.indexOf(o);s.requiredBy.splice(l,1),0===s.requiredBy.length&&t.push(s)}}for(var u=[],c=0;c<r.length;++c)0!==r[c].requiredBy.length&&u.push(r[c]);if(0!==u.length){var h="A circular dependency was found in the following built-in functions/structs/constants: \n";for(c=0;c<u.length;++c)h=h+u[c].name+"\n";throw new i(h)}}function _(e){var t=[],r=f("main",e,t);v(r,t),g(t);for(var i="",n=t.length-1;n>=0;--n)i=i+t[n].glslSource+"\n";return i.replace(r.glslSource,"")}function y(){return"#ifdef GL_FRAGMENT_PRECISION_HIGH \n  precision highp float; \n#else \n  precision mediump float; \n#endif \n\n"}function C(t,r,i,n,o){var a,s=p(i),u=p(n),c=s.version+_(s.source)+"\n#line 0\n"+s.source,h=u.version+y()+_(u.source)+"\n#line 0\n"+u.source,d=t.createShader(t.VERTEX_SHADER);t.shaderSource(d,c),t.compileShader(d);var m=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(m,h),t.compileShader(m);var f=t.createProgram();if(t.attachShader(f,d),t.attachShader(f,m),t.deleteShader(d),t.deleteShader(m),e(o))for(var v in o)o.hasOwnProperty(v)&&t.bindAttribLocation(f,o[v],v);if(t.linkProgram(f),!t.getProgramParameter(f,t.LINK_STATUS)){if(!t.getShaderParameter(m,t.COMPILE_STATUS))throw a=t.getShaderInfoLog(m),t.deleteProgram(f),console.error("[GL] Fragment shader compile log: "+a),new l("Fragment shader failed to compile.  Compile log: "+a);if(!t.getShaderParameter(d,t.COMPILE_STATUS))throw a=t.getShaderInfoLog(d),t.deleteProgram(f),console.error("[GL] Vertex shader compile log: "+a),new l("Vertex shader failed to compile.  Compile log: "+a);throw a=t.getProgramInfoLog(f),t.deleteProgram(f),console.error("[GL] Shader program link log: "+a),new l("Program failed to link.  Link log: "+a)}return r&&(a=t.getShaderInfoLog(d),e(a)&&a.length>0&&console.log("[GL] Vertex shader compile log: "+a)),r&&(a=t.getShaderInfoLog(m),e(a)&&a.length>0&&console.log("[GL] Fragment shader compile log: "+a)),r&&(a=t.getProgramInfoLog(f),e(a)&&a.length>0&&console.log("[GL] Shader program link log: "+a)),f}function w(e,t,r){for(var i={},n=0;r>n;++n){var o=e.getActiveAttrib(t,n),a=e.getAttribLocation(t,o.name);i[o.name]={name:o.name,type:o.type,index:a}}return i}function S(t,r){for(var i={},n=[],o=[],a=t.getProgramParameter(r,t.ACTIVE_UNIFORMS),s=0;a>s;++s){var l=t.getActiveUniform(r,s),u="[0]",c=-1!==l.name.indexOf(u,l.name.length-u.length)?l.name.slice(0,l.name.length-3):l.name;if(0!==c.indexOf("gl_"))if(l.name.indexOf("[")<0){var h=t.getUniformLocation(r,c);if(null!==h){var d=t.getUniform(r,h),m=new A(t,l,c,h,d);i[c]=m,n.push(m),m._setSampler&&o.push(m)}}else{var p,f,v,g,_=c.indexOf("[");if(_>=0){if(p=i[c.slice(0,_)],!e(p))continue;f=p._locations,f.length<=1&&(v=p.value,g=t.getUniformLocation(r,c),null!==g&&(f.push(g),v.push(t.getUniform(r,g))))}else{f=[],v=[];for(var y=0;y<l.size;++y)g=t.getUniformLocation(r,c+"["+y+"]"),null!==g&&(f.push(g),v.push(t.getUniform(r,g)));p=new M(t,l,c,f,v),i[c]=p,n.push(p),p._setSampler&&o.push(p)}}}return{uniformsByName:i,uniforms:n,samplerUniforms:o}}function E(e){var t=[],r={};for(var i in e)if(e.hasOwnProperty(i)){var n=c[i];n?t.push({uniform:e[i],automaticUniform:n}):r[i]=e[i]}return{automaticUniforms:t,manualUniforms:r}}function b(t){if(!e(t._program)){var r=t._gl,i=C(r,t._logShaderCompilation,t.vertexShaderSource,t.fragmentShaderSource,t._attributeLocations),n=r.getProgramParameter(i,r.ACTIVE_ATTRIBUTES),o=S(r,i),a=E(o.uniformsByName);t._program=i,t._numberOfVertexAttributes=n,t._vertexAttributes=w(r,i,n),t._uniformsByName=o.uniformsByName,t._uniforms=o.uniforms,t._automaticUniforms=a.automaticUniforms,t._manualUniforms=a.manualUniforms,t.maximumTextureUnitIndex=m(r,i,o.samplerUniforms)}}var T,x,P;n.supportsTypedArrays()&&(T=new Float32Array(4),x=new Float32Array(9),P=new Float32Array(16));var A=function(e,t,r,i,n){this.value=n,this._gl=e,this._activeUniform=t,this._uniformName=r,this._location=i,this.textureUnitIndex=void 0,this._set=h(this),(t.type===e.SAMPLER_2D||t.type===e.SAMPLER_CUBE)&&(this._setSampler=function(t){return this.textureUnitIndex=t,e.uniform1i(i,t),t+1})};t(A.prototype,{name:{get:function(){return this._uniformName}},datatype:{get:function(){return this._activeUniform.type}}});var M=function(e,t,r,i,n){this._gl=e,this._activeUniform=t,this._uniformName=r,this.value=n,this._locations=i,this.textureUnitIndex=void 0,this._set=d(this),(t.type===e.SAMPLER_2D||t.type===e.SAMPLER_CUBE)&&(this._setSampler=function(t){this.textureUnitIndex=t;for(var r=i.length,n=0;r>n;++n){var o=t+n;e.uniform1i(i[n],o)}return t+r})};t(M.prototype,{name:{get:function(){return this._uniformName}},datatype:{get:function(){return this._activeUniform.type}}});var D=0,I=function(e,t,r,i,n){this._gl=e,this._logShaderCompilation=t,this._attributeLocations=n,this._program=void 0,this._numberOfVertexAttributes=void 0,this._vertexAttributes=void 0,this._uniformsByName=void 0,this._uniforms=void 0,this._automaticUniforms=void 0,this._manualUniforms=void 0,this._cachedShader=void 0,this.maximumTextureUnitIndex=void 0,this._vertexShaderSource=r,this._fragmentShaderSource=i,this.id=D++};t(I.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},vertexAttributes:{get:function(){return b(this),this._vertexAttributes}},numberOfVertexAttributes:{get:function(){return b(this),this._numberOfVertexAttributes}},allUniforms:{get:function(){return b(this),this._uniformsByName}},manualUniforms:{get:function(){return b(this),this._manualUniforms}}}),I._czmBuiltinsAndUniforms={};for(var R in u)u.hasOwnProperty(R)&&(I._czmBuiltinsAndUniforms[R]=u[R]);for(var O in c)if(c.hasOwnProperty(O)){var L=c[O];"function"==typeof L.getDeclaration&&(I._czmBuiltinsAndUniforms[O]=L.getDeclaration(O))}return I.prototype._bind=function(){b(this),this._gl.useProgram(this._program)},I.prototype._setUniforms=function(e,t,r){var n,o,a=this._uniforms,s=this._manualUniforms,l=this._automaticUniforms;if(e)for(var u in s)s.hasOwnProperty(u)&&(s[u].value=e[u]());for(n=l.length,o=0;n>o;++o)l[o].uniform.value=l[o].automaticUniform.getValue(t);for(n=a.length,o=0;n>o;++o)a[o]._set();if(r){var c=this._gl,h=this._program;if(c.validateProgram(h),!c.getProgramParameter(h,c.VALIDATE_STATUS))throw new i("Program validation failed.  Link log: "+c.getProgramInfoLog(h))}},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){return this._cachedShader.cache.releaseShaderProgram(this),void 0},I.prototype.finalDestroy=function(){return this._gl.deleteProgram(this._program),r(this)},I}),r("Renderer/ShaderCache",["../Core/defined","../Core/destroyObject","./ShaderProgram"],function(e,t,r){"use strict";var i=function(e){this._context=e,this._shaders={},this._shadersToRelease={}};return i.prototype.replaceShaderProgram=function(t,r,i,n){return e(t)&&t.destroy(),this.getShaderProgram(r,i,n)},i.prototype.getShaderProgram=function(e,t,i){var n,o=e+t+JSON.stringify(i);if(this._shaders[o])n=this._shaders[o],delete this._shadersToRelease[o];else{var a=this._context,s=new r(a._gl,a.logShaderCompilation,e,t,i);n={cache:this,shaderProgram:s,keyword:o,count:0},s._cachedShader=n,this._shaders[o]=n}return++n.count,n.shaderProgram},i.prototype.destroyReleasedShaderPrograms=function(){var e=this._shadersToRelease;for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];delete this._shaders[r.keyword],r.shaderProgram.finalDestroy()}this._shadersToRelease={}},i.prototype.releaseShaderProgram=function(e){if(e){var t=e._cachedShader;t&&0===--t.count&&(this._shadersToRelease[t.keyword]=t)}},i.prototype.isDestroyed=function(){return!1},i.prototype.destroy=function(){var e=this._shaders;for(var r in e)e.hasOwnProperty(r)&&e[r].shaderProgram.finalDestroy();return t(this)},i}),r("Renderer/UniformState",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defined","../Core/defineProperties","../Core/EncodedCartesian3","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Simon1994PlanetaryPositions","../Core/Transforms","../Scene/SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t){c.clone(t,e._view),c.getRotation(t,e._viewRotation),e._view3DDirty=!0,e._inverseView3DDirty=!0,e._modelViewDirty=!0,e._modelView3DDirty=!0,e._modelViewRelativeToEyeDirty=!0,e._inverseModelViewDirty=!0,e._inverseModelView3DDirty=!0,e._viewProjectionDirty=!0,e._modelViewProjectionDirty=!0,e._modelViewProjectionRelativeToEyeDirty=!0,e._modelViewInfiniteProjectionDirty=!0,e._normalDirty=!0,e._inverseNormalDirty=!0,e._normal3DDirty=!0,e._inverseNormal3DDirty=!0}function f(e,t){c.clone(t,e._inverseView),c.getRotation(t,e._inverseViewRotation)}function v(e,t){c.clone(t,e._projection),e._inverseProjectionDirty=!0,e._inverseProjectionOITDirty=!0,e._viewProjectionDirty=!0,e._modelViewProjectionDirty=!0,e._modelViewProjectionRelativeToEyeDirty=!0}function g(e,t){c.clone(t,e._infiniteProjection),e._modelViewInfiniteProjectionDirty=!0}function _(e,t){r.clone(t.positionWC,e._cameraPosition),r.clone(t.directionWC,e._cameraDirection),r.clone(t.rightWC,e._cameraRight),r.clone(t.upWC,e._cameraUp),e._encodedCameraPositionMCDirty=!0}function y(e,t){o(d.computeIcrfToFixedMatrix(t.time,U))||(U=d.computeTemeToPseudoFixedMatrix(t.time,U));var i=h.computeSunPositionInEarthInertialFrame(t.time,e._sunPositionWC);u.multiplyByVector(U,i,i),r.normalize(i,e._sunDirectionWC),i=u.multiplyByVector(e.viewRotation3D,i,e._sunDirectionEC),r.normalize(i,i),i=h.computeMoonPositionInEarthInertialFrame(t.time,e._moonDirectionEC),u.multiplyByVector(U,i,i),u.multiplyByVector(e.viewRotation3D,i,i),r.normalize(i,i);var n=t.mapProjection,a=n.ellipsoid,s=a.cartesianToCartographic(e._sunPositionWC,W);n.project(s,e._sunPositionColumbusView)}function C(e){if(e._viewportDirty){var t=e._viewport;c.computeOrthographicOffCenter(t.x,t.x+t.width,t.y,t.y+t.height,0,1,e._viewportOrthographicMatrix),c.computeViewportTransformation(t,0,1,e._viewportTransformation),e._viewportDirty=!1}}function w(e){e._inverseProjectionDirty&&(e._inverseProjectionDirty=!1,c.inverse(e._projection,e._inverseProjection))}function S(e){e._inverseProjectionOITDirty&&(e._inverseProjectionOITDirty=!1,e._mode!==m.SCENE2D&&e._mode!==m.MORPHING?c.inverse(e._projection,e._inverseProjectionOIT):c.clone(c.IDENTITY,e._inverseProjectionOIT))}function E(e){e._modelViewDirty&&(e._modelViewDirty=!1,c.multiplyTransformation(e._view,e._model,e._modelView))}function b(e){e._modelView3DDirty&&(e._modelView3DDirty=!1,c.multiplyTransformation(e.view3D,e._model,e._modelView3D))}function T(e){e._inverseModelViewDirty&&(e._inverseModelViewDirty=!1,c.inverse(e.modelView,e._inverseModelView))}function x(e){e._inverseModelView3DDirty&&(e._inverseModelView3DDirty=!1,c.inverse(e.modelView3D,e._inverseModelView3D))}function P(e){e._viewProjectionDirty&&(e._viewProjectionDirty=!1,c.multiply(e._projection,e._view,e._viewProjection))}function A(e){e._inverseViewProjectionDirty&&(e._inverseViewProjectionDirty=!1,c.inverse(e.viewProjection,e._inverseViewProjection))}function M(e){e._modelViewProjectionDirty&&(e._modelViewProjectionDirty=!1,c.multiply(e._projection,e.modelView,e._modelViewProjection))}function D(e){if(e._modelViewRelativeToEyeDirty){e._modelViewRelativeToEyeDirty=!1;var t=e.modelView,r=e._modelViewRelativeToEye;r[0]=t[0],r[1]=t[1],r[2]=t[2],r[3]=t[3],r[4]=t[4],r[5]=t[5],r[6]=t[6],r[7]=t[7],r[8]=t[8],r[9]=t[9],r[10]=t[10],r[11]=t[11],r[12]=0,r[13]=0,r[14]=0,r[15]=t[15]}}function I(e){e._inverseModelViewProjectionDirty&&(e._inverseModelViewProjectionDirty=!1,c.inverse(e.modelViewProjection,e._inverseModelViewProjection))}function R(e){e._modelViewProjectionRelativeToEyeDirty&&(e._modelViewProjectionRelativeToEyeDirty=!1,c.multiply(e._projection,e.modelViewRelativeToEye,e._modelViewProjectionRelativeToEye))}function O(e){e._modelViewInfiniteProjectionDirty&&(e._modelViewInfiniteProjectionDirty=!1,c.multiply(e._infiniteProjection,e.modelView,e._modelViewInfiniteProjection))}function L(e){if(e._normalDirty){e._normalDirty=!1;var t=e._normal;c.getRotation(e.inverseModelView,t),u.transpose(t,t)}}function N(e){if(e._normal3DDirty){e._normal3DDirty=!1;var t=e._normal3D;c.getRotation(e.inverseModelView3D,t),u.transpose(t,t)}}function B(e){e._inverseNormalDirty&&(e._inverseNormalDirty=!1,c.getRotation(e.inverseModelView,e._inverseNormal))}function F(e){e._inverseNormal3DDirty&&(e._inverseNormal3DDirty=!1,c.getRotation(e.inverseModelView3D,e._inverseNormal3D))}function z(e){e._encodedCameraPositionMCDirty&&(e._encodedCameraPositionMCDirty=!1,c.multiplyByPoint(e.inverseModel,e._cameraPosition,G),s.fromCartesian(G,e._encodedCameraPositionMC))}function V(e,t,i,n,a,s,u,h){var p=H;p.x=e.y,p.y=e.z,p.z=e.x;var f=q;f.x=i.y,f.y=i.z,f.z=i.x;var v=j;v.x=n.y,v.y=n.z,v.z=n.x;var g=Y;g.x=t.y,g.y=t.z,g.z=t.x,s===m.SCENE2D&&(p.z=.5*a);var _=u.unproject(p,X);_.longitude=l.clamp(_.longitude,-Math.PI,Math.PI),_.latitude=l.clamp(_.latitude,-l.PI_OVER_TWO,l.PI_OVER_TWO);var y=u.ellipsoid,C=y.cartographicToCartesian(_,Z),w=d.eastNorthUpToFixedFrame(C,y,Q);return c.multiplyByPointAsVector(w,f,f),c.multiplyByPointAsVector(w,v,v),c.multiplyByPointAsVector(w,g,g),o(h)||(h=new c),h[0]=f.x,h[1]=v.x,h[2]=-g.x,h[3]=0,h[4]=f.y,h[5]=v.y,h[6]=-g.y,h[7]=0,h[8]=f.z,h[9]=v.z,h[10]=-g.z,h[11]=0,h[12]=-r.dot(f,C),h[13]=-r.dot(v,C),h[14]=r.dot(g,C),h[15]=1,h}var k=function(){this._viewport=new e,this._viewportCartesian4=new i,this._viewportDirty=!1,this._viewportOrthographicMatrix=c.clone(c.IDENTITY),this._viewportTransformation=c.clone(c.IDENTITY),this._model=c.clone(c.IDENTITY),this._view=c.clone(c.IDENTITY),this._inverseView=c.clone(c.IDENTITY),this._projection=c.clone(c.IDENTITY),this._infiniteProjection=c.clone(c.IDENTITY),this._entireFrustum=new t,this._currentFrustum=new t,this._frameState=void 0,this._temeToPseudoFixed=u.clone(c.IDENTITY),this._view3DDirty=!0,this._view3D=new c,this._inverseView3DDirty=!0,this._inverseView3D=new c,this._inverseModelDirty=!0,this._inverseModel=new c,this._inverseTransposeModelDirty=!0,this._inverseTransposeModel=new u,this._viewRotation=new u,this._inverseViewRotation=new u,this._viewRotation3D=new u,this._inverseViewRotation3D=new u,this._inverseProjectionDirty=!0,this._inverseProjection=new c,this._inverseProjectionOITDirty=!0,this._inverseProjectionOIT=new c,this._modelViewDirty=!0,this._modelView=new c,this._modelView3DDirty=!0,this._modelView3D=new c,this._modelViewRelativeToEyeDirty=!0,this._modelViewRelativeToEye=new c,this._inverseModelViewDirty=!0,this._inverseModelView=new c,this._inverseModelView3DDirty=!0,this._inverseModelView3D=new c,this._viewProjectionDirty=!0,this._viewProjection=new c,this._inverseViewProjectionDirty=!0,this._inverseViewProjection=new c,this._modelViewProjectionDirty=!0,this._modelViewProjection=new c,this._inverseModelViewProjectionDirty=!0,this._inverseModelViewProjection=new c,this._modelViewProjectionRelativeToEyeDirty=!0,this._modelViewProjectionRelativeToEye=new c,this._modelViewInfiniteProjectionDirty=!0,this._modelViewInfiniteProjection=new c,this._normalDirty=!0,this._normal=new u,this._normal3DDirty=!0,this._normal3D=new u,this._inverseNormalDirty=!0,this._inverseNormal=new u,this._inverseNormal3DDirty=!0,this._inverseNormal3D=new u,this._encodedCameraPositionMCDirty=!0,this._encodedCameraPositionMC=new s,this._cameraPosition=new r,this._sunPositionWC=new r,this._sunPositionColumbusView=new r,this._sunDirectionWC=new r,this._sunDirectionEC=new r,this._moonDirectionEC=new r,this._mode=void 0,this._mapProjection=void 0,this._cameraDirection=new r,this._cameraRight=new r,this._cameraUp=new r,this._frustum2DWidth=0,this._eyeHeight2D=new t,this._resolutionScale=1};a(k.prototype,{frameState:{get:function(){return this._frameState}},viewport:{get:function(){return this._viewport},set:function(t){if(!e.equals(t,this._viewport)){e.clone(t,this._viewport);var r=this._viewport,i=this._viewportCartesian4;i.x=r.x,i.y=r.y,i.z=r.width,i.w=r.height,this._viewportDirty=!0}}},viewportCartesian4:{get:function(){return this._viewportCartesian4}},viewportOrthographic:{get:function(){return C(this),this._viewportOrthographicMatrix}},viewportTransformation:{get:function(){return C(this),this._viewportTransformation}},model:{get:function(){return this._model},set:function(e){c.clone(e,this._model),this._modelView3DDirty=!0,this._inverseModelView3DDirty=!0,this._inverseModelDirty=!0,this._inverseTransposeModelDirty=!0,this._modelViewDirty=!0,this._inverseModelViewDirty=!0,this._viewProjectionDirty=!0,this._inverseViewProjectionDirty=!0,this._modelViewRelativeToEyeDirty=!0,this._inverseModelViewDirty=!0,this._modelViewProjectionDirty=!0,this._inverseModelViewProjectionDirty=!0,this._modelViewProjectionRelativeToEyeDirty=!0,this._modelViewInfiniteProjectionDirty=!0,this._normalDirty=!0,this._inverseNormalDirty=!0,this._normal3DDirty=!0,this._inverseNormal3DDirty=!0,this._encodedCameraPositionMCDirty=!0}},inverseModel:{get:function(){return this._inverseModelDirty&&(this._inverseModelDirty=!1,c.inverse(this._model,this._inverseModel)),this._inverseModel}},inverseTranposeModel:{get:function(){var e=this._inverseTransposeModel;return this._inverseTransposeModelDirty&&(this._inverseTransposeModelDirty=!1,c.getRotation(this.inverseModel,e),u.transpose(e,e)),e}},view:{get:function(){return this._view}},view3D:{get:function(){return this._view3DDirty&&(this._mode===m.SCENE3D?c.clone(this._view,this._view3D):V(this._cameraPosition,this._cameraDirection,this._cameraRight,this._cameraUp,this._frustum2DWidth,this._mode,this._mapProjection,this._view3D),c.getRotation(this._view3D,this._viewRotation3D),this._view3DDirty=!1),this._view3D}},viewRotation:{get:function(){return this._viewRotation}},viewRotation3D:{get:function(){return this.view3D,this._viewRotation3D}},inverseView:{get:function(){return this._inverseView}},inverseView3D:{get:function(){return this._inverseView3DDirty&&(c.inverseTransformation(this.view3D,this._inverseView3D),c.getRotation(this._inverseView3D,this._inverseViewRotation3D),this._inverseView3DDirty=!1),this._inverseView3D}},inverseViewRotation:{get:function(){return this._inverseViewRotation}},inverseViewRotation3D:{get:function(){return this.inverseView3D,this._inverseViewRotation3D}},projection:{get:function(){return this._projection}},inverseProjection:{get:function(){return w(this),this._inverseProjection}},inverseProjectionOIT:{get:function(){return S(this),this._inverseProjectionOIT}},infiniteProjection:{get:function(){return this._infiniteProjection}},modelView:{get:function(){return E(this),this._modelView}},modelView3D:{get:function(){return b(this),this._modelView3D}},modelViewRelativeToEye:{get:function(){return D(this),this._modelViewRelativeToEye}},inverseModelView:{get:function(){return T(this),this._inverseModelView}},inverseModelView3D:{get:function(){return x(this),this._inverseModelView3D}},viewProjection:{get:function(){return P(this),this._viewProjection}},inverseViewProjection:{get:function(){return A(this),this._inverseViewProjection}},modelViewProjection:{get:function(){return M(this),this._modelViewProjection}},inverseModelViewProjection:{get:function(){return I(this),this._inverseModelViewProjection}},modelViewProjectionRelativeToEye:{get:function(){return R(this),this._modelViewProjectionRelativeToEye}},modelViewInfiniteProjection:{get:function(){return O(this),this._modelViewInfiniteProjection}},normal:{get:function(){return L(this),this._normal}},normal3D:{get:function(){return N(this),this._normal3D}},inverseNormal:{get:function(){return B(this),this._inverseNormal}},inverseNormal3D:{get:function(){return F(this),this._inverseNormal3D}},entireFrustum:{get:function(){return this._entireFrustum}},currentFrustum:{get:function(){return this._currentFrustum}},eyeHeight2D:{get:function(){return this._eyeHeight2D}},sunPositionWC:{get:function(){return this._sunPositionWC}},sunPositionColumbusView:{get:function(){return this._sunPositionColumbusView}},sunDirectionWC:{get:function(){return this._sunDirectionWC}},sunDirectionEC:{get:function(){return this._sunDirectionEC}},moonDirectionEC:{get:function(){return this._moonDirectionEC}},encodedCameraPositionMCHigh:{get:function(){return z(this),this._encodedCameraPositionMC.high}},encodedCameraPositionMCLow:{get:function(){return z(this),this._encodedCameraPositionMC.low}},temeToPseudoFixedMatrix:{get:function(){return this._temeToPseudoFixed}},resolutionScale:{get:function(){return this._resolutionScale}}});var U=new u,W=new n;k.prototype.updateFrustum=function(e){v(this,e.projectionMatrix),o(e.infiniteProjectionMatrix)&&g(this,e.infiniteProjectionMatrix),this._currentFrustum.x=e.near,this._currentFrustum.y=e.far},k.prototype.update=function(e,t){this._mode=t.mode,this._mapProjection=t.mapProjection;var r=e._canvas;this._resolutionScale=r.width/r.clientWidth;var i=t.camera;p(this,i.viewMatrix),f(this,i.inverseViewMatrix),_(this,i),t.mode===m.SCENE2D?(this._frustum2DWidth=i.frustum.right-i.frustum.left,this._eyeHeight2D.x=.5*this._frustum2DWidth,this._eyeHeight2D.y=this._eyeHeight2D.x*this._eyeHeight2D.x):(this._frustum2DWidth=0,this._eyeHeight2D.x=0,this._eyeHeight2D.y=0),y(this,t),this._entireFrustum.x=i.frustum.near,this._entireFrustum.y=i.frustum.far,this.updateFrustum(i.frustum),this._frameState=t,this._temeToPseudoFixed=d.computeTemeToPseudoFixedMatrix(t.time,this._temeToPseudoFixed)};var G=new r,H=new r,q=new r,j=new r,Y=new r,X=new n,Z=new r,Q=new c;return k}),r("Renderer/VertexArray",["../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i,n,o){"use strict";function a(i,n,o){var a=r(n.vertexBuffer),s=r(n.value),l=n.value?n.value.length:n.componentsPerAttribute,u={index:t(n.index,o),enabled:t(n.enabled,!0),vertexBuffer:n.vertexBuffer,value:s?n.value.slice(0):void 0,componentsPerAttribute:l,componentDatatype:t(n.componentDatatype,e.FLOAT),normalize:t(n.normalize,!1),offsetInBytes:t(n.offsetInBytes,0),strideInBytes:t(n.strideInBytes,0)};if(a)u.vertexAttrib=function(e){e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer._getBuffer()),e.vertexAttribPointer(this.index,this.componentsPerAttribute,this.componentDatatype,this.normalize,this.strideInBytes,this.offsetInBytes),e.enableVertexAttribArray(this.index)},u.disableVertexAttribArray=function(e){e.disableVertexAttribArray(this.index)};else{switch(u.componentsPerAttribute){case 1:u.vertexAttrib=function(e){e.vertexAttrib1fv(this.index,this.value)};break;case 2:u.vertexAttrib=function(e){e.vertexAttrib2fv(this.index,this.value)};break;case 3:u.vertexAttrib=function(e){e.vertexAttrib3fv(this.index,this.value)};break;case 4:u.vertexAttrib=function(e){e.vertexAttrib4fv(this.index,this.value)}}u.disableVertexAttribArray=function(){}}i.push(u)}function s(e,t,i){for(var n=0;n<t.length;++n){var o=t[n];o.enabled&&o.vertexAttrib(e)}r(i)&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i._getBuffer())}var l=function(t,i,n,l){if(!r(n))throw new o("attributes is required.");var u,c=[],h=1;for(u=0;u<n.length;++u)a(c,n[u],u);for(u=0;u<c.length;++u){var d=c[u];if(r(d.vertexBuffer)){var m=d.strideInBytes||d.componentsPerAttribute*e.getSizeInBytes(d.componentDatatype);h=d.vertexBuffer.sizeInBytes/m;break}}for(var p={},f=0;f<c.length;++f){var v=c[f].index;if(p[v])throw new o("Index "+v+" is used by more than one attribute.");p[v]=!0}var g;r(i)&&(g=i.createVertexArrayOES(),i.bindVertexArrayOES(g),s(t,c,l),i.bindVertexArrayOES(null)),this._numberOfVertices=h,this._gl=t,this._vaoExtension=i,this._vao=g,this._attributes=c,this._indexBuffer=l};return i(l.prototype,{numberOfAttributes:{get:function(){return this._attributes.length}},numberOfVertices:{get:function(){return this._numberOfVertices}},indexBuffer:{get:function(){return this._indexBuffer}}}),l.prototype.getAttribute=function(e){return this._attributes[e]},l.prototype._bind=function(){r(this._vao)?this._vaoExtension.bindVertexArrayOES(this._vao):s(this._gl,this._attributes,this._indexBuffer)},l.prototype._unBind=function(){if(r(this._vao))this._vaoExtension.bindVertexArrayOES(null);else{for(var e=this._attributes,t=this._gl,i=0;i<e.length;++i){var n=e[i];n.enabled&&n.disableVertexAttribArray(t)}this._indexBuffer&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}},l.prototype.isDestroyed=function(){return!1},l.prototype.destroy=function(){for(var e=this._attributes,t=0;t<e.length;++t){var i=e[t].vertexBuffer;r(i)&&!i.isDestroyed()&&i.vertexArrayDestroyable&&i.destroy()}var o=this._indexBuffer;return r(o)&&!o.isDestroyed()&&o.vertexArrayDestroyable&&o.destroy(),r(this._vao)&&this._vaoExtension.deleteVertexArrayOES(this._vao),n(this)},l}),r("Renderer/Context",["../Core/clone","../Core/Color","../Core/ComponentDatatype","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Geometry","../Core/GeometryAttribute","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/PrimitiveType","../Core/RuntimeError","../Shaders/ViewportQuadVS","./Buffer","./BufferUsage","./ClearCommand","./CubeMap","./DrawCommand","./Framebuffer","./PassState","./PickFramebuffer","./PixelDatatype","./Renderbuffer","./RenderbufferFormat","./RenderState","./ShaderCache","./Texture","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap","./UniformState","./VertexArray"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B){"use strict";function F(e,t){var r="WebGL Error:  ";switch(t){case e.INVALID_ENUM:r+="INVALID_ENUM";break;case e.INVALID_VALUE:r+="INVALID_VALUE";break;case e.INVALID_OPERATION:r+="INVALID_OPERATION";break;case e.OUT_OF_MEMORY:r+="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:r+="CONTEXT_LOST_WEBGL lost";break;default:r+="Unknown ("+t+")"}return r}function z(e,t,r,i){for(var n=F(e,i)+": "+t.name+"(",o=0;o<r.length;++o)0!==o&&(n+=", "),n+=r[o];return n+=");"}function V(e,t,r){var i=e.getError();if(i!==e.NO_ERROR)throw new v(z(e,t,r,i))}function k(e,t,r){return{get:function(){var i=e[t];return r(e,"get: "+t,i),e[t]},set:function(i){e[t]=i,r(e,"set: "+t,i)}}}function U(e,t){function r(r){return function(){var i=r.apply(e,arguments);return t(e,r,arguments),i}}if(!t)return e;var i={};for(var n in e){var o=e[n];"function"==typeof o?i[n]=r(o):Object.defineProperty(i,n,k(e,n,t))}return i}function W(e,t){for(var r=t.length,i=0;r>i;++i){var n=e.getExtension(t[i]);if(n)return n}return void 0}function G(e,t,r,i){var n;"number"==typeof r?n=r:"object"==typeof r&&"number"==typeof r.byteLength&&(n=r.byteLength);var o=e.createBuffer();return e.bindBuffer(t,o),e.bufferData(t,r,i),e.bindBuffer(t,null),new _(e,t,n,i,o)}function H(e){if(e.validateFramebuffer){var t=e._gl,r=t.checkFramebufferStatus(t.FRAMEBUFFER);if(r!==t.FRAMEBUFFER_COMPLETE){var i;switch(r){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:i="Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.";break;case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:i="Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.";break;case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:i="Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.";break;case t.FRAMEBUFFER_UNSUPPORTED:i="Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions."}throw new l(i)}}}function q(e,t,r){var i=e._currentRenderState;i!==t&&(e._currentRenderState=t,M.partialApply(e._gl,i,t,r))}function j(e,t){if(t!==e._currentFramebuffer){e._currentFramebuffer=t;var r=it;if(o(t))t._bind(),H(e,t),r=t._getActiveColorAttachments();else{var i=e._gl;i.bindFramebuffer(i.FRAMEBUFFER,null)}e.drawBuffers&&e._drawBuffers.drawBuffersWEBGL(r)}}function Y(e,t,r,i,o,a){var s=n(n(o,r.renderState),e._defaultRenderState);j(e,t);var l=n(a,r.shaderProgram);l._bind(),e._maxFrameTextureUnitIndex=Math.max(e._maxFrameTextureUnitIndex,l.maximumTextureUnitIndex),q(e,s,i)}function X(e,t,r){var i=t.primitiveType,a=t.vertexArray,s=t.offset,l=t.count;e._us.model=n(t.modelMatrix,m.IDENTITY);var u=n(r,t.shaderProgram);u._setUniforms(t.uniformMap,e._us,e.validateShaderProgram);var c=a.indexBuffer;o(c)?(s*=c.bytesPerIndex,l=n(l,c.numberOfIndices),a._bind(),e._gl.drawElements(i,l,c.indexDatatype,s),a._unBind()):(l=n(l,a.numberOfVertices),a._bind(),e._gl.drawArrays(i,s,l),a._unBind())}function Z(e){return e.values.length/e.componentsPerAttribute}function Q(e){return r.getSizeInBytes(e.componentDatatype)*e.componentsPerAttribute}function J(e){var t,i,n,a=[];for(i in e)e.hasOwnProperty(i)&&o(e[i])&&o(e[i].values)&&(a.push(i),e[i].componentDatatype===r.DOUBLE&&(e[i].componentDatatype=r.FLOAT,e[i].values=r.createTypedArray(r.FLOAT,e[i].values)));var s,l=a.length;if(l>0)for(s=Z(e[a[0]]),t=1;l>t;++t){var u=Z(e[a[t]]);if(u!==s)throw new v("Each attribute list must have the same number of vertices.  Attribute "+a[t]+" has a different number of vertices "+"("+u.toString()+")"+" than attribute "+a[0]+" ("+s.toString()+").")}a.sort(function(t,i){return r.getSizeInBytes(e[i].componentDatatype)-r.getSizeInBytes(e[t].componentDatatype)});var c=0,h={};for(t=0;l>t;++t)i=a[t],n=e[i],h[i]=c,c+=Q(n);if(c>0){var d=r.getSizeInBytes(e[a[0]].componentDatatype),m=c%d;0!==m&&(c+=d-m);var p=s*c,f=new ArrayBuffer(p),g={};for(t=0;l>t;++t){i=a[t];var _=r.getSizeInBytes(e[i].componentDatatype);g[i]={pointer:r.createTypedArray(e[i].componentDatatype,f),index:h[i]/_,strideInComponentType:c/_}
}for(t=0;s>t;++t)for(var y=0;l>y;++y){i=a[y],n=e[i];for(var C=n.values,w=g[i],S=w.pointer,E=n.componentsPerAttribute,b=0;E>b;++b)S[w.index+b]=C[t*E+b];w.index+=w.strideInComponentType}return{buffer:f,offsetsInBytes:h,vertexSizeInBytes:c}}return void 0}function K(e,t,r){this._pickObjects=e,this.key=t,this.color=r}var $=function(r,a){if("undefined"==typeof WebGLRenderingContext)throw new v("The browser does not support WebGL.  Visit http://get.webgl.org.");this._canvas=r,a=e(a,!0),a=n(a,{}),a.allowTextureFilterAnisotropic=n(a.allowTextureFilterAnisotropic,!0);var s=n(a.webgl,{});if(s.alpha=n(s.alpha,!1),s.stencil=n(s.stencil,!1),s.failIfMajorPerformanceCaveat=n(s.failIfMajorPerformanceCaveat,!0),this._originalGLContext=r.getContext("webgl",s)||r.getContext("experimental-webgl",s)||void 0,!o(this._originalGLContext))throw new v("The browser supports WebGL, but initialization failed.");this._id=i(),this.validateFramebuffer=!1,this.validateShaderProgram=!1,this.logShaderCompilation=!1,this._throwOnWebGLError=!1,this._shaderCache=new D(this);var l=this._gl=this._originalGLContext;this._version=l.getParameter(l.VERSION),this._shadingLanguageVersion=l.getParameter(l.SHADING_LANGUAGE_VERSION),this._vendor=l.getParameter(l.VENDOR),this._renderer=l.getParameter(l.RENDERER),this._redBits=l.getParameter(l.RED_BITS),this._greenBits=l.getParameter(l.GREEN_BITS),this._blueBits=l.getParameter(l.BLUE_BITS),this._alphaBits=l.getParameter(l.ALPHA_BITS),this._depthBits=l.getParameter(l.DEPTH_BITS),this._stencilBits=l.getParameter(l.STENCIL_BITS),this._maximumCombinedTextureImageUnits=l.getParameter(l.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this._maximumCubeMapSize=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),this._maximumFragmentUniformVectors=l.getParameter(l.MAX_FRAGMENT_UNIFORM_VECTORS),this._maximumTextureImageUnits=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),this._maximumRenderbufferSize=l.getParameter(l.MAX_RENDERBUFFER_SIZE),this._maximumTextureSize=l.getParameter(l.MAX_TEXTURE_SIZE),this._maximumVaryingVectors=l.getParameter(l.MAX_VARYING_VECTORS),this._maximumVertexAttributes=l.getParameter(l.MAX_VERTEX_ATTRIBS),this._maximumVertexTextureImageUnits=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._maximumVertexUniformVectors=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),this._aliasedLineWidthRange=l.getParameter(l.ALIASED_LINE_WIDTH_RANGE),this._aliasedPointSizeRange=l.getParameter(l.ALIASED_POINT_SIZE_RANGE),this._maximumViewportDimensions=l.getParameter(l.MAX_VIEWPORT_DIMS),this._antialias=l.getContextAttributes().antialias,this._standardDerivatives=W(l,["OES_standard_derivatives"]),this._elementIndexUint=W(l,["OES_element_index_uint"]),this._depthTexture=W(l,["WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"]),this._textureFloat=W(l,["OES_texture_float"]);var u=a.allowTextureFilterAnisotropic?W(l,["EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic"]):void 0;this._textureFilterAnisotropic=u,this._maximumTextureFilterAnisotropy=o(u)?l.getParameter(u.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,this._vertexArrayObject=W(l,["OES_vertex_array_object"]),this._fragDepth=W(l,["EXT_frag_depth"]),this._drawBuffers=W(l,["WEBGL_draw_buffers"]),this._maximumDrawBuffers=o(this._drawBuffers)?l.getParameter(this._drawBuffers.MAX_DRAW_BUFFERS_WEBGL):1,this._maximumColorAttachments=o(this._drawBuffers)?l.getParameter(this._drawBuffers.MAX_COLOR_ATTACHMENTS_WEBGL):1;var c=l.getParameter(l.COLOR_CLEAR_VALUE);this._clearColor=new t(c[0],c[1],c[2],c[3]),this._clearDepth=l.getParameter(l.DEPTH_CLEAR_VALUE),this._clearStencil=l.getParameter(l.STENCIL_CLEAR_VALUE);var h=new N,d=new b(this),m=this.createRenderState();this._defaultPassState=d,this._defaultRenderState=m,this._defaultTexture=void 0,this._defaultCubeMap=void 0,this._us=h,this._currentRenderState=m,this._currentFramebuffer=void 0,this._maxFrameTextureUnitIndex=0,this._pickObjects={},this._nextPickColor=new Uint32Array(1),this.options=a,this.cache={},M.apply(l,m,d)},et={};a($.prototype,{id:{get:function(){return this._id}},canvas:{get:function(){return this._canvas}},shaderCache:{get:function(){return this._shaderCache}},uniformState:{get:function(){return this._us}},version:{get:function(){return this._version}},shadingLanguageVersion:{get:function(){return this._shadingLanguageVersion}},vendor:{get:function(){return this._vendor}},renderer:{get:function(){return this._renderer}},redBits:{get:function(){return this._redBits}},greenBits:{get:function(){return this._greenBits}},blueBits:{get:function(){return this._blueBits}},alphaBits:{get:function(){return this._alphaBits}},depthBits:{get:function(){return this._depthBits}},stencilBits:{get:function(){return this._stencilBits}},maximumCombinedTextureImageUnits:{get:function(){return this._maximumCombinedTextureImageUnits}},maximumCubeMapSize:{get:function(){return this._maximumCubeMapSize}},maximumFragmentUniformVectors:{get:function(){return this._maximumFragmentUniformVectors}},maximumTextureImageUnits:{get:function(){return this._maximumTextureImageUnits}},maximumRenderbufferSize:{get:function(){return this._maximumRenderbufferSize}},maximumTextureSize:{get:function(){return this._maximumTextureSize}},maximumVaryingVectors:{get:function(){return this._maximumVaryingVectors}},maximumVertexAttributes:{get:function(){return this._maximumVertexAttributes}},maximumVertexTextureImageUnits:{get:function(){return this._maximumVertexTextureImageUnits}},maximumVertexUniformVectors:{get:function(){return this._maximumVertexUniformVectors}},minimumAliasedLineWidth:{get:function(){return this._aliasedLineWidthRange[0]}},maximumAliasedLineWidth:{get:function(){return this._aliasedLineWidthRange[1]}},minimumAliasedPointSize:{get:function(){return this._aliasedPointSizeRange[0]}},maximumAliasedPointSize:{get:function(){return this._aliasedPointSizeRange[1]}},maximumViewportWidth:{get:function(){return this._maximumViewportDimensions[0]}},maximumViewportHeight:{get:function(){return this._maximumViewportDimensions[1]}},antialias:{get:function(){return this._antialias}},standardDerivatives:{get:function(){return!!this._standardDerivatives}},elementIndexUint:{get:function(){return!!this._elementIndexUint}},depthTexture:{get:function(){return!!this._depthTexture}},floatingPointTexture:{get:function(){return!!this._textureFloat}},textureFilterAnisotropic:{get:function(){return!!this._textureFilterAnisotropic}},maximumTextureFilterAnisotropy:{get:function(){return this._maximumTextureFilterAnisotropy}},vertexArrayObject:{get:function(){return!!this._vertexArrayObject}},fragmentDepth:{get:function(){return!!this._fragDepth}},drawBuffers:{get:function(){return!!this._drawBuffers}},maximumDrawBuffers:{get:function(){return this._maximumDrawBuffers}},maximumColorAttachments:{get:function(){return this._maximumColorAttachments}},throwOnWebGLError:{get:function(){return this._throwOnWebGLError},set:function(e){this._throwOnWebGLError=e,this._gl=U(this._originalGLContext,e?V:null)}},defaultTexture:{get:function(){return void 0===this._defaultTexture&&(this._defaultTexture=this.createTexture2D({source:{width:1,height:1,arrayBufferView:new Uint8Array([255,255,255,255])}})),this._defaultTexture}},defaultCubeMap:{get:function(){if(void 0===this._defaultCubeMap){var e={width:1,height:1,arrayBufferView:new Uint8Array([255,255,255,255])};this._defaultCubeMap=this.createCubeMap({source:{positiveX:e,negativeX:e,positiveY:e,negativeY:e,positiveZ:e,negativeZ:e}})}return this._defaultCubeMap}},drawingBufferHeight:{get:function(){return this._gl.drawingBufferHeight}},drawingBufferWidth:{get:function(){return this._gl.drawingBufferWidth}},defaultFramebuffer:{get:function(){return et}}}),$.prototype.replaceShaderProgram=function(e,t,r,i){return this.shaderCache.replaceShaderProgram(e,t,r,i)},$.prototype.createShaderProgram=function(e,t,r){return this.shaderCache.getShaderProgram(e,t,r)},$.prototype.createVertexBuffer=function(e,t){return G(this._gl,this._gl.ARRAY_BUFFER,e,t)},$.prototype.createIndexBuffer=function(e,t,r){if(r===h.UNSIGNED_INT&&!this.elementIndexUint)throw new l("IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system.  Check context.elementIndexUint.");var i=h.getSizeInBytes(r),n=this._gl,o=G(n,n.ELEMENT_ARRAY_BUFFER,e,t),s=o.sizeInBytes/i;return a(o,{indexDatatype:{get:function(){return r}},bytesPerIndex:{get:function(){return i}},numberOfIndices:{get:function(){return s}}}),o},$.prototype.createVertexArray=function(e,t){return new B(this._gl,this._vertexArrayObject,e,t)},$.prototype.createTexture2D=function(e){return new I(this,e)},$.prototype.createTexture2DFromFramebuffer=function(e,t,r,i,a,s){var l=this._gl;e=n(e,p.RGB),t=n(t,0),r=n(r,0),i=n(i,l.drawingBufferWidth),a=n(a,l.drawingBufferHeight);var u=new I(this,{width:i,height:a,pixelFormat:e,source:{framebuffer:o(s)?s:this.defaultFramebuffer,xOffset:t,yOffset:r,width:i,height:a}});return u},$.prototype.createCubeMap=function(e){function t(e,t){t.arrayBufferView?f.texImage2D(e,0,c,u,u,0,c,h,t.arrayBufferView):f.texImage2D(e,0,c,c,h,t)}e=n(e,n.EMPTY_OBJECT);var r,i,a=e.source;if(o(a)){var s=[a.positiveX,a.negativeX,a.positiveY,a.negativeY,a.positiveZ,a.negativeZ];r=s[0].width,i=s[0].height}else r=e.width,i=e.height;var u=r,c=n(e.pixelFormat,p.RGBA),h=n(e.pixelDatatype,x.UNSIGNED_BYTE);if(h===x.FLOAT&&!this.floatingPointTexture)throw new l("When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.");var d=e.preMultiplyAlpha||c===p.RGB||c===p.LUMINANCE,m=n(e.flipY,!0),f=this._gl,v=f.TEXTURE_CUBE_MAP,g=f.createTexture();return f.activeTexture(f.TEXTURE0),f.bindTexture(v,g),o(a)?(f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,d),f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,m),t(f.TEXTURE_CUBE_MAP_POSITIVE_X,a.positiveX),t(f.TEXTURE_CUBE_MAP_NEGATIVE_X,a.negativeX),t(f.TEXTURE_CUBE_MAP_POSITIVE_Y,a.positiveY),t(f.TEXTURE_CUBE_MAP_NEGATIVE_Y,a.negativeY),t(f.TEXTURE_CUBE_MAP_POSITIVE_Z,a.positiveZ),t(f.TEXTURE_CUBE_MAP_NEGATIVE_Z,a.negativeZ)):(f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_X,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_Y,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_Z,0,c,u,u,0,c,h,null),f.texImage2D(f.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,c,u,u,0,c,h,null)),f.bindTexture(v,null),new w(f,this._textureFilterAnisotropic,v,g,c,h,u,d,m)},$.prototype.createFramebuffer=function(e){return new E(this._gl,this._maximumColorAttachments,e)},$.prototype.createRenderbuffer=function(e){var t=this._gl;e=n(e,n.EMPTY_OBJECT);var r=n(e.format,A.RGBA4),i=o(e.width)?e.width:t.drawingBufferWidth,a=o(e.height)?e.height:t.drawingBufferHeight;return new P(t,r,i,a)};var tt=0,rt={};$.prototype.createRenderState=function(e){var t=JSON.stringify(e),r=rt[t];if(o(r))return r;var i=new M(this,e),n=JSON.stringify(i);return r=rt[n],o(r)||(i.id=tt++,r=i,rt[n]=r),rt[t]=r,r},$.prototype.createSampler=function(e){var t={wrapS:n(e.wrapS,L.CLAMP_TO_EDGE),wrapT:n(e.wrapT,L.CLAMP_TO_EDGE),minificationFilter:n(e.minificationFilter,O.LINEAR),magnificationFilter:n(e.magnificationFilter,R.LINEAR),maximumAnisotropy:o(e.maximumAnisotropy)?e.maximumAnisotropy:1};return t};var it;"undefined"!=typeof WebGLRenderingContext&&(it=[WebGLRenderingContext.BACK]);var nt=new C;$.prototype.clear=function(e,r){e=n(e,nt),r=n(r,this._defaultPassState);var i=this._gl,a=0,s=e.color,l=e.depth,u=e.stencil;o(s)&&(t.equals(this._clearColor,s)||(t.clone(s,this._clearColor),i.clearColor(s.red,s.green,s.blue,s.alpha)),a|=i.COLOR_BUFFER_BIT),o(l)&&(l!==this._clearDepth&&(this._clearDepth=l,i.clearDepth(l)),a|=i.DEPTH_BUFFER_BIT),o(u)&&(u!==this._clearStencil&&(this._clearStencil=u,i.clearStencil(u)),a|=i.STENCIL_BUFFER_BIT);var c=n(e.renderState,this._defaultRenderState);q(this,c,r);var h=n(e.framebuffer,r.framebuffer);j(this,h),i.clear(a)},$.prototype.draw=function(e,t,r,i){t=n(t,this._defaultPassState);var o=n(e.framebuffer,t.framebuffer);Y(this,o,e,t,r,i),X(this,e,i)},$.prototype.endFrame=function(){var e=this._gl;e.useProgram(null),this._currentFramebuffer=void 0,e.bindFramebuffer(e.FRAMEBUFFER,null),this.drawBuffers&&this._drawBuffers.drawBuffersWEBGL(it);var t=this._maxFrameTextureUnitIndex;this._maxFrameTextureUnitIndex=0;for(var r=0;t>r;++r)e.activeTexture(e.TEXTURE0+r),e.bindTexture(e.TEXTURE_2D,null),e.bindTexture(e.TEXTURE_CUBE_MAP,null)},$.prototype.readPixels=function(e){var t=this._gl;e=e||{};var r=Math.max(e.x||0,0),i=Math.max(e.y||0,0),n=e.width||t.drawingBufferWidth,o=e.height||t.drawingBufferHeight,a=e.framebuffer,s=new Uint8Array(4*n*o);return j(this,a),t.readPixels(r,i,n,o,t.RGBA,t.UNSIGNED_BYTE,s),s},$.prototype.createVertexArrayFromGeometry=function(e){e=n(e,n.EMPTY_OBJECT);var t,i,a,s=n(e.geometry,n.EMPTY_OBJECT),l=n(e.bufferUsage,y.DYNAMIC_DRAW),c=n(e.attributeLocations,n.EMPTY_OBJECT),m=n(e.interleave,!1),p=e.vertexArrayAttributes,f=o(p)?p:[],v=s.attributes;if(m){var g=J(v);if(o(g)){a=this.createVertexBuffer(g.buffer,l);var _=g.offsetsInBytes,C=g.vertexSizeInBytes;for(t in v)v.hasOwnProperty(t)&&o(v[t])&&(i=v[t],o(i.values)?f.push({index:c[t],vertexBuffer:a,componentDatatype:i.componentDatatype,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize,offsetInBytes:_[t],strideInBytes:C}):f.push({index:c[t],value:i.value,componentDatatype:i.componentDatatype,normalize:i.normalize}))}}else for(t in v)if(v.hasOwnProperty(t)&&o(v[t])){i=v[t];var w=i.componentDatatype;w===r.DOUBLE&&(w=r.FLOAT),a=void 0,o(i.values)&&(a=this.createVertexBuffer(r.createTypedArray(w,i.values),l)),f.push({index:c[t],vertexBuffer:a,value:i.value,componentDatatype:w,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize})}var S,E=s.indices;return o(E)&&(S=u.computeNumberOfVertices(s)>d.SIXTY_FOUR_KILOBYTES&&this.elementIndexUint?this.createIndexBuffer(new Uint32Array(E),l,h.UNSIGNED_INT):this.createIndexBuffer(new Uint16Array(E),l,h.UNSIGNED_SHORT)),this.createVertexArray(f,S)};var ot={position:0,textureCoordinates:1};return $.prototype.createViewportQuadCommand=function(e,t){var i=this.cache.viewportQuad_vertexArray;if(!o(i)){var a=new u({attributes:{position:new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:[-1,-1,1,-1,1,1,-1,1]}),textureCoordinates:new c({componentDatatype:r.FLOAT,componentsPerAttribute:2,values:[0,0,1,0,1,1,0,1]})},indices:new Uint16Array([0,1,2,0,2,3]),primitiveType:f.TRIANGLES});i=this.createVertexArrayFromGeometry({geometry:a,attributeLocations:{position:0,textureCoordinates:1},bufferUsage:y.STATIC_DRAW,interleave:!0}),this.cache.viewportQuad_vertexArray=i}return t=n(t,n.EMPTY_OBJECT),new S({vertexArray:i,primitiveType:f.TRIANGLES,renderState:t.renderState,shaderProgram:this.createShaderProgram(g,e,ot),uniformMap:t.uniformMap,owner:t.owner,framebuffer:t.framebuffer})},$.prototype.createPickFramebuffer=function(){return new T(this)},$.prototype.getObjectByPickColor=function(e){return this._pickObjects[e.toRgba()]},a(K.prototype,{object:{get:function(){return this._pickObjects[this.key]},set:function(e){this._pickObjects[this.key]=e}}}),K.prototype.destroy=function(){return delete this._pickObjects[this.key],void 0},$.prototype.createPickId=function(e){++this._nextPickColor[0];var r=this._nextPickColor[0];if(0===r)throw new v("Out of unique Pick IDs.");return this._pickObjects[r]=e,new K(this._pickObjects,r,t.fromRgba(r))},$.prototype.isDestroyed=function(){return!1},$.prototype.destroy=function(){var e=this.cache;for(var t in e)if(e.hasOwnProperty(t)){var r=e[t];o(r.destroy)&&r.destroy()}return this._shaderCache=this._shaderCache.destroy(),this._defaultTexture=this._defaultTexture&&this._defaultTexture.destroy(),this._defaultCubeMap=this._defaultCubeMap&&this._defaultCubeMap.destroy(),s(this)},$}),r("Renderer/loadCubeMap",["../Core/defined","../Core/DeveloperError","../Core/loadImage","../ThirdParty/when"],function(e,t,r,i){"use strict";var n=function(e,t,n){var o=[r(t.positiveX,n),r(t.negativeX,n),r(t.positiveY,n),r(t.negativeY,n),r(t.positiveZ,n),r(t.negativeZ,n)];return i.all(o,function(t){return e.createCubeMap({source:{positiveX:t[0],negativeX:t[1],positiveY:t[2],negativeY:t[3],positiveZ:t[4],negativeZ:t[5]}})})};return n}),r("Scene/DiscardMissingTileImagePolicy",["../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/getImagePixels","../Core/loadImageViaBlob","../ThirdParty/when"],function(e,t,r,i,n,o){"use strict";var a=function(a){function s(e){t(e.blob)&&(u._missingImageByteLength=e.blob.size);var r=i(e);if(a.disableCheckIfAllPixelsAreTransparent){for(var n=!0,o=e.width,s=a.pixelsToCheck,l=0,c=s.length;n&&c>l;++l){var h=s[l],d=4*h.x+h.y*o,m=r[d+3];m>0&&(n=!1)}n&&(r=void 0)}u._missingImagePixels=r,u._isReady=!0}function l(){u._missingImagePixels=void 0,u._isReady=!0}if(a=e(a,e.EMPTY_OBJECT),!t(a.missingImageUrl))throw new r("options.missingImageUrl is required.");if(!t(a.pixelsToCheck))throw new r("options.pixelsToCheck is required.");this._pixelsToCheck=a.pixelsToCheck,this._missingImagePixels=void 0,this._missingImageByteLength=void 0,this._isReady=!1;var u=this;o(n(a.missingImageUrl),s,l)};return a.prototype.isReady=function(){return this._isReady},a.prototype.shouldDiscardImage=function(e){if(!this._isReady)throw new r("shouldDiscardImage must not be called before the discard policy is ready.");var n=this._pixelsToCheck,o=this._missingImagePixels;if(!t(o))return!1;if(t(e.blob)&&e.blob.size!==this._missingImageByteLength)return!1;for(var a=i(e),s=e.width,l=0,u=n.length;u>l;++l)for(var c=n[l],h=4*c.x+c.y*s,d=0;4>d;++d){var m=h+d;if(a[m]!==o[m])return!1}return!0},a}),r("Scene/ImageryProvider",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/loadImage","../Core/loadImageViaBlob","../Core/throttleRequestByServer"],function(e,t,r,i,n,o){"use strict";var a=function(){this.defaultAlpha=void 0,this.defaultBrightness=void 0,this.defaultContrast=void 0,this.defaultHue=void 0,this.defaultSaturation=void 0,this.defaultGamma=void 0,r.throwInstantiationError()};return t(a.prototype,{ready:{get:r.throwInstantiationError},rectangle:{get:r.throwInstantiationError},tileWidth:{get:r.throwInstantiationError},tileHeight:{get:r.throwInstantiationError},maximumLevel:{get:r.throwInstantiationError},minimumLevel:{get:r.throwInstantiationError},tilingScheme:{get:r.throwInstantiationError},tileDiscardPolicy:{get:r.throwInstantiationError},errorEvent:{get:r.throwInstantiationError},credit:{get:r.throwInstantiationError},proxy:{get:r.throwInstantiationError},hasAlphaChannel:{get:r.throwInstantiationError}}),a.prototype.getTileCredits=r.throwInstantiationError,a.prototype.requestImage=r.throwInstantiationError,a.prototype.pickFeatures=r.throwInstantiationError,a.loadImage=function(t,r){return e(t.tileDiscardPolicy)?o(r,n):o(r,i)},a}),r("Scene/ArcGisMapServerImageryProvider",["../Core/Cartesian2","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicProjection","../Core/GeographicTilingScheme","../Core/jsonp","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorProjection","../Core/WebMercatorTilingScheme","../ThirdParty/when","./DiscardMissingTileImagePolicy","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,t,r,n){var o;if(e._useTiles)o=e._url+"/tile/"+n+"/"+r+"/"+t;else{var a=e._tilingScheme.tileXYToNativeRectangle(t,r,n),s=a.west+"%2C"+a.south+"%2C"+a.east+"%2C"+a.north;o=e._url+"/export?",o+="bbox="+s,o+="&bboxSR=4326&size=256%2C256&imageSR=4326&format=png&transparent=true&f=image"}var l=e._proxy;return i(l)&&(o=l.getURL(o)),o}var _=function(n){function o(r){var n=r.tileInfo;if(C._useTiles&&i(n)){if(C._tileWidth=n.rows,C._tileHeight=n.cols,102100===n.spatialReference.wkid||102113===n.spatialReference.wkid)C._tilingScheme=new m;else{if(4326!==r.tileInfo.spatialReference.wkid){var o="Tile spatial reference WKID "+r.tileInfo.spatialReference.wkid+" is not supported.";return y=h.handleError(y,C,C._errorEvent,o,void 0,void 0,void 0,_),void 0}C._tilingScheme=new l}if(C._maximumLevel=r.tileInfo.lods.length-1,i(r.fullExtent)){var a=C._tilingScheme.projection;if(i(r.fullExtent.spatialReference)&&i(r.fullExtent.spatialReference.wkid))if(102100===r.fullExtent.spatialReference.wkid||102113===r.fullExtent.spatialReference.wkid)a=new d;else{if(4326!==r.fullExtent.spatialReference.wkid){var u="fullExtent.spatialReference WKID "+r.fullExtent.spatialReference.wkid+" is not supported.";return y=h.handleError(y,C,C._errorEvent,u,void 0,void 0,void 0,_),void 0}a=new s}var p=a.unproject(new e(r.fullExtent.xmin,r.fullExtent.ymin)),v=a.unproject(new e(r.fullExtent.xmax,r.fullExtent.ymax));C._rectangle=new c(p.longitude,p.latitude,v.longitude,v.latitude)}else C._rectangle=C._tilingScheme.rectangle;i(C._tileDiscardPolicy)||(C._tileDiscardPolicy=new f({missingImageUrl:g(C,0,0,C._maximumLevel),pixelsToCheck:[new e(0,0),new e(200,20),new e(20,200),new e(80,110),new e(160,130)],disableCheckIfAllPixelsAreTransparent:!0})),C._useTiles=!0}else C._tileWidth=256,C._tileHeight=256,C._tilingScheme=new l,C._rectangle=C._tilingScheme.rectangle,C._useTiles=!1;i(r.copyrightText)&&r.copyrightText.length>0&&(C._credit=new t(r.copyrightText)),C._ready=!0,h.handleSuccess(y)}function v(){var e="An error occurred while accessing "+C._url+".";y=h.handleError(y,C,C._errorEvent,e,void 0,void 0,void 0,_)}function _(){var e=u(C._url,{parameters:{f:"json"},proxy:C._proxy});p(e,o,v)}n=r(n,{}),this._url=n.url,this._tileDiscardPolicy=n.tileDiscardPolicy,this._proxy=n.proxy,this._tileWidth=void 0,this._tileHeight=void 0,this._maximumLevel=void 0,this._tilingScheme=void 0,this._credit=void 0,this._useTiles=r(n.usePreCachedTilesIfAvailable,!0),this._rectangle=void 0,this._errorEvent=new a,this._ready=!1;var y,C=this;_()};return n(_.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},usingPrecachedTiles:{get:function(){return this._useTiles}},hasAlphaChannel:{get:function(){return!0}}}),_.prototype.getTileCredits=function(){return void 0},_.prototype.requestImage=function(e,t,r){var i=g(this,e,t,r);return v.loadImage(this,i)},_.prototype.pickFeatures=function(){return void 0},_}),r("Scene/BingMapsStyle",["../Core/freezeObject"],function(e){"use strict";var t={AERIAL:"Aerial",AERIAL_WITH_LABELS:"AerialWithLabels",ROAD:"Road",ORDNANCE_SURVEY:"OrdnanceSurvey",COLLINS_BART:"CollinsBart"};return e(t)}),r("Scene/BingMapsImageryProvider",["../Core/BingMapsApi","../Core/Cartesian2","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/jsonp","../Core/Math","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./BingMapsStyle","./DiscardMissingTileImagePolicy","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";function g(e,t,r,i){var o=e._imageUrlTemplate,a=y.tileXYToQuadKey(t,r,i);o=o.replace("{quadkey}",a);var s=e._imageUrlSubdomains,l=(t+r+i)%s.length;o=o.replace("{subdomain}",s[l]);var u=e._proxy;return n(u)&&(o=u.getURL(o)),o}function _(e,t,r){++t;for(var i=[],n=0,o=e.length;o>n;++n){for(var a=e[n],s=a.coverageAreas,l=!1,u=0,h=a.coverageAreas.length;!l&&h>u;++u){var d=s[u];if(t>=d.zoomMin&&t<=d.zoomMax){var m=c.intersectWith(r,d.bbox,w);c.isEmpty(m)||(l=!0)}}l&&i.push(a.credit)}return i}var y=function S(o){function a(e){var i=e.resourceSets[0].resources[0];w._tileWidth=i.imageWidth,w._tileHeight=i.imageHeight,w._maximumLevel=i.zoomMax-1,w._imageUrlSubdomains=i.imageUrlSubdomains,w._imageUrlTemplate=i.imageUrl.replace("{culture}","");var o=w._tileProtocol;if(!n(o)){var a=document.location.protocol;o=/^http/.test(a)?a:"http:"}w._imageUrlTemplate=w._imageUrlTemplate.replace(/^http:/,o),n(w._tileDiscardPolicy)||(w._tileDiscardPolicy=new f({missingImageUrl:g(w,0,0,w._maximumLevel),pixelsToCheck:[new t(0,0),new t(120,140),new t(130,160),new t(200,50),new t(200,200)],disableCheckIfAllPixelsAreTransparent:!0}));var s=w._attributionList=i.imageryProviders;s||(s=w._attributionList=[]);for(var l=0,d=s.length;d>l;++l){var m=s[l];m.credit=new r(m.attribution);for(var p=m.coverageAreas,v=0,_=m.coverageAreas.length;_>v;++v){var C=p[v],S=C.bbox;C.bbox=new c(u.toRadians(S[1]),u.toRadians(S[0]),u.toRadians(S[3]),u.toRadians(S[2]))}}w._ready=!0,h.handleSuccess(y)}function v(){var e="An error occurred while accessing "+C+".";y=h.handleError(y,w,w._errorEvent,e,void 0,void 0,void 0,_)}function _(){var e=l(C,{callbackParameterName:"jsonp",proxy:w._proxy});m(e,a,v)}o=i(o,{}),this._key=e.getKey(o.key),this._url=o.url,this._tileProtocol=o.tileProtocol,this._mapStyle=i(o.mapStyle,p.AERIAL),this._tileDiscardPolicy=o.tileDiscardPolicy,this._proxy=o.proxy,this._credit=new r("Bing Imagery",S._logoData,"http://www.bing.com"),this.defaultGamma=1,(this._mapStyle===p.AERIAL||this._mapStyle===p.AERIAL_WITH_LABELS)&&(this.defaultGamma=1.3),this._tilingScheme=new d({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2}),this._tileWidth=void 0,this._tileHeight=void 0,this._maximumLevel=void 0,this._imageUrlTemplate=void 0,this._imageUrlSubdomains=void 0,this._errorEvent=new s,this._ready=!1;var y,C=this._url+"/REST/v1/Imagery/Metadata/"+this._mapStyle+"?incl=ImageryProviders&key="+this._key,w=this;_()};o(y.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},key:{get:function(){return this._key}},mapStyle:{get:function(){return this._mapStyle}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!1}}});var C=new c;y.prototype.getTileCredits=function(e,t,r){if(!this._ready)throw new a("getTileCredits must not be called before the imagery provider is ready.");var i=this._tilingScheme.tileXYToRectangle(e,t,r,C);return _(this._attributionList,r,i)},y.prototype.requestImage=function(e,t,r){var i=g(this,e,t,r);return v.loadImage(this,i)},y.prototype.pickFeatures=function(){return void 0},y._logoData="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAD0AAAAaCAYAAAAEy1RnAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH3gIDEgcPTMnXOQAAClZJREFUWMPdWGtsFNcV/u689uH1+sXaONhlWQzBENtxiUFBpBSLd60IpXHSNig4URtSYQUkRJNSi0igViVVVBJBaBsiAgKRQJSG8AgEHCCWU4iBCprY2MSgXfOI16y9D3s9Mzsztz9yB12WNU2i9Ecy0tHOzN4793zn3POdcy7BnRfJ8I7iB3SRDPeEExswLz8Y0DZIAYDIRGAgLQAm+7Xle31J3L3Anp1MZPY+BUBjorN332vgYhpgV1FRUd6TTz45ubq6OtDV1SXpuu5g//Oept9wNwlMyAi8IXDjyF245TsDTdivDMATCATGNDU1/WbhwoWPTZs2bWx1dXWhx+Oxrl+/PqTrus5t9W8KWEzjinTAYhro/xuBStwiIgBnJBLxKIoy1u/3V/r9/krDMMz3339/Z3t7e38ikUgCMDLEt8W+Q0cAI3McYTDDmZxh7DESG5Ni43jg9Gsa+X+OsxWxPSJTSj3JZFK5ZRVJErOzs8e6XC4fgGwALhbzDgAKU1hK28KEA6PMmTMn56233qpevnz5PQDcbJ7EzVUAuMrLy3MBeABkcWOEDELSyFe4y7iMoHkriZZlKYZh8ASHZDKpJJPJHAC5APIA5APIAeBlCjo5TwlpXnbOmTPHP3fu3KZVq1atZKBcDJQ9x7V48WJfc3Pzhp6enj+tXLnyR8w4MjdG4gyVDk7KICMClzKlLUrpbQMNw5AkScppbGz8cWdn57WjR4/2caw+DEBlYjO8wX1foZQWuN3uKZIklQD4G+fhlG0Yl8uVm5WVVW6app6dne0D0G8vnxbjJntHubCUOK/badZICyWanrJuAaeUknTQpmlKkUhEWbx48U8LCwtHhUKha+fPn+85fPhwV0tLyzUACSZx9jvMFhIByNFoVDEMw/qKB5HPvJfkUqBr9+7deklJyZ/j8bi5ffv2OAslieMLsG+m2DybT2QuzEQOsF5SUqJfvXo1yc2l6Xn6rgSRSCSEc+fOhVeuXLmwoqJixvTp0wcWLFgQ7unpudHR0dF97ty5z/fu3XseQJh5adjeerquy5ZlCalUivh8Pt8HH3ywzOPxyD09PZ81NjZ+2NnZaQEQx40b54vFYqaqquEVK1b4a2tr/WvWrDn18ssv144fP36SqqoD69ev371nz57rDLwAwHHkyJGfjRs3rtowDOv06dOnu7q6rs6bN2/s7Nmz9zIjDKenWoFZKg/AlMLCwl82Nzf/m3LX22+/fXb06NF/ALC8u7u7m6ZdkUhksL29/UpLS0vzunXrVgAoBzAaQBGAiY2NjUui0ei1RCLRFwwG/9PX19cVi8WCqqoOdHd3HysrK6sDMCccDl8IBoOtiqIsOnbs2D+i0eiV3t7ez8Ph8GeRSKRT07TB/v7+i1OnTp0HYBqABzs7O/+paVo0Fot1RyKRi/F4/Gp/f39XIpHoZnoUMn6wU+ZtRDaymwmxZFk2AWjvvvvuJ/F4PMn/n5+fn1VeXu6fOXNmbU1NzUOM4Bz8QqIoyg6HwxuLxfq3bdu2a+vWrW/09/dfKy0tffDVV199BEC20+n0ud3uQgBup9Pp83g8JYqieE+ePPnxxo0bt33xxRen8/Ly7n3hhRcWASh47bXX5pWVldWFw+GuXbt27XjzzTd3BoPBDq/XG1AUZRRHmAKPVfqaoKkgCCkA+oYNG84Eg0FHTU1N5ezZs8eWlJQ4CSF8/LvZYhJPQoQQpFKpwcrKyo1su9HBwUF99erVv588eXINgOOmacIwDEopdaZSKUIpxYkTJz6sr68/BMBav379RcMwZk2aNOl+AP+qq6t7xDTNVEVFxR+j0WgSAJk4ceKlTz/9tNzpdHpZvIvpjVW6pykhhBJCbkvwgiAQQogEQL558ybdtGlTsLm5OWJZdxZmlmWll5OUEEJN0zSGhob6GcOrALSzZ8/2apqWcLlc2axGACNRkRAimqaph0Kh68xIwwB0y7IMSZKcABz5+fkl8Xj8y2g0apOb5na7rYGBgS/JV54Q0qpAAoBKaS0jBWClg1ZVFeFw2AlgVF1dXeDpp5+eWVFRUVpcXOzgvQwAbrcbDJhdudlGpKZpGtx6JCcnRxIEQbQsS2PjbjM+AMvlchnMSBaXkr7ymCCIhmEYfMoVRVESBEHI0CaTTNubssUsQRBuubCtra33pZdeCk6YMCGwZs2aipqaGn9paWmuJEl3JP0bN258eeTIkRMABrm0YomiaImiKGVlZeWxLecAgBkzZvgdDkfWjRs3ggA0bpfpoiiahBCqKEqKAy2yULMA6MlkMp6Xl3cP1x2SWCwmFhQU+CmlFhfHNFOevpX4LcvSJUkyAeDQoUOh119//fpTTz01Zf78+UWBQCBHUZQ7yE/TNGPfvn0n33vvvSP79+//BECMeZsCMGRZNgRBgNPpHHXx4sVVDQ0Nf1+wYMGYJ554YikAevDgwUMA4oIgQJZlSggZdDqdBiGEZGdn6ww0tQlJURTT4/EMHz9+/MCjjz7622AwuHbZsmVbiouLvWvXrm1wOp3ZqVRqaKQTIInf1gAMl8ulU0q1CxcuBGOxmL5u3bryQCDgycrKEjORXGtra8eOHTsOHz169OyVK1cuA+hlRYrGlNRkWR7UNO2mYRiaz+cb3dLS8gYhhOi6Hj116tSOVatWHQNALcsaME0zLghClBDSZ9+zQsZ2SoJS2udwOKLPPffcvsrKyrJAIPDQ/v37txiGofX19V3r7e29UlBQMHqEVpjwnrYA6PF4PK6q6s2qqqqpZWVlitvtljOB7enpiWzbtu3wgQMHTre1tV0E0MeKkkGuIhMAqHv37u30er3Px+NxlyiKygMPPOAnhFiXLl0Kbd68uYPNsXbu3Lk6mUwaqqr2btmyZUdtbe3hd955pwvAEFNcO3jw4K/b2tqiqqpGIpGI4/HHH/9rQ0PDCa/XOyoSidDLly8PNTU1PcZ4QuNK1ju6NYHFRAGASXPnzv1Fa2vrxzTDpapqateuXR/Nnz+/SVGUhwFMBzCBFSLZLF75DsrJGpXRAH4EIABgPIBxAEoBFAPwARjFif1sNzZ25+VlOhaxufcCqAFQC+BhAPVLliz5XSqVUkOhUAuAKWnFyR3dlsw+fg+A+8eMGfPzTZs2bY9GozEb8JkzZ9qXLl36l+Li4l8B+AmAyQDGsGrOzfXNPGPawG2l85jksmcPm+vihH+2W1iF3bvZPN+sWbPuGx4eDrW3t+85fvz41o6OjmZN04Y0TYvV19cvYIbN5QqUjG2mwj5YAqDK4XDMe+aZZ55vbW09+sorr2yuqqpqYFatAuBn3uB7XzJCY297XeaUd2RoGzOJmHb6IjFj5D777LP3DQwMfDw8PBxSVbUvkUj0hEKhj1588cXH2O7zMSPdplumoxveMx5Zlj3jx4/39vb26gMDA4MsvgYZo+p8Pr7LqQX5Ds/U7d0jFxUVZS1atKg4Nzc317Isp67rZldXV6y5ufkmI78hFtcmrx8ZweMit6XsUs4+6kmlgbW+peLf9gyMZNCR374G0y/FxEzX8b/8+bkXEBxKFwAAAABJRU5ErkJggg==",y.tileXYToQuadKey=function(e,t,r){for(var i="",n=r;n>=0;--n){var o=1<<n,a=0;0!==(e&o)&&(a|=1),0!==(t&o)&&(a|=2),i+=a}return i},y.quadKeyToTileXY=function(e){for(var t=0,r=0,i=e.length-1,n=i;n>=0;--n){var o=1<<n,a=+e[i-n];0!==(1&a)&&(t|=o),0!==(2&a)&&(r|=o)}return{x:t,y:r,level:i}};var w=new c;return y}),r("Scene/CullingVolume",["../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/Intersect"],function(e,t,r,i){"use strict";var n=function(t){this.planes=e(t,[])};return n.prototype.computeVisibility=function(e){for(var t=this.planes,r=!1,n=0,o=t.length;o>n;++n){var a=e.intersect(t[n]);if(a===i.OUTSIDE)return i.OUTSIDE;a===i.INTERSECTING&&(r=!0)}return r?i.INTERSECTING:i.INSIDE},n}),r("Scene/PerspectiveOffCenterFrustum",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","./CullingVolume"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e){var t=e.top,r=e.bottom,i=e.right,n=e.left,o=e.near,a=e.far;(t!==e._top||r!==e._bottom||n!==e._left||i!==e._right||o!==e._near||a!==e._far)&&(e._left=n,e._right=i,e._top=t,e._bottom=r,e._near=o,e._far=a,e._perspectiveMatrix=s.computePerspectiveOffCenter(n,i,r,t,o,a,e._perspectiveMatrix),e._infinitePerspective=s.computeInfinitePerspectiveOffCenter(n,i,r,t,o,e._infinitePerspective))
}var c=function(){this.left=void 0,this._left=void 0,this.right=void 0,this._right=void 0,this.top=void 0,this._top=void 0,this.bottom=void 0,this._bottom=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far,this._cullingVolume=new l,this._perspectiveMatrix=new s,this._infinitePerspective=new s};o(c.prototype,{projectionMatrix:{get:function(){return u(this),this._perspectiveMatrix}},infiniteProjectionMatrix:{get:function(){return u(this),this._infinitePerspective}}});var h=new t,d=new t,m=new t,p=new t;return c.prototype.computeCullingVolume=function(e,i,o){var a=this._cullingVolume.planes,s=this.top,l=this.bottom,u=this.right,c=this.left,f=this.near,v=this.far,g=t.cross(i,o,h),_=d;t.multiplyByScalar(i,f,_),t.add(e,_,_);var y=m;t.multiplyByScalar(i,v,y),t.add(e,y,y);var C=p;t.multiplyByScalar(g,c,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(C,o,C);var w=a[0];return n(w)||(w=a[0]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(g,u,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(o,C,C),w=a[1],n(w)||(w=a[1]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(o,l,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(g,C,C),w=a[2],n(w)||(w=a[2]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),t.multiplyByScalar(o,s,C),t.add(_,C,C),t.subtract(C,e,C),t.normalize(C,C),t.cross(C,g,C),w=a[3],n(w)||(w=a[3]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,e),w=a[4],n(w)||(w=a[4]=new r),w.x=i.x,w.y=i.y,w.z=i.z,w.w=-t.dot(i,_),t.negate(i,C),w=a[5],n(w)||(w=a[5]=new r),w.x=C.x,w.y=C.y,w.z=C.z,w.w=-t.dot(C,y),this._cullingVolume},c.prototype.getPixelSize=function(t,r,o){u(this);var a=t.x,s=t.y;r=i(r,this.near);var l=1/this.near,c=this.top*l,h=2*r*c/s;c=this.right*l;var d=2*r*c/a;return n(o)?(o.x=d,o.y=h,o):new e(d,h)},c.prototype.clone=function(e){return n(e)||(e=new c),e.right=this.right,e.left=this.left,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},c.prototype.equals=function(e){return n(e)&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},c}),r("Scene/PerspectiveFrustum",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","./PerspectiveOffCenterFrustum"],function(e,t,r,i){"use strict";function n(e){var t=e._offCenterFrustum;(e.fov!==e._fov||e.aspectRatio!==e._aspectRatio||e.near!==e._near||e.far!==e._far)&&(e._aspectRatio=e.aspectRatio,e._fov=e.fov,e._fovy=e.aspectRatio<=1?e.fov:2*Math.atan(Math.tan(.5*e.fov)/e.aspectRatio),e._near=e.near,e._far=e.far,t.top=e.near*Math.tan(.5*e._fovy),t.bottom=-t.top,t.right=e.aspectRatio*t.top,t.left=-t.right,t.near=e.near,t.far=e.far)}var o=function(){this._offCenterFrustum=new i,this.fov=void 0,this._fov=void 0,this._fovy=void 0,this.aspectRatio=void 0,this._aspectRatio=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far};return t(o.prototype,{projectionMatrix:{get:function(){return n(this),this._offCenterFrustum.projectionMatrix}},infiniteProjectionMatrix:{get:function(){return n(this),this._offCenterFrustum.infiniteProjectionMatrix}},fovy:{get:function(){return n(this),this._fovy}}}),o.prototype.computeCullingVolume=function(e,t,r){return n(this),this._offCenterFrustum.computeCullingVolume(e,t,r)},o.prototype.getPixelSize=function(e,t,r){return n(this),this._offCenterFrustum.getPixelSize(e,t,r)},o.prototype.clone=function(t){return e(t)||(t=new o),t.aspectRatio=this.aspectRatio,t.fov=this.fov,t.near=this.near,t.far=this.far,t._aspectRatio=void 0,t._fov=void 0,t._near=void 0,t._far=void 0,this._offCenterFrustum.clone(t._offCenterFrustum),t},o.prototype.equals=function(t){return e(t)?(n(this),n(t),this.fov===t.fov&&this.aspectRatio===t.aspectRatio&&this.near===t.near&&this.far===t.far&&this._offCenterFrustum.equals(t._offCenterFrustum)):!1},o}),r("Scene/CameraFlightPath",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/clone","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/EasingFunction","../Core/HermiteSpline","../Core/LinearSpline","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/QuaternionSpline","./PerspectiveFrustum","./PerspectiveOffCenterFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g){"use strict";function _(e,r,i){return t.cross(e,r,I),t.cross(I,e,R),D[0]=I.x,D[1]=R.x,D[2]=-e.x,D[3]=I.y,D[4]=R.y,D[5]=-e.y,D[6]=I.z,D[7]=R.z,D[8]=-e.z,m.fromRotationMatrix(D,i)}function y(e,t,r){var i,n,o;if(e instanceof f){var a=Math.tan(.5*e.fovy);return i=e.near,n=e.near*a,o=e.aspectRatio*n,Math.max(t*i/o,r*i/n)}return e instanceof v?(i=e.near,n=e.top,o=e.right,Math.max(t*i/o,r*i/n)):Math.max(t,r)}function C(e,r,i,n,o,a,s){var u,d,p,f=r.maximumRadius,v=e.frustum,g=y(v,f,f),_=t.dot(t.normalize(i,O),t.normalize(a,L));if(t.magnitude(i)>g)d=f+.6*(g-f),p=.35;else{var C=t.subtract(i,a,O);d=t.magnitude(t.add(t.multiplyByScalar(C,.5,L),a,L));var w=t.magnitude(t.multiplyByScalar(n,t.dot(C,n),L)),S=t.magnitude(t.multiplyByScalar(o,t.dot(C,o),L));d+=y(v,w,S),p=c.clamp(_+1,.25,.5)}var E,b,T,x=t.multiplyByScalar(t.normalize(a,L),d,L),P=t.multiplyByScalar(t.normalize(i,O),d,O),A=new t;if(t.magnitude(a)>g&&_>.75)A=t.add(t.multiplyByScalar(t.subtract(i,a,A),.5,A),a,A),u=[i,A,a];else if(t.magnitude(i)>g&&_>0)A=t.add(t.multiplyByScalar(t.subtract(i,x,A),.5,A),x,A),u=[i,A,a];else{u=[i],b=c.acosClamped(t.dot(t.normalize(P,N),t.normalize(x,B))),E=t.cross(x,P,N),t.equalsEpsilon(E,t.ZERO,c.EPSILON6)&&(E=t.UNIT_Z);for(var M=p*b,D=b-M,I=D;I>0;I-=M)T=h.fromQuaternion(m.fromAxisAngle(E,I),F),u.push(h.multiplyByVector(T,x,new t));u.push(a)}for(var R=new Array(u.length),z=s/(u.length-1),V=0;V<u.length;++V)R[V]=V*z;return l.createNaturalCubic({points:u,times:R})}function w(e,r,i,n,a){var s=e.points,l=new Array(s.length);l[0]=_(r,i);for(var u,c=s.length-1,h=1;c>h;++h)u=s[h],t.normalize(t.negate(u,z),z),t.normalize(t.cross(z,t.UNIT_Z,V),V),t.cross(V,z,k),l[h]=_(z,k,U);return u=s[c],o(n)&&o(a)?l[c]=_(n,a):(t.normalize(t.negate(u,z),z),t.normalize(t.cross(z,t.UNIT_Z,V),V),t.cross(V,z,k),l[c]=_(z,k,U)),new p({points:l,times:e.times})}function S(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=a.cameraToWorldCoordinatesPoint(a.position,W),u=a.cameraToWorldCoordinatesVector(a.direction,G),c=a.cameraToWorldCoordinatesVector(a.up,H),m=t.cross(u,c,q),p=C(a,s,l,c,m,r,i),f=w(p,u,c,n,o),v=function(e){var r=e.time,i=f.evaluate(r);h.fromQuaternion(i,M),d.clone(a.transform,j),d.clone(d.IDENTITY,a.transform),a.position=p.evaluate(r,a.position),a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction),a.setTransform(j)};return v}function E(r,i,n,o,a){if(c.equalsEpsilon(e.magnitude(n),e.magnitude(o),1e4))return new u({points:[n,o],times:[0,a]});var s,h,d=i.maximumRadius,m=r.frustum,p=y(m,Math.PI*d,c.PI_OVER_TWO*d),f=.5;if(n.z>p)h=.6*p;else{var v=t.subtract(n,o,Y);h=y(m,Math.abs(v.y),Math.abs(v.x))}var g=t.clone(o);g.z=h;var _=t.clone(n);_.z=h;var C=new t;if(o.z>p)C=t.add(t.multiplyByScalar(t.subtract(n,o,C),.5,C),o,C),s=[n,C,o];else if(n.z>p)C=t.add(t.multiplyByScalar(t.subtract(n,g,C),.5,C),g,C),s=[n,C,o];else{s=[n];var w=t.subtract(_,g,Y),S=t.magnitude(w);t.normalize(w,w);for(var E=f*S,b=S-E,T=b;T>0;T-=E){var x=new t;s.push(t.add(t.multiplyByScalar(w,T,x),g,x))}s.push(o)}for(var P=new Array(s.length),A=a/(s.length-1),M=0;M<s.length;++M)P[M]=M*A;return l.createNaturalCubic({points:s,times:P})}function b(e,t,r,i){var n=t.points,a=new Array(n.length);a[0]=_(e.direction,e.up);for(var s=n.length-1,l=1;s>l;++l)a[l]=J;return a[s]=o(r)&&o(i)?_(r,i):J,new p({points:a,times:t.times})}function T(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=E(a,s,t.clone(a.position),r,i),u=b(a,l,n,o),c=function(e){var r=e.time,i=u.evaluate(r);h.fromQuaternion(i,M),d.clone(a.transform,j),d.clone(d.IDENTITY,a.transform),a.position=l.evaluate(r,a.position),a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction),a.setTransform(j)};return c}function x(e,r,i,n,o){var a=e.camera,s=e.mapProjection.ellipsoid,l=t.clone(a.position);l.z=a.frustum.right-a.frustum.left;var u=E(a,s,l,r,i),c=b(a,u,t.negate(t.UNIT_Z,new t),o),d=a.position.z,m=function(e){var r=e.time,i=c.evaluate(r);h.fromQuaternion(i,M),a.position=u.evaluate(r);var n=a.position.z;a.position.z=d,a.right=h.getRow(M,0,a.right),a.up=h.getRow(M,1,a.up),a.direction=t.negate(h.getRow(M,2,a.direction),a.direction);var o=a.frustum,s=o.top/o.right,l=.5*(n-(o.right-o.left));o.right+=l,o.left-=l,o.top=s*o.right,o.bottom=-o.top};return m}var P={},A=new t,M=new h,D=new h,I=new t,R=new t,O=new t,L=new t,N=new t,B=new t,F=new h,z=new t,V=new t,k=new t,U=new m,W=new t,G=new t,H=new t,q=new t,j=new d,Y=new t,X=t.negate(t.UNIT_Z,new t),Z=new t;Z=t.normalize(t.cross(X,t.UNIT_Y,Z),Z);var Q=t.cross(Z,X,new t),J=_(X,Q),K=new t,$=new t,et=new t,tt=new r,rt=new t;return P.createTween=function(r,i){i=n(i,n.EMPTY_OBJECT);var a=i.destination,l=i.direction,u=i.up;if(r.mode===g.MORPHING)return{startObject:{},stopObject:{},duration:0};var h=n(i.convert,!0);if(h&&r.mode!==g.SCENE3D){var d=r.mapProjection,m=d.ellipsoid;m.cartesianToCartographic(a,tt),a=d.project(tt,rt)}var p=n(i.duration,3),f=r.screenSpaceCameraController;f.enableInputs=!1;var v=function(e){var t=function(){"function"==typeof e&&e(),f.enableInputs=!0};return t},_=v(i.complete),y=v(i.cancel),C=r.camera,w=i.endTransform;o(w)&&C.setTransform(w);var E=C.frustum;if(r.mode===g.SCENE2D){if(e.equalsEpsilon(C.position,a,c.EPSILON6)&&c.equalsEpsilon(Math.max(E.right-E.left,E.top-E.bottom),a.z,c.EPSILON6))return{startObject:{},stopObject:{},duration:0,complete:_,cancel:y}}else if(t.equalsEpsilon(a,C.position,c.EPSILON6))return{startObject:{},stopObject:{},duration:0,complete:_,cancel:y};if(0>=p){var b=function(){var e=a;if(r.mode===g.SCENE3D?(o(i.direction)||o(i.up)?(K=i.direction,$=t.normalize(t.cross(K,i.up,$),$)):(K=t.normalize(t.negate(e,K),K),$=t.normalize(t.cross(K,t.UNIT_Z,$),$)),et=n(i.up,t.cross($,K,et))):(o(i.direction)||o(i.up)?(K=i.direction,$=t.normalize(t.cross(K,i.up,$),$)):(K=t.negate(t.UNIT_Z,K),$=t.normalize(t.cross(K,t.UNIT_Y,$),$)),et=n(i.up,t.cross($,K,et))),t.clone(e,C.position),t.clone(K,C.direction),t.clone(et,C.up),t.clone($,C.right),r.mode===g.SCENE2D){var s=C.position.z,l=E.top/E.right,u=.5*(s-(E.right-E.left));E.right+=u,E.left-=u,E.top=l*E.right,E.bottom=-E.top}"function"==typeof _&&_()};return{startObject:{},stopObject:{},duration:0,complete:b,cancel:y}}var P;return P=r.mode===g.SCENE3D?S(r,a,p,l,u):r.mode===g.SCENE2D?x(r,a,p,l,u):T(r,a,p,l,u),{duration:p,easingFunction:s.SINUSOIDAL_IN_OUT,startObject:{time:0},stopObject:{time:p},update:P,complete:_,cancel:y}},P.createTweenRectangle=function(e,t){t=n(t,n.EMPTY_OBJECT);var r=t.destination,o=i(t);return e.camera.getRectangleCameraCoordinates(r,A),o.destination=A,o.convert=!1,this.createTween(e,o)},P}),r("Scene/Camera",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/EasingFunction","../Core/Ellipsoid","../Core/IntersectionTests","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Quaternion","../Core/Ray","../Core/Rectangle","../Core/Transforms","./CameraFlightPath","./PerspectiveFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C){"use strict";function w(e){var r=e._right,i=e._up,n=e._direction,o=e._position,a=e._viewMatrix;a[0]=r.x,a[1]=i.x,a[2]=-n.x,a[3]=0,a[4]=r.y,a[5]=i.y,a[6]=-n.y,a[7]=0,a[8]=r.z,a[9]=i.z,a[10]=-n.z,a[11]=0,a[12]=-t.dot(r,o),a[13]=-t.dot(i,o),a[14]=t.dot(n,o),a[15]=1,m.multiply(a,e._actualInvTransform,e._viewMatrix),m.inverseTransformation(e._viewMatrix,e._invViewMatrix)}function S(e){var i=e._projection,n=i.ellipsoid,o=m.getColumn(e._transform,3,et),a=n.cartesianToCartographic(o,J),s=i.project(a,K),l=tt;l.x=s.z,l.y=s.x,l.z=s.y,l.w=1;var u=r.add(m.getColumn(e._transform,0,$),o,$);n.cartesianToCartographic(u,a),i.project(a,s);var c=rt;c.x=s.z,c.y=s.x,c.z=s.y,c.w=0,t.subtract(c,l,c);var h=r.add(m.getColumn(e._transform,1,$),o,$);n.cartesianToCartographic(h,a),i.project(a,s);var d=it;d.x=s.z,d.y=s.x,d.z=s.y,d.w=0,t.subtract(d,l,d);var p=nt;t.cross(c,d,p),t.normalize(p,p),t.cross(d,p,c),t.normalize(c,c),t.cross(p,c,d),t.normalize(d,d),m.setColumn(e._actualTransform,0,c,e._actualTransform),m.setColumn(e._actualTransform,1,d,e._actualTransform),m.setColumn(e._actualTransform,2,p,e._actualTransform),m.setColumn(e._actualTransform,3,l,e._actualTransform)}function E(e){var i=e._projection,n=i.ellipsoid,o=m.getColumn(e._transform,3,et),a=n.cartesianToCartographic(o,J),s=i.project(a,K),l=tt;l.x=s.z,l.y=s.x,l.z=s.y,l.w=1;var u=r.clone(r.UNIT_X,nt),c=r.add(m.getColumn(e._transform,0,$),o,$);n.cartesianToCartographic(c,a),i.project(a,s);var d=rt;d.x=s.z,d.y=s.x,d.z=s.y,d.w=0,t.subtract(d,l,d),d.x=0;var p=it;if(t.magnitudeSquared(d)>h.EPSILON10)t.cross(u,d,p);else{var f=r.add(m.getColumn(e._transform,1,$),o,$);n.cartesianToCartographic(f,a),i.project(a,s),p.x=s.z,p.y=s.x,p.z=s.y,p.w=0,t.subtract(p,l,p),p.x=0,t.magnitudeSquared(p)<h.EPSILON10&&(r.clone(r.UNIT_Y,d),r.clone(r.UNIT_Z,p))}t.cross(p,u,d),t.normalize(d,d),t.cross(u,d,p),t.normalize(p,p),m.setColumn(e._actualTransform,0,d,e._actualTransform),m.setColumn(e._actualTransform,1,p,e._actualTransform),m.setColumn(e._actualTransform,2,u,e._actualTransform),m.setColumn(e._actualTransform,3,l,e._actualTransform)}function b(e){var r=e._position,i=!t.equals(r,e.position);i&&(r=t.clone(e.position,e._position));var n=e._direction,o=!t.equals(n,e.direction);o&&(n=t.clone(e.direction,e._direction));var a=e._up,s=!t.equals(a,e.up);s&&(a=t.clone(e.up,e._up));var l=e._right,u=!t.equals(l,e.right);u&&(l=t.clone(e.right,e._right));var c=!m.equals(e._transform,e.transform)||e._modeChanged;c&&(m.clone(e.transform,e._transform),m.inverseTransformation(e._transform,e._invTransform),e._mode===C.COLUMBUS_VIEW||e._mode===C.SCENE2D?m.equals(m.IDENTITY,e._transform)?m.clone(Q.TRANSFORM_2D,e._actualTransform):e._mode===C.COLUMBUS_VIEW?S(e):E(e):m.clone(e._transform,e._actualTransform),m.inverseTransformation(e._actualTransform,e._actualInvTransform),e._modeChanged=!1);var d=e._actualTransform;if(i||c){e._positionWC=m.multiplyByPoint(d,r,e._positionWC);var p=e._mode;if(p===C.SCENE3D||p===C.MORPHING)e._positionCartographic=e._projection.ellipsoid.cartesianToCartographic(e._positionWC,e._positionCartographic);else{var f=ot;f.x=e._positionWC.y,f.y=e._positionWC.z,f.z=e._positionWC.x,p===C.SCENE2D&&(f.z=.5*(e.frustum.right-e.frustum.left)),e._projection.unproject(f,e._positionCartographic)}}if(o||s||u){var v=t.dot(n,t.cross(a,l,ot));if(Math.abs(1-v)>h.EPSILON2){n=t.normalize(n,e._direction),t.clone(n,e.direction);var g=1/t.magnitudeSquared(a),_=t.dot(a,n)*g,y=t.multiplyByScalar(n,_,ot);a=t.normalize(t.subtract(a,y,e._up),e._up),t.clone(a,e.up),l=t.cross(n,a,e._right),t.clone(l,e.right)}}(o||c)&&(e._directionWC=m.multiplyByPointAsVector(d,n,e._directionWC)),(s||c)&&(e._upWC=m.multiplyByPointAsVector(d,a,e._upWC)),(u||c)&&(e._rightWC=m.multiplyByPointAsVector(d,l,e._rightWC)),(i||o||s||u||c)&&w(e)}function T(e){return Math.atan2(e.right.y,e.right.x)}function x(e){var t=e._projection.ellipsoid,r=g.eastNorthUpToFixedFrame(e.position,t,at),i=m.getRotation(r,st);d.transpose(i,i);var n=d.multiplyByVector(i,e.right,lt);return Math.atan2(n.y,n.x)}function P(e,r){var i=T(e);r=i-r,e.look(t.UNIT_Z,r)}function A(e,r){var i=t.normalize(e.position,ut),n=x(e);r=n-r,e.look(i,r)}function M(e){return h.PI_OVER_TWO-h.acosClamped(-e.direction.z)}function D(e){var r=t.normalize(e.position,ct);return t.negate(r,r),h.PI_OVER_TWO-h.acosClamped(t.dot(e.direction,r))}function I(e,t){var r=e._maxCoord.x*e.maximumTranslateFactor;t.x>r&&(t.x=r),t.x<-r&&(t.x=-r);var i=e._maxCoord.y*e.maximumTranslateFactor;t.y>i&&(t.y=i),t.y<-i&&(t.y=-i)}function R(e,r){var i=e.position,n=t.normalize(i,yt);if(o(e.constrainedAxis)){var a=t.equalsEpsilon(n,e.constrainedAxis,h.EPSILON2),s=t.equalsEpsilon(n,t.negate(e.constrainedAxis,St),h.EPSILON2);if(a||s)(a&&0>r||s&&r>0)&&e.rotate(e.right,r);else{var l=t.normalize(e.constrainedAxis,Ct),u=t.dot(n,l),c=h.acosClamped(u);r>0&&r>c&&(r=c-h.EPSILON4),u=t.dot(n,t.negate(l,St)),c=h.acosClamped(u),0>r&&-r>c&&(r=-c+h.EPSILON4);var d=t.cross(l,n,wt);e.rotate(d,r)}}else e.rotate(e.right,r)}function O(e,t){o(e.constrainedAxis)?e.rotate(e.constrainedAxis,t):e.rotate(e.up,t)}function L(e,t){var r=e.frustum;t=.5*t;var i=r.right-t,n=r.left+t,o=e._maxCoord.x*e.maximumZoomFactor;i>o&&(i=o,n=-o),n>=i&&(i=1,n=-1);var a=r.top/r.right;r.right=i,r.left=n,r.top=r.right*a,r.bottom=-r.top}function N(e,t){e.move(e.direction,t)}function B(r,i){var n=.5*-i.height,o=-n,a=r.frustum;if(o>n){var s=a.top/a.right;a.right=o,a.left=n,a.top=a.right*s,a.bottom=-a.top}e.clone(r._projection.project(i),r.position),t.negate(t.UNIT_Z,r.direction),t.clone(t.UNIT_Y,r.up),t.clone(t.UNIT_X,r.right)}function F(e,r){var i=e._projection;e.position=i.project(r),t.negate(t.UNIT_Z,e.direction),t.clone(t.UNIT_Y,e.up),t.clone(t.UNIT_X,e.right)}function z(e,r){var i=e._projection.ellipsoid;i.cartographicToCartesian(r,e.position),t.negate(e.position,e.direction),t.normalize(e.direction,e.direction),t.cross(e.direction,t.UNIT_Z,e.right),t.cross(e.right,e.direction,e.up),t.cross(e.direction,e.up,e.right)}function V(e,r,i,n,a){o(n)||(n=new t);var s=e;a&&(s=Mt);var l=r.north,u=r.south,c=r.east,d=r.west;d>c&&(c+=h.TWO_PI);var m=Et;m.longitude=c,m.latitude=l;var p=i.cartographicToCartesian(m,bt);m.latitude=u;var f=i.cartographicToCartesian(m,Pt);m.longitude=d;var v=i.cartographicToCartesian(m,Tt);m.latitude=l;var g=i.cartographicToCartesian(m,xt),_=t.subtract(p,v,At);t.multiplyByScalar(_,.5,_),t.add(v,_,_);var y=t.magnitude(_);y<h.EPSILON6&&(m.longitude=.5*(c+d),m.latitude=.5*(l+u),i.cartographicToCartesian(m,_)),t.subtract(g,_,g),t.subtract(f,_,f),t.subtract(p,_,p),t.subtract(v,_,v);var C=t.negate(_,s.direction);t.normalize(C,C);var w=t.cross(C,t.UNIT_Z,s.right);t.normalize(w,w);var S=t.cross(w,C,s.up),E=Math.max(Math.abs(t.dot(S,g)),Math.abs(t.dot(S,f)),Math.abs(t.dot(S,p)),Math.abs(t.dot(S,v))),b=Math.max(Math.abs(t.dot(w,g)),Math.abs(t.dot(w,f)),Math.abs(t.dot(w,p)),Math.abs(t.dot(w,v))),T=Math.tan(.5*e.frustum.fovy),x=e.frustum.aspectRatio*T,P=Math.max(b/x,E/T),A=y+P;return t.normalize(_,_),t.multiplyByScalar(_,A,n)}function k(e,r,i,n,a){var s=r.north,l=r.south,u=r.east,c=r.west,h=e._actualTransform,d=e._actualInvTransform,p=Dt;p.longitude=u,p.latitude=s;var f=i.project(p,It);m.multiplyByPoint(h,f,f),m.multiplyByPoint(d,f,f),p.longitude=c,p.latitude=l;var v=i.project(p,Rt);m.multiplyByPoint(h,v,v),m.multiplyByPoint(d,v,v);var g=Math.tan(.5*e.frustum.fovy),_=e.frustum.aspectRatio*g;if(o(n)||(n=new t),n.x=.5*(f.x-v.x)+v.x,n.y=.5*(f.y-v.y)+v.y,n.z=.5*Math.max((f.x-v.x)/_,(f.y-v.y)/g),!a){var y=t.clone(t.UNIT_Z,e.direction);t.negate(y,y),t.clone(t.UNIT_X,e.right),t.clone(t.UNIT_Y,e.up)}return n}function U(e,r,i,n,a){var s=r.north,l=r.south,u=r.east,c=r.west,h=Ot;h.longitude=u,h.latitude=s;var d=i.project(h,Lt);h.longitude=c,h.latitude=l;var m,p,f=i.project(h,Nt),v=.5*Math.abs(d.x-f.x),g=.5*Math.abs(d.y-f.y),_=e.frustum.right/e.frustum.top,y=g*_;if(v>y?(m=v,p=m/_):(p=g,m=y),g=Math.max(2*m,2*p),o(n)||(n=new t),n.x=.5*(d.x-f.x)+f.x,n.y=.5*(d.y-f.y)+f.y,a)h=i.unproject(n,h),h.height=g,n=i.project(h,n);else{var C=e.frustum;C.right=m,C.left=-m,C.top=p,C.bottom=-p;var w=t.clone(t.UNIT_Z,e.direction);t.negate(w,w),t.clone(t.UNIT_X,e.right),t.clone(t.UNIT_Y,e.up)}return n}function W(e,t,r,i){r=n(r,u.WGS84);var o=e.getPickRay(t,Bt),a=c.rayEllipsoid(o,r);if(!a)return void 0;var s=a.start>0?a.start:a.stop;return f.getPoint(o,s,i)}function G(e,t,r,i){var n=e.getPickRay(t,Ft),o=n.origin;o.z=0;var a=r.unproject(o);return a.latitude<-h.PI_OVER_TWO||a.latitude>h.PI_OVER_TWO||a.longitude<-Math.PI||a.longitude>Math.PI?void 0:r.ellipsoid.cartographicToCartesian(a,i)}function H(e,r,i,n){var o=e.getPickRay(r,zt),a=-o.origin.x/o.direction.x;f.getPoint(o,a,n);var s=i.unproject(new t(n.y,n.z,0));return s.latitude<-h.PI_OVER_TWO||s.latitude>h.PI_OVER_TWO||s.longitude<-Math.PI||s.longitude>Math.PI?void 0:i.ellipsoid.cartographicToCartesian(s,n)}function q(e,r,i){var n=e._scene.canvas,o=n.clientWidth,a=n.clientHeight,s=Math.tan(.5*e.frustum.fovy),l=e.frustum.aspectRatio*s,u=e.frustum.near,c=2/o*r.x-1,h=2/a*(a-r.y)-1,d=e.positionWC;t.clone(d,i.origin);var m=t.multiplyByScalar(e.directionWC,u,Vt);t.add(d,m,m);var p=t.multiplyByScalar(e.rightWC,c*u*l,kt),f=t.multiplyByScalar(e.upWC,h*u*s,Ut),v=t.add(m,p,i.direction);return t.add(v,f,v),t.subtract(v,d,v),t.normalize(v,v),i}function j(e,r,i){var n=e._scene.canvas,o=n.clientWidth,a=n.clientHeight,s=2/o*r.x-1;s*=.5*(e.frustum.right-e.frustum.left);var l=2/a*(a-r.y)-1;l*=.5*(e.frustum.top-e.frustum.bottom);var u=i.origin;return t.clone(e.position,u),t.multiplyByScalar(e.right,s,Wt),t.add(Wt,u,u),t.multiplyByScalar(e.up,l,Wt),t.add(Wt,u,u),t.clone(e.directionWC,i.direction),i}function Y(e,r){var i=e.position,n=i.x<-e._maxCoord.x||i.x>e._maxCoord.x,o=i.y<-e._maxCoord.y||i.y>e._maxCoord.y,a=n||o,s=e.frustum,u=s.top,c=s.bottom,d=s.right,m=s.left,p=e._max2Dfrustum,f=d>e._max2Dfrustum.right;if(a||f){var v=t.clone(i);v.x>e._maxCoord.x?v.x=e._maxCoord.x:v.x<-e._maxCoord.x&&(v.x=-e._maxCoord.x),v.y>e._maxCoord.y?v.y=e._maxCoord.y:v.y<-e._maxCoord.y&&(v.y=-e._maxCoord.y);var g=function(r){a&&(e.position=t.lerp(i,v,r.time,e.position)),f&&(e.frustum.top=h.lerp(u,p.top,r.time),e.frustum.bottom=h.lerp(c,p.bottom,r.time),e.frustum.right=h.lerp(d,p.right,r.time),e.frustum.left=h.lerp(m,p.left,r.time))};return{easingFunction:l.EXPONENTIAL_OUT,startObject:{time:0},stopObject:{time:1},duration:r,update:g}}return void 0}function X(e,r,i,n,o,a){var s=t.clone(r);i.y>n?s.y-=i.y-n:i.y<-n&&(s.y+=-n-i.y),i.z>o?s.z-=i.z-o:i.z<-o&&(s.z+=-o-i.z);var u=function(i){var n=t.lerp(r,s,i.time,new t);e.worldToCameraCoordinatesPoint(n,e.position)};return{easingFunction:l.EXPONENTIAL_OUT,startObject:{time:0},stopObject:{time:1},duration:a,update:u}}function Z(e,r){var i=e.position,n=e.direction,o=e.worldToCameraCoordinatesVector(t.UNIT_X,Gt),a=-t.dot(o,i)/t.dot(o,n),s=t.add(i,t.multiplyByScalar(n,a,Ht),Ht);e.cameraToWorldCoordinatesPoint(s,s),i=e.cameraToWorldCoordinatesPoint(e.position,qt);var l=Math.tan(.5*e.frustum.fovy),u=e.frustum.aspectRatio*l,c=t.magnitude(t.subtract(i,s,jt)),h=u*c,d=l*c,m=e._maxCoord.x,p=e._maxCoord.y,f=Math.max(h-m,m),v=Math.max(d-p,p);if(i.z<-f||i.z>f||i.y<-v||i.y>v){var g=s.y<-f||s.y>f,_=s.z<-v||s.z>v;if(g||_)return X(e,i,s,f,v,r)}return void 0}var Q=function(e){this._scene=e,this.transform=m.clone(m.IDENTITY),this._transform=m.clone(m.IDENTITY),this._invTransform=m.clone(m.IDENTITY),this._actualTransform=m.clone(m.IDENTITY),this._actualInvTransform=m.clone(m.IDENTITY),this.position=new t,this._position=new t,this._positionWC=new t,this._positionCartographic=new i,this.direction=new t,this._direction=new t,this._directionWC=new t,this.up=new t,this._up=new t,this._upWC=new t,this.right=new t,this._right=new t,this._rightWC=new t,this.frustum=new y,this.frustum.aspectRatio=e.drawingBufferWidth/e.drawingBufferHeight,this.frustum.fov=h.toRadians(60),this.defaultMoveAmount=1e5,this.defaultLookAmount=Math.PI/60,this.defaultRotateAmount=Math.PI/3600,this.defaultZoomAmount=1e5,this.constrainedAxis=void 0,this.maximumTranslateFactor=1.5,this.maximumZoomFactor=2.5,this._viewMatrix=new m,this._invViewMatrix=new m,w(this),this._mode=C.SCENE3D,this._modeChanged=!0;var r=e.mapProjection;this._projection=r,this._maxCoord=r.project(new i(Math.PI,h.PI_OVER_TWO)),this._max2Dfrustum=void 0,this.viewRectangle(Q.DEFAULT_VIEW_RECTANGLE);var n=t.magnitude(this.position);n+=n*Q.DEFAULT_VIEW_FACTOR,t.normalize(this.position,this.position),t.multiplyByScalar(this.position,n,this.position)};Q.TRANSFORM_2D=new m(0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1),Q.TRANSFORM_2D_INVERSE=m.inverseTransformation(Q.TRANSFORM_2D,new m),Q.DEFAULT_VIEW_RECTANGLE=v.fromDegrees(-95,-20,-70,90),Q.DEFAULT_VIEW_FACTOR=.5;var J=new i,K=new t,$=new t,et=new r,tt=new r,rt=new r,it=new r,nt=new r,ot=new t,at=new m,st=new d,lt=new t,ut=new t,ct=new t;a(Q.prototype,{inverseTransform:{get:function(){return b(this),this._invTransform}},viewMatrix:{get:function(){return b(this),this._viewMatrix}},inverseViewMatrix:{get:function(){return b(this),this._invViewMatrix}},positionCartographic:{get:function(){return b(this),this._positionCartographic}},positionWC:{get:function(){return b(this),this._positionWC}},directionWC:{get:function(){return b(this),this._directionWC}},upWC:{get:function(){return b(this),this._upWC}},rightWC:{get:function(){return b(this),this._rightWC}},heading:{get:function(){return this._mode===C.SCENE2D||this._mode===C.COLUMBUS_VIEW?T(this):this._mode===C.SCENE3D?x(this):void 0},set:function(e){this._mode===C.SCENE2D||this._mode===C.COLUMBUS_VIEW?P(this,e):this._mode===C.SCENE3D&&A(this,e)}},tilt:{get:function(){return this._mode===C.COLUMBUS_VIEW?M(this):this._mode===C.SCENE3D?D(this):void 0},set:function(e){(this._mode===C.COLUMBUS_VIEW||this._mode===C.SCENE3D)&&(e=h.clamp(e,0,h.PI_OVER_TWO),e-=this.tilt,this.look(this.right,e))}}}),Q.prototype.update=function(e){var t=!1;if(e!==this._mode&&(this._mode=e,this._modeChanged=e!==C.MORPHING,t=this._mode===C.SCENE2D),t){var r=this._max2Dfrustum=this.frustum.clone(),i=2,n=r.top/r.right;r.right=this._maxCoord.x*i,r.left=-r.right,r.top=n*r.right,r.bottom=-r.top}};var ht=new t,dt=new t,mt=new t;Q.prototype.setTransform=function(e){var r=t.clone(this.positionWC,ht),i=t.clone(this.upWC,dt),n=t.clone(this.directionWC,mt);m.clone(e,this.transform),b(this);var o=this._actualInvTransform;m.multiplyByPoint(o,r,this.position),m.multiplyByPointAsVector(o,n,this.direction),m.multiplyByPointAsVector(o,i,this.up),t.cross(this.direction,this.up,this.right)},Q.prototype.worldToCameraCoordinates=function(e,t){return o(t)||(t=new r),b(this),m.multiplyByVector(this._actualInvTransform,e,t)},Q.prototype.worldToCameraCoordinatesPoint=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPoint(this._actualInvTransform,e,r)},Q.prototype.worldToCameraCoordinatesVector=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPointAsVector(this._actualInvTransform,e,r)},Q.prototype.cameraToWorldCoordinates=function(e,t){return o(t)||(t=new r),b(this),m.multiplyByVector(this._actualTransform,e,t)},Q.prototype.cameraToWorldCoordinatesPoint=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPoint(this._actualTransform,e,r)},Q.prototype.cameraToWorldCoordinatesVector=function(e,r){return o(r)||(r=new t),b(this),m.multiplyByPointAsVector(this._actualTransform,e,r)};var pt=new t;Q.prototype.move=function(e,r){var i=this.position;t.multiplyByScalar(e,r,pt),t.add(i,pt,i),this._mode===C.SCENE2D&&I(this,i)},Q.prototype.moveForward=function(e){e=n(e,this.defaultMoveAmount),this.move(this.direction,e)},Q.prototype.moveBackward=function(e){e=n(e,this.defaultMoveAmount),this.move(this.direction,-e)},Q.prototype.moveUp=function(e){e=n(e,this.defaultMoveAmount),this.move(this.up,e)},Q.prototype.moveDown=function(e){e=n(e,this.defaultMoveAmount),this.move(this.up,-e)},Q.prototype.moveRight=function(e){e=n(e,this.defaultMoveAmount),this.move(this.right,e)},Q.prototype.moveLeft=function(e){e=n(e,this.defaultMoveAmount),this.move(this.right,-e)},Q.prototype.lookLeft=function(e){e=n(e,this.defaultLookAmount),this.look(this.up,-e)},Q.prototype.lookRight=function(e){e=n(e,this.defaultLookAmount),this.look(this.up,e)},Q.prototype.lookUp=function(e){e=n(e,this.defaultLookAmount),this.look(this.right,-e)},Q.prototype.lookDown=function(e){e=n(e,this.defaultLookAmount),this.look(this.right,e)};var ft=new p,vt=new d;Q.prototype.look=function(e,t){var r=n(t,this.defaultLookAmount),i=p.fromAxisAngle(e,-r,ft),o=d.fromQuaternion(i,vt),a=this.direction,s=this.up,l=this.right;d.multiplyByVector(o,a,a),d.multiplyByVector(o,s,s),d.multiplyByVector(o,l,l)},Q.prototype.twistLeft=function(e){e=n(e,this.defaultLookAmount),this.look(this.direction,e)},Q.prototype.twistRight=function(e){e=n(e,this.defaultLookAmount),this.look(this.direction,-e)};var gt=new p,_t=new d;Q.prototype.rotate=function(e,r){var i=n(r,this.defaultRotateAmount),o=p.fromAxisAngle(e,-i,gt),a=d.fromQuaternion(o,_t);d.multiplyByVector(a,this.position,this.position),d.multiplyByVector(a,this.direction,this.direction),d.multiplyByVector(a,this.up,this.up),t.cross(this.direction,this.up,this.right),t.cross(this.right,this.direction,this.up)},Q.prototype.rotateDown=function(e){e=n(e,this.defaultRotateAmount),R(this,e)},Q.prototype.rotateUp=function(e){e=n(e,this.defaultRotateAmount),R(this,-e)};var yt=new t,Ct=new t,wt=new t,St=new t;Q.prototype.rotateRight=function(e){e=n(e,this.defaultRotateAmount),O(this,-e)},Q.prototype.rotateLeft=function(e){e=n(e,this.defaultRotateAmount),O(this,e)},Q.prototype.zoomIn=function(e){e=n(e,this.defaultZoomAmount),this._mode===C.SCENE2D?L(this,e):N(this,e)},Q.prototype.zoomOut=function(e){e=n(e,this.defaultZoomAmount),this._mode===C.SCENE2D?L(this,-e):N(this,-e)},Q.prototype.getMagnitude=function(){return this._mode===C.SCENE3D?t.magnitude(this.position):this._mode===C.COLUMBUS_VIEW?Math.abs(this.position.z):this._mode===C.SCENE2D?Math.max(this.frustum.right-this.frustum.left,this.frustum.top-this.frustum.bottom):void 0},Q.prototype.setPositionCartographic=function(e){this._mode===C.SCENE2D?B(this,e):this._mode===C.COLUMBUS_VIEW?F(this,e):this._mode===C.SCENE3D&&z(this,e)},Q.prototype.lookAt=function(r,i,n){if(this._mode===C.SCENE2D){e.clone(i,this.position),t.negate(t.UNIT_Z,this.direction),t.clone(n,this.up),this.up.z=0,t.magnitudeSquared(this.up)<h.EPSILON10&&t.clone(t.UNIT_Y,this.up),t.cross(this.direction,this.up,this.right);var o=this.frustum,a=o.top/o.right;return o.right=r.z,o.left=-o.right,o.top=a*o.right,o.bottom=-o.top,void 0}this.position=t.clone(r,this.position),this.direction=t.normalize(t.subtract(i,r,this.direction),this.direction),this.right=t.normalize(t.cross(this.direction,n,this.right),this.right),this.up=t.cross(this.right,this.direction,this.up)};var Et=new i,bt=new t,Tt=new t,xt=new t,Pt=new t,At=new t,Mt={direction:new t,right:new t,up:new t},Dt=new i,It=new t,Rt=new t,Ot=new i,Lt=new t,Nt=new t;Q.prototype.getRectangleCameraCoordinates=function(e,t){return this._mode===C.SCENE3D?V(this,e,this._projection.ellipsoid,t,!0):this._mode===C.COLUMBUS_VIEW?k(this,e,this._projection,t,!0):this._mode===C.SCENE2D?U(this,e,this._projection,t,!0):void 0},Q.prototype.viewRectangle=function(e,t){t=n(t,u.WGS84),this._mode===C.SCENE3D?V(this,e,t,this.position):this._mode===C.COLUMBUS_VIEW?k(this,e,this._projection,this.position):this._mode===C.SCENE2D&&U(this,e,this._projection,this.position)};var Bt=new f,Ft=new f,zt=new f;Q.prototype.pickEllipsoid=function(e,r,i){if(o(i)||(i=new t),r=n(r,u.WGS84),this._mode===C.SCENE3D)i=W(this,e,r,i);else if(this._mode===C.SCENE2D)i=G(this,e,this._projection,i);else{if(this._mode!==C.COLUMBUS_VIEW)return void 0;i=H(this,e,this._projection,i)}return i};var Vt=new t,kt=new t,Ut=new t,Wt=new t;Q.prototype.getPickRay=function(e,t){o(t)||(t=new f);var r=this.frustum;return o(r.aspectRatio)&&o(r.fov)&&o(r.near)?q(this,e,t):j(this,e,t)};var Gt=new t,Ht=new t,qt=new t,jt=new t;return Q.prototype.createCorrectPositionTween=function(e){return this._mode===C.SCENE2D?Y(this,e):this._mode===C.COLUMBUS_VIEW?Z(this,e):void 0},Q.prototype.flyTo=function(e){var t=this._scene;t.tweens.add(_.createTween(t,e))},Q.prototype.flyToRectangle=function(e){var t=this._scene;t.tweens.add(_.createTweenRectangle(t,e))},Q.prototype.clone=function(){var e=new Q(this._scene);return e.position=t.clone(this.position),e.direction=t.clone(this.direction),e.up=t.clone(this.up),e.right=t.clone(this.right),e.transform=m.clone(this.transform),e.frustum=this.frustum.clone(),e
},Q}),r("Scene/CameraEventType",["../Core/freezeObject"],function(e){"use strict";var t={LEFT_DRAG:0,RIGHT_DRAG:1,MIDDLE_DRAG:2,WHEEL:3,PINCH:4};return e(t)}),r("Scene/CameraEventAggregator",["../Core/Cartesian2","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/KeyboardEventModifier","../Core/Math","../Core/ScreenSpaceEventHandler","../Core/ScreenSpaceEventType","./CameraEventType"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,r){var i=e;return t(r)&&(i+="+"+r),i}function h(t,r){e.clone(t.distance.startPosition,r.distance.startPosition),e.clone(t.distance.endPosition,r.distance.endPosition),e.clone(t.angleAndHeight.startPosition,r.angleAndHeight.startPosition),e.clone(t.angleAndHeight.endPosition,r.angleAndHeight.endPosition)}function d(r,i,n){var o=c(u.PINCH,i),a=r._update,s=r._isDown,d=r._eventStartPosition,m=r._pressTime,p=r._releaseTime;a[o]=!0,s[o]=!1,d[o]=new e;var f=r._movement[o];t(f)||(f=r._movement[o]={}),f.distance={startPosition:new e,endPosition:new e},f.angleAndHeight={startPosition:new e,endPosition:new e},f.prevAngle=0,r._eventHandler.setInputAction(function(t){r._buttonsDown++,s[o]=!0,m[o]=new Date,e.clone(t.position,d[o])},l.PINCH_START,i),r._eventHandler.setInputAction(function(){r._buttonsDown=Math.max(r._buttonsDown-1,0),s[o]=!1,p[o]=new Date},l.PINCH_END,i),r._eventHandler.setInputAction(function(t){if(s[o]){a[o]?(h(t,f),a[o]=!1,f.prevAngle=f.angleAndHeight.startPosition.x):(e.clone(t.distance.endPosition,f.distance.endPosition),e.clone(t.angleAndHeight.endPosition,f.angleAndHeight.endPosition));for(var r=f.angleAndHeight.endPosition.x,i=f.prevAngle,l=2*Math.PI;r>=i+Math.PI;)r-=l;for(;r<i-Math.PI;)r+=l;f.angleAndHeight.endPosition.x=-r*n.clientWidth/12,f.angleAndHeight.startPosition.x=-i*n.clientWidth/12}},l.PINCH_MOVE,i)}function m(r,i){var n=c(u.WHEEL,i),o=r._update;o[n]=!0;var s=r._movement[n];t(s)||(s=r._movement[n]={}),s.startPosition=new e,s.endPosition=new e,r._eventHandler.setInputAction(function(t){var r=15*a.toRadians(t);o[n]?(e.clone(e.ZERO,s.startPosition),s.endPosition.x=0,s.endPosition.y=r,o[n]=!1):s.endPosition.y=s.endPosition.y+r},l.WHEEL,i)}function p(r,i,n){var o=c(n,i),a=r._isDown,s=r._eventStartPosition,h=r._pressTime,d=r._releaseTime;a[o]=!1,s[o]=new e;var m=r._lastMovement[o];t(m)||(m=r._lastMovement[o]={startPosition:new e,endPosition:new e,valid:!1});var p,f;n===u.LEFT_DRAG?(p=l.LEFT_DOWN,f=l.LEFT_UP):n===u.RIGHT_DRAG?(p=l.RIGHT_DOWN,f=l.RIGHT_UP):n===u.MIDDLE_DRAG&&(p=l.MIDDLE_DOWN,f=l.MIDDLE_UP),r._eventHandler.setInputAction(function(t){r._buttonsDown++,m.valid=!1,a[o]=!0,h[o]=new Date,e.clone(t.position,s[o])},p,i),r._eventHandler.setInputAction(function(){r._buttonsDown=Math.max(r._buttonsDown-1,0),a[o]=!1,d[o]=new Date},f,i)}function f(t,r){e.clone(t.startPosition,r.startPosition),e.clone(t.endPosition,r.endPosition)}function v(r,i){var n=r._update,o=r._movement,a=r._lastMovement,s=r._isDown;for(var h in u)if(u.hasOwnProperty(h)){var d=u[h];if(t(d)){var m=c(d,i);n[m]=!0,t(r._lastMovement[m])||(r._lastMovement[m]={startPosition:new e,endPosition:new e,valid:!1}),t(r._movement[m])||(r._movement[m]={startPosition:new e,endPosition:new e})}}r._eventHandler.setInputAction(function(l){for(var h in u)if(u.hasOwnProperty(h)){var d=u[h];if(t(d)){var m=c(d,i);s[m]&&(n[m]?(f(o[m],a[m]),a[m].valid=!0,f(l,o[m]),n[m]=!1):e.clone(l.endPosition,o[m].endPosition))}}e.clone(l.endPosition,r._currentMousePosition)},l.MOUSE_MOVE,i)}var g=function(r){this._eventHandler=new s(r),this._update={},this._movement={},this._lastMovement={},this._isDown={},this._eventStartPosition={},this._pressTime={},this._releaseTime={},this._buttonsDown=0,this._currentMousePosition=new e,m(this,void 0),d(this,void 0,r),p(this,void 0,u.LEFT_DRAG),p(this,void 0,u.RIGHT_DRAG),p(this,void 0,u.MIDDLE_DRAG),v(this,void 0);for(var i in o)if(o.hasOwnProperty(i)){var n=o[i];t(n)&&(m(this,n),d(this,n,r),p(this,n,u.LEFT_DRAG),p(this,n,u.RIGHT_DRAG),p(this,n,u.MIDDLE_DRAG),v(this,n))}};return r(g.prototype,{currentMousePosition:{get:function(){return this._currentMousePosition}},anyButtonDown:{get:function(){var e=!(this._update[c(u.WHEEL)]&&this._update[c(u.WHEEL,o.SHIFT)]&&this._update[c(u.WHEEL,o.CTRL)]&&this._update[c(u.WHEEL,o.ALT)]);return this._buttonsDown>0||e}}}),g.prototype.isMoving=function(e,t){var r=c(e,t);return!this._update[r]},g.prototype.getMovement=function(e,t){var r=c(e,t),i=this._movement[r];return i},g.prototype.getLastMovement=function(e,t){var r=c(e,t),i=this._lastMovement[r];return i.valid?i:void 0},g.prototype.isButtonDown=function(e,t){var r=c(e,t);return this._isDown[r]},g.prototype.getStartMousePosition=function(e,t){if(e===u.WHEEL)return this._currentMousePosition;var r=c(e,t);return this._eventStartPosition[r]},g.prototype.getButtonPressTime=function(e,t){var r=c(e,t);return this._pressTime[r]},g.prototype.getButtonReleaseTime=function(e,t){var r=c(e,t);return this._releaseTime[r]},g.prototype.reset=function(){for(var e in this._update)this._update.hasOwnProperty(e)&&(this._update[e]=!0)},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){return this._eventHandler=this._eventHandler&&this._eventHandler.destroy(),i(this)},g}),r("Scene/CreditDisplay",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i){"use strict";function n(e,t,i){if(!r(e.element)){var n=e.text,o=e.link,a=document.createElement("span");if(e.hasLink()){var s=document.createElement("a");s.textContent=n,s.href=o,s.target="_blank",a.appendChild(s)}else a.textContent=n;a.className="cesium-credit-text",e.element=a}if(t.hasChildNodes()){var l=document.createElement("span");l.textContent=i,l.className="cesium-credit-delimiter",t.appendChild(l)}t.appendChild(e.element)}function o(e,t){if(!r(e.element)){var i=e.text,n=e.link,o=document.createElement("span"),a=document.createElement("img");if(a.src=e.imageUrl,a.style["vertical-align"]="bottom",r(i)&&(a.alt=i,a.title=i),e.hasLink()){var s=document.createElement("a");s.appendChild(a),s.href=n,s.target="_blank",o.appendChild(s)}else o.appendChild(a);o.className="cesium-credit-image",e.element=o}t.appendChild(e.element)}function a(t,r){for(var i=t.length,n=0;i>n;n++){var o=t[n];if(e.equals(o,r))return!0}return!1}function s(e){var t=e.element;if(r(t)){var i=t.parentNode;if(!e.hasImage()){var n=t.previousSibling;null===n&&(n=t.nextSibling),null!==n&&i.removeChild(n)}i.removeChild(t)}}function l(e,t){var r,i,o,a=e._displayedCredits.textCredits;for(r=0;r<t.length;r++)o=t[r],i=a.indexOf(o),-1===i?n(o,e._textContainer,e._delimiter):a.splice(i,1);for(r=0;r<a.length;r++)o=a[r],s(o)}function u(e,t){var r,i,n,a=e._displayedCredits.imageCredits;for(r=0;r<t.length;r++)n=t[r],i=a.indexOf(n),-1===i?o(n,e._imageContainer):a.splice(i,1);for(r=0;r<a.length;r++)n=a[r],s(n)}var c=function(e,r){var i=document.createElement("span");i.className="cesium-credit-imageContainer";var n=document.createElement("span");n.className="cesium-credit-textContainer",e.appendChild(i),e.appendChild(n),this._delimiter=t(r," • "),this._container=e,this._textContainer=n,this._imageContainer=i,this._defaultImageCredits=[],this._defaultTextCredits=[],this._displayedCredits={imageCredits:[],textCredits:[]},this._currentFrameCredits={imageCredits:[],textCredits:[]}};return c.prototype.addCredit=function(e){if(e.hasImage()){var t=this._currentFrameCredits.imageCredits;a(t,e)||a(this._defaultImageCredits,e)||t.push(e)}else{var r=this._currentFrameCredits.textCredits;a(r,e)||a(this._defaultTextCredits,e)||r.push(e)}},c.prototype.addDefaultCredit=function(e){if(e.hasImage()){var t=this._defaultImageCredits;a(t,e)||t.push(e)}else{var r=this._defaultTextCredits;a(r,e)||r.push(e)}},c.prototype.removeDefaultCredit=function(e){var t;e.hasImage()?(t=this._defaultImageCredits.indexOf(e),-1!==t&&this._defaultImageCredits.splice(t,1)):(t=this._defaultTextCredits.indexOf(e),-1!==t&&this._defaultTextCredits.splice(t,1))},c.prototype.beginFrame=function(){this._currentFrameCredits.imageCredits.length=0,this._currentFrameCredits.textCredits.length=0},c.prototype.endFrame=function(){var e=this._defaultTextCredits.concat(this._currentFrameCredits.textCredits),t=this._defaultImageCredits.concat(this._currentFrameCredits.imageCredits);l(this,e),u(this,t),this._displayedCredits.textCredits=e,this._displayedCredits.imageCredits=t},c.prototype.destroy=function(){return this._container.removeChild(this._textContainer),this._container.removeChild(this._imageContainer),i(this)},c.prototype.isDestroyed=function(){return!1},c}),r("Scene/DebugAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","./Appearance"],function(e,t,r,i,n){"use strict";var o=function(t){t=e(t,e.EMPTY_OBJECT);var r,o=t.attributeName,a=e(t.glslDatatype,"vec3"),s="v_"+o;if("normal"===o||"binormal"===o|"tangent"===o)r="vec4 getColor() { return vec4(("+s+" + vec3(1.0)) * 0.5, 1.0); }\n";else switch("st"===o&&(a="vec2"),a){case"float":r="vec4 getColor() { return vec4(vec3("+s+"), 1.0); }\n";break;case"vec2":r="vec4 getColor() { return vec4("+s+", 0.0, 1.0); }\n";break;case"vec3":r="vec4 getColor() { return vec4("+s+", 1.0); }\n";break;case"vec4":r="vec4 getColor() { return "+s+"; }\n";break;default:throw new i("options.glslDatatype must be float, vec2, vec3, or vec4.")}var l="attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute "+a+" "+o+";\n"+"varying "+a+" "+s+";\n"+"void main()\n"+"{\n"+"vec4 p = czm_translateRelativeToEye(position3DHigh, position3DLow);\n"+s+" = "+o+";\n"+"gl_Position = czm_modelViewProjectionRelativeToEye * p;\n"+"}",u="varying "+a+" "+s+";\n"+r+"\n"+"void main()\n"+"{\n"+"gl_FragColor = getColor();\n"+"}";this.material=void 0,this.translucent=e(t.translucent,!1),this._vertexShaderSource=e(t.vertexShaderSource,l),this._fragmentShaderSource=e(t.fragmentShaderSource,u),this._renderState=e(t.renderState,n.getDefaultRenderState(!1,!1)),this._closed=e(t.closed,!1),this._attributeName=o,this._glslDatatype=a};return r(o.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},attributeName:{get:function(){return this._attributeName}},glslDatatype:{get:function(){return this._glslDatatype}}}),o.prototype.getFragmentShaderSource=n.prototype.getFragmentShaderSource,o.prototype.isTranslucent=n.prototype.isTranslucent,o.prototype.getRenderState=n.prototype.getRenderState,o}),r("Scene/DebugModelMatrixPrimitive",["../Core/Cartesian3","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/GeometryInstance","../Core/Matrix4","../Core/PolylineGeometry","./PolylineColorAppearance","./Primitive"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(e){e=r(e,r.EMPTY_OBJECT),this.length=r(e.length,1e7),this._length=void 0,this.width=r(e.width,2),this._width=void 0,this.show=r(e.show,!0),this.modelMatrix=a.clone(r(e.modelMatrix,a.IDENTITY)),this._modelMatrix=new a,this.id=e.id,this._id=void 0,this._primitive=void 0};return c.prototype.update=function(r,n,c){this.show&&(i(this._primitive)&&a.equals(this._modelMatrix,this.modelMatrix)&&this._length===this.length&&this._width===this.width&&this._id===this.id||(this._modelMatrix=a.clone(this.modelMatrix,this._modelMatrix),this._length=this.length,this._width=this.width,this._id=this.id,i(this._primitive)&&this._primitive.destroy(),0===this.modelMatrix[12]&&0===this.modelMatrix[13]&&0===this.modelMatrix[14]&&(this.modelMatrix[14]=.01),this._primitive=new u({geometryInstances:new o({geometry:s.createGeometry(new s({positions:[e.ZERO,e.UNIT_X,e.ZERO,e.UNIT_Y,e.ZERO,e.UNIT_Z],width:this.width,vertexFormat:l.VERTEX_FORMAT,colors:[t.RED,t.RED,t.GREEN,t.GREEN,t.BLUE,t.BLUE],followSurface:!1})),modelMatrix:a.multiplyByUniformScale(this.modelMatrix,this.length,new a),id:this.id,pickPrimitive:this}),appearance:new l,asynchronous:!1})),this._primitive.update(r,n,c))},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),n(this)},c}),r("Scene/DepthFunction",["../Core/freezeObject"],function(e){"use strict";var t={NEVER:512,LESS:513,EQUAL:514,LESS_OR_EQUAL:515,GREATER:516,NOT_EQUAL:517,GREATER_OR_EQUAL:518,ALWAYS:519};return e(t)}),r("Shaders/EllipsoidFS",[],function(){"use strict";return"#ifdef WRITE_DEPTH\n#ifdef GL_EXT_frag_depth\n#extension GL_EXT_frag_depth : enable\n#endif\n#endif\nuniform vec3 u_radii;\nuniform vec3 u_oneOverEllipsoidRadiiSquared;\nvarying vec3 v_positionEC;\nvec4 computeEllipsoidColor(czm_ray ray, float intersection, float side)\n{\nvec3 positionEC = czm_pointAlongRay(ray, intersection);\nvec3 positionMC = (czm_inverseModelView * vec4(positionEC, 1.0)).xyz;\nvec3 geodeticNormal = normalize(czm_geodeticSurfaceNormal(positionMC, vec3(0.0), u_oneOverEllipsoidRadiiSquared));\nvec3 sphericalNormal = normalize(positionMC / u_radii);\nvec3 normalMC = geodeticNormal * side;\nvec3 normalEC = normalize(czm_normal * normalMC);\nvec2 st = czm_ellipsoidWgs84TextureCoordinates(sphericalNormal);\nvec3 positionToEyeEC = -positionEC;\nczm_materialInput materialInput;\nmaterialInput.s = st.s;\nmaterialInput.st = st;\nmaterialInput.str = (positionMC + u_radii) / u_radii;\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(positionMC, normalEC);\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef ONLY_SUN_LIGHTING\nreturn czm_private_phong(normalize(positionToEyeEC), material);\n#else\nreturn czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\nvoid main()\n{\nfloat maxRadius = max(u_radii.x, max(u_radii.y, u_radii.z)) * 1.5;\nvec3 direction = normalize(v_positionEC);\nvec3 ellipsoidCenter = czm_modelView[3].xyz;\nfloat t1 = -1.0;\nfloat t2 = -1.0;\nfloat b = -2.0 * dot(direction, ellipsoidCenter);\nfloat c = dot(ellipsoidCenter, ellipsoidCenter) - maxRadius * maxRadius;\nfloat discriminant = b * b - 4.0 * c;\nif (discriminant >= 0.0) {\nt1 = (-b - sqrt(discriminant)) * 0.5;\nt2 = (-b + sqrt(discriminant)) * 0.5;\n}\nif (t1 < 0.0 && t2 < 0.0) {\ndiscard;\n}\nfloat t = min(t1, t2);\nif (t < 0.0) {\nt = 0.0;\n}\nczm_ellipsoid ellipsoid = czm_ellipsoidNew(ellipsoidCenter, u_radii);\nczm_ray ray = czm_ray(t * direction, direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (czm_isEmpty(intersection))\n{\ndiscard;\n}\nvec4 outsideFaceColor = (intersection.start != 0.0) ? computeEllipsoidColor(ray, intersection.start, 1.0) : vec4(0.0);\nvec4 insideFaceColor = (outsideFaceColor.a < 1.0) ? computeEllipsoidColor(ray, intersection.stop, -1.0) : vec4(0.0);\ngl_FragColor = mix(insideFaceColor, outsideFaceColor, outsideFaceColor.a);\ngl_FragColor.a = 1.0 - (1.0 - insideFaceColor.a) * (1.0 - outsideFaceColor.a);\n#ifdef WRITE_DEPTH\n#ifdef GL_EXT_frag_depth\nt = (intersection.start != 0.0) ? intersection.start : intersection.stop;\nvec3 positionEC = czm_pointAlongRay(ray, t);\nvec4 positionCC = czm_projection * vec4(positionEC, 1.0);\nfloat z = positionCC.z / positionCC.w;\nfloat n = czm_depthRange.near;\nfloat f = czm_depthRange.far;\ngl_FragDepthEXT = (z * (f - n) + f + n) * 0.5;\n#endif\n#endif\n}\n"}),r("Shaders/EllipsoidVS",[],function(){"use strict";return"attribute vec3 position;\nuniform vec3 u_radii;\nvarying vec3 v_positionEC;\nvoid main()\n{\nvec4 p = vec4(u_radii * position, 1.0);\nv_positionEC = (czm_modelView * p).xyz;\ngl_Position = czm_modelViewProjection * p;\ngl_Position.z = clamp(gl_Position.z, czm_depthRange.near, czm_depthRange.far);\n}\n"}),r("Scene/EllipsoidPrimitive",["../Core/BoundingSphere","../Core/BoxGeometry","../Core/Cartesian3","../Core/combine","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Matrix4","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/EllipsoidFS","../Shaders/EllipsoidVS","./BlendingState","./CullFace","./Material","./Pass","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e){var i=e.cache.ellipsoidPrimitive_vertexArray;if(o(i))return i;var n=t.createGeometry(t.fromDimensions({dimensions:new r(2,2,2),vertexFormat:u.POSITION_ONLY}));return i=e.createVertexArrayFromGeometry({geometry:n,attributeLocations:w,bufferUsage:c.STATIC_DRAW,interleave:!0}),e.cache.ellipsoidPrimitive_vertexArray=i,i}var w={position:0},S=function(t){t=n(t,n.EMPTY_OBJECT),this.center=r.clone(n(t.center,r.ZERO)),this._center=new r,this.radii=r.clone(t.radii),this._radii=new r,this._oneOverEllipsoidRadiiSquared=new r,this._boundingSphere=new e,this.modelMatrix=l.clone(n(t.modelMatrix,l.IDENTITY)),this._modelMatrix=new l,this._computedModelMatrix=new l,this.show=n(t.show,!0),this.material=n(t.material,g.fromType(g.ColorType)),this._material=void 0,this._translucent=void 0,this.id=t.id,this._id=void 0,this.debugShowBoundingVolume=n(t.debugShowBoundingVolume,!1),this.onlySunLighting=n(t.onlySunLighting,!1),this._onlySunLighting=!1,this._sp=void 0,this._rs=void 0,this._va=void 0,this._pickSP=void 0,this._pickId=void 0,this._colorCommand=new d({owner:n(t._owner,this)}),this._pickCommand=new d({owner:n(t._owner,this)});var i=this;this._uniforms={u_radii:function(){return i.radii},u_oneOverEllipsoidRadiiSquared:function(){return i._oneOverEllipsoidRadiiSquared}},this._pickUniforms={czm_pickColor:function(){return i._pickId.color}}};return S.prototype.update=function(t,n,a){if(this.show&&n.mode===y.SCENE3D&&o(this.center)&&o(this.radii)){var s=this.material.isTranslucent(),u=this._translucent!==s;(!o(this._rs)||u)&&(this._translucent=s,this._rs=t.createRenderState({cull:{enabled:!0,face:v.FRONT},depthTest:{enabled:!0},depthMask:!s&&t.fragmentDepth,blending:s?f.ALPHA_BLEND:void 0})),o(this._va)||(this._va=C(t));var c=!1,d=this.radii;if(!r.equals(this._radii,d)){r.clone(d,this._radii);var g=this._oneOverEllipsoidRadiiSquared;g.x=1/(d.x*d.x),g.y=1/(d.y*d.y),g.z=1/(d.z*d.z),c=!0}l.equals(this.modelMatrix,this._modelMatrix)&&r.equals(this.center,this._center)||(l.clone(this.modelMatrix,this._modelMatrix),r.clone(this.center,this._center),l.multiplyByTranslation(this.modelMatrix,this.center,this._computedModelMatrix),c=!0),c&&(r.clone(r.ZERO,this._boundingSphere.center),this._boundingSphere.radius=r.maximumComponent(d),e.transform(this._boundingSphere,this._computedModelMatrix,this._boundingSphere));var S=this._material!==this.material;this._material=this.material,this._material.update(t);var E=this.onlySunLighting!==this._onlySunLighting;this._onlySunLighting=this.onlySunLighting;var b=this._colorCommand;if(S||E||u){var T=h({defines:[this.onlySunLighting?"ONLY_SUN_LIGHTING":"",!s&&t.fragmentDepth?"WRITE_DEPTH":""],sources:[this.material.shaderSource,m]});this._sp=t.replaceShaderProgram(this._sp,p,T,w),b.vertexArray=this._va,b.renderState=this._rs,b.shaderProgram=this._sp,b.uniformMap=i(this._uniforms,this.material._uniforms),b.executeInClosestFrustum=s}var x=n.passes;if(x.render&&(b.boundingVolume=this._boundingSphere,b.debugShowBoundingVolume=this.debugShowBoundingVolume,b.modelMatrix=this._computedModelMatrix,b.pass=s?_.TRANSLUCENT:_.OPAQUE,a.push(b)),x.pick){var P=this._pickCommand;if(o(this._pickId)&&this._id===this.id||(this._id=this.id,this._pickId=this._pickId&&this._pickId.destroy(),this._pickId=t.createPickId({primitive:this,id:this.id})),S||E||!o(this._pickSP)){var A=h({defines:[this.onlySunLighting?"ONLY_SUN_LIGHTING":"",!s&&t.fragmentDepth?"WRITE_DEPTH":""],sources:[this.material.shaderSource,m],pickColorQualifier:"uniform"});this._pickSP=t.replaceShaderProgram(this._pickSP,p,A,w),P.vertexArray=this._va,P.renderState=this._rs,P.shaderProgram=this._pickSP,P.uniformMap=i(i(this._uniforms,this._pickUniforms),this.material._uniforms),P.executeInClosestFrustum=s}P.boundingVolume=this._boundingSphere,P.modelMatrix=this._computedModelMatrix,P.pass=s?_.TRANSLUCENT:_.OPAQUE,a.push(P)}}},S.prototype.isDestroyed=function(){return!1},S.prototype.destroy=function(){return this._sp=this._sp&&this._sp.destroy(),this._pickSP=this._pickSP&&this._pickSP.destroy(),this._pickId=this._pickId&&this._pickId.destroy(),a(this)},S}),r("Shaders/Appearances/EllipsoidSurfaceAppearanceFS",[],function(){"use strict";return"varying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nvec3 normalEC = czm_normal3D * czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0));\n#ifdef FACE_FORWARD\nnormalEC = normalize(faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC));\n#else\nnormalEC = normalize(normalEC);\n#endif\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(v_positionMC, materialInput.normalEC);\nvec3 positionToEyeEC = -v_positionEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n#endif\n}\n"}),r("Shaders/Appearances/EllipsoidSurfaceAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec2 st;\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nvec4 p = czm_computePosition();\nv_positionMC = position3DHigh + position3DLow;\nv_positionEC = (czm_modelViewRelativeToEye * p).xyz;\nv_st = st;\ngl_Position = czm_modelViewProjectionRelativeToEye * p;\n}\n"}),r("Scene/EllipsoidSurfaceAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/EllipsoidSurfaceAppearanceFS","../Shaders/Appearances/EllipsoidSurfaceAppearanceVS","./Appearance","./Material"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,e.EMPTY_OBJECT);var i=e(r.translucent,!0),l=e(r.aboveGround,!1);this.material=t(r.material)?r.material:s.fromType(s.ColorType),this.translucent=e(r.translucent,!0),this._vertexShaderSource=e(r.vertexShaderSource,o),this._fragmentShaderSource=e(r.fragmentShaderSource,n),this._renderState=e(r.renderState,a.getDefaultRenderState(i,!l)),this._closed=!1,this._flat=e(r.flat,!1),this._faceForward=e(r.faceForward,l),this._aboveGround=l};return r(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return l.VERTEX_FORMAT}},flat:{get:function(){return this._flat}},faceForward:{get:function(){return this._faceForward}},aboveGround:{get:function(){return this._aboveGround}}}),l.VERTEX_FORMAT=i.POSITION_AND_ST,l.prototype.getFragmentShaderSource=a.prototype.getFragmentShaderSource,l.prototype.isTranslucent=a.prototype.isTranslucent,l.prototype.getRenderState=a.prototype.getRenderState,l}),r("Shaders/PostProcessFilters/FXAA",[],function(){"use strict";return"#ifndef FXAA_PRESET\n#define FXAA_PRESET 3\n#endif\n#if (FXAA_PRESET == 3)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        16\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#if (FXAA_PRESET == 4)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        24\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#if (FXAA_PRESET == 5)\n#define FXAA_EDGE_THRESHOLD      (1.0/8.0)\n#define FXAA_EDGE_THRESHOLD_MIN  (1.0/24.0)\n#define FXAA_SEARCH_STEPS        32\n#define FXAA_SEARCH_THRESHOLD    (1.0/4.0)\n#define FXAA_SUBPIX_CAP          (3.0/4.0)\n#define FXAA_SUBPIX_TRIM         (1.0/4.0)\n#endif\n#define FXAA_SUBPIX_TRIM_SCALE (1.0/(1.0 - FXAA_SUBPIX_TRIM))\nfloat FxaaLuma(vec3 rgb) {\nreturn rgb.y * (0.587/0.299) + rgb.x;\n}\nvec3 FxaaLerp3(vec3 a, vec3 b, float amountOfA) {\nreturn (vec3(-amountOfA) * b) + ((a * vec3(amountOfA)) + b);\n}\nvec4 FxaaTexOff(sampler2D tex, vec2 pos, ivec2 off, vec2 rcpFrame) {\nfloat x = pos.x + float(off.x) * rcpFrame.x;\nfloat y = pos.y + float(off.y) * rcpFrame.y;\nreturn texture2D(tex, vec2(x, y));\n}\nvec3 FxaaPixelShader(vec2 pos, sampler2D tex, vec2 rcpFrame)\n{\nvec3 rgbN = FxaaTexOff(tex, pos.xy, ivec2( 0,-1), rcpFrame).xyz;\nvec3 rgbW = FxaaTexOff(tex, pos.xy, ivec2(-1, 0), rcpFrame).xyz;\nvec3 rgbM = FxaaTexOff(tex, pos.xy, ivec2( 0, 0), rcpFrame).xyz;\nvec3 rgbE = FxaaTexOff(tex, pos.xy, ivec2( 1, 0), rcpFrame).xyz;\nvec3 rgbS = FxaaTexOff(tex, pos.xy, ivec2( 0, 1), rcpFrame).xyz;\nfloat lumaN = FxaaLuma(rgbN);\nfloat lumaW = FxaaLuma(rgbW);\nfloat lumaM = FxaaLuma(rgbM);\nfloat lumaE = FxaaLuma(rgbE);\nfloat lumaS = FxaaLuma(rgbS);\nfloat rangeMin = min(lumaM, min(min(lumaN, lumaW), min(lumaS, lumaE)));\nfloat rangeMax = max(lumaM, max(max(lumaN, lumaW), max(lumaS, lumaE)));\nfloat range = rangeMax - rangeMin;\nif(range < max(FXAA_EDGE_THRESHOLD_MIN, rangeMax * FXAA_EDGE_THRESHOLD))\n{\nreturn rgbM;\n}\nvec3 rgbL = rgbN + rgbW + rgbM + rgbE + rgbS;\nfloat lumaL = (lumaN + lumaW + lumaE + lumaS) * 0.25;\nfloat rangeL = abs(lumaL - lumaM);\nfloat blendL = max(0.0, (rangeL / range) - FXAA_SUBPIX_TRIM) * FXAA_SUBPIX_TRIM_SCALE;\nblendL = min(FXAA_SUBPIX_CAP, blendL);\nvec3 rgbNW = FxaaTexOff(tex, pos.xy, ivec2(-1,-1), rcpFrame).xyz;\nvec3 rgbNE = FxaaTexOff(tex, pos.xy, ivec2( 1,-1), rcpFrame).xyz;\nvec3 rgbSW = FxaaTexOff(tex, pos.xy, ivec2(-1, 1), rcpFrame).xyz;\nvec3 rgbSE = FxaaTexOff(tex, pos.xy, ivec2( 1, 1), rcpFrame).xyz;\nrgbL += (rgbNW + rgbNE + rgbSW + rgbSE);\nrgbL *= vec3(1.0/9.0);\nfloat lumaNW = FxaaLuma(rgbNW);\nfloat lumaNE = FxaaLuma(rgbNE);\nfloat lumaSW = FxaaLuma(rgbSW);\nfloat lumaSE = FxaaLuma(rgbSE);\nfloat edgeVert =\nabs((0.25 * lumaNW) + (-0.5 * lumaN) + (0.25 * lumaNE)) +\nabs((0.50 * lumaW ) + (-1.0 * lumaM) + (0.50 * lumaE )) +\nabs((0.25 * lumaSW) + (-0.5 * lumaS) + (0.25 * lumaSE));\nfloat edgeHorz =\nabs((0.25 * lumaNW) + (-0.5 * lumaW) + (0.25 * lumaSW)) +\nabs((0.50 * lumaN ) + (-1.0 * lumaM) + (0.50 * lumaS )) +\nabs((0.25 * lumaNE) + (-0.5 * lumaE) + (0.25 * lumaSE));\nbool horzSpan = edgeHorz >= edgeVert;\nfloat lengthSign = horzSpan ? -rcpFrame.y : -rcpFrame.x;\nif(!horzSpan)\n{\nlumaN = lumaW;\nlumaS = lumaE;\n}\nfloat gradientN = abs(lumaN - lumaM);\nfloat gradientS = abs(lumaS - lumaM);\nlumaN = (lumaN + lumaM) * 0.5;\nlumaS = (lumaS + lumaM) * 0.5;\nif (gradientN < gradientS)\n{\nlumaN = lumaS;\nlumaN = lumaS;\ngradientN = gradientS;\nlengthSign *= -1.0;\n}\nvec2 posN;\nposN.x = pos.x + (horzSpan ? 0.0 : lengthSign * 0.5);\nposN.y = pos.y + (horzSpan ? lengthSign * 0.5 : 0.0);\ngradientN *= FXAA_SEARCH_THRESHOLD;\nvec2 posP = posN;\nvec2 offNP = horzSpan ? vec2(rcpFrame.x, 0.0) : vec2(0.0, rcpFrame.y);\nfloat lumaEndN = lumaN;\nfloat lumaEndP = lumaN;\nbool doneN = false;\nbool doneP = false;\nposN += offNP * vec2(-1.0, -1.0);\nposP += offNP * vec2( 1.0,  1.0);\nfor(int i = 0; i < FXAA_SEARCH_STEPS; i++) {\nif(!doneN)\n{\nlumaEndN = FxaaLuma(texture2D(tex, posN.xy).xyz);\n}\nif(!doneP)\n{\nlumaEndP = FxaaLuma(texture2D(tex, posP.xy).xyz);\n}\ndoneN = doneN || (abs(lumaEndN - lumaN) >= gradientN);\ndoneP = doneP || (abs(lumaEndP - lumaN) >= gradientN);\nif(doneN && doneP)\n{\nbreak;\n}\nif(!doneN)\n{\nposN -= offNP;\n}\nif(!doneP)\n{\nposP += offNP;\n}\n}\nfloat dstN = horzSpan ? pos.x - posN.x : pos.y - posN.y;\nfloat dstP = horzSpan ? posP.x - pos.x : posP.y - pos.y;\nbool directionN = dstN < dstP;\nlumaEndN = directionN ? lumaEndN : lumaEndP;\nif(((lumaM - lumaN) < 0.0) == ((lumaEndN - lumaN) < 0.0))\n{\nlengthSign = 0.0;\n}\nfloat spanLength = (dstP + dstN);\ndstN = directionN ? dstN : dstP;\nfloat subPixelOffset = (0.5 + (dstN * (-1.0/spanLength))) * lengthSign;\nvec3 rgbF = texture2D(tex, vec2(\npos.x + (horzSpan ? 0.0 : subPixelOffset),\npos.y + (horzSpan ? subPixelOffset : 0.0))).xyz;\nreturn FxaaLerp3(rgbL, rgbF, blendL);\n}\nuniform sampler2D u_texture;\nuniform vec2 u_step;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = vec4(FxaaPixelShader(v_textureCoordinates, u_texture, u_step), 1.0);\n}\n"}),r("Scene/FXAA",["../Core/Cartesian2","../Core/Color","../Core/defined","../Core/destroyObject","../Core/PixelFormat","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/PixelDatatype","../Renderer/RenderbufferFormat","../Shaders/PostProcessFilters/FXAA"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e){e._fbo=e._fbo&&e._fbo.destroy(),e._texture=e._texture&&e._texture.destroy(),e._depthTexture=e._depthTexture&&e._depthTexture.destroy(),e._depthRenderbuffer=e._depthRenderbuffer&&e._depthRenderbuffer.destroy(),e._fbo=void 0,e._texture=void 0,e._depthTexture=void 0,e._depthRenderbuffer=void 0,r(e._command)&&(e._command.shaderProgram=e._command.shaderProgram&&e._command.shaderProgram.destroy(),e._command=void 0)}var h=function(){this._texture=void 0,this._depthTexture=void 0,this._depthRenderbuffer=void 0,this._fbo=void 0,this._command=void 0;var e=new o({color:new t(0,0,0,0),depth:1,owner:this});this._clearCommand=e};return h.prototype.update=function(t){var i=t.drawingBufferWidth,o=t.drawingBufferHeight,c=this._texture,h=!r(c)||c.width!==i||c.height!==o;if(h&&(this._texture=this._texture&&this._texture.destroy(),this._depthTexture=this._depthTexture&&this._depthTexture.destroy(),this._depthRenderbuffer=this._depthRenderbuffer&&this._depthRenderbuffer.destroy(),this._texture=t.createTexture2D({width:i,height:o,pixelFormat:n.RGBA,pixelDatatype:s.UNSIGNED_BYTE}),t.depthTexture?this._depthTexture=t.createTexture2D({width:i,height:o,pixelFormat:n.DEPTH_COMPONENT,pixelDatatype:s.UNSIGNED_SHORT}):this._depthRenderbuffer=t.createRenderbuffer({width:i,height:o,format:l.DEPTH_COMPONENT16})),(!r(this._fbo)||h)&&(this._fbo=this._fbo&&this._fbo.destroy(),this._fbo=t.createFramebuffer({colorTextures:[this._texture],depthTexture:this._depthTexture,depthRenderbuffer:this._depthRenderbuffer,destroyAttachments:!1})),!r(this._command)){var d=a({sources:[u]});this._command=t.createViewportQuadCommand(d,{renderState:t.createRenderState(),owner:this})}if(h){var m=this,p=new e(1/this._texture.width,1/this._texture.height);this._command.uniformMap={u_texture:function(){return m._texture},u_step:function(){return p}}}},h.prototype.execute=function(e,t){this._command.execute(e,t)},h.prototype.clear=function(e,r,i){var n=r.framebuffer;r.framebuffer=this._fbo,t.clone(i,this._clearCommand.color),this._clearCommand.execute(e,r),r.framebuffer=n},h.prototype.getColorFramebuffer=function(){return this._fbo},h.prototype.isDestroyed=function(){return!1},h.prototype.destroy=function(){return c(this),i(this)},h}),r("Scene/FrameRateMonitor",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/getTimestamp","../Core/TimeConstants"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){if(!(e._pauseCount>0)){var t=a();if(e._needsQuietPeriod)e._needsQuietPeriod=!1,e._frameTimes.length=0,e._quietPeriodEndTime=t+e.quietPeriod/s.SECONDS_PER_MILLISECOND,e._warmupPeriodEndTime=e._quietPeriodEndTime+(e.warmupPeriod+e.samplingWindow)/s.SECONDS_PER_MILLISECOND;else if(t>=e._quietPeriodEndTime){e._frameTimes.push(t);var r=t-e.samplingWindow/s.SECONDS_PER_MILLISECOND;if(e._frameTimes.length>=2&&e._frameTimes[0]<=r){for(;e._frameTimes.length>=2&&e._frameTimes[1]<r;)e._frameTimes.shift();
var i=(t-e._frameTimes[0])/(e._frameTimes.length-1);e._lastFramesPerSecond=1e3/i;var n=1e3/(t>e._warmupPeriodEndTime?e.minimumFrameRateAfterWarmup:e.minimumFrameRateDuringWarmup);i>n?e._frameRateIsLow||(e._frameRateIsLow=!0,e._needsQuietPeriod=!0,e.lowFrameRate.raiseEvent(e.scene,e._lastFramesPerSecond)):e._frameRateIsLow&&(e._frameRateIsLow=!1,e._needsQuietPeriod=!0,e.nominalFrameRate.raiseEvent(e.scene,e._lastFramesPerSecond))}}}}function u(e){document[e._hiddenPropertyName]?e.pause():e.unpause()}var c=function(r){function i(){u(n)}this._scene=r.scene,this.samplingWindow=e(r.samplingWindow,c.defaultSettings.samplingWindow),this.quietPeriod=e(r.quietPeriod,c.defaultSettings.quietPeriod),this.warmupPeriod=e(r.warmupPeriod,c.defaultSettings.warmupPeriod),this.minimumFrameRateDuringWarmup=e(r.minimumFrameRateDuringWarmup,c.defaultSettings.minimumFrameRateDuringWarmup),this.minimumFrameRateAfterWarmup=e(r.minimumFrameRateAfterWarmup,c.defaultSettings.minimumFrameRateAfterWarmup),this._lowFrameRate=new o,this._nominalFrameRate=new o,this._frameTimes=[],this._needsQuietPeriod=!0,this._quietPeriodEndTime=0,this._warmupPeriodEndTime=0,this._frameRateIsLow=!1,this._lastFramesPerSecond=void 0,this._pauseCount=0;var n=this;this._preRenderRemoveListener=this._scene.preRender.addEventListener(function(e,t){l(n,t)}),this._hiddenPropertyName=t(document.hidden)?"hidden":t(document.mozHidden)?"mozHidden":t(document.msHidden)?"msHidden":t(document.webkitHidden)?"webkitHidden":void 0;var a=t(document.hidden)?"visibilitychange":t(document.mozHidden)?"mozvisibilitychange":t(document.msHidden)?"msvisibilitychange":t(document.webkitHidden)?"webkitvisibilitychange":void 0;this._visibilityChangeRemoveListener=void 0,t(a)&&(document.addEventListener(a,i,!1),this._visibilityChangeRemoveListener=function(){document.removeEventListener(a,i,!1)})};return c.defaultSettings={samplingWindow:5,quietPeriod:2,warmupPeriod:5,minimumFrameRateDuringWarmup:4,minimumFrameRateAfterWarmup:8},c.fromScene=function(e){return(!t(e._frameRateMonitor)||e._frameRateMonitor.isDestroyed())&&(e._frameRateMonitor=new c({scene:e})),e._frameRateMonitor},r(c.prototype,{scene:{get:function(){return this._scene}},lowFrameRate:{get:function(){return this._lowFrameRate}},nominalFrameRate:{get:function(){return this._nominalFrameRate}},lastFramesPerSecond:{get:function(){return this._lastFramesPerSecond}}}),c.prototype.pause=function(){++this._pauseCount,1===this._pauseCount&&(this._frameTimes.length=0,this._lastFramesPerSecond=void 0)},c.prototype.unpause=function(){--this._pauseCount,this._pauseCount<=0&&(this._pauseCount=0,this._needsQuietPeriod=!0)},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._preRenderRemoveListener(),t(this._visibilityChangeRemoveListener)&&this._visibilityChangeRemoveListener(),i(this)},c}),r("Scene/FrameState",["./SceneMode"],function(e){"use strict";var t=function(t){this.mode=e.SCENE3D,this.morphTime=e.getMorphTime(e.SCENE3D),this.frameNumber=0,this.time=void 0,this.mapProjection=void 0,this.camera=void 0,this.cullingVolume=void 0,this.occluder=void 0,this.passes={render:!1,pick:!1},this.creditDisplay=t,this.afterRender=[],this.scene3DOnly=!1};return t}),r("Scene/FrustumCommands",["../Core/defaultValue"],function(e){"use strict";var t=function(t,r){this.near=e(t,0),this.far=e(r,0),this.opaqueCommands=[],this.translucentCommands=[]};return t}),r("Shaders/GlobeFS",[],function(){"use strict";return"uniform vec4 u_initialColor;\n#if TEXTURE_UNITS > 0\nuniform sampler2D u_dayTextures[TEXTURE_UNITS];\nuniform vec4 u_dayTextureTranslationAndScale[TEXTURE_UNITS];\n#ifdef APPLY_ALPHA\nuniform float u_dayTextureAlpha[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_BRIGHTNESS\nuniform float u_dayTextureBrightness[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_CONTRAST\nuniform float u_dayTextureContrast[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_HUE\nuniform float u_dayTextureHue[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_SATURATION\nuniform float u_dayTextureSaturation[TEXTURE_UNITS];\n#endif\n#ifdef APPLY_GAMMA\nuniform float u_dayTextureOneOverGamma[TEXTURE_UNITS];\n#endif\nuniform vec4 u_dayTextureTexCoordsRectangle[TEXTURE_UNITS];\n#endif\n#ifdef SHOW_REFLECTIVE_OCEAN\nuniform sampler2D u_waterMask;\nuniform vec4 u_waterMaskTranslationAndScale;\nuniform float u_zoomedOutOceanSpecularIntensity;\n#endif\n#ifdef SHOW_OCEAN_WAVES\nuniform sampler2D u_oceanNormalMap;\n#endif\n#ifdef ENABLE_DAYNIGHT_SHADING\nuniform vec2 u_lightingFadeDistance;\n#endif\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_textureCoordinates;\nvarying vec3 v_normalMC;\nvarying vec3 v_normalEC;\nvec4 sampleAndBlend(\nvec4 previousColor,\nsampler2D texture,\nvec2 tileTextureCoordinates,\nvec4 textureCoordinateRectangle,\nvec4 textureCoordinateTranslationAndScale,\nfloat textureAlpha,\nfloat textureBrightness,\nfloat textureContrast,\nfloat textureHue,\nfloat textureSaturation,\nfloat textureOneOverGamma)\n{\nvec2 alphaMultiplier = step(textureCoordinateRectangle.st, tileTextureCoordinates);\ntextureAlpha = textureAlpha * alphaMultiplier.x * alphaMultiplier.y;\nalphaMultiplier = step(vec2(0.0), textureCoordinateRectangle.pq - tileTextureCoordinates);\ntextureAlpha = textureAlpha * alphaMultiplier.x * alphaMultiplier.y;\nvec2 translation = textureCoordinateTranslationAndScale.xy;\nvec2 scale = textureCoordinateTranslationAndScale.zw;\nvec2 textureCoordinates = tileTextureCoordinates * scale + translation;\nvec4 sample = texture2D(texture, textureCoordinates);\nvec3 color = sample.rgb;\nfloat alpha = sample.a;\n#ifdef APPLY_BRIGHTNESS\ncolor = mix(vec3(0.0), color, textureBrightness);\n#endif\n#ifdef APPLY_CONTRAST\ncolor = mix(vec3(0.5), color, textureContrast);\n#endif\n#ifdef APPLY_HUE\ncolor = czm_hue(color, textureHue);\n#endif\n#ifdef APPLY_SATURATION\ncolor = czm_saturation(color, textureSaturation);\n#endif\n#ifdef APPLY_GAMMA\ncolor = pow(color, vec3(textureOneOverGamma));\n#endif\nfloat sourceAlpha = alpha * textureAlpha;\nfloat outAlpha = mix(previousColor.a, 1.0, sourceAlpha);\nvec3 outColor = mix(previousColor.rgb * previousColor.a, color, sourceAlpha) / outAlpha;\nreturn vec4(outColor, outAlpha);\n}\nvec4 computeDayColor(vec4 initialColor, vec2 textureCoordinates);\nvec4 computeWaterColor(vec3 positionEyeCoordinates, vec2 textureCoordinates, mat3 enuToEye, vec4 imageryColor, float specularMapValue);\nvoid main()\n{\nvec4 color = computeDayColor(u_initialColor, clamp(v_textureCoordinates, 0.0, 1.0));\n#ifdef SHOW_TILE_BOUNDARIES\nif (v_textureCoordinates.x < (1.0/256.0) || v_textureCoordinates.x > (255.0/256.0) ||\nv_textureCoordinates.y < (1.0/256.0) || v_textureCoordinates.y > (255.0/256.0))\n{\ncolor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n#endif\n#if defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING)\nvec3 normalMC = normalize(czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0)));\nvec3 normalEC = normalize(czm_normal3D * normalMC);\n#elif defined(ENABLE_VERTEX_LIGHTING)\nvec3 normalMC = normalize(v_normalMC);\nvec3 normalEC = normalize(v_normalEC);\n#endif\n#ifdef SHOW_REFLECTIVE_OCEAN\nvec2 waterMaskTranslation = u_waterMaskTranslationAndScale.xy;\nvec2 waterMaskScale = u_waterMaskTranslationAndScale.zw;\nvec2 waterMaskTextureCoordinates = v_textureCoordinates * waterMaskScale + waterMaskTranslation;\nfloat mask = texture2D(u_waterMask, waterMaskTextureCoordinates).r;\nif (mask > 0.0)\n{\nmat3 enuToEye = czm_eastNorthUpToEyeCoordinates(v_positionMC, normalEC);\nvec2 ellipsoidTextureCoordinates = czm_ellipsoidWgs84TextureCoordinates(normalMC);\nvec2 ellipsoidFlippedTextureCoordinates = czm_ellipsoidWgs84TextureCoordinates(normalMC.zyx);\nvec2 textureCoordinates = mix(ellipsoidTextureCoordinates, ellipsoidFlippedTextureCoordinates, czm_morphTime * smoothstep(0.9, 0.95, normalMC.z));\ncolor = computeWaterColor(v_positionEC, textureCoordinates, enuToEye, color, mask);\n}\n#endif\n#ifdef ENABLE_VERTEX_LIGHTING\nfloat diffuseIntensity = czm_getLambertDiffuse(czm_sunDirectionEC, normalEC) * 0.8 + 0.2;\ngl_FragColor = vec4(color.rgb * diffuseIntensity, color.a);\n#elif defined(ENABLE_DAYNIGHT_SHADING)\nfloat diffuseIntensity = clamp(czm_getLambertDiffuse(czm_sunDirectionEC, normalEC) * 5.0 + 0.3, 0.0, 1.0);\nfloat cameraDist = length(czm_view[3]);\nfloat fadeOutDist = u_lightingFadeDistance.x;\nfloat fadeInDist = u_lightingFadeDistance.y;\nfloat t = clamp((cameraDist - fadeOutDist) / (fadeInDist - fadeOutDist), 0.0, 1.0);\ndiffuseIntensity = mix(1.0, diffuseIntensity, t);\ngl_FragColor = vec4(color.rgb * diffuseIntensity, color.a);\n#else\ngl_FragColor = color;\n#endif\n}\n#ifdef SHOW_REFLECTIVE_OCEAN\nfloat waveFade(float edge0, float edge1, float x)\n{\nfloat y = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\nreturn pow(1.0 - y, 5.0);\n}\nfloat linearFade(float edge0, float edge1, float x)\n{\nreturn clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n}\nconst float oceanFrequencyLowAltitude = 825000.0;\nconst float oceanAnimationSpeedLowAltitude = 0.004;\nconst float oceanOneOverAmplitudeLowAltitude = 1.0 / 2.0;\nconst float oceanSpecularIntensity = 0.5;\nconst float oceanFrequencyHighAltitude = 125000.0;\nconst float oceanAnimationSpeedHighAltitude = 0.008;\nconst float oceanOneOverAmplitudeHighAltitude = 1.0 / 2.0;\nvec4 computeWaterColor(vec3 positionEyeCoordinates, vec2 textureCoordinates, mat3 enuToEye, vec4 imageryColor, float specularMapValue)\n{\nvec3 positionToEyeEC = -positionEyeCoordinates;\nfloat positionToEyeECLength = length(positionToEyeEC);\nvec3 normalizedpositionToEyeEC = normalize(normalize(positionToEyeEC));\nfloat waveIntensity = waveFade(70000.0, 1000000.0, positionToEyeECLength);\n#ifdef SHOW_OCEAN_WAVES\nfloat time = czm_frameNumber * oceanAnimationSpeedHighAltitude;\nvec4 noise = czm_getWaterNoise(u_oceanNormalMap, textureCoordinates * oceanFrequencyHighAltitude, time, 0.0);\nvec3 normalTangentSpaceHighAltitude = vec3(noise.xy, noise.z * oceanOneOverAmplitudeHighAltitude);\ntime = czm_frameNumber * oceanAnimationSpeedLowAltitude;\nnoise = czm_getWaterNoise(u_oceanNormalMap, textureCoordinates * oceanFrequencyLowAltitude, time, 0.0);\nvec3 normalTangentSpaceLowAltitude = vec3(noise.xy, noise.z * oceanOneOverAmplitudeLowAltitude);\nfloat highAltitudeFade = linearFade(0.0, 60000.0, positionToEyeECLength);\nfloat lowAltitudeFade = 1.0 - linearFade(20000.0, 60000.0, positionToEyeECLength);\nvec3 normalTangentSpace =\n(highAltitudeFade * normalTangentSpaceHighAltitude) +\n(lowAltitudeFade * normalTangentSpaceLowAltitude);\nnormalTangentSpace = normalize(normalTangentSpace);\nnormalTangentSpace.xy *= waveIntensity;\nnormalTangentSpace = normalize(normalTangentSpace);\n#else\nvec3 normalTangentSpace = vec3(0.0, 0.0, 1.0);\n#endif\nvec3 normalEC = enuToEye * normalTangentSpace;\nconst vec3 waveHighlightColor = vec3(0.3, 0.45, 0.6);\nfloat diffuseIntensity = czm_getLambertDiffuse(czm_sunDirectionEC, normalEC);\nvec3 diffuseHighlight = waveHighlightColor * diffuseIntensity;\n#ifdef SHOW_OCEAN_WAVES\nfloat tsPerturbationRatio = normalTangentSpace.z;\nvec3 nonDiffuseHighlight = mix(waveHighlightColor * 5.0 * (1.0 - tsPerturbationRatio), vec3(0.0), diffuseIntensity);\n#else\nvec3 nonDiffuseHighlight = vec3(0.0);\n#endif\nfloat specularIntensity = czm_getSpecular(czm_sunDirectionEC, normalizedpositionToEyeEC, normalEC, 10.0) + 0.25 * czm_getSpecular(czm_moonDirectionEC, normalizedpositionToEyeEC, normalEC, 10.0);\nfloat surfaceReflectance = mix(0.0, mix(u_zoomedOutOceanSpecularIntensity, oceanSpecularIntensity, waveIntensity), specularMapValue);\nfloat specular = specularIntensity * surfaceReflectance;\nreturn vec4(imageryColor.rgb + diffuseHighlight + nonDiffuseHighlight + specular, imageryColor.a);\n}\n#endif\n"}),r("Shaders/GlobeFSDepth",[],function(){"use strict";return"varying vec4 positionEC;\nvoid main()\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(positionEC.xyz);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection))\n{\ngl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n}\nelse\n{\ndiscard;\n}\n}\n"}),r("Shaders/GlobeFSPole",[],function(){"use strict";return"uniform vec3 u_color;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(czm_windowToEyeCoordinates(gl_FragCoord).xyz);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection))\n{\nvec3 positionEC = czm_pointAlongRay(ray, intersection.start);\nvec3 positionMC = (czm_inverseModelView * vec4(positionEC, 1.0)).xyz;\nvec3 normalMC = normalize(czm_geodeticSurfaceNormal(positionMC, vec3(0.0), vec3(1.0)));\nvec3 normalEC = normalize(czm_normal * normalMC);\nvec3 startDayColor = u_color;\ngl_FragColor = vec4(startDayColor, 1.0);\n}\nelse\n{\ndiscard;\n}\n}\n"}),r("Shaders/GlobeVS",[],function(){"use strict";return"attribute vec4 position3DAndHeight;\nattribute vec4 textureCoordAndEncodedNormals;\nuniform vec3 u_center3D;\nuniform mat4 u_modifiedModelView;\nuniform vec4 u_tileRectangle;\nuniform vec2 u_southAndNorthLatitude;\nuniform vec3 u_southMercatorYLowAndHighAndOneOverHeight;\nvarying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_textureCoordinates;\nvarying vec3 v_normalMC;\nvarying vec3 v_normalEC;\nvec4 getPosition(vec3 position3DWC);\nfloat get2DYPositionFraction();\nvec4 getPosition3DMode(vec3 position3DWC)\n{\nreturn czm_projection * (u_modifiedModelView * vec4(position3DAndHeight.xyz, 1.0));\n}\nfloat get2DMercatorYPositionFraction()\n{\nconst float maxTileWidth = 0.003068;\nfloat positionFraction = textureCoordAndEncodedNormals.y;\nfloat southLatitude = u_southAndNorthLatitude.x;\nfloat northLatitude = u_southAndNorthLatitude.y;\nif (northLatitude - southLatitude > maxTileWidth)\n{\nfloat southMercatorYLow = u_southMercatorYLowAndHighAndOneOverHeight.x;\nfloat southMercatorYHigh = u_southMercatorYLowAndHighAndOneOverHeight.y;\nfloat oneOverMercatorHeight = u_southMercatorYLowAndHighAndOneOverHeight.z;\nfloat currentLatitude = mix(southLatitude, northLatitude, textureCoordAndEncodedNormals.y);\ncurrentLatitude = clamp(currentLatitude, -czm_webMercatorMaxLatitude, czm_webMercatorMaxLatitude);\npositionFraction = czm_latitudeToWebMercatorFraction(currentLatitude, southMercatorYLow, southMercatorYHigh, oneOverMercatorHeight);\n}\nreturn positionFraction;\n}\nfloat get2DGeographicYPositionFraction()\n{\nreturn textureCoordAndEncodedNormals.y;\n}\nvec4 getPositionPlanarEarth(vec3 position3DWC, float height2D)\n{\nfloat yPositionFraction = get2DYPositionFraction();\nvec4 rtcPosition2D = vec4(height2D, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordAndEncodedNormals.x, yPositionFraction)), 1.0);\nreturn czm_projection * (u_modifiedModelView * rtcPosition2D);\n}\nvec4 getPosition2DMode(vec3 position3DWC)\n{\nreturn getPositionPlanarEarth(position3DWC, 0.0);\n}\nvec4 getPositionColumbusViewMode(vec3 position3DWC)\n{\nreturn getPositionPlanarEarth(position3DWC, position3DAndHeight.w);\n}\nvec4 getPositionMorphingMode(vec3 position3DWC)\n{\nfloat yPositionFraction = get2DYPositionFraction();\nvec4 position2DWC = vec4(0.0, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordAndEncodedNormals.x, yPositionFraction)), 1.0);\nvec4 morphPosition = czm_columbusViewMorph(position2DWC, vec4(position3DWC, 1.0), czm_morphTime);\nreturn czm_modelViewProjection * morphPosition;\n}\nvoid main()\n{\nvec3 position3DWC = position3DAndHeight.xyz + u_center3D;\ngl_Position = getPosition(position3DWC);\n#if defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING)\nv_positionEC = (czm_modelView3D * vec4(position3DWC, 1.0)).xyz;\nv_positionMC = position3DWC;\n#elif defined(ENABLE_VERTEX_LIGHTING)\nv_positionEC = (czm_modelView3D * vec4(position3DWC, 1.0)).xyz;\nv_positionMC = position3DWC;\nvec2 encodedNormal = textureCoordAndEncodedNormals.zw;\nencodedNormal = encodedNormal / 255.0 * 2.0 - 1.0;\nv_normalMC = czm_octDecode(encodedNormal);\nv_normalEC = czm_normal3D * v_normalMC;\n#endif\nv_textureCoordinates = textureCoordAndEncodedNormals.xy;\n}\n"}),r("Shaders/GlobeVSDepth",[],function(){"use strict";return"attribute vec4 position;\nvarying vec4 positionEC;\nvoid main()\n{\npositionEC = czm_modelView * position;\ngl_Position = czm_projection * positionEC;\n}\n"}),r("Shaders/GlobeVSPole",[],function(){"use strict";return"attribute vec4 position;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nfloat x = (position.x - czm_viewport.x) / czm_viewport.z;\nfloat y = (position.y - czm_viewport.y) / czm_viewport.w;\nv_textureCoordinates = vec2(x, y);\ngl_Position = czm_viewportOrthographic * position;\n}\n"}),r("Scene/terrainAttributeLocations",[],function(){"use strict";return{position3DAndHeight:0,textureCoordAndEncodedNormals:1}}),r("Scene/GlobeSurfaceShaderSet",["../Core/defined","../Core/destroyObject","../Scene/terrainAttributeLocations"],function(e,t,r){"use strict";function i(){this.baseVertexShaderString=void 0,this.baseFragmentShaderString=void 0,this._attributeLocations=r,this._shaders={}}function n(e,t,r,i,n,o,a){var s="";return s+=e,t&&(s+="_brightness"),r&&(s+="_contrast"),i&&(s+="_hue"),n&&(s+="_saturation"),o&&(s+="_gamma"),a&&(s+="_alpha"),s}return i.prototype.invalidateShaders=function(){var e=this._shaders;for(var t in e)e.hasOwnProperty(t)&&e[t].destroy();this._shaders={}},i.prototype.getShaderProgram=function(t,r,i,o,a,s,l,u){var c=n(r,i,o,a,s,l,u),h=this._shaders[c];if(!e(h)){for(var d=this.baseVertexShaderString,m=(i?"#define APPLY_BRIGHTNESS\n":"")+(o?"#define APPLY_CONTRAST\n":"")+(a?"#define APPLY_HUE\n":"")+(s?"#define APPLY_SATURATION\n":"")+(l?"#define APPLY_GAMMA\n":"")+(u?"#define APPLY_ALPHA\n":"")+"#define TEXTURE_UNITS "+r+"\n"+this.baseFragmentShaderString+"\n"+"vec4 computeDayColor(vec4 initialColor, vec2 textureCoordinates)\n"+"{\n"+"    vec4 color = initialColor;\n",p=0;r>p;++p)m+="color = sampleAndBlend(\n   color,\n   u_dayTextures["+p+"],\n"+"   textureCoordinates,\n"+"   u_dayTextureTexCoordsRectangle["+p+"],\n"+"   u_dayTextureTranslationAndScale["+p+"],\n"+(u?"   u_dayTextureAlpha["+p+"],\n":"1.0,\n")+(i?"   u_dayTextureBrightness["+p+"],\n":"0.0,\n")+(o?"   u_dayTextureContrast["+p+"],\n":"0.0,\n")+(a?"   u_dayTextureHue["+p+"],\n":"0.0,\n")+(s?"   u_dayTextureSaturation["+p+"],\n":"0.0,\n")+(l?"   u_dayTextureOneOverGamma["+p+"]);\n":"0.0);\n");m+="    return color;\n}",h=t.createShaderProgram(d,m,this._attributeLocations),this._shaders[c]=h}return h},i.prototype.destroy=function(){return this.invalidateShaders(),t(this)},i}),r("Scene/ImageryState",["../Core/freezeObject"],function(e){"use strict";var t={UNLOADED:0,TRANSITIONING:1,RECEIVED:2,TEXTURE_LOADED:3,READY:4,FAILED:5,INVALID:6,PLACEHOLDER:7};return e(t)}),r("Scene/QuadtreeTileLoadState",["../Core/freezeObject"],function(e){"use strict";var t={START:0,LOADING:1,DONE:2,FAILED:3};return e(t)}),r("Scene/TerrainState",["../Core/freezeObject"],function(e){"use strict";var t={FAILED:0,UNLOADED:1,RECEIVING:2,RECEIVED:3,TRANSFORMING:4,TRANSFORMED:5,READY:6};return e(t)}),r("Scene/TileTerrain",["../Core/BoundingSphere","../Core/Cartesian3","../Core/ComponentDatatype","../Core/defined","../Core/DeveloperError","../Core/IndexDatatype","../Core/TileProviderError","../Renderer/BufferUsage","../ThirdParty/when","./terrainAttributeLocations","./TerrainState"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e,t,r,n,o){function s(t){e.data=t,e.state=c.RECEIVED}function u(){e.state=c.FAILED;var i="Failed to obtain terrain tile X: "+r+" Y: "+n+" Level: "+o+".";t._requestError=a.handleError(t._requestError,t,t.errorEvent,i,r,n,o,h)}function h(){e.data=t.requestTileGeometry(r,n,o),i(e.data)?(e.state=c.RECEIVING,l(e.data,s,u)):e.state=c.UNLOADED}h()}function d(e,t,r,n,o,a){var s=r.tilingScheme,u=e.data,h=u.createMesh(s,n,o,a);i(h)&&(e.state=c.TRANSFORMING,l(h,function(t){e.mesh=t,e.state=c.TRANSFORMED},function(){e.state=c.FAILED}))}function m(e,t,n){var a,l,h=r.FLOAT,d=e.mesh.vertices,m=t.createVertexBuffer(d,s.STATIC_DRAW);n.hasVertexNormals?(a=8*r.getSizeInBytes(h),l=4):(a=6*r.getSizeInBytes(h),l=2);var p=4,f=[{index:u.position3DAndHeight,vertexBuffer:m,componentDatatype:h,componentsPerAttribute:p,offsetInBytes:0,strideInBytes:a},{index:u.textureCoordAndEncodedNormals,vertexBuffer:m,componentDatatype:h,componentsPerAttribute:l,offsetInBytes:p*r.getSizeInBytes(h),strideInBytes:a}],v=e.mesh.indices.indexBuffers||{},g=v[t.id];if(!i(g)||g.isDestroyed()){var _=e.mesh.indices;g=t.createIndexBuffer(_,s.STATIC_DRAW,o.UNSIGNED_SHORT),g.vertexArrayDestroyable=!1,g.referenceCount=1,v[t.id]=g,e.mesh.indices.indexBuffers=v}else++g.referenceCount;e.vertexArray=t.createVertexArray(f,g),e.state=c.READY}var p=function(e){this.state=c.UNLOADED,this.data=void 0,this.mesh=void 0,this.vertexArray=void 0,this.upsampleDetails=e};return p.prototype.freeResources=function(){if(this.state=c.UNLOADED,this.data=void 0,this.mesh=void 0,i(this.vertexArray)){var e=this.vertexArray.indexBuffer;this.vertexArray.destroy(),this.vertexArray=void 0,!e.isDestroyed()&&i(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy())}},p.prototype.publishToTile=function(r){var i=r.data,n=this.mesh;t.clone(n.center,i.center),i.minimumHeight=n.minimumHeight,i.maximumHeight=n.maximumHeight,i.boundingSphere3D=e.clone(n.boundingSphere3D,i.boundingSphere3D),r.data.occludeePointInScaledSpace=t.clone(n.occludeePointInScaledSpace,i.occludeePointInScaledSpace),i.freeVertexArray(),i.vertexArray=this.vertexArray,this.vertexArray=void 0},p.prototype.processLoadStateMachine=function(e,t,r,i,n){this.state===c.UNLOADED&&h(this,t,r,i,n),this.state===c.RECEIVED&&d(this,e,t,r,i,n),this.state===c.TRANSFORMED&&m(this,e,t,r,i,n)},p.prototype.processUpsampleStateMachine=function(e,t,r,n,o){if(this.state===c.UNLOADED){var a=this.upsampleDetails,s=a.data,u=a.x,h=a.y,p=a.level;if(this.data=s.upsample(t.tilingScheme,u,h,p,r,n,o),!i(this.data))return;this.state=c.RECEIVING;var f=this;l(this.data,function(e){f.data=e,f.state=c.RECEIVED},function(){f.state=c.FAILED})}this.state===c.RECEIVED&&d(this,e,t,r,n,o),this.state===c.TRANSFORMED&&m(this,e,t,r,n,o)},p}),r("Scene/GlobeSurfaceTile",["../Core/BoundingSphere","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/deprecationWarning","../Core/IntersectionTests","../Core/PixelFormat","../Core/Rectangle","../Renderer/PixelDatatype","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","./ImageryState","./QuadtreeTileLoadState","./SceneMode","./TerrainState","./TileTerrain"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y){"use strict";function C(e,r,i,n,a){if(t.unpack(i,6*n,a),t.add(e.center,a,a),o(r)&&r.mode!==g.SCENE3D){var s=r.mapProjection,l=s.ellipsoid,u=l.cartesianToCartographic(a);s.project(u,a),t.fromElements(a.z,a.x,a.y,a)}return a}function w(e,r,i){var n=e.data,a=E(e);o(a)&&(n.upsampledTerrain=new y(a)),x(e,r)&&(n.loadedTerrain=new y);for(var s=0,l=i.length;l>s;++s){var u=i.get(s);u.show&&u._createTileImagerySkeletons(e,r)}var h=e.tilingScheme.ellipsoid,d=e.rectangle;h.cartographicToCartesian(c.southwest(d),n.southwestCornerCartesian),h.cartographicToCartesian(c.northeast(d),n.northeastCornerCartesian),z.longitude=d.west,z.latitude=.5*(d.south+d.north),z.height=0;var m=h.cartographicToCartesian(z,B),p=t.cross(m,t.UNIT_Z,L);t.normalize(p,n.westNormal),z.longitude=d.east;var f=h.cartographicToCartesian(z,F),v=t.cross(t.UNIT_Z,f,L);t.normalize(v,n.eastNormal);var g=h.geodeticSurfaceNormalCartographic(c.southeast(d),N),_=t.subtract(m,f,L),C=t.cross(g,_,N);t.normalize(C,n.southNormal);var w=h.geodeticSurfaceNormalCartographic(c.northwest(d),N),S=t.cross(_,w,N);t.normalize(S,n.northNormal)}function S(e,t,r){var i=e.data,a=i.loadedTerrain,s=i.upsampledTerrain,l=!1;if(o(a)){if(a.processLoadStateMachine(t,r,e.x,e.y,e.level),a.state>=_.RECEIVED){if(i.terrainData!==a.data){i.terrainData=a.data;var u=i.terrainData.waterMask;o(u)&&(o(i.waterMaskTexture)&&(--i.waterMaskTexture.referenceCount,0===i.waterMaskTexture.referenceCount&&i.waterMaskTexture.destroy()),i.waterMaskTexture=P(t,u),i.waterMaskTranslationAndScale.x=0,i.waterMaskTranslationAndScale.y=0,i.waterMaskTranslationAndScale.z=1,i.waterMaskTranslationAndScale.w=1),T(e)}l=!0}a.state===_.READY?(a.publishToTile(e),i.pickTerrain=n(i.loadedTerrain,i.upsampledTerrain),i.loadedTerrain=void 0,i.upsampledTerrain=void 0):a.state===_.FAILED&&(i.loadedTerrain=void 0)}!l&&o(s)&&(s.processUpsampleStateMachine(t,r,e.x,e.y,e.level),s.state>=_.RECEIVED&&i.terrainData!==s.data&&(i.terrainData=s.data,r.hasWaterMask&&A(e),b(e)),s.state===_.READY?(s.publishToTile(e),i.pickTerrain=i.upsampledTerrain,i.upsampledTerrain=void 0):s.state===_.FAILED&&(i.upsampledTerrain=void 0))}function E(e){for(var t=e.parent;o(t)&&o(t.data)&&!o(t.data.terrainData);)t=t.parent;return o(t)&&o(t.data)?{data:t.data.terrainData,x:t.x,y:t.y,level:t.level}:void 0}function b(e){var t=e.data;if(o(e._children))for(var r=0;4>r;++r){var i=e._children[r];if(i.state!==v.START){var n=i.data;if(o(n.terrainData)&&!n.terrainData.wasCreatedByUpsampling())continue;o(n.upsampledTerrain)&&n.upsampledTerrain.freeResources(),n.upsampledTerrain=new y({data:t.terrainData,x:e.x,y:e.y,level:e.level}),i.state=v.LOADING}}}function T(e){var t=e.data;if(o(e.children))for(var r=0;4>r;++r){var i=e.children[r];if(i.state!==v.START){var n=i.data;if(o(n.terrainData)&&!n.terrainData.wasCreatedByUpsampling())continue;o(n.upsampledTerrain)&&n.upsampledTerrain.freeResources(),n.upsampledTerrain=new y({data:t.terrainData,x:e.x,y:e.y,level:e.level}),t.terrainData.isChildAvailable(e.x,e.y,i.x,i.y)&&(o(n.loadedTerrain)||(n.loadedTerrain=new y)),i.state=v.LOADING}}}function x(e,t){if(o(t.getTileDataAvailable)){var r=t.getTileDataAvailable(e.x,e.y,e.level);if(o(r))return r}else s("TerrainProvider.getTileDataAvailable","TerrainProviders must now implement the getTileDataAvailable function.");var i=e.parent;return o(i)?o(i.data)&&o(i.data.terrainData)?i.data.terrainData.isChildAvailable(i.x,i.y,e.x,e.y):!1:!0}function P(e,t){var r,i=e.cache.tile_waterMaskData;o(i)||(i=e.cache.tile_waterMaskData={allWaterTexture:void 0,allLandTexture:void 0,sampler:void 0,destroy:function(){o(this.allWaterTexture)&&this.allWaterTexture.destroy(),o(this.allLandTexture)&&this.allLandTexture.destroy()}});var n=Math.sqrt(t.length);return 1!==n||0!==t[0]&&255!==t[0]?(r=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{width:n,height:n,arrayBufferView:t}}),r.referenceCount=0,o(i.sampler)||(i.sampler=e.createSampler({wrapS:p.CLAMP_TO_EDGE,wrapT:p.CLAMP_TO_EDGE,minificationFilter:m.LINEAR,magnificationFilter:d.LINEAR})),r.sampler=i.sampler):(o(i.allWaterTexture)||(i.allWaterTexture=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{arrayBufferView:new Uint8Array([255]),width:1,height:1}}),i.allWaterTexture.referenceCount=1,i.allLandTexture=e.createTexture2D({pixelFormat:u.LUMINANCE,pixelDatatype:h.UNSIGNED_BYTE,source:{arrayBufferView:new Uint8Array([0]),width:1,height:1}}),i.allLandTexture.referenceCount=1),r=0===t[0]?i.allLandTexture:i.allWaterTexture),++r.referenceCount,r}function A(e){for(var t=e.data,r=e.parent;o(r)&&!o(r.data.terrainData)||r.data.terrainData.wasCreatedByUpsampling();)r=r.parent;if(o(r)&&o(r.data.waterMaskTexture)){t.waterMaskTexture=r.data.waterMaskTexture,++t.waterMaskTexture.referenceCount;var i=r.rectangle,n=e.rectangle,a=n.east-n.west,s=n.north-n.south,l=a/(i.east-i.west),u=s/(i.north-i.south);t.waterMaskTranslationAndScale.x=l*(n.west-i.west)/a,t.waterMaskTranslationAndScale.y=u*(n.south-i.south)/s,t.waterMaskTranslationAndScale.z=l,t.waterMaskTranslationAndScale.w=u}}var M=function(){this.imagery=[],this.southwestCornerCartesian=new t,this.northeastCornerCartesian=new t,this.westNormal=new t,this.southNormal=new t,this.eastNormal=new t,this.northNormal=new t,this.waterMaskTexture=void 0,this.waterMaskTranslationAndScale=new r(0,0,1,1),this.terrainData=void 0,this.center=new t,this.vertexArray=void 0,this.minimumHeight=0,this.maximumHeight=0,this.boundingSphere3D=new e,this.boundingSphere2D=new e,this.occludeePointInScaledSpace=new t,this.loadedTerrain=void 0,this.upsampledTerrain=void 0,this.pickBoundingSphere=new e,this.pickTerrain=void 0};a(M.prototype,{eligibleForUnloading:{get:function(){for(var e=this.loadedTerrain,t=o(e)&&(e.state===_.RECEIVING||e.state===_.TRANSFORMING),r=this.upsampledTerrain,i=o(r)&&(r.state===_.RECEIVING||r.state===_.TRANSFORMING),n=!t&&!i,a=this.imagery,s=0,l=a.length;n&&l>s;++s){var u=a[s];n=!o(u.loadingImagery)||u.loadingImagery.state!==f.TRANSITIONING}return n}}});var D=new t,I=new t,R=new t,O=new t;M.prototype.pick=function(e,r,i,n){var a=this.pickTerrain;if(!o(a))return void 0;var s=a.mesh;if(!o(s))return void 0;for(var u=s.vertices,c=s.indices,h=c.length,d=0;h>d;d+=3){var m=c[d],p=c[d+1],f=c[d+2],v=C(this,r,u,m,D),g=C(this,r,u,p,I),_=C(this,r,u,f,R),y=l.rayTriangle(e,v,g,_,i,O);if(o(y))return t.clone(y,n)}return void 0},M.prototype.freeResources=function(){o(this.waterMaskTexture)&&(--this.waterMaskTexture.referenceCount,0===this.waterMaskTexture.referenceCount&&this.waterMaskTexture.destroy(),this.waterMaskTexture=void 0),this.terrainData=void 0,o(this.loadedTerrain)&&(this.loadedTerrain.freeResources(),this.loadedTerrain=void 0),o(this.upsampledTerrain)&&(this.upsampledTerrain.freeResources(),this.upsampledTerrain=void 0),o(this.pickTerrain)&&(this.pickTerrain.freeResources(),this.pickTerrain=void 0);var e,t,r=this.imagery;for(e=0,t=r.length;t>e;++e)r[e].freeResources();this.imagery.length=0,this.freeVertexArray()},M.prototype.freeVertexArray=function(){var e;o(this.vertexArray)&&(e=this.vertexArray.indexBuffer,this.vertexArray.destroy(),this.vertexArray=void 0,!e.isDestroyed()&&o(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy())),o(this.wireframeVertexArray)&&(e=this.wireframeVertexArray.indexBuffer,this.wireframeVertexArray.destroy(),this.wireframeVertexArray=void 0,!e.isDestroyed()&&o(e.referenceCount)&&(--e.referenceCount,0===e.referenceCount&&e.destroy()))},M.processStateMachine=function(e,t,r,i){var n=e.data;o(n)||(n=e.data=new M),e.state===v.START&&(w(e,r,i),e.state=v.LOADING),e.state===v.LOADING&&S(e,t,r);for(var a=o(n.vertexArray),s=!o(n.loadedTerrain)&&!o(n.upsampledTerrain),l=o(n.terrainData)&&n.terrainData.wasCreatedByUpsampling(),u=n.imagery,c=0,h=u.length;h>c;++c){var d=u[c];if(o(d.loadingImagery)){if(d.loadingImagery.state===f.PLACEHOLDER){var m=d.loadingImagery.imageryLayer;if(m.imageryProvider.ready){d.freeResources(),u.splice(c,1),m._createTileImagerySkeletons(e,r,c),--c,h=u.length;continue}l=!1}var p=d.processStateMachine(e,t);s=s&&p,a=a&&(p||o(d.readyImagery)),l=l&&o(d.loadingImagery)&&(d.loadingImagery.state===f.FAILED||d.loadingImagery.state===f.INVALID)}else l=!1}e.upsampledFromParent=l,c===h&&(a&&(e.renderable=!0),s&&(e.state=v.DONE))};var L=new t,N=new t,B=new t,F=new t,z=new i;return M}),r("Shaders/ReprojectWebMercatorFS",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Shaders/ReprojectWebMercatorVS",[],function(){"use strict";return"attribute vec4 position;\nuniform vec2 u_textureDimensions;\nuniform float u_northLatitude;\nuniform float u_southLatitude;\nuniform float u_southMercatorYHigh;\nuniform float u_southMercatorYLow;\nuniform float u_oneOverMercatorHeight;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nfloat currentLatitude = mix(u_southLatitude, u_northLatitude, position.y);\nfloat fraction = czm_latitudeToWebMercatorFraction(currentLatitude, u_southMercatorYLow, u_southMercatorYHigh, u_oneOverMercatorHeight);\nv_textureCoordinates = vec2(position.x, fraction);\ngl_Position = czm_viewportOrthographic * (position * vec4(u_textureDimensions, 1.0, 1.0));\n}\n"
}),r("Scene/Imagery",["../Core/defined","../Core/destroyObject","./ImageryState"],function(e,t,r){"use strict";var i=function(t,i,n,o,a){if(this.imageryLayer=t,this.x=i,this.y=n,this.level=o,0!==o){var s=0|i/2,l=0|n/2,u=o-1;this.parent=t.getImageryFromCache(s,l,u)}if(this.state=r.UNLOADED,this.imageUrl=void 0,this.image=void 0,this.texture=void 0,this.credits=void 0,this.referenceCount=0,!e(a)&&t.imageryProvider.ready){var c=t.imageryProvider.tilingScheme;a=c.tileXYToRectangle(i,n,o)}this.rectangle=a};return i.createPlaceholder=function(e){var t=new i(e,0,0,0);return t.addReference(),t.state=r.PLACEHOLDER,t},i.prototype.addReference=function(){++this.referenceCount},i.prototype.releaseReference=function(){return--this.referenceCount,0===this.referenceCount?(this.imageryLayer.removeImageryFromCache(this),e(this.parent)&&this.parent.releaseReference(),e(this.image)&&e(this.image.destroy)&&this.image.destroy(),e(this.texture)&&this.texture.destroy(),t(this),0):this.referenceCount},i}),r("Scene/TileImagery",["../Core/defined","./ImageryState"],function(e,t){"use strict";var r=function(e,t){this.readyImagery=void 0,this.loadingImagery=e,this.textureCoordinateRectangle=t,this.textureTranslationAndScale=void 0};return r.prototype.freeResources=function(){e(this.readyImagery)&&this.readyImagery.releaseReference(),e(this.loadingImagery)&&this.loadingImagery.releaseReference()},r.prototype.processStateMachine=function(r,i){var n=this.loadingImagery,o=n.imageryLayer;if(n.state===t.UNLOADED&&(n.state=t.TRANSITIONING,o._requestImagery(n)),n.state===t.RECEIVED&&(n.state=t.TRANSITIONING,o._createTexture(i,n)),n.state===t.TEXTURE_LOADED&&(n.state=t.TRANSITIONING,o._reprojectTexture(i,n)),n.state===t.READY)return e(this.readyImagery)&&this.readyImagery.releaseReference(),this.readyImagery=this.loadingImagery,this.loadingImagery=void 0,this.textureTranslationAndScale=o._calculateTextureTranslationAndScale(r,this),!0;for(var a=n.parent,s=!1;e(a)&&a.state!==t.READY;)s=s||a.state!==t.FAILED&&a.state!==t.INVALID,a=a.parent;return this.readyImagery!==a&&(e(this.readyImagery)&&this.readyImagery.releaseReference(),this.readyImagery=a,e(a)&&(a.addReference(),this.textureTranslationAndScale=o._calculateTextureTranslationAndScale(r,this))),s||n.state!==t.FAILED&&n.state!==t.INVALID?!1:!0},r}),r("Scene/ImageryLayer",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/FeatureDetection","../Core/GeographicTilingScheme","../Core/Geometry","../Core/GeometryAttribute","../Core/Math","../Core/PixelFormat","../Core/PrimitiveType","../Core/Rectangle","../Core/TerrainProvider","../Core/TileProviderError","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/DrawCommand","../Renderer/MipmapHint","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap","../Shaders/ReprojectWebMercatorFS","../Shaders/ReprojectWebMercatorVS","../ThirdParty/when","./Imagery","./ImageryState","./TileImagery"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I){"use strict";function R(e,t,r){return JSON.stringify([e,t,r])}function O(t,r,s,l){var u=r.cache.imageryLayer_reproject;if(!a(u)){u=r.cache.imageryLayer_reproject={framebuffer:void 0,vertexArray:void 0,shaderProgram:void 0,renderState:void 0,sampler:void 0,destroy:function(){a(this.framebuffer)&&this.framebuffer.destroy(),a(this.vertexArray)&&this.vertexArray.destroy(),a(this.shaderProgram)&&this.shaderProgram.destroy()}};for(var c=new Array(131072),m=0,p=0;256>p;++p)for(var v=p/255,_=0;256>_;++_){var A=_/255;c[m++]=A,c[m++]=v}var M=new h({attributes:{position:new d({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:c})},indices:g.getRegularGridIndices(256,256),primitiveType:f.TRIANGLES}),D={position:0};u.vertexArray=r.createVertexArrayFromGeometry({geometry:M,attributeLocations:D,bufferUsage:y.STATIC_DRAW}),u.shaderProgram=r.createShaderProgram(P,x,D);var I=r.maximumTextureFilterAnisotropy;u.sampler=r.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR,magnificationFilter:E.LINEAR,maximumAnisotropy:Math.min(I,o(t._maximumAnisotropy,I))})}s.sampler=u.sampler;var R=s.width,O=s.height;B.textureDimensions.x=R,B.textureDimensions.y=O,B.texture=s,B.northLatitude=l.north,B.southLatitude=l.south;var L=Math.sin(l.south),N=.5*Math.log((1+L)/(1-L));F[0]=N,B.southMercatorYHigh=F[0],B.southMercatorYLow=N-F[0],L=Math.sin(l.north);var z=.5*Math.log((1+L)/(1-L));B.oneOverMercatorHeight=1/(z-N);var V=r.createTexture2D({width:R,height:O,pixelFormat:s.pixelFormat,pixelDatatype:s.pixelDatatype,preMultiplyAlpha:s.preMultiplyAlpha});V.generateMipmap(S.NICEST),a(u.framebuffer)&&u.framebuffer.destroy(),u.framebuffer=r.createFramebuffer({colorTextures:[V]}),u.framebuffer.destroyAttachments=!1;var k=new C({color:i.BLACK,framebuffer:u.framebuffer});k.execute(r),a(u.renderState)&&u.renderState.viewport.width===R&&u.renderState.viewport.height===O||(u.renderState=r.createRenderState({viewport:new e(0,0,R,O)}));var U=new w({framebuffer:u.framebuffer,shaderProgram:u.shaderProgram,renderState:u.renderState,primitiveType:f.TRIANGLES,vertexArray:u.vertexArray,uniformMap:B});return U.execute(r),V}function L(e,t,r){var i=e._imageryProvider,n=i.tilingScheme,o=n.ellipsoid,a=e._imageryProvider.tilingScheme instanceof c?1:Math.cos(r),s=n.rectangle,l=o.maximumRadius*(s.east-s.west)*a/(i.tileWidth*n.getNumberOfXTilesAtLevel(0)),u=l/t,h=Math.log(u)/Math.log(2),d=Math.round(h);return 0|d}var N=function z(e,t){this._imageryProvider=e,t=o(t,{}),this.alpha=o(t.alpha,o(e.defaultAlpha,1)),this.brightness=o(t.brightness,o(e.defaultBrightness,z.DEFAULT_BRIGHTNESS)),this.contrast=o(t.contrast,o(e.defaultContrast,z.DEFAULT_CONTRAST)),this.hue=o(t.hue,o(e.defaultHue,z.DEFAULT_HUE)),this.saturation=o(t.saturation,o(e.defaultSaturation,z.DEFAULT_SATURATION)),this.gamma=o(t.gamma,o(e.defaultGamma,z.DEFAULT_GAMMA)),this.show=o(t.show,!0),this._minimumTerrainLevel=t.minimumTerrainLevel,this._maximumTerrainLevel=t.maximumTerrainLevel,this._rectangle=o(t.rectangle,v.MAX_VALUE),this._maximumAnisotropy=t.maximumAnisotropy,this._imageryCache={},this._skeletonPlaceholder=new I(M.createPlaceholder(this)),this._show=!0,this._layerIndex=-1,this._isBaseLayer=!1,this._requestImageError=void 0};s(N.prototype,{imageryProvider:{get:function(){return this._imageryProvider}},rectangle:{get:function(){return this._rectangle}}}),N.DEFAULT_BRIGHTNESS=1,N.DEFAULT_CONTRAST=1,N.DEFAULT_HUE=0,N.DEFAULT_SATURATION=1,N.DEFAULT_GAMMA=1,N.prototype.isBaseLayer=function(){return this._isBaseLayer},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){return l(this)},N.prototype._createTileImagerySkeletons=function(e,t,i){var n=e.data;if(a(this._minimumTerrainLevel)&&e.level<this._minimumTerrainLevel)return!1;if(a(this._maximumTerrainLevel)&&e.level>this._maximumTerrainLevel)return!1;var o=this._imageryProvider;if(a(i)||(i=n.imagery.length),!o.ready)return this._skeletonPlaceholder.loadingImagery.addReference(),n.imagery.splice(i,0,this._skeletonPlaceholder),!0;var s=v.intersectWith(e.rectangle,o.rectangle);if(s=v.intersectWith(s,this._rectangle),s.east<=s.west||s.north<=s.south){if(!this.isBaseLayer())return!1;var l=v.intersectWith(o.rectangle,this._rectangle),u=e.rectangle;u.south>=l.north?s.north=s.south=l.north:u.north<=l.south&&(s.north=s.south=l.south),u.west>=l.east?s.west=s.east=l.east:u.east<=l.west&&(s.west=s.east=l.west)}var c=0;s.south>0?c=s.south:s.north<0&&(c=s.north);var h=1,d=h*t.getLevelMaximumGeometricError(e.level),m=L(this,d,c);m=Math.max(0,m);var p=o.maximumLevel;if(m>p&&(m=p),a(o.minimumLevel)){var f=o.minimumLevel;f>m&&(m=f)}var g=o.tilingScheme,_=g.positionToTileXY(v.northwest(s),m),y=g.positionToTileXY(v.southeast(s),m),C=(e.rectangle.north-e.rectangle.south)/512,w=(e.rectangle.east-e.rectangle.west)/512,S=g.tileXYToRectangle(_.x,_.y,m);Math.abs(S.south-e.rectangle.north)<w&&_.y<y.y&&++_.y,Math.abs(S.east-e.rectangle.west)<C&&_.x<y.x&&++_.x;var E=g.tileXYToRectangle(y.x,y.y,m);Math.abs(E.north-e.rectangle.south)<w&&y.y>_.y&&--y.y,Math.abs(E.west-e.rectangle.east)<C&&y.x>_.x&&--y.x;var b,T,x=e.rectangle,P=g.tileXYToRectangle(_.x,_.y,m),A=0,M=1;!this.isBaseLayer()&&Math.abs(P.west-e.rectangle.west)>=C&&(A=Math.min(1,(P.west-x.west)/(x.east-x.west))),!this.isBaseLayer()&&Math.abs(P.north-e.rectangle.north)>=w&&(M=Math.max(0,(P.north-x.south)/(x.north-x.south)));for(var D=M,R=_.x;R<=y.x;R++){b=A,P=g.tileXYToRectangle(R,_.y,m),A=Math.min(1,(P.east-x.west)/(x.east-x.west)),R===y.x&&(this.isBaseLayer()||Math.abs(P.east-e.rectangle.east)<C)&&(A=1),M=D;for(var O=_.y;O<=y.y;O++){T=M,P=g.tileXYToRectangle(R,O,m),M=Math.max(0,(P.south-x.south)/(x.north-x.south)),O===y.y&&(this.isBaseLayer()||Math.abs(P.south-e.rectangle.south)<w)&&(M=0);var N=new r(b,M,A,T),B=this.getImageryFromCache(R,O,m,P);n.imagery.splice(i,0,new I(B,N)),++i}}return!0},N.prototype._calculateTextureTranslationAndScale=function(e,t){var i=t.readyImagery.rectangle,n=e.rectangle,o=n.east-n.west,a=n.north-n.south,s=o/(i.east-i.west),l=a/(i.north-i.south);return new r(s*(n.west-i.west)/o,l*(n.south-i.south)/a,s,l)},N.prototype._requestImagery=function(e){function t(t){return a(t)?(e.image=t,e.state=D.RECEIVED,_.handleSuccess(o._requestImageError),void 0):r()}function r(){e.state=D.FAILED;var t="Failed to obtain image tile X: "+e.x+" Y: "+e.y+" Level: "+e.level+".";o._requestImageError=_.handleError(o._requestImageError,n,n.errorEvent,t,e.x,e.y,e.level,i)}function i(){e.state=D.TRANSITIONING;var i=n.requestImage(e.x,e.y,e.level);return a(i)?(a(n.getTileCredits)&&(e.credits=n.getTileCredits(e.x,e.y,e.level)),A(i,t,r),void 0):(e.state=D.UNLOADED,void 0)}var n=this._imageryProvider,o=this;i()},N.prototype._createTexture=function(e,t){var r=this._imageryProvider;if(a(r.tileDiscardPolicy)){var i=r.tileDiscardPolicy;if(a(i)){if(!i.isReady())return t.state=D.RECEIVED,void 0;if(i.shouldDiscardImage(t.image))return t.state=D.INVALID,void 0}}var n=e.createTexture2D({source:t.image,pixelFormat:r.hasAlphaChannel?p.RGBA:p.RGB});t.texture=n,t.image=void 0,t.state=D.TEXTURE_LOADED},N.prototype._reprojectTexture=function(e,t){var r=t.texture,i=t.rectangle;if(!(this._imageryProvider.tilingScheme instanceof c)&&(i.east-i.west)/r.width>1e-5){var n=O(this,e,r,t.rectangle);r.destroy(),t.texture=r=n}if(m.isPowerOfTwo(r.width)&&m.isPowerOfTwo(r.height)){var s=e.cache.imageryLayer_mipmapSampler;if(!a(s)){var l=e.maximumTextureFilterAnisotropy;s=e.cache.imageryLayer_mipmapSampler=e.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR_MIPMAP_LINEAR,magnificationFilter:E.LINEAR,maximumAnisotropy:Math.min(l,o(this._maximumAnisotropy,l))})}r.generateMipmap(S.NICEST),r.sampler=s}else{var u=e.cache.imageryLayer_nonMipmapSampler;a(u)||(u=e.cache.imageryLayer_nonMipmapSampler=e.createSampler({wrapS:T.CLAMP_TO_EDGE,wrapT:T.CLAMP_TO_EDGE,minificationFilter:b.LINEAR,magnificationFilter:E.LINEAR})),r.sampler=u}t.state=D.READY},N.prototype.getImageryFromCache=function(e,t,r,i){var n=R(e,t,r),o=this._imageryCache[n];return a(o)||(o=new M(this,e,t,r,i),this._imageryCache[n]=o),o.addReference(),o},N.prototype.removeImageryFromCache=function(e){var t=R(e.x,e.y,e.level);delete this._imageryCache[t]};var B={u_textureDimensions:function(){return this.textureDimensions},u_texture:function(){return this.texture},u_northLatitude:function(){return this.northLatitude},u_southLatitude:function(){return this.southLatitude},u_southMercatorYLow:function(){return this.southMercatorYLow},u_southMercatorYHigh:function(){return this.southMercatorYHigh},u_oneOverMercatorHeight:function(){return this.oneOverMercatorHeight},textureDimensions:new t,texture:void 0,northLatitude:0,southLatitude:0,southMercatorYHigh:0,southMercatorYLow:0,oneOverMercatorHeight:0},F=u.supportsTypedArrays()?new Float32Array(1):void 0;return N}),r("Scene/GlobeSurfaceTileProvider",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/FeatureDetection","../Core/GeometryPipeline","../Core/IndexDatatype","../Core/Intersect","../Core/Matrix4","../Core/PrimitiveType","../Core/Rectangle","../Core/Visibility","../Core/WebMercatorProjection","../Renderer/BufferUsage","../Renderer/DrawCommand","../Scene/BlendingState","../Scene/DepthFunction","../Scene/Pass","../ThirdParty/when","./GlobeSurfaceTile","./ImageryLayer","./ImageryState","./QuadtreeTileLoadState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M){"use strict";function D(e,t){var r=e.loadingImagery;o(r)||(r=e.readyImagery);var i=t.loadingImagery;return o(i)||(i=t.readyImagery),r.imageryLayer._layerIndex-i.imageryLayer._layerIndex}function I(){var e={u_initialColor:function(){return this.initialColor},u_zoomedOutOceanSpecularIntensity:function(){return this.zoomedOutOceanSpecularIntensity},u_oceanNormalMap:function(){return this.oceanNormalMap},u_lightingFadeDistance:function(){return this.lightingFadeDistance},u_center3D:function(){return this.center3D},u_tileRectangle:function(){return this.tileRectangle},u_modifiedModelView:function(){return this.modifiedModelView},u_dayTextures:function(){return this.dayTextures},u_dayTextureTranslationAndScale:function(){return this.dayTextureTranslationAndScale},u_dayTextureTexCoordsRectangle:function(){return this.dayTextureTexCoordsRectangle},u_dayTextureAlpha:function(){return this.dayTextureAlpha},u_dayTextureBrightness:function(){return this.dayTextureBrightness},u_dayTextureContrast:function(){return this.dayTextureContrast},u_dayTextureHue:function(){return this.dayTextureHue},u_dayTextureSaturation:function(){return this.dayTextureSaturation},u_dayTextureOneOverGamma:function(){return this.dayTextureOneOverGamma},u_dayIntensity:function(){return this.dayIntensity},u_southAndNorthLatitude:function(){return this.southAndNorthLatitude},u_southMercatorYLowAndHighAndOneOverHeight:function(){return this.southMercatorYLowAndHighAndOneOverHeight},u_waterMask:function(){return this.waterMask},u_waterMaskTranslationAndScale:function(){return this.waterMaskTranslationAndScale},initialColor:new i(0,0,.5,1),zoomedOutOceanSpecularIntensity:.5,oceanNormalMap:void 0,lightingFadeDistance:new t(65e5,9e6),center3D:void 0,modifiedModelView:new p,tileRectangle:new i,dayTextures:[],dayTextureTranslationAndScale:[],dayTextureTexCoordsRectangle:[],dayTextureAlpha:[],dayTextureBrightness:[],dayTextureContrast:[],dayTextureHue:[],dayTextureSaturation:[],dayTextureOneOverGamma:[],dayIntensity:0,southAndNorthLatitude:new t,southMercatorYLowAndHighAndOneOverHeight:new r,waterMask:void 0,waterMaskTranslationAndScale:new i};return e}function R(e,t,r){var i=r.data;if(!o(i.wireframeVertexArray)&&!o(i.meshForWireframePromise)&&(i.meshForWireframePromise=i.terrainData.createMesh(t._terrainProvider.tilingScheme,r.x,r.y,r.level),o(i.meshForWireframePromise))){var n=i.vertexArray;b(i.meshForWireframePromise,function(t){i.vertexArray===n&&(i.wireframeVertexArray=O(e,i.vertexArray,t)),i.meshForWireframePromise=void 0})}}function O(e,t,r){var i={indices:r.indices,primitiveType:f.TRIANGLES};h.toWireframe(i);var n=i.indices,o=e.createIndexBuffer(n,y.STATIC_DRAW,d.UNSIGNED_SHORT);return e.createVertexArray(t._attributes,o)}function L(t,n,a,s,l){var u=n.data,c=s.camera.viewMatrix,h=a.maximumTextureImageUnits;o(t.oceanNormalMap)&&--h,o(u.waterMaskTexture)&&--h;var d=u.center,m=V,g=0,y=0,w=0,S=0,b=0;if(s.mode!==M.SCENE3D){var T=s.mapProjection,A=T.project(v.southwest(n.rectangle),W),D=T.project(v.northeast(n.rectangle),G);if(m.x=A.x,m.y=A.y,m.z=D.x,m.w=D.y,s.mode!==M.MORPHING&&(d=k,d.x=0,d.y=.5*(m.z+m.x),d.z=.5*(m.w+m.y),m.x-=d.y,m.y-=d.z,m.z-=d.y,m.w-=d.z),T instanceof _){g=n.rectangle.south,y=n.rectangle.north;var O=_.geodeticLatitudeToMercatorAngle(g),L=_.geodeticLatitudeToMercatorAngle(y);F[0]=O,w=F[0],S=O-F[0],b=1/(L-O)}}var N=U;N.x=d.x,N.y=d.y,N.z=d.z,N.w=1,p.multiplyByVector(c,N,N),p.setColumn(c,3,N,z);var B=u.imagery,H=0,q=B.length,j=t._renderState,Y=t._blendRenderState,X=j,Q=t._firstPassInitialColor;do{var J,K,$=0;t._drawCommands.length<=t._usedDrawCommands?(J=new C,J.owner=n,J.cull=!1,J.boundingVolume=new e,K=I(),t._drawCommands.push(J),t._uniformMaps.push(K)):(J=t._drawCommands[t._usedDrawCommands],K=t._uniformMaps[t._usedDrawCommands]),J.owner=n,++t._usedDrawCommands,J.debugShowBoundingVolume=n===t._debug.boundingSphereTile,i.clone(Q,K.initialColor),K.oceanNormalMap=t.oceanNormalMap,K.lightingFadeDistance.x=t.lightingFadeOutDistance,K.lightingFadeDistance.y=t.lightingFadeInDistance,K.zoomedOutOceanSpecularIntensity=t.zoomedOutOceanSpecularIntensity,K.center3D=u.center,i.clone(m,K.tileRectangle),K.southAndNorthLatitude.x=g,K.southAndNorthLatitude.y=y,K.southMercatorYLowAndHighAndOneOverHeight.x=S,K.southMercatorYLowAndHighAndOneOverHeight.y=w,K.southMercatorYLowAndHighAndOneOverHeight.z=b,p.clone(z,K.modifiedModelView);for(var et=!1,tt=!1,rt=!1,it=!1,nt=!1,ot=!1;h>$&&q>H;){var at=B[H],st=at.readyImagery;if(++H,o(st)&&st.state===P.READY&&0!==st.imageryLayer.alpha){var lt=st.imageryLayer;if(o(at.textureTranslationAndScale)||(at.textureTranslationAndScale=lt._calculateTextureTranslationAndScale(n,at)),K.dayTextures[$]=st.texture,K.dayTextureTranslationAndScale[$]=at.textureTranslationAndScale,K.dayTextureTexCoordsRectangle[$]=at.textureCoordinateRectangle,K.dayTextureAlpha[$]=lt.alpha,ot=ot||1!==K.dayTextureAlpha[$],K.dayTextureBrightness[$]=lt.brightness,et=et||K.dayTextureBrightness[$]!==x.DEFAULT_BRIGHTNESS,K.dayTextureContrast[$]=lt.contrast,tt=tt||K.dayTextureContrast[$]!==x.DEFAULT_CONTRAST,K.dayTextureHue[$]=lt.hue,rt=rt||K.dayTextureHue[$]!==x.DEFAULT_HUE,K.dayTextureSaturation[$]=lt.saturation,it=it||K.dayTextureSaturation[$]!==x.DEFAULT_SATURATION,K.dayTextureOneOverGamma[$]=1/lt.gamma,nt=nt||K.dayTextureOneOverGamma[$]!==1/x.DEFAULT_GAMMA,o(st.credits))for(var ut=s.creditDisplay,ct=st.credits,ht=0,dt=ct.length;dt>ht;++ht)ut.addCredit(ct[ht]);++$}}K.dayTextures.length=$,K.waterMask=u.waterMaskTexture,i.clone(u.waterMaskTranslationAndScale,K.waterMaskTranslationAndScale),J.shaderProgram=t._surfaceShaderSet.getShaderProgram(a,$,et,tt,rt,it,nt,ot),J.renderState=X,J.primitiveType=f.TRIANGLES,J.vertexArray=u.vertexArray,J.uniformMap=K,J.pass=E.OPAQUE,t._debug.wireframe&&(R(a,t,n),o(u.wireframeVertexArray)&&(J.vertexArray=u.wireframeVertexArray,J.primitiveType=f.LINES));var mt=J.boundingVolume;s.mode!==M.SCENE3D?(e.fromRectangleWithHeights2D(n.rectangle,s.mapProjection,u.minimumHeight,u.maximumHeight,mt),r.fromElements(mt.center.z,mt.center.x,mt.center.y,mt.center),s.mode===M.MORPHING&&(mt=e.union(u.boundingSphere3D,mt,mt))):e.clone(u.boundingSphere3D,mt),l.push(J),X=Y,Q=Z}while(q>H)}var N=function Q(e){this.lightingFadeOutDistance=65e5,this.lightingFadeInDistance=9e6,this.oceanNormalMap=void 0,this.zoomedOutOceanSpecularIntensity=.5,this._quadtree=void 0,this._terrainProvider=e.terrainProvider,this._imageryLayers=e.imageryLayers,this._surfaceShaderSet=e.surfaceShaderSet,this._renderState=void 0,this._blendRenderState=void 0,this._errorEvent=new u,this._imageryLayers.layerAdded.addEventListener(Q.prototype._onLayerAdded,this),this._imageryLayers.layerRemoved.addEventListener(Q.prototype._onLayerRemoved,this),this._imageryLayers.layerMoved.addEventListener(Q.prototype._onLayerMoved,this),this._imageryLayers.layerShownOrHidden.addEventListener(Q.prototype._onLayerShownOrHidden,this),this._layerOrderChanged=!1,this._tilesToRenderByTextureCount=[],this._drawCommands=[],this._uniformMaps=[],this._usedDrawCommands=0,this._debug={wireframe:!1,boundingSphereTile:void 0},this._baseColor=void 0,this._firstPassInitialColor=void 0,this.baseColor=new n(0,0,.5,1)};a(N.prototype,{baseColor:{get:function(){return this._baseColor},set:function(e){this._baseColor=e,this._firstPassInitialColor=i.fromColor(e,this._firstPassInitialColor)}},quadtree:{get:function(){return this._quadtree},set:function(e){this._quadtree=e}},ready:{get:function(){return this._terrainProvider.ready&&(0===this._imageryLayers.length||this._imageryLayers.get(0).imageryProvider.ready)}},tilingScheme:{get:function(){return this._terrainProvider.tilingScheme}},errorEvent:{get:function(){return this._errorEvent}},terrainProvider:{get:function(){return this._terrainProvider},set:function(e){this._terrainProvider!==e&&(this._terrainProvider=e,o(this._quadtree)&&this._quadtree.invalidateAllTiles())}}}),N.prototype.beginUpdate=function(e,t){this._imageryLayers._update(),this._layerOrderChanged&&(this._layerOrderChanged=!1,this._quadtree.forEachLoadedTile(function(e){e.data.imagery.sort(D)}));var r,i,n=this._tilesToRenderByTextureCount;for(r=0,i=n.length;i>r;++r){var a=n[r];o(a)&&(a.length=0)}this._usedDrawCommands=0;var s=t.creditDisplay;this._terrainProvider.ready&&o(this._terrainProvider.credit)&&s.addCredit(this._terrainProvider.credit);var l=this._imageryLayers;for(r=0,i=l.length;i>r;++r){var u=l.get(r).imageryProvider;u.ready&&o(u.credit)&&s.addCredit(u.credit)}},N.prototype.endUpdate=function(e,t,r){o(this._renderState)||(this._renderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0}})),o(this._blendRenderState)||(this._blendRenderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0,func:S.LESS_OR_EQUAL},blending:w.ALPHA_BLEND})),this._renderState.depthTest.enabled=t.mode===M.SCENE3D||t.mode===M.COLUMBUS_VIEW,this._blendRenderState.depthTest.enabled=this._renderState.depthTest.enabled;for(var i=this._tilesToRenderByTextureCount,n=0,a=i.length;a>n;++n){var s=i[n];if(o(s))for(var l=0,u=s.length;u>l;++l)L(this,s[l],e,t,r)}},N.prototype.getLevelMaximumGeometricError=function(e){return this._terrainProvider.getLevelMaximumGeometricError(e)},N.prototype.loadTile=function(e,t,r){T.processStateMachine(r,e,this._terrainProvider,this._imageryLayers)};var B=new e;N.prototype.computeTileVisibility=function(t,i,n){var a=t.data,s=i.cullingVolume,l=a.boundingSphere3D;i.mode!==M.SCENE3D&&(l=B,e.fromRectangleWithHeights2D(t.rectangle,i.mapProjection,a.minimumHeight,a.maximumHeight,l),r.fromElements(l.center.z,l.center.x,l.center.y,l.center),i.mode===M.MORPHING&&(l=e.union(a.boundingSphere3D,l,l)));var u=s.computeVisibility(l);if(u===m.OUTSIDE)return g.NONE;if(i.mode===M.SCENE3D){var c=a.occludeePointInScaledSpace;return o(c)?n.ellipsoid.isScaledSpacePointVisible(c)?u:g.NONE:u}return u};var F=c.supportsTypedArrays()?new Float32Array(1):void 0,z=new p,V=new i,k=new r,U=new i,W=new r,G=new r;N.prototype.showTileThisFrame=function(e){for(var t=0,r=e.data.imagery,i=0,n=r.length;n>i;++i){var a=r[i];o(a.readyImagery)&&0!==a.readyImagery.imageryLayer.alpha&&++t}var s=this._tilesToRenderByTextureCount[t];o(s)||(s=[],this._tilesToRenderByTextureCount[t]=s),s.push(e);var l=this._debug;++l.tilesRendered,l.texturesRendered+=t};var H=new r,q=new r,j=new r(0,-1,0),Y=new r(0,0,-1),X=new r;N.prototype.computeDistanceToTile=function(e,t){var i=e.data,n=i.southwestCornerCartesian,o=i.northeastCornerCartesian,a=i.westNormal,s=i.southNormal,l=i.eastNormal,u=i.northNormal,c=i.maximumHeight;t.mode!==M.SCENE3D&&(n=t.mapProjection.project(v.southwest(e.rectangle),H),n.z=n.y,n.y=n.x,n.x=0,o=t.mapProjection.project(v.northeast(e.rectangle),q),o.z=o.y,o.y=o.x,o.x=0,a=j,l=r.UNIT_Y,s=Y,u=r.UNIT_Z,c=0);var h,d=t.camera.positionWC,m=t.camera.positionCartographic,p=r.subtract(d,n,X),f=r.dot(p,a),g=r.dot(p,s),_=r.subtract(d,o,X),y=r.dot(_,l),C=r.dot(_,u);h=t.mode===M.SCENE3D?m.height:d.x;var w=h-c,S=0;return f>0?S+=f*f:y>0&&(S+=y*y),g>0?S+=g*g:C>0&&(S+=C*C),w>0&&(S+=w*w),Math.sqrt(S)},N.prototype.isDestroyed=function(){return!1},N.prototype.destroy=function(){return this._tileProvider=this._tileProvider&&this._tileProvider.destroy(),s(this)},N.prototype._onLayerAdded=function(e){if(e.show){var t=this._terrainProvider;this._quadtree.forEachLoadedTile(function(r){e._createTileImagerySkeletons(r,t)&&(r.state=A.LOADING)}),this._layerOrderChanged=!0}},N.prototype._onLayerRemoved=function(e){this._quadtree.forEachLoadedTile(function(t){for(var r=t.data.imagery,i=-1,n=0,a=0,s=r.length;s>a;++a){var l=r[a],u=l.loadingImagery;if(o(u)||(u=l.readyImagery),u.imageryLayer===e)-1===i&&(i=a),l.freeResources(),++n;else if(-1!==i)break}-1!==i&&r.splice(i,n)})},N.prototype._onLayerMoved=function(){this._layerOrderChanged=!0},N.prototype._onLayerShownOrHidden=function(e,t,r){r?this._onLayerAdded(e,t):this._onLayerRemoved(e,t)};var Z=new i(0,0,0,0);return N}),r("Scene/ImageryLayerCollection",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Event","../Core/Math","../Core/Rectangle","../ThirdParty/when","./ImageryLayer"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e,t){var r=e.indexOf(t);return r}function h(e,t,r){var i=e._layers;if(t=a.clamp(t,0,i.length-1),r=a.clamp(r,0,i.length-1),t!==r){var n=i[t];i[t]=i[r],i[r]=n,e._update(),e.layerMoved.raiseEvent(n,r,t)}}var d=function(){this._layers=[],this.layerAdded=new o,this.layerRemoved=new o,this.layerMoved=new o,this.layerShownOrHidden=new o};return r(d.prototype,{length:{get:function(){return this._layers.length}}}),d.prototype.add=function(e,r){var i=t(r);i?this._layers.splice(r,0,e):(r=this._layers.length,this._layers.push(e)),this._update(),this.layerAdded.raiseEvent(e,r)},d.prototype.addImageryProvider=function(e,t){var r=new u(e);return this.add(r,t),r},d.prototype.remove=function(t,r){r=e(r,!0);var i=this._layers.indexOf(t);return-1!==i?(this._layers.splice(i,1),this._update(),this.layerRemoved.raiseEvent(t,i),r&&t.destroy(),!0):!1},d.prototype.removeAll=function(t){t=e(t,!0);for(var r=this._layers,i=0,n=r.length;n>i;i++){var o=r[i];this.layerRemoved.raiseEvent(o,i),t&&o.destroy()}this._layers=[]},d.prototype.contains=function(e){return-1!==this.indexOf(e)},d.prototype.indexOf=function(e){return this._layers.indexOf(e)},d.prototype.get=function(e){return this._layers[e]},d.prototype.raise=function(e){var t=c(this._layers,e);h(this,t,t+1)},d.prototype.lower=function(e){var t=c(this._layers,e);h(this,t,t-1)},d.prototype.raiseToTop=function(e){var t=c(this._layers,e);t!==this._layers.length-1&&(this._layers.splice(t,1),this._layers.push(e),this._update(),this.layerMoved.raiseEvent(e,this._layers.length-1,t))},d.prototype.lowerToBottom=function(e){var t=c(this._layers,e);0!==t&&(this._layers.splice(t,1),this._layers.splice(0,0,e),this._update(),this.layerMoved.raiseEvent(e,0,t))},d.prototype.pickImageryLayerFeatures=function(e,r){var i=r.globe.pick(e,r);if(!t(i))return void 0;var n=r.globe.ellipsoid.cartesianToCartographic(i),o=r.globe._surface._tilesToRender;o.length;for(var a,u=0;!t(a)&&u<o.length;++u){var c=o[u];s.contains(c.rectangle,n)&&(a=c)}if(!t(a))return void 0;a.rectangle;for(var h=a.data.imagery,d=[],m=h.length-1;m>=0;--m){var p=h[m],f=p.readyImagery;if(t(f)){var v=f.imageryLayer.imageryProvider;if(t(v.pickFeatures)){var g=v.pickFeatures(f.x,f.y,f.level,n.longitude,n.latitude);t(g)&&d.push(g)}}}return 0===d.length?void 0:l.all(d,function(e){for(var r=[],i=0;i<e.length;++i){var o=e[i];if(t(o)&&o.length>0)for(var a=0;a<o.length;++a){var s=o[a];t(s.position)||(s.position=n),r.push(s)}}return r})},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){return this.removeAll(!0),i(this)},d.prototype._update=function(){for(var e,r,i=!0,n=this._layers,o=0,a=n.length;a>o;++o)r=n[o],r._layerIndex=o,r.show?(r._isBaseLayer=i,i=!1):r._isBaseLayer=!1,r.show!==r._show&&(t(r._show)&&(t(e)||(e=[]),e.push(r)),r._show=r.show);if(t(e))for(o=0,a=e.length;a>o;++o)r=e[o],this.layerShownOrHidden.raiseEvent(r,r._layerIndex,r.show)},d}),r("Scene/QuadtreeOccluders",["../Core/Cartesian3","../Core/defineProperties","../Core/EllipsoidalOccluder"],function(e,t,r){"use strict";var i=function(t){this._ellipsoid=new r(t.ellipsoid,e.ZERO)};return t(i.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),i}),r("Scene/QuadtreeTile",["../Core/defined","../Core/defineProperties","../Core/DeveloperError","./QuadtreeTileLoadState"],function(e,t,r,i){"use strict";var n=function(e){this._tilingScheme=e.tilingScheme,this._x=e.x,this._y=e.y,this._level=e.level,this._parent=e.parent,this._rectangle=this._tilingScheme.tileXYToRectangle(this._x,this._y,this._level),this._children=void 0,this._replacementPrevious=void 0,this._replacementNext=void 0,this._distance=0,this.state=i.START,this.renderable=!1,this.upsampledFromParent=!1,this.data=void 0};return n.createLevelZeroTiles=function(t){if(!e(t))throw new r("tilingScheme is required.");for(var i=t.getNumberOfXTilesAtLevel(0),o=t.getNumberOfYTilesAtLevel(0),a=new Array(i*o),s=0,l=0;o>l;++l)for(var u=0;i>u;++u)a[s++]=new n({tilingScheme:t,x:u,y:l,level:0});return a},t(n.prototype,{tilingScheme:{get:function(){return this._tilingScheme}},x:{get:function(){return this._x}},y:{get:function(){return this._y}},level:{get:function(){return this._level}},parent:{get:function(){return this._parent}},rectangle:{get:function(){return this._rectangle}},children:{get:function(){if(!e(this._children)){var t=this.tilingScheme,r=this.level+1,i=2*this.x,o=2*this.y;this._children=[new n({tilingScheme:t,x:i,y:o,level:r,parent:this}),new n({tilingScheme:t,x:i+1,y:o,level:r,parent:this}),new n({tilingScheme:t,x:i,y:o+1,level:r,parent:this}),new n({tilingScheme:t,x:i+1,y:o+1,level:r,parent:this})]}return this._children}},needsLoading:{get:function(){return this.state<i.DONE}},eligibleForUnloading:{get:function(){var t=!0;return e(this.data)&&(t=this.data.eligibleForUnloading,e(t)||(t=!0)),t}}}),n.prototype.freeResources=function(){if(this.state=i.START,this.renderable=!1,this.upsampledFromParent=!1,e(this.data)&&e(this.data.freeResources)&&this.data.freeResources(),e(this._children)){for(var t=0,r=this._children.length;r>t;++t)this._children[t].freeResources();this._children=void 0}},n}),r("Scene/TileReplacementQueue",["../Core/defined"],function(e){"use strict";function t(e,t){var r=t.replacementPrevious,i=t.replacementNext;t===e._lastBeforeStartOfFrame&&(e._lastBeforeStartOfFrame=i),t===e.head?e.head=i:r.replacementNext=i,t===e.tail?e.tail=r:i.replacementPrevious=r,t.replacementPrevious=void 0,t.replacementNext=void 0,--e.count}var r=function(){this.head=void 0,this.tail=void 0,this.count=0,this._lastBeforeStartOfFrame=void 0};return r.prototype.markStartOfRenderFrame=function(){this._lastBeforeStartOfFrame=this.head},r.prototype.trimTiles=function(r){for(var i=this.tail,n=!0;n&&e(this._lastBeforeStartOfFrame)&&this.count>r&&e(i);){n=i!==this._lastBeforeStartOfFrame;var o=i.replacementPrevious;i.eligibleForUnloading&&(i.freeResources(),t(this,i)),i=o}},r.prototype.markTileRendered=function(r){var i=this.head;return i===r?(r===this._lastBeforeStartOfFrame&&(this._lastBeforeStartOfFrame=r.replacementNext),void 0):(++this.count,e(i)?((e(r.replacementPrevious)||e(r.replacementNext))&&t(this,r),r.replacementPrevious=void 0,r.replacementNext=i,i.replacementPrevious=r,this.head=r,void 0):(r.replacementPrevious=void 0,r.replacementNext=void 0,this.head=r,this.tail=r,void 0))},r}),r("Scene/QuadtreePrimitive",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/getTimestamp","../Core/Queue","../Core/Visibility","./QuadtreeOccluders","./QuadtreeTile","./QuadtreeTileLoadState","./SceneMode","./TileReplacementQueue"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e,r,i){var n=e._debug;if(!n.suspendLodUpdate){var o,s,u=e._tilesToRender;u.length=0;var c=e._tileTraversalQueue;if(c.clear(),n.maxDepth=0,n.tilesVisited=0,n.tilesCulled=0,n.tilesRendered=0,n.tilesWaitingForChildren=0,e._tileLoadQueue.length=0,e._tileReplacementQueue.markStartOfRenderFrame(),!t(e._levelZeroTiles)){if(!e._tileProvider.ready)return;var h=e._tileProvider.tilingScheme;e._levelZeroTiles=l.createLevelZeroTiles(h)
}e._occluders.ellipsoid.cameraPosition=i.camera.positionWC;var d,p=e._tileProvider,_=e._occluders,y=e._levelZeroTiles;for(o=0,s=y.length;s>o;++o)d=y[o],e._tileReplacementQueue.markTileRendered(d),d.needsLoading&&g(e,d),d.renderable&&p.computeTileVisibility(d,i,_)!==a.NONE?c.enqueue(d):(++n.tilesCulled,d.renderable||++n.tilesWaitingForChildren);for(;t(d=c.dequeue());)if(++n.tilesVisited,e._tileReplacementQueue.markTileRendered(d),d.level>n.maxDepth&&(n.maxDepth=d.level),m(e,r,i,d)<e.maximumScreenSpaceError)f(e,d);else if(v(e,d)){var C=d.children;for(o=0,s=C.length;s>o;++o)p.computeTileVisibility(C[o],i,_)!==a.NONE?c.enqueue(C[o]):++n.tilesCulled}else++n.tilesWaitingForChildren,f(e,d);n.enableDebugOutput&&(n.tilesVisited!==n.lastTilesVisited||n.tilesRendered!==n.lastTilesRendered||n.tilesCulled!==n.lastTilesCulled||n.maxDepth!==n.lastMaxDepth||n.tilesWaitingForChildren!==n.lastTilesWaitingForChildren)&&(console.log("Visited "+n.tilesVisited+", Rendered: "+n.tilesRendered+", Culled: "+n.tilesCulled+", Max Depth: "+n.maxDepth+", Waiting for children: "+n.tilesWaitingForChildren),n.lastTilesVisited=n.tilesVisited,n.lastTilesRendered=n.tilesRendered,n.lastTilesCulled=n.tilesCulled,n.lastMaxDepth=n.maxDepth,n.lastTilesWaitingForChildren=n.tilesWaitingForChildren)}}function m(e,t,r,i){if(r.mode===c.SCENE2D)return p(e,t,r,i);var n=e._tileProvider.getLevelMaximumGeometricError(i.level),o=e._tileProvider.computeDistanceToTile(i,r);i._distance=o;var a=t.drawingBufferHeight,s=r.camera,l=s.frustum,u=l.fovy;return n*a/(2*o*Math.tan(.5*u))}function p(e,t,r,i){var n=r.camera,o=n.frustum,a=t.drawingBufferWidth,s=t.drawingBufferHeight,l=e._tileProvider.getLevelMaximumGeometricError(i.level),u=Math.max(o.top-o.bottom,o.right-o.left)/Math.max(a,s);return l/u}function f(e,t){e._tilesToRender.push(t),++e._debug.tilesRendered}function v(e,t){for(var r=!0,i=!0,n=t.children,o=0,a=n.length;a>o;++o){var s=n[o];e._tileReplacementQueue.markTileRendered(s),i=i&&s.upsampledFromParent,r=r&&s.renderable,s.needsLoading&&g(e,s)}return r||++e._debug.tilesWaitingForChildren,r&&!i}function g(e,t){e._tileLoadQueue.push(t)}function _(e,t,r){var i=e._tileLoadQueue,o=e._tileProvider;if(0!==i.length){e._tileReplacementQueue.trimTiles(e.tileCacheSize);for(var a=n(),s=e._loadQueueTimeSlice,l=a+s,u=i.length-1,c=u;c>=0;--c){var h=i[c];if(e._tileReplacementQueue.markTileRendered(h),o.loadTile(t,r,h),n()>=l)break}}}function y(e,t){return e._distance-t._distance}function C(e,t,r,i){var n=e._tileProvider,o=e._tilesToRender;o.sort(y);for(var a=0,s=o.length;s>a;++a)n.showTileThisFrame(o[a],t,r,i)}var w=function(t){this._tileProvider=t.tileProvider,this._tileProvider.quadtree=this,this._debug={enableDebugOutput:!1,maxDepth:0,tilesVisited:0,tilesCulled:0,tilesRendered:0,tilesWaitingForChildren:0,lastMaxDepth:-1,lastTilesVisited:-1,lastTilesCulled:-1,lastTilesRendered:-1,lastTilesWaitingForChildren:-1,suspendLodUpdate:!1};var r=this._tileProvider.tilingScheme,i=r.ellipsoid;this._tilesToRender=[],this._tileTraversalQueue=new o,this._tileLoadQueue=[],this._tileReplacementQueue=new h,this._levelZeroTiles=void 0,this._levelZeroTilesReady=!1,this._loadQueueTimeSlice=5,this.maximumScreenSpaceError=e(t.maximumScreenSpaceError,2),this.tileCacheSize=e(t.tileCacheSize,100),this._occluders=new s({ellipsoid:i})};return r(w.prototype,{tileProvider:{get:function(){return this._tileProvider}}}),w.prototype.invalidateAllTiles=function(){var e=this._tileReplacementQueue;e.head=void 0,e.tail=void 0,e.count=0;var r=this._levelZeroTiles;if(t(r))for(var i=0;i<r.length;++i)r[i].freeResources();this._levelZeroTiles=void 0},w.prototype.forEachLoadedTile=function(e){for(var r=this._tileReplacementQueue.head;t(r);)r.state!==u.START&&e(r),r=r.replacementNext},w.prototype.forEachRenderedTile=function(e){for(var t=this._tilesToRender,r=0,i=t.length;i>r;++r)e(t[r])},w.prototype.update=function(e,t,r){this._tileProvider.beginUpdate(e,t,r),d(this,e,t),_(this,e,t),C(this,e,t,r),this._tileProvider.endUpdate(e,t,r)},w.prototype.isDestroyed=function(){return!1},w.prototype.destroy=function(){this._tileProvider=this._tileProvider&&this._tileProvider.destroy()},w}),r("Scene/Globe",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/buildModuleUrl","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/combine","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/EllipsoidTerrainProvider","../Core/FeatureDetection","../Core/GeographicProjection","../Core/Geometry","../Core/GeometryAttribute","../Core/Intersect","../Core/IntersectionTests","../Core/loadImage","../Core/Math","../Core/Matrix4","../Core/Occluder","../Core/PrimitiveType","../Core/Ray","../Core/Rectangle","../Core/Transforms","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/GlobeFS","../Shaders/GlobeFSDepth","../Shaders/GlobeFSPole","../Shaders/GlobeVS","../Shaders/GlobeVSDepth","../Shaders/GlobeVSPole","../ThirdParty/when","./DepthFunction","./GlobeSurfaceShaderSet","./GlobeSurfaceTileProvider","./ImageryLayerCollection","./Pass","./QuadtreePrimitive","./SceneMode","./terrainAttributeLocations"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y){"use strict";function X(e){return function(r,i){var n=t.distanceSquaredTo(r.pickBoundingSphere,e),o=t.distanceSquaredTo(i.pickBoundingSphere,e);return n-o}}function Z(e,t){var r=e._ellipsoid.radii,i=t.camera.positionWC,o=n.multiplyComponents(e._ellipsoid.oneOverRadii,i,at),a=n.magnitude(o),s=n.normalize(o,st),l=n.normalize(n.cross(n.UNIT_Z,o,lt),lt),u=n.normalize(n.cross(s,l,ut),ut),c=Math.sqrt(n.magnitudeSquared(o)-1),h=n.multiplyByScalar(s,1/a,at),d=c/a,m=n.multiplyByScalar(l,d,st),p=n.multiplyByScalar(u,d,lt),f=n.add(h,p,ut);n.subtract(f,m,f),n.multiplyComponents(r,f,f),n.pack(f,ot,0);var v=n.subtract(h,p,ut);n.subtract(v,m,v),n.multiplyComponents(r,v,v),n.pack(v,ot,3);var g=n.add(h,p,ut);n.add(g,m,g),n.multiplyComponents(r,g,g),n.pack(g,ot,6);var _=n.subtract(h,p,ut);return n.add(_,m,_),n.multiplyComponents(r,_,_),n.pack(_,ot,9),ot}function Q(t,r,i,a,s,l){var u,c=t._ellipsoid.cartographicToCartesian(new o(0,a)),h=t._ellipsoid.cartographicToCartesian(new o(Math.PI,a)),d=.5*n.magnitude(n.subtract(c,h,ct),ct),m=t._ellipsoid.cartographicToCartesian(new o(0,i)),p=r.camera.direction;u=1-n.dot(dt,p)<S.EPSILON6?n.UNIT_X:n.normalize(n.cross(p,n.UNIT_Z,ct),ct);var f=n.add(m,n.multiplyByScalar(u,d,ct),ct),v=n.add(m,n.multiplyByScalar(n.normalize(n.cross(n.UNIT_Z,u,ht),ht),d,ht),ht);A.pointToGLWindowCoordinates(s,l,m,m),A.pointToGLWindowCoordinates(s,l,f,f),A.pointToGLWindowCoordinates(s,l,v,v);var g=Math.floor(Math.max(n.distance(v,m),n.distance(f,m))),_=g;return new e(Math.floor(m.x)-g,Math.floor(m.y)-_,2*g,2*_)}function J(e,r,i){var n=e.terrainProvider;if(i.mode===j.SCENE3D&&n.ready){var o=n.tilingScheme.rectangle,l=r.uniformState.viewProjection,c=mt;c.width=r.drawingBufferWidth,c.height=r.drawingBufferHeight;var h,d,m,p,f,v,C,w=E.computeViewportTransformation(c,0,1,pt),T=.05,x=e._occluder;o.north<S.PI_OVER_TWO&&(h=new P(-Math.PI,o.north,Math.PI,S.PI_OVER_TWO),d=t.fromRectangle3D(h,e._ellipsoid),m=i.cullingVolume.computeVisibility(d)===y.OUTSIDE,p=b.computeOccludeePointFromRectangle(h,e._ellipsoid),f=p&&!x.isPointVisible(p,0)||!x.isBoundingSphereVisible(d),e._drawNorthPole=!m&&!f,e._drawNorthPole&&(C=Q(e,i,h.north,h.south-T,l,w),ft[0]=C.x,ft[1]=C.y,ft[2]=C.x+C.width,ft[3]=C.y,ft[4]=C.x+C.width,ft[5]=C.y+C.height,ft[6]=C.x,ft[7]=C.y+C.height,u(e._northPoleCommand.vertexArray)?e._northPoleCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(ft):(e._northPoleCommand.boundingVolume=t.fromRectangle3D(h,e._ellipsoid),v=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:2,values:ft})}}),e._northPoleCommand.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:{position:0},bufferUsage:M.STREAM_DRAW})))),o.south>-S.PI_OVER_TWO&&(h=new P(-Math.PI,-S.PI_OVER_TWO,Math.PI,o.south),d=t.fromRectangle3D(h,e._ellipsoid),m=i.cullingVolume.computeVisibility(d)===y.OUTSIDE,p=b.computeOccludeePointFromRectangle(h,e._ellipsoid),f=p&&!x.isPointVisible(p)||!x.isBoundingSphereVisible(d),e._drawSouthPole=!m&&!f,e._drawSouthPole&&(C=Q(e,i,h.south,h.north+T,l,w),ft[0]=C.x,ft[1]=C.y,ft[2]=C.x+C.width,ft[3]=C.y,ft[4]=C.x+C.width,ft[5]=C.y+C.height,ft[6]=C.x,ft[7]=C.y+C.height,u(e._southPoleCommand.vertexArray)?e._southPoleCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(ft):(e._southPoleCommand.boundingVolume=t.fromRectangle3D(h,e._ellipsoid),v=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:2,values:ft})}}),e._southPoleCommand.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:{position:0},bufferUsage:M.STREAM_DRAW}))));var A=0,D=e._imageryLayerCollection.length>0?e._imageryLayerCollection.get(0):void 0;u(D)&&u(D.imageryProvider)&&u(D.imageryProvider.getPoleIntensity)&&(A=D.imageryProvider.getPoleIntensity());var I={u_dayIntensity:function(){return A}};if(!u(e._northPoleCommand.uniformMap)){var R=a(I,{u_color:function(){return e.northPoleColor}});e._northPoleCommand.uniformMap=a(R,e._drawUniforms)}if(!u(e._southPoleCommand.uniformMap)){var O=a(I,{u_color:function(){return e.southPoleColor}});e._southPoleCommand.uniformMap=a(O,e._drawUniforms)}}}var K=function(e){e=l(e,m.WGS84);var o=new p({ellipsoid:e}),a=new G;this._ellipsoid=e,this._imageryLayerCollection=a,this._surfaceShaderSet=new U,this._surface=new q({tileProvider:new W({terrainProvider:o,imageryLayers:a,surfaceShaderSet:this._surfaceShaderSet})}),this._occluder=new b(new t(n.ZERO,e.minimumRadius),n.ZERO),this._rsColor=void 0,this._rsColorWithoutDepthTest=void 0,this._clearDepthCommand=new D({depth:1,stencil:0,owner:this}),this._depthCommand=new R({boundingVolume:new t(n.ZERO,e.maximumRadius),pass:H.OPAQUE,owner:this}),this._northPoleCommand=new R({pass:H.OPAQUE,owner:this}),this._southPoleCommand=new R({pass:H.OPAQUE,owner:this}),this._drawNorthPole=!1,this._drawSouthPole=!1,this._mode=j.SCENE3D,this.terrainProvider=o,this.northPoleColor=new n(2/255,6/255,18/255),this.southPoleColor=new n(1,1,1),this.show=!0,this.oceanNormalMapUrl=r("Assets/Textures/waterNormalsSmall.jpg"),this._oceanNormalMapUrl=void 0,this._oceanNormalMapChanged=!1,this.depthTestAgainstTerrain=!1,this.maximumScreenSpaceError=2,this.tileCacheSize=100,this.enableLighting=!1,this._enableLighting=!1,this.lightingFadeOutDistance=65e5,this.lightingFadeInDistance=9e6,this.showWaterEffect=!0,this._oceanNormalMap=void 0,this._zoomedOutOceanSpecularIntensity=.5,this._hasWaterMask=!1,this._hasVertexNormals=!1,this._lightingFadeDistance=new i(this.lightingFadeOutDistance,this.lightingFadeInDistance);var s=this;this._drawUniforms={u_zoomedOutOceanSpecularIntensity:function(){return s._zoomedOutOceanSpecularIntensity},u_oceanNormalMap:function(){return s._oceanNormalMap},u_lightingFadeDistance:function(){return s._lightingFadeDistance}}};c(K.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},imageryLayers:{get:function(){return this._imageryLayerCollection}},baseColor:{get:function(){return this._surface.tileProvider.baseColor},set:function(e){this._surface.tileProvider.baseColor=e}}});var $=[],et={start:0,stop:0};K.prototype.pick=function(e,r,i){var o=r.mode,a=r.mapProjection,s=$;s.length=0;var l,c,h=this._surface._tilesToRender,d=h.length;for(c=0;d>c;++c){l=h[c];var m=l.data;if(u(m)){var p=m.pickBoundingSphere;o!==j.SCENE3D?(t.fromRectangleWithHeights2D(l.rectangle,a,m.minimumHeight,m.maximumHeight,p),n.fromElements(p.center.z,p.center.x,p.center.y,p.center)):t.clone(m.boundingSphere3D,p);var f=C.raySphere(e,p,et);u(f)&&s.push(m)}}s.sort(X(e.origin));var v;for(d=s.length,c=0;d>c&&(v=s[c].pick(e,r,!0,i),!u(v));++c);return v};var tt=new n,rt=new n,it=new o,nt=new x;K.prototype.getHeight=function(e){var t=this._surface._levelZeroTiles;if(u(t)){var r,i,o=t.length;for(i=0;o>i&&(r=t[i],!P.contains(r.rectangle,e));++i);if(!u(r)||!P.contains(r.rectangle,e))return void 0;for(;r.renderable;){var a=r.children;for(o=a.length,i=0;o>i&&(r=a[i],!P.contains(r.rectangle,e));++i);}for(;u(r)&&(!u(r.data)||!u(r.data.pickTerrain));)r=r.parent;if(!u(r))return void 0;var s=this._surface._tileProvider.tilingScheme.ellipsoid,l=s.cartographicToCartesian(e,tt),c=nt;n.normalize(l,c.direction);var h=r.data.pick(c,void 0,!1,rt);return u(h)?s.cartesianToCartographic(h,it).height:void 0}};var ot=f.supportsTypedArrays()?new Float32Array(12):[],at=new n,st=new n,lt=new n,ut=new n,ct=new n,ht=new n,dt=n.negate(n.UNIT_Z,new n),mt=new e,pt=new E,ft=f.supportsTypedArrays()?new Float32Array(8):[];return K.prototype.update=function(e,t,r){if(this.show){var i=e.drawingBufferWidth,n=e.drawingBufferHeight;if(0!==i&&0!==n){var o=t.mode,a=t.mapProjection,l=!1;this._mode===o&&u(this._rsColor)||(l=!0,o===j.SCENE3D||o===j.COLUMBUS_VIEW?(this._rsColor=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0}}),this._rsColorWithoutDepthTest=e.createRenderState({cull:{enabled:!0}}),this._depthCommand.renderState=e.createRenderState({cull:{enabled:!0},depthTest:{enabled:!0,func:k.ALWAYS},colorMask:{red:!1,green:!1,blue:!1,alpha:!1}})):(this._rsColor=e.createRenderState({cull:{enabled:!0}}),this._rsColorWithoutDepthTest=e.createRenderState({cull:{enabled:!0}}),this._depthCommand.renderState=e.createRenderState({cull:{enabled:!0}}))),this._mode=o;var c=this._northPoleCommand,h=this._southPoleCommand;c.renderState=this._rsColorWithoutDepthTest,h.renderState=this._rsColorWithoutDepthTest;var d=Z(this,t);if(this._depthCommand.vertexArray)this._depthCommand.vertexArray.getAttribute(0).vertexBuffer.copyFromArrayView(d);else{var m=new g({attributes:{position:new _({componentDatatype:s.FLOAT,componentsPerAttribute:3,values:d})},indices:[0,1,2,2,1,3],primitiveType:T.TRIANGLES});this._depthCommand.vertexArray=e.createVertexArrayFromGeometry({geometry:m,attributeLocations:{position:0},bufferUsage:M.DYNAMIC_DRAW})}u(this._depthCommand.shaderProgram)||(this._depthCommand.shaderProgram=e.createShaderProgram(F,L,{position:0}));var p=this._surface,f=p.tileProvider,y=this.terrainProvider,C=this.showWaterEffect&&y.ready&&y.hasWaterMask;if(C&&this.oceanNormalMapUrl!==this._oceanNormalMapUrl){var S=this.oceanNormalMapUrl;this._oceanNormalMapUrl=S;var E=this;V(w(S),function(t){S===E.oceanNormalMapUrl&&(E._oceanNormalMap=E._oceanNormalMap&&E._oceanNormalMap.destroy(),E._oceanNormalMap=e.createTexture2D({source:t}),E._oceanNormalMapChanged=!0)})}var b=y.ready&&y.hasVertexNormals,x=this.enableLighting;if(!u(c.shaderProgram)||!u(h.shaderProgram)||l||this._oceanNormalMapChanged||this._hasWaterMask!==C||this._hasVertexNormals!==b||this._enableLighting!==x){var P,A="vec4 getPosition(vec3 position3DWC) { return getPosition3DMode(position3DWC); }",D="vec4 getPosition(vec3 position3DWC) { return getPosition2DMode(position3DWC); }",R="vec4 getPosition(vec3 position3DWC) { return getPositionColumbusViewMode(position3DWC); }",U="vec4 getPosition(vec3 position3DWC) { return getPositionMorphingMode(position3DWC); }";switch(o){case j.SCENE3D:P=A;break;case j.SCENE2D:P=D;break;case j.COLUMBUS_VIEW:P=R;break;case j.MORPHING:P=U}var W,G="float get2DYPositionFraction() { return get2DGeographicYPositionFraction(); }",H="float get2DYPositionFraction() { return get2DMercatorYPositionFraction(); }";W=a instanceof v?G:H;var q=this._surfaceShaderSet,X=[];C&&(X.push("SHOW_REFLECTIVE_OCEAN"),u(this._oceanNormalMap)&&X.push("SHOW_OCEAN_WAVES")),x&&(b?X.push("ENABLE_VERTEX_LIGHTING"):X.push("ENABLE_DAYNIGHT_SHADING")),q.baseVertexShaderString=I({defines:X,sources:[B,P,W]}),q.baseFragmentShaderString=I({defines:X,sources:[O]}),q.invalidateShaders();var Q=e.replaceShaderProgram(c.shaderProgram,z,N,Y);c.shaderProgram=Q,h.shaderProgram=Q,this._hasWaterMask=C,this._hasVertexNormals=b,this._enableLighting=x,this._oceanNormalMapChanged=!1}this._occluder.cameraPosition=t.camera.positionWC,J(this,e,t);var K=t.passes;K.render&&(o===j.SCENE3D&&(this._drawNorthPole&&r.push(c),this._drawSouthPole&&r.push(h)),this._zoomedOutOceanSpecularIntensity=o===j.SCENE3D?.5:0,p.maximumScreenSpaceError=this.maximumScreenSpaceError,p.tileCacheSize=this.tileCacheSize,f.terrainProvider=this.terrainProvider,f.lightingFadeOutDistance=this.lightingFadeOutDistance,f.lightingFadeInDistance=this.lightingFadeInDistance,f.zoomedOutOceanSpecularIntensity=this._zoomedOutOceanSpecularIntensity,f.oceanNormalMap=this._oceanNormalMap,p.update(e,t,r),(o===j.SCENE3D||o===j.COLUMBUS_VIEW)&&(this.depthTestAgainstTerrain||(r.push(this._clearDepthCommand),o===j.SCENE3D&&r.push(this._depthCommand)))),K.pick&&r.push(this._depthCommand)}}},K.prototype.isDestroyed=function(){return!1},K.prototype.destroy=function(){return this._northPoleCommand.vertexArray=this._northPoleCommand.vertexArray&&this._northPoleCommand.vertexArray.destroy(),this._southPoleCommand.vertexArray=this._southPoleCommand.vertexArray&&this._southPoleCommand.vertexArray.destroy(),this._surfaceShaderSet=this._surfaceShaderSet&&this._surfaceShaderSet.destroy(),this._northPoleCommand.shaderProgram=this._northPoleCommand.shaderProgram&&this._northPoleCommand.shaderProgram.destroy(),this._southPoleCommand.shaderProgram=this._northPoleCommand.shaderProgram,this._depthCommand.shaderProgram=this._depthCommand.shaderProgram&&this._depthCommand.shaderProgram.destroy(),this._depthCommand.vertexArray=this._depthCommand.vertexArray&&this._depthCommand.vertexArray.destroy(),this._surface=this._surface&&this._surface.destroy(),this._oceanNormalMap=this._oceanNormalMap&&this._oceanNormalMap.destroy(),h(this)},K}),r("Scene/GoogleEarthImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadText","../Core/Rectangle","../Core/RuntimeError","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t,i,n){var o=e._imageUrlTemplate;o=o.replace("{x}",t),o=o.replace("{y}",i),o=o.replace("{zoom}",n+1);var a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var f=function v(i){function n(e){var t;try{t=JSON.parse(e)}catch(i){t=JSON.parse(e.replace(/([\[\{,])[\n\r ]*([A-Za-z0-9]+)[\n\r ]*:/g,'$1"$2":'))}for(var n,o=0;o<t.layers.length;o++)if(t.layers[o].id===_._channel){n=t.layers[o];break}var s;if(!r(n))throw s="Could not find layer with channel (id) of "+_._channel+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);if(!r(n.version))throw s="Could not find a version in channel (id) "+_._channel+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);if(_._version=n.version,r(t.projection)&&"flat"===t.projection)_._tilingScheme=new a({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2,rectangle:new l(-Math.PI,-Math.PI,Math.PI,Math.PI)});else{if(r(t.projection)&&"mercator"!==t.projection)throw s="Unsupported projection "+t.projection+".",f=c.handleError(f,_,_._errorEvent,s,void 0,void 0,void 0,p),new u(s);_._tilingScheme=new h({numberOfLevelZeroTilesX:2,numberOfLevelZeroTilesY:2})}_._imageUrlTemplate=_._imageUrlTemplate.replace("{request}",_._requestType).replace("{channel}",_._channel).replace("{version}",_._version),_._ready=!0,c.handleSuccess(f)}function m(){var e="An error occurred while accessing "+g+".";f=c.handleError(f,_,_._errorEvent,e,void 0,void 0,void 0,p)}function p(){var e=r(_._proxy)?_._proxy.getURL(g):g,t=s(e);d(t,n,m)}i=t(i,{}),this._url=i.url,this._path=t(i.path,"/default_map"),this._tileDiscardPolicy=i.tileDiscardPolicy,this._proxy=i.proxy,this._channel=i.channel,this._requestType="ImageryMaps",this._credit=new e("Google Imagery",v._logoData,"http://www.google.com/enterprise/mapsearth/products/earthenterprise.html"),this.defaultGamma=1.9,this._tilingScheme=void 0,this._version=void 0,this._tileWidth=256,this._tileHeight=256,this._maximumLevel=t(i.maximumLevel,23),this._imageUrlTemplate=this._url+this._path+"/query?request={request}&channel={channel}&version={version}&x={x}&y={y}&z={zoom}",this._errorEvent=new o,this._ready=!1;var f,g=this._url+this._path+"/query?request=Json&vars=geeServerDefs&is2d=t",_=this;p()};return i(f.prototype,{url:{get:function(){return this._url}},path:{get:function(){return this._path}},proxy:{get:function(){return this._proxy}},channel:{get:function(){return this._channel}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},version:{get:function(){return this._version}},requestType:{get:function(){return this._requestType}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),f.prototype.getTileCredits=function(){return void 0},f.prototype.requestImage=function(e,t,r){var i=p(this,e,t,r);return m.loadImage(this,i)},f.prototype.pickFeatures=function(){return void 0},f._logoData="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAALQAAAAnCAYAAACmP2LfAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAHdElNRQfcDB4TJDr1mp5kAAAAGnRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xMDD0cqEAAB1zSURBVHhe7ZwHeFTFFsf/u+l9N70npOxuSAKEFFIhCSH0qhEQUHkgKCgWUFGBB6IoCAoo0ntooaRvEkIIBBBpoYSa3nvvfd+5u4sQUigPfMX8v2/Y3Tkzs3fv/d0z58zcgF69Ql1SY+MM1wQJem44ZeiJk8beEOqPwG6uC7ZqyElb9eo/JZEIkH2nRQkBIlNMauuPCS3uGN/kjkmNDghoskBAgzrZ2NLmf1+JwIKQpYsoxdmIV9+N07onCegzBPM9bOdmYKnazF6g/1N6UySPqSJzvCaaiLHtP8G/Phq+FRfgU5ogKWUXMLT6Mvzqr2BE40mMadqO8c3zMabBC6PqDDC8SlY60t9HByCLVTKu+ERmHr5TWI9wjVxEaOZivWo1pil8D1tZeWnLXv1l8iZ3PF2kjymiWRgvCoJv5U243IyAXcQq8A9Mg9W+4bDe6wv+kVGwCZkL+4Sf4ZR+BZ5VGQR3EkbWn8Hopm3wq54Lz2JD6ah/P21XGopQ9Qoc16jGSqVyTJWbQbUsibFXf42mihTwZpsvAtp3k0dOhFOSEH1+ngaDefrgjFCgFkxY8fCisCBvKgODzxRh9qslBFGfYmDGLbiV5mBwRRo8KtPhVBgPu8teMP7u73chD6kMRYRGBY5xqrFKqQwz5SdTbS/Qf5mmUYw8rf01CjHC4VP7AHZxO6E3qy9ZZCQNnio2rE/4o9/tkxiQUYp+KRXgx8XC5FsXcLz/hkCrDUU4pxLHuDVYpdwL9F+qqSJZKlPwenskfOoI5tN7YPCJGVme7wKYr5EBXzgYfW+mwTI0Gjrznaj2WW+I/y8dVPdDGLcKRzXrsEqlHO8oTKHaXqAZWe9hQXCi63NhHWYI3ilfWIW/YLjqL2JRiOFBJRz+LffhcPs09D+0J8vzn3zXdBnYnp8Mi6NboTWzH9X8fVc+DhDQodxqAroe36lU9AJNWr4cEAjNwI8OAC9cT1rbUfzwGeCfKiL7dGnNc+q1NiO80b4BY1oT4V6WDcsdc6j2xbyq4wMWrA9rQmeWFn36ey/jBaoPQ4hmLYI0G/AtAf22fC/QDols8ITrIYi/Bl6knbS2o3gRbxHQxQQ0k0S/gCa2v4OJovPwacqAQ1ICjL40klr+UrWoQbFBETo18jCpZsOoFODkvuCNJYoHW3QKXFEM7ETRcKfiQe8d6NVIFImXvg4skhY40mxnQYVRIIeA1qrHEc1GrFSpxFtP99AiFbDbNKDZpAzzGkVYVcvBuBJQEo/9/6C+dyjPitwLwak74D8V6Bfw0P5VShjXFoTR7TfhUZkL29M/wfATJan1lauWC3aDOgyaVDCuTgbf1bFkfmtkye1ogsK2asivLYfCglIoD8qCknI2NHuG4QSVGMgQyMbt0fioRYh9VYcRU7QX55uDcaHtFOJEsThMtmWtQgxsDodsWaC0c3ea3MzGBJEqxrfbYmzr6xjfPAeTmt5HQPO7eK1xDibUz8eY+k8xtHYJPCtXwvHOu7AXMrMTsF/TH8HajTis1YwVqpWY0TXQDKy1OpBr5EJA52Fukxx+bmKxtjWx2DuaWawNlZD5qhzyo9KhpHAbKpJO/6t65UCPbPHA2PYrGNacgkElabCJJDev/MpDhUKKnuq44LRoYEK1IiswkS1zYCfk5y+F0qjvoTwqBOof34dGeAnUL1ZCLboEnJ9zoe0QD/Nuj00UBVXRabzVLETM3S0ICfwA8yc7Y6C3ANYbZsA7aQ1W1xzEfZEQ6dT2BkG9pP4ouo7jGE1u42JS20QMrzkCr4xwuN4+AM+cYII3EaNar2J86zmMrP8DHulCON4NhU3YWuhOYy6SZENpH9cfx7WacFC7BSvUqjBDsRPQIiugURvazeqYVaqAw6dYrJ9WQy7gayj4nYDy3HtQOVQGpYRqKEWXQf2HdGha/AFdae9Xr4czz0ubISRA75ECbSut7agegO75OLxpahze8j5GtifBpzEDLiV30Dd2mNT6StWiCbVmLt5rUkBQCEt2zWzIMSA8HgrIBkLD+Sp0jhHISYXQ/KMYukfvQ3fQxq68XCTBHId/tMTg7LV1CFs4BszJ6hBarBgHlcRv8H7tbuSKQpFPYGe0BmND+nZ0npECaPKf0r4UIxsuoF/IMpitsAVnrA4s15uh3x8fwLXkLobUZGJIXTqcUzbDaJE5FAVq0t4S7dEcjqMEc6B2K5arVWN6Z6AbdOmm5mJelQKOHWSxF44Cy4CqxW0s6RwchCovFRohdGNfLgX3WiZ0N4aD++y7jfwYJUrAPCle/ZjKV+BFTSegrGAZIm3QjXhBytTWB3zhByzryMUU986jz16wD+96ijCNUIAgmkc3tS6G7GERjCbgR82B4OTbEESqIiCIcqsIYzoGGyrBEMSmgh8xBoIIAR2fAHZhj8Z9DOhl9FHeKkSDvn809fuc+iyCddRYaiOZBTvIt1YJfs0b4N+WDO+GHPLQN2Ab7S61vjJV60C9SRPvNSqzTpxlyQfS1dGUmjppK7gW16B/LhN6abnQu5cDwzO3YNhhqqK4WJY887sEdGzWFpxfOxmDpKZOOvgWFB8sx9L6nShvP4FyUQjKGg5gScpGKEqbUE7RxiGYv6QQ4zIG/r4D2m88sjEy/EIW/a6+TQ4gHe5VhXCvy4JL7gLYnesI2i6t4Tii04r92u1YKt767gB0ozrkGzmY26zEOh7Hkt+kAKhLTX9qOVVdg9aoNOjcToR+wUVKLYKgN0Zq7l7884wn9CKgr4AfWw/B6SwqKQRKOdXVghe9CpbherASSjtIpGpxRIHFjwygNreoXy0lb+lU7lHJBP9kPcGXQnBNghUB/Lh44fbUp5JA+5Hs71LbPPLCVRDEJZDNGIJgeQI6mG6KegKzldq1U7tGKjQmHR8vwl86kgRoAQN0xBw6ztn0nQ/ocxEdQ7L4d/BjG6g+m8aZTL/xsXPuW82Fb8t+DG1Ox5D6XAwqvQ67OA+p9ZWoUQPsei78mjSwNU9GLmEzVGZJTd3qFPTn3YZhXgYMMjNhlHsDxms/hNWfoUdrNPgEc2h7BG5d/Bo7Blt0BuNxXf4MVmXrkdRyEHWiY6hr2oc7mevRX2wc18gioEeI1+N9a+/CNnImVAZ0mhEoNOPAJT8MHjUF8KTiWhqHgbfMpVaJdhLQh3XasU9bJAZ6ekeg6zQwgEKuLSWysmd3QGmatLqD8qDNug3dCX/AIPk4jGr2wDB/JXTmkan70IvmZTY/rB9BdZlKLkG0lG0d5klAObKsw1+jzyFiWPnRawiaDrMYwTyMwMwh220WP2IWFVfqN4CKO8E3n0C6R/ZUej9Y2kUiMdDRFTRePH3nA3q/m7xpAEtAXl0QrkTwscnmS/3eptdzNEYevZLnZ5booqk8tuYs9tAny+n1LL1mghezlcULH0VtHamOZhvhIvoNOXQsd2EZIbluYnlWaMO75TCFG9kYXJ8H14o76H/10Z3yClSrCm6jGtbWK7LC7kIlYRfUmY2XHnUa+mbXYRSfCuNCptyE6b1jMBD/EPKwchQPLxGdxOWWI8iKXYBPqLozgI8pfA5YBWvxbfMeNLUfRmPTLjRnr8YKsdGvRQ5j2zZTSSRQ78H+7GhxfScFAINypsG9ukDspZ0LKKE+O0pqlGi71ggcIqD3dga6RhFKjSqYT+VEFkvu/E9Q+HNWKaE2VVDgVkPFqwAaay5CN3En9M59BM2vfKDs7AvljjPGE5LlharQdL+LoCmhOHU0rIUyD+NgVTOa+q2iVQiIcAKpHtbhXuJOjPqeVCRYThNE6VTvKNs3hM3cHGIxntxKyCbP7Erj1lHZJbVIJAG6iiCroZCAPGukvOyASJbvCgoaAoKoAQ1kHcGC7nmZDkmhBR2PfSQLtkcl4zCSAE2eO6qExYuYxrE4KqdvelBiM4+ncYQy1IY8d0wbhUSLJAZGbsUceNYdwJCGPAyuy4NbZToG3JoO1Qk9AvHvqF4ejo0KCKlisyl04Jw+AE1ma71HRUJP+QqM1t2HcVEyTEoSYVYQCuN3HenCt4XDhGA+KorAnYZ9KIj5ELOl3XpU/k/wrt+OmraDaG7cjpacbxFvYAAZDG5Vw/DWCxjRdp+ATsWAS6+D69H1+XDNsoVb1T06b0VwzCmBIOYdqUWibTojcFBH1CXQctBtUcA6Oh/RmVC4sBmKA5j6erC1qqE4sRpqG25A43QIOHuXgvOmP5R4ZH6m5UY2L9SSLjZ5sKjjsI/o8olH8ngjCZoSgmw9DMIl3t42Up0g+pq89/sEjLK47knZhSkSuDepJP4JOyNJyEFAR8VQKMOR1nbWM69yxNJYwh+VLE90ffPyxLE3EwL9Jq0huWQqwL1iA7zq8+FVl0+epgBO6T+gb2TH+OglqgastxtZrNNlkLt8E5oJx6HZdab7mFZBk3UZRjMewCT7HkzLfodZxREYr5sBjiIBPYiAPt8ehvSGPSg5vwjzpd16VNkmmDTswp22QDTXbkJrxhJkzHGDFoUQmvBpvo2hrZl0TnLhlLIYfUO7nt7dSg3hURcP1/JiDEgphuXBqVKLRFsfA3oJAf3mI6Cr2OjTwGYdqWGzzmZD6WoYVCfehdqsZKjuuwS1oB1Q+5piHac3oaxBzZ9vLZ4nHEeesoXg6niDPSYWP9yUgD5PHu48eKE64krHcErchHIEuRysTpAXjObQWIYEHiV4EQYEojp5aEoyY+IIpOQugKYYOnIdJXrdJ63PtWwXMQM6m6SVT4gfZkbHV0XHsVtaQ3K8yoJr0YfwoHDDq5ZiQSqDik/B4Q9taYtn18gyNia1qGJsmTrGlUjK2FJ1jCjRwOASDnkxDvN95ZD/og5yl0qgfCMJ2leDoeksHaFHXYOJVyrMkm/DrPwMzGr2wmjnLGipthyHL0W7t9pDkduwF2U3lmGFtvbTdyirt0OreT+iWwPRUrUBbSkLkT/fCUZwKVYikBMwpDlPXNzLwuAQ2rWX8KzUh2dDDJyLSmB7/S5Mf3WRWiR6CPSezkCXQs6qBnLCKsheyoXqnTCoL9oOFd9/Qtl9KJT6UJMX3/zhCz8iuCjhiviSYtMx3ZTJBN8lCE7eIRgF0p6krRRaRBDskTTGySBKws5SuUjJHYUiMQdpzCUE0Q3y5MnSDhJJQg5JUvjSgO5hHZofaioGmvc40IycMgbRtJktjgOZ5Ma9irzSg46xYHcaVEZevkgBHqUWGFK+FENKQ+BdGAq/wiMYWbwHI6h4FwTDOes0BMKFMHxPNg9qn1dANakYanfuQSs5FJoTpaP1qBswsSGgb9+EeUU0Af0LDH4dBhXlmv3wajuOpPYQFDcEojxtNQ6sn9ZzUsiofjfUWg/iYOt+tJatRtvN95DqZgxNuKTKwLV4Jdyqc8Wz1uCGTLjmDIVDQqewQ8anwpJi6GsYkF4Ey2O/QvsfXKlJIgboAwT07s5AZ0G1TylUIsuhdKMI6vcuQ3PVAqg+9UZ8JvGEywiuNoIwD4IzaV2X+HSa1otgE3+NwJImVkycG0kx8snfyUZJW+QFApeSu+hN9BpIn6n+ZBp9bqDv+C8Fum+8IpzzJNOmR3UhTaGFcC07iAHXmamuZw28C/S/aIt+CcthF7+ToN0EQdhqOFzcBu/Sm/ApvAGX3DzYXIiF9jtWTJf74L6ZC83UfGg8SId2xnloSZKxp+gWjC0J6KSrMK8KhmnlSugtInpkCzaBV78Hl5oPoaLpECrLt+Bi4jfgS7t1q+YDUGsPwj5KDFsLlqD97JuIpmpZmP+TftM1ezjlxsOllM4H3eReDWHwKrOBW84jqMeK5OBTv4Bu6HxxgqU1s/N3MkAHSoH+ioCe+gjoJHB0s8ENLID6/UJo3E+GVlwoNEwY278tXhR50RhmeexzgmM8JXjdF36MHwEoiXn70Csv6gxBm8PiRc6gJFD1HDzFpq1cP0omo5QJZAfqQzH0f6uHZjQgeR4cC/IJZCnUtSkYVPAWBiX2/CdU/S7Ql+9TgtFCTaiP0qAEXA2yRsqwuzECziWZcM4tgv2DSljF7ID+l+JNh9+hY38HuvcYmLOhk5EEnVPfQOmpW+33YGaXhj53E2BWuxvGebOh5cPUX/sWSgXrsa9mB2qaDqCK4C7I2IA3jn8u7tat2g6D034MIbWb0fZgHlr2DscXUhNNuYdkYRPrg/7JiXDMLYBrZS6GNEZgVJM/JjWY4I16G4xr/BCDq2nKjjoAvY+Zpwo7eXBskQK9Swr0lEdAn4a2wk3o/DMNWmn54KYUQIuZsebGQuXFQ42H4kfNk4QckSOkNZ1lGkGAUoInOKkAm2jJsVtH+om9Nj9ytZxNcNdhljXByo+JJXj/i4G2u2xM02YInPJLxFB7VudTPH0ZHkWu0hbPpwHpfnAszoFDVgVsb1fDMmoL9L8S7wTFQE/1AvR33oB+QSp0czKgl34B2iO9uwJCKib5SGaZjbqLPlkhMG1YDr1gQyioSs24vQTDitagsnIL6loCUVu9C2EJK9FjYtsWBNP2Q7hb9A155zdwY5mTeGexo0w32hEcy2F7JQaOqZfgk38KY6rDMKFBiGHNt+iGPgCNYd0/s/sbAb2fgN5JQC9Wq8bkR0AzioOOx3Xo30mGbnY+tNMKoJOQCm03qfnFxRf6E1yUFAqZJcyuZRWuQmB+TWHJcgJfkjPxImcSSIUsXviMx/O9DvqfALrPDjb6nhuBAWkZ5JFKKTYuIqhz4FUdAo9CGwzO7Ra2LjUg0w9OxdlwyKxAXzHQm8lDi4HeAT1WMPSHnYXR7aswKE6Gfl4K9PdfgZ6+uG8XSmMbKyXD/LsEmFduglH2NHA7rA3Hvg+Ve1/gYO4KNFRvQUPLQVRU7MG4yn1dJ4eiULAo3JhW9xsa77+Hml8GY8FQ425uAM5wRRivNoPlTjs4XhoH35oLGFZ/S/wglyDkbWmrrsUAvY+A3kHlSwJ6ihKzCvLnuQyElmIs9LdfhmHxA+jn5kI3jcrRFOjxU6DTbTx9DybsOBh0f034EeYEVyaFD0IYhnQ9y1pTIsiPvU5AnKYkUBL78yKmQhDLgDRPSWtPp/HFkFtHqFCfRBr73wX67qsD+qFsEubCnqKBAZllcCkkT12RjSHVMfApH0bJXfcH+aQGZg6FU1EWeeoK2NwgoMM3Q++zP/fq/Smf2g392ZEwzk2Acfl9GBHURmuSYPyn132oHBizH8B8wjX0SadQI2cWtOZZQbHTdEgRn8XN93EiczFayn5GU3Mg7lJMPab5SEeoCWZZ0TF4Ne/A/ZSPUbXdDz9Qdddrrk/KtcwR7jX34VXDzGCFGFT0GzyLu922x069kdiv145tOu34jlOHBWoz4arUAZQt0LYOhmFcHJ2H6zAsYnZDc2FwKhv60+m9UQrLUJ4hSYQAVhpM1O6jj30EDD33Q6frZyoY8cMVaWZZR560kuB5V9H6iVUas+Py5L1/IHsT2ZldR4nEkMdkUd8Y8tYd43mLIMhYhenDWvgjQSQiGFOkiEv0rEAzK2u8yG10M2WwBWFdb6q9NKDNd6rCOuYD9L2VI/57QMfcEniU5cCnJgG+lR9haAnz4MzT5ZjmA4e8HBqnGtYXamF+nK7bpx0uwHxoqGyE3sKD5HHjYVJ1C6Z5qTD5Ph2G1hnQEV/0LBhxU2E+4yYsbgTCJGsuNBfYQrnjA0CPxDo2CRYJ0xGesgD1ZWvQ3LQbKeSJ54uC0UcUDVVRGExFR/FB2y7cSf4C+Zv9sXSUeQ9P2z2pQdnmBHQsPKqKqFCyWJsM75o1GMw8O/iEhFZs/KK9CD9wRfhCTYTP1dqwnBOHrQYz8IuuH5ZxxI/MLQZH5kfoeu6D4cVQGNecgXHFbRgXZsD4Xg5MjqfDeE0KTBbRDLXsLiwOR8HkxCJoOs+Eavdr08ZBBGdYP7rYzAZILsH3LYUYtgSsAXlYRwLqW0r8Ksl2id4/Onaz47IE+kayUfwddYhsgwkqXRrLgOpHEuyhVF9B7ytoTAL//qNjeFagGfGEi5nvYPEifqOx/ek4p1J/8aKBWC8N6Icy2+oL6zOhECTmw46SuoHZpXBn/pK7/DK8K1bCp3Q0vAv7wqfIBD55OuS9teFVYASPfAFccseThw+E4Ho5LOMqYB6ZCeOdK6H1bleJH2sOOPZradqlC3otDqY5F2GafQmmCZdgFnMBZteEML2yCnprh0CZWVp66gbDuD5Q2uSLUacm43jSB0gq+h55JeuRX7wRqUUbkJL8DS4GTcPqCdZgduZ6XiZjgvcp9fIY3aAH/yY+3KvcMDBjLSXQBXDML4VbaQG8a9PgUxcOzyIneKY/Or6FHDO8q7INY+RiMFJaJijE4i2VeEylej/FDs99TAPH8Dvofv8bDK/vhVHxMRhX0W+vOgXTijiY5UXANGkNnYeRUGN2VrsPNx6XVaQNgRNM03sBgUjeOKJJ/Cr+LNzFsg61YB5/elyKtic0qM031CaZAG0gqJnVEuYBIoI49gy9D6DXrQR3GoU2j3YE+WE2FI9TGBG1FLywnhNbPt1Y/OhY+o5iGqsGNmdLaVxfqZUB+g0Iztwi2AOkNZ3FCzOm30bHeHK9tKYHKfPZMFhlAtM9c2EpjALv93zY3qlE/8xyOOUVUTiSBrfy83CvDIdbRZC4uJSGwzHzd0qgkmEVfRnGW/dC79vPobtkFLRmm0HDpVt43MnrzoOm/dfQeeOf0P3wB+guJogXrIDuhHfAsdOFbKdQ5GkaYQbNNYNht2c8/AOnYNKB6Ri//Q14zRwIuohdPC76pCbWKGFCkx9GNC7B0NZD8CiJh8Odi7A59zud7EuwvU4hVUYZBhUXwqsqA56V0RiUM1Dam36UoiyFuprQhc6fRZuKKhV5+rcLKD2hrPQ+NPsvgNb0j6C9eCG0v/kU2l9/BK0ZM8EdRJQ833noG8Qib6lDkA0lYD6i8GIJlffZ/IhhbJtQjW4TP164EiWWztTnH9T+a4L/MxpjAn02hWWYDAQnefSZzm7Io7zDOpiSzGh3grwPwd3zDccPZdH4phBEkXcWBrD4wlE07qObw5pmBUGsK43T/YPfgmAFWEe5U2EeCXhGcV5nQ3u2KrTf6w+jdTNhtud7mB/ZC4vg43QAwbAMDYLF0e3os+8HGP80D7oLx0F9dD+oj9AGZ4Y85K0Yj/Vs3kQiFgeybFPIySiDzdwAz9O3JzHjPNtYk8gjv948FOOatlGodR0Dk07Bau9n0F8wFBp+luBO1CXeuDD51Q3830PRP7UIzgUlcC0vhHPRSdic6eI53ecT3W0sKyjI2EFRxhzyz3sOO8voBkEUTclYhAyshCwr642PR79diwlbBOEs8vLMFjgbbuelhpeoz5rEDxsNNl/+9ON5RWJOLsXCysQdh5IhWWbzhUmoel6v/l/RxGpZTKgbh3EtEZQMp5AX2ASd2f3AVu7695ky/7nOuc2U/BZSCFIGp+I82F/rfprsVa/+Mk0sZ2F0tTvGNZ+gRO8B7C/HQ92beWine+/IDWDBbJUmbBN/hUNOGRyyStH34vfQeP3ZV4R61atXIu9Kefg1rIB/XRJciwso9nymLXmxbP+wxcCsVAxIKwfv1AZoDH96jN6rXr1SuVeowKsuFINrs+BSXATbc59JLU/XwCwdDMw7B/vUEpgHfQYZ7v9HCNar/2E55ynDpSwYrhXF4uKUeQiY0/Oy3kM555nCITcJgmvp0F30Yo8L9KpXL1X9E2XhkPoVBuYWwbmolKDOhmv+WHiXyGNkgbTRE1pOublXkRycCz+AfUoRzPdsgKJN1w/19KpXf7n6xlnCPikE/SkWdswrozDkNoZUfIWhFTYYWaPy4a6NkgSR2XAZXSOLIWUWcCv7FP1T7sH8wFZwp7ycxz971auXIm4AG+b77MFLEKLv7ULJMy0FefCsPAOv0t0YUrIMg0s+gVfxYrgVbIJLUSzsrl2F2ZZl4L7J/Pdp/956ca969UrEna0O41/HwSJ4F3in42Fz5Trsbt5Bv3u30e9uImyvnoV15GGY/LIA6kOZP1966pZ8r3r1n5eqhwZ0F/aB4ToHGK9zh/FPHjD60RE6H1tDaaA2cdy7mvFfI+BffksPNrEksu0AAAAASUVORK5CYII=",f}),r("Scene/GridImageryProvider",["../Core/Color","../Core/defaultValue","../Core/defineProperties","../Core/Event","../Core/GeographicTilingScheme"],function(e,t,r,i,n){"use strict";var o=function(r){r=t(r,{}),this._tilingScheme=t(r.tilingScheme,new n),this._cells=t(r.cells,8),this._color=t(r.color,new e(1,1,1,.4)),this._glowColor=t(r.glowColor,new e(0,1,0,.05)),this._glowWidth=t(r.glowWidth,6),this._backgroundColor=t(r.backgroundColor,new e(0,.5,0,.2)),this._errorEvent=new i,this._tileWidth=t(r.tileWidth,256),this._tileHeight=t(r.tileHeight,256),this._canvasSize=t(r.canvasSize,256),this._canvas=this._createGridCanvas()
};return r(o.prototype,{proxy:{get:function(){return void 0}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return void 0}},minimumLevel:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return!0}},credit:{get:function(){return void 0}},hasAlphaChannel:{get:function(){return!0}}}),o.prototype._drawGrid=function(e){for(var t=0,r=this._canvasSize,i=0;i<=this._cells;++i){var n=i/this._cells,o=1+n*(r-1);e.moveTo(o,t),e.lineTo(o,r),e.moveTo(t,o),e.lineTo(r,o)}e.stroke()},o.prototype._createGridCanvas=function(){var e=document.createElement("canvas");e.width=this._canvasSize,e.height=this._canvasSize;var t=0,r=this._canvasSize,i=e.getContext("2d"),n=this._backgroundColor.toCssColorString();i.fillStyle=n,i.fillRect(t,t,r,r);var o=this._glowColor.toCssColorString();i.strokeStyle=o,i.lineWidth=this._glowWidth,i.strokeRect(t,t,r,r),this._drawGrid(i),i.lineWidth=.5*this._glowWidth,i.strokeRect(t,t,r,r),this._drawGrid(i);var a=this._color.toCssColorString();return i.strokeStyle=a,i.lineWidth=2,i.strokeRect(t,t,r,r),i.lineWidth=1,this._drawGrid(i),e},o.prototype.getTileCredits=function(){return void 0},o.prototype.requestImage=function(){return this._canvas},o.prototype.pickFeatures=function(){return void 0},o}),r("Scene/ImageryLayerFeatureInfo",["../Core/defined"],function(e){"use strict";var t=function(){this.name=void 0,this.description=void 0,this.position=void 0,this.data=void 0};return t.prototype.configureNameFromProperties=function(t){var r,i=10;for(var n in t)if(t.hasOwnProperty(n)&&t[n]){var o=n.toLowerCase();i>1&&"name"===o?(i=1,r=n):i>2&&"title"===o?(i=2,r=n):i>3&&/name/i.test(n)?(i=3,r=n):i>4&&/title/i.test(n)&&(i=4,r=n)}e(r)&&(this.name=t[r])},t.prototype.configureDescriptionFromProperties=function(t){function r(t){var i='<table class="cesium-infoBox-defaultTable">';for(var n in t)if(t.hasOwnProperty(n)){var o=t[n];e(o)&&(i+="object"==typeof o?"<tr><td>"+n+"</td><td>"+r(o)+"</td></tr>":"<tr><td>"+n+"</td><td>"+o+"</td></tr>")}return i+="</table>"}this.description=r(t)},t}),r("Scene/Moon",["../Core/buildModuleUrl","../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/Ellipsoid","../Core/IauOrientationAxes","../Core/Matrix3","../Core/Matrix4","../Core/Simon1994PlanetaryPositions","../Core/Transforms","./EllipsoidPrimitive","./Material"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";var p=function(t){t=r(t,r.EMPTY_OBJECT);var n=t.textureUrl;i(n)||(n=e("Assets/Textures/moonSmall.jpg")),this.show=r(t.show,!0),this.textureUrl=n,this._ellipsoid=r(t.ellipsoid,a.MOON),this.onlySunLighting=r(t.onlySunLighting,!0),this._ellipsoidPrimitive=new d({radii:this.ellipsoid.radii,material:m.fromType(m.ImageType),_owner:this}),this._ellipsoidPrimitive.material.translucent=!1,this._axes=new s};n(p.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}});var f=new l,v=new l,g=new t;return p.prototype.update=function(e,t,r){if(this.show){var n=this._ellipsoidPrimitive;n.material.uniforms.image=this.textureUrl,n.onlySunLighting=this.onlySunLighting;var o=t.time;i(h.computeIcrfToFixedMatrix(o,f))||h.computeTemeToPseudoFixedMatrix(o,f);var a=this._axes.evaluate(o,v);l.transpose(a,a),l.multiply(f,a,a);var s=c.computeMoonPositionInEarthInertialFrame(o,g);l.multiplyByVector(f,s,s),u.fromRotationTranslation(a,s,n.modelMatrix),n.update(e,t,r)}},p.prototype.isDestroyed=function(){return!1},p.prototype.destroy=function(){return this._ellipsoidPrimitive=this._ellipsoidPrimitive&&this._ellipsoidPrimitive.destroy(),o(this)},p}),r("Scene/NeverTileDiscardPolicy",[],function(){"use strict";var e=function(){};return e.prototype.isReady=function(){return!0},e.prototype.shouldDiscardImage=function(){return!1},e}),r("Shaders/AdjustTranslucentFS",[],function(){"use strict";return"#ifdef MRT\n#extension GL_EXT_draw_buffers : enable\n#endif\nuniform vec4 u_bgColor;\nuniform sampler2D u_depthTexture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nif (texture2D(u_depthTexture, v_textureCoordinates).r < 1.0)\n{\n#ifdef MRT\ngl_FragData[0] = u_bgColor;\ngl_FragData[1] = vec4(u_bgColor.a);\n#else\ngl_FragColor = u_bgColor;\n#endif\nreturn;\n}\ndiscard;\n}\n"}),r("Shaders/CompositeOITFS",[],function(){"use strict";return"uniform sampler2D u_opaque;\nuniform sampler2D u_accumulation;\nuniform sampler2D u_revealage;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 opaque = texture2D(u_opaque, v_textureCoordinates);\nvec4 accum = texture2D(u_accumulation, v_textureCoordinates);\nfloat r = texture2D(u_revealage, v_textureCoordinates).r;\n#ifdef MRT\nvec4 transparent = vec4(accum.rgb / clamp(r, 1e-4, 5e4), accum.a);\n#else\nvec4 transparent = vec4(accum.rgb / clamp(accum.a, 1e-4, 5e4), r);\n#endif\ngl_FragColor = (1.0 - transparent.a) * transparent + transparent.a * opaque;\n}\n"}),r("Scene/OIT",["../Core/Color","../Core/defined","../Core/destroyObject","../Core/PixelFormat","../Renderer/ClearCommand","../Renderer/createShaderSource","../Renderer/PixelDatatype","../Renderer/RenderState","../Shaders/AdjustTranslucentFS","../Shaders/CompositeOITFS","./BlendEquation","./BlendFunction"],function(e,t,r,i,n,o,a,s,l,u,c,h){"use strict";function d(e){e._opaqueTexture=e._opaqueTexture&&!e._opaqueTexture.isDestroyed()&&e._opaqueTexture.destroy(),e._accumulationTexture=e._accumulationTexture&&!e._accumulationTexture.isDestroyed()&&e._accumulationTexture.destroy(),e._revealageTexture=e._revealageTexture&&!e._revealageTexture.isDestroyed()&&e._revealageTexture.destroy(),e._depthTexture=e._depthTexture&&!e._depthTexture.isDestroyed()&&e._depthTexture.destroy()}function m(e){e._opaqueFBO=e._opaqueFBO&&!e._opaqueFBO.isDestroyed()&&e._opaqueFBO.destroy(),e._translucentFBO=e._translucentFBO&&!e._translucentFBO.isDestroyed()&&e._translucentFBO.destroy(),e._alphaFBO=e._alphaFBO&&!e._alphaFBO.isDestroyed()&&e._alphaFBO.destroy(),e._adjustTranslucentFBO=e._adjustTranslucentFBO&&!e._adjustTranslucentFBO.isDestroyed()&&e._adjustTranslucentFBO.destroy(),e._adjustAlphaFBO=e._adjustAlphaFBO&&!e._adjustAlphaFBO.isDestroyed()&&e._adjustAlphaFBO.destroy()}function p(e){d(e),m(e)}function f(e,t,r,n){d(e),e._opaqueTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.UNSIGNED_BYTE}),e._accumulationTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.FLOAT}),e._revealageTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.RGBA,pixelDatatype:a.FLOAT}),e._depthTexture=t.createTexture2D({width:r,height:n,pixelFormat:i.DEPTH_COMPONENT,pixelDatatype:a.UNSIGNED_SHORT})}function v(e,t){m(e);var r=WebGLRenderingContext.FRAMEBUFFER_COMPLETE,i=!0;if(e._translucentMRTSupport&&(e._translucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture,e._revealageTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._adjustTranslucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture,e._revealageTexture],destroyAttachments:!1}),(e._translucentFBO.status!==r||e._adjustTranslucentFBO.status!==r)&&(m(e),e._translucentMRTSupport=!1)),!e._translucentMRTSupport){e._translucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._alphaFBO=t.createFramebuffer({colorTextures:[e._revealageTexture],depthTexture:e._depthTexture,destroyAttachments:!1}),e._adjustTranslucentFBO=t.createFramebuffer({colorTextures:[e._accumulationTexture],destroyAttachments:!1}),e._adjustAlphaFBO=t.createFramebuffer({colorTextures:[e._revealageTexture],destroyAttachments:!1});var n=e._translucentFBO.status===r,o=e._alphaFBO.status===r,a=e._adjustTranslucentFBO.status===r,s=e._adjustAlphaFBO.status===r;n&&o&&a&&s||(p(e),e._translucentMultipassSupport=!1,i=!1)}return i&&(e._opaqueFBO=t.createFramebuffer({colorTextures:[e._opaqueTexture],depthTexture:e._depthTexture,destroyAttachments:!1})),i}function g(e,r,i,n){var o=i[n.id];if(!t(o)){var a=s.clone(n);a.depthMask=!1,a.blending=r,o=e.createRenderState(a),i[n.id]=o}return o}function _(e,t,r){return g(t,A,e._translucentRenderStateCache,r)}function y(e,t,r){return g(t,M,e._translucentRenderStateCache,r)}function C(e,t,r){return g(t,D,e._alphaRenderStateCache,r)}function w(e,r,i,n){var o=r.id,a=i[o];if(!t(a)){var s=r._attributeLocations,l=r.vertexShaderSource,u=r.fragmentShaderSource,c=u.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_translucent_main()");c=c.replace(/gl_FragColor/g,"czm_gl_FragColor"),c=c.replace(/\bdiscard\b/g,"czm_discard = true"),c=c.replace(/czm_phong/g,"czm_translucentPhong");var h=(-1!==n.indexOf("gl_FragData")?"#extension GL_EXT_draw_buffers : enable \n":"")+"vec4 czm_gl_FragColor;\n"+"bool czm_discard = false;\n"+c+"\n\n"+"void main()\n"+"{\n"+"    czm_translucent_main();\n"+"    if (czm_discard)\n"+"    {\n"+"        discard;\n"+"    }\n"+n+"}\n";a=e.createShaderProgram(l,h,s),i[o]=a}return a}function S(e,t,r){return w(t,r,e._translucentShaderCache,I)}function E(e,t,r){return w(t,r,e._translucentShaderCache,R)}function b(e,t,r){return w(t,r,e._alphaShaderCache,O)}function T(e,r,i,n,o){var a,s,l,u,c=r.context,h=n.framebuffer,d=o.length;n.framebuffer=e._adjustTranslucentFBO,e._adjustTranslucentCommand.execute(c,n),n.framebuffer=e._adjustAlphaFBO,e._adjustAlphaCommand.execute(c,n);var m=e._opaqueFBO;for(n.framebuffer=e._translucentFBO,u=0;d>u;++u)a=o[u],t(a.oit)&&a.shaderProgram.id===a.oit.shaderProgramId||(a.oit={colorRenderState:y(e,c,a.renderState),alphaRenderState:C(e,c,a.renderState),colorShaderProgram:E(e,c,a.shaderProgram),alphaShaderProgram:b(e,c,a.shaderProgram),shaderProgramId:a.shaderProgram.id}),s=a.oit.colorRenderState,l=a.oit.colorShaderProgram,i(a,r,c,n,s,l,m);for(n.framebuffer=e._alphaFBO,u=0;d>u;++u)a=o[u],s=a.oit.alphaRenderState,l=a.oit.alphaShaderProgram,i(a,r,c,n,s,l,m);n.framebuffer=h}function x(e,r,i,n,o){var a=r.context,s=n.framebuffer,l=o.length;n.framebuffer=e._adjustTranslucentFBO,e._adjustTranslucentCommand.execute(a,n);var u=e._opaqueFBO;n.framebuffer=e._translucentFBO;for(var c=0;l>c;++c){var h=o[c];t(h.oit)&&h.shaderProgram.id===h.oit.shaderProgramId||(h.oit={translucentRenderState:_(e,a,h.renderState),translucentShaderProgram:S(e,a,h.shaderProgram),shaderProgramId:h.shaderProgram.id});var d=h.oit.translucentRenderState,m=h.oit.translucentShaderProgram;i(h,r,a,n,d,m,u)}n.framebuffer=s}var P=function(t){var r=t.floatingPointTexture&&t.depthTexture;this._translucentMRTSupport=t.drawBuffers&&r,this._translucentMultipassSupport=!this._translucentMRTSupport&&r,this._opaqueTexture=void 0,this._accumulationTexture=void 0,this._depthTexture=void 0,this._opaqueFBO=void 0,this._translucentFBO=void 0,this._alphaFBO=void 0,this._adjustTranslucentFBO=void 0,this._adjustAlphaFBO=void 0,this._opaqueClearCommand=new n({color:new e(0,0,0,0),owner:this}),this._translucentMRTClearCommand=new n({color:new e(0,0,0,1),owner:this}),this._translucentMultipassClearCommand=new n({color:new e(0,0,0,0),owner:this}),this._alphaClearCommand=new n({color:new e(1,1,1,1),owner:this}),this._translucentRenderStateCache={},this._alphaRenderStateCache={},this._translucentShaderCache={},this._alphaShaderCache={},this._compositeCommand=void 0,this._adjustTranslucentCommand=void 0,this._adjustAlphaCommand=void 0};P.prototype.update=function(e){if(this.isSupported()){var r=e.drawingBufferWidth,i=e.drawingBufferHeight,n=this._opaqueTexture,a=!t(n)||n.width!==r||n.height!==i;if(a&&f(this,e,r,i),t(this._opaqueFBO)&&!a||v(this,e)){var s,c,h=this;t(this._compositeCommand)||(s=o({defines:[this._translucentMRTSupport?"MRT":""],sources:[u]}),c={u_opaque:function(){return h._opaqueTexture},u_accumulation:function(){return h._accumulationTexture},u_revealage:function(){return h._revealageTexture}},this._compositeCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})),t(this._adjustTranslucentCommand)||(this._translucentMRTSupport?(s=o({defines:["MRT"],sources:[l]}),c={u_bgColor:function(){return h._translucentMRTClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustTranslucentCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})):this._translucentMultipassSupport&&(s=o({sources:[l]}),c={u_bgColor:function(){return h._translucentMultipassClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustTranslucentCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this}),c={u_bgColor:function(){return h._alphaClearCommand.color},u_depthTexture:function(){return h._depthTexture}},this._adjustAlphaCommand=e.createViewportQuadCommand(s,{renderState:e.createRenderState(),uniformMap:c,owner:this})))}}};var A={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ONE,functionDestinationRgb:h.ONE,functionSourceAlpha:h.ZERO,functionDestinationAlpha:h.ONE_MINUS_SOURCE_ALPHA},M={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ONE,functionDestinationRgb:h.ONE,functionSourceAlpha:h.ONE,functionDestinationAlpha:h.ONE},D={enabled:!0,color:new e(0,0,0,0),equationRgb:c.ADD,equationAlpha:c.ADD,functionSourceRgb:h.ZERO,functionDestinationRgb:h.ONE_MINUS_SOURCE_ALPHA,functionSourceAlpha:h.ZERO,functionDestinationAlpha:h.ONE_MINUS_SOURCE_ALPHA},I="    vec3 Ci = czm_gl_FragColor.rgb * czm_gl_FragColor.a;\n    float ai = czm_gl_FragColor.a;\n    float wzi = czm_alphaWeight(ai);\n    gl_FragData[0] = vec4(Ci * wzi, ai);\n    gl_FragData[1] = vec4(ai * wzi);\n",R="    vec3 Ci = czm_gl_FragColor.rgb * czm_gl_FragColor.a;\n    float ai = czm_gl_FragColor.a;\n    float wzi = czm_alphaWeight(ai);\n    gl_FragColor = vec4(Ci, ai) * wzi;\n",O="    float ai = czm_gl_FragColor.a;\n    gl_FragColor = vec4(ai);\n";return P.prototype.executeCommands=function(e,t,r,i){return this._translucentMRTSupport?(x(this,e,t,r,i),void 0):(T(this,e,t,r,i),void 0)},P.prototype.execute=function(e,t){this._compositeCommand.execute(e,t)},P.prototype.clear=function(t,r,i){var n=r.framebuffer;r.framebuffer=this._opaqueFBO,e.clone(i,this._opaqueClearCommand.color),this._opaqueClearCommand.execute(t,r),r.framebuffer=this._translucentFBO;var o=this._translucentMRTSupport?this._translucentMRTClearCommand:this._translucentMultipassClearCommand;o.execute(t,r),this._translucentMultipassSupport&&(r.framebuffer=this._alphaFBO,this._alphaClearCommand.execute(t,r)),r.framebuffer=n},P.prototype.getColorFramebuffer=function(){return this._opaqueFBO},P.prototype.isSupported=function(){return this._translucentMRTSupport||this._translucentMultipassSupport},P.prototype.isDestroyed=function(){return!1},P.prototype.destroy=function(){p(this),t(this._compositeCommand)&&(this._compositeCommand.shaderProgram=this._compositeCommand.shaderProgram&&this._compositeCommand.shaderProgram.destroy()),t(this._adjustTranslucentCommand)&&(this._adjustTranslucentCommand.shaderProgram=this._adjustTranslucentCommand.shaderProgram&&this._adjustTranslucentCommand.shaderProgram.destroy()),t(this._adjustAlphaCommand)&&(this._adjustAlphaCommand.shaderProgram=this._adjustAlphaCommand.shaderProgram&&this._adjustAlphaCommand.shaderProgram.destroy());var e,i=this._translucentShaderCache;for(e in i)i.hasOwnProperty(e)&&t(i[e])&&i[e].destroy();this._translucentShaderCache={},i=this._alphaShaderCache;for(e in i)i.hasOwnProperty(e)&&t(i[e])&&i[e].destroy();return this._alphaShaderCache={},r(this)},P}),r("Scene/OpenStreetMapImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Rectangle","../Core/WebMercatorTilingScheme","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,i,n){var o=e._url+n+"/"+t+"/"+i+"."+e._fileExtension,a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var c=/\/$/,h=new e("MapQuest, Open Street Map and contributors, CC-BY-SA"),d=function(r){r=t(r,{});var i=t(r.url,"//a.tile.openstreetmap.org/");c.test(i)||(i+="/"),this._url=i,this._fileExtension=t(r.fileExtension,"png"),this._proxy=r.proxy,this._tileDiscardPolicy=r.tileDiscardPolicy,this._tilingScheme=new s,this._tileWidth=256,this._tileHeight=256,this._minimumLevel=t(r.minimumLevel,0),this._maximumLevel=t(r.maximumLevel,18),this._rectangle=t(r.rectangle,this._tilingScheme.rectangle);var l=this._tilingScheme.positionToTileXY(a.southwest(this._rectangle),this._minimumLevel),u=this._tilingScheme.positionToTileXY(a.northeast(this._rectangle),this._minimumLevel),d=(Math.abs(u.x-l.x)+1)*(Math.abs(u.y-l.y)+1);if(d>4)throw new n("The imagery provider's rectangle and minimumLevel indicate that there are "+d+" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.");this._errorEvent=new o,this._ready=!0;var m=t(r.credit,h);"string"==typeof m&&(m=new e(m)),this._credit=m};return i(d.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),d.prototype.getTileCredits=function(){return void 0},d.prototype.requestImage=function(e,t,r){var i=u(this,e,t,r);return l.loadImage(this,i)},d.prototype.pickFeatures=function(){return void 0},d}),r("Scene/OrthographicFrustum",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Matrix4","./CullingVolume"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){(e.top!==e._top||e.bottom!==e._bottom||e.left!==e._left||e.right!==e._right||e.near!==e._near||e.far!==e._far)&&(e._left=e.left,e._right=e.right,e._top=e.top,e._bottom=e.bottom,e._near=e.near,e._far=e.far,e._orthographicMatrix=a.computeOrthographicOffCenter(e.left,e.right,e.bottom,e.top,e.near,e.far,e._orthographicMatrix))}var u=function(){this.left=void 0,this._left=void 0,this.right=void 0,this._right=void 0,this.top=void 0,this._top=void 0,this.bottom=void 0,this._bottom=void 0,this.near=1,this._near=this.near,this.far=5e8,this._far=this.far,this._cullingVolume=new s,this._orthographicMatrix=new a};n(u.prototype,{projectionMatrix:{get:function(){return l(this),this._orthographicMatrix}}});var c=new t,h=new t,d=new t,m=new t;return u.prototype.computeCullingVolume=function(e,n,o){var a=this._cullingVolume.planes,s=this.top,l=this.bottom,u=this.right,p=this.left,f=this.near,v=this.far,g=t.cross(n,o,c),_=h;t.multiplyByScalar(n,f,_),t.add(e,_,_);var y=d;t.multiplyByScalar(g,p,y),t.add(_,y,y);var C=a[0];return i(C)||(C=a[0]=new r),C.x=g.x,C.y=g.y,C.z=g.z,C.w=-t.dot(g,y),t.multiplyByScalar(g,u,y),t.add(_,y,y),C=a[1],i(C)||(C=a[1]=new r),C.x=-g.x,C.y=-g.y,C.z=-g.z,C.w=-t.dot(t.negate(g,m),y),t.multiplyByScalar(o,l,y),t.add(_,y,y),C=a[2],i(C)||(C=a[2]=new r),C.x=o.x,C.y=o.y,C.z=o.z,C.w=-t.dot(o,y),t.multiplyByScalar(o,s,y),t.add(_,y,y),C=a[3],i(C)||(C=a[3]=new r),C.x=-o.x,C.y=-o.y,C.z=-o.z,C.w=-t.dot(t.negate(o,m),y),C=a[4],i(C)||(C=a[4]=new r),C.x=n.x,C.y=n.y,C.z=n.z,C.w=-t.dot(n,_),t.multiplyByScalar(n,v,y),t.add(e,y,y),C=a[5],i(C)||(C=a[5]=new r),C.x=-n.x,C.y=-n.y,C.z=-n.z,C.w=-t.dot(t.negate(n,m),y),this._cullingVolume},u.prototype.getPixelSize=function(t,r,n){l(this);var o=this.right-this.left,a=this.top-this.bottom,s=o/t.x,u=a/t.y;return i(n)?(n.x=s,n.y=u,n):new e(s,u)},u.prototype.clone=function(e){return i(e)||(e=new u),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e._left=void 0,e._right=void 0,e._top=void 0,e._bottom=void 0,e._near=void 0,e._far=void 0,e},u.prototype.equals=function(e){return i(e)&&this.right===e.right&&this.left===e.left&&this.top===e.top&&this.bottom===e.bottom&&this.near===e.near&&this.far===e.far},u}),r("Widgets/getElement",["../Core/DeveloperError"],function(){"use strict";var e=function(e){if("string"==typeof e){var t=document.getElementById(e);e=t}return e};return e}),r("Scene/PerformanceDisplay",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/getTimestamp","../Widgets/getElement"],function(e,t,r,i,n,o,a){"use strict";var s=e.fromCssColorString("#e52"),l=e.fromCssColorString("#de3"),u=e.fromCssColorString("rgba(40, 40, 40, 0.7)"),c=function(e){e=t(e,t.EMPTY_OBJECT);var i=a(e.container);if(!r(i))throw new n("container is required");this._container=i,this._fpsColor=t(e.fpsColor,s).toCssColorString(),this._frameTimeColor=t(e.frameTimeColor,l).toCssColorString(),this._backgroundColor=t(e.backgroundColor,u).toCssColorString(),this._font=t(e.font,"bold 12px Helvetica,Arial,sans-serif");var o=document.createElement("div"),c=document.createElement("div");this._fpsText=document.createTextNode(""),c.appendChild(this._fpsText),c.style.color=this._fpsColor;var h=document.createElement("div");this._msText=document.createTextNode(""),h.style.color=this._frameTimeColor,h.appendChild(this._msText),o.appendChild(c),o.appendChild(h),o.style["z-index"]=1,o.style["background-color"]=this._backgroundColor,o.style.font=this._font,o.style.padding="7px",o.style["border-radius"]="5px",o.style.border="1px solid #444",this._container.appendChild(o),this._lastFpsSampleTime=void 0,this._frameCount=0,this._time=void 0,this._fps=0,this._frameTime=0};return c.prototype.update=function(){if(!r(this._time))return this._lastFpsSampleTime=o(),this._time=o(),void 0;var e=this._time,t=o();this._time=t;var i=t-e;this._frameCount++;var n=this._fps,a=t-this._lastFpsSampleTime;a>1e3&&(n=0|1e3*this._frameCount/a,this._lastFpsSampleTime=t,this._frameCount=0),n!==this._fps&&(this._fpsText.nodeValue=n+" FPS",this._fps=n),i!==this._frameTime&&(this._msText.nodeValue=i.toFixed(2)+" MS",this._frameTime=i)},c.prototype.destroy=function(){return i(this)},c}),r("Scene/Polygon",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/GeometryInstance","../Core/Math","../Core/PolygonGeometry","./EllipsoidSurfaceAppearance","./Material","./Primitive"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(i){i=t(i,t.EMPTY_OBJECT),this.ellipsoid=t(i.ellipsoid,a.WGS84),this._ellipsoid=void 0,this.granularity=t(i.granularity,l.RADIANS_PER_DEGREE),this._granularity=void 0,this.height=t(i.height,0),this._height=void 0,this.textureRotationAngle=t(i.textureRotationAngle,0),this._textureRotationAngle=void 0,this.show=t(i.show,!0);var n=h.fromType(h.ColorType,{color:new e(1,1,0,.5)});this.material=t(i.material,n),this.id=i.id,this._id=void 0,this.asynchronous=t(i.asynchronous,!0),this.debugShowBoundingVolume=t(i.debugShowBoundingVolume,!1),this._positions=void 0,this._polygonHierarchy=void 0,this._createPrimitive=!1,this._primitive=void 0,r(i.positions)?this.positions=i.positions:r(i.polygonHierarchy)&&this.configureFromPolygonHierarchy(i.polygonHierarchy)};return i(m.prototype,{positions:{get:function(){return this._positions},set:function(e){this._positions=e,this._polygonHierarchy=void 0,this._createPrimitive=!0}}}),m.prototype.configureFromPolygonHierarchy=function(e){this._positions=void 0,this._polygonHierarchy=e,this._createPrimitive=!0},m.prototype.update=function(e,t,i){if(this.show&&(this._createPrimitive||r(this._primitive))){if(this._createPrimitive||this._ellipsoid!==this.ellipsoid||this._granularity!==this.granularity||this._height!==this.height||this._textureRotationAngle!==this.textureRotationAngle||this._id!==this.id){if(this._createPrimitive=!1,this._ellipsoid=this.ellipsoid,this._granularity=this.granularity,this._height=this.height,this._textureRotationAngle=this.textureRotationAngle,this._id=this.id,this._primitive=this._primitive&&this._primitive.destroy(),!r(this._positions)&&!r(this._polygonHierarchy))return;var n;n=r(this._positions)?new s({geometry:u.fromPositions({positions:this._positions,height:this.height,vertexFormat:c.VERTEX_FORMAT,stRotation:this.textureRotationAngle,ellipsoid:this.ellipsoid,granularity:this.granularity}),id:this.id,pickPrimitive:this}):new s({geometry:new u({polygonHierarchy:this._polygonHierarchy,height:this.height,vertexFormat:c.VERTEX_FORMAT,stRotation:this.textureRotationAngle,ellipsoid:this.ellipsoid,granularity:this.granularity}),id:this.id,pickPrimitive:this}),this._primitive=new d({geometryInstances:n,appearance:new c({aboveGround:this.height>0}),asynchronous:this.asynchronous})}var o=this._primitive;o.debugShowBoundingVolume=this.debugShowBoundingVolume,o.appearance.material=this.material,o.update(e,t,i)}},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),n(this)},m}),r("Scene/PrimitiveCollection",["../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError"],function(e,t,r,i,n){"use strict";function o(e,t){return e._primitives.indexOf(t)}var a=function(r){r=t(r,t.EMPTY_OBJECT),this._primitives=[],this._guid=e(),this.show=t(r.show,!0),this.destroyPrimitives=t(r.destroyPrimitives,!0)};return i(a.prototype,{length:{get:function(){return this._primitives.length}}}),a.prototype.add=function(e){var t=e._external=e._external||{},r=t._composites=t._composites||{};return r[this._guid]={collection:this},this._primitives.push(e),e},a.prototype.remove=function(e){if(this.contains(e)){var t=this._primitives.indexOf(e);if(-1!==t)return this._primitives.splice(t,1),delete e._external._composites[this._guid],this.destroyPrimitives&&e.destroy(),!0}return!1},a.prototype.removeAll=function(){if(this.destroyPrimitives)for(var e=this._primitives,t=e.length,r=0;t>r;++r)e[r].destroy();this._primitives=[]},a.prototype.contains=function(e){return!!(r(e)&&e._external&&e._external._composites&&e._external._composites[this._guid])},a.prototype.raise=function(e){if(r(e)){var t=o(this,e),i=this._primitives;if(t!==i.length-1){var n=i[t];i[t]=i[t+1],i[t+1]=n}}},a.prototype.raiseToTop=function(e){if(r(e)){var t=o(this,e),i=this._primitives;t!==i.length-1&&(i.splice(t,1),i.push(e))}},a.prototype.lower=function(e){if(r(e)){var t=o(this,e),i=this._primitives;if(0!==t){var n=i[t];i[t]=i[t-1],i[t-1]=n}}},a.prototype.lowerToBottom=function(e){if(r(e)){var t=o(this,e),i=this._primitives;0!==t&&(i.splice(t,1),i.unshift(e))}},a.prototype.get=function(e){return this._primitives[e]},a.prototype.update=function(e,t,r){if(this.show)for(var i=this._primitives,n=0;n<i.length;++n)i[n].update(e,t,r)},a.prototype.isDestroyed=function(){return!1},a.prototype.destroy=function(){return this.removeAll(),n(this)},a}),r("Scene/QuadtreeTileProvider",["../Core/defineProperties","../Core/DeveloperError"],function(e,t){"use strict";var r=function(){t.throwInstantiationError()};return r.computeDefaultLevelZeroMaximumGeometricError=function(e){return.25*2*e.ellipsoid.maximumRadius*Math.PI/(65*e.getNumberOfXTilesAtLevel(0))},e(r.prototype,{quadtree:{get:t.throwInstantiationError,set:t.throwInstantiationError},ready:{get:t.throwInstantiationError},tilingScheme:{get:t.throwInstantiationError},errorEvent:{get:t.throwInstantiationError}}),r.prototype.beginUpdate=t.throwInstantiationError,r.prototype.endUpdate=t.throwInstantiationError,r.prototype.getLevelMaximumGeometricError=t.throwInstantiationError,r.prototype.loadTile=t.throwInstantiationError,r.prototype.computeTileVisibility=t.throwInstantiationError,r.prototype.showTileThisFrame=t.throwInstantiationError,r.prototype.computeDistanceToTile=t.throwInstantiationError,r.prototype.isDestroyed=t.throwInstantiationError,r.prototype.destroy=t.throwInstantiationError,r}),r("Scene/RectanglePrimitive",["../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/GeometryInstance","../Core/Math","../Core/Rectangle","../Core/RectangleGeometry","./EllipsoidSurfaceAppearance","./Material","./Primitive"],function(e,t,r,i,n,o,a,s,l,u,c,h,d){"use strict";var m=function(r){r=t(r,t.EMPTY_OBJECT),this.ellipsoid=t(r.ellipsoid,o.WGS84),this._ellipsoid=void 0,this.rectangle=l.clone(r.rectangle),this._rectangle=void 0,this.granularity=t(r.granularity,s.RADIANS_PER_DEGREE),this._granularity=void 0,this.height=t(r.height,0),this._height=void 0,this.rotation=t(r.rotation,0),this._rotation=void 0,this.textureRotationAngle=t(r.textureRotationAngle,0),this._textureRotationAngle=void 0,this.show=t(r.show,!0);var i=h.fromType(h.ColorType,{color:new e(1,1,0,.5)});this.material=t(r.material,i),this.id=r.id,this._id=void 0,this.asynchronous=t(r.asynchronous,!0),this.debugShowBoundingVolume=t(r.debugShowBoundingVolume,!1),this._primitive=void 0};return m.prototype.update=function(e,t,i){if(this.show&&r(this.rectangle)){if(!l.equals(this._rectangle,this.rectangle)||this._ellipsoid!==this.ellipsoid||this._granularity!==this.granularity||this._height!==this.height||this._rotation!==this.rotation||this._textureRotationAngle!==this.textureRotationAngle||this._id!==this.id){this._rectangle=l.clone(this.rectangle,this._rectangle),this._ellipsoid=this.ellipsoid,this._granularity=this.granularity,this._height=this.height,this._rotation=this.rotation,this._textureRotationAngle=this.textureRotationAngle,this._id=this.id;var n=new a({geometry:new u({rectangle:this.rectangle,vertexFormat:c.VERTEX_FORMAT,ellipsoid:this.ellipsoid,granularity:this.granularity,height:this.height,rotation:this.rotation,stRotation:this.textureRotationAngle}),id:this.id,pickPrimitive:this});r(this._primitive)&&this._primitive.destroy(),this._primitive=new d({geometryInstances:n,appearance:new c({aboveGround:this.height>0}),asynchronous:this.asynchronous})}var o=this._primitive;o.appearance.material=this.material,o.debugShowBoundingVolume=this.debugShowBoundingVolume,o.update(e,t,i)}},m.prototype.isDestroyed=function(){return!1},m.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),i(this)},m}),r("Scene/SceneTransitioner",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/EasingFunction","../Core/Ellipsoid","../Core/Math","../Core/Matrix4","../Core/ScreenSpaceEventHandler","../Core/ScreenSpaceEventType","./Camera","./OrthographicFrustum","./PerspectiveFrustum","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t){if(e._scene.completeMorphOnUserInput){e._morphHandler=new u(e._scene.canvas);var r=function(){e._morphCancelled=!0,t(e)};e._completeMorph=r,e._morphHandler.setInputAction(r,c.LEFT_DOWN),e._morphHandler.setInputAction(r,c.MIDDLE_DOWN),e._morphHandler.setInputAction(r,c.RIGHT_DOWN),e._morphHandler.setInputAction(r,c.WHEEL)}}function v(e){for(var t=e._currentTweens,r=0;r<t.length;++r)t[r].cancelTween();e._currentTweens.length=0,e._morphHandler=e._morphHandler&&e._morphHandler.destroy()}function g(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=s.position,c=s.direction,h=s.up,d=e.clone(t._camera2D.position),m=e.clone(t._camera2D.direction),p=e.clone(t._camera2D.up),f=function(t){s.position=y(u,d,t.time),s.direction=y(c,m,t.time),s.up=y(h,p,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},v=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:f});
t._currentTweens.push(v),x(t,a,0,1,r,n)}function _(e,t,r,i){t*=.5;var n=e._scene.camera;n.setTransform(l.IDENTITY),E(e,t,r,function(){n.frustum=e._cameraCV.frustum.clone(),g(e,t,r,i)})}function y(t,r,i){return e.lerp(t,r,i,new e)}function C(t,r,i){var n=t._scene,a=n.camera,l=a.position,u=a.frustum.fov,c=.5*s.RADIANS_PER_DEGREE,h=e.magnitude(l)*Math.tan(.5*u);a.frustum.far=h/Math.tan(.5*c)+1e7;var d=function(t){a.frustum.fov=s.lerp(u,c,t.time);var r=h/Math.tan(.5*a.frustum.fov),i=new e;a.position=e.multiplyByScalar(e.normalize(a.position,i),r,i)},m=n.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:d,complete:function(){a.frustum=t._camera2D.frustum.clone(),i(t)}});t._currentTweens.push(m)}function w(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=i.maximumRadius,c=e.clone(s.position),h=e.clone(s.direction),d=e.clone(s.up),m=Math.tan(.5*t._cameraCV.frustum.fovy),p=t._cameraCV.frustum.aspectRatio*m,f=u*Math.PI/p,v=new e;v=e.multiplyByScalar(e.normalize(t._camera2D.position,v),f,v);var g=e.clone(t._camera2D.direction),_=e.clone(t._camera2D.up),w=function(t){s.position=y(c,v,t.time),s.direction=y(h,g,t.time),s.up=y(d,_,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)};r*=.5;var S=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:w,complete:function(){C(t,r,n)}});t._currentTweens.push(S)}function S(t,r,i,n){r*=.5;var o=i.maximumRadius,a=Math.tan(.5*t._camera3D.frustum.fovy),s=t._camera3D.frustum.aspectRatio*a,l=o*Math.PI/s,u={},c=new e;u.position2D=e.multiplyByScalar(e.normalize(t._camera2D.position2D,c),l,c),u.direction2D=e.clone(t._camera2D.direction2D),u.up2D=e.clone(t._camera2D.up2D);var h=function(){C(t,r,n)};T(t,r,u,h)}function E(t,r,i,n){var a=t._scene,l=a.camera,u=i.maximumRadius,c=Math.tan(.5*t._cameraCV.frustum.fovy),h=t._cameraCV.frustum.aspectRatio*c,d=u*Math.PI/h,m=new e;m=e.multiplyByScalar(e.normalize(t._camera2D.position,m),d,m);var p=l.frustum.top,f=l.frustum.bottom,v=l.frustum.right,g=l.frustum.left,_=t._camera2D.frustum,C=t._cameraCV.frustum,w=e.clone(l.position),S=function(e){l.position=y(w,m,e.time),l.frustum.top=s.lerp(p,_.top,e.time),l.frustum.bottom=s.lerp(f,_.bottom,e.time),l.frustum.right=s.lerp(v,_.right,e.time),l.frustum.left=s.lerp(g,_.left,e.time)},E=(v-g)/(2*u*Math.PI),b=1;E>b&&(E=0);var T=(b-E)*r;if(T<s.EPSILON6){if(e.equalsEpsilon(w,m,s.EPSILON6))return l.position=m,l.frustum=C.clone(),n(t),void 0;T=r,E=0,b=1}var x=a.tweens.add({easingFunction:o.QUARTIC_OUT,duration:T,startObject:{time:E},stopObject:{time:b},update:S,complete:function(){l.frustum=C.clone(),n(t)}});t._currentTweens.push(x)}function b(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY),r*=.5;var u=function(){var i=e.clone(s.position),l=e.clone(s.direction),u=e.clone(s.up),c=e.clone(t._cameraCV.position),h=e.clone(t._cameraCV.direction),d=e.clone(t._cameraCV.up),m=function(t){s.position=y(i,c,t.time),s.direction=y(l,h,t.time),s.up=y(u,d,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},p=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:m,complete:function(){n(t)}});t._currentTweens.push(p)};E(t,r,i,u)}function T(t,r,i,n){var a=t._scene,s=a.camera;s.setTransform(l.IDENTITY);var u=e.clone(s.position),c=e.clone(s.direction),h=e.clone(s.up),d=e.clone(i.position2D),m=e.clone(i.direction2D),p=e.clone(i.up2D),f=function(t){s.position=y(u,d,t.time),s.direction=y(c,m,t.time),s.up=y(h,p,t.time),s.right=e.cross(s.direction,s.up,s.right),e.normalize(s.right,s.right)},v=a.tweens.add({duration:r,easingFunction:o.QUARTIC_OUT,startObject:{time:0},stopObject:{time:1},update:f,complete:function(){s.position=d,s.direction=m,s.up=p,s.right=e.cross(m,p,s.right),e.normalize(s.right,s.right)}});t._currentTweens.push(v),x(t,a,1,0,r,n)}function x(e,t,i,n,a,s){var l={object:t,property:"morphTime",startValue:i,stopValue:n,duration:a,easingFunction:o.QUARTIC_OUT};r(s)&&(l.complete=function(){s(e)});var u=t.tweens.addProperty(l);e._currentTweens.push(u)}function P(e){var t=e._scene,r=t.drawingBufferHeight/t.drawingBufferWidth,i=e._camera2D.frustum;i.top=i.right*r,i.bottom=-i.top,r=1/r,i=e._cameraCV.frustum,i.aspectRatio=r,i=e._camera3D.frustum,i.aspectRatio=r;var n=t.camera;switch(t.mode){case p.SCENE3D:n.frustum=e._camera3D.frustum.clone();break;case p.COLUMBUS_VIEW:n.frustum=e._cameraCV.frustum.clone();break;case p.SCENE2D:n.frustum=e._camera2D.frustum.clone()}}function A(t){var i=t._scene;if(i.mode=p.SCENE3D,i.morphTime=p.getMorphTime(p.SCENE3D),v(t),P(t),t._previousMode!==p.MORPHING||t._morphCancelled){t._morphCancelled=!1;var n=i.camera;n.position=e.clone(t._camera3D.position),n.direction=e.clone(t._camera3D.direction),n.up=e.clone(t._camera3D.up),n.right=e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right)}var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.SCENE3D,o)}function M(t){var i=t._scene;i.mode=p.SCENE2D,i.morphTime=p.getMorphTime(p.SCENE2D),v(t),P(t);var n=i.camera;e.clone(t._camera2D.position,n.position),e.clone(t._camera2D.direction,n.direction),e.clone(t._camera2D.up,n.up),e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right);var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.SCENE2D,o)}function D(t){var i=t._scene;if(i.mode=p.COLUMBUS_VIEW,i.morphTime=p.getMorphTime(p.COLUMBUS_VIEW),v(t),P(t),t._previousModeMode!==p.MORPHING||t._morphCancelled){t._morphCancelled=!1;var n=i.camera;e.clone(t._cameraCV.position,n.position),e.clone(t._cameraCV.direction,n.direction),e.clone(t._cameraCV.up,n.up),e.cross(n.direction,n.up,n.right),e.normalize(n.right,n.right)}var o=r(t._completeMorph);t._completeMorph=void 0,t._scene.morphComplete.raiseEvent(t,t._previousMode,p.COLUMBUS_VIEW,o)}var I=function(r,i){this._scene=r,i=t(i,a.WGS84);var n=i.maximumRadius,o=new e(0,0,2*n),u=new e;u=e.normalize(e.negate(o,u),u);var c=e.clone(e.UNIT_Y),p=l.multiplyByPoint(h.TRANSFORM_2D,o,new e),f=l.multiplyByPointAsVector(h.TRANSFORM_2D,u,new e),v=l.multiplyByPointAsVector(h.TRANSFORM_2D,c,new e),g=new d;g.right=n*Math.PI,g.left=-g.right,g.top=g.right*(r.drawingBufferHeight/r.drawingBufferWidth),g.bottom=-g.top,this._camera2D={position:o,direction:u,up:c,position2D:p,direction2D:f,up2D:v,frustum:g},o=new e(0,-1,1),o=e.multiplyByScalar(e.normalize(o,o),5*n,o),u=new e,u=e.normalize(e.subtract(e.ZERO,o,u),u);var _=new e;_=e.normalize(e.cross(u,e.UNIT_Z,_),_),c=new e,c=e.normalize(e.cross(_,u,c),c),p=l.multiplyByPoint(h.TRANSFORM_2D,o,new e),f=l.multiplyByPointAsVector(h.TRANSFORM_2D,u,new e);var y=l.multiplyByPointAsVector(h.TRANSFORM_2D,_,new e);v=new e,v=e.normalize(e.cross(y,f,v),v),g=new m,g.aspectRatio=r.drawingBufferWidth/r.drawingBufferHeight,g.fov=s.toRadians(60),this._cameraCV={position:o,direction:u,up:c,position2D:p,direction2D:f,up2D:v,frustum:g},o=new e,o=e.multiplyByScalar(e.normalize(new e(0,-2,1),o),2*n,o),u=new e,u=e.normalize(e.subtract(e.ZERO,o,u),u),_=new e,_=e.normalize(e.cross(u,e.UNIT_Z,_),_),c=new e,c=e.normalize(e.cross(_,u,c),c),this._camera3D={position:o,direction:u,up:c,frustum:g},this._currentTweens=[],this._morphHandler=void 0,this._morphCancelled=!1,this._completeMorph=void 0};return I.prototype.completeMorph=function(){r(this._completeMorph)&&this._completeMorph()},I.prototype.morphTo2D=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.SCENE2D&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.SCENE2D,!0),P(this),i.mode=p.MORPHING,f(this,M),this._previousMode===p.COLUMBUS_VIEW?w(this,e,t,M):S(this,e,t,M),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.morphToColumbusView=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.COLUMBUS_VIEW&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.COLUMBUS_VIEW,!0),P(this),i.mode=p.MORPHING,f(this,D),this._previousMode===p.SCENE2D?b(this,e,t,D):T(this,e,this._cameraCV,D),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.morphTo3D=function(e,t){r(this._completeMorph)&&this._completeMorph();var i=this._scene;this._previousMode=i.mode,this._previousMode!==p.SCENE3D&&this._previousMode!==p.MORPHING&&(this._scene.morphStart.raiseEvent(this,this._previousMode,p.SCENE3D,!0),P(this),i.mode=p.MORPHING,f(this,A),this._previousMode===p.SCENE2D?_(this,e,t,A):g(this,e,t,A),0===e&&r(this._completeMorph)&&this._completeMorph())},I.prototype.isDestroyed=function(){return!1},I.prototype.destroy=function(){return v(this),i(this)},I}),r("Scene/TweenCollection",["../Core/clone","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/EasingFunction","../Core/getTimestamp","../Core/TimeConstants","../ThirdParty/Tween"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t,r,i,n,o,a,s,l,u,c){this._tweens=t,this._tweenjs=r,this._startObject=e(i),this._stopObject=e(n),this._duration=o,this._delay=a,this._easingFunction=s,this._update=l,this._complete=u,this.cancel=c,this.needsStart=!0};i(u.prototype,{startObject:{get:function(){return this._startObject}},stopObject:{get:function(){return this._stopObject}},duration:{get:function(){return this._duration}},delay:{get:function(){return this._delay}},easingFunction:{get:function(){return this._easingFunction}},update:{get:function(){return this._update}},complete:{get:function(){return this._complete}},tweenjs:{get:function(){return this._tweenjs}}}),u.prototype.cancelTween=function(){this._tweens.remove(this)};var c=function(){this._tweens=[]};return i(c.prototype,{length:{get:function(){return this._tweens.length}}}),c.prototype.add=function(i){if(i=t(i,t.EMPTY_OBJECT),0===i.duration)return r(i.complete)&&i.complete(),new u(this);var n=i.duration/s.SECONDS_PER_MILLISECOND,a=t(i.delay,0),c=a/s.SECONDS_PER_MILLISECOND,h=t(i.easingFunction,o.LINEAR_NONE),d=i.startObject,m=new l.Tween(d);m.to(e(i.stopObject),n),m.delay(c),m.easing(h),r(i.update)&&m.onUpdate(function(){i.update(d)}),m.onComplete(t(i.complete,null)),m.repeat(t(i._repeat,0));var p=new u(this,m,i.startObject,i.stopObject,i.duration,a,h,i.update,i.complete,i.cancel);return this._tweens.push(p),p},c.prototype.addProperty=function(e){function r(e){i[n]=e.value}e=t(e,t.EMPTY_OBJECT);var i=e.object,n=e.property,o=e.startValue,a=e.stopValue;return this.add({startObject:{value:o},stopObject:{value:a},duration:t(e.duration,3),delay:e.delay,easingFunction:e.easingFunction,update:r,complete:e.complete,cancel:e.cancel,_repeat:e._repeat})},c.prototype.addAlpha=function(e){function i(e){for(var t=o.length,r=0;t>r;++r)n.uniforms[o[r]].alpha=e.alpha}e=t(e,t.EMPTY_OBJECT);var n=e.material,o=[];for(var a in n.uniforms)n.uniforms.hasOwnProperty(a)&&r(n.uniforms[a])&&r(n.uniforms[a].alpha)&&o.push(a);return this.add({startObject:{alpha:t(e.startValue,0)},stopObject:{alpha:t(e.stopValue,1)},duration:t(e.duration,3),delay:e.delay,easingFunction:e.easingFunction,update:i,complete:e.complete,cancel:e.cancel})},c.prototype.addOffsetIncrement=function(e){e=t(e,t.EMPTY_OBJECT);var r=e.material,i=r.uniforms;return this.addProperty({object:i,property:"offset",startValue:i.offset,stopValue:i.offset+1,duration:e.duration,delay:e.delay,easingFunction:e.easingFunction,update:e.update,cancel:e.cancel,_repeat:1/0})},c.prototype.remove=function(e){if(!r(e))return!1;var t=this._tweens.indexOf(e);return-1!==t?(e.tweenjs.stop(),r(e.cancel)&&e.cancel(),this._tweens.splice(t,1),!0):!1},c.prototype.removeAll=function(){for(var e=this._tweens,t=0;t<e.length;++t){var i=e[t];i.tweenjs.stop(),r(i.cancel)&&i.cancel()}e.length=0},c.prototype.contains=function(e){return r(e)&&-1!==this._tweens.indexOf(e)},c.prototype.get=function(e){return this._tweens[e]},c.prototype.update=function(e){var t=this._tweens,i=0;for(e=r(e)?e/s.SECONDS_PER_MILLISECOND:a();i<t.length;){var n=t[i],o=n.tweenjs;n.needsStart?(n.needsStart=!1,o.start(e)):o.update(e)?i++:(o.stop(),t.splice(i,1))}},c}),r("Scene/ScreenSpaceCameraController",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/IntersectionTests","../Core/isArray","../Core/KeyboardEventModifier","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/Plane","../Core/Quaternion","../Core/Ray","../Core/Transforms","./CameraEventAggregator","./CameraEventType","./SceneMode","./TweenCollection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(e,t){if(0>e)return 0;var r=25*(1-t);return Math.exp(-r*e)}function b(t){return e.equalsEpsilon(t.startPosition,t.endPosition,d.EPSILON14)}function T(t,r,i,n,a,s,l){var u=s[l];o(u)||(u=s[l]={startPosition:new e,endPosition:new e,motion:new e,active:!1});var c=t.getButtonPressTime(r,i),h=t.getButtonReleaseTime(r,i),d=c&&h&&(h.getTime()-c.getTime())/1e3,m=new Date,p=h&&(m.getTime()-h.getTime())/1e3;if(c&&h&&Q>d){var f=E(p,n);if(u.active)u.startPosition=e.clone(u.endPosition,u.startPosition),u.endPosition=e.multiplyByScalar(u.motion,f,u.endPosition),u.endPosition=e.add(u.startPosition,u.endPosition,u.endPosition),u.motion=e.clone(e.ZERO,u.motion);else{var v=t.getLastMovement(r,i);if(!o(v)||b(v))return;u.motion.x=.5*(v.endPosition.x-v.startPosition.x),u.motion.y=.5*(v.endPosition.y-v.startPosition.y),u.startPosition=e.clone(v.startPosition,u.startPosition),u.endPosition=e.multiplyByScalar(u.motion,f,u.endPosition),u.endPosition=e.add(u.startPosition,u.endPosition,u.endPosition),u.active=!0}if(isNaN(u.endPosition.x)||isNaN(u.endPosition.y)||b(u))return u.active=!1,void 0;if(!t.isButtonDown(r,i)){var g=t.getStartMousePosition(r,i);a(s,g,u)}}else u.active=!1}function x(e,t,r,i,n,a){if(o(r)){var s=e._aggregator;c(r)||(J[0]=r,r=J);for(var l=r.length,u=0;l>u;++u){var h=r[u],d=o(h.eventType)?h.eventType:h,m=h.modifier,p=s.isMoving(d,m)&&s.getMovement(d,m),f=s.getStartMousePosition(d,m);e.enableInputs&&t&&(p?i(e,f,p):1>n&&T(s,d,m,n,i,e,a))}}}function P(e,t,r,i,n,a){var s=1;o(a)&&(s=d.clamp(Math.abs(a),.25,1));var l=e.minimumZoomDistance*s,u=e.maximumZoomDistance,c=n-l,h=i*c;h=d.clamp(h,e._minimumZoomRate,e._maximumZoomRate);var m=r.endPosition.y-r.startPosition.y,p=m/e._scene.canvas.clientHeight;p=Math.min(p,e.maximumMovementRatio);var f=h*p;f>0&&Math.abs(n-l)<1||0>f&&Math.abs(n-u)<1||(l>n-f?f=n-l-1:n-f>u&&(f=n-u),e._scene.camera.zoomIn(f))}function A(e,r,i){var n=e._scene,o=n.camera,a=o.getPickRay(i.startPosition,K).origin,s=o.getPickRay(i.endPosition,$).origin,l=o.position,u=t.subtract(a,l,et),c=t.subtract(s,l,tt),h=t.subtract(u,c,et),d=t.magnitude(h);d>0&&(t.normalize(h,h),o.move(h,d))}function M(e,t,r){o(r.distance)&&(r=r.distance);var i=e._scene,n=i.camera;P(e,t,r,e._zoomFactor,n.getMagnitude())}function D(t,r,i){if(o(i.angleAndHeight))return I(t,r,i.angleAndHeight),void 0;var n=t._scene,a=n.camera,s=n.canvas,l=s.clientWidth,u=s.clientHeight,c=rt;c.x=2/l*i.startPosition.x-1,c.y=2/u*(u-i.startPosition.y)-1,c=e.normalize(c,c);var h=it;h.x=2/l*i.endPosition.x-1,h.y=2/u*(u-i.endPosition.y)-1,h=e.normalize(h,h);var m=d.acosClamped(c.x);c.y<0&&(m=d.TWO_PI-m);var p=d.acosClamped(h.x);h.y<0&&(p=d.TWO_PI-p);var f=p-m;a.twistRight(f)}function I(e,t,r){var i=e._rotateFactor*e._rotateRateRangeAdjustment;i>e._maximumRotateRate&&(i=e._maximumRotateRate),i<e._minimumRotateRate&&(i=e._minimumRotateRate);var n=e._scene,o=n.camera,a=n.canvas,s=(r.endPosition.x-r.startPosition.x)/a.clientWidth;s=Math.min(s,e.maximumMovementRatio);var l=4*i*s*Math.PI;o.twistRight(l)}function R(e){var t=e._tweens;e._aggregator.anyButtonDown&&t.removeAll();var r=e._scene,i=r.camera;if(t.contains(e._tween)||(p.equals(p.IDENTITY,i.transform)?(x(e,e.enableTranslate,e.translateEventTypes,A,e.inertiaTranslate,"_lastInertiaTranslateMovement"),x(e,e.enableZoom,e.zoomEventTypes,M,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableRotate,e.tiltEventTypes,D,e.inertiaSpin,"_lastInertiaTiltMovement")):(x(e,e.enableRotate,e.translateEventTypes,D,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,M,e.inertiaZoom,"_lastInertiaZoomMovement"))),!(e._aggregator.anyButtonDown||o(e._lastInertiaZoomMovement)&&e._lastInertiaZoomMovement.active||o(e._lastInertiaTranslateMovement)&&e._lastInertiaTranslateMovement.active||t.contains(e._tween))){var n=i.createCorrectPositionTween(e.bounceAnimationTime);o(n)&&(e._tween=t.add(n))}t.update()}function O(r,i,n){if(t.equals(i,r._translateMousePosition)||(r._looking=!1),r._looking)return j(r,i,n),void 0;var a=r._scene,s=a.camera,l=e.clone(n.startPosition,ht),c=e.clone(n.endPosition,dt),h=s.getPickRay(l,nt),m=t.clone(t.ZERO,ut),p=t.UNIT_X;if(o(r._globe)&&s.position.z<r.minimumPickingTerrainHeight){var v=r._globe.pick(h,a,at);o(v)&&(m.x=v.x)}if(m.x>s.position.z){var g=l.y;l.y=c.y,c.y=g}var _=f.fromPointNormal(m,p,ct);h=s.getPickRay(l,nt);var y=u.rayPlane(h,_,at),C=s.getPickRay(c,ot),w=u.rayPlane(C,_,st);if(!o(y)||!o(w))return r._looking=!0,j(r,i,n),e.clone(i,r._translateMousePosition),void 0;var S=t.subtract(y,w,lt),E=S.x;S.x=S.y,S.y=S.z,S.z=E;var b=t.magnitude(S);b>d.EPSILON6&&(t.normalize(S,S),s.move(S,b))}function L(t,r,i){if(o(i.angleAndHeight)&&(i=i.angleAndHeight),e.equals(r,t._tiltCenterMousePosition)||(t._tiltCVOffMap=!1,t._looking=!1),t._looking)return j(t,r,i),void 0;var n=t._scene,a=n.camera,s=t._maxCoord,l=Math.abs(a.position.x)-s.x<0&&Math.abs(a.position.y)-s.y<0;t._tiltCVOffMap||!l||a.position.z>t.minimumPickingTerrainHeight?(t._tiltCVOffMap=!0,N(t,r,i)):B(t,r,i)}function N(r,i,n){var a=r._scene,s=a.camera,u=a.canvas,c=mt;c.x=u.clientWidth/2,c.y=u.clientHeight/2;var h,m=s.getPickRay(c,pt),f=t.UNIT_X,v=m.origin,g=m.direction,y=t.dot(f,g);if(Math.abs(y)>d.EPSILON6&&(h=-t.dot(f,v)/y),!o(h)||0>=h)return r._looking=!0,j(r,i,n),e.clone(i,r._tiltCenterMousePosition),void 0;var C=t.multiplyByScalar(g,h,ft);t.add(v,C,C);var w=a.mapProjection,S=w.ellipsoid;t.fromElements(C.y,C.z,C.x,C);var E=w.unproject(C,St);S.cartographicToCartesian(E,C);var b=_.eastNorthUpToFixedFrame(C,S,gt),T=r._globe,x=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var P=p.clone(s.transform,Et);s.setTransform(b),k(r,i,n,t.UNIT_Z),s.setTransform(P),r._globe=T,r._ellipsoid=x;var A=x.maximumRadius;r._rotateFactor=1/A,r._rotateRateRangeAdjustment=A}function B(r,i,n){var a,s,c=r._ellipsoid,h=r._scene,g=h.camera,y=t.UNIT_X;if(e.equals(i,r._tiltCenterMousePosition))a=t.clone(r._tiltCenter,ft);else{if(s=g.getPickRay(i,pt),o(r._globe)&&g.position.z<r.minimumPickingTerrainHeight&&(a=r._globe.pick(s,h,ft)),!o(a)){var C,w=s.origin,S=s.direction,E=t.dot(y,S);if(Math.abs(E)>d.EPSILON6&&(C=-t.dot(y,w)/E),!o(C)||0>=C)return r._looking=!0,j(r,i,n),e.clone(i,r._tiltCenterMousePosition),void 0;a=t.multiplyByScalar(S,C,ft),t.add(w,a,a)}e.clone(i,r._tiltCenterMousePosition),t.clone(a,r._tiltCenter)}var b=h.canvas,T=mt;T.x=b.clientWidth/2,T.y=r._tiltCenterMousePosition.y,s=g.getPickRay(T,pt);var x=t.clone(t.ZERO,yt);x.x=a.x;var P=f.fromPointNormal(x,y,Ct),A=u.rayPlane(s,P,vt),M=g._projection;c=M.ellipsoid,t.fromElements(a.y,a.z,a.x,a);var D=M.unproject(a,St);c.cartographicToCartesian(D,a);var I,R=_.eastNorthUpToFixedFrame(a,c,gt);o(A)?(t.fromElements(A.y,A.z,A.x,A),D=M.unproject(A,St),c.cartographicToCartesian(D,A),I=_.eastNorthUpToFixedFrame(A,c,_t)):I=R;var O=r._globe,L=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var N=t.UNIT_Z,B=p.clone(g.transform,Et);g.setTransform(R);var F=t.cross(t.UNIT_Z,t.normalize(g.position,wt),wt),z=t.dot(g.right,F);if(k(r,i,n,N,!1,!0),g.setTransform(I),0>z){n.startPosition.y>n.endPosition.y&&(N=void 0);var V=g.constrainedAxis;g.constrainedAxis=void 0,k(r,i,n,N,!0,!1),g.constrainedAxis=V}else k(r,i,n,N,!0,!1);if(o(g.constrainedAxis)){var U=t.cross(g.direction,g.constrainedAxis,Jt);t.equalsEpsilon(U,t.ZERO,d.EPSILON6)||(t.dot(U,g.right)<0&&t.negate(U,U),t.cross(U,g.direction,g.up),t.cross(g.direction,g.up,g.right),t.normalize(g.up,g.up),t.normalize(g.right,g.right))}g.setTransform(B),r._globe=O,r._ellipsoid=L;var W=L.maximumRadius;r._rotateFactor=1/W,r._rotateRateRangeAdjustment=W;var G=t.clone(g.positionWC,wt);if(X(r),!t.equals(g.positionWC,G)){g.setTransform(I),g.worldToCameraCoordinatesPoint(G,G);var H=t.magnitudeSquared(G);t.magnitudeSquared(g.position)>H&&(t.normalize(g.position,g.position),t.multiplyByScalar(g.position,Math.sqrt(H),g.position));var q=t.angleBetween(G,g.position),Y=t.cross(G,g.position,G);t.normalize(Y,Y);var Z=v.fromAxisAngle(Y,q,bt),Q=m.fromQuaternion(Z,Tt);m.multiplyByVector(Q,g.direction,g.direction),m.multiplyByVector(Q,g.up,g.up),t.cross(g.direction,g.up,g.right),t.cross(g.right,g.direction,g.up),g.setTransform(B)}}function F(e,r,i){o(i.distance)&&(i=i.distance);var n=e._scene,a=n.camera,s=n.canvas,l=xt;l.x=s.clientWidth/2,l.y=s.clientHeight/2;var u,c=a.getPickRay(l,Pt);o(e._globe)&&a.position.z<e.minimumPickingTerrainHeight&&(u=e._globe.pick(c,n,At));var h;if(o(u))h=t.distance(c.origin,u);else{var d=t.UNIT_X,m=c.origin,p=c.direction;h=-t.dot(d,m)/t.dot(d,p)}P(e,r,i,e._zoomFactor,h)}function z(e){var t=e._scene,r=t.camera;if(p.equals(p.IDENTITY,r.transform)){var i=e._tweens;if(e._aggregator.anyButtonDown&&i.removeAll(),x(e,e.enableTilt,e.tiltEventTypes,L,e.inertiaSpin,"_lastInertiaTiltMovement"),x(e,e.enableTranslate,e.translateEventTypes,O,e.inertiaTranslate,"_lastInertiaTranslateMovement"),x(e,e.enableZoom,e.zoomEventTypes,F,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableLook,e.lookEventTypes,j),!(e._aggregator.anyButtonDown||o(e._lastInertiaZoomMovement)&&e._lastInertiaZoomMovement.active||o(e._lastInertiaTranslateMovement)&&e._lastInertiaTranslateMovement.active||i.contains(e._tween))){var n=r.createCorrectPositionTween(e.bounceAnimationTime);o(n)&&(e._tween=i.add(n))}i.update()}else x(e,e.enableRotate,e.rotateEventTypes,k,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,W,e.inertiaZoom,"_lastInertiaZoomMovement")}function V(r,i,n){var a=r._scene,s=a.camera;if(!p.equals(s.transform,p.IDENTITY))return k(r,i,n),void 0;var u,c,h,d=r._ellipsoid.geodeticSurfaceNormal(s.position,Nt);if(e.equals(i,r._rotateMousePosition))return r._looking?j(r,i,n,d):r._rotating?k(r,i,n):(u=t.magnitude(r._rotateStartPosition),c=Ot,c.x=c.y=c.z=u,h=l.fromCartesian3(c,Lt),U(r,i,n,h)),void 0;r._looking=!1,r._rotating=!1;var m=r._ellipsoid.cartesianToCartographic(s.positionWC,It).height;if(o(r._globe)&&m<r.minimumPickingTerrainHeight){var f=s.getPickRay(n.startPosition,Dt),v=r._globe.pick(f,a,Rt);o(v)?(u=t.magnitude(v),c=Ot,c.x=c.y=c.z=u,h=l.fromCartesian3(c,Lt),U(r,i,n,h),t.clone(v,r._rotateStartPosition)):(r._looking=!0,j(r,i,n,d))}else o(s.pickEllipsoid(n.startPosition,r._ellipsoid,Mt))?(U(r,i,n,r._ellipsoid),t.clone(Mt,r._rotateStartPosition)):m>r.minimumTrackBallHeight?(r._rotating=!0,k(r,i,n)):(r._looking=!0,j(r,i,n,d));e.clone(i,r._rotateMousePosition)}function k(e,r,i,a,s,l){s=n(s,!1),l=n(l,!1);var u=e._scene,c=u.camera,h=u.canvas,d=c.constrainedAxis;o(a)&&(c.constrainedAxis=a);var m=t.magnitude(c.position),p=e._rotateFactor*(m-e._rotateRateRangeAdjustment);p>e._maximumRotateRate&&(p=e._maximumRotateRate),p<e._minimumRotateRate&&(p=e._minimumRotateRate);var f=(i.startPosition.x-i.endPosition.x)/h.clientWidth,v=(i.startPosition.y-i.endPosition.y)/h.clientHeight;f=Math.min(f,e.maximumMovementRatio),v=Math.min(v,e.maximumMovementRatio);var g=2*p*f*Math.PI,_=p*v*Math.PI;s||c.rotateRight(g),l||c.rotateUp(_),c.constrainedAxis=d}function U(r,i,n,a){var s=r._scene,u=s.camera,c=t.magnitude(u.position),h=e.clone(n.startPosition,Wt),m=e.clone(n.endPosition,Gt);if(c<a.maximumRadius){h.y=m.y,m.y=n.startPosition.y;var p=c+2*(a.maximumRadius-c),f=Ot;f.x=f.y=f.z=p,a=l.fromCartesian3(f,a)}var v=u.pickEllipsoid(h,a,Bt),g=u.pickEllipsoid(m,a,Ft);if(!o(v)||!o(g))return r._rotating=!0,k(r,i,n),void 0;if(v=u.worldToCameraCoordinates(v,v),g=u.worldToCameraCoordinates(g,g),o(u.constrainedAxis)){var _=u.constrainedAxis,y=t.mostOrthogonalAxis(_,zt);t.cross(y,_,y),t.normalize(y,y);var C=t.cross(_,y,Vt),w=t.magnitude(v),S=t.dot(_,v),E=Math.acos(S/w),b=t.multiplyByScalar(_,S,kt);t.subtract(v,b,b),t.normalize(b,b);var T=t.magnitude(g),x=t.dot(_,g),P=Math.acos(x/T),A=t.multiplyByScalar(_,x,Ut);t.subtract(g,A,A),t.normalize(A,A);var M=Math.acos(t.dot(b,y));t.dot(b,C)<0&&(M=d.TWO_PI-M);var D=Math.acos(t.dot(A,y));t.dot(A,C)<0&&(D=d.TWO_PI-D);var I,R=M-D;I=t.equalsEpsilon(_,u.position,d.EPSILON2)?u.right:t.cross(_,u.position,zt);var O,L=t.cross(_,I,zt),N=t.dot(L,t.subtract(v,_,Vt)),B=t.dot(L,t.subtract(g,_,Vt));O=N>0&&B>0?P-E:N>0&&0>=B?t.dot(u.position,_)>0?-E-P:E+P:E-P,u.rotateRight(R),u.rotateUp(O)}else{t.normalize(v,v),t.normalize(g,g);var F=t.dot(v,g),z=t.cross(v,g,zt);if(1>F&&!t.equalsEpsilon(z,t.ZERO,d.EPSILON14)){var V=Math.acos(F);u.rotate(z,V)}}}function W(e,r,i){o(i.distance)&&(i=i.distance);var n=e._ellipsoid,a=e._scene,s=a.camera,l=a.canvas,u=xt;u.x=l.clientWidth/2,u.y=l.clientHeight/2;var c,h=s.getPickRay(u,Pt),d=n.cartesianToCartographic(s.position).height;o(e._globe)&&d<e.minimumPickingTerrainHeight&&(c=e._globe.pick(h,a,At));var m;m=o(c)?t.distance(h.origin,c):d;var p=t.normalize(s.position,Ht);P(e,r,i,e._zoomFactor,m,t.dot(p,s.direction))}function G(t,r,i){var n=t._scene,a=n.camera;if(p.equals(a.transform,p.IDENTITY)){if(o(i.angleAndHeight)&&(i=i.angleAndHeight),e.equals(r,t._tiltCenterMousePosition)||(t._tiltOnEllipsoid=!1,t._looking=!1),t._looking){var s=t._ellipsoid.geodeticSurfaceNormal(a.position,rr);return j(t,r,i,s),void 0}var l=t._ellipsoid,u=l.cartesianToCartographic(a.position,tr);t._tiltOnEllipsoid||u.height>t.minimumCollisionTerrainHeight?(t._tiltOnEllipsoid=!0,H(t,r,i)):q(t,r,i)}}function H(r,i,n){var a=r._ellipsoid,s=r._scene,c=s.camera,h=.25*r.minimumZoomDistance,m=a.cartesianToCartographic(c.positionWC).height;if(!(m-h-1<d.EPSILON3&&n.endPosition.y-n.startPosition.y<0)){var f=s.canvas,v=qt;v.x=f.clientWidth/2,v.y=f.clientHeight/2;var y,C=c.getPickRay(v,jt),w=u.rayEllipsoid(C,a);if(o(w))y=g.getPoint(C,w.start,Yt);else{if(!(m>r.minimumTrackBallHeight)){r._looking=!0;var S=r._ellipsoid.geodeticSurfaceNormal(c.position,rr);return j(r,i,n,S),e.clone(i,r._tiltCenterMousePosition),void 0}var E=u.grazingAltitudeLocation(C,a);if(!o(E))return;var b=a.cartesianToCartographic(E,tr);b.height=0,y=a.cartographicToCartesian(b,Yt)}var T=_.eastNorthUpToFixedFrame(y,a,Zt),x=r._globe,P=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var A=p.clone(c.transform,Kt);c.setTransform(T),k(r,i,n,t.UNIT_Z),c.setTransform(A),r._globe=x,r._ellipsoid=P;var M=P.maximumRadius;r._rotateFactor=1/M,r._rotateRateRangeAdjustment=M}}function q(r,i,n){var a,s,c,h=r._ellipsoid,f=r._scene,y=f.camera;if(e.equals(i,r._tiltCenterMousePosition))a=t.clone(r._tiltCenter,Yt);else{if(s=y.getPickRay(i,jt),o(r._globe)&&(a=r._globe.pick(s,f,Yt)),!o(a)){if(c=u.rayEllipsoid(s,h),!o(c)){var C=h.cartesianToCartographic(y.position,tr);if(C.height<=r.minimumTrackBallHeight){r._looking=!0;var w=r._ellipsoid.geodeticSurfaceNormal(y.position,rr);j(r,i,n,w),e.clone(i,r._tiltCenterMousePosition)}return}a=g.getPoint(s,c.start,Yt)}e.clone(i,r._tiltCenterMousePosition),t.clone(a,r._tiltCenter)}var S=f.canvas,E=qt;E.x=S.clientWidth/2,E.y=r._tiltCenterMousePosition.y,s=y.getPickRay(E,jt);var b=t.magnitude(a),T=t.fromElements(b,b,b,Ot),x=l.fromCartesian3(T,Lt);if(c=u.rayEllipsoid(s,x),o(c)){var P=t.magnitude(s.origin)>b?c.start:c.stop,A=g.getPoint(s,P,Xt),M=_.eastNorthUpToFixedFrame(a,h,Zt),D=_.eastNorthUpToFixedFrame(A,x,Qt),I=r._globe,R=r._ellipsoid;r._globe=void 0,r._ellipsoid=l.UNIT_SPHERE,r._rotateFactor=1,r._rotateRateRangeAdjustment=1;var O=t.UNIT_Z,L=p.clone(y.transform,Kt);y.setTransform(M);var N=t.cross(A,y.positionWC,Jt),B=t.dot(y.rightWC,N);if(k(r,i,n,O,!1,!0),y.setTransform(D),0>B){n.startPosition.y>n.endPosition.y&&(O=void 0);var F=y.constrainedAxis;y.constrainedAxis=void 0,k(r,i,n,O,!0,!1),y.constrainedAxis=F}else k(r,i,n,O,!0,!1);if(o(y.constrainedAxis)){var z=t.cross(y.direction,y.constrainedAxis,Jt);t.equalsEpsilon(z,t.ZERO,d.EPSILON6)||(t.dot(z,y.right)<0&&t.negate(z,z),t.cross(z,y.direction,y.up),t.cross(y.direction,y.up,y.right),t.normalize(y.up,y.up),t.normalize(y.right,y.right))}y.setTransform(L),r._globe=I,r._ellipsoid=R;var V=R.maximumRadius;r._rotateFactor=1/V,r._rotateRateRangeAdjustment=V;var U=t.clone(y.positionWC,Jt);if(X(r),!t.equals(y.positionWC,U)){y.setTransform(D),y.worldToCameraCoordinatesPoint(U,U);var W=t.magnitudeSquared(U);t.magnitudeSquared(y.position)>W&&(t.normalize(y.position,y.position),t.multiplyByScalar(y.position,Math.sqrt(W),y.position));var G=t.angleBetween(U,y.position),H=t.cross(U,y.position,U);t.normalize(H,H);var q=v.fromAxisAngle(H,G,$t),Y=m.fromQuaternion(q,er);m.multiplyByVector(Y,y.direction,y.direction),m.multiplyByVector(Y,y.up,y.up),t.cross(y.direction,y.up,y.right),t.cross(y.right,y.direction,y.up),y.setTransform(L)}}}function j(e,r,i,a){var s=e._scene,l=s.camera,u=ir;u.x=i.startPosition.x,u.y=0;var c=nr;c.x=i.endPosition.x,c.y=0;var h=l.getPickRay(u,or).direction,m=l.getPickRay(c,ar).direction,p=0,f=t.dot(h,m);1>f&&(p=Math.acos(f)),p=i.startPosition.x>i.endPosition.x?-p:p;var v=e._horizontalRotationAxis;if(o(a)?l.look(a,-p):o(v)?l.look(v,-p):l.lookLeft(p),u.x=0,u.y=i.startPosition.y,c.x=0,c.y=i.endPosition.y,h=l.getPickRay(u,or).direction,m=l.getPickRay(c,ar).direction,p=0,f=t.dot(h,m),1>f&&(p=Math.acos(f)),p=i.startPosition.y>i.endPosition.y?-p:p,a=n(a,v),o(a)){var g=l.direction,_=t.negate(a,sr),y=t.equalsEpsilon(g,a,d.EPSILON2),C=t.equalsEpsilon(g,_,d.EPSILON2);if(y||C)(y&&0>p||C&&p>0)&&l.look(l.right,-p);else{f=t.dot(g,a);var w=d.acosClamped(f);p>0&&p>w&&(p=w-d.EPSILON4),f=t.dot(g,_),w=d.acosClamped(f),0>p&&-p>w&&(p=-w+d.EPSILON4);var S=t.cross(a,g,lr);l.look(S,p)}}else l.lookUp(p)}function Y(e){x(e,e.enableRotate,e.rotateEventTypes,V,e.inertiaSpin,"_lastInertiaSpinMovement"),x(e,e.enableZoom,e.zoomEventTypes,W,e.inertiaZoom,"_lastInertiaZoomMovement"),x(e,e.enableTilt,e.tiltEventTypes,G,e.inertiaSpin,"_lastInertiaTiltMovement"),x(e,e.enableLook,e.lookEventTypes,j)}function X(e){var t=e._scene,r=t.mode,i=e._globe;if(o(i)&&r!==w.SCENE2D&&r!==w.MORPHING){var n=t.camera,a=e._ellipsoid,s=t.mapProjection,l=ur;if(r===w.SCENE3D?a.cartesianToCartographic(n.position,l):s.unproject(n.position,l),!(l.height>e.minimumCollisionTerrainHeight)){var u=i.getHeight(l);o(u)&&(u+=e.minimumZoomDistance,l.height>=u||(l.height=u,r===w.SCENE3D?a.cartographicToCartesian(l,n.position):s.project(l,n.position)))}}}var Z=function(r){this.enableInputs=!0,this.enableTranslate=!0,this.enableZoom=!0,this.enableRotate=!0,this.enableTilt=!0,this.enableLook=!0,this.inertiaSpin=.9,this.inertiaTranslate=.9,this.inertiaZoom=.8,this.maximumMovementRatio=.1,this.bounceAnimationTime=3,this.minimumZoomDistance=20,this.maximumZoomDistance=Number.POSITIVE_INFINITY,this.translateEventTypes=C.LEFT_DRAG,this.zoomEventTypes=[C.RIGHT_DRAG,C.WHEEL,C.PINCH],this.rotateEventTypes=C.LEFT_DRAG,this.tiltEventTypes=[C.MIDDLE_DRAG,C.PINCH,{eventType:C.LEFT_DRAG,modifier:h.CTRL}],this.lookEventTypes={eventType:C.LEFT_DRAG,modifier:h.SHIFT},this.minimumPickingTerrainHeight=15e4,this.minimumCollisionTerrainHeight=1e4,this.minimumTrackBallHeight=75e5,this._scene=r,this._globe=void 0,this._ellipsoid=void 0,this._aggregator=new y(r.canvas),this._lastInertiaSpinMovement=void 0,this._lastInertiaZoomMovement=void 0,this._lastInertiaTranslateMovement=void 0,this._lastInertiaWheelZoomMovement=void 0,this._lastInertiaTiltMovement=void 0,this._tweens=new S,this._tween=void 0,this._horizontalRotationAxis=void 0,this._tiltCenterMousePosition=new e(-1,-1),this._tiltCenter=new t,this._rotateMousePosition=new e(-1,-1),this._rotateStartPosition=new t,this._tiltCVOffMap=!1,this._looking=!1,this._rotating=!1;
var n=r.mapProjection;this._maxCoord=n.project(new i(Math.PI,d.PI_OVER_TWO)),this._zoomFactor=5,this._rotateFactor=void 0,this._rotateRateRangeAdjustment=void 0,this._maximumRotateRate=1.77,this._minimumRotateRate=2e-4,this._translateFactor=1,this._minimumZoomRate=20,this._maximumZoomRate=5906376272e3},Q=.4,J=[],K=new g,$=new g,et=new t,tt=new t,rt=new e,it=new e,nt=new g,ot=new g,at=new t,st=new t,lt=new t,ut=new t,ct=new f(t.ZERO,0),ht=new e,dt=new e,mt=new e,pt=new g,ft=new t,vt=new t,gt=new p,_t=new p,yt=new t,Ct=new f(t.ZERO,0),wt=new t,St=new i,Et=new p,bt=new v,Tt=new m,xt=new e,Pt=new g,At=new t,Mt=new t,Dt=new g,It=new i,Rt=new t,Ot=new t,Lt=new l,Nt=new t,Bt=r.clone(r.UNIT_W),Ft=r.clone(r.UNIT_W),zt=new t,Vt=new t,kt=new t,Ut=new t,Wt=new e,Gt=new e,Ht=new t,qt=new e,jt=new g,Yt=new t,Xt=new t,Zt=new p,Qt=new p,Jt=new t,Kt=new p,$t=new v,er=new m,tr=new i,rr=new t,ir=new e,nr=new e,or=new g,ar=new g,sr=new t,lr=new t,ur=new i;return Z.prototype.update=function(){p.equals(this._scene.camera.transform,p.IDENTITY)?(this._globe=this._scene.globe,this._ellipsoid=o(this._globe)?this._globe.ellipsoid:this._scene.mapProjection.ellipsoid):(this._globe=void 0,this._ellipsoid=l.UNIT_SPHERE);var e=this._ellipsoid.maximumRadius;this._rotateFactor=1/e,this._rotateRateRangeAdjustment=e;var r=this._scene,i=r.mode;i===w.SCENE2D?R(this):i===w.COLUMBUS_VIEW?(this._horizontalRotationAxis=t.UNIT_Z,z(this)):i===w.SCENE3D&&(this._horizontalRotationAxis=void 0,Y(this)),X(this),this._aggregator.reset()},Z.prototype.isDestroyed=function(){return!1},Z.prototype.destroy=function(){return this._tweens.removeAll(),this._spinHandler=this._spinHandler&&this._spinHandler.destroy(),this._translateHandler=this._translateHandler&&this._translateHandler.destroy(),this._lookHandler=this._lookHandler&&this._lookHandler.destroy(),this._rotateHandler=this._rotateHandler&&this._rotateHandler.destroy(),this._zoomHandler=this._zoomHandler&&this._zoomHandler.destroy(),this._zoomWheelHandler=this._zoomWheelHandler&&this._zoomWheelHandler.destroy(),this._pinchHandler=this._pinchHandler&&this._pinchHandler.destroy(),a(this)},Z}),r("Shaders/PostProcessFilters/AdditiveBlend",[],function(){"use strict";return"uniform sampler2D u_texture0;\nuniform sampler2D u_texture1;\nuniform vec2 u_center;\nuniform float u_radius;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 color0 = texture2D(u_texture0, v_textureCoordinates);\nvec4 color1 = texture2D(u_texture1, v_textureCoordinates);\nfloat x = length(gl_FragCoord.xy - u_center) / u_radius;\nfloat t = smoothstep(0.5, 0.8, x);\ngl_FragColor = mix(color0 + color1, color0, t);\n}\n"}),r("Shaders/PostProcessFilters/BrightPass",[],function(){"use strict";return"uniform sampler2D u_texture;\nuniform float u_avgLuminance;\nuniform float u_threshold;\nuniform float u_offset;\nvarying vec2 v_textureCoordinates;\nfloat key(float avg)\n{\nfloat guess = 1.5 - (1.5 / (avg * 0.1 + 1.0));\nreturn max(0.0, guess) + 0.1;\n}\nvoid main()\n{\nvec4 color = texture2D(u_texture, v_textureCoordinates);\nvec3 xyz = czm_RGBToXYZ(color.rgb);\nfloat luminance = xyz.r;\nfloat scaledLum = key(u_avgLuminance) * luminance / u_avgLuminance;\nfloat brightLum = max(scaledLum - u_threshold, 0.0);\nfloat brightness = brightLum / (u_offset + brightLum);\nxyz.r = brightness;\ngl_FragColor = vec4(czm_XYZToRGB(xyz), 1.0);\n}\n"}),r("Shaders/PostProcessFilters/GaussianBlur1D",[],function(){"use strict";return"#define SAMPLES 8\nuniform float delta;\nuniform float sigma;\nuniform float direction;\nuniform sampler2D u_texture;\nuniform vec2 u_step;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec2 st = v_textureCoordinates;\nvec2 dir = vec2(1.0 - direction, direction);\nvec3 g;\ng.x = 1.0 / (sqrt(czm_twoPi) * sigma);\ng.y = exp((-0.5 * delta * delta) / (sigma * sigma));\ng.z = g.y * g.y;\nvec4 result = texture2D(u_texture, st) * g.x;\nfor (int i = 1; i < SAMPLES; ++i)\n{\ng.xy *= g.yz;\nvec2 offset = float(i) * dir * u_step;\nresult += texture2D(u_texture, st - offset) * g.x;\nresult += texture2D(u_texture, st + offset) * g.x;\n}\ngl_FragColor = result;\n}\n"}),r("Shaders/PostProcessFilters/PassThrough",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Scene/SunPostProcess",["../Core/BoundingRectangle","../Core/Cartesian2","../Core/Cartesian4","../Core/Color","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/Transforms","../Renderer/ClearCommand","../Renderer/PassState","../Renderer/PixelDatatype","../Renderer/RenderbufferFormat","../Shaders/PostProcessFilters/AdditiveBlend","../Shaders/PostProcessFilters/BrightPass","../Shaders/PostProcessFilters/GaussianBlur1D","../Shaders/PostProcessFilters/PassThrough"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";var y=function(){this._fbo=void 0,this._downSampleFBO1=void 0,this._downSampleFBO2=void 0,this._clearFBO1Command=void 0,this._clearFBO2Command=void 0,this._downSampleCommand=void 0,this._brightPassCommand=void 0,this._blurXCommand=void 0,this._blurYCommand=void 0,this._blendCommand=void 0,this._fullScreenCommand=void 0,this._downSamplePassState=new d,this._downSamplePassState.scissorTest={enable:!0,rectangle:new e},this._upSamplePassState=new d,this._upSamplePassState.scissorTest={enabled:!0,rectangle:new e},this._uCenter=new t,this._uRadius=void 0,this._blurStep=new t};y.prototype.clear=function(e,t){var r=this._clearFBO1Command;i.clone(n(t,i.BLACK),r.color),r.execute(e),r=this._clearFBO2Command,i.clone(n(t,i.BLACK),r.color),r.execute(e)},y.prototype.execute=function(e,t){this._downSampleCommand.execute(e,this._downSamplePassState),this._brightPassCommand.execute(e,this._downSamplePassState),this._blurXCommand.execute(e,this._downSamplePassState),this._blurYCommand.execute(e,this._downSamplePassState),this._fullScreenCommand.framebuffer=t,this._blendCommand.framebuffer=t,this._fullScreenCommand.execute(e),this._blendCommand.execute(e,this._upSamplePassState)};var C=new e,w=new e,S=new r,E=new t,b=new t,T=new l;return y.prototype.update=function(e){var r=e.drawingBufferWidth,n=e.drawingBufferHeight,a=this;if(!o(this._downSampleCommand)){this._clearFBO1Command=new h({color:new i}),this._clearFBO2Command=new h({color:new i});var d,y={};this._downSampleCommand=e.createViewportQuadCommand(_,{renderState:d,uniformMap:y,owner:this}),y={u_avgLuminance:function(){return.5},u_threshold:function(){return.25},u_offset:function(){return.1}},this._brightPassCommand=e.createViewportQuadCommand(v,{renderState:d,uniformMap:y,owner:this});var x=1,P=2;y={delta:function(){return x},sigma:function(){return P},direction:function(){return 0}},this._blurXCommand=e.createViewportQuadCommand(g,{renderState:d,uniformMap:y,owner:this}),y={delta:function(){return x},sigma:function(){return P},direction:function(){return 1}},this._blurYCommand=e.createViewportQuadCommand(g,{renderState:d,uniformMap:y,owner:this}),y={u_center:function(){return a._uCenter},u_radius:function(){return a._uRadius}},this._blendCommand=e.createViewportQuadCommand(f,{renderState:d,uniformMap:y,owner:this}),y={},this._fullScreenCommand=e.createViewportQuadCommand(_,{renderState:d,uniformMap:y,owner:this})}var A=Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))-2),M=Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))-2),D=Math.max(A,M),I=C;I.width=r,I.height=n;var R=w;R.width=D,R.height=D;var O=this._fbo,L=o(O)&&O.getColorTexture(0)||void 0;if(!o(L)||L.width!==r||L.height!==n){O=O&&O.destroy(),this._downSampleFBO1=this._downSampleFBO1&&this._downSampleFBO1.destroy(),this._downSampleFBO2=this._downSampleFBO2&&this._downSampleFBO2.destroy(),this._blurStep.x=this._blurStep.y=1/D;var N=[e.createTexture2D({width:r,height:n})];O=this._fbo=e.depthTexture?e.createFramebuffer({colorTextures:N,depthTexture:e.createTexture2D({width:r,height:n,pixelFormat:u.DEPTH_COMPONENT,pixelDatatype:m.UNSIGNED_SHORT})}):e.createFramebuffer({colorTextures:N,depthRenderbuffer:e.createRenderbuffer({format:p.DEPTH_COMPONENT16})}),this._downSampleFBO1=e.createFramebuffer({colorTextures:[e.createTexture2D({width:D,height:D})]}),this._downSampleFBO2=e.createFramebuffer({colorTextures:[e.createTexture2D({width:D,height:D})]}),this._clearFBO1Command.framebuffer=this._downSampleFBO1,this._clearFBO2Command.framebuffer=this._downSampleFBO2,this._downSampleCommand.framebuffer=this._downSampleFBO1,this._brightPassCommand.framebuffer=this._downSampleFBO2,this._blurXCommand.framebuffer=this._downSampleFBO1,this._blurYCommand.framebuffer=this._downSampleFBO2;var B=e.createRenderState({viewport:R}),F=e.createRenderState();this._downSampleCommand.uniformMap.u_texture=function(){return O.getColorTexture(0)},this._downSampleCommand.renderState=B,this._brightPassCommand.uniformMap.u_texture=function(){return a._downSampleFBO1.getColorTexture(0)},this._brightPassCommand.renderState=B,this._blurXCommand.uniformMap.u_texture=function(){return a._downSampleFBO2.getColorTexture(0)},this._blurXCommand.uniformMap.u_step=function(){return a._blurStep},this._blurXCommand.renderState=B,this._blurYCommand.uniformMap.u_texture=function(){return a._downSampleFBO1.getColorTexture(0)},this._blurYCommand.uniformMap.u_step=function(){return a._blurStep},this._blurYCommand.renderState=B,this._blendCommand.uniformMap.u_texture0=function(){return O.getColorTexture(0)},this._blendCommand.uniformMap.u_texture1=function(){return a._downSampleFBO2.getColorTexture(0)},this._blendCommand.renderState=F,this._fullScreenCommand.uniformMap.u_texture=function(){return O.getColorTexture(0)},this._fullScreenCommand.renderState=F}var z=e.uniformState,V=z.sunPositionWC,k=z.view,U=z.viewProjection,W=z.projection,G=l.computeViewportTransformation(I,0,1,T),H=l.multiplyByPoint(k,V,S),q=c.pointToGLWindowCoordinates(U,G,V,E);H.x+=s.SOLAR_RADIUS;var j=c.pointToGLWindowCoordinates(W,G,H,H),Y=2*30*t.magnitude(t.subtract(j,q,j)),X=b;X.x=Y,X.y=Y;var Z=this._upSamplePassState.scissorTest.rectangle;return Z.x=Math.max(q.x-.5*X.x,0),Z.y=Math.max(q.y-.5*X.y,0),Z.width=Math.min(X.x,r),Z.height=Math.min(X.y,n),this._uCenter=t.clone(q,this._uCenter),this._uRadius=.5*Math.max(X.x,X.y),G=l.computeViewportTransformation(R,0,1,T),q=c.pointToGLWindowCoordinates(U,G,V,E),X.x*=A/r,X.y*=M/n,Z=this._downSamplePassState.scissorTest.rectangle,Z.x=Math.max(q.x-.5*X.x,0),Z.y=Math.max(q.y-.5*X.y,0),Z.width=Math.min(X.x,r),Z.height=Math.min(X.y,n),this._downSamplePassState.context=e,this._upSamplePassState.context=e,this._fbo},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){return this._fbo=this._fbo&&this._fbo.destroy(),this._downSampleFBO1=this._downSampleFBO1&&this._downSampleFBO1.destroy(),this._downSampleFBO2=this._downSampleFBO2&&this._downSampleFBO2.destroy(),this._downSampleCommand=this._downSampleCommand&&this._downSampleCommand.shaderProgram&&this._downSampleCommand.shaderProgram.destroy(),this._brightPassCommand=this._brightPassCommand&&this._brightPassCommand.shaderProgram&&this._brightPassCommand.shaderProgram.destroy(),this._blurXCommand=this._blurXCommand&&this._blurXCommand.shaderProgram&&this._blurXCommand.shaderProgram.destroy(),this._blurYCommand=this._blurYCommand&&this._blurYCommand.shaderProgram&&this._blurYCommand.shaderProgram.destroy(),this._blendCommand=this._blendCommand&&this._blendCommand.shaderProgram&&this._blendCommand.shaderProgram.destroy(),this._fullScreenCommand=this._fullScreenCommand&&this._fullScreenCommand.shaderProgram&&this._fullScreenCommand.shaderProgram.destroy(),a(this)},y}),r("Scene/Scene",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EllipsoidGeometry","../Core/Event","../Core/GeographicProjection","../Core/GeometryInstance","../Core/GeometryPipeline","../Core/Intersect","../Core/Interval","../Core/JulianDate","../Core/Math","../Core/Matrix4","../Core/mergeSort","../Core/Occluder","../Core/ShowGeometryInstanceAttribute","../Renderer/ClearCommand","../Renderer/Context","../Renderer/PassState","./Camera","./CreditDisplay","./CullingVolume","./FrameState","./FrustumCommands","./FXAA","./OIT","./OrthographicFrustum","./Pass","./PerformanceDisplay","./PerInstanceColorAppearance","./PerspectiveFrustum","./PerspectiveOffCenterFrustum","./Primitive","./PrimitiveCollection","./SceneMode","./SceneTransforms","./SceneTransitioner","./ScreenSpaceCameraController","./SunPostProcess","./TweenCollection"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X){"use strict";function Z(e){var t=e.globe;if(e._mode===G.SCENE3D&&l(t)){var r=t.ellipsoid;return _t.radius=r.minimumRadius,gt=E.fromBoundingSphere(_t,e._camera.positionWC,gt)}return void 0}function Q(e){e.render=!1,e.pick=!1}function J(e,t,r){var i=e._camera,n=e._frameState;n.mode=e._mode,n.morphTime=e.morphTime,n.mapProjection=e.mapProjection,n.frameNumber=t,n.time=y.clone(r,n.time),n.camera=i,n.cullingVolume=i.frustum.computeCullingVolume(i.positionWC,i.directionWC,i.upWC),n.occluder=Z(e),n.afterRender.length=0,Q(n.passes)}function K(e,t,r,i,n){n.length=i;for(var o=0;i>o;++o){var a=Math.max(e,Math.pow(r,o)*e),s=Math.min(t,r*a),u=n[o];l(u)?(u.near=a,u.far=s):u=n[o]=new R(a,s)}}function $(e,t,r){e.debugShowFrustums&&(t.debugOverlappingFrustums=0);for(var i=e._frustumCommandsList,n=i.length,o=0;n>o;++o){var a=i[o],s=a.near,u=a.far;if(!(r.start>u)){if(r.stop<s)break;if(t.pass===B.OPAQUE||t instanceof T?a.opaqueCommands[a.opaqueIndex++]=t:t.pass===B.TRANSLUCENT&&(a.translucentCommands[a.translucentIndex++]=t),e.debugShowFrustums&&(t.debugOverlappingFrustums|=1<<o),t.executeInClosestFrustum)break}}if(e.debugShowFrustums){var c=e._debugFrustumStatistics.commandsInFrustums;c[t.debugOverlappingFrustums]=l(c[t.debugOverlappingFrustums])?c[t.debugOverlappingFrustums]+1:1,++e._debugFrustumStatistics.totalCommands}}function et(e){var r=e._commandList,i=e._overlayCommandList,n=e._frameState.cullingVolume,o=e._camera,a=o.directionWC,s=o.positionWC;e.debugShowFrustums&&(e._debugFrustumStatistics={totalCommands:0,commandsInFrustums:{}});for(var u=e._frustumCommandsList,c=u.length,h=0;c>h;++h)u[h].opaqueIndex=0,u[h].translucentIndex=0;var d,m=Number.MAX_VALUE,p=Number.MIN_VALUE,f=!1;e._frameState.mode===G.SCENE3D&&(d=e._frameState.occluder);for(var v=yt.planes,_=0;5>_;++_)v[_]=n.planes[_];n=yt;for(var y=r.length,C=0;y>C;++C){var w=r[C],S=w.pass;if(S===B.OVERLAY)i.push(w);else{var E=w.boundingVolume;if(l(E)){if(w.cull&&(n.computeVisibility(E)===g.OUTSIDE||l(d)&&!d.isBoundingSphereVisible(E)))continue;Ct=t.computePlaneDistances(E,s,a,Ct),m=Math.min(m,Ct.start),p=Math.max(p,Ct.stop)}else Ct.start=o.frustum.near,Ct.stop=o.frustum.far,f=!(w instanceof T);$(e,w,Ct)}}f?(m=o.frustum.near,p=o.frustum.far):(m=Math.min(Math.max(m,o.frustum.near),o.frustum.far),p=Math.max(Math.min(p,o.frustum.far),m));var b=e.farToNearRatio,x=Math.ceil(Math.log(p/m)/Math.log(b));m!==Number.MAX_VALUE&&(x!==c||0!==u.length&&(m<u[0].near||p>u[c-1].far))&&(K(m,p,b,x,u),et(e))}function tt(e){var t={},r=e.vertexAttributes;for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i].index);return t}function rt(e,t,r){var i=t.context,o=s(r,e.shaderProgram),a=o.fragmentShaderSource,u=a.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,"void czm_Debug_main()"),c="void main() \n{ \n    czm_Debug_main(); \n";if(t.debugShowCommands){l(e._debugColor)||(e._debugColor=n.fromRandom());var h=e._debugColor;c+="    gl_FragColor.rgb *= vec3("+h.red+", "+h.green+", "+h.blue+"); \n"}if(t.debugShowFrustums){var d=1&e.debugOverlappingFrustums?"1.0":"0.0",m=2&e.debugOverlappingFrustums?"1.0":"0.0",p=4&e.debugOverlappingFrustums?"1.0":"0.0";c+="    gl_FragColor.rgb *= vec3("+d+", "+m+", "+p+"); \n"}c+="}";var f=u+"\n"+c,v=tt(o);return i.createShaderProgram(o.vertexShaderSource,f,v)}function it(e,t,r,i,n){if(l(e.shaderProgram)||l(n)){var o=rt(e,t,n);e.execute(t.context,r,i,o),o.destroy()}}function nt(e,t,r,n,a,s,u){if((!l(t.debugCommandFilter)||t.debugCommandFilter(e))&&(t.debugShowCommands||t.debugShowFrustums?it(e,t,n,a,s):e.execute(r,n,a,s),e.debugShowBoundingVolume&&l(e.boundingVolume))){l(t._debugSphere)&&t._debugSphere.destroy();var c=t._frameState,h=e.boundingVolume,m=h.radius,p=h.center,g=v.toWireframe(d.createGeometry(new d({radii:new i(m,m,m),vertexFormat:z.FLAT_VERTEX_FORMAT})));if(c.mode!==G.SCENE3D){p=w.multiplyByPoint(wt,p,p);var _=c.mapProjection,y=_.unproject(p);p=_.ellipsoid.cartographicToCartesian(y)}t._debugSphere=new U({geometryInstances:new f({geometry:g,modelMatrix:w.multiplyByTranslation(w.IDENTITY,p,new w),attributes:{color:new o(1,0,0,1)}}),appearance:new z({flat:!0,translucent:!1}),asynchronous:!1});var C=[];t._debugSphere.update(r,c,C);var S;l(u)&&(S=n.framebuffer,n.framebuffer=u),C[0].execute(r,n),l(S)&&(n.framebuffer=S)}}function ot(e,t){if(l(e)){for(var r=t.mode===G.SCENE3D?t.occluder:void 0,i=t.cullingVolume,n=yt.planes,o=0;5>o;++o)n[o]=i.planes[o];i=yt;var a=e.boundingVolume;return l(e)&&(!l(e.boundingVolume)||!e.cull||i.computeVisibility(a)!==g.OUTSIDE&&(!l(r)||r.isBoundingSphereVisible(a)))}}function at(e,r,i){return t.distanceSquaredTo(r.boundingVolume,i)-t.distanceSquaredTo(e.boundingVolume,i)}function st(e,t,r,i){var n=e.context;S(i,at,e._camera.positionWC);for(var o=i.length,a=0;o>a;++a)t(i[a],e,n,r)}function lt(e,t,r,i){var o,a=e._frameState,s=e._camera,u=e.context,c=u.uniformState;o=l(s.frustum.fov)?s.frustum.clone(St):l(s.frustum.infiniteProjectionMatrix)?s.frustum.clone(Et):s.frustum.clone(bt),l(e.sun)&&e.sunBloom!==e._sunBloom?(e.sunBloom?e._sunPostProcess=new Y:l(e._sunPostProcess)&&(e._sunPostProcess=e._sunPostProcess.destroy()),e._sunBloom=e.sunBloom):!l(e.sun)&&l(e._sunPostProcess)&&(e._sunPostProcess=e._sunPostProcess.destroy(),e._sunBloom=!1);var h=a.passes.render&&l(e.skyBox)?e.skyBox.update(u,a):void 0,d=a.passes.render&&l(e.skyAtmosphere)?e.skyAtmosphere.update(u,a):void 0,m=a.passes.render&&l(e.sun)?e.sun.update(e):void 0,p=ot(m,a),f=e._clearColorCommand;n.clone(r,f.color),f.execute(u,t);var v,g=!1,_=e._frustumCommandsList,y=_.length;for(v=0;y>v;++v)if(_[v].translucentIndex>0){g=!0;break}var C=!i&&g&&l(e._oit)&&e._oit.isSupported();C&&(e._oit.update(u),e._oit.clear(u,t,r),C=C&&e._oit.isSupported());var w=!i&&(e.fxaa||C&&e.fxaaOrderIndependentTranslucency);w&&(e._fxaa.update(u),e._fxaa.clear(u,t,r));var S=t.framebuffer;C?S=e._oit.getColorFramebuffer():w&&(S=e._fxaa.getColorFramebuffer()),t.framebuffer=p&&e.sunBloom?e._sunPostProcess.update(u):S,o.near=s.frustum.near,o.far=s.frustum.far,c.updateFrustum(o),l(h)&&nt(h,e,u,t),l(d)&&nt(d,e,u,t),l(m)&&p&&(m.execute(u,t),e.sunBloom&&(e._sunPostProcess.execute(u,S),t.framebuffer=S));var E,b=e._depthClearCommand;for(C?(l(e._executeOITFunction)||(e._executeOITFunction=function(e,t,r,i){e._oit.executeCommands(e,t,r,i)}),E=e._executeOITFunction):E=st,v=0;y>v;++v){var T=y-v-1,x=_[T];o.near=x.near,o.far=x.far,0!==T&&(o.near*=.99),c.updateFrustum(o),b.execute(u,t);for(var P=x.opaqueCommands,A=x.opaqueIndex,M=0;A>M;++M)nt(P[M],e,u,t);o.near=x.near,c.updateFrustum(o),P=x.translucentCommands,P.length=x.translucentIndex,E(e,nt,t,P)}C&&(t.framebuffer=w?e._fxaa.getColorFramebuffer():void 0,e._oit.execute(u,t)),w&&(t.framebuffer=void 0,e._fxaa.execute(u,t))}function ut(e,t){for(var r=e.context,i=e._overlayCommandList,n=i.length,o=0;n>o;++o)i[o].execute(r,t)}function ct(e){var t=e.context,r=e._frameState,i=e._commandList;e._globe&&e._globe.update(t,r,i),e._primitives.update(t,r,i),l(e.moon)&&e.moon.update(t,r,i)}function ht(e){for(var t=e.afterRender,r=0,i=t.length;i>r;++r)t[r]();t.length=0}function dt(e,t){l(t)||(t=y.now()),e._preRender.raiseEvent(e,t);var r=e.context.uniformState,i=e._frameState,o=C.incrementWrap(i.frameNumber,15e6,1);J(e,o,t),i.passes.render=!0,i.creditDisplay.beginFrame();var a=e.context;r.update(a,i),e._commandList.length=0,e._overlayCommandList.length=0,ct(e),et(e);var u=e._passState;if(lt(e,u,s(e.backgroundColor,n.BLACK)),ut(e,u),i.creditDisplay.endFrame(),e.debugShowFramesPerSecond){if(!l(e._performanceDisplay)){var c=document.createElement("div");c.style.position="absolute",c.style.top="10px",c.style.left="10px";var h=e._canvas.parentNode;h.appendChild(c);var d=new F({container:c});e._performanceDisplay=d,e._performanceContainer=c}e._performanceDisplay.update()}else l(e._performanceDisplay)&&(e._performanceDisplay=e._performanceDisplay&&e._performanceDisplay.destroy(),e._performanceContainer.parentNode.removeChild(e._performanceContainer));a.endFrame(),ht(i),e._postRender.raiseEvent(e,t)}function mt(e,t){var r=e._camera,n=r.frustum,o=e.drawingBufferWidth,a=e.drawingBufferHeight,s=2/o*t.x-1;s*=.5*(n.right-n.left);var l=2/a*(a-t.y)-1;l*=.5*(n.top-n.bottom);var u=i.clone(r.position,xt);i.multiplyByScalar(r.right,s,Pt),i.add(Pt,u,u),i.multiplyByScalar(r.up,l,Pt),i.add(Pt,u,u),i.fromElements(u.z,u.x,u.y,u),At.x=o,At.y=a;var c=n.getPixelSize(At,void 0,Mt),h=Tt;return h.right=.5*c.x,h.left=-h.right,h.top=.5*c.y,h.bottom=-h.top,h.near=n.near,h.far=n.far,h.computeCullingVolume(u,r.directionWC,r.upWC)}function pt(e,t,r,i){var n=e._camera,o=n.frustum,a=o.near,s=e.drawingBufferWidth,l=e.drawingBufferHeight,u=Math.tan(.5*o.fovy),c=o.aspectRatio*u,h=2/s*t.x-1,d=2/l*(l-t.y)-1,m=h*a*c,p=d*a*u;At.x=s,At.y=l;var f=o.getPixelSize(At,void 0,Mt),v=.5*f.x*r,g=.5*f.y*i,_=Dt;return _.top=p+g,_.bottom=p-g,_.right=m+v,_.left=m-v,_.near=a,_.far=o.far,_.computeCullingVolume(n.positionWC,n.directionWC,n.upWC)}function ft(e,t,r,i){return e._mode===G.SCENE2D?mt(e,t,r,i):pt(e,t,r,i)}var vt=function(e){e=s(e,s.EMPTY_OBJECT);var t=e.canvas,r=e.contextOptions,i=e.creditContainer,o=new x(t,r);l(i)||(i=document.createElement("div"),i.style.position="absolute",i.style.bottom="0",i.style["text-shadow"]="0px 0px 2px #000000",i.style.color="#ffffff",i.style["font-size"]="10px",i.style["padding-right"]="5px",t.parentNode.appendChild(i)),this._id=a(),this._frameState=new I(new M(i)),this._frameState.scene3DOnly=s(e.scene3DOnly,!1),this._passState=new P(o),this._canvas=t,this._context=o,this._globe=void 0,this._primitives=new W,this._pickFramebuffer=void 0,this._tweens=new X,this._shaderFrameCount=0,this._sunPostProcess=void 0,this._commandList=[],this._frustumCommandsList=[],this._overlayCommandList=[],this._oit=s(e.orderIndependentTranslucency,!0)?new L(o):void 0,this._executeOITFunction=void 0,this._fxaa=new O,this._clearColorCommand=new T({color:new n,owner:this}),this._depthClearCommand=new T({depth:1,owner:this}),this._transitioner=new q(this),this._renderError=new m,this._preRender=new m,this._postRender=new m,this.rethrowRenderErrors=!1,this.completeMorphOnUserInput=!0,this.morphStart=new m,this.morphComplete=new m,this.skyBox=void 0,this.skyAtmosphere=void 0,this.sun=void 0,this.sunBloom=!0,this._sunBloom=void 0,this.moon=void 0,this.backgroundColor=n.clone(n.BLACK),this._mode=G.SCENE3D,this._mapProjection=s(e.mapProjection,new p),this.morphTime=1,this.farToNearRatio=1e3,this.debugCommandFilter=void 0,this.debugShowCommands=!1,this.debugShowFrustums=!1,this._debugFrustumStatistics=void 0,this.debugShowFramesPerSecond=!1,this.fxaaOrderIndependentTranslucency=!0,this.fxaa=!1,this._performanceDisplay=void 0,this._debugSphere=void 0;var u=new A(this);this._camera=u,this._screenSpaceCameraController=new j(this);var c=u.frustum.near,h=u.frustum.far,d=Math.ceil(Math.log(h/c)/Math.log(this.farToNearRatio));K(c,h,this.farToNearRatio,d,this._frustumCommandsList),J(this,0,y.now()),this.initializeFrame()};u(vt.prototype,{canvas:{get:function(){return this._canvas}},drawingBufferHeight:{get:function(){return this._context.drawingBufferHeight}},drawingBufferWidth:{get:function(){return this._context.drawingBufferWidth}},maximumAliasedLineWidth:{get:function(){return this._context.maximumAliasedLineWidth}},globe:{get:function(){return this._globe},set:function(e){this._globe=this._globe&&this._globe.destroy(),this._globe=e}},primitives:{get:function(){return this._primitives}},camera:{get:function(){return this._camera}},screenSpaceCameraController:{get:function(){return this._screenSpaceCameraController}},mapProjection:{get:function(){return this._mapProjection}},frameState:{get:function(){return this._frameState}},tweens:{get:function(){return this._tweens}},imageryLayers:{get:function(){return this.globe.imageryLayers}},terrainProvider:{get:function(){return this.globe.terrainProvider},set:function(e){this.globe.terrainProvider=e}},renderError:{get:function(){return this._renderError}},preRender:{get:function(){return this._preRender}},postRender:{get:function(){return this._postRender}},context:{get:function(){return this._context}},debugFrustumStatistics:{get:function(){return this._debugFrustumStatistics}},scene3DOnly:{get:function(){return this._frameState.scene3DOnly}},orderIndependentTranslucency:{get:function(){return l(this._oit)}},id:{get:function(){return this._id}},mode:{get:function(){return this._mode},set:function(e){if(this.scene3DOnly&&e!==G.SCENE3D)throw new h("Only SceneMode.SCENE3D is valid when scene3DOnly is true.");this._mode=e}}});var gt,_t=new t,yt=new D,Ct=new _,wt=new w(0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1);wt=w.inverseTransformation(wt,wt);var St=new V,Et=new k,bt=new N;vt.prototype.initializeFrame=function(){120===this._shaderFrameCount++&&(this._shaderFrameCount=0,this._context.shaderCache.destroyReleasedShaderPrograms()),this._tweens.update(),this._camera.update(this._mode),this._screenSpaceCameraController.update()},vt.prototype.render=function(e){try{dt(this,e)}catch(t){if(this._renderError.raiseEvent(this,t),this.rethrowRenderErrors)throw t}};var Tt=new N,xt=new i,Pt=new i,At=new r,Mt=new r,Dt=new k,It=3,Rt=3,Ot=new e(0,0,It,Rt),Lt=new n(0,0,0,0),Nt=new r;return vt.prototype.pick=function(e){var t=this._context,r=t.uniformState,i=this._frameState,n=H.transformWindowToDrawingBuffer(this,e,Nt);l(this._pickFramebuffer)||(this._pickFramebuffer=t.createPickFramebuffer()),J(this,i.frameNumber,i.time),i.cullingVolume=ft(this,n,It,Rt),i.passes.pick=!0,r.update(t,i),this._commandList.length=0,ct(this),et(this),Ot.x=n.x-.5*(It-1),Ot.y=this.drawingBufferHeight-n.y-.5*(Rt-1),lt(this,this._pickFramebuffer.begin(Ot),Lt,!0);var o=this._pickFramebuffer.end(Ot);return t.endFrame(),ht(i),o},vt.prototype.drillPick=function(e){for(var t=[],r=this.pick(e);l(r)&&l(r.primitive);){var i=r.primitive;if(t.push(r),l(i.show))i.show=!1;else if("function"==typeof i.getGeometryInstanceAttributes){var n=i.getGeometryInstanceAttributes(r.id);l(n)&&l(n.show)&&(n.show=b.toValue(!1))}r=this.pick(e)}for(var o=0;o<t.length;++o){var a=t[o].primitive;if(l(a.show))a.show=!0;else if("function"==typeof a.getGeometryInstanceAttributes){var s=a.getGeometryInstanceAttributes(t[o].id);l(s)&&l(s.show)&&(s.show=b.toValue(!0))}}return t},vt.prototype.completeMorph=function(){this._transitioner.completeMorph()},vt.prototype.morphTo2D=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphTo2D(e,t)},vt.prototype.morphToColumbusView=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphToColumbusView(e,t)},vt.prototype.morphTo3D=function(e){var t,r=this.globe;t=l(r)?r.ellipsoid:this.mapProjection.ellipsoid,e=s(e,2),this._transitioner.morphTo3D(e,t)},vt.prototype.isDestroyed=function(){return!1},vt.prototype.destroy=function(){return this._tweens.removeAll(),this._screenSpaceCameraController=this._screenSpaceCameraController&&this._screenSpaceCameraController.destroy(),this._pickFramebuffer=this._pickFramebuffer&&this._pickFramebuffer.destroy(),this._primitives=this._primitives&&this._primitives.destroy(),this._globe=this._globe&&this._globe.destroy(),this.skyBox=this.skyBox&&this.skyBox.destroy(),this.skyAtmosphere=this.skyAtmosphere&&this.skyAtmosphere.destroy(),this._debugSphere=this._debugSphere&&this._debugSphere.destroy(),this.sun=this.sun&&this.sun.destroy(),this._sunPostProcess=this._sunPostProcess&&this._sunPostProcess.destroy(),this._transitioner.destroy(),l(this._oit)&&this._oit.destroy(),this._fxaa.destroy(),this._context=this._context&&this._context.destroy(),this._frameState.creditDisplay.destroy(),l(this._performanceDisplay)&&(this._performanceDisplay=this._performanceDisplay&&this._performanceDisplay.destroy(),this._performanceContainer.parentNode.removeChild(this._performanceContainer)),c(this)},vt}),r("Scene/SingleTileImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadImage","../Core/Rectangle","../Core/TileProviderError","../ThirdParty/when"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";var h=function(i){function n(e){C._image=e,C._tileWidth=e.width,C._tileHeight=e.height,C._ready=!0,u.handleSuccess(C._errorEvent)}function h(){var e="Failed to load image "+g+".";y=u.handleError(y,C,C._errorEvent,e,0,0,0,d)}function d(){c(s(g),n,h)}i=t(i,{});var m=i.url;this._url=m;var p=i.proxy;this._proxy=p;var f=t(i.rectangle,l.MAX_VALUE),v=new a({rectangle:f,numberOfLevelZeroTilesX:1,numberOfLevelZeroTilesY:1});this._tilingScheme=v,this._image=void 0,this._texture=void 0,this._tileWidth=0,this._tileHeight=0,this._errorEvent=new o,this._ready=!1;var g=m;r(p)&&(g=p.getURL(g));var _=i.credit;"string"==typeof _&&(_=new e(_)),this._credit=_;var y,C=this;d()};return i(h.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return 0}},minimumLevel:{get:function(){return 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),h.prototype.getTileCredits=function(){return void 0},h.prototype.requestImage=function(){return this._image},h.prototype.pickFeatures=function(){return void 0},h}),r("Shaders/SkyAtmosphereFS",[],function(){"use strict";return"const float g = -0.95;\nconst float g2 = g * g;\nvarying vec3 v_rayleighColor;\nvarying vec3 v_mieColor;\nvarying vec3 v_toCamera;\nvarying vec3 v_positionEC;\nvoid main (void)\n{\nczm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\nvec3 direction = normalize(v_positionEC);\nczm_ray ray = czm_ray(vec3(0.0), direction);\nczm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid);\nif (!czm_isEmpty(intersection)) {\ndiscard;\n}\nfloat fCos = dot(czm_sunDirectionWC, normalize(v_toCamera)) / length(v_toCamera);\nfloat fRayleighPhase = 0.75 * (1.0 + fCos*fCos);\nfloat fMiePhase = 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCos*fCos) / pow(1.0 + g2 - 2.0*g*fCos, 1.5);\nconst float fExposure = 2.0;\nvec3 rgb = fRayleighPhase * v_rayleighColor + fMiePhase * v_mieColor;\nrgb = vec3(1.0) - exp(-fExposure * rgb);\nfloat l = czm_luminance(rgb);\ngl_FragColor = vec4(rgb, min(smoothstep(0.0, 0.1, l), 1.0) * smoothstep(0.0, 1.0, czm_morphTime));\n}\n"}),r("Shaders/SkyAtmosphereVS",[],function(){"use strict";return"attribute vec4 position;\nuniform float fCameraHeight;\nuniform float fCameraHeight2;\nuniform float fOuterRadius;\nuniform float fOuterRadius2;\nuniform float fInnerRadius;\nuniform float fScale;\nuniform float fScaleDepth;\nuniform float fScaleOverScaleDepth;\nconst float Kr = 0.0025;\nconst float fKr4PI = Kr * 4.0 * czm_pi;\nconst float Km = 0.0015;\nconst float fKm4PI = Km * 4.0 * czm_pi;\nconst float ESun = 15.0;\nconst float fKmESun = Km * ESun;\nconst float fKrESun = Kr * ESun;\nconst vec3 v3InvWavelength = vec3(\n5.60204474633241,\n9.473284437923038,\n19.643802610477206);\nconst float rayleighScaleDepth = 0.25;\nconst int nSamples = 2;\nconst float fSamples = 2.0;\nvarying vec3 v_rayleighColor;\nvarying vec3 v_mieColor;\nvarying vec3 v_toCamera;\nvarying vec3 v_positionEC;\nfloat scale(float fCos)\n{\nfloat x = 1.0 - fCos;\nreturn fScaleDepth * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\nvoid main(void)\n{\nvec3 v3Pos = position.xyz;\nvec3 v3Ray = v3Pos - czm_viewerPositionWC;\nfloat fFar = length(v3Ray);\nv3Ray /= fFar;\n#ifdef SKY_FROM_SPACE\nfloat B = 2.0 * dot(czm_viewerPositionWC, v3Ray);\nfloat C = fCameraHeight2 - fOuterRadius2;\nfloat fDet = max(0.0, B*B - 4.0 * C);\nfloat fNear = 0.5 * (-B - sqrt(fDet));\nvec3 v3Start = czm_viewerPositionWC + v3Ray * fNear;\nfFar -= fNear;\nfloat fStartAngle = dot(v3Ray, v3Start) / fOuterRadius;\nfloat fStartDepth = exp(-1.0 / fScaleDepth);\nfloat fStartOffset = fStartDepth*scale(fStartAngle);\n#else\nvec3 v3Start = czm_viewerPositionWC;\nfloat fHeight = length(v3Start);\nfloat fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fCameraHeight));\nfloat fStartAngle = dot(v3Ray, v3Start) / fHeight;\nfloat fStartOffset = fDepth*scale(fStartAngle);\n#endif\nfloat fSampleLength = fFar / fSamples;\nfloat fScaledLength = fSampleLength * fScale;\nvec3 v3SampleRay = v3Ray * fSampleLength;\nvec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\nvec3 v3FrontColor = vec3(0.0, 0.0, 0.0);\nfor(int i=0; i<nSamples; i++)\n{\nfloat fHeight = length(v3SamplePoint);\nfloat fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fHeight));\nvec3 lightPosition = normalize(czm_viewerPositionWC);\nfloat fLightAngle = dot(lightPosition, v3SamplePoint) / fHeight;\nfloat fCameraAngle = dot(v3Ray, v3SamplePoint) / fHeight;\nfloat fScatter = (fStartOffset + fDepth*(scale(fLightAngle) - scale(fCameraAngle)));\nvec3 v3Attenuate = exp(-fScatter * (v3InvWavelength * fKr4PI + fKm4PI));\nv3FrontColor += v3Attenuate * (fDepth * fScaledLength);\nv3SamplePoint += v3SampleRay;\n}\nv_mieColor = v3FrontColor * fKmESun;\nv_rayleighColor = v3FrontColor * (v3InvWavelength * fKrESun);\nv_toCamera = czm_viewerPositionWC - v3Pos;\nv_positionEC = (czm_modelView * position).xyz;\ngl_Position = czm_modelViewProjection * position;\n}\n"
}),r("Scene/SkyAtmosphere",["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/Ellipsoid","../Core/EllipsoidGeometry","../Core/GeometryPipeline","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/createShaderSource","../Renderer/DrawCommand","../Shaders/SkyAtmosphereFS","../Shaders/SkyAtmosphereVS","./BlendingState","./CullFace","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v){"use strict";var g=function(r){r=t(r,o.WGS84),this.show=!0,this._ellipsoid=r,this._command=new h({owner:this}),this._spSkyFromSpace=void 0,this._spSkyFromAtmosphere=void 0,this._fCameraHeight=void 0,this._fCameraHeight2=void 0,this._outerRadius=e.maximumComponent(e.multiplyByScalar(r.radii,1.025,new e));var i=r.maximumRadius,n=.25,a=this;this._command.uniformMap={fCameraHeight:function(){return a._fCameraHeight},fCameraHeight2:function(){return a._fCameraHeight2},fOuterRadius:function(){return a._outerRadius},fOuterRadius2:function(){return a._outerRadius*a._outerRadius},fInnerRadius:function(){return i},fScale:function(){return 1/(a._outerRadius-i)},fScaleDepth:function(){return n},fScaleOverScaleDepth:function(){return 1/(a._outerRadius-i)/n}}};return i(g.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),g.prototype.update=function(t,i){if(!this.show)return void 0;if(i.mode!==v.SCENE3D&&i.mode!==v.MORPHING)return void 0;if(!i.passes.render)return void 0;var n=this._command;if(!r(n.vertexArray)){var o=a.createGeometry(new a({radii:e.multiplyByScalar(this._ellipsoid.radii,1.025,new e),slicePartitions:256,stackPartitions:256,vertexFormat:l.POSITION_ONLY}));n.vertexArray=t.createVertexArrayFromGeometry({geometry:o,attributeLocations:s.createAttributeLocations(o),bufferUsage:u.STATIC_DRAW}),n.renderState=t.createRenderState({cull:{enabled:!0,face:f.FRONT},blending:p.ALPHA_BLEND});var h=c({defines:["SKY_FROM_SPACE"],sources:[m]});this._spSkyFromSpace=t.createShaderProgram(h,d),h=c({defines:["SKY_FROM_ATMOSPHERE"],sources:[m]}),this._spSkyFromAtmosphere=t.createShaderProgram(h,d)}var g=i.camera.positionWC;return this._fCameraHeight2=e.magnitudeSquared(g),this._fCameraHeight=Math.sqrt(this._fCameraHeight2),n.shaderProgram=this._fCameraHeight>this._outerRadius?this._spSkyFromSpace:this._spSkyFromAtmosphere,n},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),this._spSkyFromSpace=this._spSkyFromSpace&&this._spSkyFromSpace.destroy(),this._spSkyFromAtmosphere=this._spSkyFromAtmosphere&&this._spSkyFromAtmosphere.destroy(),n(this)},g}),r("Shaders/SkyBoxFS",[],function(){"use strict";return"uniform samplerCube u_cubeMap;\nvarying vec3 v_texCoord;\nvoid main()\n{\nvec3 rgb = textureCube(u_cubeMap, normalize(v_texCoord)).rgb;\ngl_FragColor = vec4(rgb, czm_morphTime);\n}\n"}),r("Shaders/SkyBoxVS",[],function(){"use strict";return"attribute vec3 position;\nvarying vec3 v_texCoord;\nvoid main()\n{\nvec3 p = czm_viewRotation * (czm_temeToPseudoFixed * (czm_entireFrustum.y * position));\ngl_Position = czm_projection * vec4(p, 1.0);\nv_texCoord = position.xyz;\n}\n"}),r("Scene/SkyBox",["../Core/BoxGeometry","../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Core/GeometryPipeline","../Core/Matrix4","../Core/VertexFormat","../Renderer/BufferUsage","../Renderer/DrawCommand","../Renderer/loadCubeMap","../Shaders/SkyBoxFS","../Shaders/SkyBoxVS","./BlendingState","./SceneMode"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f){"use strict";var v=function(e){this.sources=e.sources,this._sources=void 0,this.show=r(e.show,!0),this._command=new c({modelMatrix:s.clone(s.IDENTITY),owner:this}),this._cubeMap=void 0};return v.prototype.update=function(r,n){if(!this.show)return void 0;if(n.mode!==f.SCENE3D&&n.mode!==f.MORPHING)return void 0;if(!n.passes.render)return void 0;if(this._sources!==this.sources){this._sources=this.sources;var o=this.sources;"string"==typeof o.positiveX?h(r,this._sources).then(function(e){c._cubeMap=c._cubeMap&&c._cubeMap.destroy(),c._cubeMap=e}):(this._cubeMap=this._cubeMap&&this._cubeMap.destroy(),this._cubeMap=r.createCubeMap({source:o}))}var s=this._command;if(!i(s.vertexArray)){var c=this;s.uniformMap={u_cubeMap:function(){return c._cubeMap}};var v=e.createGeometry(e.fromDimensions({dimensions:new t(2,2,2),vertexFormat:l.POSITION_ONLY})),g=a.createAttributeLocations(v);s.vertexArray=r.createVertexArrayFromGeometry({geometry:v,attributeLocations:g,bufferUsage:u.STATIC_DRAW}),s.shaderProgram=r.createShaderProgram(m,d,g),s.renderState=r.createRenderState({blending:p.ALPHA_BLEND})}return i(this._cubeMap)?s:void 0},v.prototype.isDestroyed=function(){return!1},v.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),e.shaderProgram=e.shaderProgram&&e.shaderProgram.destroy(),this._cubeMap=this._cubeMap&&this._cubeMap.destroy(),n(this)},v}),r("Scene/StencilFunction",["../Core/freezeObject"],function(e){"use strict";var t={NEVER:512,LESS:513,EQUAL:514,LESS_OR_EQUAL:515,GREATER:516,NOT_EQUAL:517,GREATER_OR_EQUAL:518,ALWAYS:519};return e(t)}),r("Scene/StencilOperation",["../Core/freezeObject"],function(e){"use strict";var t={ZERO:0,KEEP:7680,REPLACE:7681,INCREMENT:7682,DECREMENT:7683,INVERT:5386,INCREMENT_WRAP:34055,DECREMENT_WRAP:34056};return e(t)}),r("Shaders/SunFS",[],function(){"use strict";return"uniform sampler2D u_texture;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\ngl_FragColor = texture2D(u_texture, v_textureCoordinates);\n}\n"}),r("Shaders/SunTextureFS",[],function(){"use strict";return"uniform float u_glowLengthTS;\nuniform float u_radiusTS;\nvarying vec2 v_textureCoordinates;\nvec2 rotate(vec2 p, vec2 direction)\n{\nreturn vec2(p.x * direction.x - p.y * direction.y, p.x * direction.y + p.y * direction.x);\n}\nvec4 addBurst(vec2 position, vec2 direction)\n{\nvec2 rotatedPosition = rotate(position, direction) * vec2(25.0, 0.75);\nfloat radius = length(rotatedPosition);\nfloat burst = 1.0 - smoothstep(0.0, 0.55, radius);\nreturn vec4(burst);\n}\nvoid main()\n{\nvec2 position = v_textureCoordinates - vec2(0.5);\nfloat radius = length(position);\nfloat surface = step(radius, u_radiusTS);\nvec4 color = vec4(1.0, 1.0, surface + 0.2, surface);\nfloat glow = 1.0 - smoothstep(0.0, 0.55, radius);\ncolor.ba += mix(vec2(0.0), vec2(1.0), glow) * 0.75;\nvec4 burst = vec4(0.0);\nburst += 0.4 * addBurst(position, vec2(0.38942,  0.92106));\nburst += 0.4 * addBurst(position, vec2(0.99235,  0.12348));\nburst += 0.4 * addBurst(position, vec2(0.60327, -0.79754));\nburst += 0.3 * addBurst(position, vec2(0.31457,  0.94924));\nburst += 0.3 * addBurst(position, vec2(0.97931,  0.20239));\nburst += 0.3 * addBurst(position, vec2(0.66507, -0.74678));\ncolor += clamp(burst, vec4(0.0), vec4(1.0)) * 0.15;\ngl_FragColor = clamp(color, vec4(0.0), vec4(1.0));\n}\n"}),r("Shaders/SunVS",[],function(){"use strict";return"attribute vec2 direction;\nuniform float u_size;\nvarying vec2 v_textureCoordinates;\nvoid main()\n{\nvec4 position;\nif (czm_morphTime == 1.0)\n{\nposition = vec4(czm_sunPositionWC, 1.0);\n}\nelse\n{\nposition = vec4(czm_sunPositionColumbusView.zxy, 1.0);\n}\nvec4 positionEC = czm_view * position;\nvec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\nvec2 halfSize = vec2(u_size * 0.5);\nhalfSize *= ((direction * 2.0) - 1.0);\ngl_Position = czm_viewportOrthographic * vec4(positionWC.xy + halfSize, -positionWC.z, 1.0);\nv_textureCoordinates = direction;\n}\n"}),r("Scene/Sun",["../Core/BoundingRectangle","../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/ComponentDatatype","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/PrimitiveType","../Renderer/BufferUsage","../Renderer/ClearCommand","../Renderer/DrawCommand","../Shaders/SunFS","../Shaders/SunTextureFS","../Shaders/SunVS","./BlendingState","./SceneMode","./SceneTransforms"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E){"use strict";var b=function(){this.show=!0,this._command=new g({primitiveType:p.TRIANGLES,boundingVolume:new t,owner:this}),this._boundingVolume=new t,this._boundingVolume2D=new t,this._texture=void 0,this._drawingBufferWidth=void 0,this._drawingBufferHeight=void 0,this._radiusTS=void 0,this._size=void 0,this.glowFactor=1,this._glowFactorDirty=!1;var e=this;this._uniformMap={u_texture:function(){return e._texture},u_size:function(){return e._size}}};l(b.prototype,{glowFactor:{get:function(){return this._glowFactor},set:function(e){e=Math.max(e,0),this._glowFactor=e,this._glowFactorDirty=!0}}});var T=new r,x=new r,P=new n,A=new n;return b.prototype.update=function(n){var l=n.frameState,u=n.context;if(!this.show)return void 0;var p=l.mode;if(p===S.SCENE2D||p===S.MORPHING)return void 0;if(!l.passes.render)return void 0;var g=n.drawingBufferWidth,b=n.drawingBufferHeight;if(!s(this._texture)||g!==this._drawingBufferWidth||b!==this._drawingBufferHeight||this._glowFactorDirty){this._texture=this._texture&&this._texture.destroy(),this._drawingBufferWidth=g,this._drawingBufferHeight=b,this._glowFactorDirty=!1;var M=Math.max(g,b);M=Math.pow(2,Math.ceil(Math.log(M)/Math.log(2))-2),this._texture=u.createTexture2D({width:M,height:M,pixelFormat:m.RGBA});var D=u.createFramebuffer({colorTextures:[this._texture]});D.destroyAttachments=!1;var I=new v({color:new o(0,0,0,0),framebuffer:D}),R=u.createRenderState({viewport:new e(0,0,M,M)});this._glowLengthTS=5*this._glowFactor,this._radiusTS=.5*(1/(1+2*this._glowLengthTS));var O=this,L={u_glowLengthTS:function(){return O._glowLengthTS},u_radiusTS:function(){return O._radiusTS}},N=u.createViewportQuadCommand(y,{renderState:R,uniformMap:L,framebuffer:D,owner:this});I.execute(u),N.execute(u),N.shaderProgram.destroy(),D.destroy()}var B=this._command;if(!s(B.vertexArray)){var F={direction:0},z=new Uint8Array(8);z[0]=0,z[1]=0,z[2]=255,z[3]=0,z[4]=255,z[5]=255,z[6]=0,z[7]=255;var V=u.createVertexBuffer(z,f.STATIC_DRAW),k=[{index:F.direction,vertexBuffer:V,componentsPerAttribute:2,normalize:!0,componentDatatype:a.UNSIGNED_BYTE}],U=u.createIndexBuffer(new Uint16Array([0,1,2,0,2,3]),f.STATIC_DRAW,c.UNSIGNED_SHORT);B.vertexArray=u.createVertexArray(k,U),B.shaderProgram=u.createShaderProgram(C,_,F),B.renderState=u.createRenderState({blending:w.ALPHA_BLEND}),B.uniformMap=this._uniformMap}var W=u.uniformState.sunPositionWC,G=u.uniformState.sunPositionColumbusView,H=this._boundingVolume,q=this._boundingVolume2D;i.clone(W,H.center),q.center.x=G.z,q.center.y=G.x,q.center.z=G.y,H.radius=h.SOLAR_RADIUS+h.SOLAR_RADIUS*this._glowLengthTS,q.radius=H.radius,p===S.SCENE3D?t.clone(H,B.boundingVolume):p===S.COLUMBUS_VIEW&&t.clone(q,B.boundingVolume);var j=E.computeActualWgs84Position(l,W,A),Y=i.magnitude(i.subtract(j,n.camera.position,A)),X=u.uniformState.projection,Z=P;Z.x=0,Z.y=0,Z.z=-Y,Z.w=1;var Q=d.multiplyByVector(X,Z,A),J=E.clipToDrawingBufferCoordinates(n,Q,T);Z.x=h.SOLAR_RADIUS;var K=d.multiplyByVector(X,Z,A),$=E.clipToDrawingBufferCoordinates(n,K,x);return this._size=Math.ceil(r.magnitude(r.subtract($,J,A))),this._size=2*this._size*(1+2*this._glowLengthTS),B},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){var e=this._command;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),e.shaderProgram=e.shaderProgram&&e.shaderProgram.destroy(),this._texture=this._texture&&this._texture.destroy(),u(this)},b}),r("Scene/TileCoordinatesImageryProvider",["../Core/Color","../Core/defaultValue","../Core/defineProperties","../Core/Event","../Core/GeographicTilingScheme"],function(e,t,r,i,n){"use strict";var o=function(r){r=t(r,{}),this._tilingScheme=t(r.tilingScheme,new n),this._color=t(r.color,e.YELLOW),this._errorEvent=new i,this._tileWidth=t(r.tileWidth,256),this._tileHeight=t(r.tileHeight,256)};return r(o.prototype,{proxy:{get:function(){return void 0}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return void 0}},minimumLevel:{get:function(){return void 0}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._tilingScheme.rectangle}},tileDiscardPolicy:{get:function(){return void 0}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return!0}},credit:{get:function(){return void 0}},hasAlphaChannel:{get:function(){return!0}}}),o.prototype.getTileCredits=function(){return void 0},o.prototype.requestImage=function(e,t,r){var i=document.createElement("canvas");i.width=256,i.height=256;var n=i.getContext("2d"),o=this._color.toCssColorString();n.strokeStyle=o,n.lineWidth=2,n.strokeRect(1,1,255,255);var a="L"+r+"X"+e+"Y"+t;return n.font="bold 25px Arial",n.textAlign="center",n.fillStyle="black",n.fillText(a,127,127),n.fillStyle=o,n.fillText(a,124,124),i},o.prototype.pickFeatures=function(){return void 0},o}),r("Scene/TileDiscardPolicy",["../Core/DeveloperError"],function(e){"use strict";var t=function(){e.throwInstantiationError()};return t.prototype.isReady=e.throwInstantiationError,t.prototype.shouldDiscardImage=e.throwInstantiationError,t}),r("Scene/TileMapServiceImageryProvider",["../Core/Cartesian2","../Core/Cartographic","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/GeographicTilingScheme","../Core/loadXML","../Core/Rectangle","../Core/TileProviderError","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p){"use strict";function f(e,t,r,i){var o=e._tilingScheme.getNumberOfYTilesAtLevel(i),a=e._url+i+"/"+t+"/"+(o-r-1)+"."+e._fileExtension,s=e._proxy;return n(s)&&(a=s.getURL(a)),a}var v=/\/$/,g=function(o){function a(r){for(var o,a,s,u,m=/tileformat/i,p=/tileset/i,v=/tilesets/i,_=/boundingbox/i,w=/srs/i,S=[],E=r.childNodes[0].childNodes,b=0;b<E.length;b++)if(m.test(E.item(b).nodeName))o=E.item(b);else if(v.test(E.item(b).nodeName)){s=E.item(b);for(var T=E.item(b).childNodes,x=0;x<T.length;x++)p.test(T.item(x).nodeName)&&S.push(T.item(x))}else _.test(E.item(b).nodeName)?a=E.item(b):w.test(E.item(b).nodeName)&&(u=E.item(b).textContent);C._fileExtension=i(C._fileExtension,o.getAttribute("extension")),C._tileWidth=i(C._tileWidth,parseInt(o.getAttribute("width"),10)),C._tileHeight=i(C._tileHeight,parseInt(o.getAttribute("height"),10)),C._minimumLevel=i(C._minimumLevel,parseInt(S[0].getAttribute("order"),10)),C._maximumLevel=i(C._maximumLevel,parseInt(S[S.length-1].getAttribute("order"),10));var P=s.getAttribute("profile"),A=!1;if(("geodetic"===P||"mercator"===P)&&(A=!0),!n(C._tilingScheme))if("geodetic"===P||"global-geodetic"===P)C._tilingScheme=new l;else{if("mercator"!==P&&"global-mercator"!==P){var M=g+"tilemapresource.xml specifies an unsupported profile attribute, "+P+".";return y=h.handleError(y,C,C._errorEvent,M,void 0,void 0,void 0,f),void 0}C._tilingScheme=new d}var D=C._tilingScheme;if(!n(C._rectangle)){var I,R,O,L;if(A)I=new e(parseFloat(a.getAttribute("miny")),parseFloat(a.getAttribute("minx"))),R=new e(parseFloat(a.getAttribute("maxy")),parseFloat(a.getAttribute("maxx"))),O=t.fromDegrees(I.x,I.y),L=t.fromDegrees(R.x,R.y);else if(I=new e(parseFloat(a.getAttribute("minx")),parseFloat(a.getAttribute("miny"))),R=new e(parseFloat(a.getAttribute("maxx")),parseFloat(a.getAttribute("maxy"))),C._tilingScheme instanceof l)O=t.fromDegrees(I.x,I.y),L=t.fromDegrees(R.x,R.y);else{var N=C._tilingScheme.projection;O=N.unproject(I),L=N.unproject(R)}C._rectangle=new c(O.longitude,O.latitude,L.longitude,L.latitude)}C._rectangle.west<D.rectangle.west&&(C._rectangle.west=D.rectangle.west),C._rectangle.east>D.rectangle.east&&(C._rectangle.east=D.rectangle.east),C._rectangle.south<D.rectangle.south&&(C._rectangle.south=D.rectangle.south),C._rectangle.north>D.rectangle.north&&(C._rectangle.north=D.rectangle.north);var B=D.positionToTileXY(c.southwest(C._rectangle),C._minimumLevel),F=D.positionToTileXY(c.northeast(C._rectangle),C._minimumLevel),z=(Math.abs(F.x-B.x)+1)*(Math.abs(F.y-B.y)+1);z>4&&(C._minimumLevel=0),C._tilingScheme=D,C._ready=!0}function p(){C._fileExtension=i(o.fileExtension,"png"),C._tileWidth=i(o.tileWidth,256),C._tileHeight=i(o.tileHeight,256),C._minimumLevel=i(o.minimumLevel,0),C._maximumLevel=i(o.maximumLevel,18),C._tilingScheme=i(o.tilingScheme,new d),C._rectangle=i(o.rectangle,C._tilingScheme.rectangle),C._ready=!0}function f(){m(u(g+"tilemapresource.xml"),a,p)}o=i(o,{});var g=o.url;v.test(g)||(g+="/"),this._url=g,this._ready=!1,this._proxy=o.proxy,this._tileDiscardPolicy=o.tileDiscardPolicy,this._errorEvent=new s,this._fileExtension=o.fileExtension,this._tileWidth=o.tileWidth,this._tileHeight=o.tileHeight,this._minimumLevel=o.minimumLevel,this._maximumLevel=o.maximumLevel,this._rectangle=c.clone(o.rectangle),this._tilingScheme=o.tilingScheme;var _=o.credit;"string"==typeof _&&(_=new r(_)),this._credit=_;var y,C=this;f()};return o(g.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),g.prototype.getTileCredits=function(){return void 0},g.prototype.requestImage=function(e,t,r){var i=f(this,e,t,r);return p.loadImage(this,i)},g.prototype.pickFeatures=function(){return void 0},g}),r("Scene/TileState",["../Core/freezeObject"],function(e){"use strict";var t={START:0,LOADING:1,READY:2,UPSAMPLED_ONLY:3};return e(t)}),r("Shaders/ViewportQuadFS",[],function(){"use strict";return"varying vec2 v_textureCoordinates;\nvoid main()\n{\nczm_materialInput materialInput;\nmaterialInput.s = v_textureCoordinates.s;\nmaterialInput.st = v_textureCoordinates;\nmaterialInput.str = vec3(v_textureCoordinates, 0.0);\nmaterialInput.normalEC = vec3(0.0, 0.0, -1.0);\nczm_material material = czm_getMaterial(materialInput);\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n}\n"}),r("Scene/ViewportQuad",["../Core/BoundingRectangle","../Core/Color","../Core/defined","../Core/destroyObject","../Core/DeveloperError","../Renderer/createShaderSource","../Shaders/ViewportQuadFS","./BlendingState","./Material","./Pass"],function(e,t,r,i,n,o,a,s,l,u){"use strict";var c=function(i,n){this.show=!0,r(i)||(i=new e),this.rectangle=e.clone(i),r(n)||(n=l.fromType(l.ColorType,{color:new t(1,1,1,1)})),this.material=n,this._material=void 0,this._overlayCommand=void 0,this._rs=void 0};return c.prototype.update=function(t,i,n){if(this.show){var l=this._rs;r(l)&&e.equals(l.viewport,this.rectangle)||(this._rs=t.createRenderState({blending:s.ALPHA_BLEND,viewport:this.rectangle}));var c=i.passes;if(c.render){if(this._material!==this.material||!r(this._overlayCommand)){this._material=this.material,r(this._overlayCommand)&&this._overlayCommand.shaderProgram.destroy();var h=o({sources:[this._material.shaderSource,a]});this._overlayCommand=t.createViewportQuadCommand(h,{renderState:this._rs,uniformMap:this._material._uniforms,owner:this}),this._overlayCommand.pass=u.OVERLAY}this._material.update(t),this._overlayCommand.uniformMap=this._material._uniforms,n.push(this._overlayCommand)}}},c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return r(this._overlayCommand)&&(this._overlayCommand.shaderProgram=this._overlayCommand.shaderProgram&&this._overlayCommand.shaderProgram.destroy()),i(this)},c}),r("Scene/WebMapServiceImageryProvider",["../Core/Cartesian3","../Core/Cartographic","../Core/clone","../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/freezeObject","../Core/GeographicTilingScheme","../Core/loadJson","../Core/loadXML","../Core/Math","../Core/Rectangle","../Core/WebMercatorTilingScheme","../ThirdParty/when","./ImageryLayerFeatureInfo","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_){"use strict";function y(e,t,r,i){var n=e._url,a=n.indexOf("?");a>=0&&a<n.length-1?"&"!==n[n.length-1]&&(n+="&"):0>a&&(n+="?");var s=e._parameters;for(var l in s)s.hasOwnProperty(l)&&(n+=l+"="+s[l]+"&");if(o(s.layers)||(n+="layers="+e._layers+"&"),!o(s.srs)){var u=e._tilingScheme instanceof f?"EPSG:3857":"EPSG:4326";n+="srs="+u+"&"}if(!o(s.bbox)){var c=e._tilingScheme.tileXYToNativeRectangle(t,r,i),h=c.west+","+c.south+","+c.east+","+c.north;n+="bbox="+h+"&"}o(s.width)||(n+="width="+e._tileWidth+"&"),o(s.height)||(n+="height="+e._tileHeight+"&");var d=e._proxy;return o(d)&&(n=d.getURL(n)),n}function C(e,t,r,i,n,a,s){var l=e._url,u=l.indexOf("?");u>=0&&u<l.length-1?"&"!==l[l.length-1]&&(l+="&"):0>u&&(l+="?");var c=e._getFeatureInfoParameters;for(var h in c)c.hasOwnProperty(h)&&(l+=h+"="+c[h]+"&");if(o(c.layers)||(l+="layers="+e._layers+"&"),o(c.query_layers)||(l+="query_layers="+e._layers+"&"),!o(c.srs)){var d=e._tilingScheme instanceof f?"EPSG:3857":"EPSG:4326";l+="srs="+d+"&"}if(!o(c.bbox)){var m=e._tilingScheme.tileXYToNativeRectangle(r,i,n),p=m.west+","+m.south+","+m.east+","+m.north;l+="bbox="+p+"&"}o(c.x)||(l+="x="+a+"&"),o(c.y)||(l+="y="+s+"&"),o(c.width)||(l+="width="+e._tileWidth+"&"),o(c.height)||(l+="height="+e._tileHeight+"&"),o(c.info_format)||(l+="info_format="+t+"&");var v=e._proxy;return o(v)&&(l=v.getURL(l)),l}function w(e){for(var r=[],i=e.features,n=0;n<i.length;++n){var o=i[n],a=new g;if(a.data=o,a.configureNameFromProperties(o.properties),a.configureDescriptionFromProperties(o.properties),"Point"===o.geometry.type){var s=o.geometry.coordinates[0],l=o.geometry.coordinates[1];a.position=t.fromDegrees(s,l)}r.push(a)}return r}function S(e){var t=e.documentElement;return"MultiFeatureCollection"===t.localName&&t.namespaceURI===M?E(e):"FeatureInfoResponse"===t.localName&&t.namespaceURI===D?b(e):"ServiceExceptionReport"===t.localName?void 0:T(e)}function E(e){for(var t=[],r=e.documentElement,i=r.getElementsByTagNameNS(M,"Feature"),n=0;n<i.length;++n){for(var o=i[n],a={},s=o.getElementsByTagNameNS(M,"Val"),l=0;l<s.length;++l){var u=s[l];if(u.hasAttribute("ref")){var c=u.getAttribute("ref"),h=u.textContent.trim();a[c]=h}}var d=new g;d.data=o,d.configureNameFromProperties(a),d.configureDescriptionFromProperties(a),t.push(d)}return t}function b(e){for(var t=[],r=e.documentElement,i=r.getElementsByTagNameNS(D,"FIELDS"),n=0;n<i.length;++n){for(var o=i[n],a={},s=o.attributes,l=0;l<s.length;++l){var u=s[l];a[u.name]=u.value}var c=new g;c.data=o,c.configureNameFromProperties(a),c.configureDescriptionFromProperties(a),t.push(c)}return t}function T(e){var t=(new XMLSerializer).serializeToString(e),r=document.createElement("div"),i=document.createElement("pre");i.textContent=t,r.appendChild(i);var n=new g;return n.data=e,n.description=r.innerHTML,[n]}var x=function I(e){e=n(e,{}),this._url=e.url,this._tileDiscardPolicy=e.tileDiscardPolicy,this._proxy=e.proxy,this._layers=e.layers,this._enablePickFeatures=n(e.enablePickFeatures,!0),this._getFeatureInfoAsGeoJson=n(e.getFeatureInfoAsGeoJson,!0),this._getFeatureInfoAsXml=n(e.getFeatureInfoAsXml,!0);var t,a,s=r(I.DefaultParameters);if(o(e.parameters))for(t in e.parameters)e.parameters.hasOwnProperty(t)&&(a=t.toLowerCase(),s[a]=e.parameters[t]);this._parameters=s;var u=r(I.GetFeatureInfoDefaultParameters);if(o(e.getFeatureInfoParameters))for(t in e.getFeatureInfoParameters)e.getFeatureInfoParameters.hasOwnProperty(t)&&(a=t.toLowerCase(),u[a]=e.getFeatureInfoParameters[t]);this._getFeatureInfoParameters=u,this._tileWidth=n(e.tileWidth,256),this._tileHeight=n(e.tileHeight,256),this._minimumLevel=n(e.minimumLevel,0),this._maximumLevel=e.maximumLevel,this._rectangle=n(e.rectangle,p.MAX_VALUE),this._tilingScheme=o(e.tilingScheme)?e.tilingScheme:new c,this._rectangle=p.intersectWith(this._rectangle,this._tilingScheme.rectangle);var h=e.credit;"string"==typeof h&&(h=new i(h)),this._credit=h,this._errorEvent=new l,this._ready=!0};a(x.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},layers:{get:function(){return this._layers}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),x.prototype.getTileCredits=function(){return void 0},x.prototype.requestImage=function(e,t,r){var i=y(this,e,t,r);return _.loadImage(this,i)};var P=new t,A=new e;x.prototype.pickFeatures=function(e,t,r,i,n){if(!this._enablePickFeatures)return void 0;var o,a=this._tilingScheme.tileXYToNativeRectangle(e,t,r);if(this._tilingScheme instanceof c)o=A,o.x=m.toDegrees(i),o.y=m.toDegrees(n);else{var s=P;s.longitude=i,s.latitude=n,o=this._tilingScheme.projection.project(s,A)}var l,u=0|this._tileWidth*(o.x-a.west)/(a.east-a.west),p=0|this._tileHeight*(a.north-o.y)/(a.north-a.south);if(this._getFeatureInfoAsGeoJson){l=C(this,"application/json",e,t,r,u,p);var f=this;return v(h(l),function(e){return w(e)},function(i){return f._getFeatureInfoAsXml?(l=C(f,"text/xml",e,t,r,u,p),v(d(l),function(e){return S(e)})):v.reject(i)})}return this._getFeatureInfoAsXml?(l=C(this,"text/xml",e,t,r,u,p),v(d(l),function(e){return S(e)})):void 0},x.DefaultParameters=u({service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"}),x.GetFeatureInfoDefaultParameters=u({service:"WMS",version:"1.1.1",request:"GetFeatureInfo"});var M="http://www.mapinfo.com/mxp",D="http://www.esri.com/wms";return x}),r("Scene/WebMapTileServiceImageryProvider",["../Core/Credit","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../Core/Rectangle","../Core/WebMercatorTilingScheme","./ImageryProvider"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e,t,i,n){var o=e._url+"service=WMTS&VERSION=1.0.0&request=GetTile"+"&TILEMATRIX="+n+"&LAYER="+e._layer+"&STYLE="+e._style+"&TILEROW="+i+"&TILECOL="+t+"&TILEMATRIXSET="+e._tileMatrixSetID+"&FORMAT="+e._format,a=e._proxy;return r(a)&&(o=a.getURL(o)),o}var c=/\?$/,h=function(i){if(i=t(i,{}),!r(i.url))throw new n("options.url is required.");if(!r(i.layer))throw new n("options.layer is required.");if(!r(i.style))throw new n("options.style is required.");if(!r(i.tileMatrixSetID))throw new n("options.tileMatrixSetID is required.");this._url=i.url,c.test(this._url)||(this._url=this._url+"?"),this._layer=i.layer,this._style=i.style,this._tileMatrixSetID=i.tileMatrixSetID,this._format=t(i.format,"image/jpeg"),this._proxy=i.proxy,this._tileDiscardPolicy=i.tileDiscardPolicy,this._tilingScheme=t(i.tilingScheme,new s),this._tileWidth=t(i.tileWidth,256),this._tileHeight=t(i.tileHeight,256),this._minimumLevel=t(i.minimumLevel,0),this._maximumLevel=t(i.maximumLevel,18),this._rectangle=t(i.rectangle,this._tilingScheme.rectangle);var l=this._tilingScheme.positionToTileXY(a.southwest(this._rectangle),this._minimumLevel),u=this._tilingScheme.positionToTileXY(a.northeast(this._rectangle),this._minimumLevel),h=(Math.abs(u.x-l.x)+1)*(Math.abs(u.y-l.y)+1);if(h>4)throw new n("The imagery provider's rectangle and minimumLevel indicate that there are "+h+" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.");this._errorEvent=new o,this._ready=!0;var d=i.credit;"string"==typeof d&&(d=new e(d)),this._credit=d};return i(h.prototype,{url:{get:function(){return this._url}},proxy:{get:function(){return this._proxy}},tileWidth:{get:function(){return this._tileWidth}},tileHeight:{get:function(){return this._tileHeight}},maximumLevel:{get:function(){return this._maximumLevel}},minimumLevel:{get:function(){return this._minimumLevel}},tilingScheme:{get:function(){return this._tilingScheme}},rectangle:{get:function(){return this._rectangle}},tileDiscardPolicy:{get:function(){return this._tileDiscardPolicy}},errorEvent:{get:function(){return this._errorEvent}},format:{get:function(){return this._format}},ready:{get:function(){return this._ready}},credit:{get:function(){return this._credit}},hasAlphaChannel:{get:function(){return!0}}}),h.prototype.getTileCredits=function(){return void 0},h.prototype.requestImage=function(e,t,r){var i=u(this,e,t,r);return l.loadImage(this,i)},h.prototype.pickFeatures=function(){return void 0},h}),r("Scene/createTangentSpaceDebugPrimitive",["../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/GeometryInstance","../Core/GeometryPipeline","../Core/Matrix4","./PerInstanceColorAppearance","./Primitive"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(i){i=t(i,t.EMPTY_OBJECT);var u=[],c=i.geometry;r(c.attributes)&&r(c.primitiveType)||(c=c.constructor.createGeometry(c));var h=c.attributes,d=a.clone(t(i.modelMatrix,a.IDENTITY)),m=t(i.length,1e4);return r(h.normal)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"normal",m),attributes:{color:new e(1,0,0,1)},modelMatrix:d})),r(h.binormal)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"binormal",m),attributes:{color:new e(0,1,0,1)},modelMatrix:d})),r(h.tangent)&&u.push(new n({geometry:o.createLineSegmentsForVectors(c,"tangent",m),attributes:{color:new e(0,0,1,1)},modelMatrix:d})),u.length>0?new l({geometryInstances:u,appearance:new s({flat:!0,translucent:!1})}):void 0}return u}),function(){!function(e){var i=this||(0,eval)("this"),n=i.document,o=i.navigator,a=i.jQuery,s=i.JSON;!function(e){"function"==typeof t&&"object"==typeof exports&&"object"==typeof module?e(module.exports||exports):"function"==typeof r&&r.amd?r("ThirdParty/knockout-3.1.0",["exports"],e):e(i.ko={})}(function(t){function r(e,t){return null===e||typeof e in d?e===t:!1}function l(t,r){var i;return function(){i||(i=setTimeout(function(){i=e,t()},r))}}function u(e,t){var r;return function(){clearTimeout(r),r=setTimeout(e,t)}}function c(e,t,r,i){h.d[e]={init:function(e,n,o,a,s){var l,u;return h.ba(function(){var o=h.a.c(n()),a=!r!=!o,c=!u;(c||t||a!==l)&&(c&&h.ca.fa()&&(u=h.a.lb(h.e.childNodes(e),!0)),a?(c||h.e.U(e,h.a.lb(u)),h.gb(i?i(s,o):s,e)):h.e.da(e),l=a)},null,{G:e}),{controlsDescendantBindings:!0}}},h.g.aa[e]=!1,h.e.Q[e]=!0}var h="undefined"!=typeof t?t:{};h.b=function(e,t){for(var r=e.split("."),i=h,n=0;n<r.length-1;n++)i=i[r[n]];i[r[r.length-1]]=t},h.s=function(e,t,r){e[t]=r},h.version="3.1.0",h.b("version",h.version),h.a=function(){function t(e,t){for(var r in e)e.hasOwnProperty(r)&&t(r,e[r])}function r(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e}function l(e,t){return e.__proto__=t,e}var u={__proto__:[]}instanceof Array,c={},d={};c[o&&/Firefox\/2/i.test(o.userAgent)?"KeyboardEvent":"UIEvents"]=["keyup","keydown","keypress"],c.MouseEvents="click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" "),t(c,function(e,t){if(t.length)for(var r=0,i=t.length;i>r;r++)d[t[r]]=e});var m={propertychange:!0},p=n&&function(){for(var t=3,r=n.createElement("div"),i=r.getElementsByTagName("i");r.innerHTML="<!--[if gt IE "+ ++t+"]><i></i><![endif]-->",i[0];);return t>4?t:e}();return{mb:["authenticity_token",/^__RequestVerificationToken(_.*)?$/],r:function(e,t){for(var r=0,i=e.length;i>r;r++)t(e[r],r)
},l:function(e,t){if("function"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(e,t);for(var r=0,i=e.length;i>r;r++)if(e[r]===t)return r;return-1},hb:function(e,t,r){for(var i=0,n=e.length;n>i;i++)if(t.call(r,e[i],i))return e[i];return null},ma:function(e,t){var r=h.a.l(e,t);r>0?e.splice(r,1):0===r&&e.shift()},ib:function(e){e=e||[];for(var t=[],r=0,i=e.length;i>r;r++)0>h.a.l(t,e[r])&&t.push(e[r]);return t},ya:function(e,t){e=e||[];for(var r=[],i=0,n=e.length;n>i;i++)r.push(t(e[i],i));return r},la:function(e,t){e=e||[];for(var r=[],i=0,n=e.length;n>i;i++)t(e[i],i)&&r.push(e[i]);return r},$:function(e,t){if(t instanceof Array)e.push.apply(e,t);else for(var r=0,i=t.length;i>r;r++)e.push(t[r]);return e},Y:function(e,t,r){var i=h.a.l(h.a.Sa(e),t);0>i?r&&e.push(t):r||e.splice(i,1)},na:u,extend:r,ra:l,sa:u?l:r,A:t,Oa:function(e,t){if(!e)return e;var r,i={};for(r in e)e.hasOwnProperty(r)&&(i[r]=t(e[r],r,e));return i},Fa:function(e){for(;e.firstChild;)h.removeNode(e.firstChild)},ec:function(e){e=h.a.R(e);for(var t=n.createElement("div"),r=0,i=e.length;i>r;r++)t.appendChild(h.M(e[r]));return t},lb:function(e,t){for(var r=0,i=e.length,n=[];i>r;r++){var o=e[r].cloneNode(!0);n.push(t?h.M(o):o)}return n},U:function(e,t){if(h.a.Fa(e),t)for(var r=0,i=t.length;i>r;r++)e.appendChild(t[r])},Bb:function(e,t){var r=e.nodeType?[e]:e;if(0<r.length){for(var i=r[0],n=i.parentNode,o=0,a=t.length;a>o;o++)n.insertBefore(t[o],i);for(o=0,a=r.length;a>o;o++)h.removeNode(r[o])}},ea:function(e,t){if(e.length){for(t=8===t.nodeType&&t.parentNode||t;e.length&&e[0].parentNode!==t;)e.shift();if(1<e.length){var r=e[0],i=e[e.length-1];for(e.length=0;r!==i;)if(e.push(r),r=r.nextSibling,!r)return;e.push(i)}}return e},Db:function(e,t){7>p?e.setAttribute("selected",t):e.selected=t},ta:function(t){return null===t||t===e?"":t.trim?t.trim():t.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},oc:function(e,t){for(var r=[],i=(e||"").split(t),n=0,o=i.length;o>n;n++){var a=h.a.ta(i[n]);""!==a&&r.push(a)}return r},kc:function(e,t){return e=e||"",t.length>e.length?!1:e.substring(0,t.length)===t},Sb:function(e,t){if(e===t)return!0;if(11===e.nodeType)return!1;if(t.contains)return t.contains(3===e.nodeType?e.parentNode:e);if(t.compareDocumentPosition)return 16==(16&t.compareDocumentPosition(e));for(;e&&e!=t;)e=e.parentNode;return!!e},Ea:function(e){return h.a.Sb(e,e.ownerDocument.documentElement)},eb:function(e){return!!h.a.hb(e,h.a.Ea)},B:function(e){return e&&e.tagName&&e.tagName.toLowerCase()},q:function(e,t,r){var i=p&&m[t];if(!i&&a)a(e).bind(t,r);else if(i||"function"!=typeof e.addEventListener){if("undefined"==typeof e.attachEvent)throw Error("Browser doesn't support addEventListener or attachEvent");var n=function(t){r.call(e,t)},o="on"+t;e.attachEvent(o,n),h.a.u.ja(e,function(){e.detachEvent(o,n)})}else e.addEventListener(t,r,!1)},ha:function(e,t){if(!e||!e.nodeType)throw Error("element must be a DOM node when calling triggerEvent");var r;if("input"===h.a.B(e)&&e.type&&"click"==t.toLowerCase()?(r=e.type,r="checkbox"==r||"radio"==r):r=!1,a&&!r)a(e).trigger(t);else if("function"==typeof n.createEvent){if("function"!=typeof e.dispatchEvent)throw Error("The supplied element doesn't support dispatchEvent");r=n.createEvent(d[t]||"HTMLEvents"),r.initEvent(t,!0,!0,i,0,0,0,0,0,!1,!1,!1,!1,0,e),e.dispatchEvent(r)}else if(r&&e.click)e.click();else{if("undefined"==typeof e.fireEvent)throw Error("Browser doesn't support triggering events");e.fireEvent("on"+t)}},c:function(e){return h.v(e)?e():e},Sa:function(e){return h.v(e)?e.o():e},ua:function(e,t,r){if(t){var i=/\S+/g,n=e.className.match(i)||[];h.a.r(t.match(i),function(e){h.a.Y(n,e,r)}),e.className=n.join(" ")}},Xa:function(t,r){var i=h.a.c(r);(null===i||i===e)&&(i="");var n=h.e.firstChild(t);!n||3!=n.nodeType||h.e.nextSibling(n)?h.e.U(t,[t.ownerDocument.createTextNode(i)]):n.data=i,h.a.Vb(t)},Cb:function(e,t){if(e.name=t,7>=p)try{e.mergeAttributes(n.createElement("<input name='"+e.name+"'/>"),!1)}catch(r){}},Vb:function(e){p>=9&&(e=1==e.nodeType?e:e.parentNode,e.style&&(e.style.zoom=e.style.zoom))},Tb:function(e){if(p){var t=e.style.width;e.style.width=0,e.style.width=t}},ic:function(e,t){e=h.a.c(e),t=h.a.c(t);for(var r=[],i=e;t>=i;i++)r.push(i);return r},R:function(e){for(var t=[],r=0,i=e.length;i>r;r++)t.push(e[r]);return t},mc:6===p,nc:7===p,oa:p,ob:function(e,t){for(var r=h.a.R(e.getElementsByTagName("input")).concat(h.a.R(e.getElementsByTagName("textarea"))),i="string"==typeof t?function(e){return e.name===t}:function(e){return t.test(e.name)},n=[],o=r.length-1;o>=0;o--)i(r[o])&&n.push(r[o]);return n},fc:function(e){return"string"==typeof e&&(e=h.a.ta(e))?s&&s.parse?s.parse(e):new Function("return "+e)():null},Ya:function(e,t,r){if(!s||!s.stringify)throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");return s.stringify(h.a.c(e),t,r)},gc:function(e,r,i){i=i||{};var o=i.params||{},a=i.includeFields||this.mb,s=e;if("object"==typeof e&&"form"===h.a.B(e))for(var s=e.action,l=a.length-1;l>=0;l--)for(var u=h.a.ob(e,a[l]),c=u.length-1;c>=0;c--)o[u[c].name]=u[c].value;r=h.a.c(r);var d=n.createElement("form");d.style.display="none",d.action=s,d.method="post";for(var m in r)e=n.createElement("input"),e.name=m,e.value=h.a.Ya(h.a.c(r[m])),d.appendChild(e);t(o,function(e,t){var r=n.createElement("input");r.name=e,r.value=t,d.appendChild(r)}),n.body.appendChild(d),i.submitter?i.submitter(d):d.submit(),setTimeout(function(){d.parentNode.removeChild(d)},0)}}}(),h.b("utils",h.a),h.b("utils.arrayForEach",h.a.r),h.b("utils.arrayFirst",h.a.hb),h.b("utils.arrayFilter",h.a.la),h.b("utils.arrayGetDistinctValues",h.a.ib),h.b("utils.arrayIndexOf",h.a.l),h.b("utils.arrayMap",h.a.ya),h.b("utils.arrayPushAll",h.a.$),h.b("utils.arrayRemoveItem",h.a.ma),h.b("utils.extend",h.a.extend),h.b("utils.fieldsIncludedWithJsonPost",h.a.mb),h.b("utils.getFormFields",h.a.ob),h.b("utils.peekObservable",h.a.Sa),h.b("utils.postJson",h.a.gc),h.b("utils.parseJson",h.a.fc),h.b("utils.registerEventHandler",h.a.q),h.b("utils.stringifyJson",h.a.Ya),h.b("utils.range",h.a.ic),h.b("utils.toggleDomNodeCssClass",h.a.ua),h.b("utils.triggerEvent",h.a.ha),h.b("utils.unwrapObservable",h.a.c),h.b("utils.objectForEach",h.a.A),h.b("utils.addOrRemoveItem",h.a.Y),h.b("unwrap",h.a.c),Function.prototype.bind||(Function.prototype.bind=function(e){var t=this,r=Array.prototype.slice.call(arguments);return e=r.shift(),function(){return t.apply(e,r.concat(Array.prototype.slice.call(arguments)))}}),h.a.f=new function(){function t(t,o){var a=t[i];if(!a||"null"===a||!n[a]){if(!o)return e;a=t[i]="ko"+r++,n[a]={}}return n[a]}var r=0,i="__ko__"+(new Date).getTime(),n={};return{get:function(r,i){var n=t(r,!1);return n===e?e:n[i]},set:function(r,i,n){(n!==e||t(r,!1)!==e)&&(t(r,!0)[i]=n)},clear:function(e){var t=e[i];return t?(delete n[t],e[i]=null,!0):!1},L:function(){return r++ +i}}},h.b("utils.domData",h.a.f),h.b("utils.domData.clear",h.a.f.clear),h.a.u=new function(){function t(t,r){var n=h.a.f.get(t,i);return n===e&&r&&(n=[],h.a.f.set(t,i,n)),n}function r(e){var i=t(e,!1);if(i)for(var i=i.slice(0),n=0;n<i.length;n++)i[n](e);if(h.a.f.clear(e),h.a.u.cleanExternalData(e),o[e.nodeType])for(i=e.firstChild;e=i;)i=e.nextSibling,8===e.nodeType&&r(e)}var i=h.a.f.L(),n={1:!0,8:!0,9:!0},o={1:!0,9:!0};return{ja:function(e,r){if("function"!=typeof r)throw Error("Callback must be a function");t(e,!0).push(r)},Ab:function(r,n){var o=t(r,!1);o&&(h.a.ma(o,n),0==o.length&&h.a.f.set(r,i,e))},M:function(e){if(n[e.nodeType]&&(r(e),o[e.nodeType])){var t=[];h.a.$(t,e.getElementsByTagName("*"));for(var i=0,a=t.length;a>i;i++)r(t[i])}return e},removeNode:function(e){h.M(e),e.parentNode&&e.parentNode.removeChild(e)},cleanExternalData:function(e){a&&"function"==typeof a.cleanData&&a.cleanData([e])}}},h.M=h.a.u.M,h.removeNode=h.a.u.removeNode,h.b("cleanNode",h.M),h.b("removeNode",h.removeNode),h.b("utils.domNodeDisposal",h.a.u),h.b("utils.domNodeDisposal.addDisposeCallback",h.a.u.ja),h.b("utils.domNodeDisposal.removeDisposeCallback",h.a.u.Ab),function(){h.a.Qa=function(e){var t;if(a){if(a.parseHTML)t=a.parseHTML(e)||[];else if((t=a.clean([e]))&&t[0]){for(e=t[0];e.parentNode&&11!==e.parentNode.nodeType;)e=e.parentNode;e.parentNode&&e.parentNode.removeChild(e)}}else{var r=h.a.ta(e).toLowerCase();for(t=n.createElement("div"),r=r.match(/^<(thead|tbody|tfoot)/)&&[1,"<table>","</table>"]||!r.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!r.indexOf("<td")||!r.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||[0,"",""],e="ignored<div>"+r[1]+e+r[2]+"</div>","function"==typeof i.innerShiv?t.appendChild(i.innerShiv(e)):t.innerHTML=e;r[0]--;)t=t.lastChild;t=h.a.R(t.lastChild.childNodes)}return t},h.a.Va=function(t,r){if(h.a.Fa(t),r=h.a.c(r),null!==r&&r!==e)if("string"!=typeof r&&(r=r.toString()),a)a(t).html(r);else for(var i=h.a.Qa(r),n=0;n<i.length;n++)t.appendChild(i[n])}}(),h.b("utils.parseHtmlFragment",h.a.Qa),h.b("utils.setHtml",h.a.Va),h.w=function(){function t(e,r){if(e)if(8==e.nodeType){var i=h.w.xb(e.nodeValue);null!=i&&r.push({Rb:e,cc:i})}else if(1==e.nodeType)for(var i=0,n=e.childNodes,o=n.length;o>i;i++)t(n[i],r)}var r={};return{Na:function(e){if("function"!=typeof e)throw Error("You can only pass a function to ko.memoization.memoize()");var t=(0|4294967296*(1+Math.random())).toString(16).substring(1)+(0|4294967296*(1+Math.random())).toString(16).substring(1);return r[t]=e,"<!--[ko_memo:"+t+"]-->"},Hb:function(t,i){var n=r[t];if(n===e)throw Error("Couldn't find any memo with ID "+t+". Perhaps it's already been unmemoized.");try{return n.apply(null,i||[]),!0}finally{delete r[t]}},Ib:function(e,r){var i=[];t(e,i);for(var n=0,o=i.length;o>n;n++){var a=i[n].Rb,s=[a];r&&h.a.$(s,r),h.w.Hb(i[n].cc,s),a.nodeValue="",a.parentNode&&a.parentNode.removeChild(a)}},xb:function(e){return(e=e.match(/^\[ko_memo\:(.*?)\]$/))?e[1]:null}}}(),h.b("memoization",h.w),h.b("memoization.memoize",h.w.Na),h.b("memoization.unmemoize",h.w.Hb),h.b("memoization.parseMemoText",h.w.xb),h.b("memoization.unmemoizeDomNodeAndDescendants",h.w.Ib),h.Ga={throttle:function(e,t){e.throttleEvaluation=t;var r=null;return h.h({read:e,write:function(i){clearTimeout(r),r=setTimeout(function(){e(i)},t)}})},rateLimit:function(e,t){var r,i,n;"number"==typeof t?r=t:(r=t.timeout,i=t.method),n="notifyWhenChangesStop"==i?u:l,e.Ma(function(e){return n(e,r)})},notify:function(e,t){e.equalityComparer="always"==t?null:r}};var d={undefined:1,"boolean":1,number:1,string:1};h.b("extenders",h.Ga),h.Fb=function(e,t,r){this.target=e,this.za=t,this.Qb=r,this.sb=!1,h.s(this,"dispose",this.F)},h.Fb.prototype.F=function(){this.sb=!0,this.Qb()},h.N=function(){h.a.sa(this,h.N.fn),this.H={}};var m="change";t={V:function(e,t,r){var i=this;r=r||m;var n=new h.Fb(i,t?e.bind(t):e,function(){h.a.ma(i.H[r],n)});return i.o&&i.o(),i.H[r]||(i.H[r]=[]),i.H[r].push(n),n},notifySubscribers:function(e,t){if(t=t||m,this.qb(t))try{h.k.jb();for(var r,i=this.H[t].slice(0),n=0;r=i[n];++n)r.sb||r.za(e)}finally{h.k.end()}},Ma:function(e){var t,r,i,n=this,o=h.v(n);n.ia||(n.ia=n.notifySubscribers,n.notifySubscribers=function(e,t){t&&t!==m?"beforeChange"===t?n.bb(e):n.ia(e,t):n.cb(e)});var a=e(function(){o&&i===n&&(i=n()),t=!1,n.Ka(r,i)&&n.ia(r=i)});n.cb=function(e){t=!0,i=e,a()},n.bb=function(e){t||(r=e,n.ia(e,"beforeChange"))}},qb:function(e){return this.H[e]&&this.H[e].length},Wb:function(){var e=0;return h.a.A(this.H,function(t,r){e+=r.length}),e},Ka:function(e,t){return!this.equalityComparer||!this.equalityComparer(e,t)},extend:function(e){var t=this;return e&&h.a.A(e,function(e,r){var i=h.Ga[e];"function"==typeof i&&(t=i(t,r)||t)}),t}},h.s(t,"subscribe",t.V),h.s(t,"extend",t.extend),h.s(t,"getSubscriptionsCount",t.Wb),h.a.na&&h.a.ra(t,Function.prototype),h.N.fn=t,h.tb=function(e){return null!=e&&"function"==typeof e.V&&"function"==typeof e.notifySubscribers},h.b("subscribable",h.N),h.b("isSubscribable",h.tb),h.ca=h.k=function(){function e(e){i.push(r),r=e}function t(){r=i.pop()}var r,i=[],n=0;return{jb:e,end:t,zb:function(e){if(r){if(!h.tb(e))throw Error("Only subscribable things can act as dependencies");r.za(e,e.Kb||(e.Kb=++n))}},t:function(r,i,n){try{return e(),r.apply(i,n||[])}finally{t()}},fa:function(){return r?r.ba.fa():void 0},pa:function(){return r?r.pa:void 0}}}(),h.b("computedContext",h.ca),h.b("computedContext.getDependenciesCount",h.ca.fa),h.b("computedContext.isInitial",h.ca.pa),h.m=function(e){function t(){return 0<arguments.length?(t.Ka(r,arguments[0])&&(t.P(),r=arguments[0],t.O()),this):(h.k.zb(t),r)}var r=e;return h.N.call(t),h.a.sa(t,h.m.fn),t.o=function(){return r},t.O=function(){t.notifySubscribers(r)},t.P=function(){t.notifySubscribers(r,"beforeChange")},h.s(t,"peek",t.o),h.s(t,"valueHasMutated",t.O),h.s(t,"valueWillMutate",t.P),t},h.m.fn={equalityComparer:r};var p=h.m.hc="__ko_proto__";h.m.fn[p]=h.m,h.a.na&&h.a.ra(h.m.fn,h.N.fn),h.Ha=function(t,r){return null===t||t===e||t[p]===e?!1:t[p]===r?!0:h.Ha(t[p],r)},h.v=function(e){return h.Ha(e,h.m)},h.ub=function(e){return"function"==typeof e&&e[p]===h.m||"function"==typeof e&&e[p]===h.h&&e.Yb?!0:!1},h.b("observable",h.m),h.b("isObservable",h.v),h.b("isWriteableObservable",h.ub),h.T=function(e){if(e=e||[],"object"!=typeof e||!("length"in e))throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined.");return e=h.m(e),h.a.sa(e,h.T.fn),e.extend({trackArrayChanges:!0})},h.T.fn={remove:function(e){for(var t=this.o(),r=[],i="function"!=typeof e||h.v(e)?function(t){return t===e}:e,n=0;n<t.length;n++){var o=t[n];i(o)&&(0===r.length&&this.P(),r.push(o),t.splice(n,1),n--)}return r.length&&this.O(),r},removeAll:function(t){if(t===e){var r=this.o(),i=r.slice(0);return this.P(),r.splice(0,r.length),this.O(),i}return t?this.remove(function(e){return 0<=h.a.l(t,e)}):[]},destroy:function(e){var t=this.o(),r="function"!=typeof e||h.v(e)?function(t){return t===e}:e;this.P();for(var i=t.length-1;i>=0;i--)r(t[i])&&(t[i]._destroy=!0);this.O()},destroyAll:function(t){return t===e?this.destroy(function(){return!0}):t?this.destroy(function(e){return 0<=h.a.l(t,e)}):[]},indexOf:function(e){var t=this();return h.a.l(t,e)},replace:function(e,t){var r=this.indexOf(e);r>=0&&(this.P(),this.o()[r]=t,this.O())}},h.a.r("pop push reverse shift sort splice unshift".split(" "),function(e){h.T.fn[e]=function(){var t=this.o();return this.P(),this.kb(t,e,arguments),t=t[e].apply(t,arguments),this.O(),t}}),h.a.r(["slice"],function(e){h.T.fn[e]=function(){var t=this();return t[e].apply(t,arguments)}}),h.a.na&&h.a.ra(h.T.fn,h.m.fn),h.b("observableArray",h.T);var f="arrayChange";h.Ga.trackArrayChanges=function(e){function t(){if(!r){r=!0;var t=e.notifySubscribers;e.notifySubscribers=function(e,r){return r&&r!==m||++n,t.apply(this,arguments)};var o=[].concat(e.o()||[]);i=null,e.V(function(t){if(t=[].concat(t||[]),e.qb(f)){var r;(!i||n>1)&&(i=h.a.Aa(o,t,{sparse:!0})),r=i,r.length&&e.notifySubscribers(r,f)}o=t,i=null,n=0})}}if(!e.kb){var r=!1,i=null,n=0,o=e.V;e.V=e.subscribe=function(e,r,i){return i===f&&t(),o.apply(this,arguments)},e.kb=function(e,t,o){function a(e,t,r){return s[s.length]={status:e,value:t,index:r}}if(r&&!n){var s=[],l=e.length,u=o.length,c=0;switch(t){case"push":c=l;case"unshift":for(t=0;u>t;t++)a("added",o[t],c+t);break;case"pop":c=l-1;case"shift":l&&a("deleted",e[c],c);break;case"splice":t=Math.min(Math.max(0,0>o[0]?l+o[0]:o[0]),l);for(var l=1===u?l:Math.min(t+(o[1]||0),l),u=t+u-2,c=Math.max(l,u),d=[],m=[],p=2;c>t;++t,++p)l>t&&m.push(a("deleted",e[t],t)),u>t&&d.push(a("added",o[p],t));h.a.nb(m,d);break;default:return}i=s}}}},h.ba=h.h=function(e,t,r){function i(){m=!0,h.a.A(C,function(e,t){t.F()}),C={},w=0,u=!1}function n(){var e=a.throttleEvaluation;e&&e>=0?(clearTimeout(S),S=setTimeout(o,e)):a.wa?a.wa():o()}function o(){if(!c&&!m){if(_&&_()){if(!d)return y(),void 0}else d=!1;c=!0;try{var e=C,r=w;h.k.jb({za:function(t,i){m||(r&&e[i]?(C[i]=e[i],++w,delete e[i],--r):C[i]||(C[i]=t.V(n),++w))},ba:a,pa:!w}),C={},w=0;try{var i=t?p.call(t):p()}finally{h.k.end(),r&&h.a.A(e,function(e,t){t.F()}),u=!1}a.Ka(l,i)&&(a.notifySubscribers(l,"beforeChange"),l=i,a.wa&&!a.throttleEvaluation||a.notifySubscribers(l))}finally{c=!1}w||y()}}function a(){if(0<arguments.length){if("function"!=typeof f)throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.");return f.apply(t,arguments),this}return u&&o(),h.k.zb(a),l}function s(){return u||w>0}var l,u=!0,c=!1,d=!1,m=!1,p=e;if(p&&"object"==typeof p?(r=p,p=r.read):(r=r||{},p||(p=r.read)),"function"!=typeof p)throw Error("Pass a function that returns the value of the ko.computed");var f=r.write,v=r.disposeWhenNodeIsRemoved||r.G||null,g=r.disposeWhen||r.Da,_=g,y=i,C={},w=0,S=null;t||(t=r.owner),h.N.call(a),h.a.sa(a,h.h.fn),a.o=function(){return u&&!w&&o(),l},a.fa=function(){return w},a.Yb="function"==typeof r.write,a.F=function(){y()},a.ga=s;var E=a.Ma;return a.Ma=function(e){E.call(a,e),a.wa=function(){a.bb(l),u=!0,a.cb(a)}},h.s(a,"peek",a.o),h.s(a,"dispose",a.F),h.s(a,"isActive",a.ga),h.s(a,"getDependenciesCount",a.fa),v&&(d=!0,v.nodeType&&(_=function(){return!h.a.Ea(v)||g&&g()})),!0!==r.deferEvaluation&&o(),v&&s()&&v.nodeType&&(y=function(){h.a.u.Ab(v,y),i()},h.a.u.ja(v,y)),a},h.$b=function(e){return h.Ha(e,h.h)},t=h.m.hc,h.h[t]=h.m,h.h.fn={equalityComparer:r},h.h.fn[t]=h.h,h.a.na&&h.a.ra(h.h.fn,h.N.fn),h.b("dependentObservable",h.h),h.b("computed",h.h),h.b("isComputed",h.$b),function(){function t(n,o,a){if(a=a||new i,n=o(n),"object"!=typeof n||null===n||n===e||n instanceof Date||n instanceof String||n instanceof Number||n instanceof Boolean)return n;var s=n instanceof Array?[]:{};return a.save(n,s),r(n,function(r){var i=o(n[r]);switch(typeof i){case"boolean":case"number":case"string":case"function":s[r]=i;break;case"object":case"undefined":var l=a.get(i);s[r]=l!==e?l:t(i,o,a)}}),s}function r(e,t){if(e instanceof Array){for(var r=0;r<e.length;r++)t(r);"function"==typeof e.toJSON&&t("toJSON")}else for(r in e)t(r)}function i(){this.keys=[],this.ab=[]}h.Gb=function(e){if(0==arguments.length)throw Error("When calling ko.toJS, pass the object you want to convert.");return t(e,function(e){for(var t=0;h.v(e)&&10>t;t++)e=e();return e})},h.toJSON=function(e,t,r){return e=h.Gb(e),h.a.Ya(e,t,r)},i.prototype={save:function(e,t){var r=h.a.l(this.keys,e);r>=0?this.ab[r]=t:(this.keys.push(e),this.ab.push(t))},get:function(t){return t=h.a.l(this.keys,t),t>=0?this.ab[t]:e}}}(),h.b("toJS",h.Gb),h.b("toJSON",h.toJSON),function(){h.i={p:function(t){switch(h.a.B(t)){case"option":return!0===t.__ko__hasDomDataOptionValue__?h.a.f.get(t,h.d.options.Pa):7>=h.a.oa?t.getAttributeNode("value")&&t.getAttributeNode("value").specified?t.value:t.text:t.value;case"select":return 0<=t.selectedIndex?h.i.p(t.options[t.selectedIndex]):e;default:return t.value}},X:function(t,r,i){switch(h.a.B(t)){case"option":switch(typeof r){case"string":h.a.f.set(t,h.d.options.Pa,e),"__ko__hasDomDataOptionValue__"in t&&delete t.__ko__hasDomDataOptionValue__,t.value=r;break;default:h.a.f.set(t,h.d.options.Pa,r),t.__ko__hasDomDataOptionValue__=!0,t.value="number"==typeof r?r:""}break;case"select":(""===r||null===r)&&(r=e);for(var n,o=-1,a=0,s=t.options.length;s>a;++a)if(n=h.i.p(t.options[a]),n==r||""==n&&r===e){o=a;break}(i||o>=0||r===e&&1<t.size)&&(t.selectedIndex=o);break;default:(null===r||r===e)&&(r=""),t.value=r}}}}(),h.b("selectExtensions",h.i),h.b("selectExtensions.readValue",h.i.p),h.b("selectExtensions.writeValue",h.i.X),h.g=function(){function e(e){e=h.a.ta(e),123===e.charCodeAt(0)&&(e=e.slice(1,-1));var t,r,a=[],s=e.match(i),l=0;if(s){s.push(",");for(var u,c=0;u=s[c];++c){var d=u.charCodeAt(0);if(44===d){if(0>=l){t&&a.push(r?{key:t,value:r.join("")}:{unknown:t}),t=r=l=0;continue}}else if(58===d){if(!r)continue}else if(47===d&&c&&1<u.length)(d=s[c-1].match(n))&&!o[d[0]]&&(e=e.substr(e.indexOf(u)+1),s=e.match(i),s.push(","),c=-1,u="/");else if(40===d||123===d||91===d)++l;else if(41===d||125===d||93===d)--l;else if(!t&&!r){t=34===d||39===d?u.slice(1,-1):u;continue}r?r.push(u):r=[u]}}return a}var t=["true","false","null","undefined"],r=/^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,i=RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]","g"),n=/[\])"'A-Za-z0-9_$]+$/,o={"in":1,"return":1,"typeof":1},a={};return{aa:[],W:a,Ra:e,qa:function(i,n){function o(e,i){var n,c=h.getBindingHandler(e);(c&&c.preprocess?i=c.preprocess(i,e,o):1)&&((c=a[e])&&(n=i,0<=h.a.l(t,n)?n=!1:(c=n.match(r),n=null===c?!1:c[1]?"Object("+c[1]+")"+c[2]:n),c=n),c&&l.push("'"+e+"':function(_z){"+n+"=_z}"),u&&(i="function(){return "+i+" }"),s.push("'"+e+"':"+i))}n=n||{};var s=[],l=[],u=n.valueAccessors,c="string"==typeof i?e(i):i;return h.a.r(c,function(e){o(e.key||e.unknown,e.value)}),l.length&&o("_ko_property_writers","{"+l.join(",")+" }"),s.join(",")},bc:function(e,t){for(var r=0;r<e.length;r++)if(e[r].key==t)return!0;return!1},va:function(e,t,r,i,n){e&&h.v(e)?!h.ub(e)||n&&e.o()===i||e(i):(e=t.get("_ko_property_writers"))&&e[r]&&e[r](i)}}}(),h.b("expressionRewriting",h.g),h.b("expressionRewriting.bindingRewriteValidators",h.g.aa),h.b("expressionRewriting.parseObjectLiteral",h.g.Ra),h.b("expressionRewriting.preProcessBindings",h.g.qa),h.b("expressionRewriting._twoWayBindings",h.g.W),h.b("jsonExpressionRewriting",h.g),h.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson",h.g.qa),function(){function e(e){return 8==e.nodeType&&a.test(o?e.text:e.nodeValue)}function t(e){return 8==e.nodeType&&s.test(o?e.text:e.nodeValue)}function r(r,i){for(var n=r,o=1,a=[];n=n.nextSibling;){if(t(n)&&(o--,0===o))return a;a.push(n),e(n)&&o++}if(!i)throw Error("Cannot find closing comment tag to match: "+r.nodeValue);return null}function i(e,t){var i=r(e,t);return i?0<i.length?i[i.length-1].nextSibling:e.nextSibling:null}var o=n&&"<!--test-->"===n.createComment("test").text,a=o?/^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/:/^\s*ko(?:\s+([\s\S]+))?\s*$/,s=o?/^\x3c!--\s*\/ko\s*--\x3e$/:/^\s*\/ko\s*$/,l={ul:!0,ol:!0};h.e={Q:{},childNodes:function(t){return e(t)?r(t):t.childNodes},da:function(t){if(e(t)){t=h.e.childNodes(t);for(var r=0,i=t.length;i>r;r++)h.removeNode(t[r])}else h.a.Fa(t)},U:function(t,r){if(e(t)){h.e.da(t);for(var i=t.nextSibling,n=0,o=r.length;o>n;n++)i.parentNode.insertBefore(r[n],i)}else h.a.U(t,r)},yb:function(t,r){e(t)?t.parentNode.insertBefore(r,t.nextSibling):t.firstChild?t.insertBefore(r,t.firstChild):t.appendChild(r)},rb:function(t,r,i){i?e(t)?t.parentNode.insertBefore(r,i.nextSibling):i.nextSibling?t.insertBefore(r,i.nextSibling):t.appendChild(r):h.e.yb(t,r)},firstChild:function(r){return e(r)?!r.nextSibling||t(r.nextSibling)?null:r.nextSibling:r.firstChild},nextSibling:function(r){return e(r)&&(r=i(r)),r.nextSibling&&t(r.nextSibling)?null:r.nextSibling},Xb:e,lc:function(e){return(e=(o?e.text:e.nodeValue).match(a))?e[1]:null},wb:function(r){if(l[h.a.B(r)]){var n=r.firstChild;if(n)do if(1===n.nodeType){var o;o=n.firstChild;var a=null;if(o)do if(a)a.push(o);else if(e(o)){var s=i(o,!0);s?o=s:a=[o]}else t(o)&&(a=[o]);while(o=o.nextSibling);if(o=a)for(a=n.nextSibling,s=0;s<o.length;s++)a?r.insertBefore(o[s],a):r.appendChild(o[s])}while(n=n.nextSibling)}}}}(),h.b("virtualElements",h.e),h.b("virtualElements.allowedBindings",h.e.Q),h.b("virtualElements.emptyNode",h.e.da),h.b("virtualElements.insertAfter",h.e.rb),h.b("virtualElements.prepend",h.e.yb),h.b("virtualElements.setDomNodeChildren",h.e.U),function(){h.J=function(){this.Nb={}},h.a.extend(h.J.prototype,{nodeHasBindings:function(e){switch(e.nodeType){case 1:return null!=e.getAttribute("data-bind");case 8:return h.e.Xb(e);default:return!1}},getBindings:function(e,t){var r=this.getBindingsString(e,t);return r?this.parseBindingsString(r,t,e):null},getBindingAccessors:function(e,t){var r=this.getBindingsString(e,t);return r?this.parseBindingsString(r,t,e,{valueAccessors:!0}):null},getBindingsString:function(e){switch(e.nodeType){case 1:return e.getAttribute("data-bind");case 8:return h.e.lc(e);default:return null}},parseBindingsString:function(e,t,r,i){try{var n,o=this.Nb,a=e+(i&&i.valueAccessors||"");if(!(n=o[a])){var s,l="with($context){with($data||{}){return{"+h.g.qa(e,i)+"}}}";s=new Function("$context","$element",l),n=o[a]=s}return n(t,r)}catch(u){throw u.message="Unable to parse bindings.\nBindings value: "+e+"\nMessage: "+u.message,u}}}),h.J.instance=new h.J}(),h.b("bindingProvider",h.J),function(){function t(e){return function(){return e}}function r(e){return e()}function n(e){return h.a.Oa(h.k.t(e),function(t,r){return function(){return e()[r]}})}function o(e,t){return n(this.getBindings.bind(this,e,t))}function s(e,t,r){var i,n=h.e.firstChild(t),o=h.J.instance,a=o.preprocessNode;if(a){for(;i=n;)n=h.e.nextSibling(i),a.call(o,i);n=h.e.firstChild(t)}for(;i=n;)n=h.e.nextSibling(i),l(e,i,r)}function l(e,t,r){var i=!0,n=1===t.nodeType;n&&h.e.wb(t),(n&&r||h.J.instance.nodeHasBindings(t))&&(i=c(t,null,e,r).shouldBindDescendants),i&&!m[h.a.B(t)]&&s(e,t,!n)}function u(e){var t=[],r={},i=[];return h.a.A(e,function n(o){if(!r[o]){var a=h.getBindingHandler(o);a&&(a.after&&(i.push(o),h.a.r(a.after,function(t){if(e[t]){if(-1!==h.a.l(i,t))throw Error("Cannot combine the following bindings, because they have a cyclic dependency: "+i.join(", "));n(t)}}),i.length--),t.push({key:o,pb:a})),r[o]=!0}}),t}function c(t,i,n,a){var s=h.a.f.get(t,p);if(!i){if(s)throw Error("You cannot apply bindings multiple times to the same element.");h.a.f.set(t,p,!0)}!s&&a&&h.Eb(t,n);var l;if(i&&"function"!=typeof i)l=i;else{var c=h.J.instance,d=c.getBindingAccessors||o,m=h.h(function(){return(l=i?i(n,t):d.call(c,t,n))&&n.D&&n.D(),l},null,{G:t});l&&m.ga()||(m=null)}var f;if(l){var v=m?function(e){return function(){return r(m()[e])}}:function(e){return l[e]},g=function(){return h.a.Oa(m?m():l,r)};g.get=function(e){return l[e]&&r(v(e))},g.has=function(e){return e in l},a=u(l),h.a.r(a,function(r){var i=r.pb.init,o=r.pb.update,a=r.key;if(8===t.nodeType&&!h.e.Q[a])throw Error("The binding '"+a+"' cannot be used with virtual elements");try{"function"==typeof i&&h.k.t(function(){var r=i(t,v(a),g,n.$data,n);if(r&&r.controlsDescendantBindings){if(f!==e)throw Error("Multiple bindings ("+f+" and "+a+") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.");f=a}}),"function"==typeof o&&h.h(function(){o(t,v(a),g,n.$data,n)},null,{G:t})}catch(s){throw s.message='Unable to process binding "'+a+": "+l[a]+'"\nMessage: '+s.message,s}})}return{shouldBindDescendants:f===e}}function d(e){return e&&e instanceof h.I?e:new h.I(e)}h.d={};var m={script:!0};h.getBindingHandler=function(e){return h.d[e]},h.I=function(t,r,i,n){var o,a=this,s="function"==typeof t&&!h.v(t),l=h.h(function(){var e=s?t():t,o=h.a.c(e);return r?(r.D&&r.D(),h.a.extend(a,r),l&&(a.D=l)):(a.$parents=[],a.$root=o,a.ko=h),a.$rawData=e,a.$data=o,i&&(a[i]=o),n&&n(a,r,o),a.$data},null,{Da:function(){return o&&!h.a.eb(o)},G:!0});l.ga()&&(a.D=l,l.equalityComparer=null,o=[],l.Jb=function(t){o.push(t),h.a.u.ja(t,function(t){h.a.ma(o,t),o.length||(l.F(),a.D=l=e)})})},h.I.prototype.createChildContext=function(e,t,r){return new h.I(e,this,t,function(e,t){e.$parentContext=t,e.$parent=t.$data,e.$parents=(t.$parents||[]).slice(0),e.$parents.unshift(e.$parent),r&&r(e)})},h.I.prototype.extend=function(e){return new h.I(this.D||this.$data,this,null,function(t,r){t.$rawData=r.$rawData,h.a.extend(t,"function"==typeof e?e():e)})};var p=h.a.f.L(),f=h.a.f.L();h.Eb=function(e,t){return 2!=arguments.length?h.a.f.get(e,f):(h.a.f.set(e,f,t),t.D&&t.D.Jb(e),void 0)},h.xa=function(e,t,r){return 1===e.nodeType&&h.e.wb(e),c(e,t,d(r),!0)},h.Lb=function(e,r,i){return i=d(i),h.xa(e,"function"==typeof r?n(r.bind(null,i,e)):h.a.Oa(r,t),i)},h.gb=function(e,t){1!==t.nodeType&&8!==t.nodeType||s(d(e),t,!0)},h.fb=function(e,t){if(!a&&i.jQuery&&(a=i.jQuery),t&&1!==t.nodeType&&8!==t.nodeType)throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node");t=t||i.document.body,l(d(e),t,!0)},h.Ca=function(t){switch(t.nodeType){case 1:case 8:var r=h.Eb(t);if(r)return r;if(t.parentNode)return h.Ca(t.parentNode)}return e},h.Pb=function(t){return(t=h.Ca(t))?t.$data:e},h.b("bindingHandlers",h.d),h.b("applyBindings",h.fb),h.b("applyBindingsToDescendants",h.gb),h.b("applyBindingAccessorsToNode",h.xa),h.b("applyBindingsToNode",h.Lb),h.b("contextFor",h.Ca),h.b("dataFor",h.Pb)}();var v={"class":"className","for":"htmlFor"};h.d.attr={update:function(t,r){var i=h.a.c(r())||{};h.a.A(i,function(r,i){i=h.a.c(i);var n=!1===i||null===i||i===e;n&&t.removeAttribute(r),8>=h.a.oa&&r in v?(r=v[r],n?t.removeAttribute(r):t[r]=i):n||t.setAttribute(r,i.toString()),"name"===r&&h.a.Cb(t,n?"":i.toString())})}},function(){h.d.checked={after:["value","attr"],init:function(t,r,i){function n(){return i.has("checkedValue")?h.a.c(i.get("checkedValue")):t.value}function o(){var e=t.checked,o=d?n():e;if(!h.ca.pa()&&(!l||e)){var a=h.k.t(r);u?c!==o?(e&&(h.a.Y(a,o,!0),h.a.Y(a,c,!1)),c=o):h.a.Y(a,o,e):h.g.va(a,i,"checked",o,!0)}}function a(){var e=h.a.c(r());t.checked=u?0<=h.a.l(e,n()):s?e:n()===e}var s="checkbox"==t.type,l="radio"==t.type;if(s||l){var u=s&&h.a.c(r())instanceof Array,c=u?n():e,d=l||u;l&&!t.name&&h.d.uniqueName.init(t,function(){return!0}),h.ba(o,null,{G:t}),h.a.q(t,"click",o),h.ba(a,null,{G:t})}}},h.g.W.checked=!0,h.d.checkedValue={update:function(e,t){e.value=h.a.c(t())}}}(),h.d.css={update:function(e,t){var r=h.a.c(t());"object"==typeof r?h.a.A(r,function(t,r){r=h.a.c(r),h.a.ua(e,t,r)}):(r=String(r||""),h.a.ua(e,e.__ko__cssValue,!1),e.__ko__cssValue=r,h.a.ua(e,r,!0))}},h.d.enable={update:function(e,t){var r=h.a.c(t());r&&e.disabled?e.removeAttribute("disabled"):r||e.disabled||(e.disabled=!0)}},h.d.disable={update:function(e,t){h.d.enable.update(e,function(){return!h.a.c(t())})}},h.d.event={init:function(e,t,r,i,n){var o=t()||{};h.a.A(o,function(o){"string"==typeof o&&h.a.q(e,o,function(e){var a,s=t()[o];if(s){try{var l=h.a.R(arguments);i=n.$data,l.unshift(i),a=s.apply(i,l)}finally{!0!==a&&(e.preventDefault?e.preventDefault():e.returnValue=!1)}!1===r.get(o+"Bubble")&&(e.cancelBubble=!0,e.stopPropagation&&e.stopPropagation())}})})}},h.d.foreach={vb:function(e){return function(){var t=e(),r=h.a.Sa(t);return r&&"number"!=typeof r.length?(h.a.c(t),{foreach:r.data,as:r.as,includeDestroyed:r.includeDestroyed,afterAdd:r.afterAdd,beforeRemove:r.beforeRemove,afterRender:r.afterRender,beforeMove:r.beforeMove,afterMove:r.afterMove,templateEngine:h.K.Ja}):{foreach:t,templateEngine:h.K.Ja}}},init:function(e,t){return h.d.template.init(e,h.d.foreach.vb(t))},update:function(e,t,r,i,n){return h.d.template.update(e,h.d.foreach.vb(t),r,i,n)}},h.g.aa.foreach=!1,h.e.Q.foreach=!0,h.d.hasfocus={init:function(e,t,r){function i(i){e.__ko_hasfocusUpdating=!0;var n=e.ownerDocument;if("activeElement"in n){var o;try{o=n.activeElement}catch(a){o=n.body}i=o===e}n=t(),h.g.va(n,r,"hasfocus",i,!0),e.__ko_hasfocusLastValue=i,e.__ko_hasfocusUpdating=!1}var n=i.bind(null,!0),o=i.bind(null,!1);h.a.q(e,"focus",n),h.a.q(e,"focusin",n),h.a.q(e,"blur",o),h.a.q(e,"focusout",o)},update:function(e,t){var r=!!h.a.c(t());e.__ko_hasfocusUpdating||e.__ko_hasfocusLastValue===r||(r?e.focus():e.blur(),h.k.t(h.a.ha,null,[e,r?"focusin":"focusout"]))}},h.g.W.hasfocus=!0,h.d.hasFocus=h.d.hasfocus,h.g.W.hasFocus=!0,h.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(e,t){h.a.Va(e,t())}},c("if"),c("ifnot",!1,!0),c("with",!0,!1,function(e,t){return e.createChildContext(t)});var g={};h.d.options={init:function(e){if("select"!==h.a.B(e))throw Error("options binding applies only to SELECT elements");for(;0<e.length;)e.remove(0);return{controlsDescendantBindings:!0}},update:function(t,r,i){function n(){return h.a.la(t.options,function(e){return e.selected
})}function o(e,t,r){var i=typeof t;return"function"==i?t(e):"string"==i?e[t]:r}function a(e,r){if(d.length){var i=0<=h.a.l(d,h.i.p(r[0]));h.a.Db(r[0],i),m&&!i&&h.k.t(h.a.ha,null,[t,"change"])}}var s=0!=t.length&&t.multiple?t.scrollTop:null,l=h.a.c(r()),u=i.get("optionsIncludeDestroyed");r={};var c,d;d=t.multiple?h.a.ya(n(),h.i.p):0<=t.selectedIndex?[h.i.p(t.options[t.selectedIndex])]:[],l&&("undefined"==typeof l.length&&(l=[l]),c=h.a.la(l,function(t){return u||t===e||null===t||!h.a.c(t._destroy)}),i.has("optionsCaption")&&(l=h.a.c(i.get("optionsCaption")),null!==l&&l!==e&&c.unshift(g)));var m=!1;r.beforeRemove=function(e){t.removeChild(e)},l=a,i.has("optionsAfterRender")&&(l=function(t,r){a(0,r),h.k.t(i.get("optionsAfterRender"),null,[r[0],t!==g?t:e])}),h.a.Ua(t,c,function(r,n,a){return a.length&&(d=a[0].selected?[h.i.p(a[0])]:[],m=!0),n=t.ownerDocument.createElement("option"),r===g?(h.a.Xa(n,i.get("optionsCaption")),h.i.X(n,e)):(a=o(r,i.get("optionsValue"),r),h.i.X(n,h.a.c(a)),r=o(r,i.get("optionsText"),a),h.a.Xa(n,r)),[n]},r,l),h.k.t(function(){i.get("valueAllowUnset")&&i.has("value")?h.i.X(t,h.a.c(i.get("value")),!0):(t.multiple?d.length&&n().length<d.length:d.length&&0<=t.selectedIndex?h.i.p(t.options[t.selectedIndex])!==d[0]:d.length||0<=t.selectedIndex)&&h.a.ha(t,"change")}),h.a.Tb(t),s&&20<Math.abs(s-t.scrollTop)&&(t.scrollTop=s)}},h.d.options.Pa=h.a.f.L(),h.d.selectedOptions={after:["options","foreach"],init:function(e,t,r){h.a.q(e,"change",function(){var i=t(),n=[];h.a.r(e.getElementsByTagName("option"),function(e){e.selected&&n.push(h.i.p(e))}),h.g.va(i,r,"selectedOptions",n)})},update:function(e,t){if("select"!=h.a.B(e))throw Error("values binding applies only to SELECT elements");var r=h.a.c(t());r&&"number"==typeof r.length&&h.a.r(e.getElementsByTagName("option"),function(e){var t=0<=h.a.l(r,h.i.p(e));h.a.Db(e,t)})}},h.g.W.selectedOptions=!0,h.d.style={update:function(e,t){var r=h.a.c(t()||{});h.a.A(r,function(t,r){r=h.a.c(r),e.style[t]=r||""})}},h.d.submit={init:function(e,t,r,i,n){if("function"!=typeof t())throw Error("The value for a submit binding must be a function");h.a.q(e,"submit",function(r){var i,o=t();try{i=o.call(n.$data,e)}finally{!0!==i&&(r.preventDefault?r.preventDefault():r.returnValue=!1)}})}},h.d.text={init:function(){return{controlsDescendantBindings:!0}},update:function(e,t){h.a.Xa(e,t())}},h.e.Q.text=!0,h.d.uniqueName={init:function(e,t){if(t()){var r="ko_unique_"+ ++h.d.uniqueName.Ob;h.a.Cb(e,r)}}},h.d.uniqueName.Ob=0,h.d.value={after:["options","foreach"],init:function(e,t,r){function i(){a=!1;var i=t(),n=h.i.p(e);h.g.va(i,r,"value",n)}var n=["change"],o=r.get("valueUpdate"),a=!1;o&&("string"==typeof o&&(o=[o]),h.a.$(n,o),n=h.a.ib(n)),!h.a.oa||"input"!=e.tagName.toLowerCase()||"text"!=e.type||"off"==e.autocomplete||e.form&&"off"==e.form.autocomplete||-1!=h.a.l(n,"propertychange")||(h.a.q(e,"propertychange",function(){a=!0}),h.a.q(e,"focus",function(){a=!1}),h.a.q(e,"blur",function(){a&&i()})),h.a.r(n,function(t){var r=i;h.a.kc(t,"after")&&(r=function(){setTimeout(i,0)},t=t.substring(5)),h.a.q(e,t,r)})},update:function(e,t,r){var i=h.a.c(t());if(t=h.i.p(e),i!==t)if("select"===h.a.B(e)){var n=r.get("valueAllowUnset");r=function(){h.i.X(e,i,n)},r(),n||i===h.i.p(e)?setTimeout(r,0):h.k.t(h.a.ha,null,[e,"change"])}else h.i.X(e,i)}},h.g.W.value=!0,h.d.visible={update:function(e,t){var r=h.a.c(t()),i="none"!=e.style.display;r&&!i?e.style.display="":!r&&i&&(e.style.display="none")}},function(e){h.d[e]={init:function(t,r,i,n,o){return h.d.event.init.call(this,t,function(){var t={};return t[e]=r(),t},i,n,o)}}}("click"),h.C=function(){},h.C.prototype.renderTemplateSource=function(){throw Error("Override renderTemplateSource")},h.C.prototype.createJavaScriptEvaluatorBlock=function(){throw Error("Override createJavaScriptEvaluatorBlock")},h.C.prototype.makeTemplateSource=function(e,t){if("string"==typeof e){t=t||n;var r=t.getElementById(e);if(!r)throw Error("Cannot find template with ID "+e);return new h.n.j(r)}if(1==e.nodeType||8==e.nodeType)return new h.n.Z(e);throw Error("Unknown template type: "+e)},h.C.prototype.renderTemplate=function(e,t,r,i){return e=this.makeTemplateSource(e,i),this.renderTemplateSource(e,t,r)},h.C.prototype.isTemplateRewritten=function(e,t){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(e,t).data("isRewritten")},h.C.prototype.rewriteTemplate=function(e,t,r){e=this.makeTemplateSource(e,r),t=t(e.text()),e.text(t),e.data("isRewritten",!0)},h.b("templateEngine",h.C),h.Za=function(){function e(e,t,r,i){e=h.g.Ra(e);for(var n=h.g.aa,o=0;o<e.length;o++){var a=e[o].key;if(n.hasOwnProperty(a)){var s=n[a];if("function"==typeof s){if(a=s(e[o].value))throw Error(a)}else if(!s)throw Error("This template engine does not support the '"+a+"' binding within its templates")}}return r="ko.__tr_ambtns(function($context,$element){return(function(){return{ "+h.g.qa(e,{valueAccessors:!0})+" } })()},'"+r.toLowerCase()+"')",i.createJavaScriptEvaluatorBlock(r)+t}var t=/(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi,r=/\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g;return{Ub:function(e,t,r){t.isTemplateRewritten(e,r)||t.rewriteTemplate(e,function(e){return h.Za.dc(e,t)},r)},dc:function(i,n){return i.replace(t,function(t,r,i,o,a){return e(a,r,i,n)}).replace(r,function(t,r){return e(r,"<!-- ko -->","#comment",n)})},Mb:function(e,t){return h.w.Na(function(r,i){var n=r.nextSibling;n&&n.nodeName.toLowerCase()===t&&h.xa(n,e,i)})}}}(),h.b("__tr_ambtns",h.Za.Mb),function(){h.n={},h.n.j=function(e){this.j=e},h.n.j.prototype.text=function(){var e=h.a.B(this.j),e="script"===e?"text":"textarea"===e?"value":"innerHTML";if(0==arguments.length)return this.j[e];var t=arguments[0];"innerHTML"===e?h.a.Va(this.j,t):this.j[e]=t};var t=h.a.f.L()+"_";h.n.j.prototype.data=function(e){return 1===arguments.length?h.a.f.get(this.j,t+e):(h.a.f.set(this.j,t+e,arguments[1]),void 0)};var r=h.a.f.L();h.n.Z=function(e){this.j=e},h.n.Z.prototype=new h.n.j,h.n.Z.prototype.text=function(){if(0==arguments.length){var t=h.a.f.get(this.j,r)||{};return t.$a===e&&t.Ba&&(t.$a=t.Ba.innerHTML),t.$a}h.a.f.set(this.j,r,{$a:arguments[0]})},h.n.j.prototype.nodes=function(){return 0==arguments.length?(h.a.f.get(this.j,r)||{}).Ba:(h.a.f.set(this.j,r,{Ba:arguments[0]}),void 0)},h.b("templateSources",h.n),h.b("templateSources.domElement",h.n.j),h.b("templateSources.anonymousTemplate",h.n.Z)}(),function(){function t(e,t,r){var i;for(t=h.e.nextSibling(t);e&&(i=e)!==t;)e=h.e.nextSibling(i),r(i,e)}function r(e,r){if(e.length){var i=e[0],n=e[e.length-1],o=i.parentNode,a=h.J.instance,s=a.preprocessNode;if(s){if(t(i,n,function(e,t){var r=e.previousSibling,o=s.call(a,e);o&&(e===i&&(i=o[0]||t),e===n&&(n=o[o.length-1]||r))}),e.length=0,!i)return;i===n?e.push(i):(e.push(i,n),h.a.ea(e,o))}t(i,n,function(e){1!==e.nodeType&&8!==e.nodeType||h.fb(r,e)}),t(i,n,function(e){1!==e.nodeType&&8!==e.nodeType||h.w.Ib(e,[r])}),h.a.ea(e,o)}}function i(e){return e.nodeType?e:0<e.length?e[0]:null}function n(e,t,n,a,s){s=s||{};var l=e&&i(e),l=l&&l.ownerDocument,u=s.templateEngine||o;if(h.Za.Ub(n,u,l),n=u.renderTemplate(n,a,s,l),"number"!=typeof n.length||0<n.length&&"number"!=typeof n[0].nodeType)throw Error("Template engine must return an array of DOM nodes");switch(l=!1,t){case"replaceChildren":h.e.U(e,n),l=!0;break;case"replaceNode":h.a.Bb(e,n),l=!0;break;case"ignoreTargetNode":break;default:throw Error("Unknown renderMode: "+t)}return l&&(r(n,a),s.afterRender&&h.k.t(s.afterRender,null,[n,a.$data])),n}var o;h.Wa=function(t){if(t!=e&&!(t instanceof h.C))throw Error("templateEngine must inherit from ko.templateEngine");o=t},h.Ta=function(t,r,a,s,l){if(a=a||{},(a.templateEngine||o)==e)throw Error("Set a template engine before calling renderTemplate");if(l=l||"replaceChildren",s){var u=i(s);return h.h(function(){var e=r&&r instanceof h.I?r:new h.I(h.a.c(r)),o=h.v(t)?t():"function"==typeof t?t(e.$data,e):t,e=n(s,l,o,e,a);"replaceNode"==l&&(s=e,u=i(s))},null,{Da:function(){return!u||!h.a.Ea(u)},G:u&&"replaceNode"==l?u.parentNode:u})}return h.w.Na(function(e){h.Ta(t,r,a,e,"replaceNode")})},h.jc=function(t,i,o,a,s){function l(e,t){r(t,c),o.afterRender&&o.afterRender(t,e)}function u(e,r){c=s.createChildContext(e,o.as,function(e){e.$index=r});var i="function"==typeof t?t(e,c):t;return n(null,"ignoreTargetNode",i,c,o)}var c;return h.h(function(){var t=h.a.c(i)||[];"undefined"==typeof t.length&&(t=[t]),t=h.a.la(t,function(t){return o.includeDestroyed||t===e||null===t||!h.a.c(t._destroy)}),h.k.t(h.a.Ua,null,[a,t,u,o,l])},null,{G:a})};var a=h.a.f.L();h.d.template={init:function(e,t){var r=h.a.c(t());return"string"==typeof r||r.name?h.e.da(e):(r=h.e.childNodes(e),r=h.a.ec(r),new h.n.Z(e).nodes(r)),{controlsDescendantBindings:!0}},update:function(t,r,i,n,o){var s,l=r();r=h.a.c(l),i=!0,n=null,"string"==typeof r?r={}:(l=r.name,"if"in r&&(i=h.a.c(r["if"])),i&&"ifnot"in r&&(i=!h.a.c(r.ifnot)),s=h.a.c(r.data)),"foreach"in r?n=h.jc(l||t,i&&r.foreach||[],r,t,o):i?(o="data"in r?o.createChildContext(s,r.as):o,n=h.Ta(l||t,o,r,t)):h.e.da(t),o=n,(s=h.a.f.get(t,a))&&"function"==typeof s.F&&s.F(),h.a.f.set(t,a,o&&o.ga()?o:e)}},h.g.aa.template=function(e){return e=h.g.Ra(e),1==e.length&&e[0].unknown||h.g.bc(e,"name")?null:"This template engine does not support anonymous templates nested within its templates"},h.e.Q.template=!0}(),h.b("setTemplateEngine",h.Wa),h.b("renderTemplate",h.Ta),h.a.nb=function(e,t,r){if(e.length&&t.length){var i,n,o,a,s;for(i=n=0;(!r||r>i)&&(a=e[n]);++n){for(o=0;s=t[o];++o)if(a.value===s.value){a.moved=s.index,s.moved=a.index,t.splice(o,1),i=o=0;break}i+=o}}},h.a.Aa=function(){function e(e,t,r,i,n){var o,a,s,l,u,c=Math.min,d=Math.max,m=[],p=e.length,f=t.length,v=f-p||1,g=p+f+1;for(o=0;p>=o;o++)for(l=s,m.push(s=[]),u=c(f,o+v),a=d(0,o-1);u>=a;a++)s[a]=a?o?e[o-1]===t[a-1]?l[a-1]:c(l[a]||g,s[a-1]||g)+1:a+1:o+1;for(c=[],d=[],v=[],o=p,a=f;o||a;)f=m[o][a]-1,a&&f===m[o][a-1]?d.push(c[c.length]={status:r,value:t[--a],index:a}):o&&f===m[o-1][a]?v.push(c[c.length]={status:i,value:e[--o],index:o}):(--a,--o,n.sparse||c.push({status:"retained",value:t[a]}));return h.a.nb(d,v,10*p),c.reverse()}return function(t,r,i){return i="boolean"==typeof i?{dontLimitMoves:i}:i||{},t=t||[],r=r||[],t.length<=r.length?e(t,r,"added","deleted",i):e(r,t,"deleted","added",i)}}(),h.b("utils.compareArrays",h.a.Aa),function(){function t(t,r,i,n,o){var a=[],s=h.h(function(){var e=r(i,o,h.a.ea(a,t))||[];0<a.length&&(h.a.Bb(a,e),n&&h.k.t(n,null,[i,e,o])),a.length=0,h.a.$(a,e)},null,{G:t,Da:function(){return!h.a.eb(a)}});return{S:a,h:s.ga()?s:e}}var r=h.a.f.L();h.a.Ua=function(i,n,o,a,s){function l(e,t){C=d[t],g!==t&&(E[e]=C),C.Ia(g++),h.a.ea(C.S,i),f.push(C),y.push(C)}function u(e,t){if(e)for(var r=0,i=t.length;i>r;r++)t[r]&&h.a.r(t[r].S,function(i){e(i,r,t[r].ka)})}n=n||[],a=a||{};var c=h.a.f.get(i,r)===e,d=h.a.f.get(i,r)||[],m=h.a.ya(d,function(e){return e.ka}),p=h.a.Aa(m,n,a.dontLimitMoves),f=[],v=0,g=0,_=[],y=[];n=[];for(var C,w,S,E=[],m=[],b=0;w=p[b];b++)switch(S=w.moved,w.status){case"deleted":S===e&&(C=d[v],C.h&&C.h.F(),_.push.apply(_,h.a.ea(C.S,i)),a.beforeRemove&&(n[b]=C,y.push(C))),v++;break;case"retained":l(b,v++);break;case"added":S!==e?l(b,S):(C={ka:w.value,Ia:h.m(g++)},f.push(C),y.push(C),c||(m[b]=C))}u(a.beforeMove,E),h.a.r(_,a.beforeRemove?h.M:h.removeNode);for(var T,b=0,c=h.e.firstChild(i);C=y[b];b++){for(C.S||h.a.extend(C,t(i,o,C.ka,s,C.Ia)),v=0;p=C.S[v];c=p.nextSibling,T=p,v++)p!==c&&h.e.rb(i,p,T);!C.Zb&&s&&(s(C.ka,C.S,C.Ia),C.Zb=!0)}u(a.beforeRemove,n),u(a.afterMove,E),u(a.afterAdd,m),h.a.f.set(i,r,f)}}(),h.b("utils.setDomNodeChildrenFromArrayMapping",h.a.Ua),h.K=function(){this.allowTemplateRewriting=!1},h.K.prototype=new h.C,h.K.prototype.renderTemplateSource=function(e){var t=(9>h.a.oa?0:e.nodes)?e.nodes():null;return t?h.a.R(t.cloneNode(!0).childNodes):(e=e.text(),h.a.Qa(e))},h.K.Ja=new h.K,h.Wa(h.K.Ja),h.b("nativeTemplateEngine",h.K),function(){h.La=function(){var e=this.ac=function(){if(!a||!a.tmpl)return 0;try{if(0<=a.tmpl.tag.tmpl.open.toString().indexOf("__"))return 2}catch(e){}return 1}();this.renderTemplateSource=function(t,r,i){if(i=i||{},2>e)throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.");var o=t.data("precompiled");return o||(o=t.text()||"",o=a.template(null,"{{ko_with $item.koBindingContext}}"+o+"{{/ko_with}}"),t.data("precompiled",o)),t=[r.$data],r=a.extend({koBindingContext:r},i.templateOptions),r=a.tmpl(o,t,r),r.appendTo(n.createElement("div")),a.fragments={},r},this.createJavaScriptEvaluatorBlock=function(e){return"{{ko_code ((function() { return "+e+" })()) }}"},this.addTemplate=function(e,t){n.write("<script type='text/html' id='"+e+"'>"+t+"</script>")},e>0&&(a.tmpl.tag.ko_code={open:"__.push($1 || '');"},a.tmpl.tag.ko_with={open:"with($1) {",close:"} "})},h.La.prototype=new h.C;var e=new h.La;0<e.ac&&h.Wa(e),h.b("jqueryTmplTemplateEngine",h.La)}()})}()}(),r("ThirdParty/knockout-es5",[],function(){"use strict";function e(e,r){if(!e)throw new Error("When calling ko.track, you must pass an object as the first parameter.");var n=this,o=t(e,!0);return r=r||Object.getOwnPropertyNames(e),r.forEach(function(t){if(t!==h&&t!==d&&!(t in o)){var r=e[t],a=r instanceof Array,s=n.isObservable(r)?r:a?n.observableArray(r):n.observable(r);Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get:s,set:n.isWriteableObservable(s)?s:void 0}),o[t]=s,a&&i(n,s)}}),e}function t(e,t){var r=e[h];return!r&&t&&(r={},Object.defineProperty(e,h,{value:r})),r}function r(t,r,i){var n=this,o={owner:t,deferEvaluation:!0};if("function"==typeof i)o.read=i;else{if("value"in i)throw new Error('For ko.defineProperty, you must not specify a "value" for the property. You must provide a "get" function.');if("function"!=typeof i.get)throw new Error('For ko.defineProperty, the third parameter must be either an evaluator function, or an options object containing a function called "get".');o.read=i.get,o.write=i.set}return t[r]=n.computed(o),e.call(n,t,[r]),t}function i(e,t){var r=null;e.computed(function(){r&&(r.dispose(),r=null);var i=t();i instanceof Array&&(r=n(e,t,i))})}function n(e,t,r){var i=o(e,r);return i.subscribe(t)}function o(e,t){var r=t[d];if(!r){r=new e.subscribable,Object.defineProperty(t,d,{value:r});var i={};a(t,r,i),s(e,t,r,i)}return r}function a(e,t,r){["pop","push","reverse","shift","sort","splice","unshift"].forEach(function(i){var n=e[i];e[i]=function(){var e=n.apply(this,arguments);return r.pause!==!0&&t.notifySubscribers(this),e}})}function s(e,t,r,i){["remove","removeAll","destroy","destroyAll","replace"].forEach(function(n){Object.defineProperty(t,n,{enumerable:!1,value:function(){var o;i.pause=!0;try{o=e.observableArray.fn[n].apply(e.observableArray(t),arguments)}finally{i.pause=!1}return r.notifySubscribers(t),o}})})}function l(e,r){if(!e)return null;var i=t(e,!1);return i&&i[r]||null}function u(e,t){var r=l(e,t);r&&r.valueHasMutated()}function c(t){t.track=e,t.getObservable=l,t.valueHasMutated=u,t.defineProperty=r}var h="__knockoutObservables",d="__knockoutSubscribable";return{attachToKo:c}}),r("Widgets/SvgPathBindingHandler",[],function(){"use strict";var e="http://www.w3.org/2000/svg",t="cesium-svgPath-svg",r={register:function(r){r.bindingHandlers.cesiumSvgPath={init:function(i,n){var o=document.createElementNS(e,"svg:svg");o.setAttribute("class",t);var a=document.createElementNS(e,"path");return o.appendChild(a),r.virtualElements.setDomNodeChildren(i,[o]),r.computed({read:function(){var e=r.unwrap(n());a.setAttribute("d",r.unwrap(e.path));var i=r.unwrap(e.width),s=r.unwrap(e.height);o.setAttribute("width",i),o.setAttribute("height",s),o.setAttribute("viewBox","0 0 "+i+" "+s),e.css&&o.setAttribute("class",t+" "+r.unwrap(e.css))},disposeWhenNodeIsRemoved:i}),{controlsDescendantBindings:!0}}},r.virtualElements.allowedBindings.cesiumSvgPath=!0}};return r}),r("ThirdParty/knockout",["./knockout-3.1.0","./knockout-es5","../Widgets/SvgPathBindingHandler"],function(e,t,r){"use strict";return t.attachToKo(e),r.register(e),e}),r("Widgets/subscribeAndEvaluate",["../ThirdParty/knockout"],function(e){"use strict";var t=function(t,r,i,n,o){return i.call(n,t[r]),e.getObservable(t,r).subscribe(i,n,o)};return t}),r("Widgets/Animation/Animation",["../../Core/Color","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../getElement","../subscribeAndEvaluate"],function(e,t,r,i,n,o,a){"use strict";function s(t){return e.fromCssColorString(window.getComputedStyle(t).getPropertyValue("color"))}function l(e){var t=document.createElementNS(v,e.tagName);for(var r in e)if(e.hasOwnProperty(r)&&"tagName"!==r)if("children"===r){var i,n=e.children.length;for(i=0;n>i;++i)t.appendChild(l(e.children[i]))}else 0===r.indexOf("xlink:")?t.setAttributeNS(g,r.substring(6),e[r]):"textContent"===r?t.textContent=e[r]:t.setAttribute(r,e[r]);return t}function u(e,t,r){var i=document.createElementNS(v,"text");i.setAttribute("x",e),i.setAttribute("y",t),i.setAttribute("class","cesium-animation-svgText");var n=document.createElementNS(v,"tspan");return n.textContent=r,i.appendChild(n),i}function c(e,t,r){e.setAttribute("transform","translate(100,100) rotate("+r+")"),t.setAttribute("transform","rotate("+r+")")}function h(e,t){var r=t.alpha,i=1-r;return x.red=e.red*i+t.red*r,x.green=e.green*i+t.green*r,x.blue=e.blue*i+t.blue*r,x.toCssColorString()}function d(e,t,r){var i={tagName:"g","class":"cesium-animation-rectButton",transform:"translate("+e+","+t+")",children:[{tagName:"rect","class":"cesium-animation-buttonGlow",width:32,height:32,rx:2,ry:2},{tagName:"rect","class":"cesium-animation-buttonMain",width:32,height:32,rx:4,ry:4},{tagName:"use","class":"cesium-animation-buttonPath","xlink:href":r},{tagName:"title",textContent:""}]};return l(i)}function m(e,t,r){var i={tagName:"g","class":"cesium-animation-rectButton",transform:"translate("+e+","+t+")",children:[{tagName:"use","class":"cesium-animation-buttonGlow","xlink:href":"#animation_pathWingButton"},{tagName:"use","class":"cesium-animation-buttonMain","xlink:href":"#animation_pathWingButton"},{tagName:"use","class":"cesium-animation-buttonPath","xlink:href":r},{tagName:"title",textContent:""}]};return l(i)}function p(e,t){var r=e._viewModel,i=r.shuttleRingDragging;if(!i||f===e)if("mousedown"===t.type||i&&"mousemove"===t.type||"touchstart"===t.type&&1===t.touches.length||i&&"touchmove"===t.type&&1===t.touches.length){var n,o,a=e._centerX,s=e._centerY,l=e._svgNode,u=l.getBoundingClientRect();if("touchstart"===t.type||"touchmove"===t.type?(n=t.touches[0].clientX,o=t.touches[0].clientY):(n=t.clientX,o=t.clientY),!i&&(n>u.right||n<u.left||o<u.top||o>u.bottom))return;var c=e._shuttleRingPointer.getBoundingClientRect(),h=n-a-u.left,d=o-s-u.top,m=180*Math.atan2(d,h)/Math.PI+90;m>180&&(m-=360);var p=r.shuttleRingAngle;i||n<c.right&&n>c.left&&o>c.top&&o<c.bottom?(f=e,r.shuttleRingDragging=!0,r.shuttleRingAngle=m):p>m?r.slower():m>p&&r.faster(),t.preventDefault()}else f=void 0,r.shuttleRingDragging=!1}var f,v="http://www.w3.org/2000/svg",g="http://www.w3.org/1999/xlink",_=e.fromCssColorString("rgba(247,250,255,0.384)"),y=e.fromCssColorString("rgba(143,191,255,0.216)"),C=e.fromCssColorString("rgba(153,197,255,0.098)"),w=e.fromCssColorString("rgba(255,255,255,0.086)"),S=e.fromCssColorString("rgba(255,255,255,0.267)"),E=e.fromCssColorString("rgba(255,255,255,0)"),b=e.fromCssColorString("rgba(66,67,68,0.3)"),T=e.fromCssColorString("rgba(0,0,0,0.5)"),x=new e,P=function(e,t){this._viewModel=t,this.svgElement=e,this._enabled=void 0,this._toggled=void 0;var r=this;this._clickFunction=function(){var e=r._viewModel.command;e.canExecute&&e()},e.addEventListener("click",this._clickFunction,!0),this._subscriptions=[a(t,"toggled",this.setToggled,this),a(t,"tooltip",this.setTooltip,this),a(t.command,"canExecute",this.setEnabled,this)]};P.prototype.destroy=function(){this.svgElement.removeEventListener("click",this._clickFunction,!0);for(var e=this._subscriptions,t=0,r=e.length;r>t;t++)e[t].dispose();i(this)},P.prototype.isDestroyed=function(){return!1},P.prototype.setEnabled=function(e){if(this._enabled!==e){if(this._enabled=e,!e)return this.svgElement.setAttribute("class","cesium-animation-buttonDisabled"),void 0;if(this._toggled)return this.svgElement.setAttribute("class","cesium-animation-rectButton cesium-animation-buttonToggled"),void 0;this.svgElement.setAttribute("class","cesium-animation-rectButton")}},P.prototype.setToggled=function(e){this._toggled!==e&&(this._toggled=e,this._enabled&&(e?this.svgElement.setAttribute("class","cesium-animation-rectButton cesium-animation-buttonToggled"):this.svgElement.setAttribute("class","cesium-animation-rectButton")))},P.prototype.setTooltip=function(e){this.svgElement.getElementsByTagName("title")[0].textContent=e};var A=function(e,t){e=o(e),this._viewModel=t,this._container=e,this._centerX=0,this._centerY=0,this._defsElement=void 0,this._svgNode=void 0,this._topG=void 0,this._lastHeight=void 0,this._lastWidth=void 0;var r=document.createElement("style");r.textContent=".cesium-animation-rectButton .cesium-animation-buttonGlow { filter: url(#animation_blurred); }.cesium-animation-rectButton .cesium-animation-buttonMain { fill: url(#animation_buttonNormal); }.cesium-animation-buttonToggled .cesium-animation-buttonMain { fill: url(#animation_buttonToggled); }.cesium-animation-rectButton:hover .cesium-animation-buttonMain { fill: url(#animation_buttonHovered); }.cesium-animation-buttonDisabled .cesium-animation-buttonMain { fill: url(#animation_buttonDisabled); }.cesium-animation-shuttleRingG .cesium-animation-shuttleRingSwoosh { fill: url(#animation_shuttleRingSwooshGradient); }.cesium-animation-shuttleRingG:hover .cesium-animation-shuttleRingSwoosh { fill: url(#animation_shuttleRingSwooshHovered); }.cesium-animation-shuttleRingPointer { fill: url(#animation_shuttleRingPointerGradient); }.cesium-animation-shuttleRingPausePointer { fill: url(#animation_shuttleRingPointerPaused); }.cesium-animation-knobOuter { fill: url(#animation_knobOuter); }.cesium-animation-knobInner { fill: url(#animation_knobInner); }",document.head.insertBefore(r,document.head.childNodes[0]);var i=document.createElement("div");i.className="cesium-animation-theme",i.innerHTML='<div class="cesium-animation-themeNormal"></div><div class="cesium-animation-themeHover"></div><div class="cesium-animation-themeSelect"></div><div class="cesium-animation-themeDisabled"></div><div class="cesium-animation-themeKnob"></div><div class="cesium-animation-themePointer"></div><div class="cesium-animation-themeSwoosh"></div><div class="cesium-animation-themeSwooshHover"></div>',this._theme=i,this._themeNormal=i.childNodes[0],this._themeHover=i.childNodes[1],this._themeSelect=i.childNodes[2],this._themeDisabled=i.childNodes[3],this._themeKnob=i.childNodes[4],this._themePointer=i.childNodes[5],this._themeSwoosh=i.childNodes[6],this._themeSwooshHover=i.childNodes[7];var n=document.createElementNS(v,"svg:svg");this._svgNode=n,n.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xlink",g);var s=document.createElementNS(v,"g");this._topG=s,this._realtimeSVG=new P(m(3,4,"#animation_pathClock"),t.playRealtimeViewModel),this._playReverseSVG=new P(d(44,99,"#animation_pathPlayReverse"),t.playReverseViewModel),this._playForwardSVG=new P(d(124,99,"#animation_pathPlay"),t.playForwardViewModel),this._pauseSVG=new P(d(84,99,"#animation_pathPause"),t.pauseViewModel);var h=document.createElementNS(v,"g");h.appendChild(this._realtimeSVG.svgElement),h.appendChild(this._playReverseSVG.svgElement),h.appendChild(this._playForwardSVG.svgElement),h.appendChild(this._pauseSVG.svgElement);var f=l({tagName:"circle","class":"cesium-animation-shuttleRingBack",cx:100,cy:100,r:99});this._shuttleRingBackPanel=f;var _=l({tagName:"g","class":"cesium-animation-shuttleRingSwoosh",children:[{tagName:"use",transform:"translate(100,97) scale(-1,1)","xlink:href":"#animation_pathSwooshFX"},{tagName:"use",transform:"translate(100,97)","xlink:href":"#animation_pathSwooshFX"},{tagName:"line",x1:100,y1:8,x2:100,y2:22}]});this._shuttleRingSwooshG=_,this._shuttleRingPointer=l({tagName:"use","class":"cesium-animation-shuttleRingPointer","xlink:href":"#animation_pathPointer"});var y=l({tagName:"g",transform:"translate(100,100)"});this._knobOuter=l({tagName:"circle","class":"cesium-animation-knobOuter",cx:0,cy:0,r:71});var C=61,w=l({tagName:"circle","class":"cesium-animation-knobInner",cx:0,cy:0,r:C});this._knobDate=u(0,-24,""),this._knobTime=u(0,-7,""),this._knobStatus=u(0,-41,"");var S=l({tagName:"circle","class":"cesium-animation-blank",cx:0,cy:0,r:C}),E=document.createElementNS(v,"g");E.setAttribute("class","cesium-animation-shuttleRingG"),e.appendChild(i),s.appendChild(E),s.appendChild(y),s.appendChild(h),E.appendChild(f),E.appendChild(_),E.appendChild(this._shuttleRingPointer),y.appendChild(this._knobOuter),y.appendChild(w),y.appendChild(this._knobDate),y.appendChild(this._knobTime),y.appendChild(this._knobStatus),y.appendChild(S),n.appendChild(s),e.appendChild(n);var b=this,T=function(e){p(b,e)};this._mouseCallback=T,f.addEventListener("mousedown",T,!0),f.addEventListener("touchstart",T,!0),_.addEventListener("mousedown",T,!0),_.addEventListener("touchstart",T,!0),document.addEventListener("mousemove",T,!0),document.addEventListener("touchmove",T,!0),document.addEventListener("mouseup",T,!0),document.addEventListener("touchend",T,!0),this._shuttleRingPointer.addEventListener("mousedown",T,!0),this._shuttleRingPointer.addEventListener("touchstart",T,!0),this._knobOuter.addEventListener("mousedown",T,!0),this._knobOuter.addEventListener("touchstart",T,!0);var x,A=this._knobTime.childNodes[0],M=this._knobDate.childNodes[0],D=this._knobStatus.childNodes[0];this._subscriptions=[a(t.pauseViewModel,"toggled",function(e){x!==e&&(x=e,x?b._shuttleRingPointer.setAttribute("class","cesium-animation-shuttleRingPausePointer"):b._shuttleRingPointer.setAttribute("class","cesium-animation-shuttleRingPointer"))}),a(t,"shuttleRingAngle",function(e){c(b._shuttleRingPointer,b._knobOuter,e)}),a(t,"dateLabel",function(e){M.textContent!==e&&(M.textContent=e)}),a(t,"timeLabel",function(e){A.textContent!==e&&(A.textContent=e)}),a(t,"multiplierLabel",function(e){D.textContent!==e&&(D.textContent=e)})],this.applyThemeChanges(),this.resize()};return r(A.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){var e=this._mouseCallback;this._shuttleRingBackPanel.removeEventListener("mousedown",e,!0),this._shuttleRingBackPanel.removeEventListener("touchstart",e,!0),this._shuttleRingSwooshG.removeEventListener("mousedown",e,!0),this._shuttleRingSwooshG.removeEventListener("touchstart",e,!0),document.removeEventListener("mousemove",e,!0),document.removeEventListener("touchmove",e,!0),document.removeEventListener("mouseup",e,!0),document.removeEventListener("touchend",e,!0),this._shuttleRingPointer.removeEventListener("mousedown",e,!0),this._shuttleRingPointer.removeEventListener("touchstart",e,!0),this._knobOuter.removeEventListener("mousedown",e,!0),this._knobOuter.removeEventListener("touchstart",e,!0),this._container.removeChild(this._svgNode),this._container.removeChild(this._theme),this._realtimeSVG.destroy(),this._playReverseSVG.destroy(),this._playForwardSVG.destroy(),this._pauseSVG.destroy();for(var t=this._subscriptions,r=0,n=t.length;n>r;r++)t[r].dispose();return i(this)},A.prototype.resize=function(){var e=this._container.clientWidth,t=this._container.clientHeight;if(e!==this._lastWidth||t!==this._lastHeight){var r=this._svgNode,i=200,n=132,o=e,a=t;0===e&&0===t?(o=i,a=n):0===e?(a=t,o=i*(t/n)):0===t&&(o=e,a=n*(e/i));var s=o/i,l=a/n;r.style.cssText="width: "+o+"px; height: "+a+"px; position: absolute; bottom: 0; left: 0; overflow: hidden;",r.setAttribute("width",o),r.setAttribute("height",a),r.setAttribute("viewBox","0 0 "+o+" "+a),this._topG.setAttribute("transform","scale("+s+","+l+")"),this._centerX=Math.max(1,100*s),this._centerY=Math.max(1,100*l),this._lastHeight=e,this._lastWidth=t}},A.prototype.applyThemeChanges=function(){var e=s(this._themeNormal),r=s(this._themeHover),i=s(this._themeSelect),n=s(this._themeDisabled),o=s(this._themeKnob),a=s(this._themePointer),u=s(this._themeSwoosh),c=s(this._themeSwooshHover),d=l({tagName:"defs",children:[{id:"animation_buttonNormal",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(e,_)},{tagName:"stop",offset:"12%","stop-color":h(e,y)},{tagName:"stop",offset:"46%","stop-color":h(e,C)},{tagName:"stop",offset:"81%","stop-color":h(e,w)}]},{id:"animation_buttonHovered",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(r,_)},{tagName:"stop",offset:"12%","stop-color":h(r,y)},{tagName:"stop",offset:"46%","stop-color":h(r,C)},{tagName:"stop",offset:"81%","stop-color":h(r,w)}]},{id:"animation_buttonToggled",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(i,_)},{tagName:"stop",offset:"12%","stop-color":h(i,y)},{tagName:"stop",offset:"46%","stop-color":h(i,C)},{tagName:"stop",offset:"81%","stop-color":h(i,w)}]},{id:"animation_buttonDisabled",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-color":h(n,S)},{tagName:"stop",offset:"75%","stop-color":h(n,E)}]},{id:"animation_blurred",tagName:"filter",width:"200%",height:"200%",x:"-50%",y:"-50%",children:[{tagName:"feGaussianBlur",stdDeviation:4,"in":"SourceGraphic"}]},{id:"animation_shuttleRingSwooshGradient",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-opacity":.2,"stop-color":u.toCssColorString()},{tagName:"stop",offset:"85%","stop-opacity":.85,"stop-color":u.toCssColorString()},{tagName:"stop",offset:"95%","stop-opacity":.05,"stop-color":u.toCssColorString()}]},{id:"animation_shuttleRingSwooshHovered",tagName:"linearGradient",x1:"50%",y1:"0%",x2:"50%",y2:"100%",children:[{tagName:"stop",offset:"0%","stop-opacity":.2,"stop-color":c.toCssColorString()},{tagName:"stop",offset:"85%","stop-opacity":.85,"stop-color":c.toCssColorString()},{tagName:"stop",offset:"95%","stop-opacity":.05,"stop-color":c.toCssColorString()}]},{id:"animation_shuttleRingPointerGradient",tagName:"linearGradient",x1:"0%",y1:"50%",x2:"100%",y2:"50%",children:[{tagName:"stop",offset:"0%","stop-color":a.toCssColorString()},{tagName:"stop",offset:"40%","stop-color":a.toCssColorString()},{tagName:"stop",offset:"60%","stop-color":h(a,T)},{tagName:"stop",offset:"100%","stop-color":h(a,T)}]},{id:"animation_shuttleRingPointerPaused",tagName:"linearGradient",x1:"0%",y1:"50%",x2:"100%",y2:"50%",children:[{tagName:"stop",offset:"0%","stop-color":"#CCC"},{tagName:"stop",offset:"40%","stop-color":"#CCC"},{tagName:"stop",offset:"60%","stop-color":"#555"},{tagName:"stop",offset:"100%","stop-color":"#555"}]},{id:"animation_knobOuter",tagName:"linearGradient",x1:"20%",y1:"0%",x2:"90%",y2:"100%",children:[{tagName:"stop",offset:"5%","stop-color":h(o,_)},{tagName:"stop",offset:"60%","stop-color":h(o,b)},{tagName:"stop",offset:"85%","stop-color":h(o,y)}]},{id:"animation_knobInner",tagName:"linearGradient",x1:"20%",y1:"0%",x2:"90%",y2:"100%",children:[{tagName:"stop",offset:"5%","stop-color":h(o,b)},{tagName:"stop",offset:"60%","stop-color":h(o,_)},{tagName:"stop",offset:"85%","stop-color":h(o,w)}]},{id:"animation_pathReset",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M24.316,5.318,9.833,13.682,9.833,5.5,5.5,5.5,5.5,25.5,9.833,25.5,9.833,17.318,24.316,25.682z"},{id:"animation_pathPause",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M13,5.5,7.5,5.5,7.5,25.5,13,25.5zM24.5,5.5,19,5.5,19,25.5,24.5,25.5z"},{id:"animation_pathPlay",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z"},{id:"animation_pathPlayReverse",tagName:"path",transform:"translate(16,16) scale(-0.85,0.85) translate(-16,-16)",d:"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z"},{id:"animation_pathLoop",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-16)",d:"M24.249,15.499c-0.009,4.832-3.918,8.741-8.75,8.75c-2.515,0-4.768-1.064-6.365-2.763l2.068-1.442l-7.901-3.703l0.744,8.694l2.193-1.529c2.244,2.594,5.562,4.242,9.26,4.242c6.767,0,12.249-5.482,12.249-12.249H24.249zM15.499,6.75c2.516,0,4.769,1.065,6.367,2.764l-2.068,1.443l7.901,3.701l-0.746-8.693l-2.192,1.529c-2.245-2.594-5.562-4.245-9.262-4.245C8.734,3.25,3.25,8.734,3.249,15.499H6.75C6.758,10.668,10.668,6.758,15.499,6.75z"},{id:"animation_pathClock",tagName:"path",transform:"translate(16,16) scale(0.85) translate(-16,-15.5)",d:"M15.5,2.374C8.251,2.375,2.376,8.251,2.374,15.5C2.376,22.748,8.251,28.623,15.5,28.627c7.249-0.004,13.124-5.879,13.125-13.127C28.624,8.251,22.749,2.375,15.5,2.374zM15.5,25.623C9.909,25.615,5.385,21.09,5.375,15.5C5.385,9.909,9.909,5.384,15.5,5.374c5.59,0.01,10.115,4.535,10.124,10.125C25.615,21.09,21.091,25.615,15.5,25.623zM8.625,15.5c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,16.5,8.624,16.053,8.625,15.5zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.887,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM22.822,12.428c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,12.54,22.344,12.705,22.822,12.428zM12.062,21.455c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,22.344,12.54,21.732,12.062,21.455zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM22.823,18.572c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.092,0.367,1.367c0.477,0.275,1.089,0.113,1.365-0.365C23.464,19.461,23.3,18.848,22.823,18.572zM19.938,7.813c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM23.378,14.5c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,14.949,23.929,14.5,23.378,14.5zM15.501,6.624c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.365c0.275,0.479,0.889,0.643,1.365,0.367l3.305-1.676C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876C16.501,7.072,16.053,6.624,15.501,6.624zM15.501,22.377c-0.552,0-1,0.447-1,1s0.448,1,1,1s1-0.447,1-1S16.053,22.377,15.501,22.377zM18.939,21.455c-0.479,0.277-0.643,0.889-0.366,1.367c0.275,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.889,0.366-1.365C20.028,21.344,19.417,21.18,18.939,21.455z"},{id:"animation_pathWingButton",tagName:"path",d:"m 4.5,0.5 c -2.216,0 -4,1.784 -4,4 l 0,24 c 0,2.216 1.784,4 4,4 l 13.71875,0 C 22.478584,27.272785 27.273681,22.511272 32.5,18.25 l 0,-13.75 c 0,-2.216 -1.784,-4 -4,-4 l -24,0 z"},{id:"animation_pathPointer",tagName:"path",d:"M-15,-65,-15,-55,15,-55,15,-65,0,-95z"},{id:"animation_pathSwooshFX",tagName:"path",d:"m 85,0 c 0,16.617 -4.813944,35.356 -13.131081,48.4508 h 6.099803 c 8.317138,-13.0948 13.13322,-28.5955 13.13322,-45.2124 0,-46.94483 -38.402714,-85.00262 -85.7743869,-85.00262 -1.0218522,0 -2.0373001,0.0241 -3.0506131,0.0589 45.958443,1.59437 82.723058,35.77285 82.723058,81.70532 z"}]});
t(this._defsElement)?this._svgNode.replaceChild(d,this._defsElement):this._svgNode.appendChild(d),this._defsElement=d},A}),r("Widgets/createCommand",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/Event","../ThirdParty/knockout"],function(e,t,r,i,n,o){"use strict";var a=function(t,i){function a(){var e,r={args:arguments,cancel:!1};return s.raiseEvent(r),r.cancel||(e=t.apply(null,arguments),l.raiseEvent(e)),e}i=e(i,!0);var s=new n,l=new n;return a.canExecute=i,o.track(a,["canExecute"]),r(a,{beforeExecute:{value:s},afterExecute:{value:l}}),a};return a}),r("Widgets/ToggleButtonViewModel",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../ThirdParty/knockout"],function(e,t,r,i,n){"use strict";var o=function(t,r){this._command=t,r=e(r,e.EMPTY_OBJECT),this.toggled=e(r.toggled,!1),this.tooltip=e(r.tooltip,""),n.track(this,["toggled","tooltip"])};return r(o.prototype,{command:{get:function(){return this._command}}}),o}),r("Widgets/Animation/AnimationViewModel",["../../Core/binarySearch","../../Core/ClockRange","../../Core/ClockStep","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/JulianDate","../../ThirdParty/knockout","../../ThirdParty/sprintf","../createCommand","../ToggleButtonViewModel"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){e.clockStep===r.SYSTEM_CLOCK&&(e.clockStep=r.SYSTEM_CLOCK_MULTIPLIER,e.multiplier=1)}function d(e){h(e),e.shouldAnimate=!0}function m(e,t){return e-t}function p(t,r){var i=e(r,t,m);return 0>i?~i:i}function f(e,t){if(Math.abs(e)<=_)return e/_;var r,i,n=_,o=y,a=0;return e>0?(r=Math.log(t[t.length-1]),i=(r-a)/(o-n),Math.exp(a+i*(e-n))):(r=Math.log(-t[0]),i=(r-a)/(o-n),-Math.exp(a+i*(Math.abs(e)-n)))}function v(e,t,i){if(i.clockStep===r.SYSTEM_CLOCK)return _;if(Math.abs(e)<=1)return e*_;var n,o,a=_,s=y,l=0;return e>0?(n=Math.log(t[t.length-1]),o=(n-l)/(s-a),(Math.log(e)-l)/o+a):(n=Math.log(-t[0]),o=(n-l)/(s-a),-((Math.log(Math.abs(e))-l)/o+a))}var g=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],_=15,y=105,C=function(e){var i=this;this._clockViewModel=e,this._allShuttleRingTicks=[],this._dateFormatter=C.defaultDateFormatter,this._timeFormatter=C.defaultTimeFormatter,this.shuttleRingDragging=!1,this.snapToTicks=!1,s.track(this,["_allShuttleRingTicks","_dateFormatter","_timeFormatter","shuttleRingDragging","snapToTicks"]),this._sortedFilteredPositiveTicks=[],this.setShuttleRingTicks(C.defaultTicks),this.timeLabel=void 0,s.defineProperty(this,"timeLabel",function(){return i._timeFormatter(i._clockViewModel.currentTime,i)}),this.dateLabel=void 0,s.defineProperty(this,"dateLabel",function(){return i._dateFormatter(i._clockViewModel.currentTime,i)}),this.multiplierLabel=void 0,s.defineProperty(this,"multiplierLabel",function(){var e=i._clockViewModel;if(e.clockStep===r.SYSTEM_CLOCK)return"Today";var t=e.multiplier;return 0===t%1?t.toFixed(0)+"x":t.toFixed(3).replace(/0{0,3}$/,"")+"x"}),this.shuttleRingAngle=void 0,s.defineProperty(this,"shuttleRingAngle",{get:function(){return v(e.multiplier,i._allShuttleRingTicks,e)},set:function(e){e=Math.max(Math.min(e,y),-y);var t=i._allShuttleRingTicks,n=i._clockViewModel;if(n.clockStep=r.SYSTEM_CLOCK_MULTIPLIER,Math.abs(e)===y)return n.multiplier=e>0?t[t.length-1]:t[0],void 0;var o=f(e,t);if(i.snapToTicks)o=t[p(o,t)];else if(0!==o){var a=Math.abs(o);if(a>100){var s=a.toFixed(0).length-2,l=Math.pow(10,s);o=0|Math.round(o/l)*l}else a>_?o=Math.round(o):a>1?o=+o.toFixed(1):a>0&&(o=+o.toFixed(2))}n.multiplier=o}}),this._canAnimate=void 0,s.defineProperty(this,"_canAnimate",function(){var e=i._clockViewModel,r=e.clockRange;if(i.shuttleRingDragging||r===t.UNBOUNDED)return!0;var n=e.multiplier,o=e.currentTime,s=e.startTime,l=!1;if(r===t.LOOP_STOP)l=a.greaterThan(o,s)||o.equals(s)&&n>0;else{var u=e.stopTime;l=a.greaterThan(o,s)&&a.lessThan(o,u)||o.equals(s)&&n>0||o.equals(u)&&0>n}return l||(e.shouldAnimate=!1),l}),this._isSystemTimeAvailable=void 0,s.defineProperty(this,"_isSystemTimeAvailable",function(){var e=i._clockViewModel,r=e.clockRange;if(r===t.UNBOUNDED)return!0;var n=e.systemTime;return a.greaterThanOrEquals(n,e.startTime)&&a.lessThanOrEquals(n,e.stopTime)}),this._isAnimating=void 0,s.defineProperty(this,"_isAnimating",function(){return i._clockViewModel.shouldAnimate&&(i._canAnimate||i.shuttleRingDragging)});var n=u(function(){var e=i._clockViewModel;e.shouldAnimate?(h(e),e.shouldAnimate=!1):i._canAnimate&&d(e)});this._pauseViewModel=new c(n,{toggled:s.computed(function(){return!i._isAnimating}),tooltip:"Pause"});var o=u(function(){var e=i._clockViewModel;h(e);var t=e.multiplier;t>0&&(e.multiplier=-t),e.shouldAnimate=!0});this._playReverseViewModel=new c(o,{toggled:s.computed(function(){return i._isAnimating&&e.multiplier<0}),tooltip:"Play Reverse"});var l=u(function(){var e=i._clockViewModel;h(e);var t=e.multiplier;0>t&&(e.multiplier=-t),e.shouldAnimate=!0});this._playForwardViewModel=new c(l,{toggled:s.computed(function(){return i._isAnimating&&e.multiplier>0&&e.clockStep!==r.SYSTEM_CLOCK}),tooltip:"Play Forward"});var m=u(function(){var e=i._clockViewModel;e.clockStep=r.SYSTEM_CLOCK,e.multiplier=1,e.shouldAnimate=!0},s.getObservable(this,"_isSystemTimeAvailable"));this._playRealtimeViewModel=new c(m,{toggled:s.computed(function(){return e.shouldAnimate&&e.clockStep===r.SYSTEM_CLOCK}),tooltip:s.computed(function(){return i._isSystemTimeAvailable?"Today (real-time)":"Current time not in range"})}),this._slower=u(function(){var e=i._clockViewModel;h(e);var t=i._allShuttleRingTicks,r=e.multiplier,n=p(r,t)-1;n>=0&&(e.multiplier=t[n])}),this._faster=u(function(){var e=i._clockViewModel;h(e);var t=i._allShuttleRingTicks,r=e.multiplier,n=p(r,t)+1;n<t.length&&(e.multiplier=t[n])})};return C.defaultDateFormatter=function(e){var t=a.toGregorianDate(e);return g[t.month-1]+" "+t.day+" "+t.year},C.defaultTicks=[.001,.002,.005,.01,.02,.05,.1,.25,.5,1,2,5,10,15,30,60,120,300,600,900,1800,3600,7200,14400,21600,43200,86400,172800,345600,604800],C.defaultTimeFormatter=function(e,t){var r=a.toGregorianDate(e),i=Math.round(r.millisecond);return Math.abs(t._clockViewModel.multiplier)<1?l("%02d:%02d:%02d.%03d",r.hour,r.minute,r.second,i):l("%02d:%02d:%02d UTC",r.hour,r.minute,r.second)},C.prototype.getShuttleRingTicks=function(){return this._sortedFilteredPositiveTicks.slice(0)},C.prototype.setShuttleRingTicks=function(e){var t,r,i,n={},o=this._sortedFilteredPositiveTicks;for(o.length=0,t=0,r=e.length;r>t;++t)i=e[t],n.hasOwnProperty(i)||(n[i]=!0,o.push(i));o.sort(m);var a=[];for(r=o.length,t=r-1;t>=0;--t)i=o[t],0!==i&&a.push(-i);Array.prototype.push.apply(a,o),this._allShuttleRingTicks=a},n(C.prototype,{slower:{get:function(){return this._slower}},faster:{get:function(){return this._faster}},clockViewModel:{get:function(){return this._clockViewModel}},pauseViewModel:{get:function(){return this._pauseViewModel}},playReverseViewModel:{get:function(){return this._playReverseViewModel}},playForwardViewModel:{get:function(){return this._playForwardViewModel}},playRealtimeViewModel:{get:function(){return this._playRealtimeViewModel}},dateFormatter:{get:function(){return this._dateFormatter},set:function(e){this._dateFormatter=e}},timeFormatter:{get:function(){return this._timeFormatter},set:function(e){this._timeFormatter=e}}}),C._maxShuttleRingAngle=y,C._realtimeShuttleRingAngle=_,C}),r("Widgets/BaseLayerPicker/BaseLayerPickerViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/EllipsoidTerrainProvider","../../Core/isArray","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(r){r=e(r,e.EMPTY_OBJECT);var i=r.globe,l=e(r.imageryProviderViewModels,[]),u=e(r.terrainProviderViewModels,[]);this._globe=i,this.imageryProviderViewModels=l.slice(0),this.terrainProviderViewModels=u.slice(0),this.dropDownVisible=!1,a.track(this,["imageryProviderViewModels","terrainProviderViewModels","dropDownVisible"]),this.buttonTooltip=void 0,a.defineProperty(this,"buttonTooltip",function(){var e=this.selectedImagery,r=this.selectedTerrain,i=t(e)?e.name:void 0,n=t(r)?r.name:void 0;return t(i)&&t(n)?i+"\n"+n:t(i)?i:n}),this.buttonImageUrl=void 0,a.defineProperty(this,"buttonImageUrl",function(){var e=this.selectedImagery;return t(e)?e.iconUrl:void 0}),this.selectedImagery=void 0;var c=a.observable();this._currentImageryProviders=[],a.defineProperty(this,"selectedImagery",{get:function(){return c()},set:function(e){if(c()===e)return this.dropDownVisible=!1,void 0;var r,i=this._currentImageryProviders,n=i.length,a=this._globe.imageryLayers;for(r=0;n>r;r++)for(var s=a.length,l=0;s>l;l++){var u=a.get(l);if(u.imageryProvider===i[r]){a.remove(u);break}}if(t(e)){var h=e.creationCommand();if(o(h)){var d=h.length;for(r=d-1;r>=0;r--)a.addImageryProvider(h[r],0);this._currentImageryProviders=h.slice(0)}else this._currentImageryProviders=[h],a.addImageryProvider(h,0)}c(e),this.dropDownVisible=!1}}),this.selectedTerrain=void 0;var h=a.observable();a.defineProperty(this,"selectedTerrain",{get:function(){return h()},set:function(e){if(h()===e)return this.dropDownVisible=!1,void 0;var r;t(e)&&(r=e.creationCommand()),this._globe.depthTestAgainstTerrain=!(r instanceof n),this._globe.terrainProvider=r,h(e),this.dropDownVisible=!1}});var d=this;this._toggleDropDown=s(function(){d.dropDownVisible=!d.dropDownVisible}),this.selectedImagery=e(r.selectedImageryProviderViewModel,l[0]),this.selectedTerrain=e(r.selectedTerrainProviderViewModel,u[0])};return r(l.prototype,{toggleDropDown:{get:function(){return this._toggleDropDown}},globe:{get:function(){return this._globe}}}),l}),r("Widgets/BaseLayerPicker/BaseLayerPicker",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./BaseLayerPickerViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t){e=o(e);var r=new a(t),i=document.createElement("button");i.type="button",i.className="cesium-button cesium-toolbar-button",i.setAttribute("data-bind","attr: { title: buttonTooltip },click: toggleDropDown"),e.appendChild(i);var s=document.createElement("img");s.setAttribute("draggable","false"),s.className="cesium-baseLayerPicker-selected",s.setAttribute("data-bind","attr: { src: buttonImageUrl }"),i.appendChild(s);var l=document.createElement("div");l.className="cesium-baseLayerPicker-dropDown",l.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-dropDown-visible" : dropDownVisible }'),e.appendChild(l);var u=document.createElement("div");u.className="cesium-baseLayerPicker-sectionTitle",u.setAttribute("data-bind","visible: imageryProviderViewModels.length > 0"),u.innerHTML="Imagery",l.appendChild(u);var c=document.createElement("div");c.className="cesium-baseLayerPicker-choices",c.setAttribute("data-bind","foreach: imageryProviderViewModels"),l.appendChild(c);var h=document.createElement("div");h.className="cesium-baseLayerPicker-item",h.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-selectedItem" : $data === $parent.selectedImagery },attr: { title: tooltip },visible: creationCommand.canExecute,click: function($data) { $parent.selectedImagery = $data; }'),c.appendChild(h);var d=document.createElement("img");d.className="cesium-baseLayerPicker-itemIcon",d.setAttribute("data-bind","attr: { src: iconUrl }"),d.setAttribute("draggable","false"),h.appendChild(d);var m=document.createElement("div");m.className="cesium-baseLayerPicker-itemLabel",m.setAttribute("data-bind","text: name"),h.appendChild(m);var p=document.createElement("div");p.className="cesium-baseLayerPicker-sectionTitle",p.setAttribute("data-bind","visible: terrainProviderViewModels.length > 0"),p.innerHTML="Terrain",l.appendChild(p);var f=document.createElement("div");f.className="cesium-baseLayerPicker-choices",f.setAttribute("data-bind","foreach: terrainProviderViewModels"),l.appendChild(f);var v=document.createElement("div");v.className="cesium-baseLayerPicker-item",v.setAttribute("data-bind",'css: { "cesium-baseLayerPicker-selectedItem" : $data === $parent.selectedTerrain },attr: { title: tooltip },visible: creationCommand.canExecute,click: function($data) { $parent.selectedTerrain = $data; }'),f.appendChild(v);var g=document.createElement("img");g.className="cesium-baseLayerPicker-itemIcon",g.setAttribute("data-bind","attr: { src: iconUrl }"),g.setAttribute("draggable","false"),v.appendChild(g);var _=document.createElement("div");_.className="cesium-baseLayerPicker-itemLabel",_.setAttribute("data-bind","text: name"),v.appendChild(_),n.applyBindings(r,i),n.applyBindings(r,l),this._viewModel=r,this._container=e,this._element=i,this._dropPanel=l,this._closeDropDown=function(e){i.contains(e.target)||l.contains(e.target)||(r.dropDownVisible=!1)},document.addEventListener("mousedown",this._closeDropDown,!0),document.addEventListener("touchstart",this._closeDropDown,!0)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return document.removeEventListener("mousedown",this._closeDropDown,!0),document.removeEventListener("touchstart",this._closeDropDown,!0),n.cleanNode(this._element),n.cleanNode(this._dropPanel),this._container.removeChild(this._element),this._container.removeChild(this._dropPanel),r(this)},s}),r("Widgets/BaseLayerPicker/ProviderViewModel",["../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n){"use strict";var o=function(t){var r=t.creationFunction;e(r.canExecute)||(r=n(r)),this._creationCommand=r,this.name=t.name,this.tooltip=t.tooltip,this.iconUrl=t.iconUrl,i.track(this,["name","tooltip","iconUrl"])};return t(o.prototype,{creationCommand:{get:function(){return this._creationCommand}}}),o}),r("Widgets/BaseLayerPicker/createDefaultImageryProviderViewModels",["../../Core/buildModuleUrl","../../Scene/ArcGisMapServerImageryProvider","../../Scene/BingMapsImageryProvider","../../Scene/BingMapsStyle","../../Scene/OpenStreetMapImageryProvider","../../Scene/TileMapServiceImageryProvider","../BaseLayerPicker/ProviderViewModel"],function(e,t,r,i,n,o,a){"use strict";function s(){var s=[];return s.push(new a({name:"Bing Maps Aerial",iconUrl:e("Widgets/Images/ImageryProviders/bingAerial.png"),tooltip:"Bing Maps aerial imagery \nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.AERIAL})}})),s.push(new a({name:"Bing Maps Aerial with Labels",iconUrl:e("Widgets/Images/ImageryProviders/bingAerialLabels.png"),tooltip:"Bing Maps aerial imagery with label overlays \nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.AERIAL_WITH_LABELS})}})),s.push(new a({name:"Bing Maps Roads",iconUrl:e("Widgets/Images/ImageryProviders/bingRoads.png"),tooltip:"Bing Maps standard road maps\nhttp://www.bing.com/maps",creationFunction:function(){return new r({url:"//dev.virtualearth.net",mapStyle:i.ROAD})}})),s.push(new a({name:"ESRI World Imagery",iconUrl:e("Widgets/Images/ImageryProviders/esriWorldImagery.png"),tooltip:"World Imagery provides one meter or better satellite and aerial imagery in many parts of the world and lower resolution satellite imagery worldwide.  The map includes NASA Blue Marble: Next Generation 500m resolution imagery at small scales (above 1:1,000,000), i-cubed 15m eSAT imagery at medium-to-large scales (down to 1:70,000) for the world, and USGS 15m Landsat imagery for Antarctica. The map features 0.3m resolution imagery in the continental United States and 0.6m resolution imagery in parts of Western Europe from DigitalGlobe. In other parts of the world, 1 meter resolution imagery is available from GeoEye IKONOS, i-cubed Nationwide Prime, Getmapping, AeroGRID, IGN Spain, and IGP Portugal.  Additionally, imagery at different resolutions has been contributed by the GIS User Community.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"})}})),s.push(new a({name:"ESRI World Street Map",iconUrl:e("Widgets/Images/ImageryProviders/esriWorldStreetMap.png"),tooltip:"This worldwide street map presents highway-level data for the world. Street-level data includes the United States; much of Canada; Japan; most countries in Europe; Australia and New Zealand; India; parts of South America including Argentina, Brazil, Chile, Colombia, and Venezuela; Ghana; and parts of southern Africa including Botswana, Lesotho, Namibia, South Africa, and Swaziland.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"})}})),s.push(new a({name:"ESRI National Geographic",iconUrl:e("Widgets/Images/ImageryProviders/esriNationalGeographic.png"),tooltip:"This web map contains the National Geographic World Map service. This map service is designed to be used as a general reference map for informational and educational purposes as well as a basemap by GIS professionals and other users for creating web maps and web mapping applications.\nhttp://www.esri.com",creationFunction:function(){return new t({url:"//services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/"})}})),s.push(new a({name:"Open­Street­Map",iconUrl:e("Widgets/Images/ImageryProviders/openStreetMap.png"),tooltip:"OpenStreetMap (OSM) is a collaborative project to create a free editable map of the world.\nhttp://www.openstreetmap.org",creationFunction:function(){return new n({url:"//a.tile.openstreetmap.org/"})}})),s.push(new a({name:"Stamen Watercolor",iconUrl:e("Widgets/Images/ImageryProviders/stamenWatercolor.png"),tooltip:"Reminiscent of hand drawn maps, Stamen watercolor maps apply raster effect area washes and organic edges over a paper texture to add warm pop to any map.\nhttp://maps.stamen.com",creationFunction:function(){return new n({url:"//stamen-tiles.a.ssl.fastly.net/watercolor/",credit:"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under CC BY SA."})}})),s.push(new a({name:"Stamen Toner",iconUrl:e("Widgets/Images/ImageryProviders/stamenToner.png"),tooltip:"A high contrast black and white map.\nhttp://maps.stamen.com",creationFunction:function(){return new n({url:"//stamen-tiles.a.ssl.fastly.net/toner/",credit:"Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under CC BY SA."})}})),s.push(new a({name:"MapQuest Open­Street­Map",iconUrl:e("Widgets/Images/ImageryProviders/mapQuestOpenStreetMap.png"),tooltip:"OpenStreetMap (OSM) is a collaborative project to create a free editable map of the world.\nhttp://www.openstreetmap.org",creationFunction:function(){return new n({url:"//otile1-s.mqcdn.com/tiles/1.0.0/osm/"})}})),s.push(new a({name:"The Black Marble",iconUrl:e("Widgets/Images/ImageryProviders/blackMarble.png"),tooltip:"The lights of cities and villages trace the outlines of civilization in this global view of the Earth at night as seen by NASA/NOAA's Suomi NPP satellite.",creationFunction:function(){return new o({url:"//cesiumjs.org/blackmarble",maximumLevel:8,credit:"Black Marble imagery courtesy NASA Earth Observatory"})}})),s.push(new a({name:"Natural Earth II",iconUrl:e("Widgets/Images/ImageryProviders/naturalEarthII.png"),tooltip:"Natural Earth II, darkened for contrast.\nhttp://www.naturalearthdata.com/",creationFunction:function(){return new o({url:e("Assets/Textures/NaturalEarthII")})}})),s}return s}),r("Widgets/BaseLayerPicker/createDefaultTerrainProviderViewModels",["../../Core/buildModuleUrl","../../Core/CesiumTerrainProvider","../../Core/EllipsoidTerrainProvider","../BaseLayerPicker/ProviderViewModel"],function(e,t,r,i){"use strict";function n(){var n=[];return n.push(new i({name:"WGS84 Ellipsoid",iconUrl:e("Widgets/Images/TerrainProviders/Ellipsoid.png"),tooltip:"WGS84 standard ellipsoid, also known as EPSG:4326",creationFunction:function(){return new r}})),n.push(new i({name:"STK World Terrain meshes",iconUrl:e("Widgets/Images/TerrainProviders/STK.png"),tooltip:"High-resolution, mesh-based terrain for the entire globe. Free for use on the Internet. Closed-network options are available.\nhttp://www.agi.com",creationFunction:function(){return new t({url:"//cesiumjs.org/stk-terrain/tilesets/world/tiles"})}})),n.push(new i({name:"Small Terrain heightmaps with water",iconUrl:e("Widgets/Images/TerrainProviders/STK.png"),tooltip:"Medium-resolution, heightmap-based terrain for the entire globe. This tileset also includes a water mask. Free for use on the Internet.\nhttp://www.agi.com",creationFunction:function(){return new t({url:"//cesiumjs.org/smallterrain",credit:"Terrain data courtesy Analytical Graphics, Inc."})}})),n}return n}),r("Widgets/CesiumInspector/CesiumInspectorViewModel",["../../Core/Color","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Rectangle","../../Scene/DebugModelMatrixPrimitive","../../Scene/PerformanceDisplay","../../Scene/TileCoordinatesImageryProvider","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l,u){"use strict";function c(e){var r;if(t(e)){r="Command Statistics";var i=e.commandsInFrustums;for(var n in i)if(i.hasOwnProperty(n)){var o,a=parseInt(n,10);if(7===a)o="1, 2 and 3";else{for(var s=[],l=2;l>=0;l--){var u=Math.pow(2,l);a>=u&&(s.push(l+1),a-=u)}o=s.reverse().join(" and ")}r+="<br>&nbsp;&nbsp;&nbsp;&nbsp;"+i[n]+" in frustum "+o}r+="<br>Total: "+e.totalCommands}return r}var h=new e(.15,.15,.15,.75),d=document.createElement("div");d.className="cesium-cesiumInspector-performanceDisplay";var m=function(e){if(!t(e))throw new i("scene is required");var r=this,c=e.canvas;c.parentNode.appendChild(d),this._scene=e,this._canvas=c,this._primitive=void 0,this._tile=void 0,this._modelMatrixPrimitive=void 0,this._performanceDisplay=void 0;var m=this._scene.globe;m.depthTestAgainstTerrain=!0,this.frustums=!1,this.performance=!1,this.primitiveBoundingSphere=!1,this.primitiveReferenceFrame=!1,this.filterPrimitive=!1,this.tileBoundingSphere=!1,this.filterTile=!1,this.wireframe=!1,this.suspendUpdates=!1,this.tileCoordinates=!1,this.frustumStatisticText="",this.tileText="",this.hasPickedPrimitive=!1,this.hasPickedTile=!1,this.pickPimitiveActive=!1,this.pickTileActive=!1,this.dropDownVisible=!0,this.generalVisible=!0,this.primitivesVisible=!1,this.terrainVisible=!1,this.generalSwitchText="-",this.primitivesSwitchText="+",this.terrainSwitchText="+",l.track(this,["filterTile","suspendUpdates","dropDownVisible","frustums","frustumStatisticText","pickTileActive","pickPrimitiveActive","hasPickedPrimitive","hasPickedTile","tileText","generalVisible","generalSwitchText","primitivesVisible","primitivesSwitchText","terrainVisible","terrainSwitchText"]),this._toggleDropDown=u(function(){r.dropDownVisible=!r.dropDownVisible}),this._toggleGeneral=u(function(){r.generalVisible=!r.generalVisible,r.generalSwitchText=r.generalVisible?"-":"+"}),this._togglePrimitives=u(function(){r.primitivesVisible=!r.primitivesVisible,r.primitivesSwitchText=r.primitivesVisible?"-":"+"}),this._toggleTerrain=u(function(){r.terrainVisible=!r.terrainVisible,r.terrainSwitchText=r.terrainVisible?"-":"+"}),this._showFrustums=u(function(){return r._scene.debugShowFrustums=r.frustums?!0:!1,!0}),this._showPerformance=u(function(){return r.performance?r._performanceDisplay=new a({container:d,backgroundColor:h,font:"12px arial,sans-serif"}):d.innerHTML="",!0}),this._showPrimitiveBoundingSphere=u(function(){return r._primitive.debugShowBoundingVolume=r.primitiveBoundingSphere,!0}),this._showPrimitiveReferenceFrame=u(function(){if(r.primitiveReferenceFrame){var e=r._primitive.modelMatrix;r._modelMatrixPrimitive=new o({modelMatrix:e}),r._scene.primitives.add(r._modelMatrixPrimitive)}else t(r._modelMatrixPrimitive)&&(r._scene.primitives.remove(r._modelMatrixPrimitive),r._modelMatrixPrimitive=void 0);return!0}),this._doFilterPrimitive=u(function(){return r._scene.debugCommandFilter=r.filterPrimitive?function(e){return t(r._modelMatrixPrimitive)&&e.owner===r._modelMatrixPrimitive._primitive?!0:t(r._primitive)?e.owner===r._primitive||e.owner===r._primitive._billboardCollection:!1}:void 0,!0}),this._showWireframe=u(function(){return m._surface.tileProvider._debug.wireframe=r.wireframe,!0}),this._doSuspendUpdates=u(function(){return m._surface._debug.suspendLodUpdate=r.suspendUpdates,r.suspendUpdates||(r.filterTile=!1),!0});var p;this._showTileCoordinates=u(function(){return r.tileCoordinates&&!t(p)?p=e.imageryLayers.addImageryProvider(new s({tilingScheme:e.terrainProvider.tilingScheme})):!r.tileCoordinates&&t(p)&&(e.imageryLayers.remove(p),p=void 0),!0}),this._showTileBoundingSphere=u(function(){return m._surface.tileProvider._debug.boundingSphereTile=r.tileBoundingSphere?r._tile:void 0,!0}),this._doFilterTile=u(function(){return r.filterTile?(r.suspendUpdates=!0,r.doSuspendUpdates(),m._surface._tilesToRender=[],t(r._tile)&&m._surface._tilesToRender.push(r._tile)):(r.suspendUpdates=!1,r.doSuspendUpdates()),!0});var f=function(e){r._canvas.removeEventListener("mousedown",f,!1),r.pickPrimitiveActive=!1;var i=r._scene.pick({x:e.clientX,y:e.clientY});t(i)&&(r.primitive=t(i.collection)?i.collection:i.primitive)};this._pickPrimitive=u(function(){r.pickPrimitiveActive=!r.pickPrimitiveActive,r.pickPrimitiveActive?r._canvas.addEventListener("mousedown",f,!1):r._canvas.removeEventListener("mousedown",f,!1)});var v=function(e){var i,o=m.ellipsoid,a=r._scene.camera.pickEllipsoid({x:e.clientX,y:e.clientY},o);if(t(a))for(var s=o.cartesianToCartographic(a),l=m._surface.tileProvider._tilesToRenderByTextureCount,u=0;!i&&u<l.length;++u){var c=l[u];if(t(c))for(var h=0;!i&&h<c.length;++h){var d=c[h];n.contains(d.rectangle,s)&&(i=d)}}r.tile=i,r._canvas.removeEventListener("mousedown",v,!1),r.pickTileActive=!1};this._pickTile=u(function(){r.pickTileActive=!r.pickTileActive,r.pickTileActive?r._canvas.addEventListener("mousedown",v,!1):r._canvas.removeEventListener("mousedown",v,!1)})};return r(m.prototype,{scene:{get:function(){return this._scene}},toggleDropDown:{get:function(){return this._toggleDropDown}},showFrustums:{get:function(){return this._showFrustums}},showPerformance:{get:function(){return this._showPerformance}},showPrimitiveBoundingSphere:{get:function(){return this._showPrimitiveBoundingSphere}},showPrimitiveReferenceFrame:{get:function(){return this._showPrimitiveReferenceFrame}},doFilterPrimitive:{get:function(){return this._doFilterPrimitive}},showWireframe:{get:function(){return this._showWireframe}},doSuspendUpdates:{get:function(){return this._doSuspendUpdates}},showTileCoordinates:{get:function(){return this._showTileCoordinates}},showTileBoundingSphere:{get:function(){return this._showTileBoundingSphere}},doFilterTile:{get:function(){return this._doFilterTile}},toggleGeneral:{get:function(){return this._toggleGeneral}},togglePrimitives:{get:function(){return this._togglePrimitives}},toggleTerrain:{get:function(){return this._toggleTerrain}},pickPrimitive:{get:function(){return this._pickPrimitive}},pickTile:{get:function(){return this._pickTile}},selectParent:{get:function(){var e=this;return u(function(){e.tile=e.tile.parent})}},selectNW:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[0]})}},selectNE:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[1]})}},selectSW:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[2]})}},selectSE:{get:function(){var e=this;return u(function(){e.tile=e.tile.children[3]})}},primitive:{set:function(e){var r=this._primitive;e!==r&&(this.hasPickedPrimitive=!0,t(r)&&(r.debugShowBoundingVolume=!1),this._scene.debugCommandFilter=void 0,t(this._modelMatrixPrimitive)&&(this._scene.primitives.remove(this._modelMatrixPrimitive),this._modelMatrixPrimitive=void 0),this._primitive=e,e.show=!1,setTimeout(function(){e.show=!0},50),this.showPrimitiveBoundingSphere(),this.showPrimitiveReferenceFrame(),this.doFilterPrimitive())},get:function(){return this._primitive}},tile:{set:function(e){if(t(e)){this.hasPickedTile=!0;var r=this._tile;e!==r&&(this.tileText="L: "+e.level+" X: "+e.x+" Y: "+e.y,this.tileText+="<br>SW corner: "+e.rectangle.west+", "+e.rectangle.south,this.tileText+="<br>NE corner: "+e.rectangle.east+", "+e.rectangle.north,this.tileText+="<br>Min: "+e.data.minimumHeight+" Max: "+e.data.maximumHeight),this._tile=e,this.showTileBoundingSphere(),this.doFilterTile()}else this.hasPickedTile=!1,this._tile=void 0},get:function(){return this._tile}},update:{get:function(){var e=this;return function(){e.frustums&&(e.frustumStatisticText=c(e._scene.debugFrustumStatistics)),e.performance&&e._performanceDisplay.update(),e.primitiveReferenceFrame&&(e._modelMatrixPrimitive.modelMatrix=e._primitive.modelMatrix)}}}}),m}),r("Widgets/CesiumInspector/CesiumInspector",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./CesiumInspectorViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(t,r){if(!e(t))throw new i("container is required.");if(!e(r))throw new i("scene is required.");t=o(t);var s=new a(r);this._viewModel=s,this._container=t;var l=document.createElement("div");this._element=l;var u=document.createElement("div");u.textContent="Cesium Inspector",u.className="cesium-cesiumInspector-button",u.setAttribute("data-bind","click: toggleDropDown"),l.appendChild(u),l.className="cesium-cesiumInspector",l.setAttribute("data-bind",'css: { "cesium-cesiumInspector-visible" : dropDownVisible, "cesium-cesiumInspector-hidden" : !dropDownVisible }'),t.appendChild(this._element);var c=document.createElement("div");this._panel=c,c.className="cesium-cesiumInspector-dropDown",l.appendChild(c);var h=document.createElement("div");h.className="cesium-cesiumInspector-sectionHeader";var d=document.createElement("span");d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: toggleGeneral, text: generalSwitchText"),h.appendChild(d),h.appendChild(document.createTextNode("General")),c.appendChild(h);var m=document.createElement("div");m.className="cesium-cesiumInspector-section",m.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : generalVisible, "cesium-cesiumInspector-hide" : !generalVisible}'),c.appendChild(m);var p=document.createElement("div");m.appendChild(p);var f=document.createElement("div");f.className="cesium-cesiumInspector-frustumStats",f.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : frustums, "cesium-cesiumInspector-hide" : !frustums}, html: frustumStatisticText');var v=document.createElement("input");v.type="checkbox",v.setAttribute("data-bind","checked: frustums, click: showFrustums"),p.appendChild(v),p.appendChild(document.createTextNode("Show Frustums")),p.appendChild(f);var g=document.createElement("div");m.appendChild(g);var _=document.createElement("input");_.type="checkbox",_.setAttribute("data-bind","checked: performance, click: showPerformance"),g.appendChild(_),g.appendChild(document.createTextNode("Performance Display"));var y=document.createElement("div");y.className="cesium-cesiumInspector-sectionHeader",d=document.createElement("span"),d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: togglePrimitives, text: primitivesSwitchText"),y.appendChild(d),y.appendChild(document.createTextNode("Primitives")),c.appendChild(y);var C=document.createElement("div");C.className="cesium-cesiumInspector-section",C.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : primitivesVisible, "cesium-cesiumInspector-hide" : !primitivesVisible}'),c.appendChild(C);var w=document.createElement("div");w.className="cesium-cesiumInspector-pickSection",C.appendChild(w);
var S=document.createElement("input");S.type="button",S.value="Pick a primitive",S.className="cesium-cesiumInspector-pickButton",S.setAttribute("data-bind",'css: {"cesium-cesiumInspector-pickButtonHighlight" : pickPrimitiveActive}, click: pickPrimitive');var E=document.createElement("div");E.className="cesium-cesiumInspector-center",E.appendChild(S),w.appendChild(E);var b=document.createElement("div");w.appendChild(b);var T=document.createElement("input");T.type="checkbox",T.setAttribute("data-bind","checked: primitiveBoundingSphere, click: showPrimitiveBoundingSphere, enable: hasPickedPrimitive"),b.appendChild(T),b.appendChild(document.createTextNode("Show bounding sphere"));var x=document.createElement("div");w.appendChild(x);var P=document.createElement("input");P.type="checkbox",P.setAttribute("data-bind","checked: primitiveReferenceFrame, click: showPrimitiveReferenceFrame, enable: hasPickedPrimitive"),x.appendChild(P),x.appendChild(document.createTextNode("Show reference frame"));var A=document.createElement("div");this._primitiveOnly=A,w.appendChild(A);var M=document.createElement("input");M.type="checkbox",M.setAttribute("data-bind","checked: filterPrimitive, click: doFilterPrimitive, enable: hasPickedPrimitive"),A.appendChild(M),A.appendChild(document.createTextNode("Show only selected"));var D=document.createElement("div");D.className="cesium-cesiumInspector-sectionHeader",d=document.createElement("span"),d.className="cesium-cesiumInspector-toggleSwitch",d.setAttribute("data-bind","click: toggleTerrain, text: terrainSwitchText"),D.appendChild(d),D.appendChild(document.createTextNode("Terrain")),c.appendChild(D);var I=document.createElement("div");I.className="cesium-cesiumInspector-section",I.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : terrainVisible, "cesium-cesiumInspector-hide" : !terrainVisible}'),c.appendChild(I);var R=document.createElement("div");R.className="cesium-cesiumInspector-pickSection",I.appendChild(R);var O=document.createElement("input");O.type="button",O.value="Pick a tile",O.className="cesium-cesiumInspector-pickButton",O.setAttribute("data-bind",'css: {"cesium-cesiumInspector-pickButtonHighlight" : pickTileActive}, click: pickTile'),E=document.createElement("div"),E.appendChild(O),E.className="cesium-cesiumInspector-center",R.appendChild(E);var L=document.createElement("div");R.appendChild(L);var N=document.createElement("input");N.type="button",N.value="Parent",N.className="cesium-cesiumInspector-pickButton",N.setAttribute("data-bind","click: selectParent");var B=document.createElement("input");B.type="button",B.value="NW",B.className="cesium-cesiumInspector-pickButton",B.setAttribute("data-bind","click: selectNW");var F=document.createElement("input");F.type="button",F.value="NE",F.className="cesium-cesiumInspector-pickButton",F.setAttribute("data-bind","click: selectNE");var z=document.createElement("input");z.type="button",z.value="SW",z.className="cesium-cesiumInspector-pickButton",z.setAttribute("data-bind","click: selectSW");var V=document.createElement("input");V.type="button",V.value="SE",V.className="cesium-cesiumInspector-pickButton",V.setAttribute("data-bind","click: selectSE");var k=document.createElement("div");k.className="cesium-cesiumInspector-tileText",L.className="cesium-cesiumInspector-frustumStats",L.appendChild(k),L.setAttribute("data-bind",'css: {"cesium-cesiumInspector-show" : hasPickedTile, "cesium-cesiumInspector-hide" : !hasPickedTile}'),k.setAttribute("data-bind","html: tileText");var U=document.createElement("div");U.className="cesium-cesiumInspector-relativeText",U.textContent="Select relative:",L.appendChild(U);var W=document.createElement("table"),G=document.createElement("tr"),H=document.createElement("tr"),q=document.createElement("td");q.appendChild(N);var j=document.createElement("td");j.appendChild(B);var Y=document.createElement("td");Y.appendChild(F),G.appendChild(q),G.appendChild(j),G.appendChild(Y);var X=document.createElement("td"),Z=document.createElement("td");Z.appendChild(z);var Q=document.createElement("td");Q.appendChild(V),H.appendChild(X),H.appendChild(Z),H.appendChild(Q),W.appendChild(G),W.appendChild(H),L.appendChild(W);var J=document.createElement("div");R.appendChild(J);var K=document.createElement("input");K.type="checkbox",K.setAttribute("data-bind","checked: tileBoundingSphere, enable: hasPickedTile, click: showTileBoundingSphere"),J.appendChild(K),J.appendChild(document.createTextNode("Show bounding sphere"));var $=document.createElement("div");R.appendChild($);var et=document.createElement("input");et.type="checkbox",et.setAttribute("data-bind","checked: filterTile, enable: hasPickedTile, click: doFilterTile"),$.appendChild(et),$.appendChild(document.createTextNode("Show only selected"));var tt=document.createElement("div");I.appendChild(tt);var rt=document.createElement("input");rt.type="checkbox",rt.setAttribute("data-bind","checked: wireframe, click: showWireframe"),tt.appendChild(rt),tt.appendChild(document.createTextNode("Wireframe"));var it=document.createElement("div");I.appendChild(it);var nt=document.createElement("input");nt.type="checkbox",nt.setAttribute("data-bind","checked: suspendUpdates, click: doSuspendUpdates"),it.appendChild(nt),it.appendChild(document.createTextNode("Suspend LOD update"));var ot=document.createElement("div");I.appendChild(ot);var at=document.createElement("input");at.type="checkbox",at.setAttribute("data-bind","checked: tileCoordinates, click: showTileCoordinates"),ot.appendChild(at),ot.appendChild(document.createTextNode("Show tile coordinates")),n.applyBindings(s,this._element)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/CesiumWidget/CesiumWidget",["../../Core/buildModuleUrl","../../Core/Cartesian3","../../Core/Clock","../../Core/Credit","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/Ellipsoid","../../Core/formatError","../../Core/getTimestamp","../../Core/requestAnimationFrame","../../Core/ScreenSpaceEventHandler","../../Scene/BingMapsImageryProvider","../../Scene/Globe","../../Scene/Moon","../../Scene/Scene","../../Scene/SceneMode","../../Scene/SkyAtmosphere","../../Scene/SkyBox","../../Scene/Sun","../getElement"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S){"use strict";function E(t){return e("Assets/Textures/SkyBox/tycho2t3_80_"+t+".jpg")}function b(e){function t(){if(!e.isDestroyed())if(e._useDefaultRenderLoop)try{var r=e._targetFrameRate;if(o(r)){var i=e._lastFrameTime,n=1e3/r,a=h(),s=a-i;s>n&&(e.resize(),e.render(),e._lastFrameTime=a-s%n),d(t)}else e.resize(),e.render(),d(t)}catch(l){if(e._useDefaultRenderLoop=!1,e._renderLoopRunning=!1,e._showRenderLoopErrors){var u="An error occurred while rendering.  Rendering has stopped.";e.showErrorPanel(u,void 0,l)}}else e._renderLoopRunning=!1}e._renderLoopRunning=!0,e._lastFrameTime=h(),d(t)}function T(e){var t=e._canvas,r=t.clientWidth,i=t.clientHeight,o=n(window.devicePixelRatio,1)*e._resolutionScale;e._canvasWidth=r,e._canvasHeight=i,r*=o,i*=o,t.width=r,t.height=i,e._canRender=0!==r&&0!==i}function x(e){var t=e._canvas,r=t.width,i=t.height;if(0!==r&&0!==i){var n=e._scene.camera.frustum;o(n.aspectRatio)?n.aspectRatio=r/i:(n.top=n.right*(i/r),n.bottom=-n.top)}}var P="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAHYAAAAaCAYAAABikagwAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB9wGGRQyF371QVsAABOHSURBVGje7Vp5cFTHmf91v2Nm3owGnYMuEEJCOBiEjDlsDMYQjGMOOwmXcWxiLywpJ9iuTXZd612corJssFOxi8LerXizxEGUvWsivNxxHHCQ8WYBYSFzmUMCCXQjaUajOd/V+4f6Kc14kI/KZv/xq+p6M/PmO15/9/c1wa0vwpcMQAHgBuAFoPG7mz8jAGwASQBxADFhJQGYACwAjK+vrr/AJQ8jVMqfuwH4AGQByAaQnTNqXGHWqHGFbq8/g1BJsgw9GQ12Bds/qWsxEvEeAEEAfQDCAKKCgPGVcP//BOsIVQHgAZAJIACgsHTqvDvK7150T2bR2DFaZm6W4slwUypR20yaiUg4OtDbcaP36rlPPt6/7f2B3q5mAB0AeriAE18J9y93kVu4X4W73BwAhQBK5v/gZ98ZVXXvDG92IJMx569MQDEoK0tPmOHu1s4L7799sH7vtvcAXAPQCaCfu2qLu+7h+Eh3sS8Bcyt48iVgPos2+4J7jS+BIx2etDBSynfH/Xq46y0CUL70n3/zXMmUuXepWoZHFCQhFIQARCBFJYV6/Nn+QHnVBH9Ovq/51JFWADpfJhcqEzyDcx9ukTTr/xr2VnDpng0nuHR0h1u3wvWF6EspgBIAFYAfQAGAsuU/rfm7kePvvJ0QiTj6QSgBISS9ujEGSikkxaXklIwfK8uK2Xru2HVurWKspZyezGmmWwp/LqVsupPQub4grPQ5YIejKQvPJAGflLLJSBGmxPEqKXhU4XdJEBq7BR5Z+L+DKx3MTTHWEaybx9WCud/btCJQMeX2Qevk+NPoks0YPArF/RUj0NyXxOmO2CAy1a1OmL9yUVfTmatXTx52EildYFQVNlgRmBR1xQJgCBbPBAVUhcw8lTObLz0FVk4RIEmJJyJNZzFBiCTFBRL+f50rriFUATRFiZSU/XYEAw6X5LlIUghZqXvl5p8pfycRZsgjymlKGw1Adm7JbRUVs785nwGghP5pp9mfFMOxWstmuC3gwdcrRqA/buJUWwyKRMAYgydrZNZt9337623njn+ixyN9nAmdM5nBvYOPfxc3mnEmTQ4T5VZv8hfz8aUKnocJd5tvVhxAhOMADzNefleFjRUFa/D/xzi8LQhIEpTG4VXnNBzlZYISufk7juCfqaAoLkHYcZ6HBAEM8O+ObJz3HcFDpJfDJwWYfiHMMTklviocKHv6I3+zRFLdKhEEatmALBFIBIibNhQ6KFyJEjT2JHDoUj/a+nVIVIBhBGOnzptWXzhmTFfT2TZBOH4AgSeeeGJqRUVFqdfr9btcLnVQXwapmqZpJZPJRCgUCh47duzie++9dwWAXl5enrlp06bF0WhUM01TYYwRrmg2vzNKqS3Lsunz+Yy6urpTP//5z09blkVLSkryVq9ePT03NzegqqqbUnqTGyOEMNM0k319fX2///3vz9bW1l4DYD700EPFy5Ytm65pmvbBBx9c2rp166Wnnnqq7MEHH5zAGIu8/vrr+w8ePPgJVwrRO2gAcg8cOLA2mUx62tvbB9avX39s+fLlo++///5JXNiwbXugpqam9tChQ2cEj6NzuQwlsi+//PKSzMzMQtu2qcfjMZqbm09v2LDht4J3sQEQOU2Jo8mKKzt7VEU5lSgFBi3PZkBZrgv3lGbCo1Jc7I7iSGN40JcQgoGkhXdO94ESQJEoGI+1k/M9mDKqQHEv++akl186e45rNAAE3njjjccWLFhwfyAQyJEkiabGbcc7JJNJva2trX3Lli3vvPbaa+eKi4uLV6xY8d10cf5TcZ8x5OXl5b366qs9lFLtrbfeWldVVXW7pmkuxhjS0SSEIJlMGitXrrz2/PPPv1lTU3NtypQp0x955JG/kmVZdrlcR7du3WrOnTt33pIlS+YDwNGjR68ePHiwjVtukm+wI9ichQsXPgUAHR0d3evXr78xc+bMu9asWbOQUjpENz8/v/jQoUP/IiiH40UzAeQvW7Zs1rp16/7a5/NpDr/19fWlGzZsOM4tNsphkc5iPaXTvl6uuDUvY4MZLwNQ4Ffw+LR8+KQQTCuJSQUFcMsEe88FoSkSKCFwyWSISQbg9pEefHdGAJHIdUydVjFecL3K448/Pm3hwoUPBAKBHFGIlmU5pRCRpMGEze12q2PHjh2zatWqeTt37gwODAxkOQIJhUJ6Y2Njn6IojFJqE0KYsGyPx0POnTvXnUgkfGvXrr1j5syZU7iFsKampv5YLBZ34GzbJgAwatSo7MzMTE95eXnZT37yk0dramr+PRQKZSQSCdPn88nBYNADID8UCmkAYBiGGQ6Hna6cksbdZliWZUuSRKPRKAAUBINBfywWM30+n+yEtenTp9+5YsWKGTt37oxwz+a44RwARc8+++xSr9eriQrY398v8311CUncTTHN0Q7Vl1OQJymq4iBwyxQPT8qDVwri1d1/i8ttp/AP39mOBeMn41pQx9mOGFSZ3qT52ZqMR6aMRGvXKfzbgX9Ea3PnSLEdOWXKlK/5/X4/AFy8ePHG6tWr90QikS5VVaOEEIsxRhljngcffLBi8+bNjxBCUFJSMrKkpMRvGIbboXP27Nn+2bNn/3cgEIgSQmKEEAOARQixKKVxRVEioVAoYtu2dMcdd4x24Hbv3t3+ox/96ONoNBqklMa4ppNkMinNnz8///nnn6/y+Xw0mUxaANy6rrsdl28YhguAX9d1F98jwn9TUjJkJ5N1DWV0ti0ByDAMw+PsbzQatX0+Hy0oKMhcvnz5nP3791+IxWJRIUaPfO655+ZVVlaOA4BoNGprmkZ5uJJThZouKyYAqOrWVEKoE7cwszQDlQUK3jr8S5y++iEIIXh55/fwylOH8e3KHHSEdfQnLFBuRbJEsLQyF27Sh3eO/iuudV+EaSuqkJF6MjMzs9xutwIAv/rVr06eOHHiEwCtPBHQOaPaxYsXLxcXF8cKCwtzOzo6+ltbW4OFhYU+h2nDMAgAqbu7W8xkLSEBcsos1bbtocZIIBBQs7Ky5Pb2dkvXdV1wfaipqemsqak5yF1bFABljNEU4Sj87nia1LKHCJWGLLh6AkDhiksAoLq6um/VqlWZWVlZ8gMPPHDHwoULK2tqasJcYJ7y8vKyb33rW/f4/X43YwybNm26vnnz5pIUb0tvVe44maSVjEfizDJtmwFlOS4srczGiQvv4ncnd4ASAkIo+mN92LLrB/j7Vb/GQxOz8Z/1PTDsQXc6p3QEqopU7Dr6S5y8fAiKpCKhs6SQSUqyLKsO4d7e3j4AvbxD1csFQQF4EolEaP369TVCFjuiqKiogG8w5s6dm8sY++ZwcfbZZ5/dvHXr1isnT55scVz+rFmz8urr6xc4Ls22bZZIJExd181oNGr09PREDx06dPmFF144Ho/HTVGIjiE4guECoyl1LYTPcppGEAghDAAikUjixRdfbHnppZfKfD6fa82aNfMOHz7cHgwGbwBwr1ix4u677rqrgsfU4I4dO66lCPZTXSkqpOaMa60e7mjuosw0RmYoWHf3SLT3NOKt91+CbsZBeOlDCcX5luP4rw9fw4wSH+4p9cMlU3xtpAfLJmej/vIR7PnjLyDRwXeKhoxubokWAOYkDXxTLE5brB11oTZMCrWoNQgymJwZhsHC4bAZjUaNaDRqxGIx3VnxeDzJky8TQGLHjh3n9u3bd6ytrS3U2dkZ6e3tjfX398cHBgYS8XjcIIQQr9frKioq8ldWVhb88Ic/vHfbtm3zAXhs25aHUx7uEt1COeXEXM3JfAWLvWnSxRhLbNu2rampqSlMCME3vvGNyXPmzKkCUFZeXn776tWr72WMwbZtvPDCCx+5XK6wo6BcOdhwQ4Chuu/KR39onDGS9T80u9ivkgiqD/0UbT2NcKvelMaEhXfrqlGaPwEPT5qH0lwvqopcaOtpxPb3/gmGmYBEFRBC0HUlfp67tQQALxMKYsaYU+tlcSadNN8NIOO+++4bnZ2d7Q+Hw+zIkSNJxtiQ9TQ1NUW3bNnSmJWVlZBlWaeUWs5SVTUxYsSIRF1dXScAwzTN2MMPP7w3Pz//ZFVVVUFubq7L6/VKmqZRl8ulKIriVlVVmz59ev6cOXMCLpeLLliwYDyAOpGm08SglA659mQy6eHTrwiPtRYXbi6vP2/yjI61AoDL5Ur09vZ2bt++/ezGjRvvppSSjRs3Lti9e/fvnnzyyfHjx48fyRjDwYMHL9TW1jYWFhZ6xfIs3UhUTlPQRwGE9Gv/c/ba9YGi2rPv0FONf/iUUB3Lj8SDqD60GYtmdGBcYSVOnL+K39b9Gp19zVDkwZzBSpLY9Qv9Z3lKHgOgmaYZd9zg1KlTS994441L3G3lcD6oo/1btmxZFwgEctrb27vWrFlzwLIs2cmKW1pa4q+//vp1AbchdIKiPGZHAJDFixcHpk+ffnsoFNLefvvt3ra2Nl0YSDhdt4zy8vLwsWPHsl0ul6ooigSACuEZXKBJwzAMxhhUVZW8Xm8uH5hQ3mCwOf95VVVVYx03yQVhUEpNQbBxADfefPPN6NKlS8dUVlYWVlZW5r344osz1q1bV8IYQzAYjFVXV5+IxWIdkiTlpfDCUgcC6Sw2CqBvw4ZN+7/9d+Wzo1avT5HU9N1tMpj4dfU14z/efxletx9xPYpIPAhVccO2bVBKcf189I/h3mSLkBi5b9y40RWLxZJer9f12GOPTa6oqMjq6enpJYQYlFLGyx21tLQ0MGnSpDGEECQSCZMQIjuNCF6aqI8++mheVlZWJrdYkzcoLEVREj6fL1FfX39x165dzfPnzy/7/ve/v1LXdWvlypVde/bsuRKLxQyn1LEsS2aMeebNm1fs8/lkxhgsy7IAJBRF0Yc2TZZ1AANNTU0djoJt2rRpzqxZs/K6urq6JUnSCSHMMAxZ07SsxYsXV1JKCWMMAwMDMQBhVVWTjtU6gr1y5Yq1d+/ej8aNG5eraZr6zDPPjPV4PBJjDLW1ted27dr1MYCYqqpDcpMkyRIaEyydxToxNgagr7e3t+XEe0rNxPkjnvhTznNr4Sb0KBL6YO9BovJQnRXptTqaPgr9wTLsDgAhTkOurq4+unz58vs1TRvl9/vVuXPnljHGxgqxw2GcEjLYJLlw4cKV06dPd06bNo04+MePH+/ftm3bNNG1iW5KVVVl//79ew4cONC8d+/ey88884ysKIp85513jpo8eXJh2pHX4EUIITh58uRFAN1utzvHcb0ejycGoKuurk5vbW29u7i4ODB69OisJ5988i4xxDhsKIoiEUJgmqZ94MCBOgBdmqaVODxrmhbhiaP+4x//+N2lS5dOmjBhwhiPxyMBQFdXV191dfX7tm23AdBdLtdQzFYUxWmb3iRcmqbh7vQfOz9+v/PdjvP6kcHuE288MJZWuM4Smw1mgkQvHw/v6Wga+BjADY53AEDfmTNnLq9du/Znp06datB13RA3ROwGmaZphcPhgX379v326aefftO27Tafz9fJGGOmadqMMSbLMpEkiaZbjDFommYQQsK1tbWNr7zyymvhcLifEIJbwRBCmGVZ1vHjxz9atGjRLwA0Z2dndzpdHb/fHwTQcuLEiYann3761fPnz3+i67pBCCGUUkoIofwjpZQS27ZZd3f3ja1bt1Zv3LhxL4CrmZmZPYQQkxCCjIyMEIB2AG0Amrdv3/6beDweNwzD1nXdPHXq1Indu3cf48+7MjIyupw98ng8EW4wCWH4kHbQLgsnJ4oAlN332Ji1hbeps6lEaLohQLrhQCJi9zcei77TcLh9H4CrALp4rLN5LBvBE4scAP6JEyfmBQIBL6VUopSCMcYGBgYSly5dCvX19YW5QkQAmD6fz3PvvfeWxmIxr2EYHqFXPBRrKKWWJEmG1+uNtbW1dTU0NNzgz7wA/OXl5bkFBQV+XsYQwVpZMpk0jh8/3snpRQCYo0aN8k6YMCHX5XLRa9euBRsaGnr4Jnp458c7ceLEbK/X6xL5MQzDbGhoCNq2HeO4YgBYWVmZv6KiIkdVVbS0tHQ3NDR0CsORrDlz5oyllHoYY3p9ff31cDjczeGhaVrGkiVLSg3DkLu7u/s+/PDDFn4UKeJYLhnmAJvGs9QCAKOnLMhfNHqSNl/LlHOpTORbWa4et2ORXqv1wgf9NVfO9B7nTYcuPvlICq02t9CJ8ggjOJomodOF0ZQtHNvxCC08pBnbmcIhO53jdA7mpXaKUkOSWGoxYaaKlIa7IozT0uET+XDGehDGhhBGb6bTmBHezeb8OyNPCPQk/ptzeHConCSfcZDNI1hWQXaBVl5254hZmSPVce4MKUdxEQ+VJMnUbcNIWJFoyOzoa02eOX2k+yg/79TFNWkgZchOUobe4vA63WzUEmpYsa+dCoM0Izgz5aQkTUOPpGvUpKFJBaUR8Q03cLdT8NkppyEgPGOCYcnCiNASsn2SwrstDA2Gxnbkc5xSdHGrcmaBWYoqZ+YUe4pcXuqXJCobupWIhaze3vZohzAfdOaKN2mSwPxwR0ZSZ6uptZoIN9yxFCYIiqV5v3THStgwNNPhvtXxFgzDP9K8q52Cj6ZRNnaLffoUDfI5zhVLgrvxCN0Ux5URYXYYF84Wf2qqf4uDV591ZuiLHir7c8F+mZOU5M+Iazg8n3mYjnxORkV3I6dxg6KrMQW3Yaexlq+uv8D1v2IL+t4z3B/NAAAAAElFTkSuQmCC",A=function(e,a){e=S(e),a=n(a,{});var s=document.createElement("div");s.className="cesium-widget",e.appendChild(s);var l=document.createElement("canvas");l.oncontextmenu=function(){return!1},l.onselectstart=function(){return!1},s.appendChild(l);var c=document.createElement("div");c.className="cesium-widget-credits";var h=o(a.creditContainer)?S(a.creditContainer):s;h.appendChild(c),this._element=s,this._container=e,this._canvas=l,this._canvasWidth=0,this._canvasHeight=0,this._creditContainer=c,this._canRender=!1,this._renderLoopRunning=!1,this._showRenderLoopErrors=n(a.showRenderLoopErrors,!0),this._resolutionScale=1,this._forceResize=!1,this._clock=n(a.clock,new r),this._lastFrameTime=void 0,T(this);try{var d=new g({canvas:l,contextOptions:a.contextOptions,creditContainer:c,mapProjection:a.mapProjection,orderIndependentTranslucency:a.orderIndependentTranslucency,scene3DOnly:n(a.scene3DOnly,!1)});this._scene=d,d.camera.constrainedAxis=t.UNIT_Z,x(this);var b=u.WGS84,A=d.frameState.creditDisplay,M=new i("Cesium",P,"http://cesiumjs.org/");A.addDefaultCredit(M);var D=new f(b);this._globe=D,d.globe=D;var I=a.skyBox;o(I)||(I=new C({sources:{positiveX:E("px"),negativeX:E("mx"),positiveY:E("py"),negativeY:E("my"),positiveZ:E("pz"),negativeZ:E("mz")}})),d.skyBox=I,d.skyAtmosphere=new y(b),d.sun=new w,d.moon=new v;var R=a.imageryProvider;o(R)||(R=new p({url:"//dev.virtualearth.net"})),R!==!1&&d.imageryLayers.addImageryProvider(R),o(a.terrainProvider)&&(d.terrainProvider=a.terrainProvider),this._screenSpaceEventHandler=new m(l),o(a.sceneMode)&&(a.sceneMode===_.SCENE2D&&this._scene.morphTo2D(0),a.sceneMode===_.COLUMBUS_VIEW&&this._scene.morphToColumbusView(0)),this._useDefaultRenderLoop=void 0,this.useDefaultRenderLoop=n(a.useDefaultRenderLoop,!0),this._targetFrameRate=void 0,this.targetFrameRate=a.targetFrameRate;var O=this;d.renderError.addEventListener(function(e,t){if(O._useDefaultRenderLoop=!1,O._renderLoopRunning=!1,O._showRenderLoopErrors){var r="An error occurred while rendering.  Rendering has stopped.";O.showErrorPanel(r,void 0,t)}})}catch(L){var N="Error constructing CesiumWidget.",B='Visit <a href="http://get.webgl.org">http://get.webgl.org</a> to verify that your web browser and hardware support WebGL.  Consider trying a different web browser or updating your video drivers.  Detailed error information is below:';throw this.showErrorPanel(N,B,L),L}};return a(A.prototype,{container:{get:function(){return this._container}},canvas:{get:function(){return this._canvas}},creditContainer:{get:function(){return this._creditContainer}},scene:{get:function(){return this._scene}},clock:{get:function(){return this._clock}},screenSpaceEventHandler:{get:function(){return this._screenSpaceEventHandler}},targetFrameRate:{get:function(){return this._targetFrameRate},set:function(e){if(0>=e)throw new l("targetFrameRate must be greater than 0.");this._targetFrameRate=e}},useDefaultRenderLoop:{get:function(){return this._useDefaultRenderLoop},set:function(e){this._useDefaultRenderLoop!==e&&(this._useDefaultRenderLoop=e,e&&!this._renderLoopRunning&&b(this))}},resolutionScale:{get:function(){return this._resolutionScale},set:function(e){if(0>=e)throw new l("resolutionScale must be greater than 0.");this._resolutionScale=e,this._forceResize=!0}}}),A.prototype.showErrorPanel=function(e,t,r){var i=this._element,n=document.createElement("div");n.className="cesium-widget-errorPanel";var a=document.createElement("div");a.className="cesium-widget-errorPanel-content",n.appendChild(a);var s=document.createElement("div");s.className="cesium-widget-errorPanel-header",s.appendChild(document.createTextNode(e)),a.appendChild(s);var l=document.createElement("div");l.className="cesium-widget-errorPanel-scroll",a.appendChild(l);var u=function(){l.style.maxHeight=Math.max(Math.round(.9*i.clientHeight-100),30)+"px"};if(u(),o(window.addEventListener)&&window.addEventListener("resize",u,!1),o(t)){var h=document.createElement("div");h.className="cesium-widget-errorPanel-message",h.innerHTML="<p>"+t+"</p>",l.appendChild(h)}var d="(no error details available)";o(r)&&(d=c(r));var m=document.createElement("div");m.className="cesium-widget-errorPanel-message",m.appendChild(document.createTextNode(d)),l.appendChild(m);var p=document.createElement("div");p.className="cesium-widget-errorPanel-buttonPanel",a.appendChild(p);var f=document.createElement("button");f.setAttribute("type","button"),f.className="cesium-button",f.appendChild(document.createTextNode("OK")),f.onclick=function(){o(u)&&o(window.removeEventListener)&&window.removeEventListener("resize",u,!1),i.removeChild(n)},p.appendChild(f),i.appendChild(n),console.error(e+"\n"+t+"\n"+d)},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){this._scene=this._scene&&this._scene.destroy(),this._container.removeChild(this._element),s(this)},A.prototype.resize=function(){var e=this._canvas,t=e.clientWidth,r=e.clientHeight;(this._forceResize||this._canvasWidth!==t||this._canvasHeight!==r)&&(this._forceResize=!1,T(this),x(this))},A.prototype.render=function(){this._scene.initializeFrame();var e=this._clock.tick();this._canRender&&this._scene.render(e)},A}),r("Widgets/ClockViewModel",["../Core/Clock","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/EventHelper","../Core/JulianDate","../ThirdParty/knockout"],function(e,t,r,i,n,o,a){"use strict";var s=function(r){t(r)||(r=new e),this._clock=r,this._eventHelper=new n,this._eventHelper.add(r.onTick,this.synchronize,this);var i=a.observable(r.startTime);i.equalityComparer=o.equals,this.systemTime=a.observable(o.now()),this.systemTime.equalityComparer=o.equals,a.track(this,["systemTime"]),this.startTime=void 0,a.defineProperty(this,"startTime",{get:i,set:function(e){i(e),r.startTime=e}});var s=a.observable(r.stopTime);s.equalityComparer=o.equals,this.stopTime=void 0,a.defineProperty(this,"stopTime",{get:s,set:function(e){r.stopTime=e,s(e)}});var l=a.observable(r.currentTime);l.equalityComparer=o.equals,this.currentTime=void 0,a.defineProperty(this,"currentTime",{get:l,set:function(e){r.currentTime=e,l(e)}});var u=a.observable(r.multiplier);this.multiplier=void 0,a.defineProperty(this,"multiplier",{get:u,set:function(e){r.multiplier=e,u(e)}});var c=a.observable(r.clockStep);c.equalityComparer=function(e,t){return e===t},this.clockStep=void 0,a.defineProperty(this,"clockStep",{get:c,set:function(e){c(e),r.clockStep=e}});var h=a.observable(r.clockRange);h.equalityComparer=function(e,t){return e===t},this.clockRange=void 0,a.defineProperty(this,"clockRange",{get:h,set:function(e){h(e),r.clockRange=e}});var d=a.observable(r.canAnimate);this.canAnimate=void 0,a.defineProperty(this,"canAnimate",{get:d,set:function(e){d(e),r.canAnimate=e}});var m=a.observable(r.shouldAnimate);this.shouldAnimate=void 0,a.defineProperty(this,"shouldAnimate",{get:m,set:function(e){m(e),r.shouldAnimate=e}})};return r(s.prototype,{clock:{get:function(){return this._clock}}}),s.prototype.synchronize=function(){var e=this._clock,t=e.startTime,r=e.stopTime,i=e.currentTime,n=e.multiplier,a=e.clockStep,s=e.clockRange,l=e.canAnimate,u=e.shouldAnimate;this.systemTime=o.now(),this.startTime=t,this.stopTime=r,this.currentTime=i,this.multiplier=n,this.clockStep=a,this.clockRange=s,this.canAnimate=l,this.shouldAnimate=u},s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){this._eventHelper.removeAll(),i(this)},s}),r("Widgets/Command",["../Core/DeveloperError"],function(e){"use strict";var t=function(){this.canExecute=void 0,this.beforeExecute=void 0,this.afterExecute=void 0,e.throwInstantiationError()};return t}),r("Widgets/FullscreenButton/FullscreenButtonViewModel",["../../Core/defaultValue","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/Fullscreen","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a){"use strict";var s=function(t){var r=this,i=o.observable(n.fullscreen),s=o.observable(n.enabled);this.isFullscreen=void 0,o.defineProperty(this,"isFullscreen",{get:function(){return i()}}),this.isFullscreenEnabled=void 0,o.defineProperty(this,"isFullscreenEnabled",{get:function(){return s()},set:function(e){s(e&&n.enabled)}}),this.tooltip=void 0,o.defineProperty(this,"tooltip",function(){return this.isFullscreenEnabled?i()?"Exit full screen":"Full screen":"Full screen unavailable"}),this._command=a(function(){n.fullscreen?n.exitFullscreen():n.requestFullscreen(r._fullscreenElement)},o.getObservable(this,"isFullscreenEnabled")),this._fullscreenElement=e(t,document.body),this._callback=function(){i(n.fullscreen)},document.addEventListener(n.changeEventName,this._callback)};return t(s.prototype,{fullscreenElement:{get:function(){return this._fullscreenElement},set:function(e){this._fullscreenElement=e}},command:{get:function(){return this._command}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){document.removeEventListener(n.changeEventName,this._callback),r(this)},s}),r("Widgets/FullscreenButton/FullscreenButton",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./FullscreenButtonViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="M 83.96875 17.5625 L 83.96875 17.59375 L 76.65625 24.875 L 97.09375 24.96875 L 76.09375 45.96875 L 81.9375 51.8125 L 102.78125 30.9375 L 102.875 51.15625 L 110.15625 43.875 L 110.1875 17.59375 L 83.96875 17.5625 z M 44.125 17.59375 L 17.90625 17.625 L 17.9375 43.90625 L 25.21875 51.1875 L 25.3125 30.96875 L 46.15625 51.8125 L 52 45.96875 L 31 25 L 51.4375 24.90625 L 44.125 17.59375 z M 46.0625 76.03125 L 25.1875 96.875 L 25.09375 76.65625 L 17.8125 83.9375 L 17.8125 110.21875 L 44 110.25 L 51.3125 102.9375 L 30.90625 102.84375 L 51.875 81.875 L 46.0625 76.03125 z M 82 76.15625 L 76.15625 82 L 97.15625 103 L 76.71875 103.0625 L 84.03125 110.375 L 110.25 110.34375 L 110.21875 84.0625 L 102.9375 76.8125 L 102.84375 97 L 82 76.15625 z",l="M 104.34375 17.5625 L 83.5 38.4375 L 83.40625 18.21875 L 76.125 25.5 L 76.09375 51.78125 L 102.3125 51.8125 L 102.3125 51.78125 L 109.625 44.5 L 89.1875 44.40625 L 110.1875 23.40625 L 104.34375 17.5625 z M 23.75 17.59375 L 17.90625 23.4375 L 38.90625 44.4375 L 18.5 44.53125 L 25.78125 51.8125 L 52 51.78125 L 51.96875 25.53125 L 44.6875 18.25 L 44.625 38.46875 L 23.75 17.59375 z M 25.6875 76.03125 L 18.375 83.3125 L 38.78125 83.40625 L 17.8125 104.40625 L 23.625 110.25 L 44.5 89.375 L 44.59375 109.59375 L 51.875 102.3125 L 51.875 76.0625 L 25.6875 76.03125 z M 102.375 76.15625 L 76.15625 76.1875 L 76.1875 102.4375 L 83.46875 109.71875 L 83.5625 89.53125 L 104.40625 110.375 L 110.25 104.53125 L 89.25 83.53125 L 109.6875 83.46875 L 102.375 76.15625 z",u=function(e,t){e=o(e);var r=new a(t);r._exitFullScreenPath=l,r._enterFullScreenPath=s;var i=document.createElement("button");i.type="button",i.className="cesium-button cesium-fullscreenButton",i.setAttribute("data-bind","attr: { title: tooltip },click: command,enable: isFullscreenEnabled,cesiumSvgPath: { path: isFullscreen ? _exitFullScreenPath : _enterFullScreenPath, width: 128, height: 128 }"),e.appendChild(i),n.applyBindings(r,i),this._container=e,this._viewModel=r,this._element=i};return t(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return this._viewModel.destroy(),n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},u}),r("Widgets/Geocoder/GeocoderViewModel",["../../Core/BingMapsApi","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/jsonp","../../Core/Matrix4","../../Core/Rectangle","../../ThirdParty/knockout","../../ThirdParty/when","../createCommand"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(e){var t=e.searchText;if(!/^\s*$/.test(t)){e._isSearchInProgress=!0;var i=o(e._url+"REST/v1/Locations",{parameters:{query:t,key:e._key},callbackParameterName:"jsonp"}),n=e._geocodeInProgress=u(i,function(t){if(!n.cancel){if(e._isSearchInProgress=!1,0===t.resourceSets.length)return e.searchText=e._searchText+" (not found)",void 0;var i=t.resourceSets[0];if(0===i.resources.length)return e.searchText=e._searchText+" (not found)",void 0;var o=i.resources[0];e._searchText=o.name;var l=o.bbox,u=l[0],c=l[1],h=l[2],d=l[3],m=s.fromDegrees(c,u,d,h),p=e._scene.camera,f=p.getRectangleCameraCoordinates(m);r(f)&&e._scene.camera.flyTo({destination:f,duration:e._flightDuration,endTransform:a.IDENTITY,convert:!1})}},function(){n.cancel||(e._isSearchInProgress=!1,e.searchText=e._searchText+" (error)")})}}function d(e){e._isSearchInProgress=!1,r(e._geocodeInProgress)&&(e._geocodeInProgress.cancel=!0,e._geocodeInProgress=void 0)}var m=function(r){this._url=t(r.url,"//dev.virtualearth.net/"),this._url.length>0&&"/"!==this._url[this._url.length-1]&&(this._url+="/"),this._key=e.getKey(r.key),this._scene=r.scene,this._flightDuration=t(r.flightDuration,1.5),this._searchText="",this._isSearchInProgress=!1,this._geocodeInProgress=void 0;var i=this;this._searchCommand=c(function(){i.isSearchInProgress?d(i):h(i)}),l.track(this,["_searchText","_isSearchInProgress"]),this.isSearchInProgress=void 0,l.defineProperty(this,"isSearchInProgress",{get:function(){return this._isSearchInProgress}}),this.searchText=void 0,l.defineProperty(this,"searchText",{get:function(){return this.isSearchInProgress?"Searching...":this._searchText},set:function(e){this._searchText=e}}),this.flightDuration=void 0,l.defineProperty(this,"flightDuration",{get:function(){return this._flightDuration},set:function(e){this._flightDuration=e}})};return i(m.prototype,{url:{get:function(){return this._url}},key:{get:function(){return this._key}},scene:{get:function(){return this._scene}},search:{get:function(){return this._searchCommand}}}),m}),r("Widgets/Geocoder/Geocoder",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./GeocoderViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="M29.772,26.433l-7.126-7.126c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127L29.772,26.433zM7.203,13.885c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486c-0.007,3.58-2.905,6.476-6.484,6.484C10.106,20.361,7.209,17.465,7.203,13.885z",l="M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z",u=function(e){var t=o(e.container),r=new a(e);r._startSearchPath=s,r._stopSearchPath=l;var i=document.createElement("form");i.setAttribute("data-bind","submit: search");var u=document.createElement("input");u.type="search",u.className="cesium-geocoder-input",u.setAttribute("placeholder","Enter an address or landmark..."),u.setAttribute("data-bind",'value: searchText,valueUpdate: "afterkeydown",disable: isSearchInProgress,css: { "cesium-geocoder-input-wide" : searchText.length > 0 }'),i.appendChild(u);var c=document.createElement("span");c.className="cesium-geocoder-searchButton",c.setAttribute("data-bind","click: search,cesiumSvgPath: { path: isSearchInProgress ? _stopSearchPath : _startSearchPath, width: 32, height: 32 }"),i.appendChild(c),t.appendChild(i),n.applyBindings(r,i),this._container=t,this._viewModel=r,this._form=i,this._onInputBegin=function(e){t.contains(e.target)||u.blur()},this._onInputEnd=function(e){t.contains(e.target)&&u.focus()},document.addEventListener("mousedown",this._onInputBegin,!0),document.addEventListener("mouseup",this._onInputEnd,!0),document.addEventListener("touchstart",this._onInputBegin,!0),document.addEventListener("touchend",this._onInputEnd,!0)};return t(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return document.removeEventListener("mousedown",this._onInputBegin,!0),document.removeEventListener("mouseup",this._onInputEnd,!0),document.removeEventListener("touchstart",this._onInputBegin,!0),document.removeEventListener("touchend",this._onInputEnd,!0),n.cleanNode(this._form),this._container.removeChild(this._form),r(this)},u}),r("Widgets/HomeButton/HomeButtonViewModel",["../../Core/Cartesian3","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Matrix4","../../Core/Rectangle","../../Scene/Camera","../../Scene/SceneMode","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l,u,c){"use strict";function h(t,i){var n=t.mode;r(t)&&n===l.MORPHING&&t.completeMorph();var u,c,h;if(n===l.SCENE2D)t.camera.flyToRectangle({destination:a.MAX_VALUE,duration:i,endTransform:o.IDENTITY});else if(n===l.SCENE3D){var d=t.camera.getRectangleCameraCoordinates(s.DEFAULT_VIEW_RECTANGLE),m=e.magnitude(d);m+=m*s.DEFAULT_VIEW_FACTOR,e.normalize(d,d),e.multiplyByScalar(d,m,d),u=e.normalize(d,new e),e.negate(u,u),c=e.cross(u,e.UNIT_Z,new e),h=e.cross(c,u,new e),t.camera.flyTo({destination:d,direction:u,up:h,duration:i,endTransform:o.IDENTITY})}else if(n===l.COLUMBUS_VIEW){var p=t.globe.ellipsoid.maximumRadius,f=new e(0,-1,1);f=e.multiplyByScalar(e.normalize(f,f),5*p,f),u=new e,u=e.normalize(e.subtract(e.ZERO,f,u),u),c=e.cross(u,e.UNIT_Z,new e),h=e.cross(c,u,new e),t.camera.flyTo({destination:f,duration:i,up:h,direction:u,endTransform:o.IDENTITY,convert:!1})
}}var d=function(e,r){r=t(r,1.5),this._scene=e,this._duration=r;var i=this;this._command=c(function(){h(i._scene,i._duration)}),this.tooltip="View Home",u.track(this,["tooltip"])};return i(d.prototype,{scene:{get:function(){return this._scene}},command:{get:function(){return this._command}},duration:{get:function(){return this._duration},set:function(e){this._duration=e}}}),d}),r("Widgets/HomeButton/HomeButton",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./HomeButtonViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t,r){e=o(e);var i=new a(t,r);i._svgPath="M14,4l-10,8.75h20l-4.25-3.7188v-4.6562h-2.812v2.1875l-2.938-2.5625zm-7.0938,9.906v10.094h14.094v-10.094h-14.094zm2.1876,2.313h3.3122v4.25h-3.3122v-4.25zm5.8442,1.281h3.406v6.438h-3.406v-6.438z";var s=document.createElement("button");s.type="button",s.className="cesium-button cesium-toolbar-button cesium-home-button",s.setAttribute("data-bind","attr: { title: tooltip },click: command,cesiumSvgPath: { path: _svgPath, width: 28, height: 28 }"),e.appendChild(s),n.applyBindings(i,s),this._container=e,this._viewModel=i,this._element=s};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/InfoBox/InfoBoxViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/Event","../../Core/formatError","../../Core/TaskProcessor","../../ThirdParty/knockout","../../ThirdParty/when"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){return t(d)||(d=new o("sanitizeHtml",1/0)),d.scheduleTask(e)}var u="M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4853444 22.104033 11.423165 24.0625 13.84375 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 8.975298 28.305952 7.03125 25.875 7.03125 L 13.84375 7.03125 z",c="M 27.34375 1.65625 L 5.28125 27.9375 L 8.09375 30.3125 L 30.15625 4.03125 L 27.34375 1.65625 z M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4724893 20.232036 9.5676108 20.7379 9.75 21.21875 L 21.65625 7.03125 L 13.84375 7.03125 z M 28.21875 7.71875 L 14.53125 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 9.8371439 29.456025 8.4902779 28.21875 7.71875 z",h=function(){this._sanitizer=void 0,this._descriptionRawHtml="",this._descriptionSanitizedHtml="",this._cameraClicked=new i,this._closeClicked=new i,this.maxHeight=500,this.enableCamera=!1,this.isCameraTracking=!1,this.showInfo=!1,this.titleText="",this.loadingIndicatorHtml='<div class="cesium-infoBox-loadingContainer"><span class="cesium-infoBox-loading"></span></div>',a.track(this,["showInfo","titleText","_descriptionRawHtml","_descriptionSanitizedHtml","maxHeight","enableCamera","isCameraTracking"]),this.descriptionRawHtml=void 0,a.defineProperty(this,"descriptionRawHtml",{get:function(){return this._descriptionRawHtml},set:function(e){if(this._descriptionRawHtml!==e){this._descriptionRawHtml=e,this._descriptionSanitizedHtml=this.loadingIndicatorHtml;var t=this;s(this.sanitizer(e),function(r){t._descriptionRawHtml===e&&(t._descriptionSanitizedHtml=r)}).otherwise(function(e){console.log("An error occurred while sanitizing HTML: "+n(e))})}}}),this.descriptionSanitizedHtml=void 0,a.defineProperty(this,"descriptionSanitizedHtml",{get:function(){return this._descriptionSanitizedHtml}}),this.cameraIconPath=void 0,a.defineProperty(this,"cameraIconPath",{get:function(){return this.enableCamera||this.isCameraTracking?u:c}}),a.defineProperty(this,"_bodyless",{get:function(){return!this._descriptionSanitizedHtml}})};h.prototype.maxHeightOffset=function(e){return this.maxHeight-e+"px"};var d;return h.defaultSanitizer=l,r(h.prototype,{cameraClicked:{get:function(){return this._cameraClicked}},closeClicked:{get:function(){return this._closeClicked}},sanitizer:{get:function(){return e(this._sanitizer,h.defaultSanitizer)},set:function(e){this._sanitizer=e;var t=this._descriptionRawHtml;this._descriptionRawHtml="",this.descriptionRawHtml=t}}}),h}),r("Widgets/InfoBox/InfoBox",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./InfoBoxViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){e=o(e),this._container=e;var t=document.createElement("div");t.className="cesium-infoBox",t.setAttribute("data-bind",'css: { "cesium-infoBox-visible" : showInfo, "cesium-infoBox-bodyless" : _bodyless }'),e.appendChild(t),this._element=t;var r=document.createElement("div");r.className="cesium-infoBox-title",r.setAttribute("data-bind","text: titleText"),t.appendChild(r);var i=document.createElement("button");i.type="button",i.className="cesium-button cesium-infoBox-camera",i.setAttribute("data-bind",'attr: { title: "Focus camera on object" },click: function () { cameraClicked.raiseEvent(); },enable: enableCamera,cesiumSvgPath: { path: cameraIconPath, width: 32, height: 32 }'),t.appendChild(i);var s=document.createElement("button");s.type="button",s.className="cesium-infoBox-close",s.setAttribute("data-bind","click: function () { closeClicked.raiseEvent(); }"),s.innerHTML="&times;",t.appendChild(s);var l=document.createElement("div");l.className="cesium-infoBox-body",t.appendChild(l);var u=document.createElement("div");u.className="cesium-infoBox-description",u.setAttribute("data-bind","html: descriptionSanitizedHtml,style : { maxHeight : maxHeightOffset(40) }"),l.appendChild(u);var c=new a;this._viewModel=c,n.applyBindings(this._viewModel,t)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){var e=this._container;return n.cleanNode(this._element),e.removeChild(this._element),r(this)},s}),r("Widgets/NavigationHelpButton/NavigationHelpButtonViewModel",["../../Core/defineProperties","../../ThirdParty/knockout","../createCommand"],function(e,t,r){"use strict";var i=function(){this.showInstructions=!1;var e=this;this._command=r(function(){e.showInstructions=!e.showInstructions}),this._showClick=r(function(){e._touch=!1}),this._showTouch=r(function(){e._touch=!0}),this._touch=!1,this.tooltip="Navigation Instructions",t.track(this,["tooltip","showInstructions","_touch"])};return e(i.prototype,{command:{get:function(){return this._command}},showClick:{get:function(){return this._showClick}},showTouch:{get:function(){return this._showTouch}}}),i}),r("Widgets/NavigationHelpButton/NavigationHelpButton",["../../Core/buildModuleUrl","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./NavigationHelpButtonViewModel"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(r){var i=s(r.container),n=new l,o=t(r.instructionsInitiallyVisible,!1);n.showInstructions=o,n._svgPath="M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466z M17.328,24.371h-2.707v-2.596h2.707V24.371zM17.328,19.003v0.858h-2.707v-1.057c0-3.19,3.63-3.696,3.63-5.963c0-1.034-0.924-1.826-2.134-1.826c-1.254,0-2.354,0.924-2.354,0.924l-1.541-1.915c0,0,1.519-1.584,4.137-1.584c2.487,0,4.796,1.54,4.796,4.136C21.156,16.208,17.328,16.627,17.328,19.003z";var u=document.createElement("span");u.className="cesium-navigationHelpButton-wrapper",i.appendChild(u);var c=document.createElement("button");c.type="button",c.className="cesium-button cesium-toolbar-button cesium-navigation-help-button",c.setAttribute("data-bind","attr: { title: tooltip },click: command,cesiumSvgPath: { path: _svgPath, width: 32, height: 32 }"),u.appendChild(c);var h=document.createElement("div");h.className="cesium-navigation-help",h.setAttribute("data-bind",'css: { "cesium-navigation-help-visible" : showInstructions}'),u.appendChild(h);var d=document.createElement("button");d.className="cesium-navigation-button cesium-navigation-button-left",d.setAttribute("data-bind",'click: showClick, css: {"cesium-navigation-button-selected": !_touch, "cesium-navigation-button-unselected": _touch}');var m=document.createElement("img");m.src=e("Widgets/Images/NavigationHelp/Mouse.svg"),m.className="cesium-navigation-button-icon",m.style.width="25px",m.style.height="25px",d.appendChild(m),d.appendChild(document.createTextNode("Mouse"));var p=document.createElement("button");p.className="cesium-navigation-button cesium-navigation-button-right",p.setAttribute("data-bind",'click: showTouch, css: {"cesium-navigation-button-selected": _touch, "cesium-navigation-button-unselected": !_touch}');var f=document.createElement("img");f.src=e("Widgets/Images/NavigationHelp/Touch.svg"),f.className="cesium-navigation-button-icon",f.style.width="25px",f.style.height="25px",p.appendChild(f),p.appendChild(document.createTextNode("Touch")),h.appendChild(d),h.appendChild(p);var v=document.createElement("div");v.className="cesium-click-navigation-help cesium-navigation-help-instructions",v.setAttribute("data-bind",'css: { "cesium-click-navigation-help-visible" : !_touch}'),v.innerHTML='            <table>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseLeft.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-pan">Pan view</div>                        <div class="cesium-navigation-help-details">Left click + drag</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseRight.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-zoom">Zoom view</div>                        <div class="cesium-navigation-help-details">Right click + drag, or</div>                        <div class="cesium-navigation-help-details">Mouse wheel scroll</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/MouseMiddle.svg")+'" width="48" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-rotate">Rotate view</div>                        <div class="cesium-navigation-help-details">Middle click + drag, or</div>                        <div class="cesium-navigation-help-details">CTRL + Left click + drag</div>                    </td>                </tr>            </table>',h.appendChild(v);var g=document.createElement("div");g.className="cesium-touch-navigation-help cesium-navigation-help-instructions",g.setAttribute("data-bind",'css: { "cesium-touch-navigation-help-visible" : _touch}'),g.innerHTML='            <table>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchDrag.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-pan">Pan view</div>                        <div class="cesium-navigation-help-details">One finger drag</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchZoom.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-zoom">Zoom view</div>                        <div class="cesium-navigation-help-details">Two finger pinch</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchTilt.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-rotate">Tilt view</div>                        <div class="cesium-navigation-help-details">Two finger drag, same direction</div>                    </td>                </tr>                <tr>                    <td><img src="'+e("Widgets/Images/NavigationHelp/TouchRotate.svg")+'" width="70" height="48" /></td>                    <td>                        <div class="cesium-navigation-help-tilt">Rotate view</div>                        <div class="cesium-navigation-help-details">Two finger drag, opposite direction</div>                    </td>                </tr>            </table>',h.appendChild(g),a.applyBindings(n,u),this._container=i,this._viewModel=n,this._wrapper=u,this._closeInstructions=function(e){u.contains(e.target)||(n.showInstructions=!1)},document.addEventListener("mousedown",this._closeInstructions,!0),document.addEventListener("touchstart",this._closeInstructions,!0)};return i(u.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return document.removeEventListener("mousedown",this._closeInstructions,!0),document.removeEventListener("touchstart",this._closeInstructions,!0),a.cleanNode(this._wrapper),this._container.removeChild(this._wrapper),n(this)},u}),r("Widgets/PerformanceWatchdog/PerformanceWatchdogViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Scene/FrameRateMonitor","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s){"use strict";var l=function(t){this._scene=t.scene,this.lowFrameRateMessage=e(t.lowFrameRateMessage,"This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers."),this.lowFrameRateMessageDismissed=!1,this.showingLowFrameRateMessage=!1,a.track(this,["lowFrameRateMessage","lowFrameRateMessageDismissed","showingLowFrameRateMessage"]);var r=this;this._dismissMessage=s(function(){r.showingLowFrameRateMessage=!1,r.lowFrameRateMessageDismissed=!0});var i=o.fromScene(t.scene);this._unsubscribeLowFrameRate=i.lowFrameRate.addEventListener(function(){r.lowFrameRateMessageDismissed||(r.showingLowFrameRateMessage=!0)}),this._unsubscribeNominalFrameRate=i.nominalFrameRate.addEventListener(function(){r.showingLowFrameRateMessage=!1})};return r(l.prototype,{scene:{get:function(){return this._scene}},dismissMessage:{get:function(){return this._dismissMessage}}}),l.prototype.destroy=function(){return this._unsubscribeLowFrameRate(),this._unsubscribeNominalFrameRate(),i(this)},l}),r("Widgets/PerformanceWatchdog/PerformanceWatchdog",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./PerformanceWatchdogViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e){var t=o(e.container),r=new a(e),i=document.createElement("div");i.className="cesium-performance-watchdog-message-area",i.setAttribute("data-bind","visible: showingLowFrameRateMessage");var s=document.createElement("button");s.setAttribute("type","button"),s.className="cesium-performance-watchdog-message-dismiss",s.innerHTML="&times;",s.setAttribute("data-bind","click: dismissMessage"),i.appendChild(s);var l=document.createElement("div");l.className="cesium-performance-watchdog-message",l.setAttribute("data-bind","html: lowFrameRateMessage"),i.appendChild(l),t.appendChild(i),n.applyBindings(r,i),this._container=t,this._viewModel=r,this._element=i};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){return this._viewModel.destroy(),n.cleanNode(this._element),this._container.removeChild(this._element),r(this)},s}),r("Widgets/SceneModePicker/SceneModePickerViewModel",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/EventHelper","../../Scene/SceneMode","../../ThirdParty/knockout","../createCommand"],function(e,t,r,i,n,o,a,s,l){"use strict";var u=function(t,r){this._scene=t;var i=this,n=function(e,t,r){i.sceneMode=r,i.dropDownVisible=!1};this._eventHelper=new o,this._eventHelper.add(t.morphStart,n),this._duration=e(r,2),this.sceneMode=t.mode,this.dropDownVisible=!1,this.tooltip2D="2D",this.tooltip3D="3D",this.tooltipColumbusView="Columbus View",s.track(this,["sceneMode","dropDownVisible","tooltip2D","tooltip3D","tooltipColumbusView"]),this.selectedTooltip=void 0,s.defineProperty(this,"selectedTooltip",function(){var e=i.sceneMode;return e===a.SCENE2D?i.tooltip2D:e===a.SCENE3D?i.tooltip3D:i.tooltipColumbusView}),this._toggleDropDown=l(function(){i.dropDownVisible=!i.dropDownVisible}),this._morphTo2D=l(function(){t.morphTo2D(i._duration)}),this._morphTo3D=l(function(){t.morphTo3D(i._duration)}),this._morphToColumbusView=l(function(){t.morphToColumbusView(i._duration)}),this._sceneMode=a};return r(u.prototype,{scene:{get:function(){return this._scene}},duration:{get:function(){return this._duration},set:function(e){this._duration=e}},toggleDropDown:{get:function(){return this._toggleDropDown}},morphTo2D:{get:function(){return this._morphTo2D}},morphTo3D:{get:function(){return this._morphTo3D}},morphToColumbusView:{get:function(){return this._morphToColumbusView}}}),u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){this._eventHelper.removeAll(),i(this)},u}),r("Widgets/SceneModePicker/SceneModePicker",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./SceneModePickerViewModel"],function(e,t,r,i,n,o,a){"use strict";var s="m 32.401392,4.9330437 c -7.087603,0 -14.096095,2.884602 -19.10793,7.8946843 -5.0118352,5.010083 -7.9296167,11.987468 -7.9296167,19.072999 0,7.085531 2.9177815,14.097848 7.9296167,19.107931 4.837653,4.835961 11.541408,7.631372 18.374354,7.82482 0.05712,0.01231 0.454119,0.139729 0.454119,0.139729 l 0.03493,-0.104797 c 0.08246,7.84e-4 0.162033,0.03493 0.244525,0.03493 0.08304,0 0.161515,-0.03414 0.244526,-0.03493 l 0.03493,0.104797 c 0,0 0.309474,-0.129487 0.349323,-0.139729 6.867765,-0.168094 13.582903,-2.965206 18.444218,-7.82482 2.558195,-2.5573 4.551081,-5.638134 5.903547,-8.977584 1.297191,-3.202966 2.02607,-6.661489 2.02607,-10.130347 0,-6.237309 -2.366261,-12.31219 -6.322734,-17.116794 -0.0034,-0.02316 0.0049,-0.04488 0,-0.06986 -0.01733,-0.08745 -0.104529,-0.278855 -0.104797,-0.279458 -5.31e-4,-0.0012 -0.522988,-0.628147 -0.523984,-0.62878         -3.47e-4,-2.2e-4 -0.133444,-0.03532 -0.244525,-0.06987 C 51.944299,13.447603 51.751076,13.104317 51.474391,12.827728 46.462556,7.8176457 39.488996,4.9330437 32.401392,4.9330437 z m -2.130866,3.5281554 0.104797,9.6762289 c -4.111695,-0.08361 -7.109829,-0.423664 -9.257041,-0.943171 1.198093,-2.269271 2.524531,-4.124404 3.91241,-5.414496 2.167498,-2.0147811 3.950145,-2.8540169 5.239834,-3.3185619 z m 2.794579,0 c 1.280302,0.4754953 3.022186,1.3285948 5.065173,3.2486979 1.424667,1.338973 2.788862,3.303645 3.982275,5.728886 -2.29082,0.403367 -5.381258,0.621049 -8.942651,0.698645 L 33.065105,8.4611991 z m 5.728886,0.2445256 c 4.004072,1.1230822 7.793098,3.1481363 10.724195,6.0782083 0.03468,0.03466 0.07033,0.06991 0.104797,0.104797 -0.45375,0.313891 -0.923054,0.663002 -1.956205,1.082899 -0.647388,0.263114 -1.906242,0.477396 -2.829511,0.733577 -1.382296,-2.988132         -3.027146,-5.368585 -4.785716,-7.0213781 -0.422866,-0.397432 -0.835818,-0.6453247 -1.25756,-0.9781032 z m -15.33525,0.7685092 c -0.106753,0.09503 -0.207753,0.145402 -0.31439,0.244526 -1.684973,1.5662541 -3.298068,3.8232211 -4.680919,6.5672591 -0.343797,-0.14942 -1.035052,-0.273198 -1.292493,-0.419186 -0.956528,-0.542427 -1.362964,-1.022024 -1.537018,-1.292493 -0.0241,-0.03745 -0.01868,-0.0401 -0.03493,-0.06986 2.250095,-2.163342 4.948824,-3.869984 7.859752,-5.0302421 z m -9.641296,7.0912431 c 0.464973,0.571618 0.937729,1.169056 1.956205,1.746612 0.349907,0.198425 1.107143,0.335404 1.537018,0.523983 -1.20166,3.172984 -1.998037,7.051901 -2.165798,11.772162 C 14.256557,30.361384 12.934823,30.161483 12.280427,29.90959 10.644437,29.279855 9.6888882,28.674891 9.1714586,28.267775 8.6540289,27.860658 8.6474751,27.778724 8.6474751,27.778724 l -0.069864,0.03493 C 9.3100294,23.691285         11.163248,19.798527 13.817445,16.565477 z m 37.552149,0.523984 c 2.548924,3.289983 4.265057,7.202594 4.890513,11.318043 -0.650428,0.410896 -1.756876,1.001936 -3.563088,1.606882 -1.171552,0.392383 -3.163859,0.759153 -4.960377,1.117832 -0.04367,-4.752703 -0.784809,-8.591423 -1.88634,-11.807094 0.917574,-0.263678 2.170552,-0.486495 2.864443,-0.76851 1.274693,-0.518066 2.003942,-1.001558 2.654849,-1.467153 z m -31.439008,2.619917 c 2.487341,0.672766 5.775813,1.137775 10.479669,1.222628 l 0.104797,10.689263 0,0.03493 0,0.733577 c -5.435005,-0.09059 -9.512219,-0.519044 -12.610536,-1.117831 0.106127,-4.776683 0.879334,-8.55791 2.02607,-11.562569 z m 23.264866,0.31439 c 1.073459,3.067541 1.833795,6.821314 1.816476,11.702298 -3.054474,0.423245 -7.062018,0.648559 -11.702298,0.698644 l 0,-0.838373 -0.104796,-10.654331 c 4.082416,-0.0864 7.404468,-0.403886 9.990618,-0.908238 z         M 8.2632205,30.922625 c 0.7558676,0.510548 1.5529563,1.013339 3.0041715,1.57195 0.937518,0.360875 2.612202,0.647642 3.91241,0.978102 0.112814,3.85566 0.703989,7.107756 1.606883,9.920754 -1.147172,-0.324262 -2.644553,-0.640648 -3.423359,-0.978102 -1.516688,-0.657177 -2.386627,-1.287332 -2.864443,-1.71168 -0.477816,-0.424347 -0.489051,-0.489051 -0.489051,-0.489051 L 9.8002387,40.319395 C 8.791691,37.621767 8.1584238,34.769583 8.1584238,31.900727 c 0,-0.330153 0.090589,-0.648169 0.1047967,-0.978102 z m 48.2763445,0.419186 c 0.0047,0.188973 0.06986,0.36991 0.06986,0.558916 0,2.938869 -0.620228,5.873558 -1.676747,8.628261 -0.07435,0.07583 -0.06552,0.07411 -0.454119,0.349323 -0.606965,0.429857 -1.631665,1.042044 -3.318562,1.676747 -1.208528,0.454713 -3.204964,0.850894 -5.135038,1.25756 0.84593,-2.765726 1.41808,-6.005357 1.606883,-9.815957 2.232369,-0.413371 4.483758,-0.840201         5.938479,-1.327425 1.410632,-0.472457 2.153108,-0.89469 2.96924,-1.327425 z m -38.530252,2.864443 c 3.208141,0.56697 7.372279,0.898588 12.575603,0.978103 l 0.174662,9.885821 c -4.392517,-0.06139 -8.106722,-0.320566 -10.863925,-0.803441 -1.051954,-2.664695 -1.692909,-6.043794 -1.88634,-10.060483 z m 26.793022,0.31439 c -0.246298,3.923551 -0.877762,7.263679 -1.816476,9.885822 -2.561957,0.361954 -5.766249,0.560708 -9.431703,0.62878 l -0.174661,-9.815957 c 4.491734,-0.04969 8.334769,-0.293032 11.42284,-0.698645 z M 12.035901,44.860585 c 0.09977,0.04523 0.105535,0.09465 0.209594,0.139729 1.337656,0.579602 3.441099,1.058072 5.589157,1.537018 1.545042,3.399208 3.548524,5.969402 5.589157,7.789888 -3.034411,-1.215537 -5.871615,-3.007978 -8.174142,-5.309699 -1.245911,-1.245475 -2.271794,-2.662961 -3.213766,-4.156936 z m 40.69605,0 c -0.941972,1.493975 -1.967855,2.911461         -3.213765,4.156936 -2.74253,2.741571 -6.244106,4.696717 -9.955686,5.868615 0.261347,-0.241079 0.507495,-0.394491 0.768509,-0.663713 1.674841,-1.727516 3.320792,-4.181056 4.645987,-7.265904 2.962447,-0.503021 5.408965,-1.122293 7.161107,-1.781544 0.284034,-0.106865 0.337297,-0.207323 0.593848,-0.31439 z m -31.404076,2.305527 c 2.645807,0.376448 5.701178,0.649995 9.466635,0.698645 l 0.139729,7.789888 c -1.38739,-0.480844 -3.316218,-1.29837 -5.659022,-3.388427 -1.388822,-1.238993 -2.743668,-3.0113 -3.947342,-5.100106 z m 20.365491,0.104797 c -1.04872,2.041937 -2.174337,3.779068 -3.353494,4.995309 -1.853177,1.911459 -3.425515,2.82679 -4.611055,3.353494 l -0.139729,-7.789887 c 3.13091,-0.05714 5.728238,-0.278725 8.104278,-0.558916 z",l="m 2.9825053,17.550598 0,1.368113 0,26.267766 0,1.368113 1.36811,0 54.9981397,0 1.36811,0 0,-1.368113 0,-26.267766 0,-1.368113 -1.36811,0 -54.9981397,0 -1.36811,0 z m 2.73623,2.736226 10.3292497,0 0,10.466063 -10.3292497,0 0,-10.466063 z m 13.0654697,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 10.32926,0 0,10.466063 -10.32926,0 0,-10.466063 z m -41.9326497,13.202288 10.3292497,0 0,10.329252 -10.3292497,0 0,-10.329252 z m 13.0654697,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 10.32926,0 0,10.329252 -10.32926,0 0,-10.329252 z",u="m 14.723969,17.675598 -0.340489,0.817175 -11.1680536,26.183638 -0.817175,1.872692 2.076986,0 54.7506996,0 2.07698,0 -0.81717,-1.872692 -11.16805,-26.183638 -0.34049,-0.817175 -0.91933,0 -32.414586,0 -0.919322,0 z m 1.838643,2.723916 6.196908,0 -2.928209,10.418977 -7.729111,0 4.460412,-10.418977 z m 9.02297,0 4.903049,0 0,10.418977 -7.831258,0 2.928209,-10.418977 z m 7.626964,0 5.584031,0 2.62176,10.418977 -8.205791,0 0,-10.418977 z m 8.410081,0 5.51593,0 4.46042,10.418977 -7.38863,0 -2.58772,-10.418977 z m -30.678091,13.142892 8.103649,0 -2.89416,10.282782 -9.6018026,0 4.3923136,-10.282782 z m 10.929711,0 8.614384,0 0,10.282782 -11.508544,0 2.89416,-10.282782 z m 11.338299,0 8.852721,0 2.58772,10.282782 -11.440441,0 0,-10.282782 z m 11.678781,0 7.86531,0 4.39231,10.282782 -9.6699,0 -2.58772,-10.282782 z",c=function(e,t,r){e=o(e);var i=new a(t,r);i._globePath=s,i._flatMapPath=l,i._columbusViewPath=u;var c=document.createElement("span");c.className="cesium-sceneModePicker-wrapper cesium-toolbar-button",e.appendChild(c);var h=document.createElement("button");h.type="button",h.className="cesium-button cesium-toolbar-button",h.setAttribute("data-bind",'css: { "cesium-sceneModePicker-button2D": sceneMode === _sceneMode.SCENE2D,       "cesium-sceneModePicker-button3D": sceneMode === _sceneMode.SCENE3D,       "cesium-sceneModePicker-buttonColumbusView": sceneMode === _sceneMode.COLUMBUS_VIEW,       "cesium-sceneModePicker-selected": dropDownVisible },attr: { title: selectedTooltip },click: toggleDropDown'),h.innerHTML='<!-- ko cesiumSvgPath: { path: _globePath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-icon3D" } --><!-- /ko --><!-- ko cesiumSvgPath: { path: _flatMapPath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-icon2D" } --><!-- /ko --><!-- ko cesiumSvgPath: { path: _columbusViewPath, width: 64, height: 64, css: "cesium-sceneModePicker-slide-svg cesium-sceneModePicker-iconColumbusView" } --><!-- /ko -->',c.appendChild(h);var d=document.createElement("button");d.type="button",d.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",d.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.SCENE3D)) || (!dropDownVisible && (sceneMode === _sceneMode.SCENE3D)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.SCENE3D,       "cesium-sceneModePicker-hidden" : !dropDownVisible },attr: { title: tooltip3D },click: morphTo3D,cesiumSvgPath: { path: _globePath, width: 64, height: 64 }'),c.appendChild(d);var m=document.createElement("button");m.type="button",m.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",m.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.SCENE2D)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.SCENE2D,       "cesium-sceneModePicker-hidden" : !dropDownVisible },attr: { title: tooltip2D },click: morphTo2D,cesiumSvgPath: { path: _flatMapPath, width: 64, height: 64 }'),c.appendChild(m);var p=document.createElement("button");p.type="button",p.className="cesium-button cesium-toolbar-button cesium-sceneModePicker-dropDown-icon",p.setAttribute("data-bind",'css: { "cesium-sceneModePicker-visible" : (dropDownVisible && (sceneMode !== _sceneMode.COLUMBUS_VIEW)) || (!dropDownVisible && (sceneMode === _sceneMode.COLUMBUS_VIEW)),       "cesium-sceneModePicker-none" : sceneMode === _sceneMode.COLUMBUS_VIEW,       "cesium-sceneModePicker-hidden" : !dropDownVisible},attr: { title: tooltipColumbusView },click: morphToColumbusView,cesiumSvgPath: { path: _columbusViewPath, width: 64, height: 64 }'),c.appendChild(p),n.applyBindings(i,c),this._viewModel=i,this._container=e,this._wrapper=c,this._closeDropDown=function(e){c.contains(e.target)||(i.dropDownVisible=!1)},document.addEventListener("mousedown",this._closeDropDown,!0),document.addEventListener("touchstart",this._closeDropDown,!0)};return t(c.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),c.prototype.isDestroyed=function(){return!1},c.prototype.destroy=function(){return this._viewModel.destroy(),document.removeEventListener("mousedown",this._closeDropDown,!0),document.removeEventListener("touchstart",this._closeDropDown,!0),n.cleanNode(this._wrapper),this._container.removeChild(this._wrapper),r(this)},c}),r("Widgets/SelectionIndicator/SelectionIndicatorViewModel",["../../Core/Cartesian2","../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/EasingFunction","../../Scene/SceneTransforms","../../ThirdParty/knockout"],function(e,t,r,i,n,o,a,s){"use strict";var l=new e,u="-1000px",c=function(e,i,n){this._scene=e,this._screenPositionX=u,this._screenPositionY=u,this._tweens=e.tweens,this._container=t(n,document.body),this._selectionIndicatorElement=i,this._scale=1,this.position=void 0,this.showSelection=!1,s.track(this,["position","_screenPositionX","_screenPositionY","_scale","showSelection"]),this.isVisible=void 0,s.defineProperty(this,"isVisible",{get:function(){return this.showSelection&&r(this.position)}}),s.defineProperty(this,"_transform",{get:function(){return"scale("+this._scale+")"}}),this.computeScreenSpacePosition=function(t,r){return a.wgs84ToWindowCoordinates(e,t,r)}};return c.prototype.update=function(){if(this.showSelection&&r(this.position)){var e=this.computeScreenSpacePosition(this.position,l);if(r(e)){var t=this._container,i=t.parentNode.clientWidth,n=t.parentNode.clientHeight,o=this._selectionIndicatorElement.clientWidth,a=.5*o;e.x=Math.min(Math.max(e.x,-o),i+o)-a,e.y=Math.min(Math.max(e.y,-o),n+o)-a,this._screenPositionX=Math.floor(e.x+.25)+"px",this._screenPositionY=Math.floor(e.y+.25)+"px"}else this._screenPositionX=u,this._screenPositionY=u}},c.prototype.animateAppear=function(){this._tweens.addProperty({object:this,property:"_scale",startValue:2,stopValue:1,duration:.8,easingFunction:o.EXPONENTIAL_OUT})},c.prototype.animateDepart=function(){this._tweens.addProperty({object:this,property:"_scale",startValue:this._scale,stopValue:1.5,duration:.8,easingFunction:o.EXPONENTIAL_OUT})},i(c.prototype,{container:{get:function(){return this._container}},selectionIndicatorElement:{get:function(){return this._selectionIndicatorElement}},scene:{get:function(){return this._scene}}}),c}),r("Widgets/SelectionIndicator/SelectionIndicator",["../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../ThirdParty/knockout","../getElement","./SelectionIndicatorViewModel"],function(e,t,r,i,n,o,a){"use strict";var s=function(e,t){e=o(e),this._container=e;var r=document.createElement("div");r.className="cesium-selection-wrapper",r.setAttribute("data-bind",'style: { "top" : _screenPositionY, "left" : _screenPositionX },css: { "cesium-selection-wrapper-visible" : isVisible }'),e.appendChild(r),this._element=r;
var i="http://www.w3.org/2000/svg",s="M -34 -34 L -34 -11.25 L -30 -15.25 L -30 -30 L -15.25 -30 L -11.25 -34 L -34 -34 z M 11.25 -34 L 15.25 -30 L 30 -30 L 30 -15.25 L 34 -11.25 L 34 -34 L 11.25 -34 z M -34 11.25 L -34 34 L -11.25 34 L -15.25 30 L -30 30 L -30 15.25 L -34 11.25 z M 34 11.25 L 30 15.25 L 30 30 L 15.25 30 L 11.25 34 L 34 34 L 34 11.25 z",l=document.createElementNS(i,"svg:svg");l.setAttribute("width",160),l.setAttribute("height",160),l.setAttribute("viewBox","0 0 160 160");var u=document.createElementNS(i,"g");u.setAttribute("transform","translate(80,80)"),l.appendChild(u);var c=document.createElementNS(i,"path");c.setAttribute("data-bind","attr: { transform: _transform }"),c.setAttribute("d",s),u.appendChild(c),r.appendChild(l);var h=new a(t,this._element,this._container);this._viewModel=h,n.applyBindings(this._viewModel,this._element)};return t(s.prototype,{container:{get:function(){return this._container}},viewModel:{get:function(){return this._viewModel}}}),s.prototype.isDestroyed=function(){return!1},s.prototype.destroy=function(){var e=this._container;return n.cleanNode(this._element),e.removeChild(this._element),r(this)},s}),r("Widgets/Timeline/TimelineHighlightRange",["../../Core/defaultValue","../../Core/JulianDate"],function(e,t){"use strict";function r(t,r,i){this._color=t,this._height=r,this._base=e(i,0)}return r.prototype.getHeight=function(){return this._height},r.prototype.getBase=function(){return this._base},r.prototype.getStartTime=function(){return this._start},r.prototype.getStopTime=function(){return this._stop},r.prototype.setRange=function(e,t){this._start=e,this._stop=t},r.prototype.render=function(e){var r="";if(this._start&&this._stop&&this._color){var i=t.secondsDifference(this._start,e.epochJulian),n=Math.round(e.timeBarWidth*e.getAlpha(i)),o=t.secondsDifference(this._stop,e.epochJulian),a=Math.round(e.timeBarWidth*e.getAlpha(o))-n;0>n&&(a+=n,n=0),n+a>e.timeBarWidth&&(a=e.timeBarWidth-n),a>0&&(r='<span class="cesium-timeline-highlight" style="left: '+n.toString()+"px; width: "+a.toString()+"px; bottom: "+this._base.toString()+"px; height: "+this._height+"px; background-color: "+this._color+';"></span>')}return r},r}),r("Widgets/Timeline/TimelineTrack",["../../Core/Color","../../Core/defined","../../Core/JulianDate"],function(e,t,r){"use strict";function i(t,r,i,n){this.interval=t,this.height=r,this.color=i||new e(.5,.5,.5,1),this.backgroundColor=n||new e(0,0,0,0)}return i.prototype.render=function(e,i){var n=this.interval.start,o=this.interval.stop,a=i.startJulian,s=r.addSeconds(i.startJulian,i.duration,new r);if(r.lessThan(n,a)&&r.greaterThan(o,s))e.fillStyle=this.color.toCssColorString(),e.fillRect(0,i.y,i.timeBarWidth,this.height);else if(r.lessThanOrEquals(n,s)&&r.greaterThanOrEquals(o,a)){var l,u,c;for(l=0;l<i.timeBarWidth;++l){var h=r.addSeconds(i.startJulian,l/i.timeBarWidth*i.duration,new r);!t(u)&&r.greaterThanOrEquals(h,n)?u=l:!t(c)&&r.greaterThanOrEquals(h,o)&&(c=l)}e.fillStyle=this.backgroundColor.toCssColorString(),e.fillRect(0,i.y,i.timeBarWidth,this.height),t(u)&&(t(c)||(c=i.timeBarWidth),e.fillStyle=this.color.toCssColorString(),e.fillRect(u,i.y,Math.max(c-u,1),this.height))}},i}),r("Widgets/Timeline/Timeline",["../../Core/ClockRange","../../Core/defined","../../Core/destroyObject","../../Core/DeveloperError","../../Core/JulianDate","../getElement","./TimelineHighlightRange","./TimelineTrack"],function(e,t,r,i,n,o,a,s){"use strict";function l(e){return 10>e?"0"+e.toString():e.toString()}function u(e){return function(t){e._mouseMode!==g.touchOnly&&(0===t.button?(e._mouseMode=g.scrub,e._scrubElement&&(e._scrubElement.style.backgroundPosition="-16px 0"),e._onMouseMove(t)):(e._mouseX=t.clientX,e._mouseMode=2===t.button?g.zoom:g.slide)),t.preventDefault()}}function c(e){return function(){e._mouseMode=g.none,e._scrubElement&&(e._scrubElement.style.backgroundPosition="0px 0px"),e._timelineDrag=0,e._timelineDragLocation=void 0}}function h(e){return function(t){var r;if(e._mouseMode===g.scrub){t.preventDefault();var i=t.clientX-e._topDiv.getBoundingClientRect().left;0>i?(e._timelineDragLocation=0,e._timelineDrag=-.01*e._timeBarSecondsSpan):i>e._topDiv.clientWidth?(e._timelineDragLocation=e._topDiv.clientWidth,e._timelineDrag=.01*e._timeBarSecondsSpan):(e._timelineDragLocation=void 0,e._setTimeBarTime(i,i*e._timeBarSecondsSpan/e._topDiv.clientWidth))}else if(e._mouseMode===g.slide){if(r=e._mouseX-t.clientX,e._mouseX=t.clientX,0!==r){var o=r*e._timeBarSecondsSpan/e._topDiv.clientWidth;e.zoomTo(n.addSeconds(e._startJulian,o,new n),n.addSeconds(e._endJulian,o,new n))}}else e._mouseMode===g.zoom&&(r=e._mouseX-t.clientX,e._mouseX=t.clientX,0!==r&&e.zoomFrom(Math.pow(1.01,r)))}}function d(e){return function(t){var r=t.wheelDeltaY||t.wheelDelta||-t.detail;v=Math.max(Math.min(Math.abs(r),v),1),r/=v,e.zoomFrom(Math.pow(1.05,-r))}}function m(e){return function(t){var r,i,o=t.touches.length,a=e._topDiv.getBoundingClientRect().left;t.preventDefault(),e._mouseMode=g.touchOnly,1===o?(r=n.secondsDifference(e._scrubJulian,e._startJulian),i=Math.round(r*e._topDiv.clientWidth/e._timeBarSecondsSpan+a),Math.abs(t.touches[0].clientX-i)<50?(e._touchMode=_.scrub,e._scrubElement&&(e._scrubElement.style.backgroundPosition=1===o?"-16px 0":"0 0")):(e._touchMode=_.singleTap,e._touchState.centerX=t.touches[0].clientX-a)):2===o?(e._touchMode=_.slideZoom,e._touchState.centerX=.5*(t.touches[0].clientX+t.touches[1].clientX)-a,e._touchState.spanX=Math.abs(t.touches[0].clientX-t.touches[1].clientX)):e._touchMode=_.ignore}}function p(e){return function(t){var r=t.touches.length,i=e._topDiv.getBoundingClientRect().left;e._touchMode===_.singleTap?(e._touchMode=_.scrub,e._handleTouchMove(t)):e._touchMode===_.scrub&&e._handleTouchMove(t),e._mouseMode=g.touchOnly,1!==r?e._touchMode=r>0?_.ignore:_.none:e._touchMode===_.slideZoom&&(e._touchState.centerX=t.touches[0].clientX-i),e._scrubElement&&(e._scrubElement.style.backgroundPosition="0 0")}}function f(e){return function(r){var i,o,a,s,l,u,c=1,h=e._topDiv.getBoundingClientRect().left;e._touchMode===_.singleTap&&(e._touchMode=_.slideZoom),e._mouseMode=g.touchOnly,e._touchMode===_.scrub?(r.preventDefault(),1===r.changedTouches.length&&(o=r.changedTouches[0].clientX-h,o>=0&&o<=e._topDiv.clientWidth&&e._setTimeBarTime(o,o*e._timeBarSecondsSpan/e._topDiv.clientWidth))):e._touchMode===_.slideZoom&&(a=r.touches.length,2===a?(s=.5*(r.touches[0].clientX+r.touches[1].clientX)-h,l=Math.abs(r.touches[0].clientX-r.touches[1].clientX)):1===a&&(s=r.touches[0].clientX-h,l=0),t(s)&&(l>0&&e._touchState.spanX>0?(c=e._touchState.spanX/l,u=n.addSeconds(e._startJulian,(e._touchState.centerX*e._timeBarSecondsSpan-s*e._timeBarSecondsSpan*c)/e._topDiv.clientWidth,new n)):(i=e._touchState.centerX-s,u=n.addSeconds(e._startJulian,i*e._timeBarSecondsSpan/e._topDiv.clientWidth,new n)),e.zoomTo(u,n.addSeconds(u,e._timeBarSecondsSpan*c,new n)),e._touchState.centerX=s,e._touchState.spanX=l))}}var v=1e12,g={none:0,scrub:1,slide:2,zoom:3,touchOnly:4},_={none:0,scrub:1,slideZoom:2,singleTap:3,ignore:4},y=[.001,.002,.005,.01,.02,.05,.1,.25,.5,1,2,5,10,15,30,60,120,300,600,900,1800,3600,7200,14400,21600,43200,86400,172800,345600,604800,1296e3,2592e3,5184e3,7776e3,15552e3,31536e3,63072e3,126144e3,15768e4,31536e4,63072e4,126144e4,15768e5,31536e5,63072e5,126144e5,15768e6,31536e6],C=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],w=function(e,t){e=o(e),this.container=e;var r=document.createElement("div");r.className="cesium-timeline-main",e.appendChild(r),this._topDiv=r,this._endJulian=void 0,this._epochJulian=void 0,this._lastXPos=void 0,this._scrubElement=void 0,this._startJulian=void 0,this._timeBarSecondsSpan=void 0,this._clock=t,this._scrubJulian=t.currentTime,this._mainTicSpan=-1,this._mouseMode=g.none,this._touchMode=_.none,this._touchState={centerX:0,spanX:0},this._mouseX=0,this._timelineDrag=0,this._timelineDragLocation=void 0,this._lastHeight=void 0,this._lastWidth=void 0,this._topDiv.innerHTML='<div class="cesium-timeline-bar"></div><div class="cesium-timeline-trackContainer"><canvas class="cesium-timeline-tracks" width="10" height="1"></canvas></div><div class="cesium-timeline-needle"></div><span class="cesium-timeline-ruler"></span>',this._timeBarEle=this._topDiv.childNodes[0],this._trackContainer=this._topDiv.childNodes[1],this._trackListEle=this._topDiv.childNodes[1].childNodes[0],this._needleEle=this._topDiv.childNodes[2],this._rulerEle=this._topDiv.childNodes[3],this._context=this._trackListEle.getContext("2d"),this._trackList=[],this._highlightRanges=[],this.zoomTo(t.startTime,t.stopTime),this._onMouseDown=u(this),this._onMouseUp=c(this),this._onMouseMove=h(this),this._onMouseWheel=d(this),this._onTouchStart=m(this),this._onTouchMove=f(this),this._onTouchEnd=p(this);var i=this._timeBarEle;document.addEventListener("mouseup",this._onMouseUp,!1),document.addEventListener("mousemove",this._onMouseMove,!1),i.addEventListener("mousedown",this._onMouseDown,!1),i.addEventListener("DOMMouseScroll",this._onMouseWheel,!1),i.addEventListener("mousewheel",this._onMouseWheel,!1),i.addEventListener("touchstart",this._onTouchStart,!1),i.addEventListener("touchmove",this._onTouchMove,!1),i.addEventListener("touchend",this._onTouchEnd,!1),this._topDiv.oncontextmenu=function(){return!1},t.onTick.addEventListener(this.updateFromClock,this),this.updateFromClock()};return w.prototype.addEventListener=function(e,t,r){this._topDiv.addEventListener(e,t,r)},w.prototype.removeEventListener=function(e,t,r){this._topDiv.removeEventListener(e,t,r)},w.prototype.isDestroyed=function(){return!1},w.prototype.destroy=function(){this._clock.onTick.removeEventListener(this.updateFromClock,this),document.removeEventListener("mouseup",this._onMouseUp,!1),document.removeEventListener("mousemove",this._onMouseMove,!1);var e=this._timeBarEle;e.removeEventListener("mousedown",this._onMouseDown,!1),e.removeEventListener("DOMMouseScroll",this._onMouseWheel,!1),e.removeEventListener("mousewheel",this._onMouseWheel,!1),e.removeEventListener("touchstart",this._onTouchStart,!1),e.removeEventListener("touchmove",this._onTouchMove,!1),e.removeEventListener("touchend",this._onTouchEnd,!1),this.container.removeChild(this._topDiv),r(this)},w.prototype.addHighlightRange=function(e,t,r){var i=new a(e,t,r);return this._highlightRanges.push(i),this.resize(),i},w.prototype.addTrack=function(e,t,r,i){var n=new s(e,t,r,i);return this._trackList.push(n),this._lastHeight=void 0,this.resize(),n},w.prototype.zoomTo=function(t,r){if(this._startJulian=t,this._endJulian=r,this._timeBarSecondsSpan=n.secondsDifference(r,t),this._clock&&this._clock.clockRange!==e.UNBOUNDED){var i=this._clock.startTime,o=this._clock.stopTime,a=n.secondsDifference(o,i),s=n.secondsDifference(i,this._startJulian),l=n.secondsDifference(o,this._endJulian);this._timeBarSecondsSpan>=a?(this._timeBarSecondsSpan=a,this._startJulian=this._clock.startTime,this._endJulian=this._clock.stopTime):s>0?(this._endJulian=n.addSeconds(this._endJulian,s,new n),this._startJulian=i,this._timeBarSecondsSpan=n.secondsDifference(this._endJulian,this._startJulian)):0>l&&(this._startJulian=n.addSeconds(this._startJulian,l,new n),this._endJulian=o,this._timeBarSecondsSpan=n.secondsDifference(this._endJulian,this._startJulian))}this._makeTics();var u=document.createEvent("Event");u.initEvent("setzoom",!0,!0),u.startJulian=this._startJulian,u.endJulian=this._endJulian,u.epochJulian=this._epochJulian,u.totalSpan=this._timeBarSecondsSpan,u.mainTicSpan=this._mainTicSpan,this._topDiv.dispatchEvent(u)},w.prototype.zoomFrom=function(e){var t=n.secondsDifference(this._scrubJulian,this._startJulian);e>1||0>t||t>this._timeBarSecondsSpan?t=.5*this._timeBarSecondsSpan:t+=t-.5*this._timeBarSecondsSpan;var r=this._timeBarSecondsSpan-t;this.zoomTo(n.addSeconds(this._startJulian,t-t*e,new n),n.addSeconds(this._endJulian,r*e-r,new n))},w.prototype.makeLabel=function(e){var t=n.toGregorianDate(e),r=t.millisecond,i=" UTC";if(r>0&&this._timeBarSecondsSpan<3600){for(i=Math.floor(r).toString();i.length<3;)i="0"+i;i="."+i}return C[t.month-1]+" "+t.day+" "+t.year+" "+l(t.hour)+":"+l(t.minute)+":"+l(t.second)+i},w.prototype.smallestTicInPixels=7,w.prototype._makeTics=function(){function e(e){return Math.floor(S/e)*e}function t(e,t){return Math.ceil(e/t+.5)*t}function r(e){return(e-S)/v}function i(e,t){return e-t*Math.round(e/t)}var o,a=this._timeBarEle,s=n.secondsDifference(this._scrubJulian,this._startJulian),l=Math.round(s*this._topDiv.clientWidth/this._timeBarSecondsSpan),u=l-8,c=this;this._needleEle.style.left=l.toString()+"px";var h="",d=.01,m=31536e6,p=1e-10,f=0,v=this._timeBarSecondsSpan;d>v?(v=d,this._timeBarSecondsSpan=d,this._endJulian=n.addSeconds(this._startJulian,d,new n)):v>m&&(v=m,this._timeBarSecondsSpan=m,this._endJulian=n.addSeconds(this._startJulian,m,new n));var g=this._timeBarEle.clientWidth;10>g&&(g=10);var _,C=this._startJulian,w=Math.min(1e-5*(v/g),.4);_=v>31536e4?n.fromIso8601(n.toDate(C).toISOString().substring(0,2)+"00-01-01T00:00:00Z"):v>31536e3?n.fromIso8601(n.toDate(C).toISOString().substring(0,3)+"0-01-01T00:00:00Z"):v>86400?n.fromIso8601(n.toDate(C).toISOString().substring(0,4)+"-01-01T00:00:00Z"):n.fromIso8601(n.toDate(C).toISOString().substring(0,10)+"T00:00:00Z");var S=n.secondsDifference(this._startJulian,n.addSeconds(_,w,new n)),E=S+v;this._epochJulian=_,this._rulerEle.innerHTML=this.makeLabel(n.addSeconds(this._endJulian,-d,new n));var b=this._rulerEle.offsetWidth+20;30>b&&(b=180);var T=f;f-=p;var x={startTime:S,startJulian:C,epochJulian:_,duration:v,timeBarWidth:g,getAlpha:r};this._highlightRanges.forEach(function(e){h+=e.render(x)});var P=0,A=0,M=0,D=b/g;D>1&&(D=1),D*=this._timeBarSecondsSpan;var I,R=-1,O=-1,L=y.length;for(I=0;L>I;++I){var N=y[I];if(++R,P=N,N>D&&N>f)break;0>O&&g*(N/this._timeBarSecondsSpan)>=this.smallestTicInPixels&&(O=R)}if(R>0){for(;R>0;)if(--R,Math.abs(i(P,y[R]))<1e-5){y[R]>=f&&(A=y[R]);break}if(O>=0)for(;R>O;){if(Math.abs(i(A,y[O]))<1e-5&&y[O]>=f){M=y[O];break}++O}}f=T,f>p&&1e-5>M&&Math.abs(f-P)>p&&(M=f,P+p>=f&&(A=0));var B,F=-999999;if(g*(M/this._timeBarSecondsSpan)>=3)for(o=e(M);E>=o;o=t(o,M))h+='<span class="cesium-timeline-ticTiny" style="left: '+Math.round(g*r(o)).toString()+'px;"></span>';if(g*(A/this._timeBarSecondsSpan)>=3)for(o=e(A);E>=o;o=t(o,A))h+='<span class="cesium-timeline-ticSub" style="left: '+Math.round(g*r(o)).toString()+'px;"></span>';if(g*(P/this._timeBarSecondsSpan)>=2){this._mainTicSpan=P,E+=P,o=e(P);for(var z=n.computeTaiMinusUtc(_);E>=o;){var V=n.addSeconds(C,o-S,new n);if(P>2.1){var k=n.computeTaiMinusUtc(V);Math.abs(k-z)>.1&&(o+=k-z,V=n.addSeconds(C,o-S,new n))}var U=Math.round(g*r(o)),W=this.makeLabel(V);this._rulerEle.innerHTML=W,B=this._rulerEle.offsetWidth,10>B&&(B=b);var G=U-(B/2-1);G>F?(F=G+B+5,h+='<span class="cesium-timeline-ticMain" style="left: '+U.toString()+'px;"></span>'+'<span class="cesium-timeline-ticLabel" style="left: '+G.toString()+'px;">'+W+"</span>"):h+='<span class="cesium-timeline-ticSub" style="left: '+U.toString()+'px;"></span>',o=t(o,P)}}else this._mainTicSpan=-1;h+='<span class="cesium-timeline-icon16" style="left:'+u+'px;bottom:0;background-position: 0px 0px;"></span>',a.innerHTML=h,this._scrubElement=a.lastChild,this._context.clearRect(0,0,this._trackListEle.width,this._trackListEle.height),x.y=0,this._trackList.forEach(function(e){e.render(c._context,x),x.y+=e.height})},w.prototype.updateFromClock=function(){this._scrubJulian=this._clock.currentTime;var e=this._scrubElement;if(t(this._scrubElement)){var r=n.secondsDifference(this._scrubJulian,this._startJulian),i=Math.round(r*this._topDiv.clientWidth/this._timeBarSecondsSpan);this._lastXPos!==i&&(this._lastXPos=i,e.style.left=i-8+"px",this._needleEle.style.left=i+"px")}t(this._timelineDragLocation)&&(this._setTimeBarTime(this._timelineDragLocation,this._timelineDragLocation*this._timeBarSecondsSpan/this._topDiv.clientWidth),this.zoomTo(n.addSeconds(this._startJulian,this._timelineDrag,new n),n.addSeconds(this._endJulian,this._timelineDrag,new n)))},w.prototype._setTimeBarTime=function(e,t){if(e=Math.round(e),this._scrubJulian=n.addSeconds(this._startJulian,t,new n),this._scrubElement){var r=e-8;this._scrubElement.style.left=r.toString()+"px",this._needleEle.style.left=e.toString()+"px"}var i=document.createEvent("Event");i.initEvent("settime",!0,!0),i.clientX=e,i.timeSeconds=t,i.timeJulian=this._scrubJulian,i.clock=this._clock,this._topDiv.dispatchEvent(i)},w.prototype.resize=function(){var e=this.container.clientWidth,t=this.container.clientHeight;if(e!==this._lastWidth||t!==this._lastHeight){this._trackContainer.style.height=t+"px";var r=1;this._trackList.forEach(function(e){r+=e.height}),this._trackListEle.style.height=r.toString()+"px",this._trackListEle.width=this._trackListEle.clientWidth,this._trackListEle.height=r,this._makeTics(),this._lastWidth=e,this._lastHeight=t}},w}),r("Widgets/Viewer/Viewer",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/destroyObject","../../Core/DeveloperError","../../Core/EventHelper","../../DataSources/DataSourceCollection","../../DataSources/DataSourceDisplay","../../ThirdParty/knockout","../Animation/Animation","../Animation/AnimationViewModel","../BaseLayerPicker/BaseLayerPicker","../BaseLayerPicker/createDefaultImageryProviderViewModels","../BaseLayerPicker/createDefaultTerrainProviderViewModels","../CesiumWidget/CesiumWidget","../ClockViewModel","../FullscreenButton/FullscreenButton","../Geocoder/Geocoder","../getElement","../HomeButton/HomeButton","../InfoBox/InfoBox","../NavigationHelpButton/NavigationHelpButton","../SceneModePicker/SceneModePicker","../SelectionIndicator/SelectionIndicator","../subscribeAndEvaluate","../Timeline/Timeline"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T){"use strict";function x(e){var t=e.clock;t.currentTime=e.timeJulian,t.shouldAnimate=!1}function P(e){var r=e._container,i=r.clientWidth,n=r.clientHeight,o=t(e._animation),a=t(e._timeline);if(i!==e._lastWidth||n!==e._lastHeight){var s=n-125,l=e._baseLayerPickerDropDown;t(l)&&(l.style.maxHeight=s+"px"),t(e._infoBox)&&(e._infoBox.viewModel.maxHeight=s);var u,c=e._timeline,h=0,d=0,m=0;if(o&&"hidden"!==window.getComputedStyle(e._animation.container).visibility){var p=e._lastWidth;u=e._animation.container,i>900?(h=169,900>=p&&(u.style.width="169px",u.style.height="112px",e._animation.resize())):i>=600?(h=136,(600>p||p>900)&&(u.style.width="136px",u.style.height="90px",e._animation.resize())):(h=106,(p>600||0===p)&&(u.style.width="106px",u.style.height="70px",e._animation.resize())),d=h+5}if(a&&"hidden"!==window.getComputedStyle(e._timeline.container).visibility){var f=e._fullscreenButton,v=c.container,g=v.style;m=v.clientHeight+3,g.left=h+"px",t(f)&&(g.right=f.container.clientWidth+"px"),c.resize()}e._bottomContainer.style.left=d+"px",e._bottomContainer.style.bottom=m+"px",e._lastWidth=i,e._lastHeight=n}}var A=function(r,i){function A(e){if(t(e)){var r=e.clock;t(r)&&(r.getValue(z),t(at)&&(at.updateFromClock(),at.zoomTo(r.startTime,r.stopTime)))}}r=_(r),i=e(i,e.EMPTY_OBJECT);var M=!t(i.baseLayerPicker)||i.baseLayerPicker!==!1,D=document.createElement("div");D.className="cesium-viewer",r.appendChild(D);var I=document.createElement("div");I.className="cesium-viewer-cesiumWidgetContainer",D.appendChild(I);var R=document.createElement("div");R.className="cesium-viewer-bottom",D.appendChild(R);var O=e(i.scene3DOnly,!1),L=new p(I,{terrainProvider:i.terrainProvider,imageryProvider:M?!1:i.imageryProvider,skyBox:i.skyBox,sceneMode:i.sceneMode,mapProjection:i.mapProjection,orderIndependentTranslucency:i.orderIndependentTranslucency,contextOptions:i.contextOptions,useDefaultRenderLoop:i.useDefaultRenderLoop,targetFrameRate:i.targetFrameRate,showRenderLoopErrors:i.showRenderLoopErrors,creditContainer:t(i.creditContainer)?i.creditContainer:R,scene3DOnly:O}),N=i.dataSources,B=!1;t(N)||(N=new a,B=!0);var F=new s({scene:L.scene,dataSourceCollection:N}),z=L.clock,V=new f(z),k=new o,U=this;k.add(z.onTick,function(e){var t=F.update(e.currentTime);U._allowDataSourcesToSuspendAnimation&&(V.canAnimate=t)});var W;if(!t(i.selectionIndicator)||i.selectionIndicator!==!1){var G=document.createElement("div");G.className="cesium-viewer-selectionIndicatorContainer",D.appendChild(G),W=new E(G,L.scene)}var H;if(!t(i.infoBox)||i.infoBox!==!1){var q=document.createElement("div");q.className="cesium-viewer-infoBoxContainer",D.appendChild(q),H=new C(q)}var j=document.createElement("div");j.className="cesium-viewer-toolbar",D.appendChild(j);var Y;if(!t(i.geocoder)||i.geocoder!==!1){var X=document.createElement("div");X.className="cesium-viewer-geocoderContainer",j.appendChild(X),Y=new g({container:X,scene:L.scene})}var Z;if(t(i.homeButton)&&i.homeButton===!1||(Z=new y(j,L.scene),t(Y)&&k.add(Z.viewModel.command.afterExecute,function(){var e=Y.viewModel;e.searchText="",e.isSearchInProgress&&e.search()})),i.sceneModePicker===!0&&O)throw new n("options.sceneModePicker is not available when options.scene3DOnly is set to true.");var Q;O||t(i.sceneModePicker)&&i.sceneModePicker===!1||(Q=new S(j,L.scene));var J;if(M){var K=e(i.imageryProviderViewModels,d()),$=e(i.terrainProviderViewModels,m());J=new h(j,{globe:L.scene.globe,imageryProviderViewModels:K,selectedImageryProviderViewModel:i.selectedImageryProviderViewModel,terrainProviderViewModels:$,selectedTerrainProviderViewModel:i.selectedTerrainProviderViewModel});var et=j.getElementsByClassName("cesium-baseLayerPicker-dropDown");this._baseLayerPickerDropDown=et[0]}var tt;if(!t(i.navigationHelpButton)||i.navigationHelpButton!==!1){var rt=!0;if(t(window.localStorage)){var it=window.localStorage.getItem("cesium-hasSeenNavHelp");t(it)&&Boolean(it)?rt=!1:window.localStorage.setItem("cesium-hasSeenNavHelp","true")}tt=new w({container:j,instructionsInitiallyVisible:e(i.navigationInstructionsInitiallyVisible,rt)})}var nt;if(!t(i.animation)||i.animation!==!1){var ot=document.createElement("div");ot.className="cesium-viewer-animationContainer",D.appendChild(ot),nt=new u(ot,new c(V))}var at;if(!t(i.timeline)||i.timeline!==!1){var st=document.createElement("div");st.className="cesium-viewer-timelineContainer",D.appendChild(st),at=new T(st,z),at.addEventListener("settime",x,!1),at.zoomTo(z.startTime,z.stopTime)}var lt;if(t(i.fullscreenButton)&&i.fullscreenButton===!1)t(at)&&(at.container.style.right=0);else{var ut=document.createElement("div");ut.className="cesium-viewer-fullscreenContainer",D.appendChild(ut),lt=new v(ut,i.fullscreenElement),this._fullscreenSubscription=b(lt.viewModel,"isFullscreenEnabled",function(e){ut.style.display=e?"block":"none",t(at)&&(at.container.style.right=ut.clientWidth+"px",at.resize())})}this.clockTrackedDataSource=void 0,l.track(this,["clockTrackedDataSource"]),this._dataSourceChangedListeners={},this._knockoutSubscriptions=[];var ct=e(i.automaticallyTrackDataSourceClocks,!0);this._knockoutSubscriptions.push(b(this,"clockTrackedDataSource",function(e){A(e)}));var ht=function(e){U.clockTrackedDataSource===e&&A(e)},dt=function(e,t){ct&&(U.clockTrackedDataSource=t);var r=t.entities.id,i=k.add(t.changedEvent,ht);U._dataSourceChangedListeners[r]=i},mt=function(e,t){var r=U.clockTrackedDataSource===t,i=t.entities.id;if(U._dataSourceChangedListeners[i](),U._dataSourceChangedListeners[i]=void 0,r){var n=e.length;U.clockTrackedDataSource=ct&&n>0?e.get(n-1):void 0}};k.add(N.dataSourceAdded,dt),k.add(N.dataSourceRemoved,mt),this._container=r,this._bottomContainer=R,this._element=D,this._cesiumWidget=L,this._selectionIndicator=W,this._infoBox=H,this._dataSourceCollection=N,this._destroyDataSourceCollection=B,this._dataSourceDisplay=F,this._clockViewModel=V,this._toolbar=j,this._homeButton=Z,this._sceneModePicker=Q,this._baseLayerPicker=J,this._animation=nt,this._timeline=at,this._fullscreenButton=lt,this._geocoder=Y,this._eventHelper=k,this._lastWidth=0,this._lastHeight=0,this._allowDataSourcesToSuspendAnimation=!0,L.scene.preRender.addEventListener(function(){P(U)})};return r(A.prototype,{container:{get:function(){return this._container}},bottomContainer:{get:function(){return this._bottomContainer}},cesiumWidget:{get:function(){return this._cesiumWidget}},selectionIndicator:{get:function(){return this._selectionIndicator}},infoBox:{get:function(){return this._infoBox}},geocoder:{get:function(){return this._geocoder}},homeButton:{get:function(){return this._homeButton}},sceneModePicker:{get:function(){return this._sceneModePicker}},baseLayerPicker:{get:function(){return this._baseLayerPicker}},animation:{get:function(){return this._animation}},timeline:{get:function(){return this._timeline}},fullscreenButton:{get:function(){return this._fullscreenButton}},dataSourceDisplay:{get:function(){return this._dataSourceDisplay}},dataSources:{get:function(){return this._dataSourceCollection}},canvas:{get:function(){return this._cesiumWidget.canvas}},cesiumLogo:{get:function(){return this._cesiumWidget.cesiumLogo}},scene:{get:function(){return this._cesiumWidget.scene}},clock:{get:function(){return this._cesiumWidget.clock}},screenSpaceEventHandler:{get:function(){return this._cesiumWidget.screenSpaceEventHandler}},targetFrameRate:{get:function(){return this._cesiumWidget.targetFrameRate},set:function(e){this._cesiumWidget.targetFrameRate=e}},useDefaultRenderLoop:{get:function(){return this._cesiumWidget.useDefaultRenderLoop},set:function(e){this._cesiumWidget.useDefaultRenderLoop=e}},resolutionScale:{get:function(){return this._cesiumWidget.resolutionScale},set:function(e){this._cesiumWidget.resolutionScale=e}},allowDataSourcesToSuspendAnimation:{get:function(){return this._allowDataSourcesToSuspendAnimation},set:function(e){this._allowDataSourcesToSuspendAnimation=e}}}),A.prototype.extend=function(e,t){e(this,t)},A.prototype.resize=function(){var e=this._cesiumWidget;e.resize(),P(this)},A.prototype.forceResize=function(){this._lastWidth=0,this.resize()},A.prototype.render=function(){this._cesiumWidget.render()},A.prototype.isDestroyed=function(){return!1},A.prototype.destroy=function(){var e,r=this._knockoutSubscriptions.length;for(e=0;r>e;e++)this._knockoutSubscriptions[e].dispose();return this._container.removeChild(this._element),this._element.removeChild(this._toolbar),this._eventHelper.removeAll(),t(this._geocoder)&&(this._geocoder=this._geocoder.destroy()),t(this._homeButton)&&(this._homeButton=this._homeButton.destroy()),t(this._sceneModePicker)&&(this._sceneModePicker=this._sceneModePicker.destroy()),t(this._baseLayerPicker)&&(this._baseLayerPicker=this._baseLayerPicker.destroy()),t(this._animation)&&(this._element.removeChild(this._animation.container),this._animation=this._animation.destroy()),t(this._timeline)&&(this._timeline.removeEventListener("settime",x,!1),this._element.removeChild(this._timeline.container),this._timeline=this._timeline.destroy()),t(this._fullscreenButton)&&(this._fullscreenSubscription.dispose(),this._element.removeChild(this._fullscreenButton.container),this._fullscreenButton=this._fullscreenButton.destroy()),t(this._infoBox)&&(this._element.removeChild(this._infoBox.container),this._infoBox=this._infoBox.destroy()),t(this._selectionIndicator)&&(this._element.removeChild(this._selectionIndicator.container),this._selectionIndicator=this._selectionIndicator.destroy()),this._clockViewModel=this._clockViewModel.destroy(),this._dataSourceDisplay=this._dataSourceDisplay.destroy(),this._cesiumWidget=this._cesiumWidget.destroy(),this._destroyDataSourceCollection&&(this._dataSourceCollection=this._dataSourceCollection.destroy()),i(this)},A}),r("Widgets/Viewer/viewerCesiumInspectorMixin",["../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../CesiumInspector/CesiumInspector"],function(e,t,r,i){"use strict";var n=function(n){if(!e(n))throw new r("viewer is required.");var o=document.createElement("div");o.className="cesium-viewer-cesiumInspectorContainer",n.container.appendChild(o);var a=new i(o,n.scene);t(n,{cesiumInspector:{get:function(){return a}}}),n.scene.postRender.addEventListener(function(){n.cesiumInspector.viewModel.update()})};return n}),r("Widgets/Viewer/viewerDragDropMixin",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../../Core/Event","../../Core/wrapFunction","../../DataSources/CzmlDataSource","../../DataSources/GeoJsonDataSource","../getElement"],function(e,t,r,i,n,o,a,s,l){"use strict";function u(e){e.stopPropagation(),e.preventDefault()}function c(e,r){var i=e;t(i)&&(i.removeEventListener("drop",r,!1),i.removeEventListener("dragenter",u,!1),i.removeEventListener("dragover",u,!1),i.removeEventListener("dragexit",u,!1))}function h(e,t){e.addEventListener("drop",t,!1),e.addEventListener("dragenter",u,!1),e.addEventListener("dragover",u,!1),e.addEventListener("dragexit",u,!1)}function d(e,r){return function(i){var n=r.name;try{var o,l;if(/\.czml$/i.test(n))o=new a(n),o.load(JSON.parse(i.target.result),n);else{if(!(/\.geojson$/i.test(n)||/\.json$/i.test(n)||/\.topojson$/i.test(n)))return e.dropError.raiseEvent(e,n,"Unrecognized file: "+n),void 0;o=new s(n),l=o.load(JSON.parse(i.target.result),n)}e.dataSources.add(o),t(l)&&l.otherwise(function(t){e.dropError.raiseEvent(e,n,t)})}catch(u){e.dropError.raiseEvent(e,n,u)}}}function m(e,t){return function(r){e.dropError.raiseEvent(e,t.name,r.target.error)}}var p=function(t,i){function a(e){u(e),f&&t.dataSources.removeAll();for(var r=e.dataTransfer.files,i=r.length,n=0;i>n;n++){var o=r[n],a=new FileReader;a.onload=d(t,o),a.onerror=m(t,o),a.readAsText(o)}}i=e(i,e.EMPTY_OBJECT);var s=!0,p=new n,f=e(i.clearOnDrop,!0),v=e(i.dropTarget,t.container);v=l(v),r(t,{dropTarget:{get:function(){return v},set:function(e){c(v,a),v=e,h(v,a)}},dropEnabled:{get:function(){return s},set:function(e){e!==s&&(e?h(v,a):c(v,a),s=e)}},dropError:{get:function(){return p}},clearOnDrop:{get:function(){return f},set:function(e){f=e}}}),h(v,a),t.destroy=o(t,t.destroy,function(){t.dropEnabled=!1}),t._handleDrop=a};return p}),r("Widgets/Viewer/viewerEntityMixin",["../../Core/Cartesian3","../../Core/defaultValue","../../Core/defined","../../Core/DeveloperError","../../Core/EventHelper","../../Core/ScreenSpaceEventType","../../Core/wrapFunction","../../DataSources/ConstantPositionProperty","../../DataSources/Entity","../../DataSources/EntityView","../../Scene/SceneMode","../../ThirdParty/knockout","../../ThirdParty/when","../subscribeAndEvaluate"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m){"use strict";function p(e,t){var i=e.scene,n=i.camera.getPickRay(t),o=i.imageryLayers.pickImageryLayerFeatures(n,i);if(r(o)){var a=new l("Loading...");return a.description={getValue:function(){return"Loading feature information..."}},d(o,function(t){if(e.selectedEntity===a){if(!r(t)||0===t.length)return e.selectedEntity=f(),void 0;var i=t[0],n=new l(i.name);if(n.description={getValue:function(){return i.description}},r(i.position)){var o=e.scene.globe.ellipsoid.cartographicToCartesian(i.position,g);n.position=new s(o)}e.selectedEntity=n}},function(){if(e.selectedEntity===a){var t=new l("None");t.description={getValue:function(){return"No features found."}},e.selectedEntity=f()}}),a}}function f(){var e=new l("None");return e.description={getValue:function(){return"No features found."}},e}var v=function(e){function i(){e.trackedEntity=e.selectedEntity}function s(){e.trackedEntity=void 0}function d(){e.selectedEntity=void 0}function f(){e.trackedEntity=void 0,e.selectedEntity=void 0}function v(i){var n=i.currentTime;r(b)&&b.update(n);var o=e.selectedEntity,a=r(o)&&M;if(a){var s,l=r(A)?A.position:void 0,u=!1;o.isAvailable(n)&&r(o.position)&&(s=o.position.getValue(n,l),u=r(s)&&e.trackedEntity!==e.selectedEntity),r(A)&&(A.position=s),r(x)&&(x.enableCamera=u,x.isCameraTracking=e.trackedEntity===e.selectedEntity,x.descriptionRawHtml=r(o.description)?t(o.description.getValue(n),""):"")}r(A)&&(A.showSelection=a,A.update()),r(x)&&(x.showInfo=a)}function g(i){var n=e.scene.pick(i.position);if(r(n)){var o=t(n.id,n.primitive.id);
if(o instanceof l)return o}return p(e,i.position)}function _(t){r(t)&&r(t.position)&&(e.trackedEntity=t)}function y(e){var t=g(e);r(t)&&_(t)}function C(t){e.selectedEntity=g(t)}function w(t,r,i){for(var n=i.length,o=0;n>o;o++){var a=i[o];e.trackedEntity===a&&e.homeButton.viewModel.command(),e.selectedEntity===a&&(e.selectedEntity=void 0)}}function S(e,t){var r=t.entities;r.collectionChanged.addEventListener(w)}function E(t,i){var n=i.entities;n.collectionChanged.removeEventListener(w),r(e.trackedEntity)&&n.getById(e.trackedEntity.id)===e.trackedEntity&&e.homeButton.viewModel.command(),r(e.selectedEntity)&&n.getById(e.selectedEntity.id)===e.selectedEntity&&(e.selectedEntity=void 0)}var b,T=e.infoBox,x=r(T)?T.viewModel:void 0,P=e.selectionIndicator,A=r(P)?P.viewModel:void 0,M=r(T)||r(P),D=new n;r(x)&&(D.add(x.cameraClicked,i),D.add(x.closeClicked,d)),D.add(e.clock.onTick,v),r(e.homeButton)&&D.add(e.homeButton.viewModel.command.beforeExecute,s),r(e.geocoder)&&D.add(e.geocoder.viewModel.search.beforeExecute,f);for(var I=e.dataSources,R=I.length,O=0;R>O;O++)S(I,I.get(O));D.add(e.dataSources.dataSourceAdded,S),D.add(e.dataSources.dataSourceRemoved,E),e.screenSpaceEventHandler.setInputAction(C,o.LEFT_CLICK),e.screenSpaceEventHandler.setInputAction(y,o.LEFT_DOUBLE_CLICK),e.trackedEntity=void 0,e.selectedEntity=void 0,h.track(e,["trackedEntity","selectedEntity"]);var L=[];L.push(m(e,"trackedEntity",function(t){var i=e.scene,n=i.mode,o=r(t);(n===c.COLUMBUS_VIEW||n===c.SCENE2D)&&(i.screenSpaceCameraController.enableTranslate=!o),(n===c.COLUMBUS_VIEW||n===c.SCENE3D)&&(i.screenSpaceCameraController.enableTilt=!o),b=o&&r(t.position)?new u(t,i,e.scene.globe.ellipsoid):void 0})),L.push(m(e,"selectedEntity",function(e){r(e)?(r(x)&&(x.titleText=r(e.name)?e.name:e.id),r(A)&&A.animateAppear()):r(A)&&A.animateDepart()})),e.destroy=a(e,e.destroy,function(){D.removeAll();var t;for(t=0;t<L.length;t++)L[t].dispose();e.screenSpaceEventHandler.removeInputAction(o.LEFT_CLICK),e.screenSpaceEventHandler.removeInputAction(o.LEFT_DOUBLE_CLICK);var r=e.dataSources,i=r.length;for(t=0;i>t;t++)E(r,r.get(t))})},g=new e;return v}),r("Widgets/Viewer/viewerPerformanceWatchdogMixin",["../../Core/defaultValue","../../Core/defined","../../Core/defineProperties","../../Core/DeveloperError","../PerformanceWatchdog/PerformanceWatchdog"],function(e,t,r,i,n){"use strict";var o=function(o,a){if(!t(o))throw new i("viewer is required.");a=e(a,e.EMPTY_OBJECT);var s=new n({scene:o.scene,container:o.bottomContainer,lowFrameRateMessage:a.lowFrameRateMessage});r(o,{performanceWatchdog:{get:function(){return s}}})};return o}),r("Workers/createTaskProcessorWorker",["../Core/defaultValue","../Core/defined","../Core/formatError"],function(e,t,r){"use strict";var i=function(i){var n,o=[],a={id:void 0,result:void 0,error:void 0};return function(s){var l=s.data;o.length=0,a.id=l.id,a.error=void 0,a.result=void 0;try{a.result=i(l.parameters,o)}catch(u){a.error=u instanceof Error?{name:u.name,message:u.message,stack:u.stack}:u}t(n)||(n=e(self.webkitPostMessage,self.postMessage)),l.canTransferArrayBuffer||(o.length=0);try{n(a,o)}catch(u){a.result=void 0,a.error="postMessage failed with error: "+r(u)+"\n  with responseMessage: "+JSON.stringify(a),n(a)}}};return i}),r("Cesium",["./Core/ArcGisImageServerTerrainProvider","./Core/AssociativeArray","./Core/AxisAlignedBoundingBox","./Core/BingMapsApi","./Core/BoundingRectangle","./Core/BoundingSphere","./Core/BoxGeometry","./Core/BoxOutlineGeometry","./Core/Cartesian2","./Core/Cartesian3","./Core/Cartesian4","./Core/Cartographic","./Core/CatmullRomSpline","./Core/CesiumTerrainProvider","./Core/CircleGeometry","./Core/CircleOutlineGeometry","./Core/Clock","./Core/ClockRange","./Core/ClockStep","./Core/Color","./Core/ColorGeometryInstanceAttribute","./Core/ComponentDatatype","./Core/CornerType","./Core/CorridorGeometry","./Core/CorridorGeometryLibrary","./Core/CorridorOutlineGeometry","./Core/Credit","./Core/CubicRealPolynomial","./Core/CylinderGeometry","./Core/CylinderGeometryLibrary","./Core/CylinderOutlineGeometry","./Core/DefaultProxy","./Core/DeveloperError","./Core/EarthOrientationParameters","./Core/EarthOrientationParametersSample","./Core/EasingFunction","./Core/EllipseGeometry","./Core/EllipseGeometryLibrary","./Core/EllipseOutlineGeometry","./Core/Ellipsoid","./Core/EllipsoidGeodesic","./Core/EllipsoidGeometry","./Core/EllipsoidOutlineGeometry","./Core/EllipsoidTangentPlane","./Core/EllipsoidTerrainProvider","./Core/EllipsoidalOccluder","./Core/EncodedCartesian3","./Core/Event","./Core/EventHelper","./Core/ExtrapolationType","./Core/FeatureDetection","./Core/Fullscreen","./Core/GeographicProjection","./Core/GeographicTilingScheme","./Core/Geometry","./Core/GeometryAttribute","./Core/GeometryAttributes","./Core/GeometryInstance","./Core/GeometryInstanceAttribute","./Core/GeometryPipeline","./Core/GregorianDate","./Core/HeightmapTerrainData","./Core/HeightmapTessellator","./Core/HermitePolynomialApproximation","./Core/HermiteSpline","./Core/Iau2000Orientation","./Core/Iau2006XysData","./Core/Iau2006XysSample","./Core/IauOrientationAxes","./Core/IauOrientationParameters","./Core/IndexDatatype","./Core/InterpolationAlgorithm","./Core/Intersect","./Core/IntersectionTests","./Core/Intersections2D","./Core/Interval","./Core/Iso8601","./Core/JulianDate","./Core/KeyboardEventModifier","./Core/LagrangePolynomialApproximation","./Core/LeapSecond","./Core/LinearApproximation","./Core/LinearSpline","./Core/MapProjection","./Core/Math","./Core/Matrix2","./Core/Matrix3","./Core/Matrix4","./Core/NearFarScalar","./Core/ObjectOrientedBoundingBox","./Core/Occluder","./Core/Oct","./Core/Packable","./Core/PackableForInterpolation","./Core/PinBuilder","./Core/PixelFormat","./Core/Plane","./Core/PolygonGeometry","./Core/PolygonGeometryLibrary","./Core/PolygonOutlineGeometry","./Core/PolygonPipeline","./Core/PolylineGeometry","./Core/PolylinePipeline","./Core/PolylineVolumeGeometry","./Core/PolylineVolumeGeometryLibrary","./Core/PolylineVolumeOutlineGeometry","./Core/PrimitiveType","./Core/QuadraticRealPolynomial","./Core/QuantizedMeshTerrainData","./Core/QuarticRealPolynomial","./Core/Quaternion","./Core/QuaternionSpline","./Core/Queue","./Core/Ray","./Core/Rectangle","./Core/RectangleGeometry","./Core/RectangleGeometryLibrary","./Core/RectangleOutlineGeometry","./Core/ReferenceFrame","./Core/RequestErrorEvent","./Core/RuntimeError","./Core/ScreenSpaceEventHandler","./Core/ScreenSpaceEventType","./Core/ShowGeometryInstanceAttribute","./Core/Simon1994PlanetaryPositions","./Core/SimplePolylineGeometry","./Core/SphereGeometry","./Core/SphereOutlineGeometry","./Core/Spherical","./Core/Spline","./Core/TaskProcessor","./Core/TerrainData","./Core/TerrainMesh","./Core/TerrainProvider","./Core/TileProviderError","./Core/TilingScheme","./Core/TimeConstants","./Core/TimeInterval","./Core/TimeIntervalCollection","./Core/TimeStandard","./Core/Tipsify","./Core/Transforms","./Core/TridiagonalSystemSolver","./Core/VRTheWorldTerrainProvider","./Core/VertexFormat","./Core/Visibility","./Core/WallGeometry","./Core/WallGeometryLibrary","./Core/WallOutlineGeometry","./Core/WebMercatorProjection","./Core/WebMercatorTilingScheme","./Core/WindingOrder","./Core/barycentricCoordinates","./Core/binarySearch","./Core/buildModuleUrl","./Core/cancelAnimationFrame","./Core/clone","./Core/combine","./Core/createGuid","./Core/defaultValue","./Core/defineProperties","./Core/defined","./Core/deprecationWarning","./Core/destroyObject","./Core/formatError","./Core/freezeObject","./Core/getFilenameFromUri","./Core/getImagePixels","./Core/getTimestamp","./Core/isArray","./Core/isCrossOriginUrl","./Core/isLeapYear","./Core/jsonp","./Core/loadArrayBuffer","./Core/loadBlob","./Core/loadImage","./Core/loadImageViaBlob","./Core/loadJson","./Core/loadText","./Core/loadWithXhr","./Core/loadXML","./Core/mergeSort","./Core/parseResponseHeaders","./Core/pointInsideTriangle","./Core/requestAnimationFrame","./Core/sampleTerrain","./Core/subdivideArray","./Core/throttleRequestByServer","./Core/wrapFunction","./Core/writeTextToCanvas","./DataSources/BillboardGraphics","./DataSources/BillboardVisualizer","./DataSources/ColorMaterialProperty","./DataSources/CompositeEntityCollection","./DataSources/CompositeMaterialProperty","./DataSources/CompositePositionProperty","./DataSources/CompositeProperty","./DataSources/ConstantPositionProperty","./DataSources/ConstantProperty","./DataSources/CzmlDataSource","./DataSources/DataSource","./DataSources/DataSourceClock","./DataSources/DataSourceCollection","./DataSources/DataSourceDisplay","./DataSources/DynamicGeometryUpdater","./DataSources/EllipseGeometryUpdater","./DataSources/EllipseGraphics","./DataSources/EllipsoidGeometryUpdater","./DataSources/EllipsoidGraphics","./DataSources/Entity","./DataSources/EntityCollection","./DataSources/EntityView","./DataSources/GeoJsonDataSource","./DataSources/GeometryUpdater","./DataSources/GeometryVisualizer","./DataSources/GridMaterialProperty","./DataSources/ImageMaterialProperty","./DataSources/LabelGraphics","./DataSources/LabelVisualizer","./DataSources/MaterialProperty","./DataSources/ModelGraphics","./DataSources/ModelVisualizer","./DataSources/PathGraphics","./DataSources/PathVisualizer","./DataSources/PointGraphics","./DataSources/PointVisualizer","./DataSources/PolygonGeometryUpdater","./DataSources/PolygonGraphics","./DataSources/PolylineGeometryUpdater","./DataSources/PolylineGlowMaterialProperty","./DataSources/PolylineGraphics","./DataSources/PolylineOutlineMaterialProperty","./DataSources/PositionProperty","./DataSources/PositionPropertyArray","./DataSources/Property","./DataSources/PropertyArray","./DataSources/RectangleGeometryUpdater","./DataSources/RectangleGraphics","./DataSources/ReferenceProperty","./DataSources/SampledPositionProperty","./DataSources/SampledProperty","./DataSources/StaticGeometryColorBatch","./DataSources/StaticGeometryPerMaterialBatch","./DataSources/StaticOutlineGeometryBatch","./DataSources/StripeMaterialProperty","./DataSources/StripeOrientation","./DataSources/TimeIntervalCollectionPositionProperty","./DataSources/TimeIntervalCollectionProperty","./DataSources/Visualizer","./DataSources/WallGeometryUpdater","./DataSources/WallGraphics","./DataSources/createPropertyDescriptor","./Renderer/AutomaticUniforms","./Renderer/Buffer","./Renderer/BufferUsage","./Renderer/ClearCommand","./Renderer/Context","./Renderer/CubeMap","./Renderer/CubeMapFace","./Renderer/DrawCommand","./Renderer/Framebuffer","./Renderer/MipmapHint","./Renderer/PassState","./Renderer/PickFramebuffer","./Renderer/PixelDatatype","./Renderer/RenderState","./Renderer/Renderbuffer","./Renderer/RenderbufferFormat","./Renderer/ShaderCache","./Renderer/ShaderProgram","./Renderer/Texture","./Renderer/TextureMagnificationFilter","./Renderer/TextureMinificationFilter","./Renderer/TextureWrap","./Renderer/UniformState","./Renderer/VertexArray","./Renderer/VertexArrayFacade","./Renderer/createShaderSource","./Renderer/loadCubeMap","./Scene/Appearance","./Scene/ArcGisMapServerImageryProvider","./Scene/Billboard","./Scene/BillboardCollection","./Scene/BingMapsImageryProvider","./Scene/BingMapsStyle","./Scene/BlendEquation","./Scene/BlendFunction","./Scene/BlendingState","./Scene/Camera","./Scene/CameraEventAggregator","./Scene/CameraEventType","./Scene/CameraFlightPath","./Scene/CreditDisplay","./Scene/CullFace","./Scene/CullingVolume","./Scene/DebugAppearance","./Scene/DebugModelMatrixPrimitive","./Scene/DepthFunction","./Scene/DiscardMissingTileImagePolicy","./Scene/EllipsoidPrimitive","./Scene/EllipsoidSurfaceAppearance","./Scene/FXAA","./Scene/FrameRateMonitor","./Scene/FrameState","./Scene/FrustumCommands","./Scene/Globe","./Scene/GlobeSurfaceShaderSet","./Scene/GlobeSurfaceTile","./Scene/GlobeSurfaceTileProvider","./Scene/GoogleEarthImageryProvider","./Scene/GridImageryProvider","./Scene/HorizontalOrigin","./Scene/Imagery","./Scene/ImageryLayer","./Scene/ImageryLayerCollection","./Scene/ImageryLayerFeatureInfo","./Scene/ImageryProvider","./Scene/ImageryState","./Scene/Label","./Scene/LabelCollection","./Scene/LabelStyle","./Scene/Material","./Scene/MaterialAppearance","./Scene/Model","./Scene/ModelAnimation","./Scene/ModelAnimationCache","./Scene/ModelAnimationCollection","./Scene/ModelAnimationLoop","./Scene/ModelAnimationState","./Scene/ModelMaterial","./Scene/ModelMesh","./Scene/ModelNode","./Scene/Moon","./Scene/NeverTileDiscardPolicy","./Scene/OIT","./Scene/OpenStreetMapImageryProvider","./Scene/OrthographicFrustum","./Scene/Pass","./Scene/PerInstanceColorAppearance","./Scene/PerformanceDisplay","./Scene/PerspectiveFrustum","./Scene/PerspectiveOffCenterFrustum","./Scene/Polygon","./Scene/Polyline","./Scene/PolylineCollection","./Scene/PolylineColorAppearance","./Scene/PolylineMaterialAppearance","./Scene/Primitive","./Scene/PrimitiveCollection","./Scene/PrimitivePipeline","./Scene/PrimitiveState","./Scene/QuadtreeOccluders","./Scene/QuadtreePrimitive","./Scene/QuadtreeTile","./Scene/QuadtreeTileLoadState","./Scene/QuadtreeTileProvider","./Scene/RectanglePrimitive","./Scene/Scene","./Scene/SceneMode","./Scene/SceneTransforms","./Scene/SceneTransitioner","./Scene/ScreenSpaceCameraController","./Scene/SingleTileImageryProvider","./Scene/SkyAtmosphere","./Scene/SkyBox","./Scene/StencilFunction","./Scene/StencilOperation","./Scene/Sun","./Scene/SunPostProcess","./Scene/TerrainState","./Scene/TextureAtlas","./Scene/TileCoordinatesImageryProvider","./Scene/TileDiscardPolicy","./Scene/TileImagery","./Scene/TileMapServiceImageryProvider","./Scene/TileReplacementQueue","./Scene/TileState","./Scene/TileTerrain","./Scene/TweenCollection","./Scene/VerticalOrigin","./Scene/ViewportQuad","./Scene/WebMapServiceImageryProvider","./Scene/WebMapTileServiceImageryProvider","./Scene/createTangentSpaceDebugPrimitive","./Scene/getModelAccessor","./Scene/terrainAttributeLocations","./Shaders/AdjustTranslucentFS","./Shaders/Appearances/AllMaterialAppearanceFS","./Shaders/Appearances/AllMaterialAppearanceVS","./Shaders/Appearances/BasicMaterialAppearanceFS","./Shaders/Appearances/BasicMaterialAppearanceVS","./Shaders/Appearances/EllipsoidSurfaceAppearanceFS","./Shaders/Appearances/EllipsoidSurfaceAppearanceVS","./Shaders/Appearances/PerInstanceColorAppearanceFS","./Shaders/Appearances/PerInstanceColorAppearanceVS","./Shaders/Appearances/PerInstanceFlatColorAppearanceFS","./Shaders/Appearances/PerInstanceFlatColorAppearanceVS","./Shaders/Appearances/PolylineColorAppearanceVS","./Shaders/Appearances/PolylineMaterialAppearanceVS","./Shaders/Appearances/TexturedMaterialAppearanceFS","./Shaders/Appearances/TexturedMaterialAppearanceVS","./Shaders/BillboardCollectionFS","./Shaders/BillboardCollectionVS","./Shaders/Builtin/Constants/degreesPerRadian","./Shaders/Builtin/Constants/depthRange","./Shaders/Builtin/Constants/epsilon1","./Shaders/Builtin/Constants/epsilon2","./Shaders/Builtin/Constants/epsilon3","./Shaders/Builtin/Constants/epsilon4","./Shaders/Builtin/Constants/epsilon5","./Shaders/Builtin/Constants/epsilon6","./Shaders/Builtin/Constants/epsilon7","./Shaders/Builtin/Constants/infinity","./Shaders/Builtin/Constants/oneOverPi","./Shaders/Builtin/Constants/oneOverTwoPi","./Shaders/Builtin/Constants/pi","./Shaders/Builtin/Constants/piOverFour","./Shaders/Builtin/Constants/piOverSix","./Shaders/Builtin/Constants/piOverThree","./Shaders/Builtin/Constants/piOverTwo","./Shaders/Builtin/Constants/radiansPerDegree","./Shaders/Builtin/Constants/sceneMode2D","./Shaders/Builtin/Constants/sceneMode3D","./Shaders/Builtin/Constants/sceneModeColumbusView","./Shaders/Builtin/Constants/sceneModeMorphing","./Shaders/Builtin/Constants/solarRadius","./Shaders/Builtin/Constants/threePiOver2","./Shaders/Builtin/Constants/twoPi","./Shaders/Builtin/Constants/webMercatorMaxLatitude","./Shaders/Builtin/CzmBuiltins","./Shaders/Builtin/Functions/RGBToXYZ","./Shaders/Builtin/Functions/XYZToRGB","./Shaders/Builtin/Functions/alphaWeight","./Shaders/Builtin/Functions/antialias","./Shaders/Builtin/Functions/columbusViewMorph","./Shaders/Builtin/Functions/computePosition","./Shaders/Builtin/Functions/cosineAndSine","./Shaders/Builtin/Functions/eastNorthUpToEyeCoordinates","./Shaders/Builtin/Functions/ellipsoidContainsPoint","./Shaders/Builtin/Functions/ellipsoidNew","./Shaders/Builtin/Functions/ellipsoidWgs84TextureCoordinates","./Shaders/Builtin/Functions/equalsEpsilon","./Shaders/Builtin/Functions/eyeOffset","./Shaders/Builtin/Functions/eyeToWindowCoordinates","./Shaders/Builtin/Functions/geodeticSurfaceNormal","./Shaders/Builtin/Functions/getDefaultMaterial","./Shaders/Builtin/Functions/getLambertDiffuse","./Shaders/Builtin/Functions/getSpecular","./Shaders/Builtin/Functions/getWaterNoise","./Shaders/Builtin/Functions/getWgs84EllipsoidEC","./Shaders/Builtin/Functions/hue","./Shaders/Builtin/Functions/isEmpty","./Shaders/Builtin/Functions/isFull","./Shaders/Builtin/Functions/latitudeToWebMercatorFraction","./Shaders/Builtin/Functions/luminance","./Shaders/Builtin/Functions/modelToWindowCoordinates","./Shaders/Builtin/Functions/multiplyWithColorBalance","./Shaders/Builtin/Functions/octDecode","./Shaders/Builtin/Functions/phong","./Shaders/Builtin/Functions/pointAlongRay","./Shaders/Builtin/Functions/rayEllipsoidIntersectionInterval","./Shaders/Builtin/Functions/saturation","./Shaders/Builtin/Functions/signNotZero","./Shaders/Builtin/Functions/tangentToEyeSpaceMatrix","./Shaders/Builtin/Functions/translateRelativeToEye","./Shaders/Builtin/Functions/translucentPhong","./Shaders/Builtin/Functions/transpose","./Shaders/Builtin/Functions/windowToEyeCoordinates","./Shaders/Builtin/Structs/depthRangeStruct","./Shaders/Builtin/Structs/ellipsoid","./Shaders/Builtin/Structs/material","./Shaders/Builtin/Structs/materialInput","./Shaders/Builtin/Structs/ray","./Shaders/Builtin/Structs/raySegment","./Shaders/CompositeOITFS","./Shaders/EllipsoidFS","./Shaders/EllipsoidVS","./Shaders/GlobeFS","./Shaders/GlobeFSDepth","./Shaders/GlobeFSPole","./Shaders/GlobeVS","./Shaders/GlobeVSDepth","./Shaders/GlobeVSPole","./Shaders/Materials/BumpMapMaterial","./Shaders/Materials/CheckerboardMaterial","./Shaders/Materials/DotMaterial","./Shaders/Materials/FadeMaterial","./Shaders/Materials/GridMaterial","./Shaders/Materials/NormalMapMaterial","./Shaders/Materials/PolylineArrowMaterial","./Shaders/Materials/PolylineGlowMaterial","./Shaders/Materials/PolylineOutlineMaterial","./Shaders/Materials/RimLightingMaterial","./Shaders/Materials/StripeMaterial","./Shaders/Materials/Water","./Shaders/PolylineCommon","./Shaders/PolylineFS","./Shaders/PolylineVS","./Shaders/PostProcessFilters/AdditiveBlend","./Shaders/PostProcessFilters/BrightPass","./Shaders/PostProcessFilters/FXAA","./Shaders/PostProcessFilters/GaussianBlur1D","./Shaders/PostProcessFilters/PassThrough","./Shaders/ReprojectWebMercatorFS","./Shaders/ReprojectWebMercatorVS","./Shaders/SkyAtmosphereFS","./Shaders/SkyAtmosphereVS","./Shaders/SkyBoxFS","./Shaders/SkyBoxVS","./Shaders/SunFS","./Shaders/SunTextureFS","./Shaders/SunVS","./Shaders/ViewportQuadFS","./Shaders/ViewportQuadVS","./ThirdParty/Tween","./ThirdParty/Uri","./ThirdParty/gltfDefaults","./ThirdParty/knockout-3.1.0","./ThirdParty/knockout-es5","./ThirdParty/knockout","./ThirdParty/measureText","./ThirdParty/mersenne-twister","./ThirdParty/sprintf","./ThirdParty/topojson","./ThirdParty/when","./Widgets/Animation/Animation","./Widgets/Animation/AnimationViewModel","./Widgets/BaseLayerPicker/BaseLayerPicker","./Widgets/BaseLayerPicker/BaseLayerPickerViewModel","./Widgets/BaseLayerPicker/ProviderViewModel","./Widgets/BaseLayerPicker/createDefaultImageryProviderViewModels","./Widgets/BaseLayerPicker/createDefaultTerrainProviderViewModels","./Widgets/CesiumInspector/CesiumInspector","./Widgets/CesiumInspector/CesiumInspectorViewModel","./Widgets/CesiumWidget/CesiumWidget","./Widgets/ClockViewModel","./Widgets/Command","./Widgets/FullscreenButton/FullscreenButton","./Widgets/FullscreenButton/FullscreenButtonViewModel","./Widgets/Geocoder/Geocoder","./Widgets/Geocoder/GeocoderViewModel","./Widgets/HomeButton/HomeButton","./Widgets/HomeButton/HomeButtonViewModel","./Widgets/InfoBox/InfoBox","./Widgets/InfoBox/InfoBoxViewModel","./Widgets/NavigationHelpButton/NavigationHelpButton","./Widgets/NavigationHelpButton/NavigationHelpButtonViewModel","./Widgets/PerformanceWatchdog/PerformanceWatchdog","./Widgets/PerformanceWatchdog/PerformanceWatchdogViewModel","./Widgets/SceneModePicker/SceneModePicker","./Widgets/SceneModePicker/SceneModePickerViewModel","./Widgets/SelectionIndicator/SelectionIndicator","./Widgets/SelectionIndicator/SelectionIndicatorViewModel","./Widgets/SvgPathBindingHandler","./Widgets/Timeline/Timeline","./Widgets/Timeline/TimelineHighlightRange","./Widgets/Timeline/TimelineTrack","./Widgets/ToggleButtonViewModel","./Widgets/Viewer/Viewer","./Widgets/Viewer/viewerCesiumInspectorMixin","./Widgets/Viewer/viewerDragDropMixin","./Widgets/Viewer/viewerEntityMixin","./Widgets/Viewer/viewerPerformanceWatchdogMixin","./Widgets/createCommand","./Widgets/getElement","./Widgets/subscribeAndEvaluate","./Workers/createTaskProcessorWorker"],function(e,t,r,i,n,o,a,s,l,u,c,h,d,m,p,f,v,g,_,y,C,w,S,E,b,T,x,P,A,M,D,I,R,O,L,N,B,F,z,V,k,U,W,G,H,q,j,Y,X,Z,Q,J,K,$,et,tt,rt,it,nt,ot,at,st,lt,ut,ct,ht,dt,mt,pt,ft,vt,gt,_t,yt,Ct,wt,St,Et,bt,Tt,xt,Pt,At,Mt,Dt,It,Rt,Ot,Lt,Nt,Bt,Ft,zt,Vt,kt,Ut,Wt,Gt,Ht,qt,jt,Yt,Xt,Zt,Qt,Jt,Kt,$t,er,tr,rr,ir,nr,or,ar,sr,lr,ur,cr,hr,dr,mr,pr,fr,vr,gr,_r,yr,Cr,wr,Sr,Er,br,Tr,xr,Pr,Ar,Mr,Dr,Ir,Rr,Or,Lr,Nr,Br,Fr,zr,Vr,kr,Ur,Wr,Gr,Hr,qr,jr,Yr,Xr,Zr,Qr,Jr,Kr,$r,ei,ti,ri,ii,ni,oi,ai,si,li,ui,ci,hi,di,mi,pi,fi,vi,gi,_i,yi,Ci,wi,Si,Ei,bi,Ti,xi,Pi,Ai,Mi,Di,Ii,Ri,Oi,Li,Ni,Bi,Fi,zi,Vi,ki,Ui,Wi,Gi,Hi,qi,ji,Yi,Xi,Zi,Qi,Ji,Ki,$i,en,tn,rn,nn,on,an,sn,ln,un,cn,hn,dn,mn,pn,fn,vn,gn,_n,yn,Cn,wn,Sn,En,bn,Tn,xn,Pn,An,Mn,Dn,In,Rn,On,Ln,Nn,Bn,Fn,zn,Vn,kn,Un,Wn,Gn,Hn,qn,jn,Yn,Xn,Zn,Qn,Jn,Kn,$n,eo,to,ro,io,no,oo,ao,so,lo,uo,co,ho,mo,po,fo,vo,go,_o,yo,Co,wo,So,Eo,bo,To,xo,Po,Ao,Mo,Do,Io,Ro,Oo,Lo,No,Bo,Fo,zo,Vo,ko,Uo,Wo,Go,Ho,qo,jo,Yo,Xo,Zo,Qo,Jo,Ko,$o,ea,ta,ra,ia,na,oa,aa,sa,la,ua,ca,ha,da,ma,pa,fa,va,ga,_a,ya,Ca,wa,Sa,Ea,ba,Ta,xa,Pa,Aa,Ma,Da,Ia,Ra,Oa,La,Na,Ba,Fa,za,Va,ka,Ua,Wa,Ga,Ha,qa,ja,Ya,Xa,Za,Qa,Ja,Ka,$a,es,ts,rs,is,ns,os,as,ss,ls,us,cs,hs,ds,ms,ps,fs,vs,gs,_s,ys,Cs,ws,Ss,Es,bs,Ts,xs,Ps,As,Ms,Ds,Is,Rs,Os,Ls,Ns,Bs,Fs,zs,Vs,ks,Us,Ws,Gs,Hs,qs,js,Ys,Xs,Zs,Qs,Js,Ks,$s,el,tl,rl,il,nl,ol,al,sl,ll,ul,cl,hl,dl,ml,pl,fl,vl,gl,_l,yl,Cl,wl,Sl,El,bl,Tl,xl,Pl,Al,Ml,Dl,Il,Rl,Ol,Ll,Nl,Bl,Fl,zl,Vl,kl,Ul,Wl,Gl,Hl,ql,jl,Yl,Xl,Zl,Ql,Jl,Kl,$l,eu,tu,ru,iu,nu,ou,au,su,lu,uu,cu,hu,du,mu,pu,fu,vu,gu,_u,yu,Cu,wu,Su,Eu,bu,Tu,xu,Pu,Au,Mu,Du,Iu,Ru,Ou,Lu,Nu,Bu,Fu,zu,Vu,ku,Uu,Wu,Gu,Hu,qu,ju,Yu,Xu,Zu,Qu,Ju,Ku,$u,ec,tc,rc,ic,nc,oc,ac,sc,lc,uc,cc,hc,dc,mc,pc,fc,vc,gc,_c,yc,Cc,wc,Sc,Ec,bc,Tc,xc,Pc,Ac){"use strict";var Mc={VERSION:"1.2",_shaders:{}};return Mc.ArcGisImageServerTerrainProvider=e,Mc.AssociativeArray=t,Mc.AxisAlignedBoundingBox=r,Mc.BingMapsApi=i,Mc.BoundingRectangle=n,Mc.BoundingSphere=o,Mc.BoxGeometry=a,Mc.BoxOutlineGeometry=s,Mc.Cartesian2=l,Mc.Cartesian3=u,Mc.Cartesian4=c,Mc.Cartographic=h,Mc.CatmullRomSpline=d,Mc.CesiumTerrainProvider=m,Mc.CircleGeometry=p,Mc.CircleOutlineGeometry=f,Mc.Clock=v,Mc.ClockRange=g,Mc.ClockStep=_,Mc.Color=y,Mc.ColorGeometryInstanceAttribute=C,Mc.ComponentDatatype=w,Mc.CornerType=S,Mc.CorridorGeometry=E,Mc.CorridorGeometryLibrary=b,Mc.CorridorOutlineGeometry=T,Mc.Credit=x,Mc.CubicRealPolynomial=P,Mc.CylinderGeometry=A,Mc.CylinderGeometryLibrary=M,Mc.CylinderOutlineGeometry=D,Mc.DefaultProxy=I,Mc.DeveloperError=R,Mc.EarthOrientationParameters=O,Mc.EarthOrientationParametersSample=L,Mc.EasingFunction=N,Mc.EllipseGeometry=B,Mc.EllipseGeometryLibrary=F,Mc.EllipseOutlineGeometry=z,Mc.Ellipsoid=V,Mc.EllipsoidGeodesic=k,Mc.EllipsoidGeometry=U,Mc.EllipsoidOutlineGeometry=W,Mc.EllipsoidTangentPlane=G,Mc.EllipsoidTerrainProvider=H,Mc.EllipsoidalOccluder=q,Mc.EncodedCartesian3=j,Mc.Event=Y,Mc.EventHelper=X,Mc.ExtrapolationType=Z,Mc.FeatureDetection=Q,Mc.Fullscreen=J,Mc.GeographicProjection=K,Mc.GeographicTilingScheme=$,Mc.Geometry=et,Mc.GeometryAttribute=tt,Mc.GeometryAttributes=rt,Mc.GeometryInstance=it,Mc.GeometryInstanceAttribute=nt,Mc.GeometryPipeline=ot,Mc.GregorianDate=at,Mc.HeightmapTerrainData=st,Mc.HeightmapTessellator=lt,Mc.HermitePolynomialApproximation=ut,Mc.HermiteSpline=ct,Mc.Iau2000Orientation=ht,Mc.Iau2006XysData=dt,Mc.Iau2006XysSample=mt,Mc.IauOrientationAxes=pt,Mc.IauOrientationParameters=ft,Mc.IndexDatatype=vt,Mc.InterpolationAlgorithm=gt,Mc.Intersect=_t,Mc.IntersectionTests=yt,Mc.Intersections2D=Ct,Mc.Interval=wt,Mc.Iso8601=St,Mc.JulianDate=Et,Mc.KeyboardEventModifier=bt,Mc.LagrangePolynomialApproximation=Tt,Mc.LeapSecond=xt,Mc.LinearApproximation=Pt,Mc.LinearSpline=At,Mc.MapProjection=Mt,Mc.Math=Dt,Mc.Matrix2=It,Mc.Matrix3=Rt,Mc.Matrix4=Ot,Mc.NearFarScalar=Lt,Mc.ObjectOrientedBoundingBox=Nt,Mc.Occluder=Bt,Mc.Oct=Ft,Mc.Packable=zt,Mc.PackableForInterpolation=Vt,Mc.PinBuilder=kt,Mc.PixelFormat=Ut,Mc.Plane=Wt,Mc.PolygonGeometry=Gt,Mc.PolygonGeometryLibrary=Ht,Mc.PolygonOutlineGeometry=qt,Mc.PolygonPipeline=jt,Mc.PolylineGeometry=Yt,Mc.PolylinePipeline=Xt,Mc.PolylineVolumeGeometry=Zt,Mc.PolylineVolumeGeometryLibrary=Qt,Mc.PolylineVolumeOutlineGeometry=Jt,Mc.PrimitiveType=Kt,Mc.QuadraticRealPolynomial=$t,Mc.QuantizedMeshTerrainData=er,Mc.QuarticRealPolynomial=tr,Mc.Quaternion=rr,Mc.QuaternionSpline=ir,Mc.Queue=nr,Mc.Ray=or,Mc.Rectangle=ar,Mc.RectangleGeometry=sr,Mc.RectangleGeometryLibrary=lr,Mc.RectangleOutlineGeometry=ur,Mc.ReferenceFrame=cr,Mc.RequestErrorEvent=hr,Mc.RuntimeError=dr,Mc.ScreenSpaceEventHandler=mr,Mc.ScreenSpaceEventType=pr,Mc.ShowGeometryInstanceAttribute=fr,Mc.Simon1994PlanetaryPositions=vr,Mc.SimplePolylineGeometry=gr,Mc.SphereGeometry=_r,Mc.SphereOutlineGeometry=yr,Mc.Spherical=Cr,Mc.Spline=wr,Mc.TaskProcessor=Sr,Mc.TerrainData=Er,Mc.TerrainMesh=br,Mc.TerrainProvider=Tr,Mc.TileProviderError=xr,Mc.TilingScheme=Pr,Mc.TimeConstants=Ar,Mc.TimeInterval=Mr,Mc.TimeIntervalCollection=Dr,Mc.TimeStandard=Ir,Mc.Tipsify=Rr,Mc.Transforms=Or,Mc.TridiagonalSystemSolver=Lr,Mc.VRTheWorldTerrainProvider=Nr,Mc.VertexFormat=Br,Mc.Visibility=Fr,Mc.WallGeometry=zr,Mc.WallGeometryLibrary=Vr,Mc.WallOutlineGeometry=kr,Mc.WebMercatorProjection=Ur,Mc.WebMercatorTilingScheme=Wr,Mc.WindingOrder=Gr,Mc.barycentricCoordinates=Hr,Mc.binarySearch=qr,Mc.buildModuleUrl=jr,Mc.cancelAnimationFrame=Yr,Mc.clone=Xr,Mc.combine=Zr,Mc.createGuid=Qr,Mc.defaultValue=Jr,Mc.defineProperties=Kr,Mc.defined=$r,Mc.deprecationWarning=ei,Mc.destroyObject=ti,Mc.formatError=ri,Mc.freezeObject=ii,Mc.getFilenameFromUri=ni,Mc.getImagePixels=oi,Mc.getTimestamp=ai,Mc.isArray=si,Mc.isCrossOriginUrl=li,Mc.isLeapYear=ui,Mc.jsonp=ci,Mc.loadArrayBuffer=hi,Mc.loadBlob=di,Mc.loadImage=mi,Mc.loadImageViaBlob=pi,Mc.loadJson=fi,Mc.loadText=vi,Mc.loadWithXhr=gi,Mc.loadXML=_i,Mc.mergeSort=yi,Mc.parseResponseHeaders=Ci,Mc.pointInsideTriangle=wi,Mc.requestAnimationFrame=Si,Mc.sampleTerrain=Ei,Mc.subdivideArray=bi,Mc.throttleRequestByServer=Ti,Mc.wrapFunction=xi,Mc.writeTextToCanvas=Pi,Mc.BillboardGraphics=Ai,Mc.BillboardVisualizer=Mi,Mc.ColorMaterialProperty=Di,Mc.CompositeEntityCollection=Ii,Mc.CompositeMaterialProperty=Ri,Mc.CompositePositionProperty=Oi,Mc.CompositeProperty=Li,Mc.ConstantPositionProperty=Ni,Mc.ConstantProperty=Bi,Mc.CzmlDataSource=Fi,Mc.DataSource=zi,Mc.DataSourceClock=Vi,Mc.DataSourceCollection=ki,Mc.DataSourceDisplay=Ui,Mc.DynamicGeometryUpdater=Wi,Mc.EllipseGeometryUpdater=Gi,Mc.EllipseGraphics=Hi,Mc.EllipsoidGeometryUpdater=qi,Mc.EllipsoidGraphics=ji,Mc.Entity=Yi,Mc.EntityCollection=Xi,Mc.EntityView=Zi,Mc.GeoJsonDataSource=Qi,Mc.GeometryUpdater=Ji,Mc.GeometryVisualizer=Ki,Mc.GridMaterialProperty=$i,Mc.ImageMaterialProperty=en,Mc.LabelGraphics=tn,Mc.LabelVisualizer=rn,Mc.MaterialProperty=nn,Mc.ModelGraphics=on,Mc.ModelVisualizer=an,Mc.PathGraphics=sn,Mc.PathVisualizer=ln,Mc.PointGraphics=un,Mc.PointVisualizer=cn,Mc.PolygonGeometryUpdater=hn,Mc.PolygonGraphics=dn,Mc.PolylineGeometryUpdater=mn,Mc.PolylineGlowMaterialProperty=pn,Mc.PolylineGraphics=fn,Mc.PolylineOutlineMaterialProperty=vn,Mc.PositionProperty=gn,Mc.PositionPropertyArray=_n,Mc.Property=yn,Mc.PropertyArray=Cn,Mc.RectangleGeometryUpdater=wn,Mc.RectangleGraphics=Sn,Mc.ReferenceProperty=En,Mc.SampledPositionProperty=bn,Mc.SampledProperty=Tn,Mc.StaticGeometryColorBatch=xn,Mc.StaticGeometryPerMaterialBatch=Pn,Mc.StaticOutlineGeometryBatch=An,Mc.StripeMaterialProperty=Mn,Mc.StripeOrientation=Dn,Mc.TimeIntervalCollectionPositionProperty=In,Mc.TimeIntervalCollectionProperty=Rn,Mc.Visualizer=On,Mc.WallGeometryUpdater=Ln,Mc.WallGraphics=Nn,Mc.createPropertyDescriptor=Bn,Mc.AutomaticUniforms=Fn,Mc.Buffer=zn,Mc.BufferUsage=Vn,Mc.ClearCommand=kn,Mc.Context=Un,Mc.CubeMap=Wn,Mc.CubeMapFace=Gn,Mc.DrawCommand=Hn,Mc.Framebuffer=qn,Mc.MipmapHint=jn,Mc.PassState=Yn,Mc.PickFramebuffer=Xn,Mc.PixelDatatype=Zn,Mc.RenderState=Qn,Mc.Renderbuffer=Jn,Mc.RenderbufferFormat=Kn,Mc.ShaderCache=$n,Mc.ShaderProgram=eo,Mc.Texture=to,Mc.TextureMagnificationFilter=ro,Mc.TextureMinificationFilter=io,Mc.TextureWrap=no,Mc.UniformState=oo,Mc.VertexArray=ao,Mc.VertexArrayFacade=so,Mc.createShaderSource=lo,Mc.loadCubeMap=uo,Mc.Appearance=co,Mc.ArcGisMapServerImageryProvider=ho,Mc.Billboard=mo,Mc.BillboardCollection=po,Mc.BingMapsImageryProvider=fo,Mc.BingMapsStyle=vo,Mc.BlendEquation=go,Mc.BlendFunction=_o,Mc.BlendingState=yo,Mc.Camera=Co,Mc.CameraEventAggregator=wo,Mc.CameraEventType=So,Mc.CameraFlightPath=Eo,Mc.CreditDisplay=bo,Mc.CullFace=To,Mc.CullingVolume=xo,Mc.DebugAppearance=Po,Mc.DebugModelMatrixPrimitive=Ao,Mc.DepthFunction=Mo,Mc.DiscardMissingTileImagePolicy=Do,Mc.EllipsoidPrimitive=Io,Mc.EllipsoidSurfaceAppearance=Ro,Mc.FXAA=Oo,Mc.FrameRateMonitor=Lo,Mc.FrameState=No,Mc.FrustumCommands=Bo,Mc.Globe=Fo,Mc.GlobeSurfaceShaderSet=zo,Mc.GlobeSurfaceTile=Vo,Mc.GlobeSurfaceTileProvider=ko,Mc.GoogleEarthImageryProvider=Uo,Mc.GridImageryProvider=Wo,Mc.HorizontalOrigin=Go,Mc.Imagery=Ho,Mc.ImageryLayer=qo,Mc.ImageryLayerCollection=jo,Mc.ImageryLayerFeatureInfo=Yo,Mc.ImageryProvider=Xo,Mc.ImageryState=Zo,Mc.Label=Qo,Mc.LabelCollection=Jo,Mc.LabelStyle=Ko,Mc.Material=$o,Mc.MaterialAppearance=ea,Mc.Model=ta,Mc.ModelAnimation=ra,Mc.ModelAnimationCache=ia,Mc.ModelAnimationCollection=na,Mc.ModelAnimationLoop=oa,Mc.ModelAnimationState=aa,Mc.ModelMaterial=sa,Mc.ModelMesh=la,Mc.ModelNode=ua,Mc.Moon=ca,Mc.NeverTileDiscardPolicy=ha,Mc.OIT=da,Mc.OpenStreetMapImageryProvider=ma,Mc.OrthographicFrustum=pa,Mc.Pass=fa,Mc.PerInstanceColorAppearance=va,Mc.PerformanceDisplay=ga,Mc.PerspectiveFrustum=_a,Mc.PerspectiveOffCenterFrustum=ya,Mc.Polygon=Ca,Mc.Polyline=wa,Mc.PolylineCollection=Sa,Mc.PolylineColorAppearance=Ea,Mc.PolylineMaterialAppearance=ba,Mc.Primitive=Ta,Mc.PrimitiveCollection=xa,Mc.PrimitivePipeline=Pa,Mc.PrimitiveState=Aa,Mc.QuadtreeOccluders=Ma,Mc.QuadtreePrimitive=Da,Mc.QuadtreeTile=Ia,Mc.QuadtreeTileLoadState=Ra,Mc.QuadtreeTileProvider=Oa,Mc.RectanglePrimitive=La,Mc.Scene=Na,Mc.SceneMode=Ba,Mc.SceneTransforms=Fa,Mc.SceneTransitioner=za,Mc.ScreenSpaceCameraController=Va,Mc.SingleTileImageryProvider=ka,Mc.SkyAtmosphere=Ua,Mc.SkyBox=Wa,Mc.StencilFunction=Ga,Mc.StencilOperation=Ha,Mc.Sun=qa,Mc.SunPostProcess=ja,Mc.TerrainState=Ya,Mc.TextureAtlas=Xa,Mc.TileCoordinatesImageryProvider=Za,Mc.TileDiscardPolicy=Qa,Mc.TileImagery=Ja,Mc.TileMapServiceImageryProvider=Ka,Mc.TileReplacementQueue=$a,Mc.TileState=es,Mc.TileTerrain=ts,Mc.TweenCollection=rs,Mc.VerticalOrigin=is,Mc.ViewportQuad=ns,Mc.WebMapServiceImageryProvider=os,Mc.WebMapTileServiceImageryProvider=as,Mc.createTangentSpaceDebugPrimitive=ss,Mc.getModelAccessor=ls,Mc.terrainAttributeLocations=us,Mc._shaders.AdjustTranslucentFS=cs,Mc._shaders.AllMaterialAppearanceFS=hs,Mc._shaders.AllMaterialAppearanceVS=ds,Mc._shaders.BasicMaterialAppearanceFS=ms,Mc._shaders.BasicMaterialAppearanceVS=ps,Mc._shaders.EllipsoidSurfaceAppearanceFS=fs,Mc._shaders.EllipsoidSurfaceAppearanceVS=vs,Mc._shaders.PerInstanceColorAppearanceFS=gs,Mc._shaders.PerInstanceColorAppearanceVS=_s,Mc._shaders.PerInstanceFlatColorAppearanceFS=ys,Mc._shaders.PerInstanceFlatColorAppearanceVS=Cs,Mc._shaders.PolylineColorAppearanceVS=ws,Mc._shaders.PolylineMaterialAppearanceVS=Ss,Mc._shaders.TexturedMaterialAppearanceFS=Es,Mc._shaders.TexturedMaterialAppearanceVS=bs,Mc._shaders.BillboardCollectionFS=Ts,Mc._shaders.BillboardCollectionVS=xs,Mc._shaders.degreesPerRadian=Ps,Mc._shaders.depthRange=As,Mc._shaders.epsilon1=Ms,Mc._shaders.epsilon2=Ds,Mc._shaders.epsilon3=Is,Mc._shaders.epsilon4=Rs,Mc._shaders.epsilon5=Os,Mc._shaders.epsilon6=Ls,Mc._shaders.epsilon7=Ns,Mc._shaders.infinity=Bs,Mc._shaders.oneOverPi=Fs,Mc._shaders.oneOverTwoPi=zs,Mc._shaders.pi=Vs,Mc._shaders.piOverFour=ks,Mc._shaders.piOverSix=Us,Mc._shaders.piOverThree=Ws,Mc._shaders.piOverTwo=Gs,Mc._shaders.radiansPerDegree=Hs,Mc._shaders.sceneMode2D=qs,Mc._shaders.sceneMode3D=js,Mc._shaders.sceneModeColumbusView=Ys,Mc._shaders.sceneModeMorphing=Xs,Mc._shaders.solarRadius=Zs,Mc._shaders.threePiOver2=Qs,Mc._shaders.twoPi=Js,Mc._shaders.webMercatorMaxLatitude=Ks,Mc._shaders.CzmBuiltins=$s,Mc._shaders.RGBToXYZ=el,Mc._shaders.XYZToRGB=tl,Mc._shaders.alphaWeight=rl,Mc._shaders.antialias=il,Mc._shaders.columbusViewMorph=nl,Mc._shaders.computePosition=ol,Mc._shaders.cosineAndSine=al,Mc._shaders.eastNorthUpToEyeCoordinates=sl,Mc._shaders.ellipsoidContainsPoint=ll,Mc._shaders.ellipsoidNew=ul,Mc._shaders.ellipsoidWgs84TextureCoordinates=cl,Mc._shaders.equalsEpsilon=hl,Mc._shaders.eyeOffset=dl,Mc._shaders.eyeToWindowCoordinates=ml,Mc._shaders.geodeticSurfaceNormal=pl,Mc._shaders.getDefaultMaterial=fl,Mc._shaders.getLambertDiffuse=vl,Mc._shaders.getSpecular=gl,Mc._shaders.getWaterNoise=_l,Mc._shaders.getWgs84EllipsoidEC=yl,Mc._shaders.hue=Cl,Mc._shaders.isEmpty=wl,Mc._shaders.isFull=Sl,Mc._shaders.latitudeToWebMercatorFraction=El,Mc._shaders.luminance=bl,Mc._shaders.modelToWindowCoordinates=Tl,Mc._shaders.multiplyWithColorBalance=xl,Mc._shaders.octDecode=Pl,Mc._shaders.phong=Al,Mc._shaders.pointAlongRay=Ml,Mc._shaders.rayEllipsoidIntersectionInterval=Dl,Mc._shaders.saturation=Il,Mc._shaders.signNotZero=Rl,Mc._shaders.tangentToEyeSpaceMatrix=Ol,Mc._shaders.translateRelativeToEye=Ll,Mc._shaders.translucentPhong=Nl,Mc._shaders.transpose=Bl,Mc._shaders.windowToEyeCoordinates=Fl,Mc._shaders.depthRangeStruct=zl,Mc._shaders.ellipsoid=Vl,Mc._shaders.material=kl,Mc._shaders.materialInput=Ul,Mc._shaders.ray=Wl,Mc._shaders.raySegment=Gl,Mc._shaders.CompositeOITFS=Hl,Mc._shaders.EllipsoidFS=ql,Mc._shaders.EllipsoidVS=jl,Mc._shaders.GlobeFS=Yl,Mc._shaders.GlobeFSDepth=Xl,Mc._shaders.GlobeFSPole=Zl,Mc._shaders.GlobeVS=Ql,Mc._shaders.GlobeVSDepth=Jl,Mc._shaders.GlobeVSPole=Kl,Mc._shaders.BumpMapMaterial=$l,Mc._shaders.CheckerboardMaterial=eu,Mc._shaders.DotMaterial=tu,Mc._shaders.FadeMaterial=ru,Mc._shaders.GridMaterial=iu,Mc._shaders.NormalMapMaterial=nu,Mc._shaders.PolylineArrowMaterial=ou,Mc._shaders.PolylineGlowMaterial=au,Mc._shaders.PolylineOutlineMaterial=su,Mc._shaders.RimLightingMaterial=lu,Mc._shaders.StripeMaterial=uu,Mc._shaders.Water=cu,Mc._shaders.PolylineCommon=hu,Mc._shaders.PolylineFS=du,Mc._shaders.PolylineVS=mu,Mc._shaders.AdditiveBlend=pu,Mc._shaders.BrightPass=fu,Mc._shaders.FXAA=vu,Mc._shaders.GaussianBlur1D=gu,Mc._shaders.PassThrough=_u,Mc._shaders.ReprojectWebMercatorFS=yu,Mc._shaders.ReprojectWebMercatorVS=Cu,Mc._shaders.SkyAtmosphereFS=wu,Mc._shaders.SkyAtmosphereVS=Su,Mc._shaders.SkyBoxFS=Eu,Mc._shaders.SkyBoxVS=bu,Mc._shaders.SunFS=Tu,Mc._shaders.SunTextureFS=xu,Mc._shaders.SunVS=Pu,Mc._shaders.ViewportQuadFS=Au,Mc._shaders.ViewportQuadVS=Mu,Mc.Tween=Du,Mc.Uri=Iu,Mc.gltfDefaults=Ru,Mc["knockout-3.1.0"]=Ou,Mc["knockout-es5"]=Lu,Mc.knockout=Nu,Mc.measureText=Bu,Mc["mersenne-twister"]=Fu,Mc.sprintf=zu,Mc.topojson=Vu,Mc.when=ku,Mc.Animation=Uu,Mc.AnimationViewModel=Wu,Mc.BaseLayerPicker=Gu,Mc.BaseLayerPickerViewModel=Hu,Mc.ProviderViewModel=qu,Mc.createDefaultImageryProviderViewModels=ju,Mc.createDefaultTerrainProviderViewModels=Yu,Mc.CesiumInspector=Xu,Mc.CesiumInspectorViewModel=Zu,Mc.CesiumWidget=Qu,Mc.ClockViewModel=Ju,Mc.Command=Ku,Mc.FullscreenButton=$u,Mc.FullscreenButtonViewModel=ec,Mc.Geocoder=tc,Mc.GeocoderViewModel=rc,Mc.HomeButton=ic,Mc.HomeButtonViewModel=nc,Mc.InfoBox=oc,Mc.InfoBoxViewModel=ac,Mc.NavigationHelpButton=sc,Mc.NavigationHelpButtonViewModel=lc,Mc.PerformanceWatchdog=uc,Mc.PerformanceWatchdogViewModel=cc,Mc.SceneModePicker=hc,Mc.SceneModePickerViewModel=dc,Mc.SelectionIndicator=mc,Mc.SelectionIndicatorViewModel=pc,Mc.SvgPathBindingHandler=fc,Mc.Timeline=vc,Mc.TimelineHighlightRange=gc,Mc.TimelineTrack=_c,Mc.ToggleButtonViewModel=yc,Mc.Viewer=Cc,Mc.viewerCesiumInspectorMixin=wc,Mc.viewerDragDropMixin=Sc,Mc.viewerEntityMixin=Ec,Mc.viewerPerformanceWatchdogMixin=bc,Mc.createCommand=Tc,Mc.getElement=xc,Mc.subscribeAndEvaluate=Pc,Mc.createTaskProcessorWorker=Ac,Mc
}),t(["Cesium"],function(e){"use strict";var t="undefined"!=typeof window?window:"undefined"!=typeof self?self:{};t.Cesium=e},void 0,!0)}();",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 14:54:24 GMT",
                    "Content-Length": "1413655",
                    "Date": "Thu, 06 Nov 2014 14:54:37 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}