{
    "url": "http://localhost:9999/NV/CSSOM/docs/parse.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "DOM data manipulation (DOM-based)",
    "issueType": 5247488,
    "severity": "Information",
    "confidence": "Firm",
    "issueBackground": "DOM-based DOM data manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a data field within the DOM that is used within the visible UI or client-side application logic. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the appearance or behavior of the client-side UI. An attacker may be able to leverage this to perform virtual defacement of the application, or possibly to induce the user to perform unintended actions.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based DOM data manipulation vulnerabilities is not to dynamically write to DOM data fields any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored. In general, this is best achieved by using a whitelist of permitted values.",
    "issueDetail": "The application may be vulnerable to DOM-based DOM data manipulation. Data is read from <b>location.hash</b> and written to <b>the 'value' property of a DOM element</b> via the following statements:<ul><li>var hash = location.hash;</li><li>var splitted = hash.split(\"=\");</li><li>var value = splitted[1];</li><li>style.value = decodeURIComponent(value);</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/NV/CSSOM/docs/parse.js",
                "path": "/NV/CSSOM/docs/parse.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9OVi9DU1NPTS9kb2NzL3BhcnNlLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogNDQyNQ0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KRGF0ZTogVGh1LCAwNiBOb3YgMjAxNCAxOTo0NTozNyBHTVQNCkxhc3QtTW9kaWZpZWQ6IFRodSwgMDYgTm92IDIwMTQgMTk6NDU6MzcgR01UDQoNCmlmICghQXJyYXkuaXNBcnJheSkgewoJQXJyYXkuaXNBcnJheSA9IGZ1bmN0aW9uKGFycmF5KSB7CgkJcmV0dXJuIHt9LnRvU3RyaW5nLmNhbGwoYXJyYXkpID09PSAnW29iamVjdCBBcnJheV0nOwoJfTsKfQoKZnVuY3Rpb24gYnlJZChpZCkgewoJcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKfQoKLyoqCiAqIEBwYXJhbSB7bnVtYmVyfSBkZXB0aAogKiBAcmV0dXJuIHtzdHJpbmd9CiAqLwpmdW5jdGlvbiBtYWtlSW5kZW50KGRlcHRoKSB7Cgl2YXIgSU5ERU5UID0gJyAgICAnOwoJaWYgKGRlcHRoID09PSAxKSB7CgkJcmV0dXJuIElOREVOVDsKCX0gZWxzZSBpZiAoZGVwdGggPCAxKSB7CgkJcmV0dXJuICcnOwoJfQoKCWlmIChkZXB0aCBpbiBtYWtlSW5kZW50LmNhY2hlKSB7CgkJcmV0dXJuIG1ha2VJbmRlbnQuY2FjaGVbZGVwdGhdOwoJfSBlbHNlIHsKCQl2YXIgcmVzdWx0ID0gSU5ERU5UOwoJCWZvciAodmFyIGkgPSBkZXB0aDsgLS1pOykgewoJCQlyZXN1bHQgKz0gSU5ERU5UOwoJCX0KCQltYWtlSW5kZW50LmNhY2hlW2RlcHRoXSA9IHJlc3VsdDsKCQlyZXR1cm4gcmVzdWx0OwoJfQp9Cm1ha2VJbmRlbnQuY2FjaGUgPSB7fTsKCgovKioKICogc3RyaW5naWZ5T2JqZWN0S2V5KCdjb2xvcicpIC0+ICdjb2xvcicKICogc3RyaW5naWZ5T2JqZWN0S2V5KCdiYWNrZ3JvdW5kLWNvbG9yJykgLT4gJyJiYWNrZ3JvdW5kLWNvbG9yIicKICogQHBhcmFtIHtzdHJpbmd9IGtleQogKiBAcmV0dXJuIHtzdHJpbmd9CiAqLwpmdW5jdGlvbiBzdHJpbmdpZnlPYmplY3RLZXkoa2V5KSB7CglyZXR1cm4gL15bYS16MC05XyRdKyQvaS50ZXN0KGtleSkgPwoJCWtleSA6CgkJSlNPTi5zdHJpbmdpZnkoa2V5KTsKfQoKCi8qKgogKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0CiAqIEByZXR1cm4ge0RvY3VtZW50RnJhZ21lbnR9CiAqLwpmdW5jdGlvbiBpbnNwZWN0KG9iamVjdCkgewoKCXZhciByb290ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpOwoJX2luc3BlY3Qocm9vdCwgb2JqZWN0LCAwKTsKCXJldHVybiByb290OwoKCS8qKgoJICogQHBhcmFtIHtEb2N1bWVudEZyYWdtZW50fSByb290CgkgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0CgkgKiBAcGFyYW0ge251bWJlcn0gZGVwdGgKCSAqLwoJZnVuY3Rpb24gX2luc3BlY3Qocm9vdCwgb2JqZWN0LCBkZXB0aCkgewoJCXN3aXRjaCAodHlwZW9mIG9iamVjdCkgewoJCQljYXNlICdvYmplY3QnOgoJCQkJaWYgKCFvYmplY3QpIHsKCQkJCQkvL251bGwKCQkJCQlyb290LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdudWxsJykpOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQkJZGVwdGgrKzsKCQkJCXZhciBpbmRlbnQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShtYWtlSW5kZW50KGRlcHRoKSk7CgkJCQl2YXIgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKCQkJCXNwYW4udGV4dENvbnRlbnQgPSAnLFxuJzsKCQkJCXZhciBjb21tYSA9IHNwYW47CgkJCQlpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7CgkJCQkJdmFyIGxlbmd0aCA9IG9iamVjdC5sZW5ndGg7CgkJCQkJaWYgKGxlbmd0aCA9PT0gMCkgewoJCQkJCQlzcGFuID0gc3Bhbi5jbG9uZU5vZGUoZmFsc2UpOwoJCQkJCQlzcGFuLnRleHRDb250ZW50ID0gJ1tdJzsKCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChzcGFuKTsKCQkJCQl9IGVsc2UgewoJCQkJCQlzcGFuID0gc3Bhbi5jbG9uZU5vZGUoZmFsc2UpOwoJCQkJCQlzcGFuLnRleHRDb250ZW50ID0gJ1tcbic7CgkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoc3Bhbik7CgkJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKCQkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoaW5kZW50LmNsb25lTm9kZSh0cnVlKSk7CgkJCQkJCQlfaW5zcGVjdChyb290LCBvYmplY3RbaV0sIGRlcHRoKTsKCQkJCQkJCWlmIChpIDwgbGVuZ3RoIC0gMSkgewoJCQkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoY29tbWEuY2xvbmVOb2RlKHRydWUpKTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQlzcGFuID0gc3Bhbi5jbG9uZU5vZGUoZmFsc2UpOwoJCQkJCQlzcGFuLnRleHRDb250ZW50ID0gJ1xuJyArIG1ha2VJbmRlbnQoZGVwdGggLSAxKSArICddJzsKCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChzcGFuKTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCXZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCQkJCQlsZW5ndGggPSBrZXlzLmxlbmd0aDsKCQkJCQlpZiAobGVuZ3RoID09PSAwKSB7CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAne30nOwoJCQkJCQlyb290LmFwcGVuZENoaWxkKHNwYW4pOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAne1xuJzsKCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChzcGFuKTsKCQkJCQkJdmFyIGNvbG9uID0gc3Bhbi5jbG9uZU5vZGUoZmFsc2UpOwoJCQkJCQljb2xvbi50ZXh0Q29udGVudCA9ICc6ICc7CgkJCQkJCWZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewoJCQkJCQkJdmFyIGtleSA9IGtleXNbaV07CgkJCQkJCQlyb290LmFwcGVuZENoaWxkKGluZGVudC5jbG9uZU5vZGUodHJ1ZSkpOwoJCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdHJpbmdpZnlPYmplY3RLZXkoa2V5KSkpOwoJCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChjb2xvbi5jbG9uZU5vZGUodHJ1ZSkpOwoJCQkJCQkJX2luc3BlY3Qocm9vdCwgb2JqZWN0W2tleV0sIGRlcHRoKTsKCQkJCQkJCWlmIChpIDwgbGVuZ3RoIC0gMSkgewoJCQkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoY29tbWEuY2xvbmVOb2RlKHRydWUpKTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQlzcGFuID0gc3Bhbi5jbG9uZU5vZGUoZmFsc2UpOwoJCQkJCQlzcGFuLnRleHRDb250ZW50ID0gJ1xuJyArIG1ha2VJbmRlbnQoZGVwdGggLSAxKSArICd9JzsKCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChzcGFuKTsKCQkJCQl9CgkJCQl9CgkJCQlicmVhazsKCgkJCWNhc2UgJ3N0cmluZyc6CgkJCQlyb290LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpKTsKCQkJCWJyZWFrOwoKCQkJZGVmYXVsdDoKCQkJCXJvb3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUob2JqZWN0LnRvU3RyaW5nKCkpKTsKCQl9Cgl9Cgp9CgoKdmFyIHN0eWxlID0gYnlJZCgic3R5bGUiKTsKdmFyIG91dHB1dCA9IGJ5SWQoIm91dHB1dCIpOwp2YXIgc2VyaWFsaXplZCA9IGJ5SWQoInNlcmlhbGl6ZWQiKTsKCmZ1bmN0aW9uIG91dHB1dFVwZGF0ZWQoKSB7Cgl2YXIgdmFsdWUgPSBzdHlsZS52YWx1ZTsKCWlmICh2YWx1ZSAhPT0gc3R5bGUucHJldlZhbHVlKSB7CgkJc3R5bGUucHJldlZhbHVlID0gdmFsdWU7CgkJdmFyIGNzcyA9IENTU09NLnBhcnNlKHZhbHVlKTsKCQl1bmNpcmN1bGFyT3duUHJvcGVydGllcyhjc3MpOwoJCW91dHB1dC5pbm5lckhUTUwgPSAnJzsKCQlvdXRwdXQuYXBwZW5kQ2hpbGQoaW5zcGVjdChjc3MpKTsKCQlzZXJpYWxpemVkLmlubmVySFRNTCA9IGNzcy50b1N0cmluZygpOwoJfQp9CgovKioKICogQHJldHVybiB7Ym9vbGVhbn0gdXBkYXRlIGhhcHBlbmQgb3Igbm90CiAqLwpmdW5jdGlvbiBoYXNoQ2hhbmdlZCgpIHsKCXZhciBoYXNoID0gbG9jYXRpb24uaGFzaDsKCXZhciBzcGxpdHRlZCA9IGhhc2guc3BsaXQoIj0iKTsKCWlmIChzcGxpdHRlZC5sZW5ndGggPCAyKSB7CgkJcmV0dXJuIGZhbHNlOwoJfQoJdmFyIG5hbWUgPSBzcGxpdHRlZFswXTsKCXZhciB2YWx1ZSA9IHNwbGl0dGVkWzFdOwoJaWYgKG5hbWUgPT09ICIjY3NzIikgewoJCXN0eWxlLnZhbHVlID0gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTsKCQlvdXRwdXRVcGRhdGVkKCk7CgkJcmV0dXJuIHRydWU7Cgl9CglyZXR1cm4gZmFsc2U7Cn0KCndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbigpIHsKCWhhc2hDaGFuZ2VkKCkgfHwgb3V0cHV0VXBkYXRlZCgpOwp9OwoKd2luZG93Lm9uaGFzaGNoYW5nZSA9IGhhc2hDaGFuZ2VkOwpzdHlsZS5vbmtleXVwID0gc3R5bGUub25wYXN0ZSA9IGZ1bmN0aW9uIGNoYW5nZWQoKXsKCW91dHB1dFVwZGF0ZWQoKTsKfTsKc3R5bGUub25jaGFuZ2UgPSBmdW5jdGlvbiB1cGRhdGVMb2NhdGlvbigpIHsKCWlmIChzdHlsZS52YWx1ZS5sZW5ndGggPCAxMDI0KSB7CgkJbG9jYXRpb24uaGFzaCA9ICJjc3M9IiArIGVuY29kZVVSSUNvbXBvbmVudChzdHlsZS52YWx1ZSk7Cgl9IGVsc2UgewoJCS8vIEh1Z2UgbG9jYXRpb24uaGFzaCBzbG93cyBkb3duIHRoZSBicm93c2VyIDooCgkJbG9jYXRpb24uaGFzaCA9ICdjc3NfaXNfdG9vX2JpZyc7Cgl9Cn07Cg==",
                "body": "aWYgKCFBcnJheS5pc0FycmF5KSB7CglBcnJheS5pc0FycmF5ID0gZnVuY3Rpb24oYXJyYXkpIHsKCQlyZXR1cm4ge30udG9TdHJpbmcuY2FsbChhcnJheSkgPT09ICdbb2JqZWN0IEFycmF5XSc7Cgl9Owp9CgpmdW5jdGlvbiBieUlkKGlkKSB7CglyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpOwp9CgovKioKICogQHBhcmFtIHtudW1iZXJ9IGRlcHRoCiAqIEByZXR1cm4ge3N0cmluZ30KICovCmZ1bmN0aW9uIG1ha2VJbmRlbnQoZGVwdGgpIHsKCXZhciBJTkRFTlQgPSAnICAgICc7CglpZiAoZGVwdGggPT09IDEpIHsKCQlyZXR1cm4gSU5ERU5UOwoJfSBlbHNlIGlmIChkZXB0aCA8IDEpIHsKCQlyZXR1cm4gJyc7Cgl9CgoJaWYgKGRlcHRoIGluIG1ha2VJbmRlbnQuY2FjaGUpIHsKCQlyZXR1cm4gbWFrZUluZGVudC5jYWNoZVtkZXB0aF07Cgl9IGVsc2UgewoJCXZhciByZXN1bHQgPSBJTkRFTlQ7CgkJZm9yICh2YXIgaSA9IGRlcHRoOyAtLWk7KSB7CgkJCXJlc3VsdCArPSBJTkRFTlQ7CgkJfQoJCW1ha2VJbmRlbnQuY2FjaGVbZGVwdGhdID0gcmVzdWx0OwoJCXJldHVybiByZXN1bHQ7Cgl9Cn0KbWFrZUluZGVudC5jYWNoZSA9IHt9OwoKCi8qKgogKiBzdHJpbmdpZnlPYmplY3RLZXkoJ2NvbG9yJykgLT4gJ2NvbG9yJwogKiBzdHJpbmdpZnlPYmplY3RLZXkoJ2JhY2tncm91bmQtY29sb3InKSAtPiAnImJhY2tncm91bmQtY29sb3IiJwogKiBAcGFyYW0ge3N0cmluZ30ga2V5CiAqIEByZXR1cm4ge3N0cmluZ30KICovCmZ1bmN0aW9uIHN0cmluZ2lmeU9iamVjdEtleShrZXkpIHsKCXJldHVybiAvXlthLXowLTlfJF0rJC9pLnRlc3Qoa2V5KSA/CgkJa2V5IDoKCQlKU09OLnN0cmluZ2lmeShrZXkpOwp9CgoKLyoqCiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QKICogQHJldHVybiB7RG9jdW1lbnRGcmFnbWVudH0KICovCmZ1bmN0aW9uIGluc3BlY3Qob2JqZWN0KSB7CgoJdmFyIHJvb3QgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CglfaW5zcGVjdChyb290LCBvYmplY3QsIDApOwoJcmV0dXJuIHJvb3Q7CgoJLyoqCgkgKiBAcGFyYW0ge0RvY3VtZW50RnJhZ21lbnR9IHJvb3QKCSAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QKCSAqIEBwYXJhbSB7bnVtYmVyfSBkZXB0aAoJICovCglmdW5jdGlvbiBfaW5zcGVjdChyb290LCBvYmplY3QsIGRlcHRoKSB7CgkJc3dpdGNoICh0eXBlb2Ygb2JqZWN0KSB7CgkJCWNhc2UgJ29iamVjdCc6CgkJCQlpZiAoIW9iamVjdCkgewoJCQkJCS8vbnVsbAoJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ251bGwnKSk7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCQlkZXB0aCsrOwoJCQkJdmFyIGluZGVudCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG1ha2VJbmRlbnQoZGVwdGgpKTsKCQkJCXZhciBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwoJCQkJc3Bhbi50ZXh0Q29udGVudCA9ICcsXG4nOwoJCQkJdmFyIGNvbW1hID0gc3BhbjsKCQkJCWlmIChBcnJheS5pc0FycmF5KG9iamVjdCkpIHsKCQkJCQl2YXIgbGVuZ3RoID0gb2JqZWN0Lmxlbmd0aDsKCQkJCQlpZiAobGVuZ3RoID09PSAwKSB7CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAnW10nOwoJCQkJCQlyb290LmFwcGVuZENoaWxkKHNwYW4pOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAnW1xuJzsKCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChzcGFuKTsKCQkJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewoJCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChpbmRlbnQuY2xvbmVOb2RlKHRydWUpKTsKCQkJCQkJCV9pbnNwZWN0KHJvb3QsIG9iamVjdFtpXSwgZGVwdGgpOwoJCQkJCQkJaWYgKGkgPCBsZW5ndGggLSAxKSB7CgkJCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChjb21tYS5jbG9uZU5vZGUodHJ1ZSkpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAnXG4nICsgbWFrZUluZGVudChkZXB0aCAtIDEpICsgJ10nOwoJCQkJCQlyb290LmFwcGVuZENoaWxkKHNwYW4pOwoJCQkJCX0KCQkJCX0gZWxzZSB7CgkJCQkJdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoJCQkJCWxlbmd0aCA9IGtleXMubGVuZ3RoOwoJCQkJCWlmIChsZW5ndGggPT09IDApIHsKCQkJCQkJc3BhbiA9IHNwYW4uY2xvbmVOb2RlKGZhbHNlKTsKCQkJCQkJc3Bhbi50ZXh0Q29udGVudCA9ICd7fSc7CgkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoc3Bhbik7CgkJCQkJfSBlbHNlIHsKCQkJCQkJc3BhbiA9IHNwYW4uY2xvbmVOb2RlKGZhbHNlKTsKCQkJCQkJc3Bhbi50ZXh0Q29udGVudCA9ICd7XG4nOwoJCQkJCQlyb290LmFwcGVuZENoaWxkKHNwYW4pOwoJCQkJCQl2YXIgY29sb24gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCWNvbG9uLnRleHRDb250ZW50ID0gJzogJzsKCQkJCQkJZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CgkJCQkJCQl2YXIga2V5ID0ga2V5c1tpXTsKCQkJCQkJCXJvb3QuYXBwZW5kQ2hpbGQoaW5kZW50LmNsb25lTm9kZSh0cnVlKSk7CgkJCQkJCQlyb290LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0cmluZ2lmeU9iamVjdEtleShrZXkpKSk7CgkJCQkJCQlyb290LmFwcGVuZENoaWxkKGNvbG9uLmNsb25lTm9kZSh0cnVlKSk7CgkJCQkJCQlfaW5zcGVjdChyb290LCBvYmplY3Rba2V5XSwgZGVwdGgpOwoJCQkJCQkJaWYgKGkgPCBsZW5ndGggLSAxKSB7CgkJCQkJCQkJcm9vdC5hcHBlbmRDaGlsZChjb21tYS5jbG9uZU5vZGUodHJ1ZSkpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCXNwYW4gPSBzcGFuLmNsb25lTm9kZShmYWxzZSk7CgkJCQkJCXNwYW4udGV4dENvbnRlbnQgPSAnXG4nICsgbWFrZUluZGVudChkZXB0aCAtIDEpICsgJ30nOwoJCQkJCQlyb290LmFwcGVuZENoaWxkKHNwYW4pOwoJCQkJCX0KCQkJCX0KCQkJCWJyZWFrOwoKCQkJY2FzZSAnc3RyaW5nJzoKCQkJCXJvb3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoSlNPTi5zdHJpbmdpZnkob2JqZWN0KSkpOwoJCQkJYnJlYWs7CgoJCQlkZWZhdWx0OgoJCQkJcm9vdC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShvYmplY3QudG9TdHJpbmcoKSkpOwoJCX0KCX0KCn0KCgp2YXIgc3R5bGUgPSBieUlkKCJzdHlsZSIpOwp2YXIgb3V0cHV0ID0gYnlJZCgib3V0cHV0Iik7CnZhciBzZXJpYWxpemVkID0gYnlJZCgic2VyaWFsaXplZCIpOwoKZnVuY3Rpb24gb3V0cHV0VXBkYXRlZCgpIHsKCXZhciB2YWx1ZSA9IHN0eWxlLnZhbHVlOwoJaWYgKHZhbHVlICE9PSBzdHlsZS5wcmV2VmFsdWUpIHsKCQlzdHlsZS5wcmV2VmFsdWUgPSB2YWx1ZTsKCQl2YXIgY3NzID0gQ1NTT00ucGFyc2UodmFsdWUpOwoJCXVuY2lyY3VsYXJPd25Qcm9wZXJ0aWVzKGNzcyk7CgkJb3V0cHV0LmlubmVySFRNTCA9ICcnOwoJCW91dHB1dC5hcHBlbmRDaGlsZChpbnNwZWN0KGNzcykpOwoJCXNlcmlhbGl6ZWQuaW5uZXJIVE1MID0gY3NzLnRvU3RyaW5nKCk7Cgl9Cn0KCi8qKgogKiBAcmV0dXJuIHtib29sZWFufSB1cGRhdGUgaGFwcGVuZCBvciBub3QKICovCmZ1bmN0aW9uIGhhc2hDaGFuZ2VkKCkgewoJdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoOwoJdmFyIHNwbGl0dGVkID0gaGFzaC5zcGxpdCgiPSIpOwoJaWYgKHNwbGl0dGVkLmxlbmd0aCA8IDIpIHsKCQlyZXR1cm4gZmFsc2U7Cgl9Cgl2YXIgbmFtZSA9IHNwbGl0dGVkWzBdOwoJdmFyIHZhbHVlID0gc3BsaXR0ZWRbMV07CglpZiAobmFtZSA9PT0gIiNjc3MiKSB7CgkJc3R5bGUudmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpOwoJCW91dHB1dFVwZGF0ZWQoKTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCXJldHVybiBmYWxzZTsKfQoKd2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uKCkgewoJaGFzaENoYW5nZWQoKSB8fCBvdXRwdXRVcGRhdGVkKCk7Cn07Cgp3aW5kb3cub25oYXNoY2hhbmdlID0gaGFzaENoYW5nZWQ7CnN0eWxlLm9ua2V5dXAgPSBzdHlsZS5vbnBhc3RlID0gZnVuY3Rpb24gY2hhbmdlZCgpewoJb3V0cHV0VXBkYXRlZCgpOwp9OwpzdHlsZS5vbmNoYW5nZSA9IGZ1bmN0aW9uIHVwZGF0ZUxvY2F0aW9uKCkgewoJaWYgKHN0eWxlLnZhbHVlLmxlbmd0aCA8IDEwMjQpIHsKCQlsb2NhdGlvbi5oYXNoID0gImNzcz0iICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0eWxlLnZhbHVlKTsKCX0gZWxzZSB7CgkJLy8gSHVnZSBsb2NhdGlvbi5oYXNoIHNsb3dzIGRvd24gdGhlIGJyb3dzZXIgOigKCQlsb2NhdGlvbi5oYXNoID0gJ2Nzc19pc190b29fYmlnJzsKCX0KfTsK",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 19:45:37 GMT",
                    "Content-Length": "4425",
                    "Date": "Thu, 06 Nov 2014 19:45:37 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}