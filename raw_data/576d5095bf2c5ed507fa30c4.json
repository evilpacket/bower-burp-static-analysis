{
    "url": "http://localhost:9999/CloudKidStudio/CloudKidOS/dist/cloudkid-os-createjs.min.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Client-side JSON injection (DOM-based)",
    "issueType": 2098032,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based JSON injection vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and incorporates this into a string that is parsed as a JSON data structure and then processed by the application. An attacker may be able to use this behavior to construct a URL which, if visited by another application user, will cause arbitrary JSON data to be processed. Depending on the purpose for which this data is used, it may be possible to subvert the application's logic, or cause unintended actions on behalf of the user.",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based JSON injection vulnerabilities is not to parse as JSON any string containing data that originated from an untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from modifying the JSON structure in inappropriate ways. This may involve strict validation of specific items to ensure they do not contain any characters that may interfere with the structure of the JSON when it is parsed.",
    "issueDetail": "The application may be vulnerable to DOM-based client-side JSON injection. Data is read from <b>document.cookie</b> and written to <b>JSON.parse()</b> via the following statements:<ul><li>var s,n=t+\"=\",a=document.cookie.split(\";\"),r=0;</li><li>s=a[r]</li><li>return JSON.parse(unescape(s.substring(n.length,s.length)))</li></ul>Because the data originates from a cookie, the application's behavior is not trivial to exploit in an attack against another user. Typically, you will need to find a means of setting an arbitrary cookie value in the victim's browser in order to exploit the vulnerability. Applications often contain \"cookie-forcing\" conditions which make this possible, and such a condition in any related domain or subdomain can potentially be used for this purpose. Nonetheless, this limitation somewhat mitigates the impact of the vulnerability. ",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/CloudKidStudio/CloudKidOS/dist/cloudkid-os-createjs.min.js",
                "path": "/CloudKidStudio/CloudKidOS/dist/cloudkid-os-createjs.min.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9DbG91ZEtpZFN0dWRpby9DbG91ZEtpZE9TL2Rpc3QvY2xvdWRraWQtb3MtY3JlYXRlanMubWluLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogMzUyOTINCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkRhdGU6IFRodSwgMDYgTm92IDIwMTQgMTU6Mzk6MzQgR01UDQpMYXN0LU1vZGlmaWVkOiBUaHUsIDA2IE5vdiAyMDE0IDE1OjM5OjMwIEdNVA0KDQohZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24oKXt9LGk9ZS5wcm90b3R5cGU9bmV3IGNyZWF0ZWpzLkNvbnRhaW5lcixzPSExLG49ITEsYT1udWxsLHI9MCxvPTAsbD1udWxsLHU9MCxoPW51bGwsYz1udWxsLGQ9LTEsZz0hMSxwPTAsXz0wO2UuVkVSU0lPTj0iMS4xLjI3IixpLkNvbnRhaW5lcl9pbml0aWFsaXplPWkuaW5pdGlhbGl6ZSxpLnN0YWdlPW51bGwsaS5fYXBwPW51bGwsaS5vcHRpb25zPW51bGwsaS5fdXBkYXRlRnVuY3Rpb25zPXt9LGUuaW5pdD1mdW5jdGlvbih0LGkpe3JldHVybiBjfHwoYz1uZXcgZSxjLmluaXRpYWxpemUodCxpKSksY30saS5pbml0aWFsaXplPWZ1bmN0aW9uKGUsaSl7dGhpcy5Db250YWluZXJfaW5pdGlhbGl6ZSgpLHRoaXMub3B0aW9ucz1pfHx7fSx0aGlzLm9wdGlvbnMucGFyc2VRdWVyeVN0cmluZyE9PXQmJih0aGlzLm9wdGlvbnM9ayh0aGlzLm9wdGlvbnMpKSx0aGlzLm9wdGlvbnMuZGVidWchPT10JiYoRGVidWcuZW5hYmxlZD10aGlzLm9wdGlvbnMuZGVidWc9PT0hMHx8InRydWUiPT09dGhpcy5vcHRpb25zLmRlYnVnKSx0aGlzLm9wdGlvbnMubWluTG9nTGV2ZWwhPT10JiYoRGVidWcubWluTG9nTGV2ZWw9cGFyc2VJbnQodGhpcy5vcHRpb25zLm1pbkxvZ0xldmVsLDEwKSksInN0cmluZyI9PXR5cGVvZiB0aGlzLm9wdGlvbnMuaXAmJkRlYnVnLmNvbm5lY3QodGhpcy5vcHRpb25zLmlwKTt2YXIgcz1jbG91ZGtpZC5NZWRpYUxvYWRlci5pbml0KCk7dGhpcy5zdGFnZT1uZXcgY3JlYXRlanMuU3RhZ2UoZSksdGhpcy5zdGFnZS5uYW1lPSJjbG91ZGtpZC5PUyIsdGhpcy5zdGFnZS5jYW52YXMub25tb3VzZWRvd249ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpfTt2YXIgcj10aGlzLm9wdGlvbnMubW91c2VPdmVyUmF0ZT10aGlzLm9wdGlvbnMubW91c2VPdmVyUmF0ZXx8MzA7dGhpcy5zdGFnZS5lbmFibGVNb3VzZU92ZXIociksdGhpcy5zdGFnZS5hZGRDaGlsZCh0aGlzKSx0aGlzLnZpc2libGVMaXN0ZW5lcj10aGlzLm9uV2luZG93VmlzaWJpbGl0eUNoYW5nZWQuYmluZCh0aGlzKSx3KHRoaXMudmlzaWJsZUxpc3RlbmVyKTt2YXIgbz13aW5kb3cuaGFzT3duUHJvcGVydHkoIm9udG91Y2hzdGFydCIpOygtMT09d2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZigiTVNJRSAxMC4wIil8fG8pJiZjcmVhdGVqcy5Ub3VjaC5lbmFibGUodGhpcy5zdGFnZSksdGhpcy5zdGFnZS5hdXRvQ2xlYXI9ISF0aGlzLm9wdGlvbnMuY2xlYXJWaWV3fHwhMSx0aGlzLm9wdGlvbnMuc2hvd0ZyYW1lcmF0ZSYmKGE9bmV3IGNyZWF0ZWpzLlRleHQoIiIsIjEwcHggQXJpYWwiLCIjMDAwIiksYS5zdHJva2U9e3dpZHRoOjIsY29sb3I6IiNmZmZmZmYifSxhLng9YS55PTUsdGhpcy5hZGRDaGlsZChhKSksdGhpcy5zdGFnZS51cGRhdGUoKTtpZihoPXRoaXMudGljay5iaW5kKHRoaXMpLGc9dGhpcy5vcHRpb25zLnJhZnx8ITEsdGhpcy5mcHM9dGhpcy5vcHRpb25zLmZwc3x8NjAsdGhpcy5yZW1vdmVBcHAoKSx0aGlzLm9wdGlvbnMudmVyc2lvbnNGaWxlIT09dCl7bj0hMTt2YXIgbD10aGlzO3MuY2FjaGVNYW5hZ2VyLmFkZFZlcnNpb25zRmlsZSh0aGlzLm9wdGlvbnMudmVyc2lvbnNGaWxlLGZ1bmN0aW9uKCl7bj0hMCxsLl9hcHAmJihsLmFkZENoaWxkQXQobC5fYXBwLDApLGwuX2FwcC5pbml0KCksbC5yZXN1bWUoKSl9KX1lbHNlIG49ITB9O3ZhciBmPW51bGwsbT1udWxsLGI9InZpc2libGUiLHY9ImhpZGRlbiIsdz1mdW5jdGlvbih0KXtmPSJoaWRkZW4iLGYgaW4gZG9jdW1lbnQ/ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigidmlzaWJpbGl0eWNoYW5nZSIsdCk6KGY9Im1vekhpZGRlbiIpaW4gZG9jdW1lbnQ/ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibW96dmlzaWJpbGl0eWNoYW5nZSIsdCk6KGY9IndlYmtpdEhpZGRlbiIpaW4gZG9jdW1lbnQ/ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigid2Via2l0dmlzaWJpbGl0eWNoYW5nZSIsdCk6KGY9Im1zSGlkZGVuIilpbiBkb2N1bWVudD9kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJtc3Zpc2liaWxpdHljaGFuZ2UiLHQpOiJvbmZvY3VzaW4iaW4gZG9jdW1lbnQ/KG09e2ZvY3VzaW46Yixmb2N1c291dDp2fSxkb2N1bWVudC5vbmZvY3VzaW49ZG9jdW1lbnQub25mb2N1c291dD10KToobT17Zm9jdXM6YixwYWdlc2hvdzpiLGJsdXI6dixwYWdlaGlkZTp2fSx3aW5kb3cub25wYWdlc2hvdz13aW5kb3cub25wYWdlaGlkZT13aW5kb3cub25mb2N1cz13aW5kb3cub25ibHVyPXQpfSx5PWZ1bmN0aW9uKHQpe3ZhciBlPSJoaWRkZW4iO2UgaW4gZG9jdW1lbnQ/ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigidmlzaWJpbGl0eWNoYW5nZSIsdCk6KGU9Im1vekhpZGRlbiIpaW4gZG9jdW1lbnQ/ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW96dmlzaWJpbGl0eWNoYW5nZSIsdCk6KGU9IndlYmtpdEhpZGRlbiIpaW4gZG9jdW1lbnQ/ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigid2Via2l0dmlzaWJpbGl0eWNoYW5nZSIsdCk6KGU9Im1zSGlkZGVuIilpbiBkb2N1bWVudCYmZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigibXN2aXNpYmlsaXR5Y2hhbmdlIix0KSxkb2N1bWVudC5vbmZvY3VzaW49ZG9jdW1lbnQub25mb2N1c291dD1udWxsLHdpbmRvdy5vbnBhZ2VzaG93PXdpbmRvdy5vbnBhZ2VoaWRlPXdpbmRvdy5vbmZvY3VzPXdpbmRvdy5vbmJsdXI9bnVsbH07aS5vbldpbmRvd1Zpc2liaWxpdHlDaGFuZ2VkPWZ1bmN0aW9uKHQpe3ZhciBlPSJ2aXNpYmxlIixpPSJoaWRkZW4iO3Q9dHx8d2luZG93LmV2ZW50O3ZhciBzO3M9bT9tW3QudHlwZV06ZG9jdW1lbnRbZl0/aTplLHM9PWk/dGhpcy5wYXVzZSgpOnRoaXMucmVzdW1lKCl9O3ZhciBrPWZ1bmN0aW9uKHQpe3ZhciBlPXdpbmRvdy5sb2NhdGlvbi5ocmVmLGk9ZS5pbmRleE9mKCI/Iik7aWYoLTE9PWkpcmV0dXJuIHQ7dmFyIHM9MD5pPyIiOmUuc3Vic3RyKGkrMSksbj1zLmluZGV4T2YoIiMiKTtzPTA+bj9zOnMuc3Vic3RyaW5nKDAsbik7Zm9yKHZhciBhLHI9cy5zcGxpdCgiJiIpLG89MDtvPHIubGVuZ3RoO28rKylhPXJbb10uc3BsaXQoIj0iKSx0W2FbMF1dPWFbMV07cmV0dXJuIHR9O2kucGF1c2U9ZnVuY3Rpb24oKXstMSE9ZCYmKGc/d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lJiZjYW5jZWxBbmltYXRpb25GcmFtZShkKTpjbGVhclRpbWVvdXQoZCksZD0tMSkscz0hMH07dmFyIFM9d2luZG93LnBlcmZvcm1hbmNlJiYocGVyZm9ybWFuY2Uubm93fHxwZXJmb3JtYW5jZS5tb3pOb3d8fHBlcmZvcm1hbmNlLm1zTm93fHxwZXJmb3JtYW5jZS5vTm93fHxwZXJmb3JtYW5jZS53ZWJraXROb3cpO1M9Uz9TLmJpbmQocGVyZm9ybWFuY2UpOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9LGkuZ2V0VGltZT1mdW5jdGlvbigpe3JldHVybiBTKCl9LGkucmVzdW1lPWZ1bmN0aW9uKCl7cz0hMSwtMT09ZCYmKGQ9Zz9yZXF1ZXN0QW5pbUZyYW1lKGgpOkMoaCkpLG89cj10aGlzLmdldFRpbWUoKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGksImZwcyIse2dldDpmdW5jdGlvbigpe3JldHVybiBwfSxzZXQ6ZnVuY3Rpb24odCl7Im51bWJlciI9PXR5cGVvZiB0JiYocD10LF89MWUzL3B8MCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGksInN0YWdlV2lkdGgiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYy5zdGFnZS5jYW52YXMud2lkdGh9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGksInN0YWdlSGVpZ2h0Iix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGMuc3RhZ2UuY2FudmFzLmhlaWdodH19KTt2YXIgQz1mdW5jdGlvbih0LGUpe3ZhciBpPTA7cmV0dXJuIGUmJihpPU1hdGgubWF4KDAsXy1lKSksc2V0VGltZW91dCh0LGkpfTtpLnJlbW92ZUFwcD1mdW5jdGlvbih0KXt2YXIgZT0hMSxpPXRoaXMuc3RhZ2U7cmV0dXJuIHRoaXMuX2FwcCYmKHRoaXMuY29udGFpbnModGhpcy5fYXBwKSYmdGhpcy5yZW1vdmVDaGlsZCh0aGlzLl9hcHApLGkucmVtb3ZlQWxsQ2hpbGRyZW4oKSx0aGlzLl9hcHAuZGVzdHJveSgpLGU9ITApLHRoaXMuX2FwcD1udWxsLHRoaXMucGF1c2UoKSx0fHwoaS5hZGRDaGlsZCh0aGlzKSxhJiYoYS50ZXh0PSJGUFM6IDAuMDAwIikscj1vPWw9dT0wLHRoaXMuc3RhZ2UudXBkYXRlKCkpLGV9LGkuYWRkQXBwPWZ1bmN0aW9uKHQpe2lmKHRoaXMucmVtb3ZlQXBwKCksISh0IGluc3RhbmNlb2YgY2xvdWRraWQuQXBwbGljYXRpb24pKXRocm93IG5ldyBFcnJvcigiQ2FuIG9ubHkgb2JqZWN0cyB0aGF0IGluaGVyaXQgY2xvdWRraWQuQXBwbGljYXRpb24iKTt0aGlzLl9hcHA9dCxuJiYodGhpcy5hZGRDaGlsZEF0KHQsMCksdGhpcy5fYXBwLmluaXQoKSx0aGlzLnJlc3VtZSgpKX0saS5nZXRBcHA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXBwfSxpLmFkZFVwZGF0ZUNhbGxiYWNrPWZ1bmN0aW9uKGUsaSl7dGhpcy5fdXBkYXRlRnVuY3Rpb25zW2VdPT09dCYmKHRoaXMuX3VwZGF0ZUZ1bmN0aW9uc1tlXT1pKX0saS5yZW1vdmVVcGRhdGVDYWxsYmFjaz1mdW5jdGlvbihlKXt0aGlzLl91cGRhdGVGdW5jdGlvbnNbZV0hPT10JiZkZWxldGUgdGhpcy5fdXBkYXRlRnVuY3Rpb25zW2VdfSxpLnRpY2s9ZnVuY3Rpb24oKXtpZihzKXJldHVybiB2b2lkKGQ9LTEpO3ZhciB0PXRoaXMuZ2V0VGltZSgpLGU9dC1yO2lmKGEmJmEudmlzaWJsZSl7dSsrO3ZhciBpPXQtbztpPjFlMyYmKGw9MWUzL2kqdSxhLnRleHQ9IkZQUzogIitNYXRoLnJvdW5kKDFlMypsKS8xZTMsbz10LHU9MCl9cj10LHRoaXMuX2FwcCYmdGhpcy5fYXBwLnVwZGF0ZShlKTtmb3IodmFyIG4gaW4gdGhpcy5fdXBkYXRlRnVuY3Rpb25zKXRoaXMuX3VwZGF0ZUZ1bmN0aW9uc1tuXShlKTt0aGlzLnN0YWdlLnVwZGF0ZShlKSxkPWc/cmVxdWVzdEFuaW1GcmFtZShoKTpDKGgsdGhpcy5nZXRUaW1lKCktcil9LGkuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuc3RhZ2UsZT1jbG91ZGtpZC5NZWRpYUxvYWRlci5pbnN0YW5jZTt0aGlzLnBhdXNlKCksdGhpcy5yZW1vdmVBcHAoITApLGM9bnVsbCxjcmVhdGVqcy5Ub3VjaC5kaXNhYmxlKHQpLHQuZW5hYmxlTW91c2VPdmVyKC0xKSx0LmVuYWJsZURPTUV2ZW50cyghMSksZS5kZXN0cm95KCksdGhpcy5zdGFnZT1udWxsLHRoaXMuX3VwZGF0ZUZ1bmN0aW9ucz1udWxsLHkodGhpcy52aXNpYmxlTGlzdGVuZXIpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiaW5zdGFuY2UiLHtnZXQ6ZnVuY3Rpb24oKXtpZighYyl0aHJvdyJDYWxsIGNsb3Vka2lkLk9TLmluaXQoY2FudmFzSWQpIjtyZXR1cm4gY319KSxuYW1lc3BhY2UoImNsb3Vka2lkIikuT1M9ZX0oKSxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9e307RnVuY3Rpb24ucHJvdG90eXBlLmJpbmR8fChlLmJpbmQ9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yO3ZhciBpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxzPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIHMpe3ZhciBuPWZ1bmN0aW9uKCl7fTtuLnByb3RvdHlwZT1lLnByb3RvdHlwZTt2YXIgYT1uZXcgbixyPWUuYXBwbHkoYSxpLmNvbmNhdChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKSk7cmV0dXJuIE9iamVjdChyKT09PXI/cjphfXJldHVybiBlLmFwcGx5KHQsaS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpfTtyZXR1cm4gc30pO2Zvcih2YXIgaT0wLHM9WyJtcyIsIm1veiIsIndlYmtpdCIsIm8iXSxuPTA7bjxzLmxlbmd0aCYmIXQucmVxdWVzdEFuaW1hdGlvbkZyYW1lOysrbil0LnJlcXVlc3RBbmltYXRpb25GcmFtZT10W3Nbbl0rIlJlcXVlc3RBbmltYXRpb25GcmFtZSJdLHQuY2FuY2VsQW5pbWF0aW9uRnJhbWU9dFtzW25dKyJDYW5jZWxBbmltYXRpb25GcmFtZSJdfHx0W3Nbbl0rIkNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSJdO3QucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHwodC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9ZnVuY3Rpb24oZSl7dmFyIHM9KG5ldyBEYXRlKS5nZXRUaW1lKCksbj1NYXRoLm1heCgwLDE2LShzLWkpKSxhPXQuc2V0VGltZW91dChmdW5jdGlvbigpe2UocytuKX0sbik7cmV0dXJuIGk9cytuLGF9LHQuY2FuY2VsQW5pbWF0aW9uRnJhbWV8fCh0LmNhbmNlbEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dCh0KX0pKSxlLnJlcXVlc3RBbmltYXRpb25GcmFtZT10LnJlcXVlc3RBbmltYXRpb25GcmFtZSx0LnJlcXVlc3RBbmltRnJhbWU9dC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsZS5jYW5jZWxBbmltYXRpb25GcmFtZT10LmNhbmNlbEFuaW1hdGlvbkZyYW1lLG5hbWVzcGFjZSgiY2xvdWRraWQiKS5GdW5jdGlvblV0aWxzPWV9KHdpbmRvdyksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9e307dC5sb2FkU3ByaXRlU2hlZXQ9ZnVuY3Rpb24odCxlLGkpe2k+MHx8KGk9MSk7Zm9yKHZhciBzIGluIHQpe3ZhciBuPXRbc10sYT1zLmluZGV4T2YoIi4iKTthPjAmJihzPXMuc3Vic3RyaW5nKDAsYSkpO3ZhciByPWxpYltzXSxvPWxpYltzXT1mdW5jdGlvbigpe2NyZWF0ZWpzLkNvbnRhaW5lci5jYWxsKHRoaXMpO3ZhciB0PW5ldyBjcmVhdGVqcy5CaXRtYXAodGhpcy5faW1hZ2UpO3RoaXMuYWRkQ2hpbGQodCksdC5zb3VyY2VSZWN0PXRoaXMuX2ZyYW1lUmVjdDt2YXIgZT10aGlzLl9zY2FsZTt0LnNldFRyYW5zZm9ybSh0aGlzLl9mcmFtZU9mZnNldFgqZSx0aGlzLl9mcmFtZU9mZnNldFkqZSxlLGUpfSxsPW8ucHJvdG90eXBlPW5ldyBjcmVhdGVqcy5Db250YWluZXI7bC5faW1hZ2U9ZSxsLl9zY2FsZT1pO3ZhciB1PW4uZnJhbWU7bC5fZnJhbWVSZWN0PW5ldyBjcmVhdGVqcy5SZWN0YW5nbGUodS54LHUueSx1LncsdS5oKSxuLnRyaW1tZWQ/KGwuX2ZyYW1lT2Zmc2V0WD1uLnNwcml0ZVNvdXJjZVNpemUueCxsLl9mcmFtZU9mZnNldFk9bi5zcHJpdGVTb3VyY2VTaXplLnkpOmwuX2ZyYW1lT2Zmc2V0WD1sLl9mcmFtZU9mZnNldFk9MCxsLm5vbWluYWxCb3VuZHM9ciYmci5wcm90b3R5cGUubm9taW5hbEJvdW5kcz9yLnByb3RvdHlwZS5ub21pbmFsQm91bmRzOm5ldyBjcmVhdGVqcy5SZWN0YW5nbGUoMCwwLG4uc291cmNlU2l6ZS53LG4uc291cmNlU2l6ZS5oKX19LHQucmVwbGFjZVdpdGhTY2FsZWRCaXRtYXA9ZnVuY3Rpb24odCxlKXtpZigxIT1lJiZlPjApe3ZhciBpLHMsbixhO2lmKCJzdHJpbmciPT10eXBlb2YgdClpPXQscz1saWJbaV0scyYmKG49bGliW2ldPWZ1bmN0aW9uKCl7Y3JlYXRlanMuQ29udGFpbmVyLmNhbGwodGhpcyk7dmFyIHQ9bmV3IHRoaXMuX29sZEJNO3RoaXMuYWRkQ2hpbGQodCksdC5zZXRUcmFuc2Zvcm0oMCwwLHRoaXMuX3NjYWxlLHRoaXMuX3NjYWxlKX0sYT1uLnByb3RvdHlwZT1uZXcgY3JlYXRlanMuQ29udGFpbmVyLGEuX29sZEJNPXMsYS5fc2NhbGU9ZSxhLm5vbWluYWxCb3VuZHM9cy5wcm90b3R5cGUubm9taW5hbEJvdW5kcyk7ZWxzZSBmb3IoaSBpbiB0KXM9bGliW2ldLHMmJihuPWxpYltpXT1mdW5jdGlvbigpe2NyZWF0ZWpzLkNvbnRhaW5lci5jYWxsKHRoaXMpO3ZhciB0PW5ldyB0aGlzLl9vbGRCTTt0aGlzLmFkZENoaWxkKHQpLHQuc2V0VHJhbnNmb3JtKDAsMCx0aGlzLl9zY2FsZSx0aGlzLl9zY2FsZSl9LGE9bi5wcm90b3R5cGU9bmV3IGNyZWF0ZWpzLkNvbnRhaW5lcixhLl9vbGRCTT1zLGEuX3NjYWxlPWUsYS5ub21pbmFsQm91bmRzPXMucHJvdG90eXBlLm5vbWluYWxCb3VuZHMpfX0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLkJpdG1hcFV0aWxzPXR9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9e30sZT0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5TdG9yYWdlLGk9LTE7aWYoZSl0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0oIkxTX1RFU1QiLCJ0ZXN0IiksbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oIkxTX1RFU1QiKX1jYXRjaChzKXtlPSExfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJ1c2VXZWJTdG9yYWdlIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGV9LHNldDpmdW5jdGlvbih0KXtpZih0JiYidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5TdG9yYWdlKXRyeXtsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiTFNfVEVTVCIsInRlc3QiKSxsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgiTFNfVEVTVCIpLGU9ITB9Y2F0Y2goaSl7ZT0hMX1lbHNlIGU9ITF9fSksdC5yZW1vdmU9ZnVuY3Rpb24ocyl7ZT8obG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0ocyksc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShzKSk6dC53cml0ZShzLCIiLGkpfSx0LndyaXRlPWZ1bmN0aW9uKHQscyxuKXtpZihlKW4/c2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh0LEpTT04uc3RyaW5naWZ5KHMpKTpsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0LEpTT04uc3RyaW5naWZ5KHMpKTtlbHNle3ZhciBhO2E9bj9uIT09aT8iIjoiOyBleHBpcmVzPVRodSwgMDEgSmFuIDE5NzAgMDA6MDA6MDAgR01UIjoiOyBleHBpcmVzPSIrbmV3IERhdGUoMjE0NzQ4MzY0NmUzKS50b0dNVFN0cmluZygpLGRvY3VtZW50LmNvb2tpZT10KyI9Iitlc2NhcGUoSlNPTi5zdHJpbmdpZnkocykpK2ErIjsgcGF0aD0vIn19LHQucmVhZD1mdW5jdGlvbih0KXtpZihlKXt2YXIgaT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0KXx8c2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSh0KTtyZXR1cm4gaT9KU09OLnBhcnNlKGkpOm51bGx9dmFyIHMsbj10KyI9IixhPWRvY3VtZW50LmNvb2tpZS5zcGxpdCgiOyIpLHI9MDtmb3Iocj0wO3I8YS5sZW5ndGg7cisrKXtmb3Iocz1hW3JdOyIgIj09cy5jaGFyQXQoMCk7KXM9cy5zdWJzdHJpbmcoMSxzLmxlbmd0aCk7aWYoMD09PXMuaW5kZXhPZihuKSlyZXR1cm4gSlNPTi5wYXJzZSh1bmVzY2FwZShzLnN1YnN0cmluZyhuLmxlbmd0aCxzLmxlbmd0aCkpKX1yZXR1cm4gbnVsbH0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLlNhdmVkRGF0YT10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3dpbmRvdy5VUkw9d2luZG93LlVSTHx8d2luZG93LndlYmtpdFVSTCx3aW5kb3cuQmxvYkJ1aWxkZXI9d2luZG93LkJsb2JCdWlsZGVyfHx3aW5kb3cuV2ViS2l0QmxvYkJ1aWxkZXJ8fHdpbmRvdy5Nb3pCbG9iQnVpbGRlcjt2YXIgV29ya2VyPXt9O1dvcmtlci5pbml0PWZ1bmN0aW9uKHQpe2lmKCF3aW5kb3cuVVJMfHwhd2luZG93LldvcmtlcilyZXR1cm4gbmV3IEZhbGxiYWNrV29ya2VyKHQpO3ZhciBlO3RyeXtlPW5ldyBCbG9iKFt0XSx7dHlwZToiYXBwbGljYXRpb24vamF2YXNjcmlwdCJ9KX1jYXRjaChpKXtpZighd2luZG93LkJsb2JCdWlsZGVyKXJldHVybiBuZXcgRmFsbGJhY2tXb3JrZXIodCk7dHJ5e2U9bmV3IEJsb2JCdWlsZGVyLGUuYXBwZW5kKHQpLGU9ZS5nZXRCbG9iKCl9Y2F0Y2gocyl7cmV0dXJuIG5ldyBGYWxsYmFja1dvcmtlcih0KX19aWYoIWUpcmV0dXJuIG5ldyBGYWxsYmFja1dvcmtlcih0KTt0cnl7dmFyIG49bmV3IFdvcmtlcihVUkwuY3JlYXRlT2JqZWN0VVJMKGUpKTtyZXR1cm4gbn1jYXRjaChpKXtyZXR1cm4gbmV3IEZhbGxiYWNrV29ya2VyKHQpfX0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLmNyZWF0ZVdvcmtlcj1Xb3JrZXIuaW5pdCxuYW1lc3BhY2UoImNsb3Vka2lkIikuV29ya2VyPVdvcmtlcjt2YXIgU3ViV29ya2VyPWZ1bmN0aW9uKGNvZGVTdHJpbmcscGFyZW50KXt0aGlzLl93UGFyZW50PXBhcmVudCxldmFsKGNvZGVTdHJpbmcpfSxwPVN1Yldvcmtlci5wcm90b3R5cGU7cC5vbm1lc3NhZ2U9bnVsbCxwLl93UGFyZW50PW51bGwscC5wb3N0TWVzc2FnZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl93UGFyZW50O3NldFRpbWVvdXQoZS5vbm1lc3NhZ2UuYmluZChlLHtkYXRhOnR9KSwxKX07dmFyIEZhbGxiYWNrV29ya2VyPWZ1bmN0aW9uKHQpe3RoaXMuX3dDaGlsZD1uZXcgU3ViV29ya2VyKHQsdGhpcyl9O3A9RmFsbGJhY2tXb3JrZXIucHJvdG90eXBlLHAucG9zdE1lc3NhZ2U9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fd0NoaWxkO3NldFRpbWVvdXQoZS5vbm1lc3NhZ2UuYmluZChlLHtkYXRhOnR9KSwxKX0scC50ZXJtaW5hdGU9ZnVuY3Rpb24oKXt0aGlzLm9ubWVzc2FnZT1udWxsO3ZhciB0PXRoaXMuX3dDaGlsZDt0Ll93UGFyZW50PW51bGwsdC5vbm1lc3NhZ2U9bnVsbCx0aGlzLl93Q2hpbGQ9bnVsbH0scC5vbm1lc3NhZ2U9bnVsbCxwLl93Q2hpbGQ9bnVsbH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0LGUsaSxzKXtlW2ldP2Vbc109dDp0KCl9O3QuY3JlYXRlPWZ1bmN0aW9uKGUsaSxzLG4pe3JldHVybiB0LmJpbmQodGhpcyxlLGkscyxuKX0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLkNvbWJpbmVkQ2FsbGJhY2s9dH0oKSxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9MCxpPWZ1bmN0aW9uKGkscyxuLGEpe3RoaXMuX2NhbGxiYWNrPWksdGhpcy5fZGVsYXk9cyx0aGlzLl90aW1lcj1zLHRoaXMuX3JlcGVhdD0hIW4sdGhpcy5fYXV0b0Rlc3Ryb3k9YT09PXQ/ITA6ISFhLHRoaXMuX3VwZGF0ZUlkPSJEZWxheWVkQ2FsbCMiKyArK2UsdGhpcy5fcGF1c2VkPSExLHRoaXMuX3VwZGF0ZT10aGlzLl91cGRhdGUuYmluZCh0aGlzKSxjbG91ZGtpZC5PUy5pbnN0YW5jZS5hZGRVcGRhdGVDYWxsYmFjayh0aGlzLl91cGRhdGVJZCx0aGlzLl91cGRhdGUpfSxzPWkucHJvdG90eXBlO3MuX3VwZGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fY2FsbGJhY2s/KHRoaXMuX3RpbWVyLT10LHZvaWQodGhpcy5fdGltZXI8PTAmJih0aGlzLl9jYWxsYmFjaygpLHRoaXMuX3JlcGVhdD90aGlzLl90aW1lcis9dGhpcy5fZGVsYXk6dGhpcy5fYXV0b0Rlc3Ryb3k/dGhpcy5kZXN0cm95KCk6Y2xvdWRraWQuT1MuaW5zdGFuY2UucmVtb3ZlVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpKSkpOnZvaWQgdGhpcy5kZXN0cm95KCl9LHMucmVzdGFydD1mdW5jdGlvbigpe2lmKHRoaXMuX2NhbGxiYWNrKXt2YXIgdD1jbG91ZGtpZC5PUy5pbnN0YW5jZTt0LmFkZFVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkLHRoaXMuX3VwZGF0ZSksdGhpcy5fdGltZXI9dGhpcy5fZGVsYXksdGhpcy5fcGF1c2VkPSExfX0scy5zdG9wPWZ1bmN0aW9uKCl7Y2xvdWRraWQuT1MuaW5zdGFuY2UucmVtb3ZlVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpLHRoaXMuX3BhdXNlZD0hMX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsInBhdXNlZCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXVzZWR9LHNldDpmdW5jdGlvbih0KXtpZih0aGlzLl9jYWxsYmFjayl7dmFyIGU9Y2xvdWRraWQuT1MuaW5zdGFuY2U7dGhpcy5fcGF1c2VkJiYhdD8odGhpcy5fcGF1c2VkPSExLGUuaGFzVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpfHxlLmFkZFVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkLHRoaXMuX3VwZGF0ZSkpOnQmJmUuaGFzVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpJiYodGhpcy5fcGF1c2VkPSEwLGUucmVtb3ZlVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpKX19fSkscy5kZXN0cm95PWZ1bmN0aW9uKCl7Y2xvdWRraWQuT1MuaW5zdGFuY2UucmVtb3ZlVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQpLHRoaXMuX2NhbGxiYWNrPW51bGx9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5EZWxheWVkQ2FsbD1pfSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0LGU9ZnVuY3Rpb24oKXt0aGlzLmluaXRpYWxpemUoKX07dD1lLnByb3RvdHlwZT1uZXcgY3JlYXRlanMuQ29udGFpbmVyLHQuaW5pdD1mdW5jdGlvbigpe30sdC51cGRhdGU9ZnVuY3Rpb24oKXt9LHQuZGVzdHJveT1mdW5jdGlvbigpe30sdC5yZXNpemU9ZnVuY3Rpb24oKXt9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5BcHBsaWNhdGlvbj1lfSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKCl7fSxlPXQucHJvdG90eXBlO3QuUFJJT1JJVFlfSElHSD0xLHQuUFJJT1JJVFlfTk9STUFMPTAsdC5QUklPUklUWV9MT1c9LTEsZS51cmw9bnVsbCxlLmRhdGE9bnVsbCxlLmNhbGxiYWNrPW51bGwsZS5wcmlvcml0eT0wLGUucHJvZ3Jlc3M9MCxlLnVwZGF0ZUNhbGxiYWNrPW51bGwsZS5fYm91bmRGYWlsPW51bGwsZS5fYm91bmRQcm9ncmVzcz1udWxsLGUuX2JvdW5kQ29tcGxldGU9bnVsbCxlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIltMb2FkZXJRdWV1ZUl0ZW0odXJsOiciK3RoaXMudXJsKyInLCBwcmlvcml0eToiK3RoaXMucHJpb3JpdHkrIildIn0sZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5jYWxsYmFjaz1udWxsLHRoaXMudXBkYXRlQ2FsbGJhY2s9bnVsbCx0aGlzLmRhdGE9bnVsbCx0aGlzLl9ib3VuZEZhaWw9bnVsbCx0aGlzLl9ib3VuZFByb2dyZXNzPW51bGwsdGhpcy5fYm91bmRDb21wbGV0ZT1udWxsfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuTG9hZGVyUXVldWVJdGVtPXR9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24oKXt9LGU9dC5wcm90b3R5cGU7dC5faW5zdGFuY2U9bnVsbDt2YXIgcz1udWxsLG49bnVsbCxhPW51bGwscj1udWxsLG89bnVsbCxsPW51bGwsdT0wLGg9bnVsbDtlLl9jYW5Mb2FkPSEwLGUubWF4U2ltdWx0YW5lb3VzTG9hZHM9MixlLmNhY2hlTWFuYWdlcj1udWxsLHQuaW5pdD1mdW5jdGlvbigpe3JldHVybiB0Ll9pbnN0YW5jZXx8KHQuX2luc3RhbmNlPW5ldyB0LHQuX2luc3RhbmNlLl9pbml0aWFsaXplKCkpLHQuX2luc3RhbmNlfSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiaW5zdGFuY2UiLHtnZXQ6ZnVuY3Rpb24oKXtpZighdC5faW5zdGFuY2UpdGhyb3ciQ2FsbCBjbG91ZGtpZC5NZWRpYUxvYWRlci5pbml0KCkiO3JldHVybiB0Ll9pbnN0YW5jZX19KSxlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgZSxpLHUsYz10aGlzLnF1ZXVlO2lmKGMpe2ZvcihlPTAsaT1jLmxlbmd0aDtlPmU7KytlKWNbZV0uZGVzdHJveSgpO2ZvcihjPXIsZT0wLGk9Yy5sZW5ndGg7ZT5lOysrZSljW2VdLmRlc3Ryb3koKTtmb3IoYz1sLGU9MCxpPWMubGVuZ3RoO2U+ZTsrK2UpY1tlXS5kZXN0cm95KCk7Zm9yKHUgaW4gYSluW3VdLmRlc3Ryb3koKSxhW3VdLmNsb3NlKCl9dC5faW5zdGFuY2U9bnVsbCx0aGlzLmNhY2hlTWFuYWdlciYmdGhpcy5jYWNoZU1hbmFnZXIuZGVzdHJveSgpLHRoaXMuY2FjaGVNYW5hZ2VyPW51bGwscz1udWxsLGw9bnVsbCxvPW51bGwscj1udWxsLG49bnVsbCxoPW51bGwsYT1udWxsfSxlLl9pbml0aWFsaXplPWZ1bmN0aW9uKCl7cj1bXSxvPVtdLGw9W10scz1bXSxuPXt9LGE9e30saD17fSx0aGlzLmNhY2hlTWFuYWdlcj1uZXcgY2xvdWRraWQuQ2FjaGVNYW5hZ2VyfSxlLmxvYWQ9ZnVuY3Rpb24odCxlLGksbixhKXt2YXIgcj10aGlzLl9nZXRRSSgpLG89Y2xvdWRraWQuT1MuaW5zdGFuY2Uub3B0aW9ucy5iYXNlUGF0aDt2b2lkIDAhPT1vJiYvXmh0dHAocyk/XDovLnRlc3QodCk9PT0hMSYmLTE9PXQuc2VhcmNoKG8pJiYoci5iYXNlUGF0aD1vKSxyLnVybD10LHIuY2FsbGJhY2s9ZSxyLnVwZGF0ZUNhbGxiYWNrPWl8fG51bGwsci5wcmlvcml0eT1ufHxjbG91ZGtpZC5Mb2FkZXJRdWV1ZUl0ZW0uUFJJT1JJVFlfTk9STUFMLHIuZGF0YT1hfHxudWxsLHMucHVzaChyKSxzLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5wcmlvcml0eS1lLnByaW9yaXR5fSksdGhpcy5fdHJ5TmV4dExvYWQoKX0sZS5fb25Mb2FkRmFpbGVkPWZ1bmN0aW9uKHQsZSl7RGVidWcuZXJyb3IoIlVuYWJsZSB0byBsb2FkIGZpbGU6ICIrdC51cmwrIiAtIHJlYXNvbjogIitlLmVycm9yKTt2YXIgaT1hW3QudXJsXTtpLnJlbW92ZUFsbEV2ZW50TGlzdGVuZXJzKCksaS5jbG9zZSgpLHRoaXMuX3Bvb2xMb2FkZXIoaSksZGVsZXRlIG5bdC51cmxdLGRlbGV0ZSBhW3QudXJsXSxoW3QudXJsXT9oW3QudXJsXSsrOmhbdC51cmxdPTEsaFt0LnVybF0+Mz90aGlzLl9sb2FkRG9uZSh0LG51bGwpOih1LS0scy5wdXNoKHQpLHRoaXMuX3RyeU5leHRMb2FkKCkpfSxlLl9vbkxvYWRQcm9ncmVzcz1mdW5jdGlvbih0LGUpe3QucHJvZ3Jlc3M9ZS5wcm9ncmVzcyx0LnVwZGF0ZUNhbGxiYWNrJiZ0LnVwZGF0ZUNhbGxiYWNrKHQucHJvZ3Jlc3MpfSxlLl9vbkxvYWRDb21wbGV0ZWQ9ZnVuY3Rpb24odCxlKXt2YXIgaT1hW3QudXJsXTtpLnJlbW92ZUFsbEV2ZW50TGlzdGVuZXJzKCksaS5jbG9zZSgpLHRoaXMuX3Bvb2xMb2FkZXIoaSksZGVsZXRlIG5bdC51cmxdLGRlbGV0ZSBhW3QudXJsXSx0aGlzLl9sb2FkRG9uZSh0LHRoaXMuX2dldFJlc3VsdChlLnJlc3VsdCx0LnVybCxpKSl9LGUuX3RyeU5leHRMb2FkPWZ1bmN0aW9uKCl7aWYoISh1PnRoaXMubWF4U2ltdWx0YW5lb3VzTG9hZHMtMXx8MD09PXMubGVuZ3RoKSl7dSsrO3ZhciB0PXMuc2hpZnQoKTtuW3QudXJsXT10O3ZhciBlPXRoaXMuX2dldExvYWRlcih0LmJhc2VQYXRoKTthW3QudXJsXT1lLGUuYWRkRXZlbnRMaXN0ZW5lcigiZmlsZWxvYWQiLHQuX2JvdW5kQ29tcGxldGUpLGUuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLHQuX2JvdW5kRmFpbCksZS5hZGRFdmVudExpc3RlbmVyKCJmaWxlcHJvZ3Jlc3MiLHQuX2JvdW5kUHJvZ3Jlc3MpO3ZhciBpPXRoaXMuY2FjaGVNYW5hZ2VyLnByZXBhcmUodC51cmwpO2UubG9hZEZpbGUodC5kYXRhP3tpZDp0LmRhdGEuaWQsc3JjOmksZGF0YTp0LmRhdGF9OmkpfX0sZS5fbG9hZERvbmU9ZnVuY3Rpb24odCxlKXt1LS0sdC5kYXRhJiZlJiYoZS5pZD10LmRhdGEuaWQpLHQuY2FsbGJhY2soZSksdGhpcy5fcG9vbFFJKHQpLHRoaXMuX3RyeU5leHRMb2FkKCl9LGUuY2FuY2VsPWZ1bmN0aW9uKHQpe3ZhciBlPW5bdF0scj1hW3RdO2lmKGUmJnIpcmV0dXJuIHIuY2xvc2UoKSxkZWxldGUgYVt0XSxkZWxldGUgbltlLnVybF0sdS0tLHRoaXMuX3Bvb2xMb2FkZXIociksdGhpcy5fcG9vbFFJKGUpLCEwO2ZvcihpPTAsbGVuPXMubGVuZ3RoO2xlbj5pO2krKylpZihlPXNbaV0sZS51cmw9PXQpcmV0dXJuIHMuc3BsaWNlKGksMSksdGhpcy5fcG9vbFFJKGUpLCEwO3JldHVybiExfSxlLl9nZXRRST1mdW5jdGlvbigpe3ZhciB0O3JldHVybiByLmxlbmd0aD90PXIucG9wKCk6KHQ9bmV3IGNsb3Vka2lkLkxvYWRlclF1ZXVlSXRlbSx0Ll9ib3VuZEZhaWw9dGhpcy5fb25Mb2FkRmFpbGVkLmJpbmQodGhpcyx0KSx0Ll9ib3VuZFByb2dyZXNzPXRoaXMuX29uTG9hZFByb2dyZXNzLmJpbmQodGhpcyx0KSx0Ll9ib3VuZENvbXBsZXRlPXRoaXMuX29uTG9hZENvbXBsZXRlZC5iaW5kKHRoaXMsdCkpLHR9LGUuX3Bvb2xRST1mdW5jdGlvbih0KXtyLnB1c2godCksdC5jYWxsYmFjaz10LnVwZGF0ZUNhbGxiYWNrPXQuZGF0YT10LnVybD1udWxsLHQucHJvZ3Jlc3M9MH0sZS5fZ2V0TG9hZGVyPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBvLmxlbmd0aD8oZT1vLnBvcCgpLGUuX2Jhc2VQYXRoPXQpOmU9bmV3IGNyZWF0ZWpzLkxvYWRRdWV1ZSghMCx0KSxjcmVhdGVqcy5Tb3VuZCYmZS5pbnN0YWxsUGx1Z2luKGNyZWF0ZWpzLlNvdW5kKSxlfSxlLl9wb29sTG9hZGVyPWZ1bmN0aW9uKHQpe3QucmVtb3ZlQWxsKCksby5wdXNoKHQpfSxlLl9nZXRSZXN1bHQ9ZnVuY3Rpb24odCxlLGkpe3ZhciBzO3JldHVybiBsLmxlbmd0aD8ocz1sLnBvcCgpLHMuY29udGVudD10LHMudXJsPWUscy5sb2FkZXI9aSk6cz1uZXcgY2xvdWRraWQuTWVkaWFMb2FkZXJSZXN1bHQodCxlLGkpLHN9LGUuX3Bvb2xSZXN1bHQ9ZnVuY3Rpb24odCl7dC5jb250ZW50PXQudXJsPXQubG9hZGVyPXQuaWQ9bnVsbCxsLnB1c2godCl9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5NZWRpYUxvYWRlcj10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQsZSxpKXt0aGlzLmNvbnRlbnQ9dCx0aGlzLnVybD1lLHRoaXMubG9hZGVyPWl9LGU9dC5wcm90b3R5cGU7ZS5jb250ZW50PW51bGwsZS51cmw9bnVsbCxlLmxvYWRlcj1udWxsLGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iW01lZGlhTG9hZGVyUmVzdWx0KCciK3RoaXMudXJsKyInKV0ifSxlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLmNhbGxiYWNrPW51bGwsdGhpcy51cmw9bnVsbCx0aGlzLmNvbnRlbnQ9bnVsbH0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLk1lZGlhTG9hZGVyUmVzdWx0PXR9KCksZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPWZ1bmN0aW9uKCl7dGhpcy5pbml0aWFsaXplKCl9LGk9ZS5wcm90b3R5cGU9e307aS5fdmVyc2lvbnM9bnVsbCxpLmNhY2hlQnVzdD0hMSxpLmluaXRpYWxpemU9ZnVuY3Rpb24oKXt0aGlzLl92ZXJzaW9ucz1bXTt2YXIgdD1jbG91ZGtpZC5PUy5pbnN0YW5jZS5vcHRpb25zLmNhY2hlQnVzdDt0aGlzLmNhY2hlQnVzdD10PyJ0cnVlIj09PXR8fHQ9PT0hMDohMX0saS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5fdmVyc2lvbnM9bnVsbH0saS5hZGRWZXJzaW9uc0ZpbGU9ZnVuY3Rpb24odCxlLGkpe0RlYnVnLmFzc2VydCgvXi4qXC50eHQkLy50ZXN0KHQpLCJUaGUgdmVyc2lvbnMgZmlsZSBtdXN0IGJlIGEgKi50eHQgZmlsZSIpO3ZhciBzPWNsb3Vka2lkLk1lZGlhTG9hZGVyLmluc3RhbmNlO2lmKHRoaXMuY2FjaGVCdXN0KXJldHVybiB2b2lkKGUmJmUoKSk7dGhpcy5hZGRWZXJzaW9uKHQsTWF0aC5yb3VuZCgxZTUqTWF0aC5yYW5kb20oKSkpO3ZhciBuPXRoaXM7cy5sb2FkKHQsZnVuY3Rpb24odCl7aWYodCYmdC5jb250ZW50KXt2YXIgcyxhLHI9dC5jb250ZW50LnJlcGxhY2UoL1xyL2csIiIpLnNwbGl0KCJcbiIpO2ZvcihzPTA7czxyLmxlbmd0aDtzKyspcltzXSYmKGE9cltzXS5zcGxpdCgiICIpLDI9PWEubGVuZ3RoJiZuLmFkZFZlcnNpb24oKGl8fCIiKSthWzBdLGFbMV0pKX1lJiZlKCl9KX0saS5hZGRWZXJzaW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fZ2V0VmVyc2lvbkJ5VXJsKHQpO2l8fHRoaXMuX3ZlcnNpb25zLnB1c2goe3VybDp0LHZlcnNpb246ZX0pfSxpLl9nZXRWZXJzaW9uQnlVcmw9ZnVuY3Rpb24odCl7dmFyIGUsaT10aGlzLl92ZXJzaW9ucy5sZW5ndGg7Zm9yKGU9MDtpPmU7ZSsrKWlmKHQ9PXRoaXMuX3ZlcnNpb25zW2VdLnVybClyZXR1cm4gdGhpcy5fdmVyc2lvbnNbZV07cmV0dXJuIG51bGx9LGkucHJlcGFyZT1mdW5jdGlvbihlLGkpe3ZhciBzPXRoaXMuX2dldFZlcnNpb25CeVVybChlKTtpZih0aGlzLmNhY2hlQnVzdCYmLyhcP3xcJiljYlw9WzAtOV0qLy50ZXN0KGUpPT09ITE/KHRoaXMuX2NiVmFsfHwodGhpcy5fY2JWYWw9KG5ldyBEYXRlKS5nZXRUaW1lKCkudG9TdHJpbmcoKSksZT1lKyhlLmluZGV4T2YoIj8iKTwwPyI/IjoiJiIpKyJjYj0iK3RoaXMuX2NiVmFsKTpzJiYvKFw/fFwmKXZcPVswLTldKi8udGVzdChlKT09PSExJiYoZT1lKyhlLmluZGV4T2YoIj8iKTwwPyI/IjoiJiIpKyJ2PSIrcy52ZXJzaW9uKSxpKXt2YXIgbj1jbG91ZGtpZC5PUy5pbnN0YW5jZS5vcHRpb25zLmJhc2VQYXRoOy9eaHR0cChzKT9cOi8udGVzdChlKT09PSExJiZuIT09dCYmLTE9PWUuc2VhcmNoKG4pJiYoZT1uK2UpfXJldHVybiBlfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuQ2FjaGVNYW5hZ2VyPWV9KCksZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUodCl7aWYoIXR8fCJvYmplY3QiIT10eXBlb2YgdClyZXR1cm4gbnVsbDt2YXIgZT10LmNvbnN0cnVjdG9yKCk7Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmKGVbaV09dFtpXSk7cmV0dXJuIGV9dmFyIGk9ZnVuY3Rpb24odCxlLGkpe3QmJnRoaXMuaW5pdGlhbGl6ZSh0LGUsaSl9LHM9aS5wcm90b3R5cGU9bmV3IGNyZWF0ZWpzLkNvbnRhaW5lcixuPWNyZWF0ZWpzLkNvbnRhaW5lci5wcm90b3R5cGU7cy5iYWNrPW51bGwscy5sYWJlbD1udWxsLHMuX292ZXJDQj1udWxsLHMuX291dENCPW51bGwscy5fZG93bkNCPW51bGwscy5fdXBDQj1udWxsLHMuX2NsaWNrQ0I9bnVsbCxzLl9zdGF0ZUZsYWdzPW51bGwscy5fc3RhdGVQcmlvcml0eT1udWxsLHMuX3N0YXRlRGF0YT1udWxsLHMuX3dpZHRoPTAscy5faGVpZ2h0PTAscy5fb2Zmc2V0PW51bGwsaS5CVVRUT05fUFJFU1M9ImJ1dHRvblByZXNzIjt2YXIgYT1bImRpc2FibGVkIiwiZW5hYmxlZCIsInVwIiwib3ZlciIsImRvd24iXSxyPVsiZGlzYWJsZWQiLCJkb3duIiwib3ZlciIsInVwIl07cy5pbml0aWFsaXplPWZ1bmN0aW9uKGkscyxhKXtuLmluaXRpYWxpemUuY2FsbCh0aGlzKSx0aGlzLm1vdXNlQ2hpbGRyZW49ITEsdGhpcy5fZG93bkNCPXRoaXMuX29uTW91c2VEb3duLmJpbmQodGhpcyksdGhpcy5fdXBDQj10aGlzLl9vbk1vdXNlVXAuYmluZCh0aGlzKSx0aGlzLl9vdmVyQ0I9dGhpcy5fb25Nb3VzZU92ZXIuYmluZCh0aGlzKSx0aGlzLl9vdXRDQj10aGlzLl9vbk1vdXNlT3V0LmJpbmQodGhpcyksdGhpcy5fY2xpY2tDQj10aGlzLl9vbkNsaWNrLmJpbmQodGhpcyk7dmFyIG89dGhpcy5fc3RhdGVEYXRhPXt9O3RoaXMuX3N0YXRlRmxhZ3M9e30sdGhpcy5fb2Zmc2V0PW5ldyBjcmVhdGVqcy5Qb2ludDt2YXIgbDtzJiYobD1lKHMpLGRlbGV0ZSBsLnRleHQsbC54PT09dCYmKGwueD0iY2VudGVyIiksbC55PT09dCYmKGwueT0iY2VudGVyIikpO3ZhciB1LGgsYyxkLGc7aWYoaS5pbWFnZSl7Zm9yKHU9aS5pbWFnZSx0aGlzLl9zdGF0ZVByaW9yaXR5PWkucHJpb3JpdHl8fHIsZD10aGlzLl9zdGF0ZVByaW9yaXR5Lmxlbmd0aC0xO2Q+PTA7LS1kKXtnPXRoaXMuX3N0YXRlUHJpb3JpdHlbZF0sdGhpcy5fYWRkUHJvcGVydHkoZyksImRpc2FibGVkIiE9ZyYmInVwIiE9ZyYmKHRoaXMuX3N0YXRlRmxhZ3NbZ109ITEpO3ZhciBwPWlbZ107aWYob1tnXT1wP2UocCk6by51cCxzKWlmKHAmJnAubGFiZWwpe3A9cC5sYWJlbDt2YXIgXz1vW2ddLmxhYmVsPXt9O18uZm9udD1wLmZvbnR8fGwuZm9udCxfLmNvbG9yPXAuY29sb3J8fGwuY29sb3IsXy5zdHJva2U9cC5oYXNPd25Qcm9wZXJ0eSgic3Ryb2tlIik/cC5zdHJva2U6bC5zdHJva2UsXy5zaGFkb3c9cC5oYXNPd25Qcm9wZXJ0eSgic2hhZG93Iik/cC5zaGFkb3c6bC5zaGFkb3csXy50ZXh0QmFzZWxpbmU9cC50ZXh0QmFzZWxpbmV8fGwudGV4dEJhc2VsaW5lLF8ueD1wLnh8fGwueCxfLnk9cC55fHxsLnl9ZWxzZSBvW2ddLmxhYmVsPWx9aWYoby51cC50cmltKXt2YXIgZj1vLnVwLnRyaW07aD1mLndpZHRoLGM9Zi5oZWlnaHR9ZWxzZSBoPW8udXAuc3JjLndpZHRoLGM9by51cC5zcmMuaGVpZ2h0O28udXB8fChEZWJ1Zy5lcnJvcigiQnV0dG9uIGxhY2tzIGFuIHVwIHN0YXRlISBUaGlzIGlzIGEgc2VyaW91cyBwcm9ibGVtISBJbnB1dCBkYXRhIGZvbGxvd3M6IiksRGVidWcuZXJyb3IoaSkpLG8ub3Zlcnx8KG8ub3Zlcj1vLnVwKSxvLmRvd258fChvLmRvd249by51cCksby5kaXNhYmxlZHx8KG8uZGlzYWJsZWQ9by51cCksaS5vZmZzZXQ/KHRoaXMuX29mZnNldC54PWkub2Zmc2V0LngsdGhpcy5fb2Zmc2V0Lnk9aS5vZmZzZXQueSk6dGhpcy5fb2Zmc2V0Lng9dGhpcy5fb2Zmc2V0Lnk9MH1lbHNlIHU9aSxoPXUud2lkdGgsYz11LmhlaWdodC8zLHRoaXMuX3N0YXRlUHJpb3JpdHk9cixvLmRpc2FibGVkPW8udXA9e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsMCxoLGMpfSxvLm92ZXI9e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsYyxoLGMpfSxvLmRvd249e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsMipjLGgsYyl9LGwmJihvLnVwLmxhYmVsPW8ub3Zlci5sYWJlbD1vLmRvd24ubGFiZWw9by5kaXNhYmxlZC5sYWJlbD1sKSx0aGlzLl9vZmZzZXQueD10aGlzLl9vZmZzZXQueT0wO3RoaXMuYmFjaz1uZXcgY3JlYXRlanMuQml0bWFwKHUpLHRoaXMuYWRkQ2hpbGQodGhpcy5iYWNrKSx0aGlzLl93aWR0aD1oLHRoaXMuX2hlaWdodD1jLHMmJih0aGlzLmxhYmVsPW5ldyBjcmVhdGVqcy5UZXh0KHMudGV4dHx8IiIsby51cC5sYWJlbC5mb250LG8udXAubGFiZWwuY29sb3IpLHRoaXMuYWRkQ2hpbGQodGhpcy5sYWJlbCkpLHRoaXMuZW5hYmxlZD1hPT09dD8hMDohIWF9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzLCJ3aWR0aCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93aWR0aCp0aGlzLnNjYWxlWH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuc2NhbGVYPXQvdGhpcy5fd2lkdGh9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsImhlaWdodCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9oZWlnaHQqdGhpcy5zY2FsZVl9LHNldDpmdW5jdGlvbih0KXt0aGlzLnNjYWxlWT10L3RoaXMuX2hlaWdodH19KSxzLnNldFRleHQ9ZnVuY3Rpb24odCl7aWYodGhpcy5sYWJlbCl7dGhpcy5sYWJlbC50ZXh0PXQ7Zm9yKHZhciBlLGk9MDtpPHRoaXMuX3N0YXRlUHJpb3JpdHkubGVuZ3RoOysraSlpZih0aGlzLl9zdGF0ZUZsYWdzW3RoaXMuX3N0YXRlUHJpb3JpdHlbaV1dKXtlPXRoaXMuX3N0YXRlRGF0YVt0aGlzLl9zdGF0ZVByaW9yaXR5W2ldXTticmVha31lfHwoZT10aGlzLl9zdGF0ZURhdGEudXApLGU9ZS5sYWJlbCx0aGlzLmxhYmVsLng9ImNlbnRlciI9PWUueD8uNSoodGhpcy5fd2lkdGgtdGhpcy5sYWJlbC5nZXRNZWFzdXJlZFdpZHRoKCkpK3RoaXMuX29mZnNldC54OmUueCt0aGlzLl9vZmZzZXQueCx0aGlzLmxhYmVsLnk9ImNlbnRlciI9PWUueT8uNSp0aGlzLl9oZWlnaHQrdGhpcy5fb2Zmc2V0Lnk6ZS55K3RoaXMuX29mZnNldC55fX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHMsImVuYWJsZWQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5fc3RhdGVGbGFncy5kaXNhYmxlZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX3N0YXRlRmxhZ3MuZGlzYWJsZWQ9IXQsdD8odGhpcy5jdXJzb3I9InBvaW50ZXIiLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9kb3duQ0IpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIix0aGlzLl9vdmVyQ0IpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLHRoaXMuX291dENCKSk6KHRoaXMuY3Vyc29yPW51bGwsdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMuX2Rvd25DQiksdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLHRoaXMuX292ZXJDQiksdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsdGhpcy5fb3V0Q0IpLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdXBDQiksdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJjbGljayIsdGhpcy5fY2xpY2tDQiksdGhpcy5fc3RhdGVGbGFncy5kb3duPXRoaXMuX3N0YXRlRmxhZ3Mub3Zlcj0hMSksdGhpcy5fdXBkYXRlU3RhdGUoKX19KSxzLl9hZGRQcm9wZXJ0eT1mdW5jdGlvbih0KXthLmluZGV4T2YodCk+PTB8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLHQse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGF0ZUZsYWdzW3RdfSxzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5fc3RhdGVGbGFnc1t0XT1lLHRoaXMuX3VwZGF0ZVN0YXRlKCl9fSl9LHMuX3VwZGF0ZVN0YXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5iYWNrKXtmb3IodmFyIHQsZT0wO2U8dGhpcy5fc3RhdGVQcmlvcml0eS5sZW5ndGg7KytlKWlmKHRoaXMuX3N0YXRlRmxhZ3NbdGhpcy5fc3RhdGVQcmlvcml0eVtlXV0pe3Q9dGhpcy5fc3RhdGVEYXRhW3RoaXMuX3N0YXRlUHJpb3JpdHlbZV1dO2JyZWFrfXR8fCh0PXRoaXMuX3N0YXRlRGF0YS51cCksdGhpcy5iYWNrLnNvdXJjZVJlY3Q9dC5zcmMsdC50cmltPyh0aGlzLmJhY2sueD10LnRyaW0ueCt0aGlzLl9vZmZzZXQueCx0aGlzLmJhY2sueT10LnRyaW0ueSt0aGlzLl9vZmZzZXQueSk6KHRoaXMuYmFjay54PXRoaXMuX29mZnNldC54LHRoaXMuYmFjay55PXRoaXMuX29mZnNldC55KSx0aGlzLmxhYmVsJiYodD10LmxhYmVsLHRoaXMubGFiZWwudGV4dEJhc2VsaW5lPXQudGV4dEJhc2VsaW5lfHwibWlkZGxlIix0aGlzLmxhYmVsLnN0cm9rZT10LnN0cm9rZSx0aGlzLmxhYmVsLnNoYWRvdz10LnNoYWRvdyx0aGlzLmxhYmVsLmZvbnQ9dC5mb250LHRoaXMubGFiZWwuY29sb3I9dC5jb2xvcnx8IiMwMDAiLHRoaXMubGFiZWwueD0iY2VudGVyIj09dC54Py41Kih0aGlzLl93aWR0aC10aGlzLmxhYmVsLmdldE1lYXN1cmVkV2lkdGgoKSkrdGhpcy5fb2Zmc2V0Lng6dC54K3RoaXMuX29mZnNldC54LHRoaXMubGFiZWwueT0iY2VudGVyIj09dC55Py41KnRoaXMuX2hlaWdodCt0aGlzLl9vZmZzZXQueTp0LnkrdGhpcy5fb2Zmc2V0LnkpfX0scy5fb25Nb3VzZURvd249ZnVuY3Rpb24oKXt0aGlzLmFkZEV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3VwQ0IpLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuX2NsaWNrQ0IpLHRoaXMuX3N0YXRlRmxhZ3MuZG93bj0hMCx0aGlzLl91cGRhdGVTdGF0ZSgpfSxzLl9vbk1vdXNlVXA9ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3VwQ0IpLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuX2NsaWNrQ0IpLHRoaXMuX3N0YXRlRmxhZ3MuZG93bj0hMSx0aGlzLl91cGRhdGVTdGF0ZSgpfSxzLl9vbkNsaWNrPWZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBjcmVhdGVqcy5FdmVudChpLkJVVFRPTl9QUkVTUykpfSxzLl9vbk1vdXNlT3Zlcj1mdW5jdGlvbigpe3RoaXMuX3N0YXRlRmxhZ3Mub3Zlcj0hMCx0aGlzLl91cGRhdGVTdGF0ZSgpfSxzLl9vbk1vdXNlT3V0PWZ1bmN0aW9uKCl7dGhpcy5fc3RhdGVGbGFncy5vdmVyPSExLHRoaXMuX3VwZGF0ZVN0YXRlKCl9LHMuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMucmVtb3ZlQWxsQ2hpbGRyZW4oKSx0aGlzLnJlbW92ZUFsbEV2ZW50TGlzdGVuZXJzKCksdGhpcy5fZG93bkNCPW51bGwsdGhpcy5fdXBDQj1udWxsLHRoaXMuX292ZXJDQj1udWxsLHRoaXMuX291dENCPW51bGwsdGhpcy5iYWNrPW51bGwsdGhpcy5sYWJlbD1udWxsLHRoaXMuX3N0YXRlUHJpb3JpdHk9bnVsbCx0aGlzLl9zdGF0ZUZsYWdzPW51bGwsdGhpcy5fc3RhdGVEYXRhPW51bGx9LGkuZ2VuZXJhdGVEZWZhdWx0U3RhdGVzPWZ1bmN0aW9uKGUsaSxzKXt2YXIgbj1lLndpZHRoLGE9ZS5oZWlnaHQvMyxvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGw9bix1PWUuaGVpZ2h0O2kmJih1Kz1hKSxzJiYobCs9MipzLnNpemUsdSs9YSsyKnMuc2l6ZSksby53aWR0aD1sLG8uaGVpZ2h0PXU7dmFyIGg9by5nZXRDb250ZXh0KCIyZCIpO2guZHJhd0ltYWdlKGUsMCwwKTt2YXIgYz17aW1hZ2U6byx1cDp7c3JjOm5ldyBjcmVhdGVqcy5SZWN0YW5nbGUoMCwwLG4sYSl9LG92ZXI6e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsYSxuLGEpfSxkb3duOntzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLDIqYSxuLGEpfX0sZD1uZXcgY3JlYXRlanMuQml0bWFwKGUpO2Quc291cmNlUmVjdD1jLnVwLnNyYzt2YXIgZz1lLmhlaWdodDtpZihpKXtoLnNhdmUoKSxoLnRyYW5zbGF0ZSgwLGcpO3ZhciBwPW5ldyBjcmVhdGVqcy5Db2xvck1hdHJpeDtpLnNhdHVyYXRpb24hPT10JiZwLmFkanVzdFNhdHVyYXRpb24oaS5zYXR1cmF0aW9uKSxpLmJyaWdodG5lc3MhPT10JiZwLmFkanVzdEJyaWdodG5lc3MoMi41NSppLmJyaWdodG5lc3MpLGkuY29udHJhc3QhPT10JiZwLmFkanVzdENvbnRyYXN0KGkuY29udHJhc3QpLGQuZmlsdGVycz1bbmV3IGNyZWF0ZWpzLkNvbG9yTWF0cml4RmlsdGVyKHApXSxkLmNhY2hlKDAsMCxjLnVwLnNyYy53aWR0aCxjLnVwLnNyYy5oZWlnaHQpLGQuZHJhdyhoKSxjLmRpc2FibGVkPXtzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLGcsbiwwfGEpfSxnKz1hLGgucmVzdG9yZSgpfWlmKHMpe2guc2F2ZSgpO3ZhciBfPW4rMipzLnNpemUsZj1hKzIqcy5zaXplO2QuZmlsdGVycz1bbmV3IGNyZWF0ZWpzLkNvbG9yRmlsdGVyKDAsMCwwLDEscy5yZWQscy5ncmVlbixzLmJsdWUscy5hbHBoYSE9PXQ/LTI1NStzLmFscGhhOjApXSxkLnNjYWxlWD1fL24sZC5zY2FsZVk9Zi9hLGQueD0wLGQueT1nLGQuY2FjaGUoMCwwLF8sZiksZC51cGRhdGVDb250ZXh0KGgpLGQuZHJhdyhoKSxoLnJlc3RvcmUoKSxkLnNjYWxlWD1kLnNjYWxlWT0xLGQueD1zLnNpemUsZC55PWcrcy5zaXplLGQuZmlsdGVycz1udWxsLGQudW5jYWNoZSgpLGQudXBkYXRlQ29udGV4dChoKSxkLmRyYXcoaCk7dmFyIG09bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZShzLnNpemUscy5zaXplLF8sZik7Yy51cC50cmltPW0sYy5vdmVyLnRyaW09bSxjLmRvd24udHJpbT1tLGMuZGlzYWJsZWQmJihjLmRpc2FibGVkLnRyaW09bSksYy5oaWdobGlnaHRlZD17c3JjOm5ldyBjcmVhdGVqcy5SZWN0YW5nbGUoMCxnLDB8XywwfGYpfSxjLnByaW9yaXR5PXIuc2xpY2UoKSxjLnByaW9yaXR5LnVuc2hpZnQoImhpZ2hsaWdodGVkIiksYy5vZmZzZXQ9e3g6LXMuc2l6ZSx5Oi1zLnNpemV9fXJldHVybiBjfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuQnV0dG9uPWl9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxlKXt0aGlzLmluaXRpYWxpemUodCxlKX0sZT10LnByb3RvdHlwZT17fTtlLmRyYWdnZWRPYmo9bnVsbCxlLmRyYWdTdGFydFRocmVzaG9sZD0yMCxlLm1vdXNlRG93blN0YWdlUG9zPW51bGwsZS5tb3VzZURvd25PYmpQb3M9bnVsbCxlLmFsbG93U3RpY2t5Q2xpY2s9ITAsZS5pc1RvdWNoTW92ZT0hMSxlLmlzSGVsZERyYWc9ITEsZS5pc1N0aWNreUNsaWNrPSExLGUuc25hcFNldHRpbmdzPW51bGwsZS5fdGhlU3RhZ2U9bnVsbCxlLl9kcmFnT2Zmc2V0PW51bGwsZS5fZHJhZ1N0YXJ0Q2FsbGJhY2s9bnVsbCxlLl9kcmFnRW5kQ2FsbGJhY2s9bnVsbCxlLl90cmlnZ2VySGVsZERyYWdDYWxsYmFjaz1udWxsLGUuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrPW51bGwsZS5fc3RhZ2VNb3VzZVVwQ2FsbGJhY2s9bnVsbCxlLl9kcmFnZ2FibGVPYmplY3RzPW51bGwsZS5fdXBkYXRlQ2FsbGJhY2s9bnVsbCxlLl9oZWxwZXJQb2ludD1udWxsLGUuaW5pdGlhbGl6ZT1mdW5jdGlvbih0LGUpe3RoaXMuX3VwZGF0ZUNhbGxiYWNrPXRoaXMuX3VwZGF0ZU9ialBvc2l0aW9uLmJpbmQodGhpcyksdGhpcy5fdHJpZ2dlckhlbGREcmFnQ2FsbGJhY2s9dGhpcy5fdHJpZ2dlckhlbGREcmFnLmJpbmQodGhpcyksdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2s9dGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrLmJpbmQodGhpcyksdGhpcy5fc3RhZ2VNb3VzZVVwQ2FsbGJhY2s9dGhpcy5fc3RvcERyYWcuYmluZCh0aGlzKSx0aGlzLl90aGVTdGFnZT1jbG91ZGtpZC5PUy5pbnN0YW5jZS5zdGFnZSx0aGlzLl9kcmFnU3RhcnRDYWxsYmFjaz10LHRoaXMuX2RyYWdFbmRDYWxsYmFjaz1lLHRoaXMuX2RyYWdnYWJsZU9iamVjdHM9W10sdGhpcy5tb3VzZURvd25TdGFnZVBvcz17eDowLHk6MH0sdGhpcy5tb3VzZURvd25PYmpQb3M9e3g6MCx5OjB9fSxlLnN0YXJ0RHJhZz1mdW5jdGlvbih0LGUpe3RoaXMuX29iak1vdXNlRG93bihlLHQpfSxlLl9vYmpNb3VzZURvd249ZnVuY3Rpb24odCxlKXtudWxsPT09dGhpcy5kcmFnZ2VkT2JqJiYodGhpcy5kcmFnZ2VkT2JqPWUsY3JlYXRlanMuVHdlZW4ucmVtb3ZlVHdlZW5zKGUpLHRoaXMuX2RyYWdPZmZzZXQ9dGhpcy5kcmFnZ2VkT2JqLnBhcmVudC5nbG9iYWxUb0xvY2FsKHQ/dC5zdGFnZVg6MCx0P3Quc3RhZ2VZOjApLHRoaXMuX2RyYWdPZmZzZXQueC09ZS54LHRoaXMuX2RyYWdPZmZzZXQueS09ZS55LHRoaXMubW91c2VEb3duT2JqUG9zLng9ZS54LHRoaXMubW91c2VEb3duT2JqUG9zLnk9ZS55LHQ/KHRoaXMuX3RoZVN0YWdlLl9nZXRQb2ludGVyRGF0YSh0LnBvaW50ZXJJRCkudGFyZ2V0PWUsdGhpcy5hbGxvd1N0aWNreUNsaWNrJiYidG91Y2hzdGFydCIhPXQubmF0aXZlRXZlbnQudHlwZT8odGhpcy5tb3VzZURvd25TdGFnZVBvcy54PXQuc3RhZ2VYLHRoaXMubW91c2VEb3duU3RhZ2VQb3MueT10LnN0YWdlWSxlLmFkZEV2ZW50TGlzdGVuZXIoInByZXNzbW92ZSIsdGhpcy5fdHJpZ2dlckhlbGREcmFnQ2FsbGJhY2spLGUuYWRkRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2spKToodGhpcy5tb3VzZURvd25TdGFnZVBvcy54PXQuc3RhZ2VYLHRoaXMubW91c2VEb3duU3RhZ2VQb3MueT10LnN0YWdlWSx0aGlzLmlzVG91Y2hNb3ZlPSJ0b3VjaHN0YXJ0Ij09dC5uYXRpdmVFdmVudC50eXBlLHRoaXMuaXNIZWxkRHJhZz0hMCx0aGlzLl9zdGFydERyYWcoKSkpOih0aGlzLmlzSGVsZERyYWc9ITAsdGhpcy5fc3RhcnREcmFnKCkpKX0sZS5fdHJpZ2dlclN0aWNreUNsaWNrPWZ1bmN0aW9uKCl7dGhpcy5pc1N0aWNreUNsaWNrPSEwLHRoaXMuZHJhZ2dlZE9iai5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc21vdmUiLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrKSx0aGlzLmRyYWdnZWRPYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2spLHRoaXMuX3N0YXJ0RHJhZygpfSxlLl90cmlnZ2VySGVsZERyYWc9ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGFnZVgtdGhpcy5tb3VzZURvd25TdGFnZVBvcy54LGk9dC5zdGFnZVktdGhpcy5tb3VzZURvd25TdGFnZVBvcy55O2UqZStpKmk+PXRoaXMuZHJhZ1N0YXJ0VGhyZXNob2xkKnRoaXMuZHJhZ1N0YXJ0VGhyZXNob2xkJiYodGhpcy5pc0hlbGREcmFnPSEwLHRoaXMuZHJhZ2dlZE9iai5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc21vdmUiLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrKSx0aGlzLmRyYWdnZWRPYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2spLHRoaXMuX3N0YXJ0RHJhZygpKX0sZS5fc3RhcnREcmFnPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fdGhlU3RhZ2U7dC5yZW1vdmVFdmVudExpc3RlbmVyKCJzdGFnZW1vdXNlbW92ZSIsdGhpcy5fdXBkYXRlQ2FsbGJhY2spLHQuYWRkRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZW1vdmUiLHRoaXMuX3VwZGF0ZUNhbGxiYWNrKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoInN0YWdlbW91c2V1cCIsdGhpcy5fc3RhZ2VNb3VzZVVwQ2FsbGJhY2spLHQuYWRkRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZXVwIix0aGlzLl9zdGFnZU1vdXNlVXBDYWxsYmFjayksdGhpcy5fZHJhZ1N0YXJ0Q2FsbGJhY2sodGhpcy5kcmFnZ2VkT2JqKX0sZS5zdG9wRHJhZz1mdW5jdGlvbih0KXt0aGlzLl9zdG9wRHJhZyhudWxsLHQ9PT0hMCl9LGUuX3N0b3BEcmFnPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5kcmFnZ2VkT2JqO2kucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3Ntb3ZlIix0aGlzLl90cmlnZ2VySGVsZERyYWdDYWxsYmFjayksaS5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc3VwIix0aGlzLl90cmlnZ2VyU3RpY2t5Q2xpY2tDYWxsYmFjayksdGhpcy5fdGhlU3RhZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZW1vdmUiLHRoaXMuX3VwZGF0ZUNhbGxiYWNrKSx0aGlzLl90aGVTdGFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCJzdGFnZW1vdXNldXAiLHRoaXMuX3N0YWdlTW91c2VVcENhbGxiYWNrKSx0aGlzLmRyYWdnZWRPYmo9bnVsbCx0aGlzLmlzVG91Y2hNb3ZlPSExLHRoaXMuaXNTdGlja3lDbGljaz0hMSx0aGlzLmlzSGVsZE1vdmU9ITEsZSE9PSExJiZ0aGlzLl9kcmFnRW5kQ2FsbGJhY2soaSl9LGUuX3VwZGF0ZU9ialBvc2l0aW9uPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNUb3VjaE1vdmV8fHRoaXMuX3RoZVN0YWdlLm1vdXNlSW5Cb3VuZHMpe3ZhciBlPXRoaXMuZHJhZ2dlZE9iaixpPWUucGFyZW50Lmdsb2JhbFRvTG9jYWwodC5zdGFnZVgsdC5zdGFnZVksdGhpcy5faGVscGVyUG9pbnQpLG49ZS5fZHJhZ0JvdW5kcztpZihlLng9cyhpLngtdGhpcy5fZHJhZ09mZnNldC54LG4ueCxuLnJpZ2h0KSxlLnk9cyhpLnktdGhpcy5fZHJhZ09mZnNldC55LG4ueSxuLmJvdHRvbSksdGhpcy5zbmFwU2V0dGluZ3Mpc3dpdGNoKHRoaXMuc25hcFNldHRpbmdzLm1vZGUpe2Nhc2UicG9pbnRzIjp0aGlzLl9oYW5kbGVQb2ludFNuYXAoaSk7YnJlYWs7Y2FzZSJncmlkIjpicmVhaztjYXNlImxpbmUiOn19fSxlLl9oYW5kbGVQb2ludFNuYXA9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuc25hcFNldHRpbmdzLHM9ZS5kaXN0KmUuZGlzdCxuPWUucG9pbnRzLGE9dC54LXRoaXMuX2RyYWdPZmZzZXQueCxyPXQueS10aGlzLl9kcmFnT2Zmc2V0Lnksbz0tMSxsPW51bGwsdT1uLmxlbmd0aC0xO3U+PTA7LS11KXt2YXIgaD1uW3VdLGM9aShhLHIsaC54LGgueSk7cz49YyYmKG8+Y3x8LTE9PW8pJiYobz1jLGw9aCl9bCYmKHRoaXMuZHJhZ2dlZE9iai54PWwueCx0aGlzLmRyYWdnZWRPYmoueT1sLnkpfTt2YXIgaT1mdW5jdGlvbih0LGUsaSxzKXt2YXIgbj10LWksYT1lLXM7cmV0dXJuIG4qbithKmF9LHM9ZnVuY3Rpb24odCxlLGkpe3JldHVybiBlPnQ/ZTp0Pmk/aTp0fSxuPWZ1bmN0aW9uKCl7dGhpcy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWRvd24iLHRoaXMuX29uTW91c2VEb3duTGlzdGVuZXIpLHRoaXMuY3Vyc29yPSJwb2ludGVyIn0sYT1mdW5jdGlvbigpe3RoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9vbk1vdXNlRG93bkxpc3RlbmVyKSx0aGlzLmN1cnNvcj1udWxsfSxyPWZ1bmN0aW9uKHQpe3RoaXMuX2RyYWdNYW4uX29iak1vdXNlRG93bih0LHRoaXMpfTtlLmFkZE9iamVjdD1mdW5jdGlvbih0LGUpe2V8fChlPXt4OjAseTowLHdpZHRoOnRoaXMuX3RoZVN0YWdlLmNhbnZhcy53aWR0aCxoZWlnaHQ6dGhpcy5fdGhlU3RhZ2UuY2FudmFzLmhlaWdodH0pLGUucmlnaHQ9ZS54K2Uud2lkdGgsZS5ib3R0b209ZS55K2UuaGVpZ2h0LHQuX2RyYWdCb3VuZHM9ZSx0aGlzLl9kcmFnZ2FibGVPYmplY3RzLmluZGV4T2YodCk+PTB8fCh0LmVuYWJsZURyYWc9bix0LmRpc2FibGVEcmFnPWEsdC5fb25Nb3VzZURvd25MaXN0ZW5lcj1yLmJpbmQodCksdC5fZHJhZ01hbj10aGlzLHRoaXMuX2RyYWdnYWJsZU9iamVjdHMucHVzaCh0KSl9LGUucmVtb3ZlT2JqZWN0PWZ1bmN0aW9uKHQpe3QuZGlzYWJsZURyYWcoKSxkZWxldGUgdC5lbmFibGVEcmFnLGRlbGV0ZSB0LmRpc2FibGVEcmFnLGRlbGV0ZSB0Ll9vbk1vdXNlRG93bkxpc3RlbmVyLGRlbGV0ZSB0Ll9kcmFnTWFuLGRlbGV0ZSB0Ll9kcmFnQm91bmRzO3ZhciBlPXRoaXMuX2RyYWdnYWJsZU9iamVjdHMuaW5kZXhPZih0KTtlPj0wJiZ0aGlzLl9kcmFnZ2FibGVPYmplY3RzLnNwbGljZShlLDEpfSxlLmRlc3Ryb3k9ZnVuY3Rpb24oKXtudWxsIT09dGhpcy5kcmFnZ2VkT2JqJiYodGhpcy5kcmFnZ2VkT2JqLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzbW92ZSIsdGhpcy5fdHJpZ2dlckhlbGREcmFnQ2FsbGJhY2spLHRoaXMuZHJhZ2dlZE9iai5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc3VwIix0aGlzLl90cmlnZ2VyU3RpY2t5Q2xpY2tDYWxsYmFjayksdGhpcy5fdGhlU3RhZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZW1vdmUiLHRoaXMuX3VwZGF0ZUNhbGxiYWNrKSx0aGlzLmRyYWdnZWRPYmo9bnVsbCksdGhpcy5fdXBkYXRlQ2FsbGJhY2s9bnVsbCx0aGlzLl9kcmFnU3RhcnRDYWxsYmFjaz1udWxsLHRoaXMuX2RyYWdFbmRDYWxsYmFjaz1udWxsLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrPW51bGwsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2s9bnVsbCx0aGlzLl9zdGFnZU1vdXNlVXBDYWxsYmFjaz1udWxsLHRoaXMuX3RoZVN0YWdlPW51bGw7Zm9yKHZhciB0PXRoaXMuX2RyYWdnYWJsZU9iamVjdHMubGVuZ3RoLTE7dD49MDstLXQpe3ZhciBlPXRoaXMuX2RyYWdnYWJsZU9iamVjdHNbdF07ZS5kaXNhYmxlRHJhZygpLGRlbGV0ZSBlLmVuYWJsZURyYWcsZGVsZXRlIGUuZGlzYWJsZURyYWcsZGVsZXRlIGUuX29uTW91c2VEb3duTGlzdGVuZXIsZGVsZXRlIGUuX2RyYWdNYW4sZGVsZXRlIGUuX2RyYWdCb3VuZHN9dGhpcy5fZHJhZ2dhYmxlT2JqZWN0cz1udWxsLHRoaXMuX2hlbHBlclBvaW50PW51bGx9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5EcmFnTWFuYWdlcj10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKCl7fTt0LnByb3RvdHlwZT17fSx0LnBvc2l0aW9uSXRlbXM9ZnVuY3Rpb24oZSxpKXt2YXIgcyxuO2Zvcih2YXIgYSBpbiBpKXt2YXIgcj1lW2FdO2lmKHIpe3ZhciBvPWlbYV07aWYoci54PW8ueCxyLnk9by55LG49by5zY2FsZSxuJiYoci5zY2FsZVgqPW4ueCxyLnNjYWxlWSo9bi55KSxuPW8ucGl2b3QsbiYmKHIucmVnWD1uLngsci5yZWdZPW4ueSkscz1vLnJvdGF0aW9uLHMmJihyLnJvdGF0aW9uPXMpLG8uaGl0QXJlYSl7dmFyIGw9by5oaXRBcmVhO3IuaGl0U2hhcGU9dC5nZW5lcmF0ZUhpdEFyZWEobCl9fWVsc2UgRGVidWcuZXJyb3IoImNvdWxkIG5vdCBmaW5kIG9iamVjdCAnIithKyInIil9fSx0LmdlbmVyYXRlSGl0QXJlYT1mdW5jdGlvbih0LGkpe2l8fChpPTEpO3ZhciBzO2lmKHM9d2luZG93LmNyZWF0ZWpzLGUodCkpe2lmKDE9PWkpcmV0dXJuIG5ldyBzLlBvbHlnb24odCk7Zm9yKHZhciBuPVtdLGE9MCxyPXQubGVuZ3RoO3I+YTsrK2Epbi5wdXNoKG5ldyBzLlBvaW50KHRbYV0ueCppLHRbYV0ueSppKSk7cmV0dXJuIG5ldyBzLlBvbHlnb24obil9cmV0dXJuInJlY3QiIT10LnR5cGUmJnQudHlwZT8iZWxsaXBzZSI9PXQudHlwZT9uZXcgcy5FbGxpcHNlKCh0LngtLjUqdC53KSppLCh0LnktLjUqdC5oKSppLHQudyppLHQuaCppKToiY2lyY2xlIj09dC50eXBlP25ldyBzLkNpcmNsZSh0LngqaSx0LnkqaSx0LnIqaSk6InNlY3RvciI9PXQudHlwZT9uZXcgcy5TZWN0b3IodC54KmksdC55KmksdC5yKmksdC5zdGFydCx0LmVuZCk6bnVsbDpuZXcgcy5SZWN0YW5nbGUodC54KmksdC55KmksdC53KmksdC5oKmkpfTt2YXIgZT1mdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfTtuYW1lc3BhY2UoImNsb3Vka2lkIikuUG9zaXRpb25lcj10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQsZSxpKXt0aGlzLndpZHRoPXQsdGhpcy5oZWlnaHQ9ZSx0aGlzLnBwaT1pfTt0LnByb3RvdHlwZT17fSxuYW1lc3BhY2UoImNsb3Vka2lkIikuU2NyZWVuU2V0dGluZ3M9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdCxlPWZ1bmN0aW9uKGUsaSxzKXtzd2l0Y2godD1jbG91ZGtpZC5VSVNjYWxlcix0aGlzLl9pdGVtPWUsdGhpcy5fc2V0dGluZ3M9aSx0aGlzLl9kZXNpZ25lZFNjcmVlbj1zLHRoaXMub3JpZ1NjYWxlWD1lLnNjYWxlWCx0aGlzLm9yaWdTY2FsZVk9ZS5zY2FsZVksdGhpcy5vcmlnV2lkdGg9ZS53aWR0aCx0aGlzLm9yaWdCb3VuZHM9e3g6MCx5OjAsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHR9LHRoaXMub3JpZ0JvdW5kcy5yaWdodD10aGlzLm9yaWdCb3VuZHMueCt0aGlzLm9yaWdCb3VuZHMud2lkdGgsdGhpcy5vcmlnQm91bmRzLmJvdHRvbT10aGlzLm9yaWdCb3VuZHMueSt0aGlzLm9yaWdCb3VuZHMuaGVpZ2h0LGkudmVydEFsaWduKXtjYXNlIHQuQUxJR05fVE9QOnRoaXMub3JpZ01hcmdpblZlcnQ9ZS55K3RoaXMub3JpZ0JvdW5kcy55O2JyZWFrO2Nhc2UgdC5BTElHTl9DRU5URVI6dGhpcy5vcmlnTWFyZ2luVmVydD0uNSpzLmhlaWdodC1lLnk7YnJlYWs7Y2FzZSB0LkFMSUdOX0JPVFRPTTp0aGlzLm9yaWdNYXJnaW5WZXJ0PXMuaGVpZ2h0LShlLnkrdGhpcy5vcmlnQm91bmRzLmJvdHRvbSl9c3dpdGNoKGkuaG9yaUFsaWduKXtjYXNlIHQuQUxJR05fTEVGVDp0aGlzLm9yaWdNYXJnaW5Ib3JpPWUueCt0aGlzLm9yaWdCb3VuZHMueDticmVhaztjYXNlIHQuQUxJR05fQ0VOVEVSOnRoaXMub3JpZ01hcmdpbkhvcmk9LjUqcy53aWR0aC1lLng7YnJlYWs7Y2FzZSB0LkFMSUdOX1JJR0hUOnRoaXMub3JpZ01hcmdpbkhvcmk9cy53aWR0aC0oZS54K3RoaXMub3JpZ0JvdW5kcy5yaWdodCkKfX0saT1lLnByb3RvdHlwZT17fTtpLm9yaWdNYXJnaW5Ib3JpPTAsaS5vcmlnTWFyZ2luVmVydD0wLGkub3JpZ1dpZHRoPTAsaS5vcmlnU2NhbGVYPTAsaS5vcmlnU2NhbGVZPTAsaS5vcmlnQm91bmRzPW51bGwsaS5fc2V0dGluZ3M9bnVsbCxpLl9pdGVtPW51bGwsaS5fZGVzaWduZWRTY3JlZW49bnVsbCxpLnJlc2l6ZT1mdW5jdGlvbihlKXt2YXIgaT1lLmhlaWdodC90aGlzLl9kZXNpZ25lZFNjcmVlbi5oZWlnaHQscz1lLnBwaS90aGlzLl9kZXNpZ25lZFNjcmVlbi5wcGksbj0oZS53aWR0aC10aGlzLl9kZXNpZ25lZFNjcmVlbi53aWR0aCppKS8yLGE9aS9zO3RoaXMuX3NldHRpbmdzLm1pblNjYWxlJiZhPHRoaXMuX3NldHRpbmdzLm1pblNjYWxlP2E9dGhpcy5fc2V0dGluZ3MubWluU2NhbGU6dGhpcy5fc2V0dGluZ3MubWF4U2NhbGUmJmE+dGhpcy5fc2V0dGluZ3MubWF4U2NhbGUmJihhPXRoaXMuX3NldHRpbmdzLm1heFNjYWxlKSxhKj1zLHRoaXMuX2l0ZW0uc2NhbGVYPXRoaXMub3JpZ1NjYWxlWCphLHRoaXMuX2l0ZW0uc2NhbGVZPXRoaXMub3JpZ1NjYWxlWSphO3ZhciByO3N3aXRjaChyPXRoaXMub3JpZ01hcmdpblZlcnQqaSx0aGlzLl9zZXR0aW5ncy52ZXJ0QWxpZ24pe2Nhc2UgdC5BTElHTl9UT1A6dGhpcy5faXRlbS55PXItdGhpcy5vcmlnQm91bmRzLnkqYTticmVhaztjYXNlIHQuQUxJR05fQ0VOVEVSOnRoaXMuX2l0ZW0ueT0uNSplLmhlaWdodC1yO2JyZWFrO2Nhc2UgdC5BTElHTl9CT1RUT006dGhpcy5faXRlbS55PWUuaGVpZ2h0LXItdGhpcy5vcmlnQm91bmRzLmJvdHRvbSphfXN3aXRjaChyPXRoaXMub3JpZ01hcmdpbkhvcmkqaSx0aGlzLl9zZXR0aW5ncy5ob3JpQWxpZ24pe2Nhc2UgdC5BTElHTl9MRUZUOnRoaXMuX2l0ZW0ueD10aGlzLl9zZXR0aW5ncy50aXRsZVNhZmU/bityLXRoaXMub3JpZ0JvdW5kcy54KmE6ci10aGlzLm9yaWdCb3VuZHMueCphO2JyZWFrO2Nhc2UgdC5BTElHTl9DRU5URVI6dGhpcy5faXRlbS54PXRoaXMuX3NldHRpbmdzLmNlbnRlcmVkSG9yaXpvbnRhbGx5Py41KihlLndpZHRoLXRoaXMuX2l0ZW0ud2lkdGgpOi41KmUud2lkdGgtcjticmVhaztjYXNlIHQuQUxJR05fUklHSFQ6dGhpcy5faXRlbS54PXRoaXMuX3NldHRpbmdzLnRpdGxlU2FmZT9lLndpZHRoLW4tci10aGlzLm9yaWdCb3VuZHMucmlnaHQqYTplLndpZHRoLXItdGhpcy5vcmlnQm91bmRzLnJpZ2h0KmF9fSxpLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLm9yaWdCb3VuZHM9bnVsbCx0aGlzLl9pdGVtPW51bGwsdGhpcy5fc2V0dGluZ3M9bnVsbCx0aGlzLl9kZXNpZ25lZFNjcmVlbj1udWxsfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuVUlFbGVtZW50PWV9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24oKXt9LGU9dC5wcm90b3R5cGU9e307ZS52ZXJ0QWxpZ249bnVsbCxlLmhvcmlBbGlnbj1udWxsLGUudGl0bGVTYWZlPSExLGUubWF4U2NhbGU9MSxlLm1pblNjYWxlPTEsZS5jZW50ZXJlZEhvcml6b250YWxseT0hMSxuYW1lc3BhY2UoImNsb3Vka2lkIikuVUlFbGVtZW50U2V0dGluZ3M9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1jbG91ZGtpZC5VSUVsZW1lbnRTZXR0aW5ncyxlPWNsb3Vka2lkLlVJRWxlbWVudCxpPWNsb3Vka2lkLlNjcmVlblNldHRpbmdzLHM9ZnVuY3Rpb24odCxlLHMsbil7dGhpcy5fcGFyZW50PXQsdGhpcy5faXRlbXM9W10sdGhpcy5fZGVzaWduZWRTY3JlZW49bmV3IGkoZSxzLG4pfSxuPXMucHJvdG90eXBlPXt9LGE9bmV3IGkoMCwwLDApLHI9ITE7bi5fcGFyZW50PW51bGwsbi5fZGVzaWduZWRTY3JlZW49bnVsbCxuLl9pdGVtcz1udWxsLHMuQUxJR05fVE9QPSJ0b3AiLHMuQUxJR05fQk9UVE9NPSJib3R0b20iLHMuQUxJR05fTEVGVD0ibGVmdCIscy5BTElHTl9SSUdIVD0icmlnaHQiLHMuQUxJR05fQ0VOVEVSPSJjZW50ZXIiLHMuZnJvbUpTT049ZnVuY3Rpb24odCxlLGksbil7ImJvb2xlYW4iIT10eXBlb2YgbiYmKG49ITApO3ZhciBhLHIsbyxsLHUsaD1uZXcgcyh0LGUuZGVzaWduZWRXaWR0aCxlLmRlc2lnbmVkSGVpZ2h0LGUuZGVzaWduZWRQUEkpO2ZvcihyIGluIGkpYT1pW3JdLGEuYWxpZ24/KG89YS5hbGlnbi5zcGxpdCgiLSIpLGw9b1swXSx1PW9bMV0pOihsPUFMSUdOX0NFTlRFUix1PUFMSUdOX0NFTlRFUiksaC5hZGQodFtyXSxsLHUsYS50aXRsZVNhZmV8fCExLGEubWluU2NhbGV8fDAvMCxhLm1heFNjYWxlfHwwLzAsYS5jZW50ZXJlZEhvcml6b250YWxseXx8ITEpO3JldHVybiBoLnJlc2l6ZSgpLG4mJmguZGVzdHJveSgpLGh9LHMuaW5pdD1mdW5jdGlvbih0LGUsaSl7YS53aWR0aD10LGEuaGVpZ2h0PWUsYS5wcGk9aSxyPSEwfSxuLmdldFNjYWxlPWZ1bmN0aW9uKCl7cmV0dXJuIGEuaGVpZ2h0L3RoaXMuX2Rlc2lnbmVkU2NyZWVuLmhlaWdodH0sbi5hZGQ9ZnVuY3Rpb24oaSxuLGEscixvLGwsdSl7dmFyIGg9bmV3IHQ7aC52ZXJ0QWxpZ249bnx8cy5BTElHTl9DRU5URVIsaC5ob3JpQWxpZ249YXx8cy5BTElHTl9DRU5URVIsaC50aXRsZVNhZmU9ImJvb2xlYW4iIT10eXBlb2Ygcj8hMTpyLGgubWF4U2NhbGU9Im51bWJlciIhPXR5cGVvZiBsPzAvMDpsLGgubWluU2NhbGU9Im51bWJlciIhPXR5cGVvZiBvPzAvMDpvLGguY2VudGVyZWRIb3Jpem9udGFsbHk9dXx8ITEsdGhpcy5faXRlbXMucHVzaChuZXcgZShpLGgsdGhpcy5fZGVzaWduZWRTY3JlZW4pKX0scy5yZXNpemVCYWNrZ3JvdW5kPWZ1bmN0aW9uKHQpe2lmKHIpe3ZhciBlLGkscztlPXQuaW1hZ2UuaGVpZ2h0LGk9dC5pbWFnZS53aWR0aCxzPWEuaGVpZ2h0L2UsdC5zY2FsZVg9dC5zY2FsZVk9cyx0Lng9LjUqKGEud2lkdGgtaSpzKX19LHMucmVzaXplQmFja2dyb3VuZHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsaT10Lmxlbmd0aDtpPmU7KytlKXMucmVzaXplQmFja2dyb3VuZCh0W2VdKX0sbi5yZXNpemU9ZnVuY3Rpb24oKXtpZih0aGlzLl9pdGVtcy5sZW5ndGg+MClmb3IodmFyIHQ9MCxlPXRoaXMuX2l0ZW1zLmxlbmd0aDtlPnQ7Kyt0KXRoaXMuX2l0ZW1zW3RdLnJlc2l6ZShhKX0sbi5kZXN0cm95PWZ1bmN0aW9uKCl7aWYodGhpcy5faXRlbXMubGVuZ3RoPjApZm9yKHZhciB0PTAsZT10aGlzLl9pdGVtcy5sZW5ndGg7ZT50OysrdCl0aGlzLl9pdGVtc1t0XS5kZXN0cm95KCk7dGhpcy5fcGFyZW50PW51bGwsdGhpcy5fZGVzaWduZWRTY3JlZW49bnVsbCx0aGlzLl9pdGVtcz1udWxsfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuVUlTY2FsZXI9c30oKTs=",
                "body": "IWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKCl7fSxpPWUucHJvdG90eXBlPW5ldyBjcmVhdGVqcy5Db250YWluZXIscz0hMSxuPSExLGE9bnVsbCxyPTAsbz0wLGw9bnVsbCx1PTAsaD1udWxsLGM9bnVsbCxkPS0xLGc9ITEscD0wLF89MDtlLlZFUlNJT049IjEuMS4yNyIsaS5Db250YWluZXJfaW5pdGlhbGl6ZT1pLmluaXRpYWxpemUsaS5zdGFnZT1udWxsLGkuX2FwcD1udWxsLGkub3B0aW9ucz1udWxsLGkuX3VwZGF0ZUZ1bmN0aW9ucz17fSxlLmluaXQ9ZnVuY3Rpb24odCxpKXtyZXR1cm4gY3x8KGM9bmV3IGUsYy5pbml0aWFsaXplKHQsaSkpLGN9LGkuaW5pdGlhbGl6ZT1mdW5jdGlvbihlLGkpe3RoaXMuQ29udGFpbmVyX2luaXRpYWxpemUoKSx0aGlzLm9wdGlvbnM9aXx8e30sdGhpcy5vcHRpb25zLnBhcnNlUXVlcnlTdHJpbmchPT10JiYodGhpcy5vcHRpb25zPWsodGhpcy5vcHRpb25zKSksdGhpcy5vcHRpb25zLmRlYnVnIT09dCYmKERlYnVnLmVuYWJsZWQ9dGhpcy5vcHRpb25zLmRlYnVnPT09ITB8fCJ0cnVlIj09PXRoaXMub3B0aW9ucy5kZWJ1ZyksdGhpcy5vcHRpb25zLm1pbkxvZ0xldmVsIT09dCYmKERlYnVnLm1pbkxvZ0xldmVsPXBhcnNlSW50KHRoaXMub3B0aW9ucy5taW5Mb2dMZXZlbCwxMCkpLCJzdHJpbmciPT10eXBlb2YgdGhpcy5vcHRpb25zLmlwJiZEZWJ1Zy5jb25uZWN0KHRoaXMub3B0aW9ucy5pcCk7dmFyIHM9Y2xvdWRraWQuTWVkaWFMb2FkZXIuaW5pdCgpO3RoaXMuc3RhZ2U9bmV3IGNyZWF0ZWpzLlN0YWdlKGUpLHRoaXMuc3RhZ2UubmFtZT0iY2xvdWRraWQuT1MiLHRoaXMuc3RhZ2UuY2FudmFzLm9ubW91c2Vkb3duPWZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX07dmFyIHI9dGhpcy5vcHRpb25zLm1vdXNlT3ZlclJhdGU9dGhpcy5vcHRpb25zLm1vdXNlT3ZlclJhdGV8fDMwO3RoaXMuc3RhZ2UuZW5hYmxlTW91c2VPdmVyKHIpLHRoaXMuc3RhZ2UuYWRkQ2hpbGQodGhpcyksdGhpcy52aXNpYmxlTGlzdGVuZXI9dGhpcy5vbldpbmRvd1Zpc2liaWxpdHlDaGFuZ2VkLmJpbmQodGhpcyksdyh0aGlzLnZpc2libGVMaXN0ZW5lcik7dmFyIG89d2luZG93Lmhhc093blByb3BlcnR5KCJvbnRvdWNoc3RhcnQiKTsoLTE9PXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoIk1TSUUgMTAuMCIpfHxvKSYmY3JlYXRlanMuVG91Y2guZW5hYmxlKHRoaXMuc3RhZ2UpLHRoaXMuc3RhZ2UuYXV0b0NsZWFyPSEhdGhpcy5vcHRpb25zLmNsZWFyVmlld3x8ITEsdGhpcy5vcHRpb25zLnNob3dGcmFtZXJhdGUmJihhPW5ldyBjcmVhdGVqcy5UZXh0KCIiLCIxMHB4IEFyaWFsIiwiIzAwMCIpLGEuc3Ryb2tlPXt3aWR0aDoyLGNvbG9yOiIjZmZmZmZmIn0sYS54PWEueT01LHRoaXMuYWRkQ2hpbGQoYSkpLHRoaXMuc3RhZ2UudXBkYXRlKCk7aWYoaD10aGlzLnRpY2suYmluZCh0aGlzKSxnPXRoaXMub3B0aW9ucy5yYWZ8fCExLHRoaXMuZnBzPXRoaXMub3B0aW9ucy5mcHN8fDYwLHRoaXMucmVtb3ZlQXBwKCksdGhpcy5vcHRpb25zLnZlcnNpb25zRmlsZSE9PXQpe249ITE7dmFyIGw9dGhpcztzLmNhY2hlTWFuYWdlci5hZGRWZXJzaW9uc0ZpbGUodGhpcy5vcHRpb25zLnZlcnNpb25zRmlsZSxmdW5jdGlvbigpe249ITAsbC5fYXBwJiYobC5hZGRDaGlsZEF0KGwuX2FwcCwwKSxsLl9hcHAuaW5pdCgpLGwucmVzdW1lKCkpfSl9ZWxzZSBuPSEwfTt2YXIgZj1udWxsLG09bnVsbCxiPSJ2aXNpYmxlIix2PSJoaWRkZW4iLHc9ZnVuY3Rpb24odCl7Zj0iaGlkZGVuIixmIGluIGRvY3VtZW50P2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLHQpOihmPSJtb3pIaWRkZW4iKWluIGRvY3VtZW50P2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1venZpc2liaWxpdHljaGFuZ2UiLHQpOihmPSJ3ZWJraXRIaWRkZW4iKWluIGRvY3VtZW50P2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIndlYmtpdHZpc2liaWxpdHljaGFuZ2UiLHQpOihmPSJtc0hpZGRlbiIpaW4gZG9jdW1lbnQ/ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigibXN2aXNpYmlsaXR5Y2hhbmdlIix0KToib25mb2N1c2luImluIGRvY3VtZW50PyhtPXtmb2N1c2luOmIsZm9jdXNvdXQ6dn0sZG9jdW1lbnQub25mb2N1c2luPWRvY3VtZW50Lm9uZm9jdXNvdXQ9dCk6KG09e2ZvY3VzOmIscGFnZXNob3c6YixibHVyOnYscGFnZWhpZGU6dn0sd2luZG93Lm9ucGFnZXNob3c9d2luZG93Lm9ucGFnZWhpZGU9d2luZG93Lm9uZm9jdXM9d2luZG93Lm9uYmx1cj10KX0seT1mdW5jdGlvbih0KXt2YXIgZT0iaGlkZGVuIjtlIGluIGRvY3VtZW50P2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLHQpOihlPSJtb3pIaWRkZW4iKWluIGRvY3VtZW50P2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1venZpc2liaWxpdHljaGFuZ2UiLHQpOihlPSJ3ZWJraXRIaWRkZW4iKWluIGRvY3VtZW50P2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIndlYmtpdHZpc2liaWxpdHljaGFuZ2UiLHQpOihlPSJtc0hpZGRlbiIpaW4gZG9jdW1lbnQmJmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1zdmlzaWJpbGl0eWNoYW5nZSIsdCksZG9jdW1lbnQub25mb2N1c2luPWRvY3VtZW50Lm9uZm9jdXNvdXQ9bnVsbCx3aW5kb3cub25wYWdlc2hvdz13aW5kb3cub25wYWdlaGlkZT13aW5kb3cub25mb2N1cz13aW5kb3cub25ibHVyPW51bGx9O2kub25XaW5kb3dWaXNpYmlsaXR5Q2hhbmdlZD1mdW5jdGlvbih0KXt2YXIgZT0idmlzaWJsZSIsaT0iaGlkZGVuIjt0PXR8fHdpbmRvdy5ldmVudDt2YXIgcztzPW0/bVt0LnR5cGVdOmRvY3VtZW50W2ZdP2k6ZSxzPT1pP3RoaXMucGF1c2UoKTp0aGlzLnJlc3VtZSgpfTt2YXIgaz1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cubG9jYXRpb24uaHJlZixpPWUuaW5kZXhPZigiPyIpO2lmKC0xPT1pKXJldHVybiB0O3ZhciBzPTA+aT8iIjplLnN1YnN0cihpKzEpLG49cy5pbmRleE9mKCIjIik7cz0wPm4/czpzLnN1YnN0cmluZygwLG4pO2Zvcih2YXIgYSxyPXMuc3BsaXQoIiYiKSxvPTA7bzxyLmxlbmd0aDtvKyspYT1yW29dLnNwbGl0KCI9IiksdFthWzBdXT1hWzFdO3JldHVybiB0fTtpLnBhdXNlPWZ1bmN0aW9uKCl7LTEhPWQmJihnP3dpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSYmY2FuY2VsQW5pbWF0aW9uRnJhbWUoZCk6Y2xlYXJUaW1lb3V0KGQpLGQ9LTEpLHM9ITB9O3ZhciBTPXdpbmRvdy5wZXJmb3JtYW5jZSYmKHBlcmZvcm1hbmNlLm5vd3x8cGVyZm9ybWFuY2UubW96Tm93fHxwZXJmb3JtYW5jZS5tc05vd3x8cGVyZm9ybWFuY2Uub05vd3x8cGVyZm9ybWFuY2Uud2Via2l0Tm93KTtTPVM/Uy5iaW5kKHBlcmZvcm1hbmNlKTpmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfSxpLmdldFRpbWU9ZnVuY3Rpb24oKXtyZXR1cm4gUygpfSxpLnJlc3VtZT1mdW5jdGlvbigpe3M9ITEsLTE9PWQmJihkPWc/cmVxdWVzdEFuaW1GcmFtZShoKTpDKGgpKSxvPXI9dGhpcy5nZXRUaW1lKCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLCJmcHMiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcH0sc2V0OmZ1bmN0aW9uKHQpeyJudW1iZXIiPT10eXBlb2YgdCYmKHA9dCxfPTFlMy9wfDApfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLCJzdGFnZVdpZHRoIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGMuc3RhZ2UuY2FudmFzLndpZHRofX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLCJzdGFnZUhlaWdodCIse2dldDpmdW5jdGlvbigpe3JldHVybiBjLnN0YWdlLmNhbnZhcy5oZWlnaHR9fSk7dmFyIEM9ZnVuY3Rpb24odCxlKXt2YXIgaT0wO3JldHVybiBlJiYoaT1NYXRoLm1heCgwLF8tZSkpLHNldFRpbWVvdXQodCxpKX07aS5yZW1vdmVBcHA9ZnVuY3Rpb24odCl7dmFyIGU9ITEsaT10aGlzLnN0YWdlO3JldHVybiB0aGlzLl9hcHAmJih0aGlzLmNvbnRhaW5zKHRoaXMuX2FwcCkmJnRoaXMucmVtb3ZlQ2hpbGQodGhpcy5fYXBwKSxpLnJlbW92ZUFsbENoaWxkcmVuKCksdGhpcy5fYXBwLmRlc3Ryb3koKSxlPSEwKSx0aGlzLl9hcHA9bnVsbCx0aGlzLnBhdXNlKCksdHx8KGkuYWRkQ2hpbGQodGhpcyksYSYmKGEudGV4dD0iRlBTOiAwLjAwMCIpLHI9bz1sPXU9MCx0aGlzLnN0YWdlLnVwZGF0ZSgpKSxlfSxpLmFkZEFwcD1mdW5jdGlvbih0KXtpZih0aGlzLnJlbW92ZUFwcCgpLCEodCBpbnN0YW5jZW9mIGNsb3Vka2lkLkFwcGxpY2F0aW9uKSl0aHJvdyBuZXcgRXJyb3IoIkNhbiBvbmx5IG9iamVjdHMgdGhhdCBpbmhlcml0IGNsb3Vka2lkLkFwcGxpY2F0aW9uIik7dGhpcy5fYXBwPXQsbiYmKHRoaXMuYWRkQ2hpbGRBdCh0LDApLHRoaXMuX2FwcC5pbml0KCksdGhpcy5yZXN1bWUoKSl9LGkuZ2V0QXBwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FwcH0saS5hZGRVcGRhdGVDYWxsYmFjaz1mdW5jdGlvbihlLGkpe3RoaXMuX3VwZGF0ZUZ1bmN0aW9uc1tlXT09PXQmJih0aGlzLl91cGRhdGVGdW5jdGlvbnNbZV09aSl9LGkucmVtb3ZlVXBkYXRlQ2FsbGJhY2s9ZnVuY3Rpb24oZSl7dGhpcy5fdXBkYXRlRnVuY3Rpb25zW2VdIT09dCYmZGVsZXRlIHRoaXMuX3VwZGF0ZUZ1bmN0aW9uc1tlXX0saS50aWNrPWZ1bmN0aW9uKCl7aWYocylyZXR1cm4gdm9pZChkPS0xKTt2YXIgdD10aGlzLmdldFRpbWUoKSxlPXQtcjtpZihhJiZhLnZpc2libGUpe3UrKzt2YXIgaT10LW87aT4xZTMmJihsPTFlMy9pKnUsYS50ZXh0PSJGUFM6ICIrTWF0aC5yb3VuZCgxZTMqbCkvMWUzLG89dCx1PTApfXI9dCx0aGlzLl9hcHAmJnRoaXMuX2FwcC51cGRhdGUoZSk7Zm9yKHZhciBuIGluIHRoaXMuX3VwZGF0ZUZ1bmN0aW9ucyl0aGlzLl91cGRhdGVGdW5jdGlvbnNbbl0oZSk7dGhpcy5zdGFnZS51cGRhdGUoZSksZD1nP3JlcXVlc3RBbmltRnJhbWUoaCk6QyhoLHRoaXMuZ2V0VGltZSgpLXIpfSxpLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnN0YWdlLGU9Y2xvdWRraWQuTWVkaWFMb2FkZXIuaW5zdGFuY2U7dGhpcy5wYXVzZSgpLHRoaXMucmVtb3ZlQXBwKCEwKSxjPW51bGwsY3JlYXRlanMuVG91Y2guZGlzYWJsZSh0KSx0LmVuYWJsZU1vdXNlT3ZlcigtMSksdC5lbmFibGVET01FdmVudHMoITEpLGUuZGVzdHJveSgpLHRoaXMuc3RhZ2U9bnVsbCx0aGlzLl91cGRhdGVGdW5jdGlvbnM9bnVsbCx5KHRoaXMudmlzaWJsZUxpc3RlbmVyKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsImluc3RhbmNlIix7Z2V0OmZ1bmN0aW9uKCl7aWYoIWMpdGhyb3ciQ2FsbCBjbG91ZGtpZC5PUy5pbml0KGNhbnZhc0lkKSI7cmV0dXJuIGN9fSksbmFtZXNwYWNlKCJjbG91ZGtpZCIpLk9TPWV9KCksZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXt9O0Z1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoZS5iaW5kPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgbmV3IFR5cGVFcnJvcjt2YXIgaT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSkscz1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBzKXt2YXIgbj1mdW5jdGlvbigpe307bi5wcm90b3R5cGU9ZS5wcm90b3R5cGU7dmFyIGE9bmV3IG4scj1lLmFwcGx5KGEsaS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpO3JldHVybiBPYmplY3Qocik9PT1yP3I6YX1yZXR1cm4gZS5hcHBseSh0LGkuY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpKX07cmV0dXJuIHN9KTtmb3IodmFyIGk9MCxzPVsibXMiLCJtb3oiLCJ3ZWJraXQiLCJvIl0sbj0wO248cy5sZW5ndGgmJiF0LnJlcXVlc3RBbmltYXRpb25GcmFtZTsrK24pdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9dFtzW25dKyJSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiXSx0LmNhbmNlbEFuaW1hdGlvbkZyYW1lPXRbc1tuXSsiQ2FuY2VsQW5pbWF0aW9uRnJhbWUiXXx8dFtzW25dKyJDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiXTt0LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8KHQucmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKGUpe3ZhciBzPShuZXcgRGF0ZSkuZ2V0VGltZSgpLG49TWF0aC5tYXgoMCwxNi0ocy1pKSksYT10LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKHMrbil9LG4pO3JldHVybiBpPXMrbixhfSx0LmNhbmNlbEFuaW1hdGlvbkZyYW1lfHwodC5jYW5jZWxBbmltYXRpb25GcmFtZT1mdW5jdGlvbih0KXtjbGVhclRpbWVvdXQodCl9KSksZS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU9dC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsdC5yZXF1ZXN0QW5pbUZyYW1lPXQucmVxdWVzdEFuaW1hdGlvbkZyYW1lLGUuY2FuY2VsQW5pbWF0aW9uRnJhbWU9dC5jYW5jZWxBbmltYXRpb25GcmFtZSxuYW1lc3BhY2UoImNsb3Vka2lkIikuRnVuY3Rpb25VdGlscz1lfSh3aW5kb3cpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PXt9O3QubG9hZFNwcml0ZVNoZWV0PWZ1bmN0aW9uKHQsZSxpKXtpPjB8fChpPTEpO2Zvcih2YXIgcyBpbiB0KXt2YXIgbj10W3NdLGE9cy5pbmRleE9mKCIuIik7YT4wJiYocz1zLnN1YnN0cmluZygwLGEpKTt2YXIgcj1saWJbc10sbz1saWJbc109ZnVuY3Rpb24oKXtjcmVhdGVqcy5Db250YWluZXIuY2FsbCh0aGlzKTt2YXIgdD1uZXcgY3JlYXRlanMuQml0bWFwKHRoaXMuX2ltYWdlKTt0aGlzLmFkZENoaWxkKHQpLHQuc291cmNlUmVjdD10aGlzLl9mcmFtZVJlY3Q7dmFyIGU9dGhpcy5fc2NhbGU7dC5zZXRUcmFuc2Zvcm0odGhpcy5fZnJhbWVPZmZzZXRYKmUsdGhpcy5fZnJhbWVPZmZzZXRZKmUsZSxlKX0sbD1vLnByb3RvdHlwZT1uZXcgY3JlYXRlanMuQ29udGFpbmVyO2wuX2ltYWdlPWUsbC5fc2NhbGU9aTt2YXIgdT1uLmZyYW1lO2wuX2ZyYW1lUmVjdD1uZXcgY3JlYXRlanMuUmVjdGFuZ2xlKHUueCx1LnksdS53LHUuaCksbi50cmltbWVkPyhsLl9mcmFtZU9mZnNldFg9bi5zcHJpdGVTb3VyY2VTaXplLngsbC5fZnJhbWVPZmZzZXRZPW4uc3ByaXRlU291cmNlU2l6ZS55KTpsLl9mcmFtZU9mZnNldFg9bC5fZnJhbWVPZmZzZXRZPTAsbC5ub21pbmFsQm91bmRzPXImJnIucHJvdG90eXBlLm5vbWluYWxCb3VuZHM/ci5wcm90b3R5cGUubm9taW5hbEJvdW5kczpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsMCxuLnNvdXJjZVNpemUudyxuLnNvdXJjZVNpemUuaCl9fSx0LnJlcGxhY2VXaXRoU2NhbGVkQml0bWFwPWZ1bmN0aW9uKHQsZSl7aWYoMSE9ZSYmZT4wKXt2YXIgaSxzLG4sYTtpZigic3RyaW5nIj09dHlwZW9mIHQpaT10LHM9bGliW2ldLHMmJihuPWxpYltpXT1mdW5jdGlvbigpe2NyZWF0ZWpzLkNvbnRhaW5lci5jYWxsKHRoaXMpO3ZhciB0PW5ldyB0aGlzLl9vbGRCTTt0aGlzLmFkZENoaWxkKHQpLHQuc2V0VHJhbnNmb3JtKDAsMCx0aGlzLl9zY2FsZSx0aGlzLl9zY2FsZSl9LGE9bi5wcm90b3R5cGU9bmV3IGNyZWF0ZWpzLkNvbnRhaW5lcixhLl9vbGRCTT1zLGEuX3NjYWxlPWUsYS5ub21pbmFsQm91bmRzPXMucHJvdG90eXBlLm5vbWluYWxCb3VuZHMpO2Vsc2UgZm9yKGkgaW4gdClzPWxpYltpXSxzJiYobj1saWJbaV09ZnVuY3Rpb24oKXtjcmVhdGVqcy5Db250YWluZXIuY2FsbCh0aGlzKTt2YXIgdD1uZXcgdGhpcy5fb2xkQk07dGhpcy5hZGRDaGlsZCh0KSx0LnNldFRyYW5zZm9ybSgwLDAsdGhpcy5fc2NhbGUsdGhpcy5fc2NhbGUpfSxhPW4ucHJvdG90eXBlPW5ldyBjcmVhdGVqcy5Db250YWluZXIsYS5fb2xkQk09cyxhLl9zY2FsZT1lLGEubm9taW5hbEJvdW5kcz1zLnByb3RvdHlwZS5ub21pbmFsQm91bmRzKX19LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5CaXRtYXBVdGlscz10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PXt9LGU9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cuU3RvcmFnZSxpPS0xO2lmKGUpdHJ5e2xvY2FsU3RvcmFnZS5zZXRJdGVtKCJMU19URVNUIiwidGVzdCIpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCJMU19URVNUIil9Y2F0Y2gocyl7ZT0hMX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwidXNlV2ViU3RvcmFnZSIse2dldDpmdW5jdGlvbigpe3JldHVybiBlfSxzZXQ6ZnVuY3Rpb24odCl7aWYodCYmInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cuU3RvcmFnZSl0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0oIkxTX1RFU1QiLCJ0ZXN0IiksbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oIkxTX1RFU1QiKSxlPSEwfWNhdGNoKGkpe2U9ITF9ZWxzZSBlPSExfX0pLHQucmVtb3ZlPWZ1bmN0aW9uKHMpe2U/KGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHMpLHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0ocykpOnQud3JpdGUocywiIixpKX0sdC53cml0ZT1mdW5jdGlvbih0LHMsbil7aWYoZSluP3Nlc3Npb25TdG9yYWdlLnNldEl0ZW0odCxKU09OLnN0cmluZ2lmeShzKSk6bG9jYWxTdG9yYWdlLnNldEl0ZW0odCxKU09OLnN0cmluZ2lmeShzKSk7ZWxzZXt2YXIgYTthPW4/biE9PWk/IiI6IjsgZXhwaXJlcz1UaHUsIDAxIEphbiAxOTcwIDAwOjAwOjAwIEdNVCI6IjsgZXhwaXJlcz0iK25ldyBEYXRlKDIxNDc0ODM2NDZlMykudG9HTVRTdHJpbmcoKSxkb2N1bWVudC5jb29raWU9dCsiPSIrZXNjYXBlKEpTT04uc3RyaW5naWZ5KHMpKSthKyI7IHBhdGg9LyJ9fSx0LnJlYWQ9ZnVuY3Rpb24odCl7aWYoZSl7dmFyIGk9bG9jYWxTdG9yYWdlLmdldEl0ZW0odCl8fHNlc3Npb25TdG9yYWdlLmdldEl0ZW0odCk7cmV0dXJuIGk/SlNPTi5wYXJzZShpKTpudWxsfXZhciBzLG49dCsiPSIsYT1kb2N1bWVudC5jb29raWUuc3BsaXQoIjsiKSxyPTA7Zm9yKHI9MDtyPGEubGVuZ3RoO3IrKyl7Zm9yKHM9YVtyXTsiICI9PXMuY2hhckF0KDApOylzPXMuc3Vic3RyaW5nKDEscy5sZW5ndGgpO2lmKDA9PT1zLmluZGV4T2YobikpcmV0dXJuIEpTT04ucGFyc2UodW5lc2NhcGUocy5zdWJzdHJpbmcobi5sZW5ndGgscy5sZW5ndGgpKSl9cmV0dXJuIG51bGx9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5TYXZlZERhdGE9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt3aW5kb3cuVVJMPXdpbmRvdy5VUkx8fHdpbmRvdy53ZWJraXRVUkwsd2luZG93LkJsb2JCdWlsZGVyPXdpbmRvdy5CbG9iQnVpbGRlcnx8d2luZG93LldlYktpdEJsb2JCdWlsZGVyfHx3aW5kb3cuTW96QmxvYkJ1aWxkZXI7dmFyIFdvcmtlcj17fTtXb3JrZXIuaW5pdD1mdW5jdGlvbih0KXtpZighd2luZG93LlVSTHx8IXdpbmRvdy5Xb3JrZXIpcmV0dXJuIG5ldyBGYWxsYmFja1dvcmtlcih0KTt2YXIgZTt0cnl7ZT1uZXcgQmxvYihbdF0se3R5cGU6ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQifSl9Y2F0Y2goaSl7aWYoIXdpbmRvdy5CbG9iQnVpbGRlcilyZXR1cm4gbmV3IEZhbGxiYWNrV29ya2VyKHQpO3RyeXtlPW5ldyBCbG9iQnVpbGRlcixlLmFwcGVuZCh0KSxlPWUuZ2V0QmxvYigpfWNhdGNoKHMpe3JldHVybiBuZXcgRmFsbGJhY2tXb3JrZXIodCl9fWlmKCFlKXJldHVybiBuZXcgRmFsbGJhY2tXb3JrZXIodCk7dHJ5e3ZhciBuPW5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTChlKSk7cmV0dXJuIG59Y2F0Y2goaSl7cmV0dXJuIG5ldyBGYWxsYmFja1dvcmtlcih0KX19LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5jcmVhdGVXb3JrZXI9V29ya2VyLmluaXQsbmFtZXNwYWNlKCJjbG91ZGtpZCIpLldvcmtlcj1Xb3JrZXI7dmFyIFN1Yldvcmtlcj1mdW5jdGlvbihjb2RlU3RyaW5nLHBhcmVudCl7dGhpcy5fd1BhcmVudD1wYXJlbnQsZXZhbChjb2RlU3RyaW5nKX0scD1TdWJXb3JrZXIucHJvdG90eXBlO3Aub25tZXNzYWdlPW51bGwscC5fd1BhcmVudD1udWxsLHAucG9zdE1lc3NhZ2U9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fd1BhcmVudDtzZXRUaW1lb3V0KGUub25tZXNzYWdlLmJpbmQoZSx7ZGF0YTp0fSksMSl9O3ZhciBGYWxsYmFja1dvcmtlcj1mdW5jdGlvbih0KXt0aGlzLl93Q2hpbGQ9bmV3IFN1Yldvcmtlcih0LHRoaXMpfTtwPUZhbGxiYWNrV29ya2VyLnByb3RvdHlwZSxwLnBvc3RNZXNzYWdlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3dDaGlsZDtzZXRUaW1lb3V0KGUub25tZXNzYWdlLmJpbmQoZSx7ZGF0YTp0fSksMSl9LHAudGVybWluYXRlPWZ1bmN0aW9uKCl7dGhpcy5vbm1lc3NhZ2U9bnVsbDt2YXIgdD10aGlzLl93Q2hpbGQ7dC5fd1BhcmVudD1udWxsLHQub25tZXNzYWdlPW51bGwsdGhpcy5fd0NoaWxkPW51bGx9LHAub25tZXNzYWdlPW51bGwscC5fd0NoaWxkPW51bGx9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxlLGkscyl7ZVtpXT9lW3NdPXQ6dCgpfTt0LmNyZWF0ZT1mdW5jdGlvbihlLGkscyxuKXtyZXR1cm4gdC5iaW5kKHRoaXMsZSxpLHMsbil9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5Db21iaW5lZENhbGxiYWNrPXR9KCksZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPTAsaT1mdW5jdGlvbihpLHMsbixhKXt0aGlzLl9jYWxsYmFjaz1pLHRoaXMuX2RlbGF5PXMsdGhpcy5fdGltZXI9cyx0aGlzLl9yZXBlYXQ9ISFuLHRoaXMuX2F1dG9EZXN0cm95PWE9PT10PyEwOiEhYSx0aGlzLl91cGRhdGVJZD0iRGVsYXllZENhbGwjIisgKytlLHRoaXMuX3BhdXNlZD0hMSx0aGlzLl91cGRhdGU9dGhpcy5fdXBkYXRlLmJpbmQodGhpcyksY2xvdWRraWQuT1MuaW5zdGFuY2UuYWRkVXBkYXRlQ2FsbGJhY2sodGhpcy5fdXBkYXRlSWQsdGhpcy5fdXBkYXRlKX0scz1pLnByb3RvdHlwZTtzLl91cGRhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2NhbGxiYWNrPyh0aGlzLl90aW1lci09dCx2b2lkKHRoaXMuX3RpbWVyPD0wJiYodGhpcy5fY2FsbGJhY2soKSx0aGlzLl9yZXBlYXQ/dGhpcy5fdGltZXIrPXRoaXMuX2RlbGF5OnRoaXMuX2F1dG9EZXN0cm95P3RoaXMuZGVzdHJveSgpOmNsb3Vka2lkLk9TLmluc3RhbmNlLnJlbW92ZVVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKSkpKTp2b2lkIHRoaXMuZGVzdHJveSgpfSxzLnJlc3RhcnQ9ZnVuY3Rpb24oKXtpZih0aGlzLl9jYWxsYmFjayl7dmFyIHQ9Y2xvdWRraWQuT1MuaW5zdGFuY2U7dC5hZGRVcGRhdGVDYWxsYmFjayh0aGlzLl91cGRhdGVJZCx0aGlzLl91cGRhdGUpLHRoaXMuX3RpbWVyPXRoaXMuX2RlbGF5LHRoaXMuX3BhdXNlZD0hMX19LHMuc3RvcD1mdW5jdGlvbigpe2Nsb3Vka2lkLk9TLmluc3RhbmNlLnJlbW92ZVVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKSx0aGlzLl9wYXVzZWQ9ITF9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzLCJwYXVzZWQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGF1c2VkfSxzZXQ6ZnVuY3Rpb24odCl7aWYodGhpcy5fY2FsbGJhY2spe3ZhciBlPWNsb3Vka2lkLk9TLmluc3RhbmNlO3RoaXMuX3BhdXNlZCYmIXQ/KHRoaXMuX3BhdXNlZD0hMSxlLmhhc1VwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKXx8ZS5hZGRVcGRhdGVDYWxsYmFjayh0aGlzLl91cGRhdGVJZCx0aGlzLl91cGRhdGUpKTp0JiZlLmhhc1VwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKSYmKHRoaXMuX3BhdXNlZD0hMCxlLnJlbW92ZVVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKSl9fX0pLHMuZGVzdHJveT1mdW5jdGlvbigpe2Nsb3Vka2lkLk9TLmluc3RhbmNlLnJlbW92ZVVwZGF0ZUNhbGxiYWNrKHRoaXMuX3VwZGF0ZUlkKSx0aGlzLl9jYWxsYmFjaz1udWxsfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuRGVsYXllZENhbGw9aX0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdCxlPWZ1bmN0aW9uKCl7dGhpcy5pbml0aWFsaXplKCl9O3Q9ZS5wcm90b3R5cGU9bmV3IGNyZWF0ZWpzLkNvbnRhaW5lcix0LmluaXQ9ZnVuY3Rpb24oKXt9LHQudXBkYXRlPWZ1bmN0aW9uKCl7fSx0LmRlc3Ryb3k9ZnVuY3Rpb24oKXt9LHQucmVzaXplPWZ1bmN0aW9uKCl7fSxuYW1lc3BhY2UoImNsb3Vka2lkIikuQXBwbGljYXRpb249ZX0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbigpe30sZT10LnByb3RvdHlwZTt0LlBSSU9SSVRZX0hJR0g9MSx0LlBSSU9SSVRZX05PUk1BTD0wLHQuUFJJT1JJVFlfTE9XPS0xLGUudXJsPW51bGwsZS5kYXRhPW51bGwsZS5jYWxsYmFjaz1udWxsLGUucHJpb3JpdHk9MCxlLnByb2dyZXNzPTAsZS51cGRhdGVDYWxsYmFjaz1udWxsLGUuX2JvdW5kRmFpbD1udWxsLGUuX2JvdW5kUHJvZ3Jlc3M9bnVsbCxlLl9ib3VuZENvbXBsZXRlPW51bGwsZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJbTG9hZGVyUXVldWVJdGVtKHVybDonIit0aGlzLnVybCsiJywgcHJpb3JpdHk6Iit0aGlzLnByaW9yaXR5KyIpXSJ9LGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuY2FsbGJhY2s9bnVsbCx0aGlzLnVwZGF0ZUNhbGxiYWNrPW51bGwsdGhpcy5kYXRhPW51bGwsdGhpcy5fYm91bmRGYWlsPW51bGwsdGhpcy5fYm91bmRQcm9ncmVzcz1udWxsLHRoaXMuX2JvdW5kQ29tcGxldGU9bnVsbH0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLkxvYWRlclF1ZXVlSXRlbT10fSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKCl7fSxlPXQucHJvdG90eXBlO3QuX2luc3RhbmNlPW51bGw7dmFyIHM9bnVsbCxuPW51bGwsYT1udWxsLHI9bnVsbCxvPW51bGwsbD1udWxsLHU9MCxoPW51bGw7ZS5fY2FuTG9hZD0hMCxlLm1heFNpbXVsdGFuZW91c0xvYWRzPTIsZS5jYWNoZU1hbmFnZXI9bnVsbCx0LmluaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdC5faW5zdGFuY2V8fCh0Ll9pbnN0YW5jZT1uZXcgdCx0Ll9pbnN0YW5jZS5faW5pdGlhbGl6ZSgpKSx0Ll9pbnN0YW5jZX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsImluc3RhbmNlIix7Z2V0OmZ1bmN0aW9uKCl7aWYoIXQuX2luc3RhbmNlKXRocm93IkNhbGwgY2xvdWRraWQuTWVkaWFMb2FkZXIuaW5pdCgpIjtyZXR1cm4gdC5faW5zdGFuY2V9fSksZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGUsaSx1LGM9dGhpcy5xdWV1ZTtpZihjKXtmb3IoZT0wLGk9Yy5sZW5ndGg7ZT5lOysrZSljW2VdLmRlc3Ryb3koKTtmb3IoYz1yLGU9MCxpPWMubGVuZ3RoO2U+ZTsrK2UpY1tlXS5kZXN0cm95KCk7Zm9yKGM9bCxlPTAsaT1jLmxlbmd0aDtlPmU7KytlKWNbZV0uZGVzdHJveSgpO2Zvcih1IGluIGEpblt1XS5kZXN0cm95KCksYVt1XS5jbG9zZSgpfXQuX2luc3RhbmNlPW51bGwsdGhpcy5jYWNoZU1hbmFnZXImJnRoaXMuY2FjaGVNYW5hZ2VyLmRlc3Ryb3koKSx0aGlzLmNhY2hlTWFuYWdlcj1udWxsLHM9bnVsbCxsPW51bGwsbz1udWxsLHI9bnVsbCxuPW51bGwsaD1udWxsLGE9bnVsbH0sZS5faW5pdGlhbGl6ZT1mdW5jdGlvbigpe3I9W10sbz1bXSxsPVtdLHM9W10sbj17fSxhPXt9LGg9e30sdGhpcy5jYWNoZU1hbmFnZXI9bmV3IGNsb3Vka2lkLkNhY2hlTWFuYWdlcn0sZS5sb2FkPWZ1bmN0aW9uKHQsZSxpLG4sYSl7dmFyIHI9dGhpcy5fZ2V0UUkoKSxvPWNsb3Vka2lkLk9TLmluc3RhbmNlLm9wdGlvbnMuYmFzZVBhdGg7dm9pZCAwIT09byYmL15odHRwKHMpP1w6Ly50ZXN0KHQpPT09ITEmJi0xPT10LnNlYXJjaChvKSYmKHIuYmFzZVBhdGg9byksci51cmw9dCxyLmNhbGxiYWNrPWUsci51cGRhdGVDYWxsYmFjaz1pfHxudWxsLHIucHJpb3JpdHk9bnx8Y2xvdWRraWQuTG9hZGVyUXVldWVJdGVtLlBSSU9SSVRZX05PUk1BTCxyLmRhdGE9YXx8bnVsbCxzLnB1c2gocikscy5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQucHJpb3JpdHktZS5wcmlvcml0eX0pLHRoaXMuX3RyeU5leHRMb2FkKCl9LGUuX29uTG9hZEZhaWxlZD1mdW5jdGlvbih0LGUpe0RlYnVnLmVycm9yKCJVbmFibGUgdG8gbG9hZCBmaWxlOiAiK3QudXJsKyIgLSByZWFzb246ICIrZS5lcnJvcik7dmFyIGk9YVt0LnVybF07aS5yZW1vdmVBbGxFdmVudExpc3RlbmVycygpLGkuY2xvc2UoKSx0aGlzLl9wb29sTG9hZGVyKGkpLGRlbGV0ZSBuW3QudXJsXSxkZWxldGUgYVt0LnVybF0saFt0LnVybF0/aFt0LnVybF0rKzpoW3QudXJsXT0xLGhbdC51cmxdPjM/dGhpcy5fbG9hZERvbmUodCxudWxsKToodS0tLHMucHVzaCh0KSx0aGlzLl90cnlOZXh0TG9hZCgpKX0sZS5fb25Mb2FkUHJvZ3Jlc3M9ZnVuY3Rpb24odCxlKXt0LnByb2dyZXNzPWUucHJvZ3Jlc3MsdC51cGRhdGVDYWxsYmFjayYmdC51cGRhdGVDYWxsYmFjayh0LnByb2dyZXNzKX0sZS5fb25Mb2FkQ29tcGxldGVkPWZ1bmN0aW9uKHQsZSl7dmFyIGk9YVt0LnVybF07aS5yZW1vdmVBbGxFdmVudExpc3RlbmVycygpLGkuY2xvc2UoKSx0aGlzLl9wb29sTG9hZGVyKGkpLGRlbGV0ZSBuW3QudXJsXSxkZWxldGUgYVt0LnVybF0sdGhpcy5fbG9hZERvbmUodCx0aGlzLl9nZXRSZXN1bHQoZS5yZXN1bHQsdC51cmwsaSkpfSxlLl90cnlOZXh0TG9hZD1mdW5jdGlvbigpe2lmKCEodT50aGlzLm1heFNpbXVsdGFuZW91c0xvYWRzLTF8fDA9PT1zLmxlbmd0aCkpe3UrKzt2YXIgdD1zLnNoaWZ0KCk7blt0LnVybF09dDt2YXIgZT10aGlzLl9nZXRMb2FkZXIodC5iYXNlUGF0aCk7YVt0LnVybF09ZSxlLmFkZEV2ZW50TGlzdGVuZXIoImZpbGVsb2FkIix0Ll9ib3VuZENvbXBsZXRlKSxlLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIix0Ll9ib3VuZEZhaWwpLGUuYWRkRXZlbnRMaXN0ZW5lcigiZmlsZXByb2dyZXNzIix0Ll9ib3VuZFByb2dyZXNzKTt2YXIgaT10aGlzLmNhY2hlTWFuYWdlci5wcmVwYXJlKHQudXJsKTtlLmxvYWRGaWxlKHQuZGF0YT97aWQ6dC5kYXRhLmlkLHNyYzppLGRhdGE6dC5kYXRhfTppKX19LGUuX2xvYWREb25lPWZ1bmN0aW9uKHQsZSl7dS0tLHQuZGF0YSYmZSYmKGUuaWQ9dC5kYXRhLmlkKSx0LmNhbGxiYWNrKGUpLHRoaXMuX3Bvb2xRSSh0KSx0aGlzLl90cnlOZXh0TG9hZCgpfSxlLmNhbmNlbD1mdW5jdGlvbih0KXt2YXIgZT1uW3RdLHI9YVt0XTtpZihlJiZyKXJldHVybiByLmNsb3NlKCksZGVsZXRlIGFbdF0sZGVsZXRlIG5bZS51cmxdLHUtLSx0aGlzLl9wb29sTG9hZGVyKHIpLHRoaXMuX3Bvb2xRSShlKSwhMDtmb3IoaT0wLGxlbj1zLmxlbmd0aDtsZW4+aTtpKyspaWYoZT1zW2ldLGUudXJsPT10KXJldHVybiBzLnNwbGljZShpLDEpLHRoaXMuX3Bvb2xRSShlKSwhMDtyZXR1cm4hMX0sZS5fZ2V0UUk9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gci5sZW5ndGg/dD1yLnBvcCgpOih0PW5ldyBjbG91ZGtpZC5Mb2FkZXJRdWV1ZUl0ZW0sdC5fYm91bmRGYWlsPXRoaXMuX29uTG9hZEZhaWxlZC5iaW5kKHRoaXMsdCksdC5fYm91bmRQcm9ncmVzcz10aGlzLl9vbkxvYWRQcm9ncmVzcy5iaW5kKHRoaXMsdCksdC5fYm91bmRDb21wbGV0ZT10aGlzLl9vbkxvYWRDb21wbGV0ZWQuYmluZCh0aGlzLHQpKSx0fSxlLl9wb29sUUk9ZnVuY3Rpb24odCl7ci5wdXNoKHQpLHQuY2FsbGJhY2s9dC51cGRhdGVDYWxsYmFjaz10LmRhdGE9dC51cmw9bnVsbCx0LnByb2dyZXNzPTB9LGUuX2dldExvYWRlcj1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gby5sZW5ndGg/KGU9by5wb3AoKSxlLl9iYXNlUGF0aD10KTplPW5ldyBjcmVhdGVqcy5Mb2FkUXVldWUoITAsdCksY3JlYXRlanMuU291bmQmJmUuaW5zdGFsbFBsdWdpbihjcmVhdGVqcy5Tb3VuZCksZX0sZS5fcG9vbExvYWRlcj1mdW5jdGlvbih0KXt0LnJlbW92ZUFsbCgpLG8ucHVzaCh0KX0sZS5fZ2V0UmVzdWx0PWZ1bmN0aW9uKHQsZSxpKXt2YXIgcztyZXR1cm4gbC5sZW5ndGg/KHM9bC5wb3AoKSxzLmNvbnRlbnQ9dCxzLnVybD1lLHMubG9hZGVyPWkpOnM9bmV3IGNsb3Vka2lkLk1lZGlhTG9hZGVyUmVzdWx0KHQsZSxpKSxzfSxlLl9wb29sUmVzdWx0PWZ1bmN0aW9uKHQpe3QuY29udGVudD10LnVybD10LmxvYWRlcj10LmlkPW51bGwsbC5wdXNoKHQpfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuTWVkaWFMb2FkZXI9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0LGUsaSl7dGhpcy5jb250ZW50PXQsdGhpcy51cmw9ZSx0aGlzLmxvYWRlcj1pfSxlPXQucHJvdG90eXBlO2UuY29udGVudD1udWxsLGUudXJsPW51bGwsZS5sb2FkZXI9bnVsbCxlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIltNZWRpYUxvYWRlclJlc3VsdCgnIit0aGlzLnVybCsiJyldIn0sZS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5jYWxsYmFjaz1udWxsLHRoaXMudXJsPW51bGwsdGhpcy5jb250ZW50PW51bGx9LG5hbWVzcGFjZSgiY2xvdWRraWQiKS5NZWRpYUxvYWRlclJlc3VsdD10fSgpLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT1mdW5jdGlvbigpe3RoaXMuaW5pdGlhbGl6ZSgpfSxpPWUucHJvdG90eXBlPXt9O2kuX3ZlcnNpb25zPW51bGwsaS5jYWNoZUJ1c3Q9ITEsaS5pbml0aWFsaXplPWZ1bmN0aW9uKCl7dGhpcy5fdmVyc2lvbnM9W107dmFyIHQ9Y2xvdWRraWQuT1MuaW5zdGFuY2Uub3B0aW9ucy5jYWNoZUJ1c3Q7dGhpcy5jYWNoZUJ1c3Q9dD8idHJ1ZSI9PT10fHx0PT09ITA6ITF9LGkuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuX3ZlcnNpb25zPW51bGx9LGkuYWRkVmVyc2lvbnNGaWxlPWZ1bmN0aW9uKHQsZSxpKXtEZWJ1Zy5hc3NlcnQoL14uKlwudHh0JC8udGVzdCh0KSwiVGhlIHZlcnNpb25zIGZpbGUgbXVzdCBiZSBhICoudHh0IGZpbGUiKTt2YXIgcz1jbG91ZGtpZC5NZWRpYUxvYWRlci5pbnN0YW5jZTtpZih0aGlzLmNhY2hlQnVzdClyZXR1cm4gdm9pZChlJiZlKCkpO3RoaXMuYWRkVmVyc2lvbih0LE1hdGgucm91bmQoMWU1Kk1hdGgucmFuZG9tKCkpKTt2YXIgbj10aGlzO3MubG9hZCh0LGZ1bmN0aW9uKHQpe2lmKHQmJnQuY29udGVudCl7dmFyIHMsYSxyPXQuY29udGVudC5yZXBsYWNlKC9cci9nLCIiKS5zcGxpdCgiXG4iKTtmb3Iocz0wO3M8ci5sZW5ndGg7cysrKXJbc10mJihhPXJbc10uc3BsaXQoIiAiKSwyPT1hLmxlbmd0aCYmbi5hZGRWZXJzaW9uKChpfHwiIikrYVswXSxhWzFdKSl9ZSYmZSgpfSl9LGkuYWRkVmVyc2lvbj1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2dldFZlcnNpb25CeVVybCh0KTtpfHx0aGlzLl92ZXJzaW9ucy5wdXNoKHt1cmw6dCx2ZXJzaW9uOmV9KX0saS5fZ2V0VmVyc2lvbkJ5VXJsPWZ1bmN0aW9uKHQpe3ZhciBlLGk9dGhpcy5fdmVyc2lvbnMubGVuZ3RoO2ZvcihlPTA7aT5lO2UrKylpZih0PT10aGlzLl92ZXJzaW9uc1tlXS51cmwpcmV0dXJuIHRoaXMuX3ZlcnNpb25zW2VdO3JldHVybiBudWxsfSxpLnByZXBhcmU9ZnVuY3Rpb24oZSxpKXt2YXIgcz10aGlzLl9nZXRWZXJzaW9uQnlVcmwoZSk7aWYodGhpcy5jYWNoZUJ1c3QmJi8oXD98XCYpY2JcPVswLTldKi8udGVzdChlKT09PSExPyh0aGlzLl9jYlZhbHx8KHRoaXMuX2NiVmFsPShuZXcgRGF0ZSkuZ2V0VGltZSgpLnRvU3RyaW5nKCkpLGU9ZSsoZS5pbmRleE9mKCI/Iik8MD8iPyI6IiYiKSsiY2I9Iit0aGlzLl9jYlZhbCk6cyYmLyhcP3xcJil2XD1bMC05XSovLnRlc3QoZSk9PT0hMSYmKGU9ZSsoZS5pbmRleE9mKCI/Iik8MD8iPyI6IiYiKSsidj0iK3MudmVyc2lvbiksaSl7dmFyIG49Y2xvdWRraWQuT1MuaW5zdGFuY2Uub3B0aW9ucy5iYXNlUGF0aDsvXmh0dHAocyk/XDovLnRlc3QoZSk9PT0hMSYmbiE9PXQmJi0xPT1lLnNlYXJjaChuKSYmKGU9bitlKX1yZXR1cm4gZX0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLkNhY2hlTWFuYWdlcj1lfSgpLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQpe2lmKCF0fHwib2JqZWN0IiE9dHlwZW9mIHQpcmV0dXJuIG51bGw7dmFyIGU9dC5jb25zdHJ1Y3RvcigpO2Zvcih2YXIgaSBpbiB0KXQuaGFzT3duUHJvcGVydHkoaSkmJihlW2ldPXRbaV0pO3JldHVybiBlfXZhciBpPWZ1bmN0aW9uKHQsZSxpKXt0JiZ0aGlzLmluaXRpYWxpemUodCxlLGkpfSxzPWkucHJvdG90eXBlPW5ldyBjcmVhdGVqcy5Db250YWluZXIsbj1jcmVhdGVqcy5Db250YWluZXIucHJvdG90eXBlO3MuYmFjaz1udWxsLHMubGFiZWw9bnVsbCxzLl9vdmVyQ0I9bnVsbCxzLl9vdXRDQj1udWxsLHMuX2Rvd25DQj1udWxsLHMuX3VwQ0I9bnVsbCxzLl9jbGlja0NCPW51bGwscy5fc3RhdGVGbGFncz1udWxsLHMuX3N0YXRlUHJpb3JpdHk9bnVsbCxzLl9zdGF0ZURhdGE9bnVsbCxzLl93aWR0aD0wLHMuX2hlaWdodD0wLHMuX29mZnNldD1udWxsLGkuQlVUVE9OX1BSRVNTPSJidXR0b25QcmVzcyI7dmFyIGE9WyJkaXNhYmxlZCIsImVuYWJsZWQiLCJ1cCIsIm92ZXIiLCJkb3duIl0scj1bImRpc2FibGVkIiwiZG93biIsIm92ZXIiLCJ1cCJdO3MuaW5pdGlhbGl6ZT1mdW5jdGlvbihpLHMsYSl7bi5pbml0aWFsaXplLmNhbGwodGhpcyksdGhpcy5tb3VzZUNoaWxkcmVuPSExLHRoaXMuX2Rvd25DQj10aGlzLl9vbk1vdXNlRG93bi5iaW5kKHRoaXMpLHRoaXMuX3VwQ0I9dGhpcy5fb25Nb3VzZVVwLmJpbmQodGhpcyksdGhpcy5fb3ZlckNCPXRoaXMuX29uTW91c2VPdmVyLmJpbmQodGhpcyksdGhpcy5fb3V0Q0I9dGhpcy5fb25Nb3VzZU91dC5iaW5kKHRoaXMpLHRoaXMuX2NsaWNrQ0I9dGhpcy5fb25DbGljay5iaW5kKHRoaXMpO3ZhciBvPXRoaXMuX3N0YXRlRGF0YT17fTt0aGlzLl9zdGF0ZUZsYWdzPXt9LHRoaXMuX29mZnNldD1uZXcgY3JlYXRlanMuUG9pbnQ7dmFyIGw7cyYmKGw9ZShzKSxkZWxldGUgbC50ZXh0LGwueD09PXQmJihsLng9ImNlbnRlciIpLGwueT09PXQmJihsLnk9ImNlbnRlciIpKTt2YXIgdSxoLGMsZCxnO2lmKGkuaW1hZ2Upe2Zvcih1PWkuaW1hZ2UsdGhpcy5fc3RhdGVQcmlvcml0eT1pLnByaW9yaXR5fHxyLGQ9dGhpcy5fc3RhdGVQcmlvcml0eS5sZW5ndGgtMTtkPj0wOy0tZCl7Zz10aGlzLl9zdGF0ZVByaW9yaXR5W2RdLHRoaXMuX2FkZFByb3BlcnR5KGcpLCJkaXNhYmxlZCIhPWcmJiJ1cCIhPWcmJih0aGlzLl9zdGF0ZUZsYWdzW2ddPSExKTt2YXIgcD1pW2ddO2lmKG9bZ109cD9lKHApOm8udXAscylpZihwJiZwLmxhYmVsKXtwPXAubGFiZWw7dmFyIF89b1tnXS5sYWJlbD17fTtfLmZvbnQ9cC5mb250fHxsLmZvbnQsXy5jb2xvcj1wLmNvbG9yfHxsLmNvbG9yLF8uc3Ryb2tlPXAuaGFzT3duUHJvcGVydHkoInN0cm9rZSIpP3Auc3Ryb2tlOmwuc3Ryb2tlLF8uc2hhZG93PXAuaGFzT3duUHJvcGVydHkoInNoYWRvdyIpP3Auc2hhZG93Omwuc2hhZG93LF8udGV4dEJhc2VsaW5lPXAudGV4dEJhc2VsaW5lfHxsLnRleHRCYXNlbGluZSxfLng9cC54fHxsLngsXy55PXAueXx8bC55fWVsc2Ugb1tnXS5sYWJlbD1sfWlmKG8udXAudHJpbSl7dmFyIGY9by51cC50cmltO2g9Zi53aWR0aCxjPWYuaGVpZ2h0fWVsc2UgaD1vLnVwLnNyYy53aWR0aCxjPW8udXAuc3JjLmhlaWdodDtvLnVwfHwoRGVidWcuZXJyb3IoIkJ1dHRvbiBsYWNrcyBhbiB1cCBzdGF0ZSEgVGhpcyBpcyBhIHNlcmlvdXMgcHJvYmxlbSEgSW5wdXQgZGF0YSBmb2xsb3dzOiIpLERlYnVnLmVycm9yKGkpKSxvLm92ZXJ8fChvLm92ZXI9by51cCksby5kb3dufHwoby5kb3duPW8udXApLG8uZGlzYWJsZWR8fChvLmRpc2FibGVkPW8udXApLGkub2Zmc2V0Pyh0aGlzLl9vZmZzZXQueD1pLm9mZnNldC54LHRoaXMuX29mZnNldC55PWkub2Zmc2V0LnkpOnRoaXMuX29mZnNldC54PXRoaXMuX29mZnNldC55PTB9ZWxzZSB1PWksaD11LndpZHRoLGM9dS5oZWlnaHQvMyx0aGlzLl9zdGF0ZVByaW9yaXR5PXIsby5kaXNhYmxlZD1vLnVwPXtzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLDAsaCxjKX0sby5vdmVyPXtzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLGMsaCxjKX0sby5kb3duPXtzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLDIqYyxoLGMpfSxsJiYoby51cC5sYWJlbD1vLm92ZXIubGFiZWw9by5kb3duLmxhYmVsPW8uZGlzYWJsZWQubGFiZWw9bCksdGhpcy5fb2Zmc2V0Lng9dGhpcy5fb2Zmc2V0Lnk9MDt0aGlzLmJhY2s9bmV3IGNyZWF0ZWpzLkJpdG1hcCh1KSx0aGlzLmFkZENoaWxkKHRoaXMuYmFjayksdGhpcy5fd2lkdGg9aCx0aGlzLl9oZWlnaHQ9YyxzJiYodGhpcy5sYWJlbD1uZXcgY3JlYXRlanMuVGV4dChzLnRleHR8fCIiLG8udXAubGFiZWwuZm9udCxvLnVwLmxhYmVsLmNvbG9yKSx0aGlzLmFkZENoaWxkKHRoaXMubGFiZWwpKSx0aGlzLmVuYWJsZWQ9YT09PXQ/ITA6ISFhfSxPYmplY3QuZGVmaW5lUHJvcGVydHkocywid2lkdGgiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2lkdGgqdGhpcy5zY2FsZVh9LHNldDpmdW5jdGlvbih0KXt0aGlzLnNjYWxlWD10L3RoaXMuX3dpZHRofX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzLCJoZWlnaHQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVpZ2h0KnRoaXMuc2NhbGVZfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5zY2FsZVk9dC90aGlzLl9oZWlnaHR9fSkscy5zZXRUZXh0PWZ1bmN0aW9uKHQpe2lmKHRoaXMubGFiZWwpe3RoaXMubGFiZWwudGV4dD10O2Zvcih2YXIgZSxpPTA7aTx0aGlzLl9zdGF0ZVByaW9yaXR5Lmxlbmd0aDsrK2kpaWYodGhpcy5fc3RhdGVGbGFnc1t0aGlzLl9zdGF0ZVByaW9yaXR5W2ldXSl7ZT10aGlzLl9zdGF0ZURhdGFbdGhpcy5fc3RhdGVQcmlvcml0eVtpXV07YnJlYWt9ZXx8KGU9dGhpcy5fc3RhdGVEYXRhLnVwKSxlPWUubGFiZWwsdGhpcy5sYWJlbC54PSJjZW50ZXIiPT1lLng/LjUqKHRoaXMuX3dpZHRoLXRoaXMubGFiZWwuZ2V0TWVhc3VyZWRXaWR0aCgpKSt0aGlzLl9vZmZzZXQueDplLngrdGhpcy5fb2Zmc2V0LngsdGhpcy5sYWJlbC55PSJjZW50ZXIiPT1lLnk/LjUqdGhpcy5faGVpZ2h0K3RoaXMuX29mZnNldC55OmUueSt0aGlzLl9vZmZzZXQueX19LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzLCJlbmFibGVkIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuX3N0YXRlRmxhZ3MuZGlzYWJsZWR9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9zdGF0ZUZsYWdzLmRpc2FibGVkPSF0LHQ/KHRoaXMuY3Vyc29yPSJwb2ludGVyIix0aGlzLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsdGhpcy5fZG93bkNCKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsdGhpcy5fb3ZlckNCKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0Iix0aGlzLl9vdXRDQikpOih0aGlzLmN1cnNvcj1udWxsLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9kb3duQ0IpLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIix0aGlzLl9vdmVyQ0IpLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLHRoaXMuX291dENCKSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3VwQ0IpLHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuX2NsaWNrQ0IpLHRoaXMuX3N0YXRlRmxhZ3MuZG93bj10aGlzLl9zdGF0ZUZsYWdzLm92ZXI9ITEpLHRoaXMuX3VwZGF0ZVN0YXRlKCl9fSkscy5fYWRkUHJvcGVydHk9ZnVuY3Rpb24odCl7YS5pbmRleE9mKHQpPj0wfHxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyx0LHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdGVGbGFnc1t0XX0sc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX3N0YXRlRmxhZ3NbdF09ZSx0aGlzLl91cGRhdGVTdGF0ZSgpfX0pfSxzLl91cGRhdGVTdGF0ZT1mdW5jdGlvbigpe2lmKHRoaXMuYmFjayl7Zm9yKHZhciB0LGU9MDtlPHRoaXMuX3N0YXRlUHJpb3JpdHkubGVuZ3RoOysrZSlpZih0aGlzLl9zdGF0ZUZsYWdzW3RoaXMuX3N0YXRlUHJpb3JpdHlbZV1dKXt0PXRoaXMuX3N0YXRlRGF0YVt0aGlzLl9zdGF0ZVByaW9yaXR5W2VdXTticmVha310fHwodD10aGlzLl9zdGF0ZURhdGEudXApLHRoaXMuYmFjay5zb3VyY2VSZWN0PXQuc3JjLHQudHJpbT8odGhpcy5iYWNrLng9dC50cmltLngrdGhpcy5fb2Zmc2V0LngsdGhpcy5iYWNrLnk9dC50cmltLnkrdGhpcy5fb2Zmc2V0LnkpOih0aGlzLmJhY2sueD10aGlzLl9vZmZzZXQueCx0aGlzLmJhY2sueT10aGlzLl9vZmZzZXQueSksdGhpcy5sYWJlbCYmKHQ9dC5sYWJlbCx0aGlzLmxhYmVsLnRleHRCYXNlbGluZT10LnRleHRCYXNlbGluZXx8Im1pZGRsZSIsdGhpcy5sYWJlbC5zdHJva2U9dC5zdHJva2UsdGhpcy5sYWJlbC5zaGFkb3c9dC5zaGFkb3csdGhpcy5sYWJlbC5mb250PXQuZm9udCx0aGlzLmxhYmVsLmNvbG9yPXQuY29sb3J8fCIjMDAwIix0aGlzLmxhYmVsLng9ImNlbnRlciI9PXQueD8uNSoodGhpcy5fd2lkdGgtdGhpcy5sYWJlbC5nZXRNZWFzdXJlZFdpZHRoKCkpK3RoaXMuX29mZnNldC54OnQueCt0aGlzLl9vZmZzZXQueCx0aGlzLmxhYmVsLnk9ImNlbnRlciI9PXQueT8uNSp0aGlzLl9oZWlnaHQrdGhpcy5fb2Zmc2V0Lnk6dC55K3RoaXMuX29mZnNldC55KX19LHMuX29uTW91c2VEb3duPWZ1bmN0aW9uKCl7dGhpcy5hZGRFdmVudExpc3RlbmVyKCJwcmVzc3VwIix0aGlzLl91cENCKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLl9jbGlja0NCKSx0aGlzLl9zdGF0ZUZsYWdzLmRvd249ITAsdGhpcy5fdXBkYXRlU3RhdGUoKX0scy5fb25Nb3VzZVVwPWZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc3VwIix0aGlzLl91cENCKSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLl9jbGlja0NCKSx0aGlzLl9zdGF0ZUZsYWdzLmRvd249ITEsdGhpcy5fdXBkYXRlU3RhdGUoKX0scy5fb25DbGljaz1mdW5jdGlvbigpe3RoaXMuZGlzcGF0Y2hFdmVudChuZXcgY3JlYXRlanMuRXZlbnQoaS5CVVRUT05fUFJFU1MpKX0scy5fb25Nb3VzZU92ZXI9ZnVuY3Rpb24oKXt0aGlzLl9zdGF0ZUZsYWdzLm92ZXI9ITAsdGhpcy5fdXBkYXRlU3RhdGUoKX0scy5fb25Nb3VzZU91dD1mdW5jdGlvbigpe3RoaXMuX3N0YXRlRmxhZ3Mub3Zlcj0hMSx0aGlzLl91cGRhdGVTdGF0ZSgpfSxzLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUFsbENoaWxkcmVuKCksdGhpcy5yZW1vdmVBbGxFdmVudExpc3RlbmVycygpLHRoaXMuX2Rvd25DQj1udWxsLHRoaXMuX3VwQ0I9bnVsbCx0aGlzLl9vdmVyQ0I9bnVsbCx0aGlzLl9vdXRDQj1udWxsLHRoaXMuYmFjaz1udWxsLHRoaXMubGFiZWw9bnVsbCx0aGlzLl9zdGF0ZVByaW9yaXR5PW51bGwsdGhpcy5fc3RhdGVGbGFncz1udWxsLHRoaXMuX3N0YXRlRGF0YT1udWxsfSxpLmdlbmVyYXRlRGVmYXVsdFN0YXRlcz1mdW5jdGlvbihlLGkscyl7dmFyIG49ZS53aWR0aCxhPWUuaGVpZ2h0LzMsbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKSxsPW4sdT1lLmhlaWdodDtpJiYodSs9YSkscyYmKGwrPTIqcy5zaXplLHUrPWErMipzLnNpemUpLG8ud2lkdGg9bCxvLmhlaWdodD11O3ZhciBoPW8uZ2V0Q29udGV4dCgiMmQiKTtoLmRyYXdJbWFnZShlLDAsMCk7dmFyIGM9e2ltYWdlOm8sdXA6e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsMCxuLGEpfSxvdmVyOntzcmM6bmV3IGNyZWF0ZWpzLlJlY3RhbmdsZSgwLGEsbixhKX0sZG93bjp7c3JjOm5ldyBjcmVhdGVqcy5SZWN0YW5nbGUoMCwyKmEsbixhKX19LGQ9bmV3IGNyZWF0ZWpzLkJpdG1hcChlKTtkLnNvdXJjZVJlY3Q9Yy51cC5zcmM7dmFyIGc9ZS5oZWlnaHQ7aWYoaSl7aC5zYXZlKCksaC50cmFuc2xhdGUoMCxnKTt2YXIgcD1uZXcgY3JlYXRlanMuQ29sb3JNYXRyaXg7aS5zYXR1cmF0aW9uIT09dCYmcC5hZGp1c3RTYXR1cmF0aW9uKGkuc2F0dXJhdGlvbiksaS5icmlnaHRuZXNzIT09dCYmcC5hZGp1c3RCcmlnaHRuZXNzKDIuNTUqaS5icmlnaHRuZXNzKSxpLmNvbnRyYXN0IT09dCYmcC5hZGp1c3RDb250cmFzdChpLmNvbnRyYXN0KSxkLmZpbHRlcnM9W25ldyBjcmVhdGVqcy5Db2xvck1hdHJpeEZpbHRlcihwKV0sZC5jYWNoZSgwLDAsYy51cC5zcmMud2lkdGgsYy51cC5zcmMuaGVpZ2h0KSxkLmRyYXcoaCksYy5kaXNhYmxlZD17c3JjOm5ldyBjcmVhdGVqcy5SZWN0YW5nbGUoMCxnLG4sMHxhKX0sZys9YSxoLnJlc3RvcmUoKX1pZihzKXtoLnNhdmUoKTt2YXIgXz1uKzIqcy5zaXplLGY9YSsyKnMuc2l6ZTtkLmZpbHRlcnM9W25ldyBjcmVhdGVqcy5Db2xvckZpbHRlcigwLDAsMCwxLHMucmVkLHMuZ3JlZW4scy5ibHVlLHMuYWxwaGEhPT10Py0yNTUrcy5hbHBoYTowKV0sZC5zY2FsZVg9Xy9uLGQuc2NhbGVZPWYvYSxkLng9MCxkLnk9ZyxkLmNhY2hlKDAsMCxfLGYpLGQudXBkYXRlQ29udGV4dChoKSxkLmRyYXcoaCksaC5yZXN0b3JlKCksZC5zY2FsZVg9ZC5zY2FsZVk9MSxkLng9cy5zaXplLGQueT1nK3Muc2l6ZSxkLmZpbHRlcnM9bnVsbCxkLnVuY2FjaGUoKSxkLnVwZGF0ZUNvbnRleHQoaCksZC5kcmF3KGgpO3ZhciBtPW5ldyBjcmVhdGVqcy5SZWN0YW5nbGUocy5zaXplLHMuc2l6ZSxfLGYpO2MudXAudHJpbT1tLGMub3Zlci50cmltPW0sYy5kb3duLnRyaW09bSxjLmRpc2FibGVkJiYoYy5kaXNhYmxlZC50cmltPW0pLGMuaGlnaGxpZ2h0ZWQ9e3NyYzpuZXcgY3JlYXRlanMuUmVjdGFuZ2xlKDAsZywwfF8sMHxmKX0sYy5wcmlvcml0eT1yLnNsaWNlKCksYy5wcmlvcml0eS51bnNoaWZ0KCJoaWdobGlnaHRlZCIpLGMub2Zmc2V0PXt4Oi1zLnNpemUseTotcy5zaXplfX1yZXR1cm4gY30sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLkJ1dHRvbj1pfSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKHQsZSl7dGhpcy5pbml0aWFsaXplKHQsZSl9LGU9dC5wcm90b3R5cGU9e307ZS5kcmFnZ2VkT2JqPW51bGwsZS5kcmFnU3RhcnRUaHJlc2hvbGQ9MjAsZS5tb3VzZURvd25TdGFnZVBvcz1udWxsLGUubW91c2VEb3duT2JqUG9zPW51bGwsZS5hbGxvd1N0aWNreUNsaWNrPSEwLGUuaXNUb3VjaE1vdmU9ITEsZS5pc0hlbGREcmFnPSExLGUuaXNTdGlja3lDbGljaz0hMSxlLnNuYXBTZXR0aW5ncz1udWxsLGUuX3RoZVN0YWdlPW51bGwsZS5fZHJhZ09mZnNldD1udWxsLGUuX2RyYWdTdGFydENhbGxiYWNrPW51bGwsZS5fZHJhZ0VuZENhbGxiYWNrPW51bGwsZS5fdHJpZ2dlckhlbGREcmFnQ2FsbGJhY2s9bnVsbCxlLl90cmlnZ2VyU3RpY2t5Q2xpY2tDYWxsYmFjaz1udWxsLGUuX3N0YWdlTW91c2VVcENhbGxiYWNrPW51bGwsZS5fZHJhZ2dhYmxlT2JqZWN0cz1udWxsLGUuX3VwZGF0ZUNhbGxiYWNrPW51bGwsZS5faGVscGVyUG9pbnQ9bnVsbCxlLmluaXRpYWxpemU9ZnVuY3Rpb24odCxlKXt0aGlzLl91cGRhdGVDYWxsYmFjaz10aGlzLl91cGRhdGVPYmpQb3NpdGlvbi5iaW5kKHRoaXMpLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrPXRoaXMuX3RyaWdnZXJIZWxkRHJhZy5iaW5kKHRoaXMpLHRoaXMuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrPXRoaXMuX3RyaWdnZXJTdGlja3lDbGljay5iaW5kKHRoaXMpLHRoaXMuX3N0YWdlTW91c2VVcENhbGxiYWNrPXRoaXMuX3N0b3BEcmFnLmJpbmQodGhpcyksdGhpcy5fdGhlU3RhZ2U9Y2xvdWRraWQuT1MuaW5zdGFuY2Uuc3RhZ2UsdGhpcy5fZHJhZ1N0YXJ0Q2FsbGJhY2s9dCx0aGlzLl9kcmFnRW5kQ2FsbGJhY2s9ZSx0aGlzLl9kcmFnZ2FibGVPYmplY3RzPVtdLHRoaXMubW91c2VEb3duU3RhZ2VQb3M9e3g6MCx5OjB9LHRoaXMubW91c2VEb3duT2JqUG9zPXt4OjAseTowfX0sZS5zdGFydERyYWc9ZnVuY3Rpb24odCxlKXt0aGlzLl9vYmpNb3VzZURvd24oZSx0KX0sZS5fb2JqTW91c2VEb3duPWZ1bmN0aW9uKHQsZSl7bnVsbD09PXRoaXMuZHJhZ2dlZE9iaiYmKHRoaXMuZHJhZ2dlZE9iaj1lLGNyZWF0ZWpzLlR3ZWVuLnJlbW92ZVR3ZWVucyhlKSx0aGlzLl9kcmFnT2Zmc2V0PXRoaXMuZHJhZ2dlZE9iai5wYXJlbnQuZ2xvYmFsVG9Mb2NhbCh0P3Quc3RhZ2VYOjAsdD90LnN0YWdlWTowKSx0aGlzLl9kcmFnT2Zmc2V0LngtPWUueCx0aGlzLl9kcmFnT2Zmc2V0LnktPWUueSx0aGlzLm1vdXNlRG93bk9ialBvcy54PWUueCx0aGlzLm1vdXNlRG93bk9ialBvcy55PWUueSx0Pyh0aGlzLl90aGVTdGFnZS5fZ2V0UG9pbnRlckRhdGEodC5wb2ludGVySUQpLnRhcmdldD1lLHRoaXMuYWxsb3dTdGlja3lDbGljayYmInRvdWNoc3RhcnQiIT10Lm5hdGl2ZUV2ZW50LnR5cGU/KHRoaXMubW91c2VEb3duU3RhZ2VQb3MueD10LnN0YWdlWCx0aGlzLm1vdXNlRG93blN0YWdlUG9zLnk9dC5zdGFnZVksZS5hZGRFdmVudExpc3RlbmVyKCJwcmVzc21vdmUiLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrKSxlLmFkZEV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrKSk6KHRoaXMubW91c2VEb3duU3RhZ2VQb3MueD10LnN0YWdlWCx0aGlzLm1vdXNlRG93blN0YWdlUG9zLnk9dC5zdGFnZVksdGhpcy5pc1RvdWNoTW92ZT0idG91Y2hzdGFydCI9PXQubmF0aXZlRXZlbnQudHlwZSx0aGlzLmlzSGVsZERyYWc9ITAsdGhpcy5fc3RhcnREcmFnKCkpKToodGhpcy5pc0hlbGREcmFnPSEwLHRoaXMuX3N0YXJ0RHJhZygpKSl9LGUuX3RyaWdnZXJTdGlja3lDbGljaz1mdW5jdGlvbigpe3RoaXMuaXNTdGlja3lDbGljaz0hMCx0aGlzLmRyYWdnZWRPYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3Ntb3ZlIix0aGlzLl90cmlnZ2VySGVsZERyYWdDYWxsYmFjayksdGhpcy5kcmFnZ2VkT2JqLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrKSx0aGlzLl9zdGFydERyYWcoKX0sZS5fdHJpZ2dlckhlbGREcmFnPWZ1bmN0aW9uKHQpe3ZhciBlPXQuc3RhZ2VYLXRoaXMubW91c2VEb3duU3RhZ2VQb3MueCxpPXQuc3RhZ2VZLXRoaXMubW91c2VEb3duU3RhZ2VQb3MueTtlKmUraSppPj10aGlzLmRyYWdTdGFydFRocmVzaG9sZCp0aGlzLmRyYWdTdGFydFRocmVzaG9sZCYmKHRoaXMuaXNIZWxkRHJhZz0hMCx0aGlzLmRyYWdnZWRPYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3Ntb3ZlIix0aGlzLl90cmlnZ2VySGVsZERyYWdDYWxsYmFjayksdGhpcy5kcmFnZ2VkT2JqLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzdXAiLHRoaXMuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrKSx0aGlzLl9zdGFydERyYWcoKSl9LGUuX3N0YXJ0RHJhZz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3RoZVN0YWdlO3QucmVtb3ZlRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZW1vdmUiLHRoaXMuX3VwZGF0ZUNhbGxiYWNrKSx0LmFkZEV2ZW50TGlzdGVuZXIoInN0YWdlbW91c2Vtb3ZlIix0aGlzLl91cGRhdGVDYWxsYmFjayksdC5yZW1vdmVFdmVudExpc3RlbmVyKCJzdGFnZW1vdXNldXAiLHRoaXMuX3N0YWdlTW91c2VVcENhbGxiYWNrKSx0LmFkZEV2ZW50TGlzdGVuZXIoInN0YWdlbW91c2V1cCIsdGhpcy5fc3RhZ2VNb3VzZVVwQ2FsbGJhY2spLHRoaXMuX2RyYWdTdGFydENhbGxiYWNrKHRoaXMuZHJhZ2dlZE9iail9LGUuc3RvcERyYWc9ZnVuY3Rpb24odCl7dGhpcy5fc3RvcERyYWcobnVsbCx0PT09ITApfSxlLl9zdG9wRHJhZz1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuZHJhZ2dlZE9iajtpLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByZXNzbW92ZSIsdGhpcy5fdHJpZ2dlckhlbGREcmFnQ2FsbGJhY2spLGkucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2spLHRoaXMuX3RoZVN0YWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoInN0YWdlbW91c2Vtb3ZlIix0aGlzLl91cGRhdGVDYWxsYmFjayksdGhpcy5fdGhlU3RhZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcigic3RhZ2Vtb3VzZXVwIix0aGlzLl9zdGFnZU1vdXNlVXBDYWxsYmFjayksdGhpcy5kcmFnZ2VkT2JqPW51bGwsdGhpcy5pc1RvdWNoTW92ZT0hMSx0aGlzLmlzU3RpY2t5Q2xpY2s9ITEsdGhpcy5pc0hlbGRNb3ZlPSExLGUhPT0hMSYmdGhpcy5fZHJhZ0VuZENhbGxiYWNrKGkpfSxlLl91cGRhdGVPYmpQb3NpdGlvbj1mdW5jdGlvbih0KXtpZih0aGlzLmlzVG91Y2hNb3ZlfHx0aGlzLl90aGVTdGFnZS5tb3VzZUluQm91bmRzKXt2YXIgZT10aGlzLmRyYWdnZWRPYmosaT1lLnBhcmVudC5nbG9iYWxUb0xvY2FsKHQuc3RhZ2VYLHQuc3RhZ2VZLHRoaXMuX2hlbHBlclBvaW50KSxuPWUuX2RyYWdCb3VuZHM7aWYoZS54PXMoaS54LXRoaXMuX2RyYWdPZmZzZXQueCxuLngsbi5yaWdodCksZS55PXMoaS55LXRoaXMuX2RyYWdPZmZzZXQueSxuLnksbi5ib3R0b20pLHRoaXMuc25hcFNldHRpbmdzKXN3aXRjaCh0aGlzLnNuYXBTZXR0aW5ncy5tb2RlKXtjYXNlInBvaW50cyI6dGhpcy5faGFuZGxlUG9pbnRTbmFwKGkpO2JyZWFrO2Nhc2UiZ3JpZCI6YnJlYWs7Y2FzZSJsaW5lIjp9fX0sZS5faGFuZGxlUG9pbnRTbmFwPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLnNuYXBTZXR0aW5ncyxzPWUuZGlzdCplLmRpc3Qsbj1lLnBvaW50cyxhPXQueC10aGlzLl9kcmFnT2Zmc2V0Lngscj10LnktdGhpcy5fZHJhZ09mZnNldC55LG89LTEsbD1udWxsLHU9bi5sZW5ndGgtMTt1Pj0wOy0tdSl7dmFyIGg9blt1XSxjPWkoYSxyLGgueCxoLnkpO3M+PWMmJihvPmN8fC0xPT1vKSYmKG89YyxsPWgpfWwmJih0aGlzLmRyYWdnZWRPYmoueD1sLngsdGhpcy5kcmFnZ2VkT2JqLnk9bC55KX07dmFyIGk9ZnVuY3Rpb24odCxlLGkscyl7dmFyIG49dC1pLGE9ZS1zO3JldHVybiBuKm4rYSphfSxzPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZT50P2U6dD5pP2k6dH0sbj1mdW5jdGlvbigpe3RoaXMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIix0aGlzLl9vbk1vdXNlRG93bkxpc3RlbmVyKSx0aGlzLmN1cnNvcj0icG9pbnRlciJ9LGE9ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1vdXNlZG93biIsdGhpcy5fb25Nb3VzZURvd25MaXN0ZW5lciksdGhpcy5jdXJzb3I9bnVsbH0scj1mdW5jdGlvbih0KXt0aGlzLl9kcmFnTWFuLl9vYmpNb3VzZURvd24odCx0aGlzKX07ZS5hZGRPYmplY3Q9ZnVuY3Rpb24odCxlKXtlfHwoZT17eDowLHk6MCx3aWR0aDp0aGlzLl90aGVTdGFnZS5jYW52YXMud2lkdGgsaGVpZ2h0OnRoaXMuX3RoZVN0YWdlLmNhbnZhcy5oZWlnaHR9KSxlLnJpZ2h0PWUueCtlLndpZHRoLGUuYm90dG9tPWUueStlLmhlaWdodCx0Ll9kcmFnQm91bmRzPWUsdGhpcy5fZHJhZ2dhYmxlT2JqZWN0cy5pbmRleE9mKHQpPj0wfHwodC5lbmFibGVEcmFnPW4sdC5kaXNhYmxlRHJhZz1hLHQuX29uTW91c2VEb3duTGlzdGVuZXI9ci5iaW5kKHQpLHQuX2RyYWdNYW49dGhpcyx0aGlzLl9kcmFnZ2FibGVPYmplY3RzLnB1c2godCkpfSxlLnJlbW92ZU9iamVjdD1mdW5jdGlvbih0KXt0LmRpc2FibGVEcmFnKCksZGVsZXRlIHQuZW5hYmxlRHJhZyxkZWxldGUgdC5kaXNhYmxlRHJhZyxkZWxldGUgdC5fb25Nb3VzZURvd25MaXN0ZW5lcixkZWxldGUgdC5fZHJhZ01hbixkZWxldGUgdC5fZHJhZ0JvdW5kczt2YXIgZT10aGlzLl9kcmFnZ2FibGVPYmplY3RzLmluZGV4T2YodCk7ZT49MCYmdGhpcy5fZHJhZ2dhYmxlT2JqZWN0cy5zcGxpY2UoZSwxKX0sZS5kZXN0cm95PWZ1bmN0aW9uKCl7bnVsbCE9PXRoaXMuZHJhZ2dlZE9iaiYmKHRoaXMuZHJhZ2dlZE9iai5yZW1vdmVFdmVudExpc3RlbmVyKCJwcmVzc21vdmUiLHRoaXMuX3RyaWdnZXJIZWxkRHJhZ0NhbGxiYWNrKSx0aGlzLmRyYWdnZWRPYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcigicHJlc3N1cCIsdGhpcy5fdHJpZ2dlclN0aWNreUNsaWNrQ2FsbGJhY2spLHRoaXMuX3RoZVN0YWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoInN0YWdlbW91c2Vtb3ZlIix0aGlzLl91cGRhdGVDYWxsYmFjayksdGhpcy5kcmFnZ2VkT2JqPW51bGwpLHRoaXMuX3VwZGF0ZUNhbGxiYWNrPW51bGwsdGhpcy5fZHJhZ1N0YXJ0Q2FsbGJhY2s9bnVsbCx0aGlzLl9kcmFnRW5kQ2FsbGJhY2s9bnVsbCx0aGlzLl90cmlnZ2VySGVsZERyYWdDYWxsYmFjaz1udWxsLHRoaXMuX3RyaWdnZXJTdGlja3lDbGlja0NhbGxiYWNrPW51bGwsdGhpcy5fc3RhZ2VNb3VzZVVwQ2FsbGJhY2s9bnVsbCx0aGlzLl90aGVTdGFnZT1udWxsO2Zvcih2YXIgdD10aGlzLl9kcmFnZ2FibGVPYmplY3RzLmxlbmd0aC0xO3Q+PTA7LS10KXt2YXIgZT10aGlzLl9kcmFnZ2FibGVPYmplY3RzW3RdO2UuZGlzYWJsZURyYWcoKSxkZWxldGUgZS5lbmFibGVEcmFnLGRlbGV0ZSBlLmRpc2FibGVEcmFnLGRlbGV0ZSBlLl9vbk1vdXNlRG93bkxpc3RlbmVyLGRlbGV0ZSBlLl9kcmFnTWFuLGRlbGV0ZSBlLl9kcmFnQm91bmRzfXRoaXMuX2RyYWdnYWJsZU9iamVjdHM9bnVsbCx0aGlzLl9oZWxwZXJQb2ludD1udWxsfSxuYW1lc3BhY2UoImNsb3Vka2lkIikuRHJhZ01hbmFnZXI9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbigpe307dC5wcm90b3R5cGU9e30sdC5wb3NpdGlvbkl0ZW1zPWZ1bmN0aW9uKGUsaSl7dmFyIHMsbjtmb3IodmFyIGEgaW4gaSl7dmFyIHI9ZVthXTtpZihyKXt2YXIgbz1pW2FdO2lmKHIueD1vLngsci55PW8ueSxuPW8uc2NhbGUsbiYmKHIuc2NhbGVYKj1uLngsci5zY2FsZVkqPW4ueSksbj1vLnBpdm90LG4mJihyLnJlZ1g9bi54LHIucmVnWT1uLnkpLHM9by5yb3RhdGlvbixzJiYoci5yb3RhdGlvbj1zKSxvLmhpdEFyZWEpe3ZhciBsPW8uaGl0QXJlYTtyLmhpdFNoYXBlPXQuZ2VuZXJhdGVIaXRBcmVhKGwpfX1lbHNlIERlYnVnLmVycm9yKCJjb3VsZCBub3QgZmluZCBvYmplY3QgJyIrYSsiJyIpfX0sdC5nZW5lcmF0ZUhpdEFyZWE9ZnVuY3Rpb24odCxpKXtpfHwoaT0xKTt2YXIgcztpZihzPXdpbmRvdy5jcmVhdGVqcyxlKHQpKXtpZigxPT1pKXJldHVybiBuZXcgcy5Qb2x5Z29uKHQpO2Zvcih2YXIgbj1bXSxhPTAscj10Lmxlbmd0aDtyPmE7KythKW4ucHVzaChuZXcgcy5Qb2ludCh0W2FdLngqaSx0W2FdLnkqaSkpO3JldHVybiBuZXcgcy5Qb2x5Z29uKG4pfXJldHVybiJyZWN0IiE9dC50eXBlJiZ0LnR5cGU/ImVsbGlwc2UiPT10LnR5cGU/bmV3IHMuRWxsaXBzZSgodC54LS41KnQudykqaSwodC55LS41KnQuaCkqaSx0LncqaSx0LmgqaSk6ImNpcmNsZSI9PXQudHlwZT9uZXcgcy5DaXJjbGUodC54KmksdC55KmksdC5yKmkpOiJzZWN0b3IiPT10LnR5cGU/bmV3IHMuU2VjdG9yKHQueCppLHQueSppLHQucippLHQuc3RhcnQsdC5lbmQpOm51bGw6bmV3IHMuUmVjdGFuZ2xlKHQueCppLHQueSppLHQudyppLHQuaCppKX07dmFyIGU9ZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX07bmFtZXNwYWNlKCJjbG91ZGtpZCIpLlBvc2l0aW9uZXI9dH0oKSxmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1mdW5jdGlvbih0LGUsaSl7dGhpcy53aWR0aD10LHRoaXMuaGVpZ2h0PWUsdGhpcy5wcGk9aX07dC5wcm90b3R5cGU9e30sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLlNjcmVlblNldHRpbmdzPXR9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQsZT1mdW5jdGlvbihlLGkscyl7c3dpdGNoKHQ9Y2xvdWRraWQuVUlTY2FsZXIsdGhpcy5faXRlbT1lLHRoaXMuX3NldHRpbmdzPWksdGhpcy5fZGVzaWduZWRTY3JlZW49cyx0aGlzLm9yaWdTY2FsZVg9ZS5zY2FsZVgsdGhpcy5vcmlnU2NhbGVZPWUuc2NhbGVZLHRoaXMub3JpZ1dpZHRoPWUud2lkdGgsdGhpcy5vcmlnQm91bmRzPXt4OjAseTowLHdpZHRoOmUud2lkdGgsaGVpZ2h0OmUuaGVpZ2h0fSx0aGlzLm9yaWdCb3VuZHMucmlnaHQ9dGhpcy5vcmlnQm91bmRzLngrdGhpcy5vcmlnQm91bmRzLndpZHRoLHRoaXMub3JpZ0JvdW5kcy5ib3R0b209dGhpcy5vcmlnQm91bmRzLnkrdGhpcy5vcmlnQm91bmRzLmhlaWdodCxpLnZlcnRBbGlnbil7Y2FzZSB0LkFMSUdOX1RPUDp0aGlzLm9yaWdNYXJnaW5WZXJ0PWUueSt0aGlzLm9yaWdCb3VuZHMueTticmVhaztjYXNlIHQuQUxJR05fQ0VOVEVSOnRoaXMub3JpZ01hcmdpblZlcnQ9LjUqcy5oZWlnaHQtZS55O2JyZWFrO2Nhc2UgdC5BTElHTl9CT1RUT006dGhpcy5vcmlnTWFyZ2luVmVydD1zLmhlaWdodC0oZS55K3RoaXMub3JpZ0JvdW5kcy5ib3R0b20pfXN3aXRjaChpLmhvcmlBbGlnbil7Y2FzZSB0LkFMSUdOX0xFRlQ6dGhpcy5vcmlnTWFyZ2luSG9yaT1lLngrdGhpcy5vcmlnQm91bmRzLng7YnJlYWs7Y2FzZSB0LkFMSUdOX0NFTlRFUjp0aGlzLm9yaWdNYXJnaW5Ib3JpPS41KnMud2lkdGgtZS54O2JyZWFrO2Nhc2UgdC5BTElHTl9SSUdIVDp0aGlzLm9yaWdNYXJnaW5Ib3JpPXMud2lkdGgtKGUueCt0aGlzLm9yaWdCb3VuZHMucmlnaHQpCn19LGk9ZS5wcm90b3R5cGU9e307aS5vcmlnTWFyZ2luSG9yaT0wLGkub3JpZ01hcmdpblZlcnQ9MCxpLm9yaWdXaWR0aD0wLGkub3JpZ1NjYWxlWD0wLGkub3JpZ1NjYWxlWT0wLGkub3JpZ0JvdW5kcz1udWxsLGkuX3NldHRpbmdzPW51bGwsaS5faXRlbT1udWxsLGkuX2Rlc2lnbmVkU2NyZWVuPW51bGwsaS5yZXNpemU9ZnVuY3Rpb24oZSl7dmFyIGk9ZS5oZWlnaHQvdGhpcy5fZGVzaWduZWRTY3JlZW4uaGVpZ2h0LHM9ZS5wcGkvdGhpcy5fZGVzaWduZWRTY3JlZW4ucHBpLG49KGUud2lkdGgtdGhpcy5fZGVzaWduZWRTY3JlZW4ud2lkdGgqaSkvMixhPWkvczt0aGlzLl9zZXR0aW5ncy5taW5TY2FsZSYmYTx0aGlzLl9zZXR0aW5ncy5taW5TY2FsZT9hPXRoaXMuX3NldHRpbmdzLm1pblNjYWxlOnRoaXMuX3NldHRpbmdzLm1heFNjYWxlJiZhPnRoaXMuX3NldHRpbmdzLm1heFNjYWxlJiYoYT10aGlzLl9zZXR0aW5ncy5tYXhTY2FsZSksYSo9cyx0aGlzLl9pdGVtLnNjYWxlWD10aGlzLm9yaWdTY2FsZVgqYSx0aGlzLl9pdGVtLnNjYWxlWT10aGlzLm9yaWdTY2FsZVkqYTt2YXIgcjtzd2l0Y2gocj10aGlzLm9yaWdNYXJnaW5WZXJ0KmksdGhpcy5fc2V0dGluZ3MudmVydEFsaWduKXtjYXNlIHQuQUxJR05fVE9QOnRoaXMuX2l0ZW0ueT1yLXRoaXMub3JpZ0JvdW5kcy55KmE7YnJlYWs7Y2FzZSB0LkFMSUdOX0NFTlRFUjp0aGlzLl9pdGVtLnk9LjUqZS5oZWlnaHQtcjticmVhaztjYXNlIHQuQUxJR05fQk9UVE9NOnRoaXMuX2l0ZW0ueT1lLmhlaWdodC1yLXRoaXMub3JpZ0JvdW5kcy5ib3R0b20qYX1zd2l0Y2gocj10aGlzLm9yaWdNYXJnaW5Ib3JpKmksdGhpcy5fc2V0dGluZ3MuaG9yaUFsaWduKXtjYXNlIHQuQUxJR05fTEVGVDp0aGlzLl9pdGVtLng9dGhpcy5fc2V0dGluZ3MudGl0bGVTYWZlP24rci10aGlzLm9yaWdCb3VuZHMueCphOnItdGhpcy5vcmlnQm91bmRzLngqYTticmVhaztjYXNlIHQuQUxJR05fQ0VOVEVSOnRoaXMuX2l0ZW0ueD10aGlzLl9zZXR0aW5ncy5jZW50ZXJlZEhvcml6b250YWxseT8uNSooZS53aWR0aC10aGlzLl9pdGVtLndpZHRoKTouNSplLndpZHRoLXI7YnJlYWs7Y2FzZSB0LkFMSUdOX1JJR0hUOnRoaXMuX2l0ZW0ueD10aGlzLl9zZXR0aW5ncy50aXRsZVNhZmU/ZS53aWR0aC1uLXItdGhpcy5vcmlnQm91bmRzLnJpZ2h0KmE6ZS53aWR0aC1yLXRoaXMub3JpZ0JvdW5kcy5yaWdodCphfX0saS5kZXN0cm95PWZ1bmN0aW9uKCl7dGhpcy5vcmlnQm91bmRzPW51bGwsdGhpcy5faXRlbT1udWxsLHRoaXMuX3NldHRpbmdzPW51bGwsdGhpcy5fZGVzaWduZWRTY3JlZW49bnVsbH0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLlVJRWxlbWVudD1lfSgpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0PWZ1bmN0aW9uKCl7fSxlPXQucHJvdG90eXBlPXt9O2UudmVydEFsaWduPW51bGwsZS5ob3JpQWxpZ249bnVsbCxlLnRpdGxlU2FmZT0hMSxlLm1heFNjYWxlPTEsZS5taW5TY2FsZT0xLGUuY2VudGVyZWRIb3Jpem9udGFsbHk9ITEsbmFtZXNwYWNlKCJjbG91ZGtpZCIpLlVJRWxlbWVudFNldHRpbmdzPXR9KCksZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7dmFyIHQ9Y2xvdWRraWQuVUlFbGVtZW50U2V0dGluZ3MsZT1jbG91ZGtpZC5VSUVsZW1lbnQsaT1jbG91ZGtpZC5TY3JlZW5TZXR0aW5ncyxzPWZ1bmN0aW9uKHQsZSxzLG4pe3RoaXMuX3BhcmVudD10LHRoaXMuX2l0ZW1zPVtdLHRoaXMuX2Rlc2lnbmVkU2NyZWVuPW5ldyBpKGUscyxuKX0sbj1zLnByb3RvdHlwZT17fSxhPW5ldyBpKDAsMCwwKSxyPSExO24uX3BhcmVudD1udWxsLG4uX2Rlc2lnbmVkU2NyZWVuPW51bGwsbi5faXRlbXM9bnVsbCxzLkFMSUdOX1RPUD0idG9wIixzLkFMSUdOX0JPVFRPTT0iYm90dG9tIixzLkFMSUdOX0xFRlQ9ImxlZnQiLHMuQUxJR05fUklHSFQ9InJpZ2h0IixzLkFMSUdOX0NFTlRFUj0iY2VudGVyIixzLmZyb21KU09OPWZ1bmN0aW9uKHQsZSxpLG4peyJib29sZWFuIiE9dHlwZW9mIG4mJihuPSEwKTt2YXIgYSxyLG8sbCx1LGg9bmV3IHModCxlLmRlc2lnbmVkV2lkdGgsZS5kZXNpZ25lZEhlaWdodCxlLmRlc2lnbmVkUFBJKTtmb3IociBpbiBpKWE9aVtyXSxhLmFsaWduPyhvPWEuYWxpZ24uc3BsaXQoIi0iKSxsPW9bMF0sdT1vWzFdKToobD1BTElHTl9DRU5URVIsdT1BTElHTl9DRU5URVIpLGguYWRkKHRbcl0sbCx1LGEudGl0bGVTYWZlfHwhMSxhLm1pblNjYWxlfHwwLzAsYS5tYXhTY2FsZXx8MC8wLGEuY2VudGVyZWRIb3Jpem9udGFsbHl8fCExKTtyZXR1cm4gaC5yZXNpemUoKSxuJiZoLmRlc3Ryb3koKSxofSxzLmluaXQ9ZnVuY3Rpb24odCxlLGkpe2Eud2lkdGg9dCxhLmhlaWdodD1lLGEucHBpPWkscj0hMH0sbi5nZXRTY2FsZT1mdW5jdGlvbigpe3JldHVybiBhLmhlaWdodC90aGlzLl9kZXNpZ25lZFNjcmVlbi5oZWlnaHR9LG4uYWRkPWZ1bmN0aW9uKGksbixhLHIsbyxsLHUpe3ZhciBoPW5ldyB0O2gudmVydEFsaWduPW58fHMuQUxJR05fQ0VOVEVSLGguaG9yaUFsaWduPWF8fHMuQUxJR05fQ0VOVEVSLGgudGl0bGVTYWZlPSJib29sZWFuIiE9dHlwZW9mIHI/ITE6cixoLm1heFNjYWxlPSJudW1iZXIiIT10eXBlb2YgbD8wLzA6bCxoLm1pblNjYWxlPSJudW1iZXIiIT10eXBlb2Ygbz8wLzA6byxoLmNlbnRlcmVkSG9yaXpvbnRhbGx5PXV8fCExLHRoaXMuX2l0ZW1zLnB1c2gobmV3IGUoaSxoLHRoaXMuX2Rlc2lnbmVkU2NyZWVuKSl9LHMucmVzaXplQmFja2dyb3VuZD1mdW5jdGlvbih0KXtpZihyKXt2YXIgZSxpLHM7ZT10LmltYWdlLmhlaWdodCxpPXQuaW1hZ2Uud2lkdGgscz1hLmhlaWdodC9lLHQuc2NhbGVYPXQuc2NhbGVZPXMsdC54PS41KihhLndpZHRoLWkqcyl9fSxzLnJlc2l6ZUJhY2tncm91bmRzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLGk9dC5sZW5ndGg7aT5lOysrZSlzLnJlc2l6ZUJhY2tncm91bmQodFtlXSl9LG4ucmVzaXplPWZ1bmN0aW9uKCl7aWYodGhpcy5faXRlbXMubGVuZ3RoPjApZm9yKHZhciB0PTAsZT10aGlzLl9pdGVtcy5sZW5ndGg7ZT50OysrdCl0aGlzLl9pdGVtc1t0XS5yZXNpemUoYSl9LG4uZGVzdHJveT1mdW5jdGlvbigpe2lmKHRoaXMuX2l0ZW1zLmxlbmd0aD4wKWZvcih2YXIgdD0wLGU9dGhpcy5faXRlbXMubGVuZ3RoO2U+dDsrK3QpdGhpcy5faXRlbXNbdF0uZGVzdHJveSgpO3RoaXMuX3BhcmVudD1udWxsLHRoaXMuX2Rlc2lnbmVkU2NyZWVuPW51bGwsdGhpcy5faXRlbXM9bnVsbH0sbmFtZXNwYWNlKCJjbG91ZGtpZCIpLlVJU2NhbGVyPXN9KCk7",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Thu, 06 Nov 2014 15:39:30 GMT",
                    "Content-Length": "35292",
                    "Date": "Thu, 06 Nov 2014 15:39:34 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}