{
    "url": "http://localhost:9999/altruity/x-dribbble/app/bower_components/platform/platform.js",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Link manipulation (DOM-based)",
    "issueType": 5246976,
    "severity": "Low",
    "confidence": "Firm",
    "issueBackground": "DOM-based link manipulation vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this to a navigation target within the current page, such as a clickable link or the submission URL of a form. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will modify the target of links within the response. An attacker may be able to leverage this to perform various attacks, including:<ul><li>Causing the user to redirect to an arbitrary external URL, to facilitate a phishing attack.</li><li>Causing the user to submit sensitive form data to a server controlled by the attacker.</li><li>Causing the user to perform an unintended action within the application, by changing the file or query string associated with a link.</li><li>Bypassing browser anti-XSS defenses by injecting on-site links containing XSS exploits, since browser anti-XSS defenses typically do not operate on on-site links.</li></ul>",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based link manipulation vulnerabilities is not to dynamically set the target URLs of links or forms using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a link target. In general, this is best achieved by using a whitelist of URLs that are permitted link targets, and strictly validating the target against this list before setting the link target.",
    "issueDetail": "The application may be vulnerable to DOM-based link manipulation. Data is read from <b>the 'baseURI' property of a DOM element</b> and written to <b>the 'href' property of a DOM element</b> via the following statement:<ul><li>b.href=document.baseURI,a.head.appendChild(b)</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/altruity/x-dribbble/app/bower_components/platform/platform.js",
                "path": "/altruity/x-dribbble/app/bower_components/platform/platform.js",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC9hbHRydWl0eS94LWRyaWJiYmxlL2FwcC9ib3dlcl9jb21wb25lbnRzL3BsYXRmb3JtL3BsYXRmb3JtLmpzIEhUVFAvMS4xDQpIb3N0OiBsb2NhbGhvc3Q6OTk5OQ0KDQo=",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxlbmd0aDogMTUwMjkyDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0DQpEYXRlOiBTdW4sIDA5IE5vdiAyMDE0IDAzOjI4OjAzIEdNVA0KTGFzdC1Nb2RpZmllZDogU3VuLCAwOSBOb3YgMjAxNCAwMzoyODowMyBHTVQNCg0KLyoqCiAqIEBsaWNlbnNlCiAqIENvcHlyaWdodCAoYykgMjAxNCBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAqIFRoaXMgY29kZSBtYXkgb25seSBiZSB1c2VkIHVuZGVyIHRoZSBCU0Qgc3R5bGUgbGljZW5zZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQKICogVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQKICogVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9DT05UUklCVVRPUlMudHh0CiAqIENvZGUgZGlzdHJpYnV0ZWQgYnkgR29vZ2xlIGFzIHBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvCiAqIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0CiAqLwovLyBAdmVyc2lvbjogMC4yLjMKCndpbmRvdy5QbGF0Zm9ybT13aW5kb3cuUGxhdGZvcm18fHt9LHdpbmRvdy5sb2dGbGFncz13aW5kb3cubG9nRmxhZ3N8fHt9LGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmxhZ3N8fHt9O2xvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpLmZvckVhY2goZnVuY3Rpb24oYSl7YT1hLnNwbGl0KCI9IiksYVswXSYmKGJbYVswXV09YVsxXXx8ITApfSk7dmFyIGM9ZG9jdW1lbnQuY3VycmVudFNjcmlwdHx8ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYyo9InBsYXRmb3JtLmpzIl0nKTtpZihjKWZvcih2YXIgZCxlPWMuYXR0cmlidXRlcyxmPTA7ZjxlLmxlbmd0aDtmKyspZD1lW2ZdLCJzcmMiIT09ZC5uYW1lJiYoYltkLm5hbWVdPWQudmFsdWV8fCEwKTtiLmxvZyYmYi5sb2cuc3BsaXQoIiwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dpbmRvdy5sb2dGbGFnc1thXT0hMH0pLGIuc2hhZG93PWIuc2hhZG93fHxiLnNoYWRvd2RvbXx8Yi5wb2x5ZmlsbCxiLnNoYWRvdz0ibmF0aXZlIj09PWIuc2hhZG93PyExOmIuc2hhZG93fHwhSFRNTEVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3QsYi5zaGFkb3cmJmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoInNjcmlwdCIpLmxlbmd0aD4xJiZjb25zb2xlLndhcm4oInBsYXRmb3JtLmpzIGlzIG5vdCB0aGUgZmlyc3Qgc2NyaXB0IG9uIHRoZSBwYWdlLiBTZWUgaHR0cDovL3d3dy5wb2x5bWVyLXByb2plY3Qub3JnL2RvY3Mvc3RhcnQvcGxhdGZvcm0uaHRtbCNzZXR1cCBmb3IgZGV0YWlscy4iKSxiLnJlZ2lzdGVyJiYod2luZG93LkN1c3RvbUVsZW1lbnRzPXdpbmRvdy5DdXN0b21FbGVtZW50c3x8e2ZsYWdzOnt9fSx3aW5kb3cuQ3VzdG9tRWxlbWVudHMuZmxhZ3MucmVnaXN0ZXI9Yi5yZWdpc3RlciksYi5pbXBvcnRzJiYod2luZG93LkhUTUxJbXBvcnRzPXdpbmRvdy5IVE1MSW1wb3J0c3x8e2ZsYWdzOnt9fSx3aW5kb3cuSFRNTEltcG9ydHMuZmxhZ3MuaW1wb3J0cz1iLmltcG9ydHMpLGEuZmxhZ3M9Yn0oUGxhdGZvcm0pLCJ1bmRlZmluZWQiPT10eXBlb2YgV2Vha01hcCYmIWZ1bmN0aW9uKCl7dmFyIGE9T2JqZWN0LmRlZmluZVByb3BlcnR5LGI9RGF0ZS5ub3coKSUxZTksYz1mdW5jdGlvbigpe3RoaXMubmFtZT0iX19zdCIrKDFlOSpNYXRoLnJhbmRvbSgpPj4+MCkrKGIrKyArIl9fIil9O2MucHJvdG90eXBlPXtzZXQ6ZnVuY3Rpb24oYixjKXt2YXIgZD1iW3RoaXMubmFtZV07ZCYmZFswXT09PWI/ZFsxXT1jOmEoYix0aGlzLm5hbWUse3ZhbHVlOltiLGNdLHdyaXRhYmxlOiEwfSl9LGdldDpmdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4oYj1hW3RoaXMubmFtZV0pJiZiWzBdPT09YT9iWzFdOnZvaWQgMH0sImRlbGV0ZSI6ZnVuY3Rpb24oYSl7dGhpcy5zZXQoYSx2b2lkIDApfX0sd2luZG93LldlYWtNYXA9Y30oKSxmdW5jdGlvbihnbG9iYWwpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkZXRlY3RPYmplY3RPYnNlcnZlKCl7ZnVuY3Rpb24gYShhKXtiPWF9aWYoImZ1bmN0aW9uIiE9dHlwZW9mIE9iamVjdC5vYnNlcnZlfHwiZnVuY3Rpb24iIT10eXBlb2YgQXJyYXkub2JzZXJ2ZSlyZXR1cm4hMTt2YXIgYj1bXSxjPXt9LGQ9W107cmV0dXJuIE9iamVjdC5vYnNlcnZlKGMsYSksQXJyYXkub2JzZXJ2ZShkLGEpLGMuaWQ9MSxjLmlkPTIsZGVsZXRlIGMuaWQsZC5wdXNoKDEsMiksZC5sZW5ndGg9MCxPYmplY3QuZGVsaXZlckNoYW5nZVJlY29yZHMoYSksNSE9PWIubGVuZ3RoPyExOiJhZGQiIT1iWzBdLnR5cGV8fCJ1cGRhdGUiIT1iWzFdLnR5cGV8fCJkZWxldGUiIT1iWzJdLnR5cGV8fCJzcGxpY2UiIT1iWzNdLnR5cGV8fCJzcGxpY2UiIT1iWzRdLnR5cGU/ITE6KE9iamVjdC51bm9ic2VydmUoYyxhKSxBcnJheS51bm9ic2VydmUoZCxhKSwhMCl9ZnVuY3Rpb24gZGV0ZWN0RXZhbCgpe2lmKGdsb2JhbC5kb2N1bWVudCYmInNlY3VyaXR5UG9saWN5ImluIGdsb2JhbC5kb2N1bWVudCYmIWdsb2JhbC5kb2N1bWVudC5zZWN1cml0eVBvbGljeS5hbGxvd3NFdmFsKXJldHVybiExO2lmKCJ1bmRlZmluZWQiIT10eXBlb2YgY2hyb21lJiZjaHJvbWUuYXBwJiZjaHJvbWUuYXBwLnJ1bnRpbWUpcmV0dXJuITE7dHJ5e3ZhciBhPW5ldyBGdW5jdGlvbigiIiwicmV0dXJuIHRydWU7Iik7cmV0dXJuIGEoKX1jYXRjaChiKXtyZXR1cm4hMX19ZnVuY3Rpb24gaXNJbmRleChhKXtyZXR1cm4rYT09PWE+Pj4wfWZ1bmN0aW9uIHRvTnVtYmVyKGEpe3JldHVybithfWZ1bmN0aW9uIGlzT2JqZWN0KGEpe3JldHVybiBhPT09T2JqZWN0KGEpfWZ1bmN0aW9uIGFyZVNhbWVWYWx1ZShhLGIpe3JldHVybiBhPT09Yj8wIT09YXx8MS9hPT09MS9iOm51bWJlcklzTmFOKGEpJiZudW1iZXJJc05hTihiKT8hMDphIT09YSYmYiE9PWJ9ZnVuY3Rpb24gaXNQYXRoVmFsaWQoYSl7cmV0dXJuInN0cmluZyIhPXR5cGVvZiBhPyExOihhPWEudHJpbSgpLCIiPT1hPyEwOiIuIj09YVswXT8hMTpwYXRoUmVnRXhwLnRlc3QoYSkpfWZ1bmN0aW9uIFBhdGgoYSxiKXtpZihiIT09Y29uc3RydWN0b3JJc1ByaXZhdGUpdGhyb3cgRXJyb3IoIlVzZSBQYXRoLmdldCB0byByZXRyaWV2ZSBwYXRoIG9iamVjdHMiKTtyZXR1cm4iIj09YS50cmltKCk/dGhpczppc0luZGV4KGEpPyh0aGlzLnB1c2goYSksdGhpcyk6KGEuc3BsaXQoL1xzKlwuXHMqLykuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhfSkuZm9yRWFjaChmdW5jdGlvbihhKXt0aGlzLnB1c2goYSl9LHRoaXMpLHZvaWQoaGFzRXZhbCYmdGhpcy5sZW5ndGgmJih0aGlzLmdldFZhbHVlRnJvbT10aGlzLmNvbXBpbGVkR2V0VmFsdWVGcm9tRm4oKSkpKX1mdW5jdGlvbiBnZXRQYXRoKGEpe2lmKGEgaW5zdGFuY2VvZiBQYXRoKXJldHVybiBhO251bGw9PWEmJihhPSIiKSwic3RyaW5nIiE9dHlwZW9mIGEmJihhPVN0cmluZyhhKSk7dmFyIGI9cGF0aENhY2hlW2FdO2lmKGIpcmV0dXJuIGI7aWYoIWlzUGF0aFZhbGlkKGEpKXJldHVybiBpbnZhbGlkUGF0aDt2YXIgYj1uZXcgUGF0aChhLGNvbnN0cnVjdG9ySXNQcml2YXRlKTtyZXR1cm4gcGF0aENhY2hlW2FdPWIsYn1mdW5jdGlvbiBkaXJ0eUNoZWNrKGEpe2Zvcih2YXIgYj0wO01BWF9ESVJUWV9DSEVDS19DWUNMRVM+YiYmYS5jaGVja18oKTspYisrO3JldHVybiBnbG9iYWwudGVzdGluZ0V4cG9zZUN5Y2xlQ291bnQmJihnbG9iYWwuZGlydHlDaGVja0N5Y2xlQ291bnQ9YiksYj4wfWZ1bmN0aW9uIG9iamVjdElzRW1wdHkoYSl7Zm9yKHZhciBiIGluIGEpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZGlmZklzRW1wdHkoYSl7cmV0dXJuIG9iamVjdElzRW1wdHkoYS5hZGRlZCkmJm9iamVjdElzRW1wdHkoYS5yZW1vdmVkKSYmb2JqZWN0SXNFbXB0eShhLmNoYW5nZWQpfWZ1bmN0aW9uIGRpZmZPYmplY3RGcm9tT2xkT2JqZWN0KGEsYil7dmFyIGM9e30sZD17fSxlPXt9O2Zvcih2YXIgZiBpbiBiKXt2YXIgZz1hW2ZdOyh2b2lkIDA9PT1nfHxnIT09YltmXSkmJihmIGluIGE/ZyE9PWJbZl0mJihlW2ZdPWcpOmRbZl09dm9pZCAwKX1mb3IodmFyIGYgaW4gYSlmIGluIGJ8fChjW2ZdPWFbZl0pO3JldHVybiBBcnJheS5pc0FycmF5KGEpJiZhLmxlbmd0aCE9PWIubGVuZ3RoJiYoZS5sZW5ndGg9YS5sZW5ndGgpLHthZGRlZDpjLHJlbW92ZWQ6ZCxjaGFuZ2VkOmV9fWZ1bmN0aW9uIHJ1bkVPTVRhc2tzKCl7aWYoIWVvbVRhc2tzLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIGE9MDthPGVvbVRhc2tzLmxlbmd0aDthKyspZW9tVGFza3NbYV0oKTtyZXR1cm4gZW9tVGFza3MubGVuZ3RoPTAsITB9ZnVuY3Rpb24gbmV3T2JzZXJ2ZWRPYmplY3QoKXtmdW5jdGlvbiBhKGEpe2ImJmIuc3RhdGVfPT09T1BFTkVEJiYhZCYmYi5jaGVja18oYSl9dmFyIGIsYyxkPSExLGU9ITA7cmV0dXJue29wZW46ZnVuY3Rpb24oYyl7aWYoYil0aHJvdyBFcnJvcigiT2JzZXJ2ZWRPYmplY3QgaW4gdXNlIik7ZXx8T2JqZWN0LmRlbGl2ZXJDaGFuZ2VSZWNvcmRzKGEpLGI9YyxlPSExfSxvYnNlcnZlOmZ1bmN0aW9uKGIsZCl7Yz1iLGQ/QXJyYXkub2JzZXJ2ZShjLGEpOk9iamVjdC5vYnNlcnZlKGMsYSl9LGRlbGl2ZXI6ZnVuY3Rpb24oYil7ZD1iLE9iamVjdC5kZWxpdmVyQ2hhbmdlUmVjb3JkcyhhKSxkPSExfSxjbG9zZTpmdW5jdGlvbigpe2I9dm9pZCAwLE9iamVjdC51bm9ic2VydmUoYyxhKSxvYnNlcnZlZE9iamVjdENhY2hlLnB1c2godGhpcyl9fX1mdW5jdGlvbiBnZXRPYnNlcnZlZE9iamVjdChhLGIsYyl7dmFyIGQ9b2JzZXJ2ZWRPYmplY3RDYWNoZS5wb3AoKXx8bmV3T2JzZXJ2ZWRPYmplY3QoKTtyZXR1cm4gZC5vcGVuKGEpLGQub2JzZXJ2ZShiLGMpLGR9ZnVuY3Rpb24gbmV3T2JzZXJ2ZWRTZXQoKXtmdW5jdGlvbiBhKGIsZil7YiYmKGI9PT1kJiYoZVtmXT0hMCksaC5pbmRleE9mKGIpPDAmJihoLnB1c2goYiksT2JqZWN0Lm9ic2VydmUoYixjKSksYShPYmplY3QuZ2V0UHJvdG90eXBlT2YoYiksZikpfWZ1bmN0aW9uIGIoYSl7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07aWYoYy5vYmplY3QhPT1kfHxlW2MubmFtZV18fCJzZXRQcm90b3R5cGUiPT09Yy50eXBlKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIGMoYyl7aWYoIWIoYykpe2Zvcih2YXIgZCxlPTA7ZTxnLmxlbmd0aDtlKyspZD1nW2VdLGQuc3RhdGVfPT1PUEVORUQmJmQuaXRlcmF0ZU9iamVjdHNfKGEpO2Zvcih2YXIgZT0wO2U8Zy5sZW5ndGg7ZSsrKWQ9Z1tlXSxkLnN0YXRlXz09T1BFTkVEJiZkLmNoZWNrXygpfX12YXIgZCxlLGY9MCxnPVtdLGg9W10saT17b2JqZWN0OnZvaWQgMCxvYmplY3RzOmgsb3BlbjpmdW5jdGlvbihiLGMpe2R8fChkPWMsZT17fSksZy5wdXNoKGIpLGYrKyxiLml0ZXJhdGVPYmplY3RzXyhhKX0sY2xvc2U6ZnVuY3Rpb24oKXtpZihmLS0sIShmPjApKXtmb3IodmFyIGE9MDthPGgubGVuZ3RoO2ErKylPYmplY3QudW5vYnNlcnZlKGhbYV0sYyksT2JzZXJ2ZXIudW5vYnNlcnZlZENvdW50Kys7Zy5sZW5ndGg9MCxoLmxlbmd0aD0wLGQ9dm9pZCAwLGU9dm9pZCAwLG9ic2VydmVkU2V0Q2FjaGUucHVzaCh0aGlzKX19fTtyZXR1cm4gaX1mdW5jdGlvbiBnZXRPYnNlcnZlZFNldChhLGIpe3JldHVybiBsYXN0T2JzZXJ2ZWRTZXQmJmxhc3RPYnNlcnZlZFNldC5vYmplY3Q9PT1ifHwobGFzdE9ic2VydmVkU2V0PW9ic2VydmVkU2V0Q2FjaGUucG9wKCl8fG5ld09ic2VydmVkU2V0KCksbGFzdE9ic2VydmVkU2V0Lm9iamVjdD1iKSxsYXN0T2JzZXJ2ZWRTZXQub3BlbihhLGIpLGxhc3RPYnNlcnZlZFNldH1mdW5jdGlvbiBPYnNlcnZlcigpe3RoaXMuc3RhdGVfPVVOT1BFTkVELHRoaXMuY2FsbGJhY2tfPXZvaWQgMCx0aGlzLnRhcmdldF89dm9pZCAwLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPXZvaWQgMCx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5pZF89bmV4dE9ic2VydmVySWQrK31mdW5jdGlvbiBhZGRUb0FsbChhKXtPYnNlcnZlci5fYWxsT2JzZXJ2ZXJzQ291bnQrKyxjb2xsZWN0T2JzZXJ2ZXJzJiZhbGxPYnNlcnZlcnMucHVzaChhKX1mdW5jdGlvbiByZW1vdmVGcm9tQWxsKCl7T2JzZXJ2ZXIuX2FsbE9ic2VydmVyc0NvdW50LS19ZnVuY3Rpb24gT2JqZWN0T2JzZXJ2ZXIoYSl7T2JzZXJ2ZXIuY2FsbCh0aGlzKSx0aGlzLnZhbHVlXz1hLHRoaXMub2xkT2JqZWN0Xz12b2lkIDB9ZnVuY3Rpb24gQXJyYXlPYnNlcnZlcihhKXtpZighQXJyYXkuaXNBcnJheShhKSl0aHJvdyBFcnJvcigiUHJvdmlkZWQgb2JqZWN0IGlzIG5vdCBhbiBBcnJheSIpO09iamVjdE9ic2VydmVyLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBQYXRoT2JzZXJ2ZXIoYSxiKXtPYnNlcnZlci5jYWxsKHRoaXMpLHRoaXMub2JqZWN0Xz1hLHRoaXMucGF0aF89Z2V0UGF0aChiKSx0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDB9ZnVuY3Rpb24gQ29tcG91bmRPYnNlcnZlcihhKXtPYnNlcnZlci5jYWxsKHRoaXMpLHRoaXMucmVwb3J0Q2hhbmdlc09uT3Blbl89YSx0aGlzLnZhbHVlXz1bXSx0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDAsdGhpcy5vYnNlcnZlZF89W119ZnVuY3Rpb24gaWRlbnRGbihhKXtyZXR1cm4gYX1mdW5jdGlvbiBPYnNlcnZlclRyYW5zZm9ybShhLGIsYyxkKXt0aGlzLmNhbGxiYWNrXz12b2lkIDAsdGhpcy50YXJnZXRfPXZvaWQgMCx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5vYnNlcnZhYmxlXz1hLHRoaXMuZ2V0VmFsdWVGbl89Ynx8aWRlbnRGbix0aGlzLnNldFZhbHVlRm5fPWN8fGlkZW50Rm4sdGhpcy5kb250UGFzc1Rocm91Z2hTZXRfPWR9ZnVuY3Rpb24gbm90aWZ5KGEsYixjLGQpe2lmKCFhcmVTYW1lVmFsdWUoYyxkKSYmKCJmdW5jdGlvbiI9PXR5cGVvZiBhLnByb3BlcnR5Q2hhbmdlZF8mJmEucHJvcGVydHlDaGFuZ2VkXyhiLGMsZCksaGFzT2JzZXJ2ZSkpe3ZhciBlPWEubm90aWZpZXJfO2V8fChlPWEubm90aWZpZXJfPU9iamVjdC5nZXROb3RpZmllcihhKSksdXBkYXRlUmVjb3JkLm9iamVjdD1hLHVwZGF0ZVJlY29yZC5uYW1lPWIsdXBkYXRlUmVjb3JkLm9sZFZhbHVlPWQsZS5ub3RpZnkodXBkYXRlUmVjb3JkKX19ZnVuY3Rpb24gZGlmZk9iamVjdEZyb21DaGFuZ2VSZWNvcmRzKGEsYixjKXtmb3IodmFyIGQ9e30sZT17fSxmPTA7ZjxiLmxlbmd0aDtmKyspe3ZhciBnPWJbZl07ZXhwZWN0ZWRSZWNvcmRUeXBlc1tnLnR5cGVdPyhnLm5hbWUgaW4gY3x8KGNbZy5uYW1lXT1nLm9sZFZhbHVlKSwidXBkYXRlIiE9Zy50eXBlJiYoImFkZCIhPWcudHlwZT9nLm5hbWUgaW4gZD8oZGVsZXRlIGRbZy5uYW1lXSxkZWxldGUgY1tnLm5hbWVdKTplW2cubmFtZV09ITA6Zy5uYW1lIGluIGU/ZGVsZXRlIGVbZy5uYW1lXTpkW2cubmFtZV09ITApKTooY29uc29sZS5lcnJvcigiVW5rbm93biBjaGFuZ2VSZWNvcmQgdHlwZTogIitnLnR5cGUpLGNvbnNvbGUuZXJyb3IoZykpfWZvcih2YXIgaCBpbiBkKWRbaF09YVtoXTtmb3IodmFyIGggaW4gZSllW2hdPXZvaWQgMDt2YXIgaT17fTtmb3IodmFyIGggaW4gYylpZighKGggaW4gZHx8aCBpbiBlKSl7dmFyIGo9YVtoXTtjW2hdIT09aiYmKGlbaF09ail9cmV0dXJue2FkZGVkOmQscmVtb3ZlZDplLGNoYW5nZWQ6aX19ZnVuY3Rpb24gbmV3U3BsaWNlKGEsYixjKXtyZXR1cm57aW5kZXg6YSxyZW1vdmVkOmIsYWRkZWRDb3VudDpjfX1mdW5jdGlvbiBBcnJheVNwbGljZSgpe31mdW5jdGlvbiBjYWxjU3BsaWNlcyhhLGIsYyxkLGUsZil7cmV0dXJuIGFycmF5U3BsaWNlLmNhbGNTcGxpY2VzKGEsYixjLGQsZSxmKX1mdW5jdGlvbiBpbnRlcnNlY3QoYSxiLGMsZCl7cmV0dXJuIGM+Ynx8YT5kPy0xOmI9PWN8fGQ9PWE/MDpjPmE/ZD5iP2ItYzpkLWM6Yj5kP2QtYTpiLWF9ZnVuY3Rpb24gbWVyZ2VTcGxpY2UoYSxiLGMsZCl7Zm9yKHZhciBlPW5ld1NwbGljZShiLGMsZCksZj0hMSxnPTAsaD0wO2g8YS5sZW5ndGg7aCsrKXt2YXIgaT1hW2hdO2lmKGkuaW5kZXgrPWcsIWYpe3ZhciBqPWludGVyc2VjdChlLmluZGV4LGUuaW5kZXgrZS5yZW1vdmVkLmxlbmd0aCxpLmluZGV4LGkuaW5kZXgraS5hZGRlZENvdW50KTtpZihqPj0wKXthLnNwbGljZShoLDEpLGgtLSxnLT1pLmFkZGVkQ291bnQtaS5yZW1vdmVkLmxlbmd0aCxlLmFkZGVkQ291bnQrPWkuYWRkZWRDb3VudC1qO3ZhciBrPWUucmVtb3ZlZC5sZW5ndGgraS5yZW1vdmVkLmxlbmd0aC1qO2lmKGUuYWRkZWRDb3VudHx8ayl7dmFyIGM9aS5yZW1vdmVkO2lmKGUuaW5kZXg8aS5pbmRleCl7dmFyIGw9ZS5yZW1vdmVkLnNsaWNlKDAsaS5pbmRleC1lLmluZGV4KTtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShsLGMpLGM9bH1pZihlLmluZGV4K2UucmVtb3ZlZC5sZW5ndGg+aS5pbmRleCtpLmFkZGVkQ291bnQpe3ZhciBtPWUucmVtb3ZlZC5zbGljZShpLmluZGV4K2kuYWRkZWRDb3VudC1lLmluZGV4KTtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShjLG0pfWUucmVtb3ZlZD1jLGkuaW5kZXg8ZS5pbmRleCYmKGUuaW5kZXg9aS5pbmRleCl9ZWxzZSBmPSEwfWVsc2UgaWYoZS5pbmRleDxpLmluZGV4KXtmPSEwLGEuc3BsaWNlKGgsMCxlKSxoKys7dmFyIG49ZS5hZGRlZENvdW50LWUucmVtb3ZlZC5sZW5ndGg7aS5pbmRleCs9bixnKz1ufX19Znx8YS5wdXNoKGUpfWZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxTcGxpY2VzKGEsYil7Zm9yKHZhciBjPVtdLGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtzd2l0Y2goZS50eXBlKXtjYXNlInNwbGljZSI6bWVyZ2VTcGxpY2UoYyxlLmluZGV4LGUucmVtb3ZlZC5zbGljZSgpLGUuYWRkZWRDb3VudCk7YnJlYWs7Y2FzZSJhZGQiOmNhc2UidXBkYXRlIjpjYXNlImRlbGV0ZSI6aWYoIWlzSW5kZXgoZS5uYW1lKSljb250aW51ZTt2YXIgZj10b051bWJlcihlLm5hbWUpO2lmKDA+Ziljb250aW51ZTttZXJnZVNwbGljZShjLGYsW2Uub2xkVmFsdWVdLDEpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5lcnJvcigiVW5leHBlY3RlZCByZWNvcmQgdHlwZTogIitKU09OLnN0cmluZ2lmeShlKSl9fXJldHVybiBjfWZ1bmN0aW9uIHByb2plY3RBcnJheVNwbGljZXMoYSxiKXt2YXIgYz1bXTtyZXR1cm4gY3JlYXRlSW5pdGlhbFNwbGljZXMoYSxiKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe3JldHVybiAxPT1iLmFkZGVkQ291bnQmJjE9PWIucmVtb3ZlZC5sZW5ndGg/dm9pZChiLnJlbW92ZWRbMF0hPT1hW2IuaW5kZXhdJiZjLnB1c2goYikpOnZvaWQoYz1jLmNvbmNhdChjYWxjU3BsaWNlcyhhLGIuaW5kZXgsYi5pbmRleCtiLmFkZGVkQ291bnQsYi5yZW1vdmVkLDAsYi5yZW1vdmVkLmxlbmd0aCkpKX0pLGN9dmFyIGhhc09ic2VydmU9ZGV0ZWN0T2JqZWN0T2JzZXJ2ZSgpLGhhc0V2YWw9ZGV0ZWN0RXZhbCgpLG51bWJlcklzTmFOPWdsb2JhbC5OdW1iZXIuaXNOYU58fGZ1bmN0aW9uKGEpe3JldHVybiJudW1iZXIiPT10eXBlb2YgYSYmZ2xvYmFsLmlzTmFOKGEpfSxjcmVhdGVPYmplY3Q9Il9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKGEpe3JldHVybiBhfTpmdW5jdGlvbihhKXt2YXIgYj1hLl9fcHJvdG9fXztpZighYilyZXR1cm4gYTt2YXIgYz1PYmplY3QuY3JlYXRlKGIpO3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhhKS5mb3JFYWNoKGZ1bmN0aW9uKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShjLGIsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLGIpKX0pLGN9LGlkZW50U3RhcnQ9IlskX2EtekEtWl0iLGlkZW50UGFydD0iWyRfYS16QS1aMC05XSIsaWRlbnQ9aWRlbnRTdGFydCsiKyIraWRlbnRQYXJ0KyIqIixlbGVtZW50SW5kZXg9Iig/OlswLTldfFsxLTldK1swLTldKykiLGlkZW50T3JFbGVtZW50SW5kZXg9Iig/OiIraWRlbnQrInwiK2VsZW1lbnRJbmRleCsiKSIscGF0aD0iKD86IitpZGVudE9yRWxlbWVudEluZGV4KyIpKD86XFxzKlxcLlxccyoiK2lkZW50T3JFbGVtZW50SW5kZXgrIikqIixwYXRoUmVnRXhwPW5ldyBSZWdFeHAoIl4iK3BhdGgrIiQiKSxjb25zdHJ1Y3RvcklzUHJpdmF0ZT17fSxwYXRoQ2FjaGU9e307UGF0aC5nZXQ9Z2V0UGF0aCxQYXRoLnByb3RvdHlwZT1jcmVhdGVPYmplY3Qoe19fcHJvdG9fXzpbXSx2YWxpZDohMCx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmpvaW4oIi4iKX0sZ2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8dGhpcy5sZW5ndGg7YisrKXtpZihudWxsPT1hKXJldHVybjthPWFbdGhpc1tiXV19cmV0dXJuIGF9LGl0ZXJhdGVPYmplY3RzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7Yzx0aGlzLmxlbmd0aDtjKyspe2lmKGMmJihhPWFbdGhpc1tjLTFdXSksIWlzT2JqZWN0KGEpKXJldHVybjtiKGEsdGhpc1swXSl9fSxjb21waWxlZEdldFZhbHVlRnJvbUZuOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5tYXAoZnVuY3Rpb24oYSl7cmV0dXJuIGlzSW5kZXgoYSk/J1siJythKyciXSc6Ii4iK2F9KSxiPSIiLGM9Im9iaiI7Yis9ImlmIChvYmogIT0gbnVsbCI7Zm9yKHZhciBkPTA7ZDx0aGlzLmxlbmd0aC0xO2QrKyl7e3RoaXNbZF19Yys9YVtkXSxiKz0iICYmXG4gICAgICIrYysiICE9IG51bGwifXJldHVybiBiKz0iKVxuIixjKz1hW2RdLGIrPSIgIHJldHVybiAiK2MrIjtcbmVsc2VcbiAgcmV0dXJuIHVuZGVmaW5lZDsiLG5ldyBGdW5jdGlvbigib2JqIixiKX0sc2V0VmFsdWVGcm9tOmZ1bmN0aW9uKGEsYil7aWYoIXRoaXMubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgYz0wO2M8dGhpcy5sZW5ndGgtMTtjKyspe2lmKCFpc09iamVjdChhKSlyZXR1cm4hMTthPWFbdGhpc1tjXV19cmV0dXJuIGlzT2JqZWN0KGEpPyhhW3RoaXNbY11dPWIsITApOiExfX0pO3ZhciBpbnZhbGlkUGF0aD1uZXcgUGF0aCgiIixjb25zdHJ1Y3RvcklzUHJpdmF0ZSk7aW52YWxpZFBhdGgudmFsaWQ9ITEsaW52YWxpZFBhdGguZ2V0VmFsdWVGcm9tPWludmFsaWRQYXRoLnNldFZhbHVlRnJvbT1mdW5jdGlvbigpe307dmFyIE1BWF9ESVJUWV9DSEVDS19DWUNMRVM9MWUzLGVvbVRhc2tzPVtdLHJ1bkVPTT1oYXNPYnNlcnZlP2Z1bmN0aW9uKCl7dmFyIGE9e3BpbmdQb25nOiEwfSxiPSExO3JldHVybiBPYmplY3Qub2JzZXJ2ZShhLGZ1bmN0aW9uKCl7cnVuRU9NVGFza3MoKSxiPSExfSksZnVuY3Rpb24oYyl7ZW9tVGFza3MucHVzaChjKSxifHwoYj0hMCxhLnBpbmdQb25nPSFhLnBpbmdQb25nKX19KCk6ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oYSl7ZW9tVGFza3MucHVzaChhKX19KCksb2JzZXJ2ZWRPYmplY3RDYWNoZT1bXSxvYnNlcnZlZFNldENhY2hlPVtdLGxhc3RPYnNlcnZlZFNldCxVTk9QRU5FRD0wLE9QRU5FRD0xLENMT1NFRD0yLFJFU0VUVElORz0zLG5leHRPYnNlcnZlcklkPTE7T2JzZXJ2ZXIucHJvdG90eXBlPXtvcGVuOmZ1bmN0aW9uKGEsYil7aWYodGhpcy5zdGF0ZV8hPVVOT1BFTkVEKXRocm93IEVycm9yKCJPYnNlcnZlciBoYXMgYWxyZWFkeSBiZWVuIG9wZW5lZC4iKTtyZXR1cm4gYWRkVG9BbGwodGhpcyksdGhpcy5jYWxsYmFja189YSx0aGlzLnRhcmdldF89Yix0aGlzLmNvbm5lY3RfKCksdGhpcy5zdGF0ZV89T1BFTkVELHRoaXMudmFsdWVffSxjbG9zZTpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1PUEVORUQmJihyZW1vdmVGcm9tQWxsKHRoaXMpLHRoaXMuZGlzY29ubmVjdF8oKSx0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5jYWxsYmFja189dm9pZCAwLHRoaXMudGFyZ2V0Xz12b2lkIDAsdGhpcy5zdGF0ZV89Q0xPU0VEKX0sZGVsaXZlcjpmdW5jdGlvbigpe3RoaXMuc3RhdGVfPT1PUEVORUQmJmRpcnR5Q2hlY2sodGhpcyl9LHJlcG9ydF86ZnVuY3Rpb24oYSl7dHJ5e3RoaXMuY2FsbGJhY2tfLmFwcGx5KHRoaXMudGFyZ2V0XyxhKX1jYXRjaChiKXtPYnNlcnZlci5fZXJyb3JUaHJvd25EdXJpbmdDYWxsYmFjaz0hMCxjb25zb2xlLmVycm9yKCJFeGNlcHRpb24gY2F1Z2h0IGR1cmluZyBvYnNlcnZlciBjYWxsYmFjazogIisoYi5zdGFja3x8YikpfX0sZGlzY2FyZENoYW5nZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGVja18odm9pZCAwLCEwKSx0aGlzLnZhbHVlX319O3ZhciBjb2xsZWN0T2JzZXJ2ZXJzPSFoYXNPYnNlcnZlLGFsbE9ic2VydmVycztPYnNlcnZlci5fYWxsT2JzZXJ2ZXJzQ291bnQ9MCxjb2xsZWN0T2JzZXJ2ZXJzJiYoYWxsT2JzZXJ2ZXJzPVtdKTt2YXIgcnVubmluZ01pY3JvdGFza0NoZWNrcG9pbnQ9ITEsaGFzRGVidWdGb3JjZUZ1bGxEZWxpdmVyeT1oYXNPYnNlcnZlJiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gZXZhbCgiJVJ1bk1pY3JvdGFza3MoKSIpLCEwfWNhdGNoKGV4KXtyZXR1cm4hMX19KCk7Z2xvYmFsLlBsYXRmb3JtPWdsb2JhbC5QbGF0Zm9ybXx8e30sZ2xvYmFsLlBsYXRmb3JtLnBlcmZvcm1NaWNyb3Rhc2tDaGVja3BvaW50PWZ1bmN0aW9uKCl7aWYoIXJ1bm5pbmdNaWNyb3Rhc2tDaGVja3BvaW50KXtpZihoYXNEZWJ1Z0ZvcmNlRnVsbERlbGl2ZXJ5KXJldHVybiB2b2lkIGV2YWwoIiVSdW5NaWNyb3Rhc2tzKCkiKTtpZihjb2xsZWN0T2JzZXJ2ZXJzKXtydW5uaW5nTWljcm90YXNrQ2hlY2twb2ludD0hMDt2YXIgY3ljbGVzPTAsYW55Q2hhbmdlZCx0b0NoZWNrO2Rve2N5Y2xlcysrLHRvQ2hlY2s9YWxsT2JzZXJ2ZXJzLGFsbE9ic2VydmVycz1bXSxhbnlDaGFuZ2VkPSExO2Zvcih2YXIgaT0wO2k8dG9DaGVjay5sZW5ndGg7aSsrKXt2YXIgb2JzZXJ2ZXI9dG9DaGVja1tpXTtvYnNlcnZlci5zdGF0ZV89PU9QRU5FRCYmKG9ic2VydmVyLmNoZWNrXygpJiYoYW55Q2hhbmdlZD0hMCksYWxsT2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpKX1ydW5FT01UYXNrcygpJiYoYW55Q2hhbmdlZD0hMCl9d2hpbGUoTUFYX0RJUlRZX0NIRUNLX0NZQ0xFUz5jeWNsZXMmJmFueUNoYW5nZWQpO2dsb2JhbC50ZXN0aW5nRXhwb3NlQ3ljbGVDb3VudCYmKGdsb2JhbC5kaXJ0eUNoZWNrQ3ljbGVDb3VudD1jeWNsZXMpLHJ1bm5pbmdNaWNyb3Rhc2tDaGVja3BvaW50PSExfX19LGNvbGxlY3RPYnNlcnZlcnMmJihnbG9iYWwuUGxhdGZvcm0uY2xlYXJPYnNlcnZlcnM9ZnVuY3Rpb24oKXthbGxPYnNlcnZlcnM9W119KSxPYmplY3RPYnNlcnZlci5wcm90b3R5cGU9Y3JlYXRlT2JqZWN0KHtfX3Byb3RvX186T2JzZXJ2ZXIucHJvdG90eXBlLGFycmF5T2JzZXJ2ZTohMSxjb25uZWN0XzpmdW5jdGlvbigpe2hhc09ic2VydmU/dGhpcy5kaXJlY3RPYnNlcnZlcl89Z2V0T2JzZXJ2ZWRPYmplY3QodGhpcyx0aGlzLnZhbHVlXyx0aGlzLmFycmF5T2JzZXJ2ZSk6dGhpcy5vbGRPYmplY3RfPXRoaXMuY29weU9iamVjdCh0aGlzLnZhbHVlXyl9LGNvcHlPYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI9QXJyYXkuaXNBcnJheShhKT9bXTp7fTtmb3IodmFyIGMgaW4gYSliW2NdPWFbY107cmV0dXJuIEFycmF5LmlzQXJyYXkoYSkmJihiLmxlbmd0aD1hLmxlbmd0aCksYn0sY2hlY2tfOmZ1bmN0aW9uKGEpe3ZhciBiLGM7aWYoaGFzT2JzZXJ2ZSl7aWYoIWEpcmV0dXJuITE7Yz17fSxiPWRpZmZPYmplY3RGcm9tQ2hhbmdlUmVjb3Jkcyh0aGlzLnZhbHVlXyxhLGMpfWVsc2UgYz10aGlzLm9sZE9iamVjdF8sYj1kaWZmT2JqZWN0RnJvbU9sZE9iamVjdCh0aGlzLnZhbHVlXyx0aGlzLm9sZE9iamVjdF8pO3JldHVybiBkaWZmSXNFbXB0eShiKT8hMTooaGFzT2JzZXJ2ZXx8KHRoaXMub2xkT2JqZWN0Xz10aGlzLmNvcHlPYmplY3QodGhpcy52YWx1ZV8pKSx0aGlzLnJlcG9ydF8oW2IuYWRkZWR8fHt9LGIucmVtb3ZlZHx8e30sYi5jaGFuZ2VkfHx7fSxmdW5jdGlvbihhKXtyZXR1cm4gY1thXX1dKSwhMCl9LGRpc2Nvbm5lY3RfOmZ1bmN0aW9uKCl7aGFzT2JzZXJ2ZT8odGhpcy5kaXJlY3RPYnNlcnZlcl8uY2xvc2UoKSx0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDApOnRoaXMub2xkT2JqZWN0Xz12b2lkIDB9LGRlbGl2ZXI6ZnVuY3Rpb24oKXt0aGlzLnN0YXRlXz09T1BFTkVEJiYoaGFzT2JzZXJ2ZT90aGlzLmRpcmVjdE9ic2VydmVyXy5kZWxpdmVyKCExKTpkaXJ0eUNoZWNrKHRoaXMpKX0sZGlzY2FyZENoYW5nZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXJlY3RPYnNlcnZlcl8/dGhpcy5kaXJlY3RPYnNlcnZlcl8uZGVsaXZlcighMCk6dGhpcy5vbGRPYmplY3RfPXRoaXMuY29weU9iamVjdCh0aGlzLnZhbHVlXyksdGhpcy52YWx1ZV99fSksQXJyYXlPYnNlcnZlci5wcm90b3R5cGU9Y3JlYXRlT2JqZWN0KHtfX3Byb3RvX186T2JqZWN0T2JzZXJ2ZXIucHJvdG90eXBlLGFycmF5T2JzZXJ2ZTohMCxjb3B5T2JqZWN0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnNsaWNlKCl9LGNoZWNrXzpmdW5jdGlvbihhKXt2YXIgYjtpZihoYXNPYnNlcnZlKXtpZighYSlyZXR1cm4hMTtiPXByb2plY3RBcnJheVNwbGljZXModGhpcy52YWx1ZV8sYSl9ZWxzZSBiPWNhbGNTcGxpY2VzKHRoaXMudmFsdWVfLDAsdGhpcy52YWx1ZV8ubGVuZ3RoLHRoaXMub2xkT2JqZWN0XywwLHRoaXMub2xkT2JqZWN0Xy5sZW5ndGgpO3JldHVybiBiJiZiLmxlbmd0aD8oaGFzT2JzZXJ2ZXx8KHRoaXMub2xkT2JqZWN0Xz10aGlzLmNvcHlPYmplY3QodGhpcy52YWx1ZV8pKSx0aGlzLnJlcG9ydF8oW2JdKSwhMCk6ITF9fSksQXJyYXlPYnNlcnZlci5hcHBseVNwbGljZXM9ZnVuY3Rpb24oYSxiLGMpe2MuZm9yRWFjaChmdW5jdGlvbihjKXtmb3IodmFyIGQ9W2MuaW5kZXgsYy5yZW1vdmVkLmxlbmd0aF0sZT1jLmluZGV4O2U8Yy5pbmRleCtjLmFkZGVkQ291bnQ7KWQucHVzaChiW2VdKSxlKys7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShhLGQpfSl9LFBhdGhPYnNlcnZlci5wcm90b3R5cGU9Y3JlYXRlT2JqZWN0KHtfX3Byb3RvX186T2JzZXJ2ZXIucHJvdG90eXBlLGNvbm5lY3RfOmZ1bmN0aW9uKCl7aGFzT2JzZXJ2ZSYmKHRoaXMuZGlyZWN0T2JzZXJ2ZXJfPWdldE9ic2VydmVkU2V0KHRoaXMsdGhpcy5vYmplY3RfKSksdGhpcy5jaGVja18odm9pZCAwLCEwKX0sZGlzY29ubmVjdF86ZnVuY3Rpb24oKXt0aGlzLnZhbHVlXz12b2lkIDAsdGhpcy5kaXJlY3RPYnNlcnZlcl8mJih0aGlzLmRpcmVjdE9ic2VydmVyXy5jbG9zZSh0aGlzKSx0aGlzLmRpcmVjdE9ic2VydmVyXz12b2lkIDApfSxpdGVyYXRlT2JqZWN0c186ZnVuY3Rpb24oYSl7dGhpcy5wYXRoXy5pdGVyYXRlT2JqZWN0cyh0aGlzLm9iamVjdF8sYSl9LGNoZWNrXzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMudmFsdWVfO3JldHVybiB0aGlzLnZhbHVlXz10aGlzLnBhdGhfLmdldFZhbHVlRnJvbSh0aGlzLm9iamVjdF8pLGJ8fGFyZVNhbWVWYWx1ZSh0aGlzLnZhbHVlXyxjKT8hMToodGhpcy5yZXBvcnRfKFt0aGlzLnZhbHVlXyxjXSksITApfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXt0aGlzLnBhdGhfJiZ0aGlzLnBhdGhfLnNldFZhbHVlRnJvbSh0aGlzLm9iamVjdF8sYSl9fSk7dmFyIG9ic2VydmVyU2VudGluZWw9e307Q29tcG91bmRPYnNlcnZlci5wcm90b3R5cGU9Y3JlYXRlT2JqZWN0KHtfX3Byb3RvX186T2JzZXJ2ZXIucHJvdG90eXBlLGNvbm5lY3RfOmZ1bmN0aW9uKCl7aWYoaGFzT2JzZXJ2ZSl7Zm9yKHZhciBhLGI9ITEsYz0wO2M8dGhpcy5vYnNlcnZlZF8ubGVuZ3RoO2MrPTIpaWYoYT10aGlzLm9ic2VydmVkX1tjXSxhIT09b2JzZXJ2ZXJTZW50aW5lbCl7Yj0hMDticmVha31iJiYodGhpcy5kaXJlY3RPYnNlcnZlcl89Z2V0T2JzZXJ2ZWRTZXQodGhpcyxhKSl9dGhpcy5jaGVja18odm9pZCAwLCF0aGlzLnJlcG9ydENoYW5nZXNPbk9wZW5fKX0sZGlzY29ubmVjdF86ZnVuY3Rpb24oKXtmb3IodmFyIGE9MDthPHRoaXMub2JzZXJ2ZWRfLmxlbmd0aDthKz0yKXRoaXMub2JzZXJ2ZWRfW2FdPT09b2JzZXJ2ZXJTZW50aW5lbCYmdGhpcy5vYnNlcnZlZF9bYSsxXS5jbG9zZSgpO3RoaXMub2JzZXJ2ZWRfLmxlbmd0aD0wLHRoaXMudmFsdWVfLmxlbmd0aD0wLHRoaXMuZGlyZWN0T2JzZXJ2ZXJfJiYodGhpcy5kaXJlY3RPYnNlcnZlcl8uY2xvc2UodGhpcyksdGhpcy5kaXJlY3RPYnNlcnZlcl89dm9pZCAwKX0sYWRkUGF0aDpmdW5jdGlvbihhLGIpe2lmKHRoaXMuc3RhdGVfIT1VTk9QRU5FRCYmdGhpcy5zdGF0ZV8hPVJFU0VUVElORyl0aHJvdyBFcnJvcigiQ2Fubm90IGFkZCBwYXRocyBvbmNlIHN0YXJ0ZWQuIik7dmFyIGI9Z2V0UGF0aChiKTtpZih0aGlzLm9ic2VydmVkXy5wdXNoKGEsYiksdGhpcy5yZXBvcnRDaGFuZ2VzT25PcGVuXyl7dmFyIGM9dGhpcy5vYnNlcnZlZF8ubGVuZ3RoLzItMTt0aGlzLnZhbHVlX1tjXT1iLmdldFZhbHVlRnJvbShhKX19LGFkZE9ic2VydmVyOmZ1bmN0aW9uKGEpe2lmKHRoaXMuc3RhdGVfIT1VTk9QRU5FRCYmdGhpcy5zdGF0ZV8hPVJFU0VUVElORyl0aHJvdyBFcnJvcigiQ2Fubm90IGFkZCBvYnNlcnZlcnMgb25jZSBzdGFydGVkLiIpO2lmKHRoaXMub2JzZXJ2ZWRfLnB1c2gob2JzZXJ2ZXJTZW50aW5lbCxhKSx0aGlzLnJlcG9ydENoYW5nZXNPbk9wZW5fKXt2YXIgYj10aGlzLm9ic2VydmVkXy5sZW5ndGgvMi0xO3RoaXMudmFsdWVfW2JdPWEub3Blbih0aGlzLmRlbGl2ZXIsdGhpcyl9fSxzdGFydFJlc2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5zdGF0ZV8hPU9QRU5FRCl0aHJvdyBFcnJvcigiQ2FuIG9ubHkgcmVzZXQgd2hpbGUgb3BlbiIpO3RoaXMuc3RhdGVfPVJFU0VUVElORyx0aGlzLmRpc2Nvbm5lY3RfKCl9LGZpbmlzaFJlc2V0OmZ1bmN0aW9uKCl7aWYodGhpcy5zdGF0ZV8hPVJFU0VUVElORyl0aHJvdyBFcnJvcigiQ2FuIG9ubHkgZmluaXNoUmVzZXQgYWZ0ZXIgc3RhcnRSZXNldCIpO3JldHVybiB0aGlzLnN0YXRlXz1PUEVORUQsdGhpcy5jb25uZWN0XygpLHRoaXMudmFsdWVffSxpdGVyYXRlT2JqZWN0c186ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGM9MDtjPHRoaXMub2JzZXJ2ZWRfLmxlbmd0aDtjKz0yKWI9dGhpcy5vYnNlcnZlZF9bY10sYiE9PW9ic2VydmVyU2VudGluZWwmJnRoaXMub2JzZXJ2ZWRfW2MrMV0uaXRlcmF0ZU9iamVjdHMoYixhKX0sY2hlY2tfOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjLGQ9MDtkPHRoaXMub2JzZXJ2ZWRfLmxlbmd0aDtkKz0yKXt2YXIgZSxmPXRoaXMub2JzZXJ2ZWRfW2RdLGc9dGhpcy5vYnNlcnZlZF9bZCsxXTtpZihmPT09b2JzZXJ2ZXJTZW50aW5lbCl7dmFyIGg9ZztlPXRoaXMuc3RhdGVfPT09VU5PUEVORUQ/aC5vcGVuKHRoaXMuZGVsaXZlcix0aGlzKTpoLmRpc2NhcmRDaGFuZ2VzKCl9ZWxzZSBlPWcuZ2V0VmFsdWVGcm9tKGYpO2I/dGhpcy52YWx1ZV9bZC8yXT1lOmFyZVNhbWVWYWx1ZShlLHRoaXMudmFsdWVfW2QvMl0pfHwoYz1jfHxbXSxjW2QvMl09dGhpcy52YWx1ZV9bZC8yXSx0aGlzLnZhbHVlX1tkLzJdPWUpfXJldHVybiBjPyh0aGlzLnJlcG9ydF8oW3RoaXMudmFsdWVfLGMsdGhpcy5vYnNlcnZlZF9dKSwhMCk6ITF9fSksT2JzZXJ2ZXJUcmFuc2Zvcm0ucHJvdG90eXBlPXtvcGVuOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY2FsbGJhY2tfPWEsdGhpcy50YXJnZXRfPWIsdGhpcy52YWx1ZV89dGhpcy5nZXRWYWx1ZUZuXyh0aGlzLm9ic2VydmFibGVfLm9wZW4odGhpcy5vYnNlcnZlZENhbGxiYWNrXyx0aGlzKSksdGhpcy52YWx1ZV99LG9ic2VydmVkQ2FsbGJhY2tfOmZ1bmN0aW9uKGEpe2lmKGE9dGhpcy5nZXRWYWx1ZUZuXyhhKSwhYXJlU2FtZVZhbHVlKGEsdGhpcy52YWx1ZV8pKXt2YXIgYj10aGlzLnZhbHVlXzt0aGlzLnZhbHVlXz1hLHRoaXMuY2FsbGJhY2tfLmNhbGwodGhpcy50YXJnZXRfLHRoaXMudmFsdWVfLGIpfX0sZGlzY2FyZENoYW5nZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZV89dGhpcy5nZXRWYWx1ZUZuXyh0aGlzLm9ic2VydmFibGVfLmRpc2NhcmRDaGFuZ2VzKCkpLHRoaXMudmFsdWVffSxkZWxpdmVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub2JzZXJ2YWJsZV8uZGVsaXZlcigpfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtyZXR1cm4gYT10aGlzLnNldFZhbHVlRm5fKGEpLCF0aGlzLmRvbnRQYXNzVGhyb3VnaFNldF8mJnRoaXMub2JzZXJ2YWJsZV8uc2V0VmFsdWU/dGhpcy5vYnNlcnZhYmxlXy5zZXRWYWx1ZShhKTp2b2lkIDB9LGNsb3NlOmZ1bmN0aW9uKCl7dGhpcy5vYnNlcnZhYmxlXyYmdGhpcy5vYnNlcnZhYmxlXy5jbG9zZSgpLHRoaXMuY2FsbGJhY2tfPXZvaWQgMCx0aGlzLnRhcmdldF89dm9pZCAwLHRoaXMub2JzZXJ2YWJsZV89dm9pZCAwLHRoaXMudmFsdWVfPXZvaWQgMCx0aGlzLmdldFZhbHVlRm5fPXZvaWQgMCx0aGlzLnNldFZhbHVlRm5fPXZvaWQgMH19O3ZhciBleHBlY3RlZFJlY29yZFR5cGVzPXthZGQ6ITAsdXBkYXRlOiEwLCJkZWxldGUiOiEwfSx1cGRhdGVSZWNvcmQ9e29iamVjdDp2b2lkIDAsdHlwZToidXBkYXRlIixuYW1lOnZvaWQgMCxvbGRWYWx1ZTp2b2lkIDB9O09ic2VydmVyLmNyZWF0ZUJpbmRhYmxlUHJvdG90eXBlQWNjZXNzb3I9ZnVuY3Rpb24oYSxiKXt2YXIgYz1iKyJfIixkPWIrIk9ic2VydmFibGVfIjthW2NdPWFbYl0sT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Z2V0OmZ1bmN0aW9uKCl7dmFyIGE9dGhpc1tkXTtyZXR1cm4gYSYmYS5kZWxpdmVyKCksdGhpc1tjXX0sc2V0OmZ1bmN0aW9uKGEpe3ZhciBlPXRoaXNbZF07aWYoZSlyZXR1cm4gdm9pZCBlLnNldFZhbHVlKGEpO3ZhciBmPXRoaXNbY107cmV0dXJuIHRoaXNbY109YSxub3RpZnkodGhpcyxiLGEsZiksYX0sY29uZmlndXJhYmxlOiEwfSl9LE9ic2VydmVyLmJpbmRUb0luc3RhbmNlPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWIrIl8iLGY9YisiT2JzZXJ2YWJsZV8iO2FbZl09Yzt2YXIgZz1hW2VdLGg9Yy5vcGVuKGZ1bmN0aW9uKGMsZCl7YVtlXT1jLG5vdGlmeShhLGIsYyxkKX0pO2lmKGQmJiFhcmVTYW1lVmFsdWUoZyxoKSl7dmFyIGk9ZChnLGgpO2FyZVNhbWVWYWx1ZShoLGkpfHwoaD1pLGMuc2V0VmFsdWUmJmMuc2V0VmFsdWUoaCkpfXJldHVybiBhW2VdPWgsbm90aWZ5KGEsYixoLGcpLHtjbG9zZTpmdW5jdGlvbigpe2MuY2xvc2UoKSxhW2ZdPXZvaWQgMH19fTt2YXIgRURJVF9MRUFWRT0wLEVESVRfVVBEQVRFPTEsRURJVF9BREQ9MixFRElUX0RFTEVURT0zO0FycmF5U3BsaWNlLnByb3RvdHlwZT17Y2FsY0VkaXREaXN0YW5jZXM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2Zvcih2YXIgZz1mLWUrMSxoPWMtYisxLGk9bmV3IEFycmF5KGcpLGo9MDtnPmo7aisrKWlbal09bmV3IEFycmF5KGgpLGlbal1bMF09ajtmb3IodmFyIGs9MDtoPms7aysrKWlbMF1ba109aztmb3IodmFyIGo9MTtnPmo7aisrKWZvcih2YXIgaz0xO2g+aztrKyspaWYodGhpcy5lcXVhbHMoYVtiK2stMV0sZFtlK2otMV0pKWlbal1ba109aVtqLTFdW2stMV07ZWxzZXt2YXIgbD1pW2otMV1ba10rMSxtPWlbal1bay0xXSsxO2lbal1ba109bT5sP2w6bX1yZXR1cm4gaX0sc3BsaWNlT3BlcmF0aW9uc0Zyb21FZGl0RGlzdGFuY2VzOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1hLmxlbmd0aC0xLGM9YVswXS5sZW5ndGgtMSxkPWFbYl1bY10sZT1bXTtiPjB8fGM+MDspaWYoMCE9YilpZigwIT1jKXt2YXIgZixnPWFbYi0xXVtjLTFdLGg9YVtiLTFdW2NdLGk9YVtiXVtjLTFdO2Y9aT5oP2c+aD9oOmc6Zz5pP2k6ZyxmPT1nPyhnPT1kP2UucHVzaChFRElUX0xFQVZFKTooZS5wdXNoKEVESVRfVVBEQVRFKSxkPWcpLGItLSxjLS0pOmY9PWg/KGUucHVzaChFRElUX0RFTEVURSksYi0tLGQ9aCk6KGUucHVzaChFRElUX0FERCksYy0tLGQ9aSl9ZWxzZSBlLnB1c2goRURJVF9ERUxFVEUpLGItLTtlbHNlIGUucHVzaChFRElUX0FERCksYy0tO3JldHVybiBlLnJldmVyc2UoKSxlfSxjYWxjU3BsaWNlczpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9MCxoPTAsaT1NYXRoLm1pbihjLWIsZi1lKTtpZigwPT1iJiYwPT1lJiYoZz10aGlzLnNoYXJlZFByZWZpeChhLGQsaSkpLGM9PWEubGVuZ3RoJiZmPT1kLmxlbmd0aCYmKGg9dGhpcy5zaGFyZWRTdWZmaXgoYSxkLGktZykpLGIrPWcsZSs9ZyxjLT1oLGYtPWgsYy1iPT0wJiZmLWU9PTApcmV0dXJuW107aWYoYj09Yyl7Zm9yKHZhciBqPW5ld1NwbGljZShiLFtdLDApO2Y+ZTspai5yZW1vdmVkLnB1c2goZFtlKytdKTtyZXR1cm5bal19aWYoZT09ZilyZXR1cm5bbmV3U3BsaWNlKGIsW10sYy1iKV07Zm9yKHZhciBrPXRoaXMuc3BsaWNlT3BlcmF0aW9uc0Zyb21FZGl0RGlzdGFuY2VzKHRoaXMuY2FsY0VkaXREaXN0YW5jZXMoYSxiLGMsZCxlLGYpKSxqPXZvaWQgMCxsPVtdLG09YixuPWUsbz0wO288ay5sZW5ndGg7bysrKXN3aXRjaChrW29dKXtjYXNlIEVESVRfTEVBVkU6aiYmKGwucHVzaChqKSxqPXZvaWQgMCksbSsrLG4rKzticmVhaztjYXNlIEVESVRfVVBEQVRFOmp8fChqPW5ld1NwbGljZShtLFtdLDApKSxqLmFkZGVkQ291bnQrKyxtKyssai5yZW1vdmVkLnB1c2goZFtuXSksbisrO2JyZWFrO2Nhc2UgRURJVF9BREQ6anx8KGo9bmV3U3BsaWNlKG0sW10sMCkpLGouYWRkZWRDb3VudCsrLG0rKzticmVhaztjYXNlIEVESVRfREVMRVRFOmp8fChqPW5ld1NwbGljZShtLFtdLDApKSxqLnJlbW92ZWQucHVzaChkW25dKSxuKyt9cmV0dXJuIGomJmwucHVzaChqKSxsfSxzaGFyZWRQcmVmaXg6ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD0wO2M+ZDtkKyspaWYoIXRoaXMuZXF1YWxzKGFbZF0sYltkXSkpcmV0dXJuIGQ7cmV0dXJuIGN9LHNoYXJlZFN1ZmZpeDpmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWEubGVuZ3RoLGU9Yi5sZW5ndGgsZj0wO2M+ZiYmdGhpcy5lcXVhbHMoYVstLWRdLGJbLS1lXSk7KWYrKztyZXR1cm4gZn0sY2FsY3VsYXRlU3BsaWNlczpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmNhbGNTcGxpY2VzKGEsMCxhLmxlbmd0aCxiLDAsYi5sZW5ndGgpfSxlcXVhbHM6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09PWJ9fTt2YXIgYXJyYXlTcGxpY2U9bmV3IEFycmF5U3BsaWNlO2dsb2JhbC5PYnNlcnZlcj1PYnNlcnZlcixnbG9iYWwuT2JzZXJ2ZXIucnVuRU9NXz1ydW5FT00sZ2xvYmFsLk9ic2VydmVyLm9ic2VydmVyU2VudGluZWxfPW9ic2VydmVyU2VudGluZWwsZ2xvYmFsLk9ic2VydmVyLmhhc09iamVjdE9ic2VydmU9aGFzT2JzZXJ2ZSxnbG9iYWwuQXJyYXlPYnNlcnZlcj1BcnJheU9ic2VydmVyLGdsb2JhbC5BcnJheU9ic2VydmVyLmNhbGN1bGF0ZVNwbGljZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXJyYXlTcGxpY2UuY2FsY3VsYXRlU3BsaWNlcyhhLGIpfSxnbG9iYWwuQXJyYXlTcGxpY2U9QXJyYXlTcGxpY2UsZ2xvYmFsLk9iamVjdE9ic2VydmVyPU9iamVjdE9ic2VydmVyLGdsb2JhbC5QYXRoT2JzZXJ2ZXI9UGF0aE9ic2VydmVyLGdsb2JhbC5Db21wb3VuZE9ic2VydmVyPUNvbXBvdW5kT2JzZXJ2ZXIsZ2xvYmFsLlBhdGg9UGF0aCxnbG9iYWwuT2JzZXJ2ZXJUcmFuc2Zvcm09T2JzZXJ2ZXJUcmFuc2Zvcm19KCJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwmJiJ1bmRlZmluZWQiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGU/Z2xvYmFsOnRoaXN8fHdpbmRvdyksUGxhdGZvcm0uZmxhZ3Muc2hhZG93Pyh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGw9e30sZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7aWYoIWEpdGhyb3cgbmV3IEVycm9yKCJBc3NlcnRpb24gZmFpbGVkIil9ZnVuY3Rpb24gYyhhLGIpe2Zvcih2YXIgYz1NKGIpLGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTtMKGEsZSxOKGIsZSkpfXJldHVybiBhfWZ1bmN0aW9uIGQoYSxiKXtmb3IodmFyIGM9TShiKSxkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07c3dpdGNoKGUpe2Nhc2UiYXJndW1lbnRzIjpjYXNlImNhbGxlciI6Y2FzZSJsZW5ndGgiOmNhc2UibmFtZSI6Y2FzZSJwcm90b3R5cGUiOmNhc2UidG9TdHJpbmciOmNvbnRpbnVlfUwoYSxlLE4oYixlKSl9cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGg7YysrKWlmKGJbY11pbiBhKXJldHVybiBiW2NdfWZ1bmN0aW9uIGYoYSxiLGMpe08udmFsdWU9YyxMKGEsYixPKX1mdW5jdGlvbiBnKGEpe3ZhciBiPWEuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoYSksYz1GLmdldChiKTtpZihjKXJldHVybiBjO3ZhciBkPWcoYiksZT11KGQpO3JldHVybiByKGIsZSxhKSxlfWZ1bmN0aW9uIGgoYSxiKXtwKGEsYiwhMCl9ZnVuY3Rpb24gaShhLGIpe3AoYixhLCExKX1mdW5jdGlvbiBqKGEpe3JldHVybi9eb25bYS16XSskLy50ZXN0KGEpfWZ1bmN0aW9uIGsoYSl7cmV0dXJuL15cd1thLXpBLVpfMC05XSokLy50ZXN0KGEpfWZ1bmN0aW9uIGwoYSl7cmV0dXJuIEkmJmsoYSk/bmV3IEZ1bmN0aW9uKCJyZXR1cm4gdGhpcy5pbXBsLiIrYSk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsW2FdfX1mdW5jdGlvbiBtKGEpe3JldHVybiBJJiZrKGEpP25ldyBGdW5jdGlvbigidiIsInRoaXMuaW1wbC4iK2ErIiA9IHYiKTpmdW5jdGlvbihiKXt0aGlzLmltcGxbYV09Yn19ZnVuY3Rpb24gbihhKXtyZXR1cm4gSSYmayhhKT9uZXcgRnVuY3Rpb24oInJldHVybiB0aGlzLmltcGwuIithKyIuYXBwbHkodGhpcy5pbXBsLCBhcmd1bWVudHMpIik6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsW2FdLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfX1mdW5jdGlvbiBvKGEsYil7dHJ5e3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEsYil9Y2F0Y2goYyl7cmV0dXJuIFF9fWZ1bmN0aW9uIHAoYixjLGQpe2Zvcih2YXIgZT1NKGIpLGY9MDtmPGUubGVuZ3RoO2YrKyl7dmFyIGc9ZVtmXTtpZigicG9seW1lckJsYWNrTGlzdF8iIT09ZyYmIShnIGluIGN8fGIucG9seW1lckJsYWNrTGlzdF8mJmIucG9seW1lckJsYWNrTGlzdF9bZ10pKXtQJiZiLl9fbG9va3VwR2V0dGVyX18oZyk7dmFyIGgsaSxrPW8oYixnKTtpZihkJiYiZnVuY3Rpb24iPT10eXBlb2Ygay52YWx1ZSljW2ddPW4oZyk7ZWxzZXt2YXIgcD1qKGcpO2g9cD9hLmdldEV2ZW50SGFuZGxlckdldHRlcihnKTpsKGcpLChrLndyaXRhYmxlfHxrLnNldCkmJihpPXA/YS5nZXRFdmVudEhhbmRsZXJTZXR0ZXIoZyk6bShnKSksTChjLGcse2dldDpoLHNldDppLGNvbmZpZ3VyYWJsZTprLmNvbmZpZ3VyYWJsZSxlbnVtZXJhYmxlOmsuZW51bWVyYWJsZX0pfX19fWZ1bmN0aW9uIHEoYSxiLGMpe3ZhciBlPWEucHJvdG90eXBlO3IoZSxiLGMpLGQoYixhKX1mdW5jdGlvbiByKGEsYyxkKXt2YXIgZT1jLnByb3RvdHlwZTtiKHZvaWQgMD09PUYuZ2V0KGEpKSxGLnNldChhLGMpLEcuc2V0KGUsYSksaChhLGUpLGQmJmkoZSxkKSxmKGUsImNvbnN0cnVjdG9yIixjKSxjLnByb3RvdHlwZT1lfWZ1bmN0aW9uIHMoYSxiKXtyZXR1cm4gRi5nZXQoYi5wcm90b3R5cGUpPT09YX1mdW5jdGlvbiB0KGEpe3ZhciBiPU9iamVjdC5nZXRQcm90b3R5cGVPZihhKSxjPWcoYiksZD11KGMpO3JldHVybiByKGIsZCxhKSxkfWZ1bmN0aW9uIHUoYSl7ZnVuY3Rpb24gYihiKXthLmNhbGwodGhpcyxiKX12YXIgYz1PYmplY3QuY3JlYXRlKGEucHJvdG90eXBlKTtyZXR1cm4gYy5jb25zdHJ1Y3Rvcj1iLGIucHJvdG90eXBlPWMsYn1mdW5jdGlvbiB2KGEpe3JldHVybiBhIGluc3RhbmNlb2YgSC5FdmVudFRhcmdldHx8YSBpbnN0YW5jZW9mIEguRXZlbnR8fGEgaW5zdGFuY2VvZiBILlJhbmdlfHxhIGluc3RhbmNlb2YgSC5ET01JbXBsZW1lbnRhdGlvbnx8YSBpbnN0YW5jZW9mIEguQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfHxILldlYkdMUmVuZGVyaW5nQ29udGV4dCYmYSBpbnN0YW5jZW9mIEguV2ViR0xSZW5kZXJpbmdDb250ZXh0fWZ1bmN0aW9uIHcoYSl7cmV0dXJuIFMmJmEgaW5zdGFuY2VvZiBTfHxhIGluc3RhbmNlb2YgVXx8YSBpbnN0YW5jZW9mIFR8fGEgaW5zdGFuY2VvZiBWfHxhIGluc3RhbmNlb2YgV3x8YSBpbnN0YW5jZW9mIFJ8fGEgaW5zdGFuY2VvZiBYfHxZJiZhIGluc3RhbmNlb2YgWXx8WiYmYSBpbnN0YW5jZW9mIFp9ZnVuY3Rpb24geChhKXtyZXR1cm4gbnVsbD09PWE/bnVsbDooYih3KGEpKSxhLnBvbHltZXJXcmFwcGVyX3x8KGEucG9seW1lcldyYXBwZXJfPW5ldyhnKGEpKShhKSkpfWZ1bmN0aW9uIHkoYSl7cmV0dXJuIG51bGw9PT1hP251bGw6KGIodihhKSksYS5pbXBsKX1mdW5jdGlvbiB6KGEpe3JldHVybiBhJiZ2KGEpP3koYSk6YX1mdW5jdGlvbiBBKGEpe3JldHVybiBhJiYhdihhKT94KGEpOmF9ZnVuY3Rpb24gQihhLGMpe251bGwhPT1jJiYoYih3KGEpKSxiKHZvaWQgMD09PWN8fHYoYykpLGEucG9seW1lcldyYXBwZXJfPWMpfWZ1bmN0aW9uIEMoYSxiLGMpeyQuZ2V0PWMsTChhLnByb3RvdHlwZSxiLCQpfWZ1bmN0aW9uIEQoYSxiKXtDKGEsYixmdW5jdGlvbigpe3JldHVybiB4KHRoaXMuaW1wbFtiXSl9KX1mdW5jdGlvbiBFKGEsYil7YS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2IuZm9yRWFjaChmdW5jdGlvbihiKXthLnByb3RvdHlwZVtiXT1mdW5jdGlvbigpe3ZhciBhPUEodGhpcyk7cmV0dXJuIGFbYl0uYXBwbHkoYSxhcmd1bWVudHMpfX0pfSl9dmFyIEY9bmV3IFdlYWtNYXAsRz1uZXcgV2Vha01hcCxIPU9iamVjdC5jcmVhdGUobnVsbCksST0hKCJzZWN1cml0eVBvbGljeSJpbiBkb2N1bWVudCl8fGRvY3VtZW50LnNlY3VyaXR5UG9saWN5LmFsbG93c0V2YWw7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjaHJvbWUmJmNocm9tZS5hcHAmJmNocm9tZS5hcHAucnVudGltZSYmKEk9ITEpLEkpdHJ5e3ZhciBKPW5ldyBGdW5jdGlvbigiIiwicmV0dXJuIHRydWU7Iik7ST1KKCl9Y2F0Y2goSyl7ST0hMX12YXIgTD1PYmplY3QuZGVmaW5lUHJvcGVydHksTT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyxOPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsTz17dmFsdWU6dm9pZCAwLGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwfTtNKHdpbmRvdyk7dmFyIFA9L0ZpcmVmb3gvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksUT17Z2V0OmZ1bmN0aW9uKCl7fSxzZXQ6ZnVuY3Rpb24oKXt9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfSxSPXdpbmRvdy5ET01JbXBsZW1lbnRhdGlvbixTPXdpbmRvdy5FdmVudFRhcmdldCxUPXdpbmRvdy5FdmVudCxVPXdpbmRvdy5Ob2RlLFY9d2luZG93LldpbmRvdyxXPXdpbmRvdy5SYW5nZSxYPXdpbmRvdy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsWT13aW5kb3cuV2ViR0xSZW5kZXJpbmdDb250ZXh0LFo9d2luZG93LlNWR0VsZW1lbnRJbnN0YW5jZSwkPXtnZXQ6dm9pZCAwLGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfTthLmFzc2VydD1iLGEuY29uc3RydWN0b3JUYWJsZT1GLGEuZGVmaW5lR2V0dGVyPUMsYS5kZWZpbmVXcmFwR2V0dGVyPUQsYS5mb3J3YXJkTWV0aG9kc1RvV3JhcHBlcj1FLGEuaXNXcmFwcGVyPXYsYS5pc1dyYXBwZXJGb3I9cyxhLm1peGluPWMsYS5uYXRpdmVQcm90b3R5cGVUYWJsZT1HLGEub25lT2Y9ZSxhLnJlZ2lzdGVyT2JqZWN0PXQsYS5yZWdpc3RlcldyYXBwZXI9cSxhLnJld3JhcD1CLGEudW53cmFwPXksYS51bndyYXBJZk5lZWRlZD16LGEud3JhcD14LGEud3JhcElmTmVlZGVkPUEsYS53cmFwcGVycz1IfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKCl7Zz0hMTt2YXIgYT1mLnNsaWNlKDApO2Y9W107Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspYVtiXSgpfWZ1bmN0aW9uIGMoYSl7Zi5wdXNoKGEpLGd8fChnPSEwLGQoYiwwKSl9dmFyIGQsZT13aW5kb3cuTXV0YXRpb25PYnNlcnZlcixmPVtdLGc9ITE7aWYoZSl7dmFyIGg9MSxpPW5ldyBlKGIpLGo9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaCk7aS5vYnNlcnZlKGose2NoYXJhY3RlckRhdGE6ITB9KSxkPWZ1bmN0aW9uKCl7aD0oaCsxKSUyLGouZGF0YT1ofX1lbHNlIGQ9d2luZG93LnNldEltbWVkaWF0ZXx8d2luZG93LnNldFRpbWVvdXQ7YS5zZXRFbmRPZk1pY3JvdGFzaz1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKCl7cHx8KGsoYykscD0hMCl9ZnVuY3Rpb24gYygpe3A9ITE7ZG8gZm9yKHZhciBhPW8uc2xpY2UoKSxiPSExLGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQudGFrZVJlY29yZHMoKTtmKGQpLGUubGVuZ3RoJiYoZC5jYWxsYmFja18oZSxkKSxiPSEwKX13aGlsZShiKX1mdW5jdGlvbiBkKGEsYil7dGhpcy50eXBlPWEsdGhpcy50YXJnZXQ9Yix0aGlzLmFkZGVkTm9kZXM9bmV3IG0uTm9kZUxpc3QsdGhpcy5yZW1vdmVkTm9kZXM9bmV3IG0uTm9kZUxpc3QsdGhpcy5wcmV2aW91c1NpYmxpbmc9bnVsbCx0aGlzLm5leHRTaWJsaW5nPW51bGwsdGhpcy5hdHRyaWJ1dGVOYW1lPW51bGwsdGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9bnVsbCx0aGlzLm9sZFZhbHVlPW51bGx9ZnVuY3Rpb24gZShhLGIpe2Zvcig7YTthPWEucGFyZW50Tm9kZSl7dmFyIGM9bi5nZXQoYSk7aWYoYylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTtlLm9wdGlvbnMuc3VidHJlZSYmZS5hZGRUcmFuc2llbnRPYnNlcnZlcihiKX19fWZ1bmN0aW9uIGYoYSl7Zm9yKHZhciBiPTA7YjxhLm5vZGVzXy5sZW5ndGg7YisrKXt2YXIgYz1hLm5vZGVzX1tiXSxkPW4uZ2V0KGMpO2lmKCFkKXJldHVybjtmb3IodmFyIGU9MDtlPGQubGVuZ3RoO2UrKyl7dmFyIGY9ZFtlXTtmLm9ic2VydmVyPT09YSYmZi5yZW1vdmVUcmFuc2llbnRPYnNlcnZlcnMoKX19fWZ1bmN0aW9uIGcoYSxjLGUpe2Zvcih2YXIgZj1PYmplY3QuY3JlYXRlKG51bGwpLGc9T2JqZWN0LmNyZWF0ZShudWxsKSxoPWE7aDtoPWgucGFyZW50Tm9kZSl7dmFyIGk9bi5nZXQoaCk7aWYoaSlmb3IodmFyIGo9MDtqPGkubGVuZ3RoO2orKyl7dmFyIGs9aVtqXSxsPWsub3B0aW9ucztpZigoaD09PWF8fGwuc3VidHJlZSkmJiEoImF0dHJpYnV0ZXMiPT09YyYmIWwuYXR0cmlidXRlc3x8ImF0dHJpYnV0ZXMiPT09YyYmbC5hdHRyaWJ1dGVGaWx0ZXImJihudWxsIT09ZS5uYW1lc3BhY2V8fC0xPT09bC5hdHRyaWJ1dGVGaWx0ZXIuaW5kZXhPZihlLm5hbWUpKXx8ImNoYXJhY3RlckRhdGEiPT09YyYmIWwuY2hhcmFjdGVyRGF0YXx8ImNoaWxkTGlzdCI9PT1jJiYhbC5jaGlsZExpc3QpKXt2YXIgbT1rLm9ic2VydmVyO2ZbbS51aWRfXT1tLCgiYXR0cmlidXRlcyI9PT1jJiZsLmF0dHJpYnV0ZU9sZFZhbHVlfHwiY2hhcmFjdGVyRGF0YSI9PT1jJiZsLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSkmJihnW20udWlkX109ZS5vbGRWYWx1ZSl9fX12YXIgbz0hMTtmb3IodmFyIHAgaW4gZil7dmFyIG09ZltwXSxxPW5ldyBkKGMsYSk7Im5hbWUiaW4gZSYmIm5hbWVzcGFjZSJpbiBlJiYocS5hdHRyaWJ1dGVOYW1lPWUubmFtZSxxLmF0dHJpYnV0ZU5hbWVzcGFjZT1lLm5hbWVzcGFjZSksZS5hZGRlZE5vZGVzJiYocS5hZGRlZE5vZGVzPWUuYWRkZWROb2RlcyksZS5yZW1vdmVkTm9kZXMmJihxLnJlbW92ZWROb2Rlcz1lLnJlbW92ZWROb2RlcyksZS5wcmV2aW91c1NpYmxpbmcmJihxLnByZXZpb3VzU2libGluZz1lLnByZXZpb3VzU2libGluZyksZS5uZXh0U2libGluZyYmKHEubmV4dFNpYmxpbmc9ZS5uZXh0U2libGluZyksdm9pZCAwIT09Z1twXSYmKHEub2xkVmFsdWU9Z1twXSksbS5yZWNvcmRzXy5wdXNoKHEpLG89ITB9byYmYigpfWZ1bmN0aW9uIGgoYSl7aWYodGhpcy5jaGlsZExpc3Q9ISFhLmNoaWxkTGlzdCx0aGlzLnN1YnRyZWU9ISFhLnN1YnRyZWUsdGhpcy5hdHRyaWJ1dGVzPSJhdHRyaWJ1dGVzImluIGF8fCEoImF0dHJpYnV0ZU9sZFZhbHVlImluIGF8fCJhdHRyaWJ1dGVGaWx0ZXIiaW4gYSk/ISFhLmF0dHJpYnV0ZXM6ITAsdGhpcy5jaGFyYWN0ZXJEYXRhPSJjaGFyYWN0ZXJEYXRhT2xkVmFsdWUiaW4gYSYmISgiY2hhcmFjdGVyRGF0YSJpbiBhKT8hMDohIWEuY2hhcmFjdGVyRGF0YSwhdGhpcy5hdHRyaWJ1dGVzJiYoYS5hdHRyaWJ1dGVPbGRWYWx1ZXx8ImF0dHJpYnV0ZUZpbHRlciJpbiBhKXx8IXRoaXMuY2hhcmFjdGVyRGF0YSYmYS5jaGFyYWN0ZXJEYXRhT2xkVmFsdWUpdGhyb3cgbmV3IFR5cGVFcnJvcjtpZih0aGlzLmNoYXJhY3RlckRhdGE9ISFhLmNoYXJhY3RlckRhdGEsdGhpcy5hdHRyaWJ1dGVPbGRWYWx1ZT0hIWEuYXR0cmlidXRlT2xkVmFsdWUsdGhpcy5jaGFyYWN0ZXJEYXRhT2xkVmFsdWU9ISFhLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSwiYXR0cmlidXRlRmlsdGVyImluIGEpe2lmKG51bGw9PWEuYXR0cmlidXRlRmlsdGVyfHwib2JqZWN0IiE9dHlwZW9mIGEuYXR0cmlidXRlRmlsdGVyKXRocm93IG5ldyBUeXBlRXJyb3I7dGhpcy5hdHRyaWJ1dGVGaWx0ZXI9cS5jYWxsKGEuYXR0cmlidXRlRmlsdGVyKX1lbHNlIHRoaXMuYXR0cmlidXRlRmlsdGVyPW51bGx9ZnVuY3Rpb24gaShhKXt0aGlzLmNhbGxiYWNrXz1hLHRoaXMubm9kZXNfPVtdLHRoaXMucmVjb3Jkc189W10sdGhpcy51aWRfPSsrcixvLnB1c2godGhpcyl9ZnVuY3Rpb24gaihhLGIsYyl7dGhpcy5vYnNlcnZlcj1hLHRoaXMudGFyZ2V0PWIsdGhpcy5vcHRpb25zPWMsdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdfXZhciBrPWEuc2V0RW5kT2ZNaWNyb3Rhc2ssbD1hLndyYXBJZk5lZWRlZCxtPWEud3JhcHBlcnMsbj1uZXcgV2Vha01hcCxvPVtdLHA9ITEscT1BcnJheS5wcm90b3R5cGUuc2xpY2Uscj0wO2kucHJvdG90eXBlPXtvYnNlcnZlOmZ1bmN0aW9uKGEsYil7YT1sKGEpO3ZhciBjLGQ9bmV3IGgoYiksZT1uLmdldChhKTtlfHxuLnNldChhLGU9W10pO2Zvcih2YXIgZj0wO2Y8ZS5sZW5ndGg7ZisrKWVbZl0ub2JzZXJ2ZXI9PT10aGlzJiYoYz1lW2ZdLGMucmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzKCksYy5vcHRpb25zPWQpO2N8fChjPW5ldyBqKHRoaXMsYSxkKSxlLnB1c2goYyksdGhpcy5ub2Rlc18ucHVzaChhKSl9LGRpc2Nvbm5lY3Q6ZnVuY3Rpb24oKXt0aGlzLm5vZGVzXy5mb3JFYWNoKGZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1uLmdldChhKSxjPTA7YzxiLmxlbmd0aDtjKyspe3ZhciBkPWJbY107aWYoZC5vYnNlcnZlcj09PXRoaXMpe2Iuc3BsaWNlKGMsMSk7YnJlYWt9fX0sdGhpcyksdGhpcy5yZWNvcmRzXz1bXX0sdGFrZVJlY29yZHM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnJlY29yZHNfO3JldHVybiB0aGlzLnJlY29yZHNfPVtdLGF9fSxqLnByb3RvdHlwZT17YWRkVHJhbnNpZW50T2JzZXJ2ZXI6ZnVuY3Rpb24oYSl7aWYoYSE9PXRoaXMudGFyZ2V0KXt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChhKTt2YXIgYj1uLmdldChhKTtifHxuLnNldChhLGI9W10pLGIucHVzaCh0aGlzKX19LHJlbW92ZVRyYW5zaWVudE9ic2VydmVyczpmdW5jdGlvbigpe3ZhciBhPXRoaXMudHJhbnNpZW50T2JzZXJ2ZWROb2Rlczt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W107Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspZm9yKHZhciBjPWFbYl0sZD1uLmdldChjKSxlPTA7ZTxkLmxlbmd0aDtlKyspaWYoZFtlXT09PXRoaXMpe2Quc3BsaWNlKGUsMSk7YnJlYWt9fX0sYS5lbnF1ZXVlTXV0YXRpb249ZyxhLnJlZ2lzdGVyVHJhbnNpZW50T2JzZXJ2ZXJzPWUsYS53cmFwcGVycy5NdXRhdGlvbk9ic2VydmVyPWksYS53cmFwcGVycy5NdXRhdGlvblJlY29yZD1kfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEsYil7dGhpcy5yb290PWEsdGhpcy5wYXJlbnQ9Yn1mdW5jdGlvbiBjKGEsYil7aWYoYS50cmVlU2NvcGVfIT09Yil7YS50cmVlU2NvcGVfPWI7Zm9yKHZhciBkPWEuc2hhZG93Um9vdDtkO2Q9ZC5vbGRlclNoYWRvd1Jvb3QpZC50cmVlU2NvcGVfLnBhcmVudD1iO2Zvcih2YXIgZT1hLmZpcnN0Q2hpbGQ7ZTtlPWUubmV4dFNpYmxpbmcpYyhlLGIpfX1mdW5jdGlvbiBkKGEpe2lmKGEudHJlZVNjb3BlXylyZXR1cm4gYS50cmVlU2NvcGVfO3ZhciBjLGU9YS5wYXJlbnROb2RlO3JldHVybiBjPWU/ZChlKTpuZXcgYihhLG51bGwpLGEudHJlZVNjb3BlXz1jfWIucHJvdG90eXBlPXtnZXQgcmVuZGVyZXIoKXtyZXR1cm4gdGhpcy5yb290IGluc3RhbmNlb2YgYS53cmFwcGVycy5TaGFkb3dSb290P2EuZ2V0UmVuZGVyZXJGb3JIb3N0KHRoaXMucm9vdC5ob3N0KTpudWxsfSxjb250YWluczpmdW5jdGlvbihhKXtmb3IoO2E7YT1hLnBhcmVudClpZihhPT09dGhpcylyZXR1cm4hMDtyZXR1cm4hMX19LGEuVHJlZVNjb3BlPWIsYS5nZXRUcmVlU2NvcGU9ZCxhLnNldFRyZWVTY29wZT1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3JldHVybiBhIGluc3RhbmNlb2YgUi5TaGFkb3dSb290fWZ1bmN0aW9uIGMoYSl7dmFyIGI9YS5sb2NhbE5hbWU7cmV0dXJuImNvbnRlbnQiPT09Ynx8InNoYWRvdyI9PT1ifWZ1bmN0aW9uIGQoYSl7cmV0dXJuISFhLnNoYWRvd1Jvb3R9ZnVuY3Rpb24gZShhKXt2YXIgYjtyZXR1cm4gYS5wYXJlbnROb2RlfHwoYj1hLmRlZmF1bHRWaWV3KSYmUShiKXx8bnVsbH1mdW5jdGlvbiBmKGYsZyxoKXtpZihoLmxlbmd0aClyZXR1cm4gaC5zaGlmdCgpO2lmKGIoZikpcmV0dXJuIGooZil8fGYuaG9zdDt2YXIgaT1hLmV2ZW50UGFyZW50c1RhYmxlLmdldChmKTtpZihpKXtmb3IodmFyIGs9MTtrPGkubGVuZ3RoO2srKyloW2stMV09aVtrXTtyZXR1cm4gaVswXX1pZihnJiZjKGYpKXt2YXIgbD1mLnBhcmVudE5vZGU7aWYobCYmZChsKSlmb3IodmFyIG09YS5nZXRTaGFkb3dUcmVlcyhsKSxuPWooZyksaz0wO2s8bS5sZW5ndGg7aysrKWlmKG1ba10uY29udGFpbnMobikpcmV0dXJuIG59cmV0dXJuIGUoZil9ZnVuY3Rpb24gZyhhKXtmb3IodmFyIGQ9W10sZT1hLGc9W10saT1bXTtlOyl7dmFyIGo9bnVsbDtpZihjKGUpKXtqPWgoZCk7dmFyIGs9ZFtkLmxlbmd0aC0xXXx8ZTtkLnB1c2goayl9ZWxzZSBkLmxlbmd0aHx8ZC5wdXNoKGUpO3ZhciBsPWRbZC5sZW5ndGgtMV07Zy5wdXNoKHt0YXJnZXQ6bCxjdXJyZW50VGFyZ2V0OmV9KSxiKGUpJiZkLnBvcCgpLGU9ZihlLGosaSl9cmV0dXJuIGd9ZnVuY3Rpb24gaChhKXtmb3IodmFyIGI9YS5sZW5ndGgtMTtiPj0wO2ItLSlpZighYyhhW2JdKSlyZXR1cm4gYVtiXTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBpKGEsZCl7Zm9yKHZhciBlPVtdO2E7KXtmb3IodmFyIGc9W10saT1kLGo9dm9pZCAwO2k7KXt2YXIgbT1udWxsO2lmKGcubGVuZ3RoKXtpZihjKGkpJiYobT1oKGcpLGsoaikpKXt2YXIgbj1nW2cubGVuZ3RoLTFdO2cucHVzaChuKX19ZWxzZSBnLnB1c2goaSk7aWYobChpLGEpKXJldHVybiBnW2cubGVuZ3RoLTFdO2IoaSkmJmcucG9wKCksaj1pLGk9ZihpLG0sZSl9YT1iKGEpP2EuaG9zdDphLnBhcmVudE5vZGV9fWZ1bmN0aW9uIGooYil7cmV0dXJuIGEuaW5zZXJ0aW9uUGFyZW50VGFibGUuZ2V0KGIpfWZ1bmN0aW9uIGsoYSl7cmV0dXJuIGooYSl9ZnVuY3Rpb24gbChhLGIpe3JldHVybiBNKGEpPT09TShiKX1mdW5jdGlvbiBtKGEpe2lmKCFULmdldChhKSYmKFQuc2V0KGEsITApLG8oUShhKSxRKGEudGFyZ2V0KSksSykpe3ZhciBiPUs7dGhyb3cgSz1udWxsLGJ9fWZ1bmN0aW9uIG4oYSl7c3dpdGNoKGEudHlwZSl7Y2FzZSJiZWZvcmV1bmxvYWQiOmNhc2UibG9hZCI6Y2FzZSJ1bmxvYWQiOnJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIG8oYixjKXtpZihVLmdldChiKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWRTdGF0ZUVycm9yIik7VS5zZXQoYiwhMCksYS5yZW5kZXJBbGxQZW5kaW5nKCk7dmFyIGQ9ZyhjKTtyZXR1cm4gMj09PWQubGVuZ3RoJiZkWzBdLnRhcmdldCBpbnN0YW5jZW9mIFIuRG9jdW1lbnQmJm4oYikmJmQuc2hpZnQoKSxhYi5zZXQoYixkKSxwKGIsZCkmJnEoYixkKSYmcihiLGQpLFkuc2V0KGIsdS5OT05FKSxXLmRlbGV0ZShiLG51bGwpLFUuZGVsZXRlKGIpLGIuZGVmYXVsdFByZXZlbnRlZH1mdW5jdGlvbiBwKGEsYil7Zm9yKHZhciBjLGQ9Yi5sZW5ndGgtMTtkPjA7ZC0tKXt2YXIgZT1iW2RdLnRhcmdldCxmPWJbZF0uY3VycmVudFRhcmdldDtpZihlIT09ZiYmKGM9dS5DQVBUVVJJTkdfUEhBU0UsIXMoYltkXSxhLGMpKSlyZXR1cm4hMX1yZXR1cm4hMH1mdW5jdGlvbiBxKGEsYil7dmFyIGM9dS5BVF9UQVJHRVQ7cmV0dXJuIHMoYlswXSxhLGMpfWZ1bmN0aW9uIHIoYSxiKXtmb3IodmFyIGMsZD1hLmJ1YmJsZXMsZT0xO2U8Yi5sZW5ndGg7ZSsrKXt2YXIgZj1iW2VdLnRhcmdldCxnPWJbZV0uY3VycmVudFRhcmdldDtpZihmPT09ZyljPXUuQVRfVEFSR0VUO2Vsc2V7aWYoIWR8fCQuZ2V0KGEpKWNvbnRpbnVlO2M9dS5CVUJCTElOR19QSEFTRX1pZighcyhiW2VdLGEsYykpcmV0dXJufX1mdW5jdGlvbiBzKGEsYixjKXt2YXIgZD1hLnRhcmdldCxlPWEuY3VycmVudFRhcmdldCxmPVMuZ2V0KGUpO2lmKCFmKXJldHVybiEwO2lmKCJyZWxhdGVkVGFyZ2V0ImluIGIpe3ZhciBnPVAoYiksaD1nLnJlbGF0ZWRUYXJnZXQ7aWYoaCl7aWYoaCBpbnN0YW5jZW9mIE9iamVjdCYmaC5hZGRFdmVudExpc3RlbmVyKXt2YXIgaj1RKGgpLGs9aShlLGopO2lmKGs9PT1kKXJldHVybiEwfWVsc2Ugaz1udWxsO1guc2V0KGIsayl9fVkuc2V0KGIsYyk7dmFyIGw9Yi50eXBlLG09ITE7Vi5zZXQoYixkKSxXLnNldChiLGUpO2Zvcih2YXIgbj0wO248Zi5sZW5ndGg7bisrKXt2YXIgbz1mW25dO2lmKG8ucmVtb3ZlZCltPSEwO2Vsc2UgaWYoIShvLnR5cGUhPT1sfHwhby5jYXB0dXJlJiZjPT09dS5DQVBUVVJJTkdfUEhBU0V8fG8uY2FwdHVyZSYmYz09PXUuQlVCQkxJTkdfUEhBU0UpKXRyeXtpZigiZnVuY3Rpb24iPT10eXBlb2Ygby5oYW5kbGVyP28uaGFuZGxlci5jYWxsKGUsYik6by5oYW5kbGVyLmhhbmRsZUV2ZW50KGIpLCQuZ2V0KGIpKXJldHVybiExCn1jYXRjaChwKXtLfHwoSz1wKX19aWYobSl7dmFyIHE9Zi5zbGljZSgpO2YubGVuZ3RoPTA7Zm9yKHZhciBuPTA7bjxxLmxlbmd0aDtuKyspcVtuXS5yZW1vdmVkfHxmLnB1c2gocVtuXSl9cmV0dXJuIVouZ2V0KGIpfWZ1bmN0aW9uIHQoYSxiLGMpe3RoaXMudHlwZT1hLHRoaXMuaGFuZGxlcj1iLHRoaXMuY2FwdHVyZT1Cb29sZWFuKGMpfWZ1bmN0aW9uIHUoYSxiKXtpZighKGEgaW5zdGFuY2VvZiBiYikpcmV0dXJuIFEoeShiYiwiRXZlbnQiLGEsYikpO3ZhciBjPWE7cmV0dXJuIG1ifHwiYmVmb3JldW5sb2FkIiE9PWMudHlwZT92b2lkKHRoaXMuaW1wbD1jKTpuZXcgeihjKX1mdW5jdGlvbiB2KGEpe3JldHVybiBhJiZhLnJlbGF0ZWRUYXJnZXQ/T2JqZWN0LmNyZWF0ZShhLHtyZWxhdGVkVGFyZ2V0Ont2YWx1ZTpQKGEucmVsYXRlZFRhcmdldCl9fSk6YX1mdW5jdGlvbiB3KGEsYixjKXt2YXIgZD13aW5kb3dbYV0sZT1mdW5jdGlvbihiLGMpe3JldHVybiBiIGluc3RhbmNlb2YgZD92b2lkKHRoaXMuaW1wbD1iKTpRKHkoZCxhLGIsYykpfTtpZihlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGIucHJvdG90eXBlKSxjJiZOKGUucHJvdG90eXBlLGMpLGQpdHJ5e08oZCxlLG5ldyBkKCJ0ZW1wIikpfWNhdGNoKGYpe08oZCxlLGRvY3VtZW50LmNyZWF0ZUV2ZW50KGEpKX1yZXR1cm4gZX1mdW5jdGlvbiB4KGEsYil7cmV0dXJuIGZ1bmN0aW9uKCl7YXJndW1lbnRzW2JdPVAoYXJndW1lbnRzW2JdKTt2YXIgYz1QKHRoaXMpO2NbYV0uYXBwbHkoYyxhcmd1bWVudHMpfX1mdW5jdGlvbiB5KGEsYixjLGQpe2lmKGtiKXJldHVybiBuZXcgYShjLHYoZCkpO3ZhciBlPVAoZG9jdW1lbnQuY3JlYXRlRXZlbnQoYikpLGY9amJbYl0sZz1bY107cmV0dXJuIE9iamVjdC5rZXlzKGYpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCE9ZCYmYSBpbiBkP2RbYV06ZlthXTsicmVsYXRlZFRhcmdldCI9PT1hJiYoYj1QKGIpKSxnLnB1c2goYil9KSxlWyJpbml0IitiXS5hcHBseShlLGcpLGV9ZnVuY3Rpb24geihhKXt1LmNhbGwodGhpcyxhKX1mdW5jdGlvbiBBKGEpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBhPyEwOmEmJmEuaGFuZGxlRXZlbnR9ZnVuY3Rpb24gQihhKXtzd2l0Y2goYSl7Y2FzZSJET01BdHRyTW9kaWZpZWQiOmNhc2UiRE9NQXR0cmlidXRlTmFtZUNoYW5nZWQiOmNhc2UiRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkIjpjYXNlIkRPTUVsZW1lbnROYW1lQ2hhbmdlZCI6Y2FzZSJET01Ob2RlSW5zZXJ0ZWQiOmNhc2UiRE9NTm9kZUluc2VydGVkSW50b0RvY3VtZW50IjpjYXNlIkRPTU5vZGVSZW1vdmVkIjpjYXNlIkRPTU5vZGVSZW1vdmVkRnJvbURvY3VtZW50IjpjYXNlIkRPTVN1YnRyZWVNb2RpZmllZCI6cmV0dXJuITB9cmV0dXJuITF9ZnVuY3Rpb24gQyhhKXt0aGlzLmltcGw9YX1mdW5jdGlvbiBEKGEpe3JldHVybiBhIGluc3RhbmNlb2YgUi5TaGFkb3dSb290JiYoYT1hLmhvc3QpLFAoYSl9ZnVuY3Rpb24gRShhLGIpe3ZhciBjPVMuZ2V0KGEpO2lmKGMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNbZF0ucmVtb3ZlZCYmY1tkXS50eXBlPT09YilyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBGKGEsYil7Zm9yKHZhciBjPVAoYSk7YztjPWMucGFyZW50Tm9kZSlpZihFKFEoYyksYikpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gRyhhKXtMKGEsb2IpfWZ1bmN0aW9uIEgoYixjLGQsZSl7YS5yZW5kZXJBbGxQZW5kaW5nKCk7Zm9yKHZhciBmPVEocGIuY2FsbChjLmltcGwsZCxlKSksaD1nKGYsdGhpcyksaT0wO2k8aC5sZW5ndGg7aSsrKXt2YXIgaj1oW2ldO2lmKGouY3VycmVudFRhcmdldD09PWIpcmV0dXJuIGoudGFyZ2V0fXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGI9Xy5nZXQodGhpcyk7cmV0dXJuIGImJmJbYV0mJmJbYV0udmFsdWV8fG51bGx9fWZ1bmN0aW9uIEooYSl7dmFyIGI9YS5zbGljZSgyKTtyZXR1cm4gZnVuY3Rpb24oYyl7dmFyIGQ9Xy5nZXQodGhpcyk7ZHx8KGQ9T2JqZWN0LmNyZWF0ZShudWxsKSxfLnNldCh0aGlzLGQpKTt2YXIgZT1kW2FdO2lmKGUmJnRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGUud3JhcHBlZCwhMSksImZ1bmN0aW9uIj09dHlwZW9mIGMpe3ZhciBmPWZ1bmN0aW9uKGIpe3ZhciBkPWMuY2FsbCh0aGlzLGIpO2Q9PT0hMT9iLnByZXZlbnREZWZhdWx0KCk6Im9uYmVmb3JldW5sb2FkIj09PWEmJiJzdHJpbmciPT10eXBlb2YgZCYmKGIucmV0dXJuVmFsdWU9ZCl9O3RoaXMuYWRkRXZlbnRMaXN0ZW5lcihiLGYsITEpLGRbYV09e3ZhbHVlOmMsd3JhcHBlZDpmfX19fXZhciBLLEw9YS5mb3J3YXJkTWV0aG9kc1RvV3JhcHBlcixNPWEuZ2V0VHJlZVNjb3BlLE49YS5taXhpbixPPWEucmVnaXN0ZXJXcmFwcGVyLFA9YS51bndyYXAsUT1hLndyYXAsUj1hLndyYXBwZXJzLFM9KG5ldyBXZWFrTWFwLG5ldyBXZWFrTWFwKSxUPW5ldyBXZWFrTWFwLFU9bmV3IFdlYWtNYXAsVj1uZXcgV2Vha01hcCxXPW5ldyBXZWFrTWFwLFg9bmV3IFdlYWtNYXAsWT1uZXcgV2Vha01hcCxaPW5ldyBXZWFrTWFwLCQ9bmV3IFdlYWtNYXAsXz1uZXcgV2Vha01hcCxhYj1uZXcgV2Vha01hcDt0LnByb3RvdHlwZT17ZXF1YWxzOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmhhbmRsZXI9PT1hLmhhbmRsZXImJnRoaXMudHlwZT09PWEudHlwZSYmdGhpcy5jYXB0dXJlPT09YS5jYXB0dXJlfSxnZXQgcmVtb3ZlZCgpe3JldHVybiBudWxsPT09dGhpcy5oYW5kbGVyfSxyZW1vdmU6ZnVuY3Rpb24oKXt0aGlzLmhhbmRsZXI9bnVsbH19O3ZhciBiYj13aW5kb3cuRXZlbnQ7YmIucHJvdG90eXBlLnBvbHltZXJCbGFja0xpc3RfPXtyZXR1cm5WYWx1ZTohMCxrZXlMb2NhdGlvbjohMH0sdS5wcm90b3R5cGU9e2dldCB0YXJnZXQoKXtyZXR1cm4gVi5nZXQodGhpcyl9LGdldCBjdXJyZW50VGFyZ2V0KCl7cmV0dXJuIFcuZ2V0KHRoaXMpfSxnZXQgZXZlbnRQaGFzZSgpe3JldHVybiBZLmdldCh0aGlzKX0sZ2V0IHBhdGgoKXt2YXIgYT1uZXcgUi5Ob2RlTGlzdCxiPWFiLmdldCh0aGlzKTtpZihiKXtmb3IodmFyIGM9MCxkPWIubGVuZ3RoLTEsZT1NKFcuZ2V0KHRoaXMpKSxmPTA7ZD49ZjtmKyspe3ZhciBnPWJbZl0uY3VycmVudFRhcmdldCxoPU0oZyk7aC5jb250YWlucyhlKSYmKGYhPT1kfHxnIGluc3RhbmNlb2YgUi5Ob2RlKSYmKGFbYysrXT1nKX1hLmxlbmd0aD1jfXJldHVybiBhfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXtaLnNldCh0aGlzLCEwKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7Wi5zZXQodGhpcywhMCksJC5zZXQodGhpcywhMCl9fSxPKGJiLHUsZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50IikpO3ZhciBjYj13KCJVSUV2ZW50Iix1KSxkYj13KCJDdXN0b21FdmVudCIsdSksZWI9e2dldCByZWxhdGVkVGFyZ2V0KCl7dmFyIGE9WC5nZXQodGhpcyk7cmV0dXJuIHZvaWQgMCE9PWE/YTpRKFAodGhpcykucmVsYXRlZFRhcmdldCl9fSxmYj1OKHtpbml0TW91c2VFdmVudDp4KCJpbml0TW91c2VFdmVudCIsMTQpfSxlYiksZ2I9Tih7aW5pdEZvY3VzRXZlbnQ6eCgiaW5pdEZvY3VzRXZlbnQiLDUpfSxlYiksaGI9dygiTW91c2VFdmVudCIsY2IsZmIpLGliPXcoIkZvY3VzRXZlbnQiLGNiLGdiKSxqYj1PYmplY3QuY3JlYXRlKG51bGwpLGtiPWZ1bmN0aW9uKCl7dHJ5e25ldyB3aW5kb3cuRm9jdXNFdmVudCgiZm9jdXMiKX1jYXRjaChhKXtyZXR1cm4hMX1yZXR1cm4hMH0oKTtpZigha2Ipe3ZhciBsYj1mdW5jdGlvbihhLGIsYyl7aWYoYyl7dmFyIGQ9amJbY107Yj1OKE4oe30sZCksYil9amJbYV09Yn07bGIoIkV2ZW50Iix7YnViYmxlczohMSxjYW5jZWxhYmxlOiExfSksbGIoIkN1c3RvbUV2ZW50Iix7ZGV0YWlsOm51bGx9LCJFdmVudCIpLGxiKCJVSUV2ZW50Iix7dmlldzpudWxsLGRldGFpbDowfSwiRXZlbnQiKSxsYigiTW91c2VFdmVudCIse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxjdHJsS2V5OiExLGFsdEtleTohMSxzaGlmdEtleTohMSxtZXRhS2V5OiExLGJ1dHRvbjowLHJlbGF0ZWRUYXJnZXQ6bnVsbH0sIlVJRXZlbnQiKSxsYigiRm9jdXNFdmVudCIse3JlbGF0ZWRUYXJnZXQ6bnVsbH0sIlVJRXZlbnQiKX12YXIgbWI9d2luZG93LkJlZm9yZVVubG9hZEV2ZW50O3oucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodS5wcm90b3R5cGUpLE4oei5wcm90b3R5cGUse2dldCByZXR1cm5WYWx1ZSgpe3JldHVybiB0aGlzLmltcGwucmV0dXJuVmFsdWV9LHNldCByZXR1cm5WYWx1ZShhKXt0aGlzLmltcGwucmV0dXJuVmFsdWU9YX19KSxtYiYmTyhtYix6KTt2YXIgbmI9d2luZG93LkV2ZW50VGFyZ2V0LG9iPVsiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwYXRjaEV2ZW50Il07W05vZGUsV2luZG93XS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucHJvdG90eXBlO29iLmZvckVhY2goZnVuY3Rpb24oYSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGIsYSsiXyIse3ZhbHVlOmJbYV19KX0pfSksQy5wcm90b3R5cGU9e2FkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiLGMpe2lmKEEoYikmJiFCKGEpKXt2YXIgZD1uZXcgdChhLGIsYyksZT1TLmdldCh0aGlzKTtpZihlKXtmb3IodmFyIGY9MDtmPGUubGVuZ3RoO2YrKylpZihkLmVxdWFscyhlW2ZdKSlyZXR1cm59ZWxzZSBlPVtdLFMuc2V0KHRoaXMsZSk7ZS5wdXNoKGQpO3ZhciBnPUQodGhpcyk7Zy5hZGRFdmVudExpc3RlbmVyXyhhLG0sITApfX0scmVtb3ZlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbihhLGIsYyl7Yz1Cb29sZWFuKGMpO3ZhciBkPVMuZ2V0KHRoaXMpO2lmKGQpe2Zvcih2YXIgZT0wLGY9ITEsZz0wO2c8ZC5sZW5ndGg7ZysrKWRbZ10udHlwZT09PWEmJmRbZ10uY2FwdHVyZT09PWMmJihlKyssZFtnXS5oYW5kbGVyPT09YiYmKGY9ITAsZFtnXS5yZW1vdmUoKSkpO2lmKGYmJjE9PT1lKXt2YXIgaD1EKHRoaXMpO2gucmVtb3ZlRXZlbnRMaXN0ZW5lcl8oYSxtLCEwKX19fSxkaXNwYXRjaEV2ZW50OmZ1bmN0aW9uKGIpe3ZhciBjPVAoYiksZD1jLnR5cGU7VC5zZXQoYywhMSksYS5yZW5kZXJBbGxQZW5kaW5nKCk7dmFyIGU7Rih0aGlzLGQpfHwoZT1mdW5jdGlvbigpe30sdGhpcy5hZGRFdmVudExpc3RlbmVyKGQsZSwhMCkpO3RyeXtyZXR1cm4gUCh0aGlzKS5kaXNwYXRjaEV2ZW50XyhjKX1maW5hbGx5e2UmJnRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihkLGUsITApfX19LG5iJiZPKG5iLEMpO3ZhciBwYj1kb2N1bWVudC5lbGVtZW50RnJvbVBvaW50O2EuYWRqdXN0UmVsYXRlZFRhcmdldD1pLGEuZWxlbWVudEZyb21Qb2ludD1ILGEuZ2V0RXZlbnRIYW5kbGVyR2V0dGVyPUksYS5nZXRFdmVudEhhbmRsZXJTZXR0ZXI9SixhLndyYXBFdmVudFRhcmdldE1ldGhvZHM9RyxhLndyYXBwZXJzLkJlZm9yZVVubG9hZEV2ZW50PXosYS53cmFwcGVycy5DdXN0b21FdmVudD1kYixhLndyYXBwZXJzLkV2ZW50PXUsYS53cmFwcGVycy5FdmVudFRhcmdldD1DLGEud3JhcHBlcnMuRm9jdXNFdmVudD1pYixhLndyYXBwZXJzLk1vdXNlRXZlbnQ9aGIsYS53cmFwcGVycy5VSUV2ZW50PWNifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEsYil7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYixnKX1mdW5jdGlvbiBjKCl7dGhpcy5sZW5ndGg9MCxiKHRoaXMsImxlbmd0aCIpfWZ1bmN0aW9uIGQoYSl7aWYobnVsbD09YSlyZXR1cm4gYTtmb3IodmFyIGI9bmV3IGMsZD0wLGU9YS5sZW5ndGg7ZT5kO2QrKyliW2RdPWYoYVtkXSk7cmV0dXJuIGIubGVuZ3RoPWUsYn1mdW5jdGlvbiBlKGEsYil7YS5wcm90b3R5cGVbYl09ZnVuY3Rpb24oKXtyZXR1cm4gZCh0aGlzLmltcGxbYl0uYXBwbHkodGhpcy5pbXBsLGFyZ3VtZW50cykpfX12YXIgZj1hLndyYXAsZz17ZW51bWVyYWJsZTohMX07Yy5wcm90b3R5cGU9e2l0ZW06ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19fSxiKGMucHJvdG90eXBlLCJpdGVtIiksYS53cmFwcGVycy5Ob2RlTGlzdD1jLGEuYWRkV3JhcE5vZGVMaXN0TWV0aG9kPWUsYS53cmFwTm9kZUxpc3Q9ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7YS53cmFwSFRNTENvbGxlY3Rpb249YS53cmFwTm9kZUxpc3QsYS53cmFwcGVycy5IVE1MQ29sbGVjdGlvbj1hLndyYXBwZXJzLk5vZGVMaXN0fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe0EoYSBpbnN0YW5jZW9mIHcpfWZ1bmN0aW9uIGMoYSl7dmFyIGI9bmV3IHk7cmV0dXJuIGJbMF09YSxiLmxlbmd0aD0xLGJ9ZnVuY3Rpb24gZChhLGIsYyl7QyhiLCJjaGlsZExpc3QiLHtyZW1vdmVkTm9kZXM6YyxwcmV2aW91c1NpYmxpbmc6YS5wcmV2aW91c1NpYmxpbmcsbmV4dFNpYmxpbmc6YS5uZXh0U2libGluZ30pfWZ1bmN0aW9uIGUoYSxiKXtDKGEsImNoaWxkTGlzdCIse3JlbW92ZWROb2RlczpifSl9ZnVuY3Rpb24gZihhLGIsZCxlKXtpZihhIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCl7dmFyIGY9aChhKTtPPSEwO2Zvcih2YXIgZz1mLmxlbmd0aC0xO2c+PTA7Zy0tKWEucmVtb3ZlQ2hpbGQoZltnXSksZltnXS5wYXJlbnROb2RlXz1iO089ITE7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspZltnXS5wcmV2aW91c1NpYmxpbmdfPWZbZy0xXXx8ZCxmW2ddLm5leHRTaWJsaW5nXz1mW2crMV18fGU7cmV0dXJuIGQmJihkLm5leHRTaWJsaW5nXz1mWzBdKSxlJiYoZS5wcmV2aW91c1NpYmxpbmdfPWZbZi5sZW5ndGgtMV0pLGZ9dmFyIGY9YyhhKSxpPWEucGFyZW50Tm9kZTtyZXR1cm4gaSYmaS5yZW1vdmVDaGlsZChhKSxhLnBhcmVudE5vZGVfPWIsYS5wcmV2aW91c1NpYmxpbmdfPWQsYS5uZXh0U2libGluZ189ZSxkJiYoZC5uZXh0U2libGluZ189YSksZSYmKGUucHJldmlvdXNTaWJsaW5nXz1hKSxmfWZ1bmN0aW9uIGcoYSl7aWYoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpcmV0dXJuIGgoYSk7dmFyIGI9YyhhKSxlPWEucGFyZW50Tm9kZTtyZXR1cm4gZSYmZChhLGUsYiksYn1mdW5jdGlvbiBoKGEpe2Zvcih2YXIgYj1uZXcgeSxjPTAsZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpYltjKytdPWQ7cmV0dXJuIGIubGVuZ3RoPWMsZShhLGIpLGJ9ZnVuY3Rpb24gaShhKXtyZXR1cm4gYX1mdW5jdGlvbiBqKGEsYil7SShhLGIpLGEubm9kZUlzSW5zZXJ0ZWRfKCl9ZnVuY3Rpb24gayhhLGIpe2Zvcih2YXIgYz1EKGIpLGQ9MDtkPGEubGVuZ3RoO2QrKylqKGFbZF0sYyl9ZnVuY3Rpb24gbChhKXtJKGEsbmV3IHooYSxudWxsKSl9ZnVuY3Rpb24gbShhKXtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKylsKGFbYl0pfWZ1bmN0aW9uIG4oYSxiKXt2YXIgYz1hLm5vZGVUeXBlPT09dy5ET0NVTUVOVF9OT0RFP2E6YS5vd25lckRvY3VtZW50O2MhPT1iLm93bmVyRG9jdW1lbnQmJmMuYWRvcHROb2RlKGIpfWZ1bmN0aW9uIG8oYixjKXtpZihjLmxlbmd0aCl7dmFyIGQ9Yi5vd25lckRvY3VtZW50O2lmKGQhPT1jWzBdLm93bmVyRG9jdW1lbnQpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYS5hZG9wdE5vZGVOb1JlbW92ZShjW2VdLGQpfX1mdW5jdGlvbiBwKGEsYil7byhhLGIpO3ZhciBjPWIubGVuZ3RoO2lmKDE9PT1jKXJldHVybiBKKGJbMF0pO2Zvcih2YXIgZD1KKGEub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpLGU9MDtjPmU7ZSsrKWQuYXBwZW5kQ2hpbGQoSihiW2VdKSk7cmV0dXJuIGR9ZnVuY3Rpb24gcShhKXtpZih2b2lkIDAhPT1hLmZpcnN0Q2hpbGRfKWZvcih2YXIgYj1hLmZpcnN0Q2hpbGRfO2I7KXt2YXIgYz1iO2I9Yi5uZXh0U2libGluZ18sYy5wYXJlbnROb2RlXz1jLnByZXZpb3VzU2libGluZ189Yy5uZXh0U2libGluZ189dm9pZCAwfWEuZmlyc3RDaGlsZF89YS5sYXN0Q2hpbGRfPXZvaWQgMH1mdW5jdGlvbiByKGEpe2lmKGEuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe2Zvcih2YXIgYj1hLmZpcnN0Q2hpbGQ7Yjspe0EoYi5wYXJlbnROb2RlPT09YSk7dmFyIGM9Yi5uZXh0U2libGluZyxkPUooYiksZT1kLnBhcmVudE5vZGU7ZSYmVi5jYWxsKGUsZCksYi5wcmV2aW91c1NpYmxpbmdfPWIubmV4dFNpYmxpbmdfPWIucGFyZW50Tm9kZV89bnVsbCxiPWN9YS5maXJzdENoaWxkXz1hLmxhc3RDaGlsZF89bnVsbH1lbHNlIGZvcih2YXIgYyxmPUooYSksZz1mLmZpcnN0Q2hpbGQ7ZzspYz1nLm5leHRTaWJsaW5nLFYuY2FsbChmLGcpLGc9Y31mdW5jdGlvbiBzKGEpe3ZhciBiPWEucGFyZW50Tm9kZTtyZXR1cm4gYiYmYi5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX1mdW5jdGlvbiB0KGEpe2Zvcih2YXIgYixjPTA7YzxhLmxlbmd0aDtjKyspYj1hW2NdLGIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKX1mdW5jdGlvbiB1KGEsYixjKXt2YXIgZDtpZihkPUwoYz9QLmNhbGwoYyxhLmltcGwsITEpOlEuY2FsbChhLmltcGwsITEpKSxiKXtmb3IodmFyIGU9YS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWQuYXBwZW5kQ2hpbGQodShlLCEwLGMpKTtpZihhIGluc3RhbmNlb2YgTi5IVE1MVGVtcGxhdGVFbGVtZW50KWZvcih2YXIgZj1kLmNvbnRlbnQsZT1hLmNvbnRlbnQuZmlyc3RDaGlsZDtlO2U9ZS5uZXh0U2libGluZylmLmFwcGVuZENoaWxkKHUoZSwhMCxjKSl9cmV0dXJuIGR9ZnVuY3Rpb24gdihhLGIpe2lmKCFifHxEKGEpIT09RChiKSlyZXR1cm4hMTtmb3IodmFyIGM9YjtjO2M9Yy5wYXJlbnROb2RlKWlmKGM9PT1hKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIHcoYSl7QShhIGluc3RhbmNlb2YgUikseC5jYWxsKHRoaXMsYSksdGhpcy5wYXJlbnROb2RlXz12b2lkIDAsdGhpcy5maXJzdENoaWxkXz12b2lkIDAsdGhpcy5sYXN0Q2hpbGRfPXZvaWQgMCx0aGlzLm5leHRTaWJsaW5nXz12b2lkIDAsdGhpcy5wcmV2aW91c1NpYmxpbmdfPXZvaWQgMCx0aGlzLnRyZWVTY29wZV89dm9pZCAwfXZhciB4PWEud3JhcHBlcnMuRXZlbnRUYXJnZXQseT1hLndyYXBwZXJzLk5vZGVMaXN0LHo9YS5UcmVlU2NvcGUsQT1hLmFzc2VydCxCPWEuZGVmaW5lV3JhcEdldHRlcixDPWEuZW5xdWV1ZU11dGF0aW9uLEQ9YS5nZXRUcmVlU2NvcGUsRT1hLmlzV3JhcHBlcixGPWEubWl4aW4sRz1hLnJlZ2lzdGVyVHJhbnNpZW50T2JzZXJ2ZXJzLEg9YS5yZWdpc3RlcldyYXBwZXIsST1hLnNldFRyZWVTY29wZSxKPWEudW53cmFwLEs9YS51bndyYXBJZk5lZWRlZCxMPWEud3JhcCxNPWEud3JhcElmTmVlZGVkLE49YS53cmFwcGVycyxPPSExLFA9ZG9jdW1lbnQuaW1wb3J0Tm9kZSxRPXdpbmRvdy5Ob2RlLnByb3RvdHlwZS5jbG9uZU5vZGUsUj13aW5kb3cuTm9kZSxTPXdpbmRvdy5Eb2N1bWVudEZyYWdtZW50LFQ9KFIucHJvdG90eXBlLmFwcGVuZENoaWxkLFIucHJvdG90eXBlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSxVPVIucHJvdG90eXBlLmluc2VydEJlZm9yZSxWPVIucHJvdG90eXBlLnJlbW92ZUNoaWxkLFc9Ui5wcm90b3R5cGUucmVwbGFjZUNoaWxkLFg9L1RyaWRlbnQvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksWT1YP2Z1bmN0aW9uKGEsYil7dHJ5e1YuY2FsbChhLGIpfWNhdGNoKGMpe2lmKCEoYSBpbnN0YW5jZW9mIFMpKXRocm93IGN9fTpmdW5jdGlvbihhLGIpe1YuY2FsbChhLGIpfTt3LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHgucHJvdG90eXBlKSxGKHcucHJvdG90eXBlLHthcHBlbmRDaGlsZDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoYSxudWxsKX0saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKGEsYyl7YihhKTt2YXIgZDtjP0UoYyk/ZD1KKGMpOihkPWMsYz1MKGQpKTooYz1udWxsLGQ9bnVsbCksYyYmQShjLnBhcmVudE5vZGU9PT10aGlzKTt2YXIgZSxoPWM/Yy5wcmV2aW91c1NpYmxpbmc6dGhpcy5sYXN0Q2hpbGQsaT0hdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSYmIXMoYSk7aWYoZT1pP2coYSk6ZihhLHRoaXMsaCxjKSxpKW4odGhpcyxhKSxxKHRoaXMpLFUuY2FsbCh0aGlzLmltcGwsSihhKSxkKTtlbHNle2h8fCh0aGlzLmZpcnN0Q2hpbGRfPWVbMF0pLGN8fCh0aGlzLmxhc3RDaGlsZF89ZVtlLmxlbmd0aC0xXSk7dmFyIGo9ZD9kLnBhcmVudE5vZGU6dGhpcy5pbXBsO2o/VS5jYWxsKGoscCh0aGlzLGUpLGQpOm8odGhpcyxlKX1yZXR1cm4gQyh0aGlzLCJjaGlsZExpc3QiLHthZGRlZE5vZGVzOmUsbmV4dFNpYmxpbmc6YyxwcmV2aW91c1NpYmxpbmc6aH0pLGsoZSx0aGlzKSxhfSxyZW1vdmVDaGlsZDpmdW5jdGlvbihhKXtpZihiKGEpLGEucGFyZW50Tm9kZSE9PXRoaXMpe2Zvcih2YXIgZD0hMSxlPSh0aGlzLmNoaWxkTm9kZXMsdGhpcy5maXJzdENoaWxkKTtlO2U9ZS5uZXh0U2libGluZylpZihlPT09YSl7ZD0hMDticmVha31pZighZCl0aHJvdyBuZXcgRXJyb3IoIk5vdEZvdW5kRXJyb3IiKX12YXIgZj1KKGEpLGc9YS5uZXh0U2libGluZyxoPWEucHJldmlvdXNTaWJsaW5nO2lmKHRoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe3ZhciBpPXRoaXMuZmlyc3RDaGlsZCxqPXRoaXMubGFzdENoaWxkLGs9Zi5wYXJlbnROb2RlO2smJlkoayxmKSxpPT09YSYmKHRoaXMuZmlyc3RDaGlsZF89Zyksaj09PWEmJih0aGlzLmxhc3RDaGlsZF89aCksaCYmKGgubmV4dFNpYmxpbmdfPWcpLGcmJihnLnByZXZpb3VzU2libGluZ189aCksYS5wcmV2aW91c1NpYmxpbmdfPWEubmV4dFNpYmxpbmdfPWEucGFyZW50Tm9kZV89dm9pZCAwfWVsc2UgcSh0aGlzKSxZKHRoaXMuaW1wbCxmKTtyZXR1cm4gT3x8Qyh0aGlzLCJjaGlsZExpc3QiLHtyZW1vdmVkTm9kZXM6YyhhKSxuZXh0U2libGluZzpnLHByZXZpb3VzU2libGluZzpofSksRyh0aGlzLGEpLGF9LHJlcGxhY2VDaGlsZDpmdW5jdGlvbihhLGQpe2IoYSk7dmFyIGU7aWYoRShkKT9lPUooZCk6KGU9ZCxkPUwoZSkpLGQucGFyZW50Tm9kZSE9PXRoaXMpdGhyb3cgbmV3IEVycm9yKCJOb3RGb3VuZEVycm9yIik7dmFyIGgsaT1kLm5leHRTaWJsaW5nLGo9ZC5wcmV2aW91c1NpYmxpbmcsbT0hdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKSYmIXMoYSk7cmV0dXJuIG0/aD1nKGEpOihpPT09YSYmKGk9YS5uZXh0U2libGluZyksaD1mKGEsdGhpcyxqLGkpKSxtPyhuKHRoaXMsYSkscSh0aGlzKSxXLmNhbGwodGhpcy5pbXBsLEooYSksZSkpOih0aGlzLmZpcnN0Q2hpbGQ9PT1kJiYodGhpcy5maXJzdENoaWxkXz1oWzBdKSx0aGlzLmxhc3RDaGlsZD09PWQmJih0aGlzLmxhc3RDaGlsZF89aFtoLmxlbmd0aC0xXSksZC5wcmV2aW91c1NpYmxpbmdfPWQubmV4dFNpYmxpbmdfPWQucGFyZW50Tm9kZV89dm9pZCAwLGUucGFyZW50Tm9kZSYmVy5jYWxsKGUucGFyZW50Tm9kZSxwKHRoaXMsaCksZSkpLEModGhpcywiY2hpbGRMaXN0Iix7YWRkZWROb2RlczpoLHJlbW92ZWROb2RlczpjKGQpLG5leHRTaWJsaW5nOmkscHJldmlvdXNTaWJsaW5nOmp9KSxsKGQpLGsoaCx0aGlzKSxkfSxub2RlSXNJbnNlcnRlZF86ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5maXJzdENoaWxkO2E7YT1hLm5leHRTaWJsaW5nKWEubm9kZUlzSW5zZXJ0ZWRfKCl9LGhhc0NoaWxkTm9kZXM6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9PXRoaXMuZmlyc3RDaGlsZH0sZ2V0IHBhcmVudE5vZGUoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5wYXJlbnROb2RlXz90aGlzLnBhcmVudE5vZGVfOkwodGhpcy5pbXBsLnBhcmVudE5vZGUpfSxnZXQgZmlyc3RDaGlsZCgpe3JldHVybiB2b2lkIDAhPT10aGlzLmZpcnN0Q2hpbGRfP3RoaXMuZmlyc3RDaGlsZF86TCh0aGlzLmltcGwuZmlyc3RDaGlsZCl9LGdldCBsYXN0Q2hpbGQoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5sYXN0Q2hpbGRfP3RoaXMubGFzdENoaWxkXzpMKHRoaXMuaW1wbC5sYXN0Q2hpbGQpfSxnZXQgbmV4dFNpYmxpbmcoKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5uZXh0U2libGluZ18/dGhpcy5uZXh0U2libGluZ186TCh0aGlzLmltcGwubmV4dFNpYmxpbmcpfSxnZXQgcHJldmlvdXNTaWJsaW5nKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMucHJldmlvdXNTaWJsaW5nXz90aGlzLnByZXZpb3VzU2libGluZ186TCh0aGlzLmltcGwucHJldmlvdXNTaWJsaW5nKX0sZ2V0IHBhcmVudEVsZW1lbnQoKXtmb3IodmFyIGE9dGhpcy5wYXJlbnROb2RlO2EmJmEubm9kZVR5cGUhPT13LkVMRU1FTlRfTk9ERTspYT1hLnBhcmVudE5vZGU7cmV0dXJuIGF9LGdldCB0ZXh0Q29udGVudCgpe2Zvcih2YXIgYT0iIixiPXRoaXMuZmlyc3RDaGlsZDtiO2I9Yi5uZXh0U2libGluZyliLm5vZGVUeXBlIT13LkNPTU1FTlRfTk9ERSYmKGErPWIudGV4dENvbnRlbnQpO3JldHVybiBhfSxzZXQgdGV4dENvbnRlbnQoYSl7dmFyIGI9aSh0aGlzLmNoaWxkTm9kZXMpO2lmKHRoaXMuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCkpe2lmKHIodGhpcyksIiIhPT1hKXt2YXIgYz10aGlzLmltcGwub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhKTt0aGlzLmFwcGVuZENoaWxkKGMpfX1lbHNlIHEodGhpcyksdGhpcy5pbXBsLnRleHRDb250ZW50PWE7dmFyIGQ9aSh0aGlzLmNoaWxkTm9kZXMpO0ModGhpcywiY2hpbGRMaXN0Iix7YWRkZWROb2RlczpkLHJlbW92ZWROb2RlczpifSksbShiKSxrKGQsdGhpcyl9LGdldCBjaGlsZE5vZGVzKCl7Zm9yKHZhciBhPW5ldyB5LGI9MCxjPXRoaXMuZmlyc3RDaGlsZDtjO2M9Yy5uZXh0U2libGluZylhW2IrK109YztyZXR1cm4gYS5sZW5ndGg9YixhfSxjbG9uZU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHUodGhpcyxhKX0sY29udGFpbnM6ZnVuY3Rpb24oYSl7cmV0dXJuIHYodGhpcyxNKGEpKX0sY29tcGFyZURvY3VtZW50UG9zaXRpb246ZnVuY3Rpb24oYSl7cmV0dXJuIFQuY2FsbCh0aGlzLmltcGwsSyhhKSl9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe2Zvcih2YXIgYSxiLGM9aSh0aGlzLmNoaWxkTm9kZXMpLGQ9W10sZT0iIixmPTA7ZjxjLmxlbmd0aDtmKyspYj1jW2ZdLGIubm9kZVR5cGU9PT13LlRFWFRfTk9ERT9hfHxiLmRhdGEubGVuZ3RoP2E/KGUrPWIuZGF0YSxkLnB1c2goYikpOmE9Yjp0aGlzLnJlbW92ZU5vZGUoYik6KGEmJmQubGVuZ3RoJiYoYS5kYXRhKz1lLGNsZWFuVXBOb2RlcyhkKSksZD1bXSxlPSIiLGE9bnVsbCxiLmNoaWxkTm9kZXMubGVuZ3RoJiZiLm5vcm1hbGl6ZSgpKTthJiZkLmxlbmd0aCYmKGEuZGF0YSs9ZSx0KGQpKX19KSxCKHcsIm93bmVyRG9jdW1lbnQiKSxIKFIsdyxkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpLGRlbGV0ZSB3LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yLGRlbGV0ZSB3LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yQWxsLHcucHJvdG90eXBlPUYoT2JqZWN0LmNyZWF0ZSh4LnByb3RvdHlwZSksdy5wcm90b3R5cGUpLGEuY2xvbmVOb2RlPXUsYS5ub2RlV2FzQWRkZWQ9aixhLm5vZGVXYXNSZW1vdmVkPWwsYS5ub2Rlc1dlcmVBZGRlZD1rLGEubm9kZXNXZXJlUmVtb3ZlZD1tLGEuc25hcHNob3ROb2RlTGlzdD1pLGEud3JhcHBlcnMuTm9kZT13fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEsYyl7Zm9yKHZhciBkLGU9YS5maXJzdEVsZW1lbnRDaGlsZDtlOyl7aWYoZS5tYXRjaGVzKGMpKXJldHVybiBlO2lmKGQ9YihlLGMpKXJldHVybiBkO2U9ZS5uZXh0RWxlbWVudFNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYyhhLGIpe3JldHVybiBhLm1hdGNoZXMoYil9ZnVuY3Rpb24gZChhLGIsYyl7dmFyIGQ9YS5sb2NhbE5hbWU7cmV0dXJuIGQ9PT1ifHxkPT09YyYmYS5uYW1lc3BhY2VVUkk9PT1sfWZ1bmN0aW9uIGUoKXtyZXR1cm4hMH1mdW5jdGlvbiBmKGEsYil7cmV0dXJuIGEubG9jYWxOYW1lPT09Yn1mdW5jdGlvbiBnKGEsYil7cmV0dXJuIGEubmFtZXNwYWNlVVJJPT09Yn1mdW5jdGlvbiBoKGEsYixjKXtyZXR1cm4gYS5uYW1lc3BhY2VVUkk9PT1iJiZhLmxvY2FsTmFtZT09PWN9ZnVuY3Rpb24gaShhLGIsYyxkLGUpe2Zvcih2YXIgZj1hLmZpcnN0RWxlbWVudENoaWxkO2Y7KWMoZixkLGUpJiYoYltiLmxlbmd0aCsrXT1mKSxpKGYsYixjLGQsZSksZj1mLm5leHRFbGVtZW50U2libGluZztyZXR1cm4gYn12YXIgaj1hLndyYXBwZXJzLkhUTUxDb2xsZWN0aW9uLGs9YS53cmFwcGVycy5Ob2RlTGlzdCxsPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIixtPXtxdWVyeVNlbGVjdG9yOmZ1bmN0aW9uKGEpe3JldHVybiBiKHRoaXMsYSl9LHF1ZXJ5U2VsZWN0b3JBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIGkodGhpcyxuZXcgayxjLGEpfX0sbj17Z2V0RWxlbWVudHNCeVRhZ05hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IGo7cmV0dXJuIioiPT09YT9pKHRoaXMsYixlKTppKHRoaXMsYixkLGEsYS50b0xvd2VyQ2FzZSgpKX0sZ2V0RWxlbWVudHNCeUNsYXNzTmFtZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKCIuIithKX0sZ2V0RWxlbWVudHNCeVRhZ05hbWVOUzpmdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBqO2lmKCIiPT09YSlhPW51bGw7ZWxzZSBpZigiKiI9PT1hKXJldHVybiIqIj09PWI/aSh0aGlzLGMsZSk6aSh0aGlzLGMsZixiKTtyZXR1cm4iKiI9PT1iP2kodGhpcyxjLGcsYSk6aSh0aGlzLGMsaCxhLGIpfX07YS5HZXRFbGVtZW50c0J5SW50ZXJmYWNlPW4sYS5TZWxlY3RvcnNJbnRlcmZhY2U9bX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtmb3IoO2EmJmEubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGMoYSl7Zm9yKDthJiZhLm5vZGVUeXBlIT09Tm9kZS5FTEVNRU5UX05PREU7KWE9YS5wcmV2aW91c1NpYmxpbmc7cmV0dXJuIGF9dmFyIGQ9YS53cmFwcGVycy5Ob2RlTGlzdCxlPXtnZXQgZmlyc3RFbGVtZW50Q2hpbGQoKXtyZXR1cm4gYih0aGlzLmZpcnN0Q2hpbGQpfSxnZXQgbGFzdEVsZW1lbnRDaGlsZCgpe3JldHVybiBjKHRoaXMubGFzdENoaWxkKX0sZ2V0IGNoaWxkRWxlbWVudENvdW50KCl7Zm9yKHZhciBhPTAsYj10aGlzLmZpcnN0RWxlbWVudENoaWxkO2I7Yj1iLm5leHRFbGVtZW50U2libGluZylhKys7cmV0dXJuIGF9LGdldCBjaGlsZHJlbigpe2Zvcih2YXIgYT1uZXcgZCxiPTAsYz10aGlzLmZpcnN0RWxlbWVudENoaWxkO2M7Yz1jLm5leHRFbGVtZW50U2libGluZylhW2IrK109YztyZXR1cm4gYS5sZW5ndGg9YixhfSxyZW1vdmU6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnBhcmVudE5vZGU7YSYmYS5yZW1vdmVDaGlsZCh0aGlzKX19LGY9e2dldCBuZXh0RWxlbWVudFNpYmxpbmcoKXtyZXR1cm4gYih0aGlzLm5leHRTaWJsaW5nKX0sZ2V0IHByZXZpb3VzRWxlbWVudFNpYmxpbmcoKXtyZXR1cm4gYyh0aGlzLnByZXZpb3VzU2libGluZyl9fTthLkNoaWxkTm9kZUludGVyZmFjZT1mLGEuUGFyZW50Tm9kZUludGVyZmFjZT1lfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2QuY2FsbCh0aGlzLGEpfXZhciBjPWEuQ2hpbGROb2RlSW50ZXJmYWNlLGQ9YS53cmFwcGVycy5Ob2RlLGU9YS5lbnF1ZXVlTXV0YXRpb24sZj1hLm1peGluLGc9YS5yZWdpc3RlcldyYXBwZXIsaD13aW5kb3cuQ2hhcmFjdGVyRGF0YTtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxmKGIucHJvdG90eXBlLHtnZXQgdGV4dENvbnRlbnQoKXtyZXR1cm4gdGhpcy5kYXRhfSxzZXQgdGV4dENvbnRlbnQoYSl7dGhpcy5kYXRhPWF9LGdldCBkYXRhKCl7cmV0dXJuIHRoaXMuaW1wbC5kYXRhfSxzZXQgZGF0YShhKXt2YXIgYj10aGlzLmltcGwuZGF0YTtlKHRoaXMsImNoYXJhY3RlckRhdGEiLHtvbGRWYWx1ZTpifSksdGhpcy5pbXBsLmRhdGE9YX19KSxmKGIucHJvdG90eXBlLGMpLGcoaCxiLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSksYS53cmFwcGVycy5DaGFyYWN0ZXJEYXRhPWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGE+Pj4wfWZ1bmN0aW9uIGMoYSl7ZC5jYWxsKHRoaXMsYSl9dmFyIGQ9YS53cmFwcGVycy5DaGFyYWN0ZXJEYXRhLGU9KGEuZW5xdWV1ZU11dGF0aW9uLGEubWl4aW4pLGY9YS5yZWdpc3RlcldyYXBwZXIsZz13aW5kb3cuVGV4dDtjLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGQucHJvdG90eXBlKSxlKGMucHJvdG90eXBlLHtzcGxpdFRleHQ6ZnVuY3Rpb24oYSl7YT1iKGEpO3ZhciBjPXRoaXMuZGF0YTtpZihhPmMubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiSW5kZXhTaXplRXJyb3IiKTt2YXIgZD1jLnNsaWNlKDAsYSksZT1jLnNsaWNlKGEpO3RoaXMuZGF0YT1kO3ZhciBmPXRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShlKTtyZXR1cm4gdGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGYsdGhpcy5uZXh0U2libGluZyksZn19KSxmKGcsYyxkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIikpLGEud3JhcHBlcnMuVGV4dD1jfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGIsYyl7dmFyIGQ9Yi5wYXJlbnROb2RlO2lmKGQmJmQuc2hhZG93Um9vdCl7dmFyIGU9YS5nZXRSZW5kZXJlckZvckhvc3QoZCk7ZS5kZXBlbmRzT25BdHRyaWJ1dGUoYykmJmUuaW52YWxpZGF0ZSgpfX1mdW5jdGlvbiBjKGEsYixjKXtrKGEsImF0dHJpYnV0ZXMiLHtuYW1lOmIsbmFtZXNwYWNlOm51bGwsb2xkVmFsdWU6Y30pfWZ1bmN0aW9uIGQoYSl7aC5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24gZShhLGMsZCl7dmFyIGU9ZHx8YztPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxjLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsW2NdfSxzZXQ6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsW2NdPWEsYih0aGlzLGUpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfXZhciBmPWEuQ2hpbGROb2RlSW50ZXJmYWNlLGc9YS5HZXRFbGVtZW50c0J5SW50ZXJmYWNlLGg9YS53cmFwcGVycy5Ob2RlLGk9YS5QYXJlbnROb2RlSW50ZXJmYWNlLGo9YS5TZWxlY3RvcnNJbnRlcmZhY2Usaz0oYS5hZGRXcmFwTm9kZUxpc3RNZXRob2QsYS5lbnF1ZXVlTXV0YXRpb24pLGw9YS5taXhpbixtPShhLm9uZU9mLGEucmVnaXN0ZXJXcmFwcGVyKSxuPWEud3JhcHBlcnMsbz13aW5kb3cuRWxlbWVudCxwPVsibWF0Y2hlcyIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwid2Via2l0TWF0Y2hlc1NlbGVjdG9yIl0uZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBvLnByb3RvdHlwZVthXX0pLHE9cFswXSxyPW8ucHJvdG90eXBlW3FdO2QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoaC5wcm90b3R5cGUpLGwoZC5wcm90b3R5cGUse2NyZWF0ZVNoYWRvd1Jvb3Q6ZnVuY3Rpb24oKXt2YXIgYj1uZXcgbi5TaGFkb3dSb290KHRoaXMpO3RoaXMuaW1wbC5wb2x5bWVyU2hhZG93Um9vdF89Yjt2YXIgYz1hLmdldFJlbmRlcmVyRm9ySG9zdCh0aGlzKTtyZXR1cm4gYy5pbnZhbGlkYXRlKCksYn0sZ2V0IHNoYWRvd1Jvb3QoKXtyZXR1cm4gdGhpcy5pbXBsLnBvbHltZXJTaGFkb3dSb290X3x8bnVsbH0sc2V0QXR0cmlidXRlOmZ1bmN0aW9uKGEsZCl7dmFyIGU9dGhpcy5pbXBsLmdldEF0dHJpYnV0ZShhKTt0aGlzLmltcGwuc2V0QXR0cmlidXRlKGEsZCksYyh0aGlzLGEsZSksYih0aGlzLGEpfSxyZW1vdmVBdHRyaWJ1dGU6ZnVuY3Rpb24oYSl7dmFyIGQ9dGhpcy5pbXBsLmdldEF0dHJpYnV0ZShhKTt0aGlzLmltcGwucmVtb3ZlQXR0cmlidXRlKGEpLGModGhpcyxhLGQpLGIodGhpcyxhKX0sbWF0Y2hlczpmdW5jdGlvbihhKXtyZXR1cm4gci5jYWxsKHRoaXMuaW1wbCxhKX19KSxwLmZvckVhY2goZnVuY3Rpb24oYSl7Im1hdGNoZXMiIT09YSYmKGQucHJvdG90eXBlW2FdPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm1hdGNoZXMoYSl9KX0pLG8ucHJvdG90eXBlLndlYmtpdENyZWF0ZVNoYWRvd1Jvb3QmJihkLnByb3RvdHlwZS53ZWJraXRDcmVhdGVTaGFkb3dSb290PWQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3QpLGUoZC5wcm90b3R5cGUsImlkIiksZShkLnByb3RvdHlwZSwiY2xhc3NOYW1lIiwiY2xhc3MiKSxsKGQucHJvdG90eXBlLGYpLGwoZC5wcm90b3R5cGUsZyksbChkLnByb3RvdHlwZSxpKSxsKGQucHJvdG90eXBlLGopLG0obyxkLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhudWxsLCJ4IikpLGEubWF0Y2hlc05hbWVzPXAsYS53cmFwcGVycy5FbGVtZW50PWR9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7c3dpdGNoKGEpe2Nhc2UiJiI6cmV0dXJuIiZhbXA7IjtjYXNlIjwiOnJldHVybiImbHQ7IjtjYXNlIj4iOnJldHVybiImZ3Q7IjtjYXNlJyInOnJldHVybiImcXVvdDsiO2Nhc2UiwqAiOnJldHVybiImbmJzcDsifX1mdW5jdGlvbiBjKGEpe3JldHVybiBhLnJlcGxhY2UoeixiKX1mdW5jdGlvbiBkKGEpe3JldHVybiBhLnJlcGxhY2UoQSxiKX1mdW5jdGlvbiBlKGEpe2Zvcih2YXIgYj17fSxjPTA7YzxhLmxlbmd0aDtjKyspYlthW2NdXT0hMDtyZXR1cm4gYn1mdW5jdGlvbiBmKGEsYil7c3dpdGNoKGEubm9kZVR5cGUpe2Nhc2UgTm9kZS5FTEVNRU5UX05PREU6Zm9yKHZhciBlLGY9YS50YWdOYW1lLnRvTG93ZXJDYXNlKCksaD0iPCIrZixpPWEuYXR0cmlidXRlcyxqPTA7ZT1pW2pdO2orKyloKz0iICIrZS5uYW1lKyc9IicrYyhlLnZhbHVlKSsnIic7cmV0dXJuIGgrPSI+IixCW2ZdP2g6aCtnKGEpKyI8LyIrZisiPiI7Y2FzZSBOb2RlLlRFWFRfTk9ERTp2YXIgaz1hLmRhdGE7cmV0dXJuIGImJkNbYi5sb2NhbE5hbWVdP2s6ZChrKTtjYXNlIE5vZGUuQ09NTUVOVF9OT0RFOnJldHVybiI8IS0tIithLmRhdGErIi0tPiI7ZGVmYXVsdDp0aHJvdyBjb25zb2xlLmVycm9yKGEpLG5ldyBFcnJvcigibm90IGltcGxlbWVudGVkIil9fWZ1bmN0aW9uIGcoYSl7YSBpbnN0YW5jZW9mIHkuSFRNTFRlbXBsYXRlRWxlbWVudCYmKGE9YS5jb250ZW50KTtmb3IodmFyIGI9IiIsYz1hLmZpcnN0Q2hpbGQ7YztjPWMubmV4dFNpYmxpbmcpYis9ZihjLGEpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMpe3ZhciBkPWN8fCJkaXYiO2EudGV4dENvbnRlbnQ9IiI7dmFyIGU9dyhhLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudChkKSk7ZS5pbm5lckhUTUw9Yjtmb3IodmFyIGY7Zj1lLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoeChmKSl9ZnVuY3Rpb24gaShhKXtvLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBqKGEsYil7dmFyIGM9dyhhLmNsb25lTm9kZSghMSkpO2MuaW5uZXJIVE1MPWI7Zm9yKHZhciBkLGU9dyhkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkpO2Q9Yy5maXJzdENoaWxkOyllLmFwcGVuZENoaWxkKGQpO3JldHVybiB4KGUpfWZ1bmN0aW9uIGsoYil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGEucmVuZGVyQWxsUGVuZGluZygpLHRoaXMuaW1wbFtiXX19ZnVuY3Rpb24gbChhKXtwKGksYSxrKGEpKX1mdW5jdGlvbiBtKGIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLnByb3RvdHlwZSxiLHtnZXQ6ayhiKSxzZXQ6ZnVuY3Rpb24oYyl7YS5yZW5kZXJBbGxQZW5kaW5nKCksdGhpcy5pbXBsW2JdPWN9LGNvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwfSl9ZnVuY3Rpb24gbihiKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5wcm90b3R5cGUsYix7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gYS5yZW5kZXJBbGxQZW5kaW5nKCksdGhpcy5pbXBsW2JdLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfXZhciBvPWEud3JhcHBlcnMuRWxlbWVudCxwPWEuZGVmaW5lR2V0dGVyLHE9YS5lbnF1ZXVlTXV0YXRpb24scj1hLm1peGluLHM9YS5ub2Rlc1dlcmVBZGRlZCx0PWEubm9kZXNXZXJlUmVtb3ZlZCx1PWEucmVnaXN0ZXJXcmFwcGVyLHY9YS5zbmFwc2hvdE5vZGVMaXN0LHc9YS51bndyYXAseD1hLndyYXAseT1hLndyYXBwZXJzLHo9L1smXHUwMEEwIl0vZyxBPS9bJlx1MDBBMDw+XS9nLEI9ZShbImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJjb21tYW5kIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInNvdXJjZSIsInRyYWNrIiwid2JyIl0pLEM9ZShbInN0eWxlIiwic2NyaXB0IiwieG1wIiwiaWZyYW1lIiwibm9lbWJlZCIsIm5vZnJhbWVzIiwicGxhaW50ZXh0Iiwibm9zY3JpcHQiXSksRD0vTVNJRS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxFPXdpbmRvdy5IVE1MRWxlbWVudCxGPXdpbmRvdy5IVE1MVGVtcGxhdGVFbGVtZW50O2kucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoby5wcm90b3R5cGUpLHIoaS5wcm90b3R5cGUse2dldCBpbm5lckhUTUwoKXtyZXR1cm4gZyh0aGlzKX0sc2V0IGlubmVySFRNTChhKXtpZihEJiZDW3RoaXMubG9jYWxOYW1lXSlyZXR1cm4gdm9pZCh0aGlzLnRleHRDb250ZW50PWEpO3ZhciBiPXYodGhpcy5jaGlsZE5vZGVzKTt0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpP3RoaXMgaW5zdGFuY2VvZiB5LkhUTUxUZW1wbGF0ZUVsZW1lbnQ/aCh0aGlzLmNvbnRlbnQsYSk6aCh0aGlzLGEsdGhpcy50YWdOYW1lKTohRiYmdGhpcyBpbnN0YW5jZW9mIHkuSFRNTFRlbXBsYXRlRWxlbWVudD9oKHRoaXMuY29udGVudCxhKTp0aGlzLmltcGwuaW5uZXJIVE1MPWE7dmFyIGM9dih0aGlzLmNoaWxkTm9kZXMpO3EodGhpcywiY2hpbGRMaXN0Iix7YWRkZWROb2RlczpjLHJlbW92ZWROb2RlczpifSksdChiKSxzKGMsdGhpcyl9LGdldCBvdXRlckhUTUwoKXtyZXR1cm4gZih0aGlzLHRoaXMucGFyZW50Tm9kZSl9LHNldCBvdXRlckhUTUwoYSl7dmFyIGI9dGhpcy5wYXJlbnROb2RlO2lmKGIpe2IuaW52YWxpZGF0ZVNoYWRvd1JlbmRlcmVyKCk7dmFyIGM9aihiLGEpO2IucmVwbGFjZUNoaWxkKGMsdGhpcyl9fSxpbnNlcnRBZGphY2VudEhUTUw6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkO3N3aXRjaChTdHJpbmcoYSkudG9Mb3dlckNhc2UoKSl7Y2FzZSJiZWZvcmViZWdpbiI6Yz10aGlzLnBhcmVudE5vZGUsZD10aGlzO2JyZWFrO2Nhc2UiYWZ0ZXJlbmQiOmM9dGhpcy5wYXJlbnROb2RlLGQ9dGhpcy5uZXh0U2libGluZzticmVhaztjYXNlImFmdGVyYmVnaW4iOmM9dGhpcyxkPXRoaXMuZmlyc3RDaGlsZDticmVhaztjYXNlImJlZm9yZWVuZCI6Yz10aGlzLGQ9bnVsbDticmVhaztkZWZhdWx0OnJldHVybn12YXIgZT1qKGMsYik7Yy5pbnNlcnRCZWZvcmUoZSxkKX19KSxbImNsaWVudEhlaWdodCIsImNsaWVudExlZnQiLCJjbGllbnRUb3AiLCJjbGllbnRXaWR0aCIsIm9mZnNldEhlaWdodCIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJvZmZzZXRXaWR0aCIsInNjcm9sbEhlaWdodCIsInNjcm9sbFdpZHRoIl0uZm9yRWFjaChsKSxbInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiXS5mb3JFYWNoKG0pLFsiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiZ2V0Q2xpZW50UmVjdHMiLCJzY3JvbGxJbnRvVmlldyJdLmZvckVhY2gobiksdShFLGksZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYiIpKSxhLndyYXBwZXJzLkhUTUxFbGVtZW50PWksYS5nZXRJbm5lckhUTUw9ZyxhLnNldElubmVySFRNTD1ofSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj1hLndyYXAsZz13aW5kb3cuSFRNTENhbnZhc0VsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0Q29udGV4dDpmdW5jdGlvbigpe3ZhciBhPXRoaXMuaW1wbC5nZXRDb250ZXh0LmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpO3JldHVybiBhJiZmKGEpfX0pLGUoZyxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpKSxhLndyYXBwZXJzLkhUTUxDYW52YXNFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPXdpbmRvdy5IVE1MQ29udGVudEVsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IHNlbGVjdCgpe3JldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgic2VsZWN0Iil9LHNldCBzZWxlY3QoYSl7dGhpcy5zZXRBdHRyaWJ1dGUoInNlbGVjdCIsYSl9LHNldEF0dHJpYnV0ZTpmdW5jdGlvbihhLGIpe2MucHJvdG90eXBlLnNldEF0dHJpYnV0ZS5jYWxsKHRoaXMsYSxiKSwic2VsZWN0Ij09PVN0cmluZyhhKS50b0xvd2VyQ2FzZSgpJiZ0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcighMCl9fSksZiYmZShmLGIpLGEud3JhcHBlcnMuSFRNTENvbnRlbnRFbGVtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7ZC5jYWxsKHRoaXMsYSl9ZnVuY3Rpb24gYyhhLGIpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkRPTSBvYmplY3QgY29uc3RydWN0b3IgY2Fubm90IGJlIGNhbGxlZCBhcyBhIGZ1bmN0aW9uLiIpO3ZhciBlPWYoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIikpO2QuY2FsbCh0aGlzLGUpLGcoZSx0aGlzKSx2b2lkIDAhPT1hJiYoZS53aWR0aD1hKSx2b2lkIDAhPT1iJiYoZS5oZWlnaHQ9Yil9dmFyIGQ9YS53cmFwcGVycy5IVE1MRWxlbWVudCxlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS51bndyYXAsZz1hLnJld3JhcCxoPXdpbmRvdy5IVE1MSW1hZ2VFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZC5wcm90b3R5cGUpLGUoaCxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpKSxjLnByb3RvdHlwZT1iLnByb3RvdHlwZSxhLndyYXBwZXJzLkhUTUxJbWFnZUVsZW1lbnQ9YixhLndyYXBwZXJzLkltYWdlPWN9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5IVE1MRWxlbWVudCxkPWEubWl4aW4sZT1hLnJlZ2lzdGVyV3JhcHBlcixmPXdpbmRvdy5IVE1MU2hhZG93RWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHt9KSxmJiZlKGYsYiksYS53cmFwcGVycy5IVE1MU2hhZG93RWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2lmKCFhLmRlZmF1bHRWaWV3KXJldHVybiBhO3ZhciBiPWsuZ2V0KGEpO2lmKCFiKXtmb3IoYj1hLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIik7Yi5sYXN0Q2hpbGQ7KWIucmVtb3ZlQ2hpbGQoYi5sYXN0Q2hpbGQpO2suc2V0KGEsYil9cmV0dXJuIGJ9ZnVuY3Rpb24gYyhhKXtmb3IodmFyIGMsZD1iKGEub3duZXJEb2N1bWVudCksZT1oKGQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKTtjPWEuZmlyc3RDaGlsZDspZS5hcHBlbmRDaGlsZChjKTtyZXR1cm4gZX1mdW5jdGlvbiBkKGEpe2lmKGUuY2FsbCh0aGlzLGEpLCFsKXt2YXIgYj1jKGEpO2ouc2V0KHRoaXMsaShiKSl9fXZhciBlPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZj1hLm1peGluLGc9YS5yZWdpc3RlcldyYXBwZXIsaD1hLnVud3JhcCxpPWEud3JhcCxqPW5ldyBXZWFrTWFwLGs9bmV3IFdlYWtNYXAsbD13aW5kb3cuSFRNTFRlbXBsYXRlRWxlbWVudDtkLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSxmKGQucHJvdG90eXBlLHtnZXQgY29udGVudCgpe3JldHVybiBsP2kodGhpcy5pbXBsLmNvbnRlbnQpOmouZ2V0KHRoaXMpfX0pLGwmJmcobCxkKSxhLndyYXBwZXJzLkhUTUxUZW1wbGF0ZUVsZW1lbnQ9ZH0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5yZWdpc3RlcldyYXBwZXIsZT13aW5kb3cuSFRNTE1lZGlhRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGUsYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhdWRpbyIpKSxhLndyYXBwZXJzLkhUTUxNZWRpYUVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtkLmNhbGwodGhpcyxhKX1mdW5jdGlvbiBjKGEpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkRPTSBvYmplY3QgY29uc3RydWN0b3IgY2Fubm90IGJlIGNhbGxlZCBhcyBhIGZ1bmN0aW9uLiIpO3ZhciBiPWYoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXVkaW8iKSk7ZC5jYWxsKHRoaXMsYiksZyhiLHRoaXMpLGIuc2V0QXR0cmlidXRlKCJwcmVsb2FkIiwiYXV0byIpLHZvaWQgMCE9PWEmJmIuc2V0QXR0cmlidXRlKCJzcmMiLGEpfXZhciBkPWEud3JhcHBlcnMuSFRNTE1lZGlhRWxlbWVudCxlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS51bndyYXAsZz1hLnJld3JhcCxoPXdpbmRvdy5IVE1MQXVkaW9FbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZC5wcm90b3R5cGUpLGUoaCxiLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImF1ZGlvIikpLGMucHJvdG90eXBlPWIucHJvdG90eXBlLGEud3JhcHBlcnMuSFRNTEF1ZGlvRWxlbWVudD1iLGEud3JhcHBlcnMuQXVkaW89Y30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtyZXR1cm4gYS5yZXBsYWNlKC9ccysvZywiICIpLnRyaW0oKX1mdW5jdGlvbiBjKGEpe2UuY2FsbCh0aGlzLGEpfWZ1bmN0aW9uIGQoYSxiLGMsZil7aWYoISh0aGlzIGluc3RhbmNlb2YgZCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRE9NIG9iamVjdCBjb25zdHJ1Y3RvciBjYW5ub3QgYmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24uIik7dmFyIGc9aShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSk7ZS5jYWxsKHRoaXMsZyksaChnLHRoaXMpLHZvaWQgMCE9PWEmJihnLnRleHQ9YSksdm9pZCAwIT09YiYmZy5zZXRBdHRyaWJ1dGUoInZhbHVlIixiKSxjPT09ITAmJmcuc2V0QXR0cmlidXRlKCJzZWxlY3RlZCIsIiIpLGcuc2VsZWN0ZWQ9Zj09PSEwfXZhciBlPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZj1hLm1peGluLGc9YS5yZWdpc3RlcldyYXBwZXIsaD1hLnJld3JhcCxpPWEudW53cmFwLGo9YS53cmFwLGs9d2luZG93LkhUTUxPcHRpb25FbGVtZW50O2MucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUpLGYoYy5wcm90b3R5cGUse2dldCB0ZXh0KCl7cmV0dXJuIGIodGhpcy50ZXh0Q29udGVudCl9LHNldCB0ZXh0KGEpe3RoaXMudGV4dENvbnRlbnQ9YihTdHJpbmcoYSkpfSxnZXQgZm9ybSgpe3JldHVybiBqKGkodGhpcykuZm9ybSl9fSksZyhrLGMsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIikpLGQucHJvdG90eXBlPWMucHJvdG90eXBlLGEud3JhcHBlcnMuSFRNTE9wdGlvbkVsZW1lbnQ9YyxhLndyYXBwZXJzLk9wdGlvbj1kfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj1hLnVud3JhcCxnPWEud3JhcCxoPXdpbmRvdy5IVE1MU2VsZWN0RWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHthZGQ6ZnVuY3Rpb24oYSxiKXsib2JqZWN0Ij09dHlwZW9mIGImJihiPWYoYikpLGYodGhpcykuYWRkKGYoYSksYil9LHJlbW92ZTpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YT92b2lkIGMucHJvdG90eXBlLnJlbW92ZS5jYWxsKHRoaXMpOigib2JqZWN0Ij09dHlwZW9mIGEmJihhPWYoYSkpLHZvaWQgZih0aGlzKS5yZW1vdmUoYSkpfSxnZXQgZm9ybSgpe3JldHVybiBnKGYodGhpcykuZm9ybSl9fSksZShoLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2VsZWN0IikpLGEud3JhcHBlcnMuSFRNTFNlbGVjdEVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS51bndyYXAsZz1hLndyYXAsaD1hLndyYXBIVE1MQ29sbGVjdGlvbixpPXdpbmRvdy5IVE1MVGFibGVFbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGQoYi5wcm90b3R5cGUse2dldCBjYXB0aW9uKCl7cmV0dXJuIGcoZih0aGlzKS5jYXB0aW9uKX0sY3JlYXRlQ2FwdGlvbjpmdW5jdGlvbigpe3JldHVybiBnKGYodGhpcykuY3JlYXRlQ2FwdGlvbigpKX0sZ2V0IHRIZWFkKCl7cmV0dXJuIGcoZih0aGlzKS50SGVhZCl9LGNyZWF0ZVRIZWFkOmZ1bmN0aW9uKCl7cmV0dXJuIGcoZih0aGlzKS5jcmVhdGVUSGVhZCgpKX0sY3JlYXRlVEZvb3Q6ZnVuY3Rpb24oKXtyZXR1cm4gZyhmKHRoaXMpLmNyZWF0ZVRGb290KCkpfSxnZXQgdEZvb3QoKXtyZXR1cm4gZyhmKHRoaXMpLnRGb290KX0sZ2V0IHRCb2RpZXMoKXtyZXR1cm4gaChmKHRoaXMpLnRCb2RpZXMpfSxjcmVhdGVUQm9keTpmdW5jdGlvbigpe3JldHVybiBnKGYodGhpcykuY3JlYXRlVEJvZHkoKSl9LGdldCByb3dzKCl7cmV0dXJuIGgoZih0aGlzKS5yb3dzKX0saW5zZXJ0Um93OmZ1bmN0aW9uKGEpe3JldHVybiBnKGYodGhpcykuaW5zZXJ0Um93KGEpKX19KSxlKGksYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0YWJsZSIpKSxhLndyYXBwZXJzLkhUTUxUYWJsZUVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwSFRNTENvbGxlY3Rpb24sZz1hLnVud3JhcCxoPWEud3JhcCxpPXdpbmRvdy5IVE1MVGFibGVTZWN0aW9uRWxlbWVudDtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxkKGIucHJvdG90eXBlLHtnZXQgcm93cygpe3JldHVybiBmKGcodGhpcykucm93cyl9LGluc2VydFJvdzpmdW5jdGlvbihhKXtyZXR1cm4gaChnKHRoaXMpLmluc2VydFJvdyhhKSl9fSksZShpLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGhlYWQiKSksYS53cmFwcGVycy5IVE1MVGFibGVTZWN0aW9uRWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2MuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTEVsZW1lbnQsZD1hLm1peGluLGU9YS5yZWdpc3RlcldyYXBwZXIsZj1hLndyYXBIVE1MQ29sbGVjdGlvbixnPWEudW53cmFwLGg9YS53cmFwLGk9d2luZG93LkhUTUxUYWJsZVJvd0VsZW1lbnQ7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IGNlbGxzKCl7cmV0dXJuIGYoZyh0aGlzKS5jZWxscyl9LGluc2VydENlbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIGgoZyh0aGlzKS5pbnNlcnRDZWxsKGEpKX19KSxlKGksYixkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ciIpKSxhLndyYXBwZXJzLkhUTUxUYWJsZVJvd0VsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtzd2l0Y2goYS5sb2NhbE5hbWUpe2Nhc2UiY29udGVudCI6cmV0dXJuIG5ldyBjKGEpO2Nhc2Uic2hhZG93IjpyZXR1cm4gbmV3IGUoYSk7Y2FzZSJ0ZW1wbGF0ZSI6cmV0dXJuIG5ldyBmKGEpfWQuY2FsbCh0aGlzLGEpfXZhciBjPWEud3JhcHBlcnMuSFRNTENvbnRlbnRFbGVtZW50LGQ9YS53cmFwcGVycy5IVE1MRWxlbWVudCxlPWEud3JhcHBlcnMuSFRNTFNoYWRvd0VsZW1lbnQsZj1hLndyYXBwZXJzLkhUTUxUZW1wbGF0ZUVsZW1lbnQsZz0oYS5taXhpbixhLnJlZ2lzdGVyV3JhcHBlciksaD13aW5kb3cuSFRNTFVua25vd25FbGVtZW50O2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZC5wcm90b3R5cGUpLGcoaCxiKSxhLndyYXBwZXJzLkhUTUxVbmtub3duRWxlbWVudD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgYj1hLnJlZ2lzdGVyT2JqZWN0LGM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIixkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhjLCJ0aXRsZSIpLGU9YihkKSxmPU9iamVjdC5nZXRQcm90b3R5cGVPZihlLnByb3RvdHlwZSkuY29uc3RydWN0b3I7YS53cmFwcGVycy5TVkdFbGVtZW50PWZ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7bS5jYWxsKHRoaXMsYSl9dmFyIGM9YS5taXhpbixkPWEucmVnaXN0ZXJXcmFwcGVyLGU9YS51bndyYXAsZj1hLndyYXAsZz13aW5kb3cuU1ZHVXNlRWxlbWVudCxoPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsaT1mKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhoLCJnIikpLGo9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGgsInVzZSIpLGs9aS5jb25zdHJ1Y3RvcixsPU9iamVjdC5nZXRQcm90b3R5cGVPZihrLnByb3RvdHlwZSksbT1sLmNvbnN0cnVjdG9yO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobCksImluc3RhbmNlUm9vdCJpbiBqJiZjKGIucHJvdG90eXBlLHtnZXQgaW5zdGFuY2VSb290KCl7cmV0dXJuIGYoZSh0aGlzKS5pbnN0YW5jZVJvb3QpfSxnZXQgYW5pbWF0ZWRJbnN0YW5jZVJvb3QoKXtyZXR1cm4gZihlKHRoaXMpLmFuaW1hdGVkSW5zdGFuY2VSb290KX19KSxkKGcsYixqKSxhLndyYXBwZXJzLlNWR1VzZUVsZW1lbnQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtjLmNhbGwodGhpcyxhKX12YXIgYz1hLndyYXBwZXJzLkV2ZW50VGFyZ2V0LGQ9YS5taXhpbixlPWEucmVnaXN0ZXJXcmFwcGVyLGY9YS53cmFwLGc9d2luZG93LlNWR0VsZW1lbnRJbnN0YW5jZTtnJiYoYi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZChiLnByb3RvdHlwZSx7Z2V0IGNvcnJlc3BvbmRpbmdFbGVtZW50KCl7cmV0dXJuIGYodGhpcy5pbXBsLmNvcnJlc3BvbmRpbmdFbGVtZW50KX0sZ2V0IGNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KCl7cmV0dXJuIGYodGhpcy5pbXBsLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KX0sZ2V0IHBhcmVudE5vZGUoKXtyZXR1cm4gZih0aGlzLmltcGwucGFyZW50Tm9kZSl9LGdldCBjaGlsZE5vZGVzKCl7dGhyb3cgbmV3IEVycm9yKCJOb3QgaW1wbGVtZW50ZWQiKX0sZ2V0IGZpcnN0Q2hpbGQoKXtyZXR1cm4gZih0aGlzLmltcGwuZmlyc3RDaGlsZCl9LGdldCBsYXN0Q2hpbGQoKXtyZXR1cm4gZih0aGlzLmltcGwubGFzdENoaWxkKX0sZ2V0IHByZXZpb3VzU2libGluZygpe3JldHVybiBmKHRoaXMuaW1wbC5wcmV2aW91c1NpYmxpbmcpfSxnZXQgbmV4dFNpYmxpbmcoKXtyZXR1cm4gZih0aGlzLmltcGwubmV4dFNpYmxpbmcpfX0pLGUoZyxiKSxhLndyYXBwZXJzLlNWR0VsZW1lbnRJbnN0YW5jZT1iKX0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt0aGlzLmltcGw9YX12YXIgYz1hLm1peGluLGQ9YS5yZWdpc3RlcldyYXBwZXIsZT1hLnVud3JhcCxmPWEudW53cmFwSWZOZWVkZWQsZz1hLndyYXAsaD13aW5kb3cuQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO2MoYi5wcm90b3R5cGUse2dldCBjYW52YXMoKXtyZXR1cm4gZyh0aGlzLmltcGwuY2FudmFzKX0sZHJhd0ltYWdlOmZ1bmN0aW9uKCl7YXJndW1lbnRzWzBdPWYoYXJndW1lbnRzWzBdKSx0aGlzLmltcGwuZHJhd0ltYWdlLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfSxjcmVhdGVQYXR0ZXJuOmZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c1swXT1lKGFyZ3VtZW50c1swXSksdGhpcy5pbXBsLmNyZWF0ZVBhdHRlcm4uYXBwbHkodGhpcy5pbXBsLGFyZ3VtZW50cyl9fSksZChoLGIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIikuZ2V0Q29udGV4dCgiMmQiKSksYS53cmFwcGVycy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt0aGlzLmltcGw9YX12YXIgYz1hLm1peGluLGQ9YS5yZWdpc3RlcldyYXBwZXIsZT1hLnVud3JhcElmTmVlZGVkLGY9YS53cmFwLGc9d2luZG93LldlYkdMUmVuZGVyaW5nQ29udGV4dDtpZihnKXtjKGIucHJvdG90eXBlLHtnZXQgY2FudmFzKCl7cmV0dXJuIGYodGhpcy5pbXBsLmNhbnZhcyl9LHRleEltYWdlMkQ6ZnVuY3Rpb24oKXthcmd1bWVudHNbNV09ZShhcmd1bWVudHNbNV0pLHRoaXMuaW1wbC50ZXhJbWFnZTJELmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpfSx0ZXhTdWJJbWFnZTJEOmZ1bmN0aW9uKCl7YXJndW1lbnRzWzZdPWUoYXJndW1lbnRzWzZdKSx0aGlzLmltcGwudGV4U3ViSW1hZ2UyRC5hcHBseSh0aGlzLmltcGwsYXJndW1lbnRzKX19KTt2YXIgaD0vV2ViS2l0Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpP3tkcmF3aW5nQnVmZmVySGVpZ2h0Om51bGwsZHJhd2luZ0J1ZmZlcldpZHRoOm51bGx9Ont9O2QoZyxiLGgpLGEud3JhcHBlcnMuV2ViR0xSZW5kZXJpbmdDb250ZXh0PWJ9fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3RoaXMuaW1wbD1hfXZhciBjPWEucmVnaXN0ZXJXcmFwcGVyLGQ9YS51bndyYXAsZT1hLnVud3JhcElmTmVlZGVkLGY9YS53cmFwLGc9d2luZG93LlJhbmdlO2IucHJvdG90eXBlPXtnZXQgc3RhcnRDb250YWluZXIoKXtyZXR1cm4gZih0aGlzLmltcGwuc3RhcnRDb250YWluZXIpfSxnZXQgZW5kQ29udGFpbmVyKCl7cmV0dXJuIGYodGhpcy5pbXBsLmVuZENvbnRhaW5lcil9LGdldCBjb21tb25BbmNlc3RvckNvbnRhaW5lcigpe3JldHVybiBmKHRoaXMuaW1wbC5jb21tb25BbmNlc3RvckNvbnRhaW5lcil9LHNldFN0YXJ0OmZ1bmN0aW9uKGEsYil7dGhpcy5pbXBsLnNldFN0YXJ0KGUoYSksYil9LHNldEVuZDpmdW5jdGlvbihhLGIpe3RoaXMuaW1wbC5zZXRFbmQoZShhKSxiKX0sc2V0U3RhcnRCZWZvcmU6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnNldFN0YXJ0QmVmb3JlKGUoYSkpfSxzZXRTdGFydEFmdGVyOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZXRTdGFydEFmdGVyKGUoYSkpfSxzZXRFbmRCZWZvcmU6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnNldEVuZEJlZm9yZShlKGEpKX0sc2V0RW5kQWZ0ZXI6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnNldEVuZEFmdGVyKGUoYSkpfSxzZWxlY3ROb2RlOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5zZWxlY3ROb2RlKGUoYSkpfSxzZWxlY3ROb2RlQ29udGVudHM6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnNlbGVjdE5vZGVDb250ZW50cyhlKGEpKX0sY29tcGFyZUJvdW5kYXJ5UG9pbnRzOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuaW1wbC5jb21wYXJlQm91bmRhcnlQb2ludHMoYSxkKGIpKX0sZXh0cmFjdENvbnRlbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGYodGhpcy5pbXBsLmV4dHJhY3RDb250ZW50cygpKQp9LGNsb25lQ29udGVudHM6ZnVuY3Rpb24oKXtyZXR1cm4gZih0aGlzLmltcGwuY2xvbmVDb250ZW50cygpKX0saW5zZXJ0Tm9kZTpmdW5jdGlvbihhKXt0aGlzLmltcGwuaW5zZXJ0Tm9kZShlKGEpKX0sc3Vycm91bmRDb250ZW50czpmdW5jdGlvbihhKXt0aGlzLmltcGwuc3Vycm91bmRDb250ZW50cyhlKGEpKX0sY2xvbmVSYW5nZTpmdW5jdGlvbigpe3JldHVybiBmKHRoaXMuaW1wbC5jbG9uZVJhbmdlKCkpfSxpc1BvaW50SW5SYW5nZTpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmltcGwuaXNQb2ludEluUmFuZ2UoZShhKSxiKX0sY29tcGFyZVBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuaW1wbC5jb21wYXJlUG9pbnQoZShhKSxiKX0saW50ZXJzZWN0c05vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW1wbC5pbnRlcnNlY3RzTm9kZShlKGEpKX0sdG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXBsLnRvU3RyaW5nKCl9fSxnLnByb3RvdHlwZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQmJihiLnByb3RvdHlwZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGYodGhpcy5pbXBsLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChhKSl9KSxjKHdpbmRvdy5SYW5nZSxiLGRvY3VtZW50LmNyZWF0ZVJhbmdlKCkpLGEud3JhcHBlcnMuUmFuZ2U9Yn0od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7dmFyIGI9YS5HZXRFbGVtZW50c0J5SW50ZXJmYWNlLGM9YS5QYXJlbnROb2RlSW50ZXJmYWNlLGQ9YS5TZWxlY3RvcnNJbnRlcmZhY2UsZT1hLm1peGluLGY9YS5yZWdpc3Rlck9iamVjdCxnPWYoZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpKTtlKGcucHJvdG90eXBlLGMpLGUoZy5wcm90b3R5cGUsZCksZShnLnByb3RvdHlwZSxiKTt2YXIgaD1mKGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiIpKTthLndyYXBwZXJzLkNvbW1lbnQ9aCxhLndyYXBwZXJzLkRvY3VtZW50RnJhZ21lbnQ9Z30od2luZG93LlNoYWRvd0RPTVBvbHlmaWxsKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXt2YXIgYj1rKGEuaW1wbC5vd25lckRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSk7Yy5jYWxsKHRoaXMsYiksaShiLHRoaXMpLHRoaXMudHJlZVNjb3BlXz1uZXcgZCh0aGlzLGcoYSkpO3ZhciBlPWEuc2hhZG93Um9vdDttLnNldCh0aGlzLGUpLGwuc2V0KHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5Eb2N1bWVudEZyYWdtZW50LGQ9YS5UcmVlU2NvcGUsZT1hLmVsZW1lbnRGcm9tUG9pbnQsZj1hLmdldElubmVySFRNTCxnPWEuZ2V0VHJlZVNjb3BlLGg9YS5taXhpbixpPWEucmV3cmFwLGo9YS5zZXRJbm5lckhUTUwsaz1hLnVud3JhcCxsPW5ldyBXZWFrTWFwLG09bmV3IFdlYWtNYXAsbj0vWyBcdFxuXHJcZl0vO2IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoYy5wcm90b3R5cGUpLGgoYi5wcm90b3R5cGUse2dldCBpbm5lckhUTUwoKXtyZXR1cm4gZih0aGlzKX0sc2V0IGlubmVySFRNTChhKXtqKHRoaXMsYSksdGhpcy5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX0sZ2V0IG9sZGVyU2hhZG93Um9vdCgpe3JldHVybiBtLmdldCh0aGlzKXx8bnVsbH0sZ2V0IGhvc3QoKXtyZXR1cm4gbC5nZXQodGhpcyl8fG51bGx9LGludmFsaWRhdGVTaGFkb3dSZW5kZXJlcjpmdW5jdGlvbigpe3JldHVybiBsLmdldCh0aGlzKS5pbnZhbGlkYXRlU2hhZG93UmVuZGVyZXIoKX0sZWxlbWVudEZyb21Qb2ludDpmdW5jdGlvbihhLGIpe3JldHVybiBlKHRoaXMsdGhpcy5vd25lckRvY3VtZW50LGEsYil9LGdldEVsZW1lbnRCeUlkOmZ1bmN0aW9uKGEpe3JldHVybiBuLnRlc3QoYSk/bnVsbDp0aGlzLnF1ZXJ5U2VsZWN0b3IoJ1tpZD0iJythKyciXScpfX0pLGEud3JhcHBlcnMuU2hhZG93Um9vdD1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2EucHJldmlvdXNTaWJsaW5nXz1hLnByZXZpb3VzU2libGluZyxhLm5leHRTaWJsaW5nXz1hLm5leHRTaWJsaW5nLGEucGFyZW50Tm9kZV89YS5wYXJlbnROb2RlfWZ1bmN0aW9uIGMoYSxjLGUpe3ZhciBmPUcoYSksZz1HKGMpLGg9ZT9HKGUpOm51bGw7aWYoZChjKSxiKGMpLGUpYS5maXJzdENoaWxkPT09ZSYmKGEuZmlyc3RDaGlsZF89ZSksZS5wcmV2aW91c1NpYmxpbmdfPWUucHJldmlvdXNTaWJsaW5nO2Vsc2V7YS5sYXN0Q2hpbGRfPWEubGFzdENoaWxkLGEubGFzdENoaWxkPT09YS5maXJzdENoaWxkJiYoYS5maXJzdENoaWxkXz1hLmZpcnN0Q2hpbGQpO3ZhciBpPUgoZi5sYXN0Q2hpbGQpO2kmJihpLm5leHRTaWJsaW5nXz1pLm5leHRTaWJsaW5nKX1mLmluc2VydEJlZm9yZShnLGgpfWZ1bmN0aW9uIGQoYSl7dmFyIGM9RyhhKSxkPWMucGFyZW50Tm9kZTtpZihkKXt2YXIgZT1IKGQpO2IoYSksYS5wcmV2aW91c1NpYmxpbmcmJihhLnByZXZpb3VzU2libGluZy5uZXh0U2libGluZ189YSksYS5uZXh0U2libGluZyYmKGEubmV4dFNpYmxpbmcucHJldmlvdXNTaWJsaW5nXz1hKSxlLmxhc3RDaGlsZD09PWEmJihlLmxhc3RDaGlsZF89YSksZS5maXJzdENoaWxkPT09YSYmKGUuZmlyc3RDaGlsZF89YSksZC5yZW1vdmVDaGlsZChjKX19ZnVuY3Rpb24gZShhLGIpe2coYikucHVzaChhKSx4KGEsYik7dmFyIGM9Si5nZXQoYSk7Y3x8Si5zZXQoYSxjPVtdKSxjLnB1c2goYil9ZnVuY3Rpb24gZihhKXtJLnNldChhLFtdKX1mdW5jdGlvbiBnKGEpe3ZhciBiPUkuZ2V0KGEpO3JldHVybiBifHxJLnNldChhLGI9W10pLGJ9ZnVuY3Rpb24gaChhKXtmb3IodmFyIGI9W10sYz0wLGQ9YS5maXJzdENoaWxkO2Q7ZD1kLm5leHRTaWJsaW5nKWJbYysrXT1kO3JldHVybiBifWZ1bmN0aW9uIGkoYSxiLGMpe2Zvcih2YXIgZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpaWYoYihkKSl7aWYoYyhkKT09PSExKXJldHVybn1lbHNlIGkoZCxiLGMpfWZ1bmN0aW9uIGooYSxiKXt2YXIgYz1iLmdldEF0dHJpYnV0ZSgic2VsZWN0Iik7aWYoIWMpcmV0dXJuITA7aWYoYz1jLnRyaW0oKSwhYylyZXR1cm4hMDtpZighKGEgaW5zdGFuY2VvZiB6KSlyZXR1cm4hMTtpZigiKiI9PT1jfHxjPT09YS5sb2NhbE5hbWUpcmV0dXJuITA7aWYoIU0udGVzdChjKSlyZXR1cm4hMTtpZigiOiI9PT1jWzBdJiYhTi50ZXN0KGMpKXJldHVybiExO3RyeXtyZXR1cm4gYS5tYXRjaGVzKGMpfWNhdGNoKGQpe3JldHVybiExfX1mdW5jdGlvbiBrKCl7Zm9yKHZhciBhPTA7YTxQLmxlbmd0aDthKyspe3ZhciBiPVBbYV0sYz1iLnBhcmVudFJlbmRlcmVyO2MmJmMuZGlydHl8fGIucmVuZGVyKCl9UD1bXX1mdW5jdGlvbiBsKCl7eT1udWxsLGsoKX1mdW5jdGlvbiBtKGEpe3ZhciBiPUwuZ2V0KGEpO3JldHVybiBifHwoYj1uZXcgcShhKSxMLnNldChhLGIpKSxifWZ1bmN0aW9uIG4oYSl7dmFyIGI9RShhKS5yb290O3JldHVybiBiIGluc3RhbmNlb2YgRD9iOm51bGx9ZnVuY3Rpb24gbyhhKXtyZXR1cm4gbShhLmhvc3QpfWZ1bmN0aW9uIHAoYSl7dGhpcy5za2lwPSExLHRoaXMubm9kZT1hLHRoaXMuY2hpbGROb2Rlcz1bXX1mdW5jdGlvbiBxKGEpe3RoaXMuaG9zdD1hLHRoaXMuZGlydHk9ITEsdGhpcy5pbnZhbGlkYXRlQXR0cmlidXRlcygpLHRoaXMuYXNzb2NpYXRlTm9kZShhKX1mdW5jdGlvbiByKGEpe3JldHVybiBhIGluc3RhbmNlb2YgQX1mdW5jdGlvbiBzKGEpe3JldHVybiBhIGluc3RhbmNlb2YgQX1mdW5jdGlvbiB0KGEpe3JldHVybiBhIGluc3RhbmNlb2YgQn1mdW5jdGlvbiB1KGEpe3JldHVybiBhIGluc3RhbmNlb2YgQn1mdW5jdGlvbiB2KGEpe3JldHVybiBhLnNoYWRvd1Jvb3R9ZnVuY3Rpb24gdyhhKXtmb3IodmFyIGI9W10sYz1hLnNoYWRvd1Jvb3Q7YztjPWMub2xkZXJTaGFkb3dSb290KWIucHVzaChjKTtyZXR1cm4gYn1mdW5jdGlvbiB4KGEsYil7Sy5zZXQoYSxiKX12YXIgeSx6PWEud3JhcHBlcnMuRWxlbWVudCxBPWEud3JhcHBlcnMuSFRNTENvbnRlbnRFbGVtZW50LEI9YS53cmFwcGVycy5IVE1MU2hhZG93RWxlbWVudCxDPWEud3JhcHBlcnMuTm9kZSxEPWEud3JhcHBlcnMuU2hhZG93Um9vdCxFPShhLmFzc2VydCxhLmdldFRyZWVTY29wZSksRj0oYS5taXhpbixhLm9uZU9mKSxHPWEudW53cmFwLEg9YS53cmFwLEk9bmV3IFdlYWtNYXAsSj1uZXcgV2Vha01hcCxLPW5ldyBXZWFrTWFwLEw9bmV3IFdlYWtNYXAsTT0vXlsqLjojW2EtekEtWl98XS8sTj1uZXcgUmVnRXhwKCJeOigiK1sibGluayIsInZpc2l0ZWQiLCJ0YXJnZXQiLCJlbmFibGVkIiwiZGlzYWJsZWQiLCJjaGVja2VkIiwiaW5kZXRlcm1pbmF0ZSIsIm50aC1jaGlsZCIsIm50aC1sYXN0LWNoaWxkIiwibnRoLW9mLXR5cGUiLCJudGgtbGFzdC1vZi10eXBlIiwiZmlyc3QtY2hpbGQiLCJsYXN0LWNoaWxkIiwiZmlyc3Qtb2YtdHlwZSIsImxhc3Qtb2YtdHlwZSIsIm9ubHktb2YtdHlwZSJdLmpvaW4oInwiKSsiKSIpLE89Rih3aW5kb3csWyJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZXRUaW1lb3V0Il0pLFA9W10sUT1uZXcgQXJyYXlTcGxpY2U7US5lcXVhbHM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gRyhhLm5vZGUpPT09Yn0scC5wcm90b3R5cGU9e2FwcGVuZDpmdW5jdGlvbihhKXt2YXIgYj1uZXcgcChhKTtyZXR1cm4gdGhpcy5jaGlsZE5vZGVzLnB1c2goYiksYn0sc3luYzpmdW5jdGlvbihhKXtpZighdGhpcy5za2lwKXtmb3IodmFyIGI9dGhpcy5ub2RlLGU9dGhpcy5jaGlsZE5vZGVzLGY9aChHKGIpKSxnPWF8fG5ldyBXZWFrTWFwLGk9US5jYWxjdWxhdGVTcGxpY2VzKGUsZiksaj0wLGs9MCxsPTAsbT0wO208aS5sZW5ndGg7bSsrKXtmb3IodmFyIG49aVttXTtsPG4uaW5kZXg7bCsrKWsrKyxlW2orK10uc3luYyhnKTtmb3IodmFyIG89bi5yZW1vdmVkLmxlbmd0aCxwPTA7bz5wO3ArKyl7dmFyIHE9SChmW2srK10pO2cuZ2V0KHEpfHxkKHEpfWZvcih2YXIgcj1uLmFkZGVkQ291bnQscz1mW2tdJiZIKGZba10pLHA9MDtyPnA7cCsrKXt2YXIgdD1lW2orK10sdT10Lm5vZGU7YyhiLHUscyksZy5zZXQodSwhMCksdC5zeW5jKGcpfWwrPXJ9Zm9yKHZhciBtPWw7bTxlLmxlbmd0aDttKyspZVttXS5zeW5jKGcpfX19LHEucHJvdG90eXBlPXtyZW5kZXI6ZnVuY3Rpb24oYSl7aWYodGhpcy5kaXJ0eSl7dGhpcy5pbnZhbGlkYXRlQXR0cmlidXRlcygpLHRoaXMudHJlZUNvbXBvc2l0aW9uKCk7dmFyIGI9dGhpcy5ob3N0LGM9Yi5zaGFkb3dSb290O3RoaXMuYXNzb2NpYXRlTm9kZShiKTtmb3IodmFyIGQ9IWUsZT1hfHxuZXcgcChiKSxmPWMuZmlyc3RDaGlsZDtmO2Y9Zi5uZXh0U2libGluZyl0aGlzLnJlbmRlck5vZGUoYyxlLGYsITEpO2QmJmUuc3luYygpLHRoaXMuZGlydHk9ITF9fSxnZXQgcGFyZW50UmVuZGVyZXIoKXtyZXR1cm4gRSh0aGlzLmhvc3QpLnJlbmRlcmVyfSxpbnZhbGlkYXRlOmZ1bmN0aW9uKCl7aWYoIXRoaXMuZGlydHkpe2lmKHRoaXMuZGlydHk9ITAsUC5wdXNoKHRoaXMpLHkpcmV0dXJuO3k9d2luZG93W09dKGwsMCl9fSxyZW5kZXJOb2RlOmZ1bmN0aW9uKGEsYixjLGQpe2lmKHYoYykpe2I9Yi5hcHBlbmQoYyk7dmFyIGU9bShjKTtlLmRpcnR5PSEwLGUucmVuZGVyKGIpfWVsc2UgcihjKT90aGlzLnJlbmRlckluc2VydGlvblBvaW50KGEsYixjLGQpOnQoYyk/dGhpcy5yZW5kZXJTaGFkb3dJbnNlcnRpb25Qb2ludChhLGIsYyk6dGhpcy5yZW5kZXJBc0FueURvbVRyZWUoYSxiLGMsZCl9LHJlbmRlckFzQW55RG9tVHJlZTpmdW5jdGlvbihhLGIsYyxkKXtpZihiPWIuYXBwZW5kKGMpLHYoYykpe3ZhciBlPW0oYyk7Yi5za2lwPSFlLmRpcnR5LGUucmVuZGVyKGIpfWVsc2UgZm9yKHZhciBmPWMuZmlyc3RDaGlsZDtmO2Y9Zi5uZXh0U2libGluZyl0aGlzLnJlbmRlck5vZGUoYSxiLGYsZCl9LHJlbmRlckluc2VydGlvblBvaW50OmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWcoYyk7aWYoZS5sZW5ndGgpe3RoaXMuYXNzb2NpYXRlTm9kZShjKTtmb3IodmFyIGY9MDtmPGUubGVuZ3RoO2YrKyl7dmFyIGg9ZVtmXTtyKGgpJiZkP3RoaXMucmVuZGVySW5zZXJ0aW9uUG9pbnQoYSxiLGgsZCk6dGhpcy5yZW5kZXJBc0FueURvbVRyZWUoYSxiLGgsZCl9fWVsc2UgdGhpcy5yZW5kZXJGYWxsYmFja0NvbnRlbnQoYSxiLGMpO3RoaXMuYXNzb2NpYXRlTm9kZShjLnBhcmVudE5vZGUpfSxyZW5kZXJTaGFkb3dJbnNlcnRpb25Qb2ludDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9YS5vbGRlclNoYWRvd1Jvb3Q7aWYoZCl7eChkLGMpLHRoaXMuYXNzb2NpYXRlTm9kZShjLnBhcmVudE5vZGUpO2Zvcih2YXIgZT1kLmZpcnN0Q2hpbGQ7ZTtlPWUubmV4dFNpYmxpbmcpdGhpcy5yZW5kZXJOb2RlKGQsYixlLCEwKX1lbHNlIHRoaXMucmVuZGVyRmFsbGJhY2tDb250ZW50KGEsYixjKX0scmVuZGVyRmFsbGJhY2tDb250ZW50OmZ1bmN0aW9uKGEsYixjKXt0aGlzLmFzc29jaWF0ZU5vZGUoYyksdGhpcy5hc3NvY2lhdGVOb2RlKGMucGFyZW50Tm9kZSk7Zm9yKHZhciBkPWMuZmlyc3RDaGlsZDtkO2Q9ZC5uZXh0U2libGluZyl0aGlzLnJlbmRlckFzQW55RG9tVHJlZShhLGIsZCwhMSl9LGludmFsaWRhdGVBdHRyaWJ1dGVzOmZ1bmN0aW9uKCl7dGhpcy5hdHRyaWJ1dGVzPU9iamVjdC5jcmVhdGUobnVsbCl9LHVwZGF0ZURlcGVuZGVudEF0dHJpYnV0ZXM6ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9dGhpcy5hdHRyaWJ1dGVzOy9cLlx3Ky8udGVzdChhKSYmKGJbImNsYXNzIl09ITApLC8jXHcrLy50ZXN0KGEpJiYoYi5pZD0hMCksYS5yZXBsYWNlKC9cW1xzKihbXlxzPVx8flxdXSspL2csZnVuY3Rpb24oYSxjKXtiW2NdPSEwfSl9fSxkZXBlbmRzT25BdHRyaWJ1dGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYXR0cmlidXRlc1thXX0sZGlzdHJpYnV0ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7aShhLHMsZnVuY3Rpb24oYSl7ZihhKSxjLnVwZGF0ZURlcGVuZGVudEF0dHJpYnV0ZXMoYS5nZXRBdHRyaWJ1dGUoInNlbGVjdCIpKTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGc9YltkXTt2b2lkIDAhPT1nJiZqKGcsYSkmJihlKGcsYSksYltkXT12b2lkIDApfX0pfSx0cmVlQ29tcG9zaXRpb246ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5ob3N0LGI9YS5zaGFkb3dSb290LGM9W10sZD1hLmZpcnN0Q2hpbGQ7ZDtkPWQubmV4dFNpYmxpbmcpaWYocihkKSl7dmFyIGU9ZyhkKTtlJiZlLmxlbmd0aHx8KGU9aChkKSksYy5wdXNoLmFwcGx5KGMsZSl9ZWxzZSBjLnB1c2goZCk7Zm9yKHZhciBmLGo7Yjspe2lmKGY9dm9pZCAwLGkoYix1LGZ1bmN0aW9uKGEpe3JldHVybiBmPWEsITF9KSxqPWYsdGhpcy5kaXN0cmlidXRlKGIsYyksail7dmFyIGs9Yi5vbGRlclNoYWRvd1Jvb3Q7aWYoayl7Yj1rLHgoYixqKTtjb250aW51ZX1icmVha31icmVha319LGFzc29jaWF0ZU5vZGU6ZnVuY3Rpb24oYSl7YS5pbXBsLnBvbHltZXJTaGFkb3dSZW5kZXJlcl89dGhpc319LEMucHJvdG90eXBlLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcj1mdW5jdGlvbigpe3ZhciBhPXRoaXMuaW1wbC5wb2x5bWVyU2hhZG93UmVuZGVyZXJfO3JldHVybiBhPyhhLmludmFsaWRhdGUoKSwhMCk6ITF9LEEucHJvdG90eXBlLmdldERpc3RyaWJ1dGVkTm9kZXM9ZnVuY3Rpb24oKXtyZXR1cm4gaygpLGcodGhpcyl9LEIucHJvdG90eXBlLm5vZGVJc0luc2VydGVkXz1BLnByb3RvdHlwZS5ub2RlSXNJbnNlcnRlZF89ZnVuY3Rpb24oKXt0aGlzLmludmFsaWRhdGVTaGFkb3dSZW5kZXJlcigpO3ZhciBhLGI9bih0aGlzKTtiJiYoYT1vKGIpKSx0aGlzLmltcGwucG9seW1lclNoYWRvd1JlbmRlcmVyXz1hLGEmJmEuaW52YWxpZGF0ZSgpfSxhLmV2ZW50UGFyZW50c1RhYmxlPUosYS5nZXRSZW5kZXJlckZvckhvc3Q9bSxhLmdldFNoYWRvd1RyZWVzPXcsYS5pbnNlcnRpb25QYXJlbnRUYWJsZT1LLGEucmVuZGVyQWxsUGVuZGluZz1rLGEudmlzdWFsPXtpbnNlcnRCZWZvcmU6YyxyZW1vdmU6ZH19KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYil7aWYod2luZG93W2JdKXtkKCFhLndyYXBwZXJzW2JdKTt2YXIgaT1mdW5jdGlvbihhKXtjLmNhbGwodGhpcyxhKX07aS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShjLnByb3RvdHlwZSksZShpLnByb3RvdHlwZSx7Z2V0IGZvcm0oKXtyZXR1cm4gaChnKHRoaXMpLmZvcm0pfX0pLGYod2luZG93W2JdLGksZG9jdW1lbnQuY3JlYXRlRWxlbWVudChiLnNsaWNlKDQsLTcpKSksYS53cmFwcGVyc1tiXT1pfX12YXIgYz1hLndyYXBwZXJzLkhUTUxFbGVtZW50LGQ9YS5hc3NlcnQsZT1hLm1peGluLGY9YS5yZWdpc3RlcldyYXBwZXIsZz1hLnVud3JhcCxoPWEud3JhcCxpPVsiSFRNTEJ1dHRvbkVsZW1lbnQiLCJIVE1MRmllbGRTZXRFbGVtZW50IiwiSFRNTElucHV0RWxlbWVudCIsIkhUTUxLZXlnZW5FbGVtZW50IiwiSFRNTExhYmVsRWxlbWVudCIsIkhUTUxMZWdlbmRFbGVtZW50IiwiSFRNTE9iamVjdEVsZW1lbnQiLCJIVE1MT3V0cHV0RWxlbWVudCIsIkhUTUxUZXh0QXJlYUVsZW1lbnQiXTtpLmZvckVhY2goYil9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7dGhpcy5pbXBsPWF9e3ZhciBjPWEucmVnaXN0ZXJXcmFwcGVyLGQ9YS51bndyYXAsZT1hLnVud3JhcElmTmVlZGVkLGY9YS53cmFwO3dpbmRvdy5TZWxlY3Rpb259Yi5wcm90b3R5cGU9e2dldCBhbmNob3JOb2RlKCl7cmV0dXJuIGYodGhpcy5pbXBsLmFuY2hvck5vZGUpfSxnZXQgZm9jdXNOb2RlKCl7cmV0dXJuIGYodGhpcy5pbXBsLmZvY3VzTm9kZSl9LGFkZFJhbmdlOmZ1bmN0aW9uKGEpe3RoaXMuaW1wbC5hZGRSYW5nZShkKGEpKX0sY29sbGFwc2U6ZnVuY3Rpb24oYSxiKXt0aGlzLmltcGwuY29sbGFwc2UoZShhKSxiKX0sY29udGFpbnNOb2RlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuaW1wbC5jb250YWluc05vZGUoZShhKSxiKX0sZXh0ZW5kOmZ1bmN0aW9uKGEsYil7dGhpcy5pbXBsLmV4dGVuZChlKGEpLGIpfSxnZXRSYW5nZUF0OmZ1bmN0aW9uKGEpe3JldHVybiBmKHRoaXMuaW1wbC5nZXRSYW5nZUF0KGEpKX0scmVtb3ZlUmFuZ2U6ZnVuY3Rpb24oYSl7dGhpcy5pbXBsLnJlbW92ZVJhbmdlKGQoYSkpfSxzZWxlY3RBbGxDaGlsZHJlbjpmdW5jdGlvbihhKXt0aGlzLmltcGwuc2VsZWN0QWxsQ2hpbGRyZW4oZShhKSl9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW1wbC50b1N0cmluZygpfX0sYyh3aW5kb3cuU2VsZWN0aW9uLGIsd2luZG93LmdldFNlbGVjdGlvbigpKSxhLndyYXBwZXJzLlNlbGVjdGlvbj1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2suY2FsbCh0aGlzLGEpLHRoaXMudHJlZVNjb3BlXz1uZXcgcCh0aGlzLG51bGwpfWZ1bmN0aW9uIGMoYSl7dmFyIGM9ZG9jdW1lbnRbYV07Yi5wcm90b3R5cGVbYV09ZnVuY3Rpb24oKXtyZXR1cm4gQShjLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpKX19ZnVuY3Rpb24gZChhLGIpe0QuY2FsbChiLmltcGwseihhKSksZShhLGIpfWZ1bmN0aW9uIGUoYSxiKXthLnNoYWRvd1Jvb3QmJmIuYWRvcHROb2RlKGEuc2hhZG93Um9vdCksYSBpbnN0YW5jZW9mIG8mJmYoYSxiKTtmb3IodmFyIGM9YS5maXJzdENoaWxkO2M7Yz1jLm5leHRTaWJsaW5nKWUoYyxiKX1mdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5vbGRlclNoYWRvd1Jvb3Q7YyYmYi5hZG9wdE5vZGUoYyl9ZnVuY3Rpb24gZyhhKXt0aGlzLmltcGw9YX1mdW5jdGlvbiBoKGEsYil7dmFyIGM9ZG9jdW1lbnQuaW1wbGVtZW50YXRpb25bYl07YS5wcm90b3R5cGVbYl09ZnVuY3Rpb24oKXtyZXR1cm4gQShjLmFwcGx5KHRoaXMuaW1wbCxhcmd1bWVudHMpKX19ZnVuY3Rpb24gaShhLGIpe3ZhciBjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uW2JdO2EucHJvdG90eXBlW2JdPWZ1bmN0aW9uKCl7cmV0dXJuIGMuYXBwbHkodGhpcy5pbXBsLGFyZ3VtZW50cyl9fXZhciBqPWEuR2V0RWxlbWVudHNCeUludGVyZmFjZSxrPWEud3JhcHBlcnMuTm9kZSxsPWEuUGFyZW50Tm9kZUludGVyZmFjZSxtPWEud3JhcHBlcnMuU2VsZWN0aW9uLG49YS5TZWxlY3RvcnNJbnRlcmZhY2Usbz1hLndyYXBwZXJzLlNoYWRvd1Jvb3QscD1hLlRyZWVTY29wZSxxPWEuY2xvbmVOb2RlLHI9YS5kZWZpbmVXcmFwR2V0dGVyLHM9YS5lbGVtZW50RnJvbVBvaW50LHQ9YS5mb3J3YXJkTWV0aG9kc1RvV3JhcHBlcix1PWEubWF0Y2hlc05hbWVzLHY9YS5taXhpbix3PWEucmVnaXN0ZXJXcmFwcGVyLHg9YS5yZW5kZXJBbGxQZW5kaW5nLHk9YS5yZXdyYXAsej1hLnVud3JhcCxBPWEud3JhcCxCPWEud3JhcEV2ZW50VGFyZ2V0TWV0aG9kcyxDPShhLndyYXBOb2RlTGlzdCxuZXcgV2Vha01hcCk7Yi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShrLnByb3RvdHlwZSkscihiLCJkb2N1bWVudEVsZW1lbnQiKSxyKGIsImJvZHkiKSxyKGIsImhlYWQiKSxbImNyZWF0ZUNvbW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZUV2ZW50IiwiY3JlYXRlRXZlbnROUyIsImNyZWF0ZVJhbmdlIiwiY3JlYXRlVGV4dE5vZGUiLCJnZXRFbGVtZW50QnlJZCJdLmZvckVhY2goYyk7dmFyIEQ9ZG9jdW1lbnQuYWRvcHROb2RlLEU9ZG9jdW1lbnQuZ2V0U2VsZWN0aW9uO2lmKHYoYi5wcm90b3R5cGUse2Fkb3B0Tm9kZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5wYXJlbnROb2RlJiZhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYSksZChhLHRoaXMpLGF9LGVsZW1lbnRGcm9tUG9pbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcyh0aGlzLHRoaXMsYSxiKX0saW1wb3J0Tm9kZTpmdW5jdGlvbihhLGIpe3JldHVybiBxKGEsYix0aGlzLmltcGwpfSxnZXRTZWxlY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4geCgpLG5ldyBtKEUuY2FsbCh6KHRoaXMpKSl9fSksZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50KXt2YXIgRj1kb2N1bWVudC5yZWdpc3RlckVsZW1lbnQ7Yi5wcm90b3R5cGUucmVnaXN0ZXJFbGVtZW50PWZ1bmN0aW9uKGIsYyl7ZnVuY3Rpb24gZChhKXtyZXR1cm4gYT92b2lkKHRoaXMuaW1wbD1hKTpmP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZixiKTpkb2N1bWVudC5jcmVhdGVFbGVtZW50KGIpfXZhciBlLGY7aWYodm9pZCAwIT09YyYmKGU9Yy5wcm90b3R5cGUsZj1jLmV4dGVuZHMpLGV8fChlPU9iamVjdC5jcmVhdGUoSFRNTEVsZW1lbnQucHJvdG90eXBlKSksYS5uYXRpdmVQcm90b3R5cGVUYWJsZS5nZXQoZSkpdGhyb3cgbmV3IEVycm9yKCJOb3RTdXBwb3J0ZWRFcnJvciIpO2Zvcih2YXIgZyxoPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKSxpPVtdO2gmJiEoZz1hLm5hdGl2ZVByb3RvdHlwZVRhYmxlLmdldChoKSk7KWkucHVzaChoKSxoPU9iamVjdC5nZXRQcm90b3R5cGVPZihoKTtpZighZyl0aHJvdyBuZXcgRXJyb3IoIk5vdFN1cHBvcnRlZEVycm9yIik7Zm9yKHZhciBqPU9iamVjdC5jcmVhdGUoZyksaz1pLmxlbmd0aC0xO2s+PTA7ay0tKWo9T2JqZWN0LmNyZWF0ZShqKTtbImNyZWF0ZWRDYWxsYmFjayIsImF0dGFjaGVkQ2FsbGJhY2siLCJkZXRhY2hlZENhbGxiYWNrIiwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1lW2FdO2ImJihqW2FdPWZ1bmN0aW9uKCl7QSh0aGlzKWluc3RhbmNlb2YgZHx8eSh0aGlzKSxiLmFwcGx5KEEodGhpcyksYXJndW1lbnRzKX0pfSk7dmFyIGw9e3Byb3RvdHlwZTpqfTtmJiYobC5leHRlbmRzPWYpLGQucHJvdG90eXBlPWUsZC5wcm90b3R5cGUuY29uc3RydWN0b3I9ZCxhLmNvbnN0cnVjdG9yVGFibGUuc2V0KGosZCksYS5uYXRpdmVQcm90b3R5cGVUYWJsZS5zZXQoZSxqKTtGLmNhbGwoeih0aGlzKSxiLGwpO3JldHVybiBkfSx0KFt3aW5kb3cuSFRNTERvY3VtZW50fHx3aW5kb3cuRG9jdW1lbnRdLFsicmVnaXN0ZXJFbGVtZW50Il0pfXQoW3dpbmRvdy5IVE1MQm9keUVsZW1lbnQsd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50LHdpbmRvdy5IVE1MSGVhZEVsZW1lbnQsd2luZG93LkhUTUxIdG1sRWxlbWVudF0sWyJhcHBlbmRDaGlsZCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY29udGFpbnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZU5TIiwiaW5zZXJ0QmVmb3JlIiwicXVlcnlTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZW1vdmVDaGlsZCIsInJlcGxhY2VDaGlsZCJdLmNvbmNhdCh1KSksdChbd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50XSxbImFkb3B0Tm9kZSIsImltcG9ydE5vZGUiLCJjb250YWlucyIsImNyZWF0ZUNvbW1lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZUV2ZW50IiwiY3JlYXRlRXZlbnROUyIsImNyZWF0ZVJhbmdlIiwiY3JlYXRlVGV4dE5vZGUiLCJlbGVtZW50RnJvbVBvaW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRTZWxlY3Rpb24iXSksdihiLnByb3RvdHlwZSxqKSx2KGIucHJvdG90eXBlLGwpLHYoYi5wcm90b3R5cGUsbiksdihiLnByb3RvdHlwZSx7Z2V0IGltcGxlbWVudGF0aW9uKCl7dmFyIGE9Qy5nZXQodGhpcyk7cmV0dXJuIGE/YTooYT1uZXcgZyh6KHRoaXMpLmltcGxlbWVudGF0aW9uKSxDLnNldCh0aGlzLGEpLGEpfX0pLHcod2luZG93LkRvY3VtZW50LGIsZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKSksd2luZG93LkhUTUxEb2N1bWVudCYmdyh3aW5kb3cuSFRNTERvY3VtZW50LGIpLEIoW3dpbmRvdy5IVE1MQm9keUVsZW1lbnQsd2luZG93LkhUTUxEb2N1bWVudHx8d2luZG93LkRvY3VtZW50LHdpbmRvdy5IVE1MSGVhZEVsZW1lbnRdKSxoKGcsImNyZWF0ZURvY3VtZW50VHlwZSIpLGgoZywiY3JlYXRlRG9jdW1lbnQiKSxoKGcsImNyZWF0ZUhUTUxEb2N1bWVudCIpLGkoZywiaGFzRmVhdHVyZSIpLHcod2luZG93LkRPTUltcGxlbWVudGF0aW9uLGcpLHQoW3dpbmRvdy5ET01JbXBsZW1lbnRhdGlvbl0sWyJjcmVhdGVEb2N1bWVudFR5cGUiLCJjcmVhdGVEb2N1bWVudCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImhhc0ZlYXR1cmUiXSksYS5hZG9wdE5vZGVOb1JlbW92ZT1kLGEud3JhcHBlcnMuRE9NSW1wbGVtZW50YXRpb249ZyxhLndyYXBwZXJzLkRvY3VtZW50PWJ9KHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSl7Yy5jYWxsKHRoaXMsYSl9dmFyIGM9YS53cmFwcGVycy5FdmVudFRhcmdldCxkPWEud3JhcHBlcnMuU2VsZWN0aW9uLGU9YS5taXhpbixmPWEucmVnaXN0ZXJXcmFwcGVyLGc9YS5yZW5kZXJBbGxQZW5kaW5nLGg9YS51bndyYXAsaT1hLnVud3JhcElmTmVlZGVkLGo9YS53cmFwLGs9d2luZG93LldpbmRvdyxsPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlLG09d2luZG93LmdldFNlbGVjdGlvbjtiLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGMucHJvdG90eXBlKSxrLnByb3RvdHlwZS5nZXRDb21wdXRlZFN0eWxlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGoodGhpc3x8d2luZG93KS5nZXRDb21wdXRlZFN0eWxlKGkoYSksYil9LGsucHJvdG90eXBlLmdldFNlbGVjdGlvbj1mdW5jdGlvbigpe3JldHVybiBqKHRoaXN8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCl9LGRlbGV0ZSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSxkZWxldGUgd2luZG93LmdldFNlbGVjdGlvbixbImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCJdLmZvckVhY2goZnVuY3Rpb24oYSl7ay5wcm90b3R5cGVbYV09ZnVuY3Rpb24oKXt2YXIgYj1qKHRoaXN8fHdpbmRvdyk7cmV0dXJuIGJbYV0uYXBwbHkoYixhcmd1bWVudHMpfSxkZWxldGUgd2luZG93W2FdfSksZShiLnByb3RvdHlwZSx7Z2V0Q29tcHV0ZWRTdHlsZTpmdW5jdGlvbihhLGIpe3JldHVybiBnKCksbC5jYWxsKGgodGhpcyksaShhKSxiKX0sZ2V0U2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGcoKSxuZXcgZChtLmNhbGwoaCh0aGlzKSkpfX0pLGYoayxiKSxhLndyYXBwZXJzLldpbmRvdz1ifSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgYj1hLnVud3JhcCxjPXdpbmRvdy5EYXRhVHJhbnNmZXJ8fHdpbmRvdy5DbGlwYm9hcmQsZD1jLnByb3RvdHlwZS5zZXREcmFnSW1hZ2U7Yy5wcm90b3R5cGUuc2V0RHJhZ0ltYWdlPWZ1bmN0aW9uKGEsYyxlKXtkLmNhbGwodGhpcyxiKGEpLGMsZSl9fSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe3ZhciBiPWNbYV0sZD13aW5kb3dbYl07aWYoZCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChhKSxmPWUuY29uc3RydWN0b3I7d2luZG93W2JdPWZ9fXZhciBjPShhLmlzV3JhcHBlckZvcix7YToiSFRNTEFuY2hvckVsZW1lbnQiLGFyZWE6IkhUTUxBcmVhRWxlbWVudCIsYXVkaW86IkhUTUxBdWRpb0VsZW1lbnQiLGJhc2U6IkhUTUxCYXNlRWxlbWVudCIsYm9keToiSFRNTEJvZHlFbGVtZW50IixicjoiSFRNTEJSRWxlbWVudCIsYnV0dG9uOiJIVE1MQnV0dG9uRWxlbWVudCIsY2FudmFzOiJIVE1MQ2FudmFzRWxlbWVudCIsY2FwdGlvbjoiSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQiLGNvbDoiSFRNTFRhYmxlQ29sRWxlbWVudCIsY29udGVudDoiSFRNTENvbnRlbnRFbGVtZW50IixkYXRhOiJIVE1MRGF0YUVsZW1lbnQiLGRhdGFsaXN0OiJIVE1MRGF0YUxpc3RFbGVtZW50IixkZWw6IkhUTUxNb2RFbGVtZW50IixkaXI6IkhUTUxEaXJlY3RvcnlFbGVtZW50IixkaXY6IkhUTUxEaXZFbGVtZW50IixkbDoiSFRNTERMaXN0RWxlbWVudCIsZW1iZWQ6IkhUTUxFbWJlZEVsZW1lbnQiLGZpZWxkc2V0OiJIVE1MRmllbGRTZXRFbGVtZW50Iixmb250OiJIVE1MRm9udEVsZW1lbnQiLGZvcm06IkhUTUxGb3JtRWxlbWVudCIsZnJhbWU6IkhUTUxGcmFtZUVsZW1lbnQiLGZyYW1lc2V0OiJIVE1MRnJhbWVTZXRFbGVtZW50IixoMToiSFRNTEhlYWRpbmdFbGVtZW50IixoZWFkOiJIVE1MSGVhZEVsZW1lbnQiLGhyOiJIVE1MSFJFbGVtZW50IixodG1sOiJIVE1MSHRtbEVsZW1lbnQiLGlmcmFtZToiSFRNTElGcmFtZUVsZW1lbnQiLGltZzoiSFRNTEltYWdlRWxlbWVudCIsaW5wdXQ6IkhUTUxJbnB1dEVsZW1lbnQiLGtleWdlbjoiSFRNTEtleWdlbkVsZW1lbnQiLGxhYmVsOiJIVE1MTGFiZWxFbGVtZW50IixsZWdlbmQ6IkhUTUxMZWdlbmRFbGVtZW50IixsaToiSFRNTExJRWxlbWVudCIsbGluazoiSFRNTExpbmtFbGVtZW50IixtYXA6IkhUTUxNYXBFbGVtZW50IixtYXJxdWVlOiJIVE1MTWFycXVlZUVsZW1lbnQiLG1lbnU6IkhUTUxNZW51RWxlbWVudCIsbWVudWl0ZW06IkhUTUxNZW51SXRlbUVsZW1lbnQiLG1ldGE6IkhUTUxNZXRhRWxlbWVudCIsbWV0ZXI6IkhUTUxNZXRlckVsZW1lbnQiLG9iamVjdDoiSFRNTE9iamVjdEVsZW1lbnQiLG9sOiJIVE1MT0xpc3RFbGVtZW50IixvcHRncm91cDoiSFRNTE9wdEdyb3VwRWxlbWVudCIsb3B0aW9uOiJIVE1MT3B0aW9uRWxlbWVudCIsb3V0cHV0OiJIVE1MT3V0cHV0RWxlbWVudCIscDoiSFRNTFBhcmFncmFwaEVsZW1lbnQiLHBhcmFtOiJIVE1MUGFyYW1FbGVtZW50IixwcmU6IkhUTUxQcmVFbGVtZW50Iixwcm9ncmVzczoiSFRNTFByb2dyZXNzRWxlbWVudCIscToiSFRNTFF1b3RlRWxlbWVudCIsc2NyaXB0OiJIVE1MU2NyaXB0RWxlbWVudCIsc2VsZWN0OiJIVE1MU2VsZWN0RWxlbWVudCIsc2hhZG93OiJIVE1MU2hhZG93RWxlbWVudCIsc291cmNlOiJIVE1MU291cmNlRWxlbWVudCIsc3BhbjoiSFRNTFNwYW5FbGVtZW50IixzdHlsZToiSFRNTFN0eWxlRWxlbWVudCIsdGFibGU6IkhUTUxUYWJsZUVsZW1lbnQiLHRib2R5OiJIVE1MVGFibGVTZWN0aW9uRWxlbWVudCIsdGVtcGxhdGU6IkhUTUxUZW1wbGF0ZUVsZW1lbnQiLHRleHRhcmVhOiJIVE1MVGV4dEFyZWFFbGVtZW50Iix0aGVhZDoiSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQiLHRpbWU6IkhUTUxUaW1lRWxlbWVudCIsdGl0bGU6IkhUTUxUaXRsZUVsZW1lbnQiLHRyOiJIVE1MVGFibGVSb3dFbGVtZW50Iix0cmFjazoiSFRNTFRyYWNrRWxlbWVudCIsdWw6IkhUTUxVTGlzdEVsZW1lbnQiLHZpZGVvOiJIVE1MVmlkZW9FbGVtZW50In0pO09iamVjdC5rZXlzKGMpLmZvckVhY2goYiksT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYS53cmFwcGVycykuZm9yRWFjaChmdW5jdGlvbihiKXt3aW5kb3dbYl09YS53cmFwcGVyc1tiXX0pfSh3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpLGZ1bmN0aW9uKCl7d2luZG93LndyYXA9U2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkLHdpbmRvdy51bndyYXA9U2hhZG93RE9NUG9seWZpbGwudW53cmFwSWZOZWVkZWQsT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCJ3ZWJraXRTaGFkb3dSb290IixPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEVsZW1lbnQucHJvdG90eXBlLCJzaGFkb3dSb290IikpO3ZhciBhPUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3Q7RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhZG93Um9vdD1mdW5jdGlvbigpe3ZhciBiPWEuY2FsbCh0aGlzKTtyZXR1cm4gQ3VzdG9tRWxlbWVudHMud2F0Y2hTaGFkb3codGhpcyksYn0sRWxlbWVudC5wcm90b3R5cGUud2Via2l0Q3JlYXRlU2hhZG93Um9vdD1FbGVtZW50LnByb3RvdHlwZS5jcmVhdGVTaGFkb3dSb290fSgpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz0iIjtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLGZ1bmN0aW9uKGEpe2MrPWEudGV4dENvbnRlbnQrIlxuXG4ifSksYnx8KGM9Yy5yZXBsYWNlKGwsIiIpKSxjfWZ1bmN0aW9uIGMoYSl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtyZXR1cm4gYi50ZXh0Q29udGVudD1hLGJ9ZnVuY3Rpb24gZChhKXt2YXIgYj1jKGEpO2RvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYik7dmFyIGQ9W107aWYoYi5zaGVldCl0cnl7ZD1iLnNoZWV0LmNzc1J1bGVzfWNhdGNoKGUpe31lbHNlIGNvbnNvbGUud2Fybigic2hlZXQgbm90IGZvdW5kIixiKTtyZXR1cm4gYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpLGR9ZnVuY3Rpb24gZSgpe3YuaW5pdGlhbGl6ZWQ9ITAsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2KTt2YXIgYT12LmNvbnRlbnREb2N1bWVudCxiPWEuY3JlYXRlRWxlbWVudCgiYmFzZSIpO2IuaHJlZj1kb2N1bWVudC5iYXNlVVJJLGEuaGVhZC5hcHBlbmRDaGlsZChiKX1mdW5jdGlvbiBmKGEpe3YuaW5pdGlhbGl6ZWR8fGUoKSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHYpLGEodi5jb250ZW50RG9jdW1lbnQpLGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodil9ZnVuY3Rpb24gZyhhLGIpe2lmKGIpe3ZhciBlO2lmKGEubWF0Y2goIkBpbXBvcnQiKSYmeCl7dmFyIGc9YyhhKTtmKGZ1bmN0aW9uKGEpe2EuaGVhZC5hcHBlbmRDaGlsZChnLmltcGwpLGU9Zy5zaGVldC5jc3NSdWxlcyxiKGUpfSl9ZWxzZSBlPWQoYSksYihlKX19ZnVuY3Rpb24gaChhKXthJiZqKCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYSkpfWZ1bmN0aW9uIGkoYSxiKXt2YXIgZD1jKGEpO2Quc2V0QXR0cmlidXRlKGIsIiIpLGQuc2V0QXR0cmlidXRlKHosIiIpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZCl9ZnVuY3Rpb24gaigpe3JldHVybiB3fHwodz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpLHcuc2V0QXR0cmlidXRlKHosIiIpLHdbel09ITApLHd9dmFyIGs9e3N0cmljdFN0eWxpbmc6ITEscmVnaXN0cnk6e30sc2hpbVN0eWxpbmc6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPXRoaXMucHJlcGFyZVJvb3QoYSxjLGQpLGY9dGhpcy5pc1R5cGVFeHRlbnNpb24oZCksZz10aGlzLm1ha2VTY29wZVNlbGVjdG9yKGMsZiksaD1iKGUsITApO2g9dGhpcy5zY29wZUNzc1RleHQoaCxnKSxhJiYoYS5zaGltbWVkU3R5bGU9aCksdGhpcy5hZGRDc3NUb0RvY3VtZW50KGgsYyl9LHNoaW1TdHlsZTpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnNoaW1Dc3NUZXh0KGEudGV4dENvbnRlbnQsYil9LHNoaW1Dc3NUZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9dGhpcy5pbnNlcnREaXJlY3RpdmVzKGEpLHRoaXMuc2NvcGVDc3NUZXh0KGEsYil9LG1ha2VTY29wZVNlbGVjdG9yOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE/Yj8iW2lzPSIrYSsiXSI6YToiIn0saXNUeXBlRXh0ZW5zaW9uOmZ1bmN0aW9uKGEpe3JldHVybiBhJiZhLmluZGV4T2YoIi0iKTwwfSxwcmVwYXJlUm9vdDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5yZWdpc3RlclJvb3QoYSxiLGMpO3JldHVybiB0aGlzLnJlcGxhY2VUZXh0SW5TdHlsZXMoZC5yb290U3R5bGVzLHRoaXMuaW5zZXJ0RGlyZWN0aXZlcyksdGhpcy5yZW1vdmVTdHlsZXMoYSxkLnJvb3RTdHlsZXMpLHRoaXMuc3RyaWN0U3R5bGluZyYmdGhpcy5hcHBseVNjb3BlVG9Db250ZW50KGEsYiksZC5zY29wZVN0eWxlc30scmVtb3ZlU3R5bGVzOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjLGQ9MCxlPWIubGVuZ3RoO2U+ZCYmKGM9YltkXSk7ZCsrKWMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKX0scmVnaXN0ZXJSb290OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLnJlZ2lzdHJ5W2JdPXtyb290OmEsbmFtZTpiLGV4dGVuZHNOYW1lOmN9LGU9dGhpcy5maW5kU3R5bGVzKGEpO2Qucm9vdFN0eWxlcz1lLGQuc2NvcGVTdHlsZXM9ZC5yb290U3R5bGVzO3ZhciBmPXRoaXMucmVnaXN0cnlbZC5leHRlbmRzTmFtZV07cmV0dXJuIGYmJihkLnNjb3BlU3R5bGVzPWYuc2NvcGVTdHlsZXMuY29uY2F0KGQuc2NvcGVTdHlsZXMpKSxkfSxmaW5kU3R5bGVzOmZ1bmN0aW9uKGEpe2lmKCFhKXJldHVybltdO3ZhciBiPWEucXVlcnlTZWxlY3RvckFsbCgic3R5bGUiKTtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKGIsZnVuY3Rpb24oYSl7cmV0dXJuIWEuaGFzQXR0cmlidXRlKEEpfSl9LGFwcGx5U2NvcGVUb0NvbnRlbnQ6ZnVuY3Rpb24oYSxiKXthJiYoQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChhLnF1ZXJ5U2VsZWN0b3JBbGwoIioiKSxmdW5jdGlvbihhKXthLnNldEF0dHJpYnV0ZShiLCIiKX0pLEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYS5xdWVyeVNlbGVjdG9yQWxsKCJ0ZW1wbGF0ZSIpLGZ1bmN0aW9uKGEpe3RoaXMuYXBwbHlTY29wZVRvQ29udGVudChhLmNvbnRlbnQsYil9LHRoaXMpKX0saW5zZXJ0RGlyZWN0aXZlczpmdW5jdGlvbihhKXtyZXR1cm4gYT10aGlzLmluc2VydFBvbHlmaWxsRGlyZWN0aXZlc0luQ3NzVGV4dChhKSx0aGlzLmluc2VydFBvbHlmaWxsUnVsZXNJbkNzc1RleHQoYSl9LGluc2VydFBvbHlmaWxsRGlyZWN0aXZlc0luQ3NzVGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UobSxmdW5jdGlvbihhLGIpe3JldHVybiBiLnNsaWNlKDAsLTIpKyJ7In0pLGEucmVwbGFjZShuLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIrIiB7In0pfSxpbnNlcnRQb2x5ZmlsbFJ1bGVzSW5Dc3NUZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShvLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIuc2xpY2UoMCwtMSl9KSxhLnJlcGxhY2UocCxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLnJlcGxhY2UoYiwiIikucmVwbGFjZShjLCIiKTtyZXR1cm4gZCtlfSl9LHNjb3BlQ3NzVGV4dDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZXh0cmFjdFVuc2NvcGVkUnVsZXNGcm9tQ3NzVGV4dChhKTtpZihhPXRoaXMuaW5zZXJ0UG9seWZpbGxIb3N0SW5Dc3NUZXh0KGEpLGE9dGhpcy5jb252ZXJ0Q29sb25Ib3N0KGEpLGE9dGhpcy5jb252ZXJ0Q29sb25Ib3N0Q29udGV4dChhKSxhPXRoaXMuY29udmVydENvbWJpbmF0b3JzKGEpLGIpe3ZhciBhLGQ9dGhpcztnKGEsZnVuY3Rpb24oYyl7YT1kLnNjb3BlUnVsZXMoYyxiKX0pfXJldHVybiBhPWErIlxuIitjLGEudHJpbSgpfSxleHRyYWN0VW5zY29wZWRSdWxlc0Zyb21Dc3NUZXh0OmZ1bmN0aW9uKGEpe2Zvcih2YXIgYixjPSIiO2I9cS5leGVjKGEpOyljKz1iWzFdLnNsaWNlKDAsLTEpKyJcblxuIjtmb3IoO2I9ci5leGVjKGEpOyljKz1iWzBdLnJlcGxhY2UoYlsyXSwiIikucmVwbGFjZShiWzFdLGJbM10pKyJcblxuIjtyZXR1cm4gY30sY29udmVydENvbG9uSG9zdDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jb252ZXJ0Q29sb25SdWxlKGEsY3NzQ29sb25Ib3N0UmUsdGhpcy5jb2xvbkhvc3RQYXJ0UmVwbGFjZXIpfSxjb252ZXJ0Q29sb25Ib3N0Q29udGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jb252ZXJ0Q29sb25SdWxlKGEsY3NzQ29sb25Ib3N0Q29udGV4dFJlLHRoaXMuY29sb25Ib3N0Q29udGV4dFBhcnRSZXBsYWNlcil9LGNvbnZlcnRDb2xvblJ1bGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhLnJlcGxhY2UoYixmdW5jdGlvbihhLGIsZCxlKXtpZihiPXBvbHlmaWxsSG9zdE5vQ29tYmluYXRvcixkKXtmb3IodmFyIGYsZz1kLnNwbGl0KCIsIiksaD1bXSxpPTAsaj1nLmxlbmd0aDtqPmkmJihmPWdbaV0pO2krKylmPWYudHJpbSgpLGgucHVzaChjKGIsZixlKSk7cmV0dXJuIGguam9pbigiLCIpfXJldHVybiBiK2V9KX0sY29sb25Ib3N0Q29udGV4dFBhcnRSZXBsYWNlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGIubWF0Y2gocyk/dGhpcy5jb2xvbkhvc3RQYXJ0UmVwbGFjZXIoYSxiLGMpOmErYitjKyIsICIrYisiICIrYStjfSxjb2xvbkhvc3RQYXJ0UmVwbGFjZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhK2IucmVwbGFjZShzLCIiKStjfSxjb252ZXJ0Q29tYmluYXRvcnM6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPTA7Yjxjb21iaW5hdG9yc1JlLmxlbmd0aDtiKyspYT1hLnJlcGxhY2UoY29tYmluYXRvcnNSZVtiXSwiICIpO3JldHVybiBhfSxzY29wZVJ1bGVzOmZ1bmN0aW9uKGEsYil7dmFyIGM9IiI7cmV0dXJuIGEmJkFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYSxmdW5jdGlvbihhKXthLnNlbGVjdG9yVGV4dCYmYS5zdHlsZSYmYS5zdHlsZS5jc3NUZXh0PyhjKz10aGlzLnNjb3BlU2VsZWN0b3IoYS5zZWxlY3RvclRleHQsYix0aGlzLnN0cmljdFN0eWxpbmcpKyIge1xuCSIsYys9dGhpcy5wcm9wZXJ0aWVzRnJvbVJ1bGUoYSkrIlxufVxuXG4iKTphLnR5cGU9PT1DU1NSdWxlLk1FRElBX1JVTEU/KGMrPSJAbWVkaWEgIithLm1lZGlhLm1lZGlhVGV4dCsiIHtcbiIsYys9dGhpcy5zY29wZVJ1bGVzKGEuY3NzUnVsZXMsYiksYys9IlxufVxuXG4iKTphLmNzc1RleHQmJihjKz1hLmNzc1RleHQrIlxuXG4iKX0sdGhpcyksY30sc2NvcGVTZWxlY3RvcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9W10sZT1hLnNwbGl0KCIsIik7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihhKXthPWEudHJpbSgpLHRoaXMuc2VsZWN0b3JOZWVkc1Njb3BpbmcoYSxiKSYmKGE9YyYmIWEubWF0Y2gocG9seWZpbGxIb3N0Tm9Db21iaW5hdG9yKT90aGlzLmFwcGx5U3RyaWN0U2VsZWN0b3JTY29wZShhLGIpOnRoaXMuYXBwbHlTZWxlY3RvclNjb3BlKGEsYikpLGQucHVzaChhKX0sdGhpcyksZC5qb2luKCIsICIpfSxzZWxlY3Rvck5lZWRzU2NvcGluZzpmdW5jdGlvbihhLGIpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuITA7dmFyIGM9dGhpcy5tYWtlU2NvcGVNYXRjaGVyKGIpO3JldHVybiFhLm1hdGNoKGMpfSxtYWtlU2NvcGVNYXRjaGVyOmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZSgvXFsvZywiXFxbIikucmVwbGFjZSgvXFsvZywiXFxdIiksbmV3IFJlZ0V4cCgiXigiK2ErIikiK3NlbGVjdG9yUmVTdWZmaXgsIm0iKX0sYXBwbHlTZWxlY3RvclNjb3BlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/dGhpcy5hcHBseVNlbGVjdG9yU2NvcGVMaXN0KGEsYik6dGhpcy5hcHBseVNpbXBsZVNlbGVjdG9yU2NvcGUoYSxiKX0sYXBwbHlTZWxlY3RvclNjb3BlTGlzdDpmdW5jdGlvbihhLGIpe2Zvcih2YXIgYyxkPVtdLGU9MDtjPWJbZV07ZSsrKWQucHVzaCh0aGlzLmFwcGx5U2ltcGxlU2VsZWN0b3JTY29wZShhLGMpKTtyZXR1cm4gZC5qb2luKCIsICIpfSxhcHBseVNpbXBsZVNlbGVjdG9yU2NvcGU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5tYXRjaChwb2x5ZmlsbEhvc3RSZSk/KGE9YS5yZXBsYWNlKHBvbHlmaWxsSG9zdE5vQ29tYmluYXRvcixiKSxhLnJlcGxhY2UocG9seWZpbGxIb3N0UmUsYisiICIpKTpiKyIgIithfSxhcHBseVN0cmljdFNlbGVjdG9yU2NvcGU6ZnVuY3Rpb24oYSxiKXtiPWIucmVwbGFjZSgvXFtpcz0oW15cXV0qKVxdL2csIiQxIik7dmFyIGM9WyIgIiwiPiIsIisiLCJ+Il0sZD1hLGU9IlsiK2IrIl0iO3JldHVybiBjLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9ZC5zcGxpdChhKTtkPWIubWFwKGZ1bmN0aW9uKGEpe3ZhciBiPWEudHJpbSgpLnJlcGxhY2UocG9seWZpbGxIb3N0UmUsIiIpO3JldHVybiBiJiZjLmluZGV4T2YoYik8MCYmYi5pbmRleE9mKGUpPDAmJihhPWIucmVwbGFjZSgvKFteOl0qKSg6KikoLiopLywiJDEiK2UrIiQyJDMiKSksYX0pLmpvaW4oYSl9KSxkfSxpbnNlcnRQb2x5ZmlsbEhvc3RJbkNzc1RleHQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZShjb2xvbkhvc3RDb250ZXh0UmUsdCkucmVwbGFjZShjb2xvbkhvc3RSZSxzKX0scHJvcGVydGllc0Zyb21SdWxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEuc3R5bGUuY3NzVGV4dDthLnN0eWxlLmNvbnRlbnQmJiFhLnN0eWxlLmNvbnRlbnQubWF0Y2goL1snIl0rfGF0dHIvKSYmKGI9Yi5yZXBsYWNlKC9jb250ZW50OlteO10qOy9nLCJjb250ZW50OiAnIithLnN0eWxlLmNvbnRlbnQrIic7IikpO3ZhciBjPWEuc3R5bGU7Zm9yKHZhciBkIGluIGMpImluaXRpYWwiPT09Y1tkXSYmKGIrPWQrIjogaW5pdGlhbDsgIik7cmV0dXJuIGJ9LHJlcGxhY2VUZXh0SW5TdHlsZXM6ZnVuY3Rpb24oYSxiKXthJiZiJiYoYSBpbnN0YW5jZW9mIEFycmF5fHwoYT1bYV0pLEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoYSxmdW5jdGlvbihhKXthLnRleHRDb250ZW50PWIuY2FsbCh0aGlzLGEudGV4dENvbnRlbnQpfSx0aGlzKSl9LGFkZENzc1RvRG9jdW1lbnQ6ZnVuY3Rpb24oYSxiKXthLm1hdGNoKCJAaW1wb3J0Iik/aShhLGIpOmgoYSl9fSxsPS9cL1wqW14qXSpcKisoW14vKl1bXipdKlwqKykqXC8vZ2ltLG09L1wvXCpccypAcG9seWZpbGwgKFteKl0qXCorKFteLypdW14qXSpcKispKlwvKShbXntdKj8pey9naW0sbj0vcG9seWZpbGwtbmV4dC1zZWxlY3RvcltefV0qY29udGVudFw6W1xzXSonKFteJ10qKSdbXn1dKn0oW157XSo/KXsvZ2ltLG89L1wvXCpcc0Bwb2x5ZmlsbC1ydWxlKFteKl0qXCorKFteLypdW14qXSpcKispKilcLy9naW0scD0vKHBvbHlmaWxsLXJ1bGUpW159XSooY29udGVudFw6W1xzXSonKFteJ10qKSdbXjtdKjspW159XSp9L2dpbSxxPS9cL1wqXHNAcG9seWZpbGwtdW5zY29wZWQtcnVsZShbXipdKlwqKyhbXi8qXVteKl0qXCorKSopXC8vZ2ltLHI9Lyhwb2x5ZmlsbC11bnNjb3BlZC1ydWxlKVtefV0qKGNvbnRlbnRcOltcc10qJyhbXiddKiknW147XSo7KVtefV0qfS9naW0scz0iLXNoYWRvd2Nzc2hvc3QiLHQ9Ii1zaGFkb3djc3Njb250ZXh0Iix1PSIpKD86XFwoKCg/OlxcKFteKShdKlxcKXxbXikoXSopKz8pXFwpKT8oW14se10qKSI7Y3NzQ29sb25Ib3N0UmU9bmV3IFJlZ0V4cCgiKCIrcyt1LCJnaW0iKSxjc3NDb2xvbkhvc3RDb250ZXh0UmU9bmV3IFJlZ0V4cCgiKCIrdCt1LCJnaW0iKSxzZWxlY3RvclJlU3VmZml4PSIoWz5cXHN+K1suLHs6XVtcXHNcXFNdKik/JCIsY29sb25Ib3N0UmU9L1w6aG9zdC9naW0sY29sb25Ib3N0Q29udGV4dFJlPS9cOmhvc3QtY29udGV4dC9naW0scG9seWZpbGxIb3N0Tm9Db21iaW5hdG9yPXMrIi1uby1jb21iaW5hdG9yIixwb2x5ZmlsbEhvc3RSZT1uZXcgUmVnRXhwKHMsImdpbSIpLHBvbHlmaWxsSG9zdENvbnRleHRSZT1uZXcgUmVnRXhwKHQsImdpbSIpLGNvbWJpbmF0b3JzUmU9Wy9cXlxeL2csL1xeL2csL1wvc2hhZG93XC8vZywvXC9zaGFkb3ctZGVlcFwvL2csLzo6c2hhZG93L2csL1wvZGVlcFwvL2ddO3ZhciB2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlmcmFtZSIpO3Yuc3R5bGUuZGlzcGxheT0ibm9uZSI7dmFyIHcseD1uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKCJDaHJvbWUiKSx5PSJzaGltLXNoYWRvd2RvbSIsej0ic2hpbS1zaGFkb3dkb20tY3NzIixBPSJuby1zaGltIjtpZih3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpe2goInN0eWxlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4iKTt2YXIgQj13cmFwKGRvY3VtZW50KSxDPUIucXVlcnlTZWxlY3RvcigiaGVhZCIpO0MuaW5zZXJ0QmVmb3JlKGooKSxDLmNoaWxkTm9kZXNbMF0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGZ1bmN0aW9uKCl7dmFyIGI9YS51cmxSZXNvbHZlcjtpZih3aW5kb3cuSFRNTEltcG9ydHMmJiFIVE1MSW1wb3J0cy51c2VOYXRpdmUpe3ZhciBjPSJsaW5rW3JlbD1zdHlsZXNoZWV0XVsiK3krIl0iLGQ9InN0eWxlWyIreSsiXSI7SFRNTEltcG9ydHMuaW1wb3J0ZXIuZG9jdW1lbnRQcmVsb2FkU2VsZWN0b3JzKz0iLCIrYyxIVE1MSW1wb3J0cy5pbXBvcnRlci5pbXBvcnRzUHJlbG9hZFNlbGVjdG9ycys9IiwiK2MsSFRNTEltcG9ydHMucGFyc2VyLmRvY3VtZW50U2VsZWN0b3JzPVtIVE1MSW1wb3J0cy5wYXJzZXIuZG9jdW1lbnRTZWxlY3RvcnMsYyxkXS5qb2luKCIsIik7dmFyIGU9SFRNTEltcG9ydHMucGFyc2VyLnBhcnNlR2VuZXJpYztIVE1MSW1wb3J0cy5wYXJzZXIucGFyc2VHZW5lcmljPWZ1bmN0aW9uKGEpe2lmKCFhW3pdKXt2YXIgYz1hLl9faW1wb3J0RWxlbWVudHx8YTtpZighYy5oYXNBdHRyaWJ1dGUoeSkpcmV0dXJuIHZvaWQgZS5jYWxsKHRoaXMsYSk7YS5fX3Jlc291cmNlPyhjPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpLGMudGV4dENvbnRlbnQ9Yi5yZXNvbHZlQ3NzVGV4dChhLl9fcmVzb3VyY2UsYS5ocmVmKSk6Yi5yZXNvbHZlU3R5bGUoYyksYy50ZXh0Q29udGVudD1rLnNoaW1TdHlsZShjKSxjLnJlbW92ZUF0dHJpYnV0ZSh5LCIiKSxjLnNldEF0dHJpYnV0ZSh6LCIiKSxjW3pdPSEwLGMucGFyZW50Tm9kZSE9PUMmJihhLnBhcmVudE5vZGU9PT1DP0MucmVwbGFjZUNoaWxkKGMsYSk6Qy5hcHBlbmRDaGlsZChjKSksYy5fX2ltcG9ydFBhcnNlZD0hMCx0aGlzLm1hcmtQYXJzaW5nQ29tcGxldGUoYSl9fTt2YXIgZj1IVE1MSW1wb3J0cy5wYXJzZXIuaGFzUmVzb3VyY2U7SFRNTEltcG9ydHMucGFyc2VyLmhhc1Jlc291cmNlPWZ1bmN0aW9uKGEpe3JldHVybiJsaW5rIj09PWEubG9jYWxOYW1lJiYic3R5bGVzaGVldCI9PT1hLnJlbCYmYS5oYXNBdHRyaWJ1dGUoeSk/YS5fX3Jlc291cmNlOmYuY2FsbCh0aGlzLGEpfX19KX1hLlNoYWRvd0NTUz1rfSh3aW5kb3cuUGxhdGZvcm0pKTohZnVuY3Rpb24oKXt3aW5kb3cudGVtcGxhdGVDb250ZW50PXdpbmRvdy50ZW1wbGF0ZUNvbnRlbnR8fGZ1bmN0aW9uKGEpe3JldHVybiBhLmNvbnRlbnR9LHdpbmRvdy53cmFwPXdpbmRvdy51bndyYXA9ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LGFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGZ1bmN0aW9uKCl7aWYoQ3VzdG9tRWxlbWVudHMudXNlTmF0aXZlPT09ITEpe3ZhciBhPUVsZW1lbnQucHJvdG90eXBlLmNyZWF0ZVNoYWRvd1Jvb3Q7RWxlbWVudC5wcm90b3R5cGUuY3JlYXRlU2hhZG93Um9vdD1mdW5jdGlvbigpe3ZhciBiPWEuY2FsbCh0aGlzKTtyZXR1cm4gQ3VzdG9tRWxlbWVudHMud2F0Y2hTaGFkb3codGhpcyksYn19fSksd2luZG93LnRlbXBsYXRlQ29udGVudD1mdW5jdGlvbihhKXtpZih3aW5kb3cuSFRNTFRlbXBsYXRlRWxlbWVudCYmSFRNTFRlbXBsYXRlRWxlbWVudC5ib290c3RyYXAmJkhUTUxUZW1wbGF0ZUVsZW1lbnQuYm9vdHN0cmFwKGEpLCFhLmNvbnRlbnQmJiFhLl9jb250ZW50KXtmb3IodmFyIGI9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO2EuZmlyc3RDaGlsZDspYi5hcHBlbmRDaGlsZChhLmZpcnN0Q2hpbGQpO2EuX2NvbnRlbnQ9Yn1yZXR1cm4gYS5jb250ZW50fHxhLl9jb250ZW50fX0oKSxmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhKXtyZXR1cm4gdm9pZCAwIT09bVthXX1mdW5jdGlvbiBjKCl7aC5jYWxsKHRoaXMpLHRoaXMuX2lzSW52YWxpZD0hMH1mdW5jdGlvbiBkKGEpe3JldHVybiIiPT1hJiZjLmNhbGwodGhpcyksYS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIGUoYSl7dmFyIGI9YS5jaGFyQ29kZUF0KDApO3JldHVybiBiPjMyJiYxMjc+YiYmLTE9PVszNCwzNSw2MCw2Miw2Myw5Nl0uaW5kZXhPZihiKT9hOmVuY29kZVVSSUNvbXBvbmVudChhKX1mdW5jdGlvbiBmKGEpe3ZhciBiPWEuY2hhckNvZGVBdCgwKTtyZXR1cm4gYj4zMiYmMTI3PmImJi0xPT1bMzQsMzUsNjAsNjIsOTZdLmluZGV4T2YoYik/YTplbmNvZGVVUklDb21wb25lbnQoYSl9ZnVuY3Rpb24gZyhhLGcsaCl7ZnVuY3Rpb24gaShhKXt0LnB1c2goYSl9dmFyIGo9Z3x8InNjaGVtZSBzdGFydCIsaz0wLGw9IiIscj0hMSxzPSExLHQ9W107YTpmb3IoOyhhW2stMV0hPW98fDA9PWspJiYhdGhpcy5faXNJbnZhbGlkOyl7dmFyIHU9YVtrXTtzd2l0Y2goail7Y2FzZSJzY2hlbWUgc3RhcnQiOmlmKCF1fHwhcC50ZXN0KHUpKXtpZihnKXtpKCJJbnZhbGlkIHNjaGVtZS4iKTticmVhayBhfWw9IiIsaj0ibm8gc2NoZW1lIjtjb250aW51ZX1sKz11LnRvTG93ZXJDYXNlKCksaj0ic2NoZW1lIjticmVhaztjYXNlInNjaGVtZSI6aWYodSYmcS50ZXN0KHUpKWwrPXUudG9Mb3dlckNhc2UoKTtlbHNle2lmKCI6IiE9dSl7aWYoZyl7aWYobz09dSlicmVhayBhO2koIkNvZGUgcG9pbnQgbm90IGFsbG93ZWQgaW4gc2NoZW1lOiAiK3UpO2JyZWFrIGF9bD0iIixrPTAsaj0ibm8gc2NoZW1lIjtjb250aW51ZX1pZih0aGlzLl9zY2hlbWU9bCxsPSIiLGcpYnJlYWsgYTtiKHRoaXMuX3NjaGVtZSkmJih0aGlzLl9pc1JlbGF0aXZlPSEwKSxqPSJmaWxlIj09dGhpcy5fc2NoZW1lPyJyZWxhdGl2ZSI6dGhpcy5faXNSZWxhdGl2ZSYmaCYmaC5fc2NoZW1lPT10aGlzLl9zY2hlbWU/InJlbGF0aXZlIG9yIGF1dGhvcml0eSI6dGhpcy5faXNSZWxhdGl2ZT8iYXV0aG9yaXR5IGZpcnN0IHNsYXNoIjoic2NoZW1lIGRhdGEifWJyZWFrO2Nhc2Uic2NoZW1lIGRhdGEiOiI/Ij09dT8ocXVlcnk9Ij8iLGo9InF1ZXJ5Iik6IiMiPT11Pyh0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQiKTpvIT11JiYiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJih0aGlzLl9zY2hlbWVEYXRhKz1lKHUpKTticmVhaztjYXNlIm5vIHNjaGVtZSI6aWYoaCYmYihoLl9zY2hlbWUpKXtqPSJyZWxhdGl2ZSI7Y29udGludWV9aSgiTWlzc2luZyBzY2hlbWUuIiksYy5jYWxsKHRoaXMpO2JyZWFrO2Nhc2UicmVsYXRpdmUgb3IgYXV0aG9yaXR5IjppZigiLyIhPXV8fCIvIiE9YVtrKzFdKXtpKCJFeHBlY3RlZCAvLCBnb3Q6ICIrdSksaj0icmVsYXRpdmUiO2NvbnRpbnVlfWo9ImF1dGhvcml0eSBpZ25vcmUgc2xhc2hlcyI7YnJlYWs7Y2FzZSJyZWxhdGl2ZSI6aWYodGhpcy5faXNSZWxhdGl2ZT0hMCwiZmlsZSIhPXRoaXMuX3NjaGVtZSYmKHRoaXMuX3NjaGVtZT1oLl9zY2hlbWUpLG89PXUpe3RoaXMuX2hvc3Q9aC5faG9zdCx0aGlzLl9wb3J0PWguX3BvcnQsdGhpcy5fcGF0aD1oLl9wYXRoLnNsaWNlKCksdGhpcy5fcXVlcnk9aC5fcXVlcnk7YnJlYWsgYX1pZigiLyI9PXV8fCJcXCI9PXUpIlxcIj09dSYmaSgiXFwgaXMgYW4gaW52YWxpZCBjb2RlIHBvaW50LiIpLGo9InJlbGF0aXZlIHNsYXNoIjtlbHNlIGlmKCI/Ij09dSl0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0LHRoaXMuX3BhdGg9aC5fcGF0aC5zbGljZSgpLHRoaXMuX3F1ZXJ5PSI/IixqPSJxdWVyeSI7ZWxzZXtpZigiIyIhPXUpe3ZhciB2PWFbaysxXSx3PWFbaysyXTsoImZpbGUiIT10aGlzLl9zY2hlbWV8fCFwLnRlc3QodSl8fCI6IiE9diYmInwiIT12fHxvIT13JiYiLyIhPXcmJiJcXCIhPXcmJiI/IiE9dyYmIiMiIT13KSYmKHRoaXMuX2hvc3Q9aC5faG9zdCx0aGlzLl9wb3J0PWguX3BvcnQsdGhpcy5fcGF0aD1oLl9wYXRoLnNsaWNlKCksdGhpcy5fcGF0aC5wb3AoKSksaj0icmVsYXRpdmUgcGF0aCI7Y29udGludWV9dGhpcy5faG9zdD1oLl9ob3N0LHRoaXMuX3BvcnQ9aC5fcG9ydCx0aGlzLl9wYXRoPWguX3BhdGguc2xpY2UoKSx0aGlzLl9xdWVyeT1oLl9xdWVyeSx0aGlzLl9mcmFnbWVudD0iIyIsaj0iZnJhZ21lbnQifWJyZWFrO2Nhc2UicmVsYXRpdmUgc2xhc2giOmlmKCIvIiE9dSYmIlxcIiE9dSl7ImZpbGUiIT10aGlzLl9zY2hlbWUmJih0aGlzLl9ob3N0PWguX2hvc3QsdGhpcy5fcG9ydD1oLl9wb3J0KSxqPSJyZWxhdGl2ZSBwYXRoIjtjb250aW51ZX0iXFwiPT11JiZpKCJcXCBpcyBhbiBpbnZhbGlkIGNvZGUgcG9pbnQuIiksaj0iZmlsZSI9PXRoaXMuX3NjaGVtZT8iZmlsZSBob3N0IjoiYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIjticmVhaztjYXNlImF1dGhvcml0eSBmaXJzdCBzbGFzaCI6aWYoIi8iIT11KXtpKCJFeHBlY3RlZCAnLycsIGdvdDogIit1KSxqPSJhdXRob3JpdHkgaWdub3JlIHNsYXNoZXMiO2NvbnRpbnVlfWo9ImF1dGhvcml0eSBzZWNvbmQgc2xhc2giO2JyZWFrO2Nhc2UiYXV0aG9yaXR5IHNlY29uZCBzbGFzaCI6aWYoaj0iYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIiwiLyIhPXUpe2koIkV4cGVjdGVkICcvJywgZ290OiAiK3UpO2NvbnRpbnVlfWJyZWFrO2Nhc2UiYXV0aG9yaXR5IGlnbm9yZSBzbGFzaGVzIjppZigiLyIhPXUmJiJcXCIhPXUpe2o9ImF1dGhvcml0eSI7Y29udGludWV9aSgiRXhwZWN0ZWQgYXV0aG9yaXR5LCBnb3Q6ICIrdSk7YnJlYWs7Y2FzZSJhdXRob3JpdHkiOmlmKCJAIj09dSl7ciYmKGkoIkAgYWxyZWFkeSBzZWVuLiIpLGwrPSIlNDAiKSxyPSEwO2Zvcih2YXIgeD0wO3g8bC5sZW5ndGg7eCsrKXt2YXIgeT1sW3hdO2lmKCIJIiE9eSYmIlxuIiE9eSYmIlxyIiE9eSlpZigiOiIhPXl8fG51bGwhPT10aGlzLl9wYXNzd29yZCl7dmFyIHo9ZSh5KTtudWxsIT09dGhpcy5fcGFzc3dvcmQ/dGhpcy5fcGFzc3dvcmQrPXo6dGhpcy5fdXNlcm5hbWUrPXp9ZWxzZSB0aGlzLl9wYXNzd29yZD0iIjtlbHNlIGkoIkludmFsaWQgd2hpdGVzcGFjZSBpbiBhdXRob3JpdHkuIil9bD0iIn1lbHNle2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXUpe2stPWwubGVuZ3RoLGw9IiIsaj0iaG9zdCI7Y29udGludWV9bCs9dX1icmVhaztjYXNlImZpbGUgaG9zdCI6aWYobz09dXx8Ii8iPT11fHwiXFwiPT11fHwiPyI9PXV8fCIjIj09dSl7MiE9bC5sZW5ndGh8fCFwLnRlc3QobFswXSl8fCI6IiE9bFsxXSYmInwiIT1sWzFdPzA9PWwubGVuZ3RoP2o9InJlbGF0aXZlIHBhdGggc3RhcnQiOih0aGlzLl9ob3N0PWQuY2FsbCh0aGlzLGwpLGw9IiIsaj0icmVsYXRpdmUgcGF0aCBzdGFydCIpOmo9InJlbGF0aXZlIHBhdGgiO2NvbnRpbnVlfSIJIj09dXx8IlxuIj09dXx8IlxyIj09dT9pKCJJbnZhbGlkIHdoaXRlc3BhY2UgaW4gZmlsZSBob3N0LiIpOmwrPXU7YnJlYWs7Y2FzZSJob3N0IjpjYXNlImhvc3RuYW1lIjppZigiOiIhPXV8fHMpe2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXUpe2lmKHRoaXMuX2hvc3Q9ZC5jYWxsKHRoaXMsbCksbD0iIixqPSJyZWxhdGl2ZSBwYXRoIHN0YXJ0IixnKWJyZWFrIGE7Y29udGludWV9IgkiIT11JiYiXG4iIT11JiYiXHIiIT11PygiWyI9PXU/cz0hMDoiXSI9PXUmJihzPSExKSxsKz11KTppKCJJbnZhbGlkIGNvZGUgcG9pbnQgaW4gaG9zdC9ob3N0bmFtZTogIit1KX1lbHNlIGlmKHRoaXMuX2hvc3Q9ZC5jYWxsKHRoaXMsbCksbD0iIixqPSJwb3J0IiwiaG9zdG5hbWUiPT1nKWJyZWFrIGE7YnJlYWs7Y2FzZSJwb3J0IjppZigvWzAtOV0vLnRlc3QodSkpbCs9dTtlbHNle2lmKG89PXV8fCIvIj09dXx8IlxcIj09dXx8Ij8iPT11fHwiIyI9PXV8fGcpe2lmKCIiIT1sKXt2YXIgQT1wYXJzZUludChsLDEwKTtBIT1tW3RoaXMuX3NjaGVtZV0mJih0aGlzLl9wb3J0PUErIiIpLGw9IiJ9aWYoZylicmVhayBhO2o9InJlbGF0aXZlIHBhdGggc3RhcnQiO2NvbnRpbnVlfSIJIj09dXx8IlxuIj09dXx8IlxyIj09dT9pKCJJbnZhbGlkIGNvZGUgcG9pbnQgaW4gcG9ydDogIit1KTpjLmNhbGwodGhpcyl9YnJlYWs7Y2FzZSJyZWxhdGl2ZSBwYXRoIHN0YXJ0IjppZigiXFwiPT11JiZpKCInXFwnIG5vdCBhbGxvd2VkIGluIHBhdGguIiksaj0icmVsYXRpdmUgcGF0aCIsIi8iIT11JiYiXFwiIT11KWNvbnRpbnVlO2JyZWFrO2Nhc2UicmVsYXRpdmUgcGF0aCI6aWYobyE9dSYmIi8iIT11JiYiXFwiIT11JiYoZ3x8Ij8iIT11JiYiIyIhPXUpKSIJIiE9dSYmIlxuIiE9dSYmIlxyIiE9dSYmKGwrPWUodSkpO2Vsc2V7IlxcIj09dSYmaSgiXFwgbm90IGFsbG93ZWQgaW4gcmVsYXRpdmUgcGF0aC4iKTt2YXIgQjsoQj1uW2wudG9Mb3dlckNhc2UoKV0pJiYobD1CKSwiLi4iPT1sPyh0aGlzLl9wYXRoLnBvcCgpLCIvIiE9dSYmIlxcIiE9dSYmdGhpcy5fcGF0aC5wdXNoKCIiKSk6Ii4iPT1sJiYiLyIhPXUmJiJcXCIhPXU/dGhpcy5fcGF0aC5wdXNoKCIiKToiLiIhPWwmJigiZmlsZSI9PXRoaXMuX3NjaGVtZSYmMD09dGhpcy5fcGF0aC5sZW5ndGgmJjI9PWwubGVuZ3RoJiZwLnRlc3QobFswXSkmJiJ8Ij09bFsxXSYmKGw9bFswXSsiOiIpLHRoaXMuX3BhdGgucHVzaChsKSksbD0iIiwiPyI9PXU/KHRoaXMuX3F1ZXJ5PSI/IixqPSJxdWVyeSIpOiIjIj09dSYmKHRoaXMuX2ZyYWdtZW50PSIjIixqPSJmcmFnbWVudCIpfWJyZWFrO2Nhc2UicXVlcnkiOmd8fCIjIiE9dT9vIT11JiYiCSIhPXUmJiJcbiIhPXUmJiJcciIhPXUmJih0aGlzLl9xdWVyeSs9Zih1KSk6KHRoaXMuX2ZyYWdtZW50PSIjIixqPSJmcmFnbWVudCIpO2JyZWFrO2Nhc2UiZnJhZ21lbnQiOm8hPXUmJiIJIiE9dSYmIlxuIiE9dSYmIlxyIiE9dSYmKHRoaXMuX2ZyYWdtZW50Kz11KX1rKyt9fWZ1bmN0aW9uIGgoKXt0aGlzLl9zY2hlbWU9IiIsdGhpcy5fc2NoZW1lRGF0YT0iIix0aGlzLl91c2VybmFtZT0iIix0aGlzLl9wYXNzd29yZD1udWxsLHRoaXMuX2hvc3Q9IiIsdGhpcy5fcG9ydD0iIix0aGlzLl9wYXRoPVtdLHRoaXMuX3F1ZXJ5PSIiLHRoaXMuX2ZyYWdtZW50PSIiLHRoaXMuX2lzSW52YWxpZD0hMSx0aGlzLl9pc1JlbGF0aXZlPSExfWZ1bmN0aW9uIGkoYSxiKXt2b2lkIDA9PT1ifHxiIGluc3RhbmNlb2YgaXx8KGI9bmV3IGkoU3RyaW5nKGIpKSksdGhpcy5fdXJsPWEsaC5jYWxsKHRoaXMpO3ZhciBjPWEucmVwbGFjZSgvXlsgXHRcclxuXGZdK3xbIFx0XHJcblxmXSskL2csIiIpO2cuY2FsbCh0aGlzLGMsbnVsbCxiKX12YXIgaj0hMTtpZighYS5mb3JjZUpVUkwpdHJ5e3ZhciBrPW5ldyBVUkwoImIiLCJodHRwOi8vYSIpO2o9Imh0dHA6Ly9hL2IiPT09ay5ocmVmfWNhdGNoKGwpe31pZighail7dmFyIG09T2JqZWN0LmNyZWF0ZShudWxsKTttLmZ0cD0yMSxtLmZpbGU9MCxtLmdvcGhlcj03MCxtLmh0dHA9ODAsbS5odHRwcz00NDMsbS53cz04MCxtLndzcz00NDM7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtuWyIlMmUiXT0iLiIsblsiLiUyZSJdPSIuLiIsblsiJTJlLiJdPSIuLiIsblsiJTJlJTJlIl09Ii4uIjt2YXIgbz12b2lkIDAscD0vW2EtekEtWl0vLHE9L1thLXpBLVowLTlcK1wtXC5dLztpLnByb3RvdHlwZT17Z2V0IGhyZWYoKXtpZih0aGlzLl9pc0ludmFsaWQpcmV0dXJuIHRoaXMuX3VybDsKdmFyIGE9IiI7cmV0dXJuKCIiIT10aGlzLl91c2VybmFtZXx8bnVsbCE9dGhpcy5fcGFzc3dvcmQpJiYoYT10aGlzLl91c2VybmFtZSsobnVsbCE9dGhpcy5fcGFzc3dvcmQ/IjoiK3RoaXMuX3Bhc3N3b3JkOiIiKSsiQCIpLHRoaXMucHJvdG9jb2wrKHRoaXMuX2lzUmVsYXRpdmU/Ii8vIithK3RoaXMuaG9zdDoiIikrdGhpcy5wYXRobmFtZSt0aGlzLl9xdWVyeSt0aGlzLl9mcmFnbWVudH0sc2V0IGhyZWYoYSl7aC5jYWxsKHRoaXMpLGcuY2FsbCh0aGlzLGEpfSxnZXQgcHJvdG9jb2woKXtyZXR1cm4gdGhpcy5fc2NoZW1lKyI6In0sc2V0IHByb3RvY29sKGEpe3RoaXMuX2lzSW52YWxpZHx8Zy5jYWxsKHRoaXMsYSsiOiIsInNjaGVtZSBzdGFydCIpfSxnZXQgaG9zdCgpe3JldHVybiB0aGlzLl9pc0ludmFsaWQ/IiI6dGhpcy5fcG9ydD90aGlzLl9ob3N0KyI6Iit0aGlzLl9wb3J0OnRoaXMuX2hvc3R9LHNldCBob3N0KGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJmcuY2FsbCh0aGlzLGEsImhvc3QiKX0sZ2V0IGhvc3RuYW1lKCl7cmV0dXJuIHRoaXMuX2hvc3R9LHNldCBob3N0bmFtZShhKXshdGhpcy5faXNJbnZhbGlkJiZ0aGlzLl9pc1JlbGF0aXZlJiZnLmNhbGwodGhpcyxhLCJob3N0bmFtZSIpfSxnZXQgcG9ydCgpe3JldHVybiB0aGlzLl9wb3J0fSxzZXQgcG9ydChhKXshdGhpcy5faXNJbnZhbGlkJiZ0aGlzLl9pc1JlbGF0aXZlJiZnLmNhbGwodGhpcyxhLCJwb3J0Iil9LGdldCBwYXRobmFtZSgpe3JldHVybiB0aGlzLl9pc0ludmFsaWQ/IiI6dGhpcy5faXNSZWxhdGl2ZT8iLyIrdGhpcy5fcGF0aC5qb2luKCIvIik6dGhpcy5fc2NoZW1lRGF0YX0sc2V0IHBhdGhuYW1lKGEpeyF0aGlzLl9pc0ludmFsaWQmJnRoaXMuX2lzUmVsYXRpdmUmJih0aGlzLl9wYXRoPVtdLGcuY2FsbCh0aGlzLGEsInJlbGF0aXZlIHBhdGggc3RhcnQiKSl9LGdldCBzZWFyY2goKXtyZXR1cm4gdGhpcy5faXNJbnZhbGlkfHwhdGhpcy5fcXVlcnl8fCI/Ij09dGhpcy5fcXVlcnk/IiI6dGhpcy5fcXVlcnl9LHNldCBzZWFyY2goYSl7IXRoaXMuX2lzSW52YWxpZCYmdGhpcy5faXNSZWxhdGl2ZSYmKHRoaXMuX3F1ZXJ5PSI/IiwiPyI9PWFbMF0mJihhPWEuc2xpY2UoMSkpLGcuY2FsbCh0aGlzLGEsInF1ZXJ5IikpfSxnZXQgaGFzaCgpe3JldHVybiB0aGlzLl9pc0ludmFsaWR8fCF0aGlzLl9mcmFnbWVudHx8IiMiPT10aGlzLl9mcmFnbWVudD8iIjp0aGlzLl9mcmFnbWVudH0sc2V0IGhhc2goYSl7dGhpcy5faXNJbnZhbGlkfHwodGhpcy5fZnJhZ21lbnQ9IiMiLCIjIj09YVswXSYmKGE9YS5zbGljZSgxKSksZy5jYWxsKHRoaXMsYSwiZnJhZ21lbnQiKSl9fSxhLlVSTD1pfX0od2luZG93KSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe2Zvcih2YXIgYj1hfHx7fSxkPTE7ZDxhcmd1bWVudHMubGVuZ3RoO2QrKyl7dmFyIGU9YXJndW1lbnRzW2RdO3RyeXtmb3IodmFyIGYgaW4gZSljKGYsZSxiKX1jYXRjaChnKXt9fXJldHVybiBifWZ1bmN0aW9uIGMoYSxiLGMpe3ZhciBlPWQoYixhKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYyxhLGUpfWZ1bmN0aW9uIGQoYSxiKXtpZihhKXt2YXIgYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEsYik7cmV0dXJuIGN8fGQoT2JqZWN0LmdldFByb3RvdHlwZU9mKGEpLGIpfX1GdW5jdGlvbi5wcm90b3R5cGUuYmluZHx8KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGQ9Yy5zbGljZSgpO3JldHVybiBkLnB1c2guYXBwbHkoZCxhcmd1bWVudHMpLGIuYXBwbHkoYSxkKX19KSxhLm1peGluPWJ9KHdpbmRvdy5QbGF0Zm9ybSksZnVuY3Rpb24oYSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGIoYSxiLGMpe3ZhciBkPSJzdHJpbmciPT10eXBlb2YgYT9kb2N1bWVudC5jcmVhdGVFbGVtZW50KGEpOmEuY2xvbmVOb2RlKCEwKTtpZihkLmlubmVySFRNTD1iLGMpZm9yKHZhciBlIGluIGMpZC5zZXRBdHRyaWJ1dGUoZSxjW2VdKTtyZXR1cm4gZH12YXIgYz1ET01Ub2tlbkxpc3QucHJvdG90eXBlLmFkZCxkPURPTVRva2VuTGlzdC5wcm90b3R5cGUucmVtb3ZlO0RPTVRva2VuTGlzdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKCl7Zm9yKHZhciBhPTA7YTxhcmd1bWVudHMubGVuZ3RoO2ErKyljLmNhbGwodGhpcyxhcmd1bWVudHNbYV0pfSxET01Ub2tlbkxpc3QucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKyspZC5jYWxsKHRoaXMsYXJndW1lbnRzW2FdKX0sRE9NVG9rZW5MaXN0LnByb3RvdHlwZS50b2dnbGU9ZnVuY3Rpb24oYSxiKXsxPT1hcmd1bWVudHMubGVuZ3RoJiYoYj0hdGhpcy5jb250YWlucyhhKSksYj90aGlzLmFkZChhKTp0aGlzLnJlbW92ZShhKX0sRE9NVG9rZW5MaXN0LnByb3RvdHlwZS5zd2l0Y2g9ZnVuY3Rpb24oYSxiKXthJiZ0aGlzLnJlbW92ZShhKSxiJiZ0aGlzLmFkZChiKX07dmFyIGU9ZnVuY3Rpb24oKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcyl9LGY9d2luZG93Lk5hbWVkTm9kZU1hcHx8d2luZG93Lk1vek5hbWVkQXR0ck1hcHx8e307aWYoTm9kZUxpc3QucHJvdG90eXBlLmFycmF5PWUsZi5wcm90b3R5cGUuYXJyYXk9ZSxIVE1MQ29sbGVjdGlvbi5wcm90b3R5cGUuYXJyYXk9ZSwhd2luZG93LnBlcmZvcm1hbmNlKXt2YXIgZz1EYXRlLm5vdygpO3dpbmRvdy5wZXJmb3JtYW5jZT17bm93OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktZ319fXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fCh3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKCl7dmFyIGE9d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZTtyZXR1cm4gYT9mdW5jdGlvbihiKXtyZXR1cm4gYShmdW5jdGlvbigpe2IocGVyZm9ybWFuY2Uubm93KCkpfSl9OmZ1bmN0aW9uKGEpe3JldHVybiB3aW5kb3cuc2V0VGltZW91dChhLDFlMy82MCl9fSgpKSx3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWV8fCh3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU9ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lfHx3aW5kb3cubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGEpe2NsZWFyVGltZW91dChhKX19KCkpO3ZhciBoPVtdLGk9ZnVuY3Rpb24oKXtoLnB1c2goYXJndW1lbnRzKX07d2luZG93LlBvbHltZXI9aSxhLmRlbGl2ZXJEZWNsYXJhdGlvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gYS5kZWxpdmVyRGVjbGFyYXRpb25zPWZ1bmN0aW9uKCl7dGhyb3ciUG9zc2libGUgYXR0ZW1wdCB0byBsb2FkIFBvbHltZXIgdHdpY2UifSxofSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZnVuY3Rpb24oKXt3aW5kb3cuUG9seW1lcj09PWkmJih3aW5kb3cuUG9seW1lcj1mdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoJ1lvdSB0cmllZCB0byB1c2UgcG9seW1lciB3aXRob3V0IGxvYWRpbmcgaXQgZmlyc3QuIFRvIGxvYWQgcG9seW1lciwgPGxpbmsgcmVsPSJpbXBvcnQiIGhyZWY9ImNvbXBvbmVudHMvcG9seW1lci9wb2x5bWVyLmh0bWwiPicpfSl9KSxhLmNyZWF0ZURPTT1ifSh3aW5kb3cuUGxhdGZvcm0pLHdpbmRvdy50ZW1wbGF0ZUNvbnRlbnQ9d2luZG93LnRlbXBsYXRlQ29udGVudHx8ZnVuY3Rpb24oYSl7cmV0dXJuIGEuY29udGVudH0sZnVuY3Rpb24oYSl7YT1hfHwod2luZG93Lkluc3BlY3Rvcj17fSk7dmFyIGI7d2luZG93LnNpbnNwZWN0PWZ1bmN0aW9uKGEsZCl7Ynx8KGI9d2luZG93Lm9wZW4oIiIsIlNoYWRvd0RPTSBJbnNwZWN0b3IiLG51bGwsITApLGIuZG9jdW1lbnQud3JpdGUoYyksYi5hcGk9e3NoYWRvd2l6ZTpzaGFkb3dpemV9KSxmKGF8fHdyYXAoZG9jdW1lbnQuYm9keSksZCl9O3ZhciBjPVsiPCFET0NUWVBFIGh0bWw+IiwiPGh0bWw+IiwiICA8aGVhZD4iLCIgICAgPHRpdGxlPlNoYWRvd0RPTSBJbnNwZWN0b3I8L3RpdGxlPiIsIiAgICA8c3R5bGU+IiwiICAgICAgYm9keSB7IiwiICAgICAgfSIsIiAgICAgIHByZSB7IiwnICAgICAgICBmb250OiA5cHQgIkNvdXJpZXIgTmV3IiwgbW9ub3NwYWNlOycsIiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNWVtOyIsIiAgICAgIH0iLCIgICAgICB0YWcgeyIsIiAgICAgICAgY29sb3I6IHB1cnBsZTsiLCIgICAgICB9IiwiICAgICAgdWwgeyIsIiAgICAgICAgIG1hcmdpbjogMDsiLCIgICAgICAgICBwYWRkaW5nOiAwOyIsIiAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7IiwiICAgICAgfSIsIiAgICAgIGxpIHsiLCIgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IiwiICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTsiLCIgICAgICAgICBwYWRkaW5nOiA0cHggNnB4OyIsIiAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsiLCIgICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDsiLCIgICAgICB9IiwiICAgIDwvc3R5bGU+IiwiICA8L2hlYWQ+IiwiICA8Ym9keT4iLCcgICAgPHVsIGlkPSJjcnVtYnMiPicsIiAgICA8L3VsPiIsJyAgICA8ZGl2IGlkPSJ0cmVlIj48L2Rpdj4nLCIgIDwvYm9keT4iLCI8L2h0bWw+Il0uam9pbigiXG4iKSxkPVtdLGU9ZnVuY3Rpb24oKXt2YXIgYT1iLmRvY3VtZW50LGM9YS5xdWVyeVNlbGVjdG9yKCIjY3J1bWJzIik7Yy50ZXh0Q29udGVudD0iIjtmb3IodmFyIGUsZz0wO2U9ZFtnXTtnKyspe3ZhciBoPWEuY3JlYXRlRWxlbWVudCgiYSIpO2guaHJlZj0iIyIsaC50ZXh0Q29udGVudD1lLmxvY2FsTmFtZSxoLmlkeD1nLGgub25jbGljaz1mdW5jdGlvbihhKXtmb3IodmFyIGI7ZC5sZW5ndGg+dGhpcy5pZHg7KWI9ZC5wb3AoKTtmKGIuc2hhZG93fHxiLGIpLGEucHJldmVudERlZmF1bHQoKX0sYy5hcHBlbmRDaGlsZChhLmNyZWF0ZUVsZW1lbnQoImxpIikpLmFwcGVuZENoaWxkKGgpfX0sZj1mdW5jdGlvbihhLGMpe3ZhciBmPWIuZG9jdW1lbnQ7az1bXTt2YXIgZz1jfHxhO2QucHVzaChnKSxlKCksZi5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiN0cmVlIikuaW5uZXJIVE1MPSI8cHJlPiIraihhLGEuY2hpbGROb2RlcykrIjwvcHJlPiJ9LGc9QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKSxoPXtTVFlMRToxLFNDUklQVDoxLCIjY29tbWVudCI6MSxURU1QTEFURToxfSxpPWZ1bmN0aW9uKGEpe3JldHVybiBoW2Eubm9kZU5hbWVdfSxqPWZ1bmN0aW9uKGEsYixjKXtpZihpKGEpKXJldHVybiIiO3ZhciBkPWN8fCIiO2lmKGEubG9jYWxOYW1lfHwxMT09YS5ub2RlVHlwZSl7dmFyIGU9YS5sb2NhbE5hbWV8fCJzaGFkb3ctcm9vdCIsZj1kK2woYSk7ImNvbnRlbnQiPT1lJiYoYj1hLmdldERpc3RyaWJ1dGVkTm9kZXMoKSksZis9Ijxici8+Ijt2YXIgaD1kKyImbmJzcDsmbmJzcDsiO2coYixmdW5jdGlvbihhKXtmKz1qKGEsYS5jaGlsZE5vZGVzLGgpfSksZis9ZCx7YnI6MX1bZV18fChmKz0iPHRhZz4mbHQ7LyIrZSsiJmd0OzwvdGFnPiIsZis9Ijxici8+Iil9ZWxzZXt2YXIgaz1hLnRleHRDb250ZW50LnRyaW0oKTtmPWs/ZCsnIicraysnIjxici8+JzoiIn1yZXR1cm4gZn0saz1bXSxsPWZ1bmN0aW9uKGEpe3ZhciBiPSI8dGFnPiZsdDsiLGM9YS5sb2NhbE5hbWV8fCJzaGFkb3ctcm9vdCI7cmV0dXJuIGEud2Via2l0U2hhZG93Um9vdHx8YS5zaGFkb3dSb290PyhiKz0nIDxidXR0b24gaWR4PSInK2subGVuZ3RoKyciIG9uY2xpY2s9ImFwaS5zaGFkb3dpemUuY2FsbCh0aGlzKSI+JytjKyI8L2J1dHRvbj4iLGsucHVzaChhKSk6Yis9Y3x8InNoYWRvdy1yb290IixhLmF0dHJpYnV0ZXMmJmcoYS5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGEpe2IrPSIgIithLm5hbWUrKGEudmFsdWU/Jz0iJythLnZhbHVlKyciJzoiIil9KSxiKz0iJmd0OzwvdGFnPiJ9O3NoYWRvd2l6ZT1mdW5jdGlvbigpe3ZhciBhPU51bWJlcih0aGlzLmF0dHJpYnV0ZXMuaWR4LnZhbHVlKSxiPWtbYV07Yj9mKGIud2Via2l0U2hhZG93Um9vdHx8Yi5zaGFkb3dSb290LGIpOihjb25zb2xlLmxvZygiYmFkIHNoYWRvd2l6ZSBub2RlIiksY29uc29sZS5kaXIodGhpcykpfSxhLm91dHB1dD1qfSh3aW5kb3cuSW5zcGVjdG9yKSxmdW5jdGlvbigpe3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7YS50ZXh0Q29udGVudD0iYm9keSB7dHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluIDAuMnM7IH0gXG5ib2R5W3VucmVzb2x2ZWRdIHtvcGFjaXR5OiAwOyBkaXNwbGF5OiBibG9jazsgb3ZlcmZsb3c6IGhpZGRlbjsgfSBcbiI7dmFyIGI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiaGVhZCIpO2IuaW5zZXJ0QmVmb3JlKGEsYi5maXJzdENoaWxkKX0oUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSxiKXtyZXR1cm4gYj1ifHxbXSxiLm1hcHx8KGI9W2JdKSxhLmFwcGx5KHRoaXMsYi5tYXAoZCkpfWZ1bmN0aW9uIGMoYSxjLGQpe3ZhciBlO3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuO2Nhc2UgMTplPW51bGw7YnJlYWs7Y2FzZSAyOmU9Yy5hcHBseSh0aGlzKTticmVhaztkZWZhdWx0OmU9YihkLGMpfWZbYV09ZX1mdW5jdGlvbiBkKGEpe3JldHVybiBmW2FdfWZ1bmN0aW9uIGUoYSxjKXtIVE1MSW1wb3J0cy53aGVuSW1wb3J0c1JlYWR5KGZ1bmN0aW9uKCl7YihjLGEpfSl9dmFyIGY9e307YS5tYXJzaGFsPWQsYS5tb2R1bGU9YyxhLnVzaW5nPWV9KHdpbmRvdyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtmLnRleHRDb250ZW50PWQrKyxlLnB1c2goYSl9ZnVuY3Rpb24gYygpe2Zvcig7ZS5sZW5ndGg7KWUuc2hpZnQoKSgpfXZhciBkPTAsZT1bXSxmPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcod2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fEpzTXV0YXRpb25PYnNlcnZlcikoYykub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSksYS5lbmRPZk1pY3JvdGFzaz1ifShQbGF0Zm9ybSksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGIsZCl7cmV0dXJuIGEucmVwbGFjZShkLGZ1bmN0aW9uKGEsZCxlLGYpe3ZhciBnPWUucmVwbGFjZSgvWyInXS9nLCIiKTtyZXR1cm4gZz1jKGIsZyksZCsiJyIrZysiJyIrZn0pfWZ1bmN0aW9uIGMoYSxiKXt2YXIgYz1uZXcgVVJMKGIsYSk7cmV0dXJuIGQoYy5ocmVmKX1mdW5jdGlvbiBkKGEpe3ZhciBiPWRvY3VtZW50LmxvY2F0aW9uLGM9bmV3IFVSTChhLGIpO3JldHVybiBjLmhvc3Q9PT1iLmhvc3QmJmMucG9ydD09PWIucG9ydCYmYy5wcm90b2NvbD09PWIucHJvdG9jb2w/ZShiLnBhdGhuYW1lLGMucGF0aG5hbWUpOmF9ZnVuY3Rpb24gZShhLGIpe2Zvcih2YXIgYz1hLnNwbGl0KCIvIiksZD1iLnNwbGl0KCIvIik7Yy5sZW5ndGgmJmNbMF09PT1kWzBdOyljLnNoaWZ0KCksZC5zaGlmdCgpO2Zvcih2YXIgZT0wLGY9Yy5sZW5ndGgtMTtmPmU7ZSsrKWQudW5zaGlmdCgiLi4iKTtyZXR1cm4gZC5qb2luKCIvIil9dmFyIGY9e3Jlc29sdmVEb206ZnVuY3Rpb24oYSxiKXtiPWJ8fGEub3duZXJEb2N1bWVudC5iYXNlVVJJLHRoaXMucmVzb2x2ZUF0dHJpYnV0ZXMoYSxiKSx0aGlzLnJlc29sdmVTdHlsZXMoYSxiKTt2YXIgYz1hLnF1ZXJ5U2VsZWN0b3JBbGwoInRlbXBsYXRlIik7aWYoYylmb3IodmFyIGQsZT0wLGY9Yy5sZW5ndGg7Zj5lJiYoZD1jW2VdKTtlKyspZC5jb250ZW50JiZ0aGlzLnJlc29sdmVEb20oZC5jb250ZW50LGIpfSxyZXNvbHZlVGVtcGxhdGU6ZnVuY3Rpb24oYSl7dGhpcy5yZXNvbHZlRG9tKGEuY29udGVudCxhLm93bmVyRG9jdW1lbnQuYmFzZVVSSSl9LHJlc29sdmVTdHlsZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLnF1ZXJ5U2VsZWN0b3JBbGwoInN0eWxlIik7aWYoYylmb3IodmFyIGQsZT0wLGY9Yy5sZW5ndGg7Zj5lJiYoZD1jW2VdKTtlKyspdGhpcy5yZXNvbHZlU3R5bGUoZCxiKX0scmVzb2x2ZVN0eWxlOmZ1bmN0aW9uKGEsYil7Yj1ifHxhLm93bmVyRG9jdW1lbnQuYmFzZVVSSSxhLnRleHRDb250ZW50PXRoaXMucmVzb2x2ZUNzc1RleHQoYS50ZXh0Q29udGVudCxiKX0scmVzb2x2ZUNzc1RleHQ6ZnVuY3Rpb24oYSxjKXtyZXR1cm4gYT1iKGEsYyxnKSxiKGEsYyxoKX0scmVzb2x2ZUF0dHJpYnV0ZXM6ZnVuY3Rpb24oYSxiKXthLmhhc0F0dHJpYnV0ZXMmJmEuaGFzQXR0cmlidXRlcygpJiZ0aGlzLnJlc29sdmVFbGVtZW50QXR0cmlidXRlcyhhLGIpO3ZhciBjPWEmJmEucXVlcnlTZWxlY3RvckFsbChqKTtpZihjKWZvcih2YXIgZCxlPTAsZj1jLmxlbmd0aDtmPmUmJihkPWNbZV0pO2UrKyl0aGlzLnJlc29sdmVFbGVtZW50QXR0cmlidXRlcyhkLGIpfSxyZXNvbHZlRWxlbWVudEF0dHJpYnV0ZXM6ZnVuY3Rpb24oYSxkKXtkPWR8fGEub3duZXJEb2N1bWVudC5iYXNlVVJJLGkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgZixoPWEuYXR0cmlidXRlc1tlXSxpPWgmJmgudmFsdWU7aSYmaS5zZWFyY2goayk8MCYmKGY9InN0eWxlIj09PWU/YihpLGQsZyk6YyhkLGkpLGgudmFsdWU9Zil9KX19LGc9Lyh1cmxcKCkoW14pXSopKFwpKS9nLGg9LyhAaW1wb3J0W1xzXSsoPyF1cmxcKCkpKFteO10qKSg7KS9nLGk9WyJocmVmIiwic3JjIiwiYWN0aW9uIiwic3R5bGUiXSxqPSJbIitpLmpvaW4oIl0sWyIpKyJdIixrPSJ7ey4qfX0iO2EudXJsUmVzb2x2ZXI9Zn0oUGxhdGZvcm0pLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7dS5wdXNoKGEpLHR8fCh0PSEwLHEoZCkpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbCYmd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsLndyYXBJZk5lZWRlZChhKXx8YX1mdW5jdGlvbiBkKCl7dD0hMTt2YXIgYT11O3U9W10sYS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEudWlkXy1iLnVpZF99KTt2YXIgYj0hMTthLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9YS50YWtlUmVjb3JkcygpO2UoYSksYy5sZW5ndGgmJihhLmNhbGxiYWNrXyhjLGEpLGI9ITApfSksYiYmZCgpfWZ1bmN0aW9uIGUoYSl7YS5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgYz1wLmdldChiKTtjJiZjLmZvckVhY2goZnVuY3Rpb24oYil7Yi5vYnNlcnZlcj09PWEmJmIucmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzKCl9KX0pfWZ1bmN0aW9uIGYoYSxiKXtmb3IodmFyIGM9YTtjO2M9Yy5wYXJlbnROb2RlKXt2YXIgZD1wLmdldChjKTtpZihkKWZvcih2YXIgZT0wO2U8ZC5sZW5ndGg7ZSsrKXt2YXIgZj1kW2VdLGc9Zi5vcHRpb25zO2lmKGM9PT1hfHxnLnN1YnRyZWUpe3ZhciBoPWIoZyk7aCYmZi5lbnF1ZXVlKGgpfX19fWZ1bmN0aW9uIGcoYSl7dGhpcy5jYWxsYmFja189YSx0aGlzLm5vZGVzXz1bXSx0aGlzLnJlY29yZHNfPVtdLHRoaXMudWlkXz0rK3Z9ZnVuY3Rpb24gaChhLGIpe3RoaXMudHlwZT1hLHRoaXMudGFyZ2V0PWIsdGhpcy5hZGRlZE5vZGVzPVtdLHRoaXMucmVtb3ZlZE5vZGVzPVtdLHRoaXMucHJldmlvdXNTaWJsaW5nPW51bGwsdGhpcy5uZXh0U2libGluZz1udWxsLHRoaXMuYXR0cmlidXRlTmFtZT1udWxsLHRoaXMuYXR0cmlidXRlTmFtZXNwYWNlPW51bGwsdGhpcy5vbGRWYWx1ZT1udWxsfWZ1bmN0aW9uIGkoYSl7dmFyIGI9bmV3IGgoYS50eXBlLGEudGFyZ2V0KTtyZXR1cm4gYi5hZGRlZE5vZGVzPWEuYWRkZWROb2Rlcy5zbGljZSgpLGIucmVtb3ZlZE5vZGVzPWEucmVtb3ZlZE5vZGVzLnNsaWNlKCksYi5wcmV2aW91c1NpYmxpbmc9YS5wcmV2aW91c1NpYmxpbmcsYi5uZXh0U2libGluZz1hLm5leHRTaWJsaW5nLGIuYXR0cmlidXRlTmFtZT1hLmF0dHJpYnV0ZU5hbWUsYi5hdHRyaWJ1dGVOYW1lc3BhY2U9YS5hdHRyaWJ1dGVOYW1lc3BhY2UsYi5vbGRWYWx1ZT1hLm9sZFZhbHVlLGJ9ZnVuY3Rpb24gaihhLGIpe3JldHVybiB3PW5ldyBoKGEsYil9ZnVuY3Rpb24gayhhKXtyZXR1cm4geD94Oih4PWkodykseC5vbGRWYWx1ZT1hLHgpfWZ1bmN0aW9uIGwoKXt3PXg9dm9pZCAwfWZ1bmN0aW9uIG0oYSl7cmV0dXJuIGE9PT14fHxhPT09d31mdW5jdGlvbiBuKGEsYil7cmV0dXJuIGE9PT1iP2E6eCYmbShhKT94Om51bGx9ZnVuY3Rpb24gbyhhLGIsYyl7dGhpcy5vYnNlcnZlcj1hLHRoaXMudGFyZ2V0PWIsdGhpcy5vcHRpb25zPWMsdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzPVtdfXZhciBwPW5ldyBXZWFrTWFwLHE9d2luZG93Lm1zU2V0SW1tZWRpYXRlO2lmKCFxKXt2YXIgcj1bXSxzPVN0cmluZyhNYXRoLnJhbmRvbSgpKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24oYSl7aWYoYS5kYXRhPT09cyl7dmFyIGI9cjtyPVtdLGIuZm9yRWFjaChmdW5jdGlvbihhKXthKCl9KX19KSxxPWZ1bmN0aW9uKGEpe3IucHVzaChhKSx3aW5kb3cucG9zdE1lc3NhZ2UocywiKiIpfX12YXIgdD0hMSx1PVtdLHY9MDtnLnByb3RvdHlwZT17b2JzZXJ2ZTpmdW5jdGlvbihhLGIpe2lmKGE9YyhhKSwhYi5jaGlsZExpc3QmJiFiLmF0dHJpYnV0ZXMmJiFiLmNoYXJhY3RlckRhdGF8fGIuYXR0cmlidXRlT2xkVmFsdWUmJiFiLmF0dHJpYnV0ZXN8fGIuYXR0cmlidXRlRmlsdGVyJiZiLmF0dHJpYnV0ZUZpbHRlci5sZW5ndGgmJiFiLmF0dHJpYnV0ZXN8fGIuY2hhcmFjdGVyRGF0YU9sZFZhbHVlJiYhYi5jaGFyYWN0ZXJEYXRhKXRocm93IG5ldyBTeW50YXhFcnJvcjt2YXIgZD1wLmdldChhKTtkfHxwLnNldChhLGQ9W10pO2Zvcih2YXIgZSxmPTA7ZjxkLmxlbmd0aDtmKyspaWYoZFtmXS5vYnNlcnZlcj09PXRoaXMpe2U9ZFtmXSxlLnJlbW92ZUxpc3RlbmVycygpLGUub3B0aW9ucz1iO2JyZWFrfWV8fChlPW5ldyBvKHRoaXMsYSxiKSxkLnB1c2goZSksdGhpcy5ub2Rlc18ucHVzaChhKSksZS5hZGRMaXN0ZW5lcnMoKX0sZGlzY29ubmVjdDpmdW5jdGlvbigpe3RoaXMubm9kZXNfLmZvckVhY2goZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXAuZ2V0KGEpLGM9MDtjPGIubGVuZ3RoO2MrKyl7dmFyIGQ9YltjXTtpZihkLm9ic2VydmVyPT09dGhpcyl7ZC5yZW1vdmVMaXN0ZW5lcnMoKSxiLnNwbGljZShjLDEpO2JyZWFrfX19LHRoaXMpLHRoaXMucmVjb3Jkc189W119LHRha2VSZWNvcmRzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5yZWNvcmRzXztyZXR1cm4gdGhpcy5yZWNvcmRzXz1bXSxhfX07dmFyIHcseDtvLnByb3RvdHlwZT17ZW5xdWV1ZTpmdW5jdGlvbihhKXt2YXIgYz10aGlzLm9ic2VydmVyLnJlY29yZHNfLGQ9Yy5sZW5ndGg7aWYoYy5sZW5ndGg+MCl7dmFyIGU9Y1tkLTFdLGY9bihlLGEpO2lmKGYpcmV0dXJuIHZvaWQoY1tkLTFdPWYpfWVsc2UgYih0aGlzLm9ic2VydmVyKTtjW2RdPWF9LGFkZExpc3RlbmVyczpmdW5jdGlvbigpe3RoaXMuYWRkTGlzdGVuZXJzXyh0aGlzLnRhcmdldCl9LGFkZExpc3RlbmVyc186ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5vcHRpb25zO2IuYXR0cmlidXRlcyYmYS5hZGRFdmVudExpc3RlbmVyKCJET01BdHRyTW9kaWZpZWQiLHRoaXMsITApLGIuY2hhcmFjdGVyRGF0YSYmYS5hZGRFdmVudExpc3RlbmVyKCJET01DaGFyYWN0ZXJEYXRhTW9kaWZpZWQiLHRoaXMsITApLGIuY2hpbGRMaXN0JiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVJbnNlcnRlZCIsdGhpcywhMCksKGIuY2hpbGRMaXN0fHxiLnN1YnRyZWUpJiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTU5vZGVSZW1vdmVkIix0aGlzLCEwKX0scmVtb3ZlTGlzdGVuZXJzOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVMaXN0ZW5lcnNfKHRoaXMudGFyZ2V0KX0scmVtb3ZlTGlzdGVuZXJzXzpmdW5jdGlvbihhKXt2YXIgYj10aGlzLm9wdGlvbnM7Yi5hdHRyaWJ1dGVzJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUF0dHJNb2RpZmllZCIsdGhpcywhMCksYi5jaGFyYWN0ZXJEYXRhJiZhLnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCIsdGhpcywhMCksYi5jaGlsZExpc3QmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZUluc2VydGVkIix0aGlzLCEwKSwoYi5jaGlsZExpc3R8fGIuc3VidHJlZSkmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NTm9kZVJlbW92ZWQiLHRoaXMsITApfSxhZGRUcmFuc2llbnRPYnNlcnZlcjpmdW5jdGlvbihhKXtpZihhIT09dGhpcy50YXJnZXQpe3RoaXMuYWRkTGlzdGVuZXJzXyhhKSx0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChhKTt2YXIgYj1wLmdldChhKTtifHxwLnNldChhLGI9W10pLGIucHVzaCh0aGlzKX19LHJlbW92ZVRyYW5zaWVudE9ic2VydmVyczpmdW5jdGlvbigpe3ZhciBhPXRoaXMudHJhbnNpZW50T2JzZXJ2ZWROb2Rlczt0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXM9W10sYS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMucmVtb3ZlTGlzdGVuZXJzXyhhKTtmb3IodmFyIGI9cC5nZXQoYSksYz0wO2M8Yi5sZW5ndGg7YysrKWlmKGJbY109PT10aGlzKXtiLnNwbGljZShjLDEpO2JyZWFrfX0sdGhpcyl9LGhhbmRsZUV2ZW50OmZ1bmN0aW9uKGEpe3N3aXRjaChhLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGEudHlwZSl7Y2FzZSJET01BdHRyTW9kaWZpZWQiOnZhciBiPWEuYXR0ck5hbWUsYz1hLnJlbGF0ZWROb2RlLm5hbWVzcGFjZVVSSSxkPWEudGFyZ2V0LGU9bmV3IGooImF0dHJpYnV0ZXMiLGQpO2UuYXR0cmlidXRlTmFtZT1iLGUuYXR0cmlidXRlTmFtZXNwYWNlPWM7dmFyIGc9YS5hdHRyQ2hhbmdlPT09TXV0YXRpb25FdmVudC5BRERJVElPTj9udWxsOmEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4hYS5hdHRyaWJ1dGVzfHxhLmF0dHJpYnV0ZUZpbHRlciYmYS5hdHRyaWJ1dGVGaWx0ZXIubGVuZ3RoJiYtMT09PWEuYXR0cmlidXRlRmlsdGVyLmluZGV4T2YoYikmJi0xPT09YS5hdHRyaWJ1dGVGaWx0ZXIuaW5kZXhPZihjKT92b2lkIDA6YS5hdHRyaWJ1dGVPbGRWYWx1ZT9rKGcpOmV9KTticmVhaztjYXNlIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZCI6dmFyIGQ9YS50YXJnZXQsZT1qKCJjaGFyYWN0ZXJEYXRhIixkKSxnPWEucHJldlZhbHVlO2YoZCxmdW5jdGlvbihhKXtyZXR1cm4gYS5jaGFyYWN0ZXJEYXRhP2EuY2hhcmFjdGVyRGF0YU9sZFZhbHVlP2soZyk6ZTp2b2lkIDB9KTticmVhaztjYXNlIkRPTU5vZGVSZW1vdmVkIjp0aGlzLmFkZFRyYW5zaWVudE9ic2VydmVyKGEudGFyZ2V0KTtjYXNlIkRPTU5vZGVJbnNlcnRlZCI6dmFyIGgsaSxkPWEucmVsYXRlZE5vZGUsbT1hLnRhcmdldDsiRE9NTm9kZUluc2VydGVkIj09PWEudHlwZT8oaD1bbV0saT1bXSk6KGg9W10saT1bbV0pO3ZhciBuPW0ucHJldmlvdXNTaWJsaW5nLG89bS5uZXh0U2libGluZyxlPWooImNoaWxkTGlzdCIsZCk7ZS5hZGRlZE5vZGVzPWgsZS5yZW1vdmVkTm9kZXM9aSxlLnByZXZpb3VzU2libGluZz1uLGUubmV4dFNpYmxpbmc9byxmKGQsZnVuY3Rpb24oYSl7cmV0dXJuIGEuY2hpbGRMaXN0P2U6dm9pZCAwfSl9bCgpfX0sYS5Kc011dGF0aW9uT2JzZXJ2ZXI9ZyxhLk11dGF0aW9uT2JzZXJ2ZXJ8fChhLk11dGF0aW9uT2JzZXJ2ZXI9Zyl9KHRoaXMpLHdpbmRvdy5IVE1MSW1wb3J0cz13aW5kb3cuSFRNTEltcG9ydHN8fHtmbGFnczp7fX0sZnVuY3Rpb24oYSl7dmFyIGI9KGEucGF0aCxhLnhociksYz1hLmZsYWdzLGQ9ZnVuY3Rpb24oYSxiKXt0aGlzLmNhY2hlPXt9LHRoaXMub25sb2FkPWEsdGhpcy5vbmNvbXBsZXRlPWIsdGhpcy5pbmZsaWdodD0wLHRoaXMucGVuZGluZz17fX07ZC5wcm90b3R5cGU9e2FkZE5vZGVzOmZ1bmN0aW9uKGEpe3RoaXMuaW5mbGlnaHQrPWEubGVuZ3RoO2Zvcih2YXIgYixjPTAsZD1hLmxlbmd0aDtkPmMmJihiPWFbY10pO2MrKyl0aGlzLnJlcXVpcmUoYik7dGhpcy5jaGVja0RvbmUoKX0sYWRkTm9kZTpmdW5jdGlvbihhKXt0aGlzLmluZmxpZ2h0KyssdGhpcy5yZXF1aXJlKGEpLHRoaXMuY2hlY2tEb25lKCl9LHJlcXVpcmU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5zcmN8fGEuaHJlZjthLl9fbm9kZVVybD1iLHRoaXMuZGVkdXBlKGIsYSl8fHRoaXMuZmV0Y2goYixhKX0sZGVkdXBlOmZ1bmN0aW9uKGEsYil7aWYodGhpcy5wZW5kaW5nW2FdKXJldHVybiB0aGlzLnBlbmRpbmdbYV0ucHVzaChiKSwhMDtyZXR1cm4gdGhpcy5jYWNoZVthXT8odGhpcy5vbmxvYWQoYSxiLHRoaXMuY2FjaGVbYV0pLHRoaXMudGFpbCgpLCEwKToodGhpcy5wZW5kaW5nW2FdPVtiXSwhMSl9LGZldGNoOmZ1bmN0aW9uKGEsZCl7aWYoYy5sb2FkJiZjb25zb2xlLmxvZygiZmV0Y2giLGEsZCksYS5tYXRjaCgvXmRhdGE6Lykpe3ZhciBlPWEuc3BsaXQoIiwiKSxmPWVbMF0sZz1lWzFdO2c9Zi5pbmRleE9mKCI7YmFzZTY0Iik+LTE/YXRvYihnKTpkZWNvZGVVUklDb21wb25lbnQoZyksc2V0VGltZW91dChmdW5jdGlvbigpe3RoaXMucmVjZWl2ZShhLGQsbnVsbCxnKX0uYmluZCh0aGlzKSwwKX1lbHNle3ZhciBoPWZ1bmN0aW9uKGIsYyl7dGhpcy5yZWNlaXZlKGEsZCxiLGMpfS5iaW5kKHRoaXMpO2IubG9hZChhLGgpfX0scmVjZWl2ZTpmdW5jdGlvbihhLGIsYyxkKXt0aGlzLmNhY2hlW2FdPWQ7Zm9yKHZhciBlLGY9dGhpcy5wZW5kaW5nW2FdLGc9MCxoPWYubGVuZ3RoO2g+ZyYmKGU9ZltnXSk7ZysrKXRoaXMub25sb2FkKGEsZSxkKSx0aGlzLnRhaWwoKTt0aGlzLnBlbmRpbmdbYV09bnVsbH0sdGFpbDpmdW5jdGlvbigpey0tdGhpcy5pbmZsaWdodCx0aGlzLmNoZWNrRG9uZSgpfSxjaGVja0RvbmU6ZnVuY3Rpb24oKXt0aGlzLmluZmxpZ2h0fHx0aGlzLm9uY29tcGxldGUoKX19LGI9Ynx8e2FzeW5jOiEwLG9rOmZ1bmN0aW9uKGEpe3JldHVybiBhLnN0YXR1cz49MjAwJiZhLnN0YXR1czwzMDB8fDMwND09PWEuc3RhdHVzfHwwPT09YS5zdGF0dXN9LGxvYWQ6ZnVuY3Rpb24oYyxkLGUpe3ZhciBmPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4oYS5mbGFncy5kZWJ1Z3x8YS5mbGFncy5idXN0KSYmKGMrPSI/IitNYXRoLnJhbmRvbSgpKSxmLm9wZW4oIkdFVCIsYyxiLmFzeW5jKSxmLmFkZEV2ZW50TGlzdGVuZXIoInJlYWR5c3RhdGVjaGFuZ2UiLGZ1bmN0aW9uKCl7ND09PWYucmVhZHlTdGF0ZSYmZC5jYWxsKGUsIWIub2soZikmJmYsZi5yZXNwb25zZXx8Zi5yZXNwb25zZVRleHQsYyl9KSxmLnNlbmQoKSxmfSxsb2FkRG9jdW1lbnQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMubG9hZChhLGIsYykucmVzcG9uc2VUeXBlPSJkb2N1bWVudCJ9fSxhLnhocj1iLGEuTG9hZGVyPWR9KHdpbmRvdy5IVE1MSW1wb3J0cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtyZXR1cm4ibGluayI9PT1hLmxvY2FsTmFtZSYmYS5yZWw9PT1nfWZ1bmN0aW9uIGMoYSl7dmFyIGIsYz1kKGEpO3RyeXtiPWJ0b2EoYyl9Y2F0Y2goZSl7Yj1idG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChjKSkpLGNvbnNvbGUud2FybigiU2NyaXB0IGNvbnRhaW5lZCBub24tbGF0aW4gY2hhcmFjdGVycyB0aGF0IHdlcmUgZm9yY2VkIHRvIGxhdGluLiBTb21lIGNoYXJhY3RlcnMgbWF5IGJlIHdyb25nLiIsYSl9cmV0dXJuImRhdGE6dGV4dC9qYXZhc2NyaXB0O2Jhc2U2NCwiK2J9ZnVuY3Rpb24gZChhKXtyZXR1cm4gYS50ZXh0Q29udGVudCtlKGEpfWZ1bmN0aW9uIGUoYSl7dmFyIGI9YS5fX25vZGVVcmw7aWYoIWIpe2I9YS5vd25lckRvY3VtZW50LmJhc2VVUkk7dmFyIGM9IlsiK01hdGguZmxvb3IoMWUzKihNYXRoLnJhbmRvbSgpKzEpKSsiXSIsZD1hLnRleHRDb250ZW50Lm1hdGNoKC9Qb2x5bWVyXChbJyJdKFteJyJdKikvKTtjPWQmJmRbMV18fGMsYis9Ii8iK2MrIi5qcyJ9cmV0dXJuIlxuLy8jIHNvdXJjZVVSTD0iK2IrIlxuIn1mdW5jdGlvbiBmKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpO3JldHVybiBiLnRleHRDb250ZW50PWEudGV4dENvbnRlbnQsbi5yZXNvbHZlVXJsc0luU3R5bGUoYiksYn12YXIgZz0iaW1wb3J0IixoPWEuZmxhZ3MsaT0vVHJpZGVudC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxqPXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD93aW5kb3cuU2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGRvY3VtZW50KTpkb2N1bWVudCxrPXtkb2N1bWVudFNlbGVjdG9yczoibGlua1tyZWw9IitnKyJdIixpbXBvcnRzU2VsZWN0b3JzOlsibGlua1tyZWw9IitnKyJdIiwibGlua1tyZWw9c3R5bGVzaGVldF0iLCJzdHlsZSIsInNjcmlwdDpub3QoW3R5cGVdKSIsJ3NjcmlwdFt0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiXSddLmpvaW4oIiwiKSxtYXA6e2xpbms6InBhcnNlTGluayIsc2NyaXB0OiJwYXJzZVNjcmlwdCIsc3R5bGU6InBhcnNlU3R5bGUifSxwYXJzZU5leHQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5leHRUb1BhcnNlKCk7YSYmdGhpcy5wYXJzZShhKX0scGFyc2U6ZnVuY3Rpb24oYSl7aWYodGhpcy5pc1BhcnNlZChhKSlyZXR1cm4gdm9pZChoLnBhcnNlJiZjb25zb2xlLmxvZygiWyVzXSBpcyBhbHJlYWR5IHBhcnNlZCIsYS5sb2NhbE5hbWUpKTt2YXIgYj10aGlzW3RoaXMubWFwW2EubG9jYWxOYW1lXV07YiYmKHRoaXMubWFya1BhcnNpbmcoYSksYi5jYWxsKHRoaXMsYSkpfSxtYXJrUGFyc2luZzpmdW5jdGlvbihhKXtoLnBhcnNlJiZjb25zb2xlLmxvZygicGFyc2luZyIsYSksdGhpcy5wYXJzaW5nRWxlbWVudD1hfSxtYXJrUGFyc2luZ0NvbXBsZXRlOmZ1bmN0aW9uKGEpe2EuX19pbXBvcnRQYXJzZWQ9ITAsYS5fX2ltcG9ydEVsZW1lbnQmJihhLl9faW1wb3J0RWxlbWVudC5fX2ltcG9ydFBhcnNlZD0hMCksdGhpcy5wYXJzaW5nRWxlbWVudD1udWxsLGgucGFyc2UmJmNvbnNvbGUubG9nKCJjb21wbGV0ZWQiLGEpLHRoaXMucGFyc2VOZXh0KCl9LHBhcnNlSW1wb3J0OmZ1bmN0aW9uKGEpe2lmKGEuaW1wb3J0Ll9faW1wb3J0UGFyc2VkPSEwLEhUTUxJbXBvcnRzLl9faW1wb3J0c1BhcnNpbmdIb29rJiZIVE1MSW1wb3J0cy5fX2ltcG9ydHNQYXJzaW5nSG9vayhhKSxhLmRpc3BhdGNoRXZlbnQoYS5fX3Jlc291cmNlP25ldyBDdXN0b21FdmVudCgibG9hZCIse2J1YmJsZXM6ITF9KTpuZXcgQ3VzdG9tRXZlbnQoImVycm9yIix7YnViYmxlczohMX0pKSxhLl9fcGVuZGluZylmb3IodmFyIGI7YS5fX3BlbmRpbmcubGVuZ3RoOyliPWEuX19wZW5kaW5nLnNoaWZ0KCksYiYmYih7dGFyZ2V0OmF9KTt0aGlzLm1hcmtQYXJzaW5nQ29tcGxldGUoYSl9LHBhcnNlTGluazpmdW5jdGlvbihhKXtiKGEpP3RoaXMucGFyc2VJbXBvcnQoYSk6KGEuaHJlZj1hLmhyZWYsdGhpcy5wYXJzZUdlbmVyaWMoYSkpfSxwYXJzZVN0eWxlOmZ1bmN0aW9uKGEpe3ZhciBiPWE7YT1mKGEpLGEuX19pbXBvcnRFbGVtZW50PWIsdGhpcy5wYXJzZUdlbmVyaWMoYSl9LHBhcnNlR2VuZXJpYzpmdW5jdGlvbihhKXt0aGlzLnRyYWNrRWxlbWVudChhKSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGEpfSx0cmFja0VsZW1lbnQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLGQ9ZnVuY3Rpb24oZCl7YiYmYihkKSxjLm1hcmtQYXJzaW5nQ29tcGxldGUoYSl9O2lmKGEuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZCksYS5hZGRFdmVudExpc3RlbmVyKCJlcnJvciIsZCksaSYmInN0eWxlIj09PWEubG9jYWxOYW1lKXt2YXIgZT0hMTtpZigtMT09YS50ZXh0Q29udGVudC5pbmRleE9mKCJAaW1wb3J0IikpZT0hMDtlbHNlIGlmKGEuc2hlZXQpe2U9ITA7Zm9yKHZhciBmLGc9YS5zaGVldC5jc3NSdWxlcyxoPWc/Zy5sZW5ndGg6MCxqPTA7aD5qJiYoZj1nW2pdKTtqKyspZi50eXBlPT09Q1NTUnVsZS5JTVBPUlRfUlVMRSYmKGU9ZSYmQm9vbGVhbihmLnN0eWxlU2hlZXQpKX1lJiZhLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCJsb2FkIix7YnViYmxlczohMX0pKX19LHBhcnNlU2NyaXB0OmZ1bmN0aW9uKGIpe3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2QuX19pbXBvcnRFbGVtZW50PWIsZC5zcmM9Yi5zcmM/Yi5zcmM6YyhiKSxhLmN1cnJlbnRTY3JpcHQ9Yix0aGlzLnRyYWNrRWxlbWVudChkLGZ1bmN0aW9uKCl7ZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpLGEuY3VycmVudFNjcmlwdD1udWxsfSksZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChkKX0sbmV4dFRvUGFyc2U6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5wYXJzaW5nRWxlbWVudCYmdGhpcy5uZXh0VG9QYXJzZUluRG9jKGopfSxuZXh0VG9QYXJzZUluRG9jOmZ1bmN0aW9uKGEsYyl7Zm9yKHZhciBkLGU9YS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMucGFyc2VTZWxlY3RvcnNGb3JOb2RlKGEpKSxmPTAsZz1lLmxlbmd0aDtnPmYmJihkPWVbZl0pO2YrKylpZighdGhpcy5pc1BhcnNlZChkKSlyZXR1cm4gdGhpcy5oYXNSZXNvdXJjZShkKT9iKGQpP3RoaXMubmV4dFRvUGFyc2VJbkRvYyhkLmltcG9ydCxkKTpkOnZvaWQgMDtyZXR1cm4gY30scGFyc2VTZWxlY3RvcnNGb3JOb2RlOmZ1bmN0aW9uKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudHx8YTtyZXR1cm4gYj09PWo/dGhpcy5kb2N1bWVudFNlbGVjdG9yczp0aGlzLmltcG9ydHNTZWxlY3RvcnN9LGlzUGFyc2VkOmZ1bmN0aW9uKGEpe3JldHVybiBhLl9faW1wb3J0UGFyc2VkfSxoYXNSZXNvdXJjZTpmdW5jdGlvbihhKXtyZXR1cm4gYihhKSYmIWEuaW1wb3J0PyExOiEwfX0sbD0vKHVybFwoKShbXildKikoXCkpL2csbT0vKEBpbXBvcnRbXHNdKyg/IXVybFwoKSkoW147XSopKDspL2csbj17cmVzb2x2ZVVybHNJblN0eWxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudCxjPWIuY3JlYXRlRWxlbWVudCgiYSIpO3JldHVybiBhLnRleHRDb250ZW50PXRoaXMucmVzb2x2ZVVybHNJbkNzc1RleHQoYS50ZXh0Q29udGVudCxjKSxhfSxyZXNvbHZlVXJsc0luQ3NzVGV4dDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMucmVwbGFjZVVybHMoYSxiLGwpO3JldHVybiBjPXRoaXMucmVwbGFjZVVybHMoYyxiLG0pfSxyZXBsYWNlVXJsczpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGEucmVwbGFjZShjLGZ1bmN0aW9uKGEsYyxkLGUpe3ZhciBmPWQucmVwbGFjZSgvWyInXS9nLCIiKTtyZXR1cm4gYi5ocmVmPWYsZj1iLmhyZWYsYysiJyIrZisiJyIrZX0pfX07YS5wYXJzZXI9ayxhLnBhdGg9bixhLmlzSUU9aX0oSFRNTEltcG9ydHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGMoYSxtKX1mdW5jdGlvbiBjKGEsYil7cmV0dXJuImxpbmsiPT09YS5sb2NhbE5hbWUmJmEuZ2V0QXR0cmlidXRlKCJyZWwiKT09PWJ9ZnVuY3Rpb24gZChhLGIpe3ZhciBjPWE7YyBpbnN0YW5jZW9mIERvY3VtZW50fHwoYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQobSkpLGMuX1VSTD1iO3ZhciBkPWMuY3JlYXRlRWxlbWVudCgiYmFzZSIpO2Quc2V0QXR0cmlidXRlKCJocmVmIixiKSxjLmJhc2VVUkl8fChjLmJhc2VVUkk9Yik7dmFyIGU9Yy5jcmVhdGVFbGVtZW50KCJtZXRhIik7cmV0dXJuIGUuc2V0QXR0cmlidXRlKCJjaGFyc2V0IiwidXRmLTgiKSxjLmhlYWQuYXBwZW5kQ2hpbGQoZSksYy5oZWFkLmFwcGVuZENoaWxkKGQpLGEgaW5zdGFuY2VvZiBEb2N1bWVudHx8KGMuYm9keS5pbm5lckhUTUw9YSksd2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQmJkhUTUxUZW1wbGF0ZUVsZW1lbnQuYm9vdHN0cmFwJiZIVE1MVGVtcGxhdGVFbGVtZW50LmJvb3RzdHJhcChjKSxjfWZ1bmN0aW9uIGUoYSxiKXtiPWJ8fG4sZyhmdW5jdGlvbigpe2goYSxiKX0sYil9ZnVuY3Rpb24gZihhKXtyZXR1cm4iY29tcGxldGUiPT09YS5yZWFkeVN0YXRlfHxhLnJlYWR5U3RhdGU9PT11fWZ1bmN0aW9uIGcoYSxiKXtpZihmKGIpKWEmJmEoKTtlbHNle3ZhciBjPWZ1bmN0aW9uKCl7KCJjb21wbGV0ZSI9PT1iLnJlYWR5U3RhdGV8fGIucmVhZHlTdGF0ZT09PXUpJiYoYi5yZW1vdmVFdmVudExpc3RlbmVyKHYsYyksZyhhLGIpKX07Yi5hZGRFdmVudExpc3RlbmVyKHYsYyl9fWZ1bmN0aW9uIGgoYSxiKXtmdW5jdGlvbiBjKCl7Zj09ZyYmcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGEpfWZ1bmN0aW9uIGQoKXtmKyssYygpfXZhciBlPWIucXVlcnlTZWxlY3RvckFsbCgibGlua1tyZWw9aW1wb3J0XSIpLGY9MCxnPWUubGVuZ3RoO2lmKGcpZm9yKHZhciBoLGo9MDtnPmomJihoPWVbal0pO2orKylpKGgpP2QuY2FsbChoKTooaC5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixkKSxoLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixkKSk7ZWxzZSBjKCl9ZnVuY3Rpb24gaShhKXtyZXR1cm4gaz9hLmltcG9ydCYmImxvYWRpbmciIT09YS5pbXBvcnQucmVhZHlTdGF0ZTphLl9faW1wb3J0UGFyc2VkfXZhciBqPSJpbXBvcnQiaW4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGluayIpLGs9aixsPWEuZmxhZ3MsbT0iaW1wb3J0IixuPXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD9TaGFkb3dET01Qb2x5ZmlsbC53cmFwSWZOZWVkZWQoZG9jdW1lbnQpOmRvY3VtZW50O2lmKGspdmFyIG89e307ZWxzZSB2YXIgcD0oYS54aHIsYS5Mb2FkZXIpLHE9YS5wYXJzZXIsbz17ZG9jdW1lbnRzOnt9LGRvY3VtZW50UHJlbG9hZFNlbGVjdG9yczoibGlua1tyZWw9IittKyJdIixpbXBvcnRzUHJlbG9hZFNlbGVjdG9yczpbImxpbmtbcmVsPSIrbSsiXSJdLmpvaW4oIiwiKSxsb2FkTm9kZTpmdW5jdGlvbihhKXtyLmFkZE5vZGUoYSl9LGxvYWRTdWJ0cmVlOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMubWFyc2hhbE5vZGVzKGEpO3IuYWRkTm9kZXMoYil9LG1hcnNoYWxOb2RlczpmdW5jdGlvbihhKXtyZXR1cm4gYS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMubG9hZFNlbGVjdG9yc0Zvck5vZGUoYSkpfSxsb2FkU2VsZWN0b3JzRm9yTm9kZTpmdW5jdGlvbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnR8fGE7cmV0dXJuIGI9PT1uP3RoaXMuZG9jdW1lbnRQcmVsb2FkU2VsZWN0b3JzOnRoaXMuaW1wb3J0c1ByZWxvYWRTZWxlY3RvcnN9LGxvYWRlZDpmdW5jdGlvbihhLGMsZSl7aWYobC5sb2FkJiZjb25zb2xlLmxvZygibG9hZGVkIixhLGMpLGMuX19yZXNvdXJjZT1lLGIoYykpe3ZhciBmPXRoaXMuZG9jdW1lbnRzW2FdO2Z8fChmPWQoZSxhKSxmLl9faW1wb3J0TGluaz1jLHRoaXMuYm9vdERvY3VtZW50KGYpLHRoaXMuZG9jdW1lbnRzW2FdPWYpLGMuaW1wb3J0PWZ9cS5wYXJzZU5leHQoKX0sYm9vdERvY3VtZW50OmZ1bmN0aW9uKGEpe3RoaXMubG9hZFN1YnRyZWUoYSksdGhpcy5vYnNlcnZlKGEpLHEucGFyc2VOZXh0KCl9LGxvYWRlZEFsbDpmdW5jdGlvbigpe3EucGFyc2VOZXh0KCl9fSxyPW5ldyBwKG8ubG9hZGVkLmJpbmQobyksby5sb2FkZWRBbGwuYmluZChvKSk7dmFyIHM9e2dldDpmdW5jdGlvbigpe3JldHVybiBIVE1MSW1wb3J0cy5jdXJyZW50U2NyaXB0fHxkb2N1bWVudC5jdXJyZW50U2NyaXB0fSxjb25maWd1cmFibGU6ITB9O2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkb2N1bWVudCwiX2N1cnJlbnRTY3JpcHQiLHMpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCJfY3VycmVudFNjcmlwdCIscyksIWRvY3VtZW50LmJhc2VVUkkpe3ZhciB0PXtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LmxvY2F0aW9uLmhyZWZ9LGNvbmZpZ3VyYWJsZTohMH07T2JqZWN0LmRlZmluZVByb3BlcnR5KGRvY3VtZW50LCJiYXNlVVJJIix0KSxPYmplY3QuZGVmaW5lUHJvcGVydHkobiwiYmFzZVVSSSIsdCl9dmFyIHU9SFRNTEltcG9ydHMuaXNJRT8iY29tcGxldGUiOiJpbnRlcmFjdGl2ZSIsdj0icmVhZHlzdGF0ZWNoYW5nZSI7YS5oYXNOYXRpdmU9aixhLnVzZU5hdGl2ZT1rLGEuaW1wb3J0ZXI9byxhLndoZW5JbXBvcnRzUmVhZHk9ZSxhLklNUE9SVF9MSU5LX1RZUEU9bSxhLmlzSW1wb3J0TG9hZGVkPWksYS5pbXBvcnRMb2FkZXI9cn0od2luZG93LkhUTUxJbXBvcnRzKSxmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEpe2Zvcih2YXIgYixkPTAsZT1hLmxlbmd0aDtlPmQmJihiPWFbZF0pO2QrKykiY2hpbGRMaXN0Ij09PWIudHlwZSYmYi5hZGRlZE5vZGVzLmxlbmd0aCYmYyhiLmFkZGVkTm9kZXMpfWZ1bmN0aW9uIGMoYSl7Zm9yKHZhciBiLGU9MCxnPWEubGVuZ3RoO2c+ZSYmKGI9YVtlXSk7ZSsrKWQoYikmJmYubG9hZE5vZGUoYiksYi5jaGlsZHJlbiYmYi5jaGlsZHJlbi5sZW5ndGgmJmMoYi5jaGlsZHJlbil9ZnVuY3Rpb24gZChhKXtyZXR1cm4gMT09PWEubm9kZVR5cGUmJmcuY2FsbChhLGYubG9hZFNlbGVjdG9yc0Zvck5vZGUoYSkpfWZ1bmN0aW9uIGUoYSl7aC5vYnNlcnZlKGEse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSl9dmFyIGY9KGEuSU1QT1JUX0xJTktfVFlQRSxhLmltcG9ydGVyKSxnPUhUTUxFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzfHxIVE1MRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc1NlbGVjdG9yfHxIVE1MRWxlbWVudC5wcm90b3R5cGUud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxIVE1MRWxlbWVudC5wcm90b3R5cGUubW96TWF0Y2hlc1NlbGVjdG9yfHxIVE1MRWxlbWVudC5wcm90b3R5cGUubXNNYXRjaGVzU2VsZWN0b3IsaD1uZXcgTXV0YXRpb25PYnNlcnZlcihiKTthLm9ic2VydmU9ZSxmLm9ic2VydmU9ZX0oSFRNTEltcG9ydHMpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe0hUTUxJbXBvcnRzLmltcG9ydGVyLmJvb3REb2N1bWVudChiKX0iZnVuY3Rpb24iIT10eXBlb2Ygd2luZG93LkN1c3RvbUV2ZW50JiYod2luZG93LkN1c3RvbUV2ZW50PWZ1bmN0aW9uKGEsYil7dmFyIGM9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkhUTUxFdmVudHMiKTtyZXR1cm4gYy5pbml0RXZlbnQoYSxiLmJ1YmJsZXM9PT0hMT8hMTohMCxiLmNhbmNlbGFibGU9PT0hMT8hMTohMCxiLmRldGFpbCksY30pO3ZhciBiPXdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbD93aW5kb3cuU2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGRvY3VtZW50KTpkb2N1bWVudDtIVE1MSW1wb3J0cy53aGVuSW1wb3J0c1JlYWR5KGZ1bmN0aW9uKCl7SFRNTEltcG9ydHMucmVhZHk9ITAsSFRNTEltcG9ydHMucmVhZHlUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLGIuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoIkhUTUxJbXBvcnRzTG9hZGVkIix7YnViYmxlczohMH0pKX0pLEhUTUxJbXBvcnRzLnVzZU5hdGl2ZXx8KCJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlfHwiaW50ZXJhY3RpdmUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmIXdpbmRvdy5hdHRhY2hFdmVudD9hKCk6ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsYSkpfSgpLHdpbmRvdy5DdXN0b21FbGVtZW50cz13aW5kb3cuQ3VzdG9tRWxlbWVudHN8fHtmbGFnczp7fX0sZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhLGMsZCl7dmFyIGU9YS5maXJzdEVsZW1lbnRDaGlsZDtpZighZSlmb3IoZT1hLmZpcnN0Q2hpbGQ7ZSYmZS5ub2RlVHlwZSE9PU5vZGUuRUxFTUVOVF9OT0RFOyllPWUubmV4dFNpYmxpbmc7Zm9yKDtlOyljKGUsZCkhPT0hMCYmYihlLGMsZCksZT1lLm5leHRFbGVtZW50U2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBjKGEsYil7Zm9yKHZhciBjPWEuc2hhZG93Um9vdDtjOylkKGMsYiksYz1jLm9sZGVyU2hhZG93Um9vdH1mdW5jdGlvbiBkKGEsZCl7YihhLGZ1bmN0aW9uKGEpe3JldHVybiBkKGEpPyEwOnZvaWQgYyhhLGQpfSksYyhhLGQpfWZ1bmN0aW9uIGUoYSl7cmV0dXJuIGgoYSk/KGkoYSksITApOnZvaWQgbChhKX1mdW5jdGlvbiBmKGEpe2QoYSxmdW5jdGlvbihhKXtyZXR1cm4gZShhKT8hMDp2b2lkIDB9KX1mdW5jdGlvbiBnKGEpe3JldHVybiBlKGEpfHxmKGEpfWZ1bmN0aW9uIGgoYil7aWYoIWIuX191cGdyYWRlZF9fJiZiLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUpe3ZhciBjPWIuZ2V0QXR0cmlidXRlKCJpcyIpfHxiLmxvY2FsTmFtZSxkPWEucmVnaXN0cnlbY107aWYoZClyZXR1cm4gQS5kb20mJmNvbnNvbGUuZ3JvdXAoInVwZ3JhZGU6IixiLmxvY2FsTmFtZSksYS51cGdyYWRlKGIpLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCksITB9fWZ1bmN0aW9uIGkoYSl7bChhKSxyKGEpJiZkKGEsZnVuY3Rpb24oYSl7bChhKX0pfWZ1bmN0aW9uIGooYSl7aWYoRS5wdXNoKGEpLCFEKXtEPSEwO3ZhciBiPXdpbmRvdy5QbGF0Zm9ybSYmd2luZG93LlBsYXRmb3JtLmVuZE9mTWljcm90YXNrfHxzZXRUaW1lb3V0O2Ioayl9fWZ1bmN0aW9uIGsoKXtEPSExO2Zvcih2YXIgYSxiPUUsYz0wLGQ9Yi5sZW5ndGg7ZD5jJiYoYT1iW2NdKTtjKyspYSgpO0U9W119ZnVuY3Rpb24gbChhKXtDP2ooZnVuY3Rpb24oKXttKGEpfSk6bShhKX1mdW5jdGlvbiBtKGEpeyhhLmF0dGFjaGVkQ2FsbGJhY2t8fGEuZGV0YWNoZWRDYWxsYmFja3x8YS5fX3VwZ3JhZGVkX18mJkEuZG9tKSYmKEEuZG9tJiZjb25zb2xlLmdyb3VwKCJpbnNlcnRlZDoiLGEubG9jYWxOYW1lKSxyKGEpJiYoYS5fX2luc2VydGVkPShhLl9faW5zZXJ0ZWR8fDApKzEsYS5fX2luc2VydGVkPDEmJihhLl9faW5zZXJ0ZWQ9MSksYS5fX2luc2VydGVkPjE/QS5kb20mJmNvbnNvbGUud2FybigiaW5zZXJ0ZWQ6IixhLmxvY2FsTmFtZSwiaW5zZXJ0L3JlbW92ZSBjb3VudDoiLGEuX19pbnNlcnRlZCk6YS5hdHRhY2hlZENhbGxiYWNrJiYoQS5kb20mJmNvbnNvbGUubG9nKCJpbnNlcnRlZDoiLGEubG9jYWxOYW1lKSxhLmF0dGFjaGVkQ2FsbGJhY2soKSkpLEEuZG9tJiZjb25zb2xlLmdyb3VwRW5kKCkpfWZ1bmN0aW9uIG4oYSl7byhhKSxkKGEsZnVuY3Rpb24oYSl7byhhKX0pfWZ1bmN0aW9uIG8oYSl7Qz9qKGZ1bmN0aW9uKCl7cChhKX0pOnAoYSl9ZnVuY3Rpb24gcChhKXsoYS5hdHRhY2hlZENhbGxiYWNrfHxhLmRldGFjaGVkQ2FsbGJhY2t8fGEuX191cGdyYWRlZF9fJiZBLmRvbSkmJihBLmRvbSYmY29uc29sZS5ncm91cCgicmVtb3ZlZDoiLGEubG9jYWxOYW1lKSxyKGEpfHwoYS5fX2luc2VydGVkPShhLl9faW5zZXJ0ZWR8fDApLTEsYS5fX2luc2VydGVkPjAmJihhLl9faW5zZXJ0ZWQ9MCksYS5fX2luc2VydGVkPDA/QS5kb20mJmNvbnNvbGUud2FybigicmVtb3ZlZDoiLGEubG9jYWxOYW1lLCJpbnNlcnQvcmVtb3ZlIGNvdW50OiIsYS5fX2luc2VydGVkKTphLmRldGFjaGVkQ2FsbGJhY2smJmEuZGV0YWNoZWRDYWxsYmFjaygpKSxBLmRvbSYmY29uc29sZS5ncm91cEVuZCgpKX1mdW5jdGlvbiBxKGEpe3JldHVybiB3aW5kb3cuU2hhZG93RE9NUG9seWZpbGw/U2hhZG93RE9NUG9seWZpbGwud3JhcElmTmVlZGVkKGEpOmF9ZnVuY3Rpb24gcihhKXtmb3IodmFyIGI9YSxjPXEoZG9jdW1lbnQpO2I7KXtpZihiPT1jKXJldHVybiEwO2I9Yi5wYXJlbnROb2RlfHxiLmhvc3R9fWZ1bmN0aW9uIHMoYSl7aWYoYS5zaGFkb3dSb290JiYhYS5zaGFkb3dSb290Ll9fd2F0Y2hlZCl7QS5kb20mJmNvbnNvbGUubG9nKCJ3YXRjaGluZyBzaGFkb3ctcm9vdCBmb3I6ICIsYS5sb2NhbE5hbWUpO2Zvcih2YXIgYj1hLnNoYWRvd1Jvb3Q7YjspdChiKSxiPWIub2xkZXJTaGFkb3dSb290fX1mdW5jdGlvbiB0KGEpe2EuX193YXRjaGVkfHwodyhhKSxhLl9fd2F0Y2hlZD0hMCl9ZnVuY3Rpb24gdShhKXtpZihBLmRvbSl7dmFyIGI9YVswXTtpZihiJiYiY2hpbGRMaXN0Ij09PWIudHlwZSYmYi5hZGRlZE5vZGVzJiZiLmFkZGVkTm9kZXMpe2Zvcih2YXIgYz1iLmFkZGVkTm9kZXNbMF07YyYmYyE9PWRvY3VtZW50JiYhYy5ob3N0OyljPWMucGFyZW50Tm9kZTt2YXIgZD1jJiYoYy5VUkx8fGMuX1VSTHx8Yy5ob3N0JiZjLmhvc3QubG9jYWxOYW1lKXx8IiI7ZD1kLnNwbGl0KCIvPyIpLnNoaWZ0KCkuc3BsaXQoIi8iKS5wb3AoKX1jb25zb2xlLmdyb3VwKCJtdXRhdGlvbnMgKCVkKSBbJXNdIixhLmxlbmd0aCxkfHwiIil9YS5mb3JFYWNoKGZ1bmN0aW9uKGEpeyJjaGlsZExpc3QiPT09YS50eXBlJiYoRyhhLmFkZGVkTm9kZXMsZnVuY3Rpb24oYSl7YS5sb2NhbE5hbWUmJmcoYSl9KSxHKGEucmVtb3ZlZE5vZGVzLGZ1bmN0aW9uKGEpe2EubG9jYWxOYW1lJiZuKGEpfSkpfSksQS5kb20mJmNvbnNvbGUuZ3JvdXBFbmQoKX1mdW5jdGlvbiB2KCl7dShGLnRha2VSZWNvcmRzKCkpLGsoKX1mdW5jdGlvbiB3KGEpe0Yub2JzZXJ2ZShhLHtjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pfWZ1bmN0aW9uIHgoYSl7dyhhKX1mdW5jdGlvbiB5KGEpe0EuZG9tJiZjb25zb2xlLmdyb3VwKCJ1cGdyYWRlRG9jdW1lbnQ6ICIsYS5iYXNlVVJJLnNwbGl0KCIvIikucG9wKCkpLGcoYSksQS5kb20mJmNvbnNvbGUuZ3JvdXBFbmQoKX1mdW5jdGlvbiB6KGEpe2E9cShhKTtmb3IodmFyIGIsYz1hLnF1ZXJ5U2VsZWN0b3JBbGwoImxpbmtbcmVsPSIrQisiXSIpLGQ9MCxlPWMubGVuZ3RoO2U+ZCYmKGI9Y1tkXSk7ZCsrKWIuaW1wb3J0JiZiLmltcG9ydC5fX3BhcnNlZCYmeihiLmltcG9ydCk7eShhKX12YXIgQT13aW5kb3cubG9nRmxhZ3N8fHt9LEI9d2luZG93LkhUTUxJbXBvcnRzP0hUTUxJbXBvcnRzLklNUE9SVF9MSU5LX1RZUEU6Im5vbmUiLEM9IXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuTXV0YXRpb25PYnNlcnZlcj09PXdpbmRvdy5Kc011dGF0aW9uT2JzZXJ2ZXI7YS5oYXNQb2x5ZmlsbE11dGF0aW9ucz1DO3ZhciBEPSExLEU9W10sRj1uZXcgTXV0YXRpb25PYnNlcnZlcih1KSxHPUFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwuYmluZChBcnJheS5wcm90b3R5cGUuZm9yRWFjaCk7YS5JTVBPUlRfTElOS19UWVBFPUIsYS53YXRjaFNoYWRvdz1zLGEudXBncmFkZURvY3VtZW50VHJlZT16LGEudXBncmFkZUFsbD1nLGEudXBncmFkZVN1YnRyZWU9ZixhLmluc2VydGVkTm9kZT1pLGEub2JzZXJ2ZURvY3VtZW50PXgsYS51cGdyYWRlRG9jdW1lbnQ9eSxhLnRha2VSZWNvcmRzPXZ9KHdpbmRvdy5DdXN0b21FbGVtZW50cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihiLGcpe3ZhciBoPWd8fHt9O2lmKCFiKXRocm93IG5ldyBFcnJvcigiZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50OiBmaXJzdCBhcmd1bWVudCBgbmFtZWAgbXVzdCBub3QgYmUgZW1wdHkiKTtpZihiLmluZGV4T2YoIi0iKTwwKXRocm93IG5ldyBFcnJvcigiZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50OiBmaXJzdCBhcmd1bWVudCAoJ25hbWUnKSBtdXN0IGNvbnRhaW4gYSBkYXNoICgnLScpLiBBcmd1bWVudCBwcm92aWRlZCB3YXMgJyIrU3RyaW5nKGIpKyInLiIpO2lmKGMoYikpdGhyb3cgbmV3IEVycm9yKCJGYWlsZWQgdG8gZXhlY3V0ZSAncmVnaXN0ZXJFbGVtZW50JyBvbiAnRG9jdW1lbnQnOiBSZWdpc3RyYXRpb24gZmFpbGVkIGZvciB0eXBlICciK1N0cmluZyhiKSsiJy4gVGhlIHR5cGUgbmFtZSBpcyBpbnZhbGlkLiIpO2lmKG4oYikpdGhyb3cgbmV3IEVycm9yKCJEdXBsaWNhdGVEZWZpbml0aW9uRXJyb3I6IGEgdHlwZSB3aXRoIG5hbWUgJyIrU3RyaW5nKGIpKyInIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCIpO2lmKCFoLnByb3RvdHlwZSl0aHJvdyBuZXcgRXJyb3IoIk9wdGlvbnMgbWlzc2luZyByZXF1aXJlZCBwcm90b3R5cGUgcHJvcGVydHkiKTtyZXR1cm4gaC5fX25hbWU9Yi50b0xvd2VyQ2FzZSgpLGgubGlmZWN5Y2xlPWgubGlmZWN5Y2xlfHx7fSxoLmFuY2VzdHJ5PWQoaC5leHRlbmRzKSxlKGgpLGYoaCksbChoLnByb3RvdHlwZSksbyhoLl9fbmFtZSxoKSxoLmN0b3I9cChoKSxoLmN0b3IucHJvdG90eXBlPWgucHJvdG90eXBlLGgucHJvdG90eXBlLmNvbnN0cnVjdG9yPWguY3RvcixhLnJlYWR5JiZhLnVwZ3JhZGVEb2N1bWVudFRyZWUoZG9jdW1lbnQpLGguY3Rvcn1mdW5jdGlvbiBjKGEpe2Zvcih2YXIgYj0wO2I8eS5sZW5ndGg7YisrKWlmKGE9PT15W2JdKXJldHVybiEwfWZ1bmN0aW9uIGQoYSl7dmFyIGI9bihhKTtyZXR1cm4gYj9kKGIuZXh0ZW5kcykuY29uY2F0KFtiXSk6W119ZnVuY3Rpb24gZShhKXtmb3IodmFyIGIsYz1hLmV4dGVuZHMsZD0wO2I9YS5hbmNlc3RyeVtkXTtkKyspYz1iLmlzJiZiLnRhZzthLnRhZz1jfHxhLl9fbmFtZSxjJiYoYS5pcz1hLl9fbmFtZSl9ZnVuY3Rpb24gZihhKXtpZighT2JqZWN0Ll9fcHJvdG9fXyl7dmFyIGI9SFRNTEVsZW1lbnQucHJvdG90eXBlO2lmKGEuaXMpe3ZhciBjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYS50YWcpO2I9T2JqZWN0LmdldFByb3RvdHlwZU9mKGMpfWZvcih2YXIgZCxlPWEucHJvdG90eXBlO2UmJmUhPT1iOyl7dmFyIGQ9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpO2UuX19wcm90b19fPWQsZT1kfX1hLm5hdGl2ZT1ifWZ1bmN0aW9uIGcoYSl7cmV0dXJuIGgoQihhLnRhZyksYSl9ZnVuY3Rpb24gaChiLGMpe3JldHVybiBjLmlzJiZiLnNldEF0dHJpYnV0ZSgiaXMiLGMuaXMpLGIucmVtb3ZlQXR0cmlidXRlKCJ1bnJlc29sdmVkIiksaShiLGMpLGIuX191cGdyYWRlZF9fPSEwLGsoYiksYS5pbnNlcnRlZE5vZGUoYiksYS51cGdyYWRlU3VidHJlZShiKSxifWZ1bmN0aW9uIGkoYSxiKXtPYmplY3QuX19wcm90b19fP2EuX19wcm90b19fPWIucHJvdG90eXBlOihqKGEsYi5wcm90b3R5cGUsYi5uYXRpdmUpLGEuX19wcm90b19fPWIucHJvdG90eXBlKX1mdW5jdGlvbiBqKGEsYixjKXtmb3IodmFyIGQ9e30sZT1iO2UhPT1jJiZlIT09SFRNTEVsZW1lbnQucHJvdG90eXBlOyl7Zm9yKHZhciBmLGc9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSksaD0wO2Y9Z1toXTtoKyspZFtmXXx8KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGYsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGYpKSxkW2ZdPTEpO2U9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpfX1mdW5jdGlvbiBrKGEpe2EuY3JlYXRlZENhbGxiYWNrJiZhLmNyZWF0ZWRDYWxsYmFjaygpfWZ1bmN0aW9uIGwoYSl7aWYoIWEuc2V0QXR0cmlidXRlLl9wb2x5ZmlsbGVkKXt2YXIgYj1hLnNldEF0dHJpYnV0ZTthLnNldEF0dHJpYnV0ZT1mdW5jdGlvbihhLGMpe20uY2FsbCh0aGlzLGEsYyxiKX07dmFyIGM9YS5yZW1vdmVBdHRyaWJ1dGU7YS5yZW1vdmVBdHRyaWJ1dGU9ZnVuY3Rpb24oYSl7bS5jYWxsKHRoaXMsYSxudWxsLGMpfSxhLnNldEF0dHJpYnV0ZS5fcG9seWZpbGxlZD0hMH19ZnVuY3Rpb24gbShhLGIsYyl7dmFyIGQ9dGhpcy5nZXRBdHRyaWJ1dGUoYSk7Yy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIGU9dGhpcy5nZXRBdHRyaWJ1dGUoYSk7dGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2smJmUhPT1kJiZ0aGlzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhhLGQsZSl9ZnVuY3Rpb24gbihhKXtyZXR1cm4gYT96W2EudG9Mb3dlckNhc2UoKV06dm9pZCAwfWZ1bmN0aW9uIG8oYSxiKXt6W2FdPWJ9ZnVuY3Rpb24gcChhKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZyhhKX19ZnVuY3Rpb24gcShhLGIsYyl7cmV0dXJuIGE9PT1BP3IoYixjKTpDKGEsYil9ZnVuY3Rpb24gcihhLGIpe3ZhciBjPW4oYnx8YSk7aWYoYyl7aWYoYT09Yy50YWcmJmI9PWMuaXMpcmV0dXJuIG5ldyBjLmN0b3I7aWYoIWImJiFjLmlzKXJldHVybiBuZXcgYy5jdG9yfWlmKGIpe3ZhciBkPXIoYSk7cmV0dXJuIGQuc2V0QXR0cmlidXRlKCJpcyIsYiksZH12YXIgZD1CKGEpO3JldHVybiBhLmluZGV4T2YoIi0iKT49MCYmaShkLEhUTUxFbGVtZW50KSxkfWZ1bmN0aW9uIHMoYSl7aWYoIWEuX191cGdyYWRlZF9fJiZhLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKCJpcyIpLGM9bihifHxhLmxvY2FsTmFtZSk7aWYoYyl7aWYoYiYmYy50YWc9PWEubG9jYWxOYW1lKXJldHVybiBoKGEsYyk7aWYoIWImJiFjLmV4dGVuZHMpcmV0dXJuIGgoYSxjKX19fWZ1bmN0aW9uIHQoYil7dmFyIGM9RC5jYWxsKHRoaXMsYik7cmV0dXJuIGEudXBncmFkZUFsbChjKSxjfWF8fChhPXdpbmRvdy5DdXN0b21FbGVtZW50cz17ZmxhZ3M6e319KTt2YXIgdT1hLmZsYWdzLHY9Qm9vbGVhbihkb2N1bWVudC5yZWdpc3RlckVsZW1lbnQpLHc9IXUucmVnaXN0ZXImJnYmJiF3aW5kb3cuU2hhZG93RE9NUG9seWZpbGw7aWYodyl7dmFyIHg9ZnVuY3Rpb24oKXt9O2EucmVnaXN0cnk9e30sYS51cGdyYWRlRWxlbWVudD14LGEud2F0Y2hTaGFkb3c9eCxhLnVwZ3JhZGU9eCxhLnVwZ3JhZGVBbGw9eCxhLnVwZ3JhZGVTdWJ0cmVlPXgsYS5vYnNlcnZlRG9jdW1lbnQ9eCxhLnVwZ3JhZGVEb2N1bWVudD14LGEudXBncmFkZURvY3VtZW50VHJlZT14LGEudGFrZVJlY29yZHM9eCxhLnJlc2VydmVkVGFnTGlzdD1bXX1lbHNle3ZhciB5PVsiYW5ub3RhdGlvbi14bWwiLCJjb2xvci1wcm9maWxlIiwiZm9udC1mYWNlIiwiZm9udC1mYWNlLXNyYyIsImZvbnQtZmFjZS11cmkiLCJmb250LWZhY2UtZm9ybWF0IiwiZm9udC1mYWNlLW5hbWUiLCJtaXNzaW5nLWdseXBoIl0sej17fSxBPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIixCPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQuYmluZChkb2N1bWVudCksQz1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMuYmluZChkb2N1bWVudCksRD1Ob2RlLnByb3RvdHlwZS5jbG9uZU5vZGU7ZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50PWIsZG9jdW1lbnQuY3JlYXRlRWxlbWVudD1yLGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUz1xLE5vZGUucHJvdG90eXBlLmNsb25lTm9kZT10LGEucmVnaXN0cnk9eixhLnVwZ3JhZGU9c312YXIgRTtFPU9iamVjdC5fX3Byb3RvX198fHc/ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYSBpbnN0YW5jZW9mIGJ9OmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWE7Yzspe2lmKGM9PT1iLnByb3RvdHlwZSlyZXR1cm4hMDtjPWMuX19wcm90b19ffXJldHVybiExfSxhLmluc3RhbmNlb2Y9RSxhLnJlc2VydmVkVGFnTGlzdD15LGRvY3VtZW50LnJlZ2lzdGVyPWRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudCxhLmhhc05hdGl2ZT12LGEudXNlTmF0aXZlPXd9KHdpbmRvdy5DdXN0b21FbGVtZW50cyksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtyZXR1cm4ibGluayI9PT1hLmxvY2FsTmFtZSYmYS5nZXRBdHRyaWJ1dGUoInJlbCIpPT09Y312YXIgYz1hLklNUE9SVF9MSU5LX1RZUEUsZD17c2VsZWN0b3JzOlsibGlua1tyZWw9IitjKyJdIl0sbWFwOntsaW5rOiJwYXJzZUxpbmsifSxwYXJzZTpmdW5jdGlvbihhKXtpZighYS5fX3BhcnNlZCl7YS5fX3BhcnNlZD0hMDt2YXIgYj1hLnF1ZXJ5U2VsZWN0b3JBbGwoZC5zZWxlY3RvcnMpO2UoYixmdW5jdGlvbihhKXtkW2QubWFwW2EubG9jYWxOYW1lXV0oYSl9KSxDdXN0b21FbGVtZW50cy51cGdyYWRlRG9jdW1lbnQoYSksQ3VzdG9tRWxlbWVudHMub2JzZXJ2ZURvY3VtZW50KGEpfX0scGFyc2VMaW5rOmZ1bmN0aW9uKGEpe2IoYSkmJnRoaXMucGFyc2VJbXBvcnQoYSl9LHBhcnNlSW1wb3J0OmZ1bmN0aW9uKGEpe2EuaW1wb3J0JiZkLnBhcnNlKGEuaW1wb3J0KX19LGU9QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKTthLnBhcnNlcj1kLGEuSU1QT1JUX0xJTktfVFlQRT1jfSh3aW5kb3cuQ3VzdG9tRWxlbWVudHMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXtDdXN0b21FbGVtZW50cy5wYXJzZXIucGFyc2UoZG9jdW1lbnQpLEN1c3RvbUVsZW1lbnRzLnVwZ3JhZGVEb2N1bWVudChkb2N1bWVudCk7dmFyIGE9d2luZG93LlBsYXRmb3JtJiZQbGF0Zm9ybS5lbmRPZk1pY3JvdGFzaz9QbGF0Zm9ybS5lbmRPZk1pY3JvdGFzazpzZXRUaW1lb3V0O2EoZnVuY3Rpb24oKXtDdXN0b21FbGVtZW50cy5yZWFkeT0hMCxDdXN0b21FbGVtZW50cy5yZWFkeVRpbWU9RGF0ZS5ub3coKSx3aW5kb3cuSFRNTEltcG9ydHMmJihDdXN0b21FbGVtZW50cy5lbGFwc2VkPUN1c3RvbUVsZW1lbnRzLnJlYWR5VGltZS1IVE1MSW1wb3J0cy5yZWFkeVRpbWUpLGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCJXZWJDb21wb25lbnRzUmVhZHkiLHtidWJibGVzOiEwfSkpLHdpbmRvdy5IVE1MSW1wb3J0cyYmKEhUTUxJbXBvcnRzLl9faW1wb3J0c1BhcnNpbmdIb29rPWZ1bmN0aW9uKGEpe0N1c3RvbUVsZW1lbnRzLnBhcnNlci5wYXJzZShhLmltcG9ydCl9KX0pfWlmKCJmdW5jdGlvbiIhPXR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQmJih3aW5kb3cuQ3VzdG9tRXZlbnQ9ZnVuY3Rpb24oYSl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkhUTUxFdmVudHMiKTtyZXR1cm4gYi5pbml0RXZlbnQoYSwhMCwhMCksYn0pLCJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlfHxhLmZsYWdzLmVhZ2VyKWIoKTsKZWxzZSBpZigiaW50ZXJhY3RpdmUiIT09ZG9jdW1lbnQucmVhZHlTdGF0ZXx8d2luZG93LmF0dGFjaEV2ZW50fHx3aW5kb3cuSFRNTEltcG9ydHMmJiF3aW5kb3cuSFRNTEltcG9ydHMucmVhZHkpe3ZhciBjPXdpbmRvdy5IVE1MSW1wb3J0cyYmIUhUTUxJbXBvcnRzLnJlYWR5PyJIVE1MSW1wb3J0c0xvYWRlZCI6IkRPTUNvbnRlbnRMb2FkZWQiO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGMsYil9ZWxzZSBiKCl9KHdpbmRvdy5DdXN0b21FbGVtZW50cyksZnVuY3Rpb24oKXtpZih3aW5kb3cuU2hhZG93RE9NUG9seWZpbGwpe3ZhciBhPVsidXBncmFkZUFsbCIsInVwZ3JhZGVTdWJ0cmVlIiwib2JzZXJ2ZURvY3VtZW50IiwidXBncmFkZURvY3VtZW50Il0sYj17fTthLmZvckVhY2goZnVuY3Rpb24oYSl7YlthXT1DdXN0b21FbGVtZW50c1thXX0pLGEuZm9yRWFjaChmdW5jdGlvbihhKXtDdXN0b21FbGVtZW50c1thXT1mdW5jdGlvbihjKXtyZXR1cm4gYlthXSh3cmFwKGMpKX19KX19KCksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXt0aGlzLnJlZ2V4PWF9dmFyIGM9YS5lbmRPZk1pY3JvdGFzaztiLnByb3RvdHlwZT17ZXh0cmFjdFVybHM6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGMsZCxlPVtdO2M9dGhpcy5yZWdleC5leGVjKGEpOylkPW5ldyBVUkwoY1sxXSxiKSxlLnB1c2goe21hdGNoZWQ6Y1swXSx1cmw6ZC5ocmVmfSk7cmV0dXJuIGV9LHByb2Nlc3M6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuZXh0cmFjdFVybHMoYSxiKTt0aGlzLmZldGNoKGQse30sYyl9LGZldGNoOmZ1bmN0aW9uKGEsYixkKXt2YXIgZT1hLmxlbmd0aDtpZighZSlyZXR1cm4gZChiKTtmb3IodmFyIGYsZyxoLGk9ZnVuY3Rpb24oKXswPT09LS1lJiZkKGIpfSxqPWZ1bmN0aW9uKGEsYyl7dmFyIGQ9Yy5tYXRjaCxlPWQudXJsO2lmKGEpcmV0dXJuIGJbZV09IiIsaSgpO3ZhciBmPWMucmVzcG9uc2V8fGMucmVzcG9uc2VUZXh0O2JbZV09Zix0aGlzLmZldGNoKHRoaXMuZXh0cmFjdFVybHMoZixlKSxiLGkpfSxrPTA7ZT5rO2srKylmPWFba10saD1mLnVybCxiW2hdP2MoaSk6KGc9dGhpcy54aHIoaCxqLHRoaXMpLGcubWF0Y2g9ZixiW2hdPWcpfSx4aHI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4gZC5vcGVuKCJHRVQiLGEsITApLGQuc2VuZCgpLGQub25sb2FkPWZ1bmN0aW9uKCl7Yi5jYWxsKGMsbnVsbCxkKX0sZC5vbmVycm9yPWZ1bmN0aW9uKCl7Yi5jYWxsKGMsbnVsbCxkKX0sZH19LGEuTG9hZGVyPWJ9KHdpbmRvdy5QbGF0Zm9ybSksZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe3RoaXMubG9hZGVyPW5ldyBkKHRoaXMucmVnZXgpfXZhciBjPWEudXJsUmVzb2x2ZXIsZD1hLkxvYWRlcjtiLnByb3RvdHlwZT17cmVnZXg6L0BpbXBvcnRccysoPzp1cmwpP1siJ1woXSooW14nIlwpXSopWyciXCldKjsvZyxyZXNvbHZlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mdW5jdGlvbihkKXtjKHRoaXMuZmxhdHRlbihhLGIsZCkpfS5iaW5kKHRoaXMpO3RoaXMubG9hZGVyLnByb2Nlc3MoYSxiLGQpfSxyZXNvbHZlTm9kZTpmdW5jdGlvbihhLGIpe3ZhciBjPWEudGV4dENvbnRlbnQsZD1hLm93bmVyRG9jdW1lbnQuYmFzZVVSSSxlPWZ1bmN0aW9uKGMpe2EudGV4dENvbnRlbnQ9YyxiKGEpfTt0aGlzLnJlc29sdmUoYyxkLGUpfSxmbGF0dGVuOmZ1bmN0aW9uKGEsYixkKXtmb3IodmFyIGUsZixnLGg9dGhpcy5sb2FkZXIuZXh0cmFjdFVybHMoYSxiKSxpPTA7aTxoLmxlbmd0aDtpKyspZT1oW2ldLGY9ZS51cmwsZz1jLnJlc29sdmVDc3NUZXh0KGRbZl0sZiksZz10aGlzLmZsYXR0ZW4oZyxiLGQpLGE9YS5yZXBsYWNlKGUubWF0Y2hlZCxnKTtyZXR1cm4gYX0sbG9hZFN0eWxlczpmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXtlKyssZT09PWYmJmImJmIoKX1mb3IodmFyIGQsZT0wLGY9YS5sZW5ndGgsZz0wO2Y+ZyYmKGQ9YVtnXSk7ZysrKXRoaXMucmVzb2x2ZU5vZGUoZCxjKX19O3ZhciBlPW5ldyBiO2Euc3R5bGVSZXNvbHZlcj1lfSh3aW5kb3cuUGxhdGZvcm0pLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGEoYSl7Zm9yKDthLnBhcmVudE5vZGU7KWE9YS5wYXJlbnROb2RlO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBhLmdldEVsZW1lbnRCeUlkP2E6bnVsbH1mdW5jdGlvbiBiKGEsYixjKXt2YXIgZD1hLmJpbmRpbmdzXztyZXR1cm4gZHx8KGQ9YS5iaW5kaW5nc189e30pLGRbYl0mJmNbYl0uY2xvc2UoKSxkW2JdPWN9ZnVuY3Rpb24gYyhhLGIsYyl7cmV0dXJuIGN9ZnVuY3Rpb24gZChhKXtyZXR1cm4gbnVsbD09YT8iIjphfWZ1bmN0aW9uIGUoYSxiKXthLmRhdGE9ZChiKX1mdW5jdGlvbiBmKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gZShhLGIpfX1mdW5jdGlvbiBnKGEsYixjLGUpe3JldHVybiBjP3ZvaWQoZT9hLnNldEF0dHJpYnV0ZShiLCIiKTphLnJlbW92ZUF0dHJpYnV0ZShiKSk6dm9pZCBhLnNldEF0dHJpYnV0ZShiLGQoZSkpfWZ1bmN0aW9uIGgoYSxiLGMpe3JldHVybiBmdW5jdGlvbihkKXtnKGEsYixjLGQpfX1mdW5jdGlvbiBpKGEpe3N3aXRjaChhLnR5cGUpe2Nhc2UiY2hlY2tib3giOnJldHVybiB1O2Nhc2UicmFkaW8iOmNhc2Uic2VsZWN0LW11bHRpcGxlIjpjYXNlInNlbGVjdC1vbmUiOnJldHVybiJjaGFuZ2UiO2Nhc2UicmFuZ2UiOmlmKC9UcmlkZW50fE1TSUUvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpcmV0dXJuImNoYW5nZSI7ZGVmYXVsdDpyZXR1cm4iaW5wdXQifX1mdW5jdGlvbiBqKGEsYixjLGUpe2FbYl09KGV8fGQpKGMpfWZ1bmN0aW9uIGsoYSxiLGMpe3JldHVybiBmdW5jdGlvbihkKXtyZXR1cm4gaihhLGIsZCxjKX19ZnVuY3Rpb24gbCgpe31mdW5jdGlvbiBtKGEsYixjLGQpe2Z1bmN0aW9uIGUoKXtjLnNldFZhbHVlKGFbYl0pLGMuZGlzY2FyZENoYW5nZXMoKSwoZHx8bCkoYSksUGxhdGZvcm0ucGVyZm9ybU1pY3JvdGFza0NoZWNrcG9pbnQoKX12YXIgZj1pKGEpO3JldHVybiBhLmFkZEV2ZW50TGlzdGVuZXIoZixlKSx7Y2xvc2U6ZnVuY3Rpb24oKXthLnJlbW92ZUV2ZW50TGlzdGVuZXIoZixlKSxjLmNsb3NlKCl9LG9ic2VydmFibGVfOmN9fWZ1bmN0aW9uIG4oYSl7cmV0dXJuIEJvb2xlYW4oYSl9ZnVuY3Rpb24gbyhiKXtpZihiLmZvcm0pcmV0dXJuIHMoYi5mb3JtLmVsZW1lbnRzLGZ1bmN0aW9uKGEpe3JldHVybiBhIT1iJiYiSU5QVVQiPT1hLnRhZ05hbWUmJiJyYWRpbyI9PWEudHlwZSYmYS5uYW1lPT1iLm5hbWV9KTt2YXIgYz1hKGIpO2lmKCFjKXJldHVybltdO3ZhciBkPWMucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT0icmFkaW8iXVtuYW1lPSInK2IubmFtZSsnIl0nKTtyZXR1cm4gcyhkLGZ1bmN0aW9uKGEpe3JldHVybiBhIT1iJiYhYS5mb3JtfSl9ZnVuY3Rpb24gcChhKXsiSU5QVVQiPT09YS50YWdOYW1lJiYicmFkaW8iPT09YS50eXBlJiZvKGEpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5iaW5kaW5nc18uY2hlY2tlZDtiJiZiLm9ic2VydmFibGVfLnNldFZhbHVlKCExKX0pfWZ1bmN0aW9uIHEoYSxiKXt2YXIgYyxlLGYsZz1hLnBhcmVudE5vZGU7ZyBpbnN0YW5jZW9mIEhUTUxTZWxlY3RFbGVtZW50JiZnLmJpbmRpbmdzXyYmZy5iaW5kaW5nc18udmFsdWUmJihjPWcsZT1jLmJpbmRpbmdzXy52YWx1ZSxmPWMudmFsdWUpLGEudmFsdWU9ZChiKSxjJiZjLnZhbHVlIT1mJiYoZS5vYnNlcnZhYmxlXy5zZXRWYWx1ZShjLnZhbHVlKSxlLm9ic2VydmFibGVfLmRpc2NhcmRDaGFuZ2VzKCksUGxhdGZvcm0ucGVyZm9ybU1pY3JvdGFza0NoZWNrcG9pbnQoKSl9ZnVuY3Rpb24gcihhKXtyZXR1cm4gZnVuY3Rpb24oYil7cShhLGIpfX12YXIgcz1BcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwuYmluZChBcnJheS5wcm90b3R5cGUuZmlsdGVyKTtOb2RlLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEsYil7Y29uc29sZS5lcnJvcigiVW5oYW5kbGVkIGJpbmRpbmcgdG8gTm9kZTogIix0aGlzLGEsYil9LE5vZGUucHJvdG90eXBlLmJpbmRGaW5pc2hlZD1mdW5jdGlvbigpe307dmFyIHQ9YztPYmplY3QuZGVmaW5lUHJvcGVydHkoUGxhdGZvcm0sImVuYWJsZUJpbmRpbmdzUmVmbGVjdGlvbiIse2dldDpmdW5jdGlvbigpe3JldHVybiB0PT09Yn0sc2V0OmZ1bmN0aW9uKGEpe3JldHVybiB0PWE/YjpjLGF9LGNvbmZpZ3VyYWJsZTohMH0pLFRleHQucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSxiLGMpe2lmKCJ0ZXh0Q29udGVudCIhPT1hKXJldHVybiBOb2RlLnByb3RvdHlwZS5iaW5kLmNhbGwodGhpcyxhLGIsYyk7aWYoYylyZXR1cm4gZSh0aGlzLGIpO3ZhciBkPWI7cmV0dXJuIGUodGhpcyxkLm9wZW4oZih0aGlzKSkpLHQodGhpcyxhLGQpfSxFbGVtZW50LnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD0iPyI9PWFbYS5sZW5ndGgtMV07aWYoZCYmKHRoaXMucmVtb3ZlQXR0cmlidXRlKGEpLGE9YS5zbGljZSgwLC0xKSksYylyZXR1cm4gZyh0aGlzLGEsZCxiKTt2YXIgZT1iO3JldHVybiBnKHRoaXMsYSxkLGUub3BlbihoKHRoaXMsYSxkKSkpLHQodGhpcyxhLGUpfTt2YXIgdTshZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxiPWEuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSk7Yi5zZXRBdHRyaWJ1dGUoInR5cGUiLCJjaGVja2JveCIpO3ZhciBjLGQ9MDtiLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIixmdW5jdGlvbigpe2QrKyxjPWN8fCJjbGljayJ9KSxiLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsZnVuY3Rpb24oKXtkKyssYz1jfHwiY2hhbmdlIn0pO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJNb3VzZUV2ZW50Iik7ZS5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCwwLDAsITEsITEsITEsITEsMCxudWxsKSxiLmRpc3BhdGNoRXZlbnQoZSksdT0xPT1kPyJjaGFuZ2UiOmN9KCksSFRNTElucHV0RWxlbWVudC5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihhLGMsZSl7aWYoInZhbHVlIiE9PWEmJiJjaGVja2VkIiE9PWEpcmV0dXJuIEhUTUxFbGVtZW50LnByb3RvdHlwZS5iaW5kLmNhbGwodGhpcyxhLGMsZSk7dGhpcy5yZW1vdmVBdHRyaWJ1dGUoYSk7dmFyIGY9ImNoZWNrZWQiPT1hP246ZCxnPSJjaGVja2VkIj09YT9wOmw7aWYoZSlyZXR1cm4gaih0aGlzLGEsYyxmKTt2YXIgaD1jLGk9bSh0aGlzLGEsaCxnKTtyZXR1cm4gaih0aGlzLGEsaC5vcGVuKGsodGhpcyxhLGYpKSxmKSxiKHRoaXMsYSxpKX0sSFRNTFRleHRBcmVhRWxlbWVudC5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihhLGIsYyl7aWYoInZhbHVlIiE9PWEpcmV0dXJuIEhUTUxFbGVtZW50LnByb3RvdHlwZS5iaW5kLmNhbGwodGhpcyxhLGIsYyk7aWYodGhpcy5yZW1vdmVBdHRyaWJ1dGUoInZhbHVlIiksYylyZXR1cm4gaih0aGlzLCJ2YWx1ZSIsYik7dmFyIGU9YixmPW0odGhpcywidmFsdWUiLGUpO3JldHVybiBqKHRoaXMsInZhbHVlIixlLm9wZW4oayh0aGlzLCJ2YWx1ZSIsZCkpKSx0KHRoaXMsYSxmKX0sSFRNTE9wdGlvbkVsZW1lbnQucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24oYSxiLGMpe2lmKCJ2YWx1ZSIhPT1hKXJldHVybiBIVE1MRWxlbWVudC5wcm90b3R5cGUuYmluZC5jYWxsKHRoaXMsYSxiLGMpO2lmKHRoaXMucmVtb3ZlQXR0cmlidXRlKCJ2YWx1ZSIpLGMpcmV0dXJuIHEodGhpcyxiKTt2YXIgZD1iLGU9bSh0aGlzLCJ2YWx1ZSIsZCk7cmV0dXJuIHEodGhpcyxkLm9wZW4ocih0aGlzKSkpLHQodGhpcyxhLGUpfSxIVE1MU2VsZWN0RWxlbWVudC5wcm90b3R5cGUuYmluZD1mdW5jdGlvbihhLGMsZCl7aWYoInNlbGVjdGVkaW5kZXgiPT09YSYmKGE9InNlbGVjdGVkSW5kZXgiKSwic2VsZWN0ZWRJbmRleCIhPT1hJiYidmFsdWUiIT09YSlyZXR1cm4gSFRNTEVsZW1lbnQucHJvdG90eXBlLmJpbmQuY2FsbCh0aGlzLGEsYyxkKTtpZih0aGlzLnJlbW92ZUF0dHJpYnV0ZShhKSxkKXJldHVybiBqKHRoaXMsYSxjKTt2YXIgZT1jLGY9bSh0aGlzLGEsZSk7cmV0dXJuIGoodGhpcyxhLGUub3BlbihrKHRoaXMsYSkpKSxiKHRoaXMsYSxmKX19KHRoaXMpLGZ1bmN0aW9uKGEpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBiKGEpe2lmKCFhKXRocm93IG5ldyBFcnJvcigiQXNzZXJ0aW9uIGZhaWxlZCIpfWZ1bmN0aW9uIGMoYSl7Zm9yKHZhciBiO2I9YS5wYXJlbnROb2RlOylhPWI7cmV0dXJuIGF9ZnVuY3Rpb24gZChhLGIpe2lmKGIpe2Zvcih2YXIgZCxlPSIjIitiOyFkJiYoYT1jKGEpLGEucHJvdG9Db250ZW50Xz9kPWEucHJvdG9Db250ZW50Xy5xdWVyeVNlbGVjdG9yKGUpOmEuZ2V0RWxlbWVudEJ5SWQmJihkPWEuZ2V0RWxlbWVudEJ5SWQoYikpLCFkJiZhLnRlbXBsYXRlQ3JlYXRvcl8pOylhPWEudGVtcGxhdGVDcmVhdG9yXztyZXR1cm4gZH19ZnVuY3Rpb24gZShhKXtyZXR1cm4idGVtcGxhdGUiPT1hLnRhZ05hbWUmJiJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI9PWEubmFtZXNwYWNlVVJJfWZ1bmN0aW9uIGYoYSl7cmV0dXJuIlRFTVBMQVRFIj09YS50YWdOYW1lJiYiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI9PWEubmFtZXNwYWNlVVJJfWZ1bmN0aW9uIGcoYSl7cmV0dXJuIEJvb2xlYW4oTFthLnRhZ05hbWVdJiZhLmhhc0F0dHJpYnV0ZSgidGVtcGxhdGUiKSl9ZnVuY3Rpb24gaChhKXtyZXR1cm4gdm9pZCAwPT09YS5pc1RlbXBsYXRlXyYmKGEuaXNUZW1wbGF0ZV89IlRFTVBMQVRFIj09YS50YWdOYW1lfHxnKGEpKSxhLmlzVGVtcGxhdGVffWZ1bmN0aW9uIGkoYSxiKXt2YXIgYz1hLnF1ZXJ5U2VsZWN0b3JBbGwoTik7aChhKSYmYihhKSxHKGMsYil9ZnVuY3Rpb24gaihhKXtmdW5jdGlvbiBiKGEpe0hUTUxUZW1wbGF0ZUVsZW1lbnQuZGVjb3JhdGUoYSl8fGooYS5jb250ZW50KX1pKGEsYil9ZnVuY3Rpb24gayhhLGIpe09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGIpLmZvckVhY2goZnVuY3Rpb24oYyl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYyxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGIsYykpfSl9ZnVuY3Rpb24gbChhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQ7aWYoIWIuZGVmYXVsdFZpZXcpcmV0dXJuIGI7dmFyIGM9Yi50ZW1wbGF0ZUNvbnRlbnRzT3duZXJfO2lmKCFjKXtmb3IoYz1iLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIik7Yy5sYXN0Q2hpbGQ7KWMucmVtb3ZlQ2hpbGQoYy5sYXN0Q2hpbGQpO2IudGVtcGxhdGVDb250ZW50c093bmVyXz1jfXJldHVybiBjfWZ1bmN0aW9uIG0oYSl7aWYoIWEuc3RhZ2luZ0RvY3VtZW50Xyl7dmFyIGI9YS5vd25lckRvY3VtZW50O2lmKCFiLnN0YWdpbmdEb2N1bWVudF8pe2Iuc3RhZ2luZ0RvY3VtZW50Xz1iLmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgiIiksYi5zdGFnaW5nRG9jdW1lbnRfLmlzU3RhZ2luZ0RvY3VtZW50PSEwO3ZhciBjPWIuc3RhZ2luZ0RvY3VtZW50Xy5jcmVhdGVFbGVtZW50KCJiYXNlIik7Yy5ocmVmPWRvY3VtZW50LmJhc2VVUkksYi5zdGFnaW5nRG9jdW1lbnRfLmhlYWQuYXBwZW5kQ2hpbGQoYyksYi5zdGFnaW5nRG9jdW1lbnRfLnN0YWdpbmdEb2N1bWVudF89Yi5zdGFnaW5nRG9jdW1lbnRffWEuc3RhZ2luZ0RvY3VtZW50Xz1iLnN0YWdpbmdEb2N1bWVudF99cmV0dXJuIGEuc3RhZ2luZ0RvY3VtZW50X31mdW5jdGlvbiBuKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZW1wbGF0ZSIpO2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixhKTtmb3IodmFyIGM9YS5hdHRyaWJ1dGVzLGQ9Yy5sZW5ndGg7ZC0tPjA7KXt2YXIgZT1jW2RdO0tbZS5uYW1lXSYmKCJ0ZW1wbGF0ZSIhPT1lLm5hbWUmJmIuc2V0QXR0cmlidXRlKGUubmFtZSxlLnZhbHVlKSxhLnJlbW92ZUF0dHJpYnV0ZShlLm5hbWUpKX1yZXR1cm4gYn1mdW5jdGlvbiBvKGEpe3ZhciBiPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZW1wbGF0ZSIpO2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixhKTtmb3IodmFyIGM9YS5hdHRyaWJ1dGVzLGQ9Yy5sZW5ndGg7ZC0tPjA7KXt2YXIgZT1jW2RdO2Iuc2V0QXR0cmlidXRlKGUubmFtZSxlLnZhbHVlKSxhLnJlbW92ZUF0dHJpYnV0ZShlLm5hbWUpfXJldHVybiBhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYSksYn1mdW5jdGlvbiBwKGEsYixjKXt2YXIgZD1hLmNvbnRlbnQ7aWYoYylyZXR1cm4gdm9pZCBkLmFwcGVuZENoaWxkKGIpO2Zvcih2YXIgZTtlPWIuZmlyc3RDaGlsZDspZC5hcHBlbmRDaGlsZChlKX1mdW5jdGlvbiBxKGEpe1A/YS5fX3Byb3RvX189SFRNTFRlbXBsYXRlRWxlbWVudC5wcm90b3R5cGU6ayhhLEhUTUxUZW1wbGF0ZUVsZW1lbnQucHJvdG90eXBlKX1mdW5jdGlvbiByKGEpe2Euc2V0TW9kZWxGbl98fChhLnNldE1vZGVsRm5fPWZ1bmN0aW9uKCl7YS5zZXRNb2RlbEZuU2NoZWR1bGVkXz0hMTt2YXIgYj16KGEsYS5kZWxlZ2F0ZV8mJmEuZGVsZWdhdGVfLnByZXBhcmVCaW5kaW5nKTt3KGEsYixhLm1vZGVsXyl9KSxhLnNldE1vZGVsRm5TY2hlZHVsZWRffHwoYS5zZXRNb2RlbEZuU2NoZWR1bGVkXz0hMCxPYnNlcnZlci5ydW5FT01fKGEuc2V0TW9kZWxGbl8pKX1mdW5jdGlvbiBzKGEsYixjLGQpe2lmKGEmJmEubGVuZ3RoKXtmb3IodmFyIGUsZj1hLmxlbmd0aCxnPTAsaD0wLGk9MCxqPSEwO2Y+aDspe3ZhciBnPWEuaW5kZXhPZigie3siLGgpLGs9YS5pbmRleE9mKCJbWyIsaCksbD0hMSxtPSJ9fSI7aWYoaz49MCYmKDA+Z3x8Zz5rKSYmKGc9ayxsPSEwLG09Il1dIiksaT0wPmc/LTE6YS5pbmRleE9mKG0sZysyKSwwPmkpe2lmKCFlKXJldHVybjtlLnB1c2goYS5zbGljZShoKSk7YnJlYWt9ZT1lfHxbXSxlLnB1c2goYS5zbGljZShoLGcpKTt2YXIgbj1hLnNsaWNlKGcrMixpKS50cmltKCk7ZS5wdXNoKGwpLGo9aiYmbDt2YXIgbz1kJiZkKG4sYixjKTtlLnB1c2gobnVsbD09bz9QYXRoLmdldChuKTpudWxsKSxlLnB1c2gobyksaD1pKzJ9cmV0dXJuIGg9PT1mJiZlLnB1c2goIiIpLGUuaGFzT25lUGF0aD01PT09ZS5sZW5ndGgsZS5pc1NpbXBsZVBhdGg9ZS5oYXNPbmVQYXRoJiYiIj09ZVswXSYmIiI9PWVbNF0sZS5vbmx5T25lVGltZT1qLGUuY29tYmluYXRvcj1mdW5jdGlvbihhKXtmb3IodmFyIGI9ZVswXSxjPTE7YzxlLmxlbmd0aDtjKz00KXt2YXIgZD1lLmhhc09uZVBhdGg/YTphWyhjLTEpLzRdO3ZvaWQgMCE9PWQmJihiKz1kKSxiKz1lW2MrM119cmV0dXJuIGJ9LGV9fWZ1bmN0aW9uIHQoYSxiLGMsZCl7aWYoYi5oYXNPbmVQYXRoKXt2YXIgZT1iWzNdLGY9ZT9lKGQsYywhMCk6YlsyXS5nZXRWYWx1ZUZyb20oZCk7cmV0dXJuIGIuaXNTaW1wbGVQYXRoP2Y6Yi5jb21iaW5hdG9yKGYpfWZvcih2YXIgZz1bXSxoPTE7aDxiLmxlbmd0aDtoKz00KXt2YXIgZT1iW2grMl07Z1soaC0xKS80XT1lP2UoZCxjKTpiW2grMV0uZ2V0VmFsdWVGcm9tKGQpfXJldHVybiBiLmNvbWJpbmF0b3IoZyl9ZnVuY3Rpb24gdShhLGIsYyxkKXt2YXIgZT1iWzNdLGY9ZT9lKGQsYywhMSk6bmV3IFBhdGhPYnNlcnZlcihkLGJbMl0pO3JldHVybiBiLmlzU2ltcGxlUGF0aD9mOm5ldyBPYnNlcnZlclRyYW5zZm9ybShmLGIuY29tYmluYXRvcil9ZnVuY3Rpb24gdihhLGIsYyxkKXtpZihiLm9ubHlPbmVUaW1lKXJldHVybiB0KGEsYixjLGQpO2lmKGIuaGFzT25lUGF0aClyZXR1cm4gdShhLGIsYyxkKTtmb3IodmFyIGU9bmV3IENvbXBvdW5kT2JzZXJ2ZXIsZj0xO2Y8Yi5sZW5ndGg7Zis9NCl7dmFyIGc9YltmXSxoPWJbZisyXTtpZihoKXt2YXIgaT1oKGQsYyxnKTtnP2UuYWRkUGF0aChpKTplLmFkZE9ic2VydmVyKGkpfWVsc2V7dmFyIGo9YltmKzFdO2c/ZS5hZGRQYXRoKGouZ2V0VmFsdWVGcm9tKGQpKTplLmFkZFBhdGgoZCxqKX19cmV0dXJuIG5ldyBPYnNlcnZlclRyYW5zZm9ybShlLGIuY29tYmluYXRvcil9ZnVuY3Rpb24gdyhhLGIsYyxkKXtmb3IodmFyIGU9MDtlPGIubGVuZ3RoO2UrPTIpe3ZhciBmPWJbZV0sZz1iW2UrMV0saD12KGYsZyxhLGMpLGk9YS5iaW5kKGYsaCxnLm9ubHlPbmVUaW1lKTtpJiZkJiZkLnB1c2goaSl9aWYoYS5iaW5kRmluaXNoZWQoKSxiLmlzVGVtcGxhdGUpe2EubW9kZWxfPWM7dmFyIGo9YS5wcm9jZXNzQmluZGluZ0RpcmVjdGl2ZXNfKGIpO2QmJmomJmQucHVzaChqKX19ZnVuY3Rpb24geChhLGIsYyl7dmFyIGQ9YS5nZXRBdHRyaWJ1dGUoYik7cmV0dXJuIHMoIiI9PWQ/Int7fX0iOmQsYixhLGMpfWZ1bmN0aW9uIHkoYSxjKXtiKGEpO2Zvcih2YXIgZD1bXSxlPTA7ZTxhLmF0dHJpYnV0ZXMubGVuZ3RoO2UrKyl7Zm9yKHZhciBmPWEuYXR0cmlidXRlc1tlXSxnPWYubmFtZSxpPWYudmFsdWU7Il8iPT09Z1swXTspZz1nLnN1YnN0cmluZygxKTtpZighaChhKXx8ZyE9PUomJmchPT1IJiZnIT09SSl7dmFyIGo9cyhpLGcsYSxjKTtqJiZkLnB1c2goZyxqKX19cmV0dXJuIGgoYSkmJihkLmlzVGVtcGxhdGU9ITAsZC5pZj14KGEsSixjKSxkLmJpbmQ9eChhLEgsYyksZC5yZXBlYXQ9eChhLEksYyksIWQuaWZ8fGQuYmluZHx8ZC5yZXBlYXR8fChkLmJpbmQ9cygie3t9fSIsSCxhLGMpKSksZH1mdW5jdGlvbiB6KGEsYil7aWYoYS5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFKXJldHVybiB5KGEsYik7aWYoYS5ub2RlVHlwZT09PU5vZGUuVEVYVF9OT0RFKXt2YXIgYz1zKGEuZGF0YSwidGV4dENvbnRlbnQiLGEsYik7aWYoYylyZXR1cm5bInRleHRDb250ZW50IixjXX1yZXR1cm5bXX1mdW5jdGlvbiBBKGEsYixjLGQsZSxmLGcpe2Zvcih2YXIgaD1iLmFwcGVuZENoaWxkKGMuaW1wb3J0Tm9kZShhLCExKSksaT0wLGo9YS5maXJzdENoaWxkO2o7aj1qLm5leHRTaWJsaW5nKUEoaixoLGMsZC5jaGlsZHJlbltpKytdLGUsZixnKTtyZXR1cm4gZC5pc1RlbXBsYXRlJiYoSFRNTFRlbXBsYXRlRWxlbWVudC5kZWNvcmF0ZShoLGEpLGYmJmguc2V0RGVsZWdhdGVfKGYpKSx3KGgsZCxlLGcpLGh9ZnVuY3Rpb24gQihhLGIpe3ZhciBjPXooYSxiKTtjLmNoaWxkcmVuPXt9O2Zvcih2YXIgZD0wLGU9YS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWMuY2hpbGRyZW5bZCsrXT1CKGUsYik7cmV0dXJuIGN9ZnVuY3Rpb24gQyhhKXt2YXIgYj1hLmlkXztyZXR1cm4gYnx8KGI9YS5pZF89UysrKSxifWZ1bmN0aW9uIEQoYSxiKXt2YXIgYz1DKGEpO2lmKGIpe3ZhciBkPWIuYmluZGluZ01hcHNbY107cmV0dXJuIGR8fChkPWIuYmluZGluZ01hcHNbY109QihhLGIucHJlcGFyZUJpbmRpbmcpfHxbXSksZH12YXIgZD1hLmJpbmRpbmdNYXBfO3JldHVybiBkfHwoZD1hLmJpbmRpbmdNYXBfPUIoYSx2b2lkIDApfHxbXSksZH1mdW5jdGlvbiBFKGEpe3RoaXMuY2xvc2VkPSExLHRoaXMudGVtcGxhdGVFbGVtZW50Xz1hLHRoaXMuaW5zdGFuY2VzPVtdLHRoaXMuZGVwcz12b2lkIDAsdGhpcy5pdGVyYXRlZFZhbHVlPVtdLHRoaXMucHJlc2VudFZhbHVlPXZvaWQgMCx0aGlzLmFycmF5T2JzZXJ2ZXI9dm9pZCAwfXZhciBGLEc9QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbC5iaW5kKEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKTthLk1hcCYmImZ1bmN0aW9uIj09dHlwZW9mIGEuTWFwLnByb3RvdHlwZS5mb3JFYWNoP0Y9YS5NYXA6KEY9ZnVuY3Rpb24oKXt0aGlzLmtleXM9W10sdGhpcy52YWx1ZXM9W119LEYucHJvdG90eXBlPXtzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmtleXMuaW5kZXhPZihhKTswPmM/KHRoaXMua2V5cy5wdXNoKGEpLHRoaXMudmFsdWVzLnB1c2goYikpOnRoaXMudmFsdWVzW2NdPWJ9LGdldDpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmtleXMuaW5kZXhPZihhKTtpZighKDA+YikpcmV0dXJuIHRoaXMudmFsdWVzW2JdfSwiZGVsZXRlIjpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmtleXMuaW5kZXhPZihhKTtyZXR1cm4gMD5iPyExOih0aGlzLmtleXMuc3BsaWNlKGIsMSksdGhpcy52YWx1ZXMuc3BsaWNlKGIsMSksITApfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7Yzx0aGlzLmtleXMubGVuZ3RoO2MrKylhLmNhbGwoYnx8dGhpcyx0aGlzLnZhbHVlc1tjXSx0aGlzLmtleXNbY10sdGhpcyl9fSk7ImZ1bmN0aW9uIiE9dHlwZW9mIGRvY3VtZW50LmNvbnRhaW5zJiYoRG9jdW1lbnQucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uKGEpe3JldHVybiBhPT09dGhpc3x8YS5wYXJlbnROb2RlPT09dGhpcz8hMDp0aGlzLmRvY3VtZW50RWxlbWVudC5jb250YWlucyhhKX0pO3ZhciBIPSJiaW5kIixJPSJyZXBlYXQiLEo9ImlmIixLPXt0ZW1wbGF0ZTohMCxyZXBlYXQ6ITAsYmluZDohMCxyZWY6ITB9LEw9e1RIRUFEOiEwLFRCT0RZOiEwLFRGT09UOiEwLFRIOiEwLFRSOiEwLFREOiEwLENPTEdST1VQOiEwLENPTDohMCxDQVBUSU9OOiEwLE9QVElPTjohMCxPUFRHUk9VUDohMH0sTT0idW5kZWZpbmVkIiE9dHlwZW9mIEhUTUxUZW1wbGF0ZUVsZW1lbnQ7TSYmIWZ1bmN0aW9uKCl7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGVtcGxhdGUiKSxiPWEuY29udGVudC5vd25lckRvY3VtZW50LGM9Yi5hcHBlbmRDaGlsZChiLmNyZWF0ZUVsZW1lbnQoImh0bWwiKSksZD1jLmFwcGVuZENoaWxkKGIuY3JlYXRlRWxlbWVudCgiaGVhZCIpKSxlPWIuY3JlYXRlRWxlbWVudCgiYmFzZSIpO2UuaHJlZj1kb2N1bWVudC5iYXNlVVJJLGQuYXBwZW5kQ2hpbGQoZSl9KCk7dmFyIE49InRlbXBsYXRlLCAiK09iamVjdC5rZXlzKEwpLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYS50b0xvd2VyQ2FzZSgpKyJbdGVtcGxhdGVdIn0pLmpvaW4oIiwgIik7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZnVuY3Rpb24oKXtqKGRvY3VtZW50KSxQbGF0Zm9ybS5wZXJmb3JtTWljcm90YXNrQ2hlY2twb2ludCgpfSwhMSksTXx8KGEuSFRNTFRlbXBsYXRlRWxlbWVudD1mdW5jdGlvbigpe3Rocm93IFR5cGVFcnJvcigiSWxsZWdhbCBjb25zdHJ1Y3RvciIpfSk7dmFyIE8sUD0iX19wcm90b19fImlue307ImZ1bmN0aW9uIj09dHlwZW9mIE11dGF0aW9uT2JzZXJ2ZXImJihPPW5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKWFbYl0udGFyZ2V0LnJlZkNoYW5nZWRfKCl9KSksSFRNTFRlbXBsYXRlRWxlbWVudC5kZWNvcmF0ZT1mdW5jdGlvbihhLGMpe2lmKGEudGVtcGxhdGVJc0RlY29yYXRlZF8pcmV0dXJuITE7dmFyIGQ9YTtkLnRlbXBsYXRlSXNEZWNvcmF0ZWRfPSEwO3ZhciBoPWYoZCkmJk0saT1oLGs9IWgsbT0hMTtpZihofHwoZyhkKT8oYighYyksZD1uKGEpLGQudGVtcGxhdGVJc0RlY29yYXRlZF89ITAsaD1NLG09ITApOmUoZCkmJihkPW8oYSksZC50ZW1wbGF0ZUlzRGVjb3JhdGVkXz0hMCxoPU0pKSwhaCl7cShkKTt2YXIgcj1sKGQpO2QuY29udGVudF89ci5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCl9cmV0dXJuIGM/ZC5pbnN0YW5jZVJlZl89YzprP3AoZCxhLG0pOmkmJmooZC5jb250ZW50KSwhMH0sSFRNTFRlbXBsYXRlRWxlbWVudC5ib290c3RyYXA9ajt2YXIgUT1hLkhUTUxVbmtub3duRWxlbWVudHx8SFRNTEVsZW1lbnQsUj17Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29udGVudF99LGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfTtNfHwoSFRNTFRlbXBsYXRlRWxlbWVudC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShRLnByb3RvdHlwZSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEhUTUxUZW1wbGF0ZUVsZW1lbnQucHJvdG90eXBlLCJjb250ZW50IixSKSksayhIVE1MVGVtcGxhdGVFbGVtZW50LnByb3RvdHlwZSx7YmluZDpmdW5jdGlvbihhLGIsYyl7aWYoInJlZiIhPWEpcmV0dXJuIEVsZW1lbnQucHJvdG90eXBlLmJpbmQuY2FsbCh0aGlzLGEsYixjKTt2YXIgZD10aGlzLGU9Yz9iOmIub3BlbihmdW5jdGlvbihhKXtkLnNldEF0dHJpYnV0ZSgicmVmIixhKSxkLnJlZkNoYW5nZWRfKCl9KTtyZXR1cm4gdGhpcy5zZXRBdHRyaWJ1dGUoInJlZiIsZSksdGhpcy5yZWZDaGFuZ2VkXygpLGM/dm9pZCAwOih0aGlzLmJpbmRpbmdzXz90aGlzLmJpbmRpbmdzXy5yZWY9Yjp0aGlzLmJpbmRpbmdzXz17cmVmOmJ9LGIpfSxwcm9jZXNzQmluZGluZ0RpcmVjdGl2ZXNfOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLml0ZXJhdG9yXyYmdGhpcy5pdGVyYXRvcl8uY2xvc2VEZXBzKCksYS5pZnx8YS5iaW5kfHxhLnJlcGVhdD8odGhpcy5pdGVyYXRvcl98fCh0aGlzLml0ZXJhdG9yXz1uZXcgRSh0aGlzKSksdGhpcy5pdGVyYXRvcl8udXBkYXRlRGVwZW5kZW5jaWVzKGEsdGhpcy5tb2RlbF8pLE8mJk8ub2JzZXJ2ZSh0aGlzLHthdHRyaWJ1dGVzOiEwLGF0dHJpYnV0ZUZpbHRlcjpbInJlZiJdfSksdGhpcy5pdGVyYXRvcl8pOnZvaWQodGhpcy5pdGVyYXRvcl8mJih0aGlzLml0ZXJhdG9yXy5jbG9zZSgpLHRoaXMuaXRlcmF0b3JfPXZvaWQgMCkpfSxjcmVhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7Yj9jPXRoaXMubmV3RGVsZWdhdGVfKGIpOmN8fChjPXRoaXMuZGVsZWdhdGVfKSx0aGlzLnJlZkNvbnRlbnRffHwodGhpcy5yZWZDb250ZW50Xz10aGlzLnJlZl8uY29udGVudCk7dmFyIGQ9dGhpcy5yZWZDb250ZW50XztpZihudWxsPT09ZC5maXJzdENoaWxkKXJldHVybiBUO3ZhciBlPUQoZCxjKSxmPW0odGhpcyksZz1mLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtnLnRlbXBsYXRlQ3JlYXRvcl89dGhpcyxnLnByb3RvQ29udGVudF89ZCxnLmJpbmRpbmdzXz1bXSxnLnRlcm1pbmF0b3JfPW51bGw7Zm9yKHZhciBoPWcudGVtcGxhdGVJbnN0YW5jZV89e2ZpcnN0Tm9kZTpudWxsLGxhc3ROb2RlOm51bGwsbW9kZWw6YX0saT0wLGo9ITEsaz1kLmZpcnN0Q2hpbGQ7aztrPWsubmV4dFNpYmxpbmcpe251bGw9PT1rLm5leHRTaWJsaW5nJiYoaj0hMCk7dmFyIGw9QShrLGcsZixlLmNoaWxkcmVuW2krK10sYSxjLGcuYmluZGluZ3NfKTtsLnRlbXBsYXRlSW5zdGFuY2VfPWgsaiYmKGcudGVybWluYXRvcl89bCl9cmV0dXJuIGguZmlyc3ROb2RlPWcuZmlyc3RDaGlsZCxoLmxhc3ROb2RlPWcubGFzdENoaWxkLGcudGVtcGxhdGVDcmVhdG9yXz12b2lkIDAsZy5wcm90b0NvbnRlbnRfPXZvaWQgMCxnfSxnZXQgbW9kZWwoKXtyZXR1cm4gdGhpcy5tb2RlbF99LHNldCBtb2RlbChhKXt0aGlzLm1vZGVsXz1hLHIodGhpcyl9LGdldCBiaW5kaW5nRGVsZWdhdGUoKXtyZXR1cm4gdGhpcy5kZWxlZ2F0ZV8mJnRoaXMuZGVsZWdhdGVfLnJhd30scmVmQ2hhbmdlZF86ZnVuY3Rpb24oKXt0aGlzLml0ZXJhdG9yXyYmdGhpcy5yZWZDb250ZW50XyE9PXRoaXMucmVmXy5jb250ZW50JiYodGhpcy5yZWZDb250ZW50Xz12b2lkIDAsdGhpcy5pdGVyYXRvcl8udmFsdWVDaGFuZ2VkKCksdGhpcy5pdGVyYXRvcl8udXBkYXRlSXRlcmF0ZWRWYWx1ZSgpKX0sY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLm1vZGVsXz12b2lkIDAsdGhpcy5kZWxlZ2F0ZV89dm9pZCAwLHRoaXMuYmluZGluZ3NfJiZ0aGlzLmJpbmRpbmdzXy5yZWYmJnRoaXMuYmluZGluZ3NfLnJlZi5jbG9zZSgpLHRoaXMucmVmQ29udGVudF89dm9pZCAwLHRoaXMuaXRlcmF0b3JfJiYodGhpcy5pdGVyYXRvcl8udmFsdWVDaGFuZ2VkKCksdGhpcy5pdGVyYXRvcl8uY2xvc2UoKSx0aGlzLml0ZXJhdG9yXz12b2lkIDApfSxzZXREZWxlZ2F0ZV86ZnVuY3Rpb24oYSl7dGhpcy5kZWxlZ2F0ZV89YSx0aGlzLmJpbmRpbmdNYXBfPXZvaWQgMCx0aGlzLml0ZXJhdG9yXyYmKHRoaXMuaXRlcmF0b3JfLmluc3RhbmNlUG9zaXRpb25DaGFuZ2VkRm5fPXZvaWQgMCx0aGlzLml0ZXJhdG9yXy5pbnN0YW5jZU1vZGVsRm5fPXZvaWQgMCl9LG5ld0RlbGVnYXRlXzpmdW5jdGlvbihhKXtmdW5jdGlvbiBiKGIpe3ZhciBjPWEmJmFbYl07aWYoImZ1bmN0aW9uIj09dHlwZW9mIGMpcmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGMuYXBwbHkoYSxhcmd1bWVudHMpfX1pZihhKXJldHVybntiaW5kaW5nTWFwczp7fSxyYXc6YSxwcmVwYXJlQmluZGluZzpiKCJwcmVwYXJlQmluZGluZyIpLHByZXBhcmVJbnN0YW5jZU1vZGVsOmIoInByZXBhcmVJbnN0YW5jZU1vZGVsIikscHJlcGFyZUluc3RhbmNlUG9zaXRpb25DaGFuZ2VkOmIoInByZXBhcmVJbnN0YW5jZVBvc2l0aW9uQ2hhbmdlZCIpfX0sc2V0IGJpbmRpbmdEZWxlZ2F0ZShhKXtpZih0aGlzLmRlbGVnYXRlXyl0aHJvdyBFcnJvcigiVGVtcGxhdGUgbXVzdCBiZSBjbGVhcmVkIGJlZm9yZSBhIG5ldyBiaW5kaW5nRGVsZWdhdGUgY2FuIGJlIGFzc2lnbmVkIik7dGhpcy5zZXREZWxlZ2F0ZV8odGhpcy5uZXdEZWxlZ2F0ZV8oYSkpfSxnZXQgcmVmXygpe3ZhciBhPWQodGhpcyx0aGlzLmdldEF0dHJpYnV0ZSgicmVmIikpO2lmKGF8fChhPXRoaXMuaW5zdGFuY2VSZWZfKSwhYSlyZXR1cm4gdGhpczt2YXIgYj1hLnJlZl87cmV0dXJuIGI/YjphfX0pO3ZhciBTPTE7T2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGUucHJvdG90eXBlLCJ0ZW1wbGF0ZUluc3RhbmNlIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy50ZW1wbGF0ZUluc3RhbmNlXztyZXR1cm4gYT9hOnRoaXMucGFyZW50Tm9kZT90aGlzLnBhcmVudE5vZGUudGVtcGxhdGVJbnN0YW5jZTp2b2lkIDB9fSk7dmFyIFQ9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1QuYmluZGluZ3NfPVtdLFQudGVybWluYXRvcl89bnVsbCxFLnByb3RvdHlwZT17Y2xvc2VEZXBzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5kZXBzO2EmJihhLmlmT25lVGltZT09PSExJiZhLmlmVmFsdWUuY2xvc2UoKSxhLm9uZVRpbWU9PT0hMSYmYS52YWx1ZS5jbG9zZSgpKX0sdXBkYXRlRGVwZW5kZW5jaWVzOmZ1bmN0aW9uKGEsYil7dGhpcy5jbG9zZURlcHMoKTt2YXIgYz10aGlzLmRlcHM9e30sZD10aGlzLnRlbXBsYXRlRWxlbWVudF87aWYoYS5pZil7aWYoYy5oYXNJZj0hMCxjLmlmT25lVGltZT1hLmlmLm9ubHlPbmVUaW1lLGMuaWZWYWx1ZT12KEosYS5pZixkLGIpLGMuaWZPbmVUaW1lJiYhYy5pZlZhbHVlKXJldHVybiB2b2lkIHRoaXMudXBkYXRlSXRlcmF0ZWRWYWx1ZSgpO2MuaWZPbmVUaW1lfHxjLmlmVmFsdWUub3Blbih0aGlzLnVwZGF0ZUl0ZXJhdGVkVmFsdWUsdGhpcyl9YS5yZXBlYXQ/KGMucmVwZWF0PSEwLGMub25lVGltZT1hLnJlcGVhdC5vbmx5T25lVGltZSxjLnZhbHVlPXYoSSxhLnJlcGVhdCxkLGIpKTooYy5yZXBlYXQ9ITEsYy5vbmVUaW1lPWEuYmluZC5vbmx5T25lVGltZSxjLnZhbHVlPXYoSCxhLmJpbmQsZCxiKSksYy5vbmVUaW1lfHxjLnZhbHVlLm9wZW4odGhpcy51cGRhdGVJdGVyYXRlZFZhbHVlLHRoaXMpLHRoaXMudXBkYXRlSXRlcmF0ZWRWYWx1ZSgpfSx1cGRhdGVJdGVyYXRlZFZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5kZXBzLmhhc0lmKXt2YXIgYT10aGlzLmRlcHMuaWZWYWx1ZTtpZih0aGlzLmRlcHMuaWZPbmVUaW1lfHwoYT1hLmRpc2NhcmRDaGFuZ2VzKCkpLCFhKXJldHVybiB2b2lkIHRoaXMudmFsdWVDaGFuZ2VkKCl9dmFyIGI9dGhpcy5kZXBzLnZhbHVlO3RoaXMuZGVwcy5vbmVUaW1lfHwoYj1iLmRpc2NhcmRDaGFuZ2VzKCkpLHRoaXMuZGVwcy5yZXBlYXR8fChiPVtiXSk7dmFyIGM9dGhpcy5kZXBzLnJlcGVhdCYmIXRoaXMuZGVwcy5vbmVUaW1lJiZBcnJheS5pc0FycmF5KGIpO3RoaXMudmFsdWVDaGFuZ2VkKGIsYyl9LHZhbHVlQ2hhbmdlZDpmdW5jdGlvbihhLGIpe0FycmF5LmlzQXJyYXkoYSl8fChhPVtdKSxhIT09dGhpcy5pdGVyYXRlZFZhbHVlJiYodGhpcy51bm9ic2VydmUoKSx0aGlzLnByZXNlbnRWYWx1ZT1hLGImJih0aGlzLmFycmF5T2JzZXJ2ZXI9bmV3IEFycmF5T2JzZXJ2ZXIodGhpcy5wcmVzZW50VmFsdWUpLHRoaXMuYXJyYXlPYnNlcnZlci5vcGVuKHRoaXMuaGFuZGxlU3BsaWNlcyx0aGlzKSksdGhpcy5oYW5kbGVTcGxpY2VzKEFycmF5T2JzZXJ2ZXIuY2FsY3VsYXRlU3BsaWNlcyh0aGlzLnByZXNlbnRWYWx1ZSx0aGlzLml0ZXJhdGVkVmFsdWUpKSl9LGdldExhc3RJbnN0YW5jZU5vZGU6ZnVuY3Rpb24oYSl7aWYoLTE9PWEpcmV0dXJuIHRoaXMudGVtcGxhdGVFbGVtZW50Xzt2YXIgYj10aGlzLmluc3RhbmNlc1thXSxjPWIudGVybWluYXRvcl87aWYoIWMpcmV0dXJuIHRoaXMuZ2V0TGFzdEluc3RhbmNlTm9kZShhLTEpO2lmKGMubm9kZVR5cGUhPT1Ob2RlLkVMRU1FTlRfTk9ERXx8dGhpcy50ZW1wbGF0ZUVsZW1lbnRfPT09YylyZXR1cm4gYzt2YXIgZD1jLml0ZXJhdG9yXztyZXR1cm4gZD9kLmdldExhc3RUZW1wbGF0ZU5vZGUoKTpjfSxnZXRMYXN0VGVtcGxhdGVOb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0TGFzdEluc3RhbmNlTm9kZSh0aGlzLmluc3RhbmNlcy5sZW5ndGgtMSl9LGluc2VydEluc3RhbmNlQXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmdldExhc3RJbnN0YW5jZU5vZGUoYS0xKSxkPXRoaXMudGVtcGxhdGVFbGVtZW50Xy5wYXJlbnROb2RlO3RoaXMuaW5zdGFuY2VzLnNwbGljZShhLDAsYiksZC5pbnNlcnRCZWZvcmUoYixjLm5leHRTaWJsaW5nKX0sZXh0cmFjdEluc3RhbmNlQXQ6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXRoaXMuZ2V0TGFzdEluc3RhbmNlTm9kZShhLTEpLGM9dGhpcy5nZXRMYXN0SW5zdGFuY2VOb2RlKGEpLGQ9dGhpcy50ZW1wbGF0ZUVsZW1lbnRfLnBhcmVudE5vZGUsZT10aGlzLmluc3RhbmNlcy5zcGxpY2UoYSwxKVswXTtjIT09Yjspe3ZhciBmPWIubmV4dFNpYmxpbmc7Zj09YyYmKGM9YiksZS5hcHBlbmRDaGlsZChkLnJlbW92ZUNoaWxkKGYpKX1yZXR1cm4gZX0sZ2V0RGVsZWdhdGVGbjpmdW5jdGlvbihhKXtyZXR1cm4gYT1hJiZhKHRoaXMudGVtcGxhdGVFbGVtZW50XyksImZ1bmN0aW9uIj09dHlwZW9mIGE/YTpudWxsfSxoYW5kbGVTcGxpY2VzOmZ1bmN0aW9uKGEpe2lmKCF0aGlzLmNsb3NlZCYmYS5sZW5ndGgpe3ZhciBiPXRoaXMudGVtcGxhdGVFbGVtZW50XztpZighYi5wYXJlbnROb2RlKXJldHVybiB2b2lkIHRoaXMuY2xvc2UoKTtBcnJheU9ic2VydmVyLmFwcGx5U3BsaWNlcyh0aGlzLml0ZXJhdGVkVmFsdWUsdGhpcy5wcmVzZW50VmFsdWUsYSk7dmFyIGM9Yi5kZWxlZ2F0ZV87dm9pZCAwPT09dGhpcy5pbnN0YW5jZU1vZGVsRm5fJiYodGhpcy5pbnN0YW5jZU1vZGVsRm5fPXRoaXMuZ2V0RGVsZWdhdGVGbihjJiZjLnByZXBhcmVJbnN0YW5jZU1vZGVsKSksdm9pZCAwPT09dGhpcy5pbnN0YW5jZVBvc2l0aW9uQ2hhbmdlZEZuXyYmKHRoaXMuaW5zdGFuY2VQb3NpdGlvbkNoYW5nZWRGbl89dGhpcy5nZXREZWxlZ2F0ZUZuKGMmJmMucHJlcGFyZUluc3RhbmNlUG9zaXRpb25DaGFuZ2VkKSk7Zm9yKHZhciBkPW5ldyBGLGU9MCxmPTA7ZjxhLmxlbmd0aDtmKyspe2Zvcih2YXIgZz1hW2ZdLGg9Zy5yZW1vdmVkLGk9MDtpPGgubGVuZ3RoO2krKyl7dmFyIGo9aFtpXSxrPXRoaXMuZXh0cmFjdEluc3RhbmNlQXQoZy5pbmRleCtlKTtrIT09VCYmZC5zZXQoaixrKX1lLT1nLmFkZGVkQ291bnR9Zm9yKHZhciBmPTA7ZjxhLmxlbmd0aDtmKyspZm9yKHZhciBnPWFbZl0sbD1nLmluZGV4O2w8Zy5pbmRleCtnLmFkZGVkQ291bnQ7bCsrKXt2YXIgaj10aGlzLml0ZXJhdGVkVmFsdWVbbF0saz1kLmdldChqKTtrP2QuZGVsZXRlKGopOih0aGlzLmluc3RhbmNlTW9kZWxGbl8mJihqPXRoaXMuaW5zdGFuY2VNb2RlbEZuXyhqKSksaz12b2lkIDA9PT1qP1Q6Yi5jcmVhdGVJbnN0YW5jZShqLHZvaWQgMCxjKSksdGhpcy5pbnNlcnRJbnN0YW5jZUF0KGwsayl9ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMuY2xvc2VJbnN0YW5jZUJpbmRpbmdzKGEpfSx0aGlzKSx0aGlzLmluc3RhbmNlUG9zaXRpb25DaGFuZ2VkRm5fJiZ0aGlzLnJlcG9ydEluc3RhbmNlc01vdmVkKGEpfX0scmVwb3J0SW5zdGFuY2VNb3ZlZDpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmluc3RhbmNlc1thXTtiIT09VCYmdGhpcy5pbnN0YW5jZVBvc2l0aW9uQ2hhbmdlZEZuXyhiLnRlbXBsYXRlSW5zdGFuY2VfLGEpfSxyZXBvcnRJbnN0YW5jZXNNb3ZlZDpmdW5jdGlvbihhKXtmb3IodmFyIGI9MCxjPTAsZD0wO2Q8YS5sZW5ndGg7ZCsrKXt2YXIgZT1hW2RdO2lmKDAhPWMpZm9yKDtiPGUuaW5kZXg7KXRoaXMucmVwb3J0SW5zdGFuY2VNb3ZlZChiKSxiKys7ZWxzZSBiPWUuaW5kZXg7Zm9yKDtiPGUuaW5kZXgrZS5hZGRlZENvdW50Oyl0aGlzLnJlcG9ydEluc3RhbmNlTW92ZWQoYiksYisrO2MrPWUuYWRkZWRDb3VudC1lLnJlbW92ZWQubGVuZ3RofWlmKDAhPWMpZm9yKHZhciBmPXRoaXMuaW5zdGFuY2VzLmxlbmd0aDtmPmI7KXRoaXMucmVwb3J0SW5zdGFuY2VNb3ZlZChiKSxiKyt9LGNsb3NlSW5zdGFuY2VCaW5kaW5nczpmdW5jdGlvbihhKXtmb3IodmFyIGI9YS5iaW5kaW5nc18sYz0wO2M8Yi5sZW5ndGg7YysrKWJbY10uY2xvc2UoKX0sdW5vYnNlcnZlOmZ1bmN0aW9uKCl7dGhpcy5hcnJheU9ic2VydmVyJiYodGhpcy5hcnJheU9ic2VydmVyLmNsb3NlKCksdGhpcy5hcnJheU9ic2VydmVyPXZvaWQgMCl9LGNsb3NlOmZ1bmN0aW9uKCl7aWYoIXRoaXMuY2xvc2VkKXt0aGlzLnVub2JzZXJ2ZSgpO2Zvcih2YXIgYT0wO2E8dGhpcy5pbnN0YW5jZXMubGVuZ3RoO2ErKyl0aGlzLmNsb3NlSW5zdGFuY2VCaW5kaW5ncyh0aGlzLmluc3RhbmNlc1thXSk7dGhpcy5pbnN0YW5jZXMubGVuZ3RoPTAsdGhpcy5jbG9zZURlcHMoKSx0aGlzLnRlbXBsYXRlRWxlbWVudF8uaXRlcmF0b3JfPXZvaWQgMCx0aGlzLmNsb3NlZD0hMH19fSxIVE1MVGVtcGxhdGVFbGVtZW50LmZvckFsbFRlbXBsYXRlc0Zyb21fPWl9KHRoaXMpLGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXtlfHwoZT0hMCxhLmVuZE9mTWljcm90YXNrKGZ1bmN0aW9uKCl7ZT0hMSxsb2dGbGFncy5kYXRhJiZjb25zb2xlLmdyb3VwKCJQbGF0Zm9ybS5mbHVzaCgpIiksYS5wZXJmb3JtTWljcm90YXNrQ2hlY2twb2ludCgpLGxvZ0ZsYWdzLmRhdGEmJmNvbnNvbGUuZ3JvdXBFbmQoKX0pKX12YXIgYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpO2MudGV4dENvbnRlbnQ9InRlbXBsYXRlIHtkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7fSAvKiBpbmplY3RlZCBieSBwbGF0Zm9ybS5qcyAqLyI7dmFyIGQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiaGVhZCIpO2QuaW5zZXJ0QmVmb3JlKGMsZC5maXJzdENoaWxkKTt2YXIgZTtpZihPYnNlcnZlci5oYXNPYmplY3RPYnNlcnZlKWI9ZnVuY3Rpb24oKXt9O2Vsc2V7dmFyIGY9MTI1O3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJXZWJDb21wb25lbnRzUmVhZHkiLGZ1bmN0aW9uKCl7YigpLGEuZmx1c2hQb2xsPXNldEludGVydmFsKGIsZil9KX1pZih3aW5kb3cuQ3VzdG9tRWxlbWVudHMmJiFDdXN0b21FbGVtZW50cy51c2VOYXRpdmUpe3ZhciBnPURvY3VtZW50LnByb3RvdHlwZS5pbXBvcnROb2RlO0RvY3VtZW50LnByb3RvdHlwZS5pbXBvcnROb2RlPWZ1bmN0aW9uKGEsYil7dmFyIGM9Zy5jYWxsKHRoaXMsYSxiKTtyZXR1cm4gQ3VzdG9tRWxlbWVudHMudXBncmFkZUFsbChjKSxjfX1hLmZsdXNoPWJ9KHdpbmRvdy5QbGF0Zm9ybSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsYXRmb3JtLmpzLm1hcA==",
                "body": "",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Sun, 09 Nov 2014 03:28:03 GMT",
                    "Content-Length": "150292",
                    "Date": "Sun, 09 Nov 2014 03:28:03 GMT",
                    "Content-Type": "application/javascript"
                },
                "cookies": [],
                "mimeType": "script",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}