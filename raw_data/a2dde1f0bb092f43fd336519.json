{
    "url": "http://localhost:9999/v0lkan/o2.js/draft/old/doc/logical/o2/Validation.html",
    "host": "localhost",
    "port": 9999,
    "protocol": "http",
    "name": "Cross-site scripting (DOM-based)",
    "issueType": 2097936,
    "severity": "High",
    "confidence": "Firm",
    "issueBackground": "DOM-based cross-site scripting vulnerabilities arise when a client-side script within an application's response reads data from a controllable part of the DOM (for example, the URL), and writes this data into the HTML document in an unsafe way. An attacker may be able to use the vulnerability to construct a URL which, if visited by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.<br><br>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.<br><br>Users can be induced to visit the attacker's crafted URL in various ways, similar to the usual attack delivery vectors for reflected cross-site scripting vulnerabilities. ",
    "remediationBackground": "Static analysis of code to identify vulnerabilities of this kind may lead to false positives that are not actually exploitable. You should review the highlighted code and related execution paths to determine whether the application is indeed vulnerable, or whether mitigations are in place that would prevent exploitation.<br><br>The most effective way to avoid DOM-based cross-site scripting vulnerabilities is not to dynamically write data into the HTML document that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing script code into the document. In many cases, the relevant data can be validated on a whitelist basis, to allow only content that is known to be safe. In other cases, it will be necessary to sanitize or encode the data. This can be a complex task, and depending on the context that the data is to be inserted may need to involve a combination of JavaScript escaping, HTML encoding, and URL encoding, in the appropriate sequence.",
    "issueDetail": "The application may be vulnerable to DOM-based cross-site scripting. Data is read from <b>window.location.pathname</b> and written to <b>document.write()</b> via the following statements:<ul><li>var loc = window.location.protocol + '//' + window.location.hostname + window.location.pathname;</li><li>loc = loc.split('\\\\');</li><li>loc = loc.join('/');</li><li>loc = loc.split('/');</li><li>loc = loc.join('/');</li><li>document.write(\"&lt;base href='\" + loc + \"'&gt;&lt;/base&gt;\");</li></ul>",
    "requestResponses": [
        {
            "request": {
                "host": "localhost",
                "port": 9999,
                "protocol": "http",
                "url": "http://localhost:9999/v0lkan/o2.js/draft/old/doc/logical/o2/Validation.html",
                "path": "/v0lkan/o2.js/draft/old/doc/logical/o2/Validation.html",
                "httpVersion": "HTTP/1.1",
                "method": "GET",
                "headers": {
                    "Host": "localhost:9999"
                },
                "body": "",
                "raw": "R0VUIC92MGxrYW4vbzIuanMvZHJhZnQvb2xkL2RvYy9sb2dpY2FsL28yL1ZhbGlkYXRpb24uaHRtbCBIVFRQLzEuMQ0KSG9zdDogbG9jYWxob3N0Ojk5OTkNCg0K",
                "inScope": true,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "request"
            },
            "response": {
                "statusCode": 200,
                "raw": "",
                "body": "IDwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L3N0cmljdC5kdGQiPg0KPGh0bWw+DQogICAgPGhlYWQ+DQogICAgICAgIDx0aXRsZT5vMi5qczwvdGl0bGU+DQogICAgICAgIDxNRVRBIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4gICAgICAgIA0KICAgICAgICA8c2NyaXB0Pg0KDQoJCQkoZnVuY3Rpb24oKQ0KCQkJew0KCQkJICAgIHZhciBsb2MgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOw0KICAgICAgICAgICAgICAgIGxvYyA9IGxvYy5zcGxpdCgnXFwnKTsNCiAgICAgICAgICAgICAgICBsb2MgPSBsb2Muam9pbignLycpOwkJCQkJICAgIA0KCQkJICAgIGxvYyA9IGxvYy5zcGxpdCgnLycpOw0KCQkJICAgIGxvYy5wb3AoKTsNCgkJCSAgICBsb2MgPSBsb2Muam9pbignLycpOw0KCQkJICAgIGxvYyArPSAnLycgKyAnLi4vLi4vJzsNCgkJCQ0KCQkJICAgIGRvY3VtZW50LndyaXRlKCI8YmFzZSBocmVmPSciICsgbG9jICsgIic+PC9iYXNlPiIpOw0KCQkJfSkoKTsNCiAgICAgICAgIA0KICAgICAgICA8L3NjcmlwdD4NCg0KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJqZ2RvYy5jc3MiPg0KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJ0aGVtZS5jc3MiPg0KICAgICAgICAJICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Im5hdlRyZWUuanMiPjwvc2NyaXB0Pg0KCSAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqZ2RvYy5qcyI+PC9zY3JpcHQ+DQoJPC9oZWFkPg0KICAgIDxib2R5Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJzdGFydHVwIiBpZD0ic3RhcnR1cCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiYW5uZXIiIGlkPSJiYW5uZXIiPg0KICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0icHJvamVjdE5hbWUiPg0KCSAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9vMmpzLmNvbS8iPm8yLmpzPC9hPiAgIA0KICAgICAgICAgICAgICAgIDwvaDE+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmFyIj4NCgkgICAgICAgICAgICAgICAgIHZlcnNpb24gMC4yNS5hLjAwMDEzNjk2MDIzNzgNCgkgICAgICAgICAgICA8L2Rpdj4NCgkgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50IiBpZD0iZG9jQ29udGVudCI+DQogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJibG9jayI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzZWFyY2hCbG9jayI+DQoJCQkgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoIiA+DQoJCQkgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaExhYmVsIj5TZWFyY2g6PC9kaXY+DQoJCQkgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaEJsb2NrIiBzdHlsZT0iaGVpZ2h0OjEwMCUiPg0KCQkJCQkgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJqZ3NTZWFyY2hTdHJpbmciIHR5cGU9InRleHQiIHNpemU9IjYwIiBjbGFzcz0iamdkU2VhcmNoU3RyaW5nIi8+DQoJCQkJCSAgICAgICAgICAgICAgICA8ZGl2IGlkPSJqZ3NTZWFyY2hQYW5lbCIgY2xhc3M9Impnc1NlYXJjaFBhbmVsIiBzdHlsZT0iZGlzcGxheTpub25lIj4NCgkJCQkJCSAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz0iamdkU2VhcmNoUmVjdCIgPg0KCQkJCQkJICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJqZ3NTZWFyY2hSZXN1bHRzIj4NCgkJCQkJCSAgICAgICAgICAgICAgICAgICAgICAgIExvYWRpbmcuLi4uDQoJCQkJCQkgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KCQkJCQkJICAgICAgICAgICAgICAgIDwvZGl2Pg0KCQkJCQkgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iamdzSW5mbyIgY2xhc3M9Impnc0luZm8iID5ObyBzZWxlY3Rpb248L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoJCQkgICAgICAgICAgICAgICAgPC9kaXY+DQoJCSAgICAgICAgICAgICAgICA8L2Rpdj4NCgkJICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImRvY1Njcm9sbCIgY2xhc3M9ImRvY1Njcm9sbCI+DQoJCSAgICAgICAgICAgICAgICAgICAgPGRpdj4NCgkJCSAgICAgICAgICAgICAgICAgICAgPGhyLz4NCgkJCQkJCSAgICAgICAgPGRpdj4NCgkJCQkJCSAgICAgICAgCQkJCQkJICAgICAgICAJCTxIMj4NCiAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPkNsYXNzPC9zcGFuPiBvMi5WYWxpZGF0aW9uDQogICAgPC9IMj4NCiAgICANCg0KICAgIDxoci8+DQogICAgPCEtLSBkZXNjcmlwdGlvbiAtLT4NCiAgICA8ZGl2Pg0KICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmNsYXNzPC9zcGFuPiANCiAgICAgICAgICAgIDxiPm8yLlZhbGlkYXRpb248L2I+DQogICAgICAgPC9jb2RlPg0KICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPjxwPkEgc2ltcGxlIGNsYXNzIGZvciB2YWxpZGF0aW5nIHZhcmlvdXMga2luZHMgb2YKIDxzdHJvbmc+b2JqZWN0PC9zdHJvbmc+cy48L3A+CgogPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZWZpbmVkSW4iPkRlZmluZWQgaW4gPC9zcGFuPg0KICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC92YWxpZGF0aW9uL21vZHVsZS1jb3JlLmh0bWwiPnZhbGlkYXRpb24uY29yZTwvYT4NCiAgICAgICAgPGhyLz4gDQogICAgPHAgLz4NCiAgICANCiAgICAgICAgICAgIAkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIA0KICAgIA0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlUYWJsZSBmdW5jdGlvbiI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5VGFibGVIZWFkZXIiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5GdW5jdGlvbjwvc3Bhbj4gU3VtbWFyeQ0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnByaXZhdGU8L3NwYW4+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJsb2dpY2FsL28yL1ZhbGlkYXRpb24uaHRtbCNfX19pcyI+PHNwYW4gY2xhc3M9ImVsZW1lbnROYW1lIj5pczwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaiwgPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvU3RyaW5nLmh0bWwiPlN0cmluZzwvYT48L3NwYW4+DQogdHlwZSkNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD5SZXR1cm5zIHRoZSB0eXBlIGluZm9ybWF0aW9uIG9mIHRoZSBnaXZlbiBvYmplY3QuPC9wPgogPHA+VGhlIHR5cGUgY2FuIGJlIGFueSBvZiB0aGUgZm9sbG93aW5nOjwvcD4KIDxwPjxjb2RlPkFycmF5LCBCb29sZWFuLCBEYXRlLCBFcnJvciwgRnVuY3Rpb24sIEpTT04sCiBNYXRoLCBOdW1iZXIsIE9iamVjdCwgUmVnRXhwLCBTdHJpbmcsIEFyZ3VtZW50czwvY29kZT4uPC9wPgoKIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBvYmogPSB7bG9yZW0gOiAnZG9sb3InfTsKIHZhciBpc09iamVjdCA9IG8yLlZhbGlkYXRpb24uaXMob2JqLCAnT2JqZWN0Jyk7CiA8L3ByZT4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNBcmd1bWVudHMiPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNBcmd1bWVudHM8L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhbiA8Y29kZT5hcmd1bWVudHM8L2NvZGU+IG9iamVjdC48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzQXJndW1lbnRzID0gbzIuVmFsaWRhdGlvbi5pc0FyZ3VtZW50cyhhcmd1bWVudHMpOwogPC9wcmU+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzQXJyYXkiPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNBcnJheTwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGFuIDxjb2RlPkFycmF5PC9jb2RlPi48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzQXJyYXkgPSBvMi5WYWxpZGF0aW9uLmlzQXJyYXkoW10pOwogPC9wcmU+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzQm9vbGVhbiI+PHNwYW4gY2xhc3M9ImVsZW1lbnROYW1lIj5pc0Jvb2xlYW48L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPkJvb2xlYW48L2NvZGU+LgoKIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc0Jvb2xlYW4gPSBvMi5WYWxpZGF0aW9uLmlzQm9vbGVhbihmYWxzZSk7CiA8L3ByZT4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNEYXRlIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzRGF0ZTwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj5Bcmd1bWVudHM8L3NwYW4+DQogdmFyYXJnaW4pDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPkRhdGU8L2NvZGU+LjwvcD4KCiA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNEYXRlID0gbzIuVmFsaWRhdGlvbi5pc0RhdGUoKGV3IERhdGUoKSk7CiA8L3ByZT4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNFbWFpbCI+PHNwYW4gY2xhc3M9ImVsZW1lbnROYW1lIj5pc0VtYWlsPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvU3RyaW5nLmh0bWwiPlN0cmluZzwvYT48L3NwYW4+DQogbWFpbCkNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD5EaWQgeW91IGtub3cgdGhhdCA8Y29kZT5BYmNcQGRlZkBleGFtcGxlLmNvbTwvY29kZT4sIGFuZAogPGNvZGU+Y3VzdG9tZXIvZGVwYXJ0bWVudD1zaGlwcGluZ0BleGFtcGxlLmNvbTwvY29kZT4gYXJlIGFsbCB2YWxpZAogZS1tYWlscz88L3A+CiA8cD5UaGVyZSBpcyBubyBnb29kIChhbmQgcmVhbGlzdGljKSByZWd1bGFyIGV4cHJlc3Npb24gdG8gbWF0Y2ggYW4KIGUtbWFpbCBhZGRyZXNzLjxwPgogPHA+VGhlIGdyYW1tYXIgKCBodHRwOi8vd3d3LmlldGYub3JnL3JmYy9yZmM1MzIyLnR4dCApIGlzIHRvbwogY29tcGxpY2F0ZWQgZm9yIHRoYXQuPC9wPgogPHA+VGhpcyBtZXRob2QgbWF0Y2hlcyA8c3Ryb25nPmUtbWFpbDwvc3Ryb25nPiBhZGRyZXNzZXMsIHdoaWxlIGdpdmluZwogc29tZSBmYWxzZS1wb3NpdGl2ZXMuPC9wPgogPHA+VGhlIGNvcnJlY3QgYWN0aW9uIHRvIHZhbGlkYXRlIGFuIDxzdHJvbmc+ZS1tYWlsPC9zdHJvbmc+IGFkZHJlc3MgaXMKIHRvIHZhbGlkYXRlIGJ5IHRyeWluZwogKGkuZS4gdHJ5IHNlbmRpbmcgYW4gYWNjb3VudCBhY3RpdmF0aW9uIDxzdHJvbmc+ZS1tYWlsPC9zdHJvbmc+IHRvIGEKIG5ld2x5IHJlZ2lzdGVyZWQgdXNlciwgZm9yIGV4YW1wbGUuKS48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzRW1haWwgPSBvMi5WYWxpZGF0aW9uLmlzRW1haWwoJ3ZvbGthbkBvMmpzLmNvbScpOwogPC9wcmU+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzRnVuY3Rpb24iPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNGdW5jdGlvbjwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNGdW5jdGlvbiA9IG8yLlZhbGlkYXRpb24uaXNGdW5jdGlvbihmblRlc3QpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPkZ1bmN0aW9uPC9jb2RlPi48L3A+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzTmFOIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzTmFOPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVzYyI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc05hTiA9IG8yLlZhbGlkYXRpb24uaXNOYU4oJ2xvcmVtJyk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gcGFyYW1ldGVyIGlzIDxjb2RlPk5hTjwvY29kZT4uPC9wPiAgICA8L2Rpdj4gIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVmIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJsb2dpY2FsL28yL1ZhbGlkYXRpb24uaHRtbCNfX19pc051bGwiPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNOdWxsPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVzYyI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc051bGwgPSBvMi5WYWxpZGF0aW9uLmlzTnVsbChudWxsKTsKIDwvcHJlPgoKIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBwYXJhbWV0ZXIgaXMgPGNvZGU+bnVsbDwvY29kZT4uPC9wPiAgICA8L2Rpdj4gIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVmIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJsb2dpY2FsL28yL1ZhbGlkYXRpb24uaHRtbCNfX19pc051bWJlciI+PHNwYW4gY2xhc3M9ImVsZW1lbnROYW1lIj5pc051bWJlcjwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNOdW1iZXIgPSBvMi5WYWxpZGF0aW9uLmlzTnVtYmVyKDQyKTsKIDwvcHJlPgoKIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBvYmplY3QgaXMgYSA8Y29kZT5OdW1iZXI8L2NvZGU+LjwvcD4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNOdW1lcmljIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzTnVtZXJpYzwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNOdW1lcmljID0gbzIuVmFsaWRhdGlvbi5pc051bWVyaWMoJzQuMicpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHBhcmFtZXRlciBpcyBhIG51bWVyaWMgZW50aXR5LjwvcD4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNPYmplY3QiPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNPYmplY3Q8L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzT2JqZWN0ID0gbzIuVmFsaWRhdGlvbi5pc09iamVjdCh7fSk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGFuIDxjb2RlPk9iamVjdDwvY29kZT4oe30pLjwvcD4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNSZWdFeHAiPjxzcGFuIGNsYXNzPSJlbGVtZW50TmFtZSI+aXNSZWdFeHA8L3NwYW4+PC9hPg0KICAgICAgICAgICAgICAgICg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzUmVnRXhwID0gbzIuVmFsaWRhdGlvbi5pc1JlZ0V4cCgvdGVzdC9pZyk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGEgPGNvZGU+UmVnRXhwPC9jb2RlPi48L3A+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzU3RyaW5nIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzU3RyaW5nPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVzYyI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc1N0cmluZyA9IG8yLlZhbGlkYXRpb24uaXNTdHJpbmcoJ2xvcmVtJyk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGEgPGNvZGU+U3RyaW5nPC9jb2RlPi48L3A+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzVW5kZWZpbmVkIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzVW5kZWZpbmVkPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVzYyI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc1VuZGVmaW5lZCA9IG8yLlZhbGlkYXRpb24uaXNVbmRlZmluZWQodW5kZWZpbmVkKTsKIDwvcHJlPgoKIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBwYXJhbWV0ZXIgaXMgPGNvZGU+dW5kZWZpbmVkPC9jb2RlPi48L3A+ICAgIDwvZGl2PiAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZWYiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9ImxvZ2ljYWwvbzIvVmFsaWRhdGlvbi5odG1sI19fX2lzVXJsIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzVXJsPC9zcGFuPjwvYT4NCiAgICAgICAgICAgICAgICAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvU3RyaW5nLmh0bWwiPlN0cmluZzwvYT48L3NwYW4+DQogdXJsKQ0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVzYyI+DQogICAgICAgIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBhcmd1bWVudCBpcyBhIHZhbGlkIDxzdHJvbmc+VVJMPC9zdHJvbmc+CiBhZGRyZXNzLjwvcD4KCiA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNVcmwgPSBvMi5WYWxpZGF0aW9uLmlzVXJsKCdodHRwOi8vbzJqcy5jb20vJyk7CiA8L3ByZT4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlZiI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPGEgaHJlZj0ibG9naWNhbC9vMi9WYWxpZGF0aW9uLmh0bWwjX19faXNXaGl0ZXNwYWNlIj48c3BhbiBjbGFzcz0iZWxlbWVudE5hbWUiPmlzV2hpdGVzcGFjZTwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL1N0cmluZy5odG1sIj5TdHJpbmc8L2E+PC9zcGFuPg0KIHRleHQpDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VtbWFyeUl0ZW1EZXNjIj4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGFyZ3VtZW50IGNvbnNpc3RzIG9mIG9ubHkgd2hpdGVzcGFjZQogY2hhcmFjdGVycy48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzV2hpdGVzcGFjZSA9IG8yLlZhbGlkYXRpb24uaXNXaGl0ZXNwYWNlKCcgIFx0XHJcbiAgIFxuICAnKTsKIDwvcHJlPiAgICA8L2Rpdj4gIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlJdGVtRGVmIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJsb2dpY2FsL28yL1ZhbGlkYXRpb24uaHRtbCNfX19pc1dpbmRvdyI+PHNwYW4gY2xhc3M9ImVsZW1lbnROYW1lIj5pc1dpbmRvdzwvc3Bhbj48L2E+DQogICAgICAgICAgICAgICAgKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdW1tYXJ5SXRlbURlc2MiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNXaW5kb3cgPSBvMi5WYWxpZGF0aW9uLmlzV2luZG93KHdpbmRvdyk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gcGFyYW1ldGVyIGlzIGEgPGNvZGU+d2luZG93PC9jb2RlPgogb2JqZWN0LjwvcD4gICAgPC9kaXY+ICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPHAvPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8IS0tID09PT09PT09PT09PT09IERldGFpbHMgY29taW5nIGhlcmUgPT09PT09PT09PT09PT09PT09PSAtLT4NCiAgICAJICAgIAkgICAgCSAgICAJICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGV0YWlscyBmdW5jdGlvbiI+DQogICAgICAgICAgICA8aDIgY2xhc3M9InNlY3Rpb25IZWFkZXIiPkZ1bmN0aW9uIERldGFpbHM8L2gyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+DQogICAgICAgIDxhIG5hbWU9Il9fX2lzIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pczwvc3Bhbj4gICAgICAgICAgICANCiAgICAgICAgPC9hPiANCiAgICA8L2gzPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+cHJpdmF0ZTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXMoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqLCA8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9TdHJpbmcuaHRtbCI+U3RyaW5nPC9hPjwvc3Bhbj4NCiB0eXBlKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPlJldHVybnMgdGhlIHR5cGUgaW5mb3JtYXRpb24gb2YgdGhlIGdpdmVuIG9iamVjdC48L3A+CiA8cD5UaGUgdHlwZSBjYW4gYmUgYW55IG9mIHRoZSBmb2xsb3dpbmc6PC9wPgogPHA+PGNvZGU+QXJyYXksIEJvb2xlYW4sIERhdGUsIEVycm9yLCBGdW5jdGlvbiwgSlNPTiwKIE1hdGgsIE51bWJlciwgT2JqZWN0LCBSZWdFeHAsIFN0cmluZywgQXJndW1lbnRzPC9jb2RlPi48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIG9iaiA9IHtsb3JlbSA6ICdkb2xvcid9OwogdmFyIGlzT2JqZWN0ID0gbzIuVmFsaWRhdGlvbi5pcyhvYmosICdPYmplY3QnKTsKIDwvcHJlPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gY2hlY2sgdHlwZSBhZ2FpbnN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgdHlwZSAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSB0aGUgdHlwZSB0byBjb21wYXJlLiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIDxzdHJvbmc+b2JqZWN0PC9zdHJvbmc+J3MgdHlwZSBtYXRjaGVzCiB0aGUgPHN0cm9uZz50eXBlPC9zdHJvbmc+IHBhcmFtZXRlciwgPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4KICAgICAJICAgICAgICAgICAgCSAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2PiAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4gICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+DQogICAgICAgIDxhIG5hbWU9Il9fX2lzQXJndW1lbnRzIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pc0FyZ3VtZW50czwvc3Bhbj4gICAgICAgICAgICANCiAgICAgICAgPC9hPiANCiAgICA8L2gzPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICBpc0FyZ3VtZW50cyg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICAgICAgPC9jb2RlPiANCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tZW50Ij4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhbiA8Y29kZT5hcmd1bWVudHM8L2NvZGU+IG9iamVjdC48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzQXJndW1lbnRzID0gbzIuVmFsaWRhdGlvbi5pc0FyZ3VtZW50cyhhcmd1bWVudHMpOwogPC9wcmU+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICBvYmogICAgICAgIDwvY29kZT4NCiAgICAgICAgIC0gdGhlIG9iamVjdCB0byB0ZXN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgb2JqIGlzIGFuIDxjb2RlPmFyZ3VtZW50czwvY29kZT4gb2JqZWN0LAogPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4KICAgICAJICAgICAgICAgICAgCSAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2PiAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4gICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+DQogICAgICAgIDxhIG5hbWU9Il9fX2lzQXJyYXkiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzQXJyYXk8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNBcnJheSg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9PYmplY3QuaHRtbCI+T2JqZWN0PC9hPjwvc3Bhbj4NCiBvYmopDQogICAgICAgICAgICAgICAgPC9jb2RlPiANCiAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tZW50Ij4NCiAgICAgICAgPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhbiA8Y29kZT5BcnJheTwvY29kZT4uPC9wPgoKIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc0FycmF5ID0gbzIuVmFsaWRhdGlvbi5pc0FycmF5KFtdKTsKIDwvcHJlPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIDxjb2RlPnRydWU8L2NvZGU+IGlmIG9iaiBpcyBhbiA8Y29kZT5BcnJheTwvY29kZT4sCiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNCb29sZWFuIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pc0Jvb2xlYW48L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNCb29sZWFuKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGEgPGNvZGU+Qm9vbGVhbjwvY29kZT4uCgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzQm9vbGVhbiA9IG8yLlZhbGlkYXRpb24uaXNCb29sZWFuKGZhbHNlKTsKIDwvcHJlPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIDxjb2RlPnRydWU8L2NvZGU+IGlmIG9iaiBpcyBhIDxjb2RlPkJvb2xlYW48L2NvZGU+LAogPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4KICAgICAJICAgICAgICAgICAgCSAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2PiAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4gICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+DQogICAgICAgIDxhIG5hbWU9Il9fX2lzRGF0ZSI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNEYXRlPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzRGF0ZSg8c3BhbiBjbGFzcz0idHlwZSI+QXJndW1lbnRzPC9zcGFuPg0KIHZhcmFyZ2luKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBvYmplY3QgaXMgYSA8Y29kZT5EYXRlPC9jb2RlPi48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzRGF0ZSA9IG8yLlZhbGlkYXRpb24uaXNEYXRlKChldyBEYXRlKCkpOwogPC9wcmU+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICB2YXJhcmdpbiAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSBpZiBhIHNpbmdsZSBhcmd1bWVudCBpcyBnaXZlbiBpdCBjaGVja3MKIHdoZXRoZXIgaXQgaWRlbnRpZmllcyBhIDxjb2RlPkRhdGU8L2NvZGU+IG9iamVjdC4gT3RoZXJ3aXNlIHRoZQogZnVuY3Rpb24gdGFrZXMgdGhyZWUgcGFyYW1ldGVycyAoeWVhciwgbW9udGgsIGRhdGUpIGFuZCBjaGVrcyB3aGV0aGVyCiB0aGV5IGRlbm90ZSBhIHZhbGlkIERhdGUuICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiBvYmogaXMgYSA8Y29kZT5EYXRlPC9jb2RlPiwKIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc0VtYWlsIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pc0VtYWlsPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzRW1haWwoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvU3RyaW5nLmh0bWwiPlN0cmluZzwvYT48L3NwYW4+DQogbWFpbCkNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD5EaWQgeW91IGtub3cgdGhhdCA8Y29kZT5BYmNcQGRlZkBleGFtcGxlLmNvbTwvY29kZT4sIGFuZAogPGNvZGU+Y3VzdG9tZXIvZGVwYXJ0bWVudD1zaGlwcGluZ0BleGFtcGxlLmNvbTwvY29kZT4gYXJlIGFsbCB2YWxpZAogZS1tYWlscz88L3A+CiA8cD5UaGVyZSBpcyBubyBnb29kIChhbmQgcmVhbGlzdGljKSByZWd1bGFyIGV4cHJlc3Npb24gdG8gbWF0Y2ggYW4KIGUtbWFpbCBhZGRyZXNzLjxwPgogPHA+VGhlIGdyYW1tYXIgKCBodHRwOi8vd3d3LmlldGYub3JnL3JmYy9yZmM1MzIyLnR4dCApIGlzIHRvbwogY29tcGxpY2F0ZWQgZm9yIHRoYXQuPC9wPgogPHA+VGhpcyBtZXRob2QgbWF0Y2hlcyA8c3Ryb25nPmUtbWFpbDwvc3Ryb25nPiBhZGRyZXNzZXMsIHdoaWxlIGdpdmluZwogc29tZSBmYWxzZS1wb3NpdGl2ZXMuPC9wPgogPHA+VGhlIGNvcnJlY3QgYWN0aW9uIHRvIHZhbGlkYXRlIGFuIDxzdHJvbmc+ZS1tYWlsPC9zdHJvbmc+IGFkZHJlc3MgaXMKIHRvIHZhbGlkYXRlIGJ5IHRyeWluZwogKGkuZS4gdHJ5IHNlbmRpbmcgYW4gYWNjb3VudCBhY3RpdmF0aW9uIDxzdHJvbmc+ZS1tYWlsPC9zdHJvbmc+IHRvIGEKIG5ld2x5IHJlZ2lzdGVyZWQgdXNlciwgZm9yIGV4YW1wbGUuKS48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzRW1haWwgPSBvMi5WYWxpZGF0aW9uLmlzRW1haWwoJ3ZvbGthbkBvMmpzLmNvbScpOwogPC9wcmU+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICBtYWlsICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSA8c3Ryb25nPmUtbWFpbDwvc3Ryb25nPiBhZGRyZXNzIHRvIHRlc3QuICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgPHN0cm9uZz5lLW1haWw8L3N0cm9uZz4gYWRkcmVzcyBpcyBhCiBwb3RlbnRpYWxseSB2YWxpZCBlLW1haWwsIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc0Z1bmN0aW9uIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pc0Z1bmN0aW9uPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzRnVuY3Rpb24oPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc0Z1bmN0aW9uID0gbzIuVmFsaWRhdGlvbi5pc0Z1bmN0aW9uKGZuVGVzdCk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgb2JqZWN0IGlzIGEgPGNvZGU+RnVuY3Rpb248L2NvZGU+LjwvcD4KCiAgICAgPC9kaXY+DQogICAgICAgIAk8ZGl2IGNsYXNzPSJwYXJhbWV0ZXJzIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5QYXJhbWV0ZXJzOjwvc3Bhbj48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtc2V0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtIHBhZGRlZERldGFpbHMiPg0KICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgIG9iaiAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSB0aGUgb2JqZWN0IHRvIHRlc3QuICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiBvYmogaXMgYSA8Y29kZT5GdW5jdGlvbjwvY29kZT4sCiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNOYU4iPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzTmFOPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzTmFOKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNOYU4gPSBvMi5WYWxpZGF0aW9uLmlzTmFOKCdsb3JlbScpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHBhcmFtZXRlciBpcyA8Y29kZT5OYU48L2NvZGU+LjwvcD4KCiAgICAgPC9kaXY+DQogICAgICAgIAk8ZGl2IGNsYXNzPSJwYXJhbWV0ZXJzIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5QYXJhbWV0ZXJzOjwvc3Bhbj48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtc2V0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtIHBhZGRlZERldGFpbHMiPg0KICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgIG9iaiAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSB0aGUgPGNvZGU+T2JqZWN0PC9jb2RlPiB0byB0ZXN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGl0ZW0gaXMgPGNvZGU+TmFOPC9jb2RlPiwKIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc051bGwiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzTnVsbDwvc3Bhbj4gICAgICAgICAgICANCiAgICAgICAgPC9hPiANCiAgICA8L2gzPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vZGlmaWVycyI+c3RhdGljPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHlwZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICBpc051bGwoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc051bGwgPSBvMi5WYWxpZGF0aW9uLmlzTnVsbChudWxsKTsKIDwvcHJlPgoKIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBwYXJhbWV0ZXIgaXMgPGNvZGU+bnVsbDwvY29kZT4uPC9wPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSA8Y29kZT5PYmplY3Q8L2NvZGU+IHRvIHRlc3QuICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgaXRlbSBpcyA8Y29kZT5udWxsPC9jb2RlPiwKIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc051bWJlciI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNOdW1iZXI8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNOdW1iZXIoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc051bWJlciA9IG8yLlZhbGlkYXRpb24uaXNOdW1iZXIoNDIpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPk51bWJlcjwvY29kZT4uPC9wPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIDxjb2RlPnRydWU8L2NvZGU+IGlmIG9iaiBpcyBhIDxjb2RlPk51bWJlcjwvY29kZT4sCiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNOdW1lcmljIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpUeXBlIj5mdW5jdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvYmpOYW1lIj5pc051bWVyaWM8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNOdW1lcmljKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNOdW1lcmljID0gbzIuVmFsaWRhdGlvbi5pc051bWVyaWMoJzQuMicpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHBhcmFtZXRlciBpcyBhIG51bWVyaWMgZW50aXR5LjwvcD4KCiAgICAgPC9kaXY+DQogICAgICAgIAk8ZGl2IGNsYXNzPSJwYXJhbWV0ZXJzIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5QYXJhbWV0ZXJzOjwvc3Bhbj48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtc2V0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtIHBhZGRlZERldGFpbHMiPg0KICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgIG9iaiAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSB0aGUgPGNvZGU+T2JqZWN0PC9jb2RlPiB0byB0ZXN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGl0ZW0gaXMgYSBudW1lcmljIGVudGl0eSwKIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc09iamVjdCI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNPYmplY3Q8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNPYmplY3QoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc09iamVjdCA9IG8yLlZhbGlkYXRpb24uaXNPYmplY3Qoe30pOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhbiA8Y29kZT5PYmplY3Q8L2NvZGU+KHt9KS48L3A+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICBvYmogICAgICAgIDwvY29kZT4NCiAgICAgICAgIC0gdGhlIG9iamVjdCB0byB0ZXN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgb2JqIGlzIGFuIDxjb2RlPk9iamVjdDwvY29kZT4gKHt9KSwKIDxjb2RlPmZhbHNlPC9jb2RlPiBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc1JlZ0V4cCI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNSZWdFeHA8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNSZWdFeHAoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc1JlZ0V4cCA9IG8yLlZhbGlkYXRpb24uaXNSZWdFeHAoL3Rlc3QvaWcpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPlJlZ0V4cDwvY29kZT4uPC9wPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIDxjb2RlPnRydWU8L2NvZGU+IGlmIG9iaiBpcyBhIDxjb2RlPlJlZ0V4cDwvY29kZT4sCiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNTdHJpbmciPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzU3RyaW5nPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzU3RyaW5nKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNTdHJpbmcgPSBvMi5WYWxpZGF0aW9uLmlzU3RyaW5nKCdsb3JlbScpOwogPC9wcmU+CgogPHA+Q2hlY2tzIHdoZXRoZXIgdGhlIG9iamVjdCBpcyBhIDxjb2RlPlN0cmluZzwvY29kZT4uPC9wPgoKICAgICA8L2Rpdj4NCiAgICAgICAgCTxkaXYgY2xhc3M9InBhcmFtZXRlcnMiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlBhcmFtZXRlcnM6PC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW1zZXQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFyYW0gcGFkZGVkRGV0YWlscyI+DQogICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgb2JqICAgICAgICA8L2NvZGU+DQogICAgICAgICAtIHRoZSBvYmplY3QgdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIHRydWUgaWYgb2JqIGlzIGEgU3RyaW5nLCBmYWxzZSBvdGhlcndpc2UuCiAgICAgCSAgICAgICAgICAgIAkgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4gICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+ICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPg0KICAgICAgICA8YSBuYW1lPSJfX19pc1VuZGVmaW5lZCI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNVbmRlZmluZWQ8L3NwYW4+ICAgICAgICAgICAgDQogICAgICAgIDwvYT4gDQogICAgPC9oMz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgPGNvZGU+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtb2RpZmllcnMiPnN0YXRpYzwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR5cGUiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgaXNVbmRlZmluZWQoPHNwYW4gY2xhc3M9InR5cGUiPjxhIGhyZWY9ImxvZ2ljYWwvbzIvT2JqZWN0Lmh0bWwiPk9iamVjdDwvYT48L3NwYW4+DQogb2JqKQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc1VuZGVmaW5lZCA9IG8yLlZhbGlkYXRpb24uaXNVbmRlZmluZWQodW5kZWZpbmVkKTsKIDwvcHJlPgoKIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBwYXJhbWV0ZXIgaXMgPGNvZGU+dW5kZWZpbmVkPC9jb2RlPi48L3A+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICBvYmogICAgICAgIDwvY29kZT4NCiAgICAgICAgIC0gdGhlIDxjb2RlPk9iamVjdDwvY29kZT4gdG8gdGVzdC4gICAgICAgICAgICA8L2Rpdj4gICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAJPGRpdiBjbGFzcz0icmV0dXJucyI+DQoJICAgICAgICA8c3BhbiBjbGFzcz0iZGVzY1NlY3Rpb24iPlJldHVybnM6PC9zcGFuPjxici8+DQoJICAgICAgICA8ZGl2IGNsYXNzPSJwYWRkZWREZXRhaWxzIj4NCgkgICAgICAgICAgICAJICAgICAgICAgICAgIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBpdGVtIGlzIDxjb2RlPnVuZGVmaW5lZDwvY29kZT4sCiA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNVcmwiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzVXJsPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzVXJsKDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL1N0cmluZy5odG1sIj5TdHJpbmc8L2E+PC9zcGFuPg0KIHVybCkNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD5DaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gYXJndW1lbnQgaXMgYSB2YWxpZCA8c3Ryb25nPlVSTDwvc3Ryb25nPgogYWRkcmVzcy48L3A+CgogPHA+PHN0cm9uZz5Vc2FnZSBleGFtcGxlOjwvc3Ryb25nPjwvcD4KCiA8cHJlPgogdmFyIGlzVXJsID0gbzIuVmFsaWRhdGlvbi5pc1VybCgnaHR0cDovL28yanMuY29tLycpOwogPC9wcmU+CgogICAgIDwvZGl2Pg0KICAgICAgICAJPGRpdiBjbGFzcz0icGFyYW1ldGVycyI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UGFyYW1ldGVyczo8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbXNldCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYXJhbSBwYWRkZWREZXRhaWxzIj4NCiAgICAgICAgPGNvZGU+DQogICAgICAgICAgICB1cmwgICAgICAgIDwvY29kZT4NCiAgICAgICAgIC0gdGhlIGFkZHJlc3MgdG8gY2hlY2suICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgYWRkcmVzcyBpcyBhIHZhbGlkIDxzdHJvbmc+VVJMPC9zdHJvbmc+LAogPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4KICAgICAJICAgICAgICAgICAgCSAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2PiAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4gICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+DQogICAgICAgIDxhIG5hbWU9Il9fX2lzV2hpdGVzcGFjZSI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqVHlwZSI+ZnVuY3Rpb248L3NwYW4+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0ib2JqTmFtZSI+aXNXaGl0ZXNwYWNlPC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzV2hpdGVzcGFjZSg8c3BhbiBjbGFzcz0idHlwZSI+PGEgaHJlZj0ibG9naWNhbC9vMi9TdHJpbmcuaHRtbCI+U3RyaW5nPC9hPjwvc3Bhbj4NCiB0ZXh0KQ0KICAgICAgICAgICAgICAgIDwvY29kZT4gDQogICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudCI+DQogICAgICAgIDxwPkNoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBhcmd1bWVudCBjb25zaXN0cyBvZiBvbmx5IHdoaXRlc3BhY2UKIGNoYXJhY3RlcnMuPC9wPgoKIDxwPjxzdHJvbmc+VXNhZ2UgZXhhbXBsZTo8L3N0cm9uZz48L3A+CgogPHByZT4KIHZhciBpc1doaXRlc3BhY2UgPSBvMi5WYWxpZGF0aW9uLmlzV2hpdGVzcGFjZSgnICBcdFxyXG4gICBcbiAgJyk7CiA8L3ByZT4KCiAgICAgPC9kaXY+DQogICAgICAgIAk8ZGl2IGNsYXNzPSJwYXJhbWV0ZXJzIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5QYXJhbWV0ZXJzOjwvc3Bhbj48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtc2V0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtIHBhZGRlZERldGFpbHMiPg0KICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgIHRleHQgICAgICAgIDwvY29kZT4NCiAgICAgICAgIC0gdGhlIHRleHQgdG8gY2hlY2suICAgICAgICAgICAgPC9kaXY+ICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgCTxkaXYgY2xhc3M9InJldHVybnMiPg0KCSAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5SZXR1cm5zOjwvc3Bhbj48YnIvPg0KCSAgICAgICAgPGRpdiBjbGFzcz0icGFkZGVkRGV0YWlscyI+DQoJICAgICAgICAgICAgCSAgICAgICAgICAgICA8Y29kZT50cnVlPC9jb2RlPiBpZiB0aGUgYXJndW1lbnQgY29uc2lzdHMgb2Ygb25seSB3aGl0ZXNwYWNlCiBjaGFyYWN0ZXJzLCA8Y29kZT5mYWxzZTwvY29kZT4gb3RoZXJ3aXNlLgogICAgIAkgICAgICAgICAgICAJICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+ICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIvPiAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4NCiAgICAgICAgPGEgbmFtZT0iX19faXNXaW5kb3ciPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9ialR5cGUiPmZ1bmN0aW9uPC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im9iak5hbWUiPmlzV2luZG93PC9zcGFuPiAgICAgICAgICAgIA0KICAgICAgICA8L2E+IA0KICAgIDwvaDM+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIDxjb2RlPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9kaWZpZXJzIj5zdGF0aWM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0eXBlIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIGlzV2luZG93KDxzcGFuIGNsYXNzPSJ0eXBlIj48YSBocmVmPSJsb2dpY2FsL28yL09iamVjdC5odG1sIj5PYmplY3Q8L2E+PC9zcGFuPg0KIG9iaikNCiAgICAgICAgICAgICAgICA8L2NvZGU+IA0KICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPg0KICAgICAgICA8cD48c3Ryb25nPlVzYWdlIGV4YW1wbGU6PC9zdHJvbmc+PC9wPgoKIDxwcmU+CiB2YXIgaXNXaW5kb3cgPSBvMi5WYWxpZGF0aW9uLmlzV2luZG93KHdpbmRvdyk7CiA8L3ByZT4KCiA8cD5DaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gcGFyYW1ldGVyIGlzIGEgPGNvZGU+d2luZG93PC9jb2RlPgogb2JqZWN0LjwvcD4KCiAgICAgPC9kaXY+DQogICAgICAgIAk8ZGl2IGNsYXNzPSJwYXJhbWV0ZXJzIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NTZWN0aW9uIj5QYXJhbWV0ZXJzOjwvc3Bhbj48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtc2V0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhcmFtIHBhZGRlZERldGFpbHMiPg0KICAgICAgICA8Y29kZT4NCiAgICAgICAgICAgIG9iaiAgICAgICAgPC9jb2RlPg0KICAgICAgICAgLSB0aGUgPGNvZGU+T2JqZWN0PC9jb2RlPiB0byB0ZXN0LiAgICAgICAgICAgIDwvZGl2PiAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJyZXR1cm5zIj4NCgkgICAgICAgIDxzcGFuIGNsYXNzPSJkZXNjU2VjdGlvbiI+UmV0dXJuczo8L3NwYW4+PGJyLz4NCgkgICAgICAgIDxkaXYgY2xhc3M9InBhZGRlZERldGFpbHMiPg0KCSAgICAgICAgICAgIAkgICAgICAgICAgICAgPGNvZGU+dHJ1ZTwvY29kZT4gaWYgdGhlIGl0ZW0gaXMgYSA8Y29kZT53aW5kb3c8L2NvZGU+LAogPGNvZGU+ZmFsc2U8L2NvZGU+IG90aGVyd2lzZS4KICAgICAJICAgICAgICAgICAgCSAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2PiAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4gICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAJICAgIAkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkgICAgICAgIDwvZGl2Pg0KICAgICAgICAJCSAgICAgICAgICA8L2Rpdj4JCQkgICAgICAgICAgICAgICAgICAgIA0KCQkgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIAkgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2aWdhdGlvbiIgaWQ9Im5hdmlnYXRpb24iPg0KICAgIDx1bCBjbGFzcz0ibmF2Q29udGVudCI+DQogICAgICAgIDxsaT4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdlRyZWUiPg0KICAgICAgICAgICAgICAgIDxoMiBvbmNsaWNrPSJqZ2RvYy5OYXZQYW5lbC5jbGlja2VkKGV2ZW50KSI+DQogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6amdkb2MuTmF2UGFuZWwuZHVtbXkoKSI+TmF2aWdhdGlvbjwvYT4NCiAgICAgICAgICAgICAgICA8L2gyPg0KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2Q29udGVudDIiPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJvcGVuQWxsIiBocmVmPSJqYXZhc2NyaXB0OmpnZG9jLk5hdlRyZWUub25PcGVuQWxsKCkiPk9wZW4gQWxsPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJjbG9zZUFsbCIgaHJlZj0iamF2YXNjcmlwdDpqZ2RvYy5OYXZUcmVlLm9uQ2xvc2VBbGwoKSI+Q2xvc2UgQWxsPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBpZCA9ICJjb250ZW50IiBjbGFzcz0iY29udGVudHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2FkaW5nLi4uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9saT4NCiAgICA8L3VsPg0KICAgIDx1bCBjbGFzcz0ibmF2Q29udGVudCBjbG9zZWQiPg0KICAgICAgICA8bGk+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWxlVHJlZSI+DQogICAgICAgICAgICAgICAgPGgyIG9uY2xpY2s9ImpnZG9jLk5hdlBhbmVsLmNsaWNrZWQoZXZlbnQpIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDpqZ2RvYy5OYXZQYW5lbC5kdW1teSgpIj5GaWxlczwvYT4NCiAgICAgICAgICAgICAgICA8L2gyPg0KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2Q29udGVudDIiPg0KICAgICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZmlsZS1vMi9kb20vY29sbGlkZS5qcy5odG1sIj5vMi5kb20uY29sbGlkZS5qczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS9jb29yZGluYXRlLmpzLmh0bWwiPm8yLmRvbS5jb29yZGluYXRlLmpzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS9yYW5nZS5qcy5odG1sIj5vMi5kb20ucmFuZ2UuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2ZpbGUtbzIvZG9tL3RyYXZlcnNlL2NvcmUuanMuaHRtbCI+bzIuZG9tLnRyYXZlcnNlLmNvcmUuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS90cmF2ZXJzZS9lbmRzLmpzLmh0bWwiPm8yLmRvbS50cmF2ZXJzZS5lbmRzLmpzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2ZpbGUtbzIvZG9tL3RyYXZlcnNlL25leHQuanMuaHRtbCI+bzIuZG9tLnRyYXZlcnNlLm5leHQuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS90cmF2ZXJzZS9udGguanMuaHRtbCI+bzIuZG9tLnRyYXZlcnNlLm50aC5qczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2ZpbGUtbzIvZG9tL3RyYXZlcnNlL3BhcmVudC5qcy5odG1sIj5vMi5kb20udHJhdmVyc2UucGFyZW50LmpzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZmlsZS1vMi9kb20vdHJhdmVyc2UvcGFyZW50cy5qcy5odG1sIj5vMi5kb20udHJhdmVyc2UucGFyZW50cy5qczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2ZpbGUtbzIvZG9tL3RyYXZlcnNlL3ByZXYuanMuaHRtbCI+bzIuZG9tLnRyYXZlcnNlLnByZXYuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS90cmF2ZXJzZS9zaWJsaW5ncy5qcy5odG1sIj5vMi5kb20udHJhdmVyc2Uuc2libGluZ3MuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2RvbS90cmF2ZXJzZS92YWxpZGF0ZS5qcy5odG1sIj5vMi5kb20udHJhdmVyc2UudmFsaWRhdGUuanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2V2ZW50L2N1c3RvbS5qcy5odG1sIj5vMi5ldmVudC5jdXN0b20uanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL2pzb25wY29udHJvbGxlci9jb3JlLmpzLmh0bWwiPm8yLmpzb25wY29udHJvbGxlci5jb3JlLmpzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL21ldGEvcHJvZHVjdGlvbi5qcy5odG1sIj5vMi5tZXRhLnByb2R1Y3Rpb24uanM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9maWxlLW8yL25vZGVqcy9mb290ZXIuanMuaHRtbCI+bzIubm9kZWpzLmZvb3Rlci5qczwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2ZpbGUtbzIvbm9kZWpzL2hlYWRlci5qcy5odG1sIj5vMi5ub2RlanMuaGVhZGVyLmpzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9saT4gICAgICAgDQogICAgPC91bD4NCiAgICA8dWwgY2xhc3M9Im5hdkNvbnRlbnQgY2xvc2VkIj4NCiAgICAgICAgPGxpPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kdWxlVHJlZSI+DQogICAgICAgICAgICAgICAgPGgyIG9uY2xpY2s9ImpnZG9jLk5hdlBhbmVsLmNsaWNrZWQoZXZlbnQpIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDpqZ2RvYy5OYXZQYW5lbC5kdW1teSgpIj5Nb2R1bGVzPC9hPg0KICAgICAgICAgICAgICAgIDwvaDI+DQogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXZDb250ZW50MiI+DQogICAgICAgICAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9hamF4L21vZHVsZS1jb3JlLmh0bWwiPmFqYXguY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9hamF4L21vZHVsZS1leHRlbmQuaHRtbCI+YWpheC5leHRlbmQ8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvYWpheGNvbnRyb2xsZXIvbW9kdWxlLWNvcmUuaHRtbCI+YWpheGNvbnRyb2xsZXIuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9hamF4c3RhdGUvbW9kdWxlLWNvcmUuaHRtbCI+YWpheHN0YXRlLmNvcmU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvY29sbGVjdGlvbi9tb2R1bGUtY29yZS5odG1sIj5jb2xsZWN0aW9uLmNvcmU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvbW9kdWxlLWNvbnZlcnQuaHRtbCI+Y29udmVydDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9jb29raWUvbW9kdWxlLWNvcmUuaHRtbCI+Y29va2llLmNvcmU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvbW9kdWxlLWNvcmUuaHRtbCI+Y29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9jb3JlL21vZHVsZS1tZXRhLmh0bWwiPmNvcmUubWV0YTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9kYXRlL21vZHVsZS1jb3JlLmh0bWwiPmRhdGUuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9kZWJ1Z2dlci9tb2R1bGUtY29yZS5odG1sIj5kZWJ1Z2dlci5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtY2xhc3MuaHRtbCI+ZG9tLmNsYXNzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtY29uc3RhbnRzLmh0bWwiPmRvbS5jb25zdGFudHM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL21vZHVsZS1jb3JlLmh0bWwiPmRvbS5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtZGltZW5zaW9uLmh0bWwiPmRvbS5kaW1lbnNpb248L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL21vZHVsZS1mb3JtLmh0bWwiPmRvbS5mb3JtPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtbG9hZC5odG1sIj5kb20ubG9hZDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9kb20vbW9kdWxlLW1vZGlmeS5odG1sIj5kb20ubW9kaWZ5PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtcmVhZHkuaHRtbCI+ZG9tLnJlYWR5PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2RvbS9tb2R1bGUtc2Nyb2xsLmh0bWwiPmRvbS5zY3JvbGw8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL21vZHVsZS1zdHlsZS5odG1sIj5kb20uc3R5bGU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL21vZHVsZS10cmF2ZXJzZS5odG1sIj5kb20udHJhdmVyc2U8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL3RyYXZlcnNlL21vZHVsZS1jaGlsZC5odG1sIj5kb20udHJhdmVyc2UuY2hpbGQ8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZG9tL3RyYXZlcnNlL21vZHVsZS1jaGlsZHJlbi5odG1sIj5kb20udHJhdmVyc2UuY2hpbGRyZW48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvbW9kdWxlLWVmZmVjdC5odG1sIj5lZmZlY3Q8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZXZlbnQvbW9kdWxlLWNvbnN0YW50cy5odG1sIj5ldmVudC5jb25zdGFudHM8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvZXZlbnQvbW9kdWxlLWNvcmUuaHRtbCI+ZXZlbnQuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9ldmVudC9tb2R1bGUtZXh0ZW5kLmh0bWwiPmV2ZW50LmV4dGVuZDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9tb2R1bGUtZXh0ZW5kLmh0bWwiPmV4dGVuZDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9qc29ucC9tb2R1bGUtY29yZS5odG1sIj5qc29ucC5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL2pzb25wc3RhdGUvbW9kdWxlLWNvcmUuaHRtbCI+anNvbnBzdGF0ZS5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL21ldGhvZC9tb2R1bGUtY29yZS5odG1sIj5tZXRob2QuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9tZXRob2QvbW9kdWxlLWV2ZW50Lmh0bWwiPm1ldGhvZC5ldmVudDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9tZXRob2QvbW9kdWxlLWluaGVyaXQuaHRtbCI+bWV0aG9kLmluaGVyaXQ8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvbWV0aG9kL21vZHVsZS1yZXBlYXQuaHRtbCI+bWV0aG9kLnJlcGVhdDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9tZXRob2QvbW9kdWxlLXRpbWVyLmh0bWwiPm1ldGhvZC50aW1lcjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9tZXRob2QvbW9kdWxlLXRyYW5zcG9zZS5odG1sIj5tZXRob2QudHJhbnNwb3NlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL29iamVjdC9tb2R1bGUtY29yZS5odG1sIj5vYmplY3QuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9xdWVyeXN0cmluZy9tb2R1bGUtY29yZS5odG1sIj5xdWVyeXN0cmluZy5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL3NvcnRkZWxlZ2F0ZS9tb2R1bGUtY29yZS5odG1sIj5zb3J0ZGVsZWdhdGUuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9zdHJpbmcvbW9kdWxlLWNvcmUuaHRtbCI+c3RyaW5nLmNvcmU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvc3RyaW5nL21vZHVsZS1lbmNvZGUuaHRtbCI+c3RyaW5nLmVuY29kZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9zdHJpbmcvbW9kdWxlLXN0cmlwLmh0bWwiPnN0cmluZy5zdHJpcDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC9zdHJpbmcvbW9kdWxlLXRyYW5zZm9ybS5odG1sIj5zdHJpbmcudHJhbnNmb3JtPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL3N1cHBvcnRzL21vZHVsZS1jb3JlLmh0bWwiPnN1cHBvcnRzLmNvcmU8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0icGh5c2ljYWwvdGVtcGxhdGUvbW9kdWxlLWNvcmUuaHRtbCI+dGVtcGxhdGUuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC90aW1lci9tb2R1bGUtY29yZS5odG1sIj50aW1lci5jb3JlPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InBoeXNpY2FsL3RyeS9tb2R1bGUtY29yZS5odG1sIj50cnkuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC91bml0L21vZHVsZS1jb3JlLmh0bWwiPnVuaXQuY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC92YWxpZGF0aW9uL21vZHVsZS1jb3JlLmh0bWwiPnZhbGlkYXRpb24uY29yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJwaHlzaWNhbC92YWxpZGF0aW9uL21vZHVsZS1yZWdleHAuaHRtbCI+dmFsaWRhdGlvbi5yZWdleHA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2xpPiAgICAgICANCiAgICA8L3VsPg0KPC9kaXY+ICANCiAgICANCgkJPC9kaXY+CQ0KCTwvYm9keT4NCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogICAgICAgIGpnZG9jLlNlYXJjaGVyLnN0YXJ0KCk7DQogICAgICAgIGpnZG9jLk5hdlRyZWUuaW5pdGlhbGl6ZSgibzIuVmFsaWRhdGlvbiIpOw0KICAgIDwvc2NyaXB0PgkJCQ0KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpzaW5kZXguanMiPg0KICAgIDwvc2NyaXB0Pg0KPC9odG1sPg0K",
                "headers": {
                    "Accept-Ranges": "bytes",
                    "Last-Modified": "Fri, 07 Nov 2014 21:13:49 GMT",
                    "Content-Length": "70536",
                    "Date": "Fri, 07 Nov 2014 21:13:58 GMT",
                    "Content-Type": "text/html; charset=utf-8"
                },
                "cookies": [],
                "mimeType": "HTML",
                "host": "localhost",
                "protocol": "http",
                "port": 9999,
                "inScope": false,
                "toolFlag": 16962,
                "referenceID": 0,
                "messageType": "response"
            },
            "messageType": "requestResponse"
        }
    ],
    "inScope": true,
    "messageType": "scanIssue"
}